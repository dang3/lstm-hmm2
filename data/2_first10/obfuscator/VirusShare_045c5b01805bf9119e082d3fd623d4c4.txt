cmp
pop
insl
jnp
aaa
insb
sbb
cmpsl
insb
ret
jo
push
cmpsl
arpl
or
jae
inc
and
fisttpll
fildl
mov
mov
enter
test
cmp
arpl
pop
push
addr16
sarb
shll
cwtl
jg
rorb
std
push
xchg
std
dec
movsl
sub
sbb
dec
or
cmp
fisubrl
pop
adc
add
mov
loope
push
jp
cmpsb
inc
mov
jae,pt
xor
ljmp
sbb
ds
xchg
push
scas
into
call
sahf
pop
ljmp
add
out
das
fld
xor
dec
scas
incb
popf
xchg
cmp
sbb
fstpt
xor
dec
sub
cmpsl
sub
mov
int
adc
mov
adc
and
jecxz
repz
dec
sbb
adc
or
mov
dec
sbb
sub
inc
daa
xchg
pop
cmpsl
jge
les
fst
xchg
test
into
xor
xlat
cmp
sbb
adc
dec
lock
jp
or
cmp
jbe
cli
add
popf
and
mov
shrl
mov
adc
pop
jbe
ds
fimuls
pushf
jae
mov
push
push
popf
into
lea
lea
jmp
in
mov
inc
sbb
test
or
or
data16
mov
ss
loop
or
jns
sbb
jmp
cmp
inc
lcall
dec
ja
jo
push
lods
cltd
test
adc
clc
loopne
iret
dec
popf
divb
in
jbe
xor
clc
or
dec
mov
sbb
or
in
and
nop
pop
mov
jbe
sbb
mov
orl
fistpll
jb
mov
and
mov
loope
lock
mov
sbb
test
mov
sbbl
cli
lret
mov
xor
nop
mov
inc
cmpsl
cmp
cmpsb
or
add
mov
cmp
jbe
mov
jbe
and
sbb
sub
adc
in
stos
add
loopne
sub
sub
and
movsb
test
enter
push
mov
pop
repnz
lret
dec
or
and
pop
xchg
lods
repz
pop
jg
sbb
scas
adc
repnz
push
js
sub
adc
ds
sahf
xchg
sub
cmp
leave
testb
addl
sbb
push
imulb
mov
xor
scas
psraw
addr16
movsb
push
lahf
pop
inc
jg
out
lods
xchg
fwait
or
fs
pop
divl
ja
addr16
movsl
mov
out
pushl
scas
outsl
out
lahf
ret
or
shr
dec
icebp
sbbb
sub
das
out
pop
cmpsl
mov
mov
push
hlt
push
lcall
idivl
mov
mov
dec
insl
mov
lea
xchg
call
cmpsb
pop
adc
sub
adc
inc
pusha
daa
cmp
aas
mov
mov
pop
and
in
frstor
or
push
mov
addr16
lahf
mov
ds
sbb
sub
enter
push
jno
cmp
gs
mulb
cmp
das
js
addr16
pop
pop
jmp
stc
movsb
jne
out
in
clc
jge
sbb
call
ficomps
imul
dec
mov
movsl
leave
ljmp
cs
gs
ror
add
mov
das
pop
push
dec
pop
push
insl
push
seta
xchg
leave
lods
out
ss
xchg
adc
outsl
out
mov
mov
push
jb
loope
jb
or
and
pushf
cmp
inc
adc
lods
and
or
test
mov
cmc
stc
jmp
jno
jae
adc
iret
and
and
mov
and
les
shll
and
pop
inc
push
rorb
push
cmp
into
xchg
mov
push
cs
repz
and
jns
cmc
rcrb
push
stos
inc
sahf
cld
adc
and
movsl
lea
sbb
rorb
sub
fcompl
adc
loope
aad
sbb
aam
rcr
jae
js
cmc
out
loopne
inc
sahf
cld
mov
mov
xchg
pop
lds
cmp
loop
cmc
testl
add
mov
xchg
xchg
push
hlt
sbb
je
pusha
outsb
and
mov
mov
xlat
dec
data16
hlt
mov
cmc
fdivrl
insl
mov
push
movsl
cmc
loop
pop
in
js
xchg
jle
cmp
shr
jae
and
push
lret
ret
xchg
arpl
sbb
dec
rcl
sub
movsl
icebp
lea
jne
push
mov
pushfw
popw
dec
sbb
adc
mov
sub
jb
stc
stc
xor
stc
clc
jmp
lea
jae
bt
xor
cmp
bts
mov
neg
test
mov
xor
lea
rol
setns
mov
cmc
pusha
clc
xor
add
jo
stc
stc
repnz
pushf
movl
jmp
cmc
bt
add
clc
cmp
mov
and
rcl
mov
test
cmp
movb
lea
jbe
rcr
bswap
mov
rcl
ror
add
bswap
rcl
mov
shld
bts
add
bswap
pushf
shrd
movl
pushf
clc
mov
jmp
pusha
call
call
dec
sub
sbb
lret
lcall
xchg
jp
mov
or
in
cmp
jle
xchg
or
pop
inc
sbbl
cmp
les
inc
dec
out
cmp
mov
call
inc
adc
xchg
and
mov
adc
rol
fsts
cmpsl
pop
fwait
out
mov
mov
mov
lds
xchg
lods
jne
xor
mov
or
mov
loop
aaa
push
adc
cmp
inc
cwtl
and
xorb
fcom
clc
push
and
sarb
in
cmp
into
ret
psubd
test
in
push
xor
mov
test
les
mov
ss
ss
and
idivl
adc
popf
imul
jns
mov
jns
in
scas
mov
fs
je
inc
test
aam
movsb
sbb
inc
js
leave
mov
fidivrs
pushf
lods
xor
neg
xor
bt
ror
rol
shl
bt
xor
ror
push
call
add
call
push
inc
lea
dec
inc
test
neg
ror
xor
xchg
daa
rcl
lahf
rol
mov
clc
mov
push
stc
mov
rcr
lea
bt
bsr
mov
pushf
cmp
stc
cmc
sub
mov
rep
pop
bswap
not
pop
push
mov
pushf
pusha
lea
jmp
push
lea
jae
cmc
cmp
pushf
lea
ja
jmp
not
call
dec
mov
pop
adc
inc
and
mov
sub
les
int3
mov
outsl
js
mov
inc
xchg
movsb
mov
inc
xor
call
push
push
sbb
and
aas
insb
mov
pop
cli
iret
daa
jg
in
add
popf
add
pop
shlb
in
rorb
or
je
or
les
sbb
fs
or
test
inc
sbb
adc
adc
test
mov
call
loopne
cwtl
js
or
je
test
mov
push
lea
std
xor
dec
push
dec
inc
lods
adc
push
jmp
insb
in
fidivrl
inc
imul
adc
mov
cwtl
push
sub
cmpsl
jg
jp
loope
sub
inc
cwtl
shlb
cli
xchg
add
ljmp
push
lods
push
insb
mov
xor
pop
add
sub
shrl
mov
lret
inc
adc
xor
jae
popf
repnz
pop
or
aad
sub
inc
sti
and
aam
xchg
repnz
pop
inc
int
or
shl
sub
inc
jp
mov
sbbl
lea
aam
into
add
and
jecxz
scas
clc
xchg
out
pop
mov
test
cmp
xchg
into
add
push
xchg
sbb
imul
mov
ljmp
popa
pop
lcall
out
mov
cmpsb
jbe
inc
inc
mull
fdiv
rcl
movsl
and
sub
push
push
push
inc
into
ds
outsb
ficoms
jg
enter
mov
popf
adc
cli
push
fsubl
and
xchg
scas
xchg
mov
xor
test
and
or
clc
xchg
sub
jp
mov
mov
rcrb
mov
repnz
add
pop
js,pn
pushf
in
aam
add
outsl
fcomps
adc
fs
mov
inc
cmp
andb
pop
pushf
xchg
or
clc
andb
and
mov
xor
jb
lret
test
aad
mov
stos
mov
mov
rolb
sbb
imul
or
imull
adc
mov
xor
push
xchg
push
push
mov
out
pop
mov
lahf
and
aas
and
sub
out
div
aaa
scas
out
ja
incl
pop
adc
fbld
xchg
pop
lds
call
mov
lock
pop
clc
leave
xor
cmp
dec
dec
sub
cmovg
xlat
lahf
ja
lahf
mov
rcrl
es
sub
adc
cltd
lods
movsl
xor
gs
cmp
or
xorb
xor
push
test
mov
inc
xchg
inc
repnz
cmp
jmp
into
sub
xchg
shl
pop
ror
outsl
inc
push
push
icebp
clts
fists
inc
ss
loope
jmp
scas
popf
mov
loopne
mov
xor
ljmp
inc
lahf
mov
jg
out
cmpsl
out
out
aas
xlat
or
inc
fidivl
lea
call
jmp
out
xor
and
sub
inc
sbb
add
pop
pusha
jmp
mov
pop
pop
and
hlt
cli
mov
or
xor
cld
xor
jmp
xchg
test
test
cmpsb
leave
lods
sbb
loope
xchg
shlb
ret
add
sbb
inc
cmp
jp
cmp
outsl
pushf
imul
xchg
xor
mov
testl
std
ljmp
clc
test
sbb
ror
pop
cmpsb
subl
lret
and
push
add
movsl
and
sub
inc
out
iret
out
jg
pop
aas
pop
das
insl
xor
adc
rorb
sub
push
cld
pusha
and
inc
out
popa
mov
clc
jno
movsl
sbb
cs
or
rcll
ret
mov
cmp
fimuls
sbb
xor
outsb
jmp
test
or
mov
jp
loopne
mov
sub
xor
push
and
add
addb
mov
xor
dec
adc
sub
sahf
cmpsb
jbe
scas
jbe
pop
pop
push
ss
lret
out
es
sub
lds
adc
insb
pusha
xor
mov
pop
mov
push
sbb
sbb
out
clc
inc
dec
stc
pop
xlat
cmp
xor
test
mov
mov
leave
and
and
jb
test
xchg
in
leave
mov
iret
sahf
and
arpl
inc
inc
ljmp
ret
outsb
cli
out
xorb
in
inc
xor
cmc
pop
cmpsb
int
outsb
inc
lret
jnp
and
and
sti
imul
or
pop
pop
and
addb
cltd
cmp
inc
add
popa
pop
mov
jecxz
loope
push
mov
and
cld
cmpl
xchg
xor
push
sbb
stc
push
scas
push
sub
jecxz
and
addb
inc
ja
pop
lret
stos
mov
testl
subb
xchg
adc
rcrb
sbb
mov
lea
js
pop
jns
ret
lods
aad
jecxz
jmp
fs
out
and
fstps
mov
mov
mov
rorl
dec
jle
sbb
jo
in
scas
leave
lcall
addb
mov
add
mov
or
ds
cmp
push
push
mov
int3
or
movsl
js
outsb
xchg
pop
xchg
iret
mov
cmpb
sub
push
inc
sti
addr16
scas
and
fisubrl
sub
out
sub
lret
sub
pop
jno
lret
es
addl
mov
adcb
nop
sbb
pop
push
mov
adc
adc
jo
add
pusha
sub
and
xchg
orb
adc
out
sbb
into
insb
xor
enter
inc
sti
or
or
push
movsb
mov
shll
push
inc
popf
mov
add
mov
push
mov
sbb
cmpb
int
fimull
jle
mov
pusha
not
cmp
adc
jae
cmp
int
push
xchg
or
jns
cwtl
test
sbb
push
pop
mov
cwtl
jb
mov
cli
addb
sahf
sub
fwait
dec
cmpb
out
in
ljmp
mov
leave
jns
mov
pop
cmp
imul
repz
sub
push
xchg
mov
inc
mov
jl
arpl
jge
push
mov
andl
ds
stos
rsqrtps
jns
or
int
andb
fsts
orl
pop
mov
xchg
lcall
add
sbb
mov
xchg
test
daa
cmp
sarb
das
xchg
mov
sub
jo
cmc
orb
bound
addl
mov
jge
stos
scas
add
aad
cmp
pop
popa
mov
dec
lcall
xchg
call
in
mov
cli
mov
mov
add
icebp
push
jns
lea
add
cmp
jl
push
nop
lret
sbb
xor
xchg
mov
cmc
out
push
dec
popf
jmp
lea
mov
in
adc
popa
aaa
not
cmp
sub
fsts
or
subl
rorb
insb
mov
jmp
inc
cmp
sahf
or
pop
pop
mov
mov
cwtl
push
and
test
and
lret
lret
xchg
add
pop
ret
jnp
jns
js
bnd
xorb
jne
xchg
or
and
addl
mov
enter
xor
dec
mov
adc
sub
mov
pushf
ret
orb
mov
cmpsb
cmp
pop
dec
andb
test
bound
or
mov
leave
cmp
in
divl
sub
jle
mov
cmpb
aaa
fdivr
ret
cmp
xor
xchg
push
addb
mov
les
pop
pop
xor
paddsb
sub
aam
test
scas
rcrb
xor
cmpsb
lock
jo
incb
loopne
xlat
cmpb
and
adc
xor
stos
scas
clc
push
test
mov
orb
jle
fs
mov
lock
test
push
rcrb
cld
xchg
sub
xchg
xorb
and
inc
testl
cmp
sbbb
xchg
lea
adc
loope
outsb
movl
test
imul
inc
xchg
in
test
mov
dec
push
mov
and
cld
pop
adcb
call
mov
test
jp
shlb
xlat
mov
lods
or
int3
test
jno
cli
in
push
aam
dec
cld
push
pusha
jbe
aas
sbb
pop
rorl
cmpb
out
in
add
mov
add
xchg
loopne
fimull
xchg
sbbb
sbb
ficoml
ret
stos
jno
loope
stos
pop
push
xchg
adcb
jnp
pop
lea
es
shl
xchg
mov
in
push
pusha
sbb
sub
js
mov
andb
movsl
and
repz
jbe
aaa
dec
or
add
rcr
inc
lahf
add
test
xchg
sbb
mov
push
mov
cld
xchg
and
mov
sub
cli
xchg
std
movsb
leave
cmp
sub
mov
jg
adc
addr16
test
data16
jae
cmpb
fs
addl
mov
call
mov
mov
add
pop
mov
sub
adc
js
stos
mov
jb
inc
xchg
sbbb
pop
inc
loope
fcompl
std
or
rcll
mov
subb
fs
adc
sub
into
lahf
add
adc
xchg
push
neg
cmp
shll
in
pushl
sub
push
arpl
mov
push
addb
push
mov
push
orb
lahf
fs
dec
mulb
out
lods
addb
push
ljmp
xchg
aam
mov
out
sbbb
sbb
out
rclb
pop
dec
test
mov
xchg
mov
mov
aas
adc
test
into
or
push
sub
enter
fdivs
mov
icebp
push
ret
nop
mov
fstpl
pop
cmp
cld
nop
cmpsb
add
jo
cmpsl
scas
mov
leave
lods
imul
pusha
cmpsb
or
lcall
inc
roll
cmpb
daa
not
stos
xchg
lret
sub
aas
xor
pushf
sbb
xchg
stos
and
sbb
lock
fwait
andl
push
test
and
cmp
test
xchg
movsb
aaa
add
adc
decl
add
add
add
add
sbb
inc
adc
push
cmp
addl
int
jae
aas
and
roll
stc
jle
test
out
pusha
shl
hlt
fwait
int
idivb
inc
ret
ja
repz
enter
in
pslld
fcomip
into
aam
mov
lock
shr
mov
hlt
cmp
push
cli
in
aaa
movsb
add
je
xor
xor
jecxz
sbb
cmc
cli
pushf
ret
xlat
std
ja
loop
lods
aam
in
push
repnz
call
lar
clc
aas
push
lock
iret
loop
sahf
jecxz
repz
fmuls
mov
cmp
mov
mov
cmp
cmpsl
cld
test
rol
out
inc
mov
or
mov
fdivrs
test
nop
test
xchg
adc
and
imul
inc
cld
enter
mov
clc
add
inc
test
mov
adc
mov
lds
inc
inc
scas
adc
dec
mov
jl
or
fs
xchg
adc
mov
mov
jecxz
mov
mov
iret
pop
aas
mov
imul
leave
lock
dec
xor
push
inc
mov
aas
bound
loopne
mov
add
fldl
nop
loope
repnz
mov
cwtl
out
adc
test
cltd
adc
ljmp
icebp
test
mov
dec
mov
adc
mov
mov
loope
push
add
sti
mov
adc
mov
pop
lahf
aas
loop
jne
cmp
js
bound
mov
inc
xchg
mov
in
xchg
mov
mov
int3
pop
cmovo
pop
mov
rorl
cmp
push
cmp
mov
push
cmp
rorl
popa
xorb
mov
ds
mov
outsb
cmpb
inc
test
orb
cmp
inc
pop
es
enter
push
mov
mov
mov
repz
std
les
mov
push
sbb
add
test
pop
push
ja
loop
sbb
sbb
push
mov
jecxz
leave
shlb
push
cmpl
cmp
sbb
pusha
popf
or
add
inc
sbb
lods
daa
out
mov
shrb
or
leave
lock
push
mov
jp
lea
jp
popa
jne
aas
mov
mov
cwtl
enter
mov
leave
mov
mov
int3
test
adc
out
sub
xchg
cmpsb
clc
leave
mov
mov
ljmp
sbb
cld
and
nop
mov
leave
jo
shlb
jnp
mov
imul
mov
movsb
rcll
cwtl
xchg
nop
aam
nop
sub
nop
mov
lds
xor
aas
lock
xchg
jmp
lods
clc
imul
faddp
imul
les
stos
test
mov
mov
je
test
imul
xor
scas
shrb
xchg
jno
lret
or
cmp
outsb
or
lret
xor
sub
in
jmp
pop
cmpsb
jbe
fists
jne
mov
push
cmpl
or
mov
jp
adc
cmp
sub
rcl
cmpsb
jmp
inc
dec
aam
imul
test
push
push
imul
lock
xlat
shlb
push
inc
sub
in
int
pop
es
cmc
xchg
ja
imul
nop
outsb
cmp
shl
pop
sbb
push
xor
inc
and
movsb
out
out
dec
sarb
jno
mov
test
xor
pop
adc
in
out
lahf
aam
jno
xchg
xor
into
stos
stc
jne
or
push
inc
aam
into
loop
lret
and
rcll
push
jns
dec
xor
add
mov
mov
mov
inc
ja
lea
arpl
add
xchg
pop
lods
lret
mov
inc
nop
mov
add
lods
adc
mov
rorb
mov
shlb
xor
xchg
mov
cmpsb
dec
aaa
rorb
inc
imul
xchg
push
and
popa
or
mov
jo
xor
scas
loope
lock
inc
fs
imul
push
and
jecxz
stos
and
add
dec
cmp
fdivrs
daa
scas
mov
test
mov
inc
addr16
mov
sub
push
dec
daa
xor
xor
stos
dec
jae
and
rcl
cmc
imul
pushf
cmc
fcomip
fdivrs
mov
cmp
cmc
ret
imul
pop
mov
in
nop
pushf
hlt
inc
mov
jecxz
mul
loope
test
mov
lret
in
fiaddl
hlt
fs
mov
lds
test
adc
es
add
inc
jl
and
mov
mov
cmp
push
sub
ret
adcb
ja
inc
adc
scas
scas
shll
cmpsb
into
push
in
gs
push
dec
orb
push
ds
adc
push
inc
mov
out
out
out
sub
and
int3
push
inc
mov
aam
out
jmp
xchg
xchg
std
orb
fldl
mov
ficomps
mov
mov
mov
repnz
repz
int3
shrl
scas
ret
xor
xchg
movb
mov
ret
loope
shl
lcall
add
add
jb
enter
lea
movsb
ficoml
insl
out
mov
jg
cmp
pop
cli
stos
orb
mov
xor
dec
mov
xchg
aam
jmp
xchg
movsl
iret
in
mov
push
sarl
jne
cmc
imul
xchg
stos
mov
push
xchg
lea
movsb
les
inc
mov
paddw
lahf
jp
add
ja
sub
aaa
clc
add
rcrl
xchg
arpl
add
add
pop
or
rcll
mov
fmuls
jno
sbb
rorb
inc
shr
jecxz
les
mov
addl
out
mov
lock
test
xchg
rorl
mov
xor
mov
test
call
rclb
stos
call
xchg
xchg
pop
push
or
lea
mov
inc
xor
sbb
pop
arpl
mov
dec
insb
iret
xchg
sti
xchg
bound
xchg
adc
subb
lds
scas
leave
cmpsl
ret
int3
es
rcll
test
inc
mov
roll
mov
rclb
xchg
in
out
rcll
test
jns
inc
aaa
sbb
inc
adc
aam
test
push
cmc
lea
xchg
mov
inc
xchg
cmc
out
mov
jp
lret
inc
push
test
mov
mov
stos
mov
movsb
push
loope
stc
mov
inc
push
inc
xchg
stos
rorb
test
inc
push
mov
push
dec
inc
fwait
in
pusha
mov
or
rcr
pop
test
lea
xlat
les
les
inc
or
imul
or
iret
inc
lds
outsb
test
inc
sbb
shr
cmp
push
inc
xchg
js
lock
cltd
or
cmp
call
jne
ds
pushf
xorb
les
mov
push
mov
mov
fwait
inc
mov
je
out
xchg
xlat
cmpl
push
mov
shl
adc
adc
insb
mov
dec
std
insb
mov
shll
sbb
jmp
test
in
je
push
jb
in
dec
nop
push
mov
aad
xchg
ret
mov
dec
xchg
nop
or
lods
jl
push
ret
mov
cmp
add
js
and
cwtl
je
jo
les
ret
xchg
hlt
arpl
daa
push
shr
nop
je
orb
in
test
push
push
adc
mov
lret
mov
mov
shrb
or
insl
xchg
jb
xchg
mov
push
or
imulb
add
out
call
mov
pop
push
ret
xchg
pop
xor
mov
mov
mov
pop
xor
call
mov
stc
or
fsts
cltd
fidivs
outsb
push
mov
mov
cmp
or
movsl
cltd
lret
mov
and
push
repz
bound
inc
xchg
jl
mov
mov
in
mov
xor
xor
mov
test
add
sbbl
test
ret
xor
in
mov
mov
repz
cwtl
add
mov
test
dec
iret
mov
aas
mov
aaa
mov
xchg
ljmp
dec
test
adc
shlb
or
cmpsb
fcoms
and
and
adc
cwtl
mov
cmc
subl
mov
nop
add
xchg
jno
jno
jg
inc
je
add
jo
mov
pop
jmp
add
shrb
jl
iret
cmpsb
pcmpgtb
pushf
sub
and
out
nop
inc
subb
sarl
inc
dec
mov
jge
jl
nop
mov
cld
andb
mov
cmpl
shrl
icebp
jg
flds
inc
jle
cmpsb
cmc
imul
js
or
out
fmuls
mov
outsl
jae
enter
cmpsl
fmuls
mov
out
xchg
xchg
jp
jl
dec
movsl
cmp
mov
stos
push
mov
lahf
mov
xchg
mov
pop
fsubs
loope
addr16
clc
leave
stc
test
das
mov
add
es
je
call
fnstsw
faddl
shlb
push
push
sarl
cmpsb
push
rorb
cmp
pop
fadd
rcl
or
setno
nop
mov
inc
rcl
sub
enter
fisttpl
in
mov
mov
aam
mov
fstp
sub
stc
or
movsl
inc
jmp
int3
cmp
clc
nop
inc
xchg
pop
lods
mov
int3
or
lods
mov
push
lcall
mulb
std
or
cs
into
gs
mov
pusha
add
or
xor
and
xchg
push
test
je
fistl
mov
mov
pop
push
mov
ficomps
mov
sahf
xor
and
les
xor
call
push
jge
and
adc
cmc
xchg
call
or
rcr
roll
cmpsb
mov
push
and
or
push
movsb
xchg
jle
fisubrl
mov
dec
in
out
std
test
jle
test
sarb
dec
mov
mov
test
mov
xlat
xchg
mov
shll
dec
adc
adcb
js
push
adc
inc
cs
cmp
dec
sub
sbb
not
sub
or
outsl
int3
pop
xchg
fldl
mov
lret
dec
cwtl
pusha
mov
adc
nop
dec
jle
or
jl
fcmovbe
inc
int3
lods
mov
popf
mov
jo
js
lea
mov
je
push
sbb
int
sbb
call
xchg
loopne
nop
sub
test
dec
pushf
shrl
push
jp
rorb
mov
popa
fists
int3
xchg
sbb
imul
push
add
sbb
mov
lea
cmpsb
stc
out
lahf
xchg
mov
sub
push
xor
mov
adcb
jmp
inc
push
jns
hlt
ret
push
xor
push
mov
xor
jns
les
jecxz
and
jno
je
push
xor
js
ss
jb
adc
pop
push
ss
or
mov
inc
inc
js
pusha
and
xchg
cs
push
rolb
mov
mov
mov
jb
cmc
sub
movsb
cwtl
daa
pop
adc
out
xchg
push
sbb
jecxz
jnp
sub
xorb
call
mov
xchg
popa
imul
into
insb
call
cmp
aam
xchg
ret
jl
and
mov
cmp
and
mov
cmp
xchg
inc
lds
mov
ljmp
fxch
mov
adc
stos
mov
pop
cltd
iret
pop
adc
xchg
jl
add
addr16
sub
push
mov
ja
sarl
pop
sbb
pop
std
rorb
xor
adc
in
xchg
js
push
cld
dec
push
adc
outsb
mov
scas
dec
pop
loop
dec
inc
dec
pop
or
jns
jno
test
dec
pop
loop
dec
mov
pop
lds
or
jne
ret
aam
mov
xchg
jnp
enter
dec
pop
push
dec
add
sub
je
mov
pop
popa
mov
pop
je
mov
adc
pop
dec
push
mov
ljmp
push
cltd
pushf
push
cmp
dec
jmp
pop
pushf
fadd
rclb
hlt
xchg
or
rolb
mov
lods
repnz
rcrl
mov
jo
add
rorb
jge
imul
add
mov
cmp
dec
loope
inc
xchg
mov
push
mov
ret
nop
jbe
dec
xchg
into
cmpsb
inc
jg
push
lret
cmpsb
in
sub
loopne
bound
inc
hlt
dec
repz
stos
xchg
or
sarb
sbb
pop
fst
insb
xchg
icebp
add
pop
mov
inc
jno
mov
aad
scas
mov
pusha
jbe
xor
popf
mov
popl
xchg
ret
ret
jo
xchg
rorb
fsubrs
xchg
jl
add
mov
push
push
icebp
test
pop
cmpsl
cmp
fcomps
push
cmpsb
push
dec
ficoml
jb
shll
mov
aas
out
mov
xchg
mov
adcb
jp
or
movsl
mov
mov
mov
outsb
push
xor
jge
enter
inc
xchg
pop
mov
dec
les
mov
jae
popa
in
dec
mov
pop
enter
iret
or
jl
cmp
jmp
jl
outsl
push
enter
xchg
dec
inc
dec
insb
popa
mov
inc
adc
neg
cli
andb
iret
leave
pop
cmp
xchg
mov
jecxz
push
fs
enter
mov
mov
cmpsl
inc
mov
cli
mov
cmp
inc
dec
ret
outsb
inc
loop
mov
loop
and
cmp
or
dec
imul
xor
xchg
jg
jae
and
sahf
xor
lret
jne
int3
in
and
sahf
sbb
es
enter
or
popa
mov
cs
push
je
xlat
clc
jb
cld
adcb
hlt
mov
sub
pusha
je
mov
mov
insl
popf
ds
ds
ds
cmp
sahf
into
sbbl
xor
sbb
arpl
fiadds
dec
je
cmpl
jae
lds
xlat
stc
int
push
outsb
push
mov
scas
jae
push
popf
andb
filds
pop
jg
and
push
pushf
xchg
add
sbb
pop
pusha
mov
je
bound
enter
and
inc
cmc
orl
test
sbb
mov
adc
fsubs
mov
cmc
mov
push
xchg
data16
mov
mov
leave
ret
jl
xorl
mov
lea
or
mov
jl
inc
lret
jmp
mov
ds
push
xor
popa
inc
mov
sub
xchg
pop
or
inc
jle
mov
inc
add
in
mov
popa
inc
xor
mov
nop
daa
inc
or
jnp
lock
jno
xchg
xchg
into
fcmovu
sti
or
pop
adc
cmp
movb
ret
filds
and
inc
mov
clc
jmp
inc
mov
inc
lcall
pushl
add
inc
xchg
mov
in
sub
add
ret
lods
js
xchg
mov
push
ja
jl
lret
test
mov
mov
inc
mov
mov
push
xchg
and
mov
sub
cmp
aad
sbb
cli
mov
mov
push
mov
les
xlat
jl
test
out
mov
filds
fstpt
call
sbbl
fsubl
and
xor
rorb
int
dec
mov
jg
movsb
mov
or
ret
rcrb
stc
cwtl
or
mov
mov
gs
fwait
mov
sbb
jno
or
push
add
mov
cmpsb
nop
add
data16
in
rcl
add
es
rcrb
orl
movsl
push
add
jo
add
pop
and
int3
pop
xor
mov
inc
or
in
enter
test
sub
dec
or
mov
out
enter
clc
shrl
orb
rclb
mov
cmpsb
nop
imul
add
or
cwtl
aam
push
mov
fstl
dec
rcl
pop
in
dec
and
and
push
jae
fadds
sub
mov
dec
rolb
cmpsb
repz
cld
and
xorl
aaa
or
ret
push
int
ja
xchg
mov
rcrb
roll
inc
les
cmpsl
or
test
nop
cs
inc
add
cld
hlt
call
push
int3
ret
push
dec
xorl
add
test
add
adc
dec
neg
outsl
mov
popa
mov
xor
or
xor
push
jle
sbb
mov
mov
addb
add
jo
movsb
addr16
mov
cld
cmc
lea
movsl
jne
lds
orl
mov
mov
inc
adcl
mov
mov
cld
inc
leave
pop
scas
jmp
xchg
or
lock
push
adc
mov
add
mov
bound
add
push
movsb
lds
sub
test
mov
shr
lret
add
adc
push
lods
rol
sbb
ret
flds
adc
pop
sbb
imul
mov
mov
cwtl
or
adc
out
loope
daa
xchg
iret
mov
test
inc
sahf
cmc
push
or
xchg
fucom
sbb
mov
shlb
jnp
aaa
cltd
shrb
inc
pushl
xchg
orl
int
adc
stos
and
and
rcl
movsl
pop
test
and
xchg
repnz
and
or
xchg
mov
test
dec
int3
xlat
push
mov
rclb
mov
xchg
nop
mov
mov
rcl
mov
movsb
mov
pop
or
jo
or
dec
bound
outsb
lahf
mov
xchg
mov
call
inc
int3
imul
xchg
ror
popf
test
enter
or
pushf
xchg
dec
cmpsb
test
rcl
enter
jno
lahf
shl
leave
iret
mov
jmp
or
rcl
rcl
vorpd
arpl
aaa
test
xchg
mov
adc
in
nop
lods
pop
notl
xchg
mov
mov
fcomps
pusha
inc
xchg
mov
add
lahf
jg
inc
outsb
mov
mov
ficomps
cwtl
push
mov
js
xchg
sbb
out
mov
mov
mov
mov
repz
adcl
push
lods
cmpsl
das
push
gs
adc
mov
xlat
out
rcr
or
add
mov
add
mov
cwtl
cmc
jae
or
or
and
test
mov
sbb
pop
mov
xorb
in
sarb
out
lds
addr16
mov
mov
xchg
pushf
mov
int3
inc
fstp
jbe
in
push
lock
xor
xor
push
mov
cmc
mov
or
cmpsb
hlt
mov
clc
cmc
xchg
or
shr
or
adc
cld
dec
std
adc
mov
mov
jecxz
jecxz
pushf
fldl
cwtl
mov
mov
mov
in
mov
lahf
cmp
add
cmp
lods
cmp
cmp
mov
in
fiadds
and
mov
mov
pop
jl
sub
sub
sub
sub
dec
mov
sub
xchg
jecxz
shlb
or
sub
dec
dec
or
dec
lods
dec
pop
pop
dec
xchg
aam
nop
adc
cwtl
adc
dec
pop
xchg
sbb
cltd
sbb
mov
mov
mov
add
int
mov
mov
sub
pop
insl
int
mov
inc
insl
or
or
cltd
xchg
sbbb
mov
jp
jnp
imul
xchg
jl
jno
pop
or
out
rcl
or
or
jnp
mov
enter
adc
sbbb
mov
pusha
lahf
mov
add
test
je
jbe
ja
js
jns
push
xchg
insb
leave
fwait
insl
xchg
outsb
movsb
outsl
leave
jo
call
rclb
push
rolb
push
adc
push
mov
and
push
or
mov
xor
and
movl
xchg
mov
rorl
nop
sahf
or
cwtl
std
negl
mov
adcb
xchg
test
xchg
fisttpl
mov
adc
sub
imul
scas
imul
mov
addl
cmpb
mov
fidivs
loop
jb
xchg
aaa
lcall
test
je
test
lds
lahf
fwait
push
lock
js
push
cs
insl
std
movq
xchg
sub
push
cmp
mov
sub
ret
lret
or
dec
rcrb
xchg
adc
rcl
movsb
iret
in
cmp
inc
and
xchg
ljmp
lea
ss
mov
test
add
fs
mov
dec
push
nop
xor
out
stos
in
std
jb
enter
ljmp
loop
mov
cmp
rcr
xor
cmp
inc
mov
in
xchg
js
cmp
fs
dec
add
pusha
xchg
ret
insb
inc
jp
repnz
xchg
ret
je
pop
rcrb
aad
popa
xor
fimuls
mov
adc
xor
scas
xchg
cmp
sbb
cld
movsb
adc
push
lods
addb
xor
frstor
or
rcrl
add
insb
push
rclb
ret
xor
xchg
ja
push
scas
lods
sbbb
aas
adc
push
adc
in
mov
xchg
adc
xor
push
lret
fimuls
xor
push
jno
sbb
testb
pop
xchg
or
or
pusha
xor
xor
mov
lret
xchg
cmp
mov
jle
sti
imul
sub
je
sbb
mulb
mov
push
adc
adc
data16
inc
xor
repz
pop
or
pop
mov
ret
xchg
push
mov
ljmp
repnz
cwtl
mov
jmp
inc
push
push
xchg
pop
inc
xorl
test
std
mov
pushl
push
aas
or
je
mov
mov
test
das
mov
push
in
repz
cmp
scas
call
sarb
and
test
cwtl
mov
mov
repz
fldl
sbb
xchg
cmp
into
xchg
push
cmp
sub
xchg
cmp
mov
imul
or
push
xor
ret
test
mov
aam
sbb
out
aam
xchg
imul
push
outsb
xchg
mov
mov
mov
xchg
mov
addb
iret
pushl
xchg
mov
xchg
or
enter
lock
push
mov
popf
or
das
mov
jle
dec
jne
and
mov
das
lret
mov
xchg
and
jg
sub
or
pusha
lods
sub
dec
scas
cmpsl
push
scas
les
jp
scas
dec
ret
fimuls
in
je
in
sbb
sub
fs
es
sbb
dec
jl
push
or
mov
add
inc
sub
lods
mov
dec
mov
or
les
pusha
xor
ja
in
stos
lea
dec
movsl
test
rorl
mulb
stos
push
mov
les
js
ja
sub
xchg
aas
mov
repz
add
jl
fdivr
ffreep
rolb
insb
test
add
cmpsl
pop
sarl
daa
cmp
outsb
aad
enter
push
xchg
xchg
aam
adc
add
add
ss
mov
pop
inc
push
mov
scas
push
mov
mov
dec
mov
int3
clc
and
jl
cld
push
xor
add
jns
mov
into
mov
sub
push
js
mov
jecxz
insb
dec
into
dec
jae
pop
xchg
popf
sub
dec
imul
sahf
cli
pushf
xor
repz
pop
mov
mov
cmp
adc
out
pop
inc
loopne
add
stos
sbb
dec
add
mov
jne
mov
sbb
sarb
sub
das
bound
sub
cmp
cmp
or
sub
mov
inc
mov
test
and
mov
mov
push
stos
sar
xor
js
adc
std
movsb
jnp
add
andl
test
and
les
add
push
inc
xorb
jl
pop
xor
xchg
add
imul
lcall
inc
xchg
sbb
jbe
mov
sub
or
push
pop
pushf
adc
nop
xchg
orb
sbb
sub
sbbb
cld
mov
call
adc
push
es
rorl
xor
sub
add
fsubrl
icebp
loope
in
inc
jle
addr16
mov
inc
sarb
and
pop
test
xchg
and
mov
sub
dec
lahf
push
push
add
pop
in
rcrl
rcrb
test
imul
jns
mov
js
push
add
push
lea
sub
enter
jge
lea
inc
hlt
test
push
popa
lret
aad
pop
mov
mov
xchg
cld
mov
scas
std
ret
pop
icebp
and
mov
pusha
mov
pop
fidivs
or
fimull
fld
pop
adc
push
test
rol
bound
mov
cmp
fcoms
push
adc
fiaddl
mov
and
cmpsl
mov
add
push
test
test
dec
sbb
in
hlt
lahf
pusha
cmp
fwait
movsl
stc
sub
fistps
clc
imul
xchg
add
lods
mov
stos
jo
stos
cltd
movsl
les
mov
jns
lret
xchg
mov
xchg
loop
xchg
jns
adc
or
jno
pop
mov
test
lods
pop
ja
sahf
mov
xor
mov
test
fs
cmp
bound
cmp
aaa
push
sub
int
jecxz
add
movsl
add
sub
mov
lahf
orb
sbb
sbb
push
pushf
loop
hlt
xchg
xchg
test
lods
nop
clc
pusha
pop
mov
pop
imul
mov
mov
xchg
jno
addb
mov
jecxz
fstpl
dec
insl
stos
clc
mov
nop
in
xorl
jl
xchg
rcl
and
mov
std
sbb
cwtl
xchg
pusha
andb
scas
cwtl
inc
inc
and
call
adc
lahf
lock
cmp
hlt
and
sti
push
in
insl
xchg
and
fwait
pushf
mov
and
mov
sbb
dec
into
xchg
mov
xchg
jno
aaa
xlat
stc
call
cmp
and
sbb
stos
cmp
pop
and
imul
leave
push
push
nop
or
out
and
mov
adc
xchg
ret
sub
lods
xchg
nop
xor
mov
les
lods
jb
and
xor
push
mov
xchg
inc
sbb
push
lea
mov
les
ret
inc
jg
test
adc
ret
adc
adc
jbe
adc
mov
cmp
mov
imul
mov
lahf
and
scas
mov
test
fisubl
xor
mov
cmp
mov
shr
call
mov
mov
xor
shrb
pop
gs
adc
in
push
push
psubusb
jl
insl
sbb
add
cmp
ror
cld
pop
loopne
subl
xchg
call
out
mov
ror
imul
push
ror
mov
inc
shll
fwait
add
adc
cmp
jne
inc
and
push
mov
lea
sub
sub
sbb
jle
pop
stc
xlat
loope
decl
mov
das
mov
cld
inc
stc
add
sbb
jp
fucomi
faddp
pop
mov
pop
cmp
and
cmpb
xchg
push
pop
insb
lock
xchg
dec
jnp
adc
jg
rep
xchg
xchg
xor
and
roll
add
jecxz
outsb
movsl
rcrb
mov
mov
loope
cmpsb
nop
rclb
mov
or
bound
cmp
int
stc
adc
imul
push
sub
nop
loope
or
or
aad
add
add
and
add
iret
or
fidivl
fmuls
adc
shrb
and
stc
mov
inc
mov
xchg
sbb
je
popl
in
cmp
xchg
mov
aaa
test
or
out
mov
test
mov
and
or
push
in
jbe
sbb
decb
fdivrl
cmp
or
cmp
imul
sub
mov
js
mov
sbb
pop
pop
arpl
mov
sbb
jae
pushl
adc
fcmovb
xchg
shlb
scas
pop
xchg
push
roll
push
test
iret
sbb
inc
adc
add
jne
push
jb
push
mov
out
js
or
xlat
shr
pop
or
or
aad
adc
mov
movhps
jle
mov
push
rcrl
mov
add
les
inc
jb
push
int
jbe
and
jnp
jle
popf
stos
lods
xchg
pop
ret
mov
popl
and
lods
mov
enter
xlat
mov
mov
adc
inc
lcall
inc
xchg
sar
movsb
ret
enter
aad
or
xchg
jns
popl
pop
mov
dec
inc
sahf
nop
inc
adc
daa
or
cli
cli
inc
pop
xchg
inc
and
add
mov
lock
adc
ret
dec
xchg
xchg
add
imul
mov
les
cmp
hlt
mov
mov
sbb
pinsrw
jo
xchg
ret
mov
sbb
clc
mov
pop
ret
or
mov
dec
add
daa
and
mov
or
sahf
or
fsubl
add
sub
mov
ret
jge
mov
add
cs
lods
cmp
fisubrl
movsl
adc
shll
adc
int
xor
inc
sahf
nop
cld
adc
repz
mov
cmpsl
movsb
add
insb
hlt
mov
fbld
lea
sub
sub
cmp
pop
jbe
cwtl
add
adc
xchg
jp
into
dec
adc
das
jg
pop
cmp
andb
cltd
adc
pop
adc
lret
shll
or
push
and
ror
dec
adc
jns
or
jns
subb
and
adc
nop
mov
xchg
xchg
xorb
fbld
cmp
mov
jnp
mov
or
sbb
jno
cwtl
lds
xchg
jo
aam
leave
ret
mov
test
push
stos
xchg
jp
jle
nop
pop
xchg
sbb
aaa
xchg
mov
push
test
loope
mov
jge
fnstsw
iret
push
mov
outsb
cltd
nop
mov
push
ret
popf
mov
jbe
jbe
add
je
cmp
dec
shr
lods
ljmp
mov
jle
push
sbb
and
jo
mov
adc
dec
sub
shr
add
jae
and
popa
cmp
in
enter
ret
out
daa
insb
mov
je
rorb
hlt
or
push
mov
mov
mov
sub
pop
cmp
mov
mov
or
push
stc
aaa
inc
or
sbb
adc
dec
mov
lret
xor
xor
stos
xchg
adc
clc
subl
outsl
and
fiadds
mov
mov
sbb
add
imul
aam
sub
lret
pop
xor
stc
les
cmp
movsb
outsl
push
mov
adc
mov
and
add
shlb
and
insb
stos
xchg
sub
bound
sti
fstl
fisttpll
xor
xchg
xchg
into
jb
leave
mov
mov
subb
aas
test
dec
xor
inc
or
pop
adc
jb
ds
ret
jecxz
nopl
scas
fldcw
add
nop
add
xor
jno
or
sbb
arpl
sbb
leave
mov
mov
mov
xchg
mov
xchg
cmp
iret
jg
pusha
add
test
lret
mov
push
imul
call
in
test
add
inc
cmp
add
ret
dec
or
push
sarl
xchg
xchg
test
subl
adc
call
fadd
mov
pop
xchg
push
jge
stc
fs
inc
xchg
jle
mov
xchg
xchg
add
in
cmpsl
jle
add
xchg
xchg
cmp
dec
mov
cmp
pop
xor
pop
mov
dec
notb
ret
fstl
sti
sub
cmpsb
roll
pop
lods
jle
adc
testb
mov
push
push
fs
inc
ja
icebp
xchg
shrl
fmulp
mov
ret
sub
jb
lret
lret
add
outsl
mov
push
aaa
int
pop
imul
rorb
mov
test
movsl
mov
push
inc
enter
xchg
lahf
fcmovnu
fisubrs
add
imul
pusha
shr
mov
sahf
dec
cltd
jmp
cmpsl
xor
mov
jbe
or
inc
fwait
sbbb
mov
cmp
mov
mov
inc
ftst
xchg
sub
int3
xchg
mov
add
das
push
sbb
and
add
sarl
push
icebp
sub
andl
mov
xchg
addr16
mov
sbb
outsb
stc
pop
ss
lods
in
xor
add
add
add
add
add
add
add
into
and
xchg
jle
jg
cwtl
scas
push
sbb
jb
mov
xor
movsb
scas
jo
rcr
sub
pop
cmp
stos
movsb
inc
popa
sbb
add
inc
sbb
sbb
fwait
roll
leave
js
call
in
call
xor
inc
bound
add
and
imul
add
jae
xor
and
mov
fildl
loop
add
jns
icebp
stc
arpl
pop
or
sub
add
lret
sbb
or
xor
je
mov
cs
jno
stos
push
aas
xor
subl
loop
add
push
insb
rcr
sub
mov
cmp
or
dec
pop
inc
cs
add
dec
cli
out
and
ja
mov
or
mov
js
jle
mov
jge
add
pop
push
add
ret
and
iret
and
sbb
sub
pop
in
pop
cmc
lret
call
mov
out
pusha
data16
jo
sbb
sti
std
adc
data16
lret
jo
xor
pop
pushf
fs
lock
call
or
das
idivl
mov
outsl
loope
fnop
rcll
cwtl
adcb
cmc
dec
sub
xchg
xchg
movsl
adc
push
iret
jge
divb
in
or
lcall
add
push
jl
insb
mov
xchg
in
xchg
xchg
pop
ret
fs
leave
enter
dec
dec
out
adc
push
inc
xor
lcall
mov
inc
pop
ret
mulb
add
imul
mov
shl
incb
and
mov
in
in
xchg
iret
sub
push
fs
or
inc
std
add
push
mov
fcom
ret
sub
std
js
fisubl
mov
jmp
shrl
xchg
outsb
in
mov
stos
bound
shl
mov
imul
jmp
and
cld
pop
push
shl
cmp
jne
sbb
cld
insl
inc
xchg
pop
jns
dec
and
xor
test
popa
mov
int3
inc
cmpsb
mov
sahf
std
sub
stos
and
sbb
insb
sbb
jg
lahf
add
ret
push
sti
push
iret
cmp
mov
pushf
stos
cmpsl
push
pop
icebp
jle
fsubs
and
sti
xchg
xor
jb
enter
out
dec
call
push
jge
jg
jmp
mov
mov
fsubrs
sti
xchg
or
xchg
push
dec
mov
push
cld
pop
bound
aam
sub
ss
add
mov
outsl
jns
shlb
loope
ret
ret
dec
ret
popf
mov
ror
out
or
or
and
mov
mull
mov
pop
mov
dec
sar
pop
aaa
push
dec
xor
pop
sbb
mov
loop
and
cmp
adc
jg
xchg
mov
dec
fcmovbe
jge
or
pop
adc
fwait
stc
mov
je
jno
clc
mov
add
and
dec
ret
sub
mov
clc
sahf
jmp
cmpb
scas
xor
paddq
or
mov
xchg
xchg
cmp
jp
scas
mov
adc
mov
push
in
aas
pop
repz
and
xchg
or
lahf
mov
roll
stos
and
cvtps2pi
cmp
in
add
test
rol
aas
sub
ret
xlat
mov
rolb
sti
sub
sub
pop
and
mov
or
sub
imulb
scas
in
clc
stos
mov
dec
rcr
mov
or
add
cmc
stos
test
shl
jmp
scas
aam
and
add
push
stos
clc
ret
out
adc
cld
sarb
push
sub
imul
ret
inc
hlt
mov
dec
and
dec
divl
xor
jl
cltd
ja
out
and
push
xchg
jb
and
xor
mov
out
out
add
bound
aas
sbb
jo
repz
inc
xor
sbb
les
add
mov
sbb
ret
jbe
sub
mov
xchg
cmp
mov
mov
insl
ret
data16
bnd
cmp
mov
ret
popa
xor
xlat
or
dec
add
fs
and
stos
mov
movsb
repnz
adc
cmp
pop
mov
push
les
dec
adc
xchg
jbe
movsl
mov
call
das
icebp
ficomps
aam
or
into
stos
or
cwtl
jle
iret
and
cmpsl
cs
lret
idiv
and
push
int
gs
sbb
pushf
xchg
and
ret
fwait
bound
test
cltd
jo
xchg
je
ljmp
pop
imul
jno
outsl
dec
mov
cmp
mov
lock
fs
mov
or
jo
out
cmovne
test
cwtl
icebp
shl
cmp
add
out
in
cld
jg
js
dec
lock
mov
enter
pushf
or
xchg
js
cmp
xchg
xchg
cmp
xchg
test
and
inc
add
int3
xchg
push
mov
push
pop
pop
daa
ret
xchg
sbb
movsl
fcompl
dec
std
pop
clc
pop
pop
push
jg
fsubrs
sbb
mov
sbb
mov
cmp
push
jl
jno
in
out
bound
call
and
add
sahf
mov
sbb
push
xchg
mov
ret
jne
mov
outsl
push
or
in
std
ss
lret
and
or
popf
ljmp
xchg
shrb
shll
lds
cvttps2pi
scas
jnp
les
adc
insl
imul
push
push
lods
inc
mov
cmp
in
jbe
mov
in
xchg
mov
cmp
leave
and
and
mov
dec
cmp
add
cld
jmp
sub
mov
jno
jmp
scas
and
inc
popa
je
test
xor
pop
mov
adc
mov
push
push
mov
cmp
fidivs
push
out
jle
cmp
andb
inc
sbb
cmp
out
pushw
cmp
xor
jno
push
pop
mov
clc
inc
and
stc
jge
mov
sahf
shl
movsb
mov
pop
test
adc
ret
repnz
inc
imul
cmp
add
sbb
cmp
jmp
pusha
xor
in
movsb
in
mov
divb
mov
sbb
mov
pusha
daa
enter
aas
xchg
sti
xchg
xchg
stc
mov
in
cmp
lods
shl
fstpl
jmp
add
add
cmp
push
lods
out
shlb
sub
adc
or
mov
leave
pop
dec
decl
scas
mov
and
sub
notb
sti
adcb
movsl
xor
cmp
push
jb
mov
icebp
fiadds
je
mov
mov
or
scas
in
mov
bound
xchg
idiv
jo
sub
and
repnz
out
xchg
sbb
sbb
jl
dec
test
ljmp
cmp
mov
fs
pushf
aam
in
scas
movsb
js
push
mov
mov
pop
out
inc
jg
cmp
out
jl
insl
nop
shl
dec
mov
outsb
in
lcall
fisubs
jbe
pop
mov
orl
cmc
in
mov
xchg
jo
popa
das
adc
shll
lock
mov
je
push
cwtl
lret
mov
cmc
sub
jecxz
cmp
jecxz
aas
inc
das
xchg
insb
loop
imul
xchg
push
loop
dec
mov
cwtl
dec
nop
and
loop
lahf
lods
cmp
mov
mov
aaa
jmp
loop
dec
std
fucomip
jbe
pop
push
xor
mov
call
shl
stos
mov
mov
lds
xchg
jo
pop
je
jg
cmpsb
hlt
movsb
rcrb
pop
in
mov
push
xor
lcall
insb
je
cmp
xchg
jo
inc
hlt
ret
cmp
xor
xor
push
lahf
cmp
and
sbb
or
insl
add
clc
mov
insb
mov
and
bound
xor
xchg
punpcklwd
lahf
or
in
test
mov
loopne
xchg
cwtl
js
movsl
dec
inc
jb
cmp
or
cs
ret
aad
mov
sbb
sub
bound
or
inc
fidivrl
xchg
lea
xor
adc
filds
sbb
pop
shll
cmp
pop
mov
mov
push
or
push
mov
insb
mov
movsl
mov
cmp
push
movsb
dec
ret
aam
jb
dec
hlt
ss
movsb
jbe
stos
imul
daa
fsubl
stc
aaa
xor
stos
cmp
std
cwtl
aam
movq
mov
push
ljmp
fsubp
cmp
into
add
dec
mov
mov
mov
mov
imul
pop
push
jne
sbb
or
push
pop
or
adc
xor
jl
cmp
cmp
cwtl
std
pop
or
or
clc
mov
or
scas
xlat
cmpsb
cmp
das
int
scas
inc
sub
scas
cmp
fmull
add
inc
or
mov
fdivrl
mov
invd
jne
in
outsb
add
or
add
or
insl
fdivl
add
add
lods
sbb
loope
stos
imul
mov
sub
je
out
pop
or
adc
adc
movsb
adc
sub
ret
icebp
int3
aam
or
push
cli
push
icebp
add
push
gs
ljmp
test
aaa
fisubl
stc
sbb
mov
fidivrl
add
fidivrl
js
add
sub
mov
jge
lock
or
mov
jl
mov
daa
cmp
mov
jl
into
xor
out
nop
jp
cmp
xor
or
xchg
fsubl
in
ljmp
lcall
test
ds
xchg
scas
push
jmp
add
mov
mov
mov
dec
xor
call
dec
daa
sbb
shrl
cmp
xor
mov
add
xor
adc
fsqrt
bound
dec
inc
ss
je
xor
fisubrs
jle
outsb
sbb
mov
pop
adc
aas
add
mov
std
jmp
in
fnsave
mov
mov
aas
mov
jmp
mov
ljmp
test
jg
pop
aam
lcall
add
or
mov
iret
sub
cmp
fwait
mov
loope
repz
addl
in
popa
jg
cmp
xor
scas
repz
mov
fidivrs
loop
nop
fs
stos
mov
mov
and
cmp
adc
push
cld
adc
aad
movsl
dec
fimuls
dec
jle
rorb
xor
js
pop
jnp
bound
mov
lods
cmp
jns
pop
push
in
mov
pop
inc
sub
add
cmp
lahf
push
mov
aam
orl
adc
fdivrl
decl
cs
and
xor
jl
dec
call
stos
or
mov
push
pushf
popf
iret
or
scas
xchg
outsb
shlb
pop
jl
mov
cmp
add
push
adc
in
addb
adc
xor
mov
out
cmpsl
ret
bound
jnp
mov
mov
lock
cmp
je
jno
jg
aaa
push
out
mov
mov
inc
and
sahf
nop
leave
shll
pop
sahf
mov
rcrl
xchg
add
test
adc
stos
jb
adc
add
outsb
xchg
sti
stc
in
js
and
fs
rol
mov
mov
jle
mov
xchg
scas
shlb
push
or
xchg
sbb
adc
pushl
test
sbb
mov
nop
data16
popf
xchg
movsl
adc
jb
sbb
lods
mov
push
cwtl
ret
fmull
cmp
testb
iret
lds
cmp
mov
cwtl
inc
sahf
cli
ficomps
dec
lds
cli
aaa
setne
add
pushf
movsb
and
mov
cmp
xchg
or
inc
gs
jge
xor
stos
or
test
add
fisttps
cld
cltd
dec
cli
xchg
mov
sbb
rol
fimuls
jns
mov
jp
cmc
push
sbb
aas
sub
fld
aam
vmptrst
adc
jb
mov
ljmp
add
mov
mov
int
push
cld
js
mov
cmp
and
adc
lret
lods
mov
sbb
into
rclb
lds
cmp
mov
jmp
dec
fldl2e
push
push
js
fdivs
mov
test
les
lcall
mov
dec
int3
es
mov
cli
insl
sub
fmuls
fdivr
or
btc
test
rclb
test
and
rclb
test
leave
sti
mov
mov
stc
push
or
cltd
lahf
mov
and
or
stos
mov
adc
cli
js
lret
cmp
cs
push
pusha
aas
adc
push
rcll
imulb
jb
mov
mov
mov
ret
jge
xchg
stos
popf
ftst
xchg
mov
adcl
scas
fldenv
mov
xchg
inc
stc
popa
cmp
in
mov
sub
dec
std
icebp
jb,pn
xchg
adc
pushf
lds
mov
and
std
adc
shrl
mov
dec
mov
jmp
hlt
pop
ret
xchg
stos
jge
push
out
push
or
add
rol
test
cli
aas
dec
sub
test
jp
gs
loop
leave
mov
dec
and
mov
jbe
push
das
or
pop
hlt
lods
in
mov
or
mulb
add
mov
and
enter
lds
lock
jge
ds
or
jg
fs
xor
neg
inc
xchg
std
mov
jae
inc
jle
xchg
nop
adc
mul
test
mov
inc
and
mov
mov
xchg
fwait
add
jg
xchg
and
cmp
dec
push
mov
in
icebp
or
movsl
mov
test
add
and
xor
cs
shl
lahf
cmpsl
sbb
sbb
mov
and
mov
testb
push
xchg
push
lods
lods
lea
fsubrp
xchg
cmp
jno
hlt
sahf
mov
bsf
lds
int3
popa
inc
pop
dec
sub
enter
imul
pop
mov
mov
cwtl
push
repnz
lret
or
xchg
pop
loopne
jns
mov
jg
or
cmp
cmp
fadds
movsb
lock
test
dec
repz
lock
xchg
insb
arpl
push
insl
xchg
nop
filds
sbb
and
les
ret
repz
xchg
nop
fiaddl
and
mov
ret
popf
mov
stos
or
rsqrtps
repnz
mov
clc
dec
mov
sub
bound
mov
cmp
adc
push
lods
cli
ret
in
adc
gs
out
jb
sbb
cmp
push
nop
pop
push
push
clc
std
lret
in
dec
mov
pushf
lahf
mov
or
rol
add
or
call
jb
and
xchg
sbb
sahf
xchg
cmpps
cli
jne
shlb
jnp
dec
lcall
sarl
mov
pop
call
inc
push
mov
sarb
inc
xchg
aas
test
and
inc
mov
shrl
push
cmp
mov
xchg
mov
push
in
mov
rcr
push
jae
add
mov
in
mov
mov
and
mov
push
mov
mov
cwtl
mov
xor
int
fbld
repnz
jg
shll
addb
adc
pop
nop
pop
shlb
in
cmp
fisubs
push
lret
shlb
jbe
mov
pushf
movsl
pop
aas
or
pop
test
xor
inc
jo
in
aam
scas
hlt
lods
jno,pn
stos
push
mov
sti
xor
add
mov
inc
les
rcrb
orb
stc
pop
rolb
mov
jl
inc
push
out
je
stos
js
insb
push
ret
es
fwait
jp
cwtl
movsl
add
dec
jbe
pop
cmp
mov
scas
bound
xchg
rcl
dec
ss
push
mov
fwait
movsl
nop
push
adc
mov
adc
adc
xor
cmp
jno
mov
adc
sarb
mov
or
insb
push
ret
mov
inc
pusha
out
nop
add
add
mov
inc
ret
cld
repz
in
jns
cmp
insb
fidivl
test
clc
jns
mov
dec
mov
andl
cmp
shr
scas
or
sbb
mov
dec
mov
jno
pop
push
pop
push
inc
fstpt
sbb
daa
push
jns
movsb
xchg
call
push
xchg
je
jg
std
js
pop
bound
cmp
ret
test
pop
loop
mov
leave
pop
ljmp
fdiv
mov
out
push
dec
sub
ret
cmpsb
or
mov
in
nop
pop
mov
popa
sbb
dec
jecxz
fdivrs
xchg
sbb
adc
jmp
dec
cmp
mov
mov
fisttps
or
sbb
pop
dec
mov
loop
mov
lea
mov
jecxz
inc
lret
sub
jmp
add
mov
movb
mov
ret
cmp
loope
fistps
in
mov
push
cltd
mov
mov
orl
jmp
mov
xor
lcall
rcll
inc
test
cli
shll
mov
sahf
xchg
jns
insb
pop
mov
xchg
cmpsb
xor
testl
pop
mov
cli
mov
mov
sub
push
cmp
or
xchg
lods
mov
xor
repnz
test
xchg
stos
in
cmpl
cmpsl
or
mov
sahf
cmpsb
lock
popa
mov
mov
mov
add
stc
fsincos
sub
inc
hlt
fcoms
mov
mov
or
mov
cmp
sbb
fwait
stos
incb
addl
stos
popf
jg
mov
neg
andl
mov
xchg
nop
or
je
aam
icebp
inc
dec
mov
inc
cmpsb
and
sbbl
sar
mov
popf
jo
push
daa
in
hlt
xchg
xchg
jge
push
nop
insb
mov
xchg
divb
popf
jmp
pop
jmp
lret
jp
mov
je
imul
icebp
sub
js
movsl
loop
push
enter
int
ret
int
jl
dec
stos
mov
mov
mov
or
popf
xor
jl
xchg
jg
jo
push
fcmovb
arpl
add
cmp
hlt
push
or
in
aad
mov
or
push
add
jno
sbb
rorl
xchg
dec
adc
sub
inc
test
ret
mov
movsl
loop
insb
and
cwtl
mov
sbb
orl
gs
bound
jge
add
fcompl
xor
enter
in
popa
ja
test
sbb
lret
aas
fmul
sbb
adc
sarl
jno
or
testb
xchg
add
int
pop
test
enter
ret
nop
mov
imul
cmp
lahf
lds
loop
inc
dec
sbb
loopne
aas
push
and
and
rclb
sarb
sbb
repz
add
movsl
mov
dec
sub
dec
cmp
xchg
pop
add
jno
mov
mov
adc
xchg
pop
ror
test
das
ror
jmp
and
shlb
xchg
iret
and
adc
mov
mov
lret
fidivrl
adc
lds
and
mov
mov
lret
hlt
shrb
jno
mov
insb
adc
repnz
out
lret
mov
stos
mov
out
jp
jno
cltd
enter
int3
push
push
push
scas
or
dec
jg
push
or
ja
mull
mov
xchg
xchg
mov
leave
lock
mov
pop
outsb
jle
imul
jb
or
pop
jp
jle
inc
mov
sub
adc
inc
sub
xor
xlat
imul
xchg
enter
mov
dec
pop
inc
outsl
scas
xchg
sbb
jnp
dec
jmp
fildl
movsb
cmp
imul
xchg
orb
bound
mov
les
cmp
ljmp
scas
imul
inc
mov
push
and
mov
fstps
filds
pause
push
xchg
nop
sahf
bound
andl
rcr
outsb
dec
daa
fcomi
sbb
nop
inc
mov
popa
scas
sbb
add
mull
mov
mov
fsubs
scas
add
pop
xchg
mov
or
pop
add
xlat
ja
lock
flds
adc
loop
lds
mov
push
mov
jb
test
inc
popa
lods
xchg
or
pop
hlt
pop
pop
mov
pop
jge
ss
mov
js
imulb
mov
lock
mov
push
rorb
push
xchg
push
xor
insb
sub
dec
xchg
mov
lods
and
cmp
adc
and
data16
lods
data16
add
stc
push
lods
cli
jb
and
nop
cmpsl
mov
or
lods
into
dec
fistpll
jno
mov
std
fimuls
sub
mov
repz
pop
ds
mov
inc
pop
aaa
shlb
cmp
fisttpll
lcall
bound
mov
xor
fwait
mov
pop
cmp
xchg
sub
call
incb
fsubrs
clc
lock
lret
and
mov
test
add
test
rorl
andl
jns
lock
or
or
adc
jb
nop
mov
aad
mulb
sub
pop
test
add
roll
in
test
fdivrs
aam
lret
test
mov
sub
pop
jg
pop
clc
dec
cmpsl
or
test
mov
mov
inc
dec
inc
mov
fildl
xlat
nop
mov
or
xor
scas
jns
aas
dec
icebp
aas
inc
jns
les
push
dec
ficoml
push
popa
cld
ret
cs
dec
sub
ret
lret
movsl
mov
movsl
mov
xchg
mov
and
dec
ffree
pop
movsb
mov
dec
or
call
dec
fisttpll
out
mulb
fisubrs
stos
imul
push
xor
mov
sub
ret
mov
inc
pop
into
call
ret
into
inc
dec
mov
cmp
ret
gs
int
in
aam
rcll
dec
je
scas
dec
add
mov
inc
insl
mov
addr16
bound
mov
clc
mov
cld
dec
cmp
ret
int3
dec
xchg
not
push
ds
fists
fldl
mov
popf
bound
xor
adc
ljmp
ret
pop
mov
inc
push
lahf
clc
inc
lahf
add
lahf
clc
daa
lahf
jl
lahf
xor
lahf
mov
hlt
jne
filds
lahf
in
jne
sahf
cmp
mov
jg
cmpl
sbb
xchg
or
cmpsb
pop
xchg
xlat
adc
repnz
dec
int3
shrl
mov
xchg
cmpsb
xchg
ret
xchg
rorl
fistpll
imul
das
dec
je
popf
loopne
fxch
cmc
imul
aad
and
enter
nop
pop
lods
ljmp
jecxz
gs
add
shll
mov
lods
mov
js
xchg
rcrl
jb
ret
nop
fsubrs
push
ret
pop
shll
xlat
rcrb
fidivs
pop
arpl
dec
imul
mov
dec
pop
mov
cmp
enter
retw
jae
cmc
jns
jl
cmc
xchg
ret
fistpl
sti
adc
out
fs
jl
addl
cmp
aas
xchg
das
or
adc
inc
jo
das
insl
pop
mov
nop
push
test
scas
mov
leave
push
lea
add
out
jl
aaa
fs
jg
add
aad
or
insl
movsb
stos
push
shlb
pop
popa
loope
test
test
adc
jl
mov
ret
test
lods
cmpl
dec
lds
or
or
fsubrs
lcall
push
fistpll
daa
or
into
cmp
repnz
je
add
jecxz
jo
cwtl
cltd
xchg
fsubrs
mov
sub
test
out
add
jne
out
jnp
mov
sbb
cs
sbb
dec
sub
push
adc
dec
stos
lock
fidivrs
negb
js
ret
in
scas
insl
lds
xchg
shl
inc
int3
mov
das
cmc
movsl
pop
and
mov
nop
xchg
add
fadds
in
cmp
pop
ljmp
imul
dec
sub
fcmovb
loop
lcall
movsb
mov
into
dec
fmuls
push
cmp
or
sub
ljmp
xlat
pop
scas
dec
xchg
mov
mov
aaa
orb
jmp
mov
cmp
lods
cli
mov
push
bound
dec
pop
xchg
int3
mov
cmp
sub
mov
mov
mov
xorl
movsl
rol
xchg
push
mov
mov
xchg
int
or
lret
scas
pop
int
dec
nop
mov
adc
nop
pop
xchg
xor
bnd
sub
inc
mov
test
stc
adc
sbb
iret
adc
cmp
mov
xchg
cmc
ss
movsl
push
xchg
stos
dec
ljmp
mov
push
idivb
into
insl
ja
fs
mov
lahf
lahf
nop
nop
and
cltd
mov
or
js
testl
cmp
mov
and
notl
call
je
push
iret
mov
pushf
fidivs
cmp
into
sub
inc
xchg
pop
std
mov
or
pop
push
imul
stos
jb
pushf
fsub
mov
sub
xchg
pop
vmwrite
jmp
xchg
cmp
bound
xchg
lahf
xchg
xor
in
mov
in
lea
xchg
sub
adc
mov
loop
or
cwtl
mov
dec
cmp
jno
xchg
mov
fsubrs
xchg
or
in
fwait
mov
je
xor
movsb
cmp
sbb
rolb
cmpsb
popa
fcmovb
lahf
sbb
cmp
stos
fs
orb
mov
or
xchg
fisttps
add
jbe
or
xchg
pop
fnstcw
test
cmp
add
adc
js
push
and
push
adc
rclb
lret
dec
shr
mov
cwtl
xor
call
dec
daa
jo
xor
or
xchg
notl
mov
inc
movsl
cmp
dec
fwait
mov
or
mov
lret
xchg
loop
aam
mov
jo
jmp
nop
jo
inc
imul
test
test
push
cwtl
jg
cmp
and
or
stc
cmp
das
sti
dec
outsb
pop
xor
test
adc
bound
push
fxch
int3
lds
daa
add
fisubrl
add
mov
push
sub
mov
lea
pop
dec
jle
mov
fstpl
gs
jne
cwtl
mov
fimuls
es
js
out
fcmovnu
xor
dec
incb
push
cli
jb
movsl
pop
inc
xchg
les
xlat
or
mov
fcmovu
fildll
mov
ret
or
pop
in
out
cmpsl
jmp
jl
push
loope
in
lret
mov
mov
ds
aam
or
leave
rcrl
cld
mov
mov
orb
lcall
sahf
or
stos
inc
clc
mov
jge
add
stos
lret
adc
mov
mov
test
add
out
loop
jmp
int
or
imul
cmp
and
mov
xor
xor
mov
jno
repnz
jnp
filds
cmp
in
push
out
jnp
xor
xor
xchg
mov
fs
and
in
lods
jecxz
mov
clc
jbe
popf
or
or
and
into
push
js
push
stos
testl
incb
push
mov
add
int3
insb
and
lds
and
ret
or
imul
mov
fildll
xor
or
mov
insb
decb
xchg
xlat
ds
sub
notl
or
shlb
and
add
mov
pushf
push
jmp
xchg
xchg
xlat
in
in
stos
sub
mov
adcl
cmp
arpl
and
push
jo
pop
pop
lock
jg
sub
mov
loope
mov
repz
xchg
or
mov
add
sahf
sub
into
jl
popa
sbb
mov
push
cld
and
shlb
in
iret
test
pop
push
jle
je
stos
pop
add
push
bound
pop
add
sub
or
mov
push
nop
and
das
push
mov
mov
jecxz
jo
cmp
or
in
pop
insl
pop
and
ds
xchg
scas
sahf
mov
xchg
push
xor
imul
gs
inc
and
sbb
xor
aad
iret
les
inc
js
mov
dec
repz
or
jno
xlat
adc
fs
push
or
xchg
add
arpl
xchg
jg
mov
mov
pop
enter
std
nop
push
and
negb
repnz
xchg
push
adc
adc
cwtl
nop
or
or
std
jne
xchg
jbe
pop
xor
push
sarb
std
and
mov
or
xor
or
mov
xor
stos
xor
outsb
loop
std
addr16
mov
jae
insb
stos
pop
dec
stos
jecxz
les
mov
punpcklwd
movsl
lret
mov
and
mov
pop
cmpl
xchg
imul
mov
mov
ljmp
stos
xchg
in
and
in
dec
inc
cmpl
xorb
cmp
stc
xor
into
imul
ja
dec
add
mov
add
imul
rorb
in
fs
cltd
or
xchg
adc
stos
jno
test
loope
enter
insb
ret
pop
orl
cmp
mov
add
fldt
in
xchg
push
mov
movd
out
adc
mov
mov
adc
jle
cld
das
xor
inc
mov
mov
in
orb
movsb
shrb
fsubs
lods
or
mov
cmp
push
pop
add
into
xor
pop
lock
add
nop
pop
popf
loope
in
push
pusha
pop
xchg
jmp
dec
adc
movsl
cmp
and
sub
stos
adcl
mov
jno
das
sbb
xchg
rol
jle
test
ret
lods
cmp
ret
jmp
roll
or
add
mov
stos
iret
les
mov
or
dec
je
push
or
or
andb
into
xor
pop
lock
lcall
movsb
add
pushf
cmpsl
xchg
divl
out
pop
rcr
loopne
movsb
lods
mov
sub
mov
mov
nop
outsb
mov
outsl
xor
out
into
inc
dec
push
ja
or
lea
je
mov
lret
xchg
js
popa
mov
inc
dec
mov
pop
popa
dec
lcall
test
ffreep
add
jge
enter
or
andl
pusha
lods
call
and
jge
cmc
incl
movsb
jno
leave
fisubrs
test
push
jge
adc
roll
pop
xchg
jge
cmp
call
xchg
pop
lods
rcr
aam
icebp
lods
jg
loop
mov
sahf
add
fs
lds
or
addl
nop
push
repz
xchg
mov
popa
adcb
roll
fs
mov
stos
cmp
lret
test
cld
xor
pushf
xor
sub
mov
mov
xor
shrb
js
jb
xor
adc
add
sbb
and
in
leave
xchg
jno
ret
lcall
add
cli
jb
sub
xchg
shlb
loopne
loop
mov
push
jg
daa
iret
pop
mov
pop
dec
xchg
jns
adc
cmp
xchg
mov
jns
xchg
sub
sti
jnp
movsb
cmp
out
inc
mov
xchg
adc
in
sub
je
or
iret
jae
add
mov
push
cs
cmp
mov
xlat
dec
and
push
inc
or
push
mov
sahf
std
fbstp
in
and
outsb
and
cmp
adc
xor
pop
mov
movsl
add
je
divl
mov
addr16
in
movsb
cmp
push
xchg
mov
rorb
xchg
jb
into
xchg
xchg
and
lret
movsl
push
xor
popf
fisubrl
mov
lock
es
jge
test
scas
mov
mov
jl
xor
mov
pop
jle
popf
test
mov
mov
lds
push
add
adcl
or
xchg
pop
mov
insl
rorb
jp
insl
int3
or
cmp
pusha
js
imul
negl
cld
movb
jmp
mov
in
les
repz
sbb
sbb
aas
xchg
js
repnz
adc
shrb
pop
in
inc
xchg
push
push
mov
adc
dec
jns
and
push
fistl
pop
push
push
dec
cmpsb
cmc
cmp
cmp
add
mov
outsl
sub
int
jecxz
cmp
jg
mov
xor
jl
test
fstps
test
bound
pop
lods
push
mov
filds
iret
stos
pop
popf
mov
or
mov
xchg
jecxz
lods
sbbb
dec
popf
lret
and
pushf
sbb
outsl
inc
xor
adc
xor
int3
mov
jge
push
jle
and
rorb
adc
addb
js
cld
in
mov
pop
jne
fcmove
mov
scas
add
aam
pop
imul
xchg
mov
dec
nop
mov
rcrl
xchg
adc
andb
pop
jmp
jne
pop
sub
fcom
jne
enter
mov
pop
lret
cmpsl
ret
push
xchg
js
ja
xor
repnz
push
push
ja
cmpsl
jo
sbb
push
push
adc
movsl
push
mov
incl
add
or
bnd
test
cld
adc
lock
insb
dec
lahf
add
xor
xor
popf
mov
sub
mov
lahf
je
push
sub
shll
test
js
test
lahf
aas
dec
add
ret
imul
pop
adc
sti
nop
push
sub
ret
xor
lret
xchg
cmc
fwait
sub
jb
jno
xchg
fwait
jb
adc
nop
jns
sub
arpl
nop
sub
lcall
inc
jno
jno
std
lcall
jo
xor
frstor
push
cmp
clc
push
cs
in
and
mov
pop
pop
cld
iret
pop
repnz
je
call
mov
outsl
pop
fcom
outsl
pop
inc
mov
outsl
xchg
loop
mov
mov
sbb
add
jo
mov
dec
cmc
and
fstpt
push
jle
js
jle
push
adc
add
inc
xchg
or
ret
imul
ss
int3
push
cmpsb
dec
push
outsb
mov
dec
jg
mov
fbld
push
test
push
mov
add
fs
pushf
insb
test
mov
push
inc
jno
sbb
push
xchg
mov
jnp
xlat
ret
mov
fs
js
mov
sub
in
xchg
push
cmp
adc
iret
dec
loopne
rclb
add
push
cmovo
pusha
in
push
sub
xor
fldt
mov
addr16
fs
add
sub
lds
call
dec
add
push
popa
enter
ja
cld
test
lahf
push
andb
cmp
mov
or
gs
add
push
lock
pop
and
push
xchg
gs
enter
inc
loop
fs
adc
mov
mov
in
mov
pushf
stos
movsl
mov
sbb
lock
or
dec
bound
jno
bound
add
popa
xchg
bound
popa
push
popa
mov
mov
inc
es
inc
imul
in
test
push
test
sti
pcmpgtb
inc
mov
sahf
scas
lcall
mov
pop
add
out
js
loop
pop
xchg
fsubrs
pop
pop
inc
add
xchg
mov
xchg
loop
mov
ss
sub
jle
loop
xchg
loop
test
xchg
sbb
out
loop
test
mov
pop
mov
sbb
pop
or
or
ss
sbb
pop
or
test
and
push
dec
pop
add
xchg
fwait
mov
pop
icebp
out
pushf
lods
fstpt
ds
andb
mov
nop
xor
and
and
push
and
sub
ret
daa
push
add
pop
int3
xorb
xor
mov
add
outsb
jmp
notl
lods
movsl
mov
pop
or
push
outsb
test
inc
xchg
mov
shlb
sahf
fisubl
adc
mov
lods
xchg
jo
sub
sub
push
xchg
cmp
sub
rorl
lret
mov
in
out
mov
fisttpl
cmp
sub
loop
shrb
jns
adc
movsl
das
push
mov
jp
ret
ja
rcrl
lods
sbb
cmpsl
je
and
mov
jge
or
jle
insb
add
sub
lock
pop
and
pop
sbb
jle
sub
push
mov
push
inc
shr
add
vmovntps
push
cmpsl
in
test
shll
fwait
cmp
push
xor
mov
push
stos
xchg
ds
xor
js
or
dec
fwait
into
jp
popa
pop
dec
jne
push
push
push
ja
dec
push
repz
in
push
or
push
imul
fstpl
outsl
cmc
adc
add
insl
cmovs
data16
repnz
cmp
out
fildl
dec
inc
inc
sarl
addr16
in
and
sbb
mov
jge
mov
jno
mov
jge
clc
rclb
push
cltd
inc
mov
or
dec
rol
cmpsb
xrelease
scas
jp
out
inc
outsb
push
mov
push
and
lcall
push
mov
sub
pusha
mov
movsl
jb
nop
ljmp
addr16
out
andl
mov
cmpsb
adc
or
or
or
adc
or
inc
and
lret
in
dec
xchg
scas
cmp
mov
inc
adc
xor
imul
dec
lods
cmp
and
push
adc
xor
mov
inc
xor
bound
push
mov
push
pop
inc
dec
jp
ret
mov
or
jge
dec
mov
pop
push
xlat
cmpsl
idivl
dec
aad
out
push
push
data16
ret
xchg
or
push
push
mov
jns
shrb
psrad
cltd
jl
jbe
mov
pusha
and
mov
orb
ret
dec
mov
dec
jl
or
jbe
nop
je
daa
js
in
add
or
dec
push
mov
ja
shlb
sbb
cmc
or
jbe
mov
js
jle
iret
jbe
inc
lds
mov
fwait
dec
js
cmp
add
dec
stos
xchg
inc
dec
imul
repnz
mov
cmp
iret
cld
dec
ds
out
dec
in
jp
or
sub
int3
lret
daa
dec
rcr
xchg
dec
popa
cltd
stos
js
fs
lret
dec
in
in
add
jg
in
jno
inc
jl
insb
xchg
lods
dec
dec
jae
cmp
js
les
add
imul
dec
inc
mov
fiaddl
ret
lds
xchg
and
mov
scas
call
movsl
cmpsb
and
xchg
lret
icebp
mov
cmp
movsl
mov
stc
addr16
stos
je
bound
cmp
mov
add
xor
pop
sbb
int3
stos
and
xadd
push
inc
mov
dec
push
data16
add
jmp
mov
mov
xchg
sub
jmp
repnz
inc
nop
stos
dec
dec
inc
adc
mov
and
je
or
or
mov
or
xchg
cmpl
leave
adc
repz
cmp
jae
mov
jno
xlat
jnp
inc
xchg
dec
add
pop
sbb
js
push
idivl
and
jecxz
and
pusha
dec
push
jecxz
fs
loop
inc
dec
push
or
push
cltd
adc
roll
hlt
mov
rol
je
xchg
testl
mov
cmp
rcl
dec
or
dec
lret
insb
push
addl
add
xor
mov
jo
inc
or
jle
or
adc
mov
sub
cmp
jb
jp
dec
movsl
pop
cld
fnstenv
pushf
bound
js
test
in
repnz
das
xlat
rcll
outsl
mov
outsb
stc
test
fists
scas
xor
aam
dec
inc
mov
ljmp
pop
sbb
ret
add
adc
cltd
dec
mov
inc
cmp
jb
ret
iret
mov
cmp
mov
imul
pop
test
in
add
jl
int3
mov
xchg
jle
std
cs
bound
loop
cmp
daa
mov
push
ja
in
je
pop
mov
in
jle
lea
pop
sub
xchg
cmp
insl
pop
and
mov
jno
mov
push
mov
inc
inc
pop
and
mov
mov
mov
jge
mov
jle
aam
push
sbb
int3
cmp
lret
mov
or
cmc
fstpt
mov
mov
cmpsb
jg
fsubl
xor
xchg
adc
repnz
dec
jne
ffreep
add
icebp
test
lock
adc
mov
jle
rol
add
xchg
inc
adc
repnz
sub
push
lds
shl
adcl
mov
sub
cmc
and
insb
pop
and
nop
push
hlt
mov
push
jecxz
movsl
xchg
mov
rorb
lods
inc
in
clc
pushf
ret
mov
ja
inc
inc
push
lcall
js
xchg
inc
push
jg
and
cmp
mov
cmc
lahf
jb
push
icebp
inc
nop
in
cmp
test
sbb
add
pusha
xor
inc
inc
mov
sbbb
and
fists
push
adc
mov
dec
stos
fadd
cwtl
push
mov
jge
sub
inc
xor
mov
out
sub
movsb
stc
push
cmp
lret
add
fadd
jl
testb
movsl
rcl
leave
cli
jb
into
dec
adc
les
push
xchg
or
ret
lcall
ret
xchg
or
repnz
ja
fcmovb
pop
and
mov
gs
rcll
mov
dec
add
pop
cmp
jle
mov
outsb
stc
sbb
mov
xor
mulb
sub
or
sbb
adc
enter
inc
stos
nop
arpl
sub
ds
jl
xor
add
adc
push
xor
or
stos
iret
mov
pusha
or
sbb
jmp
jl
sbb
cmp
xchg
mov
shrb
sbb
sub
or
cmp
notb
outsb
cld
insl
test
stos
notb
lret
pop
mov
scas
mov
mov
ss
cmp
outsb
cmp
jo
cmp
aad
ds
ret
inc
cmp
es
incb
cmp
xchg
ja
aas
xchg
cmp
cmp
push
ret
mov
das
xor
jle
pop
jbe
add
dec
rorb
insl
pop
mov
cmpsl
popfw
adc
clc
jp
jnp
fsubrs
or
cmp
mov
int
jp
mov
out
jg
lcall
jo
dec
push
xchg
arpl
jle
insl
jnp
dec
pushf
inc
in
cmp
rorb
push
in
jnp
xchg
es
dec
jno
std
cmp
xchg
loop
popa
sarb
out
fidivrl
push
mov
lods
mov
pop
sbb
jg
gs
movq
dec
cmp
mov
outsl
adc
xchg
aaa
pusha
push
mov
aas
jae
xor
outsl
mov
push
adc
cmp
iret
adc
aaa
sahf
xchg
aas
aaa
in
mov
or
das
aaa
mov
jl
fsubrs
pop
in
aaa
mov
clc
nop
push
pop
nop
mov
push
jg
add
dec
out
mov
xor
clc
test
lods
pop
adc
into
mov
ss
push
cwtl
mov
dec
addb
jle
jns
icebp
out
fldcw
push
inc
lret
mov
lods
xlat
outsl
add
jle
xlat
add
xor
xor
sub
mov
cwtl
sbbl
lgdtl
jl
sub
loope
out
pop
test
sub
sub
mov
xor
push
inc
xor
jmp
outsb
hlt
mov
sbb
add
pop
stos
xchg
pop
xor
add
sbb
fwait
and
push
add
xor
pop
push
xlat
in
cmp
adc
xchg
ret
ficoml
pop
sbb
pop
pop
insl
and
in
pop
insb
xor
add
xor
push
lcall
xchg
xor
dec
add
dec
dec
in
lret
xor
xlat
insb
mov
sub
xor
ljmp
insl
je
decb
mov
roll
mov
xor
in
jecxz
insb
sti
cwtl
or
icebp
xchg
rcl
in
sbb
in
dec
fwait
les
test
mov
xor
jo
out
push
jno
aam
fistpll
jg
mov
je
sub
and
aaa
cli
roll
roll
stc
stc
push
mov
xor
loop
cmp
xlat
mov
xor
sbb
lods
movsl
fists
pop
add
adc
jle
xchg
or
ret
sti
pop
mov
loop
pop
jne
orl
pop
jl
xor
shll
aaa
mov
xchg
ja
mov
imul
xor
movsb
or
pop
mov
sahf
xor
or
sub
fisubrl
cmpl
arpl
add
cmp
scas
or
xor
fdivrl
pop
pop
outsl
nop
xor
das
dec
jo
xchg
pop
mov
add
add
lahf
jns
push
mov
in
or
cs
adc
outsb
jb
lret
mov
mov
mov
sub
clc
sbb
cs
cmp
nop
int3
xor
cs
ss
fistpll
out
cmp
xchg
pop
xor
aad
dec
in
ret
jle
cmp
aas
xchg
aaa
inc
push
sub
rolb
cmp
mov
mov
sbbb
sbbl
xor
pop
inc
ret
mov
fisubl
andl
xchg
test
push
adc
mov
sub
push
cmp
lret
clc
aaa
into
pop
lods
add
test
in
sub
addl
cli
push
push
pop
mov
sbb
xchg
cs
inc
cmpsl
or
aaa
and
out
xchg
fsubrl
mov
nop
cmp
and
push
je
jg
popl
xchg
sub
pushf
dec
insl
out
push
scas
fs
pushf
inc
push
ds
inc
and
inc
mov
or
stc
jg
jl
push
sub
adc
sub
mov
je
mov
adc
rorl
or
adc
sub
lret
mulb
daa
hlt
out
dec
sub
push
push
sub
leave
jmp
hlt
lds
xor
inc
sub
dec
daa
sbb
sbb
outsl
push
pop
and
dec
or
and
cld
pop
in
negl
movsl
sbb
sub
das
int
jmp
push
ret
lcall
je
imul
cwtl
loopne
sub
mov
and
pop
mov
sub
mov
lret
sbb
pop
orb
lcall
jae
sub
loop
and
ds
jg
mov
rcll
push
push
xor
adc
std
popa
pop
daa
mov
jmp
es
in
pop
pop
jb
add
daa
repnz
test
pop
cmpb
mov
cmp
xor
in
daa
ds
inc
pop
repnz
cmp
or
dec
adc
ljmp
dec
pop
dec
sub
rcrl
adcb
jmp
jg
rorb
push
rorl
adc
pop
leave
pop
decl
test
dec
es
cs
shlb
and
lea
es
pop
addr16
je
lret
inc
mov
stos
mov
mov
shlb
shll
and
cmp
inc
mov
ret
cmc
ss
cltd
mov
push
nop
mov
cwtl
jge
popf
fcompl
insl
push
mov
cmp
sbb
or
mov
pop
xchg
aam
adc
les
cmp
pop
pushaw
pop
rorb
xchg
fsubrl
rclb
cmp
xor
mov
cmp
das
lods
outsb
scas
adc
sub
gs
xchg
sub
in
sti
lcall
jnp
adc
test
fs
fs
and
xchg
or
pushw
lock
scas
jmp
lock
shlb
xor
insb
lods
call
je
nop
mov
dec
imul
loop
and
jne
push
bnd
adc
xor
sarb
or
mov
ret
and
and
fcmovbe
jg
cmp
cmpsl
inc
mov
in
sub
je
jo
and
push
aas
mov
loopne
xor
push
popf
loop
and
into
sub
push
mov
nop
clc
sub
and
mov
movsb
and
sub
or
mov
arpl
dec
jo
mull
adc
sub
jns
dec
lret
je
repnz
nop
jo
sub
insb
nop
add
xor
test
std
and
and
insb
fwait
mov
add
and
cwtl
jg
mov
pop
loop
pop
mov
lds
pop
lret
mov
mov
mov
negl
test
jmp
cwtl
mov
add
aam
mov
jl
daa
pop
inc
mov
bound
xchg
mov
jnp
in
xchg
mov
xchg
nop
and
or
mov
into
fisubl
bound
push
fwait
mov
and
inc
xor
jno
and
jg
insl
push
inc
inc
scas
scas
sbb
mov
xchg
loop
xor
jl
cmc
cmp
test
iret
sbb
sbb
ret
cmp
inc
jno
bnd
sbb
sbb
mov
iret
shll
or
das
jno
dec
sbb
rcrl
in
dec
pop
push
imul
xor
push
into
jle
stos
ja
outsb
xchg
je
sbb
aam
cmp
adc
add
cmp
sbb
sbb
fs
lods
scas
push
mov
divl
pop
ds
sbb
add
sar
sbb
fsubrl
dec
pop
xor
push
xor
sbb
ret
push
das
rorb
hlt
jmp
dec
inc
lret
dec
sbb
repnz
cmp
popa
add
outsl
into
mov
pop
mov
pop
adc
mov
inc
pushf
gs
shlb
and
pop
sub
inc
push
lret
cld
aam
inc
sbb
sarb
dec
sbb
rcl
dec
scas
push
fistpll
in
inc
ret
fstp
jnp
xchg
adc
add
sbb
mov
movsb
test
pushf
popa
xchg
cmpb
add
mov
mov
repz
andl
shlb
mov
shlb
inc
cmpsl
mov
xchg
sbb
stos
dec
nop
mov
popa
test
mov
call
or
mov
push
mov
add
dec
cmp
mov
cmp
mov
xchg
push
out
xor
pop
mov
in
mov
sub
and
lcall
aam
mov
jge
daa
jnp
push
test
aad
dec
shll
hlt
xor
daa
outsb
mov
les
adc
jg
add
push
mov
ja
dec
push
dec
sub
sub
lea
add
and
int3
push
ja
and
ret
ds
push
fwait
mov
stc
dec
ret
lcall
ja
repnz
or
inc
addr16
fstpl
into
ds
aaa
xchg
insb
adc
stc
push
outsb
adc
mov
inc
fdivrl
adc
imul
testl
out
cli
repz
xchg
mov
jp
int3
sub
dec
cmpl
lods
inc
mov
jge
cmp
dec
adc
cmp
adc
sarl
je
mov
sbb
or
mov
or
adc
adc
nop
pop
push
shrb
dec
mov
cmp
cmp
cmp
sti
cmp
xchg
dec
xor
inc
jne
loop
jbe
cmp
pop
mov
sarl
lea
adc
testb
test
pusha
sub
scas
fdivr
sbb
adc
pop
mov
push
adc
shrb
cmp
or
into
cs
sbb
pop
mov
lods
mov
and
fcmovbe
jle
fiadds
outsb
arpl
add
ficoms
mov
cmp
sub
adc
jae
fs
and
mov
and
jle
jo
cld
pop
ffreep
mov
xchg
mov
jle
mov
fisubrs
and
mov
mov
lcall
sbbb
xlat
push
mov
mov
popf
stos
imul
mov
push
mov
testl
maskmovq
notl
sbb
movsl
shl
das
and
add
push
nop
out
js
ffreep
mov
dec
sbb
lret
mov
mov
rclb
lret
shll
cmp
mov
gs
in
pop
jg,pn
stos
imul
aam
xor
das
and
mov
fists
push
mov
or
or
or
popa
sahf
cmp
pop
pop
sub
popa
fwait
jb
adc
xor
in
sti
push
loop
or
xlat
push
mov
arpl
xchg
scas
cmp
popa
inc
xchg
dec
xchg
daa
out
jl
test
and
or
cld
in
popa
mov
mov
pop
aas
pop
push
cli
fldenv
sbb
aad
repz
ljmp
dec
sahf
frstor
stc
std
ret
xor
adc
outsl
jmp
test
test
out
mov
fldcw
addr16
jecxz
or
ret
push
xchg
cltd
jmp
lret
cmp
xor
or
jo
stos
popf
mov
or
pop
in
push
jg
inc
sub
scas
stos
and
les
in
mov
jns
test
xor
bound
fiaddl
mov
fcoml
add
fmuls
popa
fwait
pop
cmc
push
mov
enter
push
mov
xchg
push
aas
pop
insl
pop
pop
add
add
xchg
testl
pop
pop
add
pop
mov
ret
jbe
add
in
jl
das
insl
pushf
iret
add
lock
popa
sahf
insb
add
orb
xor
cmp
mov
add
mov
add
cwtl
aaa
jno
cltd
stos
js
jle
add
stos
das
insw
cmp
sbb
fcmovne
sbb
insl
inc
data16
xchg
loope
sub
add
mov
sub
jle
sbb
add
mov
rolb
inc
xchg
add
sub
mov
jle
test
popa
mov
xchg
add
lahf
pushf
pop
add
ret
insb
push
lock
and
sarb
js
push
push
xchg
js
jle
jno
inc
xchg
mov
nop
ds
scas
lds
mov
dec
and
stos
js
jb
ds
in
mov
jl
repnz
rorb
jmp
insl
ret
mov
add
mov
jle
arpl
incb
pop
add
mov
ret
mov
inc
lret
sti
insl
dec
add
dec
push
adc
add
jle
sub
jmp
pop
sub
push
and
jb
ss
push
adc
pushf
sub
pushf
push
cld
mov
lcall
lods
lret
insl
pushf
jl
mov
fwait
pushf
inc
sti
mov
ret
test
jge
pop
loop
sti
xchg
mov
jbe
and
sub
cli
xor
lret
insl
mov
std
loop
cli
ss
in
pop
fisttps
pop
pop
and
cli
inc
popf
mov
xchg
shll
inc
stc
xor
lret
mov
mov
push
testb
xchg
insl
js
addr16
jle
mov
pop
adc
sub
adc
mov
nop
clc
sub
arpl
cmpsb
inc
xor
cwtl
dec
jno
cmp
out
js
xlat
jno
jne
xchg
xchg
or
cmp
mov
sahf
push
add
xchg
adc
jp
xchg
or
mov
insl
decl
or
cltd
xor
adc
jno
das
bound
xchg
loope
stos
xor
je
jmp
popf
and
and
cmc
mov
mov
lret
insl
pushf
dec
hlt
mov
jle
adc
mov
push
clc
hlt
nop
cmp
es
mov
test
insl
mov
fmul
bound
in
out
jecxz
inc
into
sbb
nop
repz
ret
repz
sbb
adc
or
les
sbb
jns
jp
shl
ja
add
jle
xor
icebp
inc
popf
ret
mov
add
pushf
je
mov
insb
push
lock
ret
jmp
add
dec
jmp
shll
jl
pop
fcoml
dec
inc
push
lock
aas
pop
add
jle
sub
daa
jle
arpl
add
loop
sbb
push
push
jle
ja
in
mov
outsl
insl
pop
pop
sbb
jle
mov
sbb
ret
insb
adc
in
and
mov
fadd
sub
les
mov
or
jne
push
sub
ljmp
insl
cmp
lret
jae
cmp
adc
fucomi
and
xchg
mov
mov
sub
shll
mov
mov
adc
jle
inc
ljmp
stos
jge
aas
fcompl
cli
ljmp
insl
jp
jb
inc
lahf
jns
jae
mov
jbe
aam
mov
movsl
js
filds
hlt
mov
pushf
add
out
mov
int
ret
jle
mov
out
push
jecxz
jle
sub
out
shrb
ret
jle
xchg
sbb
pop
outsl
add
push
stos
nop
jne
cs
mov
push
outsl
inc
or
jmp
in
jmp
in
adc
dec
mov
fadd
test
outsl
popa
inc
or
mov
xchg
std
in
out
jno
mov
in
rorl
push
call
push
js
jecxz
mov
push
jl
fstps
cmp
loop
cmc
mov
loop
insb
int3
lock
js
loop
lahf
xor
inc
popf
mov
fldcw
je
sub
out
js
xlat
jae
ja
xchg
or
js
ret
mov
mov
pop
mov
cmp
popf
insl
flds
enter
aad
iret
out
sahf
adc
inc
out
cmp
jle
fstps
movl
mov
push
test
inc
ja
clc
call
ja
cmp
cmp
push
lret
scas
and
popf
fmuls
ret
jle
rclb
mov
mov
jae
fsubrs
add
mov
push
xchg
sub
xor
jge
push
cmp
fsts
cld
mov
push
pop
push
push
orb
fsubrs
xor
andl
cmp
pop
mov
add
lds
hlt
mov
adc
out
inc
xlat
mov
and
movsl
lcall
nop
jg
pusha
aad
hlt
cmpsl
cmp
mov
js
fldl
hlt
mov
pushf
pop
aam
pop
xor
popa
mov
and
ret
jle
or
aam
push
cmp
jle
jle
rcll
in
lods
and
xor
decl
pcmpgtb
inc
lret
shr
mov
sahf
scas
lcall
mov
roll
out
js
loop
rcll
inc
pop
rclb
or
push
popf
out
and
mov
fs
jmp
enter
iret
out
js
or
inc
add
mov
mov
sub
sbb
push
mov
arpl
mov
jbe
mov
int
fldcw
lret
and
ss
neg
loop
or
cwtl
int
jp
or
ret
xchg
out
lret
cmp
fwait
rolb
int3
pop
lahf
cli
mov
lock
fwait
pop
mov
jne
xchg
aas
div
lret
or
pushf
push
lret
mov
xchg
js
lock
add
das
arpl
jnp
mov
inc
inc
lret
xor
lret
test
jle
jno
repnz
pop
leave
mov
mov
mov
push
or
insl
jb
ds
ret
fdivs
inc
imul
sahf
sub
fcoms
or
pop
mov
gs
bound
mov
stc
enter
mov
stos
pushf
scas
enter
out
repz
adc
push
mov
sahf
adc
repnz
jecxz
popa
lahf
pushf
lret
mov
jle
imul
xchg
push
aas
movb
sub
nop
jnp
push
add
idivb
stos
jns
imul
or
ret
cmp
out
add
sub
insb
les
xchg
popa
in
sub
les
mov
jecxz
ret
add
nop
out
in
sub
lock
add
mov
pop
xchg
in
or
sti
jle
out
jmp
ret
lds
ret
lcall
ret
arpl
clc
ljmp
faddp
shrb
mov
xchg
lret
in
repz
ret
cmp
lcall
jmp
xor
jl
mov
call
sub
mov
adc
mov
lock
sub
fisubrs
stc
cwtl
aad
outsb
or
inc
mov
sub
mov
add
loopne
outsb
bound
add
je
rcrl
insb
int
out
push
adc
inc
push
inc
dec
mov
popf
cmpsl
or
push
adc
mov
xchg
out
adc
ja
outsb
adc
inc
adc
add
cld
shrb
mov
loope
into
insb
call
cmp
and
stos
stos
mov
cmpsb
movsb
out
mov
pop
rcrb
mov
cmpsl
jnp
jne
add
pushw
pop
ja
pop
dec
out
jle
inc
mov
mov
pop
adc
js
adc
mov
arpl
shl
push
push
adc
nop
mov
adc
in
movsb
outsb
cmp
pop
push
leave
dec
cmc
in
add
mov
imul
mov
mov
pop
add
push
js
nop
ds
in
push
mov
cli
aaa
sti
cli
pop
mov
xadd
dec
or
add
pop
dec
clc
ficoms
and
adc
sahf
movsb
mov
sbb
add
adc
xor
push
sahf
push
add
add
lods
xor
clc
cmc
in
adc
xchg
stos
adc
sti
in
aaa
add
leave
mov
mov
mov
loope
push
mov
mov
mov
mov
add
insb
ret
fs
mov
mov
nop
mov
push
ss
cmp
jle
in
jecxz
add
mov
pop
and
add
clc
loopne
mov
mov
stos
pushf
mov
aam
or
cmc
push
pop
mov
xor
mov
xchg
fmul
mov
mov
push
xlat
push
bound
mov
popa
mov
xor
scas
popa
pop
mov
xchg
push
in
mov
cmp
mov
jg
pop
mov
pop
mov
mov
mov
mov
aam
leave
mov
cmp
lock
iret
cs
sub
lock
jo
mov
mov
mov
xchg
mov
mov
sub
lock
clc
shll
mov
mov
push
pop
mov
cmp
sub
popa
mov
mov
fisttps
out
xchg
jl
ret
mov
movsl
mov
sub
mov
pop
idivl
aam
daa
mov
fcoms
pop
mov
repnz
nop
fbld
add
mov
inc
xchg
shll
adc
add
push
mov
popa
mov
fldcw
sub
mov
xor
mov
jle
sti
mov
hlt
scas
mov
add
mov
inc
lock
or
fidivl
fmuls
aam
int3
scas
movb
cmpsl
das
mov
pushf
pop
add
mov
push
scas
das
iret
or
scas
fcmovu
fildl
mov
dec
fstps
xchg
inc
jb
add
pushf
push
lods
mov
fwait
pushf
sub
popa
mov
lods
inc
mov
mov
jnp
mov
mov
lods
add
inc
adc
js
lock
or
and
lods
mov
push
stos
xchg
imul
stos
fwait
nop
repnz
ljmp
outsb
sbb
mov
jbe
test
lock
stos
nop
sub
add
mov
ljmp
pop
test
test
popa
sub
test
test
test
shll
push
test
mov
stos
mov
lret
test
fwait
pushf
mov
rcll
imul
movnti
add
nop
push
shrb
lock
add
stos
test
sahf
lret
sub
add
xchg
cmpsl
mov
push
push
nop
push
lock
add
push
mulb
cmpsb
mov
mov
sbb
movsl
psubusb
movsl
popa
fwait
pushf
ret
shll
sahf
or
adc
add
pop
adc
mov
int
inc
xchg
rcrb
and
movsb
inc
xchg
arpl
mov
movsb
mov
nop
jle
fisubl
popa
fwait
pushf
mov
dec
xchg
cmp
jl
add
popa
cmp
ret
je
cld
mov
mov
stc
dec
cmp
add
push
push
mov
int
cli
lock
popa
mov
mov
addr16
push
mov
movd
lock
rcrb
mov
leave
mov
iret
movsb
movd
nop
mov
mov
add
data16
jl
fldcw
cmpsb
push
sbb
add
pushf
sbb
mov
lahf
popa
test
inc
mov
cwtl
lahf
ret
sbb
lock
popa
mov
lock
add
fmul
sahf
popa
cmp
popf
add
sub
lock
or
cmp
push
cmpps
nop
sub
mov
pushf
popa
lahf
popa
fstpl
nop
cmp
fwait
mov
inc
fwait
xchg
insb
popf
ret
cmp
lock
pop
into
into
fwait
nop
imul
pop
mov
inc
lcall
lcall
xchg
lcall
push
lock
add
and
cltd
inc
lahf
push
lock
nop
push
fcomps
push
cwtl
inc
mov
inc
cwtl
movb
pop
jle
mov
rcl
push
cwtl
jo
pop
jle
inc
dec
ret
mov
mov
cwtl
add
lock
add
mov
ljmp
enter
pop
xchg
mov
nop
cmp
inc
inc
iret
mov
subb
es
or
adc
adc
add
lock
add
inc
jmp
lea
sar
and
ret
lock
or
loop
mov
nop
sub
xchg
add
lcall
xchg
add
mov
fst
xchg
and
mov
cmp
ret
popa
xchg
inc
lahf
mov
xchg
xor
xchg
inc
lahf
arpl
add
popa
test
outsl
xchg
add
dec
ljmp
ss
xlat
int
lahf
and
cmc
in
push
pushf
jns
ret
and
inc
mov
nop
jne
push
jmp
add
mov
mov
cmp
add
xchg
jl
sub
add
fidivrs
sahf
adc
mov
sub
lret
mov
scas
add
mov
dec
sahf
pop
add
mov
mov
test
js
mov
add
bound
scas
mov
or
pop
dec
and
mov
lea
popf
ret
in
lea
pushf
lret
lea
mov
lea
lock
movb
lock
js
lock
cs
add
mov
ret
out
add
mov
pop
fnstenv
sub
jo
sbb
mov
mov
mov
add
rorl
ljmp
cmp
scas
mov
mov
xchg
sub
fmuls
mov
mov
popa
mov
mov
mov
ret
ds
push
xor
xchg
icebp
movsl
fldt
ret
loop
inc
mov
jno
mov
and
inc
scas
cwtl
bound
xchg
pop
mov
xchg
test
mov
push
add
xchg
scas
insl
loope
ja
test
aas
bound
lret
sub
mov
jle
add
jae
jmp
les
popa
mov
sub
pop
test
lcall
rcr
mov
aas
jbe
testl
mov
jle
mov
out
lods
jle
ret
xchg
test
mov
jle
jbe
add
pushf
push
andl
aaa
addl
add
popa
fwait
div
addl
lds
inc
mov
cld
mov
jnp
add
xor
addb
fs
jle
pushf
jb
mov
negl
int3
mov
mov
idiv
stos
ficompl
or
jecxz
test
mov
ds
ret
lods
jb
mov
fs
sarb
les
inc
jge
xlat
test
rclb
sub
sbb
mov
gs
fs
xchg
mov
ror
inc
rol
mov
add
and
inc
adc
xor
mov
popa
iret
ljmp
mov
pop
cmpsl
call
mov
mov
cmpsb
or
and
ret
add
mov
mov
mov
mov
movsl
nop
fisttpl
sub
mov
je
jo
test
or
movsb
xorb
mov
hlt
movl
pop
push
js
xchg
add
or
lods
mov
idiv
xlat
mov
sbb
cs
les
or
adc
enter
mov
mov
ret
mov
test
xchg
subb
test
decl
call
movsb
cmpsl
lcall
push
nop
xchg
pop
movsb
icebp
jmp
js
adc
sub
xchg
adc
nop
and
add
loopne
fcoml
xor
lds
or
lea
orl
aam
movb
pop
test
cmp
lods
sarl
out
lods
fimuls
js
or
movsb
xchg
add
lods
out
jecxz
test
lock
lahf
xchg
adc
adc
and
mov
cmp
mov
hlt
orl
notl
in
mov
les
or
lods
hlt
mov
ffreep
aaa
pushf
or
out
xchg
dec
or
lcall
cmp
rcrl
loopne
loope
xchg
cltd
cmp
hlt
xchg
in
mov
enter
rolb
sbb
test
add
and
mov
cmpsb
jne
or
pop
adc
sbbl
insb
je
rcrb
or
xchg
bound
sub
daa
mov
adc
nop
sarl
into
les
pop
into
push
lds
int
subl
or
jle
movsb
popf
mov
mov
sub
sub
cmp
cmp
out
xchg
push
ror
dec
and
lcall
pop
jg
lcall
mov
mov
scas
ret
jmp
std
gs
inc
add
push
dec
xchg
repnz
imul
adc
arpl
inc
cmp
ja
mov
int3
int3
pushf
push
leave
sub
test
sub
fimull
nop
movsl
add
mov
xlat
mov
cwtl
movsl
inc
xchg
ds
clc
sub
addr16
push
add
add
lods
lods
mov
cwtl
or
or
push
push
mov
inc
pushf
push
xchg
or
leave
add
out
adc
mov
addb
push
test
xchg
ss
xchg
addl
andb
adc
lcall
mov
add
mov
int
lds
sub
aam
cltd
lds
outsl
cmc
test
xchg
cmpsl
fadds
rclb
addl
addb
jg
orb
xchg
push
outsl
sub
mov
rcrb
in
fdivs
xchg
popa
std
xchg
ljmp
ficoms
sbb
popa
lret
stos
mov
int
imul
adc
inc
mov
subl
lret
push
in
mov
lret
xchg
bound
ljmp
pushf
and
popf
inc
leave
mov
lods
dec
cld
jge
clc
mov
decb
loopne
fiadds
lret
inc
loop
movl
sbb
inc
ja
and
xchg
adcl
xchg
mov
add
xchg
test
subl
inc
daa
inc
mov
rorl
mov
pop
and
lds
sbb
lock
jno
mov
int
jb
fnstsw
rorl
stos
push
loop
or
enter
outsl
adc
ret
jmp
and
add
cwtl
ret
cwtl
inc
pop
enter
inc
test
movsb
sub
xorb
icebp
test
jo
push
mov
inc
sbbb
iret
and
pushf
rcl
aad
stos
and
jge
or
mov
enter
sub
mov
xor
nop
cmc
push
add
movsb
mov
cwtl
mov
enter
cwtl
inc
lret
mov
cwtl
loopne
and
stos
addl
imulb
stos
jo
push
mov
call
xor
je
pop
mov
jns
mov
in
mov
fwait
add
push
and
push
jge
repz
push
lods
fistl
ja
in
jno
inc
js
cmpsb
push
imul
rcl
push
mov
sub
pop
ret
in
sarb
jbe
jb
jne
jae
cmc
xchg
das
mov
imul
les
add
cld
test
into
test
cmp
rcll
add
jg
mov
add
lcall
adc
ror
cli
or
adc
mov
aaa
outsl
and
enter
in
ds
add
xor
or
push
pop
mov
dec
mov
popl
dec
mov
enter
sub
cmc
enter
and
pushf
stos
xchg
outsb
leave
mov
or
sbb
mov
repnz
test
or
mov
add
sti
rcrb
xchg
cmc
pop
imul
or
mov
sub
push
shll
ficoml
bound
int
and
mov
dec
test
add
push
lahf
adc
inc
mov
lods
sub
ja
xchg
mov
xchg
cmp
movsb
pushf
mov
xchg
mov
dec
xchg
inc
inc
mov
scas
inc
add
mov
inc
fmuls
adc
ret
lret
mov
sbb
lret
dec
shr
xor
mov
or
negl
xchg
add
mov
xchg
xchg
mov
add
jle
movsb
add
out
test
enter
inc
test
test
mov
inc
flds
dec
sbb
inc
pop
xchg
inc
lock
add
aam
mov
pop
in
in
mov
xchg
cmc
repnz
push
fsubp
or
mov
aas
xchg
leave
int
mov
stos
lret
inc
cli
push
xor
orl
push
scas
pop
aam
in
cltd
repnz
xchg
movsl
in
jmp
fcomp
lods
sbb
xor
mov
test
shrb
sub
aam
xchg
loopne
loope
or
fdiv
enter
adc
dec
sub
mov
ja
push
ret
add
out
cmc
loop
lods
mov
dec
jecxz
or
fsubrl
mov
xlat
int
or
xchg
lds
lcall
scas
hlt
fwait
or
cmpsb
push
dec
enter
adc
lea
sbb
mov
mov
xlat
fiadds
inc
xchg
cmpsl
add
into
orb
sbb
or
jnp
mov
loopne
inc
test
mov
add
rorb
xchg
ret
sbb
out
mov
adc
test
xchg
jb
out
mov
mov
mov
aad
or
sbb
jb
lcall
test
push
mov
shlb
mov
adc
mov
mov
lods
out
enter
shrb
out
aam
rolb
cmp
out
outsl
mov
jno
scas
popf
mov
andb
cltd
mov
fsubrl
insb
sbb
cmpsl
cmc
pop
leave
push
pop
xchg
xchg
jl
stc
cltd
push
or
dec
xchg
and
mov
inc
loop
data16
xchg
xchg
orl
xchg
imul
lahf
hlt
mov
sarb
lret
lahf
lret
inc
mov
mov
sbb
incb
aam
mov
xchg
mov
xchg
shl
int3
sub
and
or
dec
popl
shll
test
adc
js
jp
in
cmc
imul
mov
jbe
nop
fwait
xchg
push
arpl
ljmp
leave
mov
pop
fwait
jbe
jo
loopne
cmp
test
xchg
add
xchg
xchg
push
or
mov
nop
mov
in
adc
test
movsl
lods
mov
test
jmp
mov
mov
aaa
stos
adc
lcall
enter
cwtl
lret
mov
push
and
jo
mov
xchg
mov
add
or
fisttps
leave
and
inc
and
jmp
sbb
lahf
mov
cwtl
push
add
ret
pop
push
sub
xchg
cli
inc
adc
cltd
and
imul
inc
cld
in
int3
mov
push
popa
or
dec
rol
hlt
jp
sbb
shll
vmovss
sbbl
push
pop
xchg
jg
popl
and
xchg
jbe
xorl
lcall
rorb
std
adc
ja
or
scas
nop
imul
dec
dec
mov
inc
mov
or
adc
inc
and
pusha
or
lret
test
icebp
gs
sbb
enter
xchg
push
mov
mov
popa
subl
adc
xchg
lret
and
cmp
shrl
ret
push
sarb
push
shl
add
pop
movsb
pop
or
daa
adc
pop
jnp
inc
push
or
mov
jo
push
test
or
mov
lds
push
adc
add
dec
rcll
mov
jb
and
xchg
outsb
adc
loope
mov
pop
popf
fcomip
lods
fcmovne
inc
or
inc
arpl
cmp
int3
mov
rcl
xor
cmpsl
out
repz
pop
cmp
mov
adc
mov
roll
inc
fcomi
push
inc
cmc
pusha
inc
xor
jae
adc
lret
stc
mov
pusha
push
mov
adc
mov
jge
xor
nop
es
sbb
imul
mov
jo
mov
test
dec
arpl
pop
jge
inc
ret
push
inc
pop
push
jnp
hlt
inc
pusha
pop
out
adc
adc
and
sbb
shll
xlat
loopne
xchg
subl
mov
mov
lea
roll
sahf
int
add
lea
push
loopne
les
fcoml
jg
movsb
fimuls
faddl
test
cmp
pop
mov
or
in
addb
fadds
mov
add
mov
jne
addb
xchg
mov
inc
test
movsb
jle
mov
bound
xor
mov
cld
mov
jo
lret
hlt
movsl
mov
fadds
cli
data16
mov
add
stc
test
inc
js
stos
pop
adc
aas
or
xchg
mov
dec
dec
pop
repz
inc
mov
or
mov
push
or
xchg
dec
lods
add
ljmp
movsl
pushf
jne
add
decb
push
jb
subl
mov
lds
rcrl
adcb
lea
sub
shl
mov
leave
out
ret
mov
movsb
push
add
push
imul
adc
rol
cmp
add
ret
ret
cmpsb
jno
cltd
fiadds
dec
mov
dec
stos
push
shll
loop
and
xor
or
inc
addr16
sub
filds
clc
or
jl
in
inc
call
mov
jo
enter
dec
or
push
jecxz
xchg
aad
ja
cwtl
xor
cmpsb
loopne
int3
movsl
test
cltd
add
test
adc
fidivs
push
xor
mov
ror
or
mov
xchg
cwtl
addl
jo
mov
test
fsts
xchg
jo
push
add
das
ss
aaa
fwait
aaa
add
or
testl
jno
loop
test
mov
shlb
pushf
rcl
shrl
cli
stos
fcomps
hlt
mov
inc
and
insb
or
adc
ret
nop
test
push
iret
xchg
xor
loop
ret
enter
std
sub
jge
add
mov
or
jl
jge
test
scas
xchg
push
adc
jecxz
test
mov
daa
sub
push
inc
push
shl
xchg
push
hlt
sahf
mov
xlat
pop
test
inc
adc
repnz
dec
leave
clc
cmpsb
cmp
push
inc
mov
hlt
aad
mov
ret
pushf
mov
add
pop
out
and
sahf
xchg
cmpsl
leave
and
mov
dec
es
add
xchg
shr
dec
rcll
xchg
and
inc
push
mov
mov
syscall
jge
icebp
cmpsl
nop
insb
jb
pushf
xchg
cmc
movsl
movsl
push
mov
and
hlt
dec
test
jnp
adc
mov
jmp
or
rorl
pop
mov
add
inc
enter
mov
cmp
jl
mov
iret
push
sbb
xlat
jb
clc
lds
add
inc
rclb
ss
fndisi(8087
xor
cmc
testb
leave
add
xlat
std
loope
adc
rclb
call
imul
dec
test
mov
adcb
mov
sti
int3
int3
pushf
add
dec
rorb
xor
or
push
rol
inc
xor
and
xchg
fwait
mov
enter
call
dec
ljmp
enter
nop
imul
jecxz
int3
jmp
cmpsl
stos
flds
loopne
dec
mov
dec
push
pop
into
pop
jmp
nop
out
jge
pop
mov
mov
fcom
int
xor
data16
pop
and
inc
or
adcb
pop
mov
scas
test
xor
mov
mov
adcl
inc
mov
push
adc
dec
xor
rcl
ljmp
movsb
add
pop
call
test
pop
stos
mov
aam
jo
jecxz
test
pushf
xchg
ds
mov
xchg
lods
imul
mov
add
jbe
iret
dec
jl
shlb
stos
cltd
mov
leave
mov
xchg
shrb
pop
cltd
repnz
les
xor
lret
shr
add
mov
push
fwait
les
add
popl
sbb
test
ret
pushf
adc
inc
scas
iret
xchg
or
inc
inc
dec
jg
rcr
inc
stc
add
aas
int3
xchg
into
xchg
int3
ljmp
jl
cltd
and
js
add
subb
push
dec
pop
mov
dec
aam
cmc
stos
int3
mov
aaa
mov
cwtl
or
cmpsl
rolb
xor
leave
sub
ret
test
cmpsb
mov
push
push
outsb
xchg
mov
in
mov
hlt
inc
mov
inc
dec
outsb
mov
int
adc
test
mov
mov
out
jl
mov
fucomi
inc
xchg
mov
ss
cwtl
inc
test
xor
xor
leave
mov
mov
xor
and
subl
shrb
add
mov
pop
aam
nop
or
push
mov
test
mov
rorb
les
fdivs
sbb
and
dec
dec
fmull
shlb
mov
or
jo
xor
mov
xorl
xchg
in
rorb
mov
sbb
leave
orb
pop
inc
lock
mov
add
jmp
fwait
pop
add
xchg
jae
mov
lret
stos
int3
mov
add
inc
sub
orb
aad
mov
and
ljmp
enter
push
mov
jno
mov
shrl
lret
mov
shlb
call
xor
sbb
or
test
xor
insb
daa
mov
add
xchg
mov
fwait
shr
call
or
notb
enter
cmpsb
push
inc
pop
or
mov
xchg
and
adc
mov
push
cmp
lcall
xchg
cmc
inc
or
inc
rcll
cmp
sarb
jg
mov
andb
loopne
mov
jne
dec
add
subl
pop
xchg
jp
mov
adc
mov
or
or
aad
fists
ljmp
mov
cmp
add
and
jp
ljmp
mov
mov
jg
cmp
cld
cmp
shrl
shrl
add
xchg
lea
bound
ds
sbb
shl
xchg
hlt
lret
or
repnz
add
inc
xlat
pop
loope
xchg
mov
mov
cwtl
add
jmp
add
je
add
nop
xabort
fstps
xchg
shll
repnz
aas
sub
mov
dec
repz
test
pop
mov
rcl
pop
call
enter
mov
push
xor
xor
shrb
loop
pop
cmp
nop
or
mov
scas
leave
fstl
adc
ret
sub
pop
xchg
leave
inc
pop
xor
jg
aam
aaa
movsb
or
repnz
hlt
push
mov
repz
inc
mov
inc
imul
sbb
xchg
mov
mov
mov
dec
cld
pop
fbld
pop
mov
add
rorl
test
cwtl
movsl
xchg
mov
inc
xchg
mov
mov
mov
in
fbld
adc
push
xor
lcall
pop
mov
subb
lods
xchg
sti
cwtl
rorl
fdivr
or
mov
adcl
add
jae
lahf
and
or
xchg
pop
push
sub
mov
cwtl
mov
adcb
xchg
daa
jbe
adc
mov
mov
mov
mov
addl
dec
testb
jb
cld
movsb
or
inc
mov
aad
jmp
mov
pop
dec
xlat
test
into
test
or
testb
xorb
cwtl
popf
add
cmpsl
rcrl
push
jl
cmpsb
mov
jg
into
pop
jo
lret
andl
mov
inc
jae
xchg
add
dec
pop
xlat
or
in
and
add
stos
mov
inc
xchg
adc
cwtl
push
adc
mov
and
pop
test
cmc
cmp
neg
mov
push
push
rcl
adc
bnd
pop
stc
xchg
rcrb
mov
xchg
cmpsb
jl
in
mov
insb
jp
or
je
rcll
mov
add
ret
loop
daa
mov
mov
xor
xchg
outsl
mov
cmp
fsubs
jo
xor
nop
mov
fdivrs
push
mov
das
das
bound
std
xchg
or
stos
or
je
adc
cs
sbb
push
push
nop
movsb
in
clc
pop
adc
movsb
fwait
dec
in
test
add
mov
test
and
cmp
sbb
and
inc
or
mov
push
mov
adc
push
pop
dec
dec
xor
movsb
shlb
ret
rcl
fimull
insb
cmp
adc
jo
cmp
cmp
fs
test
test
stos
sbb
mov
jns
aad
xchg
hlt
or
xchg
pushf
inc
xlat
addl
jp
mov
xlat
faddl
nop
stos
jae
push
add
shrl
fbstp
cwtl
int
leave
movsl
xchg
rcl
leave
xchg
xchg
call
imul
sbb
nop
dec
nop
mov
mov
mov
mov
or
scas
xchg
addl
xlat
hlt
xchg
xor
fbstp
mov
sub
clc
or
rcl
insl
fistl
mov
leave
sub
popa
or
mov
mov
ljmp
imul
inc
inc
imul
arpl
push
push
xchg
and
leave
stos
cmc
mov
xorl
dec
add
scas
stos
sahf
push
xorl
pop
mov
mov
subl
jb
aad
rorl
fimuls
xor
mov
and
out
movsb
mov
xor
adc
sub
and
mov
enter
cmc
mov
scas
xchg
popa
xchg
clc
inc
std
ja
jno
push
mov
xchg
and
int
data16
jne
divl
outsb
mov
dec
lahf
push
xchg
xchg
xor
lea
mov
iret
in
xlat
fists
lods
xchg
repnz
js
jmp
ja
jns
lds
mov
rcr
cmp
insb
push
jbe
adc
shlb
cmp
ror
adc
xor
mov
out
xor
sub
mov
jo
arpl
pusha
or
ja
push
sbb
scas
ret
dec
mov
lcall
aad
adc
mov
ficompl
dec
insl
push
loop
into
and
lods
mov
lcall
inc
adc
fimull
scas
shrb
dec
cmc
xchg
and
xlat
ror
xchg
mov
jb
fadds
shll
fcmovnb
hlt
mov
nop
mov
clc
push
pop
lods
addr16
and
mov
xchg
xchg
or
scas
enter
adc
adcl
movsl
fs
into
mov
or
cmpl
loopne
fnstsw
into
mov
rolb
mov
xor
jmp
jg
xchg
adc
xlat
or
add
xchg
ret
or
push
inc
test
xchg
inc
xchg
pop
mov
or
imul
sub
pop
aad
cmp
ret
mov
add
mov
mov
pop
cltd
aam
rorb
sbb
scas
in
aad
pop
xchg
daa
sub
ret
insl
in
sbb
mov
call
pop
rcl
jmp
xor
mov
sub
mov
jmp
pop
push
mov
push
mov
dec
mov
mov
add
mov
mov
and
push
lret
mov
mov
mov
jbe
dec
mov
adc
mov
add
jnp
push
loop
les
insl
aas
add
xchg
inc
mov
imul
sarb
popl
cld
outsb
cmpsl
and
jae
sarb
mov
test
test
stos
inc
inc
xchg
inc
add
cmp
xor
and
mov
fldenv
fsubr
jbe
xchg
inc
nop
insb
dec
inc
lret
cmp
jbe
jae
inc
dec
push
call
dec
xchg
push
xor
xchg
push
rorl
movsb
rcrl
pop
inc
xchg
mov
call
arpl
push
mov
jne
mov
enter
xor
clc
popa
jbe
xor
addr16
xchg
mov
xchg
jns
vdivsd
push
insb
stos
add
nop
mov
aam
nop
and
push
pop
xchg
xor
sub
nop
and
and
adc
mov
loope
sarl
into
add
lret
out
hlt
lret
shrl
test
jno
mov
inc
mov
loop
sub
or
mov
imul
inc
push
cmp
lret
pop
sti
add
xlat
add
arpl
mov
sahf
test
and
or
popa
cmpsl
xchg
in
dec
rclb
adc
addr16
addr16
xlat
ret
loop
pop
mov
test
adc
sbb
popa
in
test
push
mov
mov
icebp
mov
into
pushf
mov
rcr
push
lret
and
and
add
pop
or
or
mov
mov
adc
call
jno
pusha
mov
push
mov
xchg
or
rol
sbb
pusha
push
bound
xchg
loopne
nop
cmp
jo
inc
adc
into
lret
mov
fildll
aaa
test
fwait
or
mov
dec
add
rcll
rcr
imul
jmp
push
int
pop
rcr
cld
pop
inc
jnp
test
shrb
add
fisttps
push
cld
push
cli
or
add
pop
mov
ds
std
xchg
xor
lods
arpl
mov
xchg
xchg
imul
jg
adc
cwtl
rcl
rorb
call
shlb
rolb
sar
aaa
popf
xor
mov
iret
pushf
call
mov
ftst
aaa
lahf
rcr
out
push
out
push
repnz
push
test
mov
pushf
mov
xor
push
outsl
jae
ja
xchg
lret
sarl
ret
fs
xchg
sbb
xchg
cmpl
aaa
cmpsb
mov
int3
fldcw
rcll
int3
lahf
addl
lret
lock
mov
leave
jne
hlt
xchg
into
xchg
xor
xchg
mov
and
xor
stos
divb
loopne
jo
mov
adc
roll
sarl
mov
mov
jb
icebp
lock
lret
inc
aaa
sbb
outsb
js
mov
mov
or
mov
sahf
mov
dec
cmc
push
js
cmpsl
xchg
clc
jp
fisubs
nop
mov
cmpsb
xlat
mov
jl
pop
fwait
adc
mov
imul
stc
fidivrl
les
mov
mov
fidivrl
mov
fstl
popa
in
push
jbe
jmp
sbb
cmp
enter
or
mov
add
lods
adc
or
mov
dec
pop
xlat
je
add
inc
inc
xlat
adc
shll
push
xor
pushf
clc
jns
lds
pop
imul
mov
int3
lock
add
mov
test
iret
mov
nop
sarb
xor
lret
fs
and
jmp
sub
loop
pop
pusha
adc
arpl
sbb
inc
aad
xor
int
enter
shl
inc
fadds
or
ficomps
fwait
sub
or
mulb
lds
dec
xchg
inc
dec
sbb
xchg
test
test
ljmp
enter
insl
and
shrb
out
add
shlb
lret
xor
add
test
or
xchg
nop
push
mov
jae
mov
xchg
pushf
push
mov
cwtl
movb
fwait
or
inc
add
nop
mov
jns
in
aas
cmc
add
xchg
xlat
pusha
mov
in
mov
gs
mov
adcl
aas
xchg
cmp
mov
pop
cmc
mov
test
out
scas
nop
xchg
dec
push
push
repz
sbb
adcl
jno
dec
faddl
xor
jo
cmpsl
aad
push
aam
test
rcrb
and
mov
loopne
inc
fidivrs
jle
clc
cmpsb
loope
ljmp
test
pop
mov
rep
add
or
mov
mov
add
adc
inc
out
cmp
inc
mov
pusha
jo
xorb
test
imul
inc
rclb
push
std
sub
pop
int3
add
adc
ljmp
sbb
nop
cmp
nop
negb
daa
xor
xchg
test
movsb
inc
add
inc
push
dec
popa
sti
mov
push
mov
xchg
ret
test
adc
lods
das
xchg
ss
in
movsb
add
enter
mov
xlat
xchg
mov
xchg
push
cmc
mov
xor
xor
xor
mov
rcl
push
movsb
leave
repnz
pop
rcl
xor
lods
pop
and
lods
inc
sbb
mov
ds
dec
sub
fsubrl
pop
movsb
ljmp
push
xchg
sbb
push
cmp
sub
inc
into
enter
mov
and
dec
lahf
addb
jae
mov
add
inc
sti
xor
jo
mov
clc
and
mov
add
xchg
cld
add
jle
add
cmc
jp
lods
out
mov
bnd
xchg
mul
mov
push
mov
pop
mov
bnd
les
push
test
jnp
popl
scas
fiaddl
test
jne
cmc
test
xchg
xchg
movb
fldcw
imul
jno
test
decb
push
or
imul
ljmp
cltd
add
xor
in
cmp
cltd
sbb
xchg
add
imul
sbbl
pop
mov
cli
clc
subb
rcll
mov
cmp
xchg
rcrl
outsb
mov
scas
sub
xchg
cld
cwtl
decl
aaa
cli
mov
cmpsl
adc
xor
int3
mov
xchg
leave
hlt
mov
test
xchg
nop
imul
nop
pop
icebp
test
movsb
int3
push
addr16
and
xchg
push
add
pop
mov
lret
rcrl
jns
push
int3
fwait
ret
or
add
dec
xchg
fisubrs
loope
or
lret
cltd
hlt
sbb
rorl
cmp
hlt
lcall
xchg
push
cmc
jo
push
ret
push
ret
adc
hlt
cltd
mov
adc
xchg
aaa
daa
mov
mov
or
push
mov
shrb
stos
sahf
adc
adc
rcl
push
cmp
insb
adc
adc
push
pop
and
fst
xlat
adc
pop
lret
dec
lret
jb
mov
rolb
inc
add
idivb
pop
cmp
xchg
fst
mov
in
mov
add
js
jns
aas
mov
enter
push
cmpsl
jecxz
mov
das
out
and
loope
loop
dec
lret
mov
adc
shll
das
push
scas
xlat
in
sbb
push
push
or
nop
push
add
ficomps
fcompl
xchg
imul
js
push
ds
dec
jp
mov
lret
shrl
rcll
add
xchg
nop
mov
insb
push
mov
sbb
mov
aad
inc
cmpsl
cs
in
xchg
sbb
push
mov
pusha
popf
dec
add
add
add
imulb
jmp
jp
repz
stos
mov
popf
test
mov
daa
fwait
outsb
insb
mov
dec
mov
mov
push
les
roll
xchg
stos
jb
in
sahf
ljmp
dec
icebp
sarl
mov
mov
sbb
dec
lret
iret
lock
or
cmc
fwait
and
sub
push
hlt
enter
sar
mov
repnz
xchg
mov
push
pushf
shrb
dec
or
test
cld
and
jmp
fsubrp
sbb
sbb
pop
shlb
jl
adc
stos
sbb
clc
subl
mov
sbb
sbb
jne
pop
jo
inc
imul
ret
pop
loopne
sub
test
mov
stc
hlt
cmp
and
xor
push
pop
inc
inc
push
jo
jo
or
inc
lods
mov
divb
rcll
or
mov
es
push
jecxz
addr16
imul
jne
dec
mov
cwtl
sti
mov
mov
dec
mov
push
lahf
lods
add
dec
mov
test
push
nop
xchg
mov
out
add
ss
xchg
pop
add
sarl
cmp
int
mov
test
jb
movsb
push
cmp
xor
xchg
push
or
cmp
xor
xchg
add
movsl
lret
lock
push
adc
mov
test
add
adc
int3
xchg
push
cmpsl
lock
mov
add
add
xchg
mov
and
es
out
daa
and
push
or
push
add
dec
pushf
mov
xchg
movsb
cwtl
les
pushf
mov
xlat
and
and
xchg
mov
mov
xor
lods
nop
add
inc
fldz
mov
push
or
movsb
jbe
xchg
mov
adc
in
scas
and
mov
ds
mov
int3
fstl
cmpsb
sbb
iret
mov
jne
test
sub
xchg
cwtl
and
jmp
lods
dec
lcall
xchg
test
mov
lret
inc
shrb
xor
addr16
sub
xor
cmp
and
jns
lea
fiadds
movsl
add
mov
or
jns
cwtl
cmp
jno
or
xchg
scas
lret
add
and
std
adc
fldt
xor
gs
dec
fyl2x
call
dec
inc
mov
enter
sarb
add
rcl
fldlg2
push
push
icebp
ja
andb
or
hlt
adc
push
rorl
pop
dec
dec
add
push
or
sbb
hlt
push
mov
out
mov
sbb
mov
clc
and
xchg
faddp
mov
sbb
lock
clc
or
inc
jle
or
movsl
ret
hlt
mov
dec
call
cmpsl
cwtl
scas
jo
add
xchg
in
sbb
lock
clc
pop
mov
cwtl
xchg
hlt
cli
pushf
pop
adc
jb
int3
jle
xchg
dec
fs
fwait
out
xchg
or
lods
fwait
loope
ss
and
or
loop
fwait
cld
call
aad
notl
fsubrs
xchg
jle
leave
ds
pop
lods
jmp
add
ret
xor
subl
lret
mov
cli
in
xor
add
pop
nop
cmpsl
dec
or
and
test
cld
imul
aaa
ljmp
xor
xchg
enter
call
mov
rcll
dec
mov
pop
lcall
cwtl
mov
int3
fcom
mov
or
add
add
in
cmp
cwtl
adc
mov
mov
es
mov
movb
js
sub
cmpl
stc
cli
leave
pop
out
and
cli
jb
aad
sbb
or
push
loop
dec
shll
imul
sub
xchg
pop
hlt
out
out
aam
pop
xor
rolb
test
sbb
push
ret
dec
cmp
jmp
jmp
pop
jbe
push
leave
push
fsubl
clc
lock
ret
mov
scas
rcl
add
iret
mov
mov
roll
sti
test
loopne
sub
fadd
xchg
push
dec
sti
jae
inc
lods
out
std
cmpsb
xchg
arpl
mov
sahf
enter
ret
roll
out
int3
into
push
gs
test
shlb
pop
aam
pushf
sbb
and
rolb
fdivs
sub
xor
int3
adc
jb
arpl
fldenv
sarl
or
shlb
iret
mov
mov
repz
das
inc
in
cmp
push
cmc
xchg
push
or
ja
add
sarb
inc
add
daa
push
sub
fmuls
orb
sbb
push
in
mov
cmp
cmpsl
in
xchg
cs
mov
les
rcrb
dec
rcr
in
and
dec
fcoms
sbb
aaa
ret
or
mov
out
xchg
rcll
adc
pop
inc
xchg
or
mov
into
adc
add
or
insl
ds
or
loopne
adc
mov
or
aam
xor
mov
push
lods
add
or
cmp
adc
insb
adc
adc
push
add
inc
adc
bound
imulb
test
ret
adc
mov
push
adc
xlat
dec
mov
adc
lock
fimull
xchg
hlt
test
inc
add
in
test
ret
adcl
movsl
mov
xchg
xlat
leave
mov
cli
mov
push
rol
push
push
fmull
sbb
sub
jno
shll
leave
xor
shll
imulb
xor
andl
loopne
push
imul
icebp
dec
lock
fsts
xchg
xchg
inc
mov
addb
xchg
rclb
add
xchg
rol
mov
jo
sub
rclb
test
cmc
xchg
lods
add
in
ja
jo
pop
enter
sbb
ljmp
ljmp
push
and
aas
fildl
sbb
imul
xor
test
add
mov
ret
dec
xchg
imul
nop
mov
test
jb
mov
push
add
mov
xchg
hlt
cmp
xorl
into
or
imul
mov
ficoml
imul
rcll
mov
dec
in
in
mov
rclb
stos
shlb
mov
pop
imul
and
ret
scas
xor
or
xchg
dec
lds
orb
outsl
test
fstpt
xor
or
movsb
or
cltd
outsl
mov
rolb
enter
fwait
lods
mov
faddl
mov
rorb
in
test
int3
sub
rclb
or
xlat
add
mov
or
loope
xor
mov
hlt
mov
mov
test
xchg
rcr
roll
mov
hlt
xor
inc
lret
shll
xchg
cld
cmp
or
js
mov
rcrl
nop
inc
mov
and
dec
push
cwtl
xor
fiadds
or
inc
push
enter
loopne
mov
scas
mov
test
dec
cmpb
adc
mov
test
stos
pop
xchg
std
pop
sarl
or
inc
sbb
mov
and
xchg
push
out
mov
push
enter
inc
and
jl
fbld
jl
add
cmc
pop
jo
rolb
lods
sbb
pop
add
divl
rorb
icebp
sbb
clc
rcl
aad
xchg
mov
push
cmp
sub
xchg
or
fdivl
mov
fwait
pop
mov
loop
cmp
cmp
lods
gs
cmp
insl
mov
movsb
icebp
and
sub
xchg
movsb
mov
sub
pop
push
mov
xchg
or
pop
stos
lock
addr16
aaa
cmp
dec
mov
addl
adc
outsl
jo
inc
ret
mov
xchg
xchg
mov
rol
lret
or
pop
mov
cmc
jb
incb
sub
or
out
mov
mov
inc
shll
arpl
add
mov
aad
pop
fsubrs
ret
ds
out
adc
fsubs
cmp
les
aam
insl
inc
add
cli
jmp
xor
lods
jbe
imul
leave
movsl
faddl
cmp
test
push
outsl
mov
adc
movsb
in
and
mov
data16
xchg
cmpsl
jns
xchg
andb
add
mov
movl
mov
roll
imul
cmp
test
cs
les
fstps
dec
daa
dec
loop
in
mov
ret
enter
mov
add
leave
shlb
pop
fwait
dec
mov
fisubl
lea
imul
jecxz
sbb
aad
rclb
mov
lcall
ret
stos
inc
mov
xchg
lods
push
test
mov
cmp
mov
rcr
rcrb
jbe
pop
sbb
push
mov
cmp
les
pop
popf
fsubs
hlt
jcxz
inc
adc
mov
mov
rcl
movsb
cmp
mov
iret
jno
mov
stos
jno
jge
dec
imul
std
mov
inc
stos
inc
fsts
xchg
testl
inc
stos
inc
mov
xchg
or
add
cmp
cwtl
jmp
mov
mov
or
es
shr
xor
or
test
push
and
adc
mov
add
add
adc
or
jae
ds
fmuls
pop
cltd
inc
or
addb
fs
rcrb
insb
or
or
sub
movsb
scas
push
pusha
dec
ss
cmp
out
xorb
jp
inc
inc
push
nop
cld
xchg
dec
ja
xchg
pop
xchg
leave
pushf
mov
push
mov
xchg
je
les
test
lds
nop
lret
call
mov
in
sub
cmpsl
jg
imul
adc
mov
call
cmp
shll
shrb
movsl
jecxz
in
push
adc
cmp
xor
mov
popf
ds
push
leave
pop
dec
nop
test
les
hlt
sbb
cmp
xchg
mov
frstor
out
cmp
mov
daa
mov
dec
inc
mov
inc
nopl
insb
rcll
add
mov
push
and
lret
stos
nop
js
cmp
sub
loopne
pop
insb
repnz
fists
movsl
cmp
dec
mov
sti
inc
aaa
adc
push
stos
fwait
rclb
fs
sarb
add
sbb
sub
and
push
push
fs
pushf
mov
in
movsl
rol
js
push
or
mov
or
or
enter
xchg
imull
daa
cwtl
in
cmpl
push
push
and
aad
inc
out
in
enter
adc
nop
lods
aad
or
leave
cld
insb
dec
imul
and
in
inc
xor
into
xchg
test
mov
in
enter
lcall
mov
icebp
jns
or
inc
mov
jnp
xchg
mov
ret
insl
add
divl
fs
lret
rol
jg
and
xorb
divl
je
pop
lret
jo
stos
mov
popf
daa
test
mov
mov
aam
jecxz
sbb
mov
adc
popa
push
xchg
mov
lock
cmpsl
pushf
jb
jg
or
pushf
pop
sub
iret
fsubs
or
mov
xchg
aad
pop
and
or
mov
xlat
lret
pop
dec
mov
mov
rcll
repnz
push
or
xchg
loope
jmp
xor
fmull
inc
or
mov
ret
add
xor
push
dec
mov
pop
mov
or
scas
loopne
inc
loop
int3
cmpb
add
sub
push
hlt
movb
pushf
xlat
mov
pop
lret
scas
in
scas
enter
xchg
or
in
mov
les
mov
push
fidivrl
add
mov
xor
xor
loope
rorb
aam
add
stc
mov
call
push
mov
imul
add
mov
inc
mov
add
ja
xchg
movl
ret
mov
cmp
push
cltd
or
stos
inc
cmp
ret
mov
insb
mov
popa
add
movsl
sbb
sub
rcrb
xor
ret
jns
nopl
test
enter
sub
pop
add
push
inc
xor
jne
jbe
push
subl
pop
shlb
mov
cmpsl
iret
test
jb
push
fs
into
mov
fcompl
test
iret
mov
push
xor
sahf
pop
shlb
push
lods
fldcw
mov
add
add
in
test
stos
test
in
lcall
addl
or
mov
and
sbb
adc
xlat
sub
ret
loopne
shrb
dec
mov
fbld
mov
adc
and
sbb
lods
daa
or
lock
mov
movsl
or
xor
std
adc
jp
lock
aad
and
loopne
jns
xchg
xor
mov
nop
imul
rorb
cld
nop
mov
inc
shll
decl
pop
cmp
shrb
aam
stos
pop
lret
or
inc
xor
lock
or
orl
push
sub
movsb
add
das
mov
xchg
xchg
jmp
pop
xlat
fdivrs
push
jo
call
push
xor
or
shrb
pushf
rcl
call
mov
mov
mov
in
cmp
add
shll
pushf
pop
faddl
mov
test
notl
sub
xchg
and
hlt
sub
push
cs
add
or
movb
sbb
call
mov
insb
add
push
adc
mov
mov
test
mov
xchg
adc
adc
shl
lcall
pushf
push
int
lea
iret
and
test
int3
ficoml
enter
cmpsb
push
pop
hlt
mov
scas
mov
jno
int
mov
or
add
cwtl
fcoml
mov
or
sub
mov
adc
dec
sidtl
xor
sbb
movsl
fcmovnb
mov
mov
or
jmp
cli
aaa
sarb
sbb
aaa
lods
rorb
pop
mov
xchg
mov
cmp
insb
nop
notl
leave
xchg
mov
adc
mov
add
jl
push
sub
lods
jae
movsl
in
lret
int3
pop
push
clc
lret
inc
xchg
pushf
xchg
int
push
sub
call
ficoms
sbb
bound
out
and
or
hlt
ds
pusha
clc
scas
mov
bound
fucomip
fcoml
sub
add
sub
xorl
call
or
dec
in
push
sbb
and
inc
xor
negl
mov
imul
mov
shlb
loope
push
mov
dec
stos
xchg
mov
xor
xchg
mov
lahf
cwtl
jle
mov
loopne
push
mov
mov
cwtl
popf
aam
mov
mov
sbb
sbb
rclb
stc
in
cmp
push
xor
shlb
std
and
adcb
xor
scas
fs
mov
addr16
fsubl
pop
shll
mov
into
or
push
push
dec
cs
enter
push
in
inc
aad
add
cmc
adc
lock
ljmp
mov
int3
sarl
mov
sbb
movsl
mov
mov
xor
or
adc
sbb
mov
hlt
rorb
in
pop
fwait
push
repnz
into
lods
rorl
fsubl
mov
lahf
pop
mov
aaa
adc
add
mov
popa
mov
shll
subb
hlt
shl
mov
or
orb
mov
mov
push
iret
lea
cmpsl
shr
dec
add
add
loop
cmc
xchg
dec
lahf
pushf
adc
add
and
and
into
cmc
inc
xchg
imul
bound
lcall
pop
jl
movsl
jnp
push
iret
test
mov
aas
dec
adc
lea
pop
cmc
mov
inc
cmp
aad
std
adc
icebp
adcb
mov
test
jns
shlb
xchg
xchg
ret
jle
xor
shlb
daa
mov
shl
pop
push
dec
add
and
push
in
xor
add
aad
enter
sub
push
fs
addl
adc
cmpsb
dec
mov
ss
sub
add
andl
inc
inc
xor
jle
adc
call
pop
mov
and
jb
add
xchg
mov
insl
mov
sub
orb
fwait
inc
insb
dec
cmp
cmovnp
mov
ficompl
icebp
lock
cmp
out
adc
or
nop
int3
push
dec
les
jmp
inc
bound
fnstsw
and
mov
cs
mov
inc
xchg
sub
in
clc
jb
cmp
and
inc
movsl
sub
push
rorl
into
clc
fsubl
pop
shlb
shrb
jns
sbb
test
adc
push
mov
mov
sarb
test
add
or
xor
xchg
cmc
ljmp
movsb
fwait
popa
xor
mov
sub
add
pop
xchg
mov
negb
inc
xchg
dec
jo
and
push
mov
adc
cmpsb
repnz
loopne
adc
jnp
xchg
ds
inc
sub
and
mov
dec
leave
mov
xor
rclb
rcrb
xchg
or
ret
mov
gs
add
add
test
and
mov
out
fldenv
pushf
xorb
dec
push
jp
pop
iret
pushf
enter
shl
cmc
fwait
xlat
int3
and
mov
outsb
or
mov
push
inc
adc
mov
mov
cltd
mov
xchg
sub
fwait
jmp
or
xlat
sub
add
jo
jle
xchg
popl
fs
lea
mov
fs
or
popf
aad
mov
jmp
cld
dec
and
push
push
push
inc
call
cli
sar
sbb
mov
fadds
shrl
rorb
rcrb
in
test
xlat
int3
jo
mov
lock
xor
cmp
jecxz
mov
imul
xchg
push
in
jbe
es
aad
mov
push
mov
lods
pushf
jb
pop
add
cmp
test
cwtl
jg
xchg
and
scas
lods
or
je
ficomps
jb
sbb
stos
aaa
sbb
or
or
stos
or
or
sbb
cwtl
fmul
aad
adc
sub
stos
push
and
pop
mov
cltd
and
subl
or
cmp
dec
je
lods
mov
gs
add
rcl
repz
xchg
mov
push
pop
jmp
aam
sbb
jb
xor
subb
fdivs
and
dec
pop
test
les
adcl
dec
shlb
mov
sub
add
mov
nop
lcall
rcrb
add
pop
lds
and
out
or
mov
pop
mov
pop
outsl
fstl
xor
lods
jge
fst
mov
stos
jg
notl
call
scas
or
loope
xor
lods
xchg
pop
and
or
call
sti
mov
xchg
inc
test
adc
insb
scas
mov
adc
fstp
stc
outsb
stos
mov
ljmp
dec
test
inc
push
nop
sbb
test
bound
add
out
pop
dec
data16
inc
and
roll
out
es
adc
nop
test
mov
mov
fbld
cmc
les
mov
jg
or
mov
jge
pop
mov
into
aad
mov
and
jnp
or
push
and
stos
sub
and
or
sub
inc
adc
cmp
test
mov
push
in
rcl
imulb
mov
incl
and
or
jae
icebp
test
mov
cmp
mov
cmp
aas
push
stos
insb
inc
fdivs
fmuls
mov
mov
rcl
ljmp
jg
pop
add
pop
mov
test
push
popa
inc
mov
mov
xchg
xor
in
and
mov
jle
inc
out
cmp
mov
push
insl
mov
ljmp
gs
pop
xchg
cli
mov
mov
add
stos
out
test
xor
and
add
xchg
shlb
test
std
push
call
xchg
pushf
push
pop
mov
icebp
insl
iret
add
stos
xor
fwait
stos
rcrl
mov
fisubs
add
hlt
fcmovbe
add
icebp
add
cmc
jecxz
nop
std
out
sub
shlb
xchg
inc
nop
push
dec
loopne
ret
shlb
mov
fucomip
push
cmpsl
dec
sub
lahf
arpl
push
xchg
inc
jg
fnstenv
fiadds
mov
mov
fucomip
mov
mov
xor
test
ret
je
shlb
out
mov
mov
or
mov
lcall
mov
out
lret
and
xchg
leave
add
popa
out
movsb
or
mov
xchg
bsf
cmc
lcall
pop
rclb
enter
mov
jne
and
xor
xchg
imul
cmp
rorb
and
js
xchg
call
mov
aam
add
jo
clc
or
rol
popf
das
xor
sbb
mov
xchg
xchg
adc
mov
adc
int3
je
adc
pop
mov
loop
cltd
iret
test
lret
mov
pusha
cmp
int3
daa
add
mov
add
pusha
sbb
cli
std
inc
add
adc
xchg
push
int3
push
daa
jbe
adc
icebp
lock
xlat
loopne
test
mov
adc
push
loope
xchg
pushf
mov
cmp
xchg
mov
jae
and
jmp
int3
dec
dec
lods
stos
lods
in
inc
scas
int
cs
inc
or
jbe
test
ret
xchg
and
and
jns
pusha
fsubs
add
mov
lret
pushf
cmp
dec
xchg
mov
movsl
ret
mov
int
paddusw
aad
lea
fistpll
xchg
scas
iret
pushf
fidivl
aam
xlat
pop
ficompl
rclb
xchg
mov
lods
les
into
inc
dec
push
lock
mov
in
scas
pop
mov
and
int3
shrb
inc
lcall
xchg
imul
jb
xchg
lret
movsb
imul
repz
lods
or
xchg
rorb
cwtl
aas
mov
mov
mov
sbb
xchg
sub
xor
popa
add
jb
xchg
mov
sahf
ret
ficompl
pop
inc
mov
mov
add
sbb
cli
pop
and
adc
aaa
mov
lea
xchg
pop
nop
mov
xchg
scas
push
xchg
cmp
push
jecxz
lea
pop
xorb
loopne
rcl
sbb
or
xchg
xchg
push
fsubs
mov
sbb
cmp
out
push
pop
adc
sub
push
pop
or
push
cltd
push
sbb
sbb
inc
imull
enter
mov
ret
movsb
mov
hlt
lahf
sti
push
outsl
jg
xor
ret
xor
test
and
in
std
add
push
and
sbb
into
movsl
bound
fdivrl
cmc
addl
mov
mov
dec
inc
cs
in
adc
test
mov
add
cwtl
les
lock
mov
leave
push
fcmovbe
jle
out
jmp
xchg
mov
xchg
popl
mov
repz
enter
ss
fmulp
jmp
and
adc
fwait
push
jl
dec
sub
mov
mul
je
pushf
or
mov
add
imul
cmp
sub
or
and
mov
aas
mov
test
repz
bound
mov
nop
sbb
cs
push
or
push
rorl
fsubrl
inc
cmpsl
pop
mov
dec
add
lock
call
aad
or
mov
fnstsw
or
hlt
dec
xchg
adc
rcl
or
mov
mov
shl
xchg
outsb
inc
or
rcll
shr
shlb
imul
mov
hlt
xchg
ret
xchg
insl
xchg
aad
lods
shl
hlt
dec
cmp
rorb
test
jge
add
jno
roll
mov
mov
clc
jae
xchg
jns
cmpsl
cld
add
cwtl
push
lahf
orb
rcll
pop
lret
jmp
mov
in
rcrb
push
shll
fsts
cmp
mov
sub
test
mov
push
ret
aam
xchg
je
addr16
enter
or
and
and
add
fmulp
call
addb
cmp
fmull
mov
cld
int3
add
xchg
js
mov
xchg
fisubrl
or
movsl
repz
mov
movsb
pusha
lock
shr
adc
sbb
xchg
shlb
mov
adc
mov
adc
loope
in
mov
addb
and
test
xchg
mov
sub
je
insb
fldt
add
test
or
lret
add
and
lds
ds
push
shlb
mov
inc
cli
cmc
add
adc
push
aas
stos
push
rcr
mov
mov
jno
xchg
or
sbb
outsb
cmc
xchg
adc
mov
imul
push
sbb
jae
jae
lock
xor
ljmp
mov
les
shr
or
xchg
push
cmpsl
sbbl
add
icebp
cmp
in
mov
out
xchg
add
cmp
pop
jg
sbb
sbbl
pop
adc
enter
or
push
adc
std
fdivrs
fnclex
pop
movsb
fmull
loopne
ret
call
lock
dec
lcall
and
fwait
iret
or
call
ss
enter
or
mov
ret
adc
adc
push
sub
push
push
les
mov
imul
or
mov
push
xchg
inc
movsb
pop
xlat
dec
mov
or
sub
cld
test
push
fdivrs
dec
xchg
cmpsl
mov
shrb
jmp
mov
les
subb
mov
mov
lock
clc
dec
hlt
dec
mov
into
mov
test
ss
lret
mov
ljmp
mov
adc
xchg
scas
ror
push
mov
mov
scas
mov
rcl
mulb
mov
xchg
shl
ljmp
and
pop
popf
fistpll
xor
lea
xchg
sbbb
or
adc
mov
xchg
loop
xchg
test
dec
add
xor
sub
push
adc
seto
into
rolb
nop
adcb
mov
xor
push
lea
xchg
in
mov
test
jno
add
push
dec
jno
lds
pusha
out
lock
in
adc
nop
shr
and
cmpb
lods
decl
push
mov
enter
pop
mov
rclb
lret
jns
xchg
popa
ret
cmp
push
mov
sub
jae
sub
in
jmp
sbb
mov
nop
and
xor
xchg
jne
clc
inc
fwait
ds
mov
dec
inc
in
mov
mov
xor
add
loopne
movl
shrb
inc
imul
or
inc
js
ret
cmp
leave
test
xchg
mov
or
das
lret
and
add
into
or
push
lret
inc
mov
sahf
hlt
into
mov
test
mov
inc
mov
pushf
inc
fmulp
fisttps
cmpsl
push
hlt
sbbb
test
mov
stos
mov
sbb
lcall
inc
xchg
test
aas
std
std
mov
adc
fs
jae
imul
fcompl
or
test
mov
pop
pop
cmp
sbb
push
or
mov
popa
rorl
mov
push
add
leave
out
rcrb
mov
sbb
push
and
fidivrl
mov
out
aad
fdivl
inc
lret
into
push
cmc
orb
fisttps
mov
sbb
add
jg
push
dec
cmc
adc
sahf
push
in
out
jns
xor
shll
rcrb
jl
fmuls
sbbl
ljmp
stos
mov
cld
mov
sahf
mov
xchg
aaa
inc
sbb
sbb
mov
cltd
add
jbe
mov
xchg
jnp
rorb
or
and
sub
fs
mov
or
xor
adc
or
in
ret
loopne
jns
cmovs
sahf
xor
mov
add
mov
xor
aam
rolb
dec
or
jb
mov
push
sub
jge
and
push
cmpsb
pop
test
push
imull
scas
ss
xchg
pop
lods
mov
cmp
mov
jo
push
fs
mov
lock
inc
and
mov
mov
ret
sbb
and
lods
fldl
pop
lock
inc
push
into
inc
insl
or
lret
adc
sbb
adc
les
mov
xor
push
push
mov
push
ret
sbb
pop
mov
mov
faddl
fs
or
pushf
and
or
and
mov
push
test
scas
daa
shlb
nop
lret
xor
mov
inc
and
jecxz
inc
mov
mov
mov
movsb
jne
mov
lret
call
add
ret
aaa
ret
jno
pop
iret
dec
stos
shrl
in
mov
mov
into
shll
xchg
mov
jmp
mov
dec
add
inc
push
xor
add
ret
jns
les
decl
adcl
and
jge
test
and
dec
add
jo
nop
or
jmp
adc
fisubl
jo
sub
xchg
cmp
lods
inc
das
lock
mov
repnz
pop
add
pushf
ret
xor
cmp
sbb
shlb
sti
sbb
into
lods
lcall
inc
stc
mov
inc
mov
ret
sbb
cmp
sbb
cmp
push
nop
mov
adc
inc
adc
orb
ret
enter
loopne
stos
je
add
inc
cmpl
cmp
rclb
gs
push
add
shll
nop
mov
xorl
xchg
xchg
pop
je
mov
aam
xchg
sbb
xor
xor
fs
push
and
out
dec
mov
add
jecxz
cmp
xchg
xchg
jle
push
sub
iret
cld
sub
orb
les
sub
shrl
push
mov
notl
inc
mov
push
jo
in
rcl
mov
inc
sti
pop
in
pop
pop
fcoms
adc
adc
fidivrl
adc
pushf
jg
add
adc
mov
sbb
inc
or
inc
in
and
fdivrs
mov
add
outsl
lods
jmp
jns
mov
xorb
push
mov
jmp
pop
mov
test
xlat
dec
cmc
orb
dec
cld
lret
mov
repnz
dec
cld
std
mov
shrb
push
mov
rorb
mov
std
stos
stos
rcrl
mov
dec
xchg
adc
or
mov
stc
or
gs
jmp
in
sbb
popf
adc
mov
xlat
inc
mov
out
sbb
repnz
mov
ljmp
pop
imul
lods
cld
pop
imul
movsl
adc
cmpsb
nop
sbb
dec
sarl
lcall
sub
lret
jmp
ja
fwait
jg
insl
mov
icebp
push
scas
leave
xor
aam
sub
mov
fs
cmc
xchg
lds
cwtl
inc
cmp
or
cmp
ss
add
fxam
enter
int3
test
dec
out
push
outsl
inc
xchg
imul
shl
xlat
in
fcmovnb
fcomp
add
xchg
loopne
push
cwtl
xchg
aam
lods
nop
aaa
jns
dec
xlat
out
mov
mov
clc
fidivs
push
adc
jl
ret
pop
insb
clc
ret
inc
or
inc
jl
test
into
mov
mov
outsb
or
mov
or
fs
call
ret
jo
adc
mov
insb
ffreep
adc
lock
sub
movb
jbe
cmc
addr16
cli
fidivrs
inc
push
orb
mov
outsb
popa
xor
stos
adc
out
popf
mov
mov
mov
mov
xchg
jb
add
mov
cwtl
ret
mov
jb
mov
mov
test
out
je
sub
nop
jl
test
xchg
inc
test
mov
lods
mov
cwtl
jbe
pushf
mov
test
test
mov
pushf
les
enter
shlb
fadd
loopne
in
call
mov
clc
or
cld
jne
adcl
addr16
and
test
xchg
or
cmpsl
adc
push
sub
mov
sbb
and
movsl
and
mov
fildl
xorb
stc
mov
ret
pop
repz
mov
mov
lcall
mov
adc
ljmp
sub
mov
mov
lds
adc
movsb
or
movsb
cmc
fbld
dec
adc
or
out
mov
mov
in
test
sbb
das
sahf
push
out
fcmovnbe
push
mov
repz
and
cmc
push
inc
sub
in
mov
popf
in
pop
loope
push
dec
cmp
fdivl
adc
jg
jge
or
fcmovnb
hlt
aad
icebp
xchg
push
push
sbbl
mov
push
xchg
nop
mov
mov
mov
subl
mov
mov
mov
shrl
repnz
fimuls
lret
icebp
lret
xlat
cltd
cmp
mov
pop
pop
xchg
xchg
push
mov
testb
or
cs
jbe
lds
push
xchg
ss
cmp
cli
repnz
sub
mov
cmp
jb
test
lock
mov
nop
cmpsl
cld
lds
xor
or
sbb
jg
adc
pop
rcrb
and
insb
outsl
pop
mov
fucomp
hlt
dec
in
test
je
adc
movsb
adc
out
dec
in
jae
or
jnp
pushf
and
xchg
jnp
push
ljmp
ljmp
adc
adc
in
movsl
and
mov
mov
icebp
mov
dec
iret
xor
sti
insl
and
add
push
mov
cltd
fwait
pop
mov
shr
sbb
lret
mov
icebp
cltd
bound
mov
xchg
xlat
int3
cld
mov
mov
std
les
push
mov
mov
shll
rcl
jmp
mov
movsb
in
or
loopne
adc
pop
or
dec
cld
push
sbb
jae
in
or
mov
into
in
cs
sti
xlat
mov
stos
xor
push
popf
and
mov
in
test
ljmp
xor
nop
or
pop
jno
xchg
mov
rclb
rorb
pushf
rcr
mov
mov
adc
aas
cltd
push
in
iret
call
inc
sub
xchg
decl
or
sub
cmp
cwtl
adc
loop
in
fsubrs
jo
push
inc
aas
pop
sbb
adc
aam
jo
pushf
pop
push
push
and
outsb
insl
mov
mov
xor
lods
pop
sub
jbe
push
fisubrs
popa
ds
sarl
and
adc
lahf
nop
sbb
ds
hlt
int
inc
or
add
cltd
or
xlat
shr
test
outsl
xorl
sub
sbb
adc
jno
mov
push
sub
inc
mov
hlt
out
mov
scas
push
mov
loope
add
mov
aad
enter
and
mov
xchg
ljmp
lods
mov
xchg
dec
roll
add
fwait
mov
and
outsl
lds
jge
sbb
aas
or
test
lock
mov
jp
jne
stos
dec
loopne
mov
dec
or
mov
int3
sbb
inc
cmp
out
inc
cld
adcb
cmc
cmpsl
xchg
enter
or
std
test
fsubrs
shr
aas
cmpsl
or
cmp
test
pop
test
aad
rolb
mov
subl
mov
mov
loope
mov
push
hlt
push
inc
inc
push
cmpsl
xchg
mov
cmp
mov
ja
cld
or
movsb
test
mov
xor
sub
dec
add
iret
add
inc
loopne
flds
push
push
mov
adc
inc
lods
outsl
cld
push
pop
jmp
addb
les
cmpsl
xorl
or
pop
mov
add
movsl
dec
xor
rcll
sbb
push
inc
or
rolb
dec
leave
lods
ljmp
push
lret
into
loopne
orl
lret
in
in
aas
stos
jl
or
xchg
inc
rcl
push
inc
call
push
push
in
pusha
test
in
push
fcmovnu
cltd
xchg
test
cmp
loop
testb
push
pop
out
xchg
repnz
push
test
xchg
jae
add
cmp
xchg
mov
sbbb
xchg
in
in
add
push
sbbl
movsb
mov
out
mov
out
jg
mov
mov
lcall
mov
mov
lret
pop
inc
fisubrl
lock
mov
or
cld
push
in
xchg
mov
loopne
jae
fisubs
in
movb
add
cmp
mov
loopne
jo
loopne
les
add
push
push
jmp
js
les
vmovlps
sub
ljmp
jmp
sbb
inc
in
fldl
addb
movsl
lods
movsb
mov
cltd
out
ret
sbb
fwait
xchg
imul
or
repz
test
das
push
mov
jg
repnz
sbb
cld
out
or
pop
sbb
cmpsb
add
mov
test
loop
mov
add
xchg
mov
and
rclb
push
mov
xchg
andb
xchg
push
or
or
test
adc
adc
mov
sbb
xor
add
and
aad
nop
test
dec
xor
xor
cmp
inc
fists
rclb
stos
push
les
rcrb
sub
push
ret
jo
je
js
inc
test
jb
aad
xchg
inc
mov
mov
aaa
int
jne
int
xchg
enter
and
mov
insl
or
lods
xchg
mov
mov
and
shlb
les
enter
or
in
mov
faddl
mov
xchg
testb
mov
cwtl
pop
or
outsb
nop
add
mov
in
iret
call
xchg
lock
hlt
cmc
adc
or
les
mov
pushf
or
adc
mov
and
sub
xchg
xchg
cmp
stos
inc
pushf
ret
dec
nop
push
or
mov
xchg
pusha
mov
push
or
mov
xchg
test
mov
in
xchg
lds
cwtl
les
test
ret
stos
mov
mov
mov
lea
les
mov
aam
fsubs
mov
jmp
fdivs
mov
or
adc
in
movsl
shrl
xchg
jecxz
les
xchg
add
mov
loop
test
or
push
mov
cmp
int
cmpsb
roll
push
fwait
push
pusha
adc
hlt
mov
icebp
pop
shl
hlt
inc
dec
jne
add
pop
inc
shrl
loop
pop
push
push
ror
xchg
mov
pop
ja
add
dec
or
in
adc
stos
inc
mov
adc
or
sbb
cmpsb
xlat
filds
jno
inc
in
hlt
pop
push
lret
fiadds
mov
ror
mov
push
xchg
pop
fs
ror
pusha
mov
mov
mov
popa
scas
vmovd
mov
shl
shl
mov
xor
clc
rcl
add
push
push
jmp
mov
or
xchg
js,pt
pushf
addr16
inc
rorb
mov
mov
jb
mov
das
pop
pusha
fadds
cmp
push
shlb
xchg
add
nop
mov
rol
add
adc
rclb
lea
pop
lods
into
jo
inc
loopne,pt
xchg
jg
test
xchg
mov
subb
hlt
lahf
xlat
sbb
imul
xchg
xchg
movsb
or
call
ja
test
les
ror
les
loop
sahf
pusha
jg
shl
or
mov
lods
les
mov
xor
into
mov
sbb
add
sti
xchg
mov
aam
or
inc
fcmovne
ret
pop
mov
cmpsl
loopne
mov
ret
rolb
mov
cmp
ds
leave
add
aad
out
inc
hlt
push
sbb
xchg
shrb
mov
cmp
mov
rorb
sub
rcll
inc
lods
repnz
xchg
mov
in
call
push
mov
hlt
xchg
inc
push
cltd
rcl
lods
mov
or
mov
bound
add
lods
mov
cmpsl
xchg
andb
jle
adc
pop
arpl
add
xchg
enter
xchg
mov
sti
stos
lock
xor
leave
out
fprem
adc
cmc
xchg
or
mov
in
adc
xor
and
mov
stos
mov
out
xchg
xchg
add
or
repz
and
clc
cmp
lds
stc
fsubs
addr16
fists
xchg
mov
invd
hlt
lock
xor
adc
icebp
sbb
jl
mov
mov
pusha
sub
lds
xchg
mov
fdivl
stos
enterw
cmp
clc
inc
add
mov
call
sti
stc
inc
pop
mov
jle
xchg
pop
inc
pop
mov
jb
hlt
subl
incb
jmp
ja
cmp
xor
pop
nop
jne
shr
xchg
es
loop
pop
sbb
xchg
add
rol
lock
xchg
notl
cmpsl
pop
shlb
outsb
mov
subb
nop
pusha
mov
pop
mov
cli
jecxz
test
mov
xchg
lds
addb
mov
mov
imul
sub
rol
sarb
mov
push
std
les
cwtl
push
push
andl
cmpsl
loop
hlt
xchg
cwtl
rcl
aaa
and
inc
adc
cmp
xor
ficoms
shll
mov
aam
jno
stc
rol
mov
xor
lret
shl
jg
aaa
xchg
jmp
scas
hlt
jmp
add
cwtl
int3
add
xlat
push
adc
xor
stos
mov
mov
int3
cmp
inc
shrb
and
dec
icebp
shll
rclb
pop
cmp
fsubrl
lods
sbb
lds
movsb
fnstcw
in
push
mov
or
and
nop
dec
mov
jp
test
jns
daa
jle
and
push
dec
jbe
sub
gs
test
sub
lret
das
movsl
xor
cmp
stos
scas
int3
push
lcall
cmp
pushf
daa
cmp
rep
mov
in
icebp
push
mov
mov
xor
int
loop
push
arpl
cmp
iret
fsubl
adc
jecxz
shlb
xchg
xchg
fwait
or
xlat
or
fstpt
and
pop
les
cmp
or
ja
rorb
fsts
mov
scas
jo
aam
dec
cld
jo
cmp
mov
lret
mov
hlt
lock
outsb
inc
ds
fiadds
inc
jp
xchg
lcall
sbb
jne
push
or
aad
push
sbb
sarb
scas
fistl
negl
rcr
pop
add
xchg
cmpsl
outsl
nop
push
pusha
pushl
inc
xchg
call
mov
outsb
push
enter
mov
inc
ljmp
cmp
sbb
sarb
arpl
cmp
notb
shll
repz
sbb
neg
out
addr16
mov
push
mov
push
cltd
rclb
xchg
xor
mov
dec
les
ds
pop
push
dec
mov
or
movl
ret
fidivl
jmp
push
fdivrl
les
or
nop
orb
cmc
pushf
add
hlt
cld
xchg
mov
sbbl
pusha
mov
sub
push
dec
inc
inc
push
rolb
add
imul
xlat
xchg
and
lea
pop
lea
divl
mov
rorb
inc
adc
inc
outsl
pop
icebp
push
test
loope
dec
mov
mov
ret
das
les
xor
push
and
inc
aam
int3
pop
pop
aam
fwait
call
add
mov
fdiv
mov
sub
roll
push
mov
cmp
ja
dec
bound
cld
mov
xlat
mov
negl
test
or
enter
sbb
mov
nop
jb
inc
xchg
mov
rcl
aad
push
pushf
call
or
mov
shrb
dec
stc
push
fwait
lods
into
xchg
lret
aas
fdivrs
cmpps
repz
ret
iret
popf
je
xlat
xchg
imulb
push
lret
call
sahf
sbb
mov
test
lds
push
push
xchg
or
icebp
hlt
mov
adc
inc
sub
adc
pop
fsts
cmpsl
sbb
lcall
scas
sub
mov
lock
sbb
mov
inc
loop
and
xchg
mov
sbb
aad
jl
imul
fiadds
sub
js
mov
sub
adc
cmp
push
mov
nop
fwait
push
or
and
ja
inc
mov
inc
loope
icebp
jl
xchg
xchg
sbb
mov
xchg
jae
fsubp
call
fdivs
cld
mov
rcrl
test
adc
adcl
push
push
ds
nop
or
xchg
pop
pop
add
test
add
add
mov
nop
mov
ljmp
insb
rclb
xchg
lret
add
mov
into
mov
fbstp
mov
mov
mov
adc
cmp
fstps
xor
clc
call
push
mov
mov
inc
shlb
jns
xchg
rcll
pop
cld
dec
loop
loope
popf
inc
arpl
mov
aad
enter
jge
icebp
jne
xlat
shrl
insl
jne
dec
nop
stos
dec
or
or
dec
pop
movsb
adc
or
jmp
xchg
cli
jnp
mov
xlat
aad
xor
stc
pop
scas
roll
std
cltd
out
jmp
call
sub
pushf
adc
subl
test
or
sti
dec
mov
nop
ja
lds
js
xlat
stos
test
cwtl
push
rcl
call
dec
pop
inc
shr
jns
dec
mov
subb
lock
push
leave
push
call
scas
test
leave
stos
push
je
inc
shr
int3
in
mov
fdivrl
sarl
jb
adc
sbb
and
movsb
subl
leave
push
fdivs
mov
into
sub
insl
ss
cltd
mov
xchg
inc
pusha
orb
lret
adc
lods
mov
dec
aad
pop
mov
leave
pop
or
fcmovnu
in
outsb
xchg
sub
mov
push
add
push
jbe
and
decb
inc
add
xchg
dec
cwtl
pop
rcll
lret
push
xor
rorl
fdivl
or
and
lea
pop
cmpsb
and
fildll
pop
rclb
mov
in
call
jnp
pop
xor
cltd
or
int
cwtl
cld
xchg
add
jb
adc
push
jecxz
jecxz
dec
jo
testb
mov
add
lock
inc
push
inc
cmp
leave
inc
mov
pop
mov
add
lcall
mov
sub
aad
inc
nop
cmpl
int3
cmpb
jnp
mov
call
jle
ret
fnstsw
lods
dec
rcl
or
icebp
js
mov
test
xchg
mov
adc
loop
jbe
testb
inc
stc
stos
dec
push
sbb
xlat
xchg
mov
push
dec
dec
mov
pop
movsb
cli
std
xchg
das
iret
or
mov
nop
push
adc
mov
scas
mov
mov
cmp
sbb
rorb
push
mov
push
sbb
stc
or
movsl
adc
pop
cmp
dec
add
mov
popf
leave
mov
stos
cwtl
mov
fucomi
add
insl
add
mov
nop
lahf
inc
push
je
xchg
scas
push
rol
jl
jmp
popf
sbb
cmp
ror
xchg
ret
inc
jne
fidivrs
xor
dec
in
add
mov
cmpl
popa
js
les
add
ret
mov
mov
mov
test
aaa
or
fistps
jle
outsb
scas
xchg
pushf
mov
lds
int3
jecxz
dec
pop
sbb
addl
pop
jb
fists
adc
xchg
rcll
push
xlat
popl
sbb
std
test
cli
and
in
stos
pushf
sub
data16
mov
or
addb
inc
push
inc
xchg
push
ds
pop
jle
mov
incb
cwtl
push
ret
xor
cld
push
mov
mov
jge
cmp
shlb
int
push
pop
dec
enter
xchg
xchg
dec
lret
cmp
xor
push
xchg
push
fldenv
fnop
shlb
adc
ljmp
jg
subb
pop
adc
cmc
and
xlat
jo
push
fcompl
inc
xchg
ja
mov
xchg
inc
mov
iret
cmc
mov
or
stc
push
sbb
mov
cli
xlat
movsb
cmpl
mov
push
sbb
and
mov
xchg
add
dec
jecxz
inc
enter
or
add
imul
xor
daa
test
push
leave
xchg
xlat
ljmp
loop
rorb
pop
mov
loop
pop
jno
or
pushf
xlat
inc
sahf
or
xor
nop
dec
add
in
jp
ja
jmp
leave
ja
js
lret
test
rorb
imul
dec
inc
lods
mov
imul
insl
push
and
sub
rcll
xchg
movsb
or
push
push
sti
loope
cld
movsb
add
dec
jecxz
inc
push
leave
mov
hlt
lds
adc
rorb
pop
mov
mov
imul
stos
adc
jge
mov
ljmp
rcrl
movsl
in
mov
mov
lret
iret
adc
int
xor
pop
xlat
out
add
dec
pushf
out
mov
shrl
and
inc
push
cmpsl
mov
in
subl
inc
lcall
cmp
xor
mov
stos
mov
adc
cmp
lods
dec
mov
xchg
jbe
add
push
and
xchg
outsl
aad
orb
pop
int
mov
in
fmulp
or
hlt
xor
ljmp
mov
push
cmpsl
lret
fdivrs
sarb
add
ja
push
push
sti
adc
push
jecxz
nop
aam
jecxz
or
cld
add
iret
mov
sahf
mov
mov
mov
cmp
pop
jle
imul
ja
hlt
stc
mov
imul
dec
cwtl
sbb
lcall
iret
mov
push
pop
and
push
pop
inc
rcr
push
rol
not
int
out
xchg
jecxz
and
mov
into
testl
cmpsb
test
mov
movsb
push
adc
in
xorb
aas
mov
jae
inc
test
mov
sbb
test
jle
imul
adcl
hlt
test
push
test
xchg
and
jecxz
mov
mov
xor
push
mov
stos
xor
mov
insl
aad
add
mov
cmpps
push
jge
jae
imul
stos
rcrl
add
ficomps
or
jae
dec
mov
mov
inc
jmp
test
lret
cmp
pop
int
dec
loop
hlt
std
movsb
aas
add
das
xchg
mov
rorl
mov
xchg
data16
aad
mov
mov
out
add
xchg
test
mov
or
shr
stos
xchg
or
cmp
pop
test
test
fnstcw
or
std
fldcw
and
sti
cmpsl
rcl
jg
out
adcl
push
dec
add
popa
fs
loop
jne
in
push
add
iret
cltd
imul
cmc
sti
ltr
pop
nop
out
dec
adcb
lods
fsubs
pop
push
js
in
mov
push
rorb
pop
pop
push
call
testl
mov
dec
shlb
pusha
pop
je
ljmp
or
sbb
lcall
test
mov
pushf
cmp
and
bound
push
hlt
int3
pushf
call
test
xchg
mov
pop
addr16
xchg
add
mov
test
mov
fisttps
sub
xor
iret
push
fdivrl
push
imull
pop
xor
test
jg
js
add
divb
dec
filds
or
cmp
iret
cmp
cmp
add
popf
test
sbb
or
daa
pop
ror
push
add
sub
dec
nop
fisttps
cltd
and
rcr
repnz
movsb
mov
pop
mov
push
fs
xchg
or
popa
inc
iret
in
or
sub
push
std
jmp
push
shrb
sub
lret
push
rolb
jle
cwtl
scas
out
fists
dec
movsb
outsl
pop
sub
into
mov
jmp
mov
mov
mov
enter
push
xorb
mov
cmc
and
stc
adc
mov
xchg
cli
inc
inc
div
orl
xchg
setp
test
test
movsl
popf
or
or
push
lahf
or
aad
pop
fcmovnu
lret
xorb
imul
sbbb
xchg
inc
mov
dec
cmpsb
mov
je
dec
lcall
mov
rclb
jne
stos
mov
xchg
lret
push
outsb
test
mov
insb
int
jnp
fsubs
push
es
sahf
inc
push
xor
hlt
lret
lret
cmp
push
inc
jo
jg
std
mov
pushf
test
fdivrs
ror
daa
mov
cwtl
lock
mov
mov
sbb
test
mov
adc
sub
adc
sbb
cs
push
dec
jge
adc
js
mov
inc
jnp
add
inc
mov
mov
sbb
lods
rorb
mov
adc
mov
jnp
mov
mov
mov
xchg
or
insl
lea
xchg
fstpt
daa
je
sarb
mov
je
popf
pop
or
xchg
push
enter
in
adc
fstpt
jl
push
and
and
daa
push
ret
out
nop
or
icebp
ffreep
cmp
adc
roll
mov
or
test
iret
mov
leave
jbe
cmp
repnz
imul
loop
mov
in
inc
adc
roll
inc
xor
fistps
pop
lret
call
inc
xor
push
loopne
lret
loope
mov
mov
inc
popa
test
outsl
icebp
test
negb
cmp
pop
pop
adc
test
xchg
pop
jle
loopne
cmp
adc
sub
mov
or
inc
push
loop
fdivrl
daa
xchg
xorb
addb
pushf
and
adc
or
cwtl
xor
adc
push
mov
stc
sbb
or
lock
inc
or
gs
sub
and
andl
stos
inc
push
mov
mov
loope
into
mov
popa
mov
push
dec
hlt
les
sbb
inc
mov
or
loopne
add
adcl
add
fcoms
fsubl
in
add
stos
xchg
push
cld
xchg
ret
add
or
adc
dec
or
pusha
popf
push
xor
test
inc
push
ret
dec
mov
push
push
repnz
aam
push
and
lea
enter
aam
jbe
xchg
fs
push
mov
andb
or
adc
dec
or
in
lret
fsts
adc
in
mov
and
push
push
loopne
in
add
lret
jge
fs
enter
mov
push
sbb
cmpsl
add
mov
or
in
inc
jae
popf
xor
xchg
sub
or
sub
cld
or
into
xor
icebp
or
test
bsf
mov
leave
mov
jg
inc
cmp
and
push
icebp
shrl
lcall
lock
or
imul
arpl
dec
lret
out
cmp
sub
or
mov
jnp
and
xchg
loopne
mov
arpl
sti
push
loop
stos
aas
push
mov
int3
mov
lds
arpl
test
or
mov
ljmp
push
rol
pop
cwtl
add
mov
test
jle
loop
and
sahf
stc
ret
sbb
cmp
leave
add
rclb
loopne
xchg
dec
shr
xor
fs
popf
push
mov
mov
js
cmpsl
out
xor
xchg
bound
in
dec
mov
fcompl
shrl
test
dec
sbb
mov
push
cltd
add
mov
ret
lock
mov
mov
dec
enter
scas
cltd
mov
xchg
jae
mov
orb
loop
mov
mov
inc
mov
cmc
mov
push
lret
mov
aas
jecxz
clc
aas
mov
pop
lock
dec
mov
lcall
sub
mov
pop
jmp
insb
cmc
add
fisubrs
daa
cmpsl
push
imul
cmp
or
in
pop
xor
ss
bound
popl
es
test
decb
nop
lods
pop
pop
in
cwtl
or
rcl
rol
push
add
sbb
lret
xchg
push
insl
hlt
loope
rcrl
nop
roll
and
imul
mov
pop
in
cmp
xor
imul
jmp
cli
sbb
jb
iret
hlt
inc
inc
test
add
xor
mov
notl
jp
cwtl
cmp
vmread
test
pop
inc
mov
and
jp
es
mov
xchg
or
dec
mov
mov
imul
xor
lods
pop
and
lret
lds
fs
inc
shrb
test
xchg
jp
rorl
enter
mov
mov
mov
push
mov
aas
mov
mov
sub
xchg
js
xchg
dec
sub
insb
mov
sub
arpl
nop
lds
enter
adc
jle
loopne
popf
ljmp
fcoml
inc
mov
inc
mov
test
mov
cmp
in
xor
outsl
icebp
out
add
push
stos
les
mov
xchg
imul
negl
dec
jp
shll
rcrb
mov
dec
test
inc
cs
les
or
mov
call
enter
adc
mov
lret
mov
cmp
test
push
push
mov
jmp
scas
adc
test
xchg
loope
sarb
test
imul
fbstp
mov
fnstcw
add
pop
movsb
mov
inc
out
dec
mov
ss
int
cmpsl
lea
inc
push
into
int3
aad
push
vmovaps
or
mov
imul
xchg
push
std
imul
lods
mov
mov
aas
sti
push
mov
add
add
cmpsl
xor
cwtl
or
adc
inc
adc
push
xchg
mov
dec
fwait
adc
xor
cmc
lret
dec
lcall
xchg
or
xchg
pop
ds
popa
mov
insb
pop
ss
mov
pushw
add
inc
inc
cwtl
xlat
xchg
push
stos
testl
jp
sub
cmp
sahf
jge
imul
call
and
or
mov
mov
push
mov
xor
mov
or
pop
mov
nop
ret
test
mov
sub
inc
cmp
imul
ret
adc
adc
cmp
xor
xchg
cwtl
jmp
in
or
pop
cmp
mov
data16
or
mov
sub
sbb
mov
and
hlt
fiadds
lds
or
push
fs
inc
stos
enter
out
cmp
and
arpl
mov
push
sbb
lret
push
lahf
fadd
js
inc
add
fmulp
stos
dec
outsb
mov
ret
cmc
mov
gs
or
test
xchg
ss
xchg
mov
dec
lahf
push
frstor
adc
sahf
incb
dec
in
inc
rol
jle
test
jmp
inc
mov
stos
dec
outsl
mov
dec
cli
mov
or
call
mov
inc
daa
lret
std
pop
xor
or
pop
xlat
enter
push
scas
mov
cmp
mov
test
dec
je
pushf
fdivl
addr16
mov
jle
mov
jecxz
shlb
lds
mov
jo
xor
push
sub
je
inc
imul
and
cmp
pop
test
mul
ljmp
mov
test
imul
mov
test
scas
dec
sub
enter
fwait
ret
push
lock
xchg
add
test
into
add
lret
mov
xlat
inc
movsb
sti
sahf
jnp
test
pop
mov
int
leave
mov
test
sbb
dec
xchg
lds
shll
scas
or
movsb
add
and
negb
test
jp
add
pushf
icebp
mov
aas
mov
in
ret
imul
call
add
mov
rcrb
aad
hlt
int
cmpsb
pop
mov
cmp
inc
fmuls
push
js
pop
mov
outsl
xlat
js
cmc
scas
imul
das
xchg
orl
mov
xchg
and
popa
mov
scas
cmc
outsl
push
xchg
pop
mov
imul
cmc
xchg
or
push
nop
inc
adc
enter
xchg
adc
lods
or
adc
or
imul
test
mov
imul
scas
repnz
adc
mov
fcoml
test
aas
mov
stos
xchg
inc
mov
mov
pop
shld
pop
imul
cli
xchg
movsb
sahf
andb
mov
push
orl
jle
cmp
mov
repz
lea
xchg
add
or
adc
dec
imul
mov
mov
nop
out
cs
je
stos
out
and
add
push
loop
jmp
arpl
imul
aam
mov
test
addr16
test
enter
mov
mov
daa
mov
mov
clc
imul
mov
int3
test
add
push
and
jecxz,pn
fcoml
pop
test
jb
and
cmp
sub
mov
inc
push
in
and
mov
testl
mov
imul
or
or
lds
hlt
scas
sub
pop
sbb
repnz
push
sub
test
xchg
lods
test
dec
loope
jle
inc
cltd
or
push
ja
cmp
add
stos
xchg
pop
and
lods
jnp
inc
shlb
fwait
and
mov
hlt
sbb
pop
xchg
mov
xchg
mov
fisubrl
cwtl
stos
mov
aad
inc
fidivrs
lea
jg
aas
cmp
mov
orb
test
pop
aas
mov
imul
pushf
push
sub
rcrb
sti
xchg
lds
xor
push
cltd
adc
rclb
dec
jns
jl
push
lret
dec
jns
pushf
repnz
inc
stos
sub
arpl
or
adcb
mov
xchg
loop
mov
inc
test
pop
adc
xchg
enter
inc
shl
mov
enter
dec
mov
or
dec
inc
mov
pushf
adc
mov
pop
mov
cld
sub
ss
mov
push
les
in
dec
xchg
dec
mov
mov
fsts
xchg
mov
cmpsb
into
sbb
notb
dec
or
push
xorb
int
std
mov
jecxz
jne
mov
stos
jmp
mov
cwtl
mov
cmp
cmc
push
sbb
adc
xor
fld
mov
pushf
stos
dec
fstl
jmp
repnz
and
mov
mov
mov
aas
sub
add
test
sti
jae
aad
test
leave
aad
roll
in
jle
test
inc
movsb
iret
cmp
xlat
add
ret
cwtl
call
adc
ds
inc
sbb
insl
or
in
mov
xchg
loop
pop
cltd
jecxz
pop
imul
fdivrs
sub
xor
pushf
sbbb
add
xor
jb
pop
les
aam
outsl
leave
jg
and
add
pop
mov
xchg
cmc
ja
frstor
outsl
jae
scas
pushf
sbb
inc
push
mov
cmp
lret
test
xor
jge
mov
push
aad
lods
lcall
fidivrl
mov
les
or
xchg
mov
or
shrb
lret
add
and
in
inc
outsl
jo
inc
sub
push
lds
in
psrld
cmp
push
or
xchg
pusha
push
cld
imul
mov
inc
dec
xchg
addl
in
push
cmp
or
in
fdivr
daa
loop
xor
add
dec
in
in
xchg
test
inc
adc
xchg
xlat
divb
test
or
lcall
in
push
add
gs
and
inc
fs
mov
js
clc
adc
movsl
sarb
loope
stos
push
pop
stos
sbb
orl
rcrl
cld
pop
mov
jbe
orb
and
movsl
sbb
jle
jmp
out
mov
sub
mov
cld
shlb
and
mov
cmc
mov
xor
jno
leave
fisttpll
xor
mov
fstl
mov
inc
mov
jecxz
mov
dec
dec
xchg
inc
jl
dec
enter
das
cltd
and
dec
pop
jne
hlt
shl
pop
cwtl
and
nop
adc
lret
movsl
push
xor
cli
subl
imul
push
outsl
mov
dec
stos
pop
pop
in
mov
or
dec
mov
pop
dec
push
cld
fmulp
lret
push
enter
js
add
aam
push
xchg
fstps
fmull
jns
or
repz
insb
push
scas
arpl
rcl
imul
mov
leave
push
ljmp
inc
adcb
sti
inc
add
cld
hlt
pop
das
outsl
cmpl
mov
flds
es
mov
rorb
cmp
cmp
ror
in
or
cmp
jb
lret
jo
or
js
imul
adc
sbb
cwtl
fwait
ljmp
mov
inc
inc
fisubl
inc
sti
or
pusha
roll
mov
aaa
mov
pop
cmp
mov
dec
add
push
into
das
sub
mov
push
adc
fmulp
fcmovb
loop
dec
push
xor
mov
shlb
xchg
push
xchg
test
cmpsl
or
adc
mov
loop
call
sbb
mov
lods
aam
push
jbe
cmp
cld
jmp
cld
jne
cwtl
mov
call
repz
pop
dec
popf
mov
aad
out
push
fdivrl
lds
jnp
dec
jl
mov
mov
pop
cmp
hlt
xor
or
inc
lret
xchg
out
xchg
mov
insl
cmp
movsl
sahf
sub
push
inc
lock
mov
pop
and
push
push
xchg
push
mov
dec
movsb
rcll
add
push
mov
xlat
dec
xchg
or
sub
test
inc
push
lods
pop
mov
or
push
outsb
jno
ret
dec
mov
adc
sbb
ss
mov
or
scas
mov
mov
push
jecxz
sahf
mov
nop
test
int
out
lret
xor
xchg
and
in
out
shrb
mov
imul
cmp
xor
xchg
pushf
xchg
fwait
or
shlb
mov
rorl
add
adc
clc
push
inc
outsl
adc
adc
sub
gs
adc
and
adc
xor
add
mov
lret
leave
sub
xlat
mov
mov
jmp
mov
mov
push
les
adc
aad
mov
stos
mov
or
cwtl
add
pop
sbb
mov
imul
cld
lret
xchg
imul
stos
xor
dec
lret
ljmp
push
les
mov
insl
enter
movl
adc
add
mov
movsb
into
lods
adc
inc
mov
cmpsb
mov
cltd
add
ss
fwait
and
lds
enter
mov
sub
mov
inc
idiv
pop
and
js
jnp
pop
int3
iret
xchg
stos
mov
aas
je
dec
lret
mov
mov
or
nop
mov
stos
push
xchg
ljmp
xchg
nop
xor
lret
push
pop
jmp
mov
imul
inc
imul
movsl
insb
push
adc
xchg
pusha
shrb
and
hlt
mov
iret
inc
imul
push
push
imul
mov
inc
rolb
lea
aaa
lcall
push
sbb
jne
loopne
cmp
lcall
in
enter
cmp
xchg
test
push
lods
push
adcb
cli
cwtl
add
shr
fstpl
add
jmp
and
leave
mov
jno
cmpsl
jo
pop
hlt
push
inc
mov
std
enter
out
xchg
lds
addr16
or
fdivrp
cli
mov
enter
jae
test
out
mov
or
test
lret
cmc
mov
cmp
adc
loope
int
popa
int3
dec
hlt
add
cmp
mov
cmp
stos
push
mov
cld
ret
mov
push
jbe
rcrl
mov
mov
xchg
jb
xchg
mov
std
inc
filds
rcrb
ficoml
pop
dec
and
scas
jle
les
fwait
jno
pop
mov
mov
sahf
lret
ret
std
inc
and
aad
call
cmp
inc
add
mov
cld
push
enter
mov
adc
insb
movl
fdivrl
rcl
imul
jbe
mov
inc
popf
jb
mov
push
xchg
or
sub
movsb
push
test
hlt
pop
or
mov
mov
mov
mov
lock
or
nop
cltd
or
stos
adc
push
or
sub
mov
jne
push
jno
imul
repz
mov
into
push
std
or
pop
mov
dec
cltd
mov
mov
aad
les
or
aad
lcall
hlt
and
add
std
push
imul
test
pop
ret
popf
idiv
or
ja
lods
lcall
test
mov
jbe
fwait
cltd
push
add
inc
out
xor
lods
rcrb
popa
sbb
pushl
and
sbb
or
and
mov
scas
cli
cwtl
rorl
cmp
int3
aas
es
cmpsl
xor
cs
dec
and
push
mov
jmp
sbb
test
xor
addb
gs
rcll
xlat
inc
nop
mov
mov
rcrb
xor
fwait
movsl
xor
inc
gs
adc
movsl
les
jne
mov
outsb
pop
sbb
lock
shlb
mov
insb
mov
sub
or
cmp
stos
ljmp
aam
push
mov
dec
icebp
mov
mov
push
push
cmp
sbb
les
mov
sbb
into
or
cmpsb
and
dec
shrl
or
mov
or
dec
sbb
scas
or
sbb
jb
or
jge
sbb
imul
dec
jbe
stos
cmpsl
movsl
arpl
sbb
adc
xor
sbb
or
pushf
ret
rorl
test
icebp
or
pop
jo
test
adc
dec
xchg
stos
and
xchg
inc
add
data16
in
lcall
xor
insb
mov
stc
mov
fisubrl
xchg
ljmp
cmc
mov
sbb
rclb
inc
psubsb
loop
xchg
addl
lds
fsubs
lea
je
int3
jmp
xchg
xchg
and
fldcw
in
aam
fwait
cmc
lret
jno
dec
sub
and
xchg
fmulp
push
fstl
mov
or
or
shrb
insb
xchg
and
bound
push
inc
outsl
xchg
subl
cwtl
push
xlat
lcall
xor
sub
and
sti
lret
aas
popf
mov
and
bound
mov
lret
sub
loopne
pushf
outsb
adc
imul
mov
idiv
test
test
mov
adc
hlt
stos
pop
adc
and
xchg
test
xchg
jmp
fisttpll
ret
mov
xchg
mov
ficomps
out
xchg
and
dec
ds
icebp
lret
loopne
inc
dec
notl
add
adc
xchg
xchg
mov
cwtl
push
jno
inc
sbb
sbb
pop
jg
jle
dec
nop
xor
mov
dec
cmp
mov
mov
lcall
add
mov
cmc
fldt
mov
jge
iret
loopne
jl
lods
sbb
add
mov
rcll
dec
sbb
bound
and
cmp
leave
jl
in
jns
or
repz
hlt
scas
or
scas
leave
sub
popf
imull
or
mov
push
int3
cmp
in
sti
jmp
push
sub
mov
shll
or
cmp
xchg
out
mov
subl
addr16
push
mov
clc
call
subl
sub
cmpxchg
popa
lods
fnstcw
fdivrs
pop
jecxz
popf
imul
xchg
dec
stos
mov
rep
xchg
lret
cmc
and
fmuls
xchg
inc
inc
sarl
jg
loopne
inc
test
sti
pop
add
pushf
orb
hlt
loopne
jecxz
ret
sbb
ud0
out
rol
fsubrl
and
or
cltd
in
mov
shl
das
xchg
imul
lea
lds
stos
iret
dec
xchg
hlt
aam
pop
mov
lahf
push
or
mov
or
pop
jne
or
add
rorb
xchg
lods
sub
push
pop
and
and
inc
clc
xor
push
jb
or
push
push
and
lods
inc
cmp
push
mov
jno
mov
jge
mov
pop
mov
xchg
sub
xchg
add
jo
aad
leave
mov
adc
inc
hlt
test
inc
movsl
pop
inc
adc
xchg
aad
imul
rcrb
jno
push
mov
or
mov
adcb
push
and
rclb
pop
mov
mov
mov
push
dec
inc
stc
and
cmp
repz
fists
xchg
cmp
loopne
out
xlat
insb
bound
clc
fistps
xchg
jmp
push
dec
or
lock
push
rorb
shrb
xor
pop
adc
push
test
stos
popa
or
movsb
fadd
add
jb
loopne
push
das
cld
cmc
mov
movsb
cmp
rcrb
cmpsl
or
fbld
mov
ret
dec
xchg
call
cmpsb
cmp
fisttps
xorl
and
pop
sub
add
fcoml
loopne
insl
mov
stos
clc
xchg
adc
aam
adc
mov
pop
arpl
test
push
add
push
in
ret
dec
lds
hlt
in
inc
gs
std
mov
mov
lods
lcall
push
jmp
adc
jl
sub
and
mov
aas
popf
or
mov
jo
push
push
add
mov
push
xor
imul
fildl
std
mov
into
xor
dec
mov
or
jne
mov
mov
movsb
aas
mov
fs
lret
jl
cwtl
fmul
mov
xor
or
test
pop
sahf
or
push
mov
lods
xlat
mov
icebp
adc
adc
jno
mov
pop
jle
in
insl
mov
fcoml
aad
adc
rorb
std
xchg
imul
lds
dec
je
ljmp
decl
mov
das
out
or
add
shll
loope
mov
rsm
xchg
and
icebp
cmc
jmp
adc
lret
clc
mov
rclb
je
xor
xchg
popf
fsubrs
cmp
clc
xchg
adc
xchg
test
xchg
cld
mov
xchg
sub
nop
cmovb
sbb
lock
into
jb
or
mov
and
or
mov
xor
mov
pop
xchg
imul
jno
clc
loopne
or
inc
pop
push
cmp
sub
lods
cmpsl
aaa
pop
pop
mov
cmc
lea
in
out
and
cmc
xchg
or
xor
movsl
sub
iret
imul
les
int3
lock
mov
or
mov
push
inc
int3
add
lret
in
lods
mov
imul
cltd
aad
push
cmc
in
adc
inc
mov
or
jne
mov
adc
inc
test
and
add
mov
or
or
rclb
aad
rolb
mov
jbe
out
xchg
mov
mov
lods
adc
and
xor
pop
pop
lds
lret
xchg
dec
cmp
push
jo
push
xor
and
xorb
cmp
dec
mov
nopl
and
and
mov
ret
mov
scas
jbe
fisttps
inc
and
cmc
enter
jecxz
or
xor
rol
rclb
pop
mov
dec
aam
mov
and
into
sub
jae
aad
jmp
mov
repz
cmpb
fldl
or
js
add
aad
add
xchg
pop
xor
jae
mov
mov
mov
sbb
adc
lret
cmc
xchg
dec
fistl
jmp
pop
inc
test
jge
lret
or
cld
sub
ffree
fistps
inc
or
aaa
xchg
test
jo
into
pop
movsl
cmc
sar
lods
inc
lods
rcl
call
add
mov
inc
rorb
mov
pop
push
pop
shlb
lret
enter
cmp
dec
rcrl
sbb
sbb
rolb
nop
dec
cmc
push
mov
mov
movsb
out
movsb
das
fidivrl
pop
fcmovne
mov
and
insb
in
xor
aaa
daa
lds
jmp
in
pushl
mov
pop
xchg
fisttpll
push
test
clc
inc
les
les
dec
or
inc
test
cmpsb
sub
or
dec
mov
pusha
adc
or
pop
jno
jg
sub
push
or
add
jns
shr
xchg
shrl
cmpsl
dec
push
inc
roll
mov
cltd
test
inc
fwait
rcrl
movsb
adc
mov
es
test
xchg
adc
or
insb
adc
cmp
push
mov
cmpsl
xor
test
repz
adcb
xchg
push
int
das
jmp
jo
xchg
lds
mov
sbb
adc
movsl
and
jae
pop
cmc
or
add
enter
std
std
mov
adc
sub
xchg
cmp
xchg
into
push
pop
mov
xchg
or
fmuls
stos
dec
pop
arpl
jmp
insb
dec
les
in
push
lods
adc
hlt
test
orb
mov
sub
cli
pusha
js
cli
hlt
mov
mov
jg
cmp
orl
hlt
xor
testb
js
imul
mulb
cmpsb
jbe
xor
jae
vmovhps
xor
mov
cltd
and
mov
mov
xchg
add
shlb
ja
js
fildl
lea
push
mov
mov
fisttps
mov
sub
adc
xor
jle
add
cmp
ja
lock
jne
and
mov
jp
pop
dec
cmpsl
xor
rol
xchg
or
push
xor
mov
inc
inc
das
inc
lret
jne
push
add
jb
popf
jo
jmp
daa
push
jns
addr16
jg
js
scas
dec
aad
xor
adc
inc
popa
ret
jmp
and
cwtl
outsl
sbb
dec
push
shrb
inc
lcall
jbe
adcb
popa
xchg
dec
mov
maskmovq
idivl
roll
je
mov
ds
gs
scas
sub
xor
xor
popf
cmp
fisubrs
lock
js
or
mov
mov
and
jl
xlat
aas
xchg
pusha
imul
cli
fs
jmp
mov
mov
iret
adc
pushf
scas
lahf
pop
stos
lahf
ret
jle
mov
add
mov
pop
add
imul
arpl
xor
inc
cmp
rolb
pusha
shrl
lods
and
pop
jnp
sub
test
mov
push
test
fs
pusha
push
push
fcompl
fstpl
and
subl
xchg
mov
push
das
adc
imul
cmp
xorb
add
je
or
repz
in
js
jo
xchg
outsb
mov
xor
mov
je
sbb
jno
push
test
cmp
lds
cmp
or
add
sbb
xor
daa
pop
mov
aam
mov
inc
lcall
dec
jo
add
out
cltd
addl
lret
mov
mov
pop
add
shll
jp
push
ret
pop
mov
push
jno
lods
jnp
sbb
mov
cmp
int3
mov
mov
int3
inc
out
cli
call
loop
shl
sbb
or
dec
js
sub
fmull
fsts
cmp
lods
or
mov
je
lds
cli
popf
mov
nop
add
in
in
mov
clc
std
imul
shrl
sarb
divb
imul
mov
xor
xor
addb
mov
and
push
das
inc
mov
mov
test
fcom
adcl
sbb
cmp
and
ret
rclb
push
rcr
leave
push
xchg
sbb
sbb
push
fisttpll
fisubrs
push
movsb
xchg
rorb
push
inc
mov
enter
adc
aaa
cli
push
mov
pop
cmpsl
stos
ficoms
mov
pop
lock
jl
push
bound
ror
push
mov
mov
mov
xor
add
filds
cmp
xor
test
and
push
xchg
push
mov
hlt
pop
rorb
sub
shrb
push
dec
xor
cld
pushf
mov
xchg
mov
dec
jo
sub
or
mov
xchg
loopne
sub
inc
xchg
jno
add
jecxz
mov
inc
mov
xor
test
test
aaa
nop
mov
mov
xchg
fdivrl
adc
insb
lods
scas
clc
cld
inc
push
pop
cmp
or
cli
pop
dec
insl
shlb
adc
test
lret
push
dec
lea
cmp
and
fisubs
fmul
cwtl
scas
xchg
repz
cmp
pop
pop
jae
repz
jl
ret
xchg
ret
mov
ret
loop
lcall
jb
push
test
xchg
movsb
or
fbstp
cmp
pop
cmp
cmp
mov
hlt
lea
movsb
orl
ret
andl
push
mov
mov
ljmp
add
into
pop
and
cmp
mov
mov
inc
and
decb
xchg
push
mov
popa
mov
jge
mov
xor
mov
stos
and
gs
or
stc
lcall
add
arpl
push
adc
or
sbb
inc
push
enter
xor
xchg
test
ds
adc
fisttpll
and
sbb
mov
mov
pop
cmpsb
mov
enter
mov
js
sbb
pop
les
add
movsl
adc
nop
out
cld
inc
or
inc
push
or
repnz
add
leave
xchg
xchg
je
sbb
add
icebp
stc
int3
fldt
push
popa
xchg
iret
mov
bound
mov
dec
rolb
fwait
lret
add
aad
lret
cmc
test
cmpl
pop
push
push
pop
inc
nop
aad
lret
sub
adc
and
push
das
dec
aas
dec
cs
mov
and
clc
arpl
xchg
ja
mov
xchg
aad
inc
sub
cmc
adc
mov
mov
cmp
inc
cmpsl
test
lods
lret
enter
inc
nop
repz
or
or
jg
xchg
or
roll
shl
inc
outsl
add
jno
mov
add
lahf
in
insl
ja
push
inc
or
mov
movsb
cmpsb
xchg
push
rcll
icebp
fnstsw
imul
xlat
push
jne
cld
mov
inc
xlat
pop
repz
mov
fsubrl
push
xlat
sbb
dec
pop
ret
push
inc
inc
mov
push
xor
xchg
movsb
mov
xchg
xchg
test
sbb
dec
xchg
sub
xchg
xchg
enter
jp
ficoml
xchg
pop
sbb
mov
outsl
test
call
pusha
je
cmp
sbb
mov
test
mov
enter
mov
and
pop
cmpsl
add
shrl
jnp
push
repnz
nop
mov
decl
mov
jns
pop
push
xchg
xchg
or
nop
pop
stc
mov
adc
imul
xchg
cmpsl
mov
push
mov
mov
stc
es
enter
jge
or
test
mov
jnp
pop
test
inc
rcr
push
and
mov
test
jge,pn
inc
add
sub
xchg
stc
push
add
sbb
aam
push
out
adc
and
sub
jnp
push
lcall
mov
and
lods
lods
push
js
mov
jmp
lcall
sub
pop
mov
jle
push
pop
int3
je
pop
shlb
test
test
and
xchg
mov
rorl
sbb
stos
inc
lods
movsl
outsb
icebp
mov
pushf
pop
or
pop
mov
or
test
testl
cmp
adc
insb
in
cmp
xchg
mov
sbb
xchg
dec
add
adc
ficomps
aad
hlt
xchg
and
and
lret
mov
rol
and
lcall
inc
inc
mov
cld
jmp
and
and
and
movsb
ss
in
aas
je
rcrl
xchg
jbe
les
lahf
dec
xchg
add
orl
cwtl
test
cmp
mov
mov
mov
repnz
shr
test
or
aad
mov
sarb
ja
cmc
rcl
scas
lea
hlt
sbb
xlat
push
lret
aad
popa
xchg
mov
dec
sub
sbb
lods
ja
icebp
xchg
aaa
adc
dec
xor
outsb
push
fcomp
data16
popa
jg
mov
mov
mov
xchg
sbb
adc
push
cmp
add
xlat
jnp
rcll
and
fstl
push
cld
mov
outsl
sbb
aas
in
or
inc
xchg
dec
push
shr
push
sub
mov
cli
lret
ret
xchg
jae
or
push
scas
ljmp
fistl
scas
call
js
outsb
or
jl
pop
in
jg
jle
fisttpl
xor
mov
fistl
push
pushf
aas
or
xchg
test
sub
pop
subb
mov
ficoms
lcall
or
nop
xchg
int3
mov
xchg
dec
mov
jne
dec
mov
adc
adc
jg
pop
ret
xchg
imul
shlb
ret
cmc
lea
sub
sbb
mov
stc
rclb
mov
mov
add
mov
out
decb
dec
adc
mov
dec
fidivrl
shll
push
mov
mov
lock
cmp
or
add
jnp
jp
dec
or
or
cld
mov
ljmp
xchg
mov
pushl
and
pop
ljmp
mov
sbb
xchg
mov
sbb
and
dec
cmp
ja
add
push
leave
mov
imul
ja
les
mov
subl
fcoml
mov
imul
mov
shrl
aad
scas
movsb
adc
add
mov
enter
test
or
lods
insl
jae
push
incb
cld
mov
iret
xchg
enter
enter
scas
andl
cmp
lods
mov
push
add
cmpsl
pop
xlat
cs
mov
ljmp
aad
xchg
push
add
outsl
xor
iret
mov
lret
jb
cmpsl
lret
push
cmpsl
lock
ds
ja
mov
mov
adc
mov
orb
mov
enter
mov
mov
leave
inc
stos
arpl
push
inc
lret
pop
and
rclb
fsubrs
jbe
mov
cwtl
int3
enter
fwait
in
xor
idiv
dec
loop
xchg
fs
cwtl
cmp
int3
test
movsb
out
enter
mov
rolb
loopne
addl
sbbl
mov
inc
or
jge
aad
rclb
sub
or
jnp
xlat
sbb
mov
sbb
andl
test
hlt
xor
stos
push
stc
mov
lock
mov
mov
in
adc
jae
lret
les
sbb
rcll
sub
sti
dec
push
cmp
mov
imul
mov
arpl
xchg
fcmovnbe
pop
vprotb
mov
jnp
pusha
dec
pop
push
jo
shrl
gs
push
sbb
jae
fdivs
jg
sbbb
cmc
loopne
sbb
nop
inc
add
adc
push
push
xchg
out
dec
int3
test
sub
add
xor
leave
adc
pushf
aad
shlb
xchg
mov
xchg
push
jbe
xbegin
mov
push
mov
jo
nop
sbb
cmpsb
add
rorl
xlat
xchg
push
mov
int
jle
int3
xchg
pop
insb
xchg
int
jl
xchg
or
flds
cwtl
push
inc
pushf
push
lcall
sbb
inc
fmulp
stos
test
roll
sub
adc
xchg
test
push
sti
test
sbb
movsb
and
mov
xor
xor
and
movsl
xlat
dec
cmp
xchg
inc
lret
lret
hlt
mov
xor
movsl
adc
ret
rorl
or
xchg
mov
sarl
ret
and
mov
jns
andb
test
decl
dec
add
adc
ss
sar
push
add
in
test
dec
push
jecxz
push
call
add
lds
aad
rcrb
pop
mov
inc
sbb
push
mov
arpl
jp
iret
popf
cmp
and
sbb
sti
hlt
mov
add
ljmp
push
pop
adc
rclb
nop
adc
scas
cmc
push
adc
add
jnp
clc
push
xchg
cmp
mov
xchg
out
test
xchg
mov
fsubl
jae
and
mov
inc
adc
dec
in
xor
fcoms
mov
clc
lock
and
adc
xchg
jb
loopne
add
xchg
sbb
aaa
push
xchg
popf
or
sahf
in
mov
leave
in
pop
adc
or
jle
mov
xor
mov
jle
add
icebp
jno
push
cmc
cmpsl
jbe
faddp
nop
lcall
addb
subl
ret
mov
xor
mov
scas
xchg
pop
movsl
cs
hlt
std
cmp
add
pop
sti
or
jne
cmp
movsb
jns
sbb
shlb
scas
mov
rcl
aaa
arpl
nop
push
nop
cmp
cli
insb
movsb
xor
mov
pop
push
xor
cmpsb
idivl
aad
lcall
fnsave
sbb
fdivrp
add
shlb
clc
frstor
lods
xlat
sub
fwait
dec
dec
movsb
jle
cwtl
add
pop
push
dec
xchg
nop
mov
bound
add
lds
dec
mov
or
sub
or
stos
dec
hlt
ja
and
xchg
add
lret
jne
lock
mov
in
push
mov
push
cmp
push
mov
ret
orb
sub
aas
sub
cmpsb
jnp
lock
push
or
cmp
pop
sub
sub
sbb
rcrb
mov
mov
xchg
jae
sub
das
in
add
jae
roll
mov
xchg
dec
loop
add
or
movsb
mov
pop
jns
decl
pop
or
hlt
cmp
xchg
mov
cmp
shrl
mov
jmp
bound
add
pop
dec
sbb
les
fwait
mov
xor
sbb
add
sbb
jle
mov
dec
movsb
inc
push
mov
or
shrb
xor
dec
xorb
cmp
test
hlt
xchg
imul
or
iret
shrb
jg
data16
pushf
dec
test
adc
test
rcll
adc
lea
jge
decl
add
test
mov
cli
xchg
test
cmpsb
arpl
mov
pop
xchg
add
stos
mov
testb
xorl
add
inc
xchg
test
or
mov
das
or
fs
xor
or
les
jp
ret
inc
sbb
inc
mov
push
into
push
cltd
pop
cld
lods
out
mov
popa
jno
push
mov
add
cmp
sarb
pop
or
mov
iret
imul
jp
push
pop
mov
dec
jge
add
push
shrl
add
imul
jnp
push
addb
mov
adc
mov
js
or
bound
mov
xchg
mov
rcll
iret
scas
jae
xchg
test
jae
ret
push
xchg
lret
sahf
pop
jnp
xchg
mov
les
rcl
push
fldt
les
cmp
and
mov
cltd
stos
mov
enter
nop
mov
std
std
adcb
cmp
rorb
in
push
push
and
mov
or
lods
movsl
sub
cs
mov
pop
push
shll
dec
pop
loopne
lods
add
xorb
insl
bound
nop
int3
mov
movsb
jbe
orl
int3
mov
pop
in
enter
jle
or
adc
insl
cmp
dec
aad
adc
cmc
pop
push
push
testl
adc
mov
adcl
pushl
lods
jnp
mov
xor
push
cltd
cmp
movsb
lods
jnp
insl
sub
cmp
ja
add
push
or
mov
mov
ljmp
notb
inc
pop
int3
cs
mov
imul
sub
out
jnp
in
ffree
aas
rclb
cwtl
sti
into
outsl
int3
addl
mov
gs
stos
leave
xchg
fiadds
add
test
cwtl
into
sahf
cmc
jno
insb
inc
add
push
imul
mov
push
xchg
xchg
or
xchg
mov
into
in
mov
js
rcrl
xor
test
outsl
clc
xchg
push
sub
test
mov
lea
mov
mov
in
cmpsl
inc
popa
mov
jmp
sub
jmp
sar
mov
mov
adc
jno
jge
rorb
imul
shrb
sub
cmp
in
scas
mov
add
mov
or
jl
aas
and
scas
xlat
mov
lahf
rorb
pop
adc
pop
test
fwait
les
fldt
in
scas
or
mov
push
iret
call
mov
cmpsl
lds
repnz
retw
or
inc
sbb
xor
and
mov
sub
pop
mov
aam
add
push
hlt
pusha
leave
sbb
inc
adc
add
sahf
test
mov
inc
aam
xchg
aam
jge
pushl
imul
or
test
sbb
cmp
xchg
shl
mov
jbe
or
aas
dec
add
adc
add
adc
add
adc
sub
dec
imul
lret
sbb
fcom
les
in
sub
adc
imul
cmp
enter
inc
popa
mov
ret
sbb
inc
push
hlt
mov
imul
out
jae
and
lods
cmc
mov
inc
jle
fs
rclb
cmp
xchg
xchg
imul
sbb
jmp
je
or
in
sbb
into
mov
adc
cmp
shrl
push
lods
in
adc
push
mov
js
push
xlat
in
xchg
xchg
mov
push
test
int3
xchg
or
aad
scas
sbb
mov
repnz
imul
fsubrl
repnz
fstp
xchg
into
adc
xchg
cmpsl
leave
sbb
lds
ror
mov
cwtl
and
push
call
xor
pop
mov
sbb
mov
sub
movsb
fdivrs
lods
loop
inc
loope
enter
aam
in
call
cld
or
ret
movsl
sbb
test
negl
mov
in
in
jg
xchg
enter
inc
adc
xchg
sub
mov
mov
lret
aam
in
cwtl
cmpsb
mov
sub
inc
add
xchg
adc
jge
cld
dec
jo
jo
je
insl
int3
push
adc
cli
daa
loopne
or
adc
rcrl
hlt
xchg
loope
xchg
cltd
jne
xor
xor
sbb
or
xchg
or
int3
dec
jnp
popf
rcrb
loope
test
out
punpcklbw
lret
dec
nop
test
cltd
or
add
xchg
test
xchg
lea
mov
fmuls
or
clc
notb
stos
cmp
xor
mov
cwtl
stos
call
loope
lahf
push
jp
fistpl
mov
inc
stos
jmp
inc
add
sub
shll
clc
xchg
inc
mov
or
adc
or
xchg
mov
and
scas
xchg
xor
mov
test
lock
mov
xchg
rcll
outsl
cli
ss
mov
shrb
and
js
inc
not
xor
jmp
fldl
dec
fdiv
cmpsl
mov
sbbb
or
mov
adc
cmc
fwait
push
push
inc
mov
jb
ret
or
jb
fwait
out
lret
mov
dec
jno
stos
mov
mov
mov
and
jg
dec
or
sbb
movsb
mov
xchg
js
outsb
jno
imul
cmp
push
xchg
cmp
das
cmp
push
pop
xlat
sub
xlat
add
mov
pop
ss
mov
cltd
leave
leave
cwtl
stos
cs
xchg
mov
pop
jae
movsl
ret
adc
cmp
rorl
sub
sub
test
inc
lcall
xchg
or
movsb
xchg
test
mov
pop
dec
test
lods
dec
mov
xchg
mov
imul
push
adc
clc
push
test
cs
outsl
not
add
or
les
xchg
xor
jle
ja
nop
enter
xor
push
and
inc
lea
sub
test
xor
movsl
inc
enter
add
push
mov
xchg
int
sub
inc
mov
mov
test
xchg
iret
movsb
jg
fdivrl
inc
mov
fs
test
push
mov
orl
push
iret
xchg
shll
xlat
fidivs
mov
mov
xchg
bound
in
dec
dec
call
xchg
ss
add
sub
add
insb
xor
movsl
test
outsl
or
test
mov
repnz
or
push
shl
mov
mov
or
xor
test
mov
roll
clc
sbb
mov
fs
imul
mov
xchg
inc
mov
mov
rol
cmc
mov
fwait
sub
xchg
add
add
push
ret
bound
and
add
xlat
lods
in
aad
adc
push
inc
inc
bound
xchg
cmc
push
jle
adc
or
in
scas
mov
or
test
bound
ja
popa
and
xchg
mov
nop
and
cld
mov
mov
nop
mov
add
or
hlt
ret
or
dec
popf
adc
and
ffreep
cmp
adc
fst
orb
aam
add
inc
in
jns
insl
icebp
pop
push
xchg
mov
pusha
xchg
xor
mov
cmp
lea
lcall
test
insl
mov
add
ljmp
jae
int3
mov
sub
jne
cltd
xchg
ljmp
aam
inc
adcl
jns
inc
mov
mov
int3
pusha
mov
stos
sub
int3
jp
pop
dec
xchg
push
cmc
lods
pop
fadd
out
inc
push
and
pushf
hlt
test
sbb
adc
xchg
shll
test
pop
lret
sub
mov
jne
sbb
cmp
lahf
xchg
pusha
stos
or
pop
js
movsl
lea
or
and
push
adc
shll
das
push
test
sub
push
or
pop
mov
insl
lods
push
add
subl
jmp
jbe
pop
jae
sbb
enter
jo
push
cld
je
rcr
sarb
fnstsw
mov
roll
push
mov
orb
in
sbb
js
push
imul
jp
stc
and
out
in
js
xlat
or
add
adc
push
in
and
sarb
add
xchg
push
lcall
rcrb
pop
push
sub
iret
lods
and
mov
sub
adc
fadds
dec
xchg
call
pop
xor
sahf
cmc
test
jle
lret
mov
dec
daa
aad
invd
mov
lods
fst
cmc
movsl
cs
into
push
inc
jo
fisttpl
lret
jmp
inc
cwtl
pop
fstps
adc
test
xor
mov
cltd
ja
mov
push
fistps
pop
xlat
and
shlb
add
insl
ljmp
mull
jecxz
xchg
add
lods
add
push
add
imul
addr16
jle
movsl
fildll
and
adc
cmp
dec
in
aad
adc
mov
push
xchg
xchg
lods
mov
mov
add
xor
andb
faddl
mov
leave
mov
fidivrs
mov
test
popf
pop
mov
inc
or
mov
xchg
pop
cmpsb
outsl
and
mov
nop
mov
sbb
rol
cmp
mov
mov
rolb
mov
in
mov
lahf
testl
adc
or
sub
outsb
ror
enter
xchg
sub
lret
adc
addl
and
fs
mov
stos
inc
xchg
xchg
lcall
sub
add
jnp
xchg
subl
or
sbb
sarb
xchg
leave
adc
mov
sub
repz
enter
scas
xchg
add
lahf
call
cmp
clc
dec
into
xchg
imul
call
in
pop
push
movsb
jb
pusha
push
cltd
dec
cmpsl
enter
push
mov
xchg
lock
inc
outsl
adc
xlat
mov
xlat
cld
jo
jmp
mov
cmpsl
stc
mov
push
inc
pop
mov
push
jns
lds
mov
sub
inc
xchg
stos
dec
movsb
push
xchg
push
xchg
jae
loopne
fsubrs
hlt
xchg
mov
mov
pop
jno
sub
cmp
sbb
jb
ss
jmp
iret
inc
int
test
mov
sbb
sub
pushf
pop
sarl
movsl
cmc
cmpsl
std
test
and
add
mov
cmp
or
nop
jo
call
mov
jae
inc
cmp
push
mov
xchg
test
add
mov
popf
movsl
or
insl
xor
jo
mov
cmpsl
mov
fisubs
pop
xchg
jle
aas
xchg
xchg
test
test
in
mov
xchg
call
test
sub
sbb
dec
in
add
mov
das
cmp
mov
lods
pushf
jl
jne
ret
sbb
fildll
test
xchg
mov
cmp
inc
add
mov
jns
lds
rclb
out
mov
jno
hlt
xor
cld
fldt
addb
mov
lea
sub
adc
or
pop
nop
add
flds
pop
lods
shrb
les
lret
dec
cltd
sub
insb
std
rorl
sub
out
lcall
add
add
pop
fmuls
adc
scas
aad
fmul
enter
and
popf
adc
fnsave
push
add
jmp
loop
sub
push
test
jae
adc
ret
gs
stos
lcall
ret
loope
fsubl
mov
fucomip
mov
icebp
lods
ja
rorb
or
cmp
cli
test
icebp
mov
jbe
fisubrl
mov
popf
cmpsl
or
or
lds
mov
jmp
mov
push
test
xchg
jge
mov
call
pushf
rcl
adc
lock
in
pop
in
mov
lock
jb
pusha
xchg
das
mov
iret
movsl
fcoms
jnp
or
mov
in
les
movsl
test
out
mov
push
lods
and
test
sub
iret
inc
or
cmc
dec
insl
pop
test
andnps
inc
cmpsl
nop
pop
mov
mov
mov
mov
movsl
xchg
push
pop
xchg
xlat
bound
xchg
inc
es
stos
jge
cmpsl
mov
xchg
push
mov
adc
rorb
jmp
push
movsl
jb
dec
and
or
ret
adc
test
fs
mov
mov
aam
pushf
aam
imul
and
mov
mov
es
loope
mov
jmp
divb
adc
jecxz
and
in
mov
inc
cmp
enter
decl
sbb
mov
push
jecxz
leave
scas
out
adc
push
xor
mov
neg
mov
add
push
sub
pop
insl
cli
cmp
jg
mov
adc
jno
lds
sub
xchg
mov
jne
mov
inc
shr
mov
std
push
mov
test
les
jle
jbe
idivl
into
jecxz
inc
imul
cmp
lods
sub
lods
sub
xchg
or
inc
dec
loopne
dec
xchg
cmp
cmc
rsqrtps
fldt
and
imul
xchg
xchg
xchg
mov
add
push
movsl
sbbb
xchg
lods
xchg
pop
movsb
pop
iret
xchg
xor
or
pop
scas
cmpl
sub
jnp
xchg
mov
loopne
je
mov
sbb
cmp
mov
dec
les
mov
sbb
stos
xlat
dec
add
xchg
std
push
popa
mov
movsl
mov
pop
jne
mov
jnp
outsb
xor
or
insl
ss
cwtl
lods
fists
lcall
mov
je
aam
gs
adc
sub
or
ret
mov
or
mov
cmp
fcoml
cmpsl
fidivrs
in
hlt
lcall
ret
rcl
add
enter
ret
push
push
xchg
rorb
bound
popf
nop
inc
push
mov
sbb
mov
mov
mov
or
js
mov
adc
mov
or
test
les
fldenv
mov
leave
int
adc
cmp
insb
notb
xchg
inc
into
add
lahf
sub
mov
xchg
or
cmp
and
pop
sbb
aad
mov
cltd
mov
xorb
rol
mov
lds
sbb
aad
fdivl
add
arpl
or
sub
mov
xchg
lret
push
xor
cli
imul
sub
insb
inc
sbb
mov
loop
push
add
leave
std
arpl
out
jg
lret
and
xor
push
stos
insb
sub
nop
xchg
push
fisttpl
arpl
cltd
push
xchg
mov
mov
std
outsb
push
rorl
xchg
mov
movsl
mov
cmp
pop
and
sti
lds
fadd
cmp
shlb
adc
mov
xchg
mov
xchg
fwait
repnz
mov
les
mov
dec
xchg
mov
scas
stos
test
pop
adc
push
lock
int
jae
rcll
inc
add
cmp
hlt
inc
push
mov
xor
and
lods
into
mov
das
cmpsb
jle
push
cs
pushf
mov
fcmovbe
int
call
inc
popf
inc
adc
jmp
push
push
sub
out
pushf
aad
mov
add
pop
test
movb
xchg
jl
xchg
mov
imul
mov
mov
xchg
loop
iret
jns
adc
dec
subl
ret
mov
dec
jg
fwait
push
stc
mov
rcll
fistps
jnp
cmpsb
pop
jle
test
mov
push
jg
fnstsw
fadds
insb
clc
cld
xchg
push
test
stos
mov
dec
test
mov
push
loop
inc
mov
or
fmuls
negl
or
inc
xchg
cmpsl
mov
std
in
lock
stos
jbe
stc
xor
mov
lcall
sti
cmp
mov
jo
stos
mov
mov
xchg
inc
jnp
jmp
mov
in
rorl
cmp
mov
add
pop
mov
xchg
in
adc
mov
mov
fistps
int3
sub
mov
jne
add
and
shrl
or
ror
push
stos
or
lret
hlt
aad
aas
push
adc
aas
rcl
les
xchg
in
pushf
test
mov
ds
test
lea
push
rcll
push
dec
pusha
in
mov
cltd
pop
mov
ret
fs
cmp
sub
cwtl
ret
xor
pusha
xchg
cmp
add
es
xchg
sub
aas
gs
orb
aam
mov
cli
xlat
fistl
aaa
and
insb
lods
pop
mov
pop
mov
rorl
lds
xchg
nop
stos
roll
xor
out
pop
insl
sbb
mov
or
je
sub
subb
scas
mov
or
cmpsl
sub
xchg
ds
xchg
adc
mov
mov
shll
test
inc
cld
push
test
movl
ret
push
lods
or
frstor
aam
pop
dec
sbb
shl
scas
or
imul
iret
sub
fidivrs
lods
xor
mov
dec
or
xor
shr
enter
test
cmpsb
add
and
cmp
sbb
shr
push
aam
sarl
xchg
cmp
in
divb
mov
inc
ja
mov
or
xchg
mov
pop
pop
mov
inc
mov
into
or
hlt
ffreep
mov
push
jne
pop
out
cli
inc
push
xchg
loope
je
adc
rcr
jp
push
outsb
daa
adc
mov
sub
andl
test
je
sti
movsl
cmc
inc
rcll
cmp
push
inc
jge
jmp
cmp
mov
fidivs
fidivrl
aas
scas
pop
sbb
fcom
cmpsl
cmp
jae
outsl
or
mov
lret
shr
pusha
jecxz
add
hlt
inc
ljmp
adc
orl
rolb
into
pop
mul
shlb
add
mov
add
xchg
subb
mov
sarb
jmp
in
aas
mov
xchg
test
mov
mov
movsb
adc
loop
hlt
mov
and
mov
mov
mov
enter
ror
xchg
call
or
xor
sbb
test
ds
push
jmp
sbb
pop
cmp
rorb
push
movsl
mov
popa
aaa
mov
pop
xchg
lret
subb
cwtl
adc
push
popf
fadds
dec
leave
popl
aaa
pop
mov
inc
jl
mov
lods
decb
addr16
and
cmp
hlt
lea
lcall
enter
data16
fdivrs
push
jae
mov
subl
or
inc
in
sub
call
jo
push
enter
mov
adc
cmp
xor
cmp
inc
es
mov
movsb
mov
les
mov
adc
push
popa
test
mov
std
repz
cmp
mov
sub
sbb
mov
pop
xlat
rcrl
push
mov
inc
scas
add
mov
xchg
xorb
fsub
rcl
shrb
fdivr
jnp
sub
rcrl
mov
sarb
dec
ret
jle
fs
movsb
jle
fwait
test
subb
mov
lret
xchg
dec
insl
fwait
dec
mov
icebp
shll
dec
sub
or
mov
lock
js
and
in
and
pop
push
adc
fsubs
or
cmp
mov
xchg
call
std
rorl
xchg
push
rcr
fstl
pusha
icebp
int3
mov
das
paddsw
adcl
addl
inc
push
xlat
mov
out
out
or
iret
pop
xor
andb
xlat
inc
adc
fildll
xchg
mov
push
nop
xchg
cwtl
sbb
push
int3
cmp
mov
xchg
fucomp
sub
jmp
enter
enter
pushl
les
nop
sbb
jmp
filds
pop
cmp
daa
inc
icebp
and
int3
xchg
add
inc
inc
enter
cmp
inc
aad
lock
mov
jge
leave
jg
lret
scas
xor
push
aam
push
lods
jb
push
mov
mov
shrb
xor
decb
push
aam
icebp
sbb
scas
jnp
sbb
mov
pusha
rorb
jne
jno
inc
pop
lret
inc
ret
inc
fidivrl
loopne
jle
sar
cltd
je
subl
ret
fdivrl
fldl
and
mov
mov
testb
dec
add
jnp
mov
rclb
adc
scas
adc
dec
filds
pop
sbb
sti
lods
cmpsb
ret
mov
lret
in
iret
call
or
and
in
incl
dec
inc
ret
adcl
xor
enter
dec
pop
out
les
ds
sbb
push
movsb
or
mov
inc
or
inc
insl
roll
xchg
cmp
push
push
pop
loope
xor
inc
fadd
mov
sbb
cwtl
lea
sarl
popf
adc
cmp
jmp
mov
data16
rorb
stos
jp
xlat
and
cld
rclb
inc
jmp
jle
inc
test
test
push
es
aam
iret
fdivr
and
test
sbb
and
adc
fldl
inc
lret
daa
push
das
dec
pop
mov
add
dec
pop
call
into
shlb
nop
icebp
pop
call
pushf
stos
inc
bound
movsl
dec
push
cmp
xchg
push
call
shlb
cwtl
nop
push
jle
incl
jecxz
push
scas
mov
int3
pop
pop
leave
xor
jns,pn
mov
loope
xchg
into
andl
pop
sub
mov
push
push
jae
pushf
stos
xchg
add
push
frstor
lcall
int3
outsl
jl
test
lcall
cs
sub
lds
int
stos
ds
imul
out
fldcw
bound
je
sbb
mov
pop
sub
aam
xchg
mov
loopne
jle
gs
mov
arpl
gs
or
mov
pop
push
and
leave
in
dec
rolb
cmp
hlt
outsl
and
adc
repz
dec
dec
loop
ficoms
lods
xchg
and
jns
das
stos
nop
flds
jle
popa
and
lea
inc
lods
mov
jns
shll
outsl
divl
roll
mov
movsb
sub
shlb
pop
scas
test
icebp
jmp
ss
rorl
repnz
sarb
ret
push
and
add
mov
cld
mov
fcmovnu
and
pop
mov
add
adcl
lret
cmp
pop
hlt
sbb
or
leave
sub
call
gs
and
loope
and
or
in
dec
jae
push
jl
das
jnp
jg
add
add
mov
cmp
cli
pop
je
popa
fcomip
mov
add
inc
les
pop
mov
add
jg
adc
sub
mov
inc
xlat
stos
jle
jp
aad
imul
cltd
xchg
add
inc
sbb
dec
mov
lods
movb
cld
dec
fisubrs
xor
lahf
cld
dec
add
inc
imul
push
mov
pop
and
xchg
pop
mov
sub
aad
cwtl
and
xchg
mov
xor
mov
nop
mov
cmc
cltd
cli
rcrb
lods
js
lret
mov
or
mov
iret
mov
test
dec
add
test
mov
and
push
das
lret
ret
movsl
jb
pushf
cmc
cli
aad
cmp
mov
jecxz
push
cmp
mov
and
stos
jp
aam
popf
mov
inc
mov
std
sti
sbb
into
stos
outsb
loop
mov
clc
pop
cmp
inc
pop
and
ret
imul
cmp
repnz
mov
lret
mov
jae
ficompl
int3
dec
enter
sub
or
aam
fimull
or
xchg
lods
pop
mov
adc
std
and
jl
push
cmp
gs
jg
mov
fistpll
movsl
rcl
push
push
in
insl
movsl
fistpll
popl
leave
aam
jl
dec
jo
dec
inc
sbb
and
xor
inc
cmp
flds
sbb
icebp
sub
cld
data16
or
hlt
faddp
fst
mov
fistl
stc
jo
rorl
int3
push
jl
xchg
fnstenv
mov
mov
xor
pushf
ljmp
nop
aam
jne
and
test
push
lret
fldcw
or
je
xchg
jo
dec
scas
xlat
adc
lds
pop
inc
mov
loop
xor
pop
loopne
cltd
mov
mov
popa
xchg
fsubr
or
inc
pushf
mov
ret
xor
xchg
add
andb
cmc
mov
mov
sub
jb
push
jae
mov
xchg
test
cld
idivl
sbb
adcb
cmc
lea
jle
cmp
mov
or
jg
scas
or
insb
mov
cmp
pop
ret
outsl
ret
mov
out
mov
cld
into
dec
jp
or
fsubp
mov
lock
mov
insb
pop
push
test
popa
lahf
les
adc
hlt
mov
mov
loope
or
scas
and
xchg
into
cs
stos
das
rolb
xchg
sbb
pusha
dec
add
cmc
mov
roll
hlt
mov
loopne
xchg
xchg
cld
pop
imul
out
mov
test
cmpsl
add
movsl
jge
mov
rcl
mov
test
xchg
mov
mov
xchg
daa
push
pushf
rolb
push
or
repnz
rorb
xchg
hlt
std
mov
push
cmp
or
fisubrs
testb
add
into
out
mov
stos
xor
mov
mov
mov
xor
fwait
jbe
dec
mov
push
rcrb
aas
fbstp
rcll
pop
and
fs
mov
enter
je
push
push
inc
push
jne
cmp
sub
push
clc
ja
sbb
xchg
rolb
roll
fnsave
andl
xlat
pop
or
sub
rcl
xor
inc
je
add
lret
lods
jmp
lods
push
lret
outsl
mov
lret
jle
mov
fistl
xchg
into
lds
pushf
pushf
imul
jl
ret
push
fwait
mov
mov
ret
mov
sub
notb
hlt
jmp
dec
mov
ret
inc
push
mov
add
test
filds
xchg
cld
andb
outsb
movsb
push
inc
add
jmp
jle
jg,pt
insl
ss
add
test
int
push
mov
jmp
mov
test
or
sbb
push
nop
rcr
js
pop
jne
add
mov
rcl
push
jle
icebp
mov
in
mov
pop
push
and
enter
xlat
int
sbb
movsl
sub
imul
sub
ficoms
ja
add
in
sahf
pop
sub
inc
xchg
test
lock
or
and
or
cmc
inc
push
lret
cmp
test
out
test
xor
xchg
or
sahf
lock
mov
divl
mov
fmul
mov
in
and
enter
mov
mov
add
cmc
xchg
std
je
push
rclb
jge
mov
adc
push
inc
and
test
xchg
in
out
test
inc
xchg
jnp
roll
nop
mov
sub
push
cwtl
imul
movsb
test
push
in
pop
fs
push
mov
subb
and
push
mov
fdivrl
push
test
test
mov
pushf
les
inc
mov
cmp
push
lods
mov
or
mov
xor
cld
add
pop
jbe
outsb
imul
mov
push
jne
hlt
mov
xchg
push
lcallw
mov
add
cmp
jo
xor
jmp
arpl
into
stc
adcl
movsb
sub
out
xor
lret
or
add
inc
clc
rcrl
push
lds
cmpl
cmp
ljmp
lock
sbb
test
pop
dec
mov
xor
outsb
dec
mov
mov
test
cli
sbb
test
cmp
fsubs
xchg
popa
xchg
inc
push
or
pop
xor
inc
pop
mov
xor
fisttpll
mov
xor
push
jne
inc
mov
mov
or
push
aad
in
das
je
fs
fcmovnbe
test
lods
or
sti
fsubl
mov
push
shrl
or
cmpsl
jg
add
inc
mov
mov
adc
mov
xchg
shlb
push
mov
cmp
rolb
pop
rorb
sub
in
lret
or
jg
lcall
stos
decl
clc
loop
mov
mov
lods
or
mov
mov
pop
fadd
xor
in
ljmp
iret
fnstsw
mov
sub
or
xchg
movsl
jne
daa
pop
test
das
stos
push
mov
daa
dec
or
fistps
jmp
cmp
hlt
cld
mov
adcl
or
pop
pop
mov
inc
iret
ja
xchg
cmp
mov
test
pushf
mov
pop
mov
stos
and
mov
mov
cmc
push
in
dec
sti
hlt
les
mov
divl
adc
int
lods
frstor
test
shrl
adc
cmp
les
push
jp
xorb
iret
mov
add
daa
cmpsl
and
popa
or
stos
movsb
pop
insb
adc
ret
dec
scas
fistps
xchg
mov
cmp
mov
test
xor
jae
pushl
sub
xor
std
and
ret
lods
repnz
stc
imul
mov
xchg
cld
jnp
ja
mov
fwait
cmp
or
dec
aad
loopne
neg
mov
daa
iret
out
bound
add
cmpsb
jecxz
inc
xor
pop
add
xor
in
sti
lcall
ds
mov
adc
lret
jne
pmaddwd
dec
sub
cwtl
cmp
jle
push
lahf
sub
mov
in
inc
mov
cltd
movsb
rcrl
xchg
pop
xchg
and
jle
mov
shlb
setns
mov
push
xchg
inc
pop
lahf
fistpll
push
test
aam
les
lret
clc
mov
int3
xchg
test
sbb
adc
dec
adc
das
stc
ljmp
sub
jae
aad
and
fdivs
mov
mov
inc
test
divl
aam
lods
and
int3
ja
cmc
mov
mov
push
or
mov
lret
fadds
rcrl
push
xchg
add
push
shrl
or
sbb
inc
shlb
ss
xchg
imul
push
aaa
and
push
add
lds
dec
int3
je
movsb
mov
hlt
divb
sti
push
inc
fucomp
mov
xor
adc
int
loop
enter
pop
sbb
mov
int
or
in
xor
dec
test
push
push
push
scas
sahf
and
repnz
hlt
pop
lret
inc
gs
sbb
test
hlt
rcrl
jle
mov
mov
ret
repnz
cmp
xchg
or
loop
fstp
mov
mov
hlt
xchg
scas
sbb
shrl
sub
push
push
adc
inc
test
xlat
int
stos
andb
xchg
fisubl
mov
cmp
jge
jmp
push
mov
dec
or
into
test
xchg
outsl
mov
or
inc
or
mov
jo
adc
pop
pop
xor
jbe
lret
inc
or
add
mov
lds
lret
xor
mov
cmc
xor
loope
ror
sub
sbb
aas
jecxz
sub
arpl
mov
xchg
xlat
rcl
stc
scas
sub
sbb
lret
cmp
int3
xchg
ret
je
mov
hlt
push
sub
cmpsl
in
xchg
lret
pop
daa
ficoms
ljmp
or
and
in
mov
or
shll
sub
shrb
mov
add
aad
sub
push
inc
xchg
cmpb
fsubrs
mov
dec
jge
sar
rcl
into
mov
sbb
cld
mov
leave
insl
xchg
xor
xchg
and
xchg
push
lds
xchg
add
mov
pop
nop
add
test
sarl
pop
adc
xchg
test
lods
inc
jns
or
adc
into
out
pop
xor
ficoml
jg
mov
push
ret
enter
out
push
jle
andb
dec
cmpsb
idiv
into
mov
push
mov
rorl
cmp
cld
xlat
push
mov
movsb
dec
cmp
js
fs
mov
and
lea
stos
mov
fwait
push
jge
test
adc
sub
call
aad
dec
test
cli
adcb
lret
enter
cmp
jnp
cmpsl
out
fs
test
test
and
xlat
adc
roll
mov
movsb
inc
sbb
mov
adc
cmp
push
es
movsl
pop
jo
mov
xrelease
jmp
push
mov
repz
jb
test
mov
jp
mov
jle
gs
mov
xchg
daa
std
arpl
ds
scas
ret
cmpsl
mov
cmp
cltd
sbb
xchg
testb
push
xchg
sarb
clc
les
into
sbb
bound
fbld
inc
lcall
fildl
insb
mov
adc
icebp
xchg
ret
adc
loope
stc
out
cmpsl
ret
add
leave
pop
test
lcall
outsl
xor
mov
imul
lock
mov
jns
push
jae
add
test
add
cmp
xchg
jnp
cld
test
add
or
jle
das
int3
fcmovu
mov
xchg
or
movsl
inc
mov
xor
inc
xlat
mov
push
jp
or
jae
xchg
daa
jle
or
cmp
cli
sub
xor
adc
mov
and
xchg
or
cltd
movsl
cltd
pushf
push
jno
fwait
cwtl
rorb
pop
inc
push
adc
lret
pop
and
or
pop
into
testb
inc
push
or
sbb
push
ret
mov
bound
push
adc
repz
les
cltd
adc
cld
or
shlb
or
jno
mov
cmpsl
inc
bound
add
adc
mov
sbb
adc
call
movsb
pushf
dec
push
mov
mov
fs
fbstp
adc
adc
adc
cmpsl
movsb
jno
das
packssdw
push
cmp
sbb
add
psubusb
sbb
inc
out
jne
int3
push
es
sbb
adc
in
cmp
or
mov
fadds
cld
or
xchg
lock
fisubs
js
fsubrl
arpl
mov
cmp
push
pop
mov
clc
push
insb
sub
xchg
inc
sbb
mov
xchg
inc
subl
in
lods
out
jle
addr16
jno
sub
mov
mov
mov
sub
jg
jg
xor
nop
push
xchg
xchg
mov
test
push
flds
in
fistpll
push
or
or
test
adc
adc
ret
push
scas
fs
mov
sbb
lods
or
mov
dec
and
adc
imul
jecxz
movsl
aad
xor
adc
cmc
in
jle
ret
fs
cli
adc
mov
ljmp
push
mov
aaa
imul
sub
push
lret
sub
xchg
icebp
xchg
nop
imul
or
loope
xchg
les
cmp
subl
imul
hlt
mov
xchg
je
test
imul
mov
sbb
pop
push
xor
movsl
jg
sbb
mov
dec
in
mov
ja
in
mov
js
pop
aaa
lods
addb
inc
test
inc
mov
cld
test
aaa
inc
and
rolb
xchg
stc
imul
cmp
fs
cmp
addl
inc
dec
ds
or
mov
bound
mov
mov
pop
jne
sbb
jp
jg
or
push
dec
ss
dec
call
mov
xchg
lret
xchg
sbb
jne
mov
push
ret
out
mov
aam
mov
out
or
clc
mov
iret
xchg
jg
or
cwtl
and
lret
xorl
add
loopne
push
mov
ljmp
gs
imul
ror
iret
push
mov
std
pop
iret
mov
xchg
icebp
orb
je
mov
cmp
sub
mov
sbb
cli
mov
cmp
push
cltd
cmp
or
ja
xchg
push
sub
dec
and
mov
lcall
aam
xor
add
xchg
and
std
int3
sub
es
add
add
hlt
xchg
and
xchg
push
jle
les
movsl
sarb
jle
jns
and
cmc
mov
xor
adc
inc
mov
xchg
nop
or
sbb
mov
xchg
and
test
mov
rcll
inc
rcl
inc
mov
test
inc
dec
dec
push
or
pop
jae
inc
mov
movsb
jb
adc
pushf
cltd
cmc
ret
or
push
lods
dec
call
lret
es
or
js
push
cmp
adc
inc
test
adc
pop
in
dec
call
or
dec
sub
pop
icebp
mov
sbb
test
mov
xchg
sahf
stos
mov
movsl
lret
jp
dec
jge
push
jp
aaa
and
jbe
nop
inc
sarl
xor
fwait
xchg
sti
adc
mov
inc
add
cmp
daa
or
xlat
in
ret
xchg
xchg
shlb
sbb
mov
lods
xchg
orb
and
aaa
push
push
jbe
mov
pusha
or
andl
xchg
dec
mov
lret
mov
mov
push
dec
mov
mov
and
pop
add
in
cmp
dec
xor
inc
xchg
xor
dec
lret
loopne
mov
add
push
and
in
mov
movsb
adc
xlat
dec
stos
shlb
imul
cmc
mov
xchg
lods
push
fidivrs
int3
scas
adc
xlat
mov
cwtl
add
sbb
pop
pop
xchg
rcrl
push
mov
pushf
stos
js
scas
jo
notl
int3
xchg
stos
inc
jnp
js
push
jmp
dec
sub
xchg
lret
stc
and
cmc
je
jmp
mov
loopne
aad
sahf
sbb
sar
gs
scas
je
jmp
int
and
jbe
mov
lahf
fwait
inc
jb
dec
and
out
jg
arpl
xchg
lods
rclb
push
mov
sbb
test
in
and
imull
and
mov
jbe
test
add
fnstsw
daa
cmpsl
inc
nop
cmpl
xchg
les
adc
jae
sub
outsb
loop
cwtl
test
stos
movsl
fbld
adc
mov
arpl
sub
xor
into
and
rep
xchg
stos
sub
cmpsl
mov
xor
test
xchg
inc
hlt
mov
mov
adc
sub
cmp
jb
les
shl
arpl
or
call
jns
mov
mov
pushf
aad
pop
mov
rcl
mov
jb
push
pop
sub
loop
xchg
push
fsqrt
mov
cwtl
test
aad
and
rclb
in
test
gs
test
adc
movsl
mov
cmp
mov
sarl
data16
ret
jo
dec
aas
fcmovbe
or
insb
mov
test
add
icebp
testl
and
mov
iret
push
outsl
xchg
adc
xor
xchg
fimull
xor
mov
mov
rcl
sbb
mov
jge
dec
test
shrb
add
pop
loop
ljmp
sub
jnp
pop
mov
push
cmp
xchg
mov
std
sbb
or
xchg
nop
call
inc
mov
cmpsl
subl
mov
or
jl
and
mov
lods
mov
add
mov
adc
cmpsl
adc
ljmp
enter
sahf
in
mov
inc
add
aad
mov
sub
std
fcom
inc
pop
mov
cmpsl
add
mov
mov
xor
inc
in
sub
int
std
mov
mov
shlb
shrl
test
lret
xor
and
std
sbb
sbb
mov
mov
nop
shll
mov
movsl
fcoms
lods
push
ljmp
cmp
jle
add
push
cmpsb
jne
mov
inc
js
rcl
xchg
ja
test
mov
jae
std
dec
add
cmp
add
adc
dec
sbb
pop
std
cmp
cmpl
jo
cmc
out
pop
fnsave
js
push
in
dec
dec
loopne
xchg
xchg
loope
ja
js
shrl
jmp
xor
les
push
subl
cmpsl
fsubr
lock
sbb
ret
mov
test
inc
mov
and
pop
inc
push
push
and
in
out
lcall
mov
mov
scas
popa
or
iret
add
stos
cmc
outsl
mov
rcrb
out
pop
pushf
gs
add
jo
movsb
push
mov
dec
add
dec
std
call
mov
xchg
enter
mov
pushf
imul
or
lahf
imul
ret
push
test
int
imul
xlat
push
test
add
cmc
pop
mov
mov
test
adc
repz
mov
xchg
lds
pushf
cmp
mov
in
inc
cmp
pusha
shll
or
bound
xchg
adc
or
aad
hlt
addl
insb
xchg
sbb
mov
jo
mov
mov
pushf
sahf
jne
mov
int
add
xor
xchg
dec
fcoms
xchg
loope
mov
add
mov
sbb
shlb
jnp
xchg
hlt
hlt
sub
mov
fcoms
leave
loop
adc
and
les
cltd
mov
sbb
test
xor
mov
or
repz
shlb
repnz
pop
testb
aaa
dec
shll
repnz
lods
mov
adc
rorb
add
sarb
and
call
mov
fildll
push
fildll
xchg
pop
sub
stc
loope
imul
push
movsb
mov
rcrb
mov
add
cld
push
mov
mov
int
stos
xor
mov
ret
dec
dec
mov
stos
aam
fsubs
pop
cmpsb
sarb
push
hlt
add
hlt
movsl
daa
xchg
test
xor
and
push
jae
call
sarb
scas
ds
push
sub
je
movsb
adc
mov
aad
popf
inc
inc
outsb
pop
xor
jp
sbb
imul
push
sar
cmpsl
pop
pop
xchg
cwtl
ret
push
icebp
pushf
popa
cmp
or
mov
int3
ret
add
popa
adc
sub
sarl
inc
mov
shlb
xlat
ljmp
sarl
inc
jnp
scas
cwtl
enter
dec
inc
mov
inc
adc
mov
jge
in
sahf
pushf
push
mov
jmp
ds
jge
sbb
push
fdivrp
fdivl
jp
push
jo
addl
mov
adc
sub
pop
ja
and
sbb
rol
icebp
add
mov
dec
out
xchg
inc
shll
adc
lahf
call
jne
scas
mov
push
aas
add
add
repnz
jmp
in
push
stos
cltd
xchg
xor
mov
xchg
xchg
dec
pusha
mov
enter
xchg
or
add
aad
xchg
in
cmc
xchg
cmp
int
fwait
jp
daa
xchg
out
imul
aas
xchg
sbb
cmp
sub
cld
xchg
mov
incb
mov
loope
or
cld
xchg
mov
adcl
cmpsb
xchg
sub
xor
xchg
decl
ds
push
stos
call
mov
mov
xchg
enter
adc
rolb
lods
add
test
fidivl
cmp
enter
shl
nop
mov
dec
ja
jnp
nop
repnz
ds
pop
sbb
inc
popf
test
popf
adc
xchg
leave
mov
mov
inc
add
push
clc
or
xorb
mov
enter
shrl
mov
mov
or
mov
inc
sbb
pop
insb
pop
xchg
pop
jno
popf
push
inc
imul
pusha
cmp
test
mov
pusha
add
ds
or
ja
lea
addr16
or
sbb
data16
mov
js
lock
cmpsl
lahf
pop
cmc
mov
cs
xchg
xchg
lods
lret
pop
lds
xlat
xchg
sub
or
repz
cltd
and
xor
aad
or
int
clc
ds
pop
in
mov
ljmp
roll
popf
adc
push
cwtl
mov
xchg
push
xor
lahf
sbbb
or
pop
xchg
nop
sbb
jns
pop
or
pop
pop
mov
int3
test
test
adc
cmp
hlt
pop
pushf
push
call
sbb
leave
cs
repz
fldz
fidivrl
adc
sbb
mov
mov
xchg
test
fldenv
or
lods
jb
xor
lret
mov
pop
rolb
push
cmp
push
adc
pop
fldl
or
adc
mov
fmul
jecxz
mov
mov
enter
inc
mov
addr16
aas
mov
xchg
movsb
rclb
mov
add
bound
test
or
xchg
adc
jmp
sub
dec
mov
mul
loopne
je
fstpt
mov
add
push
inc
mov
mov
test
push
pop
hlt
pop
jl
js
mov
xchg
sub
addr16
pop
cld
mov
jmp
adc
push
xchg
adc
jne
jb
xchg
ficoms
fnstcw
mov
fs
xchg
fldt
test
xchg
call
fwait
add
jge
ret
iret
xchg
pusha
lcall
in
popa
pop
and
mov
sbb
out
jl
and
inc
or
xchg
dec
add
inc
hlt
aam
xor
jmp
cwtl
dec
add
or
xchg
jo
repz
or
pusha
stos
sbb
test
add
mov
push
mov
imul
popf
rcrl
mov
mov
mov
mov
mov
sbb
xor
mov
pop
nop
mov
cmovb
mov
lret
xchg
jge
es
add
loopne
movsl
pop
call
push
aam
adc
push
or
mov
mov
adc
jecxz
cwtl
stos
pause
pop
xchg
mov
jb
fsubrl
cmpsb
sub
mov
mov
inc
mov
movsb
cmpsl
fsubl
rol
inc
iret
push
jge
pop
mov
mov
test
scas
sub
popf
enter
mov
jno
rolb
inc
add
add
imul
loopne
sbb
fcoml
movsl
andl
lcall
cmc
mov
idivb
mov
mov
xchg
int3
into
push
lds
decb
mov
rorb
stos
les
in
fwait
mov
mov
adc
jnp
mov
adc
dec
dec
insl
pop
ljmp
mov
mov
mov
dec
lret
push
aaa
mov
push
icebp
and
rclb
popl
sub
inc
fdivrl
rcrl
jnp
test
inc
sbb
adc
lods
js
into
data16
dec
mov
cwtl
mov
jmp
xor
or
les
pop
dec
xchg
ljmp
inc
fsubrp
fimuls
sahf
push
mov
into
inc
pop
xchg
sbb
add
lods
and
mov
sti
out
daa
les
or
adc
mov
inc
mov
push
out
shrl
lock
lret
in
xchg
test
stc
test
mov
fisubrl
jl
pop
stc
fstpt
andl
mov
inc
fsubrp
sub
rcr
jmp
inc
mov
rcl
cmpsl
scas
fs
fnstsw
jle
jl
jns
xchg
mov
pop
loopne
test
imul
ficompl
out
jae
sarb
and
mov
testl
outsb
cs
outsl
pop
xchg
pop
stos
jae
and
pusha
and
mov
xor
add
inc
mov
addr16
add
pushf
call
nop
adc
cmc
es
lds
outsb
pop
rcrb
ror
fcmovbe
sbbb
mov
das
loopne
mov
mov
shll
sbb
fadd
aas
fldenv
ss
loop
js
insb
dec
jnp
lods
je
mov
or
loopne
mov
mov
out
add
in
adc
mov
insb
lret
in
test
les
cmp
pop
jo
fisubrs
push
adc
bnd
test
adc
jg
inc
push
lea
pushf
jbe
ror
cmpl
je
fcmovnu
mov
rol
out
mov
push
inc
and
push
out
ljmp
cld
mov
std
xchg
or
lret
test
pop
mov
pop
sbb
add
inc
ja
push
insl
mov
std
adc
loopne
xchg
xlat
rorl
cwtl
call
inc
aas
push
inc
int
cltd
ds
hlt
jecxz
fimuls
xlat
xlat
add
mov
xor
push
stos
nop
test
mov
iret
movsl
mov
leave
xor
push
lret
in
sub
jae
jle
dec
xchg
pop
orl
cmc
into
dec
adc
push
dec
into
lods
imul
jnp
sbb
add
int
cld
mov
mov
cmpsl
out
test
dec
neg
mov
push
or
scas
mov
out
popf
int3
fadds
data16
int
push
mov
pushf
movsl
cltd
mov
add
jl
outsl
inc
mov
ds
int3
into
rorb
inc
add
sbb
test
clc
and
movsl
stos
pop
insb
ffreep
mov
mov
mov
out
and
fmull
aad
ljmp
aas
jmp
xchg
aam
sarb
imul
movsl
adc
push
insb
xlat
nop
les
int
movsb
xchg
imul
mov
mov
es
stos
inc
jns
sbb
lock
adc
cmp
and
push
sub
lods
iret
jp
stos
in
inc
mov
rorb
dec
nop
mov
in
and
sarb
cld
out
fnstsw
call
in
ret
ret
in
add
mov
das
ret
das
mov
add
cmc
or
cmp
mov
lock
inc
push
jmp
rolb
jno
jl
sub
push
sbb
stc
inc
out
bound
test
scas
xchg
decl
ja
sub
test
mov
js
inc
pushf
hlt
imul
into
lea
addl
mov
fldt
cmpsb
push
and
or
clc
mov
adc
xchg
push
add
adc
iret
sub
inc
push
xchg
cmp
iret
xchg
mov
sarb
mov
aaa
push
xchg
pop
sub
mov
pop
add
add
mov
loope
mov
inc
jns
pop
mov
mov
imul
outsl
and
jb
nop
mov
sbb
jle
fdiv
xor
mov
mov
dec
push
inc
push
xlat
stos
push
add
mov
scas
test
mov
or
repz
insb
xchg
test
call
xchg
cld
or
pop
js
bnd
mov
mov
jbe
xchg
test
test
adc
xchg
sarb
mov
jl
jno
inc
int3
push
or
jge
sbb
mov
and
movsl
jbe
shr
mov
enter
mov
xchg
es
mov
daa
or
jae
test
xchg
fisubrl
fbstp
inc
aam
loopne
scas
call
xor
or
xchg
jg
or
ret
xchg
dec
movsb
dec
enter
xchg
adc
lock
dec
mov
mov
dec
add
shrb
mov
add
mov
repz
mov
add
push
mov
subl
shl
mov
shrb
movsl
mov
aad
or
ret
gs
mov
fsubs
mov
test
adc
push
outsb
xor
test
nop
mov
aas
and
xor
pusha
cltd
mov
mov
shlb
xchg
mov
cmp
xchg
jno
push
lds
mov
push
adc
add
mov
mov
nop
add
jl
xor
int3
cmpsb
or
rclb
sbbl
xor
ret
mov
test
lahf
push
orl
dec
mov
dec
enter
in
popf
je
jno
mov
push
shl
inc
stos
or
ljmp
pop
orw
popl
push
in
pop
push
mov
and
or
test
add
pop
sahf
or
sarb
in
nop
inc
lea
xchg
cmc
xchg
lods
mov
mov
xchg
stos
mov
test
xchg
fnsave
xchg
xchg
in
enter
enter
enter
enter
enter
mov
mov
xchg
xchg
mov
mov
and
xor
pop
push
push
aas
dec
inc
into
cmp
cmp
push
lahf
and
call
add
int3
push
push
scas
sar
mov
xchg
or
lret
shrb
cmc
add
jae
out
or
mov
dec
cmp
test
mov
movsb
lcall
cwtl
fsubrs
xorb
add
fstpt
cli
aad
sti
mov
sti
jb
in
mov
mov
cltd
test
loopne
jne
xchg
dec
mov
sub
insb
pusha
sub
lret
xchg
das
in
sub
aas
aam
rol
mov
xor
xchg
cli
push
cld
fcmovb
je
notb
ror
and
dec
fimuls
xor
test
or
mov
cmp
xchg
cmc
mov
push
cmp
xor
xchg
ret
div
pop
sbb
push
rcrl
mov
push
shlb
dec
fiadds
dec
gs
data16
and
pushf
sub
imull
xchg
decl
insb
test
jge
or
xchg
popa
jmp
data16
push
fisttpl
xor
movsb
shll
out
mov
mov
mov
in
pushf
sarb
cld
jb
test
pushf
cmp
dec
cmp
enter
adc
cmpsl
rorl
out
test
adc
call
arpl
sub
and
sti
inc
test
scas
pop
jp
and
aaa
adc
add
mov
and
sarl
lret
fcompl
dec
sahf
dec
test
cwtl
sbbl
stos
add
pop
cmp
out
sub
push
mov
data16
or
movsl
insb
push
pushf
or
push
int
jo
frstor
jnp
fstl
aas
dec
mov
nop
jle
pop
pop
adcb
xchg
inc
jo
mov
mov
lds
pop
shl
pop
or
mov
data16
sub
adc
test
jle
jno
push
std
mov
xchg
mov
xor
jl
nop
mov
mov
push
xlat
fsubr
call
add
and
add
imul
mov
clc
mov
xor
pop
or
fcomps
scas
cwtl
inc
stos
inc
fwait
adc
xchg
nop
nop
stos
push
sbb
dec
dec
inc
repnz
or
jecxz
jb
cmp
sbb
cmpsl
test
add
mov
imul
add
adc
add
and
mov
lret
movsl
dec
xchg
ja
and
xchg
or
je
push
repnz
outsl
xor
lcall
shll
mov
adc
jo
xbegin
xchg
or
clc
pop
mov
mov
ljmp
xlat
lock
mov
jge
movsl
int3
outsb
add
cmp
test
inc
xlat
ja
xor
mov
test
adc
xchg
or
shrb
in
lods
inc
in
lods
aad
or
push
lea
aaa
fnstcw
out
icebp
ljmp
xchg
or
mov
enter
aas
or
icebp
pop
imul
add
lods
lret
mov
adc
call
insb
outsl
and
sbb
push
enter
jp
enter
dec
stos
pop
push
nop
pop
push
jo
fs
rorl
push
and
push
push
xchg
fbld
fldt
stos
pusha
mov
push
inc
mov
rolb
xor
into
lahf
or
cltd
dec
test
ror
nop
cld
outsl
ss
cmpsl
je
fsubs
sarl
subl
repnz
mov
scas
nop
xor
or
pushf
cmc
or
test
xchg
jns
pusha
rorl
adc
in
add
aam
add
inc
hlt
lds
lock
cli
add
ret
rcrb
popf
or
push
sbb
frstor
push
push
movsl
filds
dec
push
xchg
fcmovnu
movsb
jb
lret
lods
sbb
pop
xchg
mov
stc
push
lock
into
mov
rol
fmulp
das
repnz
loope
rcl
mov
enter
fadds
fsub
pop
jge
andl
push
jo
xor
test
pop
cmp
pop
or
pop
pusha
ror
mov
test
mov
push
sbb
movsb
mov
xchg
or
les
dec
outsb
shll
push
dec
lods
push
pop
add
movsb
xchg
mov
test
ret
imull
ret
mov
aas
xchg
decb
or
fcomi
and
cmp
add
ds
xchg
jg
add
cwtl
hlt
out
dec
in
xchg
lods
sbb
divl
aad
lcall
jecxz
inc
stos
mov
rclb
push
ljmp
mov
or
int
cwtl
push
mov
cmc
xchg
ret
shlb
add
pop
call
pop
jbe
push
fldenv
xchg
xchg
xor
jge
hlt
mov
jnp
xchg
jnp
cli
stos
jge
dec
or
out
stos
xorl
add
mov
or
cmpsb
pushf
pop
icebp
pop
pop
mov
push
push
into
hlt
ficoms
jecxz
mov
xchg
jle
adcb
pop
push
in
sbb
jp
dec
aam
leave
jae
adc
and
or
xor
add
aas
bound
out
stos
or
mov
mov
sub
push
pop
fsubs
add
incb
scas
and
leave
scas
in
jnp
js
lods
inc
in
daa
mov
lock
cwtl
jne
addr16
pop
sub
jle
out
enter
leave
xor
pop
mov
je
inc
fadds
pusha
jl
dec
mov
xchg
pop
inc
lea
pop
cmp
cmp
jle
pop
mov
loopne
mov
decl
mov
mov
push
cmp
ret
ret
push
ret
mov
dec
jne
outsb
seto
loopne
loopne
push
inc
popa
pop
or
fdivs
push
outsl
or
jl
xor
insl
push
adc
push
mov
movsl
stc
inc
sub
std
mov
jae
mov
jmp
mov
enter
pop
lret
jo
fiaddl
and
pop
xchg
mov
adc
xor
lret
inc
nop
mov
adc
insl
lret
mov
enter
mov
in
cltd
sarl
adc
adc
xchg
mov
ss
push
push
loopne
or
mov
fcoms
mov
mov
push
call
clc
cld
fsubs
data16
shl
mov
scas
sbb
mov
shll
cmpsl
dec
addr16
in
aaa
mov
dec
add
loopne
sub
out
enter
cwtl
pop
push
mov
ret
xlat
mov
cmc
hlt
jge
les
pop
adc
rol
andl
aam
fiadds
dec
lcall
data16
in
jecxz
cmpb
addl
ds
push
rcr
cli
push
jnp
add
inc
lock
jo
std
dec
jbe
lock
xorb
fdivs
in
sub
bnd
rorb
cwtl
or
cmp
repnz
adc
shlb
cwtl
cmc
test
push
imul
popf
into
gs
dec
testl
shll
push
mov
and
mov
push
dec
call
push
scas
sub
fwait
setl
mov
lods
testl
fistps
add
fs
lods
xchg
enter
rolb
insb
sbb
pushf
xchg
mov
adc
insb
mov
pop
xchg
leave
hlt
sub
subl
loopne
add
test
cmp
lret
xchg
and
cmpsl
std
mov
call
cli
and
sarb
xchg
in
out
loop
ficoml
mov
inc
xchg
mov
xchg
sbb
mov
add
cld
xchg
and
imull
mov
movsb
call
add
xchg
cmp
xchg
push
cmp
outsl
or
imul
cld
pushf
lcall
call
fldenv
outsl
cltd
mov
push
mov
mov
imul
or
jge
pop
fwait
cmpsl
imul
mov
out
out
shr
shlb
daa
decl
sarl
int
mov
int3
stos
push
scas
js
cld
cmpb
pushw
adc
xchg
imul
cmp
fldcw
movsb
xlat
jbe
movsb
mov
in
sbb
mov
and
add
lods
push
xchg
imul
cmp
scas
and
xor
add
push
mov
fs
push
pop
jo
repnz
imul
xchg
out
jge
xchg
rcrb
or
mov
or
test
jle
jae
int3
mov
and
mov
shl
fcmovb
enter
add
or
xchg
mov
popa
and
push
fdivrl
pop
xchg
adc
or
push
lods
push
xor
push
adc
into
icebp
mov
flds
loope
call
dec
fdivr
mov
cmp
imul
mov
mov
cld
mov
dec
cli
fadds
push
call
jecxz
jp
xor
das
lock
adc
mov
std
subb
shrb
aad
xor
and
mov
imul
or
jecxz
cs
push
pop
movsb
jge
sahf
in
test
je
push
pop
pushf
fs
pushf
push
or
test
adc
inc
add
mov
test
dec
testb
aad
add
mov
loop
jge
xchg
or
jne
mov
enter
cmp
stc
mov
sbb
and
rol
xchg
push
aam
cwtl
mov
sahf
or
dec
push
push
add
adc
xor
jl
stos
imul
sahf
sub
xchg
lea
loop
push
mov
jae,pn
mov
pop
or
adc
adc
sub
repnz
mov
nop
mov
loopne
cmpsl
imul
ret
ret
popa
sbb
jne
mov
pop
mov
lea
lock
ret
rolb
in
xchg
int
pop
outsl
test
test
xchg
loop
and
mov
xchg
leave
inc
bound
mov
adc
into
jl
jecxz
mov
push
or
mov
jmp
adc
or
cmp
mov
or
repz
pop
mov
bnd
icebp
dec
dec
es
push
sarb
cmp
repz
jae
adc
rcl
inc
push
or
aad
icebp
xchg
add
imul
mov
hlt
hlt
hlt
dec
in
mov
add
jge
xlat
call
mov
jbe
sbb
std
rcll
ljmp
cmpsb
into
daa
xchg
xchg
or
scas
cmpl
ret
enter
xchg
sub
pop
mov
jo
imul
test
mov
and
dec
fiadds
adc
movsl
inc
insb
xor
stos
test
outsb
rcrb
lea
mov
aad
adc
ljmp
cwtl
add
mov
xor
mov
lret
loope
dec
mov
stos
xchg
repnz
aaa
sbb
imul
ficoml
inc
jle
daa
push
add
mov
push
fsubs
inc
enter
mov
hlt
and
pop
xor
push
in
mov
mov
inc
les
sbb
jae
loopne
mov
out
push
mov
loopne
dec
cmc
mov
test
mov
dec
push
nop
fnstenv
int
jb
aam
push
adc
pop
addb
xor
stc
or
jp
pushf
pop
or
xchg
mov
mov
dec
lea
add
cmpsb
icebp
inc
xchg
jle
mov
push
inc
mov
lock
dec
push
xor
lock
aaa
mov
or
jns
xchg
mov
push
notb
push
jns
adc
stc
cmp
push
jno
xchg
cmpsl
mul
rorb
shlb
xor
xor
inc
jne
sti
mov
iret
push
mov
push
aad
sahf
je
xor
or
and
and
push
push
lods
cmc
xor
add
sbb
sbb
fbstp
pop
xchg
cmp
push
mov
ja
sti
fidivrl
lret
xchg
jle
out
mov
les
clc
mov
mov
dec
inc
loop
pop
and
jae
int3
stos
les
push
ja
add
xchg
test
xchg
ret
adc
mov
mov
sbbb
mov
xchg
or
cltd
out
loop
xchg
insl
negl
test
adc
xchg
inc
subl
cld
mov
adc
xor
addl
or
cmp
sbb
ret
nop
push
add
nop
nop
subb
into
in
wrmsr
nop
pop
jmp
jmp
xor
shl
jns
mov
mov
addb
jmp
les
mov
in
push
nop
and
insb
imul
push
js
out
and
imulb
mov
mov
jb
imul
jno
lock
mov
je
xchg
aam
enter
testb
cwtl
or
inc
cmc
gs
jae
xchg
add
push
decb
jne
mov
das
or
imul
jo
sahf
fmull
or
jno
mov
jmp
fdivr
sub
outsl
ret
adc
fistpl
mov
push
stos
and
mov
enter
cltd
mov
mov
stos
xchg
les
mov
push
adc
xchg
jmp
or
aaa
mov
imul
and
mov
stos
sbb
nop
imul
mov
dec
das
fld
sbb
mov
loope
xchg
fcompl
iret
jae
pop
stc
sar
popf
lods
fstpl
push
into
cwtl
stos
pop
movsl
pop
popf
fisubl
cmc
cltd
xlat
in
lock
loop
push
adc
pop
jmp
rclb
mov
mov
cmc
mov
icebp
jbe
lcall
pop
jns
cmc
xchg
xlat
stos
arpl
movsl
call
push
movsl
cmpsl
mov
lock
push
pop
out
jbe
lret
js
je
mov
inc
inc
mov
call
fwait
shll
aaa
adc
data16
fwait
adc
xchg
pusha
rolb
fmul
jnp
es
mov
or
add
xchg
push
mov
dec
cwtl
leave
jmp
shlb
lock
xor
adcl
inc
sahf
mov
cmpsl
adc
xor
mov
fistl
flds
sub
adc
xor
lret
adc
mov
ret
cmp
imul
aam
rcrb
dec
cmpsb
cmp
xchg
stos
jecxz
mov
rcr
rcrb
cmp
mov
mov
in
shl
jbe
cltd
cwtl
movsb
inc
fsubr
adc
repz
dec
les
ror
into
stos
add
fstpt
rorl
add
notb
or
add
sub
xchg
sub
pop
shl
push
mov
fadds
dec
inc
repz
inc
mov
sahf
xor
popf
ja
cmc
jno
lock
into
fcoml
out
inc
subl
ds
xchg
xorb
pop
and
xchg
xchg
adc
cmp
cwtl
orl
mov
test
rolb
xchg
insb
push
lock
xorl
mov
dec
sub
push
loopne
pusha
arpl
xchg
or
sti
jg
xlat
push
add
add
call
leave
roll
fnstcw
mov
cli
ja
inc
and
jg
xor
dec
fucom
push
iret
hlt
xchg
cmc
addb
jne
out
push
js
pop
lret
das
test
imul
and
dec
test
lret
movsb
leave
xchg
call
push
and
mov
subb
add
xchg
jg
cmp
out
ss
mov
and
dec
lahf
mov
jge
addb
mov
xchg
or
loope
xlat
mov
sub
les
sbb
dec
or
mov
sub
add
cmovnp
mov
mov
mov
mov
out
pop
hlt
cltd
mov
lods
mov
pop
push
dec
adcb
jae
mov
std
cmpsl
call
out
jg
loop
scas
inc
sbb
les
adc
lds
test
or
enter
cmpsl
push
and
leave
push
outsb
int3
mov
loope
into
loopne
addr16
out
call
outsb
pop
ror
xchg
in
or
xchg
add
jle
enter
call
jmp
sub
and
fdivrl
mov
roll
pushf
in
in
lods
out
aad
out
pop
div
pusha
jmp
stc
pop
sti
xchg
test
ret
mov
jns
add
xor
or
lds
dec
cs
das
pop
jns
inc
lcall
inc
fistpl
ret
rcll
xchg
loopne
jge
ret
jbe
out
and
inc
hlt
sahf
test
dec
imul
push
movq
enter
xlat
push
sub
or
loop
stos
repz
fsts
jle
sbb
mov
mov
fimuls
aad
lds
xchg
jae
in
or
inc
popa
mov
hlt
mov
lcall
clc
mov
cmc
xchg
dec
push
movsl
scas
mov
pop
test
mov
orb
lods
out
shlb
push
fstl
daa
push
js
subl
mov
fnstenv
inc
pop
ret
imull
movsl
movsl
add
or
ret
scas
dec
pop
adc
imul
pushf
call
mov
xchg
aaa
add
mov
mov
into
xor
jmp
leave
pop
and
stos
push
pop
sbb
in
cmp
xchg
stos
lret
push
add
mov
ja
xchg
add
in
ja
push
mov
mov
aam
inc
lcall
jge
in
cmp
in
out
enter
lsl
fidivrs
rolb
push
in
pusha
mov
dec
jno
push
sbb
rcrl
fists
adc
stos
jp
mov
fucomp
sub
test
aam
std
sbb
test
out
js
fs
jmp
mov
popa
xor
pop
xorl
and
xor
cltd
dec
xchg
or
enter
int3
test
rolb
xchg
mov
add
jmp
nop
cmp
or
call
fs
xchg
cmp
mov
cmp
push
fcoml
xor
xchg
pop
outsb
mov
cmc
mov
inc
jp
inc
push
sbb
xchg
sub
shlb
fdivl
test
mov
inc
mov
mov
in
insl
xor
mov
test
mov
mov
pusha
cmpsb
aaa
jmp
loopne
cmp
lret
dec
or
push
push
xchg
sbb
nop
pop
pusha
xchg
imul
inc
xor
inc
mov
lods
xor
inc
add
scas
sub
pop
imul
or
sbbb
loopne
lret
ficomps
cmp
add
lock
cli
xchg
inc
test
push
adc
orl
scas
add
mov
mov
sbb
subl
imul
nop
sub
inc
cmovno
mov
and
movsl
jg
xor
cmpsb
mov
mov
or
or
out
fmulp
jle
outsb
dec
cmp
add
inc
cmc
mov
imul
sub
jle
jp
dec
pop
cmp
out
pop
imul
rorb
dec
ficoml
mov
mov
hlt
cmp
aad
pop
dec
flds
adc
jp
adc
push
imul
and
aam
xchg
mov
sahf
nop
je
lret
cmp
mov
ret
xor
shl
rcll
jns
cmp
mov
mov
stc
clc
sbbl
cmp
sarb
das
test
loopne
cmp
loop
cld
adc
loop
fdivp
inc
pop
shr
mov
cmc
xchg
js
in
shll
testl
mov
in
dec
pushf
inc
push
sahf
mov
dec
mov
test
nop
and
pop
mov
mov
mov
pop
pushf
mov
cmp
test
xor
or
nop
sti
lcall
ret
es
ret
inc
inc
sbb
mov
repz
xlat
jp
test
mov
or
imul
inc
mov
lret
iret
cmp
mov
mov
push
enter
cmc
xchg
iret
fisubl
test
div
push
xchg
xchg
push
mov
sbb
int3
in
xchg
or
test
pushf
shrb
pop
ss
movsl
cwtl
aam
pusha
insb
popa
mov
cmp
and
jg
jge
add
jg
mov
sar
xchg
add
and
xchg
push
jae
inc
or
lret
ljmp
push
mov
outsb
out
cmp
lock
aam
cwtl
cmp
adc
out
push
sub
pop
mov
cmpsl
lods
movsl
shrb
pop
mov
out
push
push
inc
cwtl
fistps
movsb
adc
test
mov
dec
ret
jge
shll
daa
out
popa
jno
push
pop
xchg
movsl
les
mov
jb
lret
stos
cmp
cld
rcl
ror
into
rol
in
rcl
aad
cmc
mov
fdivs
jge
jmp
int
sbb
insb
xchg
aas
call
sahf
mov
push
sbbb
inc
loope
ffreep
cmp
xor
int
lret
filds
cmp
jne
sub
add
jae
xchg
dec
sbbl
push
into
or
xchg
xor
test
cmc
dec
pusha
outsb
mov
enter
std
subl
negl
push
jmp
test
or
adc
movsb
decb
mov
xor
xor
fcom
xchg
movsl
pop
inc
aaa
mov
xchg
push
inc
cwtl
dec
mov
cli
jbe
push
inc
addb
pop
aaa
pushf
fadd
addr16
addr16
outsb
pop
mov
test
adc
xor
xchg
hlt
outsb
dec
mov
aad
dec
shl
test
fsubs
mov
inc
sarb
pop
flds
pop
lahf
dec
inc
xchg
push
mov
lret
rorb
xchg
test
les
jle
sub
sti
jnp
sbb
sarb
add
mov
mov
in
push
or
adc
and
push
inc
mov
mov
mov
push
xchg
and
mov
lret
add
and
sub
shlb
int3
int3
inc
mov
jmp
sbb
nop
inc
mov
xor
mov
mov
cmc
xchg
push
jle
rcrl
mov
pop
inc
icebp
les
jg
or
shl
outsb
rorb
push
xchg
jle
movsb
and
and
ja
cmp
enter
les
fidivrl
xor
dec
or
xchg
in
insb
inc
mov
lea
mov
insl
imul
ficomps
inc
aaa
mov
mov
testb
pushf
mov
xor
jo
imulb
jne
jmp
ja
pop
idivb
imul
mov
test
push
xor
fbld
call
or
popa
shll
gs
mov
je
shlb
or
push
fidivs
mov
mov
push
imul
and
test
test
jns
dec
cmp
repz
mov
sub
imul
add
fistl
dec
jb
rclb
add
xchg
adc
add
cmpsb
aam
insl
jle
in
sahf
xchg
and
ret
lahf
scas
into
mov
cmp
mov
data16
lcall
fxch
in
cltd
rcl
xchg
adc
xlat
cld
arpl
mov
rcl
xlat
sub
movsb
imul
fs
or
mov
sbb
adc
rorb
nop
rcl
or
test
inc
rcl
in
out
enter
ret
add
fsubl
fwait
jmp
push
sbb
hlt
adc
movsb
pop
lods
repnz
and
mov
shrl
es
pop
mov
ja
jb
xchg
add
lcall
aas
xchg
lret
clc
test
jle
mov
lret
imul
mov
dec
jl
push
test
mov
test
out
mov
lods
dec
dec
aam
xor
mov
fsub
or
nop
call
test
and
sub
jg
push
aaa
sti
jno
dec
shlb
mov
mov
jae
cltd
rcl
imul
enter
xchg
cmp
add
js
fcoml
lret
and
xchg
xchg
aam
dec
fcoml
test
sahf
and
dec
into
push
nop
jmp
das
sub
push
lahf
jge
mov
iret
add
inc
jle
mov
hlt
aas
mov
mov
jb
outsb
aaa
mov
push
or
cmp
pop
shrl
repz
sbb
add
inc
rolb
pop
rorl
ret
adc
call
push
push
mov
cmc
out
or
and
lock
ss
call
fdivs
adc
adc
ror
mov
int3
push
aam
jae
xchg
js
dec
sbb
xor
mov
or
fsubrl
in
or
test
and
rcrl
in
mov
js
dec
pop
or
fsubrl
sti
shl
inc
aam
ret
jns
test
fimull
lds
out
mov
test
xchg
mov
imul
int
xor
pop
shll
mov
xlat
mov
fisttpll
jbe
inc
cmp
insl
mov
insb
cmp
scas
xchg
dec
lret
sub
dec
fmull
out
jo
jge
inc
std
xor
aam
jg
cld
aam
aas
lds
or
hlt
or
cmc
sti
pop
adc
imul
add
outsb
test
cmp
loopne
ljmp
mov
in
and
mov
imul
add
xlat
cmp
into
imul
ds
xor
shll
push
nop
lds
push
jecxz
hlt
mov
cmp
scas
ljmp
jns
and
cmp
push
xor
test
fiaddl
xor
add
jg
mov
aad
and
jnp
sarb
add
pop
cs
pushf
or
push
add
cmp
adc
imul
rcrl
nop
or
leave
sub
cmp
and
pushf
push
mov
xchg
mov
xor
decl
popl
nop
hlt
andl
lods
jg
push
scas
mov
push
cli
fistpll
mov
mov
icebp
mov
bound
mov
arpl
inc
popf
ljmp
loopne
dec
and
stos
pop
mov
fidivl
incb
loopne
jae
int3
repnz
xor
add
sub
loop
lcall
push
adc
push
in
movsl
or
cwtl
sar
push
adcl
jo
add
popa
mov
lea
stos
aam
or
std
and
scas
test
mov
mov
frstor
sarl
or
lods
mov
faddl
and
add
jae
aas
mov
ret
xor
and
inc
xchg
mov
mov
inc
adc
mov
dec
cmp
ret
mov
inc
nop
rcl
push
movsb
inc
jge
int3
xor
orl
sub
mov
pushf
mov
cmp
les
into
dec
pushf
aaa
arpl
js
subl
push
sbb
ja
bt
test
ss
int3
push
test
xor
outsl
hlt
repnz
cmp
mov
imull
jne
pop
fcoml
out
test
es
or
cltd
mov
mov
movsl
or
xchg
sub
add
lods
std
lods
push
lea
or
inc
out
scas
scas
mov
cs
fidivrs
js
xchg
mov
cmp
clc
sbb
jp
inc
mov
xlat
adc
xchg
test
rcrl
lods
test
pop
repnz
nop
addl
mov
mov
aam
test
add
loope
lcall
inc
dec
or
add
std
xchg
adc
or
cmp
ret
clc
push
sub
rcll
pop
mov
push
sub
add
adc
dec
into
movsb
mov
cmpsl
mov
inc
mov
add
sahf
xchg
add
or
mov
jmp
or
or
sub
adc
or
and
push
scas
mov
lock
push
pop
adc
mov
push
add
hlt
mov
fwait
inc
mov
in
jbe
call
lock
lock
dec
mov
or
mov
mov
cmpsb
mov
or
mov
and
inc
xor
call
or
pushf
ret
sbb
lahf
nop
sbb
add
jne
sub
lds
jmp
sub
int
jns
inc
adc
or
adcb
and
mov
and
mov
adc
mov
nop
jmp
dec
inc
inc
push
filds
idiv
push
sub
rolb
xlat
inc
sub
lret
lock
pop
movsb
mov
adc
lea
aad
xchg
js
pop
test
dec
add
imul
xchg
or
adc
or
adc
adc
bound
mov
mov
lods
mov
aad
ret
int3
rorl
or
xor
ror
jbe
push
stc
rorl
and
rcll
ja
js
in
or
inc
mov
mov
fld1
jno
dec
lahf
push
repnz
mov
jp
add
mov
cmc
fsubp
popa
sub
jle
jp
lret
mov
dec
iret
gs
mov
cld
icebp
pop
xchg
mov
in
fists
and
rcrl
std
lret
faddl
mov
rcl
push
jmp
test
jns
dec
cld
xor
cmp
mov
mov
or
xchg
mov
xchg
aaa
mov
xlat
pushf
test
jbe
imul
cmp
inc
cwtl
mov
outsb
fadd
adc
inc
xchg
pushf
push
mov
jo
call
add
int3
aad
lret
mov
push
or
mov
inc
pusha
cmpb
adc
push
lret
aad
xchg
lods
or
in
mov
hlt
cmc
repz
leave
jge
and
mov
or
adc
adc
pop
mov
shlb
adc
sub
sbb
pop
enter
pop
sbb
gs
leave
push
adc
push
lods
xchg
inc
das
push
push
jle
out
or
push
test
nop
test
cmp
mov
push
jmp
js
or
push
mov
ret
or
andl
adc
sub
jg
les
mov
mov
addl
xor
stc
rclb
dec
pusha
imul
add
movl
cmp
movsb
psubb
mov
iret
in
lock
adc
jmp
ret
test
jbe
aas
outsb
mov
dec
push
or
sbb
test
jg
mov
sub
data16
int3
andb
pop
pop
adc
sbb
hlt
rolb
push
int
jns
stos
pusha
fisttps
mov
ljmp
mov
xor
or
sbb
mov
jae
fisubl
addl
and
mov
inc
adc
outsl
mov
jo
lock
lea
popf
test
pop
inc
xchg
pop
inc
push
scas
push
adc
fcmovbe
mov
movsb
shll
or
or
xchg
push
into
xchg
inc
sahf
lahf
addr16
mov
mov
cmp
add
mov
inc
adcb
mov
orb
jg
adc
ret
loop
cwtl
inc
sbb
add
fdivs
jo
js
push
push
fdivl
addb
cmpsb
fnsave
pop
dec
push
xor
add
lret
inc
adcl
fmuls
test
fnstsw
bound
test
ss
movl
addr16
daa
test
xor
mov
ret
gs
movsb
cmc
pop
cmp
test
test
xor
mov
mov
pusha
rol
mov
xor
add
cmp
xchg
sbb
js
neg
jp
pop
dec
imul
xchg
mov
imul
mov
jns
and
sub
cmc
xchg
mov
jle
cmpl
loope
xor
xchg
loopne
lds
out
data16
jmp
jge
push
loop
push
bound
xor
mov
xlat
es
in
add
xor
std
and
add
mov
jg
dec
pusha
in
inc
mov
dec
test
mov
or
mov
sbb
jne
insb
or
ja
pop
mov
push
sbb
pop
and
mov
cwtl
les
fistpll
mov
fisttps
andl
ficomps
lret
clc
dec
add
fstl
xlat
loope
xchg
add
jbe
mov
mov
cmpsb
rcll
and
push
pop
xchg
fdivrl
mov
mov
jbe
pop
and
xchg
cld
scas
test
or
fdivrl
jl
sarb
dec
adc
dec
cmpsb
mov
xchg
dec
push
sbb
rcrb
cs
pop
mov
push
pop
mov
cwtl
add
mov
imul
or
xchg
or
gs
and
lds
imul
mov
insl
mov
lcall
enter
push
fldl
call
shl
dec
pushf
in
js
test
out
push
adc
frstor
lret
js
test
pusha
faddp
in
xchg
mov
mov
add
sarb
cmp
sub
mov
xor
pop
pop
shll
fists
testb
xchg
jns
ja
adc
or
add
or
jb
pop
push
ja
jmp
inc
mov
cs
adc
mov
jecxz
sbb
jecxz
add
push
outsl
insl
push
push
or
push
dec
mov
xor
or
mov
loop
rol
lods
pop
testl
jns
xor
pop
adc
and
push
movsb
mov
sti
adc
xor
inc
inc
clc
rcl
push
jb
shlb
mov
jno
sbb
inc
cld
lds
mov
stos
dec
jno
mov
xchg
cld
xchg
leave
ror
push
dec
or
stos
pop
pop
leave
mov
adcl
jle
leave
aad
int
adc
rolb
jns
rcl
push
ljmp
push
in
and
sbb
xor
sbb
mov
scas
xchg
pop
test
pop
repnz
incb
pushf
inc
push
sahf
rcl
shrb
xor
faddl
push
lods
jo
push
pop
xor
fnclex
leave
test
add
rclb
popa
test
mov
inc
lods
addr16
add
xor
xchg
pop
jg
inc
mov
test
sbb
mov
aas
imul
dec
imul
mov
sar
jns
adc
dec
pop
mov
js
sarb
sti
aad
mov
je
cltd
jmp
cmpsl
sub
fsubs
fwait
and
or
pusha
daa
xchg
fwait
inc
sti
push
mov
xchg
push
xchg
orl
jecxz
lea
lds
jno
sub
mov
sbb
pop
xchg
mov
inc
inc
fs
iret
daa
nop
xchg
or
or
add
mov
cmp
call
xchg
sub
adc
xchg
mov
js
imul
outsb
dec
jb
pop
dec
loope
adc
sarl
mov
ror
mov
dec
nop
inc
lds
lret
adc
sarl
aas
movsl
inc
pop
and
add
sbb
mov
mov
inc
lock
in
mov
sbb
popa
imul
or
aas
jb
lahf
aas
sub
insl
rol
mov
or
andl
movsb
lahf
shrb
pop
sti
mov
inc
imul
mov
cmp
hlt
mov
push
int
test
imul
cli
xor
add
jge
mov
jl
pop
jl
inc
aas
jle
loop
mov
push
test
sub
jle
fs
adc
lahf
add
test
adc
nop
scas
sub
sti
jl
movsl
adcl
sub
test
push
aam
lea
rcll
xchg
fwait
leave
mov
mov
test
cwtl
add
fmul
fbld
sbb
inc
movsb
mov
in
pop
out
add
lret
subb
jbe
test
jnp
xor
dec
or
or
cltd
and
sahf
cmc
jae
test
int3
rcl
xchg
push
lret
outsb
nop
pop
fcoms
lahf
xchg
and
cmp
adc
imul
sbb
dec
cmp
jbe
in
push
jle
cmp
mov
enter
in
xchg
lods
aam
fldz
mov
xlat
enter
pop
xlat
add
ja
inc
fnstenv
int3
xor
lds
fcmovbe
loope
fcom
ljmp
xlat
push
daa
cmc
xor
stc
pop
test
iret
test
fnsetpm(287
pushf
sahf
lods
mov
sub
sbb
hlt
mov
mov
mov
fbstp
adc
mov
mov
rolb
clc
fwait
jbe
cltd
leave
cli
sbb
jmp
jl
mov
lock
test
flds
push
pusha
and
xor
sub
mov
dec
popf
loop
movsb
out
pop
mov
lcall
or
push
mov
aad
pop
adc
inc
jns
cmc
sahf
add
jnp
mov
sbb
scas
and
int
mov
and
jle
das
jle
mov
aam
adc
or
mov
arpl
mov
into
mov
xchg
iret
sahf
ss
xchg
lahf
mov
jne
jae
test
lret
rolb
adc
fidivl
subl
xchg
xor
push
and
int3
mov
test
rcrb
popf
adc
arpl
ret
test
or
adc
outsb
mov
int3
loopne
imul
mov
inc
push
imul
int
call
pushf
aad
inc
into
test
mov
mov
sbbl
push
push
cmp
ja
cmc
jns
jno
incl
mov
test
jle
dec
cmp
insl
xchg
cmpsl
pop
pop
pop
mov
inc
pushl
xchg
imulb
push
inc
push
pusha
ja
fdiv
sbbb
pusha
addb
cmp
cmpsb
arpl
iret
imulb
sarb
xlat
cmc
mov
push
pop
add
push
hlt
ret
dec
pop
cmp
incl
mov
mov
xor
xchg
push
out
and
sbb
jmp
rclb
fcomip
out
repnz
jge
imul
dec
fcmovne
inc
fmull
adc
in
lds
mov
lret
mov
jns
mov
loopne
and
out
aas
cwtl
mov
ret
xchg
sarb
xlat
andb
test
adc
pop
into
or
outsb
mov
jg
test
xchg
xchg
dec
sti
cwtl
xchg
divb
out
imul
xor
shrl
int3
lret
xor
out
jmp
mov
outsb
fidivl
jle
xor
and
test
imul
pop
push
stos
enter
pushf
movsl
pop
std
cmpsb
loope
sbb
jmp
jle
adc
int3
mov
enter
lds
sub
add
push
int3
pop
xchg
sbb
lds
mov
dec
xlat
test
imul
inc
or
in
mov
repnz
movsb
adc
jle
lock
mov
xlat
fbstp
leave
jno
ds
push
pop
cltd
mov
stos
xchg
jnp
loop
jnp
leave
xchg
lea
inc
mov
mov
imul
xlat
pop
dec
mov
fsqrt
enter
jns
enter
nop
mov
lret
mov
jge
push
jo
prefetch
fbld
ret
mov
dec
mov
imul
shrb
nop
stos
push
lret
in
or
test
mov
and
or
jle
rclb
js
or
lahf
out
into
push
mov
cmpsb
mov
mov
dec
cmp
inc
cltd
test
cmp
or
sub
push
data16
pop
or
loopne
shll
js
adc
add
push
sbb
sbbl
rcl
sub
in
mov
sub
jl
xor
jmp
xchg
call
adc
push
ja
mov
mov
push
xchg
xchg
xchg
rorb
fxch
mov
xchg
mov
adc
push
jo
lods
outsl
call
cmp
test
push
sbb
or
rcr
mov
push
out
or
or
repnz
mov
fdivl
cmpsb
ret
fs
or
aad
xlat
sbb
mov
mov
fildll
int
pushf
lds
scas
or
out
mov
data16
mov
mov
ds
in
int3
mov
pop
cmp
push
and
push
fbld
or
jns
cmp
addr16
scas
push
frstor
and
mov
outsl
sbb
sbb
clc
ja
xor
add
aad
add
push
adc
sbb
sbbl
sahf
into
lods
cmp
push
mov
ret
incl
push
cwtl
mov
fbld
mov
cmp
pop
cmp
push
rol
shll
leave
aad
incl
xchg
test
ret
cwtl
rclb
adc
adc
fistl
imul
mov
gs
sub
push
mov
xchg
rcrl
push
stos
xchg
dec
movsl
in
push
leave
ret
jecxz
out
pop
call
imul
shl
add
xor
rcrb
add
and
or
loope
call
in
lock
mov
fidivrs
nop
mov
les
mov
add
loopne
lock
sub
in
mov
push
mov
sub
adc
mov
fcomi
pop
repnz
or
xlat
xchg
jle
mov
std
xchg
jmp
mov
lods
mov
pushf
shlb
mov
xchg
sbb
lret
mov
sar
rclb
ror
out
rcl
bnd
pop
sti
test
add
jl
mov
fcomi
and
push
rcl
and
orl
inc
iret
mov
rcrb
iret
mov
mov
ljmp
inc
cld
sub
mov
into
mov
iret
ja
lahf
fmul
cmpsl
mull
push
lods
lods
fcoml
xchg
xchg
ficomps
int3
adc
jge
dec
mov
xchg
xor
mov
rclb
shrl
dec
leave
lcall
push
cwtl
loope
xchg
pop
lret
stos
lock
in
mov
js
repnz
repnz
mov
call
out
and
test
dec
and
xchg
outsl
cmc
mov
mov
pop
js
jns
stos
ja
xlat
dec
iret
lods
lahf
jecxz
mov
movsb
ror
aam
enter
pop
push
mov
iret
test
scas
add
add
jge
hlt
xchg
mov
test
fsubrl
mov
add
xchg
sarl
aas
mov
rorl
enter
lret
push
scas
mov
push
outsb
or
pushf
sub
inc
incb
jb
lea
inc
in
xchg
loop
push
fldt
pop
shll
cmp
add
mov
cmc
adc
inc
stos
test
pop
push
cltd
rorl
loope
rclb
aad
push
add
mov
xchg
mov
pop
adc
and
mov
movsb
mov
jno
or
cmp
or
ljmp
ljmp
cmpsb
xchg
xchg
mov
aas
lar
cli
jmp
jo
mov
lods
std
mov
cmpsb
inc
rol
cmp
add
ljmp
mov
inc
loopne
int
inc
hlt
xchg
mov
cmp
mov
xchg
mov
fiadds
nop
xlat
jae
rol
add
fldl
jnp
cmc
ja
jne
mov
mov
mov
sti
fs
nop
sub
or
out
pop
and
adc
lds
mov
leave
jae
mov
popf
into
jg
cmc
test
xor
xor
inc
xchg
cmpsl
inc
or
shl
gs
movsl
jnp
push
mov
or
mov
aad
add
or
jecxz
sub
ret
rolb
scas
nop
fisubrl
jno
mov
lock
dec
loopne
jge
xchg
or
stc
mov
add
lea
push
cs
sbb
ja
xor
or
and
daa
jb
and
repnz
fists
jp
adc
sarb
loop
cmpsb
push
or
mov
and
inc
sahf
pop
mov
dec
sub
mov
loope
popl
mov
or
or
pop
jge
add
nop
add
scas
cmc
test
int
mov
push
fistl
test
jg
pop
imul
mov
or
push
mov
test
mov
out
adc
test
cmc
les
mov
cmpl
lods
jns
fmul
adc
lock
vpcmpeqd
mov
jns
nop
test
xchg
outsl
in
in
mov
sbbl
mov
xor
sbb
icebp
cwtl
test
pop
mov
or
mov
stc
dec
jp
cs
add
lret
flds
add
lds
jo
jns
push
popf
and
jecxz
or
frstor
dec
stc
popf
xchg
jne
sub
sub
mov
cmp
cs
lret
lcall
mov
dec
mov
mov
test
jno
pop
sub
cmpsb
jl
mov
adc
into
sub
add
jp
es
mov
shlb
stos
xor
push
call
stos
pusha
test
cmc
loop
pop
orb
jg
std
outsl
adc
repnz
mov
popa
test
mov
rorl
test
test
inc
ljmp
mov
mov
pslld
cmc
mov
int
out
fs
mov
xor
adc
bound
sub
cmovl
inc
inc
mov
insb
arpl
fildll
xchg
xchg
rcl
out
inc
or
shl
mov
push
imul
aad
fidivrs
fmuls
lahf
mov
jne
push
push
sub
inc
js
xor
and
clc
sub
fildl
cmpsb
mov
js
jle
decl
mov
pop
mov
int
xchg
repnz
lret
xchg
iret
cmp
xchg
loop
push
outsb
dec
xchg
mov
mov
xchg
pop
xor
push
clc
ret
xchg
fstpt
pushf
in
add
sub
mov
nop
test
cmp
xchg
and
mov
pop
lcall
daa
mov
sub
stos
mov
cld
adc
jecxz
add
jmp
sbb
cmc
xchg
pushf
daa
lcall
mov
inc
fdivs
xor
test
rcll
sub
movsb
or
xchg
roll
push
fnsave
orb
xchg
mov
inc
insb
jle
mov
loopne
sbb
sbb
push
or
mov
js
in
movsb
mov
shl
es
add
hlt
out
push
repnz
push
cwtl
inc
jl
mov
addr16
mov
xchg
inc
inc
adc
mov
aad
mov
inc
mov
inc
xchg
or
rcr
cmp
jp
sub
stos
mov
cmp
jno
rcll
xchg
es
or
sbb
xchg
aam
mov
push
cmp
js
pop
je
hlt
pop
fists
mov
sbb
fildll
inc
lret
or
js
aam
sub
mov
ret
mov
inc
stc
outsb
pop
cmc
cmp
sar
or
movsl
pop
jnp
popa
sub
cmc
or
xchg
mov
iret
subl
pushf
loopne
mov
xchg
gs
mov
iret
jg
sar
adc
jb
les
or
lret
fisttps
inc
pop
cli
and
jo,pn
mov
sarb
xchg
dec
cmpl
or
cmp
mov
aad
test
rcrb
dec
adc
movsl
mov
xchg
stos
xchg
dec
or
push
imul
add
cmp
dec
popl
cs
sub
jo
mov
inc
mov
inc
daa
lret
test
add
xchg
push
jge
lahf
dec
call
lret
inc
cmp
jno
mov
nop
or
clc
jmp
test
cwtl
lods
mov
mov
sub
adcb
cmp
jle
pop
insb
orl
sahf
mov
lahf
push
push
out
or
mov
mov
sbb
nop
mov
je
faddp
lahf
push
pop
sub
sub
ret
and
loope
dec
jp
adc
xchg
ret
jmp
dec
pop
cwtl
testl
shll
lock
arpl
mov
sub
pushl
inc
xlat
jae
mov
xor
in
lods
lret
hlt
rcl
mov
popw
stos
push
mov
mov
leave
clc
mov
insb
dec
mov
out
dec
mov
outsl
or
test
mov
int3
inc
mov
dec
ljmp
cmp
xchg
xlat
loop
mov
aad
inc
aaa
and
sbb
xor
ja
adc
jae
push
ret
sbb
dec
mov
cmp
aaa
faddp
cli
push
gs
pushf
jbe
inc
push
lret
jae
pop
xchg
lock
jb
dec
push
shrb
outsl
push
ret
fstpl
jo
loop
cltd
push
scas
xchg
jnp
xchg
adc
inc
pushf
lret
pushf
pop
push
jle
xchg
fldl
xor
adc
and
jne
lods
cmp
mov
cmp
cmpsl
std
sub
ja
mov
leave
sbb
lcall
jae
std
ret
pop
pop
lock
xchg
jns
sub
jmp
fldcw
mov
movsb
push
add
pop
inc
aam
ss
dec
int3
leave
jg
repz
mov
sbb
pop
lahf
or
dec
lea
pushf
inc
movsl
mov
inc
daa
nop
adc
clc
loop
mov
xchg
or
cltd
push
push
mov
add
mov
pop
pop
jno
adc
stos
jnp
mov
in
dec
ret
rclb
mov
lret
data16
jnp
xor
inc
mov
mov
xchg
stos
ja
pop
lock
cmp
jae,pt
xor
loope
dec
mov
fstp
enterw
push
fldcw
xchg
test
mov
xchg
pop
and
call
add
stos
jo
aam
or
mov
xor
inc
or
and
in
xchg
in
fdivrl
pop
mov
mov
jg
add
push
add
cmp
add
xlat
or
out
mov
popl
cs
xor
mov
addl
lea
inc
xchg
mov
mov
xchg
in
xor
sub
inc
pop
ret
mov
and
fcmovnb
or
mov
iret
sti
pop
mov
or
and
mov
pushf
scas
add
movsb
add
shll
loopne
sub
out
cli
pop
cmpsl
outsb
stc
js
aaa
mov
int
rolb
dec
mov
inc
inc
outsl
jl
test
cmp
out
mov
jae
push
inc
mov
cltd
stos
sub
sub
adc
fsubl
pop
jge
sbb
fiadds
or
inc
test
xchg
jg
jne
xchg
push
test
out
inc
ds
ja
or
sbb
fildl
and
aas
mov
ja
insl
cwtl
dec
cwtl
cltd
pushf
xchg
nop
add
lods
aas
add
add
and
enter
stos
push
mov
push
push
fcompl
adc
sub
movl
mov
or
hlt
stos
ret
inc
jb
push
mov
test
dec
or
imul
pusha
nop
out
out
sbb
inc
repnz
dec
push
jg
and
jne
mov
adc
mov
or
es
push
cmp
inc
or
imul
jo
std
movsl
stos
out
push
or
and
pop
inc
dec
and
jbe
jb
and
pop
dec
add
int3
inc
xchg
or
mov
cmpsb
addl
inc
test
nop
sarb
mov
jnp
jle
leave
cmc
cmpsb
or
jle
dec
aaa
sub
push
mov
xchg
lock
fsub
shlb
mov
mov
call
xchg
mov
mov
sbb
gs
jae
ficoml
es
mov
xchg
inc
jg
movsl
outsb
ljmp
inc
js
div
rol
mov
fldl
lods
test
add
shl
lcall
xchg
test
std
inc
loop
gs
inc
loopne
addl
ret
andl
or
in
daa
into
stos
push
test
xlat
imul
inc
jmp
and
jmp
cmc
or
fstpt
lods
adc
icebp
pop
shl
mov
rolb
jge
into
mov
dec
xchg
inc
dec
dec
data16
lds
or
mov
lds
or
js
test
repz
psrlw
pushf
jns
or
adc
or
mov
scas
mov
jp
shlb
pop
mov
pushf
add
xchg
adc
push
mov
stc
out
xchg
ss
or
xchg
push
mov
in
nop
dec
movsb
xchg
mov
popl
dec
cmp
push
neg
cld
and
rcll
icebp
xchg
push
add
aas
dec
int3
inc
insb
nop
pop
incb
daa
mov
test
mov
dec
fidivs
rcll
aad
mov
sub
add
lret
push
inc
aad
adc
clc
adc
xor
lods
and
jno
add
sbbl
btr
fsubl
loopne
bound
pop
pop
xchg
or
in
sub
and
lea
mov
scas
cld
xlat
pushf
sub
mov
adc
sub
pop
push
push
addb
sbb
cmp
and
xlat
in
orb
cmpl
aas
int
enter
sub
pop
pop
pop
and
rolb
mov
mov
adc
mov
and
push
inc
or
loopne
and
and
xchg
loopne
jo
or
mov
ret
lret
fildll
sub
or
outsb
stos
pop
and
push
cmp
jbe
inc
mov
aad
insb
dec
xchg
shlb
shrb
mov
mov
xchg
enter
rolb
push
inc
pop
js
and
mov
xchg
hlt
cltd
cmp
lret
and
jno
leave
xor
int3
addr16
rolb
fdiv
hlt
in
test
or
adc
mov
jb
jle
pop
pushf
cmc
movsb
in
enter
ret
and
sub
mov
xchg
add
call
xchg
sbb
adc
sbb
cmp
and
or
mov
test
fldt
fidivl
xchg
test
xchg
mov
rcl
xor
sub
or
fimuls
mov
fstl
je
imul
enter
ds
lret
sub
mov
push
pop
repnz
nop
mov
outsb
bound
pop
popf
mov
repz
iret
mov
fmull
in
nop
xchg
xor
lcall
movsl
sbb
xor
push
jl
or
and
inc
push
jo
into
rorb
and
stos
adc
ret
int
pusha
aaa
rcl
arpl
mov
inc
push
lret
cmpsl
daa
sub
shrl
clc
aam
fwait
mov
nop
cmp
mov
sub
dec
mov
movsb
mov
or
nop
rorb
fimuls
and
rcl
lahf
aad
imul
mov
adcb
mov
int3
mov
fcoms
call
or
add
inc
add
roll
rcll
rcl
push
pop
mov
sub
mov
fwait
test
fcmove
ja
cld
test
stos
mov
mov
jns
xchg
xchg
imul
mov
test
xchg
adc
in
rolb
sbb
pop
dec
add
data16
mov
push
aas
xor
in
pop
or
shll
stc
push
dec
inc
mov
jbe
adc
cmpsb
pop
rol
stc
popf
pop
into
out
insb
addr16
mov
inc
stos
inc
inc
js
xor
xlat
xor
and
xchg
pop
jbe
or
push
and
ljmp
mov
jmp
out
inc
popa
rorb
fwait
inc
fisttpll
mov
int3
mov
push
cmp
push
add
cwtl
push
stos
mov
ja
es
cmp
insb
mov
xchg
mov
adc
add
xchg
pop
jg
cmp
into
cwtl
mov
push
clc
fmuls
mov
aas
dec
push
mov
test
incb
adc
ljmp
adc
outsl
sub
int
in
test
cmpsl
mov
adc
pop
inc
xchg
sahf
mov
aam
fsub
faddl
add
fisubl
fwait
cmc
orl
clc
imul
pop
rol
mov
pushf
sub
cmc
movsl
hlt
mov
cmc
lahf
movsb
mov
out
jl
loopne
inc
and
inc
movsb
cmc
nop
test
fadds
scas
push
loop
mov
adc
xor
repnz
mov
push
mov
inc
pop
stc
pop
sub
adc
mov
inc
mov
test
data16
popf
loopne
inc
out
push
out
out
xlat
loope
fcoml
rolb
pushf
mov
jno
rclb
sarb
lods
mov
cmpsb
add
subb
or
test
lds
inc
jae
push
in
fs
fsubrl
or
fxch
hlt
test
push
and
ljmp
test
xchg
xchg
xor
or
ljmp
xchg
stos
call
imul
sbb
andb
xchg
cmp
nop
or
jo
xchg
lret
or
jnp
mov
ds
lds
jnp
dec
sub
push
xchg
cld
ret
sbb
mov
mov
les
xchg
lret
cmp
add
loop
add
enter
mov
xor
jns
mov
fcmovbe
arpl
ror
in
cwtl
sti
push
repz
push
or
xor
jbe
xor
rclb
rorb
sarl
push
dec
inc
xchg
shr
adc
scas
cli
or
dec
in
xor
test
adc
dec
mov
xchg
mov
mov
scas
je
or
cmpl
ljmp
imul
xchg
mov
into
add
fwait
adc
push
sub
movsb
mov
adc
sub
mov
sub
xchg
test
mov
lahf
fisttps
or
sahf
std
outsl
mov
push
movsl
mov
push
mov
pop
cmc
fbstp
xchg
add
dec
and
test
inc
movsb
divl
iret
test
pop
lds
mov
pop
xchg
push
or
test
das
mov
orl
or
xchg
in
in
mov
dec
pushf
add
pop
jns
hlt
in
xor
jo
inc
nop
push
cmp
mov
xlat
push
and
dec
cs
bswap
xlat
scas
jecxz
xchg
xor
lcall
adc
cmpl
movsb
clc
push
popa
test
xchg
add
pop
or
jmp
repz
adc
fisttps
and
in
mov
sahf
int3
adc
or
mov
add
out
pop
lret
sbb
test
cmp
int
or
nop
mov
int3
mov
lahf
repnz
and
add
incl
xchg
int
imul
adc
testb
xor
les
xchg
sbb
push
lods
inc
hlt
mov
add
pop
mov
add
xchg
in
lods
cmc
cmpsl
std
mov
push
and
lods
mov
rcrb
or
mov
leave
mov
mov
fs
add
sahf
mov
add
mov
or
add
push
xchg
add
clc
dec
xchg
fildll
fimull
mov
ficomps
icebp
mov
rclb
enter
jle
pusha
xor
adc
inc
xlat
cmc
roll
lea
stos
inc
mov
mov
fisttps
test
sbb
scas
imul
xorl
stos
pop
lock
pop
mov
les
mov
movsl
fildll
hlt
mov
xchg
dec
shll
add
add
xchg
ja
mov
mov
inc
loope
aad
mov
mov
rorb
fadd
enter
dec
cmc
jl
inc
das
xlat
ss
push
pushf
or
xchg
test
mov
scas
frstor
xchg
jp
ret
sbb
test
mov
filds
inc
mov
packssdw
jge
insb
lds
fcmovnbe
hlt
lods
mov
xchg
faddl
jecxz
pop
cs
vcvtsi2sdl
add
sti
mov
pop
into
imul
test
inc
push
aam
test
xchg
mulb
push
lods
sub
out
sarb
cltd
mov
lods
stos
test
add
aaa
or
push
aad
and
lcall
or
cli
cmc
scas
fsubl
loope
xchg
test
fwait
out
xor
xchg
xor
in
mov
inc
cmp
push
xchg
fistl
mov
loopne
or
xchg
in
hlt
in
lods
notl
out
cld
rcrb
rorb
pop
leave
orl
cld
mov
dec
dec
lcall
je
sbb
pop
test
xchg
push
aas
xchg
jne
mov
and
lret
int3
fcom
in
mov
xchg
push
xor
push
sbb
dec
mov
mov
movsb
add
cmp
lret
add
mov
mov
mov
enter
cmp
sarb
aad
fwait
dec
movsl
add
push
or
add
xor
mov
aaa
mov
mov
mov
push
cmc
mov
ja
or
roll
pop
fsubrl
movsb
shl
test
lods
aaa
or
mov
stos
hlt
mov
add
aam
inc
mov
shrb
jl
test
push
add
popl
sub
loope
mov
cmp
inc
mov
fsubrl
pop
mov
add
pushf
jle
pop
in
in
ss
dec
mov
cmc
scas
xlat
out
push
loopne
sarl
ljmp
ja
aad
mov
mov
sbb
add
aam
push
fidivrs
pop
pop
dec
cmp
loopne
addl
jne
mov
xchg
add
negl
mov
lock
xor
fdivl
shrb
cld
incb
pop
fs
lret
push
sub
ret
cmp
or
push
fbstp
xchg
gs
xchg
cmc
movsb
inc
adcl
orb
pop
jb
jecxz
aam
and
js
cmc
fwait
shrb
aam
push
mov
mov
js
mov
cwtl
rorl
add
add
xchg
xchg
loopne
or
or
sahf
insl
mov
cmp
mov
int3
popf
xor
popa
cld
add
call
push
cmp
cwtl
cmc
sti
adc
popa
shr
jecxz
and
adc
mov
notb
or
xor
mov
shrb
sahf
jle
out
or
aas
mov
cmp
or
inc
movsl
jo
aaa
mov
hlt
xchg
add
fstps
inc
xchg
mov
cli
adc
push
js
cmpsl
xchg
subb
mov
mov
mov
or
in
fistl
and
mov
jae
inc
mov
cltd
mov
adc
xchg
mov
mov
subb
fcom
call
sub
leave
lds
mov
mov
mov
andl
int3
xchg
test
and
cmp
mov
mov
sub
adc
dec
aam
lock
pushf
jecxz
scas
xorl
lret
or
mov
xchg
mov
cmpsl
rcl
mov
ficoms
and
rcll
xchg
mov
ljmp
sti
sbb
lret
movsb
push
hlt
loope
fcompp
mov
or
in
mov
or
rorl
in
xchg
xchg
notl
movsl
jbe
cmp
stos
dec
movsb
adc
mov
lcall
imul
mov
pop
mov
shl
add
adc
outsb
and
or
push
cmp
lret
jae
movsl
popf
cld
movsb
xchg
and
and
inc
cwtl
and
add
popf
xchg
pop
aas
adc
test
lret
cmc
mov
fisttpll
int3
in
aaa
fiadds
xor
inc
ja
xchg
pop
lods
inc
andl
pop
xchg
fsub
jnp
add
test
inc
addb
or
shl
mov
daa
cli
and
cwtl
jmp
push
cmp
mov
lret
and
pushf
subl
push
pop
cwtl
fidivs
negl
daa
push
iret
pop
mov
ret
scas
ss
adc
scas
push
add
push
ret
jae
or
cld
mov
movsl
ror
rcll
mov
jb
out
push
and
aad
xchg
dec
mov
pop
push
jge
cmp
jl
mov
jne
ret
test
aaa
push
fisubrs
mov
push
and
cmc
outsb
insl
mov
rorb
daa
popl
add
xor
test
mov
stos
push
push
adc
mov
in
popa
pop
and
push
fdivl
mov
lahf
add
push
into
scas
mov
aam
clc
jno
or
scas
sbb
sbb
sub
sbb
rcrl
pop
aad
call
cltd
aam
mov
les
test
cld
leave
test
jmp
das
fstl
imull
mov
aas
push
ljmp
stos
shl
pushf
sbb
into
lret
mov
or
mov
jg
mov
stos
dec
push
lahf
sbb
in
repnz
xor
push
mov
out
int3
inc
out
jno
add
push
in
in
xchg
adc
lret
aam
xor
pop
xchg
mov
cmpsl
int3
clc
or
popa
xchg
in
inc
imul
popa
sbb
mov
mov
xchg
pushf
aas
dec
stos
add
inc
addb
dec
push
sbb
outsb
testb
xchg
cld
mov
jo
cwtl
pop
pop
sub
ljmp
out
lret
popa
mov
sbb
mov
inc
cli
nop
cld
dec
dec
mov
js
add
mov
mov
dec
push
mov
mov
fnstcw
dec
stos
push
out
add
xchg
fs
xchg
mov
mov
cmp
test
pop
in
rorl
cmp
xchg
cmp
or
mov
or
ss
sbb
js
rcl
jne
fadd
hlt
jns
scas
int
mov
pop
xlat
in
or
aaa
add
xor
test
add
pop
mov
mov
inc
add
fcmovnbe
inc
lahf
and
rcr
inc
inc
fwait
rclb
mov
int3
test
mov
fistpll
adc
add
xor
fsubp
cmp
xchg
mov
adc
cmpsl
sub
mov
testb
test
lods
sarl
sub
jne
adc
dec
jne
adc
push
ja
pop
in
cmpsl
xor
in
xchg
clc
popa
hlt
jmp
mov
pop
insb
es
call
inc
xchg
js
pop
icebp
jne
ret
inc
notb
pop
ja
aad
push
sti
ss
into
shrb
repnz
lock
xchg
jp
push
fisubrl
fcmovnu
sbb
insl
inc
lods
cltd
sarl
and
push
and
insb
ds
xlat
stos
cmp
push
push
pop
adc
das
jb
lods
pusha
loopne
push
test
add
std
shrb
jnp
or
stc
out
inc
mov
mov
lds
dec
jp
ja
mov
les
or
and
fiaddl
test
fsubrl
pop
jnp
pop
int3
test
les
jmp
sbb
andl
cmp
push
adc
adc
insb
sbb
test
mov
int3
out
add
inc
aas
movsl
ret
scas
aad
in
shlb
mov
or
mov
mov
jo
dec
mov
stos
and
push
mov
xchg
fnstsw
mov
subl
je
ljmp
roll
ret
js
loop
xchg
cmp
insl
out
jae
fisubrs
sarb
xchg
inc
ret
test
pusha
pushf
shr
mov
js
fists
nop
dec
call
aas
je
out
xor
in
bound
xchg
out
jbe
test
aad
pop
xchg
lahf
push
push
dec
loope
inc
push
rcl
call
ja
divb
dec
int
lock
sub
loope
loope
inc
stos
fistpl
jl
mov
sub
pop
loopne
sar
jns
dec
jg
mov
shl
add
sbb
pop
les
or
push
cmpb
lock
sarb
jge
test
pop
stos
mov
scas
imul
xor
iret
and
jne
loopne
dec
adc
cmp
xchg
jl
imul
adc
enter
scas
in
push
or
mov
mov
aam
rolb
push
jnp
jae
mov
int
push
in
retw
aad
push
push
shl
enter
int
stos
hlt
stos
push
cmpsb
cmc
insb
nop
mov
sbb
rolb
insl
rcl
int3
inc
bound
mov
xchg
push
pop
fstps
xchg
dec
fldenv
mov
mov
cmp
movsl
add
loopne
add
mov
inc
movsb
imul
adc
test
or
stos
xorb
push
fcompl
insl
out
xchg
mov
pop
sbbb
and
push
or
insl
push
insb
mov
xchg
lock
imul
lods
add
pusha
sbb
push
fistl
push
pop
jno
loopne
stos
mov
push
outsl
inc
pop
jnp
and
inc
cmp
loopne
sub
into
jle
pop
push
scas
rcrb
cmp
lahf
dec
ds
and
mov
jecxz
shlb
inc
push
shlb
sahf
lcall
inc
add
inc
test
movsl
vunpcklps
test
test
cmpsl
cmp
aad
add
rclb
mov
mov
add
push
or
jmp
lods
xor
cwtl
or
imul
popl
bound
shlb
jg
adc
inc
cmp
mov
inc
xchg
mov
adcb
mov
add
mov
aad
xor
ljmp
cld
mov
stos
ljmp
sbbb
lcall
dec
shl
imul
dec
fwait
test
sub
xchg
mov
cmp
push
mov
fldenv
sbb
arpl
cltd
movsb
xchg
xchg
mov
dec
or
das
cmpsl
loope
pop
ljmp
cmc
and
popf
enter
ret
shl
xchg
xor
adc
mov
add
cwtl
sti
and
sub
mov
xchg
xor
int3
in
mov
push
adc
cmc
lods
fisttpll
and
mov
data16
loopne
dec
adc
mov
dec
sahf
jo
pushf
dec
and
adc
ret
nop
testb
sub
adc
jmp
pause
xlat
icebp
adc
test
push
pushf
insl
mov
nop
je
lds
ret
cwtl
sbb
push
add
dec
mov
hlt
shrb
sti
and
into
xchg
sahf
stos
dec
leave
mov
or
movsb
and
cmp
hlt
jno
or
mov
shlb
or
inc
adc
pop
jp
lret
leave
push
testl
bound
xchg
nop
add
mov
xor
push
jmp
int
or
out
mov
dec
hlt
lcall
ficomps
ret
std
mov
adc
push
jle
rol
xor
and
sub
xor
xor
pop
mov
arpl
les
lcall
xor
push
jge
cld
insb
inc
rclb
or
adc
ss
cs
fadd
push
ret
arpl
fistpll
pop
pop
jno
lea
mov
push
lds
dec
test
sbb
cmp
movsb
inc
test
loopne
outsb
xchg
mov
sbb
aad
in
inc
into
jg
jns
movsl
pop
dec
cli
xchg
rclb
xchg
xor
mov
or
xchg
out
insl
push
les
lret
aad
cmpsb
call
xchg
ret
add
enter
mov
mulb
push
lcall
fsubr
xorl
incb
out
xchg
push
add
xchg
and
lods
fcomps
rolb
or
xlat
loope
fsubr
lea
cld
mov
mov
lods
pop
stos
pop
add
cmc
out
jmp
pushf
rolb
outsl
jmp
adc
ja
mov
mov
inc
push
jb
xchg
mov
fdivp
nop
movsl
in
or
popf
icebp
shrl
subl
adc
adc
cmp
inc
mov
out
adc
add
out
pop
lcall
or
fadds
rolb
dec
mov
inc
pop
adc
lahf
test
icebp
scas
or
mov
ror
pop
aam
sahf
shr
frstor
imul
jg
or
test
mov
movsl
cli
push
gs
xor
cwtl
mov
fstpt
adc
or
lds
fisttpll
xor
mov
loop
cwtl
xchg
rcll
int3
and
xchg
je
jmp
jmp
mov
mov
add
xor
bound
test
mov
pop
movsl
sahf
or
into
gs
adc
xchg
mov
loop
dec
fnsave
pop
mov
cmpsb
faddl
sub
sti
fimuls
dec
xchg
testl
push
fisubrl
ljmp
cmc
movl
xor
sahf
xlat
xchg
movsl
jg
adc
stos
sbb
xlat
mov
aam
push
ja
pop
jmp
pop
fs
ficomps
shll
in
pop
mov
add
xlat
shrb
out
push
loop
pop
sub
std
es
ret
mov
rcrl
rclb
sbb
repz
sbb
or
jle
jno
mov
jno
mov
jo
jnp
dec
xlat
je
out
xchg
sti
jg
or
movsl
adc
js
syscall
sub
das
aad
lret
push
sub
add
fs
sbb
nop
xchg
pop
cmp
scas
sub
push
mov
lahf
adcb
lcall
push
lahf
cwtl
mov
rcl
push
or
xlat
sub
inc
jo
imul
lret
nop
test
lret
mov
xchg
sarl
cmp
cwtl
movsb
push
insb
rorb
xchg
imul
ret
pop
mov
lds
jle
pushf
add
cmp
mov
ds
stos
pushf
mov
shlb
jbe
pop
inc
mov
aam
stc
in
cwtl
insb
pop
jmp
pop
sbb
js
push
aas
int
or
cmpsb
inc
mov
jp
test
mov
and
add
lock
adc
jmp
jp
push
pop
scas
test
or
cli
cmp
cmp
add
jns
add
arpl
iret
ja
mov
jbe
ret
lds
mov
cli
push
or
dec
fidivrl
movsl
pop
rorb
repnz
adc
dec
inc
enter
xchg
fimuls
mov
xchg
loopne
rorb
push
lcall
xchg
push
int
push
jno
mov
xchg
and
cmp
mov
shr
inc
fdivs
subb
movsb
push
pop
movsl
pop
jo
add
lds
mov
xor
pop
mov
adc
sahf
xchg
sbb
sub
mov
es
out
fcmovnb
fcompl
jg
jne
sbb
pop
mov
jnp
cmp
movsb
push
mov
test
ja
mov
mov
cmpsb
rcl
or
nop
mov
movb
lds
push
icebp
and
iret
popa
cmc
mov
fisubl
insb
mov
xchg
xchg
mov
xchg
sub
test
fsubr
dec
jecxz
jae
cmpsl
mov
std
loopne
inc
add
fisubs
xor
out
mov
xchg
pop
mov
fdivrl
sbbb
push
fisttpl
rclb
test
roll
inc
and
mov
adc
xchg
and
test
pop
test
nop
pushf
mov
push
test
xchg
ret
sbb
xchg
push
test
mov
test
fs
xor
sub
in
mov
mov
lea
sbb
sbb
enter
test
pushf
xchg
mov
or
jmp
xchg
pusha
push
ret
test
lea
subl
lods
dec
push
rolb
test
pop
mov
jecxz
add
adcl
lock
test
faddp
xchg
int
ret
test
mov
subl
add
jns
inc
lods
into
loopne
popa
or
movsl
mov
and
jno
mov
ret
mov
adc
push
scas
add
pop
dec
mov
scas
push
lods
push
lods
push
stos
push
stos
push
test
add
add
add
add
pop
test
pop
stos
lods
mov
mov
arpl
mov
mov
lods
push
xchg
inc
mov
mov
nop
shlb
push
sub
sub
fwait
xchg
push
push
cmpsb
jmp
or
xor
adc
rolb
inc
and
lcall
inc
fisubrs
fdiv
int
ret
mov
mov
or
inc
adc
adc
add
pop
or
enter
aam
nop
mov
xor
mov
push
test
pop
lds
adc
nop
pop
repnz
add
ljmp
out
test
sub
xchg
cltd
nop
mov
mov
xchg
jns
xchg
jo
push
mov
imul
clc
push
mov
adcl
xchg
xchg
stos
les
popa
adc
ret
adc
nop
push
mov
push
mov
fdivs
push
push
test
xor
mov
and
jbe
mov
adc
and
stos
pusha
pop
inc
call
cmp
cwtl
add
aas
jmp
cmp
scas
movsl
xor
xor
sub
clc
push
dec
inc
fwait
mov
add
into
hlt
mov
lds
cmpsl
popf
add
inc
or
addb
pop
rcrl
cli
sahf
add
mov
or
xchg
push
ficompl
cmp
add
or
jg
jno
outsl
mov
mov
inc
sahf
sbb
sub
imul
mov
rcrb
xchg
add
mov
mov
js
jbe
bound
call
cli
lret
aas
in
hlt
pop
fisubl
mov
cmp
push
or
jge
adc
inc
cltd
pop
xchg
insl
push
not
bound
xlat
jae
xchg
jmp
mov
rcrl
lret
mov
jne
pop
jp
or
shl
lahf
jle
add
ficoms
adc
nop
or
sbb
outsb
arpl
mov
cmp
inc
hlt
xchg
add
xchg
push
bound
pop
ret
imul
jp
test
mov
stos
xchg
jmp
cld
int3
fcmovb
leave
shr
or
xchg
les
xlat
les
sbb
fmull
sbbl
test
mov
imul
mov
lods
xchg
rorb
pop
or
in
mov
cmc
and
popa
shlb
les
adc
dec
shl
push
into
jge
mov
or
fists
push
out
xor
inc
ret
fistps
fstpt
mov
jo
push
inc
ljmp
ds
rol
mov
sbb
leave
push
scas
and
pop
fwait
push
fwait
xchg
cwtl
int
outsl
jecxz
fadds
dec
mov
shrb
stc
adc
out
dec
rclb
enter
sub
xor
lret
daa
jmp
or
js
invd
and
fsubl
inc
and
lods
jo
xchg
push
pop
roll
fsubr
mov
cmp
test
pop
orl
and
fs
mov
jbe
jne
jp
insb
mov
pop
adc
cmpl
loop
cld
jo
loopne
ljmp
xchg
hlt
mov
add
xchg
xlat
ljmp
add
mov
fcoml
stos
fwait
sbb
daa
in
push
dec
inc
fcoml
xor
and
fldl2t
pop
stos
push
lahf
in
test
stc
mov
sub
lock
cwtl
pusha
sbb
loop
das
nop
enter
sub
outsb
push
mov
mov
aaa
jle
push
xor
aas
in
adc
test
push
in
sbbb
fsubrs
cwtl
jge
jle
iret
sub
mov
lods
lret
int3
push
and
fstps
loopne
dec
mov
outsb
cmp
rcrb
mov
cmpsl
fdivrl
xchg
cmp
add
mov
mov
pop
inc
fcompl
mov
mov
cwtl
inc
or
mov
repnz
mov
lds
xorl
lcall
dec
outsl
gs
dec
push
jmp
out
jl
or
bound
dec
stc
aad
test
mov
dec
enter
xchg
mov
inc
decb
mov
imul
in
roll
cmc
negb
imul
not
aam
cmp
inc
mov
gs
jo
add
adc
jnp
std
in
movsb
test
fadds
imul
adc
lods
movsl
hlt
mov
pushf
mov
xchg
xor
add
xchg
mov
mov
repnz
push
fiadds
cmpsb
icebp
mov
iret
xchg
int3
call
inc
cmpl
ret
xchg
test
jl
push
jl
scas
fistl
shll
fxch
sbb
sbb
or
jecxz
pop
jmp
cmpsl
ret
push
out
rcrl
out
add
inc
ljmp
mov
pop
fiadds
mov
mov
insb
sbb
in
test
cmpps
dec
loopne
lock
repnz
test
test
mov
inc
movsl
add
push
lods
incb
xor
mov
enterw
pop
sbb
imull
mov
push
rcr
mov
fs
dec
test
pushf
mov
nop
repnz
imulb
ret
and
sub
mov
lahf
or
cwtl
pop
or
std
cmp
xchg
pop
xchg
mov
mov
mov
mov
push
lret
mov
movsl
imul
mov
frstor
fmul
aaa
sbb
dec
loopne
push
cmp
jne
nop
dec
dec
mov
add
hlt
xchg
jo
orl
jp
std
pop
inc
ja
and
fwait
jge
pop
ljmp
jns
sub
enter
not
scas
jecxz
imull
pop
xchg
xchg
jp
mov
test
xchg
push
sub
out
je
jg
xlat
das
pop
lock
lcall
jp
bound
xchg
sti
mov
or
cltd
mov
ja
dec
mov
xchg
mov
call
or
or
cltd
in
outsb
mov
cmp
leave
lret
pop
mov
cmpsl
jmp
push
push
or
aaa
repz
pop
pushf
jb
out
mov
roll
dec
mov
xchg
ds
inc
cmp
mov
mov
outsb
bnd
mov
cld
gs
out
out
push
jo
inc
mov
je
push
dec
aam
fmuls
inc
sub
inc
pop
jno
cmp
fmul
pushf
mov
clc
addl
push
insb
dec
jno
sbb
mov
lret
pop
popa
xchg
fnstsw
push
push
push
cs
insl
push
sub
sub
dec
jae
loope
data16
fisubs
mov
sbbl
and
push
jno
outsb
cmp
movaps
mov
cwtl
sbbl
pop
leave
and
xorl
push
rclb
aam
xchg
mov
inc
cmpsl
fsubrl
test
rcr
out
jle
xchg
mov
push
cmp
xchg
movsl
std
xchg
push
jl
repz
push
decb
test
jp
ret
nop
inc
jns
jbe
inc
sub
not
mov
mov
or
sbb
iret
jle
inc
repz
js
and
pop
cmpsl
mov
in
xor
test
mov
xchg
dec
aam
mov
mov
test
movl
into
sbb
in
enter
orb
cmp
pusha
mov
lock
inc
loopne
jle
fcoml
imul
in
mov
movsl
inc
icebp
nop
imul
pop
jecxz
dec
rclb
jg
mov
xchg
mov
scas
mov
mov
dec
push
inc
inc
mov
xor
rcrb
push
icebp
leave
push
jbe
repz
hlt
addr16
ret
leave
or
or
hlt
xchg
adc
jbe
inc
add
fists
and
test
xlat
scas
sub
push
test
push
adc
aas
shrl
jnp
dec
xlat
cli
loopne
mov
mov
sti
subb
mov
mov
xchg
mov
inc
dec
sbb
fisubrs
hlt
mov
xor
pusha
in
insl
mov
imul
in
xlat
and
mov
mov
nop
xchg
andb
cmc
cli
cli
scas
stc
mov
pop
repz
mov
movl
mov
xchg
movsl
inc
xchg
cwtl
shrb
aaa
cmc
xchg
lret
push
and
fcomp
aad
mov
add
push
mov
mov
addr16
pop
adc
ja
sub
cltd
xchg
cmp
roll
lret
add
std
js
or
icebp
mov
pop
or
shll
dec
aas
pop
pushf
inc
roll
nop
ret
adc
push
cltd
lcall
inc
pop
jbe
xchg
faddl
push
scas
outsl
in
adc
push
ret
or
mov
mov
inc
pop
inc
sbb
lret
test
shrl
hlt
roll
pop
mov
scas
jg
addl
sub
dec
mov
push
cltd
cli
les
aad
xor
push
scas
and
mov
lea
roll
scas
mov
xlat
imulb
or
sub
mov
cwtl
shlb
popf
stos
insl
cmc
and
add
movsb
sub
cmp
lods
add
cmp
xchg
mov
adc
loope
lea
xlat
dec
lret
fcmovu
gs
push
leave
jl
mov
stos
scas
pushl
into
add
xchg
loopne
decb
add
fcomi
jmp
sub
xchg
jge
push
sbb
iret
ret
and
xor
in
int3
push
mov
fisubs
pop
imul
lret
or
jae
mov
and
test
stc
push
ret
jnp
js
jae
aas
or
push
cmpsl
jp
mov
or
mov
les
mov
lods
mov
sahf
cmpsb
jno
pushf
cwtl
and
pop
push
out
xchg
imul
stos
clc
pop
push
xchg
xor
mov
pop
nop
rcl
imul
int3
xchg
mov
mov
cmp
ficoms
hlt
or
in
sbb
adc
pusha
jnp
cwtl
mov
dec
lea
cmp
mov
stos
fwait
sbb
aad
rolb
cmc
mov
mov
xchg
pop
mov
cld
test
or
sub
pop
jno
cmpsl
fmull
mov
hlt
ret
jns
adc
and
adc
mov
cwtl
in
rorl
xchg
jmp
iret
in
mov
les
out
mov
jmp
inc
or
in
jge
mov
inc
cmp
xchg
xchg
adc
sbb
aam
cmp
pop
ror
insb
xor
mov
adc
add
mov
or
jmp
mov
sbb
flds
jle
cwtl
test
call
push
pop
insl
pusha
adc
and
xchg
pop
test
or
jnp
ja
iret
mov
xlat
pushf
push
push
fimull
rcll
pushf
in
xor
fwait
lret
push
mov
jmp
sahf
dec
adc
jb
cltd
lods
mov
in
xchg
dec
xor
push
shlb
movsb
cmc
mov
aaa
cwtl
scas
mov
stos
jp
movsl
in
pusha
stc
cld
dec
adc
adc
cs
pop
cld
es
repz
nop
aam
lahf
jb
jns
or
sahf
mov
xchg
addr16
rclb
test
xchg
sar
mov
mov
cmpsb
xchg
and
cmp
fsubrl
jmp
jmp
mov
and
cmpsl
jp
jo
sub
and
nop
gs
ficoms
movsl
adc
test
cmpsl
sti
rorb
les
sub
add
fucomi
cmp
dec
gs
xchg
into
xorl
ror
mov
cmp
cwtl
xorl
sub
sbb
repz
ret
sub
test
mov
dec
lock
or
pop
push
jae
mov
mov
test
xchg
xchg
jb
mov
jecxz
or
or
mov
les
inc
repnz
push
lea
mov
imul
cmp
test
add
js
sub
mov
push
pop
inc
xchg
lds
adc
pop
sub
pusha
or
push
dec
insb
inc
or
cli
cmp
push
rorb
inc
pushf
inc
mov
aam
mov
je
lods
jb
jno
xchg
arpl
cltd
mov
push
sarb
push
les
xchg
andl
push
shr
jbe
mov
mov
lcall
or
xchg
cmpsl
push
enter
sahf
in
fnstcw
outsb
test
lahf
mov
xchg
enter
inc
test
or
ds
add
daa
cld
movsb
call
mov
adc
xor
mov
hlt
mov
mov
jp
enter
cld
or
xchg
pop
lea
xchg
stc
shl
daa
xchg
mov
mov
outsl
daa
pop
xchg
or
in
sub
shlb
cmp
jno
call
fstl
movsl
xlat
xlat
add
icebp
mov
cmp
adc
xchg
mov
ljmp
add
icebp
lods
imul
ret
add
negl
ret
jns
shlb
xor
daa
and
xlat
aas
js
and
lret
sub
das
out
cmp
adc
lahf
push
sub
jno
xchg
mov
xchg
mov
push
mov
inc
cmp
add
push
data16
mov
xor
mov
ljmp
jge
fdivrs
pusha
loop
push
xchg
inc
jp
sub
sbb
out
dec
ficoml
mov
in
adcl
lcall
cmp
pop
sbb
mov
xor
mov
aas
sub
incb
shll
shrb
mov
jg
cmpsl
int3
hlt
inc
bound
mov
repnz
lret
pop
inc
push
jp
mov
or
out
jmp
js
loop
lahf
sub
enter
mov
add
adc
sbb
cltd
inc
ret
cmp
nop
jmp
or
pop
jmp
mov
sahf
shrb
int3
nop
xchg
dec
loopne
stc
lock
sbb
lea
adc
lret
xchg
loopne
xchg
ja
xor
cmpb
shll
fnstcw
flds
sbb
test
dec
mov
dec
xchg
js
dec
push
xchg
cld
xchg
enter
xchg
popf
xchg
movsb
push
es
lods
jge
push
xor
xlat
pop
ss
mov
mov
xchg
jno
fwait
mov
or
inc
add
out
mov
aad
mov
jecxz
int
adc
and
pushf
mov
adc
jne
xchg
push
mov
cli
call
dec
xchg
enter
sub
or
and
rolb
xor
mov
lods
cmpsb
add
es
pop
mov
pop
testb
add
fldt
pop
push
sub
push
dec
jo
xor
mov
rcl
xchg
popf
or
add
push
dec
cmovns
lds
leave
cli
int3
andb
movsl
dec
add
cltd
mov
enter
cwtl
adc
mov
jmp
mov
rcll
sub
push
adc
inc
and
lahf
dec
push
imul
add
clc
mov
rcll
jne
enter
je
popl
mov
or
cld
mov
dec
hlt
jge
jecxz
enter
addb
inc
imul
or
insb
mov
das
adc
cs
into
sub
xor
mov
ljmp
outsl
scas
or
sti
sub
adc
cwtl
dec
cmp
xor
pushf
jne
xchg
xchg
xchg
cmp
in
mov
mov
sbb
orl
jg
pop
aad
mov
jns
rcll
leave
lods
bound
aaa
cmp
sbb
dec
imul
or
aam
mov
lods
or
adc
shrl
imul
cmc
icebp
jb
cmc
fwait
jle
leave
add
insb
rcl
xchg
cmpsb
enter
and
pop
hlt
imul
orl
insl
dec
push
xchg
sbb
or
daa
das
xchg
xchg
hlt
or
pop
push
ds
mov
xchg
mov
or
test
mov
and
xor
lcall
and
mov
push
sbb
lods
int3
jmp
mov
jmp
lods
and
and
and
movsl
cmp
fsubl
rcrb
mov
scas
or
jge
xlat
call
push
mov
xchg
mov
pop
in
push
add
nop
ljmp
or
shrl
sti
ljmp
rclb
in
sbb
cltd
mov
or
or
xchg
push
mov
lret
insl
mov
jo
xchg
dec
dec
pop
xchg
pusha
in
dec
push
mov
aas
testb
and
movsl
or
lea
and
mov
popf
xchg
in
mov
rcll
in
and
sub
adc
sbb
shrb
movl
mov
loop
sbb
mov
pop
fnstcw
inc
xchg
clc
and
loopne
das
jbe
aad
cmpsl
mov
mov
xchg
in
add
fwait
mov
xchg
mov
inc
xchg
cmp
addl
mov
enter
rolb
pushf
cmpsb
or
insb
push
aas
orb
cld
decl
popa
mov
dec
dec
sti
sub
mov
pop
add
fs
imul
sub
cli
les
mov
scas
enter
push
jg
sub
aas
jo
pop
in
leave
jno
imul
push
call
mov
in
jle
nop
push
sbb
cmp
dec
adc
inc
xchg
xchg
clc
cmp
movsl
cmova
lds
outsb
push
sarb
mov
pushf
enter
add
fimull
mov
or
mov
ja
cmp
pop
jb
std
and
inc
test
aam
mov
jp
push
sub
int
fcmovne
push
cwtl
and
xchg
jg
insl
push
dec
xchg
stc
lods
aad
pop
push
int
adc
subb
add
ja
xor
mov
sub
push
and
lea
mov
or
scas
hlt
lret
test
in
into
adc
sbb
mov
pushf
mov
stos
inc
lret
dec
jmp
in
push
sub
aas
push
das
pop
frstor
stc
cmpl
jne
fsubrs
or
jns
adc
loop
lret
lods
mov
add
push
mov
mov
dec
push
std
mov
mov
js
fsts
xchg
xchg
outsl
enter
xchg
jno
push
movsl
mov
ror
xchg
add
jl
dec
aam
xchg
and
rolb
test
pop
enter
loop
test
iret
rclb
cmc
aad
push
ret
out
adc
pop
add
decb
and
jno
mov
jecxz
rcl
jg
add
xor
call
inc
mov
addr16
xchg
fs
nop
sbb
xchg
bound
into
and
ret
scas
xchg
add
mov
mov
mov
cmp
dec
or
inc
mov
pop
push
mov
mov
push
ds
mov
lods
mov
xorb
xor
imul
push
mov
std
jmp
ret
mov
xchg
mov
fistpll
push
mov
mov
fsubs
roll
mov
xchg
mov
repz
adc
mov
push
push
pop
mov
mov
mov
hlt
adc
inc
inc
dec
rolb
adc
imul
push
mov
adc
mov
nop
les
push
lds
ficoms
mov
add
mov
push
jecxz
out
stos
mov
rcl
rcrl
cmp
pop
and
test
jl
mov
mov
call
cs
adc
pop
std
lret
add
orb
rcrl
into
jg
cmpsl
adc
sbb
push
mov
mov
lds
push
outsb
xlat
mulb
fs
scas
cmpsl
mov
adc
aam
dec
pop
pop
cwtl
mov
sbb
xchg
hlt
mov
in
or
hlt
adc
leave
int3
lahf
cmp
dec
dec
les
stos
adc
mov
lahf
inc
out
loope
imul
mov
push
ljmp
push
xor
movsb
mov
pop
xchg
mov
adc
sub
fcoms
loope
mov
push
aam
inc
mov
stc
jo
or
les
pop
xchg
pop
cmpsb
ret
sub
enter
mov
jg
rcll
jl
test
inc
stos
call
inc
ret
lret
fdivs
push
out
aas
jecxz
loope
or
xchg
imul
pop
stos
mov
cmp
ror
pop
shrb
mov
nop
sub
push
fisttps
fucomp
and
loope
sub
mov
test
push
lds
lods
daa
push
cmp
cmpsl
mov
push
pop
fdivs
jnp
adc
jb
ret
jb
xchg
test
cmp
int3
sbb
aam
sbb
lods
add
rol
nop
ror
mov
sbb
push
fistps
roll
sbb
sub
push
sub
stos
pop
xor
fsts
mov
test
fcoms
rcrl
enter
mov
xor
enter
xor
shlb
in
and
gs
rorl
in
mov
pop
ljmp
fnstenv
push
enter
jnp
call
jns
sbb
dec
imul
in
mov
in
push
insl
pop
loopne
sbb
aas
mov
loope
pop
or
iret
stc
loop
nop
leave
lods
mov
and
mov
push
lret
mov
icebp
inc
pop
pop
rorl
imul
fchs
mov
mov
inc
popf
hlt
imul
pop
cmpsb
gs
test
cld
xchg
mov
je
int
stos
fidivl
mov
and
mov
fdivs
jmp
pop
je
pop
aam
sbb
mov
in
xchg
loopne
lds
loopne
cmpsl
push
pop
jno
lods
xlat
test
inc
push
jbe
into
jg
cltd
iretw
ljmp
test
shll
mov
add
push
hlt
fidivrs
xor
push
xor
loope
mov
cmpb
lcall
dec
push
pusha
test
nop
sub
push
dec
jbe
push
test
fwait
loop
cmc
xlat
fsub
lret
inc
shlb
enter
cld
push
in
in
xor
mov
cmc
mov
inc
sub
sar
leave
mov
jns
hlt
lret
rol
ret
int
incl
clc
xor
je
mov
mov
lods
or
xchg
rcl
adc
and
mov
or
cmpsl
cmc
rcl
sbb
fsubl
in
jl
mov
sbb
enter
mov
add
stc
dec
ss
enter
repz
test
enter
rorl
sub
mov
xor
adc
add
jl
in
mov
pop
ljmp
cltd
mov
jle
stos
insb
mov
cmpsb
mov
inc
loope
enter
inc
and
lcall
adc
push
ljmp
pop
adc
add
mov
fcmovnb
adc
mov
enter
xor
pusha
xchg
dec
imul
in
lret
into
rcrl
test
ljmp
int
push
mov
jl
adc
add
arpl
mov
sbb
scas
insb
adc
iret
lods
rclb
into
jo
test
xor
scas
jno
loope
mov
iret
mov
add
push
or
rcl
mov
test
and
fstpt
jo
xchg
aad
mov
and
xchg
cmp
xor
push
mov
or
mov
or
sbb
add
imul
sbb
iret
mov
mov
clc
rcll
mov
cmp
scas
or
xor
mov
shl
lods
push
loope
or
lret
xchg
push
mov
dec
jo
xchg
push
testl
fwait
or
dec
jo
xchg
push
push
outsl
inc
xchg
fcoms
adc
adc
xchg
cwtl
push
in
add
xchg
cltd
push
rcrb
lcall
popa
inc
fwait
inc
inc
fwait
out
lock
push
and
movsl
aad
push
loopne
mov
jae
shrb
fiadds
rolb
xor
xor
xor
xor
sti
daa
pop
xchg
xchg
inc
xchg
pop
xor
scas
clc
jg
xchg
push
nop
into
das
or
mov
mov
dec
fimuls
aad
fistpll
and
scas
rorl
fsin
mov
popa
fldt
adc
cmp
add
pop
mov
xchg
shlb
mov
cld
bound
scas
push
popa
mov
xor
negl
outsl
xchg
leave
test
mov
enter
sbb
fistps
fiadds
mov
in
aaa
add
inc
mov
sbb
js
mov
dec
fwait
aam
jle
inc
sar
ret
and
popf
cmpl
cltd
into
js
les
ret
dec
cmc
adc
test
xchg
xchg
inc
add
mov
sbb
out
dec
rorl
cmp
into
fsubr
ror
xchg
xchg
dec
and
push
mov
bound
push
shrb
mov
loopne
mov
mov
imul
jbe
mov
sub
test
mov
push
push
fiadds
fdivrl
adc
lret
in
push
cltd
in
mov
fstl
mov
test
outsl
dec
aas
and
int3
pop
shll
pushf
jg
aaa
push
fidivrl
pop
loopne
lret
inc
push
lret
push
jg
adc
ja
fs
add
push
add
gs
aad
jnp
in
xchg
xlat
pop
rcl
push
insl
adc
outsb
add
insb
bound
sti
jmp
sbb
mov
fwait
shl
scas
cmc
leave
cltd
pop
fs
js
pop
shrb
nop
push
push
fidivrs
adc
subl
or
inc
test
or
add
fadds
or
cli
ja
pusha
xchg
mov
aas
xor
mov
mov
data16
push
push
mov
inc
xchg
stos
aas
add
mov
dec
rol
cmp
jo
test
shlb
into
xchg
fstpt
mov
inc
adc
js
or
mov
lret
fnsave
pop
into
aam
add
test
and
popa
test
inc
rcll
or
dec
mov
mov
mov
pushf
adc
movsb
sti
js
pop
fdivl
shlb
in
shrl
pop
inc
pop
push
xor
lret
pop
mov
xchg
inc
push
lret
sti
iret
in
mov
lcall
mov
cmp
or
mov
lock
lret
fdivl
mov
cwtl
in
mov
xchg
sbbb
ja
push
sbb
in
out
sbb
jge
push
or
cmp
rcr
push
dec
jge
test
lods
fwait
inc
loop
insb
bound
popf
mov
mov
mov
lahf
repnz
dec
imul
fwait
and
mov
ljmp
xchg
es
dec
fisttpll
xchg
lret
add
loop
lret
xor
jge
xchg
dec
add
lock
inc
or
aas
fs
and
xchg
fcompl
cmp
mov
adc
sub
sbb
add
fisttpl
adc
dec
push
faddl
rcl
add
sub
rcrb
enter
rcpps
mov
jmp
sub
cltd
mov
in
loopne
mov
pop
out
mov
aas
arpl
cwtl
xchg
xor
cli
add
mov
cmp
enter
mov
lods
mov
inc
push
xlat
and
cmp
movsl
push
sbb
fisttps
in
pop
mov
pop
cs
inc
mov
push
xchg
popl
arpl
lods
loopne
out
aam
pop
cmpl
sbb
lret
jecxz
mov
aad
test
fwait
push
xchg
lahf
dec
out
dec
ljmp
pushf
test
or
sub
push
inc
xlat
fistl
mov
pop
and
enter
cmp
bound
fwait
xlat
xor
iret
or
lock
push
rcr
outsl
movsb
sahf
ds
sub
adc
cwtl
clc
ss
cmp
insb
or
lock
or
push
aam
mov
test
lds
add
or
xchg
mulb
in
movsl
idivl
jp
les
aad
push
dec
adc
xor
sub
lea
ja
jmp
pop
sub
sub
enter
call
mov
xor
jecxz
mov
and
fistpll
dec
cs
dec
int
mov
out
xchg
sti
test
dec
add
xchg
shll
scas
fnsave
repnz
pop
mov
sbb
das
into
sub
fwait
mov
cmp
jmp
arpl
mov
aam
add
jb
mov
insb
in
je
or
data16
pop
jns
mov
add
or
sbb
adc
or
adc
sbb
rclb
cmpsl
mov
pushf
rcll
adc
aad
pusha
pusha
loopne
lret
int3
rcrl
movb
or
adc
fimuls
xchg
jg
adc
ret
sub
orb
pop
das
cmp
adc
xchg
fisubrs
fimuls
movsl
push
dec
and
test
fcomip
push
xchg
test
cmc
cmc
mov
lret
cmp
test
divl
xchg
push
sar
xor
inc
aad
mov
cmp
mov
inc
loopne
std
cmpsb
xor
or
push
bound
sar
or
bound
imul
test
enter
jo
xchg
cmp
scas
push
iret
ja
dec
sub
popf
cs
jbe
scas
add
test
jo
loope
decl
out
ror
dec
or
cltd
mov
aam
mov
leave
dec
jo
jle
pop
mov
and
iret
adc
jb
xchg
xlat
sub
lea
dec
push
or
loopne
add
call
mov
or
into
lods
loopne
push
xchg
cltd
pop
decl
adc
in
enter
in
fwait
pop
rorb
mov
adc
ss
stc
popf
movsl
js
push
lea
mov
mov
xchg
shrl
insb
push
lock
push
pop
repnz
popf
mov
jmp
loopne
mov
pop
test
sbb
loop
sub
nop
ror
lea
and
add
sub
hlt
push
xor
jmp
lcall
xchg
nop
rolb
dec
jl
or
mov
or
or
or
fdivr
mov
jo
popf
pop
sbb
imul
pop
jmp
mov
push
xchg
das
cmp
sbb
rclb
sub
sbb
mov
xchg
mov
pop
xchg
fdivl
xor
mov
xor
sahf
fmuls
ja
jge
and
push
out
int3
pop
push
or
adc
dec
xlat
xchg
sub
mov
xchg
aaa
nop
iret
lret
inc
jg
loope
stos
pop
aaa
or
test
ret
add
add
in
inc
sbb
scas
in
aas
cmp
lods
push
stos
cmp
mov
or
aam
std
push
out
leave
fisttps
cmpl
lcall
shlb
call
mov
push
in
sbb
add
in
mov
aas
or
cld
push
mov
pop
les
mov
mov
mov
lret
addl
adc
imul
pop
lret
xchg
sbb
xchg
adc
pop
pop
pop
push
testb
lcall
in
stos
std
cltd
and
stc
ja
hlt
repz
push
data16
inc
mov
xchg
ficomps
ds
fcomp
xchg
pop
or
dec
mov
ret
test
bound
pop
pop
add
mov
cmp
into
jbe
xchg
adc
sub
or
nop
sub
imul
xchg
call
xchg
xchg
xchg
test
inc
mov
mov
or
xchg
push
jb
add
mov
cmp
jp
or
push
test
mov
mov
or
mov
rorl
cli
cmp
pop
stc
ret
or
xchg
or
dec
cmp
test
sahf
jecxz
inc
ret
jl
dec
adc
fwait
pusha
cmp
xor
mov
dec
jle
push
mov
fwait
pop
fsubl
push
hlt
dec
repnz
rorb
test
jnp
cltd
out
push
push
std
pushf
ret
adc
mov
push
pushf
mov
add
or
jnp
mov
ja
sub
xor
xchg
adc
jb,pn
enter
lcall
or
clc
sbb
insb
or
mov
int3
xchg
outsl
mov
xchg
cwtl
movl
xchg
std
pop
cmc
mov
mov
sbb
jbe
inc
mov
mov
out
fistps
xor
xchg
rcrb
or
sti
cs
lods
xchg
fbstp
cli
lret
add
mov
addb
dec
jmp
daa
idivb
dec
adc
sarl
icebp
arpl
mov
gs
push
jl
pop
insb
stos
aad
sarb
cmp
xor
lret
pop
xchg
jmp
lock
add
pop
sub
aas
push
aaa
jb
sbb
mov
jo
divl
loope
push
scas
lods
inc
adc
std
or
test
pop
mov
cltd
popf
fwait
adc
js
test
lds
xchg
cmp
dec
xchg
cltd
adc
roll
and
loope
xlat
shrb
pusha
adc
addl
cltd
xor
out
fisubs
cmp
cli
lret
cmp
and
pop
leave
sbb
mov
cmp
mov
push
sbb
iret
cmp
or
mov
inc
cmp
mov
mov
mov
imul
mov
lock
mov
mov
and
fwait
jge
dec
cmc
xchg
lock
enter
dec
scas
pop
je
es
sbb
sar
and
std
mov
dec
push
inc
adc
lods
testl
pop
or
sub
xor
lods
jp
jl
and
je
mov
lods
scas
mov
inc
xchg
fsubrs
jmp
inc
jp
cltd
and
in
push
jge
sub
adc
and
cli
jge
int
xchg
mov
das
inc
fwait
xor
imul
push
test
rcl
ja
cwtl
ja
rorb
dec
bound
pop
dec
int3
sbb
pop
subb
sbb
les
rcr
sarb
lahf
test
push
xchg
imul
mov
int3
push
mov
xchg
shll
rcl
inc
int3
rorb
push
inc
loope
aad
mov
cmc
aam
ret
or
jg
hlt
popf
mov
call
int3
les
dec
mov
push
out
test
int3
notl
cmp
adc
dec
dec
imul
mov
push
mov
cmc
je
in
cmp
xchg
test
fwait
into
fcmovnb
cmp
repnz
mov
pop
push
xor
testl
and
daa
xor
push
adc
stos
add
dec
dec
cmp
out
pushf
test
fwait
mov
xchg
addl
pop
mov
add
jne
inc
rcrb
xchg
addb
outsl
dec
imul
or
int
nop
and
scas
scas
aad
add
scas
pop
pop
cmp
cmp
xor
sbb
lods
or
dec
lods
add
push
dec
mov
popf
xchg
jbe
repnz
movsl
add
dec
push
in
mov
xlat
mov
inc
mov
pop
mov
and
xchg
push
xlat
shll
call
outsb
cltd
movsb
shrb
xchg
inc
xchg
divl
or
xchg
mov
je
add
mov
push
or
imul
leave
orl
inc
shl
into
and
adc
adc
pushf
scas
insl
inc
or
test
pop
rcl
or
or
or
push
lahf
mov
xchg
int3
push
mov
insl
mov
add
jbe
adc
xchg
mov
sbb
dec
fsubrl
jb
add
repnz
test
mov
mov
mov
or
aam
jl
test
push
add
into
lods
mov
fidivrl
dec
js
mov
sub
std
stc
gs
adc
repz
fcmovnbe
adc
aad
movsl
imul
stos
push
rcll
push
rorb
xchg
xor
mov
fwait
push
lahf
stos
inc
cwtl
in
sbbl
imul
adc
inc
dec
add
add
mov
incb
cmpsb
mov
shl
cmp
dec
lods
nop
clc
sbb
fsubl
sub
pop
std
xor
insb
fcmovne
sbb
xor
hlt
imul
xchg
dec
or
xchg
hlt
jmp
int
pop
fsubrl
cld
pop
pop
aas
sbb
cwtl
movsb
mov
push
insl
lcall
cs
lcall
rcr
inc
orb
add
cli
lea
add
scas
hlt
in
call
mov
fistpll
in
adc
scas
cwtl
les
mov
ret
jp
fldcw
jns
dec
rcrb
sbb
push
scas
jge
push
pop
dec
cmp
hlt
jb
sbbb
xor
pop
mov
test
lds
test
xor
ret
lods
icebp
mov
jno
sub
push
mov
int3
or
mov
orl
aas
repnz
out
add
mov
sahf
jns
fbstp
outsl
repnz
shl
sbb
test
cmp
sarb
rcl
xchg
iret
aas
mov
pusha
inc
push
stos
jno
out
xor
and
sbb
int
xor
cmp
mov
or
or
lea
mov
loopne
adc
aas
sub
lods
push
adcl
loope
mov
cmp
andl
xchg
and
cmc
cltd
pop
push
subb
xchg
jbe
test
xchg
insb
lcall
sarb
jl
or
mov
push
mov
sbb
fdivr
xchg
dec
ljmp
cmp
andb
call
push
repnz
fcmovnu
xchg
in
sbb
mov
fwait
mov
stc
scas
popa
xor
rcr
push
mov
mov
mov
pushf
ljmp
outsb
add
insb
cmp
rol
push
mov
sbb
mov
jl
out
imul
inc
xor
lods
fstl
out
pop
add
mov
cmc
mov
lret
mov
fimuls
push
fisttps
xchg
call
jne
push
xchg
movsl
jae
jnp
fwait
scas
mov
scas
jne
cmp
aas
movsb
loopne
cld
mov
push
push
sbb
xchg
fcmovnb
lcall
sar
mov
xchg
sbb
push
mov
in
or
dec
icebp
lods
sbb
iret
mov
mov
shll
xchg
iret
outsb
cmpsb
imul
hlt
fld
mov
push
cltd
stos
loopne
push
out
mov
or
adc
loop
jmp
pushf
mov
lcall
xor
js
aaa
cwtl
cmp
subb
lock
jnp
call
cmp
mov
fsts
cmp
fs
adc
movsb
xor
scas
mov
jb
je
daa
sti
icebp
mov
scas
sub
mov
pop
add
hlt
lret
xchg
cwtl
lcall
loop
sbb
push
inc
roll
or
cwtl
sub
mov
xchg
inc
hlt
jns
test
lret
fld
inc
test
sub
or
fadds
int3
pusha
xor
mov
push
xor
mov
call
cmp
jle
mov
scas
jp
mov
push
cmpsl
lock
mov
cmp
ret
cli
ljmp
sbbl
loope
or
and
xchg
pop
rorb
inc
iret
icebp
dec
aas
and
iret
icebp
xchg
int3
mov
push
mov
pop
and
push
jecxz
mov
mov
in
mov
int3
in
movsl
outsb
aam
xchg
sbb
sub
ret
push
mov
jmp
sbb
sub
ret
test
sbb
sbb
xlat
ljmp
loop
in
orb
icebp
cli
add
mov
jnp
fstp
in
sub
adc
mov
push
mov
cli
inc
leave
push
mov
out
shrb
adc
mov
jmp
sbb
fwait
jg
add
nop
iret
imul
test
push
dec
mov
fnclex
mov
xorl
xor
inc
pop
stos
shlb
orb
fsubs
aaa
mov
mov
leave
xchg
mov
push
and
subl
adc
nop
es
dec
iret
pop
shll
aas
push
fs
mov
inc
or
dec
sbb
adc
data16
dec
ret
pop
jg
cmpsl
ljmp
xchg
int
loopne
popl
push
les
push
je
xchg
jp
push
fwait
cmp
mov
addb
jns
add
mov
mov
mov
mov
scas
sub
jbe
roll
xor
gs
xchg
mov
les
loopne
mov
fnstenv
mov
int
das
fbstp
sub
es
cmp
lret
pushf
push
or
fmul
test
rcrl
xchg
cld
clc
mov
inc
test
imul
daa
mov
mov
xchg
mov
jg
adc
jmp
shll
jmp
out
fiaddl
jl
pop
cmpsb
sarb
fisttps
jae
mov
mov
std
aaa
call
cmp
pushf
mov
rcrb
imul
or
mov
cmp
xchg
imul
std
stos
lock
inc
pop
sbb
andl
ljmp
xchg
out
movsb
adc
fidivrl
mov
mov
xchg
cmpsl
inc
adcb
hlt
ficoml
mov
ror
jle
add
jp
xchg
cmc
mov
lock
imul
cmpsb
aaa
sbbb
cmpsb
adc
jecxz
rcrb
cli
mov
lret
ret
xchg
test
test
enter
rolb
ret
ret
movsl
dec
scas
enter
iret
adc
sub
lret
lret
bound
xchg
lds
or
cmp
test
or
add
xor
cmp
bound
fwait
movsl
xchg
imul
jle
scas
jne
pop
ret
push
push
pushf
or
inc
xchg
ds
scas
cmc
xchg
jns
lds
hlt
or
pushf
insb
push
adc
lock
imul
cltd
inc
mov
shl
cmp
outsb
xchg
jl
mov
xorl
ret
xchg
cmp
and
xor
mov
cmp
mov
test
mov
xlat
imul
cwtl
hlt
lret
mov
inc
pop
ljmp
add
cmp
iret
sub
cmpsb
mov
lea
sub
adc
xchg
lret
loopne
std
xchg
sbb
jbe
push
inc
fcoms
les
mov
mov
sub
jg
aas
cmpsl
aad
imul
ret
push
jo
xchg
adc
call
mov
movsb
sti
les
adc
or
xchg
cmpsb
stc
mov
sahf
pop
test
test
out
ja
js
fisttps
xor
jb
gs
jle
andl
movsl
pushf
dec
mov
in
mov
sbb
mov
dec
sbbb
jns
inc
xchg
ret
scas
icebp
cmp
rcr
orl
dec
xchg
sarb
xchg
mov
cmp
jb
setl
out
jl
daa
imul
lods
jb
stos
jge
xchg
jo
jne
ret
xlat
fwait
sarb
jns
loop
paddq
in
xchg
xchg
push
mov
cltd
shlb
dec
sub
inc
in
ja
test
pushw
sub
sahf
mov
leave
cmp
mov
inc
push
or
push
dec
jle
xor
movsl
imul
adc
std
mov
std
or
lods
stos
jge
or
pop
xor
xchg
add
cmp
mov
inc
inc
dec
or
out
movsl
mov
xchg
xchg
sbb
loop
and
fdivp
mov
loop
enter
repnz
xchg
shrb
scas
ljmp
mov
enter
push
lea
dec
fdivl
int3
mov
pop
mov
ficoml
shll
imul
xlat
rolb
push
fisttps
fcomp
sub
inc
push
jle
fildll
or
fbld
jb
stos
jnp
dec
lcall
lea
mov
sarb
adcb
lea
jno
or
xlat
inc
lret
notl
xor
mov
sub
int3
and
fldenv
enter
movsl
push
enter
inc
push
dec
mov
iret
mov
cmpb
shrl
sub
sbb
dec
sub
cld
mov
scas
and
daa
decb
fnstsw
movsl
mov
je
add
aas
add
sub
xchg
add
clc
xchg
cmc
lcall
adc
ret
xlat
adc
fsts
and
mov
mov
popa
mul
inc
ret
gs
mov
inc
enter
cs
dec
int3
sub
and
mov
xlat
leave
push
enter
push
cmp
jae
sub
pop
fildll
sbb
xor
and
mov
push
rolb
pop
add
stos
jge
xor
jae
gs
cmp
push
mov
cmp
mov
adcb
outsl
fcmovu
mov
mov
lock
outsb
shll
jno
xchg
inc
int3
ret
mov
mov
hlt
xchg
call
or
mov
daa
loop
cmpsb
push
pavgw
adc
shll
pop
movsb
inc
iret
pop
inc
pop
hlt
mull
jecxz
sub
lods
mov
cmpsb
adc
lds
call
int3
mov
and
inc
stos
add
pop
pushf
ret
jne
mov
clc
lods
fbstp
loopne
mov
cld
pop
pop
mov
imul
nop
jge
int3
adc
movsl
cmc
mov
pop
sbb
cs
mov
bound
lods
rcrb
ffreep
push
or
in
or
xorb
ret
inc
in
mov
xchg
cmp
rcl
sbb
lock
gs
add
mov
pop
push
dec
xchg
lods
shll
jp
loope
xor
sbb
popf
mov
icebp
stos
test
lds
loopne
sbb
je
leave
dec
push
jp
into
push
sub
popf
inc
inc
dec
rcrl
cld
in
insb
repnz
pushf
rcl
mov
nop
mov
lods
lds
mov
ret
int3
mov
test
in
inc
jns
stc
and
jb
sbb
incl
jb
pop
cmp
das
fnstsw
dec
loopne
sbb
xor
mov
aaa
pop
fldenv
mov
inc
sub
int
fsubr
or
or
xchg
popf
js
jns
adc
mov
add
xchg
xchg
adc
cmp
adc
sub
mov
inc
jp
add
aas
sub
xchg
int
mov
lahf
sbb
mov
dec
in
daa
xchg
lock
mov
inc
push
pop
leave
push
movsl
pavgb
dec
orl
data16
cwtl
xchg
dec
outsb
icebp
lret
or
outsb
dec
xor
iret
pop
jecxz
xchg
pop
and
mov
xchg
pop
das
std
das
pushf
xor
mov
or
pop
pop
push
in
data16
mov
outsl
pop
cltd
ficompl
test
rclb
in
jb
xchg
addr16
or
sbb
shl
xor
cmp
jnp
sbb
loopne
inc
mov
call
test
or
stc
mov
mov
dec
or
lret
mov
lcall
sbb
nop
imul
sub
mov
xor
mov
inc
stos
test
mov
mov
orl
xchg
jp
in
xchg
sbb
add
imul
incb
insl
mov
repnz
shl
mov
jmp
stos
pop
clc
push
ret
pushf
shlb
sub
lods
test
add
das
jae
ret
sti
stc
push
jg
sbb
or
imul
clc
pop
lock
mov
sub
sahf
inc
sti
fsts
lahf
cmpsb
sahf
stc
nop
inc
in
push
dec
dec
push
push
or
mov
arpl
lret
aad
push
gs
cmp
add
dec
mov
gs
add
xchg
push
xor
push
in
and
or
rcrb
or
adc
sti
shl
xchg
xchg
pop
cmp
pop
test
adcb
stc
in
shrl
xchg
xchg
pop
pop
ss
pop
adc
push
aad
arpl
scas
cwtl
inc
or
mov
rclb
sbb
imul
push
cli
movsb
pushf
add
out
dec
mov
cmpb
mov
push
cwtl
dec
imul
sub
push
sub
fsubrs
add
cmpsb
mov
cli
lock
inc
int
xchg
add
sub
pushf
add
mov
push
lods
hlt
shlb
je
rorb
test
hlt
jge
cmpsl
stos
jmp
fldenv
pushf
in
sgdtl
pop
sbb
xor
mov
mov
mov
les
test
insb
adcl
lods
xchg
loopne
iret
cmp
popa
test
inc
push
ja
in
xchg
add
jb
jne
and
enter
push
xchg
imul
push
aad
daa
add
mov
inc
test
lods
or
test
jo
pushf
outsl
mov
cmpb
fldt
adc
xchg
push
jle
in
mov
ja
pop
jb
lods
hlt
pop
dec
jo
out
ljmp
cltd
std
push
test
dec
add
clc
mov
fwait
mov
es
lret
loop
leave
pushf
push
pop
daa
or
xchg
fucomp
loope
imul
lds
movsl
sti
sbbb
inc
daa
hlt
divb
mov
mov
pop
rorl
and
xor
or
add
add
aad
lea
and
sub
sub
mov
and
insb
mov
mov
mov
add
cld
jp
push
ret
aam
dec
inc
je
push
scas
loop
test
jno
fisttps
xchg
push
pop
xor
xor
aas
jne
ret
jne
and
test
test
xchg
cmp
mov
les
mov
imul
add
xchg
xchg
in
dec
cld
lret
xchg
sub
fisubs
lret
cwtl
or
mov
cmp
cmc
xchg
pop
icebp
test
lahf
sbb
rolb
shrl
inc
in
add
xchg
mov
rorb
xchg
sub
out
sbb
repz
ds
es
in
push
int3
cmp
or
or
sahf
add
and
add
dec
push
lds
mov
xor
std
sahf
in
cmpsl
jae
dec
es
in
int
mov
lods
insl
sti
or
imul
loope
sub
pop
sbb
sbb
pushf
cwtl
std
shrb
test
add
cli
shlb
fcmovne
test
xorb
out
mov
pop
sub
and
nop
outsl
adc
test
xchg
testl
sbb
ja
pop
into
jp
gs
xchg
sahf
lret
aas
aam
sbb
mov
mov
ja
jbe
pop
mov
inc
dec
mov
not
jae
xchg
fdiv
in
nop
shlb
dec
rclb
push
les
sbb
sub
xor
mov
adc
adc
les
aas
dec
std
in
xchg
jp
test
loopne
pop
mov
andb
fsubrl
xchg
rclb
jo
add
jmp
aaa
mov
sub
mov
sub
jnp
bnd
add
push
hlt
add
sbb
push
cltd
or
cmp
mov
pusha
add
arpl
and
xchg
pop
inc
test
decl
in
das
lcall
or
inc
outsl
jl
dec
lea
notl
fisubrs
jecxz
in
into
imul
js
sub
lahf
scas
push
int3
imul
aaa
or
add
hlt
mov
in
xchg
mov
lea
movsb
inc
mov
inc
adc
push
xchg
fbld
mov
pushf
add
mov
leave
push
aaa
cmp
pop
sahf
mov
aam
cmp
call
cmpsl
fcoms
mov
cmp
xor
aam
pop
pusha
ljmp
fldl2t
push
rcl
jmp
sbb
pop
and
sti
sub
cmp
out
xchg
in
add
loope
aaa
hlt
push
inc
mov
scas
lock
aad
and
mov
or
into
ret
add
es
enter
test
lret
pop
in
pop
gs
sbb
fwait
jbe
jb
arpl
dec
movsl
jne
sub
mov
jbe
fmulp
or
mov
cmc
scas
mov
push
cltd
push
sahf
sbb
and
rcrl
leave
and
adc
mov
sarl
ja
xchg
fldt
add
loop
movsl
lahf
imul
or
rcl
mov
jo
mov
sahf
enter
pop
cltd
lods
movsb
lret
push
pop
icebp
and
mov
fdivrs
mov
adc
insb
std
inc
inc
pop
dec
or
lds
or
inc
out
cmc
cmp
sub
jns
cmc
pop
mov
fs
les
ret
call
int
add
stos
sbb
aad
sti
jl
pop
movsb
int
xchg
add
test
leave
pop
ret
rclb
cmp
scas
push
push
sahf
nop
push
mov
mov
cmp
dec
ljmp
cmp
adc
in
mov
lret
cmpsl
cmp
loop
sbb
push
int3
xchg
rclb
rol
movsl
std
xchg
mov
iret
push
fs
fmulp
aam
ljmp
insb
jae
xchg
sub
mov
popa
push
pop
lods
cmp
sub
movsl
dec
jo
iret
adc
mov
movsb
movsb
ds
sub
adcl
mov
cwtl
lea
push
pop
repnz
retw
fadd
ss
mov
or
jns
enter
mov
pop
mov
add
pop
or
adc
gs
shrl
pop
jp
inc
jnp
cmc
cmpsb
push
cmp
push
ds
inc
mov
mov
mov
aad
pop
lock
sti
jns
inc
sbbl
jg
pop
add
mov
int
mov
daa
cmc
or
push
cmpsl
lods
in
repz
pop
sub
add
aad
icebp
les
push
jl
push
cmp
push
cmpsb
push
sbb
rcr
cmp
ljmp
and
out
and
and
call
cmc
out
add
test
mov
aas
jle
outsb
shlb
es
pop
insb
sbb
sbb
adc
aad
clc
jb
inc
push
dec
xor
inc
push
loop
stc
fimull
fstl
icebp
fistpll
xor
push
arpl
test
and
rcrb
xor
jmp
scas
fcomi
jns
mov
fmuls
clc
movsl
popf
sahf
cmp
mov
fstpt
clc
mov
es
push
fs
fidivl
mov
sub
inc
leave
int3
insb
call
sbb
lods
int3
in
daa
jl
jp
dec
fdivrl
into
xchg
xlat
orl
jg
shll
icebp
rcl
nop
in
mov
and
shrb
add
jns
jmp
push
test
das
sbb
daa
jmp
iret
dec
xchg
jle
movsl
pop
aam
std
jno
insb
jns
xchg
leave
rcl
sub
sub
xor
xor
out
mov
xchg
lahf
test
sub
fstps
test
xchg
aam
mov
inc
leave
add
jnp
pop
stos
imul
xchg
leave
rorl
jmp
js
jo
sbb
insl
push
jb
xchg
jge
fldt
sarb
pusha
and
ss
jbe
add
movsb
fsubrl
mov
push
dec
and
pop
push
divb
xchg
push
ja
hlt
adc
nop
mov
push
loop
adc
lret
mov
pop
pop
fisubs
add
mov
filds
inc
dec
mov
scas
xor
mov
or
loope
add
outsl
push
pop
add
cmc
xchg
sti
inc
mov
mov
push
cmc
mov
pop
aad
rcrb
adc
and
hlt
sbb
stos
fnstcw
mov
dec
popf
mov
shr
adcl
lea
mov
ja
jp
lods
or
jbe
cld
test
push
mov
addl
push
mov
int
stos
jecxz
enter
stos
dec
jge
pusha
mov
inc
je
jb
cmp
mov
xchg
mov
enter
in
jb
inc
fwait
cli
mov
jg
mov
bound
inc
mov
orb
pop
jno
test
dec
pop
and
je
loop
xchg
sbbl
movb
arpl
pop
insb
je
sub
std
int3
daa
imul
mov
cwtl
inc
push
iret
and
pop
push
test
cli
leave
lods
mov
sarl
mov
and
add
inc
movsl
inc
mov
adc
aad
adc
dec
rcll
mov
fldt
xor
push
xchg
fldz
pusha
sbb
pop
sbb
test
and
rorl
jmp
fsubp
mov
sbbl
lret
test
pop
shll
or
fsubrs
aaa
repnz
es
loop
sub
xor
insb
cmp
cs
mov
scas
xchg
rorl
decb
inc
insb
les
jns
testb
pop
out
add
sbb
pop
jae
test
insb
cmpb
ja
jle
stc
test
idivb
shrb
pop
les
sub
andl
loope
iret
cmpb
inc
xchg
rolb
xchg
subl
mov
and
dec
pop
mov
add
rcrb
pop
stc
aad
pusha
sbb
xor
fwait
mov
push
xchg
mov
call
mov
fstps
lds
aad
jg
jae
les
nop
mov
mov
insb
ror
pop
jl
inc
xchg
lcall
and
daa
ret
loopne
ss
test
push
cmpsb
cmp
mov
add
sarl
jno
js
add
sbb
mov
and
gs
fists
ret
ljmp
and
mov
cmpl
jnp
les
jns
xchg
ja
mov
jbe
mov
jne
mov
je
mov
jae
enter
mov
scas
popa
outsb
pusha
je
mov
rorb
add
add
inc
xchg
lods
add
out
movsb
loope
cmp
lret
imul
mov
push
adcb
mov
push
mov
and
mov
sti
jbe
movsb
jp
and
push
mov
loop
cwtl
not
sbbb
iret
nop
add
lods
pop
xchg
test
jae
imul
inc
push
test
add
push
jle
xchg
mov
pop
xchg
es
lods
enter
xchg
jne
loopne
imul
lea
negl
pop
jae
pop
adcb
jge
add
aas
push
add
sub
xorb
rcrl
cmp
push
das
cwtl
test
ror
mov
push
fs
xchg
push
or
shl
das
mov
adc
lcall
inc
clc
jecxz
pushf
xor
xchg
imul
mov
jb
adc
bswap
orl
pop
les
rclb
or
adc
inc
outsb
subl
jl
xchg
mov
test
add
add
orb
mov
cmp
push
push
push
pushf
out
iret
in
dec
jo
inc
sub
mov
pop
test
cmc
mov
or
std
not
enter
push
cwtl
adc
pushf
rcl
shrl
rcll
xchg
stos
jle
mov
inc
xlat
push
imul
mov
lods
mov
mov
pushf
in
mov
pop
fwait
pop
bound
adc
dec
xchg
sbbb
mov
int
pushl
adc
fadds
add
cmc
push
imul
scas
jg
ja
sub
jno
rorl
loopne
arpl
sub
mov
les
movsl
jge
rcrb
pop
xchg
lds
mov
fs
add
rcr
push
fists
mov
and
or
and
ror
bound
adc
pop
pop
enter
movsl
adc
adcl
pop
out
mov
shrb
jno
mov
in
xchg
adc
cmp
xchg
add
jne
outsb
mov
in
test
dec
inc
or
jecxz
lds
mov
dec
inc
int
xor
adc
test
int3
mov
push
aas
dec
cmpsl
mov
movsl
cmc
cmpsb
jg
inc
mov
mov
cmpl
movsb
bound
jl
dec
nop
mov
and
cmc
cltd
test
ret
mov
mov
pop
xor
je
inc
test
cmc
push
pop
hlt
lods
lcall
jnp
in
cld
fwait
scas
sti
dec
mov
js
lds
add
mov
shrb
jns
cmp
mov
pop
roll
rcll
adcb
fs
mov
lods
movsb
inc
mov
mov
adcl
jae
sub
nop
ret
push
sub
adc
jns
or
lret
into
push
repz
sub
jne
aad
or
lret
or
jmp
push
sbb
add
mov
outsb
stc
xor
sub
xlat
lds
xchg
mov
pop
ja
lcall
sub
push
adc
ret
adc
push
xchg
rcll
xor
pushf
inc
jp
xor
cld
fs
pop
daa
ljmp
and
pop
hlt
orb
xlat
in
test
cmc
les
iret
fisttps
and
movsl
inc
and
inc
inc
adc
or
xlat
lcall
and
cmpsl
dec
jno
mov
jbe
rol
fcoml
aad
push
fistl
lods
stc
mov
mov
add
sahf
mov
adc
das
pop
loop
pop
push
inc
jp
adc
push
ret
and
xchg
aam
pop
addb
call
inc
pop
fidivs
pop
inc
jecxz
roll
call
dec
rcrl
clc
movsb
jno
xchg
sbb
xchg
arpl
test
pop
sahf
add
outsl
loope
cli
sub
and
test
fmul
xchg
push
imul
or
mov
cmpsb
adc
mov
aam
cmp
aaa
std
push
inc
rclb
inc
inc
sub
ret
xchg
pop
sub
jmp
pop
jecxz
lods
mov
shll
lret
test
mov
lods
xchg
stos
cwtl
daa
mov
ljmp
sbb
mov
xchg
cmc
mov
jecxz
idiv
les
dec
jmp
push
push
inc
pusha
mov
sarb
dec
mov
or
add
enter
xchg
xchg
out
add
std
pop
pushf
mov
mov
inc
pushf
add
pushl
xchg
inc
orw
fidivrl
cli
fld1
mov
or
lds
dec
sahf
add
xor
mov
fisttps
adc
inc
subl
popa
movsl
inc
xchg
leave
movsb
or
or
dec
add
cli
repz
testb
ds
jo
xchg
sti
js
inc
xor
cmpsb
or
imulb
sub
dec
pushf
int3
sub
mov
cmp
int3
jno
mov
int
movsl
pop
mov
andb
test
and
jge
enter
add
aad
enter
stos
jle
push
mov
mov
das
dec
incb
js
jns
and
out
hlt
lret
inc
xlat
inc
jns
fadd
or
out
jno
les
hlt
inc
sahf
cmc
xchg
push
inc
rorl
movsl
and
adc
mov
hlt
sbb
ret
aad
lret
movsl
pop
into
stc
adc
ljmp
push
mov
push
outsb
addb
xchg
test
adc
nop
inc
sbbb
cmp
inc
cmc
xchg
pop
out
jmp
xor
dec
test
xchg
clc
sbb
cli
sub
xor
push
in
in
xor
cmpsl
jbe
ret
es
mov
dec
hlt
pop
xchg
lods
xlat
fidivs
in
push
adc
dec
in
pop
int
lea
inc
mov
push
sub
mov
fcmovu
inc
mov
add
cmpl
shl
dec
mov
dec
movsb
push
aas
mov
loopne
cs
icebp
loopne
loope
push
stos
jnp
and
jmp
sub
es
adc
into
pusha
nop
jmp
dec
sbb
idiv
sub
je
cmc
pop
or
dec
add
nop
add
sbb
cli
bound
cltd
xchg
mov
cmc
sti
xor
xlat
sti
rorb
mov
and
std
pop
into
aas
dec
mov
leave
push
jns
and
sbb
jb
pop
rcl
adc
cmp
sub
mov
hlt
aad
fstpt
repz
test
add
pop
mov
lret
stos
xchg
mov
shl
adc
sbb
jno
inc
cmpsl
insb
and
inc
lods
mov
es
push
mov
sbb
cmpsb
fsubl
mov
ret
inc
or
xlat
adcb
and
mov
cmp
xchg
inc
nop
jnp
and
aam
inc
cmp
hlt
adc
movsl
pushf
fbld
push
or
push
push
and
mov
mov
push
mov
xchg
adc
loop
xchg
ds
or
bound
adc
adc
sbb
test
jne
test
sub
sbb
inc
xorb
mov
adc
mov
cli
lret
mov
idivb
arpl
mov
in
add
jbe
dec
ret
pop
fsubl
enter
jl
scas
fsubs
cmpl
push
rol
ffree
jns
addl
movsb
negb
lea
pop
pop
imul
lret
cwtl
sahf
mov
data16
sub
enter
xchg
or
mov
push
mov
nop
jne
inc
xchg
ljmp
in
dec
stos
adc
js
stc
mov
sbb
add
inc
iret
xchg
sbb
mov
adc
test
mov
pop
nop
push
mov
dec
ret
lret
lret
cwtl
in
sar
sbb
sub
lods
fucom
dec
movsl
inc
test
int3
lret
or
mov
vpmullw
push
leave
push
mov
ret
jne
leave
mov
test
xorl
pop
sub
and
jbe
and
push
into
pop
je
push
in
push
push
aas
cmp
jmp
push
xchg
mov
fwait
and
mov
loopne
cmp
out
sub
cmp
push
and
or
movsb
cmp
lds
int
lcall
lahf
mov
mov
int
mov
xchg
loop
mov
jbe
ds
push
pop
mov
stc
adc
mov
lret
xchg
mov
inc
add
sub
sbbl
enter
js
ret
jae,pn
into
jle
nop
jle
lods
mov
sbb
sbb
or
cld
jg
mov
mov
inc
push
add
inc
jle
call
xchg
adc
mov
pop
mov
add
shrl
popf
js
enter
mov
mov
ror
out
jae,pt
mov
les
and
cld
cmc
xchg
sub
mov
into
lods
shll
lods
push
adc
ret
mov
lret
ss
int3
mov
stc
insb
xchg
sbb
mov
mov
add
and
lods
dec
xlat
shll
jle
out
mov
sbbl
mov
pop
lahf
lret
pop
pop
sub
jns
xor
stos
adc
loopne
and
insl
and
push
push
inc
lret
test
lds
out
mov
inc
mov
mov
andb
pop
xchg
or
mov
jge
lcall
lods
mov
jno
sub
push
mov
faddl
add
rolb
pop
and
pop
xchg
aam
cmpsl
and
clc
cld
or
test
ss
xor
mov
and
adc
lret
iret
pop
jg
xor
push
movsl
and
movsb
enter
xorl
rolb
and
sbb
push
mov
dec
iret
add
test
cmc
fdivrs
mov
jg
iret
rol
add
pop
hlt
push
mov
pop
lods
pop
add
jae
cs
scas
inc
xchg
sbb
insb
push
orb
dec
insb
xchg
jmp
dec
dec
jle
in
leave
sbb
mov
push
imul
imul
xchg
inc
sub
repnz
movsl
pop
insl
outsb
stos
lret
mov
rcll
pop
xchg
pop
test
or
add
js
sbb
and
mov
out
lret
and
dec
inc
movsb
mov
fsts
adc
add
call
inc
mov
xchg
mov
xor
mov
in
pop
loope
pop
addr16
push
dec
lock
push
es
push
lods
or
inc
imul
add
add
lret
lret
bound
cli
jns
movsb
fs
lcall
dec
pusha
mov
hlt
iret
cli
les
or
sub
movl
ss
rcll
les
push
rcrl
or
push
mov
mov
popa
sbb
xchg
leave
decl
pop
xchg
stos
and
pop
add
fstps
adc
test
lahf
std
push
or
add
adc
rol
ret
xor
mov
mov
mov
mov
rcl
scas
mov
push
lret
jns
or
imul
ret
movsl
add
push
mov
nop
call
inc
or
imul
push
mov
ja
rorb
or
div
data16
and
hlt
xchg
pushf
aam
mov
lret
jbe
addr16
pop
sarl
mov
push
divb
cmp
cmpsb
cwtl
push
cmpsl
cmc
outsb
jne
shlb
pushf
cmp
sarl
lret
xchg
mov
lret
cmp
pop
orl
adc
jle
push
lds
dec
int3
stos
ss
mov
and
fs
push
jno
mov
enter
addr16
xchg
push
xor
std
test
fwait
imul
test
mov
movsb
js
push
adc
mov
mov
xor
lsl
mov
mov
mov
repz
add
sbb
scas
imul
ret
mov
xchg
mov
xchg
mov
cld
mov
push
dec
mov
cmpsl
ret
add
imul
sahf
adc
add
lret
je
repz
mov
inc
dec
lods
popl
in
shlb
sub
mov
and
lea
imul
scas
xor
inc
xor
sub
mov
jl
jg
lret
out
inc
mov
rorl
xor
imul
repnz
push
add
ja
or
and
lods
dec
andl
lods
cmpl
push
sti
pop
cmpsl
repnz
fcmovnb
insb
ret
shll
mov
xchg
fldl
add
pop
pop
cmp
andl
insb
xor
shll
ds
pusha
or
jmp
or
dec
and
frstor
pusha
sbb
sub
add
add
xchg
cmc
xchg
jbe
movb
xor
xchg
inc
add
mov
add
inc
push
aam
add
sarb
jae
jmp
or
jnp
int
std
dec
mov
and
in
xchg
mov
dec
pop
pop
fldl
subl
inc
stos
adcb
mov
mov
xchg
xchg
loope
sub
int3
or
adc
xchg
rclb
or
nop
stos
push
scas
js
push
je
mov
cmp
and
cmpl
mov
mov
lret
loope
lds
inc
test
add
test
mov
or
stos
mov
mov
hlt
cltd
mov
imul
cmc
lea
call
cmp
push
hlt
mov
add
testl
jg
mov
mov
push
or
dec
jne
and
adc
inc
xchg
mov
pop
mov
xor
sub
ja
test
cmc
mov
sbb
mov
out
fldt
xor
inc
arpl
icebp
mov
loopne
pushf
mov
aam
xchg
pop
sarl
mov
xchg
jmp
jbe
add
loop
iret
xchg
aam
pop
cmc
iret
stos
push
mov
push
xor
pushf
mov
cs
or
dec
inc
mov
xor
adc
pop
cmp
sbb
jg
out
or
imul
mov
nop
vminsd
shrl
ljmp
mov
push
lahf
enter
cltd
test
xchg
fstl
sub
push
aam
adc
rorl
and
mov
mov
rcrb
nop
shll
inc
jmp
mov
pop
push
daa
add
fnstenv
inc
push
jg
sub
mov
scas
jae
pop
push
into
jle
adc
insl
push
mov
or
iret
cmpb
mov
xlat
repnz
add
add
mov
jno
inc
nop
pop
pusha
icebp
sbb
push
mov
mov
enter
pop
das
mov
push
jns
rclb
out
pop
mov
inc
aad
jns
push
jne
mov
mov
adc
add
jo
cmp
mov
negb
jno
mov
mov
inc
xchg
sahf
jbe
push
mov
shl
out
xchg
rcrb
inc
fucomip
mov
out
das
mov
jg
push
or
xor
cltd
adc
jbe
dec
stos
ret
std
mov
pop
inc
test
cmp
ficomps
xlat
lret
push
dec
jae
shrl
pop
test
ljmp
scas
mov
push
fidivrl
cmp
imul
mov
inc
dec
imul
cld
das
addb
and
in
mov
test
jp
mov
sub
shr
mul
adc
cmc
jno
stos
repz
lret
add
mov
js
jge
rol
outsb
mov
hlt
lahf
fstl
clc
mov
nop
lret
jecxz
inc
rcl
nop
out
jge
or
xchg
sbb
scas
mov
int3
xchg
in
jge
dec
push
leave
adc
jecxz
xlat
or
test
mov
fmull
dec
push
lret
jecxz
fs
in
stos
in
mov
xor
or
dec
adc
ficomps
popf
rolb
lods
imul
stos
inc
icebp
sub
push
leave
mov
or
icebp
or
push
fcomps
out
push
repz
insl
fadds
fisubrl
sub
lcall
jb
mov
push
cmp
adc
or
test
mov
stos
jb
pop
movsl
or
rclb
jb
inc
rcrb
cld
mov
inc
lock
dec
cli
leave
loop
lock
pop
mov
mov
mov
mov
xlat
out
cmpl
or
xorb
and
add
adc
sub
add
movl
inc
lret
rcrb
insb
sahf
inc
jl
mov
jp
and
mov
sub
scas
xchg
or
movsb
test
xor
lret
sub
xor
scas
popa
mov
or
insl
or
and
xor
cmp
lret
push
das
push
lds
mov
outsl
pop
fwait
mov
fists
les
imul
mov
xchg
and
pushf
adc
adc
sub
inc
inc
jnp
sahf
adc
rcll
push
test
mov
inc
or
and
cmp
xchg
dec
rcl
jo
xlat
mov
sub
xchg
xor
lds
mov
ds
stos
jnp
pop
shrb
shrb
mov
lods
pushf
rorb
cli
inc
add
xchg
adc
lods
or
push
imul
cmp
dec
xchg
addb
lods
xor
stos
shrl
rclb
call
cli
mov
rol
push
pop
js
dec
fstpl
aam
add
xchg
pop
test
dec
jne
sub
adc
mov
inc
test
jno
pushf
into
shrl
movsl
mov
sbb
fcomp
push
cs
call
mov
cld
adc
xlat
sub
cmp
leave
add
adc
mov
in
mov
cld
mov
jb
xchg
lret
jp
dec
jge
dec
in
hlt
inc
inc
sub
cmc
out
inc
cmp
cmp
fcmovbe
insl
test
mov
cmp
test
shll
inc
mov
aas
mov
aad
mov
adc
dec
push
cmp
iret
inc
sub
mov
dec
jb
mov
test
sbb
rcll
cmp
adcl
or
xchg
add
or
lods
enter
xchg
adc
xchg
fldl
iret
test
lock
inc
xchg
fs
cmp
mov
repnz
xlat
popf
adc
inc
xchg
outsb
loope
sub
negl
pop
insl
insb
mov
cwtl
shll
inc
mov
and
xor
rcr
shlb
adc
jno
push
adc
push
fwait
sub
jle
inc
roll
mov
jbe
mov
mov
pop
movsb
xchg
shll
nop
mov
fisubrl
inc
lds
out
adc
in
inc
enter
cld
jnp
pop
imul
daa
jns
and
popa
cmp
xor
mov
les
fucomip
jo
inc
aas
ret
clc
xchg
jecxz
imul
lea
dec
mov
dec
fisubs
pushl
adc
sub
mov
push
xor
pushf
lods
xchg
stos
ljmp
jbe
ret
rclb
jl
mov
mov
push
nop
pop
frstor
cmc
movsb
hlt
mov
push
jp
and
jl
or
pop
jns
add
add
xor
and
cwtl
adc
xor
insb
adc
adc
hlt
aam
cmc
imul
mov
push
rorl
xor
hlt
das
cli
test
stos
mov
mov
ret
inc
xchg
rol
or
or
and
scas
aad
out
xor
adc
movsl
or
enter
addr16
or
fidivrs
test
xor
xorb
add
movb
repz
mov
lahf
mov
inc
int3
xlat
xor
add
mov
movsl
jns
daa
jne
hlt
mov
es
pop
shlb
cmp
pop
filds
mov
nop
stos
sbb
imul
bound
jmp
xor
in
adc
dec
popf
sahf
fdivrs
and
or
hlt
cmp
and
and
mov
mov
mov
shl
insl
into
mov
adcl
or
dec
push
aam
sbb
in
roll
xlat
lcall
lahf
movsl
sub
loope
ds
and
mov
cmp
adc
mov
loop
loop
cld
push
xchg
push
aam
sub
push
out
xor
mov
push
cmpsl
push
adc
xlat
movsl
rcr
outsl
rcll
int
sub
and
lcall
test
hlt
mov
fiadds
test
insb
roll
fimuls
lds
leave
movsl
push
add
mov
shll
push
loop
test
decw
js
jp
je
nop
mov
in
and
push
lret
xchg
add
test
jo
lret
nop
repnz
enter
mov
scas
cmc
jo
imul
xor
lret
lcall
cwtl
rorb
outsb
push
loop
bound
imulb
mov
shll
stos
popa
addr16
adc
leave
mov
or
mov
ss
aaa
dec
shll
jnp
not
jecxz
sbb
push
imul
jb
nop
inc
imul
or
mov
sbb
fsubp
mulb
mov
xor
cmp
jno
fists
push
mov
int3
lds
inc
outsl
enter
out
nop
adc
iret
dec
stos
dec
xchg
leave
or
jo
fcoms
iret
rorl
imul
push
dec
jnp
lret
sub
mov
jg
sbbb
xlat
and
pop
sbb
cmp
arpl
mov
sahf
std
imul
mov
add
adc
sub
sbb
ret
mov
add
or
in
iret
dec
push
mov
sti
das
dec
mov
out
xor
xor
or
cmpsl
lret
rclb
jbe
xchg
xchg
sarb
loopne
cmpsb
in
aas
pusha
imul
inc
leave
jnp
add
jle
push
cltd
mov
pusha
ljmp
shlb
sti
push
mov
inc
ss
lock
sbb
jb
xchg
inc
pop
loope
testb
push
leave
jge
adc
dec
mov
rcl
leave
lahf
outsb
call
aad
fisubs
loope
push
xor
nop
test
inc
cmpsb
incb
into
add
lcall
mov
repnz
lods
xchg
and
pusha
jns
das
and
adc
cmc
push
repnz
jge
dec
imul
mov
mov
adc
rcl
in
or
lds
scas
nop
cmp
adcl
inc
in
lret
lret
mov
mov
adc
aad
or
mov
push
aam
clc
and
cwtl
fwait
xchg
in
rclb
int
add
std
call
hlt
mov
mov
rcrb
xor
out
push
aad
scas
mov
push
push
lret
mov
mov
cmp
or
shrl
shrb
mov
daa
push
push
fisubrl
and
jp
cmp
sbb
push
leave
xor
mov
mov
fldcw
test
leave
dec
stc
aad
inc
lods
jo
aam
fidivrl
movsl
out
enter
or
test
sbb
sub
mov
cs
push
mov
adc
imul
dec
imul
mov
daa
dec
inc
into
nop
mov
or
mov
push
movsb
das
imul
jp
mov
daa
pop
jns
jl
int3
mov
les
pop
imul
fbstp
dec
add
xchg
adc
rorl
jge
in
or
mov
ja
pop
loope
test
dec
fsubs
mov
es
or
mov
push
xchg
or
loop
arpl
stc
add
nop
xor
pushf
jbe
ret
ljmp
push
negb
push
mov
xchg
adc
sbb
jnp
add
outsl
jmp
lds
in
add
adc
dec
xor
cmpsb
mov
out
add
lret
mov
xchg
pop
push
lcall
sub
js
enter
xchg
jmp
or
loope
xlat
or
add
xorl
rcrb
jae
rcr
stos
mov
inc
mov
or
repnz
xchg
or
cwtl
lcall
lods
inc
je
repz
cmpsl
mov
push
dec
lret
xchg
push
and
out
dec
sub
mov
lret
js
loopne
xchg
mov
data16
or
addb
out
lret
or
or
adc
scas
mov
bound
out
mov
test
adc
jns
xorb
jno
loopne
pop
enter
aad
popa
adc
xchg
xor
cmpsl
fsub
imul
adc
out
aaa
int
mov
mov
ret
xor
ss
call
mov
add
push
daa
movsl
cmc
or
jp
mov
push
push
push
jne
sahf
mov
adcl
sbb
lret
xor
push
and
scas
out
sub
movsl
inc
int
mov
lds
sbb
fcoml
iret
cmp
leave
pop
cmc
dec
mov
sahf
rorb
bound
lret
fs
xchg
cld
nop
mov
dec
dec
movsb
rcrb
xor
out
addr16
shlb
pop
inc
and
int3
mov
sbb
add
push
xchg
movsb
shrl
sbb
sbb
movsl
scas
xor
mov
or
mov
fdiv
int
push
mov
sub
iret
sbb
dec
lea
pusha
aam
jl
data16
jno
jne
imul
popa
in
fcoms
sar
sbb
cwtl
out
out
movsl
add
sub
push
cmp
aad
in
and
imul
xlat
shlb
popa
mov
mov
outsb
test
mov
call
fdivs
cltd
popf
aas
mov
dec
mov
mov
inc
ret
les
pop
loope
addl
lcall
mov
pop
rcl
mov
or
adc
stc
notb
and
or
sub
dec
in
popf
xchg
sub
xchg
aad
cmpsb
dec
std
rcl
mov
sbb
mov
or
jecxz
std
loope
in
xchg
scas
xchg
fisttpl
or
dec
inc
enter
cltd
cwtl
fmuls
cmc
lahf
mov
nop
and
imul
aas
inc
mov
hlt
xchg
mov
fs
je
js
jp
push
inc
lds
mov
xchg
cli
cmp
outsb
dec
inc
xchg
nop
jns
mov
fwait
in
lds
mov
jmp
lock
mov
cmp
and
mov
push
repnz
test
fnstenv
hlt
cmpsl
es
cmc
int3
cmp
ret
mov
lcall
dec
sti
push
push
lds
pop
push
inc
enter
aaa
mov
movsl
shr
jae
cmp
lret
scas
test
or
or
ret
sub
stos
call
cmc
xor
das
pop
int3
add
jecxz
into
nop
push
jge
mov
jmp
jb
rcrl
adcb
aad
jmp
or
push
mov
pop
mov
je
into
iret
pushf
sub
pop
jns
je
cwtl
stos
inc
add
mov
push
fisubl
popa
pop
xchg
stos
das
push
gs
mov
ja
in
negb
and
inc
mov
fcoml
imul
push
dec
std
xchg
inc
inc
pop
mov
fs
dec
mov
mov
sbb
sarl
mov
in
stc
lcall
xchg
sbb
jle
push
and
jp
pusha
mov
xor
add
or
cmp
outsl
cmp
les
shll
sub
xchg
pop
rcrb
mov
das
rcl
les
cmp
loop
addb
or
mov
dec
xor
mov
psubsb
mov
jno
xchg
xlat
xchg
xor
mov
nop
cltd
out
sbb
shl
leave
xlat
fisubs
and
xchg
mov
pop
pop
xchg
or
push
out
bnd
cmc
push
sub
stos
jno
js
fsubrl
cmp
ja
xlat
fbstp
filds
stos
push
cmp
add
xchg
jno
into
jp
xchg
aam
add
adc
ret
pop
stos
jnp
cmpsl
xchg
scas
aas
repnz
inc
enter
sarb
vcmpss
ljmp
jmp
push
pushl
push
mov
cwtl
rcr
rcl
xor
fcompl
ficomps
shrl
push
stos
ja
lret
jo
sub
xchg
fnsave
xchg
pop
add
filds
aas
sub
push
inc
adc
jb
or
adc
jle
lret
fstpt
ja
mov
mov
or
movsl
xchg
xlat
rorl
cltd
addl
xchg
mov
subl
into
subl
pop
push
inc
cmp
jns
cld
testl
dec
aam
mov
xchg
int3
push
dec
lock
xlat
and
pop
dec
push
cmc
pop
test
adc
aad
push
movb
testl
inc
add
cld
xor
mov
xchg
or
push
nop
add
ret
push
test
xchg
das
loop
jg
subb
aaa
sub
ljmp
or
fmull
xchg
out
out
int
fistps
popl
movsb
mov
ret
test
adc
pop
push
ljmp
mov
inc
call
je
shl
jbe
and
inc
pop
push
call
ret
cmpsb
fsubrp
push
ja
add
andb
out
push
add
nop
pop
or
loopne
push
movsl
into
loopne
and
fwait
pop
xor
mov
inc
or
lahf
sub
adc
sub
dec
arpl
shrb
ficompl
xchg
xor
stc
test
push
les
lods
adc
adc
aas
movsl
push
push
jmp
inc
lods
push
iret
cltd
or
ret
pop
cmpsl
iret
test
shr
imul
das
jg
test
xchg
insb
mov
mull
cwtl
adc
xchg
mov
pushf
dec
imul
ret
pop
test
and
das
mov
mov
pop
sbb
mov
mov
mov
loopne
cs
push
xchg
outsl
push
mov
imul
fiaddl
jns
mov
mov
xchg
movsb
pop
mov
mov
adcb
mov
push
mov
dec
sub
sbb
push
xlat
loopne
rcll
xchg
call
jle
sub
fidivrs
cmc
outsb
jp
xchg
rolb
add
adc
clc
cltd
arpl
adc
ficomps
mov
xchg
jecxz
divl
cltd
int
shll
pusha
into
outsl
in
cmp
test
stos
outsb
loope
ret
cwtl
cmc
push
or
mov
pop
fidivs
adc
ret
mul
orb
cld
iret
ret
and
lea
pushf
andl
inc
add
sbb
jb
jmp
and
ljmp
mov
shrb
mov
xchg
hlt
mov
sub
adc
mov
sarb
out
fmuls
std
fincstp
cmp
es
fildll
sub
mov
test
orl
xor
mov
andl
mov
test
sbb
mov
inc
or
adc
scas
jp
jle
ja
jne
or
fadds
mov
ret
cmpsb
xor
jg
clc
cmp
mov
test
cmp
jg
or
cwtl
xchg
adcl
lret
pop
jo
roll
leave
push
int3
mov
inc
lods
rclb
aam
ror
sarb
into
imul
loope
out
add
aam
xchg
xor
sarb
adc
imul
popa
xor
jle
in
and
ljmp
mov
inc
mov
test
cmp
push
push
or
push
dec
aad
push
test
or
movsl
jle
lock
insl
gs
fcoml
mov
mov
xchg
enter
in
lods
sbb
adc
cld
xlat
cmc
inc
pop
nop
or
sahf
lret
mov
movsl
xchg
add
int
sub
jle
cmp
out
push
nop
int
orb
pop
les
stos
movsl
mov
fdivl
subl
lock
stc
int3
pop
xchg
cmpsl
cld
xchg
nop
fldl
in
ror
jne
pop
lcall
in
or
into
sarl
xor
cmp
add
inc
enter
jmp
and
xchg
jns
test
in
lea
mov
mov
lcall
cmpl
mov
xchg
mov
xor
nop
mov
test
or
icebp
add
push
test
fsubr
xor
cld
mov
sub
dec
dec
push
fadd
mov
insb
lods
adc
xchg
adc
aad
insl
hlt
mov
jnp
inc
pop
dec
subl
xchg
inc
aad
pushf
jp
xlat
sub
scas
mov
xchg
inc
stos
and
or
addb
enter
imul
mov
xchg
or
xchg
push
add
mov
jmp
mov
incb
cmp
adc
or
push
push
add
inc
pop
in
inc
or
sbb
lret
jmp
fcmovnb
cmpsb
lods
inc
xchg
inc
mov
xchg
scas
inc
dec
int3
add
mull
xor
push
les
add
mov
jmp
mov
flds
aad
jmp
push
lahf
xor
mov
adc
xchg
ds
xchg
dec
movsb
fcmove
mov
or
mov
inc
xor
mov
arpl
call
lds
jae
lret
and
mov
pop
lods
rcrl
incb
push
jne
es
dec
hlt
mov
jb
loop
rorb
popf
mov
shlb
andl
mov
push
mov
jle
add
inc
add
xlat
push
lcall
adc
xchg
inc
sub
lret
pusha
insb
sub
dec
jg
addl
push
or
add
pushf
call
outsl
and
lea
ljmp
cltd
mov
sbb
mov
dec
xchg
xlat
lea
xchg
aaa
pop
repz
mov
test
xchg
mov
fistl
fisttpll
dec
rcl
and
xchg
fistl
push
outsl
sub
repnz
inc
jnp
stos
les
aaa
in
add
hlt
mov
add
push
js
mov
and
xor
iret
jge
lcall
cmp
xchg
adc
sbb
ror
icebp
add
sub
or
fsubrl
cli
imull
nop
in
loopne
push
cmp
dec
or
pushf
mov
inc
sub
mov
push
movsl
dec
push
ds
in
push
jo
les
xchg
adc
in
jmp
adcb
out
les
jl
push
pop
test
imul
sub
ror
fsub
push
xor
xchg
loope
clc
cmpsl
xor
sub
add
stos
pop
test
pop
mov
daa
mov
flds
and
mov
xchg
shl
js
in
or
mov
ret
and
pop
adc
in
mov
add
adc
sbb
mov
inc
sub
les
cmp
les
aaa
nop
add
out
sub
je
mov
sahf
adc
push
sub
into
jg
inc
mov
cmp
ljmp
xor
sarb
jno
or
call
cmp
add
inc
lcall
imul
push
mov
push
rorl
xchg
scas
add
cltd
push
inc
neg
or
jp
call
in
or
pop
add
dec
inc
ja
pushf
das
sub
lcall
loope
std
mov
or
push
pop
inc
in
pop
popf
mov
nop
pop
hlt
dec
fcomps
cwtl
pop
lock
fdivl
sbb
scas
or
sbbb
fcoml
cmpsl
loop
jg
paddq
sbb
outsb
push
or
xorl
scas
mov
inc
fisttps
ficomps
and
add
mov
mov
cltd
sub
or
lods
bound
mov
and
mov
out
lret
mov
add
mov
test
sarb
das
fnsave
daa
adc
mov
lds
mov
mov
pop
xchg
mov
in
lods
cmp
cmc
enter
into
pop
add
or
test
xor
psrlq
cmp
clc
fisubrs
jbe
jae
jne
xor
push
push
jge
sub
mov
nop
mov
add
adc
mov
movsb
or
das
cmpsb
pop
and
inc
xchg
add
shrb
xchg
sub
hlt
mov
mov
shll
test
int3
stc
mov
aam
test
and
loop
repz
std
div
gs
movsb
or
test
xlat
js
scas
push
adcb
in
jge
lods
or
in
mov
xchg
flds
jle
cmp
pop
mov
sub
out
push
testb
test
shlb
cmp
imul
mov
pop
xchg
jb
xchg
test
mov
or
pop
jo
aad
movsb
inc
movsl
and
fistpll
pop
jne
push
add
add
in
xchg
xor
test
test
cmp
push
jb
fdivp
aad
add
jne
int3
in
rcll
fwait
jmp
pop
push
xchg
and
and
fbld
aas
pop
loopne
or
inc
mov
push
cmp
push
mov
insb
cli
xor
or
xchg
add
pop
cmp
xchg
xor
les
xlat
into
or
lods
pop
sbb
jmp
insl
sub
jl
sub
add
sub
es
ljmp
pop
mov
dec
dec
sbb
or
and
dec
ffree
fisubrs
insb
or
push
mov
movsb
adc
sbb
je
cmp
cmp
dec
sub
or
pop
xor
fs
pop
dec
xlat
mov
fnstenv
ljmp
sbb
mov
test
adc
shll
cmpsb
xchg
and
test
add
aad
int
sub
lret
cmp
int3
stc
xor
pop
push
fimull
mov
fsub
push
pop
test
loopne
ja
push
pop
jge
lods
mov
scas
lods
xchg
pop
sti
xor
push
sbb
aaa
mov
ret
add
into
fsubs
sbb
xchg
into
loopne
or
xchg
push
jbe
adc
fadds
and
xor
xchg
mov
push
or
addb
arpl
roll
arpl
pop
subl
sti
mov
mov
jp
mov
aas
loop
mov
and
xchg
sbb
iret
sbb
lret
dec
or
jge
add
push
or
mov
rcr
pop
cmp
mov
lods
stc
xor
push
test
fnstsw
add
add
test
mov
sahf
enter
pushf
push
xchg
outsb
andnps
fstps
push
sub
jmp
daa
cmp
inc
test
and
dec
rcr
pop
xchg
leave
cwtl
sub
sub
dec
sub
jb
xchg
ds
loopne
jbe
xchg
dec
and
shlb
out
push
cs
sub
addr16
jns
pop
test
push
jbe
xchg
loop
fs
repnz
mov
add
aam
arpl
adc
inc
test
fstl
or
shl
pushf
or
pop
arpl
push
adc
mov
jg
in
add
push
sbb
xchg
mov
test
dec
sahf
lods
and
pop
lock
jo
xchg
lret
in
lods
xor
cs
cmc
push
pop
lock
pop
cwtl
jno
dec
push
shll
imul
push
sbb
sbb
mov
outsb
push
mov
jbe
inc
rolb
sub
xor
movsl
in
inc
add
sti
or
in
adc
xor
or
icebp
or
cmp
fbstp
add
adc
mov
nop
sti
hlt
xchg
push
sub
add
add
push
push
pop
popf
inc
xchg
or
movb
mov
mov
hlt
mov
test
loope
mov
stos
outsl
xchg
or
mov
mov
pop
xchg
lock
jo
jbe
add
rorl
rcll
lds
scas
and
push
aas
mov
or
outsl
pop
ss
mov
lea
mov
cmp
ss
dec
mov
cmc
lret
lea
sbb
mov
add
rorl
leave
xchg
jl
sarb
rorb
ret
hlt
push
lret
inc
cmp
pop
jne
movsb
push
imul
or
xor
cmc
clc
inc
in
pushf
shll
mov
repnz
push
cmp
adc
ret
pushf
ror
js
dec
mov
xchg
leave
add
push
rorb
sti
sbb
test
nop
xor
sbb
or
cld
sub
aad
aas
push
sbb
xchg
xor
into
mov
daa
inc
test
mov
inc
fnstcw
lcall
xor
loope
mov
sub
orb
rorb
adc
add
je
pushf
orb
and
test
arpl
test
iret
lods
into
and
pop
inc
int3
mov
or
pusha
shlb
faddl
bound
sbbl
lahf
enter
mov
mov
inc
in
scas
or
pusha
mov
imul
mov
sbbb
xor
or
or
and
inc
dec
push
les
ret
fwait
ret
adcl
cmp
cli
repz
daa
jmp
out
push
aaa
xchg
and
adc
repz
lret
fnsave
fcompp
sbb
movsl
sahf
adc
inc
nop
in
adc
mov
leave
mov
les
ret
pop
lock
lea
xchg
or
adc
sbb
decl
sarl
addl
mov
mov
rolb
or
mov
lds
jno
pop
iret
in
or
cs
lds
mov
push
push
idivb
fcoml
cmpsl
lret
aam
dec
adcl
sbb
sarb
fcmovu
dec
sub
mov
inc
dec
das
lret
or
into
test
mov
or
mov
lret
mov
jb
sbb
or
lock
mov
sub
orl
repnz
cmp
xor
fnstcw
cltd
inc
mov
mov
stos
sti
jno
mov
cmp
jbe
inc
leave
out
ffreep
inc
and
sti
mov
fists
add
or
lcall
aas
test
push
or
js
xchg
push
or
lods
xor
mov
lods
pushf
or
adcb
int
ds
lock
mov
jnp
lea
mov
mov
enter
sbb
push
in
mov
jge
dec
mov
aam
xchg
in
int3
jl
or
mov
inc
rolb
dec
rorb
cmp
out
in
int3
or
adc
push
push
xchg
add
imul
cmpsb
mov
add
test
mov
pop
xchg
or
dec
out
into
mov
fsubr
jp
jp
movsl
enter
dec
mov
es
int3
mov
cld
mov
xchg
clc
cs
xchg
movsl
enter
mov
or
in
call
mov
adc
xor
xlat
inc
mov
les
mov
push
lret
push
imul
stos
inc
or
imul
lods
int3
and
dec
pop
test
mov
adc
lret
das
sub
pop
push
rolb
xlat
or
mov
jno
mov
into
hlt
xchg
stos
dec
leave
add
xor
test
mov
test
mov
add
mov
out
dec
adc
sub
and
dec
xchg
test
test
or
cmpsb
pop
pop
xchg
dec
push
or
pop
and
sub
mov
xor
enter
popf
push
xor
xchg
repnz
adc
test
arpl
mov
inc
out
hlt
jbe
fs
xchg
stos
dec
inc
cmp
stos
leave
dec
mov
fldl
movsb
mov
xchg
shlb
and
test
mov
add
push
dec
adc
js
ret
or
dec
dec
ret
cmp
cli
out
ret
adc
xchg
pop
and
mov
xchg
xchg
movsb
fmulp
xchg
cwtl
cmpsb
repnz
sarb
ret
cs
fs
dec
lea
mov
xchg
mov
loopne
cmp
cmpsl
and
test
in
rcrl
mov
jg
cmp
adc
xchg
mov
fwait
pop
xor
stos
or
mov
mov
outsl
jp
sbb
dec
mov
xchg
bound
addr16
add
mov
scas
rolb
pop
adc
or
fnstsw
sbb
lds
scas
enter
xor
adc
xor
enter
mov
cmpsb
inc
jl
sbb
pusha
xor
inc
fsts
stos
inc
mov
inc
nop
or
test
push
cmp
sub
xor
jbe
mov
adc
clc
xchg
lds
rol
in
lcall
call
test
push
jnp
clc
out
ljmp
nop
xchg
mov
jp
test
jae
fldt
xor
das
pop
lret
inc
inc
or
imul
cmc
mov
xchg
call
in
addl
sub
sti
mov
sub
cmp
or
imul
cmc
test
xchg
pop
inc
ret
and
push
dec
in
negb
aad
out
daa
jl
out
repnz
mov
pop
mov
cmpsb
loop
std
dec
movb
push
cmc
insl
mov
andb
rorl
imul
adcb
mov
xorb
ds
push
push
rorb
add
pop
xlat
cli
mov
mov
aas
enter
orl
push
xchg
dec
xchg
or
decl
pop
movsb
mov
lret
in
inc
cltd
aam
sbb
into
mov
sub
fsubs
js
out
mov
adc
add
and
shrb
movl
xor
mov
je
cmp
cmpsb
xor
and
push
adc
xchg
mov
sbbl
es
scas
pop
popf
inc
xchg
dec
xchg
cmpsb
pop
enter
mov
dec
inc
int3
int
lea
pop
cmp
inc
dec
icebp
mov
les
add
cmpsb
leave
adc
xchg
leave
inc
aas
mov
call
xchg
mov
clc
nop
imul
mov
repnz
and
jno
lods
mov
sub
adc
dec
mov
dec
fcoml
aam
xor
hlt
fistpll
in
sbb
lcall
cwtl
push
pushf
mov
cld
test
jb
jg
popf
outsb
jb
xchg
mov
sub
daa
aam
enter
dec
sub
and
jmp
popl
les
das
and
movsb
inc
movsb
aas
loop
jbe
mov
push
icebp
dec
inc
mov
sub
aas
xchg
fs
adc
sub
fiadds
mov
push
fldz
mov
out
mov
jg
pop
sahf
or
push
sub
fmull
adc
lds
frstor
out
xor
lods
xchg
popa
lahf
push
js
pop
call
cmpsb
std
es
adc
jl
lret
imul
pop
movsl
aad
xor
pop
and
pusha
push
dec
inc
inc
js
fidivrs
cmp
fistpll
subb
push
and
mov
fcmovne
xchg
mov
xchg
aam
jns
dec
test
lcall
and
movsw
imul
cwtl
mov
sahf
pop
push
xor
or
nop
sub
or
fsts
insl
mov
sub
xchg
icebp
and
dec
mov
push
cld
daa
ret
jmp
mov
inc
shlb
lret
pop
or
hlt
repnz
mov
orb
mov
jne
add
mov
aas
stc
jo
pop
popa
test
repnz
push
mov
cmp
xlat
pop
push
push
or
ret
shr
push
pop
lds
hlt
mov
shl
lret
cli
mov
into
pop
sahf
ljmp
shl
and
xchg
or
in
mov
sub
roll
ds
push
in
pushf
cmp
movsb
cli
mov
pop
loopne
movsl
add
and
test
out
pop
mov
xor
inc
xchg
or
imul
push
mov
add
pusha
sbb
push
mov
inc
mov
mov
or
popa
fldl
mov
fisttps
xchg
jo
jmp
cld
xlat
aam
xchg
movsb
mov
mov
cs
out
mov
push
fxch
push
lret
cmpsl
fldenv
pushf
rcrl
xchg
shl
dec
test
xor
lret
add
jo
test
or
adc
arpl
pushf
or
sub
lret
test
add
dec
mov
or
test
adc
lahf
inc
jns
dec
jno
subl
inc
mov
lahf
mov
imul
jbe
ljmp
add
mov
ror
hlt
cmp
pop
or
out
lock
add
jle
test
sub
jno
xor
loope
pushf
in
mov
shl
es
sub
ret
ret
push
sbb
fsts
inc
ja
or
mov
mov
adc
setl
adcl
daa
pop
fsub
jecxz
mov
mov
dec
shll
dec
mov
xor
xchg
pop
push
add
stc
pop
cli
cmpsb
lods
or
cmp
dec
jle
hlt
push
mov
or
mov
add
push
jns
or
std
gs
sbb
push
cld
xchg
mov
mov
mov
sti
jo
xor
jmp
mov
scas
call
je
inc
cld
cmp
fstl
stos
mov
mov
push
fisubrl
and
xor
push
fisubl
arpl
pop
jbe
jp
xor
inc
lret
mov
mov
orl
shlb
stos
cltd
sbb
add
or
cld
nop
adc
mov
scas
in
stos
mov
call
pop
add
sbb
pop
mov
push
aas
test
movsl
aam
test
inc
lods
sub
pop
shll
cmpsb
and
mov
mov
addb
orl
hlt
bswap
dec
mov
test
mov
mov
imul
arpl
data16
cmp
js
or
cmp
xchg
jns
aas
rclb
dec
mov
jae
mov
hlt
xchg
xlat
shll
xchg
xchg
sahf
popf
fwait
sbb
insb
or
jnp
mov
rclb
mov
test
mov
cmpsb
arpl
and
mov
push
mov
xor
jecxz
aam
mov
push
add
mov
jo
pop
dec
inc
repz
or
sarb
inc
sti
adc
dec
push
stos
mov
push
inc
xor
movsb
hlt
lret
inc
or
inc
jo
mov
shlb
aam
xchg
mov
stos
sahf
mov
sbbb
fmuls
mov
movsb
cmpsb
orl
and
enter
test
enter
push
lret
push
push
jmp
mov
mov
mov
loopne
aaa
or
jecxz
enter
mov
xchg
orl
push
mov
loope
in
out
xchg
push
add
or
add
inc
arpl
ret
nop
jl
mov
mov
push
es
inc
stos
inc
mov
xchg
xchg
imul
mov
or
test
mov
ret
shll
les
or
test
pushf
out
adc
dec
xchg
xchg
sbb
leave
call
or
adc
std
je
cmc
or
or
xchg
cmp
ja
jbe
test
jg
cmp
cli
cmp
lea
push
lock
and
jle
and
inc
pop
fiaddl
mov
rol
cmpsb
mov
imul
aam
lods
or
je
adc
enter
pop
mov
int3
mov
or
or
rorb
and
add
pusha
push
cld
cwtl
pop
imul
jbe
mov
int
rcl
cmp
lret
inc
mov
xchg
pop
lea
ss
int3
push
loope
adc
mov
add
imul
int3
test
pushl
xor
inc
popf
mov
jl
add
sbb
cmp
push
int
rorl
div
outsl
aad
mov
xchg
mov
mov
nop
shlb
push
ret
add
aad
rclb
sbb
add
icebp
fistpll
repnz
notb
loope
mov
adc
int3
lods
xor
mov
mov
imulb
mov
jg
cmpsb
jecxz
fdivp
inc
or
test
adcl
push
push
pop
push
cmp
addr16
in
push
jl
fnstenv
cmp
xor
push
push
icebp
and
mov
and
test
dec
sbb
jle
adc
adc
ja
adc
add
or
push
cmc
cli
lret
fidivrs
sbb
lret
decl
aam
mov
lcall
inc
orl
mov
movsl
inc
std
out
adc
push
jns
or
ja
mov
and
test
xchg
daa
and
xchg
clc
inc
fisttps
cmp
cmp
adc
popf
into
inc
nop
test
dec
lahf
repz
or
sbb
dec
stos
dec
rorb
cmp
pop
scas
movsl
inc
jl
movsl
rorb
imul
or
mov
int
cmc
jb
mov
inc
mov
xchg
pop
leave
hlt
or
das
insl
test
not
inc
movsb
gs
jo
dec
cs
jbe
cltd
or
leave
je
inc
and
pop
loopne
lock
std
dec
mov
addl
jnp
and
or
mov
or
push
dec
push
dec
xor
xchg
fwait
push
mov
and
jmp
ficoms
cld
test
xor
clc
negb
xlat
jns
xor
mov
leave
or
stc
inc
int
mov
out
xor
arpl
insb
sub
mov
fstpl
xchg
inc
add
and
mov
negb
or
push
out
sub
adc
xchg
sbb
sbb
cmpsl
inc
movsl
sub
enter
xor
int3
icebp
or
inc
push
adc
or
cmp
push
mov
adc
xchg
xlat
test
test
ds
adc
sarb
mov
fnstenv
mov
lds
orl
mov
inc
add
aas
lock
incb
pop
jle
xchg
jge
cli
push
sarl
adc
mov
scas
call
ror
mov
addb
sar
mov
xor
push
inc
push
xor
xchg
pop
sbb
subl
ret
add
shrb
xchg
mov
lods
data16
std
insb
xchg
movsl
jnp,pn
pop
push
push
std
push
mov
and
enter
xchg
or
mov
fsubrl
lock
mov
mov
inc
add
pop
push
je
lret
cmp
xchg
add
cld
pop
and
push
test
add
cltd
out
popa
inc
pop
inc
lret
data16
outsb
inc
or
mov
push
shrb
lea
or
dec
sar
js
call
scas
jbe
xchg
push
scas
add
mov
call
aas
test
rorb
pop
pop
add
les
shl
xlat
mov
mov
cmp
mov
mov
addb
push
sub
push
inc
lds
fidivrl
pop
stos
cmp
xchg
sahf
test
loope
sub
dec
int
outsb
ret
push
and
shlb
adc
mov
rclb
mov
and
add
and
dec
clc
xchg
or
push
sahf
xchg
push
lds
pushf
ljmp
lods
pop
sub
jne
cmp
push
xchg
or
pusha
add
imul
or
pusha
stos
fisttps
mov
sti
enter
dec
cwtl
push
clc
cmp
xchg
rol
dec
div
outsb
push
xchg
sahf
testb
cmpsl
mov
jb
enter
dec
nop
push
add
xchg
cld
xchg
adc
into
jg
and
int3
pusha
mov
sub
mov
mov
fmuls
nop
sahf
mov
xorb
add
mov
pop
enter
aad
cmc
fcoml
scas
imul
mov
lds
aaa
addb
pop
mov
adc
mov
popl
adc
adc
test
inc
mov
out
xchg
pop
and
xor
jge
xchg
call
imul
dec
push
shrb
scas
cmp
cmp
mov
jbe
clc
dec
call
stc
xchg
shl
or
xchg
cmp
daa
sub
scas
lods
xor
cs
sub
cmpsl
insb
push
xchg
mov
test
mov
rcl
push
inc
cmpsb
jne
mov
xor
and
adc
sub
nop
cli
not
loopne
adc
or
push
ret
adcb
scas
nop
fmuls
rcrl
sub
dec
add
jle
xor
xchg
subb
xorl
movsl
jle
jp
and
xchg
or
jl
in
mov
stos
test
add
insb
sar
cltd
dec
ljmp
xchg
int3
ds
push
mov
call
cmp
jmp
jp
test
clc
jg
mov
dec
rolb
xor
mov
outsl
mov
test
addl
clc
and
push
lcall
or
mov
dec
bound
dec
jne
mov
xchg
aaa
inc
mov
xchg
or
loope
push
jnp
ja
mov
push
lret
test
orl
lock
pushf
popl
xchg
mov
or
pop
mov
pop
les
testb
cmp
addr16
inc
imul
and
jecxz
mov
mov
mov
mov
mov
add
add
das
mov
inc
outsl
push
nop
pusha
clc
test
jnp
cld
mov
or
xlat
mov
inc
mov
pop
mov
push
pop
rcrb
or
mov
mov
inc
dec
mov
adc
push
pop
mov
loopne
and
rcrb
push
add
pop
sbb
jmp
test
addr16
cltd
and
les
dec
inc
jge
les
inc
sahf
ja
ret
les
ret
rolb
enter
mov
fstpt
or
dec
push
int3
sbb
ds
push
fmull
lcall
pop
jnp
or
push
adc
dec
push
dec
shlb
aam
mov
or
les
sub
inc
aam
cs
test
icebp
sbb
xchg
test
jnp
adc
dec
fsub
push
ret
stc
es
xchg
or
iret
int
ljmp
dec
adc
out
jae
pop
or
mov
ljmp
sub
nop
dec
dec
enter
add
test
add
mov
js
clc
mov
or
jb
imul
dec
inc
mov
push
orl
out
inc
mov
add
cmpsb
add
xchg
mov
mov
inc
lahf
ja
cmp
jns
imul
aas
sub
or
pushw
cmp
inc
mov
lds
add
nop
scas
push
jne
test
xor
inc
movsl
xchg
adc
inc
mov
enter
fmull
rcll
xchg
nop
mov
xchg
dec
addl
aas
int3
divb
fsubrl
dec
add
push
pop
aam
or
push
out
fstps
cmpl
jge
rorb
add
outsl
nop
inc
shl
push
xor
pop
les
shl
mov
mov
xor
sub
mov
shlb
push
xchg
mov
cld
xchg
add
lods
test
dec
push
addb
push
je
ds
push
xchg
orb
dec
pop
add
insl
xchg
fcmovb
jle
sub
ret
lahf
cmpsb
mov
dec
mov
pop
in
mov
imul
in
pop
or
push
in
out
push
leave
mov
cwtl
inc
js
mov
mov
jns
adc
adc
add
mov
push
out
out
xchg
xchg
push
xchg
orb
jnp
pop
shlb
sbb
int3
stos
xor
jnp
leave
vunpcklps
mov
adc
and
mov
mov
test
pushf
and
test
mov
shrl
push
int3
sub
movsb
icebp
pop
jns
and
test
mov
dec
push
les
mov
insb
rolb
mov
xchg
mov
push
fs
mov
nop
mov
rolb
arpl
lock
out
les
in
pushf
test
dec
pop
sbb
sub
pop
lret
or
or
js
add
xor
lahf
enter
loopne
cmp
mov
add
xor
jnp
movsb
pop
inc
enter
cmp
aas
ds
xchg
mov
dec
mov
sarb
mov
inc
sbb
ret
xchg
cmp
and
pop
sbb
cmpsl
and
sbb
jo
mov
mov
lahf
sbb
xchg
add
movsb
xchg
mov
or
inc
push
push
cld
test
or
clc
nop
insl
clc
cmp
dec
repnz
shlb
or
jo
cld
jne
enter
dec
fdivrl
pop
xchg
push
xchg
orb
add
cmpsb
and
pusha
les
test
push
call
xchg
enter
movsb
test
add
sub
movsl
pusha
mov
imul
xchg
cli
adc
je
imul
mov
rclb
movhps
ret
add
xchg
mov
add
lods
aad
gs
xchg
nop
adc
mov
mov
and
shll
jns
xchg
test
into
cmp
imul
cwtl
call
ljmp
fdiv
cmp
imul
lods
call
pminsw
hlt
cmp
rclb
lret
mov
enter
sub
ljmp
faddl
mov
call
add
mov
sar
dec
test
iret
sub
nop
sbb
mov
rcll
xchg
call
add
lods
mov
and
lret
mov
sbb
ret
andl
push
scas
adc
test
or
std
out
add
xchg
mov
jbe
sarb
sbb
pop
inc
and
dec
sbbl
mov
mov
nop
pop
addr16
xor
mov
pushf
push
ret
mov
adc
lods
test
mov
call
stos
sbb
jbe
in
lods
mov
mov
insl
fsts
sbb
adc
imul
mov
int3
int3
insl
loope
jecxz
sbbl
fiadds
stos
addr16
fcomps
add
addr16
and
lock
fsubr
out
jb
fcomps
push
mov
sarl
cli
mov
sbb
lock
inc
cmp
mov
dec
push
popf
mov
sbbb
lcall
push
xlat
scas
push
in
cli
test
add
jae
or
enter
pop
add
andl
outsl
adc
pop
cmp
add
divb
inc
cmp
fbstp
push
sar
xor
mul
mov
fstpt
add
xchg
add
rcr
jl
mov
insl
adc
addr16
push
repnz
cmpsl
into
xchg
push
cmpb
mov
sub
dec
jb
std
sbbl
repnz
clc
andb
ss
fsubrl
in
out
xchg
and
call
jnp
in
adc
cmp
push
test
lods
sbb
mov
pushf
rclb
aaa
or
fistl
jb
aas
and
sbb
mov
les
xchg
shr
sbb
repz
lds
mov
mov
xlat
leave
cwtl
imul
sbb
add
ja
dec
iret
xor
jmp
stc
sub
shlb
bound
test
cld
adc
mov
test
mov
aas
adc
or
gs
mov
mov
or
xchg
cmp
popf
stos
ret
mov
sarb
push
jmp
into
test
xor
mov
jp
fnstsw
jne
lcall
inc
rcr
or
inc
jno
repnz
mov
mov
and
cmp
add
dec
out
adc
cltd
xor
and
add
hlt
in
jmp
or
xlat
adc
jae
mov
loope
or
or
xchg
lock
out
lahf
mov
hlt
cwtl
or
push
xchg
fbld
adc
sbbb
rcr
icebp
mov
loop
fdivp
fistpll
sahf
addl
fst
or
cltd
imull
shlb
add
aad
insl
push
mov
mov
ljmp
push
xchg
or
nop
rorl
adc
inc
mov
jmp
loopne
adc
and
sub
fbstp
or
rcrb
or
mov
popa
xchg
std
mov
adc
int3
cmc
push
xchg
or
jl
xchg
and
add
into
jne
fsubrs
scas
add
sub
into
push
xchg
inc
add
and
xlat
ds
add
lds
inc
add
lret
adc
shr
push
fcmovne
xchg
push
or
push
and
fdivrs
xchg
addr16
mov
and
cmc
pop
fcmovnu
xlat
inc
rolb
test
mov
mov
push
lea
dec
std
sub
test
mov
sbb
inc
cmc
jg
outsb
aam
lock
mov
dec
pop
out
dec
xor
iret
ret
inc
idivl
push
jb
inc
mov
cmc
scas
ljmp
xchg
sarl
or
imull
fcmovnu
sbbl
aaa
cld
dec
ljmp
outsb
insb
jae
cmp
pop
add
cmp
lea
xchg
std
mov
lods
into
lods
or
inc
es
sbb
js
xchg
adc
stos
fstps
data16
out
sbb
jo
test
jb
mov
dec
ljmp
sbb
dec
mov
pusha
mov
xor
or
ret
outsb
js
lahf
popl
jo
jle
cmp
push
int
inc
pop
in
dec
adc
pop
mov
mov
ss
leave
push
mov
cmp
mov
rcrb
test
aaa
jp
mov
pop
fwait
loop
rolb
pop
mov
adc
mov
mov
xorb
adc
fs
mov
sub
frstor
lcall
rcrl
and
insb
push
rorb
xchg
xchg
std
mov
into
and
jae
rcll
mov
xchg
pusha
stos
inc
lret
cltd
sarb
or
aam
lods
pusha
sbb
clc
mov
inc
push
cmp
xor
addb
or
scas
ret
in
push
mov
dec
loope
mov
js
int3
pop
dec
lea
push
lock
lods
jno
sbb
jns
and
cmp
xor
xor
int
cmp
push
push
shlb
dec
test
aad
add
stos
sub
je
mov
mov
dec
inc
sub
mov
es
mov
outsl
cmpsl
inc
outsl
xor
imul
push
mov
shlb
sbb
lcall
test
mov
wbinvd
insb
outsb
or
dec
add
jl
mov
or
jo
mov
add
into
jle
jb
jb
dec
xchg
jge
les
andb
jl
push
decl
mov
flds
inc
and
jno
mov
ret
loope
inc
lret
jecxz
inc
mov
cmp
je
nop
pop
cmp
jmp
imul
inc
mov
mov
hlt
lcall
cs
pop
mov
cmp
adc
lret
pop
aad
ret
insl
cmp
mov
xor
sarb
push
xor
adc
movsl
imul
xor
test
enter
je
mov
xor
lods
add
push
sub
pop
jg
std
out
sub
cmp
lret
fs
stos
mov
sub
scas
pusha
inc
mov
je
push
push
add
or
push
dec
sub
push
bound
xchg
cltd
mov
jg
mov
cwtl
stos
addl
ss
jae
nop
push
jl
imul
or
or
hlt
ret
sub
jle
and
xlat
lods
imul
or
cmp
ret
add
xchg
fldcw
xchg
jo
lret
pop
mov
inc
jmp
mov
shrl
popa
and
or
mov
int3
inc
cmpb
push
test
orl
pusha
push
inc
inc
pusha
sbb
adc
mov
repnz
jno
nop
jmp
daa
cmc
and
daa
cld
call
add
jmp
and
xchg
push
pop
aad
xchg
andl
mov
lea
or
icebp
int3
pushf
test
pop
lea
les
jmp
inc
dec
xchg
sub
adc
dec
clc
fs
in
xor
jb
int
jo
les
lods
addl
stc
call
mov
insl
xlat
bound
xchg
push
sahf
mov
cmp
fcomps
movb
cwtl
adc
push
dec
xchg
adc
cwtl
xor
mov
lds
adc
add
mov
push
inc
lock
push
lret
dec
adcb
jb
orl
jle
idivl
and
inc
bound
out
inc
adc
mov
or
imul
call
push
mov
les
call
cmpsb
push
test
mov
int3
orl
mov
or
mov
cltd
rorl
int
ljmp
fadds
cmc
clc
add
mov
lret
in
mov
cltd
leave
mov
popf
push
nop
nop
pop
inc
stos
imul
ret
loop
cmp
sub
pushf
and
daa
mov
dec
les
jb
into
mov
ret
push
mov
mov
mov
ret
fsts
out
xchg
add
test
call
xchg
sub
popa
scas
cmp
out
pop
push
xor
dec
fdivl
add
movl
andl
jmp
sbb
daa
xlat
subb
rcl
cmp
lods
andl
nop
call
push
loop
lods
shll
mov
mov
fst
pop
push
les
sbb
psrlq
and
adc
int
sbb
xorb
mov
jl
xlat
xlat
mov
mov
lahf
add
add
mov
mov
mov
hlt
pop
imul
lods
jg
xor
or
ds
insl
push
mov
ljmp
add
ret
lods
ss
loope
lds
jmp
push
loop
lret
outsb
cwtl
int3
insl
mov
cs
popa
sarb
push
cmp
push
pop
rol
push
stos
in
into
ss
jp
jg
lods
cmp
fs
ffreep
fildl
xchg
push
xchg
daa
xor
imul
adc
andl
cld
xchg
popf
neg
xchg
push
push
sub
pop
pop
jmp
xor
mov
xchg
roll
inc
aad
ja
or
in
bound
ds
test
push
loop
pusha
mov
cmc
test
sahf
test
lret
stos
push
ret
fs
shr
add
add
push
or
ret
ds
adc
fst
cmp
mov
xchg
mov
mov
push
scas
jle
mov
or
sub
mov
aam
jl
enter
lds
dec
sbb
push
push
inc
int3
leave
lds
push
xchg
sahf
scas
in
in
mov
aad
jl
les
rol
xchg
mov
into
push
aas
xchg
call
pop
dec
mov
push
xor
loop
mov
push
xchg
push
jnp
test
dec
loopne
add
dec
push
add
ljmp
and
cwtl
aam
sub
jno
lcall
add
mov
les
pop
jge
sarl
mov
inc
xorl
add
adc
mov
and
mov
test
pop
xchg
cmp
jle
lret
mov
je
loop
int3
fcmovbe
popa
push
sub
mov
mov
stos
push
mov
add
sbb
test
movsb
add
sti
cmp
xchg
call
sub
push
pop
sub
fldcw
sbb
in
ds
outsb
adc
add
sti
insb
aam
fisubrl
jne
push
scas
test
or
xchg
jmp
xor
pushf
xorl
iret
into
adcb
and
or
pop
xchg
insl
fst
xor
cmpsb
xchg
dec
shlb
test
mov
mov
or
test
outsl
iret
mov
rcl
push
out
scas
rcll
xchg
adc
mov
popa
scas
notb
mov
inc
cmpsl
pop
xor
in
xchg
and
sbb
xchg
push
hlt
test
cmc
rcll
or
roll
push
xor
push
fdivr
pushf
test
addl
and
xchg
cmc
lea
inc
fcmovnb
imul
ljmp
pop
inc
xchg
xchg
and
into
xchg
mov
cs
rcr
divb
push
push
inc
mov
call
dec
and
mov
stc
or
mov
notb
or
rclb
and
in
les
push
fstl
popf
mov
lods
popa
gs
pop
pop
test
add
stc
push
cwtl
xchg
vpaddw
out
mov
push
push
pop
sbb
cmc
xchg
ljmp
jno
loope
pusha
mov
push
push
in
ds
xlat
push
lock
mov
lret
pop
rclb
jo
lahf
xchg
push
jo
and
test
enter
out
mov
test
clc
imul
imul
icebp
adc
jecxz
mov
clc
les
sub
cmpsl
mov
shl
aam
pop
mov
aad
sub
mov
scas
loope
and
sbb
cmp
or
cmpsl
jle
adc
cmpsl
jo
add
movsl
pop
enter
test
add
xlat
push
divb
dec
push
push
lock
icebp
stos
bound
inc
fs
inc
insb
pop
nop
xor
fisttpl
xchg
inc
loope
call
and
xor
mov
add
or
ss
lock
into
js
dec
sub
sub
push
in
mov
movsb
jns
inc
ret
fisttpll
out
xchg
cltd
ljmp
stos
push
mov
xlat
sbb
arpl
cmc
cwtl
xchg
mov
imul
xlat
jecxz
push
aam
mov
leave
jle
jns
and
hlt
test
adc
xchg
push
insb
cmp
mov
push
mov
loope
xchg
imul
mov
ror
sbb
hlt
in
shrl
dec
inc
fidivs
or
inc
cmpsl
mov
cmp
sbb
addr16
cmp
sbb
test
lods
rclb
mov
cmp
mov
gs
xchg
pop
or
pop
dec
rcrb
mov
and
lcall
aam
pop
jno
mov
mov
test
popf
mov
xchg
test
or
mov
pop
mov
outsb
subl
loop
mov
jnp
repnz
or
adc
aas
mov
dec
or
out
mov
inc
outsl
mov
call
adc
or
and
adcb
cli
xlat
imul
in
ds
sub
xor
daa
aam
lea
jle
sbb
into
std
sub
inc
imul
mov
cmp
jmp
xchg
jb
push
mov
andb
xor
xor
push
mov
out
roll
lods
addb
push
pop
xor
loope
push
hlt
jle
mov
fsubs
xchg
cmpl
mov
push
lcall
loop
and
cmc
add
and
xchg
imul
ret
inc
in
and
mov
popa
xchg
movsb
test
shrl
jno
mov
addr16
or
aaa
shlb
rorl
ret
in
cmc
mov
mov
popf
mov
mov
gs
in
push
adc
add
scas
inc
push
imul
imul
cmc
or
scas
rclb
loopne
loopne
fisubs
ret
rolb
jle
leave
mov
adc
pop
enter
hlt
mov
lods
mov
push
mov
sarl
xchg
cwtl
jne
sub
cwtl
rcrl
push
into
bound
in
push
cmpsb
mov
mov
or
loopne
flds
mov
push
cmp
ret
enter
sbb
and
test
test
test
adc
pop
movsl
outsb
or
nop
enter
mov
or
and
inc
out
clc
push
push
lcall
into
dec
nop
dec
jl
mov
and
xchg
sti
jg
adc
out
enter
mov
mov
mov
xchg
adc
or
adc
adc
out
mov
cmpsb
cmp
enter
nop
dec
popf
mov
adc
aad
loop
or
xchg
cld
sbb
or
xchg
dec
sbb
dec
nop
push
les
xchg
jnp
jnp
inc
mov
mov
cmc
fidivl
fnstenv
dec
and
out
xchg
lea
arpl
out
scas
lea
stos
shr
nop
cwtl
push
mov
mov
xchg
mov
xchg
icebp
mov
mov
es
rorl
mov
rorb
or
mov
adc
push
jmp
ja
in
add
xchg
push
xchg
jl
ds
cltd
cmp
dec
loopne
mov
scas
or
fst
int3
movsb
mov
jl
repnz
cmp
enter
or
adc
mulb
lods
adc
movsb
in
aad
stos
rorb
rorb
aad
jg
adc
or
push
sarl
sbb
lahf
int
lods
xchg
jg
push
rcrl
xor
cmc
xchg
int
jecxz
xchg
push
jl
sbb
cld
movsb
sahf
xchg
add
lods
xchg
fbstp
jl
int
cwtl
stos
push
mov
in
jmp
ja
test
ret
in
xchg
out
xchg
into
or
mov
addr16
xor
push
sarb
enter
adc
in
xchg
jp
repnz
shr
sub
pop
rcr
mov
rcr
aad
mov
dec
jb
and
loopne
insl
rclb
clc
sub
xlat
ljmp
orb
inc
dec
subl
imulb
push
xchg
dec
fdivrp
rolb
xor
inc
lret
lret
outsl
jo
jmp
stos
outsl
hlt
push
adc
sub
dec
or
mov
ljmp
mov
xlat
adc
cs
mov
mov
out
leave
inc
xor
push
call
dec
jmp
scas
rcrb
cmp
mov
cmp
fidivrl
pop
mov
test
test
add
adc
orb
jmp
fidivrs
xchg
out
jnp
push
jae
shll
jle
and
daa
sti
inc
aaa
inc
mov
cmpsb
sub
push
push
pushf
rorl
dec
stos
shlb
xlat
adc
mov
mov
sbbl
fimuls
movsb
jae
inc
mov
mov
mov
testl
jle
adc
test
jge
mov
mov
test
mov
or
enter
lcall
xor
push
and
mov
insl
sbb
pop
stos
mov
lods
test
dec
test
sub
stos
mov
test
aas
mov
jns
and
adc
jb
es
rclb
cmpsl
test
icebp
mov
jae
insb
mov
movsb
push
push
stos
iret
aas
test
sbb
lcall
loopne
jl
jnp
nop
popa
mov
jmp
lret
mov
or
push
xchg
les
jae
fdiv
lret
dec
fidivl
movsl
pop
out
lret
cmp
cmpsb
mov
mov
mov
sti
fs
mov
mov
es
ret
fiadds
jp
inc
dec
inc
arpl
addr16
aam
inc
mov
push
sub
or
mov
add
push
cwtl
sahf
imul
mov
cmc
xchg
scas
or
aam
enter
mov
int3
mov
mov
xchg
mov
cltd
roll
xor
jp
movsb
sub
nop
fcomps
ja
data16
sahf
mov
shll
mov
mov
sbb
adc
fstp
loope
hlt
jo
hlt
incl
fsubrp
adc
outsb
cmpsl
sub
rcl
or
sbb
rclb
lret
sub
orb
mov
pushf
xchg
cltd
jg
adc
fstp
fbld
push
push
leave
nop
push
outsb
or
fsubrs
fildll
lods
mov
pop
push
sub
inc
into
sub
sarb
int3
dec
out
add
in
int
inc
push
and
cli
push
or
mov
or
lret
adc
das
cmp
shll
iret
mov
inc
fstpt
xor
dec
lods
fdivl
xchg
das
adc
ficoms
push
mov
inc
or
incl
rorl
mov
scas
pop
sti
mov
sbb
out
adc
daa
aad
pop
nop
sbb
pop
mov
int3
push
je
add
mov
outsb
and
or
shrl
push
cltd
shrb
add
mov
test
ljmp
inc
pop
ja
lock
repz
call
push
popa
sub
rorb
cmpb
ds
push
das
xchg
imul
inc
sbbl
inc
mov
xchg
popf
aam
add
les
pop
mov
jo
and
into
mov
mov
jecxz
mov
leave
sub
jge
add
outsb
aad
movsb
jo
push
ljmp
pop
jns
repnz
xor
add
sub
orl
cmpl
inc
sahf
into
insb
xchg
jl
scas
add
add
inc
movsl
add
iret
pushf
mov
dec
pop
jp
les
or
pop
hlt
rcrl
xor
daa
int3
lods
lret
dec
dec
fcoml
loope
out
lret
add
sahf
inc
adc
stos
adc
mov
dec
scas
nop
in
repnz
jp
or
cltd
mov
mov
mov
ss
add
jmp
add
insb
pop
or
into
mov
stos
and
cs
xchg
jno
pop
mov
and
cmp
push
push
mov
xor
mov
mov
dec
push
or
pop
incl
xchg
xlat
adc
adcl
or
xchg
cld
lret
add
add
fidivl
cmc
scas
inc
jle
push
and
mov
and
dec
mov
test
sbb
add
call
imul
sbb
and
cmp
pop
insl
jnp
js
add
test
pop
push
enter
ss
ret
popa
lods
xchg
shlb
cmp
mov
pop
into
subb
or
fidivl
xlat
in
cmpsb
xor
enter
bound
pop
ljmp
mov
adc
pushf
rclb
mov
inc
sbb
cmp
mov
jb
stos
aad
or
mov
xor
scas
jmp
jmp
das
mov
rcll
or
mov
in
jns
push
or
mov
xchg
mov
push
push
push
inc
jg
inc
fistl
fisttps
push
or
add
inc
sub
lds
insl
int3
or
mov
stc
cmc
and
shrl
iret
adc
iret
mov
mov
xor
xchg
pop
push
push
sub
or
jmp
sbb
pop
movsl
xlat
dec
loopne
fsubs
adc
mov
mov
test
pop
add
add
ret
or
mov
decb
push
loopne
or
in
test
mov
push
data16
orl
hlt
cmpsb
cmp
mov
jmp
stos
pop
ss
data16
mov
sub
jg
fdivrl
and
in
js
pop
xor
repz
push
mov
push
mov
lods
test
das
mov
push
xchg
popf
push
lahf
shrb
and
leave
loopne
inc
add
sbb
les
push
jnp
mov
flds
adc
mov
rorb
mov
arpl
int
stos
enter
inc
popa
pop
xchg
nop
xor
mov
ficompl
and
and
in
and
pop
dec
fs
cmp
lods
in
test
enter
leave
or
sbb
daa
js
and
addb
cmc
push
inc
bound
push
call
xor
aad
shrb
add
mov
enter
dec
loop
mov
subl
aam
les
push
xor
push
xchg
fcmovnbe
xchg
lret
lea
or
pop
push
mov
xchg
enter
mov
mov
push
call
into
cmp
stos
int3
stos
cld
cli
mov
mov
sbb
fdivl
inc
sbb
daa
fwait
xchg
mov
in
add
repz
lret
loopne
mov
shrb
xchg
imul
imul
test
or
or
mov
sbb
lret
scas
hlt
sbb
jl
or
inc
neg
andl
lret
mov
jmp
push
popa
shl
and
sbb
addb
test
adc
xor
cmp
or
sbb
pop
sub
rorl
fdivrs
or
pop
shr
mov
xlat
jecxz
mov
pusha
lock
sti
adc
xchg
in
cmp
inc
fcompl
xchg
inc
jle
inc
jmp
jo
pusha
xchg
pop
loopne,pn
or
or
sbb
xor
cmp
imul
push
xorl
adc
add
out
dec
loop
sbb
xchg
push
lret
out
rolb
xchg
pop
cmc
lea
sbb
xchg
test
cmc
test
ficoms
aad
sub
dec
rolb
push
add
fisttpl
mov
mov
orb
scas
cmc
lret
or
mov
adc
and
lds
xor
add
mov
jl
pop
aam
and
popa
adc
fyl2xp1
xchg
mov
jns
movsl
js
push
dec
dec
movl
cmp
jne
mov
fcmovnu
imul
hlt
into
mov
xlat
test
pop
repz
out
jl
add
stos
out
loope
fwait
mov
mov
shrb
fst
shlb
dec
mov
xchg
outsb
sar
add
mov
filds
lret
push
cwtl
imul
ror
pushf
jbe
xchg
hlt
andl
cmc
jp
hlt
pop
sbb
sbb
xchg
add
and
push
nop
mov
mov
incl
push
mov
hlt
test
test
jbe
jae
orb
aas
inc
mov
mov
xchg
das
mov
sub
push
dec
or
out
xchg
adc
pop
stos
inc
scas
mov
add
xchg
jbe
add
mov
xchg
add
mov
jg
popf
imul
lcall
xchg
push
mov
xchg
jp
cs
mov
mov
or
inc
loope
pop
dec
mov
push
lods
cld
pop
por
xchg
mov
ds
push
incb
lds
fildl
mov
dec
shl
and
pop
test
subb
cmpb
inc
enter
shlb
scas
cmp
push
popf
mov
mov
stos
push
or
lods
or
lods
adc
jne
or
jg
xchg
in
shll
in
mov
fcmove
inc
jno
lret
jl
xchg
adc
xor
cmpb
add
mov
sub
push
lods
jle
push
out
aad
flds
lret
push
pop
cwtl
aas
ljmp
fcomp
nop
pop
mov
or
xchg
aam
cltd
mov
push
jecxz
mov
lret
cmp
jge
sub
mov
xor
dec
sahf
pop
loop
xlat
push
cwtl
pop
adc
and
rcl
cmp
test
shl
xchg
inc
and
add
outsb
test
stos
jae
lods
mov
adc
push
stos
ret
lret
sbb
fbld
xchg
mov
test
fcom
mov
nop
rcl
ljmp
ret
mov
adcl
clc
push
xor
jbe
hlt
aas
jno
out
and
shl
lods
hlt
fdivrl
sub
shlb
ret
inc
hlt
std
push
lea
push
clc
mov
jmp
sbb
mov
push
push
push
jne
ret
mov
data16
cli
sbb
add
js
jg
mov
loopne
fwait
sbb
or
js
call
test
ror
ljmp
add
insb
add
imul
inc
movsb
xorb
hlt
cmpsb
or
pop
jg
push
mov
leave
test
xchg
xchg
aad
inc
dec
call
xor
fisubl
fstps
ror
jle
pop
movsl
or
aad
rolb
or
call
aaa
pushf
mov
sub
push
out
xor
ss
ss
xchg
or
sbb
scas
lret
cltd
hlt
dec
pop
fdivrl
jl
rcll
add
adc
shrl
call
add
loopne
and
aaa
fmull
push
dec
xchg
add
xchg
aaa
sbb
sub
xchg
mov
lock
test
adc
lret
push
pop
arpl
and
push
aaa
cmpl
ret
mov
push
mov
xor
lds
mov
clc
sbb
cmc
in
sar
rcll
notl
nop
movb
sub
icebp
or
jmp
shlb
shrl
les
or
jb
pop
xchg
push
mov
stos
push
adc
jp
mov
arpl
outsl
sbb
push
movsb
cmp
or
sbb
shrb
mov
push
sbb
or
lret
mov
mov
rcll
jo
mov
lcall
sarb
adc
jbe
sbb
pop
mov
into
mov
xor
aad
pushf
or
gs
sbb
in
movsb
aad
push
je
xlat
je
inc
shr
sbb
xor
cld
adc
adc
sub
out
dec
xchg
dec
scas
lods
push
or
inc
sbb
dec
dec
lods
pop
or
insb
jae
add
or
cmc
ljmp
in
rorb
mov
movsb
lods
xchg
loop
lock
js
mov
mov
test
test
loop
aas
and
imul
mov
fbstp
xchg
in
enter
or
xchg
push
test
or
js
fadds
pop
inc
dec
or
es
mov
fwait
mov
dec
cmpb
in
imul
test
xor
cmc
test
add
das
dec
mov
push
out
add
orb
ja
jno
and
sbb
dec
sbb
mov
out
sbb
mov
jno
repz
fldcw
out
push
push
test
into
xchg
push
sti
sbb
popf
sub
and
push
cwtl
pop
xchg
push
js
push
mov
pop
shl
lret
cmp
and
mov
inc
cmpb
pop
xchg
fisttps
add
jae
pop
bound
fcmove
dec
or
jns
aam
test
jg
insb
lods
imul
sarl
stos
shll
aam
mov
inc
add
jle
sub
and
cs
mov
fildll
adc
mov
xchg
ret
les
mov
sahf
add
movsb
mov
xchg
cmp
pop
daa
pop
addl
dec
fsubrl
ljmp
adc
lods
hlt
xchg
into
jle
lods
jle
pop
lcall
mov
pop
dec
push
dec
xor
dec
adc
outsb
pop
lods
and
jl
dec
hlt
push
xchg
fidivl
xchg
xchg
int3
gs
aad
sbb
jae
call
dec
cmp
loop
icebp
cmpsl
mov
dec
shlb
xchg
dec
mov
ret
mov
ret
dec
mov
cmpsl
imul
test
dec
shll
jno
adc
and
ret
fs
jb
out
pop
mov
lods
out
pop
ret
push
mov
xor
leave
xor
xor
mov
xchg
loopne
pop
loop
cmp
femms
xchg
sub
mov
mov
add
vprotd
out
fcmovne
xchg
sahf
mov
lret
xchg
nop
fs
xchg
imul
cmpsl
fstl
pushf
or
xchg
mulb
inc
imul
mov
imul
pop
dec
rolb
pusha
jecxz
jne
shrb
push
add
in
pop
fadd
pop
mov
mov
cld
add
jnp
aas
or
inc
lret
push
aas
sbb
sbb
sbb
sarb
mov
pushf
testl
addl
xor
or
push
fidivl
mov
pop
out
cmp
mov
in
outsl
lahf
add
cmp
inc
push
cmp
add
mov
pusha
cmp
add
push
mov
test
jle
adc
push
push
push
sbb
sbb
add
insb
adc
outsb
ljmp
mov
insb
fsubp
rolb
adc
or
into
hlt
and
jo
pusha
xorb
out
push
fcoml
xchg
lea
xchg
fisttpll
sarb
sub
jl
aam
cmpsb
ljmp
cmp
mov
bound
push
loope
ja
repz
mov
idivb
fsubl
push
adcl
mov
stos
cmpsb
cmp
int3
xchg
xchg
pop
repnz
out
lret
jns
mov
fcomps
iret
cmc
pop
or
and
ret
shll
dec
aam
lods
jnp
leave
cwtl
mov
and
dec
mov
sub
xor
or
lcall
je
dec
gs
mov
dec
xchg
and
movsl
std
std
subl
jnp
out
dec
loop
cmpsb
cltd
xchg
cli
btc
inc
test
test
in
pop
and
jno
mov
inc
aam
sub
cmpsb
repnz
inc
add
stos
pop
push
push
lods
sbb
cmp
lods
pushl
lds
sbb
in
test
mov
rcll
xchg
enter
mov
movsb
cmc
inc
movsl
cmc
cmpsl
xlat
sbb
sub
jecxz
mov
in
mov
arpl
mov
lcall
imulb
ret
xchg
mov
push
lock
xchg
mov
shrl
pop
outsl
xchg
popa
rolb
jno
test
mov
scas
fmul
xor
aaa
hlt
sti
rcr
lods
stos
jl
push
mov
es
rcll
lret
adc
movb
cwtl
fdivs
aas
sbb
jle
scas
mov
push
inc
cmp
ljmp
out
pop
add
lods
fildl
jae
jmp
jge
das
rcl
pop
jb
jmp
jo
out
mov
fistpl
or
jle
popl
xor
cltd
lret
xlat
sub
mov
xchg
cmpsl
cmp
sbb
imul
cli
mov
aaa
dec
ss
stos
loope
cmp
test
or
cmp
jnp
ret
loope
cmpsb
cmc
notb
movsb
mov
jecxz
add
push
lret
mov
dec
xchg
enter
adc
incb
in
jbe
loope
or
mov
mov
das
push
adc
ret
adc
test
mov
pop
ror
inc
push
add
push
rorb
insl
jbe
mov
add
fsubrp
push
push
push
movsb
dec
sahf
ljmp
popl
xchg
lods
mov
push
test
xchg
addr16
pop
dec
cwtl
jo
lods
shrl
sub
jns
scas
cltd
ffreep
into
xchg
ret
mov
stos
imul
movsb
add
insb
ret
cmpsb
xlat
sbb
into
test
mov
xchg
lock
xlat
xchg
push
leave
ror
fnstcw
lods
pop
dec
ret
call
or
mov
mov
mov
mov
mov
push
bound
enter
dec
jae,pn
test
and
jge
adc
mov
call
stos
mov
call
call
adcb
imul
jle
jae
or
jecxz
adc
cmp
outsl
xor
cld
mov
push
in
mov
hlt
scas
fdiv
inc
das
push
daa
aam
or
movsl
jge
adc
push
pop
stos
pop
sub
mov
aam
push
loope
push
mov
xor
adc
mov
shlb
into
pop
pop
mov
mov
cld
stos
push
movsl
cmpl
lret
adc
rclb
fdivl
aam
cld
xchg
mov
xchg
mov
hlt
sub
adc
xchg
pop
scas
cltd
xchg
dec
add
sbb
sbb
mov
sub
leave
jae
insb
rol
add
push
test
xor
jge
add
negl
add
shll
jnp
cmp
orb
xchg
xchg
adc
mov
jp
loopne
or
jle
test
xchg
xchg
insb
test
outsl
fists
sahf
sub
jge
mov
jno
add
nop
rcrb
xchg
ret
jo
mov
mov
cmc
cld
aas
ret
xor
not
push
int3
dec
xchg
add
push
aad
in
dec
in
jge
leave
mov
xchg
stos
rcll
xchg
mov
shlb
rorb
cld
ret
lcall
inc
fcmovnbe
fstpt
add
hlt
je
imul
or
mov
loope
inc
jno
int
xchg
pop
cmp
xchg
iret
sarb
mov
push
std
or
sub
jb
hlt
xchg
sub
add
push
shlb
jle
mov
xchg
in
das
mov
mov
mov
inc
cmpsl
imul
lock
fldenv
xchg
xchg
bound
pop
push
mov
cli
mov
sub
xchg
add
fadds
pop
stos
dec
or
int3
lock
xchg
or
test
cmp
push
fmulp
cmp
test
test
mov
xchg
mov
cwtl
mov
in
out
mov
pop
xor
aad
pop
pop
xchg
shlb
pop
scas
jbe
xlat
or
rolb
cmc
fmuls
aaa
push
ret
mov
shl
push
adc
rcl
xchg
int3
ret
lods
js
dec
inc
push
fmull
inc
stos
jg
lcall
nop
jno
scas
loop
fdivs
sbb
xor
add
aad
movsl
outsl
cmpb
repz
push
inc
cmpsl
xchg
js
sub
in
xchg
lock
mov
repnz
or
rcrb
loop
movl
and
cmp
adc
adc
rolb
xchg
les
fldenv
push
int
lds
mov
push
movsb
sbb
jnp
test
xor
push
popa
sub
repnz
push
nop
loopne
inc
dec
rcl
adc
pusha
in
mov
jge
lock
pusha
push
inc
cwtl
push
scas
movsb
inc
lahf
inc
fcomp
mov
or
mov
pop
pop
adc
bound
mov
or
inc
or
push
not
lea
or
or
or
imul
arpl
push
test
xor
out
test
arpl
ret
mov
gs
rolb
xlat
sub
mov
shrb
xchg
hlt
iret
xchg
shl
pop
repz
scas
mov
loopne
pusha
stos
inc
pop
fmuls
aam
ds
movsb
andl
out
push
jg
into
lods
inc
sub
dec
sub
fbstp
push
or
call
rcrb
cmpsb
xchg
adc
push
outsl
xchg
mov
sbb
add
mov
mov
adc
int3
xchg
sub
rclb
and
dec
push
leave
lods
loop
shll
mov
jb
jle
lret
ja
stos
push
das
loope
subl
std
cmpsb
push
test
movl
dec
jmp
mull
stos
adc
or
or
push
mov
call
jns
loopne
incb
shrb
fstpl
lret
test
test
xchg
pop
cmc
xchg
and
push
mov
mov
cmpsl
mov
shrb
pop
mov
hlt
in
mov
rcl
out
clc
mov
xor
in
test
or
inc
xchg
inc
push
and
jmp
imul
mov
insb
shll
add
je
out
xor
mov
pushf
pop
pop
icebp
mov
sub
in
add
insb
dec
insl
into
xlat
ds
add
cs
imulb
xor
push
xchg
arpl
sbbl
pop
das
sbb
adc
or
data16
mov
pop
cmc
lcall
xor
sbb
mov
mov
xchg
imul
out
xchg
inc
or
repnz
das
or
xchg
or
call
inc
cmpsl
xlat
shrb
xchg
adc
fbstp
jl
jg
add
subb
bound
jg
orb
xor
lret
movsb
mov
out
and
xchg
or
inc
scas
cmp
pushf
fildll
cltd
rorl
lods
leave
jl
cmpsl
dec
and
push
mov
mov
lret
pop
add
scas
add
add
mov
fucomi
nop
stos
push
push
push
jmp
jge
sub
inc
xchg
stos
imul
stos
push
push
ss
ret
pop
arpl
add
jp
shlb
and
mov
xchg
adc
mov
imul
jae
vpsubusw
cmc
out
jl
call
rcll
xor
xchg
mov
and
push
inc
mov
ja
movsl
fisttpll
sub
fcompl
add
js
push
mov
test
add
hlt
sub
jge
add
xchg
pop
loop
fdivp
fstl
cli
in
shlb
add
pop
test
test
imul
mov
push
xor
jmp
push
cld
imul
mov
jnp
loop
mov
ja
adc
xor
xchg
lret
pop
pop
push
or
cmp
cli
push
push
stos
jb
dec
xchg
fdivs
cmp
rcll
dec
mov
lcall
mov
sub
push
xor
jle
mov
jecxz
fmuls
pop
icebp
popa
cltd
movsb
dec
fdivrs
dec
jge
iret
jg
push
ljmp
fwait
cmp
jno
mov
add
int3
mov
shlb
adc
adc
push
int3
cwtl
mulb
or
movb
sub
add
add
mov
adc
mul
mov
xchg
movaps
cmpsb
jmp
addr16
dec
sbb
mov
sbb
sbb
movsb
dec
andb
arpl
xchg
mov
sti
mov
adc
aam
push
into
imul
adc
mov
mov
nop
xchg
shlb
test
add
add
iret
pop
and
adc
sbb
test
pop
shrb
or
adc
les
add
movsl
mov
push
adc
pushf
mov
mov
inc
lret
xorb
nop
xchg
mov
cwtl
into
ljmp
in
and
in
adcb
inc
nop
dec
xchg
adc
movsl
pop
sub
xor
add
out
push
dec
mov
ds
movsb
fiadds
arpl
xor
shll
sahf
mov
mov
loopne
xchg
jb
or
lret
add
add
stc
decb
cmc
dec
and
xchg
push
mov
mov
imul
out
and
cmp
cmp
jae
int3
xchg
mov
pop
mov
or
loope
push
scas
mov
cmp
cwtd
jmp
mov
popa
pop
inc
and
mov
lock
cmp
xchg
jle
test
xchg
mov
mov
inc
lods
jecxz
sub
pop
add
mov
mov
jg
dec
test
test
adcb
in
sbb
jmp
js
mov
sub
cwtl
shlb
xchg
push
imul
test
fstps
rorb
lds
je
jo
cwtl
cmp
push
mov
sub
dec
stos
jno
sti
sub
push
xchg
mov
fsts
out
xchg
gs
outsl
xor
mov
mov
leave
mov
mov
push
ret
sub
inc
sub
das
ret
push
lea
test
rclb
shlb
test
inc
mov
and
rorb
mov
dec
test
xchg
cmp
cs
xchg
mov
data16
cltd
or
dec
xchg
test
mov
xchg
xor
scas
test
adc
pop
outsl
mov
scas
or
adc
addr16
and
cmp
out
cmp
test
add
jmp
xchg
mov
aas
test
mov
stos
orl
gs
lahf
mov
jg
adc
hlt
aad
mov
mov
ret
mov
hlt
xchg
lds
subb
test
aam
inc
xlat
rorl
add
hlt
mov
fs
mov
aam
add
scas
cmc
mov
sub
sti
test
jbe
mov
lods
sub
nop
adc
xchg
ret
adc
mov
jecxz
xchg
repz
jns
cmpb
sbb
mov
enter
or
mov
lcall
or
test
jne
out
add
dec
mov
jbe
test
add
dec
add
inc
mov
push
and
scas
leave
fwait
andb
dec
mov
popf
dec
arpl
adc
les
xchg
movsb
xchg
adc
push
xchg
jp
push
push
leave
std
rcll
dec
lods
lcall
xor
sbb
es
mov
pop
mov
add
rcl
mov
dec
sub
jne
cmpsb
popf
dec
call
cmc
cld
out
xchg
nop
mov
scas
mov
out
adc
outsb
js
andb
rcll
cmpl
jnp
dec
add
ljmp
push
cld
cmp
mov
mov
sub
imul
adc
lods
dec
lods
inc
scas
mov
add
xchg
fstps
ss
scas
mov
xchg
push
in
mov
jae
lcall
adc
xchg
repz
int3
sub
fdivrs
xchg
and
rcl
jne
push
ret
cs
lds
lahf
out
rcl
jecxz
xchg
lods
insl
or
inc
xor
fsub
mov
pop
jl
jb
lret
xchg
addr16
adc
adc
mov
gs
cmp
adc
pusha
xor
int
mov
mov
mov
hlt
pop
mov
inc
dec
ljmp
dec
in
es
push
sub
mov
test
inc
cmp
mov
dec
sub
bnd
and
js
and
xchg
ret
out
cwtl
inc
mov
rorb
es
das
mov
out
enter
test
mov
imul
data16
push
xchg
add
pusha
inc
shl
rcll
mov
ss
in
push
inc
in
divl
rcrl
xchg
mov
mov
rcrl
stc
insb
shlb
clc
adc
repz
je
xchg
add
test
sub
shll
cmpsl
pop
mov
xchg
shrl
fiadds
ljmp
push
aad
dec
stos
mov
data16
inc
test
dec
push
test
inc
aad
mov
push
mov
in
mov
shl
iret
mov
mov
cld
lret
int3
sub
mov
xchg
xor
in
loopne
sti
in
popa
push
iret
cs
pusha
inc
xchg
out
outsl
out
andb
mov
outsb
call
or
pop
xchg
fs
into
inc
arpl
lock
push
mov
out
or
ss
xchg
nop
iret
xor
pop
stos
push
mulb
shlb
mov
insb
nop
sub
pop
jae
ret
lods
xor
mov
in
mov
test
adc
loopne
add
adc
sarb
add
add
mov
imul
xchg
mov
dec
negb
mov
mov
movsl
mov
lods
sbb
jmp
out
movsb
sub
pushf
xor
test
mov
inc
adc
sub
cs
lahf
inc
sub
xchg
mov
aas
test
jmp
inc
mov
adc
lcall
stc
sub
push
lret
mov
and
mov
xlat
mov
adc
enter
pushf
push
shl
sbb
aad
xchg
loopne
stc
and
xor
xchg
lahf
fnstenv
cld
incb
jns
enter
and
cmpsl
push
in
sbbb
sbb
lods
idivl
mov
add
pop
arpl
push
mov
lods
jl
movsl
idivb
lods
sub
and
inc
sbb
repnz
xchg
push
xor
mov
aad
fnstsw
not
push
inc
jb
and
jno
mov
xor
inc
stc
mov
stos
pop
std
and
or
or
les
push
inc
and
filds
jno
lret
aas
ret
or
xchg
lahf
sub
unpcklps
adc
xchg
ret
mov
mov
not
cld
movsl
ja
mov
stos
fisttpll
ror
jle
pop
jno
les
aad
hlt
push
adc
decl
test
cmc
ret
jg
push
adc
mov
add
and
jb
shlb
push
ret
out
add
mov
andl
call
and
mov
es
cwtl
xchg
cld
adc
aas
dec
mov
sbb
and
or
dec
adc
xchg
and
fistpll
dec
jbe
mov
rcrl
xor
pop
enter
cmc
cli
inc
lret
mov
pop
mov
xor
aam
xchg
inc
inc
inc
lret
jmp
and
stc
add
pushf
ss
inc
fisubrs
cmp
popf
push
sub
pop
xor
inc
hlt
movsl
cmp
mov
test
addr16
sbb
mov
mov
loop
pop
or
dec
leave
mov
jne
jg
or
jl
sub
fimull
fisubrl
iret
jl
xchg
cmp
ret
or
xchg
les
add
mov
jno
xchg
clc
inc
in
movsb
mov
pop
scas
int3
pushfw
outsb
xlat
enter
mov
nop
mov
push
jo
xchg
mov
pushf
out
jle
movsl
push
mov
xchg
in
sbb
adc
out
mov
add
mov
pushf
mov
mov
repnz
nop
adc
mov
ss
and
bound
push
in
mov
mov
push
mov
push
fstpt
scas
push
pop
loop
insb
daa
fstp
je
inc
push
pop
sarl
xor
dec
jmp
cmp
outsl
insb
pop
test
adc
subl
mov
in
xor
push
lods
inc
adc
jle
in
xchg
ds
fistpl
into
nop
push
sar
or
popa
xchg
xchg
cmpb
xorb
jb
xchg
cmp
jle
mov
aas
sbb
or
xchg
test
rcrl
xchg
imul
mov
adc
in
negl
movsb
jns
add
fstpl
mov
sub
mov
jbe
icebp
dec
rorl
or
xchg
mov
or
add
push
cmc
mov
pop
call
icebp
mov
loope
mov
cmc
dec
push
jno
mov
lock
or
pop
add
das
push
pushf
dec
mov
jmp
jmp
test
pop
hlt
lds
lds
jp
xor
hlt
adc
pushf
je
fadd
mov
sub
notb
add
loopne
enter
inc
add
test
out
test
and
nop
popf
test
inc
lcall
inc
sub
iret
inc
mov
push
mov
cld
in
mov
loopne
subl
aam
xor
and
adc
shl
pop
std
aaa
dec
mov
and
dec
sbb
mov
mov
mov
popl
scas
nop
mov
test
lods
sbb
pop
jmp
jle
test
mov
nop
or
xchg
rol
mov
dec
push
pop
leave
pusha
or
mov
push
xchg
iret
or
xchg
xchg
xor
mov
lahf
add
or
leave
xchg
push
or
dec
xchg
in
test
add
js
and
xchg
cltd
xor
cmp
fldt
stos
cmp
push
cwtl
inc
mov
lcall
mov
out
ss
pushf
lea
aaa
pop
push
jmp
mov
mov
sbb
cmp
pop
faddl
or
push
roll
ficomps
adc
and
popa
cld
add
shlb
xchg
movsl
jno
sub
pusha
lods
inc
jl
cmpsl
frstor
hlt
lahf
test
lods
sbb
imul
push
daa
iret
sarb
xchg
out
fistl
fstps
and
scas
fmuls
ret
arpl
xchg
inc
and
cmc
bnd
shll
push
adcl
cmpsl
or
sub
nop
pop
mov
and
icebp
pop
fisubrl
mov
push
vpaddb
pop
xor
rorl
cmc
shlb
leave
xchg
out
jb
mov
mov
aad
sbb
aad
sbb
icebp
out
push
into
out
or
sub
scas
adc
or
jmp
lahf
stos
xchg
xchg
nop
in
add
dec
and
or
ffreep
decl
inc
call
sahf
add
sbb
mov
or
test
push
xor
and
xchg
add
or
adc
ret
iret
inc
clc
jle
sahf
gs
lret
lds
jno
fistpll
dec
jne
cmp
fmull
adc
cmc
scas
xor
dec
clc
rolb
xchg
push
adc
mov
lods
imul
jp
jg
xchg
lds
and
mov
or
jge
dec
popl
mov
adc
aaa
dec
mov
add
test
mov
je
test
mov
xchg
test
xor
in
mov
fsubrl
dec
cwtl
scas
rol
rcrl
ret
loop
mov
loop
lea
jle
lock
adc
jl
dec
and
int3
rcrb
add
ret
popa
hlt
mov
adc
xchg
hlt
rcrb
sbb
pushl
scas
cmpsl
and
pop
adc
rclb
jmp
sub
jg
mov
cltd
and
and
sub
pop
mov
push
mov
xchg
or
enter
daa
xorl
add
test
and
mov
rorb
xor
jmp
dec
lock
repz
mov
call
aaa
stos
dec
xor
inc
inc
jmp
add
or
cmp
outsb
out
mov
push
xchg
xchg
and
cwtl
iret
or
push
mov
inc
push
fcompl
lea
mov
sar
or
test
hlt
ror
dec
daa
std
aad
jmp
or
xchg
or
push
add
fiadds
subb
and
push
jecxz
add
fiadds
pop
push
jb
xchg
xor
dec
sbb
jae
scas
xchg
rcrl
lock
rcrb
dec
lods
sub
nop
lret
cwtl
push
mov
cwtl
or
cmpsl
cmp
pusha
dec
add
pop
leave
call
ret
movsl
mov
xor
sub
or
jno
mov
cltd
sahf
testb
mov
add
sbb
cmp
inc
mov
lds
xchg
test
sbb
mov
test
xchg
faddp
pusha
rcrb
xchg
test
addr16
adc
push
loop
xchg
imul
and
lock
lods
lods
sub
andl
je
add
pop
int3
or
mov
mov
and
cmpsb
lret
das
or
pop
sub
test
xchg
add
xchg
in
or
or
lret
cmpsl
mov
adc
mov
repz
xlat
xor
and
aam
lahf
lret
xchg
out
and
push
inc
cli
cmp
test
subb
or
mov
push
mov
jne
or
mov
add
dec
or
add
mov
mov
ja
mov
les
mov
or
pop
leave
ja
cmp
cmp
jle
filds
cmp
mov
dec
scas
fcom
mov
push
sbb
xor
lret
inc
inc
xchg
les
pushf
mov
rcl
add
cld
insl
or
dec
imul
adc
cwtl
push
cmp
or
xor
pop
push
enter
enter
sbb
or
or
lds
stc
mov
popf
leave
ret
push
in
sarb
xchg
or
adc
add
pop
or
rcr
xchg
clc
jb
cld
xchg
ret
int
mov
clc
lahf
push
push
dec
out
xchg
xchg
inc
sbb
popf
push
and
fbstp
push
pop
ret
lods
cmp
in
or
in
enter
scas
js
cmc
rcrb
incb
jl
inc
cmpsb
test
dec
test
dec
xchg
push
ds
mov
fcmovnbe
pop
adc
enter
xchg
cli
subb
sahf
push
ret
mov
pusha
mov
test
add
mov
sbb
scas
rorb
cmpsl
or
adc
inc
jnp
or
and
mov
testb
jp
sarb
movsb
cmpps
mov
pop
test
pop
fisubrs
fcmovu
jno
lret
inc
bound
xor
mov
xor
inc
and
or
sbb
adc
mov
or
lds
mov
test
dec
into
int
cmpsl
lret
jns
or
ret
imul
pop
mov
xchg
adc
sbb
lret
push
in
test
lcall
mov
rol
fwait
or
lret
ror
mov
int3
fists
rolb
sahf
or
mov
lds
xchg
add
incb
leave
sbb
adc
jno
mov
fstl
sti
lahf
mov
scas
lods
je
nop
scas
add
loopne
inc
mov
sbb
xchg
mov
cmp
dec
dec
ds
mov
xchg
or
add
dec
mov
pushf
cld
fisttps
lds
mov
and
out
clc
push
xchg
orb
xor
inc
fidivs
sub
mov
push
cli
inc
pop
aad
inc
or
or
shl
mov
andl
mov
nop
or
mov
cmp
das
jae
in
cwtl
sub
pmuludq
pop
inc
repnz
fcomp
sti
popa
add
leave
cmpsl
push
lea
jge
mov
cmpsl
rcl
call
cmc
cmpl
shrb
cmc
lea
or
mov
repnz
mov
pop
add
pop
or
add
loopne
add
faddl
xchg
pop
inc
inc
sahf
iret
je
mov
mov
arpl
xchg
pop
add
jo
xchg
xor
in
orl
popl
icebp
or
add
les
mov
rorb
imul
test
fiaddl
and
sahf
in
mov
add
dec
pop
mov
pushf
sbb
mov
mov
cmpb
or
repnz
stc
call
cmp
enter
jge
mov
sbb
decb
add
hlt
mov
fcmovu
sarb
aas
jl
bswap
and
insb
push
js
mov
adc
adc
push
inc
mov
cwtl
lds
outsb
lds
push
cmpsl
sbb
mov
mov
sub
adc
ret
iret
or
jb
pop
xchg
stc
adc
sbb
scas
mov
and
mov
push
shrb
xchg
iret
ret
jb
lret
mov
jge
fs
hlt
add
cwtl
sti
fs
ret
fnstcw
sbb
sahf
xor
push
cmpsl
ljmp
sub
ja
not
push
lahf
jo
fsubrs
xchg
push
cmc
lods
xor
orl
inc
push
into
add
aaa
loope
ret
mov
mov
push
pusha
cwtl
aam
fidivs
pusha
fimull
or
inc
int
jbe
cwtl
cmp
shlb
fwait
jae
add
ret
faddl
shlb
pop
sti
and
push
ljmp
cltd
sub
cmpl
ret
or
xchg
lock
dec
xchg
rorb
imul
nop
xchg
loopne
mov
rorb
or
movsb
inc
push
mov
outsb
or
lods
or
inc
and
ret
bound
fs
mov
or
fcoms
inc
xchg
insl
ds
orl
shlb
clc
imul
insl
sub
ret
shl
cmpsl
mov
push
nop
cli
cltd
mov
lods
jl
and
sbb
cli
repnz
xchg
test
jg
stos
push
cltd
xor
cld
dec
test
push
lods
inc
inc
cmp
fdivrs
ja
imul
hlt
push
shlb
int3
fs
out
dec
mov
jbe
add
mov
ret
int3
mov
stc
les
add
ljmp
imul
mov
inc
mov
lds
add
push
inc
jmp
mov
push
mov
push
mov
loope
hlt
pop
lods
imul
popa
stc
enter
dec
divb
adc
cmp
or
mov
mov
lea
lahf
mov
adcb
enter
adcl
inc
jno
push
mov
push
inc
stos
das
into
and
mov
fidivs
movsb
loopne
clc
mov
ljmp
loope
or
in
out
dec
cmp
movsb
jp
pushw
mov
adc
or
imul
out
mov
or
cmp
push
or
inc
jo
adc
jg
add
add
mov
hlt
aas
adc
or
mov
jbe
adc
into
xchg
mov
notb
or
scas
lret
test
lods
nop
jp
pop
notb
push
cmpb
jle
addl
or
jbe
jge
push
pushf
pop
test
arpl
mov
mov
sub
add
mov
or
mov
adc
and
push
jne
mov
cmp
inc
enter
mov
push
sub
test
mov
test
test
fcoml
push
enter
mov
repz
jmp
stc
add
test
in
stos
outsl
mov
push
push
lret
jo
fcoms
in
test
int3
les
movsl
or
fldcw
pop
cmp
xchg
in
jae
inc
inc
xlat
rcll
add
cld
xchg
add
pusha
imul
lret
ljmp
add
jbe
in
add
mov
add
enter
ljmp
or
movsl
outsb
int
gs
mov
or
roll
nop
push
test
lret
nop
movsl
rcl
imul
nop
xchg
mov
int
push
inc
test
xchg
jl
cwtl
xchg
in
adc
les
lock
jns
xchg
xchg
imul
or
mov
out
jo
adc
aad
stos
lret
call
sbb
push
test
testl
sub
test
gs
mov
cwtl
mov
and
pop
mul
int
test
mov
jecxz
sub
push
jno
mov
cs
or
test
mov
add
xor
subb
sbb
push
xlat
and
jnp
rcrb
jle
scas
dec
mov
test
add
pop
test
sub
push
add
mov
icebp
sbb
and
cmp
fidivs
cmp
sbb
test
insb
push
adc
stc
mov
inc
cld
cmc
lahf
not
mov
mov
stos
push
sub
movsb
mov
mov
cmpsl
xchg
jp
rcr
jb
dec
aam
and
idiv
dec
andl
add
outsl
dec
inc
xor
xchg
dec
stos
push
push
xor
test
scas
testb
sub
cmp
push
xchg
adc
ror
rcll
xchg
cmp
dec
inc
in
or
mov
jge
imul
lret
nop
loopne
or
ret
pop
add
seto
sbb
xor
jnp
fmull
faddp
pop
out
push
ret
ficoms
sub
mov
mov
pop
push
fmull
or
jnp
mov
mov
push
rcr
pusha
xchg
push
fwait
adc
or
sub
and
xor
lds
orb
lret
gs
or
xor
fnstenv
cmp
arpl
lds
int3
mov
shlb
xlat
and
mov
cld
aas
xorb
ljmp
jle
mov
sarb
shrl
mov
shlb
inc
stc
insl
jo
xchg
sub
adc
imul
pop
les
mov
adc
push
mov
mov
aam
jle
mov
into
stc
add
arpl
movsb
fcoml
xor
pop
es
shr
mov
pop
rcr
pop
movb
mov
fistps
outsb
popa
insl
lock
addr16
loope
sti
inc
incl
mov
xchg
fdivs
lret
jbe
iret
pusha
or
mov
int3
mov
mov
mov
fisttps
adc
cmp
inc
cwtl
fcoml
int
sub
sbb
mov
or
fisubs
hlt
adc
xor
imul
in
mov
cmp
fsubrs
or
push
in
mov
adcb
jb
xchg
xchg
mov
lret
adc
inc
jmp
inc
pop
cmpsb
rcl
popa
cmpsl
into
jmp
mov
movsb
jecxz
pop
js
std
sbb
ds
fwait
mov
fnstcw
pop
push
arpl
add
push
gs
addl
pop
or
shll
push
aam
into
pop
je
cld
sub
movsl
fstps
mov
add
pop
xlat
or
les
mov
stc
push
test
ret
js
test
cmpsl
mov
sub
cmp
lds
aas
inc
inc
sahf
mov
sbb
imul
push
xchg
ret
xchg
iret
or
rorl
cmc
adcl
push
rorb
fwait
adc
mov
or
xor
test
push
aas
xor
mov
pop
mov
lods
fldenv
jmp
movsl
add
cli
fnstsw
add
rclb
test
pop
divb
addr16
sub
push
lahf
mov
mov
jg
cmp
mov
loopne
mov
lcall
movsb
sub
mov
push
les
aas
xchg
fildll
orl
mov
jbe
ret
lcall
rcr
scas
adc
mov
xchg
jae
ss
mov
nop
or
mov
ret
xor
xchg
xchg
aam
addb
mov
mov
mov
xchg
xchg
movsb
es
hlt
icebp
scas
les
mov
xchg
adc
push
movsl
jb
in
leave
imul
push
mov
rcr
mov
je
pop
rcrl
mov
lds
or
lret
xchg
scas
mov
cmc
arpl
pop
pushf
or
adc
and
cwtl
sub
rorb
and
sub
sub
mov
mov
in
stos
test
xchg
fdivs
pop
fadds
aaa
adc
xchg
sbb
xchg
adc
mov
sahf
out
mov
add
push
sub
jecxz
rol
out
in
cmc
inc
xlat
mov
sub
lods
rcrb
cmp
test
rol
jnp
aam
and
ret
test
movsl
addr16
orb
pop
lods
push
mov
sub
and
insl
cli
xchg
ljmp
mulb
mov
lret
mov
scas
mov
fildl
add
fidivs
lret
xor
inc
popa
daa
and
sahf
push
mov
or
jae
lahf
or
jne
add
loopne
mul
mov
lcall
loope
xchg
or
mov
cmp
push
jp
inc
and
jne
mov
mov
or
mov
push
shrl
ljmp
mov
test
jp
lods
int3
ss
in
cltd
cmc
mov
lret
inc
mov
xchg
sub
or
lret
xor
shl
mov
lret
mov
lret
mov
cltd
mov
lods
cwtl
push
fidivrl
cmp
in
fdivrs
pop
inc
xchg
adc
mov
xor
mov
cmpsl
sar
jns
dec
xchg
push
aas
lret
push
dec
fisttpll
inc
add
jge
dec
and
rorb
mov
movsl
dec
mov
aas
in
lahf
jp
ficoms
shl
out
adc
jg
stos
dec
cld
push
lods
das
mov
movsb
or
sub
rclb
xchg
sub
xchg
ret
push
sub
sbb
ret
fnstcw
jg
loope
inc
leave
shrb
jg
inc
sub
cmc
xchg
fisubrs
mov
fnstenv
mov
lock
xchg
adc
lret
movsl
add
mov
mov
imul
outsb
movsl
xor
mov
inc
and
jmp
mov
std
stc
les
pop
cmpsl
mov
adc
stos
std
sub
dec
scas
sub
and
shrb
dec
xor
adc
dec
insb
mov
mov
fisubl
inc
push
shl
ret
movsl
mov
adc
rolb
pop
scas
test
inc
test
lods
std
rcrl
mov
inc
cmpb
mov
imul
out
adc
aas
orb
inc
add
frstor
shlb
mov
xor
lods
push
ds
mov
nop
add
adc
test
xchg
push
jp
loopne
push
mov
inc
fmuls
jle
dec
adc
loopne
mov
and
adc
mov
fldl
inc
cli
sub
mov
cmp
and
and
movsl
js
pop
add
pop
scas
xchg
lods
fwait
pop
ret
dec
not
and
dec
popf
xchg
push
sarl
sbb
mov
sbb
cmp
push
repnz
into
fidivl
nop
aad
movsb
fdivs
lret
and
imulb
add
sbb
pop
int
movsl
movsb
mov
cwtl
xchg
or
lret
mov
rclb
adc
in
push
int
rol
add
mov
iret
jo
test
lret
mov
xchg
pusha
movsb
mov
dec
aam
adc
fisubl
roll
push
mov
or
adc
or
andl
into
mov
jmp
ds
xchg
subb
or
jg
sub
sbb
xor
repnz
shlb
mov
outsl
sbb
imul
stos
cmpsl
adc
pop
in
xchg
xchg
jp
int
lds
in
out
adc
sub
jnp
mov
jb
inc
ss
xchg
push
dec
mov
mov
add
test
popf
stos
int3
out
jl
iret
stos
cmc
insb
shll
sub
popa
mov
inc
inc
dec
lret
xchg
cwtl
cmc
jno
push
inc
hlt
fstpl
mov
lcall
mov
push
cs
scas
and
mov
sbb
aaa
sbb
xchg
mov
dec
push
movsl
pop
mov
scas
xor
jl
dec
movl
xchg
pop
adc
aad
das
mov
cmp
out
in
shr
aaa
push
mov
inc
lock
or
lock
inc
jp
xor
add
mov
push
int3
imull
stc
loopne
int3
or
rsm
stc
pushf
les
adc
xchg
mov
add
jbe
dec
or
roll
rolb
shrb
int3
test
shlb
and
xor
jmp
add
pop
xchg
dec
pop
mov
cli
rorb
imul
cmc
mov
push
cld
xchg
std
or
rorb
clc
or
xor
push
or
sbb
add
push
mov
or
adc
mov
mov
lret
das
or
mov
pop
movsb
xchg
mov
push
testb
pop
fs
push
ret
loop
aas
cltd
pop
sbb
outsl
push
mov
stos
pop
jge
sbb
mov
aas
xor
mov
cmp
cmpsb
js
pop
ret
pop
sub
mov
lea
push
stos
push
xor
xchg
inc
dec
lret
mov
cwtl
push
xchg
test
mov
popf
loopne
mov
push
arpl
add
in
lcall
mov
xor
neg
enter
xor
pop
pushf
adc
push
mov
scas
xor
cmpsl
mov
fwait
repz
pop
pop
mov
mov
lret
js
mov
into
js
enter
jb
jns
clc
sbb
mov
push
xchg
nop
cmp
icebp
lret
ja
rol
mov
mov
add
xor
mov
adc
icebp
jl
shl
xchg
lret
movsl
mov
jne
sub
mov
ror
or
or
sbb
push
sub
xchg
and
ljmp
test
or
and
stos
mov
fbld
mov
add
add
xlat
stos
mov
int
sbbb
loope
or
fldl
aaa
pop
in
xchg
xchg
dec
hlt
cmpl
leave
inc
out
test
and
cld
dec
scas
or
push
or
jl
add
dec
std
jo
call
pop
add
mov
inc
stos
cwtl
shlb
fisubrl
push
dec
sub
sub
or
mov
andl
imul
mov
jmp
and
mov
mov
bound
inc
add
pop
cmp
movsb
lods
fnstenv
push
movsl
lods
cmp
in
or
jb
stos
lds
mov
mov
lret
repz
xchg
dec
push
rcrb
fdivs
stc
shll
nop
sub
mov
movsl
test
sbb
xchg
test
mov
lds
sbb
sub
addr16
cli
jl
dec
sarb
fcom
rolb
es
cmp
jp
scas
mov
lret
mov
cmpsb
nop
xchg
or
xchg
or
jns
adc
mov
mov
pusha
xchg
loop
lods
rol
repz
fsubp
sub
push
inc
jmp
cwtl
mov
sbb
cmp
or
fsubrl
adc
pushf
pop
sbb
mov
xchg
or
mov
imul
cmp
cmp
adc
mov
repz
mov
pop
test
dec
cmp
std
mov
pop
nop
nop
movsl
cld
adc
mov
test
lods
add
push
std
jecxz
mov
cld
mov
mov
repnz
push
mov
leave
xchg
test
inc
dec
mov
fmull
icebp
nop
andb
sarb
outsl
std
push
dec
mov
jp
fadd
or
inc
fdivl
sbb
mov
sub
notl
adc
xchg
sahf
mov
add
pushw
mov
sbb
adc
scas
adc
test
clc
lds
inc
cli
fs
movsb
loope
mov
test
mov
mov
inc
das
out
shlb
jnp
jns
popf
xor
test
fs
or
test
dec
aam
sbb
scas
push
cwtl
jbe
xorl
inc
test
or
outsb
rorb
cmp
jne
jmp
pop
mov
scas
shlb
rolb
mov
ror
shrb
iret
leave
dec
adc
jne
inc
fstl
push
mov
pop
cwtl
or
adc
movsl
jo
movsl
shlb
xchg
imul
add
mov
aas
lds
ret
add
movsl
fldenv
adc
pop
mov
jmp
xor
pushf
or
test
dec
push
mov
enter
pop
jl
test
dec
pop
add
push
cmp
mov
mov
fs
notb
imul
mov
ret
add
inc
push
movsl
fptan
sbb
test
pop
test
sahf
adc
lds
mov
cmp
fwait
lahf
add
hlt
sbb
add
add
add
insl
jg
mov
dec
and
ds
test
cmp
xor
mov
jns
push
sub
inc
inc
or
cld
xor
fs
loope
lds
or
or
imul
test
mov
pop
mov
mov
pop
mov
mov
jl
loopne
mov
jnp
sub
add
dec
rcrb
movsl
gs
adc
adc
test
cmp
mov
pop
int
add
out
aam
stc
cld
cltd
xchg
cmc
cmpsb
movsb
adc
sbb
cmpsb
notl
sbb
fiaddl
dec
popa
aam
lock
add
push
fcompl
or
enter
addr16
ja
jnp
jmp
outsl
mov
pop
and
mov
dec
shrl
sub
cmc
add
sahf
leave
stc
aam
test
add
imul
movsl
aam
pop
jno
push
or
and
movsb
jns
pop
ljmp
jmp
push
fcmovne
jle
arpl
mov
mov
cli
popa
dec
sub
dec
sub
ret
fcomip
aam
int3
push
add
add
jo
mov
scas
mov
jnp
lods
and
outsb
and
and
insb
inc
aad
cwtl
or
lret
daa
jle
jge
jns
and
jg
fcomip
mov
inc
pop
pushf
mov
inc
fldl
insb
sub
ss
cmpsl
push
xor
in
add
mov
xchg
popf
mov
cwtl
popa
nop
fdivp
cmp
sar
ljmp
xchg
lods
xor
fiaddl
cmp
pop
push
rol
cmc
inc
adc
xor
sub
and
mov
sbb
and
mov
adcb
hlt
decl
xchg
icebp
test
ljmp
xor
mov
xorl
test
test
subb
inc
sbb
inc
xor
jle
dec
sub
adc
pusha
andl
pop
mov
leave
cmpsl
push
popf
xchg
add
insb
aaa
push
sti
sbb
fistl
sbb
dec
cmpsb
pop
adc
outsl
xor
mov
into
pop
or
add
jmp
mov
movsb
test
or
enter
shld
rolb
aas
mov
gs
iret
xchg
jmp
inc
lods
loop
aas
call
repnz
mov
cmp
dec
or
sti
jbe
lods
lock
push
dec
or
scas
aaa
sbb
mov
mov
inc
mov
adcl
dec
mov
cld
mov
fcmovnb
dec
cmc
xchg
addr16
cmpsl
test
mov
addl
test
xlat
mov
iret
mov
icebp
cmp
push
imul
mov
orl
pop
imul
cmpsl
subl
cmp
rcrl
aam
xor
std
lret
mov
lahf
mov
xchg
in
mov
or
mov
les
in
add
push
dec
fdivl
xchg
test
sbb
add
add
fisttpll
cmp
clc
lea
xchg
popf
dec
xor
int3
push
jl
mov
loop
xchg
nop
iret
push
test
jns
push
sahf
aas
mov
aad
jle
mov
mov
mov
add
xchg
sub
rorb
inc
into
in
pop
int3
out
and
inc
and
cwtl
push
sbb
xchg
mov
cmp
mov
mov
xor
push
pmaxsw
rcll
loopne
fs
fdivs
stos
gs
mov
lods
aam
pop
cmp
lahf
adcl
mov
jge
scas
jno
lea
push
xorb
ret
imul
andl
out
xlat
out
or
enter
repnz
jbe
mov
or
sar
std
das
movsb
sub
jp
les
icebp
jae
test
hlt
or
mov
push
cld
lret
cmp
test
nop
fsub
nop
sub
or
stos
fcompl
inc
jl
sbb
and
pop
add
jb
test
ret
lahf
ret
mov
sub
xchg
sbb
out
push
jge
xchg
mov
mov
sbb
adcl
and
xor
or
rcl
sarb
xchg
and
push
push
hlt
aam
and
push
scas
jne
scas
das
mov
add
in
scas
mov
jl
lds
push
out
jae
icebp
cmc
bound
mov
lods
mov
adc
aas
cmpsl
or
adc
pop
pop
jns
add
mov
or
nop
sbb
jmp
or
mov
call
inc
iret
sbb
mov
call
icebp
adc
call
jmp
sub
push
pop
lds
out
cmpsl
pop
mov
test
bound
loop
and
add
repz
push
shrb
movsb
cltd
scas
sbb
jecxz
lret
fimull
test
cmp
adc
dec
add
jbe
xchg
mov
push
test
movsb
repnz
sbb
imulb
jnp
inc
xor
mov
mov
scas
out
adc
ret
arpl
cmp
testb
fdivs
and
push
mov
jb
stos
mov
inc
stos
mov
inc
add
sbb
mov
out
mov
sarl
mov
fdiv
push
mov
sarb
or
add
adc
and
scas
sarb
ret
mov
add
pop
je
jg
shr
idivb
dec
jle
push
xor
call
push
dec
xchg
imul
lret
push
pusha
adc
stos
cs
repz
jp
popl
pop
cmp
push
arpl
cmp
adc
test
xor
mov
ret
jb
test
dec
nop
mov
enter
or
mov
ret
cmc
clc
sbb
push
jno
mov
xchg
movb
ljmp
mov
and
shrl
rcr
sub
shll
test
nop
subb
enter
xchg
or
leave
inc
in
bound
lcall
dec
je
xchg
jo
push
ficompl
loop
pushf
lahf
xchg
hlt
ljmp
inc
or
mov
iret
mov
setae
or
jg
sbb
xor
into
sub
pop
je
xchg
dec
xor
or
mov
gs
enter
nop
sub
cmp
arpl
shl
xchg
ret
push
inc
addr16
pop
aaa
jg
leave
shll
or
lea
out
mov
nop
imul
dec
mov
pop
dec
xchg
movsl
cmp
mov
mov
data16
popa
sbb
in
rorb
sbb
test
leave
push
jge
repz
add
mov
or
jno
inc
lahf
int
ret
sub
dec
js
xor
fcmovne
xchg
mov
add
popf
mov
mov
or
ffreep
inc
out
movsb
cmpl
lret
xor
arpl
popl
and
jl
xor
pop
mov
and
push
xchg
mov
adc
popa
mov
nop
sbb
imul
mov
in
push
xor
xchg
sbb
fcompl
neg
jp
mov
std
clc
jb
lea
push
ffreep
stos
mov
nop
pop
mov
ret
or
les
mov
nop
in
inc
or
push
insl
aaa
adc
or
mov
ljmp
xchg
sbb
xchg
nop
adc
add
loopne
jp
fcmovne
std
mov
int3
xchg
mov
and
mov
inc
mov
push
push
cmp
push
daa
add
hlt
sahf
ret
jb
int
xchg
jl
aad
gs
fidivs
rol
inc
sbb
adc
dec
iret
jmp
add
sbb
mov
adc
cmpsw
ret
cld
push
loope
rorb
in
adc
cltd
js
stos
sub
imul
adcl
fmull
push
jmp
mov
mov
xchg
in
aas
dec
ror
ret
hlt
jg
cmp
adc
lods
inc
movsb
or
push
sub
xchg
mov
sub
pop
std
lret
loop
lods
or
push
push
jp
sbb
adc
push
test
cmp
lahf
or
mov
sbb
lds
ficoms
push
and
icebp
into
pop
dec
and
mov
std
mov
into
bound
push
test
sbb
cmc
inc
mov
xor
push
xor
lret
mov
jns
add
dec
cmp
mov
add
mov
sarb
aam
test
arpl
mov
cwtl
shll
or
xchg
xchg
sbb
sub
inc
jp
lods
jle
pop
adc
test
ret
jnp
push
jge
test
sarb
leave
imul
or
in
lahf
sub
mov
stc
stc
inc
adc
vmread
push
dec
popa
mov
mov
lret
inc
ret
stos
mov
adc
mov
push
cmc
lea
push
adc
in
insb
xchg
push
push
fistpll
push
pop
jmp
push
jp
int
mov
out
mov
jb
hlt
xor
xchg
into
movsl
iret
outsb
nop
mov
xchg
sub
adc
jecxz
test
push
sbb
fsubl
jns
push
mov
cmc
xchg
jbe
push
enter
mov
fisubrs
rolb
push
xor
push
stos
outsb
divl
inc
mov
out
inc
sbb
inc
push
rcr
inc
idivl
push
pop
push
lcall
mov
fildl
aas
dec
add
arpl
inc
addb
insb
inc
dec
push
nop
rorl
movsb
mov
mov
ljmp
scas
bound
addl
test
push
lea
imul
cmp
inc
or
pop
pushf
xlat
cmp
cld
insb
loop
jp
sbb
ds
mov
xchg
add
rcrb
stos
xlat
jle
mov
bound
lods
or
pop
adc
cs
fisubrl
popf
push
test
add
cmc
cld
sbb
cmp
test
adc
lds
sbb
enter
xor
rorl
les
jmp
cwtl
jno
sbb
or
xchg
pusha
loopne
iret
jns
pusha
loopne
inc
dec
ret
xchg
ljmp
mov
loopne
mov
and
push
or
push
sbb
mov
clc
mov
dec
push
xor
adc
push
sbb
sbb
xchg
test
jnp
jge
sbb
xchg
xorb
test
pop
push
or
fstl
testb
or
xor
xchg
xchg
cmc
std
add
ss
pop
cmc
cmp
lods
xchg
inc
jae
push
push
imul
cwtl
adc
or
mov
cmp
xchg
mov
push
adcl
test
or
out
out
in
mov
pusha
mov
rorl
jae
shlb
jg
adc
mov
push
or
xchg
inc
cmp
pop
hlt
mov
test
orb
push
jle
lds
popa
int3
or
mov
js
and
inc
scas
or
mov
and
mov
cmp
mov
scas
fmull
mov
xor
jbe
jge
sub
movsl
mov
sbb
add
or
rcl
push
rol
mov
and
xor
test
fdiv
and
sarb
add
and
dec
jnp
jg
push
in
divl
lods
scas
jl
or
dec
pop
nop
mov
popw
lea
aam
scas
lds
adc
mov
fidivrl
int
pop
aad
or
adc
sbb
out
fldt
ja
mov
sbb
rclb
push
cmpl
insb
int
inc
jmp
sub
loop
out
lods
enter
dec
clc
sbb
in
push
into
xor
stos
dec
rcrb
pop
lds
lcall
mov
push
and
test
cmp
mov
and
push
aaa
stos
repz
cwtl
adc
fistps
or
sahf
xchg
mov
jmp
xchg
dec
fwait
mov
out
scas
mov
mov
iret
sub
jno
cmpsl
test
or
dec
mov
adc
aad
mov
xchg
jb
push
lret
aad
das
or
pop
inc
iret
jnp
mov
adc
adcl
add
adc
adc
lret
mov
push
jmp
mov
fcmove
sub
shrl
mov
jnp
add
sbb
fwait
add
mov
test
lret
ds
dec
cld
pusha
popf
outsb
xor
mov
mov
lods
or
mov
hlt
and
push
pop
cmpl
int
sbb
mov
lds
stos
movsb
mov
fs
lock
and
mov
enter
sbbl
mov
mov
loope
push
pusha
cli
mov
das
cmpb
mov
jl
jg
adc
fs
lcall
fnstcw
in
pushw
adc
lret
jns
sbb
ficomps
popf
ljmp
cmp
scas
outsl
inc
hlt
pop
jp
inc
push
leave
gs
mov
js
mov
out
das
hlt
aad
adc
mov
mov
movsl
pop
push
rcrb
adc
rorl
mov
enter
mov
mov
xor
loopne
adc
and
jbe
inc
test
mov
pop
into
mov
sbbb
into
mov
int3
lds
pop
cmp
jnp
and
and
cli
test
push
fnstsw
movsb
cmc
lret
xchg
int
std
cld
jl
vpackuswb
lods
jae
and
scas
sub
inc
xchg
je
xor
sbb
aad
leave
cwtl
fadd
fadds
fdivrs
push
jle
add
inc
fsubrs
xor
xchg
jle
cmp
scas
ret
or
push
push
pop
xor
sub
push
fs
mov
and
inc
fcoml
mov
insl
mov
xor
lret
out
dec
ja
sbb
aas
daa
sti
imul
sbb
or
jg
adc
pop
xor
mov
inc
xchg
mov
push
into
push
xchg
push
loop
cltd
jne
lcall
test
das
or
cmpsl
push
cltd
ret
sahf
aam
lds
xchg
dec
xchg
lcall
jg
jo
mov
mov
xlat
push
push
sub
mov
sbbl
cmpb
add
add
cld
xchg
imul
out
popa
mov
jns
and
pushf
lret
ret
push
or
gs
insb
stos
movsl
ljmp
daa
xor
cmp
lods
roll
aas
cmpsl
push
pop
movsl
aas
rorl
shll
cmpsb
mov
inc
in
push
dec
in
cwtl
hlt
mov
ror
loope
sub
test
popa
lahf
jo
inc
pop
mov
gs
iret
mov
pushw
fdivrl
cld
ret
push
and
cmc
sub
push
arpl
mov
pusha
add
leave
sbb
shrl
int
add
inc
int
mov
fstps
mov
ret
push
nop
jne
sub
cmp
leave
and
or
push
out
rol
aaa
or
cmpsl
setb
mov
inc
incl
aad
push
pushf
push
lds
jb
mov
or
test
jl
and
hlt
or
out
or
mov
andl
bound
add
sub
adc
mov
aad
loop
mov
jecxz
mov
inc
imul
daa
das
mov
jecxz
sub
lds
out
dec
popl
inc
and
pop
addl
inc
stos
xchg
sub
cmpb
sub
and
mov
mov
cmp
rolb
hlt
cmp
adc
xchg
xchg
inc
loop
mov
adc
inc
insb
loopne
xchg
icebp
xchg
test
rcl
jecxz
sarb
jnp
into
mov
popf
xchg
imul
pusha
lret
int3
test
sbb
adc
lret
add
shl
or
lds
pusha
pop
jnp
mov
xchg
mov
jl
leave
xchg
inc
add
inc
or
js
cmpsl
xchg
insb
mov
ds
clc
xchg
or
cmp
mov
inc
mov
icebp
fldt
repz
imul
mov
pop
enter
test
jl
pop
jp
lods
add
xchg
xor
push
push
cmp
xchg
lods
imul
adc
lods
push
daa
adc
pushf
andb
orb
inc
ja
add
shl
jl
mov
rcrl
adc
loope
jmp
outsl
imul
add
fdivrs
cli
iret
fistpll
xchg
ud2
jmp
mov
mov
test
ljmp
or
xchg
push
in
xchg
push
insb
cld
or
sbb
sti
cmpsb
hlt
lods
sbb
push
iret
sarb
add
dec
call
push
mov
sub
jnp
ljmp
mov
fnsave
push
mov
mov
xor
jo
in
pop
xor
adc
leave
popa
cwtl
jmp
jno
jno
lea
pop
xchg
mov
and
mov
testl
sbb
mov
cmp
test
enter
mov
fimull
mov
outsl
dec
shlb
testb
das
vshufps
out
test
shrb
mov
testl
inc
mov
nop
mov
adc
mov
jge
dec
shlb
push
push
ss
ljmp
add
jbe
fcmovnb
popa
add
adc
dec
push
xchg
mov
les
add
sti
fcoml
ret
sub
cwtl
or
mov
mov
xor
mov
pop
adcl
stos
add
shr
test
mov
xor
in
cmpsl
or
pinsrw
test
test
push
pop
mov
orl
lods
cmp
xchg
ljmp
xor
add
fisubrl
mov
pop
nop
cwtl
out
cwtl
pop
lods
stos
iret
jge
int
fdivrl
sbb
hlt
in
jb
sbb
sub
xlat
or
adc
rcl
adc
inc
and
nop
ja
mov
inc
xchg
pop
xchg
out
out
lds
and
xor
xor
mov
test
in
xchg
aad
movsl
lret
or
inc
pop
jnp
xchg
adcl
jo
xor
inc
lods
mov
leave
stc
sarl
push
mov
mov
decl
inc
jns
pushf
cs
stos
mov
sahf
sub
nop
filds
mov
jo
fs
adc
sarl
mov
add
lds
daa
fcomps
mov
iret
imul
lret
jbe
test
add
mov
or
adc
sub
js
xchg
dec
xchg
xchg
jo
mov
stos
loopne
jle
lret
test
sub
xchg
mov
xchg
mov
lret
push
jbe
jmp
and
mov
cltd
cltd
xchg
sbb
faddp
arpl
sahf
adc
not
into
std
xchg
das
imul
jns
mov
mov
dec
xchg
cld
push
or
scas
add
dec
int
cmpsl
cmp
add
push
mov
add
popf
or
int3
xlat
cmp
ret
pop
loopne
into
xchg
fsubrl
movsl
inc
mov
or
daa
xchg
aam
jae
and
jbe
dec
ficoml
xchg
loopne
jmp
shrb
movsl
mov
fdivl
out
dec
xchg
mov
popa
cwtl
inc
test
mov
orl
lea
pusha
xchg
rcr
int
test
out
nop
test
inc
rclb
das
push
fsqrt
sbb
xor
repz
sbb
negl
jge
nop
xchg
mov
push
cmp
inc
xlat
add
scas
ret
lret
dec
adc
lahf
shl
add
fsubrl
xchg
xchg
leave
fstpl
popf
mov
xchg
lods
std
rclb
push
jp
pop
mov
jle
icebp
mov
add
stos
jl
std
jge
fbstp
adc
aad
xchg
or
sahf
pushf
push
mov
daa
push
jl
das
cmp
test
push
rcll
jmp
outsl
or
jmp
imul
push
mov
repz
or
cmpsb
lods
mov
dec
xchg
dec
lods
push
add
jle
in
pushf
add
sti
xlat
movsb
fmul
fcoml
jecxz
lods
pop
ja
fldl
test
jp
mov
rcl
cmp
jge
lret
test
inc
shlb
outsb
ljmp
pop
xchg
adc
movhps
or
pop
cmpsl
outsb
xchg
test
enter
push
and
mov
sub
cs
push
inc
mov
xchg
stos
outsl
add
cltd
or
add
repz
xchg
or
xchg
pop
xchg
xor
mov
pop
mov
loopne
xchg
push
test
flds
mov
aaa
fsubrp
ret
xlat
or
sub
inc
lret
imulb
xchg
sti
mov
xchg
rcrb
sub
sub
mov
adc
add
int3
mov
and
int
neg
es
push
icebp
mov
xlat
out
bound
sbb
add
outsl
ret
stos
repz
xchg
mov
mov
pusha
loopne
shrl
xor
aam
addb
jg
mov
shrl
push
mov
inc
lret
or
sarl
mov
push
add
cli
xchg
int
pop
faddp
shl
stos
fnstcw
and
fdivrl
mov
imul
xor
mov
pop
ss
mov
jg
neg
fistps
arpl
or
adc
jbe
pop
pop
scas
enter
cmpsb
les
scas
movsl
idivb
cmpsb
lret
pushf
ds
mov
mov
inc
xchg
cmpsb
mov
movsb
add
into
xor
xor
push
xchg
mov
xorl
cltd
nop
push
shlb
dec
add
adc
lock
xchg
sahf
or
std
test
push
scas
add
or
jmp
aad
cmpl
sub
pushf
neg
fidivl
sub
add
dec
std
orb
clc
and
mov
cmc
inc
inc
and
mov
mov
ret
jg
adc
js
adc
xorl
mov
pop
nop
stc
enter
add
imul
subb
pop
xchg
mov
inc
mov
in
movsb
jp
push
test
mov
hlt
stos
imul
andl
mov
in
jp
and
into
and
inc
enter
cmp
hlt
loop
rcll
aas
mov
cs
out
test
xchg
or
adc
test
mov
cmp
pop
mov
lcall
adc
in
out
sub
loop
xchg
nop
and
loope
scas
xor
int
jns
lods
arpl
int3
repz
into
clc
hlt
std
push
mov
icebp
sahf
imul
in
mov
sahf
cmp
and
div
shr
xchg
mov
mov
cld
addr16
push
fstpl
clc
sbb
pushf
lret
sbbb
test
mov
fcompl
adc
outsb
jp
les
adc
xchg
sub
add
outsl
lret
xchg
add
lret
aaa
mov
cmpsb
or
aas
inc
das
popf
xchg
add
or
push
cwtl
pop
inc
jnp
pushf
test
xchg
adc
add
mov
aad
xchg
add
and
fcoms
add
xor
jb
cmpsb
push
jg
ret
gs
xor
cmp
add
lcall
sti
adc
jnp
jb
rorb
lret
cs
mov
scas
or
xchg
lods
loop
mov
roll
pushl
sub
mov
lret
add
mov
xchg
mov
icebp
push
and
jne
jno
jo
push
pop
dec
fisttps
mov
sub
pushf
cmp
xor
adc
fisubrl
mov
pop
test
sbb
jg
jl
stos
mov
xor
in
cmp
mov
into
mov
xchg
push
sbb
jg
cmc
sbb
push
mov
jp
mov
into
mov
rcrb
shlb
jmp
xchg
je
push
roll
popa
sbb
aaa
fs
mov
loopne
push
dec
mov
cmp
popa
sti
mov
fwait
sbb
addl
testb
cwtl
inc
sub
cmc
jbe
pop
xchg
xorl
cwtl
fwait
adc
add
push
enter
add
cmc
sub
test
and
and
sar
mov
jg
push
adc
sbb
xor
mov
pushf
pop
out
mov
adcl
lret
mov
jo
sbb
movsb
jno
les
mov
lcall
inc
fwait
mov
mov
lahf
shl
mov
adc
mov
mov
xlat
adc
fwait
adc
test
xchg
enter
mov
sub
push
adc
or
int3
push
push
stos
imul
or
adc
mov
pop
stos
fdivrl
rolb
mov
xchg
movsl
mov
xchg
mov
inc
jmp
lods
jmp
cmc
add
insb
nop
sub
fnsave
xor
lret
xchg
xchg
pop
clc
das
lock
test
mov
andb
push
push
lds
mov
mov
pop
dec
in
mov
movsb
fnstenv
cld
inc
xlat
rcrb
mov
stos
or
arpl
cwtl
add
nop
inc
xchg
stos
mov
iret
shrb
shlb
mov
adc
and
movsl
stc
add
xor
mov
dec
mov
mov
mov
aad
jg
mov
fcmove
int3
or
mov
xchg
cmp
test
out
aam
fldt
loope
lods
js
add
mov
addl
scas
sbb
sub
je
or
mov
xchg
mov
movsb
imul
jb
lret
jge
pop
mov
shlb
iret
sarb
adcl
fisubrl
or
xchg
cmc
pushf
cmpl
notb
sahf
out
sti
lret
pop
into
dec
jmp
add
mov
xchg
insb
cwtl
mov
xor
or
jne
dec
and
jg
das
enter
or
nop
mov
pushf
rorb
shrb
dec
cmp
xchg
add
shl
and
mov
adcl
dec
fsubrs
addl
xchg
adc
adc
push
shll
cmp
addr16
and
xor
mov
mov
pop
xchg
inc
jle
addb
or
jp
or
cltd
xchg
jnp
mov
test
test
mov
xchg
test
dec
shlb
lret
adc
test
hlt
aam
sbb
or
push
or
mov
fwait
aad
or
xchg
xor
je
and
cmp
enter
dec
push
dec
or
repnz
push
int3
in
enter
ror
cmp
xor
pusha
leave
outsl
xchg
divl
lret
shlb
or
cwtl
testb
pop
icebp
pop
mov
mov
insb
push
or
adc
mov
test
add
lock
mov
fsubrl
sbb
mov
mov
pop
fwait
cmp
std
lds
or
xchg
sbb
adc
stos
cs
or
adc
lods
jo
and
rcrl
jle
mov
arpl
fisubs
sbb
mov
mov
subl
enter
mov
mov
lret
jbe
lret
imul
dec
repnz
lock
mov
clc
and
or
cmpsb
mov
out
sbb
aam
push
mov
jb
pop
add
andl
les
dec
lret
sbb
out
fwait
scas
pushf
inc
mov
lods
lahf
mov
lods
rcr
mov
xchg
xchg
filds
add
aas
mov
jp
cmp
rclb
loop
xchg
xchg
cld
outsb
xchg
iret
push
jnp
stos
loopne
cltd
jl
cld
pop
sbb
adcl
jnp
std
insb
xchg
es
das
mov
shll
shr
mov
mov
xchg
ds
or
pop
jno
movsl
pop
dec
jns
pop
imul
sub
push
pusha
scas
arpl
mov
int3
les
test
xor
xlat
call
lods
rcll
cmp
xchg
test
loop
movsl
jo
out
inc
inc
je
je
outsl
rolw
lock
or
ja
ret
fistpl
push
push
sub
movnti
cld
pop
add
xor
fsubs
pop
aam
mov
jae,pt
das
jb
and
xor
push
shr
in
mov
sub
bound
jnp
rolb
mov
xor
lods
xlat
mov
xchg
imul
or
test
movsb
sub
add
lret
jecxz
or
push
shlb
cld
sarb
aad
or
mov
test
pop
ret
mov
xor
inc
xor
sbb
or
pop
mov
xchg
sbb
cmp
mov
xchg
push
mov
sarb
push
mov
scas
xor
cld
cmpsl
call
icebp
inc
es
fimull
xchg
lret
xlat
mov
mov
jmp
inc
or
add
push
bound
int
addl
jg
out
pushf
jnp
cli
nop
lahf
add
fimuls
out
add
iret
cmc
dec
sub
xchg
cmp
xor
dec
mov
dec
daa
mov
jbe
mov
shl
test
cmp
mov
aad
adc
ljmp
pusha
mul
dec
sbb
xchg
into
adc
imul
add
cmp
or
test
icebp
jg
add
sti
scas
adc
lods
push
imul
xchg
or
test
sub
sbb
push
sbb
sub
into
pop
pop
je
add
cltd
mov
cmpl
sbb
sbb
mov
shll
popa
adc
or
enter
jnp
leave
jge
fdivrs
in
and
imul
test
xor
data16
jge
or
dec
test
xlat
shlb
sbb
dec
shl
rcll
lds
adc
push
daa
or
fists
rorl
repz
pop
or
idivl
les
xchg
sbb
loop
xchg
mov
xchg
movsl
fisubrs
lcall
cld
adcl
mov
cmp
xchg
movsl
add
mov
sti
lock
mov
dec
or
add
jge
adc
pushf
adc
test
ficompl
push
fidivrl
rol
outsb
int3
inc
mov
ret
push
xchg
and
or
push
mov
cmp
mov
sub
rorb
imul
leave
test
lcall
push
stos
push
mov
ret
pop
cwtl
push
mov
cmp
loopne
scas
inc
mov
or
ja
or
out
pop
mov
dec
imul
fldcw
sti
js
imul
inc
mov
mov
lret
in
pop
adc
nop
lods
xlat
in
scas
mov
dec
stos
loop
sbb
pusha
mov
jae
scas
dec
xor
xchg
in
mov
imul
loope
imul
repz
lods
lcall
les
orb
daa
fbld
addb
adc
fimuls
imul
inc
push
push
cmp
or
repnz
jl
mov
cmpsb
jecxz
push
nop
cltd
mov
fisubrs
rolb
mov
mov
dec
cld
push
jnp
lods
fldt
mov
lods
inc
movsb
cmp
cli
inc
push
push
test
lods
mov
pop
mov
push
adc
or
push
shlb
lods
repnz
jne
lock
mov
outsl
add
les
jle
and
pushf
in
sti
mov
icebp
cltd
leave
lods
mov
xchg
rolb
lahf
pop
jns
mov
jnp
pop
mov
aas
push
xchg
sbb
or
mov
or
in
cmc
dec
lods
sbb
inc
cmpsl
test
pushf
mov
and
hlt
mov
xchg
clc
jle
dec
push
cmp
int
lret
imul
cmp
mov
cmc
cmp
js
xchg
cmpb
shll
int3
or
xor
pop
shlb
shr
orb
mov
shl
int3
xchg
pushf
adc
insl
mov
lock
jmp
fcomps
testb
and
inc
add
jae
imul
lds
outsl
xor
fwait
mov
leave
push
fisubrl
scas
fidivrs
hlt
popa
pop
call
mov
sbb
clc
jge
or
stos
cltd
enter
nop
jb
inc
shl
xchg
leave
andl
adc
aas
test
out
mov
mov
mov
pop
mov
dec
je
into
push
mov
dec
adc
mov
stc
mov
mov
and
sbb
aam
mov
leave
hlt
fiaddl
int
dec
dec
mov
ror
sbb
mov
rcrb
xchg
mov
cmpsb
push
jb
mov
in
test
xor
jp
lahf
cmp
aam
aad
test
add
pop
lret
mov
orb
xor
adc
inc
in
cmpsb
into
js
sub
or
out
add
jne
mov
mov
fstpl
dec
adc
add
lret
int3
mov
push
mov
insb
xor
enter
cmp
and
movsl
in
push
and
push
out
sub
or
fsubrl
loopne
jp
or
mov
add
jo
push
mov
and
mov
shr
xchg
dec
pushf
loope
push
mov
mov
rcrb
dec
sbbl
mov
test
lods
sub
out
hlt
test
daa
cmp
int3
mov
sbb
xor
in
mov
push
enter
sbb
jle
scas
mov
test
dec
mov
in
xchg
andb
adc
or
jge
icebp
popf
fadds
jbe
leave
pop
or
pop
xor
ljmp
out
xor
mov
lahf
sbb
aad
scas
mov
stc
dec
movsl
pusha
sbb
out
xlat
pop
ja
xor
add
mov
xchg
mov
les
xor
movsb
mov
or
jge
add
pusha
imul
mov
xchg
and
daa
fstps
xchg
repz
and
les
cwtl
add
rcrl
xchg
inc
push
push
call
fldcw
mov
pop
jno
scas
pop
ja
aas
mov
mov
adc
and
mov
addb
sub
jae
mov
fbstp
rolb
shrb
cltd
movb
cwtl
ja
pop
mov
adc
jno
sbb
pop
pop
bound
out
and
and
std
scas
pop
lock
mov
sar
or
call
ficoms
push
inc
mov
rclb
or
cmp
popf
mov
mov
rcll
ja
fwait
jle
mov
subl
xchg
mov
xor
xchg
add
movsl
adc
adc
lret
nop
jae
rorb
mov
sahf
xor
js
push
or
outsl
loopne
sub
xchg
add
test
mov
xchg
ja
jns
add
inc
test
mov
movsb
mov
xchg
outsb
add
cwtl
mov
push
add
jo
out
movsl
call
lock
int3
or
xchg
cmp
adc
or
adc
sahf
jmp
xchg
cwtl
addl
mov
xchg
cmc
cmpsl
rorl
rolb
add
pop
or
les
mov
and
ljmp
shlb
and
mov
cld
pop
ret
enter
std
and
ret
fcmovbe
and
repnz
pop
fwait
jns
testl
call
imulb
jo
jo
iret
test
jae
orl
adc
call
insl
imul
lret
ret
cmpsb
icebp
leave
cmp
mov
add
xchg
inc
leave
insl
jns
ja
fistl
ljmp
lret
adcl
addb
leave
gs
cmpsb
jl
aas
dec
popa
pop
mov
and
jns
mov
hlt
shll
ljmp
xchg
push
push
dec
add
js
ja
and
push
pop
nop
adc
mov
xchg
adc
mov
sar
xchg
adc
rsqrtps
into
jp
loop
xchg
int3
lds
jno
outsb
push
xchg
push
and
xchg
jno
imul
into
jl
pop
test
leave
cmp
jmp
stc
mov
push
xchg
cli
mov
mov
pop
stos
adcl
int3
push
test
add
pushf
mov
pop
cltd
dec
cmc
mov
xchg
or
cmp
sbb
cmp
imul
lods
mov
push
xchg
jnp
jl
xchg
cmp
cmp
mov
xlat
push
rorl
andb
inc
mov
subb
lahf
stos
add
jnp
dec
inc
imul
stos
xchg
shrb
sub
sub
mov
fists
mov
inc
pop
xchg
mov
lods
fnstcw
rorb
pop
cmp
sub
loopne
shlb
mov
daa
lcall
cmpb
lret
or
lods
jno
mov
mov
lea
sarb
cmpsb
jmp
mov
cli
in
mov
jl
test
jecxz
into
dec
jge
add
ror
push
loopne
cltd
mov
jo
es
xchg
in
mov
add
scas
fists
in
lea
jne
xchg
pop
mov
subl
hlt
fistpll
xchg
xchg
popl
psadbw
in
lahf
pop
or
in
std
pushf
rolb
in
cwtl
xlat
leave
push
pushf
hlt
mov
adc
adc
push
xor
add
mov
xchg
lods
mov
and
pop
test
mov
loopne
xchg
sbb
jnp
xchg
pop
sbb
test
rcl
test
or
fildll
fistps
sarl
fmul
addl
pusha
ror
sub
enter
mov
pop
rcrl
add
testb
push
mov
cmpb
and
adc
push
cmpsl
aam
shr
jb
mov
aad
push
rcrb
clc
sub
xor
lret
stos
loope
ret
cmpsl
and
fcomps
dec
mov
call
out
xchg
jns
inc
push
inc
xchg
lea
jns
inc
mov
aas
or
stos
add
jge
inc
fisubl
push
loop
pop
jge
test
pop
add
jge
sbb
lret
dec
add
scas
subl
mov
cld
je
shll
sub
lcall
pop
inc
sub
shll
jg
sub
bound
inc
cli
xchg
or
pusha
fnstcw
lret
bound
stc
negb
xchg
mov
iret
add
imull
cmp
idivb
testl
sbb
xchg
ret
add
imul
jg
clc
fwait
leave
cmc
jp
push
jnp
std
jg
out
push
or
call
dec
faddl
jae
inc
fisubrl
xchg
or
add
mov
movsb
in
into
stos
aam
dec
loop
stc
push
inc
xchg
mov
xchg
jae
xchg
mov
sbb
mov
xorl
inc
xor
push
mov
cmpsl
stc
nop
hlt
jne
fistpll
cmp
cwtl
mov
sub
loop
or
nop
imul
cmp
lods
data16
push
insl
test
add
jns
xor
lods
jnp
into
fsubrs
push
adc
mov
cmc
lea
mov
js
pop
jge
lret
dec
jae
lret
fbstp
sti
fcmovbe
push
lret
scas
mov
xchg
sub
pop
mov
or
icebp
jle
cmpsl
inc
dec
fcompl
loop
xchg
out
pop
mov
cwtl
add
test
mov
int
popa
call
push
jb
mov
sbb
xor
xchg
cwtl
cmc
test
mov
push
dec
out
scas
mov
imul
jbe
in
xchg
movb
add
decb
out
add
icebp
jg
rorb
lahf
inc
adc
in
mov
mov
cld
ds
enter
inc
aad
add
xchg
cmp
adc
lret
jge
outsb
push
fbld
or
orl
gs
data16
xchg
into
lock
inc
or
cmpsb
mov
fdivrs
std
inc
xor
sub
jp
cmc
sub
insl
push
and
das
sbb
mov
out
fstl
fldenv
loop
adc
mov
mov
int3
push
adc
or
aam
fsub
aas
lret
lock
adc
mov
pop
xabort
or
leave
sub
ret
mov
ds
es
ds
ret
jge
mov
pushf
mov
out
add
inc
mov
ret
subb
sub
dec
addr16
std
inc
adc
popa
out
imul
hlt
fisttps
shrl
shrb
mov
mulb
cltd
xchg
repnz
in
icebp
adc
xlat
sub
dec
rcrb
add
pop
inc
aas
mov
into
shrb
adcb
jne
inc
add
or
into
pusha
int3
cmp
mov
push
dec
movsl
rcrl
xchg
dec
adc
jg
mov
xlat
cmp
xor
or
cmp
xchg
xchg
sub
and
push
ss
inc
shll
sbb
std
pop
out
cmp
mov
test
divl
sahf
pop
xchg
and
sub
adc
iret
cmc
ja
cmpsb
cwtl
fstl
mov
cmc
inc
sub
cltd
cmpsl
lods
hlt
outsl
inc
test
arpl
jg
mov
lret
fildll
cmpsl
nop
pop
xor
mov
add
stc
lock
xor
sar
arpl
into
sbb
dec
adc
stc
std
xor
shll
mov
or
mov
xor
mov
imul
clc
jne
stos
push
inc
stos
stc
lret
mov
jno
fwait
nop
mov
push
mov
movsl
push
push
mov
mov
divb
push
into
push
mov
or
movb
testl
daa
pop
lret
jae
cs
add
rorl
fists
mov
mov
jle
idivl
out
js
xor
add
cld
push
test
sbb
lcall
push
mov
sbb
mov
loope
mov
mov
nop
movsb
pushf
aaa
mov
sbbl
cmp
mov
addl
push
data16
lret
cmc
pop
into
lret
pop
push
stc
in
outsb
test
mov
mov
hlt
adc
mov
ret
leave
int3
dec
pushf
mov
mov
mov
int3
mov
leave
lock
and
adc
mov
xchg
lock
and
xor
inc
stos
inc
xlat
adc
sub
lods
mov
add
mov
cli
add
ljmp
and
inc
popa
xchg
in
sub
jbe
and
imul
out
shlb
mov
lods
cmpsl
outsb
pop
es
push
lock
mov
jp
sti
popa
xchg
test
fstpl
pop
out
xchg
mov
enter
leave
or
mov
cmc
and
rorl
xor
aad
stos
pop
jns
pusha
outsb
ret
movsl
mov
mov
shll
idiv
xor
movsb
xchg
mov
les
mov
lock
cmp
fimull
adc
mov
enter
adc
pop
jle
xchg
stos
dec
sub
lret
pop
and
push
pop
loop
jbe
and
scas
in
or
sar
sti
push
aam
scas
popa
movl
popf
enter
fidivrs
jle
dec
sub
jno
jno
cmpsl
inc
test
cmpsl
jno
or
lock
nop
ret
jl
pop
sbb
lcall
cmp
arpl
inc
popf
mov
mov
aas
cmpsl
xchg
decb
or
or
adc
and
mov
sub
pushf
aad
adcb
dec
xchg
adc
stos
sbb
outsl
xchg
push
or
pop
sti
push
ds
mov
cwtl
xchg
jns
push
bound
xor
or
cmc
or
mov
pop
notb
test
jle
xor
pop
adc
aam
jns
movsb
adc
sahf
ret
das
adc
inc
loope
int
clc
or
stos
adcb
nop
jne
dec
mov
add
ret
fistl
enter
rcl
ljmp
inc
sub
push
sub
adc
mov
nop
inc
or
cli
or
adc
mov
inc
mov
loopne
int3
mov
out
nop
sbb
jae
xchg
inc
inc
sub
loopne
shll
jle
sub
sub
bound
pop
and
pop
cld
push
sub
mov
add
rcrb
cltd
subl
xor
inc
js
sarb
aas
push
mov
adcl
out
mov
jbe
loop
addr16
js
mov
andb
and
mov
dec
sbb
movsl
stos
inc
dec
inc
test
lea
addr16
mov
xor
xor
adc
mov
and
adc
lds
xchg
mov
lock
dec
mov
ficoml
mov
pop
test
cwtl
sbb
pushf
xchg
in
nop
mov
pop
ljmp
insl
inc
sbb
mov
icebp
test
rclb
inc
mov
icebp
jg
in
jecxz
lods
inc
ret
stos
fnstenv
push
dec
mov
jnp
mov
pop
or
mov
enter
test
sbb
shll
or
nop
int3
mov
jbe
add
jmp
and
stos
mov
jae
rcrb
and
loop
imul
inc
lods
pop
inc
push
pop
xor
lret
adc
xchg
dec
rolb
sbb
mov
fnsave
xchg
or
sub
cli
pop
sbb
test
out
mov
lcall
or
mov
xchg
or
std
mov
adc
test
shrb
call
mov
inc
push
adc
xchg
inc
jg
test
stc
call
int3
ljmp
jl
jmp
ror
and
inc
mov
or
and
xlat
leave
xchg
push
xchg
cmp
mov
mov
add
pushf
rorb
push
push
adc
test
and
add
test
add
orl
dec
rcll
andb
xchg
inc
mov
xchg
shlb
lret
loopne
adc
xchg
pop
outsb
mov
xchg
leave
pop
sti
sbb
ja
aaa
mov
outsl
pop
jbe
or
sahf
cli
gs
mov
adc
xchg
jmp
call
xchg
sbb
cmp
test
int
and
test
fwait
and
nop
inc
cmpsb
pop
sub
leave
test
and
push
dec
mov
fs
adc
adc
adc
sahf
dec
xchg
mov
rcr
adc
push
test
es
mov
push
dec
fstpl
shlb
jge
jg
or
or
inc
popf
adc
dec
adcl
push
sahf
or
roll
mov
mov
ret
cmc
add
ret
lods
scas
add
aad
js
sub
add
scas
test
nop
pop
inc
push
cmp
test
stos
ffreep
mov
test
mov
mov
mov
daa
jnp
nop
mov
mov
nop
jge
bound
mov
loopne
mov
mov
out
sarl
mov
xor
loope
jb
loopne
iret
mov
mov
xchg
lret
cli
lock
jecxz
test
rorb
les
pop
inc
int
mov
outsl
jnp
xchg
rorb
mov
aam
fistl
sub
dec
das
mov
or
repz
rolb
and
xchg
pusha
ds
jle
sbb
imul
shlb
out
out
cwtl
jge
jmp
sbb
cld
dec
pop
add
test
aam
inc
mov
lret
sub
inc
mov
rorl
dec
in
or
push
push
aad
in
pop
mov
mov
ficomps
stc
fcoms
and
in
dec
pusha
test
push
sbb
lcall
pop
push
or
jge
mov
test
stos
mov
xchg
jne
push
pop
xor
push
mov
mov
loop
enter
xchg
rorb
and
fdivr
mov
pop
mov
jbe
xor
fs
dec
mov
xchg
js
jp
or
mov
xor
push
or
sbb
sub
out
lods
lcall
or
call
push
adc
out
jg
fadds
das
stos
xchg
loopne
enter
xor
xchg
pushf
hlt
xchg
sub
sbb
adc
shrb
add
lret
popa
adc
nop
stc
mov
mov
rcrl
jo
enter
imul
sub
imul
mov
mov
nop
xchg
movsl
xchg
xchg
repz
xchg
mov
sub
xorb
add
imul
xchg
stos
dec
jae
andb
rorl
std
mov
inc
jns
test
lret
push
int
cwtl
adc
test
outsb
shll
mov
call
lea
push
das
movsb
lcall
cwtl
xchg
inc
popa
popf
enter
pop
add
leave
mov
mov
movsb
arpl
adc
push
bound
jg
fadds
inc
xchg
push
push
cmpsb
adc
lcall
sbb
pop
sub
pop
cmp
cmp
jnp
mov
addr16
mov
xchg
mov
ret
push
fcomip
cmp
test
inc
sarl
sbb
jp
in
popa
mov
mov
aam
dec
stos
inc
movsl
stos
push
xchg
aaa
jge
scas
jno
rcl
enter
and
int3
push
fstpl
fidivrl
fcompl
aaa
pop
ret
sub
xchg
movsb
or
cltd
sbb
xlat
cmpsb
add
lret
movsb
sub
adc
lock
lahf
pop
outsb
mov
sub
rcrl
arpl
shlb
loopne
adc
dec
mov
in
movsb
dec
ret
imul
or
mov
xchg
ljmp
xchg
js
rorl
or
dec
sub
fwait
cmp
mov
inc
push
pop
cwtl
cli
pop
test
mov
pop
inc
mov
jecxz
popa
mov
push
fmulp
and
test
pop
ftst
cltd
lea
mov
les
aad
aaa
mov
mov
xchg
mov
jo
mov
shll
jnp
loopne
or
jbe
mov
rclb
adc
cwtl
rcr
pushf
cltd
xchg
xchg
sub
xor
mov
mov
and
pop
adc
sub
imul
insb
xchg
lods
es
add
pushf
es
pop
std
sub
jmp
xchg
ljmp
lea
jecxz
je
cmp
jae
sbb
xchg
or
test
mov
and
fcoms
jle
adc
test
dec
lret
and
mov
mov
out
mov
mov
out
cmp
sbb
xchg
enter
es
xor
adc
fs
or
xchg
imul
hlt
mov
out
mov
mov
movsl
pushf
leave
mov
mov
hlt
adc
adc
dec
idivb
rcr
adc
and
lds
test
inc
leave
icebp
or
xchg
cwtl
or
xchg
sub
cwtl
stc
inc
push
mov
iret
subl
mov
push
fsts
lods
sahf
iret
adc
ss
or
test
nop
repnz
das
aam
mov
les
jmp
pop
cmp
test
in
xchg
add
jp
xor
pushf
and
sub
lods
lds
sub
rolb
jb
inc
pop
loopne
aam
dec
cwtl
mov
mov
int3
mov
pushl
mov
popl
das
testl
test
inc
mov
xor
negl
mov
pushf
pop
mov
pop
pusha
adc
jne
push
das
xchg
xor
shll
xchg
mov
shlb
push
int3
push
jl
mov
pushf
leave
sahf
xchg
stc
les
rol
lahf
nop
or
jo
in
mov
lods
add
out
mov
stos
dec
repnz
inc
or
mov
dec
pop
divb
pop
and
loopne
dec
mov
lret
fs
cmp
je
cmp
ret
pop
lret
sub
push
dec
pushf
pop
and
test
push
pop
xchg
jne
dec
adcl
lds
imul
xor
adc
outsb
pop
cwtl
push
mov
xchg
xchg
lods
jge
mov
aas
or
mov
test
stc
push
mov
mov
add
movsb
sbb
add
js
or
in
out
nop
cmp
stos
adc
cltd
movsl
inc
test
dec
out
jp
movsb
mov
cmc
cmp
mov
inc
iret
lretw
mov
mov
iret
xchg
inc
dec
loope
push
mov
mov
out
sbb
loopne
pushf
aas
sbbl
add
cwtl
rcrb
jnp
ja
cwtl
mov
test
xchg
cmc
mov
les
inc
pop
shrl
hlt
mov
arpl
xchg
leave
xor
push
dec
mov
cmp
in
sbbb
cmpps
mov
cli
std
mov
aas
inc
test
repnz
arpl
and
stos
mov
dec
movsl
gs
sub
lods
ret
mov
pop
daa
aam
pop
cmc
outsb
jno
lret
imul
in
out
fcmove
stc
lods
push
push
leave
or
and
mov
fisttps
xchg
stc
mov
test
xchg
and
aam
inc
aam
stos
sahf
test
add
rolb
movsl
adc
or
std
nop
push
xchg
adc
xlat
cmpb
in
leave
sub
push
arpl
mov
lock
pop
sbb
rcl
push
add
fstpt
lcall
cmp
or
lahf
fsubs
faddl
neg
jge
xchg
test
push
mov
inc
out
clc
call
movl
mov
mov
sbb
enter
adc
jae
sbb
mov
pop
mov
xchg
push
mov
push
ret
mov
loopne
push
or
loopne
test
jno
dec
xchg
mov
push
inc
add
test
xor
xlat
pusha
xchg
sbb
push
pop
ds
sub
xor
dec
xor
mov
test
test
ficompl
data16
xor
enter
mov
bound
or
dec
sbb
or
scas
adc
flds
call
mov
cmpl
cmc
xchg
inc
test
xchg
and
rcll
out
sub
jb
jns
in
xor
and
into
and
scas
jmp
xchg
movsb
pop
clc
cmpsl
sbb
mov
jne
cwtl
dec
mov
push
mov
mov
in
add
jb
aam
sbb
adc
inc
inc
jg
test
jg
cmp
jp
sub
fcmove
add
or
xorb
cmc
mov
fisttpl
mov
orl
add
jnp
dec
xchg
or
add
ljmp
xchg
sahf
loopne
daa
push
insb
cli
shll
mov
dec
movsl
shll
mov
test
inc
test
adc
sahf
rol
fcmovbe
mov
add
jg
pushf
cmpsb
add
shlb
mov
cmp
or
cmpsb
xlat
mov
mov
movb
or
pushf
rolb
xchg
mov
lret
mov
fcomip
lds
jmp
push
push
jp
test
call
insb
add
add
aaa
mov
push
shrb
sbb
lods
stos
dec
movsb
mov
dec
ret
xorl
xor
or
inc
mov
mov
int
jnp
add
mov
mov
fwait
lahf
pop
les
fidivrl
sahf
hlt
movsl
cmp
push
aas
inc
push
xchg
cmc
mov
clc
xor
sahf
adc
lods
ja
sarb
or
xlat
or
pop
adc
les
xor
lods
push
sub
mov
pusha
mov
jb
mov
cmp
fsubl
mov
shl
cmpsb
cmp
into
jnp
cmc
xchg
mov
lret
adc
xor
mov
mov
rcl
mov
fdivrl
fcmovbe
push
jo
jno
push
testb
outsl
mov
hlt
ror
sbb
cmpsl
cmc
movb
fidivrl
add
inc
leave
xchg
iret
aaa
jnp
xor
mov
adc
and
adc
ljmp
dec
into
push
outsb
or
mov
inc
mov
int
nop
lods
test
mov
scas
xchg
or
xor
addl
pop
push
vmovdqa
xor
add
and
cmpsl
jno
mov
sbb
add
dec
int3
in
or
adc
cmpsl
out
mov
cltd
ret
inc
movsl
xchg
test
mov
test
cmc
xchg
sub
in
and
outsl
enter
jg
lock
int3
jnp
cmp
xlat
aad
cld
test
mov
pushf
xor
push
push
xchg
and
cltd
xor
cmc
cwtl
scas
jae
clc
pop
inc
inc
adcl
rolb
loopne
enter
xchg
sti
jl
and
push
sbbl
lds
mov
nop
or
dec
push
jne
or
dec
inc
enter
out
push
mov
loopne
cmp
inc
subl
aad
or
push
rcl
aaa
dec
add
pop
adc
fsts
xchg
popa
pushf
hlt
scas
xchg
mov
cltd
mov
or
lret
test
out
sub
jae
ss
dec
adc
push
and
push
xor
lods
sub
js
lret
es
rcl
jmp
orb
loope
fsubrs
bound
adc
loopne
in
xlat
xor
popf
jecxz
les
dec
hlt
mov
ror
or
push
mov
ljmp
sub
xchg
nop
and
xchg
ret
mov
shrb
lret
xor
dec
push
mov
int
nop
xchg
xor
push
cmp
shll
mov
cld
cmp
add
cmp
fwait
pop
jo
inc
sldt
iret
dec
cmp
mov
mov
fadds
test
cmp
cmp
pop
mov
mov
negl
and
adc
lret
cmc
iret
dec
cmp
xor
stos
rcrl
pop
adc
or
testb
bound
adc
push
and
lret
popf
push
outsb
imul
push
pop
cwtl
loopne
mov
dec
nop
and
add
insb
mov
mov
xlat
data16
push
mov
lcall
xlat
lcall
decb
icebp
inc
add
or
pop
outsl
ret
loopne
andl
lahf
sbb
xor
xorl
fisubs
rcrb
pop
inc
push
xor
cmp
ljmp
popl
clc
lods
push
add
stc
and
xlat
sbb
cltd
jle
push
and
xor
sbb
pop
andb
aad
outsl
sbb
out
or
pop
ret
iret
int
fs
enter
or
popf
enter
adc
lds
cmp
test
adc
mov
inc
outsb
adcl
mov
mov
lods
shrl
adc
data16
jbe
adc
jge
lea
inc
xchg
repnz
and
push
jnp
cmc
inc
push
xor
and
in
aaa
xor
xor
sub
mov
push
das
adc
in
jl
mov
add
and
fmul
sbb
or
cmp
dec
push
xchg
ss
jg
sbb
sub
stc
cwtl
dec
sahf
jp
test
es
int3
cmpsb
addr16
fsubl
shll
push
add
or
or
cs
fs
inc
mov
lods
movsb
fsubrl
xor
test
pop
scas
das
pop
cmp
or
out
cmpsb
mov
add
in
cltd
cwtl
rorl
rorb
loopne
pop
loop
inc
imul
sub
push
gs
jns
std
and
add
aad
test
sarl
xor
add
xor
inc
movsb
sub
movsb
les
fistpl
adcl
daa
imul
add
aad
and
sbbl
out
movsl
out
xchg
test
ret
testb
in
mov
pushf
fsubrp
orb
add
add
jb
into
cmp
adc
fcoms
rclb
das
cltd
fisubrs
pop
cmp
xchg
stos
imul
ret
rcll
in
push
mov
pusha
lret
addr16
inc
divl
addr16
adc
iret
cli
lock
pop
jno
rclb
jl
movsb
adc
xchg
ret
insl
and
adc
int3
nop
pushf
mov
in
push
jbe
fs
lock
mov
mov
jge
mov
into
sub
push
xchg
jne
mov
in
cli
test
call
mov
push
ficomps
loop
lds
inc
lock
pop
or
rorl
add
dec
aas
sarl
dec
pushf
sbb
mov
cmc
and
mov
iret
lock
mov
inc
push
insb
test
ret
xchg
sub
cmp
inc
movsl
jg
test
ds
test
and
cli
test
andl
mov
cmp
ficoml
mov
cmp
sub
adc
adc
mov
enter
mov
std
je
les
shrl
fistl
fsubl
jmp
leave
sbb
and
testb
or
mov
push
nop
cld
std
cmc
xor
outsb
sahf
jne
lock
adc
call
xchg
jo
shrl
adc
scas
outsb
mov
movsb
fisubrs
inc
outsb
test
in
ja
call
dec
sub
xchg
leave
pop
repz
insl
cmpsl
cwtl
jp
cmp
cld
mov
cmp
cmp
and
xlat
mov
xor
xchg
addl
or
pop
adc
xchg
or
push
sbb
cmc
test
cmp
std
mov
dec
cs
jbe
cmpsb
add
jg
bound
andb
dec
adc
inc
xchg
ror
mov
mov
xor
push
mov
mov
leave
xchg
stos
clc
fisubl
lods
sbb
jp
fisubs
push
aad
loop
gs
jo
movb
fiadds
or
and
push
or
mov
popl
mov
mov
popf
mov
dec
pusha
pushf
popl
lret
cmp
hlt
mov
dec
mov
imul
xor
mov
push
mov
xlat
in
sar
or
cld
loop
mov
push
ljmp
jns
jmp
nop
je
push
mov
jae
mov
cs
add
cmp
and
push
fists
inc
lret
sub
ja
ret
dec
int
sub
pop
inc
mov
int3
mov
test
ja
mov
insb
lods
add
test
cld
lcall
adc
dec
dec
mov
push
scas
and
mov
jmp
inc
loopne
cmpsl
insb
cmp
mov
nop
dec
push
cmp
and
fistl
fstpl
fcomip
add
lds
or
pop
jno
pop
shlb
lcall
fst
mov
rcl
test
nop
push
adc
cmp
jb
cmp
mov
mov
push
scas
shrl
loop
or
repz
push
popa
stos
outsb
loop
rcrb
inc
mov
nop
and
mov
push
xchg
or
xchg
int3
cmp
sbb
adc
mov
jge
repnz
cmp
adc
aaa
jbe
cmp
fwait
xor
mov
popf
pop
mov
sbb
leave
add
in
movsb
stc
or
xor
ficoml
push
mov
xor
mov
clc
test
scas
mov
ficoms
mov
xchg
xor
adc
inc
mov
rcl
push
jb
jo
pop
loope
or
rolb
jle
int
rorb
lock
js
pop
xor
rcrl
inc
cmp
addr16
add
xor
jp
add
pop
jge
test
mov
imul
mov
add
mov
pop
jbe
enter
add
lock
mov
test
cmpl
int3
in
adc
cmp
push
inc
fidivs
lea
sarb
and
push
xchg
imul
in
int3
fimuls
jp
fbstp
sub
std
rol
or
les
cltd
mov
adc
lock
mov
jge
lock
adc
push
push
push
daa
test
xchg
hlt
or
stc
orb
xor
std
lret
xlat
inc
in
in
shr
ret
mov
cmpsb
call
cltd
lock
xchg
cmc
movsb
or
fbstp
jo
test
jae
lret
adc
mov
pop
add
push
pop
push
fpatan
push
xchg
push
cmpsb
test
sbb
rorl
mov
dec
pop
fbld
je
dec
push
scas
data16
mov
leave
pop
lods
jmp
imull
leave
shl
ljmp
pop
pop
sub
cli
dec
mov
sbb
sub
mov
jno
dec
and
clc
and
cld
mov
mov
stc
sub
or
ds
shr
and
std
xchg
loopne
cmp
or
clc
out
xchg
dec
sub
int
mov
mov
ss
push
xor
js
cmp
loope
cmc
movsl
les
aam
inc
push
push
pop
add
call
or
iret
stc
pop
push
loope
cwtl
movsl
pop
sub
cwtl
push
push
jne
mov
mov
pop
and
push
sbb
add
popf
sub
mov
lds
fiadds
xlat
add
sbb
mov
mov
cli
xorb
mov
cmp
push
lds
jns
add
add
or
mov
dec
inc
rol
pop
jmp
enter
movsb
sbb
out
mov
popf
jl
push
xchg
jno
loopne
vpperm
in
call
lret
psllw
inc
movsb
pop
enter
inc
cmc
xor
and
mov
jnp
push
inc
and
jg
and
fidivrs
push
dec
mov
push
jp
rcr
loop
mov
test
inc
add
mov
add
pop
xchg
insl
jmp
dec
xor
xor
lcall
xlat
lahf
adc
add
pop
test
xchg
iret
test
xchg
sub
jge
cmc
cmc
int3
imul
adc
cmpl
mov
sub
fisubs
push
xor
sub
inc
aad
and
xchg
add
xlat
and
mov
pop
mov
pop
mov
inc
add
mov
lock
xchg
in
inc
cmp
push
ds
inc
pusha
pop
stc
adc
daa
adc
lods
les
int
cmp
push
outsl
pop
mov
mov
mov
scas
dec
pop
and
mov
stc
js
jge
sbb
mov
sbb
scas
mov
test
cld
xor
xchg
adc
jae
es
stos
dec
and
movsl
xchg
cld
xchg
or
mov
mov
add
adc
or
aas
clc
dec
fstpt
pushf
add
cwtl
les
fcmovbe
xor
and
test
push
xchg
movsl
and
loopne
aas
shll
inc
xchg
mov
mov
andb
int3
cltd
mov
jo
xchg
imul
mov
sbb
mov
dec
push
test
les
call
shlb
ss
push
rcl
leave
std
call
mov
add
call
rclb
mov
xchg
test
pop
adc
in
repnz
and
add
out
push
mov
lods
imul
sbb
or
aas
or
jg
mov
fstpt
push
aas
addr16
xor
addr16
and
push
xor
cld
cmp
cmp
mov
ss
clc
roll
push
daa
out
jge
jp
and
sub
pop
jg
push
dec
stc
add
inc
mov
sbbl
nop
imul
nop
cmc
scas
andb
or
sub
mov
fmull
mov
inc
sub
les
call
xchg
or
imul
jnp
es
jo
fsubs
xlat
or
out
adc
xor
in
into
call
call
pop
and
mov
dec
addr16
mov
or
decl
add
mov
movsl
push
cld
push
mov
shl
mov
in
dec
hlt
xchg
jg
sub
movsb
or
jne
mov
or
sub
push
xlat
jmp
and
mov
mov
xlat
movsb
nop
das
mov
les
int3
mov
adc
mov
mov
or
pop
push
mov
mov
in
lods
clc
pop
sbb
cmp
fstpl
das
sub
pusha
stc
xchg
movsl
ja
cmpsw
lret
out
mov
mov
daa
adc
push
and
into
fdivrl
and
fnop
jne
pop
es
cmp
sti
xchg
pop
pop
ret
mov
call
xlat
jecxz
push
add
mov
movsl
lds
into
imul
inc
hlt
mov
or
ss
xchg
inc
mov
inc
pop
out
jbe
test
cmpsl
lock
scas
inc
dec
sub
cmp
lret
push
lods
add
out
dec
or
icebp
mov
outsb
adc
or
mov
jle
pop
test
int3
add
adc
inc
and
push
cmpl
icebp
add
addl
or
xorl
dec
aad
sbb
mov
cmp
dec
inc
in
jle
or
and
lea
or
xchg
inc
shll
testl
mov
jmp
mov
jg
xor
test
incl
cmc
lea
sub
or
gs
mov
mov
test
in
je
popf
xchg
add
inc
cli
insb
repz
xchg
daa
stos
fmuls
dec
cld
cwtl
imul
jg
fadd
inc
jmp
nop
clc
xor
fimuls
mov
cmc
cmpsb
sbb
inc
mov
sbb
push
popa
out
mov
cmpsl
mov
push
dec
push
add
rcr
icebp
push
push
cmp
mov
cltd
xchg
shl
sti
push
dec
cmp
add
scas
xchg
aas
xchg
loopne
pushf
xchg
xchg
push
ficoml
mov
fstpl
aam
icebp
add
lods
pop
push
mov
repz
inc
add
sbb
addl
mov
shrl
jg
test
rcl
sbb
and
incl
stos
loopne
jp
test
cwtl
xchg
pop
fimull
add
adcb
mov
mov
sbb
mov
aaa
push
lods
jns
jmp
add
push
or
or
in
add
mov
mov
and
nop
ja
jne
cmp
test
dec
jnp
xor
int3
and
add
push
cmpsl
shl
fimuls
out
sbb
into
fiadds
mov
stos
pop
in
test
nop
add
mov
mov
xchg
add
dec
xlat
hlt
xchg
shrl
jo
jnp
jg
mov
lahf
cmpsb
and
mov
cmp
xchg
cmpsl
int3
xchg
rolb
adc
fs
or
js
mov
out
mov
fldl
fst
mov
fdivr
mov
fdiv
xchg
push
or
in
jne
rorb
movsl
mov
mov
in
fadds
std
int3
mov
jmp
push
jns
shrb
ljmp
out
bound
mov
mov
fcom
sub
je
rorb
mov
call
or
icebp
cltd
mov
fwait
imul
add
mov
into
jns
test
push
lds
nop
je
cmpsl
dec
add
push
imul
adc
jg
adc
jno
addr16
jmp
or
and
fnstsw
dec
movsl
std
leave
or
flds
aaa
imul
aad
dec
xchg
call
xor
test
mov
inc
adc
mov
add
sarl
sbb
or
add
add
mov
movsb
jbe
mov
mov
aaa
cmp
add
cwtl
cmp
fidivrs
fdivr
sahf
nop
popf
or
imul
out
outsl
fisubl
lea
dec
or
add
hlt
aad
mov
inc
xchg
stos
inc
or
xor
sbb
idiv
xchg
xchg
dec
outsb
adc
add
and
cmp
cmpsb
jnp
mov
orl
inc
in
push
test
ja
stos
inc
es
loopne
jmp
xor
push
mov
mov
or
outsl
cwtl
jmp
mov
imul
pushf
mov
fiadds
scas
mov
xchg
pop
lea
arpl
pop
sahf
fs
cmpb
inc
pop
cwtl
repz
shll
pushf
mov
mov
nop
pop
pop
ficomps
insb
ficompl
pusha
push
es
add
sub
add
mov
mov
fadds
imul
sub
pop
inc
cltd
push
mov
jo
pop
pushf
movsb
add
pop
push
aad
mov
mov
push
test
add
ljmp
nop
xchg
pop
xchg
or
xchg
or
cwtl
fstps
pusha
jg
iret
sub
cmp
pop
xchg
dec
test
push
mov
push
xorb
or
lea
xor
add
inc
int
rorl
xor
enter
sbb
aad
add
jb
aad
and
pushf
mov
mov
cltd
orl
inc
mov
cmc
sarb
lret
dec
jle
inc
mov
popf
mov
fimuls
repz
and
push
sahf
jecxz
inc
pop
xor
xor
and
sbb
loope
imul
cld
subl
cmp
mov
cwtl
lock
imul
mov
icebp
mov
cmc
mov
outsb
adc
clc
cmp
fmull
pop
scas
orb
or
mov
push
dec
rol
jl
inc
sarb
movsl
arpl
xchg
rorl
sbb
hlt
lods
mov
mov
aas
mov
push
cmc
lret
fmull
dec
in
andb
mov
mov
shll
dec
pop
imul
ljmp
xor
jecxz
inc
mov
push
jb
adc
out
icebp
mov
add
jge
or
hlt
rcl
jle
jo
dec
add
mov
mulb
leave
nop
mov
mov
in
xchg
shlb
pop
lds
es
int3
or
or
test
dec
ljmp
push
pop
jl
rolb
call
xor
add
xchg
fs
xchg
pusha
jb
xchg
pop
shlb
cmp
inc
repnz
or
mov
fldcw
mov
push
mov
roll
inc
mov
xchg
push
shll
xchg
cs
lods
movb
inc
and
fmull
cmp
xor
jg
enter
pop
pushf
inc
ror
test
inc
adc
out
repz
cmc
pushf
adc
nop
mov
loope
push
jns
lock
test
insb
popl
pop
mov
push
push
mov
push
or
xchg
push
rolb
pop
inc
jne
test
xor
pop
hlt
aaa
pop
adc
rcrb
ljmp
fs
out
mov
xchg
lret
icebp
test
cwtl
add
out
pop
mov
popa
mov
incb
mov
adc
repnz
movsb
mov
sbb
xor
movsl
jo
xchg
rcr
aas
push
inc
push
mov
arpl
shll
mov
ror
cmpsl
orl
aam
scas
js
lahf
int3
adc
pop
aad
test
jae
outsb
popa
inc
mov
and
xchg
or
mov
mov
mov
shlb
sbb
mov
mov
mov
or
int3
cltd
call
jg
mov
fildll
inc
mov
call
mov
cld
add
mov
mov
lods
push
mov
rcrl
dec
clc
in
mov
lcall
std
in
adc
push
lods
lods
fwait
xchg
and
js
scas
cmc
stos
sub
fwait
mov
xchg
or
lahf
mov
jp
xchg
movb
ret
xchg
lret
mov
inc
jle
adc
sbb
mov
push
mov
cwtl
sbb
aaa
xchg
push
aad
xchg
xor
jo
gs
enter
aad
sbb
rcrl
in
mov
jmp
fldl
jbe
pop
hlt
fiaddl
sub
jne
inc
mov
xchg
inc
adc
ret
xlat
lcall
shlb
pop
retw
adc
mov
jo
sbbb
enter
xorb
sbb
dec
scas
int
or
lock
mov
mov
shll
adc
stos
add
and
enter
jmp
adc
mov
rorb
js
shl
jbe,pt
test
mov
push
or
sbb
adc
not
push
mov
jo
gs
jmp
mov
test
push
repnz
movsb
push
and
add
lods
fisttpl
cwtl
loope
js
int3
and
call
jg
pop
dec
fisttps
clts
mov
lock
add
push
mov
clc
or
mov
or
adc
das
jl
push
add
cli
popa
pop
adc
add
xchg
jg
dec
mov
cwtl
mov
fsubp
imul
in
mov
popa
adc
sarl
pop
push
test
mov
add
outsb
std
aam
and
or
jecxz
into
and
and
iret
std
aam
out
shrb
jge
mov
jp
add
lahf
xor
mov
loopne
dec
xchg
mov
xchg
iret
testb
cmp
adcl
mov
mov
rcl
push
scas
lret
jg
jne
hlt
shr
xchg
lods
inc
bound
inc
xchg
inc
dec
ret
scas
punpckhbw
cld
xchg
push
pusha
fwait
rcl
add
or
jns
adc
decb
stc
lds
xchg
push
lahf
enter
pop
add
mov
mov
mov
sub
inc
or
mov
lea
in
test
mov
cmpsb
cmpl
add
insl
xchg
jl
nop
xchg
loop
pushl
rcll
js
mov
mov
cmc
lods
mov
cmp
in
add
cmc
test
cmc
shll
mov
sbb
outsb
inc
call
adcb
mov
pop
add
fimuls
dec
fsubl
mov
enter
mov
xchg
mov
fisttpl
inc
into
and
jmp
mov
xlat
shrb
mov
shlb
jl
push
int3
xor
hlt
xchg
fsubl
faddl
and
pop
in
ret
sbb
sub
mov
add
mov
inc
cmp
inc
out
or
mov
enter
pop
int3
icebp
xchg
pop
cmpsb
bound
mov
pop
js
cwtl
test
jmp
push
xchg
dec
sahf
pop
adc
xchg
pop
enter
enter
fs
inc
dec
adcl
and
dec
cmc
aam
loop
fnsave
or
roll
pop
std
mov
incl
jg
test
popa
mov
mov
mov
push
or
and
lds
sub
int3
ljmp
fwait
sbb
jb
or
push
and
add
pop
jb,pn
and
imul
xchg
push
fisubl
int3
pop
xchg
adc
mov
xchg
push
add
shrl
pop
inc
call
sbb
cmpsl
mov
xor
iret
mov
mov
pusha
mov
nop
int
or
and
xchg
push
movsl
cs
mov
mov
insb
cmp
mov
jo
enter
fcompl
loop
adc
mov
mov
loopne
cwtl
add
aas
data16
mov
test
inc
int
movsl
cltd
pop
pop
stos
xchg
mov
push
in
fwait
addl
ja
scas
xchg
push
pop
lods
jo
and
dec
sub
imul
inc
inc
lods
lods
imul
xchg
mov
gs
xchg
sahf
inc
mov
insb
push
pop
test
sbb
inc
mov
scas
sbb
leave
push
fcoml
push
xchg
orb
out
scas
movsl
adc
popa
push
jecxz
nop
scas
fidivl
pop
repz
lcall
ja
enter
push
and
or
mov
inc
mov
lahf
jp
pop
adc
hlt
xlat
dec
iret
and
mov
mov
leave
mov
adc
loope
imul
mov
lret
add
push
negl
fld
stos
cwtl
imul
ret
pop
test
fucomip
mov
hlt
mov
or
mov
sub
and
push
insb
jae
sahf
push
pop
cwtl
fwait
imul
add
push
mov
add
xchg
test
test
int
pusha
adc
mov
rcl
cmp
or
test
jmp
mov
shl
xlat
mov
cli
addr16
fstps
jne
jecxz
cmpsl
jo
arpl
cmpsb
iret
pop
inc
lods
je
jl
push
gs
xchg
jle
inc
jae
or
jg
cmp
test
inc
ja
orb
fcmovnu
fisttps
sbb
mov
movsb
or
mov
fldcw
mov
into
xor
push
adc
mov
mov
sar
inc
imul
retw
mov
iret
aam
mov
imul
iret
test
pop
insl
sub
rcrb
js
mov
cmc
insl
cltd
lahf
mov
repnz
or
fdivl
std
jle
out
cmc
popf
add
arpl
jnp
sbb
je
mov
pop
sbb
js
ja
adc
mov
inc
in
lcall
jbe
dec
add
or
les
sbb
push
das
xchg
popf
cmc
push
mov
mov
enter
into
in
mov
inc
roll
push
jne
cmp
mov
loopne
cmc
mov
ja
dec
out
add
sbb
clc
movsb
adc
jne
mov
mov
popf
popf
push
lcall
add
mov
or
test
xchg
jmp
orl
push
mov
add
dec
xor
mov
push
out
mov
mov
call
xor
es
leave
in
xlat
hlt
in
fs
mov
xchg
push
mov
hlt
jg
mov
mov
lahf
fcompp
add
scas
shlb
pusha
lahf
mov
xchg
mov
mov
stos
stos
push
out
dec
lds
push
mov
cmpl
popa
adc
pushf
inc
fs
push
in
test
push
sahf
adc
mov
xchg
in
icebp
mov
mov
filds
xchg
flds
test
lret
jno
sub
pop
test
in
inc
sbb
mov
push
lret
mov
shrb
pushf
mov
push
jg
repz
roll
and
pop
orb
mov
push
and
out
mov
xor
jne
inc
in
or
mov
xchg
jo
mov
sbb
add
dec
and
xor
call
out
jmp
and
js
mov
xchg
mov
or
stc
aad
das
sbb
pop
mov
pop
adc
cwtl
dec
pusha
in
mov
nop
push
in
ljmp
jl
jo
xchg
or
cmpsb
test
pop
pushf
popa
in
les
push
sbb
mov
rolb
jg
push
ret
adc
sbb
add
nop
pop
xor
aas
loopne
dec
and
push
aam
loop
adc
addr16
pusha
out
adc
xchg
xor
shr
lret
push
aaa
int
mov
mov
xchg
icebp
test
jmp
clc
movsb
cmc
mov
mov
pushf
xor
mov
jg
fstpl
mov
cwtl
test
or
rcrb
mov
push
xchg
icebp
jb
adcb
int3
add
mov
test
push
lahf
mov
int3
int
sbb
mov
in
dec
movsb
addb
mov
mov
xor
mov
fdivs
push
mov
adc
jo
add
mov
and
nop
testb
push
cmpsl
int3
inc
sbb
ja
mov
xchg
xchg
cmp
fimull
movb
cmpsl
push
sub
in
jg
stc
jp
movsl
insl
pushf
adc
mov
loopne
lcall
js
fisubrs
xor
iret
inc
test
cld
imul
mov
shr
aam
xchg
imul
test
lret
add
roll
test
jmp
cmp
cmp
sbb
or
lret
mov
mov
or
dec
xchg
add
jmp
xor
adc
inc
pop
ret
xchg
xchg
sbb
into
icebp
and
dec
push
inc
inc
mov
test
loope
mov
push
lahf
add
push
rclb
pop
lock
mov
mov
add
lock
out
mov
adcl
test
dec
push
loope
sarb
rcll
xchg
sarl
dec
fadd
rclb
imul
cmc
xchg
xorb
movsl
aam
fisubrs
rcll
dec
cwtl
aam
loop
or
nop
sbb
insl
ss
popf
xor
pop
loop
jo
mov
add
loope
mov
orl
test
aaa
xor
js
inc
cmp
mov
pop
pop
imul
xchg
negl
add
pop
nop
ds
stos
movsb
imul
mov
adc
test
mov
sarl
mov
jo
andl
popa
cmpsl
push
fildl
inc
push
pushf
and
in
xlat
add
in
imul
mov
lock
sbb
mov
fmuls
in
xchg
mov
hlt
xchg
or
lods
in
movsb
cmc
xchg
mov
mov
cmpsl
test
insl
fidivrl
mov
and
frstor
pop
aam
rcll
cwtl
out
lods
fstps
in
enter
or
mov
loop
adc
decl
mov
orl
mov
pop
sbb
js
sbb
xchg
jbe
mov
orb
xlat
add
imul
loop
inc
mov
jbe
in
rolb
sahf
movsb
subl
fs
inc
paddw
push
cwtl
adc
jp
mov
jge
neg
fwait
js
cs
subl
or
out
popa
push
xchg
xor
cmp
or
mov
dec
xor
mov
ret
je
mov
mov
mov
xchg
jbe
ret
sahf
test
add
jle
mov
les
imul
and
sub
adc
lahf
adc
ja
adc
dec
sbb
jmp
pop
or
dec
js
ljmp
pop
adc
add
cmp
sbb
inc
pushf
fbstp
cmc
and
xor
lahf
cltd
xor
rcrl
xchg
push
imul
and
pop
mov
daa
push
pushf
in
fsubs
orw
clc
mov
xchg
testb
iret
lea
mov
jbe
add
js
mov
cwtl
movsl
xchg
nop
stc
fwait
and
fwait
adc
adc
mov
cwtl
iret
stc
into
imul
xor
jae
mov
jns
xchg
cwtl
adc
or
mov
mulb
sarb
lret
mov
xchg
or
fisttps
cs
sarb
int3
cmp
inc
push
addl
or
clc
orl
popl
cld
pop
jns
test
movsb
adc
test
cmp
repnz
mov
mov
and
mov
xchg
pushf
add
xor
fwait
mov
xchg
movb
subb
dec
xor
xchg
inc
frstor
add
and
sbb
lods
adc
in
lcall
in
mov
xchg
fsubl
mov
adc
push
and
jo
les
enter
jl
and
sbb
iret
xchg
jno
and
popa
int3
std
imull
dec
jp
xchg
call
mov
lods
xchg
cld
mov
lock
fs
jno
and
ja
enter
es
adc
test
cwtl
mov
cltd
fmuls
cmpl
iret
and
ss
dec
and
outsb
adc
push
stos
rclb
test
lret
sbb
shrb
outsl
and
adc
fstp
add
or
pop
mov
movsb
je
jl
test
lds
lds
mov
scas
adc
adc
mov
or
cmp
ss
or
nop
fiadds
xchg
adc
add
das
andb
mov
sbb
test
mov
shrb
xchg
test
xchg
jp
repz
cwtl
rolb
fisttpll
xor
mov
lods
mov
add
iret
pop
imul
mov
or
rcll
xor
push
sbb
sub
jp
test
mov
xchg
dec
repnz
cmpsb
add
pushf
popa
or
pop
mov
jle
iret
insb
dec
into
xchg
xor
add
repz
sbb
sub
inc
out
pop
dec
popa
lahf
lret
push
adc
fwait
inc
xchg
xchg
push
arpl
push
lods
add
andb
jo
pop
lods
lods
in
jbe
adc
adc
jl
popa
mov
loopne
sarl
mov
mov
lods
test
int3
insb
and
and
je
sarb
mov
fldl
popl
adc
or
xchg
pushf
aad
jp
mull
imul
fcoms
fmull
cmc
jecxz
stos
xchg
inc
out
je
add
imul
hlt
or
cmp
adc
add
xor
mov
movsl
leave
clc
cmp
fwait
enter
or
nop
or
arpl
out
mov
push
iret
pop
jl
add
push
insb
sub
int3
cmc
cltd
out
imul
call
test
imul
sahf
roll
arpl
rorb
lret
jge
or
xor
add
or
repnz
outsb
adc
jp
jecxz
fisubrs
inc
dec
das
cmp
inc
decb
lahf
xchg
mov
test
sub
addl
add
adc
mov
xchg
hlt
imul
xchg
mov
push
enter
aam
xor
mov
xchg
xchg
xchg
cmc
js
cmc
rolb
dec
inc
cs
and
push
xchg
jbe
cwtl
and
add
loop
and
add
hlt
sbb
lret
addr16
aaa
test
stos
xchg
lea
mov
imul
inc
imul
in
xlat
leave
inc
imul
ficomps
cmpsb
or
popf
pop
mov
xchg
imull
pop
sbb
xchg
adc
pop
rol
mov
push
adc
cmp
inc
or
into
jae
lret
and
or
mov
mov
and
cwtl
add
add
fbld
cmpsl
pusha
flds
mov
sub
mov
cmpsl
dec
pop
push
lds
push
mov
popl
adc
lds
dec
in
dec
pop
enter
imul
movsb
dec
fcmovu
mov
js
jo
cmp
ret
ficoml
mov
and
inc
sub
test
mov
imul
push
adc
adc
sbb
jo
mov
faddp
add
in
inc
xchg
div
leave
call
aaa
ja
and
add
enter
cmpsb
or
push
cltd
add
lcall
loopne
cmp
adc
lcall
inc
pop
mov
cld
push
mov
jo
lods
jle
ss
lahf
add
rorb
push
xchg
lcall
jae
inc
mov
pusha
adcl
push
add
pushf
test
fbstp
jmp
inc
repnz
mov
push
inc
negl
mov
pushf
sub
aam
inc
jnp
jno
and
mov
xorb
ljmp
xchg
mov
adc
mov
add
xchg
movsb
xor
and
rorb
adc
repz
movsb
mov
in
jmp
stos
sub
jns
jle
and
mov
aas
mov
test
jnp
push
inc
ficoms
cltd
out
xchg
jge
mov
mov
inc
stos
imul
cs
enter
ljmp
and
inc
add
int3
movsl
inc
push
icebp
mov
and
cld
pop
cli
call
and
xlat
add
ds
ljmp
mov
inc
inc
popf
or
mov
push
xchg
fisttpl
scas
nop
les
fistpll
mov
xor
cmp
mov
jle
xchg
or
icebp
das
imul
imul
adc
test
jno
adc
push
test
inc
imul
sti
lcall
push
xorb
addl
mov
out
cld
imul
pop
lea
mov
pop
and
shrl
mov
loop
rcrb
mov
loopne
mov
pop
aam
cmpsb
daa
mov
lea
mov
jle
popf
mov
shrl
repnz
jmp
gs
iret
pop
ja
xchg
je
mov
pop
fimull
mov
lods
adc
imul
add
hlt
shrl
cmc
inc
adc
cmpl
fwait
inc
mov
pop
loopne
or
push
das
daa
clc
inc
push
fwait
lea
inc
lea
stos
mov
fs
cli
shlb
or
mov
js
faddl
flds
hlt
mov
lcall
mov
stos
push
or
mov
shlb
mov
sahf
add
mov
in
aaa
lret
dec
and
loopne
or
push
pop
rorl
int
fists
mov
xchg
xchg
mov
mov
dec
insl
ror
xchg
cmc
mov
pop
xlat
movsl
sub
aaa
xchg
inc
mov
mov
cmovnp
add
rorb
xor
sbb
add
pushf
movsl
enter
jg
loope
data16
fbld
leave
ret
pop
movsb
hlt
mov
and
clc
pop
leave
cmpsl
shrb
cmpsb
std
mov
cmpsl
xchg
fdivl
mov
xchg
jl
ja
iret
lcall
shll
iret
or
mov
movl
lret
adc
xchg
inc
dec
xlat
pusha
es
or
dec
movsb
cltd
movsb
mov
inc
xchg
fiaddl
mov
sahf
or
cmpsb
add
jp
leave
scas
inc
addb
rcll
test
jno
testb
pop
mov
ja
push
jne
das
xchg
addl
int3
sbb
mov
push
push
ds
std
pusha
pop
xchg
sbb
cmpsl
xchg
xor
stc
dec
or
mov
push
arpl
mov
pop
gs
push
pop
jnp
adc
ljmp
rolb
orl
mov
pusha
add
cmpsl
push
jae
pop
imul
pop
les
sahf
movsb
ss
lret
push
pusha
cmpsb
push
xchg
cmc
mov
call
sbb
stos
inc
fs
mov
adc
jl
es
add
fsubl
mov
xchg
leave
mov
adc
enter
mov
outsb
fwait
mov
inc
mov
sbbl
nop
subb
movsb
add
xchg
mov
jbe
dec
subb
adc
and
movsb
leave
fxtract
sarl
jl
fldenv
inc
imul
xor
fwait
cmpsb
lcall
or
adc
mov
out
aas
movsb
push
ret
loopne
mov
ret
push
mov
out
or
xchg
inc
subl
movsl
mov
jp
mov
mov
cwtl
rclb
nop
xchg
xchg
leave
hlt
xchg
mov
fdivr
insl
cmpb
test
push
cli
movsb
jae
mov
cli
xchg
rcrl
cwtl
in
sub
pop
insl
ja
dec
mov
add
jge
test
scas
mov
mov
sbb
movsb
dec
mov
cmp
cwtl
pushf
push
push
aad
mov
cltd
test
xchg
je
imul
jnp
or
push
mov
pop
xchg
mov
leave
out
mov
jae
push
ret
aam
pcmpgtb
jl
movb
nop
test
or
xor
mov
xor
mov
mov
sub
xor
xor
rcrb
or
add
cld
enter
mov
stos
mov
mov
dec
mov
lret
pop
mov
inc
jo
jmp
enter
xor
fcomps
and
xor
ret
mov
fsub
je
add
test
movsb
pushf
enter
lret
dec
mov
dec
fmuls
cmp
cs
and
out
add
lgs
and
inc
push
lods
js
loope
ljmp
dec
inc
insb
in
dec
xchg
or
dec
iret
lret
in
js
testb
imul
insb
cwtl
sahf
xor
in
nop
inc
cmp
dec
lcall
mov
pop
scas
lods
frstor
xchg
mov
cltd
imul
push
push
inc
or
cwtl
movsl
cltd
jns
or
mov
stos
push
js
add
stos
bound
jl
adc
mov
cmp
adc
push
hlt
iret
mov
outsl
xchg
cltd
sub
scas
lock
fcomi
insb
cs
cmc
jp
into
dec
xor
xchg
sarb
xchg
sub
pop
leave
lret
cli
sbb
xor
or
icebp
push
ljmp
pop
nop
idivb
fnstenv
push
enter
mov
sub
mov
lret
int
jo,pn
mov
xchg
fnstcw
fiadds
repz
inc
dec
call
mov
fdivrs
sbb
xchg
sub
inc
add
or
ret
adc
lds
adcl
dec
sub
popf
lods
pushf
mov
jl
mov
and
lahf
fwait
xchg
push
dec
push
mov
push
into
inc
xchg
ret
jge
jl
mov
or
je
insl
pop
in
jb
pushf
dec
and
jns
and
neg
out
leave
test
imul
mov
int
sbb
into
jmp
lds
push
ljmp
dec
mov
jge
and
adcl
sbb
and
cmc
dec
mov
push
lock
shrl
aam
sub
xchg
lcall
adc
testl
cwtl
je
mov
mov
mov
ds
seta
into
pop
jle
mov
cs
push
fiadds
pop
stos
jae
cmpsl
fs
add
xlat
push
int
nop
enter
scas
jl
push
popf
addb
fistps
lods
jge
orl
outsb
pop
pusha
mov
cmpsb
adc
xchg
sub
adc
ljmp
add
inc
sub
adc
aad
test
shll
jo
fs
add
lcall
mov
xlat
cmp
mov
lahf
mov
mov
out
fprem1
movsl
cmc
in
jno
ret
mov
cmpl
mov
xchg
or
sbb
sbb
jae
test
daa
js
lret
mov
or
stos
mov
popf
xor
js
or
cmp
or
aas
stos
mov
jmp
mov
mov
ret
stos
add
mov
dec
mov
dec
stos
popf
cmp
mov
les
mov
pop
xor
adc
fs
test
stos
jb
push
movsb
enterw
enter
or
xchg
cwtl
popl
push
shrl
lds
leave
popf
fwait
pop
mov
dec
dec
daa
ljmp
adc
notb
adc
inc
sbb
test
outsl
mov
test
jbe
jb
cmpl
mov
dec
rcll
stos
adc
mov
imul
mov
fcomps
repz
std
shrl
jp
lcall
inc
es
lret
xchg
jp
pop
test
push
push
push
cmp
test
rcr
inc
out
mov
lret
xchg
xor
jmp
dec
mov
mov
or
arpl
pop
xchg
add
adcl
test
jns
pop
stos
dec
movb
jo
mov
nop
mov
fstps
mov
std
ja
add
mov
jns
mov
or
cs
inc
inc
sti
movb
mov
pushf
and
jns
mov
xchg
cmp
push
hlt
add
dec
clc
pushf
mov
pop
and
imul
mov
pop
sbbb
mov
leave
push
push
imul
jmp
mov
shll
mov
sbb
pop
jno
icebp
mov
jl
mov
xchg
pop
mov
daa
inc
inc
cmpsb
test
lods
in
or
pop
imul
call
add
stos
mov
ret
jl
xchg
pusha
jbe
fdivp
jo
rcl
rcll
pop
fsubrl
in
jl
insb
jns
popa
and
mov
mov
and
dec
mov
inc
mov
dec
jno
push
xchg
outsb
jae
adc
cltd
ficoml
mov
xchg
rcl
dec
add
xchg
fimull
mov
xor
sbb
xor
imul
movsl
jecxz
movsb
fld
sub
mov
mov
xchg
pop
testb
mov
fld
jae
inc
mov
or
inc
push
cwtl
in
fcoml
push
push
sub
jmp
fmull
pop
xchg
inc
imul
push
jmp
jo
sub
movsl
fnstcw
popf
dec
stos
divb
inc
pusha
and
dec
sbb
shll
sahf
and
xor
leave
call
and
mov
xchg
roll
roll
mov
cmc
out
inc
hlt
faddp
rcrl
in
les
leave
lret
rclb
fdivrs
pushf
sbb
inc
idivl
inc
hlt
xor
in
std
jl
into
sub
sahf
divb
dec
jo
add
subl
cmpsl
outsl
data16
mov
inc
cmp
jg
call
sub
xor
push
nop
or
fisttps
test
xchg
ficoms
fadd
push
into
xlat
sub
stos
ffreep
xor
push
xchg
xchg
inc
pop
add
pop
and
cld
pop
cld
movsl
jg
in
mov
popf
call
int
pop
fisubl
or
repnz
jns
fcomps
add
mov
call
xchg
ret
xchg
lahf
dec
xchg
pop
xchg
mov
add
adc
cmp
or
push
call
mov
ljmp
mov
es
aam
pop
repz
icebp
iret
and
sub
add
mov
inc
lret
test
mov
ffreep
inc
mov
rcrl
in
stos
fs
fdivl
push
pop
test
xorl
aaa
cltd
cmp
xchg
cmp
test
sti
pop
pop
sub
mov
stos
aad
push
jno
dec
mull
add
les
sub
lcall
je
outsb
push
adc
out
bound
jl
cmp
mov
imul
xor
nop
xor
dec
cmp
in
je
aad
nop
out
mov
scas
push
into
inc
testl
andl
pop
mov
sbb
aad
movsl
sti
adc
lret
movsb
lret
jp
movsb
adc
cmpsl
stc
mov
fwait
mov
inc
popw
xlat
xchg
lods
test
xchg
push
fistpll
or
jo
int3
sbb
xchg
sti
cwtl
fwait
dec
jp
pop
mov
cld
sbb
fs
xor
or
jl
mov
hlt
enter
xor
imul
imul
lods
repnz
rolb
out
pushf
stos
xchg
pop
mov
aad
cltd
cmpsl
pop
or
lret
add
add
sub
xchg
fsubrp
dec
sbb
fidivs
into
mov
pushl
cmp
push
mov
mov
rcl
xchg
mov
ret
or
pusha
nop
aas
subl
mov
cmp
cmp
inc
aaa
mov
dec
and
ret
sbb
lcall
dec
xlat
lret
add
xor
mov
add
js
outsb
inc
inc
repz
aaa
xor
dec
notb
test
mov
xorl
int3
insb
enter
or
lcall
inc
sub
xchg
loopne
jl
add
sub
cmc
fwait
jb
push
orl
add
mov
sti
lods
mov
push
or
add
mov
imul
dec
xor
jo
js
aaa
test
outsb
xlat
lret
or
js
clc
cmp
test
dec
mov
incl
mov
jbe
push
jg
ds
loop
hlt
mov
mov
jno
jns
xchg
pop
mov
push
movsl
in
ja
mov
fwait
mov
in
hlt
mov
jns
mov
dec
lret
testl
mov
mov
xchg
stc
cmc
push
stos
pop
leave
sbb
adc
cltd
subb
rorb
sub
sarl
aad
dec
rorb
movsl
ljmp
ret
jle
mov
xchg
inc
mov
leave
xchg
ret
jb
xchg
xchg
mov
inc
sbb
les
adcl
jg
dec
in
mov
addl
xchg
mov
scas
scas
add
push
xchg
xor
mov
and
js
inc
mov
xchg
push
stos
jmp
mov
ficoms
xor
mov
fsubl
in
mov
inc
fwait
je
sbbb
push
enter
popa
mov
xchg
jecxz
cld
push
xchg
pop
ds
or
or
xchg
adc
push
mov
imul
fstl
sar
and
filds
jmp
xchg
mov
js
mov
jno
mov
aam
mov
hlt
xchg
sub
and
mov
dec
mov
mov
push
jbe
js
push
pushf
jmp
lods
inc
loopne
ljmp
or
jge
or
clc
hlt
xor
add
add
dec
pop
push
jmp
js
shlb
add
pusha
mov
cmpl
xchg
add
or
bound
pop
fbstp
shll
cld
mov
mov
adcb
pop
jle,pn
xorl
push
or
xchg
xchg
ja
inc
jl
add
test
rolb
mov
cmpsl
enter
ljmp
push
sub
sbb
ljmp
push
nop
mov
mov
cwtl
xchg
sbb
mov
jo
jae
das
dec
push
adc
or
adc
aas
xor
xlat
sbb
add
mov
fnstcw
sbb
jbe
lock
xchg
add
mov
icebp
hlt
inc
jb
ret
inc
inc
sub
xchg
xchg
js
insl
and
fidivrs
fnstenv
inc
movsl
hlt
push
daa
call
or
push
or
scas
push
imul
std
outsb
push
xor
inc
orl
cmpsl
adc
daa
mov
add
pop
adc
cmpsb
jbe
rolb
cs
add
ror
and
mov
adc
dec
hlt
lods
jl
mov
hlt
movsl
jg
mov
mov
or
jl
adc
aam
mov
enter
divb
arpl
movsb
and
pop
lods
insb
test
test
shlb
mov
sbb
ljmp
or
and
push
mov
stc
jg
xor
adc
adc
ja
out
nop
shll
xchg
or
scas
imul
outsl
int
sub
mov
pop
push
xor
or
mov
dec
xchg
push
mov
dec
jo
or
shrl
jae
loopne
movsl
je
adc
push
add
and
dec
lret
lcall
fsubr
mov
mov
iret
dec
cmp
in
filds
adc
inc
push
out
xor
adc
push
cmpsl
ffreep
andl
leave
xchg
pop
js
or
cmp
test
shlb
or
mov
mov
xlat
xchg
or
mov
negl
stos
adc
lcall
add
push
ret
mov
ljmp
push
dec
and
iret
push
leave
cld
repnz
movsb
jge
sahf
xchg
lahf
pop
sub
mov
jl
movsl
fldt
test
pop
shlb
jl
icebp
and
out
ficoml
xor
in
adc
mov
hlt
jno
mov
arpl
and
aam
aas
movsb
imul
push
lahf
rcrl
mov
mov
cwtl
int3
dec
jb
sti
mov
mov
cli
stos
testl
int
pop
ds
xchg
fsubrs
jge
cwtl
movsb
pop
fnstcw
lods
es
push
xchg
dec
into
add
and
ds
mov
jecxz
hlt
sti
ret
add
adc
cltd
lcall
lock
fldenv
into
test
or
push
mov
and
lret
ret
loopne
rcl
adc
mov
xchg
xor
ret
or
data16
pop
push
lods
xchg
mov
lods
cmpsb
add
jle
pop
or
cli
xchg
inc
lods
inc
xor
mov
inc
adc
das
or
stos
loopne
cmc
shlb
ja
movl
test
mov
mov
dec
xchg
mov
loop
mov
cwtl
pop
or
mov
push
mov
ljmp
enter
flds
in
push
jne
in
fwait
cmc
jmp
in
mov
pusha
and
mov
stos
mov
loope
xchg
add
inc
mov
test
cli
movsb
and
aam
inc
roll
mov
mov
adc
je
inc
and
inc
sbb
fisubrs
push
mov
ds
sbb
cmp
cli
mov
jmp
rorl
add
loopne
mov
or
orb
dec
inc
movsb
test
pusha
xor
mov
cld
iret
aaa
popa
call
ljmp
jmp
jno
cmpsl
mov
dec
lods
mov
adc
mov
dec
push
push
xchg
jns
addl
testb
mov
mov
mov
std
enter
add
ret
aas
add
mov
test
pop
add
cmc
int
outsb
ret
clc
loopne
test
jbe
imul
rcrb
adc
dec
mov
icebp
cmpsl
mov
and
xchg
mov
fs
add
push
cltd
lods
dec
in
xlat
movsl
bswap
ss
movsl
in
ljmp
repz
sti
jl
mov
sub
ret
sbb
popa
inc
arpl
mov
stc
push
adc
xchg
cmpsb
and
cmpsb
add
cmp
jl
inc
lods
es
cmp
mov
push
psubw
inc
hlt
xchg
mov
int3
xchg
dec
gs
imul
pop
xor
sbb
ror
xor
mov
rorl
cld
ret
lahf
hlt
mov
adc
or
fld
add
mov
pop
and
mov
shrb
push
in
mov
sbb
imul
add
rorl
push
mov
das
movsb
adc
fistpl
ds
clc
jnp
and
or
test
lret
int3
enter
jecxz
std
mov
xchg
mov
jle
stos
leave
cmc
lods
or
jl
rcll
int
adc
outsb
pop
test
push
mov
push
mov
and
daa
ftst
mov
leave
lret
inc
pop
push
rclb
sbb
out
push
sbb
xchg
cmp
lret
pop
bound
sbbl
push
mov
or
add
jg
mov
mov
lods
lods
xchg
bound
ja
mov
imul
lea
shll
test
mov
dec
or
add
mov
or
lds
cmc
dec
push
lret
out
adc
push
ss
lods
or
cmpl
jno
dec
or
push
subb
add
and
xchg
fdiv
orb
ja
adc
movsl
ret
std
sub
mov
rcrb
mov
or
adc
jge
mov
div
sub
or
inc
xchg
mov
jle
pop
add
sub
xor
adc
mov
or
scas
dec
rcrl
mov
sar
aaa
lods
test
imul
mov
jne
nop
add
and
inc
lret
and
ljmp
out
sub
push
adc
push
sub
fimull
ror
mov
xchg
imul
mov
push
pushf
orb
cld
aam
orl
xlat
nop
mov
jmp
insb
shlb
cwtl
cmc
jns
xchg
inc
xor
push
js
xadd
xchg
jmp
fcoms
xchg
mov
mov
push
in
int3
mov
inc
mov
leave
mov
stc
mov
xchg
test
mov
das
test
imul
jecxz
and
mov
xor
hlt
mov
insb
mov
rcrb
test
push
dec
rcll
lret
aad
mov
add
cmp
cmc
cmp
ja
repnz
push
pushf
ljmp
out
mov
cld
xchg
mov
addl
lcall
movsl
movb
sub
and
push
fldl2t
add
mov
cmp
xchg
xchg
in
or
imul
call
inc
sbb
aas
adc
xor
iret
lods
std
adc
pop
xor
sbb
xchg
sar
test
mov
ljmp
sarl
pop
aam
mov
mov
leave
nop
in
divb
mov
lea
jp
fwait
shlb
stos
sahf
test
mov
mov
lds
cmp
loop
push
mov
cltd
imul
test
sub
sub
out
mov
xor
xchg
and
xchg
repnz
int3
sar
loop
sub
inc
and
mov
adc
in
jae
dec
cmc
callw
hlt
xchg
pop
mov
mov
lds
fs
sub
movsl
out
incb
xlat
cmc
out
fcomps
xchg
sub
inc
and
adc
loope
loope
lock
add
lea
mov
and
ljmp
sub
test
inc
xchg
ret
mov
test
rcll
adc
iret
and
sbb
pop
shr
sub
loop
push
lods
push
stos
mov
dec
cwtl
xchg
and
in
fnstenv
mov
sbb
fnstenv
jne
xor
pushf
mov
js
mov
out
pop
insl
add
mov
inc
jne
into
mov
shl
xchg
arpl
out
or
add
jp
adc
fdivrl
mov
or
decl
cmc
push
mov
xchg
xchg
xlat
jg
cmp
pop
or
rcr
mov
mov
cmpsl
cs
add
sbb
mov
dec
movsl
inc
dec
mov
loopne
sub
xchg
sbb
push
cmp
mov
push
mov
cmpsl
call
test
lea
adc
cmpsb
arpl
aam
or
test
push
pop
fsts
push
push
nop
test
fistl
adc
out
pop
dec
and
jmp
cmp
sbb
mov
int
in
cwtl
jle
pop
sahf
jg
popf
repnz
sbb
inc
xor
inc
mov
notb
adc
rorb
push
inc
imul
rolb
js
in
xchg
lods
and
mov
mov
int3
cmp
jl
addr16
fwait
lea
xchg
outsl
pop
fidivrs
inc
mov
dec
cmc
scas
jae
adc
mov
push
scas
dec
mov
movsb
jp
and
pop
mov
lds
pop
enter
aaa
jp
xchg
andl
add
into
lock
adc
pop
xchg
ljmp
push
cmpsb
jg
add
mov
arpl
movsl
or
enter
repnz
movsb
add
jbe
mov
mov
shlb
das
mov
movsl
push
loopne
dec
stos
and
xchg
iret
aad
cmc
mov
jne
cmc
lods
gs
mov
adcl
shll
and
adc
pop
lock
in
xorl
bnd
xchg
push
sbb
or
sarl
test
testb
or
arpl
xchg
inc
push
cmp
inc
mov
push
push
icebp
sbb
xor
xchg
add
mov
add
ficoms
lds
lds
mov
lret
stc
test
dec
test
xorb
in
xchg
fmull
and
pop
push
mov
jmp
jbe
scas
ret
mov
or
inc
aad
jge
mov
push
addr16
jg
pushf
adc
test
lods
sbb
stc
jl
test
movsb
movb
lcall
aad
cwtl
pop
dec
and
inc
mov
aaa
jo
pop
cmpsl
xchg
jnp
cltd
sbbl
or
sub
enter
mov
imul
inc
cwtl
les
fldcw
mov
test
rcrb
stos
std
stos
in
ja
pop
imul
orl
dec
stos
inc
fdiv
jns
cwtl
xchg
ljmp
mov
mov
jle
xlat
sub
ja
inc
mov
jp
pop
xchg
push
aam
xchg
mov
mov
mov
sbb
push
inc
std
mov
or
lcall
jle
mov
jp
and
imul
stos
aaa
jge
scas
int3
add
nop
xchg
in
out
pop
cmpsl
xchg
repz
into
ret
cmp
cwtl
test
imul
jmp
rcl
cmp
lcall
lods
andb
xchg
aam
movsb
fmulp
fbld
inc
inc
add
mov
lret
pop
dec
fs
imul
push
dec
divl
jae
dec
inc
jbe
out
loope
es
xchg
lcall
mov
inc
shrb
hlt
mov
imul
icebp
mov
inc
fimuls
lods
inc
repnz
push
cmp
pop
mov
sub
std
sbb
jo
add
pop
insl
leave
sbb
cmp
test
cmc
push
mov
mov
xchg
inc
mov
movsb
add
imul
cmpsb
fisubrl
push
les
repz
imul
fsubl
adcb
aam
aam
sub
sahf
lret
mov
rolb
mov
or
imul
out
and
adc
xchg
out
clc
push
ret
mov
sbb
lcall
pop
jno
loop
xlat
data16
mov
xchg
add
mov
mov
xchg
jge
sbb
mov
mov
mov
or
dec
and
jle
mov
cmp
xchg
test
sbb
add
gs
adc
sbbl
ret
push
popa
sbb
mov
add
fmuls
addb
mov
stos
xchg
call
mov
adc
inc
addr16
sub
outsl
in
test
insb
iret
sbb
sysexit
sbb
xchg
imul
movsb
mov
outsb
pop
mov
loop
in
xchg
xchg
jmp
add
xchg
mov
inc
mov
xchg
mov
sub
cmp
daa
mov
or
cmp
popf
mov
daa
fidivl
inc
adc
std
pop
push
mov
cwtl
mov
mov
xchg
popa
or
int
push
scas
cmp
cmpsl
xchg
pop
idivl
add
pop
int3
iret
cs
into
xor
ljmp
mov
mov
popa
in
pusha
sbb
test
xor
lret
out
movsb
dec
call
pushf
xchg
inc
mov
mov
das
cmpsl
in
test
mov
ret
adc
mov
pop
adcb
jecxz
ljmp
dec
jo
and
pushf
mov
ja
pop
push
mov
lods
inc
pop
inc
mov
daa
dec
iret
ret
test
fstl
cmp
jno
push
mov
add
in
adc
leave
mov
sub
xchg
or
xchg
inc
packssdw
hlt
sarb
adc
cwtl
push
je
lret
popf
xor
in
adc
mov
mov
popl
inc
test
pop
popf
jl
xchg
stc
push
jns
xchg
repz
mov
imul
rolb
mov
iret
push
jl
push
sub
push
mov
shl
loop
adc
enter
mov
lds
nop
and
pop
sub
in
inc
repnz
cmc
insb
pop
adc
shrb
push
in
repnz
ret
mov
mov
shrb
lea
in
push
mov
cmp
sbb
imul
xchg
mov
out
icebp
imul
cmp
xor
jmp
in
mov
ret
xchg
or
add
push
pop
lds
cmpsl
xor
add
lret
xchg
push
jle
rorl
test
jb
xor
cmc
leave
cmp
or
add
stos
das
jecxz
xchg
shll
push
in
cmp
in
cmpsl
movsb
lret
mov
xchg
cmc
test
mov
xor
adc
lret
fistpll
out
xchg
mov
bound
std
daa
sbb
mov
push
call
fsubrs
shl
push
sbb
in
jle
shlb
cmpsl
mov
sub
iret
add
mov
and
test
jecxz
lock
test
sbb
nop
push
add
xchg
out
stc
inc
jg
push
sbb
jp
sbb
cwtl
test
pop
sub
xchg
rcl
jno
push
xchg
xlat
jno
addr16
jecxz
mov
sub
sti
rorb
lcall
mov
xchg
adc
add
mov
cltd
cmp
ret
dec
sti
cmpsb
je
adc
sahf
push
mov
sarb
ja
mov
outsl
add
test
rorl
lods
xor
addr16
mov
sti
and
mov
jnp
inc
mov
mov
test
loopne
rcll
jg
inc
loope
nop
imul
sub
sahf
test
jecxz
xchg
mov
pop
mov
and
inc
pop
and
mov
mov
xchg
fucom
pop
lahf
mov
imul
ja
ss
cld
dec
rorl
stc
or
lds
jl
orl
mov
imul
sub
push
add
fwait
jg
call
test
popa
icebp
xor
stc
enter
arpl
popf
mov
inc
cmc
cmpsl
stos
fcoms
push
jbe
call
pop
xchg
fs
adc
into
sarl
gs
sub
sbb
pusha
repnz
out
jle
xor
jnp
test
ja
addb
add
and
cmp
and
popa
dec
lcall
xchg
xchg
mov
orl
ret
adcl
or
in
aaa
push
mov
xchg
xchg
inc
stos
imul
inc
daa
xchg
mov
mov
lahf
xchg
push
rcl
out
test
addr16
inc
xor
add
rcll
push
addr16
ja
dec
inc
cmp
pop
xchg
jbe
lock
je
shl
lcall
repz
lret
push
bound
sahf
nop
mov
and
add
cmp
mov
add
push
imul
pop
lret
dec
test
icebp
inc
bnd
mov
xor
lods
push
test
call
sahf
lock
jle
imul
dec
pop
icebp
jne
inc
xchg
jnp
leave
rorl
add
and
push
icebp
dec
sysenter
movsl
insb
cmp
insl
or
or
xor
and
fmull
imul
ret
or
add
adcl
jp
jb
inc
into
out
inc
xchg
cmp
std
lea
mov
stos
outsl
ret
jb
push
in
pop
pushf
fidivrl
push
int
cmp
xchg
enter
ret
mov
inc
and
and
arpl
dec
loopne
mov
mov
jge
dec
movsl
or
mov
inc
inc
adc
add
or
or
notb
push
lea
adc
cmp
xchg
pop
cltd
cmpsl
sbb
call
push
cmc
cmpsl
mov
cli
in
mov
cmp
in
and
push
shlb
cwtl
mov
pop
mov
enter
fldcw
mov
pushf
mov
xor
into
fisubs
mov
ret
inc
dec
add
inc
dec
mov
mov
fadds
cld
insl
aam
push
test
mov
add
test
imul
nop
cmpl
loop
out
ss
cmp
dec
std
out
int3
inc
es
xor
fnstsw
scas
out
mov
xchg
leave
movsb
sbb
popa
shrb
add
cmc
mov
push
in
xor
jecxz
adc
les
dec
out
dec
cmpsl
xor
and
jmp
xchg
sub
or
pusha
test
xchg
adc
loop
ret
add
xor
dec
out
hlt
mov
iret
in
or
add
adc
mov
mov
fidivrl
jbe
ficoms
inc
xchg
mov
mov
xchg
into
imul
adc
adc
mov
adc
daa
je
xor
cmpsl
test
pusha
or
and
push
ljmp
orl
rcrb
rcrl
imul
add
inc
fwait
pop
bound
mov
mov
int
mov
in
outsl
adc
or
loop
add
mov
add
push
insb
fnstsw
jge
test
xchg
enter
fwait
jmp
test
sub
jge
and
imul
add
into
xchg
rorl
movsl
cmp
xchg
xor
push
add
push
xor
mov
cli
aam
iret
xchg
add
mov
push
adc
fisubl
add
pop
mov
push
adc
inc
ds
sarl
leave
mov
cltd
inc
add
dec
cmp
fists
cmc
int3
and
lret
mov
mov
jle
jb
mov
mov
mov
sbb
out
jb
fsub
inc
ret
mov
mov
cli
pop
sub
aad
jge
insl
inc
lret
add
jne
xchg
sbb
sarb
lods
mov
js
ss
push
inc
lea
lods
scas
les
pusha
nop
testb
sbb
or
xchg
jbe
mov
cmc
lcall
cli
sbb
and
ds
mov
pushf
ret
pop
or
loope
inc
out
rcl
roll
jl
mov
sbb
or
mov
add
sahf
mov
pop
outsl
jle
xchg
add
aas
inc
inc
je
out
jmp
pop
pop
ljmp
lods
cmc
sahf
mov
or
fnstsw
adc
mov
pop
in
stos
and
enter
movsb
nop
adc
mov
add
imul
pop
jns
xor
mov
mov
adc
xchg
pop
jle
mov
mov
jae
or
cwtl
sub
lea
or
lds
xchg
inc
jmp
push
or
out
stos
hlt
xchg
sbb
push
rep
imul
mov
arpl
adc
or
xchg
imul
xchg
xchg
cld
mov
rcrl
inc
clc
jg
mov
xchg
js
adc
xchg
jns
xchg
sub
mov
in
sbb
dec
and
and
out
sti
xchg
mov
and
loop
push
xchg
shlb
rol
mov
dec
adc
dec
and
clc
push
ja
call
jge
mov
xor
and
or
shll
dec
ljmp
and
dec
dec
lret
lahf
dec
lock
shufps
mov
nop
or
jl
rorl
xchg
dec
dec
inc
ret
sbb
fwait
mov
push
popa
insl
xchg
sahf
mov
xchg
mov
ret
aam
and
dec
adc
ret
dec
mov
dec
mov
xor
movb
xchg
add
and
clc
enter
loop
mov
sbb
mov
insb
dec
sub
fistps
mov
and
cmpsl
mov
xchg
or
hlt
shr
cwtl
je
jp
dec
dec
pop
ret
sbb
fwait
mov
push
popa
insl
xchg
sahf
mov
xchg
mov
mov
rorl
push
pop
test
mov
adc
shrl
adc
mov
out
pushf
mov
pop
mov
aaa
repnz
into
fsubrs
int
test
mov
and
inc
mov
add
popa
fs
pop
add
jmp
add
pop
stos
mov
idivl
pop
add
lcall
jle
mov
jne
adcb
jle
cld
fisttpll
jle
mov
mov
lods
jle
mov
cmpsl
or
pop
xchg
jg
xchg
add
xchg
mov
pop
mov
lods
add
push
cmp
cmp
jge
add
frstor
xchg
xchg
add
and
ret
scas
in
int
lcall
add
xchg
xchg
stos
adc
cwtl
inc
iret
mov
arpl
fmulp
lcall
test
sub
ret
lcall
xchg
cli
push
test
sub
inc
or
out
fsts
js
jno
jne
add
ja
cli
les
cmc
mov
in
pushf
jo
mov
and
fcmovne
mov
call
mov
andl
pop
or
fcoml
pop
push
adc
mov
std
add
pop
add
imul
pushf
xchg
lods
je
stos
js
aam
add
inc
sahf
mov
and
mov
scas
es
cltd
pop
hlt
mov
lahf
inc
fildl
sub
mov
mov
ret
pop
iret
iret
mov
add
outsb
add
imul
pushf
sbb
les
or
xchg
nop
dec
hlt
mov
xchg
mov
inc
fcmovu
sbb
cmc
cmpsl
hlt
stc
lcall
push
jnp
pop
xchg
into
lds
mov
cwtl
rolb
pop
jmp
mov
add
mov
xchg
daa
gs
xchg
cmp
add
jne
jbe
cmp
adc
shll
push
call
fmuls
jae
jb
pusha
cmp
mov
dec
nop
mov
movsb
repnz
or
jmp
stos
add
mov
mov
fwait
ret
xchg
ret
cmp
mov
sub
call
jmp
inc
frstpm(287
push
mov
or
out
xchg
jmp
mov
ficoms
mov
add
or
cmpsl
mov
daa
pop
or
flds
push
adc
xchg
dec
jle
fisttpll
cltd
loop
cmc
mov
cmp
or
sub
xchg
fisttps
js
push
sub
testl
pop
cmp
lcall
mov
in
cld
mov
adc
cmp
outsl
in
jle
stos
jg
jne
movsl
loope
push
sahf
xchg
ror
jge
mov
scas
jno
pop
cmpsl
add
inc
nop
outsl
hlt
mov
inc
cwtl
scas
mov
pop
lds
jnp
dec
xchg
push
movb
jnp
out
pop
mov
imul
mov
hlt
jno
mov
xor
xor
cmpsb
push
bound
push
sub
cld
aas
sbb
js
aam
popf
je
sbb
fldenv
pushf
cmp
scas
aad
cmpsl
cmp
outsl
dec
jne
push
push
push
inc
or
cmp
mov
mov
mov
mov
lds
stos
jl
mov
test
add
adc
push
inc
pop
cmp
cld
ret
mov
je
mov
mov
or
int3
movsl
sbb
inc
mov
imul
aas
cwtl
mov
jl
movsl
loope
fmulp
inc
mov
mov
or
stos
pusha
add
or
loop
push
add
arpl
inc
mov
mov
shll
fisubs
test
ss
fcmovu
daa
es
xor
mov
push
stos
cmp
andl
ja
fwait
pop
rclb
sarl
adc
mov
into
push
jg
sbb
lods
pop
pop
cmp
das
jge
mov
or
add
lcall
stos
test
mov
ljmp
lcall
xchg
push
filds
lcall
or
aas
add
add
lcall
mov
outsb
stc
leave
mov
push
ds
mov
sbb
mov
pop
orl
imul
jno
jmp
ror
bound
aas
out
pop
std
adc
xlat
scas
xchg
mov
ds
mov
adc
jg
lea
jge
cmpl
loopne
cltd
or
or
outsb
imul
pop
ljmp
loope
pcmpeqd
xchg
cltd
sbb
repnz
shl
mov
lea
or
mov
xlat
aas
mov
mov
adc
cmp
jl
mov
out
inc
scas
pushf
add
ljmp
push
dec
mov
mov
pusha
sub
enter
xlat
push
flds
movsb
sarb
push
icebp
pop
jp
out
push
inc
hlt
mov
or
movsb
fwait
inc
push
mov
or
cwtl
mov
outsb
xor
aas
andb
roll
fnstsw
push
cmp
adc
sahf
test
lret
rcrb
fistpll
adc
xchg
call
xchg
mov
in
mov
test
jl
dec
xchg
rcrb
inc
mov
or
cmc
inc
inc
sub
repz
mov
mov
mov
cmp
aas
loop
pop
xchg
mov
jp
into
adc
into
cltd
jl
mov
mov
cld
daa
sti
test
notl
push
sub
in
jl
lahf
rol
clc
test
add
enter
mov
ret
je
addr16
or
jmp
je
add
jo
inc
mov
movsb
sarb
rcl
sub
cmp
lods
and
lret
imul
stos
inc
mov
mov
je
xchg
or
mov
xor
push
imul
xchg
dec
adc
cltd
call
pushl
push
movsl
adc
adc
in
popf
add
sub
inc
jo
js
iret
push
mov
mov
das
into
nop
push
call
xchg
ja
push
cmpsb
xchg
xor
std
ljmp
insb
and
inc
xchg
imul
dec
insl
jge
jl
movl
clc
or
sarl
into
test
rol
push
mov
mov
sahf
mov
mov
pop
adc
sub
mov
adc
pop
dec
leave
xchg
cmp
dec
cmp
nop
add
xor
fisubrl
xchg
test
nop
mov
aas
add
test
mov
mov
es
jo
test
cltd
mov
inc
imul
pop
pop
push
push
sbb
call
xchg
imul
inc
cmc
xchg
mov
pop
ljmp
mov
test
mov
cli
adc
xlat
lods
fwait
lahf
adc
js
lods
loop
mov
out
adc
movsl
test
sub
sbb
push
pop
repz
sahf
nop
ror
xchg
add
das
lret
fldl
pmaxub
mov
cwtl
aaa
mov
jg
pop
std
xchg
fwait
cli
pusha
inc
pop
cwtl
push
in
dec
xchg
fs
pusha
call
fiaddl
xor
popf
xchg
enter
xchg
das
or
out
stos
shll
inc
cmpsb
mov
push
and
dec
or
mov
xchg
push
sbb
jl
fstpl
add
push
rolb
mov
lock
add
hlt
lret
mov
xor
inc
lret
cmp
pop
mov
sub
and
lods
sub
sub
fcomps
outsb
push
or
ljmp
hlt
aam
mov
rcr
jno
cmc
inc
xchg
js
xchg
jmp
dec
aaa
pop
pop
adc
cld
nop
adc
outsl
les
call
pop
lcall
sarl
stos
movsb
xchg
adc
xchg
mov
insl
nop
fwait
pop
int3
ror
mov
shl
ret
fs
or
fs
fldenv
xor
lods
fstl
out
or
jle
cwtl
popl
and
mov
imul
mov
mov
inc
cmc
mov
rorl
mov
sub
adc
loopne
imul
mov
nop
lret
adc
jp
xchg
and
inc
xchg
ffreep
insb
sbb
in
in
loop
adc
lahf
xor
cmpsb
push
mov
xorl
imul
inc
rcrl
sbb
fwait
mov
or
shll
or
push
loop
rcrb
addr16
out
adc
fs
test
lea
mov
push
mov
adc
inc
jle
cli
ja
mov
sti
bound
jg
in
mov
mov
mov
push
or
fisubrs
or
cmc
fiadds
push
flds
xchg
inc
mov
fdivrs
add
mov
inc
cmpl
aad
loope
loopne
mov
in
and
test
lock
aas
or
xchg
cmp
lret
dec
leave
insl
stos
daa
sbb
sbb
imul
cs
int3
in
outsl
or
pop
test
inc
fwait
lea
inc
sub
cwtl
je
js
out
scas
rclb
rolb
push
jmp
aaa
pop
mov
add
mov
jno
mov
push
mov
or
fsubrp
add
imull
mov
xchg
testl
scas
dec
mov
xchg
inc
outsl
or
jl
add
fidivrs
push
dec
lds
sbb
cmp
push
jl
cwtl
inc
jmp
and
sub
mov
xchg
iret
aas
lret
jb
xlat
mov
adc
cmp
popa
loope
xchg
movsl
fisubs
sub
mov
stos
xchg
mov
push
push
inc
addr16
jg
sbb
fwait
and
shrb
dec
decb
imul
xchg
pop
lea
out
and
fadd
push
dec
add
dec
inc
push
push
aas
movsb
or
inc
adc
mov
ficoml
loopne
sbb
jecxz
inc
dec
adc
movsl
xchg
sbb
in
and
imul
pushf
sbb
xchg
test
std
xchg
adc
cld
add
lds
and
jl
sub
sbb
push
sub
mov
int
imul
scas
lret
xor
pusha
mov
shlb
xchg
sti
mov
lock
frstor
lea
out
stos
subb
pop
movsb
add
ja
sbb
xchg
cmp
lea
xchg
xchg
dec
repnz
sarb
fsubs
fwait
or
les
or
popf
sbbb
hlt
mov
xchg
lds
in
jb
lret
mov
sahf
pop
dec
mov
mov
push
or
imul
loop
mov
sbb
mov
rcrl
loopne
pop
hlt
xor
dec
dec
fs
adc
mov
or
into
xorb
inc
add
icebp
inc
mov
in
jle
mov
test
mov
adc
xor
dec
cmpsl
mov
lods
sarl
xor
cli
push
shll
lock
inc
test
adc
ljmp
dec
imul
movsb
fucomi
outsb
jp
jl
jg
cmp
mov
push
cmpsl
add
lahf
pop
add
pusha
negb
sbb
inc
hlt
pop
push
sbbl
add
imul
or
xor
ficomps
jne
stos
pop
pop
das
in
imul
dec
jb
jne
test
imul
jae
jo
vpinsrw
jae
or
fdivrp
jae
dec
rcrl
cld
test
shrl
fcompl
inc
mov
imul
out
nop
movsb
mov
mov
xchg
xchg
adc
nop
in
dec
mov
pop
xor
nop
movsb
xchg
fbld
fimuls
mov
pushf
xor
or
cmpl
pop
fwait
cltd
mov
int3
and
push
xchg
xchg
lea
xor
dec
lea
add
aam
mov
adc
lahf
test
jbe
and
and
scas
outsl
adc
or
jne
scas
cmpb
add
stos
cld
stc
lahf
inc
outsl
popl
jmp
es
rcrb
or
insl
or
push
xchg
jl
test
jl
mov
or
je
jl
js
lcall
incb
jp
lret
mov
fimull
cld
lret
repz
mov
cmp
xchg
add
dec
xorb
int3
addb
les
cmc
test
add
cltd
imul
pusha
sub
in
inc
mov
flds
add
rorl
fs
loop
scas
aad
das
adc
pop
adc
aas
mov
arpl
adc
xor
cmc
jg
movsl
inc
jnp
mov
add
pop
testb
push
or
imul
xchg
xchg
icebp
ds
add
jnp
ret
orb
ja
mov
adcl
pusha
je
pusha
sub
cmp
or
pop
dec
test
into
cmpsl
mov
mov
dec
adc
enter
jmp
cmc
xor
adc
movsb
push
test
in
aaa
fcomip
dec
add
mov
or
int
jle
cmp
std
add
mov
cs
cwtl
aam
movsl
nop
adc
dec
cmpsb
test
dec
mov
add
cmp
xchg
mov
imul
adc
lds
ss
popf
insb
mov
push
popl
push
fbld
test
sarl
movsb
mov
mov
mov
mov
and
pop
fsub
mov
mov
add
outsb
add
mov
loopne
aad
xchg
in
loopne
jmp
mov
xchg
out
xchg
idivb
jmp
jbe
or
test
jl
int3
pop
les
xchg
mov
pop
push
pop
or
mov
shll
ror
mov
xchg
scas
push
mov
lds
rcrl
rclb
xlat
push
mov
sub
jo
mov
leave
push
jbe
movsb
mov
mov
lea
cli
cltd
lcall
xchg
and
fdivrl
sbb
mov
sbb
fadds
xchg
mov
jl
repnz
or
pop
add
xchg
in
test
imul
fcomp
lret
repz
jl
adc
mov
shrb
cmpsb
add
mov
or
push
int3
add
xchg
shll
pop
lahf
cmp
cmpsl
add
ljmp
or
dec
scas
jp
aad
fdivl
adc
cmp
sub
or
mov
xchg
lock
rcl
pop
and
mov
cwtl
jl
push
jmp
push
mov
add
imul
pop
loope
leave
mov
xor
lea
out
ljmp
test
popa
imul
mov
jns
mov
fimuls
add
mov
mov
or
movsb
add
xchg
stos
loop
dec
inc
and
cld
mov
insb
mov
jo
jle
cmc
lret
mov
mov
xchg
iret
mov
push
mov
adc
cltd
ljmp
push
sbb
ss
xchg
cli
mov
mov
mov
pop
out
or
cld
jno
inc
add
repz
pop
rclb
mov
dec
in
inc
xchg
test
sahf
jbe
inc
sarl
xor
mov
dec
cld
das
mov
test
into
pusha
mov
xchg
or
scas
test
mov
mov
js
cltd
mov
cmpl
cmp
movb
cmp
mov
or
inc
lcall
cmp
xchg
xchg
lock
test
mov
sbbl
fistl
mov
fisttpll
rcrb
xlat
xchg
inc
std
dec
mov
or
mov
inc
jle
pop
xor
xchg
mov
inc
lods
shll
or
js
stos
into
ljmp
inc
sub
mov
pop
mov
dec
pop
jp
add
inc
std
into
inc
pop
inc
mov
test
out
add
repz
fsub
sbb
mov
out
jno
loope
movsb
shlb
ret
inc
sbb
xchg
fimull
dec
ja
mov
push
adc
leave
lahf
jnp
push
inc
addr16
stc
adc
mov
or
out
loopne
imul
nop
lock
jo
enter
or
jne
xor
rcrb
fld
sahf
outsl
in
xchg
or
inc
add
mov
jecxz
pop
outsl
inc
lods
inc
or
add
mov
dec
rorl
mov
xchg
push
les
cmc
cmp
xchg
mov
dec
inc
mov
hlt
sti
or
into
xor
mov
test
fistpl
subl
out
cmp
rolb
hlt
dec
iret
add
lock
stos
into
rol
push
inc
sub
loope
mov
xor
jl
fnstcw
fstpt
jnp
filds
sub
sbb
pop
shlb
mov
lds
mov
xchg
cwtl
fsts
addr16
lods
mov
mov
int3
addl
movsb
add
cld
mov
jne
insl
adc
or
in
mov
stos
dec
or
ret
sbb
add
pop
std
inc
stos
mov
test
dec
or
nop
fistpll
rorb
in
xchg
mov
icebp
aaa
cwtl
mov
sbb
or
xchg
xchg
mov
xchg
mov
out
imul
mov
cmp
scas
hlt
iret
xor
aad
mov
ret
inc
hlt
addl
ret
sahf
js
das
cs
insb
ret
mov
mov
push
xor
mov
std
xor
lods
imul
pop
fidivs
or
es
cltd
shlb
push
mov
movsb
hlt
xchg
rorl
pushf
enter
sub
nop
mull
mov
fwait
andl
pop
imulb
icebp
sti
or
sti
pop
lret
icebp
dec
es
fsubrl
icebp
cs
xchg
loop
jecxz,pn
push
shlb
add
callw
stc
lods
loop
pop
and
mov
addl
andb
rolb
aad
lods
inc
xchg
ds
shrb
mov
jg
idivl
xor
lock
rol
jg
cmc
mov
test
rorl
sarb
fdivrl
mov
mov
mov
or
insb
xchg
mov
mov
pop
call
adc
ja
rcr
int
lea
jno
mov
popl
push
mov
or
add
and
mov
push
lods
insb
or
fwait
add
push
fdiv
mulb
mov
and
movsl
imul
cmpsl
imul
xlat
mov
jle
sub
aas
shll
dec
idiv
lret
cwtl
push
mov
out
add
mov
stc
cmc
sub
and
sbb
xchg
add
pushf
ror
ficoms
sti
push
cmp
das
mov
xchg
xlat
insb
stos
cmpsl
jg
lods
icebp
mov
ds
sub
test
mov
cmc
fdivrl
orl
cli
in
in
jnp
add
lret
mov
inc
sbb
mov
in
push
addr16
lea
imul
pop
std
xor
rclb
xlat
xchg
stc
cwtl
jg
movsl
or
nop
mov
sarb
outsl
leave
mov
cmp
pop
and
xor
jbe
inc
popf
dec
mov
mov
js
mov
imul
cmc
mov
xlat
cmp
outsb
sarl
lret
mov
dec
ds
test
sahf
and
pop
js
sbb
mov
hlt
fisttps
stos
enter
mov
orl
mov
test
xchg
xor
jg
adc
out
xchg
and
xor
mov
xlat
outsl
sbb
xor
loope
fisttps
cwtl
mov
orl
inc
movsl
mov
mov
mov
mov
xchg
roll
daa
fwait
imul
lret
lds
mov
cltd
cwtl
cmpsb
js
add
mov
xchg
inc
cld
cltd
ror
shrl
iret
out
sbb
clc
and
mov
and
cld
mov
aaa
mov
xchg
imul
lea
imul
jg
dec
dec
mov
pop
outsb
mov
imul
out
cmpsl
sub
jae
mov
ja
outsb
ret
test
testl
sarb
mov
mov
push
push
test
adc
xchg
cmp
in
jp
mov
in
js
mov
add
mov
loope
mov
add
or
rcrb
and
sbb
and
inc
shll
jns
pop
jl
push
or
and
xchg
mov
mov
imul
mov
sub
and
cmp
ljmp
sbb
mov
movsl
jnp
cmc
xchg
test
fnstenv
mulb
pop
imulb
mov
or
rcrl
mov
je
out
mov
cltd
mov
sbb
fsubs
mov
adcl
sbb
mov
xorl
add
or
repz
cmc
mov
mov
add
mov
ja
repz
jb
int
js
mov
cmpsb
mov
sbb
inc
imul
mov
push
add
sbb
call
je
rorb
call
insb
lahf
ficompl
stos
sub
cltd
sub
rorl
or
cmpsl
inc
mov
xchg
test
mov
jo
mov
jo
daa
lock
or
inc
shrl
or
sub
adc
push
mov
repnz
adc
and
xchg
push
int
or
notb
dec
or
mov
repz
add
dec
add
push
xor
add
inc
je
pop
ret
ljmp
inc
mulb
sbb
or
xchg
out
add
ret
enter
dec
xchg
jp
lret
mov
ret
mov
hlt
fsubs
push
dec
lods
scas
dec
test
test
mov
xchg
fsts
cs
repz
lds
hlt
loope
jno
pusha
cld
divps
vcvttss2si
cwtl
fucomp
fiadds
clc
mov
in
mov
mov
out
or
push
test
mov
jg
sti
push
fwait
dec
mov
imul
dec
out
pushf
outsb
addl
jg
mov
stos
cmp
and
fs
jae
dec
shll
loop
int3
movsl
inc
and
and
jg
lret
push
fildll
add
pusha
mov
loope
inc
into
ret
or
jbe
xor
aas
fs
popa
or
imul
xchg
sbb
mov
add
mov
pushl
pusha
ja
or
shll
sbb
add
jmp
lahf
or
sub
popl
imul
xchg
xor
xchg
pop
xchg
pop
push
movsb
jno
imul
push
adc
mov
pushl
es
into
sbb
adc
orl
sub
xchg
sahf
adc
add
cmc
mov
ret
fiaddl
pop
or
pop
jne
imul
ds
push
and
mov
push
imul
mov
mov
adcb
imul
mov
mov
cltd
cmp
in
imul
pop
inc
mull
push
nop
aam
mov
mov
xchg
xorl
or
shll
jmp
adc
cltd
add
insb
sub
sub
inc
push
roll
aad
in
mov
scas
imul
out
pmaxub
xor
mov
fsubs
cwtl
lcall
repz
mov
mov
sahf
test
mov
and
jg
or
ljmp
xchg
test
xchg
dec
inc
jo
loopne
sbb
and
pushf
push
mov
push
into
add
popf
aas
jl
or
xchg
shlb
in
les
add
adc
inc
cmp
or
and
dec
mov
ret
into
imul
stc
xchg
or
mov
imull
or
add
movsb
mov
loop
jo
std
mov
decb
xchg
imul
mov
jl
sub
loop
neg
or
enter
imul
or
or
aam
pop
stos
test
js
fmuls
fs
push
das
xor
lods
mov
and
aaa
jno
test
adc
aas
mov
imul
add
add
js
cld
mov
test
mov
add
hlt
xchg
fbstp
and
cmpsb
xor
and
test
test
mov
sub
xor
rorb
mov
shll
xlat
call
ficoms
data16
hlt
mov
leave
mov
mov
or
mov
mov
lods
and
add
xlat
sbb
sbb
jge
lret
test
dec
sbb
mov
xchg
hlt
shll
mov
test
xor
add
imul
sbbl
mov
into
stos
imul
aam
xchg
js
leave
add
mov
or
mov
shll
imul
sbb
mov
dec
aam
xor
mov
dec
orl
imul
es
mov
mov
imul
mov
mov
push
mov
in
fsts
inc
sbb
inc
imul
jb
inc
mov
nop
imul
and
hlt
popf
and
cltd
lret
cld
and
push
dec
loope
pusha
popa
pop
mov
mov
xchg
test
repnz
and
mov
sahf
leave
or
ja
push
and
xchg
or
pusha
sti
mov
lods
pop
sbb
lret
mov
xchg
pop
and
pushf
mov
mov
jp
xlat
push
dec
sub
mov
xchg
js
add
mov
adc
dec
mov
push
mov
cwtl
imul
das
stos
fwait
and
fdiv
lret
add
push
lea
lret
shlb
cs
dec
pop
mov
add
fnstsw
ret
insl
cmpsb
sub
push
xchg
mov
mov
mov
xor
imul
mov
outsb
cmp
cmp
movsl
stos
jns
and
sbb
int
jle
hlt
test
mov
dec
movsl
jnp
movsl
push
imul
mov
ret
push
je
clc
xor
ret
adc
loope
xchg
lods
sti
fcoms
sar
xchg
cwtl
push
stos
inc
iret
pop
push
rcll
mov
sahf
lret
pop
adc
mov
add
mov
inc
push
in
pushf
flds
xor
jmp
js
mov
or
movsb
mov
scas
xor
mov
jb
orl
dec
lahf
adcb
leave
sub
inc
xchg
das
mov
nop
loop
mov
jle
mov
or
lods
mov
mov
mov
pop
sbb
pushl
pop
std
fdivrp
iret
jge
lret
repnz
in
fldl
fcoml
in
jbe
nop
cmc
int3
mov
add
shr
bound
popa
dec
aas
mov
in
jmp
sbb
test
out
mov
adc
das
mov
fs
das
pop
sub
std
mov
sbb
lods
loope
pusha
add
popl
sub
and
add
or
fs
idiv
jle
push
scas
push
jl
cs
push
mov
hlt
fsubrp
jne
enter
mov
jecxz
lods
std
xchg
mov
out
data16
mov
lods
insb
push
xchg
sub
add
int3
push
lret
fistpl
int
mov
mov
pop
test
xchg
cmc
cmpsl
ficomps
xchg
in
sub
adc
or
push
int
lret
add
xlat
ljmp
lret
adcl
shlb
fst
and
ja
data16
adc
ret
sti
subb
stos
repnz
pop
fimull
xchg
cld
test
testb
loopne
xchg
sti
xchg
or
add
mov
fiadds
push
push
aaa
mov
ljmp
shr
xor
push
inc
test
ficomps
shrl
xlat
push
lds
fdivl
add
jns
mov
dec
mov
test
xlat
rorb
push
fildll
add
cmp
mov
dec
jg
jne
pusha
jbe
into
xchg
js
iret
sub
xchg
adc
or
dec
daa
adc
mov
hlt
insb
dec
xor
sarl
sti
lret
pop
mov
enter
mov
into
cmp
shll
mov
popf
ret
imul
outsl
cmpsb
lahf
mov
cmpl
pop
lods
push
aam
hlt
cld
leave
or
stos
sahf
push
inc
cmc
xchg
adcl
dec
test
mov
push
add
clc
enter
aas
mov
mov
data16
xor
mov
cmc
mov
movsl
add
jbe
lret
jno
cmp
enter
mov
enter
out
fisttpll
test
insb
lcall
mov
enter
lahf
mov
dec
imul
inc
inc
or
test
or
clc
xchg
dec
je
add
insl
xchg
add
mov
test
xchg
mov
mov
push
inc
call
ret
lcall
and
or
jle
jl
rorb
xchg
push
inc
sub
jae
add
aaa
shll
scas
mov
mov
hlt
mov
mov
popf
jl
xchg
data16
les
je
pushf
cmc
leave
inc
push
mov
xchg
sbb
jg
orl
ja
pop
rcrb
cmp
clc
dec
movsl
mov
or
or
aad
inc
ret
and
daa
in
jo
pop
shlb
and
jbe
test
dec
je
mov
hlt
dec
div
andb
xchg
mov
mov
fbstp
leave
pop
mov
add
in
and
or
in
lcall
or
addl
xor
sbb
in
repnz
inc
push
add
sbb
add
pop
add
dec
mov
popa
mov
mov
mov
lret
icebp
inc
mov
ror
fs
in
imul
lds
cmp
push
fwait
xchg
loop
lods
ljmp
xchg
lcall
movsl
add
adc
dec
adc
jb
or
pop
jg
mov
mov
xchg
je
cltd
lds
mov
or
fisubrs
push
jp
mov
or
mov
jge
or
ret
or
in
cmpl
mov
stos
sub
mov
jle
add
loopne
jle
dec
imul
lods
mov
lods
inc
mov
dec
mov
or
inc
shll
sbb
loope
adc
in
mov
mull
in
stc
xchg
xchg
inc
sahf
test
std
jno
add
xor
shl
fs
pop
xchg
jb
out
inc
orl
dec
mov
hlt
sbb
ret
xor
test
jbe
dec
mov
loope
dec
jle
inc
add
mov
mov
shrb
push
xor
pop
lahf
pusha
jl
and
xchg
mov
mov
pop
xchg
mov
fiadds
test
xchg
lods
jle
in
js
or
out
mov
fwait
arpl
sbb
subb
int3
inc
punpckhwd
popa
push
insb
ret
jbe
mov
imul
mov
cmc
mov
rcrl
enter
stos
cmc
xchg
mov
mov
mov
dec
adc
aad
mov
subl
mov
jp
xchg
add
inc
in
sub
loop
xlat
repz
pop
lds
xchg
xor
fs
xchg
fdivp
pop
cmpl
popf
fs
or
out
dec
fsubl
pushf
test
xchg
mov
outsb
add
imul
jb
and
mov
movsl
scas
sub
xchg
and
stc
dec
push
sub
push
movsb
cmpsl
inc
sahf
out
test
mov
push
call
push
pop
les
sbb
and
repnz
and
jbe
pop
dec
and
dec
and
jle
rorb
rclb
imul
enter
shrb
fcomps
scas
sahf
out
mov
push
es
aas
mov
lods
stos
or
lock
and
out
imul
adc
int3
movsb
push
dec
mov
rorl
inc
test
pop
mov
cmp
dec
rorb
mov
les
or
mov
mov
movsb
jmp
mov
lods
imul
mov
jnp
hlt
mov
loopne
hlt
out
nop
fcom
stos
inc
jae
pop
nop
fs
sub
fisubrs
sbb
mov
mov
imul
add
dec
sahf
nop
lds
jg
hlt
pop
xchg
sbb
pop
cli
lods
std
sbb
sti
cmp
xor
daa
int3
mov
dec
out
mov
push
inc
mov
daa
enter
add
mov
repz
out
mov
filds
push
addl
mov
subl
into
cmc
jne
je
xor
les
push
or
lahf
lea
insb
movsb
sbb
adcl
xor
xchg
lcall
call
enter
ret
mov
xchg
lcall
xchg
or
orl
push
inc
jns
xchg
int3
lea
push
hlt
loopne
dec
cltd
cmc
rorb
adc
movsl
lds
mov
loopne
in
sub
push
mov
push
or
inc
vpmadcsswd
or
and
ficoms
sbb
push
popa
fadd
mov
mov
cmp
and
add
xorb
push
mov
push
fsubl
mov
mov
xchg
xchg
fdiv
cmp
cmc
xchg
inc
int3
add
into
insb
lcall
cmp
mov
arpl
cmc
iret
dec
adc
test
lea
aad
dec
loope
data16
pop
inc
cmpsb
mov
sub
or
rorl
or
push
hlt
loope
jo
cmc
xchg
sarb
std
shll
rol
cmpl
loope
imul
mov
and
loop
leave
loopne
xchg
or
sbbl
movsb
repnz
imul
and
imul
xchg
push
sti
jo
imul
imul
hlt
mov
ss
mov
mov
subl
mov
jge
into
and
push
mov
fwait
outsl
in
jo
les
add
mov
jo
addl
xorb
or
push
cmpsl
cs
sbb
cmpsb
fiaddl
test
push
nop
mov
push
pop
xchg
imul
aas
dec
mov
cld
jle
adc
mov
out
mov
andb
mov
xchg
nop
cwtl
dec
aaa
xchg
out
mov
rorb
mov
push
outsl
sti
inc
movsl
jns
push
aam
ja
jae
dec
jo
or
add
mov
inc
mov
insl
test
mov
or
repz
cmp
mov
xchg
sbb
adc
sub
xor
xchg
lret
push
jge
push
mov
xor
dec
mov
popf
mov
data16
or
lret
mov
cmp
into
inc
inc
shrb
jae
xchg
mov
or
or
jp
out
repz
movsl
nop
ret
push
je
or
mov
cmc
addr16
xor
mov
rcrb
adc
cmp
addb
imul
xchg
mov
out
mov
xor
icebp
fisubs
nop
adc
dec
ja
fxam
cmp
jns
hlt
xchg
iret
or
or
cmpsl
jnp
xor
lock
or
xchg
hlt
adc
mov
sbb
sub
popa
cs
jno
outsb
lret
push
or
aad
sbb
into
mov
bound
rcrl
outsl
adc
add
cmp
xchg
nop
les
cmc
ja
mov
daa
outsb
add
mov
rorb
scas
loope
or
xor
xchg
test
cmc
pushf
sub
mov
sub
xchg
cltd
inc
cmp
dec
test
cmp
mov
adc
cmp
fidivrl
or
adc
mov
addl
sub
jmp
jne
xlat
jne
pop
leave
stos
and
fxch
mov
movsl
and
test
or
push
and
negb
in
cmp
push
or
dec
adc
aam
int3
mov
push
stos
pushf
adc
and
mov
sbb
adc
mov
mov
mov
or
shlb
jecxz
xchg
sti
xchg
insl
add
push
in
out
inc
or
add
divb
addr16
mov
jp
aaa
pop
inc
loop
adc
adc
mov
shlb
ret
in
testb
loop
xchg
cltd
mov
dec
jo
fdivrs
fwait
mov
daa
xchg
sub
mov
call
add
inc
pop
xchg
add
shll
cwtl
stos
jno
and
push
std
lock
leave
add
data16
js
dec
or
lea
test
add
and
addb
push
or
in
aas
mov
adcl
jo
inc
add
pushf
or
inc
or
xchg
dec
aas
push
mov
or
xchg
iret
insb
xchg
enter
adcb
add
cld
cs
push
or
xchg
xchg
xorl
movsb
mov
push
clc
enter
jge
push
jne
mov
push
nop
jmp
jl
jg
in
lock
fnstenv
movsb
inc
lods
xlat
mov
cmp
jmp
pop
test
popf
loopne
mov
inc
add
pop
and
jle
xor
mov
hlt
sbb
adc
xchg
or
add
out
popf
cs
sarl
enter
xchg
hlt
adc
xchg
jno
jbe
addl
push
hlt
fwait
and
cwtl
lea
jp
add
push
popf
fwait
nop
mov
int3
or
mov
and
aas
mov
mov
lock
cmp
pushf
adc
das
push
std
test
mov
loopne
and
mov
push
enter
mov
insb
cmp
push
int
pop
repnz
sbb
xchg
mov
stos
xchg
xor
lret
lea
mov
adc
lods
push
mov
hlt
mov
loopne
in
mov
pushf
shlb
adc
scas
insl
fidivs
cmp
ljmp
jecxz
push
sub
cwtl
cmp
push
or
xor
fcomps
test
jle
xchg
stos
hlt
mov
cmpb
outsl
ljmp
aam
add
lds
test
jae
lds
test
pop
adc
dec
ja
leave
fwait
jmp
stos
je
and
lret
pop
xor
lods
push
call
imul
xchg
insl
cmp
pop
adc
jmp
fsts
outsl
jae
lret
push
mov
sub
push
fcmove
into
xchg
cs
loope
mov
nop
push
mov
cwtl
dec
sbb
movsb
ljmp
dec
sahf
mov
xchg
mov
ret
cmc
popf
xchg
test
mov
adcb
xchg
rcl
xchg
in
shlb
mov
and
sub
lods
inc
sub
xchg
shlb
push
ret
cmc
test
xor
mov
cs
jge
mov
add
aas
sub
imul
lahf
test
mov
or
ljmp
sbb
and
mov
nop
sti
inc
fmuls
xchg
pop
movsb
mov
out
insb
mov
into
pushf
mov
fmull
xchg
aas
jle
dec
mov
mov
std
lcall
cld
jbe
inc
jb
rorb
jge
scas
and
ret
popa
push
push
iret
popl
test
xor
sbb
pop
jo
sbb
outsl
push
shll
test
xchg
bound
or
add
cld
cmpb
adc
cmp
stc
fadd
xchg
ljmp
mov
fistpll
push
aad
call
mov
xchg
iret
pusha
dec
jns
imul
cwtl
test
lret
mov
or
add
loope
mov
dec
mov
fwait
aad
push
mov
add
xchg
xor
int
std
mov
movsb
sbb
pop
icebp
sbb
test
out
sub
lods
jge
xchg
mov
adc
aad
stos
insb
mov
xchg
dec
jo
stc
lea
leave
sub
lea
pop
rcl
sbb
xchg
gs
cmp
or
loope
call
and
iret
out
mov
cmp
lea
shr
shrb
clc
rcrb
mov
in
mov
adc
and
push
ds
and
xchg
jbe
dec
test
mov
inc
cmp
jle
movsl
imul
jo
cltd
ja
mov
xchg
mov
xor
imul
cltd
test
shlb
lret
cmp
mov
ja
sub
pusha
jnp
hlt
mov
inc
add
cmp
mov
mov
movsb
sbbl
dec
or
xor
cmp
add
in
pop
leave
jo
dec
xchg
mov
xchg
push
pushf
fcom
inc
popf
push
fldl
addl
andl
xchg
or
int
mov
nop
fcmovnu
xor
test
and
xlat
lret
or
sbb
nop
test
or
dec
cmp
or
ds
popf
jns
cmp
xchg
loop
lods
mov
imul
mov
push
push
xor
mov
mov
rcll
popf
aas
mov
shlb
lret
jg
mov
inc
idivb
loope
xor
loope
jg
fadd
mov
mov
sbb
pop
mov
std
movsl
mov
rolb
push
inc
mov
into
inc
sub
inc
fsubs
fdiv
rcr
and
mov
ljmp
fcoms
idiv
inc
jne
cmpsl
mov
daa
pop
test
shl
xchg
sbb
ja
lods
lahf
sub
pop
lds
rclb
jg
bound
add
pushf
movb
cmp
or
setg
cld
jb
jbe
jle
lcall
pop
test
fmulp
and
lahf
fstps
and
pusha
sbb
mov
sti
cwtl
inc
jnp
into
clc
pushf
mov
in
scas
in
ret
sahf
addr16
in
mov
xor
xlat
fimull
orl
dec
cmp
jmp
or
push
mov
subb
cmp
add
ret
rcll
loopne
mov
add
into
movsl
cs
add
bound
sarb
test
sbb
into
sub
lret
stos
fidivs
pop
aam
test
mov
mov
adc
jge
data16
sub
fbld
mov
jns
filds
inc
stos
mov
inc
xchg
std
mov
sub
cmpsb
sbb
inc
inc
cmp
and
repnz
orl
inc
xchg
mov
push
xchg
xor
cmp
xchg
into
xor
outsb
cmc
pop
adc
je
fisttpl
and
fnstenv
nop
mov
inc
jg
jnp
adc
cmc
pop
mov
imul
and
cmc
lret
imul
or
jle
xor
fildl
xor
xchg
insb
sbbb
nop
cmc
subw
sahf
push
inc
mov
inc
pop
fnstcw
je
fidivs
jbe
or
fsts
stc
shll
test
aam
sbb
inc
sbb
mov
xchg
testl
ret
push
pop
mov
add
popf
mov
mov
stos
ret
dec
sbb
divb
jo
cs
mov
mov
enter
fldenv
push
mov
adc
imul
and
notl
and
jne
lahf
movsl
loopne
ja
and
leave
pop
mov
rcrl
mov
inc
mov
pop
scas
fwait
dec
sbb
mov
mov
cmp
popf
jg
xlat
lea
xchg
aad
js
repz
loope
movsb
mov
mov
in
call
push
sbb
test
lods
mov
in
popf
cmpsb
movsl
lret
or
cld
sub
lods
xor
xlat
sbb
movsb
dec
daa
lods
fs
pop
lret
das
imul
incb
lahf
insl
pop
inc
rcrl
inc
jne
or
lods
mov
sub
fimull
nop
shlb
out
push
lock
cmc
fimuls
pop
ja
popf
imul
mov
mov
jg
ret
xchg
xlat
push
jo
jb
enter
cmp
xlat
sbb
dec
xchg
pop
mov
push
pushf
pusha
sub
jl
scas
out
push
push
adc
adc
maskmovq
negl
or
test
xor
mov
loop
mov
shl
push
jg
decl
xor
cmpsb
inc
imul
loopne
pop
ds
imul
push
mov
add
hlt
xchg
inc
movsl
and
mov
scas
imul
fidivrs
mov
lods
fadds
mov
test
dec
cs
xchg
insl
test
mov
mov
mov
pop
inc
imul
xchg
or
mov
inc
jg
rorb
int
mov
mov
and
shr
add
or
nop
jbe
lret
xlat
enter
ss
insl
mov
mov
jae
sub
xchg
cmc
out
ljmp
and
mov
test
jno
inc
add
addb
jmp
push
shll
cmpsl
jno
cmp
adc
adc
mov
hlt
loopne
je
test
add
xor
push
lods
popa
arpl
push
jecxz
cmp
movsb
or
mov
loope
adc
mov
nop
push
mov
xchg
out
addr16
adc
xchg
outsl
mov
mov
loopne
cltd
sbb
add
pop
in
nop
add
pop
jge
add
test
mov
xor
xlat
cmp
es
hlt
or
test
xchg
mov
add
xchg
inc
test
xchg
mov
and
fidivrl
push
stos
and
xchg
lcall
rsm
push
jp
and
lcall
add
lock
sbb
pop
mov
in
mov
mov
adc
or
and
mov
and
movl
dec
rcrl
inc
sbb
repnz
fstpl
hlt
lcall
or
popa
jl
mov
std
test
jg
dec
data16
fldenv
mov
fs
mov
mov
mov
bound
xchg
and
adc
cmpsb
adc
dec
inc
out
cmpsl
addl
movsl
xchg
sar
and
xchg
mov
aad
xchg
xlat
ja
or
or
stc
fs
xchg
hlt
push
mov
push
loope
inc
lret
and
rcrb
cld
fistps
add
call
fwait
ret
int3
lret
and
xor
negb
xor
pushl
or
sub
jg
lea
enter
xchg
or
insb
or
sub
fsubrl
cld
cmpsb
es
testb
add
lds
push
push
cwtl
test
mov
add
and
pop
pop
lea
adc
pop
repz
xchg
sub
mov
cli
xor
cmp
je
lds
mov
sub
xchg
push
add
insb
jle
aas
mov
mov
test
imul
mov
inc
mov
bound
add
cld
mov
jbe
popf
adc
sahf
test
xchg
sub
cmp
iret
mov
xchg
push
subb
push
punpckhbw
outsl
xor
and
cld
test
stos
push
or
xchg
push
or
rclb
in
vmwrite
mov
xchg
xchg
push
iret
sahf
mov
mov
or
in
fstps
rol
sbb
jge
xchg
bound
jo
and
test
imul
mov
mov
aas
xlat
movsl
out
push
out
cltd
orl
cmpsl
mov
dec
out
ficompl
xchg
lea
or
mov
pushf
mov
add
cmp
cltd
lods
adc
outsl
xchg
faddp
insl
loope
push
xor
and
add
xlat
or
push
xchg
cmpsb
or
les
jmp
jl
xor
dec
rolb
cmp
sub
jmp
imul
lods
decl
imul
cmc
les
imul
hlt
stos
xor
pop
dec
xchg
inc
sbb
xor
add
push
and
mov
add
mov
imul
lcall
xchg
fnstsw
daa
mov
jmp
imul
data16
rclb
ds
rcrl
lret
xor
mov
jns
pop
or
jo
mov
ljmp
notb
cld
cmp
insl
scas
jb
xchg
je
xlat
mov
adc
push
and
mov
mov
jb
cmpsl
inc
test
jo
mov
fisubl
and
xchg
mov
pusha
xor
pop
mov
inc
add
sbb
nop
mov
aad
in
inc
jae
cli
in
sbb
iret
or
into
insb
les
xor
push
orl
xchg
or
add
dec
fwait
jnp
xor
jecxz
push
sub
xchg
jle
lds
int
mov
icebp
xchg
flds
mov
insb
fisubs
fcmovbe
popa
mov
aam
stos
add
aad
cld
movsb
fcmovne
pusha
adc
push
cmp
lret
lret
push
bnd
inc
dec
sti
xchg
xchg
mov
or
add
jmp
hlt
and
cld
bound
mov
push
add
add
iret
sub
pop
push
insb
xchg
out
loop
jl
pushf
jg
idivl
fdivs
dec
mov
add
cs
iret
jno
pop
call
sbb
xchg
mov
loop
cmp
out
pop
inc
test
fnstsw
xor
pop
dec
pop
jbe
mov
ror
out
subb
push
xor
js
lcall
mov
mov
mov
mov
add
std
test
int
push
pushf
jg
mov
int
out
nop
jp
mov
jmp
repnz
enter
cwtl
das
hlt
or
test
mov
imul
push
fxch
nop
test
shlb
add
mov
push
cmp
in
xchg
mov
movsb
popl
jne
mov
adc
pop
push
aam
mov
sub
sarb
repz
out
mov
add
push
or
test
lods
push
lods
push
stos
sub
fistpll
mov
sub
or
xchg
xchg
jo
xor
add
jnp
mov
orl
inc
ljmp
jns
es
add
mov
inc
movsl
les
mov
insb
aad
lahf
xchg
int
rorb
add
xchg
or
xchg
jo
orl
stos
mov
cld
dec
and
mov
movsl
pop
insl
add
clc
xlat
pop
or
pop
ret
hlt
fiadds
cld
in
mov
repnz
pop
xor
fisubrs
push
jle
xchg
ljmp
int3
push
mov
xchg
test
imul
cmp
adcl
adc
and
add
daa
adc
enter
push
jmp
push
movsb
dec
movsl
dec
add
lcall
movsl
enter
mov
and
lret
jo
lds
mov
cmp
xor
test
add
sub
sbb
or
mov
aad
xchg
jo
pop
or
jp
add
in
fistl
rolb
dec
or
orl
gs
inc
jp
test
mov
lods
aas
movsb
mov
loopne
xchg
push
xchg
sub
cmp
xchg
in
adc
add
rolb
xchg
adc
xchg
mov
int3
mov
int
out
or
stc
test
mov
and
repz
pop
jbe
mov
add
dec
and
mov
or
lea
jg
test
adc
mov
sub
adc
loopne
subb
fwait
orl
dec
out
fsts
push
or
pop
sub
movsl
jp
lahf
xchg
or
sub
pop
or
mov
test
mov
add
out
jg
cmp
gs
mov
call
clc
mov
add
mulb
cmp
sub
gs
orb
stos
push
or
cli
sub
out
cmp
decl
push
mov
push
cmpsb
or
insl
xchg
lea
fiaddl
cwtl
pushf
lea
fwait
pop
push
xchg
mov
xchg
jns
mov
jle
xchg
push
lret
add
pop
test
lahf
lret
mov
js
pop
nop
nop
and
in
pusha
xor
insb
sbb
rcrb
push
test
dec
add
or
sti
inc
sbb
fisubl
xchg
adc
into
and
stos
mov
mov
sub
call
xchg
rcl
mov
lods
or
sbb
cmp
mov
push
popf
imul
pop
sarb
jp
xchg
imul
xor
xor
pusha
adcl
jnp
mov
dec
adc
ss
jo
test
clc
mov
sbbb
xor
rcrl
jg
mov
decb
sbb
rcll
cwtl
lea
inc
and
stc
or
sub
inc
in
dec
shll
mov
sti
in
mov
cmc
or
add
lea
cmp
xchg
ljmp
cmc
dec
dec
mov
fcoml
sub
es
pop
dec
outsb
cmp
mov
add
lahf
jge
cs
aas
icebp
repz
push
int3
enter
inc
rcrb
movb
ret
xchg
mov
cmpsb
popf
sbb
aas
test
mov
mov
sbb
sub
test
cltd
lret
lahf
push
mulb
mov
outsl
daa
icebp
lahf
imul
enter
in
inc
pop
sbb
pop
fmul
jnp
xor
push
push
shrl
mov
fldcw
xlat
mov
pop
sbb
hlt
mov
push
test
fisubrs
out
xor
mov
test
fwait
or
jmp
movsl
je
mov
leave
pushf
fadds
dec
or
or
test
push
and
mov
test
mov
cmpsl
rcrb
cmp
push
add
les
roll
ljmp
in
cmpsb
pushf
ja
sbb
push
xchg
xchg
push
dec
lods
std
mov
lds
movsb
aam
or
xchg
arpl
fcomp
lret
scas
lea
sbb
repnz
pusha
mov
rolb
inc
repz
jg
movsb
jae
jp
and
xchg
pop
mov
cli
or
dec
mov
mov
inc
cmpsb
mov
imul
xchg
mov
popa
dec
insl
jmp
dec
xchg
adc
aam
mov
ret
xchg
addl
seta
sbb
cmp
pop
dec
call
pop
clc
jmp
dec
xorl
jecxz
mov
mov
enter
je
std
std
push
push
popa
jle
call
jge
fidivs
pop
mov
mov
or
jge
test
rcrb
cmp
nop
orb
int
mov
or
mov
add
and
lock
mov
jmp
mov
andb
rcl
pop
ds
sbb
mov
adc
pushf
push
lret
mov
dec
mov
mov
lret
test
sub
ret
sub
and
insl
outsb
imul
xchg
push
gs
xchg
je
int3
repz
mov
push
adc
out
add
lds
inc
jge
out
ja
adc
mov
jo
dec
jb,pt
fisttpl
push
mov
dec
xlat
rol
fs
adc
addr16
movsb
imul
adc
outsb
jnp
outsl
mov
jl
add
sub
pop
sbb
sahf
leave
add
gs
js
mov
mov
mov
jle
out
rclb
int
scas
inc
jb
pop
repz
lahf
ja
stos
shlb
mov
sub
hlt
xchg
faddl
js
inc
or
mov
test
in
out
cmpsl
jecxz
call
or
cmpsb
adcl
loop
push
call
pushf
xchg
xchg
andb
inc
or
shrl
jmp
ret
add
in
jle
movsb
cmp
jp
dec
int
std
std
jbe
xor
adc
and
inc
fidivrl
jl
aas
inc
ja
pop
jp
mov
loop
jb
and
std
jp
mov
test
andl
hlt
xchg
aaa
mov
in
cmpl
imul
xchg
imul
push
cmc
jp
add
mov
push
test
adcb
test
mov
out
iret
adc
add
rclb
inc
xor
mov
ret
xchg
and
add
gs
mov
xchg
dec
or
fs
push
dec
jns
lret
test
jns
add
or
jle
inc
add
or
xor
repnz
nop
enter
jns
test
out
cmpl
inc
lods
insb
or
aam
dec
cmp
test
aaa
shll
cmc
sbb
xchg
pop
in
test
xchg
dec
imul
mov
mov
push
xchg
out
cmp
mov
push
cmp
sub
adc
sbb
mov
mov
sub
scas
mov
cmp
xchg
sub
aas
mov
mov
mov
mov
in
lods
stos
xor
sub
inc
push
imul
push
sahf
add
roll
mov
scas
imull
sub
xlat
mov
jl
sub
test
xlat
jb
clc
leave
enter
mov
xchg
int
adc
xchg
cmp
insb
das
jecxz
cwtl
jl
das
mov
inc
cmp
dec
and
rcr
dec
addb
je
ror
cmc
dec
sbb
cwtl
mov
dec
mov
insl
xchg
movsl
test
add
in
add
mov
or
sarl
stos
cli
lahf
imul
orl
loope
shll
lret
mov
push
into
insb
xchg
jle
popa
mov
mov
mov
mov
mov
pop
jge
lods
mov
pop
js
in
xchg
popf
popf
cmp
xlat
data16
adc
mov
inc
inc
iret
clc
shrb
and
nop
pop
je
bound
pop
or
mov
movsl
repz
arpl
imul
into
orb
imul
pop
les
aam
push
fmuls
in
push
lret
cmp
sub
pusha
sarl
loopne
mov
popl
jecxz
rorb
cmp
test
dec
xchg
push
ficoms
jg
andb
inc
aam
inc
hlt
cmpl
xchg
or
cmp
mov
inc
sbb
rorb
aaa
stc
or
bnd
adc
aam
aam
mov
push
push
outsb
jp
mov
lcall
fstpt
dec
fwait
mov
stos
std
mov
fdivs
dec
sti
in
add
cmp
and
lret
in
movq
mov
pop
or
xlat
push
dec
in
aas
out
mov
cltd
jg
adc
mov
fsts
adc
lea
jns
mov
pop
xchg
xchg
test
ds
out
fnsave
cwtl
lahf
adc
dec
jg
leave
dec
jg
add
mov
mov
lock
cli
sbb
xchg
push
sti
outsb
add
popf
cmpsl
repz
inc
lcall
pop
or
adcb
ret
dec
movsb
popf
mov
inc
pushf
adc
shlb
ja
sub
mov
push
inc
std
mov
mov
push
divl
orl
or
out
in
add
xor
call
jo
inc
mov
push
mov
add
dec
lcall
inc
mov
mov
dec
pop
cwtl
js
js
add
fists
aaa
dec
or
das
xchg
add
jbe
pop
jno
lds
pop
les
xor
xor
cmc
test
aas
dec
xor
or
mov
push
cmc
mov
pop
sbb
jle
test
lcall
jecxz
fisubl
ds
and
popf
stos
or
fisubs
xchg
xchg
and
mov
xlat
enter
cmp
int
rcr
in
cmpsl
pushf
sbb
cmp
lock
push
shrb
addl
mov
mov
mov
rcl
xchg
or
and
sarb
stos
inc
sbb
rcr
cmpsb
jl
push
out
mov
xchg
sub
int
pop
mov
push
ljmp
xor
adc
stos
icebp
nop
jns
or
inc
inc
fnstsw
shlb
outsb
mov
and
adc
mov
jb
mov
fildll
data16
aas
je
addb
and
in
mov
scas
scas
stos
xchg
mov
js
movsl
sti
add
insb
cmp
jae
inc
add
xchg
in
nop
mov
fists
cmpsb
add
mov
and
hlt
sarl
mov
xchg
mov
add
inc
sub
mov
fwait
mov
pop
jns
mov
test
lods
scas
dec
out
xchg
add
sub
cwtl
into
enter
mov
out
popa
loop
adcl
movsb
les
pushf
mov
repnz
fdivrs
adc
sub
nop
fimull
stos
sbb
mov
inc
repnz
mov
pop
mov
fdivl
pop
and
dec
mov
cwtl
aas
add
mov
mov
dec
pop
leave
hlt
mov
xchg
lcall
cmc
cltd
int3
mov
adcl
out
mov
push
mov
jp
jmp
arpl
fldcw
mov
lods
push
jg
scas
add
js
adc
add
xor
xchg
mov
xchg
pop
popa
mov
or
dec
imul
xor
cmpsb
loop
loop
test
push
cmp
xchg
shlb
mov
fisubs
into
mov
xchg
sbb
std
das
push
mov
sub
pop
hlt
sbb
mov
orb
and
mov
pop
int3
imul
or
iret
cmc
adc
mov
aas
mov
je
inc
sarl
inc
xchg
adc
movsb
sarl
ljmp
add
mov
mov
scas
add
push
sahf
cmp
xchg
mov
test
cmp
movsb
cmp
mov
lret
mov
xchg
lock
pop
rol
andb
or
subl
inc
push
cli
iret
sub
mov
test
sti
jle
dec
lods
push
repnz
fiadds
out
add
ljmp
in
xor
rclb
cmp
and
outsb
mov
repz
aas
hlt
in
xor
push
jb
pop
loope
nop
mov
push
xlat
fisubs
push
inc
lods
xchg
jbe
js
add
rorl
and
mov
push
add
outsl
sub
shrl
mov
call
scas
add
add
add
mov
call
out
push
pop
ret
adc
popa
scas
pushf
cmc
scas
call
or
adc
xlat
push
mov
push
sub
inc
fsubr
int3
cwtl
rcl
inc
incb
out
adc
dec
ret
clc
in
sub
push
push
push
xor
or
mov
sbb
mov
cltd
mov
mov
rolb
mov
clc
xchg
cld
mov
mov
roll
mov
mov
test
movsb
dec
inc
mov
add
jae
add
fistps
inc
rclb
adc
and
shr
stos
dec
adc
mov
test
das
pop
mov
js
loop
xchg
clc
mov
jp
rcrl
cwtl
and
test
xor
pop
cli
xchg
lret
dec
test
push
push
xchg
mov
cmp
aad
or
clc
mov
stos
dec
add
sarl
jae
rcrl
int
test
mov
push
test
ljmp
pop
nop
inc
lods
dec
add
in
xchg
call
push
filds
sub
loopne
push
sub
lcall
add
test
mov
cwtl
imul
sub
cmp
rcrb
mov
ja
pop
sub
jecxz
aaa
sahf
pop
xchg
add
sbb
stos
dec
inc
cmp
add
add
shrl
inc
add
mov
fstl
pop
lods
sbb
in
cmp
mov
mov
push
jbe
es
inc
xor
adc
roll
pop
das
lea
into
or
jo
jno
movsl
ljmp
mov
adc
lcall
jbe
xor
test
sub
push
sbb
fwait
icebp
enter
clc
insb
cwtl
mov
xchg
inc
push
lock
ret
cmpsb
shll
xchg
sub
or
ret
and
mov
mov
mov
shlb
cld
cmpsl
icebp
clc
mov
bound
lds
ret
xchg
sub
pop
cltd
adc
fisubrs
dec
mov
shr
pop
ja
jne
mov
ja
pushf
aad
xchg
inc
xor
lods
nop
jg
xchg
fidivl
jmp
fs
xor
mov
pop
jbe
sub
hlt
aad
and
xchg
and
xchg
xchg
jge
mov
xchg
fwait
adc
jmp
fisttpll
mov
ret
test
adc
shr
popa
movsb
push
xchg
loop
movsb
test
imul
rclb
inc
mov
push
js
push
cld
push
ficoml
cli
test
mov
and
or
enter
or
mov
xor
sub
iret
mov
es
or
mov
repz
sarb
je
inc
incb
movsb
scas
mov
clc
or
mov
mov
sub
fucomp
in
icebp
loope
nop
lock
fcmovb
arpl
add
lock
pop
in
fdivr
xchg
sbb
adc
sub
xor
push
mov
xor
int3
ficoml
dec
push
lock
movsb
stos
add
imul
call
cmp
adc
mov
test
lock
dec
stos
cmp
and
shrb
pop
lret
mov
mov
mov
scas
mov
enter
icebp
imul
cwtl
leave
movsb
mov
mov
inc
les
repnz
mov
mov
push
lods
call
cmp
mov
and
orb
pop
mov
js
enter
xchg
je
and
mov
popa
in
mov
jb
test
xchg
cmpsl
js
dec
mov
mov
test
movsb
dec
insb
pop
mov
mov
mov
call
lret
add
hlt
or
mov
xor
inc
jmp
enter
imul
scas
pop
or
xor
push
push
scas
and
lock
and
movsb
popf
dec
mov
xchg
cmp
push
iret
and
pop
es
test
jne
ret
cmp
pop
outsb
movsb
jbe
jne
in
xor
clc
scas
adc
sub
push
icebp
call
test
mov
xor
inc
das
mov
cld
jecxz
pop
fcomps
clc
lock
cmp
cltd
nop
mov
and
test
ljmp
into
jl
sub
adc
xor
in
iret
insl
out
pop
idivb
in
xchg
test
mov
imul
jl
test
mov
mov
cmpb
sti
inc
fisttpll
add
stc
push
push
and
js
test
pop
in
and
xchg
fstps
and
xchg
inc
xor
fisttps
mov
inc
mov
mov
jne
mov
push
xchg
test
scas
xchg
lret
rorl
jb
adc
fists
inc
lret
jl
movsl
test
mov
pop
cmc
in
inc
sarl
scas
and
inc
repnz
push
call
adc
dec
mov
sbb
jbe
mov
push
xchg
jp
rorl
lock
xchg
push
or
arpl
lcall
insb
loopne
mov
xchg
and
adc
pushf
adc
push
push
sahf
and
xchg
xchg
push
jle
mov
nop
stc
add
fistpll
pmulhuw
adc
pop
or
ret
xor
mov
test
cmp
ret
xchg
lods
stos
in
mov
sahf
fisttps
pop
dec
std
dec
pushf
mov
jl
call
cld
lcall
mov
repz
bound
hlt
and
dec
or
xor
jo
fidivrs
imul
shl
pop
add
pop
rolb
jo
stos
and
mov
xor
ret
mov
mov
inc
shr
ret
and
pop
add
xchg
jecxz
lods
cwtl
pop
mov
pushf
mov
mov
push
rol
lea
sbb
cltd
push
jo
je
scas
mov
xchg
mov
dec
in
in
cmpsl
pop
rclb
mov
xchg
jb
mov
movsl
sahf
imul
test
or
pop
sbb
test
or
stc
inc
lret
adcl
mov
jp
mov
mov
outsb
or
popa
fidivs
cwtl
xchg
jp
mov
call
pop
xchg
lods
mov
push
stos
sbbl
popa
cmp
xacquire
das
jo
movsb
add
enter
ret
testl
ljmp
ja
and
xchg
mov
xorl
in
push
outsl
add
adc
movsb
push
adc
cwtl
fidivs
repnz
sbb
inc
jo
pop
jnp
mov
xchg
mov
mov
das
pop
scas
add
repnz
orb
movsb
push
stos
or
test
mov
mov
repz
pop
xchg
fst
push
or
ffree
fwait
mov
jmp
jle
or
push
jge
mov
xchg
pop
mov
popa
push
testl
out
add
cmpsl
jae
xchg
ljmp
lea
xor
shl
inc
call
bound
lods
scas
leave
xor
mov
sub
add
stos
jp
stc
pushf
mov
xchg
icebp
or
pop
scas
orb
call
inc
nop
mov
mov
loopne
fdiv
sbbb
std
outsl
or
pop
cmc
ret
sbb
xchg
bound
xchg
mov
xor
lret
push
dec
sbb
ss
xorb
lods
pop
adc
and
mov
mov
xchg
cmp
scas
and
or
mov
push
mov
popf
or
sahf
lds
mov
rorl
mov
inc
pusha
adc
sbb
adc
push
sub
mov
jmp
adc
ja
scas
mov
int3
adc
xor
cwtl
iret
add
mov
leave
clc
fs
aas
rcl
roll
push
daa
add
lods
gs
ret
cmp
ja
add
aaa
fstl
lods
xchg
xlat
daa
inc
jmp
xlat
test
and
repnz
ret
xor
shlb
xchg
fucomip
push
or
scas
mov
or
push
frstor
insl
sbb
xchg
ljmp
mov
cli
add
pushf
or
aam
jae
clc
pushf
cmp
and
stos
xchg
xlat
dec
lods
inc
cwtl
inc
addb
mov
stos
js
pop
sub
xlat
shrl
jo
lods
pop
inc
adc
mov
fsubl
repz
sti
out
test
sbb
fidivs
insl
into
mov
xlat
push
test
nop
pop
xchg
loopne
push
fsts
mov
cmp
mov
shrl
mov
cmc
movsl
outsl
jo
arpl
addb
ret
insl
scas
fwait
aad
mov
rol
dec
xchg
inc
imul
adc
fadds
push
push
out
test
jmp
adcl
bound
jge
fnclex
imul
mov
mov
rcrb
adc
mov
cmovb
into
movsl
pop
insl
xor
xor
cld
pop
jns
mov
aas
adc
pop
pop
sti
test
adc
sub
repnz
jp
mov
orb
imul
mov
add
shlb
fs
push
pop
or
mov
rol
mov
mov
icebp
mov
inc
add
fcoml
adc
fbld
mov
jecxz
lds
or
pop
rolb
xchg
mov
lock
adc
xorb
iret
sub
movsb
dec
add
aaa
bound
pop
sub
and
mov
inc
cltd
mov
adc
xlat
mov
jle
lods
adc
test
mov
jmp
subl
pop
stos
inc
data16
push
pop
dec
iret
cmp
mov
dec
popa
dec
movsl
xor
adc
xor
xchg
lods
push
call
mov
or
aam
leave
scas
outsb
mov
jns
mov
or
inc
pop
xor
rolb
and
cli
das
jge
sarl
dec
lret
xlat
cmp
jbe
call
stos
jae
test
in
lds
mov
sti
sub
pop
pop
push
dec
movsb
out
adc
xchg
aaa
nop
xchg
cmp
shrl
or
outsb
ret
cmp
adc
adc
and
xchg
rolb
test
cmpb
xchg
mov
in
dec
shll
in
pop
xor
xchg
lods
xchg
mov
cmp
testb
mull
lods
and
jne
jns
and
xchg
jns
sub
dec
pop
xchg
testl
ret
fwait
sbb
sbb
ret
clc
fistps
xorb
sbb
lcall
mov
adc
push
cwtl
and
das
push
jnp
add
sbb
mov
popf
nop
dec
push
shll
adc
push
dec
mov
leave
lret
inc
movsb
xchg
fsqrt
mov
test
rolb
ret
in
and
sahf
jb
adc
decl
mov
outsb
pop
xchg
lcall
cltd
incl
add
lods
loop
mov
xchg
flds
sbb
lret
add
add
ret
push
popa
or
mov
lods
mov
dec
mov
push
call
mov
sub
das
jle
mov
aaa
outsb
into
imul
xchg
popf
rcll
jecxz
stc
or
mov
sub
lods
rol
call
repz
or
adc
mov
into
xor
dec
test
popf
or
mov
inc
or
daa
jle
mov
xchg
lods
icebp
test
bound
push
test
test
mov
push
stos
sub
fld
ror
mov
dec
xchg
mov
jmp
rcl
sbb
push
dec
test
aam
jno
or
ss
mov
fnstcw
pop
dec
fimuls
lods
xchg
jns
cmpsb
hlt
ret
stos
cmpsb
sub
ret
stos
lret
bound
mov
cmp
or
test
xor
push
pop
stos
add
pop
lods
push
ljmp
push
adc
sahf
into
in
pop
or
sar
mov
je
adc
xchg
leave
cmc
jb
add
dec
or
xchg
push
repnz
sbb
xchg
adc
inc
inc
mov
push
loopne
ja
jne
outsb
movsb
push
sub
jmp
mov
xchg
xor
nop
mov
dec
icebp
mov
mov
inc
es
sbbl
xchg
fisubl
ret
or
jb
lret
jne
movsl
lds
scas
pop
imul
outsl
test
push
xor
clc
test
aad
pop
mov
jns
adc
jns
xlat
arpl
push
or
mov
xor
xor
pop
inc
add
sbb
mov
lcall
push
test
sub
cmpsb
xor
jle
adc
cmpsl
mov
mov
pop
shrl
mov
movsb
xorb
push
repz
push
aad
push
adc
mov
ret
add
mov
mov
add
loope
fildll
sub
cli
xchg
adc
and
mov
mov
lea
dec
mov
cli
xchg
iret
mov
or
cld
pusha
mov
sbb
xchg
repnz
or
cli
sbb
mov
and
movsb
or
mov
mov
sbb
mov
imul
inc
bound
adc
mov
data16
int3
xchg
sbb
push
mov
jl
and
repz
xchg
int
leave
mov
and
addl
add
adc
jmp
adc
leave
cwtl
loope
xlat
sbb
push
or
mov
icebp
and
leave
jp
lret
sbb
mov
sub
pop
mov
frstor
or
xchg
or
jno
das
les
dec
mov
jnp
pop
push
mov
test
xor
loop
movsb
mov
int
sbb
or
xchg
or
push
push
xor
nop
pop
and
xchg
cwtl
sub
stos
xchg
mov
std
adc
cmc
bound
mov
pop
mov
add
lcall
shl
imul
mov
jmp
cmpl
imul
aad
jmp
inc
call
xchg
imul
ret
xchg
scas
call
and
adc
or
mov
fst
nop
orl
ret
add
les
jl
out
add
shr
scas
in
push
scas
cmp
movsl
mov
subl
xlat
cld
inc
xor
inc
fstp
mov
jo
mov
and
imul
aas
nop
in
mov
test
imul
jmp
mov
and
sbb
push
pushf
ds
mov
cmpsl
cmpsl
roll
out
scas
or
and
rcll
clc
movsb
iret
call
cmc
out
dec
push
add
stos
lea
lds
pop
lret
mov
sub
dec
fisubrs
lahf
iret
scas
xchg
xor
call
cmpl
test
pop
sbb
call
rcll
mov
inc
bound
lahf
push
js
dec
sub
loop
mov
xchg
std
mov
add
fistpl
mov
pop
cwtl
and
test
pop
les
xlat
sbb
and
cwtl
mov
sbb
xchg
jb
mov
jns
rcrl
xchg
pop
jbe
shlb
sahf
pop
dec
adc
push
ret
xchg
add
cmc
mov
aaa
adc
jno
and
movsb
add
mov
inc
xor
sti
aaa
adc
mov
and
shrl
in
cmp
xchg
xor
shll
and
pushl
sbb
leave
pop
out
push
jmp
jnp
adc
loope
nop
add
mov
mov
fisubrs
stos
inc
jle
cmc
cmpsb
lods
mov
lock
and
imul
xor
add
xchg
std
pop
hlt
out
push
mov
push
mov
jbe
shrl
hlt
mov
push
jge
loop
jb
rorb
rorb
pop
in
adc
cmp
adcl
ljmp
or
push
add
cwtl
or
popf
add
rcrl
mov
lahf
test
cwtl
mov
cmc
and
cmp
scas
mov
mov
xor
cs
mov
mov
mov
rorl
icebp
push
jne
jp
aas
repz
aas
dec
lcall
movsl
or
mov
js
jno
daa
ret
xchg
cmpsl
lret
fidivrl
daa
stc
leave
nop
pop
pop
js
cltd
jbe
loop
xchg
sahf
mov
mov
lahf
faddp
mov
rol
arpl
in
stos
push
and
jle
or
jno
pop
popf
xchg
sarl
ss
aam
int3
xor
mov
jbe
sub
jl
mov
pop
mov
push
orl
mov
mov
stos
mov
pop
loop
dec
movsl
cmpsl
shll
add
or
and
pop
mov
sbb
rcll
aaa
ret
cs
mov
pop
mov
sarl
popf
movl
rcl
in
jns
leave
and
sahf
and
addl
jb
imul
fldl
mov
sarl
fisubs
sbb
xchg
cli
sbb
sbb
inc
std
xchg
addl
ss
mov
sahf
jb
fs
mov
test
adc
xchg
mov
popf
rorl
sbbb
fwait
aad
fiaddl
or
mov
cmc
fs
mov
cmpsb
or
xor
sbb
mov
mov
inc
pop
mov
inc
sarb
inc
jle
xchg
lds
mov
xchg
or
ljmp
sub
mov
adc
das
out
mov
jg
jl
rcll
testb
sub
mov
iret
dec
inc
stos
sub
and
gs
add
adc
aad
inc
adc
add
mov
or
push
adc
movsb
test
mov
call
mull
jo
mov
int
test
pop
fmuls
mov
cwtl
add
fistpll
sbb
pushf
jl
xchg
xor
xor
sub
lea
jns
jmp
pop
mov
cmp
lods
dec
lea
dec
jns
int
ljmp
into
cmp
jge
std
push
xchg
xchg
push
xor
fdivp
fwait
lods
mov
mov
xchg
jne
mov
std
std
int
or
or
ret
mov
jno
inc
outsl
out
push
jp
lret
add
sahf
es
dec
pushl
xchg
push
test
jle
adc
aam
cmpsb
mov
lds
sub
mov
data16
stos
xchg
cmp
adc
mov
call
enter
lret
mov
cli
mov
dec
je
cmc
and
fdivr
imul
and
add
or
xorl
push
mov
add
filds
lcall
add
imul
or
aad
je
rcl
shrl
mov
movsb
scas
push
pop
scas
test
popf
sbb
push
sbb
into
adc
jmp
cmp
adc
loope
sub
or
add
jl
inc
rol
loop
fwait
int3
lds
or
hlt
shlb
imulb
mov
mov
mov
je
lea
push
xchg
lret
sub
jb
xlat
fcompp
fs
out
sbb
mov
and
clc
test
sub
inc
js
xor
and
push
dec
arpl
cmpsl
leave
inc
int3
into
aam
cmpsl
mov
int3
lret
test
mov
dec
in
cmp
shl
in
imul
push
mov
out
xchg
call
add
je
or
pop
adc
and
gs
and
test
in
insb
push
rcr
lods
dec
hlt
leave
xchg
adc
fsub
mov
inc
xlat
jp
and
mov
sub
andl
cwtl
mov
int3
or
mov
or
pop
out
aas
addr16
out
fcomps
xchg
and
cli
imul
mov
mov
ljmp
test
fidivrs
aaa
dec
fdivl
jbe
mov
cmc
adc
std
test
lods
mull
cwtl
xor
pop
pushf
pop
cltd
mov
pop
xchg
mov
sbbl
mov
std
adc
sub
xchg
cmp
mov
pop
mov
cmp
lret
xor
xlat
xchg
inc
xchg
or
hlt
mov
jbe
adc
addl
or
jle
icebp
sarb
fsts
mov
mov
mov
scas
int3
leave
mov
shl
imul
adc
js
xchg
mov
pusha
xchg
pop
xchg
es
add
and
jl
sbb
inc
mov
out
or
rorb
pop
adc
mov
sbb
mov
icebp
inc
adc
arpl
int3
jnp
add
mov
xchg
or
stos
fnstcw
xchg
pop
shll
add
test
pop
push
sub
testl
or
cmpsb
sbb
loope
shlb
jge
ficoml
imul
jb
rolb
xor
xchg
out
fmull
popa
int3
fwait
call
subl
jo
jg
adc
sub
and
mov
cmpsb
mov
scas
inc
adc
jl
xor
xchg
adc
testl
pop
into
push
push
rorb
jnp
push
jp
ljmp
es
das
roll
aam
jbe
add
iret
add
inc
and
add
idivb
cli
daa
rorl
subb
mov
cwtl
sub
cmpsl
roll
pop
outsl
jg
rorb
or
jl
sbb
pushf
mov
cmp
xchg
cmp
mov
cmp
add
decl
pmulhw
jo
pop
sub
mov
shrb
push
out
mov
int3
pop
lods
std
pop
fidivl
xchg
add
xchg
mov
in
mov
lahf
sbb
stos
stos
test
ja
xor
movsl
mov
and
jne
jb
pushf
loop
in
pop
pop
dec
hlt
arpl
push
test
mov
dec
fldt
ror
arpl
and
mov
sbb
ljmp
insb
cmp
inc
call
cmc
insl
mov
jnp
jle
mov
test
inc
and
xor
fmulp
jo
pusha
aas
pop
mov
inc
push
insl
xchg
xchg
or
dec
xchg
xchg
daa
call
pop
pop
pop
or
push
mov
mov
mov
inc
into
lods
jge
call
adc
sub
jg
rcrb
nop
jne
jo
mov
mov
mov
mov
lock
push
hlt
fdiv
adc
mov
cmp
insb
jp
movsb
pop
fstpl
stos
xlat
enter
xchg
add
push
shrl
sbb
adc
and
adc
fiadds
ja
mov
xor
ret
xchg
mov
stos
jge
jmp
mov
push
push
lret
dec
cmpsb
pushl
icebp
fcomps
out
repz
mov
cmpsb
in
mov
xchg
fcompl
or
jmp
cwtl
dec
daa
xchg
pop
or
lret
xor
lods
add
jecxz
ljmp
ficoms
or
inc
pop
jmp
sbb
mov
and
cld
lea
sub
ljmp
add
data16
shl
andl
xchg
mov
out
jbe
inc
inc
lret
pop
or
int3
icebp
lods
mov
clc
fmuls
or
ljmp
into
flds
loope
shlb
enter
rorl
xor
sti
or
adc
dec
xor
jne
jecxz
aad
out
testb
lret
adc
clc
enter
int
mov
mul
mov
sbb
sarb
hlt
shlb
test
cmpsb
fldt
add
out
std
loop
leave
shrb
hlt
lods
lods
call
mull
imul
int3
jae
or
and
sbbb
mov
sub
test
mov
test
dec
das
lock
mov
leave
and
icebp
lret
cli
sub
pop
fwait
jp
hlt
xchg
adc
xor
mov
pop
inc
mov
insl
xchg
out
adc
fstpl
and
in
clc
adc
mov
fmul
mov
jno
mov
rolb
xchg
cli
xchg
adc
cwtl
push
mov
std
out
ss
mov
movsl
adc
pop
movsb
movsl
mov
das
cmp
mov
mov
xchg
les
cmp
loop
push
dec
loopne
add
inc
or
test
loope
jle
push
jl,pt
das
repz
inc
or
mov
xor
test
add
push
movsl
lret
jmp
fldenv
sbb
iret
sub
lret
into
push
push
or
dec
fsubs
jle
sbb
imul
pop
push
xor
movsb
add
add
push
or
fdivrl
mov
xchg
inc
cltd
cmpsb
add
insb
adc
test
les
mov
and
pextrw
xor
outsl
jb
sbb
fdiv
test
push
mov
mov
mov
mov
xchg
imul
xchg
mov
movsb
ja
mov
and
loop
xor
pop
xchg
and
push
cld
adc
sub
pop
test
or
fs
jl
cmp
ror
lods
adc
push
rcll
xchg
mov
imul
push
enter
add
in
adc
pop
loope
rcrl
outsb
aam
ficoml
pop
ret
jbe
lods
mov
and
add
mov
into
pushf
mov
std
lock
movsl
daa
ret
sbb
adc
lds
jg
cmp
nop
and
jecxz
fidivrs
imul
out
ret
mov
and
aad
push
mov
shlb
xor
jmp
jecxz
mov
fstl
aaa
adc
jecxz
jo
mov
cwtl
pop
mov
stos
imul
add
testl
fcomps
cwtl
adcb
xchg
mov
lcall
xchg
sti
sub
jno
jo
lea
mov
insb
in
in
sub
cltd
addr16
jg
push
stos
xchg
adc
cmpl
sti
push
mov
jne
fcompl
mov
mov
mov
je
mov
push
popf
sub
add
add
xorb
xor
sub
int3
fs
cmp
mov
movsl
std
movsl
shl
loopne
jns
hlt
xadd
into
rcrl
inc
and
push
cltd
mov
xchg
add
shlb
jl
xor
fisubl
aad
out
andl
jle
cltd
in
push
adc
xchg
xchg
mov
test
xchg
pusha
xchg
and
jg
repz
int
out
mov
movsb
fcomps
jo
hlt
cltd
push
stos
pop
stos
mov
mov
arpl
cmp
fisttpll
mov
rorl
pop
in
movsl
or
push
stc
mov
enter
iret
xchg
fildl
ret
scas
jae
dec
adc
dec
mov
pop
xchg
aas
fsubs
mov
mov
in
mov
mov
lock
add
jle
loopne
push
scas
pop
jb
ja
mov
int3
dec
imul
push
lcall
test
imul
repz
dec
in
jbe
inc
iret
add
sar
repz
shr
test
into
xchg
inc
insb
ficoml
stos
nop
sub
cmc
inc
mov
inc
cmc
inc
or
pushf
movsb
and
js
popa
cwtl
add
orb
les
add
aas
dec
lret
jecxz
enter
add
mov
roll
or
div
pop
cmp
mov
and
fld
mov
mov
adc
xchg
mov
sbb
mov
and
mov
mov
daa
ds
push
sub
sub
sbb
lds
mov
dec
or
and
jl
sub
jmp
test
cmp
pop
jne
test
ret
js
ficomps
rcr
sbbl
or
push
roll
je
lcall
mov
imul
jmp
mov
adcb
test
xor
scas
mov
sub
xchg
mov
notl
fcmovnbe
dec
xchg
imul
lret
add
add
fisubrs
fisttpll
insl
dec
pusha
xchg
out
inc
imul
add
jns
mov
lods
pop
jecxz
insb
xor
rcrl
mov
add
jg
jns
addr16
jp
add
hlt
fisubrl
sbb
mov
rorb
mov
fnstenv
mov
xchg
xlat
or
test
ficoms
xlat
lret
cmpsb
insb
lock
dec
jp
jl
mov
push
lds
xor
dec
data16
int
pop
adc
aas
xchg
mov
and
adc
imul
jge
xchg
fcmovb
pop
mov
mov
mov
movl
xchg
imul
xor
jb
cmp
pushf
addr16
addb
push
test
jecxz
mov
in
push
data16
int3
mov
popa
call
mov
out
mov
jo
out
movl
popa
mov
cwtl
nop
mov
or
lahf
insb
fcom
leave
pop
into
dec
or
lods
xchg
fwait
push
out
adc
clc
call
cs
stos
xor
popa
insb
jae
hlt
in
decb
shll
inc
lock
js
les
jmp
push
stos
mov
sub
push
ss
sarb
jnp
mov
mov
xorl
mov
int3
ljmp
or
les
test
std
xor
xchg
mov
ljmp
adc
mov
sub
lret
cmp
and
in
or
out
xchg
push
adc
xlat
repnz
sbb
mov
roll
call
mov
icebp
mov
orl
lcall
pop
call
mov
mov
repz
test
and
adc
pop
fwait
cmpsb
jbe
popf
xchg
mov
xor
sbb
imul
push
leave
add
leave
inc
test
movsl
jp
mov
fidivs
xor
xchg
push
movsb
mov
jle
mov
mov
or
movsb
and
pop
shrb
lds
ret
test
cmc
adc
sarb
in
fimuls
sub
addl
xlat
xchg
hlt
lea
out
sahf
and
push
jb
sti
movsb
shrl
mov
add
shl
mov
adc
aas
fisubl
jg
shl
lods
add
push
jmp
jns
and
in
mov
ljmp
inc
in
ficomps
cmp
adc
and
ss
mov
xor
fidivrl
xchg
cld
push
shll
xchg
xchg
insb
aas
and
push
js
dec
pusha
mov
lods
fs
xchg
push
int3
ljmp
mov
sbb
push
loopne
fsubrl
lret
lret
or
mov
ficompl
or
cmpsl
pop
je
xor
xchg
jl
insl
adc
pop
push
pop
jmp
adc
and
rcrb
pop
scas
push
mov
leave
jl
lds
adc
cmp
int3
cmp
sub
mov
ret
pop
call
inc
aas
or
adcl
inc
js
dec
ss
pushf
xchg
mov
mov
inc
popf
xchg
nop
jo
mov
add
mov
inc
clc
inc
cli
scas
into
mov
add
add
add
fnstenv
cmp
sahf
mov
dec
shll
pop
pushf
clc
mov
idivl
sbb
pushf
cmc
cmpsb
push
mov
push
mov
mov
cmp
xchg
xor
xchg
cltd
or
pushf
mov
popa
dec
mov
dec
mov
pop
icebp
dec
jle
jns
imul
fcmovnbe
movsb
shll
notl
aad
aas
icebp
movsl
push
cmp
jmp
xorb
jnp
mov
lret
dec
std
scas
bound
scas
inc
xchg
test
nop
pop
test
test
or
fcomps
shl
js
add
sub
rclb
pushf
in
push
and
int3
out
or
adc
loopne
loopne
data16
xchg
notl
mov
lods
lret
dec
loope
or
add
xchg
dec
cmc
mov
lock
adc
cs
repnz
add
mov
mov
mov
pushw
push
push
loop
xchg
sbb
lret
shlb
or
pop
cli
add
js
push
and
mov
lock
inc
push
dec
arpl
xchg
loop
jne
scas
pop
xor
shlb
out
ss
sbb
cltd
cmpsl
or
mov
push
mov
sub
scas
rcrb
xor
push
inc
int
inc
int3
push
icebp
inc
lea
xchg
dec
jp
pop
mov
scas
ret
pushf
loope
orl
sbb
sbb
scas
fs
mov
jbe
add
add
jb
fldl
shrl
fcmovne
imul
scas
cwtl
in
aam
cmpsl
xor
adc
test
sbb
stc
test
out
mov
and
or
cmp
adc
cwtl
and
mov
nop
pop
test
xchg
sbb
cwtl
repnz
cmp
pushf
mov
xor
std
std
enter
mov
in
imul
jb
je
xor
xchg
add
lret
in
push
movsl
jns
adc
int
lcall
lea
daa
lret
cltd
xor
mov
cmpsl
pop
mov
pop
mov
mov
sub
mov
je
cltd
imul
mov
xchg
movl
push
jo
xchg
movsl
rcrb
xchg
neg
iret
pop
test
shl
test
rcll
ds
into
fidivrs
fimuls
adc
xor
cmp
sbb
pop
xchg
dec
push
jne
dec
jae
cmp
sub
lret
and
fbstp
repnz
in
xor
dec
jecxz
push
mov
sub
mov
out
push
add
mov
sahf
mov
sbb
inc
testl
movsb
clc
mov
cwtl
push
and
rolb
fisttpll
loope
xor
test
fnstcw
and
pop
pop
jl
xlat
or
inc
fdivs
clc
mov
xchg
xchg
lahf
jno
push
lcall
mov
call
inc
push
sbb
roll
lcall
and
pushf
xlat
hlt
mov
rcrb
movsl
add
in
test
dec
pop
pusha
add
aam
mov
std
aaa
push
and
fbstp
cmp
pop
and
cmc
mov
dec
in
popf
dec
mov
sbb
data16
push
mov
je
shl
fcmovnb
mov
mov
insl
shll
xor
adc
das
fnstenv
sbb
jnp
arpl
mov
out
or
test
jo
mov
mov
cmp
mov
dec
sti
in
xor
lods
ljmp
int3
movsl
ljmp
int
addb
test
popf
rcr
mov
add
push
adcl
xchg
add
lea
or
pop
addr16
dec
mov
loop
shr
xchg
lods
push
jb
in
sub
insl
cld
test
shl
pop
mov
mov
jp
add
sti
ss
popf
mov
inc
cwtl
cmpl
js
mov
repnz
and
cli
movsb
imul
stc
or
push
dec
or
xchg
insb
movsb
adc
out
sub
and
test
mov
in
xchg
pushf
jp
xchg
aad
and
inc
push
scas
add
dec
loopne
cmc
cwtl
and
clc
stc
leave
mov
repnz
lods
jnp
pop
test
cmp
or
add
jo
cli
std
pop
add
cld
repz
pushf
xor
loopne
lret
repnz
jo
ret
lea
mov
push
xchg
shrb
cli
mov
add
sub
int3
or
dec
int
mov
dec
pop
cmp
outsl
dec
dec
ljmp
std
aad
jno
fcmovnu
mov
das
shll
cmc
lods
mov
je
ljmp
int3
xlat
or
cld
add
mov
sub
push
pop
or
imul
mov
xchg
aam
shll
inc
push
out
xchg
in
imul
or
sub
lods
hlt
lods
push
ret
enter
mov
xor
call
cs
rcll
test
ret
add
dec
js
push
lcall
mov
jl
push
mov
cmpsb
push
rorl
xchg
cltd
sub
inc
mov
loop
push
scas
enter
popl
inc
out
and
fs
es
jge
jnp
and
into
out
shlb
ja
scas
and
add
dec
mov
xchg
inc
cmc
adc
and
lea
jle
adc
sti
jbe
xor
xchg
or
mov
ljmp
enter
jns
xchg
sbb
and
pop
dec
out
push
push
lock
dec
mov
add
dec
add
in
pop
stos
or
pop
test
scas
test
fsubl
mov
hlt
inc
pop
scas
adc
stos
pop
imul
push
mov
imul
cltd
aaa
nop
imul
test
shlb
push
or
mov
lods
imul
jg
mov
dec
jno
cmp
je
pushf
jecxz
loopne
jo
mov
pushf
cmp
imul
sbb
jae
sarl
cmpsl
sbb
orl
mov
xchg
outsb
add
sub
pop
icebp
mov
mov
or
imul
test
add
cmpsb
fstps
ret
mov
popf
or
adc
cmc
ds
stc
mov
rol
test
dec
xor
jge
repnz
repz
xchg
mov
mov
and
cwtl
ja
jb
movsl
int3
fwait
lods
aaa
push
arpl
pop
and
movsl
sbb
in
or
in
or
arpl
stc
enter
pop
dec
inc
jp
adc
aad
pop
jnp
mov
jmp
mov
xchg
and
lcall
xchg
loop
xchg
popf
aas
test
int3
pop
mov
or
add
adc
cmp
data16
jle
mov
stos
mov
or
pushf
xor
pop
xchg
mov
sbb
add
test
sub
lods
in
mov
lret
test
aaa
nop
clc
fmul
test
popf
xchg
imul
sbb
imul
push
test
bnd
ja
and
cwtl
mov
leave
ret
mov
lret
movsl
out
xchg
mov
push
loope
rcl
ljmp
push
or
jl
mov
rcll
sub
mov
xchg
add
das
addr16
es
lea
xlat
ds
add
dec
dec
inc
push
pusha
jne
pop
repz
movsl
pop
out
push
sahf
sub
ss
cmpsl
int
sub
xor
fsts
pop
xchg
push
shrb
mov
icebp
mov
dec
sbb
into
movsl
dec
aas
xchg
sub
rcr
sti
das
inc
xor
jl
leave
call
out
fcomi
pop
test
mov
pushf
pop
add
inc
jnp
mov
push
adc
dec
jle
scas
cmpsl
add
mov
or
hlt
mov
push
ljmp
and
adc
ljmp
es
test
and
aam
adc
sbb
mov
xor
les
jno
addr16
movsb
scas
insb
repz
int3
in
jbe
in
pop
dec
xor
into
ficomps
ror
sbb
les
inc
jl
ret
add
insb
dec
shrb
data16
push
mov
mov
push
xchg
mov
stc
cli
xchg
adc
ret
stos
push
mov
push
test
fstl
rorb
inc
mov
int3
mov
repnz
sub
sub
lock
xor
data16
dec
call
or
pusha
aas
inc
mov
test
std
fistps
sub
mov
xlat
notb
in
rclb
lret
inc
sub
cmp
scas
xor
out
stc
rcl
popf
sahf
fsubs
cmp
or
into
or
and
mov
jecxz
mov
jb
adc
mov
fs
pop
pop
lcall
xchg
fnstenv
push
cmp
mov
or
mov
nop
scas
jl
cmpsb
adc
inc
xchg
mov
pop
cmp
add
dec
jmp
sti
sahf
out
dec
and
sbb
sub
pop
inc
cmp
pop
mov
js
out
inc
repz
cmp
fs
adc
or
cmpsl
mov
cmpsb
hlt
sub
scas
test
xlat
push
sbb
cmp
shll
arpl
lcall
int3
sahf
push
sbb
fsubrs
jmp
mov
sub
imul
hlt
mov
cmp
or
sarb
test
add
jle
fcomi
mov
inc
mov
or
jb
sbb
cmp
cmp
xor
in
hlt
ret
stos
fiadds
fsubrs
scas
mul
icebp
mov
into
cmc
std
push
outsl
or
sub
jle
shrb
lret
insb
push
push
mov
sub
into
cmp
pop
jp
dec
xchg
imul
mov
cmp
or
mov
add
imul
jbe
movsb
pop
xchg
jg
push
fcmovne
cmp
and
out
inc
into
je
sarl
es
iret
test
dec
jb
xchg
std
xchg
jb
mov
call
addl
test
mov
in
leave
out
cli
test
push
hlt
mov
mov
xor
mov
jnp
inc
cmp
lods
or
sbb
add
pop
push
mov
sbb
je
loopne
outsb
fcmovnu
push
lods
mov
loopne
push
out
nop
insb
stos
cmc
sti
push
xor
jbe
rcrl
leave
xchg
popf
test
call
fsubrl
pushf
or
mov
aam
imul
jl
out
mov
jnp
mov
adc
mov
lods
shlb
sbb
sub
xchg
gs
data16
clc
mov
roll
cld
mov
movsb
sub
cwtl
mov
pop
ficoms
push
les
adc
movsl
lods
xchg
in
je
and
enter
lret
push
lock
jne
test
lods
popa
bound
stos
fsubrl
inc
jle
cwtl
mov
pusha
ljmp
stos
xchg
mov
mov
aaa
into
cmp
rol
pop
dec
push
imul
inc
adc
into
dec
test
pushf
mov
xchg
shr
cmp
push
or
hlt
lods
jmp
push
movsb
sbb
mov
lock
jle
sbb
gs
fisttpll
dec
inc
mov
push
xchg
popf
lcall
shrb
rcrl
bound
xchg
daa
scas
fists
lock
icebp
std
icebp
mov
pop
test
stos
pop
mov
in
add
xchg
ljmp
mov
xchg
je
and
xchg
hlt
sub
cmc
std
pop
lret
push
sbb
jecxz
xchg
sbb
jl
js
dec
aad
rorl
test
lea
ret
out
fnstcw
outsb
out
ret
rcrl
jo
les
lds
ljmp
push
and
add
adc
adc
je
xchg
fiaddl
rcrb
mov
bound
push
jne
iret
cmpsl
jp
and
sub
fisttps
std
insb
fimull
pop
lahf
xchg
push
pop
cmpsb
cmpsl
push
leave
xchg
add
imul
xor
call
mov
ret
and
pop
rorl
and
mov
int
sub
insl
sbb
outsl
jb
mov
negl
movsl
mov
mov
sbb
push
imul
daa
mov
imul
xchg
repnz
push
leave
flds
mov
jmp
mov
or
fs
cltd
and
add
popl
cltd
ljmp
hlt
xchg
xchg
adc
shl
push
cmp
rol
test
lahf
aas
pop
cmpsb
mov
or
xor
mov
dec
inc
push
mov
or
inc
push
dec
mov
jb
lds
iret
and
imul
xchg
popf
shll
sbb
mov
movsb
sub
int
pushf
jns
pusha
cmpl
frstor
inc
mov
inc
notl
jns
js
pushf
lds
and
push
jle
insl
mov
mov
push
cmpl
or
out
dec
inc
cmc
insb
jecxz
mov
jnp
pusha
fnsave
mov
outsl
out
out
xchg
cmpsb
jg
mov
shl
js
inc
push
mov
jl
imul
pop
hlt
mov
inc
dec
fchs
mov
adc
into
xor
mov
adc
push
and
js
adc
pop
mov
gs
incl
cmp
push
les
imul
pushf
xchg
outsb
and
lret
cmp
sub
cmc
mov
mov
cwtl
fwait
add
mov
cmp
mov
fildll
pop
ret
xchg
cltd
ds
ftst
mov
fbld
scas
movsl
pop
mov
add
lcall
shll
or
jle
les
mov
fbstp
popf
xacquire
testb
jae
orl
test
loope
test
fists
test
fistl
inc
fdivr
xor
xchg
hlt
adcb
shrl
cmp
test
pop
into
iret
shl
xchg
cmp
pop
cmpsl
out
sbb
pop
cwtl
hlt
not
dec
adc
sbb
stos
add
xchg
mov
push
fwait
into
imul
lea
call
test
orb
inc
scas
bound
xchg
shr
dec
cli
out
or
cwtl
imul
ljmp
movsl
shl
mull
cwtl
cli
add
or
xchg
lock
aad
vshufps
pop
push
jo
imul
scas
inc
in
ficoms
movsb
stos
inc
cmpsb
pusha
mov
xor
shll
or
lods
popf
sub
adc
dec
inc
push
or
xchg
and
cmpsl
or
xchg
test
mov
mov
popa
rcr
sbb
mov
cli
mov
push
mov
and
popf
xlat
outsl
jne
pop
movsl
sbb
lcall
call
jbe
ss
xchg
aas
inc
mov
and
cmc
jecxz
mov
add
pop
cmc
les
sbb
jge
mov
sub
test
xlat
xor
mov
movsl
mov
cwtl
xchg
ja
mov
cwtl
adc
jp
clc
dec
loope
jle
mov
push
jmp
dec
js
add
sub
jbe
ljmp
test
inc
xchg
jecxz
mov
inc
xchg
jo
and
push
addl
out
rcrl
shll
mov
dec
mov
mov
je
mov
sahf
push
cmpsl
les
pop
sar
fnstenv
jle
push
inc
test
add
call
add
sbb
es
nop
test
lret
xor
shlb
mov
mov
jo
xchg
mov
hlt
xchg
mov
sub
pop
shlb
outsl
fdivrs
rolb
cmp
add
rorb
daa
js
roll
xchg
pop
in
mov
mov
inc
xchg
or
clc
push
inc
mov
rolb
in
nop
cld
test
setge
repnz
std
rcr
cltd
test
int
test
iret
mov
mov
andl
mov
cwtl
xor
inc
xchg
jp
dec
loope
mov
push
mov
mov
das
xor
xor
add
mov
or
push
cmp
xchg
pop
pop
inc
leave
scas
cld
adc
ss
lcall
mov
adc
xchg
orb
imul
pop
cmp
test
mov
xchg
cmp
stc
shll
icebp
incb
shrb
pop
inc
imul
or
ret
je
pop
cld
and
inc
jnp
xchg
fsubr
inc
jnp
push
and
mov
mov
fcmovne
fs
mov
daa
hlt
int3
xchg
popf
mov
jg
mov
inc
and
fidivl
jle
movsl
mov
rcll
ret
mov
dec
mov
adc
fidivs
in
popf
xorb
mov
cs
or
lock
add
adc
push
and
sar
ss
mov
aas
popf
nop
cld
adc
loop
jge
mov
ljmp
mov
mov
xchg
and
mov
and
test
hlt
shr
cltd
mov
enter
xchg
push
decl
mov
cmc
jle
aam
pushf
and
int3
or
iret
adc
push
sub
movl
or
ret
push
nop
adc
mov
xor
mov
jg
arpl
mov
cmp
test
xor
ficoms
les
or
in
cmp
fstps
mov
cmp
mov
lret
pop
push
add
sbb
js
sub
jge
cmp
shlb
stc
pop
mov
mov
loopne
cmp
fmulp
fisubrl
cmp
sbb
cmp
xchg
add
out
mov
adc
fs
add
add
aaa
in
sti
pop
jmp
push
lds
sarb
cli
int
das
cmc
mov
adc
int3
inc
ljmp
and
xchg
jmp
daa
mov
pop
popa
mov
mov
and
stos
push
js
ret
sub
jae
cltd
xchg
ljmp
aam
mov
faddl
addr16
sbb
movsb
mov
add
mov
ds
mov
aad
mov
dec
mov
pushf
ja
lds
xchg
xor
int3
aas
dec
rcrb
xor
mov
loopne
push
mov
cld
data16
mov
jecxz
adc
adc
mov
pop
mov
xor
pop
push
repz
lret
movsl
cmpsl
inc
jl
data16
cmp
shr
fildll
add
add
sub
outsb
mov
stos
xor
push
mov
fimull
mov
mov
jne
pop
out
call
in
mov
out
mov
call
js
outsb
icebp
aaa
xlat
ljmp
jae
mov
add
mov
sub
movsl
lahf
fisttpl
shrl
sub
dec
sbb
mov
cmc
xchg
scas
lcall
xchg
push
mov
imul
push
in
adc
lahf
pop
mov
lcall
aaa
fldcw
jne
fisttps
popf
nop
stc
inc
lahf
push
inc
aaa
enter
orl
push
push
fwait
jnp
lock
xchg
push
mov
clc
adc
push
xchg
clc
leave
scas
cmp
xchg
into
loope
shr
ret
add
or
test
adc
dec
sub
mov
or
aam
push
mov
xlat
mov
sub
mov
cmc
enter
dec
xchg
cwtl
inc
cmp
fs
pop
jle
pop
cmpsl
cmc
stc
adc
cltd
cmpl
jmp
mov
fcomi
push
cli
pop
pop
fildl
pusha
cmp
or
add
shll
push
nop
mov
cmp
pop
int3
cmc
jmp
jg
insl
es
xchg
imul
pop
or
mov
imul
nop
add
mov
shlb
hlt
iret
push
jecxz
pusha
in
xchg
cwtl
cmc
cwtl
int3
mov
mov
lahf
mov
and
xor
and
out
dec
pop
aad
ss
or
xchg
jle
lds
mov
sub
aas
xchg
adc
or
or
test
gs
mov
not
lods
push
adc
lcall
popa
enter
aam
xchg
mov
mov
jmp
hlt
xchg
lcall
ljmp
pop
jle
dec
dec
sbb
cwtl
fwait
or
xor
inc
stos
cmpsl
xor
lea
sub
pop
lock
inc
cmc
test
loope
stos
dec
add
dec
dec
mov
push
cmp
pop
mov
iret
gs
xchg
sbb
jmp
mov
dec
repnz
fmul
add
sbb
add
add
repnz
aam
nop
stc
dec
add
xchg
jg
xchg
cmp
mov
and
sub
test
das
pop
mov
fsubl
pop
or
and
bound
stos
cmpsl
adc
mov
pusha
pop
mov
test
adc
test
mov
cmpsb
cmp
cld
ljmp
fdivrs
test
cmp
push
aam
xchg
aam
xchg
into
aad
dec
cmpsl
xlat
rcl
lods
xchg
jbe
jmp
andl
pop
div
daa
add
bound
xor
outsb
leave
lret
pushf
xor
fidivs
or
mov
jge
inc
in
iret
cmpsb
cltd
fisttps
pop
rolb
mov
mov
loop
xor
mov
aam
sub
mov
push
testl
mov
cwtl
dec
std
cmp
jno
xor
pushf
mov
aad
cmp
jl
loope
mov
and
hlt
shr
add
mov
mov
lret
pop
cld
fildll
cmp
ret
mov
test
rcl
test
out
jnp
cmp
rcr
or
mov
dec
mov
test
adc
enter
add
add
dec
cmp
xchg
push
lds
sub
inc
leave
arpl
arpl
mov
in
aaa
outsb
lcall
cmpsb
xchg
jle
cltd
call
nop
push
mov
pop
enter
or
inc
scas
jp
aas
inc
test
jmp
jge
iret
mov
testl
ja
roll
dec
dec
je
push
int3
adc
cltd
inc
or
lahf
xchg
int
sub
push
scas
mov
pop
xor
mov
mov
push
push
mov
xchg
xor
popf
rcrl
mov
insl
fmul
pusha
lods
lods
lea
scas
lods
fistpl
xchg
jmp
lea
shl
test
xor
fadd
fsubl
ret
stos
clc
jl
and
imul
xchg
call
data16
add
jle
int3
bound
xchg
add
jne
and
dec
ret
ja
inc
or
clc
jle
mov
pop
stc
loopne
idivl
and
dec
jb
mull
adc
sbb
mov
pavgb
stc
pushf
cmp
jecxz
repnz
in
pop
inc
les
leave
dec
ret
add
shl
jmp
push
push
rorl
aad
mov
mov
call
adc
test
dec
dec
shll
sti
and
cmpb
cmp
fs
or
mov
push
or
jecxz
stos
mov
shll
dec
lock
xchg
xchg
push
push
movsl
mov
sub
or
rorl
xchg
add
push
xchg
iret
mov
imul
movsb
js
nop
in
sbb
dec
cmpsb
sbb
je
scas
daa
lret
cmp
sub
aas
cmc
das
clc
mov
repz
sub
or
cmc
mov
add
imul
mov
mov
lret
test
cmp
std
es
xchg
mov
fsubs
loope
enter
cmp
cmpsl
hlt
jae
mov
popa
fildl
pushf
movsb
cmp
sbb
lret
fmull
inc
daa
pop
outsl
lret
inc
testb
pop
roll
in
insb
mov
stc
mov
cli
xchg
mov
push
adc
fisubs
call
data16
cmc
mov
mov
push
mov
clc
sub
fdivrs
cmp
call
mov
inc
xchg
fisubrs
add
add
ffree
pushf
fbstp
cmpsb
mov
movsl
jp
mov
inc
fbstp
lds
xchg
mov
stos
and
sbb
sahf
fcmovbe
js
and
int
sbb
lret
mov
test
mov
jmp
jns
inc
mov
dec
fsubl
jge
scas
iret
loopne
xor
mov
dec
movsb
ret
push
mov
mov
xchg
jmp
inc
lods
fidivrs
mov
sarl
lock
imul
xor
push
mov
out
js
sahf
dec
enter
aam
in
daa
mov
inc
mov
jmp
jle
fsubs
push
jns
in
neg
mov
incl
and
cmp
dec
bound
pusha
flds
add
and
mov
jmp
pusha
mov
jmp
and
mov
jmp
sti
inc
xchg
ds
mov
fsts
fildll
in
into
mov
mov
add
xchg
pushf
repz
mov
or
pop
lret
jecxz
mov
test
pop
pop
stc
in
inc
cwtl
cmp
enter
cmpl
mov
cwtl
jge
pushf
mov
loope
test
mov
test
cwtl
push
adc
dec
pop
jg
test
in
jp
mov
xchg
or
leave
push
lahf
es
fs
cmp
lret
xchg
hlt
xchg
push
xchg
ffreep
xchg
xchg
adcl
xchg
rorl
mov
fadds
out
rclb
sub
hlt
clc
sub
shufps
enter
sub
xchg
dec
std
test
cmc
call
lcall
add
dec
add
movsl
mov
adc
jae
insl
xchg
or
xlat
sbb
call
and
ljmp
fldenv
int
call
inc
das
push
jbe
push
fildl
inc
push
test
and
addb
fisttpl
inc
sub
jbe
hlt
sbbl
push
sbb
cmp
test
inc
outsb
and
fisubrs
push
mov
sahf
push
popa
mov
xchg
mov
cwtl
lods
cmp
pop
loopne
sbb
push
stc
sub
jno
ret
xchg
cmpsl
test
mov
aas
in
lds
andb
fsts
add
ljmp
cli
mov
adcl
mov
mov
dec
adc
jl
insl
popf
imul
mov
fwait
hlt
push
mov
cmp
mov
mov
mov
rcr
push
push
insl
cli
fidivrl
mov
lret
lcall
add
lret
mov
xor
aam
test
push
aam
aaa
fs
jno
ret
xchg
out
cmp
xchg
and
sti
mov
fwait
cmp
adc
xchg
cmp
enter
hlt
dec
lods
adc
mov
sub
mov
mov
cmc
fisubrs
iret
ljmp
dec
fisttpll
dec
test
mov
add
cli
sub
jle
inc
cmc
cmpsb
std
imul
stos
xor
les
mov
pop
addr16
movsb
enter
fsubrs
adc
test
dec
mov
mov
mov
in
in
test
mov
mov
fdivr
movsb
stc
mov
test
pop
sbb
ret
aas
loop
xlat
jbe
enter
pushf
notl
mov
mov
push
sbb
mov
mov
aam
test
inc
jnp
pop
lret
mov
icebp
sahf
pushf
xchg
dec
mov
push
stos
inc
mov
cmp
std
mov
mov
dec
popa
adc
scas
sbb
add
push
jle
inc
cmp
add
and
dec
mov
fidivl
pop
pop
lret
and
cmp
fcos
test
cmpsl
xor
cmp
dec
jns
dec
lret
xor
cmc
xchg
std
pop
and
mov
adc
cmpsb
sub
clc
pop
dec
jle
xchg
js
jmp
lcall
mov
push
mov
fistpll
inc
inc
add
lret
adc
pop
sar
popf
inc
les
lea
mov
add
cmc
sarb
icebp
aam
xlat
add
mov
cmp
xchg
lea
mov
addl
xor
test
push
mov
int
mov
and
out
pop
popa
cmpsl
out
inc
mov
push
xor
orb
mov
movsl
push
mov
pushf
mov
sbb
pop
push
dec
push
dec
jle
int
jl
mov
mov
sbb
cwtl
scas
lods
lret
repnz
jl
push
mov
dec
push
inc
mov
and
fildl
inc
xor
sbb
je
movsl
add
mov
call
push
jmp
fdivs
ljmp
dec
mov
rcr
inc
pop
loopne
negb
pusha
fbld
add
insl
pop
push
imul
adcl
mov
sarb
add
dec
mov
inc
stos
inc
xchg
pop
xchg
jo
pushf
aam
mov
das
mov
push
in
roll
lcall
jmp
andb
ficompl
push
stos
movsl
or
rclb
pop
xor
imul
andl
mov
imul
cmp
dec
sahf
push
cmp
insl
sub
rcrb
fidivrl
repz
or
mov
call
mov
cmpsl
jae
cmpsb
mov
leave
leave
imul
xor
xor
mov
add
inc
mov
fnop
jp
ss
jns
movsl
roll
jno
xchg
inc
rcl
mov
iret
xchg
cli
rcrb
xchg
adc
jo
mov
dec
add
js
cmp
mov
das
sbbl
scas
mov
sub
faddl
mov
pushf
add
add
in
insb
lcall
and
stos
jns
cmc
dec
mov
pop
dec
fwait
imul
inc
push
sbb
bound
test
cmc
jbe
mov
xor
ret
fadds
aam
cs
add
mov
rol
dec
xlat
pop
sbb
rcll
inc
mov
push
fildll
icebp
in
lret
add
fldl
mov
neg
adc
pushaw
test
aaa
push
sub
and
sahf
mov
rolb
in
testb
lret
cmp
cmpsb
xor
sbb
xor
xchg
daa
js
sarl
push
xchg
fsincos
and
or
int
mov
test
test
enter
push
inc
sbb
cmpsl
adc
sbb
imul
scas
adc
repz
inc
jl
jge
ja
push
mov
outsl
mov
cmp
ret
xor
mov
xchg
sbb
sbb
add
cmpl
xchg
add
sbbl
mov
and
dec
mov
mov
add
or
adc
subb
outsl
add
mov
dec
mov
addb
cld
mov
cmp
mov
jp
notb
sub
sarl
mov
in
mov
push
notb
pop
sbb
test
push
add
das
dec
pop
repnz
into
aad
stos
inc
rclb
lods
aam
or
push
fdivrp
jmp
cmp
hlt
out
popf
sub
and
pop
pop
lds
aam
jbe
movsl
aas
cmp
subl
sbb
lea
int
rcll
pop
mov
std
pop
dec
sahf
cwtl
adc
imul
test
or
scas
jl
int
enter
jno
outsl
pop
int3
in
xchg
je
out
jne
insb
sti
fnsave
dec
scas
popa
jmp
shrl
pop
shll
iret
lret
test
xchg
add
xchg
fcmovne
test
movsb
out
mov
lds
add
les
push
add
call
aad
adc
adc
cmp
inc
popf
adc
add
ljmp
data16
jecxz
xor
imul
mov
cmpl
inc
cmp
icebp
sahf
repnz
imul
mov
or
or
xchg
movsb
je
mov
rcll
in
sub
sub
dec
lret
loop
xlat
or
inc
sbb
jmp
and
bound
mov
pop
sbb
sbb
xchg
adc
add
add
cmp
or
sarl
test
dec
scas
xor
push
push
adcl
or
mov
outsl
fisttpl
sub
out
call
mov
and
push
pop
test
jno
pop
xorl
fisttpll
lock
in
lods
into
inc
mov
push
dec
fadd
sub
aas
out
in
testb
jg
xchg
sub
adc
push
imull
mov
jb
add
sbb
push
push
insl
pop
les
or
roll
int3
inc
dec
inc
hlt
mov
fisubrs
xor
repnz
pushf
adc
aam
mov
add
ret
test
mov
aaa
xchg
xchg
enter
pop
or
push
sahf
mov
lret
insl
or
loope
dec
pop
jb
sarb
imul
push
dec
mov
mov
loopne
scas
fdivrl
test
frstor
dec
rcl
cmpsl
fiadds
cltd
pop
int3
mov
xor
into
lea
rclb
pop
dec
push
les
js
fistpll
or
int3
icebp
enter
add
xchg
dec
hlt
mov
cltd
rclb
fdivs
mov
mov
int3
cmc
adc
jo
adc
pop
pusha
jmp
sub
imul
mov
add
and
enter
ret
adc
popf
mov
cli
sub
adc
lret
add
mov
push
or
mov
mov
test
es
jne
xchg
mov
ljmp
idivl
and
sahf
xchg
push
add
dec
roll
xchg
lods
outsl
xchg
cmc
das
or
mov
fisttps
xchg
das
test
pusha
aad
dec
pop
xchg
mov
pop
leave
repz
cmp
mov
cmp
and
cmp
jmp
xchg
cmovno
lcall
add
popf
adc
adc
mov
stc
add
rcrb
fildl
sarb
jg
add
mov
mov
push
scas
les
mov
mov
test
mov
les
jo
inc
add
pop
inc
add
cmp
sbb
test
sbb
jbe
mov
jo
inc
xchg
inc
xchg
inc
stos
push
icebp
sar
call
ja
lods
ja
mov
ljmp
jbe
adc
sbb
ret
adc
pop
repnz
hlt
movsb
in
lock
insl
and
cmp
scas
jbe
add
mov
popa
addr16
xor
cwtl
fbstp
fs
clc
jbe
cmpb
adc
xchg
repnz
inc
aaa
jno
fistps
jbe
test
ret
pop
xchg
mov
data16
adc
shll
push
subb
add
mov
adc
or
inc
insb
add
dec
push
or
nop
mov
shrb
test
adc
stc
mov
sbb
into
jo
ret
aam
mov
jb
mov
cwtl
cld
add
cmpsb
je
cmp
faddp
mov
jecxz
mov
mov
mov
nop
sbb
shl
sbb
and
add
paddusw
fistl
test
ret
mov
cmp
mov
movsl
test
ret
add
mov
cmp
xor
mov
and
js
push
std
loope
decb
adc
shrb
mov
sar
xchg
push
xchg
mulb
mov
xchg
test
fsubrl
mov
xorb
mov
subl
outsb
mov
xchg
clc
sub
add
decb
imul
cwtl
jl
ret
popa
mov
imul
dec
xchg
xchg
mov
cmp
push
imul
lcall
jae
push
repnz
mov
loope
fistl
or
jns
sub
outsl
or
imul
pusha
cmp
xor
pop
sub
push
int3
lahf
xlat
jmp
push
lock
push
stos
movsb
adc
enter
mov
in
or
or
repz
nop
adc
cmp
pop
enter
or
loopne
xchg
and
jno
mov
add
dec
or
mov
ja
add
mov
std
cmpsb
fisubs
mov
mov
inc
push
ficoml
shlb
mov
lods
xchg
nop
jecxz
out
mov
push
mov
ljmp
sbb
ret
in
mov
mov
jne
add
mull
clc
imul
enter
in
nop
mov
jbe
les
inc
jmp
rorl
es
pop
xor
sbb
mov
stc
sub
loop
dec
outsb
cltd
popa
stos
jl
push
js
sbb
sbb
mov
mov
cmp
lods
push
xchg
movsw
into
mov
ret
sbb
sub
and
jp
push
adc
mov
jb
pop
xchg
inc
les
inc
imul
sbb
dec
add
lret
inc
lock
pop
scas
sub
jno
cwtl
enter
je
sub
dec
jo
fcompl
xor
mov
lds
xchg
xchg
int
div
xchg
testl
add
loopne
lds
mov
insb
cmpsl
adc
iret
lock
les
movsl
add
mov
stos
subb
mov
lcall
enter
sub
mov
sbb
cmp
std
push
scas
dec
inc
jbe
rcrb
lea
mov
cli
sub
int
sub
hlt
imul
mov
aam
mov
jmp
enter
orl
dec
push
sbb
inc
in
or
stos
and
insl
test
push
pop
clc
sub
clc
hlt
mov
jae
imul
lods
cli
and
fsubp
mov
xchg
mov
stos
mov
jg
mov
xchg
mov
test
outsl
sub
adc
xor
shld
fbstp
xchg
inc
inc
pop
mov
lea
addl
and
mov
std
add
xor
fstpl
call
push
pop
mov
ficomps
mov
orl
movsb
dec
mov
js
inc
repnz
inc
leave
ja
repz
dec
lods
sub
hlt
mov
and
test
sub
pop
rcr
sub
aad
add
mov
mov
or
repz
sub
dec
push
push
sarb
sahf
push
mov
add
mov
xchg
push
mov
stos
jp
stos
lods
inc
or
add
mov
addb
shlb
aas
mov
adc
lret
lock
cmp
push
ret
xlat
mov
xor
cwtl
and
push
test
lcall
popl
test
cs
movsl
ja
repz
adc
mov
mov
faddl
aaa
xor
nop
scas
dec
mov
lock
ljmp
pusha
adc
iret
mov
scas
mov
rcrb
call
or
cbtw
fsubp
xchg
push
jmp
loope
lret
stos
push
push
push
mov
leave
stos
stc
dec
mov
mov
test
dec
shr
jle
scas
push
push
push
inc
in
cmc
xchg
movsl
fs
clc
dec
xor
roll
aaa
or
or
fimuls
ja
xchg
ja
cmp
rcll
test
or
cmove
ds
mov
or
pop
insb
dec
cmpsl
hlt
mov
outsl
lock
xlat
inc
add
mov
add
popa
leave
stos
ja
cmpsb
loop
xor
ja
jae
push
popf
dec
add
sub
xchg
adc
fs
aam
xor
fsubrp
arpl
lahf
jge
and
hlt
jge
sarl
or
inc
mov
es
xor
dec
jae
std
test
movsl
or
xchg
xlat
arpl
xchg
cmc
jbe
cmp
pop
fbld
xchg
lcall
sbb
sbb
mov
lock
cmp
rcrb
xor
mov
test
xchg
mov
aaa
rcrl
mov
and
pop
fimuls
insb
push
push
test
sbb
cmpsl
mov
pop
rol
jl
cld
inc
shll
mov
cmp
clc
popf
push
add
loope
jmp
fisttpll
int3
ror
sahf
pop
popl
ror
sbb
dec
push
mov
mov
push
stos
stc
xchg
jnp
icebp
xchg
mov
stos
pop
stc
mov
cltd
pop
dec
jmp
clc
mov
test
cmp
rcll
push
das
pop
sub
ss
add
xor
jg
data16
insl
jl
push
and
push
cmc
sbb
inc
aad
sbb
decb
xchg
les
sbb
test
xchg
and
aas
ja
outsb
mov
movsb
lret
xchg
jnp
xrelease
loopne
xchg
mov
es
adc
imul
xchg
cmp
rcr
aad
add
daa
in
fistps
mov
out
ljmp
sbb
dec
nop
hlt
xor
imulb
in
cmp
xchg
movsl
rorb
adcl
rcrb
mov
sub
shl
add
xchg
addl
mov
xchg
add
pop
lock
sub
dec
mov
shl
push
daa
mov
test
jne
leave
cli
jns
notl
xchg
push
movsl
lea
aas
negl
or
pusha
mov
add
inc
pop
sub
mov
cmp
and
loop
mov
data16
push
xor
loopne
mov
je
fwait
push
icebp
call
fidivrs
pusha
add
push
adc
or
pop
jge
add
xor
sub
test
cmc
xchg
lods
jbe
or
pmulhuw
mov
add
cmpsl
lret
dec
push
sbb
xor
add
je
xchg
jne
fwait
xchg
mov
cmp
jp
cli
insl
fists
push
inc
sahf
ds
or
in
call
std
in
and
push
out
pop
jne
or
test
outsl
incb
xchg
jl
aad
mov
jbe
inc
jl
hlt
cwtl
jl
call
push
mov
scas
mov
test
mov
mov
sbb
and
notl
sbb
aaa
rcl
pop
call
jbe
jo
inc
pop
sub
mov
ja
andb
clc
jne
mov
rclb
clc
imul
add
movsl
ja
or
shll
jle
je
test
pop
movsb
cmc
mov
dec
fisttpl
movsl
push
cmp
bound
outsb
jne
imul
jb
pop
ficoms
test
cmp
mov
mov
sti
cmp
or
cmp
or
sub
outsl
mov
nop
mov
dec
add
push
xchg
or
or
sub
adc
call
jmp
cmc
xchg
in
add
mov
int3
add
fisubrs
hlt
mov
sbb
push
sub
push
pushf
jl
push
insb
ja
mov
shll
lahf
scas
mov
rcrl
mov
icebp
das
jle
jno
lods
fildl
imul
stos
dec
in
push
xchg
jnp
add
push
outsb
mov
cli
dec
xor
lods
push
push
xor
jg
mov
push
lea
push
and
mov
add
mov
push
jmp
enter
add
pushf
xchg
test
test
add
lret
cmpsb
repz
aaa
dec
jge
sub
test
cs
rcrb
bound
pushw
mov
mov
or
in
jnp
insb
or
cmp
jo
je
xchg
xor
fldl
lds
mov
fldl
roll
dec
inc
gs
cmpsl
jmp
jne
or
lds
push
in
mov
push
mov
xor
jnp
inc
cmp
imul
inc
pop
cltd
stos
mov
push
enter
data16
inc
fstps
cld
mov
mov
and
sbb
test
cmc
xchg
and
hlt
lret
and
or
imul
int
cmpsl
rcrb
data16
sar
xor
lea
call
push
loop
xchg
adc
test
lcall
test
sahf
hlt
and
mov
cmpl
mov
scas
sbbb
push
mov
lds
test
dec
dec
fwait
push
data16
sbbl
ss
outsl
jge
push
add
addr16
add
and
or
in
js
inc
xchg
out
or
lcall
mov
cld
add
mov
cmc
mov
dec
cmp
mov
and
mov
mov
mov
mov
add
sub
push
inc
mov
dec
xor
cmp
xor
mov
or
and
inc
or
mov
xchg
iret
and
nop
lret
push
and
ljmp
leave
in
mov
xor
cmpsb
xor
out
adc
adc
sub
push
or
mov
lock
jns
or
xor
decl
cwtl
push
call
push
xor
fs
xchg
mov
dec
mov
jmp
mov
xlat
mov
shll
enter
xchg
xchg
jne
mov
mov
test
inc
std
rcrl
mov
jecxz
into
nop
and
cwtl
daa
or
ret
cmp
js
mov
ljmp
cmp
aaa
sub
movsb
notb
add
out
add
lds
fimull
mov
mov
add
clc
inc
movsb
xchg
xchg
aam
xor
js
icebp
mov
notl
adc
jl
xchg
insb
insb
inc
push
mov
decl
pusha
pop
pop
push
mov
test
test
xchg
iret
push
notb
dec
cmp
xchg
test
rolb
bound
and
mov
outsl
xchg
cmp
fmuls
outsb
js
xor
pop
cmp
sbb
fs
ret
cmp
ljmp
in
outsl
xlat
idivl
cmp
pop
push
rorb
cwtl
sub
or
lret
divl
lods
insb
das
xchg
les
in
loopne
add
repz
test
mov
test
cmp
sbb
pop
xchg
int3
nop
xlat
call
cmp
movsl
jg
outsb
sub
shl
mov
lods
lock
xchg
push
push
push
cltd
rol
xchg
js
test
push
push
sub
insb
and
add
rol
cwtl
test
subb
or
mov
test
xchg
jmp
in
mov
aaa
test
mov
or
inc
and
adc
les
shlb
pop
xor
js
xor
lods
jle
rcll
mov
cli
adc
arpl
je
xchg
neg
mov
cli
je
cmp
imul
dec
cmc
sar
dec
mov
shll
icebp
lods
push
xchg
dec
cmpsl
loop
mov
xchg
mov
movzbl
mov
cwtl
cmp
sbb
std
jl
xchg
je
push
jo
enter
loope
call
rcll
cmc
in
stc
cmc
and
mov
push
sub
inc
aam
inc
imul
fadd
je
and
pop
add
std
test
jg
mov
imul
and
lret
xchg
repz
shlb
sbb
or
arpl
xchg
call
stos
or
test
mov
rcrl
and
or
outsb
and
inc
test
int3
cmc
mov
jmp
scas
mov
xchg
mov
xchg
ret
in
pop
mov
shrb
jae
int3
rcr
cltd
sbbb
fists
xchg
and
sub
aaa
movsl
aas
js
lea
cs
push
btr
xor
jl
jnp
push
or
cld
mov
rorl
aad
mov
mov
jge
mov
xchg
mov
out
push
sub
popf
mov
xchg
pop
lcall
mov
dec
dec
ficomps
js
leave
sub
loop
xchg
aam
push
fildll
lds
sub
adc
jge
sbb
mov
out
mov
pop
dec
mov
lcall
mov
icebp
aad
call
mov
lret
sbb
add
inc
cwtl
pop
les
mov
dec
pop
cmp
aad
xor
push
in
aad
orb
adc
jns
inc
sti
jnp
inc
mov
hlt
mov
mov
dec
add
jne
sub
shrb
mov
in
mov
add
in
jb
mov
push
add
jnp
lea
dec
jbe
ret
nop
or
xor
mov
or
ljmp
cmp
and
inc
mov
adc
or
popf
push
aad
iret
push
scas
and
lahf
shl
sar
mov
sbb
movsb
jge
out
mov
hlt
or
mov
out
cmpsl
test
sub
dec
adc
add
arpl
aad
fstp
mov
fwait
daa
adc
aam
pop
jns
popa
sarl
ljmp
pop
add
mov
ficoms
in
imul
stos
xchg
cmp
fcomp
or
sbb
imul
ljmp
cmp
add
loopne
mov
and
jmp
lret
or
scas
adc
jno
fisubs
xchg
and
xchg
mov
add
repnz
stos
mov
or
push
and
xlat
lret
xor
mov
cmovno
div
mov
or
mov
mov
xchg
fxch
inc
outsl
in
inc
mov
iret
ja
push
lods
decb
jmp
ljmp
mov
mov
mov
imul
inc
sahf
jo
iret
rorb
and
ds
ljmp
sbb
xchg
adc
loop
cmc
cwtl
cmp
mov
int
xchg
je
add
xchg
in
dec
adc
lret
lret
push
cmc
test
mul
push
xor
cmp
add
push
jmp
insb
stc
adc
mov
or
adc
aas
adc
test
sarb
scas
loope
test
or
fsubrp
pop
data16
test
mov
popf
sub
fistpll
fldt
out
adc
and
ss
mov
sti
xchg
mov
xor
mov
out
mov
fisubs
xor
movsl
push
dec
mov
daa
scas
std
adc
shlb
jg
cmp
mov
cmc
cmp
fs
pop
fmull
stos
jnp
pop
or
fldcw
xchg
imul
dec
lcall
scas
icebp
leave
mov
scas
adc
pop
sub
out
mov
add
mov
mov
xor
push
int
mov
pusha
in
mov
xchg
js
clc
and
outsl
out
ret
push
or
mov
mov
add
test
xor
mov
xchg
push
in
jnp
add
push
cmp
push
iret
dec
or
shr
push
pushf
mov
lret
test
mov
ret
nop
jo
or
adc
dec
adc
call
cmp
sub
lods
sub
rcll
mov
inc
sti
xor
cwtl
lods
mov
mov
xor
inc
aam
es
enter
xor
xchg
insl
iret
into
cmp
adc
xchg
xchg
cmp
sub
shl
cwtl
push
xor
lret
cmp
pop
fstpl
outsl
jne
orps
mov
rorl
jbe
test
fistpll
adc
push
ret
rorb
inc
push
enter
cmpl
loopne
add
in
dec
adcb
ljmp
adc
bound
mov
mov
icebp
push
sbb
sub
iret
add
out
push
sti
or
stos
push
mov
ja
or
xchg
test
sub
mov
ror
test
imul
repz
arpl
nop
js
test
sub
mov
ljmp
lret
and
inc
push
xchg
faddl
lock
test
dec
sbb
push
or
mov
adcl
pop
fdivrl
int3
jne
mov
lret
outsl
sarl
rorl
pop
xchg
test
fsubs
mov
or
inc
mov
jle
movsl
inc
mov
mov
jmp
mov
mov
inc
pusha
xor
push
add
xchg
sarb
mov
pop
xor
cli
mov
mov
cmpl
lods
mov
cmp
movsl
jbe
mov
add
insl
fisubs
adc
stos
xchg
loop
movsl
mov
mov
adcb
or
or
in
xchg
lahf
xchg
or
test
int3
nop
xor
adc
add
enter
pushf
lods
mov
cwtl
rorb
adc
into
outsl
add
push
mov
mov
push
enter
add
data16
xchg
dec
scas
in
sub
xchg
movsb
sbb
mov
push
lock
or
xchg
movsb
mov
xchg
xchg
inc
and
lret
dec
out
enter
mov
xchg
push
stc
leave
into
xor
inc
nop
orl
ret
test
in
cmpsb
cmpsl
call
pushf
mov
jb
mov
push
loopne
push
mov
call
imul
int3
mov
shll
ret
lea
mov
and
pop
out
cmpsl
or
add
ret
insb
jl
mov
cmp
call
movsl
lea
xchg
pop
push
cmp
lret
sub
and
movsl
mov
mov
mov
pop
test
mov
add
mov
fnstcw
pop
inc
repnz
or
jle
call
add
jge
stos
fnstsw
push
mov
out
in
jecxz
sbb
das
mov
imul
pushf
loop
fstpt
and
inc
mov
loop
fstl
test
xchg
mov
lret
pop
fsts
rcrl
ret
inc
mov
mov
xor
ret
repz
mov
jae
fbstp
test
sbb
xlat
fldt
cmpsl
dec
decl
fdivrs
repz
mov
push
xchg
fisubrl
inc
push
xchg
mov
orl
xor
mov
pushf
aad
pop
adc
xchg
xchg
mov
push
decl
clc
aaa
or
test
addr16
inc
inc
and
insl
sbb
adc
inc
or
push
dec
fmull
ret
jg
dec
lcall
in
cmp
xchg
xchg
sub
or
out
xchg
mov
std
lea
add
add
mov
test
inc
ret
and
jecxz
into
cld
jae
mov
mov
inc
mov
pop
mov
push
call
sbb
imul
dec
xchg
lahf
mov
icebp
mov
out
fwait
jg
clc
mov
repnz
out
xor
pusha
jg
pop
sub
sub
mov
inc
popa
frstor
or
adc
or
push
sbb
mov
or
lds
jbe
push
shlb
fcoms
adc
fstp
inc
inc
mov
mov
xchg
stos
inc
iret
fstl
jb
mov
jg
adc
mov
xor
lea
sbb
pop
jle
dec
rcr
into
dec
test
js
movsl
xor
xor
or
test
xor
sub
or
push
inc
xchg
push
arpl
scas
mov
add
cmp
add
into
push
in
cmp
daa
imul
adc
push
pop
into
cmp
cltd
sbb
cmpsb
ss
imul
push
not
dec
sarl
xor
or
aam
nop
add
xchg
or
int3
movsb
jle
pop
ficompl
add
fisubl
sub
or
cmp
in
aad
mov
cmpsl
adc
std
adc
frstor
lret
or
or
xor
rcr
mov
sbb
dec
out
test
cmc
jae
filds
loopne
shl
mov
leave
adc
gs
cmp
insb
pop
aad
push
ret
aad
jp
fcmove
nop
mov
aam
sub
hlt
cmp
xor
pop
les
inc
or
mov
xor
xchg
cld
mov
clc
jmp
dec
scas
test
out
dec
cmpsl
into
mov
mov
cs
cmp
lea
push
lods
arpl
rcr
ljmp
scas
mov
inc
dec
mov
imul
leave
cli
scas
sub
and
lods
push
test
cmp
xchg
xor
mov
pop
movsb
test
push
lcall
movsl
out
insb
xchg
and
add
adc
jge
xchg
mov
outsl
dec
xchg
cli
xchg
jecxz
ret
dec
iret
fs
lret
jge
cmc
jbe
mov
xor
cltd
pop
lret
xor
cmp
nop
and
outsb
push
cmp
sub
jno
or
call
pop
sti
adc
mov
cltd
iret
scas
lods
in
mov
test
leave
lret
xchg
mov
scas
push
push
es
mov
mov
flds
xlat
inc
dec
jle
ljmp
pop
adc
pop
lea
push
mov
testb
dec
inc
lods
adc
aad
and
xchg
cmp
jb
or
iret
test
mov
add
jnp
mov
xchg
fdivl
add
movsl
push
cltd
ds
loopne
mov
lock
bound
mov
loopne
les
xchg
or
test
arpl
xchg
stc
mov
mov
les
cmpsb
clc
xor
jno
js
or
push
or
imul
das
les
test
arpl
jb
mov
ljmp
not
adc
or
add
dec
mov
inc
xor
mov
and
and
jne
mov
mov
adc
cmp
add
inc
push
cmp
mov
fdivs
inc
lock
rcll
movsb
pop
inc
jno
or
mov
xchg
fwait
cmp
xor
ret
jp
mov
cmp
test
lret
add
daa
mov
mov
xor
in
cmpsb
jne
or
sbb
fs
js
enter
or
mov
and
ret
fs
std
adc
push
jg
cmp
nop
and
out
xor
pop
add
mov
push
mov
add
sub
fistps
adc
enter
clc
xlat
test
fadds
nop
pop
mov
pop
notb
jp
add
pshufw
push
mov
or
in
rorb
adc
scas
inc
xchg
loopne
fisubrs
outsb
stc
add
and
mov
push
fidivl
in
cmp
mov
pop
pop
cs
inc
push
sub
mov
loope
into
push
hlt
in
xchg
jl
push
cmp
push
jp
inc
mov
stos
clc
das
mov
mov
ret
clc
mov
cli
test
lods
fcmovu
lods
push
push
int3
lock
fldl
fstpt
popa
dec
int3
mov
fwait
push
mov
inc
lods
cltd
mov
pop
lock
sub
add
jbe
lret
out
sbb
js
sub
cmpsl
cmp
adc
adc
mov
add
push
mov
bound
mov
sub
fisttpl
cmp
inc
jle
pop
fidivl
jecxz
dec
stos
jnp
jb
pop
ret
cwtl
fdivrs
sbb
cmp
xchg
add
mov
inc
mov
in
mov
mov
hlt
add
js
das
inc
sub
pushf
xchg
dec
pop
or
dec
lahf
dec
out
ss
push
pusha
xor
push
or
sbbl
jg
shrb
cmpsl
fs
fcomps
lret
add
xor
cmpsl
and
aas
adc
imul
mov
add
xchg
pop
cltd
jp
inc
or
pop
and
add
jl
imul
cmc
mov
inc
adc
aad
or
lock
popf
cmp
or
dec
xchg
add
fsubs
cmpsl
aam
or
adc
or
or
cmc
lock
test
sbb
fmul
jmp
cld
cltd
shrb
adc
mov
mov
and
and
lahf
and
testl
and
cmc
push
mov
cmc
in
dec
int
mov
adc
movsb
mov
sbb
sbb
mov
cmpsl
imul
rorl
mov
bound
pop
fnstcw
pop
mov
test
enter
sar
aas
or
or
loop
sbb
adc
ljmp
push
arpl
mul
xchg
lea
push
push
fmuls
roll
pop
cli
jae
lods
int3
sbbl
sbb
in
sbb
xchg
cltd
hlt
and
jno
jmp
pop
push
mov
sub
fdivrs
mov
adc
lcall
stos
cmp
xchg
fimull
shll
sbb
rcll
ljmp
dec
mov
pop
lods
js
cmpsl
add
dec
mov
mov
xchg
adc
test
push
and
cmc
mov
jl
pop
xchg
adc
cltd
mov
imul
xabort
adc
or
or
mov
lret
adc
cmp
pop
lock
pop
loope
or
into
add
or
arpl
fcmovnbe
clc
push
or
mov
sarl
imul
mov
fdivrl
cli
scas
clc
test
fwait
mov
mov
imul
xchg
mov
jle
or
int3
mov
push
add
les
cmc
mov
pop
arpl
mov
pushl
or
sub
pop
dec
scas
rclb
scas
popa
mov
movsl
in
and
inc
hlt
les
lcall
shrl
mov
faddl
cmp
mov
add
out
shll
aas
insb
adc
push
aam
pop
test
sbb
out
jl
sarl
push
xchg
or
test
mov
push
xor
pop
test
xchg
inc
call
xchg
aad
icebp
fstpl
adc
les
shrb
cld
pop
jb
scas
dec
sti
das
mov
mov
idivb
es
adc
loop
pop
insb
push
insl
ret
shll
leave
and
and
mov
repz
loopne
jne
jle
sbb
jp
cmp
les
push
mov
nop
and
mov
push
mov
jb
push
xchg
call
stos
jbe
push
or
mov
jbe
jbe
adcb
mov
dec
xchg
ljmp
cmpsl
push
cmpsb
adc
int3
push
push
loope
mov
mov
or
xchg
bound
into
aam
jo
int3
lahf
hlt
loop
fcomps
subb
fsubl
ficoms
int3
jl
lea
in
scas
call
aaa
mov
into
mov
mov
adcb
mov
sarb
push
pusha
push
data16
fisttps
dec
ljmp
loope
cmp
xchg
iret
je
dec
js
stc
cmp
mov
pop
dec
fsubl
and
add
mov
shl
jp
scas
ds
test
and
hlt
xchg
ljmp
std
je
scas
jne
js
repnz
or
xchg
fiaddl
jg
cld
jecxz
push
mov
mov
jle
lds
or
jo
lods
xor
pop
fimull
in
int3
fstpt
mov
adc
je
daa
fxch
and
mov
out
fists
inc
call
fwait
lods
lcall
or
cs
push
cli
xor
int3
cmp
or
adc
scas
mov
insb
pop
xchg
inc
test
mov
dec
dec
mov
enter
lcall
inc
aam
push
or
push
js
inc
clc
add
cmp
aad
jge
ret
dec
cwtl
xor
test
xchg
push
lea
imul
movsl
into
sub
add
push
pop
cmp
scas
push
fsubrs
push
mov
dec
add
iret
jne
push
mov
push
data16
lahf
jmp
js
sbb
mov
pop
in
or
mov
push
ss
inc
mov
ds
xor
add
mov
jo
jb
xor
mov
cmpsl
clc
repz
inc
or
vpsubw
lods
mov
mov
lock
mov
call
pop
insb
pop
mov
lods
push
xor
sbb
xorb
jg
call
pop
clc
or
dec
mov
aam
in
test
push
mov
sub
mov
mov
cwtl
push
rolb
cwtl
mov
ret
and
sbb
imul
cmpsb
fcmovnb
mov
mov
nop
push
inc
fdivrp
sub
mov
mov
jp
push
mov
or
les
add
xor
or
push
dec
stos
or
add
push
mov
call
pusha
add
mov
push
sub
add
mov
fiadds
add
mov
add
mov
sahf
clc
and
idivb
pusha
mov
sub
fsubrs
loop
inc
shlb
add
sub
loopne
nop
rolb
or
or
xor
mov
test
cwtl
outsl
mov
and
adc
arpl
mov
into
sahf
sub
repnz
cmp
cmpsl
mov
rcrb
dec
push
lret
xchg
mov
mov
xor
stos
jns
lcall
adc
pushf
add
insb
imul
sbb
cmp
dec
test
or
or
dec
in
mov
xchg
loopne
mov
hlt
nop
inc
dec
les
add
cmp
sbbl
sub
call
pusha
xchg
and
test
lods
mov
dec
and
xor
push
jae
add
add
mov
jle
push
add
sub
push
jo
xor
sub
loopne
and
mov
cmp
cs
in
repz
xchg
test
les
and
add
rorb
cmpsl
jb
jns
in
mov
lock
aaa
pop
add
mov
jle
mov
xchg
inc
daa
mov
xchg
rep
and
mov
mov
aam
sub
test
inc
xor
sbb
lock
mov
mov
aam
fdivl
add
call
push
stos
loopne
pop
ret
xlat
mov
add
sbb
lods
xchg
mov
or
lock
xchg
inc
push
loopne
nop
add
mov
mov
rcl
mov
xlat
mov
and
call
push
lcall
dec
es
mov
mov
popa
iret
pop
jns
mov
mov
clc
ret
ret
aaa
adc
nop
add
lods
cmpsl
cmp
push
es
adc
xor
fldenv
fadds
sbbl
fs
arpl
rol
jle
popf
nop
inc
or
les
mov
jle
and
inc
leave
das
cltd
test
mov
xchg
jo
incb
in
mov
xchg
aas
or
jo
mov
pop
push
mov
add
mov
mov
sbb
mov
sahf
scas
int
add
lods
add
hlt
cs
scas
mov
enter
outsb
ss
clc
xchg
loopne
mov
lods
mov
xor
loopne
mov
sbb
stos
rclb
shlb
shrl
jbe
enter
mov
int3
rorb
cwtl
mov
xchg
int3
nop
add
adc
inc
xor
adc
sub
mov
ret
out
or
dec
test
pusha
xchg
data16
loopne
cmp
jp
clc
mov
sarb
and
rol
cwtl
mov
sub
adc
enter
lret
inc
insb
ret
mov
xchg
adc
mov
cmc
enter
jns
out
push
mov
mov
mov
mov
stos
mov
stc
jp
mov
mov
mov
jp
repnz
nop
pop
and
push
mov
or
xor
inc
add
pop
mov
jecxz
fs
mov
stos
cld
mov
out
mov
mov
add
rorb
int3
les
or
les
lcall
loope
adcl
cld
clc
mov
or
and
nop
xor
mov
cmp
aad
rclb
push
into
mov
lods
rorb
and
into
or
cwtl
nop
js
fcmovne
pop
ror
test
addr16
mov
mov
push
mov
xchg
jns
dec
pop
ret
mov
movsb
mov
sub
jns
mov
push
pop
fsubl
mov
xor
sub
adc
ret
mov
ret
fiaddl
fdivrl
mov
rclb
mov
mov
mov
dec
xor
or
jnp
mov
pop
and
push
test
inc
mov
mov
xor
inc
add
sbb
push
iret
adc
xchg
push
cmc
lods
test
int3
shll
shrb
cmp
add
mov
loopne
shll
cmp
and
pusha
xchg
cmp
ret
cmp
jb
rcrb
jle
lret
stos
nop
scas
test
adc
mov
cmp
push
cmp
mov
xor
adc
shlb
lock
shlb
orb
arpl
add
sub
js
fisubrs
mov
mov
enter
cwtl
mov
add
jle
repnz
cmp
and
pusha
adcl
mov
ss
sub
daa
mov
mov
push
push
pop
push
mov
mov
sbb
shll
adc
mov
shlb
xlat
lds
repnz
lods
pushf
jo
les
lock
es
inc
or
sub
pop
leave
std
mov
xor
dec
ljmp
shlb
test
and
into
sub
paddq
ret
rol
or
cli
add
nop
xchg
xor
daa
lds
test
stos
leave
mov
xor
test
lock
in
mov
mov
pusha
movsb
insb
mov
push
daa
or
and
fisubl
jo
fidivs
int
cmp
fsubs
add
pop
jecxz
nop
rcrl
sbb
lds
and
data16
or
inc
xchg
xchg
stos
or
lret
out
cmp
inc
ret
sub
push
mov
jns
push
inc
adc
add
mov
and
mov
adc
sbb
mov
pop
lcall
xchg
mov
or
rorb
icebp
add
or
clc
and
xor
lock
push
add
loopne
ret
in
iret
mov
andl
cmpb
add
xchg
lods
repnz
jg
nop
xchg
jl
jbe
lret
add
nop
les
fcmovnb
scas
add
mov
loopne
ret
xchg
sbb
jno
or
mov
shrl
pop
inc
adc
xor
mov
cmp
sbbb
push
sub
xor
or
roll
jp
mov
stos
cmpsl
jle
sahf
cld
gs
jne
or
icebp
fistl
inc
lds
les
dec
call
repnz
and
xor
adc
arpl
scas
fists
sarb
inc
fwait
rcll
xor
mov
jnp
jae
rcrb
jo
adc
jl
pushf
adc
test
mov
pop
and
push
cmc
jl
nop
cs
push
aas
loop
push
sarb
mov
mov
jno
and
mov
ljmp
jg
xchg
stos
xor
mov
jne
repz
fcompl
mov
adc
and
sbb
add
pop
inc
pop
inc
cmp
mov
cmp
pop
ds
jns
xchg
or
insb
sahf
xchg
scas
je
xor
in
shl
mov
popa
dec
mov
daa
sbb
mov
add
ret
loopne
xor
cmc
es
xchg
xor
mov
mov
addb
push
lock
xor
jge
mov
lds
lret
enter
test
movsb
or
shlb
stos
fwait
enter
mov
mov
ret
and
les
sub
mov
mov
ret
nop
dec
ret
push
ds
or
mov
mov
inc
mov
gs
inc
xchg
push
pop
add
out
jnp
and
lret
or
ret
jecxz
inc
pop
dec
pusha
lret
mov
mov
push
test
fdivs
cwtl
nop
pusha
or
imul
rcrl
sbb
xchg
inc
pop
xor
pop
adc
clc
sub
cli
fiadds
cmpsb
inc
xchg
mov
dec
xchg
nop
clc
add
sarl
xchg
lret
or
movb
adc
popa
jb
jle
mov
cmp
int3
ret
test
jns
nop
xor
scas
fmulp
pop
mov
mov
je
mov
mov
rcrb
insb
jle
out
xor
inc
shrb
xchg
cmpsb
mov
mov
push
xchg
test
rol
mov
mov
out
stos
int
inc
xor
insl
sub
mov
jbe
or
xor
mov
add
add
add
sbb
mov
sbb
sarb
nop
inc
xor
mov
nop
inc
es
cmp
rcr
inc
push
push
aas
pop
dec
aad
mov
stos
hlt
enter
outsb
lret
xchg
xchg
faddp
sub
adc
or
dec
nop
sahf
cmp
jg
jo
jle
mov
cwtl
aaa
or
push
push
mov
shlb
call
mov
dec
movsb
inc
jns
add
jnp
mov
or
ret
in
adc
test
cwtl
mov
lret
mov
add
xor
nop
add
es
mov
mov
movsl
cmp
xchg
cli
xchg
mov
mov
test
enter
mov
ret
push
ret
inc
cmp
jle
in
adc
mov
stos
es
dec
mov
aam
ret
mov
mov
add
push
nop
or
fsub
cmp
cltd
cmp
mov
sti
mov
fsts
outsb
xchg
adc
and
fsubrs
cmp
fildll
sti
aam
push
leave
popa
out
cmp
mov
xchg
icebp
aaa
add
and
add
or
fdivs
add
inc
push
fcmovne
mov
cmpsl
les
cmpsl
sbb
stos
jno
ss
nop
subl
or
xchg
loop
lock
mov
ret
lock
stos
xchg
mov
mov
or
into
nop
and
jb
pusha
and
test
into
xchg
pushf
or
leave
test
add
mov
mov
adc
mov
xchg
ret
lods
cmp
adc
lods
enter
xor
mov
mov
enter
inc
mov
nop
ds
cmp
xor
mov
orb
push
jbe
dec
roll
shrb
sti
xchg
xor
pop
iret
add
shlb
popa
mov
mov
stc
andb
mov
push
pop
xor
nop
mov
mov
les
nop
iret
push
lret
mov
add
add
sub
mov
mov
js
jle
add
push
rcrl
add
mov
adc
xchg
mov
push
jns
dec
mov
sbb
pusha
jge
push
mov
xchg
add
inc
test
dec
shrb
xor
mov
xchg
out
js
mov
xchg
test
mov
orl
mov
lods
and
push
xchg
test
lods
int
das
lods
mov
and
xchg
stc
lcall
xchg
and
cmp
clc
xchg
add
xchg
addr16
xlat
sub
xchg
int3
xchg
add
cmp
mov
and
lods
push
sbb
pusha
lock
ret
jns
test
mov
test
mov
out
adc
xor
mov
into
mov
sub
shrb
adc
test
cmpsb
jmp
mov
roll
mov
pushf
add
inc
mov
mov
inc
jno
aas
les
das
call
lock
sub
sub
mov
mov
aaa
xchg
stos
inc
jns
mov
ficoms
andl
adc
cmc
mov
mov
jo
mov
xchg
mov
push
stos
sub
mov
inc
pop
fs
adc
cwtl
mov
lret
inc
lods
mov
mov
clc
outsb
sbb
clc
out
xchg
mov
xor
cli
add
insl
lock
ss
cs
add
movsb
and
push
mov
nop
rorl
adc
les
inc
mov
orb
mov
sub
inc
test
andb
mov
adcb
mov
and
loopne
test
scas
pop
cmp
sarb
add
shrb
and
and
outsl
ret
mov
dec
jns
adc
cmpsb
mov
mov
clc
mov
addr16
nop
dec
mov
mov
mov
fwait
jge
mov
into
les
or
test
pop
repnz
test
movsl
xor
and
xchg
rorb
add
dec
stc
dec
lds
inc
inc
xchg
cs
shlb
and
mov
adc
adc
mov
test
out
sti
lods
jo
and
mov
shl
les
enter
lret
lock
mov
fs
inc
add
add
mov
xor
cwtl
dec
add
xor
lock
mov
nop
ret
sub
mov
mov
ror
mov
test
xchg
cwtl
inc
mov
rolb
xor
add
fiaddl
nop
jp
dec
fstl
ret
fsubl
push
dec
shrb
js
inc
test
add
es
adcb
cwtl
dec
stc
and
add
push
rcl
mov
or
stc
and
pop
pop
sub
and
xlat
xchg
xchg
daa
xchg
imul
mov
cmp
and
mov
xchg
nop
ds
pop
mov
test
or
mov
loopne
mull
mov
xlat
and
and
and
lock
lcall
lret
call
lock
mov
call
mov
and
pusha
stc
ffree
mov
adc
shrl
and
sbb
mov
nop
push
or
shlb
mov
or
mov
sub
xorb
add
mov
mov
jns
adc
lahf
fsubl
int3
or
aaa
sbb
and
xor
cmpsb
mov
and
push
sub
add
dec
or
pop
jmp
sbb
cmp
add
mov
adc
test
mov
sub
mov
xor
aam
stc
loope
mov
rorl
pusha
sub
sub
sub
sbb
or
push
loop
lahf
aam
ret
mov
lock
cmp
mov
sub
mov
push
jb
or
adc
lods
lret
add
mov
inc
test
clc
dec
mov
imul
sub
lods
popl
cmp
mov
arpl
cmpsl
jle
flds
dec
movsb
pop
scas
fiadds
adc
out
mov
inc
push
mov
cs
cmp
sarl
ja
mov
inc
cltd
js
push
call
rol
push
mov
rclb
and
rcr
mov
dec
xchg
lods
mov
mov
insb
neg
adc
mov
mov
mov
lea
in
outsb
mov
stos
test
loop
sub
xchg
test
lahf
ret
xor
or
and
jo
and
xchg
sbb
mov
idivb
cwtl
js
ficoms
mov
lea
xlat
mov
fneni(8087
into
add
jae
jne
inc
jo
jmp
xchg
and
jge
js
mov
nop
dec
sub
pop
mov
lds
or
lret
movsl
cmp
sbb
adc
mov
fdivrs
jo
xlat
jnp
ret
pop
xchg
sub
adc
dec
inc
enter
mov
lret
xor
rorb
loopne
decb
jle
push
mov
iret
je
mov
test
push
xchg
jle
mov
sar
pop
add
leave
push
andb
dec
les
scas
and
mov
xchg
push
dec
cwtl
jo
mov
sbb
push
enter
cwtl
loope
xchg
cmp
xor
loop
and
xchg
xchg
adc
mov
xchg
test
subb
inc
xchg
pop
mov
clc
loop
test
nop
ss
xchg
mov
push
test
xor
mov
add
ret
mov
scas
into
jo
sbb
and
imul
nop
xchg
jae
dec
and
mov
push
mov
imul
sbb
test
dec
adc
inc
mov
sahf
xchg
je,pn
loop
ret
rcl
call
cltd
mov
ret
enter
jecxz
les
cmc
inc
or
push
mov
mov
mov
cmp
sahf
xchg
lods
push
adcb
push
les
popf
adc
mov
mov
cmp
jge
push
stos
mov
cmpsb
push
call
in
jo
incl
nop
iret
insb
mov
ror
addr16
pop
enter
fdivrl
lods
mov
mov
mov
xor
sub
aaa
inc
mov
repz
mov
xchg
decl
add
push
cmp
and
rorb
movsl
out
mov
rclb
mov
cmp
mov
sub
loopne
xchg
neg
mov
xchg
loop
xchg
push
add
pusha
mov
mov
mov
mov
cmpsb
xor
xchg
fmuls
or
ret
adc
mov
xchg
subb
mov
push
or
inc
lods
enter
mov
sti
in
dec
adc
cmp
lahf
ss
test
repnz
sbb
add
pushf
dec
push
xchg
xchg
shr
js
xchg
call
rcrb
shr
xchg
cmpsb
hlt
dec
js
cwtl
dec
jmp
pop
movsb
adcb
mov
lods
xor
jnp
test
or
xchg
nop
les
adc
jns
mov
push
fildll
xchg
xchg
mov
xor
pop
or
mov
cmp
adc
mov
xchg
ljmp
lods
adc
xor
pop
xchg
scas
mov
push
mov
pop
scas
cmc
fs
jl
mov
icebp
mov
adc
mov
and
dec
outsl
mov
and
mov
adc
xchg
mov
mov
ret
xchg
sbb
nop
mov
pusha
movsb
clc
shlb
test
adcl
loopne
shr
je
mov
lcall
std
ret
pusha
stos
ret
fwait
les
pushf
mov
mov
mov
nop
pop
push
xchg
sahf
inc
inc
loopne
call
or
les
mov
call
icebp
add
pop
fmuls
or
mov
stos
pop
test
or
rclb
andb
sbb
and
add
cwtl
push
xchg
or
outsl
mov
fwait
sub
dec
aaa
popf
nop
pusha
or
push
adc
jl
cmp
iret
push
mov
mov
test
fsubs
sub
addb
xchg
test
adc
add
ret
out
adc
mov
int3
or
mov
cs
inc
jecxz
or
add
xor
loope
cwtl
test
xchg
gs
xchg
or
xor
push
mov
push
mov
add
inc
mov
lods
inc
or
adc
pushf
mov
in
adc
cmpl
fsubrs
ljmp
mov
add
pop
ret
movsl
and
or
mov
test
adcl
xchg
scas
xor
lock
lods
lods
push
ret
dec
lds
mov
mov
lods
mov
adc
mov
shl
xchg
sub
push
out
mov
xor
add
xlat
cmpl
clc
mov
mov
cwtl
lcall
xchg
add
mov
mov
xchg
push
movsb
ds
mov
or
xchg
movsb
mov
mov
jp
add
push
movsb
inc
enter
mov
or
xchg
shlb
mov
or
add
movsb
ds
mov
or
xchg
out
ror
adc
xchg
or
pop
movsl
mov
insb
mov
mov
add
repnz
mov
or
les
bound
push
mov
or
xchg
out
movsb
fmulp
aam
ret
les
sub
mov
sbb
or
cli
enter
mov
or
data16
xchg
xor
and
or
or
les
mov
push
mov
or
xchg
cld
movsb
ljmp
les
mov
cli
pop
xchg
jbe
mov
dec
mov
or
xchg
mulb
mov
or
xchg
pop
movsb
dec
enter
mov
or
xchg
movsb
enter
mov
sub
insb
adc
inc
and
adc
push
and
mov
push
inc
or
xchg
movsb
push
enter
mov
or
xchg
mov
pushf
enter
jb
andl
sub
sbb
push
mov
into
mov
mov
in
mov
mov
movsb
stos
enter
mov
shrl
les
or
xchg
sub
int
hlt
nop
int3
jl
xor
in
mov
sbb
lret
mov
clc
dec
mov
test
or
xor
inc
enter
mov
jne
lcall
mov
or
adc
mov
or
jp
es
sbb
mov
or
jns
push
mov
or
xchg
or
mov
or
pop
mov
inc
enter
mov
or
xchg
int3
movsb
ret
adc
jle
ja
or
dec
movsb
cmp
adc
add
repnz
ficoml
cmp
les
xor
test
mov
or
xchg
add
adc
and
cmp
add
mov
aam
loopne
lock
mov
or
cmpsb
push
stc
les
rorb
mov
repnz
xchg
sbb
mov
rorb
mov
insb
les
or
movsb
sub
sbb
or
or
xchg
mov
adc
or
jle
mov
cld
or
push
xchg
movsb
inc
enter
mov
rcll
add
or
xchg
ljmp
adc
dec
nop
pop
lea
nop
dec
mov
hlt
orl
xchg
daa
rclb
mov
outsb
and
ljmp
stc
lea
rcll
inc
push
cmp
sub
fcoms
xchg
mov
adc
or
or
out
lock
or
xchg
rep
hlt
enter
mov
or
xchg
sti
movsb
cld
enter
mov
or
xchg
add
mov
or
xchg
js
or
or
adc
adc
adc
adc
sbb
sbb
sbb
sbb
and
and
and
and
sub
sub
sub
sub
xor
xor
xor
xor
cmp
cmp
cmp
cmp
inc
xchg
inc
movsb
inc
enter
mov
or
dec
movsb
dec
enter
mov
or
push
movsb
push
enter
mov
or
pop
movsb
pop
enter
mov
or
popa
movsb
enter
mov
or
imul
outsl
or
jno
jb
jae
je
jne
jbe
or
jns
jp
jnp
jl
jge
jle
or
mov
movsb
leave
enter
mov
or
xchg
pop
movsb
das
enter
mov
or
dec
mov
in
or
xchg
sbb
cs
mov
rorb
or
lret
adc
mov
or
xchg
and
cmp
dec
adc
popa
les
rorb
or
enter
in
les
adc
sub
enter
mov
rclb
or
enter
mov
or
xchg
cmp
mov
rclb
or
enter
mov
or
cmp
inc
adc
movsb
ror
loope
lock
or
xchg
inc
movsb
push
enter
fwait
mov
jno
in
enter
mov
or
ja
xchg
xchg
enter
mov
or
xchg
or
mov
or
scas
sub
jg
iret
xor
out
jmp
addr16
inc
out
mov
iret
shl
xchg
inc
shl
push
mov
idivb
add
outsl
inc
repz
enter
push
mov
push
int3
js
push
jmp
mov
in
hlt
rcrb
cli
icebp
repz
in
imul
lret
ret
loope
mov
inc
in
imull
test
cltd
fdivrl
jmp
aam
mov
in
ret
call
aaa
pop
mov
sub
aam
in
jle
dec
and
push
mov
shl
xchg
push
and
mov
mov
loop
push
addb
out
xchg
ret
pop
mov
mov
mov
sahf
jmp
aas
mov
sti
leave
daa
sarl
in
call
xchg
mov
out
je
repz
hlt
mov
outsl
lret
mov
in
cltd
inc
or
shl
hlt
jecxz
xlat
shrl
dec
in
ror
mov
xor
arpl
pop
dec
mov
lret
out
xor
xor
loope
adc
addr16
jmp
lcall
mov
mov
xchg
sbb
lock
jecxz
cmp
in
popf
xchg
cmpsl
xchg
sarl
cmp
cmpsb
sub
xlat
jl
push
push
and
scas
sub
shl
cmp
sub
xlat
out
push
jmp
test
cltd
in
ljmp
sub
dec
lcall
lret
cmpsb
movsb
ret
or
jecxz
cmc
jmp
sbb
and
jl
ljmp
lcall
int3
pop
adc
out
sbb
sbb
in
sbb
lret
adc
push
cwtl
cwtl
fimull
jmp
pop
dec
mov
ljmp
xchg
or
push
xchg
loope
and
mov
dec
mov
nop
push
xchg
pop
dec
aad
mov
out
rcl
ja
out
push
rcrl
adc
clc
sub
pop
loope
ret
xchg
repnz
sahf
mov
pop
add
mov
ret
aad
out
in
mov
or
es
hlt
and
or
jmp
sbb
adc
and
lret
ss
daa
fs
repnz
fs
dec
div
fidivrl
in
lods
mov
fcoms
nop
fiaddl
sub
xchg
insb
xchg
inc
xor
jle
mov
loopne
pop
test
test
xchg
mov
jle
out
enter
stc
movl
roll
lods
or
aas
cmp
and
mov
pop
mov
push
ja
dec
mov
sbb
cli
push
mov
jecxz
in
mov
orb
xor
xchg
inc
push
daa
in
bound
or
mov
lock
mov
mov
push
je
loop
mov
jp
mov
mov
add
or
xor
test
add
xchg
adc
jnp
loope
shlb
icebp
mov
mov
mov
add
out
cltd
shrb
rclb
mov
clc
cwtl
inc
mov
loop
ret
loopne
mov
popf
mov
mov
jle
arpl
xor
out
mov
pop
and
push
test
cmp
push
push
cmp
sub
mov
add
pop
leave
xor
cmpsb
lods
rcrb
push
clc
call
movsb
icebp
push
xchg
xor
push
or
cld
loopne
setno
loop
loopne
subl
pop
sub
iret
rclb
mov
inc
leave
shr
aam
xor
aas
lock
into
testl
sbbl
insl
cmp
add
or
aam
outsb
xchg
xor
adc
mov
je
test
imul
imul
pop
xor
rcr
shlb
insl
mov
cmp
adc
cli
adc
adcl
jno
jb
ret
call
ret
dec
adc
jno
aad
in
mov
mov
clc
pop
jp
dec
jl
dec
xor
popa
mov
push
cmp
xor
sub
loop
lret
xchg
xchg
cmp
imul
xlat
adc
cli
repz
nop
in
mov
mov
hlt
les
shl
pop
xchg
mov
mov
pusha
out
mov
lock
cmc
adc
add
xor
mov
mov
xor
mov
jno
jne
and
rol
jo
mov
mov
mov
into
add
call
lock
data16
repnz
out
leave
out
xor
shrl
inc
sarl
dec
xchg
scas
sub
cmc
fcoms
test
or
push
rcrb
jb
jp
push
mov
dec
and
mov
nop
and
daa
fists
testl
mov
lds
xor
inc
arpl
cmp
mov
mov
enter
jb
push
cli
mov
ds
mov
test
jnp
mov
lret
out
mov
xchg
cmp
out
or
cmp
xorb
mov
mov
call
test
out
out
pusha
clc
int3
jecxz
icebp
je
jg
imul
jmpw
iret
roll
in
out
in
scas
lea
shll
icebp
sbb
test
pop
xchg
cmc
mov
xchg
sbb
mov
cld
sub
push
nop
cmp
sub
movsl
inc
cmp
sbb
nop
jno,pt
nop
shr
jecxz
call
rol
xchg
int3
andl
cmp
mov
mov
fldl
xchg
or
sub
lahf
test
mov
mov
rolb
stos
and
dec
inc
rcrb
inc
ret
enter
dec
adc
les
dec
push
mov
push
and
aad
rcr
das
dec
pop
and
add
cmpsb
adc
ret
mov
leave
addl
repnz
jecxz
pop
shlb
lds
and
pusha
mov
mov
mov
andb
imul
adc
jmp
xorl
mov
adc
add
sti
andb
xchg
mov
lret
stos
adc
xchg
orb
pop
pushf
mov
sahf
dec
in
pop
in
lahf
inc
mov
xchg
push
sbb
pop
cmc
int
xorb
enter
repnz
xchg
jmp
insl
sarb
popf
inc
testl
dec
and
push
ss
lcall
into
fldt
je
outsb
orb
dec
mov
xchg
cs
or
jg
xchg
lahf
jmp
sub
xchg
sub
jne
cmp
dec
gs
orb
in
jg
dec
cmpb
lds
subb
test
adcb
xor
mov
mov
addr16
movsb
sbbb
fmull
and
fstpl
dec
stos
cmp
dec
shrb
inc
pop
jp
in
pop
mov
xchg
repnz
addb
or
das
clc
mov
pop
repnz
adc
mov
dec
push
inc
imul
fdiv
push
adcb
je
outsb
les
lods
lock
out
sbbb
fdivrl
xorb
sub
nop
sub
mov
and
sub
lea
addb
cmc
arpl
gs
stc
sbbb
mov
cmp
cmp
call
aaa
cmp
es
nop
addb
pop
push
icebp
xchg
test
pop
mov
les
or
testl
or
jecxz
xchg
fistpll
std
push
mov
test
ds
cmpsl
fdivp
mov
xchg
mov
jo
aas
pop
cmpb
mov
subb
jns
and
and
test
adc
xlat
add
cs
mov
xor
lcall
bound
lret
pop
adc
arpl
jp
js
add
ret
mov
orb
jo
pusha
shl
orb
mov
pop
pop
cmpsl
and
sbb
sub
outsl
addr16
or
sbb
mov
out
js
adcb
shll
arpl
jp
lcall
scas
sub
dec
addl
stos
mov
test
inc
adc
jg
stos
sbbb
mov
pop
dec
adcb
mov
xchg
sti
sub
fisubrl
cmpb
aas
sub
sbbb
jo
nop
inc
pusha
addb
and
test
in
std
cli
inc
xchg
push
sarl
xchg
aam
inc
repz
and
inc
push
sar
lahf
orb
insb
mov
mov
movl
sbb
cmpb
in
pop
sub
sahf
push
mov
xchg
nop
pusha
pop
inc
sti
enter
xorb
push
stos
and
cld
insl
mov
mov
out
into
jl
sbbl
out
cwtl
popf
and
push
ret
or
sbb
jo
loopne
out
pop
mov
sbb
mov
movswl
cmp
sbb
scas
stos
or
icebp
iret
bound
pop
jne
push
and
sbb
xor
daa
push
dec
mov
mov
pusha
scas
icebp
cmpsl
testl
or
push
lret
rorl
push
into
cmp
and
orl
jbe
es
jmp
adcb
mov
mov
cmc
test
popa
orb
xlat
iret
cmpb
xor
sbbb
data16
fisubrl
push
xchg
fs
jl
adcb
mov
sarb
fs
sarb
push
mov
movsb
mov
nop
mov
lret
subb
dec
add
nop
and
push
cltd
scas
and
add
int
mov
adc
push
mov
add
bound
cmpb
adcl
lods
inc
sub
loope
je
jl
pop
adc
mov
dec
fisubs
loope
cmp
ficompl
arpl
subb
push
cmp
and
cmpsl
clc
add
rolb
outsl
xchg
push
call
mov
in
jno
add
xor
lds
pop
shrl
loop
sbbb
sbb
fs
popw
shrb
sub
rorb
add
in
ret
xor
enter
pop
repz
mov
adc
insl
stc
mov
movsl
popf
cmp
cmpb
xorb
jmp
dec
loop
pushf
imul
imul
rolb
push
mov
cmp
fsubl
or
mull
fistps
or
and
sarl
incl
cmp
jno
pop
popl
repnz
xchg
rorb
cltd
cmc
out
xchg
addb
inc
push
xchg
movsl
push
addb
ret
stos
mov
adc
orb
dec
xchg
imul
pop
inc
jno
cli
subl
pusha
lock
and
sub
sbbb
xor
test
pop
pop
or
cwtl
mov
outsb
das
xorb
push
xor
subl
out
jns
xchg
push
addb
adcl
pop
adc
pop
and
sbb
js
inc
adc
xor
test
sub
add
and
mov
pop
adc
jmp
ret
xor
inc
sbb
adcb
adc
leave
xor
loopne
pop
mov
arpl
imul
pop
adcb
adc
repz
out
inc
dec
jge
mov
sub
outsb
or
lds
scas
mov
mov
sti
nop
loope
push
nop
or
fldl
xor
orb
or
fucomip
in
and
rolb
and
lcall
jne
xchg
mov
cmpsb
orb
push
cs
loop
stc
xor
ret
xchg
push
lods
orb
and
test
shlb
mov
faddl
shl
repz
andb
jle
push
jne
push
cmpb
ret
mov
and
mov
sbbb
clc
outsb
lods
into
je
subb
jle
cmpb
sbb
test
arpl
pop
mov
data16
add
mov
jne
addr16
xchg
push
les
mov
arpl
sub
add
mov
clc
outsb
lods
pop
and
xor
pushf
sti
fcmovne
jl
jb
inc
fmull
and
inc
sbb
cs
cld
nop
jmp
pop
sbb
or
push
rolb
gs
mov
insb
bound
loopne
out
inc
mov
lock
sarb
test
pop
movsb
inc
add
ja
lret
cld
orl
adc
push
sub
sub
and
sbb
add
inc
push
out
jo
pop
dec
push
push
lahf
orb
fsubs
pop
inc
out
scas
sti
and
call
gs
inc
lahf
xchg
push
stc
mov
jmp
xor
test
inc
aam
mov
adc
popf
dec
xchg
xor
sub
out
das
ss
cs
cmp
mov
cmp
inc
xchg
adcb
es
call
jl
pop
jmp
andb
cmpsb
adcb
out
xchg
or
mov
fdivl
popf
out
orb
sub
iret
or
push
adcb
inc
jl
je
or
addl
jae
adc
test
outsl
lock
and
sbb
shlb
inc
xchg
call
addr16
test
pop
iret
scas
ret
in
adc
dec
in
test
popl
mov
int
mov
xchg
mov
sub
jle
sub
adc
insb
xchg
cmpsl
addb
jnp
adc
popa
sbbb
push
inc
fs
cmp
sbbb
pop
cmp
mov
mov
aas
xlat
popf
addl
roll
cmpsb
mov
scas
xchg
dec
fs
les
mov
iret
and
bound
or
xor
imull
fnsave
inc
mov
sbbb
sub
lahf
ljmp
lcall
xorb
jb
subb
or
dec
bound
or
jnp
inc
movsl
xorb
jecxz
fcom
mov
jne
mov
fsubl
jge
jo
dec
lock
sbb
cmp
repnz
adc
fsubrs
dec
jbe
push
fwait
push
inc
cmpsl
outsb
mov
dec
cmp
out
and
and
sub
xor
lock
sub
out
ss
in
mov
scas
mov
leave
mov
aad
cmp
in
popa
add
push
sbb
rcr
push
out
imul
ss
cmp
cmp
mov
inc
fbld
sbbb
mov
sbb
cld
mov
mov
bound
rcr
cmp
aas
cmp
or
call
mov
fwait
xor
add
adc
lahf
into
subb
pushf
bound
out
stc
push
enter
ret
dec
jle
xorb
addl
cmpsl
add
mov
mov
cmp
pop
dec
push
movsb
adc
sbb
cmpb
es
dec
or
xor
data16
push
subb
ror
xchg
mov
daa
lods
and
jmp
xchg
loopne
jl
inc
movsb
aas
sbb
loop
jns
popa
add
push
adc
pop
mov
cs
cmp
xor
pop
test
mov
bnd
enter
pushaw
addb
add
jbe
xchg
mov
es
and
and
pop
fimuls
repz
mov
jp
cmp
add
test
andb
enter
sbbl
into
push
lock
imul
faddl
pop
testl
pop
in
fnstcw
inc
and
jg
popa
mov
add
sub
cmpb
and
cmp
rclb
out
repnz
adc
xchg
or
addl
stos
aam
cmpsl
pusha
and
jle
mov
mov
andl
adc
mov
mov
je
lret
fwait
nop
inc
pusha
xor
push
popf
and
add
cs
scas
add
cmpl
pusha
fs
cmpl
mov
pop
movsl
xchg
insb
xor
xor
mov
mov
aas
lea
outsl
inc
jbe
add
mov
pop
sbb
mov
and
rolb
mov
loop
sbb
dec
add
aad
loopne
pusha
movsl
xlat
fiadds
pop
rol
pop
in
push
jns
rcrb
jnp
and
mov
or
cld
xor
call
subb
sub
inc
cmp
fadd
mov
xor
jmp
mov
ja
subb
out
jl
mov
andl
and
scas
jbe
orb
sub
mov
dec
mov
or
cltd
out
cmp
pushf
xchg
mov
inc
into
sbb
jle
pop
adc
xor
xor
jno
sbb
es
test
lock
fwait
clc
cli
lahf
xorb
push
jp
lcall
dec
andb
sub
icebp
cmc
cs
sbbb
into
sarl
mov
icebp
js
sti
subb
inc
sbb
push
or
fisttps
fs
mov
mull
addb
sub
push
scas
repz
lock
and
rolb
mov
mov
xchg
xor
sbb
addl
inc
lahf
mov
addb
sti
xorb
rol
subb
fcmovnb
xorb
jbe
xchg
jo
test
dec
mov
inc
xchg
mov
icebp
repnz
dec
xchg
stos
fdivr
cmpl
mov
pop
cld
shl
inc
subb
mov
arpl
icebp
mov
call
idivb
or
sub
push
adc
sub
dec
add
xor
xorl
adc
movsl
cmpb
inc
mov
out
mov
jle
sub
cld
mov
sbb
arpl
rol
cmp
mov
mov
jnp
jmp
xor
mov
movsb
and
aaa
cmp
adcb
js
cmp
add
ss
add
jo
mov
dec
jb
cmp
mov
jg
in
jmp
sahf
lods
xchg
fildll
jnp
xorb
inc
lods
and
cmp
movsl
fcomps
sbbb
inc
cmpb
push
xchg
arpl
dec
andb
push
sbb
or
stos
andb
jnp
test
ret
sub
subb
subb
push
pop
mov
inc
into
mov
pusha
fcmovnb
int
mov
in
filds
mov
orl
mov
lock
mov
jle
add
mov
lret
mov
lsl
pop
arpl
sbbb
cltd
bound
cmc
test
pop
inc
xchg
and
add
out
xorb
sbbb
push
imul
in
loopnew
in
lahf
mov
aas
arpl
les
sub
push
cmpb
ds
cmp
jo
fisttpll
jno
adc
mov
orb
inc
scas
das
mov
dec
gs
dec
lahf
in
daa
xchg
add
adc
mov
jne
push
cld
jne
and
xor
bound
cmp
xor
add
out
cwtd
pop
adcl
stc
xorb
shrb
xorb
sbb
sarl
adcb
push
mov
leave
or
cli
mov
inc
inc
xorb
adc
mov
xor
movsl
adc
xchg
pusha
adc
pop
jl
sbbb
dec
xor
insb
xchg
xchg
cli
xor
pusha
popl
int
cmpb
imul
cmp
loope
sbb
xor
mov
mov
jp
adc
mov
ljmp
iret
ss
cltd
rcrl
and
push
adcb
lock
sbbb
dec
inc
rcrl
ret
test
push
in
mov
orb
ret
aad
loope
sub
mov
mov
mov
daa
inc
sti
xchg
xchg
out
push
hlt
cmpb
repz
addb
push
sbb
mov
jb
popf
xchg
mov
arpl
in
lods
jecxz
test
push
dec
pop
push
mov
lock
mov
jne
push
adc
fs
ret
js
mov
hlt
mov
push
mov
and
je
dec
push
jae
pusha
fs
scas
ja
stc
inc
pop
adc
rol
jo
repnz
sbbb
in
cmp
sbb
mov
add
movsl
pop
popf
add
lock
test
sahf
adc
jg
ljmp
mov
cltd
sbb
icebp
ds
js
loopne
addl
add
pop
xchg
arpl
movsl
push
jecxz
mov
push
pusha
inc
inc
sub
mov
idivb
call
loopne
mov
xor
mov
pop
push
sub
lret
add
lds
push
js
leave
and
or
xor
in
pushf
addl
andb
mul
or
inc
add
lahf
dec
in
mov
mov
sti
push
xchg
repz
lods
loopne
dec
cmp
jp
orb
out
into
xor
dec
cltd
xor
xor
mov
fdivrl
dec
je
loopne
pop
aad
fildl
cltd
adc
repz
loop
aam
adc
in
sbb
lahf
inc
pushf
and
hlt
xchg
adcb
push
jns
in
xchg
addl
jo
sbb
cmpsb
cmp
and
popf
or
mov
cmpb
out
adc
loope
insl
or
jnp
xor
dec
inc
add
stc
leave
test
jg,pn
xchg
adc
sub
adc
jl
inc
push
subb
xor
sbb
sub
mov
addr16
mov
ret
sbb
dec
adc
and
repnz
mov
loopne
pop
and
push
jo
mov
or
or
insl
out
addl
jo
scas
and
mov
sbbb
les
or
rcrl
cmpsl
addb
push
out
bound
mov
in
jp
arpl
add
mov
cmp
aam
push
fildl
xchg
stc
jo
andb
loop
addl
dec
dec
mov
adcl
in
ret
and
push
lcall
loop
push
pushf
mov
cmpsl
add
dec
mov
inc
adc
xchg
sub
jle
andb
popa
ret
or
in
mov
push
aam
cmp
popa
mov
jmp
aad
pop
jo
push
outsl
mov
jae
lret
orb
lea
data16
cs
popf
inc
inc
or
in
lods
sbb
subb
add
push
loope
js
pop
push
clc
orb
cmp
int
xor
cmpl
pop
testl
orb
push
and
in
mov
sbb
mov
es
std
push
cmp
popa
addb
fdiv
pop
jl
sub
cmp
mov
jmp
pop
cmc
cmp
ret
inc
cmp
adc
xorb
sbb
push
jle
xchg
insl
pusha
and
cmpsb
adc
xor
fiaddl
icebp
pop
mov
andb
inc
sub
xchg
xchg
sbb
pop
fisttps
mov
add
and
push
adcb
dec
arpl
into
mov
js
inc
movsb
adc
add
dec
add
jno
jbe
inc
fldcw
cmp
lds
mov
orb
inc
jge
movsb
test
js
mov
add
out
dec
out
test
adcb
jmp
rcrl
popf
pusha
adc
inc
adc
fsubs
mov
xchg
je
dec
sbb
xchg
pop
cld
pusha
mov
pusha
aam
xchg
ja
sarb
push
out
test
stos
mov
dec
sti
or
push
ss
ror
dec
cmpsl
push
movsb
or
cmp
dec
sbb
outsl
in
mov
imul
sbb
in
ret
lods
push
idivb
pop
xorl
cld
mov
stc
in
orb
sar
addb
mov
pop
push
dec
in
mov
scas
shll
pop
and
cmpb
inc
xor
icebp
cwtl
sbb
rol
idivb
test
insb
cmp
jns
xchg
inc
jl
bound
and
imul
sub
orb
and
test
test
in
sar
mov
mov
rolb
jmp
sbbb
fcmovnbe
repnz
subb
data16
dec
or
add
push
xchg
lret
sbb
cmpsl
jb
cmp
push
pop
mov
sub
inc
mov
mov
inc
daa
mov
inc
das
mov
add
cs
dec
jecxz
xor
insb
add
rep
mov
cmp
stos
subb
mov
test
inc
mov
inc
xchg
popa
inc
nop
add
orb
or
adc
in
loope
ds
out
cltd
xchg
cmp
mov
inc
jae
adc
jg
mov
into
lret
outsb
pop
loope
in
sbb
mov
adc
dec
mov
scas
push
or
and
mov
dec
xor
mov
js
fisubl
addb
shl
mov
arpl
xchg
push
mov
in
aaa
and
sbb
popl
and
pushf
js
mov
sbb
repz
and
dec
adcb
andl
fists
popl
push
mov
mov
orb
dec
cmp
addr16
pop
cld
rcrb
mov
fstl
and
add
xor
in
fimuls
inc
int
sub
aas
adc
sbb
aam
fadds
add
inc
imul
data16
andb
mov
jmp
and
scas
push
outsl
sbb
cmc
andl
fcompl
nop
xchg
xchg
stos
pop
pusha
rcrl
adc
add
cmpb
and
sub
add
add
adc
shll
cmp
or
loopne
or
xor
js
xorb
push
outsb
adcb
das
xchg
push
dec
xchg
mov
insb
andb
out
push
addr16
pop
mov
pusha
and
pop
sub
lahf
ficoms
bound
sbb
mov
addb
mov
sbb
pop
cmpb
mov
xchg
es
inc
or
jle
out
dec
mov
call
cmp
push
dec
xchg
fidivrs
repnz
mov
mov
in
cmp
or
test
xor
rcl
cwtl
pop
pop
inc
mov
and
lret
mov
fst
adc
push
mov
and
movsl
hlt
js
imull
xchg
mov
outsb
jl
cmpsl
adcb
mov
cmp
stc
fisttpl
test
cmpb
aad
push
adc
cmp
clc
sub
arpl
pop
and
lahf
mov
lds
icebp
out
xchg
dec
movsb
xlat
mov
cmp
das
mov
add
inc
imul
mov
push
iret
jnp
add
mov
and
cmp
test
std
ror
mov
jecxz
push
push
adcb
addr16
sub
dec
mov
popf
pusha
push
sub
ror
jae
jne
xchg
pushf
jle
arpl
add
xor
push
out
scas
cmp
and
or
dec
cld
ret
dec
lock
or
dec
add
subb
test
jmp
xchg
inc
loopne
sbb
xor
inc
in
aad
arpl
addb
ror
addl
xor
add
adc
pop
test
push
mov
jg
insl
mov
inc
repnz
rolb
inc
loopne
fsubr
inc
out
rcl
inc
sub
cmpsb
xlat
push
leave
jp
jo
bound
sub
adcb
fidivs
xchg
and
fwait
shll
inc
mov
xor
ljmp
pushf
in
ss
fidivl
or
add
jg
pop
dec
xorl
xchg
add
andb
ret
xorb
es
jnp
jbe
push
adc
pop
xor
push
cmp
shll
cmp
sub
movl
test
cmpb
inc
adc
push
sahf
leave
inc
pop
ret
sub
sub
hlt
or
sub
inc
addr16
dec
pxor
add
mov
sbb
aas
push
cmp
fs
arpl
cmpb
not
cmp
add
sub
mov
add
and
std
clc
ljmp
cmp
call
jl
push
xchg
mov
adc
add
repnz
cmpb
subl
sbb
icebp
imul
xchg
lahf
lret
daa
xchg
inc
sti
addr16
aas
pusha
jle
test
orl
mov
insl
rorb
xor
cs
pop
repz
cmp
mov
jmp
idivl
mov
pop
inc
dec
addb
ret
push
jge
jnp
adc
fistl
mov
stc
sbbl
dec
pop
push
cmpb
test
addb
nop
andb
jmp
int3
movsb
mov
test
data16
lock
or
mov
out
popl
dec
or
add
dec
ja
adcb
and
inc
pop
addb
push
mov
sbb
dec
je
cmp
mov
mov
addl
dec
mov
jp
imul
and
loop
mov
or
stos
jl
xchg
fwait
ret
and
or
subb
pop
ds
lahf
mov
test
test
push
cmpb
or
enter
int
cwtl
test
in
adcb
push
ljmp
insl
or
pop
push
aam
cmp
push
xchg
incb
js
cs
xorb
stos
mov
outsl
dec
jbe
cmp
ficoml
or
lock
stc
arpl
pop
mov
dec
xchg
mov
xorb
int
mov
aam
movsb
in
sub
add
jmp
and
push
xor
jge
bound
add
arpl
jle
sbb
leave
xchg
loop
jle
and
jge
call
aaa
jecxz
mov
outsb
mov
ds
lret
mov
cmp
xorb
fchs
mov
shll
ss
out
cli
add
and
jns
lahf
mov
inc
adc
lock
adc
push
xorb
mov
dec
cmpl
ja
and
fcoms
notl
inc
dec
mov
leave
sub
aas
push
adc
loope
add
subb
int
js
addb
loop
test
mov
cmp
pop
test
inc
in
hlt
mov
insl
mov
mov
mov
test
adc
ljmp
and
xchg
xor
subb
pop
sub
cmp
jns
rcll
iret
mov
test
hlt
xorb
lds
cmpsl
and
adc
jl
subb
xchg
mov
aam
cmp
add
das
les
jb
cmc
jnp
inc
dec
cwtl
ficomps
sub
shll
sub
add
cmpb
rclb
cmpb
mov
mov
addb
jo
xchg
insb
jecxz
clc
int
orb
mov
jno
add
jle
popf
mov
xlat
jno
adcl
ja
orb
hlt
and
cmpsl
xchg
adcb
cmp
in
std
xchg
adcl
repz
mov
sahf
add
push
loopne
stos
addr16
push
call
ja
ljmp
jne
rol
popa
sub
mov
and
addb
into
cld
adcb
jns
mov
test
fcoms
xchg
xchg
jle
sbbb
push
jp
xor
xor
jns
dec
push
dec
sbb
mov
adc
cltd
mov
xchg
push
dec
filds
mov
and
adcb
push
aaa
sbb
fs
loopne
in
mov
mov
sub
daa
adc
gs
inc
sub
add
mov
test
mov
ja
sbbl
cmp
addb
jo
jno
mov
push
xchg
sbb
pop
xorl
sbb
imul
adcb
hlt
jo
push
xchg
js
subb
cmp
cmpsl
jl
stc
adc
mov
xchg
adc
mov
mov
jmp
daa
xor
cmp
call
std
ja
pop
dec
outsb
jp
addb
jl
mov
pop
xorb
out
flds
movsb
add
orb
cld
fildl
aas
scas
jp
mov
xchg
jmp
mov
mov
les
out
jge
jg
inc
imul
popf
push
push
out
addl
cwtl
outsb
insb
jo
orb
cmp
leave
lcall
cmpsb
movsl
dec
rcll
loopne
xor
add
add
jo
cld
int3
lret
pop
test
adc
mov
sbb
adc
dec
clc
fdivl
push
mov
sahf
add
add
fdivrl
xlat
fidivs
cmpl
adc
dec
dec
and
subb
mov
mov
dec
inc
hlt
out
pop
sub
das
push
fwait
mov
mov
mov
sub
sbbb
in
rorb
ret
mov
in
imul
jg
xchg
add
add
fdivrs
sbbl
mov
out
adc
mov
inc
sub
xor
out
add
jl
jp
shll
test
dec
cld
or
out
je
dec
dec
add
cmpsb
lea
mov
data16
sbb
jbe
sub
jle
push
and
adc
dec
push
adc
sub
je
and
test
push
cmpb
iret
push
lret
inc
fs
add
lock
mov
repz
jecxz
adcb
rcll
push
ja
push
test
xor
sbbb
jg
shrb
rorl
pusha
push
pop
push
movsb
dec
cld
jb
inc
add
cli
dec
cmpsb
addb
jae
bound
adc
xorl
repz
cwtl
push
mov
xor
stos
addb
mov
fdivrl
andb
les
mov
cmpsl
test
mov
xchg
adc
gs
sub
stos
adc
sbb
lahf
int
mov
js
push
adc
enter
scas
movsl
ds
jecxz
xchg
fisubrs
testl
cmpb
jge
fstps
xor
push
pop
out
xchg
orb
jle
cmpb
adcb
adcb
cld
lcall
pop
jmp
ficompl
int3
clc
or
sub
jnp
cli
inc
popf
pop
jl
addl
jae
jmp
sbb
fisttpll
jnp
in
cmc
inc
inc
insl
decb
cmp
sub
sbb
sbb
subb
sub
mov
jge
cli
icebp
pop
adcl
xchg
scas
in
xlat
mov
xor
sarb
push
cmp
scas
pop
lds
mov
addr16
hlt
push
push
jge
ret
sub
xchg
cltd
idivl
sbbb
xchg
xor
mov
out
mov
mov
jo,pn
dec
add
test
and
xor
push
jecxz
shl
sti
or
or
insb
movsl
orb
sub
sbb
decb
shlb
pop
push
repz
xchg
lods
orb
cmpsl
je
test
mov
jne,pn
and
addb
out
insb
cmp
add
push
popa
and
fwait
and
cli
mov
xchg
cmp
cmpsb
imul
jl
inc
orl
aad
cmp
jp
and
xor
adc
jge
mov
push
or
pop
or
add
jns
fisttpl
add
push
cmp
subb
push
jbe
adc
test
test
adc
pop
pop
mov
adc
cmp
mov
movsb
adc
mov
mov
dec
add
or
cwtl
adc
aam
loope
mov
pop
sar
jno
ds
lods
inc
pop
shll
fidivrl
cltd
pop
repnz
cmpsl
jbe
inc
and
pop
push
jae
jg
mov
ja
dec
sub
orl
push
adc
pop
push
out
add
cmp
or
mov
cli
sub
cwtl
inc
orb
aaa
iret
push
in
cmpb
xchg
dec
sahf
scas
lods
adc
jl
pushf
test
fs
icebp
dec
bound
mov
push
clc
push
mov
jo
out
xchg
push
xchg
sub
dec
pusha
aad
xchg
stos
rorl
cli
cmc
sbb
pop
xchg
in
sub
cmp
push
xchg
repnz
loopne
add
insl
add
mov
push
adc
orl
in
adc
add
pop
pop
sub
push
addb
rcrl
sbb
je
mov
mov
jb
sti
add
cmp
andb
cld
sub
rcrb
push
mov
insl
lcall
lods
outsl
and
fs
dec
dec
cmp
pusha
sbbb
xor
subb
mov
sub
sbbb
jge
popf
dec
mov
outsb
dec
mov
pusha
insl
cs
addb
int
sbb
xor
dec
enter
mov
mov
and
sub
jle
iret
xor
aas
jmp
mov
in
mov
es
popf
addr16
xor
inc
mov
stos
push
push
fcoml
fsubl
push
adc
xchg
mov
push
xchg
xlat
add
addb
mov
subb
push
dec
mov
in
inc
mov
sbb
roll
xorb
cmp
xchg
push
out
sub
addr16
jo
sbb
or
add
ja
test
pop
push
orb
push
scas
inc
add
and
mov
testl
push
roll
mov
xor
lret
inc
cli
mov
mov
xchg
mov
sbb
and
nop
push
addb
daa
cmp
mov
dec
notb
xchg
xor
or
dec
mov
pop
inc
lret
test
inc
scas
xchg
xlat
iret
push
or
push
mov
xor
jecxz
je
xor
xlat
dec
xor
add
ret
cmp
subb
cli
and
stc
add
jmp
movsb
shlb
sahf
ret
fisubrl
push
insb
mov
lds
xchg
movsl
jb
lock
rolb
xchg
fld
push
xchg
subb
mov
jl
leave
xor
inc
sub
in
push
xchg
subl
sub
pop
add
mov
push
sahf
jo
pusha
cmp
push
andb
test
cs
dec
cmp
xchg
inc
cld
jecxz
push
pusha
cwtl
mulb
mov
and
cmc
lahf
lahf
loope
xor
push
cmp
ret
addb
sub
aas
sar
sahf
push
xchg
dec
ja
dec
sbbb
dec
and
testl
subb
ss
adc
jle
loop
fmuls
subb
push
addr16
orb
and
xor
lods
mov
cmc
add
and
dec
push
xorb
add
sbbb
fisttps
jo
mov
das
outsb
arpl
sbb
lods
enter
add
inc
inc
test
inc
pop
sbb
mov
outsl
inc
jl
lea
inc
add
insl
mov
loopne
jge
hlt
aad
in
mov
lods
dec
and
inc
xorb
dec
iret
or
aam
dec
sbb
mov
jle
negb
dec
jecxz
cmp
stos
and
jg
imul
mov
mov
popf
add
xchg
cmp
je
clc
imul
loope
inc
test
cmp
sub
fs
cwtl
bound
inc
mov
xchg
fisttps
andb
inc
adc
mov
in
xchg
sti
je
andb
fnstcw
xor
fisubrl
rcrb
orb
je
cmc
in
xchg
nop
push
in
lahf
mov
cmpb
xchg
xchg
or
into
call
daa
gs
adc
inc
add
add
pop
sub
jmp
adcb
jns
xchg
push
jl
add
dec
adc
lea
pop
cmpb
lret
jae
lods
aam
iret
aaa
orl
jge
cmp
dec
mov
xchg
test
test
cmpl
adc
mov
pop
pop
push
pop
subl
test
jbe
out
adc
xorb
das
dec
subb
insl
inc
popf
sbb
jno
in
dec
mov
xor
pop
int
out
subb
lea
mov
jae
call
cltd
rolb
in
ret
add
inc
negl
sub
pop
icebp
xorb
mov
sbbl
or
push
sbb
jge
iret
pop
cmpsl
lahf
fsubs
scas
pop
adc
sarl
inc
and
push
bound
jo
sub
mov
mov
es
mov
out
lods
pop
in
sti
xchg
add
pusha
push
loope
xor
in
jo
out
sub
shlb
mov
xchg
cmp
xchg
addr16
js
or
cld
popf
mov
lahf
and
sub
xorb
xchg
pusha
sarl
out
jno
or
add
cmp
out
dec
filds
orl
ja
cld
xor
adc
andb
in
mov
inc
inc
push
sahf
and
sub
adc
je
fs
andl
ja
dec
xor
and
add
incb
mov
gs
jecxz
les
mov
pop
rolb
cmp
andl
sub
cmc
sahf
mov
inc
inc
sub
mov
sahf
nop
jne
pop
xchg
cmp
shlb
jnp
ret
fisttpl
std
imul
jbe
nop
call
out
xchg
mov
pop
cmpb
in
dec
mov
fnstenv
dec
lods
xchg
incl
scas
out
ret
in
xor
inc
and
aad
lock
add
pop
inc
imul
insl
daa
xchg
mulb
pop
dec
push
std
jno
pusha
das
and
andl
fdivs
outsl
adc
bound
pushf
add
xor
inc
pop
lock
scas
sbb
cmp
push
mov
jl
dec
mov
dec
add
and
and
fsubs
loope
stc
xor
dec
jle
test
jns
add
and
jne
mov
mov
add
mov
add
mov
pop
insb
jbe
mov
notl
push
into
pop
das
pop
cmpb
jle
mov
popa
js
mov
incb
dec
inc
add
pop
inc
addb
test
cmc
xor
popa
jl
inc
jae
xchg
fadds
insb
ficompl
xorl
repz
sbb
mov
jae
sbb
fbld
add
dec
inc
pusha
adc
adcb
popf
xchg
andl
push
fsubrs
mov
xchg
add
icebp
add
pop
in
bound
mov
xchg
pop
jle
fildl
sub
and
push
pop
cmp
adc
int3
jne
mov
xor
push
adc
loope
lahf
lcall
cmp
sub
cmc
and
roll
sub
mov
rolb
cld
adc
push
addb
insb
loop
mov
sti
or
mov
and
out
pop
lcall
adc
pop
adc
inc
icebp
orb
ja
mov
movsl
adc
push
adc
pop
add
es
fs
daa
xchg
rclb
sahf
rcrl
insb
inc
das
xchg
imul
or
lahf
popf
js
subb
std
insl
xor
fcmove
insb
xor
inc
cmpl
int
stos
push
sbbb
loopne
xor
mov
mov
inc
aas
subl
sub
call
out
dec
jno
xorl
mov
popa
andb
das
adc
mov
xorb
xchg
in
sbb
cmpsb
sahf
push
ja
and
bound
xchg
push
out
xlat
xchg
adcb
sub
or
pusha
jle
stc
stos
icebp
ret
repz
xchg
mov
pushf
addb
shrb
mov
and
xabort
ret
pop
xor
or
adc
pushf
subl
dec
mov
sahf
scas
fstl
bound
pop
xchg
flds
outsl
pop
mov
cmc
mov
movsb
adc
aaa
orb
mov
sub
aas
popf
shlb
insl
arpl
outsl
test
inc
punpckhdq
sarl
jmp
cli
push
inc
hlt
mov
movsl
mov
pop
scas
cmp
xchg
xor
push
xor
aad
xchg
addl
pushf
daa
xor
aas
leave
mov
add
push
add
push
push
popf
inc
xchg
jecxz
push
data16
stos
or
sbbl
enter
push
daa
mov
and
jmp
lods
jge
xorb
push
fcoms
mov
push
andb
dec
in
aad
inc
stos
or
sub
rcrb
cmp
imulb
inc
lds
pop
jae
movsb
subb
sub
xor
xor
pushl
inc
icebp
pusha
cmc
fldcw
enter
loope
mov
cmp
sub
out
aaa
cmp
das
stc
jno
call
addr16
inc
mov
test
nop
or
push
add
xor
jbe
cmpb
fldenv
cmp
out
adcb
lahf
stos
out
faddl
xor
push
orb
loopne
mov
cmp
and
inc
testl
cs
andb
aas
outsl
call
data16
pop
cmp
cmp
and
pop
sbb
xchg
xor
insb
push
subb
xchg
pop
xor
adc
sub
mov
andl
adc
sub
dec
push
sub
dec
loopne
xorb
xor
out
pushf
and
fadd
push
mov
sbbb
inc
jbe
mov
sti
cltd
add
pop
and
jbe
xchg
stos
cmp
ffreep
push
adc
jmp
rcll
or
loop
pop
rol
lock
lods
sub
jne
movsl
ret
addl
loopne
xor
inc
andb
repz
inc
push
fldcw
in
imul
es
xor
addb
xchg
and
jge
mov
lods
adc
mov
jb
xchg
push
jge
add
lahf
mov
movsb
dec
pop
dec
aad
movsl
push
cmp
mov
mov
ret
cmp
mov
xor
repz
mov
adc
cmpsb
scas
adcb
int3
xchg
insb
icebp
call
xchg
pusha
ljmp
add
insl
mov
dec
insb
gs
sub
xchg
mov
and
adc
push
jle
cmpsl
push
lcall
dec
lods
jecxz
sub
or
aas
jns
adcb
sbb
sub
jae
cwtl
mov
push
push
test
mov
lods
insl
pop
faddl
test
add
dec
addb
cmpsl
and
dec
loopne
push
test
inc
cwtl
jo
aad
lret
imul
mov
push
mov
clc
cmp
mov
lahf
xchg
arpl
out
adc
pop
xorb
sub
icebp
adc
cmp
xor
cmpsl
scas
lahf
push
xor
cmpb
orb
sub
pop
movsl
addl
cmpsb
mov
mov
xchg
ljmp
ss
jb
xchg
cmp
xor
mov
dec
xlat
xchg
mov
lds
xor
andb
xlat
ljmp
rcl
popf
mov
mov
sbb
add
push
inc
adcb
inc
cmp
sbb
dec
popa
push
cmpb
add
or
add
in
repz
addr16
jnp
dec
cmp
jle
xchg
inc
xorb
stos
stc
pushf
bound
roll
in
mov
addl
pop
xorb
jae
jle
mov
dec
dec
les
jge
jmp
imul
lods
pop
adc
jo
mov
cmp
add
lret
add
inc
push
xchg
lahf
adc
jmp
mov
sarb
rcll
jl
push
dec
js
insl
sbb
sti
out
loopne
repz
std
andb
cmp
in
jg
jns
loopne
test
or
push
inc
mov
sbb
jns
icebp
xchg
rcll
mov
scas
push
mov
jmp
sbb
cmc
mov
dec
addl
xor
rcrb
mov
rorb
add
stos
sbb
mov
adcb
and
xchg
les
lcall
imul
mov
dec
add
dec
mov
out
mov
inc
push
xorb
sbb
scas
dec
lods
xchg
cmpb
out
adc
xchg
sbbb
mov
nop
andb
cld
lods
mov
xchg
adcb
inc
fisttps
lcall
andb
cwtl
or
mov
adc
outsb
sbb
dec
mov
sbbb
adc
xor
adc
mov
test
sbb
loopne
sbb
outsl
aaa
clc
mov
mov
adc
addr16
ret
sub
ficoml
sbbb
filds
mov
mov
jns
pusha
mov
add
inc
into
cmp
jge
xor
leave
jp
mov
subb
xchg
bound
xor
loop
pop
sub
pop
push
cwtl
imul
adc
mov
dec
andb
sub
fdivs
divl
mov
xchg
insb
push
icebp
sahf
xorb
popa
rcrb
lods
cmc
clc
sbb
cld
cmpb
bound
mov
aaa
jae
add
sbb
pop
cmpb
aas
dec
sub
call
push
inc
push
jnp
shlb
adc
cmpb
and
aam
das
push
lahf
push
ret
inc
or
or
outsb
pop
jl
jp
cmc
push
fs
dec
sahf
fnstcw
sbb
inc
adc
roll
and
es
dec
add
xchg
push
jae
add
push
repz
mov
sbb
mov
adc
adc
add
stos
push
or
imul
jno
inc
cli
add
stos
gs
xchg
inc
pusha
mov
xorb
sbb
andb
icebp
adc
mov
ret
in
add
ficompl
andb
mov
orb
subb
das
in
ss
xorb
push
out
xor
or
pop
dec
pop
xchg
lds
clc
add
mov
aam
push
stc
push
ret
sub
push
cmpb
jbe
and
das
clc
jmp
cmpl
mov
addb
ljmp
dec
adc
dec
cmpb
jp
mov
sub
icebp
scas
xor
jnp
inc
mov
subb
hlt
iret
in
shl
sub
lods
mulb
sbb
or
or
cmp
add
add
dec
sahf
leave
inc
jmp
lds
mov
adc
sbb
mov
adcb
lahf
sbb
aad
enter
add
sbb
mov
insb
xchg
jmp
scas
leave
aam
mov
fwait
rcll
rorb
neg
cmp
bound
sti
orb
addr16
jo
popa
add
cmp
stos
dec
pop
push
dec
mov
popf
add
add
mov
and
jb
sbbb
lahf
xchg
rolb
jmp
inc
sahf
mov
cltd
rcr
jbe
mov
imul
pop
pusha
insb
xlat
test
rcrl
jo
or
mov
or
mov
push
xorb
xor
xchg
inc
cmc
xchg
jge
bnd
rcrl
stc
xchg
popf
jp
lret
out
andb
andb
or
outsb
shl
sbb
xchg
xchg
xchg
je
push
cmp
push
jp
add
test
push
daa
es
jae
pusha
faddp
movsb
lock
les
push
ret
stos
lea
testl
mov
repnz
cwtl
fstps
repnz
sub
scas
mov
test
nop
push
test
jle
in
mov
mov
gs
test
negb
push
into
xchg
push
adc
movl
mov
dec
sub
add
jb
inc
dec
leave
lock
and
cmpb
ret
adc
mov
lock
fildl
sbbb
dec
popf
or
into
push
stos
sub
andl
cli
jmp
rcrl
inc
sahf
jno
push
test
push
and
xchg
in
mov
orb
lahf
mov
xor
insl
mov
std
add
outsb
outsb
xor
pushf
sbb
xor
outsl
in
mov
push
sti
sub
js
lret
xchg
neg
push
pop
push
outsl
sub
xorl
and
inc
adc
mov
inc
cltd
ret
mov
inc
cli
scas
add
jl
and
das
sub
andb
fnstenv
mov
mov
rol
dec
inc
mov
out
sbb
sub
cmpsb
mov
xchg
cmp
mov
out
mov
mov
sbb
inc
xchg
xor
lcall
andl
adcb
fwait
sbb
repnz
jmp
adc
test
dec
dec
or
mov
and
subb
in
les
daa
jge
dec
xlat
and
out
cmpsb
mov
call
xchg
and
adc
lcall
lret
aaa
xor
jb
std
pop
mov
gs
xor
jle
push
ficomps
xorl
cmp
dec
in
and
or
mov
mov
xor
fnstcw
testb
cmpb
aad
adcb
dec
insl
xchg
xchg
sbb
mov
push
in
cltd
call
sbb
andb
fcmovnbe
sbbb
das
xor
sahf
stc
or
mov
test
pop
mov
xchg
ja
or
jmp
sahf
cmpb
popf
andb
add
jo
sahf
js
and
sbb
push
jns
sbb
mov
and
xchg
cmp
adc
stc
incb
outsb
dec
xchg
pushf
add
mov
add
cmpsl
aas
out
xor
insl
mov
mov
pop
mov
and
mov
or
push
inc
lea
rorl
subb
movsb
loope
test
jecxz
jp
mov
fisubl
pop
push
hlt
sub
inc
inc
rcll
sub
orb
xor
push
out
adc
shlb
xor
orl
out
inc
inc
aas
inc
and
leave
push
jns
cmp
scas
inc
test
stos
inc
imul
push
orb
xchg
bound
cmp
xchg
test
xchg
mov
shll
call
sub
je
test
xchg
pop
dec
jo
sbb
inc
jl
pop
dec
mov
mov
sub
mov
cs
xchg
lcall
jp
cltd
cmc
pop
pushf
movsb
xor
out
mov
or
int3
mov
sbb
subb
arpl
pop
mov
add
in
orb
push
lcall
mov
cmpsb
clc
sarb
test
and
push
clc
sbb
dec
cmc
sbbb
arpl
sahf
decl
js
mov
subb
jno
mov
lock
lods
inc
lods
mov
and
adc
xorl
dec
pop
ds
jmp
ja
mov
rclb
adc
or
loopne
add
or
gs
mov
fmuls
into
insl
sbbb
sbb
orb
sti
test
lock
jg
iret
loop
jns
push
aaa
xor
jb
mov
pushf
dec
shr
add
stc
orb
xlat
xor
dec
xchg
adc
fidivs
mov
cli
push
push
inc
loope
add
stos
movsl
xchg
cmpl
or
cmp
lods
test
hlt
dec
subb
mov
mov
leave
nop
inc
lock
in
ud0
shl
subb
pop
mov
test
push
in
xchg
addb
inc
or
dec
adc
push
loope
rolb
loopne
addl
sbb
cmpsl
xchg
movsb
jmp
sbbl
jl
data16
inc
jne
aad
xchg
xor
jecxz
push
aaa
ds
cmpb
icebp
loopne
xchg
pushf
loop
add
nopl
aad
lods
gs
fadds
xlat
and
xor
xchg
mov
mov
dec
stos
xchg
dec
inc
imul
js
jp
addr16
add
jge
sbb
clc
ret
add
imul
movsl
or
das
mov
fwait
out
int3
sbb
dec
pop
push
movsb
xor
inc
adc
rolb
lods
mov
pop
sbb
insl
loope
inc
orl
sbb
push
addr16
adcb
push
out
cmpb
stos
push
xchg
outsl
into
push
adc
jl
lret
out
pop
push
sti
cmovno
pop
or
int3
push
push
sbb
xor
pushf
dec
lahf
jb
dec
lcall
nop
subb
xchg
fildl
inc
daa
inc
fcmovnbe
mov
and
xchg
andb
insb
inc
ss
std
xchg
adc
adcb
sti
pop
jmp
or
sahf
fldl
mov
sub
jbe
add
adc
push
aaa
pop
or
mov
inc
cwtl
shll
addb
xchg
insl
push
pusha
stos
jo
xor
pop
cmp
shl
std
mov
xchg
popf
jmp
dec
add
push
jb
subb
call
orb
jnp
cmp
dec
cmp
call
push
lret
xchg
xchg
scas
addr16
push
shlb
mov
out
outsl
push
cli
adcb
rorl
mov
ljmp
pushf
mov
es
mov
xchg
mov
mov
inc
shll
mov
pushl
addr16
in
inc
pop
loopne
dec
pop
out
sub
popf
xor
pop
sub
mov
cmpb
lahf
lahf
cltd
or
jo
pop
mov
pop
lds
adcb
sbb
mov
mov
mov
adc
dec
fwait
sbb
popf
xchg
es
xchg
in
flds
das
clc
xor
shl
insl
dec
pusha
test
jae
pop
push
pop
inc
mov
movsl
inc
and
loope
mov
cmpsl
lea
test
mov
inc
mov
lahf
fcom
adc
orb
incl
inc
xlat
nop
pop
andb
negb
xor
mov
jmp
mov
jns
sub
pop
arpl
div
loopnew
adc
cs
cld
pop
sub
or
fwait
cmp
push
jno
xchg
les
dec
jmp
adc
aas
dec
loop
adc
fldl
andl
xor
data16
enter
push
ficompl
scas
adc
sub
adc
adc
cmp
outsl
mov
movsb
arpl
sbb
xor
xor
pop
dec
push
push
std
icebp
cmpb
adc
icebp
lods
cmpb
out
mov
js
jae
push
sti
push
ljmp
pop
xor
mov
bound
inc
fxch
sub
in
or
cmp
iret
jbe
aaa
mov
push
dec
xorb
jne
leave
arpl
andb
dec
hlt
mov
cmp
test
or
aad
inc
lock
push
push
xorb
mov
ret
lret
mov
and
sbb
mov
loope
ds
out
adc
push
and
add
and
es
andb
jns
jb
scas
fmuls
repz
and
or
mov
push
cmp
xorb
std
pop
aam
mov
mov
into
sbb
out
jo
dec
sahf
pop
dec
je
sbbb
popf
test
xchg
dec
subb
dec
sbb
mov
imulb
insl
pop
cltd
int
fdiv
mov
pushf
lods
xchg
test
inc
les
cmpsb
lcall
jno
outsl
bnd
xor
cmp
loopne
mov
add
mov
dec
cli
dec
das
call
jmp
and
in
scas
adc
dec
and
jp
sbbb
inc
pop
jg
xchg
xchg
push
in
inc
test
cmp
fdivrs
dec
mov
cmpsl
ja
add
subl
cmp
dec
in
mov
push
mov
adc
xor
and
sub
add
mov
cltd
adcb
mov
sbb
or
add
inc
lahf
stos
fildll
shrb
xchg
sbb
xor
gs
jbe
repnz
les
mov
ja
insl
mov
and
jge
sbb
sub
mov
in
cltd
test
xorb
hlt
insl
movsl
imul
lock
or
add
testb
xchg
loopne
cltd
push
and
xchg
mov
addl
subb
notb
stos
gs
lret
push
out
sbb
xchg
mov
ja
stc
cmp
pop
inc
and
mov
jbe,pn
adc
xorb
stos
aas
stc
jp
mov
mov
add
or
stos
das
push
shl
js
aam
jno
in
add
xchg
or
sbb
jb
decl
sahf
push
adc
lods
movsl
sbbb
fmull
jb
xchg
scas
sahf
xchg
subb
mov
enter
outsb
sub
adc
cld
pusha
std
push
outsl
loope
cmpsb
aad
mov
mov
cs
mov
mov
inc
push
test
cmpsl
dec
push
push
xorl
and
imul
and
jle
xor
lahf
push
inc
cmpsl
shrl
scas
movsb
adc
pop
mov
loope
lret
mov
push
inc
and
pop
mov
dec
fnstcw
adc
dec
inc
push
push
sarb
mov
jl
sub
fistl
dec
cmp
jg
rcll
lock
insb
subb
xchg
adcb
test
adc
aad
orb
test
jae
push
push
inc
push
push
leave
into
pop
clc
mov
mov
push
comiss
jbe
mov
std
mov
pop
lcall
xor
mov
add
lods
stc
mov
leave
sbb
sub
testl
stos
and
pop
sbb
out
imul
xor
or
movsb
mov
add
pop
das
outsl
inc
cmpb
inc
imul
and
mov
mov
sbb
repz
sbb
js
cmpl
jmp
sub
fdivrs
cmp
cmpb
adc
arpl
xlat
or
pop
inc
in
xchg
pop
scas
incl
mov
mov
mov
mov
imul
jp
in
out
pop
bswap
subb
ss
dec
aad
andl
fcompl
addb
xlat
je
or
xchg
fcoml
xor
out
pop
xchg
mov
pusha
rcrl
inc
ffree
out
notl
sbbl
mov
lret
xor
sahf
int
add
xchg
xor
cmpb
xchg
orb
adc
cld
mov
mov
add
xorb
test
cmpsl
adc
add
repnz
xchg
in
in
xor
into
loopne
aam
subb
sbbb
push
loope
jbe
lcall
sub
pop
pop
mov
addb
or
in
mov
adc
sub
fs
adc
dec
inc
punpckhbw
je
js
subb
scas
xchg
cmpb
nop
sahf
ljmp
push
aad
cmp
push
fninit
xor
sbb
add
jns
mov
xor
jp
jo
movsl
mov
xor
fnstsw
mov
add
lcall
test
into
out
std
add
shlb
xchg
mov
xchg
jmp
in
rorb
dec
rolb
lds
orb
jb
mov
adc
or
icebp
jbe
test
xorb
adc
out
rcl
js
dec
xchg
sub
adc
fbstp
mov
xor
out
mov
mov
xchg
mov
sub
mov
andb
popf
repnz
mov
rcrb
popa
cmc
pop
cld
jb
inc
adc
xchg
inc
subb
je
xor
andb
mov
into
loopne
iret
adc
scas
addb
dec
andb
jnp
loopne
jbe
xchg
imul
xchg
faddl
jp
movsl
pusha
subb
mov
aas
dec
pop
les
popa
icebp
or
fiadds
cld
cmpb
dec
icebp
stos
loope
jne
mov
sbb
or
stc
loop
sbb
ficoml
movsb
sbb
xor
jb
cmc
data16
cmpb
mov
ror
push
std
in
cmpb
mov
add
xor
lods
lock
xchg
loop
mov
icebp
aad
mov
mov
pop
xor
and
sahf
flds
jnp
test
fisubs
sbb
movb
add
add
test
jmp
imull
xor
or
mov
sbb
sti
loopne
or
aam
dec
cmpsl
lahf
inc
and
add
addb
filds
lea
and
mov
push
into
addl
xchg
cwtl
ss
lret
data16
ret
xorb
inc
xchg
loopne
xchg
addb
jg
xchg
or
int3
mov
imul
xchg
shlb
sbbl
jbe
mov
inc
out
ficomps
cli
cmp
or
push
sub
or
lahf
xchg
aaa
fs
or
jbe
sub
adc
decl
sbb
lahf
sub
jbe
xor
insl
clc
icebp
mov
mov
shrb
cmp
pop
sbbb
sub
inc
fidivrl
lret
test
sahf
adc
mov
adc
rol
js
cli
in
sub
or
loop
cmp
inc
push
lds
orl
mov
loopne
insb
or
js
sbb
stc
cmp
rcrl
out
jbe
sub
xor
mov
pop
pushf
add
xor
lcall
push
lds
push
jg
lret
ret
jb
xor
std
inc
subb
mov
jmp
cmpsb
push
cwtl
push
mov
mov
cmpsl
adc
push
or
push
mov
in
jge
cmpl
jecxz
cli
jno
subb
adc
xchg
outsb
testb
cmpsb
call
jno
xor
xchg
test
xadd
je
push
and
sarb
cmpsb
inc
js
push
cmpb
mov
push
testl
pop
in
add
jbe
mov
arpl
add
pop
sarl
bound
in
fwait
sub
pushf
andb
rcr
sbbb
dec
mov
xor
sti
xor
xchg
inc
call
sub
rcrb
cmp
mov
in
mov
and
mov
pop
push
mov
jo
subb
add
push
and
movsl
push
daa
loopne
dec
add
sbb
sbb
pop
leave
sahf
outsl
push
fiadds
push
out
xorl
lcall
sahf
push
pop
in
xchg
inc
js
mov
mov
xchg
aas
dec
repnz
cmpsb
mov
orb
jo
sub
mov
incb
es
dec
sbb
mov
cld
xchg
cmpb
mov
or
sarb
cwtl
sbb
les
or
enter
mov
pop
push
sahf
fwait
mov
inc
sub
imulb
mov
add
and
sub
mov
sbb
push
subb
mov
and
jo
nop
je
daa
js
outsl
gs
dec
shrb
aad
mov
das
insb
movl
mov
sbbl
inc
and
mov
mov
test
dec
mov
add
add
cltd
fcomps
add
mov
negl
xor
xlat
jb
hlt
cmp
aad
dec
jle
mov
and
sbb
sbb
rcl
paddb
imul
adcb
sub
addl
je
dec
cmp
push
imul
loope
popf
and
cmpb
pop
scas
sti
andb
mov
sub
lahf
xor
out
rolb
addb
pop
push
sbbl
pop
test
jno
mov
push
sarb
scas
add
loope
and
mov
lods
test
add
outsb
add
xlat
fcoms
push
adc
mov
andb
jge
jp
pop
push
icebp
push
xchg
int
rcr
sbb
xor
push
subl
addb
insl
and
ret
scas
fsubr
dec
shl
pop
xor
xor
mov
xor
int3
adc
inc
orb
jle
negb
test
dec
iret
shlb
pop
xchg
and
popa
rorb
push
mov
mov
scas
orb
inc
in
pop
lock
and
and
and
pop
je
pop
xor
shl
aam
pop
cmp
int
int3
js
mov
dec
dec
pop
imul
lret
jge
or
cld
imull
sub
xor
insl
in
sub
mov
mulb
jl
mov
lock
xor
add
pop
push
call
int
and
lret
dec
int3
push
cmpl
shl
jbe
dec
jg
or
push
sub
mov
or
inc
cmc
pusha
in
icebp
movl
xorb
add
xor
sbb
adc
pusha
mov
lret
xor
int3
mov
je
fbstp
mov
mov
xchg
fcoml
mov
xchg
and
lret
dec
sbb
push
mov
int3
test
add
fstpl
or
ljmp
jae
scas
adcb
xlat
lds
mov
imul
vpmadcswd
icebp
jo
jnp
nop
iret
cmpb
dec
lock
adc
orb
jp
adc
push
and
xchg
adc
xor
loop
xchg
inc
mov
pusha
cmp
and
cmp
test
popf
int3
adc
xor
sarl
cmp
jbe
push
jne
cmpb
xor
js
add
jae
or
lea
call
and
aad
sarb
std
movsl
outsl
insb
pop
flds
xorl
adcb
je
lds
sub
sbb
jne
push
addb
out
add
clc
pop
shrl
mov
jmp
xchg
mov
das
adc
jo
shr
sbb
andb
out
and
pop
cltd
roll
fwait
lock
jmp
jg
stc
push
sub
seta
push
lods
lahf
and
pusha
jo
fstpt
and
xchg
leave
xorl
mov
fsts
outsb
adc
lret
loop
cmp
xchg
jp
lock
add
adc
mov
cmp
and
mov
jle
mov
lods
xor
hlt
scas
enter
cltd
mov
xchg
push
push
mov
inc
push
loopne
pop
mov
cmpb
sub
push
dec
xor
cmp
addr16
or
rorb
rol
mov
add
sbb
std
sub
iret
pop
cmp
into
or
mov
rolb
andb
pop
dec
mov
sub
inc
shll
pop
pop
fs
inc
popf
lock
adcb
or
add
in
cmpl
push
cmpsl
push
rclb
push
out
fiaddl
ffreep
and
cli
loop
mov
adc
push
lahf
sbbl
xor
xor
mov
subb
xchg
loop
inc
mulb
add
cmp
pop
dec
or
jo
scas
cmpb
punpcklbw
mov
hlt
xchg
jne
sbb
fadds
subb
test
addb
roll
stos
popf
xorb
cmp
movsl
and
xchg
push
test
aam
loop
add
mov
ljmp
outsl
out
lds
sbb
xchg
sbb
not
je
cmpb
push
movb
out
lock
sbbb
aaa
popf
test
mov
cmpsb
or
enter
mov
js,pn
ror
out
adc
pop
sub
lock
das
mov
nop
jae
test
jle
aaa
pusha
in
cmc
xchg
in
push
add
mull
and
mov
ds
sar
sbbb
flds
mov
cmpsl
loopne
sbbb
imulb
in
andb
call
sbbb
pusha
es
incb
outsb
sbb
push
push
mov
jg
and
mov
rorb
addr16
pop
lock
cwtl
mov
jnp
cld
xchg
sbb
cmpsb
push
xor
sub
repnz
test
test
inc
sahf
push
add
es
outsl
scas
cmpl
call
mov
jns
cwtl
rorb
dec
ret
mov
jno
int3
mov
pop
in
mov
dec
andl
sub
inc
ljmp
mov
std
fsubrp
lret
sbbb
out
mov
xor
iret
sbb
sbb
lahf
jae
pushf
inc
ficoms
orb
mov
mov
mov
ret
roll
add
adc
repnz
cmp
hlt
stos
jb
andb
mov
or
sub
cmp
je
xor
lahf
cmp
mov
push
movl
cmpb
adc
mov
fmull
xchg
addb
pushl
outsl
add
xlat
lods
js
daa
xor
add
cld
cmp
arpl
shrl
fists
nop
in
push
or
or
or
sti
mov
sbbl
imul
adc
enter
les
and
sub
test
or
orl
insb
inc
mov
push
or
add
out
mov
xor
mov
loopne
dec
adc
or
xor
xchg
dec
pop
mov
cmp
subb
ret
xchg
in
and
sub
andb
xchg
fcompl
or
lcall
and
mov
lock
or
lahf
adc
mov
xchg
mov
pusha
imul
xchg
adcb
js
push
jo
addb
pop
cld
shl
orb
adc
sub
out
fiadds
andb
sub
insl
dec
dec
cmp
cmc
outsl
push
sbb
add
mov
xchg
pushf
roll
in
nop
popa
lods
push
fwait
and
lahf
inc
movsl
xchg
je
subl
adc
pop
adc
cwtl
pop
andl
sub
adc
lcall
add
stos
mov
cmp
shl
sub
sbb
push
jp
xor
mov
test
outsb
adc
mov
adc
mov
aaa
adcl
add
push
cmp
les
loop
insb
sbb
lahf
xor
pushf
rcr
xchg
filds
in
mov
adc
js
push
andb
fwait
mov
ja
in
mov
mov
mov
adc
dec
out
sbb
pop
xlat
mov
outsb
xor
xor
mov
sub
lea
cmpsb
or
jg
and
add
mull
loopne
sub
scas
lock
js
xchg
cli
inc
xor
ljmp
inc
mov
xchg
dec
stos
jb
xor
pop
fsts
fs
fildl
mov
int
ja
test
cmpl
lds
icebp
inc
jb
xchg
adc
mov
out
mov
xchg
sub
and
rcll
orb
pop
inc
andl
xchg
xchg
sahf
xchg
and
in
pusha
mov
mov
flds
fists
xchg
xorb
push
inc
sbbb
lea
repnz
or
jo
loope
sbb
cmpb
mov
arpl
inc
fs
and
subl
push
adcl
popa
jb
repz
test
sbb
push
pop
scas
push
outsb
xor
lock
cmp
cltd
lcall
mov
mov
cmpb
or
inc
rorb
subb
leave
in
fstpt
shrb
cmp
in
orb
xchg
sub
adc
add
inc
inc
push
xchg
loope
dec
or
lea
bound
pop
testl
adc
inc
jg
sahf
daa
addr16
push
xor
in
inc
jo
sbb
xchg
xor
subb
add
sbb
sub
mov
cmpsb
dec
mov
test
in
jp
dec
xchg
call
adc
xorb
mov
mov
shrb
jecxz
test
or
jo
sbbb
add
cli
fwait
jmp
hlt
and
test
cmc
and
inc
mov
les
mov
mov
in
dec
sbbb
cld
jmp
mov
fdivs
pop
repz
mov
push
sbb
mov
filds
bound
mov
dec
insb
or
mov
rclb
pop
movsl
adcl
test
xchg
das
and
test
incb
int3
or
jno
sub
dec
orb
cmp
mov
in
les
or
jne
outsl
mov
mov
pop
insb
inc
rclb
lret
dec
push
fisubs
dec
int3
idivb
pop
movsl
xchg
ret
pushl
mov
sbbb
jp
sbb
lret
je
pusha
notl
mov
imul
dec
pushf
add
xchg
cmpsb
fildl
jg
addb
adc
popf
jb
cmp
popa
in
xchg
incl
movsb
cmp
lret
adc
subb
scas
fwait
mov
hlt
or
loope
loopne
pusha
push
andb
cld
out
stc
mov
pop
push
and
shrb
add
repz
orb
ja
movsl
std
mov
sbbb
xor
pop
repnz
outsb
xor
adcb
add
pop
sbbb
cmp
push
outsb
das
cmp
aam
mov
dec
jno
loop
aas
subb
add
insb
hlt
popl
into
inc
push
or
add
ss
dec
fnstcw
jns
pop
adcb
xchg
and
mov
mov
shll
sbbb
sbb
andb
push
mov
nop
test
lds
push
orb
outsb
les
mov
call
jmp
pop
sbbb
repnz
rol
insl
xchg
mov
sbb
popf
out
cmp
in
or
jnp
sahf
push
popa
add
sub
aaa
mov
insl
addr16
andl
sbb
xchg
test
inc
stc
test
mov
pop
push
and
mov
addb
push
cmp
dec
roll
adc
loope
dec
pop
lret
andl
mov
xchg
enter
ljmp
xorb
and
cmp
pusha
cmpsb
sbb
fwait
popf
mov
xorb
mov
sbb
xor
mov
clc
xchg
push
pop
inc
or
xchg
je
xor
addb
and
mov
cmp
fmul
jl
sbb
test
leave
jg
stos
push
and
pop
lahf
jo
push
lret
test
add
jb
pushf
push
icebp
ret
sarb
and
pop
orl
std
dec
mov
andb
sti
mov
je
jb
cmp
movsb
dec
inc
sbb
mov
out
ret
dec
push
lret
xor
mov
pushf
imul
imulb
inc
xchg
jp
jne
icebp
cmp
or
push
jl
and
sbb
jb
cs
into
dec
xlat
les
fistps
movsb
cmp
pop
repnz
mov
addb
and
lret
jae
jge
popf
mov
shll
addb
out
stos
bound
addb
mov
push
notl
or
jo
adcb
cmp
cmpsb
and
ds
lret
adcb
pushf
loope
xchg
dec
sbb
lea
bound
fs
adc
jo
sbbb
jle
shlb
outsl
mov
xor
stc
lods
and
test
orb
inc
add
sbbb
sub
or
add
jns
cmpb
xor
pushf
fildl
xchg
xor
inc
inc
popl
rcr
movl
and
dec
outsb
inc
jbe
ss
andb
and
or
mov
mov
scas
imul
push
cmp
or
push
test
mov
js
jns
addb
sbb
push
adcb
lret
movsl
jbe
ss
or
nop
clc
rcr
jmp
adc
jo
sbb
add
shlb
push
js
jbe
rcl
xor
sub
pop
outsl
cmp
dec
cmc
aas
mov
cwtl
cli
inc
mov
push
orb
cmp
xor
aad
mov
test
aas
aam
xorl
sbb
mov
jmp
lods
enter
subl
popf
mov
shrb
mov
aas
in
cmpb
or
sbb
push
ljmp
and
mov
inc
sub
cmpsl
push
push
adcb
sbb
subb
fisttpl
or
jb
fcompp
lea
inc
aaa
jle
and
iret
fsubl
mov
fwait
jnp
mov
sub
leave
sub
jns
fstp
inc
lock
insb
push
repnz
repz
sbb
sbbb
inc
dec
lods
data16
mov
push
pop
gs
movl
jo
repnz
mov
fmuls
adc
ja
aam
sbb
decb
mov
cmp
ret
xor
idivl
inc
lods
dec
adc
push
jno
jb
add
icebp
jne
jo
mov
iret
int3
mov
xchg
ret
jmp
pop
cmpb
ficoms
das
ss
cmpb
bound
add
daa
adcb
and
sbb
test
enter
loopne
testb
enter
push
add
cmp
jne
imul
faddl
jo
push
sub
pop
js
sarl
inc
or
sahf
clc
adc
cmp
rorb
pusha
outsl
mov
adc
sbb
mov
int
loopne
xor
test
sbbl
add
cli
es
test
push
cmp
and
ret
mov
dec
je
js
sub
and
xorb
roll
es
mov
addb
rorl
addb
test
xor
mov
xchg
jp
stos
sti
orb
adc
xor
popf
repz
js
lods
cwtl
rcrb
and
in
addb
add
subb
out
fistpll
jecxz
mov
addr16
cmp
fstp
movsb
test
sub
pop
push
loopne
into
pop
subb
notb
jge
movb
cltd
fiadds
cwtl
inc
cmpxchg
inc
and
aas
outsb
jns
imul
notl
sbb
mov
scas
stc
sub
cmpb
pop
mov
xchg
nop
nop
add
stos
and
cmp
out
and
cmpb
add
popf
rolb
cmp
pop
adcl
jecxz
push
pop
mov
mov
jno
lahf
dec
mov
add
dec
orb
in
ret
sbbl
orb
data16
jae
sub
fbstp
xor
aad
ja
mov
xor
cmp
cmp
xlat
filds
aam
int
xorb
icebp
in
out
mov
inc
loopne
movsb
mov
xchg
lods
mov
push
sub
mov
xorb
mov
sub
lahf
and
and
inc
dec
decl
ljmp
inc
mov
and
mov
cli
mov
push
lret
hlt
mov
cmp
sbb
adc
shlb
xchg
inc
xor
or
xchg
mov
cmc
outsb
jb
adc
movsl
imul
cmp
aas
xorb
mov
dec
leave
mov
bnd
mov
mov
in
pop
arpl
orb
jge
subb
imul
mov
divb
sbb
movsb
into
andb
out
jae
xchg
jle
subl
add
push
scas
mov
js
or
repnz
adc
sbb
pusha
lcall
push
pop
jns
in
adc
mov
dec
shll
xor
pop
lock
loop
mov
jle
loope
sub
xchg
add
push
adc
jle
shlb
les
xchg
mov
sub
xchg
roll
mov
add
mov
add
stos
jmp
and
jae
cwtl
push
pushf
pop
cmpsl
dec
shrb
sbbb
int3
stos
sub
jne
ss
xchg
lahf
cmc
iret
cs
jle
insb
push
adc
cmp
out
adc
xor
xchg
inc
xorb
fucom
cmp
pop
into
faddl
test
sbb
xorb
aam
adc
inc
add
xor
dec
imul
add
add
push
std
adc
enter
orl
clc
or
push
and
push
cmp
stos
mov
mov
addb
mov
xchg
mov
test
insl
lcall
dec
xchg
fcmovnb
push
jo
sbb
test
jmp
ficoml
mov
pop
cli
out
into
dec
xchg
nop
push
cmp
andb
lcall
das
inc
daa
cs
leave
pop
inc
push
jne
or
pop
xchg
jge
test
dec
fisubrl
aam
xchg
out
jmp
jnp
sub
lcall
cmp
push
sbb
xlat
neg
mov
inc
xor
inc
push
and
ret
mov
inc
or
xorb
sub
ss
dec
cmp
mov
out
cmpsb
movl
orb
gs
mov
rorb
orb
testb
cmp
sbb
sub
mov
mov
ja
xor
lock
movsl
cmpl
mov
inc
fiaddl
lods
xchg
mov
orb
add
int3
mov
inc
sbb
push
pop
xor
jbe
push
push
or
andb
leave
lret
or
ret
sub
xchg
xor
cmp
adc
test
xchg
add
cltd
mov
dec
jno
cmc
imul
add
sub
adcb
adc
insb
or
inc
adc
push
adc
stos
or
xor
adcb
dec
or
fstl
stos
add
inc
mov
inc
test
popf
sub
jns
shll
push
test
lods
ret
filds
out
orb
mov
addb
sahf
mov
inc
cmp
inc
out
aaa
sbb
dec
and
sbbl
xchg
leave
stc
fildl
cmp
addb
xor
cmp
jmp
addl
adcb
les
lock
fidivl
add
lea
stc
dec
cmp
sti
aas
lock
loop
xchg
or
sbbl
int
sbb
lea
mov
lret
clc
push
and
cmp
inc
or
subb
cld
push
sahf
jne
pop
inc
mov
cwtl
pop
dec
fldt
mov
xor
jae
jmp
or
cmp
xor
mov
fadd
fldl
scas
cli
cmp
inc
or
cmp
test
nop
shrl
inc
hlt
jo
xorb
addb
inc
lock
ljmp
jno
nop
add
add
pusha
ret
out
lea
int3
mov
jge
movsl
lds
jle
repz
mov
push
call
outsb
xchg
sub
dec
xchg
sbbb
and
push
pop
xchg
mov
mov
orb
loope
or
adc
adcl
pop
lret
xor
in
popa
and
sahf
sbb
js
adc
dec
jge
cmp
push
mov
hlt
mov
push
sbb
loope
mov
sub
mov
xchg
leave
faddl
mov
push
adc
in
sbb
pushf
cltd
subb
xchg
out
xchg
add
sbb
push
jl
fsubl
xchg
mov
xchg
and
ljmp
or
fldl
xor
sahf
shll
cld
lods
orb
jle
xchg
push
fwait
and
push
sbb
es
pop
mov
mov
addl
je
xchg
lods
push
icebp
xor
inc
xlat
xorl
mov
bound
nop
sub
cmpb
fnstenv
mov
add
subb
fbld
mov
pusha
adc
fwait
arpl
mov
mov
adcb
lods
lds
subb
pop
sub
dec
mov
repnz
into
cmpb
push
pop
jae
iret
popa
dec
xor
sub
enter
jb
test
mov
mov
cmp
mov
sbbb
sbb
pushf
div
jnp
call
push
repnz
mov
sub
in
xchg
mov
arpl
push
sub
jmp
adc
pusha
mov
push
imul
mov
mov
arpl
sarb
int3
js
cmpb
aam
mov
adcb
pop
adc
in
sbb
repnz
and
les
sbb
divb
enter
lcall
or
add
add
loope
imul
fnsave
rolb
stos
jecxz
add
sarb
pop
repnz
adc
fsubs
inc
xorb
sbb
dec
xchg
fstl
daa
sarl
mov
xchg
mov
or
xlat
pushf
clc
dec
cmp
or
orl
push
cmp
cmp
dec
lret
addb
inc
push
jno
fistl
cwtl
arpl
push
popl
rcl
std
or
test
ret
pop
movsl
adcb
mov
pushf
xchg
add
mov
xchg
inc
clc
andb
add
mov
push
dec
incb
jns
xchg
icebp
jno
stos
shll
stos
inc
push
sub
cltd
cmp
mov
xchg
cmc
pop
cwtl
andb
ja
clc
jns
daa
mov
je
xchg
xor
add
sahf
sub
cltd
fildll
add
lock
mov
dec
cmpsl
fmul
add
xorb
push
andb
lods
add
hlt
subl
cs
pop
mov
ja
bound
add
mov
cmpb
mov
addb
outsb
push
push
hlt
pop
es
jae
insb
cmp
fwait
lahf
jo
aaa
sub
lods
cmp
lods
xchg
mov
xchg
mov
sbb
adc
fildll
mov
in
andl
out
xor
rcrl
push
xorb
and
pushf
or
xchg
les
orb
imul
dec
roll
call
mov
sub
lsl
orl
push
addr16
sbb
mov
jae
popf
shlb
xchg
not
int
push
jns
sub
sub
push
push
xchg
mov
aas
xchg
mov
nop
enter
popf
mul
mov
push
xorb
pop
outsl
lahf
addl
push
loope
xor
vphaddbd
mov
popa
mov
scas
rcrb
int3
jns
pop
adc
push
dec
push
aas
xchg
sbbl
dec
inc
lret
andb
out
fadds
repz
lods
aad
outsl
mov
add
push
loope
xchg
scas
andb
and
xchg
sub
lcall
push
xchg
inc
iret
xorb
sub
cmp
shlb
cmp
pop
addl
jg
add
inc
lret
faddl
pop
test
cmp
orl
and
fwait
dec
stos
add
adc
xchg
lcall
mov
cli
or
sbb
mov
movsb
add
mov
sbb
cmp
xchg
jl
jg
xchg
out
into
lcall
cwtl
xchg
mov
aad
mov
iret
inc
and
into
stos
push
xchg
jno
fwait
push
orb
hlt
dec
xchg
pavgw
cmp
xorb
movsb
fldenv
xchg
orb
push
lock
mov
pop
xor
out
mov
jl
xor
in
testb
das
push
jp
push
push
pop
dec
jb
scas
ja
incl
inc
popf
test
add
out
dec
xorb
mov
scas
mov
fdivs
and
test
cli
test
xorb
sbb
fisubs
mov
xor
je
clc
mov
outsb
stos
subb
or
out
xlat
cmpb
gs
jl
xchg
lea
add
test
xchg
fs
inc
daa
adc
stos
cmpb
fwait
jae
pop
and
stos
mov
xor
stos
mov
mov
xlat
andb
sarb
mov
imul
push
mov
jl
lret
cltd
push
jecxz
pop
std
hlt
idivb
cmp
and
inc
mov
insl
out
push
or
loop
loopne
mov
xor
subb
aaa
mov
loopne
lods
jnp
adc
mov
sbb
inc
sbb
sbbb
cmp
xchg
mov
pusha
scas
out
add
insb
sbb
or
fistl
lds
mov
je
cltd
mov
iret
sbb
lahf
sub
fcomp
or
and
mov
test
xchg
pusha
sbbb
les
jb
test
xchg
push
sbbb
sbb
lock
xor
jno
andb
hlt
outsb
adc
outsl
ret
inc
push
dec
jne
andb
mov
clc
jb
cmp
add
and
sarl
andb
inc
cmc
cld
cmp
xorb
sub
cmp
insb
stc
hlt
adc
xchg
cld
in
movsl
pusha
stos
sbb
mov
cwtl
sbbb
imul
pop
cmc
rolb
ffree
cwtl
pusha
lods
das
sbbb
push
pop
ret
mov
imul
inc
or
fcmovne
cmpb
pusha
bound
enter
lahf
cli
icebp
cmp
dec
push
mov
roll
or
shll
xorb
fnstenv
sbb
addr16
pusha
cmp
fmull
adc
add
push
mov
ret
dec
jo
xor
adc
mov
les
ficompl
aad
aas
pop
repnz
std
popa
mov
shlb
or
inc
imul
into
xchg
aaa
jb,pn
push
movsb
out
fiadds
adc
jno
adc
xchg
icebp
imull
jp
xorb
pop
sar
inc
and
adc
sbbl
cmp
jne
jecxz
mov
shrl
xor
pusha
addl
loopne
inc
fistl
mov
enter
mov
add
addb
or
cmpsl
inc
loope
int3
movsb
inc
addb
sti
arpl
xchg
andb
jae
aam
or
mov
add
dec
cli
subb
mov
rolb
sbb
filds
mov
add
ret
out
push
push
or
xlat
mov
sbb
pusha
mov
sub
sbbb
nop
add
jb
lock
add
shlb
iret
pop
lret
jne
sbbl
pop
movsl
test
cmp
int
jecxz
mov
orb
mov
sti
adc
add
jnp
jp
mov
push
in
arpl
addb
lcall
xlat
scas
inc
in
ss
test
in
cmp
jmp
js
call
sbb
in
inc
subb
jbe
jno
mov
les
movsl
inc
loope
xchg
andb
loop
popf
andb
orl
jae
shlb
mov
mov
je
andb
dec
imul
daa
and
and
imul
ljmp
imul
xorb
icebp
adc
mov
lret
mov
mov
in
add
mov
cmp
dec
addl
dec
push
dec
lods
das
adcb
lret
int3
cwtl
cmp
rcrl
shrb
sahf
movsb
mov
push
sbb
pop
or
inc
pop
adc
mov
mov
iret
loop
pop
dec
insl
or
sub
xchg
mov
in
lods
jno
inc
pusha
jecxz
test
sub
jp
mov
lret
xchg
adc
jg
mov
adc
dec
cmp
adc
adc
adcb
icebp
fadds
inc
das
xchg
cmp
jo
sbb
mov
inc
in
js
jge
subb
or
cmpb
test
push
add
inc
mov
cmp
lods
pop
lahf
sub
test
push
fincstp
std
out
shl
pusha
mov
cmp
int3
andb
fwait
cvtps2pd
lcall
sub
call
push
cltd
sbb
cmpb
mov
stos
pop
jo
xchg
mov
mov
mov
jg
and
inc
cmp
xchg
bound
orb
lods
jecxz
pop
push
addb
or
test
xchg
xor
data16
dec
mov
add
adc
in
rorb
orl
jno
jg
jl
xorl
insb
aaa
mov
dec
xor
xor
insl
xchg
xchg
arpl
inc
sbbb
aad
and
inc
inc
out
push
xor
and
pushf
call
dec
shrb
mov
stc
js
and
xchg
xchg
jle
daa
sbbb
pop
popf
mov
sub
adc
jl
das
mov
sbb
sahf
or
dec
adc
mov
pusha
pop
ljmp
rcr
adc
cmpb
cmpl
adc
xor
add
orb
imul
dec
sbb
cltd
push
aaa
xor
cmp
fdivrs
sub
out
pushf
es
add
inc
loopne
jbe
mov
bound
daa
sbbb
lcall
push
sbb
int3
dec
and
subb
orb
sahf
jl
mov
cmp
xchg
mov
into
popa
add
cld
fwait
xchg
sub
addb
mov
roll
pusha
jge
dec
or
cs
stos
pop
mov
xlat
orb
pop
cmpsb
jne
xlat
cmp
test
mov
mov
mov
incl
mov
clc
pop
xchg
mov
or
pop
or
leave
add
sbb
loopne
out
aaa
adc
stos
mov
cmp
hlt
dec
xchg
mov
inc
icebp
icebp
xorb
push
fs
mov
inc
xorb
fldpi
in
xchg
stc
int3
and
jp
stos
mov
xor
xor
sbb
jle
andb
mov
out
dec
iret
push
data16
xor
test
ret
call
xchg
aad
sub
sub
sbb
mov
xchg
bound
xor
cmp
or
mov
pop
jns
mov
lcall
pop
fdivs
mov
sub
loopne
mov
cmp
cmp
mov
mov
mov
inc
mov
cmpsb
and
sbb
orb
jp
icebp
mov
xchg
daa
jns
pop
inc
imul
adc
cld
test
inc
sbbb
hlt
add
call
mov
outsb
pop
icebp
cmc
scas
xchg
cmp
sub
std
xor
mov
mov
add
jl
out
sub
dec
push
insl
xor
call
cmp
test
gs
stos
mov
out
cmpsl
inc
sti
xor
add
ficomps
pusha
mov
xchg
sahf
fdivl
jl
push
and
xchg
add
inc
add
mov
aas
lcall
cwtl
mov
xorb
cmp
mov
enter
push
and
loop
shrl
dec
aam
mov
rcrb
mov
scas
xchg
or
nop
push
sbb
inc
add
movsb
movsl
outsb
mov
xorb
inc
sub
xchg
jmp
lock
leave
imul
ret
test
inc
adcl
mov
mov
enter
data16
pop
mov
icebp
mov
test
mov
clc
ficoms
rolb
mov
push
aaa
orb
jne
mov
xor
jb
fcoms
jle
ss
subl
inc
jo
scas
nop
adcb
mov
xor
orb
sarb
pop
addb
push
imul
sbb
pop
cmc
loop
leave
add
mov
scas
addb
add
addr16
adcb
xor
lea
test
cmp
inc
imul
xorb
mov
subb
mov
or
cmpsl
js
xchg
int
loopne
add
orb
mov
jns
sbb
sub
nop
imul
push
pop
jb
subl
mov
inc
addr16
adc
push
jnp
lahf
cmpb
mov
push
lcall
ss
jg
orl
mov
lcall
sahf
rcrb
jo
out
and
inc
sub
es
dec
insl
clc
or
std
xor
cltd
xchg
imul
pop
sbbb
dec
sbb
pusha
pop
and
cmpb
add
int
mov
fldenv
subb
mov
adc
leave
orb
xor
test
pusha
or
outsl
andb
pop
addb
in
fstpl
pop
jmp
xor
aad
inc
sub
cmpsb
xlat
lods
outsl
mov
sbbb
out
hlt
mov
sbb
testl
push
test
data16
add
and
sahf
fbld
shl
jbe
popf
mov
or
fdivl
push
xor
ficoml
repz
mov
jg
add
pop
xor
imul
movsb
adc
ret
lds
ja
sahf
and
loope
popl
mov
fadds
adc
pop
fistpl
call
and
sub
and
sbb
xchg
pusha
xchg
mov
test
ljmp
lcall
mov
movb
sahf
sbbl
fs
es
test
mov
mov
and
push
rorl
sbb
pop
mov
andb
lret
in
addb
lods
stos
inc
mov
jl
js
iret
orb
cmp
jo
dec
push
dec
push
mov
mov
mov
in
mov
push
pop
cmpb
in
loope
xchg
cmp
das
cli
mov
and
xchg
repnz
sahf
xchg
mov
mov
mov
xchg
orb
rolb
iret
loope
mov
adcb
mov
sub
fsubrs
cld
sbb
repz
mov
mov
inc
subb
sbb
add
bound
sub
in
push
jne
adcb
stc
xorb
cld
fiadds
push
cltd
cwtl
inc
mov
fcmovne
add
cmp
xor
pop
xlat
rclb
and
lods
addr16
outsb
das
add
xor
or
popf
test
jbe
lahf
clc
into
pushf
xor
movsl
inc
xchg
dec
lock
ss
adc
ret
cli
out
lret
jne
test
inc
push
mov
adc
lcall
negl
stos
iret
pop
pop
jl
fisttpl
xor
loope
js
into
fstps
pushf
and
mov
xchg
fwait
je
inc
cmp
cld
movsb
and
jmp
sub
test
adcb
in
orb
clc
add
and
mov
add
xor
fstpl
or
lcall
xor
push
js
mov
xor
cli
push
ret
and
dec
shrl
mov
movsb
es
orb
movsl
loop
fwait
gs
inc
cmc
push
adc
xchg
loope
sbb
cmpsl
sub
dec
subb
jl
lahf
xchg
and
out
clc
push
jge
adcb
in
cmp
mov
fisttpll
je
andb
mov
lcall
add
stos
push
jbe
shrl
aam
sub
mov
adc
sub
xor
inc
outsb
mov
int3
dec
cltd
stc
rcl
cmpb
push
roll
nop
cmp
jp
orb
xor
cmp
repnz
sub
pop
stos
xchg
jg
subb
push
push
addl
jge
cmp
sbb
insl
cmp
mov
out
lcall
pop
leave
or
sbbb
pop
mov
test
add
sub
js
cmpb
inc
xor
pop
orb
popf
mov
sub
leave
cmpb
inc
push
int3
or
sbb
add
and
mov
sub
testl
mov
xchg
shrb
icebp
jge
xor
in
jecxz
psubusb
push
mov
ja
jl
movsb
mov
loopne
call
jmp
push
aas
mov
sbb
les
pusha
xor
fwait
xchg
test
mov
aad
dec
dec
dec
addl
push
mov
and
pop
mov
cmp
adcb
and
subb
or
cmp
adc
and
pop
cmp
push
inc
jg
jge
subl
adc
jl
jecxz
cmc
mov
out
lahf
adc
repz
rorb
pusha
xchg
mov
push
mov
cmpsl
pop
push
ret
mov
push
adc
pop
jmp
push
add
imul
xor
clc
lods
aas
mov
mov
push
lds
adcb
fimull
fimuls
mov
in
je
repz
and
fidivl
or
rolb
imul
loop
in
out
outsb
sbb
or
dec
stc
orb
pop
xor
pop
lods
sbb
mov
xchg
jns
stos
xchg
mov
adc
xorb
dec
add
into
jo
orb
fiadds
xor
inc
push
addr16
aas
addb
jno
lss
xchg
daa
or
pusha
sub
fcmovnb
orb
gs
icebp
jo
adcb
xchg
outsl
dec
mov
or
push
int
mov
cmpb
and
xchg
bound
jg
ss
dec
xorb
addr16
push
pop
dec
jl
xorb
sub
sbbb
sub
mov
adc
xorb
and
adc
clc
cmp
inc
sahf
sbb
pop
arpl
sahf
out
cmp
or
jg
xchg
pop
add
shrb
cmp
std
adcb
arpl
out
pop
and
insl
xor
mov
lcall
cmp
in
fdivrl
test
adc
fs
ss
cs
dec
leave
sub
pop
int3
xchg
and
fidivrl
pop
aad
js
imul
orb
sbb
lods
add
test
adc
inc
mov
mov
aad
mov
lock
rcrb
inc
and
jne
out
lods
mov
sahf
daa
lret
xor
mov
jno
lods
fidivl
xor
in
andb
xchg
add
mov
sti
cs
mov
test
sbb
mov
xchg
xchg
jmp
icebp
mov
inc
lock
fs
cs
xlat
addl
cmpb
lods
or
pop
mov
enter
add
xchg
add
imul
enter
dec
cmp
jno
mov
sbbb
or
fisubl
mov
jbe
push
add
jecxz
arpl
or
mov
pushf
xor
out
leave
xor
add
mov
out
mov
in
loop
sub
rolb
inc
push
fsubs
jns
mov
fwait
ljmp
inc
and
mov
pop
mov
sarb
and
lcall
or
fisubl
add
cmp
pop
sbbl
push
rolb
ja
jecxz
cmpsl
xchg
jmp
addl
cmpb
loope
pusha
or
ret
cld
stos
mov
rcpps
or
add
ss
pop
popf
rclb
dec
add
adc
lds
sti
sbb
sahf
pop
push
cwtl
adc
test
scas
aad
push
lcall
sub
xor
sbb
xor
and
jbe
ror
js
icebp
lret
cmpb
inc
mov
daa
mov
mov
add
fiadds
outsb
mov
inc
ss
push
fistpl
leave
pop
rolb
xchg
stos
inc
insl
pop
cwtl
inc
or
mov
dec
out
neg
test
add
pop
mov
pop
push
mov
cmp
pop
subl
dec
jmp
add
mov
mov
jns
sbb
lock
inc
addr16
pushf
mov
push
sub
mov
pop
cmp
mov
ror
jb
or
scas
jns
xor
in
nop
mov
mov
stos
xchg
sbb
sti
fwait
push
xor
mov
repz
shlb
jb
pusha
les
mov
pop
xor
xor
subb
push
gs
cmpb
rclb
jnp
movsl
inc
sahf
jbe
enter
and
out
ret
sbb
aas
dec
xor
fidivs
mov
xchg
nop
sarb
xorb
jp
pop
cmp
ss
push
add
pop
movl
adcb
pop
xchg
roll
and
mov
xchg
pop
dec
loop
out
loopne
mov
add
mov
add
fiadds
lods
mov
jo
imul
jecxz
xorb
xchg
int3
xor
inc
xorb
insl
jnp
lods
in
addb
fsts
mov
xchg
ror
scas
and
es
sub
cmpsb
jecxz
out
adc
shll
sub
dec
jp
fcompl
pushf
mov
pop
sbb
and
or
sub
jnp
inc
test
arpl
adc
orb
in
jnp
movsb
adc
xchg
js
fmuls
xchg
add
pusha
jb
sub
jae
stos
cmp
pop
clc
mov
mov
cld
pop
sbb
sub
cli
or
addr16
inc
xchg
fsubs
cmp
and
xchg
jae
addb
cs
sahf
mov
aam
incl
sub
popf
xchg
mov
and
add
ljmp
fnstcw
call
pushf
mov
andb
cmp
andb
and
push
inc
cmpl
push
sti
fcomps
mov
xchg
hlt
call
loopne
das
xlat
in
mov
adcb
into
mov
pop
cmp
push
pushf
mov
mov
or
cmp
push
pop
or
push
fbld
mov
sbb
xorb
bound
adcb
pop
pop
cmpl
push
clc
rorb
outsb
or
pop
jg
scas
pop
adcl
ret
jb
jns
jno
sub
out
mov
lcall
cltd
cmpsl
adc
adcb
nop
mov
adcb
fldl
cwtl
mov
int3
push
lahf
pop
xchg
rcrb
hlt
out
sahf
rcrl
outsl
leave
cli
adcb
fsts
dec
cmp
xorl
es
filds
xchg
cmpb
sar
outsl
mov
into
sbb
rcrb
dec
adc
xchg
pop
lods
adc
pop
orl
mov
popf
test
in
lret
jbe
xchg
inc
fnstenv
pop
shlb
mov
sbbb
pop
push
je
sbbb
and
fmul
mov
jl
dec
push
mov
aam
mov
inc
icebp
add
out
lret
test
orb
ja
cmpb
sahf
sub
out
pop
out
and
sub
cmpl
or
push
xchg
jb
lahf
ljmp
push
xchg
push
inc
adc
sub
mov
xor
cmpb
leave
mov
fstpt
shrb
cvttps2pi
aad
jne,pt
and
leave
sbb
ret
xor
sub
pop
mov
pop
adc
cs
mov
push
sbb
jp
jecxz
push
ljmp
inc
repz
cmpb
into
out
sbb
jno
pop
dec
mov
addb
dec
shll
out
insl
fsubrl
fcmovne
and
or
sti
imul
cli
stc
xor
arpl
cs
aam
testb
adc
add
jne
mov
or
push
or
jae
setb
addb
jmp
ds
jbe
int
loopne
jo
imul
pusha
adc
data16
mov
sbbb
inc
mov
mov
xor
cwtl
jns
js
leave
xorb
jmp
jecxz
cli
xorb
pop
rcll
idivl
mov
das
mov
dec
idivb
aaa
jp
movsb
lret
into
addl
decl
xorb
je
sub
sub
xchg
mov
pushf
ret
dec
cmpsl
add
pop
das
adc
inc
adc
mov
sarl
ljmp
jmp
add
jmp
mov
cmp
ja
lods
fcomip
pop
mov
mov
ljmp
in
sub
jmp
test
cmc
test
pop
push
inc
mov
or
and
imul
test
cmp
insl
inc
stos
cmc
jbe
mov
cld
popf
out
sbb
or
insb
pop
addr16
lret
testb
mov
stos
push
fcmovb
xor
shrb
enter
cmpsl
jae
cmp
mov
sbb
xor
enter
inc
mov
pushf
movsb
loopne
sub
sbb
push
xchg
push
jbe
lcall
rolb
fldcw
pop
out
sbb
subb
and
ja
add
adc
and
mov
and
add
cmp
push
scas
mov
std
xchg
ret
movsl
xchg
inc
andl
int3
out
jl
clc
xor
or
cmp
sbb
adc
sbb
mov
das
icebp
dec
sub
cwtl
repz
mov
out
adc
stos
xchg
sub
lods
cmpsl
jg
jl
inc
les
sti
enter
ss
add
test
mov
jle
and
sarb
scas
popf
xor
cltd
rcr
cmp
and
mov
pop
jno
jge
out
imulb
andb
and
pop
daa
pushf
add
nop
fwait
mov
fdiv
in
scas
adc
out
aas
in
rclb
pop
xchg
adc
imul
pop
stc
inc
lret
adc
pop
fwait
sub
mov
fisttps
xchg
xor
imul
repz
mov
cmpb
scas
push
cmp
ja
sbb
or
popa
int
xlat
jecxz
adc
cs
or
test
addl
aas
roll
addb
dec
movsl
xor
sub
sbb
and
cmp
cmpsl
sbb
arpl
in
pushl
xorb
inc
movsb
inc
addb
addl
fistl
sti
push
nop
fidivl
mov
cmp
cmp
jge
inc
inc
lret
and
lods
jmp
test
shll
mov
sbb
aam
jge
sbb
out
lods
in
cmp
popl
xor
and
neg
sbbb
mov
jp
xchg
or
rol
jns
xorl
cli
mov
fistl
cmp
dec
sbb
test
dec
xor
in
fldenv
pop
insl
xchg
lret
pop
enter
daa
insb
adcb
pop
add
shlb
loop
cs
sbb
xchg
je
pushf
call
es
les
adc
ds
clc
stos
iret
mov
sbb
fcoms
cmp
push
dec
mov
insl
jns
xchg
jl
mov
mov
pop
mov
cmpb
dec
pop
fmul
inc
pop
adcb
xor
mov
cmp
and
lcall
cmpsb
iret
test
xor
les
je
pop
mov
jmp
outsb
mov
add
sahf
lcall
jp
or
and
jmp
leave
orb
hlt
pop
andb
fidivrs
sbb
imul
lods
in
dec
cwtl
inc
cmc
gs
mov
call
inc
loopne
ret
rorb
fs
push
jg
jp
lods
cmp
pop
add
adc
stc
xor
idivb
repnz
jmp
mov
rclb
test
dec
pop
cmpb
and
xor
inc
xchg
pop
rcrl
aam
rorl
dec
lock
mov
subb
aaa
inc
imul
repz
mov
bound
jno
cs
subl
mov
inc
cwtl
lods
push
in
jl
adc
dec
es
cmp
xchg
push
pop
cmp
arpl
mov
lock
adcb
int
cmp
lods
addr16
inc
add
cmp
or
jle
xor
push
jo
addb
pop
ror
jo
cmpb
xor
out
sbb
and
xchg
or
dec
ss
fsubrs
testl
call
pop
xorb
aas
inc
mov
addb
js
inc
or
popa
xor
idivl
inc
pop
loop
daa
push
cmpsb
aad
mov
loopne
jl
lret
adc
add
loopne
inc
fs
orb
mov
popf
mov
xchg
inc
xor
inc
xchg
std
sub
push
sbbb
roll
popf
mov
sub
fxch
push
popa
mov
pop
test
imul
popf
imul
pop
fisubl
push
inc
lahf
push
cmp
add
lcall
inc
ljmp
mov
js
testb
loop
lea
or
mov
jl
adc
pop
cli
imul
jae
adc
cmp
xor
dec
mov
inc
sbb
jge
mov
iret
mov
sub
inc
flds
call
or
mov
gs
sbb
int
cld
cmpl
xor
dec
and
adc
subb
stos
and
xor
in
stc
lods
cmp
or
adc
pop
sbb
addb
das
adcl
adc
in
subb
pop
int
cmpl
inc
and
jno
subb
pop
mov
into
cmp
dec
inc
xchg
jmp
rcrb
mov
scas
lahf
xchg
popl
sbb
add
and
cmpl
movsl
dec
add
subl
ret
inc
jle
mov
enter
push
mov
shll
stos
sbbb
std
push
dec
popa
aas
xchg
mov
nop
xor
dec
or
jl
in
loop
inc
div
lret
pop
out
and
sbbl
or
jne
pop
stos
mov
dec
clc
mov
in
addb
push
mov
or
inc
xchg
cli
inc
xchg
imul
sti
dec
push
andb
lahf
xchg
scas
cmp
imull
push
rolb
sti
rolb
add
insl
sub
adc
pop
inc
lcall
cmc
int3
pushf
sahf
mov
jg
movb
shrb
pop
nop
testb
addb
into
pop
subb
daa
fnstcw
lods
bound
rorl
jns
test
inc
push
xor
lcall
sbb
mov
loopne
cmpb
sahf
loopne
leave
add
xor
mov
push
inc
outsl
adcb
cmp
add
xorb
pop
adcl
fwait
push
sbb
dec
pop
outsb
inc
mov
sub
sub
xchg
loop
jb
cwtl
enter
sahf
cs
sti
dec
sbb
xorb
mov
sub
pushw
lock
sahf
dec
pusha
sbb
fsubrs
ja
cmp
fildll
xor
mov
and
movb
fistps
nop
sbbb
push
out
test
ds
pop
fcom
mov
shrb
clc
sub
and
cmp
cltd
orb
or
cmpsb
inc
xchg
xchg
dec
sbbb
icebp
jnp
subb
imul
lods
add
addb
cmp
imul
push
xchg
xor
test
subb
sub
sti
popf
push
or
pop
arpl
pop
push
sbb
pushf
ja
sub
in
dec
push
mov
fiadds
js
sbb
adc
leave
mov
cmp
lahf
mov
sbb
mov
sahf
mov
xorb
notb
xchg
in
cwtl
jnp
and
sub
adc
fnsave
andb
hlt
fsub
dec
stc
xorb
out
in
jle
adcl
lahf
lcall
andb
das
fld
inc
pop
std
pushf
or
sbbb
push
lock
orb
dec
mov
and
cmpsb
xchg
xor
sub
pop
adc
ret
arpl
mov
xchg
cli
cmp
adcb
mov
adcb
or
inc
pop
xchg
lods
stos
arpl
dec
sahf
and
das
lds
xor
dec
movl
gs
adc
jno
in
push
sarl
inc
jp
bound
mov
andl
or
xchg
and
cltd
aad
pop
add
and
xchg
sub
pop
sub
loope
push
sub
sbb
shrl
lret
mov
lods
and
lahf
orb
xchg
mov
sub
jecxz
inc
add
jb
cmpb
cmp
mov
pop
jp
movsb
jmp
and
cltd
lcall
shl
popa
test
adc
iret
jns
dec
mov
lret
mov
aam
add
cli
xchg
rcrl
loope
pop
jns
int3
cwtl
jmp
add
dec
pushf
mov
inc
push
and
arpl
xor
add
addr16
test
adcb
cmp
or
mov
sbb
push
add
dec
cmp
sub
addb
hlt
lea
repz
stc
add
mov
sarb
jne
push
dec
adc
or
push
xor
fdivrl
sub
sar
mov
pop
js
sbbl
pop
pop
sahf
mov
cmp
ret
mov
sub
scas
pop
mov
xor
mov
popa
int
mov
xor
sub
fisttpll
je
andb
jp
adcl
loopne
incb
in
roll
cmp
push
lcall
adc
clc
stc
push
push
ret
pop
lds
mov
shlb
enter
add
pop
fwait
es
ss
mov
aad
mov
rcl
mov
lods
arpl
test
push
ljmp
xchg
pop
add
lcall
or
inc
out
shrb
neg
popa
std
cmpsb
iret
mov
adc
xor
and
mov
fistl
and
add
stos
xor
sbbb
xor
xchg
jb
mov
sbbb
push
pop
inc
jge
andb
test
hlt
jno
addb
imul
push
loope
cmp
leave
cmpb
xor
xchg
sub
jge
aad
pop
mov
out
push
fdivp
sbbb
fs
xorb
pop
push
xorb
mov
cmp
and
ds
mov
mov
in
sbb
loopne
sbbb
adc
icebp
roll
in
lcall
movsl
add
mov
push
xor
jecxz
xchg
add
mov
sbb
sbbb
bound
mov
jo
ljmp
mov
stos
adc
dec
dec
scas
bound
xchg
orb
outsb
mov
leave
xchg
icebp
data16
xorb
cmp
test
inc
add
insl
sbb
sahf
pop
lcall
popf
outsb
mov
les
push
cmp
sub
mov
fdivl
xorb
icebp
pop
jnp
pop
cmpb
sti
jae
sbb
ficoms
fmull
xchg
or
int3
push
mov
add
mov
movb
test
cmp
adcb
mov
lock
andb
inc
cmpsb
push
aam
push
and
lret
ja
in
sbb
mov
and
push
xchg
jg
icebp
imul
jb
xorb
out
xchg
orb
jbe
subb
adc
bound
mov
call
icebp
xor
fildl
add
shl
hlt
push
adcl
add
loopw
or
cltd
cmpsb
arpl
adc
and
int
mov
jecxz
lds
jnp
mov
popa
jno
xchg
cmp
andb
outsl
leave
xlat
aas
sbb
inc
mov
adc
mov
push
jb
push
jle
scas
ret
lahf
jae
andb
enter
sub
jnp
jle
or
daa
jo
and
popa
cmpl
sbb
xor
cs
cmc
xchg
sbbl
jle
sbb
jb
js
push
jno
add
lock
mov
xor
les
mov
icebp
xor
subb
push
mov
xor
scas
int
xor
sbb
idivb
sbb
aad
mov
mov
ss
mov
adcl
and
xchg
jbe
sahf
jg
faddl
stc
insb
mov
mov
mov
lahf
xchg
andb
ret
data16
shll
pop
push
adc
xor
popa
or
bound
cmp
add
dec
clc
add
hlt
and
mov
repnz
adcl
iret
xor
test
in
out
pop
inc
mov
xor
dec
fiadds
in
push
add
imulb
xchg
das
cli
push
insl
mov
je
into
adc
dec
jno
adc
mov
mov
mov
test
jbe
addl
xchg
fcompl
hlt
adc
dec
add
dec
std
add
inc
xchg
pop
leave
add
cmp
xor
cmp
addb
adc
stc
fidivrs
loope
cmp
mov
ljmp
xchg
xor
xor
and
popa
outsl
stc
jecxz
jae
pusha
std
adc
pop
shl
call
test
repnz
insl
sbb
shll
xorb
add
mov
push
scas
dec
stc
push
je
jo
jnp
mov
cli
aam
outsb
adcb
mov
mov
imul
insb
outsl
xorb
lock
push
push
addl
xor
cld
aaa
xchg
sbbl
inc
dec
inc
dec
jb
cmpb
sub
inc
and
inc
mov
add
inc
lds
jle
leave
int3
inc
lock
mov
rcr
add
cmc
subl
jo
std
js
xor
shlb
mov
sahf
mov
jle
inc
nop
sbb
rclb
out
jp
stos
fadds
cli
inc
push
testb
cmp
data16
xor
cmpsb
or
out
add
cmp
shr
stc
cmpb
cmpl
lock
pop
mov
call
push
push
mov
pop
out
movb
mov
mov
xchg
dec
sbb
xchg
or
lcall
fbstp
and
push
jg
sub
and
lcall
aad
push
les
clc
scas
cmpb
pop
and
xchg
in
movsb
inc
test
fnstsw
sti
add
jbe
inc
cmpsl
mov
sbbb
push
jl
xor
fistl
cmpl
dec
or
jmp
pop
xchg
ficoms
mov
in
xchg
xor
cmp
add
mov
jo
iret
roll
sub
in
test
addb
subb
in
push
inc
sahf
push
dec
add
add
sub
cwtl
sti
movsl
cmpb
adc
or
jnp
ja
ja
xchg
add
jmp
xor
int3
andl
pusha
cwtl
push
dec
into
popf
xor
dec
inc
aas
sarl
decb
push
je
sbbb
and
pop
jg
pop
adcl
push
subb
dec
sbb
jae
xchg
leave
mov
or
mov
pop
scas
xchg
adcb
mov
lcall
pushf
fsub
add
jne
sbb
or
fnstsw
mov
daa
inc
mov
sub
pop
mov
addb
jge
and
sbb
mov
xchg
sbb
negb
out
cmpb
xor
mov
dec
inc
imull
inc
cmpl
jp
lret
mov
push
pop
cmp
ret
popa
sub
mov
pop
fisubrs
xchg
mov
xchg
pushf
or
adc
lods
ret
mov
fdivs
jo
cmp
adc
and
or
outsb
and
mov
inc
push
push
fbld
cmpb
and
jnp
jns
sbbb
inc
stos
adcb
adc
mov
cmp
stc
mov
mov
imul
fists
mov
xchg
xor
and
sub
test
fisubl
daa
or
sub
mov
push
mov
jne
jae
dec
pop
cmp
xor
sbbb
pop
cmpsl
sahf
and
imul
xchg
xchg
insl
mov
mov
mov
mov
mov
rcrl
popa
mov
inc
mov
pusha
and
dec
mov
cmpb
mov
jecxz
push
mov
add
add
das
add
mov
jbe
sub
or
sahf
sarb
xor
andb
in
sbb
cmpb
xchg
pop
fisttpl
notb
pushf
fnstenv
jno
insb
jae
fsubrl
orl
or
dec
icebp
loop
aam
add
xorb
ljmp
push
inc
and
bound
jno
je
cmc
dec
adcb
push
push
cvtpi2ps
andb
fstpt
sub
xchg
jmp
bound
movsb
xorb
setl
js
hlt
add
in
pop
adc
jge
cmp
leave
and
mulb
addb
cmpsl
scas
in
int3
cmp
xchg
mov
andb
sbb
outsb
cmp
andb
dec
add
push
dec
jecxz
mov
xor
int3
push
mov
popf
fsubrl
arpl
push
aam
push
mov
clc
int3
repnz
ret
mov
sub
dec
psubusw
mov
fistpll
push
es
ret
mov
addl
cwtl
pop
fsubs
ss
in
repnz
lcall
jo
rcll
pop
loopne
cmp
outsb
jl
fistps
psubw
mov
jge
aad
inc
pop
mov
cmp
mov
int3
leave
push
jp
sub
xchg
xor
mov
jmp
xor
jne
subb
jb
cs
pop
pop
push
sbbb
sub
cmp
nop
dec
cmp
pop
subl
pop
push
push
dec
and
pushf
xchg
mov
cmpb
mov
sbb
daa
xor
or
dec
xchg
fldt
fsubl
ljmp
lock
pop
enter
sbbl
xor
imul
lock
hlt
es
sbb
pop
pop
xorb
adc
pop
xchg
mov
stc
addb
jmp
test
ss
orl
push
orl
sbb
xlat
xor
test
pushf
lea
mov
jg
push
addb
mov
mov
sbb
adc
and
xchg
mov
je
jno
rorb
test
mov
add
daa
popf
ss
push
add
pop
jno
sub
xor
stc
xchg
xchg
adc
mov
xorb
dec
mov
mov
sbb
fiadds
jo
mov
in
daa
aam
or
jnp
stos
dec
pop
mov
mov
testb
cmp
xor
addb
mov
or
lods
jbe
sbbb
pop
mov
sbb
les
dec
jno
icebp
inc
mov
add
movb
dec
and
ss
stc
jl
sbbb
enter
fadds
sahf
mov
ret
je
and
jb
and
dec
push
test
stos
and
out
popf
shl
mov
sub
cli
xlat
sbb
fistl
push
xor
mov
dec
adc
cmp
cmc
adcb
rol
xor
xchg
adc
mov
pop
addb
clc
pop
lret
hlt
fdiv
enter
push
stc
cmpsb
stos
movsl
or
jp
sbb
pop
loope
mov
negb
lret
fwait
and
imul
addb
xchg
loopne
divb
add
scas
jmp
scas
and
push
add
jno
hlt
xchg
or
das
mov
imul
cmp
orb
add
out
xchg
adcb
pop
lock
inc
xor
shlb
adc
inc
stos
sub
sub
subl
repz
mov
and
mov
outsb
out
pop
test
loopne
dec
stc
xchg
leave
jno
imul
pusha
jbe
xchg
cmp
inc
sbb
dec
call
jmp
xor
fs
lods
test
imul
jecxz
add
mov
ds
movsl
push
cmpb
aas
cmp
cld
rolb
orl
xorb
adc
loope
pop
ja
lds
jl
imul
test
sbbb
cmp
lea
dec
jo
xchg
pop
orb
xchg
seto
orb
jne
xor
pusha
and
pop
loope
inc
je
inc
nop
push
addr16
cmp
cmp
dec
roll
or
push
xchg
push
fadds
lods
je
orb
faddl
fs
idiv
insl
subl
dec
push
mov
and
push
xchg
jno
lahf
leave
push
sbb
loopne
lret
dec
into
test
adcb
std
xchg
subl
pusha
inc
cmpsb
push
sbb
mov
xchg
data16
mov
jg
xchg
or
mov
sub
push
shlb
arpl
pusha
sbb
jg
nop
xor
ficomps
ds
or
mov
add
inc
sub
jle
loop
repz
test
std
mov
subb
in
cltd
pushf
into
lock
mov
xor
loopne
lea
iret
xchg
pop
not
imul
ss
xor
push
lods
into
lcall
adc
push
mov
xor
mov
lahf
mov
inc
cmp
push
push
or
jg
cltd
lock
aad
push
adc
cmpb
aam
orb
ficoml
popf
stos
nop
add
jl
xchg
push
cmp
xchg
sbb
adc
jecxz
add
nop
fdivr
je
into
pop
ja
test
das
push
xchg
inc
cmpsb
add
loopne
leave
roll
pop
loop
jle
jb
add
dec
pop
sub
dec
orb
lea
push
or
icebp
out
jb
xchg
into
daa
lods
std
shl
cmp
inc
mov
fsubs
pop
lret
xor
int
fistpl
xorb
inc
mov
js
subb
lahf
add
xor
inc
fdivl
add
cltd
icebp
movsb
imul
xor
mov
lahf
push
push
orl
aaa
sbb
imul
fs
ret
jl
pop
or
xchg
xchg
sbbb
cmpsl
movsb
cmp
aaa
popa
xlat
jnp
test
xor
adc
out
int
mov
andb
leave
sub
fsubrp
push
sbb
adc
bound
ja
cmp
lds
outsb
psubb
lahf
inc
mov
shlb
fs
je
outsl
pop
lret
jmp
subb
jno
mov
dec
mov
dec
jp
jae
pusha
out
lods
in
xchg
aad
popf
inc
hlt
mov
or
push
in
out
xor
js
push
xchg
mov
ljmp
pop
fcoms
lahf
mov
jo
inc
aas
mov
push
orb
xlat
cwtl
jne
mov
addl
xor
or
adcb
arpl
test
cmpsb
xchg
jg
add
jo
mov
mov
cmp
cmp
xor
xchg
fildl
push
andb
mov
or
pop
push
inc
mov
std
xor
loope
icebp
out
mov
test
add
mov
hlt
fmull
shr
daa
sbb
adc
bound
lea
hlt
lds
push
xchg
subb
fisttpll
pop
cmc
mov
dec
test
xor
outsb
imul
jne
sbb
ss
pop
scas
shl
orb
call
insl
decb
mov
mov
aas
mov
jbe
push
inc
stc
jp
pop
cmc
sbb
test
clc
cli
mov
sbbb
sbb
sbb
divl
sti
andb
outsl
mov
out
add
mov
dec
xchg
cmpsb
sarb
sub
inc
xor
test
jbe
xchg
orl
mov
clc
mov
dec
adc
xchg
dec
xor
cs
pushw
cmp
pushf
cmp
out
sbb
pop
sub
mov
aas
ficoms
andb
inc
call
dec
xor
mov
insl
fnsave
add
xor
sub
sti
xorb
dec
rcrl
ja
push
pop
add
imull
xor
add
adcb
push
test
cmp
int3
sub
or
mov
cmpb
nop
adc
push
pop
sbb
jg
xor
aam
jmp
clc
aas
mov
pop
int3
xor
mov
sbb
mov
ja
addl
test
insl
sbb
lock
dec
jle
add
insb
push
jp
pop
mov
jmp
jge
test
rol
enter
cld
in
jmp
jp
lea
repz
ret
mov
mov
aaa
sub
mov
mov
orb
je
push
adc
adc
orb
lahf
push
cmpb
add
push
daa
dec
subb
cld
aam
inc
xor
out
xorl
lock
mov
dec
cmc
je
das
loopne
jno
rcrl
out
test
mov
jmp
and
jge
icebp
inc
add
enter
jmp
adc
add
pusha
push
lahf
addr16
cld
mov
add
pop
fs
adcl
hlt
push
repz
incb
les
ljmp
sub
loopne
cs
addb
scas
jle
fdivl
inc
popf
sbb
mov
inc
cmpsl
mov
jle
je
xchg
lods
pop
cmp
out
and
adc
nop
pop
rcr
xchg
ret
cmp
leave
in
out
enter
and
sub
imul
adc
scas
je
outsl
test
ja
subb
mov
or
repz
shrb
aad
aaa
aas
xor
lahf
bound
loopne
mov
lcall
inc
lods
int
jb
sbb
idivl
iret
movsb
jo
sub
cmc
test
xchg
push
aaa
pop
xor
in
adc
sbbb
mov
and
ret
rcl
fildll
popf
mov
push
sahf
sub
add
pusha
mov
and
in
loope
inc
cmpb
dec
and
rolb
cmp
adc
andb
insb
andb
sahf
movsb
iret
dec
adc
fsts
leave
xchg
pop
lods
xchg
mov
inc
push
test
hlt
cmp
fsubrs
fcomip
insb
subb
cli
adc
xorl
test
cmp
enter
shlb
popa
xchg
and
stos
or
push
add
mov
push
shlb
imul
mov
and
adc
addr16
add
add
or
rorb
das
jns
xchg
adc
dec
pusha
or
fbstp
pop
gs
ds
mov
and
inc
out
addb
mov
xchg
pushf
jns
or
inc
ficoml
arpl
sub
lret
subb
test
subb
andb
scas
xchg
jge
mov
rclb
cmc
enter
sub
dec
repz
jg
jmp
push
std
rorb
call
out
loope
mov
fiaddl
stos
insb
or
mov
stc
inc
movsb
stos
repz
bound
inc
inc
js
cmp
dec
in
filds
cli
sub
mov
dec
or
enter
adc
test
mov
mov
push
mov
pop
xor
lds
dec
push
jnp
adc
out
sbb
loopne
add
jne
jo
andb
jo
loop
xorl
jle
hlt
jb
xor
popf
adc
sbb
out
loopne
mov
mov
pop
rclb
dec
cmp
adc
es
lret
add
sahf
jl
stos
sbb
adc
int
xchg
mov
adc
scas
cld
lods
hlt
andb
mov
dec
xchg
add
or
aas
xorb
mov
jnp
popf
jge
loopne
mov
push
mov
pushf
lods
pop
sbb
xor
mov
mov
js
mov
aas
adc
and
inc
shl
subl
movsb
cmpb
jl
dec
cmpl
fmull
aaa
jecxz
movsl
pop
mov
pusha
mov
push
jbe
and
push
out
xchg
andb
jecxz
mov
idivl
sub
popf
jle
jmp
mov
sarl
bound
mov
sub
outsb
add
xchg
mulb
or
jmp
sti
out
and
lret
mov
jle
xor
xchg
lahf
scas
and
aas
jl
loopne
enter
xchg
cmpb
dec
lea
sbbb
jnp
cld
iret
sbbb
push
mov
dec
cmp
pop
sub
addl
test
leave
mov
int3
push
pop
roll
hlt
add
sti
add
jmp
stc
jne
cmp
hlt
add
test
and
lahf
sub
leave
xor
loope
xchg
bound
dec
jbe
mov
out
cmp
ret
fidivrs
andb
mov
lahf
sbb
addb
xorb
iret
jmp
add
inc
test
push
add
call
cmpsl
cmpl
test
fildl
in
andb
mov
mov
push
add
or
ljmp
das
and
push
xchg
adc
inc
js
xchg
jb
les
loop
push
inc
xorb
xor
xorb
mov
orb
xchg
outsb
mov
xchg
xchg
pusha
stos
adc
ret
xchg
inc
cld
pushf
pop
adc
fistpl
cmp
mov
lret
andb
ret
mov
mov
dec
add
pop
adc
mov
push
add
data16
mov
orl
out
sahf
fadds
aam
subb
cld
sub
adc
ds
mov
sbbb
cmp
sar
scas
adcb
dec
out
pushf
mov
or
shlb
or
shlb
inc
jae
add
mov
addb
lcall
test
cmc
fmuls
mov
add
mov
jp
scas
jg
lock
orl
cwtl
loope
data16
inc
jb
lret
pop
dec
subb
jnp
mov
and
cs
mov
mov
adc
subb
mov
cmpb
mov
or
out
in
sub
pop
sahf
pop
call
hlt
xchg
mov
jae
push
and
es
xchg
dec
sub
cld
add
fidivrs
add
inc
orb
iret
cmc
or
gs
xchg
cmpb
fwait
cmpsb
lea
mov
sub
sub
mov
testb
fidivs
add
cmpb
or
subb
aad
ss
subl
jne
hlt
test
adc
shlb
jp
mov
xor
cmp
jbe
ds
adcb
xchg
aad
invd
popa
popf
aam
sub
shll
xchg
outsb
mov
lds
lea
shll
loopne
jnp
cmpb
xor
mov
notl
addb
mov
mov
mov
imul
inc
mov
outsl
mov
sarl
repz
inc
cltd
jae
andb
rcrb
out
orl
jl
loop
daa
aas
clc
pop
mov
cmp
xchg
or
inc
mov
sub
push
lcall
ffree
xorb
mov
sub
popf
xor
pop
std
sub
lods
mov
andb
cmp
mov
sbb
nop
sbb
inc
adc
orb
and
cmpb
inc
addb
lock
dec
adc
mov
shlb
or
xor
clc
inc
iret
stos
jle
andb
xchg
icebp
cmp
xchg
jle
cmpl
xor
xchg
mov
js
or
dec
subb
mov
fildl
sub
mov
pop
or
or
lock
push
mov
mov
pop
push
and
orb
fists
mov
add
mov
adc
out
mov
aaa
sbb
iret
adc
popa
and
addb
push
lods
jnp
adc
lock
rcrl
insb
nop
add
add
test
inc
arpl
mov
pop
out
or
mov
inc
bound
call
sbb
fdivrs
push
repnz
or
lods
sub
stos
lret
pop
mov
lcall
sub
mov
dec
xorb
pop
out
xor
sub
and
jnp
icebp
cmc
rolb
push
outsb
loope
or
int
out
cld
subb
sbb
mov
xchg
adc
aam
add
test
repnz
sbbb
adc
mov
in
xorb
aaa
fstl
inc
pop
lea
rclb
icebp
movsb
test
subb
dec
scas
pop
popf
into
int
add
jmp
sti
mov
repz
add
arpl
fistps
and
shll
xor
test
jo
adc
sub
loop
enter
inc
add
orl
sti
int3
jne
cmp
filds
aas
mov
cmp
ljmp
jb
add
pushf
add
add
ror
ds
hlt
loopne
dec
sub
jne
cmpb
inc
xlat
orb
das
and
pop
sbbb
rorl
pop
cltd
xor
xorb
jae
hlt
or
call
mov
cmp
andb
mov
orb
repnz
cwtl
sbb
lea
rcrb
out
scas
je
jbe
inc
sahf
popf
and
icebp
rolb
mov
xchg
sbb
in
push
jno
xor
pop
jecxz
jnp
insl
xor
jmp
pop
cmpb
push
shlb
ffree
sbbb
sbb
mov
mov
xor
xchg
mov
loope
fbstp
sbb
jecxz
addl
inc
test
jge
cld
xor
ja
mov
fiadds
sub
adc
mov
sbb
addb
aam
pop
sti
xchg
loopne
xchg
adc
jl
mov
adc
push
out
fucomi
int3
in
or
ret
jne
xorb
inc
gs
xor
jl
fstpl
test
inc
outsl
repz
fs
mov
orl
addb
lahf
lods
cmpb
in
addl
test
inc
ja
sbbb
cmpsl
lea
adc
data16
jnp
call
jecxz
je
out
subb
mov
sbbb
pusha
push
mov
pop
sti
loope
sbb
std
add
sbbb
cmp
aaa
insl
leave
xor
adc
or
cli
rorb
mov
and
xor
cmp
aam
movsb
mov
jae
sti
mov
sub
mov
dec
and
jo
xchg
mov
xor
call
and
mov
add
mov
inc
or
pusha
out
shlb
mov
mov
mov
pop
and
push
adcl
xor
popl
jecxz
sub
cmpb
adc
sbbb
pop
adc
scas
lcall
scas
daa
lods
mov
insl
inc
lds
insl
and
pusha
scas
push
clc
adc
call
cltd
add
mov
xchg
sbb
roll
fmull
mov
cmp
inc
lock
sub
mov
jecxz
popf
repnz
orb
pusha
sar
int
sbbb
pop
addl
adc
push
and
subb
out
cmpb
inc
cwtl
mov
das
data16
ja
sbbb
stos
ss
xor
cmpb
mov
ja
push
outsl
jb
lock
js
out
lret
pop
int3
sub
cmp
cmc
lcall
loope
js
mov
push
cmpsl
sbb
movsl
pop
cmp
testb
mov
orb
lods
sarb
inc
mov
dec
addr16
push
mov
jo
sbb
hlt
in
pusha
imul
mov
sahf
cmp
cmp
imul
in
cli
push
movb
pushf
inc
adc
pop
test
rcl
fiaddl
push
xor
addr16
jo
xchg
aas
add
popa
fiadds
shl
int
ds
jge
loopne
adcb
sar
jmp
cmp
push
inc
inc
cmp
adc
inc
or
jne
ror
addb
shlb
cmp
xor
and
test
cmp
das
in
xchg
mov
nop
subb
lret
test
jle
add
mov
imul
call
push
imul
inc
loop
hlt
mov
sbb
fildll
pop
adcb
orb
cmp
aad
subl
fldl
jae
outsl
orb
or
pop
jmp
lret
adc
push
repnz
mov
push
int3
data16
jnp
push
je
xor
loop
dec
mov
mov
jo
dec
xorb
xchg
aam
in
arpl
xchg
mov
mov
into
std
or
xorb
mov
adc
loop
jecxz
cmp
xchg
jae
ljmp
adc
push
addl
cltd
inc
rorl
mov
je
xorb
xor
lods
add
jmp
adc
jl
sbb
sbb
inc
addb
dec
inc
mov
add
shl
push
pop
pop
faddl
dec
xchg
xlat
xchg
jmp
jle
xchg
pusha
mov
sub
push
testl
ljmp
pusha
movswl
or
movsl
scas
and
pop
out
jnp
lret
subb
xchg
jae
add
mov
sbbl
std
pusha
lret
sub
test
mov
add
push
lcall
rclb
pushf
fisttpl
leave
or
cmpl
push
adc
in
ljmp
enter
xchg
scas
dec
sbbb
gs
stos
das
cmpb
je
js
xor
cmp
insb
sub
push
mov
icebp
jl
adc
popa
sub
jmp
js
cmc
gs
pop
pop
or
sbb
cmp
sbb
shld
icebp
sbb
subb
lcall
ret
mov
inc
addb
out
aad
adc
adc
int3
push
mov
and
incb
mov
cmp
orb
sbb
je
jp
pop
jg
popl
fbstp
jge
mov
repnz
jmp
inc
ss
jl
sbbb
push
movb
mov
andb
inc
unpckhps
or
add
sbbb
xor
pop
ret
les
xor
divb
ficompl
rclb
subb
mov
les
pop
std
xor
mov
inc
clc
xorl
xchg
pop
fstpt
pop
jle
orb
jnp
push
mov
subb
xchg
dec
mov
movsb
sahf
pop
and
loop
iret
out
push
jne
fcmovnb
push
cmp
dec
or
and
adc
test
lods
xlat
sahf
inc
cmp
mov
cmp
pop
js
or
or
sbb
pop
cmp
xorb
and
inc
push
jb
je
arpl
pop
dec
gs
rorl
cwtl
jbe
into
add
fs
orb
pop
xchg
fmul
addb
add
push
cmpb
inc
pop
sbbb
and
pop
jmp
mov
mov
adcb
ss
sbbb
rorb
jae
filds
xchg
lods
sub
xchg
and
adc
push
stos
inc
jg
repnz
das
and
dec
inc
mov
xor
loopne
adc
cltd
cmp
es
js
aas
xchg
orb
je
and
and
fimuls
les
pushf
and
sbb
scas
in
jp
adc
pop
xchg
inc
les
mov
jl
push
pop
je
mov
pop
inc
inc
cmp
subl
cmpsl
subb
adc
clc
xorb
cmp
stos
scas
sbb
mov
add
jnp
push
in
or
xor
jmp
and
and
daa
out
leave
push
sub
fiadds
mov
and
mov
aad
lods
hlt
pop
sbb
sub
mov
fs
jp
adc
loopne
pop
and
cmc
imul
add
mov
data16
xchg
andl
sub
ret
sbbb
addb
xchg
jo
dec
repz
or
outsl
jle
xchg
adc
lahf
shlb
insl
pop
rcr
addl
adc
and
sbb
inc
mov
in
sbb
lret
lds
dec
lea
sub
repz
xchg
sahf
daa
in
inc
pop
xchg
mov
popf
add
xor
movsl
js
jle
subb
testb
pop
lock
jne
sub
adcb
aam
push
mov
jg
jo
int3
sub
pusha
push
dec
push
lods
lods
xchg
outsb
aam
hlt
sbbb
scas
fnstenv
xchg
loopne
jnp
mov
aaa
or
int3
bound
or
stc
jne
insb
pop
int
lds
push
xor
sbb
cmp
mov
xchg
inc
jmp
xorb
jge
scas
push
dec
loopne
dec
in
addl
repz
jo
add
rclb
mov
aas
cmpb
jno
addl
cmp
xor
cmpsb
pop
xor
aad
sbbb
fiadds
add
rcrl
cmp
xlat
push
or
push
cltd
scas
out
pusha
mov
cmp
dec
and
adc
add
fcomps
sbb
xorb
into
mov
xor
in
dec
pop
aas
aad
std
movb
shll
xor
lret
fwait
lds
mov
mov
mov
testl
dec
and
push
dec
mov
add
loopne
xor
xchg
cmp
mov
mov
mov
push
mov
adcb
sarl
push
adc
add
sarb
cmpb
sub
out
push
andb
jecxz
dec
cld
pop
pop
xorb
sub
sbb
dec
ss
xor
addl
cltd
imul
xchg
push
sarb
xlat
xor
cmp
xor
daa
enter
cmpsl
jae
inc
jno
mulb
lock
sbb
sub
xor
mov
mov
leave
das
mov
add
jge
add
adcb
ljmp
pop
add
test
gs
inc
lea
mov
fldl
jecxz
pop
ja
and
mov
dec
notb
sti
je
popf
roll
leave
jl
and
sbb
xchg
push
xor
xor
xchg
jp
pop
adc
lret
pop
inc
lcall
fldenv
sbb
addl
sbb
das
loope
in
mov
jle
add
arpl
js
test
or
adc
xor
fmull
outsb
xor
insl
leave
mov
mov
xchg
dec
in
push
imul
fwait
or
bound
mov
push
xor
add
mov
mov
pop
nop
js
pop
dec
mov
push
lret
scas
subb
popa
andb
enter
adc
or
out
subb
sbb
subl
cmp
and
ret
mov
repz
pop
popl
icebp
andb
sti
arpl
inc
sbb
xor
add
mov
std
int
dec
xchg
sbb
add
test
stc
xchg
lahf
fcoms
addl
pusha
xchg
and
bound
loopne
test
fadd
stos
cld
mov
idivl
xchg
stc
cmp
sbb
fldl
dec
jb
sub
movsb
inc
or
addl
mov
pop
rcrb
sar
stc
or
dec
mov
inc
mov
das
rorl
loopne
std
xorb
pop
sbb
mov
fisubrs
xchg
lea
xlat
lods
cmpl
dec
mov
enter
mov
movb
jb
cld
mov
test
mov
xor
lahf
sub
jae
add
jns
or
out
push
lds
iret
outsb
popa
lret
push
in
out
jl
ds
addb
cmpsb
pop
dec
cmp
adcb
shll
pop
fcoms
push
jbe
pop
loop
pop
sub
clc
out
mov
sarb
or
out
and
xor
xor
popl
cmpsl
xchg
rclb
cld
orb
jp
bound
daa
mov
pop
lret
test
cmpsb
mov
push
pop
xor
xor
mov
fstps
sub
push
cmp
iret
loopne
cld
adcb
sahf
or
cli
adc
push
cmp
orb
loope
adcb
mov
fstp
inc
cmp
test
mov
jge
add
sub
in
lds
and
int3
sub
orb
xchg
mov
add
pop
push
mov
scas
sarb
sbb
dec
jl
orb
mov
add
xor
cmc
inc
out
scas
xorb
mov
jnp
or
jle
dec
pop
jle
pop
lods
insl
pop
orb
outsb
mov
cs
lahf
scas
insb
pop
xorb
jle
int3
test
cmc
shrl
pushf
jo
cmp
sbb
xchg
dec
std
jmp
movsb
adc
roll
mov
sub
cmc
mov
pop
xorl
cmpsl
mov
push
push
add
sbb
test
addr16
pop
push
or
inc
sbb
mov
inc
xorl
cmp
inc
lods
sbb
movsl
cltd
xchg
cli
dec
js
subb
push
adc
add
push
push
xchg
andb
mulb
sbb
xorb
imul
out
push
stc
in
pusha
adcl
neg
cmpb
cwtl
arpl
test
mov
mov
jge
in
xchg
inc
andl
js
and
xorb
inc
cwtl
add
mov
adc
sub
lods
into
dec
jbe
xchg
sti
out
rclb
cmc
mov
adc
loope
sub
pusha
arpl
mov
add
or
icebp
adc
rorl
decl
cmc
imul
sbb
repz
dec
stc
sub
pop
das
js
and
jno
pop
movsb
push
cmpb
jae
mov
inc
nop
sti
cmp
call
ljmp
outsl
push
pop
inc
std
scas
and
dec
adc
ret
push
jmp
cltd
idivl
xlat
jl
mov
jns
int3
add
arpl
dec
pop
xchg
sbb
inc
imul
fwait
test
loopne
outsb
pop
subb
cmpsl
in
jbe
sbb
and
xchg
into
sahf
pop
js
andl
lods
pop
cwtl
mov
adc
xchg
xor
jo
aaa
fs
jg
dec
sbb
enter
xor
cmpsb
jmp
loope
outsb
rol
cmc
and
cltd
jno
ss
clc
jo
fsubrs
xchg
dec
dec
add
addl
mov
jns
mov
add
fidivl
subb
insb
jb
adc
xchg
jno
ret
fldl
jns
stc
dec
xor
jl
cwtl
jnp
movb
adc
loope
add
dec
ljmp
cmp
cmpb
test
sbbb
mov
inc
subb
orb
lret
xor
rcr
pop
dec
push
xor
test
cmp
mov
daa
mov
add
adcb
testb
jae
sub
dec
aam
in
xor
pop
sbb
outsb
in
pusha
andl
je
adc
sbb
fcomps
arpl
fildl
andl
sub
ds
jo
mov
sbb
in
pop
pop
jae
cmpl
sub
inc
aam
jmp
sbb
cmp
sbb
push
push
faddl
sub
cmp
jge
nop
fs
icebp
mov
adc
pop
jbe
xchg
pop
movsl
dec
dec
xor
cmpsl
sub
push
fsubrs
dec
negl
jl
sbb
shrl
clc
subb
xadd
push
mov
dec
jp
add
dec
or
in
stos
sbb
pop
orb
mov
loop
stos
sub
das
cmp
decb
inc
lds
out
sub
aaa
mov
push
lock
sbb
jbe
leave
xlat
and
mov
ljmp
pusha
test
das
adc
je
dec
orb
add
jns
out
jl
cmp
pushf
jge
movsb
mov
subb
inc
xchg
sub
sbb
test
fnsave
roll
mov
mov
jns
mov
clc
push
cmpb
out
push
iret
sahf
sub
popf
adcl
mov
cmp
insb
mov
in
popf
xor
lods
sbbb
mov
xor
fwait
and
clc
cmp
cmp
jae
jle
jp
and
mov
fstps
lods
lods
aas
add
sub
jbe
add
repz
jg
sub
mov
fnsave
add
into
xorb
stc
out
jmp
or
push
fnsave
andl
mov
stc
repz
ficoms
out
jae
jne
dec
jl
addb
out
fldl
cmpsb
int
fdivrl
in
lods
jecxz
leave
adc
or
xchg
popf
addb
push
push
jmp
dec
insb
lret
push
fsub
ja
test
addb
mov
pop
inc
sub
cmp
jae
andb
inc
xchg
insb
nop
jno
ss
jae
xor
shrl
sbbb
xorb
imul
iret
ret
sbb
rcrb
sub
xchg
adc
sub
pop
aaa
cmpb
and
js
sbbl
sbb
enter
add
leave
xchg
ljmp
cmp
sbb
subb
pop
push
push
mov
or
pop
adcb
ficoms
pop
in
sbbb
sar
rolb
subl
mov
push
je
inc
arpl
test
inc
pop
mov
and
adc
or
test
pop
lods
cmpsl
aam
adc
in
xor
mov
out
out
dec
stos
xchg
daa
cmp
jb
addb
mov
andb
ss
inc
loop
sbb
je
cmpb
jno
add
cmpb
cmp
adcb
pop
xor
or
fdiv
movl
fadds
sbb
clc
out
pop
pop
xor
sbb
jg
push
jmp
mov
xchg
xor
inc
and
mov
pop
int3
leave
sub
push
adc
or
mov
testl
lds
imul
push
fdivs
ret
xchg
clc
push
sbbb
loopew
and
add
push
mov
ret
mov
xchg
pop
mov
pusha
adc
push
mov
jge
xchg
sahf
addl
jb
aam
ret
push
sbb
pop
xor
std
xlat
or
push
jecxz
mov
and
dec
dec
sbb
mov
stos
mov
icebp
adcb
in
sbb
rcrb
fwait
xchg
and
sarl
or
xchg
push
jno
jo
nop
cmc
daa
mov
jp
fs
pop
cmp
test
sbb
xorb
mov
adc
xchg
or
rorb
rcll
mov
faddl
jmp
ds
movsl
leave
popf
and
jo
inc
lods
mov
cltd
fistps
mov
push
jg
fst
xchg
js
add
enter
and
lock
push
inc
xchg
dec
cmp
popl
fbstp
outsb
xor
addb
mov
addl
mov
lret
jl
rolb
out
inc
mov
and
push
sahf
inc
inc
mov
jecxz
dec
cmpl
push
and
jmp
pop
push
popf
and
out
imul
pusha
ret
ljmp
xorb
stc
mov
lret
or
sbbb
loopne
mov
cld
js
clc
addb
add
jae
or
addl
add
subb
push
repz
in
sbb
insb
xlat
jbe
sub
test
pop
dec
xchg
adc
rcr
inc
pop
popf
insl
aam
and
mov
mov
xor
sbb
sahf
inc
jo,pt
gs
jno
push
xchg
adc
push
or
repnz
jb
addr16
int
jno
orl
aad
or
cmp
cmpsl
xchg
jge
cs
fcompl
cmp
jle
fisubrs
repz
ror
cld
pop
orb
in
dec
ja
loop
sahf
notl
jns
enter
mov
xchg
mov
dec
inc
adc
push
push
insb
repnz
lahf
cmp
mov
stc
push
rolb
push
pop
loope
xchg
loopne
in
or
sbbb
ficoms
sub
dec
inc
fnstcw
add
scas
mov
cmp
push
pop
xchg
loope
fstpl
iret
in
jg
sub
jns
ret
xor
cmp
pop
push
rcrl
mov
xchg
dec
mov
call
scas
mov
add
stos
or
or
mov
sbb
lock
inc
sub
xchg
mov
jmp
subb
jae
data16
icebp
push
jg
adcl
pop
cmp
jp
imul
subb
or
mov
xchg
sbb
push
ret
ljmp
fildl
push
sbb
int3
adc
fwait
xor
cmp
sbb
dec
cmpb
add
lret
shlb
mov
jg
clc
mov
sbb
arpl
mov
inc
jg
popl
pop
scas
and
or
sti
ret
add
mov
jmp
inc
jne
jle
mov
add
cld
mov
test
movsl
sub
es
stos
icebp
mov
lds
clc
subb
jg
fisubrs
fistps
xorb
mov
subb
fdivrs
inc
jnp
or
add
adc
xlat
xor
inc
add
push
dec
pop
repnz
mov
pop
sahf
loope
mov
popf
and
ret
mov
in
inc
mov
fcmovnu
fists
sub
ret
xor
or
imull
sub
mov
arpl
das
xchg
or
addr16
sbb
popf
jns
incb
mov
fimuls
adc
or
dec
jp
fsubs
lea
pop
dec
jle
jl
sbbl
xchg
and
mov
dec
push
addb
xchg
mov
shlb
mov
xor
lock
mov
jmp
cmc
push
sub
mov
inc
into
dec
sbbb
or
mov
pop
daa
push
inc
sub
inc
call
push
subb
in
emms
icebp
sbb
out
cmp
stos
loopne
push
xorb
leave
sbb
in
test
and
pop
add
jne
sbbb
in
inc
lahf
ljmp
cld
jbe
idivb
stos
sbb
inc
and
movsl
je
loopne
mov
sub
or
cmp
das
fcompl
xchg
int
xlat
xchg
fwait
inc
pusha
pop
mov
inc
sbbb
sti
leave
pop
jge
sahf
mov
lods
dec
sbb
mov
notb
fildll
and
pushl
enter
popa
jle
sbb
jns
jb
subb
in
enter
adc
cltd
ds
and
shll
loopne
orb
sahf
mov
mov
imulw
pop
sahf
pop
outsb
out
std
jl
jbe
cmpsl
xchg
xor
mov
stc
pushl
addl
cmpb
cmpsb
sahf
sbb
jo
in
lds
sub
mov
rclb
add
push
mov
imul
jg
jnp
ljmp
das
cmp
test
sub
dec
cs
xor
push
gs
adcb
cmp
inc
cmpb
push
clc
or
fchs
movl
iret
sbb
add
sar
sarl
mov
fcom
sbbb
std
sarl
adcb
jle
jle
js
cmp
pop
jge
ja
xchg
stc
push
addr16
outsb
pushf
sti
testb
rcrl
cmpl
ret
mov
fs
aam
iret
cmp
subb
jg
jb
mulb
jne
bound
orb
add
dec
xor
or
push
test
push
fcmovu
inc
int
jp
subb
jmp
lahf
add
jb
jo
xchg
push
xlat
ds
addb
rolb
xorb
xorb
dec
loopne
cmpl
lea
xchg
xchg
push
mov
add
ja
jns
mov
popl
gs
lret
out
subb
std
adc
inc
sbb
xor
sbb
mov
orb
mov
lahf
adcl
sub
mov
adc
cmp
orb
fldenv
dec
mov
pop
jo
aad
hlt
andb
xchg
nop
xchg
inc
sbb
shlb
insl
pop
push
fadds
add
adc
aaa
sbb
push
roll
push
mov
cmp
pop
push
loope
and
gs
xor
adc
into
pop
cmp
and
imul
pop
adcb
sub
cmp
xchg
movb
shrb
xor
sbb
xchg
lock
cld
ss
xchg
xorl
lods
cli
ret
xchg
call
dec
in
cmpb
repz
cmpsb
pop
cmp
adc
mov
dec
add
popf
fdivrl
cmpsb
xchg
xchg
cli
gs
dec
dec
mov
ret
push
jb,pt
jne
imul
ficompl
xchg
mov
mov
sbb
inc
out
sbb
mov
mov
adc
icebp
mov
sub
mov
test
clc
push
sub
mov
pushf
xchg
and
mov
lret
adc
xor
icebp
int3
add
addb
fisubs
adc
xorb
roll
cmpsw
mov
inc
pushf
je
xor
cmp
out
fists
aam
lcall
into
adcl
dec
add
rorb
xchg
mov
mov
out
cmpl
or
mov
addb
and
repz
cmp
testb
dec
addb
adc
push
mov
xchg
adc
mov
inc
ljmp
loopne
pop
iret
sbb
pop
dec
negb
cmp
les
cmp
xchg
in
adc
add
mov
add
rorl
sub
mov
stos
xchg
cmpsl
dec
xchg
push
jl
cwtl
pushf
or
test
cmp
or
addb
adc
xorb
or
mov
mov
out
xchg
imul
cld
cmp
bound
pushf
mov
push
adcb
sbb
fwait
xchg
js
push
cwtl
addb
pop
jae
and
aas
sub
adcb
xlat
xor
sbbb
mov
or
addb
jo
movsb
lcall
push
mov
sub
incl
rcll
xor
xchg
dec
faddl
fadds
addr16
ss
dec
addb
adc
and
stos
push
incb
or
popf
movsl
in
mov
andb
std
jo
repnz
xchg
shlb
out
insb
and
xor
ja
inc
sub
push
mov
test
hlt
pop
es
mov
xchg
je
or
insl
sbb
xor
xchg
test
out
mov
popa
and
movsb
or
test
push
popf
icebp
xchg
pop
iret
andb
xchg
dec
dec
xor
fildl
addb
hlt
test
xchg
pusha
mov
cs
mov
addr16
xor
fbstp
insl
adcl
aad
xchg
xchg
and
orb
repnz
inc
pushf
ljmp
adc
ss
or
xor
js
push
aad
mov
push
push
sub
mov
pop
ljmp
addb
xchg
cmp
cmpsb
and
add
mov
and
adc
mov
out
sbbl
or
mov
mov
mov
inc
test
in
mov
add
out
out
xorb
lret
sbb
mov
call
or
adc
aam
std
push
mov
fsubl
adc
jnp
mov
iret
icebp
inc
cmpb
cli
lock
dec
or
fucomip
sar
jb
insl
jl
xor
xor
mov
jno
mov
fiadds
les
sub
rcll
jnp
mov
and
sahf
mov
push
xchg
repnz
fistpll
mov
mov
scas
ss
or
in
rolb
jl
mov
and
cmp
and
mov
jp
andb
jl
xorb
mov
xor
orl
outsb
pusha
data16
sahf
cmp
and
bound
mov
xchg
roll
sbb
inc
pop
mov
call
roll
sbb
sub
out
pop
sub
mov
xor
andl
lds
pop
in
dec
mov
jbe
jae
xor
addb
fldenv
jo
lret
orb
sub
shlb
icebp
xchg
mov
pop
adc
stos
or
pop
xchg
pop
repnz
adc
mov
and
inc
ja
push
scas
cmpsl
pusha
aam
xchg
shl
fistps
sbb
lcall
popa
hlt
or
sbb
pop
movsl
insl
fs
insb
andb
xorl
add
add
fdiv
leave
popf
push
andb
loopne
pop
cmpb
enter
ljmp
shr
xlat
jg
pop
and
mov
xchg
notl
pop
outsl
mov
or
repz
sti
std
push
adc
shrb
and
shlb
add
mov
pop
in
add
clc
mov
sub
cmp
sub
jo
and
inc
or
dec
inc
rorl
addr16
sbb
in
ds
testl
loopne
andb
dec
js
repnz
icebp
xchg
xor
stos
add
jo
mov
test
cmp
mov
xchg
out
andb
mov
sub
xchg
mov
cmpb
imul
shufps
not
scas
push
clc
fsubs
mov
ret
cmp
rol
sti
mov
add
adc
lret
mov
sahf
stos
dec
xorl
testl
mov
leave
push
fistl
testb
test
repnz
std
push
int
inc
std
xor
mov
fadds
cs
subb
sarl
in
ret
and
jecxz
add
lcall
push
test
cmp
andb
sbb
divb
lret
add
xor
xor
and
jno
test
push
in
cs
es
add
nop
leave
dec
sbb
xchg
aam
or
std
lahf
and
and
dec
pop
fcomps
and
mov
adc
xor
mov
je
dec
subb
sub
jae
daa
pop
mov
mov
scas
aas
es
add
pop
cmpsb
lds
in
fldenv
xchg
jo
andl
inc
stc
sbb
adc
aad
xorb
cwtl
std
cmpl
mov
cltd
lret
pop
xchg
test
mov
subb
push
pusha
xor
cmp
cmpb
mov
add
add
out
rcr
sub
dec
nop
stos
xchg
adc
cmp
pop
leave
cmpb
mov
jle
xchg
sub
outsl
push
jae
jl
popf
roll
mov
push
adcb
push
inc
sbb
xlat
fcoml
xorb
addb
repz
mov
adc
pop
jl
or
xor
jnp
jnp
and
adc
jl
push
stos
or
fucomi
rolb
loope
jo
pop
and
add
cwtl
mov
cmpb
cli
xchg
loope
cmpsl
cmp
into
xor
pop
shr
dec
outsl
andb
dec
jge
mov
xchg
div
pop
subw
push
repz
mov
xorb
pusha
sub
pusha
mov
mul
inc
nop
aad
and
stc
arpl
aam
pusha
fwait
xchg
hlt
fnstcw
js
into
rcrb
adc
pop
sub
and
mov
orb
loopne
mov
dec
rcl
js
sbb
movsl
lahf
nop
xor
movsl
mov
push
or
movsl
cld
jecxz
add
lcall
lret
cmp
sub
andb
xchg
call
out
mov
add
cmpsb
js
push
loopne
rolb
mov
push
addr16
fldenv
or
arpl
jno
adcb
or
add
aad
jnp
and
lahf
push
ds
mov
into
daa
fldenv
mov
mov
mov
shlb
mov
lret
sbb
and
subb
repz
jbe
incl
push
mov
arpl
push
add
adc
jb
sub
stos
and
test
sub
xor
jae
mov
xlat
mov
push
mov
mov
lea
jle
leave
push
push
inc
sub
dec
mov
mov
mov
je
push
inc
cmp
repnz
jnp
cmp
xor
or
out
insl
cs
mov
in
mov
jo
aad
icebp
xchg
cltd
or
pop
lock
xorl
in
cmpsl
xchg
in
jb
sbb
dec
xor
pop
or
popf
and
sbb
rcrb
je
adcb
shrl
or
inc
outsl
sub
andb
sbbl
pop
dec
push
cmp
and
andb
or
out
push
psrlq
sbb
or
sbb
xchg
xchg
sub
mov
inc
jo
add
mov
je
mov
iret
pop
out
js
ljmp
mov
mov
or
in
dec
cmp
push
cltd
dec
addl
andb
cmc
orl
add
add
rcl
dec
mov
stos
mov
sbb
fnstenv
sahf
aad
pusha
cs
in
push
pop
lds
mov
or
push
mov
loope
imul
sarb
inc
test
outsb
mov
cmp
inc
stos
adc
addb
xor
sbbl
inc
stos
ret
lret
cmc
or
bound
rorl
ficoms
enter
adc
lcall
addl
mov
mov
xchg
inc
int3
xchg
and
xorb
movlps
add
jp
and
jnp
add
ljmp
pushf
mov
push
fbld
incb
xchg
cmpb
add
testl
lea
jmp
mov
adc
mov
sbb
pop
push
addb
pop
out
std
dec
jne
cmc
fstpl
cmp
pop
xorb
xlat
add
adc
les
and
sbbb
loopne
xchg
mov
adc
cmp
cld
jne
popf
repz
fdivrs
rcrl
addb
sarl
mov
addb
fimull
sbb
adc
mov
dec
push
jmp
mov
addb
or
or
jno
scas
stos
jl
cmp
lds
andb
pop
dec
out
test
fsubrl
sub
inc
inc
adc
mov
sub
stos
sub
repz
jbe
icebp
mov
push
je
mov
clc
sbb
cmp
sbb
stos
insb
loop
inc
popa
sbbb
fcomip
repz
in
mov
inc
xchg
outsb
test
insb
and
add
add
pop
in
clc
lret
pop
or
adc
sub
push
loope
aaa
pop
popa
fs
or
insb
adcb
adc
push
sub
mov
test
mov
push
jnp
mov
adc
cs
sbbb
sbb
add
pop
xorl
sub
pop
xchg
mov
or
ds
push
enter
and
les
pushf
lock
xchg
daa
mov
pop
push
addb
mov
and
loopne
cmp
and
add
lret
daa
push
repz
pop
cmp
xorb
pop
leave
mov
incl
aad
mov
pop
push
pop
cmpb
leave
xor
int3
in
into
add
orb
adc
push
push
lds
jmp
fldenv
cwtl
or
das
xchg
xor
fsubrl
repnz
sub
cmp
adc
hlt
ror
mov
or
out
pop
adc
idiv
sbbb
push
jp
jnp
xor
sbb
gs
lds
xchg
lods
xorb
subb
mov
stos
mov
adc
xchg
fisttpll
jmp
xchg
es
and
ljmp
ret
sahf
lods
repnz
sti
jnp
movsb
add
pushf
fs
sahf
dec
mov
pop
fistps
outsb
pusha
cld
ja
jbe
mov
pop
add
jl
subl
pop
repnz
sub
nop
jb
mov
xor
aas
add
movsb
pushf
xlat
push
hlt
xchg
ljmp
and
inc
mov
loopne
inc
fstp
mov
add
xor
sbb
add
pusha
loopne
push
mov
or
push
add
dec
int3
pop
hlt
sti
mov
add
dec
clc
add
stc
vmread
sbb
test
iret
xchg
subl
mov
lods
inc
add
insl
loopne
adc
aaa
orl
insb
outsl
es
test
cmp
cmpsl
mov
lods
sti
out
cmpb
fists
xchg
xchg
xchg
lock
rolb
loope
outsl
loop
pop
mov
sbb
ror
and
dec
sub
jle
roll
xor
js
mov
test
ret
push
inc
sbb
mov
sub
leave
cmpb
sub
pusha
cwtl
orb
add
mov
sar
idivl
adcb
xorl
inc
dec
mov
and
pop
pop
into
sbb
int3
adc
bound
lcall
adcb
add
adcb
and
addb
cltd
out
sbb
or
dec
lods
test
xor
inc
call
aad
fildl
test
xchg
lods
repz
jmp
andl
cmpb
mov
push
fs
or
in
ret
int
and
jne
and
xchg
clc
outsl
mov
xlat
jno
pusha
dec
addr16
jle
inc
fimull
sbb
divb
outsl
jg
xor
shlb
cld
incl
dec
mov
in
adcb
inc
fsubs
in
jbe
and
or
cmpsb
in
out
adc
iret
inc
in
cld
sbb
add
and
pop
pop
xor
xor
fisubl
rorb
adcb
add
fildl
jl
jle
pop
std
jns
mov
andb
push
push
mov
jg
xchg
xor
adc
and
xchg
push
mov
jge
into
add
mov
andb
lahf
jae
fcmovne
mov
pop
xor
adc
scas
xor
or
mov
shlb
xchg
sbb
test
ja
leave
js
mov
andb
jecxz
cli
pop
inc
sbbb
push
in
mov
pop
xacquire
jnp
dec
mov
loop
and
mov
add
movsl
insb
in
and
xchg
hlt
jnp
dec
das
xchg
push
subb
jne
into
mov
jecxz
or
push
adc
pop
cmpsb
mov
lock
dec
stos
sub
cs
insb
shrl
push
movsb
aam
cmpsb
cmpb
icebp
into
addb
lea
jmp
shll
cmpsb
repz
push
mov
dec
int
push
xchg
gs
mov
and
lahf
sbb
ds
faddl
subl
mov
ja
xor
dec
pop
push
mov
jl
fwait
adcb
xchg
xor
add
xor
jbe
jle
subb
ret
push
or
mov
jns
cli
or
lret
jle
jbe
roll
cmpsb
jg
dec
subl
dec
jnp
pushf
pop
adc
call
mov
and
push
aam
add
push
xor
adc
gs
arpl
mov
int3
ror
jbe
faddl
mov
fildl
jle
rorb
je
orb
aaa
dec
push
mov
cwtl
cmpb
cmp
push
scas
cmp
mov
mov
arpl
cs
andb
xchg
xorb
xor
fisubrl
in
outsl
jl
arpl
imul
divb
nop
xor
mov
pop
jp
xchg
or
mov
cmp
dec
subb
mov
lret
fists
mov
aam
dec
loope
and
jl
sub
pop
addl
lret
andb
mov
inc
push
mov
subb
or
jno
push
and
es
repnz
push
adc
andb
adc
lock
roll
pop
cmpb
mov
add
and
hlt
mov
pop
ret
and
xor
or
addl
push
add
pusha
cli
mov
mov
sahf
pop
fiaddl
push
sbb
pop
mov
mov
ss
push
push
sub
xchg
loopne
iret
andb
pop
xchg
nop
divb
es
push
ja
mov
dec
add
loopne
mov
xchg
and
sbb
frstor
andb
or
push
or
mov
loop
or
stos
fwait
mov
out
inc
pusha
aas
icebp
ficomps
dec
addb
in
or
popa
scas
mov
add
insl
xlat
and
ja
xorb
loopne
into
in
mov
xchg
cmpb
int
jo
adcb
insl
orb
scas
sub
jb
adcb
packsswb
adc
sbb
xlat
fs
sbb
mov
repz
cmc
je
int3
push
loop
rorl
cmpb
es
lea
iret
mov
cmp
mov
loopne
xchg
xchg
test
mov
cmp
addr16
sub
cmpb
sbb
inc
cmp
outsl
notl
sbbb
push
mov
inc
jg
cld
loope
insb
es
mov
xor
andb
fwait
xchg
stc
and
xor
jg
test
cli
dec
and
sub
aaa
mov
or
movsl
push
fs
jle
andb
add
adc
jno
inc
faddp
xor
adc
push
out
mov
mov
mov
stos
mov
push
shrb
pusha
mov
testb
lahf
adc
jle
jecxz
out
sahf
push
das
dec
cmp
int3
imul
add
jg
mov
fildll
sub
inc
cmp
xor
mov
mov
sub
adcl
out
aad
sbbb
mov
loopne
and
int3
movsl
push
addb
call
adc
add
cmpsb
xchg
and
and
out
jbe
dec
or
test
scas
mov
sbb
push
adcb
cmp
ja
mov
dec
inc
xchg
dec
lods
cmpb
scas
jno
lods
pop
push
dec
andb
push
aaa
lock
nop
incb
std
call
cmpb
push
and
mov
add
test
xchg
mov
lock
hlt
adcb
cmp
jae
mov
push
cmc
ljmp
pusha
mov
cmp
dec
mov
das
mov
push
jb
enter
incb
add
cmp
fisttps
jmp
inc
arpl
dec
subb
imul
gs
popf
jg
ret
movsl
dec
xchg
int
enter
dec
add
add
sahf
js
rolb
aam
pushf
lret
push
mov
test
pop
xchg
popaw
clc
push
xchg
nop
push
fldenv
jne
xchg
sub
jo
xchg
aaa
mov
adc
ret
dec
sub
out
inc
jle
iret
pop
testl
repnz
jecxz
ja
loop
dec
aad
faddl
push
inc
pextrw
cmp
mov
lods
adc
rolb
subb
enter
push
sub
scas
loope
aas
cmpb
outsl
ljmp
lds
xor
sarb
add
dec
or
dec
aas
mov
cmp
testb
mov
fildl
and
incb
cmpsl
add
repnz
loopne
insl
or
aad
pop
imul
cli
call
or
mov
popa
xlat
and
subb
lods
addb
pop
xchg
repnz
and
insb
scas
andl
inc
sbb
andl
push
jnp
pop
outsb
or
push
es
mov
in
xor
jecxz
ja
lods
pusha
andb
and
mov
pop
sahf
shll
xor
les
xor
adc
repz
inc
mov
sub
xchg
jp
out
es
mov
test
cli
cmc
pop
scas
pusha
push
je
call
sbbb
mov
sub
je
mov
add
or
sub
andb
subb
xchg
popf
pushf
pop
fildl
aas
mov
xorl
and
cmpsl
fiadds
ret
or
xchg
xchg
sub
pop
or
push
scas
popa
emms
xchg
rorl
cmp
push
mov
imul
pop
addb
test
pop
imul
mov
mov
jl
popf
popa
mov
rolb
fldcw
and
sub
fmull
push
inc
jbe
stos
cmpb
js
clc
dec
mov
cmc
adc
mov
and
shlb
sub
icebp
dec
jl
outsb
cmpb
dec
lock
pop
divl
bound
inc
mov
scas
stos
call
sub
cli
stc
lret
addb
outsb
shll
pop
roll
xchg
xlat
xchg
subl
jo
hlt
movsb
add
inc
mov
xchg
daa
cltd
jl
adc
sub
push
push
test
mov
jnp
sbb
data16
xchg
cmpl
mov
inc
mov
adc
push
out
mov
inc
xchg
pop
les
sbb
icebp
inc
push
or
frstor
mov
mov
mov
push
mov
rclb
xor
sbbb
jbe
sbbb
aaa
dec
add
lcall
subb
xchg
inc
pop
jp
pop
push
or
imul
enter
cs
cmp
das
xor
imul
adc
push
sbb
enter
and
lods
xchg
stos
push
out
andb
inc
xor
dec
or
mov
orb
int3
adc
mov
mov
add
mov
xchg
add
xorb
push
mov
dec
xchg
outsl
inc
gs
shr
xorb
iret
js
fisttps
cmp
pop
dec
add
popf
in
jl
sub
xchg
out
lds
mov
mov
pop
mov
cmp
outsl
nop
pushf
push
cld
incb
addr16
adcb
jne
or
fnstsw
sbb
pop
add
shlb
add
jp
push
or
jo
sbb
leave
loopne
fsubrs
pop
cmp
cmpl
xor
jb
nop
inc
mov
fistpl
lcall
test
sbb
test
mov
out
popf
aaa
or
inc
ret
push
nop
mov
test
or
cmp
rcr
js
enter
fsubs
pop
push
orps
adc
clc
cmc
sub
add
pusha
mov
es
cli
cmp
testb
pop
incb
icebp
adc
popf
stc
mov
mov
mov
mov
decb
inc
mov
or
or
insb
xchg
adc
or
daa
sub
popa
int
xchg
pop
cmp
in
movsl
mov
push
inc
jmp
rcl
pop
loopne
scas
cwtl
pusha
std
xchg
xchg
push
sub
mov
gs
push
inc
stos
dec
dec
int3
add
push
out
xorb
lods
dec
adc
dec
lds
fldl
adc
dec
in
sbbb
mov
xor
arpl
add
pop
adc
jg
stos
aaa
dec
das
orl
dec
orb
std
sbb
repnz
repz
xchg
rolb
and
mov
outsb
and
fldlg2
ss
pop
and
push
in
mov
fdivr
jl
sub
loop
orb
dec
dec
cmpsb
mov
andb
jns
pushf
xor
test
inc
add
js
sbb
cmc
into
mov
stos
add
adc
cmpl
pusha
mov
cld
leave
loope
mov
cmpb
daa
test
inc
mov
xchg
xor
adc
adc
sub
cmpsb
lock
aas
cld
aam
addb
mov
mov
pop
outsw
or
pop
pop
cmpsb
mov
mov
jg
mov
pextrw
dec
out
aam
clc
mov
adc
scas
enter
xchg
cmp
adc
lock
mov
orb
mov
frstor
loope
mov
fs
push
add
push
push
fwait
subl
push
dec
sub
aad
rol
out
shl
or
jne
scas
sbbl
dec
imul
arpl
inc
lds
sbb
ss
xchg
pop
mov
stos
es
or
sti
in
push
mov
adc
rclb
sub
inc
jl
js
push
sbbb
outsl
popf
sbb
dec
dec
cmc
fisubl
repnz
pop
mov
clc
mov
xor
data16
adc
cmp
cs
or
sbb
pop
das
xchg
adc
fsubs
fs
enter
jmp
adc
orl
add
and
andb
inc
sbb
jbe
mov
insb
lret
xchg
push
cmpb
sbb
xchg
outsl
add
xchg
mov
lcall
and
push
jo
mov
lds
shrl
add
pusha
sbb
and
roll
sbb
cmp
add
orl
mov
jo
clc
add
popf
js
test
jno
jns
adc
cmp
or
and
mov
lret
jne
or
orb
mov
mov
inc
lcall
adc
xchg
ja
xor
or
mov
loopne
test
sahf
negl
or
inc
fistpll
pop
xorb
xor
xorb
mov
mov
xchg
divl
sbb
add
add
mov
loope
jne
enter
sbbb
roll
pop
sub
pusha
test
sarb
repnz
and
push
pop
cmc
mov
add
jae
fisttpl
je
movl
jmp
sarb
adc
cld
inc
mov
ror
inc
mov
aaa
xchg
test
scas
fistps
les
imul
push
incb
or
jg
lods
int
addl
loope
push
and
dec
addb
push
push
scas
lcall
jle
negb
dec
sbb
subb
test
in
in
adcb
int
loope
mov
movsl
test
push
hlt
mov
add
inc
out
clc
shlb
in
mov
cmp
andb
dec
cld
add
cmpsl
or
xor
jmp
sbb
imul
xor
testb
fwait
jp
adc
add
mov
jne
insb
pop
ja
or
rclb
orb
out
insl
cld
or
fidivrs
inc
bound
mov
jl
push
xchg
inc
es
pop
dec
mov
and
pushf
pop
mov
mov
dec
mov
fmul
in
cli
mov
sbb
cmp
jg
push
addb
jl
cmc
push
ret
mov
lock
cwtl
mov
inc
addb
sub
lret
inc
data16
mov
mov
std
jl
sbb
push
adc
and
mov
call
adcl
fs
pop
adc
jno
loopne
into
lea
cmpsl
mov
out
pop
andb
data16
pop
popf
mov
arpl
mov
loopne
adc
leave
int3
mov
hlt
xorb
in
aas
xor
push
addb
loope
cwtl
fs
jg
lea
fcompl
xchg
add
mov
iret
xor
push
popf
jecxz
or
les
adcb
sti
out
test
push
dec
cmp
add
cmp
sbb
popf
popa
clc
xor
push
jno
arpl
aas
dec
cwtl
xchg
add
sbb
cmp
xor
mov
jo
orb
pop
clc
xchg
test
xchg
jp
adc
fnstsw
push
lea
pop
inc
mov
mov
daa
popf
add
dec
cltd
xchg
jne
insb
subl
inc
push
adc
mov
adc
dec
scas
lock
int
mov
push
xorb
jl
xorb
or
into
fwait
xchg
das
sub
push
jnp
andb
cli
cs
out
icebp
xchg
shl
sbb
xchg
subb
sahf
in
insb
add
or
test
push
cmp
push
icebp
fwait
add
pushf
outsl
das
inc
push
push
lods
push
leave
aad
dec
xor
out
arpl
ror
out
mov
stos
sbb
jbe
or
call
das
jg
sti
mov
add
je
fs
jge
cmovae
lods
orb
loope
push
das
cmp
nop
lahf
dec
filds
inc
sbb
test
pop
add
jnp
pop
aam
js
js
popa
jno
cmp
addb
sbb
adcb
lea
xorb
add
imul
or
fdivs
sbb
mov
imul
or
test
push
fstps
or
adc
inc
xor
push
mov
cmp
xchg
inc
popa
push
dec
push
orb
xchg
movsl
loope
andb
mov
pop
sbb
sbb
mov
popa
cld
fcmovu
mov
add
pop
push
fcoms
push
lahf
lods
daa
shlb
out
flds
into
cmp
fwait
subb
sub
xchg
mov
vcvtps2dq
addb
sbb
orl
xchg
inc
sub
sahf
test
in
nop
add
adc
push
insb
sub
movsb
jmp
pop
and
jge
aad
daa
pop
ret
sub
sbb
cmc
fucomp
incb
fwait
sbb
push
or
test
jp
dec
lods
addb
xchg
xor
inc
lods
adc
and
popf
pop
sbb
add
testl
rcll
xchg
lret
addb
loopne
xorb
or
lds
dec
inc
push
arpl
lahf
dec
adc
mov
ror
jmp
push
fstps
xchg
xorl
mov
fiadds
out
lret
xchg
cmpb
mov
ret
or
cwtl
and
adc
loopne
jno
test
int3
dec
inc
fnsave
or
pop
and
mov
adc
pop
sbb
andb
outsb
jl
adc
xchg
or
inc
shrb
sub
xor
cmp
push
cmc
andb
xor
rolb
aas
jle
jno
pushf
and
outsb
filds
push
shll
testb
jo
pop
fstps
in
orb
jns
movsl
jb
loopne
cld
les
subb
loope
mov
je
lahf
test
inc
ret
mov
sub
dec
pushf
je
sub
or
addr16
xchg
insb
mov
adc
inc
iret
cmpsb
loopne
sub
test
scas
inc
mov
jo
inc
popf
insb
push
cmpb
adc
jle
adc
sbb
inc
js
push
sti
ret
inc
sbbb
loop
subb
notb
mul
pusha
enter
test
adc
cmc
mov
rep
std
subb
pusha
dec
stc
and
dec
mov
push
neg
push
faddl
lret
mov
cmp
fldl
mov
sub
cmpsl
fimuls
subb
lcall
mov
mov
add
repz
sbbb
dec
push
imul
out
adcl
sbb
in
iret
adc
mov
fcoml
cmpsb
sub
bound
pop
mov
mov
cli
mov
pop
ss
push
cmp
cmpb
lret
xor
push
sub
jg
inc
mov
adcb
cld
in
mov
cmpsl
fmuls
sub
subb
dec
incb
add
push
shlb
xorl
mov
das
ja
and
sub
jno
cmp
mov
cmp
data16
xchg
pop
xchg
popl
jmp
imul
fsts
push
or
addr16
push
shlb
xor
xorb
incb
inc
cmpsb
mov
lahf
mov
adc
lea
jg
sbb
or
hlt
mov
mov
lock
mov
mov
faddl
std
add
rorb
sbb
jne
in
lock
xorb
push
push
cli
lahf
push
or
out
cli
ret
arpl
test
pop
subb
add
or
jmp
movsl
pusha
adc
cmpb
mov
subb
dec
dec
xchg
fwait
hlt
orb
cli
loope
test
popf
mov
insb
or
fwait
out
mov
inc
or
cmpb
aaa
pusha
pop
lock
jno
and
int
sbb
sub
js
ja
outsl
inc
test
adcb
xor
mov
sub
pusha
sbb
inc
adc
scas
bound
xchg
jp
mov
push
push
andb
jle
cmp
cwtl
sub
xlat
mov
mov
push
sbb
fsubl
orl
sbbb
adcl
fdivrp
fisubrl
shlb
add
adcb
cwtl
fisubrl
xor
orb
in
subb
cmp
dec
mov
dec
add
push
mov
jbe
orl
xor
inc
int3
cltd
mov
fiaddl
xchg
and
pusha
int3
lock
mov
int
sub
xlat
gs
lock
pop
lods
pop
ficoms
in
cmpb
inc
jo
lea
iret
cmpb
fwait
inc
lock
dec
stc
cli
cmpb
insb
xchg
sub
add
sub
inc
fistl
sbbl
mov
jle
push
outsb
popa
mov
out
shlb
cmp
or
xor
repz
jo
movsb
xchg
jns
andb
adc
adcl
mov
xor
inc
mov
dec
clc
js
pop
jno
mov
jmp
sbb
test
xchg
inc
mov
fsubr
add
loop
mov
fstps
cmc
jb
addb
xor
adcb
xor
scas
mov
adc
sub
stos
or
addl
lret
dec
out
inc
and
adc
push
imul
mov
pop
add
testb
int
ds
repnz
inc
adc
pusha
push
or
imul
mov
arpl
sbb
adc
adc
insb
scas
test
inc
or
jne
pop
mov
add
int
imul
subb
adc
out
jbe
cmpl
mov
dec
je
adcb
hlt
adc
and
imul
jo
leave
popf
cli
adc
js
and
testb
pop
rclb
dec
cmp
mov
xor
sub
insl
rol
dec
mov
inc
into
scas
mov
push
and
inc
test
or
ljmp
pop
sbb
repz
inc
pop
orb
pop
addb
or
xorb
xor
add
repz
sub
dec
cmc
xchg
mov
or
cmp
mov
dec
cmp
mov
mov
mov
pop
fnstcw
es
jne
aas
sbbb
outsl
inc
faddp
or
stos
adc
dec
xorb
pusha
movsb
inc
cld
adc
cmp
sbbb
sahf
lret
cmpb
pop
jo
push
in
in
rcl
lcall
cwtl
sub
mov
sub
inc
rolb
push
jb
pop
xchg
add
inc
xchg
cmpb
mov
out
aas
xor
sbb
cmp
cwtl
or
outsl
xorb
ret
xchg
movsl
das
mov
out
pusha
add
in
xorb
icebp
popa
mov
mov
lahf
cmpl
sub
push
jb
and
sbb
addl
dec
sub
add
cmp
sub
push
addb
int3
imul
or
cmp
jp
cmc
xor
rcrl
jo
js
pop
test
jmp
mov
shlb
cmp
les
add
aam
add
in
cmp
bound
lods
ret
lds
xorb
mov
dec
pop
xor
sbb
and
jl
icebp
test
inc
dec
lock
pushf
push
mov
into
add
idivb
push
loop
and
notl
add
push
aas
add
mov
dec
loop
popa
into
mov
mov
test
mov
ds
xor
push
sbb
xor
insb
xor
movsl
xchg
andb
addl
test
push
and
shrl
enter
rorl
xorb
in
stc
mov
add
mov
inc
jmp
adcb
insb
pop
and
pop
inc
outsl
adc
inc
addb
mov
or
add
call
inc
fbstp
push
cmp
xor
ss
rorb
lds
push
ror
xor
push
insl
fwait
mov
out
and
xor
rolb
or
pop
sbbb
cli
jns
cmp
scas
pop
outsb
push
out
mov
test
dec
orb
mov
clc
xchg
fdivrp
mov
sbb
subb
jo
movb
adcb
jle
xor
sub
enter
xchg
in
jo
orb
push
sbbb
xor
pop
out
or
mov
lahf
mov
stc
lret
push
jmp
cmp
adc
fldl
push
loope
psubd
cltd
sub
aas
sti
scas
or
mov
push
adc
inc
ret
mov
cmpb
fidivrs
adc
sub
fbld
jb
xchg
xchg
push
sbb
adc
fsubrl
lret
mov
adc
cmpb
push
jle
repz
scas
mov
dec
sahf
jno
push
add
dec
pop
xchg
cli
orl
sub
cmc
and
loop
xchg
xchg
push
mov
popf
cmpl
loopne
adc
subb
or
xchg
inc
mov
andb
sahf
lret
repz
inc
mov
mov
xor
aad
push
stos
hlt
xchg
lret
std
movsb
push
jo
adc
shl
adc
pop
mov
or
pusha
pop
cmpsl
lods
call
push
rorl
xorb
adc
stos
cmpb
clc
movsb
addb
loopnew
lret
andb
lods
rcrb
adcb
mov
repz
in
subb
cmp
mov
addb
adc
pop
fnstsw
mov
add
add
in
test
mov
iret
icebp
fdivrs
sbbb
aaa
mov
jl
pop
pop
sahf
xchg
inc
into
mov
outsb
mov
jb
xor
mov
inc
mov
bound
add
sbb
dec
jns
lret
mov
sarl
dec
test
test
sbbb
call
andb
hlt
add
or
xchg
leave
mov
xchg
nop
mov
andb
inc
pop
add
add
cli
fisubrl
aad
lock
scas
sti
push
cli
inc
incl
imul
mov
mov
cmp
sbb
subb
jl
adcb
inc
outsl
stc
and
stos
fmull
adcl
mov
sub
pusha
or
xchg
cs
fsubl
jecxz
adc
subb
inc
jns
ds
xlat
adc
shrb
mov
rcrl
pop
pop
lret
dec
addb
test
mov
xor
aaa
dec
push
jns
testl
lret
add
outsl
stos
xchg
jne
sbb
pusha
aad
sbbb
fcoms
orb
mov
cmp
jmp
ss
mov
jnp
adc
adc
jne
sbb
fwait
pop
mov
push
push
lcall
sbb
sbb
in
ret
cltd
dec
mov
and
dec
outsb
rorb
jecxz
mov
lds
rorb
out
jl
movsb
ljmp
cld
lods
movsl
pop
jbe
cmpsl
lahf
bound
stc
aam
addb
rclb
popl
push
cwtl
jo
dec
mov
in
sbb
jbe
sahf
sub
sub
push
sbbb
iret
push
jmp
nop
mov
jbe
scas
jae
adc
andb
test
enter
sbb
inc
and
in
ljmp
mov
lahf
add
sub
sub
pop
in
in
or
stos
aam
ret
and
dec
fdivrs
xchg
mov
pop
xchg
out
shll
mov
fnsave
jp
pop
subb
cltd
sbb
data16
stc
daa
cmpb
cmp
pop
push
iret
xchg
scas
shr
push
mov
clc
or
mov
add
mov
mov
push
mov
pop
fxch
xorb
out
or
push
add
pop
outsl
leave
lret
subb
sahf
pop
xor
pop
lret
mov
xchg
sub
dec
dec
test
push
cs
pop
jg
xchg
andb
cltd
inc
push
bound
ss
jle
adc
or
xor
pop
sbb
test
and
dec
ret
leave
nop
call
or
fucomi
les
test
andb
xchg
jno
fcomp
subb
rolb
add
pushf
jnp
xchg
ja
sbb
or
inc
loop,pt
sti
lea
aad
push
adc
pop
adc
or
in
xchg
push
adc
in
test
stc
andb
sbb
ret
push
pop
mov
or
stc
inc
sub
rcll
bound
sbb
jecxz
and
xchg
jle
in
js
andb
popf
inc
add
and
shlb
sbb
xor
jo
or
jge
test
out
arpl
fildl
mov
loop
cmp
xor
adc
push
enter
mov
sbbb
in
lods
xchg
test
inc
sub
xor
jge
pop
imul
xchg
addr16
pop
push
fwait
leave
arpl
and
aam
sub
mov
shlb
sbb
std
das
dec
in
mov
jge
sub
inc
push
cmp
fs
das
inc
pop
fisubrl
xchg
sub
enter
cmc
ds
mov
inc
push
or
add
push
cmp
xor
adc
adcb
pop
and
mov
cmc
lcall
aas
push
test
subb
jl
xor
jne
push
sub
xchg
pusha
jae
pop
icebp
cmpsb
adc
gs
fs
pushf
orb
and
pop
push
jge
jmp
lahf
subl
jp
cmpl
out
fstpl
je
or
lcall
lret
lock
aad
mov
xor
lock
xchg
jmp
std
and
pop
pushf
mov
fcoml
pop
sbbb
in
push
repnz
scas
andl
xor
cld
pushf
flds
fs
out
cmc
pop
addl
ljmp
pop
cmp
or
fisttpll
push
pop
or
daa
insl
mov
in
subb
scas
sbb
and
in
outsl
fs
lock
daa
loope
iret
sbb
jge
add
inc
add
and
mov
adc
xchg
mov
hlt
and
jne
push
leave
pushf
repnz
xchg
ljmp
adcb
js
cmp
outsb
sub
xchg
pop
mov
lock
andb
or
dec
jnp
inc
scas
push
int
xor
dec
push
and
mov
mov
cwtl
gs
xorb
cmp
and
cmp
imul
lods
je
jle
xchg
cmpsl
lds
loopne
pop
ljmp
mov
and
jmp
sub
pop
lock
mov
arpl
aad
pop
cltd
adc
mov
xchg
addr16
sahf
lods
rolb
into
adc
test
sahf
push
inc
jo
stos
bt
addb
add
pop
shll
cmp
ret
bound
add
adc
inc
sahf
push
push
jp
out
adc
xchg
sti
test
les
rcr
dec
jmp
fdivrs
daa
mov
jecxz
loopne
dec
push
mov
mov
xchg
inc
inc
sub
or
cmp
jae
push
jg
loope
cmp
daa
and
cmc
push
jns
insb
out
mov
or
mov
adc
pop
shll
cs
cwtl
pop
mov
sub
inc
or
pop
retw
cmp
sub
mov
orl
and
in
icebp
movsb
fmuls
addb
ret
push
push
adc
or
adc
mov
ficoms
subb
das
ja
pusha
jg
fwait
xchg
icebp
pop
pop
bound
js
hlt
xchg
push
or
jo
xchg
sub
pop
std
ss
out
sub
add
subb
sub
sbb
sbbb
or
xor
fadds
push
cmp
cmpsb
pop
js
xorl
int
xchg
push
inc
adc
inc
cmp
dec
arpl
cli
pusha
mov
xor
add
or
add
mov
mov
dec
scas
cmpb
mov
lods
dec
repnz
jbe
mov
leave
mov
dec
pop
xchg
mov
mov
push
fidivl
and
int3
mov
in
ljmp
fmull
test
in
scas
pop
andb
xorb
mov
or
xor
in
test
mov
sub
inc
mov
inc
xchg
inc
jle
scas
inc
insl
or
xorl
jg
and
fidivl
cli
and
cmpsl
out
add
fmull
shlb
xor
and
sahf
cmp
xchg
cmp
or
mov
gs
dec
decl
lahf
push
les
mov
xchg
xchg
dec
ja
fildl
in
test
insb
orb
add
pop
mov
hlt
sub
push
cmpb
mov
not
and
or
shll
loopne
mov
stos
test
mov
ficompl
jo
mov
jecxz
jp
mov
add
jbe
sbbb
mov
orb
and
jno
add
orl
pop
or
addb
popa
leave
xor
ret
and
push
sbb
ficoml
sbb
rcll
cmp
ret
dec
lock
cmpl
test
mov
mov
sbbb
enter
cmp
aam
sahf
pushf
fstl
in
test
jbe
adc
sub
jns
jno
ss
xchg
sub
outsb
arpl
cmpl
add
ffree
orb
in
or
loope
insb
aad
xchg
xchg
je
sbb
test
test
xor
dec
movsb
xorb
sbb
add
adcl
and
lods
sub
dec
fisttps
or
aas
mov
push
mov
rcll
mov
pop
clc
dec
add
add
or
incb
cmp
and
jae
js
orb
adc
lods
dec
cmpsb
cld
aad
and
sub
dec
jmp
xlat
push
in
shll
xchg
sti
andb
xchg
movsl
mov
outsb
cmpl
pusha
mov
xor
or
push
add
cmpsl
in
sbb
mov
imul
xchg
inc
popa
ja
and
sbb
hlt
jno
xchg
add
lahf
push
lods
dec
flds
pop
xorb
rolb
mov
mov
jl
dec
sbb
and
cmpb
jmp
lahf
scas
cmp
rorb
dec
dec
lds
orb
int3
pop
andb
ret
pop
sbb
inc
or
enter
and
and
loop
cmp
jo
addb
je
pop
add
hlt
sbb
adc
cmpsl
or
subb
idivl
jmp
xchg
pop
js
sar
and
pop
adc
inc
and
test
push
or
popa
inc
sub
xor
and
mov
ja
leave
mov
sub
rcll
cltd
push
fadds
test
or
cmp
mov
lock
subl
popf
inc
pop
mov
mov
addb
fimull
fldl
fmul
pop
jp
adc
movb
jle
das
subl
rep
pop
imul
adcb
js
push
rclb
ret
sbb
sub
iret
push
into
clc
js
jmp
inc
scas
fldenv
fcomps
xchg
push
fcmovnu
lock
lahf
addb
pop
xchg
lret
outsb
sbb
dec
out
add
mov
mov
or
lods
jns
idivb
nop
int
lret
mov
mov
inc
subb
enter
lret
pop
je
xorl
inc
mov
pop
andb
test
js
lret
pop
and
mov
add
sub
hlt
imul
jmp
outsl
loopne
rorl
shld
push
mov
xchg
or
pushf
fadd
subl
or
cmpl
rclb
mov
sbbb
ljmp
hlt
mov
pop
stos
cs
test
in
pop
cmp
pop
or
mov
jnp
push
mov
sub
xor
sub
loopne
ds
xchg
push
decl
test
fnstsw
or
test
cmc
loope
icebp
cmp
sbb
stc
xorb
inc
xchg
xchg
dec
insb
mov
data16
xchg
loope
cmpb
inc
jns
xchg
xchg
shl
cmp
mov
xchg
fdiv
fistpll
or
or
push
cmp
aaa
mov
das
adcb
add
inc
jmp
sbb
mov
dec
sub
movsl
into
subb
xor
fisubrs
decb
in
enter
sub
lods
stc
dec
lahf
icebp
mov
pusha
mov
adc
xchg
enter
sti
clc
cmpb
mov
popa
insb
fcompl
test
mov
jmp
lods
inc
icebp
mov
sti
pop
subb
pushf
and
add
mov
arpl
adc
ja
jl
shrb
push
popf
cld
testl
sub
fidivrl
pop
adc
mov
imul
fsubl
js
aaa
cmp
fcomps
loop
addb
ret
out
enter
push
add
dec
clc
add
andb
xor
xorb
sbb
mov
imul
jnp
andb
cmp
sbb
xor
pop
scas
xor
in
jge
cmpsl
or
sub
aad
dec
adc
rolb
inc
out
lahf
hlt
cmp
inc
lret
movsb
mov
subb
in
xchg
int3
addl
push
adcl
add
push
pop
jg
cmpb
cmpsl
xor
ljmp
lock
xchg
out
jg
rorb
pop
cmp
fcmovb
inc
sub
mov
mov
mov
out
cmc
ret
ss
and
cltd
aaa
adc
inc
pop
and
add
push
in
sbbb
push
xchg
popa
gs
sub
icebp
das
mov
jecxz
jmp
pop
dec
push
xorl
popa
sbb
xor
xchg
push
add
add
xor
cmpb
mov
jo
mov
test
mov
jnp
lret
scas
roll
inc
orb
mov
sbb
dec
outsb
jp
popf
out
lret
inc
inc
into
mov
xchg
xor
das
loopne
mov
sub
inc
scas
or
fcomps
cmpsb
sbbb
add
xor
xor
lock
fimull
andb
mov
xchg
dec
or
loop
outsl
out
xor
sbbb
cmp
push
icebp
adc
adcl
in
xchg
addb
add
inc
xchg
hlt
incb
lcall
addb
dec
push
adcb
add
shlb
test
xchg
imul
inc
es
or
les
cs
mov
jne
loop
daa
sti
xor
cli
push
pop
sbbb
lods
cmp
mov
in
add
loopne
sub
loop
fmuls
loop
mov
hlt
cld
inc
inc
xorb
out
int3
xor
cmp
mov
ret
jle
call
jl
cmpb
inc
mov
jnp
push
sar
add
inc
mov
sbb
out
subl
rcll
mov
jecxz
popf
xor
pop
clc
push
ja
mov
jo
repz
adc
frstor
push
cmp
adc
mov
cmpl
or
sbb
andb
pop
mov
repnz
sbb
popl
or
jb
mov
and
arpl
fadds
test
jecxz
adcb
aad
xchg
cmpb
sbb
and
cmp
sub
jae
jle
sbbb
or
cmpb
aas
inc
orb
mov
jbe
xor
shl
in
cmp
push
adc
sbbb
sub
xorb
pop
push
and
and
fdivrs
cmp
mov
movsb
pop
xorb
sbb
jbe
ss
orb
xor
shl
popf
mov
mov
and
jmp
scas
xorl
cmc
mov
jb
dec
xchg
loopne
jnp
subb
outsl
jp
push
jle
orb
push
je
mov
sub
addb
jecxz
jns
cli
pushf
aam
jne
andb
sub
lret
andb
test
adc
shrb
xchg
orb
call
pop
mov
pop
movsb
int3
adcb
out
lahf
push
mov
cltd
or
pop
leave
movsb
xorl
hlt
loopne
mov
loopne
jl
iret
mov
mov
mov
rorb
jns
mov
loopne
and
xlat
js
stos
fistpll
imul
cmp
call
in
add
stos
sub
push
fs
cwtl
rolb
gs
cmp
outsb
add
scas
aaa
flds
xchg
push
mov
jmp
push
pop
add
sbb
xor
movsb
mov
push
shlb
int
and
out
lahf
aaa
add
filds
xorb
ret
jae
mov
add
outsl
inc
addb
fwait
movsb
xchg
pusha
pop
fisttpl
cmpsb
mov
mov
jns
addb
xchg
lds
jbe
rorb
mov
scas
xchg
cmp
and
gs
jne
mov
cmp
fldl
xlat
jg
mov
out
mov
in
xchg
xchg
fwait
ljmp
aaa
cmpsb
mulb
arpl
imul
call
popf
jns
nop
lret
or
fcomps
imul
xor
in
cmpsb
imul
add
fwait
idiv
sub
inc
in
rcll
xor
hlt
fiadds
xchg
jge
adc
cmpb
mov
add
jmp
xor
nop
pop
addb
sub
scas
jg
fdivrs
xor
adc
pop
mov
and
lcall
dec
push
ret
fadds
or
popl
lds
cmp
or
orb
push
jne,pt
mov
adcl
or
and
push
imul
cmpb
or
out
sahf
sarl
mov
xorl
xor
and
sbb
inc
lea
adcb
mov
call
ffree
jno
pop
xorb
jecxz
cmpb
cld
fld1
leave
mov
jo
icebp
scas
test
sbb
repnz
inc
leave
adc
inc
int3
jne
aam
push
push
repz
pop
orb
and
insl
jnp
xorb
popa
jo
stos
mov
in
cmp
roll
andl
jnp
mov
or
jns
push
and
push
jle
subb
xchg
fwait
xlat
cmpsb
dec
sahf
les
inc
test
std
adc
or
mov
aas
es
ret
jmp
jns
loope
xor
fnstenv
testb
jl
cmp
push
adcb
jae
xchg
pop
in
lock
jo
insb
xchg
fcmovb
sbb
out
test
inc
xor
inc
dec
int3
and
xor
and
xchg
jg
mov
fadds
sti
push
inc
push
xorb
push
stos
push
fldl
mov
push
sahf
cmc
inc
xor
jae
cmpsb
adcl
push
mov
es
pop
mov
and
mov
mov
jp
push
pop
jge
imul
das
jg
and
push
cmp
add
pop
sbb
scas
or
nop
test
cmpl
pop
inc
and
xchg
out
pop
xor
in
adcb
int
pop
mov
sbb
mov
test
out
lret
lcall
out
ret
push
rclb
pop
dec
xchg
lahf
cmp
lds
lcall
sbb
adc
subb
mov
cmp
jp
and
xchg
dec
pop
arpl
jb
mov
pop
mov
mov
mov
in
icebp
repz
movsb
addl
addb
pop
mov
stc
rclb
pusha
int
lock
xchg
nop
sub
or
cwtl
and
or
and
dec
out
cmp
xorb
shlb
lahf
popa
cld
data16
inc
mov
ret
inc
push
add
cwtl
scas
add
imull
orb
aad
ficoms
rcll
shrb
loop
and
das
test
sub
cltd
iret
outsb
dec
jo
mov
dec
dec
mov
xchg
out
add
jge
xor
or
dec
jnp
cmp
mov
xchg
push
sbb
addb
pop
ret
mov
sub
movsb
or
adcb
jb
pop
fiaddl
xlat
cmpb
xchg
inc
push
add
lea
xchg
popf
adc
jno
cli
subb
scas
mov
enter
sbb
xchg
inc
jb
int
sarb
addb
sarl
lahf
in
sub
mov
filds
add
inc
nop
dec
sahf
ds
aad
xchg
insl
sub
outsl
je
xor
sbb
dec
call
xchg
sub
adcb
lods
push
stc
clc
xor
pop
js
cmp
es
cmpsb
cmp
mov
cmp
stos
xor
popf
xor
or
loope
sbb
je
scas
test
sbb
adc
or
sbb
mov
jo
lahf
mov
jns
add
xorb
bound
loope
add
ja
jp
cmp
xor
mov
int3
and
lods
mov
orb
xchg
fiadds
xor
ficomps
jl
arpl
mov
js
iret
mov
sbbb
jmp
repnz
mov
mov
or
imul
js
xorb
mov
aad
add
addb
test
inc
push
and
out
xlat
je
xchg
pop
mov
mov
xchg
pop
lods
test
inc
cmpb
out
outsb
mov
cmp
test
mov
test
push
jno
iret
shrb
sbb
dec
outsb
in
addb
or
orb
or
mov
mov
mov
out
adc
pop
xchg
and
jecxz
cli
or
lods
lcall
adc
inc
lahf
data16
and
add
daa
je
adcb
cmp
mov
jl
dec
push
in
mov
repz
sub
lea
in
and
xchg
cmpb
inc
lods
cmp
aad
xor
out
popf
xchg
cltd
out
subb
shll
and
cli
roll
mov
rclb
popa
mov
scas
addb
pop
lahf
shll
js
xchg
mov
cmp
cmp
mov
ret
subb
jnp
pop
fstl
aam
xchg
icebp
fwait
cmpb
mov
xor
jns
mov
adcl
adc
pop
es
lcall
loope
dec
popf
jp
inc
push
lods
inc
mov
add
dec
push
lods
sbbl
dec
pop
xor
cmpb
sbb
roll
inc
cmpsl
outsb
jns
jae
mov
orb
imul
andb
aad
je
mov
les
push
iret
xor
mov
xor
pop
clc
stos
outsl
sbbb
or
subb
push
or
mov
orl
movsl
push
and
inc
fwait
push
pop
add
das
fisubs
mov
sub
pop
mov
lea
jae
andb
jg
jp
sti
popf
enter
subb
shll
push
mov
and
pop
xchg
sub
adc
cmp
cmc
jmp
xlat
xchg
xor
fildl
and
cmp
stos
pop
pushf
mov
incl
mov
xchg
pop
push
ja
jb
sub
mov
mov
push
les
sahf
pop
adc
jg
jb
add
cmp
mov
sbb
add
je
or
arpl
js
outsl
jle
mov
div
jnp
int
lock
jnp
inc
or
push
call
add
adc
je
adc
cld
and
sub
addb
xor
aaa
leave
loopne
int3
and
pop
movsl
shll
mov
xlat
jns
subb
ficomps
adc
inc
or
rorb
bound
out
xorb
addl
mov
lock
jb
je
xchg
sbbb
jl
cmpl
insl
pop
imul
sbb
pop
sysret
mov
inc
jo
xchg
loopne
lahf
inc
push
inc
sbbb
jmp
xor
mov
in
out
jo
inc
push
out
nop
pop
sbbb
jae
outsb
cmp
sbb
ljmp
push
xor
daa
pop
adc
testl
mov
fcoms
xchg
movsl
cmc
mov
stos
mov
and
rolb
roll
pop
cltd
xchg
xchg
mov
xchg
loop
loopne
sbbb
lret
xor
mov
dec
push
mov
mov
sbb
lods
and
je
roll
lahf
subb
adc
movsl
sbb
cmpl
pop
cli
popf
push
call
andb
das
jl
sub
add
xchg
mov
xor
sbbb
jge
sub
jp
cli
imul
cmpb
push
insl
xorb
test
shll
xchg
sbb
sub
adc
inc
cmpb
popa
js
jmp
mov
outsb
test
out
jno
into
inc
imul
pop
jle
dec
sti
lods
shl
mov
add
pop
addb
jecxz
fisubrs
adc
sahf
add
repnz
add
ret
mov
in
and
rcll
adc
mov
sub
pop
adcb
add
les
dec
jnp
cld
mov
je
clc
mov
jns
orb
or
leave
cmp
es
mov
sub
cmpb
sbb
mov
rorb
out
outsl
call
mov
ds
scas
pushl
or
nop
mov
xchg
adc
adcb
lods
cld
fs
out
pushf
stos
fsub
fcmovb
inc
cmpb
lret
movsb
push
and
add
lcall
mov
xchg
std
insl
sbbb
and
cmpb
mov
iret
lret
jl
pop
sub
push
lods
aaa
jno
shrl
popf
xor
icebp
shlb
cmp
jl
sbb
xchg
sbb
xchg
sbbb
addr16
sbbb
inc
andb
add
daa
mov
push
sub
push
dec
scas
and
sbb
cmc
mov
add
icebp
pop
orl
xor
jp
movb
pop
or
loopne
lcall
leave
std
mov
xchg
ljmp
push
mov
mull
xchg
mov
push
dec
cli
and
out
leave
into
mov
lret
addl
int3
lock
mov
lret
fmulp
sbb
push
adc
cli
sub
inc
push
sbb
cmpb
mov
repz
decl
cmp
jae
loopne
stos
stos
scas
not
cmpl
sub
xchg
es
sahf
daa
roll
das
lods
xor
lock
nop
inc
adc
or
xor
push
aaa
dec
ja
popa
andb
rcl
sub
mov
jbe
xor
fsubrp
or
aad
and
pushf
cmpb
fldl
in
and
ret
lahf
dec
or
out
mov
iret
push
sub
inc
inc
scas
jl
in
inc
or
dec
gs
mov
sbb
iret
sbb
or
mov
push
sub
cmpb
sahf
sub
xchg
add
lea
sbb
push
int3
popf
sub
add
fnstsw
push
mov
mov
scas
or
push
sahf
movsb
xchg
jg
loopne
hlt
mov
insl
out
fstl
fidivrl
xchg
pop
mov
cmpb
sbb
insb
push
subb
jg
jbe
std
call
dec
ss
andb
int
pusha
sbb
andb
in
xorb
cmpl
dec
sbb
adc
ds
stos
inc
mov
sahf
sub
mov
pop
andb
pop
pop
out
test
inc
xorb
std
sbb
subl
cld
cmp
adc
mov
in
lds
adcb
lret
xchg
pop
bound
cmpsl
pop
fwait
mov
ss
jb
cmp
into
mov
mov
pop
test
xchg
fadds
add
mov
test
and
leave
lods
mov
ret
adc
push
fisttps
xorl
sub
cli
mov
xor
lret
inc
cld
sbb
jl
xor
jnp
shrb
inc
incl
and
ds
popa
test
inc
hlt
cltd
inc
sbbb
loop
dec
ljmp
mov
dec
hlt
pop
bound
adc
stc
pushf
mov
xorb
icebp
push
inc
mov
sub
hlt
cwtl
sbb
mov
lret
ljmp
ret
push
push
dec
jne
xchg
adcb
out
fs
pop
push
add
stos
mov
daa
popf
lods
fnsave
add
cmp
jmp
xchg
sub
add
in
lock
outsl
je
addb
cmp
jmp
jecxz
dec
test
andl
cmpsl
add
push
out
jmp
fbld
bound
stc
add
loopne
in
inc
loop
test
test
data16
gs
mov
jb
jp
mov
push
mov
mov
cmp
test
bound
add
xor
ret
out
andb
rol
mov
aaa
xchg
ror
push
cmpsl
leave
pop
mov
add
dec
add
lea
mov
sbb
mov
add
sub
xor
adc
mov
fwait
je
stos
gs
sti
lahf
sahf
push
and
fcomps
subb
jo
nop
pop
push
enter
lock
cli
add
mov
cmp
movsb
xchg
sarl
add
mov
mov
adc
jb
inc
xorb
lret
jle
lcall
or
adc
xor
movsb
sub
xor
shlb
jle
push
lods
inc
bound
fs
adc
mov
or
and
pop
cltd
mov
dec
push
incl
jp
lret
pop
cmpsl
pop
movl
lock
adc
cmp
ljmp
icebp
adc
mov
dec
es
pop
fldt
xor
in
ja
cmpb
movsb
push
not
xorb
std
shrl
fidivrs
and
xchg
fwait
cmpl
xlat
stc
iret
mov
xor
adc
cltd
mov
divb
sahf
xlat
es
jmp
sub
pushf
xchg
testb
jae
js
aaa
andl
je
sub
mov
inc
loopne
adc
mov
inc
jl
sbbb
roll
adc
xorb
lods
dec
mov
hlt
cmpsb
sahf
aad
outsb
add
ja
fs
xchg
aam
jae
sbb
xchg
add
and
cmpsl
xor
mov
testb
adc
fcoml
push
in
adc
imull
sarb
cli
or
in
fcompl
pop
xorb
xorl
les
in
inc
or
cld
rolb
xchg
and
dec
add
mov
jae
lahf
or
add
mov
mov
int3
cld
loop
sbbb
mov
lret
pusha
setb
andb
lock
and
add
push
and
dec
pop
xchg
mov
orl
ret
push
fdivs
repz
into
pop
sbb
xorb
inc
out
mov
shl
or
push
xor
add
pop
mov
daa
mov
xchg
aas
loopne
movl
rorb
mov
inc
push
adc
and
dec
jns
push
orl
clc
and
out
sbb
adc
add
mov
call
xor
pop
lods
mov
dec
push
mov
data16
andb
adc
lahf
inc
out
sbbl
cld
sbbl
push
ljmp
dec
cmpb
mov
adc
aas
fidivl
xchg
cs
lea
int3
bound
xor
jb
add
imul
jbe
bnd
outsl
call
inc
cmp
jne
std
add
xor
cmpsb
or
ljmp
andb
scas
lock
pop
pop
fsubl
out
cmp
add
add
adc
mov
add
fucomp
mov
add
scas
jns
orb
enter
test
jle
inc
xchg
clc
push
pop
adc
fistpl
roll
pop
jmp
fldl
sub
andb
pushf
mov
insl
mov
andb
xchg
sub
sub
adc
js
fwait
inc
xor
repz
inc
subb
inc
cld
sub
orb
out
aas
mov
sbbl
and
add
jecxz
jae
mov
or
and
sbb
push
inc
les
mov
rclb
subb
sub
lret
fstpt
mov
subb
mov
mov
jecxz
addr16
out
mov
popf
cmp
daa
subb
stc
dec
inc
inc
icebp
rolb
sbb
xorb
push
inc
std
xchg
sbb
cmc
cmp
lods
sbbb
cs
out
adc
jge
jl
jle
push
lods
cmp
out
cmp
or
arpl
out
jns
shr
addb
faddp
push
sbb
and
mov
xor
dec
sub
mov
jbe
mov
jno
lods
rolb
add
movsl
add
jge
leave
inc
mov
cwtl
sbbl
and
addb
ss
lock
mov
addb
ds
sbb
lret
cwtl
into
sbb
jle
cmp
xorb
and
addl
cmp
inc
cmp
sub
push
push
pusha
inc
sbb
adc
lea
sub
xor
std
loope
mov
xchg
cmp
insb
daa
idiv
push
xchg
je
sarl
xchg
pop
xor
mov
pusha
in
cmpsb
lahf
inc
push
orb
sbb
dec
int3
push
pop
andb
xor
std
xchg
or
push
jge
lcall
les
hlt
adc
mov
imul
adc
mov
outsb
sahf
bound
adc
hlt
insl
jns
push
fnstenv
add
pushf
js
cltd
xchg
clc
scas
notb
test
addl
cltd
mov
imul
cwtl
ffreep
test
gs
cmp
jecxz
adc
cli
lret
sub
out
xchg
sti
imul
cs
addb
cmp
add
mov
iret
andb
and
cmpl
enter
xchg
lods
lret
push
adcl
cwtl
add
jecxz
xor
jmp
mov
sti
sbb
fwait
subl
roll
pusha
mov
pop
sbbb
cmp
push
sub
fdiv
adc
xchg
test
jno
out
push
in
add
rcrl
mov
ror
xor
jno
lahf
jecxz
pop
inc
lds
sar
and
mov
fs
fstpt
imul
xor
push
mov
push
lret
std
iret
cmp
repnz
mov
popf
adc
sub
sub
sbb
mov
data16
xchg
jecxz
jge
xor
rclb
jo
xchg
leave
push
cmpsb
adc
rorl
out
mov
add
shlb
mov
inc
inc
jo
push
inc
adc
ss
sahf
fsubl
sub
mov
out
shlb
rorl
push
jb
cltd
add
mov
rorl
loope
dec
mov
int
mov
xchg
scas
pop
mov
mov
pop
inc
hlt
adc
and
xor
adc
js
test
addb
andb
scas
pusha
cltd
jmp
xorb
test
int3
orb
dec
mov
xchg
inc
mov
out
lahf
push
popf
sub
mov
pop
repz
sahf
enter
mov
ja
outsl
addb
mov
addb
shlb
rep
inc
in
dec
xchg
mov
js
cmp
divb
mov
and
xor
out
jo
imul
cmpb
lahf
mov
xor
subb
addr16
orb
aaa
mov
or
mov
or
adc
adc
dec
pop
pusha
into
imull
xor
mov
or
cld
push
mov
and
dec
sbb
js
mov
adc
outsl
and
cmp
mov
aaa
subb
stc
lods
xor
in
jb
mov
scas
and
aaa
mov
push
xor
jecxz
pushf
mov
arpl
adc
andb
lds
stos
inc
sub
pop
test
clc
mov
lret
test
rclb
out
xor
push
push
addl
fldt
add
leave
inc
pop
fnstsw
testl
sbb
outsl
and
cltd
cmp
andb
pusha
aad
leave
dec
hlt
add
jle
pop
xchg
pop
movsl
inc
mov
jb
dec
xchg
jo
ret
aad
subb
push
mov
incb
xchg
jns
inc
andb
xlat
sbbb
jge
or
pushf
data16
inc
xor
or
addb
push
xor
shrb
sub
xchg
xor
shrb
add
out
inc
push
rcll
xor
in
cmpsl
inc
repz
orb
ss
fs
xchg
mov
flds
out
and
and
insb
rcl
add
adcb
rcrb
fdivp
sub
push
sub
sbb
push
cmc
hlt
dec
xchg
jae
jp
inc
or
mov
arpl
jno
cmp
add
jbe
test
addb
ljmp
lahf
mov
aaa
sbb
pop
jp
nop
js
and
call
cmpsl
mov
sub
xchg
push
and
addb
std
pop
andb
mov
adcl
xor
and
out
push
sub
fs
mov
sti
add
in
push
test
shll
xchg
xchg
mov
fstpt
mov
imul
orb
mov
sbb
mov
in
dec
orb
xlat
jnp
cmp
pop
add
jle
call
mov
adc
pop
loopne
popf
add
push
mov
cmpsl
faddl
adcl
stos
sub
or
xor
xor
into
shrl
cli
cld
stos
mov
cmpsb
mov
hlt
iret
sahf
gs
inc
ret
lahf
aaa
mov
xchg
cli
xchg
sbb
dec
push
shlb
mov
andb
sahf
daa
mov
loopne
stos
bound
leave
xor
fwait
cmp
into
mov
xor
mov
repz
adc
push
stc
inc
jne
lret
mov
add
cmpb
or
or
xchg
aaa
addb
mov
movb
or
jecxz
leave
mov
pop
push
sbb
subb
div
cmpsl
ljmp
lods
sbb
pusha
add
sub
rcrl
mov
jno
cmp
ss
mulb
int3
xchg
in
testb
repz
pop
ja
dec
xorb
scas
insb
mov
ljmp
mov
sbbb
das
sub
sbb
mov
inc
cmc
shlb
inc
xchg
cltd
dec
sub
inc
sbbl
add
cli
add
cmp
and
push
fnsave
and
call
fsubs
hlt
sbbb
pop
ljmp
loopne
push
js
subb
fidivl
jmp
push
lahf
sbb
int3
mov
dec
jb
andb
aas
cwtl
rcrl
push
sar
stos
add
cmp
adc
inc
pop
adc
xchg
mov
je
js
in
shl
inc
jne
mov
push
mov
cltd
mov
les
mov
outsl
out
and
pop
sub
loope
aaa
andb
sub
pop
loop
jmp
fs
mov
dec
jecxz
fsubs
sbbb
mov
xor
xor
popa
andl
incl
jmp
ljmp
cmpsl
sbb
xchg
cmp
roll
out
dec
push
mov
nop
in
in
jno
adc
dec
loop
push
addb
enter
inc
pop
fistpl
mov
mov
jle
jnp
sbb
cmp
or
lds
inc
repnz
jl
in
or
sub
out
add
add
xchg
jmp
jnp
or
decl
icebp
subb
inc
push
das
add
push
movsb
mov
mov
imul
or
mov
sbb
fidivs
shlb
jb
add
lods
rolb
pushf
or
leave
push
push
loope
repnz
rcrb
cltd
sub
imul
sbbb
mov
pop
xchg
xor
test
addr16
int3
mov
inc
and
sahf
call
cld
ljmp
cld
jo
sbb
add
arpl
pop
ljmp
cmp
inc
sbb
lea
adc
int
gs
xlat
movsb
inc
pop
mov
rolb
sub
adc
push
es
inc
subb
pop
xorb
add
jbe
lods
or
xchg
mov
xor
mov
add
mov
sahf
clc
ficomps
jp
nop
lcall
pop
adc
cld
addl
sbb
adc
sahf
adc
cmp
xor
xorb
rcrb
sahf
xor
or
pop
jno
mov
dec
cwtl
shlb
mov
lea
push
stos
inc
aam
popf
rdpmc
pop
jns
cmpb
sahf
push
inc
mov
loopne
lock
fsts
imul
cmp
sarb
jg
jp
mov
or
add
addr16
outsb
sahf
xor
push
sbbb
subb
dec
push
push
cmpsb
dec
je
loope
ljmp
cmp
bound
popf
push
push
cwtl
jle
outsl
notl
rcrl
cmp
movsl
xorb
adc
mov
sub
imul
mov
push
add
aam
lret
cmp
rcrl
outsb
sbbb
mov
sbbb
pusha
mov
xchg
call
mov
cli
in
andb
outsb
lahf
inc
or
adcb
rclb
jne
adc
xchg
cmp
sbbb
adc
cmpb
push
push
lods
inc
add
xchg
pushf
cmp
sarb
subb
add
sahf
cmc
popf
je
inc
xchg
pop
xchg
mov
inc
dec
aas
ds
fs
sahf
fwait
mov
stc
xchg
sbb
pop
mov
push
negl
adc
out
mov
dec
mov
nop
adcl
adc
mov
icebp
out
dec
sti
insb
js
movsl
jge
add
cs
fadds
push
jle
popf
mov
or
ljmp
jecxz
andb
aad
push
push
sub
sahf
cmp
adc
cmp
jecxz
addb
and
fildll
mov
inc
xlat
aas
cmpsl
sub
xchg
mov
cltd
pusha
and
and
pop
pusha
mov
popa
dec
inc
pop
adc
shrb
addl
not
dec
xchg
push
add
loopne
test
mov
adc
pop
scas
jnp
inc
subb
std
call
inc
xchg
popf
fidivrl
sub
imul
subb
jb
xorb
push
imul
aaa
cmp
scas
xchg
inc
orb
faddl
cmpsb
movsl
aad
inc
inc
ret
add
mov
lea
fadds
bound
stos
loop
adc
mov
orb
sub
jmp
std
cmp
scas
xchg
pushf
fistpll
fmul
addb
and
and
pop
roll
out
add
mov
sub
ret
nop
mov
mov
js
or
in
cmp
mov
mov
cld
cmpl
pop
dec
inc
or
add
mov
jp
jbe
std
subb
idivl
sbb
push
xorb
rcrl
ret
fisttpll
bound
hlt
pop
andb
jns
inc
or
xorl
lods
mov
dec
loop
mov
addb
sub
adc
popf
push
scas
movsl
jl
sbb
add
xor
jecxz
xchg
rcrb
js
adc
lods
fdivs
adcb
stc
jg
mov
cmp
addb
aad
lods
ret
push
sbb
xchg
pushf
fadds
add
inc
ficoms
test
stos
jge
sbb
xchg
pop
adc
cmp
inc
loopne
dec
and
dec
xor
movsl
les
int
push
in
or
sub
insl
sbb
push
out
outsb
fnsave
mov
orb
and
addb
nop
sbb
cwtl
mov
adcl
mov
lock
push
sbb
mov
sbb
mov
das
jg
push
subb
repz
incb
cmp
mov
cmp
dec
fadds
and
cld
inc
jo
adc
mov
test
orl
cmpsb
jno
fsubrp
mov
adc
sarb
mov
xorb
sub
mov
cltd
enter
push
js
sbbb
sub
test
in
adc
call
pop
push
imul
mov
addb
mov
add
fisttpll
cltd
out
sub
ret
adc
push
sbbl
fidivs
xor
cld
adc
cmp
aam
xorl
out
sub
or
mov
sub
arpl
lds
loop
hlt
push
mov
mov
mov
adcl
lock
mov
faddl
sub
mov
inc
pop
ljmp
push
push
xor
adc
mov
ror
test
dec
aaa
sbb
jo
ss
xchg
inc
idivl
adcb
inc
sub
mov
icebp
stos
cmp
test
fnstenv
arpl
and
and
jge
adc
js
cmpsl
lret
pop
fisubs
scas
idivb
or
adcb
adc
pop
cmp
mov
popa
aas
sub
movsb
add
cmpsl
dec
jns
lds
cmp
and
sub
mov
xchg
cmp
addr16
fldcw
cmp
mov
adc
sahf
or
cmp
fs
dec
sub
shlb
andb
xor
sub
sub
pop
insb
out
mov
adc
cltd
pop
xchg
stos
mov
mov
insb
loopne
xchg
mov
push
jb
adc
sub
mov
cwtl
imul
call
les
inc
mov
dec
cli
outsl
lahf
mov
push
push
or
mov
repz
push
mov
jns
nop
sbbb
push
lock
cmp
and
les
insb
and
mov
mov
clc
mov
xchg
popf
ret
xchg
and
dec
enter
cltd
xor
adcl
or
add
hlt
int3
pop
pop
lcall
and
lds
ds
pushf
mov
inc
cli
ror
xchg
ret
les
and
loopne
cmp
jae
insb
mov
dec
leave
loopne
adc
iret
sub
xchg
mov
mov
inc
subb
jbe
push
into
andb
sub
lret
mov
push
cmc
lods
sbbb
push
enter
popf
inc
aas
lret
xchg
adcb
jp
mov
xor
in
lahf
out
cmp
outsl
stc
in
push
pop
and
adc
add
jnp
pop
sbbb
push
jae
mov
stc
or
ror
xor
fsub
popf
push
jno
mov
ret
les
loopne
out
or
xorb
push
insb
push
xor
stc
inc
or
ss
sub
dec
xor
xchg
addb
xchg
push
and
and
push
js
adc
rolb
es
mov
orl
fs
addb
mov
repnz
mov
add
push
push
setbe
shll
pop
inc
stc
adc
sbb
in
cmc
and
decl
jnp
adc
sarl
and
bound
push
rolb
jl
mov
mov
push
cmp
fldenv
xchg
mov
and
ret
pushf
sub
negb
imul
in
jne
pop
dec
mov
adc
test
mov
xor
pushf
xor
outsb
adc
add
mov
fidivrs
mov
push
test
jle
or
or
aas
dec
cld
pusha
ficomps
push
pavgw
incl
xchg
insl
sbb
lods
repz
pop
js
sbb
mov
jecxz
add
test
push
cmpb
mov
lock
ret
sbb
mov
sbb
fstpl
adc
dec
popf
and
andb
rol
xchg
pop
andb
mov
idivl
icebp
add
xor
push
mov
mov
mov
lds
ret
aaa
xor
int3
in
mov
testb
imul
xchg
test
jg
orb
hlt
jl
and
mov
mov
data16
push
and
mov
insb
stos
stc
pop
orb
jge
scas
neg
js
std
pop
mov
push
mov
pushaw
shrb
aad
mov
cmpsb
sbb
sub
mov
and
pop
and
xorb
stc
sub
or
aas
pushf
scas
lock
pusha
inc
sub
mov
mov
rcrb
loop
jb
and
fwait
add
pop
jno
shll
addb
repz
or
rolb
mov
mov
push
aaa
jno
xchg
sub
ljmp
xchg
sub
and
test
data16
pop
push
clc
andb
outsl
in
ret
repnz
test
sbbb
in
push
je
and
cmpsb
xchg
push
sbb
or
outsb
jge
js
adc
add
test
mov
notl
dec
mov
andb
pop
es
sahf
mov
lcall
test
cwtl
das
xchg
daa
filds
stc
mov
sbbb
cmp
iret
test
insl
addb
adc
lods
pop
add
orl
imul
arpl
and
addl
stos
cli
enter
pop
sbb
dec
fdivl
jle
adcb
pop
dec
orb
fidivs
xor
fidivrl
inc
fwait
push
sbb
cmc
cmp
add
or
lock
movsb
mov
lret
aaa
sub
lret
jl
cmp
add
or
mov
mov
sarb
gs
mov
orl
jl
popa
adc
adc
adcb
flds
subb
js
fisttpll
stc
insb
xchg
enter
shlb
popf
mov
outsb
mov
xor
orb
pop
mov
fcomps
mov
cmp
es
inc
popf
mov
jecxz
fwait
mov
xchg
loopne
xchg
pop
fldt
addb
inc
xchg
cmp
faddl
je
xor
frstor
dec
fbld
testb
jns
js
add
cmc
push
cwtl
jo
lcall
xor
mov
addb
andl
or
popf
pushw
call
repz
xchg
mov
test
aas
cmpsl
inc
mov
cmp
cmp
and
aam
hlt
jl
sub
out
push
loopne
notl
xor
repz
filds
in
cmpb
pushf
lea
shll
sub
add
pushf
bound
enter
push
xchg
sahf
sub
imul
fiadds
in
xor
cld
loop
xchg
adc
aam
cli
cmp
out
ljmp
imul
push
std
push
push
decb
rol
cld
leave
nop
subb
aaa
aam
add
pop
loop
mov
pop
and
insb
push
mov
xchg
jne
xchg
xchg
adcb
outsl
iret
orb
adcb
mov
cmpsl
loope
xlat
cmp
pop
push
int3
rcrb
jge
mov
xchg
ret
jns
dec
hlt
push
ficoms
call
mov
outsb
mov
fiadds
ret
in
mov
cmp
subb
sbb
addb
sar
jecxz
sub
icebp
in
push
cmp
adc
subb
cs
inc
fldt
push
cmp
xor
imul
cmp
andb
shrb
mov
ja
sbbb
cmp
addb
subb
xchg
lods
add
mov
adc
in
pop
lock
rcrl
jle
sti
mov
rol
xchg
mov
add
out
adc
fwait
cmp
xorb
movsl
sub
pop
out
push
shlb
push
fnstsw
les
mov
incl
push
xor
pop
shl
mov
sub
pop
hlt
pusha
cmpb
xor
mov
inc
pop
popa
adcb
xor
popl
mov
orb
inc
xchg
add
xchg
and
inc
mov
fisubrl
mov
addb
pop
addr16
leave
out
jl
stc
aad
mov
sti
inc
fcmovb
push
mov
xlat
in
arpl
outsb
aas
sbbb
inc
rcrl
cmp
andb
int3
push
xor
add
cmc
mov
jbe
fnsave
hlt
xchg
cmpsl
dec
call
push
add
fcoms
pop
fs
pop
movb
xor
pop
push
jb
dec
movl
or
andl
fadds
cmpb
jg
add
andb
mov
inc
xchg
push
ja
std
mov
mov
out
add
clc
test
inc
xor
push
addl
pusha
bnd
ljmp
pop
or
adc
xorb
sbbb
jle
inc
addb
add
div
ds
test
call
repnz
adcb
repz
sti
nop
cmpl
jnp
movsb
stos
std
adc
or
addb
addr16
pop
push
mov
xor
xchg
popf
xor
add
sub
sub
cmp
push
faddl
sbb
shrb
decb
mov
adcb
or
dec
fsubl
addb
stc
mov
inc
inc
imul
aad
lods
fistps
test
movsb
xchg
or
mov
jbe
dec
push
sbb
out
bound
mov
adc
or
loope
push
adcb
loopnew
fstl
add
mov
add
adc
adcb
sbb
adc
dec
sahf
mov
mov
push
mov
icebp
xor
pusha
stos
inc
jb,pn
or
in
cmpsb
push
push
dec
xchg
lea
rolb
xor
subb
push
jp
out
insl
mov
jo
test
in
rclb
xor
cmpsl
xchg
fnstsw
pusha
insb
cld
dec
cmpsl
shrl
sub
fidivrl
cmp
in
push
push
sub
cmp
cmpb
mov
sbbb
scas
xor
test
mov
pop
lea
sub
jne
das
movsl
fwait
sub
add
fs
test
pop
adcb
ja
add
andl
mov
fimuls
mov
das
xorl
or
jnp
js
dec
aas
inc
mov
cmp
test
sub
out
cmp
sbb
scas
adc
mov
test
and
sti
jb
lods
loopne
sbb
repnz
sbbl
stos
and
add
add
adc
dec
mov
adcb
mov
sbbb
iret
sub
and
pop
mov
subb
xchg
jns
addl
test
add
int3
add
adc
mov
cwtl
jmp
mov
add
scas
das
jecxz
andb
subl
pop
cmp
xor
inc
dec
les
jg,pn
test
outsb
jb
fnstcw
mov
pusha
andb
cmpl
jo
sahf
pop
mov
jns
call
repnz
xchg
mov
icebp
es
jb
fldl
adc
andb
lods
mov
lock
pop
stos
and
adc
fisubrl
push
pop
push
mov
jmp
xchg
push
loope
xchg
es
aas
xlat
and
sub
out
dec
add
fisttps
or
sub
cwtl
jns
pop
and
jnp
popa
inc
or
arpl
sarl
subb
addb
mov
adc
xchg
cli
sub
xlat
cmc
mov
and
jg
dec
mov
jp
ret
imul
push
xchg
hlt
loopne
add
pop
outsb
int3
mov
adcb
in
push
xor
int
imul
xor
pop
ss
dec
cwtl
adc
test
push
adc
lods
adcb
fisubrs
pusha
xor
pop
sbbb
das
insb
or
and
pop
push
in
push
adc
filds
imul
cmpb
int
sbb
sbb
jl
daa
in
adc
scas
movsb
ficomps
mov
scas
sbbl
mov
in
stos
cmpsl
cli
mov
mov
rcl
inc
ret
stos
scas
mov
dec
jp
and
inc
filds
inc
loopne
push
mov
arpl
es
subl
and
adc
xorl
adc
inc
adc
cmp
pop
fldl
fstpt
cmp
scas
xchg
nop
test
dec
add
cmpsb
pop
sbb
fistpl
mov
repz
lret
push
mov
stc
imul
dec
fnstsw
mov
cld
lods
jmp
adcb
aas
push
xorb
sbb
xor
dec
rolb
jp
xorb
xchg
not
xchg
push
mov
arpl
sbb
andb
pop
mov
fdivl
rolb
pop
aam
subb
lds
pop
or
imul
dec
mov
testb
cld
cli
fs
cmc
repnz
cmp
pop
neg
or
mov
or
roll
inc
mov
imul
mov
adc
dec
mov
ror
mov
lds
cli
xchg
xorb
test
adc
xchg
outsb
mov
dec
cmp
shll
mov
lret
daa
push
xchg
or
jp
and
push
xor
lock
andl
jb
fdivs
movsl
sbb
pop
jl
movsb
mov
data16
fwait
cwtl
mov
iret
icebp
add
test
es
xchg
daa
testl
lret
ret
xor
aad
cmpb
pushf
sub
and
adcl
pusha
and
adcb
div
insl
scas
xchg
sub
jle
cmpb
and
push
andb
push
sub
adc
xchg
xorb
fdivl
andb
pushf
push
and
mov
mov
mov
and
rol
sti
add
push
loopne
icebp
ss
add
daa
sub
sti
test
out
dec
stc
sahf
add
dec
repz
movsl
adcb
jecxz
sbb
adcl
push
mov
mov
jl
mov
adc
sbbb
fwait
and
jle
subl
ss
lret
push
push
cmp
mov
inc
dec
stos
cmpsb
stc
inc
sbb
sub
jo
fcomps
out
jecxz
dec
dec
mov
mov
xchg
test
add
clc
stos
addb
in
fsub
call
and
pop
fildl
mov
push
out
jmp
pop
sub
lock
dec
ficomps
mov
ja
test
mov
mov
pop
xor
rolb
or
sahf
test
in
js
inc
mov
lahf
movl
mov
addb
adc
pop
test
push
mov
jmp
pop
popf
pusha
mov
pop
pushf
std
inc
orb
aam
jno
add
adcb
int3
cwtl
into
sbb
mov
orb
jo
jg
rcl
inc
dec
in
loope
adcb
out
and
or
and
movsl
sub
in
cmp
adcb
mov
orb
hlt
testb
add
fcmovu
or
cld
scas
xchg
lret
movsb
jo
mov
flds
jg
js
mov
jb
xchg
lods
ret
mov
cltd
pop
mov
loop
into
andb
inc
jmp
add
pop
test
leave
jle
xchg
cmp
shll
ror
pop
subl
adc
sub
sbbb
dec
jno
jo
incb
xor
mull
subb
push
stc
and
push
faddl
xchg
pusha
xlat
xchg
lahf
addl
in
sti
cmpb
jae
mov
je
cmp
popa
mov
out
popf
mov
fs
xor
call
jne
xor
mov
dec
mov
inc
mov
sbb
aad
stc
cmpsl
pusha
mov
xchg
jns
test
fwait
sti
out
outsb
inc
sub
jle
bnd
adc
push
push
test
add
cmp
lds
leave
int
add
push
push
sbb
lahf
ljmp
fstpl
adc
cld
test
mov
call
mull
lods
call
push
mov
jns
into
outsl
mov
sbb
cmpb
adcl
cld
out
sbb
inc
in
rol
aas
xor
xchg
cmp
clc
addl
push
mov
andb
aaa
push
subb
test
stc
cltd
cmp
pushf
outsl
pop
mov
sbb
or
xor
mov
mov
mov
lret
aaa
push
aad
int3
outsb
iret
mov
push
pusha
sarl
ds
adc
inc
ljmp
pop
stc
je
push
mov
loopnew
add
cld
addl
out
lahf
push
cmp
mov
xor
xchg
test
enter
pop
imul
inc
hlt
mov
test
adc
and
inc
mov
inc
or
xchg
adc
pop
in
insb
cmpsb
pop
pushf
in
fidivrl
mov
add
or
push
adc
andb
aaa
or
adc
in
js
ret
out
movsb
fstl
adcb
push
xchg
orb
mov
xor
leave
cmp
ret
add
mov
jle
ffree
xchg
movsl
sub
mov
rcl
mov
lods
ljmp
lods
orb
jecxz
dec
inc
cmc
roll
jg
jne
adcb
jns
popa
sub
lret
outsl
xor
fwait
shl
sahf
jle
loope
sbb
and
adc
cmpb
in
mov
and
sbbb
pop
notb
inc
imul
int
sti
test
lock
sbb
ret
sub
aas
mov
stos
pusha
clc
pushf
xchg
frstor
shl
lahf
jno
bound
sub
out
test
fnstenv
test
pop
lock
mov
or
sti
arpl
stc
ja
clc
inc
mov
dec
xchg
nop
hlt
mov
in
imul
subb
and
andw
sbb
hlt
pop
movsb
pop
inc
inc
andb
lret
sbb
pop
xorb
push
fsubl
pusha
repnz
js
pushf
gs
mov
jo
inc
or
add
addr16
jne
repnz
data16
xchg
scas
and
cmp
push
jb
mulb
fiadds
in
ret
imul
mov
loopne
mov
subb
cmp
andb
lds
icebp
daa
adc
mov
xchg
add
ds
jno
mov
cmp
mov
shlb
pushf
or
cmp
mov
test
dec
pop
test
stc
add
or
fisttps
test
sti
cmp
in
aaa
mov
mov
neg
int3
or
pop
shrl
clc
jnp
push
imul
cmpb
jge
push
xorb
xchg
adc
push
or
push
inc
add
mov
cwtl
mov
imul
jnp
or
pop
cmp
xchg
mov
addb
push
sbb
cmp
sti
test
inc
out
dec
lock
subb
xlat
inc
pop
and
loopne
mov
mov
ret
xchg
xorb
xchg
cmp
test
jbe
outsl
out
mov
pop
adc
xchg
or
mov
sub
mov
lret
adc
clc
cmp
mov
jecxz
pop
ret
inc
inc
stos
cmp
add
loop
sbb
inc
imul
inc
loope
dec
iret
adc
sbbb
or
movsl
push
outsl
filds
in
mov
clc
sub
dec
andb
mov
rolb
inc
inc
mov
jg
jno
js
mov
sub
add
sub
shlb
imul
pop
sub
mov
and
aam
xor
mov
lock
mov
xor
pop
sub
xor
inc
xchg
dec
adcb
bound
xor
push
scas
hlt
movsb
popl
shlb
cmp
repz
xchg
arpl
cmc
push
mov
std
mov
test
sbb
push
adc
in
cmpsb
testl
iret
jmp
jecxz
jbe
orb
cltd
shrl
xor
addb
ja
mov
or
cs
and
pop
push
push
and
pop
adc
rolb
ret
sbb
sbbb
xor
test
inc
cmpsl
xor
orb
addr16
fs
cmpsb
push
imul
push
mov
or
lcall
add
and
cmp
jbe
jnp
or
movsl
mov
icebp
add
nop
addb
pop
mov
mov
sbb
and
and
addb
mov
stos
jle
enter
xchg
pusha
lea
aas
pop
into
cmp
cmpsb
lret
mov
fdivr
dec
arpl
jae
xor
call
pushf
mov
pop
sbb
in
inc
in
fidivrl
mov
mov
pop
js
pusha
xchg
jbe
cmpb
test
aam
icebp
sub
sahf
sub
sbb
subb
sar
fs
lds
inc
adc
jo
notb
pusha
adc
push
pop
lahf
mov
insb
and
sbb
in
pushf
mov
aas
mov
add
fsub
daa
andb
fdivrs
and
cmp
loop
inc
push
mov
or
sub
jl
adc
or
jno
cli
and
dec
mov
ret
test
es
or
mov
test
jecxz
push
adc
sti
push
mov
mov
roll
test
mov
mov
ffreep
and
idivb
add
cmp
in
sbb
push
and
adcb
adc
jnp
mov
mov
inc
pop
fdivrl
jl
sarb
outsl
adc
sarl
jns
pop
adc
add
rcll
or
movsb
pop
cmpsl
pushf
sbb
inc
subl
rol
mov
xor
or
xorl
dec
rcrl
mov
orb
jmp
cwtl
add
imul
arpl
add
gs
adc
jbe
jmp
jnp
dec
add
negb
add
sahf
add
ja
inc
xchg
test
mov
sbb
cmp
pusha
aas
mov
std
inc
sub
xchg
or
orl
daa
dec
cmp
lods
sub
cli
addb
inc
mov
rorb
das
or
pop
dec
xchg
inc
jo
dec
jmp
out
add
hlt
repz
rcr
adc
cmpb
daa
jle
xchg
orb
cli
std
mov
cli
and
dec
addb
pop
mov
pop
arpl
add
fnstsw
push
mov
lods
jmp
clc
pop
xor
js
imul
sbb
or
ds
mov
cmpb
pop
dec
orl
js
ljmp
shrb
jno
xchg
add
scas
lds
mov
lar
scas
or
sbbb
dec
popa
sarb
or
xor
adc
in
shrb
mov
cli
pushf
mov
sahf
orb
orb
cmp
xchg
or
pushf
mov
push
je
popl
mulb
xor
cmp
pop
fwait
cmpb
or
lahf
push
incl
xchg
push
jns
mov
sub
sbb
addb
insl
lods
push
sbb
or
mov
pop
loope
rclb
xor
add
out
sti
leave
pop
pop
dec
dec
xchg
sub
shrl
roll
xlat
mov
mov
mov
mov
or
orb
sbb
xor
pusha
lods
negb
inc
pusha
test
sub
xor
adc
popl
dec
or
xor
pop
enter
xchg
cli
int3
xchg
pop
into
mov
add
and
popf
mov
pop
push
dec
loopne
mov
pop
sbbb
or
cmp
adc
xorl
mov
test
sub
ss
mov
dec
mov
leave
mov
xchg
scas
inc
push
inc
jo
mov
inc
icebp
ss
pop
adcb
in
and
mov
mov
lahf
imull
jns
adc
xorb
lods
addr16
daa
xchg
popf
cltd
cmp
out
dec
pop
pushf
push
mov
inc
aam
aaa
add
pop
pminsw
jle
cwtl
ret
mov
mov
mov
inc
daa
loopne
mov
sbb
out
sbb
cmp
add
out
jmp
subb
push
mov
cmp
push
jno
push
mov
enter
mov
mov
mov
and
push
leave
xorb
loopne
pop
mov
xchg
inc
negb
mov
jbe
cmc
jae
pop
and
repnz
dec
and
and
sub
push
xchg
aas
iret
test
xchg
cmp
enter
cmpsl
sub
or
push
jbe
lock
push
push
loop
dec
loopne
sti
mov
add
push
inc
xchg
fsts
pushf
orl
cmp
mov
in
mov
cmpsl
ret
pushf
subb
jg
cmpsb
lods
aaa
rcrl
mov
add
cmpb
mov
mov
cmp
sbb
jg
add
add
cmp
mov
xor
lahf
add
sbb
fiadds
dec
cli
lahf
inc
xchg
in
andl
clc
test
mov
mov
inc
pop
in
mov
add
std
stc
xor
push
and
cmpsl
mov
mov
inc
add
cwtl
subb
adcb
cmp
cld
movsb
sti
cmp
xor
fwait
sub
subb
push
idiv
insb
sbb
sbb
repnz
popl
std
xchg
sub
push
adc
lock
xchg
inc
inc
cmpsb
or
xchg
mov
sub
mov
das
lds
jbe
xchg
xorb
pop
inc
addb
repz
adcl
xor
sti
dec
cmpb
imul
xorb
or
loopne
lahf
mov
sti
enter
outsl
jle
loop
lds
jb
jecxz
push
lahf
adcb
cmpsl
mov
fxch
inc
ss
and
mov
enter
pop
xor
lret
mov
andb
les
or
mov
pop
repnz
andb
push
dec
cmp
daa
imul
rolb
push
jp
push
jnp
pop
cmp
pusha
mov
sbb
ss
fldenv
jo
fbld
pop
add
ret
adcb
ljmp
sbb
les
lock
addb
shrb
push
and
mov
add
and
rorb
fcoms
xchg
mov
in
dec
popa
stc
mov
dec
addb
inc
jl
xor
cmc
xchg
sbb
test
push
shl
sbbb
add
push
sbb
xor
jne
popa
subb
sbbl
mov
in
or
inc
hlt
out
xorb
andl
cli
jecxz
jnp
push
mov
add
push
pusha
jno
cli
jmp
jp
add
add
pushf
out
sbb
mov
dec
cmc
or
push
pop
mov
xchg
cmp
lds
or
out
test
dec
popf
jo
insl
mov
aaa
xlat
addb
bound
ljmp
adc
addb
xor
mov
sub
hlt
mov
jns
mov
xchg
cmp
enter
push
and
rcrb
loope
xor
jne
out
and
test
mov
insl
xchg
pushf
punpckldq
shll
movsl
ljmp
insl
and
mov
rolb
rcrb
fistps
incb
add
mov
inc
xchg
push
enter
xchg
mov
push
fcomps
xor
mov
xchg
mov
jbe
rolb
pop
pop
inc
orb
imul
mov
push
iret
mov
adcl
call
sbb
fldt
pop
mov
out
cmpsb
xchg
outsl
inc
cmp
cmp
hlt
pushf
mov
cmc
mov
pop
aad
or
subb
dec
fdivs
out
lcall
call
movsb
popf
enter
inc
mov
push
xorb
and
sub
mov
sbbb
pop
add
xor
in
dec
sbb
jle
hlt
orb
inc
fiaddl
mov
pop
shrb
aad
mov
pop
andb
xchg
insb
jp
pusha
dec
xchg
inc
shl
in
test
nop
add
sarb
cs
orb
loop
fmull
jae
into
dec
cwtl
add
cmpb
ds
cmpb
mov
fs
sub
into
push
sub
das
icebp
sbb
dec
dec
cmpsb
add
xorb
adc
mov
loopne
jmp
rolb
push
push
xorl
pop
insb
jnp
sub
xorb
hlt
testb
push
and
aam
insb
sar
test
adcb
push
ja
stos
inc
dec
test
aas
mov
dec
or
orl
push
mov
add
mov
cmp
jb
mov
lea
cli
cmpb
lret
adcb
rep
cmp
fistpl
rclb
adc
out
adcl
jecxz
subl
ja
clc
int
out
les
and
cmpl
aaa
sub
jae
into
pushf
mov
and
test
pushf
lahf
sahf
jmp
andb
add
ret
ds
jb
mov
sarb
icebp
fadds
dec
into
sub
pop
pop
xchg
jo
cmp
jb
subb
out
push
vpshad
dec
pop
addb
xor
mov
scas
loopne
lds
cmpb
pusha
cmp
int3
add
add
in
sub
ror
push
int3
push
xor
or
cmp
mov
sub
and
cmpsb
xchg
sub
rolb
daa
ss
cltd
xchg
test
cs
or
pop
enter
dec
icebp
jb
jge
sbb
sub
dec
test
push
testb
aas
cmpsb
and
push
aaa
adcb
add
or
mov
xchg
mov
fadds
int3
cs
add
xchg
data16
or
movsl
mov
outsl
cmp
repz
mov
popf
jg
push
jp
pusha
icebp
fwait
xlat
jle
test
outsb
sub
dec
adc
inc
je
add
inc
dec
sub
sbb
xchg
repnz
jns
mov
mov
aad
mov
push
push
into
pop
mov
mulps
add
or
add
adcb
rep
and
andb
xor
adcb
push
xorb
or
andb
inc
mov
ret
mov
cmpl
addr16
fsubrs
mov
adc
push
out
cmp
std
pushf
fdivr
cmpsb
movsl
insb
jge
mov
call
sbb
jmp
outsl
fsubrl
sbbb
add
jns
mov
inc
test
scas
inc
sbb
into
sub
xchg
out
cmpsl
stos
xor
push
imul
cmp
and
jns
mov
lahf
push
mov
addl
inc
push
fsts
adc
dec
in
mov
mulb
dec
icebp
imul
push
inc
cmp
test
aam
adcl
aas
mov
psubusw
fisttps
cmp
rorl
addb
xchg
sub
stc
xchg
inc
rcrl
and
push
rorb
xor
jecxz
xchg
stos
dec
xchg
inc
cli
inc
lret
adcl
or
push
pop
test
pushf
xchg
icebp
pop
ret
mov
pop
sub
pusha
cmpsl
fs
inc
dec
ljmp
adcb
mov
js
add
loop
dec
and
add
loopne
sub
adc
cmp
add
add
jg
cwtl
andb
push
add
jne
or
jnp
lret
mull
push
mov
lahf
aad
pop
jns
push
nop
and
sub
invd
cmp
rorb
sbb
aaa
test
pushf
jle
aam
sti
add
push
popa
push
rcrl
bound
aaa
sub
mov
les
outsb
xchg
xlat
pushf
or
jnp
ss
pop
inc
and
flds
xlat
not
sbb
push
lcall
pop
pop
add
inc
cli
incl
mov
test
leave
or
rclb
xor
sub
add
ret
aaa
xchg
inc
lds
pop
xlat
push
mov
pop
loope
loop
sub
leave
and
add
pushf
xchg
mov
ljmp
sub
and
fmul
and
push
mov
outsl
mov
or
jo
pop
push
inc
xor
out
je
pop
cltd
pop
jmp
flds
in
jecxz
mov
sahf
pop
idivb
fwait
mov
aaa
aad
adcb
and
imul
in
hlt
fwait
enter
decl
adc
adc
out
dec
pop
cs
orb
loop
and
and
je
add
test
inc
jns
inc
adc
add
jno
inc
or
sbbl
xchg
pop
mov
andb
adc
sbb
daa
std
addb
jle
orb
xchg
sub
jo
mov
adc
ret
xchg
mov
adc
in
loopne
sbb
imul
lods
or
push
push
in
addl
and
mov
adc
mov
add
mov
push
faddl
aaa
inc
push
sbb
je
stos
push
mov
dec
or
dec
addb
iret
or
inc
mov
xchg
cmc
call
cmp
iret
xor
sbbb
pop
push
xchg
lods
decb
inc
movsl
xor
push
xorb
mov
ljmp
mov
mull
lods
fists
addr16
mov
mov
pop
movsb
mov
ret
xorb
xor
shlb
inc
repnz
cmp
jnp
mov
mov
xor
cli
ds
iret
ss
jo
ucomiss
addb
shll
mov
add
xchg
cmpsl
orb
pusha
movl
xor
fcompl
xor
arpl
inc
sbbb
rolb
pop
xor
daa
push
dec
mov
andb
cmpsb
xor
orb
push
add
stos
adc
shlb
pop
je
iret
add
xchg
repz
cmpsl
nop
in
jl
push
aaa
lds
sub
subl
sbb
xorb
out
popa
adcb
lock
or
mov
sub
xor
sub
sti
adc
xchg
sbb
iret
mov
insl
push
cmp
inc
test
div
cmc
aam
push
inc
sub
test
pop
and
lret
inc
mov
orb
stos
cmc
xchg
loopne
aaa
xchg
xlat
mov
adcb
or
mov
pmuludq
mov
mov
insb
or
xchg
icebp
mov
xchg
pusha
inc
mov
out
mov
faddl
push
lahf
push
cmpsl
test
push
lret
fildll
outsb
adc
sbb
mov
cltd
xchg
cmpsb
fnstcw
mov
out
data16
sub
sub
scas
xrelease
andl
dec
pop
shlb
lods
addb
clc
and
gs
xchg
xchg
movsb
scas
andb
inc
leave
dec
jecxz,pn
adcb
fcmovnu
dec
inc
adc
push
and
sbb
mov
out
mov
movsb
sub
idivb
leave
add
mov
and
lcall
push
cmp
pop
jnp
adc
fs
pop
sbb
cmpsb
mov
inc
and
roll
or
mov
aaa
inc
pop
cmc
pop
xchg
and
push
pusha
sarb
dec
addb
mov
cmpsb
insb
xchg
push
addb
repnz
das
xchg
mov
out
test
hlt
jmp
fldl
mov
ficoms
or
push
sahf
stos
and
out
dec
popa
fcompl
test
push
roll
js
stc
mov
pop
fildl
pop
push
orb
adc
test
ja
sbb
cmp
aam
movsb
repz
mov
adc
cwtl
or
outsb
or
mov
cmpb
inc
add
cmc
jp
and
mov
mov
and
movb
ljmp
push
jg
xorl
adc
inc
sub
adc
pop
xchg
mov
popf
pop
inc
test
popf
fs
push
push
push
fisttpll
push
dec
subb
sti
mov
pop
fdecstp
jne
inc
push
jo
pop
addb
mov
repnz
mov
pop
subb
addr16
pusha
mov
mov
jg
les
inc
xchg
mov
andb
inc
in
mov
fistl
jo
addb
lods
in
sub
les
and
mov
xchg
push
shlb
jecxz
lods
fidivs
cmp
mov
jnp
ds
stos
cmpb
inc
cmp
sbb
shll
daa
pop
pop
addl
pop
add
dec
stc
lock
mov
lods
pop
out
mov
movsb
cmp
aad
dec
jp
fdivs
sahf
lods
pop
fisttps
cmovo
lea
mov
mov
addr16
jmp
mov
mov
mov
lahf
aas
pop
hlt
push
xor
cmpb
int3
sub
and
fs
sahf
xor
ljmp
jns
test
mov
clc
rorb
dec
sbb
push
movsl
jo
adc
imul
cmp
inc
out
push
push
add
dec
inc
int
sbbb
cmpsb
imul
push
pop
subb
or
cmp
lea
mov
addb
fstpt
adc
cmp
pop
and
xchg
mov
out
loope
js
sub
push
pop
mov
pusha
inc
xchg
popa
stc
jg
push
shll
test
adc
push
or
fiadds
repz
orb
les
scas
add
fwait
xchg
lds
mov
std
jmp
push
imul
cli
testl
repnz
mov
repz
inc
inc
addb
sahf
fwait
mov
adc
jns
orb
cs
inc
dec
mov
sar
add
mov
nop
cmp
push
mov
mov
cmpl
and
add
pop
add
loope
rol
andl
test
xchg
divl
pushf
adcb
test
or
or
cmpsl
sbb
cmpb
aam
dec
mov
jle
popl
mov
inc
data16
mov
adcb
xor
xorb
es
das
dec
mov
xchg
xchg
adc
ss
xorb
and
pop
sbb
xorb
cltd
pop
xor
stc
mov
outsl
ficoml
and
mov
add
std
xchg
popa
in
add
sbbl
xchg
dec
jmp
and
jle
sti
inc
insb
pop
jb
lcall
jg
int
fnstsw
ret
mov
xchg
lods
idivl
dec
mov
das
loopne
cmpsl
or
jne
cmp
pushf
push
jp
stos
and
sbb
subb
mov
daa
leave
loopne
add
mov
push
addb
and
pop
pop
push
fisubrs
mov
in
add
enter
sti
xchg
andb
fdivl
repz
mov
out
pop
lock
bound
adcb
cld
mov
jne
sbb
fwait
dec
or
and
rorb
pop
fldl
xchg
arpl
outsb
push
nop
lret
andb
sahf
and
add
cmp
sbb
sub
shrl
mov
jecxz
pushf
cmp
inc
pop
pusha
lock
push
cld
xchg
xor
and
add
insl
xorb
fsubrs
adcb
outsb
pop
add
cmp
xorb
fcoml
popf
arpl
xor
xchg
lahf
sahf
mov
rcrl
jbe
jle
outsb
int3
sbb
xor
repnz
negb
adc
jmp
add
leave
sub
push
mov
jmp
lret
push
mov
pop
mov
jnp
imul
cmpb
or
mov
pop
sbb
adc
fisubrs
adcb
shll
cs
cmpsb
sahf
xlat
insl
scas
cmpb
and
faddl
loope
outsb
push
gs
mov
xor
dec
cmp
addl
mov
cmp
sub
cmc
adcb
cmpsb
aas
ret
add
pushf
xor
inc
sub
lahf
es
mov
push
stos
out
pop
and
inc
add
or
adc
fcompl
cmc
subb
mov
adcb
ds
mov
adcl
dec
mov
testl
cwtl
lods
insb
push
xchg
mov
xchg
mov
mov
fldl
cmp
xlat
xchg
pop
cmp
sub
stos
scas
adc
rcrb
adcl
stc
data16
mov
pop
or
lds
mov
sub
data16
sbb
xchg
movsl
stos
enter
cmp
cmpsl
test
cmp
andb
shrb
jbe
test
xor
mov
dec
insb
mov
call
dec
xor
ds
dec
pop
push
push
mov
popa
dec
lds
jbe
orl
or
adcb
cld
sbb
jb
adc
nop
popl
in
dec
test
mov
jge
outsl
mov
aaa
int
add
jle
and
xchg
cmp
jns
orb
jno
movsl
xlat
inc
push
inc
mov
out
inc
addb
inc
fisttps
popf
testl
andb
adc
dec
mov
adcb
sti
adc
fwait
cmpb
jg
xchg
test
jmp
jmp
lods
icebp
sahf
adcl
andl
or
stos
shrb
xor
push
imul
xchg
xor
jne
mov
arpl
xor
std
popa
pop
sub
sbbb
mov
sbb
xor
sbb
fsubp
enter
xchg
or
add
pushf
ds
add
movsb
mov
mov
adcb
jg
mov
movsb
add
shlb
cmc
jnp
in
cmpsl
aad
sub
add
mov
cltd
rolb
test
inc
adc
std
addl
cld
or
sub
les
hlt
fsubrp
inc
nop
push
or
sub
sbb
or
sahf
clc
cmp
lret
inc
push
arpl
leave
outsb
int3
mov
in
lahf
subl
or
inc
lds
mov
loopne
jp
sbb
mov
orb
movsb
in
scas
faddl
mov
pushf
shlb
loop
popa
jno
sub
pushf
mov
out
jg
adc
bound
mov
shll
faddl
lds
gs
int3
mov
push
mov
test
mov
addl
pop
inc
add
test
xchg
or
and
aam
popl
in
rorl
cli
out
mov
inc
cld
loopne
clc
clc
inc
pusha
test
and
jo
cld
sub
cmpb
negl
inc
in
scas
mov
sbb
in
cmc
out
aad
push
dec
clc
das
mov
inc
cs
es
or
test
in
js
ds
fwait
or
dec
repz
lds
lcall
pusha
stos
pop
xlat
inc
jp
push
jmp
pushf
add
mov
test
mov
rolb
enter
fsubl
es
push
or
lea
add
and
jecxz
int
add
mov
loopne
pop
inc
or
jno
inc
test
mov
push
sub
pop
mov
xchg
add
imul
or
repnz
dec
clc
test
mov
or
jg
sub
aam
or
xchg
push
sub
push
test
inc
xchg
sub
lea
fsubrs
lret
nopl
pusha
hlt
gs
or
mov
mov
or
lea
mov
xchg
mov
in
mov
xchg
xchg
sub
add
leave
mov
push
jecxz
inc
add
inc
sbb
aad
push
rorl
mov
jno
in
mov
enter
dec
and
adc
push
push
inc
nop
rorb
inc
sub
in
fcomp
push
pop
aam
mov
cmp
dec
xchg
rcrb
mov
xchg
cli
fmull
aam
mov
add
or
clc
pop
enter
pop
in
inc
scas
loopne
hlt
lret
add
push
sub
mov
test
enter
int
xchg
pushl
push
ret
sbb
add
int3
push
bound
es
test
mov
push
jp
sbb
mov
lahf
jmp
aad
orl
jp
rcll
test
rorb
sar
repz
call
bnd
jne
imul
mov
add
cmc
addb
rorb
in
loop
or
adc
mov
pushf
movsb
inc
or
sub
loop
lahf
adc
dec
test
in
iret
mov
or
test
movsb
jo
pop
adc
xor
dec
movsb
mov
mov
add
fsubrs
cmp
xchg
or
aad
mov
test
adc
xor
inc
and
push
clc
push
mov
dec
inc
aam
cmpsb
mov
adc
pop
pop
movsb
mov
jnp
dec
neg
sbb
jne
or
cmpsb
clc
dec
xchg
hlt
dec
mov
sbb
call
in
shl
stos
mov
xchg
jae
stos
push
es
push
dec
lods
push
sub
fdiv
lods
adc
call
bnd
outsl
jb
add
xor
xchg
xor
or
xchg
roll
adc
and
sahf
dec
or
sub
mov
imul
mov
enter
or
mov
pop
mov
mov
cmp
movsb
lea
sub
and
or
mov
loope
pop
xchg
divl
inc
pusha
xchg
or
test
cs
das
cmc
push
add
cmp
push
pusha
mov
cmp
mov
xor
push
test
stc
xor
xchg
in
jg
rol
inc
shll
lds
mov
lds
scas
int
mov
enter
nop
push
cmpsl
adc
js
ljmpw
dec
xorb
lcall
mov
cmc
dec
push
test
gs
cmp
push
jnp
xor
adc
xorl
stos
lea
js
cmc
iret
dec
rolb
mov
test
sub
fadds
adc
mov
pop
scas
cwtl
adc
add
ret
fstps
fwait
jne
mov
imul
hlt
lret
pushf
rorb
clc
mov
sbb
cltd
popl
xor
jmp
adc
mov
inc
cmpb
xor
cmc
adc
pushf
cmp
add
adc
roll
leave
ret
sub
mov
stc
repnz
xchg
out
int3
mov
jbe
xchg
addr16
xchg
fisttpll
es
inc
or
into
mov
ja
xor
inc
cld
fcmovnu
pushf
xor
dec
sti
js
mov
movsb
popa
add
or
dec
cmc
loope
mov
cmp
fisttps
lods
push
addl
cmc
jb
jo
filds
inc
nop
push
inc
test
andl
bound
mov
mov
hlt
mov
mov
xor
mov
mov
adc
pop
or
xlat
enter
stos
lds
xchg
ja
sahf
imul
or
popa
xor
clc
fidivrs
fstpt
notl
andl
arpl
imul
jecxz
insb
push
inc
ja
sbbb
jg
inc
lock
fwait
adc
ljmp
pop
imul
fsubrs
add
add
mov
jp
insb
mov
popf
or
jge
xchg
cwtl
jae
cwtl
sbb
ret
test
faddl
shrl
loopne
orb
sbb
pushf
rcrl
rcrb
into
mov
cwtl
lods
add
mov
mov
test
cmpsb
and
hlt
lock
sbb
pop
xor
adc
test
ss
mov
inc
xchg
xchg
in
test
in
or
pop
in
jmp
int3
nop
call
lock
mov
and
test
in
mov
stos
pop
xor
loope
in
stc
mov
mov
jecxz
scas
mov
xor
les
dec
lock
xor
inc
pop
adc
mov
mov
repz
out
xchg
push
add
lock
adc
push
in
dec
cli
popf
add
sub
int3
les
loope
aad
cmpsb
lcall
call
out
test
in
xchg
mov
sbb
adc
lods
mov
aad
mov
aam
leave
nop
in
aad
mov
cld
repz
xlat
iret
or
je,pn
mov
enter
insb
scas
aaa
inc
les
sub
es
mul
es
sbb
mov
sbb
mov
sbb
mov
int3
lret
pusha
sub
in
jmp
xchg
les
fmull
movsb
pop
pop
xchg
cs
out
popa
shlb
pop
mov
mov
stc
mov
push
in
xor
or
adc
cld
loopne
cwtl
lahf
mov
notl
test
jecxz
add
movsb
xor
ds
dec
mov
pop
mov
jp
mov
lret
dec
int3
mov
mov
sti
lock
ret
iret
int
aam
pushf
in
clc
mov
leave
mov
int
push
mov
ret
rcl
fmuls
mov
jmp
dec
shr
repnz
adc
roll
in
rcrb
jecxz
in
jg
repz
inc
jmp
loope
test
pause
shr
lret
fcoms
aam
leave
in
out
out
push
repz
mov
les
jmp
pop
cs
in
jmp
repz
stos
out
add
scas
mov
ds
lock
pop
jns
add
inc
andl
test
int3
test
jo
and
int3
adc
mov
fldl
mov
fists
nop
mov
pusha
xchg
adc
and
mov
xchg
pusha
or
mov
xchg
inc
test
mov
xchg
fldenv
mov
or
push
movsb
pusha
enter
nop
les
jmp
and
int
and
xor
push
xor
mov
int3
fsubrl
cld
fadds
lock
lock
fsts
jmp
jo
sub
cmc
mov
jg
sub
jns
loope
shr
lea
clc
in
pop
push
nop
enter
nop
adc
aaa
pop
xor
inc
xchg
sbb
aad
cmpsb
in
cmpsl
mov
rorl
ret
divb
dec
inc
push
mov
ret
lret
cmpsl
js
fimull
ret
mov
int
cmc
sbb
lock
inc
mov
ljmp
pop
xlat
test
stos
pop
xchg
xchg
int
mul
test
popf
and
out
push
push
out
out
negl
std
mov
pushf
mov
rol
mov
mov
das
out
ljmp
outsl
addb
push
das
popf
inc
je
mov
xchg
shl
call
popf
mov
mov
and
cmpl
mov
adc
call
or
ljmp
mov
cmp
inc
movl
mov
jecxz
les
nop
nop
rolb
mov
stos
jecxz
mov
jmp
mov
ret
push
scas
in
pop
and
mov
xchg
mov
test
sub
test
orl
bound
je
pushf
inc
push
imul
xor
push
adc
mov
mov
push
mov
inc
aas
mov
cmp
push
jp
and
pop
inc
add
dec
cmp
fs
aas
insb
mov
rcll
movl
jmp
xchg
mov
enter
out
xchg
ds
and
mov
xorl
leave
mov
jmp
cmp
sub
cmp
dec
pop
xor
aas
sub
cmp
xor
stos
addb
inc
inc
sub
add
dec
push
dec
inc
push
push
mov
pop
nop
inc
inc
dec
mov
mov
dec
mov
in
in
cmp
sub
inc
lods
out
mov
inc
jp
rclb
ljmp
mov
cli
xorb
xor
add
add
sub
leave
ljmp
out
testb
imul
shlb
pop
dec
mov
lds
cmp
inc
dec
mov
jnp
push
dec
jne
int3
dec
add
mov
int3
inc
xor
arpl
push
xor
ja
lret
or
dec
mov
adcl
cmp
jbe
dec
cmp
inc
mov
sarb
popa
movsb
aas
sub
out
movb
inc
add
adc
in
mov
mov
cwtl
mov
push
cmpsb
mov
mov
cli
lock
mov
cmp
aas
xor
xor
dec
cmp
add
inc
std
add
dec
jge
cmpsb
das
outsb
cmp
lds
es
mov
stos
movsl
fcomps
xchg
shlb
cmp
jmp
xchg
mov
out
jnp
test
shll
fiaddl
insb
push
sahf
mov
push
mov
push
mov
push
xchg
sbb
inc
mov
ffree
pop
ret
jbe
rcrb
lods
rcrb
popa
pop
shlb
pushw
shrb
push
shrb
insl
fcmovnb
outsl
mov
xchg
inc
mov
movsb
nop
or
nop
stos
rclb
nop
fs
les
jp
nop
cmp
nop
xor
nop
mov
shl
or
out
scas
call
add
ljmp
add
lock
add
add
add
add
cld
add
add
add
xor
xchg
inc
add
add
dec
add
add
xor
xorb
push
ja
pusha
std
fiadds
call
mov
ds
and
cmp
divl
sahf
inc
and
push
cmp
jge
mov
inc
mov
fcoml
and
repz
stc
xchg
in
mov
adc
bnd
outsl
ja
dec
lret
cmp
sub
subb
fs
sub
stc
out
loope
sahf
out
in
outsl
ret
lods
xchg
icebp
repz
push
stos
push
repz
cmc
insb
lods
sbb
pop
xchg
jne
loop
mov
jns
sbb
lock
pop
dec
push
sbb
mov
repz
arpl
cmpsb
mov
dec
lods
cmc
je
test
popf
sarl
out
es
pop
insl
lods
in
cmp
push
sub
mov
hlt
clc
aam
sub
jmp
int
xchg
xor
push
ja
pop
inc
insl
push
xor
push
inc
cmp
bound
mov
sahf
movsb
lea
inc
push
jp
inc
cmp
push
mov
rcll
push
inc
xchg
sahf
aaa
inc
xchg
daa
pusha
sub
cmp
jle
cmp
jl
out
sub
add
hlt
push
test
push
xor
xchg
dec
xchg
jne
aaa
mov
js
add
inc
imul
sub
xor
inc
cmp
pop
and
popf
ret
add
ss
out
ret
xor
test
pop
add
insb
data16
xor
sti
je
dec
dec
cmp
in
mov
gs
mov
mov
lret
lods
dec
scas
in
xorb
pop
ret
cmp
jg
cli
dec
jo
daa
pop
lret
push
and
adc
loope
xrelease
and
loopne
shll
imul
push
movsb
arpl
lret
ss
lods
imul
xchg
setae
push
cmpb
mov
jno
int
test
pop
cmp
inc
xchg
ds
insl
xchg
repnz
rcrb
jb
jno
in
push
dec
xchg
data16
xor
test
pop
dec
jo
mov
fimuls
ds
les
cmpsb
fmul
movsb
push
js
mov
shrd
ss
lds
jae
mov
xor
loop
sarb
or
clc
cmp
inc
jnp
lock
sub
cmpsb
cwtl
je
aas
sub
and
mov
dec
insb
and
cltd
push
inc
inc
cmp
add
push
xor
pop
adc
dec
js
mov
adc
jp
pop
push
cwtl
imul
dec
dec
mov
mov
cmp
xchg
js
stos
ret
adc
xor
mov
push
es
inc
add
pop
fs
xchg
mov
mov
in
pop
cmc
test
adc
mov
xchg
in
mov
xor
pop
mov
movsb
test
mov
fs
in
ret
rcl
add
inc
sbb
inc
mov
rclb
xchg
or
xchg
lock
ds
test
cmp
mov
out
mov
inc
mov
js
inc
xchg
mul
in
cmc
xor
cmp
cmp
sub
testl
mov
fsub
mov
lret
push
dec
insb
les
mov
popf
pop
push
in
lods
mov
xchg
out
dec
mov
ljmp
and
lcall
sbb
ret
ror
pop
testb
std
mov
stc
ja
divb
xorl
push
mov
cmc
lds
xchg
jge
hlt
mov
mov
stos
leave
in
test
movsb
jmp
into
push
mov
push
std
in
push
mov
rol
xchg
fnstenv
mov
mov
mov
jbe
addr16
lds
mov
dec
push
mov
and
mov
pop
jbe
pusha
into
lret
aam
or
cmc
out
xor
inc
fsubr
aad
mov
fld
mov
into
inc
lcall
mov
ret
add
mov
xchg
or
sarl
mov
sti
fiadds
aas
std
div
pushf
cld
sti
mov
lcall
aam
sub
cli
push
divl
jle
sbb
hlt
push
aam
mov
daa
in
in
jp
ret
ja
repz
enter
and
in
inc
aaa
xchg
out
enter
arpl
lds
pop
mov
stc
xchg
aam
scas
in
ret
lret
out
fucom
movsl
idivl
inc
xchg
mov
out
rcl
and
xchg
xor
repz
xchg
adc
int
lock
pop
test
cld
xchg
ret
cmc
repnz
and
or
in
cmp
mov
idivb
ss
in
sahf
jmp
addr16
jns
or
cmp
lock
rorl
mov
hlt
test
xchg
push
push
movsb
aaa
xchg
iret
and
or
sub
call
inc
sarl
fwait
mov
sbb
out
cmp
jae
jmp
lea
out
mov
les
jmp
push
sahf
nop
or
mov
icebp
xchg
shr
sbb
lock
xlat
lcall
idiv
lods
add
out
in
enter
pop
test
xchg
repnz
out
cmc
les
or
mov
xchg
jnp
call
xchg
andb
lock
ljmp
pop
dec
lcall
int3
insl
leave
mov
xor
pop
jmp
mov
inc
fisubrl
jmp
cwtl
fsubs
loopne
or
js
jnp
mov
aam
in
add
loope
xchg
rcrl
pusha
shrb
mov
ret
nop
rcll
inc
gs
inc
imulb
dec
rcrl
and
clc
mov
dec
mov
iret
push
lahf
loope
aad
in
out
push
mov
shlb
mov
mov
std
dec
lock
adc
push
andb
dec
inc
add
add
cmp
lret
nop
loope
test
mov
test
jne
adcl
cmpl
jne
outsl
enter
shlb
or
xchg
test
and
ficompl
mov
add
test
or
fistpl
add
fiadds
jg
dec
cmp
push
cwtl
jbe
jns
lret
mov
push
jno
jb
cwtl
add
mov
sar
mov
out
pop
stos
test
pop
hlt
aam
mov
push
push
mov
mov
mov
test
repnz
sbb
call
fs
push
test
and
fwait
push
jne
sub
stos
cmc
mov
cld
mov
mov
stos
cltd
mov
hlt
or
jle
or
fcoms
clc
inc
pop
scas
mov
cmpb
xor
xlat
sub
int
push
push
cld
cmp
mov
push
sbbb
xchg
xchg
test
out
adc
cmc
xchg
or
stc
shrl
lahf
jnp
test
mov
leave
cmpsl
mov
movsb
inc
addb
adc
shll
jo
int
mov
adcl
mov
dec
and
pop
mov
inc
testl
add
sbb
mov
mov
mov
sbb
sub
nop
test
lock
lock
sbb
mov
mov
rcrl
pop
jecxz
inc
dec
pushf
cwtl
mov
cmp
scas
jge
sub
cltd
fnsave
add
and
rcrb
lock
xor
sub
mov
jns
xchg
test
xchg
mov
add
inc
xchg
cmp
mov
cmp
adc
test
enter
lea
mov
les
sub
pusha
inc
add
push
mov
data16
out
add
adc
mov
mov
icebp
mov
xor
scas
rcrb
lods
loop
ss
xor
shrb
mov
mov
xchg
sarb
add
stos
mov
fcomps
shlb
mov
cwtl
and
je
js
pop
pusha
ret
out
inc
lock
sub
scas
lahf
mov
mov
cmc
cwtl
sub
mov
mov
mov
cld
movsb
mov
adc
jo
mov
sbb
mov
les
orb
mov
add
lds
xchg
rclb
mov
cmp
or
xchg
fs
les
jo
movl
lock
andb
xchg
scas
add
sbb
mov
mov
xchg
cwtl
pop
popf
cmp
add
and
movsl
xor
jno
fidivrs
lock
adc
int3
mov
js
lahf
ret
cwtl
mov
shrl
pop
ror
pop
inc
jo
lahf
cltd
lock
mov
incl
xchg
jno
int
xorb
mov
xor
sbb
adc
push
mov
cmp
or
or
cmp
enter
loopne
iret
popa
inc
iret
cmpsl
cwtl
popa
or
loop
mov
test
aad
mov
inc
mov
call
sbb
ret
xchg
mov
or
mov
jl
or
cmpb
cwtl
xchg
mov
nop
fdivr
call
fisubrs
test
add
mov
dec
mov
lock
cld
lods
xor
cmp
stos
push
jecxz
jno
xchg
scas
shl
xlat
in
and
popf
fcoms
notl
shlb
imulb
or
add
push
add
add
repz
andb
dec
js
ret
mull
testl
nop
jno
mov
std
sbb
adc
cld
mov
push
cwtl
pop
nop
std
js
ret
sti
popa
lock
repz
lods
enter
fs
mov
adc
mov
cld
push
mov
js
rolb
js
ret
add
add
push
popa
adc
adc
test
lods
dec
pop
add
add
fdivs
loopne
addb
nop
fs
xor
cmpb
add
lret
or
pusha
inc
mov
mov
loopne
xor
sbb
psubusb
sbb
lods
add
cmp
mov
and
rclb
rol
test
mov
xchg
loopne
cmp
mov
shlb
fisubs
cld
rcrb
add
repnz
mov
mov
mov
iret
sbb
xchg
shlb
dec
mov
xor
iret
push
rolb
mov
mov
adc
and
xor
and
mov
loopne
and
andb
sub
fdivs
add
jl
or
into
pusha
or
xchg
hlt
cwtl
sub
leave
and
mov
xor
addr16
testl
enter
js
rcl
fsubs
inc
pop
mov
cmpsl
mov
cwtl
jecxz
mov
fs
xchg
mov
pop
mov
push
fwait
jns
add
xor
mov
mov
les
lcall
xor
jg
inc
rcl
pushf
nop
mov
mov
mov
inc
xor
cld
cltd
adc
mov
cmp
push
xchg
add
mov
push
int3
mov
test
cmp
loop
pusha
pusha
loop
orps
jo
jl
fistpll
fimuls
movsb
dec
lock
push
rep
nop
mov
mov
xchg
mov
xchg
dec
mov
hlt
cmp
sub
mov
sub
add
adc
insb
mov
test
ret
pop
lahf
mov
cmp
cwtl
and
xor
xchg
jge
shll
add
pusha
xorl
cltd
insb
arpl
test
test
xchg
dec
xchg
pop
mov
aaa
mov
or
inc
adc
add
enter
loopne
xor
cmp
mov
shll
xchg
cltd
jo
or
test
mov
or
jg
dec
mov
enter
mov
subl
mov
cmpl
in
mov
cld
pushf
or
add
shr
call
mov
jns
xchg
and
test
add
test
in
andl
xchg
adc
and
xor
push
dec
sbbb
mov
lods
sub
push
dec
jno
sarl
stc
mov
rorb
and
loopne
mov
jo
lock
or
leave
jb
test
sarb
sbbl
loopne
adc
subl
push
pusha
jno
arpl
mov
pop
ljmp
xorl
mov
or
leave
adc
mov
mov
out
loop
adc
js
enter
push
inc
hlt
in
mov
scas
xchg
nop
push
inc
js
fstpt
and
or
pop
nop
add
and
mov
cmp
cmpb
cmp
jnp
push
push
inc
add
mov
xchg
sub
and
xchg
andl
xor
repnz
test
test
test
dec
xchg
cwtl
xchg
test
mov
xor
mov
pushf
fldcw
cmp
jl
xchg
pusha
push
nop
and
xorl
push
fwait
add
and
aas
and
lock
and
nop
lds
test
pop
push
inc
push
aam
mov
xorb
nop
jb
push
stos
mov
adc
pop
pop
out
loopne
mov
xchg
test
mov
xchg
mov
testb
inc
mov
icebp
sar
test
lahf
mov
popf
jl
fdivr
add
rcr
mov
mov
xor
xorl
cmpb
pusha
jo
test
popf
inc
lcall
mov
test
sbb
adc
call
test
imul
rol
sbb
or
add
pop
push
fwait
mov
nop
adc
stos
mov
xchg
xchg
ficoml
mov
xchg
test
cmpsb
or
mov
mov
inc
mov
cmp
out
loop
jne
mov
jne
pop
loopne
ja
mov
ds
jo
inc
jns
cmp
fninit
sbb
ror
jmp
ret
lret
cmpsb
jge
cld
mov
nop
sbb
xor
cwtl
dec
mov
and
enter
dec
adc
cld
mov
test
sbb
nop
test
pop
dec
movsb
pusha
int3
or
sbbb
mov
xor
les
test
sbb
mov
push
mov
ret
shlb
mov
and
lds
mov
test
test
fs
mov
bound
rcrb
adc
hlt
push
shl
cwtl
dec
into
cmp
mov
iret
scas
adc
sub
or
mov
clc
pop
je
test
clc
dec
cwtl
rol
xchg
enter
icebp
enter
mov
lret
repnz
vrsqrtps
imul
aam
nop
mov
adc
stc
loopne
enter
pop
mov
xchg
loope
rolb
rolb
test
fisttps
fcomps
sbb
cmpl
icebp
xchg
dec
sub
push
orb
mov
sub
clc
rcrb
mul
mov
dec
push
cmp
out
adcl
fidivrs
inc
lret
mov
dec
inc
xlat
dec
mov
xor
insb
push
mov
cmp
test
cmpsl
push
pusha
inc
jg
xor
mov
cs
sahf
popa
cli
add
adc
cmp
scas
jmp
call
or
fcoml
pushf
sbb
ret
lahf
xchg
and
and
loopne
mov
imul
loop
pushf
mov
cwtl
adc
test
adc
pop
jb
scas
adc
and
lret
pusha
mov
adc
cmpsl
pop
test
nop
icebp
test
cwtl
insl
adc
dec
xor
xor
or
clc
and
fiaddl
std
test
jo
mov
add
mov
xor
incl
mov
add
cmpsb
clc
bound
stc
in
icebp
cli
lcall
push
xchg
movsl
mov
sub
scas
xor
push
push
pop
mov
loopne
scas
and
test
or
nop
pusha
adc
pop
loope
adc
dec
cmp
push
or
mov
xchg
sbbl
mov
loopne
mov
jb
movsb
lock
pop
nop
or
xchg
mov
aas
or
xor
xor
iret
imul
cmp
sub
xor
xchg
push
mov
lea
stos
loop
nop
outsb
pop
lret
fmuls
mov
mov
mov
mov
push
mov
mov
mov
or
movsb
inc
mov
xchg
repz
movsb
sub
stos
pop
pusha
mov
mov
stos
lret
movsb
jecxz
xchg
cmpsb
mov
les
mov
adc
mov
mov
mov
scas
movsb
mov
mov
shlb
into
xchg
and
rcl
mov
cmpl
jns
jno
popa
inc
or
xchg
adcl
pusha
mov
add
add
fcomps
rol
lret
inc
nop
leave
mov
mov
mov
loop
nop
aas
lds
mov
aam
nop
divl
jo
mov
xchg
aam
inc
pushf
fcoms
test
xchg
cmp
pop
mov
in
aam
nop
add
lea
aam
pushf
aas
fwait
xchg
push
mov
in
sub
ss
mov
sahf
jo
mov
shlb
out
int
addr16
sub
push
jb
mov
inc
jmp
cmp
popa
jo
subb
pop
aad
push
addb
mov
inc
mov
decl
jg
shlb
or
cmp
cld
add
xor
bswap
aas
cmp
pusha
nop
push
lods
insb
pushf
sbbb
push
scas
outsl
lahf
sbbb
adc
sub
sbb
fsubl
jecxz
shrl
out
pop
sbb
dec
mov
xorb
jnp
inc
mov
ja
enter
les
hlt
or
cmp
pop
aaa
xor
push
xchg
adcb
pop
cmpsl
addr16
adcb
sbb
and
adc
aam
jmp
out
adc
inc
mov
mov
cmpb
mov
lea
cmpb
xor
push
into
ds
shll
or
mov
outsb
sahf
sbbb
xchg
push
lods
insl
popf
sbbb
adc
cs
push
sbb
loope
shrl
mov
jp
inc
mov
jbe
dec
jnp
cmc
inc
mov
or
cltd
cli
addb
testb
cmp
addb
lcall
test
movsl
gs
push
sub
sbb
andb
push
sub
sbb
xchg
mov
mov
mov
rcr
insb
add
xor
nop
mov
call
jns
loopne
xchg
mov
out
sahf
xchg
adc
or
js
fmull
out
inc
mov
mov
andb
xchg
dec
nop
or
lock
dec
rorb
mov
fiadds
daa
jo
dec
shll
xchg
addl
xchg
xor
mov
push
int3
add
dec
loopne
mov
cwtl
fimuls
int
lds
mov
or
jle
icebp
test
rcrb
fnstenv
push
aam
push
cmp
fisubl
adc
fwait
cwtl
cmp
xor
jmp
in
sbb
je
cmp
lock
jge
mov
jno
out
pop
movaps
add
push
dec
and
test
popa
adc
lahf
sbb
js
lret
andb
cmc
fcmovbe
pop
jns
lret
bound
mov
fs
and
lods
jecxz
hlt
fs
inc
shl
xchg
xchg
mov
or
cmp
sub
xorl
sti
mov
orb
mov
sub
jbe
hlt
sub
cmp
cmp
rclb
movsl
mov
xchg
leave
test
test
pop
or
sbb
or
mov
ret
into
out
hlt
sbb
repnz
in
popf
std
dec
insl
mov
cmp
xorl
and
test
enter
xchg
pop
xor
mov
sub
xorb
mov
aas
movsl
push
fsts
sbb
out
cltd
loop
movsl
aam
jp
inc
xor
mov
enter
pop
data16
fisttpl
test
stc
pusha
mov
cltd
loopne
rcll
mov
mov
cmp
mov
add
out
xchg
jp
mov
mov
or
and
xchg
leave
lods
mov
clc
or
in
fstp
adc
add
movsl
in
push
push
rcr
enter
xor
fcoml
inc
dec
enter
dec
push
add
mov
jne
sahf
repz
sub
test
jge
sbb
push
or
dec
mov
mov
push
cmc
repz
or
in
sub
test
dec
fldt
mov
push
mov
adc
xor
xchg
lret
loope
inc
mov
clc
mov
and
popa
mov
sbb
in
jmp
enter
lods
xor
push
mov
dec
aad
dec
int3
int3
jno
fmulp
test
jnp
int3
out
cmc
bnd
inc
xor
fnstenv
add
jae
push
je
jns
jle
scas
pop
xchg
add
inc
mov
jbe
add
or
leave
ja
adc
add
or
cli
dec
mov
adc
mov
les
mov
jl
xchg
sar
or
jl
or
xchg
add
js
rolb
or
ret
ret
xorb
mov
or
push
inc
and
or
test
cmp
test
js
pusha
mov
or
fsts
fmull
jmp
jmp
subb
cmp
mov
or
outsb
sti
jo
decl
lods
in
popw
mov
in
xchg
fcomps
fstl
out
cwtl
dec
sbb
and
mov
xchg
xchg
ret
enter
fiaddl
inc
lods
inc
loop
or
fs
dec
nop
add
xchg
mov
mov
push
dec
jno
and
lods
enter
negb
shll
mov
out
call
xchg
out
js
push
cltd
inc
int3
add
and
xlat
out
in
test
nop
popa
mov
movsb
inc
cwtl
hlt
mov
or
inc
pop
cmp
mov
mov
adc
mov
into
jb
jb
leave
and
lret
aaa
xchg
mov
iret
and
or
bound
xchg
nop
sbb
xchg
push
push
inc
scas
cwtl
pop
xchg
scas
add
and
cld
and
rclb
mov
dec
dec
mov
jns
xchg
pop
inc
adc
les
mov
scas
cwtl
lods
jno
push
out
scas
dec
mov
jno
inc
js
into
dec
mov
mov
add
clc
iret
in
in
xor
mov
mov
in
mov
sbb
in
fisttpll
int
leave
cmp
mov
cmp
xchg
mov
mov
aas
out
cmp
push
fadd
hlt
cld
cmpsl
cmc
in
cld
fwait
add
cwtl
into
push
mov
iret
in
sar
fcoml
xchg
xor
push
jmp
arpl
daa
jl
out
xchg
sbb
jecxz
out
and
out
lods
repnz
push
dec
or
push
mov
insb
stos
mov
add
jmp
enter
sub
in
mov
xchg
rcl
push
rorb
inc
dec
les
mov
jno
sbb
jge
jmp
cmc
push
add
les
in
sbb
movsb
pushf
fldcw
lahf
aad
cmp
movsb
test
scas
call
rorb
nop
jno
cwtl
or
test
loope
add
cmp
js
iret
mov
test
loop
ret
loopne
loopne
cld
pushf
ret
out
test
add
enter
lock
or
enter
fs
stc
xchg
cmpb
ds
mov
mov
xlat
mov
test
mov
cmp
dec
mov
orb
fdivrl
mov
push
push
adc
lcall
scas
cwtl
mov
add
mov
pmaxub
jb
movsb
sbb
or
or
mov
add
mov
adc
cmp
movsl
sahf
mov
cwtl
push
rorl
or
rolb
xchg
mov
sbb
mov
shr
js
mov
push
enter
pusha
nop
jmp
repz
aam
popa
testl
add
stc
mov
inc
sub
xchg
in
mov
mov
push
jo
or
or
sti
shlb
test
das
adc
daa
push
in
mov
popf
add
mov
push
mov
mov
and
inc
movsb
loopne
hlt
mov
lock
push
mov
mov
rcrl
test
rorl
xchg
lahf
leave
fstps
or
shl
in
push
pop
outsl
mov
or
jo
or
aad
add
xchg
cmp
mov
ret
mov
bound
inc
add
loope
mov
lcall
fdivs
aam
bnd
jbe
adcb
and
movsb
jmp
sbb
mov
lods
out
out
cmp
xchg
stc
icebp
inc
fdiv
mov
incb
adc
or
add
sti
addr16
outsb
mov
mov
xchg
adc
dec
loopne
xchg
test
cmp
mov
mov
mov
and
jnp
scas
cwtl
int3
inc
test
call
ja
dec
add
inc
lcall
adc
call
pop
or
cs
in
out
mov
test
add
pop
icebp
sbb
push
hlt
add
in
aam
mov
jmp
xor
stc
mov
xor
mov
lods
cmp
test
add
test
xchg
mov
loope
ret
fs
xchg
test
icebp
push
sbb
sahf
clc
xlat
push
xor
movsl
loopne
cs
aam
lods
rorb
dec
test
sahf
mov
push
push
xor
fistl
je
icebp
mov
mov
pusha
cmp
mov
pusha
repz
add
popa
jecxz
xchg
xchg
movsb
arpl
pusha
pop
sub
fsts
and
test
jne
adc
repnz
pusha
push
test
hlt
lret
pusha
ret
movsb
cltd
test
mov
hlt
sub
test
jb
jns
xor
adc
jecxz
pop
gs
ret
fcmovb
js
movsl
in
inc
dec
or
mov
push
inc
cmp
fwait
lock
adc
add
or
clc
test
out
leave
sub
mulb
xor
aam
mov
pop
lods
adc
inc
inc
pop
icebp
lret
sbb
in
mov
int3
pop
xor
jo
insb
push
add
mov
mov
add
cld
fcomp
xchg
loop
xchg
sub
and
stos
add
inc
ljmp
hlt
movsl
iret
push
xor
pop
inc
lock
fdivr
xchg
mov
cwtl
dec
pop
xchg
outsb
push
cltd
mov
inc
enter
aaa
popf
fmuls
pop
divl
mov
shl
xchg
sub
lods
gs
xor
or
mul
fsub
inc
mov
cmp
xor
scas
leave
into
sub
mov
int3
rorb
pushf
pop
cld
mov
testb
dec
adc
or
inc
sbb
sbb
adc
in
in
out
lret
add
mov
out
xor
sahf
iret
xlat
lret
nop
int3
cmp
into
jp
ror
enter
jmp
adc
outsb
ret
dec
mov
into
out
mov
arpl
push
neg
sbb
cli
out
js
mov
pop
jnp
loop
mov
mov
add
shlb
jl
test
adc
ret
add
mov
in
pusha
push
je
adcl
loop
mov
popa
cwtl
in
lods
mov
mov
andl
outsl
push
pusha
shlb
mov
movsb
les
test
cmc
loop
sbb
pop
xlat
testb
sarl
pop
or
pushf
shl
sub
in
jb
loop
out
in
shl
fs
and
outsl
inc
jecxz
sbb
cmc
cwtl
xchg
movsb
or
loopne
rcl
int3
nop
enter
stc
nop
rol
xchg
in
hlt
dec
ds
mov
call
dec
xlat
lea
jp
aam
cmc
mov
inc
in
lds
or
mov
test
movsb
mov
cmp
aas
mov
call
inc
and
mov
mov
iret
ret
mov
lds
rorb
aas
sti
push
ret
aam
les
push
cwtl
fs
mov
scas
out
hlt
and
cmp
sbb
shll
lret
adc
enter
xor
rol
xchg
add
mov
mov
inc
xchg
lods
mov
in
shrl
imul
sub
pushf
ret
notb
mov
cld
mov
sahf
call
jecxz
out
jno
mov
jmp
add
add
mov
lock
fdiv
aaa
stc
push
xor
pop
lcall
jmp
jmp
push
scas
xor
xchg
arpl
loopne
mov
cmp
lock
xor
in
pop
cld
in
push
out
push
lret
adc
fcoms
movsb
mov
push
xchg
sbb
lds
mov
stos
cwtl
repnz
mov
lret
filds
repnz
leave
xor
fcmovnb
imul
mov
ficoms
mov
cmc
ret
loope
lods
out
inc
pop
xor
add
pop
pop
and
sub
enter
inc
xchg
dec
mov
sub
rcrb
bound
lds
mov
inc
mov
enter
shl
jmp
divl
jae
xchg
adc
mov
repz
adc
mov
mov
mov
in
inc
lods
push
outsl
xorb
xorb
pop
jno
or
jno
jmp
cli
inc
int3
mov
or
jo
mov
mov
mov
xor
insb
clc
lods
popf
clc
xchg
in
out
in
lahf
call
and
scas
lds
mov
xchg
mov
pushf
mov
lods
outsl
out
mov
sub
cld
mov
jle
insb
icebp
push
and
push
nop
call
lret
mov
call
mov
mov
ss
mov
mov
or
add
rol
insb
imul
fcoml
jle
nop
jmp
inc
inc
mov
mov
mov
lret
mov
js
or
fidivs
cwtl
call
fsts
push
sub
xchg
test
nop
insb
jg
or
addb
cltd
loope
test
pusha
fadds
jg
xlat
js
mov
loopne
adcl
jnp
push
mov
push
test
fcomip
aad
and
test
jnp
pop
sub
xor
into
cmp
fldt
nop
hlt
fsubl
jo
scas
mov
add
and
mov
test
lret
and
test
lret
mov
lods
aas
in
in
xor
push
lret
add
and
fidivl
mov
loope
ror
testb
xchg
cmc
stos
xchg
and
shrl
bound
sub
push
mov
rcrl
mov
mov
ror
repnz
leave
popa
movb
mov
sub
cli
xchg
sbbb
mov
or
sahf
mov
mov
cmpsl
lahf
mov
jo
xor
popf
mov
mov
mov
add
call
adc
scas
xchg
adc
int3
mov
xchg
rcrb
xlat
mov
add
test
loopne
xchg
clc
gs
shrb
or
lahf
rol
es
enter
pop
roll
bound
xchg
test
rcrb
test
mov
hlt
mov
xchg
rclb
clc
add
rol
es
shll
jb
cmpsl
clc
enter
push
les
shrb
push
popa
mov
sahf
rol
es
jb
daa
rol
call
les
mov
pop
push
xchg
cmp
mov
js
dec
loopne
mulb
pop
push
ror
xchg
ljmp
dec
test
add
or
lds
fcmovb
or
pop
test
push
mov
adc
cmp
pop
or
repz
popa
enter
loopne
fadds
int3
clc
int3
xchg
mov
and
int3
push
sbb
loopne
lahf
xchg
clc
or
or
mov
or
rol
adc
test
jno
xchg
add
mov
jno
fldcw
dec
push
icebp
cmp
clc
bound
cwtl
add
js
xchg
dec
daa
js
mov
or
pusha
daa
inc
outsb
mov
cld
out
icebp
clc
lret
xlat
sub
xchg
mov
shr
or
mov
dec
inc
addb
popa
enter
int3
loopne
xchg
rcl
fdivs
or
int3
cmp
xchg
call
xlat
adc
pushf
int3
aam
xchg
or
fdiv
mov
rorb
int3
xchg
call
adcb
les
es
cld
inc
xor
pusha
or
push
rol
rorb
pop
mov
or
add
fmul
xchg
jo
cltd
test
pop
fs
mov
add
xchg
sub
push
xchg
mov
js
or
rol
es
rcl
shlb
enter
loopne
test
lock
or
test
jb
mov
xchg
sbb
cmp
ret
shll
scas
mov
fcomps
xchg
adc
and
psubusb
shrb
loopne
test
xchg
ljmp
xchg
xor
mov
rol
stc
out
cld
adc
jo
cmp
mov
sbb
jl
fcoms
dec
int3
xchg
lock
pop
test
or
and
fadds
int3
dec
int
pop
cwtl
bound
int
inc
mov
mov
xchg
xor
cwtl
jns
xor
or
rcrb
call
rclb
adc
mov
call
stc
lret
cmp
cmp
lds
mov
adc
adc
insb
jbe
xor
ss
xchg
pop
xchg
cmp
out
dec
stos
cmp
dec
or
xchg
rcr
shlb
jo
mov
adc
popa
fdivrs
xchg
mov
lock
orb
adc
rol
call
and
adc
les
mov
pop
sbb
js
and
scas
mov
push
adc
enter
rcr
xchg
xchg
cwtl
cmp
stos
push
test
xor
andb
and
call
mov
inc
test
mov
adc
sbb
or
mov
push
stos
and
dec
sbb
movsb
push
adc
rclb
test
cmp
cld
mov
fistl
cmp
or
rclb
xor
stos
les
push
loope
or
rolb
test
adc
cmp
pop
adc
test
or
pusha
stos
mov
lret
sub
adc
loop
xchg
sarl
xor
inc
mov
mov
mov
imul
out
js
mov
sub
fcomp
mov
shlb
movsb
or
test
out
mov
mov
pop
ret
inc
dec
test
ret
pusha
dec
rcrb
mov
jmp
mov
rcr
or
pop
mov
jb
test
xchg
clc
dec
loopne
call
fwait
or
fs
mov
inc
test
dec
dec
adc
dec
insb
gs
test
rolb
cwtl
scas
xchg
mov
cmp
cmp
es
enter
push
mov
add
adc
rcl
dec
xchg
adcb
mov
xor
adc
test
dec
mov
clc
sub
test
or
dec
jb
mov
add
stos
cmp
subl
mov
adc
xor
adc
cmp
cs
pop
mov
es
jns
xchg
test
rorb
adcl
shrb
push
rorb
sub
jp
mov
nop
ficoms
xchg
loopne
adc
rol
jmp
test
sbb
nop
add
mov
das
out
xor
push
push
cmp
test
push
leave
add
pop
xchg
jecxz
pusha
inc
arpl
ret
fcoms
jno
enter
mov
sbb
rcrb
adc
pushf
or
adc
cwtl
dec
aaa
test
aas
enter
mov
cmpsl
pusha
or
add
adc
lock
sahf
sbb
sahf
movb
sahf
push
and
or
adc
cmp
or
fdivs
mov
pusha
lds
fldcw
fcmove
inc
mov
dec
add
xor
mov
clc
adc
fsubs
nop
call
clc
push
roll
shrb
mov
and
fs
inc
test
and
pusha
mov
test
out
ljmp
xchg
and
mov
mov
mov
rolb
adcb
sub
lret
sbbb
sbb
aam
es
stc
inc
pushf
dec
push
lds
inc
fs
push
or
movl
stos
inc
jecxz
mov
mov
aam
mov
mov
or
movsb
sbb
loop
sub
movsb
inc
enter
mov
or
xchg
movsb
jl
xchg
or
or
enter
mov
or
enter
mov
push
enter
inc
cwtl
and
xchg
inc
test
movsb
adc
cmp
or
pusha
jno
add
setb
scas
xchg
bsf
fcoms
hlt
xchg
lar
push
xchg
cvttps2pi
dec
xchg
orps
jb
sbb
add
mov
bound
bound
bound
bound
bound
ss
add
and
push
call
out
dec
mov
stos
scas
jo
lret
shrb
cmp
daa
or
fs
fsubrs
xor
test
dec
dec
rcrb
push
subb
les
or
add
out
xchg
mov
lock
sub
ror
mov
out
mov
call
pushf
sbb
fs
mov
sub
inc
cwtl
daa
out
test
out
mov
lock
int3
or
pop
mov
orl
inc
ror
mov
movsl
push
popa
mov
sub
or
sahf
js
icebp
add
push
leave
clc
or
mov
fwait
int
cmp
or
mov
clc
mov
mov
test
add
mov
aas
inc
pop
orb
push
jno
pop
jno
gs
insl
xchg
or
xchg
mov
clc
mov
xchg
cmp
mov
test
sub
xor
mov
push
pusha
rol
sub
jmp
int3
cmp
adc
in
repz
or
sub
xor
xor
cmp
cwtl
test
repnz
pushf
ja
clc
jg
loopne
jo
mov
into
mov
sub
xor
dec
xchg
psrlq
jmp
rorb
adc
cmp
push
sbb
adc
mov
mov
or
sub
jbe
mov
pusha
clc
xor
mov
mov
push
enter
sub
enter
mov
fs
adc
pop
int3
mov
jno
andb
inc
adc
push
xchg
mov
loop
shlb
mov
mov
inc
sub
xchg
mov
and
and
loopne
adc
cmp
pop
adc
cmp
daa
push
adc
dec
push
ret
inc
pop
xchg
sub
xchg
test
test
nop
rcr
cwtl
or
scas
es
les
iret
push
test
lock
xor
fwait
dec
xor
xchg
cmp
sub
push
cs
pop
jno
sbb
rcrb
dec
xchg
andb
cwtl
ror
jo
cwtl
stos
jno
mov
test
xchg
lret
adc
call
mov
ret
and
int
mov
push
pop
lods
rcl
nop
inc
fcomi
and
mov
xlat
cld
and
mov
pop
xlat
and
sub
xor
shl
dec
or
mov
test
adc
nop
shll
sbb
sarl
mov
fdivr
fs
pop
add
mov
or
enter
mov
xor
dec
and
fsubrl
pop
push
shll
test
out
xchg
nop
aam
orb
pop
add
rolb
or
mov
or
bound
inc
adc
push
or
cmpsl
lock
inc
mov
and
pop
shll
loopne
cmp
rorb
xchg
jecxz
dec
inc
loop
sbb
es
push
cmp
mov
push
lds
mov
mov
mov
call
mov
lock
inc
fwait
dec
adc
mov
add
es
inc
mov
jo
mov
or
enter
aad
inc
loopne
push
sub
xchg
jns
and
adc
nop
nop
mov
pop
xchg
jo
mov
mov
xor
les
outsl
loop
mov
mov
stc
adcl
dec
and
mov
lock
stos
dec
add
xor
mov
cmp
or
enter
xchg
mov
clc
inc
add
xor
mov
and
inc
mov
inc
xchg
or
mov
push
xor
fwait
or
loopne
fmuls
sahf
orb
stos
clc
adc
call
and
inc
stc
sbb
mov
inc
test
fs
mov
shll
xorb
inc
mov
in
repnz
cmpsb
fcomp
lods
loopne
xorb
xor
inc
jp
test
call
jb
mov
fldl2t
call
enter
pop
cmp
dec
fcomps
sub
ss
adc
xchg
cmovl
in
orb
xchg
and
js
xchg
sbb
mov
iret
or
movsb
jno
scas
jno
mov
cwtl
shlb
out
cwtl
icebp
jno
cld
jno
pop
jno
adc
sbb
cwtl
xor
dec
cmp
mov
inc
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
out
ficoml
xchg
mov
les
movsl
movsb
mov
mov
or
xchg
test
adc
mov
or
lods
movsb
pop
enter
mov
or
xchg
mov
inc
aam
sbb
mov
ficompl
cwtl
dec
xchg
jecxz
jae
out
fninit
popl
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
loope
fcompl
push
nop
or
fsubrl
clc
lret
or
or
loope
clc
in
or
divl
push
rclb
test
enter
shl
sub
and
bound
mov
cmp
sbb
or
test
cmp
or
stc
test
dec
loopne
rcrb
fwait
dec
and
fs
mov
mov
lock
fiadds
cmp
popf
mov
test
sbb
sahf
mov
in
lods
fadds
or
or
or
or
or
or
or
or
or
or
or
mov
jnp
mov
clc
xchg
and
clc
pushf
and
clc
cmpsl
and
clc
mov
or
mov
sub
clc
shrl
clc
fisubrs
clc
jmp
ds
sbb
lock
xchg
push
cwtl
dec
xor
sub
lret
fbstp
adc
js
test
push
out
or
js
mov
and
icebp
ror
enter
add
pushf
call
mov
sti
dec
push
adc
dec
daa
mov
xor
pusha
dec
sub
pop
sbb
jno
push
andb
pushf
orb
test
out
mov
adc
stc
inc
fwait
dec
add
mov
push
lds
clc
in
nop
dec
inc
mov
xor
pusha
mov
call
loop
sbbb
mov
mov
or
rorb
fisubs
nop
out
jle
sbb
movb
loop
test
or
gs
mov
and
jl
fs
test
adc
and
or
adc
jecxz
out
or
or
icebp
push
fwait
dec
mov
fnstcw
dec
sar
inc
inc
mov
lock
adcl
shlb
jecxz
shrb
clc
inc
mov
jb
ret
test
fnstsw
mov
sbb
pusha
mov
pushf
add
fs
cmp
mov
add
mov
inc
cmp
les
ja
inc
clc
or
popl
les
sub
add
xchg
jo
addb
leave
dec
nop
popa
dec
dec
cltd
xor
mov
in
add
inc
clc
mov
xchg
dec
pusha
adc
dec
add
enter
call
lock
add
repnz
outsl
dec
push
pop
xchg
adc
push
push
js
les
loopne
scas
nop
lock
clc
in
test
call
adc
movsb
test
jo
shlb
mov
mov
push
sub
push
in
xor
fwait
add
in
lcall
dec
jo
or
mov
mov
mov
mov
mov
shrb
or
fs
mov
adc
repnz
mov
adc
mov
inc
fwait
dec
jo
js
xor
and
nop
mov
andb
xchg
mov
dec
mov
push
xor
mov
xchg
dec
add
xor
push
test
adc
mov
adc
mov
push
repnz
push
call
push
test
dec
or
enter
adcl
mov
push
shl
loopne
sub
add
and
cmp
dec
lock
out
jmp
xchg
push
sub
pop
lods
cwtl
xorb
mov
lds
ja
scas
xchg
loopne
cld
dec
xchg
pop
mov
mov
nop
call
dec
ret
mov
scas
dec
andb
xor
xchg
add
xor
push
enter
call
cmc
adc
xchg
mov
dec
icebp
inc
nop
sub
test
int
pop
dec
ret
mov
lock
xchg
jecxz
add
adc
sbb
pop
nop
cld
push
sub
cmp
js
push
or
mov
movsl
inc
cwtl
clc
jae
cwtl
test
jmp
fdiv
out
or
or
or
or
or
push
jecxz
sahf
icebp
mov
or
sahf
sub
lock
inc
push
jmp
sbb
or
jnp
nop
mov
dec
out
nop
mov
mov
sar
loopne
dec
cwtl
mov
or
or
es
xor
es
jo
shlb
inc
cwtl
dec
out
lock
or
xchg
mov
mov
mov
mov
in
bnd
jb
mov
stc
and
push
bound
fcom
shrb
pushf
xchg
lock
pop
xchg
in
jbe
clc
cmp
mov
enter
shlb
fmuls
out
pushf
cld
push
or
or
mov
xor
fs
repnz
mov
nop
sarl
lock
xor
in
dec
push
pop
ret
in
dec
push
pop
ret
in
dec
push
pop
ret
in
dec
push
pop
enter
mov
rorb
dec
mov
mov
push
shlb
clc
daa
sub
test
pusha
cmp
push
lds
loopne
mov
call
push
rolb
test
loopne
ret
and
pop
movl
mov
mov
or
pusha
push
mov
js
in
xlat
xchg
stc
leave
push
or
adc
or
les
test
lock
ret
rorb
pop
lock
adc
xor
adc
dec
cmp
sti
inc
push
mov
push
dec
adcl
fcom
js
roll
mov
shrb
mov
out
mov
adc
out
mov
shlb
pop
out
mov
and
mov
xor
in
lock
mov
sti
mov
sbb
shl
jmp
mov
dec
arpl
push
mov
ds
lods
rclb
inc
cwtl
xchg
cmp
sbb
cmpb
mov
call
sbbb
loopne
dec
add
or
fwait
dec
sub
pop
fwait
dec
cmp
add
nop
push
jb
mov
fs
mov
js
clc
mov
mov
icebp
and
fwait
dec
mov
jo
dec
enter
or
or
dec
xor
push
mov
pop
jl
call
lock
add
jl
bound
xor
inc
scas
int3
test
repz
ret
xchg
cwtl
adc
nop
pop
sahf
mov
shl
and
enter
push
push
dec
lods
adc
fcomps
xchg
cmp
mov
mov
inc
sub
icebp
dec
pushf
addb
add
pop
adc
shrl
add
pop
out
mov
sub
or
cmp
into
rep
push
cwtl
pop
popa
mov
mov
andb
fadd
repz
pusha
mov
pop
inc
or
notl
in
adc
push
mov
adc
push
mov
lds
dec
mov
gs
cmp
fwait
or
test
mov
dec
or
fcomps
fwait
dec
xor
sub
fwait
dec
pop
stc
js
dec
jo
mov
or
mov
mov
in
lods
test
or
movsb
sub
stos
rolb
adc
jb
mov
lock
mov
jb
xor
dec
and
fcomp
mov
cmp
sbb
cmp
pop
nop
inc
push
pusha
push
fmul
mov
pop
xlat
je
test
jmp
xchg
mov
push
add
xor
push
test
or
sahf
xor
mov
adc
mov
push
bound
or
mov
mov
or
or
xor
fwait
dec
lods
fs
arpl
les
xchg
cmp
xor
mov
lea
dec
clc
clc
push
loopne
jmp
lcall
test
sbb
inc
fs
or
stc
test
dec
inc
sahf
shlb
mov
clc
fs
lret
pusha
lods
dec
sub
sub
gs
test
mov
mov
repz
gs
mov
mov
lock
enter
adc
dec
adcb
cmp
or
enter
inc
jo
cmovb
pushf
mov
int3
clc
adc
and
mov
mov
adc
sbbb
lods
fdivs
fs
cwtl
addr16
nop
clc
cwtl
fwait
jno
mov
enter
jno
js
lock
mov
jb
dec
and
pop
mov
repnz
lahf
fs
push
xchg
push
mov
xchg
inc
insl
mov
popa
hlt
clc
mov
mov
int3
imul
cwtl
lock
xchg
add
jp
or
pushf
nop
push
int3
jle
movsb
add
sbb
nop
je
nop
cwtl
jo
pop
mov
imul
in
fsubrs
dec
in
mov
adc
enter
movsb
in
lret
cwtl
movsl
test
mov
rclb
xchg
add
mov
inc
mov
out
mov
cwtl
sbb
xchg
xchg
addb
mov
test
jo
add
push
movsb
ds
mov
or
xchg
movsb
mov
mov
jp
add
push
movsb
inc
enter
mov
or
xchg
shlb
mov
or
add
movsb
ds
mov
or
xchg
out
ror
adc
xchg
or
pop
movsl
mov
mov
add
repnz
out
ror
mov
les
add
push
movsb
cmp
adc
mov
or
xchg
ret
enter
iret
mov
sbb
or
cli
enter
mov
or
data16
xchg
xor
and
or
or
les
mov
push
mov
or
xchg
cld
movsb
ljmp
les
mov
cli
pop
xchg
mov
jae
enter
mov
or
xchg
fsubl
mov
shlb
pop
xchg
dec
movsb
cmp
and
or
or
xchg
movsb
mov
mov
insb
dec
mov
mov
or
xchg
jb
ret
and
mov
cmp
cs
push
movsb
adc
add
clc
mov
or
fsubl
push
or
sub
sbb
push
adc
mov
push
into
mov
lcall
rclb
nop
mov
push
in
push
mov
sub
sbb
sbb
dec
or
and
in
mov
sbb
lret
mov
clc
dec
mov
test
or
xor
inc
enter
mov
jne
lcall
mov
or
adc
mov
or
jp
es
sbb
mov
or
jns
push
mov
or
xchg
or
mov
or
pop
mov
inc
enter
mov
or
xchg
int3
movsb
ret
adc
jle
ja
or
dec
movsb
cmp
adc
add
repnz
ficoml
cmp
les
xor
test
mov
or
xchg
add
adc
and
cmp
add
mov
aam
loopne
lock
mov
or
cmpsb
push
stc
les
rorb
mov
repnz
xchg
sbb
mov
rorb
mov
insb
les
or
movsb
sub
sbb
or
or
xchg
mov
adc
or
jle
mov
cld
or
push
xchg
movsb
inc
enter
mov
rcll
add
or
xchg
ljmp
adc
dec
nop
pop
lea
nop
dec
mov
hlt
orl
xchg
daa
rclb
mov
outsb
and
ljmp
sub
scas
ret
in
add
jne
out
out
dec
push
dec
fwait
mov
jmp
sarb
pusha
arpl
les
idivb
xorl
cmp
testl
outsb
add
out
out
pop
adc
lret
into
mov
into
ficomps
jbe
mov
mov
div
repnz
lods
adc
cmpsb
and
mov
adc
fldcw
mov
loope
aad
push
mov
in
or
int3
and
add
jp
or
mov
vcvttss2si
or
cmp
gs
lods
push
imul
xchg
out
pop
cs
push
pop
push
clc
inc
mov
mov
adc
shll
cmp
push
nop
sarl
pusha
mov
call
mov
or
enter
rcl
xchg
in
and
pop
sub
cmp
pushf
sbb
movsb
clc
cltd
xorb
push
ret
es
int3
cli
jns
xchg
loope
lods
sub
adc
in
xchg
scas
insl
shrl
or
inc
aad
les
or
cwtl
adc
notb
or
rolw
inc
dec
test
sub
cmp
mov
pop
outsb
hlt
push
les
push
orl
sbb
nop
or
pop
call
in
es
in
xor
insl
inc
lcall
xchg
int3
mov
adc
mov
cwtl
pop
jo
lea
lret
cmc
add
jae
and
movsb
fdiv
xor
jb
add
cmpb
jae
in
call
test
in
cmp
mov
cmp
xor
cmp
inc
rorb
repnz
loopne
nop
cli
cmp
ficoms
add
std
movsb
mov
lock
lret
sbb
cmpsl
ds
dec
rorb
mov
jp
filds
sahf
xchg
mov
into
mov
xchg
sub
mov
loopne
add
insl
pop
leave
cmp
fistpl
cli
push
dec
add
lock
mov
cmpsl
in
popa
jo
jl
pop
aam
adc
leave
dec
imulb
dec
ja
fsubrs
push
nop
scas
adc
ficoml
xchg
aas
fadd
or
enter
fisubrs
stos
imul
pop
add
mov
ret
lds
ret
lea
lods
test
mov
test
in
adc
add
jns
and
xchg
shrl
mov
mov
dec
pushf
mov
ret
mov
enter
push
xor
sbb
shlb
imul
je
and
mov
or
dec
pop
cld
jmp
out
lds
test
and
mov
mov
or
cmpb
hlt
cmpsb
jp
jnp
stos
les
push
cltd
mov
or
rol
cwtl
dec
dec
out
icebp
in
es
ror
nop
or
jg
and
popf
adc
cmc
mov
mov
subb
cmpb
or
in
lds
dec
je
dec
movsb
mov
or
sbb
cmp
xor
inc
movb
pop
ficomps
mov
adcb
int3
jmp
aas
test
adc
dec
jmp
adc
icebp
sub
aam
out
shll
lock
aam
scas
push
adc
loope
add
cmp
xchg
mov
test
mov
and
out
sbb
pusha
xor
in
fstl
xchg
pop
sbb
scas
add
pop
insb
out
adc
ja
hlt
mov
push
add
lds
stos
stos
dec
in
xchg
xchg
das
pop
outsb
fiadds
stos
adc
adc
inc
ljmp
and
push
or
in
pop
inc
inc
cmp
xor
cmp
sbb
mov
stos
adc
add
lret
lret
push
out
sub
fs
xor
in
out
pop
or
leave
cmp
ljmp
mov
sbb
out
popa
sbb
xchg
in
mov
sbb
scas
sub
cmp
scas
or
mov
adc
sarl
rcrl
cmp
shufps
js
lds
pop
fisubrs
imul
stos
adc
cmpsb
sub
lcall
and
mov
movsl
mov
pop
xor
movsb
test
adc
and
add
subb
mov
sbbb
lahf
shrb
mov
aaa
into
in
je
icebp
movsl
mov
adc
and
push
out
les
mov
fwait
sbb
fsubr
cmp
dec
sahf
adc
or
mov
out
xlat
rcrl
push
xchg
jge
das
push
mov
adc
pop
in
jmp
loop
mov
mov
jmp
fldenv
bnd
inc
jl
mov
xor
mov
lods
dec
xchg
fmul
lods
adc
mov
in
dec
in
fistps
in
adc
jmp
ror
mov
repnz
shll
lds
jecxz
scas
enter
shl
sub
lcall
es
les
leave
arpl
aas
shll
shrl
sub
lcall
mov
dec
fisubrl
xchg
fmuls
int3
andb
or
test
pusha
xchg
loopne
sbb
lret
add
shlb
jg
repz
mov
or
push
pop
mov
mov
or
or
mov
jbe
test
fucomp
sbb
std
test
scas
xor
repnz
test
stc
or
loopne
imul
lock
xchg
xchg
dec
sti
cmpsb
ror
fcmovu
int3
loope
leave
shll
add
stos
push
pop
cmpsl
xlat
mov
xchg
test
ret
cltd
sahf
jecxz
test
mov
jo
repnz
movsb
xor
out
ror
mov
enter
inc
ljmp
push
mov
ja
dec
fwait
inc
popf
mov
or
leave
mov
adc
fcomps
imul
movsb
cmp
vpcmpgtb
adc
test
rcl
xchg
iret
mov
hlt
push
shlb
test
inc
fcomp
mov
dec
movsb
lock
add
in
test
xor
fisubs
mov
fdivl
rcl
lock
mov
aad
xchg
test
cltd
into
xor
in
out
test
in
repnz
nop
push
and
mov
dec
dec
mov
push
inc
mov
adc
xlat
leave
into
icebp
int
rclb
pushf
or
sarb
and
aad
ss
outsb
lret
sbb
and
jae
or
scas
les
shlb
fsubrs
lea
push
nop
stos
dec
cmp
pusha
cli
and
xchg
rep
cli
les
arpl
add
cmc
rcl
ds
and
mov
and
cmp
enter
ret
dec
xchg
ror
ljmp
xor
sbb
jbe
pop
add
mov
xchg
leave
nop
and
ret
pushf
mov
rcl
cld
or
inc
push
add
mov
mov
in
xchg
inc
cmp
push
les
cwtl
scas
push
adcb
inc
sahf
jge
stos
cmp
mov
dec
fisubrl
test
xor
pop
das
test
scas
ret
mov
test
test
mov
jae
jmp
stos
scas
ja
xchg
in
mov
es
movsb
pushf
data16
ja
xchg
ret
arpl
cmpsb
lret
sub
adc
loopne
xorb
mov
and
dec
jns
out
nop
lret
jg
adc
lock
add
shll
pop
lret
add
hlt
in
xchg
shl
xchg
shll
pop
shr
stos
out
dec
stc
sub
sub
dec
mov
mov
fdivrl
aam
mov
test
cmp
shll
xchg
dec
ret
push
shlb
movl
sub
es
jns
stos
fdiv
rolb
fs
leave
in
and
mov
dec
or
adc
push
add
int
fsubrs
notl
lods
pusha
mov
loope
xor
inc
je
dec
dec
addl
into
pushf
unpcklps
add
and
cs
arpl
mov
push
cmpb
mov
or
cli
lret
cmp
add
in
ds
mov
sbb
in
or
movsb
xchg
nop
fdivr
lock
leave
sahf
icebp
xor
xor
xchg
lds
or
int
push
lret
lcall
mov
imul
ljmp
sbb
sbb
mov
push
loop
aas
adc
dec
icebp
loop
insb
mov
movsl
std
xchg
rcll
repnz
sbb
adcb
mov
stc
xor
push
ljmp
xchg
int3
or
and
add
call
addr16
sbb
pushf
mov
js
xor
xor
lods
shrl
mov
nop
ljmp
divb
xchg
and
outsb
xor
dec
mov
xchg
mov
fstps
and
mov
outsb
imul
add
push
xchg
mov
mov
ror
shl
loopne
cmp
enter
or
cwtl
stc
dec
roll
test
adc
xchg
int3
pop
sub
mov
cmp
jo
fwait
inc
mov
enter
int3
and
rcr
xor
rolb
data16
xor
stos
out
in
inc
cltd
adc
cld
ss
faddl
ret
fsqrt
sbb
mov
mov
cli
call
mov
enter
ret
push
mov
lret
dec
xchg
fwait
lods
add
fdivrl
ficompl
mov
into
rorl
mov
movsl
ror
into
nop
int
dec
jb
inc
dec
arpl
jge
int3
fdivl
cmp
add
loope
add
in
and
in
js
adc
mov
in
or
in
mov
cld
push
dec
pop
inc
movsl
gs
imul
mov
mov
lret
pusha
rcl
push
out
mov
mov
imul
fcmovbe
in
adc
nop
leave
add
movsb
or
repnz
mov
lds
xor
mov
loope
les
cli
cmp
dec
xor
lea
and
cwtl
clc
dec
insb
push
movsb
sbb
jae
xchg
sbb
test
nop
sub
ror
sbb
jno
rorl
in
call
scas
mov
inc
and
in
xchg
jp
jae
inc
jns
cmp
jno
leave
mov
cmp
cmp
cmc
and
push
or
aam
ret
lods
add
imul
dec
shl
insl
loope
mov
adc
sub
sub
notb
cmp
fcomp
bound
or
adc
repz
test
lock
cmc
sub
inc
daa
stc
leave
pusha
mov
nop
sub
dec
dec
mov
xchg
lods
add
pop
repz
mov
in
test
jno
cmpsb
stc
jmp
xchg
add
jo
mov
icebp
mov
in
roll
aam
mov
mov
xor
mov
mov
inc
int3
in
mov
fildll
jo
push
lret
inc
movsb
add
sub
sub
mov
xorb
push
cmp
pusha
popa
lret
cmp
mov
xchg
adc
or
mov
add
mov
shlb
mov
mov
movsb
nop
jb
inc
mov
mov
jmp
pusha
mov
xor
push
out
xorl
add
iret
test
aaa
add
cmpsl
cld
test
mov
cs
push
inc
mov
decb
loope
inc
mov
test
out
xor
mov
sub
gs
popa
sub
sub
mov
dec
test
xchg
cwtl
or
addl
pushf
in
orb
das
mov
adc
xchg
test
popa
xor
adc
lods
test
cmpl
in
flds
stos
inc
sbb
cwtl
shlb
xorb
inc
daa
dec
jb
mov
sub
add
inc
arpl
dec
jge
inc
mov
inc
pop
xor
ds
pop
cwtl
dec
pop
ret
pop
inc
sub
call
dec
mov
cmp
and
jle
add
inc
cmp
jne,pt
xor
jae
pusha
dec
hlt
jge
pop
inc
jno
lahf
test
dec
and
jbe
ds
xor
push
dec
xor
dec
pushf
std
push
push
js
inc
shlb
mov
inc
test
push
int3
inc
nop
dec
xor
inc
imul
std
cwtl
shrb
xchg
in
rclb
enter
fldenv
fsubrs
ret
push
inc
dec
and
cmp
mov
cs
inc
cwtl
lock
add
push
xchg
and
push
orb
jle
test
loop
test
push
and
cltd
xchg
dec
push
xchg
jge
pop
cmp
pop
outsb
inc
push
cmp
mov
dec
movsb
test
push
pop
jnp
or
int3
dec
mov
adc
cld
loopne
or
inc
xchg
cld
movsb
fadd
adc
in
mov
stc
add
jb
xchg
gs
shlb
test
and
xchg
mov
imul
or
xchg
faddl
test
cmp
subl
xchg
sarb
xor
lds
adc
imul
test
hlt
int3
mov
ficoms
sbb
xorl
ret
xchg
adc
and
sbb
sbb
adc
test
inc
dec
xorl
xlat
int
lahf
in
sarb
int
imul
mov
or
clc
imul
adc
xchg
sub
adc
leave
inc
mov
pop
mov
fdivl
aas
cmpsb
insl
loopne
or
sar
shl
orb
dec
addr16
sub
in
push
jge
cwtl
push
inc
subl
add
adc
test
pop
lahf
orb
aam
shll
aam
insb
and
xchg
jne
cmp
jmp
cmp
imul
fadd
push
mov
jmp
dec
jns
pop
and
pop
or
inc
mov
cmp
out
or
sub
loopne
into
js
test
lods
or
movsl
insl
pop
sbb
xchg
fisttps
in
ror
jne
ja
dec
das
adc
push
jmp
add
notl
jne
cwtl
cs
xor
add
rcrb
mov
imul
cmp
cwtl
icebp
orb
aam
sarb
inc
pop
push
mov
push
and
std
sub
jne
sub
subb
insl
xlat
popf
sub
andl
push
test
pop
or
cmp
test
fs
gs
loopne
lret
les
cmp
fistpll
push
mov
or
adc
mov
mov
jle
ret
adc
mov
mov
pop
mov
adc
dec
xlat
xchg
xchg
mov
jne
test
sub
inc
add
rorb
add
mov
idivl
mov
jge
jecxz
dec
add
add
xchg
dec
frndint
inc
js
jno
arpl
inc
cmovno
out
jno
in
cld
popf
movsb
pop
sub
mov
in
andb
test
in
or
mov
xor
lret
inc
mov
xchg
inc
add
mov
and
cmc
mov
jnp
adc
mov
mov
cmpsl
mov
pushf
into
pushf
dec
pushf
jl
fs
sti
lea
jg
jne
mov
mov
orb
andb
les
dec
xchg
xlat
sbb
xchg
popa
adcb
in
sbb
sarb
aad
mov
neg
pop
test
insl
aad
and
pop
ja
lock
xchg
adc
mov
nop
lock
in
test
fildl
sbb
add
roll
andb
mov
fwait
imul
dec
and
xchg
jg
mov
std
mov
cmp
jo
sbbb
mov
or
sub
sbb
fcomps
xlat
cmp
notl
insl
cmp
cmp
xchg
outsb
rcll
or
xchg
repnz
cmc
mov
testb
xchg
push
cmp
push
cmp
jbe
sti
or
jae
jg
mov
and
xchg
jns
mov
lock
mov
in
faddp
jle
adc
std
in
mov
mov
hlt
les
shl
pop
xchg
mov
mov
pusha
out
xchg
or
mov
pushf
or
movsb
inc
imul
lock
mov
daa
mul
xor
or
frstor
sbb
call
mov
dec
popa
cmp
aas
enter
aas
lret
das
xor
aaa
jnp
dec
mov
inc
jae
and
fdivrs
push
imul
outsb
test
cwtl
dec
sub
xchg
outsl
mov
aas
jl
xchg
xor
insl
test
mov
xor
mov
jge
xchg
add
pusha
dec
outsb
pop
pop
or
inc
dec
ja
and
mov
mov
sub
jbe
dec
push
lock
aaa
ss
daa
clc
pop
cmp
dec
cmp
aas
loop
fistpll
mov
rorl
push
ja
outsl
ds
test
pop
mov
int3
push
pop
fwait
mov
xor
pusha
dec
xor
xor
pusha
mov
cmpsb
inc
nop
add
sub
int3
lcall
dec
push
xorl
insl
dec
xlat
jg
enter
lcall
fcomps
push
xor
clc
dec
inc
hlt
push
test
push
mov
rcll
xchg
cld
pop
clc
add
mov
push
xor
cmp
popf
inc
aas
inc
shll
jae
sub
icebp
ja,pt
bound
xchg
add
adc
ret
sub
hlt
movsl
mov
push
out
orb
cltd
movsl
in
mov
xchg
ret
enter
scas
testb
hlt
dec
and
mov
fdiv
sbb
mov
pusha
pop
jno
mov
call
xchg
mov
lahf
test
mov
jle
dec
in
test
rorl
cmp
inc
sub
push
adc
push
push
lods
iret
jmp
loop
repz
xchg
daa
jle
out
lahf
jmp
add
sarb
push
jb
test
push
daa
xor
aas
bound
pop
dec
imul
adcb
js
pop
aaa
clc
sub
imul
das
in
xor
push
mov
js
pop
mov
lea
adc
xchg
mov
call
add
xchg
sarb
jbe
and
mov
adc
movsb
mov
xor
push
mov
mov
jo
mov
xor
test
in
fsubl
rcll
xchg
push
dec
push
or
movsb
mov
les
cmp
xchg
xchg
xchg
rclb
mov
int3
mov
ret
stos
xchg
cli
pushf
jle
orb
loope
lret
fcmovb
cmp
dec
dec
gs
mov
enter
inc
mov
jae
call
aam
cmp
push
sub
out
into
repz
inc
in
push
mov
in
jp
das
mov
ds
jge
sti
mov
je
int3
ja
push
inc
add
ja
add
or
scas
jns
hlt
lret
enter
inc
ljmp
mov
push
test
lcall
mov
mov
shrb
mov
sub
mov
xchg
xchg
les
out
cltd
lea
cld
pop
loop
ret
or
test
xchg
iret
sbb
in
nop
mov
fsubs
into
mov
mov
mov
cwtl
mov
call
mov
fs
jo
mov
push
inc
mov
mov
rcr
add
xchg
or
fucomip
movsb
fmuls
add
jb
dec
lods
icebp
cwtl
xchg
in
nop
mov
mov
test
sub
faddl
pushl
mov
in
hlt
lods
mov
sbb
lock
and
mov
add
adc
popa
lcall
call
mov
clc
movsb
mov
ret
mov
cmpsb
or
cmp
xchg
mov
lds
xchg
mov
lods
nop
data16
pusha
mov
add
sbb
and
xchg
inc
aad
out
jo
loope
les
popf
in
mov
fdivl
lods
or
bswap
mov
movsb
leave
or
pop
leave
mov
sbb
xchg
ljmp
repz
out
popf
movsb
cmp
lea
test
or
lods
jns
insb
push
fdivs
sahf
mov
mov
sub
lret
repnz
fchs
leave
mov
ret
xchg
mov
adc
roll
rolb
test
sub
xchg
mov
nop
push
movsb
test
xchg
mov
scas
and
adc
test
call
rcrl
jae
test
mov
mov
ljmp
fcmovnu
adc
cli
cmp
iret
jns
mov
shlb
addr16
xchg
adcb
xor
in
loopne
add
lahf
int
mov
sahf
in
mov
in
orl
adc
or
push
xchg
add
mov
inc
mull
and
das
pop
jl
mov
mov
rclb
push
loop
mov
mov
pop
or
sbb
xchg
dec
fcoms
xchg
andl
test
enter
les
mov
cmp
xchg
mov
enter
mov
or
adc
cwtl
or
std
or
enter
mov
movsb
cltd
les
lcall
pushf
or
popf
movsb
insb
enter
mov
or
mov
adc
mov
dec
xchg
movsl
movsb
inc
enter
mov
or
test
adc
stos
les
lods
or
lods
movsb
and
scas
adc
scas
les
mov
adc
mov
adc
mov
or
mov
or
add
mov
cld
mov
hlt
and
in
out
jmp
in
out
lock
pop
inc
adc
testb
movsb
xchg
mov
lea
push
xchg
orb
rcr
cmp
sub
mov
out
imul
in
add
mov
stos
movsb
movsl
andb
pushf
fwait
subb
sahf
xchg
mov
mov
test
sub
ljmp
cli
loope
in
cltd
lcall
mov
cmp
std
daa
andb
cwtl
and
pushf
sub
mov
or
fwait
fwait
sbbl
in
repnz
xchg
in
mov
gs
mov
xor
lahf
fs
mov
aas
inc
mov
and
decb
xorb
mov
adc
popl
adc
ret
mov
mov
mov
xchg
add
orb
xchg
test
pushf
and
mov
cltd
test
fmuls
mov
cltd
mov
sub
jg
mov
adcb
movsb
sub
faddl
jge
push
adc
cmp
mov
mov
orb
movsb
add
shlb
fs
mov
jns
sbb
lods
fnstenv
mov
dec
popf
dec
mov
stos
mov
mov
test
roll
add
add
lods
mov
subb
mov
mov
aam
andb
rolb
xchg
cwtl
stos
lods
addb
push
nop
stos
orb
mov
cmpsl
fildl
inc
mov
mov
mov
mov
mov
mov
sarl
mov
mov
out
shlb
add
xchg
out
mov
mov
loop
mov
incb
insl
cwtl
lds
xorb
adc
cltd
scas
xchg
movb
inc
mov
popf
stos
sbbb
leave
int
adcb
or
lea
fstps
stos
mov
xchg
add
cwtl
in
test
popf
stos
mov
and
xor
movsb
shr
imul
pushf
mov
sub
mov
xchg
ret
aam
jb
movsb
pushf
stos
mov
mov
push
adc
in
mov
enter
inc
fisubl
andb
dec
int3
popf
cmp
lcall
fldl
mov
nop
out
loopne
shrb
subb
lods
cli
xchg
loop
mov
jecxz
mov
and
cwtl
mov
inc
mov
mov
inc
out
pop
adc
fldt
pop
rcrb
ljmp
shrl
mov
movsl
out
mov
out
add
rolb
mov
mov
daa
cmpsb
adc
add
mov
stc
xchg
ja
mov
orb
cmpsl
sub
cwtl
fsubp
cmpsb
test
sti
aas
push
roll
stos
iret
andb
mov
xorb
push
nop
out
test
add
fwait
xchg
add
dec
cwtl
ret
adc
mov
push
aam
jb
sbb
test
in
repnz
ret
test
jns
lcall
shlb
mov
orb
dec
and
or
in
in
pushf
add
bsf
mov
xchg
adc
test
lods
jb
popf
adc
fmull
mov
cmpsl
mov
dec
cmp
mov
repnz
nop
lcall
jb
movsb
mov
sbb
add
rolb
xchg
xchg
mov
sbb
or
mov
cwtl
test
sub
test
and
popf
jb
and
jno
xorb
es
mov
test
stos
sub
mov
cmpsl
mov
test
add
xchg
xorb
sub
mov
pusha
mov
out
xor
xor
adc
pushf
lcall
xor
movsb
mov
jns
mov
mov
movsl
mov
scas
mov
pop
adc
fdivs
stos
mov
xchg
fs
andb
mov
cmp
mov
cmp
xor
xchg
andb
pop
ret
mov
cmp
es
mov
cmpsl
fdivs
cwtl
mov
inc
mov
inc
inc
add
xor
js
mov
inc
mov
dec
xchg
dec
dec
mov
add
mov
subb
test
dec
sub
lret
push
add
push
add
push
cmp
push
xchg
pop
ss
xor
out
push
add
cmpb
ret
push
add
sub
out
cwtl
mov
mov
xor
adc
stc
popf
mov
lods
in
xchg
popa
mov
mov
jnp
lea
pushf
arpl
lahf
jl
clc
pop
mov
mov
andb
test
cmpb
mov
popa
fcomps
andb
lahf
shlb
daa
nop
adc
andb
add
int3
mov
add
mov
push
imul
popf
lret
mov
stos
insb
add
fistl
mov
test
test
mov
shlb
jb
sahf
mov
enter
adcb
dec
mov
stos
jne
mov
stos
subb
xchg
jbe
adcb
out
gs
cld
sbbb
cwtl
andb
nop
pushf
addb
dec
cltd
and
jecxz
cli
mov
and
cld
stos
add
faddp
test
popf
mov
adc
mov
mov
cmpb
mov
xchg
mov
mov
mov
cwtl
test
adc
xchg
bound
dec
cltd
movb
xorb
scas
addb
cli
add
es
out
mov
mov
in
mov
subb
popl
cmp
xor
mov
xchg
scas
andb
lods
call
ret
cmpsl
xchg
mov
iret
andb
fdivl
orb
xchg
icebp
stos
lret
mov
cltd
adc
lcall
jl
mov
add
adc
mov
sahf
adc
sbbb
or
xor
roll
mov
mov
sbb
mov
mov
movsb
test
movsl
mov
add
nop
mov
hlt
dec
test
pop
inc
xchg
mov
test
lcall
mov
mov
mov
add
mov
andb
mov
fwait
and
mov
andb
pushf
shll
mov
cltd
sahf
dec
mov
mov
jno
sbbb
lods
incb
test
xorb
mov
mov
mov
mov
mov
xchg
mov
dec
lea
arpl
adc
add
rcll
stos
ret
nop
lds
rorb
add
movsb
cs
lods
push
les
les
xorb
fwait
xchg
das
xchg
xor
add
addb
scas
test
xchg
andl
mov
lods
lods
mov
sbb
int3
fwait
hlt
leave
dec
clc
nop
lock
lret
mov
dec
xchg
fcompl
mov
cmp
enter
mov
mov
mov
sub
mov
lahf
cmpsl
mov
mov
fwait
mov
outsb
jo
test
mov
mov
les
cmpsl
in
mov
add
push
into
sbb
mov
jecxz
inc
mov
add
jbe
sub
jo
mov
popa
into
roll
sahf
cmp
inc
mov
stos
sbbb
xchg
test
mov
or
add
cld
mov
mov
pusha
mov
mov
lea
lcall
xchg
hlt
mov
mov
into
adcb
sbb
scas
lahf
xchg
mov
sbb
xchg
push
mov
pop
mov
test
mov
dec
xchg
lods
jo
mov
cmp
xchg
loop
in
test
xorb
stos
test
fs
mov
je
scas
xchg
out
lcall
dec
mov
call
test
add
sub
nop
and
movsb
rcr
mov
lods
sbbl
cltd
and
movb
push
push
je
inc
test
pop
mov
mov
hlt
icebp
mov
cltd
sti
or
mov
subl
mov
clc
jmp
adc
sbb
pop
cmpsl
test
rcll
cwtl
mov
hlt
inc
cmp
insb
lcall
adc
xchg
les
mov
loop
mov
movsb
mov
test
mov
loop
cld
push
xchg
scas
les
sbbb
clc
adc
mov
mov
cmp
scas
xchg
popf
adc
sub
pop
jp
sub
and
scas
mov
mov
xor
fcmovbe
lcall
scas
mov
push
xlat
add
xor
jns
xchg
mov
movsb
test
adc
lea
and
inc
mov
stos
xchg
lcall
mov
fiaddl
lods
test
pushf
mov
enter
popf
cmp
rolb
jo
mov
aam
add
fwait
mov
xchg
cmpsb
jno
mov
pop
stos
fldt
fsubr
roll
frstor
push
dec
add
xchg
test
nop
mov
int
and
adc
adc
cli
mov
mov
sbb
pop
enter
cmpsl
cmp
mov
xchg
movsl
inc
fidivl
add
add
dec
loope
xchg
jp
add
adc
xchg
fisubrl
orl
stos
mov
jecxz
ret
and
es
and
ljmp
mov
mov
xchg
pop
adc
mov
mov
out
out
mov
mov
push
sub
movsb
shl
adc
mov
call
rcll
in
dec
nop
cwtl
push
movsb
jmp
xor
lcall
mov
test
sahf
loop
ret
sbbb
mov
ror
mov
orl
pop
or
inc
xchg
mov
lock
jp
cwtl
pusha
jmp
and
and
sbb
loopne
xchg
push
loop
test
rolb
cltd
xchg
mov
fidivs
ror
mov
mov
int
mov
add
mov
add
stos
jno
in
xchg
pop
push
mov
add
jo
stos
cmpsb
xchg
lcall
lods
inc
xor
rorl
test
test
orl
cli
test
pop
pop
pop
jmp
subb
xchg
call
flds
sub
mov
jb
push
push
pop
pop
lahf
xchg
adc
push
int3
test
enter
push
inc
bound
xor
cmpsb
repz
mov
xchg
lock
cwtl
xchg
mov
lods
cmpsl
mov
add
and
or
cmp
rolb
sbb
in
aad
fiaddl
cmp
mov
fs
jecxz
test
xchg
or
clc
imul
and
xchg
stos
notl
test
xchg
fs
test
or
dec
mov
add
adc
inc
xchg
xchg
pop
in
lea
mov
lds
jo
cld
and
sub
into
and
jle
sbb
sbb
or
std
testl
enter
out
mov
in
pop
fcoml
nop
adc
cmp
add
mov
daa
mov
mov
fildl
and
fwait
test
mov
dec
add
push
rolb
or
into
inc
nop
push
movsl
add
mov
push
rcrl
push
notb
ljmp
ret
and
mov
sub
adc
stos
add
mov
dec
push
add
pop
test
cltd
cmp
int3
stos
cmpsb
test
movsb
push
test
push
sbb
pushf
or
xchg
fwait
leave
mov
jne
xor
cltd
dec
lcall
test
xor
add
add
xchg
add
fcompl
sbb
or
jb
rclb
mov
push
add
mov
add
loopne
xchg
orl
cmp
js
shr
and
sarb
sbb
cs
and
mov
mov
fs
pop
xchg
adc
pop
inc
cmpsb
xchg
sbbb
add
rcr
adc
mov
jbe
mov
sbb
call
or
xor
les
je
mov
or
subb
pop
adc
pop
xchg
lock
mov
test
nop
inc
lret
add
or
imul
mov
sub
xchg
pushf
pushf
adc
lods
xchg
mov
insl
les
xor
mov
dec
subb
push
xchg
dec
or
adc
enter
pop
mov
test
popa
cmp
ljmp
pop
sbb
adc
movsl
mov
push
lea
repnz
loope
scas
cmc
pushf
in
xchg
push
mov
mov
sbb
pop
fmuls
mov
sbb
mov
and
jge
inc
xchg
loope
mov
ficomps
add
es
add
xchg
fdivs
and
outsb
stos
push
hlt
mov
call
int
repnz
rcl
cmc
rol
pop
add
adc
dec
mulb
lcall
sbb
ror
aad
fwait
push
lock
test
lcall
rclb
mov
xchg
dec
fsubrs
push
jle
jle
movsb
and
lock
test
movsb
popa
jp
imul
int
mov
sbb
fsubr
test
cmpsl
push
mov
or
push
inc
into
sub
add
push
mov
pushf
scas
rclb
int3
lods
add
out
xchg
lods
or
sbb
mov
call
mov
lahf
enter
popa
cmp
cmpsb
sub
fcomps
adc
int
stos
mov
sub
adc
clc
test
cmpsb
xor
mov
mov
fcomps
iret
rolb
rcll
push
leave
divb
adc
mov
lods
shlb
mov
cmp
sbb
and
sbb
sbb
xor
jmp
sbb
into
mov
xchg
push
and
mov
mov
mov
sbb
xchg
lods
loop
dec
inc
pop
cmpsl
xchg
in
loopne
mov
fidivs
and
mov
clc
xor
mov
or
call
mov
enter
cmpsl
xchg
scas
loopne
mov
cli
xchg
movsb
imul
add
lret
pushf
int
out
mov
lret
sbb
mov
inc
mov
mov
mov
inc
fs
add
pop
ljmp
add
sbb
mov
sub
jmp
fs
mov
adc
push
push
cs
push
cwtl
jge
add
inc
push
in
xchg
cmp
pop
lods
js
mov
popf
push
push
faddl
es
test
adc
and
and
inc
rorb
xchg
and
xchg
cltd
shlb
and
test
lcall
inc
mov
cmpsl
push
xchg
nop
cltd
and
std
mov
sub
popf
mov
inc
mov
lea
lret
rcrb
lods
adc
xor
mov
dec
or
or
fimull
mov
repnz
or
mov
out
mov
push
xchg
mov
pop
mov
inc
and
or
adc
or
lods
cs
addb
xchg
call
out
mov
movsb
sub
push
mov
hlt
movsb
jecxz
rorb
inc
mov
loopne
mov
fnstenv
inc
lcall
cltd
sub
nop
lahf
js
add
xchg
and
mov
movsb
mov
xchg
xchg
fidivl
push
ret
fmul
sub
jns
push
popf
in
js
add
popf
lret
sub
adc
and
mov
cmpsb
mov
mov
push
xchg
or
nop
out
jmp
add
sarl
xchg
push
push
negb
shll
les
xchg
mov
inc
cmpsb
sub
xor
and
mov
xor
lea
lret
test
or
mov
sbb
pop
push
xchg
arpl
lods
roll
movsb
shlb
je
out
repnz
mov
lock
jnp
insl
sub
xchg
es
pop
iret
shlb
cld
lret
cs
xchg
pop
xchg
mov
sub
or
enter
int3
insl
les
sub
push
js
sbbl
push
leave
ljmp
mov
xor
and
stos
mov
adc
push
mov
jo
fadds
xchg
shrl
mov
xor
sbb
mov
push
inc
shrb
mov
in
push
xchg
insb
movsl
mov
xchg
mov
shrl
mov
mov
loopne
cmp
fsubrs
cmpsb
fwait
push
xchg
sub
das
or
sbbl
mov
cmpsl
or
movsl
xchg
js
add
fsubrs
xchg
pop
dec
or
push
jbe
shrb
sbb
mov
add
xor
fcoml
sub
pop
adc
jb
into
sbb
sbb
sahf
push
xor
insb
enter
int3
cli
divb
cmp
push
xor
ficompl
inc
cmp
shrb
mov
and
shll
jb
add
daa
pushf
push
lret
rorb
mov
or
xchg
lds
sbb
mov
cmp
adc
xchg
mov
je
inc
cmp
loopne
cmpsb
and
fsubs
cli
mov
add
xchg
push
mov
push
lcall
xchg
fistpl
mov
mov
pusha
js
out
jo
loopne
sbb
lods
data16
cmp
push
mov
cwtl
adc
push
in
xchg
adc
fsubl
xor
or
add
sbb
nop
insb
and
ja
mov
scas
nop
dec
mov
xchg
sbbl
into
test
out
or
add
dec
adc
cwtl
js
mov
sbb
and
jmp
lret
cs
lock
popf
pop
mov
ret
push
lock
insb
mov
js
xchg
sbb
lods
test
stos
popf
lea
lcall
add
test
enter
cwtl
int3
les
mov
shrl
dec
inc
mov
test
or
dec
int3
xchg
xchg
jbe
mov
nop
cmpl
add
adcl
in
add
pop
je
pop
sub
sub
mov
or
sbbl
xchg
enter
sbb
es
inc
imul
faddl
adc
rolb
int
cmp
ds
mov
xchg
xlat
or
insb
cmp
inc
out
xchg
mov
adc
das
dec
lea
jno
call
xchg
lea
adc
sbb
es
xor
mov
rclb
cs
add
je
shlb
adc
adc
xchg
mov
call
int3
pop
movsl
cwtl
mov
mov
mov
or
mov
push
in
ss
movsl
arpl
adc
clc
out
add
dec
ret
and
adc
adc
xor
cwtl
dec
jl
jo
dec
cwtl
xchg
sub
loope
mov
mov
mov
xchg
loop
lret
sbb
push
les
and
call
xchg
push
js
sbb
cltd
xchg
scas
mov
in
push
cmpsl
mov
adc
jo
dec
fisubl
rcrb
fldenv
mov
jne
pop
sub
or
out
sub
rolb
cmp
dec
dec
cmpsb
xor
xchg
cs
mov
les
push
lods
add
in
shl
test
popf
dec
js
lret
dec
xchg
je
les
sbb
mov
fs
int3
or
popf
aas
test
cmp
sbb
xchg
test
mov
sub
mov
lea
cld
dec
xchg
stos
lds
test
xchg
dec
imul
loopne
dec
add
push
jmp
test
enter
mov
lcall
or
test
jg
dec
push
adc
xchg
sub
sarb
push
es
test
sbb
cmpsl
pop
jl
cmpsl
cmp
jmp
movsb
lods
pushf
ds
mov
cwtl
xchg
push
add
xchg
pushf
addr16
jo
enter
ret
sub
es
mov
or
jmp
mov
mov
into
push
in
jne
enter
xchg
in
mov
jae
cmpsb
in
leave
andl
cmp
mov
inc
mov
push
scas
lcall
repnz
pop
xchg
xor
test
push
into
int3
hlt
mov
cltd
adc
xchg
push
jb
sub
sbb
ficoml
xchg
push
push
pop
adc
cmp
sub
int3
mov
and
xorl
es
cwtl
movsb
movsb
movsl
jl
jecxz
test
movsb
lods
sahf
mov
and
lods
adc
and
js
shr
in
ret
push
mov
mov
sbb
fstl
clc
mov
cltd
iret
push
mov
and
push
scas
lahf
lea
lcall
mov
pushf
loopne
cmpsl
xchg
adc
jmp
adc
es
sub
enter
test
stos
sbb
adc
clc
dec
or
adc
scas
int
lods
stos
add
xchg
lock
cmp
inc
xor
pushf
scas
add
rcr
push
inc
inc
movsb
and
mov
cltd
xor
nop
adc
push
lock
sbb
jns
icebp
cmp
adc
jp
clc
lock
add
cwtl
xchg
cmp
cmp
test
jle
popf
pop
fs
mov
movsl
mov
ljmp
push
mov
xchg
mov
add
into
pushf
lret
sbb
outsb
outsb
mov
into
inc
push
mov
sub
movsb
xchg
push
lcall
and
xchg
notb
mov
dec
loop
cmc
xchg
test
stos
rorb
or
adc
fsubs
mov
addl
insb
dec
movsl
and
sbb
sbb
shl
scas
ljmp
push
cld
mov
test
in
add
mov
inc
mov
mov
and
cmp
int3
add
fdiv
or
jb
push
loopne
lret
into
xor
mov
add
cmp
ss
cmp
pop
sbb
cmp
js
mov
in
lods
test
ss
movsb
sub
inc
movsl
loope
stos
ret
xlat
xchg
mov
push
xchg
and
or
hlt
sbb
sbb
mov
ret
insb
xor
dec
pop
test
sbb
movsl
inc
add
cmp
cld
cmpsl
mov
repnz
push
leave
andl
das
push
push
int
cmpsb
rol
subb
mov
andl
mov
adc
call
fimuls
lods
sbb
test
push
cld
mov
pop
aam
mov
nop
jo
pop
cmp
insb
and
mov
lea
mov
ss
js
cmp
mov
loope
test
movsb
adcb
data16
pop
and
or
mov
mov
xchg
inc
pushf
inc
cmpsb
lods
push
mov
dec
mov
and
scas
and
int3
andl
adc
cmpsb
sbb
int3
mov
mov
dec
pushf
clc
clc
fiaddl
popf
sar
jne
jb
fisttpll
and
sahf
lea
test
enter
lea
cmp
shll
cmpsl
pushf
mov
mov
in
sbb
and
and
and
add
lret
lahf
xchg
cwtl
xchg
sub
loope
mov
xchg
subl
mov
scas
dec
xchg
cltd
ljmp
roll
movl
les
je
ss
lea
aam
xchg
sub
sub
push
xchg
stos
xchg
mov
mov
sbb
mov
xchg
pushf
mov
leave
jmp
dec
cmp
xchg
cmp
cmp
nop
xchg
out
repnz
pushf
xchg
mov
movsl
jecxz
out
cmp
test
xchg
cmpsl
popf
inc
mov
mov
rcr
leave
push
mov
or
fisubl
cmp
mov
mov
push
push
mov
inc
iret
or
je
outsb
fwait
scas
lea
mov
mov
mov
push
mov
mov
and
lock
push
movsl
inc
add
nop
mov
mov
daa
lods
movsb
cmpsb
push
sarb
lea
mov
sbb
mov
mov
xchg
mov
mov
mov
mov
aaa
cltd
lds
roll
xchg
faddl
xorl
xchg
xchg
jbe
fwait
xchg
pop
or
lods
and
mov
lea
or
mov
and
or
cmp
jns
mov
les
out
cltd
in
cmp
xchg
iret
mov
add
mov
in
mov
add
xor
lea
mov
mov
ljmp
ficoms
mov
les
xor
or
call
mov
xchg
jecxz
lcall
xchg
pushf
cwtl
sub
jge
mov
cmpsl
push
ljmp
lods
rol
mov
mov
sbb
mov
sub
nop
lea
lods
cmp
and
mov
xor
cltd
mov
sub
cwtl
dec
inc
jb
or
xchg
int3
dec
lea
or
mov
in
in
or
xchg
fdivrl
mov
mov
or
or
mov
sar
lea
sub
repnz
lea
mov
cmpsl
mov
xchg
das
cwtl
sub
sarb
xchg
mov
mov
xchg
orl
fiaddl
xchg
fiadds
mov
addb
mov
cltd
xchg
cmpsl
add
bound
push
xor
or
mov
popf
push
stos
mov
mov
insl
mov
cmp
aad
push
mov
push
scas
lea
cmp
mov
mov
and
dec
cmp
push
test
push
pusha
popl
les
lods
or
xchg
mov
mov
inc
and
mov
adc
aad
repnz
movsb
movsl
or
pushf
pushf
mov
or
sbb
test
enter
addb
mov
mov
loope
mov
call
test
xchg
fisubs
xor
adc
into
inc
sbb
stos
cmpsl
jo
mov
mov
mov
leave
fsubrl
xchg
mov
or
push
mov
addb
lods
andb
mov
dec
xor
jb
add
gs
cmpsl
add
pop
adc
xor
inc
stos
mov
cmp
jmp
sbb
rcll
fwait
adc
or
push
movsb
or
int3
lods
xchg
mov
mov
mov
shlb
mov
std
sub
nop
xchg
dec
into
nop
add
fmuls
mov
mov
stos
cmp
test
mov
or
movsl
sbb
les
xchg
repnz
aad
sub
lods
mov
xchg
lret
and
pop
out
flds
in
dec
out
movsb
movsl
ja
ljmp
repnz
cmpsl
movsb
sub
sahf
fdivrs
add
call
mov
dec
jp
testl
test
mov
clc
leave
ret
pusha
in
leave
scas
or
and
mov
sahf
adc
cmpsb
ljmp
movsb
xchg
insb
in
xor
xchg
mov
scas
popf
mov
call
pop
add
xchg
scas
add
mov
mov
push
push
ds
les
sarl
test
movsb
mov
xchg
pushf
test
nop
fsubrs
lahf
and
push
xchg
xor
mov
lret
push
sub
iret
test
xchg
stos
shlb
sbb
add
xchg
push
test
pop
aam
xchg
mov
jbe
xor
adc
or
mov
cltd
add
clc
push
add
add
mov
mov
lods
pusha
ret
fs
push
call
sbb
adc
mov
xchg
sbb
adc
mov
cs
mov
mov
xchg
xchg
dec
test
mov
mov
enter
out
iret
mov
xchg
jmp
stos
adc
add
insl
mov
stos
or
or
sub
mov
add
xchg
dec
in
dec
clc
andb
mov
scas
and
ret
test
lret
test
mov
pop
sahf
pop
inc
push
mov
jb
cmpsl
cmpsb
jmp
insb
push
nop
mov
nop
sub
inc
jl
mov
mov
mov
movsb
jmp
loope
enter
and
in
test
mov
out
pop
shll
out
xor
sub
mull
das
lds
cwtl
add
sub
adc
and
mov
sar
mov
cli
or
xchg
clc
movsb
icebp
enter
mov
adc
in
or
xchg
lock
loop
repz
dec
mov
in
mov
dec
xchg
mov
add
mov
dec
push
push
bound
inc
inc
dec
jge
inc
mov
mov
mov
fistps
stos
xor
dec
xor
sbb
pusha
cmp
sub
xor
nop
cmp
xlat
clc
loopne
mov
das
movsb
mov
xor
addr16
mov
dec
cmp
sub
and
inc
adc
movsl
push
xor
adc
aam
gs
xlat
stc
push
sti
les
je
xchg
rcl
mov
xchg
lea
xchg
mov
mov
in
mov
fisttpl
fcoms
pop
hlt
clc
test
pop
sbb
and
mov
and
ret
pushf
mov
test
mov
mov
and
pusha
adc
push
les
or
xchg
xor
adc
or
hlt
adc
mov
or
xchg
fsubl
mov
or
enter
std
or
pop
xchg
push
inc
or
xchg
sub
and
adc
or
or
xchg
int3
movsb
mov
mov
les
dec
xchg
cmp
sub
sbb
or
or
add
adc
mov
xchg
les
mov
or
xchg
int3
movsb
int
into
adc
mov
or
xchg
aam
aad
adc
mov
xor
push
icebp
repnz
dec
push
fimuls
mov
mov
jmp
repnz
xchg
cmc
movsb
test
adc
mov
loopne
hlt
or
jns
dec
lds
adc
or
lds
fbld
lds
adc
or
mov
in
leave
out
call
stos
shr
jmp
mov
inc
xor
arpl
mov
lahf
mov
mov
adc
dec
mov
cmp
aaa
ja
xor
add
sub
daa
lock
and
rcrl
pop
test
ja
adc
add
xchg
shrd
mov
mov
mov
mov
mov
mov
mov
cs
fbld
push
add
add
add
add
add
add
jns
dec
or
mov
fptan
fdivrs
aad
aam
rorl
fs
sarb
int
int3
adc
dec
lret
repnz
push
mov
mov
and
dec
pop
les
push
push
pop
push
test
lret
rolb
ret
leave
sarl
fwait
lea
aad
test
cld
sarl
pop
fsts
xchg
stc
cltd
xchg
xor
lods
fldl
mov
cmpsb
fldl
push
lcall
push
pop
push
pushf
inc
movsl
repz
repnz
lock
test
add
idivl
xor
ret
nop
out
lods
sbbb
lret
cld
cwtl
lock
mov
mov
mov
or
mov
jmp
icebp
cmp
fwait
xor
push
xor
aaa
lods
dec
jg
js
sub
jle
push
les
jnp
cmp
jp
sub
jns
sbb
js
or
lock
jbe
fcoml
jne
les
jae
pushf
movsb
jb
mov
jno
jl
mov
or
outsb
movsb
loopne
insl
adc
mov
or
mov
sti
les
or
call
adc
mov
arpl
mov
popa
sahf
sub
or
pop
movsb
or
pop
adc
mov
or
pop
pcmpeqb
sahf
xchg
pop
mov
or
and
mov
or
shlb
mov
or
jl
orb
enter
mov
or
xchg
dec
movsb
lock
mov
or
enter
mov
les
shlb
or
movsb
pop
enter
mov
or
xchg
cmp
or
cmp
cld
mov
or
xchg
cmp
and
les
xor
mov
or
xchg
mov
xor
inc
imul
jge
and
xor
push
cmp
bound
xor
adc
movsb
cwtl
loope
cmp
xchg
inc
dec
mov
pop
shlb
inc
inc
inc
push
push
xor
stc
xor
imul
add
cmp
js
insb
aas
cld
sub
mov
lods
dec
jne
pop
mov
insl
mov
push
jl
aam
jmp
adc
cmpsl
loope
cmp
dec
jp
enter
mov
pusha
and
mov
ss
push
xor
xor
sbb
push
jnp
imul
aas
push
addb
inc
xor
ljmp
push
ss
dec
pusha
xor
cld
rol
fsubl
jl
cmp
push
jle
mov
jmp
push
call
jnp
mov
add
test
xchg
dec
shlb
mov
cmpsl
mov
mov
push
push
aad
fldt
nop
mov
in
movsl
xor
enter
push
jp
dec
ret
and
pop
adc
fwait
dec
outsb
mov
push
mov
push
test
cmp
xchg
test
mov
mov
cmp
add
arpl
pop
clc
add
sub
add
pop
shlb
and
inc
lods
rorb
inc
or
and
cmp
xchg
jb
cmp
ret
mov
xchg
mov
xor
enter
mov
jmp
mov
push
cmp
clc
sarb
je
outsb
mov
std
add
fs
lods
shrb
and
aam
mov
cmp
repnz
aam
dec
sub
pusha
test
dec
loope
xor
mov
cwtl
ror
jae
mov
add
aam
dec
int3
jo
shrl
pop
mov
dec
insl
test
or
imul
add
and
push
mov
popf
inc
mov
adc
das
mov
loopne
enter
sbb
cmpsb
or
sbb
add
test
cmp
test
cwtl
mov
loopne
jo
jnp
and
xchg
mov
rorb
lcall
sub
pushf
nop
and
jnp
mov
sbb
pushf
lods
xlat
push
adc
mov
pop
or
push
xchg
hlt
inc
sahf
dec
jge
insl
inc
aas
mov
les
mov
jb
add
popf
push
pop
cmp
dec
cmp
xor
rorb
nop
add
fs
mov
ss
lods
lods
outsb
pop
mov
mov
dec
sbb
int3
push
mov
inc
cwtl
outsl
movsb
bound
push
inc
stos
dec
xchg
sub
insb
adc
nop
xor
jp
lods
loop
xor
cmp
mov
rcll
cmp
enter
adc
push
ficoms
cs
cmp
ja
pushf
lods
mov
ret
inc
sbb
adc
add
xor
inc
aaa
jp,pt
shr
jl
pushf
lret
xchg
xchg
movsl
push
sub
or
cld
sub
cmc
repnz
jecxz
xor
test
dec
sub
lret
push
adc
pop
mov
popa
test
arpl
je
inc
cmc
and
gs
js
or
movsl
clc
dec
mov
xchg
pop
xchg
js
fisubrs
jle
movsb
cmp
jnp
mov
mov
mov
jg
rcr
orb
pop
push
jae
xchg
fldl
aad
xchg
std
outsl
lea
mov
jl
adc
mov
aas
inc
add
data16
lea
push
inc
cmpl
adc
int
les
mov
cmp
ret
xor
cwtl
add
xchg
fisubrl
lock
fcompl
mov
js
pop
fistps
push
loop
mov
pop
cltd
mov
movsb
pusha
enter
mov
or
adc
xor
dec
nop
push
mov
insl
mov
mov
mov
cmp
outsb
add
and
adc
in
js
ficoml
push
jge
test
scas
lds
les
xchg
repz
in
xchg
movsb
xchg
inc
xchg
out
das
mov
cmp
inc
mov
dec
leave
mov
dec
lret
xor
cmpsl
insl
mov
pop
pop
in
sbb
mov
in
or
lahf
inc
clc
mov
call
call
fadd
lock
shl
add
mov
xchg
rclb
test
mov
dec
mov
mov
or
mov
out
jnp
nop
push
testb
call
xor
sub
dec
mov
out
xchg
adc
call
nop
push
mov
dec
nop
shl
and
mov
sarb
xchg
push
nop
adc
xorb
push
nop
pop
cmp
decb
xor
inc
rolb
ss
int3
inc
dec
lret
nop
ret
inc
dec
rcrl
mov
inc
pop
enter
leave
sarb
push
shlb
xor
shlb
clc
mov
cmpsb
enter
outsb
aaa
and
push
mov
add
lock
push
loope
xor
enter
mov
add
pusha
nop
rolb
mov
rol
out
out
sbb
into
in
jp
out
jecxz
in
sbb
sub
xchg
dec
enter
push
sub
mov
xchg
imul
or
sbb
test
adcb
imul
inc
xor
sub
jae
add
xor
jg
sub
lahf
mov
or
adc
cmpsb
xchg
or
mov
into
enter
rcr
lret
outsl
or
rcll
pop
fcmovb
mov
push
mov
adc
mov
cmp
mov
cwtl
mov
adc
pop
push
leave
pop
ror
mov
jmp
adc
es
or
test
in
rorb
cwtl
push
ds
aam
dec
mov
mov
js
push
sub
push
mov
enter
ficomps
rclb
xchg
out
insl
mov
xchg
rorb
aad
popf
mov
repz
pushf
ficompl
adc
repnz
jmp
rcrb
rcr
fdivs
je
insl
jg
lds
rcrb
leave
push
jno
mov
jl
pop
ficomps
enter
ret
sbb
lds
ror
sbb
mov
and
out
adc
mov
add
je
sbb
cmp
or
aad
vaddsubps
fidivl
ret
lds
into
inc
sbb
mov
into
test
or
and
addr16
mov
ret
mov
fcmovb
mov
loope
leave
into
into
clc
fadd
sub
imul
rcrb
imul
mov
sbb
movsb
xor
js
das
pop
xor
lock
sub
mov
dec
jne
cmp
test
fs
movsb
mulb
mov
rclb
in
ljmp
cmp
push
int3
rcrb
js
iret
repnz
mov
mov
push
xchg
push
out
and
sub
mov
movsl
push
cmc
sbb
adc
mov
pop
mov
and
mov
adcb
jbe
mov
aam
call
shll
mov
xchg
add
cmp
je
sbbl
ss
sbb
popa
insb
es
nop
mov
sub
shlb
dec
adc
adc
xchg
sbbl
inc
fwait
dec
xchg
ds
or
mov
test
or
lds
test
pusha
adc
les
inc
xchg
inc
movsb
cmp
cmp
xor
xor
sub
or
sbb
adc
or
mov
clc
adc
mov
or
xchg
mov
adc
sbb
sarb
adc
lea
movsb
mov
mov
sbb
and
nop
xchg
adc
cwtl
mov
rorl
shlb
ror
mov
es
frndint
test
movsl
mov
dec
mov
xchg
push
lods
mov
sbb
enter
or
int3
nop
and
adc
and
mov
dec
dec
mov
xchg
test
xchg
add
movsb
mov
pop
mov
pop
pusha
jl
shlb
inc
and
pop
int3
mov
jle
mov
in
repnz
lcall
lcall
roll
mov
mov
nop
pop
pusha
jns
mov
mov
lods
mov
jl
nop
movsb
and
mov
xchg
fs
adc
xchg
adc
mov
call
xchg
xchg
xchg
movsb
xchg
les
mov
les
lcall
enter
cld
xchg
clc
mov
or
xchg
inc
movsb
jl
xor
mov
test
js
jg
decl
push
cmp
out
movsb
inc
xchg
ja
ret
mov
test
shlb
xlat
mov
xchg
loop
adc
mov
or
lock
sub
push
jo
mov
mov
push
add
push
leave
orb
xchg
or
xchg
lahf
or
xchg
movsb
xor
mov
les
movsb
adc
loop
or
or
sahf
scas
jno
xchg
cld
mov
movsb
lock
mov
or
xchg
cltd
movsb
ror
xchg
adc
mov
or
enter
mov
or
je
out
js
push
or
test
sbb
shll
repz
int
lods
mov
dec
ss
shr
or
add
ret
mov
mov
data16
fs
cmp
mov
jne
or
jno
push
mov
or
enter
mov
or
pop
movsb
les
scas
mov
or
xchg
push
movsb
es
mov
mov
lret
mov
or
xchg
dec
movsb
dec
enter
je
lcall
in
xchg
repnz
adc
adc
mov
or
mov
lret
sub
imul
js
nop
lds
push
jnp
nop
popa
sub
sbbb
sub
test
push
nop
insb
add
push
andb
add
mov
sub
aam
ds
sbb
or
mov
jno
adc
pushf
pusha
addl
test
sbb
stc
ret
mov
mov
test
xchg
mov
xchg
jo
loopne
rcl
xlat
aam
cmp
xlat
shrb
imul
jl
add
inc
rorl
test
mov
sysret
adc
jb
sahf
ret
adc
cli
fbstp
inc
clc
mov
mov
mov
cli
mov
mov
out
test
push
sbb
nop
sbb
scas
mov
xchg
in
scas
mov
movsb
mov
sarb
or
and
movsb
inc
adc
loop
scas
lds
imul
test
addl
and
test
mov
fisttpl
mov
fsubs
push
sbb
ds
loopne
aas
dec
nop
fwait
push
mov
and
dec
insb
inc
push
cld
into
andb
sub
adcb
movsl
gs
inc
icebp
push
push
adc
or
jns
andl
insl
add
jae
mov
jg
lahf
clc
cli
js
cmpsb
inc
pusha
movl
cmp
jmp
cmpsl
mov
pusha
cld
ret
push
pop
jns
sbb
rol
and
jb
scas
add
add
sub
cs
arpl
jp
imul
jae
push
or
adc
inc
adcb
es
lea
xchg
mov
add
sbb
dec
enter
ret
adc
xor
pop
shll
inc
dec
push
fidivrl
es
mov
or
loope
jge
fimull
movsl
sbb
jns
out
adc
aas
and
pop
add
int3
orb
mov
xchg
inc
movsl
cmc
lock
dec
test
test
popl
mov
pop
out
xchg
add
inc
push
lods
and
fcoms
push
xchg
mov
js
andb
jmp
mov
push
imul
gs
adc
push
addr16
inc
jge
dec
loope
xchg
testl
popa
int
inc
ds
dec
arpl
inc
sarl
xchg
bndldx
add
cmp
xchg
sub
add
mov
cli
sbb
xor
cld
xchg
cmp
add
scas
or
add
enter
mov
sub
and
cld
push
pop
adc
jecxz
xchg
xor
jg
add
cmp
movsl
ret
mov
sub
andb
pop
cmp
adcb
or
mov
push
addl
xchg
sbb
mov
scas
mov
push
mov
adc
ds
xlat
pop
mov
xor
xchg
andb
pop
fnstenv
nop
lods
andb
iret
rcrl
psubusw
std
jnp
inc
sahf
push
orb
xlat
adc
cwtl
into
lret
in
jge
comiss
pop
sbbb
push
dec
test
pop
pop
fs
pushf
in
lea
lock
sarb
repz
push
test
addr16
test
dec
mov
lret
xchg
push
test
repz
int
mov
out
iret
xchg
cli
test
xor
shl
xchg
push
test
adc
xor
xchg
dec
fadds
xchg
push
test
mov
and
adc
mov
mov
xor
cmpsb
cmp
nop
mov
mov
movsb
mov
mov
mov
fadds
mov
mov
mov
mov
jp
mov
nop
mov
js
mov
dec
mov
mov
fsubl
xlat
scas
xchg
add
xchg
repnz
shr
push
test
fdivrl
stc
int3
add
aad
mov
inc
pushf
or
add
adc
fcmovnb
and
sbb
cmp
mov
enter
shl
cmp
xor
cli
test
mov
in
add
inc
lret
movsb
jmp
lret
repnz
pushf
movsl
in
xchg
int3
cmp
xchg
cmpsb
mov
inc
add
nop
orl
xchg
mov
out
lcall
push
mov
ret
movsb
sbb
add
push
and
scas
loop
ret
pop
mov
add
jne
movsb
mov
xor
lock
ret
mov
xchg
mov
in
xorb
sbb
cli
lcall
ret
and
movsb
pmullw
sub
cltd
ljmp
pop
adc
jp
adc
in
rcl
lea
add
inc
rclb
lret
out
icebp
mov
mov
xchg
enter
adc
mov
shll
lret
shlb
mov
nop
mov
mov
cmc
xchg
shlb
mov
mov
xchg
ror
mov
push
xchg
pop
add
pusha
add
insb
or
mov
or
sub
jle
pop
stos
sbbl
addl
loopne
xchg
mov
les
rolb
test
sbb
mov
loopne
xchg
mov
or
fmuls
mov
bound
push
mov
mov
lahf
fsubr
mov
fcoms
lock
mov
or
repnz
mov
or
cmc
lods
sti
popa
notb
xchg
cwtl
mov
or
xchg
stc
movsb
loopne
inc
out
clc
or
xchg
les
xchg
or
adc
pop
xor
jo
add
test
mov
jno
mov
out
mov
mov
mov
pusha
mov
mov
inc
out
xchg
stos
inc
out
xchg
ret
in
xchg
mov
mov
rolb
clc
add
or
and
lret
xorl
mov
and
xchg
xchg
cmp
mov
xchg
fwait
adc
popf
or
xchg
or
dec
mov
xchg
adc
cmp
push
enter
int3
push
inc
mov
dec
mov
jo
rolb
jmp
xchg
mov
mov
dec
loopne
ret
lock
lahf
adc
jl
pop
xor
ret
jo
test
mov
ret
shlb
adc
jl
pop
add
andl
jns
into
loopne
push
cwtl
test
jb
lahf
cmp
dec
mov
rcrb
fs
ret
xor
lahf
adc
pusha
pop
fs
lock
mov
lahf
adc
sarb
push
subl
inc
and
fs
sbb
cwtl
mov
mov
dec
test
insb
dec
clc
mov
mov
inc
rclb
sbbb
inc
dec
push
mov
nop
fsubs
jo
pop
js
pop
js
pusha
js
test
xchg
mov
test
das
push
mov
inc
jo
push
push
insl
mov
xor
stos
nop
jo
ret
sub
pushf
mov
pop
cltd
in
mov
jo
test
jl
cli
lods
loopne
jle
jp
mov
lret
nop
mov
inc
sbb
mov
mov
dec
xchg
pushf
mov
bound
mov
mov
or
dec
mov
test
popl
mov
xchg
lock
sub
in
nop
xchg
test
add
jl
add
shr
fwait
nop
mov
in
adc
xor
xor
decb
leave
aas
test
ret
js
mov
call
fists
rcrl
movsb
int
xchg
test
mov
int3
int
sbb
iret
sbb
xchg
scas
call
out
aad
addl
clc
aaa
mov
adc
mov
scas
imul
test
leave
aam
scas
push
jg
aad
ret
mov
shld
aam
shrb
rcl
imul
data16
jmp
into
dec
test
sahf
dec
cmpsl
int3
xchg
test
mov
iret
sub
xchg
shrl
mov
mov
int3
sarl
aad
sbb
mov
mov
out
repz
in
xchg
push
xchg
mov
mov
in
scas
or
pop
scas
fs
pop
mov
pop
fsubl
sahf
repnz
and
lock
jno
hlt
repz
int3
rol
cmp
shlb
sbb
faddp
push
aas
xchg
lret
filds
mov
nop
cmc
mov
adc
mov
mov
dec
mov
inc
inc
add
mov
mov
mov
les
or
adc
lock
add
cmpb
js
jo
nop
pusha
mov
cwtl
inc
pop
jle
jnp
lds
mov
fwait
nop
shlb
cwtl
cltd
xchg
jl
mov
sbb
mov
jle
test
rcrb
push
xchg
mov
mov
sahf
jecxz
xchg
and
ret
mov
mov
or
add
shr
mov
mov
inc
int
mov
adc
lock
jmp
pusha
test
or
dec
loope
mov
fcoml
xchg
daa
mov
les
pusha
enter
mov
jl
inc
lahf
mov
mov
add
orl
sbbb
rorb
sbbl
mov
mov
lahf
mov
outsl
mov
sarb
inc
jl
out
pop
inc
mov
dec
adc
out
call
scas
sbb
xchg
rorb
enter
adc
mov
push
xchg
test
dec
pop
or
and
mov
mov
pop
xor
subl
xchg
xchg
jnp
or
enter
mov
mov
inc
stos
add
js
xchg
xorb
mov
ds
lret
in
mov
or
cmpsb
lea
and
clc
adc
ret
mov
or
pop
cli
lods
bound
addr16
or
in
int3
shlb
test
add
aam
mov
fwait
ret
and
dec
cmp
mov
dec
pusha
cmc
gs
incb
push
or
out
sub
mov
mov
pop
jnp
sti
cmpl
getsec
cmpl
rcrb
ja
hlt
dec
sarb
clc
and
lock
mov
arpl
clc
rorb
scas
mov
nop
scas
jno
rcl
int3
test
mov
rclb
or
mov
cld
pop
xor
xor
fwait
xchg
mov
nop
sti
leave
fimuls
ja
rolb
mov
or
sahf
mov
fnstcw
mov
xorl
mov
jae
add
addr16
dec
xor
pop
push
push
adc
mov
movsb
inc
hlt
lahf
push
xchg
xor
xchg
push
jmp
mov
mov
push
rorb
add
xchg
sbb
add
outsl
sti
ficoms
rclb
xbegin
and
xchg
lahf
dec
rcll
les
test
cmp
ror
faddp
or
subl
clc
test
mov
xchg
mov
mov
mov
enter
stos
fcomp
outsb
lahf
jmp
mov
shl
cwtl
jbe
and
and
loope
lcall
adc
dec
mov
cld
mov
xchg
mov
enter
lock
mov
xor
enter
adc
je
xor
clc
xor
jle
fdivrs
pop
or
add
sbb
mov
enter
gs
and
jle
fmuls
repz
fadd
cld
test
hlt
adc
lds
lret
mov
xchg
or
lock
clc
fdivr
lret
pop
enter
mov
xchg
loopne
adc
xchg
lods
cmp
aas
movsb
inc
pop
add
jo
xor
add
xor
sbb
or
pop
pushf
or
or
pop
orb
jo
lods
mov
xchg
pop
pop
aaa
jo
enter
shlb
jmp
enter
and
enter
test
ret
jns
lret
pop
retw
enter
xchg
mov
adc
fisubrl
and
mov
xchg
sub
and
inc
repz
or
mov
push
xchg
xchg
lods
xchg
fsubr
sub
jmp
sub
sti
xchg
bnd
mov
js
mov
push
daa
xchg
push
lds
ja
sar
mov
movsb
mov
lds
enter
add
movsb
mov
adc
push
or
stc
leave
jnp
mov
popa
mov
jne
xchg
jp
dec
cmp
or
mov
call
inc
xchg
xchg
adc
cmpsb
icebp
iret
jb
xchg
pusha
hlt
add
xchg
movsb
jg
or
je
inc
xor
add
jmp
lcall
dec
mov
dec
lcall
in
sub
add
in
sub
stos
mov
movsb
xor
call
movsl
rclb
adc
call
repnz
les
adc
or
sub
xchg
pusha
mov
sub
fs
bound
pop
repz
fs
popa
dec
repnz
stos
stos
xchg
test
gs
das
push
cmpl
cmp
xorl
sbb
jmp
stc
test
int3
xchg
stc
test
iret
test
add
pop
and
dec
pop
xchg
andl
jno
out
pop
popa
mov
lods
xchg
jo
gs
lock
push
aaa
test
lods
jge
clc
jae
aad
daa
test
jns
clc
popa
mov
sub
and
cli
popf
dec
scas
int
adc
cmp
lock
mov
mov
aas
inc
cltd
out
xchg
cmpsl
test
pop
stos
jne
sub
wrmsr
mov
mov
rcll
jo
lods
mov
cli
jnp
ror
and
int
rorb
sarb
xchg
jo
sbb
dec
das
icebp
mov
loop
inc
ret
or
or
inc
jo
mov
jnp
js
adc
aas
xor
and
push
add
fadds
lods
test
js
fidivrs
sbb
test
cmp
sbb
jae
mov
xlat
mov
sbb
mov
nop
inc
jne
mov
outsb
mov
nop
mov
mov
popf
cmp
aas
andl
lahf
stos
incl
and
hlt
stos
xchg
and
pop
js
hlt
push
mov
jo
jmp
mov
xchg
add
mov
mov
addr16
xchg
xchg
call
and
test
adc
clc
out
mov
mov
xor
outsl
ja
outsl
cmpsl
nop
jp
mov
or
or
in
xchg
rolb
lahf
pop
cltd
mov
push
movsl
add
xlat
lods
xor
mov
out
xchg
es
mov
fisubl
loopne
xchg
popf
mov
ljmp
mov
add
in
aas
and
inc
xchg
jbe
popa
lea
nop
sbb
mov
out
push
sub
sbb
jo
xchg
rcrb
lock
stos
call
push
push
fidivrl
shll
mov
movsb
xchg
notl
adc
push
adc
and
sub
outsl
mov
jl
pop
in
aaa
int3
loopne
ja
xchg
mov
pop
jg
pushl
lods
jle
cwtl
mov
mov
cltd
add
push
pushf
lret
pop
xor
mov
setg
xor
cmpsl
mov
mov
cmpsl
ret
mov
jne
adc
ficoml
adc
divb
btc
test
sbb
pop
fnstenv
loopne
shlb
out
sub
push
mov
es
add
jmp
mov
jbe
push
mov
fisttpll
andl
mov
cwtl
fcos
lea
loopne
adc
mov
scas
movl
loop
jmp
xchg
cwtl
out
fstpt
sbb
aam
jo
pop
enter
movsb
cwtl
jecxz
out
adc
mov
js
adc
dec
jne
sbb
clc
dec
loope
stc
call
mov
dec
leave
mov
xor
in
repnz
adc
mov
xchg
lock
dec
int
mov
sub
jg
rclb
repz
pop
cmpsb
push
mov
fs
mov
addr16
sbb
push
cwtl
dec
xchg
mov
mov
and
pop
push
sbb
out
outsb
rcrb
lahf
dec
push
xor
mov
mov
jmp
mov
test
inc
mov
inc
cmpsb
inc
rolb
inc
xor
mov
dec
mov
push
sbb
mov
adc
mov
mov
mov
lock
in
sub
mov
push
mov
inc
out
inc
testl
mov
loopne
into
pushf
and
adc
into
movsb
mov
test
sbb
rol
ret
or
roll
je
cmp
xchg
sbb
cmp
leave
xchg
dec
movb
pop
mov
enter
inc
movsb
xchg
xchg
repnz
in
cmpsb
mov
mov
cmpsb
roll
out
dec
rcl
xor
pushf
mov
add
aad
int3
adc
in
loope
mov
mov
xchg
int3
adc
mov
mov
sahf
push
fsubs
dec
mov
and
cli
inc
lds
test
in
roll
repnz
sbb
add
shl
out
or
lods
int3
fmull
adc
lock
jecxz
loop
lods
inc
mov
test
xor
dec
or
ror
iret
and
xchg
mov
enter
jecxz
rolb
test
imul
push
insb
pop
lds
mov
je
add
iret
test
lcall
cmp
mov
mov
out
or
and
in
xor
xchg
cmpl
stos
test
add
mov
mov
xchg
clc
adcb
shrb
sbb
xchg
jmp
xchg
aam
rclb
lock
inc
test
flds
mov
addl
jl
in
leave
stos
mov
jp
iret
lods
orl
je
pop
iret
fmul
fucomi
ret
rcl
gs
mov
sbbb
shll
sub
cmp
cmpsb
lcall
fiadds
cwtl
ja
xchg
cmpsb
jecxz
aas
popa
outsb
adc
mov
test
fsts
incl
push
cmpsb
jns
in
and
mov
ds
test
sbb
mov
and
lods
jae
repnz
jl
fdivl
jb
xchg
dec
test
mov
add
repnz
cltd
mov
and
cmp
mov
xchg
daa
push
jno
int
mov
dec
adc
adc
lock
jns
pop
xor
call
dec
mov
mov
mov
adc
icebp
xor
cmpsb
aam
jl
das
sbb
pusha
dec
call
mov
sub
subl
mov
and
xorl
push
mov
popf
mov
adc
ret
fucomi
mov
das
fsub
fldl
in
mov
cmc
test
and
cmp
pop
rorb
int
dec
imul
repz
test
aam
xchg
jl
mov
into
mov
stos
mov
pop
adc
in
push
int
mov
test
cmc
repz
sarb
add
mov
dec
mov
push
mov
jmp
ret
iret
dec
mov
ret
int
push
stos
inc
lret
cld
enter
pop
data16
fisttpl
add
cltd
lret
jmp
mov
mov
add
mov
lahf
imul
in
or
sbb
sbb
into
pop
stos
fldl
cmp
movsb
xor
fbld
flds
rorb
rcr
add
mov
loope
push
sbb
enter
add
and
nop
fildl
xchg
cwtl
mov
mov
cmp
pusha
jecxz
loopne
mov
fmulp
pop
sbb
xor
sbb
addl
sub
clc
adc
mov
cmp
fdecstp
shl
loopne
scas
fildll
in
jne
dec
lods
shl
push
xchg
mov
in
dec
test
ficompl
xor
dec
enter
adc
rolb
mov
int3
or
movsl
in
add
inc
push
lret
mov
or
xchg
out
aam
lret
add
scas
movsb
shrl
aam
shr
push
adc
out
or
sarl
jg
lock
int3
mov
mov
push
mov
and
pusha
cmpsl
adc
push
jge
push
push
inc
adc
and
jnp
movhlps
out
movsb
dec
sbb
push
lret
add
mov
mov
lds
adc
pop
cld
mov
cmp
add
mov
call
inc
mov
cmp
sbb
push
mov
xchg
int3
subl
fldenv
lcall
cli
xchg
std
testb
or
test
or
xchg
mov
loop
pusha
fmuls
or
xor
movsb
test
mov
mov
sbb
pop
sub
dec
xor
jns
push
mov
jo
into
adc
adc
jg
sbbl
nop
lds
pop
int
mov
lock
rorl
jae
or
xor
sbbb
mov
add
sub
cmpsl
in
sarb
insb
mov
loop
fistpl
xor
mov
in
inc
jecxz
test
mov
ja
cli
cltd
iret
shl
sbb
dec
cmpl
test
into
loop
or
movsl
lods
mov
dec
dec
or
out
cld
sub
pusha
repnz
out
in
cmpsl
sub
rclb
insb
sbb
xlat
add
push
mov
test
lods
dec
ss
gs
dec
push
je
sahf
sbb
sahf
sti
mov
push
lock
xchg
in
ficoms
int
les
add
out
cwtl
les
loopne
dec
cmc
sti
xchg
rolb
mov
add
and
test
inc
std
movsb
in
aad
push
jns
xor
and
xchg
push
ds
mov
ret
stos
nop
popa
add
add
daa
mov
and
inc
repnz
inc
pop
jp
call
subb
fcomps
pusha
sbb
aam
jge
adc
xor
pushf
mov
nop
std
sbb
in
pop
sbb
add
adc
movsb
ret
mov
shr
pusha
int3
jno
lcall
mov
shl
push
loop
jo
out
cmpsl
mov
test
cmp
sub
neg
fsub
push
jno
mov
mov
cmp
push
ret
jae
subb
xchg
andl
mov
cs
adc
stos
hlt
in
test
xchg
call
std
aam
loop
cmpsl
inc
scas
insb
les
xchg
push
dec
add
adc
adcb
into
mov
jp
rcrl
loopne
ja
add
jle
out
addl
and
adc
sbb
inc
test
adc
clc
pop
hlt
lods
add
xor
or
xor
push
and
rolb
outsl
or
repnz
adc
lock
call
and
adc
mov
rclb
movsl
mov
fimuls
adcb
aam
dec
cmpsl
rcll
out
mov
add
and
in
nop
mov
ret
mov
push
cmc
mov
cvtps2pd
xchg
add
and
fs
and
xor
movsb
and
sbb
cmp
cwtl
mov
lods
shrb
shll
sub
neg
xchg
into
cmc
js
sbb
mov
mov
rolb
frndint
mov
mov
mov
cltd
adc
enter
loopne
int3
inc
fcoms
call
call
lods
sbb
add
outsb
loop
mov
jmp
cmp
movsl
adc
mov
add
mov
jecxz
mov
mov
hlt
mov
mov
mov
loopne
fdivrl
outsl
aam
add
ljmp
cmp
add
enter
enter
andl
add
xor
nop
and
fmuls
adc
or
dec
mov
adc
popf
mov
xlat
fldt
xchg
mov
rolb
sti
nop
mov
imul
rclb
arpl
test
add
mov
jecxz
loop
nop
mov
gs
out
scas
pusha
and
jbe
or
mov
cmpsl
or
mov
cmpsb
rol
fcoml
cld
fcomps
mov
cmpsb
lcall
les
adc
sbb
pop
mov
or
mov
rclb
out
sar
movsb
hlt
xchg
inc
je
insb
icebp
int3
sbb
shrl
mov
lods
xchg
fistpl
lcall
adc
loopne
add
inc
enter
mov
rcll
into
cmp
nop
or
rorl
call
jnp
sbb
sbb
add
push
rcrl
mov
lock
cmovnp
dec
repnz
push
mov
mov
stc
repnz
cmp
xchg
push
pushf
inc
adc
xchg
inc
or
pop
mov
fsubs
je
movsb
pop
in
xor
int3
pop
test
push
iret
xchg
adc
sahf
inc
push
loop
mov
xchg
add
add
dec
rclb
bound
rorb
jb
xor
dec
mov
mov
shrl
cwtl
movsb
pop
lret
xchg
pop
or
and
xor
cwtl
and
xor
stos
sub
clc
mov
mov
nop
loop
mov
or
out
jne
stos
add
repz
call
and
out
les
cltd
aad
mov
or
hlt
inc
fwait
sarb
into
inc
jle
gs
cs
inc
inc
xlat
leave
adc
adc
clc
les
jne
mov
loop
rcrb
loop
aam
mov
shl
sub
xchg
pop
ud2
add
mov
mov
les
loop
xchg
fnstenv
or
test
outsl
cli
dec
pop
adc
lds
sar
mov
aam
mov
je
repnz
adc
hlt
mov
or
xchg
enter
fiaddl
dec
cld
loop
loope
ljmp
inc
inc
mov
ljmp
xchg
fsubl
int3
out
sbb
lea
jg
cmp
dec
mov
subl
add
inc
cmpb
orb
test
movsb
mov
add
mov
movsb
mov
adc
jno
and
jp
xchg
nop
inc
mov
int3
adc
data16
mov
inc
pop
fistps
leave
scas
xor
fists
jae
cmp
mov
mov
nop
push
add
aas
aaa
rorb
mov
lret
out
sbb
xor
leave
call
add
ret
xchg
mov
jle
repz
lret
and
test
icebp
rolb
or
adc
add
mov
or
mov
mov
mov
in
cmc
xchg
jb
loope
mov
inc
mov
and
fmull
int3
int
out
sbb
stc
mov
movsb
in
call
test
jbe
andb
dec
adc
fdivrp
iret
lea
and
sarb
sbb
repz
lods
out
sbb
cmp
dec
dec
mov
push
in
scas
in
push
std
adc
test
pop
mov
mov
movsb
push
dec
aam
xchg
mov
int3
loope
mov
dec
loope
les
mov
nop
jle
fidivl
pop
xchg
imul
loope
mov
dec
iret
push
push
pop
sbb
mov
daa
hlt
xor
pushf
cwtl
mov
sbb
or
mov
mov
cmpsl
adc
dec
cs
xchg
negb
pushf
adc
inc
push
push
jo
lcall
out
push
addr16
mov
mov
and
cmpl
ret
xchg
mov
fnstenv
in
inc
repz
or
jae
jae
jo
mov
bound
mov
sub
fdivl
pop
out
pop
push
daa
jl
mov
dec
mov
popa
and
jno
jns
js
mov
nop
hlt
mov
cli
out
add
adc
es
sub
inc
pop
imul
pushf
mov
fcompl
jecxz
idivb
cmc
popf
pop
push
sub
push
fbld
push
and
mov
cmpsl
pop
data16
mov
dec
lds
pop
mull
imul
push
dec
jge
mov
mul
clc
and
sub
mov
in
out
mov
pushf
out
mov
mov
mov
cmpsl
dec
rcll
pop
pop
mov
idivb
clc
pop
cli
imul
cmpl
cwtl
cmpsl
mov
push
out
pop
arpl
outsb
inc
mov
pop
xchg
mov
xor
inc
mov
ret
mov
and
push
mov
repnz
hlt
aaa
testb
mov
sbb
pop
sahf
and
dec
lahf
popw
shlb
out
add
push
pop
jbe
mov
div
sub
js
lods
mov
sbb
movsb
mov
mov
in
repnz
adc
sbb
sub
jg
test
divb
cld
aam
out
in
repz
decb
adc
and
incb
aam
imul
mov
pushf
push
mov
cmpsl
cmpsl
mov
icebp
mov
mov
add
repnz
hlt
jns
test
mov
je
fwait
mov
add
sub
imul
hlt
push
idivb
jle
push
dec
je
js
mov
cmpsb
adc
mov
sub
mov
xchg
mov
push
loopne
add
mov
adc
popa
xor
push
cmpsb
and
pop
mov
cmpsl
iretw
daa
mov
cmpsl
dec
ret
rcll
mov
jae
jns
adc
and
xor
mov
inc
insb
mov
mov
or
sub
pop
inc
mov
mov
cmpsb
mov
mov
gs
mov
cmpsl
aam
push
out
add
mov
dec
dec
push
cwtl
mov
aad
cmp
dec
lods
pushf
mov
pop
mov
into
daa
mov
out
dec
vmovlps
rcrl
jo
and
add
add
inc
jns
mov
dec
stc
push
and
bound
mov
inc
pushf
jmp
mov
cmpsl
cli
or
daa
aas
inc
push
addr16
jle
movsb
mov
dec
notl
in
sub
jnp
je
inc
sbb
lahf
mov
cmpsl
adc
cmp
stos
pushf
sub
xor
mov
xchg
stc
out
pop
and
xor
mov
ficompl
popa
push
imul
call
stos
adc
fs
jo
je
js
jl
mov
pop
push
xor
int3
cmpsl
repz
cmp
bound
xorl
pop
sbb
imul
pop
js
cmpsl
std
push
out
add
mov
repnz
cmp
jb
inc
mov
fnstsw
enter
adc
addl
dec
pop
aaa
iret
imul
test
xor
daa
adc
dec
adc
inc
rclb
xchg
mov
fs
push
mov
mov
negb
sbb
add
sti
hlt
push
fsts
cli
aas
cld
arpl
popf
dec
cmp
xorl
enter
in
pushf
scas
mov
sbb
or
ss
ds
arpl
ret
cmpsl
fadd
out
out
pop
or
adc
arpl
mov
sti
in
adc
add
rcll
and
sub
mov
mov
cmp
pushf
mov
popf
negl
aaa
sahf
add
lods
into
inc
dec
lock
jge
mov
jle
movb
lahf
push
pop
pop
adc
inc
mov
fdivs
sbb
mov
into
push
or
sbb
jo
mov
into
hlt
aam
in
clc
push
cli
xor
aaa
insl
leave
pushf
mov
mov
push
jo
mov
or
adc
dec
and
in
inc
js
jl
lods
mov
and
mov
push
xchg
mov
mov
bsr
mov
push
mov
iret
or
adc
pop
pop
inc
pop
push
pop
pop
pop
nop
mov
inc
call
adc
inc
sub
mov
loopne
adc
mov
mulb
leave
push
adc
int3
insl
mov
mov
mov
lret
sub
lret
adc
cmc
add
mov
adc
and
mov
test
shl
fdivr
or
push
cld
imul
pushf
mov
adc
add
and
jb
sub
popf
push
pushf
in
sbb
mov
push
xor
or
lods
repnz
xchg
mov
out
push
and
push
push
cmp
ret
inc
adc
mov
mulb
popf
cld
popf
and
js
push
jnp
test
and
xor
jmp
jns
jns
js
mov
sti
mov
and
popl
pop
mov
dec
or
aas
sbb
jp
cld
mov
lods
or
mov
sahf
mov
lock
fsubs
mov
into
iret
push
jmp
call
cmpsb
mov
notb
cli
jns
lock
push
ret
jb
jl
cmpsl
fld
sub
and
mov
adc
and
mov
insb
mov
ret
mov
pop
inc
popa
jl
jns
enter
ss
cmp
repnz
mov
dec
push
dec
and
pop
mov
mov
cmpsb
and
pusha
mov
cmp
fs
push
movsb
in
dec
cmp
pushf
pop
sbb
push
dec
and
pop
insb
bound
ds
dec
push
xor
sbb
xor
cmp
and
adc
sbb
repnz
xchg
xchg
mov
inc
push
xor
push
inc
and
mov
cmpl
mov
inc
mov
inc
mov
sarl
adc
dec
sub
pop
ror
push
ret
mov
mov
inc
jae
mov
imul
clc
sti
cli
ss
dec
push
pushf
hlt
mov
sbb
repz
push
mov
pop
mov
jg
mov
sbb
sahf
cmp
add
mov
and
push
pop
fsubs
rcll
dec
ret
aad
in
adc
lahf
mov
call
mov
or
mov
pop
mov
mov
imul
stos
sbb
lds
xchg
adc
sar
rorl
push
xorl
dec
jg
cltd
das
idivb
out
push
add
nop
xlat
or
andb
push
xchg
negb
or
adc
and
mov
mov
imull
jo
mov
fstp
cmpb
xchg
jno
repnz
cmp
mov
mov
sub
and
mov
xchg
pop
and
pusha
cli
push
xor
test
in
sahf
pop
pop
das
xchg
cmp
jge
mov
hlt
push
frstor
inc
mov
sbb
movsb
inc
push
jne
jp
pop
push
push
mov
mov
mov
inc
mov
jge
push
sti
fs
cmp
sbb
xchg
shll
jno
movsb
mov
mov
pop
test
nop
sahf
mov
mov
into
rorl
dec
dec
mov
in
inc
pop
cmpsb
mov
insl
inc
mov
mov
jecxz
pshufw
cmp
jl
sbb
rorl
mov
pushf
loopne
xchg
mov
jge
mov
mov
add
mov
loopne
inc
mov
hlt
mov
pop
lods
mov
test
jl
imul
jns
movsb
ja
aas
cmp
mov
pop
mov
inc
sub
add
jp,pn
cmp
xor
pusha
mov
pop
mov
mov
cmpsl
pop
fs
mov
dec
insl
push
cmpl
pushf
cmpsl
mov
and
test
repnz
cltd
mov
add
push
push
out
shl
dec
and
pop
push
inc
orb
lods
mov
mov
mov
adc
inc
test
inc
mov
mov
mov
inc
shlb
repnz
ss
and
sub
and
xor
rcrb
rolb
mov
adc
jns
scas
mov
fs
xor
mov
cs
push
sarl
pushf
lods
mov
data16
or
jo
xor
jl
out
add
push
xor
mov
mov
mov
mov
fs
outsl
jg
mov
fnstsw
mov
mov
cmc
shll
dec
inc
push
jo
adc
popl
dec
jnp
xchg
cmp
add
or
es
push
jo
mov
inc
xchg
mov
xor
clc
test
jo
test
push
flds
or
push
push
sbb
lods
mov
movsb
out
jo
jo,pn
je
js
cmp
push
bound
add
mov
dec
fdivrp
pop
mov
sub
xchg
dec
inc
xchg
pop
mov
and
mov
sbb
cmp
mov
pop
insb
xchg
xor
popf
outsl
xchg
sub
jo
jnp
mov
pop
and
hlt
pop
add
cld
mov
jnp
scas
mov
ljmp
mov
dec
add
mov
adc
xchg
mov
into
out
and
cmp
inc
arpl
add
int3
mov
xlat
enter
inc
cmp
cmpb
hlt
xchg
mov
mov
adc
popf
stc
push
or
pop
xchg
add
loope
in
and
mov
xchg
push
in
add
pop
bound
xchg
or
inc
and
mov
cmpsb
cmc
subb
popf
inc
adc
pusha
int3
mov
movsl
or
jb
jo
xor
popf
cmp
sub
and
mov
jl
xor
int
jp
aam
out
fcom
mov
mov
adc
inc
sub
pop
lds
inc
jge
test
add
loopne
in
std
incb
adc
and
xor
aas
push
fbld
push
sub
xor
jmp
jns
jns
jns
mov
sub
xor
mov
xchg
jo
mov
test
rolb
test
loope
or
cmp
pop
dec
jne
jecxz
and
mov
cmp
xor
jb
jbe
xor
mov
div
stc
clc
sti
cmp
enter
test
call
dec
mov
lret
adc
dec
loopne
mov
lea
imul
cmpl
cmp
sub
popf
mov
dec
sahf
push
adc
cld
sarb
pusha
dec
push
cmp
mov
mov
dec
outsl
mov
and
mov
lahf
inc
xchg
ret
and
xor
js
cld
xor
mov
mov
hlt
mov
push
mov
mov
into
mov
cmpsl
enter
xor
cmp
outsb
mov
mov
xchg
hlt
jle
cmp
sbb
outsb
cld
lret
add
adc
in
pop
mov
xor
inc
sarl
cld
sub
arpl
xchg
mov
cmpsb
popf
add
fldcw
cmpb
into
xor
cmp
shll
push
sbb
clc
je
out
mov
lret
cmp
sub
mov
push
inc
pop
xchg
mov
sbb
hlt
sbb
dec
inc
mov
pop
xchg
fs
rol
or
push
pop
test
leave
stos
add
mov
les
pop
sbb
and
jne
push
loopne
movsb
mov
mov
fs
adc
hlt
aaa
divb
xchg
enter
into
mov
mov
sub
cmp
adc
pop
pop
clc
loopne
in
call
outsl
inc
mov
mov
mov
push
cmpsb
repnz
pop
mov
rolb
mov
into
inc
push
push
dec
insb
inc
outsb
scas
mov
push
cmp
xchg
adcl
or
mov
mov
bound
push
clc
icebp
flds
dec
mov
pop
nop
push
cld
scas
and
xor
inc
daa
cmpsl
pop
addr16
mov
lcall
xchg
out
fsubrs
pop
insl
outsl
insb
movsb
push
pop
push
je
loopne
or
daa
adc
push
lret
in
idivb
inc
sbb
arpl
pop
mov
gs
mov
adc
sub
cli
mov
cmpsl
jne
mov
or
mov
loope
adc
xchg
jne
int3
inc
jl
dec
mov
popa
int3
imul
mov
adc
jo
and
push
test
mov
xchg
cmp
pushf
mov
into
repz
cmp
dec
pop
mov
cmp
test
addr16
fdivr
xchg
std
movsb
dec
add
mov
cs
sarb
add
lcall
and
das
repnz
frstor
out
arpl
pop
sbb
test
mov
ret
mov
loop
or
inc
pop
cltd
mov
ret
mov
jo
push
dec
fs
mov
pop
sbb
jecxz
push
dec
call
fnstsw
sub
push
xor
dec
addr16
addr16
addr16
addr16
jge
addb
mov
xchg
in
inc
fsubl
movsl
inc
stos
gs
pop
mov
jl
adc
sbb
in
dec
repnz
push
sub
jecxz
jae
jb
lahf
xor
ss
cmp
jo
pop
jl
cmp
lret
insl
add
js
ss
xorb
push
sub
adc
and
xor
xor
js
push
xchg
aad
xor
pushf
pop
adc
adc
dec
lret
stc
fsub
sahf
js
lea
adc
inc
out
leave
push
shld
loopne
sbb
out
mov
mov
pop
mov
je
jnp
xorb
dec
scas
push
iret
mov
dec
int3
dec
shll
fsubl
repz
xor
incb
or
bswap
push
fisubrs
xchg
xor
in
ds
inc
loope
push
jns
jns
jns
stos
jo
dec
jbe
test
notb
or
sarb
int
shlb
ljmp
fildl
mov
and
sub
xor
mov
dec
mov
pop
movsl
gs
in
jnp
js
xchg
mov
mov
mov
test
jbe
jl
jl
jl
jl
jl
jl
jl
jl
jl
sbb
push
addr16
sbb
and
xor
cmp
inc
sbb
pop
and
push
jl
pop
pop
in
imul
jo
xchg
insb
cltd
ss
lods
mov
test
scas
pop
mov
dec
xchg
roll
sbb
aaa
pop
pop
adc
popa
pusha
mov
mov
mov
jge
scas
mov
mov
and
and
out
inc
add
pop
imul
data16
imul
xor
not
clc
idiv
sti
cld
and
inc
pushl
xor
test
sbb
mov
mov
movsb
push
sbb
in
add
xchg
mov
dec
jmp
push
jg
sbb
xchg
push
add
push
xor
mov
lcall
mov
cmp
jo
pop
test
cmp
mov
lea
xbegin
add
sbb
xchg
inc
xorb
lods
mov
hlt
pusha
mov
je
js
pop
test
sub
mov
movsl
lods
xchg
and
mov
out
inc
xchg
dec
jns
jns
js
mov
mov
clc
in
cli
cld
or
sub
out
dec
into
jle
ret
mov
pusha
xchg
lcall
and
cmp
jns
jg
pop
push
xchg
xor
push
lods
cmp
je
pusha
or
je
js
jl
adc
push
fs
mov
jge
mov
mov
insb
nop
jo
je
js
jl
jl
jl
jl
jge
outsb
mov
cmp
jae
jae
jb
hlt
jb
fdivs
loopne
test
call
movsl
hlt
pop
out
cld
add
or
ss
sbb
xor
cld
sbb
or
jp
push
ret
sbb
add
scas
mov
sbb
xchg
mov
cmp
dec
jo
mov
hlt
and
nop
mov
xchg
jbe
jp
jle
movsb
mov
sbbb
cld
and
sub
xor
pop
insb
jge
test
mov
push
adc
popl
dec
pusha
jp
mov
inc
dec
xchg
mov
leave
mov
jo
loope
gs
insl
movsb
xchg
lods
add
fdivl
or
push
inc
cld
aam
xchg
pusha
call
dec
cli
push
iret
cmc
mov
fldenv
dec
push
idivb
cmp
rcr
add
dec
fdivrs
xchg
xchg
mov
inc
mov
ficomps
ljmp
pop
dec
notb
lret
add
fbld
cmp
fs
xor
xchg
cmp
and
dec
mov
popa
xor
cwtl
pop
lock
xchg
cs
or
stos
repnz
ljmp
dec
xchg
push
add
cmpsb
inc
add
sahf
scas
mov
jb
js
sbb
sub
adc
roll
lock
lret
clc
add
and
jne
mov
dec
mov
xchg
mov
stos
add
sub
ret
orb
je
cmpsb
mov
test
nop
mov
pushf
inc
mov
clc
out
incb
mov
movb
hlt
xor
test
pusha
push
sub
cmpsb
inc
dec
addr16
pop
or
iret
pop
test
sbb
xor
cmp
gs
xor
cmp
xchg
push
xor
pop
xor
lahf
fs
push
je
js
jl
pushf
mov
push
nop
jo
adc
shlb
mov
mov
inc
lcall
sbb
mov
lock
pop
push
pop
inc
mov
add
mov
fcoms
cmc
out
mov
or
mov
mov
mov
or
adc
adc
sbb
fsubrs
jbe
shlb
gs
pusha
inc
test
xchg
xorl
pushf
mov
adc
jl
mov
into
xor
inc
imul
ljmp
mov
mov
and
xor
cld
pop
xchg
mov
les
mov
add
hlt
dec
clc
lock
cld
add
add
or
or
in
js
fistpl
and
sub
xor
mov
xor
inc
jns
mov
push
loop
pop
xchg
fs
in
jl
pop
or
and
jle
cmp
xchg
xor
cli
cmp
inc
jl
jl
xor
push
gs
adc
push
push
data16
jl
xchg
in
fsubrs
nop
push
xchg
popf
das
push
pop
xchg
les
fsubs
movl
mov
push
mov
repnz
lret
icebp
add
xor
pop
or
fcompl
or
and
xchg
cli
jle
xchg
mov
or
or
hlt
mov
ja
icebp
mov
or
xor
push
negb
adc
ror
adc
push
cli
jbe
out
cmc
lret
mov
movsl
push
mov
stos
mov
lea
enter
add
cmp
cmpsl
les
std
pop
mov
or
test
xchg
mov
rcr
ljmp
fxtract
xor
jo
stos
mov
addl
mov
add
mov
add
iret
dec
and
mov
scas
popa
rcll
mov
jb
mov
mov
dec
push
push
mov
adc
into
movsl
fs
pusha
mov
mov
loope
jmp
ficompl
push
xchg
cmpl
loopne
or
cld
add
mov
mov
cmpsb
xor
adc
cli
xchg
cld
cwtl
pushf
mov
push
mov
mov
rolb
push
push
testb
les
shl
mov
or
mov
cmpb
idivl
fs
pop
xchg
fsubrs
add
arpl
je
pop
cmp
lret
rolb
mov
mov
lahf
inc
dec
fisttpl
add
and
mov
mov
stos
dec
and
lcall
xchg
or
sub
imulb
xchg
mov
dec
sahf
xchg
rolb
lcall
es
cmp
push
xor
pop
test
notl
int3
jb
cmp
pushf
xchg
sbb
call
push
xchg
ret
popa
sub
add
movsl
push
xor
lods
mov
popa
into
rorb
call
fidivl
mov
mov
ficoml
in
inc
call
or
je
mov
fiaddl
cld
or
xchg
adc
fsubl
ror
ficoml
inc
hlt
bound
and
mov
add
or
call
push
mov
jns
icebp
pop
sub
stos
add
mov
lock
adc
add
dec
xchg
pop
imul
mov
cmpsl
ret
pop
je
add
or
sarl
in
add
pop
inc
xor
cmp
add
jp
mov
mov
ret
int3
sbb
xor
mov
mov
into
out
push
hlt
dec
clc
mov
jo
incb
or
in
push
jl
sbb
mov
aas
test
xor
and
jge
in
mov
xchg
sbb
cmp
sbb
sub
mov
js
or
repnz
mov
test
loope
mov
mov
popa
pop
rcrb
xchg
adc
cmpsb
dec
pop
sub
mov
and
cmp
mov
cmpsl
aam
fldcw
cmpsl
push
add
mov
mov
scas
test
mov
jne
loopne
pop
pop
test
outsb
push
xchg
jge
lock
add
lods
dec
xchg
sbbb
add
mov
xor
rol
fidivrs
inc
clc
outsb
shlb
and
xor
jge
lods
sub
orb
in
stos
popf
add
and
dec
inc
sbb
test
adc
insb
xchg
xorl
mov
or
fmul
fisttps
jp
push
std
cmpsb
add
mov
xor
insb
mov
push
lods
inc
aam
test
ret
sbb
aas
mov
cli
or
fdivl
imul
clc
in
mov
negb
xorl
cmp
les
shrb
mov
pop
xchg
mov
add
add
leave
leave
aam
popa
push
or
mov
push
xor
fdivrs
inc
cmpsl
sahf
xchg
aam
pop
or
adc
pusha
jo
mov
and
jne
push
and
outsl
jo
mov
fs
sbb
mov
cld
ljmp
mov
cmp
xor
mov
out
dec
xchg
sarl
push
ljmp
mov
insb
mov
cmpsb
call
mov
add
mov
mov
lea
fimull
inc
sub
cmp
dec
rcrb
xor
sub
clc
fimull
test
hlt
test
adc
fiadds
pop
cld
enter
enter
pushf
push
mov
nop
dec
mov
clc
cs
mov
fs
lods
mov
popa
cmp
addl
int3
adc
and
xor
inc
and
ficoml
xor
outsl
loope
mov
pop
push
xchg
push
inc
andb
sub
mov
cwtl
arpl
mov
mov
aam
xchg
flds
js
stos
mov
cmpsl
dec
sbb
and
mov
add
lods
mov
les
mov
inc
add
sbb
push
lret
or
push
es
push
inc
sbb
jb
aad
jge
popf
mov
test
mov
mov
test
mov
je
imul
shl
inc
jne
sahf
mov
xchg
mov
mov
jmp
stos
rolb
mov
fcompl
xchg
mov
inc
leave
lock
jg
int
stc
and
xchg
ror
jae
and
fwait
scas
sbbb
movsl
hlt
or
lock
nop
cld
add
movsl
jmp
sbb
xor
loopne
and
mov
mov
lret
out
cmp
das
stos
inc
out
mov
cwtl
fcoml
xchg
mov
add
inc
mov
mov
mov
mov
jae
test
mov
mov
cli
lods
mov
push
adc
aam
sbb
cmpsb
int3
mov
mov
mov
mov
out
push
or
les
sbb
imul
or
push
jo
inc
lret
inc
inc
mov
adc
sarb
ret
or
sarb
int3
ss
add
jbe
push
pushf
test
cwtd
mov
in
sub
xchg
cltd
mov
pop
cmp
movsb
into
test
lods
dec
mov
mov
push
stc
lret
inc
nop
shlb
or
adc
int
cmp
jl
cmpsb
adc
sub
adc
adc
mov
and
or
leave
inc
ljmp
mov
jb
xchg
lret
call
jl
ret
cld
fidivrs
pop
mov
stos
mov
daa
clc
ret
loope
in
mov
cmovg
and
sub
cmp
jns
test
mov
dec
xor
jb
xchg
test
mov
xor
roll
adc
xchg
xchg
push
popa
dec
loopne
mov
fiadds
and
cmp
cmp
mov
sub
and
jb
es
mov
mov
cmpsb
stos
mov
xchg
lods
mov
dec
insb
inc
add
mov
out
cmp
popa
add
jo
mov
lret
xchg
jge
cli
xchg
call
mov
cmpsb
les
mov
rolb
enter
rcr
aam
push
dec
pop
cmpsl
mov
inc
inc
dec
dec
rclb
and
mov
in
ss
sub
movsl
adc
rorb
add
cmpb
test
mov
mov
push
sub
fdivrl
xchg
pusha
filds
test
mov
fmul
fs
mov
scas
inc
mov
adc
jmp
popa
dec
imul
repnz
aas
mov
movsl
cmpsb
mov
rcll
inc
mov
aam
and
add
lret
je
arpl
repnz
setbe
aad
xor
push
loope
icebp
out
mov
sub
fldz
mov
pop
hlt
adc
inc
clc
arpl
cwtl
add
repnz
lods
mov
pop
test
fdivrl
mov
pusha
pop
sbb
insl
cld
jg
mov
sbb
and
adc
xchg
xor
push
xor
xchg
je
cli
xchg
into
popf
push
mov
inc
mov
dec
xor
ss
inc
aad
xchg
adc
ficompl
jle
mov
cmpsl
sbb
and
push
mov
or
mov
test
and
cli
mov
dec
cli
push
sbb
pop
cmpsb
inc
out
add
sbb
movsl
add
clc
push
ljmp
mov
xchg
hlt
fisubs
ljmp
insb
add
bnd
and
pusha
fcoms
cmp
aas
stos
xchg
inc
test
pusha
jo
aas
test
in
inc
push
ret
cmpsl
inc
cmp
fbld
push
xor
hlt
cli
inc
adc
lods
xor
pop
cmp
mov
ret
insb
pop
sub
jno
mov
test
in
sub
sbb
es
movsl
dec
xchg
jne
mov
in
mov
jo
push
and
and
pop
pop
sbbl
mov
jl
pop
add
mov
sbb
into
pop
cld
daa
add
addr16
adc
repz
sbb
inc
inc
gs
fs
nop
mov
pop
fdivrp
mov
das
add
cmp
je
les
xchg
pop
jnp
sahf
cmpsl
leave
scas
enter
inc
add
rcr
fcoms
outsl
loop
rcll
hlt
bound
in
inc
frstor
cmp
movsl
jmp
ficoms
and
cmp
movsb
xor
add
xchg
xchg
arpl
pop
lahf
xor
xchg
adc
jb
xor
mov
inc
cli
pop
pusha
rcr
mov
mov
movsl
add
sub
cmpsb
in
or
jp
repz
test
push
sahf
sbb
jl
pop
les
hlt
shl
clc
icebp
lret
sub
xor
xchg
imul
xorl
jno
mov
pop
add
adc
sbb
sahf
inc
adc
fidivs
dec
insb
pop
mov
push
test
insb
pushf
xor
pusha
push
or
adc
cs
dec
adc
in
popa
cld
movsb
mov
insb
mov
stos
pop
push
into
adc
inc
and
test
loopne
jb
divb
test
mov
je
jno
mov
mov
mov
push
imul
mov
fnsave
frstor
jns
in
sub
add
inc
jo
pop
jl
jl
pop
add
jo
je
push
lahf
jl
jbe
mov
loope
xchg
decb
js
test
lods
aam
dec
mov
inc
loope
lds
xor
lock
fcmovu
add
push
inc
and
ror
mov
push
fwait
mov
mulb
xor
fiaddl
mov
je
into
xchg
shr
and
jae
sbb
mov
scas
orb
std
leave
int3
cmp
cld
jns
ret
or
iret
jl
push
add
ret
rcl
testb
dec
jno
jl
mov
mov
ds
cwtl
je
mov
cmp
mov
out
adc
sub
dec
push
inc
addb
aam
rcl
jmp
ret
and
push
cmc
scas
inc
incb
jo
out
add
push
mov
and
sbb
add
dec
xchg
and
jle
popl
xchg
pop
ljmp
xor
pop
dec
in
out
add
inc
fstpt
in
insb
cli
scas
jecxz
push
aaa
xchg
cmp
mulb
into
mov
jecxz
push
push
popf
sub
mov
or
fcomps
xchg
xchg
insb
and
add
mov
add
cmc
test
inc
jl
mov
clc
je
lock
push
test
cmc
mov
daa
xor
sub
add
out
in
iret
test
gs
mov
enter
add
ficoms
pop
lea
rcr
or
adc
push
aaa
orb
adc
rol
mov
xor
xor
repnz
out
pop
mov
das
lret
sbb
mov
adc
lahf
lret
pop
mov
les
int3
jge
inc
test
in
test
mov
mov
sub
mov
xchg
mov
mov
mov
gs
sub
loop
push
test
xchg
or
stos
mov
arpl
or
mov
pusha
rcrb
add
jo
out
gs
jo
mov
int3
mov
cmpb
mov
xchg
testb
jo
dec
stos
mov
mov
xor
or
push
push
xchg
dec
jo
push
sub
loope
dec
cli
mov
hlt
hlt
lret
sub
add
rorl
pop
pop
addr16
xchg
mov
pushf
xchg
xchg
in
mov
lock
fs
push
dec
lahf
nop
lahf
push
pop
push
pop
lahf
mov
movsb
aam
xchg
lea
mov
adc
mov
jge
mov
into
imul
fimull
mov
mov
mov
cwtl
xchg
mov
xchg
ja
mov
cmp
je
mov
mov
mov
pop
adc
repnz
dec
in
repnz
hlt
cmp
push
push
sti
cmp
jo
fs
cmp
dec
int3
loopne
sbb
adc
insb
jb
int
daa
hlt
mov
jl
xchg
repnz
mov
and
out
add
movsb
push
jo
cltd
mov
add
mov
in
cs
jb
lret
mov
shl
mov
mov
popf
mov
rcll
pop
int3
push
dec
jbe
jo
into
cmpsb
xor
insb
add
je
js
pop
subl
idivb
loop
adc
jb
ror
rorl
mov
add
sbb
pop
test
sub
push
sbb
out
test
adc
insl
and
jo
hlt
out
mov
or
das
mov
jb
js
adc
jl
scas
pusha
inc
sbb
imul
mov
dec
rcll
xlat
adc
pop
add
loope
sarb
inc
mov
mov
test
mov
mov
pushf
cwtl
jle
fs
shll
aas
jl
cmp
pop
and
pop
add
mov
mov
cltd
js
cmp
test
adc
mov
insb
cmp
call
scas
sub
je
cli
cmpsl
mov
cld
push
out
pop
dec
and
mov
and
inc
dec
popa
xchg
mov
xchg
mov
or
xchg
sub
ss
sub
mov
repnz
not
insb
mov
inc
pop
pop
outsb
or
pusha
adc
mov
xorb
add
movsl
xlat
clc
outsl
hlt
mov
push
cmc
scas
mov
mov
js
fisubrs
dec
into
jl
ret
movsb
je
xchg
mov
pushl
xchg
sahf
mov
inc
shl
add
sbb
les
pop
ss
dec
imul
mov
shll
test
cmp
push
in
adc
adc
sub
movsl
pop
pop
sub
sub
loopne
dec
jnp
xchg
lock
hlt
mov
jb
or
xchg
mov
shll
jb
hlt
cld
aam
lcall
pushf
mov
mov
fidivl
out
dec
xchg
insb
and
sub
xor
xchg
lds
pop
hlt
clc
xchg
mov
cmpb
lret
and
add
push
inc
test
scas
je
mov
lret
xor
adc
pop
pusha
lcall
jbe
repnz
test
mov
call
dec
mov
pop
xor
xchg
sbb
aaa
and
push
push
inc
jne
fwait
mov
mov
les
shrb
mov
lret
fisubs
in
inc
icebp
insb
mov
dec
push
pusha
jl
jl
pop
xchg
mov
or
lock
pop
inc
ljmp
fldcw
push
lods
or
mov
jo
pop
push
lcall
adc
in
pusha
xchg
stc
iret
and
dec
aas
loope
mov
rclb
call
loope
dec
negb
xor
and
sahf
cmp
cmpsl
jae
jo
cmp
scas
cmp
xchg
out
mov
pushf
xchg
mov
adc
les
xchg
out
bnd
ss
daa
addr16
fs
lret
cmp
aam
jo
cmp
test
cltd
stc
mov
inc
add
and
mov
cmpsb
mov
int3
cmp
add
lock
mov
scas
leave
push
ret
imul
xlat
test
cmp
les
mov
divb
mov
lcall
ss
mov
fdivr
sahf
stos
xchg
mov
js
aaa
test
cmp
mov
pop
mov
enter
lock
adc
and
xor
inc
shlb
jge
aam
aas
test
mov
je
lret
add
lahf
pop
pop
sub
adc
scas
in
add
adc
mov
loope
jbe
cmp
call
fdivs
out
mov
pushf
mov
fnsave
adc
sbb
mov
inc
insb
test
add
and
xchg
and
mov
push
pop
jp
inc
sbb
adc
div
pushf
cwtl
mov
adc
jecxz
pop
xchg
cli
jo
pop
push
loopne
cmp
jno
jge
in
dec
lcall
in
add
les
xchg
fldl
and
cmp
test
jge
cmpsb
mov
out
and
cmp
iret
hlt
add
outsl
and
xor
sbb
into
pusha
inc
push
or
mov
js
iret
dec
inc
mov
xchg
fs
incb
pop
sub
clc
xchg
inc
and
jl
movsl
mov
xchg
cmp
iret
mov
mov
pusha
inc
push
cmpb
pusha
movsb
mov
ds
popa
call
cld
jle
nop
adc
int
out
pushf
sarl
inc
hlt
gs
adc
mov
cmpsb
cmp
test
lock
shlb
fisubs
cs
jl
jnp
mov
adc
adc
fdivrl
sbb
inc
gs
jo
push
test
add
insb
in
pop
mov
mov
add
movsb
ds
into
xchg
xchg
or
sbb
mov
dec
sahf
xor
orb
cwtl
push
cld
popf
jbe
test
int3
outsl
push
add
fwait
push
scas
mov
pop
mov
je
xchg
lock
clc
mov
out
cli
xchg
jae
bound
cli
adc
insb
adc
scas
dec
popa
lods
pop
call
jp
decl
or
movsb
mov
insb
call
fisubrl
jo
dec
ss
xchg
outsb
inc
push
jo
mov
fs
imul
inc
push
cld
push
lahf
call
nop
loopne
mov
cmp
icebp
loop,pn
push
hlt
into
xchg
sub
aas
jl
adc
jns
mov
sbb
jo
inc
cli
pop
mulb
add
insb
pop
mov
jle
stos
inc
push
mov
out
adc
push
jae
add
in
push
xchg
inc
movsb
push
dec
xchg
andb
cmp
xchg
cmp
xor
sbb
jne
loope
aad
loope
fstl
jo
jmp
les
outsb
mov
mov
mov
cmp
pop
pop
push
inc
and
cmp
das
mov
or
inc
pushf
jbe
cs
pushf
inc
fidivrs
cmc
pop
rcr
cmpsl
mov
dec
in
push
or
mov
dec
loopne
mov
mov
lea
fidivrs
push
push
test
lock
push
push
mov
pop
or
adc
push
inc
inc
lock
jge
xor
in
hlt
cmp
add
pop
fdivr
pusha
shlb
jl
nop
aam
xchg
std
inc
cli
daa
push
dec
xchg
inc
cmp
cmpsl
jb
push
pusha
mov
popf
ss
inc
iret
insb
cmp
mov
push
les
sub
xor
shrl
jns
jns
scas
cmpl
mov
adc
pusha
enter
xor
mov
in
add
xchg
and
cmp
xor
inc
shrb
adc
xchg
xorb
dec
cli
mov
mov
push
mov
mov
and
mov
push
roll
mov
mov
xchg
shll
cmp
in
push
dec
pushf
mov
sbb
fstpt
fcompl
cmpl
ja
lea
sahf
cmpsl
mov
ret
movsl
mov
cld
mov
stos
mov
stos
inc
push
xor
push
pop
mov
movsb
lods
xor
imul
test
cmp
scas
and
clc
cmp
lods
cmp
push
lret
lcall
int
adc
sbb
or
cmp
mov
fidivrs
jle
xchg
jle
test
adc
dec
inc
rclb
lret
inc
aam
adc
notb
inc
xchg
sub
cmpsb
fstpl
adc
mov
cli
push
fisubl
push
xchg
dec
iret
rolb
je
cmp
idivb
rcrb
jle
mov
cwtl
xor
ret
and
dec
adc
int
xchg
push
mov
sub
rclb
scas
ja
pushf
repnz
cmc
inc
mov
add
fbstp
xchg
adc
movsl
xor
lods
scas
cmpsl
dec
jo
jle
repnz
pusha
mov
dec
je
xor
mov
insl
clc
cmp
lock
daa
out
mov
js
iret
rorb
rclb
push
cld
or
imul
cli
add
sbb
movsb
repnz
fbld
clc
xchg
js
leave
ficompl
jns
sahf
mov
mov
push
into
sahf
rcll
fisubrl
out
bnd
jns
in
inc
lods
dec
add
push
lods
shll
pop
int3
mov
adc
movsl
adc
sub
shll
mov
and
vorps
cmp
and
jo
push
sub
jb
movsl
mull
fnstenv
add
pop
and
push
inc
fxtract
mov
pop
fmuls
xchg
inc
inc
movb
or
sarl
cli
mov
test
loopne
mov
jb
dec
sub
xor
in
dec
dec
shlb
out
add
add
movsb
fdivrs
test
nop
cmpsb
scas
int3
int3
mov
cmpsl
enter
push
mov
inc
je
mov
fistpl
aad
loope
mov
jo
cli
jbe
cs
pushf
push
lret
cmp
pop
push
inc
push
mov
iret
inc
repnz
push
mov
jp
fcompl
incl
or
inc
dec
pop
pop
sub
nop
mov
faddl
inc
inc
mov
pushf
fcompl
xchg
idivb
push
pop
aam
lods
scas
mov
das
jg
pop
data16
daa
push
xor
pop
cmp
loope
sahf
aam
nop
sub
movsb
fmul
test
pusha
fcoml
xchg
adc
or
xchg
xchg
out
dec
js
aaa
popa
add
mov
fdivrl
mov
push
jo
imul
lock
cmpsl
inc
jb
mov
roll
out
out
push
push
mov
dec
imul
lock
jae
sbbb
mov
outsb
add
test
leave
shlb
inc
xchg
xlat
push
mulb
movsb
push
outsl
mov
gs
xchg
cmpl
xor
jnp
mov
inc
pop
inc
cwtl
imul
movsl
fiadds
or
pop
sbb
and
xor
je
mov
test
sarl
inc
mov
push
lock
cmp
jp
aam
clc
hlt
lods
arpl
sbb
sub
xchg
sbb
test
je
adc
fdivr
pop
iret
cmp
lcall
xor
popa
xchg
fnstcw
pop
popa
jl
movsb
sub
test
cmp
mov
clc
sarl
pop
push
mov
xchg
movsl
int3
popa
push
aam
adc
pop
in
call
add
dec
and
jl
jno
jns
test
movsl
push
lock
leave
pop
cmp
data16
cmp
jo
mov
sub
pop
xchg
or
pusha
push
inc
pop
push
mov
imulb
xchg
mov
inc
adc
xor
movsb
fsts
rclb
into
mov
cmp
js
mov
mov
lods
xchg
xchg
sub
mov
mov
mov
ret
popf
jbe
andb
pushf
adc
cld
scas
cwtl
jecxz
scas
add
mov
es
mov
inc
lret
dec
inc
rorb
leave
shl
sbb
mov
xor
push
mov
xchg
and
test
add
add
andb
xchg
cmp
xchg
xor
insb
mov
mov
ret
xchg
cltd
mov
jb
imul
pop
xor
mov
jge
push
jb
mov
in
inc
shrb
mov
adc
movsb
xchg
call
push
push
inc
dec
outsl
pusha
cwtl
mov
add
pop
dec
push
daa
adc
inc
jbe
in
mov
sub
mov
dec
dec
out
je
push
mov
fmuls
clc
inc
into
clc
mov
cld
jo
into
mov
or
sbb
xor
icebp
mov
sbb
mov
popa
and
aam
mov
sbb
nop
mulb
sub
sub
out
xor
cmp
jb
fcompl
xor
push
xor
xchg
pop
pusha
sub
xchg
insb
pusha
cmpsb
je
fs
jl
data16
lods
cmpsb
sbbb
leave
out
cld
fadds
mov
or
iret
mov
and
or
mov
mov
inc
xor
pop
or
pop
adc
fsubrl
sti
sbb
dec
push
repnz
adc
out
repnz
testl
rorb
ja
ss
xor
gs
lret
dec
movsl
aam
js
popa
hlt
adc
pop
mov
idivl
fdiv
stos
lret
cmp
jo
xchg
into
sbb
dec
sti
pop
repnz
inc
leave
gs
mov
addb
sub
mov
faddl
data16
aaa
test
fisttpll
enter
sub
sti
mov
push
adc
jne
push
mov
xchg
adc
shlb
xchg
iret
and
jbe
xchg
enter
mov
inc
push
mov
mov
mov
pop
fisubrs
xorb
enter
in
jge
das
mov
adc
sti
inc
test
push
pop
bound
jb
cmpsl
movsl
popa
insb
repnz
pop
pop
push
call
jl
movsb
mov
adc
pusha
sub
pop
clc
jo
cmp
push
jle
test
shlb
fcomps
cs
sti
mov
xor
call
cld
popa
sub
inc
mov
mov
gs
adc
adc
push
sub
sarb
enter
ljmp
inc
push
std
in
and
mov
pop
lds
orb
pop
outsb
repz
xchg
xor
push
cmp
and
mov
shlb
mov
hlt
and
jmp
fs
lret
push
inc
lcall
stos
mov
jno
sbb
loop
mov
clc
dec
incb
lret
cmp
dec
xor
loope
pop
rcrb
lcall
cmp
mov
adc
pushf
inc
rcrl
dec
lods
out
mov
mov
mov
ljmp
data16
loop
rol
test
lods
mov
out
add
mov
dec
stc
mov
fcompl
test
and
notb
shlb
adc
ficoms
dec
add
nop
jge
xchg
pusha
push
in
push
xchg
or
movsl
cwtl
loope
cs
add
jb
or
fs
add
and
nop
dec
jb
pop
sbb
cld
sub
loop
jl
or
aam
test
lret
jnp
xor
movsb
enter
mov
push
xor
cli
inc
scas
insl
ja
mov
xor
push
jp,pn
add
fbld
adc
sbb
sub
stos
ret
sub
les
movsl
jp
aas
test
mov
or
adc
nop
iret
add
and
cmp
fidivrs
mov
cmpsb
mov
xor
int3
inc
sahf
xor
push
mov
lods
jb
sub
test
mov
ss
subb
mov
pop
cs
sbb
and
xor
aam
push
and
arpl
popa
movsb
stos
lahf
shrb
into
fildll
and
inc
cmp
push
fisubl
pop
jbe
xchg
dec
fwait
push
mov
push
or
push
cld
mov
sbb
mov
dec
lahf
push
xchg
push
ret
mov
lret
scas
mov
clc
lret
mov
mov
sub
cld
mov
imul
sbb
adc
movsl
lcall
xor
sub
mov
test
or
imul
sbb
push
scas
xchg
dec
and
mov
test
xor
adc
cmpsb
xor
xchg
dec
mov
test
popa
sbb
push
movsl
mov
cmp
mov
sbb
fldcw
hlt
ss
rol
sbb
cmp
dec
movsl
sub
scas
push
xchg
out
dec
dec
and
pop
cmp
push
cmpsl
and
jge
mov
mov
sbb
rorl
rcll
imul
mov
insl
jnp
cmp
fbld
sbb
aam
xchg
imul
jo
rcll
and
outsb
mov
cmp
add
mov
cltd
dec
mov
test
sub
shl
or
jmp
adcb
xlat
sbb
test
adc
sub
add
mov
stc
jmp
mov
and
ror
push
cmp
pop
xchg
jns
push
in
and
daa
sub
popa
imul
or
addr16
jns
cltd
enter
in
test
mov
push
xchg
leave
into
leave
pop
pop
fidivl
add
imul
hlt
les
or
je
ret
sub
mov
cmp
push
cltd
mov
pop
in
push
dec
shl
mov
cld
adc
mov
je
adc
lahf
inc
push
pop
ret
mov
and
in
inc
lcall
fsts
movsl
jne
push
repnz
pop
ljmp
mov
repnz
push
aam
jo
mov
movsb
out
push
or
sub
lods
mov
jle
int
aam
xor
aam
jbe
cmp
fbld
test
adc
pop
cmp
cmp
xor
mov
add
jo
into
fldenv
jp
test
shlb
and
aaa
jmp
add
xchg
lds
or
adc
stos
mov
out
or
lock
fcmovu
mov
dec
in
add
test
cmpsl
hlt
loope
cld
stos
inc
cld
add
jp
addr16
jp
fisubs
lahf
dec
pop
push
push
push
cmp
movsl
pop
je
mov
mov
fmull
ds
pop
into
xchg
sbb
jge
arpl
inc
jb
push
bound
into
pop
rclb
add
insb
jb
notl
push
scas
mov
divb
lret
les
xchg
int3
add
fdivs
jb
fmul
xchg
call
jb
push
lods
lahf
adc
adc
add
test
xchg
mov
fidivrs
pop
les
sbb
int3
lods
shl
cli
fsubr
inc
out
jae
jae
jb
jbe
aam
inc
push
pop
sub
sub
sbb
nop
lahf
cmp
inc
jo
dec
adc
pushf
pop
jae
jb
faddl
jo
je
test
test
mov
into
xchg
inc
push
js
fisubl
push
dec
xchg
mov
scas
jmp
lods
aam
fdivrs
call
xchg
xchg
mov
mov
adc
je
sbb
iret
insb
mov
or
adc
adc
inc
sbb
and
sub
or
xor
mov
insb
movsb
adc
movsb
mulb
ljmp
lods
js
mov
mov
inc
add
xchg
hlt
aaa
fisubs
lea
and
xor
jo
cmpsl
js
lret
scas
mov
mov
xor
mov
jle
iret
jo
xlat
jl
push
out
lahf
jecxz
out
jmp
mov
xor
xchg
sti
jl
lods
add
adc
jns
scas
add
pop
aam
xchg
pop
sub
lods
daa
popa
mov
aaa
dec
cmp
inc
inc
scas
dec
jae
jb
fcomps
ficomps
jl
jb
push
add
mov
cmpl
rorl
mov
inc
loopne
add
lock
ss
add
cmp
sbb
mov
and
shrb
ds
cmp
filds
je
ficoms
fmull
and
cmp
repnz
push
cwtl
xchg
pushf
inc
dec
int3
jl
xchg
cld
xor
sub
dec
jl
xor
xchg
jl
mov
fsubrl
push
test
push
hlt
test
add
mov
xchg
in
shrb
cmp
lock
pushf
add
int3
xor
push
adc
sbb
xor
cmp
jo
fldt
sbb
mov
inc
ror
jns
cli
mov
lret
sub
jo
pop
push
inc
cmp
sub
lods
adc
cs
dec
push
mov
shl
clc
call
sbb
xor
ret
mov
xchg
fmulp
int3
in
insb
fs
xchg
movsb
int
nop
scas
mov
pop
in
negb
loop
hlt
into
jl
repnz
in
mov
fsubl
dec
mov
fadds
dec
cmp
add
jns
in
adc
in
inc
add
mov
cmp
add
cli
in
into
add
lcall
notb
fdivl
into
add
mov
jg,pn
fadd
add
mov
aam
js
jl
adc
imul
lret
inc
dec
jl
adc
add
addl
fcmovnu
mov
jo
ficoml
ss
fdivs
je
mov
xchg
insb
fdivl
inc
add
mov
enter
loopne
pop
inc
or
test
push
fs
push
movsb
sbb
xchg
fdivs
jo
iret
push
mov
lock
movsb
dec
mov
adc
add
dec
movsb
or
in
cmp
fisubl
jge
mov
mov
xor
add
pushf
inc
jle
movsb
ficomps
push
sub
fadd
call
lock
fdivr
clc
lret
mov
lret
jb
and
mov
cld
mov
dec
sbb
aaa
push
sub
sbb
lret
rolb
mov
ja
and
in
lock
aam
clc
add
add
ficoms
stc
clc
mov
sub
mov
mov
ds
jl
les
xchg
hlt
inc
in
fxch
pop
cmpsb
out
xchg
lock
clc
jae
jb
inc
hlt
aaa
dec
scas
pop
cmpsl
mov
clc
hlt
adc
xchg
sub
push
jl
adc
cmpsl
jo
add
xor
and
idivb
add
mov
in
and
stc
fs
pushf
push
pop
test
pop
sub
lods
pusha
and
push
jae
icebp
test
inc
mov
pop
cmp
loopne
push
mov
sbb
inc
rorb
adc
loope
shrb
out
sub
pusha
dec
fs
fsts
xchg
and
loopne
pop
loopne
pushf
movsb
mov
jecxz
fsubl
shl
lds
clc
int
adc
cmpsb
xor
mov
test
sbb
mov
roll
pusha
push
lock
dec
stos
push
mov
fidivs
nop
xchg
cmp
jl
sub
pop
test
pop
push
rclb
inc
in
je
mov
lock
mov
jl
call
faddl
or
fsubs
mov
sbb
add
push
loop
pushf
dec
or
insb
cld
je
jns
or
lret
test
adc
jle
mov
mov
sarb
mov
dec
adc
inc
fs
jb
inc
ror
push
push
xchg
js
fisubrl
data16
pop
cwtl
lahf
pushf
adc
out
mov
xchg
mov
stos
cld
iret
iret
push
fmul
fmull
loopne
push
call
cld
adc
imul
mov
mov
xchg
push
in
leave
sbbb
xchg
lods
leave
dec
fsubl
or
xor
cmp
lods
hlt
cmpsb
loopne
xor
movsl
fs
xchg
xor
hlt
add
jmp
mov
push
aam
in
pop
inc
js
ds
fadds
or
jnp
shll
jo
pop
outsb
mov
pop
and
les
fdivrs
xchg
clc
leave
push
and
inc
push
ds
frstor
nop
and
and
loopne
mov
push
mov
xor
inc
jo
fbld
lods
mov
scas
movsb
test
push
push
mov
pusha
mov
and
xchg
mov
popf
xor
loopne
or
out
or
dec
mov
pop
nop
cli
xchg
insb
add
test
lods
shll
mov
les
jb
flds
lahf
fsubrs
ror
gs
jg
bound
xchg
adc
sub
cmpsl
and
push
xchg
xor
cmp
inc
xor
dec
jl
jl
movsb
lahf
pop
adc
push
movsb
nop
test
jno
inc
mov
mov
insl
in
xor
cmp
lods
scas
pop
test
mov
bnd
adc
shrb
adc
aam
pushf
dec
movsl
int3
add
cld
xor
ss
xchg
pop
inc
xor
push
mov
lret
lret
bound
xchg
adc
mov
pop
repnz
pop
scas
sahf
pop
mov
sub
clc
cmp
out
sub
cmp
jle
pop
lahf
bound
aam
cmp
sbb
push
lahf
cmp
mov
and
mov
inc
cmc
sub
push
or
repz
inc
movsl
pop
data16
lock
and
cmp
out
mov
test
mov
lahf
in
pop
or
les
and
scas
fisubs
mov
nop
dec
mov
fmul
call
or
sub
xor
ljmp
inc
lods
push
ss
js
pushf
in
xor
cmp
dec
dec
in
mov
sub
fcoml
lret
loopne
mov
mov
and
pop
jg
rorb
xchg
add
push
sbb
pop
cwtl
xor
xor
dec
push
sub
and
in
fdivs
outsb
f2xm1
lock
add
xchg
mov
sub
jl
sub
xor
adc
fidivs
stos
je
test
adc
sub
jmp
in
movsl
pop
lds
and
in
and
movsl
or
push
pop
and
pop
sub
or
cmpsb
faddl
sub
xchg
dec
mov
data16
or
push
xchg
lahf
sbb
mov
loop
test
adcb
push
rcrb
sub
pop
or
xor
enter
add
sub
mov
and
push
adc
test
add
adc
sub
mov
flds
xchg
test
mov
lods
aam
clc
mov
adc
mov
mov
xchg
test
and
xchg
pusha
or
pushf
xchg
ds
shll
nop
sub
lods
pusha
aam
inc
xchg
sub
xchg
in
cmp
add
cli
xor
cmp
mov
mov
add
cmp
test
or
les
sbb
xchg
push
out
mov
mov
and
movsb
sub
xor
rcr
or
rol
xchg
cld
or
push
jmp
movsb
movsb
push
mov
add
fsubs
movsl
hlt
jle
ss
insb
in
inc
jl
or
and
pushf
sbb
adc
lret
sbb
jnp
lods
jp
mov
movsb
mov
rclb
xchg
pop
faddl
pusha
adc
lret
gs
xor
or
es
xor
xchg
and
test
cmpsb
mov
or
or
jo
mov
mov
push
enter
imul
cmp
fldl
jo
pop
test
into
lods
or
lock
rcr
shlb
test
pushf
lods
and
cld
jmp
cmp
jo
fs
mov
cli
iret
les
in
hlt
clc
dec
iret
add
dec
adc
inc
cmp
add
test
js
cmpsb
pushf
add
lods
inc
push
mov
add
cmpsl
xor
pop
fs
testb
or
mov
or
mov
cs
bound
xchg
inc
mov
jg
in
clc
fs
inc
movsb
insb
leave
xchg
popa
xchg
movsb
mov
mov
fdivl
add
jbe
lock
xor
inc
loopne
test
pop
test
xchg
xchg
enter
int3
add
hlt
jmp
cmpsb
inc
fcoml
insb
js
adc
mov
mov
in
xchg
cld
fs
fsubrs
inc
clc
push
je
mov
daa
xchg
les
aam
cld
and
and
rorb
jp
add
inc
insb
cwtl
repz
cmpsl
enter
fs
les
aam
inc
mov
push
and
je
mov
xchg
loope
movsb
popa
lods
mov
mov
adc
lret
shl
push
dec
hlt
int
aam
or
mov
jl
pop
inc
rcr
mov
pop
dec
int
cmpsb
aam
aam
sub
jl
sbb
lret
cld
add
or
pop
int
fisubl
jns
mov
push
sbb
xchg
add
test
push
xchg
sbb
clc
movsb
fisubrs
lret
pushf
call
mov
add
loop
mov
lods
pushf
loope
mov
in
xor
add
out
jl
or
lock
jo
test
jl
jmp
movsb
cmp
inc
insb
push
cmp
lret
mov
inc
dec
clc
cmpsb
aam
in
pusha
xor
cmp
or
sub
xor
jns
hlt
jle
sbb
lret
xorb
adc
test
movsl
les
push
notb
jo
fisubrs
push
cmp
testb
je
clc
lds
adc
in
add
cmp
xchg
sub
inc
or
mov
clc
scas
cmpsl
jl
cld
nop
mov
dec
faddl
lock
jl
adc
js
and
pop
adc
adc
jle
call
cmp
pop
xor
lods
lds
mov
lock
sbb
je
inc
and
test
mov
aam
adc
or
adc
cmp
or
rcl
and
clc
sub
scas
and
lret
outsb
push
loope
push
clc
xchg
test
dec
movsb
adc
fisttpl
mov
mov
inc
loop
xchg
les
shl
out
or
sub
sub
inc
out
sbb
adc
call
fs
dec
or
add
dec
cld
clc
xor
lahf
adc
cmp
lock
sbb
sub
dec
push
lods
and
in
add
dec
and
dec
push
fidivs
lock
mov
rcl
imul
and
ljmp
rclb
cwtl
add
mov
jo
hlt
sbb
xchg
sbb
call
insb
xor
xchg
sbb
xchg
mov
aam
call
and
push
cmp
lcall
mov
cwtl
mov
mov
dec
dec
push
aam
jl
cmpsb
mov
in
push
push
mov
mov
pop
hlt
mov
or
dec
insb
adc
mov
xchg
in
ljmp
cmp
clc
pop
in
pop
mov
jp
and
fsubrs
in
movsl
cld
shr
mov
inc
in
nop
pusha
call
loopne
mov
mov
andb
pushf
int3
test
jb
lock
cld
fiaddl
les
jns
repz
dec
popa
ljmp
je
jl
jmp
xchg
idiv
or
cld
outsb
mov
or
lock
rclb
in
cmpsl
hlt
test
add
ljmp
xor
sbb
mov
mov
mov
adc
ds
xchg
inc
cmc
negb
xor
sahf
les
rorb
dec
adc
and
imulb
test
popa
fcoml
fdivrs
and
js
mov
les
cmpsb
xor
adc
js
xor
mov
xchg
repnz
rcrb
in
pop
adc
pop
popa
repnz
dec
mov
mov
dec
movsl
adc
dec
sub
pop
lods
inc
stc
mov
mov
dec
dec
adc
add
and
sub
mov
rcrl
xor
add
jb
cmc
xchg
cs
cmpsb
clc
mul
sub
cmpsb
push
in
sbb
and
clc
rclb
int
int3
cmpsb
mov
adc
repnz
mov
es
inc
mov
sub
adc
mov
sub
adc
in
lret
cld
and
mov
dec
lods
sub
fs
mov
test
repnz
fadds
sbb
adc
cmc
int3
or
sbb
xchg
mov
or
ss
sarb
mov
int3
aam
dec
lock
or
xor
shlb
cmpl
xchg
fcomps
rorb
fs
data16
mov
lods
jns
xchg
les
cmp
cmpsb
sub
pop
push
and
add
int3
adc
or
roll
xchg
jo
gs
and
lock
mov
xor
cs
mov
movsb
and
push
xor
sub
nop
xchg
pop
or
mov
fbstp
cwtl
dec
popa
xchg
insb
stos
xchg
adcb
test
les
push
loop
shll
cld
adc
push
sti
loop
or
cli
xor
pop
icebp
test
call
or
sbb
inc
repnz
movsb
ss
adc
lret
sahf
hlt
inc
push
cmp
inc
in
or
add
cmp
inc
mov
mov
call
dec
cmp
jo
mov
sbb
xor
mov
adc
xor
inc
push
and
pusha
test
xchg
mov
adc
push
xchg
inc
pop
or
dec
insb
dec
push
mov
enter
lock
movsl
sbb
fs
je
iretw
mov
data16
pop
push
push
hlt
mov
sbb
fs
fisubrs
nop
in
adc
lock
cmp
fsubrs
inc
jo
push
pop
xchg
pop
repnz
hlt
mov
daa
or
dec
cmpsl
pop
xor
mov
call
pop
sub
or
inc
or
movsb
push
call
cli
xchg
cmp
test
inc
push
sbb
jo
vmovq
rcl
into
mov
sbb
mov
sbb
and
fidivs
cltd
lock
sub
sbb
adc
es
xlat
jno,pn
jmp
movsb
jl
push
jae
fisttps
stos
mov
jl
push
ja
filds
bound
cmp
push
jae
fisttps
pushl
es
pusha
je
call
adc
insb
xlat
mov
push
movsl
pushw
pop
and
pushf
cmp
adc
inc
push
cmp
cmp
xor
movsb
sub
add
push
ficomps
lret
shlb
xor
lods
ret
push
dec
adc
lock
xchg
inc
and
pop
sbb
mov
or
or
lock
in
or
adc
loopne
stc
in
and
leave
cli
ficoml
or
stc
into
movsl
enter
aam
loopne
in
push
mov
loop
lcall
sub
into
ror
xor
lods
les
addb
push
sbb
out
rcll
mov
roll
leave
fsubrs
insb
cmpsw
fs
adc
cmpsl
dec
pop
or
inc
cmpsl
bound
cmp
js
pop
adc
je
and
sub
jp
adc
aas
xor
mov
movsl
movsb
rcll
sti
mov
jbe
lds
fidivs
fimuls
das
mov
rorl
adc
lcall
pop
adc
cmp
sahf
jns
cmpsl
bound
sbb
lock
or
jns
daa
data16
scas
les
stos
scas
ret
sahf
leave
icebp
mov
mov
sub
cmp
in
or
push
cmpsb
add
cli
imul
inc
ret
call
adc
lret
into
or
arpl
sbb
inc
pop
mov
fbstp
cmp
inc
sub
jo
pop
xchg
fcomps
jmp
jb
adc
enter
jl
iret
dec
idivb
iret
dec
in
dec
int
iret
pop
mov
pop
xacquire
mov
ja
call
int3
pop
or
jns
cmpsl
bound
inc
push
test
inc
push
movsl
icebp
dec
and
inc
sub
sub
pop
fs
pop
sub
fdivrl
sar
int3
and
dec
jns
daa
mov
and
mov
jmp
mov
mov
movsb
mov
movsl
jno
movsl
jo
pop
inc
loopne
inc
fcoml
inc
fists
cmpsl
mov
test
lods
fimuls
jl
push
jno
lods
in
jno
mov
iret
dec
mov
xchg
fiadds
and
pushf
into
pop
ljmp
xchg
jns
cmpsl
imul
pop
lock
mov
cld
cmpsw
push
dec
scas
xchg
cmp
jmp
xchg
movb
jmp
jbe
xor
insb
lods
fs
ss
push
out
movsl
inc
cmp
fisttpl
out
xchg
xor
fisttpl
out
xchg
es
cmpsl
call
ret
adc
inc
add
out
xchg
divb
fisttpl
out
xchg
out
loopne
dec
fsubr
mov
dec
xor
adc
sbb
xor
cs
adc
xor
fists
shlb
clc
sbb
and
cmp
movsl
into
cmp
fisttpl
out
mov
cmp
push
jae
fisttps
pushl
jae
fisttps
pop
mov
pusha
jns
xchg
cmp
fildll
scas
adc
or
into
fcmovne
movsl
sbb
fld
and
cmpsb
cmp
lods
cmpsb
iret
push
sbb
adc
ds
jns
mov
mov
jae
cmpsl
pop
hlt
jmp
jbe
mov
data16
or
rcrl
lods
bound
mov
adc
aaa
sbb
leave
jg
mov
push
lret
stc
nop
daa
jl
jmp
nop
aaa
or
cld
push
enter
lret
popa
sbb
push
xor
mov
lods
lock
inc
daa
icebp
adc
imul
mov
pop
jle
icebp
jp
inc
jbe
inc
shl
xchg
fidivrl
cmpsl
icebp
into
movsl
sub
repnz
sbb
mov
mov
dec
push
mov
testl
mov
mov
mov
push
out
fildl
cmp
push
popa
jp
pushf
or
push
pop
lret
icebp
pop
and
scas
pushw
or
pusha
xchg
add
mov
mov
nop
leave
into
ds
mov
idivb
idivb
js
divb
divb
shrb
hlt
inc
testb
pop
sub
xchg
in
stos
jo
fsubrs
lcall
adc
sub
and
and
int
hlt
lock
dec
je
lods
inc
jo
daa
push
in
call
inc
cmp
xchg
push
adc
std
or
sahf
push
cwtl
ss
fiadds
insb
sub
and
lods
add
add
sub
sub
jl
xor
gs
test
repnz
in
push
cmp
jmp
repnz
out
cmp
mov
sbb
imul
or
stc
push
pop
cmc
cmpsl
push
pop
fisubl
mov
cmp
cmpsl
inc
pop
cli
cmpsl
cmp
in
jb
dec
mov
lret
hlt
jno
scas
loop
stc
sarw
fistl
test
sbb
fs
cs
rorb
mov
sti
cmc
les
xor
mov
xor
stos
sti
movsl
movsb
cmp
iret
movsb
insb
jno
mov
jae
sub
aas
mov
aad
js
fnstenv
hlt
jl
push
jbe
cmpsb
rclb
mov
lock
pop
cmpsl
mov
pop
in
push
ret
or
daa
rcr
dec
mov
or
jo
leavew
mov
inc
fmulp
cwtl
mov
inc
shlb
adc
xor
or
into
sub
jg
es
and
leave
hlt
je
hlt
jb
aam
jmp
push
pop
mov
lods
adc
mov
aam
adc
dec
cmp
add
adc
mov
movl
movsb
je
push
push
xchg
or
ds
adc
mov
and
faddl
daa
icebp
out
sub
push
mov
cmp
rcl
dec
pop
ljmp
mov
outsb
cmpb
cmp
cmp
movsl
subb
pusha
popa
ret
mov
xor
loopne
dec
mov
jbe
xor
mov
fdivrs
lock
xchg
or
mov
frstor
pop
pusha
cld
nop
sbb
xchg
ror
jbe
and
or
inc
clc
inc
adc
pop
in
bound
sub
or
or
enter
jb
sbb
out
pop
loope
nop
lods
dec
scas
ror
push
sbb
cmp
loope
adc
in
lret
lods
nop
add
or
lret
push
pop
xor
jb
lods
clc
push
push
cmp
dec
cmp
xor
shlb
clc
jp
mov
out
inc
jp
fadds
xor
les
fsubrl
in
aaa
adc
sbb
xor
xor
mov
dec
ret
pop
add
in
pmuludq
jg
movb
xchg
pop
xchg
daa
lcall
stos
dec
scas
jle
lahf
mov
mov
inc
dec
dec
sar
fdivrp
loop
out
ljmp
cli
incb
incb
decb
decb
adc
push
sbb
push
and
es
sub
cs
xor
ss
cmp
incb
inc
decb
dec
push
push
pop
pop
fbld
and
outsb
jl
jl
jl
jl
ds
mov
mov
andb
inc
pusha
adc
pop
gs
subl
roll
hlt
lock
subb
stc
aas
aas
jmp
mov
inc
div
mov
loope
clc
fisttpll
in
in
scas
and
nop
xchg
xor
dec
daa
xor
imul
cmp
ja
mov
ss
orl
push
push
dec
and
test
aaa
addb
dec
fs
imul
push
and
jecxz
cmp
sub
andl
pop
inc
imul
inc
dec
cwtl
nop
mov
dec
stc
mov
loope
xor
add
push
inc
insb
daa
sub
stc
push
out
cli
mov
mov
cmc
sub
in
aam
jp
inc
mov
in
loope
cmc
in
hlt
cmp
mov
arpl
pop
pusha
call
pop
repnz
inc
cli
jmp
repz
shll
scas
ret
push
mov
mov
shlb
loope
ret
hlt
push
mov
loop
repnz
rolb
inc
ds
dec
mov
push
mov
cmp
leave
pop
cwtl
aas
cmp
insb
xor
std
addl
pop
lret
scas
inc
push
and
popa
cwtl
cmp
cmp
addb
dec
xor
xor
popf
lock
jb
js
popa
mov
cmp
cltd
into
mov
roll
roll
mov
cmp
cmpsl
xchg
fcomip
xchg
lods
mov
cli
lock
movsb
and
or
push
jns
rcll
mov
and
adc
sti
es
sub
jp
sub
scas
into
xchg
cmpsl
test
mov
into
iret
das
rorl
movsb
mov
mov
push
push
cmp
cmpsl
lods
daa
mull
in
mov
mov
popf
repnz
in
repz
lock
and
test
sti
ret
lahf
mov
lret
push
lods
loop
test
aaa
test
addl
repnz
fmuls
cwtl
dec
dec
aaa
fs
in
test
adc
cwtl
out
xchg
lea
sbbl
test
sbb
shlb
fsubp
mov
mov
mov
mov
aam
jmp
ss
loope
cmp
inc
adc
mov
jge
lret
sub
out
in
xchg
lea
stos
shll
push
add
paddw
test
ret
add
sub
aaa
clc
add
rcrl
movsb
arpl
adc
pop
push
mov
mov
cltd
jmp
les
or
mov
add
jmp
ljmp
addl
pop
andl
lock
adc
mov
xchg
xchg
or
mov
roll
addr16
mov
xchg
ret
js
mov
lea
fldenv
cmp
adc
scas
xchg
sti
jle
and
stos
sbb
lahf
shrl
add
in
cmpsl
insb
or
pop
mov
dec
push
xchg
xchg
push
or
test
dec
xchg
rcll
push
cltd
inc
and
dec
jecxz
mov
mov
shrb
repnz
out
rcll
andl
ret
cmc
ja
mov
inc
adc
push
int3
add
pop
mov
add
inc
inc
xchg
cmc
mov
shlb
cmp
or
mov
clc
movsb
out
xchg
mov
inc
push
and
stos
mov
test
inc
outsl
mov
push
inc
fwait
push
shlb
orl
add
imul
fldenv
jbe
sub
test
push
enter
int3
inc
or
subl
or
xchg
mov
inc
lds
addb
sbb
cmp
je
popa
push
add
lds
call
popa
pop
fmull
mov
lods
add
cmp
shr
repnz
cmp
jbe
xchg
mov
les
mov
xchg
push
mov
mov
das
cmpsb
cltd
bnd
je
cmp
jg
jo
sub
jle
mov
rorl
insb
test
btr
std
insb
or
sahf
ret
mov
js
in
cmp
shll
sub
mov
sarl
jbe
fldenv
mov
jl
mov
test
test
cmp
and
iret
js
jnp
pop
mov
bnd
orl
cmpsl
sub
pop
xchg
hlt
inc
add
mov
out
je
cmp
jo
inc
push
push
adc
mov
pop
and
test
test
test
xchg
popf
pop
sets
lret
push
adc
fs
scas
xchg
outsb
pop
das
nop
cmp
ret
add
pop
xor
pop
sahf
xchg
int
push
xchg
pop
xor
outsb
pop
testb
test
pop
jo
les
aaa
out
jno
xchg
movsb
xchg
jge
mov
mov
adc
shlb
loop
pop
fwait
inc
repnz
das
pop
lds
xchg
jl
inc
xchg
jle
in
add
mov
lds
outsb
pop
popa
mov
mov
mov
shll
add
mov
bound
loop
mov
mov
push
xchg
in
jno
mov
cwtl
add
mov
test
dec
iret
mov
aas
mov
aaa
mov
xchg
ljmp
dec
test
adc
shlb
or
out
pop
adc
rcr
push
repz
xchg
push
enter
dec
das
push
inc
cwtl
cwtl
cmpsb
cmc
adcl
mov
adc
hlt
roll
popl
cmc
jno
js
jg
jp
mov
inc
inc
pop
sub
orl
shl
iret
cmpsb
xor
nop
pusha
subb
inc
mov
jle
jge
jl
or
pusha
xor
or
mov
orb
add
rcrl
flds
incl
leave
cmc
imul
xor
fmuls
or
fmuls
mov
popf
jae
ror
pop
movsb
cmpsl
fcomps
clc
out
mov
lret
out
and
mov
and
cmp
out
std
pop
jbe
stos
rorb
mov
xchg
or
xchg
cmp
dec
sar
pusha
mov
leave
popl
jne
dec
loop
mov
mov
test
inc
fisttpll
mov
xchg
adc
push
dec
jl
mov
or
pop
fadd
rcrl
mov
and
mov
inc
xchg
rcl
xor
fistl
fstpt
aam
push
pop
or
imul
or
pop
sbb
clc
nop
mov
insb
lods
mov
xlat
lods
xchg
sarl
and
insb
test
fs
pop
out
or
fs
jecxz
push
push
mov
mov
data16
jge
pusha
fs
xor
pop
pusha
mov
inc
sbb
je
fcmovnu
imul
test
xchg
push
into
pop
push
outsb
sti
inc
rcr
fiadds
sahf
or
fsubrl
push
test
aad
cmpsb
cmpsl
add
jge
movsb
or
xchg
xchg
lcall
cli
sar
mov
nop
jle
add
mov
and
mov
stos
in
push
movsb
je
pop
std
jle
ficoml
dec
testl
jle
test
and
push
cmp
sub
bnd
in
fldt
cltd
lcall
or
popf
mov
divl
sbb
mov
outsl
rcrl
pop
xchg
lock
and
xchg
add
lret
adc
ret
jmp
pop
adc
xchg
cmp
rorb
int3
mov
pop
popf
sti
call
mov
mulb
imul
in
imul
pop
mov
push
push
in
cmp
mov
movsb
dec
sarl
jp
dec
add
push
mov
xchg
sbb
jg
xchg
add
jp
in
mov
jl
mov
loop
mov
neg
mov
mov
shlb
call
sbb
jmp
or
mov
push
pop
enter
cld
sti
jns
mov
xor
gs
movsb
jns
mov
mov
add
repz
mov
rorl
in
fistl
repz
rcr
jg
push
cli
lods
push
inc
js
mov
cs
mov
pushf
rcl
cli
lcall
push
lds
shlb
shl
push
stc
sub
stos
ds
mov
sub
xchg
add
test
xchg
and
xchg
jo
into
xchg
insb
call
rorl
stos
insb
xchg
ljmp
aad
xor
mov
and
dec
dec
mov
cmp
pop
into
xchg
test
mov
cmpsl
sub
push
and
jl
inc
xchg
or
xorl
mov
scas
mov
ret
push
cmpxchg
movsl
cmp
ret
nop
push
lods
push
shll
cmp
repz
add
pop
dec
popa
es
and
mov
adc
repnz
xchg
or
dec
imulb
ss
sbb
adc
pushf
adc
mulb
pop
shrb
xor
in
mov
inc
js
jno
enter
js
ret
fildl
mov
loop
dec
popf
adc
jge
nop
xchg
cmp
je
mov
dec
hlt
or
mov
fwait
or
ret
fnstenv
cltd
mov
imul
jmp
xchg
inc
ret
or
push
xchg
mov
or
stos
mov
add
add
jno
imul
add
xchg
cli
inc
cmp
push
mov
jbe
hlt
xchg
into
cmpsb
incl
push
lret
cmpsb
xor
pop
icebp
and
sbb
stos
xchg
inc
in
fadd
repnz
pop
movsb
pop
stos
add
pop
cwtl
adc
dec
mov
scas
negb
jbe
xor
popf
xchg
lret
pop
popl
lcall
jo
sub
rclb
or
lods
xchg
push
cmpsb
lea
jl
add
cmp
repnz
push
push
bound
lea
int
aas
or
je
das
cmpsb
daa
push
fisubl
jb
add
out
insl
ret
jge
jmp
sub
lods
leave
dec
xor
xchg
lods
mov
xchg
in
jnp
mov
movsl
mov
decb
sahf
dec
push
rorl
xor
jge
enter
imul
ds
push
outsb
lcall
inc
js
ret
loopne
enter
iret
and
dec
shlb
jl
cmp
scas
mov
pop
jae
dec
jl
add
ja
mov
rclb
movsb
push
dec
adc
fstps
xorb
idiv
inc
pushf
sub
lret
sbb
stos
mov
leave
dec
inc
dec
push
cli
dec
mov
sbb
pop
dec
pop
in
mov
ret
sti
xor
les
les
dec
mov
int
mov
xor
subl
push
stc
mov
cmp
leave
jne
sub
jle
push
sahf
aam
pop
dec
rcrb
popa
loope
movsb
mov
xlat
dec
jb
cld
adcb
xor
sub
mov
cmc
rol
mov
xchg
push
xchg
push
dec
push
lds
into
sbbl
pop
scas
xor
xchg
xor
fiadds
or
pusha
addl
hlt
stos
jae
push
outsb
xlat
dec
mov
mov
scas
out
push
popf
addb
add
xor
jge
push
xchg
adc
addr16
cwtl
cmp
pusha
mov
je
bound
xchg
ds
mov
cmp
cwtl
jo
orl
enter
push
mov
push
mov
and
fmuls
ficompl
and
mov
sbb
xchg
cld
cmp
inc
add
or
in
jl
addl
push
sbb
mov
add
lret
jmp
mov
ds
push
cmp
xchg
aaa
mov
sub
cmovp
pop
clc
mov
cld
loop
incb
inc
sub
fxch
jmp
adc
mov
push
xchg
add
or
aad
imul
jmp
pusha
cld
out
mov
mov
sbb
inc
pusha
mov
fsubl
negb
sarl
not
ror
jg
scas
mov
add
mov
rcrb
lcall
arpl
add
shr
xchg
dec
bound
mov
push
std
fidivl
nop
mov
adc
mov
cmpsb
nop
xchg
lds
adc
add
nop
rcrb
sti
test
dec
or
add
add
xchg
pop
xor
mov
or
in
enter
roll
mov
or
out
enter
clc
mov
dec
xor
int3
sbbl
imul
xchg
mov
mov
sub
push
test
fisttpll
dec
shrl
pop
in
rorb
shrl
push
fwait
sub
xlat
sbb
jecxz
adc
stos
xor
and
mov
mov
ret
push
int
sbb
sbb
test
mov
or
leave
dec
or
mov
inc
mov
push
int3
pop
push
adc
int3
test
mov
int3
sbbb
movsb
mov
aam
or
andl
or
cltd
xor
add
jo
movsb
repz
mov
mov
movsl
sub
mov
jmp
xchg
push
mov
pushf
test
leave
inc
loop
sub
sub
scas
test
push
test
movsb
mov
cld
ljmp
leave
lds
mov
ja
pop
or
push
lock
or
mov
add
or
add
das
and
or
adc
inc
sub
xor
int
or
ret
dec
shr
adc
add
mov
rcrb
dec
ret
xchg
inc
ret
sarl
call
inc
xchg
sub
pop
fidivl
jno
inc
mov
adc
lock
xchg
int3
iret
dec
lods
test
sahf
cmc
push
or
xchg
fucom
sbb
mov
shlb
jnp
or
scas
mov
test
call
xchg
orl
int
adc
stos
and
and
rcl
movsl
pop
test
and
xchg
repnz
and
or
xchg
mov
test
dec
int3
xlat
push
mov
rclb
mov
xchg
nop
mov
mov
rcl
mov
movsb
mov
pop
or
jo
or
dec
bound
outsb
lahf
mov
xchg
mov
call
inc
int3
imul
xchg
ror
popf
test
enter
or
pushf
xchg
dec
cmpsb
test
rcl
enter
jno
lahf
shl
leave
iret
mov
jmp
or
rcl
rcl
lds
xchg
adc
aaa
test
xchg
mov
adc
in
nop
lods
pop
notl
xchg
mov
mov
jl
notl
call
xchg
test
loopne
test
xchg
jnp
mov
mov
push
xlat
mov
xchg
mov
cwtl
mov
js
les
out
lahf
mov
mov
mov
data16
mov
fistps
repz
jno
mov
aam
mov
ficomps
leave
lods
das
addr16
inc
adc
into
xlat
sbb
rclb
fucom
addr16
mov
add
mov
mov
cwtl
mov
jae
or
or
and
popl
lret
fisubl
mov
inc
jne
in
xchg
mov
repnz
jecxz
jae
or
addr16
mov
adc
int3
inc
fstp
xor
repnz
xor
mov
incb
mov
nop
jmp
adc
clc
mov
sub
int3
rcl
cld
push
std
out
add
xchg
hlt
or
mov
mov
jecxz
add
xor
inc
mov
cltd
mov
in
cmp
cmp
mov
mov
or
cmp
jecxz,pt
mov
shll
shlb
mov
jl
sub
aad
mov
sub
sub
mov
sub
sub
mov
jecxz
xor
inc
or
dec
test
dec
lods
decb
dec
xchg
dec
add
add
ret
pop
sbb
push
sbb
dec
mov
sbb
sbb
ss
int
fisubs
addl
push
adc
pop
insl
mov
insl
mov
jecxz
xor
dec
xchg
nop
pop
mov
add
imul
jl
jno
pop
or
out
rcl
or
push
pop
mov
enter
mov
lock
pop
sub
leave
lahf
popa
xchg
bound
mov
jbe
ja
js
jns
push
adc
insl
adc
outsl
leave
jo
mov
mov
push
rorb
xchg
pop
mov
orb
mov
out
xchg
movl
xchg
mov
roll
sahf
les
cwtl
std
not
pushf
mov
movsb
add
pop
xchg
test
cmp
in
inc
cmpsl
in
lret
jnp
push
setge
cmp
outsb
nop
arpl
mov
xchg
les
cmp
arpl
mov
mov
test
out
sub
les
mov
std
js
push
cs
add
mov
mov
test
lahf
cmpsl
add
aad
pushf
xor
inc
push
cmp
sub
mov
xchg
sbb
leave
movsb
jmp
and
adc
and
notl
lcall
pop
lcall
push
and
push
and
mov
dec
fimuls
nop
cmp
in
cld
gs
cmp
js
xchg
ljmp
scas
mov
repz
xchg
xor
aaa
mov
mov
stc
and
or
adc
push
fisubs
ret
loope
pusha
lods
insb
pop
adc
and
je
mov
pop
call
mov
fimuls
mov
sbb
xchg
cmp
jno
dec
insl
es
movsb
ljmp
cwtl
fst
pusha
nop
mov
inc
xchg
pop
mov
aad
mov
rcrl
lret
shrl
lods
repnz
jmp
dec
push
fs
xchg
dec
call
subl
pop
pop
aaa
std
sbb
push
imul
mov
pop
push
xchg
xchg
test
add
in
aam
in
std
inc
push
and
xchg
shll
stc
testb
aaa
dec
sbb
pushl
cmp
ss
jo
addr16
std
lea
adc
xchg
cmp
repnz
js
ret
sarb
sub
or
repz
pop
push
cld
insb
stos
bound
dec
aaa
mov
lahf
ss
out
test
aaa
sarb
mov
xchg
movsb
aaa
and
push
rcrl
mov
mov
add
mov
orl
add
lock
inc
test
popa
pop
fisttpl
dec
push
in
jge
popa
cmp
aaa
xor
decl
cmp
xchg
mov
insb
std
sarl
and
adc
repz
orl
or
cmp
and
mov
in
loopne
cmp
cmp
sub
cmp
ret
cltd
mov
jmp
arpl
shll
ret
push
lock
push
cmpsl
mov
mov
xchg
or
fsubl
xchg
mov
leave
dec
or
or
push
lock
pop
mov
or
mov
pop
push
jle
or
xor
es
or
dec
xchg
sbbl
or
xor
sbb
scas
xchg
test
xor
xor
or
push
and
xor
dec
xchg
ret
mov
test
fists
in
pop
jg
xor
jmp
or
fsts
cltd
mov
js
mov
mulb
adcl
adc
or
xchg
cmp
imul
insb
xor
cmp
fstps
xchg
icebp
mov
loope
je
out
mov
sti
mov
adcl
lret
sbb
stos
mov
or
lahf
or
insl
xor
ret
je
sub
dec
xchg
ret
jge
sub
das
xchg
add
in
sbb
xor
orl
test
lods
jb
lret
jecxz
mov
in
xor
pop
ljmp
stc
adc
fxch
mov
rorb
or
mov
mov
ss
cwtl
loope
jne
pop
or
loope
icebp
jnp
das
out
jmp
or
inc
mov
and
insb
lret
jbe
popa
push
jl
add
popf
mov
lods
inc
or
lret
aam
mov
mov
es
jge
and
pop
lods
movsb
inc
sbb
pushf
das
data16
or
adc
push
lahf
mov
cwtl
add
mov
jg
dec
jae
arpl
adc
popa
call
imul
push
mov
enter
jae
add
enter
adc
or
mov
outsl
push
call
cltd
test
fldt
pop
insl
repz
ja
or
dec
lret
subl
adc
mull
sarb
enter
sub
mov
rcrl
fwait
add
cmp
and
push
mov
rcrl
sub
sub
jnp
pop
pop
clc
xlat
ljmp
sub
cwtl
cmpsb
or
insb
lods
ja
xchg
add
paddd
ficoms
pop
rorb
lahf
leave
decb
in
pop
mov
or
sbb
fnstcw
xchg
data16
lods
test
jg
jecxz
dec
loop
dec
shrl
mov
mov
fcomps
rorb
xchg
pusha
lods
insl
iret
sub
adc
xchg
pop
nop
enter
cmpsb
mov
dec
cmp
cwtl
dec
pop
sub
cmp
inc
in
leave
dec
mov
stc
cmpb
in
ret
xchg
faddp
fwait
stos
cwtl
inc
inc
and
cli
push
nop
mov
mov
mov
stos
leave
inc
fldenv
lret
push
jae
push
fcmovnu
push
icebp
sub
inc
push
loop
sub
ret
add
sahf
xchg
mov
aaa
test
add
sub
daa
jg
sub
ret
nop
pusha
daa
jb
movsb
xchg
jecxz
sbb
xor
fwait
xchg
sub
xorl
jae
adc
bnd
call
outsl
sarb
daa
dec
aad
push
mov
es
adc
es
and
mov
xor
jb
xchg
sub
mov
repnz
adc
leave
in
aad
mov
cld
scas
cli
pop
push
jb
push
add
and
xchg
data16
push
jl
inc
push
and
sub
adc
add
push
and
jmp
xchg
and
mov
cli
xchg
andl
stos
sub
lcall
stc
dec
insb
xor
and
dec
popl
adc
test
sbb
add
and
pop
data16
jg
adc
movsb
adc
jno
dec
sahf
mov
inc
and
mov
lret
and
ficompl
lcall
jne
cmc
movsl
cs
imul
fdivrl
int
lock
push
adc
popa
mov
cmpsl
xor
nop
and
or
inc
or
repz
or
hlt
xchg
xchg
adc
push
sbb
add
sbb
ret
je
notl
push
clc
mov
add
jne
stc
stc
mov
les
pinsrw
and
daa
sahf
or
pusha
and
add
mov
adc
push
es
mov
mov
pinsrw
ds
fs
mov
lret
lods
push
ret
push
sub
in
mov
les
ljmp
jo
push
add
bound
dec
movsb
or
stos
jb
scas
lea
iret
xlat
and
push
pop
jbe
add
push
sbb
popf
inc
hlt
and
das
jg
scas
inc
jl
sbb
push
mov
test
jl
adc
cmp
fsubrs
and
ret
into
mov
or
test
arpl
stos
nop
je
sub
sbb
nop
nop
mov
or
shrl
inc
inc
sti
insl
repnz
xchg
adc
sarl
mov
and
nop
stos
sub
add
lds
dec
mov
daa
fcomp
test
lock
enter
sbb
mov
mov
sub
xor
or
push
insb
push
mov
icebp
into
iret
and
sub
jge
js
je
xor
jbe
push
mov
cmp
xchg
dec
lock
cwtl
rol
popf
sbb
inc
pop
call
test
xchg
shr
shrl
sbb
icebp
pop
and
dec
inc
dec
adc
cmp
pop
jmp
xor
sarl
fsubs
popa
pop
fsubr
in
and
shll
ret
xor
daa
insb
mov
je
shl
sub
dec
fists
popf
cmp
xchg
mov
mov
int
arpl
sub
jns
dec
pushf
ret
mov
imul
pop
push
imul
sbb
mov
std
jnp
mov
daa
xchg
mov
sbb
add
dec
out
rcl
leave
add
inc
stos
mov
leave
mov
int
fidivl
fsubl
or
sbb
push
sub
fistps
xchg
sarb
popf
and
aaa
sbb
cmpb
pop
inc
adc
repz
stos
and
sbb
xchg
dec
aam
loope
call
shll
mov
mov
test
mov
test
sub
or
pop
sub
test
sbb
or
jno
or
jp
pop
ret
push
pop
popa
fldcw
lds
and
mov
mov
push
sbb
mov
adc
test
cld
leave
lret
mov
mov
shlb
call
sbb
push
add
mov
jg
pusha
add
test
lret
mov
push
imul
call
adc
jle
dec
xchg
inc
test
nop
lods
add
ret
in
sarl
xchg
xor
push
ret
lahf
shll
mov
sbb
xchg
push
jge
stc
fs
inc
xchg
jle
mov
xchg
sbb
add
in
outsl
cmpsl
dec
in
test
sub
js
iret
xor
mov
repz
inc
loopne
jb
and
ret
int3
jns
mov
xchg
ficoms
mov
mov
out
js
or
test
imul
ret
xchg
or
adc
enter
daa
xchg
xchg
stos
push
scas
mov
jo
inc
cmp
xlat
xor
test
mov
push
push
test
fildll
shl
je
cmc
mov
lcall
sbb
or
jns
loop
incl
sbb
mov
sbb
les
jns
jmp
mov
shr
mov
cmpsl
adc
mov
add
mov
adc
lcall
das
add
adc
clc
ret
repz
ret
loop
fsts
xchg
ret
cli
add
and
cmp
adc
xor
mov
mov
repnz
cli
add
adc
shll
mov
iret
or
movsb
pop
sub
pop
outsb
sbb
test
lods
or
xchg
mov
push
jbe
adc
push
ret
adc
cmp
jnp
dec
mov
push
daa
mov
sub
jns
lret
cmp
popa
add
dec
sarl
adc
shll
sub
mov
call
pop
push
ret
ss
aaa
or
fcom
adc
loop
bsf
pop
jb
sbb
out
movsb
adc
add
dec
mov
testl
int
sbb
out
prefetchwt1
ds
fdivr
stc
dec
mov
in
in
sahf
add
lret
sbb
or
xor
je
mov
push
xor
aas
sti
add
cmp
je
xor
add
push
shrb
es
icebp
out
incl
stc
xchg
and
enter
sahf
adc
mov
mov
mov
js
aam
popa
push
pop
xchg
cmp
nop
ss
and
cmp
sbb
stos
mov
fisttpl
or
in
in
les
jo
xor
jmp
pop
pop
mov
jle
int3
lret
jo
jmp
shl
mov
and
cmp
xchg
rcr
idivl
mov
mov
or
mov
inc
push
fnop
shll
inc
fcmovu
push
mov
mov
xor
add
jmp
cmp
fidivs
cmp
push
xchg
call
movsl
or
jl
insb
nop
dec
dec
push
fs
icebp
cmp
pop
mov
mov
ret
out
fs
insb
add
mov
or
add
xor
mov
jne
mov
addb
xor
sbb
xchg
insb
stos
std
or
gs
pop
or
xor
or
sbb
sahf
gs
mov
dec
clc
fadd
mov
rcrb
ret
loop
or
or
mov
push
ret
ds
cs
stc
and
stos
sbb
mov
imul
push
jmp
xor
jmp
lds
push
leave
dec
cmp
xor
push
cltd
notb
sti
fists
or
dec
ljmp
mov
icebp
popa
mov
int3
inc
lahf
mov
sahf
mov
dec
jno
nop
sahf
pop
js
push
xchg
mov
mov
mov
js
repz
mov
inc
nop
daa
cltd
jle
ljmp
or
iret
stos
enter
dec
cld
jo
adc
jge
jg
or
iret
andb
scas
jo
mov
adc
loop
das
xchg
mov
mov
fistl
shlb
pop
or
push
aam
icebp
lret
fucomip
mov
lret
sbb
and
nop
test
loope
push
xchg
nop
mov
jns
push
dec
and
mov
jmp
jle
out
cltd
sbb
in
test
repz
ret
add
mov
dec
cmp
rep
popf
cmp
les
pop
xchg
cmp
jns
cmp
jb
and
ret
or
sub
ja
add
sub
movsb
je
clc
xor
test
add
mov
fistpl
dec
fisubs
lret
or
add
faddl
sub
es
xor
dec
xor
pop
adc
jno
and
ret
cmpsl
push
and
jl
pop
popf
nop
mov
sub
enter
cltd
and
adc
ljmp
sub
aas
mov
pushl
push
dec
data16
jo
imul
push
sub
add
add
mov
mov
add
adc
js
in
roll
ret
dec
sub
jecxz
mov
sarb
add
jmp
adc
sub
pushl
je
jle
popf
or
sub
or
testl
repz
add
and
inc
scas
add
cltd
jg
inc
fbld
icebp
and
in
cmp
sub
mov
dec
add
adc
inc
push
hlt
ret
dec
or
fidivrs
mov
fcompl
xor
mov
mov
xchg
add
lahf
xchg
jp
jbe
add
mov
xchg
addl
repnz
mov
sti
daa
stos
nop
sbb
decl
adc
inc
mov
loope
add
ljmp
mov
movsb
jb
mov
mov
js
or
mov
in
hlt
sub
mov
lret
mov
call
out
push
cmp
ds
mov
cwtl
rclb
mov
sub
dec
out
stos
paddsw
cmp
sbb
and
xchg
cmp
cmp
xor
sub
xchg
test
sub
dec
pop
mov
pusha
jne
cmp
daa
mov
hlt
pop
adc
iret
xor
mov
lcall
loop
cmp
arpl
lcall
je
mov
test
add
mov
mov
fdivr
xor
jl
or
outsl
mov
cmpsl
and
or
enter
push
mov
imul
add
sti
test
sbb
mov
test
movsl
lds
mov
dec
leave
and
imul
movsl
xchg
adc
add
xchg
std
xchg
adc
xchg
jmp
ds
insl
pop
push
and
ror
nop
inc
inc
mov
inc
and
repz
mov
or
mov
fnstcw
mov
stos
adc
or
in
push
in
and
fsubs
or
or
loope
and
xchg
sub
cmp
nop
dec
xchg
xor
or
lock
call
sub
ret
adc
push
xchg
fsubp
fwait
xchg
imul
xchg
faddp
test
test
mov
scas
mov
inc
mov
mov
mov
and
dec
cmpsb
lds
lds
and
sbb
jnp
lret
test
fstpt
addl
cmc
stc
scas
call
sub
mov
add
adc
lahf
inc
test
repz
mov
lods
mov
push
stos
xor
inc
es
nop
imul
mov
cmp
adc
inc
cmc
mov
dec
or
xchg
jmp
ret
inc
add
clc
and
cmp
ja
adc
xchg
movsb
fdivrs
test
lahf
fs
gs
sub
sbb
push
mov
dec
dec
aad
pop
out
push
das
lret
mov
mov
test
adc
sbb
xchg
add
jle
mov
pop
ret
xlat
stc
test
xchg
es
adc
loop
mov
data16
es
fistps
mov
pusha
mov
push
ret
in
push
dec
shr
leave
pop
add
shr
cwtl
and
test
sarl
inc
pop
inc
pop
mov
cmp
testb
push
daa
jno
push
adc
call
xor
in
mov
pop
rcrb
sbb
lret
xchg
add
pop
loop
pop
cwtl
dec
push
sub
test
jnp
nop
dec
repz
or
outsb
fsubl
nop
dec
cmc
cmp
nop
icebp
das
jl
leave
cmc
lahf
pop
gs
jmp
dec
push
or
stc
test
jl
xor
adc
clc
roll
movsb
xor
data16
lcall
add
mov
add
std
adc
add
js
xchg
push
cltd
inc
enter
hlt
mov
cmp
dec
addb
adc
mov
aas
pop
or
xchg
add
imul
scas
out
sbb
mov
or
or
xchg
addb
sbb
ret
sub
push
scas
das
mov
inc
push
call
fnstcw
sbb
ljmp
repnz
inc
fmuls
repz
pop
dec
mov
in
inc
inc
add
dec
ficomps
pop
test
cltd
daa
sbb
iret
sbb
test
les
sub
sub
pushf
mov
pop
out
pop
mul
add
mov
jl
or
add
insb
jl
ret
add
imull
jle
sbb
cltd
jge
mov
ror
enter
jge
mov
inc
sahf
test
push
popa
lret
jg
mov
popa
push
sbb
mov
and
adc
pop
aad
jp
cmp
pop
xchg
pusha
adc
sub
jo
add
mov
movsl
into
negl
fisubrl
or
lret
cmp
fldt
in
xor
sub
hlt
jnp
into
nop
push
lock
ret
mov
jmp
ret
je
cmpsl
xchg
int3
fidivl
movsl
push
dec
repnz
lods
xchg
sub
fstpl
imul
inc
lods
add
ret
inc
dec
dec
jno
cmp
imul
push
aad
stos
adc
pop
pop
scas
in
push
ja
imul
cltd
arpl
mov
sub
mov
lds
sbb
int3
out
pop
push
iret
sub
xchg
jns
mov
add
xchg
mov
lahf
sbbb
adc
xchg
test
pop
in
pop
imul
mov
test
mov
jno
nop
data16
push
pop
jae
pushf
fnsave
jmp
xor
inc
nop
mov
xorb
jns
cmp
mov
popa
je
shr
rcll
and
sbb
cwtl
xchg
pusha
orb
xchg
les
jg
mov
outsb
dec
out
xor
cmc
xchg
jbe
popa
cwtl
out
mov
xor
call
sbb
shlb
ret
in
xchg
imul
fidivl
lods
movb
dec
fstpt
in
add
mov
fxch
test
movsb
pop
inc
jno
vpsadbw
cwtl
dec
movsb
mov
sbb
cltd
sbb
popf
pusha
xlat
xchg
fwait
js
dec
xchg
pop
test
daa
decb
in
ja
mov
mov
dec
mov
loope
inc
cmp
mov
pop
aaa
rcr
push
push
dec
imul
leave
xor
arpl
or
xchg
push
loope
dec
sbb
lret
or
rol
in
dec
mov
jb
je
mov
in
cmp
scas
je
out
hlt
add
test
lods
in
ss
out
jnp
lock
jo
scas
lock
shl
jne
mov
fisttps
dec
fs
dec
iret
sub
and
lock
inc
rclb
mov
mov
xchg
in
out
js
fmull
sub
jmp
lods
mov
lds
xchg
dec
jmp
add
jmp
in
jmp
xlat
or
fdivp
push
pop
jbe
scas
xchg
add
xor
jl
jno
out
mov
xchg
xchg
adc
push
dec
jns
int
repz
jb
pop
mov
js
mov
pop
sbb
stos
add
imul
leave
out
cmp
out
bound
inc
jmp
loopne
mov
shrl
rol
out
leave
dec
rorb
daa
push
inc
or
cmp
test
jl
mov
or
jno
outsb
cmc
out
adc
inc
mov
addr16
pop
or
push
stc
mov
stos
or
out
daa
pop
daa
cmpl
insb
dec
mov
pusha
jae
push
nop
pop
popf
inc
jmpw
test
insb
movsl
insb
je
cmp
xchg
jo
inc
dec
ret
sub
aaa
and
mov
pushf
pop
pusha
cmp
pop
lahf
jl
mov
xchg
push
es
popa
fs
sahf
mov
cmp
cmp
bnd
test
push
xchg
adc
testb
mov
sbb
les
push
push
sbb
or
jo
or
filds
adc
mov
and
sti
clc
adc
js
jae
mov
add
out
add
fbld
cld
leave
or
out
mov
adc
js
or
mov
ret
das
adc
imul
push
mov
ret
loop
lret
and
fldt
dec
xchg
add
dec
push
enter
jge
mov
pop
icebp
sub
add
cmp
cmp
pop
xchg
stos
ret
mov
enter
aaa
xchg
aaa
mov
sub
ficompl
mov
pop
add
mov
loope
cmc
adc
dec
aas
mov
bnd
mov
or
test
loope
xchg
hlt
mov
imul
add
pop
or
jo
loopne
inc
mov
js
cmpsb
add
loopne
test
scas
ljmp
cmp
pop
xchg
loopne
daa
mov
nop
cli
or
je
ret
lret
or
fs
popf
and
inc
inc
fucomip
fs
insb
cmp
and
jl
mov
movsb
arpl
sbb
sbb
test
out
xchg
mov
aad
ret
cmp
mov
loop
push
xchg
outsb
imul
or
dec
fimuls
inc
mov
outsl
push
sbb
iret
icebp
or
cmp
add
add
xchg
lods
adc
inc
iret
or
xchg
jno
fstp
cmp
test
push
cld
jae
bound
cmovb
cmp
xchg
out
icebp
gs
xchg
arpl
into
push
scas
jp
pop
scas
out
fsubs
xchg
sbb
xchg
pop
mov
mov
and
dec
or
test
mov
push
call
sbb
push
dec
push
stos
mov
rcll
xor
push
cltd
dec
orb
enter
mov
orb
push
push
sti
test
out
push
sbb
out
or
cmp
stos
mov
lods
jl
repnz
hlt
dec
xchg
popa
nop
cltd
scas
decl
jb
daa
add
add
jmp
sbb
fnsave
mov
dec
aas
call
fmul
subl
xor
add
test
jg
or
ret
cmp
sbb
xchg
insl
fidivrl
add
dec
cmp
ret
sbb
movb
loopne
stc
mov
xchg
je
jb
data16
pop
ja
loop
nop
je
gs
jbe
rclb
std
add
nop
loopne
cmp
or
shlb
adc
call
inc
jge
mov
push
jg
cmp
cld
mov
xchg
xchg
add
ljmp
addr16
fstl
lods
stos
out
mov
sbb
or
and
inc
jle
mov
xlat
out
jnp
pop
mov
or
xchg
mov
pop
or
mov
push
add
mov
not
add
fmuls
xchg
ret
push
dec
fildl
ret
mov
imul
leave
out
cli
sbb
bound
cmpsl
add
cmp
pusha
js
mov
lock
cmp
inc
xchg
jg
aaa
and
scas
dec
cmpsb
mov
inc
arpl
sub
pop
lods
jns
jg
mov
add
jle
mov
aam
mov
aam
or
cs
adc
scas
and
adc
add
xchg
mov
adc
push
stc
pop
clc
sti
test
xchg
aam
and
nop
jbe
push
sub
clc
push
mov
popa
fcomps
mov
movsb
fistpl
ret
inc
dec
cmp
mov
addr16
pop
add
pop
into
insb
mov
and
in
movsl
push
mov
mov
adc
int3
mov
mov
mov
xchg
xchg
dec
rcrb
xchg
cld
jbe
cli
lods
or
and
aas
add
mov
xor
out
and
dec
adc
cmp
push
xor
xchg
sarb
and
cmp
add
andb
cltd
mov
xchg
cwtl
push
mov
in
and
jae
rcll
mov
dec
and
outsb
add
mov
xchg
jne
mov
lock
add
mov
dec
test
adc
or
ja
xchg
repz
stos
dec
int
daa
add
mov
shl
mov
xchg
pop
cwtl
lcall
inc
jno
rorb
test
or
cmp
dec
shr
add
lret
or
and
stos
in
mov
cwtl
and
adc
pop
insl
pop
cmp
int3
xchg
mov
add
clc
test
nop
fidivs
test
adc
test
add
or
dec
imul
insl
sbb
test
inc
xchg
cmp
lods
repz
invd
adc
fstps
xor
rolb
mov
stos
jns
mov
mov
fnstenv
xor
sub
cld
popa
outsb
into
mov
adcb
add
cs
push
or
repz
pushf
mov
andl
sbb
data16
xchg
lcall
mov
mov
pop
sti
sahf
nop
jl
aaa
aam
cld
cs
pop
jmp
xchg
popa
xor
ret
in
test
sbb
pop
loop
add
mov
mov
testl
aas
xchg
aas
push
dec
push
jb
ds
lods
or
xchg
xchg
rcl
test
jmp
call
into
mov
or
push
and
add
int3
das
in
or
ret
or
repz
int3
pop
loop
int3
aad
lods
fmuls
mov
mov
ljmp
lds
xchg
sub
lret
mov
das
xchg
popa
add
jecxz
xor
jl
pop
lock
ja
iret
jo
push
add
clc
cwtl
test
sub
cmp
push
bound
xchg
mov
mov
or
nop
fwait
add
aaa
shll
sbb
xor
test
pop
mov
pop
adc
movsb
mov
sub
lods
add
icebp
stos
xchg
ror
iret
mov
mov
out
in
sti
lods
ret
mov
cmp
mov
cwtl
pop
rcll
or
push
xchg
push
dec
lods
out
nop
xor
sub
ret
mov
leave
xor
mov
xor
fcmove
and
test
fs
pop
out
push
rcrl
movsl
xlat
adc
lods
pop
enter
adc
stc
or
movsb
pop
inc
mov
cmovns
jae
nop
push
repz
mov
push
mov
jl
or
and
popa
stc
repnz
inc
ds
inc
lcall
push
push
das
faddp
hlt
mov
push
mov
out
loopne
push
xchg
jno
push
inc
fistl
push
les
arpl
cs
in
mov
ret
pop
lock
jae
jp
inc
xor
mov
cmp
movsl
cmp
sub
push
sub
push
add
xor
xchg
dec
ss
dec
sub
aad
icebp
jl
xor
je
cli
fsub
dec
test
in
aas
dec
bnd
mov
lock
or
rol
xchg
or
leave
push
pop
aam
and
push
mov
out
sar
or
pop
jnp
fadds
inc
scas
test
sbb
pop
cmp
add
pop
call
xor
push
and
sarb
or
jne
lods
xchg
dec
inc
jb
mov
add
mov
or
sub
and
xor
mov
insl
mov
shll
dec
add
adc
push
xlat
dec
cmpsb
adc
in
rcll
sbb
stos
bound
and
jg
shlb
ljmp
fld
aaa
mov
leave
cmp
ficoms
les
int
lahf
mov
mov
mov
xchg
push
pop
test
add
aam
fsubrl
aad
mov
xchg
add
and
movsl
inc
ret
pop
mov
imulb
mov
mov
pushf
imul
ljmp
insb
aam
ret
push
es
fwait
jp
cwtl
movsl
add
icebp
call
mov
dec
xchg
rcl
dec
ss
test
inc
je
test
nop
jns
sarb
push
adc
fmuls
push
ss
aad
pop
add
mov
and
jle
in
jp
jns
or
movsl
or
inc
ret
mov
inc
subl
jmp
jno
rcrl
scas
insl
push
sub
mov
mov
xchg
or
fldt
sarb
add
out
mov
jo
aas
pop
insb
inc
sub
ret
mov
cmp
adc
test
mov
jg
xor
xchg
xchg
mov
fyl2xp1
inc
jle
in
cli
je
das
icebp
inc
fisubs
mov
test
inc
mov
inc
jg
or
mov
int
or
imul
mov
mov
jecxz
inc
and
mov
les
sbb
in
in
or
insb
int3
sbb
clc
sbb
in
movsb
mov
cmp
shrl
fwait
add
mov
dec
in
mov
out
inc
xlat
mov
loope
scas
dec
xchg
pop
movb
mov
jecxz
subb
mov
mov
jecxz
or
mov
sbb
pop
dec
nop
mov
jnp
mov
or
nop
iret
test
repz
cmp
xlat
jmp
scas
cld
pop
stc
js
orb
xlat
mov
and
push
add
in
jb
clc
xchg
or
test
scas
in
inc
mov
repnz
push
loopne
cmp
fld1
stos
in
pop
fnstsw
lret
fs
shll
pop
mov
cmp
dec
pop
ffreep
rolb
insb
test
notl
or
sahf
or
int
movsl
inc
je
push
out
add
bound
mov
inc
inc
mov
fdivl
xchg
pop
out
ret
xchg
arpl
nop
and
xchg
pop
sbb
test
daa
jo
fildl
outsb
mov
mov
lahf
fdivrl
inc
aam
push
shrl
les
popf
test
popf
cltd
push
dec
push
sub
loop
xchg
xchg
cmp
mov
jmp
ja
sbb
dec
pusha
jmp
push
in
pop
mov
repz
adc
mov
mov
adc
das
or
mov
cmpsl
sub
dec
les
xchg
xor
or
cs
cltd
push
dec
movsb
sbb
es
jecxz
int3
add
inc
ja
lahf
mov
inc
and
pop
sbb
or
movsl
mov
scas
fwait
xchg
loop
lahf
sbbl
fxch
mov
stos
imul
ret
andl
flds
mov
jmp
popa
leave
sbb
scas
pop
mov
data16
add
xadd
mov
popf
je
ret
mov
add
mov
and
push
aaa
push
sub
stc
es
je
repnz
mov
js
imul
push
sub
jl
rcrb
addr16
ret
int
jb
cwtl
dec
mov
add
push
jb
pop
aad
cmpsl
add
aad
scas
jl
push
xor
jne
aaa
mov
pop
dec
movsl
dec
aam
movsl
pop
xor
ss
mov
loopne
add
push
push
add
pushf
xchg
pop
leave
nop
roll
sbb
aaa
rclb
sub
nop
int
or
insb
mov
xchg
stos
mov
call
and
dec
mov
xchg
adc
test
test
je
sbbb
imul
sub
popa
popa
mov
bound
xchg
pop
push
xchg
push
push
sub
imul
nop
fnsave
testb
nop
push
out
js
pushf
pop
ret
nop
shlb
mov
xchg
pop
test
mov
rolb
shll
es
loopne
xchg
in
test
push
movsl
xor
add
or
pop
enter
fnsave
enter
dec
sub
aaa
rcr
mov
bound
setno
lea
rcll
shll
ss
mov
leave
add
xor
adc
push
rorb
dec
lret
call
mov
cmp
into
rol
mov
mov
lret
hlt
or
inc
jno
mov
insb
adc
rclb
xchg
outsb
mov
xor
clc
pop
loope
and
mov
ds
sub
ljmp
in
jg
inc
leave
ja
notl
mov
push
mov
cmp
nop
movsb
mov
adc
nop
out
aaa
outsb
jge
push
mov
adc
xchg
int
test
or
mov
js
es
or
dec
imul
arpl
fidivs
mov
test
mov
xor
mov
jae
fisttpl
out
es
rcr
cmp
cmc
jnp
bound
mov
xlat
ret
pop
push
les
ret
andl
scas
add
rep
adc
push
pop
adc
mov
fsts
in
mov
push
les
pushf
sarb
xchg
push
sbb
fcomip
les
nop
nop
sbb
add
mull
mov
dec
scas
add
shll
or
mov
lds
sbbl
inc
inc
fcomps
fcomps
ficoms
fwait
jns
into
notl
shrl
lahf
pop
ret
jge
popf
aaa
in
in
and
or
scas
push
inc
in
sbb
mov
dec
nop
dec
mov
jns
sbb
mov
xchg
mov
dec
daa
or
outsl
lods
mov
push
lods
xchg
xor
aaa
lret
call
sub
mov
pop
lods
sub
jecxz
nop
stc
sahf
fcoms
or
lods
mov
negb
lea
std
mov
mov
mov
rorl
mov
ja
xchg
mov
push
stos
dec
push
ja
sub
movsb
add
repnz
popf
nop
cmpsb
or
sti
push
ficompl
ret
nop
ret
fwait
push
dec
iret
ret
mov
push
movups
add
stos
in
sub
nop
nop
jb
pop
xor
stos
xor
stos
sahf
xchg
lods
lret
ret
stos
cmp
test
dec
test
nop
mov
in
sbb
dec
xchg
nop
jb
dec
rcll
pushf
jb
ror
insb
mov
mov
pop
or
cmc
mov
pop
ret
sub
mov
pop
jmp
mov
aam
fisubrs
dec
aad
cmpsl
test
call
or
pop
into
add
adc
cmp
fadd
xchg
add
mov
pop
mov
or
stc
dec
outsb
dec
fld
adc
jb
int3
clc
mov
das
popf
dec
inc
fisubl
jg
fistl
sub
xchg
dec
ret
xchg
mov
mov
stos
mov
dec
fs
mov
pop
inc
xor
jg
xor
sub
cli
movsb
mov
mov
bound
mov
mov
in
inc
jg
dec
outsb
nop
adc
sub
ret
mov
inc
icebp
int
xchg
push
lret
ret
int
pop
mov
cmp
ret
dec
ret
int3
dec
mul
aam
in
dec
je
scas
dec
add
mov
dec
nop
cmp
mov
leave
ds
jbe
jno
mov
clc
mov
mov
ret
xchg
mov
fisttpll
jle
popf
inc
cmp
scas
daa
or
dec
push
mov
mov
hlt
mov
mov
mov
dec
lahf
mov
mov
lahf
pop
hlt
cli
dec
ffreep
popf
lahf
mov
mov
repnz
pushf
mov
add
das
xchg
sub
sbb
test
add
xchg
ret
and
int3
mov
sub
adc
jge
jg
xchg
pop
cmpsb
add
xchg
leave
shl
adc
jb
or
fxch
cmc
imul
popf
les
dec
sub
sub
sbb
pop
inc
mov
idivb
nop
sub
and
loope
lret
pusha
iret
push
dec
fnstenv
jl
ret
mov
addb
popf
bound
mov
test
push
lds
mov
pop
in
jmp
adc
fcmovbe
les
in
or
pushf
call
stc
scas
jb
dec
xchg
ret
mov
pop
and
mov
fnstsw
adc
aaa
jnp
fs
or
ficomps
gs
or
dec
sub
fbstp
inc
pop
mov
nop
ja
cmp
popa
pushl
fmuls
clc
pop
fisttps
add
fwait
call
jmp
lds
jg
in
sub
loopne
aad
scas
rorb
movsb
cmp
mov
loope
test
xor
adc
dec
mov
les
jb
pop
mov
or
lds
sub
jmp
cmp
adc
sbb
gs
movsw
jns
iret
xchg
movsl
and
mov
into
push
cmp
repnz
je
or
cltd
movsl
fdiv
sahf
notb
loope
fiadds
dec
xchg
out
mov
cltd
dec
pusha
ja
cmp
pop
sbb
jb
adc
fldcw
fcmove
mov
fsubrl
roll
cli
xor
adc
xchg
pop
pushf
xor
js
mov
out
lds
movsl
push
das
mov
xchg
mov
mov
dec
rcll
pop
nop
xchg
add
jmp
push
cwtl
in
cmp
pop
ljmp
imul
pop
jns
jb
xor
ret
stos
insb
or
push
and
cmp
stos
push
jecxz
xor
call
gs
mov
call
xchg
sub
arpl
inc
daa
loop
js
mov
lods
cli
test
es
shlb
ror
mov
fmull
cmp
adc
xchg
ja,pt
rol
mov
pop
hlt
cmp
aam
js
push
or
jg
ret
inc
cmp
adc
ds
cmp
push
sbb
pop
xchg
dec
outsb
pop
repnz
loop
xchg
push
adc
test
sbb
pop
xchg
push
mov
inc
or
je
call
xchg
pop
pushf
mov
fs
call
lcall
or
jns
mov
sub
leave
push
pop
or
ficomps
cld
lock
popa
cwtl
dec
xchg
int3
jmp
test
ss
sti
jge
ficompl
data16
push
jnp
fsubrl
xchg
aas
rcrl
je
add
xchg
out
dec
fidivs
icebp
push
cmp
std
dec
xchg
dec
andb
cmp
or
pushf
fnstsw
mov
jge
mov
jle
lds
xchg
aas
mov
mov
mov
dec
push
xor
mov
xchg
stc
xchg
sub
cmp
loop
mov
fldcw
mov
mov
push
xchg
stos
mov
mov
and
in
iret
jg
add
dec
sarb
adc
addb
popa
sbb
lahf
mov
jnp
xchg
addr16
mov
jl
sub
andb
test
mov
js
jne
lea
rolb
js
push
or
std
mov
stc
stos
nop
rclb
stos
xor
mov
cmp
test
mov
daa
inc
adc
cmpsb
cwtl
mov
mov
or
cmpsl
mov
rclb
mov
insl
mov
inc
fmul
aam
dec
pop
adc
iret
mov
test
add
mov
lods
cmp
test
stos
fstpt
mov
push
jg
test
ljmp
and
sahf
das
jae
aaa
scas
push
test
mov
das
in
lods
icebp
inc
pop
out
sub
int3
je
pop
jg
push
test
xchg
pushf
icebp
jns
jo
sub
cmpl
push
and
jmp
or
mov
jg
dec
push
mov
sub
pop
pand
fiaddl
subb
pushf
adc
adc
pop
fsubl
cmp
inc
or
sub
fcmovu
add
mov
pop
shlb
inc
jmp
push
in
cmp
xchg
lret
mov
push
cmc
ficompl
adcb
add
les
rcl
sbb
lock
xchg
orb
fbld
push
or
icebp
sbb
ret
xor
jl
dec
out
xchg
add
ret
sub
cmp
bnd
icebp
mov
add
mov
pop
mov
outsb
pop
mov
stos
addr16
add
jg
mov
leave
ret
push
pop
aaa
inc
pop
mov
inc
aaa
dec
cmc
dec
xor
fisttps
outsb
jb
ret
and
xchg
xor
jge
xor
fldlg2
mov
mov
rclb
lea
stos
push
jecxz
mov
scas
mov
or
cmpsl
xor
sbb
push
imul
add
incb
ds
push
cmp
fadds
lds
ficompl
ret
rol
jmp
sbb
fcomip
in
insb
ja
addl
nop
test
xor
pmaxsw
sub
and
jmp
mov
mov
inc
rorb
pushf
add
jmp
xchg
loop
insl
in
and
stos
ja
mov
cwtl
call
jns
push
and
ret
xchg
mov
pop
loope
inc
jne
pop
mov
loope
mov
jnp
mov
aad
fdivrl
mov
cmp
ss
cmp
icebp
mov
stos
insl
push
mov
push
cld
and
shlb
in
iret
test
pop
push
jle
je
stos
pop
add
push
bound
pop
add
sub
repz
cmpsb
push
nop
shll
xlat
and
xrelease
sbb
add
jmp
pop
outsb
enter
mov
lret
dec
and
jmp
jae
imul
lret
dec
loope
inc
ret
add
mov
daa
xchg
pop
add
js
ret
mov
jae
sbb
pop
out
xchg
nop
mov
ret
push
nop
and
popf
and
and
inc
dec
xchg
jle
movl
je
std
mov
ss
ficoml
movsb
std
insb
sbb
imul
push
mov
adc
pop
dec
jo
iret
mov
xchg
push
xchg
jo
cwtl
push
ret
insb
xchg
fidivl
pop
or
mov
xor
stos
xor
outsb
loop
std
addr16
mov
xchg
insb
stos
pop
pop
stos
jecxz
les
mov
punpcklwd
movsl
xchg
mov
push
dec
fucomi
or
faddl
mov
push
in
in
add
adc
pop
outsb
imul
lods
add
or
test
mov
bound
push
scas
in
scas
je
jbe
mov
push
imul
mov
inc
xlat
cmp
test
rorb
jno
mov
into
push
dec
jne
or
les
mov
hlt
test
dec
stos
or
insb
subl
jp
cmp
cmp
jb
lahf
or
adc
lahf
and
imul
imul
xchg
out
nop
mov
arpl
jns
rcrl
ret
inc
mov
xlat
or
sbbb
mov
lds
ret
xchg
or
lods
pop
push
inc
and
cwtl
pushf
adc
push
add
xchg
sbb
mov
jmp
inc
add
nop
jge
cmp
imul
mov
imul
and
or
nop
pop
jne
stos
xor
arpl
push
or
push
scas
test
cltd
test
loop
inc
adc
stos
jbe
sbb
out
mov
xchg
test
mov
lock
adc
je
xchg
xor
xchg
sbb
call
pop
add
push
cmp
dec
sbb
lods
int3
lods
insb
mov
dec
pop
mov
scas
mov
cmp
and
ficoms
inc
loopne
lods
mov
adc
ja
mov
aas
dec
pushf
dec
mov
mov
pop
xor
sub
dec
lret
jmp
xchg
and
inc
cmpsl
xchg
lock
popa
out
test
popa
addr16
lahf
stos
test
scas
and
jge
movsb
mov
cmpsl
lods
or
popa
out
lock
call
std
and
int
mov
add
movsb
js
and
int3
sar
lods
rolb
stos
cmp
shlb
fdivrs
xchg
nop
pop
mov
pushf
out
xchg
std
iret
pop
pop
lods
rcll
dec
idivb
push
dec
addl
or
insb
xor
jp
loop
mov
cmpl
xchg
xchg
in
pushf
insl
in
rolb
pop
pop
popa
push
in
stos
cmp
sahf
test
push
iret
push
mov
dec
stc
orb
mov
mov
lods
nop
sbb
pop
sahf
and
and
or
mov
je
jnp
mull
test
xchg
ret
add
call
loopne
sahf
cli
aad
test
adc
movsb
push
dec
enter
loop
mov
fidivrs
loop
pop
mov
pop
dec
jp
add
mov
xor
jns
dec
rclb
ljmp
xchg
mov
xchg
or
inc
push
or
rcrl
in
sub
mov
pop
push
test
fildll
ret
es
das
icebp
xlat
dec
jp
xchg
mull
jle
cs
ret
insb
push
int
sahf
std
gs
mov
adc
data16
and
into
fld
cmp
adc
xor
pop
mov
movsb
les
adc
insl
lods
adc
dec
xchg
pushf
fildll
dec
cwtl
movsb
icebp
out
and
or
or
pop
xchg
xchg
lea
lods
lcall
jno
movsb
pop
jns
in
sbb
popf
lods
xor
adc
jns
int
stos
push
rorb
mov
stc
fadd
sbb
fidivs
in
lret
shrl
pop
fucomp
push
xchg
icebp
mov
xchg
mov
push
dec
sub
adc
movsb
aas
push
ljmp
push
in
imul
sub
int3
test
mov
js
imul
negl
cld
movb
jmp
mov
in
les
repz
sbb
sbb
aas
xchg
js
repnz
push
adc
out
insb
enter
adc
dec
mov
mov
dec
stc
xorl
cmpsl
mov
ja
fmulp
pop
push
xor
mov
xor
in
clc
or
aam
and
jecxz
mov
jg
gs
sti
sub
call
jns
sub
inc
and
shlb
das
inc
and
dec
ret
fldcw
pop
in
xchg
push
pop
popf
ret
lods
xorb
dec
popf
dec
mov
add
pushf
mov
js
adc
mov
inc
int3
addr16
adc
repz
cmp
dec
ret
and
mov
insl
mov
adc
inc
lods
add
xchg
cmp
mov
leave
test
sbbl
aam
imul
jo
push
lret
push
adc
push
lds
xor
pop
into
mov
mov
sub
inc
aam
mov
mov
jne
rcl
inc
cmpsl
jne
push
mov
mov
repnz
push
sbbl
pop
cmp
jo
pop
sub
pusha
xchg
inc
jg
lret
pop
pusha
add
mov
add
sbb
and
dec
pop
pushf
bnd
nop
cmp
enter
mov
inc
xor
pushf
mov
pop
out
mov
lret
je
push
mov
xor
lds
fldt
xchg
imul
nop
xor
sti
nop
inc
lcall
and
lret
xchg
int3
lcall
jno
xchg
fwait
jb
adc
nop
push
cltd
sub
arpl
nop
sub
cltd
xor
jno
mov
jno
xchg
ja
sub
data16
xor
shrb
push
or
add
dec
and
dec
mull
xchg
mov
popf
test
loop
xchg
lahf
or
outsl
cmc
or
outsl
cld
mov
xchg
outsl
mulb
outsb
pop
loop
outsb
lahf
loop
outsb
mov
add
mov
clc
and
push
xchg
jo
insb
or
mov
movsb
jne
push
imul
xchg
js
sub
mov
js
cmp
dec
cmpsb
push
push
mov
dec
div
insb
aad
cmpsb
jle
movsl
aam
mov
scas
imul
rcrl
inc
dec
inc
test
scas
inc
add
push
inc
jg
lods
sbb
in
inc
nop
imul
repnz
or
xchg
jno
bound
das
iret
stos
int3
sbb
lds
pop
sti
movsb
rcll
jae
jmp
push
addr16
push
and
ja
fldt
mov
fs
outsl
xchg
push
jnp
mov
mov
movups
enter
mov
push
shlb
add
data16
add
push
cs
enter
ja
xchg
cld
jge
lret
sahf
jp
push
pop
xor
inc
push
push
movsb
mov
pop
gs
add
push
add
gs
mov
mov
dec
xchg
enter
inc
inc
and
sahf
nop
add
jns
lret
mov
sbb
sub
arpl
dec
bound
std
bound
xchg
xchg
fmuls
pop
inc
push
popa
xchg
mov
mov
or
mov
imul
and
cmp
jl
mov
pusha
out
js
negl
ljmp
pop
stos
jno
pop
fwait
mov
jns
cmp
mov
pop
xchg
xchg
fistpl
xchg
jecxz
jg
push
pop
xor
or
imul
xchg
nop
subl
pop
cmp
and
fstpt
sub
mov
cwtl
mov
jbe
xor
pop
ljmp
xor
sub
iret
pop
xor
pop
jno
sbbl
push
lods
fimull
add
pop
mov
lods
scas
dec
fbld
pop
and
aad
std
nop
fcomps
push
push
mov
shll
push
bound
imul
aam
sub
rcll
push
pop
fimull
inc
repz
pop
pop
push
pushf
jp
cmp
mov
and
jmp
mov
mov
mov
bound
ret
inc
add
icebp
leave
push
or
cmpsb
mov
insl
mov
das
push
mov
sub
cmp
shrb
mov
clc
dec
ja
or
fldenv
mov
shrb
pop
cmpsb
adc
lret
push
mov
insb
xor
bound
add
pop
sbb
sbb
je
and
div
jae
xchg
outsb
xchg
insb
lods
inc
lock
add
mov
jle
imul
sub
dec
push
lahf
cli
insb
inc
repnz
mov
mov
les
push
test
in
das
or
cmp
negl
inc
xor
jge
mov
push
or
or
fwait
sar
fcomps
into
pop
loop
push
or
pop
std
ja
jne
push
pop
mov
out
mov
xor
cmp
adc
add
fs
cmc
jb
cmp
sbb
pcmpeqb
out
xchg
sarl
arpl
lret
sbb
inc
sbb
mov
dec
and
sbb
jnp
testl
push
in
jg
xchg
jp
test
rclb
das
dec
cltd
sarb
xchg
and
out
xchg
mov
imul
jp
jbe
cld
mov
loope
push
mov
jnp
sub
add
daa
sub
mov
pop
aad
les
sbbl
loop
push
xchg
in
mov
scas
js
sub
inc
or
adc
sbb
or
and
in
dec
xchg
jle
push
dec
or
popf
sub
cli
jns
out
repnz
test
movsl
hlt
adc
xor
mov
inc
lods
xor
jns
ret
xchg
or
push
jo
jns
shlb
push
movnti
dec
and
movsb
jge
pop
or
push
pop
bound
xchg
dec
ja
sub
ficoml
mov
mov
aam
aam
fadd
push
or
mov
push
mov
jbe
jno
adc
mov
pusha
cli
nop
inc
xchg
in
scas
mov
dec
jbe
adc
fwait
jbe
dec
xchg
jbe
mov
dec
or
mov
push
mov
inc
repz
jne
loop
dec
mov
aas
ja
mov
dec
out
js
icebp
js
dec
push
add
mov
gs
ds
in
cmp
iret
cld
dec
cld
imul
pop
pop
in
fists
fidivs
int3
adc
ds
push
jl
xor
flds
dec
clc
dec
adc
or
in
arpl
test
fisttpl
dec
dec
js
fidivrl
mov
dec
pop
imul
jl
jae
adc
mov
mov
lds
ds
mov
jo
push
aad
bnd
movsl
cmpsb
lret
call
adc
or
jecxz
iret
inc
xchg
cmp
movsl
xchg
jl
fidivs
jge
stos
je
inc
pop
imul
sub
mov
leave
dec
popf
xor
xor
xlat
lret
cmp
xor
subl
scas
repnz
ss
push
mov
or
ret
add
cli
or
les
hlt
mov
nop
jg
push
push
mov
cmp
fs
or
dec
xlat
dec
inc
lods
jl
push
push
xchg
or
or
mull
or
mov
xchg
cmpl
add
aas
pop
scas
stc
out
add
jo
cs
inc
mov
into
push
cld
jmp
notl
fldcw
jecxz
jo
pusha
iret
dec
loop
fs
or
jmp
in
iret
jl
mov
roll
hlt
mov
shlb
je
mov
push
test
shl
dec
or
dec
cmc
push
insb
ljmp
sub
push
mov
clc
dec
movb
outsl
stos
inc
inc
push
pop
mov
subl
or
jno
xor
xor
dec
fld
jo
pushf
mov
ss
test
repnz
das
aam
test
push
outsb
gs
test
lds
pop
inc
mov
add
inc
and
add
out
sbb
lret
and
arpl
jo
loope
jmp
stos
inc
pop
out
test
sti
stos
daa
sbb
adc
pop
cmp
jmp
adc
xchg
dec
xchg
push
das
data16
and
inc
mov
call
rol
xor
aam
jle
fcmovne
loop
icebp
es
repz
xchg
mov
jge
icebp
mov
jae
mov
in
mov
mov
jns
mov
stc
shlb
cmp
pop
mov
inc
mov
int3
inc
push
xor
inc
imull
outsl
sahf
enter
xor
mov
xchg
push
xlat
lcall
cmc
inc
mov
adc
fs
insb
xorb
stos
insl
je
popa
jp
insb
inc
inc
xchg
lcall
push
push
dec
or
mov
mov
mov
mov
add
icebp
adc
mov
mov
fildl
and
adc
lret
cs
add
inc
push
jb
outsl
mull
shlb
jo
xchg
test
sub
imul
sbb
mov
insb
fidivrs
push
adc
sub
test
add
xchg
inc
xchg
jbe
dec
push
addr16
test
xchg
xchg
mov
incb
push
push
scas
adc
push
je
pop
cmp
popa
mov
sub
cs
stc
scas
leave
mov
fs
and
filds
or
pop
notb
imul
add
flds
adc
ret
cwtl
push
mov
or
mov
jbe
sub
ret
fs
push
ds
mov
sub
fistl
inc
scas
pop
adc
rcl
cli
cld
pop
push
dec
and
rorl
push
or
adc
jle
push
addr16
js
fsubs
pop
mov
pop
cli
fbstp
adc
mov
gs
or
mov
lret
cmp
pop
adc
ja
adc
or
nop
xor
enter
xor
fwait
sahf
in
mulb
nop
sub
adc
sbb
mov
stos
nop
arpl
sub
ds
jl
or
int3
incl
add
adc
push
xor
or
nop
push
repz
and
and
mov
bound
fldlg2
lock
shlb
cmp
add
cmp
push
fisttpll
or
cmp
cmp
int
adc
cltd
push
test
scas
push
mov
ds
test
jo
or
ds
or
cld
mov
cmp
push
xchg
cmp
loop
cmp
mov
arpl
clc
ja
mov
jno
cmp
outsb
fistpll
stos
dec
popf
dec
je
inc
xchg
cmp
push
in
clc
loopne
jmp
nop
inc
fs
cmp
test
adc
insl
jg
lcall
xchg
jo
push
mov
jle
sbb
sbb
js
sub
ljmp
in
push
jno
loop
subl
push
dec
scas
int3
xor
mov
imul
push
dec
gs
lds
cmp
sub
insb
xor
mov
repz
sbb
mov
or
pop
mov
fst
inc
negb
outsl
inc
fs
ds
push
pushf
mov
mov
dec
aaa
inc
aas
aaa
dec
mov
shll
popa
call
jl
aaa
mov
out
subb
xchg
mov
lcall
inc
jns
stos
adc
xor
aam
sub
cld
pop
xor
sbb
sub
push
push
sub
xor
ss
jmp
pusha
jle
cmp
cmpsb
cmp
scas
stc
cmp
lret
subb
jle
add
pop
pop
xchg
or
push
fs
pop
bound
stc
push
add
movsl
sbb
xor
jl
jns
dec
mov
adcb
mov
jl
mov
sahf
xor
sub
xor
inc
xor
jns
mov
scas
add
negb
pop
xor
add
aas
out
loop
in
fldt
mov
out
imul
pop
sbb
jo
scas
pop
xchg
in
pop
dec
xlat
nop
xchg
xor
push
ss
xchg
pop
insl
or
xlat
and
pushf
push
pop
xchg
dec
push
mov
dec
repz
in
xor
insb
push
dec
mov
inc
leave
xor
and
pop
leave
and
lods
jb
int3
jae
add
or
jo
xor
lock
fcoms
lods
fcoml
sbb
fsts
xchg
fwait
add
into
invd
and
call
xchg
push
jle
stos
xchg
into
sub
aaa
lea
sub
roll
mov
icebp
and
add
xor
mov
xlat
xor
jl
popa
movsl
jecxz
mov
pop
sub
jns
jle
or
pop
frstor
sahf
push
mov
mov
xchg
and
xor
in
lahf
jmp
mov
leave
cmp
or
mov
sub
sbb
cmpsl
ret
dec
or
pop
rorl
sahf
xor
xchg
pop
push
jle
pop
add
arpl
inc
jne
movsl
out
bound
jg
dec
stc
xor
or
adc
outsl
bound
das
fnstenv
aam
ds
add
mov
add
lahf
lahf
lods
fstl
call
inc
pusha
xchg
mov
jg
aas
push
and
xlat
pop
sbb
jns
add
lcall
js,pn
popl
int3
xchg
lods
stc
cs
imul
and
nop
lods
and
pop
lret
cmpsl
mov
jl
jle
xor
fimuls
sub
rcr
jmp
push
xor
lock
hlt
fnsave
roll
add
sub
inc
push
push
sub
push
aam
sbbl
xchg
in
mov
push
mov
and
sub
inc
or
lcall
push
clc
imul
xor
ds
cmp
or
ficoml
pop
lods
jb
cmp
aas
pop
cmpsl
or
push
je
out
filds
sub
or
cmp
xchg
rorl
cld
sub
inc
jg
add
sub
xchg
xchg
out
xor
jp
sub
or
incl
push
push
sub
aaa
sub
dec
mov
jg
je
test
ret
out
cmp
sub
shl
jns
shl
pop
jb
inc
in
adc
mov
push
cs
jmp
jmp
test
jae
data16
loop
sbb
mov
pushf
push
xor
adc
pop
cltd
pop
test
out
add
stos
push
mov
add
movsb
ficoml
push
mov
push
ds
pop
push
push
jge
in
loopne
sub
mov
and
pop
mov
sub
mov
aad
pop
mov
dec
gs
ret
mov
push
dec
add
popa
js,pn
pop
loop
incb
sbb
fildll
and
nop
or
xor
or
addr16
mov
daa
mov
in
fidivs
pop
adc
mov
mov
cmp
insl
bswap
xor
std
negl
or
xchg
in
daa
pop
std
pop
push
xor
cmp
mov
repnz
xchg
pop
ror
pusha
jnp
dec
mov
mov
cmp
xchg
push
push
sbb
fcoml
adc
clc
mov
ljmp
adc
dec
fbld
lcall
rorl
test
pop
cli
nop
mov
dec
stos
nop
add
sbb
outsb
mov
shll
and
fsubp
into
mov
and
mov
mov
mov
mov
sbb
push
outsl
mov
daa
pop
test
les
add
js
sub
push
cmp
xor
pusha
ret
xchg
xchg
jmp
sub
mov
mov
divb
push
stc
mov
out
aaa
xor
outsb
das
inc
adc
lock
aad
popa
loop
or
and
imul
pop
push
xchg
jmp
test
xchg
js
adc
inc
in
jle
outsl
data16
and
lods
scas
ljmp
mov
leave
and
xchg
insb
call
fnstenv
les
cmp
xor
lret
sarb
addb
jg
xchg
and
add
mov
and
out
lock
jg
cmp
jne
or
in
sub
and
xor
pop
xor
sub
inc
nop
and
jo
cmp
pop
sbb
test
jno
and
repz
jl
ror
and
aad
jle
jo
mov
inc
push
and
jo
outsl
dec
lret
and
push
lret
push
lret
and
mov
sbb
pop
test
std
and
and
jo
insb
lahf
mov
mov
insb
mov
imull
mov
mov
mov
cmc
and
imul
out
insl
mov
dec
jle
ret
cwtl
dec
mov
xlat
and
pusha
pushf
outsl
jns
iret
xor
mov
cmp
mov
push
std
data16
mov
mov
and
aas
inc
insl
enter
lods
ror
sub
push
or
insl
shll
loope
jl
cld
dec
rolb
xor
decl
jne
addb
sbb
mov
or
sbb
cmp
xchg
rcrl
mov
cmpsb
sbb
sbb
mov
loop
sbb
je
into
insb
add
sbb
popf
mov
sub
and
mov
js
fs
mov
insl
push
mov
cmpsl
push
jle
xchg
testb
mov
leave
pop
ss
nop
mov
sbb
sbb
dec
fs
lods
xchg
jle
loop
fcoms
ds
push
fcmovne
ficompl
mov
sarb
clc
sbb
push
mov
mull
sahf
insl
xor
push
pop
out
sbbb
stos
pushf
outsl
sbb
fistpll
jmp
gs
and
adc
repnz
fdivs
mov
in
adc
mov
dec
pushf
arpl
inc
mov
pop
out
or
and
inc
rcrb
in
out
adc
popa
push
call
ficomps
sbb
inc
mov
sbb
stos
shlb
dec
cmp
jle
fcom
icebp
dec
dec
cld
xchg
inc
rcrl
imul
lret
test
stos
ret
jb
mov
or
jmp
xor
mov
repz
rcrl
sar
add
lret
sub
bound
push
mov
sbb
in
or
fisttps
inc
lret
mov
call
lcall
lret
push
push
insb
bound
add
enter
pop
pop
test
fs
rcll
mov
loop
fs
mov
pop
or
aas
aam
mov
jne
ret
push
sub
fisttpl
inc
jge,pn
clc
rorb
xor
sbb
xor
fwait
movsb
sub
and
pushw
jmp
push
adc
sub
and
sbb
xchg
and
sbb
sub
sbb
and
loop
push
mov
sub
lret
dec
add
jle
xor
jae
or
fldenv
xchg
out
dec
jno
fstpl
cmp
adc
aaa
dec
je
add
mov
pop
addr16
sbb
aas
ret
pop
neg
xchg
imul
aas
mov
push
mov
dec
jp
sub
mov
pop
lret
lods
lock
jge
outsl
rorb
popa
dec
adc
xchg
cmp
rorl
adc
mov
mov
sti
cs
or
int
stos
cmp
cmp
mov
je
imul
mov
and
mov
dec
lcall
mov
pop
movsl
loop
adc
enter
fnstsw
mov
in
jg
lea
in
leave
add
pusha
aam
xchg
fdivrs
push
neg
call
sbb
mov
sbb
sub
fcomi
jmp
movsl
mov
loope
xchg
mov
ret
add
jl
popa
movsl
adc
push
push
add
jbe,pn
nop
mov
cmp
lret
cmp
push
pop
adc
shll
mov
stos
push
mov
jns
and
or
jo
cld
pop
ffreep
mov
xchg
mov
jle
mov
fisubrs
and
mov
mov
cmpsb
and
cmc
xchg
jae,pn
sbb
push
mov
mov
popf
stos
imul
adc
push
mov
mull
stos
or
negl
sbb
fisubl
xchg
mov
xchg
adc
mov
mov
clc
test
addr16
mov
mov
sbb
push
pop
cltd
stos
imul
mov
mov
aas
stos
push
pop
out
js
mov
cmpsl
ret
xor
ret
and
rorb
push
adc
ss
or
popa
lahf
pop
lret
or
or
mov
pop
adc
fs
mov
nop
ret
or
nop
cmp
sti
mov
pop
pop
idivb
stos
push
or
push
clc
or
mov
add
rcr
pop
insb
push
cmp
mov
inc
lret
mov
popa
or
cmp
ret
and
adc
test
out
mov
fprem1
das
jae
xor
lds
aaa
aam
fnsave
xor
or
mov
js
adc
mov
pop
mov
push
psrad
xchg
adc
mov
mov
lock
das
fcmovbe
jno
ret
fiaddl
add
and
add
jnp
push
adc
push
insl
sub
lock
or
mov
push
fwait
mov
insl
inc
pop
add
add
or
add
adc
pop
add
out
pushf
inc
add
mull
pop
in
jle
xlat
jae
push
iret
add
cmp
add
dec
add
xor
sbb
or
mov
inc
lret
add
dec
add
or
jl
call
lret
pop
stos
xlat
jae
fmulp
test
lods
and
popa
scas
fs
xor
sub
or
jo
sub
mov
xchg
insb
and
sbb
ret
lock
mov
sub
test
lock
mov
push
pop
add
mov
cmp
test
push
adc
cltd
bound
mov
jle
jno
popa
mov
pop
decl
mov
and
adc
cld
repnz
js
fs
rclb
mov
insl
pop
mov
mov
es
inc
adc
mov
mov
nop
cs
mov
push
pop
jle
xor
adc
push
add
aam
lret
in
ds
std
add
jl
fldl
daa
jle
or
ljmp
js
fisttps
js
es
jle
push
cld
inc
popf
mov
cld
xchg
cs
bound
jl
popa
sahf
pop
push
sti
mov
sti
popa
mov
and
inc
xchg
fmul
pop
jle
mov
or
jle
and
and
pop
ret
xchg
or
xlat
jae
lock
ret
jle
mov
and
in
lret
insl
inc
mulb
mov
mov
nop
push
repnz
std
stos
inc
stc
ds
adc
idiv
xchg
jge
push
insl
mov
mov
insl
ja
pop
jle
jmp
push
adc
sub
imul
and
js
add
xlat
fldt
icebp
sbb
jp
dec
inc
jno
pop
sarb
sub
mov
testl
pop
push
stos
or
ret
insb
testb
aas
popa
out
testb
pop
mov
pop
sahf
jle
adc
sub
xor
incb
or
loope
stos
sbb
cmc
fdivrs
pop
or
arpl
add
mov
sub
cmc
adc
mov
clc
hlt
inc
xchg
loope
push
jle
adc
inc
mov
test
insl
daa
pop
cmp
jne
and
sti
repz
clc
movsl
sbb
or
aam
sub
and
movsl
sub
sbb
ret
shl
mov
jle
push
ret
icebp
nop
push
mov
mov
jno
lock
mov
mov
loope
mov
sbb
insw
push
arpl
jle
lods
adc
cmp
stc
jno
jp
add
mulb
jle
arpl
add
mov
sub
in
mov
outsl
insl
pop
xor
mov
pop
jle
ret
inc
adc
aam
fs
and
mov
fadd
sub
les
mov
or
jne
push
sub
ljmp
insl
cmp
lret
jae
cmp
adc
fucomi
and
xchg
mov
mov
sub
shll
mov
jns
jle
xchg
pop
adc
icebp
lock
jg
insl
push
mov
cli
jg
lret
insl
sub
cld
or
pop
out
mov
nop
aam
call
jle
xlat
jno
fisttpll
pop
add
ret
adc
nop
movsb
movd
mov
mov
jle
pushf
sub
mov
jle
inc
repnz
outsl
and
inc
jne
stos
or
and
outsl
xor
or
in
jmp
in
adc
jp
arpl
inc
test
ljmp
in
outsl
loop
or
or
in
aaa
js
mov
or
push
outsl
and
mov
xor
push
push
and
jecxz
sbb
hlt
mov
mov
sbb
add
pop
in
mov
mov
cmpsb
lock
pop
data16
mov
loope
sub
sub
xor
jl
stos
jns
jnp
inc
or
fisttps
jo
add
pop
cli
add
fisubrs
push
ljmp
mov
inc
rcll
stos
jns
jg
inc
dec
imul
sbb
clc
push
js
jle
push
mov
shl
fildl
mov
fisttpl
leave
aad
and
ficoml
sahf
adc
jae
jle
xor
add
pop
les
ret
mov
mov
ret
imul
push
dec
push
adc
cld
mov
jnp
push
lock
or
or
cld
cmp
cmp
mov
add
fdivs
hlt
or
sub
fmuls
ja
push
add
fdivrs
add
xor
xchg
enter
inc
pop
adc
xor
jl
stos
js
imul
pop
jle
pusha
aad
and
popa
adc
fwait
mov
stos
push
and
pop
aam
mov
aam
rorb
cli
cld
jle
arpl
aam
out
add
jle
inc
jle
add
jae
jnp
mov
push
and
jl
mov
shl
mov
jno
negl
ljmp
shrl
mov
mov
cmp
mov
outsl
cli
sahf
xchg
loopne
sub
cli
jl
iret
push
dec
enter
iret
dec
or
nop
sub
imul
sti
nop
cmp
sub
ret
add
fstpt
xor
into
fwait
jg
jno
into
cwtl
mov
jbe
dec
cmc
mov
ljmp
xor
cmc
lcall
out
nop
cwtl
int
outsl
hlt
lcall
int3
cmp
and
int3
mov
sbb
ror
mov
mov
jne
mov
lcall
push
lret
ret
lret
mov
mov
inc
insl
mov
nop
sub
inc
lret
jecxz
lret
mov
jle
bound
icebp
xchg
mov
nop
sub
leave
add
and
dec
push
lcall
jne
jb
xchg
xchg
fdivs
arpl
nop
inc
lock
pop
inc
push
enter
arpl
lret
scas
cli
xchg
jmp
sub
lock
je
ljmp
dec
in
ss
sahf
aas
sbb
leave
out
lcall
movl
pop
cmp
pop
movb
sbb
mov
sub
inc
lahf
jmp
jns
std
out
pop
popa
and
mov
xor
lret
lds
pop
push
in
sub
sahf
lds
pop
loop
in
mov
inc
les
jno
les
jo
ret
popa
mov
ret
pop
mov
ret
nop
sub
lock
pop
arpl
outsb
ljmp
test
mov
out
ret
ret
ret
jmp
out
jbe
pop
stc
test
jmp
loop
shll
js
aam
xchg
repz
sbb
stos
xchg
cmp
cs
push
ljmp
shr
jg
dec
js
cmp
out
jo
stos
xchg
pop
mov
jle
sbb
mov
pop
sbb
jecxz
mov
sub
stos
aad
sti
and
jno
inc
mov
pop
add
lods
fcomip
hlt
cmp
mov
mov
mov
out
mov
out
sbb
push
dec
mov
mov
aad
jb
jo
sbb
mov
adc
add
outsb
fldcw
cld
adc
sbb
call
or
mov
jo
xchg
insb
call
cmp
fwait
nop
ror
jl
jb
xor
jnp
in
loop
mov
test
cmp
scas
jnp
roll
data16
push
rcll
add
in
stos
pushf
inc
mov
cmp
adc
or
test
mov
arpl
push
mov
in
cmpsl
jl
mov
mov
rcrb
repz
pop
add
ret
bsf
nop
inc
out
test
mov
jle
fstp
add
mov
pop
and
push
mov
inc
cli
pop
insl
cli
lcall
je
xor
mov
clc
faddp
jecxz
pop
add
adc
dec
sahf
mov
sbb
add
adc
scas
xchg
outsb
mov
sahf
sub
mov
mov
clc
push
push
add
xchg
sti
adc
add
leave
mov
mov
mov
loopne
push
mov
mov
mov
mov
add
inc
ret
fs
mov
mov
nop
xchg
cmp
je
jle
add
sbb
and
jbe
iret
fcomip
xor
pop
push
fidivl
mov
rcr
loope
push
mov
pop
mov
aad
iret
mov
stos
xchg
lods
push
inc
in
jbe
fwait
pushf
popa
mov
ror
jbe
mov
pop
lock
jecxz
mov
out
inc
shll
push
test
mov
mov
push
adc
add
stos
inc
scas
mov
aam
mov
mov
mov
decl
pushf
cs
rorb
mov
mov
mov
push
push
shll
mov
pop
fstps
jecxz
mov
scas
nop
adc
sub
lock
push
sbb
mov
js
mov
lahf
inc
xchg
fisubrl
shlb
pop
lock
inc
fcoml
daa
mov
adc
adc
pushf
add
fadd
fists
push
add
mov
mov
ret
jb
add
pushf
push
mov
lock
fildl
or
fcom
test
push
mov
jle
shlb
loope
cmp
add
pushf
test
scas
sub
lock
js
xlat
add
stos
pushf
int3
scas
mov
jo
add
testl
inc
test
scas
iret
bound
scas
xchg
pop
add
push
repnz
xchg
insb
and
fsubrs
scas
add
mov
push
lods
mov
mov
sub
lods
ret
lock
or
lahf
and
inc
popf
or
jl
popa
sahf
jno
lods
inc
xchg
mov
lods
xchg
ds
mov
lods
add
jns
shll
lcall
add
inc
or
stos
dec
leave
fsubr
ljmp
or
aad
xchg
pop
sarb
mov
stos
mov
mov
push
lock
add
ret
hlt
stos
add
xor
inc
mov
dec
test
mov
xor
test
test
test
add
sti
inc
and
popa
fwait
popa
lret
test
mov
mov
shrb
push
mov
inc
sahf
pop
sub
mov
mov
cmpsl
popa
mov
pop
cmpsl
mov
shlb
pop
add
mov
rcl
mov
push
inc
cmpsb
popa
sahf
popa
pop
fimuls
pushf
mulb
cmpsb
ret
inc
int
lock
vmread
movsl
popa
sahf
xor
movsl
inc
mov
ret
add
jb
mov
pusha
push
jle
inc
mov
int3
pop
into
pop
push
adc
add
mov
ljmp
inc
mov
mov
mov
mov
scas
jae
out
pushf
xchg
mov
popa
mov
lock
mov
cs
shlb
jb
lahf
movsl
push
adc
add
xchg
test
aas
pushf
cli
mov
mov
inc
mov
addr16
push
lock
jle
pushf
mov
xchg
mov
aam
mov
mov
jle
and
stos
pushf
mov
mov
fwait
nop
pop
sub
mov
imul
push
sbb
popa
mov
push
lahf
mov
test
xchg
xor
mov
pop
jne
mov
jecxz
sahf
add
add
mov
mov
inc
jo
add
and
popf
inc
mov
in
shl
popf
add
sahf
add
les
rorb
dec
ret
ret
jno
pushf
inc
mov
mov
cmc
cmp
lock
movntq
push
negb
inc
popf
jecxz
fwait
add
push
loope
outsl
pushf
arpl
popa
mov
lcall
and
mov
ret
lock
pop
push
or
cltd
mov
mov
popf
lock
psubusb
popa
fwait
pushf
inc
cwtl
mov
sahf
add
shrb
jecxz
jle
es
mov
out
sti
ret
ret
cwtl
mov
pusha
cwtl
popa
mov
xchg
inc
xchg
or
mov
nop
sub
xchg
mov
xchg
mov
mov
sti
add
into
cli
xor
out
pop
mov
xor
mov
adc
add
xchg
popa
mov
jmp
lea
mov
nop
push
js
xchg
popa
lcall
xor
xor
add
stos
inc
inc
xchg
mov
mov
stos
pushf
notl
xchg
mov
xchg
and
mov
add
xchg
mov
ret
popa
dec
xchg
inc
mov
cmp
xchg
or
jl
lock
mulps
enter
xchg
imul
and
mov
mov
test
inc
subl
add
adc
inc
xchg
push
mov
xlat
mov
mov
or
ret
xchg
push
xchg
imul
flds
movsb
mov
add
or
mov
hlt
stc
push
dec
and
ret
jle
les
aad
add
xor
xlat
xchg
add
mov
jno
lea
xor
and
ret
sub
lock
arpl
lea
pushf
scas
lea
outsb
nop
les
lock
xchg
xor
mov
mov
pop
jmp
mov
movsl
nop
out
mov
repnz
add
fdivr
mov
ret
adc
push
fstp
add
mov
add
rorl
aam
popf
mov
cmp
ret
mov
pop
mov
push
fsubrs
fmuls
mov
pop
mov
mov
mov
pop
scas
mov
inc
xchg
inc
jb
mov
flds
pop
scas
add
cld
lret
add
ret
cmpsb
xchg
add
lods
mov
xchg
push
inc
xchg
cmp
ret
out
mov
mov
mov
movsl
push
adc
pop
loope
ja
cmp
push
bound
pop
add
mov
adc
fwait
pushf
add
dec
xchg
cs
les
add
test
scas
std
sub
lock
ret
pop
test
mov
stc
push
sbb
jmp
std
pop
mov
mov
test
inc
stos
jle
mov
mov
adcl
and
aaa
adcl
jecxz
addl
stos
jecxz
sub
stos
dec
mov
jnp
ret
xor
push
jle
add
mov
mov
shrb
imul
lahf
and
lods
mov
xchg
ds
mov
push
mov
rolb
fdivp
les
filds
movsl
xlat
mov
mov
mov
ja
repnz
fs
shlb
test
sub
adc
and
cmp
and
inc
jb
enter
out
xor
cmp
jp
cmp
inc
mov
inc
pop
mov
pop
icebp
bound
mov
fists
inc
mov
xchg
mov
mov
movsl
or
xor
push
lret
lret
xchg
mov
fcomps
inc
mov
test
mov
dec
fs
mov
sahf
adc
je
fldenv
shlb
mov
aam
lcall
cmp
ds
movsb
add
or
lods
orb
xlat
mov
adc
movsb
mov
sub
xchg
enter
mov
mov
ret
mov
test
xchg
subb
bnd
cmc
mov
loop
call
movsb
cmpsl
lcall
push
nop
xchg
push
movsb
icebp
in
js
adc
sub
in
mov
mov
xchg
push
movsl
adc
push
sbb
stos
ret
bound
or
lea
orl
aam
movb
pop
test
cmp
pmaddwd
sahf
mov
lea
ret
fisubrs
sahf
roll
movsb
xchg
add
xchg
movsl
ffreep
out
fsubr
pushf
test
ljmp
pop
xchg
fs
or
fsubrs
cmpsl
cmpsl
add
mov
hlt
add
sbb
rclb
adc
or
std
mov
incl
hlt
mov
fbld
pop
out
xchg
or
xchg
adc
adc
into
repz
rorl
loopne
rcll
mov
movsb
jge
mov
roll
adc
xlat
add
lea
inc
in
enter
xchg
call
pop
insb
movsl
je
rorb
loopne
and
fdivrp
movsb
cwtl
inc
jo
pusha
and
fs
mov
movsb
cmc
nop
js
xchg
leave
into
std
enter
js
sub
jl
clc
jg
imul
lsl
mov
sbb
dec
mov
pop
hlt
out
xchg
and
iret
cmc
dec
rcll
and
inc
sub
jl
popl
rcl
ret
pop
loop
scas
add
hlt
push
jmp
inc
mov
inc
stos
push
sbb
imul
cmp
loope
fimuls
cmp
out
sbb
enter
ljmp
mov
mov
mov
and
cwtl
inc
xchg
popa
aaa
sti
inc
and
cmpsl
push
pusha
cmpsb
lods
mov
cwtl
or
or
push
push
mov
inc
pushf
push
xchg
add
leave
add
out
adc
mov
addb
push
test
xchg
ss
xchg
addl
andb
adc
fmull
movsb
pusha
xor
sbbl
out
nop
sbb
cwtl
mov
test
movsl
imul
subb
jg
fmul
add
mov
addl
rolb
bound
orb
xchg
push
stos
outsl
cmpsl
mov
xchg
xchg
pop
mov
jbe
xchg
popa
std
xchg
sub
ficoms
mov
dec
add
inc
or
movsl
test
dec
push
xor
rorl
enter
xorl
push
cltd
jb
xchg
xchg
xchg
pop
ljmp
sub
mov
jo
dec
cld
mov
lea
mov
popf
cmc
mov
popf
mov
test
inc
xlat
mov
test
mov
shrl
mov
stos
dec
pop
ja
adc
ret
loop
ret
mov
push
in
mov
test
add
mov
scas
jle
inc
aam
mov
rorb
popf
dec
pmulhuw
pop
shlb
lock
add
mov
ds
test
mov
stos
push
orl
or
adc
push
int
ret
inc
and
shr
testb
cli
push
ret
rcrb
mov
cmp
insl
jns
test
aam
push
pop
movl
roll
inc
nop
nop
mov
xchg
stos
and
fimull
insb
xchg
inc
sub
xchg
lret
mov
cmc
adc
ja
pop
fwait
inc
mov
cwtl
mov
pop
enter
inc
lret
mov
int3
cwtl
cwtl
and
mov
stos
pusha
inc
cld
mov
imul
je
dec
mov
xchg
les
sbb
mov
jns
std
cmp
or
xor
adc
pushf
push
and
jb
add
mov
lods
inc
aas
lcall
aad
sti
int3
mul
or
xchg
sub
pop
ret
mov
jge
in
xorl
push
jae
cmc
xchg
clc
mov
imul
les
add
test
into
call
std
adc
add
jg
xor
mov
cwtl
cwtl
push
xor
cli
dec
rcl
scas
or
push
sahf
mov
aas
std
xchg
call
in
jb
int3
sbb
nop
aaa
lods
push
pop
mov
mov
mov
popl
dec
punpcklbw
or
or
pushf
stos
test
mov
xchg
outsb
mov
dec
test
mov
popf
sbb
add
loope
mov
mov
or
ret
mov
or
orl
sarb
loopne
cmc
pop
imul
or
or
daa
push
enter
rcr
or
or
rorl
dec
into
nop
mov
mov
dec
sti
push
ret
xor
xor
cmpsb
aam
xchg
in
rolb
ja
cmpsb
mov
jns
int
pushf
ror
stos
push
xchg
mov
sub
and
filds
stc
enter
sbb
sub
and
mov
xor
dec
into
mov
sub
les
mov
or
cmp
xchg
mov
mov
xchg
or
call
out
movsb
pop
mov
scas
sub
mov
mov
fldenv
int
cltd
lret
movb
jmp
mov
push
dec
mov
pop
in
xor
repz
repnz
movsb
or
pop
xchg
mov
sahf
mov
sbb
cli
jmp
test
scas
pop
stos
mov
cltd
cmp
aam
xchg
in
xor
sbb
call
inc
rolb
xor
mov
test
shl
dec
push
stos
inc
movsb
xchg
loopne
mov
or
fsubl
adc
dec
ljmp
xchg
cmpsl
fdivr
push
mov
pop
cwtl
mov
add
and
lods
or
mov
add
subb
adc
adc
pushf
or
xchg
fnstcw
xchg
scas
hlt
fwait
cwtl
push
or
cmpsb
push
enter
mov
xchg
push
mov
test
xlat
test
inc
inc
add
movsl
adc
push
or
xor
add
add
xor
pop
in
test
xchg
hlt
cmpsl
adc
and
orl
mov
movsb
xchg
or
je
xchg
cmpsb
mov
ja
xchg
test
mov
sbb
or
lcall
test
push
mov
shl
ret
cwtl
mov
inc
mov
shll
jne
and
inc
out
add
cmpsb
mov
push
or
cmp
out
cmp
or
movsl
subl
mov
xchg
sub
cmp
inc
cmc
pop
hlt
pop
adc
jl
sahf
adc
inc
adc
or
movsl
in
jp
xchg
jo
out
mov
mov
dec
xorl
hlt
mov
sarb
rorb
jbe
mov
sbb
jbe
rcll
sub
mov
inc
aam
xchg
shl
sub
rcrl
or
add
paddq
insb
and
jp
fbld
push
adc
fwait
xchg
mov
testl
lds
mov
fwait
jbe
mov
ds
mov
mov
hlt
mov
or
nop
les
pop
leave
movsl
cli
sub
cmp
lods
adc
jae
lock
dec
adc
jge
fstpt
or
mov
xchg
adcl
add
enter
leave
cwtl
popa
aam
mov
fiadds
fimuls
cwtl
nop
and
test
or
cwtl
xor
dec
or
jnp
hlt
inc
sub
into
int
jno
mov
mov
cwtl
push
add
in
pop
jp
lock
iret
fcoms
add
push
cltd
mov
cmp
or
in
int3
pop
dec
es
sbb
mov
dec
stos
dec
enter
lret
sbb
xchg
lds
out
mov
pop
jg
add
xor
shlb
xchg
or
mov
mov
mov
mov
incb
popa
icebp
add
push
mov
mov
inc
outsl
andb
or
mov
pop
aad
mov
or
lods
pop
add
or
test
and
dec
loope
mov
iret
jne
fisubs
mov
fnsave
rolb
xchg
lret
dec
lret
cmp
fs
xchg
xlat
das
and
addl
lock
cltd
add
movsb
pop
js
sub
adc
push
jnp
inc
or
push
add
or
imul
mov
popa
negl
scas
sarb
xor
push
out
stos
jle
out
stos
inc
mov
xchg
or
loop
adc
jo
pop
sub
xchg
mov
pop
popf
ffreep
lods
fildl
arpl
cmp
mov
mov
dec
ret
addl
hlt
pushf
or
push
xchg
mov
adc
enter
movsl
sub
sub
test
inc
ja
fdivl
jae
adc
xchg
lret
stc
mov
mov
sbb
lea
and
mov
rcrl
mov
test
xchg
imul
mov
das
adcl
ret
mov
push
mov
hlt
inc
pusha
jge
jae
loop
dec
scas
stos
outsb
adc
movsl
and
lea
subl
push
cmpsl
mov
lds
lea
pop
cmp
clc
and
add
sahf
pop
inc
loop
mov
xchg
inc
std
loopne
les
movsl
push
dec
inc
cmp
rorl
xchg
loopne
cwtl
mov
call
loop
lea
mov
imul
cwtl
or
mov
or
addb
sbb
add
xchg
test
sarl
mov
inc
bound
adc
jle
test
mov
jae
xor
push
cld
mov
jo
xchg
xchg
hlt
movsl
xchg
lahf
test
popa
orl
jecxz
imul
test
inc
aas
or
pop
sbbl
add
lods
mov
dec
insb
pop
dec
repz
mov
dec
or
call
movsl
pop
or
lods
sbb
pushf
ljmp
fistps
cmpsb
decb
mov
lea
lods
filds
sahf
dec
jg
leave
rcrl
jns
mov
or
mov
and
test
movsl
test
adcb
std
notb
lea
mov
int3
lea
cmp
push
ret
xchg
jno
ret
add
mov
rorl
iret
lret
dec
adc
inc
xor
adc
icebp
or
jl
inc
xor
cmovle
or
jo
hlt
mov
xchg
mov
push
adc
fbstp
cwtl
jne
cmp
fs
mov
in
test
enter
fcomp
mov
jl
push
xor
cld
mov
shll
xchg
enter
cmc
xchg
enter
xchg
stos
jo
mov
mov
imul
fnstenv
mov
dec
jg
aas
dec
aaa
adc
in
add
or
or
jno
jno
loop
test
mov
enter
test
shrl
sti
sub
hlt
mov
inc
jb
adc
or
cli
rcll
push
mov
fcmovnb
enter
cmp
add
add
mov
test
jae
je
jns
jp
cmp
ret
or
xchg
mov
xchg
insb
out
leave
inc
push
enter
enter
xlat
pop
xchg
or
inc
xlat
mov
cmp
dec
movsl
bound
movl
loop
mov
mov
mov
lcall
clc
sbb
mov
xchg
call
or
xchg
rclb
and
dec
push
mov
mov
jb
pushf
mov
movsl
frstor
orl
mov
mov
jnp
mov
jo
add
push
test
cmc
lea
and
push
pop
adc
cmpsb
or
adc
jl
push
hlt
mov
sbb
jmp
call
movsb
push
stc
jns
clc
pop
mov
shlb
cld
push
loope
nop
in
inc
push
cmc
testb
adc
push
shlb
mov
call
mov
dec
test
inc
mov
ret
cmpsb
movsl
pusha
std
mov
int3
pushf
mov
rorb
cmpsl
jle
pusha
cwtl
xor
inc
xor
and
xchg
fwait
mov
enter
call
dec
ljmp
enter
nop
imul
sub
cmpsl
stos
flds
loopne
dec
mov
dec
pop
and
pop
jmp
nop
out
jge
pop
mov
mov
fcom
int
xor
cmpsb
cld
pop
and
inc
or
adcb
cmc
test
lods
push
aaa
lea
lea
xchg
and
pop
add
int3
sahf
mov
pusha
cld
sub
or
shl
ljmp
movsb
fdivp
aam
pop
call
pop
or
test
mov
int3
test
pop
adc
repnz
pop
mov
adc
adc
push
mov
sub
push
rclb
fwait
lock
add
addl
xchg
rolb
cltd
imull
lods
les
jne
adc
inc
mov
aaa
push
call
xchg
add
add
aam
pop
xchg
addr16
pop
mov
ret
pushf
in
dec
or
bound
inc
jo
mov
jg
fdivs
scas
add
push
addb
push
shr
pushf
xchg
jae
and
xchg
lds
jg
stos
xlat
orb
fistps
aad
and
inc
or
mov
cwtl
or
out
xchg
xchg
sub
pop
inc
cwtl
movsb
sub
and
sub
push
hlt
in
sbb
repnz
hlt
mov
inc
jns
outsb
cmpsb
ja
or
adc
adc
insb
addb
jl
mov
inc
ljmp
xor
cwtl
inc
add
or
cld
int
mov
xor
dec
adc
test
mov
mov
ret
sbb
in
inc
stos
scas
lds
add
jo
adc
cwtl
xchg
adc
inc
mov
loopne
jmp
xchg
push
movsl
test
subb
sarb
in
scas
lds
test
test
or
clc
lret
fstps
add
pop
test
mov
les
sbb
leave
addb
lock
mov
cmp
sbb
add
xchg
test
lret
push
add
addb
iret
xor
lods
mov
sbb
mov
sbb
sbb
popa
js
mov
xchg
xlat
jl
sbb
dec
dec
mov
js
rcl
adc
mov
pop
xchg
pop
xchg
jo
decl
cmc
mov
testl
cmp
sbb
xchg
in
movsb
test
and
pushf
inc
mov
shll
rol
sub
mov
inc
or
test
sarl
xchg
test
fcmovne
add
jmp
sti
add
ficoml
mov
test
cmpsl
add
addr16
int3
fwait
and
mov
cmc
jae
sbb
ss
inc
lock
jp
pop
mov
nop
sbbb
adc
and
fmuls
or
sahf
sbb
dec
cmp
imul
push
mov
jno
mov
shrl
enter
jo
call
in
jne
sti
out
mov
adc
push
imul
bound
inc
fcomp
movsb
lret
push
cmp
loopne
jmp
imul
mov
pop
pop
or
in
mov
ror
and
push
inc
mov
push
lock
or
add
mov
and
xchg
cmp
pushf
int3
add
mov
andb
loopne
fdivrs
addr16
add
test
or
subl
or
adc
mov
lds
add
xchg
mov
fildll
ljmp
cs
add
and
jp
ljmp
mov
xchg
and
mov
adc
mov
cmc
lea
pop
jge
ds
and
inc
mov
shlb
into
xchg
lret
add
repnz
mov
pop
insb
repz
xchg
in
mov
mov
add
jmp
jns
je
incl
call
inc
fprem1
fimuls
mov
fidivl
pop
out
outsl
sub
imul
popa
mov
mov
dec
in
mov
call
mov
adc
mull
push
mov
shrl
and
pop
mov
les
adc
cmc
xchg
aad
pop
rcll
ret
sub
cmp
sar
pop
mov
aam
aaa
mov
repnz
pop
push
mov
repz
addl
jge
call
inc
inc
js
mov
push
fidivrs
mov
cld
fistpll
ds
jns
repnz
rorl
test
cwtl
xchg
mov
mov
mov
mov
in
fistpll
je
rolb
repnz
dec
push
daa
pop
nop
in
sub
xchg
sti
rorl
faddl
or
mov
lea
ret
inc
jmp
repnz
dec
push
pop
mov
daa
stos
add
mov
push
cmp
lock
or
pop
xchg
sub
mov
rorl
xchg
sarl
enter
imul
add
inc
mov
mov
mov
addl
dec
testb
jb
cmp
movsb
or
inc
mov
adc
nop
mov
ret
mov
mov
into
test
or
testb
xorl
rclb
cwtl
inc
popf
add
cmpsl
shl
pop
sarl
sbb
jge
into
pop
jo
lods
bound
adc
push
inc
mov
xchg
add
dec
pop
xlat
or
in
pop
mov
test
jmp
mov
inc
xchg
adc
cwtl
push
adc
mov
and
test
mov
sbb
cmc
cmp
fmuls
or
rclb
push
adc
psubw
rcrb
mov
or
loop
mov
or
je
adc
inc
mov
mov
pushf
aad
ret
loop
daa
mov
cmp
fs
test
or
lds
pop
clc
scas
nop
sbb
push
push
push
mov
shlb
push
xchg
push
rorb
stos
add
cmpl
mov
mov
push
push
nop
enter
jno
aas
fwait
enter
mov
mov
int
add
and
aaa
subb
adc
fstpl
fidivrs
dec
lcall
push
mov
dec
insb
xor
movsb
inc
mov
out
xchg
movsb
adc
sti
push
movsl
movsl
mov
insb
aad
insb
cmp
xchg
scas
ret
sub
push
pusha
lds
mov
or
xchg
pop
cmc
xchg
adc
test
adc
inc
addl
jns
mov
xlat
faddl
nop
stos
jae
push
add
sarl
sbb
cwtl
int
leave
movsl
xchg
loope
push
leave
xchg
xchg
call
shlb
shlb
outsb
or
ljmp
inc
insl
addl
xchg
xlat
hlt
xchg
xor
daa
fbstp
mov
adc
icebp
shrl
lret
cli
idiv
lds
in
insl
mov
mov
cmc
sub
insl
fsubl
cmpsb
inc
nop
imul
clc
inc
lret
imul
cmpl
inc
outsb
xchg
jne
leave
cmc
mov
lods
stos
push
pop
lds
int3
xchg
xchg
test
stos
jb
xor
mov
and
insb
lahf
xchg
sahf
rolb
jo
adc
add
mov
xorb
movsb
dec
lods
add
mov
mov
sub
dec
test
shlb
imul
stos
xchg
cmp
clc
iret
sub
bound
insb
sub
push
mov
xchg
movsl
int
cmpsb
hlt
imul
mov
std
aam
outsb
mov
dec
mov
ficomps
ret
rorb
inc
cltd
imul
cmpsb
lods
xchg
aas
or
stos
call
xchg
sub
push
lods
sbb
and
inc
cmp
das
jae
push
pop
orb
sbb
adc
shlb
lcall
mov
xchg
stc
out
movsb
mov
jmp
jo
hlt
movsl
in
das
xchg
and
je
sbb
pop
jb
jae
or
test
mov
in
mov
fcoms
adc
sahf
fimull
into
inc
movsb
xlat
rcrb
inc
inc
gs
hlt
in
mov
fldenv
sub
dec
cmc
xchg
out
in
nop
xlat
ror
rcrl
add
das
fdivs
push
enter
or
fsts
pop
mov
mov
cwtl
lods
push
mov
das
loope
jbe
xchg
xlat
mov
scas
enter
adc
adcl
cmpsl
into
mov
or
cmpl
aam
add
into
mov
add
mov
xor
cwtl
faddl
mov
add
aad
mov
shlb
push
cwtl
and
push
mov
or
or
lret
jle
aad
mull
sub
xchg
mov
neg
and
inc
mov
aam
pusha
or
scas
in
aad
cwtl
xchg
daa
sub
ret
insl
in
sbb
mov
call
pop
fmuls
jmp
xor
mov
sub
mov
jmp
rorl
addr16
mov
mov
add
mov
mov
and
push
lret
in
or
movsl
clc
fidivrs
mov
mov
jbe
dec
mov
adc
mov
inc
sarb
loop
les
insl
cmpsb
hlt
mov
cmpsb
std
lds
sub
flds
cmpsl
or
mov
shl
enter
mov
stos
andb
add
in
lods
xor
mov
mov
dec
movsb
call
out
xor
nop
es
lret
inc
fwait
test
adc
pop
dec
push
call
dec
cmpsl
push
out
mov
movsl
cmc
xchg
sub
aam
pop
mov
rcrl
pop
inc
xchg
hlt
mov
test
daa
inc
xchg
xchg
aad
sbb
mov
xchg
out
nop
enter
sub
sbb
popa
outsb
loop
push
cld
inc
imul
xchg
dec
jp
repz
mov
mov
push
inc
jmp
rolb
shrb
lock
pop
sahf
lret
cmpsl
ret
in
lds
shlb
mov
loope
jg
dec
test
enter
rcl
out
mov
shr
push
mov
movsl
ja
ret
nop
adcb
cld
cltd
mov
mov
mov
or
mov
imul
jg
cmp
pop
xchg
xorb
or
mov
mov
lcall
clc
ds
inc
or
mov
or
xchg
jbe
mov
or
sti
cmp
pushf
repz
xlat
and
inc
mov
ret
mov
inc
mov
enter
xchg
pop
rcrl
mov
xchg
ret
stos
xchg
xlat
loop
iret
xchg
push
xor
into
nop
pushf
or
ret
fstl
pop
pop
adc
cmp
adcb
pushf
pop
inc
cmp
or
push
fs
sbb
xchg
and
dec
fimull
mov
mov
pusha
push
ret
test
xchg
pop
loope
call
cmc
pushf
jo
leave
les
fs
pusha
hlt
adc
add
adc
nop
lret
fdivs
js
adc
frstor
in
add
mov
aaa
test
adc
mov
jb
add
xchg
or
cmp
or
push
mov
push
test
pminub
cld
inc
pop
xchg
jnp
test
cmc
push
test
int3
push
nop
mov
push
push
cld
rcll
push
add
xor
std
xchg
or
cli
cwtl
push
mov
loopne
nop
xchg
imul
xchg
mov
rolb
enter
out
test
gs
mov
xor
popf
or
xchg
lcall
loope
push
insl
xlat
ljmp
inc
out
push
fcomps
repnz
cmpsl
fucomi
scas
icebp
mov
mov
pushf
push
xor
lea
mov
adc
fcmovbe
adc
mov
sbb
xchg
dec
jle
shr
xchg
fldcw
or
or
in
mov
lock
imul
jb
mov
movsb
jne
ficoml
mov
lea
test
shrl
imul
xor
adc
push
dec
inc
or
fisttpll
loopne
jb
test
lock
test
xchg
aaa
sbb
js
mov
mov
or
mov
roll
fisubrs
into
mov
inc
xlat
mov
push
push
fwait
ja
pop
jg
imul
or
lret
mov
cmc
mov
push
mov
sarb
pop
inc
xor
push
pop
mov
pop
arpl
enter
add
inc
adc
adc
add
or
adc
call
faddp
dec
xlat
jg
insl
lcall
inc
push
mov
push
add
pushf
jns
xchg
push
pop
imul
sarl
das
pushf
sbb
and
test
lahf
sbb
push
arpl
lods
movsl
and
movb
pusha
adc
rorb
sub
sub
sub
and
fadds
or
fidivrs
shrb
fs
jno
test
out
sub
or
mov
inc
sbb
xchg
cmc
shlb
lock
fdivs
jmp
cmp
adc
mov
cmpsb
push
pop
or
mov
push
xlat
mov
scas
pushf
push
pop
in
or
xchg
push
and
jo
add
mov
jnp
push
inc
imul
cmpsl
inc
cld
stos
inc
push
in
xor
adcb
push
jl
mov
testl
mov
lods
mov
sub
rcr
lods
dec
push
daa
repz
sbb
subl
mov
dec
add
xor
push
and
shrl
xchg
bound
xchg
fidivrs
jl
adc
sbb
int
test
fistpl
or
clc
mov
dec
add
adc
mov
mov
dec
add
addb
aas
add
call
sbb
negl
fdivr
sarb
jp
std
and
aaa
dec
or
out
xlat
cmp
ljmp
xchg
sbb
add
outsb
inc
mov
enter
add
inc
test
mov
adc
pushf
inc
push
dec
scas
inc
push
test
mov
ret
and
push
mov
test
xor
lods
bound
jmp
in
jl
add
mov
shr
cltd
cmp
adc
subl
or
mov
rcl
dec
movsb
scas
shrb
lret
mov
mov
xchg
push
lods
inc
and
push
test
ds
jns
mov
stos
add
pushf
adc
movsb
ljmp
shrb
sub
rcl
ljmp
xor
test
mov
and
jns
loopne
xor
jae
ljmp
cmpsl
lods
add
andl
test
loop
in
clc
xlat
mov
mov
xchg
orb
mov
cmc
cmpl
mov
pushf
mov
notb
mov
xchg
xor
mov
or
adc
push
and
adc
outsb
push
inc
jnp
inc
popl
scas
sub
push
jl
stos
and
jl
jne
hlt
jmp
and
call
mov
std
lock
imul
repz
decb
push
inc
imul
decl
cltd
lds
mov
test
push
sahf
sarb
xchg
movsb
cltd
sbb
addb
in
imul
add
repnz
out
mov
and
cli
addb
test
cwtl
in
nop
mov
mov
repz
cmp
adc
or
lcall
lret
repz
imul
cmpsl
mov
mov
in
dec
mov
and
pop
call
repnz
rcll
icebp
sbbb
int
addr16
cmp
into
xchg
add
mov
imul
repz
xor
pushf
push
aam
fwait
dec
ret
es
push
xchg
inc
stos
outsb
xlat
jl
and
mov
sbb
loop
clc
shll
notl
clc
mov
call
stc
fisttpll
cmc
lea
ret
xchg
push
mov
push
rcrl
jbe
lret
repnz
mov
mov
test
mov
xchg
xchg
enter
stc
sbb
sbb
rcl
push
or
in
or
notb
test
aaa
xlat
insb
xlat
add
cmp
cmpsl
fimull
sub
nop
rorb
imul
sahf
div
sarl
hlt
fbld
pop
neg
ss
and
mov
mov
decb
jne
into
or
jg
push
rolb
and
les
lds
or
dec
adc
les
mov
fistps
push
xchg
and
push
pop
cld
fwait
cmp
push
cmp
std
xchg
jmp
stos
dec
jp
pusha
imul
movb
adc
rcr
mov
sub
cmp
add
xchg
mov
xchg
inc
mov
aad
inc
cs
push
pop
xchg
add
push
push
cmpsb
out
inc
popf
dec
add
add
add
insb
push
fildll
push
add
fdivrl
iret
mov
insl
push
sub
adc
mov
mov
pop
les
add
loopne
mov
xor
dec
adc
mov
inc
adc
cmp
adc
and
mov
sub
and
pop
dec
push
dec
xor
jno
fwait
mov
fstps
sub
push
adc
bound
pop
in
mov
mov
push
xchg
pushf
shlb
push
push
inc
mov
les
cld
inc
xchg
or
xchg
pop
jge
pop
leave
in
push
test
stc
pop
ror
jb
fxch
adc
stos
mov
clc
pushf
subl
mov
mov
sbb
leave
inc
imul
add
add
push
cmc
mov
xchg
mov
lock
inc
xor
mov
jo
jo
or
or
mov
jbe
imulb
nop
decl
dec
jmp
inc
mov
es
pop
jecxz
dec
push
mov
mov
shr
sbb
jne
push
mov
in
jbe
test
push
push
lahf
add
cld
dec
roll
mov
xchg
mov
or
out
or
rcrl
hlt
stos
sub
shr
cmp
shlb
stc
mov
or
flds
outsl
or
or
or
inc
test
rol
xor
add
sbb
scas
mov
loop
rcr
ja
test
add
adc
xchg
loope
lock
rclb
faddl
mov
call
xchg
mov
dec
out
mov
in
cmpsl
inc
pushf
mov
xchg
mov
xchg
mov
mov
and
hlt
int
cmpsl
xchg
outsl
jle
push
mov
sbb
fcmovbe
cwtl
lods
add
inc
stos
dec
out
inc
push
into
fbld
mov
pop
jl
adc
and
mov
mov
mov
sbb
add
fnstsw
sbb
pop
mov
jne
test
ror
xchg
cwtl
fildl
jmp
lcall
test
mov
mov
sub
xor
addr16
sub
ret
xor
cmp
mov
xor
fldt
or
push
jns
jecxz
js
mov
mov
cmp
inc
into
les
add
std
lret
pop
sbb
in
inc
and
loopne
push
mov
nop
ret
xor
into
stos
mov
mov
mov
inc
andl
fldlg2
push
xchg
xor
addr16
lods
loopne
sti
leave
hlt
xchg
mov
pop
fs
mov
fdivl
mov
mov
int
pop
add
clc
push
call
js
dec
push
lock
clc
inc
mov
incl
inc
jg
dec
inc
xchg
mov
hlt
xor
mov
inc
pop
mov
jo
or
cmp
incl
in
dec
cld
lock
clc
pop
sbb
out
adc
stc
cmp
jle
mov
push
fwait
cwtl
xchg
or
lods
fwait
xor
pop
jle
lcall
cli
or
jo
cld
call
lret
aad
neg
and
sbb
pop
push
xor
aas
jge
dec
nop
out
mov
xor
cld
subl
mov
sar
dec
test
add
shrb
xchg
sub
cmpsb
lret
test
ljmp
divb
jl
int
enter
call
mov
rcll
dec
mov
pop
lcall
cwtl
mov
int3
fcom
mov
or
cmp
add
mov
cmp
les
mov
sbb
out
adc
shlb
jno
test
pop
cmc
test
sub
cmpl
stc
cmp
and
hlt
mov
test
push
mov
jmp
jne
imul
sub
mov
out
out
aam
int3
xor
rolb
call
mov
mov
sbbl
cmp
mov
push
dec
fcoml
cmp
ret
test
mov
push
dec
lcall
aad
and
add
push
insb
mov
and
sahf
loopne
sub
fadd
push
and
lods
std
mov
dec
lods
les
enter
add
loope
out
int3
fs
gs
nop
shlb
test
pushf
push
test
aam
les
mov
gs
in
mov
mov
dec
out
mov
std
scas
iret
mov
fnop
repnz
push
sub
and
jo
inc
mov
push
or
cld
pop
sbb
pop
cmp
or
aaa
mov
ja
pop
inc
xchg
rcl
and
add
call
hlt
test
dec
fadds
push
sbb
jg
cld
or
icebp
cs
xchg
movsb
lret
leave
or
int3
sbb
dec
push
subl
fwait
clc
ret
sbb
inc
cwtl
push
or
add
out
or
mov
mov
cmc
cmp
fdivr
inc
mov
andl
daa
add
lret
push
xlat
xor
push
shrb
adc
insb
adc
sub
lods
cmp
in
popa
test
bound
pop
push
adc
dec
stos
fstpt
into
or
lret
adc
out
mov
mov
mov
fsubs
vmovhlps
dec
loop
hlt
mov
or
mov
inc
daa
inc
xchg
sub
aam
orl
fwait
mov
cmp
xchg
mov
mov
mov
rcl
inc
popa
stc
inc
dec
les
dec
xchg
enter
or
jle
in
sub
leave
aaa
call
and
jmp
push
test
sbb
add
mov
icebp
jae
adcl
xchg
mov
mov
lock
and
and
sub
mov
inc
in
xchg
adc
loopne
mov
test
lea
push
test
test
xchg
in
ja
cmp
xchg
popa
sub
mov
ljmp
ljmp
push
and
xchg
orl
imul
and
mov
adc
imul
ret
imul
jb
mov
push
mov
mov
xchg
hlt
cmp
or
fcoml
in
hlt
mov
mov
in
xor
imul
rol
in
mov
mov
jb
in
fwait
mov
shlb
adc
fsubs
jecxz
and
int
cmp
insb
scas
adc
or
sarb
outsl
or
int
sarb
xor
and
and
mov
sbbl
dec
mov
fadd
inc
iret
mov
add
test
test
int3
mov
xor
mov
xlat
inc
aas
mov
xor
loope
xor
mov
hlt
fstpt
jne
je
test
mov
mov
mov
fdivs
movsl
inc
rcll
sub
cmpsb
jl
mov
or
sbb
sahf
pushf
lret
and
dec
jne
mov
dec
scas
dec
cmp
xchg
fbld
or
inc
dec
enter
loopne
add
lock
mov
cld
mov
cmp
jnp
fldcw
inc
sbb
sbb
popa
cltd
ja
sbb
out
mov
push
enter
inc
and
jl
fbld
jl
add
cmc
pop
jo
rolb
lods
sbb
pop
add
divl
rorb
cmpsb
js
ficoms
mov
xor
push
mov
mov
pop
lahf
fmull
adc
mov
pop
mov
pop
sub
pop
cmpb
in
cmp
mov
fsubl
sub
inc
ds
mov
sub
lahf
add
add
or
or
push
adc
cmpsb
cmp
mov
sub
dec
xchg
mov
nop
xchg
rorl
out
xchg
mov
das
ret
lret
inc
pop
mov
cmc
jle
pop
addl
popf
lret
aaa
stos
lret
or
or
in
loop
rolb
mov
ret
fidivrl
sbb
hlt
aad
pop
fsubrs
ds
fdivrs
cmp
lods
mov
mov
jo
movsl
xor
jbe
pop
imul
movsl
enter
mov
fwait
xlat
push
cmp
shrl
test
add
movsl
icebp
adcl
inc
xchg
popf
subb
jns
test
mov
movsl
js
or
adcl
dec
bound
mov
xchg
jno
jmp
xchg
add
rcr
imul
mov
aam
test
inc
notl
pushf
jmp
pop
adc
jns
lods
xorb
ret
enter
mov
adc
or
dec
mov
mov
test
ficomps
xchg
imul
fiadds
xchg
xchg
or
mov
imul
cmpsb
test
clc
mov
lds
xchg
sti
push
sub
imul
xchg
fimuls
inc
pop
sti
test
inc
pop
adc
mov
cmp
sbb
mov
rol
inc
cld
hlt
insb
stos
repnz
pushf
dec
call
out
movsb
rcl
cmp
mov
iret
fisubs
jno
jge
cmp
mov
mov
jle
std
int3
inc
stos
inc
stos
mov
dec
stc
mov
xchg
js
cwtl
imul
inc
inc
stos
inc
and
fsubrs
add
adc
sbb
mov
popa
test
xchg
scas
xchg
mov
call
lret
lret
xchg
pop
or
test
push
xchg
push
xchg
shlb
inc
cmpsl
adc
mov
in
xor
mov
add
mov
push
leave
xor
inc
xchg
test
aam
mov
push
fs
fwait
xor
lret
les
ljmp
push
imul
pusha
mov
out
xorb
cmpb
inc
push
nop
pusha
dec
ja
cs
push
dec
or
sub
xchg
shlb
les
ds
or
clc
lret
pop
call
mov
call
frstor
lcall
push
je
mov
cmp
es
shll
sarb
xor
movsb
dec
jb
enter
xor
cmp
popf
ds
jge
out
cmpsl
adc
pop
dec
add
hlt
dec
push
push
sbb
mov
mov
push
mov
mov
inc
stos
cmp
popa
xchg
aam
mov
mov
xorb
xor
rorb
ret
add
dec
mov
shl
push
push
insb
adc
mov
jns
lods
movsl
pushw
enter
cmp
loope
cmp
adc
scas
mov
imul
mov
push
gs
cwtl
cltd
cmp
and
push
mov
lea
out
cltd
aam
pop
rolb
lret
mov
ret
div
testl
adc
mov
push
sti
add
xor
sub
shll
adc
repz
leave
cld
out
leave
loopne
mov
and
inc
adc
into
or
xchg
cwtl
js
xchg
mov
scas
add
bound
inc
rep
or
ret
mov
mov
and
mov
mov
mov
ret
pop
in
hlt
xchg
mull
in
fbld
movsl
xchg
sub
insl
mov
xchg
mov
sbb
lret
jo
clc
stos
hlt
jb
popf
mov
orl
mov
mov
hlt
jecxz
addr16
mov
das
adc
ljmp
jb
push
push
add
pushf
mov
or
fmuls
aad
and
in
in
mov
xlat
aaa
fucomp
fwait
int3
mov
add
int3
sbb
xchg
xchg
cmpsb
jno
call
rcr
mov
faddl
lock
ss
mov
fs
ja
or
dec
mov
adc
mov
or
xchg
scas
loopne
inc
loop
int3
cmpb
add
sub
push
hlt
movb
pushf
xlat
mov
pop
lret
scas
in
scas
enter
xchg
or
in
mov
les
mov
push
fidivrl
add
mov
xor
xor
loope
rorb
aam
add
stc
mov
call
push
cmc
lcall
add
mov
inc
mov
add
ja
xchg
movl
ret
mov
cmp
push
cltd
or
stos
inc
cmp
ret
mov
insb
mov
popa
add
xchg
sbb
add
lods
shrb
cwtl
insl
ret
loop
sbb
test
enter
sub
jnp
pop
add
pop
xor
jne
sbbl
pop
movsb
mov
popa
cmp
mov
push
inc
xchg
or
pushf
leave
mov
jns
subb
test
ret
pop
rolb
pop
sub
or
jbe
add
test
popf
das
inc
test
jg
stos
test
adc
in
aad
lret
xchg
add
inc
cmc
lret
adc
xchg
cmpsl
inc
push
into
or
fcoms
adc
int3
ret
int3
mov
cltd
push
mov
lods
shl
aas
adc
repnz
sbb
in
adc
pop
push
adcl
or
out
or
adc
mov
scas
loopne
jns
bound
pcmpgtb
mov
xlat
sbb
mov
rcl
rorl
mov
ss
xor
mov
cmp
aam
in
jmp
push
jo
loopne
xor
lock
orl
cli
adc
push
movsb
push
sub
pop
and
aam
jns
jmp
mov
xlat
mov
std
xchg
cmc
pop
inc
jo
in
xchg
jg
rclb
test
faddp
aam
arpl
scas
roll
push
call
repz
out
jo
jo
pop
mov
lds
jb
lret
bound
fs
lock
pop
sub
push
cs
adc
cmp
xor
andb
dec
adc
call
dec
fadds
insb
filds
or
mov
mov
adc
subl
shlb
adc
pushf
int
lea
por
rolb
icebp
mov
sub
hlt
mov
mov
dec
les
mov
xchg
lret
loopne
pushf
add
sbb
lods
movsl
mov
xchg
or
std
push
dec
xchg
popa
imul
cmp
or
jmp
cli
aaa
sarb
sbb
aaa
lods
rorb
pop
mov
xchg
mov
cmp
insb
shl
adc
leave
xchg
mov
adc
mov
add
jl
push
sub
lods
jae
movsl
in
lret
or
push
clc
lret
inc
xchg
mov
sub
push
xor
sbb
add
pop
shl
jmp
inc
or
fstl
mov
add
xor
bound
push
cmc
cmpb
test
lods
or
stos
call
or
in
push
adc
aas
xchg
sbb
push
es
jecxz
jmp
daa
fadds
in
loope
jp
aam
lea
mov
cmp
fcompl
in
test
subl
cmpsl
lds
movl
pushf
and
stos
add
rcrb
sbb
adc
out
in
mov
sbb
mov
jae
iret
xor
rclb
mov
int
addr16
stos
adc
jle
adc
fldcw
xchg
push
push
mov
enter
in
into
sbb
xchg
push
scas
out
and
ljmp
repnz
cmpsl
int3
roll
mov
sbb
adc
push
mov
in
rcl
rclb
adc
mov
shll
fcmovnbe
fwait
repnz
mov
orb
adc
stos
mov
mov
cmpl
push
jb
cmpsb
popf
mov
add
mov
into
std
push
cld
js
mov
je
scas
test
sub
dec
lret
sbb
xchg
mov
mov
shlb
shlb
loop
xor
aad
add
add
mov
cmc
pop
xchg
lods
imul
in
mov
xchg
mov
pop
jl
movsl
jnp
sbb
in
cmpsb
int
push
iret
sbb
cmp
rorb
mov
sbb
aad
test
mov
test
adc
rcr
ret
ret
mov
shlb
rorb
push
jns
cmpsl
add
inc
mov
adc
xor
test
mov
dec
aad
fmulp
mov
sub
pop
cltd
fisubrs
adc
hlt
adc
mov
int3
inc
mov
push
push
sub
dec
pop
xor
push
jo
scas
dec
pop
pop
inc
sbb
fucomip
push
in
mov
daa
add
pop
mov
hlt
dec
mov
xchg
mov
pop
and
imul
insb
sbb
or
psubw
lds
push
divl
sbb
test
lods
adc
push
les
mov
test
scas
fnstsw
orb
adc
movsl
jne
mov
xchg
adc
push
jb
adc
movsb
inc
sub
enter
rolb
int3
sbb
lret
clc
push
mov
or
rcl
nop
jns
loope
int3
sbb
xchg
test
cmp
inc
or
fs
sbb
roll
xor
mov
ljmp
fs
sbb
cmpsl
inc
ret
cmp
or
mov
mov
pushf
mov
inc
bound
or
inc
push
mov
in
shl
stos
cmpsb
pushf
adc
add
inc
outsl
inc
jge
fwait
lds
mov
or
xor
loope
enter
nop
dec
mov
lock
test
test
inc
fisttpll
imul
adc
mov
addb
pusha
and
xorb
dec
push
jp
pop
iret
pushf
enter
shl
cmc
fwait
xlat
int3
and
mov
outsb
or
mov
push
inc
adc
mov
mov
cltd
mov
xchg
sub
fwait
jmp
or
xlat
sub
add
cmc
jo
jle
popl
fs
out
je
inc
mov
cmc
mov
push
shlb
ret
popf
call
lcall
test
and
shll
mov
push
xor
fdivl
ret
pop
inc
jle
mov
test
mov
call
rorb
rcl
in
mov
int3
movsl
jo
mov
pop
mov
jg
cmp
nop
jecxz
add
inc
xchg
push
in
jbe
es
aad
and
shll
enter
inc
lods
pushf
jb
pop
popa
les
jb
in
test
mov
rclb
xchg
push
or
cmpl
je
das
sbb
push
dec
sbb
sbb
or
sbb
les
mov
lods
xchg
sbb
mov
cmpsl
jle
mov
cmp
xchg
push
and
dec
mov
cltd
les
adcl
bound
cli
imul
rcl
mov
push
xchg
xchg
outsb
aam
dec
and
fcom
adcb
push
in
outsb
inc
add
xchg
adc
dec
mov
les
cmp
jne
lds
mov
mov
fsubrs
lcall
shlb
divb
sub
jnp
or
adc
out
sub
sbb
cmpl
in
pop
xor
xor
frstor
jge
scas
dec
fucom
lcall
cs
bound
mov
movsl
mov
frstor
push
inc
xchg
loope
btc
and
mov
outsb
lds
push
mov
adc
inc
mov
adc
fstp
iret
outsb
movsl
movl
out
lods
sar
movsb
dec
mov
nop
cwtl
sbb
add
flds
push
test
inc
lods
roll
mov
orb
mov
xlat
jl
into
sub
mov
jg
or
enter
xchg
cmp
mov
or
imul
and
xchg
stos
or
arpl
iret
jne
mov
imul
pop
mov
rolb
mov
test
cmp
mov
jnp
fs
incl
and
or
jae
dec
test
pop
mov
cmp
cmp
mov
xor
pop
jp
stos
insb
inc
mov
sub
daa
fidivrl
and
pop
xor
ljmp
jg
notl
add
outsb
popa
lods
hlt
mov
or
aad
cmp
push
sub
xchg
sub
fistps
and
mov
adc
cmp
adc
subb
ljmp
mov
vcvtps2pd
jp
xchg
dec
mov
pop
push
xchg
mov
roll
sbb
popa
and
xchg
shrl
mov
sarb
xchg
test
std
call
inc
pushf
insb
add
pop
sub
ljmp
enter
fwait
lds
inc
fsubp
adc
add
lods
stc
sub
dec
jecxz
jecxz
xchg
nop
push
das
cli
add
outsl
inc
rcll
mov
add
shl
jo
filds
mov
pop
mov
mov
xchg
cmpsl
cltd
sbb
xor
jns
lock
add
pop
add
mov
pop
sub
das
mov
mov
mov
push
mov
lcall
test
push
mov
popa
and
nop
test
mov
xor
test
cmp
outsl
rcrl
push
cwtl
add
jnp
pusha
and
lods
fwait
xchg
inc
cmpl
enter
inc
rolb
and
jl
mov
push
and
push
add
jo
mov
les
push
pop
mov
cld
xor
mov
and
test
mov
cs
fadd
and
cmc
leave
cltd
xor
int3
cli
enter
pop
mov
xor
iret
xchg
or
push
sbb
int
and
cmp
test
inc
clc
push
out
pusha
inc
js
iret
cmp
inc
or
pop
add
lods
jge
mov
push
adc
mov
addb
ficoml
push
cwtl
xchg
pushf
mov
cmp
xchg
mov
sub
and
pop
jmp
pop
dec
lods
lds
imul
ret
nop
shr
inc
jbe
pop
ret
lret
arpl
leave
jns
pusha
add
mov
ret
stos
loopne
movsb
popl
sarl
inc
dec
mov
pop
xchg
ret
shll
or
push
clc
fldl
aad
orb
fistpll
adcl
aam
mov
fisubrl
insl
leave
rclb
lods
add
mov
jo
into
insb
dec
push
mov
iret
mov
into
shlb
mov
and
rolb
lods
mov
js
roll
cli
add
js
imul
jb
xchg
lret
movsb
arpl
jmp
lods
or
push
movl
xchg
dec
aas
or
jo
aad
push
push
js
sbb
xchg
jp
rol
test
rcll
mov
lds
scas
mov
or
xchg
ret
sbb
sub
xor
aaa
sub
jno
pop
xchg
nop
mov
xchg
xor
jmp
stos
scas
jbe
mov
andb
pop
cmp
shlb
rcr
lret
icebp
jmp
cmp
nop
cmp
ljmp
imul
inc
cltd
push
and
inc
cli
enter
mov
xchg
mov
xchg
hlt
lahf
cmp
lods
add
mov
xchg
pop
pop
test
ret
cwtl
jle
fcmovu
add
pusha
std
rorb
push
and
adc
adc
ficoms
movsl
inc
js
cmc
addl
nop
mov
push
mov
mov
dec
cs
shl
adc
push
movsb
subl
addr16
add
and
ret
popa
test
lods
lock
rcrb
jbe
xor
add
ret
decl
dec
push
xor
into
out
lea
sub
ja
or
and
out
xor
dec
jl
push
and
jecxz
in
loop
je
or
mov
cmp
jae
call
dec
xchg
imul
mov
ds
cmpb
mov
jecxz
aas
out
test
stos
mov
movsl
mov
nop
add
fiadds
push
enter
aad
cwtl
rol
fcompl
sub
std
mov
mov
xchg
call
call
mov
cmpb
jle
es
hlt
and
shl
loopne
fnsave
add
pop
mov
xchg
mov
daa
mov
cmc
movsl
out
ja
cmpsl
imul
imul
rcrb
cmp
adc
lret
jge
add
jno
pop
roll
shll
sbb
mov
in
push
xchg
xchg
xchg
inc
add
cwtl
sub
popf
orb
xchg
xchg
jge
test
jmp
mov
pop
mov
fsts
cmp
add
or
ret
mov
push
adc
lcall
or
xchg
cmp
push
cmpsb
std
movsl
enterw
aam
add
mov
or
mov
add
rorb
xchg
cmp
mov
xchg
aad
outsb
or
pop
movsl
mov
push
mov
movsb
pusha
add
shr
sbb
ret
xchg
rcrb
mov
notl
lods
mov
fwait
incb
inc
xchg
in
mov
adc
lcall
rorl
jo
insb
lcall
mov
fidivs
lret
xchg
enter
test
movsb
in
mov
fdivrs
adc
mov
lock
movsb
mov
xor
mov
inc
mov
inc
daa
fcomps
rcrb
adc
cmpb
ja
mov
mov
lock
pushf
pop
xchg
data16
scas
addr16
jmp
or
mov
test
adc
test
mov
sbb
jae
jg
lock
test
mov
mov
or
jb
cmpsb
out
test
enter
nop
ret
out
mov
or
dec
and
xorl
pop
in
stos
movsl
outsl
loope
scas
movsb
add
and
or
sbbl
sbb
enter
aam
into
jmp
stos
fcomps
xor
pop
movsb
mov
les
stos
mov
dec
lock
fcmove
dec
adc
mov
dec
aam
cld
fwait
je
jae
call
ror
les
push
mov
test
inc
mov
adc
movsb
insb
mov
mov
adc
or
inc
movsb
push
enter
icebp
xchg
aam
jmp
shlb
or
imul
cld
rorb
lock
fdivrs
fistpl
xchg
mov
and
add
mov
mov
les
subb
mov
add
lock
clc
dec
hlt
dec
mov
into
mov
test
data16
add
out
mov
ljmp
mov
adc
xchg
scas
ror
push
mov
mov
scas
mov
rcl
mulb
mov
xchg
shl
ljmp
and
pop
popf
fistpll
xor
lea
xchg
sbbb
fs
xor
lods
xchg
lahf
orl
shll
inc
ss
push
rclb
das
sbb
add
jge
lret
enter
cmp
rol
push
xchg
seto
into
rcrb
rcrl
aam
lea
jecxz
push
into
mov
mov
test
jo
push
jnp
xchg
movsl
lds
lock
xchg
les
leave
sbbb
sar
movsb
inc
push
mov
push
or
mov
das
rclb
cwtl
jns
xchg
loop
sbb
mov
adc
icebp
iret
sbb
jmp
and
mov
nop
and
sub
push
dec
xchg
and
ds
mov
xor
cmp
cmp
push
sbb
adc
ss
aad
gs
shlb
and
lret
and
inc
pop
lods
jo
fildl
sti
ja
shrb
inc
rolb
sub
test
addl
add
stos
arpl
fimull
into
push
fiadds
cld
jg
dec
daa
inc
add
jmp
xchg
fisubrs
cmovs
sbb
sbb
in
test
rorl
mov
sub
push
sbb
xchg
idivl
xchg
mov
aas
jne
jne
jbe
jp
push
mov
xchg
sahf
mov
fsubl
lcall
cmp
push
test
push
xchg
stos
jno
cli
pop
mov
or
aas
nop
or
mov
outsl
mov
or
xor
mov
sub
mov
leave
in
rcrb
out
and
sbb
popa
push
je
jmp
mov
aaa
dec
jo
mov
fucomp
test
inc
fwait
adc
addb
out
adc
cwtl
cmp
or
jnp
hlt
imul
cmpw
mov
out
sarl
pop
cmp
dec
jl
fmuls
rcrl
adc
ror
leave
std
lret
loopne
mov
mov
std
push
aaa
xchg
sbb
mull
xchg
test
test
jnp
rorb
or
and
sub
fs
mov
or
xor
adc
or
in
ret
loopne
jns
cmovs
sahf
xor
mov
add
mov
xor
aam
rolb
dec
or
jb
mov
push
sub
jge
and
push
cmpsb
pop
test
push
imull
scas
ss
xchg
pop
lods
mov
cmp
mov
jo
push
fs
mov
lock
inc
and
mov
mov
ret
sbb
and
lods
fldl
pop
lock
inc
push
into
inc
insl
or
lret
adc
sbb
adc
les
mov
xor
push
push
mov
push
ret
sbb
pop
mov
mov
faddl
fs
or
pushf
and
or
and
mov
push
cmp
scas
daa
shlb
nop
lret
xor
mov
inc
and
jecxz
inc
mov
mov
mov
movsb
jne
mov
lret
call
add
ret
aaa
ret
jno
pop
iret
dec
stos
shrl
in
mov
mov
into
shll
xchg
mov
jmp
mov
dec
add
inc
push
xor
add
ret
jns
les
decl
adcl
and
jge
test
and
dec
add
jo
nop
or
jmp
adc
fisubl
jo
sub
xchg
cmp
lods
inc
das
lock
mov
repnz
pop
add
pushf
ret
xor
cmp
sbb
shlb
sti
sbb
into
lods
lcall
inc
stc
mov
inc
mov
ret
sbb
cmp
sbb
cmp
push
nop
mov
adc
inc
adc
orb
ret
pop
mov
je
add
inc
cmpl
cmp
rclb
gs
push
add
shll
nop
mov
xorl
xchg
xchg
pop
je
mov
aam
xchg
sbb
xor
xor
fs
push
and
out
dec
mov
add
jecxz
cmp
xchg
xchg
jle
push
sub
iret
cld
sub
orb
mov
cld
xor
loope
shrl
push
dec
mov
cld
xor
jp
rcl
adc
hlt
mov
negb
fadds
inc
aas
in
cmp
sbb
jb
ds
cmp
ljmp
fists
add
cld
outsb
and
inc
or
inc
sbb
dec
fsubrs
mov
mov
and
in
js
repnz
inc
xor
cwtl
xor
and
mov
imul
jnp
orb
xchg
dec
cld
mov
mov
test
sbb
shll
data16
lret
mov
insl
adc
aam
and
mov
sarl
mov
push
adc
xchg
popf
xlat
xchg
xlat
inc
lods
mov
push
xor
repnz
mov
ljmp
xor
fidivs
dec
jmp
pop
lret
loop
add
inc
mov
or
loope
mov
roll
mov
inc
aam
sub
jmp
ja
fwait
jg
mov
mov
xchg
push
je
adc
int
xchg
xchg
shrl
push
xchg
stc
or
inc
negl
mov
int3
lret
int3
test
out
insl
outsl
addl
mov
in
aam
fmul
fmul
push
out
loopne
clc
fisubrs
xchg
stc
lret
lods
nop
lcall
adc
or
call
xor
mov
jnp
clc
mov
or
test
roll
setg
imul
pop
mov
negl
or
lahf
inc
cltd
push
mov
jo
lcall
mov
jnp
lock
or
xor
cmc
fwait
add
push
cli
fidivrs
jle
orb
mov
outsb
popa
xor
stos
adc
out
popf
mov
mov
mov
mov
xchg
jb
xchg
mov
inc
ljmp
cmp
and
sarb
jl
popa
shrb
andl
mov
mov
in
xchg
mov
enter
mov
test
adc
enter
lahf
shlb
ret
loopne
in
call
nop
lock
in
loop
mov
mov
add
test
lds
mov
lret
mov
sbb
movsl
or
mov
or
inc
sbb
dec
mov
js
mov
pop
push
lds
test
xor
pushf
jnp
sub
iret
fcomps
shrb
or
mov
mov
sub
adc
or
roll
mov
add
mov
imul
cmp
gs
incb
out
rcrl
andb
mov
repz
sub
in
mov
imul
dec
xor
fmull
adcl
cwtl
jp
xchg
cwtl
inc
iret
jb
xchg
hlt
aad
or
popa
int
push
push
shrb
push
sub
sbb
into
mov
xchg
movsb
mov
push
test
call
stos
cmpl
inc
popf
sbbb
jo
out
adc
loope
adc
les
fisttpl
lret
nop
xlat
cmp
dec
mov
pop
xchg
cmp
mov
lret
jb
call
divl
call
repz
ss
sbb
mov
pop
psubq
push
push
inc
cmp
sub
or
in
pop
lock
and
or
mov
in
xor
and
data16
icebp
mov
sti
jbe
aaa
and
int3
mov
fstpl
movsb
ror
leave
adcl
mov
mov
dec
jae
or
mov
mov
xchg
jae
in
push
mov
and
fldl2e
andb
inc
in
pop
in
or
inc
mov
andl
dec
iret
das
xor
imul
popf
je
out
jne
mov
fwait
ret
push
imul
lret
mov
icebp
adc
adc
lret
add
cld
mov
mov
pop
shll
push
mov
mov
sarl
xor
jns
adc
lds
mov
adc
cmpsl
fwait
xchg
aad
or
ret
sbb
jb
cmp
in
pop
add
in
or
mov
into
in
cs
insb
xlat
arpl
xor
popf
mov
lcall
popa
stos
cmp
ljmp
push
cli
les
or
inc
push
mov
adc
mov
shr
mov
lock
and
out
iret
mov
push
sub
xchg
ljmp
cmp
cwtl
int
mov
jo
push
out
xchg
jle
sbb
and
pushf
ljmp
xor
add
outsb
xor
push
shl
mov
dec
push
pop
sub
insb
jbe
push
sti
and
ds
lds
and
adc
lahf
ret
ds
sub
xchg
rolb
inc
mov
cltd
mov
push
pop
test
aaa
outsl
orl
les
out
test
nop
mov
addl
int3
mov
and
inc
insb
fisubs
roll
scas
inc
push
inc
push
movsb
add
lods
dec
push
and
nop
push
repnz
aad
test
les
jecxz
lods
mov
or
out
fwait
mov
outsl
adc
cmp
xor
pop
jno
jmp
enter
mov
movsl
movsl
mov
mov
subl
jne
jle
dec
mov
repz
lcall
cmp
mov
xchg
cld
or
in
push
adc
xor
jge
add
push
aas
or
cmp
lods
aad
pop
fcom
xchg
rcl
inc
jl
dec
cmpl
pop
mov
in
cltd
mov
or
add
fldcw
mov
pop
clc
insb
add
les
cmp
mov
ja
jno
test
and
addl
cmc
test
enter
mov
iret
mov
int
inc
movl
std
rclb
sbb
outsl
xor
adc
inc
cli
or
sbbl
pop
bound
pushf
add
jg
add
sub
xchg
idivb
mov
fiaddl
rcl
push
leave
lods
sub
push
test
movsl
into
add
orl
in
lods
aas
xor
and
test
loopne
rcll
flds
cmp
es
stc
adc
add
call
cmp
jmp
idivb
xlat
repnz
ret
test
xchg
jae
add
in
sub
add
cli
dec
and
push
shl
xor
jmp
xor
adc
out
mov
loope
jg
mov
lcall
mov
fmull
pop
sbb
call
hlt
mov
adc
movsl
cwtl
rcrl
scas
or
movsl
cmp
adc
mov
in
add
jae
lods
adc
mov
add
push
loopne,pn
sti
jo
movsl
aad
push
fmulp
push
pop
daa
popa
movsl
nop
mov
vcmpps
lods
mov
frstor
daa
push
push
subb
adc
sbb
je
in
sub
sub
push
add
rol
jae
ret
dec
rcrl
add
subl
xor
mov
and
jp
repnz
or
hlt
rcl
mov
scas
xlat
add
popf
inc
popa
ret
aas
jbe
mov
add
mov
adc
fisubs
adc
cmp
inc
les
mov
adc
mov
xchg
sbb
mov
nop
sub
popf
cs
ret
xor
cmp
sarb
mov
test
push
adc
mov
pusha
lret
popf
les
insb
xchg
jo
je
ret
inc
test
adc
cs
mov
mov
int
jne
stos
popf
xchg
xchg
les
add
mov
insl
xchg
ret
cmpsb
mov
mov
mov
popl
mov
les
or
into
mov
fadd
fdivl
and
mulb
inc
inc
pop
loop
mov
rolb
push
or
cmc
shr
test
and
aam
cmc
clc
add
cld
mov
or
adc
sbb
ret
sub
or
or
les
inc
mov
rcrb
add
push
mov
pusha
les
mov
mov
ret
js
jl
nop
rorb
push
test
test
mov
or
xchg
xchg
mov
nop
mov
loop
cltd
lods
mov
mov
out
adc
enter
rcrb
mov
loopne
mov
call
jne
or
mov
add
pop
sub
daa
jecxz
fsubrl
cmp
rorb
mov
sub
scas
or
push
mov
mov
nop
shll
push
xchg
hlt
mov
xor
inc
fildll
add
mov
outsl
out
addr16
push
mov
pop
push
push
rclb
add
mov
pop
mov
test
out
mov
in
adc
sub
cmc
adc
movsl
push
xor
in
adc
hlt
mov
inc
in
mov
stos
mov
ficomps
enter
mov
cltd
xchg
call
add
jge
mov
cmpsl
mov
mov
scas
xchg
lds
pushf
mov
leave
pop
in
scas
test
cwtl
adc
popa
adc
add
rcll
or
jnp
pushf
pop
addl
add
nop
repz
add
fidivrl
pusha
add
loop
mov
popa
ret
nop
orb
rolb
cmp
xchg
xchg
pushf
sub
rcr
mov
sub
xchg
loopne,pt
cmpb
or
std
clc
jmpw
jg
mov
into
inc
mov
xlat
mov
lcall
xchg
shr
jg
in
or
loopne
or
and
shrb
ljmp
mov
ror
lock
mov
lods
mov
push
stos
xchg
mov
imulb
add
xor
vandnps
ret
in
inc
fcomi
sub
loopne
mov
hlt
ret
in
test
cld
stos
push
mov
fs
dec
add
inc
hlt
jmp
frstor
and
cld
xchg
push
mov
or
pop
outsl
sbb
rcll
inc
xlat
lods
mov
loopne
inc
hlt
decl
or
or
arpl
fstp
hlt
cld
xchg
in
cltd
shlb
push
ret
xchg
test
or
lods
inc
hlt
cmpsl
rclb
dec
imul
ret
xchg
rcll
and
leave
in
sbb
aad
sbb
cmc
fcoms
xor
in
add
jnp
jmp
dec
push
and
adc
dec
push
xchg
xchg
or
fdiv
ss
cli
and
cmp
inc
loop
xlat
loopne
stc
fsub
int
mov
adc
xchg
ret
mov
test
pop
mov
add
sub
ja
adc
jl
mov
or
sub
push
cs
push
inc
adc
cmp
cmp
loop
ficompl
call
sti
cmp
outsb
nop
lods
sub
mov
mov
popa
in
mov
jns
xchg
subl
aas
ret
mov
ja
pop
cmp
pop
pusha
mov
dec
nop
jp
and
jg
push
ljmp
xor
pop
subl
aas
mov
or
notl
dec
cmpsl
sub
scas
mov
sbbb
nop
lock
insb
lcall
jns
xor
jecxz
test
mov
xchg
and
add
mov
in
dec
xor
or
mov
rorb
std
lahf
or
push
adcl
mov
and
xchg
rcl
je
inc
adc
neg
movsl
rcr
push
shll
and
scas
test
pop
mov
repnz
lret
outsb
jg
xchg
dec
outsl
insl
jnp
cmp
inc
hlt
jmp
or
nop
int3
or
add
mov
adc
pop
xorl
mov
fistpl
adc
fyl2x
add
call
push
xchg
imul
mov
and
push
xchg
xor
pop
rcr
movsl
push
pop
movsb
mov
mov
nop
and
mov
dec
dec
test
bts
mov
dec
push
push
leave
jbe
iret
es
add
test
hlt
or
jo
pop
cmp
ljmp
lcall
pop
add
dec
sub
movsl
daa
push
repz
out
lods
stc
aam
icebp
mov
arpl
stos
ss
mov
push
cld
int
loop
add
popf
lock
jmp
std
xchg
adc
nop
jns
fwait
shld
xlat
ret
mov
aam
scas
setns
movsb
mov
pop
movsl
mov
out
cmp
cmp
rcll
xor
aam
push
idiv
add
cmp
daa
jb
xlat
lea
sub
xchg
jecxz
add
incl
inc
std
xchg
xchg
cmpsl
lcall
fidivrl
push
inc
sub
std
jmp
lods
lods
test
cmp
dec
rcr
outsl
ret
or
mov
mov
call
decb
and
lds
inc
ljmp
cmp
sub
dec
add
sar
arpl
mov
hlt
fcmovnbe
cmp
adc
xor
jne
cmp
lods
out
repz
xchg
mov
mov
cwtl
mov
inc
cwtl
mov
in
adc
xlat
pop
push
in
mov
cmp
pushf
or
mov
cwtl
xor
xorl
jge
mov
orb
cmc
pushf
add
mov
sbbl
pusha
add
mov
imul
loopne
rol
add
movsb
imul
xchg
inc
cmp
mov
cmp
pop
fisubs
mov
lcall
loop
pop
mov
enter
or
inc
xor
aam
mov
and
adc
or
jl
call
lahf
inc
sub
iret
int3
insb
aam
fwait
call
mov
fdiv
fstps
lods
shll
push
fbld
mov
pop
xor
and
icebp
jbe
fwait
push
xlat
mov
testl
xchg
movsb
enter
int3
daa
mov
or
jecxz
loopne
mov
rcl
lahf
aad
into
movsb
sbb
cmpsb
dec
dec
inc
adc
mov
pop
xchg
int
cmpsl
push
xchg
push
xchg
call
and
sarl
popf
fsubrs
repz
seto
arpl
jecxz
lods
popf
je
shl
imul
push
rol
xchg
call
sahf
dec
or
les
cmp
hlt
adcl
cltd
mov
or
decl
mov
nop
push
lcall
nop
adc
cmpsl
push
inc
cmp
xchg
lcall
jp
daa
xor
dec
mov
dec
int
xchg
loop
inc
loopne
xchg
mov
jns
and
addr16
inc
lret
mov
or
in
sti
dec
dec
loopne
nop
dec
fwait
push
dec
std
in
es
mov
lock
icebp
jl
xchg
insb
rorb
sarl
out
add
int
and
inc
add
rcrl
or
repz
subl
cmpsb
inc
push
xor
nop
or
mov
mov
cwtl
mov
cltd
mov
sub
rclb
cmpsb
inc
dec
mov
insb
add
xchg
faddl
scas
push
mov
into
adc
and
mov
xchg
mov
outsl
inc
add
fstps
xor
inc
call
lds
mov
mov
xchg
xchg
dec
clc
jne
or
mov
cmp
xchg
hlt
loope
popf
andl
aad
loop
adc
push
jg
mov
sub
xchg
xlat
stos
xchg
or
in
jne
nop
lahf
stos
dec
or
arpl
dec
movsb
jl
and
in
add
fdivr
aaa
pop
mov
xlat
in
ljmp
dec
pop
cli
mov
std
and
dec
mov
lods
xchg
loopne
call
int3
sub
xchg
loope
mov
nop
aaa
cmp
scas
sub
inc
dec
xlat
stos
dec
or
push
rcrb
dec
out
inc
inc
ljmp
lret
rorb
rcl
or
ret
cs
sub
mov
pusha
lret
hlt
stos
iret
push
daa
sub
or
in
shl
scas
imul
jo
shll
jp
nop
cs
andl
inc
xor
mov
shlb
enter
in
cmp
cwtl
ljmp
lret
xchg
aam
cmp
xchg
ret
in
jecxz
mov
mov
and
push
pop
or
scas
lock
out
xor
lock
cwtl
cwtl
cwtl
mov
inc
xlat
pop
xor
mov
mov
pushf
inc
adc
shrb
push
cwtl
fs
leave
aad
push
push
mov
shll
pushf
xchg
ja
nop
in
cwtl
pusha
testb
mov
xor
iret
mov
dec
mov
int
adc
int
mov
rcrb
std
mov
xchg
mov
out
mov
out
mov
mov
sbb
sarb
xchg
insl
std
mov
push
xchg
lods
ret
inc
test
pushf
aas
sbb
add
in
fldl
aam
mov
or
lcall
xchg
push
fst
arpl
add
sbbb
dec
ja
xchg
mov
stos
xchg
cwtl
jg
jle
add
lret
cmp
ret
lods
fwait
dec
rcl
or
arpl
inc
test
xchg
xchg
jnp
movsb
push
jbe
testb
or
stos
dec
and
leave
mov
mov
push
adc
scas
cmp
xchg
push
mov
nop
and
mov
scas
lds
inc
mov
icebp
xlat
mov
or
mov
popf
js
push
out
push
sub
cwtl
xchg
push
mov
add
xchg
shll
or
mov
stos
out
xchg
fucomi
rcl
mov
loop
cmp
mov
lahf
mov
or
frstor
jle
add
jl
and
or
push
cmp
sub
test
mov
xchg
jbe
jbe
movsb
leave
dec
cltd
inc
in
add
or
push
popa
popa
js
dec
jg
test
sub
outsb
repnz
pop
mov
adc
mov
xchg
ret
mov
pop
outsb
and
lret
popa
mov
jecxz
rcrb
xorl
inc
cmp
pop
adc
fistpll
mov
push
xlat
popl
movsl
lods
mov
jmp
lea
adc
jns
aad
cmpsl
xorb
stos
fdivrs
xchg
stos
inc
mov
in
mov
mov
incb
cld
ret
cmc
sbb
stc
mov
outsb
mov
mov
outsl
insl
dec
cmp
sbb
mov
push
pop
ror
movsb
xor
push
mov
push
iret
shlb
scas
dec
push
out
fnstcw
or
shlb
subl
ljmp
jg
andb
and
int3
int
and
xor
mov
fs
nop
xchg
ja
mov
xchg
mov
mov
xlat
cmpsb
leave
xchg
pop
out
mov
push
inc
mov
jl
push
lret
stos
push
xlat
cmpl
lods
mov
push
popf
fbld
aas
adc
dec
sahf
sbb
or
or
mov
dec
cwtl
pop
xchg
add
movsb
daa
test
push
sbb
gs
cmpsb
add
rorb
mov
pop
push
mov
pop
outsl
dec
loopne
lret
lods
sahf
jb
andb
add
in
jp
ds
mov
incl
aad
mov
in
imul
pushf
and
stc
inc
mov
dec
mov
sbb
test
jnp
mov
xchg
or
xchg
or
dec
push
push
sti
mov
movsb
mov
cmpsl
lds
lahf
or
mov
hlt
lds
cmp
and
je
aas
jns
aas
lret
das
lods
xorb
aad
jge
jge
mov
enter
pop
stos
mov
mov
fcompl
mov
into
xor
push
cmp
xchg
jecxz
pushf
out
xorl
or
lcall
dec
or
cmp
inc
push
xchg
xchg
push
outsl
or
lds
jge
adc
mov
lret
fnstcw
out
dec
dec
mov
and
xchg
outsl
aad
or
dec
nop
clc
xor
jmp
and
in
add
scas
dec
mov
movsl
hlt
and
ljmp
mov
xor
xchg
test
lcall
cs
mov
nop
xchg
and
xchg
mov
jnp
or
std
push
jnp
dec
mov
dec
mov
mov
inc
nop
jne
rcrl
imul
mov
test
jg
lds
and
inc
sbb
push
fisubs
mov
out
jge
cmp
pop
stos
rclb
movb
int
lahf
clc
jecxz
imul
or
jnp
aad
cmpsb
push
xor
inc
in
mov
or
aas
outsb
lock
dec
jae
inc
lahf
rorl
imul
mov
jle
test
pop
mov
adcl
hlt
test
fld
es
mov
jae
mov
push
cs
repz
mov
pusha
insl
leave
aad
subb
xchg
stos
int3
mov
add
cmpsl
aad
jge
jae
push
int
stc
jge
xchg
xlat
rcrl
addl
add
or
pop
pop
jno
test
lret
icebp
jnp
pop
pop
sbb
xchg
hlt
lea
lret
orl
mov
lods
adc
xchg
mov
mov
out
mov
xchg
pushl
imul
inc
or
or
sub
ljmp
divl
inc
aad
pop
add
test
fstps
and
mov
mov
aam
push
cwtl
inc
adc
loop
leave
xchg
mov
aad
cs
icebp
and
add
fcomps
out
mov
jmp
push
and
imul
movsl
cmc
outsb
mov
aas
lods
sbbb
jle
inc
stc
lods
rcr
adc
sarb
in
mov
fcmovbe
cmpsl
pop
jmp
gs
pop
cwtl
inc
inc
cwtl
push
cmp
popa
cmp
mov
fists
sub
bound
hlt
in
int
cmpsl
int3
lcall
pusha
loop
mov
pop
cmpsb
adc
xchg
icebp
pushf
imul
pushf
mov
pop
out
xchg
test
xchg
in
ret
andb
xchg
je
rcrb
pop
push
ss
xchg
lahf
aad
fdivrs
fdivp
das
jnp
nop
xchg
in
or
clc
dec
xor
fstps
fcmovu
insb
inc
imul
push
popa
jbe
adc
ljmp
cmp
scas
daa
cmc
ret
lret
fimull
mov
ret
mov
lret
loop
adc
fcmovnb
repnz
mov
adc
xchg
inc
lds
nop
fldenv
xchg
or
add
mov
and
adc
stos
pusha
sub
movsl
cmp
das
pop
push
subb
add
fs
rcl
pushf
jle
loopne
or
adc
shlb
and
cli
xchg
jbe
test
jb
pop
insb
push
adc
jno
mov
inc
cmc
and
stc
mov
sbb
aam
iret
mov
cmc
test
push
mov
push
jnp
bound
mulb
imul
std
mov
flds
xorb
scas
shlb
mov
orb
xchg
les
jnp
das
lea
pop
dec
lcall
mov
jo
inc
iret
mov
mov
inc
fcmovne
rol
cmp
imul
mov
xor
rorb
subl
stos
and
sbbb
insl
xor
fists
xchg
inc
pushf
xchg
test
call
mov
add
inc
movsl
mov
mov
out
ror
in
test
cmpsl
push
mov
imulb
rclb
lds
in
cmc
xchg
inc
cs
clc
je
adc
adc
sarl
add
addb
test
stos
cmc
jb
lods
mov
aam
or
movsl
mov
das
enter
and
jnp
insb
cmp
mov
lods
jno
xchg
in
mov
lea
negl
xor
mov
mov
imul
push
adc
pop
mov
cwtl
mov
fstpt
dec
jns
lods
ret
jb
and
roll
mov
roll
nop
or
fisttps
divb
lods
nop
insl
add
sar
rcrl
or
test
mov
jns
and
insl
call
ret
imul
rol
mov
inc
inc
jp
inc
cmpsl
ror
rorl
inc
jmp
hlt
ja
ds
push
adc
pop
call
push
add
fbld
push
loopne
xchg
mov
in
add
loope
int
movsl
into
ds
es
adc
and
outsl
icebp
test
fiaddl
gs
aaa
pop
mov
add
push
mov
sub
sahf
dec
inc
iret
or
push
add
aas
adc
mov
sub
pushf
xchg
mov
enter
mov
lock
mov
sbb
nop
movsl
popa
push
inc
xchg
mov
roll
ret
movl
into
loope
mov
mov
loop
pushf
mov
and
push
adc
or
in
mov
mov
sarl
nop
add
cmp
movsl
fadd
in
in
stos
pop
push
cld
and
rclb
sbb
cwtl
sbb
or
and
mov
xor
push
icebp
inc
mov
cltd
dec
mov
mov
push
mov
mov
mov
or
adc
aam
jno
xchg
xchg
insb
dec
push
cwtl
or
add
mov
sub
outsb
scas
lret
adc
dec
adc
or
add
xchg
xchg
cwtl
dec
pushf
out
mov
dec
mov
cltd
mov
mov
push
xor
lods
in
jae
movsl
jle
jb
rol
ret
lret
mov
push
test
fstpt
adcb
add
or
in
movsb
cmp
ret
into
ss
ret
and
rcr
ret
icebp
lock
in
and
lahf
mov
mov
or
dec
in
andl
sbb
add
push
mov
jg
popa
inc
cld
and
test
or
shrl
dec
adc
stos
subb
loope
imul
mov
and
int
lahf
fldt
xchg
out
out
or
sub
scas
mov
push
test
lods
arpl
or
push
mov
aas
push
dec
popf
xchg
lahf
xchg
lock
mov
arpl
and
inc
test
out
adc
fcomps
nop
fsubl
addr16
adc
cwtl
roll
mov
dec
or
jle
loop
and
sahf
push
sarb
loope,pn
mov
xchg
mov
loopne
xchg
imull
bound
xchg
mov
mov
dec
in
repnz
mov
cwtl
xchg
push
ret
and
dec
mov
add
push
movsb
sti
shl
sub
nop
lea
fmull
mov
mov
lock
fsubl
enter
outsb
lret
push
movl
mov
dec
inc
add
mov
push
inc
inc
mov
mov
jecxz
mov
xchg
dec
lret
mov
lret
lods
add
sub
push
adcl
mov
mov
jmp
test
fidivrs
cmpsl
scas
sbb
mov
mov
cmc
in
sbb
nop
lods
add
add
movsl
es
imul
add
andl
xchg
cwtl
or
aad
mov
ret
push
mov
or
std
lock
bound
push
rcrl
push
rorl
cmc
push
push
imul
in
cmp
fistpll
dec
sub
mov
add
mov
int3
inc
test
add
rcrb
add
mov
mov
stc
jp
add
mov
cmpsl
loope
hlt
jecxz
int3
push
test
add
jp
es
shlb
fmull
aad
mov
or
stos
mov
and
cwtl
and
aam
push
jecxz
shrb
test
jp
enter
add
pop
hlt
mov
mov
push
and
jae
dec
inc
in
jle
xchg
push
pop
sub
xchg
mov
dec
mov
jns
mov
imul
arpl
hlt
mov
xor
dec
lds
inc
ret
pop
xchg
popf
sub
push
dec
adc
test
lods
or
pusha
xor
ds
out
loopne
movsl
inc
imul
stos
and
push
and
test
cmp
push
xor
mov
in
and
imul
jbe
adc
lds
and
ret
notl
pop
mov
movsl
outsb
stos
jge
mov
aad
rolb
cs
arpl
lret
mov
test
xchg
ret
push
mov
fsubrl
scas
mov
shl
and
xchg
gs
mov
jp
mov
hlt
test
pusha
pop
test
fldcw
adc
dec
fwait
jnp
pop
rorb
inc
out
clc
sub
add
ss
inc
js
fs
in
cld
jmp
into
dec
aad
fs
int
or
mov
dec
repz
shrb
pop
stos
cmpsl
lret
pop
adc
idivb
push
dec
add
push
movl
imul
scas
js
or
in
mov
sahf
mov
rclb
int3
mov
fs
dec
mov
inc
out
mov
mov
js
xchg
test
nop
into
pop
jnp
popa
mov
into
pop
pop
push
mov
sbb
mov
inc
cwtl
xlat
push
push
imull
mov
xchg
mov
xlat
push
or
std
jne
insl
jge
push
and
in
out
cltd
pop
call
and
dec
pop
cmpsl
mov
mov
sub
sub
push
xchg
lret
mov
pushf
pop
mov
ret
cmc
fistl
push
insl
aaa
xchg
mov
cmp
sub
push
push
lret
test
ret
inc
xchg
cmp
sub
mov
imul
sbb
sbb
xchg
xchg
loope
sbb
cwtl
jg
popf
push
push
stc
and
imul
inc
lret
adc
repz
stos
enter
out
inc
xlat
and
arpl
push
enter
lret
and
shrb
scas
inc
stos
xchg
rol
gs
das
test
stos
dec
ret
cmc
mov
pop
loope
mov
test
ss
xchg
jb
test
std
push
fstpl
mov
lds
xchg
adc
nop
jle
and
sub
inc
dec
ret
das
mov
and
mov
iret
bound
call
dec
xchg
cli
enter
lret
adc
aaa
xor
mov
xor
notl
leave
scas
add
cmp
rcrb
jns
je
pushf
pop
stos
mov
xchg
sarb
popa
mov
jle
inc
std
sbb
outsb
sub
shll
mov
jo
sub
jmp
popf
aad
into
je
lock
and
outsb
ljmp
mov
subl
fnstcw
lock
mov
jmp
mov
enter
add
lock
add
inc
loopne
or
repz
dec
in
mov
sahf
dec
loopne
pop
mov
int
leave
mov
test
xchg
jno
shll
mov
add
add
enter
jo
out
lahf
add
filds
jp
pusha
mov
in
das
inc
mul
adc
ret
decb
jbe
lock
mov
push
sbb
aad
hlt
mov
ljmp
cmpsl
mov
mov
pop
mov
mov
scas
cmp
nop
decb
inc
or
cmc
iret
ja
pop
xchg
test
mov
ret
cmc
outsl
add
imul
cmc
xchg
jecxz
mov
and
shlb
mov
xchg
in
mov
pop
test
xorl
shrb
mov
mov
adcl
in
mov
xchg
test
xchg
sub
sub
dec
shlb
shll
cltd
pushf
daa
scas
arpl
int3
pop
inc
js
imul
in
xchg
stos
lds
orb
mov
xchg
je
ret
andl
cmp
flds
xchg
or
stos
or
adc
subl
imul
adc
xchg
push
push
mov
movsl
add
mov
lret
rorb
and
addr16
cmp
mov
ret
daa
cmpb
rorb
popf
sbb
mov
in
push
pop
movsl
xor
dec
adc
lret
je
cs
xchg
dec
jo
nop
adc
test
mov
shll
mov
mov
dec
push
pop
shlb
inc
stos
in
hlt
lds
notl
pop
or
jbe
or
xchg
add
into
add
xor
stos
mov
jmp
lds
jecxz
xchg
hlt
push
sbb
dec
bnd
push
and
xchg
adc
mov
test
dec
mov
xchg
cltd
or
push
mov
push
out
mov
or
and
iret
fsubrl
fisttpl
fwait
test
xor
sbb
rorb
mov
xchg
mov
sub
add
cmp
lds
lea
enter
lcall
adc
mov
bound
push
outsb
mov
mov
pop
jb
divl
lret
fisttpll
in
push
sub
xor
xchg
and
cmpsl
jns
outsl
dec
inc
mov
mov
pop
rcrl
xchg
inc
cmp
inc
mov
outsl
imul
cltd
dec
mov
push
xchg
xchg
dec
test
enter
mov
or
icebp
xchg
push
test
outsb
xchg
cwtl
mov
enter
nop
int3
dec
mov
mov
dec
adc
xchg
push
mov
jl
fistl
pop
mov
or
mov
jnp
inc
and
enter
in
mov
lret
adc
shlb
cmp
sub
stos
aad
sub
or
mov
cmpsb
cmc
push
add
clc
adc
das
rcr
mov
lret
bnd
repnz
rol
mov
fdiv
fistps
mov
mov
test
mov
sarb
aad
shr
inc
in
jle
test
xor
iret
scas
dec
jne
notl
xlat
add
sbb
xchg
adc
aad
lock
nop
insl
or
sbb
or
xchg
cmp
lret
imul
popa
mov
movsl
inc
andb
add
xor
jl
mov
mov
lds
test
and
xchg
idivl
pop
pushf
movsb
sbb
mov
cmp
lret
add
xor
ljmp
push
sub
mov
ds
lcall
and
aam
xchg
push
lds
scas
xchg
shrb
cld
inc
and
int
lods
test
xchg
cmp
sarb
jecxz
sub
push
lds
in
test
pop
add
mov
pusha
push
cld
jne
push
sbb
in
xchg
addl
ja
pop
add
push
cmp
jmp
data16
in
fdivr
daa
loop
xor
add
dec
in
in
xchg
test
inc
adc
xchg
xlat
cld
in
add
ret
cwtl
shl
xchg
mov
imul
in
push
add
and
sub
jg
mov
js
clc
adc
movsl
sarb
loope
stos
push
pop
stos
sbb
orl
adc
cld
pop
mov
jbe
orb
and
movsl
sbb
jle
jmp
out
mov
sub
mov
inc
pop
sub
test
mov
jno
addl
pop
shrb
repz
sbb
or
xchg
cmp
xor
or
repnz
dec
test
mov
enter
das
cltd
and
xor
cmp
lock
cwtl
test
adc
mov
pusha
cmpl
mov
test
jge
cmp
mov
aaa
pop
mov
mov
movsl
repz
pop
xchg
dec
push
cld
iret
adc
sbb
push
test
mov
add
xchg
lds
faddl
push
loop
lods
test
add
add
add
js
push
sarb
rolb
cmp
jmp
adc
insb
cmpsl
jno
add
or
dec
pop
mov
inc
rol
test
lret
fsts
xchg
and
dec
scas
push
xor
out
lds
iret
in
or
lret
cmp
fstl
jl
mov
sub
imul
cwtl
adc
add
cltd
fwait
ljmp
dec
mov
push
sub
inc
nop
fs
push
mov
xorb
push
cmp
test
mov
loopne
or
into
imul
mov
add
and
sub
int3
adc
loop
or
xchg
shlb
test
pop
fsubs
cmpsl
or
into
sub
pop
das
pop
xor
inc
jmp
mov
cld
pop
int
mov
mov
lods
ds
je
out
decl
mov
fwait
call
loop
cmpsl
call
repz
sbb
popf
mov
movsl
mov
repnz
jle
lret
outsb
adc
mov
push
pop
imul
dec
out
test
stos
push
roll
lret
mov
cmc
sbb
pushf
push
fwait
iret
ss
je
enter
xor
push
in
arpl
cmc
les
and
push
iret
xchg
leave
mov
lods
movsb
shl
lds
ret
mov
xlat
movsb
xchg
or
inc
sub
rcll
cld
pop
xor
dec
mov
mov
add
stos
adc
pop
adc
and
ret
mov
or
mov
clc
lods
aam
or
mov
clc
nop
and
int
or
ds
xchg
in
jbe
add
out
lret
xor
mov
push
mov
int3
or
push
imul
xchg
rcrl
lea
enter
hlt
test
mov
popl
adc
clc
fstl
xor
loop
xor
rorb
or
or
lret
mov
sub
sbb
xchg
rcr
mov
mov
repnz
movsb
rcll
adc
cmc
inc
mov
stos
subb
or
lods
rcl
cwtl
roll
and
pop
sbb
movsb
enter
into
cmpsl
sahf
ljmp
adc
imul
adc
fisubrs
ljmp
mov
into
pop
or
mov
pop
jmp
ret
mov
enter
rcl
pop
add
inc
mov
and
fists
call
int
cltd
mov
fwait
and
push
cmp
add
ret
xchg
clc
leave
lock
mov
inc
pop
popw
pop
jle
dec
imul
iret
xchg
mov
sarb
stos
dec
cmp
test
nop
mov
stos
aam
lret
jae
xchg
jge
test
xor
fwait
push
scas
jecxz
inc
test
ret
mov
imul
test
outsl
out
ss
xchg
rcl
pop
fisubrs
xchg
pop
add
imul
sbb
lods
test
ds
adc
jmp
jo
xor
pop
loope
cld
mov
ret
adc
mov
cmp
out
and
sbb
test
lods
js
aad
insl
pop
add
adc
mov
icebp
jmp
dec
test
push
lods
add
sahf
and
out
xchg
pop
add
cwtl
mov
dec
out
aas
pop
test
imul
iret
rorb
fidivrs
push
mov
enter
loopne
lds
hlt
cmpsl
xchg
inc
and
mov
mov
lea
cmpsl
int
out
icebp
adc
or
xchg
ret
lret
mov
mov
pop
mov
int
popa
dec
in
xchg
cmp
outsl
pop
fcmove
sub
push
stos
fimull
sarl
iret
push
xor
mov
aaa
adc
mov
imul
jge
xlat
adc
cld
mov
dec
scas
je
sub
jle
cli
mov
jno
mov
bound
mov
lret
jb
xchg
cmp
sbb
sub
mov
movsb
inc
test
lret
or
cld
push
call
mov
clc
cmp
adc
mov
xchg
fsubrl
int3
fcmovbe
test
imul
jbe
mov
push
out
or
rcrl
mov
or
mov
test
in
or
nop
or
xchg
aas
rclb
or
xchg
nop
inc
imul
mov
clc
jmp
and
repz
aad
rorb
or
in
adc
movsb
cmp
in
mov
push
cwtl
and
push
fs
lcall
xlat
adc
std
push
and
add
aad
aas
adc
in
leave
pop
or
lods
lods
mov
jb
or
scas
orb
push
add
bound
ds
and
xor
mov
popa
sbb
jle
dec
push
fidivl
inc
cmpsb
loop
dec
pop
xchg
push
aad
cwtl
imul
int3
jle
xor
divb
cmp
sub
dec
adc
lds
sub
pop
scas
cmp
shll
xor
test
adc
sub
ret
add
adc
nop
xchg
lods
rolb
shl
test
xor
pop
into
cmp
pop
das
or
in
aas
adc
clc
xor
mov
mov
je
insb
bound
ljmp
cmp
cmp
nop
mov
rcrb
push
movsl
loop
inc
mov
mov
lret
sub
movsb
push
sbb
sbb
sbb
into
cmpsb
aad
das
cli
call
movsl
imul
pop
cwtl
and
mov
int3
lods
sbb
jb
or
jge
sbb
imul
dec
jbe
stos
cmpsl
movsl
arpl
sbb
adc
xor
sbb
or
pushf
ret
rorl
test
icebp
or
pop
jo
test
adc
dec
xchg
stos
and
lcall
mov
in
lcall
stos
dec
push
xor
insb
mov
mov
and
inc
xchg
sub
jno
mov
and
xchg
rcrl
call
addl
mov
cs
cmc
xchg
int3
xor
enter
xor
xor
cmc
cltd
leave
jno
in
and
frstor
test
std
mov
lods
xchg
roll
or
sub
not
xchg
int3
jno
loopne
inc
mov
stos
pop
mov
inc
je
imul
push
sub
mov
popf
sbb
sub
jno
cli
push
mov
movsb
mov
in
loopne
rcrl
mov
xor
xchg
outsl
cld
push
movsb
idivl
mov
mov
test
jmp
jns
mov
mov
mov
fisttpll
ret
pop
in
cmp
mov
mov
adc
mov
icebp
xor
push
loopne
inc
jbe
lret
cmp
sub
lods
bound
mov
aas
add
jno
inc
mov
call
push
jns
xor
movsb
dec
cmp
pop
push
clc
pop
cmp
mov
js
jae
lcall
mov
lods
pop
stos
ss
test
sti
adc
jl
in
mov
lea
adc
test
add
insb
push
lahf
hlt
fsts
pop
leave
arpl
scas
ret
xlat
add
xor
or
repnz
mov
scas
mov
xor
mov
lods
stc
adc
stos
in
and
divl
pop
in
insl
in
and
xor
leave
pop
mov
or
mov
mov
cmpl
adc
sbb
nop
cmp
clc
call
out
subl
sub
in
loop
push
xor
popf
imul
xchg
mov
outsb
dec
lret
cmc
shll
jecxz
mov
jge
add
loopne
inc
test
pushf
mov
test
add
mov
mov
xor
ss
scas
cs
shl
in
mov
mov
jge
shl
imul
lea
scas
cmp
iret
sbb
hlt
cmpsb
rcll
mov
jbe
int3
or
mov
fcoml
mov
scas
cmc
pop
push
push
cmpsb
cmpsl
or
mov
xchg
scas
dec
fcmovu
and
jns
mov
clc
push
push
lock
xlat
dec
lds
mov
fsubs
xchg
aaa
cmp
mov
scas
je
les
das
int3
ret
pushf
insb
ret
movsb
xchg
sub
add
cwtl
inc
xlat
aad
leave
mov
adc
xchg
lcall
cmp
push
xor
xchg
jl
adc
mov
push
dec
lock
push
lods
mov
and
mov
adc
hlt
sub
loopne
xor
das
icebp
mov
mov
mov
push
mov
or
push
ljmp
aam
decb
loopne
out
fbstp
bound
lret
dec
or
ljmp
popf
sub
cmp
stc
fisubrs
mov
test
or
movsb
fadds
test
loopne
jno
das
cld
cmc
mov
movsb
cmp
rcrb
cmpsl
or
fbld
xchg
ret
dec
xchg
call
cmpsb
cmp
fisttps
xorl
and
pop
sub
cltd
add
fcoml
loopne
insl
mov
stos
clc
xchg
adc
aam
adc
mov
pop
arpl
test
push
add
push
in
ret
or
mov
hlt
in
inc
gs
std
mov
mov
lods
lcall
push
jmp
adc
jl
sub
and
mov
aas
popf
or
mov
jo
push
lcall
ljmp
xlat
jne
cmp
cmc
mov
into
pop
sub
mov
inc
mov
push
fisttpl
or
aad
mov
aas
sub
aas
inc
ret
fadds
int
inc
add
scas
mov
mov
jmp
ss
jb
dec
sahf
dec
push
mov
xor
sahf
adc
pop
lods
pop
xchg
xchg
std
pop
push
fsubp
pop
mov
fsubl
rcll
sar
xchg
ds
xor
cmp
loop
xchg
or
xchg
icebp
mov
das
test
lret
cmp
leave
mov
vphaddubw
cwtl
stos
jno
movsb
mov
sub
aaa
xchg
cmc
sbb
fidivl
add
movsl
push
popf
xor
xlat
inc
xchg
fcoms
cwtl
mov
cmp
aad
clc
jno
cwtl
xor
pop
xchg
xchg
add
jmp
out
cmovb
cli
movsl
out
nop
into
test
das
shll
or
lock
add
adc
xchg
mov
xchg
lock
shlb
dec
pop
push
pop
int3
sub
sbb
es
cltd
cmc
lea
lods
je
orb
mov
faddl
or
adc
and
les
mov
mov
call
push
popa
int3
inc
shll
xchg
mov
je
bound
sub
pop
pusha
xor
sub
mov
mov
inc
sarb
sbb
or
or
loop
sbb
mov
cmpsb
pop
or
or
rorb
aad
mov
nop
xcrypt-cbc
cmpsl
adc
xchg
xchg
mov
pop
cmp
and
xor
mov
xor
pop
mov
or
push
push
cmc
loop
fdivl
adc
push
pop
scas
xorb
and
jbe
sub
dec
mov
into
add
jg
mov
push
in
push
imul
mov
scas
pop
popa
rcl
cmc
enter
shl
pop
add
sarl
xor
shlb
rorb
mov
stos
dec
and
aad
jae
stos
call
test
xrelease
add
cmpb
ffree
or
js
add
aad
add
xchg
out
loop
mov
mov
mov
mov
mov
mov
mov
xchg
fistl
pushl
add
lret
inc
sub
sub
sbb
inc
xchg
aaa
roll
outsl
jo
cmpsl
pop
xchg
cmc
sarl
loopne
lods
rcl
xchg
call
xor
sbb
inc
rolb
mov
pop
push
outsl
test
movsl
hlt
mov
ficomps
pop
adc
rorl
lds
add
sbb
add
sbb
rorl
xchg
pop
nop
psubb
xchg
out
lods
das
decb
daa
mov
push
jo
insb
in
mov
sub
and
xor
test
mov
add
push
pop
fisttpll
push
mov
pusha
add
fists
clc
shr
inc
popl
imul
subb
mov
push
cmpsb
stos
shlb
sbb
aas
lcall
pusha
adc
or
pop
jno
jg
sub
push
or
xchg
fiadds
sub
shr
inc
shrl
dec
dec
je
shll
mov
or
inc
fwait
not
movsb
movsb
popa
shlb
es
mov
and
lds
mov
insb
adc
outsb
test
push
add
cmpsl
mov
add
inc
push
movsl
pushf
test
add
jmp
jmp
aad
jo
xchg
dec
clc
mov
xchg
pop
adc
and
mov
add
shll
or
sub
pop
and
enter
lahf
std
mov
adc
stos
xor
scas
add
pop
mov
xchg
or
fmuls
mov
dec
arpl
dec
test
rorb
xchg
mov
push
mov
and
hlt
addb
or
pop
pusha
ds
gs
inc
aam
cli
hlt
mov
cli
jg
test
andl
pop
or
repnz
testb
mov
scas
mov
jns
decl
add
jbe
mov
in
mov
cmc
cltd
and
mov
or
push
imul
adc
data16
lods
ja
daa
xchg
test
imul
in
push
mov
cs
sbb
push
movsl
or
and
shrl
inc
adc
add
scas
clc
xchg
push
mov
in
insb
mov
jp
pop
lods
dec
cmpsl
nop
pop
ret
or
xchg
push
sub
dec
mov
add
das
inc
lcall
stos
inc
addl
hlt
popf
pop
pop
jo
mov
push
jle
stc
or
fs
xor
adc
dec
jno
nop
jmp
and
cwtl
jnp
xchg
shll
sub
push
aas
insl
and
je
or
xchg
into
dec
js
mov
push
inc
mov
add
add
imul
push
jo
lret
shlb
inc
popf
xlat
mov
pop
pusha
xor
aas
xchg
mov
mov
pusha
daa
outsl
mov
xlat
pop
bound
mov
cmp
cli
pop
dec
jmp
int
shr
mov
pmullw
sahf
mov
pushf
scas
lahf
pop
stos
lahf
ret
mov
pop
pushf
addb
popa
nop
pop
movsb
mov
jbe
add
jns
jge
lods
sbb
xor
inc
cmp
rolb
pusha
shrl
lods
and
pop
jnp
sub
test
mov
push
test
fs
pusha
push
push
fcompl
fstpl
and
subl
xchg
mov
push
das
adc
imul
cmp
xorb
add
je
or
repz
in
js
jo
xchg
outsb
mov
xor
mov
je
sbb
jno
push
test
cmp
lds
cmp
or
add
sbb
xor
daa
pop
mov
aam
mov
inc
lcall
dec
jo
add
out
cltd
addl
lret
mov
mov
pop
add
shll
jp
push
ret
pop
mov
push
jno
lods
jle
push
push
mov
jbe
cmp
int3
mov
mov
int3
inc
out
cli
call
loop
shl
sbb
or
dec
js
sub
fmull
fsts
cmp
lods
or
mov
jl
lds
cli
popf
mov
nop
add
in
lock
clc
std
imul
shrl
sarb
divb
imul
mov
xor
xor
addb
mov
and
push
das
inc
mov
mov
test
fcom
adcl
sbb
cmp
and
ret
rclb
push
rcr
leave
clc
xchg
sbb
sbb
push
fisttpll
fisubrs
push
movsb
xchg
rorb
push
inc
mov
int3
or
push
aaa
cli
push
mov
pop
cmpsl
stos
ficoms
mov
pop
lock
jl
push
bound
les
sub
jo
lret
or
std
enter
test
add
iret
xchg
push
test
push
lea
mov
test
mov
subl
push
jl
adc
aad
adc
pushf
inc
hlt
mov
push
mov
cmc
xchg
mov
and
dec
xchg
loopne
addb
jno
add
adc
mov
inc
adc
mov
test
icebp
mov
test
outsb
inc
lods
clc
ja
inc
pop
jmp
adcb
js
xchg
adc
or
lea
into
cmp
call
xchg
addr16
inc
push
std
jecxz
pop
outsb
hlt
movb
cmp
out
sub
fsubs
mov
push
idivb
mov
imul
push
test
xchg
rorl
mov
jb
ret
cmp
ja
mov
leave
aas
mov
hlt
ljmp
addl
jo
mov
push
sbbl
mov
pushf
and
call
jmp
cmp
jae
inc
mov
inc
sbbb
dec
xchg
scas
add
outsb
mov
mov
rcrl
push
push
mov
lods
mov
sub
sti
cmp
call
lds
incb
stc
int
sub
pop
enter
hlt
mov
push
adc
adc
push
test
xor
xor
popf
xchg
add
ds
adc
fisttpll
push
and
sbb
mov
mov
pusha
ficomps
mov
ljmp
aas
flds
pop
add
mov
nop
movsl
flds
nop
mov
testl
nop
xor
out
movsl
dec
sub
add
xchg
pop
xchg
les
fs
mov
xchg
stc
inc
fldt
popa
and
mov
scas
test
mov
pop
out
mov
fwait
hlt
cmc
sub
fcmovnbe
ror
cmpsl
rorb
shrb
mov
sub
jg
or
nop
in
adc
das
or
cmc
movsl
adc
out
lret
aas
add
add
or
iret
xchg
repz
xchg
sub
push
fstps
mov
adc
test
test
add
enter
inc
adc
orb
cwtl
addb
jl
ja
ds
or
ja
mov
rclb
xor
xchg
call
in
jbe
or
es
push
adc
fdiv
mov
cmc
dec
sbb
shrl
js
data16
adc
pop
mov
inc
stos
insl
repz
aas
mov
fcoml
nop
push
and
push
stos
dec
mov
dec
insl
mov
rorb
es
dec
movsb
jae
mov
imul
fsubr
sub
xchg
jns
xchg
cmpsl
enter
push
and
dec
fcmovnu
xchg
push
sbb
mov
subb
pop
test
mov
dec
sti
mov
test
mov
rcl
aad
inc
insl
mov
pop
mov
xchg
sarl
sub
pop
push
fs
add
jmp
mov
mov
scas
out
jns
push
mov
rol
sarl
add
mov
mov
mov
in
push
les
push
ja
test
add
xchg
dec
stc
es
dec
subl
jg
or
test
mov
sbb
ja
test
rcr
push
sahf
and
push
testb
jnp
sub
xchg
sbb
aam
push
cmp
push
jb
add
sub
cmp
cmp
mov
add
shrb
sub
stc
dec
xchg
mov
xor
cmpsl
xchg
inc
cld
cmpsl
jle
fstps
je
fldl
adc
xchg
jb
mov
mov
int3
xorb
stos
aam
lods
outsb
adc
cmpsl
mov
pop
or
mov
sbb
stos
xor
adc
push
sarb
subl
mov
and
dec
lret
add
xchg
adc
fsubp
mov
nop
hlt
shll
inc
setp
movsl
adc
fmul
xchg
shll
enter
aad
dec
cld
cmovne
cld
add
inc
add
adc
or
adc
outsb
repnz
out
jns
adc
inc
shl
roll
clc
xchg
pop
stc
xchg
mov
or
jns
mov
or
insb
push
cmp
mov
or
xchg
adc
lods
call
nop
outsb
into
test
aad
dec
lods
sarb
cmc
or
lea
cmp
leave
push
fst
scas
cwtl
add
sub
in
sbb
pop
icebp
dec
xchg
jp
lods
ret
lcall
push
insl
add
pop
bound
mov
mov
lahf
scas
or
pushf
lods
movb
test
or
cmp
add
xlat
jnp
rcll
and
fstl
push
cld
mov
outsl
sbb
aas
in
or
inc
xchg
dec
push
shr
push
sub
mov
cli
lret
ret
xchg
jae
or
push
scas
ljmp
fistl
scas
call
js
outsb
or
jl
pop
in
jg
jle
fisttpl
xor
mov
fistpl
sbb
xchg
vphaddwd
test
xchg
mov
lret
adc
sbb
xchg
mov
int3
mov
mov
cmp
outsb
xchg
xchg
pop
xchg
adc
pushl
call
inc
add
or
lret
ret
add
lea
mov
sbb
mov
mov
push
add
lret
mov
add
test
dec
mov
fisttps
dec
xlat
enter
cmpsb
push
mov
in
inc
lock
xchg
imul
call
movsb
outsb
mov
add
pop
dec
adc
adc
cmpsl
cld
les
xlat
rcr
aaa
leave
pop
mov
popa
lds
lods
jae
imul
mov
insl
dec
sbb
cmp
mov
stc
cmp
mov
cmpsb
push
std
call
mov
lods
mov
add
cmp
mov
adcl
pop
sbb
xchg
stc
inc
and
ret
xchg
cmovb
mov
cs
scas
movsb
lods
adc
inc
mov
mov
std
rclb
movsb
test
or
out
push
add
xchg
mov
iret
xor
out
fprem
bound
ljmp
push
xlat
test
aas
mov
jo
jge
push
js
mov
outsl
xor
mov
ljmp
jne
ret
add
fisubrl
jae
mov
pop
adc
mov
int
inc
mov
and
fsubs
test
or
mov
xlat
sahf
sbb
inc
fisubs
pop
out
shlb
fsubs
xchg
ljmp
aam
xchg
fwait
movsl
push
sub
lock
ds
nop
popa
xchg
dec
idivl
xchg
mov
cmp
mov
outsl
cltd
inc
rolb
cmc
sbb
movsb
test
out
outsb
leave
test
cltd
stos
mov
enter
mov
rol
sub
xor
jp
mov
in
xlat
sbb
lods
sbb
sbb
pop
pop
cmp
hlt
and
push
ljmp
mov
lock
jb
mov
adc
jae
stos
cmpsl
mov
or
loopne
rolb
jmp
xchg
shrb
outsl
mov
cwtl
jo
js
push
imul
dec
cmpsb
icebp
rorb
loope
testb
call
mov
pop
fildll
mov
filds
shrl
lea
sbb
jae
xor
jl
pop
pop
mov
cmc
loopne
sbb
inc
ret
roll
repz
out
mov
xchg
and
in
cmpl
andl
rclb
mov
ljmp
push
clc
or
mov
sub
sub
int3
jns
add
or
xchg
and
imul
sbb
pop
xchg
sbb
jns
xchg
xchg
jle
xor
push
inc
pushf
mov
xor
push
push
jnp
fmulp
aam
mov
mov
add
test
xchg
notb
mov
sti
rclb
aad
pop
push
shrb
mov
and
pop
jns
test
lods
inc
lret
lret
hlt
jmp
fdivs
sahf
sub
ret
push
lret
in
mov
or
int3
mov
mov
xorb
jno
mov
lea
movsb
pop
enter
mov
call
adc
movlps
in
jae
shll
mov
and
xchg
rorb
scas
scas
add
inc
gs
cmp
fxch
dec
in
xor
push
mov
je
cwtl
sbb
imul
mull
out
inc
sbb
push
xor
cld
mov
sahf
mov
shlb
jnp
jae
mov
xchg
add
stc
add
cltd
pop
push
nop
jbe
xchg
in
xchg
dec
shrb
jno
subb
jge
das
popl
repnz
xchg
jmp
push
mov
inc
stos
or
call
mov
nop
int3
mov
in
mov
dec
inc
test
in
mov
push
xchg
add
cld
je
dec
or
test
shrb
xchg
test
adc
mov
mov
je
xchg
decb
ja
sbb
inc
mov
in
cmpsb
jns
lcall
mov
ds
sbb
sarb
add
cmc
jmp
and
fistpl
sbb
mov
xchg
ret
aad
sub
push
mov
xchg
insl
inc
aad
cs
std
bound
std
clc
add
sti
dec
sarb
cmp
insl
push
adc
jge
js
lea
mov
sbb
xchg
lds
sub
sbb
into
repnz
cmp
fstps
movsb
xchg
fstp
xor
stc
push
and
ss
lret
clc
and
imul
stc
add
push
cwtl
mov
sbb
cmpb
xchg
imul
mov
adc
pop
gs
hlt
mov
fdivrl
add
test
xchg
lock
mov
mov
das
push
nop
mov
push
mov
rclb
lcall
push
in
xlat
inc
lock
or
ja
arpl
sbb
bound
sarb
mov
stos
jae
aad
aad
adc
das
dec
adc
stos
jae
inc
mov
fistps
icebp
dec
insb
push
add
xor
out
inc
movsb
mov
sti
lret
decl
xchg
adc
cmp
mov
sub
les
mov
push
in
lods
addb
jmp
rorl
add
mov
xchg
call
fwait
mov
xor
sbb
add
sbb
jle
mov
dec
movsb
inc
push
mov
or
shrb
xor
dec
xorb
cmp
test
hlt
xchg
imul
or
iret
shrb
jg
data16
pushf
dec
test
adc
test
rcll
adc
lea
jge
decl
add
test
mov
cli
xchg
test
cmpsb
arpl
mov
pop
xchg
add
stos
mov
testb
xorl
add
inc
xchg
test
or
mov
das
or
push
cwtl
xor
or
les
jp
ret
inc
sbb
inc
mov
push
into
push
cltd
pop
cld
lods
out
mov
popa
jno
push
mov
add
cmp
sarb
pop
or
mov
iret
imul
jp
push
pop
mov
dec
jge
add
push
shrl
add
imul
jnp
push
addb
mov
adc
mov
js
or
bound
mov
xchg
mov
rcll
iret
scas
jae
xchg
test
jae
ret
push
xchg
lret
sahf
pop
jnp
xchg
mov
les
rcl
push
fldt
les
cmp
and
mov
cltd
stos
mov
enter
nop
mov
std
std
adcb
cmp
rorb
in
push
push
and
mov
or
lods
movsl
sub
cs
mov
pop
push
shll
dec
pop
loopne
lods
add
xorb
insl
bound
nop
int3
mov
movsb
jbe
orl
int3
mov
pop
in
enter
jle
or
adc
insl
cmp
dec
aad
adc
cmc
pop
push
push
testl
adc
mov
adcl
pushl
lods
jnp
mov
xor
push
cltd
cmp
movsb
lods
jnp
insl
sub
cmp
ja
add
push
or
mov
mov
ljmp
notb
inc
pop
int3
cs
mov
insl
in
cmpsb
and
xchg
xor
lcall
jnp
in
ffree
aas
rclb
cwtl
sti
into
outsl
int3
addl
mov
gs
stos
leave
xchg
fiadds
add
test
cwtl
into
sahf
cmc
jno
insb
inc
add
push
imul
mov
push
xchg
xchg
or
xchg
mov
into
in
mov
js
rcrl
xor
test
outsl
clc
xchg
push
sub
jmp
mov
lea
mov
mov
in
cmpsl
inc
popa
mov
jmp
sub
jmp
sar
mov
mov
adc
jno
jge
rorb
imul
shrb
sub
cmp
in
scas
mov
add
mov
or
jl
aas
and
scas
xlat
mov
lahf
rorb
pop
adc
pop
test
fwait
les
fldt
in
scas
or
mov
push
iret
call
mov
cmpsl
lds
repnz
retw
or
inc
sbb
xor
and
mov
sub
pop
mov
aam
add
push
hlt
pusha
leave
sbb
inc
adc
add
sahf
test
mov
inc
aam
xchg
aam
jge
pushl
imul
or
test
sbb
cmp
xchg
shl
mov
jbe
or
aas
dec
add
adc
add
adc
sahf
add
adc
sub
dec
imul
lret
sbb
fcom
les
in
sub
adc
imul
cmp
enter
inc
popa
mov
ret
sbb
inc
push
hlt
mov
imul
out
jae
and
lods
cmc
mov
inc
jle
fs
rclb
cmp
hlt
sarb
sbb
in
add
js
sbb
cmp
rcl
out
mov
adc
push
out
js
into
xlat
dec
pop
xchg
stos
mov
push
test
int3
or
negb
cld
jecxz
hlt
sbb
imul
imul
loopne
fnsave
imul
sbb
or
add
int3
negb
nopl
call
xor
scas
dec
xchg
dec
ss
xchg
push
sub
mov
in
enter
fmull
loopne
loop
or
dec
adc
in
call
cld
xchg
je
or
in
push
sbb
sahf
test
rcrb
test
ljmp
in
dec
fnstcw
xchg
insl
mov
xchg
shll
mov
ret
xchg
fmulp
sub
dec
shll
lods
add
cmpsb
cmpsb
outsl
fidivrl
pop
popa
subl
jle
sub
aas
pmovmskb
push
cli
insb
lcall
or
mov
xchg
mov
inc
and
ret
addr16
jmp
mov
fwait
mov
dec
or
sub
pop
mov
lds
lret
or
test
cltd
or
add
xchg
test
xchg
lea
test
mov
push
gs
push
or
testb
xchg
add
sub
nop
or
add
stos
call
push
cld
lahf
xchg
push
and
sbbb
inc
stos
adcb
movsb
dec
add
cmp
movsl
rclb
inc
mov
push
or
aas
or
and
dec
mov
rorl
xchg
ja
xor
lock
lock
std
rcll
push
shlb
cmp
inc
test
cmpsb
sub
xor
inc
lock
sub
mov
xchg
mov
outsb
lods
cmc
fwait
clc
inc
out
mov
movsb
icebp
test
mov
lods
icebp
out
xor
cmp
ss
push
rorb
andl
imul
or
jmp
add
shlb
hlt
js
outsb
sahf
std
sbb
ret
cmp
xchg
xor
inc
mov
cld
lret
dec
pusha
imul
add
dec
mov
popa
leave
adc
cwtl
cmp
inc
mov
push
mov
aam
mov
lret
seta
jp
jo
jnp
popa
test
in
lcall
xchg
or
movsb
add
jo
test
jmp
pop
mov
xchg
cmpl
xchg
call
mov
rclb
mov
clc
test
cld
cmp
pop
add
xchg
cltd
or
push
jle
jle
pop
sbbb
xchg
sub
aaa
inc
push
cmpsl
lea
or
inc
stos
rcrl
mov
xchg
lods
int
xlat
es
xchg
or
les
movsb
jp
fdivrl
mov
mov
or
movsb
push
mov
orl
push
clc
sub
lods
mov
mov
movsl
jmp
mov
xchg
in
mov
dec
push
ret
inc
adc
or
in
mov
and
add
mov
nop
lods
test
outsl
or
repz
push
repnz
or
xchg
push
repz
wbinvd
adc
or
pop
xor
into
cwtl
test
sarb
roll
inc
sbb
fisubrl
sub
mov
inc
inc
xchg
mov
das
mov
gs
add
mov
icebp
ret
cltd
rcrb
mov
test
lret
lods
adc
aad
adc
push
mov
iret
fdivs
pop
je
les
cli
bound
insb
ret
test
mov
fadd
leave
xor
xchg
nop
mov
ja
popf
nop
in
cmp
adc
cmp
mov
or
hlt
int3
psllq
jb
popf
adc
jnp
pusha
and
popf
adc
or
in
lods
mov
cmp
rcl
push
xlat
xor
cmpsb
in
nop
dec
fildll
pop
xchg
mov
pusha
mov
add
mov
push
inc
or
fdivrs
cmpsb
lcall
test
or
addl
repz
ja
lock
add
loopne
cmp
filds
cltd
jbe
adc
jle
incb
fstpl
jle
into
test
mov
mov
int3
pusha
mov
stos
sub
int3
jp
pop
dec
xchg
push
cmc
lods
pop
fadd
out
inc
push
and
pushf
hlt
test
sbb
adc
xchg
shll
test
pop
lret
sub
mov
jne
sbb
cmp
lahf
xchg
pusha
stos
or
pop
js
movsl
lea
or
and
push
adc
shll
das
insb
icebp
sub
sub
push
or
pop
mov
insl
lods
push
add
subl
jmp
jbe
pop
jae
sbb
enter
jo
push
cld
je
rcr
sarb
fnstsw
mov
roll
push
mov
orb
in
sbb
js
push
imul
jp
stc
and
out
in
js
xlat
or
add
adc
push
in
and
rol
cmpsl
xor
test
imul
mov
or
sub
pop
adc
or
push
push
mov
and
leave
insb
test
arpl
xchg
subl
mov
cli
sahf
cmc
test
fs
mov
cmp
movsl
seto
cmc
fst
push
rcr
fcmovbe
push
fldt
jmp
aam
out
test
rcl
sbb
mov
inc
lods
cwtl
push
sbb
pushf
mov
sbb
mov
pop
stc
mov
int
fistps
pop
jne
mov
mov
test
lock
ret
jp
sub
mov
cmpsb
pop
test
xchg
xchg
and
imul
addr16
stos
insb
fists
cmp
sub
dec
cmp
fmul
loopne
mov
aaa
or
scas
movsl
les
leave
xor
icebp
inc
sbb
pop
lods
sar
xchg
mov
test
popf
pop
mov
inc
cmpsl
xchg
sub
in
scas
mov
xchg
mull
mov
nop
shlb
sbb
vpshufhw
lods
divl
xchg
cmpsb
test
dec
mov
push
in
nop
addr16
xor
in
mov
lcall
jne
push
int
xor
xchg
aam
lret
enter
negb
sub
mov
adcl
add
adc
push
movsb
stos
inc
mov
sbb
inc
popl
sahf
fsubs
mov
jnp
mov
test
mov
ss
xchg
mov
or
xor
mov
lret
mov
lahf
call
lock
enter
popa
dec
xchg
mov
mov
in
clc
push
adc
pusha
enter
enter
push
rolb
lock
inc
adc
shll
xor
mov
aad
xlat
jae
push
dec
daa
rcl
xchg
mov
mov
add
pop
jle
call
xchg
cmp
or
repnz
xchg
sbb
test
iret
xchg
dec
into
add
push
hlt
rcll
jecxz
add
sub
inc
pusha
mov
sbb
jb
pop
xchg
and
mov
push
test
out
xor
push
mov
in
push
jp
and
pushf
std
lds
cmc
cmpsl
adc
icebp
add
into
sub
push
add
enter
nop
jo
decl
mov
out
lret
inc
push
loopne
or
ja
jl
stos
sbb
in
mov
mov
push
test
xor
cmpsl
xor
leave
in
xchg
ljmp
xor
add
dec
jle
xchg
je
mov
mov
mov
cs
in
inc
pop
xchg
ljmp
jl
push
sub
lret
pushf
dec
jl
loope
lods
mov
fstp
sub
test
mov
xchg
xor
xchg
xchg
inc
jno
xchg
roll
lods
pusha
out
adc
xor
mov
imul
adc
orb
ljmp
add
xchg
jo
test
pop
shlb
xchg
dec
inc
sub
cwtl
mov
jg
insb
aam
lea
shrb
mov
shr
js
int3
push
inc
sub
and
sub
or
aad
fmul
enter
shll
popf
mov
int3
or
jmp
sbb
insb
outsl
fldl
mov
mov
test
jae
fs
ret
int
lret
sub
scas
adc
xchg
loopne
stc
jmp
filds
lods
into
ja
shlb
and
cli
or
cmp
repz
mov
ret
sub
cmpsb
dec
jg
mov
or
push
stc
enter
scas
fisttps
xchg
fldl
in
push
dec
cli
in
xchg
jge
mov
call
pushf
push
aam
andl
in
and
addl
lds
das
cld
fadds
jp
add
daa
inc
test
into
jge
inc
cmc
mov
jl
and
movsl
mov
nop
nop
xor
push
fistpl
lods
addb
sub
cmpsl
inc
inc
std
cmp
pop
adc
push
es
cmpsl
out
nop
mov
test
mov
sbb
xchg
xchg
push
sbb
ljmp
cmpsl
loop
mov
mov
xchg
mov
aaa
mov
adc
and
rol
ret
mov
mov
push
ss
lea
sahf
je
add
mov
icebp
aam
pushf
sub
cmc
jp
mov
mov
sbb
lret
fcmovnu
mov
mov
mov
cmp
adc
jecxz
into
xor
adc
je
push
cmp
and
ret
popf
incl
and
push
mov
pop
out
enter
std
mov
popf
xor
ljmp
inc
jae
enter
pop
jbe
cmp
jg
mov
dec
or
js
and
push
jmp
mov
cli
cmp
dec
shll
mov
jmp
jmp
jbe
negl
into
mov
cmc
outsl
pop
cmp
inc
fs
sub
data16
sbb
iret
lods
outsl
and
and
sub
mov
dec
mov
xchg
test
rcl
outsl
loope
sbb
add
lods
adcl
add
xchg
and
mov
mov
rcll
les
shlb
movsb
repz
mov
les
dec
sub
mov
or
xchg
in
ljmp
ret
push
mov
sbb
sbb
orb
xchg
push
jnp
nop
mov
push
cmp
push
push
rclb
outsb
xor
or
insl
ss
cwtl
lods
fists
lcall
mov
je
aam
jne
ljmp
adc
sub
or
ret
mov
or
mov
cmp
fcoml
cmpsl
fidivrs
in
hlt
lcall
ret
rcl
add
enter
ret
push
push
xchg
rorb
bound
popf
nop
inc
push
mov
sbb
sbb
xor
lea
testb
sbb
jg
shll
add
movsb
push
enter
nop
xchg
mov
or
pop
ret
jg
cmp
xchg
xchg
inc
add
inc
sub
loopne
or
xlat
out
and
sub
lret
mov
pop
mov
sub
andb
push
push
xchg
nop
mov
adc
adc
orl
xchg
ljmp
fisttps
aam
push
mov
aam
fisttpl
mov
sub
das
adc
mov
add
push
ret
xchg
out
scas
cmp
jmp
repnz
fadd
xchg
push
pop
sbb
ja
push
insb
enter
push
fildl
push
mov
jmp
cltd
ffree
xchg
push
je
mov
std
inc
push
mov
sahf
ljmp
lret
movsl
mov
push
sbb
or
aas
scas
mov
fcoms
xor
inc
scas
and
mov
mov
xchg
add
rorl
mov
cltd
xchg
imul
les
roll
ret
jge
and
test
pop
pushf
pop
pop
ret
and
mov
pop
jo
cmpsl
shl
dec
rol
adc
nop
fildl
into
hlt
inc
shll
cmp
sti
ss
loopne
lods
into
mov
int
jg
pop
cltd
xchg
mov
inc
push
pop
ficoml
add
popf
sub
int3
out
lret
mov
jns
adc
test
inc
dec
add
fdivrl
add
mov
in
cs
xchg
movsb
sbb
pushf
mov
orl
sti
xchg
pusha
jle
mov
rcrb
jns
sub
mov
fldcw
rcll
sarb
pop
jnp
mov
sbb
in
mov
fdiv
test
jnp
mov
push
fcom
pushf
dec
into
xchg
dec
pop
or
stos
xchg
push
test
mov
inc
nop
inc
mov
or
fmuls
negl
or
inc
xchg
cmpsl
mov
std
in
lock
adc
jbe
stc
xor
mov
lcall
pop
cmp
adcl
rorl
pushf
ret
add
jle
jmp
mov
in
adc
sub
xchg
and
fcmovbe
outsb
scas
jo
outsl
loope
xchg
in
movsb
add
xchg
mov
aas
xor
sbbl
movsb
mov
imul
movsb
lret
sub
rcll
xchg
lea
rclb
lea
leave
add
hlt
sub
aas
lods
adc
in
dec
icebp
and
or
lods
in
call
out
or
pop
test
out
sbb
adc
mov
cltd
pop
mov
ret
fs
cmp
sub
cwtl
ret
xor
pusha
xchg
cmp
add
es
xchg
sub
aas
gs
orb
aam
sbb
insl
stos
sub
aaa
cmp
lret
lods
adc
mov
movsb
pop
mov
shl
mov
daa
lds
xchg
push
ds
rorl
enter
xor
addr16
pop
insl
int
sbb
sub
mov
or
sti
cmp
mov
test
adc
mov
push
movlps
adc
mov
in
xchg
nop
cmpsl
xchg
inc
mov
aad
movsb
pop
aam
push
std
adc
outsl
sub
mov
push
shlb
push
push
or
fnsave
aam
pop
into
dec
cmp
gs
cmc
adc
les
je
pusha
cwtl
jb
xor
out
cmpsl
push
xchg
or
pop
scas
fstl
xor
mov
ret
dec
andl
into
sub
xor
add
pop
add
cwtl
mov
lret
std
jg
pop
and
faddl
pop
jbe
shll
pop
push
fldpi
ror
xor
fwait
push
inc
and
add
jmp
or
push
fbld
push
fidivs
inc
ficoml
push
xchg
sbb
fcomp
rclb
push
adc
andb
push
cwtl
mov
jl
and
insl
mov
insb
add
cmc
cmp
dec
adc
in
mov
test
mov
sbb
mov
popf
mov
mov
fidivrl
lds
jnp
inc
or
add
cmp
jae
sbb
fdivs
repz
int3
mov
add
pop
ljmp
xchg
adc
and
push
or
pop
stos
mul
je
leave
jo
mov
subb
mov
rcrb
jmp
in
push
fs
notl
mov
in
adc
fsubrs
shr
fwait
add
ror
push
data16
jb
xchg
jg
call
inc
cmpsl
cmc
test
xor
cmpsb
mov
cli
shrl
movsl
push
mov
cmpsl
inc
lret
jb
cmp
mov
popa
lods
inc
notb
stos
jns
push
or
out
fsubs
dec
leave
popl
aaa
aaa
adc
jl
fisttpll
out
mov
sbbb
jo
hlt
in
lcall
enter
stc
les
mov
test
imul
lret
test
cmp
sub
jg
xor
xchg
push
rcrb
xlat
fs
cmp
insb
xchg
add
push
inc
imul
and
movsb
add
les
xchg
cmc
dec
jmp
jne
movsl
cmp
popa
mov
test
stos
insb
cmp
cmpsb
mov
cmp
mov
lock
xlat
roll
lret
call
push
jbe
fxch
inc
pusha
and
add
scas
lret
roll
dec
js
stos
imul
lods
push
test
dec
cmp
fdivr
dec
push
bound
stos
xchg
adc
test
shrb
adc
pushf
mov
subb
mov
imul
inc
dec
insl
jae
push
std
sbbb
jmp
mov
lock
js
mov
xlat
lcall
sbb
fmuls
scas
out
mov
xchg
fcmovbe
mov
mov
std
pop
aaa
test
cmp
imul
pusha
ret
imul
xorl
repnz
inc
cmp
xlat
or
xlat
cltd
pop
mov
or
pop
insb
mov
mov
dec
inc
and
jmp
jno
push
fildll
mov
jne
xchg
cmpsl
cwtl
call
sarl
mov
push
js
add
in
sub
jmp
enter
enter
push
insb
les
sub
ffree
sbb
xchg
lea
add
mov
icebp
and
int3
xchg
add
jno
and
cmp
cld
mov
mov
mov
jnp
leave
jg
lret
lds
add
or
mov
les
pop
test
test
mov
shl
xchg
xor
je
push
pop
aam
or
scas
scas
pop
sbb
push
add
pusha
add
mov
jmp
or
xor
arpl
mov
cmp
or
je
roll
mov
test
inc
ffree
xorl
insb
or
dec
movsl
mov
aam
not
aam
sub
push
add
xchg
mov
mov
adc
mov
xchg
fnstcw
mov
adc
dec
push
jle
dec
pop
sbb
lods
mov
adc
std
jns
inc
clc
xlat
insb
and
lret
dec
in
js
mov
ret
jp
loop,pn
nop
aad
xor
lret
adc
out
les
ds
sbb
adc
or
sarl
jle
insl
sbbb
pop
push
ds
bound
push
add
sub
mov
les
lods
cmp
adc
jecxz
jnp
mov
mov
jp
jne
mov
push
xor
and
mov
test
scas
shlb
cmp
call
pop
test
sbb
pushf
cmpl
inc
push
push
aam
sub
aaa
rcrl
les
adcl
pop
out
imul
pop
pop
call
pushf
stos
inc
xchg
dec
sub
push
push
or
push
call
mov
jo
nop
push
jle
in
incl
jecxz
scas
xor
int3
pop
leave
jge
jmp
dec
cmpsb
mov
mov
dec
xchg
ja
jno
inc
nop
je
hlt
mov
xor
push
pop
mov
addb
xlat
sbb
test
hlt
insb
inc
add
shrl
adc
fnsave
daa
fmuls
mov
bound
je
sbb
jb
lods
fidivrl
xchg
iret
jle
test
mov
jo
lock
mov
test
push
or
scas
add
out
inc
aaa
mov
pop
hlt
scas
std
lcall
mov
repz
mov
dec
lret
xchg
mov
inc
adc
loopne
mov
enter
mov
dec
aad
nop
rorb
xlat
out
add
popa
mov
lea
repnz
inc
xor
add
jns
mov
addr16
shrl
divl
shll
xor
addr16
shrb
push
jns
cli
in
outsb
or
icebp
shr
ss
into
rcl
sub
push
aas
add
adcl
jle
fists
imul
cld
js
xor
rcr
and
pop
mov
add
orl
and
push
sbb
inc
push
cmp
sbb
sti
ret
shrb
push
inc
and
je
lret
out
pop
xlat
xlat
gs
jno
jge
and
nop
add
inc
xor
aad
cmp
cli
pop
daa
mov
add
lods
les
cmp
cwtl
lret
jl
in
leave
or
inc
stos
stos
aas
je
rcl
or
imul
xchg
add
inc
inc
imul
xor
or
pop
mov
dec
ja
cmp
mov
mov
lahf
push
xchg
inc
int3
shl
popa
fists
or
rcll
scas
xchg
movsb
mov
cmc
shll
subb
js
xor
nop
mov
cltd
imul
mov
aas
mov
iret
mov
loope
filds
and
and
ret
scas
adc
cmc
cli
aad
mov
nop
cmp
jno
aad
xchg
jecxz
sbb
outsb
xor
and
and
insb
mov
aad
mov
std
loop
sbb
stos
div
mov
jecxz
inc
outsl
dec
in
jnp
fstps
sub
pusha
and
outsl
mov
push
mov
data16
pop
das
lods
int3
enter
fs
sete
cli
lret
dec
and
das
and
adc
aaa
pop
jmp
shll
decl
xchg
cmp
test
pusha
jo
xor
repnz
aad
pop
sub
inc
loop
popl
aam
das
dec
outsl
je
dec
dec
fistps
pop
scas
nop
icebp
xor
jnp
leave
cld
lret
sub
cmp
loope
or
es
dec
callw
ljmp
push
lds
mov
mov
fstps
movsb
sbb
fnstenv
mov
stc
mov
lcall
mov
cmp
inc
jne
mov
xchg
fnstcw
js
push
outsb
pop
mov
insb
scas
dec
xlat
les
rcrb
mov
cs
adc
arpl
rorl
pop
mov
shll
cwtl
out
or
pushf
xchg
in
jno
xor
mov
xchg
add
bound
jp
cmc
int3
mov
jecxz
inc
push
ret
lods
sahf
pushl
xchg
push
pop
cld
mov
push
mov
sbb
xchg
cmc
fisttpll
jle
xchg
addl
sub
jg
inc
scas
or
jae
lret
aas
or
shll
dec
mov
out
inc
dec
outsl
sub
push
sub
mov
lock
movsl
test
lahf
dec
lret
cmp
xchg
clc
rorl
xchg
add
adc
inc
push
sarl
add
test
and
sub
mov
mov
bound
push
mov
mov
subb
mov
iret
xchg
ljmp
ret
pusha
sbb
pop
add
out
jge
les
cmpsl
mov
or
pop
test
push
std
out
and
rorb
xchg
or
repnz
int3
rclb
xchg
add
cs
push
cmp
inc
dec
fisubrs
daa
or
cmpsl
push
mov
out
mov
mov
mov
mov
mov
imul
adc
sbb
aas
jg
mov
pop
and
stc
or
xchg
call
je
mov
std
push
sarb
sub
push
fisubs
pop
test
lcall
jmp
mov
test
test
aad
mov
sub
rcl
insl
fidivs
adc
aas
lret
jmp
mov
push
jnp
ret
mov
push
xchg
add
xchg
outsb
mov
into
adc
arpl
nop
cmp
ss
mov
mov
nop
les
imul
notb
jle
lcall
xchg
cs
push
fcom
pop
dec
call
and
xchg
les
fists
cwtl
idivl
bound
xor
cmc
pop
push
sbb
ds
je
add
mov
into
scas
imul
mov
sub
cmp
sub
lods
pop
or
das
or
pushf
mov
test
mov
mov
mov
movsl
cmpl
imul
cs
xor
popa
xchg
sub
push
mov
inc
in
add
sahf
pop
xor
dec
cli
dec
xchg
fildll
push
rorl
jbe
test
cmp
dec
xlat
cmp
mov
es
rcll
or
push
mov
lods
or
mov
push
in
test
clc
and
mov
mov
add
xor
je
push
adc
or
jg
mov
xchg
push
mov
inc
and
outsl
je
out
mov
loope
rcll
push
nop
stos
lds
enter
or
paddusw
jno
fucomi
cmp
or
add
inc
outsl
and
mov
in
aaa
sti
push
xchg
mov
or
movsl
cmp
test
cmpsb
jl
pushf
push
adc
add
push
and
ja
push
loope
mov
idivl
inc
or
mov
lret
push
cld
add
pop
jbe
movsl
outsb
imul
cmc
pop
shr
sbb
inc
or
jne
xor
cmc
xchg
push
lcallw
mov
add
cmp
jo
xor
jmp
arpl
into
stc
adcl
movsb
sub
out
xor
lret
or
add
inc
clc
rcrl
push
lds
cmpl
cmp
ljmp
lock
sbb
test
pop
dec
mov
xor
outsb
dec
mov
mov
test
cli
sbb
test
cmp
fsubs
xchg
popa
xchg
inc
push
or
pop
xor
inc
pop
jns
sbb
fistl
pop
inc
nop
adc
adc
sub
mov
xor
or
das
lret
jle
shll
or
sti
mov
shlb
sub
mov
push
and
mov
mov
mov
xchg
jbe
pmuludq
push
push
xchg
lods
shlb
or
insl
cs
dec
rolb
jbe
ret
push
xchg
nop
and
xchg
in
fmuls
int3
aas
inc
lcall
stos
inc
decl
clc
pop
iret
mov
mov
mov
adc
cmc
enter
push
pop
rcr
xor
in
pop
dec
xchg
cmp
iret
push
fstl
xchg
shrb
sub
jne
daa
pop
or
daa
dec
and
push
inc
aam
daa
test
dec
cmp
hlt
iret
cld
mov
clc
jne
or
mov
pop
decb
jo
ja
ret
xchg
daa
iret
cmpsb
jbe
xchg
hlt
mov
pop
int
push
gs
call
mov
cmc
pop
dec
sahf
hlt
push
pushf
mov
mov
sbb
lods
mov
fldl
sbb
fs
sbb
les
subb
jp
subb
daa
and
js
lret
pop
mov
rorl
pushf
imul
mov
jne
mov
pop
mov
aas
jmp
adc
sub
jae
mov
addr16
insb
ds
or
dec
ficomps
int3
sub
jge
mov
inc
outsb
or
bound
dec
aad
loopne
push
fmuls
cwtl
jb
push
daa
fcmovne
js
and
inc
jno
sbb
pop
sti
and
sbb
dec
or
sarb
jne
mov
push
in
movsl
icebp
cmp
aas
xor
lahf
sub
push
and
movsb
shl
add
imul
test
imul
in
xlat
xchg
hlt
aad
shrb
int
shufps
mov
push
add
jle
fisubrl
adc
mov
int3
addl
mov
adc
stc
pop
push
pop
jae
aad
imul
dec
mov
add
inc
test
pop
dec
add
push
lods
nop
add
hlt
mov
mov
into
dec
lods
jne
push
and
mov
xlat
pushf
dec
rclb
lret
xchg
xchg
aaa
aam
fwait
je
jo
xor
fnsave
mov
clc
mov
int
inc
xchg
jae
mov
imul
aaa
and
mov
mov
lds
dec
shll
movsb
nop
pusha
jae
testb
sti
cmpsl
xor
ljmp
aam
sti
int
sbb
cmp
xor
es
or
cwtl
push
aas
sbb
lods
push
test
addr16
or
adc
and
shlb
jns
hlt
rcrl
adc
imul
push
lret
add
xchg
or
mov
movsl
fstl
add
xchg
mov
push
cmp
jno
test
stos
mov
or
gs
fcmovbe
and
add
mov
cmp
or
pushf
add
xchg
pop
xchg
negl
movb
arpl
mov
jo
leave
sahf
mov
pop
pop
test
cmp
movsl
sbb
add
adc
mov
into
or
fcoms
sbb
cmc
xor
es
pop
pop
sbb
sbb
icebp
rcll
in
xchg
xlat
test
stc
pop
push
test
jbe
fmulp
sbb
ljmp
mov
hlt
push
push
clc
mov
in
or
and
xchg
mov
cmpsl
aam
jl
lds
mov
in
mov
or
xlat
cltd
sahf
add
mov
movsl
and
xchg
sbbb
sbb
cmp
into
add
dec
jge
sub
shrb
add
pushf
lret
xchg
xchg
lret
mov
imul
cmp
xchg
dec
loop
pop
mov
sar
adc
imul
call
inc
jae
xchg
outsb
mov
fsubrp
sbb
fisubl
cwtl
push
ret
enter
out
push
jle
andb
in
insb
sti
sbb
test
mov
out
rcrl
xlat
push
mov
leave
dec
icebp
adc
js
dec
or
mov
and
mov
and
jp
rol
insl
xchg
mov
cmp
and
rcl
std
pop
test
cli
subb
inc
lret
adc
jnp
cmpsl
xor
dec
ret
dec
adc
testl
test
rorl
mov
sbb
or
add
mov
adc
cli
mov
push
out
int3
rol
pop
lret
jo
loope
repz
mov
js
adc
adc
ficompl
mov
add
add
or
gs
jle
js
scas
jl
add
cmpsl
ret
and
sbb
mov
fadds
clc
or
into
mov
popf
movsl
movsb
pusha
xor
xchg
leave
jnp
mov
lret
insb
in
cmpsl
sahf
cmc
sarb
icebp
xchg
add
incl
out
cmpsl
push
add
adc
test
lcall
outsl
out
mov
add
sub
jno
lock
rolb
and
lds
push
bound
lock
add
shl
out
mov
jnp
cld
test
xchg
or
jle
jl
sbb
loopne
xchg
or
inc
lret
mov
xor
mov
push
and
or
add
psubd
sbb
flds
xchg
ljmp
subl
add
xchg
and
mov
xchg
or
cltd
movsl
pushf
mov
cmp
fwait
cwtl
rcrb
xchg
inc
adc
pop
cmp
cwtl
cmpb
mov
pop
into
insb
inc
into
dec
das
or
push
sbb
push
add
popf
jecxz
inc
call
jo
adc
ror
icebp
or
std
fstps
xchg
cld
or
fcoml
ja
or
into
call
jae
cmpb
mov
outsl
test
cmpsb
lahf
scas
ret
call
enter
push
nop
in
nop
test
mov
dec
dec
jo
data16
adc
cmpsb
jmp
iret
jno
das
lahf
imul
cmp
lahf
mov
test
sahf
fsubs
sbb
inc
pop
push
sbb
es
push
lock
dec
sbb
adc
sbb
push
xchg
xor
jle
push
lds
and
jns
in
cmpsl
lock
sbb
mov
mov
or
mov
sbb
imul
mov
xchg
cs
jl
mov
push
clc
push
insb
rcl
xchg
inc
mov
popf
subb
and
in
in
fimuls
out
scas
jge
dec
mov
arpl
iret
mov
mov
or
sub
xchg
jg
jle
xor
dec
nop
adcb
lods
mov
das
rclb
xor
hlt
cmpsl
dec
and
jns
sub
mov
push
cmpsl
or
mov
xchg
es
das
ret
adc
xchg
sbb
test
or
adc
push
ret
xchg
fwait
jecxz
movsl
sub
mov
test
dec
jle
add
xor
mov
aad
xchg
ljmp
es
out
out
push
jae
shll
sub
xchg
bound
mov
lret
imul
or
cmp
adc
leave
sub
mov
inc
jmp
xor
rol
mov
adc
imul
xchg
mov
sbb
pop
mov
cmc
mov
mov
adc
rorb
pop
jno
in
cs
cmp
pop
jno
pop
out
fiaddl
mov
test
out
or
adc
ljmp
xlat
inc
or
dec
push
xor
bound
cmp
addb
lahf
or
inc
sub
hlt
sti
mov
mov
add
mov
jle
or
push
sbb
jg
adc
rcl
cli
ljmp
cmpsl
iret
sub
add
cli
inc
jne
push
lock
lods
aam
jl
xchg
out
or
mov
and
mov
mov
mov
xchg
or
das
mov
push
mov
ljmp
stos
mov
imul
clc
loope
std
pop
jmp
rcll
xchg
call
and
mov
loop
rcr
cmp
and
lds
and
in
outsb
inc
cmp
push
cmp
or
cmp
pop
push
and
inc
jp
xchg
dec
sub
sub
mov
fcoml
out
push
and
jmp
es
add
mov
xchg
cmc
xchg
pop
jb
movsl
test
lcall
jle
dec
add
call
mov
in
or
mov
mov
xchg
in
arpl
test
and
clc
xchg
lret
inc
mov
cmc
test
add
pusha
ret
push
lahf
shlb
bnd
cwtl
bound
mov
movsb
rorb
cmp
cmc
ret
or
push
inc
cmp
divl
jle
imul
sbb
dec
aaa
push
or
fistps
dec
pop
test
rclb
in
dec
lds
mov
pushf
fildl
icebp
or
cmp
ss
mov
xchg
jecxz
inc
test
aas
shlb
jge
cli
mov
fcmovu
jo
inc
rcll
loop
adc
mov
cs
adc
jno
ljmp
sarb
imul
test
sbb
addb
jmp
pop
push
dec
jge
sub
jno
cmp
pop
out
mov
or
std
ret
leave
les
es
or
or
roll
dec
mov
stos
xlat
gs
mov
cmp
dec
jnp
inc
jno
mov
loopne
mov
add
in
cmp
xor
push
ret
imul
cmc
mov
xchg
lods
push
dec
ror
xor
lret
mov
mov
lods
sbb
jb
or
push
push
jae
xor
jo
jmp
adc
pop
pop
js
mov
imul
rcl
jge
nop
jae
and
imul
sub
sbb
into
int3
cld
loopne
mov
sahf
mov
sbb
jnp
push
fildll
push
add
in
lret
jns
pop
fildll
stos
jb
mov
inc
jb
dec
les
dec
sarb
cli
es
lods
shrb
xor
pop
mov
jle
aaa
mov
cmpsl
enter
cwtl
and
jns
mov
adc
in
ret
std
sahf
daa
adc
cmpl
xchg
aam
rcrb
pop
leave
jns
and
dec
cwtl
test
jb
dec
mov
adc
xor
ficoml
sahf
into
adc
into
and
jbe
adc
shlb
test
xchg
loopne
mov
sbb
dec
pop
aad
inc
fdivl
stc
nop
mov
adc
ljmp
mov
pushl
ficomps
rcl
sbb
mov
push
insb
xorl
cli
push
xchg
mov
cwtl
adc
stos
mov
aad
xor
in
add
es
lahf
call
xor
mov
fdivp
xchg
pop
or
rcrl
adc
dec
xchg
jo
jbe
lods
lds
insb
mov
adc
jp
inc
inc
insl
imul
add
sbb
lret
andl
imul
push
jmp
lods
xchg
or
fs
lcall
popf
adc
into
aas
sbb
shrb
dec
add
notl
mov
rol
mov
subb
rol
sub
std
aad
out
mov
test
push
lea
mov
into
mov
inc
inc
cmc
mov
mov
ret
rorl
int
sti
xor
cmp
push
mov
lods
cld
mov
lcall
cmp
jb
cmpsl
sbb
mov
sub
mov
push
loopne
lods
sahf
popf
daa
pushf
xchg
call
cwtl
aad
mov
xchg
add
sub
iret
cmp
lret
mov
cmpsl
add
inc
mov
mov
adc
adc
popa
int
scas
and
mov
adc
xor
push
cltd
dec
pusha
jmp
xchg
mov
iret
xor
xor
adc
mov
enter
shlb
pop
dec
and
int3
add
movsb
rcl
cmp
lret
mov
aas
dec
add
push
cmpsb
scas
pop
les
xchg
sarb
filds
rclb
inc
push
std
jb
mov
cmp
out
or
xorl
xchg
std
ja
cld
xchg
mov
loope
cmpsb
jo
cmc
dec
imul
dec
mov
dec
fdivrl
push
insl
dec
sbb
je
hlt
xchg
inc
fildl
jg
loope
ja
js
sarl
jmp
lods
xor
push
jg
inc
dec
push
xchg
fs
lea
push
xchg
ret
bound
cmp
inc
int3
push
mov
xchg
or
push
imul
dec
enter
cli
mov
or
mov
pop
out
je
lock
pushf
pop
sub
imul
xchg
mov
dec
sub
mov
fldt
mov
mov
pushf
imul
test
lahf
stos
imul
push
in
int
sub
xlat
out
push
inc
imul
sbb
mov
mov
imul
xchg
insb
mov
or
xchg
pushf
or
inc
test
fwait
inc
movsb
sbb
je
xchg
adc
xchg
adc
shr
rcl
xorl
cmpsl
mul
mov
fwait
lds
mov
mov
mov
int
add
movsb
aad
jo
push
pop
xchg
fcoms
xchg
int
ds
xchg
inc
pop
xchg
scas
mov
jb
iret
or
pop
fs
xor
and
fcomps
pop
sbb
leave
xchg
xor
xor
cwtl
movsb
xchg
int3
nop
cltd
mov
mov
leave
imul
je
loope
inc
test
xor
mov
jns
cmp
sub
mov
dec
rorb
repnz
push
mov
xor
rcrl
cmc
xchg
xor
lret
shll
mov
add
jl
gs
mov
adc
mov
adc
mov
sub
fdiv
mov
rorb
sub
mulb
imul
bound
add
mov
mov
cld
arpl
mov
jl
stos
xor
push
stc
fcoml
lods
je
xor
stos
int
fcoms
and
jg
cmp
sarb
addr16
enter
movsl
data16
test
xor
rol
int
push
testl
xor
jbe
inc
inc
aad
andl
aad
xchg
imul
mov
sub
or
mov
fistl
push
ja
inc
push
add
cmpsl
mov
pushf
mov
icebp
mov
or
mov
int3
add
inc
adc
ficompl
mov
push
cld
pop
filds
test
ret
pop
push
jecxz
xchg
xlat
ljmp
daa
cmc
dec
scas
cwtl
call
loope
dec
add
movsb
or
jbe
adcl
pop
in
fistpl
mov
jne
or
and
jnp
mov
sbb
inc
fidivrs
xor
jo
addl
add
mov
and
and
sbb
add
out
test
adc
lahf
push
loopne,pt
inc
jne
faddp
push
or
push
xor
xorl
roll
jmp
push
pop
stos
cltd
xchg
call
pop
and
mov
adc
cltd
xchg
xchg
enter
sub
cmc
xchg
cmp
sbb
fwait
je
daa
cmpsl
out
push
sbb
sbb
nop
roll
cld
xchg
mov
incb
mov
jl
inc
or
cld
xchg
mov
or
cmpsb
xchg
shlb
xor
xchg
push
lea
scas
daa
dec
std
or
jg
mov
jmp
mov
add
jp
xchg
mov
xchg
movsl
xor
stc
addb
cmc
nop
inc
mov
dec
ja
fcmovu
mov
sub
sbb
add
mov
and
add
cmc
int3
mov
movsb
repnz
shl
cmc
mov
clc
or
xorb
mov
mov
test
ret
lahf
mov
mov
cwtl
rorb
mov
pop
insb
pop
test
jno
popf
pop
add
sub
and
pusha
clc
adc
pusha
lahf
push
pusha
add
decl
mov
lea
mov
xchg
rcrl
pushf
orb
sbb
data16
fnstsw
pusha
fadds
cmpsl
mov
sbb
cld
test
lods
aaa
out
jbe
in
mov
xlat
xchg
push
or
hlt
icebp
into
mov
in
nop
inc
fldenv
aad
or
int
cmp
mov
ljmp
fiaddl
popf
call
mov
call
sbbb
xor
ret
xchg
or
jns
cs
sarb
sarb
mov
int3
xor
popa
pop
pop
jp
mov
push
rcrb
leave
cs
cwtl
pusha
jmp
out
xlat
lcall
lods
jge
mov
push
jl
fmull
adc
stos
sub
xchg
shlb
call
xor
or
fs
ja
frstor
or
mov
xchg
orl
mov
mov
enter
inc
mov
fdivp
jbe
jae
xchg
xchg
add
mov
movl
mov
mov
in
xchg
leave
xchg
inc
mov
lods
dec
lret
int3
mov
xlat
mul
jmp
lds
test
push
mov
jg
inc
test
mov
loopne
cmp
and
push
mov
xor
add
nop
les
iret
dec
call
cli
push
jb
xchg
das
test
jge
cltd
call
lods
imul
xchg
mov
or
push
sarl
push
ret
mov
pusha
lcall
mov
insl
push
jge
mov
xlat
int
movsl
enter
aaa
mov
mov
inc
or
je
stos
hlt
jmp
mov
iret
jmp
out
mov
rolb
shrl
mov
jo
xrelease
movsl
sbb
add
mov
hlt
jno
push
imull
cmp
push
shrl
test
sub
imul
call
test
sbb
mov
push
popf
sbb
mov
push
mov
sahf
xchg
dec
push
loope
fdivl
je
cmpsl
ror
push
push
aam
dec
stos
cmc
orb
sbbl
fisttpll
mov
leave
pop
fbstp
nop
pop
mov
cmpsb
sub
mov
mov
inc
mov
adc
adc
iret
push
incb
mov
hlt
test
scas
push
mov
popf
movsb
mov
jnp
mov
subl
inc
push
add
cld
imul
loopne
sbb
fmull
arpl
adc
loopne
mov
lahf
mov
inc
push
cmc
mov
inc
cmp
fwait
ss
push
data16
into
jmp
and
mov
test
stos
mov
ret
pushf
mov
cmc
mov
adc
jge
mov
dec
xchg
push
jle
xor
insl
pop
xor
cmpsl
mov
sbb
sub
sbb
decb
out
push
aaa
add
dec
imul
xchg
rol
imul
lret
cmp
test
jnp
test
inc
into
adc
insb
adc
lods
jl
cmpsl
data16
lahf
in
sbbb
mov
pop
testb
xlat
les
dec
or
push
lret
mov
fidivs
mov
into
bound
xchg
rcl
cmp
dec
hlt
add
test
and
mov
aaa
rol
add
push
in
xor
mov
inc
pop
mov
adc
or
sub
lock
and
push
cltd
mov
hlt
es
add
pop
jg
enter
cmpsl
lods
stos
aam
lretw
mov
inc
mov
shrl
mov
shlb
fldl
add
adcl
test
or
out
test
cmp
cltd
mov
xor
inc
jg
mov
outsl
pop
xchg
pop
stos
pop
sar
cld
mov
jg
test
pusha
lcall
inc
nop
mov
call
clc
dec
jae
outsb
jb
arpl
xchg
flds
dec
sub
cmpsl
fcmovnbe
inc
xor
mov
pop
mov
mov
or
imul
mov
push
fdiv
shrb
push
dec
inc
aas
lret
insb
jnp
gs
xchg
jg
add
in
loopne
mov
mov
insl
add
rcr
lret
mov
leave
insb
push
shr
pusha
or
mov
mov
call
inc
adc
xchg
adc
dec
or
outsb
fiaddl
fiaddl
pushf
dec
mov
cmpsl
push
frstor
insb
or
fisttpl
lods
push
jp
xor
add
out
insl
xlat
mov
ds
cld
mov
std
xchg
pushf
xchg
inc
imul
or
rorl
test
pop
mov
mov
rolb
ja
push
sbb
test
std
xchg
add
cltd
xlat
rcrl
xchg
sbb
mov
jp
leave
and
ds
hlt
jecxz
fimuls
or
jo
mov
xchg
enter
push
loop
test
test
rcl
jnp
xorl
jne
adc
insb
sub
lea
aas
pop
dec
and
and
or
dec
push
cmp
mov
repz
or
adc
ljmp
sbb
stc
lret
int
or
test
imul
mov
xchg
push
jo
scas
mov
int3
stos
dec
popf
fadds
test
cmp
pushf
cltd
mov
insb
push
jl
js
xchg
xor
mov
into
int3
pop
rorb
dec
add
jae
mov
cmp
lds
pop
mov
je
xchg
xor
js
inc
aad
ljmp
aas
jmp
test
imul
iret
in
inc
adc
push
jge
xlat
nop
ja
mov
in
sub
les
inc
stos
inc
pop
mov
lret
lock
xchg
pop
xchg
adcb
sbb
or
lods
jp
or
mov
dec
lods
pop
nop
mov
movsl
in
xchg
shrb
out
aas
cld
call
in
sub
pushf
or
nop
mov
xchg
notl
or
mov
idivl
lock
cmc
adc
lock
pop
mov
mov
pop
rolb
ljmp
sbb
faddl
pop
inc
test
sub
xchg
or
dec
aaa
jno
pop
pushf
hlt
imul
sbbb
cmc
lcall
test
and
mov
or
clc
mov
or
in
dec
enter
cmp
push
xchg
cmp
iret
mov
sub
mov
sub
lock
xchg
jmp
mov
mov
add
shll
mov
ss
cwtl
hlt
xchg
mov
jo
cltd
ja
std
pop
mov
pushf
imul
mov
jb
inc
mov
cmpsb
sahf
xor
add
ljmp
push
movsb
insl
mov
nop
insb
add
xlat
stos
and
mov
scas
mov
into
inc
mov
and
sbb
lcall
xchg
call
ljmp
lcall
fisttpl
fdivs
xchg
test
test
adc
xchg
sarb
mov
jl
jno
inc
int3
push
or
jge
sbb
mov
and
movsl
jbe
shr
mov
enter
mov
xchg
es
mov
daa
or
jae
test
xchg
fisubrl
fbstp
inc
aam
loopne
scas
call
xor
or
xchg
jg
or
mov
mov
movsb
fxch
fists
ljmp
ret
push
movsl
lock
dec
mov
mov
lods
and
icebp
dec
mov
mov
cltd
test
xchg
mov
add
pop
fildll
push
and
mov
nop
scas
movsl
push
lock
out
pop
scas
shrb
dec
mov
adc
jne
fcmovnb
ret
push
les
cwtl
push
xor
add
incb
cmpsb
mov
xchg
jg
cmp
cmp
adc
xor
shlb
inc
xchg
push
xchg
daa
aam
add
mov
lret
cmp
ja
or
add
add
insb
push
ficoml
mov
call
inc
jb
dec
int3
sbb
adcb
sub
test
test
orl
push
lahf
les
and
mov
stos
enter
xor
mov
jmp
jecxz
mov
mov
jge
loopne
lcall
andl
dec
not
adc
aam
pop
push
mov
mov
mov
in
mov
or
rolb
jns
hlt
jge
mov
stos
sarb
ss
mov
lods
enter
out
xchg
and
push
andb
xchg
adc
mov
cmpsl
adc
mov
xor
les
ret
or
pop
rcll
push
call
inc
sbb
xchg
stc
aaa
lods
lahf
movb
stos
ljmp
push
sbb
sarl
aad
dec
or
or
cmp
fsubp
imul
or
mov
adc
fcom
insb
mov
movsb
add
xchg
cwtl
xor
mov
add
add
jnp
cli
sti
std
fnstsw
scas
sti
fs
nop
mov
mov
cltd
test
loopne
jne
xchg
sbb
out
xlat
adc
ja
pusha
shl
fcoml
mov
jge
sbb
pop
and
mov
xchg
jne
and
ret
xor
and
aad
ror
and
dec
ficomps
jmp
add
jb
repnz
adc
xor
mov
div
scas
mov
xchg
push
aaa
xor
mov
push
or
push
mov
mov
xchg
sbb
cmp
sahf
aad
and
pushf
shll
neg
aas
lret
jmp
test
jnp
xchg
mov
xor
inc
ds
adc
rcl
and
mov
sbb
pushf
rcrb
cld
jb
test
pushf
pop
sub
pop
out
movsb
rclb
test
add
xchg
out
or
lods
out
mov
cmp
mov
aad
jno
pop
dec
mov
test
into
sahf
or
xchg
scas
pop
std
shlb
xor
fisttpl
sbb
sahf
stc
mov
rorl
hlt
rcr
movsl
xchg
push
scas
cwtl
cwtl
ficompl
test
movl
jmp
fnstsw
aaa
sub
or
mov
cmc
shlb
or
movsl
not
femms
mov
lds
jl
jno
jnp
mov
cmc
jo
xor
test
nop
jle
ret
pop
adcb
xchg
clc
inc
popf
leave
cmc
jo
les
test
pop
sub
pop
mov
xor
adc
aam
in
adc
or
lock
add
mov
imul
xchg
mov
cs
stos
out
push
fdivs
stos
add
add
lods
push
mov
cmpsb
test
adc
or
mov
imul
fadds
mov
inc
dec
fwait
pushf
lea
nop
nop
stos
sub
push
rcrb
jcxz
mov
xor
jb
cmp
sbb
xchg
cs
or
jnp
shlb
sbb
lcall
xchg
sbb
stos
inc
sarb
mov
lret
adc
jnp
and
les
push
cmp
ja
jns
xlat
dec
lcall
test
dec
sbb
and
vpcomq
jo
mov
xchg
or
cmp
lahf
xchg
mov
mov
ljmp
stos
cmp
mov
mov
int3
ja
je
shlb
mov
mov
inc
sub
xor
mov
test
adc
mov
rcl
in
lods
mov
lods
cld
aad
jae
push
push
lahf
inc
je
fildl
js
aaa
icebp
mov
movsl
xlat
cltd
stos
outsb
xchg
jl
mov
push
outsb
rol
enter
inc
mov
ljmp
add
stc
lods
movsl
ja
mov
mov
call
shrl
aas
xor
imul
ret
enter
jge
enter
dec
adc
push
scas
shll
shrb
inc
xchg
rcr
fldt
adc
aam
cmp
imul
xchg
rolb
js
mov
mov
into
lahf
mov
pushf
xchg
nop
cld
fldt
sahf
jp
andb
mov
xchg
subl
not
ret
cwtl
mov
mov
inc
testl
jo
or
add
mov
inc
inc
hlt
lds
lock
cmp
sbb
sub
scas
jb
movsl
push
je
hlt
lret
fbld
dec
push
mov
ficoms
sbb
loopne
xchg
test
cmp
cmp
cmpsl
mov
shrl
add
mov
rcl
pop
dec
imul
enter
faddl
sub
lret
jle
andl
ret
jo
daa
add
enter
mov
cmp
out
mov
insl
pusha
test
mov
xchg
jne
stos
insb
test
add
xchg
mov
or
les
mov
imull
xchg
push
insb
add
xchg
mov
add
ret
cmp
mov
pop
add
decb
or
sub
fdiv
inc
mov
mov
cwtl
cmp
in
in
xchg
xchg
dec
es
lcall
xor
popa
stos
test
inc
rorb
mov
mov
subl
icebp
lods
mov
xchg
leave
xchg
bound
cmpsb
mov
dec
bound
sbb
sahf
movsb
sarb
ret
inc
bound
jbe
push
mov
mov
std
sbb
lahf
insb
inc
sbb
push
jge
cli
adc
mov
sbb
jge
stos
xorb
aaa
hlt
cs
hlt
mov
adc
icebp
inc
mov
icebp
iret
insb
mov
inc
push
into
hlt
fimuls
jecxz
mov
xchg
lcall
imul
into
std
xor
jae
dec
adc
and
push
inc
mov
adc
push
pop
inc
cmp
pushf
or
mov
dec
mov
mov
push
add
mov
pop
fcoms
xchg
incb
shrb
mov
lods
inc
mov
daa
mov
lock
jp
addr16
dec
push
mov
sub
movsb
xor
iret
sbb
out
rcr
aas
sbb
mov
xchg
lret
pusha
lea
ficomps
movsl
push
pop
sbb
stos
insb
mov
loopne
mov
incl
or
mov
push
pop
shll
push
aas
in
jp
outsb
inc
nop
imul
or
fdivs
push
outsl
lds
jle
xor
lods
jbe
dec
lods
jmp
adcl
pop
imul
mov
dec
mov
jmp
mov
enter
pop
movsl
ffree
jo
jns
test
loope
test
mov
notl
ror
inc
mov
pop
cmpsl
aam
lret
ret
mov
test
sarl
mov
mov
in
mov
push
push
loopne
or
mov
push
fsubs
mov
shll
xchg
push
call
clc
cld
mov
mov
inc
rolb
call
bnd
mov
les
pop
mov
mov
xchg
mov
dec
xchg
out
jle
xor
adc
vpshab
push
dec
ret
xlat
rorb
jge
les
clc
adc
add
subl
aaa
cmpsl
push
xor
mov
push
mov
enter
ja
mov
push
rcr
dec
cli
fildll
dec
aam
push
aas
mov
andb
jo
std
dec
jbe
lock
mov
cld
cmpl
fadds
mov
mov
add
cwtl
orl
adc
xchg
or
movsb
mov
stc
mov
mov
push
imul
dec
jo
xor
andb
mov
and
adc
xor
push
push
jne
sbb
pushf
divb
mov
into
jo
or
cwtl
lahf
rolb
fs
add
mov
test
and
mov
aaa
outsb
mov
mov
cltd
cli
insb
rcr
leave
xchg
scas
add
imul
fistpll
and
cmp
or
mov
cmpsl
std
mov
mov
cmp
hlt
cmp
std
lea
xchg
rcr
mov
inc
test
inc
mov
sbb
mov
add
cld
xchg
cmp
aam
int
or
jp
movsb
pushf
mov
xor
repz
sarb
xchg
lds
mov
fisubrl
int3
cld
mov
fmuls
mov
and
mov
sbb
push
mov
mov
imul
aad
jge
pop
fwait
or
sbb
out
call
daa
mov
ja
rcll
inc
and
cmc
insb
jmp
js
leave
cld
xorb
mov
add
push
pop
notl
ss
jbe
int3
mov
loop
imul
and
and
ja
push
cmp
mov
mov
dec
xor
ja
push
aad
sbb
push
jo
repnz
jge
mov
jae
es
xchg
push
cwtl
xchg
or
test
mov
cld
pop
dec
jae
int3
pop
mov
add
shl
dec
fcmove
cmp
cmp
jmp
ljmp
sub
sbb
ja
pop
adc
or
loopne
insb
push
movsl
cmp
xor
mov
icebp
jmp
fldenv
inc
or
push
or
std
mov
mov
xor
fs
mov
adc
cli
or
jns
test
call
jecxz
lret
movsl
add
jp
adc
es
inc
xorl
add
sub
into
test
out
xchg
aad
fistpl
mov
mov
dec
jecxz
mov
mov
adc
xor
push
pushf
fs
fwait
lret
dec
adcl
jnp
adc
inc
or
hlt
test
cmp
add
fisubrl
inc
lock
fistpll
mov
fmuls
mov
xlat
pusha
lcall
jo
adc
and
add
mov
dec
pop
cmc
sahf
or
fimull
popl
test
add
arpl
mov
loop
cmp
mov
jae
mov
rcrl
mov
mov
xor
in
sti
dec
into
xchg
aam
mov
ret
pop
loopne
je
pop
mov
push
inc
enter
pop
fidivs
and
mov
vpunpckhbw
lock
xchg
lret
inc
xchg
in
xchg
mov
or
test
enter
xchg
xchg
or
jmp
bound
stos
mov
adc
jl
jecxz
mov
push
or
adc
jae
stos
and
les
pushf
in
inc
mov
mov
pushf
outsl
in
repz
mov
jbe
mov
lret
shr
xlat
sarb
dec
repz
rcll
add
push
mov
inc
sub
push
xchg
sbb
rorb
dec
or
mov
adc
insl
ds
xlat
call
int
incb
push
cli
shll
or
push
out
bound
cmpsb
jmp
aam
xchg
xchg
roll
addr16
js
call
mov
sub
and
dec
fwait
pop
jns
int3
xchg
imul
inc
cmpsb
add
out
dec
or
clc
and
cmp
movsl
insb
test
stos
lds
inc
into
les
lea
shlb
ljmp
cwtl
add
xchg
xchg
xchg
xchg
xchg
sub
test
cmp
dec
cmp
repnz
sbb
push
clc
es
inc
sbb
dec
mov
jne
lret
push
inc
fisttps
mov
rol
and
push
fs
dec
cmp
and
mov
adc
flds
ret
je
stc
mov
push
mov
aam
in
xor
hlt
sbbb
or
ss
nop
fwait
test
xorb
fldcw
mov
lds
aad
add
xorl
ret
pop
or
xchg
scas
mov
cmovge
cmpsl
iret
cmc
add
icebp
inc
inc
jle
mov
lea
stos
call
fiadds
pop
sub
movsl
sub
sbb
push
mov
mov
test
cmp
test
push
fs
lock
push
mov
sar
test
test
push
jno
inc
xchg
outsb
dec
in
pushf
mov
xor
dec
fdivrs
iret
pop
push
mov
cmpsl
aad
je
xor
or
hlt
xchg
mov
int
push
cs
xchg
add
das
mov
pop
sbb
fbstp
dec
mov
fistpll
inc
jge,pt
or
jmp
mov
dec
test
hlt
cs
orl
add
inc
lods
inc
arpl
stos
or
mov
ficoml
inc
xchg
addl
adc
loope
pop
xchg
inc
push
xchg
fildl
loop
ljmp
push
test
out
mov
frstor
push
inc
adc
outsl
or
aaa
jns
jnp
sbbl
and
nop
mov
mov
nop
subb
xchg
into
in
mov
mov
insb
adcl
inc
outsb
jns
mov
test
dec
adcb
xchg
les
pop
imul
nop
pop
sbb
imul
adc
sub
or
cmp
lds
sub
lds
test
xor
jno
add
int3
aam
rclb
jb
cwtl
or
inc
cmc
gs
jae
xchg
add
push
decb
jne
mov
das
or
imul
jo
sahf
fmull
or
jno
mov
jmp
fdivr
sub
outsl
ret
adc
fistpl
mov
push
stos
and
mov
enter
cltd
mov
mov
stos
xchg
les
mov
push
adc
xchg
jmp
or
aaa
mov
imul
and
mov
stos
sbb
nop
imul
mov
dec
das
fld
sbb
mov
loope
xchg
fcompl
iret
jae
pop
stc
sar
popf
lods
fstpl
push
into
cwtl
stos
pop
movsl
pop
popf
fcmove
es
mov
cmc
cltd
xlat
in
lock
loop
push
adc
pop
jmp
rclb
mov
mov
cmc
mov
icebp
jbe
lcall
pop
jns
cmc
xchg
xlat
stos
arpl
movsl
call
push
movsl
cmpsl
mov
lock
push
pop
out
jbe
lret
js
je
mov
inc
inc
mov
call
fwait
shll
aaa
adc
data16
fwait
adc
xchg
popa
rolb
pusha
or
shrb
shrb
inc
mov
loopne
fildll
mov
jnp
sarb
loop
sub
sub
movb
movsl
inc
mov
xor
inc
mov
andb
mov
movsl
ffreep
mov
jge
jge
mov
hlt
mov
ret
addr16
add
aam
into
pushf
sub
sbb
and
cmp
mov
fcmovu
data16
nop
adc
cmp
jge
mov
shl
pop
jbe
add
loopne
stos
push
dec
les
lods
ror
into
add
and
shl
les
enter
imulb
clc
sbb
rcl
fisubrl
mov
xchg
mov
cmp
jne
mov
inc
jb
xchg
adc
movsb
inc
outsl
push
out
jecxz
push
shll
add
popf
ja
jno
sub
aas
test
clc
ds
inc
xchg
adcb
pop
add
xchg
call
cwtl
dec
adcl
arpl
add
push
rcrb
sub
mov
mov
cli
mov
mov
ljmp
jns
dec
loopne
pusha
arpl
inc
iret
js
or
xor
push
add
pop
stos
call
fists
cmp
mov
js
insb
ror
aad
dec
loopne
out
hlt
jo
or
in
push
push
add
or
out
mov
js
pop
and
test
imul
in
xchg
int3
test
add
lret
les
mov
xchg
xchg
mov
cmp
pop
stos
inc
hlt
mov
cmpsb
movsl
adc
cmp
inc
mov
jecxz
adc
leave
add
sbb
lahf
mov
mov
adcb
mov
push
icebp
xchg
xlat
mov
movsl
in
je
ret
rorl
or
int
sub
xchg
cmpsl
dec
sahf
mov
lods
dec
xchg
icebp
bswap
xlat
mov
pushf
push
fs
mov
stos
add
pop
hlt
mov
lods
pop
mov
je
rclb
ss
popa
add
cmpsl
call
out
nop
aas
loop
icebp
scas
es
xor
jge
mov
add
pop
lods
or
popf
ja
pop
add
cmpsl
cmp
adc
sbb
loope
in
into
loopne
aam
pop
lcall
insl
rolb
in
or
loopne
add
push
push
and
mov
call
push
mov
fdivl
cmpsb
in
data16
push
loope
sbb
out
addr16
pusha
cmp
sbb
xchg
test
mov
test
outsb
test
adc
xor
cmpsb
xor
xchg
or
add
dec
inc
cmp
adc
xor
test
in
jbe
lock
mov
jge
mov
jbe
scas
ljmp
fs
push
js
jb
sbb
aad
push
mov
dec
out
lret
movsl
repz
adc
imul
cmc
xchg
add
mov
ljmp
mov
jae
push
movsl
les
mov
mov
rcrb
incb
push
xchg
cmc
xchg
pop
loopne
ljmp
pop
push
lods
jne
mov
push
and
pop
pop
leave
pop
js
sbbl
add
hlt
lods
and
add
enter
inc
pop
enter
lea
movsl
fsubr
xchg
xor
mov
icebp
mov
sahf
lret
xchg
call
in
xchg
stc
add
mov
bswap
sub
inc
or
outsb
add
add
or
fisttpl
mov
lret
adc
jecxz
rcrl
xchg
add
ja
add
xchg
adc
lods
xlat
aam
pop
lcall
push
in
mov
xchg
scas
test
leave
test
enter
xchg
add
add
jg
cmp
mov
push
in
mov
insb
jno
add
mov
push
rcrb
mov
aaa
mov
jp
stos
push
addl
sub
lods
pusha
aaa
pop
aas
add
add
pop
push
test
js
outsb
or
cmp
or
cwtl
inc
ja
pop
cmp
and
mov
rcrb
test
int3
test
xorl
jp
lahf
and
push
icebp
pop
mov
decl
out
lret
dec
xchg
push
mov
out
mov
aam
dec
cmp
fdiv
xor
pop
xchg
pop
scas
arpl
xchg
cmc
mov
ljmp
dec
push
push
icebp
int3
xchg
sub
shlb
imul
imul
jecxz
push
push
push
movsl
cmpsb
pop
out
lret
insl
xchg
sti
cmp
cli
jmp
test
mov
lock
aaa
adc
cmp
inc
and
xchg
cs
dec
cmc
cmp
loope
pop
pusha
subl
lods
xchg
xor
inc
mov
lock
add
xor
or
pushf
addb
push
test
lret
pop
outsl
push
cmp
bound
and
cwtl
mov
stos
push
push
adc
adc
in
shlb
cli
aas
lret
subl
mov
sbb
adcl
xchg
jb
mov
pop
inc
cmpl
inc
movsb
and
repnz
in
or
xor
test
fidivrs
or
cmp
xor
inc
cmc
mov
lret
pop
sub
sub
mov
cmc
xchg
pop
fcmovnb
cmp
pop
mov
fwait
jb
and
aam
call
cmc
mov
hlt
cmp
jnp
inc
pop
dec
xchg
jmp
and
sub
mov
rolb
imul
lods
xchg
and
aam
xchg
lret
push
jbe
test
xor
ret
xchg
lods
adcl
shl
imul
add
pop
mov
sub
cwtl
pop
mov
stc
xchg
xor
and
push
xlat
das
rcl
dec
nop
lret
imul
mov
cld
adcb
jo
adc
ret
inc
ffree
js
in
roll
jl
mov
xchg
in
dec
mov
push
sahf
mov
addl
add
out
nop
and
pop
or
xchg
mov
test
gs
call
add
sti
xchg
jecxz
add
decl
jg
inc
inc
addr16
in
xlat
or
inc
and
mov
ret
imul
xor
adc
leave
adc
popf
mov
shlb
mov
ret
adc
mov
xchg
cmpsb
sbb
hlt
lret
mov
push
mov
sbb
movsl
in
xchg
lret
pushf
movsl
imul
stc
pusha
sti
mov
cmc
aam
je
scas
cmc
mov
enter
loope
cmp
add
popa
mov
adc
inc
add
sub
inc
push
jl
jno
pop
adc
fildll
pop
std
sbb
push
ja
out
cs
lock
lcall
or
aaa
hlt
jmp
pop
mov
mov
cmpsl
dec
movsl
ror
rolb
push
xchg
push
cmpsl
cwtl
mov
mov
jne
nop
dec
inc
adc
xchg
gs
imul
cmc
pop
mov
push
lods
shufps
adc
stos
scas
cmp
xchg
enter
rcl
aad
cmc
or
in
fdivrs
jmp
int
sbb
jnp
scas
pop
arpl
or
pop
mov
aaa
loop
sub
xlat
push
cmp
insb
insl
leave
int
or
insb
cmp
fmull
xchg
add
mov
dec
orl
jle
jecxz
into
or
add
add
cmc
dec
clc
outsb
mov
int3
adc
lahf
or
mov
sbb
jne
jmp
stos
and
fbstp
or
lea
ja
xchg
xchg
les
stc
push
fldt
mov
les
xchg
imul
xorb
addb
outsb
pop
pushf
sub
jae
jae
ja
test
test
mov
les
fcmovbe
cmp
push
mov
mul
mov
xchg
dec
and
inc
test
sub
mov
inc
faddp
fldl
sub
dec
lahf
inc
xchg
push
sbb
lret
sub
xchg
adc
jmp
sub
in
sti
jge
sbb
bound
mov
mov
xor
adc
and
cmc
in
mov
mov
mov
push
xchg
and
push
adc
rolb
add
cmpsb
sub
test
cmpsb
int3
loop
pop
test
mov
and
enter
hlt
mov
mov
cmc
xchg
cs
push
cli
rorl
mov
mov
inc
les
jg
or
icebp
test
xchg
xor
outsb
sub
push
mov
xchg
and
and
sti
cmp
and
push
mov
lcall
sahf
shrb
jge
cmc
xchg
mov
jbe
lahf
int
imul
adc
push
insl
imul
lahf
das
lds
aaa
adc
aam
outsl
mov
mov
jae
mov
fidivl
jp
pop
imulb
fnstenv
sar
jo
negb
imul
mov
xor
fists
shlb
mov
test
and
push
or
mov
rolb
popa
lock
mov
push
mov
rol
std
or
and
hlt
test
jl
dec
pop
repz
add
int
sbbl
inc
xchg
aad
mov
hlt
xchg
and
add
fisubrs
mov
push
push
das
push
add
xchg
adc
loop
shll
insl
jmp
mov
mov
fdivp
mov
retw
les
lret
hlt
bound
rcl
xchg
dec
xlat
cld
icebp
imul
pop
xchg
mov
fadds
repnz
xlat
add
test
or
mov
enter
sub
pop
nop
rcl
les
test
ljmp
enter
in
imul
sbb
hlt
dec
mov
fists
pop
xchg
repnz
sub
and
rcll
das
in
das
push
es
pop
mov
ja
jns
cmp
jge
mov
repz
or
add
clc
test
jle
mov
and
lret
test
gs
cmc
nop
test
mov
test
out
mov
in
dec
aam
xor
mov
in
call
test
and
push
movsl
int3
sub
mov
jno
dec
rclb
adc
subb
cmc
xchg
std
jns
or
rcl
imul
enter
jp
jmp
shl
shrb
push
movsl
jae
pop
cmpsb
sub
xchg
aam
out
imul
mov
cmc
mov
dec
into
imul
aad
push
loopne
lahf
jle
sbb
iret
sar
jle
movsl
mov
pop
adc
xchg
test
or
outsb
lea
cwtl
jge
add
sub
cmp
clc
sub
push
fstpl
icebp
add
inc
jle
pop
or
adc
fsts
sub
int3
or
cmc
mov
faddl
mov
lods
cmpsl
fdiv
adc
fcoms
scas
js
shll
std
int3
lret
xchg
stc
add
cwtl
inc
test
add
mov
std
or
fsubrl
in
or
test
and
rcrl
in
mov
js
dec
pop
or
fsubrl
sti
shl
inc
aam
ret
jns
test
fimull
lds
out
mov
test
xchg
mov
imul
int
xor
aam
shll
dec
mov
icebp
xlat
repz
xchg
jbe
inc
das
mov
add
insb
cmp
inc
aad
adc
or
or
rclb
xor
repz
jge
inc
lds
movl
rcll
ret
jle
loop
aam
jp
fdivp
gs
imul
add
cmp
cmpsl
in
repnz
int
xchg
pop
and
xchg
ja
add
js
cmp
loopne
xlat
das
xor
push
in
shrl
nop
mov
push
jecxz
hlt
mov
xchg
clc
cmpsl
mov
cmpsb
cmp
aaa
bound
rcr
bound
push
dec
or
dec
pop
out
add
push
cmp
sbb
mov
jg
mov
aad
es
pop
les
jnp
mov
in
add
ljmp
inc
lock
push
mov
cmp
imul
mov
pop
or
and
sub
subb
sbbb
cmp
dec
xor
jl
int3
nop
hlt
addb
add
push
xlat
push
mov
hlt
mov
mov
ret
mov
mov
pop
arpl
cwtl
mov
xor
mov
pop
jmp
stos
dec
nop
inc
stos
add
mov
mov
fnstcw
add
loopne
sbb
repnz
xchg
enter
mov
jae
mov
or
movsl
in
add
lods
movsl
or
rolb
push
addl
jo
outsb
push
dec
mov
aam
or
imul
scas
test
mov
push
inc
mov
mov
jl
out
push
loope
mov
fcoml
frstor
add
rorb
movsb
dec
mov
inc
xor
adc
dec
andl
xchg
loop
test
into
or
loope
mov
iret
push
cli
inc
xor
adcl
mov
jmp
les
xor
pushf
imul
outsb
fistpll
subl
les
push
rorb
in
test
inc
dec
inc
push
add
cmp
xor
outsl
hlt
repnz
sbb
cmp
add
dec
xlat
repnz
jg
psubusw
push
dec
mov
bound
or
cltd
mov
daa
movsb
pusha
dec
ret
flds
inc
lret
mov
sbb
std
lods
out
lea
jbe
bound
mov
cs
push
clc
push
adc
sarb
nop
decb
fucomip
cmp
rorb
fs
cmpsb
or
inc
xchg
test
addl
shll
jno
xor
xchg
add
leave
loope
inc
cld
xchg
inc
inc
fmull
or
jo
pop
xchg
sbb
mov
sbb
push
fs
aad
popf
mov
fstpl
jp
push
sub
jl
movsb
dec
mov
mov
mov
sub
add
or
mov
xchg
jmp
push
fiadds
sub
add
jl
popa
push
add
lret
scas
xchg
mov
lock
sbb
mov
cmc
sbb
cwtl
sti
ret
hlt
pop
mov
mov
in
mov
adc
fidivrl
lock
mov
dec
or
add
push
cmpsb
mov
xchg
dec
xlat
mov
and
sbb
test
call
xor
les
mov
iret
orl
stos
movsb
pop
out
sbb
movsb
mov
leave
jmp
sub
cmovnp
or
cmp
cld
iret
lock
mov
mov
and
mov
adc
xchg
mov
add
jg
inc
xchg
inc
push
cmpb
das
sbb
jmp
inc
test
or
lock
pop
lods
xor
or
hlt
dec
sub
push
sbb
mov
loop
or
adc
jge
nop
test
pmulhuw
mov
mov
cmpsb
mov
cli
push
or
xor
ror
jbe
push
stc
rorl
and
rcll
ja
js
in
or
inc
mov
mov
fld1
jno
dec
lahf
push
repnz
mov
jp
add
mov
cmc
fsubp
outsb
and
jle
push
test
adc
cld
icebp
xchg
popf
mov
in
cld
lret
xchg
in
xor
mov
push
add
jmp
xchg
std
addr16
mov
mov
or
iret
mov
pop
jo
xchg
xlat
test
dec
jbe
imul
jne
mov
nop
inc
cwtl
stos
lcall
fdivr
adc
dec
test
or
hlt
jnp
sub
sub
mov
push
mov
or
mov
cmpb
adc
push
lret
aad
xchg
lods
or
in
mov
hlt
cmc
repz
leave
jge
and
mov
or
adc
adc
pop
mov
shlb
adc
sub
sbb
pop
enter
pop
sbb
gs
leave
push
adc
push
lods
xchg
inc
das
push
push
jle
out
or
push
test
nop
test
cmp
mov
push
jmp
js
or
push
mov
ret
or
andl
adc
sub
jg
les
mov
mov
addl
xor
stc
rclb
dec
pusha
imul
add
movl
cmp
movsb
psubb
mov
iret
in
lock
adc
jmp
ret
test
jbe
aas
outsb
mov
dec
push
or
sbb
test
jg
mov
sub
data16
int3
andb
pop
pop
adc
sbb
hlt
rolb
push
int
jns
stos
pusha
fisttps
mov
ljmp
mov
xor
or
sbb
mov
jae
fisubl
addl
and
mov
inc
adc
outsl
mov
jo
lock
lea
popf
test
pop
inc
xchg
pop
inc
inc
sub
jl
adc
sbb
mov
loopne
shll
or
xorb
adcl
sti
pop
adc
dec
adc
cmp
subb
add
int3
lods
push
int
mov
jg
inc
lds
cltd
inc
loop
sbbb
test
inc
jo
cld
call
faddl
mov
daa
fstpl
mov
mov
sub
lret
push
js
xchg
inc
lods
adcl
test
xor
fmuls
test
mulb
mov
movl
push
imul
mov
jno
mov
jae
enter
mov
aam
mov
stos
incl
movb
les
or
push
mov
xchg
stos
pop
enter
mov
add
idivl
add
daa
ljmp
xchg
jge
pop
mov
call
js
add
or
jns
mov
rcl
dec
sub
std
push
fidivrl
jns
andl
add
mov
int3
xlat
cmp
sub
sbb
dec
mov
outsl
jbe
leave
or
fs
push
mov
sbb
in
inc
xchg
adc
std
adc
cmp
daa
add
sbb
sahf
cmp
jne
push
add
push
add
adc
scas
mov
and
jb
mov
sub
add
jle
shlb
push
sbb
je
lahf
mov
mov
les
jl
ret
mov
fisttps
orl
pop
push
xor
cwtl
xchg
out
cmc
xchg
mov
imul
imul
into
cmp
add
mov
int3
pop
jbe
add
jp
adc
xchg
inc
test
bound
shlb
inc
movsl
jg
mov
cwtl
cwtl
stos
dec
adc
pop
dec
push
sbb
adc
pushf
jae
nop
and
test
pop
popf
mov
push
xor
cwtl
add
mov
mov
aaa
out
enter
or
cmp
inc
pop
test
ja
xor
arpl
lcall
inc
add
xchg
push
xchg
and
call
shl
pushf
in
aas
add
hlt
out
add
sbb
inc
hlt
jge
dec
movsb
sbb
adc
lret
aas
add
mov
xchg
mov
mov
mov
shlb
out
insl
jb
adcb
fsubrp
adc
xor
cmc
jno
mov
jg
in
xchg
cmc
xchg
fildll
pop
ds
adc
sbb
and
fildl
push
ja
scas
xor
pop
cltd
jl
cli
imul
cld
sbb
sbb
aad
movsb
into
push
jle
push
call
add
shr
jle
clc
inc
inc
mov
add
rclb
cld
xchg
enter
fistps
adc
mov
adc
and
and
mov
sti
fwait
sbb
data16
inc
clc
lods
rcl
mov
movsl
mov
andb
js
mov
cmp
jae
sbb
cld
fidivl
mov
mov
mov
lret
xor
lret
stos
pop
ja
fs
pushf
inc
cmp
pop
nop
jg
sti
aad
int
enter
int3
dec
rolb
sub
shlb
and
mov
les
insb
mov
stos
inc
and
inc
incl
push
pop
bound
mov
test
cmp
loope
rcl
push
xor
pop
push
dec
add
mov
push
fcmovne
test
rcrl
mov
and
into
lods
hlt
xchg
add
rorb
push
aad
pop
scas
jae
adc
rorb
lods
loopne
mov
aas
sbb
mov
cmpsl
sar
sbb
fmuls
cld
adc
test
ja
aad
push
jmp
cmpsl
fisubrl
mov
shl
out
push
and
cmp
jl
mov
inc
cmp
int
mov
movsb
nop
mov
std
inc
lret
aad
repnz
cwtl
outsl
xchg
lock
push
movsl
mov
inc
sbb
mov
fcomps
js
sub
aam
roll
xorb
or
mov
nop
roll
sub
into
jbe
shrb
mov
testl
cld
daa
lcall
sarb
out
ficoms
test
jne
or
jge
mov
fsubl
aad
mov
lock
mov
test
andl
dec
pop
push
js
mov
or
pop
jg
lahf
insl
jge
les
in
ljmp
jge
test
cltd
push
lahf
shlb
mov
scas
lret
xchg
inc
dec
lahf
adc
das
mov
fsub
popa
scas
imul
lret
push
adc
filds
lea
inc
jge
jae
xchg
hlt
mov
test
iret
mov
xchg
add
test
cmp
nop
std
lret
or
add
scas
xor
xlat
cwtl
mov
mov
jle
movsb
lea
and
mov
cmc
mov
dec
jo
shlb
fcomp
std
mov
lret
imul
sbb
cltd
sbb
mov
xor
mov
mov
test
ret
add
push
pop
lret
imul
mov
aad
sub
fcomip
pop
push
fmuls
xchg
jge
test
scas
jl
cld
sub
repz
imul
push
dec
mov
iret
xor
jle
ljmp
xor
rcll
out
pop
lret
aas
pop
xlat
lods
enter
dec
xlat
lahf
in
xchg
push
inc
jae
movsb
out
fcmovne
and
and
mov
aad
movsl
not
inc
rcl
inc
es
aas
mov
dec
pop
or
fistpl
bound
int
vpxor
sbb
mov
in
mov
into
stos
jge
pop
rcr
push
cltd
ja
mov
rcl
clc
fwait
jbe
test
dec
push
add
jl
icebp
xchg
ljmp
rolb
aaa
test
mov
jle
xor
shll
fimull
bound
cmp
jns
sbb
imul
ja
or
mov
rcl
adc
or
jns
cmc
rcrb
call
loope
arpl
jge
int
mov
scas
jl
test
jle
clc
jle
jg
cmp
andl
jp
adc
mov
arpl
fwait
iret
sahf
xor
jns
ljmp
pop
lahf
in
enter
pop
sub
mov
aam
mov
movsb
aam
je
dec
js
push
mov
xor
or
nop
xlat
test
rolb
das
bound
rcrb
test
shr
adc
loopne
out
push
fisubs
jg
inc
and
fs
test
mov
mov
test
mov
jecxz
mov
inc
push
daa
cmp
ja
imul
insb
jg
mov
adc
dec
ret
cmp
pop
xchg
iret
cmp
scas
mov
lods
and
dec
cmpsl
imulb
push
pop
push
inc
ja
fadds
cwtl
mov
or
jo
xchg
cmp
int3
arpl
pop
push
shl
stc
loope
add
mov
lods
pop
test
push
imul
jg
sbb
lahf
xor
jmp
sub
and
mov
push
cmpsl
adc
rclb
fisttps
hlt
lcall
mov
test
fidivrl
imul
enter
das
inc
jne
stos
pop
sbb
jo
xor
sub
hlt
adc
xchg
lret
jb
lds
jne
cwtl
dec
dec
aas
cwtl
mov
sub
push
cmc
cmc
repnz
test
adc
idivl
movsl
daa
ds
fstpl
pop
mov
movsl
add
icebp
sub
sti
cwtl
mov
mul
pushf
inc
lahf
mov
inc
imul
xor
stos
push
negl
mov
negb
xchg
outsb
mov
jle
xor
push
jb
mov
inc
lret
sub
push
aam
adc
scas
jp
loope
sbb
jle
rcl
call
sbb
enter
lds
push
int3
cmp
mov
cld
jae
xor
and
call
inc
push
jns
sub
pusha
loop
mov
mov
dec
push
sbb
scas
jnp
sarb
pop
mov
pop
cltd
pop
pop
leave
loop
stos
mov
cmovbe
std
cmp
add
iret
inc
nop
nop
in
mov
call
mov
cli
adc
sub
sbb
and
mov
cmpsb
mov
sub
mov
jle
push
jo
shufps
adc
enter
or
int3
cmp
mov
les
push
pop
pop
rcl
shlb
mov
mov
push
in
cs
sahf
fadds
aam
les
nop
mov
sahf
or
out
into
ret
push
xlat
lcall
js
loop
adcl
pop
test
lods
or
incl
test
call
pop
sbb
xchg
aam
xchg
sub
push
js
adc
loopne
push
scas
sub
imul
xor
mov
data16
lret
mov
dec
jnp
fiadds
mov
mov
call
sbb
shll
das
lahf
testb
mov
shrb
fists
lret
lea
jg
sarl
leave
adc
jmp
push
add
xchg
rcrl
call
fisttps
mov
or
pop
mov
scas
dec
aad
cmpsb
mov
dec
mov
adc
pop
mov
movsl
or
pushf
push
cs
pop
out
sbb
mov
mov
mov
mov
shrb
mov
int3
or
out
or
sub
ficompl
mov
push
or
outsl
adc
xor
and
out
loopne
in
scas
push
pop
and
mov
outsl
adc
out
xor
mov
aad
add
jmp
jo
pop
sbbl
movsb
sahf
lods
imul
adc
shlb
ret
pop
jl
iret
loop
ja
icebp
cwtl
sahf
mov
jle
rolb
push
nop
lods
push
and
cmpsl
pop
fs
xchg
and
aam
aad
pop
jl
icebp
lods
xchg
xor
ljmp
mov
int3
jg
cld
shrl
mov
andl
or
shr
cmp
rcrl
or
xchg
movsl
in
sbb
cmpsb
jecxz
push
in
call
fisubrs
xlat
push
mov
rclb
xchg
push
mov
and
jnp
add
xchg
call
mov
push
or
add
push
hlt
in
nop
ret
jne
pop
faddp
in
out
mov
into
es
mov
ja
mov
inc
ss
mov
mov
xor
mov
sub
in
es
sti
adc
cmp
in
hlt
repnz
adc
outsb
aas
sub
sahf
nop
xor
jmp
mov
xchg
xchg
push
dec
mov
inc
adc
pushf
mov
mov
push
dec
xchg
xor
xor
aad
mov
inc
rcll
out
imul
lods
int3
adc
in
fidivrl
jl
in
xor
cmp
jns
shl
and
frstor
and
dec
and
in
iret
xor
mov
inc
ljmp
loop
sub
nop
lret
cltd
xchg
and
aaa
mov
je
ja
lahf
adc
test
mov
push
dec
adc
xchg
push
fs
inc
adc
pop
mov
test
xchg
cmpsl
imul
mov
mov
pop
inc
shrb
jns
mov
lods
jg
repnz
sub
lods
jo
sbb
xchg
je
aaa
mov
in
jae
jg
cli
scas
xchg
lods
add
mov
int3
or
not
jp
cmpsl
ljmp
cmc
mov
mov
mov
js
adc
xor
in
dec
lods
jno
jae
mov
rcl
or
nop
int3
mov
xchg
push
mov
js
stos
test
xorl
insb
hlt
in
mov
cmp
jns
jno
mov
adc
push
test
in
mov
hlt
enter
movsb
popa
and
push
jge
push
pop
inc
push
inc
loope
loop
inc
push
ds
cld
xlat
inc
shr
and
add
mov
lea
mov
fistps
rcrl
xlat
shll
lds
xchg
cmpsb
mov
into
aad
push
mov
mov
rcl
xor
dec
daa
xorl
addr16
imul
std
mov
outsb
dec
insb
imul
push
or
scas
add
ljmp
shll
mov
jle
call
scas
cli
push
aas
ret
xor
push
push
jo
xchg
loop
inc
in
fisttpl
movsl
ljmp
mov
shlb
es
insl
int
mov
test
call
xchg
push
mov
mov
push
nop
xlat
xchg
jae
roll
mov
adcl
hlt
mov
mov
xor
ds
mov
inc
out
lret
leave
xchg
and
mov
inc
jp
rcl
inc
into
mov
scas
popf
into
jbe
mov
xchg
fwait
mov
inc
iret
xchg
cmpsl
test
xchg
push
aad
xchg
rcr
cmp
pop
inc
andl
inc
or
rorb
sub
nop
outsb
and
ret
fisubrl
nop
adc
sub
pop
mov
cs
or
mov
cs
adc
dec
xchg
adc
or
xchg
jmp
subl
or
fdivrs
add
lahf
daa
mov
movsl
xchg
jg
jg
fildll
jp
daa
sahf
nop
fs
or
push
jne
mov
and
push
fdivl
jo
sub
bound
sahf
popa
jbe
or
xor
fmuls
or
das
pop
orl
nop
add
cmc
ja
leave
int
mov
and
int
ret
in
jg
pop
scas
xor
pop
test
mov
add
sbbb
enter
les
jns
ret
stos
roll
cmc
scas
into
leave
dec
test
cmp
shlb
or
jb
mov
dec
int3
mov
fucomip
mov
mov
mov
je
out
mov
sbb
mov
das
ja
sbb
pusha
in
scas
mov
pop
mov
mov
pushf
fs
cs
lock
leave
xchg
mov
sub
jo
or
push
jo
or
ret
sub
jg
mov
pop
mov
cmp
cmp
add
or
nop
cmp
jno
sub
cmp
lods
lcall
mov
or
les
movsb
push
mov
push
pop
lea
cmpsb
jl
mov
adc
and
stc
or
mov
pop
mov
lea
pushaw
pop
aad
and
call
sahf
filds
xchg
sub
push
into
lcall
iret
inc
adc
popa
fiadds
enter
clc
lods
inc
ljmp
add
je
lcall
mov
mov
int
sbb
cmc
add
imul
dec
mov
inc
cmpb
lcall
sub
cld
inc
out
dec
cwtl
ljmp
xchg
xor
adc
pop
hlt
aad
ficomps
repz
loopne
mov
into
push
add
push
movsl
js
pop
popa
cmp
and
jae
mov
pop
push
mov
mov
cmpl
pop
mov
mov
sub
xchg
repnz
lret
xchg
std
pop
xchg
imul
xchg
and
orl
leave
xchg
sti
mov
fstps
js
lret
xchg
pop
js
addl
sub
cmp
xchg
lods
jp
jge
nop
and
push
ss
and
orb
hlt
sub
loope
lahf
inc
pushf
ret
sub
jae
loope
insb
mov
jne
pusha
dec
inc
cmc
add
xchg
mov
dec
iret
pop
data16
xchg
xor
lret
sub
jae
rcll
add
jge
movsb
lea
xchg
xlat
call
hlt
lcall
adc
cmpsl
fdivs
mov
loopne
lea
rclb
arpl
push
js
in
mov
addr16
pushl
jl
cmpsb
hlt
out
repnz
xchg
or
mov
rolb
inc
and
pop
sub
mov
jecxz
aad
in
lods
pop
cmpsb
lret
xchg
inc
xchg
ret
dec
and
xor
adc
xchg
cmp
je
sbb
xchg
es
and
cmp
or
mov
jg
jo
jp
xor
aam
popa
mov
sbb
push
lods
jl
lods
movsb
loop
or
jns
mov
aam
les
adc
ret
test
stc
inc
out
stc
divb
push
sarl
sarb
test
popa
cmp
xchg
in
mov
inc
and
pushf
loopne
push
xchg
pop
push
test
fxch
cmpsl
jle
dec
push
adc
xor
les
or
pop
xlat
inc
inc
gs
scas
jo
enter
out
mov
sbb
dec
xorl
push
imul
outsb
adc
aad
mov
dec
pop
aad
movsl
lea
aam
ret
inc
shrb
jle
test
outsl
mov
ss
sbb
mov
jb
xchg
popl
repnz
fimuls
jg
push
mov
dec
jle
rolb
fstps
ret
add
xchg
push
jge
dec
call
lret
rolb
fisttps
ss
nop
popf
jecxz
incl
cwtl
lods
dec
mov
xchg
mov
rcll
fcomp
pop
fwait
pop
dec
jle
jp
out
jp
inc
fstpl
sahf
nop
adc
push
out
mov
cltd
imul
xchg
loope
imul
cmp
je
fdivl
push
add
sub
mov
out
sarl
test
enter
jge
xchg
pop
cwtl
mov
pop
shlb
inc
inc
lock
jge
arpl
mov
shlb
aas
sbb
mov
hlt
loop
mov
push
shlb
mov
jg
stos
xchg
push
mov
xchg
xchg
mov
pushf
enter
pop
loope
shlb
pop
sbb
push
cmp
mov
stos
dec
ljmp
pop
adc
lret
jne
fwait
test
push
xchg
push
xor
cmpsb
ja
scas
pop
jae
push
sbb
or
jae
push
das
test
iret
pushf
sbb
jae
ja
lock
fnstcw
mov
mov
dec
cld
pop
mov
loop
push
scas
xchg
jle
add
shll
pushf
xchg
pushf
gs
jg
xchg
xlat
icebp
pop
sub
lcall
inc
adc
mov
out
leave
lds
imul
mov
cmp
jae
sarb
push
test
sub
sahf
daa
ret
fldcw
mov
or
mov
aam
ss
xor
jg
mov
sbb
jbe
enter
jb
xchg
xchg
int3
movl
test
mov
clc
insb
mov
add
push
push
mov
mov
je
cmpsl
cmc
mov
jno
jge
lret
mov
pop
dec
nop
rolb
or
aaa
adc
jnp
mov
inc
mov
mov
jns
test
enter
ss
enter
jae
std
sbb
dec
sahf
in
xchg
xchg
fyl2xp1
add
fsts
cmc
push
sub
test
sbb
push
ja
and
fisubl
stos
jl
mov
mov
xor
mov
or
xor
rcll
sub
add
or
shl
cmp
movsb
inc
sbb
lea
pop
jp
fprem1
add
popl
cs
sti
lods
aad
pop
cmp
mov
popl
mov
mov
sti
pop
aas
lods
into
jmp
ficoml
jne
pop
ret
test
insl
xchg
stc
mov
bound
movsl
mov
iret
jbe
mov
idivb
xchg
mov
lret
pushf
popa
aas
stos
or
mov
cmp
adc
fmuls
sub
sub
cli
jbe
dec
outsb
stc
jle
lods
inc
mov
mov
xor
push
dec
mov
inc
inc
ljmp
or
jae
pop
add
fdivl
dec
adc
hlt
cltd
stos
stos
stos
test
adc
push
movsl
and
sbb
or
inc
xchg
push
jne
inc
sbb
push
mov
pop
mov
std
ja
cmpsb
or
lock
xchg
lods
daa
and
hlt
jge
lods
mov
popa
sti
repnz
cwtl
xchg
fists
fimuls
add
in
cld
push
cmp
cmp
mov
cmc
hlt
fadd
adc
pop
jmp
mov
xor
scas
es
mov
or
fstl
ltr
mov
test
dec
or
imul
pusha
nop
out
data16
icebp
repnz
dec
cmc
jg
and
std
push
sub
ds
inc
imul
or
rclb
cmp
adc
cmpsl
adc
std
cltd
movsl
stos
dec
push
or
sti
push
ss
icebp
dec
push
sub
inc
cmp
movsl
push
inc
test
or
add
cmpsb
addl
dec
out
or
cltd
pushf
test
mov
jnp
jle
leave
cmc
fs
or
jg
fisubrs
pop
push
int3
sbb
lock
cmp
xchg
nop
loop
lcall
jmp
cwtl
nop
call
mov
movb
mov
pushw
jns
jae
ficoml
sub
or
xchg
inc
clc
jg
movsl
sbb
lret
push
inc
popf
js
hlt
push
mov
inc
cltd
add
add
lods
leave
add
rcrl
sbb
xchg
add
fcomp
gs
inc
sbb
mov
mov
les
lret
dec
js
enter
mov
into
dec
push
add
xchg
jp
xor
int3
fisttpll
test
nop
push
jbe
cmc
or
iret
ret
addr16
in
mov
leave
inc
xchg
mov
jb
mov
mov
enter
jmp
pop
mov
in
mov
lock
push
mov
orl
repz
rcrl
dec
leave
leave
adc
jecxz
cmp
dec
xchg
sub
imul
pushf
xchg
add
mov
mov
fsubp
int3
xchg
ss
test
xchg
movsb
pop
clc
sti
jge
xchg
mov
popl
jb
lahf
inc
push
xchg
idiv
sub
test
orl
and
push
add
outsl
jb
mov
adc
daa
mov
insl
mov
or
dec
cmp
pushf
int
stos
dec
push
mov
xchg
rcl
xor
aad
out
cmp
test
sub
sub
movsl
aad
pusha
mov
test
cmpsl
xorl
mov
cmc
add
fdivrl
loopne
cmp
ss
add
fs
inc
xchg
or
into
test
mov
push
inc
sub
cwtl
orb
iret
pop
jl
xor
mov
sub
fstps
sub
xchg
aam
lret
jnp
adc
pop
adcb
sbb
adc
adc
sub
and
xor
out
mov
add
xchg
or
sub
xchg
push
fistpl
call
fucomip
enter
push
ret
sub
or
loopne
les
lret
xchg
in
loopne
inc
xchg
jno
adc
lods
ret
fists
push
rcr
je
in
xchg
pop
aas
pop
stos
mov
xchg
and
sti
dec
pusha
fisubrl
scas
inc
int
aad
insb
adc
mov
lods
xorb
ss
in
xchg
push
dec
xchg
enter
rolb
cmp
xlat
je
hlt
test
cmp
pop
lret
inc
jne
jae
xor
inc
dec
pusha
frstor
pop
add
or
push
roll
xchg
dec
lahf
adc
jge
cmp
pushfw
cmc
in
enter
rol
adc
les
mov
aad
cltd
fistl
mov
mov
or
xchg
in
mov
in
test
test
jae
cwtl
or
mov
frndint
loopne
pusha
xchg
test
mov
xlat
fistl
jmp
push
fimuls
ret
xor
fnsave
sbb
dec
enter
aaa
pop
lret
adc
aam
xchg
push
outsb
roll
nop
mov
lcall
dec
xchg
imul
add
xchg
mov
out
fmull
dec
nop
xchg
add
sbb
inc
sbb
test
cmp
push
mov
pop
lret
or
push
mov
into
mov
mov
cmp
popa
ret
int
jl
pushf
rcl
repnz
inc
push
add
je
pop
jo
pushf
rcl
push
mov
nop
push
xor
dec
cmp
sub
cmpsl
ja
pop
mov
movsb
inc
mov
aam
fs
push
pop
add
rclb
lahf
aad
imul
pop
lods
repz
adc
rcll
push
imul
stos
nop
mov
push
or
les
mov
js
and
repz
push
dec
add
sbb
push
mov
jne
aam
call
push
adc
jle
cld
test
stos
jmp
stos
sbb
add
sbbl
push
dec
insb
test
or
pop
xchg
ret
mov
stc
mov
and
rclb
jno
roll
shll
mov
mov
push
pushf
movsb
pop
rorl
popf
mov
addr16
xchg
xchg
shlb
js
and
inc
mov
loope
xchg
jle
dec
cmp
test
fsubrl
subl
mov
stos
jmp
out
inc
or
mov
add
fwait
inc
frstor
into
imul
pushf
push
lcall
stos
mov
ja
enter
inc
mov
mov
insb
out
xchg
stos
mov
pop
scas
jl
pop
xor
pop
jmp
or
arpl
mov
clc
mov
lcall
cmc
cmc
test
notb
lahf
ljmp
adc
dec
add
icebp
in
push
test
push
xor
mov
inc
mov
aam
lret
in
loopne
into
sub
daa
cmc
orl
imul
movsl
cmp
pushf
xor
mov
test
lahf
mov
out
inc
adc
sub
rolb
cmc
nop
fcomip
adc
add
push
fs
mov
xlat
fistl
xor
add
mov
leave
mov
dec
inc
sub
pusha
jp
jns
test
xchg
mov
loop
inc
inc
mov
or
fcmove
inc
xor
addl
push
jbe
jbe
fcoml
xchg
mov
jno
mov
jns
xchg
xchg
test
sub
inc
loopne
push
fildll
mov
sub
fxch
hlt
mov
and
cmp
xchg
adc
push
popf
inc
ljmp
stos
jg
push
mov
imul
push
lods
and
sub
andb
test
pop
adc
lret
lods
or
jnp
add
and
lock
or
ds
dec
out
add
cmc
xchg
and
test
push
dec
fiadds
pop
hlt
mov
push
lds
cmp
subl
or
or
stos
enter
mov
pop
lahf
inc
adc
ss
pop
in
sub
movsl
into
in
cwtl
cmp
push
or
xor
cmp
mov
add
jne
lods
inc
adc
idivb
ffree
push
data16
push
xor
pop
rcl
adc
jl
dec
aad
xchg
and
orl
daa
xchg
cwtl
shrl
test
sbbl
mov
push
jbe
cmc
mov
fstl
and
loop
adcb
fsts
mov
xor
adc
faddp
jns
mov
imul
jl
test
xchg
and
inc
lds
mov
sub
push
mov
and
add
cmc
xchg
add
cli
mov
or
xchg
lock
test
sbbb
fbstp
pop
call
fidivrs
das
cltd
mov
or
mov
or
mov
imul
popa
jo
jns
hlt
in
dec
xor
mov
fsub
dec
pop
adc
shrl
xlat
adc
and
js
add
add
jbe
mov
popl
and
mov
nop
jo
cmp
xor
enter
mov
xor
and
jmp
repz
adc
stos
movsl
push
mov
clc
mov
mov
in
mov
mov
inc
stos
ret
jle
mov
out
je
xor
stos
dec
and
sarb
fwait
xlat
adc
int
push
nop
adc
lds
in
mov
repnz
jp
inc
add
popl
xchg
int
imul
adc
mov
xor
push
xchg
add
les
bound
enter
xchg
cmpsl
push
push
cmpsl
test
push
mov
mov
push
xchg
mov
imul
adc
lods
jbe
jo
ds
enter
or
ret
add
test
push
mov
adc
popf
add
andl
add
ja
dec
xchg
add
icebp
adc
and
pop
int
outsb
fldl
dec
inc
xlat
cmc
mov
test
or
int3
loopne
mov
lods
stos
inc
cmpb
shl
nop
fisttps
les
sbb
add
inc
lds
aaa
push
mov
lock
inc
lahf
or
stos
ss
mov
repz
mov
mov
or
xor
inc
push
add
incb
ja
mov
lea
loope
jecxz
add
cld
push
add
jo
fstpl
cmc
dec
stos
inc
xlat
jnp
and
and
roll
adc
cmc
scas
pop
mov
jp
hlt
sbb
mov
add
mov
sarb
add
mov
imul
enter
insb
fs
fcmovnbe
hlt
mov
loope
ret
jmp
jnp
add
or
add
mov
and
mov
mov
pop
les
xlat
cmc
andb
inc
push
in
les
ljmp
cmp
call
les
lods
and
adc
lahf
fisubs
insb
add
in
aad
and
add
push
sub
std
subl
sub
cli
movsl
cmc
scas
inc
arpl
xchg
add
shrl
leave
cli
cwtl
data16
xchg
pop
or
loopne
inc
cmp
icebp
fstpt
in
call
push
icebp
fsts
mov
cld
sbb
pop
adc
sbb
dec
sub
mov
inc
mov
dec
lcall
mov
mov
addb
repz
mov
sub
xchg
or
and
lret
inc
fcom
aad
les
hlt
aam
lea
inc
xor
nop
sub
mov
movsb
enter
or
mov
mov
mov
mov
ret
mov
or
enter
inc
sarb
aad
cmp
movsl
xchg
stos
inc
arpl
add
xor
dec
repnz
stos
mov
fimuls
pop
ret
or
mov
or
pop
stos
add
repz
test
mov
or
ret
xor
add
and
rcl
lret
jbe
fisttps
inc
ljmp
leave
add
add
push
ljmp
popa
mov
or
mov
mov
repnz
push
std
adc
mov
jle
pushf
fs
nop
adc
xor
jle,pn
ljmp
scas
notb
call
push
adc
sub
or
out
cmc
add
ljmp
pop
adc
int
sahf
mov
pop
sub
orb
lea
add
jb
adc
lock
mov
cld
incb
scas
pop
lret
mov
and
adc
xorb
cmp
insb
and
inc
push
jnp
xchg
enter
or
test
into
rol
out
movsl
pop
jb
jecxz
in
mov
jbe
xchg
in
fwait
test
test
or
mov
es
orl
test
add
lahf
popa
push
adc
or
add
sahf
push
mov
adc
int3
pop
xchg
mov
enter
cld
add
or
cs
cmp
inc
or
sti
fadds
xchg
ljmp
ds
or
pop
xlat
jmp
lea
add
mov
movsl
aaa
lcall
out
pop
das
sti
mov
or
repz
inc
lds
int3
xor
mov
add
fstp
sbb
fwait
xchg
add
fisttpll
xchg
mov
cmpb
ja
xorl
cmp
ja
xchg
mov
cmp
fsubr
lods
and
mov
ret
arpl
shll
xlat
jns
mov
nop
mov
xor
iret
mov
xlat
call
pushf
and
add
lcall
mov
lret
jp
cmp
add
xchg
mov
xchg
pop
inc
mov
or
mov
mov
dec
fstp
jne
mov
dec
sub
inc
scas
xorl
rclb
adc
sub
into
shrl
mov
cmp
shrl
pushf
add
mov
jbe
pop
cs
inc
mov
fincstp
xchg
adc
fsubl
mov
or
xchg
mov
push
popl
in
xchg
test
adc
jbe
cmp
stos
dec
movsb
movsl
cwtl
das
mov
lcall
imul
repnz
mov
rolb
pop
adc
pop
leave
sub
jno
das
clc
xchg
lods
in
popf
js
lods
pop
movsb
bnd
jp
and
inc
cwtl
ret
lods
xchg
es
ljmp
test
lret
cmc
gs
mov
adc
in
out
cmp
inc
outsl
ja
xor
cmp
xor
push
jecxz
addl
pop
xchg
xor
jnp
test
mov
inc
test
pop
xchg
adc
inc
mov
daa
and
mov
dec
repz
clc
adc
ret
and
sbbl
in
outsl
mov
mov
pop
scas
in
inc
mov
imul
add
push
add
fidivs
or
xchg
mov
movsl
and
push
and
mov
cmp
mov
dec
mov
stos
push
jp
cmp
jl
ret
ret
jne
ret
rorl
jo
inc
lea
and
cmpsl
or
pop
mov
mov
popl
add
adc
push
movsb
pop
mov
push
popa
pop
pop
out
sub
cltd
lahf
add
push
sbb
ror
xor
mov
lret
lcall
pushf
test
dec
xor
icebp
ds
call
cltd
mov
mov
les
imul
adc
frstor
sbb
dec
gs
and
mov
repz
sub
adc
mov
xchg
lock
inc
jg
mov
fisttpl
lahf
mov
dec
jg
pop
out
sub
adc
add
flds
push
dec
pop
xchg
cmpsb
sbb
jecxz
xor
clc
xchg
incb
insl
and
popf
popa
mov
loop
mov
xchg
mov
icebp
inc
test
mov
notb
and
cwtl
pop
scas
fimull
aam
ljmp
sbb
pop
inc
mov
sbb
in
repnz
cli
mov
jne
jno
mov
jnp
add
dec
push
repnz
xor
pushf
mov
xor
dec
stos
and
add
mov
inc
mov
xchg
or
fs
rcll
add
daa
cmp
lods
rorb
xchg
lods
or
or
aam
int3
jne
cmp
or
scas
sbb
in
xor
pop
or
out
add
cmc
sbb
inc
sti
in
test
fcomps
sbb
mov
mov
inc
adcb
inc
and
push
sarb
shlb
sti
dec
int3
mov
xchg
cltd
aas
jae
movsb
xchg
or
mov
add
icebp
pop
adc
xchg
mov
cltd
mov
adc
mov
or
sbb
jbe
pop
rcr
loop
or
aad
loop
test
pushf
outsb
movsb
mov
movsl
dec
imul
pop
call
jb
dec
fstps
clc
inc
hlt
push
popa
mov
mov
call
inc
xchg
dec
push
scas
arpl
add
mov
idivb
pop
outsb
aad
mov
jo
jg
in
adc
sbb
lcall
out
xor
push
add
cltd
and
shr
lahf
adc
add
adc
cmp
jno
outsb
lret
jns
repnz
pusha
jo
test
inc
fdivr
rclb
je
lock
insl
or
test
mov
lds
dec
jp
jnp
mov
pushf
lds
movsl
and
roll
pop
std
dec
pop
test
aam
imul
inc
scas
adcl
cwtl
push
sub
les
movsb
xlat
fistpl
lods
jne
insb
test
test
mov
out
or
imul
ret
dec
aad
mov
adc
pop
mov
mov
imul
stos
ficoms
stos
pusha
fstpl
add
lahf
out
and
aam
lea
fiadds
inc
or
dec
in
xchg
cmp
jmp
sbb
les
jns
pop
stos
cmpsl
xchg
fmul
rcrb
shr
mov
xchg
jl
push
int
xchg
add
sbb
add
out
insb
mov
adc
lods
push
push
ret
xchg
pop
loope
or
rorl
ja
mul
in
fdivrl
int
fdivp
jo
mov
out
adc
mov
fistpl
jl
jmp
dec
addb
call
jns
dec
jg
fistps
aad
jns
add
sub
xorb
pop
lock
mov
jp
mov
pop
aam
or
aam
sbbb
iret
shll
xchg
loopne
dec
test
jl
push
in
jmp
mov
movsb
lret
enter
in
andl
cmpsl
xchg
loop
rcrl
rorl
push
jnp
jae
nop
or
lds
data16
xchg
push
sub
dec
enter
sbb
hlt
stos
push
push
dec
nop
mov
mov
inc
rolb
outsl
mov
push
mov
mov
push
inc
imul
dec
lret
mov
xlat
mov
rcl
jl
add
xor
fsubp
xor
mov
or
xor
sbb
sub
and
push
mov
mov
mov
cmpsb
cmpb
dec
inc
xchg
or
inc
insl
pop
in
shl
in
aas
fcomi
imul
rclb
test
aaa
pop
aas
or
imul
cmpsl
pop
cmpsb
and
cmp
mov
or
jb
pop
xor
pop
int
out
mov
xor
jae
orb
enter
jo
inc
inc
push
shlb
movsb
inc
mov
and
rol
movsl
fsubrs
ret
lods
cmp
jg
lret
in
aad
add
sbb
xor
imul
mov
xchg
sub
in
mov
lods
or
inc
lret
int
xor
dec
add
xorb
std
jle
xchg
popl
vpermt2pd
or
ret
inc
inc
imul
in
mov
mov
mov
xchg
loope
ljmp
js
ljmp
mov
pushf
test
xchg
or
test
cmp
sbb
jo
dec
add
subb
lret
rorb
rorb
rcll
sub
push
push
js
cmp
lods
mov
enter
jle
test
or
loope
repz
mov
or
cmc
sbb
mov
das
mov
and
lods
cmc
lea
xchg
shl
cli
test
repz
adc
subl
or
inc
sti
lea
xchg
mov
shlb
lods
mov
xorl
cmc
lods
stos
outsb
cmc
stc
xchg
cwtl
insl
fimull
dec
mov
sub
jmp
addr16
loopne
cwtl
mov
rol
sahf
push
ret
pushf
and
mov
adc
nop
fwait
xor
and
and
cmp
repz
unpcklps
jp
push
pop
pushf
call
ror
nop
and
pop
ret
sbb
aam
repnz
jbe
scas
pop
outsl
scas
mov
into
xchg
stos
dec
leave
jno
adc
repz
movsl
add
daa
or
mov
jg
shlb
or
push
adc
fdivp
pop
mov
jbe
notl
nop
sub
scas
sbb
xchg
aam
inc
andl
int
or
jo
xchg
sti
mov
mov
hlt
lcall
pop
sbb
xchg
jo
mov
jle
rclb
adc
cmpb
pop
inc
leave
cmc
sub
lret
nop
cwtl
mov
imul
les
xor
test
lret
mov
xor
mov
push
insb
cld
pop
loop
add
or
and
rclb
xchg
push
xchg
inc
outsl
cwtl
sahf
aaa
in
adc
aaa
fs
xlat
pop
pop
or
and
push
add
fildl
inc
mov
lock
pop
inc
outsb
bound
jle
in
lahf
into
jle
dec
shrl
cmp
xchg
popf
and
stos
ljmp
jge
nop
push
sbb
xchg
ret
add
enter
mov
mulb
push
lcall
fsubr
xorl
incb
out
xchg
push
add
xchg
and
lods
fcomps
rolb
or
xlat
loope
fsubr
lea
cld
mov
mov
lods
pop
stos
pop
add
cmc
out
jmp
pushf
rolb
outsl
jmp
adc
ja
mov
mov
inc
clc
cli
nop
or
jb
xchg
mov
fdivp
nop
movsl
in
or
popf
icebp
shrl
subl
adc
adc
cmp
dec
sbb
je
jl
jno
mov
jmp
or
jle
ret
jo
sarl
inc
and
je
adc
or
lods
dec
lcall
lahf
test
arpl
mov
roll
int
cmp
mov
dec
mov
dec
jle
mov
test
mov
mov
jne
mov
xor
cwtl
rol
cwtl
mov
movsl
inc
mov
rclb
mov
or
or
cmp
dec
nop
cmp
jp
stos
testb
test
xchg
push
adc
jmp
mov
xchg
daa
negl
or
bound
or
mov
pop
ds
lret
xchg
popa
jle
sbb
mov
pop
je
dec
cmp
scas
mov
inc
cmpsb
cmp
sub
adc
out
mov
popf
jo
push
jmp
add
add
stc
subb
dec
xlat
movsl
cmpsl
jle
cmpsl
pop
sbb
add
call
pusha
dec
insl
lock
cld
pop
inc
jno
ds
fdivrp
ja
mov
lret
add
sar
ss
arpl
pop
fadd
fcom
cmc
fwait
cmp
mov
adc
sarb
sbb
ret
dec
in
aas
outsl
push
mov
call
in
les
dec
das
push
jg
or
adc
mov
add
cld
or
or
xchg
mov
xchg
insl
nop
mov
repnz
rcr
roll
push
mov
lahf
fildl
mov
ds
stc
rclb
mov
popf
add
repnz
push
xchg
pushf
hlt
lods
mov
sbb
jo
push
cmp
fbld
aam
mov
xchg
js
and
clc
jp
movsb
push
insb
rcrb
sub
jle
pop
xchg
mov
in
or
jle
pushf
mov
cli
push
jecxz
mov
aam
mov
cld
insb
nop
rol
push
rol
jbe
pop
or
aad
scas
jb
dec
cwtl
insb
scas
jmp
pop
sbb
jno
push
lcall
xchg
repz
int3
mov
jne
test
xor
roll
xchg
orl
ss
enter
mov
push
out
mov
call
xchg
cmp
dec
fmull
shll
ret
xlat
roll
push
ja
mov
jbe
and
aad
pop
pop
mov
or
push
les
dec
lods
cmp
loope
mov
xor
inc
orl
or
lcall
mov
ret
int
iret
jno
mov
xchg
sar
cmp
in
insb
inc
sub
movsl
pop
out
xor
fldenv
push
ret
pop
push
push
enter
inc
sub
mov
adc
sub
xchg
cmc
popf
push
shll
mov
fcmovnb
mov
push
imul
jp
sbb
outsl
mov
jg
cmp
cwtl
mov
lcall
ja
mov
fwait
out
cmpsb
rol
mov
movb
mov
mov
rcr
cmpsl
jo
pop
xchg
rorb
cmpsl
mov
inc
xchg
sbb
or
add
fsubr
data16
jae
push
out
inc
lret
cmpsb
andl
lahf
or
dec
test
call
jb
lret
int3
mov
andb
ror
add
roll
rolb
test
stos
or
popa
test
int3
add
nop
mov
push
test
xchg
mov
out
cwtl
faddl
adcb
mov
fs
and
push
test
pushf
xchg
lea
add
subb
ret
cmp
mov
mov
mov
dec
xor
and
mov
mov
xchg
outsl
and
jge
xchg
pushw
xchg
mov
pop
push
ret
xchg
add
xchg
mov
sbb
subb
mov
xchg
mov
jmp
imul
add
jns
bound
mov
xor
adc
mov
mov
ret
in
shlb
scas
inc
lock
in
shrb
lods
push
lods
push
stos
push
stos
push
test
shrb
cmpsl
push
cmpsb
push
movsl
push
add
pop
xchg
xchg
mov
mov
mov
pop
in
shll
push
cmp
push
sahf
push
aam
popf
push
pushf
push
fwait
push
push
cmpsb
jmp
or
sbb
test
add
inc
mov
lcall
inc
fsubrp
lods
call
cmp
adc
mov
add
les
sub
push
mov
mov
add
les
enter
stos
or
xchg
mov
push
push
test
pop
mov
inc
repnz
test
add
mov
imul
xor
mov
test
push
mov
cltd
nop
adc
push
mov
mov
fidivrl
or
dec
test
imul
rcrb
nop
clc
imul
imul
xchg
test
inc
orl
or
enter
test
sub
mov
push
push
push
xchg
nop
push
mov
push
test
sbb
jnp
nop
mov
adc
std
rclb
adc
xchg
fists
push
mov
cwtl
push
cmp
add
jmp
pop
fistl
les
sub
clc
push
inc
xorl
fmul
scas
hlt
mov
mov
adc
adcb
scas
enter
rolb
adc
sahf
sub
xchg
sub
popf
cmc
push
imul
add
xor
fildll
lock
aad
mov
cmp
aad
movsb
out
cmp
dec
test
sub
and
rcl
xchg
rol
repz
mov
mov
sahf
repnz
pop
lret
popl
sbb
int3
aas
cs
or
mov
test
push
js
sub
adc
inc
cltd
mov
sti
call
jne
push
jle
jnp
jg
inc
and
insl
push
lret
aaa
loop
xlat
pop
aaa
cmp
shll
scas
xor
aad
rcrb
ficoms
xchg
xchg
rcl
xchg
nop
lds
cmp
cmp
inc
adc
lret
fnstcw
subl
scas
add
push
cld
push
ret
lcall
pop
fists
stos
loop
leave
iret
int3
or
leave
ljmp
push
add
xlat
sub
sbb
sti
mov
call
sub
push
mov
movsb
test
mov
out
and
jbe
xchg
sub
addr16
xchg
fisubrs
cmpsb
in
sub
and
stc
mov
les
in
loope
inc
push
jge
adc
int3
fbstp
jp
outsl
push
and
lret
lret
dec
jnp
jge
add
xor
fsub
ljmp
ds
or
test
mov
sbb
push
mov
lcall
int
fsubs
dec
mov
pop
fdivr
ficoml
mov
sub
in
sbb
jns
dec
xor
lds
in
jmp
jno
cld
pusha
mov
nop
xchg
xchg
test
outsl
clc
lods
movsb
xchg
lret
sub
fbstp
ficoms
lods
adc
addl
cmpsb
outsl
movsl
mov
mov
mov
jp
jbe
iret
dec
roll
cltd
cld
jo
loopne
ljmp
add
hlt
mov
inc
icebp
xchg
xlat
cmpsl
ljmp
xchg
test
in
sbb
fsubr
dec
stos
lea
ja
daa
ss
dec
inc
jmp
pop
fsubs
push
pop
pusha
xchg
sub
insb
stos
shrb
mov
mov
push
xorb
jle
jns
ja
cwtl
jo
mov
mov
nop
enter
push
repnz
ja
cltd
mov
add
shlb
push
icebp
dec
fistpll
fcmovne
push
add
test
push
in
sbbb
repnz
scas
jle
cmpsl
sub
sbb
push
lret
es
rcll
fstps
iret
loopne
gs
cmp
push
test
cmp
aaa
add
xchg
mov
cmp
rorl
mov
fisubrl
fmull
inc
mov
or
rorl
imul
nop
mov
cmp
and
adc
xor
in
mov
inc
xor
rorl
leave
lcall
jg
loopne
fucomip
xor
xchg
mov
xor
adc
mov
lret
enter
dec
jb
ret
jno
lock
push
mov
mov
imul
negb
mov
fists
push
fmuls
cmp
push
mov
mov
jp
lahf
cmp
lahf
jnp
in
leave
test
mov
mov
movsb
mov
leave
mov
lods
mov
mov
pushf
popf
mov
sub
sub
xchg
mov
mov
enter
and
sbb
add
icebp
xchg
repnz
int3
lret
push
scas
inc
sbbl
test
aas
mov
aas
mov
jmp
shrl
sbbb
or
pop
mov
ficoml
mov
adc
dec
fildl
ret
lock
sbb
mov
pop
pop
add
mov
mov
sti
xchg
andb
or
into
in
mov
adc
call
mov
fadds
test
mov
cmc
inc
push
fildll
jb
lret
mov
or
fcomps
adc
push
idivl
adc
mov
push
rclb
dec
mov
mov
pushf
or
lcall
pusha
negb
aas
sub
adc
cmp
pop
mov
cwtl
pop
mov
movsb
adc
pushf
or
mov
xchg
cmpl
push
push
rep
inc
mov
imul
pop
jo
or
neg
sbb
aaa
neg
xchg
pop
xlat
mov
xchg
nop
mov
xchg
rolb
fisttps
inc
pop
test
pusha
sub
fwait
ja
pop
sub
and
ss
jno
mov
sarb
jecxz
dec
pop
xor
fcoml
test
ficoml
pusha
gs
push
jge
xlat
scas
aas
out
call
cmc
fwait
stos
imul
xchg
fwait
sti
mov
mov
cmc
popf
sub
mov
repz
mov
jno
mov
call
scas
aad
movsb
in
in
jle
js
cmp
cmpsb
lret
mov
lcall
lret
push
into
pop
dec
pop
fistps
test
add
iret
int3
lahf
cmp
xchg
mov
iret
dec
hlt
cmp
jle
mov
gs
and
fidivrl
jo
inc
cmp
aam
loope
inc
scas
daa
orb
inc
inc
jmp
in
jnp
cmp
popa
xchg
mov
xchg
dec
dec
lret
insb
dec
inc
lahf
lock
sub
stos
pop
and
popa
es
fdivp
push
cs
out
insl
sbb
dec
jge
jle
jae
push
mov
lock
dec
fcoml
pushf
lcall
sub
mov
mov
cmp
sbb
xchg
lods
mov
push
mov
enter
mov
mov
shlb
dec
or
dec
mov
mov
inc
fcompl
sub
or
faddl
mov
mov
inc
movsl
std
push
xchg
fdivrl
jne
push
mov
lahf
xchg
std
test
lret
imul
mov
jbe
inc
sub
adc
mov
mov
mov
into
scas
repz
js
and
dec
movb
mov
je
add
jae
shlb
mov
pushf
pusha
add
mov
mov
lock
test
xchg
dec
sahf
inc
outsl
adc
into
pop
not
add
and
sarl
lret
rorl
mov
jge
insl
mov
inc
fistl
cmp
inc
faddl
sbb
fistps
je
ret
and
or
and
adc
pusha
pop
sbb
punpcklbw
jg
cwtl
mov
xchg
lods
test
or
xchg
inc
mov
dec
rorb
lret
xor
dec
xchg
icebp
leave
shlb
mov
hlt
sbb
dec
push
and
lds
andl
xchg
rolb
add
add
push
push
mov
test
xchg
test
sub
sub
push
cmp
xor
inc
nop
push
scas
lcall
loopne
add
push
mov
daa
sti
andb
mov
fidivrs
pusha
add
inc
mov
dec
sbb
fisubrs
das
pop
mov
mov
xor
add
insl
fwait
adc
and
aaa
xlat
and
cmc
mov
sub
fcompl
add
cmc
cli
push
cld
repz
lahf
test
stos
cmp
or
pop
cmc
iret
lret
sub
and
fcomp
xlat
insl
mov
mov
push
movsb
push
push
mov
icebp
adc
andl
into
je
xchg
pop
cmc
test
xchg
lret
lea
ja
pushf
lods
icebp
mov
cmc
jb
dec
jg
pushf
xchg
rorl
loope
cltd
or
andl
xor
push
cmp
inc
mov
clc
cmp
aas
mov
aad
inc
in
xchg
cmp
inc
or
test
cmpsb
or
shlb
stos
sbb
scas
jp
pop
mov
sti
lret
scas
aas
jl
xchg
orl
jae
and
mov
cmp
imul
pop
push
scas
or
mov
push
mov
addl
pop
mov
xor
pop
out
testb
jbe
call
cmp
cld
shl
je
pop
hlt
sub
cmc
or
test
adc
pop
cmp
xor
adc
jne
stos
xor
stos
or
lock
inc
out
leave
xlat
dec
stos
ret
call
push
movsb
jl
sti
push
aam
mov
incl
inc
or
aad
mov
cmp
in
jmp
das
or
jge
cmp
xchg
push
ret
mov
xor
mov
mov
gs
and
fdivr
sub
jmp
pop
lods
adc
stos
inc
or
jae
not
adc
test
gs
jnp
arpl
jp
mov
js
imul
les
test
loopne
jns
cld
int3
cmc
loope
out
fisubl
sahf
cmpsb
iret
mov
add
hlt
mov
push
mov
clc
pop
and
inc
das
jl
dec
nop
shlb
push
in
sbb
push
scas
hlt
sbb
or
in
cmpl
cmpsl
lock
jnp
mov
pop
decb
push
cmp
hlt
stos
fwait
mov
aad
rolb
dec
cmc
mov
mov
xchg
cmp
cld
shl
xchg
sub
bound
mov
hlt
add
movsl
call
lahf
mov
mov
rorl
xchg
jle
out
pushf
in
mov
adc
sbb
jns
dec
movsl
dec
mov
jle
pop
mov
cwtl
popf
xchg
loope
in
jge
mov
pop
cmp
cmc
xchg
adc
shll
pop
rol
pop
xor
ret
nop
xchg
lds
or
adc
imul
inc
and
fdivl
mov
push
mov
les
pop
movsl
ds
xchg
test
inc
imul
iret
xchg
lea
pushf
lods
push
or
sub
push
xor
or
xchg
push
mov
push
gs
aam
cmp
mov
scas
mov
mov
in
xchg
cmovle
mov
push
shr
and
enter
aaa
mov
sub
out
xchg
inc
stos
jp
lret
in
inc
stc
cld
dec
cmpsl
pop
movsl
xchg
in
cld
es
sbb
xchg
fstpt
or
and
test
and
mov
mov
cmpsb
out
and
cmp
cmp
lea
push
mov
push
and
and
mov
jne
jge
scas
mov
insl
sbb
xor
cs
mov
enter
mov
mov
pushf
or
mov
mov
add
ljmp
movsb
into
jb
fcom
mov
repz
cmpsl
cwtl
adcl
cs
test
mov
mov
repz
fs
lea
pop
cld
test
mov
sub
pusha
ret
lock
or
ret
shrb
clc
sub
sub
push
mov
in
jecxz
lahf
nop
lods
sub
test
xchg
mov
dec
cmp
sbb
popf
shrb
aas
push
jge
cmp
xor
test
add
sahf
nop
pop
sub
sub
mov
push
jno
sub
or
adc
pop
ror
and
sub
movsl
mov
int3
int3
gs
enter
push
rorb
inc
mov
mov
iret
aam
or
xorl
xchg
push
arpl
mov
or
mov
sub
subb
sbbl
jmp
loopne
cwtl
push
mov
insb
mov
stos
push
ret
or
fsts
sub
into
bound
fbstp
ret
cmp
cld
or
daa
scas
mov
ret
daa
std
or
mov
mov
jnp
pop
ret
xchg
nop
xchg
and
jp
or
nop
pop
es
and
xchg
adc
xchg
test
pop
outsl
daa
or
cli
sub
jae
leave
test
lret
cmp
xchg
call
push
movsb
in
mov
inc
mov
xchg
mov
jnp
sti
mov
mov
std
ljmp
inc
aas
mov
loop
pushl
test
push
cwtl
pushf
push
fs
ja
push
inc
cmp
ss
cli
pop
lret
xlat
jg
mov
imul
jae
aas
insl
das
push
imul
lahf
sub
mov
xchg
mov
mov
dec
cmp
sbb
enter
sub
mov
mov
xor
hlt
xchg
adc
outsl
push
sub
jle
addl
adc
and
push
pop
inc
ja
adcl
jb
xor
into
int3
jnp
fildll
sbb
sar
popf
out
lret
addr16
lock
inc
cld
mov
pop
repnz
test
rcr
aad
lods
mov
inc
fs
loop
popf
int3
test
inc
mov
or
and
inc
inc
push
and
inc
out
push
movsl
sbb
lahf
mov
cwtl
decl
jbe
add
test
lods
pop
roll
and
iret
nop
jmp
into
sbb
nop
dec
mov
xchg
shrb
nop
dec
xchg
loopne
add
stc
mov
xor
rcll
leave
and
flds
aad
jl
or
xchg
scas
lock
imul
shll
jae
mov
inc
test
adc
orl
dec
out
push
xchg
js
dec
rcll
enter
xchg
mov
movsb
push
or
inc
pop
push
push
cmp
xlat
out
pop
out
or
xor
fwait
mov
orb
mov
hlt
mov
mov
lods
xchg
pop
movsb
mov
xchg
push
push
dec
mov
xchg
xchg
xor
mov
add
mov
or
or
lods
nop
and
cmp
js
add
mov
ljmp
divb
loop
loop
test
insb
in
push
cmp
pop
ljmp
dec
decl
insl
shlb
add
aad
and
or
jb
js
aam
int3
adc
cs
fmuls
cmpsl
dec
push
mov
push
fwait
icebp
or
or
jp
mov
xchg
xchg
shrl
fisubl
adc
mov
pop
dec
out
cmp
adc
xchg
clc
mov
dec
xchg
sub
mov
jne
lret
pop
shlb
scas
mov
or
dec
mov
scas
hlt
push
jecxz
enter
sbbb
out
inc
imul
or
mov
jns
lret
cli
push
lds
addr16
and
aad
xchg
sub
loop
int
lea
jl
sub
sti
lret
push
dec
cwtl
lods
stos
or
pushf
aam
lods
or
js
arpl
xchg
cmp
cmpsb
popf
mov
mov
sbb
orl
je
movsl
fistps
mov
adc
nop
push
xchg
adc
push
stos
aaa
or
sbb
cwtl
daa
or
lret
aam
adc
lods
pop
dec
ror
cli
sbb
lods
add
add
imul
pop
xlat
lcall
adcl
inc
movsl
xchg
xchg
cmpsb
add
and
mov
mov
rcrb
movsb
pushf
orl
pop
dec
mov
xor
es
das
icebp
xchg
xchg
enter
sahf
push
sti
fs
mov
dec
stos
shlb
sub
and
andl
lods
xchg
xor
and
mov
les
pop
mov
mov
mov
mov
aaa
jbe
lret
cmp
and
cld
cld
sbb
fdivr
sarb
sbb
xchg
or
orb
jg
xlat
in
xchg
int3
int
mov
nop
xchg
sbb
push
call
ljmp
or
push
addr16
fst
xchg
and
lds
cltd
dec
or
sbb
mov
lret
jle
mov
mov
pusha
mov
jmp
fwait
ja
cmpb
xchg
js
or
lea
sbb
and
pop
sub
in
mov
pushf
les
jae
aad
and
sub
adc
inc
shrb
inc
sub
leave
rclb
mov
jae
jne
js
inc
clc
enter
dec
jg
out
icebp
aad
cmpsl
xor
lock
mov
out
mov
adcb
push
mov
mov
or
rclb
push
loope
in
rolb
pop
test
xchg
add
add
enter
mov
movsl
addr16
dec
decl
xor
cmp
adc
mov
fsubrs
into
pop
cmp
sbb
aam
sbb
or
pop
int
iret
jg
sub
jg
and
leave
dec
xchg
xor
sti
adc
push
push
add
inc
xchg
cmp
nop
xchg
push
dec
cmp
cld
and
xchg
xchg
ss
jmp
in
add
add
scas
insl
rcr
mov
dec
or
cmpsl
aad
or
or
mov
repz
jg,pn
cwtl
std
test
inc
pop
popa
into
rorl
aam
mov
dec
pop
mov
xor
cwtl
or
pop
out
test
jb
pop
push
xchg
pop
adc
je
adc
add
movsb
push
xor
stc
xor
mov
jge
and
mov
push
sub
fdivl
lret
xor
in
adc
mov
das
and
pushf
dec
xchg
stos
inc
fs
aaa
jbe
int
mov
push
or
fstl
in
jp
jne
push
fsubrs
je
lods
test
je
je
inc
imul
cld
lea
mov
mov
dec
cmp
mov
push
add
adc
sbb
outsl
movsb
out
or
movsl
movsb
ret
rcr
add
jl
dec
into
aam
and
insb
ror
push
mov
pusha
flds
pop
pushf
or
push
mov
shlb
ja
syscall
cmc
jmp
push
out
cmpsb
add
jmp
inc
js
fmuls
push
push
jno
mov
jecxz
rcl
jle
in
or
mov
cmc
call
sub
xchg
rcl
sub
shrb
cmpsb
sbbb
adc
adc
push
push
hlt
mov
imul
and
inc
sbb
push
mov
shrb
and
fsubrl
rcll
adcb
loope
xor
xor
or
pop
push
or
mov
add
mov
mov
loop
leave
adc
mov
mov
gs
push
fs
mov
idivl
std
xchg
mov
in
pop
xchg
mov
repz
hlt
sbb
pushf
inc
lods
rclb
ljmp
lods
shlb
shrl
dec
lea
mov
aad
and
orb
sahf
mov
aad
dec
fisubs
les
arpl
xchg
or
xlat
mov
call
stos
mov
add
pop
jnp
push
dec
fistps
sub
jl
shll
push
xor
data16
jb
pop
mov
shrb
add
xor
sub
js
sbb
sbb
push
mov
and
fadds
imul
push
outsb
mul
and
fs
scas
mov
adc
cwtl
repnz
mov
hlt
repz
mov
add
mov
scas
jno
cld
je
lahf
dec
push
lds
dec
xor
lret
sbb
mov
out
loope
cmp
ret
fidivrl
add
mov
sbb
lcall
mov
mov
mov
jl
and
mov
push
loope
mov
push
stos
int3
mov
stc
pop
mov
popl
xlat
icebp
pop
xchg
ret
jmp
call
test
inc
test
inc
ss
or
arpl
inc
mov
cmpsl
fcmovnu
ret
jns
popaw
jnp
mov
scas
xchg
imul
push
xchg
stos
das
in
jp
cmp
movsb
pop
push
shlb
adc
xor
lea
fistpll
test
cmpsb
clc
test
cwtl
sub
mov
nop
push
push
push
rorb
jmp
outsb
repnz
mov
clc
pop
or
jmp
test
gs
mov
movsb
addl
add
addl
dec
nop
ror
imul
fs
push
jns
push
add
mov
iret
sub
or
sub
pop
and
hlt
mov
xor
ss
xor
mov
cltd
rclb
cmp
jmp
fiaddl
xor
mov
xadd
add
cmp
aad
mov
mov
rcl
gs
xor
pop
ljmp
sbb
ja
jo
xor
jg
or
ss
lahf
xor
cmp
or
imul
test
in
mov
or
js
data16
inc
fildll
dec
popf
icebp
adc
arpl
stc
jbe
movsb
nop
lods
adc
fs
inc
lock
fs
imul
icebp
or
imul
inc
xchg
test
xchg
mov
cmp
fwait
pop
aam
out
lods
xchg
cmpsb
outsb
aam
jecxz
xchg
sbb
rolb
and
xchg
mov
dec
jle
mov
adc
mov
fdivs
cmp
je
cmc
leave
sub
adc
push
loopne
aas
loopne
push
pop
call
add
aad
imull
cmp
into
jb
aam
iret
in
sub
mov
or
sub
fcoms
or
xlat
addr16
sub
into
cmc
xor
mov
mov
adc
fadds
push
lea
pop
dec
jmp
sub
mov
in
sub
dec
rcr
fwait
adc
xchg
xchg
jnp
sbb
xor
mov
pushf
add
stos
mov
xchg
shrl
leave
lea
cld
pop
jnp
jns
lret
aam
xchg
ret
rcrb
cmpsl
clc
xor
ret
iret
mov
or
roll
shlb
xchg
adc
sbb
add
add
xor
cmc
stc
rcll
fmul
jns
jg
sub
dec
sbb
enter
andl
jnp
push
add
mov
bswap
mov
sarb
sub
dec
lds
jecxz
iret
xor
in
cmp
mov
pop
mov
mov
xor
stos
inc
mov
jae
add
les
in
pop
in
mov
repz
xor
lods
jg
sbb
pop
rorb
rol
dec
fcmovnb
mov
loopne
es
loop
shlb
imul
push
lret
inc
shrl
adc
dec
jp
push
shll
lds
test
dec
xor
mov
cmp
les
adc
iret
lods
shl
outsl
subb
mov
xchg
mov
mov
jb
nop
push
jnp
repnz
adc
aam
fildl
inc
push
lds
mov
pop
nop
inc
jo
add
mov
mov
or
mov
rcl
push
xchg
and
cmp
test
mov
or
adc
pop
dec
sbb
imul
subl
mov
clc
xchg
adc
js
pop
test
mov
loopne
mov
or
je
and
mov
or
mov
mov
clc
repnz
enter
outsl
mov
or
out
jl
in
add
mov
stc
add
xchg
xchg
cwtl
push
add
test
gs
lods
jbe
sbbb
cltd
pop
pushf
fcompl
mov
pop
test
xchg
inc
aad
fisttpll
rorb
pushf
adc
rcl
cmp
aas
fdivs
pop
push
fdivrl
clc
xchg
xor
xor
sti
daa
pop
xchg
xchg
inc
xchg
pop
xor
scas
clc
jg
xchg
push
nop
into
das
or
mov
mov
dec
fimuls
aad
fistpll
and
scas
rorl
fsin
mov
popa
fldt
adc
cmp
add
pop
mov
xchg
shlb
mov
cld
bound
scas
push
popa
mov
xor
negl
outsl
xchg
leave
test
mov
enter
sbb
loop
fiadds
mov
in
aaa
add
inc
mov
sbb
js
mov
dec
fwait
aam
jle
inc
sar
ret
and
popf
cmpl
cltd
into
js
les
ret
dec
cmc
adc
test
xchg
xchg
inc
add
mov
sbb
out
dec
rorl
cmp
into
fsubr
ror
xchg
xchg
dec
and
push
mov
bound
push
shrb
mov
loopne
mov
mov
imul
jbe
mov
sub
test
mov
push
push
fiadds
fdivrl
adc
lret
in
push
cltd
in
mov
fstl
mov
test
outsl
dec
aas
and
int3
pop
shll
pushf
jg
aaa
push
fidivrl
pop
loopne
lret
inc
push
lret
push
jg
adc
ja
fs
add
push
add
gs
aad
jnp
in
xchg
xlat
pop
rcl
push
insl
adc
outsb
add
insb
bound
sti
jmp
sbb
mov
fwait
shl
scas
cmc
leave
cltd
pop
fs
js
pop
shrb
nop
push
push
fidivrs
adc
subl
or
inc
test
or
add
fadds
or
cli
ja
pusha
xchg
mov
aas
xor
mov
mov
data16
push
push
mov
inc
xchg
stos
aas
add
mov
dec
rol
cmp
jo
test
shlb
into
xchg
fstpt
mov
inc
adc
js
or
mov
lret
fnsave
and
icebp
aam
sbb
in
sub
ja
xchg
xchg
push
xlat
mov
scas
pop
test
lcall
jb
dec
mov
sub
pushf
sbb
mov
outsl
arpl
rclb
xor
shrl
pop
xchg
pop
and
adc
and
sti
mov
stos
or
add
iret
sub
add
mov
lret
int
cmpsb
mov
cmp
jb
cwtl
lock
pusha
fsubrl
push
pop
sbb
xor
scas
pop
xchg
push
testb
imull
fistps
out
or
mov
imul
jb
mov
jge
inc
and
fwait
mov
pusha
xor
popf
mov
add
push
movl
mov
push
mov
enter
inc
std
mov
sub
xchg
sbb
mov
mov
xchg
lret
xchg
pop
loop
cwtl
stos
mov
ret
je
fbstp
and
lock
or
fwait
jg
in
and
xchg
sbb
cmp
push
into
xor
lods
xchg
shrb
in
mov
fmull
stos
xchg
sub
mov
enter
bswap
nop
adc
test
fs
imul
inc
in
pushf
push
ss
mov
pop
mov
test
dec
cwtl
xor
lret
icebp
ljmp
shlb
shr
sti
cmp
inc
iret
rcr
pop
into
push
mov
push
movsl
iret
sub
sbb
dec
cmp
cs
push
ljmp
shlb
mov
popl
adc
loopne
loope
xchg
rcrb
jle
movsl
icebp
lret
jecxz
mov
test
cmpsl
fcoms
sub
cmpsb
pushf
test
jmp
scas
daa
jp
fistl
add
cmpsb
or
fsubs
pop
jmp
jnp
jp
or
push
or
sar
cmp
adc
sarb
cmp
cwtl
bound
xor
int
xchg
mov
lock
rcll
mov
pop
and
adcl
leave
fdiv
pop
ret
push
or
movsl
mov
ret
jl
hlt
cwtl
xchg
rolb
xchg
jge
outsl
test
xchg
sbb
and
sbb
lea
mov
imul
cmpsl
sub
enter
and
xor
cmp
mov
in
cltd
ds
mov
jmp
test
dec
inc
mov
inc
xchg
adc
rorl
lods
jns
xchg
cmp
pop
jns
leave
mov
nop
and
orb
mov
popa
ljmp
pop
mov
hlt
dec
cli
mov
xor
push
push
push
das
sbb
push
adc
sarl
cmc
gs
push
or
not
sahf
mov
dec
pushf
rcr
pushl
dec
lock
pusha
pop
je
shlb
enter
pop
pop
cmp
testl
cmp
jo
adc
lock
xchg
int
out
enter
push
lock
push
fidivrs
ljmp
scas
and
xchg
jbe
lret
fbld
push
test
dec
lods
je
jmp
cmc
push
outsb
iret
inc
push
inc
inc
call
outsb
xchg
cmp
enter
or
leave
adc
pop
xor
aad
data16
adc
mov
ljmp
outsb
sar
xor
out
loope
imul
loopne
enter
incl
mov
mov
mov
bswap
cmp
lods
mov
xchg
lods
nop
int
xchg
std
scas
loope
test
jo
mov
jb
or
ror
dec
in
mov
xchg
mov
out
jo
jbe
mov
dec
test
cld
or
fistpll
adc
jmp
dec
adc
lret
test
fst
dec
mov
shr
push
icebp
loopne
test
fistpll
mov
mov
test
xor
dec
nop
in
enter
in
fwait
data16
xor
lods
mov
sub
scas
inc
lods
lea
sti
cwtl
hlt
xchg
shrl
cmpsl
jecxz
add
and
adc
add
mov
into
arpl
add
loop
jle
adc
and
xchg
int3
sub
push
add
cmp
es
lods
jnp
xchg
cli
cmpsl
movsl
sub
hlt
xor
sbb
imul
mov
jl
loop
mov
mov
push
cmp
adc
pop
lret
cld
mov
sbb
mov
enter
aam
icebp
decl
aam
std
inc
xchg
test
imul
rclb
int3
push
pop
dec
fcoms
mov
mov
test
fdivrl
iret
pop
and
jb
pop
fdivs
pop
insb
and
out
push
mov
pop
in
loop
adc
aad
xchg
loopne
cld
loop
aaa
nop
lret
jg
pop
mov
stos
pop
mov
int
cmpsl
test
adc
pop
cmpsb
js
movsb
jl
stos
sub
add
mov
outsb
lock
jle
incb
std
xor
fsubrs
jne
lret
jb
stos
xchg
shlb
popa
cmp
movsb
call
push
ret
in
sbb
or
scas
adcl
cwtl
xchg
sub
cmpsl
cld
les
rcrb
pop
cmpsl
sahf
js
xlat
les
rorb
adcl
icebp
test
std
mov
xchg
pop
jle
testb
lcall
lcall
dec
ja
hlt
pop
repnz
jno
cmpsl
pop
xchg
rclb
cmp
inc
cmp
xchg
jge
stos
jne
jne
sub
ficompl
aaa
sbb
mov
ret
sbb
mov
push
sub
mov
or
bound
xor
les
xor
add
imul
call
aas
je
lret
inc
fdivr
jno
mov
leave
nop
mov
pop
adc
test
mov
cld
pop
imul
adc
mov
push
test
mov
mov
mov
mov
push
imul
push
or
call
out
cmp
inc
dec
test
jecxz
mov
xchg
and
leave
hlt
sub
test
lds
cmp
jle
inc
mov
dec
je
mov
movsb
fwait
jp
movsl
fbld
and
stos
hlt
dec
sub
mov
or
add
test
cltd
mov
std
pushf
rclb
pushf
rcrb
or
pop
mov
fistpll
sub
xchg
adc
fcompl
lcall
cld
or
sbb
mov
pop
in
adc
repnz
inc
xchg
movl
sub
xor
sub
and
sbb
inc
or
inc
mov
cmp
lcall
adc
dec
sarl
pop
fdiv
in
sti
rorb
fbstp
inc
add
lret
mov
in
adc
pop
xchg
adcl
mov
rcl
mov
icebp
stc
push
fwait
cmpsl
hlt
and
aaa
sub
sarb
stos
or
rolb
cmp
orb
ret
push
cmp
leave
mov
jno
jecxz
add
insb
insl
pop
fisubs
imul
inc
push
sbb
loopne
push
or
push
insb
xchg
aam
lods
sahf
lods
aas
mov
cmpsl
cld
inc
and
or
popf
out
in
js
pop
add
xchg
iret
cmp
mov
imul
insb
and
sub
aas
insb
mov
pusha
inc
adc
xchg
jnp
mov
cltd
xor
scas
dec
add
dec
or
sarb
and
pop
leave
in
fisubl
cmp
js
mov
stos
aad
in
mov
add
pop
pusha
or
push
inc
jae
mov
xor
xor
dec
nop
or
xlat
call
ljmp
jge
movsl
cmc
xchg
xchg
ljmp
inc
dec
scas
call
sbb
mov
nop
adc
les
mov
dec
iret
test
inc
shlb
testl
mov
inc
jae
mov
lods
stos
imul
cmp
pop
xor
inc
xor
and
cltd
fs
or
sub
jb
fcmovbe
adc
or
lret
jbe
mov
xchg
pop
inc
cmp
out
mov
es
xchg
mov
jae
mov
ja
sbb
adc
bound
loop
int3
cmc
sbb
add
subb
icebp
rcll
jbe
xchg
dec
mov
lahf
cmc
andl
add
jmp
xchg
adcl
jge
xchg
test
pop
jne
push
orl
xor
lds
pop
inc
ret
mov
dec
inc
push
not
imul
shll
inc
rorb
jg
test
incb
shl
add
int3
loop
les
call
dec
pop
gs
adc
mov
push
mov
test
lods
shlb
aam
dec
push
push
notb
aam
add
push
xchg
and
pop
into
shr
repnz
int
movsl
jg
push
dec
xchg
mov
fwait
mov
push
stc
popa
and
sbb
push
xchg
xor
mov
dec
cmp
mov
fwait
mov
xchg
popl
cwtl
pop
mov
add
push
inc
mov
mov
stos
cltd
add
xchg
mov
jg
dec
cwtl
imul
mov
or
scas
cmp
aas
loop
jb
jae
xor
loop
lods
scas
les
push
dec
mov
xchg
jbe
rorb
lcall
scas
dec
sub
inc
add
cmpsl
xlat
mov
inc
js
or
dec
pop
cld
dec
and
push
xlat
rcl
gs
dec
adc
cmp
mov
xchg
out
es
xchg
mov
je
fsubrs
mov
imul
repz
or
sarb
jnp
adc
adc
mov
rcrl
pop
xchg
rcl
or
dec
push
add
lods
xchg
int3
call
fwait
insl
mov
xchg
ret
mov
inc
xor
mov
sub
push
test
sub
sub
push
je
dec
mov
repnz
adc
clc
dec
mov
adc
je
push
mov
mov
lods
or
cmp
pop
mov
add
neg
cld
pop
push
sbb
shrb
test
push
sarl
and
hlt
aad
imul
stos
test
pop
test
in
mov
in
mov
loope
hlt
movsl
mov
cmpsb
mov
lahf
loope
inc
in
sbbl
enter
add
inc
add
adc
cmpsl
sbb
les
test
add
orl
nop
push
push
sbb
movsl
pop
imul
pop
into
pop
dec
fcmovne
push
pop
push
and
imul
or
hlt
jmp
movsb
mov
pop
fmull
pop
cld
jge
aas
lock
enter
push
daa
pop
insb
cmp
push
dec
pop
pop
rcrl
xchg
rcr
cmp
mov
lods
test
cli
sahf
lea
add
scas
hlt
in
pop
call
call
jge
mov
cwtl
je
lds
inc
cs
fcoml
dec
scas
ss
dec
rclb
mov
xchg
push
jge
push
fcompl
push
cmp
mov
lods
imul
mov
or
add
xchg
loope
mov
scas
mov
shrb
push
xlat
adc
or
or
adc
movsb
add
xchg
leave
arpl
jne
aas
movsb
or
das
dec
push
sahf
out
adc
scas
mov
hlt
xchg
pop
sbb
dec
pop
or
or
xchg
or
jnp
lahf
into
mov
xlat
arpl
repnz
xchg
sbb
iret
mov
adc
dec
int
outsb
xor
cmp
call
inc
mov
add
leave
or
lods
sub
mov
push
adcl
push
nop
mov
cmp
or
and
aaa
rcrl
lock
cmc
mov
mov
jbe
test
into
inc
lcall
sarb
add
xorb
xor
mov
xor
cltd
fdivr
out
dec
rcrb
dec
cmp
inc
fldl
jmp
addr16
add
xchg
hlt
movsl
cwtl
xor
adc
inc
loopne
fwait
negl
adc
mov
cld
lret
fisttps
push
lds
movsl
popl
mov
jbe
fdivrs
push
push
outsb
dec
cmp
push
je
fwait
jmp
jbe
mov
jl
out
xor
je
test
ja
cmp
js
cmc
pusha
adc
xchg
cmc
sub
idivl
and
lea
xchg
xor
call
push
mov
jae
scas
xor
scas
fsubrs
sbb
jnp
loopne
cld
loopne
ljmp
fcoms
std
add
ret
mov
shlb
out
or
push
ffreep
clc
in
cwtl
pushf
aad
divl
jbe
add
inc
sbb
ret
test
mov
xor
imul
jle
imul
fldln2
fisubs
add
mov
cltd
ret
push
into
out
inc
out
or
xchg
shll
push
aaa
jns
adc
and
or
or
add
lods
xchg
movb
or
jmp
fimuls
mov
push
xchg
fnstcw
inc
into
dec
adc
mov
jb
mov
xor
inc
add
jp
sbb
hlt
into
lret
cwtl
inc
sbb
cmpsl
sbb
push
cmpsl
roll
or
cwtl
sub
jl
iret
adc
add
inc
sub
repnz
adc
cmpsb
or
mov
test
mov
mov
pusha
mov
test
inc
outsb
jecxz
mov
or
add
push
dec
push
fbstp
fimull
scas
push
mov
sbb
leave
imul
je
adc
cmp
dec
imul
cmp
lcall
cmp
mov
int3
mov
mov
inc
icebp
inc
aas
scas
dec
jnp
ror
icebp
int3
or
test
loopne
or
pop
nop
mov
into
mov
or
xchg
xchg
xchg
jg
in
outsb
stos
and
xchg
mov
pop
test
push
mov
or
mov
jecxz
loop
test
sbb
mov
add
push
cmp
dec
or
test
cli
mov
addb
fstp
lods
inc
out
lea
sub
dec
pop
cli
sub
lret
mov
movsl
rcl
adc
stc
sub
jg
dec
sub
fwait
jg
add
push
imul
outsl
test
test
and
fisttpl
inc
dec
movsb
add
jp
in
stos
shrb
bound
inc
mov
pop
jb
cmp
inc
sub
mov
or
xchg
cmp
subl
dec
mov
xor
inc
mov
or
sbb
push
ret
sahf
xor
mov
rorb
adc
cltd
aad
push
pop
fistps
jnp
ret
jg
jl
and
mov
mov
int
loopne
popl
push
les
push
je
xchg
jp
push
fwait
cmp
mov
addb
jns
add
mov
mov
mov
mov
scas
sub
jbe
roll
xor
gs
xchg
mov
les
loopne
mov
fnstenv
mov
int
das
fbstp
sub
es
cmp
lret
pushf
push
or
fmul
test
rcrl
xchg
cld
clc
mov
inc
test
imul
daa
mov
mov
xchg
mov
jg
adc
jmp
shll
jmp
out
fiaddl
jl
pop
cmpsb
sarb
fisttps
jae
mov
mov
std
aaa
call
cmp
pushf
mov
rcrb
imul
or
mov
cmp
xchg
imul
std
stos
lock
inc
pop
sbb
andl
ljmp
xchg
out
movsb
adc
fidivrl
mov
mov
xchg
cmpsl
inc
adcb
hlt
ficoml
mov
ror
jle
add
jp
xchg
cmc
mov
lock
imul
cmpsb
aaa
sbbb
cmpsb
adc
jecxz
rcrb
cli
mov
lret
ret
xchg
test
test
enter
rolb
ret
ret
movsl
dec
scas
enter
iret
adc
sub
lret
lret
bound
xchg
lds
or
cmp
test
or
sbb
inc
sbb
or
push
mov
stos
fists
lods
fwait
xchg
imul
sbb
add
bound
jno
xchg
decl
scas
mov
and
cmpsl
pushf
in
adc
pop
lock
mov
pop
mov
js
xchg
mov
xchg
add
inc
scas
lock
popa
sbb
scas
mov
mov
ror
sbb
test
cmp
mov
test
shll
xor
shl
test
cmp
lret
rcl
imul
mov
cltd
mov
imul
ret
aad
mov
pop
mov
cmc
xor
rolb
inc
jbe
inc
std
ret
cmpsb
mov
jne
xlat
lea
dec
xor
mov
jae
xchg
into
xlat
and
xchg
insb
pop
test
xor
inc
inc
push
mov
std
aam
dec
jg
aas
mov
mov
testl
adc
les
jmp
cld
mov
mov
movsb
cmc
enter
pop
cltd
mov
roll
addb
mov
jl
scas
mov
cld
fisubl
xorb
xchg
sbb
pushf
fs
ss
sbb
mov
dec
orb
inc
or
mov
mov
in
xchg
rcr
lods
xchg
adc
int
xchg
cmp
jb
inc
pushf
xor
adc
shll
int
fisubl
jns
stos
xchg
or
jp
and
jge
jl
loop
inc
aam
mov
mov
xchg
push
mov
cltd
fcmovnbe
addr16
inc
in
sti
pop
test
xlat
sbb
jno
aaa
mov
dec
sub
cmpsb
leave
cmp
mov
ret
inc
or
push
out
fld
xor
icebp
sbb
push
pop
imul
cmp
stos
jge
or
xor
xchg
ret
fstpl
dec
or
xor
inc
fsts
lcall
xchg
jbe,pt
scas
hlt
nop
fldl
sbb
cld
idivb
outsb
mov
rclb
int3
aam
xchg
ljmp
mov
call
dec
xor
es
test
fisttpll
inc
pop
mov
sbb
mov
enter
push
ffreep
jl
aad
adc
push
ljmp
lret
inc
fnstcw
jb
mov
or
sti
aaa
leave
lea
orb
iret
lea
inc
mov
and
nop
xchg
mov
pop
xor
nop
in
loope
imul
int3
push
jecxz
xchg
mov
in
xchg
sub
lret
enter
call
push
mov
add
xchg
rcl
push
inc
dec
int3
sbb
dec
aam
cld
sbb
and
aas
mov
fdivrp
pop
push
mov
ret
pop
cli
mov
inc
mov
jns
mov
ds
or
lcall
nop
mov
dec
cltd
mov
or
sub
mov
dec
pop
inc
cwtl
mov
mov
adc
loop
enter
cs
out
push
inc
pop
and
cwtl
dec
xlat
leave
push
enter
fcoml
sub
lret
fists
lds
and
stos
xor
fbstp
cmp
ficoms
or
in
mov
fistpl
jb
push
ret
xchg
cmp
cmpsl
mov
into
push
addb
std
test
push
dec
enter
in
mov
xchg
test
mov
pop
xchg
test
ret
lds
jecxz
stc
inc
hlt
call
xchg
sub
xor
daa
lods
sbb
out
mov
stc
les
scas
mov
jl
mov
test
jecxz
sub
push
sub
cmpsb
jmp
fst
xor
inc
cwtl
pop
fidivrl
cmp
stos
lcall
xor
mov
hlt
clc
ret
inc
pushf
mov
mov
cld
pop
adc
ja
nop
fists
adc
sbb
clc
movsl
pop
shll
adc
dec
jb,pn
mov
mov
lods
in
lods
dec
repz
fists
or
push
mov
xor
inc
mov
mov
in
jmp
not
mov
xor
cmp
gs
lods
mov
pop
push
loope
lods
shll
sarb
xor
xor
inc
dec
pop
popf
mov
xchg
test
test
cmp
sbb
mov
adcl
sub
cmp
lea
mull
dec
in
repnz
pushf
shlb
mov
add
shlb
mov
ret
dec
mov
jmp
inc
dec
inc
pop
mov
mov
sbb
fisubrl
lcall
fadds
add
jne
dec
adc
dec
sbb
fstpt
in
or
std
adc
fiaddl
es
adc
call
xchg
and
pop
sbb
test
nop
cmp
push
rcll
sbb
loope
mov
jl
xchg
call
lret
jp
inc
loope
jecxz
or
add
or
mov
addr16
lock
mov
sbb
fiaddl
pop
mov
jns
mov
cmpsl
test
mov
popf
dec
dec
icebp
or
arpl
xor
out
pop
insb
ret
sti
xchg
and
mov
jl
push
jne
jne
jbe
into
inc
mov
rcrl
mov
jne
inc
pop
fisubrl
fcom
xchg
xchg
inc
aam
in
push
into
ret
mov
repz
enter
data16
int
sbb
sbb
cmp
inc
call
test
mov
or
das
daa
mov
mov
mov
lods
nop
mov
ds
test
lcall
add
imul
sub
fadd
xor
mov
mov
jl
pop
fldlg2
adc
sbb
xchg
mov
aam
add
cmc
aam
inc
std
lret
jmp
iret
pop
mov
fstps
movsl
lods
nop
push
das
push
push
call
popa
adc
or
fstpt
in
lods
es
js
flds
cld
test
add
dec
sahf
mov
fcoms
cmp
lret
cmpsl
dec
jno
and
push
repnz
pop
fcomps
fs
gs
xchg
pusha
les
and
cmc
cltd
in
rol
or
test
fcmovnbe
es
xchg
sti
sarb
xchg
xchg
outsb
pop
mov
xchg
mov
stc
in
aam
xchg
xchg
outsl
out
mov
leave
rclb
aas
icebp
cmp
cwtl
bound
mov
sub
sbb
mov
sti
in
fidivl
int3
push
jno
fs
mov
mov
sbbb
daa
cmc
hlt
mov
fistps
mov
imul
push
leave
sub
lods
inc
ds
mov
imul
hlt
xchg
add
lea
test
imul
call
and
hlt
fimull
rolb
or
test
hlt
jge
fsubl
jle
into
xchg
outsl
dec
pushf
cmp
lgdtl
mov
addb
sbb
das
mov
mov
xchg
mov
mov
test
insb
andl
out
loopne
dec
iret
icebp
inc
mov
fistpll
or
sub
repz
in
xchg
mov
gs
test
and
test
mov
daa
mov
iret
xor
shlb
shrl
lret
stos
pushf
pop
lods
cwtl
sarb
xorb
test
aaa
pop
sbb
mov
push
jl
dec
ss
iret
mov
adc
pop
pop
popa
sbb
fwait
push
imul
add
push
out
fwait
mov
int3
imul
pushf
sub
daa
mov
cmc
xor
imul
sub
xchg
adc
mov
xchg
invd
subb
adc
mov
and
dec
cwtl
lock
mov
adc
cmpsb
push
inc
aad
lea
or
hlt
lcall
xchg
subl
and
adc
inc
insb
lret
mov
xlat
hlt
mov
or
adc
aad
aam
inc
mov
aaa
mov
stc
scas
or
test
jno
fbld
dec
push
stos
mov
mov
stos
mov
pop
and
lret
mov
adc
fisubl
out
in
or
mov
inc
mov
xchg
lods
test
pop
in
cltd
dec
cld
or
fnsave
cwtl
scas
mov
mov
outsl
xchg
jbe
loope
rolb
shll
inc
in
add
fmuls
add
sarb
xor
repz
jnp
es
in
lret
or
out
pop
lea
or
sahf
mov
or
rcll
sbb
mov
lock
pop
std
sahf
adc
jae
pop
sbb
pop
es
ret
dec
pop
xor
imul
icebp
push
mov
out
cwtl
fxam
pushf
cwtl
std
enter
clc
ret
add
imul
test
push
xor
push
mov
add
call
pop
data16
adc
outsl
shlb
pop
mov
jmp
lods
pop
leave
pop
mov
popa
sti
dec
out
mov
rcrl
jbe
call
pop
jbe
enter
test
dec
movsl
hlt
not
dec
mov
fcoms
adc
adc
xchg
div
push
fdivs
jl
jb
push
xor
mov
aad
adc
dec
test
cltd
loopne
pop
mov
addb
iret
fdivrl
mov
mov
sub
lret
add
add
jecxz
movsb
add
test
add
lahf
jbe
fdivp
mov
and
and
cmc
cltd
or
popf
mov
fcmovu
insl
mov
mov
add
fs
movsl
pop
test
nop
mov
roll
sbb
in
das
lcall
or
xchg
gs
jae
scas
lea
not
fsubrl
rcrb
scas
test
mov
jae,pn
roll
js
shrb
dec
lahf
push
cmp
and
shlb
or
int
hlt
mov
nop
adc
push
xorb
inc
dec
fldl
lret
cwtl
mov
adc
arpl
pushf
xchg
les
jg
pushf
movsl
push
aaa
jle
cmp
mov
rcl
cmp
jle
cmpsl
loopne
je
mov
gs
jg
movsl
xorl
pop
jmp
ljmp
sub
adc
xchg
or
repz
xlat
cmp
push
subb
inc
pop
jno
mov
dec
mov
push
les
ja
ja
shll
les
mov
add
imul
adc
dec
das
pusha
pop
in
insl
dec
fstp
test
pop
xlat
rcrl
outsb
mov
dec
xchg
sub
mov
fidivrs
in
fs
or
mov
fcomip
mov
jge
push
sbb
and
leave
or
sbb
leave
scas
sbb
and
xchg
gs
lahf
fidivrs
call
adc
adc
mov
lds
sahf
enter
cltd
push
push
in
and
push
lods
push
xchg
and
mov
jl
pop
xor
or
inc
dec
or
xor
xor
xor
adc
fsub
in
cmc
cmp
xor
dec
cmp
fsubrl
int3
les
jns
cmpsl
lret
stos
and
aas
dec
gs
int3
int
rolb
xchg
mov
incl
add
pop
adc
test
scas
push
pop
or
mov
and
xchg
adc
sub
push
xchg
xchg
or
inc
pop
enter
mov
pop
mov
lret
cmpsl
jno
or
es
out
or
inc
in
cmpb
adc
jno
mov
aam
mov
bound
xor
mov
nop
dec
orl
cmp
xlat
dec
pop
inc
dec
adc
pop
mov
movsb
adc
mov
movsl
mov
pop
inc
int
sbb
sarb
cwtl
mov
or
dec
popl
sbb
shl
mov
sbb
movsl
imul
adc
test
pop
movsl
pop
rcll
jmp
sub
push
xchg
jnp
cmc
push
fildll
jo
dec
xor
dec
push
mov
repz
ss
cmp
pop
loopw
sbbl
jl
popa
sub
or
repnz
sbb
push
sbb
repnz
mov
xor
aad
les
xchg
fidivl
fbld
pop
int3
push
sbb
sar
cmp
mov
ljmp
jo
shl
jle
xor
scas
test
movsb
dec
pop
xchg
sub
inc
push
jge
adc
stos
adc
aad
push
js
push
test
push
xor
stc
lret
or
or
aas
jbe
cli
jl
in
mov
pop
xor
cmp
mov
mov
les
in
xchg
and
add
aas
stc
xchg
and
nop
xchg
mov
xchg
sub
sub
xchg
inc
int3
push
inc
call
ss
cmp
int3
dec
in
decl
sub
fdivrl
xlat
sbbl
xlat
inc
xchg
roll
add
and
xchg
shrb
add
push
out
icebp
add
jns
sbb
clc
iret
jl
pop
bound
pop
sahf
sbb
cwtl
leave
rcl
mov
xor
mov
imul
test
mov
test
cli
pop
iret
scas
leave
test
push
add
aam
mov
fs
sbb
push
jnp
pop
imul
xchg
add
lea
jmp
pop
psubq
imul
ret
gs
lret
sub
out
xor
mov
test
fildll
jno
mov
lret
stc
inc
in
hlt
pop
adc
mov
adc
and
pop
mov
pusha
sbb
mov
aas
addb
inc
aad
cwtl
fucomip
or
dec
aaa
pop
or
dec
push
jo
jne
sub
mov
cmc
scas
ja
es
hlt
push
mov
int
add
mov
xor
jecxz
rcl
mov
mov
xorl
cmp
mov
stos
jle
xor
mov
sbb
in
jmp
push
adc
nop
into
je
cmp
ja
jne
lods
or
jbe
iret
test
pop
push
xlat
xchg
addl
push
xchg
enter
aad
add
les
ret
xchg
les
dec
jbe
or
cld
cmp
incl
mov
enter
dec
aas
gs
fwait
mov
mov
mov
inc
push
loop
mov
and
and
and
push
sbbl
movb
arpl
ss
je
add
std
daa
sbb
lcall
jg
bound
pop
and
leave
stos
test
cli
adc
aam
jnp
std
inc
lret
or
cmpsl
pop
and
aad
stos
jns
xchg
and
nop
sbb
leave
test
mov
push
xchg
aad
push
xchg
fstps
sbb
scas
mov
test
enter
mov
or
stos
fsubp
aam
push
roll
mov
pop
push
pop
add
inc
xchg
mov
cwtl
shll
stos
xchg
lret
adc
mov
fucomi
jo
ret
add
cmp
sti
mov
scas
xchg
rorl
decb
inc
insb
les
jns
testb
pop
out
add
sbb
pop
jae
test
insb
cmpb
ja
jle
stc
test
idivb
shrb
pop
les
sub
andl
loope
iret
cmpb
inc
xchg
rolb
xchg
subl
mov
and
dec
pop
mov
add
rcrb
pop
stc
aad
pusha
sbb
xor
fwait
mov
push
xchg
mov
call
mov
fstps
lds
aad
jg
jae
les
nop
mov
mov
insb
ror
pop
jl
inc
xchg
lcall
and
daa
ret
loopne
ss
test
push
cmpsb
cmp
mov
add
sarl
jno
js
add
sbb
mov
and
gs
fists
ret
ljmp
and
mov
cmpl
jnp
les
jns
xchg
ja
mov
jbe
mov
jne
mov
je
mov
jae
enter
mov
scas
popa
outsb
pusha
je
mov
rorb
ret
and
jg
lods
pop
popf
clc
pop
lds
jno
scas
sub
push
or
mov
jmp
sub
adc
outsl
pop
xor
adc
mov
cmpsl
enter
adc
fistps
xchg
mov
xor
cli
fcoml
adcb
or
inc
jecxz
jmp
and
push
push
jle
aam
add
leave
lea
push
adc
jb
push
jmp
xchg
idiv
stc
jae
sbb
push
and
scas
jne
add
add
jg
add
sub
mov
rcrl
cmp
les
jecxz
mov
enter
aam
xchg
or
shl
das
push
subl
mov
mov
pusha
sti
out
pushf
roll
movsb
mov
lea
sahf
test
leave
mov
mov
je
lds
or
mov
cmc
push
dec
xchg
inc
outsb
adcl
push
add
add
mov
mov
pop
mov
mov
imul
enter
xor
pop
mov
inc
mov
or
adc
mov
es
adc
mov
scas
imul
pushf
rcl
shrl
cmp
mov
inc
jg
mov
mov
push
imul
dec
outsl
shrl
and
into
insb
int3
inc
aad
in
mov
pop
fwait
mulb
shlb
roll
pushf
rclb
xchg
adc
lcall
cmc
push
imul
mov
sub
cmp
ss
roll
push
dec
xchg
cmc
movsl
jne
rcrl
xchg
xchg
adc
aas
fs
lock
xchg
lret
cmc
imul
rorb
push
mov
and
or
add
scas
bound
pop
mov
loope
or
inc
push
mov
inc
insb
scas
or
les
es
das
mov
xchg
add
mov
ja
mov
in
test
inc
inc
test
scas
mov
jo
push
into
lds
inc
int
pop
in
lret
mov
cmpsw
adc
cmc
cmpsb
jg
inc
mov
sbb
decl
movsb
icebp
xchg
out
nop
repz
mov
xlat
ret
mov
les
cmp
je
inc
add
cmc
push
pop
hlt
lods
lcall
jnp
lea
xchg
add
shlb
mov
shrb
add
cmp
les
add
mov
ror
fs
jns
or
xor
xchg
aad
popf
adcl
cmp
xchg
jmp
in
les
sub
or
ja
dec
les
add
shl
fildl
xlat
pop
aad
or
lret
or
jmp
push
sbb
add
mov
inc
outsl
stc
xor
sub
xlat
lds
xchg
mov
pop
ja
lcall
sub
push
adc
ret
adc
push
xchg
rcll
xor
pushf
inc
jp
xor
cld
fs
pop
daa
ljmp
and
pop
hlt
orb
xlat
in
test
cmc
les
iret
fisttps
stos
fmul
and
inc
int3
addr16
adc
sub
test
mov
hlt
lcall
lret
jg
push
test
ret
sub
xor
and
inc
mov
mov
xchg
dec
fimuls
sahf
xor
das
daa
loop
pop
mov
sub
xchg
cld
ret
and
aam
jge
js
movb
inc
cmc
insl
xor
shl
aam
add
jg
sbb
push
pop
sar
shll
hlt
xchg
test
clc
outsb
jbe
lcall
and
cmc
insb
and
int3
lds
pop
es
sub
leave
sub
nopl
xlat
out
aam
lret
mov
std
push
add
nop
cmp
mov
add
push
jb
xchg
pop
xchg
xor
mov
lret
mov
pop
inc
jmp
shl
and
test
icebp
and
add
mov
or
add
stc
mov
mov
test
mov
dec
inc
idiv
les
dec
mov
addb
inc
pusha
mov
sub
nop
pop
ljmp
pop
in
or
add
pop
mov
add
std
cmp
jle
test
jle
mov
fiaddl
add
jle
roll
xchg
inc
mov
add
jle
or
mov
outsl
or
vpunpckhdq
dec
mov
loope
loope
jecxz
jbe
mov
mov
adc
movb
add
lret
leave
or
or
add
sbb
jp
je
imulb
or
mov
loop
or
jbe
roll
in
cmp
cmpsb
or
insb
sub
sub
dec
pushf
sub
ja
mov
cmp
sbb
mov
int
lret
adc
jp
jge
adc
inc
add
aad
xchg
jp
adc
inc
push
mov
mov
das
dec
jge
js
jae
enter
push
xlat
inc
jns
faddl
orl
fmull
mov
mov
add
cmc
mov
push
lret
and
mov
mov
lods
stc
jnp
push
dec
pop
ret
aad
lret
lret
cmp
push
notl
xchg
rcl
push
xchg
push
jnp
outsb
orb
sbb
rep
stc
mulb
cmp
inc
cmc
xchg
pop
dec
mov
mov
push
dec
xchg
clc
mov
int3
fcomi
jmp
mov
add
test
jp
or
dec
xlat
loop
iret
jbe
ret
int
mov
push
hlt
pop
mov
mov
and
inc
lcall
mov
lea
add
mov
xor
dec
xor
test
cmpl
add
dec
push
movsb
xchg
push
push
push
leave
sbb
enter
ds
or
xlat
jbe
cmpsb
jmp
out
outsl
mov
das
movsb
push
into
out
jmp
cmovs
je
cmc
pop
test
mov
mov
jp
sbb
jne
adcl
xchg
mov
cmc
sti
out
ficomps
xlat
sti
and
dec
mov
lret
les
ret
sbb
push
mov
ret
lret
sbb
fisttpll
pop
and
cmp
rcrl
loopne
hlt
sub
jne
repz
rorl
xlat
mov
std
mov
scas
mov
rclb
outsl
add
push
iret
insb
les
dec
fnstenv
mov
int3
sbb
mov
mov
mov
ret
inc
xchg
and
test
xor
das
pop
mov
sarl
cmpsb
movsl
inc
nop
ja
and
mov
inc
push
cmp
fxtract
stos
cmp
cwtl
data16
lret
leave
add
daa
cld
sarb
daa
push
les
xchg
mov
push
cld
or
cmpsb
in
inc
xchg
ds
xchg
movsb
mov
push
inc
lret
push
pop
pusha
das
jo
adc
sbb
test
jne
test
sub
sbb
inc
xorb
mov
adc
mov
cli
lret
mov
idivb
arpl
mov
in
add
jbe
dec
ret
pop
fsubl
enter
jl
scas
fsubs
cmpl
push
rol
ffree
jns
addl
movsb
negb
lea
pop
pop
imul
lret
cwtl
sahf
mov
data16
sub
enter
xchg
or
mov
push
mov
nop
jne
inc
xchg
ljmp
in
dec
stos
adc
js
stc
mov
sbb
add
inc
iret
xchg
sbb
mov
adc
test
mov
pop
nop
push
mov
jle
mov
shl
scas
mov
mov
push
fstp
dec
jns
inc
rcll
clc
lret
and
ret
vmovq
adc
mov
ret
jne
mov
or
jo
xorl
push
mov
sub
fs
movsl
jge
xchg
sbb
scas
push
push
push
sbb
fsubs
cmc
movb
rorl
dec
or
push
in
xor
call
lcall
or
movsb
cs
leave
mov
adc
cmp
leave
out
or
push
mov
ret
jb
in
sbb
mov
jge
adc
out
es
and
fdivrs
inc
add
adc
andl
nop
js
jp
stos
cmp
push
aas
or
mov
jmp
mov
inc
mov
icebp
pop
xchg
jg
push
ret
enter
inc
mov
rclb
mov
or
fld
pop
enter
les
xchg
xor
pop
and
cmpl
mov
lea
cmp
mov
les
and
cld
cmc
xchg
push
dec
hlt
into
lods
rorl
jle,pt
mov
lods
adc
cli
push
mov
scas
xchg
rclb
pop
insl
adc
mov
ret
std
out
push
mov
iret
lret
mov
call
je
lods
dec
xlat
sarl
jle
pop
testl
fidivrs
pop
movsl
lahf
lret
jbe
cmpsb
jns
mov
cli
gs
jl
insb
loopne
sub
insl
and
pop
test
movsb
mov
xchg
inc
inc
add
insb
xchg
js
mov
aam
mov
shlb
and
push
cs
lods
mov
mov
jle
add
out
jg
mov
fadd
jo
cmp
loope
xchg
incb
imul
ret
xchg
aam
pop
mov
cld
scas
or
sbb
ss
xor
ficoms
pop
lret
movsb
and
ds
xchg
xor
idivl
jbe
test
pusha
push
cmp
mov
imul
mov
push
int3
andl
shl
shl
and
add
sbb
test
sbb
add
add
add
push
sub
mov
mov
jg
mov
xchg
hlt
jle
ds
xchg
lods
insb
daa
movsb
fnstenv
mov
xchg
inc
test
imul
lods
daa
push
stos
in
mov
push
loop
push
stc
jmp
mov
std
lahf
call
fs
pop
lret
insl
pop
stos
mov
nop
shll
sbb
sti
cwtl
cmp
push
jno
mov
inc
fcmovbe
mov
dec
add
fmull
mov
fldenv
rolb
cwtl
call
or
push
data16
xor
mov
in
scas
mov
pop
mulb
push
pop
push
lock
push
int
sub
roll
in
daa
fsts
fmul
movsb
loopne
lret
nop
sub
jns
das
adc
shll
xor
mov
sub
inc
mov
push
cli
push
sbb
push
ja
enter
pop
lret
jl
in
mov
in
enter
mov
nop
or
stc
or
ret
and
xchg
leave
or
stos
fiaddl
mov
cmc
enter
orl
xchg
sbb
xchg
iret
cmp
jbe
fdivs
mov
add
stc
cmp
ret
test
mov
xchg
clc
test
out
mov
rcl
arpl
std
std
lret
jns
pop
imul
and
mov
ret
lcall
inc
fiaddl
test
mov
insl
icebp
xor
jge
shl
lret
bound
or
jns
xchg
movsl
dec
dec
sub
hlt
xchg
adc
cmc
jbe
addr16
sarl
mov
inc
cmpsl
idivb
cmp
cmp
cwtl
or
cmc
outsb
jge
rorb
hlt
pushf
out
pop
call
jle
add
mov
adc
mov
push
sub
pop
inc
mov
inc
ljmp
aad
stc
sahf
pushl
push
push
push
repz
rcll
inc
push
lea
jmp
fs
push
cmp
enter
or
xlat
shlb
out
adc
adc
add
shll
imul
test
mov
push
loope
or
mov
loopne
mov
out
xchg
mov
repz
shll
scas
imul
mov
dec
test
repz
scas
xchg
inc
sahf
add
lods
cld
mov
push
dec
lds
adc
add
pusha
jl
lock
add
movsl
pop
sahf
xlat
dec
mov
push
and
popa
fsub
xor
xchg
pop
xchg
dec
lret
movsl
sbbl
xchg
xchg
popa
ret
add
lahf
sub
and
subl
lret
hlt
insb
insb
xchg
popf
xlat
adc
mov
mov
nop
mov
mov
roll
mov
xchg
call
cmpsb
mov
loopne
imul
sub
dec
cmp
ljmp
xor
daa
push
sarl
xor
sbb
into
mov
cmp
inc
insb
in
sub
push
xor
lock
sub
push
adc
fwait
push
mov
sbb
pusha
in
xchg
test
ret
and
xchg
xlat
add
movb
add
xchg
test
into
push
pop
cmp
mov
test
sarb
inc
jo
and
test
fcomip
insl
int
xchg
mov
sub
pop
and
in
ret
test
fldl
subl
inc
stos
adcb
mov
mov
xchg
xchg
loope
sub
int3
or
adc
xchg
rclb
or
nop
stos
push
scas
js
push
je
mov
cmp
and
cmpl
mov
mov
lret
loope
lds
inc
test
add
test
mov
or
stos
mov
mov
hlt
cltd
mov
imul
cmc
lea
call
cmp
push
hlt
mov
add
testl
jg
mov
mov
push
or
dec
jne
and
adc
inc
xchg
mov
pop
mov
xor
sub
ja
test
cmc
mov
sbb
mov
out
fldt
xor
inc
arpl
icebp
mov
loopne
pushf
mov
aam
xchg
pop
sarl
mov
xchg
jmp
jbe
add
loop
iret
xchg
aam
pop
cmc
iret
stos
push
mov
push
xor
pushf
mov
cs
or
dec
inc
mov
xor
adc
pop
cmp
sbb
jg
out
or
imul
mov
nop
vminsd
shrl
ljmp
mov
push
lahf
enter
cltd
test
xchg
fstl
sub
push
aam
adc
roll
inc
mov
mov
mov
nop
flds
jb
cmc
insl
inc
and
into
fs
and
pop
xchg
insb
xor
out
mov
cmpsb
or
mov
mov
outsl
stc
push
mov
sub
cmc
mov
xor
jns
jb
pushf
or
mov
je
dec
mov
xchg
adc
fisttpll
cmpl
imul
stc
pusha
inc
test
xlat
push
mov
mov
enter
pop
das
mov
push
jns
rclb
out
pop
mov
inc
aad
jns
push
jne
mov
mov
adc
add
jo
cmp
mov
negb
jno
mov
cmpsb
jg
inc
add
jbe
push
add
rcrl
out
rolb
mov
xchg
add
pop
mov
imul
aas
lcall
test
lds
xor
mov
shrl
xchg
daa
pop
cltd
jp
fs
shrb
mov
mov
mov
enter
lock
sbb
pop
push
push
push
ds
xchg
mov
scas
mov
mov
rolb
jmp
fcmovnu
subb
mov
outsl
test
xchg
jae
fldenv
stos
mov
test
leave
inc
mov
jns
sub
pop
mov
fimull
add
lret
cld
mov
repz
popa
mov
js
or
xlat
rcrb
jns
add
loope
cmpsl
xchg
filds
xlat
inc
out
jge
or
xchg
data16
enter
aad
int3
in
jge
jae
movsb
leave
push
sbb
xlat
or
dec
add
repz
pop
fxch
in
push
mov
inc
movsb
imul
pop
scas
popf
rolb
lods
imul
stos
inc
icebp
sub
push
leave
mov
or
icebp
or
push
fcomps
out
push
repz
insl
fadds
fisubrl
mov
inc
cmc
jb
xchg
xchg
xor
movsb
and
shl
rorl
test
or
jmp
pop
loop
and
rorb
inc
push
pop
lahf
les
cmp
mov
mov
lock
jbe
pop
movsb
mov
dec
les
js
and
out
out
xor
jg
adcb
and
and
and
stos
fsubs
adc
cld
shlb
push
mov
mov
xor
pop
mov
test
or
push
std
test
test
sub
xor
adc
mov
mov
push
adc
mov
fisubrl
das
push
cmc
scas
je,pn
into
mov
pop
push
pop
push
mov
fists
push
popf
mov
xchg
lods
dec
rcrl
mov
pushf
mov
lds
or
lds
inc
mov
stos
xchg
inc
or
fimull
xor
xchg
nop
out
inc
and
test
rcr
orl
xlat
in
dec
sub
mov
push
sub
lds
lods
dec
imul
shlb
shrb
mov
lods
repz
pop
xchg
imul
scas
mov
mov
cmp
scas
adc
or
addb
xor
jge
stos
shll
shrb
mov
rolb
imul
or
mov
xchg
in
clc
dec
and
cmpsb
dec
sbb
inc
cld
mov
jno
cwtl
icebp
sarl
and
sahf
sbb
loope
push
cs
jp
inc
adc
xlat
lret
inc
daa
push
outsb
les
jbe
mov
cld
test
aas
or
lret
push
dec
adc
push
xchg
inc
and
fprem1
cmp
sub
cmp
jmp
test
mov
pop
adc
push
sbb
aas
outsb
or
movsl
ss
cmpsb
xor
rorb
iretw
fiaddl
mov
mov
dec
dec
test
leave
mov
fisubrl
sarl
inc
dec
nop
rcrl
or
enter
xchg
fldl
ja
lock
flds
adc
cwtl
aas
pop
mov
adc
cmp
arpl
jmp
fs
enter
insl
aas
loope
repnz
or
stos
inc
scas
mov
xchg
scas
jge
fidivrl
rcrb
adc
jno
adc
sti
mov
or
mov
lret
scas
jbe
pop
adc
xchg
mov
or
nop
sub
stos
push
xchg
pop
pslld
or
xchg
sub
lds
push
loope
imul
mov
popf
scas
jp
repnz
lods
jge
xchg
imul
lss
jmp
sbb
stos
push
adc
aas
mov
mov
inc
fsub
imul
fadds
call
sahf
lods
push
or
inc
aam
push
add
daa
icebp
add
xor
or
pop
inc
mov
pop
xchg
imul
jl
mov
mov
cltd
push
xchg
cmp
mov
xchg
jnp
hlt
movsb
mov
or
idivb
mov
xor
and
out
inc
imul
sbb
scas
cmc
cwtl
mov
cmp
insb
and
lods
sbb
dec
push
ficoms
les
hlt
je
rorl
hlt
das
push
and
es
mov
pop
clc
and
sahf
xchg
ss
call
mov
popa
sub
mov
jg
jmp
mov
std
test
adc
movsl
or
jge
movsb
push
sbb
or
cmpsb
fidivrs
out
xor
lock
test
mov
or
mov
push
inc
mov
sbb
mov
xorl
movsb
lods
int3
xlat
or
add
in
or
jne
mov
mov
leave
jp
jne
ljmp
imul
icebp
imul
rcll
fildl
xor
movsb
push
fcomps
popf
ret
inc
jecxz
jne
or
cmp
and
clc
mov
or
testl
mov
test
cltd
xchg
std
xchg
out
push
mov
push
js
repz
jecxz
inc
rcl
nop
lcall
lahf
lods
sub
loope
ds
and
fbld
rcll
jbe
cmpsl
js
cmpsb
xchg
loop
fiadds
mov
push
jae
cmc
add
xchg
icebp
push
mov
mov
adc
shrl
xor
lret
jne
sbb
adc
gs
hlt
mov
cld
mov
test
insb
adc
fimuls
xchg
adc
jb
into
xor
cmpsb
movsb
cmpsb
jp
and
push
rclb
mov
jp
decl
adc
ja
mov
stos
jl
and
push
aad
sbb
pop
adc
fsubrs
mov
adc
shrl
fwait
pop
scas
cmc
jo
leave
mov
movsl
inc
lds
out
push
mov
std
pop
mul
or
bound
xor
cmpsl
jecxz
mov
std
adc
cmp
stos
das
lea
mov
or
aam
mov
ds
daa
pop
not
loope
enter
arpl
adc
sbb
stos
inc
mov
nop
and
test
test
enter
add
fists
push
mov
int3
lds
inc
outsl
enter
out
nop
adc
iret
dec
stos
dec
xchg
leave
or
jo
fcoms
iret
rorl
imul
push
dec
jnp
lret
sub
mov
jg
sbbb
xlat
and
pop
sbb
cmp
arpl
mov
sahf
std
imul
mov
add
adc
sub
sbb
ret
mov
add
or
in
iret
dec
push
mov
sti
das
dec
dec
jmp
out
insb
jg
xor
cmp
shrb
rolb
add
movsl
xchg
sarb
loopne
dec
in
aas
cmp
and
inc
leave
mov
movsl
xor
sbb
stos
or
jno
adc
inc
jb
icebp
ss
nop
cmpsb
lods
adc
dec
add
pop
sbb
test
inc
xchg
push
jge
and
mov
outsb
mov
stos
and
out
es
push
xor
iret
nop
lret
or
adcl
into
mov
fcoms
int
movsb
lods
and
dec
add
pusha
aas
data16
cmp
int
imul
or
jne
dec
sub
adc
cmc
mov
adc
leave
rol
in
lods
scas
xchg
fcmovnbe
lds
nop
cmp
xchg
subl
and
lret
cwtl
or
mov
aad
or
mov
push
shrl
and
jge
xchg
enter
in
rol
mov
jno
movsl
jne
sti
iret
pop
int3
hlt
mov
ljmp
addl
mov
jp
push
iret
push
and
mov
lret
mov
into
pushf
imul
leave
rclb
and
pop
out
push
push
lcall
jb
repz
into
leave
inc
jmp
push
cmp
push
pop
test
leave
dec
aad
inc
test
aaa
cltd
ror
jmp
repz
push
test
test
pusha
lock
mov
mov
or
cmp
orl
fadds
leave
push
xlat
pop
cmp
fsub
out
sub
mov
inc
into
nop
leave
or
aad
hlt
mov
pop
sbb
adc
ret
outsb
popf
sub
aaa
jno
mov
cmc
shrl
imul
fists
stos
movsl
xchg
inc
cwtl
xor
adc
shll
xchg
movsb
rorb
ret
imul
add
test
lods
fsubs
dec
movsb
xchg
mov
imul
aad
adc
push
data16
nop
xor
pop
pop
pushf
mov
ljmp
shl
repz
push
push
push
scas
roll
cmp
les
add
cmp
or
test
sub
sub
movsb
pop
adcl
sub
dec
dec
and
cltd
mov
push
pop
fbld
xchg
mov
sub
mov
out
rcl
mov
sahf
and
lods
data16
push
xorl
rcrb
dec
push
fisubrs
pop
add
arpl
mov
repnz
or
inc
jmp
pushf
rcl
dec
dec
lods
test
sbb
cmpsl
mov
push
lods
lret
ficoms
mov
cmpb
out
dec
daa
xchg
inc
pop
dec
stos
iret
xor
loopne
mov
adc
mov
nop
les
xor
test
enter
scas
or
sbbb
int
das
xchg
test
adc
bound
shrl
repnz
pop
enter
ret
into
lcall
inc
xchg
sbb
cmpsl
loop
imul
lahf
mov
out
pop
int
mov
loope
sub
xchg
and
xorb
dec
shlb
push
and
jp
mov
cmpsb
push
push
fistl
clc
cmp
cmpsb
in
addl
popf
and
in
daa
scas
inc
push
pop
xchg
lret
fs
cmp
xor
pop
xchg
int
mov
dec
std
dec
lds
int
or
inc
sbb
icebp
adc
cmc
mov
sahf
mov
mov
pusha
leave
add
pushf
or
test
cld
nop
leave
mov
test
shl
xor
out
addr16
rcl
sbb
pop
pushf
and
mov
sbb
sbb
mov
imul
sbb
add
or
push
sbb
cmpsb
movsb
les
cmp
mov
int
push
iret
add
xchg
out
xor
in
cs
dec
cwtl
mov
xchg
stos
or
mov
test
jo
cmp
popa
xor
leave
shlb
pushf
aas
negb
add
shll
int
in
jge
push
cmp
aad
in
and
imul
xlat
shlb
popa
mov
mov
outsb
test
mov
call
fdivs
pop
loop
fisttps
mov
mov
adc
les
pop
nop
iret
adcl
lcall
inc
xor
nop
rcl
or
adc
pop
adc
aam
popa
or
mov
ljmp
shl
xchg
pop
adc
aad
xor
std
aad
mov
sbb
repnz
data16
loope
and
scas
mov
mov
cmc
enter
xor
mov
push
cwtl
adc
add
pop
mov
mov
adcb
xor
aas
inc
lret
mov
hlt
xchg
fs
inc
je
js
sub
inc
pop
fmuls
lret
dec
jb
inc
adc
fwait
ss
les
movsbl
fwait
lcall
arpl
push
das
cld
and
cmp
pop
mov
xor
cmpsb
int3
lret
jae
lods
mov
cmc
pop
sarl
lods
nop
pusha
insb
cwtl
unpcklps
out
lcall
jb
mov
pusha
fs
int3
cmpsl
in
dec
js
xchg
push
enter
getsec
hlt
lds
std
out
jae
push
out
scas
dec
je
or
and
add
call
sbb
pop
push
add
jecxz
into
push
jge
mov
cmp
push
mov
out
adcb
xchg
lret
jmp
mov
mov
jmp
add
in
sub
jle
je
xchg
shll
push
fidivrl
stos
imul
mov
fs
test
cmp
push
push
cmp
sbb
ss
mov
leave
push
mov
ffreep
inc
xor
psadbw
mov
std
hlt
cld
adc
lret
sbb
icebp
mov
ret
out
mov
nop
sahf
lcall
and
decl
push
imul
stc
cmp
clc
xchg
push
mov
dec
push
xor
xchg
inc
mov
rorl
leave
jne
sub
pop
adc
stos
push
push
stos
sahf
jbe
addl
add
fnstsw
inc
nop
xlat
and
test
mov
call
sbb
xlat
lods
xchg
mov
cltd
mov
cmp
shl
leave
xlat
fisubs
and
xchg
mov
pop
pop
xchg
or
push
out
bnd
cmc
push
sub
stos
jno
js
fsubrl
cmp
ja
xlat
fbstp
filds
stos
push
cmp
add
xchg
jno
into
jp
xchg
aam
add
adc
ret
pop
stos
jnp
cmpsl
xchg
scas
aas
repnz
inc
enter
sarb
vcmpss
ljmp
jmp
push
pushl
push
mov
cwtl
rcr
rcl
xor
fcompl
ficomps
shrl
push
stos
ja
lret
jo
sub
xchg
fnsave
fstpt
inc
lods
rcr
pop
xchg
adc
hlt
ret
outsl
dec
aad
inc
add
xlat
aad
jg
clc
test
lret
pop
or
add
aam
or
js
stos
test
shll
dec
adcl
enter
subl
cmpl
or
adc
mov
testl
stos
aam
popf
or
mov
popf
lock
dec
push
cmc
pop
test
adc
aad
push
movb
testl
inc
add
cld
xor
mov
xchg
or
push
nop
add
ret
push
test
xchg
das
loop
jg
subb
aaa
sub
ljmp
or
fmull
xchg
out
out
int
fistps
popl
movsb
mov
add
sub
cwtl
dec
xchg
adc
lcall
faddp
inc
insl
add
add
sbb
call
ret
int3
ficomps
outsl
in
nop
inc
jbe
fmulp
adc
add
jmp
mov
pop
pop
cmpsb
inc
push
into
lret
and
aas
jecxz
mov
inc
lcall
movsl
cmp
push
sub
dec
push
fsubl
mov
clc
cmp
in
mov
adc
push
mov
push
outsb
and
add
lods
xor
pop
xchg
test
out
cmpsl
iret
mov
call
jg
test
mov
mov
outsl
inc
inc
cwtl
mov
shll
pushf
adc
imul
rclb
xor
jo
das
or
daa
cmp
or
and
adc
ret
insl
inc
fstp
in
das
xchg
pop
popf
mov
push
jbe
mov
add
xchg
loop
dec
mov
imul
mov
subb
shl
push
sub
mov
mov
mov
push
cmc
lret
cmpsl
xlat
mov
lea
mov
lret
jle
xlat
inc
cmp
insl
cld
outsb
imul
and
movsl
jno
mov
arpl
cli
adc
sbb
dec
pushf
cmp
shrb
mov
outsl
call
rol
xor
pop
xchg
dec
hlt
mov
cmp
push
jb
xlat
pop
jne
ret
cwtl
imul
mov
or
xor
pushf
ret
outsb
addb
iret
add
lods
mov
aam
lea
jle
xchg
imul
imul
imul
fisttpl
scas
inc
xchg
ret
call
movsb
sahf
push
pop
mov
test
jp
jns
neg
int3
nop
rcrb
mov
xor
hlt
pop
int3
inc
aas
pop
xchg
daa
xlat
push
ss
test
mov
mov
fst
mov
andl
nop
ficoms
xrelease
mov
cwtl
or
dec
xlat
test
push
jle
sarl
jne
movl
dec
mov
cltd
addr16
push
jg
inc
cmp
int3
mov
cmp
test
jns
or
cwtl
sbbl
movsb
dec
lret
aas
add
mov
and
jg
into
sub
mov
inc
lods
sarb
and
mov
test
push
neg
and
push
inc
loopne
xor
fadds
mov
popa
xor
das
jae
lods
adc
jg
movsb
stc
cmp
sahf
int
mov
int
pop
push
push
or
jbe
fbstp
or
movsl
je
xchg
aad
out
lods
push
fdivl
push
fnstsw
mov
push
pop
mov
enter
shrb
pop
lret
enter
xlat
cs
pushf
nop
lret
iret
shlb
fidivrs
xchg
test
in
cwtl
add
push
lret
subl
jle
push
xor
je
int
addb
dec
fcomip
xor
stos
mov
sub
subl
fucomip
lock
fmulp
jno
mov
mov
nop
xchg
lea
mov
leave
and
lcall
jmp
test
pop
shl
jnp
push
xchg
lds
test
sbb
mov
jmp
mov
test
push
jns
test
push
orl
xchg
in
cli
subl
cmp
mov
mov
mov
fadds
push
mov
push
ret
in
or
mov
push
mov
lods
push
and
adc
mov
aad
call
shrb
pop
fiadds
dec
subl
inc
aad
adc
xlat
xor
aas
or
or
test
cmp
sub
or
or
mov
xor
inc
add
push
mov
pop
mov
dec
hlt
cltd
and
mov
test
lret
rorb
mov
enter
fisubrl
cmpsl
sub
ret
push
mov
cwtl
pop
in
or
call
ror
test
push
movsl
push
jle
fildl
lcall
je
scas
test
into
notl
sub
push
mov
add
sbb
jmp
mov
push
push
lahf
dec
aam
movsl
sbb
xchg
js
push
inc
cltd
add
into
call
in
jg
rorb
xchg
xor
imul
repz
ret
ror
add
test
imul
hlt
in
jbe
or
xchg
lods
inc
loopne
push
push
imul
dec
cmp
dec
and
rorb
popf
or
pop
popf
rcrb
inc
dec
dec
adcl
call
sub
movsb
push
mov
adc
cmpsb
inc
into
mov
push
jle
in
mov
xchg
jns
xchg
and
sub
add
cmc
mov
jo
mov
or
add
call
xchg
outsl
and
js
mov
stos
pop
mov
mov
pop
outsb
pop
mov
add
adc
lret
xor
test
adc
xor
pop
scas
dec
dec
mov
rol
and
dec
daa
enter
xor
add
add
mov
sbb
movsl
push
js
cmpsb
dec
adc
aam
add
iret
jge
roll
loopne
lods
xlat
ficoms
test
icebp
cmp
dec
test
xor
daa
cli
nop
ss
cltd
push
cli
dec
add
sbb
cmp
inc
lds
push
pop
movsl
mov
adc
mov
cltd
fs
push
adc
fisttps
cld
subb
lds
add
cmp
div
mov
sarb
xor
cmpsl
or
es
test
call
jns
cmp
push
test
and
mov
aam
loopne
faddl
or
lods
mov
and
pop
mov
sub
xchg
add
vpmacsww
fwait
cmp
ss
mov
nop
inc
enter
dec
mov
mov
xlat
push
nop
jo
jmp
test
orb
dec
das
push
sahf
in
aad
adc
mov
orb
and
cmp
xchg
icebp
xor
rcr
shll
mov
adc
or
xor
bound
pop
in
dec
lcall
in
push
push
inc
mov
dec
push
push
xchg
movsl
jo
cli
cltd
into
inc
imul
lods
call
lods
or
pop
cmovnp
ja
pushf
adc
sbb
test
movsb
loope
and
cwtl
mov
mov
push
mov
push
mov
nop
pop
hlt
fcomps
cwtl
pop
out
xchg
jns
push
mov
adc
or
or
cmpsl
loop
ljmp
aam
shrb
sub
std
pop
or
mov
jb
add
ja
cltd
inc
fbstp
dec
scas
xchg
and
in
fistl
mov
lcall
mov
push
cld
adc
mov
rol
or
xor
cmpsl
mov
inc
ss
shrb
and
jne
data16
sub
mov
xor
in
fstpt
or
dec
aaa
inc
icebp
and
pop
loop
ds
cmp
cmc
enter
jmp
or
pop
jbe
icebp
shrl
stc
and
xchg
fisubs
or
enter
loopne
daa
xor
mov
jge
sub
mov
rcll
mov
sbb
pop
cld
or
jne
pop
dec
and
add
test
mov
xchg
sub
stos
hlt
mov
mov
mov
test
jae
or
xor
lea
std
into
pop
repz
and
sbb
rcl
pop
test
push
xor
and
int
adc
stos
lret
add
cmp
aam
ret
test
pop
movsb
cmpsl
in
scas
cwtl
adc
outsb
push
outsl
movsl
movsl
xlat
mov
outsb
ja
xchg
imul
mov
bound
and
test
mov
call
aad
and
movsl
cmpsl
sbbl
pop
ss
jo
add
cmp
add
lret
outsb
add
test
stc
xor
push
mov
aad
xor
jne
adc
or
adc
enter
xchg
popl
sub
add
loopnew
or
mov
mov
mov
sub
adc
mov
insb
mov
sub
sbb
leave
into
xor
cwtl
add
out
jge
adc
orb
xor
repnz
adc
repnz
push
repnz
insl
xor
in
jl
in
xchg
add
es
imul
rcll
rcl
xlat
push
mov
aad
les
sub
cmpsb
and
push
fiadds
in
leave
pop
mov
int3
movsb
pop
or
imul
pop
push
or
retw
into
sub
cmp
jge
pop
cmpsb
pop
ds
mov
cltd
fmull
mov
jo
aad
gs
imul
xchg
add
test
adc
add
addl
mov
cltd
or
xchg
movsb
ss
inc
outsb
and
int
ret
inc
sub
mov
cs
bound
clc
in
iret
cwtl
adc
fcmovnu
movsb
push
cmp
cmpsb
loopne
les
adc
xchg
pop
jmp
add
push
push
sbb
aaa
cltd
mov
jns
sub
into
fcoms
aam
sbb
pop
aad
jnp
loopne
cld
stos
out
jbe
adc
add
test
ret
push
sub
or
orb
shll
lods
mov
arpl
xlat
inc
xor
sbb
mov
aam
push
pushf
mov
jnp
xchg
mov
and
rcrb
cld
inc
mov
fimuls
sub
lods
cld
mov
rol
pop
or
bound
or
cmp
adc
popa
gs
rorb
xor
cmp
mov
sahf
ret
outsb
cs
dec
sbb
lods
lret
mov
fstpl
inc
pop
inc
cmp
xlat
iret
xchg
int
mov
xchg
enter
movsl
out
sub
fdivl
ds
loopne
jbe
test
and
xchg
adc
nop
aam
shl
push
outsl
mov
dec
lods
ficoms
mov
cmp
mov
and
adc
aas
in
pop
add
les
xlat
es
mov
aad
push
shlb
shrl
sahf
or
adc
loopne
or
popa
jge
lods
imul
push
sbb
mov
sbb
hlt
shrb
push
sahf
in
movsb
adc
negb
mov
in
sbb
push
jecxz
add
xchg
cwtl
push
rcr
add
rcrl
inc
js
aam
mov
divb
movsl
rolb
int
add
movsl
jp
inc
add
loopne
call
popa
test
inc
stos
lea
or
cmp
jge
mov
jle
xchg
sub
mov
add
hlt
push
sub
xchg
add
xchg
push
mov
popf
xchg
mov
nop
add
or
cmpl
test
cmc
imulb
lock
movsl
mov
or
xchg
sub
cmp
mov
mov
add
testl
shll
std
mov
test
icebp
jg
test
mov
mov
mov
cmp
ss
push
idivb
mov
cmc
fbstp
or
lea
add
xchg
iret
popa
xchg
shrb
rorb
ret
hlt
push
lret
mov
xor
aas
sub
jbe
push
rol
push
into
xor
push
cmc
clc
in
cmpsl
pushf
shll
and
push
push
lret
xchg
ret
pushf
shl
js
dec
mov
adc
xor
mov
sbb
movsb
test
xor
rcll
sbb
lds
rcrb
das
data16
and
xorb
les
aam
imul
mov
flds
sbb
imulb
ja
adcl
pushf
or
int3
or
add
popl
je
and
test
pop
and
iret
leave
lods
push
jg
and
test
add
lock
mov
sti
pushf
test
subl
nop
mov
adc
or
test
stc
mov
dec
or
scas
inc
or
ss
push
mov
or
and
rorb
cltd
mov
add
add
rol
mov
int3
cmc
subb
hlt
jmp
or
mov
xlat
inc
mov
mov
repz
loop
adc
cwtl
mov
bound
nop
aad
push
xchg
mov
xchg
loopne
or
adc
leave
jmp
push
jns
mov
aam
lock
lea
cltd
orl
nop
mov
subl
call
andb
adc
fidivl
mov
test
xor
mov
lds
jno
pop
iret
in
or
cs
lds
mov
push
push
idivb
fcoml
cmpsl
lret
aam
dec
adcl
sbb
sarb
fcmovu
dec
sub
mov
inc
dec
das
lret
or
into
test
mov
or
mov
lret
mov
jb
sbb
or
lock
mov
sub
orl
repnz
cmp
xor
fnstcw
cltd
inc
mov
mov
stos
sti
jno
mov
cmp
jbe
inc
leave
out
ffreep
inc
and
sti
mov
fists
add
or
lcall
aas
test
push
or
js
xchg
push
or
lods
xor
mov
lods
pushf
or
adcb
int
ds
lock
mov
jnp
lea
mov
mov
enter
sbb
push
in
mov
jge
dec
mov
aam
xchg
in
int3
jl
or
mov
inc
rolb
dec
rorb
cmp
out
in
int3
or
adc
push
push
xchg
add
imul
cmpsb
mov
add
test
mov
pop
xchg
or
dec
out
into
mov
fsubr
jp
jp
movsl
enter
dec
mov
es
int3
mov
cld
mov
xchg
clc
cs
xchg
movsl
enter
mov
or
in
call
mov
adc
xor
xlat
inc
mov
les
mov
push
lret
push
imul
stos
inc
or
imul
lods
int3
and
dec
pop
test
mov
adc
lret
das
sub
pop
push
rolb
xlat
or
mov
jno
mov
into
hlt
xchg
stos
dec
leave
add
xor
test
mov
test
mov
add
mov
out
dec
adc
sub
and
dec
xchg
test
test
or
cmpsb
pop
pop
xchg
dec
push
or
pop
and
sub
mov
xor
enter
popf
push
xor
xchg
repnz
adc
test
arpl
mov
inc
out
hlt
jbe
fs
xchg
stos
dec
inc
cmp
stos
leave
dec
mov
fldl
movsb
mov
xchg
shlb
and
test
mov
add
push
dec
adc
js
ret
or
dec
dec
ret
cmp
cli
out
ret
adc
xchg
pop
and
mov
xchg
xchg
movsb
fmulp
xchg
cwtl
cmpsb
repnz
sarb
ret
cs
fs
dec
lea
mov
xchg
mov
loopne
cmp
cmpsl
and
test
in
rcrl
mov
jg
cmp
adc
xchg
mov
fwait
pop
xor
stos
or
mov
mov
outsl
jp
sbb
dec
mov
xchg
bound
addr16
add
mov
scas
rolb
pop
adc
or
fnstsw
sbb
lds
scas
enter
xor
adc
xor
enter
mov
cmpsb
inc
jl
sbb
pusha
xor
inc
fsts
stos
inc
mov
inc
nop
or
test
push
cmp
sub
xor
jbe
mov
adc
clc
xchg
lds
rol
in
lcall
call
test
push
jnp
clc
out
ljmp
nop
xchg
mov
jp
test
jae
fldt
xor
das
pop
lret
inc
inc
or
imul
cmc
mov
xchg
call
in
addl
sub
sti
mov
sub
cmp
or
imul
cmc
test
xchg
pop
inc
ret
and
push
dec
in
negb
aad
out
daa
jl
out
repnz
mov
pop
mov
cmpsb
loop
std
dec
movb
push
cmc
insl
mov
andb
rorl
imul
adcb
mov
xorb
ds
push
push
rorb
add
pop
xlat
cli
mov
mov
aas
enter
orl
push
xchg
dec
xchg
or
decl
pop
movsb
mov
lret
in
inc
cltd
aam
sbb
into
mov
sub
fsubs
js
out
mov
adc
add
and
shrb
movl
xor
mov
je
cmp
cmpsb
xor
and
push
adc
xchg
mov
sbbl
es
scas
pop
popf
inc
xchg
dec
xchg
cmpsb
pop
enter
mov
dec
inc
int3
int
lea
pop
cmp
inc
dec
icebp
mov
les
add
cmpsb
leave
adc
xchg
leave
inc
aas
mov
call
xchg
mov
clc
nop
imul
mov
repnz
and
jno
lods
mov
sub
adc
dec
mov
dec
fcoml
aam
xor
hlt
fistpll
in
sbb
lcall
cwtl
push
pushf
mov
cld
test
jb
jg
popf
outsb
jb
xchg
mov
sub
daa
aam
enter
dec
sub
and
jmp
popl
les
das
and
movsb
inc
movsb
aas
loop
jbe
mov
push
icebp
dec
inc
mov
sub
aas
xchg
fs
adc
sub
fiadds
mov
push
fldz
mov
out
mov
jg
pop
sahf
or
push
sub
fmull
adc
lds
frstor
out
xor
lods
xchg
popa
lahf
push
js
pop
call
cmpsb
std
es
adc
jl
lret
imul
pop
movsl
aad
xor
pop
and
pusha
push
dec
inc
inc
js
fidivrs
cmp
fistpll
subb
push
and
mov
fcmovne
xchg
mov
xchg
aam
jns
dec
test
lcall
and
movsw
imul
cwtl
mov
sahf
pop
push
xor
or
nop
sub
or
fsts
insl
mov
sub
xchg
icebp
and
dec
mov
push
cld
daa
ret
jmp
mov
inc
shlb
lret
pop
or
hlt
repnz
mov
orb
mov
jne
add
mov
aas
stc
jo
pop
popa
test
repnz
push
mov
cmp
xlat
pop
push
push
or
ret
shr
push
pop
lds
hlt
mov
shl
lret
cli
mov
into
pop
sahf
ljmp
shl
and
xchg
or
in
mov
sub
roll
ds
push
in
push
test
mov
fldl
dec
movsl
add
subb
sub
or
jp
pop
xor
dec
mov
iret
mov
enter
out
jmp
aam
addr16
mov
ja
loopne
decb
pop
fldl
mov
fisttps
jo
sub
les
fnstsw
in
movsb
movsb
aad
cli
bound
pop
or
stos
lret
rcr
scas
ror
sbb
shl
xchg
in
sbb
popf
lods
ja
shrb
add
inc
cmc
mov
push
xor
out
add
adc
mov
fs
rorl
jbe
fsubp
or
test
movsb
rolb
jno
inc
lods
xchg
xor
lds
inc
mov
mov
imul
lods
dec
ljmp
iret
pop
or
xlat
pop
rclb
loop
mov
push
lock
or
xchg
pop
icebp
jle
test
test
jno
mov
in
fnstcw
mov
push
repnz
es
ret
shl
pop
daa
sbb
cmc
pushf
gs
nop
int3
xchg
icebp
ja
or
mov
aas
mov
cmp
adc
push
stos
push
cwtl
out
mov
mov
dec
xchg
mov
inc
jmp
sub
das
add
push
and
stc
aaa
pop
cmpsb
or
xlat
mov
call
adc
push
hlt
mov
arpl
mov
outsl
push
jle
mov
testl
push
xchg
cld
xchg
mov
mov
hlt
out
mov
insl
divb
into
in
push
or
inc
outsb
mov
or
test
movsb
pop
les
inc
xchg
mov
sti
fisubrl
movsb
je
cmp
adc
push
xchg
xor
arpl
ss
sbb
adc
sub
pop
aaa
or
fsubr
cltd
testb
outsl
jae
out
mov
stos
sbb
int3
dec
les
jg
pop
lahf
xchg
rclb
inc
mov
scas
shl
stos
add
inc
test
fisubs
xchg
shrl
scas
sbb
mov
mov
xchg
aas
test
cld
adc
lret
cmp
xadd
test
stos
push
xorb
addb
xor
xchg
dec
iret
push
clc
hlt
je
adc
adc
push
dec
mov
mov
push
shlb
adc
js
hlt
cmpl
cmp
adc
add
push
mov
test
pop
hlt
xchg
xlat
shll
xor
fwait
pop
inc
pop
mov
lahf
push
test
fwait
ja
nop
in
or
ja
sbb
and
mov
push
mov
inc
loop
lds
or
rorl
addr16
push
add
mov
adc
dec
xor
test
mov
jg
sti
adc
mov
add
push
movsl
mov
sbb
inc
repnz
lret
adc
or
je
movsb
mov
stos
in
ret
rol
pop
stos
mov
jo
clc
dec
cmp
or
cwtl
mov
cmpsb
adcl
mov
aaa
rolb
mov
xchg
shrl
pop
int
scas
lds
stos
pop
mov
mov
mov
jp
sub
fisubrs
add
jmp
imul
imul
mov
loope
cmc
adc
add
into
xchg
cmp
frstor
mov
test
aas
jo
jl
xor
mov
push
sbb
test
mov
and
call
es
jb
push
fdivp
ret
roll
cltd
or
test
gs
pop
adc
mov
adc
mov
xorb
adc
std
je
cmc
or
or
xchg
cmp
ja
jbe
test
jg
cmp
cli
cmp
lea
push
lock
and
jle
and
inc
pop
fiaddl
mov
rol
cmpsb
mov
imul
aam
mov
or
call
inc
enter
pop
mov
int3
mov
or
or
rorb
and
add
pusha
push
cld
cwtl
pop
imul
jbe
mov
int
rcl
cmp
lret
inc
mov
xchg
push
lea
ss
push
xchg
loope
adc
subl
mov
lahf
fdivrs
xor
inc
popf
ret
mov
add
and
cmp
js
int
shll
outsl
xchg
aad
mov
xchg
lds
inc
rorb
rorl
add
add
scas
icebp
fistps
mov
adc
or
add
or
xchg
imulb
fs
jecxz
ficomps
inc
roll
xchg
mov
mov
cmp
mov
jns
mov
das
jns
lret
dec
pusha
xor
sub
mov
mov
and
pop
out
fimuls
xlat
pop
pushf
into
xor
sbb
ss
xchg
add
repz
movsl
cmc
outsb
add
negb
fstp
lret
pop
mov
out
lret
decl
aam
mov
hlt
lcall
and
mov
mov
mov
inc
mov
flds
std
in
xchg
test
xchg
add
jle
rcrb
add
into
push
sub
add
enter
filds
add
pop
cmp
cmp
and
xlat
inc
popf
adc
nop
lret
dec
repz
or
mov
stos
dec
adc
cmpb
or
lock
push
ret
pop
ret
cld
imul
xchg
or
jb
in
rolb
push
fists
xchg
xchg
pop
jecxz
jne
jmp
test
mov
inc
andb
cs
cltd
stos
or
std
test
inc
adc
pop
push
scas
lock
mov
imul
sub
mov
mov
jmp
jne
xor
mov
mov
jmp
push
ficomps
test
clc
neg
lcall
in
in
out
and
fnstsw
push
inc
shll
cli
xchg
fisttpl
insb
lock
imul
int
out
fnsave
xchg
jo
cwtl
sbb
test
and
lea
and
cltd
decl
or
movsl
adc
sub
movsl
ret
adc
cmc
xchg
cmpsb
xor
movsl
cmp
daa
push
call
or
sbb
call
push
mov
cmp
xchg
test
adc
xchg
add
inc
mov
xlat
imul
fldl
gs
pop
push
mov
daa
les
out
mov
xorl
add
pop
and
mov
jns
in
nop
lcall
test
sarl
mov
hlt
lock
add
pop
or
cld
orb
cltd
shlb
fisttpl
pop
sbb
mov
add
and
mov
stos
popf
dec
fldt
je
dec
jb
fsubrs
fdivrl
pop
and
lock
std
push
mov
and
ja
mov
mov
add
fsubrl
pusha
cs
in
pusha
dec
mov
or
push
std
xchg
test
cld
pop
lret
sub
push
test
add
cltd
pop
inc
inc
xor
lret
dec
repnz
add
rclb
add
push
lea
or
sbb
clc
jb
rcr
cmpl
scas
xchg
mov
shll
or
pop
pop
mov
mov
jecxz
xlat
mov
mov
push
test
dec
push
push
addb
add
push
cs
inc
stos
cmp
movsl
loope
frstor
sti
int
repnz
cltd
push
mov
mov
xor
fstp
cmpsb
push
test
dec
mov
fcmovbe
adc
mov
icebp
push
enter
inc
rolb
or
sbb
mov
lcall
pop
add
xlat
sarb
push
or
pusha
xor
xchg
inc
imul
or
fidivrl
loop
or
sti
enter
cwtl
in
mov
lds
adc
div
outsb
xchg
adc
je
jmp
fdivrl
adc
jb
jo
les
or
xchg
cld
aam
das
push
data16
into
jg
andb
imul
ror
cmp
fnstcw
inc
mov
mov
or
jno
mov
inc
mov
fwait
mov
sbb
dec
nop
js
and
cmc
adcb
imul
jmp
mov
aas
test
push
or
dec
dec
pop
sbb
fsubl
pop
add
test
or
adc
nop
push
adc
xchg
cmc
ds
xchg
je
jle
push
xchg
adc
cmpsl
mov
push
shrb
cmp
cmp
mov
clc
call
lret
ljmp
ficoml
ret
lahf
outsb
push
popa
lods
jo
xor
adcb
lret
mov
adc
test
rcl
imul
and
mov
shlb
mov
cmpsl
vucomiss
iret
push
sub
imul
mov
dec
orb
dec
rcll
mov
bound
aas
jle
xor
subb
call
into
rcrb
jnp
push
adc
in
xchg
stos
and
mov
insb
sarb
ljmp
fcmove
jp
push
mov
scas
jne
mov
cmp
push
dec
lods
icebp
dec
ret
inc
fs
mov
cwtl
outsl
mov
mov
adc
mov
push
mov
addl
mov
dec
or
das
push
add
enter
dec
cmpsl
pushf
xchg
dec
bound
outsl
add
mov
push
lret
test
add
lock
mov
repz
sahf
arpl
pop
mov
pop
jno
xchg
lods
sbbl
lahf
outsb
dec
cmp
addr16
imul
adc
or
pop
ja
jns
ret
test
mov
mov
jne
js
outsl
and
pusha
xchg
cmpl
mov
js
dec
xlat
mov
inc
addb
pop
movl
lea
rolb
mov
xchg
mov
xchg
popl
mov
add
jge
int
arpl
or
mov
sbb
rcl
push
cmp
cmp
pop
sbb
jmp
push
shll
adc
jp
ret
les
and
inc
ja
mov
jp
inc
mov
shlb
nop
inc
xor
jg
mov
dec
dec
in
iret
sbb
ds
fmull
mov
cmp
iret
pop
cmp
or
sbb
dec
int3
push
rcrb
sbb
jne
jb
xchg
adc
mov
movsb
pop
lret
and
aam
nop
inc
adc
sbb
jge
xchg
lds
jnp
test
mov
push
mov
ret
stc
les
iret
push
ljmp
dec
fcoml
or
xor
ja
fadds
sub
scas
shrl
test
test
outsb
rcrb
ffreep
dec
fwait
pop
pop
mov
in
pop
mov
xor
cmp
inc
or
push
orl
jl
int
hlt
dec
int3
mov
fisubs
mov
jp
cmp
imul
aas
xchg
inc
ss
adc
data16
xchg
inc
movsb
ret
xchg
cmp
nop
scas
push
rolb
adc
inc
xchg
xor
mov
xchg
fiaddl
fbstp
fdivl
orb
dec
addl
pop
je
mulb
les
test
and
enter
mov
in
adc
jnp
addr16
pop
dec
test
and
outsl
test
jecxz
cltd
nop
pop
jno
pop
pop
les
aam
sbb
mov
adc
stos
pop
shr
dec
xor
mov
nop
cmp
push
xchg
mov
lea
mov
mov
push
pop
lea
nop
xchg
cmpsb
mov
dec
dec
jae
sub
adc
insl
xchg
fcmovb
push
inc
adc
mov
mov
jecxz
cmpsb
pop
rcl
mov
xchg
test
mov
push
or
test
aam
mov
adc
js
outsl
jl
dec
mov
inc
jnp
add
mov
pop
andb
xchg
cmpsb
mov
mov
pop
mov
stos
aam
pusha
cmp
mov
adc
fsts
mov
dec
dec
mov
cwtl
and
mov
mov
imul
adc
int3
insb
add
jbe
pop
ret
and
and
mov
push
push
movsb
xor
xchg
mov
insb
lea
mov
add
fs
mov
mov
and
push
shrl
flds
arpl
inc
adc
adc
ds
in
mov
inc
inc
mov
or
sbb
je
lret
cmp
sbb
aad
ret
subb
and
dec
add
cmp
mov
mov
rcrb
cmpsb
enter
cmp
les
xchg
mov
aam
sbb
mov
mov
mov
inc
scas
sbb
clc
mov
cmp
pop
add
loopne
stos
jp
cmpsl
and
mov
add
mov
push
add
xchg
add
xchg
ret
je
adc
pop
mov
popf
push
push
test
test
add
insl
xchg
sbb
cmpsl
mov
push
pop
sbb
pusha
xchg
fwait
enter
faddl
xchg
pop
adc
xchg
mov
mov
add
and
pusha
dec
les
mov
mov
jl
ljmp
in
mov
add
adc
mov
xlat
lret
xchg
sub
je
imul
jo
sbb
and
hlt
sbb
mov
jg
ret
les
shl
lds
xchg
adc
mov
xchg
sub
push
test
xchg
imul
pop
stos
into
shrb
mov
call
in
imull
mov
cmp
or
aas
out
subb
mov
hlt
sub
std
fxch
xor
dec
xchg
cmpsl
mov
jl
pusha
call
jg
cmp
or
and
repz
adc
ret
push
fldl
xor
in
loop
xlat
jl
inc
call
out
sbb
cmc
mov
mov
xchg
cwtl
mov
test
jle
rcl
and
bound
mov
sbb
ret
add
sub
cmc
aam
push
cmp
xchg
mov
mov
jbe
shrb
pop
xchg
sbb
pop
stos
cmc
add
cmc
mov
popa
lea
pop
lahf
sub
les
cmc
pushf
in
mov
add
test
jae
sub
lds
out
imul
mov
flds
shrl
pop
in
mov
mov
fmulp
insl
inc
shl
xchg
cwtl
sbbl
insb
push
out
stos
cli
mov
fsubrs
xchg
filds
addr16
nop
cli
push
test
ljmp
mov
scas
rorl
jecxz
stc
xchg
push
repnz
mov
cmp
dec
push
icebp
mov
push
pusha
in
pop
mov
or
xchg
or
jle
in
test
test
xor
jae
sub
ret
les
int3
sbbl
shrb
jle
cmp
fdiv
lods
mov
inc
fcmovnu
mov
xchg
cli
sub
fisttpl
xlat
js
test
xchg
lahf
or
lds
sarl
mov
mov
orl
push
repnz
hlt
xchg
mov
xor
jno
jbe
lret
adc
xchg
cmp
dec
js
repnz
dec
shll
sub
insl
fcompl
in
adc
and
cmp
shrl
lods
scas
and
roll
je
iret
out
or
aaa
xorl
and
testl
addr16
lea
or
xchg
push
xchg
sbb
sahf
adc
mov
pop
jnp
les
dec
iret
out
push
dec
jb
test
xor
inc
add
pop
mov
cmp
stos
les
inc
or
mov
push
xlat
or
ret
mov
cmp
popf
stos
ret
mov
or
jmp
test
lret
xlat
shlb
jl
jne
je
mov
mov
mov
test
add
pop
xchg
mov
inc
bound
scas
hlt
adcb
xchg
and
repz
adc
mov
xchg
in
daa
shll
dec
adc
push
cmpb
or
xlat
stos
mov
rclb
scas
cwtl
push
add
or
cmpsb
inc
je
lock
out
mov
hlt
cwtl
or
push
cmp
push
adc
ss
sub
shrb
flds
rclb
dec
adcl
cld
aad
and
das
cmp
adc
mov
sbb
push
movsb
xor
ljmp
push
or
nop
enter
mov
or
cwtl
sub
int
adc
mov
or
andb
movsl
mov
mov
and
nop
mov
adc
iret
mov
mov
adc
xchg
imul
xchg
xor
cmc
mov
xlat
loop
pop
and
jne
fsubs
stos
mov
hlt
movsl
out
xchg
daa
dec
add
rolb
and
lret
je
jns
pusha
lods
inc
or
mov
adc
mov
fisttpl
int3
xchg
add
cwtl
sub
scas
or
cmp
fdivrs
flds
mov
cmc
or
pop
fcmovnu
inc
cmp
stos
mov
rclb
lret
fcomps
mov
xor
push
sti
sub
sbb
mov
dec
xor
cmp
pop
outsb
xchg
cmc
jnp
outsb
aam
addb
push
or
std
insb
dec
jnp
jle
xor
adc
xchg
adc
gs
stos
jo
lret
filds
iret
sti
xor
lret
sbb
adc
and
add
cmp
imull
cmp
mov
leave
cmp
xor
aaa
cld
xchg
dec
ljmp
cld
insb
inc
out
popf
jl
cmpsl
add
cmp
in
xchg
std
int3
int
into
or
sbb
add
adc
stos
push
imulb
dec
sbb
jo
sub
stos
es
bound
xlat
out
lea
dec
push
pusha
mov
sub
sbb
inc
mov
js
popl
jo
mov
in
jno
fmuls
pop
mov
or
sub
push
push
shlb
fadd
lcall
subl
jle
add
ja
loop
shlb
orl
nop
mov
mov
xorb
pop
rol
lret
pop
push
mov
mov
pusha
lcall
push
push
and
mov
insb
push
shlb
inc
xchg
std
mov
into
imul
cmp
push
cltd
sarb
or
cmpsb
pusha
scas
and
sbb
mov
ja
jne
cmp
les
inc
imul
dec
ret
cltd
into
movsl
mov
xchg
push
mov
pop
orl
push
fidivrl
lock
jno
xchg
divb
outsb
add
cmp
jmp
xor
xchg
lcall
xchg
push
push
arpl
or
bound
mov
xchg
enter
hlt
mov
mov
jmp
cmpb
push
in
mov
lods
imul
sbb
xchg
sbb
sbb
adc
test
test
insb
or
int
loopne
add
aas
pop
repz
inc
or
cld
sbb
push
mov
or
jle
xchg
cmp
xor
imul
repnz
or
call
cld
ret
ret
cwtl
cmp
fmul
mov
mov
scas
sub
pop
lea
push
jecxz
or
mov
imul
mov
mov
inc
xor
inc
test
jmp
scas
or
jge
cmp
and
shlb
or
pusha
rol
insl
outsl
sti
mov
xor
push
cmp
or
mov
lret
inc
xor
mov
mov
push
mov
and
ljmp
stos
out
pop
scas
loope
xchg
adc
inc
mov
or
sub
stos
mov
sub
push
js
mov
mov
in
cli
push
test
sbbl
jno
push
push
sbb
pushf
mov
fdivrs
cltd
sbb
cwtl
add
lret
bound
adc
insb
dec
xor
jae
nop
mov
lret
mov
push
hlt
ret
sub
jg
fcmovb
or
imul
or
cmp
ret
mov
outsb
inc
outsb
xchg
and
cmp
sarl
xchg
je
hlt
popa
mov
sbb
xor
xor
and
pop
adcl
inc
inc
in
adc
rol
rcll
das
loopne
in
rcl
stc
add
imul
call
jns
nop
sbb
fcoml
test
mov
outsl
push
cli
or
inc
xchg
xorl
loop
jmp
adcl
adc
or
inc
jl
mov
sub
jl
adc
mov
mov
clc
mov
xor
adc
mov
movb
call
stc
and
mov
insl
xlat
pop
xchg
pusha
dec
adc
pushf
test
loop
fcomps
cwtl
xchg
xchg
and
int3
cwtl
xchg
or
mov
push
les
mov
fs
lds
xchg
lods
pop
mov
inc
pusha
xchg
push
adc
nop
cwtl
push
addl
idiv
je
and
inc
inc
gs
inc
fcoms
mov
popa
or
push
scas
pop
fidivrs
scas
imul
ret
nop
push
push
or
call
add
push
negb
in
mov
int3
adcl
nop
rorl
in
mov
cltd
cld
lea
mov
mov
fmuls
ret
mov
mov
jo
leave
cltd
mov
mov
jl,pt
aam
xchg
jle
cmp
in
ret
inc
insb
cmp
rclb
jns
mov
and
fcoms
or
mov
push
push
ret
iret
mov
shlb
add
fldenv
test
call
scas
shrl
popa
cmp
dec
out
xor
in
les
push
cwtl
mov
lret
cmpl
les
lret
xor
cli
shr
push
into
subl
and
lods
or
ljmp
push
sbb
xor
ss
or
sbb
psrlq
movl
sbb
xorl
jg
loope,pn
mov
lahf
ror
nop
sub
fldl
aas
lcall
jnp
in
hlt
imul
jle
sahf
ljmp
js
or
fcomip
insl
imul
mov
add
ret
lods
pop
push
mov
lds
jmp
push
mov
lret
shrl
test
mov
cs
sarb
xchg
shll
push
stos
xor
ss
std
out
jg
jle
jl
repnz
mov
mov
xchg
iret
xchg
shll
add
mov
and
scas
pushf
jl
lods
cmp
addb
xchg
jmp
clc
fistpl
popf
cmpsl
or
xor
aad
ja
sahf
andb
bound
test
rcrb
daa
fbld
lahf
nop
cmc
and
sahf
lds
inc
ds
jmp
in
or
ljmp
push
or
xchg
ds
mov
mov
rcrl
and
xchg
mov
pop
shrb
aam
fisubs
cltd
push
daa
mov
push
xlat
cmp
les
add
addb
loopne
jle
adc
aas
pusha
jb
and
cmpsb
icebp
or
inc
fsubrs
arpl
stos
nop
mov
xchg
xchg
fisttps
repnz
add
dec
imul
xor
mov
sub
push
aas
pop
jg
test
scas
in
loopne
scas
inc
and
in
loope
cmpsb
ljmp
and
insl
pop
or
mov
call
stos
dec
lods
pop
mov
lcall
pop
jge
or
mov
inc
andl
in
enter
test
fidivl
mov
enter
icebp
jl
cmp
jle
lretw
mov
and
xchg
add
push
mov
test
mov
mov
push
mov
clc
xchg
nop
pop
sub
pop
inc
sub
mov
ja
ret
cmpsl
call
push
push
mov
lods
mov
pop
ds
pop
mov
pop
aam
fs
movsb
xchg
cmp
mov
xchg
jle
les
cmp
jb
xchg
nop
push
sbb
mov
adc
or
or
lods
lea
stos
movsb
insl
cmp
int3
dec
mov
test
and
hlt
cld
or
test
outsl
push
mov
jne
stos
mov
adc
fsubl
push
jl
inc
fstp
pop
insb
mov
inc
iret
aas
out
loope
in
xchg
shl
test
push
lods
hlt
test
ret
adc
mov
call
mov
fcompl
imul
movsl
cmc
lea
sbb
aaa
push
repz
sub
rclb
roll
lods
int3
into
cmpsl
mov
fsubl
jb
push
push
inc
mov
call
dec
ret
xchg
mov
stc
xchg
dec
and
sti
lods
or
push
insl
xchg
rcrb
sub
and
push
push
cmp
add
lods
popa
dec
push
xor
sub
stc
out
dec
ret
mov
or
cmpsb
jp
outsl
stos
push
or
shll
lds
rorl
adc
mov
pusha
xchg
push
lods
push
in
ds
push
xor
mov
inc
adc
test
mov
pushf
mov
enter
xor
pop
je
test
mov
shrb
or
xor
fiaddl
xchg
push
js
ror
into
mov
roll
xor
cltd
push
push
call
inc
push
fistpll
add
add
into
jle
mov
push
cmpsl
jo
add
pop
lret
enter
jg
add
xlat
push
insl
jecxz
lea
mul
movsl
lock
arpl
or
pop
pop
mov
into
stos
inc
sbb
jo
sbb
push
loop
iret
cmc
clc
xor
movl
les
sbb
jle
push
dec
mov
add
fwait
add
xor
mov
stc
xor
xlat
sbb
push
or
and
and
cltd
xor
test
jnp
inc
lods
and
adc
test
testl
sub
movsl
cmp
xor
test
enter
pop
in
movsb
push
pop
cmp
push
in
call
imul
mov
lret
loopne
cmp
dec
mov
aad
inc
cmp
or
mov
cmpb
mov
dec
inc
cmp
mov
test
lods
shrb
arpl
lret
repnz
shlb
lods
xchg
scas
xchg
stc
aas
sbb
xchg
pop
in
aas
jae
xor
pop
lock
lcall
jp
movsb
jno
mov
pop
loopne
mov
cmp
sub
imul
dec
test
or
mov
aad
testl
repz
mov
or
mov
or
dec
vmovsd
xchg
dec
fsub
or
xchg
inc
inc
mov
ret
les
and
add
hlt
pop
push
push
rcll
lcall
fwait
jl
sub
inc
push
out
and
mov
xor
imul
adc
push
arpl
pop
enter
cltd
stc
mov
cwtl
xchg
mov
test
fnstcw
dec
mov
out
and
or
push
pop
pop
stos
mov
push
cmp
mov
fsubs
mov
adc
push
pushf
pop
mov
rorl
lcall
xor
push
xchg
cmc
ret
mov
adc
mov
and
rorb
test
rcll
or
fldenv
sub
les
aaa
rcrb
inc
shrl
or
cmc
stos
mov
xchg
js
and
push
sbb
imul
or
lret
or
add
loop
push
imul
hlt
jno
or
js
cmp
ss
sub
jnp
loopne
rcr
lods
mov
shlb
mov
xor
mov
push
mov
push
mov
aaa
daa
rcr
rcll
mov
fistps
dec
push
daa
repnz
push
insl
sbb
cmp
test
enter
xor
inc
mov
push
fisubs
fistpl
lods
push
shl
test
test
test
leave
insb
rorb
les
nop
enter
mov
xchg
pop
pop
lds
inc
lea
leave
stc
js
lcall
jle
mov
loopne
sahf
shrl
or
jg
test
lock
mul
loope
xor
lea
cmp
xor
sub
mov
mov
out
inc
mov
icebp
enter
mov
enter
nop
dec
sub
test
out
gs
jb
pop
int3
cltd
mov
cmpsb
es
int
or
int
jb
adc
xchg
dec
fisttpll
bound
lahf
fsub
xor
jno
out
xor
arpl
out
xchg
mov
popf
or
mov
or
mov
test
repnz
pop
sbb
ljmp
shll
or
out
push
xchg
jle
lcall
dec
xor
xchg
mov
movsb
nop
nop
repz
lds
fidivs
adc
enter
or
dec
insb
vpsllq
or
adc
movsb
xor
dec
adc
or
mov
scas
jne
scas
or
test
sbb
lods
mov
or
sub
xor
cmc
or
aad
mov
in
movsb
xchg
ret
nop
ja
lods
xchg
fistpll
jle
mov
cwtl
stos
push
mov
repz
mov
aas
movsb
xchg
test
mov
rclb
data16
add
fsub
xchg
je
ja
pop
sarb
enter
leave
xlat
xor
jp
bnd
mov
aaa
faddp
insl
shrb
fistl
fidivrs
in
and
xchg
jg
fdivs
inc
mov
stos
shlb
dec
add
sti
nop
scas
fwait
mov
subl
push
xchg
xchg
fdivrp
cmpl
cwtl
ds
outsl
jo
fisubl
dec
lret
pop
push
movsl
xchg
stos
outsb
loop
and
ljmp
pusha
mov
xlat
adc
cs
mov
mov
out
leave
inc
xor
push
call
dec
jmp
scas
rcrb
cmp
mov
cmp
fidivrl
pop
mov
test
test
add
adc
orb
jmp
fidivrs
xchg
out
jnp
push
jae
shll
jle
and
daa
sti
inc
aaa
inc
mov
cmpsb
sub
push
push
pushf
rorl
dec
stos
shlb
xlat
adc
mov
mov
sbbl
fimuls
movsb
jae
inc
mov
mov
mov
testl
jle
adc
test
jge
mov
mov
test
mov
or
enter
lcall
xor
push
and
mov
insl
sbb
pop
stos
mov
lods
test
dec
test
sub
stos
mov
test
aas
mov
jns
and
adc
jb
es
rclb
cmpsl
test
icebp
mov
jae
insb
mov
movsb
push
jecxz
iret
aas
test
sbb
lcall
loopne
jl
jnp
nop
popa
mov
jmp
lret
mov
or
push
xchg
les
jae
fdiv
lret
dec
fidivl
movsl
pop
out
lret
cmp
cmpsb
mov
mov
mov
sti
fs
mov
mov
es
ret
fiadds
jp
inc
dec
inc
arpl
addr16
aam
inc
mov
push
sub
or
mov
add
push
cwtl
sahf
imul
mov
cmc
xchg
scas
or
aam
enter
mov
int3
mov
mov
xchg
mov
cltd
roll
xor
jp
movsb
sub
nop
fcomps
ja
data16
sahf
mov
shll
mov
mov
sbb
adc
fstp
loope
hlt
jo
hlt
incl
fsubrp
adc
outsb
cmpsl
sub
rcl
or
sbb
rclb
lret
sub
orb
mov
pushf
xchg
cltd
jg
adc
fstp
fbld
push
push
leave
nop
clc
lds
lods
outsb
or
fsubrs
fildll
lods
mov
pop
push
sub
inc
into
sub
sarb
int3
dec
out
add
in
int
inc
push
and
cli
push
or
mov
or
lret
adc
das
cmp
shll
iret
mov
inc
fstpt
xor
dec
lods
fdivl
xchg
das
adc
ficoms
push
mov
inc
or
incl
rorl
mov
scas
pop
sti
mov
sbb
out
adc
daa
aad
pop
nop
sbb
pop
mov
int3
push
je
add
mov
outsb
and
or
shrl
push
cltd
shrb
add
lahf
sub
and
xor
test
stos
lock
mulb
in
adc
adc
hlt
jmp
test
lock
push
or
mov
or
jne
shl
sbbl
loopne
mov
stos
popf
jmp
add
cs
rorb
jo
and
into
cltd
rcrl
or
and
add
outsb
aad
xchg
jo
push
aas
je
lret
jl
cmp
mov
fcoms
inc
sbb
les
add
jo
sahf
into
jbe
inc
xchg
mov
outsb
sub
inc
xchg
inc
pop
cmpsl
pushf
mov
dec
out
jge
mov
jl
test
lcall
adc
xlat
int
cmpsb
lods
movsl
mov
dec
imul
pop
and
pop
inc
and
mov
mov
mov
jl
out
icebp
std
shlb
mov
sub
ss
push
and
in
pushf
movsb
add
aad
mov
adc
popl
inc
clc
mov
in
mov
rorb
cmp
push
lret
test
fcomps
mov
sbb
dec
push
pop
cli
pop
aas
pusha
cmp
lret
adcl
inc
cmp
add
faddl
ficompl
cmc
scas
jecxz
fsubrs
jo
fwait
push
out
or
fldenv
mov
inc
das
push
int
ror
cmp
je
test
cmp
pop
jbe
adc
inc
lret
pop
push
movsb
push
ret
popa
aas
lods
mov
ja
fstl
nop
dec
in
or
inc
hlt
lods
cltd
jle
icebp
hlt
sub
imul
xor
aad
ds
push
sti
insb
ljmp
adc
scas
loopne
dec
ds
push
ror
push
mov
inc
int3
mov
dec
movsl
mov
jns
stos
sub
or
xchg
call
fmuls
scas
mov
xor
sbb
or
fdivrl
loope
jl
imul
mov
mov
or
pop
inc
sub
push
out
mov
lret
pop
int3
xchg
mov
push
jbe
inc
cwtl
cmc
jae
shrl
insl
adc
fildll
or
adc
out
rolb
cmpsl
push
push
push
loope
fwait
adcb
sub
mov
lahf
jp
and
lahf
fmuls
adc
stc
sbb
in
inc
lock
fldlg2
jmp
push
jl
popf
out
lock
sub
cwtl
bound
xchg
fsubrl
dec
data16
and
int3
cmp
mov
jmp
stos
pop
in
mov
in
jns
mov
cmp
lret
jae
in
jno
cmp
inc
fdivrs
cmp
fildll
hlt
enter
push
mov
fldcw
das
mov
and
scas
push
xchg
mov
les
leave
inc
mov
mov
les
sub
sti
aaa
fidivrl
jne
mov
mov
shrb
inc
jno
in
inc
or
clc
or
adc
leave
add
pop
lods
nop
in
pop
js
and
leave
ja
or
in
and
cmp
push
neg
in
shlb
loop
enter
or
jnp
inc
shl
daa
js
lret
cmc
mov
mov
call
insb
add
push
call
in
sub
push
and
rcll
sbb
shlb
pop
sub
mov
xchg
cltd
inc
test
test
jmp
popf
pusha
mov
xchg
and
negl
mov
les
ss
xchg
xchg
adc
push
sub
jmp
stos
cld
mov
hlt
mov
sbb
fdivl
or
nop
scas
lret
jae
into
fwait
scas
mov
pop
add
and
stos
push
lret
fisttps
lods
in
xchg
imul
imul
lret
test
or
mov
xchg
scas
pop
sahf
sbb
mov
loope
inc
pop
testl
mov
shr
ret
cmpsb
mov
loopne
cmpsb
cmp
rolb
or
pop
aas
push
adc
rorl
sbb
negl
and
insl
mov
mov
or
out
bound
mov
call
inc
or
roll
cmpsl
imul
ficoms
xor
or
dec
cmp
fdivl
stos
inc
inc
aas
and
dec
inc
test
outsl
jo
pusha
xchg
mov
loopne
mov
lds
jb
inc
lret
fldlg2
ficomps
fisttpl
fildl
dec
push
shll
mov
js
lret
loop
rolb
add
or
lea
sbb
adc
cmc
test
ljmp
cmp
push
or
jl
ret
test
aas
xor
iret
mov
add
mov
loope
scas
movsl
cmc
xchg
inc
push
add
or
stc
push
rol
mov
shll
mov
leave
mov
loop
sub
add
data16
fnstcw
or
cld
xchg
adc
jl
ret
dec
in
inc
or
aad
dec
mov
fcmovnu
je
push
pop
stos
je
cmpsl
mov
xlat
adc
outsb
mov
out
mov
stos
mov
mov
fwait
mov
sbb
in
enter
js
or
xlat
sub
dec
test
or
aas
hlt
add
mov
mov
cwtl
cmp
shlb
hlt
xorl
mov
into
int3
lahf
nop
adc
andb
nop
mov
mov
call
test
push
add
hlt
test
test
jbe
jns
andb
aas
loope
int
dec
pop
scas
jbe
add
mov
cwtl
xchg
cld
sub
inc
dec
lds
out
xchg
pop
enter
xchg
inc
mov
inc
dec
imul
or
add
mov
push
imul
mov
inc
xchg
push
sbb
sbb
xorb
test
pop
push
xor
dec
mov
push
xchg
cld
pop
jmp
push
push
int3
data16
xchg
mov
mov
fistpl
push
jmp
fildl
mov
dec
sarb
inc
push
add
xchg
add
sbb
lret
rcr
scas
pop
sub
push
popf
xchg
mov
push
or
mov
cli
aas
inc
sbb
nop
add
inc
jne
movsl
shll
outsl
mov
jp
fiaddl
or
roll
arpl
xchg
je
jns
and
incb
rorb
fsts
push
jle
xchg
push
stc
aad
dec
add
test
push
pop
cwtl
jnp
xchg
inc
ficomps
add
aaa
enter
add
movsb
test
lock
mov
pop
icebp
xor
mov
pop
xor
fsubr
push
jae
leave
ficomps
mov
leave
xchg
lods
mov
dec
test
test
cmc
xchg
xchg
and
add
cmp
je
mov
das
dec
lret
xchg
cmp
mov
cwtl
push
ret
sub
cmc
mov
lods
push
les
loop
adcb
jl
mov
mov
add
fbstp
dec
int
stos
sub
icebp
cmpsl
pop
push
push
jg
loopne
loopne
xchg
call
lods
adc
fsubrl
sub
in
mov
fimuls
rolb
fdivs
out
cmp
mov
out
ret
xchg
mov
push
push
mov
jne
mov
repnz
xlat
sbb
jge
sbb
movsb
xor
add
mov
jg
mov
loopne
out
icebp
push
mov
inc
test
call
daa
jnp
test
clc
int3
sub
popa
add
cmp
xorb
push
cmpsb
cmpsl
push
pop
jle
inc
mov
test
inc
mov
xchg
pop
outsb
inc
addl
cli
lret
fstpl
pop
or
push
aad
rolb
or
call
sub
subb
mov
mov
pop
xchg
pop
mov
xchg
lods
cltd
loopne
fcompl
or
xchg
call
jg
dec
iret
sarb
or
inc
outsl
xlat
loop
cmp
shrl
sub
inc
mov
or
sti
imul
jmp
or
mov
leave
xchg
xor
inc
push
call
and
xchg
call
fnstcw
in
adc
xchg
arpl
adc
aaa
jns
lcall
lret
mov
push
push
imul
cld
cmc
in
rcl
push
pop
sub
insb
sbb
sub
mov
ret
mov
int
xchg
push
push
scas
dec
cmp
dec
xchg
or
dec
push
stos
push
or
mov
pop
push
mov
sarb
adc
jl
adc
movsb
add
loopne
rcl
aad
inc
movsb
mov
push
divl
or
mov
loopne
cwtl
cmpsl
or
shll
mov
pop
lcall
sarb
leave
pop
jbe
push
mov
xchg
xchg
push
jnp
and
repz
repz
fwait
sbb
in
aad
outsl
leave
je
fists
mov
out
fstps
mov
sub
test
pop
mov
rorl
sbb
movsb
dec
xor
mov
xor
push
or
ljmp
in
sbb
push
stc
mov
lods
mov
cmc
scas
rcl
or
jmp
inc
inc
add
test
je
leave
xchg
jecxz
xchg
cmp
imul
lret
sbb
adc
xor
sbb
mov
push
lds
test
inc
popf
add
mov
adc
mov
cld
jne
out
sub
sbbb
xor
lret
pushf
adc
xchg
cmp
shlb
adc
std
orl
add
pop
sbb
iret
push
cmp
decb
or
push
mov
jl
mov
in
mov
or
out
aad
rcrl
sbb
les
mov
insb
stos
out
pushf
xor
cmpsl
xchg
idiv
cmp
insl
popf
xor
movsl
pop
ret
jbe
mov
inc
xchg
xor
adc
lret
lods
push
push
jmp
add
mov
aam
mov
add
fisttps
or
jge
js
jae
inc
pop
bound
dec
adc
fcmovbe
or
ja
in
es
sbb
jge
out
iret
shrb
jnp
rcr
or
hlt
lret
mov
mov
ljmp
popf
out
inc
imulb
and
mov
scas
mov
adc
lahf
ret
mov
cmc
sahf
flds
sub
movsb
mov
pop
mov
mov
inc
rorb
rcr
jnp
xor
rcr
xchg
lods
pusha
add
inc
jae
and
xchg
ljmp
popa
js
push
cmp
dec
sarl
mov
pop
sti
push
in
lods
adc
inc
into
rcl
xchg
mov
lods
insl
sti
test
loopne
hlt
sub
gs
aad
imul
cmpsl
rcrl
xor
in
rcrb
cmp
mov
loop
and
rorb
xchg
fstpt
add
mov
ret
int3
mov
cmpsl
imul
mov
or
mov
jne
jno
sar
xchg
cmpl
jns
or
jecxz
push
mov
pop
fwait
lods
pop
test
or
xchg
and
mov
xchg
mov
mov
mov
cmp
sbb
lock
adc
inc
or
add
xchg
out
fucomi
xchg
mov
lret
fs
add
adc
mov
adc
les
xchg
xor
orb
imul
inc
test
mov
mov
push
or
xchg
pusha
lcall
add
cmpb
popa
loopne
mov
out
cmp
popa
negl
mov
mov
popa
add
sub
push
fnstsw
mov
clc
sarl
adc
dec
mov
into
mov
add
ficoml
and
or
rdmsr
fsubr
mov
call
or
movsl
xchg
cmp
dec
mov
inc
mov
inc
test
test
rorb
insl
push
pop
sbb
sbb
insb
or
scas
rcll
jg
outsb
ljmp
sbb
faddp
mov
les
xchg
and
orb
lods
jl
xchg
into
and
pop
inc
xchg
push
lock
add
test
mov
std
xchg
shlb
int3
enter
xor
aam
ljmp
lea
cmp
std
inc
imul
mov
mov
jnp
scas
cmp
lods
andl
int3
sub
sbb
mov
aad
out
jns
repnz
fdivrs
mov
iret
cmc
pop
or
enter
vpmaxsw
jbe
adc
fs
dec
or
or
pop
and
push
fsubl
mov
pop
les
test
pushf
xchg
repz
sub
jle
xlat
mov
mov
xchg
xchg
pop
push
jno
ret
nop
pop
cmpsb
dec
xchg
push
mov
and
cmp
pushf
cmp
int3
jno
leave
out
into
mov
lahf
jmp
outsb
mov
xchg
push
lods
je
pop
jne
jae
sbb
out
cmp
push
xor
test
setge
test
hlt
call
enter
loopne
loope
cmc
inc
cmc
cmpsl
stos
cmp
push
and
nop
jecxz
into
ds
in
mov
sahf
mov
mov
aam
orb
cwtl
xchg
fsubrs
call
add
rcll
outsl
mov
pop
out
or
subl
sarl
int
pusha
and
fsubl
mov
mov
loopne
enter
lods
lret
sub
cmpsl
pop
jno
in
cwtl
inc
mov
push
xchg
mov
push
incl
mov
xchg
push
inc
or
filds
pop
inc
mov
lods
xor
cmp
jge
das
rcrb
jb
pop
iret
dec
bound
call
fwait
pop
cld
or
test
ljmp
shlb
mov
loop
cmpsl
cmp
sbb
jae
dec
cltd
int
inc
out
mov
aaa
fnstenv
fsubr
dec
stos
mov
and
push
fsubrs
cmp
dec
jnp
ret
lods
pop
cmpsb
mov
fcompl
jecxz
mov
lret
mov
dec
inc
enter
invlpg
jne
in
jbe
xchg
cmpsb
ret
das
nop
bound
mov
imul
hlt
imul
ror
push
mov
shlb
ds
mov
add
mov
xor
push
add
dec
syscall
cmpl
lds
out
mov
pop
test
lock
test
sub
jmp
sarb
scas
ffreep
into
stos
xchg
ret
mov
scas
repnz
leave
or
adc
sbb
in
mov
loop
sbb
mov
add
test
test
std
insl
and
mov
mov
imul
xchg
loop
insb
and
cmc
jl
aam
pop
scas
mov
loopne
push
inc
scas
pushl
fidivl
xchg
ljmp
stos
mov
sub
and
add
fistpll
scas
imul
jle
jae
xchg
pushf
adc
test
es
pop
fidivs
jbe
test
and
cld
out
jp
push
into
call
inc
push
je
adc
add
aas
and
pop
shrb
outsl
cmpsl
adc
loopne
pop
cmpsl
push
and
cmp
xor
testb
lock
fs
mov
into
sbb
mov
es
sub
and
hlt
inc
ljmp
xchg
sarb
mov
hlt
cmc
repnz
fwait
xchg
cltd
pop
xchg
lret
adc
xchg
mov
or
std
mov
rol
add
inc
cmc
lret
mov
jle
add
cmp
sarb
pop
les
shll
jge
pop
cmpsb
addb
fxch
mov
mov
test
popf
jp
xlat
push
test
test
outsl
enter
insl
shl
mov
nop
fdivs
js
inc
push
cld
pushf
inc
nop
and
std
xchg
ret
jo
mov
lahf
mov
cld
pop
and
out
pop
pop
mov
ret
push
stos
scas
in
dec
mov
jge
leave
sbb
cwtl
push
cmp
mov
out
rcrb
and
in
mov
mov
sub
out
aam
hlt
cmc
add
in
cmc
xchg
jno
rolb
js
es
or
pop
cmpsl
xchg
and
mov
shrb
insl
je
mov
jb
xchg
aam
testb
rorl
mov
lock
jle
test
mov
push
adc
shrb
mov
inc
cmpsl
jne
pop
adc
dec
lods
lock
sub
xchg
xchg
jno
and
lret
imul
cli
mov
push
xor
outsl
or
jg
fadds
push
xchg
sub
stos
or
int3
cmp
adc
pop
xchg
cmp
pop
add
int3
faddp
adc
orl
inc
mov
push
cwtl
mov
mov
mov
mov
outsl
sub
iret
or
nop
js
gs
inc
xlat
xor
nop
rorb
lcall
mov
push
adc
mov
mov
stos
int3
or
ret
aad
inc
mov
jg
xor
xor
pop
lret
xchg
ss
dec
xor
rolb
ret
sbb
incb
in
xchg
js
jne
mov
enter
mov
into
push
fisttpl
pop
adc
adc
lret
xorb
stos
sbb
mov
test
stos
cmp
repnz
adc
and
inc
mov
sub
jne
dec
movb
les
mov
push
sub
movsb
sbb
pop
icebp
test
popa
cmp
iret
jl
dec
push
nop
cmp
rcl
in
lods
pusha
pop
mov
ds
adc
fisubl
cwtl
movsl
push
fs
add
filds
lock
mov
dec
bound
sub
lds
inc
int
push
into
bound
push
or
repz
aad
dec
mov
jmp
xchg
cmp
clc
sbb
out
test
in
push
ret
mov
jl
push
inc
lret
dec
xchg
aad
xchg
scas
add
rcrl
repz
jmp
mov
aaa
push
fwait
pusha
stos
inc
bound
pop
in
add
insl
pop
jg
into
mov
dec
repz
jmp
test
xchg
std
xor
mov
mov
shll
outsl
es
push
sbb
add
mov
mov
adc
enter
cs
mov
sbb
sub
lret
mov
or
les
bound
adc
sbbl
addl
add
sbb
lea
jns
jl
xor
stos
cwtl
lock
xlat
push
test
push
cmpsb
mov
jns
jbe
mov
test
xlat
scas
rorb
pop
add
mov
test
faddl
shll
scas
fidivrl
ja
rorl
shrb
mov
push
shr
shlb
push
and
stc
lret
xchg
test
dec
or
xchg
inc
movsl
push
and
jmp
sarb
dec
cmp
nop
sub
lods
add
das
mov
shl
std
jecxz
out
pushf
addr16
xchg
mov
mov
insb
insl
add
xlat
imul
cmp
outsb
incb
push
cs
hlt
divb
or
sahf
mov
sbb
jns
dec
adc
dec
xor
into
loopne
push
xlat
and
xor
xor
and
mov
mov
test
testb
repnz
and
js
and
add
sar
sub
jns
movsl
fdivrs
mov
in
sub
push
jp
cmp
or
xchg
lcall
loopne
pop
pop
scas
aaa
fcoms
cmpsl
rorl
add
jns
ficoms
mov
lcall
dec
push
sahf
out
mov
xchg
ljmp
sbb
es
faddl
stos
imul
out
shr
push
sbb
lret
mov
mov
sbb
push
push
mov
push
rol
aam
xor
mov
xchg
lret
enter
mov
insb
cld
jae
lds
cmp
and
xchg
test
clc
xor
imul
xchg
or
clc
jle
mov
cld
and
fsub
mov
mov
js
push
mov
shrl
lret
cmc
sbbl
add
stc
lds
push
fdivp
idiv
ret
push
push
sub
test
xchg
ret
mov
inc
and
mov
popf
push
push
xor
fldpi
fiaddl
push
pop
sub
xchg
xchg
mov
jnp
or
mov
into
sub
push
int
stos
aas
out
or
shrb
int
pusha
push
imul
jb
inc
xchg
fdivs
popa
jle
and
inc
push
jmp
adc
xor
mov
xor
cmc
inc
popa
in
dec
fsubrs
xchg
sbb
scas
jl
and
mov
fwait
mov
or
ljmp
int3
mov
sbb
lret
pusha
pop
test
push
int3
loope
bound
cmpsl
movb
xchg
movsl
rcl
add
or
imul
mov
jbe
sub
cmpsb
jmp
lods
ljmp
sahf
mov
dec
ret
imul
lock
rclb
mov
hlt
xchg
into
fs
xchg
pop
mov
push
into
imul
jbe
and
add
rcr
xchg
add
xchg
test
int
and
test
ror
roll
stos
stos
inc
cmp
or
ds
cmpsb
adc
dec
andb
mov
mov
fsts
in
mov
aas
test
mov
cwtl
ljmp
dec
into
and
mov
nop
enter
pop
adc
adcl
ficoml
add
rolb
mov
lret
int3
cmp
out
or
test
dec
dec
mov
imul
insb
jg
cs
shl
imul
xchg
mov
movsl
mov
iret
mov
lock
mov
test
mov
jmp
or
fsubl
xchg
frstor
jo
adcb
cmc
fcoms
push
push
mov
inc
loopne
jae
xchg
inc
pop
add
js
rcll
mov
xchg
and
out
lock
lods
hlt
mov
popa
jmp
imul
xor
mov
pop
xchg
adc
mov
stos
das
mov
mov
mov
jg
test
lds
xchg
jo
cmpsb
xlat
cmp
jle
jle
mov
in
mov
shlb
xchg
out
adc
inc
adc
mov
xor
iret
fdivs
cwtl
push
nop
les
fwait
push
mov
sub
das
xchg
idivb
sbb
xchg
out
sahf
fldcw
add
nop
mov
pop
outsl
pop
xor
jle
or
mov
jle
clc
mov
mov
loop
addb
jp
das
movsb
loopne
in
test
aam
xchg
mov
nop
pusha
and
and
out
and
jo
xchg
inc
mov
mov
xor
mov
xchg
stos
cmp
lret
mov
data16
or
lret
dec
cmpsl
fists
test
lret
fwait
xchg
rol
dec
sbb
cltd
fwait
adc
pop
call
mov
mov
subl
dec
cmp
mov
test
mov
mov
adc
mov
aas
test
lock
stos
add
push
test
mov
scas
mov
push
test
movsb
test
mov
mov
mov
jmp
or
imul
stos
fnstenv
fsubrs
add
mov
mov
imul
mov
aas
sete
xchg
rcl
aam
dec
scas
mov
jp
aam
pusha
lock
and
test
imul
lods
push
xchg
mov
dec
adc
xchg
mov
in
mov
xchg
cmp
jl
and
mov
out
mov
enter
inc
xchg
dec
mov
mov
lcall
ret
pushf
test
xchg
cli
insb
out
lods
add
testl
dec
or
hlt
mov
add
and
and
adcb
test
mov
nop
dec
mov
ss
xor
xchg
adc
xchg
std
jmp
shrl
cmc
dec
lods
or
cmp
clc
push
cwtl
fcomps
add
shlb
aad
jne
adc
pop
mov
nop
sbb
scas
mov
out
leave
xchg
push
cmpsl
js
jb
out
rcll
fiadds
dec
ret
out
xor
ret
cld
cmp
mov
mov
sub
cmc
fs
jnp
xor
out
jecxz
mov
sarb
sub
sbb
in
scas
sarl
push
mov
xchg
es
jno
stc
fmuls
nop
cltd
adc
inc
mov
or
cmpsb
sub
sub
rclb
and
ret
test
lahf
aaa
sub
xor
das
lods
jbe
sbb
inc
f2xm1
scas
lcall
movsl
inc
xchg
mov
adc
xor
and
cld
adc
xchg
scas
bnd
pop
rclb
cmp
adc
sub
sbb
sbb
test
mov
inc
xor
sbb
rorb
sub
adc
inc
mov
fiadds
mov
out
into
cmp
adc
js
lahf
fstl
mov
testb
sub
lea
sub
mov
sbbb
fiaddl
leave
pusha
popf
inc
rcll
into
or
push
ss
in
scas
xlat
xchg
in
div
lods
dec
pop
movsb
les
xchg
cmpsl
inc
popl
lcall
andb
addr16
sbbl
shl
dec
ljmp
jnp
outsl
and
sti
jbe
jbe
cmpsl
loopne
mov
shrl
cmp
imul
rcl
dec
stos
inc
or
jp
divl
movsl
nop
inc
mov
and
int
outsl
adc
xchg
cltd
imul
xchg
nop
push
shl
iret
mov
cld
jb
adc
mov
xor
outsb
pop
loopne
in
ja
cs
pop
fstl
pop
sbbb
jp
stos
lock
icebp
mov
jg
negl
xor
je
dec
add
inc
sbb
addr16
imul
addr16
loop
out
mov
pop
adc
push
insl
mov
shrb
shlb
dec
rcr
ss
ret
lods
andb
in
inc
mov
cmp
aas
orb
idivl
and
rcl
arpl
mov
cmp
ffree
pop
rcr
xchg
pop
into
imul
mov
push
push
movsl
in
lods
mov
jmp
dec
aaa
enter
xor
ljmp
xchg
mov
or
adc
or
add
and
sub
inc
xor
mov
add
cwtl
xor
in
mov
mov
sbb
loopne
pop
scas
sub
dec
enter
push
jle
xor
fmuls
and
enter
mov
sar
enter
pushf
ret
scas
imul
sbb
fsubrl
xchg
test
stc
popf
xor
rclb
jp
fnstenv
pusha
cmc
lahf
orb
dec
ror
gs
loopne
push
push
in
in
push
sti
inc
popf
aas
leave
push
loope
test
cli
inc
mov
mov
lahf
mov
scas
fwait
push
mov
xchg
out
popa
cli
stos
xor
adc
and
ds
in
adc
push
xor
dec
enter
cmp
dec
mov
rol
das
push
cmpsl
inc
adc
jmp
pop
cltd
stc
mov
pop
pop
insl
movsb
ss
xorl
inc
push
sbb
jge
add
xor
movsb
or
push
lahf
cmp
and
add
xchg
ret
mov
pop
rorb
or
scas
aas
mov
nop
or
fldt
add
lret
jbe
dec
or
scas
cmpsl
inc
cmp
sti
or
add
test
cmc
ret
jnp
push
add
mov
mov
jg
add
ret
mov
add
ljmp
mov
shlb
mov
or
jae
out
es
xor
fistpll
jo
or
pop
mov
adc
or
movsl
outsb
fbld
iret
xor
push
stos
rorl
pop
or
hlt
scas
out
cli
lret
inc
pop
outsb
mov
jo
push
int3
xor
dec
aam
fistpll
inc
lahf
inc
jmp
and
pushf
ss
fisubrs
inc
and
popf
xor
inc
pop
sub
and
pop
scas
xorb
inc
mov
aad
jl
gs
dec
mov
into
jns
repz
sbb
xlat
sub
or
jl
jmp
mov
es
enter
iret
jl
add
xor
jl
xor
add
cld
sub
es
mov
imul
pushfw
repnz
insb
rorl
clc
mov
xchg
push
jo
xchg
fbstp
scas
and
outsl
lret
mov
movsb
sub
and
push
adc
add
xlat
xchg
mov
psubusb
sbb
ss
shll
testb
in
mov
mov
mov
scas
jle
sbb
loop
fisubrs
incl
push
mov
sbb
lret
pop
lahf
movsl
push
sub
cli
insb
test
adc
and
orl
rcrb
xor
lods
es
jle
add
jb
mov
sahf
push
mov
push
cmp
or
xchg
xchg
mov
or
adc
cmpsb
pop
enter
aam
jo
cmp
jle
sub
fiaddl
xor
aad
mov
iret
mov
stos
xchg
stos
add
push
jb
sub
xchg
imul
mov
test
fnsave
xor
ficoms
pop
repz
jae
dec
rorl
fcomps
xchg
mov
or
fdiv
mov
mov
call
mov
mov
cmc
dec
aaa
daa
or
cmpsl
icebp
mov
inc
rcr
add
es
clc
roll
jmp
jmp
push
imul
hlt
stos
adc
sahf
push
mov
jb
xchg
ret
in
cmp
faddl
inc
or
sub
xor
or
rol
or
test
scas
cmpsb
sub
out
xchg
pushf
ret
jno
and
mov
adc
adc
lahf
iret
inc
mov
push
mov
cld
in
jnp
pushf
nop
enter
push
jmp
lret
in
fsubl
es
mov
cld
mov
xchg
rorl
mov
cmpsl
movsl
pminsw
xchg
insl
and
into
xchg
addl
mov
sbb
or
xor
ret
hlt
repz
or
add
mov
dec
push
je
adc
rolb
imul
cwtl
or
dec
pushf
pop
xchg
add
js
leave
dec
xchg
push
sbb
dec
loop
cwtl
add
sbb
cmp
rcrl
adc
push
jo
fldt
cmp
negl
xor
push
stos
jo
rcll
out
negb
push
push
fwait
mov
mov
pushf
dec
push
push
scas
dec
cmpsb
mov
call
mov
push
roll
cwtl
imul
or
pop
imul
fdivrp
xchg
and
rclb
or
add
pop
inc
in
cmc
pop
je
hlt
lahf
inc
xchg
or
mov
mov
and
cmpsl
or
mov
xchg
rcr
jmp
and
cwtl
push
cmp
and
add
jl
and
test
fdivrs
inc
lcall
scas
jb
shll
xchg
xchg
subl
insl
cmpb
in
cli
into
xor
mov
mov
lcall
mov
mov
cld
pop
xor
nop
push
pop
enter
adc
rol
add
in
leave
mov
mov
mov
fucom
sbb
aad
aad
pop
icebp
cmpsl
popf
out
movsb
out
or
pop
rorb
jns
imul
sbb
shl
sub
add
lahf
xor
test
and
aad
enter
shll
xchg
inc
or
and
sahf
add
mov
jb
iret
or
rcll
les
subl
scas
fisubl
lcall
or
jecxz
repnz
insb
fcompl
cmp
jo
mov
mov
cmc
scas
mov
jl
sarb
xchg
push
ret
xor
lods
lods
imul
jp
lcall
mov
enter
jns
dec
popl
mov
adc
mov
push
inc
test
xchg
xchg
aas
mov
xor
and
xchg
or
push
imul
inc
fidivrs
and
nop
repnz
jl
lods
movsb
push
mov
mov
out
push
popa
insb
jle
aaa
lock
adc
and
push
inc
rorb
test
movsl
outsb
xchg
hlt
popaw
ret
xchg
mov
jge
shl
ror
cwtl
cli
or
sbb
xchg
adc
mov
leave
jns
lds
or
jnp
movsl
sub
cmp
or
mov
loope
in
cltd
mov
inc
xchg
pop
pop
mov
jge
subl
mov
xchg
addl
in
rorb
in
stos
jmp
push
popa
cmp
repz
mov
call
aaa
stos
dec
xor
inc
push
push
addl
or
mov
outsb
mov
or
rcll
lods
mov
mov
out
push
sahf
or
mov
fldt
rorl
test
and
lret
jecxz,pn
aad
jmp
sbb
rorb
add
add
movsl
xor
mov
pushl
add
add
subb
xchg
movups
ret
xlat
push
icebp
pop
mov
mov
lret
pushf
push
out
jnp
cmpsl
mov
scas
add
cwtl
jbe
push
leave
xor
adc
sub
faddl
pop
pop
lret
xchg
into
shll
ret
mov
adc
or
rcrl
mov
cwtl
adc
mov
fs
mov
scas
pop
sbb
std
lock
gs
inc
xchg
shlb
shlb
sbb
or
xor
push
xor
hlt
xchg
rcrb
xchg
cmc
cltd
pop
jae
add
jmp
mov
and
pusha
popl
jp
mov
mov
xchg
mov
xlat
test
stc
or
int3
nop
sub
cmpsb
insb
lds
decl
pushf
les
cmp
or
popa
jmp
jmp
jp
mov
repz
xlat
sbb
xchg
push
lahf
out
xlat
pop
out
adc
lods
inc
adc
lret
mov
int
push
ret
and
push
shll
int
out
test
jnp
lods
aam
into
ret
or
jno
xchg
mov
adc
mov
les
inc
adc
or
pop
iret
aas
in
mov
inc
daa
jbe
xchg
xorl
xchg
loop
mov
scas
inc
mov
loop
add
sbb
fiadds
xchg
mov
gs
shll
cmpsl
cld
insl
xchg
ret
push
or
arpl
pusha
aam
or
mov
cwtl
cmp
fildll
paddb
hlt
dec
cmp
xor
cld
cmp
popa
mov
or
or
lds
mov
push
mov
lahf
or
dec
mov
loopne
or
adc
adc
sbb
pushf
inc
rcr
clc
pop
adc
pusha
ret
int
sub
push
out
lock
inc
xor
insl
xchg
mov
imul
pop
ret
cmp
xlat
lods
and
jne
shl
or
imul
jb
je
or
cmpsb
mov
dec
imul
inc
cmp
pop
mov
cmpsl
or
xor
push
orb
add
cmpsl
mov
pusha
setge
loopne
xlat
pop
adc
orb
test
or
add
jnp
lea
adc
mov
rorb
notl
push
jae
xchg
pushf
cmpordps
les
outsl
or
xchg
test
int
mov
mov
fbld
xchg
scas
add
les
lret
or
in
lds
mov
push
sahf
into
lret
cmpsl
cmpsl
hlt
mov
ret
imul
adc
and
into
push
xor
lret
in
test
call
jae
cmp
inc
orl
rol
mov
jnp
push
addb
or
mov
lds
xchg
add
add
lret
testl
imul
mov
je
es
add
loopne
mov
mov
lret
xchg
aad
or
dec
lock
xchg
or
xchg
lret
xor
lds
inc
pushf
cld
dec
jg
lds
xchg
and
mov
cmp
adcb
xchg
xor
mov
or
push
incb
mov
cld
divl
ror
push
pop
xchg
sub
test
or
xchg
popf
lods
pop
rol
mov
adcl
or
mov
rorb
jae
movsl
mov
hlt
jle
inc
scas
adc
inc
sti
mov
inc
adc
fists
insl
mov
sub
mov
sub
mov
popf
jg
xchg
shl
pop
or
adcl
outsb
iret
or
bound
add
pop
mov
pop
or
mov
mov
test
mov
sahf
iret
and
inc
js
decl
test
add
add
cmp
cld
mov
das
add
ja
or
jmp
sbb
cmc
xchg
mov
push
or
sbb
adc
mov
mov
loop
hlt
lds
mov
rorb
test
cs
sbbl
mov
iret
add
dec
loope,pt
pushf
mov
decb
in
out
pushf
lret
lock
mov
cltd
cmp
enter
jnp
mov
mov
lret
cmc
into
outsb
jge
pop
add
roll
mov
fcmovb
xor
jae
and
jne
insb
mov
stos
lods
mov
scas
adc
push
jo
add
lret
or
and
js
outsb
or
push
into
sbb
pushf
and
jmp
sti
mov
add
iret
or
gs
mov
mov
nop
fcoml
ret
addl
add
cmpsl
iret
ret
fs
adc
test
hlt
sbb
cwtl
ja
js
add
sbb
mov
push
jmp
insb
mov
fucomi
mov
insb
push
and
fimull
or
push
movsl
cmc
lods
loope
sbbl
fidivl
test
ret
fwait
or
shrb
pusha
ss
aam
fsubp
pusha
xor
dec
arpl
or
mov
cmp
ror
data16
faddl
ror
movsl
sbb
ret
xlat
push
ljmp
cltd
aad
sbb
xlat
jb
lret
loop
sarl
xor
xchg
dec
pusha
mov
dec
xchg
mov
push
adc
ret
jo
rorb
xchg
xor
movsb
adc
test
add
mov
or
bound
xchg
fdivrs
mov
push
rol
call
push
mull
xchg
or
fmuls
mov
fldlg2
add
mov
cmc
pop
jge
and
add
cmc
test
imul
bound
jmp
movsb
xchg
push
xor
int3
loopne
mov
add
adc
ds
adc
sub
inc
pusha
cmp
lods
lea
ja
jne
gs
add
test
scas
jle
cmpsb
int3
repnz
in
mov
jnp
or
fisttpl
lahf
jae
lods
adc
adc
xor
xchg
mov
test
imul
loope
jns
inc
mov
lds
add
mov
mov
add
orb
rcrb
hlt
pop
sub
enter
dec
into
inc
jb
xchg
push
push
cmp
push
cmp
mov
mov
mov
cmpb
jp
test
cld
mov
pop
push
js
clc
stos
push
aaa
mov
fstpl
inc
das
leave
push
inc
shlb
lods
add
add
clc
lods
adc
mov
subb
pop
mov
outsl
sub
adc
add
shlb
es
mov
enter
lea
nop
ror
mov
movsl
sbb
fists
and
jl
mov
or
inc
jo
sub
aam
nop
sarl
adc
mov
into
pop
jb
faddp
or
sub
jle
imul
jo
xor
test
inc
les
dec
shlb
subb
xchg
or
inc
push
cmp
add
inc
inc
lret
mov
fstps
inc
arpl
roll
test
cmpsl
jne
fists
fldt
mov
mov
xor
insl
add
cmp
fidivrs
mov
not
inc
dec
xchg
mov
xchg
mov
sub
jmpw
mov
mov
test
lods
dec
data16
jmp
mov
mov
test
mov
push
adc
lds
movsl
lahf
frstor
xchg
mov
cmp
xchg
nop
test
movsl
lods
shrb
movsl
xchg
cltd
mov
scas
stos
xchg
pop
xlat
fsubl
xchg
xorl
shrl
mov
xor
cld
xchg
aas
mov
mov
ja
fildll
cli
and
jbe
hlt
in
add
xor
enter
mov
jp
jae
sbb
out
cmp
push
push
or
sub
adc
nop
rcl
fisubrs
push
add
addb
jl
xchg
pushf
movsb
xchg
or
lods
int3
lret
adc
or
mov
movups
repz
imull
inc
mov
or
mov
movb
add
test
mov
aad
ret
cs
loop
xor
sbb
add
xlat
fdivrl
idivl
mov
adc
imul
loop
cwtl
mov
push
pop
test
lret
inc
xchg
xchg
xlat
or
out
xchg
adc
movsb
mov
mov
or
jmp
xlat
loopne
stc
subb
mov
and
or
pushf
mov
jle
dec
jo
xor
sbb
iret
nop
into
ss
pop
loope
orl
mov
mov
push
js
pop
icebp
mov
dec
mov
sbb
or
mov
ret
mov
cmpsl
cld
cmc
xlat
lahf
shl
mov
mov
xchg
aaa
stos
enter
or
mov
xor
loope
mov
xchg
jmp
dec
aad
ret
and
xor
popf
xchg
idivl
push
mov
jl
pop
xchg
sbbl
xor
test
mov
mov
testb
repz
jb
ljmp
cmp
das
mov
int3
orl
stos
jl
push
fisttpl
or
adc
push
jge
imul
dec
pop
je
aaa
nop
sub
push
out
stos
dec
pop
shrl
dec
pop
jno
mov
inc
sahf
mov
rcll
fmull
out
fs
ficoms
notl
roll
bnd
fsubr
pop
or
xchg
sbb
fucomp
mov
in
push
rol
lods
fwait
stc
enter
sub
stc
arpl
rcl
movsb
orl
gs
or
dec
nop
jmp
shlb
mov
jg
arpl
xchg
nop
push
mov
int3
mov
hlt
lcall
mov
mov
or
mov
ljmp
pop
bound
xchg
movsb
ret
shrb
adc
les
xchg
ds
test
pop
test
or
pop
cmp
shrb
mov
cwtl
cmc
pop
mov
mov
imul
mov
mov
dec
leave
movsb
aam
bound
aas
into
add
mov
iret
cmp
sarb
stc
xchg
inc
cmp
xchg
test
sub
jge
sbb
in
push
lock
fidivrs
testb
inc
aaa
xchg
stos
mov
fcom
ss
in
jle
or
movsb
inc
inc
mov
pop
outsb
es
mov
xchg
adcl
popa
lods
rcrl
shlb
add
mull
add
xchg
jae
dec
or
jns
mov
or
ret
test
out
push
ret
js
dec
orb
addb
popf
outsb
cltd
cmpsb
lahf
mov
push
rcrb
fcompl
xor
xlat
loop
hlt
jmp
fcmovnb
fidivs
mov
cmpsb
test
pop
jb
mov
jb
loopne
mov
arpl
cmp
mov
xchg
cmpl
test
cld
pop
or
and
jecxz
mov
into
lods
and
pop
mov
pop
adc
lret
add
pop
test
fs
loopne
xchg
and
loopne
test
sbb
sbb
test
mov
xchg
sub
cmp
cmp
jl
mov
xor
xchg
clc
imul
in
xchg
test
jnp
mov
cmp
jge
xchg
cld
movsl
push
mov
fwait
mov
push
mov
gs
test
pusha
adc
ret
repz
lret
addr16
cmp
scas
fdivr
mov
mov
add
test
jbe
dec
xchg
clc
loope
or
pop
shl
mov
mov
in
xor
jg
cmp
cmpb
pop
mov
movsb
or
sbb
stc
movsb
cmc
loopne
lea
rclb
dec
movsb
hlt
and
fbstp
nop
cli
std
add
and
inc
inc
adc
in
mov
in
mov
push
shll
jbe
rcrb
mov
leave
jae
sbb
sti
mov
mov
pop
ret
sti
xor
xchg
xchg
stc
xchg
test
add
in
xchg
ljmp
lods
scas
les
pop
dec
xchg
mov
movsl
out
cmpsb
ds
fsubrl
lds
insl
test
fmull
sarl
lcall
mov
lret
jecxz
scas
in
cmc
test
call
push
mov
ret
or
mov
lds
sarl
mov
in
and
push
xchg
fdivs
sub
jmp
push
mov
pop
mov
lret
push
test
fstpl
mov
mov
adc
and
cwtl
sub
pop
das
in
cmc
jno
or
push
or
cwtl
divb
and
sarl
ret
adc
leave
addr16
cmp
loop
orb
pop
mov
mov
ljmp
ljmp
fldl
daa
adc
lret
jns
sarb
cmp
dec
sbb
mov
lret
xor
add
and
adcl
fwait
or
xchg
or
jne
add
loopne
fisttpll
ret
in
loope
test
add
imul
add
and
inc
mov
pop
ret
mov
dec
and
ret
push
sub
fiaddl
jg
int
mov
inc
dec
cwtl
sub
adc
cmp
push
cmc
mov
adc
xchg
sub
aad
lret
cmp
int3
rcrl
in
mov
ret
mov
imul
xchg
push
cmp
cmp
sbb
fdivrs
jle
adc
dec
loopne
push
xchg
xlat
int
or
rcrb
in
dec
adc
push
aas
adc
fldl
lds
inc
rorb
mov
movsl
dec
mov
out
push
mov
shlb
xchg
cmp
adc
fs
jg
stos
dec
and
nop
and
scas
dec
or
sub
test
or
les
adc
sub
outsb
jg
pop
push
rolb
lret
or
inc
stos
fucomp
fisubrs
mov
sub
js
jmp
jb
xchg
adc
movsl
popa
cli
sti
mov
push
imul
cmp
xor
mov
jno
cmc
pop
sti
movsl
dec
push
dec
xchg
pop
faddp
lret
bound
dec
shll
push
or
stos
lahf
sub
dec
or
or
fcom
push
in
out
aad
cmp
mov
or
mov
mov
rcrb
mov
and
pop
inc
andl
test
inc
test
lods
std
rcrl
mov
inc
cmpb
mov
imul
out
adc
aas
orb
inc
add
frstor
shlb
mov
xor
lods
push
ds
mov
nop
add
adc
test
xchg
push
jp
loopne
push
mov
inc
fmuls
jle
dec
adc
loopne
mov
and
adc
mov
fldl
inc
cli
sub
mov
cmp
and
and
movsl
js
pop
add
pop
scas
xchg
lods
fwait
pop
ret
dec
not
and
dec
popf
xchg
push
sarl
sbb
mov
sbb
cmp
push
repnz
into
fidivl
nop
aad
movsb
fdivs
lret
and
imulb
add
sbb
pop
int
movsb
movsb
inc
and
arpl
adc
mov
rclb
test
dec
or
int
xchg
nop
int3
mov
mov
iret
add
xchg
mov
movsb
pusha
mov
sub
fcompl
and
push
mov
shll
addl
sub
xchg
ret
add
mov
pushf
sub
mov
scas
mov
bndldx
or
push
adc
pop
stos
imul
stos
and
jle
jnp
xchg
aas
xchg
fxch
test
cwtl
ss
mov
adc
xchg
push
inc
jmp
jo
jb
sbb
loopne
nop
push
or
mov
mov
add
test
or
or
cmc
insb
in
jo
lcall
fidivrl
lods
mov
pop
dec
or
mov
pop
inc
lret
hlt
and
mov
imul
and
cmpsl
or
movsl
push
lea
mov
fstpl
aaa
loop
mov
dec
test
and
or
jl
mov
mov
lret
divl
call
scas
das
mov
cs
mov
rcll
jo
addl
mov
cmc
xchg
iret
cs
xor
inc
fimull
lcall
add
push
add
mov
int3
fisttpll
stos
outsl
movsl
pushf
les
aad
adc
sar
data16
into
add
pop
adc
or
sbb
and
rcrb
movsl
aad
and
mov
cli
ror
and
xor
pop
das
pop
jmp
add
xchg
cltd
pop
mov
scas
lret
ret
leave
or
adc
mov
xchg
xlat
push
sbb
rcl
jb
shll
mov
cs
mov
or
push
xorl
lock
or
repnz
mov
xchg
das
call
xchg
imul
push
push
shl
mov
sbb
sbb
inc
mov
lods
ret
aas
mov
or
jne
pop
ljmp
sbb
out
dec
aaa
jbe
out
cmp
movsl
js
dec
pop
mov
add
push
daa
xor
xchg
dec
aam
cmp
imul
xchg
inc
xchg
fistpll
in
mov
loopne
int
push
fcompl
adc
scas
in
lcall
cmp
xor
mov
faddl
pop
jp
rcrb
mov
cmp
xchg
cwtl
mov
mov
add
repz
sti
pop
es
push
lret
sarl
push
daa
inc
lret
mov
push
enter
scas
jb
scas
xchg
xchg
xor
cmpsl
or
mov
lea
rol
xchg
mov
mov
ljmp
mov
adc
jl
ret
cmc
jne
mov
jne
sub
mov
ror
or
shlb
or
xchg
mov
aas
fidivl
je
push
ljmp
movsl
xchg
jae
xchg
add
out
mov
fs
mov
loopne
or
xlat
or
sbb
loope
or
inc
xchg
inc
dec
hlt
addl
leave
xor
test
call
or
push
xlat
jl
add
dec
pop
cld
test
jbe
iret
in
xchg
jle
xor
push
mov
cwtl
shrb
sub
popa
cmpsb
or
xchg
test
lar
cmpsl
lret
sub
call
push
sbb
pop
push
xor
test
cmp
cmp
and
test
cld
adc
movsl
inc
add
jnp
dec
lods
fnstcw
cmp
test
mov
push
adc
adc
scas
rep
inc
dec
adc
and
sahf
shr
nop
imul
cld
ret
sub
movsl
sbb
xchg
lds
sbb
sub
imul
sarb
fcom
rolb
es
cmp
jp
scas
mov
lret
mov
cmpsb
nop
xchg
or
xchg
or
jns
adc
mov
mov
pusha
xchg
loop
lods
rol
repz
fsubp
sub
push
inc
jmp
cwtl
mov
sbb
cmp
or
fsubrl
adc
pushf
pop
sbb
mov
xchg
or
mov
imul
cmp
cmp
adc
mov
repz
mov
pop
test
dec
cmp
std
mov
pop
nop
nop
movsl
cld
adc
mov
test
lods
add
push
std
jecxz
mov
cld
mov
mov
repnz
push
mov
leave
xchg
test
inc
dec
mov
fmull
icebp
nop
andb
sarb
outsl
std
push
dec
mov
jp
fadd
or
inc
fdivl
sbb
mov
sub
notl
adc
xchg
sahf
mov
add
pushw
mov
sbb
adc
scas
adc
test
clc
lds
inc
cli
fs
movsb
loope
mov
test
mov
mov
inc
das
out
shlb
jnp
jns
popf
xor
test
fs
or
test
dec
aam
sbb
scas
push
cwtl
jbe
xorl
inc
test
or
outsb
rorb
cmp
jne
jmp
pop
mov
scas
shlb
rolb
mov
ror
shrb
iret
leave
dec
adc
jne
inc
fstl
push
mov
pop
cwtl
or
adc
movsl
jo
movsl
shlb
xchg
imul
add
mov
aas
lds
ret
add
movsl
fldenv
adc
pop
mov
jmp
xor
pushf
or
test
dec
push
mov
enter
pop
jl
test
dec
pop
add
push
cmp
mov
mov
fs
notb
imul
mov
ret
add
inc
push
movsl
fptan
sbb
test
pop
test
sahf
adc
lds
mov
cmp
fwait
lahf
add
hlt
sbb
add
add
add
insl
jg
mov
dec
and
ds
test
cmp
xor
mov
jns
push
sub
inc
inc
or
cld
xor
fs
loope
lds
or
or
imul
test
mov
pop
mov
mov
pop
mov
mov
jl
loopne
mov
jnp
sub
add
dec
rcrb
movsl
gs
adc
adc
test
cmp
mov
pop
int
add
out
aam
stc
cld
cltd
xchg
cmc
cmpsb
movsb
adc
sbb
cmpsb
notl
sbb
fiaddl
dec
popa
aam
lock
add
push
fcompl
or
enter
addr16
ja
jnp
jmp
outsl
mov
pop
and
mov
dec
shrl
sub
cmc
add
sahf
leave
stc
aam
test
add
imul
movsl
aam
pop
jno
push
or
and
movsb
jns
pop
ljmp
jmp
push
fcmovne
jle
arpl
mov
mov
cli
popa
dec
sub
dec
sub
ret
fcomip
aam
int3
push
add
add
jo
mov
scas
mov
jnp
lods
and
outsb
and
and
insb
inc
aad
cwtl
or
lret
daa
jle
jge
jns
and
jg
fcomip
mov
inc
pop
pushf
mov
inc
fldl
insb
sub
ss
cmpsl
push
xor
in
add
mov
xchg
popf
mov
cwtl
popa
nop
fdivp
cmp
sar
ljmp
xchg
lods
xor
fiaddl
cmp
pop
push
rol
cmc
inc
adc
xor
sub
and
mov
sbb
and
mov
adcb
hlt
decl
xchg
icebp
test
ljmp
xor
mov
xorl
test
test
subb
inc
sbb
inc
xor
jle
dec
sub
adc
pusha
andl
pop
mov
leave
cmpsl
push
popf
xchg
add
insb
aaa
push
sti
sbb
fistl
sbb
dec
cmpsb
pop
adc
outsl
xor
mov
into
pop
or
add
jmp
mov
movsb
test
or
enter
shld
rolb
aas
mov
gs
iret
xchg
jmp
inc
lods
loop
aas
call
repnz
mov
cmp
dec
or
sti
jbe
lods
lock
push
dec
or
scas
aaa
sbb
mov
mov
inc
mov
adcl
dec
mov
cld
mov
fcmovnb
dec
cmc
xchg
addr16
cmpsl
test
mov
addl
test
xlat
mov
iret
mov
icebp
cmp
push
imul
mov
orl
pop
imul
cmpsl
subl
cmp
rcrl
aam
xor
std
lret
mov
lahf
mov
xchg
in
mov
or
mov
les
in
add
push
dec
fdivl
xchg
test
sbb
add
add
fisttpll
cmp
clc
lea
xchg
popf
dec
xor
int3
push
jl
mov
loop
xchg
nop
iret
push
test
jns
push
sahf
aas
mov
aad
jle
mov
mov
mov
add
xchg
sub
rorb
inc
into
in
pop
int3
out
and
inc
and
cwtl
push
sbb
xchg
mov
cmp
mov
mov
xor
push
pmaxsw
rcll
loopne
fs
fdivs
stos
gs
mov
lods
aam
pop
cmp
lahf
adcl
mov
jge
scas
jno
lea
push
xorb
ret
imul
andl
out
xlat
out
or
enter
repnz
jbe
mov
or
sar
std
das
movsb
sub
jp
les
icebp
jae
test
hlt
or
mov
push
cld
lret
cmp
test
nop
fsub
nop
sub
or
stos
fcompl
inc
jl
sbb
and
pop
add
jb
test
ret
lahf
ret
mov
sub
xchg
sbb
out
push
jge
xchg
mov
mov
sbb
adcl
and
xor
or
rcl
sarb
xchg
and
push
push
hlt
aam
and
push
scas
jne
scas
das
mov
add
in
scas
mov
jl
lds
push
out
jae
icebp
cmc
bound
mov
lods
mov
adc
aas
cmpsl
or
adc
pop
pop
jns
add
mov
or
nop
sbb
jmp
or
mov
call
inc
iret
sbb
mov
call
icebp
adc
call
jmp
sub
push
pop
lds
out
cmpsl
pop
mov
test
bound
loop
and
add
repz
push
shrb
movsb
cltd
scas
sbb
jecxz
lret
fimull
test
cmp
adc
dec
add
jbe
xchg
mov
push
test
movsb
repnz
sbb
imulb
jnp
inc
xor
mov
mov
scas
out
adc
ret
arpl
cmp
testb
fdivs
and
push
mov
jb
stos
mov
inc
stos
mov
inc
add
sbb
mov
out
mov
sarl
mov
fdiv
push
mov
sarb
or
add
adc
and
scas
sarb
ret
mov
add
pop
je
jg
shr
idivb
dec
jle
push
xor
call
push
dec
xchg
imul
lret
push
pusha
adc
stos
cs
repz
jp
popl
pop
cmp
push
arpl
cmp
adc
test
xor
mov
ret
jb
test
dec
nop
mov
enter
or
mov
ret
cmc
clc
sbb
push
jno
mov
xchg
movb
ljmp
mov
and
shrl
rcr
sub
shll
test
nop
subb
enter
xchg
or
leave
inc
in
bound
lcall
dec
je
xchg
jo
push
ficompl
loop
pushf
lahf
xchg
hlt
ljmp
inc
or
mov
iret
mov
setae
or
jg
sbb
xor
into
sub
pop
je
xchg
dec
xor
or
mov
gs
enter
nop
sub
cmp
arpl
shl
xchg
ret
push
inc
addr16
pop
aaa
jg
leave
shll
or
lea
out
mov
nop
imul
dec
mov
pop
dec
xchg
movsl
cmp
mov
mov
data16
popa
sbb
in
rorb
sbb
test
leave
push
jge
repz
add
mov
or
jno
inc
lahf
int
ret
sub
dec
js
xor
fcmovne
xchg
mov
add
popf
mov
mov
or
ffreep
inc
out
movsb
cmpl
lret
dec
fwait
mov
mov
popl
and
jb
dec
push
in
shrl
sarb
adc
mov
mov
jbe
xor
in
push
xor
xchg
jmp
shrl
or
sbb
clc
ja
fcomps
jle
std
nop
stos
ds
scas
sti
nop
sbb
jnp
push
jge
fistps
sub
test
test
mov
in
cmpsb
test
and
jnp
aaa
lret
sub
cs
sbb
xchg
ds
inc
or
nop
rcrb
std
xchg
jp
fisubl
insb
les
aam
push
xchg
add
push
cmp
push
iret
mov
sahf
mov
es
jl
aad
gs
ss
ljmp
lret
mov
push
sbb
mov
sar
retw
pop
or
leave
loope
and
adc
ret
xchg
cmpsl
lods
jl
in
cs
or
fstp
cmpl
ret
fmull
fcos
mov
mov
xchg
mov
adc
mov
int
ret
hlt
jle
xchg
fcoml
mov
lods
test
push
xor
enter
pop
std
xchg
or
cmpsl
push
jp
pop
ljmp
jno
stos
jo
decl
fdivl
imul
mov
cli
push
movsl
push
ss
rorb
and
pop
mov
fbld
inc
std
mov
into
or
test
inc
jmp
pop
push
bound
and
mov
lret
mov
mov
cmp
cmpb
adc
nop
jle
or
test
in
mov
jecxz
pushf
mov
push
mov
inc
jns
mov
mov
aad
mov
inc
jp
nop
lods
jle
mov
roll
push
jge
mov
data16
subl
sarl
sbb
push
aas
or
xorb
add
inc
mov
mov
push
imul
loop
jge
push
lret
or
faddp
stos
dec
test
icebp
adc
mov
mov
mov
rorb
in
jge
xchg
fcmovu
pop
sbb
push
pop
in
add
leave
int
loope
lods
popa
inc
mov
jb
xor
fmul
inc
iret
cmp
loop
loop
ja
pop
sti
test
push
sbb
inc
mov
cltd
mov
ret
mov
xchg
ds
push
scas
enter
pushf
fisubrs
in
xchg
ficompl
sbb
js
lods
mov
js
xor
faddl
jle
push
push
inc
inc
lret
test
je
mov
pop
outsl
push
into
xchg
or
add
inc
add
push
nop
mov
cmpsl
iret
movsb
cld
cmp
std
movb
xchg
nop
pop
scas
loopne
jge
movsl
inc
lods
inc
test
enter
hlt
xor
loope
rorb
fnstsw
push
sbb
push
scas
imul
xlat
cmp
scas
or
or
jp
mov
negl
data16
inc
add
rolb
mov
out
loop
xlat
loop
mov
pop
bound
or
cmp
xchg
test
mov
fisubrl
push
mov
test
xor
and
mov
aad
lds
adc
sbb
test
nop
enter
dec
pop
mov
and
jno
sbb
xchg
and
pop
cmp
mov
loopne
fld
mov
mov
push
int3
adc
xchg
mov
xchg
arpl
inc
dec
hlt
mov
ret
test
mov
mov
adc
push
push
xor
repz
test
xchg
cmc
xchg
rcrb
push
jg
sbb
xchg
mov
xchg
xchg
pop
sbb
mov
minps
in
xchg
dec
lds
or
push
sub
xchg
cmc
std
lock
or
fcomi
or
lods
ret
pop
adc
ret
cwtl
push
fldcw
xlat
mov
lods
rorl
add
xchg
add
sarb
adc
in
xchg
ret
add
dec
mov
pusha
movsb
pop
xchg
test
shrl
les
shlb
xchg
add
cmp
xor
xchg
mov
hlt
mov
sbbb
cmp
xchg
jle
jmp
mov
test
push
inc
lds
xor
jno
xchg
fidivrl
ret
lret
xchg
cmp
mov
mov
mov
imul
pop
movsl
daa
cmpsb
sub
fsubrl
mov
orl
hlt
movsl
or
shrb
scas
je
shrl
fsubrl
in
xor
gs
and
fsubrl
rcll
push
test
push
fnstcw
jg
js
push
push
mov
fs
mov
push
lea
and
lods
jne
sbb
mov
push
mov
int
aad
mov
mov
bsf
mov
pop
lods
in
or
ja
enter
stos
push
xchg
pushf
ja
sbb
cmpl
push
nop
cwtl
imul
fsubrl
iret
cmp
mov
es
lret
in
sub
cmc
or
ret
loope
ret
mov
lods
xchg
cmc
mov
mov
and
hlt
and
lods
leave
imul
add
add
or
js
dec
test
sbb
rcrl
out
out
mov
or
divl
add
sti
mov
lods
fists
mov
into
out
mov
adc
add
mov
ret
jb
sub
aad
das
ret
inc
jnp
mov
cmc
xor
push
inc
movsb
and
push
jo
push
mov
js
leave
inc
xor
sub
fcmove
inc
iret
adc
imul
lahf
sbb
fwait
rcrl
test
sub
lret
ds
dec
cld
ja
popf
outsb
hlt
mov
xchg
inc
std
cmpsb
or
sbb
or
mov
and
loope
push
rclb
jp
mov
int
sbb
xlat
sub
popf
mov
xchg
jp
test
fs
ljmp
add
gs
mov
jne
sub
mov
or
mov
mov
mov
push
in
push
or
test
inc
jl
or
mov
pop
cmpsl
ja
push
cwtl
xchg
pushf
pop
pop
fldcw
les
and
push
movsl
xor
jle
popf
std
popf
ljmp
cmp
outsl
push
scas
hlt
pop
push
inc
dec
das
leave
test
inc
incl
out
out
sti
daa
aad
test
rorl
ret
dec
loopne
or
das
or
adc
mov
mov
or
enter
stc
xchg
dec
push
dec
imul
mov
sbb
xchg
mov
xchg
mov
out
lods
test
mov
pop
repz
cwtl
xlat
nop
push
hlt
aas
loop
subl
push
stos
test
pop
add
enter
frstor
ds
mov
lret
popa
jl
stos
mov
sarl
out
sbb
in
mov
add
mov
cltd
sub
faddl
fadds
jle
cmp
jb
add
shrl
insl
inc
cmpsl
or
jle
cmp
or
push
lds
adc
sub
mov
cmp
fsubrs
outsb
add
pop
inc
inc
shrb
andb
out
dec
les
gs
jge
mov
add
jmp
into
jg
xor
repz
std
mov
test
lods
lret
into
jb
xor
sahf
xchg
cltd
das
or
test
add
or
mov
mov
lods
xchg
xchg
sahf
and
rcll
dec
aas
jl
add
mov
mov
xlat
push
xor
mov
sbb
xchg
clc
xchg
push
cmc
sahf
insb
cld
xchg
xchg
imul
mov
test
mov
lret
movsl
push
or
pop
loope
ljmp
test
sbb
inc
lods
rcrl
mov
sub
mov
jle
movsb
cmpsb
dec
cltd
imul
in
hlt
mov
mov
mov
imul
iret
push
fisttpl
popa
jo
inc
sub
add
iret
mov
mov
xor
popl
and
sub
inc
push
sahf
xchg
xchg
mov
pusha
mov
rcll
add
xchg
jmp
adc
pushf
dec
mov
std
test
xchg
add
lds
sub
adc
cmp
and
mov
out
jb
adc
test
mov
imul
pushf
pop
rol
jmp
mov
xchg
or
fdivrl
stos
jl
arpl
inc
loop
mov
or
pop
and
pop
nop
cmp
xlat
mov
data16
jne
or
adc
popa
lods
enter
lods
aad
push
rorl
cmpsl
sbb
imul
hlt
das
mov
jae
inc
lods
jns
xchg
inc
js
or
cmp
movsl
ret
out
andb
sub
cmc
xchg
mov
mov
cmp
aad
cwtl
icebp
sarb
hlt
pop
stos
dec
cmp
js
popl
pop
fwait
sub
and
fsts
inc
divb
xchg
xchg
imul
add
repnz
rcrb
std
add
mov
popf
xchg
imul
lock
es
stos
and
leave
dec
cwtl
lret
ret
mov
mov
push
pusha
outsl
jge
pop
mov
or
jl
leave
xchg
ret
inc
or
js
adc
imul
js,pt
xchg
orb
add
cmp
mov
js
jp
int3
mov
lods
test
repz
pop
scas
cwtl
mov
enter
mov
jl
pop
jge
lods
add
xchg
pop
inc
cmc
xchg
push
pop
icebp
lock
clc
or
stos
push
or
lods
jmp
lcall
dec
pop
add
adc
inc
jnp
neg
test
mov
mov
cmp
insl
mov
test
or
mov
outsl
hlt
push
jp
xor
ret
fdivrs
cli
cmpsl
fistps
or
push
fdiv
mov
mov
test
ljmp
or
xchg
pop
insl
push
push
pop
xchg
out
dec
cld
push
sbb
push
mov
xor
lods
jecxz
and
std
test
jnp
add
clc
push
mov
bound
lock
int3
ljmp
mov
fnsave
push
mov
mov
xor
jo
in
pop
xor
adc
leave
popa
cwtl
jmp
jno
jno
lea
pop
xchg
mov
and
mov
notl
data16
mov
lds
inc
cmpsb
fsubl
mov
mov
jmp
shlb
testb
das
vshufps
out
test
shrb
mov
testl
inc
mov
nop
mov
adc
mov
jge
dec
shlb
push
push
ss
ljmp
add
jbe
fcmovnb
popa
add
adc
dec
push
xchg
mov
les
add
sti
fcoml
ret
sub
cwtl
or
mov
mov
xor
mov
pop
adcl
stos
add
shr
test
mov
xor
in
cmpsl
or
pinsrw
test
test
push
pop
mov
orl
lods
cmp
xchg
ljmp
xor
add
fisubrl
mov
pop
nop
cwtl
out
cwtl
pop
lods
stos
iret
jge
int
fdivrl
sbb
hlt
in
jb
sbb
sub
xlat
or
adc
rcl
adc
inc
and
nop
ja
mov
inc
xchg
pop
xchg
out
out
lds
and
xor
xor
mov
test
in
xchg
aad
movsl
lret
or
inc
pop
jnp
test
lea
in
inc
rolb
or
fisubs
sarb
je
mov
add
push
data16
cmp
pop
mov
out
andl
frstor
and
in
or
jmp
jbe
cli
fimull
lea
lret
cmp
cmpsl
test
adc
mov
cmc
nop
add
pop
cmp
test
mov
testb
enter
inc
xchg
xchg
push
jge
dec
cli
aaa
shll
insl
push
insl
test
out
popf
xchg
xor
sti
or
dec
sahf
mov
std
shrl
sub
mov
int
mov
mov
and
cld
push
or
scas
add
dec
int
cmpsl
cmp
add
push
mov
add
popf
or
int3
xlat
cmp
ret
pop
loopne
into
xchg
fsubrl
movsl
inc
mov
or
daa
xchg
aam
jae
and
jbe
dec
ficoml
xchg
loopne
jmp
shrb
movsl
mov
fdivl
out
dec
xchg
mov
popa
cwtl
inc
test
mov
orl
lea
pusha
xchg
rcr
int
test
out
nop
test
inc
rclb
das
push
fsqrt
sbb
xor
repz
sbb
negl
jge
nop
xchg
mov
push
cmp
inc
xlat
add
scas
ret
lret
dec
adc
lahf
shl
add
fsubrl
xchg
xchg
leave
fstpl
popf
mov
xchg
lods
std
rclb
push
jp
pop
mov
jle
icebp
mov
add
stos
jl
std
jge
fbstp
adc
aad
xchg
or
sahf
pushf
push
mov
daa
push
jl
das
cmp
test
push
rcll
jmp
outsl
or
jmp
imul
push
mov
repz
or
cmpsb
lods
mov
dec
xchg
dec
lods
push
add
jle
in
pushf
add
sti
xlat
movsb
fmul
fcoml
jecxz
lods
pop
ja
fldl
test
jp
mov
rcl
cmp
jge
lret
test
inc
shlb
outsb
ljmp
pop
xchg
adc
movhps
or
pop
cmpsl
outsb
xchg
test
enter
push
and
mov
sub
cs
push
inc
mov
xchg
stos
outsl
add
cltd
or
add
repz
xchg
or
xchg
pop
xchg
xor
mov
pop
mov
loopne
xchg
push
test
flds
mov
aaa
fsubrp
ret
xlat
or
sub
inc
lret
imulb
xchg
sti
mov
xchg
rcrb
sub
sub
mov
adc
add
int3
mov
and
int
neg
es
push
icebp
mov
xlat
out
bound
sbb
add
outsl
ret
stos
repz
xchg
mov
mov
pusha
loopne
shrl
xor
aam
addb
jg
mov
shrl
push
mov
inc
lret
or
sarl
mov
push
add
cli
xchg
int
pop
faddp
shl
stos
fnstcw
and
fdivrl
mov
imul
xor
mov
pop
ss
mov
jg
neg
fistps
arpl
or
adc
jbe
pop
pop
scas
enter
cmpsb
les
scas
movsl
idivb
cmpsb
lret
pushf
ds
mov
mov
inc
xchg
cmpsb
mov
movsb
add
into
xor
xor
push
xchg
mov
xorl
cltd
nop
push
shlb
dec
add
adc
lock
xchg
sahf
or
std
test
push
scas
add
or
jmp
aad
cmpl
sub
pushf
neg
fidivl
sub
add
dec
std
orb
clc
and
mov
cmc
inc
inc
and
mov
mov
ret
jg
adc
js
adc
xorl
mov
pop
nop
stc
enter
add
imul
subb
pop
xchg
mov
inc
mov
in
movsb
jp
push
test
mov
hlt
stos
imul
andl
mov
in
jp
and
into
and
inc
enter
cmp
hlt
loop
rcll
aas
mov
cs
out
test
xchg
or
adc
test
mov
cmp
pop
mov
lcall
adc
in
out
sub
loop
xchg
nop
mov
or
cwtl
imul
scas
xor
int
jns
lods
arpl
int3
repz
into
clc
hlt
std
push
mov
icebp
sahf
imul
mov
sahf
cmp
xchg
in
cmp
fld
inc
in
xchg
mov
push
mov
addr16
push
pop
push
clc
insb
or
xchg
xlat
loopne
xchg
cwtl
dec
adc
outsl
std
lock
cmp
adc
cwtl
outsb
je
or
stos
mov
js
jge
cltd
test
cs
adc
rcll
or
mov
cmpsb
or
jecxz
fildl
aas
add
popf
jg
cmp
mov
cmp
out
push
pop
mov
jnp
pushf
test
xchg
adc
add
imul
mov
call
cwtl
imul
orl
or
jns
dec
push
int3
jg
add
int3
xor
or
push
shl
insl
add
inc
mov
push
mov
rclb
out
jo
mov
jnp
gs
rclb
mov
test
or
lahf
scas
lods
sub
add
adc
out
test
pop
lods
mov
in
or
pop
loope
or
nop
mov
mov
lret
jl
stos
shlb
pop
popl
arpl
into
jne
jno
stos
jo
push
xor
fistps
aaa
mov
fcmovbe
cltd
orl
cmp
xor
jb
xor
sbbl
mov
mov
cmp
jns
stos
mov
jecxz
in
cmp
xor
into
stos
out
xchg
push
mov
sbb
push
repnz
inc
enter
jg
mov
and
jne
clc
lock
xchg
cmp
sahf
test
push
in
adc
roll
fiadds
jo
mov
inc
xlat
push
mov
adc
mov
addl
testb
cwtl
add
iret
cmc
jbe
pop
andl
mov
add
sub
enter
mov
repz
and
test
pop
and
shlb
cmpb
mov
cwtl
lds
ljmp
nop
pushf
aaa
leave
jne
out
mov
andl
jo
enter
jno
or
mov
lcall
inc
mov
test
push
aaa
mov
lahf
sarb
lds
arpl
movsb
sarb
cmpsl
js
aas
test
adc
mov
cwtl
or
sub
push
lods
adc
inc
rorl
out
int
mov
sbb
mov
pushf
stos
fdivrl
rorb
sbb
mov
xchg
int
fwait
lcall
stos
or
mov
enter
addb
nop
fsubr
mov
fwait
xchg
jg
xor
aaa
adc
rcrl
das
arpl
lods
inc
add
movsb
push
lahf
cmp
sub
rclb
cmp
mov
movsb
fnstenv
cld
dec
xlat
push
dec
or
xchg
popf
push
or
xor
addr16
mov
mov
mov
hlt
add
cmp
inc
inc
rol
subl
push
mov
push
adc
in
sbb
lods
adc
ds
mov
mov
aad
jl
adc
lret
or
mov
push
mov
fldt
cmpsl
fsubrl
repz
ret
xchg
rorb
cmpl
xchg
jns
dec
popf
lods
decl
aas
mov
test
xchg
stc
pop
push
imul
fildll
pop
mov
sarb
sbbl
std
fs
and
or
fisubrl
pop
loopne
cmc
cmpl
stos
xor
jae
mov
sti
mov
bound
jmp
add
imul
push
test
roll
xor
or
stos
dec
lret
and
movsl
jg
cli
rol
lods
or
cmpsb
mov
add
xadd
xchg
pop
aad
ss
sub
mov
mov
xchg
rorb
add
aad
mov
popl
fsub
lods
mov
mov
lods
xchg
icebp
xchg
call
ret
adc
cs
dec
push
shll
cs
loope
lahf
js
sub
xor
mov
pop
inc
jle
xor
mov
or
jp
cmp
xchg
jnp
shrb
test
jne
popf
jge
mov
and
outsl
mov
loope
in
or
test
jbe
lock
mov
mov
in
mov
sub
mov
fwait
mov
adc
pop
xchg
jge
mov
and
subb
or
or
in
add
loopne
shr
cmp
jnp
pusha
leave
ja
xchg
aas
adc
xor
or
cwtl
fdivp
into
cwtl
mov
mov
push
adc
enter
shl
or
popf
ret
andl
adc
add
lds
and
in
rep
dec
cmpsl
mov
inc
and
cmpsb
and
sbbb
insl
push
or
sbb
xchg
mov
jbe
enter
mov
outsl
aam
mov
lods
add
movsl
orb
mov
jg
jg
fiadds
lock
in
mov
adc
call
bound
adc
imul
mov
add
xchg
jle
pop
int3
cmpsb
mov
lock
aam
push
xchg
add
cltd
add
sbb
adc
decl
movsl
cmpsl
pop
jnp
adc
shrb
push
icebp
fwait
pushf
inc
stc
and
lods
jns
mov
fld
mov
xchg
adc
lcall
push
cmp
xchg
rol
insb
push
and
adc
iret
aaa
into
inc
mov
xorl
sbb
andl
jnp
mov
in
mov
lea
into
and
dec
xchg
cmp
lret
xchg
ds
fdivrs
lock
outsb
jns
pop
fidivrl
lock
push
pusha
negl
mov
int3
ljmp
test
cmp
inc
jg
call
ljmp
cmp
dec
test
loop
gs
out
push
inc
mov
outsl
mov
lret
int
mov
lock
inc
or
scas
ja
ret
pop
pop
mov
add
jp
cld
pop
add
mov
iret
adc
aam
mov
leave
jae
jb
popa
and
das
xchg
sbb
add
rcr
sbb
cmpsl
xchg
push
jnp
adc
shlb
mov
jmp
or
ds
fmuls
into
lods
ss
test
adc
add
mov
lret
or
sbb
rol
fdivl
mov
cld
sarb
push
arpl
or
adc
rolb
mov
test
lcall
jg
lods
pop
lods
push
sbb
sub
cmp
mov
push
mov
mov
ds
sub
das
ds
les
lock
adc
fisubl
popf
add
jle
xor
xchg
inc
or
addl
dec
push
addl
rep
insl
nop
push
stc
lret
cmp
cltd
iret
cmc
dec
sub
xor
repnz
shlb
mov
add
jb
rorl
push
sbb
mov
aad
or
out
jnp
pop
pusha
test
mov
xchg
enter
jmp
pushf
add
cmp
jns
xchg
or
orb
arpl
jl
mov
sti
cmp
repz
sub
sub
push
or
jle
dec
or
xchg
lds
mov
sub
xchg
inc
test
push
jmp
mov
add
ss
lods
add
mov
sbb
sbb
cvttps2pi
lret
mov
inc
jnp
cltd
jge
jg
repnz
and
es
inc
arpl
sub
roll
movsb
dec
rcll
fldt
shl
test
jae
movsl
rclb
lds
xchg
adc
mov
push
push
mov
fists
xchg
sub
dec
ljmp
nop
or
xchg
not
xor
sub
mov
dec
aas
mov
sarl
movsl
sti
xor
ljmp
jno
mov
je
push
jno
cmp
in
sub
and
enter
add
add
jne
adc
ds
add
fsubr
lcall
jmp
roll
or
push
xchg
push
push
jle
cmpsl
add
mov
cmp
inc
mov
orb
rorb
imul
movsb
mov
push
add
jp
mov
das
push
pop
cwtl
fsubl
test
mov
push
pusha
add
scas
or
or
cmp
dec
imul
pop
sti
popa
or
add
mov
inc
je
jo
mov
lret
in
sahf
lret
dec
sub
rcl
scas
mov
dec
sub
dec
sbb
pusha
mov
in
das
scas
stos
xor
xor
add
adcb
imul
cmp
repz
push
lods
lcall
mov
xchg
subb
push
inc
or
jmp
xor
push
data16
jo
mov
scas
rclb
aam
push
and
mov
mov
dec
cld
push
jnp
jns
add
andb
inc
cmp
imul
fmuls
and
mov
movsb
pop
mov
stos
outsl
out
mov
enter
test
or
pop
lods
dec
cmp
push
lock
add
mov
add
fists
jmp
andl
sti
mov
icebp
in
lods
mov
lahf
jmp
pop
cmpl
pop
mov
in
notb
mov
pop
inc
sbb
test
in
repz
cmpsb
lods
mov
or
test
loop
mov
cltd
inc
cmp
movsl
into
push
or
push
sarl
int
imul
int3
fwait
test
leave
lds
int
cmp
lock
subb
jbe
int3
or
dec
mov
push
cmp
pop
lret
adc
xorb
arpl
sti
lods
adc
sbb
xchg
mov
iret
insb
insl
adc
sbb
fsub
popf
clc
add
adc
cmp
inc
test
jae
es
mov
stos
outsl
push
stc
filds
cmpsb
fidivrl
addr16
add
outsb
mov
push
clc
jge
xchg
or
sub
pop
nop
xchg
shl
xchg
leave
addl
gs
hlt
jl
xchg
out
mov
mov
mov
mov
mov
nop
into
adc
pop
cmpsb
and
test
push
sbb
aam
xor
mov
dec
stos
mov
shlb
or
mov
popf
ret
add
mov
call
jb
addb
clc
in
test
inc
mov
test
aam
rcl
test
mov
loopne
fadds
repz
xchg
adc
inc
in
jno
mov
dec
add
mov
or
push
mov
fucom
pop
dec
aam
add
mov
aam
lods
push
clc
push
mov
xor
cmp
or
in
push
cmpsb
in
rsqrtps
push
xor
lock
or
fsubrl
sahf
loopne
jp
or
mov
mov
jo
push
mov
mov
test
cltd
push
sbb
mov
jmp
dec
loope
in
push
mov
orb
mov
jno
fwait
xchg
dec
push
test
pop
fwait
push
mov
and
insl
sbb
test
daa
jno
mov
lock
xchg
movsb
adc
inc
ja
lds
mov
adcl
mov
add
cmp
xchg
out
and
add
or
xchg
lods
mov
cltd
inc
or
jge
popf
inc
fadds
pop
andb
or
push
push
mov
mov
inc
fstpt
pop
out
data16
cmc
into
dec
or
movsl
shll
add
pop
cmp
pop
xor
stc
mov
mov
xchg
push
rcl
xor
push
mov
mov
loop
je
dec
push
add
mov
pop
loop
and
sbb
lock
lods
rcll
rcrl
inc
iret
sub
or
jb
ficoms
mov
pop
pop
inc
cld
cmp
ja
aas
lods
or
daa
por
mov
inc
js
or
rolb
enter
pop
inc
decl
mov
call
lret
rorb
add
inc
cwtl
ja
pop
imul
xchg
pop
inc
lret
cli
jno
sbb
lods
bound
repz
dec
and
add
movsb
gs
add
cld
leave
or
call
faddp
fistl
mov
rcr
ret
mov
testb
scas
lods
enter
hlt
popf
or
sub
xchg
add
ror
ja
mov
sti
xor
xchg
mov
js
mov
xor
enter
test
adc
call
or
sarl
push
js,pt
push
or
js
lret
inc
cmp
imul
push
add
and
fbstp
jns
add
inc
or
sub
adc
std
icebp
cwtl
orb
out
movsl
push
sar
int3
cmpsl
jns
shlb
rorb
cmpsl
push
in
mov
jmp
rolb
jb
mov
call
rorl
addb
xchg
pop
scas
cmpsb
mov
test
fidivl
cmp
mov
push
pop
bound
test
mov
mov
std
and
cld
faddl
or
and
xchg
clc
pop
in
jns
dec
pop
pop
stos
adc
cld
fldt
es
das
pop
inc
jno
pusha
test
mov
adc
adc
dec
jae
iret
insl
and
add
sbb
test
movsl
ret
sbb
cmpsb
mov
and
lods
es
xchg
xchg
xchg
leave
xor
pop
pop
or
ftst
sub
enter
or
hlt
in
addl
and
popa
mov
int
movsl
cmc
and
cmpl
pushf
dec
hlt
test
mov
dec
std
xchg
rcll
pop
xchg
js
ja
and
mov
nop
adc
mov
lret
cs
mov
sar
xchg
daa
shll
mov
xlat
into
push
mov
or
xchg
js
and
xchg
dec
pushf
xchg
fisubl
iret
xchg
inc
and
mov
leave
sbb
jmp
stc
mov
push
xchg
mov
cmp
pop
or
sub
xchg
leave
js
mov
fs
ja
mov
mov
mov
xchg
addl
cmpsb
jge
loope
cmp
imul
xchg
insb
ret
xchg
push
xchg
jne
dec
nop
pop
rcl
scas
push
rorl
andb
test
adc
cld
mov
cs
jnp
incb
sub
lret
mov
push
std
push
sbb
cmpsl
pushf
sbbb
push
and
fnstcw
test
mov
fucomip
cmp
sub
lods
rcrb
push
lcall
xorb
adc
enter
or
rorb
pop
shlb
and
in
test
dec
je
notb
dec
mov
rcl
into
into
fsub
xor
mov
jg
xlat
enter
fwait
cmpsb
stos
or
lret
push
fdivrl
push
jmp
xor
and
xchg
insl
aad
jne
pop
fcoms
movsb
or
aam
sarl
rclb
ficompl
mov
pop
add
lahf
pop
test
jne
leave
adc
push
movsl
pushf
push
mov
mov
adc
push
xor
mov
scas
cmc
add
mov
ja
lods
mov
pop
jbe
iret
inc
pop
test
mov
add
xchg
cmc
movsb
sahf
adc
mov
cmc
or
inc
xchg
and
test
xchg
pushf
add
xchg
mov
fildll
cld
pusha
in
les
jb
lret
pusha
mov
mov
aad
cld
add
scas
sub
shlb
xchg
das
xor
dec
add
loopne
sub
inc
mov
cmpb
jne
stos
push
je
movsl
ds
push
sbb
jb
xchg
cli
je
or
jp
rcrb
clc
shrb
stos
insb
loope
cmp
or
xchg
lods
loope
dec
aam
gs
lret
xchg
addr16
mov
enter
mov
sub
mov
jge
xchg
fimull
push
loop
pop
ja
test
pop
mov
jbe
jecxz
mov
stos
test
jbe
xorb
subl
enter
stos
cld
je
and
mov
push
sub
cld
pop
sti
decl
jae
sub
mov
clc
dec
inc
push
test
add
jg
test
movsl
xchg
div
mov
iret
push
pop
xchg
idivl
fadd
sub
mov
xchg
negl
loopne
pushf
ret
add
jle
addl
mov
pusha
leave
cmc
out
jp
and
add
jl
and
push
mov
cwtl
and
sub
dec
faddl
fisubrl
fisubl
jae
or
in
mov
dec
loop
stc
push
inc
xchg
mov
xchg
jae
xchg
mov
sbb
mov
xorl
inc
xor
push
mov
cmpsl
stc
nop
hlt
jne
fistpll
cmp
cwtl
mov
sub
loop
or
nop
imul
cmp
lods
data16
push
insl
test
add
jns
xor
lods
jnp
into
fsubrs
push
adc
mov
cmc
lea
mov
js
pop
jge
lret
dec
jae
lret
fbstp
sti
fcmovbe
push
lret
scas
mov
xchg
sub
pop
mov
or
icebp
jle
cmpsl
inc
dec
fcompl
loop
xchg
out
pop
mov
cwtl
add
test
mov
int
popa
call
push
jb
mov
sbb
xor
xchg
cwtl
cmc
test
mov
push
dec
out
scas
mov
imul
jbe
in
xchg
movb
add
decb
out
add
icebp
jg
rorb
lahf
inc
adc
in
mov
mov
cld
ds
enter
inc
aad
add
xchg
cmp
adc
lret
jge
outsb
push
fbld
or
orl
gs
data16
xchg
into
lock
inc
or
cmpsb
mov
fdivrs
std
inc
xor
sub
jp
cmc
sub
insl
push
and
das
sbb
mov
out
fstl
fldenv
loop
adc
mov
mov
int3
push
adc
or
aam
fsub
aas
lret
lock
adc
mov
pop
xabort
or
leave
sub
mov
mov
pushf
mov
mov
test
xor
mov
dec
pushf
mov
call
sarb
adc
lret
mov
mov
or
insb
out
fistps
xchg
hlt
mov
incb
shl
les
pop
rolb
popf
mulb
adc
in
or
movsl
xlat
fisttpl
sarb
add
mov
lock
aas
xor
pop
push
inc
xor
pushf
or
repnz
cmp
movsb
cli
push
jb
adc
jnp
dec
stos
mov
mov
jg
pop
mov
jnp
imul
lods
aad
inc
rcrl
out
in
dec
ss
adc
push
and
gs
test
stos
pop
dec
jb
insb
cmp
ficoms
test
mov
int3
test
sahf
js
or
scas
inc
pusha
adc
iret
cmc
cmp
mov
or
mov
push
cmc
inc
adc
mov
arpl
enter
cmc
pop
inc
pop
loope
nop
mov
aas
ret
add
xor
cmc
aaa
lcall
xchg
push
in
adc
insl
popa
add
jp
fdivl
mov
xor
or
xchg
rclb
clc
pop
sub
fiadds
stos
dec
lret
dec
ffreep
or
pop
mov
push
dec
xchg
imul
movsl
ss
mov
jmp
ja
pop
into
ret
bound
int3
dec
fildl
xchg
mov
gs
mov
std
testb
dec
js
and
ret
mov
mov
jle
push
jp
out
inc
inc
sub
xor
addl
test
adc
fistps
mov
sbb
mov
mov
mov
idivb
nop
pushf
aaa
mov
fldl
cltd
cmpb
or
scas
mov
data16
cmc
pop
stos
hlt
lret
jle
stc
scas
nop
icebp
rol
ret
pop
and
hlt
sub
fs
into
int3
ficompl
dec
nop
scas
xchg
cmp
mov
leave
lock
je
pop
mov
cmp
lock
gs
mov
es
mov
sbb
ljmp
mov
cli
cmp
mulb
inc
mov
xorl
roll
lods
leave
jno
sub
out
iret
rcrb
iret
jb
lcall
dec
mov
xchg
push
xor
mov
mov
sub
test
sbb
cltd
into
dec
out
mov
dec
movsl
leave
or
or
xchg
cmc
and
xchg
stos
push
dec
xchg
test
mov
dec
mov
mov
sbb
movsb
mov
les
clc
jge
push
push
out
in
dec
adc
sbb
lods
add
cltd
sarb
xor
aam
dec
pop
xchg
pop
ljmp
jbe
and
lret
rcrb
push
aam
scas
testl
lods
mov
xorl
push
jge
mov
or
mov
or
hlt
mov
subb
xor
pushf
ja
rcll
into
or
add
js
inc
scas
sahf
sbb
filds
xor
xchg
mov
andb
pop
loopne
orl
scas
mov
adc
aas
aad
xorb
xchg
inc
add
stos
inc
jne
inc
push
or
stos
pop
pop
sbb
dec
jmp
xchg
xor
lret
or
cmc
or
cmpsl
testb
mov
test
jle
inc
add
aam
or
aam
dec
icebp
adc
mov
or
test
jmp
jmp
pop
stos
scas
mov
sub
insb
fistpll
pop
mov
enter
sti
aad
sub
sub
xor
jp
xchg
add
or
rcrb
mov
mov
les
adc
add
inc
xchg
xchg
loopne
shl
mov
mov
nop
insl
shll
xorb
sub
xchg
and
je
inc
and
xchg
pusha
xlat
nop
jno
adc
inc
outsb
cld
push
push
sub
ret
lcall
rolb
stos
jo
nop
testb
dec
lods
inc
inc
lods
shlb
add
rorb
nop
test
cwtl
mov
loop
mov
js
xchg
xchg
cmp
movsl
hlt
xchg
int3
cwtl
addr16
cmp
inc
scas
flds
cmp
cmpsb
xor
mov
push
adc
lds
movsb
cmp
lods
jmp
das
jo
jmp
dec
lcall
inc
or
sbb
sahf
sbbl
xor
loope
scas
mov
pop
sbb
inc
nop
add
mov
dec
icebp
test
mov
arpl
mov
nop
cltd
mov
flds
push
mov
andl
rcrb
imul
mov
add
jg
test
sbb
jmp
scas
dec
aad
dec
mov
and
fucomi
rorb
mov
lods
shl
test
stos
mov
sbb
sbb
lods
xchg
jmp
int3
fidivl
inc
inc
pop
out
lea
pop
cwtl
das
mov
sbb
rolb
ficomps
jp
mov
add
xchg
sub
push
pop
outsl
dec
movsb
xchg
roll
adc
mov
lcall
loop
mov
xchg
or
mov
and
inc
ret
fld
and
and
pop
inc
stos
ret
cmp
and
inc
mov
add
mov
test
mov
adc
ljmp
jl
enter
loop
std
xchg
popa
rolb
mov
pop
cli
lods
daa
in
mov
xor
pop
test
popf
xchg
mov
mov
add
mov
mov
push
pop
rol
lds
adc
test
adc
stos
or
add
mov
aam
decb
jbe
andb
cmp
loopne
adc
mov
pop
pop
xchg
loop
lret
pop
pop
push
arpl
ja
mov
call
or
sahf
cli
test
inc
jno
pusha
xchg
or
scas
pop
or
les
inc
add
ret
in
and
cmp
fmul
fwait
mov
mov
cmp
sub
and
mov
fs
pop
inc
adc
adc
ret
pop
mov
push
int
push
push
mov
sub
mov
or
xchg
adc
jbe
lock
test
imul
or
add
insb
arpl
dec
test
mov
push
or
mov
xchg
js
add
lods
bound
sub
lods
pop
cmpsl
jb
sub
sub
movsb
lret
nop
movsb
inc
mov
mov
cmpsb
test
xor
mov
xchg
inc
lret
in
jle
sbb
scas
and
pop
dec
mov
mov
nop
jge
ja
nop
mov
mov
loopne
mov
mov
shll
sarb
lret
xor
loope
shl
xor
mov
mov
dec
xchg
shl
or
lock
ljmp
mov
mov
sub
dec
xor
pop
mov
pop
xchg
or
loopne
adc
es
imul
sub
in
mov
sbb
negb
ror
bound
xchg
inc
movsl
pusha
jbe
dec
sbb
adcl
jle
dec
or
shrb
lret
cmp
jge
xchg
enter
sbb
cld
jp
loopne
xchg
stos
fcoms
mov
lcall
mov
fisttps
les
jle
push
aad
test
cmp
test
pushf
mov
jmp
stc
inc
xchg
jle
xor
rcr
jae
dec
pusha
mov
xchg
jnp
push
sub
mov
or
imul
mov
jne
jmp
pop
sub
jmp
or
xchg
pop
ret
xchg
xchg
orl
adcl
jnp
xchg
sahf
arpl
out
xchg
xor
cmpsb
pop
mov
fstpt
addr16
or
mov
xor
imul
or
sbb
lcall
les
mov
inc
fstl
jb
pushf
jl
xor
into
fcoms
shl
lahf
nop
les
test
add
fcomp
cld
iret
push
mov
adc
lret
leave
add
outsb
adc
rcr
mov
pop
stc
mov
mov
in
mov
pushf
sete
outsl
add
jmp
dec
in
test
jb
std
stc
nop
ljmp
fmull
pushl
push
dec
mov
sub
jns
test
xor
cmp
addb
nop
xchg
mov
insb
xchg
stos
testl
ds
aas
xchg
movnti
enter
dec
fnsave
in
lret
xor
or
jns
sub
out
test
repnz
int
push
lea
sarb
dec
push
stc
lcall
and
push
or
dec
mov
aam
add
mov
adc
xchg
and
jns
arpl
sbb
cmpsl
pop
mov
or
inc
add
push
mov
or
cmp
sub
cmp
cmp
mov
adc
outsb
ret
fadds
mov
xor
adc
test
cmpsl
and
enter
jns
rorb
out
mov
stos
popa
or
push
dec
stos
movsl
test
cmp
rcll
enter
and
int3
adc
in
push
pop
sub
dec
jnp
ret
loopne
movsb
or
test
lods
nop
mov
sbb
xchg
mov
fldcw
mov
add
fidivs
adc
xchg
or
rolb
cmp
nop
mov
mov
negb
clc
pop
mov
or
mov
insl
adc
xlat
mov
and
imul
xor
mov
xchg
ljmp
aaa
inc
pop
dec
or
xchg
jg
pop
dec
hlt
push
sub
fwait
movsl
dec
in
mov
cli
pop
leave
mov
pop
inc
adc
jecxz
mov
lret
jne
test
xchg
jp
inc
cltd
shrb
mov
int
jne
mov
mov
xchg
call
enter
stc
sbb
sarb
loopne
or
pusha
adc
jbe
mov
pop
and
cwtl
and
pushf
mov
scas
aad
call
ret
sub
adc
lret
lds
test
xor
testb
lods
inc
shrb
les
std
push
in
pop
pushf
outsl
sbb
pop
popf
lods
mov
notb
je
cmp
xchg
cwtl
fstps
adc
mov
ss
push
fldcw
mov
or
movsl
and
mov
mov
xor
js
mov
cmp
std
or
enter
es
lods
xor
xchg
mov
adc
adc
aas
xchg
xchg
cmc
or
sbb
and
mov
test
push
jl
in
mov
xchg
pushf
and
inc
sbb
fdivrl
mov
leave
popa
shlb
fs
push
sub
lret
push
mov
popa
leave
mov
or
xchg
repz
test
xchg
inc
mov
add
mov
push
daa
insb
dec
mov
xchg
push
xchg
das
faddl
sahf
dec
lcall
push
aam
add
sub
cltd
cltd
out
xchg
cmp
fcmovb
addr16
xor
add
jge
fchs
push
and
sub
mov
jge
shlb
stc
jecxz
pop
loopne
sub
in
sbb
into
and
pop
mov
mov
das
testl
push
sbb
mov
or
mov
mov
lock
rol
jo
pop
lock
jp
push
decb
xchg
mov
rclb
sbb
mov
jl
mov
pushf
leave
sahf
xchg
or
nop
insl
imul
addb
xchg
test
mov
pusha
mov
out
arpl
aas
inc
or
sbb
dec
divb
pop
and
mov
test
dec
mov
and
fsubp
and
fisttpll
add
push
and
insl
pop
movsl
sub
push
dec
iret
pushf
push
sub
fcoml
mov
in
enter
je
inc
cmc
cwtl
or
pop
lcall
outsb
inc
mov
sbb
sub
lods
cmp
inc
xchg
mov
test
mov
add
mov
js
pop
into
add
xchg
rcrl
inc
fdivrs
or
frstor
xchg
or
inc
test
sahf
mov
mov
test
cmc
mov
popa
call
repz
add
test
iret
or
loope
mov
jmp
mov
dec
mov
loopne
pushf
pop
add
xchg
orl
jecxz
rcrb
jge
ja
cwtl
mov
test
xchg
cmc
mov
and
pusha
insl
mov
enter
arpl
mov
push
mov
fmul
xor
lea
imul
sahf
xchg
mov
fs
arpl
int
arpl
popf
outsl
stos
je
adc
jb
adc
mov
and
pop
stos
daa
cmpsl
pop
cmp
cmp
fdivl
stc
lods
imul
jns
sbb
scas
add
test
pop
adc
xchg
roll
stos
loop
sahf
test
add
fadds
lret
mov
nop
dec
mov
dec
in
sbbb
in
leave
mov
push
arpl
mov
xchg
subb
dec
mov
sti
aam
pop
lcall
cmp
xlat
push
lahf
fcom
cli
sbb
mov
rolb
loope
out
mov
cld
movl
jo
xchg
xchg
scas
cld
sbb
fmull
adc
stc
mov
xor
sbb
dec
mov
or
dec
xchg
pop
test
push
ret
mov
xor
mov
jmp
xor
clc
dec
dec
xchg
cltd
sbb
loopne
cmp
test
push
xchg
mov
pusha
xchg
int
call
sub
xor
out
addb
xchg
lea
and
outsb
push
push
mov
fisubl
pop
in
xchg
or
in
fadd
cmp
dec
xlat
flds
call
pushf
mov
inc
cmpl
cmp
lods
xchg
leave
in
bound
xchg
cld
push
rorl
adcl
jb
jns
pushf
xor
and
cmpsl
rorb
pushf
or
jp
test
cwtl
in
rorb
xchg
sub
enter
xchg
cmp
ret
stos
movl
lcall
test
stos
jg
pop
pop
leave
std
fldcw
lods
enter
filds
xor
shrb
xchg
sbb
orl
dec
xchg
or
rolb
inc
leave
hlt
xchg
cltd
fcoms
shrl
cli
test
mov
movsw
rcl
mov
push
and
cmpsb
add
sub
pop
adc
stos
add
mov
cmp
or
jg
cmpsb
rcl
lods
rorb
mov
mov
jmp
push
mov
pusha
in
or
pushf
adc
mov
mov
sbb
fcomip
into
lds
dec
clc
push
xor
subl
lret
aad
inc
push
into
cmp
pop
mov
push
rclb
shrb
inc
les
ret
cmpl
xor
xor
sbb
mov
cld
int
std
insb
add
mov
mov
fwait
lret
lahf
and
lods
jg
sahf
hlt
movsl
aas
fdivrl
call
push
and
mov
fcomps
sti
cmp
pop
xchg
or
stos
or
ret
dec
mov
mov
xchg
and
dec
lcall
in
sbb
mov
push
inc
pushf
mov
add
add
jge
fiadds
mov
cs
movsl
dec
and
fistps
outsb
cmp
in
xchg
cmp
daa
jnp
cmc
xchg
mov
lret
adc
xor
sbb
cli
rcl
mov
cs
cmp
stos
inc
jo
ja
lea
mov
test
test
mov
int
cmc
adc
and
xchg
lods
xchg
inc
cwtl
inc
movsb
xchg
fstpt
pop
xchg
mov
lret
pop
stos
les
cmpsl
leave
or
inc
cmp
cmpsl
hlt
mov
xchg
subl
xchg
cmpsb
loopne
push
test
cltd
add
xchg
or
fsubrs
addl
out
mov
xor
add
and
cmpsl
clc
sbbl
or
les
add
dec
es
call
out
mov
cltd
and
movsl
jmp
stc
mov
test
cmc
aad
sbb
in
and
outsl
outsl
movsb
lock
test
cmpsb
enter
xchg
adc
in
xlat
stos
adc
test
sub
push
push
add
add
or
lahf
sub
xor
cmp
bound
pushf
inc
sub
test
push
pop
loopne
pop
cmpsb
add
xchg
jg
mov
push
and
out
sti
dec
imul
dec
lcall
or
cmpsb
inc
enter
out
mov
loopne
shr
adc
loop
adc
lods
rcl
jae
movsb
pop
in
mov
movsb
xchg
clc
pushf
hlt
les
jns
cltd
enter
mov
push
int3
lret
add
out
ljmp
pop
insl
scas
xor
jmp
cmc
shrb
ds
subl
adc
pop
xchg
and
adc
xchg
sub
loope
stos
cmp
movsb
push
xlat
insb
loopne
in
adc
pop
push
cmp
dec
mov
lret
dec
loope
xchg
push
movsb
mov
test
imul
xchg
push
nop
sub
xchg
adc
ror
jo
mov
shrb
insb
popa
sub
adc
lods
xchg
dec
iret
xor
aam
mov
cs
add
cs
out
pop
jo
jo
and
add
xchg
push
or
imul
dec
mov
movsl
adcl
mov
inc
pusha
mov
fnsave
jmp
stos
adc
lret
cmc
dec
outsb
sbb
or
pushf
cmpsb
adc
adc
nop
sub
or
testb
bound
mov
and
push
sti
push
imul
push
push
loopne
call
repnz
and
into
mov
div
mov
mov
aas
mov
lret
aad
scas
and
pop
dec
icebp
jo
insl
mov
mov
andb
xor
jle
ja
and
lcall
int3
fisttpll
add
inc
filds
insl
stos
outsb
jmp
fisubrl
add
out
mov
add
stc
test
cmpsb
xlat
lds
push
lcall
cmp
inc
mulb
sbb
adc
and
int
std
fs
enter
and
popf
push
cmp
ja
pushf
cli
lds
mov
lret
test
icebp
out
sub
inc
outsb
adcl
mov
mov
lods
shrl
adc
data16
jbe
adc
jge
lea
inc
xchg
repnz
dec
fadds
jnp
cmc
inc
push
xor
and
in
aaa
xor
xor
sub
mov
push
das
adc
in
jl
mov
add
and
fmul
sbb
or
cmp
dec
push
xchg
ss
jg
sbb
sub
stc
cwtl
dec
sahf
jp
test
es
int3
cmpsb
addr16
fsubl
shll
push
add
or
or
cs
fs
inc
mov
lods
movsb
fsubrl
xor
test
pop
scas
das
pop
cmp
or
out
cmpsb
mov
add
in
cltd
cwtl
rorl
rorb
loopne
pop
loop
inc
imul
sub
push
gs
jns
std
and
add
aad
test
sarl
xor
add
xor
inc
movsb
sub
movsb
les
fistpl
adcl
daa
imul
add
inc
inc
sbbl
out
movsl
out
xchg
test
ret
testb
in
mov
pushf
fsubrp
orb
add
add
jb
into
cmp
adc
fcoms
rclb
das
cltd
fisubrs
pop
cmp
xchg
stos
imul
ret
rcll
in
push
mov
pusha
lret
addr16
inc
divl
addr16
adc
iret
cli
lock
pop
jno
rclb
jl
movsb
adc
xchg
ret
insl
and
adc
int3
nop
pushf
mov
in
push
jbe
fs
lock
mov
mov
jge
mov
into
sub
push
xchg
jne
mov
in
cli
test
call
mov
push
ficomps
loop
lds
inc
lock
pop
or
rorl
add
dec
aas
sarl
dec
pushf
sbb
mov
cmc
and
mov
iret
lock
mov
inc
push
insb
test
ret
xchg
sub
cmp
inc
movsl
jg
test
ds
test
and
cli
test
andl
mov
cmp
ficoml
mov
cmp
sub
adc
adc
mov
enter
mov
std
je
les
shrl
fistl
fsubl
jmp
leave
sbb
and
testb
or
mov
push
nop
cld
std
cmc
xor
outsb
sahf
jne
lock
icebp
stos
or
call
xchg
js
aam
adc
pop
notl
movsb
das
xchg
hlt
mov
test
in
sti
pusha
call
in
hlt
mov
aam
or
shll
mov
jge
fidivrs
cmp
pop
mov
aaa
rcrl
xlat
sbb
adc
mov
sbbl
repz
aas
lock
adcb
jns
xchg
push
popa
mov
jmp
cmp
std
dec
xlat
lods
jbe
adc
jg
bound
add
mov
push
fwait
into
popa
mov
and
mov
xor
push
mov
mov
mov
mov
into
lods
jns
adc
loopne
das
mov
icebp
nop
stos
aas
cmpsl
loop
in
js
add
add
mov
xchg
jg
xchg
or
jmp
or
mov
popl
mov
fwait
mov
pushf
movsl
pop
cmp
hlt
mov
les
je
dec
ret
mov
inc
mov
xlat
mov
fwait
or
mov
loop
es
ljmp
jns
xor
call
stc
test
mov
test
test
mov
xchg
inc
lret
sub
ja
ret
or
iret
int
pop
loop
mov
cmpsb
mov
test
mov
popf
mov
ret
and
cld
or
cld
aas
dec
mov
mov
jne
dec
sbb
mov
mov
push
push
mov
mov
jmp
mov
test
xchg
nop
dec
push
icebp
mov
dec
mov
std
inc
add
outsl
xchg
xor
or
stos
fadd
mov
in
or
mov
pop
mov
idivb
rcr
nop
xchg
push
int3
and
sub
lret
or
ficompl
cmp
dec
xchg
mov
scas
cltd
shrl
mov
or
dec
idivl
inc
pop
push
cmp
out
hlt
faddl
jo
inc
nop
push
or
mov
ja
int3
or
pop
xchg
mov
xchg
fisttpll
fsubp
outsb
movsb
mov
sub
cmp
cmp
jbe
cmp
fwait
shl
test
cmpsl
push
enter
sahf
mov
sbb
leave
add
cmpsl
sub
sbb
push
ljmp
jg
pop
fcmove
aad
and
test
arpl
adc
xchg
xchg
pop
pop
adc
push
rclb
mov
pop
xchg
popf
or
test
mov
cmp
fildll
int
or
out
lock
or
cmc
call
fwait
mov
int3
mov
scas
rolb
dec
iret
lods
sub
add
lcall
insb
mov
movsl
push
nop
mov
cmp
mov
pop
fwait
pop
rcrl
mov
fcomi
enter
rclb
add
cmpl
in
lret
fsubs
sbb
repz
sarb
and
push
xchg
imul
in
int3
fimuls
jp
fbstp
sub
std
rol
or
les
cltd
mov
adc
lock
mov
jge
lock
adc
push
push
push
daa
test
xchg
hlt
or
stc
orb
xor
std
lret
xlat
inc
in
in
shr
ret
mov
cmpsb
jmp
sbb
test
xchg
popf
mov
pop
jo
add
and
lret
shl
dec
pop
add
push
test
sti
lret
mov
sub
pop
lret
rcll
rorl
or
pop
decl
add
mov
cmp
loopne
mov
cmpsl
icebp
lods
and
imull
movsl
rcll
sub
xor
mov
stos
push
fs
shrl
mov
inc
out
lock
movsb
xlat
fs
xchg
push
push
stos
xchg
jecxz
daa
add
les
jnp
xchg
lods
inc
cmp
or
lret
out
cmpsl
dec
shrb
sbb
lahf
mov
in
jne
push
ljmp
cmp
mov
aas
jl
inc
cmc
movsl
or
sub
push
push
pop
mov
jb
xchg
ljmp
mov
lret
cmp
push
mov
push
and
inc
aas
or
adc
pop
into
push
adc
popf
sub
push
mov
xor
test
jb
xchg
mov
add
dec
jo
mov
mov
ljmp
lock
std
ds
pop
faddl
imul
add
inc
nop
or
push
sarb
lret
andl
or
fdivrs
xchg
movsb
and
mov
popf
aas
sbb
fadd
call
in
fisubl
xchg
call
jo
jno
mov
xlat
call
pusha
cmc
into
adc
or
enter
xchg
aas
cld
push
pop
mov
aas
jbe
hlt
pop
dec
jle
push
or
pop
jg
sub
movsl
adc
loope
test
subl
nop
mov
cld
xor
xchg
inc
jg
mov
xor
adc
xlat
std
adc
or
xchg
sub
jge
cmc
cmc
int3
imul
adc
cmpl
mov
sub
fisubs
push
xor
add
mov
xchg
add
in
clc
xlat
xchg
mov
inc
push
pop
mov
pushf
test
mov
lock
push
jp
cmpsl
inc
pusha
cmc
data16
fiadds
adc
sbb
inc
les
xor
mov
int
dec
adc
decb
mov
popa
dec
insl
jg
fstpt
stc
js
insl
int3
sbb
mov
cltd
mov
test
adc
xor
xchg
xchg
cmp
jae
es
and
ljmp
fisttpll
mov
push
add
inc
dec
mov
sbb
shlb
add
test
and
mov
mov
pop
or
shrb
mov
loopne
jb
mov
mov
imul
mov
in
xchg
push
dec
xchg
imul
lahf
movsb
xchg
lea
push
mov
shll
jns
call
ror
mov
jmp
rclb
std
enter
or
add
sar
leave
aam
mov
std
fwait
mov
test
ds
in
shlb
xlat
mov
mov
imul
and
into
and
ljmp
in
int3
pop
jnp
xor
jno
sub
int
xor
fsubl
gs
push
mov
cmp
xor
popl
push
mov
jp
cltd
sbb
jl
jg
push
fisttpl
cli
shl
sbb
je
and
test
inc
inc
scas
xchg
clc
and
nop
add
andb
insb
xchg
call
sub
xchg
addb
repz
jmp
inc
fstp
fists
call
push
add
cmp
ja
es
jo
fcomps
xlat
xchg
clc
roll
cmp
and
and
stos
or
test
xchg
test
sub
mov
cmc
gs
imull
jl
repnz
sub
cld
xlat
adc
lock
lahf
xchg
pusha
repnz
pop
hlt
loop
jg
daa
sub
or
aas
sub
lahf
jg
push
loop
fcoms
add
mov
fwait
cmp
and
mov
mov
mov
push
loopne
les
push
adc
adc
ret
lods
stos
mov
outsb
fidivs
mov
cltd
mov
repnz
cmp
pop
outsl
cmc
sbb
in
add
and
cmp
scas
mov
mov
mov
inc
daa
sub
mov
push
xchg
into
gs
scas
cwtl
push
fsts
cs
movsl
fildl
push
xor
scas
or
mov
xlat
jecxz
xor
cmpsl
jmp
cld
mov
inc
test
cmpsl
fldl
scas
hlt
mov
add
rclb
cli
xchg
es
jnp
xor
sarl
mov
lock
xlat
sub
lret
adc
xchg
les
or
mov
jle
or
and
xor
int3
movsl
add
leave
or
push
mov
ljmp
or
inc
mov
faddl
xchg
ret
adc
mov
push
push
mov
fbstp
ljmp
cmpsl
mov
les
enter
shrl
mov
mov
mov
aas
sbb
mov
ljmp
cmc
lea
add
or
shll
mov
sarb
xchg
cmpsb
lret
ret
in
and
xchg
add
inc
add
repz
daa
leave
rorb
dec
cld
loopne
jle
xor
dec
fadds
clc
xor
fimuls
push
std
push
sbb
sub
lret
sbb
filds
js
jbe
sbb
clc
jge
push
xchg
enter
lret
push
push
cwtl
xor
jbe
shlb
loop
fwait
mov
repz
jl
lret
js
fists
mov
hlt
inc
jmp
xchg
icebp
mov
lods
hlt
push
mov
repz
inc
mov
lock
rolb
mov
mov
add
mov
test
int3
sbb
or
sbb
mov
add
jp
bnd
xchg
std
ljmp
mov
sarl
mov
fs
sbb
aas
popa
test
push
jns
push
das
push
mov
fisttps
push
fildll
mov
inc
or
lcall
sub
nop
pop
dec
jne
add
andl
mov
xor
add
pop
cltd
cmpsl
shl
dec
sti
cmp
sbb
jge
into
fiadds
test
pop
test
stos
pop
adc
and
adcl
xchg
sub
jge
lcall
mov
orb
xchg
shll
jo
jnp
stos
sbb
jp
add
jp
je
jb
push
push
fstl
fbstp
push
or
movsb
lds
push
scas
sahf
mov
or
in
xchg
in
scas
fldl
fwait
shll
fdivr
mov
fdiv
xchg
push
mov
fsts
pop
mov
jg
rolb
pop
mov
loope
add
mov
pop
je
sahf
fisttpll
scas
jecxz
insl
jnp
adc
shrb
xor
mov
cmp
xor
mov
mov
call
or
lods
inc
cltd
or
movsl
fsubrs
rcrl
cmc
mov
jns
test
rolb
or
dec
push
aad
push
pop
adc
fwait
push
cmp
out
addr16
jmp
mov
mov
dec
adc
fldenv
inc
aaa
subl
aad
mov
add
pop
mov
inc
adc
mov
add
sarl
sbb
or
add
add
mov
movsb
jbe
mov
mov
aaa
cmp
add
cwtl
cmp
fidivrs
fdivr
sahf
nop
popf
or
imul
out
outsl
fisubl
lea
dec
or
add
hlt
aad
mov
inc
xchg
stos
inc
or
xor
sbb
idiv
xchg
xchg
dec
outsb
adc
add
and
cmp
cmpsb
jnp
mov
orl
inc
in
push
test
ja
stos
inc
es
loopne
jmp
xor
push
mov
mov
or
outsl
cwtl
jmp
mov
imul
pushf
mov
fiadds
scas
mov
xchg
pop
rcr
jp
arpl
pop
sahf
fs
cmpb
inc
pop
cwtl
repz
shll
pushf
mov
mov
nop
pop
pop
ficomps
insb
ficompl
pusha
push
es
add
sub
mov
mov
test
movsl
imul
sub
add
xchg
ror
inc
xorl
enter
je
add
sub
in
jbe
arpl
and
lcall
ret
jg
xchg
xor
or
or
mov
ret
cwtl
push
lahf
mov
xchg
jg
sub
cmp
pop
inc
jp
jae
test
mov
push
add
testl
test
test
clc
adc
out
mov
mov
std
rcl
pop
mov
in
jb
aad
jo
xlat
push
inc
pushf
mov
addb
addl
pop
fbstp
cmc
rolb
lret
xor
push
pop
jo
lds
or
repz
pop
and
jl
cmpsb
jecxz
in
pop
xor
sbb
imul
mov
or
js
sarb
movsb
mov
cwtl
clc
cltd
imul
cmp
mov
cmc
mov
outsb
test
clc
mov
mov
pop
shrb
and
dec
dec
push
mov
pop
dec
adc
aas
mov
sarb
push
fisttpl
lea
lods
lea
hlt
out
lret
xlat
or
cmpsl
scas
sub
setne
pop
mov
enter
inc
nop
push
mov
mov
pop
popa
mov
inc
mov
mov
dec
lods
xor
mov
push
cld
and
test
out
mov
pop
add
mov
shll
jle
jo
dec
nop
add
idivb
je
or
lock
sbb
movsb
pusha
sbb
xor
xlat
jmp
shlb
mov
sbb
add
cltd
xor
mov
mov
inc
pop
call
mov
mov
fldl
add
add
pop
cs
ds
fadds
or
and
mov
std
mov
rorl
add
mov
jne
jl
in
into
xchg
adc
mov
xchg
inc
mov
lods
and
adc
das
jge
sub
cwtl
js
rclb
xor
xchg
test
inc
in
in
mov
add
push
pushf
xchg
movsl
mov
loope
jns
and
push
orl
mov
mov
push
and
xchg
cmpsl
push
xchg
pop
mov
sub
ret
pop
jb
mov
aaa
mov
pop
bound
mov
ljmp
outsb
mov
push
popf
sbb
loope
lret
icebp
test
out
mov
ja
pop
push
test
pushf
je
jns
pop
add
mov
stc
or
movsb
adc
je
xor
xchg
sbb
inc
cmp
test
sbb
ror
ror
cmpl
scas
jl
int3
jl
sub
xchg
push
lcall
outsb
out
mov
repnz
adc
xchg
dec
nop
shll
adc
lea
pop
rcrb
imul
pop
mov
xchg
int3
push
dec
cmpl
rorb
call
jg
mov
fucomip
inc
repnz
cld
nop
into
call
sarl
test
fwait
call
iret
fisubrs
mov
popf
or
mov
push
ret
add
rcll
fildll
push
mov
fwait
in
test
inc
xor
std
xchg
lds
in
out
fwait
mov
ret
mov
mov
mov
xchg
movb
ret
xchg
sub
mov
inc
aam
fimull
sbb
imul
lds
mov
xchg
lods
push
mov
cmp
popl
push
push
shlb
xchg
xchg
push
jo
aaa
test
enter
sub
xor
mov
roll
or
out
nop
leave
jmp
fldl
hlt
add
mov
jg
test
add
xlat
or
outsl
filds
lret
pop
jl
pop
adc
sti
xchg
mov
jo
xor
adc
xchg
movsb
fcomip
sub
int
or
push
lock
push
jo
scas
shll
sub
or
adc
cmp
imul
lret
aaa
lds
mov
enter
mov
fidivs
in
mov
enter
mov
inc
push
sub
ret
cmp
hlt
test
mov
int
andb
mov
insb
and
push
arpl
adc
shll
adc
add
in
enter
mov
nop
sub
nop
loop
imull
pop
into
fcomip
adc
push
inc
ret
orb
ret
xchg
mov
pop
fyl2xp1
add
cli
movsb
sub
adc
adc
mov
sub
pop
push
sarb
int
jg
dec
bound
jecxz
fsubp
and
cmpsl
adc
lret
movb
pop
fsubrl
addr16
cmp
add
xlat
or
call
cmp
mov
jne
cmp
cmp
mov
cmpsb
mov
adc
shll
or
mov
cmc
rorl
xchg
je
pop
divb
into
pop
sbb
dec
leave
and
das
xchg
xchg
add
xchg
mov
gs
xchg
push
fs
xchg
out
rol
xchg
jb
pop
fcmovnbe
pop
inc
les
sahf
or
mov
cld
roll
test
fwait
sarl
sbb
sbb
pushf
fistl
adc
hlt
push
add
pop
enter
fcomps
mov
data16
and
cmc
ret
pop
sub
inc
lods
setae
and
lea
or
lea
jge
leave
jno
cltd
repnz
fadds
cltd
fidivl
sbb
test
cmpsl
loop
add
ret
call
mov
cwtl
mov
mov
cmc
lods
mov
cmp
pushf
hlt
cmc
test
rcll
pop
mov
mov
dec
imul
mov
xchg
mov
mov
mov
adc
push
cmc
ficoms
std
sub
fimuls
cmpsl
fsubl
mov
aam
adc
xlat
adc
lds
dec
int3
out
mov
icebp
jo
jmp
mov
mov
shrb
cltd
je
ret
adc
push
leave
hlt
xchg
fcomp
mov
dec
sti
or
xchg
and
insl
adc
mov
cld
or
pop
nop
lret
fiadds
fld
xchg
call
cmp
out
fldz
mov
movsb
enter
or
xchg
pop
cmpsb
bound
test
pop
xchg
push
push
jecxz
int3
jns
fwait
xchg
and
mov
pop
cltd
imul
or
and
dec
adcl
and
dec
cmc
aam
loop
fnsave
or
roll
pop
std
mov
incl
jg
test
popa
mov
mov
mov
push
or
and
lds
sub
int3
ljmp
fwait
sbb
jb
or
push
and
add
pop
jb,pn
and
imul
xchg
push
fisubl
int3
pop
xchg
adc
mov
xchg
push
add
shrl
pop
inc
call
sbb
cmpsl
mov
xor
iret
mov
mov
pusha
mov
nop
int
or
and
xchg
push
movsl
cs
mov
mov
insb
cmp
mov
jo
enter
fcompl
loop
adc
mov
mov
loopne
cwtl
add
aas
data16
mov
test
inc
int
movsl
cltd
pop
pop
stos
xchg
mov
push
in
fwait
addl
ja
scas
xchg
push
pop
lods
jo
and
dec
sub
imul
inc
inc
lods
lods
imul
xchg
mov
gs
xchg
sahf
inc
mov
insb
push
pop
test
sbb
inc
mov
scas
sbb
leave
push
fcoml
push
xchg
orb
out
scas
movsl
adc
popa
push
jecxz
nop
scas
fidivl
pop
repz
lcall
ja
enter
push
and
or
mov
inc
mov
lahf
jp
pop
adc
hlt
xlat
dec
iret
and
mov
mov
leave
mov
adc
loope
imul
mov
lret
add
push
negl
fld
stos
cwtl
imul
ret
pop
test
push
fwait
rcr
out
mov
hlt
mov
or
mov
sub
and
push
insb
jae
sahf
push
pop
cwtl
fwait
imul
add
push
mov
add
xchg
test
test
int
pusha
adc
mov
rcl
cmp
cwtl
sbb
test
js
mov
je
aad
dec
push
cli
xchg
addr16
pop
std
add
jecxz
cmpsl
cmp
sahf
arpl
jge
mov
test
or
mov
sbb
leave
xorb
inc
fcmovnu
fisttps
sbb
adc
invd
mov
or
cltd
mov
mov
rcll
nop
push
cmc
aad
movsb
mov
add
lcall
xchg
push
imul
retw
pcmpgtb
sbb
rcl
dec
mov
iret
or
mov
ret
andb
mov
mov
bnd
leave
into
ficoms
push
je
jmp
popf
movl
jle
pop
mov
je
cmp
mulb
xlat
js
into
gs
sbb
in
mov
nop
cmp
mov
movsb
sbb
mov
popf
in
add
sbb
adc
xchg
push
sbb
inc
push
subb
hlt
test
fcomps
cmp
fdivs
cmc
sahf
ja
mov
fisubs
les
inc
sbb
clc
movsl
movsb
adc
lret
adc
call
mov
popf
pop
push
mov
or
and
and
lods
test
fnsave
xchg
jmp
add
inc
out
cmpsb
popa
xor
test
xor
insb
push
out
iret
mov
push
sbb
fsubrp
and
mov
inc
add
test
mov
mov
xlat
movsl
hlt
in
fs
mov
fldcw
lret
mov
hlt
pushl
clc
enter
outsl
lahf
scas
fld
movsl
xchg
ret
rcrb
lahf
mov
xchg
mov
mov
xchg
stos
push
out
out
test
inc
add
les
add
popa
lret
inc
repnz
hlt
in
adc
push
subl
icebp
mov
cmp
cwtl
sbb
pop
test
and
iret
mov
test
inc
mov
sub
xchg
daa
push
lret
out
shl
jge
lds
pushf
ret
cmp
push
jle
repz
mov
test
and
xor
or
mov
push
enter
mov
jmp
cld
dec
test
inc
in
xchg
sub
mov
and
mov
sbb
add
dec
and
xor
call
out
jmp
and
js
mov
xchg
mov
or
stc
aad
das
sbb
pop
mov
pop
movsl
sbb
mov
cwtl
dec
pusha
in
mov
nop
push
in
ljmp
jl
jo
rcrl
or
cmpsb
test
pop
pushf
popa
in
les
push
sbb
mov
rolb
jg
push
ret
adc
sbb
add
nop
pop
xor
aas
loopne
dec
and
push
aam
loop
adc
addr16
pusha
out
adc
xchg
xor
shr
lret
push
aaa
int
mov
mov
xchg
icebp
test
jmp
clc
movsb
cmc
mov
mov
pushf
xor
mov
jg
fstpl
mov
cwtl
test
or
rcrb
mov
push
xchg
icebp
jb
adcb
int3
add
mov
test
push
lahf
mov
int3
int
sbb
mov
in
dec
movsb
addb
mov
mov
xor
mov
fdivs
push
mov
adc
jo
add
mov
mov
nop
testb
push
cmpsl
int3
inc
sbb
ja
mov
xchg
xchg
cmp
fimull
movb
cmpsl
push
mov
mov
jp
movsl
insl
pushf
adc
mov
loopne
lcall
js
fisubrs
xor
iret
inc
test
cld
imul
mov
shr
aam
xchg
imul
test
lret
add
roll
test
jmp
cmp
cmp
sbb
or
lret
mov
mov
or
dec
xchg
add
jmp
xor
adc
inc
pop
ret
xchg
xchg
sbb
into
icebp
and
dec
push
inc
inc
mov
test
loope
mov
push
lahf
add
push
rclb
pop
lock
mov
mov
add
lock
out
mov
adcl
test
dec
push
loope
sarb
rcll
xchg
sarl
dec
fadd
rclb
imul
cmc
xchg
xorb
movsl
aam
fisubrs
rcll
dec
cwtl
aam
loop
or
nop
sbb
insl
ss
popf
xor
pop
loop
jo
mov
add
loope
mov
orl
test
aaa
xor
js
inc
cmp
mov
pop
pop
imul
xchg
negl
add
pop
nop
ds
stos
movsb
imul
mov
adc
test
mov
sarl
mov
jo
andl
popa
cmpsl
push
fildl
inc
push
pushf
and
in
xlat
add
in
imul
mov
lock
sbb
mov
fmuls
in
xchg
mov
hlt
xchg
or
lods
in
movsb
cmc
xchg
mov
mov
cmpsl
test
insl
fidivrl
mov
and
frstor
pop
aam
rcll
cwtl
out
lods
fstps
in
enter
or
mov
loop
adc
decl
mov
orl
mov
pop
sbb
js
sbb
xchg
jbe
mov
orb
xlat
add
imul
loop
inc
mov
jbe
in
rolb
sahf
movsb
subl
fs
inc
paddw
push
cwtl
adc
jp
mov
jge
neg
fwait
js
cs
subl
or
out
popa
push
xchg
xor
cmp
or
mov
dec
xor
mov
ret
je
mov
mov
mov
xchg
jbe
ret
sahf
test
add
jle
mov
les
imul
and
sub
adc
lahf
adc
ja
adc
dec
sbb
jmp
pop
or
dec
js
ljmp
pop
adc
add
cmp
sbb
inc
pushf
fbstp
cmc
and
xor
lahf
cltd
xor
rcrl
xchg
push
imul
and
pop
mov
daa
push
pushf
in
fsubs
orw
clc
mov
xchg
testb
iret
lea
mov
jbe
add
js
mov
cwtl
movsl
xchg
nop
stc
fwait
and
fwait
adc
adc
mov
cwtl
iret
stc
into
imul
xor
jae
mov
jns
xchg
cwtl
adc
or
mov
mulb
sarb
lret
mov
xchg
or
fisttps
cs
sarb
int3
cmp
inc
push
addl
or
clc
orl
popl
cld
pop
jns
test
movsb
adc
test
cmp
repnz
mov
mov
mov
xchg
adc
dec
mov
mov
inc
or
xchg
data16
inc
addb
dec
lods
or
or
mov
add
mov
and
jl
imul
adc
and
push
adc
push
and
jo
les
enter
jl
and
sbb
iret
xchg
jno
mov
mov
int3
std
imull
dec
jp
xchg
call
mov
lods
xchg
cld
mov
lock
fs
jno
and
loopne
jo
adc
jns
stos
add
cmp
xor
cmp
adcl
pop
pusha
fxch
xor
ret
sahf
push
sbb
movsb
xchg
in
lods
stos
adc
sub
and
leave
das
mov
or
in
adc
add
or
daa
stos
call
xchg
cwtl
cmp
xchg
or
nop
cmp
mov
and
mov
les
mov
mov
lret
or
cmp
nop
stc
add
xchg
cmp
mov
aaa
cmp
orb
ljmp
loope
mov
scas
shlb
fiadds
rep
std
cwtl
lret
add
mov
fnsave
add
pop
mov
pop
imul
pop
mov
shrl
fsubrp
lret
nop
arpl
lret
sub
scas
mov
mov
imul
add
repnz
dec
mov
mov
popa
or
mov
repnz
cld
mov
jns
insb
mov
jp
add
repz
mov
mov
push
push
push
repnz
mov
or
dec
ljmp
and
add
fldenv
pop
add
roll
dec
clc
lods
xor
lret
adc
jae
add
out
add
mov
mov
mov
rcrl
or
inc
lcall
jns
scas
loope
fucomp
xor
add
lret
mov
movsb
cmc
xchg
aad
jp
sbb
cmp
mov
cmp
lods
sbb
xchg
xchg
xchg
pop
push
clc
test
imul
hlt
mov
lods
data16
ret
sub
lea
dec
mov
leave
movsl
stc
jmp
pop
enter
mov
or
ret
fmuls
dec
mov
out
add
rcll
jb
xchg
inc
cmpl
xor
mov
push
out
imul
jp
inc
movsl
leave
and
push
cmc
imul
sahf
roll
arpl
leave
mov
jne
adcl
or
int3
dec
outsb
mov
fidivrs
sbb
mov
or
dec
das
cmp
nop
decb
xchg
mov
inc
push
sub
inc
add
popf
pop
add
popf
lods
cmpsb
mov
xor
mov
hlt
imul
adc
push
das
xchg
lds
aad
aam
push
jle
cld
mov
xchg
cmc
aad
xor
lret
arpl
push
pop
xchg
sub
js
add
je
pop
mov
add
arpl
sbb
addr16
incl
jmp
and
shll
sahf
imul
imul
xchg
xlat
inc
push
bound
rcrl
cmpsb
push
or
pop
push
xchg
push
xchg
idivl
or
int3
cli
pusha
xchg
push
ret
mov
or
movsb
cmp
rorb
dec
cli
scas
add
loope
or
add
cld
andl
pushf
cmpsl
adc
mov
mov
xchg
pop
sti
mov
mov
cmpsl
cmpsl
lock
sti
jb
stos
pushf
fld
movsb
mov
mov
insb
popf
popl
adc
and
scas
in
ret
dec
scas
mov
ljmp
stos
outsb
add
movsb
lret
mov
popl
jo
inc
pop
jp
push
fisubl
scas
xlat
loop
ffree
scas
add
jbe
mov
neg
imul
movsb
and
add
xchg
movsb
jo
mov
and
je
test
out
xchg
in
xchg
xchg
xor
lret
jp
aaa
cmp
and
lcall
lods
mov
mov
mov
xchg
push
add
xchg
push
test
lock
xchg
or
arpl
cld
push
cmp
add
jno
in
test
ss
je
lock
test
sbb
ret
sbb
mov
addl
add
cld
push
fiadds
js
add
add
pushf
test
pop
ja
jmp
xchg
xchg
mov
in
js,pn
inc
pushf
push
sub
cmpsb
inc
jnp
mov
fsubrs
mov
clc
mov
or
push
xchg
xchg
xchg
je
mov
xchg
add
imul
fnstcw
mov
xchg
icebp
xor
das
mov
cmpsl
push
xchg
dec
jp
jmp
stos
xor
test
cmpb
cmpsb
enter
clc
test
mov
les
xchg
xchg
push
inc
fisubs
mov
mov
adc
enter
cwtl
push
and
sbb
mov
add
inc
cmp
int
jae
fwait
loope
les
cli
call
je
lret
aaa
ds
fcomp
je
rol
sbb
dec
popf
or
mov
push
mov
and
pop
add
jnp
mov
mov
cmp
nop
pop
push
add
mov
inc
stc
lds
icebp
or
xor
xchg
jae
push
jns
xchg
mov
dec
or
lret
test
jno
adc
lods
loopne
rcr
add
ret
or
jmp
sti
add
adcb
lret
add
dec
in
pusha
or
fisttpll
pushf
inc
es
push
or
push
mov
lret
les
or
les
pop
lret
inc
daa
imul
in
inc
add
outsl
movsl
roll
rorb
lods
repnz
jmp
gs
jnp
mov
mov
fimull
mov
test
imul
mov
hlt
test
add
mov
shl
in
cmc
out
mov
pop
imul
xchg
jmp
inc
jp
das
outsl
lcall
lea
jno
movsw
loope
pushf
in
stos
cli
movsl
cltd
rcrb
movsb
sarb
stos
js
fcoml
mov
mov
nop
add
popf
and
push
stos
push
or
mov
test
pushf
mov
cwtl
sahf
adc
and
dec
hlt
cld
and
xchg
or
shlb
cmpsl
mov
mov
or
std
sub
inc
icebp
movb
pop
outsb
push
mov
xchg
xor
movsb
sub
aaa
clc
xchg
cmpsl
mov
xchg
mov
push
add
jno
sbb
pop
dec
push
inc
cmp
shl
movsl
sbb
lds
xchg
popf
mov
or
test
hlt
mov
mov
cmpsl
movsl
shlb
arpl
cmpsb
std
out
cmpsl
les
fsub
xor
jle
add
ds
imul
jb
shll
or
mov
mov
mov
out
sbb
fstl
mov
lret
add
add
jbe
nop
test
push
test
cmpsb
test
leave
lds
xor
enter
test
lds
dec
or
sub
sbb
push
cmpsl
xor
test
stos
in
scas
inc
imul
js
push
ljmp
std
sti
pusha
xchg
xchg
test
xchg
xor
mov
fsubs
test
or
cwtl
pop
lcall
repnz
sar
cltd
sub
jo
dec
fildl
push
arpl
addl
inc
jno
push
popa
ret
or
les
inc
lret
pusha
xor
add
cmp
rcrb
stos
faddl
bt
adc
rclb
in
adc
or
sahf
sbb
xchg
or
enter
dec
outsb
add
pop
jnp
mov
mov
test
filds
inc
add
mov
scas
mov
dec
mov
enter
push
mov
add
or
test
ds
jl
mov
inc
imul
mov
fwait
movsb
lcall
or
cli
xchg
repnz
movsb
jno
xchg
inc
dec
mov
mov
xorb
cmpsb
insl
jno
mov
pushf
pop
subl
movsl
xchg
mov
mov
inc
rorb
inc
xchg
leave
hlt
xchg
inc
cmp
or
add
xchg
test
cmp
cli
jae
add
ret
pop
dec
loopne
cwtl
in
xor
ja
cmpsl
jg
cmp
jle
mov
ret
mov
test
imul
adc
mov
sbb
push
cmp
ficompl
inc
test
sahf
xchg
sbb
imul
cmp
and
mov
iret
imul
mov
test
nop
test
lcall
pop
jg
nop
movsl
pop
scas
stos
mov
add
xor
enter
jg
loopne
mov
xor
mov
xor
sbb
mov
je
insb
xchg
cmp
cs
mov
shlb
scas
ljmp
add
pop
xor
push
mov
mov
inc
sub
sub
mov
sbb
and
sub
xor
inc
lret
dec
mov
dec
lea
js
mov
sbb
insl
pop
out
mov
icebp
mov
jno
rolb
sbb
stos
inc
push
js
adc
ljmp
shll
mov
xchg
mov
inc
jae
push
or
in
dec
mul
aad
enter
insb
sahf
xor
inc
scas
repnz
lcall
mov
dec
scas
or
call
mov
cltd
imul
mov
or
inc
movsl
cltd
mov
pop
sub
fwait
insb
or
fsts
add
movsb
dec
bound
pop
push
xchg
hlt
dec
lods
mov
int
or
pop
les
xor
cmc
xchg
jp
dec
sub
adc
push
aam
hlt
fwait
xchg
divl
leave
cmpsb
cli
aad
test
pop
push
ljmp
pop
fstl
adc
lods
mov
loop
inc
dec
in
xchg
add
jo
mov
pusha
add
flds
fisubrs
push
in
repz
inc
aad
call
mov
sbb
inc
sub
inc
mov
push
lret
shlb
cmc
jno
lds
pop
mov
sub
popf
dec
sbbl
and
xchg
push
nop
add
dec
je
mov
adc
jl
insb
adc
nop
cmp
lret
insl
xchg
pop
in
cmp
pop
mov
sar
inc
movsl
add
adc
fmulp
out
test
cli
int
jle
sub
inc
or
mov
fcoml
jmp
or
mov
pop
dec
xor
movsb
es
jae
in
mov
test
clc
jnp
xchg
push
sbb
or
cmc
dec
mov
fdiv
insb
push
pusha
shrl
ret
stos
in
gs
into
lcall
lret
add
jb
cmpsb
mov
sub
orb
mov
int3
enter
and
inc
into
popa
jle
dec
movsl
xchg
mov
push
faddp
dec
dec
and
loope
jae
push
cmpsl
jns
mov
int
xchg
jne
lods
scas
aas
mov
sub
addb
cmp
int3
dec
xchg
add
ljmp
mov
dec
cwtl
imull
pusha
mov
xchg
gs
cmpsb
in
mov
enter
xlat
ljmp
add
or
sub
in
adc
je
mov
adc
inc
jbe
inc
xchg
arpl
call
push
dec
icebp
mov
out
fstps
ljmp
mov
adc
xchg
xchg
add
push
sbb
es
xchg
push
dec
mov
mov
or
pusha
inc
lods
stos
mov
popf
and
mov
cld
xchg
loop
or
lahf
nop
shll
dec
mov
jmp
mov
mov
lahf
mov
xor
mov
je
xor
dec
add
dec
pop
pop
lods
fsubs
mov
filds
mov
sarl
cld
fwait
push
or
or
mov
or
xchg
mov
or
sub
push
pop
mov
dec
dec
daa
ljmp
adc
notb
adc
inc
sbb
test
outsl
mov
test
jbe
jb
cmpl
mov
dec
rcll
stos
adc
mov
imul
mov
fcomps
repz
std
shrl
jp
lcall
sub
jmp
ficomps
push
jmp
and
mov
xchg
rorb
inc
inc
imul
xchg
nop
movsb
pop
pop
jl
mov
mov
in
mov
mov
or
jl
sti
rclb
mov
xchg
stos
jns
test
ret
xchg
fistpll
mov
inc
mov
ljmp
mov
mov
add
push
mov
jns
mov
mov
jecxz,pn
inc
fld
clc
roll
adc
sbb
std
jns
mov
xor
push
xchg
mov
push
add
lahf
jg
std
stc
clc
xchg
je
imul
icebp
loopne
pop
fs
pusha
pop
mov
jg
pop
cmc
hlt
leave
add
popf
imul
movsl
data16
lea
mov
or
sbb
add
lahf
xchg
jle
add
jno
icebp
inc
pushf
rcr
jl
loop
aam
add
mov
xchg
js
inc
test
lods
fsubrl
in
mov
pop
imul
scas
adc
jl
push
xchg
pusha
dec
inc
repnz
cmp
pop
push
es
mov
and
add
or
lret
and
xchg
cmpsl
add
pop
rcll
xlat
mov
stos
rclb
xchg
mov
cmc
mov
and
cmp
add
mov
xchg
shrb
cltd
dec
xchg
jno
mov
mov
pop
jle
imul
and
sub
mov
mov
mov
testb
mov
inc
mov
test
inc
xchg
push
dec
js
push
sbb
jmp
sbb
pop
inc
imul
dec
push
out
or
lods
idiv
les
fnstenv
cltd
popf
stos
scas
inc
jbe
pusha
mov
dec
adc
mov
aam
out
cwtl
sub
mov
xchg
dec
adc
add
inc
push
fbstp
sub
shrb
in
aam
inc
cmc
out
xlat
hlt
enter
push
in
arpl
imul
shlb
mov
enter
xor
and
addr16
cmc
inc
push
hlt
daa
and
jnp
in
fisttps
mov
add
sahf
mov
pop
jo
mov
adcl
sbb
pop
jnp
and
mov
rolb
pop
xchg
fisubrl
mov
cmp
shll
inc
xchg
pop
jmp
fildll
arpl
jne
sub
push
xchg
dec
test
fbstp
cli
clc
add
xchg
push
fstpt
scas
test
add
and
cld
popa
scas
jge
mov
mov
popf
lock
xchg
pop
mov
or
jo
xchg
dec
xchg
inc
add
jge
shlb
dec
sbb
dec
js
and
test
cs
fistpll
push
rolb
roll
movsb
ljmp
mov
pop
repz
icebp
std
push
out
mov
mov
ret
fiaddl
sbb
lods
inc
mov
ss
mov
sbb
pusha
xchg
sahf
scas
stos
fs
xchg
sub
adc
push
cmp
lds
dec
xchg
cmp
lock
adc
sti
pop
dec
sub
or
stos
sub
jno
mov
fstps
sti
mov
cmp
sti
loop
pop
movsl
mov
add
inc
fldt
outsb
mov
loopne
testb
bound
jl
mov
xorl
das
mov
stos
iret
and
xchg
adc
aad
mov
mov
or
test
test
icebp
push
cmp
mov
sti
adc
nop
movsb
adc
adc
mov
shll
movsb
lods
adc
sub
lock
add
or
mov
adc
leave
cmp
sar
movsl
mov
sub
testl
hlt
enter
mov
movl
lods
in
adc
jae
mov
stos
xchg
mov
cmpsl
sub
lret
jl
xchg
add
mov
cmp
mov
xchg
ljmp
hlt
mov
inc
rorb
or
xchg
mov
lahf
add
fwait
xchg
xchg
shrl
xchg
and
test
in
test
mov
inc
dec
nop
aas
adcl
daa
cmp
data16
aaa
push
mov
imul
push
out
inc
fsubs
inc
xor
scas
ljmp
mov
mov
js
es
mov
sub
or
test
or
pop
loope
jg
xchg
cwtl
fnstsw
dec
lcall
lcall
xchg
jl
add
ds
push
fwait
pop
add
addl
std
mov
add
notl
mov
push
or
mov
mov
jg
loope
xor
cmpsl
pop
push
fdivrl
out
test
repnz
sbb
jmp
mov
cmp
pop
mov
mov
push
sub
adc
div
addl
jb
aas
loop
hlt
mov
mov
bnd
jns
mov
popf
push
in
loope
mov
mov
in
hlt
inc
add
cmp
repnz
mov
push
cltd
pop
and
xchg
loope
xchg
jmp
push
aam
cli
lret
adc
js
dec
outsb
lds
dec
fldt
rorb
notl
mov
mov
inc
jns
mov
retw
jle
mov
xchg
inc
mov
les
sti
sbb
mov
cmp
jp
addl
jmp
inc
jno
addl
push
leave
iret
scas
cld
mov
or
mov
and
filds
inc
popa
addl
fstpt
mov
mulb
arpl
test
push
jb
pop
and
xchg
jmp
mov
das
mov
test
sub
cmc
cld
sbb
aad
or
xor
inc
call
fstl
mov
adc
adc
jnp
mov
jae
sbb
mov
inc
pop
clc
addr16
ja
mov
inc
ret
mov
cwtl
cs
hlt
shrb
xor
pop
movsb
or
rorl
mov
mov
push
jbe
js
push
mov
shr
fldl2e
movsb
push
or
insb
or
fildl
and
sbbl
data16
aas
test
dec
push
jmp
stc
js
jb
mov
mov
popa
cmpl
xchg
mov
xor
ret
mov
arpl
xchg
or
xchg
sbb
imul
push
mov
cmpb
jmp
jno
jo
mov
xchg
fisubrs
fists
jmp
xchg
std
xchg
add
push
jbe
cmpsl
enter
mov
cmp
pop
sbb
mov
rcrb
lock
cwtl
xchg
mov
mov
adc
test
loop
orl
mov
push
jbe
lret
into
inc
add
adc
fnstcw
sbb
jbe
imul
add
rclb
push
mov
mov
cli
mov
sub
fiaddl
jge
and
mov
pop
fldcw
into
movsl
adc
insl
ja
aas
mov
push
or
add
in
lock
push
xor
mov
jg
adc
jg
push
sbb
rcll
mov
shrb
mov
or
adc
jmp
sub
sub
dec
hlt
fildll
pop
fs
jp
inc
notl
adc
ret
push
enter
divb
out
mov
in
popf
lods
add
mov
add
test
movsb
stc
fbld
and
rcrb
push
xor
xor
mov
js
adc
movsb
ror
mov
mov
lds
cwtl
movsl
or
sub
popl
mov
iret
fdivrs
mov
dec
or
dec
lods
mov
lds
scas
scas
imul
mov
movsl
lret
je
mov
xchg
nop
push
inc
jl
and
lea
lods
cmp
in
cli
push
lea
pop
dec
pop
cmp
ret
dec
xchg
xchg
mov
enter
sarl
inc
push
mov
data16
fisttps
xchg
ret
cmpsl
rolb
adc
xchg
mov
inc
mov
add
insb
imul
or
divb
add
push
mov
xlat
or
fwait
mov
lahf
popf
stos
dec
push
cmp
cmpsb
sar
cmpl
leave
xchg
add
push
ret
in
jg
cmc
lea
fucomi
push
sbb
xlat
pop
and
cld
repnz
lahf
cmp
xchg
movsb
in
scas
lret
les
dec
fdivrl
arpl
repz
xchg
xor
out
xchg
or
mov
mov
hlt
arpl
arpl
rcrb
sub
xchg
push
cmpsb
mov
xor
mov
lahf
mov
loope
xchg
mov
not
mov
out
imul
xchg
pop
fisubs
lods
xor
scas
ficomps
jge
cwtl
pop
enter
lods
es
push
xchg
dec
add
ds
mov
jecxz
push
mov
lcall
add
mov
fldenv
stc
test
or
push
mov
and
lret
ret
inc
inc
rcl
test
in
xchg
jecxz
xlat
mov
out
or
dec
cmp
mov
fldenv
sub
sahf
add
imul
lea
inc
lods
ss
rolb
pop
das
or
stos
loopne
cmc
shlb
ja
movl
test
mov
mov
dec
xchg
mov
loop
mov
cwtl
pop
or
mov
push
mov
ljmp
enter
flds
in
push
jne
in
fwait
cmc
jmp
in
mov
pusha
and
mov
stos
mov
loope
xchg
add
inc
mov
test
cli
movsb
and
enter
add
aad
mov
or
jle
adc
mov
sbb
mov
test
js
jmp
push
mov
ds
cmp
cli
or
or
repz
popa
loopne
mov
or
inc
movsb
add
add
shll
jl
mov
xchg
jg
int3
sub
insb
jno
cmpsl
mov
dec
mov
adc
or
push
into
dec
xor
sbb
or
xor
orl
or
hlt
add
mov
pop
xorl
movsb
add
cmc
int
repnz
loopne
test
jbe
fsubrs
scas
inc
enter
sbb
mov
mov
xlat
icebp
icebp
mov
adc
into
lods
loope
push
xchg
mov
lea
cld
ficoms
xor
cmp
stos
sarl
cld
stos
mov
stc
rol
repz
jl
stos
xor
out
ret
mov
inc
inc
inc
ret
bound
push
movsl
cmpsb
ret
cmpsb
add
cmp
lods
es
test
mov
cmp
mov
and
mov
or
xchg
mov
sbb
mov
cld
xchg
imul
cmp
xchg
nop
push
mov
mov
rcrl
aas
rcll
lahf
hlt
mov
adc
or
fld
add
jne
les
mov
and
test
mov
mov
push
cmpl
cmc
dec
fnstsw
add
rorl
popf
mov
das
enter
aam
fstpt
inc
adc
xor
jnp
sub
fld1
test
lret
int3
lea
and
ss
mov
call
inc
stos
adc
or
jl
rorl
es
outsb
sbbb
push
mov
mov
loop
jo
fnstenv
push
cmp
push
cltd
rclb
sbb
sbb
iret
sbb
xchg
ja
and
mov
or
xor
add
mov
and
mov
rolb
jg
fwait
mov
add
xchg
movsb
mov
imul
add
roll
ret
lret
lahf
xor
mov
cltd
or
mov
dec
add
or
inc
xchg
lret
out
adc
in
cwtl
push
push
enter
or
cmpl
rcrb
or
xchg
cli
andb
xchg
pop
or
fmul
cmc
dec
mov
imul
lods
jbe
cmpl
out
xchg
or
sbb
insb
lods
ficoml
sbbl
movsl
push
imul
hlt
mov
ret
or
xchg
xor
roll
sub
push
scas
lret
or
sarb
test
xchg
mov
shll
pop
test
imul
pop
mov
dec
andl
add
sbb
lcall
push
lods
xor
out
and
push
into
jbe
int
cmc
mov
popa
or
mov
lret
sub
cwtl
imul
xchg
dec
mov
mov
or
js
dec
sbbl
mov
cmp
add
mov
shll
loopne
mov
js
xadd
jle
inc
push
xor
cmpsb
mov
sub
pop
sbb
movsbl
int
jle
adc
push
mov
rcll
das
sarb
mov
rcll
jecxz
les
nop
push
xor
mov
pop
mov
outsl
js,pt
test
stos
jns
push
dec
shrl
mov
pop
add
add
inc
xchg
imul
outsb
xchg
repnz
mov
push
mov
mov
mov
addl
lcall
adc
orl
in
push
or
mov
mov
sbb
loopne
add
xchg
xchg
in
test
repnz
imul
push
insl
inc
mov
loop
inc
cld
fisttps
xor
das
ret
xor
sbb
addl
cli
incl
sarl
xchg
inc
sub
sbb
pop
sub
rorb
nop
in
neg
mov
xchg
jge
fwait
rclb
ret
inc
mov
cs
mov
pop
push
sub
jb
shl
hlt
sti
mov
mov
cltd
imul
xchg
into
insl
or
cltd
hlt
popf
mov
fcoms
push
std
adc
push
or
repnz
sarb
sarl
cmpsl
and
hlt
mov
push
mov
call
mov
mov
lds
iret
lds
sub
fucom
cmpsl
fs
std
xlat
cmc
out
fmuls
ljmp
push
loope
or
rclb
xchg
jg
lcall
rorb
sub
push
add
ret
aam
cld
call
pushf
leave
add
cmpsl
adc
mov
adc
push
adc
pop
test
or
sub
nop
stos
and
adc
or
push
xchg
movsw
fnstenv
iret
das
ficomps
das
fmull
mov
rol
mov
inc
add
mov
push
cmpl
aam
and
movsb
out
push
push
cltd
negb
fsub
mov
mov
xchg
sbb
and
test
lahf
xlat
jl
cmp
pop
mov
flds
mov
mov
frstor
add
ljmp
sbb
inc
xor
movsl
inc
addr16
or
or
lds
sub
sahf
adc
push
push
mov
movsb
pop
call
dec
xor
cmpsl
subb
push
mov
or
fstps
adc
rcrl
test
test
jbe
addl
add
sbb
xchg
dec
daa
adc
daa
mov
lds
int
out
in
cwtl
insl
push
xlat
test
dec
inc
or
cmc
mov
leave
sbb
mov
adcb
sbb
xor
xchg
mov
in
xchg
lods
and
mov
mov
int3
cmp
jl
addr16
fwait
lea
xchg
outsl
pop
fidivrs
inc
mov
dec
cmc
scas
jae
adc
mov
push
scas
dec
mov
movsb
jp
and
pop
mov
lds
pop
enter
aaa
jp
xchg
andl
add
into
lock
adc
pop
xchg
ljmp
push
cmpsb
jg
add
mov
arpl
movsl
or
enter
repnz
movsb
add
jbe
mov
mov
shlb
das
mov
movsl
push
loopne
dec
stos
and
xchg
iret
aad
cmc
mov
jne
cmc
lods
gs
mov
adcl
shll
and
adc
pop
lock
in
xorl
bnd
xchg
push
sbb
or
sarl
test
testb
or
arpl
xchg
inc
push
cmp
inc
mov
push
push
icebp
sbb
shl
mov
add
ficoms
mov
xchg
shll
lret
mov
test
test
adc
test
cld
xchg
or
jmp
jmp
in
scas
mov
xchg
inc
adc
mulb
je
into
mov
pushf
repnz
lods
mov
loope
xchg
movb
mov
mov
pusha
rcll
pushf
inc
mov
cmpsl
jno
movsb
cltd
addl
jnp
jecxz
or
xchg
sub
flds
scas
mov
imul
inc
add
cmpsl
leave
and
lods
testb
das
in
ja
imul
cld
orl
stos
cmp
fdivrl
mov
ljmp
xchg
xchg
fists
xchg
jl
sub
jle
mov
icebp
shlb
inc
lock
jg
jp
sub
test
pushf
enter
sbb
push
push
mov
std
mov
jne
push
jns
pop
jle
fnsave
aas
sub
gs
adc
imul
xchg
aaa
jge
adc
nop
xor
mov
fsubp
adc
divl
cmp
mov
adc
xchg
imul
nop
shlb
cmpsl
mov
and
lods
adc
ja
xchg
xchg
inc
les
inc
mov
lock
cmc
lret
pop
dec
ret
lea
xchg
mov
jle
cmpsl
pop
dec
ljmp
inc
jbe
loope
jp
jmp
sub
pop
jno
lods
lcall
push
jge
hlt
inc
mov
xor
jl
movb
inc
ficoms
push
inc
mov
popa
imul
sub
mov
pop
out
jo
mov
pop
insl
test
sbb
and
shl
push
adc
mov
inc
mov
repz
insb
or
leave
imul
stos
mov
out
or
cltd
les
movsb
imul
mov
aam
and
test
andl
test
mov
pop
outsb
adc
jl
out
nop
or
out
clc
jle
and
jl
pop
jns
sbb
mov
movsl
hlt
xor
pop
mov
imul
roll
je
lea
mov
cmpsb
pop
adc
pop
out
xchg
nop
hlt
fsubrp
mov
mov
mov
sbb
dec
andb
jle
mov
push
xchg
push
or
sub
or
adc
add
or
jns
arpl
movsb
push
fs
dec
add
sbbl
inc
nop
jg
out
ljmp
scas
adc
gs
or
pusha
push
push
jbe
inc
test
dec
iret
sub
xor
xchg
imul
ret
mov
arpl
loop
sub
sub
mov
add
sbb
inc
mov
icebp
mov
mov
mov
dec
mov
and
lea
call
add
push
std
xchg
mov
xorb
imul
xchg
into
popf
or
int
scas
sti
add
xchg
std
das
testl
movsl
pusha
std
add
jle,pn
aam
xchg
ljmp
sbbl
das
stc
mov
popa
leave
cmp
sub
test
xor
sub
lret
movsb
out
ret
ret
push
mov
jmp
jns
jb
std
adc
nop
ds
or
test
test
pop
adcb
jecxz
jg
shll
lahf
jle
and
mov
push
mov
pop
lods
sbb
inc
mov
leave
dec
ret
lds
xchg
sub
sbb
ficompl
mov
pusha
mov
or
lods
push
xchg
stos
dec
mov
jno
mov
imul
mov
mov
fldcw
nop
cwtl
pop
or
notb
shr
in
pop
test
scas
sub
test
pop
popf
pushf
mov
mov
insb
mov
shlb
cmpsl
idiv
nop
mov
push
jg
mov
mov
cmpsb
jbe
int3
pause
shrb
cmp
cwtl
cmp
xchg
cmc
mov
aad
aam
adc
mul
mov
cmp
and
jae
imul
repnz
ret
cmp
push
mov
mov
cmc
popa
dec
adc
in
mov
xlat
es
notl
icebp
imul
cmp
sub
mov
into
mov
mov
mov
xchg
pop
insb
in
cmpsl
in
xchg
and
lret
stos
xchg
push
adc
arpl
xor
dec
sub
dec
cmc
leave
cs
lock
or
lods
mov
mov
imul
push
shll
fistl
cmp
lret
inc
mov
test
test
mov
xor
movsl
cli
pop
xchg
subl
push
adcb
jmp
mov
dec
xchg
sbb
dec
stos
mov
mov
push
data16
pusha
jle
js
dec
mov
sub
iret
popa
ret
add
dec
sbbl
sbb
nop
cmc
and
rcll
call
cmpsb
push
jmp
mov
sbb
cwtl
mov
push
rcl
jl
in
xlat
cmp
stc
insl
sbb
outsl
stos
add
push
fstpt
push
push
jbe
movsb
sbb
rorb
add
test
adc
lret
adc
push
mov
cmpsb
jge
mov
int
push
or
shrb
adcb
add
pusha
roll
xchg
or
pop
cmpsb
jns
mov
mov
xchg
push
jnp
addb
mov
test
loopne
jle
push
add
inc
ja
imul
sub
movl
mov
fdivs
jno
and
clc
mov
add
loope
lahf
mov
mov
movl
cmp
pop
dec
xchg
mov
call
lds
jl
ret
cmp
or
mov
imul
push
sbb
xchg
lea
adc
lahf
fdivl
rcll
xchg
push
stc
mov
je
data16
popf
leave
lock
cmpsl
lret
lahf
adc
pop
and
adcl
push
cmc
xchg
shrl
mov
sub
rorb
xchg
insb
mov
ja
andb
pop
shll
jg
push
imul
xchg
mov
addb
orl
adc
addl
sub
popa
xchg
xchg
stos
imul
mov
xchg
jecxz
ficompl
lfs
push
rcr
xlat
inc
and
mov
shlb
xchg
faddl
cmc
test
cmp
test
imul
jbe
lock
lcall
pushf
push
push
js
pop
nop
mov
sub
loope
mov
pusha
adc
mov
jns
out
nop
imul
mov
sbb
fsubr
inc
fsubr
push
mov
je
in
out
lods
mov
lods
mov
call
sahf
lock
fmuls
mov
push
sbb
sub
sbb
cli
lds
leave
adc
jnp
in
pop
push
test
shrd
loope
mov
out
jecxz
mov
xor
and
std
mov
imul
popa
mov
push
or
jp
jl
xor
mov
or
adc
inc
add
loopne
lret
jb
push
in
ja
pushf
js
push
int
sbbb
enter
ret
mov
sbb
arpl
aad
mov
sub
or
jge
dec
leave
or
mov
lock
adc
pusha
test
loop
dec
and
push
addl
hlt
in
in
outsb
dec
add
cltd
data16
call
mov
mov
cli
cltd
movsb
mov
sub
sahf
lret
and
add
movsb
add
add
mov
xor
ret
mov
iret
push
mov
pushf
add
xor
push
fisubrs
mov
or
mov
mov
roll
mov
mov
mov
inc
mov
insl
aad
out
test
aas
mov
std
pusha
ljmp
nop
orl
sbb
pop
sarb
push
pop
fcmovne
xor
int
lods
push
xchg
test
jecxz
add
pop
inc
inc
mov
sbb
popa
push
mov
std
mov
cmc
mov
sbb
jg
add
stos
add
push
sub
mov
cltd
xchg
and
adc
xchg
imul
sbb
fnstsw
pushf
inc
fs
mov
mov
add
add
insl
inc
cltd
dec
out
mov
add
imul
add
int
cs
ds
jbe
ficoms
mov
add
addl
addr16
or
inc
jecxz
in
add
movsb
ds
rorl
cmpsl
lret
pusha
jmp
jle
add
aas
jo
enter
mov
cwtl
or
jp
ljmp
fwait
pop
lret
sub
into
jge
cli
movsl
dec
mov
das
mov
or
pop
in
sti
fs
or
fsubrs
push
mov
lods
add
mov
jge
xchg
xchg
xchg
scas
add
fcmovu
dec
leave
or
jmp
pop
and
popf
ret
hlt
jb
or
add
add
cmp
xchg
add
xchg
push
add
lods
push
jmp
mov
cli
adc
add
sbb
push
and
popf
adcl
les
repz
movsl
cmc
in
jno
xor
rclb
mov
fld
lret
xchg
fadds
adc
ffreep
jle
sbb
aad
or
mov
mov
jle
cld
cltd
mov
add
mov
sbb
out
or
fcompl
nop
xchg
and
shrl
sub
aad
jge
jnp
inc
pusha
push
xchg
sbb
lods
or
jae
loop
add
loop
cltd
imul
popa
pushf
test
mov
sbb
or
xchg
jbe
mov
cmc
lcall
cli
sbb
and
ds
mov
pushf
ret
pop
or
loope
inc
out
rcl
roll
jl
mov
sbb
or
mov
add
sahf
mov
pop
outsl
jle
xchg
add
aas
inc
inc
je
out
jmp
pop
pop
ljmp
lods
cmc
sahf
mov
or
fnstsw
adc
mov
pop
in
stos
and
enter
movsb
nop
adc
mov
add
imul
pop
jns
xor
mov
mov
adc
xchg
pop
jle
mov
mov
jae
or
cwtl
sub
lea
or
lds
xchg
inc
jmp
push
or
out
stos
hlt
xchg
sbb
push
rep
imul
mov
arpl
adc
or
xchg
imul
xchg
xchg
cld
mov
rcrl
inc
clc
jg
mov
xchg
js
adc
xchg
jns
xchg
sub
mov
in
sbb
dec
and
and
out
sti
xchg
mov
and
loop
push
xchg
shlb
rol
mov
dec
adc
dec
and
clc
push
ja
call
jge
mov
xor
and
or
shll
dec
ljmp
and
dec
dec
lret
lahf
dec
lock
shufps
mov
nop
or
jl
rorl
xchg
dec
dec
inc
ret
sbb
fwait
mov
push
popa
insl
xchg
sahf
mov
xchg
mov
ret
aam
and
dec
adc
ret
dec
mov
dec
mov
xor
movb
xchg
add
and
clc
enter
loop
mov
sbb
mov
insb
dec
sub
fistps
mov
and
cmpsl
mov
xchg
or
hlt
shr
cwtl
je
jp
dec
dec
pop
ret
sbb
fwait
mov
push
popa
insl
xchg
sahf
mov
xchg
mov
mov
rorl
push
pop
test
mov
adc
shrl
adc
mov
out
pushf
mov
pop
mov
aaa
repnz
into
fsubrs
int
test
mov
and
inc
mov
add
popa
fs
pop
add
jmp
add
pop
stos
mov
idivl
pop
add
lcall
jle
mov
jne
adcb
jle
cld
fisttpll
jle
mov
mov
lods
jle
mov
cmpsl
or
pop
xchg
jg
xchg
add
xchg
mov
pop
mov
lods
add
push
cmp
cmp
jge
add
frstor
xchg
xchg
add
and
ret
scas
in
int
lcall
add
xchg
xchg
stos
adc
cwtl
inc
iret
mov
arpl
fmulp
lcall
test
sub
ret
lcall
xchg
cli
push
test
sub
inc
or
out
fsts
js
jno
jne
add
ja
cli
les
cmc
mov
in
pushf
jo
mov
and
fcmovne
mov
call
mov
andl
pop
or
fcoml
pop
push
adc
mov
std
add
pop
add
imul
pushf
xchg
lods
je
stos
js
aam
add
inc
sahf
mov
and
mov
scas
es
cltd
pop
hlt
mov
lahf
inc
fildl
sub
mov
mov
ret
pop
iret
iret
mov
add
outsb
add
imul
pushf
sbb
les
or
xchg
nop
dec
hlt
mov
xchg
mov
inc
fcmovu
sbb
cmc
cmpsl
hlt
stc
lcall
push
jnp
pop
xchg
into
lds
mov
cwtl
rolb
pop
jmp
mov
add
mov
xchg
daa
gs
xchg
cmp
add
jne
jbe
cmp
adc
shll
push
call
fmuls
jae
jb
pusha
cmp
mov
dec
nop
mov
movsb
repnz
or
jmp
stos
add
mov
mov
fwait
ret
xchg
ret
cmp
mov
sub
call
jmp
inc
frstpm(287
push
mov
or
out
xchg
jmp
mov
ficoms
mov
add
or
cmpsl
mov
daa
pop
or
flds
push
adc
xchg
dec
jle
fisttpll
cltd
loop
cmc
mov
cmp
or
sub
xchg
fisttps
js
push
sub
testl
pop
cmp
lcall
mov
in
cld
mov
adc
cmp
outsl
in
jle
stos
jg
jne
movsl
loope
push
sahf
xchg
ror
jge
mov
scas
jno
pop
cmpsl
add
inc
nop
outsl
hlt
mov
inc
cwtl
scas
mov
pop
lds
jnp
dec
xchg
push
movb
jnp
out
pop
mov
imul
mov
hlt
jno
mov
xor
xor
cmpsb
push
bound
push
sub
cld
aas
sbb
js
fcoml
je
sbb
fldenv
pushf
cmp
scas
aad
cmpsl
cmp
outsl
dec
jne
push
push
push
inc
or
cmp
mov
mov
mov
mov
lds
stos
jl
mov
test
add
adc
push
inc
pop
cmp
cld
ret
mov
je
mov
mov
or
int3
movsl
sbb
inc
mov
imul
aas
cwtl
mov
jl
movsl
loope
fmulp
inc
mov
mov
or
stos
pusha
add
or
loop
push
add
arpl
inc
mov
mov
shll
fisubs
test
ss
fcmovu
daa
es
xor
mov
push
stos
cmp
andl
ja
fwait
pop
rcll
mov
add
lock
sbb
loopne
xchg
lret
lods
cmp
cmp
repz
mov
add
lcall
stos
test
mov
call
inc
nop
push
jnp
xlat
pop
push
cmpsl
xchg
mov
lcall
or
decl
mov
sub
es
fisubrl
leave
xchg
cmp
cld
incb
xchg
rolb
inc
test
ds
cmp
imul
sub
rclb
inc
xchg
mov
xchg
dec
xor
cmp
fisttps
mov
mov
mov
arpl
jg
lea
jge
addl
adc
mov
inc
cltd
or
or
outsb
imul
pop
fwait
ljmp
loope
sahf
jbe
cmpsl
jle
adc
inc
repnz
or
out
mov
xor
out
sbbb
loopne
mov
movsl
sar
sbb
out
lahf
add
decb
out
add
jmp
or
push
pop
sbb
mov
mov
pusha
aam
mov
xchg
xchg
enter
das
sub
sbbl
scas
je
icebp
push
add
jle
or
xchg
fsubrs
push
or
jle
cmc
rcrb
imul
mov
sub
sub
add
and
and
aas
lock
push
push
xchg
ds
xchg
nop
xchg
dec
sti
mov
pop
rcrl
or
jg
jl
dec
xchg
sarb
inc
out
insb
xchg
mov
cltd
push
cmc
or
mov
mov
mov
xchg
lds
loope
std
jo
inc
or
mov
cwtl
je
adc
push
into
mov
mov
mov
lahf
cld
into
sti
test
imull
ret
imull
add
je
in
js
mov
test
adcl
mov
add
dec
lcall
cltd
mov
outsl
int
pop
mull
inc
imul
sarb
rcl
aad
jle
jbe
cmp
rolb
jge
notb
movsl
imul
icebp
test
mov
jle
mov
xor
imul
aad
je
and
daa
dec
mov
mov
adc
test
dec
repz
cmpsb
xchg
mov
or
js
iret
push
mov
or
pushl
nop
push
out
hlt
sbbl
int
in
xchg
outsl
lret
xor
jp
sbb
out
mov
imul
jl
cmp
mov
lret
or
adc
test
jbe
lds
mov
add
mov
dec
cmc
in
lret
adc
sub
mov
mov
adc
fiaddl
sub
cmp
push
repz
pop
mov
nop
mov
incl
mul
pop
clc
mov
sarl
int3
jmp
jo
mov
cltd
ljmp
scas
pusha
dec
scas
and
sbb
push
adc
call
jo
imul
push
inc
push
roll
fbstp
ljmp
mov
rcrb
jne
mov
sbb
mov
mov
nop
jo
loop
adc
out
test
lret
test
jmp
mov
test
or
push
cmp
mov
sahf
nop
daa
leave
xchg
mov
push
xchg
lcall
and
shr
pushf
cwtl
out
out
push
jle
pop
jp
fwait
jne
inc
pop
push
shr
xchg
fs
mov
lock
pusha
push
test
ljmp
enter
jmp
cld
aad
xor
inc
mov
out
push
lds
sbb
or
ret
pop
push
movsl
push
sbb
jl
dec
cmp
or
stc
mov
rorb
mov
add
imul
xor
inc
pop
stc
popf
mov
lcall
lods
jno
jl
fidivrl
sub
cltd
xor
dec
icebp
xchg
pop
and
push
pushf
mov
hlt
and
outsl
push
jno
enter
xchg
jmp
ds
arpl
hlt
nop
adc
mov
or
jo
notb
xchg
lcall
pop
dec
sbb
adc
cltd
xchg
loop
lea
mov
pop
loop
loope
shlb
ret
orb
lock
pop
xchg
mov
iret
or
jo
popl
xchg
orl
cwtl
test
mov
or
fadds
pushf
hlt
call
push
jp
sub
jge
sub
imul
mov
mov
add
fcoms
xchg
xchg
inc
ds
ret
mov
in
or
lcall
push
cmpl
aas
movsb
shrb
pop
mov
shll
inc
fidivrl
or
xchg
adc
xchg
jg
push
inc
or
stos
loop
popf
mov
addr16
clc
aas
in
push
mov
test
lea
scas
in
mov
mov
dec
faddl
fisttps
fisubrs
scas
sar
inc
shrl
in
inc
addr16
je
push
jno
fnsave
test
sub
pop
shrl
xor
fstp
add
inc
mov
pop
clc
lahf
adc
xchg
add
data16
cmpb
xor
aad
mov
imul
cmpb
xchg
adc
mov
push
inc
pop
jno
xchg
xchg
test
push
test
leave
and
sbb
fidivrs
or
or
pop
loopne
jbe
sbb
jne
and
lea
bound
movsb
into
roll
adc
addb
cli
int
add
sti
inc
mov
add
mov
mov
inc
push
out
xchg
or
ficoms
into
fstpt
sbb
inc
testl
rorb
clc
orb
push
mov
add
xlat
and
jle
push
sbb
jge
jae
testl
mov
lea
jl
fcomps
inc
in
sbbb
movsb
mov
dec
ja
jb
ljmp
cmpb
mov
movsl
dec
fs
popf
push
jecxz
stos
rcll
pop
inc
ja
and
jg
sbb
hlt
fwait
popf
push
pusha
shlb
add
imul
xchg
inc
sub
xor
call
dec
or
inc
push
test
or
push
xor
mov
mov
sub
addl
jecxz
dec
adc
and
push
or
add
sbb
loopne
mov
nop
mov
xchg
data16
mov
je
cmp
sahf
shlb
movsl
popf
fists
imul
mov
mov
or
cli
call
mov
mov
rclb
or
xchg
mov
lock
fs
filds
and
test
fwait
pusha
pop
movsb
xor
ja
inc
sub
outsb
imul
into
xchg
jns
repnz
and
out
dec
mov
fadd
jne
push
jb
adc
or
adc
inc
popf
pop
mov
jbe
lea
jb
or
fstps
mov
mov
push
xchg
or
mov
shlb
movl
out
lret
in
jge
cltd
hlt
xor
dec
fs
xchg
hlt
sbb
shlb
xor
addb
xchg
push
leave
nop
inc
cmp
icebp
push
inc
imul
dec
in
xchg
or
and
mov
jge
scas
divb
mov
inc
and
sarl
xor
das
pop
push
pusha
iret
fisubrl
mov
subl
push
and
mov
cmp
pop
test
lods
cld
movsb
fldt
mov
cmp
add
adc
or
notb
test
loopne
xchg
mov
adc
cli
jo
mov
iret
mov
mov
jmp
jne
outsb
cmpsl
jbe
das
test
imul
cmp
lods
cmp
cmp
arpl
pop
cltd
dec
nop
jae
jo
dec
scas
data16
arpl
xchg
stc
sar
and
shrl
sbb
out
les
mov
mov
jbe
testb
nop
xchg
or
pop
mov
fisttps
aas
sarl
cmc
cmpl
mov
lea
pop
xchg
mov
lea
push
lea
sub
mov
adc
cmp
shlb
jp
push
push
xchg
js
and
jb
ficompl
push
in
mov
jle
popl
stos
stc
add
js
jmp
es
add
mov
mov
repz
jl
test
mov
xchg
mov
pushf
mov
jl
mov
xchg
jbe
fstpt
jp
lret
mov
fimull
lret
push
mov
test
ret
or
xor
ja
mov
mov
cltd
imul
lahf
lea
inc
mov
flds
imul
fildl
scas
aad
mov
pop
mov
push
add
popa
daa
arpl
pop
je
xor
cmc
popa
movsl
inc
jnp
das
mov
stos
or
orb
out
lods
push
or
mov
mov
dec
ret
push
ds
add
pushf
loopne,pt
push
outsb
ja
push
mov
addl
je
lret
pusha
lahf
les
sarl
icebp
aaa
pop
sbb
or
and
jae
js
movsb
cmc
adc
dec
fwait
je
insl
push
dec
add
rcr
test
push
test
ss
lock
add
or
int
jle
push
xchg
cmp
mov
loopne
insl
mov
cltd
out
les
outsb
cwtl
push
movsl
adc
cltd
mov
add
cmp
mov
les
sub
adc
mov
pop
pop
popf
pop
mov
or
enter
or
jnp
rcl
jg
and
or
aad
lea
call
mov
mov
sub
jle
sub
sub
xchg
jmp
mov
lods
xchg
xchg
dec
pop
insl
jmp
jbe
or
sbb
pop
or
stos
data16
xchg
cmp
push
or
sub
iret
jge
test
mov
mov
lret
mov
mov
lds
mov
scas
fldenv
into
lret
mov
dec
xlat
xchg
mov
sub
xchg
add
xor
leave
fldl
mov
mov
adc
imul
xchg
pusha
das
ret
cltd
jbe
push
and
call
mov
cltd
in
jae
mov
dec
popl
fnstsw
repnz
cmc
stc
or
pop
rcrb
xchg
or
data16
fstps
sti
pop
pusha
mov
insl
mov
sub
push
add
xchg
shll
lahf
jmp
cmp
add
sti
stos
or
popf
es
stos
stc
scas
jp
dec
aad
fcoml
or
cmpsl
xor
cld
cmc
les
xchg
lock
movsb
aad
pop
xor
sub
pop
cwtl
sbb
mov
clc
xchg
xor
jo
mov
imul
xchg
int3
xor
ljmp
addb
or
aam
or
fsubp
inc
jle
into
add
fsin
cmpsl
fisubs
or
pop
mov
jg
add
dec
adc
xchg
cld
mov
insb
mov
mov
cli
test
mov
dec
iret
inc
xchg
mov
pop
xor
in
cltd
aam
les
mov
xchg
push
mov
push
dec
xchg
add
stc
std
insl
sbb
sub
push
sub
es
sti
shlb
rorl
push
in
inc
xchg
jle
mov
test
outsl
inc
pop
movsl
dec
inc
aas
xor
dec
push
outsl
mov
mov
cld
shrl
scas
lret
test
pusha
fldenv
xchg
or
inc
push
mov
sbbl
mov
data16
divl
push
movb
and
stc
mov
popf
sbb
mov
sbb
lcall
movsl
or
mov
xor
in
xor
fisttpll
fcmovnbe
or
stos
bound
cmp
rcrl
and
orb
int3
xor
ret
cmp
or
mov
stos
ljmp
sbb
xchg
adc
add
testb
leave
lock
std
clc
into
jnp
inc
mov
sub
add
push
mov
hlt
jle
adc
icebp
lods
mov
pop
push
lods
inc
movsb
rorb
pusha
ret
adc
mov
fisubl
mov
add
ja
rorb
lret
jnp
scas
inc
addr16
xchg
stc
cmp
mov
int
out
int3
push
xchg
imul
lock
dec
jo
mov
or
jne
idivb
inc
shlb
outsl
add
call
test
int3
lods
sti
sbb
or
add
test
adc
fistpll
iret
xor
out
mov
xchg
roll
push
cmp
mov
dec
sbb
or
add
orl
sbb
push
cmpsb
mov
mov
fcom
xor
or
push
or
rorl
add
sub
push
add
iret
jl
mov
fdivrl
jnp
sub
pop
inc
sub
add
pop
push
xor
lds
xchg
mov
add
fsts
fs
loope
lods
mov
inc
js
int3
cmpl
cwtl
cpuid
or
dec
jne
iret
xor
or
xchg
xor
mov
nop
stos
dec
jmp
cld
test
lock
pop
cmp
test
or
jnp
xchg
jnp
dec
xchg
fcmovnb
in
xchg
mov
add
mov
mov
mov
mov
xchg
jg
xchg
scas
int3
adc
dec
and
mov
dec
imul
mov
jmp
enter
nop
sbb
sbb
fadds
stc
retw
stos
js
push
jne
pop
ret
push
or
lcall
out
fdivl
rorb
imul
lock
and
cli
cmc
adc
dec
cltd
sub
cmc
mov
hlt
xchg
cli
lods
mov
xchg
cli
testl
push
mov
jne
outsb
mov
sti
leave
icebp
stc
xor
inc
fmull
into
cmpsb
cs
and
icebp
cs
cli
add
mov
nop
push
lods
data16
je
pop
or
jl
movsb
subb
test
test
inc
jb
inc
ds
shrb
call
mov
orl
stos
pop
je
movl
sub
das
lret
popf
mov
test
mov
sub
xchg
xchg
mov
insb
mov
mov
ret
pop
push
call
dec
mov
jae
mov
push
and
jno
lods
sub
inc
lret
data16
mov
dec
adc
fstpt
cmpsl
cld
fisubl
mov
push
adc
scas
jo
fwait
mov
test
movl
xchg
xor
inc
sbb
xlat
repz
xchg
hlt
scas
outsl
mov
insb
cwtl
adc
pop
mov
cmc
mov
mov
xchg
jecxz
mov
adc
mov
xchg
es
rorb
fimuls
or
int3
xchg
cmp
lods
into
mov
std
test
jo
pushf
xor
cmp
int
sbbl
shrb
jns
lea
mov
pop
or
cmp
sbb
add
mov
outsl
pop
add
mov
xchg
scas
das
adc
cwtl
jg
movsl
add
mov
rol
jp
outsl
mov
cmp
inc
pop
cwtl
and
and
mov
cmp
shll
test
mov
xor
imul
cmc
int3
mov
cmpsl
cmp
in
add
dec
mov
mov
mov
rorl
inc
test
hlt
sahf
mov
test
shrl
xlat
into
adc
stos
enter
mov
orb
add
xchg
inc
rolb
test
out
xchg
and
aad
das
pop
cmp
es
xlat
jae
xor
loope
or
mov
xchg
inc
imul
imul
test
jns
jo
xchg
mov
inc
dec
cld
lcall
shll
cmp
xchg
fsubs
mov
scas
sub
jmp
repnz
xor
in
mov
subl
cwtl
cmpsb
cmpsb
js
scas
add
repz
xchg
test
cltd
int
xchg
shl
sub
cmpsb
sbb
push
clc
and
mov
push
movzbl
inc
hlt
xchg
imul
lea
mov
cmpl
dec
mov
pop
fldl
mov
inc
sub
sbb
outsb
pusha
sarb
mull
xchg
das
xorb
jns
mov
inc
push
xchg
and
dec
fistps
fsubs
in
movsb
js
cmpsl
scas
inc
es
daa
add
clc
push
lods
dec
xor
or
sbb
lcall
sbb
movsb
inc
rcrl
rolb
cmc
xchg
push
or
mov
mov
mov
imul
cmp
enter
mov
idivb
invd
jge
push
movsl
mov
push
cmc
test
fnstenv
divb
push
xor
mov
xchg
cwtl
or
in
addr16
cmp
mov
movsb
or
orb
or
and
xor
add
outsl
xchg
aaa
nop
xchg
or
cmp
xorl
mov
or
jae
ret
or
mov
sbb
inc
fiadds
mov
imul
repz
enter
lret
and
aad
xor
add
test
and
es
clc
cmp
mov
jbe
call
inc
sbb
and
movsl
std
ret
add
test
mov
mov
stc
add
cmpsb
imul
vpsubsw
mov
jo
loope
inc
inc
xorl
adc
xchg
or
rcll
xchg
out
orb
scas
or
movsb
jb
mov
push
mov
inc
mov
add
fldl
xchg
orb
ja
push
stos
dec
or
popa
loopne
loopne
in
test
add
loop
neg
test
xchg
inc
mov
mov
je
cwtl
sbb
or
mov
push
imull
lods
mov
xchg
jle
sbb
mov
int3
test
stc
add
jg
lret
push
mov
sbb
mov
sbb
fisubl
jl
sbb
and
and
xchg
add
fldenv
cs
repz
push
xor
adc
vcmpss
ret
cwtl
fstp
add
clc
mov
cmpsb
in
mov
mov
shr
sbb
push
test
jp
sti
fwait
pop
mov
imul
jns
sbb
xchg
fisttpll
xor
adc
pop
push
out
xchg
pushf
rorb
xchg
movsl
adc
sbb
push
fbstp
lret
push
gs
sti
mov
lret
pusha
test
fidivrl
into
enter
insb
xchg
push
push
test
or
mov
jl
sbb
mov
imul
xchg
push
mov
mov
add
cld
xchg
xchg
mov
jl
lahf
inc
or
sbb
add
dec
lahf
icebp
adc
sub
movsb
pop
imul
lods
dec
xchg
xchg
xor
xchg
pop
xchg
pop
push
movsb
jno
imul
push
adc
mov
pushl
es
into
sbb
adc
orl
sub
xchg
sahf
adc
add
cmc
mov
ret
fiaddl
pop
or
pop
jne
imul
ds
push
and
mov
push
imul
mov
mov
adcb
imul
mov
mov
cltd
cmp
in
imul
pop
inc
mull
push
nop
aam
mov
mov
xchg
xorl
or
shll
jmp
adc
cltd
add
insb
sub
sub
inc
push
roll
aad
in
mov
scas
imul
out
pmaxub
xor
mov
fsubs
cwtl
lcall
repz
mov
mov
sahf
test
mov
and
jg
or
ljmp
xchg
test
xchg
dec
inc
jo
loopne
sbb
and
pushf
push
mov
push
into
add
popf
aas
jl
or
xchg
shlb
in
les
add
adc
inc
cmp
or
and
dec
mov
ret
into
imul
stc
xchg
or
mov
imull
or
add
movsb
mov
loop
jo
std
mov
decb
xchg
imul
mov
jl
sub
loop
neg
or
enter
imul
or
or
aam
pop
stos
test
js
fmuls
fs
push
das
xor
lods
mov
and
aaa
jno
test
adc
aas
mov
imul
add
add
js
cld
mov
test
mov
add
hlt
xchg
fbstp
and
cmpsb
xor
and
test
test
mov
sub
xor
rorb
mov
shll
xlat
call
ficoms
data16
hlt
mov
leave
mov
mov
or
mov
mov
lods
and
add
xlat
sbb
sbb
jge
lret
test
dec
sbb
mov
xchg
hlt
shll
mov
test
xor
add
imul
sbbl
mov
into
stos
imul
aam
xchg
js
leave
add
mov
or
mov
shll
imul
sbb
mov
dec
aam
xor
mov
dec
orl
imul
es
mov
mov
imul
mov
mov
push
mov
in
fsts
inc
sbb
inc
imul
jb
inc
mov
nop
imul
and
hlt
popf
and
cltd
lret
cld
and
push
dec
loope
pusha
popa
pop
mov
mov
xchg
test
repnz
and
mov
sahf
leave
or
ja
push
and
xchg
or
pusha
sti
mov
lods
pop
sbb
lret
mov
xchg
pop
and
pushf
mov
mov
jp
xlat
push
dec
sub
mov
xchg
js
add
mov
adc
dec
mov
push
mov
cwtl
imul
das
stos
fwait
and
fdiv
lret
add
push
lea
lret
shlb
cs
dec
pop
mov
add
fnstsw
ret
insl
cmpsb
sub
push
xchg
mov
mov
mov
xor
imul
mov
outsb
cmp
cmp
movsl
stos
jns
and
sbb
int
jle
hlt
test
mov
dec
movsl
jnp
movsl
push
imul
mov
ret
push
je
clc
xor
ret
adc
loope
xchg
lods
sti
fcoms
sar
xchg
cwtl
push
stos
inc
iret
pop
push
rcll
mov
sahf
lret
pop
adc
mov
add
mov
inc
push
in
pushf
flds
xor
jmp
js
mov
lcall
mov
cmpsl
mov
adc
mov
push
mov
jg
sahf
test
mov
xchg
or
dec
xorb
adc
xchg
mov
pop
nop
push
std
mov
pop
leave
push
bnd
pop
push
imul
loope
mov
mov
xchg
cmpsl
push
fs
jg
lret
xor
in
cmc
pop
pop
in
inc
mov
xlat
pop
in
in
xchg
cmc
mov
mov
bound
pushf
jnp
cmp
push
lea
out
dec
test
add
sarl
out
mov
add
das
shll
lret
jp
aaa
push
js
inc
int
rcrl
lret
mov
std
fs
idiv
js
xchg
scas
push
in
jl
cs
and
hlt
fisubs
jne
enter
push
dec
jecxz
lods
je
sbb
push
shrb
sbb
xchg
jge
int3
xor
mov
jmp
or
mov
in
pusha
and
and
lahf
fsubrp
sub
movsl
addr16
mov
loope
or
pop
push
mov
mov
xlat
ljmp
scas
adc
mov
ss
and
js
xchg
ja
data16
sub
mov
mov
sub
cld
fidivrl
xchg
cld
test
pop
push
xchg
loopne
xchg
insb
mov
lcall
xchg
movsb
outsb
test
mov
ficoms
add
cmp
aaa
lods
mov
sub
enter
shlb
testb
loopne
fsts
jmp
shrl
pop
lret
lock
add
xorb
mov
les
push
xlat
sarb
cli
cmc
mov
movsb
jge
add
js
mov
dec
jg
push
sub
jbe
xchg
inc
mov
xchg
out
rolb
daa
ret
mov
hlt
insb
movsb
xor
rolb
data16
mov
enter
mov
addr16
mov
sub
dec
mov
xchg
ret
imul
cmp
sbb
mov
mov
xor
clc
xor
mov
movsb
lods
sahf
sub
xchg
cmc
xchg
or
movsl
test
mov
push
add
popa
shlb
xor
pop
or
xor
adc
popf
cmc
mov
add
jbe
jb
inc
push
xchg
movsl
mov
pop
and
ljmp
xor
jns
stc
xchg
push
insl
mov
lods
mov
mov
unpcklps
or
test
xchg
add
cltd
or
xchg
xor
cwtl
push
sarb
xchg
add
mov
test
inc
lods
nop
add
mov
enter
add
hlt
ret
pushf
mov
and
or
jle
jno
ret
add
imul
stos
dec
mov
fidivl
mov
cmpsb
mov
hlt
mov
mov
jl
hlt
xchg
sbb
pop
xchg
inc
push
inc
cmc
repz
lcall
test
cmp
xorl
scas
jns
lret
bound
pusha
dec
mov
mov
dec
or
sub
xlat
xchg
mov
add
sbb
andb
push
pop
pop
sahf
and
mov
hlt
mov
lcall
aam
loopne
or
jecxz
incl
cmpsl
cli
mov
add
cmc
push
test
push
fcomip
or
cltd
adc
mov
lea
push
scas
or
outsb
notl
addb
inc
rclb
imul
push
mov
mov
popa
mov
mov
inc
mov
jne
lret
adc
imul
in
lds
jb
clc
in
xchg
or
dec
or
adc
cmpsb
mov
mov
dec
mov
push
jno
push
pop
jg
jnp
das
mov
xchg
je
lds
orl
test
sub
mov
mov
imul
jnp
mov
mov
cmp
mov
mov
jp
test
add
dec
add
mov
lods
mov
dec
cmpsl
pop
inc
xchg
cmpsl
cmc
jb
mov
mov
ret
mov
push
mov
xchg
xchg
fbstp
add
and
push
movsl
mov
leave
xchg
icebp
jb
cmp
sub
push
es
std
jnp
sub
mov
rcrl
vmovntps
roll
jbe
xchg
mov
pushf
in
jle
add
test
jecxz
xchg
movsl
mov
stos
jae
dec
xor
mov
mov
mov
mov
scas
mov
out
dec
pmaxub
test
popa
nop
in
js
mov
ljmp
mov
hlt
fwait
sub
mov
hlt
sahf
mov
mov
imul
fimuls
xchg
insb
jbe
lods
ret
sub
xchg
add
push
jne
lods
cmc
mov
sbb
xchg
push
shlb
rcl
inc
pop
ret
daa
xlat
push
lret
adc
imul
sub
adc
mov
sbb
in
scas
sub
into
movsl
divl
mov
xchg
in
xor
xchg
enter
cmp
cmc
out
test
mov
add
mov
orb
mov
mov
push
mov
jp
push
mov
in
dec
sbb
lods
xor
cmc
test
push
int3
cmpsl
sahf
lods
in
mov
lods
push
out
or
hlt
ret
mov
cmpsb
and
fdivp
push
or
and
test
pop
add
int
xchg
rorb
adc
mov
ds
dec
add
push
enter
aas
xchg
jmp
lret
push
sbb
popa
out
bound
es
imul
push
cs
lock
adcb
xor
rolb
hlt
movsb
inc
push
fs
mov
or
push
popf
imul
mov
mov
ret
clc
loope
sbb
sub
faddp
les
xorb
xchg
dec
mov
mov
hlt
lds
dec
push
loopne
mov
fmul
stos
jae
and
mov
mov
imul
mov
ljmp
lds
add
adc
inc
push
pop
sbb
pop
pop
and
pop
jae
hlt
lret
sti
add
fstl
push
mov
dec
xchg
mov
in
mov
jp
mov
mov
push
repz
inc
imul
test
xchg
jb
or
inc
test
int3
mov
cmc
fbstp
dec
mov
push
or
jo
sbb
les
addl
adc
or
loop
mov
mov
push
mov
lcall
hlt
decb
dec
ljmp
loope
pushf
inc
jns
add
dec
add
mov
mov
shrl
fdivs
out
lret
scas
std
dec
int3
mov
or
mov
jmp
push
pop
scas
cmc
or
add
dec
lcall
push
repnz
xchg
fmull
and
and
inc
add
in
repnz
inc
and
mov
xchg
pop
xchg
fdivs
dec
xchg
cmc
xchg
inc
lcall
cmp
adcl
cmc
iret
lods
adc
mov
and
shll
cmp
dec
pop
in
pop
add
loop
movsb
je
jge
jmp
dec
into
lods
shrl
push
pop
fnsave
out
cmc
xchg
cmp
in
test
xchg
sahf
mov
xor
loop
aam
push
rclb
dec
lcall
cmc
xlat
movsb
fs
mov
pop
imul
nop
mov
imul
push
xchg
aas
mov
lcall
xor
mov
mov
popf
nop
testb
shr
addl
mov
push
stos
into
nop
sub
cli
and
in
mov
cmpl
rorb
mov
sbb
andl
pop
or
sbb
dec
inc
in
fisubl
fmuls
fistl
ficoms
pop
cltd
imul
jl
sbb
out
mov
jns
mov
push
popa
sub
loop
rorb
push
jnp
mov
stc
sub
xor
test
mov
dec
mov
sahf
push
ja
aaa
movsl
outsl
pop
cmp
out
mov
or
jp
imul
test
or
pcmpgtw
popf
cwtl
or
sti
shll
and
leave
jmp
les
movsb
cwtl
xchg
cmp
pop
xchg
not
hlt
ds
das
push
push
or
mov
mov
data16
popa
or
jg
dec
clc
mov
mov
inc
mov
push
cwtl
cld
mov
pop
cld
or
jp
push
repz
movsl
hlt
nop
lods
xchg
je
js
pusha
and
cmc
or
push
pop
mov
inc
rolb
mov
ret
sub
xchg
mov
and
test
mov
dec
nop
fnstenv
push
and
sub
hlt
mov
arpl
out
cmpsl
inc
aas
popa
xor
movups
jge
or
xchg
jb
inc
fxtract
lcall
sbb
nop
sub
add
add
clc
cmpsl
ds
inc
sbb
or
xor
in
add
mov
cmp
sub
mov
test
daa
into
push
cwtl
out
rorb
out
rcrl
or
cwtl
leave
xlat
loope
test
neg
pushf
pop
jb
pop
mov
sub
cmp
ljmp
cmpsl
jnp
or
gs
jp
mov
test
fucom
cs
filds
cs
xchg
adc
hlt
xchg
movsl
jmp
mov
gs
adc
cmp
sbb
inc
movsl
and
dec
aad
mov
or
mov
push
push
rcl
adc
pushf
cmp
repz
rclb
push
mov
loope
pushf
pop
adc
and
mov
ror
mov
fistpl
daa
mov
cwtl
fimull
add
out
push
mov
jl
hlt
lret
sti
add
popa
dec
jmp
add
in
xor
pop
xor
and
idivb
mov
pop
sub
adc
and
push
mov
and
outsb
ficoms
or
test
cltd
int3
xchg
sbb
xchg
push
ret
xchg
dec
jo
and
inc
dec
sbb
xchg
push
sub
mov
ret
aam
loopne
call
pop
xchg
add
dec
and
xchg
jmp
fsubl
push
add
data16
js
jb
pop
lea
add
add
mov
cmpl
jne
xor
lret
stos
push
pop
add
adcl
jo
inc
loopne
pushf
xchg
or
inc
fs
xchg
dec
je
test
lea
jbe
jnp
xchg
popf
inc
lods
rclb
add
cld
imul
mov
lret
lret
je
inc
cmpl
mov
push
mov
aas
icebp
push
cmp
ljmp
sbb
jl
jg
cltd
mov
fld
leave
mov
dec
push
js
mov
cmp
lea
sub
pop
rorl
call
fdivs
inc
push
and
mov
in
cmpsl
adc
sbb
rolb
inc
das
lea
out
popf
rclb
outsb
xchg
or
test
jbe
addl
push
hlt
fwait
mov
cwtl
adc
sarb
add
enter
hlt
rcrl
stos
test
or
adc
mov
dec
jmp
hlt
cmp
xlat
pushf
xchg
push
push
ja
notl
xor
sahf
add
mov
mov
adc
push
mov
dec
lret
insb
jmp
or
push
rcrl
cmp
ret
xor
xchg
mov
cs
lea
fwait
push
mov
hlt
xchg
xchg
iret
mov
loopne
pushf
dec
shlb
mov
scas
insl
test
sbb
mov
incl
call
add
sbb
cwtl
je
imul
sub
or
fisttps
xchg
mov
sub
subb
xchg
xchg
add
outsl
ljmp
aad
enter
adc
scas
ret
jae
mov
mov
lods
imul
dec
ja
fwait
push
xor
sbb
iret
inc
push
mov
outsl
nop
cmp
xchg
adc
cltd
mov
insl
cmp
inc
pop
dec
cmpsb
adc
popf
sbb
xchg
dec
into
movsl
jg
fldcw
or
and
fisubl
xchg
mov
mov
in
mov
cwtl
dec
sbb
adc
mov
out
mov
xchg
mov
xchg
xchg
pop
loope
cmc
popf
xchg
mov
xlat
ret
sbb
imul
xchg
test
sar
and
test
mov
inc
xor
xchg
shlb
mov
xchg
cmp
xlat
ret
sbb
mov
inc
jp
aad
aaa
stos
imul
xchg
xlat
mov
imul
inc
sub
mov
roll
int
mov
popf
test
les
sti
loopne
or
and
into
pushf
mov
scas
dec
dec
mov
jle
sub
dec
aaa
xchg
std
iret
lcall
jbe
mov
mov
leave
scas
shrb
and
ja
mov
lods
test
xor
sbb
mov
outsl
jmp
movsl
push
test
nop
add
xchg
jno
add
mov
les
add
cld
add
scas
dec
push
inc
cmp
cmp
ret
xchg
ljmp
movsl
sbb
pop
fistpll
push
aad
test
mov
popl
daa
jo
xchg
jns
mov
cwtl
test
rorb
xchg
nop
xor
mov
imul
mov
xchg
xor
or
xchg
mov
movsb
push
scas
pop
icebp
dec
sub
mov
mov
enter
aad
insb
add
sbb
stos
fs
stc
lea
leave
aam
inc
cmpb
lea
pop
shrl
int3
push
push
fnstcw
movsb
iret
and
ret
push
mov
out
dec
mov
and
dec
xchg
iret
mov
mov
lcall
jbe
or
xlat
dec
cmpsl
mov
shrb
ficomps
xchg
test
js
add
js
popf
pop
pop
movsl
sbb
sub
jo
dec
ja
mov
xchg
mov
cmpsb
xor
sbb
push
mov
clc
xchg
xor
cmp
leave
mull
loopne
gs
jl
adc
fdivr
adc
mov
outsb
test
addl
js
dec
xchg
or
sub
inc
aas
xlat
adc
push
cmp
lahf
push
xchg
mov
or
push
sub
addl
xchg
jb
dec
arpl
and
sub
nop
fcmovnbe
add
lret
ret
sbb
rclb
leave
or
dec
cmp
or
in
jg
cmpsl
add
inc
loop
mov
cwtl
lea
mov
push
push
test
clc
or
hlt
mov
inc
shl
xchg
inc
faddp
rclb
jmp
in
mov
inc
xor
mov
add
aas
jae
test
or
mov
test
mov
aas
adc
ds
mov
sbb
test
inc
sub
or
inc
push
fld
in
sbb
mov
fsubrs
hlt
fiaddl
mov
ljmp
loop
xlat
cmc
rcl
maskmovq
testl
inc
push
shll
test
ret
fnstenv
lods
lahf
jne
scas
jnp
lds
xchg
push
bound
add
pushf
push
jle
std
xchg
mov
add
mov
mov
ficomps
dec
lcall
pop
and
or
push
ret
or
lahf
xchg
and
pusha
adcl
jnp
into
clc
pushf
les
subl
movsb
addr16
jecxz
lret
fimuls
filds
sbb
dec
cs
lea
or
add
mov
or
or
dec
cmp
adc
mov
mov
mov
xlat
into
add
push
xorb
data16
lret
inc
shlb
mov
test
mov
sub
stos
jmp
pop
sbb
aam
mov
adcl
jne
lret
cmp
pop
fldcw
sbb
cmpsl
test
les
jns
inc
je
gs
dec
ret
mov
jne
cld
sbb
inc
scas
inc
sub
jns
or
mov
pop
jp
cmp
cld
pop
clc
push
rolb
pop
or
imul
pusha
mov
sbb
fistpl
push
mov
push
nop
movsb
jmp
aas
jnp
lock
test
lea
cli
mov
das
imul
cwtl
push
mov
fsubs
lret
ljmp
xchg
ffree
sbb
nop
cmp
pop
sbb
fidivrl
mov
inc
mov
enter
mov
push
jbe
jno
xchg
fldcw
shrl
mov
roll
lret
adc
mov
lahf
outsl
cmp
cmp
stos
iret
inc
add
popf
sub
sbbb
stos
aam
cmp
sbb
insb
xchg
cs
xor
push
test
adc
test
sbb
lahf
pop
test
xchg
and
out
enter
or
xchg
push
repz
sub
ja
mov
leave
cmpsl
pop
cltd
mov
inc
push
mov
call
test
fwait
dec
dec
sbb
mov
jno
ja
leave
jg
sub
js
mov
mov
mov
in
or
push
push
sbb
dec
lods
inc
imul
icebp
les
push
add
adc
dec
lods
jl
pop
adc
jge
mov
incb
insl
jnp
dec
lahf
decl
out
clc
jne
mov
xchg
jno
mov
xchg
or
cmc
imul
cld
xchg
sti
push
inc
sub
pop
fisubrs
mov
jle
int3
mov
cwtl
jg
test
xlat
push
sbb
rcrb
xchg
lret
sbb
fsts
cld
sub
jl
inc
out
push
push
adc
out
mov
pop
je
mov
aam
lret
xor
pop
jecxz
fsubp
and
sarb
aas
jg
cmpsl
decl
sub
inc
inc
imul
dec
cltd
pop
imul
jge
roll
push
hlt
fcoms
lock
mov
mov
test
push
jmp
cwtl
out
out
cmpsb
imul
lds
add
xchg
loopne
mov
pop
ret
and
push
jg
inc
xchg
dec
inc
test
orl
inc
imul
xchg
or
rolb
mov
imul
mov
sbb
mov
shrb
shll
bound
fcomps
lods
xlat
enter
popf
stos
es
cmpsl
mov
sub
ljmp
cmp
loop
xchg
inc
in
mov
fadds
push
test
jno
push
cmp
push
adc
adc
mov
add
nop
and
divb
arpl
push
insb
dec
out
sbbl
into
add
and
or
jns
adc
push
xchg
fdivrl
xchg
jl
outsb
adc
or
insb
cmpsl
xchg
cltd
sbb
scas
xor
js
mov
xor
and
rcl
push
es
cmp
lods
push
or
mov
int3
mov
add
je
inc
roll
add
adc
jp
movsb
push
adc
pushf
stos
xlat
sbb
push
mov
pusha
rcrb
icebp
add
inc
inc
dec
sbb
out
mov
hlt
mov
daa
mov
xlat
out
push
mov
pop
clc
push
cmpsl
std
push
pop
arpl
test
xlat
inc
test
js
test
cltd
add
lods
out
sbbl
mov
fucom
hlt
lcall
or
adc
imulb
push
pushw
fldenv
mov
adc
pop
and
and
xchg
or
xlat
inc
iret
movsl
bound
dec
mov
inc
addl
lock
rcll
test
push
int3
xchg
aad
aam
lahf
add
fstpl
aaa
mov
xchg
ljmp
push
or
pusha
adc
stos
xor
add
shl
sub
pop
adc
cli
xchg
add
loope
jnp
lods
mov
int3
stos
data16
or
testb
pop
les
cmpsl
fsubp
lods
out
or
hlt
std
mov
jno
leave
xor
jae
fiadds
sub
lock
incb
clc
sbb
mov
jbe
add
xchg
pop
ficompl
push
sbb
pop
lea
movl
ljmp
cli
inc
arpl
xchg
push
sub
pusha
flds
js
insb
jp
jl
or
hlt
mov
and
orb
addr16
fdivrp
sub
inc
orl
rcr
mov
cld
mov
jbe
popf
mov
mov
test
sub
add
mov
subb
push
mov
fsubrs
stos
inc
outsl
mov
andb
cld
test
movsb
lret
das
and
in
mov
lods
sub
ret
push
or
xchg
and
pushf
sti
push
in
pcmpgtb
ljmp
iret
clc
mov
inc
and
int3
ljmp
mov
fnstenv
sbb
les
jge
xchg
or
jo
aaa
cmp
daa
sarb
insb
sub
jo
lods
cltd
xrelease
fsub
pop
add
fwait
daa
xchg
push
out
in
mov
stos
je
sbb
out
sub
fiaddl
aas
xchg
sub
test
call
pushf
mov
mov
or
cmp
mov
lods
xchg
les
fmulp
insl
cwtl
loope
insl
lcall
das
xlat
or
fsubs
dec
outsb
mov
in
dec
pminsw
pusha
adc
enter
out
or
jmp
imul
decl
iret
imul
xchg
les
cs
lret
xor
aas
pop
mov
inc
ss
icebp
add
lret
push
xchg
push
fimuls
mov
mov
imul
adc
movsl
pop
clc
jmp
dec
or
or
imul
sbb
test
ds
cltd
testl
lcall
bound
pop
mov
jo
mov
ljmp
xchg
addl
cmpl
aas
dec
lcall
sbbl
and
js
pop
mov
loopne
inc
sbb
xchg
and
cmp
jne
mov
and
xchg
std
loope
xorl
xchg
pusha
inc
adc
pop
stos
jo
sarb
cmp
jne
ja
xchg
jns
pop
loopne
jae
push
icebp
movsbl
nop
imul
hlt
xor
push
andl
push
or
test
dec
jnp
out
xor
jecxz
imul
test
xchg
jns
xchg
xchg
xor
pop
int
mov
arpl
jecxz
and
rorl
xchg
adc
mov
add
adc
cmp
inc
xchg
mov
subl
lock
mov
repnz
xchg
or
les
data16
rorb
jmp
xchg
adc
cld
dec
and
cmp
sub
push
shlb
ss
xor
imul
fildl
mov
loop
add
add
mov
fdivs
dec
pop
jo
adc
pop
mov
lods
call
sbb
mov
in
mov
inc
pusha
stos
sbb
dec
pop
fnsave
sti
sti
dec
mov
mov
lret
out
inc
imul
in
xor
js
lcall
mov
sahf
lret
jle
lcall
sarb
test
pusha
push
pushf
dec
jg
cmpsb
data16
std
out
jp
in
and
popf
jmp
repnz
sub
loop
cwtl
hlt
jno
mov
insb
jbe
mov
sbb
push
fsts
jl
and
add
cmc
mov
adc
hlt
add
mov
xchg
mov
movsb
popl
jne
mov
adc
pop
push
aam
mov
sub
sarb
repz
out
mov
add
push
or
test
lods
push
lods
push
stos
sub
fistpll
mov
sub
or
xchg
xchg
jo
xor
add
jnp
mov
orl
inc
ljmp
jns
es
add
mov
inc
movsl
les
mov
insb
aad
lahf
xchg
int
rorb
add
xchg
or
xchg
jo
orl
stos
mov
cld
dec
and
mov
movsl
pop
insl
add
clc
xlat
pop
or
pop
ret
hlt
fiadds
cld
in
mov
repnz
pop
xor
fisubrs
push
jle
xchg
ljmp
int3
push
mov
xchg
test
imul
cmp
adcl
adc
and
add
daa
adc
enter
push
jmp
push
movsb
dec
movsl
dec
add
lcall
movsl
enter
mov
and
lret
jo
lds
mov
cmp
xor
test
add
sub
sbb
or
mov
aad
xchg
jo
pop
or
jp
add
in
fistl
rolb
dec
or
orl
gs
inc
jp
test
mov
lods
aas
movsb
mov
loopne
xchg
push
xchg
sub
cmp
xchg
in
adc
add
rolb
xchg
adc
xchg
mov
int3
mov
int
out
or
stc
test
mov
and
repz
pop
jbe
mov
add
dec
and
mov
or
lea
jg
test
adc
mov
sub
adc
loopne
subb
fwait
orl
dec
out
fsts
push
or
pop
sub
movsl
jp
lahf
xchg
or
sub
pop
or
mov
test
mov
add
out
jg
cmp
gs
mov
call
clc
mov
add
mulb
cmp
sub
gs
orb
stos
push
or
cli
sub
out
cmp
decl
push
mov
push
cmpsb
or
insl
xchg
lea
fiaddl
cwtl
pushf
lea
fwait
pop
push
xchg
mov
xchg
jns
mov
jle
xchg
push
lret
add
pop
test
lahf
lret
mov
js
pop
nop
nop
and
in
pusha
xor
insb
sbb
rcrb
push
test
dec
add
or
sti
inc
sbb
fisubl
xchg
adc
into
and
stos
mov
mov
sub
call
xchg
rcl
mov
lods
or
sbb
cmp
mov
push
popf
imul
pop
sarb
jp
xchg
imul
xor
xor
pusha
adcl
jnp
mov
dec
adc
ss
jo
test
clc
mov
sbbb
xor
rcrl
jg
mov
decb
sbb
rcll
cwtl
lea
inc
and
stc
or
sub
inc
in
dec
shll
mov
sti
in
mov
cmc
or
add
lea
cmp
xchg
ljmp
fmull
je
movsb
dec
std
fs
hlt
sub
in
test
pop
dec
cmp
repz
pushf
sub
sub
xchg
or
repz
lds
mov
loope
movb
mov
stos
lahf
xchg
scas
mov
sub
popf
and
xor
aas
test
ret
cmpsl
fadd
mov
and
xor
test
cltd
in
stos
push
lahf
testb
jne
ret
pop
sbb
sbb
aam
sbb
test
fwait
pop
sbb
out
lret
dec
xchg
in
mov
push
sub
pop
hlt
xchg
test
jl
push
lret
les
fisubrs
mov
js
adc
sbb
addl
data16
jae
leave
pop
pushf
fadds
mov
or
mov
int3
mov
nop
lock
and
mov
test
mov
rcrb
lock
movl
nop
sub
add
jp
dec
cld
bound
ljmp
adc
rorb
push
xchg
push
iret
mov
adc
js
adc
add
xchg
sub
jg
mov
inc
sti
add
mov
push
cmpl
jge
movsb
dec
or
pop
hlt
mov
sahf
mov
loope
mov
dec
cmp
lods
dec
xlat
lods
mov
sbb
das
sarb
scas
into
mov
popa
dec
xor
xlat
loope
sarb
aam
mov
mov
jp
xchg
mov
pop
std
dec
scas
jno
pop
mov
cmp
popf
clc
jge
dec
xorl
jecxz
mov
mov
enter
push
daa
jne
je
popa
aas
jns
and
jb
pop
inc
mov
pop
popf
mov
test
sar
sbb
mov
mov
mov
into
rol
repnz
mov
test
xlat
je
jae
or
jns
push
ljmp
adcb
jnp
sbb
mov
es
pushf
fnstsw
dec
fistpll
sub
test
and
or
ret
sub
das
dec
popa
xor
fistl
lahf
add
mov
jle
imul
pusha
out
jns
in
push
je
mov
bound
adc
fisttpl
push
sub
inc
dec
fstpt
dec
add
mov
popf
add
fs
mov
or
push
adc
insb
les
sarb
mov
jo
xchg
subb
add
cmpsb
clc
xchg
lcall
mov
addl
jle
out
adcl
mov
scas
dec
js
dec
scas
pushl
stos
rolb
test
xor
faddl
js
inc
or
mov
mov
mov
out
mov
cmc
in
dec
push
test
mov
push
call
test
xchg
inc
or
dec
roll
nop
int
int3
fcmovbe
mov
in
jo
into
add
into
shrb
int
std
jbe
xor
jb
cmp
cwtl
or
sarb
aas
inc
ja
mov
loop
shl
std
jp
jg
repnz
add
test
jbe
cwtl
inc
adc
hlt
pop
in
cmpl
test
mov
imul
fbld
push
cmc
jp
push
pushf
sarl
pushf
mov
scas
jge
mov
jno
xorb
pop
add
data16
mov
out
iret
subl
add
xor
cmc
iret
test
icebp
and
imul
sub
mov
stos
notl
sbb
dec
pop
test
mov
or
outsb
shll
jb
or
jg
sbb
jns
int3
or
test
cmp
enter
jns
shl
xor
popf
stos
inc
lods
adc
xchg
aam
dec
test
das
or
in
mov
fidivl
test
mov
popa
mov
push
lret
stc
mov
mov
push
ret
cmp
mov
xchg
cmp
repnz
xchg
dec
add
xor
mov
aad
js
iret
adc
ret
sub
in
and
and
cmpsb
imul
and
inc
push
stos
lods
fdivrl
adc
out
sahf
lahf
roll
xchg
mov
aam
inc
cmc
outsb
jne
jae
xchg
popa
mov
jl
sub
mov
inc
jle
and
mov
stos
mov
xchg
xchg
int
sub
mov
sbb
inc
cwtl
jl
add
cmp
mov
dec
cmp
lret
jl
cltd
adcb
imul
lcall
and
lcall
dec
nop
mov
ret
loopne
add
inc
cmc
adc
mov
push
mov
xchg
jmp
or
das
stos
ret
imul
mov
pop
or
ret
rcll
cltd
push
insb
inc
jg
popa
leave
mov
testl
xor
ret
cmpsb
lods
and
fisttps
aaa
mov
push
movb
xor
inc
imul
out
nop
pop
je
bound
mov
or
cmp
std
lods
mov
lcall
mov
sahf
pop
cwtl
imul
dec
in
push
xchg
mov
inc
jmp
in
or
testl
and
sarl
lret
or
inc
insb
lret
xchg
cli
sub
bound
mov
add
testl
push
xor
mov
mov
sbb
dec
shl
xchg
lods
outsl
mov
mov
lret
sub
mov
rcll
fistpll
mov
mov
out
out
xchg
inc
dec
mov
scas
imul
hlt
out
fdivs
stc
sti
or
add
xchg
cmp
fmuls
mov
in
icebp
jg
bound
xor
rorl
std
hlt
je
xchg
push
lods
xor
insb
andl
jg
enter
cmpsb
mov
loop
int3
jl
sub
add
lea
mov
mov
mov
ret
push
bound
pop
out
mov
jecxz
lahf
lahf
adc
dec
jle
leave
cmp
ljmp
mov
mov
add
cli
push
and
push
xor
test
xor
lahf
mov
out
sahf
xor
sbb
mov
sarl
inc
inc
pushf
sub
addr16
scas
mov
ds
std
fimull
jmp
sbb
mov
push
stos
fiadds
add
pushf
shrb
hlt
in
scas
sbb
add
es
dec
add
jnp
mov
dec
add
add
dec
jl
pop
pop
mov
vshufpd
je
cwtl
aas
inc
cmp
mov
xchg
aaa
or
add
xor
jg
push
scas
lcall
insb
xor
mov
mov
test
pop
imul
xchg
or
pusha
and
jno
cmc
adc
xor
jle
push
sarb
xchg
and
cltd
fisubl
orl
popf
fsubrl
lock
push
mov
xlat
enter
outsl
inc
outsb
or
fsubp
cmpsl
sbb
inc
cmp
repz
cld
sub
outsl
adc
sahf
imul
mov
mov
imul
add
or
inc
and
js
xchg
fisubrs
out
imul
jl
das
movsb
push
nop
int
jle
cmp
out
lahf
int
mov
jp
xchg
scas
add
xlat
push
dec
or
cmp
and
ja
add
lds
mov
mov
and
mov
outsb
add
or
mov
mov
popf
mov
outsb
addr16
outsl
mov
jg
in
test
xchg
in
mov
mov
stos
xchg
jns
dec
xchg
sub
js
jno
lods
popf
xchg
int
out
cmp
push
push
sbb
lcall
add
cmp
add
popf
mov
push
inc
xor
mull
imul
dec
imul
jb
jo
jo
js
pop
mov
pop
decb
mov
test
lods
out
xchg
lods
cmp
enter
cwtl
mov
imul
adc
and
pop
pushf
bound
fsubs
adc
ljmp
nop
fadds
mov
mov
andl
pusha
pop
imul
mov
stos
add
dec
loop
mov
add
push
mov
dec
ds
mov
xchg
lcall
cmc
cltd
int3
rolb
movsl
mov
dec
jmp
jecxz
push
fmuls
xor
int3
arpl
sub
fwait
nop
fldcw
mov
lods
push
jg
scas
add
mov
jmp
mov
mov
aaa
out
dec
xchg
xchg
xchg
mov
xchg
enter
cltd
adc
mov
hlt
mov
loope
cmpsb
loop
inc
aaa
mov
pushf
cmp
mov
and
ljmp
adc
mov
xchg
sbb
lret
jo
push
fildll
mov
rol
pop
hlt
mov
jae
cld
orb
enter
adc
outsl
cmp
imul
or
mov
pop
iret
imul
push
aas
mov
je
icebp
shll
lods
xchg
mov
jg
movsb
call
mov
test
shrl
sahf
cmp
mov
mov
test
fwait
cli
xlat
xchg
xchg
imul
jo
xchg
inc
cld
xchg
popa
push
scas
and
dec
test
mov
adcl
push
sar
adc
jl
es
jle
je
push
jl
adc
add
dec
ljmp
in
in
xor
pop
mov
and
add
sbb
or
imul
lea
into
sti
mov
add
inc
xor
mov
fdivp
lret
adc
das
add
pop
insb
sub
xchg
or
mov
jmp
add
std
add
xor
call
filds
pop
xchg
xchg
cltd
or
adc
cmpsl
jp
test
jbe
push
das
enter
ret
test
popa
ficomps
or
das
pushf
mov
sub
loopne
ljmp
addl
push
clc
xor
sub
push
push
test
pop
mov
sbb
sbb
lea
cltd
mov
adc
or
mov
ss
xchg
cld
test
sub
adc
add
sbbb
dec
loope
push
ret
adc
adc
lahf
jbe
cltd
xor
rorb
in
and
and
idiv
xchg
test
call
es
test
xlat
outsl
add
jl
mov
xchg
clc
mov
jp
into
shrl
inc
xchg
cwtl
push
mov
test
iret
call
test
push
imul
pushf
cmp
aad
inc
outsb
idiv
sbb
into
inc
sbb
dec
add
sar
push
jae
rorl
dec
or
scas
ljmp
out
nop
notb
lods
xchg
in
or
add
sub
add
sub
lcall
inc
dec
hlt
test
xchg
sub
cmp
sub
shl
aaa
minps
sbb
adc
add
mov
push
lcall
pop
xchg
sbb
in
cmp
shrb
add
add
inc
xor
adc
roll
pop
das
lea
into
or
jo
jno
movsl
ljmp
mov
adc
lcall
jbe
xor
test
sub
push
sbb
fwait
icebp
enter
clc
insb
cwtl
mov
xchg
inc
push
lock
ret
cmpsb
shll
xchg
sub
or
ret
and
mov
mov
mov
shlb
cld
cmpsl
icebp
clc
mov
bound
lds
ret
xchg
sub
pop
cltd
adc
fisubrs
dec
mov
shr
pop
ja
jne
mov
dec
jb
in
xchg
inc
sub
or
push
mov
jmp
jns
mov
mov
jns
cmp
push
mov
sub
jnp
and
add
xchg
ret
push
nop
mov
sub
adc
jmp
mov
shrl
push
or
out
rorb
shr
popa
cmc
movsb
fcoms
lret
movsb
shrl
xchg
imul
mov
lcall
xchg
nop
cmp
rorb
addb
movsb
incl
test
nop
xchg
mov
mov
sbb
mov
inc
pop
dec
push
sarb
lret
mov
movsb
mov
push
clc
lods
sarb
mov
sub
in
cmc
in
inc
nop
add
dec
pushf
mov
lods
sbb
lock
pop
in
clc
repnz
jmp
push
adc
push
outsb
dec
ljmp
gs
add
and
rcrb
adc
xchg
dec
int3
lock
stos
add
fsubrs
sbb
mov
sbb
repz
test
lock
dec
stos
cmp
and
shrb
pop
lret
mov
mov
mov
scas
mov
enter
icebp
imul
cwtl
leave
movsb
mov
mov
inc
les
repnz
mov
mov
ret
lods
call
jno
arpl
xchg
les
xchg
pusha
cwtl
mov
inc
xchg
and
incl
imul
cmpsl
cmp
xchg
js
mov
test
dec
cmpsl
loope
inc
or
test
call
lret
movsb
hlt
or
cmc
in
and
xchg
ficompl
lds
mov
scas
fs
movsl
inc
pop
loop
and
push
xor
add
cltd
nop
fcmove
subb
dec
add
push
enter
cmp
int
sahf
mov
lret
add
cmp
jbe
push
in
or
dec
mov
mov
icebp
push
cmp
imul
mov
jns
push
xor
mov
hlt
cmp
xchg
mov
cwtl
mov
sbb
mov
js
and
push
jl
xchg
sub
lret
cmpsb
movsl
xchg
lret
jge
cmp
insl
out
xor
jp
in
xchg
test
xchg
imul
jl
xchg
rorb
xchg
mov
or
dec
add
jae
daa
rcl
stos
rcrb
push
ficoml
add
cmc
in
xchg
inc
in
pop
sarb
loop
mov
push
shl
mov
mov
push
call
shll
test
mov
jno
mov
shlb
jne
inc
adc
lret
mov
fcoms
clc
dec
jp
mov
cmp
ffreep
add
inc
repnz
push
call
mov
xor
jns
pop
leave
es
mov
lods
mov
aad
xchg
je
loope
call
popa
or
movsl
push
cwtl
inc
arpl
jmp
lret
loopne
mov
xchg
lds
test
adc
mov
out
push
cmpsb
jle
mov
add
fbstp
cmovns
movsl
shrl
xor
xchg
andb
dec
sarl
enter
inc
mov
dec
xchg
subl
pushf
mov
jl
push
jbe
out
popa
cld
lcall
mov
repz
inc
pop
jae
jle
dec
xchg
mov
jecxz
xchg
xchg
in
jo
fdivrp
test
into
into
out
scas
inc
pop
lock
sub
push
pop
and
xor
pop
aad
lret
mov
jecxz
mov
pop
das
mov
testl
js
and
add
xchg
inc
neg
cwtl
xor
mov
mov
lea
push
mov
cltd
je
scas
in
xchg
jmp
dec
xchg
cmpsl
cmp
xchg
out
call
pop
fs
cmpsb
insl
mov
lret
push
dec
mul
test
notl
addr16
or
inc
jb
pop
and
lock
scas
or
fdiv
aas
hlt
stc
loop
mov
insb
and
xor
add
mov
ret
enter
in
loop
mov
push
sbb
adc
ror
test
push
mov
xchg
mov
das
jo
add
movsb
mov
enter
ret
rorl
xchg
ljmp
outsb
movsb
and
movsl
mov
mov
and
sbb
mov
nop
and
or
fistpl
adc
dec
jo
out
mov
cwtl
repz
cmp
mov
jmp
lret
push
add
adc
andb
adc
stos
test
das
pusha
in
test
leave
mov
jmp
cmc
rorb
lods
push
cwtl
add
outsb
jmp
jne
fisttpl
xchg
adcb
mov
test
ret
cli
popa
ret
pop
mov
sbb
cmpsl
push
pop
loop
mov
fidivs
cmpsb
lea
xor
sbb
bound
xor
pop
insb
mov
fcmovbe
add
xorb
stc
loop
pushf
call
sarb
xchg
adc
sbb
cmpsl
out
call
sub
nop
mov
mov
es
negl
inc
adc
cli
xchg
mov
mov
cmc
pop
sbb
xchg
roll
stos
jmp
fcoms
pop
in
aam
das
insb
stc
fldt
orb
and
cmc
mov
mov
xchg
cmc
mov
push
cs
adc
xor
cltd
rcl
sahf
add
incb
int
rcrl
icebp
test
inc
adc
mov
mov
push
or
push
jg
sub
mov
ret
call
cld
push
loop
jno
sub
add
xor
iret
mov
dec
loop
ret
cmp
outsl
and
frstor
mov
into
inc
push
aam
rorb
fsubrs
lods
push
repnz
add
xor
shrb
jmp
dec
and
test
or
fdivrp
jmp
adc
sub
adc
test
pop
sbb
ljmp
xor
pushf
pop
nop
orb
cmp
movsl
clc
pushf
mul
and
xlat
dec
fildl
cwtl
inc
test
imul
stos
jno
scas
rcr
and
cwtl
jmp
mov
add
cmp
mov
test
mov
sub
out
test
adc
or
xchg
xlat
and
cmp
xor
test
in
cmp
jo
mov
push
mov
pop
pusha
inc
arpl
pop
mov
mov
rorl
dec
mov
lods
out
sbb
fmuls
push
push
pop
fisttpl
mov
bound
enter
imul
cmc
out
fldl2e
stos
je
and
mov
push
syscall
cmpsl
xchg
insl
jmp
cmc
sub
loope
cld
scas
jb
jmp
jmp
sbb
sti
mov
adc
pop
leave
xlat
sub
inc
mov
orb
imul
mov
add
xor
fs
mov
stc
sbb
mov
ret
mov
icebp
mov
inc
xchg
push
cmp
mov
mov
aaa
or
or
rolb
xchg
loopne
lock
add
outsl
ficomps
sub
movsb
dec
sbb
inc
loope
sub
lret
cmp
inc
mov
loope
xlat
aaa
out
jl
lods
stos
aaa
nop
sub
test
mov
rclb
je
imul
dec
mov
push
pop
les
cmp
mov
dec
inc
dec
lret
rol
cmpsl
mov
xor
cmpsb
push
xchg
inc
or
or
gs
mov
jns
adc
mov
mov
inc
pop
call
mov
mov
xor
mov
sarl
dec
xlat
pop
repnz
std
jns
inc
insb
ds
sub
lods
test
in
adc
jmp
push
dec
out
pusha
adc
xchg
out
mov
ret
mov
xor
xchg
imul
cmc
sti
stos
imul
cmpsb
test
incb
bound
pop
mov
test
jbe
mov
test
loopne
cmpsb
cld
insl
imul
pop
pop
xor
mov
adc
xchg
and
loop
notb
pusha
stc
or
negb
jns
enter
push
dec
mov
mov
into
std
add
jnp
mov
test
or
mov
jno
inc
bound
inc
inc
hlt
hlt
lcall
mov
inc
testb
lret
insl
test
add
mov
std
mov
push
mov
leave
jno
inc
inc
sahf
movsb
cmpsb
fsqrt
test
mov
mov
mov
lods
clc
mov
jle
pop
xchg
pop
xchg
mov
outsb
pop
xchg
add
das
lods
mov
mov
incl
mov
lods
inc
dec
cli
pop
outsl
rolb
xor
push
pusha
mov
xchg
test
add
decl
nop
decl
or
pushf
xchg
and
push
in
push
mov
inc
xchg
das
jle
mov
out
outsb
sbb
or
nop
and
adcb
icebp
stc
xchg
xchg
cmp
push
sub
rcr
sub
lret
js
or
or
adc
mov
sbb
test
mov
mov
xchg
jb
iret
jl
call
test
int3
and
mov
pop
or
fwait
lods
stos
mov
in
adc
or
mov
adc
mov
jmp
ds
and
stos
enter
push
dec
test
pop
cltd
and
bound
adc
jle
pop
adc
mov
mov
lea
jb
cmpsb
push
into
fisubl
stos
stos
adc
mov
xchg
repnz
int3
cli
cmpsb
or
pop
rorb
stos
add
pop
lods
push
ljmp
push
adc
sahf
into
in
pop
or
sar
mov
je
adc
xchg
leave
cmc
jb
add
dec
or
xchg
push
repnz
sbb
xchg
adc
inc
inc
mov
push
loopne
ja
jne
outsb
movsb
push
sub
jmp
mov
xchg
xor
nop
mov
dec
icebp
mov
mov
inc
es
sbbl
xchg
fisubl
ret
or
jb
lret
jne
movsl
lds
scas
pop
imul
outsl
test
push
xor
clc
test
aad
pop
mov
jns
adc
jns
xlat
arpl
push
or
mov
xor
xor
pop
inc
add
sbb
mov
lcall
push
test
sub
cmpsb
xor
jle
adc
cmpsl
mov
mov
pop
shrl
mov
movsb
xorb
push
repz
push
aad
push
adc
mov
ret
add
mov
mov
add
loope
fildll
sub
cli
xchg
adc
and
mov
mov
lea
dec
mov
cli
xchg
iret
mov
or
cld
pusha
mov
sbb
xchg
repnz
or
cli
sbb
mov
and
movsb
or
mov
mov
sbb
mov
imul
inc
bound
adc
mov
data16
int3
xchg
sbb
push
mov
jl
and
repz
xchg
int
leave
mov
and
addl
add
adc
jmp
adc
leave
cwtl
loope
xlat
sbb
push
or
mov
icebp
and
leave
jp
lret
sbb
mov
sub
pop
mov
frstor
or
xchg
or
jno
das
les
dec
mov
jnp
pop
push
mov
test
xor
loop
movsb
mov
int
sbb
or
xchg
or
push
push
xor
nop
pop
and
xchg
cwtl
sub
stos
xchg
mov
std
adc
cmc
bound
mov
pop
mov
add
lcall
shl
imul
mov
jmp
cmpl
imul
aad
jmp
inc
call
xchg
imul
xchg
mov
aas
and
mov
sbb
ret
nop
adcl
xchg
stos
mov
and
pop
in
jl
mov
mov
scas
cs
movsl
mov
mov
fists
push
mov
ret
jb
dec
mov
and
imul
aas
fwait
nop
insb
mov
test
imul
jmp
mov
and
sbb
push
pushf
ds
mov
cmpsl
cmpsl
roll
out
scas
or
and
rcll
clc
movsb
iret
call
cmc
out
dec
inc
mov
or
xchg
movsb
sub
insb
xor
xchg
mov
xlat
loopne
imul
lahf
push
scas
mov
push
jg
fcom
jb
cmpl
test
pop
je
enter
adc
decb
jns
mov
bound
lahf
push
js
dec
sub
inc
xchg
mov
add
xor
dec
hlt
and
test
pop
les
out
dec
mov
dec
nop
cwtl
push
sbb
pop
dec
std
xlat
cmpl
scas
imul
inc
xor
push
xchg
mov
nop
push
or
loop
fistps
lret
inc
xchg
or
add
hlt
mov
inc
fdivs
loope
pop
mov
mov
push
jo
shrl
xchg
and
mov
dec
and
dec
stos
leave
push
incl
push
fldl2t
lret
sti
xchg
fidivrl
ror
pop
nop
add
mov
cmpl
and
jle
cmc
lods
sbb
lock
and
test
es
mov
std
fcmovu
push
out
fmull
add
addr16
push
cmpsl
push
pop
test
mov
push
sbb
dec
ret
cmp
test
movsl
shrb
addl
pop
ss
jno
test
stos
jl,pn
jno
mov
push
popf
lods
addl
sti
lahf
adc
cmp
mov
push
jo
xor
cs
mov
mov
mov
rorl
icebp
push
jne
jp
aas
repz
aas
dec
lcall
movsl
or
mov
js
jno
mov
out
xchg
cmpsl
lret
fidivrl
daa
stc
leave
nop
pop
pop
js
cltd
jbe
loop
xchg
sahf
mov
mov
lahf
faddp
mov
rol
arpl
in
stos
push
and
jle
or
jno
pop
popf
xchg
sarl
ss
aam
int3
xor
mov
jbe
sub
jl
mov
pop
mov
push
orl
mov
mov
stos
mov
pop
loop
dec
movsl
cmpsl
shll
add
or
and
pop
mov
sbb
rcll
aaa
ret
cs
mov
pop
mov
sarl
popf
movl
rcl
in
jns
leave
and
sahf
and
addl
jb
imul
fldl
mov
sarl
fisubs
sbb
xchg
cli
sbb
sbb
inc
std
xchg
addl
ss
mov
sahf
jb
fs
mov
test
adc
xchg
mov
popf
rorl
sbbb
fwait
aad
fiaddl
or
mov
cmc
fs
mov
cmpsb
or
xor
sbb
mov
mov
inc
pop
mov
inc
sarb
inc
jle
xchg
lds
mov
xchg
or
ljmp
sub
mov
adc
das
out
mov
jg
jl
rcll
testb
sub
mov
iret
dec
inc
stos
sub
and
gs
add
adc
aad
inc
adc
add
mov
or
push
adc
movsb
test
mov
xchg
enter
fisubrl
jp
test
push
int
add
out
fadds
mov
cwtl
inc
cmp
push
cmpsl
fcompl
add
inc
sub
sub
mov
shlb
jns
fistpl
imul
daa
jbe
lods
cld
lea
dec
dec
cld
push
jmp
cmp
dec
mov
daa
pop
je
daa
or
std
sbb
repz
xchg
fdivp
fwait
lods
mov
mov
xchg
jne
mov
std
std
int
or
or
ret
mov
jno
inc
outsl
out
push
jp
lret
add
sahf
es
dec
pushl
xchg
push
test
jle
adc
aam
cmpsb
mov
lds
sub
mov
data16
stos
xchg
cmp
adc
mov
call
enter
lret
mov
cli
mov
dec
je
cmc
and
fdivr
imul
and
add
or
xorl
push
mov
add
filds
lcall
add
imul
or
aad
je
rcl
shrl
mov
movsb
scas
push
pop
scas
test
popf
sbb
push
sbb
into
adc
jmp
cmp
adc
loope
sub
or
add
jl
inc
rol
loop
fwait
int3
lds
or
hlt
shlb
imulb
mov
mov
mov
je
lea
push
xchg
lret
sub
jb
xlat
fcompp
outsb
mov
jbe
in
sbb
adc
and
jno
xor
cmp
sub
stos
daa
dec
inc
inc
jno
ljmp
and
ror
into
inc
sbb
sub
jg
or
sbb
in
dec
sub
in
push
rol
mov
out
or
and
js
or
lahf
test
cltd
aaa
gs
lds
test
in
jo
fisubs
or
fidivl
or
jne
ret
scas
mov
mov
orl
cwtl
add
mov
xchg
cmp
out
decl
out
xor
xchg
les
mov
jbe
mov
loop
push
cmpsb
psubd
mov
fidivrs
adc
cmp
jbe
cmpsl
xor
andb
test
xor
les
shrb
ljmp
pop
mov
mov
stos
cmp
enter
into
jne
mov
out
jl
fs
push
dec
gs
adc
lret
ljmp
inc
lods
or
hlt
mov
insl
test
orl
mov
mov
arpl
cmp
ret
mov
into
cltd
imul
adc
shrl
imul
pop
lret
rolb
cld
in
mov
add
lret
add
sbb
ja
or
add
pop
nop
xor
dec
add
stos
cmp
fstpl
cmpsl
imul
fs
arpl
rolb
jnp
add
fstl
cmp
cwtl
loope
test
test
xor
sub
outsl
adc
cmp
cmpsl
or
cmpsb
cltd
mov
xor
xchg
stos
or
inc
cli
jecxz
mov
lock
shr
lcall
and
or
clc
int3
fistps
iret
mov
jo
mov
mov
xchg
sub
sahf
mov
int3
mov
fisttps
adc
std
sbb
mov
call
pop
idivb
rclb
insb
jnp
sbb
push
stos
jno
jecxz
rorb
mov
das
mov
insl
aam
inc
add
add
xchg
and
jb
notb
ret
sbb
xchg
lds
mov
mov
pushf
push
cwtl
add
pop
mov
fcomps
outsl
jg
add
cmc
les
movsb
loop
jne
mov
pushf
dec
lock
adc
xchg
jp
mov
fisttpll
rcll
inc
xor
mov
jo
pop
push
inc
mov
shlb
ljmp
ret
mov
std
imull
push
xchg
mov
add
inc
addl
xchg
stos
inc
mov
ja
xor
dec
mov
and
fsubr
sbb
pop
mov
arpl
shlb
push
jmp
pop
int
jae
fldt
iret
arpl
mov
sbb
ljmp
insb
out
sbb
mov
jecxz
xchg
cmc
fs
jnp
insb
mov
cmpsb
call
inc
add
repnz
inc
pusha
jle
mov
inc
push
call
push
int3
cmp
rclb
insb
and
jle
push
lahf
cmp
sbb
mov
dec
insb
into
ljmp
push
fsts
sub
pushf
shr
xor
xchg
mov
add
push
jo
or
xchg
hlt
movsb
imulb
pop
enter
mov
inc
jnp
xor
pop
pop
testb
adc
add
test
rorl
in
cmpsb
mov
and
mov
xchg
adc
cmp
test
sub
cmp
xchg
mov
test
adc
das
push
sbb
adc
leave
in
cmp
daa
jg
rcr
cltd
jbe
bound
test
lret
je
in
push
pop
xchg
rclb
dec
cld
xchg
pop
js
pop
mov
add
mov
xor
mov
aam
inc
scas
pop
jmp
addr16
mov
and
and
xor
xchg
aam
pushf
and
add
in
mov
loope
fsubp
mov
adc
nop
imul
fs
enter
pop
cmp
icebp
inc
lods
rolb
jne
cwtl
xchg
ljmp
and
xchg
xchg
les
movsl
mov
cmc
pushf
sarl
cmpsl
sub
and
pop
fildll
and
jl
paddw
out
mov
out
notb
xor
jbe
mov
enter
out
jecxz
xchg
mov
inc
sbb
jl
mov
inc
negb
fstpt
inc
popa
out
pop
push
ror
movsb
shrb
hlt
lods
call
addr16
nop
xor
dec
pop
divb
aad
push
mov
push
pusha
ret
shrb
sub
daa
mov
rcrb
rcr
dec
das
lock
mov
leave
and
icebp
lret
cli
sub
incl
jle
add
mov
xor
mov
pop
inc
mov
insl
xchg
in
cmp
push
adc
push
repnz
fimuls
mov
cmp
enter
rcl
sarl
imul
xchg
and
aaa
cwtl
je
je
ljmp
sbb
imulb
cmpsb
mov
movsl
mov
push
pop
fs
iret
xchg
leave
cmpsl
nop
mov
inc
fnclex
daa
xlat
mov
inc
lods
clc
test
mov
jle
cmpsl
jb,pt
cmp
movsb
js
in
mov
xor
mov
ficompl
movsl
stos
loope
int3
das
flds
pop
sbb
sub
lea
ret
mov
xchg
loope
call
imul
out
inc
lods
add
shrb
scas
pop
nop
jnp
int
test
fdivrl
mov
xchg
pop
nop
cltd
add
sbb
jle
mov
cmpsb
add
testl
loopne
jbe
hlt
mov
xchg
add
or
mov
mov
xchg
inc
mov
xchg
imul
ja
sbbl
rorb
cmpsl
inc
cld
and
mov
cld
leave
fsts
mov
pop
test
xor
add
jl
gs
push
xor
enter
dec
cmp
xchg
mov
mov
rorl
imul
aad
xchg
jle
inc
xor
stc
add
test
sarl
rcl
fisubrl
inc
stc
pop
orl
addl
and
into
mov
sbb
bound
xor
andb
cmpsl
or
mov
cmp
fdivrp
test
js
mov
xchg
out
mov
sub
sbb
jae
mov
mov
mov
lock
movsl
nop
out
xor
lea
jecxz
mov
frstor
aaa
adc
jecxz
jo
mov
cwtl
pop
incl
inc
jmp
insl
jne
mov
mov
lods
mov
shll
lahf
pop
mov
into
cwtl
adcb
xchg
mov
or
fldl
ja
enter
enter
sbb
inc
sub
add
sub
mov
jg
push
stos
scas
stos
cmp
cmp
into
jl
in
push
daa
mov
imul
test
loopne
int
cmc
int
add
mov
ljmp
mov
in
lds
lods
or
xchg
sbb
in
rcrb
or
sub
lret
shl
loopne
jns
hlt
lahf
rcrb
into
cwtl
add
pop
fcomp
pop
add
ret
mov
movsl
add
shlb
jns
in
xor
add
lret
test
push
mov
add
andl
xchg
xchg
cmc
lret
test
mov
mov
fstps
test
rolb
push
xchg
pop
stos
mov
mov
mov
insl
cmpsl
cmp
mov
rcll
loopne
stc
xchg
push
ljmp
ret
mov
adc
jae
and
mov
xor
xorb
mov
mov
dec
iret
mov
mov
lock
add
loopne
mov
or
outsb
jl
ret
cwtl
or
leave
adc
cmpsl
jo
cmc
leave
ret
test
imul
dec
jbe
add
add
shll
mov
imul
push
cmpsl
pop
sub
cmp
mov
inc
cmc
inc
xchg
xor
pushf
enter
jno
inc
cwtl
add
orl
cmp
aas
dec
cmp
into
enter
add
popa
add
add
shrb
mul
mov
and
add
mov
jg
push
xchg
xchg
lea
mov
push
xchg
js
sub
loopne
xor
scas
out
cld
or
push
adc
mov
push
or
adc
cmpsl
and
jns
fdivs
pop
push
test
cmp
xor
rcl
mov
loopne
jbe
pushf
or
cmpl
mov
test
and
je
lcall
ret
pop
jmp
lock
push
test
loope
mov
shrb
int3
mov
outsl
test
shlb
adc
and
adc
cmp
lock
inc
jne
push
insb
rcl
add
nop
cmpsb
out
dec
leave
jns
lods
scas
jecxz
insb
aam
lret
not
in
push
cmp
sub
cld
jg
mov
hlt
pushf
fisubrl
fsts
mov
daa
sub
cmp
xor
f2xm1
mov
aas
adc
lods
xor
and
mov
lods
jp
jl
adc
call
dec
nop
fs
mov
data16
lods
int
jns
xchg
aas
sarb
and
adc
imul
sub
jle
push
fst
xor
enter
mov
out
out
sbb
jb
aas
jno
ds
xchg
inc
lods
push
xchg
xchg
xor
shlb
jle
fsubr
jmpw
int3
test
test
aam
push
ja
nop
sub
push
out
iret
jo
inc
out
movl
cltd
mov
add
mov
lahf
scas
inc
fadds
push
sub
push
jmp
adc
ljmp
jle
lret
jae
push
hlt
mov
lret
rcll
lock
lods
xchg
jge
lcall
sub
push
sarb
mov
out
mov
cmpl
add
int3
ljmp
arpl
mov
test
xchg
test
shl
xchg
cmpsb
mov
ljmp
pop
fsubs
mov
insb
jns
pop
adc
frstor
jmp
lds
cli
sbb
adc
lea
rcll
lret
fyl2x
mov
orl
pop
jbe
and
mov
int
enter
jge
das
dec
subl
pop
fwait
jbe
add
test
xchg
leave
cmpsb
lock
imul
push
add
xchg
xchg
inc
mov
add
fbld
mov
ret
shl
sarl
int3
leave
dec
jmp
mov
and
cmc
movsb
jmp
push
add
push
shll
push
pop
hlt
in
shrb
in
push
dec
cmp
subl
jno
test
hlt
enter
out
sub
daa
jb
sti
or
mov
xchg
hlt
stos
cmc
add
cmc
mov
and
iret
jmp
push
sarb
sub
mov
lods
jl
mov
adc
mov
lods
lret
mov
xor
aaa
add
add
xchg
mov
es
add
shrb
xchg
xor
lods
in
mov
jbe
lret
xlat
inc
cld
fst
rcll
insb
xlat
je
ficompl
xchg
pusha
push
mov
pop
add
imul
push
leave
push
ljmp
mov
jp
loopne
jge
push
fnstcw
push
lods
mov
inc
mov
arpl
xchg
or
pop
jle
adc
js
jl
popa
mov
popl
jbe
pop
adc
int3
adc
call
test
pop
add
sahf
lahf
mov
rcrl
adc
mov
stos
cmp
arpl
out
ret
ret
and
jp
inc
bound
add
rcr
pop
cmpsl
lock
xor
adc
into
orb
ret
out
movsl
add
and
inc
nop
js
enter
push
pusha
ret
inc
pop
inc
cli
scas
into
mov
add
add
add
fnstenv
cmp
sahf
mov
dec
shll
pop
pushf
clc
mov
idivl
sbb
pushf
cmc
cmpsb
push
mov
push
mov
mov
cmp
xchg
xor
xchg
cltd
or
pushf
mov
popa
dec
mov
dec
mov
pop
icebp
dec
jle
jns
imul
fcmovnbe
movsb
shll
notl
aad
aas
icebp
movsl
push
cmp
jmp
xorb
jnp
mov
lret
dec
std
scas
bound
scas
inc
xchg
test
nop
pop
test
test
test
dec
inc
mov
jmp
fistps
sub
mov
add
rcl
mov
inc
js
add
mov
std
add
sbb
or
insb
mov
xchg
rcl
int
lods
dec
lods
dec
push
or
movsl
into
mov
aam
fildl
cmp
dec
repnz
add
mov
mov
mov
pushw
push
push
loop
xchg
sbb
lret
shlb
or
aaa
pop
add
jle
shrl
sbb
push
lahf
mov
lock
push
dec
clc
inc
dec
xchg
pop
sbb
cmp
rol
adc
mov
sbb
cltd
daa
cmpsl
xchg
sub
cld
push
mov
sub
scas
rcrb
xor
push
inc
int
inc
rclb
inc
lea
xchg
dec
jp
pop
mov
scas
ret
pushf
loope
orl
sbb
sbb
scas
fs
mov
jbe
add
add
jb
fldl
shrl
fcmovne
imul
scas
cwtl
in
aam
cmpsl
xor
adc
inc
xor
push
xchg
test
out
mov
and
or
cmp
adc
cwtl
and
mov
nop
pop
test
xchg
sbb
cwtl
repnz
cmp
pushf
mov
xor
std
std
enter
lock
mov
dec
mov
jb
xchg
fidivrs
xchg
cmpsb
mov
push
add
mov
mov
hlt
xchg
shrb
push
lret
or
dec
fdivp
mov
int3
shlb
add
mov
pop
sarb
cmp
scas
push
adc
dec
dec
xor
rclb
mov
lret
push
cld
inc
sbb
mov
jo
xchg
shlb
add
test
sbbb
test
dec
aam
mov
rcrl
adc
icebp
ds
mov
dec
ficomps
adc
lahf
push
cs
mov
sbb
test
dec
jp
enter
dec
jae
cmp
adc
xchg
mov
lret
ror
das
pop
repnz
or
jmp
enter
jecxz
cmc
mov
push
dec
add
out
push
inc
and
hlt
sahf
nop
add
push
cmp
lods
idiv
or
adc
inc
hlt
xchg
rcrb
imul
fsubrs
cwtl
test
arpl
inc
or
in
jl
xlat
scas
nop
in
adc
inc
fdivs
dec
inc
mov
xchg
fistpl
mov
xchg
fsts
pusha
out
pop
inc
fsubs
rorl
inc
lds
and
stos
rcrl
push
mov
shl
push
xchg
xchg
and
addr16
mov
imul
mov
std
pop
and
lret
mov
pop
mov
push
stos
inc
dec
aaa
popf
movsl
mov
jno
push
sbb
sbb
inc
mov
push
fcmovnb
mov
mov
adc
adc
xchg
cltd
movsl
icebp
cmp
and
ret
mov
arpl
jecxz
ret
rolb
mov
xchg
xchg
dec
movsl
sti
pop
divb
in
ss
int3
ljmp
adc
mov
xchg
cmpsb
xor
mov
add
push
lea
out
add
lea
enter
fistpll
mov
call
clc
push
cmp
in
fsubrs
mov
xor
movsl
cmp
loope
inc
out
sbb
sti
jge
add
xorb
cmpl
cwtl
pop
cmpb
test
jbe
lret
mov
repnz
rorb
imul
cmp
dec
jmp
inc
mov
xchg
xchg
rcrl
xchg
adc
xchg
push
xchg
mov
xchg
jb
repz
adc
mov
xor
xchg
add
dec
mov
cmc
rcrb
sar
cmp
adc
xchg
imul
nop
fnstsw
lds
jo
mov
sar
cmp
adc
pop
or
xchg
jo
ret
push
mov
mov
mov
jne
cli
sbb
cmp
rorb
int
mov
adc
mov
xchg
sub
scas
fstpt
push
sub
cmc
lods
mov
cmpsl
mov
test
nop
mov
mov
xlat
inc
scas
mov
movsl
mov
inc
in
imul
mov
xchg
daa
cmp
mov
xchg
sub
inc
aam
arpl
out
mov
imul
or
mov
push
ret
add
mov
cmpsb
xor
call
xchg
ret
test
out
mulb
in
xchg
or
nop
mov
sbb
mov
xchg
fildl
imul
or
or
test
push
scas
enter
popl
inc
aaa
push
movsl
jb
mov
mov
imul
fsubr
daa
out
mov
jnp
ja
scas
push
mov
add
addl
mov
or
dec
adc
cmp
dec
sub
sti
sti
fdivrs
movsb
cmp
scas
mov
or
mov
call
andb
jns
or
adcl
fbld
mov
cmp
add
roll
in
pop
adc
imul
cmpsl
adc
pop
rorb
inc
pop
xchg
adc
rep
aam
pop
imul
mov
cmpsl
or
aaa
nop
imul
push
push
sub
mov
push
dec
rcl
mov
push
xchg
mov
stos
test
push
in
lods
movsb
imul
mov
test
xchg
in
jno
je
pushf
mov
adc
imul
dec
pushf
cmp
jo
int3
pushl
sub
adc
sub
std
xlat
dec
mov
or
or
lods
adc
mov
pop
cmp
out
data16
les
movsb
imul
fxch
lahf
outsl
dec
stc
mov
lret
lret
sbb
in
mov
shlb
test
out
sarl
out
repz
or
xchg
icebp
and
cwtl
ja
push
xchg
movsl
int3
or
icebp
imul
into
mov
dec
ret
shll
mov
mov
jge
adc
lahf
aad
std
and
pop
cmp
push
sbb
les
sbb
add
mov
mov
lret
nop
fmuls
notb
les
das
or
xchg
dec
movsb
pop
enter
dec
shr
imul
mov
cmp
lods
in
xchg
cmpsb
lret
test
enter
push
add
mov
adcl
ret
xlat
out
jge
lods
jge
push
inc
cwtl
hlt
sub
mov
pusha
mov
xchg
or
xchg
shll
cmpsl
std
pop
push
addb
hlt
mov
shll
stos
adc
out
xor
mov
cmp
es
hlt
lea
adc
push
jbe
dec
dec
sbb
xchg
inc
outsb
in
sub
jp
jne
jmp
int
jne
push
xlat
or
daa
mov
xlat
lret
scas
add
outsb
mov
add
aas
movsl
xchg
sbb
ja
js
cs
adc
rcrl
jecxz
sbb
call
nop
xor
lods
negb
icebp
mov
push
adc
nop
orb
cmpsl
jo
imul
jecxz
inc
mov
addb
ljmp
cmp
cmp
add
cmp
push
test
sahf
mov
in
jno
adc
xor
sub
enter
adcb
jno
mov
sbb
cli
jbe
nop
fcoms
dec
push
loope
into
pushf
push
and
rolb
mov
mov
mov
dec
nop
scas
scas
push
xchg
sbb
jns
pop
push
or
mov
hlt
xchg
imul
and
push
mov
push
inc
ljmp
frstor
adc
mov
sahf
repnz
sub
mov
xlat
inc
mov
lock
xorb
addr16
mov
call
sub
call
and
ret
sbb
xchg
cwtl
pop
inc
test
imul
fistpl
imul
sub
lods
scas
dec
cltd
test
xlat
xchg
fcmovb
fadd
fmuls
xchg
lds
mov
pop
or
aad
pop
and
addb
jge
jbe
mov
and
add
loopne
fnstcw
daa
or
mov
mov
nop
scas
decl
xchg
mov
mov
rolb
dec
pop
add
sahf
pop
inc
jb
jae
data16
faddp
sbb
sub
mov
xchg
jo
mov
inc
data16
in
outsl
test
xchg
sahf
inc
mov
fisubs
lock
or
test
xlat
cli
andb
sahf
mov
arpl
xchg
mov
push
adc
cmpsl
sahf
push
fsubr
inc
cmp
lcall
mov
sub
mov
inc
pop
test
mov
sub
jle
ret
jmp
xchg
add
fcomi
mov
nop
mov
or
xchg
xlat
pop
or
daa
jb
sbb
mov
sub
in
hlt
ret
xchg
stos
popl
push
outsb
xchg
cltd
scas
div
mov
into
cmc
std
and
sub
sarb
sarl
push
add
and
into
cmp
pop
mov
xchg
xchg
imul
mov
mov
idivb
adc
mov
and
imul
mov
jecxz
testb
cmp
or
push
lods
fnsave
out
into
je
shrl
imul
test
add
pcmpeqb
bound
push
inc
inc
push
mov
cmc
call
in
out
cli
test
mov
xor
push
loope
and
orl
push
jbe
pop
cmp
or
std
movsl
and
sti
fistl
xor
mov
out
insb
stos
popf
lret
push
loopne
pop
pmaddwd
js
dec
leave
rcll
inc
adc
lods
xchg
imul
mov
aad
push
ja
stos
lcall
sbb
add
jl
ret
shl
movsl
or
mov
rcrb
add
stos
pop
xchg
hlt
stc
xchg
stc
push
or
orb
add
dec
sub
js
aaa
push
push
sub
nop
mov
mov
test
inc
enter
adc
push
pop
jne
test
or
lcall
scas
movb
jle
cwtl
mov
pusha
ljmp
dec
xchg
adc
sti
xchg
aaa
das
in
cmp
dec
mov
xchg
imul
mov
test
pop
mov
faddp
mov
hlt
loopne
mov
ret
mov
jmp
sbb
jnp
xor
bound
and
stos
mov
sub
dec
iret
jl
inc
fs
adc
xchg
popf
inc
xchg
xchg
movsb
ret
push
pushf
mov
test
out
daa
les
xlat
scas
adc
icebp
pop
fdivl
test
js
popa
add
addb
ljmp
or
inc
xchg
cmp
xchg
sbb
popa
test
cmc
pop
test
fstl
scas
jecxz
rclb
jae
mov
rcll
mov
scas
lea
notb
mov
jnp
out
xchg
and
pop
shll
mov
lds
ljmp
push
and
add
adc
adc
je
xchg
fiaddl
rcrb
mov
bound
push
jne
iret
cmpsl
jp
and
sub
fisttps
std
insb
fimull
pop
lahf
xchg
push
pop
cmpsb
cmpsl
push
leave
xchg
add
imul
dec
sbb
mov
sub
adc
sahf
and
jl
sarb
hlt
cmp
mov
push
sbb
jg
mov
loopne
movsl
and
lret
mov
mov
sbb
push
xchg
jbe
jg
pop
mov
xchg
sti
imul
xchg
cmpsl
fs
adc
ss
adc
push
scas
test
xchg
popl
cltd
ljmp
hlt
xchg
cmp
test
xchg
mov
mov
and
mulb
adc
je
mov
inc
rclb
mov
xchg
dec
inc
push
mov
jg
xor
push
ds
or
imul
mov
sbb
and
push
pushf
jns
std
pusha
addl
pop
jo
sbb
jae
pop
addr16
inc
xchg
lock
push
jns
js
pop
pushf
lds
xchg
sahf
jo
inc
push
jle
stos
push
mov
test
arpl
jns
or
pushw
cld
dec
mov
insb
mov
mov
xchg
je
mov
mov
xchg
jecxz
test
shrl
mov
dec
stos
sbb
stc
pop
hlt
mov
int3
inc
fsts
mov
test
imul
sarb
dec
push
mov
cmc
cmp
xlat
cmp
mov
hlt
dec
xlat
lahf
js
lret
dec
pmulhuw
outsb
mov
add
dec
pushf
xchg
add
mov
sub
cltd
hlt
sahf
xchg
xorl
cmc
cltd
mov
addl
add
mov
push
adc
lea
ret
hlt
xchg
sub
cmc
in
mov
jb
fcoms
adc
rorb
test
lcall
ret
fistps
fwait
push
leave
jl
adc
mov
mov
inc
scas
testb
mov
testl
loope
jo
lret
aad
nop
jp
call
fildl
fcoml
xor
xchg
sub
lods
mov
out
add
pusha
mulb
adc
mov
aad
rcrb
inc
sbb
stos
cmpsl
add
xchg
mov
push
into
cmp
jg
dec
mov
xchg
js
inc
mov
mov
adcb
inc
jle
mov
shr
lods
cli
inc
loopne
sbb
jbe
or
repnz
rcl
mull
cwtl
xchg
sub
dec
xchg
lock
jmp
les
mov
inc
sarw
pop
xorps
ret
inc
in
jne
xchg
cmc
xchg
cmpsb
fimuls
and
mov
dec
or
popf
sub
lahf
xchg
fwait
outsl
cwtl
dec
or
inc
daa
aad
xchg
pop
icebp
mov
push
lcall
mov
rcll
sbb
mov
sub
push
lret
cli
xchg
xchg
ds
call
jne
pop
movsl
sbb
lcall
call
aas
push
push
xchg
clc
aas
loop
adc
inc
je
or
cmpsl
mov
loope
fbstp
popf
mov
sbb
jg
pushfw
xchg
add
adc
xlat
xor
mov
mov
rcrb
movsl
fs
mov
adc
iret
loopne
mov
jle
scas
mov
lods
in
aas
nop
inc
push
push
cmp
mov
ljmp
add
fcoms
inc
xchg
mov
nop
lret
add
pop
mov
xorl
fwait
add
mov
or
mov
add
or
or
mov
ja
sahf
sub
cmp
mov
fnstenv
dec
int
jle
jmp
std
sub
mov
call
xchg
mov
push
test
lods
lea
push
xor
mov
cmp
or
mov
mov
mov
les
xor
loope
mov
hlt
xchg
xchg
call
add
pushf
cltd
cmp
pop
mov
hlt
rorb
mov
int3
cltd
orb
in
mov
cmp
or
rcl
push
clc
inc
push
test
mov
adc
nop
jb
xchg
bswap
popf
mov
repnz
std
add
int3
cltd
add
cltd
xchg
pop
iret
and
push
push
mov
adc
ljmp
xchg
test
in
arpl
enter
mov
into
mov
push
cmp
xor
sub
sbbl
push
or
mov
fistpl
xchg
pop
call
rcrb
jmp
cmpsb
mov
mov
add
lret
xchg
cmpsl
jmp
jbe
or
xchg
stos
leave
mov
fiadds
push
stc
lods
shll
icebp
jbe
xchg
push
imul
lcall
pop
popa
and
cmpsb
jnp
inc
fsubr
inc
pop
hlt
and
push
xor
mov
pop
into
test
movsl
into
mov
daa
cmpsb
hlt
xchg
decb
mov
cmp
sub
mov
rorl
mov
dec
sbb
fs
imul
add
mov
es
and
insb
sub
sub
xchg
popf
aad
pop
inc
enter
hlt
and
cmc
cmpsl
ret
sar
pop
jg
mov
aas
hlt
ret
scas
movsb
pop
fildl
mov
ljmp
mov
mov
cmpsb
and
jge
jbe
sar
rcrb
sahf
xor
nop
je
and
pushf
imul
xor
fwait
mov
lcall
cwtl
push
fsubr
add
nop
and
in
pop
xchg
and
ret
push
bound
mov
nop
mov
xor
enter
cld
out
mov
mov
xor
xchg
xchg
cli
xor
dec
adc
adc
popw
and
mov
cmp
loope
push
push
add
insb
cmp
add
pop
into
jno
sti
jne
mov
cmpsb
fidivrs
shrb
pop
xchg
aas
stos
cmp
mov
loopne
push
int3
fsubrp
lret
scas
xlat
cmp
add
adc
cmp
nop
or
adc
inc
adc
mov
add
ds
je
or
dec
push
pushf
sub
jl
fs
rclb
cli
or
out
xchg
cwtl
cmp
dec
call
sarb
or
xchg
daa
out
xor
in
pop
popa
out
jns
loope
adc
or
xor
jecxz
ljmp
aam
and
push
add
sbb
cmp
mov
or
js
lods
js
mov
lahf
mov
inc
repz
pop
lds
adc
pop
mov
jg
shl
or
sbb
loopne
inc
jnp
sub
data16
xorb
adc
movsl
insb
pop
movsl
wrmsr
push
cli
repz
rorl
add
sbb
inc
pop
jae
sbb
shr
fistpll
out
fmuls
hlt
faddl
outsb
mov
xlat
cs
fcmovnb
mov
call
mov
pop
push
pop
mov
call
in
movsl
xchg
xchg
rep
sub
mov
or
ficoms
ljmp
cwtl
imul
daa
inc
inc
lahf
cmp
sahf
inc
or
inc
aas
pop
sub
adc
sbb
cmc
scas
enter
aad
rclb
rorb
lods
std
add
popa
mov
xorl
jg
sbbl
inc
fucomp
lcall
cmc
adc
lds
adc
jl
enter
xchg
orl
push
adc
and
push
and
mov
xchg
mov
scas
push
sbb
mov
and
ret
add
or
cld
sub
lds
scas
lret
sub
or
or
test
mov
fistpll
adc
xchg
fnstenv
rorb
dec
cwtl
xchg
xchg
and
js
jle
loope
mov
sub
adc
push
mov
push
pop
cmp
pusha
fs
movsb
div
outsl
pushf
enter
push
push
mov
pop
fs
jp
out
cwtl
in
cmpsl
jg
call
imul
dec
or
mov
int3
inc
mov
test
shrl
cwtl
out
xchg
test
mov
xchg
sbb
movsb
cwtl
mov
cwtl
mov
mov
jmp
mov
inc
lds
jno
dec
pop
sub
stos
jl
shrb
rol
push
xchg
xchg
or
outsl
dec
js
or
test
js
or
fstp
lret
mov
or
shrb
mov
xchg
leave
xchg
xchg
jl
dec
enter
ret
mov
mov
lret
xor
imul
ljmp
fstpt
hlt
dec
inc
pop
outsl
js
inc
or
add
shrl
pop
test
sub
dec
ror
add
mov
test
mov
fiadds
ficoml
leave
lcall
ret
jne
aam
adc
scas
lock
xchg
arpl
mov
repnz
rolb
lret
add
sub
pop
imul
dec
inc
test
jg
cmp
hlt
xor
ret
adc
mov
xor
mov
push
fldt
inc
mov
clc
pusha
leave
fsts
mov
jns
sub
mov
test
sbb
mov
inc
cmpsb
cmc
inc
rorb
jge
test
cmp
xchg
fcoms
aad
adc
mov
out
xor
and
sbb
push
xor
cmpsl
adc
adc
ja
roll
orl
sbb
loopne
cltd
filds
cwtl
into
xorl
or
xchg
mov
and
add
xchg
fiadds
out
xchg
push
cmp
lcall
jno
lret
insl
fimull
or
pushf
mov
sub
arpl
mov
mov
cmp
adc
aam
lea
pusha
mov
and
aam
and
les
lret
push
ret
or
aas
popf
stos
adc
add
mov
movsl
jnp
pop
aam
out
rcr
movb
stos
in
add
mov
cmpsb
stc
lods
lret
sub
mov
into
mov
ljmp
int3
ljmp
mov
mov
or
mov
jnp
pmuludq
xchg
pop
jle
push
call
loopne
mov
int
add
call
push
cmp
subl
mull
pop
ret
jg
iret
mov
loop
int
mov
push
dec
test
pushf
and
jg
cltd
or
xchg
push
lea
in
scas
mov
mov
add
stos
lods
loopne
insb
push
push
inc
bound
xor
pop
popf
cmpsl
shr
icebp
adc
rcr
cmp
mov
lret
orl
lcall
lea
shl
iret
test
push
xor
xchg
fdivl
aad
in
pop
jl
and
imul
and
jns
adc
xchg
add
push
bound
xchg
clc
add
vpshad
imul
or
and
mov
addr16
nop
lock
or
jl
sbb
push
adc
out
loopne
jo
insl
mov
cwtl
cmove
cmp
inc
repnz
in
not
inc
xor
leave
nop
dec
add
fcoms
nop
push
dec
sti
js
sub
mov
test
adcb
cli
stos
mov
dec
scas
xor
jne
fidivs
in
mov
adc
stc
and
ret
loop
mov
ret
cltd
cld
popf
push
shll
repnz
xchg
add
push
push
or
mov
add
xchg
loopne
not
imul
push
xchg
mov
mov
push
insl
dec
fists
scas
sbb
leave
add
orl
movlps
or
shlb
dec
ret
test
aad
outsl
mov
push
mov
lret
imul
sahf
adc
xor
mov
pop
fsubr
push
scas
sub
test
jg
ds
hlt
xchg
lret
and
fcom
sub
xchg
loope
add
xchg
hlt
jns
push
lret
or
pop
popa
lods
popa
mov
shl
cmp
lahf
adc
dec
fs
pop
movsl
outsl
inc
push
testb
iret
sub
ss
lret
mov
or
sbb
scas
xchg
subb
addr16
test
push
cmc
mov
xchg
addl
pop
adcl
shrb
fmull
xor
int3
mov
xchg
add
scas
and
lock
popf
jbe
jge
inc
scas
mov
cmp
push
mov
gs
cwtl
test
scas
aas
lods
sahf
stos
jl
shrb
int
jl
movsl
test
nop
pop
stos
inc
lods
hlt
cmc
addb
mov
xchg
stos
aas
inc
jns
inc
test
dec
fcoml
mov
jle
pop
iret
xor
ret
outsb
xchg
mov
movsb
and
scas
lahf
push
rcr
mov
mov
or
std
inc
ss
push
sbb
loop
cltd
sub
lock
inc
inc
imul
mov
add
jp
out
repz
movsb
dec
lcall
nop
mov
inc
mov
xor
mov
jmp
jns
cwtl
neg
adc
fs
lcall
add
cmp
pusha
ljmp
inc
add
and
xor
jmp
pusha
ret
rcr
enter
and
mov
nop
into
jnp
sti
movsl
xchg
jno
adc
pop
inc
sti
arpl
or
fmuls
hlt
cmpsb
xchg
add
mov
or
inc
cmc
mov
lds
mov
test
rolb
sbbb
sub
or
clc
test
mov
test
cwtl
push
adc
dec
pop
jg
test
in
jp
mov
xchg
or
leave
push
lahf
es
fs
dec
popa
push
stos
dec
dec
hlt
iret
xchg
sub
std
xchg
nop
xchg
adc
mov
nop
cli
xchg
xchg
dec
test
mov
and
aas
and
sub
clc
push
xor
enter
sub
je
daa
inc
add
call
lcall
test
dec
xchg
insb
stos
or
pop
lcall
iret
sub
xchg
aad
sbb
sub
enter
dec
inc
ljmp
lret
flds
and
xlat
inc
iret
das
sub
jg
fildl
mov
aam
and
addl
shlb
and
hlt
rclb
test
ljmp
pop
inc
fisubs
push
test
push
in
pop
lcall
push
mov
mull
cwtl
lods
cmp
insb
notb
imul
push
xchg
mov
mov
mov
jnp
gs
stos
popl
xchg
or
add
mov
popf
mov
xchg
sub
mov
add
sbb
mov
cwtl
or
shrb
push
mov
test
sub
mov
arpl
xchg
ljmp
mov
lcall
mov
fimuls
imul
adc
mov
and
cmc
and
fs
in
or
mov
adc
out
cmp
lea
mov
pop
push
call
scas
xchg
cmp
fcmovb
mov
adc
add
test
push
hlt
mov
cmc
fisubrs
popf
ljmp
loop
lods
aaa
or
test
movsb
hlt
add
lea
outsl
mov
xchg
xchg
lods
arpl
rcrb
xchg
xchg
test
xchg
out
push
les
in
mov
mov
mov
mov
imul
imul
ss
xor
hlt
push
jns
and
push
shlb
jle
pop
lahf
adc
sub
ret
insb
mov
enter
pushf
ret
mov
rorl
jo
rcl
mov
push
mov
mov
inc
pushf
inc
dec
sub
mov
cmp
mov
mov
pushf
dec
movsl
adc
push
lods
xchg
loope
cmp
push
jle
xlat
nop
sbb
xchg
lret
add
mov
mov
mov
xchg
test
xchg
pop
imul
xchg
gs
xchg
cmpsl
mov
cli
dec
jg
leave
dec
xchg
fdivs
into
hlt
and
mov
stos
xchg
xchg
mov
push
sbb
adc
ss
insb
mov
lods
jbe
push
test
ss
loop
mov
popf
mov
and
stc
lret
fld
fistpll
and
cld
faddp
jge
popa
cmp
in
xchg
or
dec
and
cmc
aad
jge
icebp
vcmpsd
mov
bound
sub
or
inc
xor
inc
mov
test
out
mov
mov
insb
or
cmpsl
insb
mov
test
sbb
and
sbb
adc
push
dec
jle
int
jl
and
jb
lods
dec
jle
lahf
push
mov
mov
cwtl
lods
je
das
imull
les
cmp
push
xchg
stos
and
mov
lods
jle
pop
xlat
fdivrl
repz
or
ja
sbb
dec
je
movsl
sbb
lret
cmc
or
push
xchg
pop
cmp
add
rorl
add
outsb
cmp
js
fsubrs
negb
pusha
fbld
mov
pop
shrb
rorl
out
mov
fdivr
dec
mov
ret
shrl
inc
stos
inc
pop
xlat
inc
mov
pop
movsb
fstpt
adc
ret
sub
or
mov
jl
loop
sbb
add
roll
leave
push
sub
push
xchg
pop
xchg
lret
push
les
and
cmp
js
add
inc
xchg
js
sbb
adcb
adc
rcll
push
inc
mov
daa
xchg
cmp
pop
and
test
mov
jne
xchg
xchg
lcall
popl
imul
xor
mov
or
sub
cwtl
push
pop
sub
loop
pop
adc
aad
inc
loopne
int
inc
rcl
ljmp
jp
cli
rclb
shl
and
jo
and
out
incl
push
outsb
and
mov
ja
fwait
xchg
filds
ja
mov
push
adc
jno
mov
add
push
inc
insb
lcall
mov
inc
test
cmc
pop
mov
or
fwait
imul
incb
jb
lods
test
pop
mov
repz
xor
ret
fcoms
lret
rorb
mov
stc
arpl
add
mov
inc
sbb
jge
ljmp
lds
mov
cmp
fcom
mov
pusha
inc
xchg
aaa
lret
fmull
jge
and
xor
and
imul
movl
xor
andl
movb
sub
push
lcall
and
ljmp
mov
cmp
leave
sbb
sbb
mov
imul
jmp
sbb
sarb
fcomp
int3
repz
js
jl
jge
scas
lock
leave
mov
adc
push
xor
out
movb
push
sbb
sbb
les
shlb
popfw
add
test
and
sbb
xor
lds
je
loopne
test
sarl
xor
js
inc
js
lods
mov
mov
xor
push
inc
cld
ret
int3
xchg
cmp
mov
daa
cld
xchg
ljmp
mov
mov
in
jle
adc
lahf
push
notb
pop
sbb
sarl
push
das
pop
push
mov
aad
stos
inc
rolb
orl
push
inc
fdivrp
je
adc
out
addr16
push
add
fsubrl
cmp
je
ljmp
fadds
sbb
add
hlt
add
int
shll
sarb
mov
pop
sahf
pushf
jns
cs
test
or
ljmp
mov
aam
aas
jmp
js
out
jne
insb
lods
jno
test
add
cmp
pusha
rcrl
pop
fimuls
mov
xchg
test
xchg
mov
rcrb
int3
lcall
mov
lds
cltd
mov
add
aam
mov
pop
adc
cmp
dec
popf
xor
es
fcoms
mov
cwtl
nop
pop
insb
jecxz
sub
or
cld
imul
mov
test
mov
or
cltd
lret
subl
cmp
test
mov
mov
sbb
cmc
dec
stos
mov
fdivl
xchg
adc
sbb
xchg
jns
or
xor
xlat
or
inc
sbb
dec
jb
bound
lods
pop
mov
xchg
pop
sbb
bnd
aam
fadd
inc
xchg
dec
add
addb
int3
jg
rcr
mov
push
cmp
cltd
or
xchg
xor
cmp
cmc
cmp
cmc
es
out
iret
and
push
pop
test
jno
pop
xorl
fisttpll
lock
in
lods
into
inc
mov
push
dec
fadd
sub
aas
out
in
testb
jg
xchg
sub
adc
push
imull
mov
jb
add
sbb
push
push
insl
pop
les
or
roll
int3
inc
dec
inc
hlt
mov
fisubrs
xor
repnz
pushf
adc
aam
mov
add
ret
test
mov
aaa
xchg
xchg
enter
pop
or
push
sahf
mov
lret
insl
or
loope
dec
pop
jb
sarb
imul
push
dec
mov
mov
loopne
scas
fdivrl
test
frstor
dec
rcl
cmpsl
fiadds
cltd
pop
int3
mov
xor
into
lea
rclb
pop
dec
push
les
js
fistpll
or
int3
icebp
enter
add
xchg
dec
hlt
mov
cltd
rclb
fdivs
mov
mov
int3
cmc
adc
jo
adc
pop
pusha
jmp
sub
imul
mov
add
and
enter
ret
adc
popf
mov
cli
sub
adc
lret
add
mov
push
or
mov
mov
test
es
jne
xchg
mov
ljmp
idivl
and
sahf
xchg
push
add
dec
roll
xchg
lods
outsl
xchg
cmc
das
or
mov
fisttps
xchg
das
test
pusha
aad
dec
pop
xchg
mov
pop
leave
repz
cmp
mov
cmp
and
cmp
jmp
xchg
cmovno
lcall
add
popf
adc
adc
mov
stc
add
rcrb
fildl
sarb
lret
mov
lret
add
and
xchg
les
mov
clc
es
mov
js
mov
shll
or
rcll
xchg
mov
aam
lcall
add
jbe
jae
iret
addl
icebp
mov
call
and
ja
dec
mov
ljmp
jmp
inc
adc
mov
push
jnp
outsl
push
outsl
jecxz
mov
and
cld
ret
pushf
js
jne
inc
rcr
push
jbe
subb
nop
inc
aaa
pop
or
fbld
jbe
cmp
jbe
and
inc
aaa
or
xchg
or
shll
insb
inc
inc
jne
adcb
mov
xchg
pop
xor
add
dec
push
xchg
repz
stos
mov
dec
shrb
or
mov
mov
out
mov
cmpsl
jo
ret
aam
mov
jns
add
jb
mov
cmpsb
fidivs
inc
sub
sti
jecxz
mov
and
movsb
push
xor
jb
adc
mov
scas
jae
or
mov
fnstsw
fildl
daa
loope
je
rolb
xchg
xchg
mov
rol
cmp
lret
mov
sub
inc
and
loopne
nop
push
cmp
cmp
mov
mov
std
lea
std
push
adc
mov
rcrl
sar
xchg
push
xchg
aad
mov
mov
jp
scas
mov
add
mov
clc
or
ljmp
push
into
inc
xchg
sub
mov
std
xrelease
mov
cwtl
jl
ret
mov
fisubl
xchg
popf
lahf
lea
add
lods
and
imul
stos
jl
inc
mov
pop
push
repnz
ret
lods
mov
das
dec
or
movsb
outsl
dec
rclb
cmp
mov
lods
les
int3
xor
jp
cmp
movsb
xor
out
and
popl
in
or
adc
xchg
nop
adc
cmp
clc
enter
or
loopne
xchg
and
jno
mov
add
dec
or
mov
ja
add
mov
std
cmpsb
fisubs
mov
mov
inc
push
ficoml
shlb
mov
lods
xchg
nop
jecxz
out
mov
push
mov
ljmp
sbb
ret
in
mov
mov
jne
add
mull
clc
imul
enter
in
nop
mov
jbe
les
inc
jmp
rorl
es
pop
xor
sbb
mov
stc
sub
loop
dec
outsb
cltd
popa
stos
jl
push
js
sbb
sbb
mov
mov
cmp
lods
push
xchg
movsw
into
mov
ret
sbb
sub
and
jp
push
adc
mov
jb
pop
xchg
inc
les
inc
imul
sbb
dec
add
lret
inc
lock
pop
scas
sub
jno
cwtl
enter
je
sub
dec
jo
fcompl
xor
mov
lds
xchg
xchg
int
div
xchg
testl
add
loopne
lds
mov
insb
cmpsl
adc
iret
lock
les
movsl
add
mov
stos
subb
mov
lcall
enter
sub
mov
sbb
cmp
std
push
scas
dec
inc
jbe
rcrb
lea
mov
cli
sub
int
sub
hlt
imul
mov
aam
mov
jmp
enter
orl
dec
push
sbb
inc
in
or
stos
and
insl
test
push
pop
clc
sub
clc
hlt
mov
jae
imul
lods
cli
and
fsubp
mov
xchg
mov
stos
mov
jg
mov
xchg
mov
test
outsl
sub
adc
xor
shld
fbstp
xchg
inc
inc
pop
mov
lea
addl
and
mov
std
add
xor
fstpl
call
push
pop
mov
ficomps
mov
orl
movsb
dec
mov
js
inc
repnz
inc
leave
ja
repz
dec
lods
sub
hlt
mov
and
test
sub
pop
rcr
sub
aad
add
mov
mov
or
repz
sub
dec
push
push
sarb
sahf
push
mov
add
mov
xchg
push
mov
stos
jp
stos
lods
inc
or
add
mov
addb
shlb
aas
mov
adc
lret
lock
cmp
mov
xlat
mov
xor
cwtl
and
push
test
lcall
sbb
stc
xchg
jmp
or
nop
adc
mov
repz
stos
movsl
cmp
repz
test
bound
xor
test
aad
addl
sbb
and
mov
fwait
or
lahf
call
or
xchg
fiadds
and
push
adc
pop
jno
xchg
pusha
stos
cmp
xlat
stos
pop
adc
mov
test
dec
xor
push
and
es
sbb
mov
push
clc
cld
xor
rorl
mov
imul
fildl
add
scas
hlt
cmp
jne
xchg
mov
or
lds
mov
rcll
hlt
mov
outsl
cmp
cmc
adc
mov
mov
cmpsb
xchg
das
in
jp
lods
aas
repnz
jmp
mov
jae
push
popf
dec
add
in
mov
push
pop
lret
lds
outsb
mov
mov
rcrb
shl
pop
sarl
movsb
adc
mov
iret
push
jmp
mov
pop
mov
test
movsl
call
data16
xchg
xlat
out
mov
into
cmc
jbe
fidivrs
mov
ss
movsl
mov
nop
jecxz
cmpsl
aaa
xchg
or
notl
filds
sbb
mov
sbbl
inc
dec
add
rolb
xchg
push
aaa
icebp
shll
adc
jmp
lds
pop
push
outsb
dec
push
mov
repz
mov
fstps
pop
inc
mov
outsl
hlt
adc
or
and
loope
cmp
add
rorl
sahf
jo
push
mov
sbb
jl
dec
mov
mov
stos
ja
xchg
test
mov
sub
stc
int
bswap
fimull
pop
mov
test
cmp
rcll
push
das
pop
sub
ss
add
xor
jg
data16
insl
jl
push
and
push
cmc
sbb
inc
aad
sbb
decb
xchg
les
sbb
test
xchg
and
aas
ja
outsb
mov
movsb
lret
xchg
jnp
xrelease
loopne
xchg
mov
es
adc
imul
xchg
cmp
rcr
aad
add
daa
in
fistps
mov
out
ljmp
sbb
dec
nop
hlt
xor
imulb
in
cmp
xchg
movsl
rorb
adcl
rcrb
mov
sub
shl
add
xchg
addl
mov
xchg
add
pop
lock
sub
dec
mov
shl
push
daa
mov
test
jne
leave
cli
jns
notl
xchg
push
movsl
lea
aas
negl
or
pusha
mov
add
inc
pop
sub
mov
cmp
and
loop
mov
data16
push
xor
loopne
mov
je
fwait
push
icebp
call
fidivrs
pusha
add
push
adc
or
pop
jge
add
xor
sub
test
cmc
xchg
lods
jbe
or
pmulhuw
mov
add
cmpsl
lret
dec
push
sbb
xor
add
je
xchg
jne
fwait
xchg
mov
cmp
jp
cli
insl
fists
push
inc
sahf
ds
or
in
call
std
in
and
push
out
pop
jne
or
test
outsl
incb
xchg
jl
aad
mov
jbe
inc
jl
hlt
cwtl
jl
call
push
mov
scas
mov
test
mov
mov
sbb
and
notl
sbb
aaa
rcl
pop
call
jbe
jo
inc
pop
sub
mov
ja
andb
clc
jne
mov
rclb
clc
imul
add
movsl
ja
or
shll
jle
je
test
pop
movsb
cmc
mov
dec
fisttpl
movsl
push
cmp
bound
outsb
jne
imul
jb
pop
ficoms
test
cmp
mov
mov
sti
cmp
sbb
or
cmp
or
sub
outsl
mov
nop
mov
dec
add
push
xchg
or
or
sub
adc
call
jmp
cmc
xchg
in
add
mov
int3
add
fisubrs
hlt
mov
sbb
push
sub
push
mov
ja
mov
shll
lahf
scas
mov
rcrl
mov
icebp
das
jle
jno
lods
fildl
imul
stos
dec
in
push
xchg
jnp
add
push
outsb
mov
cli
dec
xor
lods
push
push
xor
jg
mov
push
lea
push
and
mov
add
mov
push
jmp
enter
add
pushf
xchg
test
test
add
lret
cmpsb
repz
aaa
dec
jge
sub
test
cs
rcrb
bound
pushw
mov
mov
or
in
jnp
insb
or
cmp
jo
je
xchg
xor
fldl
lds
mov
fldl
roll
dec
inc
gs
cmpsl
jmp
jne
or
lds
push
in
mov
push
mov
xor
jnp
inc
cmp
imul
inc
pop
cltd
stos
mov
push
enter
data16
inc
fstps
cld
mov
mov
and
sbb
test
cmc
xchg
and
hlt
lret
and
or
imul
int
cmpsl
rcrb
data16
sar
xor
lea
call
push
loop
xchg
adc
test
lcall
test
sahf
hlt
and
mov
cmpl
mov
scas
sbbb
push
mov
lds
test
dec
dec
fwait
push
data16
sbbl
ss
outsl
jge
push
add
addr16
add
and
or
in
js
inc
xchg
out
or
lcall
mov
cld
add
mov
cmc
mov
dec
cmp
mov
and
mov
mov
mov
mov
add
sub
push
inc
mov
dec
xor
cmp
xor
mov
testb
and
inc
xor
mov
xchg
iret
and
nop
lret
loopne
mov
ljmp
leave
in
mov
xor
cmpsb
xor
out
adc
adc
sub
push
or
mov
lock
jns
or
xor
decl
cwtl
push
call
push
xor
hlt
mulb
mov
popa
jmp
mov
cs
js
les
xor
enter
xchg
mov
cmpsl
inc
in
mov
movsl
xchg
mov
ret
mov
inc
test
dec
test
fldcw
ret
cmp
and
movb
add
cmp
adcb
int3
sub
mov
mov
lcall
mov
mov
clc
push
movsb
addb
test
xchg
aas
inc
sahf
or
imull
ljmp
and
js
jmp
pop
jg
push
mov
or
shl
mov
aaa
cld
andb
jle
aam
aam
ret
adc
xlat
icebp
bound
lods
movsb
testb
xchg
movl
add
jle
cmp
sbb
movsl
int3
ret
push
push
sahf
ljmp
int3
cmpsl
nop
cli
idivl
jo
aas
jns
incb
mov
ret
cmp
cli
cmpsl
mov
jmp
in
xchg
pop
repz
inc
pop
movsl
les
imul
sbb
add
les
sbb
and
mov
pop
mov
mov
cmp
nop
data16
sbb
mov
not
xchg
mov
push
sub
test
cwtl
mov
fistl
in
shrl
mov
jns
sbbl
mov
imul
decl
fistpll
or
pop
js
cmpsl
enter
sbb
mov
pop
xchg
addb
pop
cmp
leave
adc
add
mov
fimuls
cli
je
cmp
icebp
movsb
shll
sar
mov
call
and
jns
insb
inc
les
mov
clts
out
mov
cmp
scas
sbb
jl
lcall
sbb
rcrb
and
sub
pmaddwd
fs
mov
sub
aam
inc
pop
ss
push
int
dec
fdivs
sbbb
cmp
test
imul
fidivrl
imul
sbbb
ret
test
xchg
inc
pusha
cmpb
daa
mov
or
adc
call
shrl
rorl
adc
mov
push
cltd
mov
add
add
jmp
push
cli
lret
xchg
enter
dec
pop
mov
shl
pop
into
jmp
cmpsb
cwtl
xor
in
imul
push
inc
and
xchg
sub
fs
js
add
fcoms
callw
jl
fnstsw
push
or
add
rcl
or
mov
pop
stos
leave
inc
and
mov
mov
hlt
popf
vprotd
arpl
into
lret
and
ffree
and
dec
cwtl
ficomps
mov
leave
shl
add
clc
sub
dec
jae
aad
and
sbb
xchg
sub
shll
out
or
out
sarl
scas
mov
popl
mov
pop
dec
xchg
ljmp
stc
xor
xchg
inc
inc
cwtl
mov
and
mov
pop
cmp
lret
xor
cli
dec
pushf
in
enter
mov
hlt
lret
pop
fdivrl
mov
push
out
les
aad
add
fidivs
sub
rolb
pop
call
out
push
ds
mov
push
pop
jnp
aam
dec
jbe
inc
inc
fisubs
xchg
xchg
jge
and
or
xchg
scas
fnstcw
push
add
inc
mov
jb
scas
xor
or
pop
scas
cmpsl
and
shrb
iret
mov
sbb
xor
jge
pop
loope
test
hlt
add
mov
pop
mov
cmp
mov
arpl
pusha
outsl
xchg
mov
fwait
adc
not
pop
mov
popa
cmp
lods
jl
pop
mov
mov
mov
ucomiss
out
mov
xor
mov
stos
cmp
lahf
sbb
lret
xchg
fstpl
and
ljmp
mov
fcmovnu
sub
ret
lcall
xchg
inc
xchg
scas
mov
push
es
jno
add
or
fmul
movl
adc
aaa
inc
add
cld
mov
aaa
add
pop
shll
push
xchg
das
lds
or
mov
inc
daa
enter
xchg
int
gs
mov
sbb
xchg
rorl
ret
jg
xchg
xchg
cmc
xchg
pusha
loope
mov
iret
lret
push
decb
xchg
and
mov
mov
and
lret
call
imul
data16
or
fldenv
sbb
pop
pop
ljmp
xor
xchg
xchg
mov
sub
fpatan
in
loope
xlat
cwtl
scas
lret
fs
aad
mov
push
pusha
addl
in
dec
adc
lcall
fcmove
into
and
movsl
lcall
pop
sbbb
repz
insb
das
stos
adc
mov
xchg
notl
pop
jb
cmpsb
test
xchg
mov
insb
or
add
mov
mov
popf
adc
dec
push
les
cmc
xor
push
sti
mov
xor
mov
sbb
mov
shr
fisubrl
inc
push
dec
xchg
mov
daa
sti
insb
es
shlb
jns
inc
dec
mov
mov
iret
cmp
les
cmp
dec
aam
jnp
rorb
jns
xchg
imul
call
lcall
scas
adc
leave
push
push
rep
mov
cmp
push
pop
mov
mov
cltd
mov
popa
xchg
subl
enter
fistpl
sbb
xchg
mov
outsl
out
cli
mov
scas
jno
nop
js
sub
dec
add
test
in
mov
scas
icebp
mov
and
fldz
ficoms
outsl
les
mov
push
pop
cmp
cmp
mov
or
push
mov
inc
adc
and
or
lds
xchg
adc
dec
lock
mov
in
fidivrl
sub
ds
test
repz
and
lods
inc
outsb
xor
cwtl
xor
mov
sub
es
nop
xor
lret
xor
push
pop
push
call
lods
xchg
ffree
cld
jp
jns
adc
dec
add
pop
cmp
or
lods
cmp
cmp
push
outsb
fidivrs
or
or
jbe
inc
add
sbb
push
enter
fmuls
mov
sbb
loopne
loope
jge
ret
mov
mov
inc
iret
jecxz
xor
jecxz
xor
mov
out
sub
fmulp
mov
ss
xor
call
int
enter
adc
ja
mov
lds
imul
hlt
test
imul
mov
xchg
nop
js
stos
lds
mov
jmp
int
testl
push
xchg
pop
pushf
pop
mov
jo
mov
mov
enter
aas
xchg
add
out
scas
adc
jle
jne
mov
rcrl
pop
or
out
sub
xchg
or
jg
test
jg
xchg
xor
notl
paddd
or
ds
sub
dec
xchg
and
cmp
mov
bound
andl
lods
mov
pusha
leave
jbe
mov
add
ficoms
push
int
xchg
or
or
add
test
xorb
rorb
pushf
adc
test
xchg
test
test
int3
nop
dec
mov
jle
ret
add
pushf
xor
out
cwtl
sarb
cmp
in
cwtl
cmp
xlat
mov
mov
lock
lret
add
sbb
xchg
xchg
mov
sub
cltd
lahf
xchg
push
sbb
in
mov
loop
mov
or
xchg
test
notb
mov
mov
test
aam
test
adc
mov
andl
push
cmp
sbb
adc
dec
mov
popf
push
add
and
mov
imul
scas
dec
outsb
mov
push
aad
and
add
jl
sahf
mov
cmp
call
nop
movsl
push
sbb
adc
sbb
mov
sbb
in
testl
sub
xchg
adc
adc
jl
jmp
or
call
fistpl
cmp
fnstsw
push
add
push
jecxz
ss
das
add
ljmp
pushf
mov
aaa
mov
mov
orl
or
pop
nop
and
xchg
mov
push
push
les
xchg
push
jge
aas
rcl
mov
ret
mov
xchg
jns
xchg
sti
xchg
ret
push
fnsave
mov
rorl
cmp
daa
xchg
push
incb
and
push
idivl
sbb
leave
jl
repz
dec
mov
rcl
cmp
sub
xor
adc
jnp
cmpl
xchg
xchg
pushf
sub
push
pop
scas
xchg
dec
idivl
pop
push
jg
or
out
xchg
jge
test
and
insl
mov
mov
cmp
push
add
bound
fildll
jnp
push
shr
aas
lods
xchg
aad
mov
out
adc
jge
lea
mov
cmp
les
fwait
add
add
and
xchg
inc
into
cld
jae
xchg
or
and
mov
mov
pop
clc
scas
inc
pusha
push
mov
mov
rcrl
test
test
rorl
mov
enter
jle
mov
pop
out
loope
fwait
push
xor
scas
push
fld
cmpsl
xlat
sbb
mov
les
cld
or
and
dec
sahf
fstpt
or
or
insl
nop
push
shr
xchg
xchg
test
push
fstp
or
les
mov
cmp
cs
jb
mov
jg
adc
mov
scas
loop
leave
lea
mov
pop
jle
dec
and
sbb
sbb
jo
lret
loop
lcall
xchg
orl
and
sub
cmpsl
push
inc
or
mov
sub
hlt
pop
ret
imul
in
sbb
std
frstor
mov
test
mov
push
movsb
mov
ljmp
std
mov
subb
sarl
lret
aam
sti
add
orb
div
bound
lahf
movsb
pop
iret
ficoml
fisubl
or
addl
in
push
aad
sbb
and
outsl
sar
or
cwtl
adc
pushf
lret
rorb
mov
test
cmc
jle
xchg
dec
sub
je
sarl
leave
rcrb
aas
loop
dec
enter
or
cmp
aas
rcr
or
mov
adc
mov
cmp
imul
js
cmp
jno
test
jbe
iret
xchg
or
inc
pop
dec
movsl
test
dec
in
movsb
into
mov
mov
push
mov
cli
leave
aad
lea
sbb
pop
imul
sub
inc
movsl
xchg
adc
add
imul
xor
jns
xor
lods
sbb
je
mov
xor
jbe
add
test
sbb
movsb
push
xchg
mov
add
jb
lock
movsl
jg
jl
xor
xchg
scas
ret
out
lret
mov
or
jge
dec
jbe
mov
enter
lret
xor
push
pop
cmp
sub
jno
lods
ficoml
sti
jno
in
movsl
mov
scas
lods
or
jg
leave
imul
jge
mov
mov
or
jle
fsts
roll
mov
pop
fwait
rorw
jns
insb
dec
inc
and
loope
clc
gs
notl
mov
iret
test
sub
inc
add
mov
xchg
mov
mov
add
shll
inc
and
mov
jns
inc
mov
add
js
test
ds
mov
xchg
hlt
mov
fcmove
adc
clc
aam
popf
lcall
mov
dec
jp
sub
mov
add
shrb
mov
test
ljmp
in
lahf
xchg
xchg
or
vpmacsww
out
xor
xor
and
lock
shll
xor
cmp
les
mov
insl
xor
xchg
fsubrs
fistps
xchg
insb
xchg
rcll
add
cmp
int3
jno
add
mov
movsl
fwait
stos
or
cmpsl
mov
sub
xchg
cmp
test
lods
fiaddl
daa
mov
mov
xor
in
cmpsb
jne
or
sbb
fs
js
enter
jo
mov
test
rcrl
sub
rcll
push
jg
out
popa
or
mov
push
jmp
mov
add
sub
fistps
adc
enter
clc
xlat
test
fadds
nop
pop
mov
pop
notb
jp
add
pshufw
push
mov
or
in
rorb
adc
scas
inc
xchg
loopne
fisubrs
outsb
stc
add
and
mov
push
fidivl
mov
mov
imul
jo
sub
mov
nop
test
push
pop
xchg
in
mov
cmp
mov
mov
out
push
das
xchg
sbb
mov
jb
test
lods
fcmovu
lods
push
push
int3
test
popf
mov
dec
or
pop
inc
dec
int3
nop
test
or
push
or
ds
out
sub
repz
test
and
test
jns
push
loope
mov
cmp
mov
pop
les
dec
ret
orl
bound
imul
xchg
fisttpl
push
test
test
push
mov
jg
sub
add
mov
push
mov
hlt
adc
cmp
and
rorl
mov
in
dec
inc
jp
xorl
js
das
inc
xorl
test
xchg
mov
adc
ss
mov
ja
xchg
dec
or
xorl
pusha
lods
sarb
dec
je
fcomps
add
xor
test
jge
test
imul
mov
add
xchg
scas
mov
ljmp
xor
cld
mov
lods
jno
scas
xor
fstpt
daa
cmc
xchg
lea
int3
xchg
stos
or
pusha
or
cmp
pop
xchg
jb
adc
in
nop
sub
out
fadds
into
sub
stos
aas
xchg
cmp
xchg
insb
arpl
cmc
ret
cmc
add
test
leave
fistl
add
idivb
adc
fstps
bound
repnz
pop
mov
or
sbb
push
mov
cmc
in
dec
int
mov
adc
xor
or
sbb
mov
cmpsl
imul
rorl
mov
bound
pop
fnstcw
pop
mov
push
movsb
jb
xor
xchg
call
fdivrs
loopne
mov
les
xor
push
arpl
mul
xchg
lea
push
push
fmuls
roll
pop
cli
jae
lods
int3
sbbl
sbb
in
sbb
xchg
cltd
hlt
and
jno
jmp
pop
push
mov
sub
fdivrs
mov
adc
lcall
stos
cmp
xchg
fimull
shll
sbb
rcll
ljmp
dec
mov
pop
lods
js
cmpsl
add
dec
mov
mov
xchg
adc
test
push
and
cmc
mov
jl
pop
xchg
adc
cltd
mov
imul
xabort
adc
or
or
mov
sbb
and
jmp
in
loope
or
add
cmp
call
mov
mov
sarl
imul
mov
fdivrl
mov
mov
mov
adc
pop
pop
and
mov
dec
or
decl
enter
and
cmc
mov
insb
arpl
or
mov
jns
add
fmuls
incl
test
sub
movsl
in
and
hlt
les
mov
sahf
test
cmc
mov
aas
insl
sub
mov
push
ds
cmp
add
inc
test
cmp
jg
adc
mov
push
jnp
fsubl
test
shl
lcall
jno
cmp
fs
or
mov
pop
jg
push
xor
test
xchg
call
xchg
clc
icebp
dec
fstpl
add
rclb
sarb
mov
sti
cmpsb
mov
inc
call
lret
xor
adc
outsl
in
aas
call
pop
mov
rcr
bound
and
and
mov
repz
loopne
jne
jle
sbb
jp
cmp
pop
and
les
nop
mov
cwtl
in
insb
push
xchg
mov
shr
xchg
push
stc
xchg
rcr
stos
jbe
lock
icebp
mov
and
xchg
orb
mov
push
xchg
test
and
dec
orb
mov
push
jmp
sbb
xchg
dec
ss
xchg
bound
aam
js
cmpsb
lahf
hlt
mov
fcomps
subb
fsubl
mov
call
jl
xchg
enter
clc
mov
sbb
push
xchg
push
movsb
adc
mov
test
inc
mov
xchg
mov
inc
xor
push
pop
rolb
adc
fmul
jle
pop
cmc
sbb
xlat
xor
xchg
je
pop
xchg
js
mov
mov
pop
dec
test
inc
push
xlat
jo
push
mov
sarl
test
lahf
pusha
cmpsl
mov
xor
je
or
ret
cltd
add
pusha
cmp
je
jne
js
and
mov
lea
fiaddl
jg
cld
inc
inc
lea
test
fwait
lahf
je
or
mov
cmp
lcall
fistpl
mov
mov
movsl
fidivl
fsts
and
pop
jl
in
aas
sub
movsb
sub
xor
pop
lcall
fmull
stos
fistps
push
clc
dec
xor
mov
roll
dec
mov
enter
mov
iret
xchg
loop
add
cmp
sbb
or
rolb
cmpsl
xchg
sbb
lret
jmp
sbb
movsl
cmc
ljmp
push
pop
arpl
neg
add
jnp
xor
dec
mov
add
incl
mov
mov
or
js
int
nop
adc
orl
in
or
test
jl
fidivl
mov
xchg
mov
jmp
mov
cmp
mov
jo
jb
mov
xor
add
or
in
xchg
in
ss
xlat
adc
mov
mov
lock
mov
aaa
jns
mov
dec
dec
add
adc
push
leave
subl
or
adc
xchg
dec
mov
call
adc
xor
lods
mov
mov
cwtl
stos
push
shrb
cwtl
add
pop
enter
sbb
imul
mov
dec
arpl
fiadds
movsl
mov
mov
mov
mov
xchg
cld
adc
imul
test
xchg
jae
lea
stos
or
add
mov
jo
fidivl
xor
ret
ret
add
mov
inc
sbb
mov
mov
imul
idivb
leave
pusha
orl
or
xchg
inc
inc
shlb
fmul
and
mov
les
mov
es
sarb
push
mov
xchg
test
xchg
nop
sbb
mov
aam
mov
dec
pop
into
sub
mov
stc
xchg
mov
jle
mov
xchg
mov
mov
mov
and
mov
and
pusha
mov
mov
adc
jg
push
js
adc
test
inc
add
mov
mov
push
fstpt
test
xor
cwtl
ds
lds
mov
fcoms
xchg
loopne
mov
hlt
mov
mov
mov
or
mov
mov
xchg
jecxz
pusha
rclb
adc
lds
cwtl
clc
ret
inc
xor
jae
cmpb
add
mov
push
mov
aad
lock
mov
lea
inc
popa
sbb
jo
mov
adc
repz
sbb
push
fsubl
inc
jge
rolb
loopne
jmp
add
nop
clc
pop
or
adc
add
lock
xchg
mov
fsubrs
aam
xchg
dec
and
or
inc
aam
aaa
jl
xor
sub
mov
lds
lock
cmp
test
inc
add
mov
pop
ret
xchg
testl
adc
int3
sub
mov
jns
lock
mov
mov
or
and
jne
push
mov
sti
mov
rclb
les
or
dec
mov
mov
lmsw
xor
sarb
mov
test
sbb
ret
aaa
adc
nop
add
lods
cmpsl
cmp
push
mov
mov
repnz
mov
ja
std
pop
mov
mov
and
sahf
ret
mov
add
jle
push
inc
mov
add
pop
xor
mov
inc
xchg
ds
or
mov
nop
push
insb
fadds
nop
and
xor
xchg
aas
dec
loopne
jo
test
pop
push
mov
add
dec
mov
mov
cmp
sahf
cmp
mov
cs
and
clc
dec
mov
clc
loopne
mov
shrb
xor
test
inc
or
test
cmp
shrb
mov
mov
nop
pop
add
shll
rclb
jbe
mov
enter
mov
ret
jge
clc
cwtl
fiadds
int3
and
and
mov
xchg
xor
loope
dec
mov
or
dec
and
rcl
loopne
cmp
jp
clc
mov
jns
mov
mov
add
shrl
lock
jg
stos
ret
sahf
xchg
dec
lahf
out
and
cmc
rorb
out
push
ret
sbb
nop
pop
or
mov
add
sbb
mov
or
mov
dec
enter
ret
sub
lock
mov
add
inc
mov
rorb
nop
aad
js
mov
subb
add
ror
mov
sub
hlt
xchg
push
pop
and
nop
sub
jnp
loopne
mov
jl
cld
cmpsl
add
jp
adc
add
jnp
xor
ret
cmp
add
addr16
mul
sarb
mov
mov
test
into
pop
ror
test
addr16
mov
mov
push
mov
xchg
jns
dec
pop
ret
mov
movsb
mov
sub
jns
mov
sub
fsubl
mov
lock
ret
loop
sub
aam
ret
mov
ret
fiaddl
pushf
mov
mov
mov
mov
mov
loopne
push
mov
sbb
cmp
xor
in
mov
push
enter
or
inc
sub
ret
add
mov
mov
sbb
enter
cmc
xor
xchg
mov
push
sub
xchg
push
hlt
add
mov
and
cwtl
jmp
mov
test
xor
loopne
daa
mov
enter
lret
xchg
nop
pop
test
test
cmp
mov
pop
inc
xchg
cmp
mov
pop
test
cwtl
ret
cs
test
jmp
pop
or
pop
mov
lret
and
mov
xchg
and
cwtl
mov
insb
js
es
pop
xchg
adc
test
call
pop
mov
mov
cmp
and
sub
add
insl
in
sub
arpl
fsubl
xchg
push
push
jp
push
jl
xchg
inc
mov
pop
bnd
adc
stos
stos
mov
fwait
iret
shll
fsubrl
and
insl
or
les
dec
dec
inc
fs
repnz
stos
loope
sub
and
mov
ljmp
rorb
mov
add
and
ret
rol
or
mov
mov
xchg
xor
daa
lds
test
stos
mov
mov
lock
pusha
mov
mov
pusha
insb
mov
lods
push
daa
or
and
mov
popa
mov
nop
fidivs
int
cmp
mov
xchg
nop
jbe
daa
scas
xchg
scas
faddl
or
push
scas
cbtw
sahf
imul
or
cmp
cmp
sub
lcall
jns
shrb
adc
nop
nop
call
clc
xchg
xor
mov
clc
mov
or
les
sbb
mov
pushf
call
cld
test
mov
mov
mov
in
and
enter
or
xor
mov
sbb
xchg
or
xchg
into
adc
jo
mov
mov
inc
mov
andb
fdivrs
push
mov
and
mov
add
and
xor
xchg
add
xchg
fcoms
cli
shlb
push
ret
movsb
inc
mov
xchg
push
mov
dec
dec
ret
and
je
sub
shlb
sub
xor
rclb
roll
jp
mov
stos
cmpsl
jle
sahf
cld
gs
jne
or
icebp
fistl
inc
or
dec
or
xchg
cs
gs
and
xor
nop
fsubrl
mov
push
mov
inc
mov
popa
fwait
and
enter
add
and
pop
out
movsb
sbb
inc
adc
jl
repnz
push
sub
mov
mov
cmc
jl
mov
push
mov
sarb
mov
mov
jl
and
sbb
sub
inc
rorl
lds
adc
mov
jne
dec
dec
int3
fmull
in
ret
sbb
add
pop
inc
jnp
cmp
mov
cmp
les
xchg
int3
or
scas
xor
sub
sub
mov
fdivs
pop
or
into
mov
push
ret
jne
loopne
pop
mov
es
ljmp
add
xor
push
enter
shlb
jge
mov
lds
lret
movsb
js
lcall
loopne
stos
or
mov
mov
sbb
cmp
outsb
ret
mov
and
jo
dec
enter
les
cwtl
les
cs
scas
sbbb
mov
lcall
out
jnp
and
jp
or
sub
sbb
scas
mov
pop
sbb
fsubs
mov
sahf
lret
pop
imul
push
sbb
shlb
add
adc
clc
jne
xchg
add
mov
or
rcrb
xchg
cs
rorl
inc
xchg
push
and
xchg
push
xor
enter
iret
dec
pop
mov
mov
inc
pop
lds
push
loopne
fsubl
scas
adc
andb
push
mov
add
shlb
roll
fistpll
xor
inc
xlat
mov
xor
mov
push
xchg
test
rol
mov
js
mov
sar
hlt
sbb
xchg
xor
ljmp
aam
sarb
add
out
mov
dec
sbbb
pop
xor
push
shlb
test
adc
dec
mov
nop
add
test
clc
mov
sub
mov
scas
jg
aas
pop
gs
mov
and
ret
and
faddp
inc
sarb
inc
les
push
and
xor
jg
les
jle
mov
mov
push
mov
fadd
lods
mov
xchg
test
es
shlb
fiaddl
ror
pop
and
cwtl
mov
jg
pushf
jp
idivl
mov
add
in
mov
push
les
lret
cltd
enter
cmp
inc
lds
mov
mov
adc
mov
stos
out
mov
insb
mov
adc
dec
in
into
mov
xchg
ret
mov
inc
cmp
fsubrs
xchg
adc
mov
sbb
ret
mov
mov
add
push
or
out
mov
lock
mov
pop
lods
mov
add
xor
cmp
fistps
ja
mov
lock
mov
aaa
mov
lock
mov
push
fstpt
into
les
loop
sbb
clc
jno
push
mov
mov
or
mov
mov
or
stos
mov
pushf
clc
add
lock
stos
test
mov
call
mov
ret
xchg
mov
ss
sbb
pushf
nop
adc
leave
rcll
mov
test
lods
or
lds
loop
add
mov
test
add
les
les
aad
mov
push
adc
xor
mov
lds
mov
inc
in
mov
push
les
and
mov
xchg
mov
sti
lock
inc
test
enter
xor
mov
mov
shrb
f2xm1
xchg
mov
ret
mov
pop
mov
cmp
cmp
adc
mov
push
pop
mov
test
ds
fmuls
jne
nop
push
imul
and
fidivrs
or
jo
sahf
insb
mov
cwtl
cmp
or
nop
mov
movsl
inc
adcb
mov
sbb
mov
ret
add
inc
dec
shl
sub
gs
or
xchg
out
js
mov
xchg
test
mov
orl
mov
lods
and
push
xchg
test
lods
int
das
lods
mov
and
xchg
stc
lcall
xchg
and
cmp
clc
xchg
add
xchg
addr16
xlat
sub
xchg
int3
xchg
add
cmp
mov
shl
xchg
push
sbb
pusha
lock
fs
nop
cltd
pop
dec
adc
mov
out
dec
rcr
xchg
cmp
ret
popf
adc
xchg
shrb
clc
call
push
push
sahf
sub
adc
mov
jbe
mov
ret
mov
or
aas
or
fiadds
lock
sub
sub
mov
mov
aaa
xchg
xchg
inc
jns
add
add
adcl
fdiv
nop
loope
or
jo
mov
xchg
test
push
stos
ret
mov
loop
mov
inc
mov
sahf
push
in
sbbb
inc
inc
fisubl
mov
push
mov
clc
cmp
mov
dec
dec
in
add
xchg
adc
adc
mov
push
sahf
dec
lock
mov
nop
rorl
adc
les
inc
mov
orb
mov
sub
inc
test
andb
mov
adcb
mov
and
loopne
test
scas
pop
cmp
sarb
scas
lds
clc
xchg
and
clc
in
cmpsl
and
cmp
sub
mov
js
or
test
int3
nop
mov
mov
jl
mov
inc
mov
das
adc
test
rol
and
mov
insl
cs
mov
repnz
wbinvd
push
rcrl
call
add
dec
mov
hlt
rorb
mov
and
cwtl
and
enter
imul
adc
pusha
negb
out
pop
jo
mov
enter
loopne
mov
loopne
ret
add
pop
mov
imul
and
data16
xor
xor
test
cwtl
ret
add
mov
mov
push
inc
xchg
es
nop
or
xchg
and
mov
test
mov
mov
loopne
scas
pop
push
mov
movb
xchg
mov
cmp
cmp
test
dec
sub
adc
dec
add
es
mov
mov
loopne
out
test
mov
nop
jae
cmpsl
pop
pop
shl
ret
xchg
clc
sbb
xchg
movsl
daa
xchg
push
xor
mov
sti
add
loopne
mov
cmp
pop
mov
pop
mov
push
sub
sbb
lods
inc
loopne
mov
xchg
call
xchg
rclb
cld
jne
pop
ret
push
sub
jo
jle
call
mov
mov
mov
adc
rcrb
dec
frstor
mov
dec
ror
outsb
scas
inc
mov
nop
ret
loopne
pop
adc
shl
mov
add
mov
int3
rorb
push
mov
cmp
or
pusha
mov
mov
adc
insl
sbb
xor
push
xchg
or
test
or
cltd
hlt
sub
dec
rorl
push
fadds
or
mov
shrb
inc
ljmp
ret
mov
daa
adc
or
std
push
lahf
push
and
jl
mov
ss
pusha
sub
push
lock
aam
push
push
sub
cmp
or
sbb
mov
jb
ret
mov
lods
xchg
pusha
loopne
test
xchg
add
sbb
mov
lret
mov
mov
jns
icebp
xchg
test
cmp
mov
xchg
and
lods
arpl
jle
imul
ret
insb
subb
pop
cwtl
push
ret
xchg
mov
mov
scas
ja
gs
mov
push
or
cmc
adc
test
mov
scas
adc
mov
dec
adc
inc
insb
neg
adc
nop
jge
or
ret
cmp
outsl
sti
in
or
ror
stos
mov
lods
movsl
and
inc
add
jo
adc
mov
push
jmp
arpl
xchg
notb
ret
cwtl
mov
push
jbe
or
xlat
rol
in
into
mov
arpl
jl
jo
push
push
popa
and
jge
js
xchg
repz
xchg
jns
lcall
fs
je
fcomps
lret
stos
movsl
sti
push
sbb
mov
jns
cmpsb
xlat
jnp
sub
inc
or
imul
adc
enter
mov
xor
hlt
int3
orb
loopne
shrb
add
jle
inc
cmp
xchg
mov
push
popa
sahf
xchg
das
mov
data16
adc
cmp
push
mov
cs
push
and
jbe
jae
push
sti
sub
push
cld
cwtl
inc
jo
mov
jns
sub
mov
cwtl
out
xchg
test
mov
dec
xorb
and
dec
andb
scas
push
adcb
mov
ret
jbe
mov
xchg
mov
ss
mov
push
test
popf
andb
add
mov
and
imul
mov
andl
into
jge
xchg
jae
or
nop
push
or
rclb
enter
cmpsl
jmp
pop
xchg
lock
mov
in
lret
sahf
xchg
je,pn
loop
ret
rcl
call
cltd
mov
ret
enter
jecxz
xchg
adc
mov
cmpsl
sbb
mov
mov
adc
rcl
mov
sahf
repnz
mov
das
pushf
adc
add
ret
cmpsb
or
push
push
and
ret
mov
xor
mov
inc
imul
shrl
sti
lods
faddp
in
nop
push
mov
mov
rorl
cwtl
jnp
enter
mov
test
mov
mov
rorb
sub
inc
in
les
loope,pn
in
xchg
sub
mov
inc
dec
cli
jl
pop
xchg
mov
mov
adc
adc
xchg
mov
push
dec
cmp
xchg
mov
cmp
loopne
xchg
idivb
mov
mov
xchg
into
xchg
ret
test
mov
mov
clc
les
and
mov
xchg
pop
and
push
mov
cwtl
pop
mov
push
mov
les
lods
insl
mov
mov
jmp
pop
cmp
enter
pop
clc
pop
xchg
repnz
sbb
ret
pushf
test
xchg
vmovups
mov
test
lock
shll
es
out
rcrb
xchg
ds
fnop
pextrw
mov
fnstenv
pop
xchg
outsb
mov
test
xchg
pop
lcall
mov
add
xchg
cmp
int3
sub
les
push
stos
xchg
xchg
fdivs
xchg
adc
mov
test
lret
cmp
ljmp
xchg
ret
push
nop
ret
xchg
js
scas
add
mov
jp
or
test
lds
cmp
orb
rcr
xchg
jbe
mov
sbb
xchg
mov
dec
outsl
jnp
cmp
and
mov
rclb
xchg
pop
add
mov
mov
adc
and
mov
xor
test
clc
or
xchg
out
mov
insb
subl
je
ret
mov
xchg
or
dec
sub
fwait
mov
pushf
push
push
pushf
add
mov
outsl
iret
mov
mov
nop
pop
push
xchg
sahf
inc
inc
loopne
or
add
les
mov
call
mov
mov
sub
shrl
jb
movsl
fstpt
nop
in
xchg
mov
add
mov
fs
or
sub
sub
sub
xchg
stos
xchg
and
mov
xchg
lods
lods
aas
fwait
out
shll
popf
inc
arpl
insb
push
mov
jns
cmpsb
cmp
push
push
cs
mov
dec
addb
xchg
test
adc
add
pusha
fs
mov
test
xchg
fidivl
mov
inc
jecxz
shrl
mov
push
mov
add
cwtl
mov
push
xchg
rol
test
out
andl
mov
enter
lock
sub
push
xchg
ret
sbb
adc
movsl
inc
mov
mov
jecxz
mov
dec
test
and
rol
sbb
jbe
sarb
mov
mov
xor
xchg
mov
test
xchg
sbb
or
add
jbe
push
lods
mov
mov
or
dec
push
and
xchg
xor
rolb
xchg
sub
les
lods
pushf
popa
xchg
push
xchg
add
arpl
mov
xchg
enter
sbbl
jle
inc
rclb
mov
mov
or
test
adc
les
or
xchg
repnz
loopne
aam
lret
les
je
mov
pop
mov
or
xchg
add
mov
or
test
pop
adc
les
or
xchg
adc
mov
or
iret
dec
fs
mov
mov
enter
mov
or
xchg
movsb
enter
mov
mov
push
or
movsb
push
enter
mov
or
nop
pop
mov
enter
mov
or
xchg
mov
cmpsb
lds
jno
push
mov
dec
mov
or
xchg
shlb
mov
rolb
movsb
sub
push
adc
mov
or
xchg
shlb
mov
mov
push
or
movsb
sbb
push
adc
mov
or
and
dec
or
xor
mov
or
xchg
mov
adc
adc
mov
mov
sub
mov
pop
or
inc
movsb
cmp
sub
adc
add
lock
rclb
cmpsb
adc
add
dec
movsb
ds
add
dec
mov
adc
mov
or
les
ljmp
int3
cmpsb
rorl
push
les
or
mov
mov
cmp
dec
or
sbb
lock
mov
enter
mov
or
jne
xchg
adc
lret
xchg
ljmp
mov
or
pusha
movsb
jbe
test
mov
or
test
pop
adc
cmp
sub
or
xchg
mulb
mov
in
jns
mov
dec
xchg
xor
mov
or
enter
js
adc
cs
or
add
mov
or
ja
adc
xor
or
xchg
push
movsb
cld
leave
jl
clc
mov
mov
ret
fcoml
or
push
mov
or
movsb
mov
pushf
stos
xchg
mov
or
and
mov
rorb
scas
mov
in
enter
mov
or
push
xchg
enter
mov
loopne
mov
adc
or
adc
les
sub
sbb
out
mov
cmp
pop
pop
enter
mov
mov
or
or
out
xchg
jbe
int
inc
pop
lods
add
andl
aam
pop
xchg
jo
cltd
lcall
or
dec
mov
xchg
and
adc
mov
xor
sub
mov
movsb
add
xchg
mov
xchg
push
push
xchg
or
in
out
or
xchg
lock
icebp
enter
mov
or
xchg
clc
movsb
stc
enter
mov
or
xchg
add
mov
or
xchg
or
or
or
enter
mov
or
enter
mov
or
enter
mov
or
enter
mov
or
enter
mov
or
enter
mov
or
enter
mov
or
inc
movsb
inc
enter
mov
or
dec
movsb
dec
enter
mov
or
push
movsb
push
enter
mov
or
pop
movsb
pop
enter
mov
or
data16
addr16
mov
or
outsb
movsb
outsl
enter
mov
or
jbe
ja
js
jns
jp
jnp
or
jle
jg
push
in
sahf
enter
mov
or
xchg
movsb
or
mov
or
jb
mov
adc
jecxz
out
xchg
or
mov
or
push
push
mov
shl
or
xchg
js
sbb
or
imul
lods
mov
or
xchg
or
mov
or
jp
mov
in
mov
mov
or
xchg
sbb
mov
or
mov
sbbb
mov
or
xchg
sbb
mov
adc
rcll
mov
or
xchg
and
mov
out
adc
in
ror
adc
mov
or
xchg
dec
movsb
pop
enter
adc
xchg
mov
or
xchg
jmp
adc
mov
or
pop
movsb
insb
enter
adc
cmp
lock
out
jmp
pop
fnstsw
out
mov
dec
jno
iret
out
xchg
adc
sub
out
negb
sbb
pop
aas
lahf
repz
out
in
mov
sub
ja
aas
shr
bnd
mov
in
shlb
jecxz
in
imul
jg
out
test
ret
sti
loope
xlat
inc
inc
in
imull
test
ror
cmc
ja
jmp
aam
out
shl
ret
call
pop
jmp
loop
push
aam
in
pop
repnz
and
insb
hlt
repz
xchg
and
cmpsb
lock
iret
loop
sahf
jecxz
repz
das
adc
test
repnz
pop
xchg
push
ror
mov
and
xor
mov
lock
shr
cs
repz
popa
int
aaa
movsb
ds
xor
xor
jne
inc
out
cmp
jecxz
cmc
cli
rcll
rorb
in
cmpsl
xchg
lret
and
and
sub
shlb
add
push
test
xlat
dec
sahf
jmp
test
arpl
leave
aam
mov
sub
les
xchg
and
or
fabs
out
rorl
pop
aad
lcall
mov
rcll
lock
shr
dec
mov
cmc
xchg
clc
xor
jnp
cmp
dec
sub
jmp
xchg
div
cmp
sub
mov
rcrl
push
push
int
test
out
in
pop
cltd
int3
in
sub
mov
lcall
ljmp
or
imul
jmp
sbb
and
or
push
jl
pusha
nop
adc
roll
lcall
int3
push
mov
adc
push
mov
add
mov
in
lds
xor
jmp
cwtl
or
mov
loop
cmpsb
jmp
pop
lahf
dec
sub
outsb
ljmp
cmpl
in
mov
push
dec
add
or
sub
call
out
in
leave
sbb
out
mov
sti
mov
cmc
push
rol
pop
adc
clc
in
loope
mov
shl
add
lcall
mov
ret
xchg
aad
in
in
ja
loopne
adc
lret
pop
adc
popf
cwtl
sbb
push
shll
sbb
lret
rolb
aam
ss
daa
dec
repnz
aaa
ss
dec
mov
sbb
pusha
mov
mov
lods
mov
test
inc
shrb
stc
adc
sbbl
mov
mov
pop
xor
push
adc
xchg
mov
adc
or
stc
orb
fisttpll
inc
push
mov
rol
xorl
or
and
cmp
fiadds
mov
mov
mov
push
ja
dec
mov
sbb
cli
push
mov
jecxz
in
mov
orb
xor
xchg
inc
push
daa
out
bound
mov
jbe
mov
adc
adc
out
xchg
xor
jae
push
jnp
add
js
jo
mov
push
out
mov
lea
mov
mov
and
xorl
mov
add
sbb
mov
pusha
xor
stc
adc
and
jg
or
popa
test
adc
push
mov
sbb
xchg
into
cmp
ja
fwait
pop
mov
pop
test
subl
inc
data16
leave
cmp
push
iret
enter
mov
loope
leave
sarb
or
mov
xadd
xchg
cmpsb
ror
adc
test
adc
js
imul
mov
in
loopne
push
inc
and
cmp
hlt
adc
jno
stos
in
adc
push
lret
fadds
test
insb
add
popa
imul
mov
fists
shrb
add
mov
mov
je
insb
imul
xor
add
test
xchg
ds
cmp
or
sub
and
aas
jb
ret
call
out
int3
clc
adc
jno
sbb
in
xchg
xchg
xchg
jbe
mov
clc
fstl
jp
jl
mov
push
push
xchg
jae
shrl
or
dec
cmp
mov
push
sub
sbb
in
and
add
imul
add
test
mov
repnz
shlb
lock
mov
adc
xchg
adc
add
shl
jns
mov
mov
push
iret
adc
popa
mov
mov
mov
fs
stos
mov
pop
xchg
xchg
addl
mov
lds
mov
loopne
repz
mul
lock
andl
out
jmp
add
mov
xor
dec
cld
jg
or
cmp
or
leave
dec
jb
sub
xchg
or
mov
mov
shrb
inc
mov
and
mov
jge
les
mov
mov
ret
mov
enter
sbb
cli
mov
inc
xorb
and
vshufps
mov
and
es
test
fisubs
xorl
jo
xor
dec
mov
mov
call
hlt
out
fsubp
pop
fs
inc
arpl
fs
mov
xchg
iret
sarl
out
mov
in
lea
pop
and
sbb
test
inc
xchg
cmc
pop
xor
sbb
sub
iret
nop
cmp
fldenv
movsl
inc
cmp
sbb
pop
ds
push
test
jmp
and
rol
or
add
lret
orl
mov
fmuls
movsb
lock
xchg
js
inc
mov
stos
nop
cwtl
dec
lahf
test
andl
pushf
mov
jl
dec
rcrb
ret
enter
dec
addl
dec
mov
call
rcr
in
das
or
inc
aam
xorl
mov
add
sbb
mov
repz
pop
and
mov
test
inc
ljmp
repz
orb
or
mov
add
cmpl
pushf
nop
cmpsb
lea
adc
movsl
mov
clc
sbb
xchg
mov
stos
adc
scas
xchg
or
pop
pushf
cmpb
in
sbbb
inc
cmp
cmpb
ret
sbb
sbbb
or
fmulp
sbbb
repnz
popa
pop
hlt
addb
xchg
dec
int
cmp
insl
rclb
ret
popf
pop
testl
dec
repnz
push
loop
sbbb
into
fistpl
imulb
aad
mov
nop
imul
cld
or
jmp
sub
into
jne
cmp
lea
in
jg
loopne
mov
outsl
lds
imul
test
jle
xlat
mov
pushf
outsb
lods
mov
andb
movsb
sbb
and
faddl
sbb
lret
pop
popa
dec
stos
cmp
dec
je
andb
iret
clc
inc
pop
jp
sub
mov
repnz
in
sbbl
or
clc
jae
cmp
pop
xor
adc
pop
loop
push
insb
testb
jo
incb
outsb
les
lock
out
sbb
insw
inc
xor
sub
adcb
xor
adc
mov
repz
addb
arpl
andb
cs
inc
in
addl
pop
add
sub
mov
fwait
aaa
cmp
test
icebp
nop
test
aas
adc
xchg
nop
sbb
shll
xchg
vmovdqa
orb
inc
testl
jg
outsb
mov
push
mov
sti
pushf
sub
add
cmpsl
fdivp
mov
or
lods
xorb
pop
mov
repnz
jns
test
js
mov
data16
mov
orb
lcall
shlb
sub
mov
pop
xlat
adc
cmpb
xchg
shll
sub
cmc
jo
andb
nop
mov
or
in
mov
fwait
jecxz
sbb
sub
pusha
pushf
int3
add
push
out
add
imul
shrl
cmpb
nop
scas
subb
dec
xorl
mov
mov
mov
into
rorb
jg
stos
cs
and
mov
xchg
mov
jecxz
aam
mov
std
sti
sub
dec
fisubrl
mov
fists
sub
sbb
cmpsb
jo
add
mov
and
mul
fscale
int3
cli
xchg
adcb
loopne
fs
cli
repz
xchg
push
sar
lahf
mov
xor
orb
mov
pop
movsl
orb
add
push
andb
push
js
pusha
in
sbbb
sbb
sahf
push
mov
repz
sti
icebp
pop
je
jbe
push
push
dec
stos
and
insl
inc
rcrl
mov
mov
pop
into
cmpb
fstps
out
sbbb
nop
mov
outsb
jo
movsb
out
sbbb
adc
sbb
mov
movswl
cmp
xchg
icebp
iret
bound
fadds
sbbb
push
out
sbb
xorb
xchg
aad
ret
mov
inc
mov
xchg
and
sti
pushf
bswap
subb
lret
rorl
push
into
cmp
and
sbbl
jbe
es
jmp
pop
adc
fisttpll
jp
sbbb
std
mov
sbbb
aas
add
adc
fcoms
fisubrl
push
lods
ds
clc
popf
adcb
mov
add
out
fs
fs
sbbb
mov
mov
dec
lret
sub
adc
dec
add
nop
and
push
cltd
scas
and
les
int
rolb
rolb
mov
ret
xorb
hlt
js
add
sbbb
addr16
push
cmpl
jns
loopne
or
sahf
inc
je
jl
cmp
mov
lahf
dec
faddp
jmp
test
scas
ficompl
arpl
lods
xorb
adc
cmpb
clc
add
shl
adcb
call
mov
in
jno
add
xor
lds
add
or
mov
pusha
loop
sbb
dec
xor
mov
add
mov
or
mov
roll
in
ret
xor
push
adc
pop
repz
mov
adc
insl
stc
mov
popf
lret
cmp
jbe
mov
cwtl
jae
xchg
in
dec
loop
imul
subl
ret
adc
rolb
push
mov
cmp
fadd
or
or
stos
mull
fistps
into
cmpl
mov
cmp
jno
lds
xchg
add
inc
cltd
out
xchg
jl
subb
push
xchg
movsl
push
push
xor
stos
mov
adc
or
fidivs
dec
xchg
push
sbb
mov
inc
jno
cli
sub
cmp
rorb
loopne
lds
xor
test
adcb
aas
data16
negb
mov
test
adc
push
xor
test
arpl
xor
jns
pop
xchg
push
addb
xchg
xchg
aas
mov
cltd
xchg
lods
sbb
jo
inc
adc
outsb
sbb
stos
lock
outsl
test
sub
add
subb
repnz
bound
adc
in
stos
decb
ret
xor
add
xchg
inc
inc
lock
xchg
cmpb
bsr
fadds
xor
loopne
cmpb
xor
subb
lret
pop
nop
adcb
aad
adc
xor
sbb
inc
dec
jp
shl
clc
subb
dec
outsb
or
and
fdivs
imul
mov
mov
xor
lea
scas
or
fucomip
in
and
mov
xor
sbb
arpl
xorb
push
cs
loop
je
sbbb
sbb
xchg
push
lods
push
adcb
fistps
mov
faddl
lea
repnz
repz
and
jne
push
jl
cmpl
and
rolb
sbb
orl
stos
andb
iret
movsl
jle
jns
fidivs
jecxz
movl
xor
or
add
mov
addb
jae
adcl
aad
sbb
adc
cmc
add
mov
clc
outsb
lods
pop
jecxz
mov
mov
sti
mov
jb
inc
fmull
and
loopne
out
inc
sbb
cs
subb
jmp
sbbb
pop
or
push
rolb
dec
push
in
gs
mov
andl
inc
out
add
shll
sarb
jp
fistpl
inc
cmp
and
hlt
cld
xchg
adcl
inc
std
mov
repnz
mov
mov
xor
sbb
push
sbbl
add
inc
push
xlat
mov
shll
pop
dec
sub
lahf
push
sub
and
inc
out
scas
and
scas
pushf
sub
adcb
dec
gs
icebp
lea
lahf
xchg
push
stc
mov
jmp
xor
test
inc
aam
cwtl
pushf
cmp
popf
dec
xchg
loopne
out
xor
das
ss
cs
incl
fiadds
sbb
mov
cmp
jmp
movsb
andb
aad
cmpsb
push
subb
out
xchg
or
sbbl
mov
shrb
out
add
pop
subl
mov
xchg
test
fistl
jl
je
test
dec
sub
push
xchg
pop
xchg
mov
outsl
xor
and
sbb
add
int3
inc
adc
pusha
addr16
test
pop
iret
scas
ret
in
aad
mov
in
test
push
subb
mov
adcb
xchg
cmp
sub
mov
shll
fistps
cmpsl
inc
addb
xchg
adc
popa
pop
test
push
inc
fs
cmp
push
subb
cmp
dec
insl
out
mov
adc
addl
test
cmpsb
mov
scas
sbb
loopne
add
rcll
iret
and
bound
or
cmc
xchg
xorb
and
add
lods
add
sbb
mov
fsubrs
add
xor
cmp
jb
outsb
cmpl
add
std
inc
movsl
mov
aam
push
ljmp
adc
add
jne
mov
fsubl
jge
jo
dec
dec
pusha
fadds
insb
mov
pop
adc
fsubrs
dec
jbe
and
mov
dec
cmp
out
rorb
sub
xorb
popa
lock
sub
sub
out
ss
in
mov
scas
data16
mov
les
mov
cmp
in
xchg
popa
add
push
fldl
out
imul
ss
lock
cmp
mov
inc
fbld
pop
cmpb
inc
flds
rep
sarb
push
bound
fisubl
cmp
aas
cmp
or
call
mov
fwait
testb
lahf
into
imul
icebp
out
adcl
push
jl
je
pop
push
addl
cmpsl
cmpb
xor
pop
dec
push
movsb
adc
mov
cmp
scas
dec
cmc
dec
orl
insb
push
push
sub
ror
xchg
mov
subb
sbb
xchg
loopne
jl
inc
movsb
sahf
aas
sbb
inc
fidivrs
inc
add
das
mov
mov
cmp
xor
pop
test
mov
cmpl
inc
sbbb
dec
mov
xchg
mov
sbbb
enter
leave
mov
cwtl
pop
fimuls
addb
iret
jp
cmp
ficoml
add
test
and
mov
ja
push
pusha
mov
xchg
pop
faddl
pop
mov
pop
pop
in
fnstcw
inc
and
jg
popa
mov
roll
insl
sbb
inc
mov
mov
xchg
and
xchg
xor
inc
mov
repnz
adc
xchg
or
xorl
stos
lahf
aam
cmpsl
inc
and
jle
mov
cmc
adc
xchg
adc
xlat
mov
subl
repz
xor
push
and
cltd
scas
add
mov
hlt
test
dec
pop
jg
ljmp
pop
movsl
js
fisubrl
out
imul
mov
adcb
shl
and
xor
jbe
xchg
mov
pop
sbb
adc
push
roll
mov
scas
add
loope
orb
pushf
mov
mov
pusha
movsl
xlat
ficoms
mov
adc
lds
lahf
jle
jns
add
xchg
jnp
and
mov
or
addb
sub
xor
adc
sbb
fdivrs
adcb
inc
cmp
sahf
shlb
gs
cmpb
in
sbb
rorb
idivb
jl
adc
fildl
push
and
scas
jbe
mov
in
sub
mov
dec
out
loopne
inc
nop
cltd
out
addb
pusha
or
in
inc
into
sbb
jle
pop
adc
xor
xor
or
adc
xchg
test
lock
fwait
clc
cli
lahf
xor
lds
lcall
sub
adc
daa
icebp
cmc
cs
pop
andb
mov
stos
icebp
js
sti
sub
fildl
or
fisttps
xchg
adc
pusha
out
xor
enter
and
lock
shrb
inc
popf
push
mov
mov
xchg
lock
push
sub
fsubrs
cmp
inc
mov
fmull
test
scas
sti
jbe
subb
cmpsl
rol
stos
xorb
ret
shlb
inc
jbe
mov
mov
fiadds
bound
mov
icebp
and
dec
stos
scas
fdivr
jp
mov
or
inc
mov
pop
cld
shl
inc
sub
xchg
ud1
je
xor
or
mov
call
shl
mov
or
sub
push
mov
adcb
add
loopne
jno
push
pop
cmp
notl
push
mov
cmp
mov
orb
jle
pushf
inc
out
xchg
ja
sbb
arpl
add
cmp
mov
mov
jnp
jmp
xor
mov
movsb
and
aaa
cmp
adcb
jno
cmp
pusha
add
ss
addb
es
dec
fs
orb
adc
sarb
jmp
sahf
lods
push
cmp
dec
jnp
xor
mov
pop
jb
cmp
movsl
pop
xor
inc
xchg
aas
mov
data16
out
fstl
xchg
sbbb
fs
xorb
adc
xor
loope
xchg
ret
sub
stos
orb
xor
push
pop
mov
inc
into
mov
inc
fcmovnb
int
adc
mov
or
popl
bound
jne
add
gs
jle
add
mov
lret
mov
ja
aas
lcall
cltd
bound
cmc
test
pop
inc
xchg
and
lock
mov
xorb
pop
subl
enter
xchg
mov
jge
arpl
les
addb
pop
test
ds
cmp
jo
fisttpll
jno
cmpb
out
pop
lods
dec
adc
inc
scas
das
mov
andb
push
push
dec
in
mov
adc
mov
jne
int3
cld
jne
and
hlt
adcb
sbb
xchg
xor
add
xor
add
out
pop
mov
adc
xchg
stc
mov
jmp
pop
add
shrb
xor
mov
push
cmp
push
mov
leave
or
cli
mov
inc
inc
aaa
addb
not
mov
add
sarl
sbb
cmc
leave
pop
js
sbb
dec
sbb
insb
outsb
sub
jecxz
popl
int
cmp
gs
cs
sub
ficompl
test
hlt
subb
mov
mov
sub
ljmp
xorb
cltd
rcrl
and
push
movsb
push
xor
pop
mov
inc
rcrl
je
pop
test
cltd
mov
in
xorb
loope
pushf
sub
xchg
cmp
scas
orb
xchg
out
popa
push
add
cmp
sbb
test
xchg
adc
pusha
dec
jb
mov
push
arpl
in
subb
pop
push
cmpl
pop
adcb
pop
ret
mov
fmul
sub
dec
add
mov
xchg
and
inc
je
push
jae
js
call
scas
ja
stc
inc
pop
adcl
ljmp
repnz
sbb
cmp
adcb
xchg
incb
lock
test
sahf
sarb
cs
adc
dec
cltd
sbb
icebp
sbbb
addl
mov
sub
movsl
push
pop
mov
inc
pushf
inc
sub
sbb
cld
sub
scas
mov
lods
xor
pop
bound
int
pop
push
dec
mov
pusha
loopne
das
push
cld
js
leave
and
xor
in
sbbb
push
sbbb
and
inc
add
dec
in
mov
mov
cmp
fldt
xor
out
lea
jmp
popl
dec
cltd
xor
lock
mov
fcoml
out
jb
dec
je
pop
xor
subb
negb
rcrb
sti
ja
scas
loop
movsb
aam
inc
and
sbb
and
and
in
lret
mov
es
jns
sub
add
loopne
scas
jl
sbbb
call
outsl
andb
fcmovbe
subb
mov
js
out
adc
inc
insl
or
jnp
insb
jno
jb
xorb
iret
mov
loope
leave
subb
setb
xor
inc
adc
or
sub
or
sub
mov
addr16
mov
ret
sbb
dec
adc
and
repnz
sub
push
jl
andb
or
subb
les
jge
and
rcrb
les
or
roll
push
out
bound
mov
in
lret
arpl
fisubrs
pusha
push
and
test
aam
adcb
and
xorb
cwtl
test
mov
add
jb
subb
adcl
mov
and
push
popf
lcall
std
mov
mov
sub
mov
cltd
inc
mov
xchg
xchg
cs
sub
cmpb
sahf
inc
popa
ret
mov
xor
mov
push
aam
cmp
popa
orb
cs
and
push
outsl
lret
inc
or
mov
pushf
fisubs
mov
inc
data16
xchg
inc
lock
in
lods
sbbb
imul
loope
sub
push
cmp
dec
xor
int
cmc
jnp
js
xchg
popf
mov
mov
xchg
or
lea
in
mov
sbb
orl
cmp
add
dec
fdiv
sbbb
sub
cmpb
jmp
sbbb
adc
inc
cmp
mov
jb
sbb
adc
jle
push
cmp
and
cmpsb
adc
xor
fiaddl
icebp
pop
mov
andl
xchg
adcb
mov
add
and
jmp
jmp
loop
dec
arpl
fidivrl
into
mov
js
mov
adc
loopne
dec
addb
jno
jbe
inc
add
mov
push
xorb
add
movsb
add
js
mov
loopne
and
in
and
addb
pop
xchg
adc
stos
fmuls
mov
sarb
xchg
je
orb
pop
cld
pusha
mov
js
mov
ja
sarb
adcb
test
stos
orb
sti
or
push
ss
add
dec
cmpsl
push
movsb
or
jae
les
incl
pop
daa
fildll
add
add
sbb
in
ret
lods
push
idivb
adcb
mov
int3
outsl
shll
mov
stc
in
rorb
adc
test
jo
pop
cmpb
out
pop
push
dec
sub
dec
xor
shll
mov
aas
movsl
inc
xor
icebp
mov
lret
rol
idivb
test
adc
clc
mov
xchg
inc
mov
loop
ret
jge
subb
mov
rolb
adc
test
jne
in
mov
clc
pop
xchg
mov
addb
insb
subb
xlat
repnz
or
out
fcoml
mov
cmp
cs
mov
pop
mov
dec
jmp
inc
mov
mov
inc
daa
mov
inc
das
mov
add
adc
enter
xchg
xor
call
lods
mov
sub
faddl
inc
mov
lock
popa
jo
addb
rorb
loope
in
out
cltd
mov
arpl
pop
xor
adc
add
mov
into
lret
imulb
loope
cmpsb
in
test
mov
pusha
aam
dec
mov
scas
mov
or
jl
pushf
mov
dec
xor
mov
js
fisubl
sbb
pusha
shl
mov
arpl
idiv
push
mov
in
insl
and
sbb
std
cmp
adc
jo
dec
lret
dec
sbb
jp
and
sub
stos
dec
xchg
jo
pusha
mov
addb
fists
ret
sbb
pushf
xor
daa
jg
movsl
dec
and
add
mov
imul
out
push
pop
mov
ret
pop
inc
and
cmp
mov
fs
mov
xor
in
sub
sbb
aam
ja
mov
loopne,pt
push
addb
add
xorb
cmp
mov
pop
into
test
and
xchg
sbbb
push
outsl
sbb
fmul
popf
fistpl
xchg
stos
pop
js
lahf
sbb
add
push
ds
cli
sub
add
add
adcb
push
cmp
shll
outsb
cmp
dec
add
or
mov
xor
and
shrl
xchg
push
dec
xchg
mov
dec
insb
movsl
jnp
jmp
outsl
adc
ljmp
pusha
in
pop
sub
lahf
ficoms
bound
sbbb
or
loopne
adc
rcrl
mov
cmpl
inc
adc
or
dec
out
orb
sub
sbb
dec
xchg
fiadds
push
mov
andb
cmp
or
testb
aad
pop
mov
pop
fistpll
add
js
lret
mov
fst
adc
push
mov
and
movsl
hlt
js
xor
xchg
mov
ljmp
cwtl
cmpsl
push
xchg
imul
fisttpl
test
cld
aad
push
adcb
xchg
clc
subb
test
xchg
sbbb
inc
cltd
insl
lahf
mov
lds
icebp
out
mov
mov
das
mov
lock
cmp
fnstsw
pop
xorb
add
mov
push
test
cmp
popf
orb
adc
adc
add
xchg
add
out
ror
jae
jne
adcl
dec
and
hlt
xor
mov
push
cmp
add
in
fistpl
orb
mov
aaa
dec
cld
adc
pop
shlb
or
add
pop
test
jmp
inc
inc
insb
inc
loopne
mov
add
fwait
icebp
jecxz
pop
out
in
aad
arpl
add
int
addb
mov
xor
add
adc
pop
test
loopne
jg
insl
mov
jmp
xchg
rolb
addl
jmp
out
adc
repz
cmpb
pushf
ss
push
leave
cmp
mov
sbb
mov
arpl
xor
dec
sahf
es
roll
xor
ljmp
inc
in
ss
xor
adc
add
jg
sbbb
dec
add
push
push
rolb
dec
xchg
addb
and
insl
add
ja
pop
es
jnp
jbe
adcb
cmp
fcompl
out
cmp
adc
inc
jb
sti
cmp
insb
movl
test
mov
mov
mov
jbe
subb
call
xchg
mov
ljmp
dec
orb
pop
inc
fs
test
sub
cmp
addb
loopne
popa
fs
andb
adc
adc
xor
add
sub
pushf
mov
xchg
and
std
clc
xchg
mov
sub
loopne
int
in
mov
xchg
or
pusha
mov
dec
cmp
cmp
inc
dec
bound
inc
mov
pop
jb
mov
imul
jae
cmp
daa
xchg
jo
addr16
pusha
jle
test
add
push
mov
mov
scas
push
test
pop
xchg
aad
ret
repz
adc
mov
jmp
idivl
mov
pop
addb
cmpsl
mov
push
jge
js
and
stos
inc
mov
pop
stc
sbb
push
jb
dec
hlt
pop
inc
mov
clc
subb
mov
mov
in
jmp
movsb
or
pop
adc
data16
lock
cmp
divl
and
cmp
dec
mov
xor
and
ret
pop
inc
inc
subl
dec
je
cmp
into
cmp
leave
addl
push
push
adc
mov
mov
stc
jle
and
cmp
stos
jl
fwait
ret
and
or
shrb
cld
pop
ds
xchg
shrb
adc
mov
cs
flds
test
and
push
jmp
push
ljmp
insl
or
pop
adcb
pop
fiaddl
dec
mov
pop
js
subb
xor
aad
stos
mov
dec
jbe
cmp
ficoml
or
fcomip
or
add
xchg
push
pop
mov
dec
xchg
xorb
mov
aam
movsb
in
sub
add
jmp
and
push
xor
jge
dec
bound
dec
js
jl
pushl
or
test
xchg
mov
out
jge
call
aaa
jecxz
mov
outsb
popf
mov
push
lret
mov
add
jne
vpavgb
ss
je
out
add
xchg
xchg
out
and
xchg
mov
inc
adc
xacquire
jo
lahf
and
cmp
ja
and
adcl
mov
lock
mov
leave
sub
aas
push
adc
jl
sbb
aam
popf
orb
hlt
pop
xchg
sti
mov
inc
in
adc
pushf
test
cmp
pop
loopne
insb
jne
inc
in
mov
push
insl
mov
cmpb
test
js
fs
and
xchg
xor
cmpb
mov
cmp
jns
roll
iret
mov
test
fcomi
aaa
push
popf
movsl
add
js
mov
adc
jl
scas
scas
push
orb
xchg
mov
push
cmp
hlt
out
das
les
adc
jnp
inc
dec
cwtl
sbb
xor
roll
enter
cmpb
mov
xor
jle
dec
add
in
mov
sbb
push
xorb
insb
jecxz
xor
or
orb
outsl
jb
hlt
call
mov
jo
mov
xlat
jno
fldl
jo
andb
mov
xor
sbbl
adc
cltd
popf
repz
mov
add
aas
push
loopne
addr16
mov
push
call
ja
ljmp
jne
rol
popa
in
inc
mov
js
dec
in
clc
loope
inc
adc
into
cld
nop
movsb
pop
addl
fadd
popa
adc
push
stos
xchg
jle
sbb
sbb
jp
jecxz
idivl
push
dec
fsubs
repnz
pop
arpl
mov
adcb
pop
mov
and
xchg
int3
adc
push
aaa
sbb
mov
in
mov
mov
lcall
cltd
inc
out
and
sbbl
test
pop
mov
inc
jge
in
mov
inc
out
inc
dec
roll
mov
xchg
sbbb
jns
sbb
mov
mov
sub
jp
xor
xor
push
jo
push
xchg
inc
popf
das
jge
xchg
into
leave
dec
cmpsl
arpl
jb
pusha
adc
pop
xor
cwtl
ds
lret
mov
iret
jmp
daa
xor
xchg
inc
cmpb
call
xchg
pop
dec
outsb
push
subb
cmpb
arpl
fildl
lock
flds
pop
movsb
add
mov
and
cld
fildl
in
sub
scas
jp
clc
xchg
bnd
mov
mov
pushf
mov
out
outsl
mov
addb
rcrb
push
out
add
out
negb
dec
and
lcall
andb
aam
cli
adc
sbbb
aad
inc
jo
hlt
cld
int3
lret
test
adcb
xor
xorb
jae
orb
aaa
push
int3
sahf
add
loop
addb
and
fidivs
jnp
rcrl
dec
and
cs
mov
clc
mov
dec
inc
out
pop
sub
jbe
pop
add
push
fwait
push
mov
insl
orb
in
add
movsl
jge
mov
mov
imul
jg
add
fwait
add
fdivrs
pop
mov
fsubl
cmpsl
adc
mov
xorb
inc
sub
hlt
mov
jl
jp
enter
shll
test
cld
lds
out
je
loopne
lret
ret
shll
mov
andb
lds
xor
push
adc
mov
push
adc
test
aaa
je
xchg
test
shlb
mov
xchg
iret
push
lret
inc
mov
mov
fisubrl
imul
adcb
ja
adcb
xor
sbb
jg
int3
shrb
sarl
addr16
xlat
adcl
movsb
dec
punpcklbw
pop
test
cli
dec
cmpsb
inc
xor
movsl
jae
bound
add
xorl
repz
or
stos
inc
xor
stos
inc
xor
cmpb
pusha
fsubl
sub
fwait
mov
add
test
mov
adcb
aam
out
iret
stos
adcl
pop
sbb
int
sarl
push
adc
cltd
enter
scas
cmc
movsl
jbe
adc
fisubrs
divl
sub
ljmp
sbb
lret
daa
pop
out
xchg
or
mov
jle
mov
mov
icebp
sbbb
adcb
lcall
sbbb
pop
jecxz
int3
clc
or
sarb
cli
popf
sbbb
gs
sar
mov
jmp
sbb
dec
into
jnp
inc
cmc
jle
subb
xchg
adc
cmp
sub
fadds
or
insb
fiadds
inc
cltd
mov
cmpb
icebp
pop
adc
lahf
xchg
scas
in
xlat
mov
mov
int3
sarb
cmp
xor
mov
mov
mov
hlt
push
push
jge
ret
sub
xor
xchg
cltd
div
int
roll
xchg
test
adcb
push
mov
jo
hlt
dec
sub
mov
jb
and
xchg
jecxz
stos
shl
sti
or
cmc
ret
or
loopne
mov
jns
mov
fmull
decb
and
push
repz
addr16
lods
movaps
mov
add
xorb
and
inc
or
nop
je
jle
test
push
popa
and
and
mov
xchg
xlat
cmpsb
subl
jl
inc
addl
subb
mov
xchg
cmpl
push
dec
jp
int3
pop
lret
adc
jmp
int3
mov
sbbb
addl
xchg
addb
leave
and
adc
pop
pop
mov
adc
inc
aaa
movsb
adc
pop
cmp
test
push
mov
dec
addb
or
adcb
ja
popf
aam
loope
jno
jb
pop
cmp
jno
ds
pop
lods
addl
inc
arpl
push
cltd
pop
xor
loop
jbe
and
pop
adcl
ss
jmp
addb
jmp
xor
fwait
dec
movsb
inc
push
add
push
out
ret
cmp
int
mov
inc
cli
shlb
inc
dec
mov
push
in
cmp
xchg
xor
jo
subb
addr16
test
fs
outsb
stc
mov
mov
add
inc
clc
push
mov
push
out
popf
xchg
push
xchg
into
push
mov
adc
xchg
pop
and
rorl
cmc
push
fistps
pop
add
in
sub
cmp
xor
lods
ss
fiaddl
insl
add
adc
adc
rcrb
add
sbbb
mov
push
addb
jmp
movsl
mov
mov
cmp
sti
add
push
inc
enter
cmpb
cld
sub
push
jp
rcrb
jae
push
mov
lcall
lods
stc
and
fs
dec
orb
pusha
lahf
xchg
jns
leave
repz
mov
fistps
leave
lods
jge
dec
mov
outsl
lock
pop
divl
movb
sbb
xor
enter
popa
mov
sbbb
sub
movsl
mov
iret
xor
aas
jmp
mov
subb
or
sbbb
jo
movl
adc
fdivrl
mov
lret
mov
ss
cmp
and
dec
mov
in
inc
fcomps
fcom
sti
adcb
in
cmp
xchg
push
out
ljmp
pop
add
sbb
popf
adc
mov
mov
dec
pop
push
mov
mov
push
hlt
inc
addb
fnstcw
push
testl
xchg
mov
cmp
subb
cmpsb
xchg
inc
xor
inc
je
or
daa
cmpb
mov
dec
xor
gs
addb
adc
mov
inc
lret
mov
popl
adcb
test
push
mov
xor
les
jnp
lods
sahf
jb
test
scas
jg
push
ret
cmp
sub
andl
dec
cmp
jmp
rolb
sahf
ret
inc
fisubrl
push
loop
dec
lds
daa
xchg
jb
stos
pop
jo
rclb
inc
aas
subb
fld
push
sbb
addb
pop
leave
xorb
and
mov
in
push
xchg
push
iret
pop
sub
jo
andb
push
mov
jg
test
mov
jnp
cmp
inc
idiv
mov
mulb
mov
cmc
lahf
loope
xor
push
cmp
xchg
ja
fistpll
aas
sarb
mov
pop
or
orb
dec
sbb
jb
cmp
mov
jmp
cmpb
cmp
jle
loop
or
cmpsb
push
andb
xchg
dec
or
cmp
lods
mov
add
jge
or
dec
push
xor
push
mov
das
popf
xlat
push
mov
mov
mov
in
das
outsb
arpl
scas
mov
sbbb
xchg
cs
lods
enter
cli
add
movsb
inc
test
sbbl
pusha
popa
sarl
stos
outsl
inc
jl
lea
inc
addb
or
subl
jbe
cmpl
aad
cmp
in
or
and
inc
jne
or
iret
or
outsb
orl
popa
jo
push
sub
negb
mov
mov
dec
clc
jo
subl
shll
bound
out
mov
add
adcb
clc
imul
loope
inc
test
fs
cwtl
andb
lea
cmpb
mov
mov
mov
add
shl
sti
je
loopne
push
test
inc
cmc
fisubrl
inc
lahf
dec
cmpsl
int
fsubrl
push
add
add
je
pop
in
add
or
xchg
test
adcb
push
rclb
addb
gs
dec
outsb
ret
inc
addb
mov
repz
sbb
pop
sub
jmp
jg
lret
sub
subl
sbb
jl
inc
mov
dec
adc
push
pop
cmp
cmpsl
lret
jae
lods
popf
aam
aaa
orl
cs
orb
test
subb
rolb
adc
mov
insb
pop
push
sbbb
jmp
js
add
inc
out
adc
xor
test
aad
mov
push
jno
and
mov
xor
pop
int
out
jnp
cmpsl
lea
mov
xorb
jae
call
cltd
rol
in
ret
add
inc
negl
sub
pop
xor
stc
imul
mov
push
push
pop
push
or
push
and
int
adc
pop
cmpsl
lods
lahf
and
and
loope
and
jl
cli
jge
mov
sub
sbb
cmpb
push
mov
out
lods
pop
in
cmp
xchg
inc
out
jo
aaa
pop
andb
loopne
jnp
adcl
mov
fldl2e
cmp
xchg
popl
ja
mov
dec
mov
mov
lahf
and
sub
pusha
sarl
out
sahf
jno
pop
cmp
cmpb
cmp
dec
filds
xor
jno
paddb
hlt
mov
mov
dec
and
in
mov
inc
hlt
inc
sahf
add
ja
mov
rclb
je
sbbb
ja
xor
int
add
cmp
xor
aas
mov
gs
jecxz
les
mov
pop
add
in
dec
cmp
inc
arpl
jo
cmc
sahf
sahf
push
loop
sbb
ret
pusha
sub
mov
mov
xchg
cmp
sub
jnp
add
fisttpl
std
imul
xorb
call
mov
mov
pop
add
pushf
in
popf
dec
hlt
pop
shrb
xor
xchg
cmp
shl
je
out
ret
in
xor
inc
and
aad
mov
lock
add
pop
loopne
sub
xor
ja
daa
xchg
testb
dec
push
std
xorb
and
andl
fdivs
outsl
adc
pushf
mov
add
xor
inc
pop
xor
into
scas
sbb
cmpb
mov
das
push
mov
jl
dec
mov
orb
and
andl
stc
pop
pop
inc
decl
mov
or
jmp
cmp
push
clc
dec
inc
jne
mov
pop
jns
pushf
test
mov
add
sbb
insb
fcomip
std
xorb
adc
sbb
adcb
pop
das
sbbb
ja
stos
mov
cld
popa
pushf
rcl
mov
pusha
add
pop
addb
insb
jno
add
mov
sbbb
jl
inc
jae
xchg
sbb
insb
fimull
addb
sub
sbb
repz
out
subb
xor
sbb
fbld
addb
test
pusha
std
adc
push
out
es
adcb
ljmp
adcb
mov
in
bound
mov
inc
sub
lods
and
push
pop
cmp
adc
int3
jne
xchg
mov
pop
subb
adc
loope
fs
cmp
sub
cmc
and
adc
dec
rcrl
cmpb
test
add
push
mov
add
add
and
addb
insb
loop
mov
sti
or
pop
push
pop
lcall
adc
pop
adc
inc
xor
push
ja
mov
movsl
adc
push
adc
pop
es
jb
andl
je
or
loopne
jmp
push
insb
loopne
xchg
imul
orb
mov
js
cmc
imul
or
movsl
insb
fcom
addb
dec
lods
dec
inc
int
stos
adcb
push
mov
cmpsb
xor
orb
movsb
inc
cmpb
sub
js
sub
test
out
dec
jno
fadds
mov
andb
test
adc
mov
out
out
jno
pop
xchg
repnz
sahf
sbb
sahf
push
ja
test
bound
add
jno
out
xlat
adcb
or
pusha
jle
stc
stos
icebp
ret
xor
mov
sbbb
pop
mov
lds
xabort
mov
cmp
ret
fisubs
loopne
pop
pop
scas
fstl
bound
pop
xchg
sbb
leave
or
jb
sahf
cmc
mov
xor
roll
jb
stos
sub
aas
popf
and
and
push
outsl
test
pusha
punpckhdq
jmp
cli
push
mov
repz
movsl
mov
pop
scas
cmp
out
in
push
add
ds
xchg
addl
and
leave
sahf
data16
add
push
mov
xchg
jecxz
push
data16
or
sub
hlt
jge
leave
lock
daa
mov
andb
insl
xchg
sbb
out
jno
fcoms
mov
adcb
mov
inc
subb
fs
pop
popa
or
mov
pushf
fistl
jae
andb
dec
sbbb
xor
pushl
inc
lock
xchg
fldcw
enter
loope
mov
sbb
repz
xorb
sahf
das
stc
jno
call
addr16
loope
xchg
test
inc
sub
push
inc
les
lahf
mov
ds
js
icebp
jle
push
sub
xchg
int
stos
out
sbb
cs
jmp
xor
adcb
loopne
mov
cmpb
lret
and
inc
xchg
call
shlb
pop
cs
or
outsl
call
andb
pop
cmp
push
std
and
pop
sbb
adcb
cli
push
andb
cwtl
xchg
pop
xorb
aas
sub
mov
mov
xchg
adc
xchg
sub
roll
sub
dec
loopne
jo
xor
mov
and
fsubl
xchg
addb
gs
xchg
xchg
sti
cltd
inc
dec
mov
adcl
cmp
das
and
adc
test
rcll
pusha
int3
imul
pop
rol
xor
sbb
mov
aam
inc
lods
jne
movsl
add
inc
adc
xor
int3
xor
and
xchg
inc
push
fldcw
repz
subb
mov
mov
inc
arpl
and
jge
mov
subb
mov
jb
push
push
jge
add
imul
dec
pop
dec
adc
push
cmp
mov
mov
ret
cmp
xorb
into
repnz
mov
adc
cmpsb
scas
sub
das
int3
xchg
insb
icebp
sub
lock
fs
dec
cmp
sbb
insb
gs
sub
faddl
subb
dec
bound
cmpb
lcall
dec
lods
jecxz
sub
or
aas
jns
adc
fistps
inc
jg
xorl
push
push
lods
insl
pop
rolb
add
cmpsl
and
dec
and
test
inc
cwtl
js
aad
or
imul
orb
mov
xchg
clc
cmp
adc
je
pop
sbbl
dec
dec
mov
jle
in
adc
ret
icebp
adc
cmp
xor
cmpsl
scas
push
xor
add
add
cmp
sub
pop
andl
dec
mov
addb
das
xchg
cmpb
mov
stc
inc
adcl
pop
push
xlat
xchg
xorl
or
and
adc
ljmp
rcl
popf
mov
mov
sbb
add
push
addb
js
xor
inc
repz
fmuls
dec
popa
push
xchg
mov
test
addb
daa
add
in
repz
xchg
jbe
cmp
jle
xchg
addb
in
stos
stc
pushf
inc
adc
cmp
enter
add
js
mov
inc
pusha
adc
outsb
jae
jle
xorb
jge
sub
lods
pop
dec
popa
in
clc
mov
pop
add
lret
addb
negl
sbbb
ret
rolb
jl
push
dec
cmpl
push
jge
mov
cmp
xchg
jmp
adcb
sub
jns
push
inc
hlt
ljmp
ret
cmp
sbb
jns
mov
rcll
mov
scas
push
mov
jmp
sbb
cmp
add
js
imul
leave
mov
lds
jmp
sub
add
jns
sbb
mov
cld
push
aaa
and
xchg
les
dec
stc
js
subb
adc
ss
dec
add
dec
mov
out
mov
inc
adcb
les
js
mul
mov
pop
ljmp
cwtl
nop
andb
xchg
stos
je
lods
adc
add
imul
adc
sbbb
dec
mov
or
or
mov
adc
outsb
sbb
mov
ds
xor
adcb
inc
push
mov
popf
test
inc
mov
xor
faddl
aaa
clc
mov
mov
adc
addr16
ret
sub
ficoml
push
pushf
jg
or
inc
jl
xchg
mov
cmpb
mov
add
pusha
into
cmp
cmpb
leave
jp
mov
insl
scas
push
popf
dec
sbb
es
xor
loop
pop
subb
cwtl
imul
adc
mov
orb
add
aad
jbe
fidivl
mov
xchg
insb
mov
mov
popa
shrb
mov
lods
cmc
clc
sbb
cmp
fwait
adc
xorb
aaa
jae
add
test
test
cmp
sbbb
aas
dec
sub
call
push
inc
std
push
jno
mov
andb
adc
mov
in
and
push
lahf
push
ret
inc
add
or
outsb
pop
cmpb
push
fs
jmp
stc
loopne
adc
sub
pop
and
es
add
sbb
push
jae
add
push
repz
adc
mov
mov
sbb
mov
jb
lcall
push
orb
sub
imul
jno
inc
cli
add
stos
gs
xchg
inc
pusha
cmpb
xor
in
andb
icebp
adcb
cld
mov
mov
ret
sub
xor
cltd
rcll
push
orb
cli
jnp
jge
xorb
ljmp
mov
ss
xorb
push
out
popf
xor
push
sbbb
xchg
lds
clc
rol
inc
aam
subb
or
push
ret
sub
adcb
cld
jbe
and
das
clc
jmp
in
xchg
pop
xchg
xor
sbbb
push
pop
ljmp
dec
adc
orb
movsl
jp
mov
sub
icebp
scas
xor
mov
jns
push
hlt
iret
in
roll
mulb
sbb
mov
in
dec
cmpb
add
dec
leave
inc
jmp
lds
outsb
andl
orb
mov
insl
int3
sbbl
xchg
enter
add
sbb
mov
insb
xchg
jmp
add
aam
cld
add
out
fwait
rcll
rorb
neg
cmp
bound
cmp
dec
ficomps
or
push
jo
popa
add
movsl
std
subl
mov
add
xor
lcall
fistps
xlat
lahf
xchg
rolb
jmp
popl
mov
jbe
mov
sbb
ret
pop
lock
xlat
xchg
and
aaa
js
orb
test
orb
or
mov
adcb
fs
sbb
xchg
inc
cmc
xchg
jge
arpl
rcrl
stc
mov
jmp
andb
or
shrl
xor
test
sahf
mov
adc
je
push
cmp
jp
addl
push
inc
test
jae
jo
movsb
lock
insl
pop
pop
arpl
mov
push
ret
stos
lea
xor
cmp
sub
jl,pt
cli
xchg
inc
jp
add
out
cwtl
fnstcw
push
adc
aam
adc
adcb
test
jle
in
mov
mov
gs
test
negb
dec
push
or
push
adc
movl
mov
dec
sub
add
jb
inc
dec
leave
lock
xchg
and
jns
jbe
adc
mov
xor
cli
mov
addb
movsl
xor
ljmp
sub
andl
cli
jmp
rcrl
popl
movsl
push
xlat
addb
and
in
mov
and
ficomps
sbb
insl
mov
lcall
cwtl
xor
pop
mov
xor
outsl
in
mov
push
sti
subb
lret
xchg
neg
push
pop
push
outsl
sub
mov
mov
push
sbbb
or
cltd
ret
mov
inc
cli
scas
add
jl
jge
data16
sub
cld
cmpsl
xor
adc
fcos
mov
push
pop
dec
popf
sahf
inc
loope
mov
rol
fs
adc
sbb
lock
mov
pop
xchg
cmp
mov
test
adc
mov
or
xor
lcall
xorl
inc
nop
mov
sub
fwait
sbbl
cmpsb
in
jg
pop
lock
adc
test
dec
dec
orb
and
test
cmp
push
je
jge
dec
rcl
add
xchg
out
mov
sub
test
add
jle
adcb
and
jbe
sahf
mov
push
aaa
xor
jb
std
pop
mov
gs
xor
jle
push
sbbb
add
in
cmp
dec
in
andb
mov
cmpb
repnz
testb
add
push
aad
fcoml
mov
sbb
jae
aas
xor
cltd
call
sbb
in
cmpsb
dec
cmp
jge
fildl
xor
sahf
stc
lahf
or
xchg
rolb
movsb
test
pop
mov
xchg
xorb
outsb
hlt
inc
jmp
sahf
cmpb
sbbb
pop
addl
cmpb
sbb
push
jns
sbb
mov
and
xchg
cmp
cltd
shll
incb
outsb
dec
xchg
pushf
add
orb
lcall
fidivl
insl
orl
sub
mov
stc
lret
sbb
lea
xchg
cmp
ret
pop
movsb
and
cwtd
pop
push
jecxz
cmpb
fisubl
pop
push
xor
jb
inc
rcll
sub
xor
push
out
adc
rorb
pushf
xorl
andl
leave
push
jl
cmp
pop
pusha
test
stos
inc
imul
sbbb
jecxz
cmp
and
add
mov
xchg
addb
idivl
shll
call
sub
test
lcall
js
sbb
inc
jl
pop
dec
mov
mov
subl
cs
gs
lock
mov
xor
out
nop
ja
shll
or
mov
sbb
ss
in
push
xor
cmp
xorb
in
les
rcll
lcall
push
mov
mov
je
or
and
sbbb
arpl
sahf
incl
js
mov
andb
jno
mov
lock
lods
inc
lods
mov
int3
adc
das
mov
mov
ds
fdivs
mov
rolb
adc
or
imul
gs
fmuls
into
subb
loope
and
sbb
out
push
call
mov
in
iret
loop
cmpb
xor
jb
mov
and
ljmp
mov
push
loope
add
xor
orl
int3
fidivs
mov
cli
push
push
inc
loope
add
stos
movsl
adcl
cmp
lods
adc
dec
subb
mov
mov
leave
nop
arpl
push
in
ud0
shl
adc
mov
pop
mov
test
push
in
adcb
or
dec
adc
push
adc
shll
scas
lahf
xchg
push
cmpb
cmpsl
xchg
movsb
jmp
mov
or
jo
call
cmpsl
inc
jne
aad
cmpsb
dec
lods
xor
jecxz
push
aaa
addb
mov
iret
icebp
sahf
loopne
push
loop
ror
push
mov
adcb
in
lods
gs
hlt
fsubs
xlat
andb
loopne
cs
xchg
andb
notl
dec
subl
or
mov
add
cmp
add
jge
sbbb
cmp
clc
ret
add
imul
movsl
or
sahf
das
sbb
add
sti
adcb
pop
push
movsb
xor
inc
adc
and
in
mov
pop
sbb
insl
loope
addl
cmc
dec
mov
xchg
pop
push
addr16
gs
cmp
lea
out
sub
add
cwtl
int
stos
subb
enter
push
adcb
xlat
daa
push
jl
lret
out
pop
push
sti
cmovno
mov
pop
int3
push
mov
dec
jb
addr16
adcb
int3
xchg
sbb
inc
daa
loopne
aam
mov
sub
and
adcb
xorb
or
xchg
adc
andb
inc
sti
pop
jmp
or
sahf
fldl
mov
mov
divl
shlb
xlat
push
aaa
pop
or
cmc
mov
inc
shll
fwait
pop
xor
orb
shlb
xor
pop
cmp
shl
std
mov
dec
add
push
jb
pop
sub
ret
stos
xchg
adc
cmp
dec
cmp
call
push
mov
xchg
scas
sqrtps
mov
ja
pop
cwtl
popf
mul
js
push
cmp
xchg
rorl
mov
ja
add
xchg
nop
stos
aad
inc
mov
shll
mov
pushl
addr16
in
loopne
bound
add
jp
sbbb
xor
sbbl
add
cmp
lcall
pushf
pop
ja
xorb
xchg
das
mov
andb
fisttpll
popf
sti
adc
adc
dec
sbbb
and
cmpb
mov
daa
xchg
and
cmpl
cmp
rolb
shl
jbe
jo
cmpl
pop
push
inc
pusha
mov
movsl
rolb
and
imul
mov
inc
mov
lahf
fcom
adc
orb
cmp
push
cmp
inc
xlat
nop
sbbb
mov
pop
adcb
mov
jmp
mov
jns
sub
pop
mov
je
roll
addr16
adc
dec
subb
outsb
cld
pop
sub
fmul
ficomps
sbbl
das
dec
jmp
adc
aas
dec
loop
adc
sbb
popa
fwait
sbb
pop
inc
xor
data16
lods
out
inc
sbbb
pop
push
scas
adc
sub
adcb
out
adc
pop
outsl
mov
movsb
jno
dec
xlat
xor
dec
push
push
std
xor
pop
adc
mov
add
and
inc
mov
js
jae
push
sti
push
sub
jne
lret
xor
movsl
bound
inc
fxch
subl
in
inc
sarb
jbe
pop
sbb
push
orb
xchg
leave
arpl
dec
hlt
mov
cltd
cld
mov
rorl
aad
lock
push
addb
jbe
addr16
mov
ret
lret
mov
pusha
and
sbb
cmpb
ds
sub
inc
push
and
add
and
es
aam
sbb
divl
lods
scas
or
mov
xchg
and
or
mov
push
cmp
xorb
std
pop
adc
ret
cmpsl
test
filds
sahf
pop
cli
dec
subb
mov
test
xchg
orb
dec
sbb
mov
pop
cltd
int
fdiv
orb
lods
xchg
les
cmpsb
pop
lcall
jno
outsl
repnz
daa
cmp
loopne
mov
inc
cmp
mov
adcb
cli
dec
das
decl
loopne
and
in
scas
adc
dec
and
movb
inc
pop
jg
and
bound
call
dec
lahf
inc
inc
repz
cmpsl
ja
add
cmp
fs
xorb
xor
andb
inc
mov
cmpsb
std
movsb
cmp
adcb
mov
sbbb
daa
or
inc
mov
int3
popl
fildll
and
subl
mov
pop
xor
add
xor
mov
and
mov
ja
insl
mov
andb
iret
mov
rcrb
mov
in
cltd
test
hlt
insl
movsl
imul
loope
mov
cmpsb
aaa
orb
add
subl
outsl
push
dec
xor
cltd
push
mov
xchg
mov
addb
jo
add
mov
addl
gs
lret
push
out
sbb
mov
mov
stc
cmp
pop
inc
stc
and
ucomiss
adc
movsl
jo
mov
in
cli
sar
pop
es
das
push
shl
cmpb
jno
in
add
xchg
ret
and
pusha
sbb
jb
lcall
int
call
rcr
mov
std
sub
jnp
subb
mov
enter
outsb
sub
adcl
ds
sub
jo
push
outsl
and
aad
mov
mov
cs
mov
jmp
shlb
je
inc
mov
or
and
outsl
and
jle
xorl
mov
enter
cmpsl
shll
scas
adc
fwait
mov
loope
lret
stc
push
cmp
push
inc
and
pop
xorb
fcom
adcb
push
push
sarb
pop
xlat
jl
sub
scas
cmp
mov
lock
insb
subb
xchg
adcb
cs
xchg
adc
aad
addb
jae
push
subb
push
leave
into
pop
clc
xorb
push
jo
xchg
jbe
mov
std
mov
pop
sbbb
xor
mov
inc
jbe
lods
lahf
stc
dec
loope
pop
leave
sbb
sub
xchg
dec
mov
inc
outsl
stos
and
sbbb
out
imul
pop
data16
xchg
sub
inc
xor
das
outsl
inc
cmpb
xor
inc
mov
cmc
imul
mov
mov
scas
stos
andb
aam
mov
pop
call
es
sub
mov
cmp
int3
dec
call
xchg
xchg
scas
popf
cmovae
or
pop
pusha
in
xchg
pop
xchg
push
loop
pop
popl
repnz
adc
xor
dec
sbb
in
out
pop
jo
out
or
cmpb
repnz
sbb
cmpl
xlat
xorb
xor
push
push
adc
jnp
pop
xchg
mov
int3
shrl
dec
inc
inc
frstor
andl
fiaddl
pusha
xchg
add
sarl
ret
xchg
jle
cld
mov
inc
xlat
add
enter
test
cmpsl
notl
xorb
xchg
and
xor
into
loopne
aam
add
fdivrl
sbb
adc
mov
scas
lcall
sub
pop
pop
mov
mov
in
mov
cmpsb
aam
sub
fs
adcb
and
push
inc
paddw
add
lods
xorb
or
sub
scas
adcb
ljmp
push
aad
cmp
push
fninit
xor
sbb
xor
add
call
xorl
jo
movsl
mov
xor
fdivrs
xorl
loopne
pop
subb
std
add
shlb
xchg
mov
xchg
jmp
and
mov
shrl
adc
out
lds
outsb
or
leave
push
js
or
rol
push
adc
inc
int
icebp
jbe
test
add
out
cli
out
mov
orl
mov
fists
insl
inc
ja
sub
test
lahf
push
inc
or
mov
xchg
mov
sub
mov
popf
repnz
mov
rolb
cld
jb
inc
rclb
xchg
addb
mov
adcb
rol
xchg
mov
iret
adc
subb
andb
or
inc
jbe
lods
xchg
xorb
cltd
xchg
bound
test
andl
incl
aas
dec
pop
les
popa
icebp
or
sbb
cld
add
dec
dec
xchg
stos
loope
jne
mov
xchg
fldl
sar
loop
movsb
sbb
xchg
orb
movsb
sbb
movsl
cmc
data16
sub
ror
mov
lds
xorl
xor
subl
and
mov
mov
pop
pop
xor
sahf
sbb
mov
xor
mov
fisubs
sbb
movb
jae
stc
or
addb
fcomps
mov
mov
scas
and
mov
mov
andl
or
aam
dec
cmpsl
inc
and
inc
pusha
cmp
add
sbb
pop
xor
subb
nop
push
mov
lods
leave
xchg
cwtl
movsl
inc
sbb
data16
outsb
loop
les
push
dec
inc
xchg
loopne
adcb
or
int3
mov
subb
cli
push
and
rolb
jbe
mov
inc
out
ficomps
cli
cmp
mov
push
sub
or
lds
mov
fs
orb
fcomp
cmpsb
jbe
sub
or
mov
inc
sbbb
jbe
xorb
jmp
test
icebp
cmpb
lock
add
cmc
push
pop
and
sbbb
cmp
sub
inc
pop
pop
loopne
jl
bound
sahf
adc
mov
adc
rol
lahf
js
in
sub
or
loop
sahf
cmp
add
int
inc
push
lds
inc
loope
fwait
mov
xor
insb
enter
sbb
stc
popf
cmp
add
rcrl
out
lds
frstor
pop
pushf
add
xor
lcall
push
lds
lret
ret
jb
lods
xor
inc
subb
cmpb
or
cwtl
pushf
push
add
inc
mov
cmpsl
adc
push
or
subb
lea
out
in
cmpb
fsub
xor
jno
in
insb
mov
notl
iret
push
popa
cmpsb
call
jno
xor
xchg
addb
shr
pop
rolb
insl
movsb
cld
rolb
jmp
sysenter
pushf
cwtl
pop
push
rorb
testl
pop
in
jae
dec
adc
arpl
add
pop
sarl
lock
daa
fwait
sub
sbbb
rolb
adcb
mov
sti
xorb
mov
cmp
call
sub
shlb
or
mov
pushf
in
popf
push
ja
out
mov
pop
push
mov
mov
add
push
and
movsl
push
daa
mov
dec
add
sbbb
out
les
outsl
push
fsubp
jp
out
subl
lcall
dec
push
pop
in
xchg
inc
js
mov
mov
xchg
aas
dec
repnz
test
cmpsb
mov
orb
jo
sub
cmc
mov
jbe
sbb
es
sbb
cmpb
mov
cmpb
mov
or
sarb
sbbb
or
test
mov
add
and
pop
push
fwait
mov
loopne
shl
adc
je
sbb
add
and
sub
mov
subb
mov
stos
nop
je
xchg
js
outsl
gs
rorl
subb
mov
test
and
sbb
ret
mov
lds
movsb
mov
loope
test
dec
mov
shlb
test
sub
ret
mov
xchg
add
mov
negl
aas
icebp
adc
repnz
int
jle
mov
jno
xchg
sbb
sbb
test
jo
jo
xchg
loopne
push
dec
sub
mov
sub
push
dec
cmp
push
imul
loope
popf
and
scas
incb
mov
sub
pop
xor
out
and
xor
or
jo
sahf
pop
addb
dec
mov
adc
data16
mov
mov
add
and
sbb
fildl
test
rorb
shlb
fcoms
adcb
mov
in
enter
cwtl
pop
mov
es
int
and
stos
sbb
mov
insb
push
subl
push
and
ret
scas
fsubr
dec
shl
ret
xor
pop
lcall
rcll
adc
addb
cmpsl
jle
negb
subb
shlb
addl
shlb
das
popf
push
push
add
pop
dec
arpl
subb
pop
xabort
cmpb
and
andl
and
xor
shl
not
sbbb
int
int3
js
xorb
sti
sbb
lret
jge
or
cld
imull
sub
xor
insl
bound
sub
mov
jl
mov
lock
xor
addb
call
int
and
lret
dec
cmc
int3
and
divb
dec
jg
jno
ja
sub
mov
or
loope
jo
icebp
add
mov
outsb
orb
stc
add
xor
sbb
adcb
pop
lret
xor
cmpsb
mov
je
scas
mov
sub
push
mov
mov
xchg
fmull
mov
pop
lret
orb
push
mov
int3
test
add
fstpl
or
ljmp
cli
jae
scas
xchg
and
xlat
add
add
pop
mov
imul
vpmadcswd
icebp
jo
jnp
nop
or
or
xor
cmpsb
push
pop
insl
cmp
sbbb
jb
lods
mov
jp
aad
clc
push
and
xchg
adcb
xchg
mov
xor
loop
xchg
inc
orb
cmp
and
cmp
test
mov
adc
xor
sarl
sub
cmc
shrb
cmpb
xor
sub
or
lea
call
push
mov
aad
sarb
std
movsl
outsl
jbe
sbb
xorl
push
adc
sbb
mov
jmp
sbb
mov
mov
inc
out
addb
shrl
lods
dec
sbb
pop
add
xchg
mov
das
adc
js
shr
hlt
sbb
and
pop
cltd
add
stos
adc
add
jmp
jg
stc
push
sub
seta
push
lods
lahf
and
jo
or
fildl
xchg
ret
sbb
adc
mov
fsts
outsb
adc
lret
loop
jo
jle
jp
lock
add
adc
movb
adc
jl
sti
addl
aaa
push
jb
lods
xor
arpl
scas
enter
cltd
mov
xchg
push
je
jl
or
xor
pop
mov
sbb
mov
dec
fadd
or
pop
into
or
rorb
mov
add
sbb
std
subb
stos
and
iret
pop
cmp
into
or
dec
call
andb
dec
dec
mov
sub
inc
shll
pop
pop
andb
mov
ds
push
or
add
in
fdivrs
inc
adc
mov
adcb
mov
test
dec
ffreep
movb
cli
loop
cmpb
insl
xorb
lahf
sbbl
xorb
stos
out
xor
mov
xchg
loop
inc
xchg
testb
adc
mov
cmp
add
pop
dec
or
jo
subb
ja
cmpb
jne
lret
sbb
subb
test
test
and
fs
shrb
xorb
or
neg
in
lahf
cmp
and
xchg
adcb
data16
inc
jmp
cmpsb
js
fisttps
jmp
fsubrl
sbb
xchg
dec
add
sar
cmpb
mov
mov
and
cmp
xchg
lcall
sbbb
pusha
ret
movsb
xor
pop
xorb
mov
adc
sub
lock
das
mov
xchg
inc
add
aaa
pusha
mov
dec
xchg
push
in
push
addb
sub
pop
cmpb
and
xchg
mov
ds
sar
pop
cltd
scas
outsb
mov
jp
addb
cmpsl
loopne
out
jmp
in
xor
push
call
dec
sbb
or
cmp
cs
push
outsb
sbb
push
push
mov
jg
andb
jno
fwait
mov
xchg
decl
cmp
ret
mov
stos
cmp
jl
jo
sbb
adc
orl
fadd
test
inc
sqrtps
arpl
xchg
outsl
pop
add
std
sub
repnz
mov
cmpb
dec
scas
dec
ret
mov
jno
int3
mov
pop
in
mov
orl
loopne
sub
mov
mov
cltd
cmpsl
std
fsubrp
mov
mov
aaa
leave
shr
mov
jo
iret
sbb
sbb
lahf
jae
pushf
loopne
fiadds
mov
sub
ret
adc
or
dec
sarl
adc
out
cmp
mov
stc
subb
xor
mov
stc
adc
jnp
cmp
lret
pop
je
xor
pushf
cmp
mov
push
movl
cmp
mov
pop
fmull
xchg
imul
pushl
outsl
popf
add
add
daa
xorb
pop
cld
cmpb
xchg
mov
arpl
roll
in
push
or
outsl
orb
sahf
sub
sti
mov
sbbl
imul
adc
or
in
add
mov
sub
test
or
inc
mov
push
out
mov
xor
mov
loopne
dec
adc
cmp
lds
lods
adc
sti
adcl
js
sbb
add
inc
cmp
mov
xchg
sub
mov
filds
xchg
fcompl
or
lcall
andl
fbstp
stos
sbbb
lahf
adc
mov
xchg
mov
jo
stc
push
adcb
push
jo
jae
sbb
pop
cld
shl
xlat
mov
insl
jnp
adc
jl
xchg
sub
xor
sub
insl
dec
out
jg
cmc
outsl
push
sbb
add
dec
xchg
rcrb
or
push
sbbb
xchg
je
movsb
scas
add
add
dec
test
or
cmp
dec
pop
cwtl
sbbl
or
or
adc
lcall
jle
pop
stos
mov
mov
aas
shl
sub
sbb
push
jp
lcall
sbbb
adc
mov
adc
pop
je
xorb
adc
mov
add
push
cmp
add
jg
cmpsl
loop
insb
sbbb
sbb
das
pop
bound
sbb
stos
jl
adcb
out
fwait
mov
ja
in
mov
mov
mov
pop
ja
daa
adc
dec
out
sbb
pop
xlat
mov
outsb
pushf
xor
pop
rorb
mov
mov
nop
lea
cmpsb
inc
fnstcw
jle
ret
mov
andb
sub
lock
jl
orl
inc
xor
xchg
dec
xor
incl
sti
pop
popl
jb
xor
pop
fsts
pushf
fs
shlb
jno
mov
int
jnp
test
cmpl
lds
icebp
bound
push
adc
mov
out
mov
xchg
sub
loop,pn
rcll
loope
mov
pop
inc
andl
xchg
xchg
sahf
xchg
and
in
pusha
mov
mov
sbb
imul
test
addb
lea
cmp
loope
sbb
hlt
jmp
clc
sub
adc
fs
and
int3
lea
xchg
adcl
popa
jb
repz
lock
sbb
into
adc
pop
scas
notl
xor
test
jmp
pusha
and
push
mov
in
mov
push
ds
dec
addb
or
cmp
sub
mov
sub
mov
pop
xor
xchg
add
in
das
bound
testl
sub
xorb
dec
sahf
daa
addr16
fcoms
xor
mov
in
inc
js
sbbb
mov
jne
imulb
je
cwtl
rcll
pop
sbb
sub
cmpsl
ret
mov
test
in
jp
dec
xchg
sub
pop
sub
jo
popl
aaa
lret
popf
mov
xor
cwtl
mov
mov
mov
xchg
cmp
in
cli
fwait
sub
and
test
cmc
and
inc
orb
xchg
push
addb
mov
mov
in
orb
cld
jmp
mov
fdivs
pop
repz
ret
mov
sbb
mov
sbb
mov
jbe
outsb
ret
add
or
cmpb
xchg
je
xor
pop
movsl
adcl
test
xchg
das
and
test
incb
int3
or
jno
sbb
jbe
sbbl
les
mov
mov
insb
inc
rolb
dec
push
fisubs
dec
mov
movsl
xchg
ret
pushl
mov
sbb
add
ljmp
scas
jo
adc
subb
subb
pushf
add
xchg
cmpsb
sbb
jle
xor
addb
pusha
mov
xor
pop
popa
in
xchg
incl
movsb
cmp
lret
adc
fwait
mov
hlt
orb
mov
sahf
loope
loopne
pusha
adcb
sub
sub
mov
push
push
xchg
test
hlt
adc
inc
mov
or
movsl
std
mov
lods
pop
mov
xor
pop
xor
add
inc
mov
add
sbbb
cmp
push
pushf
fsubrl
test
aam
mov
dec
jno
loop
cmpb
dec
std
mov
mov
push
pop
imul
push
or
add
ss
dec
add
or
cmp
pop
sbb
mov
jo
stos
cmpb
pusha
pop
pop
jmp
cmp
fisttpl
push
das
xchg
in
inc
nop
test
lds
adcb
mov
jb
outsb
add
sahf
xchg
dec
mov
call
jmp
sbbb
lcall
cmpsb
adc
outsl
rol
insl
cwtl
xchg
enter
out
dec
stc
pop
in
or
jnp
sahf
push
popa
add
dec
in
xor
mov
and
arpl
test
xchg
test
scas
loop
pop
mov
arpl
push
and
pop
jp
mov
lock
cmp
dec
roll
mov
pop
or
in
mul
mov
xchg
and
inc
sub
jo
incl
cmp
lock
sbb
fwait
popf
mov
pop
je
pop
pop
mov
sbb
xor
mov
cmp
lcall
pop
addl
xor
xchg
pop
and
xorb
fmul
jle
mov
test
leave
cmpb
sub
pop
jo
push
and
or
out
push
icebp
ret
mov
in
pop
dec
mov
mov
mov
mov
je
cmp
cmp
movsb
dec
inc
dec
and
mov
out
ret
dec
push
lret
xor
mov
pushf
imul
mov
inc
xchg
jp
jne
icebp
cmpb
scas
add
adcb
jl
and
sbb
mov
push
into
out
xlat
repz
and
sbb
movsb
cmp
pop
repnz
mov
insb
test
lcall
lret
jae
pushf
jge
mov
roll
stos
stos
bound
push
and
test
adcb
push
notl
or
fiaddl
lret
dec
std
cmp
jb
ds
lret
in
xchg
sub
loopne
pushf
mov
testl
aas
cli
jbe
bound
fs
adc
into
sbb
insl
jle
shlb
outsl
mov
xor
mov
testb
jns
aas
inc
test
mov
sbb
aaa
sub
or
rorb
addb
pushf
repz
push
fildl
xchg
fdivl
inc
inc
orb
fnstenv
add
jne
rolb
jg
cwtl
loope
dec
outsb
inc
jbe
cli
subb
jno
add
push
aam
lds
aaa
in
add
sbbb
gs
sti
push
or
je
addl
mov
jl
jns
adc
jo
xchg
xchg
imul
lret
movsl
jbe
xorb
adc
lds
jmp
dec
jle
jo
pop
sbb
add
and
inc
push
js
jbe
rcl
xor
dec
mov
cmc
out
dec
pop
outsl
cmp
mov
cwtl
cli
inc
nop
xor
imul
cmp
or
test
aas
aam
xorl
sbb
mov
jmp
lods
enter
addl
test
and
in
std
cmp
mov
adcb
pop
test
enter
push
sub
xchg
push
and
mov
sub
cmpsl
push
adcb
nop
push
imull
sbb
in
cmp
orb
adc
fcompp
lea
mov
mov
iret
icebp
fmull
incl
sub
leave
sub
jns
fstp
inc
lock
insb
push
repnz
repz
sbb
sbbb
inc
dec
lods
data16
mov
push
pop
gs
movl
jo
repnz
mov
fmuls
adc
ja
aam
sbb
decb
mov
cmp
ret
xor
idivl
inc
lods
dec
adc
push
jno
jb
add
icebp
jne
jo
mov
iret
int3
mov
xchg
ret
jmp
pop
cmpb
ficoms
das
ss
cmpb
bound
add
daa
adcb
and
sbb
test
enter
loopne
testb
enter
push
add
cmp
jne
imul
faddl
jo
push
sub
pop
js
sarl
inc
or
sahf
clc
adc
cmp
rorb
pusha
outsl
mov
adc
sbb
mov
int
loopne
xor
test
sbbl
add
cli
es
test
push
cmp
and
ret
mov
dec
je
js
sub
and
xorb
roll
es
mov
addb
rorl
addb
test
xor
mov
xchg
jp
stos
sti
orb
adc
xor
popf
repz
js
lods
cwtl
rcrb
and
in
addb
add
subb
out
fistpll
jecxz
mov
addr16
cmp
fstp
movsb
test
sub
pop
push
loopne
into
pop
subb
notb
jge
movb
cltd
fiadds
cwtl
inc
cmpxchg
inc
and
aas
outsb
jns
imul
notl
sbb
mov
scas
stc
sub
cmpb
pop
mov
xchg
nop
nop
add
stos
and
cmp
out
and
cmpb
add
popf
rolb
cmp
pop
adcl
jecxz
push
pop
mov
mov
jno
lahf
dec
mov
add
dec
orb
in
ret
sbbl
orb
data16
jae
sub
fbstp
xor
aad
ja
mov
xor
cmp
cmp
xlat
filds
aam
int
xorb
icebp
in
out
mov
inc
loopne
movsb
mov
xchg
lods
mov
push
sub
mov
xorb
mov
sub
lahf
and
and
inc
dec
decl
ljmp
inc
mov
and
mov
cli
mov
push
lret
hlt
mov
cmp
sbb
adc
shlb
xchg
inc
xor
or
xchg
mov
cmc
outsb
jb
adc
movsl
imul
cmp
aas
xorb
mov
dec
leave
mov
bnd
mov
mov
in
pop
arpl
orb
jge
subb
imul
mov
divb
sbb
movsb
into
andb
out
jae
xchg
jle
subl
add
push
scas
mov
js
or
repnz
adc
sbb
pusha
lcall
push
pop
jns
in
adc
mov
dec
shll
xor
pop
lock
loop
mov
jle
loope
sub
xchg
add
push
adc
jle
shlb
les
xchg
mov
sub
xchg
roll
mov
add
mov
add
stos
jmp
and
jae
cwtl
push
pushf
pop
cmpsl
dec
shrb
sbbb
int3
stos
sub
jne
ss
xchg
lahf
cmc
iret
cs
jle
insb
push
adc
cmp
out
adc
xor
xchg
inc
xorb
fucom
cmp
pop
into
faddl
test
sbb
xorb
aam
adc
inc
add
xor
dec
imul
add
add
push
std
adc
enter
orl
clc
or
push
and
push
cmp
stos
mov
mov
addb
mov
xchg
mov
test
insl
lcall
dec
xchg
fcmovnb
push
jo
sbb
test
jmp
ficoml
mov
pop
cli
out
into
dec
xchg
nop
push
cmp
andb
lcall
das
inc
daa
cs
leave
pop
inc
push
jne
or
pop
xchg
jge
test
dec
fisubrl
aam
xchg
out
jmp
jnp
sub
lcall
cmp
push
sbb
xlat
neg
mov
inc
xor
inc
push
and
ret
mov
inc
or
xorb
sub
ss
dec
cmp
mov
out
cmpsb
movl
orb
gs
mov
rorb
orb
testb
cmp
sbb
sub
mov
mov
ja
xor
lock
movsl
cmpl
mov
inc
fiaddl
lods
xchg
mov
orb
add
int3
mov
inc
sbb
push
pop
xor
jbe
push
push
or
andb
leave
lret
or
ret
sub
xchg
xor
cmp
adc
test
xchg
add
cltd
mov
dec
jno
cmc
imul
add
sub
adcb
adc
insb
or
inc
adc
push
adc
stos
or
xor
adcb
dec
or
fstl
stos
add
inc
mov
inc
test
popf
sub
jns
shll
push
test
lods
ret
filds
out
orb
mov
addb
sahf
mov
inc
cmp
inc
out
aaa
sbb
dec
and
sbbl
xchg
leave
stc
fildl
cmp
addb
xor
cmp
jmp
addl
adcb
les
lock
fidivl
add
lea
stc
dec
cmp
sti
aas
lock
loop
xchg
or
sbbl
int
sbb
lea
mov
lret
clc
push
and
cmp
inc
or
subb
cld
push
sahf
jne
pop
inc
mov
cwtl
pop
dec
fldt
mov
xor
jae
jmp
or
cmp
xor
mov
fadd
fldl
scas
cli
cmp
inc
or
cmp
test
nop
shrl
inc
hlt
jo
xorb
addb
inc
lock
ljmp
jno
nop
add
add
pusha
ret
out
lea
int3
mov
jge
movsl
lds
jle
repz
mov
push
call
outsb
xchg
sub
dec
xchg
sbbb
and
push
pop
xchg
mov
mov
orb
loope
or
adc
adcl
pop
lret
xor
in
popa
and
sahf
sbb
js
adc
dec
jge
cmp
push
mov
hlt
mov
push
sbb
loope
mov
sub
mov
xchg
leave
faddl
mov
push
adc
in
sbb
pushf
cltd
subb
xchg
out
xchg
add
sbb
push
jl
fsubl
xchg
mov
xchg
and
ljmp
or
fldl
xor
sahf
shll
cld
lods
orb
jle
xchg
push
fwait
and
push
sbb
es
pop
mov
mov
addl
je
xchg
lods
push
icebp
xor
inc
xlat
xorl
mov
bound
nop
sub
cmpb
fnstenv
mov
add
subb
fbld
mov
pusha
adc
fwait
arpl
mov
mov
adcb
lods
lds
subb
pop
sub
dec
mov
repnz
into
cmpb
push
pop
jae
iret
popa
dec
xor
sub
enter
jb
test
mov
mov
cmp
mov
sbbb
sbb
pushf
div
jnp
call
push
repnz
mov
sub
in
xchg
mov
arpl
push
sub
jmp
adc
pusha
mov
push
imul
mov
mov
arpl
sarb
int3
js
cmpb
aam
mov
adcb
pop
adc
in
sbb
repnz
and
les
sbb
divb
enter
lcall
or
add
add
loope
imul
fnsave
rolb
stos
jecxz
add
sarb
pop
repnz
adc
fsubs
inc
xorb
sbb
dec
xchg
fstl
daa
sarl
mov
xchg
mov
or
xlat
pushf
clc
dec
cmp
or
orl
push
cmp
cmp
dec
lret
addb
inc
push
jno
fistl
cwtl
arpl
push
popl
rcl
std
or
test
ret
pop
movsl
adcb
mov
pushf
xchg
add
mov
xchg
inc
clc
andb
add
mov
push
dec
incb
jns
xchg
icebp
jno
stos
shll
stos
inc
push
sub
cltd
cmp
mov
xchg
cmc
pop
cwtl
andb
ja
clc
jns
daa
mov
je
xchg
xor
add
sahf
sub
cltd
fildll
add
lock
mov
dec
cmpsl
fmul
add
xorb
push
andb
lods
add
hlt
subl
cs
pop
mov
ja
bound
add
mov
cmpb
mov
addb
outsb
push
push
hlt
pop
es
jae
insb
cmp
fwait
lahf
jo
aaa
sub
lods
cmp
lods
xchg
mov
xchg
mov
sbb
adc
fildll
mov
in
andl
out
xor
rcrl
push
xorb
and
pushf
or
xchg
les
orb
imul
dec
roll
call
mov
sub
lsl
orl
push
addr16
sbb
mov
jae
popf
shlb
xchg
not
int
push
jns
sub
sub
push
push
xchg
mov
aas
xchg
mov
nop
enter
popf
mul
mov
push
xorb
pop
outsl
lahf
addl
push
loope
xor
vphaddbd
mov
popa
mov
scas
rcrb
int3
jns
pop
adc
push
dec
push
aas
xchg
sbbl
dec
inc
lret
andb
out
fadds
repz
lods
aad
outsl
mov
add
push
loope
xchg
scas
andb
and
xchg
sub
lcall
push
xchg
inc
iret
xorb
sub
cmp
shlb
cmp
pop
addl
jg
add
inc
lret
faddl
pop
test
cmp
orl
and
fwait
dec
stos
add
adc
xchg
lcall
mov
cli
or
sbb
mov
movsb
add
mov
sbb
cmp
xchg
jl
jg
xchg
out
into
lcall
cwtl
xchg
mov
aad
mov
iret
inc
and
into
stos
push
xchg
jno
fwait
push
orb
hlt
dec
xchg
pavgw
cmp
xorb
movsb
fldenv
xchg
orb
push
lock
mov
pop
xor
out
mov
jl
xor
in
testb
das
push
jp
push
push
pop
dec
jb
scas
ja
incl
inc
popf
test
add
out
dec
xorb
mov
scas
mov
fdivs
and
test
cli
test
xorb
sbb
fisubs
mov
xor
je
clc
mov
outsb
stos
subb
or
out
xlat
cmpb
gs
jl
xchg
lea
add
test
xchg
fs
inc
daa
adc
stos
cmpb
fwait
jae
pop
and
stos
mov
xor
stos
mov
mov
xlat
andb
sarb
mov
imul
push
mov
jl
lret
cltd
push
jecxz
pop
std
hlt
idivb
cmp
and
inc
mov
insl
out
push
or
loop
loopne
mov
xor
subb
aaa
mov
loopne
lods
jnp
adc
mov
sbb
inc
sbb
sbbb
cmp
xchg
mov
pusha
scas
out
add
insb
sbb
or
fistl
lds
mov
je
cltd
mov
iret
sbb
lahf
sub
fcomp
or
and
mov
test
xchg
pusha
sbbb
les
jb
test
xchg
push
sbbb
sbb
lock
xor
jno
andb
hlt
outsb
adc
outsl
ret
inc
push
dec
jne
andb
mov
clc
jb
cmp
add
and
sarl
andb
inc
cmc
cld
cmp
xorb
sub
cmp
insb
stc
hlt
adc
xchg
cld
in
movsl
pusha
stos
sbb
mov
cwtl
sbbb
imul
pop
cmc
rolb
ffree
cwtl
pusha
lods
das
sbbb
push
pop
ret
mov
imul
inc
or
fcmovne
cmpb
pusha
bound
enter
lahf
cli
icebp
cmp
dec
push
mov
roll
or
shll
xorb
fnstenv
sbb
addr16
pusha
cmp
fmull
adc
add
push
mov
ret
dec
jo
xor
adc
mov
les
ficompl
aad
aas
pop
repnz
std
popa
mov
shlb
or
inc
imul
into
xchg
aaa
jb,pn
push
movsb
out
fiadds
adc
jno
adc
xchg
icebp
imull
jp
xorb
pop
sar
inc
and
adc
sbbl
cmp
jne
jecxz
mov
shrl
xor
pusha
addl
loopne
inc
fistl
mov
enter
mov
add
addb
or
cmpsl
inc
loope
int3
movsb
inc
addb
sti
arpl
xchg
andb
jae
aam
or
mov
add
dec
cli
subb
mov
rolb
sbb
filds
mov
add
ret
out
push
push
or
xlat
mov
sbb
pusha
mov
sub
sbbb
nop
add
jb
lock
add
shlb
iret
pop
lret
jne
sbbl
pop
movsl
test
cmp
int
jecxz
mov
orb
mov
sti
adc
add
jnp
jp
mov
push
in
arpl
addb
lcall
xlat
scas
inc
in
ss
test
in
cmp
jmp
js
call
sbb
in
inc
subb
jbe
jno
mov
les
movsl
inc
loope
xchg
andb
loop
popf
andb
orl
jae
shlb
mov
mov
je
andb
dec
imul
daa
and
and
imul
ljmp
imul
xorb
icebp
adc
mov
lret
mov
mov
in
add
mov
cmp
dec
addl
dec
push
dec
lods
das
adcb
lret
int3
cwtl
cmp
rcrl
shrb
sahf
movsb
mov
push
sbb
pop
or
inc
pop
adc
mov
mov
iret
loop
pop
dec
insl
or
sub
xchg
mov
in
lods
jno
inc
pusha
jecxz
test
sub
jp
mov
lret
xchg
adc
jg
mov
adc
dec
cmp
adc
adc
adcb
icebp
fadds
inc
das
xchg
cmp
jo
sbb
mov
inc
in
js
jge
subb
or
cmpb
test
push
add
inc
mov
cmp
lods
pop
lahf
sub
test
push
fincstp
std
out
shl
pusha
mov
cmp
int3
andb
fwait
cvtps2pd
lcall
sub
call
push
cltd
sbb
cmpb
mov
stos
pop
jo
xchg
mov
mov
mov
jg
and
inc
cmp
xchg
bound
orb
lods
jecxz
pop
push
addb
or
test
xchg
xor
data16
dec
mov
add
adc
in
rorb
orl
jno
jg
jl
xorl
insb
aaa
mov
dec
xor
xor
insl
xchg
xchg
arpl
inc
sbbb
aad
and
inc
inc
out
push
xor
and
pushf
call
dec
shrb
mov
stc
js
and
xchg
xchg
jle
daa
sbbb
pop
popf
mov
sub
adc
jl
das
mov
sbb
sahf
or
dec
adc
mov
pusha
pop
ljmp
rcr
adc
cmpb
cmpl
adc
xor
add
orb
imul
dec
sbb
cltd
push
aaa
xor
cmp
fdivrs
sub
out
pushf
es
add
inc
loopne
jbe
mov
bound
daa
sbbb
lcall
push
sbb
int3
dec
and
subb
orb
sahf
jl
mov
cmp
xchg
mov
into
popa
add
cld
fwait
xchg
sub
addb
mov
roll
pusha
jge
dec
or
cs
stos
pop
mov
xlat
orb
pop
cmpsb
jne
xlat
cmp
test
mov
mov
mov
incl
mov
clc
pop
xchg
mov
or
pop
or
leave
add
sbb
loopne
out
aaa
adc
stos
mov
cmp
hlt
dec
xchg
mov
inc
icebp
icebp
xorb
push
fs
mov
inc
xorb
fldpi
in
xchg
stc
int3
and
jp
stos
mov
xor
xor
sbb
jle
andb
mov
out
dec
iret
push
data16
xor
test
ret
call
xchg
aad
sub
sub
sbb
mov
xchg
bound
xor
cmp
or
mov
pop
jns
mov
lcall
pop
fdivs
mov
sub
loopne
mov
cmp
cmp
mov
mov
mov
inc
mov
cmpsb
and
sbb
orb
jp
icebp
mov
xchg
daa
jns
pop
inc
imul
adc
cld
test
inc
sbbb
hlt
add
call
mov
outsb
pop
icebp
cmc
scas
xchg
cmp
sub
std
xor
mov
mov
add
jl
out
sub
dec
push
insl
xor
call
cmp
test
gs
stos
mov
out
cmpsl
inc
sti
xor
add
ficomps
pusha
mov
xchg
sahf
fdivl
jl
push
and
xchg
add
inc
add
mov
aas
lcall
cwtl
mov
xorb
cmp
mov
enter
push
and
loop
shrl
dec
aam
mov
rcrb
mov
scas
xchg
or
nop
push
sbb
inc
add
movsb
movsl
outsb
mov
xorb
inc
sub
xchg
jmp
lock
leave
imul
ret
test
inc
adcl
mov
mov
enter
data16
pop
mov
icebp
mov
test
mov
clc
ficoms
rolb
mov
push
aaa
orb
jne
mov
xor
jb
fcoms
jle
ss
subl
inc
jo
scas
nop
adcb
mov
xor
orb
sarb
pop
addb
push
imul
sbb
pop
cmc
loop
leave
add
mov
scas
addb
add
addr16
adcb
xor
lea
test
cmp
inc
imul
xorb
mov
subb
mov
or
cmpsl
js
xchg
int
loopne
add
orb
mov
jns
sbb
sub
nop
imul
push
pop
jb
subl
mov
inc
addr16
adc
push
jnp
lahf
cmpb
mov
push
lcall
ss
jg
orl
mov
lcall
sahf
rcrb
jo
out
and
inc
sub
es
dec
insl
clc
or
std
xor
cltd
xchg
imul
pop
sbbb
dec
sbb
pusha
pop
and
cmpb
add
int
mov
fldenv
subb
mov
adc
leave
orb
xor
test
pusha
or
outsl
andb
pop
addb
in
fstpl
pop
jmp
xor
aad
inc
sub
cmpsb
xlat
lods
outsl
mov
sbbb
out
hlt
mov
sbb
testl
push
test
data16
add
and
sahf
fbld
shl
jbe
popf
mov
or
fdivl
push
xor
ficoml
repz
mov
jg
add
pop
xor
imul
movsb
adc
ret
lds
ja
sahf
and
loope
popl
mov
fadds
adc
pop
fistpl
call
and
sub
and
sbb
xchg
pusha
xchg
mov
test
ljmp
lcall
mov
movb
sahf
sbbl
fs
es
test
mov
mov
and
push
rorl
sbb
pop
mov
andb
lret
in
addb
lods
stos
inc
mov
jl
js
iret
orb
cmp
jo
dec
push
dec
push
mov
mov
mov
in
mov
push
pop
cmpb
in
loope
xchg
cmp
das
cli
mov
and
xchg
repnz
sahf
xchg
mov
mov
mov
xchg
orb
rolb
iret
loope
mov
adcb
mov
sub
fsubrs
cld
sbb
repz
mov
mov
inc
subb
sbb
add
bound
sub
in
push
jne
adcb
stc
xorb
cld
fiadds
push
cltd
cwtl
inc
mov
fcmovne
add
cmp
xor
pop
xlat
rclb
and
lods
addr16
outsb
das
add
xor
or
popf
test
jbe
lahf
clc
into
pushf
xor
movsl
inc
xchg
dec
lock
ss
adc
ret
cli
out
lret
jne
test
inc
push
mov
adc
lcall
negl
stos
iret
pop
pop
jl
fisttpl
xor
loope
js
into
fstps
pushf
and
mov
xchg
fwait
je
inc
cmp
cld
movsb
and
jmp
sub
test
adcb
in
orb
clc
add
and
mov
add
xor
fstpl
or
lcall
xor
push
js
mov
xor
cli
push
ret
and
dec
shrl
mov
movsb
es
orb
movsl
loop
fwait
gs
inc
cmc
push
adc
xchg
loope
sbb
cmpsl
sub
dec
subb
jl
lahf
xchg
and
out
clc
push
jge
adcb
in
cmp
mov
fisttpll
je
andb
mov
lcall
add
stos
push
jbe
shrl
aam
sub
mov
adc
sub
xor
inc
outsb
mov
int3
dec
cltd
stc
rcl
cmpb
push
roll
nop
cmp
jp
orb
xor
cmp
repnz
sub
pop
stos
xchg
jg
subb
push
push
addl
jge
cmp
sbb
insl
cmp
mov
out
lcall
pop
leave
or
sbbb
pop
mov
test
add
sub
js
cmpb
inc
xor
pop
orb
popf
mov
sub
leave
cmpb
inc
push
int3
or
sbb
add
and
mov
sub
testl
mov
xchg
shrb
icebp
jge
xor
in
jecxz
psubusb
push
mov
ja
jl
movsb
mov
loopne
call
jmp
push
aas
mov
sbb
les
pusha
xor
fwait
xchg
test
mov
aad
dec
dec
dec
addl
push
mov
and
pop
mov
cmp
adcb
and
subb
or
cmp
adc
and
pop
cmp
push
inc
jg
jge
subl
adc
jl
jecxz
cmc
mov
out
lahf
adc
repz
rorb
pusha
xchg
mov
push
mov
cmpsl
pop
push
ret
mov
push
adc
pop
jmp
push
add
imul
xor
clc
lods
aas
mov
mov
push
lds
adcb
fimull
fimuls
mov
in
je
repz
and
fidivl
or
rolb
imul
loop
in
out
outsb
sbb
or
dec
stc
orb
pop
xor
pop
lods
sbb
mov
xchg
jns
stos
xchg
mov
adc
xorb
dec
add
into
jo
orb
fiadds
xor
inc
push
addr16
aas
addb
jno
lss
xchg
daa
or
pusha
sub
fcmovnb
orb
gs
icebp
jo
adcb
xchg
outsl
dec
mov
or
push
int
mov
cmpb
and
xchg
bound
jg
ss
dec
xorb
addr16
push
pop
dec
jl
xorb
sub
sbbb
sub
mov
adc
xorb
and
adc
clc
cmp
inc
sahf
sbb
pop
arpl
sahf
out
cmp
or
jg
xchg
pop
add
shrb
cmp
std
adcb
arpl
out
pop
and
insl
xor
mov
lcall
cmp
in
fdivrl
test
adc
fs
ss
cs
dec
leave
sub
pop
int3
xchg
and
fidivrl
pop
aad
js
imul
orb
sbb
lods
add
test
adc
inc
mov
mov
aad
mov
lock
rcrb
inc
and
jne
out
lods
mov
sahf
daa
lret
xor
mov
jno
lods
fidivl
xor
in
andb
xchg
add
mov
sti
cs
mov
test
sbb
mov
xchg
xchg
jmp
icebp
mov
inc
lock
fs
cs
xlat
addl
cmpb
lods
or
pop
mov
enter
add
xchg
add
imul
enter
dec
cmp
jno
mov
sbbb
or
fisubl
mov
jbe
push
add
jecxz
arpl
or
mov
pushf
xor
out
leave
xor
add
mov
out
mov
in
loop
sub
rolb
inc
push
fsubs
jns
mov
fwait
ljmp
inc
and
mov
pop
mov
sarb
and
lcall
or
fisubl
add
cmp
pop
sbbl
push
rolb
ja
jecxz
cmpsl
xchg
jmp
addl
cmpb
loope
pusha
or
ret
cld
stos
mov
rcpps
or
add
ss
pop
popf
rclb
dec
add
adc
lds
sti
sbb
sahf
pop
push
cwtl
adc
test
scas
aad
push
lcall
sub
xor
sbb
xor
and
jbe
ror
js
icebp
lret
cmpb
inc
mov
daa
mov
mov
add
fiadds
outsb
mov
inc
ss
push
fistpl
leave
pop
rolb
xchg
stos
inc
insl
pop
cwtl
inc
or
mov
dec
out
neg
test
add
pop
mov
pop
push
mov
cmp
pop
subl
dec
jmp
add
mov
mov
jns
sbb
lock
inc
addr16
pushf
mov
push
sub
mov
pop
cmp
mov
ror
jb
or
scas
jns
xor
in
nop
mov
mov
stos
xchg
sbb
sti
fwait
push
xor
mov
repz
shlb
jb
pusha
les
mov
pop
xor
xor
subb
push
gs
cmpb
rclb
jnp
movsl
inc
sahf
jbe
enter
and
out
ret
sbb
aas
dec
xor
fidivs
mov
xchg
nop
sarb
xorb
jp
pop
cmp
ss
push
add
pop
movl
adcb
pop
xchg
roll
and
mov
xchg
pop
dec
loop
out
loopne
mov
add
mov
add
fiadds
lods
mov
jo
imul
jecxz
xorb
xchg
int3
xor
inc
xorb
insl
jnp
lods
in
addb
fsts
mov
xchg
ror
scas
and
es
sub
cmpsb
jecxz
out
adc
shll
sub
dec
jp
fcompl
pushf
mov
pop
sbb
and
or
sub
jnp
inc
test
arpl
adc
orb
in
jnp
movsb
adc
xchg
js
fmuls
xchg
add
pusha
jb
sub
jae
stos
cmp
pop
clc
mov
mov
cld
pop
sbb
sub
cli
or
addr16
inc
xchg
fsubs
cmp
and
xchg
jae
addb
cs
sahf
mov
aam
incl
sub
popf
xchg
mov
and
add
ljmp
fnstcw
call
pushf
mov
andb
cmp
andb
and
push
inc
cmpl
push
sti
fcomps
mov
xchg
hlt
call
loopne
das
xlat
in
mov
adcb
into
mov
pop
cmp
push
pushf
mov
mov
or
cmp
push
pop
or
push
fbld
mov
sbb
xorb
bound
adcb
pop
pop
cmpl
push
clc
rorb
outsb
or
pop
jg
scas
pop
adcl
ret
jb
jns
jno
sub
out
mov
lcall
cltd
cmpsl
adc
adcb
nop
mov
adcb
fldl
cwtl
mov
int3
push
lahf
pop
xchg
rcrb
hlt
out
sahf
rcrl
outsl
leave
cli
adcb
fsts
dec
cmp
xorl
es
filds
xchg
cmpb
sar
outsl
mov
into
sbb
rcrb
dec
adc
xchg
pop
lods
adc
pop
orl
mov
popf
test
in
lret
jbe
xchg
inc
fnstenv
pop
shlb
mov
sbbb
pop
push
je
sbbb
and
fmul
mov
jl
dec
push
mov
aam
mov
inc
icebp
add
out
lret
test
orb
ja
cmpb
sahf
sub
out
pop
out
and
sub
cmpl
or
push
xchg
jb
lahf
ljmp
push
xchg
push
inc
adc
sub
mov
xor
cmpb
leave
mov
fstpt
shrb
cvttps2pi
aad
jne,pt
and
leave
sbb
ret
xor
sub
pop
mov
pop
adc
cs
mov
push
sbb
jp
jecxz
push
ljmp
inc
repz
cmpb
into
out
sbb
jno
pop
dec
mov
addb
dec
shll
out
insl
fsubrl
fcmovne
and
or
sti
imul
cli
stc
xor
arpl
cs
aam
testb
adc
add
jne
mov
or
push
or
jae
setb
addb
jmp
ds
jbe
int
loopne
jo
imul
pusha
adc
data16
mov
sbbb
inc
mov
mov
xor
cwtl
jns
js
leave
xorb
jmp
jecxz
cli
xorb
pop
rcll
idivl
mov
das
mov
dec
idivb
aaa
jp
movsb
lret
into
addl
decl
xorb
je
sub
sub
xchg
mov
pushf
ret
dec
cmpsl
add
pop
das
adc
inc
adc
mov
sarl
ljmp
jmp
add
jmp
mov
cmp
ja
lods
fcomip
pop
mov
mov
ljmp
in
sub
jmp
test
cmc
test
pop
push
inc
mov
or
and
imul
test
cmp
insl
inc
stos
cmc
jbe
mov
cld
popf
out
sbb
or
insb
pop
addr16
lret
testb
mov
stos
push
fcmovb
xor
shrb
enter
cmpsl
jae
cmp
mov
sbb
xor
enter
inc
mov
pushf
movsb
loopne
sub
sbb
push
xchg
push
jbe
lcall
rolb
fldcw
pop
out
sbb
subb
and
ja
add
adc
and
mov
and
add
cmp
push
scas
mov
std
xchg
ret
movsl
xchg
inc
andl
int3
out
jl
clc
xor
or
cmp
sbb
adc
sbb
mov
das
icebp
dec
sub
cwtl
repz
mov
out
adc
stos
xchg
sub
lods
cmpsl
jg
jl
inc
les
sti
enter
ss
add
test
mov
jle
and
sarb
scas
popf
xor
cltd
rcr
cmp
and
mov
pop
jno
jge
out
imulb
andb
and
pop
daa
pushf
add
nop
fwait
mov
fdiv
in
scas
adc
out
aas
in
rclb
pop
xchg
adc
imul
pop
stc
inc
lret
adc
pop
fwait
sub
mov
fisttps
xchg
xor
imul
repz
mov
cmpb
scas
push
cmp
ja
sbb
or
popa
int
xlat
jecxz
adc
cs
or
test
addl
aas
roll
addb
dec
movsl
xor
sub
sbb
and
cmp
cmpsl
sbb
arpl
in
pushl
xorb
inc
movsb
inc
addb
addl
fistl
sti
push
nop
fidivl
mov
cmp
cmp
jge
inc
inc
lret
and
lods
jmp
test
shll
mov
sbb
aam
jge
sbb
out
lods
in
cmp
popl
xor
and
neg
sbbb
mov
jp
xchg
or
rol
jns
xorl
cli
mov
fistl
cmp
dec
sbb
test
dec
xor
in
fldenv
pop
insl
xchg
lret
pop
enter
daa
insb
adcb
pop
add
shlb
loop
cs
sbb
xchg
je
pushf
call
es
les
adc
ds
clc
stos
iret
mov
sbb
fcoms
cmp
push
dec
mov
insl
jns
xchg
jl
mov
mov
pop
mov
cmpb
dec
pop
fmul
inc
pop
adcb
xor
mov
cmp
and
lcall
cmpsb
iret
test
xor
les
je
pop
mov
jmp
outsb
mov
add
sahf
lcall
jp
or
and
jmp
leave
orb
hlt
pop
andb
fidivrs
sbb
imul
lods
in
dec
cwtl
inc
cmc
gs
mov
call
inc
loopne
ret
rorb
fs
push
jg
jp
lods
cmp
pop
add
adc
stc
xor
idivb
repnz
jmp
mov
rclb
test
dec
pop
cmpb
and
xor
inc
xchg
pop
rcrl
aam
rorl
dec
lock
mov
subb
aaa
inc
imul
repz
mov
bound
jno
cs
subl
mov
inc
cwtl
lods
push
in
jl
adc
dec
es
cmp
xchg
push
pop
cmp
arpl
mov
lock
adcb
int
cmp
lods
addr16
inc
add
cmp
or
jle
xor
push
jo
addb
pop
ror
jo
cmpb
xor
out
sbb
and
xchg
or
dec
ss
fsubrs
testl
call
pop
xorb
aas
inc
mov
addb
js
inc
or
popa
xor
idivl
inc
pop
loop
daa
push
cmpsb
aad
mov
loopne
jl
lret
adc
add
loopne
inc
fs
orb
mov
popf
mov
xchg
inc
xor
inc
xchg
std
sub
push
sbbb
roll
popf
mov
sub
fxch
push
popa
mov
pop
test
imul
popf
imul
pop
fisubl
push
inc
lahf
push
cmp
add
lcall
inc
ljmp
mov
js
testb
loop
lea
or
mov
jl
adc
pop
cli
imul
jae
adc
cmp
xor
dec
mov
inc
sbb
jge
mov
iret
mov
sub
inc
flds
call
or
mov
gs
sbb
int
cld
cmpl
xor
dec
and
adc
subb
stos
and
xor
in
stc
lods
cmp
or
adc
pop
sbb
addb
das
adcl
adc
in
subb
pop
int
cmpl
inc
and
jno
subb
pop
mov
into
cmp
dec
inc
xchg
jmp
rcrb
mov
scas
lahf
xchg
popl
sbb
add
and
cmpl
movsl
dec
add
subl
ret
inc
jle
mov
enter
push
mov
shll
stos
sbbb
std
push
dec
popa
aas
xchg
mov
nop
xor
dec
or
jl
in
loop
inc
div
lret
pop
out
and
sbbl
or
jne
pop
stos
mov
dec
clc
mov
in
addb
push
mov
or
inc
xchg
cli
inc
xchg
imul
sti
dec
push
andb
lahf
xchg
scas
cmp
imull
push
rolb
sti
rolb
add
insl
sub
adc
pop
inc
lcall
cmc
int3
pushf
sahf
mov
jg
movb
shrb
pop
nop
testb
addb
into
pop
subb
daa
fnstcw
lods
bound
rorl
jns
test
inc
push
xor
lcall
sbb
mov
loopne
cmpb
sahf
loopne
leave
add
xor
mov
push
inc
outsl
adcb
cmp
add
xorb
pop
adcl
fwait
push
sbb
dec
pop
outsb
inc
mov
sub
sub
xchg
loop
jb
cwtl
enter
sahf
cs
sti
dec
sbb
xorb
mov
sub
pushw
lock
sahf
dec
pusha
sbb
fsubrs
ja
cmp
fildll
xor
mov
and
movb
fistps
nop
sbbb
push
out
test
ds
pop
fcom
mov
shrb
clc
sub
and
cmp
cltd
orb
or
cmpsb
inc
xchg
xchg
dec
sbbb
icebp
jnp
subb
imul
lods
add
addb
cmp
imul
push
xchg
xor
test
subb
sub
sti
popf
push
or
pop
arpl
pop
push
sbb
pushf
ja
sub
in
dec
push
mov
fiadds
js
sbb
adc
leave
mov
cmp
lahf
mov
sbb
mov
sahf
mov
xorb
notb
xchg
in
cwtl
jnp
and
sub
adc
fnsave
andb
hlt
fsub
dec
stc
xorb
out
in
jle
adcl
lahf
lcall
andb
das
fld
inc
pop
std
pushf
or
sbbb
push
lock
orb
dec
mov
and
cmpsb
xchg
xor
sub
pop
adc
ret
arpl
mov
xchg
cli
cmp
adcb
mov
adcb
or
inc
pop
xchg
lods
stos
arpl
dec
sahf
and
das
lds
xor
dec
movl
gs
adc
jno
in
push
sarl
inc
jp
bound
mov
andl
or
xchg
and
cltd
aad
pop
add
and
xchg
sub
pop
sub
loope
push
sub
sbb
shrl
lret
mov
lods
and
lahf
orb
xchg
mov
sub
jecxz
inc
add
jb
cmpb
cmp
mov
pop
jp
movsb
jmp
and
cltd
lcall
shl
popa
test
adc
iret
jns
dec
mov
lret
mov
aam
add
cli
xchg
rcrl
loope
pop
jns
int3
cwtl
jmp
add
dec
pushf
mov
inc
push
and
arpl
xor
add
addr16
test
adcb
cmp
or
mov
sbb
push
add
dec
cmp
sub
addb
hlt
lea
repz
stc
add
mov
sarb
jne
push
dec
adc
or
push
xor
fdivrl
sub
sar
mov
pop
js
sbbl
pop
pop
sahf
mov
cmp
ret
mov
sub
scas
pop
mov
xor
mov
popa
int
mov
xor
sub
fisttpll
je
andb
jp
adcl
loopne
incb
in
roll
cmp
push
lcall
adc
clc
stc
push
push
ret
pop
lds
mov
shlb
enter
add
pop
fwait
es
ss
mov
aad
mov
rcl
mov
lods
arpl
test
push
ljmp
xchg
pop
add
lcall
or
inc
out
shrb
neg
popa
std
cmpsb
iret
mov
adc
xor
and
mov
fistl
and
add
stos
xor
sbbb
xor
xchg
jb
mov
sbbb
push
pop
inc
jge
andb
test
hlt
jno
addb
imul
push
loope
cmp
leave
cmpb
xor
xchg
sub
jge
aad
pop
mov
out
push
fdivp
sbbb
fs
xorb
pop
push
xorb
mov
cmp
and
ds
mov
mov
in
sbb
loopne
sbbb
adc
icebp
roll
in
lcall
movsl
add
mov
push
xor
jecxz
xchg
add
mov
sbb
sbbb
bound
mov
jo
ljmp
mov
stos
adc
dec
dec
scas
bound
xchg
orb
outsb
mov
leave
xchg
icebp
data16
xorb
cmp
test
inc
add
insl
sbb
sahf
pop
lcall
popf
outsb
mov
les
push
cmp
sub
mov
fdivl
xorb
icebp
pop
jnp
pop
cmpb
sti
jae
sbb
ficoms
fmull
xchg
or
int3
push
mov
add
mov
movb
test
cmp
adcb
mov
lock
andb
inc
cmpsb
push
aam
push
and
lret
ja
in
sbb
mov
and
push
xchg
jg
icebp
imul
jb
xorb
out
xchg
orb
jbe
subb
adc
bound
mov
call
icebp
xor
fildl
add
shl
hlt
push
adcl
add
loopw
or
cltd
cmpsb
arpl
adc
and
int
mov
jecxz
lds
jnp
mov
popa
jno
xchg
cmp
andb
outsl
leave
xlat
aas
sbb
inc
mov
adc
mov
push
jb
push
jle
scas
ret
lahf
jae
andb
enter
sub
jnp
jle
or
daa
jo
and
popa
cmpl
sbb
xor
cs
cmc
xchg
sbbl
jle
sbb
jb
js
push
jno
add
lock
mov
xor
les
mov
icebp
xor
subb
push
mov
xor
scas
int
xor
sbb
idivb
sbb
aad
mov
mov
ss
mov
adcl
and
xchg
jbe
sahf
jg
faddl
stc
insb
mov
mov
mov
lahf
xchg
andb
ret
data16
shll
pop
push
adc
xor
popa
or
bound
cmp
add
dec
clc
add
hlt
and
mov
repnz
adcl
iret
xor
test
in
out
pop
inc
mov
xor
dec
fiadds
in
push
add
imulb
xchg
das
cli
push
insl
mov
je
into
adc
dec
jno
adc
mov
mov
mov
test
jbe
addl
xchg
fcompl
hlt
adc
dec
add
dec
std
add
inc
xchg
pop
leave
add
cmp
xor
cmp
addb
adc
stc
fidivrs
loope
cmp
mov
ljmp
xchg
xor
xor
and
popa
outsl
stc
jecxz
jae
pusha
std
adc
pop
shl
call
test
repnz
insl
sbb
shll
xorb
add
mov
push
scas
dec
stc
push
je
jo
jnp
mov
cli
aam
outsb
adcb
mov
mov
imul
insb
outsl
xorb
lock
push
push
addl
xor
cld
aaa
xchg
sbbl
inc
dec
inc
dec
jb
cmpb
sub
inc
and
inc
mov
add
inc
lds
jle
leave
int3
inc
lock
mov
rcr
add
cmc
subl
jo
std
js
xor
shlb
mov
sahf
mov
jle
inc
nop
sbb
rclb
out
jp
stos
fadds
cli
inc
push
testb
cmp
data16
xor
cmpsb
or
out
add
cmp
shr
stc
cmpb
cmpl
lock
pop
mov
call
push
push
mov
pop
out
movb
mov
mov
xchg
dec
sbb
xchg
or
lcall
fbstp
and
push
jg
sub
and
lcall
aad
push
les
clc
scas
cmpb
pop
and
xchg
in
movsb
inc
test
fnstsw
sti
add
jbe
inc
cmpsl
mov
sbbb
push
jl
xor
fistl
cmpl
dec
or
jmp
pop
xchg
ficoms
mov
in
xchg
xor
cmp
add
mov
jo
iret
roll
sub
in
test
addb
subb
in
push
inc
sahf
push
dec
add
add
sub
cwtl
sti
movsl
cmpb
adc
or
jnp
ja
ja
xchg
add
jmp
xor
int3
andl
pusha
cwtl
push
dec
into
popf
xor
dec
inc
aas
sarl
decb
push
je
sbbb
and
pop
jg
pop
adcl
push
subb
dec
sbb
jae
xchg
leave
mov
or
mov
pop
scas
xchg
adcb
mov
lcall
pushf
fsub
add
jne
sbb
or
fnstsw
mov
daa
inc
mov
sub
pop
mov
addb
jge
and
sbb
mov
xchg
sbb
negb
out
cmpb
xor
mov
dec
inc
imull
inc
cmpl
jp
lret
mov
push
pop
cmp
ret
popa
sub
mov
pop
fisubrs
xchg
mov
xchg
pushf
or
adc
lods
ret
mov
fdivs
jo
cmp
adc
and
or
outsb
and
mov
inc
push
push
fbld
cmpb
and
jnp
jns
sbbb
inc
stos
adcb
adc
mov
cmp
stc
mov
mov
imul
fists
mov
xchg
xor
and
sub
test
fisubl
daa
or
sub
mov
push
mov
jne
jae
dec
pop
cmp
xor
sbbb
pop
cmpsl
sahf
and
imul
xchg
xchg
insl
mov
mov
mov
mov
mov
rcrl
popa
mov
inc
mov
pusha
and
dec
mov
cmpb
mov
jecxz
push
mov
add
add
das
add
mov
jbe
sub
or
sahf
sarb
xor
andb
in
sbb
cmpb
xchg
pop
fisttpl
notb
pushf
fnstenv
jno
insb
jae
fsubrl
orl
or
dec
icebp
loop
aam
add
xorb
ljmp
push
inc
and
bound
jno
je
cmc
dec
adcb
push
push
cvtpi2ps
andb
fstpt
sub
xchg
jmp
bound
movsb
xorb
setl
js
hlt
add
in
pop
adc
jge
cmp
leave
and
mulb
addb
cmpsl
scas
in
int3
cmp
xchg
mov
andb
sbb
outsb
cmp
andb
dec
add
push
dec
jecxz
mov
xor
int3
push
mov
popf
fsubrl
arpl
push
aam
push
mov
clc
int3
repnz
ret
mov
sub
dec
psubusw
mov
fistpll
push
es
ret
mov
addl
cwtl
pop
fsubs
ss
in
repnz
lcall
jo
rcll
pop
loopne
cmp
outsb
jl
fistps
psubw
mov
jge
aad
inc
pop
mov
cmp
mov
int3
leave
push
jp
sub
xchg
xor
mov
jmp
xor
jne
subb
jb
cs
pop
pop
push
sbbb
sub
cmp
nop
dec
cmp
pop
subl
pop
push
push
dec
and
pushf
xchg
mov
cmpb
mov
sbb
daa
xor
or
dec
xchg
fldt
fsubl
ljmp
lock
pop
enter
sbbl
xor
imul
lock
hlt
es
sbb
pop
pop
xorb
adc
pop
xchg
mov
stc
addb
jmp
test
ss
orl
push
orl
sbb
xlat
xor
test
pushf
lea
mov
jg
push
addb
mov
mov
sbb
adc
and
xchg
mov
je
jno
rorb
test
mov
add
daa
popf
ss
push
add
pop
jno
sub
xor
stc
xchg
xchg
adc
mov
xorb
dec
mov
mov
sbb
fiadds
jo
mov
in
daa
aam
or
jnp
stos
dec
pop
mov
mov
testb
cmp
xor
addb
mov
or
lods
jbe
sbbb
pop
mov
sbb
les
dec
jno
icebp
inc
mov
add
movb
dec
and
ss
stc
jl
sbbb
enter
fadds
sahf
mov
ret
je
and
jb
and
dec
push
test
stos
and
out
popf
shl
mov
sub
cli
xlat
sbb
fistl
push
xor
mov
dec
adc
cmp
cmc
adcb
rol
xor
xchg
adc
mov
pop
addb
clc
pop
lret
hlt
fdiv
enter
push
stc
cmpsb
stos
movsl
or
jp
sbb
pop
loope
mov
negb
lret
fwait
and
imul
addb
xchg
loopne
divb
add
scas
jmp
scas
and
push
add
jno
hlt
xchg
or
das
mov
imul
cmp
orb
add
out
xchg
adcb
pop
lock
inc
xor
shlb
adc
inc
stos
sub
sub
subl
repz
mov
and
mov
outsb
out
pop
test
loopne
dec
stc
xchg
leave
jno
imul
pusha
jbe
xchg
cmp
inc
sbb
dec
call
jmp
xor
fs
lods
test
imul
jecxz
add
mov
ds
movsl
push
cmpb
aas
cmp
cld
rolb
orl
xorb
adc
loope
pop
ja
lds
jl
imul
test
sbbb
cmp
lea
dec
jo
xchg
pop
orb
xchg
seto
orb
jne
xor
pusha
and
pop
loope
inc
je
inc
nop
push
addr16
cmp
cmp
dec
roll
or
push
xchg
push
fadds
lods
je
orb
faddl
fs
idiv
insl
subl
dec
push
mov
and
push
xchg
jno
lahf
leave
push
sbb
loopne
lret
dec
into
test
adcb
std
xchg
subl
pusha
inc
cmpsb
push
sbb
mov
xchg
data16
mov
jg
xchg
or
mov
sub
push
shlb
arpl
pusha
sbb
jg
nop
xor
ficomps
ds
or
mov
add
inc
sub
jle
loop
repz
test
std
mov
subb
in
cltd
pushf
into
lock
mov
xor
loopne
lea
iret
xchg
pop
not
imul
ss
xor
push
lods
into
lcall
adc
push
mov
xor
mov
lahf
mov
inc
cmp
push
push
or
jg
cltd
lock
aad
push
adc
cmpb
aam
orb
ficoml
popf
stos
nop
add
jl
xchg
push
cmp
xchg
sbb
adc
jecxz
add
nop
fdivr
je
into
pop
ja
test
das
push
xchg
inc
cmpsb
add
loopne
leave
roll
pop
loop
jle
jb
add
dec
pop
sub
dec
orb
lea
push
or
icebp
out
jb
xchg
into
daa
lods
std
shl
cmp
inc
mov
fsubs
pop
lret
xor
int
fistpl
xorb
inc
mov
js
subb
lahf
add
xor
inc
fdivl
add
cltd
icebp
movsb
imul
xor
mov
lahf
push
push
orl
aaa
sbb
imul
fs
ret
jl
pop
or
xchg
xchg
sbbb
cmpsl
movsb
cmp
aaa
popa
xlat
jnp
test
xor
adc
out
int
mov
andb
leave
sub
fsubrp
push
sbb
adc
bound
ja
cmp
lds
outsb
psubb
lahf
inc
mov
shlb
fs
je
outsl
pop
lret
jmp
subb
jno
mov
dec
mov
dec
jp
jae
pusha
out
lods
in
xchg
aad
popf
inc
hlt
mov
or
push
in
out
xor
js
push
xchg
mov
ljmp
pop
fcoms
lahf
mov
jo
inc
aas
mov
push
orb
xlat
cwtl
jne
mov
addl
xor
or
adcb
arpl
test
cmpsb
xchg
jg
add
jo
mov
mov
cmp
cmp
xor
xchg
fildl
push
andb
mov
or
pop
push
inc
mov
std
xor
loope
icebp
out
mov
test
add
mov
hlt
fmull
shr
daa
sbb
adc
bound
lea
hlt
lds
push
xchg
subb
fisttpll
pop
cmc
mov
dec
test
xor
outsb
imul
jne
sbb
ss
pop
scas
shl
orb
call
insl
decb
mov
mov
aas
mov
jbe
push
inc
stc
jp
pop
cmc
sbb
test
clc
cli
mov
sbbb
sbb
sbb
divl
sti
andb
outsl
mov
out
add
mov
dec
xchg
cmpsb
sarb
sub
inc
xor
test
jbe
xchg
orl
mov
clc
mov
dec
adc
xchg
dec
xor
cs
pushw
cmp
pushf
cmp
out
sbb
pop
sub
mov
aas
ficoms
andb
inc
call
dec
xor
mov
insl
fnsave
add
xor
sub
sti
xorb
dec
rcrl
ja
push
pop
add
imull
xor
add
adcb
push
test
cmp
int3
sub
or
mov
cmpb
nop
adc
push
pop
sbb
jg
xor
aam
jmp
clc
aas
mov
pop
int3
xor
mov
sbb
mov
ja
addl
test
insl
sbb
lock
dec
jle
add
insb
push
jp
pop
mov
jmp
jge
test
rol
enter
cld
in
jmp
jp
lea
repz
ret
mov
mov
aaa
sub
mov
mov
orb
je
push
adc
adc
orb
lahf
push
cmpb
add
push
daa
dec
subb
cld
aam
inc
xor
out
xorl
lock
mov
dec
cmc
je
das
loopne
jno
rcrl
out
test
mov
jmp
and
jge
icebp
inc
add
enter
jmp
adc
add
pusha
push
lahf
addr16
cld
mov
add
pop
fs
adcl
hlt
push
repz
incb
les
ljmp
sub
loopne
cs
addb
scas
jle
fdivl
inc
popf
sbb
mov
inc
cmpsl
mov
jle
je
xchg
lods
pop
cmp
out
and
adc
nop
pop
rcr
xchg
ret
cmp
leave
in
out
enter
and
sub
imul
adc
scas
je
outsl
test
ja
subb
mov
or
repz
shrb
aad
aaa
aas
xor
lahf
bound
loopne
mov
lcall
inc
lods
int
jb
sbb
idivl
iret
movsb
jo
sub
cmc
test
xchg
push
aaa
pop
xor
in
adc
sbbb
mov
and
ret
rcl
fildll
popf
mov
push
sahf
sub
add
pusha
mov
and
in
loope
inc
cmpb
dec
and
rolb
cmp
adc
andb
insb
andb
sahf
movsb
iret
dec
adc
fsts
leave
xchg
pop
lods
xchg
mov
inc
push
test
hlt
cmp
fsubrs
fcomip
insb
subb
cli
adc
xorl
test
cmp
enter
shlb
popa
xchg
and
stos
or
push
add
mov
push
shlb
imul
mov
and
adc
addr16
add
add
or
rorb
das
jns
xchg
adc
dec
pusha
or
fbstp
pop
gs
ds
mov
and
inc
out
addb
mov
xchg
pushf
jns
or
inc
ficoml
arpl
sub
lret
subb
test
subb
andb
scas
xchg
jge
mov
rclb
cmc
enter
sub
dec
repz
jg
jmp
push
std
rorb
call
out
loope
mov
fiaddl
stos
insb
or
mov
stc
inc
movsb
stos
repz
bound
inc
inc
js
cmp
dec
in
filds
cli
sub
mov
dec
or
enter
adc
test
mov
mov
push
mov
pop
xor
lds
dec
push
jnp
adc
out
sbb
loopne
add
jne
jo
andb
jo
loop
xorl
jle
hlt
jb
xor
popf
adc
sbb
out
loopne
mov
mov
pop
rclb
dec
cmp
adc
es
lret
add
sahf
jl
stos
sbb
adc
int
xchg
mov
adc
scas
cld
lods
hlt
andb
mov
dec
xchg
add
or
aas
xorb
mov
jnp
popf
jge
loopne
mov
push
mov
pushf
lods
pop
sbb
xor
mov
mov
js
mov
aas
adc
and
inc
shl
subl
movsb
cmpb
jl
dec
cmpl
fmull
aaa
jecxz
movsl
pop
mov
pusha
mov
push
jbe
and
push
out
xchg
andb
jecxz
mov
idivl
sub
popf
jle
jmp
mov
sarl
bound
mov
sub
outsb
add
xchg
mulb
or
jmp
sti
out
and
lret
mov
jle
xor
xchg
lahf
scas
and
aas
jl
loopne
enter
xchg
cmpb
dec
lea
sbbb
jnp
cld
iret
sbbb
push
mov
dec
cmp
pop
sub
addl
test
leave
mov
int3
push
pop
roll
hlt
add
sti
add
jmp
stc
jne
cmp
hlt
add
test
and
lahf
sub
leave
xor
loope
xchg
bound
dec
jbe
mov
out
cmp
ret
fidivrs
andb
mov
lahf
sbb
addb
xorb
iret
jmp
add
inc
test
push
add
call
cmpsl
cmpl
test
fildl
in
andb
mov
mov
push
add
or
ljmp
das
and
push
xchg
adc
inc
js
xchg
jb
les
loop
push
inc
xorb
xor
xorb
mov
orb
xchg
outsb
mov
xchg
xchg
pusha
stos
adc
ret
xchg
inc
cld
pushf
pop
adc
fistpl
cmp
mov
lret
andb
ret
mov
mov
dec
add
pop
adc
mov
push
add
data16
mov
orl
out
sahf
fadds
aam
subb
cld
sub
adc
ds
mov
sbbb
cmp
sar
scas
adcb
dec
out
pushf
mov
or
shlb
or
shlb
inc
jae
add
mov
addb
lcall
test
cmc
fmuls
mov
add
mov
jp
scas
jg
lock
orl
cwtl
loope
data16
inc
jb
lret
pop
dec
subb
jnp
mov
and
cs
mov
mov
adc
subb
mov
cmpb
mov
or
out
in
sub
pop
sahf
pop
call
hlt
xchg
mov
jae
push
and
es
xchg
dec
sub
cld
add
fidivrs
add
inc
orb
iret
cmc
or
gs
xchg
cmpb
fwait
cmpsb
lea
mov
sub
sub
mov
testb
fidivs
add
cmpb
or
subb
aad
ss
subl
jne
hlt
test
adc
shlb
jp
mov
xor
cmp
jbe
ds
adcb
xchg
aad
invd
popa
popf
aam
sub
shll
xchg
outsb
mov
lds
lea
shll
loopne
jnp
cmpb
xor
mov
notl
addb
mov
mov
mov
imul
inc
mov
outsl
mov
sarl
repz
inc
cltd
jae
andb
rcrb
out
orl
jl
loop
daa
aas
clc
pop
mov
cmp
xchg
or
inc
mov
sub
push
lcall
ffree
xorb
mov
sub
popf
xor
pop
std
sub
lods
mov
andb
cmp
mov
sbb
nop
sbb
inc
adc
orb
and
cmpb
inc
addb
lock
dec
adc
mov
shlb
or
xor
clc
inc
iret
stos
jle
andb
xchg
icebp
cmp
xchg
jle
cmpl
xor
xchg
mov
js
or
dec
subb
mov
fildl
sub
mov
pop
or
or
lock
push
mov
mov
pop
push
and
orb
fists
mov
add
mov
adc
out
mov
aaa
sbb
iret
adc
popa
and
addb
push
lods
jnp
adc
lock
rcrl
insb
nop
add
add
test
inc
arpl
mov
pop
out
or
mov
inc
bound
call
sbb
fdivrs
push
repnz
or
lods
sub
stos
lret
pop
mov
lcall
sub
mov
dec
xorb
pop
out
xor
sub
and
jnp
icebp
cmc
rolb
push
outsb
loope
or
int
out
cld
subb
sbb
mov
xchg
adc
aam
add
test
repnz
sbbb
adc
mov
in
xorb
aaa
fstl
inc
pop
lea
rclb
icebp
movsb
test
subb
dec
scas
pop
popf
into
int
add
jmp
sti
mov
repz
add
arpl
fistps
and
shll
xor
test
jo
adc
sub
loop
enter
inc
add
orl
sti
int3
jne
cmp
filds
aas
mov
cmp
ljmp
jb
add
pushf
add
add
ror
ds
hlt
loopne
dec
sub
jne
cmpb
inc
xlat
orb
das
and
pop
sbbb
rorl
pop
cltd
xor
xorb
jae
hlt
or
call
mov
cmp
andb
mov
orb
repnz
cwtl
sbb
lea
rcrb
out
scas
je
jbe
inc
sahf
popf
and
icebp
rolb
mov
xchg
sbb
in
push
jno
xor
pop
jecxz
jnp
insl
xor
jmp
pop
cmpb
push
shlb
ffree
sbbb
sbb
mov
mov
xor
xchg
mov
loope
fbstp
sbb
jecxz
addl
inc
test
jge
cld
xor
ja
mov
fiadds
sub
adc
mov
sbb
addb
aam
pop
sti
xchg
loopne
xchg
adc
jl
mov
adc
push
out
fucomi
int3
in
or
ret
jne
xorb
inc
gs
xor
jl
fstpl
test
inc
outsl
repz
fs
mov
orl
addb
lahf
lods
cmpb
in
addl
test
inc
ja
sbbb
cmpsl
lea
adc
data16
jnp
call
jecxz
je
out
subb
mov
sbbb
pusha
push
mov
pop
sti
loope
sbb
std
add
sbbb
cmp
aaa
insl
leave
xor
adc
or
cli
rorb
mov
and
xor
cmp
aam
movsb
mov
jae
sti
mov
sub
mov
dec
and
jo
xchg
mov
xor
call
and
mov
add
mov
inc
or
pusha
out
shlb
mov
mov
mov
pop
and
push
adcl
xor
popl
jecxz
sub
cmpb
adc
sbbb
pop
adc
scas
lcall
scas
daa
lods
mov
insl
inc
lds
insl
and
pusha
scas
push
clc
adc
call
cltd
add
mov
xchg
sbb
roll
fmull
mov
cmp
inc
lock
sub
mov
jecxz
popf
repnz
orb
pusha
sar
int
sbbb
pop
addl
adc
push
and
subb
out
cmpb
inc
cwtl
mov
das
data16
ja
sbbb
stos
ss
xor
cmpb
mov
ja
push
outsl
jb
lock
js
out
lret
pop
int3
sub
cmp
cmc
lcall
loope
js
mov
push
cmpsl
sbb
movsl
pop
cmp
testb
mov
orb
lods
sarb
inc
mov
dec
addr16
push
mov
jo
sbb
hlt
in
pusha
imul
mov
sahf
cmp
cmp
imul
in
cli
push
movb
pushf
inc
adc
pop
test
rcl
fiaddl
push
xor
addr16
jo
xchg
aas
add
popa
fiadds
shl
int
ds
jge
loopne
adcb
sar
jmp
cmp
push
inc
inc
cmp
adc
inc
or
jne
ror
addb
shlb
cmp
xor
and
test
cmp
das
in
xchg
mov
nop
subb
lret
test
jle
add
mov
imul
call
push
imul
inc
loop
hlt
mov
sbb
fildll
pop
adcb
orb
cmp
aad
subl
fldl
jae
outsl
orb
or
pop
jmp
lret
adc
push
repnz
mov
push
int3
data16
jnp
push
je
xor
loop
dec
mov
mov
jo
dec
xorb
xchg
aam
in
arpl
xchg
mov
mov
into
std
or
xorb
mov
adc
loop
jecxz
cmp
xchg
jae
ljmp
adc
push
addl
cltd
inc
rorl
mov
je
xorb
xor
lods
add
jmp
adc
jl
sbb
sbb
inc
addb
dec
inc
mov
add
shl
push
pop
pop
faddl
dec
xchg
xlat
xchg
jmp
jle
xchg
pusha
mov
sub
push
testl
ljmp
pusha
movswl
or
movsl
scas
and
pop
out
jnp
lret
subb
xchg
jae
add
mov
sbbl
std
pusha
lret
sub
test
mov
add
push
lcall
rclb
pushf
fisttpl
leave
or
cmpl
push
adc
in
ljmp
enter
xchg
scas
dec
sbbb
gs
stos
das
cmpb
je
js
xor
cmp
insb
sub
push
mov
icebp
jl
adc
popa
sub
jmp
js
cmc
gs
pop
pop
or
sbb
cmp
sbb
shld
icebp
sbb
subb
lcall
ret
mov
inc
addb
out
aad
adc
adc
int3
push
mov
and
incb
mov
cmp
orb
sbb
je
jp
pop
jg
popl
fbstp
jge
mov
repnz
jmp
inc
ss
jl
sbbb
push
movb
mov
andb
inc
unpckhps
or
add
sbbb
xor
pop
ret
les
xor
divb
ficompl
rclb
subb
mov
les
pop
std
xor
mov
inc
clc
xorl
xchg
pop
fstpt
pop
jle
orb
jnp
push
mov
subb
xchg
dec
mov
movsb
sahf
pop
and
loop
iret
out
push
jne
fcmovnb
push
cmp
dec
or
and
adc
test
lods
xlat
sahf
inc
cmp
mov
cmp
pop
js
or
or
sbb
pop
cmp
xorb
and
inc
push
jb
je
arpl
pop
dec
gs
rorl
cwtl
jbe
into
add
fs
orb
pop
xchg
fmul
addb
add
push
cmpb
inc
pop
sbbb
and
pop
jmp
mov
mov
adcb
ss
sbbb
rorb
jae
filds
xchg
lods
sub
xchg
and
adc
push
stos
inc
jg
repnz
das
and
dec
inc
mov
xor
loopne
adc
cltd
cmp
es
js
aas
xchg
orb
je
and
and
fimuls
les
pushf
and
sbb
scas
in
jp
adc
pop
xchg
inc
les
mov
jl
push
pop
je
mov
pop
inc
inc
cmp
subl
cmpsl
subb
adc
clc
xorb
cmp
stos
scas
sbb
mov
add
jnp
push
in
or
xor
jmp
and
and
daa
out
leave
push
sub
fiadds
mov
and
mov
aad
lods
hlt
pop
sbb
sub
mov
fs
jp
adc
loopne
pop
and
cmc
imul
add
mov
data16
xchg
andl
sub
ret
sbbb
addb
xchg
jo
dec
repz
or
outsl
jle
xchg
adc
lahf
shlb
insl
pop
rcr
addl
adc
and
sbb
inc
mov
in
sbb
lret
lds
dec
lea
sub
repz
xchg
sahf
daa
in
inc
pop
xchg
mov
popf
add
xor
movsl
js
jle
subb
testb
pop
lock
jne
sub
adcb
aam
push
mov
jg
jo
int3
sub
pusha
push
dec
push
lods
lods
xchg
outsb
aam
hlt
sbbb
scas
fnstenv
xchg
loopne
jnp
mov
aaa
or
int3
bound
or
stc
jne
insb
pop
int
lds
push
xor
sbb
cmp
mov
xchg
inc
jmp
xorb
jge
scas
push
dec
loopne
dec
in
addl
repz
jo
add
rclb
mov
aas
cmpb
jno
addl
cmp
xor
cmpsb
pop
xor
aad
sbbb
fiadds
add
rcrl
cmp
xlat
push
or
push
cltd
scas
out
pusha
mov
cmp
dec
and
adc
add
fcomps
sbb
xorb
into
mov
xor
in
dec
pop
aas
aad
std
movb
shll
xor
lret
fwait
lds
mov
mov
mov
testl
dec
and
push
dec
mov
add
loopne
xor
xchg
cmp
mov
mov
mov
push
mov
adcb
sarl
push
adc
add
sarb
cmpb
sub
out
push
andb
jecxz
dec
cld
pop
pop
xorb
sub
sbb
dec
ss
xor
addl
cltd
imul
xchg
push
sarb
xlat
xor
cmp
xor
daa
enter
cmpsl
jae
inc
jno
mulb
lock
sbb
sub
xor
mov
mov
leave
das
mov
add
jge
add
adcb
ljmp
pop
add
test
gs
inc
lea
mov
fldl
jecxz
pop
ja
and
mov
dec
notb
sti
je
popf
roll
leave
jl
and
sbb
xchg
push
xor
xor
xchg
jp
pop
adc
lret
pop
inc
lcall
fldenv
sbb
addl
sbb
das
loope
in
mov
jle
add
arpl
js
test
or
adc
xor
fmull
outsb
xor
insl
leave
mov
mov
xchg
dec
in
push
imul
fwait
or
bound
mov
push
xor
add
mov
mov
pop
nop
js
pop
dec
mov
push
lret
scas
subb
popa
andb
enter
adc
or
out
subb
sbb
subl
cmp
and
ret
mov
repz
pop
popl
icebp
andb
sti
arpl
inc
sbb
xor
add
mov
std
int
dec
xchg
sbb
add
test
stc
xchg
lahf
fcoms
addl
pusha
xchg
and
bound
loopne
test
fadd
stos
cld
mov
idivl
xchg
stc
cmp
sbb
fldl
dec
jb
sub
movsb
inc
or
addl
mov
pop
rcrb
sar
stc
or
dec
mov
inc
mov
das
rorl
loopne
std
xorb
pop
sbb
mov
fisubrs
xchg
lea
xlat
lods
cmpl
dec
mov
enter
mov
movb
jb
cld
mov
test
mov
xor
lahf
sub
jae
add
jns
or
out
push
lds
iret
outsb
popa
lret
push
in
out
jl
ds
addb
cmpsb
pop
dec
cmp
adcb
shll
pop
fcoms
push
jbe
pop
loop
pop
sub
clc
out
mov
sarb
or
out
and
xor
xor
popl
cmpsl
xchg
rclb
cld
orb
jp
bound
daa
mov
pop
lret
test
cmpsb
mov
push
pop
xor
xor
mov
fstps
sub
push
cmp
iret
loopne
cld
adcb
sahf
or
cli
adc
push
cmp
orb
loope
adcb
mov
fstp
inc
cmp
test
mov
jge
add
sub
in
lds
and
int3
sub
orb
xchg
mov
add
pop
push
mov
scas
sarb
sbb
dec
jl
orb
mov
add
xor
cmc
inc
out
scas
xorb
mov
jnp
or
jle
dec
pop
jle
pop
lods
insl
pop
orb
outsb
mov
cs
lahf
scas
insb
pop
xorb
jle
int3
test
cmc
shrl
pushf
jo
cmp
sbb
xchg
dec
std
jmp
movsb
adc
roll
mov
sub
cmc
mov
pop
xorl
cmpsl
mov
push
push
add
sbb
test
addr16
pop
push
or
inc
sbb
mov
inc
xorl
cmp
inc
lods
sbb
movsl
cltd
xchg
cli
dec
js
subb
push
adc
add
push
push
xchg
andb
mulb
sbb
xorb
imul
out
push
stc
in
pusha
adcl
neg
cmpb
cwtl
arpl
test
mov
mov
jge
in
xchg
inc
andl
js
and
xorb
inc
cwtl
add
mov
adc
sub
lods
into
dec
jbe
xchg
sti
out
rclb
cmc
mov
adc
loope
sub
pusha
arpl
mov
add
or
icebp
adc
rorl
decl
cmc
imul
sbb
repz
dec
stc
sub
pop
das
js
and
jno
pop
movsb
push
cmpb
jae
mov
inc
nop
sti
cmp
call
ljmp
outsl
push
pop
inc
std
scas
and
dec
adc
ret
push
jmp
cltd
idivl
xlat
jl
mov
jns
int3
add
arpl
dec
pop
xchg
sbb
inc
imul
fwait
test
loopne
outsb
pop
subb
cmpsl
in
jbe
sbb
and
xchg
into
sahf
pop
js
andl
lods
pop
cwtl
mov
adc
xchg
xor
jo
aaa
fs
jg
dec
sbb
enter
xor
cmpsb
jmp
loope
outsb
rol
cmc
and
cltd
jno
ss
clc
jo
fsubrs
xchg
dec
dec
add
addl
mov
jns
mov
add
fidivl
subb
insb
jb
adc
xchg
jno
ret
fldl
jns
stc
dec
xor
jl
cwtl
jnp
movb
adc
loope
add
dec
ljmp
cmp
cmpb
test
sbbb
mov
inc
subb
orb
lret
xor
rcr
pop
dec
push
xor
test
cmp
mov
daa
mov
add
adcb
testb
jae
sub
dec
aam
in
xor
pop
sbb
outsb
in
pusha
andl
je
adc
sbb
fcomps
arpl
fildl
andl
sub
ds
jo
mov
sbb
in
pop
pop
jae
cmpl
sub
inc
aam
jmp
sbb
cmp
sbb
push
push
faddl
sub
cmp
jge
nop
fs
icebp
mov
adc
pop
jbe
xchg
pop
movsl
dec
dec
xor
cmpsl
sub
push
fsubrs
dec
negl
jl
sbb
shrl
clc
subb
xadd
push
mov
dec
jp
add
dec
or
in
stos
sbb
pop
orb
mov
loop
stos
sub
das
cmp
decb
inc
lds
out
sub
aaa
mov
push
lock
sbb
jbe
leave
xlat
and
mov
ljmp
pusha
test
das
adc
je
dec
orb
add
jns
out
jl
cmp
pushf
jge
movsb
mov
subb
inc
xchg
sub
sbb
test
fnsave
roll
mov
mov
jns
mov
clc
push
cmpb
out
push
iret
sahf
sub
popf
adcl
mov
cmp
insb
mov
in
popf
xor
lods
sbbb
mov
xor
fwait
and
clc
cmp
cmp
jae
jle
jp
and
mov
fstps
lods
lods
aas
add
sub
jbe
add
repz
jg
sub
mov
fnsave
add
into
xorb
stc
out
jmp
or
push
fnsave
andl
mov
stc
repz
ficoms
out
jae
jne
dec
jl
addb
out
fldl
cmpsb
int
fdivrl
in
lods
jecxz
leave
adc
or
xchg
popf
addb
push
push
jmp
dec
insb
lret
push
fsub
ja
test
addb
mov
pop
inc
sub
cmp
jae
andb
inc
xchg
insb
nop
jno
ss
jae
xor
shrl
sbbb
xorb
imul
iret
ret
sbb
rcrb
sub
xchg
adc
sub
pop
aaa
cmpb
and
js
sbbl
sbb
enter
add
leave
xchg
ljmp
cmp
sbb
subb
pop
push
push
mov
or
pop
adcb
ficoms
pop
in
sbbb
sar
rolb
subl
mov
push
je
inc
arpl
test
inc
pop
mov
and
adc
or
test
pop
lods
cmpsl
aam
adc
in
xor
mov
out
out
dec
stos
xchg
daa
cmp
jb
addb
mov
andb
ss
inc
loop
sbb
je
cmpb
jno
add
cmpb
cmp
adcb
pop
xor
or
fdiv
movl
fadds
sbb
clc
out
pop
pop
xor
sbb
jg
push
jmp
mov
xchg
xor
inc
and
mov
pop
int3
leave
sub
push
adc
or
mov
testl
lds
imul
push
fdivs
ret
xchg
clc
push
sbbb
loopew
and
add
push
mov
ret
mov
xchg
pop
mov
pusha
adc
push
mov
jge
xchg
sahf
addl
jb
aam
ret
push
sbb
pop
xor
std
xlat
or
push
jecxz
mov
and
dec
dec
sbb
mov
stos
mov
icebp
adcb
in
sbb
rcrb
fwait
xchg
and
sarl
or
xchg
push
jno
jo
nop
cmc
daa
mov
jp
fs
pop
cmp
test
sbb
xorb
mov
adc
xchg
or
rorb
rcll
mov
faddl
jmp
ds
movsl
leave
popf
and
jo
inc
lods
mov
cltd
fistps
mov
push
jg
fst
xchg
js
add
enter
and
lock
push
inc
xchg
dec
cmp
popl
fbstp
outsb
xor
addb
mov
addl
mov
lret
jl
rolb
out
inc
mov
and
push
sahf
inc
inc
mov
jecxz
dec
cmpl
push
and
jmp
pop
push
popf
and
out
imul
pusha
ret
ljmp
xorb
stc
mov
lret
or
sbbb
loopne
mov
cld
js
clc
addb
add
jae
or
addl
add
subb
push
repz
in
sbb
insb
xlat
jbe
sub
test
pop
dec
xchg
adc
rcr
inc
pop
popf
insl
aam
and
mov
mov
xor
sbb
sahf
inc
jo,pt
gs
jno
push
xchg
adc
push
or
repnz
jb
addr16
int
jno
orl
aad
or
cmp
cmpsl
xchg
jge
cs
fcompl
cmp
jle
fisubrs
repz
ror
cld
pop
orb
in
dec
ja
loop
sahf
notl
jns
enter
mov
xchg
mov
dec
inc
adc
push
push
insb
repnz
lahf
cmp
mov
stc
push
rolb
push
pop
loope
xchg
loopne
in
or
sbbb
ficoms
sub
dec
inc
fnstcw
add
scas
mov
cmp
push
pop
xchg
loope
fstpl
iret
in
jg
sub
jns
ret
xor
cmp
pop
push
rcrl
mov
xchg
dec
mov
call
scas
mov
add
stos
or
or
mov
sbb
lock
inc
sub
xchg
mov
jmp
subb
jae
data16
icebp
push
jg
adcl
pop
cmp
jp
imul
subb
or
mov
xchg
sbb
push
ret
ljmp
fildl
push
sbb
int3
adc
fwait
xor
cmp
sbb
dec
cmpb
add
lret
shlb
mov
jg
clc
mov
sbb
arpl
mov
inc
jg
popl
pop
scas
and
or
sti
ret
add
mov
jmp
inc
jne
jle
mov
add
cld
mov
test
movsl
sub
es
stos
icebp
mov
lds
clc
subb
jg
fisubrs
fistps
xorb
mov
subb
fdivrs
inc
jnp
or
add
adc
xlat
xor
inc
add
push
dec
pop
repnz
mov
pop
sahf
loope
mov
popf
and
ret
mov
in
inc
mov
fcmovnu
fists
sub
ret
xor
or
imull
sub
mov
arpl
das
xchg
or
addr16
sbb
popf
jns
incb
mov
fimuls
adc
or
dec
jp
fsubs
lea
pop
dec
jle
jl
sbbl
xchg
and
mov
dec
push
addb
xchg
mov
shlb
mov
xor
lock
mov
jmp
cmc
push
sub
mov
inc
into
dec
sbbb
or
mov
pop
daa
push
inc
sub
inc
call
push
subb
in
emms
icebp
sbb
out
cmp
stos
loopne
push
xorb
leave
sbb
in
test
and
pop
add
jne
sbbb
in
inc
lahf
ljmp
cld
jbe
idivb
stos
sbb
inc
and
movsl
je
loopne
mov
sub
or
cmp
das
fcompl
xchg
int
xlat
xchg
fwait
inc
pusha
pop
mov
inc
sbbb
sti
leave
pop
jge
sahf
mov
lods
dec
sbb
mov
notb
fildll
and
pushl
enter
popa
jle
sbb
jns
jb
subb
in
enter
adc
cltd
ds
and
shll
loopne
orb
sahf
mov
mov
imulw
pop
sahf
pop
outsb
out
std
jl
jbe
cmpsl
xchg
xor
mov
stc
pushl
addl
cmpb
cmpsb
sahf
sbb
jo
in
lds
sub
mov
rclb
add
push
mov
imul
jg
jnp
ljmp
das
cmp
test
sub
dec
cs
xor
push
gs
adcb
cmp
inc
cmpb
push
clc
or
fchs
movl
iret
sbb
add
sar
sarl
mov
fcom
sbbb
std
sarl
adcb
jle
jle
js
cmp
pop
jge
ja
xchg
stc
push
addr16
outsb
pushf
sti
testb
rcrl
cmpl
ret
mov
fs
aam
iret
cmp
subb
jg
jb
mulb
jne
bound
orb
add
dec
xor
or
push
test
push
fcmovu
inc
int
jp
subb
jmp
lahf
add
jb
jo
xchg
push
xlat
ds
addb
rolb
xorb
xorb
dec
loopne
cmpl
lea
xchg
xchg
push
mov
add
ja
jns
mov
popl
gs
lret
out
subb
std
adc
inc
sbb
xor
sbb
mov
orb
mov
lahf
adcl
sub
mov
adc
cmp
orb
fldenv
dec
mov
pop
jo
aad
hlt
andb
xchg
nop
xchg
inc
sbb
shlb
insl
pop
push
fadds
add
adc
aaa
sbb
push
roll
push
mov
cmp
pop
push
loope
and
gs
xor
adc
into
pop
cmp
and
imul
pop
adcb
sub
cmp
xchg
movb
shrb
xor
sbb
xchg
lock
cld
ss
xchg
xorl
lods
cli
ret
xchg
call
dec
in
cmpb
repz
cmpsb
pop
cmp
adc
mov
dec
add
popf
fdivrl
cmpsb
xchg
xchg
cli
gs
dec
dec
mov
ret
push
jb,pt
jne
imul
ficompl
xchg
mov
mov
sbb
inc
out
sbb
mov
mov
adc
icebp
mov
sub
mov
test
clc
push
sub
mov
pushf
xchg
and
mov
lret
adc
xor
icebp
int3
add
addb
fisubs
adc
xorb
roll
cmpsw
mov
inc
pushf
je
xor
cmp
out
fists
aam
lcall
into
adcl
dec
add
rorb
xchg
mov
mov
out
cmpl
or
mov
addb
and
repz
cmp
testb
dec
addb
adc
push
mov
xchg
adc
mov
inc
ljmp
loopne
pop
iret
sbb
pop
dec
negb
cmp
les
cmp
xchg
in
adc
add
mov
add
rorl
sub
mov
stos
xchg
cmpsl
dec
xchg
push
jl
cwtl
pushf
or
test
cmp
or
addb
adc
xorb
or
mov
mov
out
xchg
imul
cld
cmp
bound
pushf
mov
push
adcb
sbb
fwait
xchg
js
push
cwtl
addb
pop
jae
and
aas
sub
adcb
xlat
xor
sbbb
mov
or
addb
jo
movsb
lcall
push
mov
sub
incl
rcll
xor
xchg
dec
faddl
fadds
addr16
ss
dec
addb
adc
and
stos
push
incb
or
popf
movsl
in
mov
andb
std
jo
repnz
xchg
shlb
out
insb
and
xor
ja
inc
sub
push
mov
test
hlt
pop
es
mov
xchg
je
or
insl
sbb
xor
xchg
test
out
mov
popa
and
movsb
or
test
push
popf
icebp
xchg
pop
iret
andb
xchg
dec
dec
xor
fildl
addb
hlt
test
xchg
pusha
mov
cs
mov
addr16
xor
fbstp
insl
adcl
aad
xchg
xchg
and
orb
repnz
inc
pushf
ljmp
adc
ss
or
xor
js
push
aad
mov
push
push
sub
mov
pop
ljmp
addb
xchg
cmp
cmpsb
and
add
mov
and
adc
mov
out
sbbl
or
mov
mov
mov
inc
test
in
mov
add
out
out
xorb
lret
sbb
mov
call
or
adc
aam
std
push
mov
fsubl
adc
jnp
mov
iret
icebp
inc
cmpb
cli
lock
dec
or
fucomip
sar
jb
insl
jl
xor
xor
mov
jno
mov
fiadds
les
sub
rcll
jnp
mov
and
sahf
mov
push
xchg
repnz
fistpll
mov
mov
scas
ss
or
in
rolb
jl
mov
and
cmp
and
mov
jp
andb
jl
xorb
mov
xor
orl
outsb
pusha
data16
sahf
cmp
and
bound
mov
xchg
roll
sbb
inc
pop
mov
call
roll
sbb
sub
out
pop
sub
mov
xor
andl
lds
pop
in
dec
mov
jbe
jae
xor
addb
fldenv
jo
lret
orb
sub
shlb
icebp
xchg
mov
pop
adc
stos
or
pop
xchg
pop
repnz
adc
mov
and
inc
ja
push
scas
cmpsl
pusha
aam
xchg
shl
fistps
sbb
lcall
popa
hlt
or
sbb
pop
movsl
insl
fs
insb
andb
xorl
add
add
fdiv
leave
popf
push
andb
loopne
pop
cmpb
enter
ljmp
shr
xlat
jg
pop
and
mov
xchg
notl
pop
outsl
mov
or
repz
sti
std
push
adc
shrb
and
shlb
add
mov
pop
in
add
clc
mov
sub
cmp
sub
jo
and
inc
or
dec
inc
rorl
addr16
sbb
in
ds
testl
loopne
andb
dec
js
repnz
icebp
xchg
xor
stos
add
jo
mov
test
cmp
mov
xchg
out
andb
mov
sub
xchg
mov
cmpb
imul
shufps
not
scas
push
clc
fsubs
mov
ret
cmp
rol
sti
mov
add
adc
lret
mov
sahf
stos
dec
xorl
testl
mov
leave
push
fistl
testb
test
repnz
std
push
int
inc
std
xor
mov
fadds
cs
subb
sarl
in
ret
and
jecxz
add
lcall
push
test
cmp
andb
sbb
divb
lret
add
xor
xor
and
jno
test
push
in
cs
es
add
nop
leave
dec
sbb
xchg
aam
or
std
lahf
and
and
dec
pop
fcomps
and
mov
adc
xor
mov
je
dec
subb
sub
jae
daa
pop
mov
mov
scas
aas
es
add
pop
cmpsb
lds
in
fldenv
xchg
jo
andl
inc
stc
sbb
adc
aad
xorb
cwtl
std
cmpl
mov
cltd
lret
pop
xchg
test
mov
subb
push
pusha
xor
cmp
cmpb
mov
add
add
out
rcr
sub
dec
nop
stos
xchg
adc
cmp
pop
leave
cmpb
mov
jle
xchg
sub
outsl
push
jae
jl
popf
roll
mov
push
adcb
push
inc
sbb
xlat
fcoml
xorb
addb
repz
mov
adc
pop
jl
or
xor
jnp
jnp
and
adc
jl
push
stos
or
fucomi
rolb
loope
jo
pop
and
add
cwtl
mov
cmpb
cli
xchg
loope
cmpsl
cmp
into
xor
pop
shr
dec
outsl
andb
dec
jge
mov
xchg
div
pop
subw
push
repz
mov
xorb
pusha
sub
pusha
mov
mul
inc
nop
aad
and
stc
arpl
aam
pusha
fwait
xchg
hlt
fnstcw
js
into
rcrb
adc
pop
sub
and
mov
orb
loopne
mov
dec
rcl
js
sbb
movsl
lahf
nop
xor
movsl
mov
push
or
movsl
cld
jecxz
add
lcall
lret
cmp
sub
andb
xchg
call
out
mov
add
cmpsb
js
push
loopne
rolb
mov
push
addr16
fldenv
or
arpl
jno
adcb
or
add
aad
jnp
and
lahf
push
ds
mov
into
daa
fldenv
mov
mov
mov
shlb
mov
lret
sbb
and
subb
repz
jbe
incl
push
mov
arpl
push
add
adc
jb
sub
stos
and
test
sub
xor
jae
mov
xlat
mov
push
mov
mov
lea
jle
leave
push
push
inc
sub
dec
mov
mov
mov
je
push
inc
cmp
repnz
jnp
cmp
xor
or
out
insl
cs
mov
in
mov
jo
aad
icebp
xchg
cltd
or
pop
lock
xorl
in
cmpsl
xchg
in
jb
sbb
dec
xor
pop
or
popf
and
sbb
rcrb
je
adcb
shrl
or
inc
outsl
sub
andb
sbbl
pop
dec
push
cmp
and
andb
or
out
push
psrlq
sbb
or
sbb
xchg
xchg
sub
mov
inc
jo
add
mov
je
mov
iret
pop
out
js
ljmp
mov
mov
or
in
dec
cmp
push
cltd
dec
addl
andb
cmc
orl
add
add
rcl
dec
mov
stos
mov
sbb
fnstenv
sahf
aad
pusha
cs
in
push
pop
lds
mov
or
push
mov
loope
imul
sarb
inc
test
outsb
mov
cmp
inc
stos
adc
addb
xor
sbbl
inc
stos
ret
lret
cmc
or
bound
rorl
ficoms
enter
adc
lcall
addl
mov
mov
xchg
inc
int3
xchg
and
xorb
movlps
add
jp
and
jnp
add
ljmp
pushf
mov
push
fbld
incb
xchg
cmpb
add
testl
lea
jmp
mov
adc
mov
sbb
pop
push
addb
pop
out
std
dec
jne
cmc
fstpl
cmp
pop
xorb
xlat
add
adc
les
and
sbbb
loopne
xchg
mov
adc
cmp
cld
jne
popf
repz
fdivrs
rcrl
addb
sarl
mov
addb
fimull
sbb
adc
mov
dec
push
jmp
mov
addb
or
or
jno
scas
stos
jl
cmp
lds
andb
pop
dec
out
test
fsubrl
sub
inc
inc
adc
mov
sub
stos
sub
repz
jbe
icebp
mov
push
je
mov
clc
sbb
cmp
sbb
stos
insb
loop
inc
popa
sbbb
fcomip
repz
in
mov
inc
xchg
outsb
test
insb
and
add
add
pop
in
clc
lret
pop
or
adc
sub
push
loope
aaa
pop
popa
fs
or
insb
adcb
adc
push
sub
mov
test
mov
push
jnp
mov
adc
cs
sbbb
sbb
add
pop
xorl
sub
pop
xchg
mov
or
ds
push
enter
and
les
pushf
lock
xchg
daa
mov
pop
push
addb
mov
and
loopne
cmp
and
add
lret
daa
push
repz
pop
cmp
xorb
pop
leave
mov
incl
aad
mov
pop
push
pop
cmpb
leave
xor
int3
in
into
add
orb
adc
push
push
lds
jmp
fldenv
cwtl
or
das
xchg
xor
fsubrl
repnz
sub
cmp
adc
hlt
ror
mov
or
out
pop
adc
idiv
sbbb
push
jp
jnp
xor
sbb
gs
lds
xchg
lods
xorb
subb
mov
stos
mov
adc
xchg
fisttpll
jmp
xchg
es
and
ljmp
ret
sahf
lods
repnz
sti
jnp
movsb
add
pushf
fs
sahf
dec
mov
pop
fistps
outsb
pusha
cld
ja
jbe
mov
pop
add
jl
subl
pop
repnz
sub
nop
jb
mov
xor
aas
add
movsb
pushf
xlat
push
hlt
xchg
ljmp
and
inc
mov
loopne
inc
fstp
mov
add
xor
sbb
add
pusha
loopne
push
mov
or
push
add
dec
int3
pop
hlt
sti
mov
add
dec
clc
add
stc
vmread
sbb
test
iret
xchg
subl
mov
lods
inc
add
insl
loopne
adc
aaa
orl
insb
outsl
es
test
cmp
cmpsl
mov
lods
sti
out
cmpb
fists
xchg
xchg
xchg
lock
rolb
loope
outsl
loop
pop
mov
sbb
ror
and
dec
sub
jle
roll
xor
js
mov
test
ret
push
inc
sbb
mov
sub
leave
cmpb
sub
pusha
cwtl
orb
add
mov
sar
idivl
adcb
xorl
inc
dec
mov
and
pop
pop
into
sbb
int3
adc
bound
lcall
adcb
add
adcb
and
addb
cltd
out
sbb
or
dec
lods
test
xor
inc
call
aad
fildl
test
xchg
lods
repz
jmp
andl
cmpb
mov
push
fs
or
in
ret
int
and
jne
and
xchg
clc
outsl
mov
xlat
jno
pusha
dec
addr16
jle
inc
fimull
sbb
divb
outsl
jg
xor
shlb
cld
incl
dec
mov
in
adcb
inc
fsubs
in
jbe
and
or
cmpsb
in
out
adc
iret
inc
in
cld
sbb
add
and
pop
pop
xor
xor
fisubl
rorb
adcb
add
fildl
jl
jle
pop
std
jns
mov
andb
push
push
mov
jg
xchg
xor
adc
and
xchg
push
mov
jge
into
add
mov
andb
lahf
jae
fcmovne
mov
pop
xor
adc
scas
xor
or
mov
shlb
xchg
sbb
test
ja
leave
js
mov
andb
jecxz
cli
pop
inc
sbbb
push
in
mov
pop
xacquire
jnp
dec
mov
loop
and
mov
add
movsl
insb
in
and
xchg
hlt
jnp
dec
das
xchg
push
subb
jne
into
mov
jecxz
or
push
adc
pop
cmpsb
mov
lock
dec
stos
sub
cs
insb
shrl
push
movsb
aam
cmpsb
cmpb
icebp
into
addb
lea
jmp
shll
cmpsb
repz
push
mov
dec
int
push
xchg
gs
mov
and
lahf
sbb
ds
faddl
subl
mov
ja
xor
dec
pop
push
mov
jl
fwait
adcb
xchg
xor
add
xor
jbe
jle
subb
ret
push
or
mov
jns
cli
or
lret
jle
jbe
roll
cmpsb
jg
dec
subl
dec
jnp
pushf
pop
adc
call
mov
and
push
aam
add
push
xor
adc
gs
arpl
mov
int3
ror
jbe
faddl
mov
fildl
jle
rorb
je
orb
aaa
dec
push
mov
cwtl
cmpb
cmp
push
scas
cmp
mov
mov
arpl
cs
andb
xchg
xorb
xor
fisubrl
in
outsl
jl
arpl
imul
divb
nop
xor
mov
pop
jp
xchg
or
mov
cmp
dec
subb
mov
lret
fists
mov
aam
dec
loope
and
jl
sub
pop
addl
lret
andb
mov
inc
push
mov
subb
or
jno
push
and
es
repnz
push
adc
andb
adc
lock
roll
pop
cmpb
mov
add
and
hlt
mov
pop
ret
and
xor
or
addl
push
add
pusha
cli
mov
mov
sahf
pop
fiaddl
push
sbb
pop
mov
mov
ss
push
push
sub
xchg
loopne
iret
andb
pop
xchg
nop
divb
es
push
ja
mov
dec
add
loopne
mov
xchg
and
sbb
frstor
andb
or
push
or
mov
loop
or
stos
fwait
mov
out
inc
pusha
aas
icebp
ficomps
dec
addb
in
or
popa
scas
mov
add
insl
xlat
and
ja
xorb
loopne
into
in
mov
xchg
cmpb
int
jo
adcb
insl
orb
scas
sub
jb
adcb
packsswb
adc
sbb
xlat
fs
sbb
mov
repz
cmc
je
int3
push
loop
rorl
cmpb
es
lea
iret
mov
cmp
mov
loopne
xchg
xchg
test
mov
cmp
addr16
sub
cmpb
sbb
inc
cmp
outsl
notl
sbbb
push
mov
inc
jg
cld
loope
insb
es
mov
xor
andb
fwait
xchg
stc
and
xor
jg
test
cli
dec
and
sub
aaa
mov
or
movsl
push
fs
jle
andb
add
adc
jno
inc
faddp
xor
adc
push
out
mov
mov
mov
stos
mov
push
shrb
pusha
mov
testb
lahf
adc
jle
jecxz
out
sahf
push
das
dec
cmp
int3
imul
add
jg
mov
fildll
sub
inc
cmp
xor
mov
mov
sub
adcl
out
aad
sbbb
mov
loopne
and
int3
movsl
push
addb
call
adc
add
cmpsb
xchg
and
and
out
jbe
dec
or
test
scas
mov
sbb
push
adcb
cmp
ja
mov
dec
inc
xchg
dec
lods
cmpb
scas
jno
lods
pop
push
dec
andb
push
aaa
lock
nop
incb
std
call
cmpb
push
and
mov
add
test
xchg
mov
lock
hlt
adcb
cmp
jae
mov
push
cmc
ljmp
pusha
mov
cmp
dec
mov
das
mov
push
jb
enter
incb
add
cmp
fisttps
jmp
inc
arpl
dec
subb
imul
gs
popf
jg
ret
movsl
dec
xchg
int
enter
dec
add
add
sahf
js
rolb
aam
pushf
lret
push
mov
test
pop
xchg
popaw
clc
push
xchg
nop
push
fldenv
jne
xchg
sub
jo
xchg
aaa
mov
adc
ret
dec
sub
out
inc
jle
iret
pop
testl
repnz
jecxz
ja
loop
dec
aad
faddl
push
inc
pextrw
cmp
mov
lods
adc
rolb
subb
enter
push
sub
scas
loope
aas
cmpb
outsl
ljmp
lds
xor
sarb
add
dec
or
dec
aas
mov
cmp
testb
mov
fildl
and
incb
cmpsl
add
repnz
loopne
insl
or
aad
pop
imul
cli
call
or
mov
popa
xlat
and
subb
lods
addb
pop
xchg
repnz
and
insb
scas
andl
inc
sbb
andl
push
jnp
pop
outsb
or
push
es
mov
in
xor
jecxz
ja
lods
pusha
andb
and
mov
pop
sahf
shll
xor
les
xor
adc
repz
inc
mov
sub
xchg
jp
out
es
mov
test
cli
cmc
pop
scas
pusha
push
je
call
sbbb
mov
sub
je
mov
add
or
sub
andb
subb
xchg
popf
pushf
pop
fildl
aas
mov
xorl
and
cmpsl
fiadds
ret
or
xchg
xchg
sub
pop
or
push
scas
popa
emms
xchg
rorl
cmp
push
mov
imul
pop
addb
test
pop
imul
mov
mov
jl
popf
popa
mov
rolb
fldcw
and
sub
fmull
push
inc
jbe
stos
cmpb
js
clc
dec
mov
cmc
adc
mov
and
shlb
sub
icebp
dec
jl
outsb
cmpb
dec
lock
pop
divl
bound
inc
mov
scas
stos
call
sub
cli
stc
lret
addb
outsb
shll
pop
roll
xchg
xlat
xchg
subl
jo
hlt
movsb
add
inc
mov
xchg
daa
cltd
jl
adc
sub
push
push
test
mov
jnp
sbb
data16
xchg
cmpl
mov
inc
mov
adc
push
out
mov
inc
xchg
pop
les
sbb
icebp
inc
push
or
frstor
mov
mov
mov
push
mov
rclb
xor
sbbb
jbe
sbbb
aaa
dec
add
lcall
subb
xchg
inc
pop
jp
pop
push
or
imul
enter
cs
cmp
das
xor
imul
adc
push
sbb
enter
and
lods
xchg
stos
push
out
andb
inc
xor
dec
or
mov
orb
int3
adc
mov
mov
add
mov
xchg
add
xorb
push
mov
dec
xchg
outsl
inc
gs
shr
xorb
iret
js
fisttps
cmp
pop
dec
add
popf
in
jl
sub
xchg
out
lds
mov
mov
pop
mov
cmp
outsl
nop
pushf
push
cld
incb
addr16
adcb
jne
or
fnstsw
sbb
pop
add
shlb
add
jp
push
or
jo
sbb
leave
loopne
fsubrs
pop
cmp
cmpl
xor
jb
nop
inc
mov
fistpl
lcall
test
sbb
test
mov
out
popf
aaa
or
inc
ret
push
nop
mov
test
or
cmp
rcr
js
enter
fsubs
pop
push
orps
adc
clc
cmc
sub
add
pusha
mov
es
cli
cmp
testb
pop
incb
icebp
adc
popf
stc
mov
mov
mov
mov
decb
inc
mov
or
or
insb
xchg
adc
or
daa
sub
popa
int
xchg
pop
cmp
in
movsl
mov
push
inc
jmp
rcl
pop
loopne
scas
cwtl
pusha
std
xchg
xchg
push
sub
mov
gs
push
inc
stos
dec
dec
int3
add
push
out
xorb
lods
dec
adc
dec
lds
fldl
adc
dec
in
sbbb
mov
xor
arpl
add
pop
adc
jg
stos
aaa
dec
das
orl
dec
orb
std
sbb
repnz
repz
xchg
rolb
and
mov
outsb
and
fldlg2
ss
pop
and
push
in
mov
fdivr
jl
sub
loop
orb
dec
dec
cmpsb
mov
andb
jns
pushf
xor
test
inc
add
js
sbb
cmc
into
mov
stos
add
adc
cmpl
pusha
mov
cld
leave
loope
mov
cmpb
daa
test
inc
mov
xchg
xor
adc
adc
sub
cmpsb
lock
aas
cld
aam
addb
mov
mov
pop
outsw
or
pop
pop
cmpsb
mov
mov
jg
mov
pextrw
dec
out
aam
clc
mov
adc
scas
enter
xchg
cmp
adc
lock
mov
orb
mov
frstor
loope
mov
fs
push
add
push
push
fwait
subl
push
dec
sub
aad
rol
out
shl
or
jne
scas
sbbl
dec
imul
arpl
inc
lds
sbb
ss
xchg
pop
mov
stos
es
or
sti
in
push
mov
adc
rclb
sub
inc
jl
js
push
sbbb
outsl
popf
sbb
dec
dec
cmc
fisubl
repnz
pop
mov
clc
mov
xor
data16
adc
cmp
cs
or
sbb
pop
das
xchg
adc
fsubs
fs
enter
jmp
adc
orl
add
and
andb
inc
sbb
jbe
mov
insb
lret
xchg
push
cmpb
sbb
xchg
outsl
add
xchg
mov
lcall
and
push
jo
mov
lds
shrl
add
pusha
sbb
and
roll
sbb
cmp
add
orl
mov
jo
clc
add
popf
js
test
jno
jns
adc
cmp
or
and
mov
lret
jne
or
orb
mov
mov
inc
lcall
adc
xchg
ja
xor
or
mov
loopne
test
sahf
negl
or
inc
fistpll
pop
xorb
xor
xorb
mov
mov
xchg
divl
sbb
add
add
mov
loope
jne
enter
sbbb
roll
pop
sub
pusha
test
sarb
repnz
and
push
pop
cmc
mov
add
jae
fisttpl
je
movl
jmp
sarb
adc
cld
inc
mov
ror
inc
mov
aaa
xchg
test
scas
fistps
les
imul
push
incb
or
jg
lods
int
addl
loope
push
and
dec
addb
push
push
scas
lcall
jle
negb
dec
sbb
subb
test
in
in
adcb
int
loope
mov
movsl
test
push
hlt
mov
add
inc
out
clc
shlb
in
mov
cmp
andb
dec
cld
add
cmpsl
or
xor
jmp
sbb
imul
xor
testb
fwait
jp
adc
add
mov
jne
insb
pop
ja
or
rclb
orb
out
insl
cld
or
fidivrs
inc
bound
mov
jl
push
xchg
inc
es
pop
dec
mov
and
pushf
pop
mov
mov
dec
mov
fmul
in
cli
mov
sbb
cmp
jg
push
addb
jl
cmc
push
ret
mov
lock
cwtl
mov
inc
addb
sub
lret
inc
data16
mov
mov
std
jl
sbb
push
adc
and
mov
call
adcl
fs
pop
adc
jno
loopne
into
lea
cmpsl
mov
out
pop
andb
data16
pop
popf
mov
arpl
mov
loopne
adc
leave
int3
mov
hlt
xorb
in
aas
xor
push
addb
loope
cwtl
fs
jg
lea
fcompl
xchg
add
mov
iret
xor
push
popf
jecxz
or
les
adcb
sti
out
test
push
dec
cmp
add
cmp
sbb
popf
popa
clc
xor
push
jno
arpl
aas
dec
cwtl
xchg
add
sbb
cmp
xor
mov
jo
orb
pop
clc
xchg
test
xchg
jp
adc
fnstsw
push
lea
pop
inc
mov
mov
daa
popf
add
dec
cltd
xchg
jne
insb
subl
inc
push
adc
mov
adc
dec
scas
lock
int
mov
push
xorb
jl
xorb
or
into
fwait
xchg
das
sub
push
jnp
andb
cli
cs
out
icebp
xchg
shl
sbb
xchg
subb
sahf
in
insb
add
or
test
push
cmp
push
icebp
fwait
add
pushf
outsl
das
inc
push
push
lods
push
leave
aad
dec
xor
out
arpl
ror
out
mov
stos
sbb
jbe
or
call
das
jg
sti
mov
add
je
fs
jge
cmovae
lods
orb
loope
push
das
cmp
nop
lahf
dec
filds
inc
sbb
test
pop
add
jnp
pop
aam
js
js
popa
jno
cmp
addb
sbb
adcb
lea
xorb
add
imul
or
fdivs
sbb
mov
imul
or
test
push
fstps
or
adc
inc
xor
push
mov
cmp
xchg
inc
popa
push
dec
push
orb
xchg
movsl
loope
andb
mov
pop
sbb
sbb
mov
popa
cld
fcmovu
mov
add
pop
push
fcoms
push
lahf
lods
daa
shlb
out
flds
into
cmp
fwait
subb
sub
xchg
mov
vcvtps2dq
addb
sbb
orl
xchg
inc
sub
sahf
test
in
nop
add
adc
push
insb
sub
movsb
jmp
pop
and
jge
aad
daa
pop
ret
sub
sbb
cmc
fucomp
incb
fwait
sbb
push
or
test
jp
dec
lods
addb
xchg
xor
inc
lods
adc
and
popf
pop
sbb
add
testl
rcll
xchg
lret
addb
loopne
xorb
or
lds
dec
inc
push
arpl
lahf
dec
adc
mov
ror
jmp
push
fstps
xchg
xorl
mov
fiadds
out
lret
xchg
cmpb
mov
ret
or
cwtl
and
adc
loopne
jno
test
int3
dec
inc
fnsave
or
pop
and
mov
adc
pop
sbb
andb
outsb
jl
adc
xchg
or
inc
shrb
sub
xor
cmp
push
cmc
andb
xor
rolb
aas
jle
jno
pushf
and
outsb
filds
push
shll
testb
jo
pop
fstps
in
orb
jns
movsl
jb
loopne
cld
les
subb
loope
mov
je
lahf
test
inc
ret
mov
sub
dec
pushf
je
sub
or
addr16
xchg
insb
mov
adc
inc
iret
cmpsb
loopne
sub
test
scas
inc
mov
jo
inc
popf
insb
push
cmpb
adc
jle
adc
sbb
inc
js
push
sti
ret
inc
sbbb
loop
subb
notb
mul
pusha
enter
test
adc
cmc
mov
rep
std
subb
pusha
dec
stc
and
dec
mov
push
neg
push
faddl
lret
mov
cmp
fldl
mov
sub
cmpsl
fimuls
subb
lcall
mov
mov
add
repz
sbbb
dec
push
imul
out
adcl
sbb
in
iret
adc
mov
fcoml
cmpsb
sub
bound
pop
mov
mov
cli
mov
pop
ss
push
cmp
cmpb
lret
xor
push
sub
jg
inc
mov
adcb
cld
in
mov
cmpsl
fmuls
sub
subb
dec
incb
add
push
shlb
xorl
mov
das
ja
and
sub
jno
cmp
mov
cmp
data16
xchg
pop
xchg
popl
jmp
imul
fsts
push
or
addr16
push
shlb
xor
xorb
incb
inc
cmpsb
mov
lahf
mov
adc
lea
jg
sbb
or
hlt
mov
mov
lock
mov
mov
faddl
std
add
rorb
sbb
jne
in
lock
xorb
push
push
cli
lahf
push
or
out
cli
ret
arpl
test
pop
subb
add
or
jmp
movsl
pusha
adc
cmpb
mov
subb
dec
dec
xchg
fwait
hlt
orb
cli
loope
test
popf
mov
insb
or
fwait
out
mov
inc
or
cmpb
aaa
pusha
pop
lock
jno
and
int
sbb
sub
js
ja
outsl
inc
test
adcb
xor
mov
sub
pusha
sbb
inc
adc
scas
bound
xchg
jp
mov
push
push
andb
jle
cmp
cwtl
sub
xlat
mov
mov
push
sbb
fsubl
orl
sbbb
adcl
fdivrp
fisubrl
shlb
add
adcb
cwtl
fisubrl
xor
orb
in
subb
cmp
dec
mov
dec
add
push
mov
jbe
orl
xor
inc
int3
cltd
mov
fiaddl
xchg
and
pusha
int3
lock
mov
int
sub
xlat
gs
lock
pop
lods
pop
ficoms
in
cmpb
inc
jo
lea
iret
cmpb
fwait
inc
lock
dec
stc
cli
cmpb
insb
xchg
sub
add
sub
inc
fistl
sbbl
mov
jle
push
outsb
popa
mov
out
shlb
cmp
or
xor
repz
jo
movsb
xchg
jns
andb
adc
adcl
mov
xor
inc
mov
dec
clc
js
pop
jno
mov
jmp
sbb
test
xchg
inc
mov
fsubr
add
loop
mov
fstps
cmc
jb
addb
xor
adcb
xor
scas
mov
adc
sub
stos
or
addl
lret
dec
out
inc
and
adc
push
imul
mov
pop
add
testb
int
ds
repnz
inc
adc
pusha
push
or
imul
mov
arpl
sbb
adc
adc
insb
scas
test
inc
or
jne
pop
mov
add
int
imul
subb
adc
out
jbe
cmpl
mov
dec
je
adcb
hlt
adc
and
imul
jo
leave
popf
cli
adc
js
and
testb
pop
rclb
dec
cmp
mov
xor
sub
insl
rol
dec
mov
inc
into
scas
mov
push
and
inc
test
or
ljmp
pop
sbb
repz
inc
pop
orb
pop
addb
or
xorb
xor
add
repz
sub
dec
cmc
xchg
mov
or
cmp
mov
dec
cmp
mov
mov
mov
pop
fnstcw
es
jne
aas
sbbb
outsl
inc
faddp
or
stos
adc
dec
xorb
pusha
movsb
inc
cld
adc
cmp
sbbb
sahf
lret
cmpb
pop
jo
push
in
in
rcl
lcall
cwtl
sub
mov
sub
inc
rolb
push
jb
pop
xchg
add
inc
xchg
cmpb
mov
out
aas
xor
sbb
cmp
cwtl
or
outsl
xorb
ret
xchg
movsl
das
mov
out
pusha
add
in
xorb
icebp
popa
mov
mov
lahf
cmpl
sub
push
jb
and
sbb
addl
dec
sub
add
cmp
sub
push
addb
int3
imul
or
cmp
jp
cmc
xor
rcrl
jo
js
pop
test
jmp
mov
shlb
cmp
les
add
aam
add
in
cmp
bound
lods
ret
lds
xorb
mov
dec
pop
xor
sbb
and
jl
icebp
test
inc
dec
lock
pushf
push
mov
into
add
idivb
push
loop
and
notl
add
push
aas
add
mov
dec
loop
popa
into
mov
mov
test
mov
ds
xor
push
sbb
xor
insb
xor
movsl
xchg
andb
addl
test
push
and
shrl
enter
rorl
xorb
in
stc
mov
add
mov
inc
jmp
adcb
insb
pop
and
pop
inc
outsl
adc
inc
addb
mov
or
add
call
inc
fbstp
push
cmp
xor
ss
rorb
lds
push
ror
xor
push
insl
fwait
mov
out
and
xor
rolb
or
pop
sbbb
cli
jns
cmp
scas
pop
outsb
push
out
mov
test
dec
orb
mov
clc
xchg
fdivrp
mov
sbb
subb
jo
movb
adcb
jle
xor
sub
enter
xchg
in
jo
orb
push
sbbb
xor
pop
out
or
mov
lahf
mov
stc
lret
push
jmp
cmp
adc
fldl
push
loope
psubd
cltd
sub
aas
sti
scas
or
mov
push
adc
inc
ret
mov
cmpb
fidivrs
adc
sub
fbld
jb
xchg
xchg
push
sbb
adc
fsubrl
lret
mov
adc
cmpb
push
jle
repz
scas
mov
dec
sahf
jno
push
add
dec
pop
xchg
cli
orl
sub
cmc
and
loop
xchg
xchg
push
mov
popf
cmpl
loopne
adc
subb
or
xchg
inc
mov
andb
sahf
lret
repz
inc
mov
mov
xor
aad
push
stos
hlt
xchg
lret
std
movsb
push
jo
adc
shl
adc
pop
mov
or
pusha
pop
cmpsl
lods
call
push
rorl
xorb
adc
stos
cmpb
clc
movsb
addb
loopnew
lret
andb
lods
rcrb
adcb
mov
repz
in
subb
cmp
mov
addb
adc
pop
fnstsw
mov
add
add
in
test
mov
iret
icebp
fdivrs
sbbb
aaa
mov
jl
pop
pop
sahf
xchg
inc
into
mov
outsb
mov
jb
xor
mov
inc
mov
bound
add
sbb
dec
jns
lret
mov
sarl
dec
test
test
sbbb
call
andb
hlt
add
or
xchg
leave
mov
xchg
nop
mov
andb
inc
pop
add
add
cli
fisubrl
aad
lock
scas
sti
push
cli
inc
incl
imul
mov
mov
cmp
sbb
subb
jl
adcb
inc
outsl
stc
and
stos
fmull
adcl
mov
sub
pusha
or
xchg
cs
fsubl
jecxz
adc
subb
inc
jns
ds
xlat
adc
shrb
mov
rcrl
pop
pop
lret
dec
addb
test
mov
xor
aaa
dec
push
jns
testl
lret
add
outsl
stos
xchg
jne
sbb
pusha
aad
sbbb
fcoms
orb
mov
cmp
jmp
ss
mov
jnp
adc
adc
jne
sbb
fwait
pop
mov
push
push
lcall
sbb
sbb
in
ret
cltd
dec
mov
and
dec
outsb
rorb
jecxz
mov
lds
rorb
out
jl
movsb
ljmp
cld
lods
movsl
pop
jbe
cmpsl
lahf
bound
stc
aam
addb
rclb
popl
push
cwtl
jo
dec
mov
in
sbb
jbe
sahf
sub
sub
push
sbbb
iret
push
jmp
nop
mov
jbe
scas
jae
adc
andb
test
enter
sbb
inc
and
in
ljmp
mov
lahf
add
sub
sub
pop
in
in
or
stos
aam
ret
and
dec
fdivrs
xchg
mov
pop
xchg
out
shll
mov
fnsave
jp
pop
subb
cltd
sbb
data16
stc
daa
cmpb
cmp
pop
push
iret
xchg
scas
shr
push
mov
clc
or
mov
add
mov
mov
push
mov
pop
fxch
xorb
out
or
push
add
pop
outsl
leave
lret
subb
sahf
pop
xor
pop
lret
mov
xchg
sub
dec
dec
test
push
cs
pop
jg
xchg
andb
cltd
inc
push
bound
ss
jle
adc
or
xor
pop
sbb
test
and
dec
ret
leave
nop
call
or
fucomi
les
test
andb
xchg
jno
fcomp
subb
rolb
add
pushf
jnp
xchg
ja
sbb
or
inc
loop,pt
sti
lea
aad
push
adc
pop
adc
or
in
xchg
push
adc
in
test
stc
andb
sbb
ret
push
pop
mov
or
stc
inc
sub
rcll
bound
sbb
jecxz
and
xchg
jle
in
js
andb
popf
inc
add
and
shlb
sbb
xor
jo
or
jge
test
out
arpl
fildl
mov
loop
cmp
xor
adc
push
enter
mov
sbbb
in
lods
xchg
test
inc
sub
xor
jge
pop
imul
xchg
addr16
pop
push
fwait
leave
arpl
and
aam
sub
mov
shlb
sbb
std
das
dec
in
mov
jge
sub
inc
push
cmp
fs
das
inc
pop
fisubrl
xchg
sub
enter
cmc
ds
mov
inc
push
or
add
push
cmp
xor
adc
adcb
pop
and
mov
cmc
lcall
aas
push
test
subb
jl
xor
jne
push
sub
xchg
pusha
jae
pop
icebp
cmpsb
adc
gs
fs
pushf
orb
and
pop
push
jge
jmp
lahf
subl
jp
cmpl
out
fstpl
je
or
lcall
lret
lock
aad
mov
xor
lock
xchg
jmp
std
and
pop
pushf
mov
fcoml
pop
sbbb
in
push
repnz
scas
andl
xor
cld
pushf
flds
fs
out
cmc
pop
addl
ljmp
pop
cmp
or
fisttpll
push
pop
or
daa
insl
mov
in
subb
scas
sbb
and
in
outsl
fs
lock
daa
loope
iret
sbb
jge
add
inc
add
and
mov
adc
xchg
mov
hlt
and
jne
push
leave
pushf
repnz
xchg
ljmp
adcb
js
cmp
outsb
sub
xchg
pop
mov
lock
andb
or
dec
jnp
inc
scas
push
int
xor
dec
push
and
mov
mov
cwtl
gs
xorb
cmp
and
cmp
imul
lods
je
jle
xchg
cmpsl
lds
loopne
pop
ljmp
mov
and
jmp
sub
pop
lock
mov
arpl
aad
pop
cltd
adc
mov
xchg
addr16
sahf
lods
rolb
into
adc
test
sahf
push
inc
jo
stos
bt
addb
add
pop
shll
cmp
ret
bound
add
adc
inc
sahf
push
push
jp
out
adc
xchg
sti
test
les
rcr
dec
jmp
fdivrs
daa
mov
jecxz
loopne
dec
push
mov
mov
xchg
inc
inc
sub
or
cmp
jae
push
jg
loope
cmp
daa
and
cmc
push
jns
insb
out
mov
or
mov
adc
pop
shll
cs
cwtl
pop
mov
sub
inc
or
pop
retw
cmp
sub
mov
orl
and
in
icebp
movsb
fmuls
addb
ret
push
push
adc
or
adc
mov
ficoms
subb
das
ja
pusha
jg
fwait
xchg
icebp
pop
pop
bound
js
hlt
xchg
push
or
jo
xchg
sub
pop
std
ss
out
sub
add
subb
sub
sbb
sbbb
or
xor
fadds
push
cmp
cmpsb
pop
js
xorl
int
xchg
push
inc
adc
inc
cmp
dec
arpl
cli
pusha
mov
xor
add
or
add
mov
mov
dec
scas
cmpb
mov
lods
dec
repnz
jbe
mov
leave
mov
dec
pop
xchg
mov
mov
push
fidivl
and
int3
mov
in
ljmp
fmull
test
in
scas
pop
andb
xorb
mov
or
xor
in
test
mov
sub
inc
mov
inc
xchg
inc
jle
scas
inc
insl
or
xorl
jg
and
fidivl
cli
and
cmpsl
out
add
fmull
shlb
xor
and
sahf
cmp
xchg
cmp
or
mov
gs
dec
decl
lahf
push
les
mov
xchg
xchg
dec
ja
fildl
in
test
insb
orb
add
pop
mov
hlt
sub
push
cmpb
mov
not
and
or
shll
loopne
mov
stos
test
mov
ficompl
jo
mov
jecxz
jp
mov
add
jbe
sbbb
mov
orb
and
jno
add
orl
pop
or
addb
popa
leave
xor
ret
and
push
sbb
ficoml
sbb
rcll
cmp
ret
dec
lock
cmpl
test
mov
mov
sbbb
enter
cmp
aam
sahf
pushf
fstl
in
test
jbe
adc
sub
jns
jno
ss
xchg
sub
outsb
arpl
cmpl
add
ffree
orb
in
or
loope
insb
aad
xchg
xchg
je
sbb
test
test
xor
dec
movsb
xorb
sbb
add
adcl
and
lods
sub
dec
fisttps
or
aas
mov
push
mov
rcll
mov
pop
clc
dec
add
add
or
incb
cmp
and
jae
js
orb
adc
lods
dec
cmpsb
cld
aad
and
sub
dec
jmp
xlat
push
in
shll
xchg
sti
andb
xchg
movsl
mov
outsb
cmpl
pusha
mov
xor
or
push
add
cmpsl
in
sbb
mov
imul
xchg
inc
popa
ja
and
sbb
hlt
jno
xchg
add
lahf
push
lods
dec
flds
pop
xorb
rolb
mov
mov
jl
dec
sbb
and
cmpb
jmp
lahf
scas
cmp
rorb
dec
dec
lds
orb
int3
pop
andb
ret
pop
sbb
inc
or
enter
and
and
loop
cmp
jo
addb
je
pop
add
hlt
sbb
adc
cmpsl
or
subb
idivl
jmp
xchg
pop
js
sar
and
pop
adc
inc
and
test
push
or
popa
inc
sub
xor
and
mov
ja
leave
mov
sub
rcll
cltd
push
fadds
test
or
cmp
mov
lock
subl
popf
inc
pop
mov
mov
addb
fimull
fldl
fmul
pop
jp
adc
movb
jle
das
subl
rep
pop
imul
adcb
js
push
rclb
ret
sbb
sub
iret
push
into
clc
js
jmp
inc
scas
fldenv
fcomps
xchg
push
fcmovnu
lock
lahf
addb
pop
xchg
lret
outsb
sbb
dec
out
add
mov
mov
or
lods
jns
idivb
nop
int
lret
mov
mov
inc
subb
enter
lret
pop
je
xorl
inc
mov
pop
andb
test
js
lret
pop
and
mov
add
sub
hlt
imul
jmp
outsl
loopne
rorl
shld
push
mov
xchg
or
pushf
fadd
subl
or
cmpl
rclb
mov
sbbb
ljmp
hlt
mov
pop
stos
cs
test
in
pop
cmp
pop
or
mov
jnp
push
mov
sub
xor
sub
loopne
ds
xchg
push
decl
test
fnstsw
or
test
cmc
loope
icebp
cmp
sbb
stc
xorb
inc
xchg
xchg
dec
insb
mov
data16
xchg
loope
cmpb
inc
jns
xchg
xchg
shl
cmp
mov
xchg
fdiv
fistpll
or
or
push
cmp
aaa
mov
das
adcb
add
inc
jmp
sbb
mov
dec
sub
movsl
into
subb
xor
fisubrs
decb
in
enter
sub
lods
stc
dec
lahf
icebp
mov
pusha
mov
adc
xchg
enter
sti
clc
cmpb
mov
popa
insb
fcompl
test
mov
jmp
lods
inc
icebp
mov
sti
pop
subb
pushf
and
add
mov
arpl
adc
ja
jl
shrb
push
popf
cld
testl
sub
fidivrl
pop
adc
mov
imul
fsubl
js
aaa
cmp
fcomps
loop
addb
ret
out
enter
push
add
dec
clc
add
andb
xor
xorb
sbb
mov
imul
jnp
andb
cmp
sbb
xor
pop
scas
xor
in
jge
cmpsl
or
sub
aad
dec
adc
rolb
inc
out
lahf
hlt
cmp
inc
lret
movsb
mov
subb
in
xchg
int3
addl
push
adcl
add
push
pop
jg
cmpb
cmpsl
xor
ljmp
lock
xchg
out
jg
rorb
pop
cmp
fcmovb
inc
sub
mov
mov
mov
out
cmc
ret
ss
and
cltd
aaa
adc
inc
pop
and
add
push
in
sbbb
push
xchg
popa
gs
sub
icebp
das
mov
jecxz
jmp
pop
dec
push
xorl
popa
sbb
xor
xchg
push
add
add
xor
cmpb
mov
jo
mov
test
mov
jnp
lret
scas
roll
inc
orb
mov
sbb
dec
outsb
jp
popf
out
lret
inc
inc
into
mov
xchg
xor
das
loopne
mov
sub
inc
scas
or
fcomps
cmpsb
sbbb
add
xor
xor
lock
fimull
andb
mov
xchg
dec
or
loop
outsl
out
xor
sbbb
cmp
push
icebp
adc
adcl
in
xchg
addb
add
inc
xchg
hlt
incb
lcall
addb
dec
push
adcb
add
shlb
test
xchg
imul
inc
es
or
les
cs
mov
jne
loop
daa
sti
xor
cli
push
pop
sbbb
lods
cmp
mov
in
add
loopne
sub
loop
fmuls
loop
mov
hlt
cld
inc
inc
xorb
out
int3
xor
cmp
mov
ret
jle
call
jl
cmpb
inc
mov
jnp
push
sar
add
inc
mov
sbb
out
subl
rcll
mov
jecxz
popf
xor
pop
clc
push
ja
mov
jo
repz
adc
frstor
push
cmp
adc
mov
cmpl
or
sbb
andb
pop
mov
repnz
sbb
popl
or
jb
mov
and
arpl
fadds
test
jecxz
adcb
aad
xchg
cmpb
sbb
and
cmp
sub
jae
jle
sbbb
or
cmpb
aas
inc
orb
mov
jbe
xor
shl
in
cmp
push
adc
sbbb
sub
xorb
pop
push
and
and
fdivrs
cmp
mov
movsb
pop
xorb
sbb
jbe
ss
orb
xor
shl
popf
mov
mov
and
jmp
scas
xorl
cmc
mov
jb
dec
xchg
loopne
jnp
subb
outsl
jp
push
jle
orb
push
je
mov
sub
addb
jecxz
jns
cli
pushf
aam
jne
andb
sub
lret
andb
test
adc
shrb
xchg
orb
call
pop
mov
pop
movsb
int3
adcb
out
lahf
push
mov
cltd
or
pop
leave
movsb
xorl
hlt
loopne
mov
loopne
jl
iret
mov
mov
mov
rorb
jns
mov
loopne
and
xlat
js
stos
fistpll
imul
cmp
call
in
add
stos
sub
push
fs
cwtl
rolb
gs
cmp
outsb
add
scas
aaa
flds
xchg
push
mov
jmp
push
pop
add
sbb
xor
movsb
mov
push
shlb
int
and
out
lahf
aaa
add
filds
xorb
ret
jae
mov
add
outsl
inc
addb
fwait
movsb
xchg
pusha
pop
fisttpl
cmpsb
mov
mov
jns
addb
xchg
lds
jbe
rorb
mov
scas
xchg
cmp
and
gs
jne
mov
cmp
fldl
xlat
jg
mov
out
mov
in
xchg
xchg
fwait
ljmp
aaa
cmpsb
mulb
arpl
imul
call
popf
jns
nop
lret
or
fcomps
imul
xor
in
cmpsb
imul
add
fwait
idiv
sub
inc
in
rcll
xor
hlt
fiadds
xchg
jge
adc
cmpb
mov
add
jmp
xor
nop
pop
addb
sub
scas
jg
fdivrs
xor
adc
pop
mov
and
lcall
dec
push
ret
fadds
or
popl
lds
cmp
or
orb
push
jne,pt
mov
adcl
or
and
push
imul
cmpb
or
out
sahf
sarl
mov
xorl
xor
and
sbb
inc
lea
adcb
mov
call
ffree
jno
pop
xorb
jecxz
cmpb
cld
fld1
leave
mov
jo
icebp
scas
test
sbb
repnz
inc
leave
adc
inc
int3
jne
aam
push
push
repz
pop
orb
and
insl
jnp
xorb
popa
jo
stos
mov
in
cmp
roll
andl
jnp
mov
or
jns
push
and
push
jle
subb
xchg
fwait
xlat
cmpsb
dec
sahf
les
inc
test
std
adc
or
mov
aas
es
ret
jmp
jns
loope
xor
fnstenv
testb
jl
cmp
push
adcb
jae
xchg
pop
in
lock
jo
insb
xchg
fcmovb
sbb
out
test
inc
xor
inc
dec
int3
and
xor
and
xchg
jg
mov
fadds
sti
push
inc
push
xorb
push
stos
push
fldl
mov
push
sahf
cmc
inc
xor
jae
cmpsb
adcl
push
mov
es
pop
mov
and
mov
mov
jp
push
pop
jge
imul
das
jg
and
push
cmp
add
pop
sbb
scas
or
nop
test
cmpl
pop
inc
and
xchg
out
pop
xor
in
adcb
int
pop
mov
sbb
mov
test
out
lret
lcall
out
ret
push
rclb
pop
dec
xchg
lahf
cmp
lds
lcall
sbb
adc
subb
mov
cmp
jp
and
xchg
dec
pop
arpl
jb
mov
pop
mov
mov
mov
in
icebp
repz
movsb
addl
addb
pop
mov
stc
rclb
pusha
int
lock
xchg
nop
sub
or
cwtl
and
or
and
dec
out
cmp
xorb
shlb
lahf
popa
cld
data16
inc
mov
ret
inc
push
add
cwtl
scas
add
imull
orb
aad
ficoms
rcll
shrb
loop
and
das
test
sub
cltd
iret
outsb
dec
jo
mov
dec
dec
mov
xchg
out
add
jge
xor
or
dec
jnp
cmp
mov
xchg
push
sbb
addb
pop
ret
mov
sub
movsb
or
adcb
jb
pop
fiaddl
xlat
cmpb
xchg
inc
push
add
lea
xchg
popf
adc
jno
cli
subb
scas
mov
enter
sbb
xchg
inc
jb
int
sarb
addb
sarl
lahf
in
sub
mov
filds
add
inc
nop
dec
sahf
ds
aad
xchg
insl
sub
outsl
je
xor
sbb
dec
call
xchg
sub
adcb
lods
push
stc
clc
xor
pop
js
cmp
es
cmpsb
cmp
mov
cmp
stos
xor
popf
xor
or
loope
sbb
je
scas
test
sbb
adc
or
sbb
mov
jo
lahf
mov
jns
add
xorb
bound
loope
add
ja
jp
cmp
xor
mov
int3
and
lods
mov
orb
xchg
fiadds
xor
ficomps
jl
arpl
mov
js
iret
mov
sbbb
jmp
repnz
mov
mov
or
imul
js
xorb
mov
aad
add
addb
test
inc
push
and
out
xlat
je
xchg
pop
mov
mov
xchg
pop
lods
test
inc
cmpb
out
outsb
mov
cmp
test
mov
test
push
jno
iret
shrb
sbb
dec
outsb
in
addb
or
orb
or
mov
mov
mov
out
adc
pop
xchg
and
jecxz
cli
or
lods
lcall
adc
inc
lahf
data16
and
add
daa
je
adcb
cmp
mov
jl
dec
push
in
mov
repz
sub
lea
in
and
xchg
cmpb
inc
lods
cmp
aad
xor
out
popf
xchg
cltd
out
subb
shll
and
cli
roll
mov
rclb
popa
mov
scas
addb
pop
lahf
shll
js
xchg
mov
cmp
cmp
mov
ret
subb
jnp
pop
fstl
aam
xchg
icebp
fwait
cmpb
mov
xor
jns
mov
adcl
adc
pop
es
lcall
loope
dec
popf
jp
inc
push
lods
inc
mov
add
dec
push
lods
sbbl
dec
pop
xor
cmpb
sbb
roll
inc
cmpsl
outsb
jns
jae
mov
orb
imul
andb
aad
je
mov
les
push
iret
xor
mov
xor
pop
clc
stos
outsl
sbbb
or
subb
push
or
mov
orl
movsl
push
and
inc
fwait
push
pop
add
das
fisubs
mov
sub
pop
mov
lea
jae
andb
jg
jp
sti
popf
enter
subb
shll
push
mov
and
pop
xchg
sub
adc
cmp
cmc
jmp
xlat
xchg
xor
fildl
and
cmp
stos
pop
pushf
mov
incl
mov
xchg
pop
push
ja
jb
sub
mov
mov
push
les
sahf
pop
adc
jg
jb
add
cmp
mov
sbb
add
je
or
arpl
js
outsl
jle
mov
div
jnp
int
lock
jnp
inc
or
push
call
add
adc
je
adc
cld
and
sub
addb
xor
aaa
leave
loopne
int3
and
pop
movsl
shll
mov
xlat
jns
subb
ficomps
adc
inc
or
rorb
bound
out
xorb
addl
mov
lock
jb
je
xchg
sbbb
jl
cmpl
insl
pop
imul
sbb
pop
sysret
mov
inc
jo
xchg
loopne
lahf
inc
push
inc
sbbb
jmp
xor
mov
in
out
jo
inc
push
out
nop
pop
sbbb
jae
outsb
cmp
sbb
ljmp
push
xor
daa
pop
adc
testl
mov
fcoms
xchg
movsl
cmc
mov
stos
mov
and
rolb
roll
pop
cltd
xchg
xchg
mov
xchg
loop
loopne
sbbb
lret
xor
mov
dec
push
mov
mov
sbb
lods
and
je
roll
lahf
subb
adc
movsl
sbb
cmpl
pop
cli
popf
push
call
andb
das
jl
sub
add
xchg
mov
xor
sbbb
jge
sub
jp
cli
imul
cmpb
push
insl
xorb
test
shll
xchg
sbb
sub
adc
inc
cmpb
popa
js
jmp
mov
outsb
test
out
jno
into
inc
imul
pop
jle
dec
sti
lods
shl
mov
add
pop
addb
jecxz
fisubrs
adc
sahf
add
repnz
add
ret
mov
in
and
rcll
adc
mov
sub
pop
adcb
add
les
dec
jnp
cld
mov
je
clc
mov
jns
orb
or
leave
cmp
es
mov
sub
cmpb
sbb
mov
rorb
out
outsl
call
mov
ds
scas
pushl
or
nop
mov
xchg
adc
adcb
lods
cld
fs
out
pushf
stos
fsub
fcmovb
inc
cmpb
lret
movsb
push
and
add
lcall
mov
xchg
std
insl
sbbb
and
cmpb
mov
iret
lret
jl
pop
sub
push
lods
aaa
jno
shrl
popf
xor
icebp
shlb
cmp
jl
sbb
xchg
sbb
xchg
sbbb
addr16
sbbb
inc
andb
add
daa
mov
push
sub
push
dec
scas
and
sbb
cmc
mov
add
icebp
pop
orl
xor
jp
movb
pop
or
loopne
lcall
leave
std
mov
xchg
ljmp
push
mov
mull
xchg
mov
push
dec
cli
and
out
leave
into
mov
lret
addl
int3
lock
mov
lret
fmulp
sbb
push
adc
cli
sub
inc
push
sbb
cmpb
mov
repz
decl
cmp
jae
loopne
stos
stos
scas
not
cmpl
sub
xchg
es
sahf
daa
roll
das
lods
xor
lock
nop
inc
adc
or
xor
push
aaa
dec
ja
popa
andb
rcl
sub
mov
jbe
xor
fsubrp
or
aad
and
pushf
cmpb
fldl
in
and
ret
lahf
dec
or
out
mov
iret
push
sub
inc
inc
scas
jl
in
inc
or
dec
gs
mov
sbb
iret
sbb
or
mov
push
sub
cmpb
sahf
sub
xchg
add
lea
sbb
push
int3
popf
sub
add
fnstsw
push
mov
mov
scas
or
push
sahf
movsb
xchg
jg
loopne
hlt
mov
insl
out
fstl
fidivrl
xchg
pop
mov
cmpb
sbb
insb
push
subb
jg
jbe
std
call
dec
ss
andb
int
pusha
sbb
andb
in
xorb
cmpl
dec
sbb
adc
ds
stos
inc
mov
sahf
sub
mov
pop
andb
pop
pop
out
test
inc
xorb
std
sbb
subl
cld
cmp
adc
mov
in
lds
adcb
lret
xchg
pop
bound
cmpsl
pop
fwait
mov
ss
jb
cmp
into
mov
mov
pop
test
xchg
fadds
add
mov
test
and
leave
lods
mov
ret
adc
push
fisttps
xorl
sub
cli
mov
xor
lret
inc
cld
sbb
jl
xor
jnp
shrb
inc
incl
and
ds
popa
test
inc
hlt
cltd
inc
sbbb
loop
dec
ljmp
mov
dec
hlt
pop
bound
adc
stc
pushf
mov
xorb
icebp
push
inc
mov
sub
hlt
cwtl
sbb
mov
lret
ljmp
ret
push
push
dec
jne
xchg
adcb
out
fs
pop
push
add
stos
mov
daa
popf
lods
fnsave
add
cmp
jmp
xchg
sub
add
in
lock
outsl
je
addb
cmp
jmp
jecxz
dec
test
andl
cmpsl
add
push
out
jmp
fbld
bound
stc
add
loopne
in
inc
loop
test
test
data16
gs
mov
jb
jp
mov
push
mov
mov
cmp
test
bound
add
xor
ret
out
andb
rol
mov
aaa
xchg
ror
push
cmpsl
leave
pop
mov
add
dec
add
lea
mov
sbb
mov
add
sub
xor
adc
mov
fwait
je
stos
gs
sti
lahf
sahf
push
and
fcomps
subb
jo
nop
pop
push
enter
lock
cli
add
mov
cmp
movsb
xchg
sarl
add
mov
mov
adc
jb
inc
xorb
lret
jle
lcall
or
adc
xor
movsb
sub
xor
shlb
jle
push
lods
inc
bound
fs
adc
mov
or
and
pop
cltd
mov
dec
push
incl
jp
lret
pop
cmpsl
pop
movl
lock
adc
cmp
ljmp
icebp
adc
mov
dec
es
pop
fldt
xor
in
ja
cmpb
movsb
push
not
xorb
std
shrl
fidivrs
and
xchg
fwait
cmpl
xlat
stc
iret
mov
xor
adc
cltd
mov
divb
sahf
xlat
es
jmp
sub
pushf
xchg
testb
jae
js
aaa
andl
je
sub
mov
inc
loopne
adc
mov
inc
jl
sbbb
roll
adc
xorb
lods
dec
mov
hlt
cmpsb
sahf
aad
outsb
add
ja
fs
xchg
aam
jae
sbb
xchg
add
and
cmpsl
xor
mov
testb
adc
fcoml
push
in
adc
imull
sarb
cli
or
in
fcompl
pop
xorb
xorl
les
in
inc
or
cld
rolb
xchg
and
dec
add
mov
jae
lahf
or
add
mov
mov
int3
cld
loop
sbbb
mov
lret
pusha
setb
andb
lock
and
add
push
and
dec
pop
xchg
mov
orl
ret
push
fdivs
repz
into
pop
sbb
xorb
inc
out
mov
shl
or
push
xor
add
pop
mov
daa
mov
xchg
aas
loopne
movl
rorb
mov
inc
push
adc
and
dec
jns
push
orl
clc
and
out
sbb
adc
add
mov
call
xor
pop
lods
mov
dec
push
mov
data16
andb
adc
lahf
inc
out
sbbl
cld
sbbl
push
ljmp
dec
cmpb
mov
adc
aas
fidivl
xchg
cs
lea
int3
bound
xor
jb
add
imul
jbe
bnd
outsl
call
inc
cmp
jne
std
add
xor
cmpsb
or
ljmp
andb
scas
lock
pop
pop
fsubl
out
cmp
add
add
adc
mov
add
fucomp
mov
add
scas
jns
orb
enter
test
jle
inc
xchg
clc
push
pop
adc
fistpl
roll
pop
jmp
fldl
sub
andb
pushf
mov
insl
mov
andb
xchg
sub
sub
adc
js
fwait
inc
xor
repz
inc
subb
inc
cld
sub
orb
out
aas
mov
sbbl
and
add
jecxz
jae
mov
or
and
sbb
push
inc
les
mov
rclb
subb
sub
lret
fstpt
mov
subb
mov
mov
jecxz
addr16
out
mov
popf
cmp
daa
subb
stc
dec
inc
inc
icebp
rolb
sbb
xorb
push
inc
std
xchg
sbb
cmc
cmp
lods
sbbb
cs
out
adc
jge
jl
jle
push
lods
cmp
out
cmp
or
arpl
out
jns
shr
addb
faddp
push
sbb
and
mov
xor
dec
sub
mov
jbe
mov
jno
lods
rolb
add
movsl
add
jge
leave
inc
mov
cwtl
sbbl
and
addb
ss
lock
mov
addb
ds
sbb
lret
cwtl
into
sbb
jle
cmp
xorb
and
addl
cmp
inc
cmp
sub
push
push
pusha
inc
sbb
adc
lea
sub
xor
std
loope
mov
xchg
cmp
insb
daa
idiv
push
xchg
je
sarl
xchg
pop
xor
mov
pusha
in
cmpsb
lahf
inc
push
orb
sbb
dec
int3
push
pop
andb
xor
std
xchg
or
push
jge
lcall
les
hlt
adc
mov
imul
adc
mov
outsb
sahf
bound
adc
hlt
insl
jns
push
fnstenv
add
pushf
js
cltd
xchg
clc
scas
notb
test
addl
cltd
mov
imul
cwtl
ffreep
test
gs
cmp
jecxz
adc
cli
lret
sub
out
xchg
sti
imul
cs
addb
cmp
add
mov
iret
andb
and
cmpl
enter
xchg
lods
lret
push
adcl
cwtl
add
jecxz
xor
jmp
mov
sti
sbb
fwait
subl
roll
pusha
mov
pop
sbbb
cmp
push
sub
fdiv
adc
xchg
test
jno
out
push
in
add
rcrl
mov
ror
xor
jno
lahf
jecxz
pop
inc
lds
sar
and
mov
fs
fstpt
imul
xor
push
mov
push
lret
std
iret
cmp
repnz
mov
popf
adc
sub
sub
sbb
mov
data16
xchg
jecxz
jge
xor
rclb
jo
xchg
leave
push
cmpsb
adc
rorl
out
mov
add
shlb
mov
inc
inc
jo
push
inc
adc
ss
sahf
fsubl
sub
mov
out
shlb
rorl
push
jb
cltd
add
mov
rorl
loope
dec
mov
int
mov
xchg
scas
pop
mov
mov
pop
inc
hlt
adc
and
xor
adc
js
test
addb
andb
scas
pusha
cltd
jmp
xorb
test
int3
orb
dec
mov
xchg
inc
mov
out
lahf
push
popf
sub
mov
pop
repz
sahf
enter
mov
ja
outsl
addb
mov
addb
shlb
rep
inc
in
dec
xchg
mov
js
cmp
divb
mov
and
xor
out
jo
imul
cmpb
lahf
mov
xor
subb
addr16
orb
aaa
mov
or
mov
or
adc
adc
dec
pop
pusha
into
imull
xor
mov
or
cld
push
mov
and
dec
sbb
js
mov
adc
outsl
and
cmp
mov
aaa
subb
stc
lods
xor
in
jb
mov
scas
and
aaa
mov
push
xor
jecxz
pushf
mov
arpl
adc
andb
lds
stos
inc
sub
pop
test
clc
mov
lret
test
rclb
out
xor
push
push
addl
fldt
add
leave
inc
pop
fnstsw
testl
sbb
outsl
and
cltd
cmp
andb
pusha
aad
leave
dec
hlt
add
jle
pop
xchg
pop
movsl
inc
mov
jb
dec
xchg
jo
ret
aad
subb
push
mov
incb
xchg
jns
inc
andb
xlat
sbbb
jge
or
pushf
data16
inc
xor
or
addb
push
xor
shrb
sub
xchg
xor
shrb
add
out
inc
push
rcll
xor
in
cmpsl
inc
repz
orb
ss
fs
xchg
mov
flds
out
and
and
insb
rcl
add
adcb
rcrb
fdivp
sub
push
sub
sbb
push
cmc
hlt
dec
xchg
jae
jp
inc
or
mov
arpl
jno
cmp
add
jbe
test
addb
ljmp
lahf
mov
aaa
sbb
pop
jp
nop
js
and
call
cmpsl
mov
sub
xchg
push
and
addb
std
pop
andb
mov
adcl
xor
and
out
push
sub
fs
mov
sti
add
in
push
test
shll
xchg
xchg
mov
fstpt
mov
imul
orb
mov
sbb
mov
in
dec
orb
xlat
jnp
cmp
pop
add
jle
call
mov
adc
pop
loopne
popf
add
push
mov
cmpsl
faddl
adcl
stos
sub
or
xor
xor
into
shrl
cli
cld
stos
mov
cmpsb
mov
hlt
iret
sahf
gs
inc
ret
lahf
aaa
mov
xchg
cli
xchg
sbb
dec
push
shlb
mov
andb
sahf
daa
mov
loopne
stos
bound
leave
xor
fwait
cmp
into
mov
xor
mov
repz
adc
push
stc
inc
jne
lret
mov
add
cmpb
or
or
xchg
aaa
addb
mov
movb
or
jecxz
leave
mov
pop
push
sbb
subb
div
cmpsl
ljmp
lods
sbb
pusha
add
sub
rcrl
mov
jno
cmp
ss
mulb
int3
xchg
in
testb
repz
pop
ja
dec
xorb
scas
insb
mov
ljmp
mov
sbbb
das
sub
sbb
mov
inc
cmc
shlb
inc
xchg
cltd
dec
sub
inc
sbbl
add
cli
add
cmp
and
push
fnsave
and
call
fsubs
hlt
sbbb
pop
ljmp
loopne
push
js
subb
fidivl
jmp
push
lahf
sbb
int3
mov
dec
jb
andb
aas
cwtl
rcrl
push
sar
stos
add
cmp
adc
inc
pop
adc
xchg
mov
je
js
in
shl
inc
jne
mov
push
mov
cltd
mov
les
mov
outsl
out
and
pop
sub
loope
aaa
andb
sub
pop
loop
jmp
fs
mov
dec
jecxz
fsubs
sbbb
mov
xor
xor
popa
andl
incl
jmp
ljmp
cmpsl
sbb
xchg
cmp
roll
out
dec
push
mov
nop
in
in
jno
adc
dec
loop
push
addb
enter
inc
pop
fistpl
mov
mov
jle
jnp
sbb
cmp
or
lds
inc
repnz
jl
in
or
sub
out
add
add
xchg
jmp
jnp
or
decl
icebp
subb
inc
push
das
add
push
movsb
mov
mov
imul
or
mov
sbb
fidivs
shlb
jb
add
lods
rolb
pushf
or
leave
push
push
loope
repnz
rcrb
cltd
sub
imul
sbbb
mov
pop
xchg
xor
test
addr16
int3
mov
inc
and
sahf
call
cld
ljmp
cld
jo
sbb
add
arpl
pop
ljmp
cmp
inc
sbb
lea
adc
int
gs
xlat
movsb
inc
pop
mov
rolb
sub
adc
push
es
inc
subb
pop
xorb
add
jbe
lods
or
xchg
mov
xor
mov
add
mov
sahf
clc
ficomps
jp
nop
lcall
pop
adc
cld
addl
sbb
adc
sahf
adc
cmp
xor
xorb
rcrb
sahf
xor
or
pop
jno
mov
dec
cwtl
shlb
mov
lea
push
stos
inc
aam
popf
rdpmc
pop
jns
cmpb
sahf
push
inc
mov
loopne
lock
fsts
imul
cmp
sarb
jg
jp
mov
or
add
addr16
outsb
sahf
xor
push
sbbb
subb
dec
push
push
cmpsb
dec
je
loope
ljmp
cmp
bound
popf
push
push
cwtl
jle
outsl
notl
rcrl
cmp
movsl
xorb
adc
mov
sub
imul
mov
push
add
aam
lret
cmp
rcrl
outsb
sbbb
mov
sbbb
pusha
mov
xchg
call
mov
cli
in
andb
outsb
lahf
inc
or
adcb
rclb
jne
adc
xchg
cmp
sbbb
adc
cmpb
push
push
lods
inc
add
xchg
pushf
cmp
sarb
subb
add
sahf
cmc
popf
je
inc
xchg
pop
xchg
mov
inc
dec
aas
ds
fs
sahf
fwait
mov
stc
xchg
sbb
pop
mov
push
negl
adc
out
mov
dec
mov
nop
adcl
adc
mov
icebp
out
dec
sti
insb
js
movsl
jge
add
cs
fadds
push
jle
popf
mov
or
ljmp
jecxz
andb
aad
push
push
sub
sahf
cmp
adc
cmp
jecxz
addb
and
fildll
mov
inc
xlat
aas
cmpsl
sub
xchg
mov
cltd
pusha
and
and
pop
pusha
mov
popa
dec
inc
pop
adc
shrb
addl
not
dec
xchg
push
add
loopne
test
mov
adc
pop
scas
jnp
inc
subb
std
call
inc
xchg
popf
fidivrl
sub
imul
subb
jb
xorb
push
imul
aaa
cmp
scas
xchg
inc
orb
faddl
cmpsb
movsl
aad
inc
inc
ret
add
mov
lea
fadds
bound
stos
loop
adc
mov
orb
sub
jmp
std
cmp
scas
xchg
pushf
fistpll
fmul
addb
and
and
pop
roll
out
add
mov
sub
ret
nop
mov
mov
js
or
in
cmp
mov
mov
cld
cmpl
pop
dec
inc
or
add
mov
jp
jbe
std
subb
idivl
sbb
push
xorb
rcrl
ret
fisttpll
bound
hlt
pop
andb
jns
inc
or
xorl
lods
mov
dec
loop
mov
addb
sub
adc
popf
push
scas
movsl
jl
sbb
add
xor
jecxz
xchg
rcrb
js
adc
lods
fdivs
adcb
stc
jg
mov
cmp
addb
aad
lods
ret
push
sbb
xchg
pushf
fadds
add
inc
ficoms
test
stos
jge
sbb
xchg
pop
adc
cmp
inc
loopne
dec
and
dec
xor
movsl
les
int
push
in
or
sub
insl
sbb
push
out
outsb
fnsave
mov
orb
and
addb
nop
sbb
cwtl
mov
adcl
mov
lock
push
sbb
mov
sbb
mov
das
jg
push
subb
repz
incb
cmp
mov
cmp
dec
fadds
and
cld
inc
jo
adc
mov
test
orl
cmpsb
jno
fsubrp
mov
adc
sarb
mov
xorb
sub
mov
cltd
enter
push
js
sbbb
sub
test
in
adc
call
pop
push
imul
mov
addb
mov
add
fisttpll
cltd
out
sub
ret
adc
push
sbbl
fidivs
xor
cld
adc
cmp
aam
xorl
out
sub
or
mov
sub
arpl
lds
loop
hlt
push
mov
mov
mov
adcl
lock
mov
faddl
sub
mov
inc
pop
ljmp
push
push
xor
adc
mov
ror
test
dec
aaa
sbb
jo
ss
xchg
inc
idivl
adcb
inc
sub
mov
icebp
stos
cmp
test
fnstenv
arpl
and
and
jge
adc
js
cmpsl
lret
pop
fisubs
scas
idivb
or
adcb
adc
pop
cmp
mov
popa
aas
sub
movsb
add
cmpsl
dec
jns
lds
cmp
and
sub
mov
xchg
cmp
addr16
fldcw
cmp
mov
adc
sahf
or
cmp
fs
dec
sub
shlb
andb
xor
sub
sub
pop
insb
out
mov
adc
cltd
pop
xchg
stos
mov
mov
insb
loopne
xchg
mov
push
jb
adc
sub
mov
cwtl
imul
call
les
inc
mov
dec
cli
outsl
lahf
mov
push
push
or
mov
repz
push
mov
jns
nop
sbbb
push
lock
cmp
and
les
insb
and
mov
mov
clc
mov
xchg
popf
ret
xchg
and
dec
enter
cltd
xor
adcl
or
add
hlt
int3
pop
pop
lcall
and
lds
ds
pushf
mov
inc
cli
ror
xchg
ret
les
and
loopne
cmp
jae
insb
mov
dec
leave
loopne
adc
iret
sub
xchg
mov
mov
inc
subb
jbe
push
into
andb
sub
lret
mov
push
cmc
lods
sbbb
push
enter
popf
inc
aas
lret
xchg
adcb
jp
mov
xor
in
lahf
out
cmp
outsl
stc
in
push
pop
and
adc
add
jnp
pop
sbbb
push
jae
mov
stc
or
ror
xor
fsub
popf
push
jno
mov
ret
les
loopne
out
or
xorb
push
insb
push
xor
stc
inc
or
ss
sub
dec
xor
xchg
addb
xchg
push
and
and
push
js
adc
rolb
es
mov
orl
fs
addb
mov
repnz
mov
add
push
push
setbe
shll
pop
inc
stc
adc
sbb
in
cmc
and
decl
jnp
adc
sarl
and
bound
push
rolb
jl
mov
mov
push
cmp
fldenv
xchg
mov
and
ret
pushf
sub
negb
imul
in
jne
pop
dec
mov
adc
test
mov
xor
pushf
xor
outsb
adc
add
mov
fidivrs
mov
push
test
jle
or
or
aas
dec
cld
pusha
ficomps
push
pavgw
incl
xchg
insl
sbb
lods
repz
pop
js
sbb
mov
jecxz
add
test
push
cmpb
mov
lock
ret
sbb
mov
sbb
fstpl
adc
dec
popf
and
andb
rol
xchg
pop
andb
mov
idivl
icebp
add
xor
push
mov
mov
mov
lds
ret
aaa
xor
int3
in
mov
testb
imul
xchg
test
jg
orb
hlt
jl
and
mov
mov
data16
push
and
mov
insb
stos
stc
pop
orb
jge
scas
neg
js
std
pop
mov
push
mov
pushaw
shrb
aad
mov
cmpsb
sbb
sub
mov
and
pop
and
xorb
stc
sub
or
aas
pushf
scas
lock
pusha
inc
sub
mov
mov
rcrb
loop
jb
and
fwait
add
pop
jno
shll
addb
repz
or
rolb
mov
mov
push
aaa
jno
xchg
sub
ljmp
xchg
sub
and
test
data16
pop
push
clc
andb
outsl
in
ret
repnz
test
sbbb
in
push
je
and
cmpsb
xchg
push
sbb
or
outsb
jge
js
adc
add
test
mov
notl
dec
mov
andb
pop
es
sahf
mov
lcall
test
cwtl
das
xchg
daa
filds
stc
mov
sbbb
cmp
iret
test
insl
addb
adc
lods
pop
add
orl
imul
arpl
and
addl
stos
cli
enter
pop
sbb
dec
fdivl
jle
adcb
pop
dec
orb
fidivs
xor
fidivrl
inc
fwait
push
sbb
cmc
cmp
add
or
lock
movsb
mov
lret
aaa
sub
lret
jl
cmp
add
or
mov
mov
sarb
gs
mov
orl
jl
popa
adc
adc
adcb
flds
subb
js
fisttpll
stc
insb
xchg
enter
shlb
popf
mov
outsb
mov
xor
orb
pop
mov
fcomps
mov
cmp
es
inc
popf
mov
jecxz
fwait
mov
xchg
loopne
xchg
pop
fldt
addb
inc
xchg
cmp
faddl
je
xor
frstor
dec
fbld
testb
jns
js
add
cmc
push
cwtl
jo
lcall
xor
mov
addb
andl
or
popf
pushw
call
repz
xchg
mov
test
aas
cmpsl
inc
mov
cmp
cmp
and
aam
hlt
jl
sub
out
push
loopne
notl
xor
repz
filds
in
cmpb
pushf
lea
shll
sub
add
pushf
bound
enter
push
xchg
sahf
sub
imul
fiadds
in
xor
cld
loop
xchg
adc
aam
cli
cmp
out
ljmp
imul
push
std
push
push
decb
rol
cld
leave
nop
subb
aaa
aam
add
pop
loop
mov
pop
and
insb
push
mov
xchg
jne
xchg
xchg
adcb
outsl
iret
orb
adcb
mov
cmpsl
loope
xlat
cmp
pop
push
int3
rcrb
jge
mov
xchg
ret
jns
dec
hlt
push
ficoms
call
mov
outsb
mov
fiadds
ret
in
mov
cmp
subb
sbb
addb
sar
jecxz
sub
icebp
in
push
cmp
adc
subb
cs
inc
fldt
push
cmp
xor
imul
cmp
andb
shrb
mov
ja
sbbb
cmp
addb
subb
xchg
lods
add
mov
adc
in
pop
lock
rcrl
jle
sti
mov
rol
xchg
mov
add
out
adc
fwait
cmp
xorb
movsl
sub
pop
out
push
shlb
push
fnstsw
les
mov
incl
push
xor
pop
shl
mov
sub
pop
hlt
pusha
cmpb
xor
mov
inc
pop
popa
adcb
xor
popl
mov
orb
inc
xchg
add
xchg
and
inc
mov
fisubrl
mov
addb
pop
addr16
leave
out
jl
stc
aad
mov
sti
inc
fcmovb
push
mov
xlat
in
arpl
outsb
aas
sbbb
inc
rcrl
cmp
andb
int3
push
xor
add
cmc
mov
jbe
fnsave
hlt
xchg
cmpsl
dec
call
push
add
fcoms
pop
fs
pop
movb
xor
pop
push
jb
dec
movl
or
andl
fadds
cmpb
jg
add
andb
mov
inc
xchg
push
ja
std
mov
mov
out
add
clc
test
inc
xor
push
addl
pusha
bnd
ljmp
pop
or
adc
xorb
sbbb
jle
inc
addb
add
div
ds
test
call
repnz
adcb
repz
sti
nop
cmpl
jnp
movsb
stos
std
adc
or
addb
addr16
pop
push
mov
xor
xchg
popf
xor
add
sub
sub
cmp
push
faddl
sbb
shrb
decb
mov
adcb
or
dec
fsubl
addb
stc
mov
inc
inc
imul
aad
lods
fistps
test
movsb
xchg
or
mov
jbe
dec
push
sbb
out
bound
mov
adc
or
loope
push
adcb
loopnew
fstl
add
mov
add
adc
adcb
sbb
adc
dec
sahf
mov
mov
push
mov
icebp
xor
pusha
stos
inc
jb,pn
or
in
cmpsb
push
push
dec
xchg
lea
rolb
xor
subb
push
jp
out
insl
mov
jo
test
in
rclb
xor
cmpsl
xchg
fnstsw
pusha
insb
cld
dec
cmpsl
shrl
sub
fidivrl
cmp
in
push
push
sub
cmp
cmpb
mov
sbbb
scas
xor
test
mov
pop
lea
sub
jne
das
movsl
fwait
sub
add
fs
test
pop
adcb
ja
add
andl
mov
fimuls
mov
das
xorl
or
jnp
js
dec
aas
inc
mov
cmp
test
sub
out
cmp
sbb
scas
adc
mov
test
and
sti
jb
lods
loopne
sbb
repnz
sbbl
stos
and
add
add
adc
dec
mov
adcb
mov
sbbb
iret
sub
and
pop
mov
subb
xchg
jns
addl
test
add
int3
add
adc
mov
cwtl
jmp
mov
add
scas
das
jecxz
andb
subl
pop
cmp
xor
inc
dec
les
jg,pn
test
outsb
jb
fnstcw
mov
pusha
andb
cmpl
jo
sahf
pop
mov
jns
call
repnz
xchg
mov
icebp
es
jb
fldl
adc
andb
lods
mov
lock
pop
stos
and
adc
fisubrl
push
pop
push
mov
jmp
xchg
push
loope
xchg
es
aas
xlat
and
sub
out
dec
add
fisttps
or
sub
cwtl
jns
pop
and
jnp
popa
inc
or
arpl
sarl
subb
addb
mov
adc
xchg
cli
sub
xlat
cmc
mov
and
jg
dec
mov
jp
ret
imul
push
xchg
hlt
loopne
add
pop
outsb
int3
mov
adcb
in
push
xor
int
imul
xor
pop
ss
dec
cwtl
adc
test
push
adc
lods
adcb
fisubrs
pusha
xor
pop
sbbb
das
insb
or
and
pop
push
in
push
adc
filds
imul
cmpb
int
sbb
sbb
jl
daa
in
adc
scas
movsb
ficomps
mov
scas
sbbl
mov
in
stos
cmpsl
cli
mov
mov
rcl
inc
ret
stos
scas
mov
dec
jp
and
inc
filds
inc
loopne
push
mov
arpl
es
subl
and
adc
xorl
adc
inc
adc
cmp
pop
fldl
fstpt
cmp
scas
xchg
nop
test
dec
add
cmpsb
pop
sbb
fistpl
mov
repz
lret
push
mov
stc
imul
dec
fnstsw
mov
cld
lods
jmp
adcb
aas
push
xorb
sbb
xor
dec
rolb
jp
xorb
xchg
not
xchg
push
mov
arpl
sbb
andb
pop
mov
fdivl
rolb
pop
aam
subb
lds
pop
or
imul
dec
mov
testb
cld
cli
fs
cmc
repnz
cmp
pop
neg
or
mov
or
roll
inc
mov
imul
mov
adc
dec
mov
ror
mov
lds
cli
xchg
xorb
test
adc
xchg
outsb
mov
dec
cmp
shll
mov
lret
daa
push
xchg
or
jp
and
push
xor
lock
andl
jb
fdivs
movsl
sbb
pop
jl
movsb
mov
data16
fwait
cwtl
mov
iret
icebp
add
test
es
xchg
daa
testl
lret
ret
xor
aad
cmpb
pushf
sub
and
adcl
pusha
and
adcb
div
insl
scas
xchg
sub
jle
cmpb
and
push
andb
push
sub
adc
xchg
xorb
fdivl
andb
pushf
push
and
mov
mov
mov
and
rol
sti
add
push
loopne
icebp
ss
add
daa
sub
sti
test
out
dec
stc
sahf
add
dec
repz
movsl
adcb
jecxz
sbb
adcl
push
mov
mov
jl
mov
adc
sbbb
fwait
and
jle
subl
ss
lret
push
push
cmp
mov
inc
dec
stos
cmpsb
stc
inc
sbb
sub
jo
fcomps
out
jecxz
dec
dec
mov
mov
xchg
test
add
clc
stos
addb
in
fsub
call
and
pop
fildl
mov
push
out
jmp
pop
sub
lock
dec
ficomps
mov
ja
test
mov
mov
pop
xor
rolb
or
sahf
test
in
js
inc
mov
lahf
movl
mov
addb
adc
pop
test
push
mov
jmp
pop
popf
pusha
mov
pop
pushf
std
inc
orb
aam
jno
add
adcb
int3
cwtl
into
sbb
mov
orb
jo
jg
rcl
inc
dec
in
loope
adcb
out
and
or
and
movsl
sub
in
cmp
adcb
mov
orb
hlt
testb
add
fcmovu
or
cld
scas
xchg
lret
movsb
jo
mov
flds
jg
js
mov
jb
xchg
lods
ret
mov
cltd
pop
mov
loop
into
andb
inc
jmp
add
pop
test
leave
jle
xchg
cmp
shll
ror
pop
subl
adc
sub
sbbb
dec
jno
jo
incb
xor
mull
subb
push
stc
and
push
faddl
xchg
pusha
xlat
xchg
lahf
addl
in
sti
cmpb
jae
mov
je
cmp
popa
mov
out
popf
mov
fs
xor
call
jne
xor
mov
dec
mov
inc
mov
sbb
aad
stc
cmpsl
pusha
mov
xchg
jns
test
fwait
sti
out
outsb
inc
sub
jle
bnd
adc
push
push
test
add
cmp
lds
leave
int
add
push
push
sbb
lahf
ljmp
fstpl
adc
cld
test
mov
call
mull
lods
call
push
mov
jns
into
outsl
mov
sbb
cmpb
adcl
cld
out
sbb
inc
in
rol
aas
xor
xchg
cmp
clc
addl
push
mov
andb
aaa
push
subb
test
stc
cltd
cmp
pushf
outsl
pop
mov
sbb
or
xor
mov
mov
mov
lret
aaa
push
aad
int3
outsb
iret
mov
push
pusha
sarl
ds
adc
inc
ljmp
pop
stc
je
push
mov
loopnew
add
cld
addl
out
lahf
push
cmp
mov
xor
xchg
test
enter
pop
imul
inc
hlt
mov
test
adc
and
inc
mov
inc
or
xchg
adc
pop
in
insb
cmpsb
pop
pushf
in
fidivrl
mov
add
or
push
adc
andb
aaa
or
adc
in
js
ret
out
movsb
fstl
adcb
push
xchg
orb
mov
xor
leave
cmp
ret
add
mov
jle
ffree
xchg
movsl
sub
mov
rcl
mov
lods
ljmp
lods
orb
jecxz
dec
inc
cmc
roll
jg
jne
adcb
jns
popa
sub
lret
outsl
xor
fwait
shl
sahf
jle
loope
sbb
and
adc
cmpb
in
mov
and
sbbb
pop
notb
inc
imul
int
sti
test
lock
sbb
ret
sub
aas
mov
stos
pusha
clc
pushf
xchg
frstor
shl
lahf
jno
bound
sub
out
test
fnstenv
test
pop
lock
mov
or
sti
arpl
stc
ja
clc
inc
mov
dec
xchg
nop
hlt
mov
in
imul
subb
and
andw
sbb
hlt
pop
movsb
pop
inc
inc
andb
lret
sbb
pop
xorb
push
fsubl
pusha
repnz
js
pushf
gs
mov
jo
inc
or
add
addr16
jne
repnz
data16
xchg
scas
and
cmp
push
jb
mulb
fiadds
in
ret
imul
mov
loopne
mov
subb
cmp
andb
lds
icebp
daa
adc
mov
xchg
add
ds
jno
mov
cmp
mov
shlb
pushf
or
cmp
mov
test
dec
pop
test
stc
add
or
fisttps
test
sti
cmp
in
aaa
mov
mov
neg
int3
or
pop
shrl
clc
jnp
push
imul
cmpb
jge
push
xorb
xchg
adc
push
or
push
inc
add
mov
cwtl
mov
imul
jnp
or
pop
cmp
xchg
mov
addb
push
sbb
cmp
sti
test
inc
out
dec
lock
subb
xlat
inc
pop
and
loopne
mov
mov
ret
xchg
xorb
xchg
cmp
test
jbe
outsl
out
mov
pop
adc
xchg
or
mov
sub
mov
lret
adc
clc
cmp
mov
jecxz
pop
ret
inc
inc
stos
cmp
add
loop
sbb
inc
imul
inc
loope
dec
iret
adc
sbbb
or
movsl
push
outsl
filds
in
mov
clc
sub
dec
andb
mov
rolb
inc
inc
mov
jg
jno
js
mov
sub
add
sub
shlb
imul
pop
sub
mov
and
aam
xor
mov
lock
mov
xor
pop
sub
xor
inc
xchg
dec
adcb
bound
xor
push
scas
hlt
movsb
popl
shlb
cmp
repz
xchg
arpl
cmc
push
mov
std
mov
test
sbb
push
adc
in
cmpsb
testl
iret
jmp
jecxz
jbe
orb
cltd
shrl
xor
addb
ja
mov
or
cs
and
pop
push
push
and
pop
adc
rolb
ret
sbb
sbbb
xor
test
inc
cmpsl
xor
orb
addr16
fs
cmpsb
push
imul
push
mov
or
lcall
add
and
cmp
jbe
jnp
or
movsl
mov
icebp
add
nop
addb
pop
mov
mov
sbb
and
and
addb
mov
stos
jle
enter
xchg
pusha
lea
aas
pop
into
cmp
cmpsb
lret
mov
fdivr
dec
arpl
jae
xor
call
pushf
mov
pop
sbb
in
inc
in
fidivrl
mov
mov
pop
js
pusha
xchg
jbe
cmpb
test
aam
icebp
sub
sahf
sub
sbb
subb
sar
fs
lds
inc
adc
jo
notb
pusha
adc
push
pop
lahf
mov
insb
and
sbb
in
pushf
mov
aas
mov
add
fsub
daa
andb
fdivrs
and
cmp
loop
inc
push
mov
or
sub
jl
adc
or
jno
cli
and
dec
mov
ret
test
es
or
mov
test
jecxz
push
adc
sti
push
mov
mov
roll
test
mov
mov
ffreep
and
idivb
add
cmp
in
sbb
push
and
adcb
adc
jnp
mov
mov
inc
pop
fdivrl
jl
sarb
outsl
adc
sarl
jns
pop
adc
add
rcll
or
movsb
pop
cmpsl
pushf
sbb
inc
subl
rol
mov
xor
or
xorl
dec
rcrl
mov
orb
jmp
cwtl
add
imul
arpl
add
gs
adc
jbe
jmp
jnp
dec
add
negb
add
sahf
add
ja
inc
xchg
test
mov
sbb
cmp
pusha
aas
mov
std
inc
sub
xchg
or
orl
daa
dec
cmp
lods
sub
cli
addb
inc
mov
rorb
das
or
pop
dec
xchg
inc
jo
dec
jmp
out
add
hlt
repz
rcr
adc
cmpb
daa
jle
xchg
orb
cli
std
mov
cli
and
dec
addb
pop
mov
pop
arpl
add
fnstsw
push
mov
lods
jmp
clc
pop
xor
js
imul
sbb
or
ds
mov
cmpb
pop
dec
orl
js
ljmp
shrb
jno
xchg
add
scas
lds
mov
lar
scas
or
sbbb
dec
popa
sarb
or
xor
adc
in
shrb
mov
cli
pushf
mov
sahf
orb
orb
cmp
xchg
or
pushf
mov
push
je
popl
mulb
xor
cmp
pop
fwait
cmpb
or
lahf
push
incl
xchg
push
jns
mov
sub
sbb
addb
insl
lods
push
sbb
or
mov
pop
loope
rclb
xor
add
out
sti
leave
pop
pop
dec
dec
xchg
sub
shrl
roll
xlat
mov
mov
mov
mov
or
orb
sbb
xor
pusha
lods
negb
inc
pusha
test
sub
xor
adc
popl
dec
or
xor
pop
enter
xchg
cli
int3
xchg
pop
into
mov
add
and
popf
mov
pop
push
dec
loopne
mov
pop
sbbb
or
cmp
adc
xorl
mov
test
sub
ss
mov
dec
mov
leave
mov
xchg
scas
inc
push
inc
jo
mov
inc
icebp
ss
pop
adcb
in
and
mov
mov
lahf
imull
jns
adc
xorb
lods
addr16
daa
xchg
popf
cltd
cmp
out
dec
pop
pushf
push
mov
inc
aam
aaa
add
pop
pminsw
jle
cwtl
ret
mov
mov
mov
inc
daa
loopne
mov
sbb
out
sbb
cmp
add
out
jmp
subb
push
mov
cmp
push
jno
push
mov
enter
mov
mov
mov
and
push
leave
xorb
loopne
pop
mov
xchg
inc
negb
mov
jbe
cmc
jae
pop
and
repnz
dec
and
and
sub
push
xchg
aas
iret
test
xchg
cmp
enter
cmpsl
sub
or
push
jbe
lock
push
push
loop
dec
loopne
sti
mov
add
push
inc
xchg
fsts
pushf
orl
cmp
mov
in
mov
cmpsl
ret
pushf
subb
jg
cmpsb
lods
aaa
rcrl
mov
add
cmpb
mov
mov
cmp
sbb
jg
add
add
cmp
mov
xor
lahf
add
sbb
fiadds
dec
cli
lahf
inc
xchg
in
andl
clc
test
mov
mov
inc
pop
in
mov
add
std
stc
xor
push
and
cmpsl
mov
mov
inc
add
cwtl
subb
adcb
cmp
cld
movsb
sti
cmp
xor
fwait
sub
subb
push
idiv
insb
sbb
sbb
repnz
popl
std
xchg
sub
push
adc
lock
xchg
inc
inc
cmpsb
or
xchg
mov
sub
mov
das
lds
jbe
xchg
xorb
pop
inc
addb
repz
adcl
xor
sti
dec
cmpb
imul
xorb
or
loopne
lahf
mov
sti
enter
outsl
jle
loop
lds
jb
jecxz
push
lahf
adcb
cmpsl
mov
fxch
inc
ss
and
mov
enter
pop
xor
lret
mov
andb
les
or
mov
pop
repnz
andb
push
dec
cmp
daa
imul
rolb
push
jp
push
jnp
pop
cmp
pusha
mov
sbb
ss
fldenv
jo
fbld
pop
add
ret
adcb
ljmp
sbb
les
lock
addb
shrb
push
and
mov
add
and
rorb
fcoms
xchg
mov
in
dec
popa
stc
mov
dec
addb
inc
jl
xor
cmc
xchg
sbb
test
push
shl
sbbb
add
push
sbb
xor
jne
popa
subb
sbbl
mov
in
or
inc
hlt
out
xorb
andl
cli
jecxz
jnp
push
mov
add
push
pusha
jno
cli
jmp
jp
add
add
pushf
out
sbb
mov
dec
cmc
or
push
pop
mov
xchg
cmp
lds
or
out
test
dec
popf
jo
insl
mov
aaa
xlat
addb
bound
ljmp
adc
addb
xor
mov
sub
hlt
mov
jns
mov
xchg
cmp
enter
push
and
rcrb
loope
xor
jne
out
and
test
mov
insl
xchg
pushf
punpckldq
shll
movsl
ljmp
insl
and
mov
rolb
rcrb
fistps
incb
add
mov
inc
xchg
push
enter
xchg
mov
push
fcomps
xor
mov
xchg
mov
jbe
rolb
pop
pop
inc
orb
imul
mov
push
iret
mov
adcl
call
sbb
fldt
pop
mov
out
cmpsb
xchg
outsl
inc
cmp
cmp
hlt
pushf
mov
cmc
mov
pop
aad
or
subb
dec
fdivs
out
lcall
call
movsb
popf
enter
inc
mov
push
xorb
and
sub
mov
sbbb
pop
add
xor
in
dec
sbb
jle
hlt
orb
inc
fiaddl
mov
pop
shrb
aad
mov
pop
andb
xchg
insb
jp
pusha
dec
xchg
inc
shl
in
test
nop
add
sarb
cs
orb
loop
fmull
jae
into
dec
cwtl
add
cmpb
ds
cmpb
mov
fs
sub
into
push
sub
das
icebp
sbb
dec
dec
cmpsb
add
xorb
adc
mov
loopne
jmp
rolb
push
push
xorl
pop
insb
jnp
sub
xorb
hlt
testb
push
and
aam
insb
sar
test
adcb
push
ja
stos
inc
dec
test
aas
mov
dec
or
orl
push
mov
add
mov
cmp
jb
mov
lea
cli
cmpb
lret
adcb
rep
cmp
fistpl
rclb
adc
out
adcl
jecxz
subl
ja
clc
int
out
les
and
cmpl
aaa
sub
jae
into
pushf
mov
and
test
pushf
lahf
sahf
jmp
andb
add
ret
ds
jb
mov
sarb
icebp
fadds
dec
into
sub
pop
pop
xchg
jo
cmp
jb
subb
out
push
vpshad
dec
pop
addb
xor
mov
scas
loopne
lds
cmpb
pusha
cmp
int3
add
add
in
sub
ror
push
int3
push
xor
or
cmp
mov
sub
and
cmpsb
xchg
sub
rolb
daa
ss
cltd
xchg
test
cs
or
pop
enter
dec
icebp
jb
jge
sbb
sub
dec
test
push
testb
aas
cmpsb
and
push
aaa
adcb
add
or
mov
xchg
mov
fadds
int3
cs
add
xchg
data16
or
movsl
mov
outsl
cmp
repz
mov
popf
jg
push
jp
pusha
icebp
fwait
xlat
jle
test
outsb
sub
dec
adc
inc
je
add
inc
dec
sub
sbb
xchg
repnz
jns
mov
mov
aad
mov
push
push
into
pop
mov
mulps
add
or
add
adcb
rep
and
andb
xor
adcb
push
xorb
or
andb
inc
mov
ret
mov
cmpl
addr16
fsubrs
mov
adc
push
out
cmp
std
pushf
fdivr
cmpsb
movsl
insb
jge
mov
call
sbb
jmp
outsl
fsubrl
sbbb
add
jns
mov
inc
test
scas
inc
sbb
into
sub
xchg
out
cmpsl
stos
xor
push
imul
cmp
and
jns
mov
lahf
push
mov
addl
inc
push
fsts
adc
dec
in
mov
mulb
dec
icebp
imul
push
inc
cmp
test
aam
adcl
aas
mov
psubusw
fisttps
cmp
rorl
addb
xchg
sub
stc
xchg
inc
rcrl
and
push
rorb
xor
jecxz
xchg
stos
dec
xchg
inc
cli
inc
lret
adcl
or
push
pop
test
pushf
xchg
icebp
pop
ret
mov
pop
sub
pusha
cmpsl
fs
inc
dec
ljmp
adcb
mov
js
add
loop
dec
and
add
loopne
sub
adc
cmp
add
add
jg
cwtl
andb
push
add
jne
or
jnp
lret
mull
push
mov
lahf
aad
pop
jns
push
nop
and
sub
invd
cmp
rorb
sbb
aaa
test
pushf
jle
aam
sti
add
push
popa
push
rcrl
bound
aaa
sub
mov
les
outsb
xchg
xlat
pushf
or
jnp
ss
pop
inc
and
flds
xlat
not
sbb
push
lcall
pop
pop
add
inc
cli
incl
mov
test
leave
or
rclb
xor
sub
add
ret
aaa
xchg
inc
lds
pop
xlat
push
mov
pop
loope
loop
sub
leave
and
add
pushf
xchg
mov
ljmp
sub
and
fmul
and
push
mov
outsl
mov
or
jo
pop
push
inc
xor
out
je
pop
cltd
pop
jmp
flds
in
jecxz
mov
sahf
pop
idivb
fwait
mov
aaa
aad
adcb
and
imul
in
hlt
fwait
enter
decl
adc
adc
out
dec
pop
cs
orb
loop
and
and
je
add
test
inc
jns
inc
adc
add
jno
inc
or
sbbl
xchg
pop
mov
andb
adc
sbb
daa
std
addb
jle
orb
xchg
sub
jo
mov
adc
ret
xchg
mov
adc
in
loopne
sbb
imul
lods
or
push
push
in
addl
and
mov
adc
mov
add
mov
push
faddl
aaa
inc
push
sbb
je
stos
push
mov
dec
or
dec
addb
iret
or
inc
mov
xchg
cmc
call
cmp
iret
xor
sbbb
pop
push
xchg
lods
decb
inc
movsl
xor
push
xorb
mov
ljmp
mov
mull
lods
fists
addr16
mov
mov
pop
movsb
mov
ret
xorb
xor
shlb
inc
repnz
cmp
jnp
mov
mov
xor
cli
ds
iret
ss
jo
ucomiss
addb
shll
mov
add
xchg
cmpsl
orb
pusha
movl
xor
fcompl
xor
arpl
inc
sbbb
rolb
pop
xor
daa
push
dec
mov
andb
cmpsb
xor
orb
push
add
stos
adc
shlb
pop
je
iret
add
xchg
repz
cmpsl
nop
in
jl
push
aaa
lds
sub
subl
sbb
xorb
out
popa
adcb
lock
or
mov
sub
xor
sub
sti
adc
xchg
sbb
iret
mov
insl
push
cmp
inc
test
div
cmc
aam
push
inc
sub
test
pop
and
lret
inc
mov
orb
stos
cmc
xchg
loopne
aaa
xchg
xlat
mov
adcb
or
mov
pmuludq
mov
mov
insb
or
xchg
icebp
mov
xchg
pusha
inc
mov
out
mov
faddl
push
lahf
push
cmpsl
test
push
lret
fildll
outsb
adc
sbb
mov
cltd
xchg
cmpsb
fnstcw
mov
out
data16
sub
sub
scas
xrelease
andl
dec
pop
shlb
lods
addb
clc
and
gs
xchg
xchg
movsb
scas
andb
inc
leave
dec
jecxz,pn
adcb
fcmovnu
dec
inc
adc
push
and
sbb
mov
out
mov
movsb
sub
idivb
leave
add
mov
and
lcall
push
cmp
pop
jnp
adc
fs
pop
sbb
cmpsb
mov
inc
and
roll
or
mov
aaa
inc
pop
cmc
pop
xchg
and
push
pusha
sarb
dec
addb
mov
cmpsb
insb
xchg
push
addb
repnz
das
xchg
mov
out
test
hlt
jmp
fldl
mov
ficoms
or
push
sahf
stos
and
out
dec
popa
fcompl
test
push
roll
js
stc
mov
pop
fildl
pop
push
orb
adc
test
ja
sbb
cmp
aam
movsb
repz
mov
adc
cwtl
or
outsb
or
mov
cmpb
inc
add
cmc
jp
and
mov
mov
and
movb
ljmp
push
jg
xorl
adc
inc
sub
adc
pop
xchg
mov
popf
pop
inc
test
popf
fs
push
push
push
fisttpll
push
dec
subb
sti
mov
pop
fdecstp
jne
inc
push
jo
pop
addb
mov
repnz
mov
pop
subb
addr16
pusha
mov
mov
jg
les
inc
xchg
mov
andb
inc
in
mov
fistl
jo
addb
lods
in
sub
les
and
mov
xchg
push
shlb
jecxz
lods
fidivs
cmp
mov
jnp
ds
stos
cmpb
inc
cmp
sbb
shll
daa
pop
pop
addl
pop
add
dec
stc
lock
mov
lods
pop
out
mov
movsb
cmp
aad
dec
jp
fdivs
sahf
lods
pop
fisttps
cmovo
lea
mov
mov
addr16
jmp
mov
mov
mov
lahf
aas
pop
hlt
push
xor
cmpb
int3
sub
and
fs
sahf
xor
ljmp
jns
test
mov
clc
rorb
dec
sbb
push
movsl
jo
adc
imul
cmp
inc
out
push
push
add
dec
inc
int
sbbb
cmpsb
imul
push
pop
subb
or
cmp
lea
mov
addb
fstpt
adc
cmp
pop
and
xchg
mov
out
loope
js
sub
push
pop
mov
pusha
inc
xchg
popa
stc
jg
push
shll
test
adc
push
or
fiadds
repz
orb
les
scas
add
fwait
xchg
lds
mov
std
jmp
push
imul
cli
testl
repnz
mov
repz
inc
inc
addb
sahf
fwait
mov
adc
jns
orb
cs
inc
dec
mov
sar
add
mov
nop
cmp
push
mov
mov
cmpl
and
add
pop
add
loope
rol
andl
test
xchg
divl
pushf
adcb
test
or
or
cmpsl
sbb
cmpb
aam
dec
mov
jle
popl
mov
inc
data16
mov
adcb
xor
xorb
es
das
dec
mov
xchg
xchg
adc
ss
xorb
and
pop
sbb
xorb
cltd
pop
xor
stc
mov
outsl
ficoml
and
mov
add
std
xchg
popa
in
add
sbbl
xchg
dec
jmp
and
jle
sti
inc
insb
pop
jb
lcall
jg
int
fnstsw
ret
mov
xchg
lods
idivl
dec
mov
das
loopne
cmpsl
or
jne
cmp
pushf
push
jp
stos
and
sbb
subb
mov
daa
leave
loopne
add
mov
push
addb
and
pop
pop
push
fisubrs
mov
in
add
enter
sti
xchg
andb
fdivl
repz
mov
out
pop
lock
bound
adcb
cld
mov
jne
sbb
fwait
dec
or
and
rorb
pop
fldl
xchg
arpl
outsb
push
nop
lret
andb
sahf
and
add
cmp
sbb
sub
shrl
mov
jecxz
pushf
cmp
inc
pop
pusha
lock
push
cld
xchg
xor
and
add
insl
xorb
fsubrs
adcb
outsb
pop
add
cmp
xorb
fcoml
popf
arpl
xor
xchg
lahf
sahf
mov
rcrl
jbe
jle
outsb
int3
sbb
xor
repnz
negb
adc
jmp
add
leave
sub
push
mov
jmp
lret
push
mov
pop
mov
jnp
imul
cmpb
or
mov
pop
sbb
adc
fisubrs
adcb
shll
cs
cmpsb
sahf
xlat
insl
scas
cmpb
and
faddl
loope
outsb
push
gs
mov
xor
dec
cmp
addl
mov
cmp
sub
cmc
adcb
cmpsb
aas
ret
add
pushf
xor
inc
sub
lahf
es
mov
push
stos
out
pop
and
inc
add
or
adc
fcompl
cmc
subb
mov
adcb
ds
mov
adcl
dec
mov
testl
cwtl
lods
insb
push
xchg
mov
xchg
mov
mov
fldl
cmp
xlat
xchg
pop
cmp
sub
stos
scas
adc
rcrb
adcl
stc
data16
mov
pop
or
lds
mov
sub
data16
sbb
xchg
movsl
stos
enter
cmp
cmpsl
test
cmp
andb
shrb
jbe
test
xor
mov
dec
insb
mov
call
dec
xor
ds
dec
pop
push
push
mov
popa
dec
lds
jbe
orl
or
adcb
cld
sbb
jb
adc
nop
popl
in
dec
test
mov
jge
outsl
mov
aaa
int
add
jle
and
xchg
cmp
jns
orb
jno
movsl
xlat
inc
push
inc
mov
out
inc
addb
inc
fisttps
popf
testl
andb
adc
dec
mov
adcb
sti
adc
fwait
cmpb
jg
xchg
test
jmp
jmp
lods
icebp
sahf
adcl
andl
or
stos
shrb
xor
push
imul
xchg
xor
jne
mov
arpl
xor
std
popa
pop
sub
sbbb
mov
sbb
xor
sbb
fsubp
enter
xchg
or
add
pushf
ds
add
movsb
mov
mov
adcb
jg
mov
movsb
add
shlb
cmc
jnp
in
cmpsl
aad
sub
add
mov
cltd
rolb
test
inc
adc
std
addl
cld
or
sub
les
hlt
fsubrp
inc
nop
push
or
sub
sbb
or
sahf
clc
cmp
lret
inc
push
arpl
leave
outsb
int3
mov
in
lahf
subl
or
inc
lds
mov
loopne
jp
sbb
mov
orb
movsb
in
scas
faddl
mov
pushf
shlb
loop
popa
jno
sub
pushf
mov
out
jg
adc
bound
mov
shll
faddl
lds
gs
int3
mov
push
mov
test
mov
addl
pop
inc
add
test
xchg
or
and
aam
popl
in
rorl
cli
out
mov
inc
cld
loopne
clc
clc
inc
pusha
test
and
jo
cld
sub
cmpb
negl
inc
in
scas
mov
sbb
in
cmc
out
aad
push
dec
clc
das
mov
inc
cs
es
or
test
in
js
ds
fwait
or
dec
repz
lds
lcall
pusha
stos
pop
xlat
inc
jp
push
jmp
pushf
add
mov
test
mov
rolb
enter
fsubl
es
push
or
lea
add
and
jecxz
int
add
mov
loopne
pop
inc
or
jno
inc
test
mov
push
sub
pop
mov
xchg
add
imul
or
repnz
dec
clc
test
mov
or
jg
sub
aam
or
xchg
push
sub
push
test
inc
xchg
sub
lea
fsubrs
lret
nopl
pusha
hlt
gs
or
mov
mov
or
lea
mov
xchg
mov
in
mov
xchg
xchg
sub
add
leave
mov
push
jecxz
inc
add
inc
sbb
aad
push
rorl
mov
jno
in
mov
enter
dec
and
adc
push
push
inc
nop
rorb
inc
sub
in
fcomp
push
pop
aam
mov
cmp
dec
xchg
rcrb
mov
xchg
cli
fmull
aam
mov
add
or
clc
pop
enter
pop
in
inc
scas
loopne
hlt
lret
add
push
sub
mov
test
enter
int
xchg
pushl
push
ret
sbb
add
int3
push
bound
es
test
mov
push
jp
sbb
mov
lahf
jmp
aad
orl
jp
rcll
test
rorb
sar
repz
call
bnd
jne
imul
mov
add
cmc
addb
rorb
in
loop
or
adc
mov
pushf
movsb
inc
or
sub
loop
lahf
adc
dec
test
in
iret
mov
or
test
movsb
jo
pop
adc
xor
dec
movsb
mov
mov
add
fsubrs
cmp
xchg
or
aad
mov
test
adc
xor
inc
and
push
clc
push
mov
dec
inc
aam
cmpsb
mov
adc
pop
pop
movsb
mov
jnp
dec
neg
sbb
jne
or
cmpsb
clc
dec
xchg
hlt
dec
mov
sbb
call
in
shl
stos
mov
xchg
jae
stos
push
es
push
dec
lods
push
sub
fdiv
lods
adc
call
bnd
outsl
jb
add
xor
xchg
xor
or
xchg
roll
adc
and
sahf
dec
or
sub
mov
imul
mov
enter
or
mov
pop
mov
mov
cmp
movsb
lea
sub
and
or
mov
loope
pop
xchg
divl
inc
pusha
xchg
or
test
cs
das
cmc
push
add
cmp
push
pusha
mov
cmp
mov
xor
push
test
stc
xor
xchg
in
jg
rol
inc
shll
lds
mov
lds
scas
int
mov
enter
nop
push
cmpsl
adc
js
ljmpw
dec
xorb
lcall
mov
cmc
dec
push
test
gs
cmp
push
jnp
xor
adc
xorl
stos
lea
js
cmc
iret
dec
rolb
mov
test
sub
fadds
adc
mov
pop
scas
cwtl
adc
add
ret
fstps
fwait
jne
mov
imul
hlt
lret
pushf
rorb
clc
mov
sbb
cltd
popl
xor
jmp
adc
mov
inc
cmpb
xor
cmc
adc
pushf
cmp
add
adc
roll
leave
ret
sub
mov
stc
repnz
xchg
out
int3
mov
jbe
xchg
addr16
xchg
fisttpll
es
inc
or
into
mov
ja
xor
inc
cld
fcmovnu
pushf
xor
dec
sti
js
mov
movsb
popa
add
or
dec
cmc
loope
mov
cmp
fisttps
lods
push
addl
cmc
jb
jo
filds
inc
nop
push
inc
test
andl
bound
mov
mov
hlt
mov
mov
xor
mov
mov
adc
pop
or
xlat
enter
stos
lds
xchg
ja
sahf
imul
or
popa
xor
clc
fidivrs
fstpt
notl
andl
arpl
imul
jecxz
insb
push
inc
ja
sbbb
jg
inc
lock
fwait
adc
ljmp
pop
imul
fsubrs
add
add
mov
jp
insb
mov
popf
or
jge
xchg
cwtl
jae
cwtl
sbb
ret
test
faddl
shrl
loopne
orb
sbb
pushf
rcrl
rcrb
into
mov
cwtl
lods
add
mov
mov
test
cmpsb
and
hlt
lock
sbb
pop
xor
adc
test
ss
mov
inc
xchg
xchg
in
test
in
or
pop
in
jmp
int3
nop
call
lock
mov
and
test
in
mov
stos
pop
xor
loope
in
stc
mov
mov
jecxz
scas
mov
xor
les
dec
lock
xor
inc
pop
adc
mov
mov
repz
out
xchg
push
add
lock
adc
push
in
dec
cli
popf
add
sub
int3
les
loope
aad
cmpsb
lcall
call
out
test
in
xchg
mov
sbb
adc
lods
mov
aad
mov
aam
leave
nop
in
aad
mov
cld
repz
xlat
iret
or
je,pn
mov
enter
insb
scas
aaa
inc
les
sub
es
mul
es
sbb
mov
sbb
mov
sbb
mov
int3
lret
pusha
sub
in
jmp
xchg
les
fmull
movsb
pop
pop
xchg
cs
out
popa
shlb
pop
mov
mov
stc
mov
push
in
xor
or
adc
cld
loopne
cwtl
lahf
mov
notl
test
jecxz
add
movsb
xor
ds
dec
mov
pop
mov
jp
mov
lret
dec
int3
mov
mov
sti
lock
ret
iret
int
aam
pushf
in
clc
mov
leave
mov
int
push
mov
ret
rcl
fmuls
mov
jmp
dec
shr
repnz
adc
roll
in
rcrb
jecxz
in
jg
repz
inc
jmp
loope
test
pause
shr
lret
fcoms
aam
leave
in
out
out
push
repz
mov
les
jmp
pop
cs
in
jmp
repz
stos
out
add
scas
mov
ds
lock
pop
jns
add
inc
andl
test
int3
test
jo
and
int3
adc
mov
fldl
mov
fists
nop
mov
pusha
xchg
adc
and
mov
xchg
pusha
or
mov
xchg
inc
test
mov
xchg
fldenv
mov
or
push
movsb
pusha
enter
nop
les
jmp
and
int
and
xor
push
xor
mov
int3
fsubrl
cld
fadds
lock
lock
fsts
jmp
jo
sub
cmc
mov
jg
sub
jns
loope
shr
lea
clc
in
pop
push
nop
enter
nop
adc
aaa
pop
xor
inc
xchg
sbb
aad
cmpsb
in
cmpsl
mov
rorl
ret
divb
dec
inc
push
mov
ret
lret
cmpsl
js
fimull
ret
mov
int
cmc
sbb
lock
inc
mov
ljmp
pop
xlat
test
stos
pop
xchg
xchg
int
mul
test
popf
and
out
push
push
out
out
negl
std
mov
pushf
mov
rol
mov
mov
das
out
ljmp
outsl
addb
push
das
popf
inc
je
mov
xchg
shl
call
popf
mov
mov
and
cmpl
mov
adc
call
or
ljmp
mov
cmp
inc
movl
scas
and
out
mov
mov
mov
push
mov
xor
adc
or
les
inc
pop
mov
ret
mov
into
iret
sub
inc
or
aam
in
mov
mov
bound
push
sub
push
repnz
cmp
push
inc
mov
cmp
jne
inc
push
sub
aad
mov
mov
sub
out
inc
inc
dec
and
push
mov
mov
scas
shll
in
mov
in
dec
orb
push
ret
sbb
test
ds
cltd
aas
mov
inc
mov
push
nop
xlat
xchg
mov
fists
arpl
dec
pop
xor
aas
sub
cmp
mov
ret
mov
les
nop
ret
rclb
add
push
pop
or
mov
add
filds
sbb
sub
nop
enter
push
dec
inc
mov
xor
inc
xchg
inc
dec
sub
les
in
in
cmp
sub
mov
lods
mov
push
add
mov
mov
rcrl
xchg
mov
ret
ljmp
push
mov
out
clc
testb
sbb
loopne
inc
inc
pop
dec
push
inc
ja
orb
push
ds
dec
mov
push
test
jne
dec
dec
and
add
jo
mov
inc
xor
jbe
arpl
push
sub
xor
dec
ja
adc
push
dec
ds
push
xchg
pop
cmp
and
dec
adc
xchg
out
rorb
inc
popa
aas
sub
mov
es
movb
in
es
mov
in
shl
dec
cwtl
mov
cmpsb
mov
mov
ficomps
mov
aas
xor
dec
xor
cmp
and
sbb
add
dec
jge
movsb
xor
mov
lea
lds
es
xchg
pop
and
sub
stos
movsl
fcomps
mov
xchg
mov
mov
rolb
adc
sarl
ret
fnstenv
decl
ss
fildl
ret
push
clc
mov
push
mov
xchg
rclb
mov
add
add
pop
add
pop
or
jno
add
xor
fisubs
insl
imul
mov
jg
sub
mov
mov
add
mov
mov
mov
rcr
nop
xchg
ficoms
jl
add
loop
and
addb
cmpb
or
in
mov
out
sahf
dec
loopne
lret
hlt
mov
clc
mov
cld
mov
add
and
lcall
inc
add
inc
add
add
bound
inc
pop
xorb
pop
push
ja
pusha
pop
xlat
cmp
mov
out
repz
ret
xor
and
popf
cmp
xor
and
xor
push
push
jg
mov
inc
or
inc
dec
repz
stc
in
in
mov
mov
aaa
sbb
lret
cmc
jae
lock
subb
jb
out
xchg
mov
sahf
out
in
ja
lods
xchg
pop
icebp
repz
je
stc
test
or
pushf
jle
push
lods
shr
xchg
jp
xor
sbb
lock
addr16
int3
jmp
hlt
jno
cmpsb
mov
lods
cmc
cli
push
xchg
mov
test
das
add
out
out
mov
push
in
cmp
push
sub
clc
stos
stos
aad
hlt
out
and
shr
jmp
lods
xchg
aam
xor
ja
pop
inc
insl
push
xorb
dec
push
xor
daa
xchg
bound
push
mov
mov
sahf
xchg
lea
inc
jne
jg
bound
push
mov
mov
pop
jle
arpl
sahf
aaa
inc
xchg
shll
dec
insl
test
jle
cmpl
inc
fs
jl
mov
sub
add
js
push
shrb
push
je
fsubl
scas
dec
movsl
mov
jbe
jp
aaa
cmp
icebp
push
xorb
imul
sub
lahf
xor
add
jae
pop
enter
and
test
ss
out
push
xor
cmc
rcrl
test
xor
mov
repnz
test
gs
push
mov
dec
jge
push
dec
movsl
pop
xchg
mov
push
xor
dec
pop
ret
mov
push
inc
sti
jg
and
dec
jo
daa
in
lretw
rclb
xor
mov
loope
repz
nop
and
ret
loopne
test
js
mov
imul
push
movsb
arpl
lret
cltd
ss
lods
imul
imul
lcall
cmpsb
mov
push
dec
inc
cmp
mov
insl
or
fbld
push
jb
and
ss
mov
cmp
xor
test
dec
gs
push
xor
jns
pop
ds
and
xchg
fcoml
or
sti
shrl
arpl
hlt
aam
cwtl
adc
push
sub
adc
xor
dec
push
clc
mov
pop
dec
push
in
inc
loope
lock
sub
xchg
cwtl
test
aaa
and
mov
dec
insb
and
or
push
inc
fs
cmp
shr
xor
enter
dec
js
mov
leave
mov
pop
mov
cmp
push
dec
dec
sbb
add
js
stos
and
pop
pop
les
push
push
inc
rolb
pop
sarl
test
mov
iret
in
cmp
jl
dec
sbb
xchg
in
mov
pop
imull
mov
xor
jecxz
fcomi
mov
ret
rcl
rcr
dec
cmp
mov
push
pop
xchg
or
loopne
lock
pop
in
xchg
stc
cmp
sbb
lods
mov
jl
out
loope
test
arpl
cld
movsl
loopne
xchg
mul
in
cmc
pop
xchg
xchg
in
fdivp
fucomp
jbe
sub
shl
scas
call
cmc
scas
out
jecxz
mov
cmp
dec
push
je
mov
les
in
popf
in
cmp
jnp
sbbl
scas
iret
loop
pop
notb
in
out
jle
mov
or
loope
ror
insl
test
mov
mov
mov
cltd
iret
out
xlat
xorb
mov
call
mov
hlt
and
mov
inc
leave
in
mov
or
mov
xchg
iret
out
in
push
mov
aad
ret
mov
les
mov
sbb
pop
ret
jl
lds
mov
sarl
mov
aam
xor
movsb
outsl
mov
push
adc
cmp
adcl
xchg
stos
movsb
mov
and
lret
sbb
fwait
mov
cld
les
push
in
or
mov
sti
sbb
jo
into
std
inc
pop
cld
add
mov
lcall
stos
pop
adc
testl
notl
shl
dec
inc
lahf
mov
jp
ret
jl
repz
enter
mov
mov
in
fdivs
and
out
push
enter
adc
lahf
xor
cmc
jl
pop
ret
add
jge
scas
in
ret
call
out
aas
jp
xchg
and
into
aam
xchg
rcl
push
and
out
adc
or
lock
pop
inc
repz
cmc
repnz
fsubs
outsb
xchg
inc
adc
scas
call
rcl
jbe
rep
jnp
add
pop
push
cli
fcmovb
or
call
repz
movsb
jecxz
mov
rolb
rcll
and
push
test
xlat
dec
sahf
jmp
into
mov
xor
repnz
dec
std
out
mov
push
ss
jmp
shlb
jmp
out
mov
or
in
sub
lcall
sahf
inc
or
int
pushf
xchg
shl
in
push
lock
inc
stc
out
cvtpi2ps
lods
psrld
in
out
in
loope
dec
shrl
sbb
add
and
xor
ret
pop
cs
mov
icebp
or
lock
sub
nop
add
adc
dec
lcall
test
mov
xor
pop
mov
and
add
inc
sub
jmp
sub
mov
fdiv
loopne
inc
dec
push
js
mov
mov
in
ret
lds
xchg
data16
ja
nop
es
data16
leave
inc
dec
out
or
jae
sbb
pop
andb
clc
mov
iret
mov
iret
jmp
movb
out
in
dec
sti
and
movsb
std
adc
adc
adc
push
andb
lock
mov
mov
mov
loopne
fimuls
test
aam
nop
adcl
lea
movsb
nop
jo
mov
or
mov
mov
test
sbb
push
stc
cltd
adc
popl
push
test
mov
xor
scas
mov
fst
cbtw
pop
aaa
push
dec
push
jp
mov
mov
jb
inc
or
pop
xchg
shlb
pop
bound
mov
xchg
push
push
mov
or
mov
cmpsb
dec
mov
into
jno
and
clc
and
mov
push
mov
mov
push
test
aad
jno
fwait
push
jne
sub
stos
mov
mov
mov
popa
clc
insb
mov
xchg
xchg
cwtl
clc
jle
loope
fcoms
clc
inc
repz
cmpb
xor
xlat
sub
int
push
push
cld
cmp
mov
push
sbbb
xchg
xchg
test
out
adc
cmc
xchg
or
inc
shrl
lahf
jnp
test
mov
leave
mov
nop
movsb
inc
addb
adc
shll
jo
icebp
pusha
mov
adcl
pusha
test
dec
lds
loopne
sahf
adcb
mov
cwtl
daa
sti
xchg
sbb
dec
mov
or
sbb
nop
cmpsb
mov
mov
mov
mov
ja
in
mov
int
rclb
jo
pushf
mov
cmp
cwtl
scas
jge
arpl
xor
pusha
mov
rcl
rcrl
lret
std
scas
or
shlb
shrb
xchg
enter
jb
movsb
xor
jns
mov
xchg
mov
mov
sub
outsl
sahf
xchg
mov
push
inc
mov
sbb
adc
xorl
add
mov
add
movsb
adc
mov
add
xchg
lock
sub
leave
cmpsb
cmp
clc
shl
int
mov
pop
js
mov
sbbb
scas
xchg
pop
mov
shlb
push
scas
test
scas
sbb
clc
mov
lods
lahf
mov
ret
xor
inc
mov
andl
pushf
xchg
mov
mov
xchg
pusha
mov
mov
enter
mov
mov
nop
mov
cmc
adc
mov
mov
mov
add
mov
lahf
mov
popf
adc
mov
dec
decl
loop
addb
sbb
mov
fimuls
dec
mov
enter
xor
test
pop
les
movups
lret
pop
inc
xor
mov
scas
mov
andb
nop
lret
inc
or
mov
xchg
sbb
inc
popl
int3
and
stos
loopne
pop
sbb
mov
js
push
and
gs
pusha
int3
lahf
mov
int3
cld
pusha
int
sbb
cmpb
dec
xchg
cvttps2pi
stos
cmpb
mov
xor
push
js
shll
movl
add
cmpsl
cmp
jg
test
shlb
and
jo
pusha
xlat
lahf
xor
rcl
cwtl
jl
xor
movl
adc
pop
mov
add
ret
test
test
mov
js
rcr
int3
add
cmp
fisubl
xchg
push
addl
dec
xor
add
mov
test
nop
loope
push
rclb
sub
shl
inc
in
mov
mov
add
or
insb
mov
stos
fdivrs
mov
stc
test
xor
mov
add
cld
scas
push
testb
mov
notb
cmpb
or
sti
cld
mov
cli
pop
inc
pusha
cli
out
andb
js
push
pop
imulb
mov
dec
cwtl
xchg
adc
dec
test
call
mulb
std
pop
dec
mov
pop
orb
sti
mov
adc
daa
enter
fdivrs
ret
lods
popa
and
repz
pusha
add
nop
add
js
filds
mov
mov
cmp
shr
fsubrl
push
mov
movsl
adcl
int
cmp
nop
xor
andb
add
push
cmp
insb
inc
rclb
sub
jo
xor
jns
pop
les
pop
inc
nop
and
jno
fwait
add
rorb
and
mov
or
pop
clc
rolb
fs
mov
adc
mov
shlb
mov
fisubs
jno
and
fdivs
and
bound
rorb
mov
nop
sub
and
jecxz
popa
mov
sbb
movsl
inc
and
addb
insb
inc
ret
daa
popa
and
cmpsl
mov
xchg
jo
mov
dec
or
insl
fsin
adc
dec
icebp
repz
hlt
dec
mov
fisubs
or
bound
addr16
testl
lock
cmp
lahf
fsubs
rcrb
xchg
xor
xchg
mov
mov
movsl
cwtl
adc
xchg
pop
orl
adc
xchg
test
xchg
dec
int3
inc
mov
fnstenv
or
cmp
inc
xchg
sbb
aaa
enter
cmp
subl
cmp
movb
aaa
sar
dec
mov
or
cmp
sahf
cmp
ja
dec
inc
and
and
call
shl
inc
lock
lahf
sub
mov
cld
jl
adc
or
dec
mov
loopne
ja
inc
stc
mov
sub
mov
sbb
pusha
sub
mov
adc
cld
mov
rolb
nop
push
pop
js
ret
mov
rol
pop
xchg
popa
mov
popa
out
addr16
adc
inc
nop
sbb
cld
data16
mov
bound
cmp
es
cmpsl
popl
xchg
fcoms
fmuls
mov
lahf
cmp
sub
fcomp
jo
add
add
ds
inc
mov
add
mov
test
mov
loopne
and
test
mov
orl
xchg
addl
cwtl
pop
cltd
fdivs
mov
dec
orl
ljmp
xchg
in
cwtl
mov
jbe
ficoms
mov
push
out
xor
pop
mov
jno
push
lock
mov
mov
test
sub
in
jno
sub
cmp
dec
mov
fisubs
cmc
js
mov
shl
mov
mov
int3
sbb
mov
mov
sub
sbb
xor
call
fs
mov
stos
dec
shlb
xchg
cmp
or
cmpsb
test
mov
mov
test
push
outsl
js
lock
nop
pop
andl
loopne
mov
clc
and
das
inc
inc
pop
shll
lock
aas
and
nop
and
sub
sub
aad
fmuls
adc
fildl
js
cmp
jnp
mov
inc
add
mov
xchg
sub
andb
repz
xlat
cwtl
test
test
mov
mov
test
cmp
cmp
mov
push
aaa
out
sbb
xorl
cs
add
mov
and
iret
and
mov
daa
add
adc
adc
inc
or
cmp
andb
and
xor
rcll
scas
shrl
rolb
xchg
mov
loopne
mov
adc
xchg
scas
dec
cmpb
mov
fld
clc
lahf
test
mov
movsb
stc
scas
nop
loopne
ret
add
test
cwtl
pop
xor
addl
lahf
add
inc
push
and
inc
push
test
cmp
nop
adc
test
adc
sbb
addr16
adc
mov
sbb
inc
push
into
scas
xor
pop
sub
mov
stos
enter
xor
mov
mov
xchg
push
xor
pushf
mov
loopne
out
lock
and
adc
inc
mov
lock
ret
inc
sub
xor
mov
js
insb
loopne
jns
mov
cld
jo
stos
sarb
test
sbb
shrb
mov
hlt
int3
jg
js
sarl
nop
cltd
mov
dec
xor
imul
enter
mov
aam
jle
test
addl
lock
push
mov
test
push
iret
les
add
test
adcb
mov
test
mov
jo
test
loopne
inc
mov
rorb
adc
push
ret
lds
jb
xchg
test
jb
scas
adc
or
inc
aad
rorl
stos
mov
les
inc
xlat
mov
iret
cmp
cwtl
xor
scas
adc
clc
fists
lds
fstps
adc
jb
scas
adc
stc
lret
fs
int3
or
mov
imul
aam
mov
push
adc
hlt
push
jmp
shl
test
pop
push
xchg
add
test
mov
fildl
lods
sbb
sbb
inc
icebp
xchg
sub
push
orb
mov
shlb
daa
add
mul
mov
push
mov
insl
cld
mov
sbb
lret
mov
loopnew
dec
mov
pushf
xor
push
mov
cmp
test
cmpsl
push
jo
cmpl
jecxz
lock
sti
xchg
cs
popa
cli
add
dec
or
clc
ficoms
nop
xor
out
test
and
test
fmull
and
jo
mov
and
nop
out
xchg
enter
adc
push
call
adc
hlt
push
ret
inc
dec
addb
fistl
pop
sub
rorb
pusha
add
out
xadd
cmc
xchg
dec
test
and
test
push
orl
lret
stos
mov
test
cwtl
shll
xor
cld
add
rclb
sub
addl
add
or
inc
cld
jmp
loopne
test
movsl
mov
sub
scas
rorb
jl
adc
fdivrl
pop
pop
mov
jo
scas
and
test
or
nop
lock
insb
adc
adc
test
inc
adc
adc
andl
adc
adcb
and
mov
lahf
mov
clc
jbe
adc
fsubl
push
pusha
iret
cmp
sub
mov
lock
iret
push
out
sub
add
xchg
inc
push
sub
jo
sub
mov
xchg
adc
rolb
mov
mov
nop
pop
dec
sbb
xchg
mov
sbb
cltd
mov
mov
hlt
mov
mov
movsb
test
movsl
xchg
int3
or
xchg
mov
xchg
scas
in
or
stos
sbb
mov
movsb
stos
leave
movsb
in
mov
xchg
mov
mov
les
lods
xor
mov
cmpsl
pop
push
mov
mov
scas
mov
mov
adc
leave
adcb
lret
jl
cmpl
jge
jns
jno
popa
adc
add
andl
movsb
inc
enter
aad
rolb
cwtl
rol
lret
nop
leave
mov
and
xchg
jl
loop
nop
cmpl
mov
pushf
shr
loop
nop
xor
lods
xchg
xchg
aam
mov
nop
mov
xlat
xchg
rcrb
in
lock
add
pusha
lea
or
lock
add
les
or
lock
mov
sahf
xorb
loope
xor
dec
out
int
cs
je
sub
jb
xor
inc
jmp
mov
shll
repnz
inc
xchg
push
add
inc
mov
mov
jl
inc
mov
dec
jl
add
int3
cmp
add
iret
aas
jmp
lods
insb
pushf
pop
mov
scas
outsl
lahf
pop
and
adc
fsubl
jecxz
adc
out
pop
fisttps
test
mov
cmpb
mov
or
cmp
hlt
or
cmp
imull
movsb
fs
push
stos
imul
push
sub
sbb
aam
jmp
sbb
out
xlat
addb
jb
dec
mov
xorb
mov
xor
into
incb
shll
icebp
or
bound
sahf
pop
mov
lods
insl
popf
pop
and
adc
fisubs
loope
adc
in
sbb
cmpl
dec
out
xor
inc
xorb
push
movb
stc
add
stos
push
pop
cmpsb
data16
movsl
adcb
es
push
sub
sbb
and
subl
mov
add
test
or
aam
pop
push
jns
jo
xchg
mov
ret
mov
in
inc
mov
enter
rcr
cltd
cli
pop
orb
hlt
jmp
shl
rcr
xor
xchg
mov
hlt
xchg
push
faddl
faddl
addb
mov
pop
inc
and
orb
js
loop
mov
cwtl
jbe
ror
cwtl
xor
fistpll
or
add
push
clc
test
shrb
mov
mov
in
rolb
icebp
mov
and
xbegin
out
jecxz
xor
in
cwtl
push
invd
mov
inc
sbb
xor
enter
adc
xchg
movups
call
cwtl
or
rcrb
push
cld
mov
jmp
jl
pop
inc
mov
fcom
add
xchg
divl
pop
inc
xchg
test
lock
jo
add
mov
jl
xchg
push
nop
lock
xchg
inc
or
or
push
xor
lcall
xorl
js
mov
orl
sub
add
ds
les
cmp
sbbb
shrb
aam
movsl
stos
scas
sbb
xchg
leave
mov
inc
xchg
push
ds
pop
and
mov
ret
xchg
into
out
hlt
das
pushf
mov
in
das
cmp
sub
mov
daa
mov
cmc
lcall
dec
rorl
ret
mov
mov
inc
std
hlt
sbbb
adc
or
mov
fcoml
pusha
nop
stc
shlb
pop
sbb
cmp
mov
rcrl
mov
inc
xor
test
aam
adc
pushf
cwtl
push
adc
pop
stc
stos
adc
push
mov
lahf
dec
mov
mov
lea
leave
dec
xchg
or
mov
rclb
mov
movsb
cmp
dec
or
fcompl
mov
xor
in
fucomp
dec
sbb
fmul
arpl
out
test
fcompl
inc
enter
xor
sub
jne
hlt
jae
mov
push
mov
lret
sub
fadd
ret
mov
in
frstor
rolb
repz
cld
test
push
mov
xchg
mov
mov
and
enter
loope
mov
je
and
test
fldl
push
test
xchg
in
jmp
jo
mov
mov
clc
dec
aad
dec
int
and
test
insb
lock
out
cmc
repnz
mov
pop
cltd
jne
movsb
nop
lock
cli
mov
or
push
adc
nop
xchg
ja
rol
jge
sarb
jns
or
jp
dec
les
jbe
xor
mov
fistl
pop
or
push
jo
or
jle
jl
lock
inc
xchg
cmpsl
xchg
mov
ds
test
test
sbbb
mov
cli
jecxz
mov
sub
jno
enter
mov
push
cld
js
dec
mov
adc
nop
add
loope
fdivr
enter
jmp
faddl
cmp
hlt
mov
xchg
xor
jo
rorl
lock
mov
sub
sub
dec
adc
cwtl
mov
add
mov
fadd
push
out
and
xchg
call
xor
or
movsb
and
xchg
mov
insl
and
jmp
and
dec
outsl
lahf
push
daa
mov
xor
in
shl
pop
mov
shll
mov
mov
nop
call
enter
mov
mov
pushf
push
xchg
xlat
out
in
or
stc
icebp
xchg
push
hlt
hlt
mov
shlb
cmp
lret
cwtl
test
jb
lahf
adc
mov
into
jb
jno
cmp
mov
cmp
sarl
mov
cmp
test
mov
clc
pop
fwait
xchg
repnz
test
cmp
dec
mov
pop
jno
scas
cwtl
dec
xchg
cwtl
pop
add
and
pop
jmp
mov
and
mov
or
sbb
mov
lahf
mov
rorl
adc
mov
pop
dec
xchg
jb
jb
and
dec
mov
stc
pop
cmp
inc
inc
hlt
sbb
js
add
clc
iret
in
in
xor
mov
mov
in
mov
sbb
in
fisttpll
int
leave
cmp
mov
cmp
nop
mov
mov
cmp
cmp
push
fadd
hlt
cld
cmpsl
cmc
in
cld
cwtl
add
cwtl
into
push
mov
iret
in
sar
fcoml
xchg
xor
push
jmp
pusha
dec
fsubl
jl
out
xchg
sbb
jecxz
out
and
out
nop
pop
rorb
out
lods
repnz
push
jo
out
bound
inc
icebp
insb
stos
mov
add
jmp
enter
push
shl
xchg
mov
xchg
rclb
adc
pusha
mov
push
push
daa
lret
leave
mov
jl
sbb
aas
fcmovb
sbbb
sbb
in
stc
fisttps
push
pushf
push
adc
ds
xchg
xchg
and
rolb
jge
test
mov
loope
rolb
icebp
mov
test
sub
loop
ret
out
test
cmc
icebp
hlt
cmp
xchg
sub
mov
sbb
mov
or
cmp
inc
nop
and
subb
scas
mov
mov
push
dec
adc
mov
rorb
add
mov
add
cs
mov
jo
xchg
es
mov
push
hlt
jmp
loopne
rol
shl
fiaddl
scas
mov
xchg
adc
and
repz
add
mov
adc
cmp
rcrb
or
les
sbb
and
movsb
mov
and
add
int
rclb
test
call
cmp
cwtl
loope
enter
mov
cmpsl
call
sub
loope
sti
add
idivb
imul
adc
jo
int3
and
or
add
stos
add
push
dec
mov
cmp
sub
or
scas
mov
dec
decb
loopne
sbb
lock
mov
dec
mov
shlb
cmp
push
push
in
mov
mov
xchg
lahf
adc
sbb
popf
xchg
out
nop
test
repnz
and
jmp
stc
fcoml
inc
lds
mov
jo
ja
mov
mov
stos
inc
mov
pop
mov
mov
gs
xchg
pop
jns
mov
ror
or
inc
or
cli
bound
test
sub
rclb
icebp
cmovo
inc
shl
push
dec
jmp
xor
out
xchg
add
sub
xchg
rol
cmp
jo
add
cmpsl
test
icebp
pop
pop
xchg
std
sub
test
adc
loopne
ror
adc
in
cmp
add
loop
mov
test
nop
rcl
repz
or
inc
jecxz
lods
jmp
mov
add
mov
mov
jb
call
mov
sbb
pushf
shll
in
imul
add
mov
andl
hlt
scas
pushf
xchg
mov
aam
movsb
imul
wrmsr
movsl
enter
sbbl
fimuls
test
add
loope
and
pushf
repnz
mov
icebp
dec
or
sub
sahf
clc
xlat
js
dec
lock
loopne
cs
mov
mov
fmul
call
xor
dec
inc
sub
icebp
dec
mov
inc
and
and
adc
pusha
push
arpl
mull
js
adc
sbb
movsb
shlb
outsb
adc
icebp
insb
mov
lret
test
enter
inc
mov
mulps
repz
mov
imul
das
add
push
or
int
mov
and
adc
xchg
push
xchg
mov
xchg
or
inc
and
sbb
int
dec
negb
and
bound
js
mov
out
mov
mov
notl
mov
in
das
inc
xchg
lock
lods
jo
cwtl
fnstcw
scas
call
aad
orb
out
mov
fcomp
xchg
jb
xchg
sub
mov
adc
inc
add
hlt
movsl
iret
push
xor
pop
inc
in
test
add
mov
xchg
lret
into
cltd
sbb
stc
sbb
clc
push
fadds
sbb
fyl2xp1
shl
xchg
mov
in
fsubrl
xchg
cmc
stc
xor
ds
cmpsl
cli
xor
xor
stos
mov
pop
fprem1
adc
scas
leave
into
aam
push
test
int3
rorb
pushf
lret
mov
mov
xor
jo
cmpsl
inc
or
cld
mov
cmpsl
call
out
out
mov
mov
pop
ljmp
lret
cs
sbb
xchg
into
je
lret
and
jmp
mov
inc
pop
ret
push
mov
into
out
mov
inc
out
lods
neg
mov
lods
cli
js
ss
push
inc
mov
mov
mov
mov
jl
sub
inc
pop
mov
xchg
repz
pusha
dec
je
adcl
enter
dec
jecxz
add
mov
push
mov
pop
cmpl
sahf
shl
mov
movsb
les
aaa
mov
mov
fs
pop
and
xchg
rcl
pop
xchg
add
cmc
out
xor
lret
ds
nop
out
ret
shl
fsubs
adc
lret
jecxz
sbb
in
dec
cmc
ret
shll
loopne
fcom
mov
icebp
stc
and
mov
mov
add
cmc
scas
in
hlt
and
mov
sbb
lea
aam
mov
js
or
push
or
test
shll
mov
test
js
inc
add
inc
mov
das
sbb
rol
iret
ret
inc
enter
mov
push
outsl
repz
aam
jmp
mov
lcall
popf
out
outsb
adc
mov
adc
inc
dec
cld
shll
cmpsb
enter
xor
rol
xchg
add
mov
mov
inc
xchg
lods
mov
in
shrl
imul
sub
ret
mov
out
jecxz
ljmp
je
cltd
jecxz
out
jno
mov
jmp
add
add
mov
lock
fdiv
aaa
stc
add
pop
lcall
jmp
jmp
push
scas
xor
xchg
arpl
loopne
mov
cmp
lock
xor
in
pop
cld
in
push
out
push
lret
adc
fcoms
movsb
mov
push
nop
sbb
lds
mov
stos
cwtl
repnz
mov
lret
filds
repnz
leave
xor
fcmovnb
imul
mov
ficoms
mov
cmc
ret
loope
lods
out
inc
pop
xor
add
pop
pop
and
sub
enter
inc
xchg
dec
mov
sub
rcrb
bound
lds
mov
inc
mov
enter
shl
jmp
divl
and
rcl
cmpsb
movl
addr16
sti
pop
mov
adc
pop
pop
xorl
mov
inc
call
xchg
dec
mov
iret
decl
mov
sbb
mov
mov
pop
clc
ficoml
in
mov
jnp
sbb
shl
mov
rclb
inc
rolb
pusha
hlt
cmp
adc
pop
mov
outsb
nop
inc
icebp
bnd
cltd
loope
mov
mov
jbe
push
mov
call
mov
out
mov
sbb
or
add
adc
scas
or
mov
aam
fwait
mov
nop
jns
mov
or
mov
mov
cltd
cmp
call
mov
xchg
or
mov
sbb
cwtl
call
fld
cltd
mov
mov
inc
out
adcl
addb
xchg
pop
mov
xchg
xlat
jae
icebp
mov
loopne
lods
sbbl
cmpl
cmp
xchg
insb
in
rcr
cmc
adc
add
test
jle,pt
stos
in
in
shrl
jecxz
mov
nop
insb
shll
aas
rcrl
shlb
mov
mov
movsl
lcall
mov
mov
push
aaa
mov
in
fadds
dec
movsl
mov
pop
shlb
adc
js
add
loope
shll
inc
arpl
and
adc
data16
sub
jno
mov
xor
push
adc
mov
sbb
mov
ror
shll
nop
leave
inc
movb
cltd
rcl
cwtl
add
incl
lods
sbbb
pop
iret
add
mov
cmpsl
mov
xchg
popa
pop
xor
mov
xchg
or
mov
orl
mov
scas
xchg
or
add
or
sbb
add
or
jp
int3
add
pusha
xchg
sub
push
rol
es
enter
js
add
bound
xchg
add
mov
shl
enter
popf
rclb
lock
in
mov
cmp
sub
inc
xchg
test
xchg
sbb
lock
xchg
sarl
xor
jp
loopne
xchg
adc
or
and
xchg
cld
test
shlb
call
mov
mov
test
pop
or
call
pusha
bound
ss
sar
or
stos
rclb
push
les
shrb
or
mov
sahf
rol
es
cld
js
cwtl
jo
or
ror
es
test
inc
mov
mov
xchg
sarb
popa
loopne
mov
mov
or
int3
hlt
es
pop
mov
mov
mov
pop
sub
pop
dec
jo
pop
imul
es
rorl
jno
or
add
lock
xchg
pusha
daa
inc
outsb
mov
cld
out
icebp
sbb
inc
cld
dec
push
les
shrb
or
or
or
xchg
cld
mov
or
call
dec
rcr
test
cmp
mov
rcrl
test
or
inc
cwtl
or
add
mov
xchg
add
fsub
fsubrs
int3
or
les
rclb
test
lods
push
cld
pusha
or
or
test
test
fwait
dec
call
mov
jo
cltd
test
test
cmp
icebp
and
xchg
push
ss
add
jo
xchg
mov
mov
fwait
add
push
stc
add
sbb
pop
movl
xchg
adc
shrb
fs
std
add
sbb
mov
mov
les
jbe
shll
js
fdiv
lock
rol
es
sarl
xor
test
push
inc
rclb
test
cmp
hlt
js
xchg
std
cwtl
and
les
lahf
rorb
loopne
enter
inc
clc
in
lock
sbb
sub
aad
push
fdivs
int3
push
cwtl
xchg
nop
adc
cmp
les
cwtl
dec
loopne
sub
nop
cld
clc
rclb
test
shrb
jno
jns
fcmovnbe
rol
es
jb
push
cmp
adc
cmp
test
and
mov
mov
aam
mov
lret
xchg
out
pop
insl
push
mov
movsb
cmp
cld
cmpsb
inc
adc
xlat
pop
rcrb
or
xchg
fsubs
shl
nop
adc
andb
lds
mov
adc
rol
es
shll
and
mov
dec
je
les
out
xchg
shrb
adc
add
adc
add
sbb
pop
call
xchg
or
and
fadds
mov
adc
dec
adc
cltd
xchg
fdivs
adc
adc
loopne
aam
es
cld
clc
cmp
cld
or
inc
xchg
xor
mov
mov
out
and
les
pop
sbb
fcoms
das
ljmp
faddl
mov
jo
dec
in
loope
fadds
fwait
add
test
fs
rorb
movsb
clc
shlb
xchg
lock
mov
fucomp
rolb
mov
lret
rclb
mov
mov
call
out
xchg
cwtl
sbb
mov
test
sbb
js
xor
dec
cmp
mov
push
repnz
fcoms
and
nop
ret
rorl
pop
ret
mov
xchg
sbb
rolb
adc
cmp
pop
ds
jb
mov
adc
into
movsb
push
lods
fmuls
fs
repnz
xchg
mov
lret
call
mov
fsubrs
xchg
lret
mov
fs
adcl
dec
hlt
fs
repnz
sbb
sbb
cwtl
xor
rclb
clc
pop
daa
pop
mov
pushf
mov
mov
test
nop
ret
mov
mov
mov
scas
orl
pushf
les
cwtl
ror
test
fidivrl
or
pop
rolb
test
inc
pop
ret
and
pop
movl
xchg
pusha
sub
cmp
mov
js
pop
mov
rcr
fcmove
dec
mov
dec
shlb
pop
mov
inc
jecxz
repz
sbb
es
or
andl
rcrl
popf
sub
test
mov
cmp
andb
push
adc
or
sbb
nop
lds
mov
mov
mov
lock
sbb
rorb
test
loopne
add
call
inc
arpl
cs
rcrl
enter
xor
xor
mov
push
dec
pop
fs
jno
mov
movb
inc
mov
mov
test
or
enter
lock
mov
lret
test
or
or
or
and
mov
fs
fmuls
adc
cmp
or
mov
mov
or
adc
dec
dec
enter
mov
jmp
mov
clc
adc
push
mov
js
mov
enter
pop
cmp
cwtl
or
mov
mov
push
les
lods
test
or
movsb
push
adc
mov
cmp
inc
and
mov
rcrb
shrl
dec
add
xor
test
mov
cmpsb
xor
mov
fmuls
inc
hlt
jno
push
movsb
adc
test
push
mov
or
xchg
sub
dec
mov
or
movsb
jb
mov
mov
or
pushf
adc
mov
adc
loop
xchg
xchg
lock
xchg
enter
mov
or
enter
mov
or
outsb
adc
mov
lret
cmp
and
xchg
mov
nop
addr16
mov
rcl
test
movsb
loopne
lock
add
jno
adc
cwtl
and
xor
jno,pt
dec
jno
pop
jno
push
cwtl
test
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
int
mov
mov
lds
xchg
mov
mov
and
sahf
cli
lods
xchg
test
push
and
and
roll
ja
clc
push
jo
push
and
jl
and
test
pop
xchg
sbb
nop
pop
lds
andb
mov
xor
inc
pop
or
es
push
jo
pop
mov
out
mov
call
mov
pop
sbb
xor
test
loopne
ret
lock
or
adc
pop
xor
or
in
inc
push
into
pop
mov
movsl
mov
gs
icebp
cmpsb
andl
jo
xchg
xchg
sub
add
sub
fwait
xchg
jecxz
cmpsb
inc
sbb
scas
es
sub
sub
jno
cwtl
mov
dec
xchg
sqrtps
mov
shrb
movsb
fcmove
lea
in
mov
in
vphadddq
xchg
xchg
or
mov
or
sbb
mov
sub
lock
mov
sub
iret
xchg
jnp
addb
xchg
setl
enter
rcrb
rcrb
enter
cwtl
pushl
pop
jno
mov
push
shrl
cmp
cmp
inc
mov
adc
pop
dec
arpl
outsb
mov
jns
adc
rcll
rorb
mov
inc
mov
inc
rorl
test
int3
mov
es
in
or
xchg
xchg
mov
adc
add
mov
pop
shll
shrb
dec
cmp
push
enter
bnd
inc
adc
mov
mov
scas
cmp
mov
loopne
rcl
mov
fadd
push
loopne
push
dec
sbb
or
fstpt
xor
andb
push
test
clc
out
mov
nop
nop
shll
mov
mov
adcb
cmp
or
popa
sub
push
stos
enter
int3
fsubrs
or
sbb
push
repnz
mov
sub
add
icebp
orb
ret
mov
shlb
lock
bound
mov
fistpl
ret
sbb
xchg
iret
cmpb
jo
inc
cmp
inc
inc
in
test
push
movsl
mov
sub
lret
call
test
push
push
and
mov
outsb
mov
out
push
mov
fsubl
jbe
js
cmp
sahf
mov
shl
das
or
mov
bound
mov
test
out
test
out
mov
push
fs
repnz
mov
mov
adc
jecxz
fwait
inc
jecxz
inc
cmp
fs
xchg
rcl
and
sub
mov
nop
dec
add
flds
dec
and
inc
sti
dec
xor
mov
movsb
xlat
shl
xor
nop
sahf
clc
mov
or
or
xor
loop
inc
mov
xchg
inc
aaa
or
loopne
enter
rolb
fdivs
loopne
cwtl
shr
test
lock
clc
movsl
pushf
add
popa
adc
mov
push
shll
fsubs
mov
dec
cmp
inc
or
shlb
cmp
orb
cmp
xchg
mov
mov
sarl
mov
jecxz
inc
scas
nop
add
cs
add
and
xor
pop
subl
xor
jb
xchg
or
outsl
repz
xor
test
xchg
nop
inc
das
xchg
shlb
mov
xchg
lock
stc
adcl
dec
and
mov
test
sub
mov
test
inc
rorb
mov
fdivs
xchg
or
cmp
es
jmp
mov
stc
inc
fidivrl
repnz
js
js
inc
mov
sbb
push
loopne
push
mov
xchg
fidivl
clc
sub
jnp
andb
fnstenv
xchg
mov
shrb
lock
push
aaa
mov
adc
mov
xor
mov
push
dec
test
add
fdiv
jo
xor
nop
inc
cmp
xchg
test
mov
bnd
add
mov
cmp
mov
call
cmp
fistpl
sbbb
sbb
shll
fsubl
loopne
out
sbb
aam
out
or
or
or
adc
sub
or
aas
or
dec
or
push
or
pusha
or
imul
or
sbb
xchg
mov
lods
mov
ret
stos
dec
sahf
lret
cmpsl
inc
jo
or
loope
clc
in
or
testl
or
sbb
mov
cmp
movsb
xchg
inc
movsb
movsl
enter
mov
or
enter
nop
xchg
mov
or
scas
adc
mov
enter
rcl
cmp
je
or
cwtl
mov
xchg
movups
sub
cmovns
gs
xchg
add
fsubp
popl
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
ficoms
inc
push
fsubp
pop
inc
jecxz
inc
jecxz
inc
jecxz
inc
loope
push
test
out
mov
adc
mov
bound
mov
adc
dec
sbb
stc
js
dec
xor
nop
push
jb
mov
jo
lock
nop
loopne
sbb
fwait
dec
sar
push
dec
cmp
mov
popf
cmp
mov
loopne
lock
mov
xchg
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
loop
sbb
es
test
clc
dec
inc
or
test
pop
mov
or
andb
ds
mov
out
out
or
in
shlb
adcb
sub
lret
loop
adcb
sub
es
or
inc
and
out
xchg
pusha
or
lock
fcmovb
dec
push
addr16
or
add
clc
fidivl
sbb
mov
or
shll
xchg
int
inc
andb
call
sbbl
inc
or
sbb
or
loopne
push
mov
add
mov
stc
jo
js
adc
nop
in
cwtl
into
and
mov
mov
nop
adc
mov
xchg
clc
and
xor
clc
xchg
xor
and
xor
dec
adc
push
push
pop
mov
es
shll
pop
xchg
inc
cmp
cwtl
nop
shlb
incb
rcr
dec
aam
out
and
icebp
sbb
fnstcw
fcmovb
dec
adc
mov
sbb
test
out
test
inc
mov
pusha
jb
mov
cmp
xor
clc
add
shlb
sbb
ss
inc
test
cwtl
mov
pop
sbb
pusha
mov
inc
inc
repnz
xchg
xchg
rolb
enter
add
mov
inc
cmp
les
pop
rorb
or
pop
dec
dec
les
sub
and
and
mov
das
sbb
fs
ret
nop
fcmovb
dec
shl
push
push
add
test
clc
mov
es
pusha
adc
dec
add
call
lock
dec
mov
clc
loop
push
pushf
push
jo
call
icebp
pusha
int3
clc
js
gs
stos
push
xchg
push
push
addr16
push
loop
mov
add
bound
add
mov
mov
inc
sti
add
les
int3
nop
and
push
cmpsl
jo
push
mov
andps
push
sbb
mov
out
sbb
or
fmuls
or
or
movsb
push
out
movsb
inc
add
lods
fadd
lds
push
xor
fdivrs
cmp
ret
call
shrb
mov
test
pusha
jb
mov
adc
nop
push
bound
dec
fwait
or
in
mov
push
push
sub
fdivrs
mov
push
cmpsl
nop
jmp
in
repnz
mov
int3
mov
push
shr
call
test
out
mov
mov
adc
pusha
xchg
mov
loopne
or
orb
mov
mov
jno
add
ljmp
loopne
testb
cwtl
call
mov
push
repz
pop
xchg
jo
dec
mov
mov
dec
popa
and
scas
dec
andb
popf
repz
dec
or
xchg
lret
lret
test
orb
push
pusha
ljmp
aad
adc
and
ret
test
iret
test
dec
mov
pop
pusha
jmp
insl
bound
bound
bound
bound
bound
bound
bound
bound
bound
in
or
or
popf
or
stos
or
mov
loopne
cmp
mov
in
inc
call
mov
adc
dec
or
nop
clc
push
sbb
popa
xor
pop
test
push
push
or
lock
jo
or
mov
lret
sub
mov
stos
pop
insb
xorb
sbbb
out
xchg
xor
lock
push
repz
fwait
dec
xor
gs
cmp
mov
cwtl
pop
daa
dec
adc
push
sarb
dec
pop
pop
mov
mov
mov
mov
shrb
repnz
mov
adc
mov
sbb
les
mov
xor
movsl
inc
lods
shlb
fs
repnz
movsb
jle
mov
cwtl
lcall
push
cmp
out
mov
rcl
mov
adc
nop
dec
or
xor
fwait
dec
out
stc
push
fwait
dec
out
stc
push
fwait
dec
out
stc
push
fwait
dec
lock
push
fwait
dec
lock
clc
fsubrs
xchg
fmuls
and
jge
cwtl
clc
dec
jo
test
xchg
sbb
jb
mov
xor
test
jmp
stos
jo
adc
fdivs
fdivs
andb
sub
rcrb
mov
jp
lock
icebp
stos
js
nop
push
popa
jo
cwtl
jecxz
out
xchg
or
icebp
loop
sbb
mov
iret
inc
stos
call
test
adc
pusha
mov
flds
mov
mov
push
or
mov
or
repnz
orb
roll
fsubrs
adc
mov
xor
mov
push
fwait
dec
push
fs
mov
je
insb
mov
repz
bound
les
pushf
pop
pop
adc
sbb
lds
cli
mov
call
add
mov
xchg
sbb
insb
cmp
rclb
dec
mov
push
movsl
jo
pop
push
pop
js
push
xor
enter
adc
faddl
dec
repz
mov
adc
fs
and
and
nop
ret
hlt
or
pop
ret
movsb
dec
push
pop
ret
mov
int3
pop
xchg
pop
cmp
pop
adc
cmp
pop
adc
cmp
pop
adc
cmp
pop
adc
xor
adc
inc
pop
cmp
pop
icebp
pop
mov
mov
dec
sbb
mov
pop
pop
xchg
push
lock
or
sbb
int3
dec
pop
jns
repnz
subl
mov
or
shll
and
call
iret
inc
and
fsubs
inc
cmp
dec
lahf
fs
std
orb
inc
pop
out
xchg
fdiv
mov
add
pop
adc
shll
add
adc
cld
dec
cmp
dec
pusha
jns
xchg
sub
mov
pop
bound
adcl
fsubr
adc
mov
mov
mov
mov
and
fcoms
mov
mov
fs
cmpsl
dec
jo
test
test
jmp
nop
mov
shlb
mov
mov
and
mov
fdivs
mov
in
jno
pop
fwait
or
fs
pop
lds
mov
mov
adcb
sub
adc
dec
mov
pusha
cmp
push
add
pushf
jo
or
enter
test
xchg
mov
xor
mov
enter
mov
faddl
jb
test
xchg
pop
jne
nop
and
mov
mov
daa
add
add
adc
or
xor
sub
add
mov
push
test
sub
fwait
dec
jl
stc
js
inc
cwtl
clc
out
xchg
dec
andb
mov
or
add
or
or
or
popa
arpl
sar
cmpsl
cmp
mov
xor
rol
xchg
fcom
sbb
xor
jns
push
stc
mov
cwtl
and
lods
pop
cmp
fs
rorb
orb
xchg
andl
mov
in
adc
daa
sub
jo
or
pop
ret
sbb
rcrb
dec
call
adc
pop
dec
cmp
insb
lock
xor
int3
nop
jno
ror
inc
js
gs
nop
data16
sbb
movsl
pushf
lods
jno
adcb
les
fmuls
les
repnz
push
fdivs
or
sub
fsubrs
push
mov
call
out
jo
addr16
mov
inc
out
or
jo
add
inc
cwtl
push
adc
fcoms
clc
shll
pop
inc
and
mov
dec
cwtl
stc
jo
dec
lods
add
xchg
fidivl
lock
xchg
mov
add
jle
movsb
add
pop
jg
js
mov
test
test
imul
lret
in
push
test
mov
adc
test
push
or
push
xorl
test
xchg
inc
mov
xor
cmp
fiaddl
xorl
mov
out
rorb
les
mov
mov
andb
inc
adc
mov
or
xchg
loopne
aam
lret
mov
mov
enter
mov
or
xchg
lock
loop
adc
mov
or
push
adc
cmp
xor
or
xchg
push
movsb
cli
enter
mov
or
fs
cltd
pop
mov
movsb
xor
adc
mov
or
xchg
enter
mov
mov
or
xchg
push
movsb
adc
add
mulb
subl
xchg
cmp
mov
or
jno
push
mov
dec
adc
mov
or
xchg
ret
enter
mov
les
or
sub
mov
or
xchg
push
lods
pop
mov
mov
mov
jae
pop
mov
or
push
movsb
add
repnz
mov
or
jb
mov
or
xchg
push
movsb
push
enter
mov
or
mov
dec
mov
adc
stos
mov
in
mov
adcb
inc
or
xchg
sub
mov
or
fsubl
pop
dec
or
xchg
add
movsb
aam
mov
adc
aam
or
mov
subb
enter
mov
lods
sbb
and
cmp
dec
or
sbb
lock
mov
enter
mov
or
jne
xchg
adc
lret
xchg
ljmp
mov
or
pusha
movsb
jbe
test
mov
or
test
pop
adc
cmp
sub
or
xchg
mulb
mov
in
jns
mov
dec
xchg
xor
mov
or
enter
js
adc
cs
or
add
mov
or
ja
adc
xor
or
xchg
push
movsb
cld
leave
jl
clc
mov
mov
ret
fcoml
or
push
mov
or
movsb
mov
pushf
stos
xchg
mov
or
and
mov
rorb
scas
mov
in
enter
mov
or
push
xchg
enter
mov
loopne
mov
adc
or
adc
les
sub
sbb
out
mov
cmp
jle
mov
cmp
or
outsb
cmpsb
xchg
enter
mov
or
xchg
sub
jbe
mov
nop
mov
adc
mov
aam
pop
lds
xchg
cmpl
sbb
fwait
cli
sub
jno
sub
mov
jbe
aam
push
addl
out
mov
cwtl
in
arpl
jmp
shlb
add
int
cmc
in
les
mov
mov
sarl
out
pop
cmp
jmp
adc
lods
lret
scas
adc
mov
jnp
stc
adc
lea
jmp
pop
loop
jns
xor
adc
cmpsb
push
and
xchg
lods
mov
sub
xor
inc
mov
loope
aad
rorl
int3
mov
add
or
push
fiadds
pop
jns
or
testb
or
jne
push
leave
or
pop
dec
imul
aam
mov
ret
dec
cmc
jb
hlt
pop
les
loope
mov
call
je
cmpl
dec
icebp
pop
es
adc
push
jl
mov
call
test
or
inc
rorb
aad
xchg
rcl
mov
shrb
pushf
xchg
sbb
clc
into
mov
adcb
jecxz
stc
adc
push
stos
jmp
jns
xchg
ss
xchg
sub
pushf
xchg
pop
scas
pop
sarl
dec
aas
sbb
aad
push
aaa
or
cwtl
jns
int
cwtl
add
push
in
roll
inc
push
aas
push
xchg
xchg
sub
test
movsb
mov
les
push
enter
outsl
pop
lahf
adc
nop
and
pop
or
pop
loop
fmul
pop
in
mov
fistl
push
rcll
sbbl
inc
mov
adc
mov
pop
int3
jo
lret
cmpsl
add
jae
inc
adc
jmp
stos
jb
add
mov
cwtl
or
push
movsb
xchg
dec
lods
test
add
hlt
cmp
mov
shlb
hlt
xchg
sub
imull
pop
xor
xor
mov
fwait
repnz
jb
push
nop
pop
sub
push
bound
add
movsb
push
adcl
in
lock
stc
push
lret
adcl
ds
repnz
shlb
ds
cmpb
les
fstl
cmp
push
ret
lret
xlat
outsl
adc
adc
leave
repz
sub
cs
lock
push
inc
out
lock
mov
mov
jmp
xlat
jo
jmp
cli
mov
negb
dec
aas
jmp
adc
bound
cmpb
mov
xchg
jne
fistpl
dec
or
and
adc
inc
xchg
ret
call
subl
pusha
push
push
lods
ret
shl
lock
ss
jge
sbb
lcall
push
lea
jge
test
in
repnz
push
mov
adc
das
jl
in
push
add
push
cltd
sbb
and
xchg
jecxz
cmp
lret
aaa
aas
icebp
and
or
insl
addr16
mov
push
sbb
icebp
out
dec
xor
add
and
mov
lahf
leave
arpl
jmp
aam
stos
rol
push
mov
in
or
test
cwtl
addr16
test
jg
cmp
enter
popf
xchg
xchg
cmc
mov
mov
xchg
out
push
xchg
scas
rolb
adc
and
fs
enter
mov
ljmp
adc
jge
stc
fcoms
popa
mov
das
cmc
mov
dec
mov
mov
mov
cmpsb
jmp
fists
add
enter
aas
xor
or
mov
and
aam
out
mov
scas
pop
push
hlt
aam
scas
adc
shl
int3
add
pop
pushf
mov
pushf
and
out
dec
std
lock
or
mov
or
mov
adc
cmp
shl
jmp
sbb
xchg
or
pop
into
scas
scas
incl
stos
dec
int3
adc
ficoms
divb
call
and
inc
leave
in
loop
inc
fstpl
dec
mov
xchg
in
xchg
or
sbb
movsl
leave
xlat
movsl
sub
mov
push
loop
fs
rol
out
insb
and
adc
xlat
es
sbb
out
popa
dec
mov
add
in
mov
int
xor
pop
push
sub
scas
mov
in
cmp
rcrl
cmpl
ret
lds
scas
cmc
adc
adc
xchg
sahf
sub
lea
fcmovne
outsl
dec
and
xchg
out
leave
pushf
adc
adc
push
inc
scas
add
pop
int
mov
lds
cmpsl
in
jp
out
adc
das
jl
leave
sub
push
out
and
pop
jno
loop
lea
xor
call
ficomps
out
dec
lods
sub
or
test
out
sub
xor
and
xchg
or
push
scas
loope
push
rcll
lds
leave
stos
loop
add
inc
inc
jmp
adc
sub
je
inc
jl
mov
les
test
in
xchg
fsubl
sub
inc
in
fisttps
xchg
inc
jmp
sub
sbb
fs
xor
mov
mov
shll
lcall
loopne
lret
sub
adcl
movsb
arpl
iret
sbbl
mov
push
sub
adc
sbb
mov
fisubrl
or
inc
int3
add
stc
sti
adc
mov
dec
dec
loopne
aam
add
xchg
fld
ror
shlb
jg
das
lock
adc
pushf
jmp
fisubl
mov
es
inc
lahf
mov
add
adc
jb
movsb
fucomp
dec
cmpsb
inc
nop
mov
mov
adc
fmul
repnz
test
stc
inc
repnz
or
fisubrl
leave
sub
imulb
sub
adc
and
adc
sahf
jecxz
test
lcall
adc
test
leave
adc
rcrl
lret
inc
ljmp
dec
mov
ja
out
inc
push
mov
or
sbb
push
fcomps
je
sub
jmp
loope
adc
xchg
cld
fmull
xchg
push
iret
cmc
hlt
jge
sub
mov
dec
fildll
fdivs
cmp
fistps
loop
test
mov
test
es
fidivrs
fadd
mov
cmp
mov
xor
mov
xchg
or
pusha
cmp
push
ds
cmp
mov
sbb
cli
mov
mov
leave
into
int
mov
pushf
jno
pop
rclb
xchg
lcall
dec
outsb
dec
jmp
jle
sbb
movsl
push
shl
iret
xchg
scas
rcl
pushf
lret
pusha
lret
pushf
lods
xchg
repnz
scas
and
lds
ds
xchg
xchg
cli
xchg
fidivrs
fists
adc
test
sub
in
push
dec
cltd
cmp
stc
enter
push
jle
sbb
ror
scas
ret
xchg
inc
inc
ror
les
test
xor
test
xchg
leave
adc
call
inc
add
aad
xor
mov
mov
sbb
jl
shrl
fisttps
sbb
xchg
fdivrs
mov
push
push
cwtl
inc
push
cmpb
fcomps
andb
int3
icebp
dec
stos
shrb
scas
lret
jb
sbb
mov
cwtl
call
lret
mov
scas
cmc
test
mov
pushl
jmp
gs
cli
xor
inc
scas
mov
inc
push
sbb
sub
and
ret
mulb
adc
loop
sbb
mov
fnstcw
iret
out
or
adc
in
lock
add
rcrb
add
hlt
sub
and
dec
in
call
call
fdivrs
mov
call
lret
or
call
or
and
movsb
xor
add
ret
outsb
mov
nop
and
fwait
xchg
xchg
mov
dec
jns
inc
icebp
into
mov
shll
stos
mov
pop
cmp
dec
dec
sarl
rol
sar
add
sbb
ret
vpsraw
outsb
imulb
cltd
mov
jl
addr16
jno
and
jmp
outsb
nop
fdivl
mov
dec
and
push
subb
rcrl
cli
or
clc
pop
adc
or
ds
pop
out
rorb
in
aam
xchg
or
rcrb
cmpsl
sbb
xor
shr
leave
xor
dec
lock
lcall
cltd
roll
mov
mov
lcall
sbb
stos
sbb
aas
lret
dec
mov
in
inc
mov
lret
nop
repz
jge
subb
loope
cmp
ret
mov
dec
sbb
dec
cmpsb
stos
hlt
pusha
test
shrb
xlat
cmp
xor
mov
pop
xchg
cmp
mov
leave
idiv
imul
mov
jne
int
cld
inc
fstpt
cmpsl
ficoms
negb
xorb
fbstp
std
int3
pop
xor
mov
inc
fs
mov
xor
xchg
mov
in
and
xchg
mov
xorb
or
iret
cmc
loopne
das
or
mov
in
or
stc
lret
xorb
jns
adc
aaa
sti
sub
mov
cmp
jo
fwait
cmp
mov
iret
icebp
shl
adc
adc
dec
data16
insb
inc
insl
movsl
out
insb
mov
cltd
lret
scas
hlt
scas
lods
sbb
sbb
fwait
test
inc
out
jmp
cli
movsl
sbb
dec
mov
lret
int3
call
push
repz
xchg
ret
mov
leave
stc
xchg
ret
lods
lock
loop
cmp
shl
fstps
movsb
mov
xchg
sub
test
pop
jb
mov
mov
scas
sbbb
hlt
loope
nop
add
xorl
int3
rorb
dec
push
fldcw
push
int3
hlt
or
and
daa
lcall
inc
fs
and
movsb
mov
jb
fdivl
dec
dec
movb
cmpsl
lret
dec
push
inc
sahf
fsts
push
leave
jo
in
insl
or
lret
jg
nop
cmpsl
add
fnstenv
in
adc
iret
mov
enter
notb
mov
loope
sub
push
dec
mov
lea
lods
xchg
add
imul
jae
lcall
xchg
nop
in
lret
jbe
pushf
stos
lret
in
je
xchg
xchg
jne
gs
inc
test
nop
in
xchg
adc
clc
xor
movsb
push
sbb
inc
mov
ja
into
cs
imul
filds
cmc
and
push
adc
test
cld
add
lods
push
cwtl
sbb
aaa
xchg
adc
sub
sub
into
pop
push
cs
test
mov
out
pushf
push
into
pushf
adc
movsl
mov
lahf
and
xchg
ficoms
test
sub
push
dec
stc
mov
xchg
jle
loopne
xchg
in
ret
adc
repz
nopl
or
test
fbld
adc
int3
inc
mov
mov
or
mov
mov
sbb
cs
cmp
loopne
mov
aam
jecxz
adc
push
aad
mov
aas
sub
sub
cmp
pusha
mov
adc
and
push
or
jne
call
cmpsb
mov
test
movzwl
push
mov
mov
sarl
mov
xor
or
icebp
mov
mov
roll
jo
test
mov
mov
sub
dec
mov
adc
mov
cwtl
jno
mov
stos
dec
mov
dec
cmp
jb
inc
icebp
sub
loope
mov
xchg
cwtl
mov
out
nop
pushf
sbb
mov
cmpsl
loope
fisubrs
addb
xor
cmp
mov
mov
movsb
mov
lods
adc
fldenv
add
in
sub
xor
xor
daa
dec
shlb
xchg
push
pop
nop
adc
addb
cmp
jle
xchg
inc
dec
gs
jns
pop
xor
rolb
dec
jae
pop
inc
call
call
cmp
aaa
and
dec
adc
inc
cmp
pop
and
inc
jae
push
pusha
dec
jge
pop
inc
jno
lods
test
dec
push
xor
ds
xorl
push
pushf
push
cmp
shlb
in
push
push
inc
test
cwtl
int3
nop
dec
xor
push
test
mov
cli
and
jle
mov
mov
mov
call
pop
sub
mov
and
or
cmp
pop
nop
cwtl
lock
xorb
and
add
inc
cmp
mov
test
aad
sti
mov
pop
daa
fcmovnbe
lret
pop
xchg
sub
or
movsb
xor
push
pop
pop
in
or
int3
mov
adc
cld
enter
nop
jl
mov
or
or
mov
mov
insl
faddp
imul
les
stos
mov
test
jbe
sub
and
addb
cmp
or
stos
xchg
adc
xchg
in
and
dec
pop
xchg
xchg
mov
dec
jp
sarl
mov
adc
enter
cmpsb
imul
push
les
mov
mov
push
mov
adc
mov
xchg
repnz
adc
and
xchg
push
ljmp
jno
inc
pop
sbb
mov
and
in
xchg
ror
cmp
push
out
hlt
lret
push
jns
clc
cmp
jl
jbe
xchg
adc
mov
jecxz
imul
fsubl
loopne
push
or
sub
adcb
jns
mov
push
cwtl
aas
imul
and
add
adcl
js
pusha
fists
mov
aam
xchg
insb
test
mov
int
mull
lret
movsb
hlt
push
ret
insb
aaa
xchg
jmp
ror
enter
iret
in
jns
mov
mov
js
pop
xchg
lods
lret
in
or
shrb
imul
pop
sub
movsl
test
pop
or
insl
xor
mov
dec
cmp
cmp
push
jb
push
insl
test
xchg
cs
dec
push
jb
jnp
aad
lahf
mov
ss
add
subb
ret
xchg
cmp
cmp
lods
adcb
xor
pop
xor
lahf
sarb
rclb
pop
aas
pop
insb
cli
mov
scas
xor
pop
movsl
xor
arpl
adcl
push
dec
imul
shlb
mov
scas
fs
pop
das
out
loopne
fisubrl
push
sub
jge
insb
imul
jge
outsl
xchg
jle
push
sahf
pop
mov
out
test
lret
xchg
cmc
mov
test
or
test
lock
mov
push
aad
add
push
pop
xchg
and
lock
lock
mov
out
mov
mov
arpl
lahf
mov
lea
popf
adc
test
sub
test
sub
mov
and
aas
roll
ret
mov
mov
int3
xorb
cmp
mov
cmp
xor
incb
mov
add
jl
fs
in
xchg
aaa
repnz
fildl
xor
popa
xchg
cltd
addb
push
sbb
xchg
xlat
xchg
std
add
adcb
jnp
sbb
sub
xchg
aad
dec
idivl
fiadds
nop
mov
pop
ja
stc
test
xchg
out
mov
je
inc
mov
add
test
pop
subb
adc
sbbb
dec
fwait
mov
xor
cmp
sub
mov
imul
xchg
and
arpl
cltd
add
nop
ja
push
jo
into
xorb
popl
cmp
subl
into
fsubrs
cmp
int3
cmp
xor
xchg
repnz
or
cmp
cmp
cltd
cmc
mov
xchg
rep
test
daa
sarl
fildll
cmc
push
jp
scas
test
jbe
or
int3
jp
mov
xchg
js
xchg
dec
insl
jnp
fldl
jb
jns
xchg
bound
mov
jno
mov
mov
repnz
mov
adc
shlb
lock
xchg
adc
addl
rorb
std
or
les
fimull
loope
jmp
xor
pop
adc
pop
ja
jb
test
jns
dec
popa
cmp
je
or
cli
xor
aaa
jnp
dec
push
sub
inc
shlb
push
pop
stos
cmp
mov
inc
jl
outsb
and
xchg
fidivs
lret
jg
ret
xor
push
test
jb
and
mov
and
mov
pusha
dec
outsb
std
js
or
lcall
push
and
mov
jo
daa
push
xorl
aaa
cmp
clc
clc
cli
cmp
push
jbe
movsl
jg
adc
and
mov
shll
outsl
ds
xor
int3
push
rcrl
cmp
sahf
inc
dec
dec
xor
jns
adc
mov
call
mov
int3
and
cmp
aaa
and
ss
push
cmp
lock
add
mov
add
dec
clc
dec
testl
push
mov
rcrl
xchg
dec
clc
pop
sub
xchg
cmp
xor
les
ds
bound
mov
cmpsb
mov
mov
push
stos
loopne
aam
xchg
movsl
in
mov
inc
iret
into
add
je
movsl
ja
and
adc
test
sub
fdiv
mov
divb
fmul
mov
jecxz
call
xchg
rorl
cmp
jge
and
rclb
test
cmp
push
lea
loop
repz
nop
aas
dec
adc
xchg
out
mov
loope
xchg
aam
aaa
jl
ret
rolb
dec
aas
bound
push
xorb
dec
pop
aaa
sub
cmp
loope
or
aas
sub
cmp
jno
xor
lcall
adc
mov
mov
mov
shrb
enter
xrelease
push
stos
or
and
enter
cld
add
loope
mov
pusha
cmp
or
jle
in
cmp
lock
sbb
xchg
cltd
or
les
in
xchg
nop
xchg
stos
rclb
mov
int3
aam
ret
aam
nop
je
jle
orb
inc
fwait
adc
and
add
dec
dec
gs
out
adc
dec
inc
mov
data16
jp
sahf
sub
cmp
mov
addr16
dec
dec
and
jne
out
aas
jmp
xor
push
icebp
adc
mov
pop
je
int3
outsb
fbld
inc
mov
pop
add
xchg
js
fbstp
push
inc
imul
fldl
and
mov
mov
mov
sub
mov
sub
xchg
aad
xchg
cld
or
pop
mov
lahf
sbb
lods
ret
loop
ret
xchg
movsb
adc
addb
sbb
in
nop
shr
fsubs
into
mov
test
mov
push
nop
mov
mov
fs
jo
mov
push
pop
mov
mov
fisubl
pop
xchg
xchg
jle
movsb
pop
fcomps
xchg
jb
dec
lods
bound
mov
cld
mov
sub
faddl
cwtl
add
stc
hlt
pop
lods
mov
sbb
call
and
mov
shlb
sbb
sub
xchg
mov
clc
movsb
push
out
ret
mov
cmpsb
fwait
xchg
mov
xchg
xchg
sahf
in
lds
xchg
mov
push
nop
mov
pusha
mov
adcl
sbb
in
loope
les
sub
in
mov
fdivl
pop
or
cpuid
adc
add
pop
mov
out
mov
lods
ja
js
push
mov
adc
loopnew
pop
mov
lea
test
xchg
mov
bound
and
mov
pop
mov
call
shl
lret
repnz
mov
lods
add
loopne
mov
add
in
mov
call
add
test
andb
nop
and
movsb
xchg
adc
mov
mov
movsb
roll
call
rcrl
retw
test
ss
mov
roll
sbb
fisubrl
jne
js
pop
dec
not
aas
cwtl
iret
imul
dec
jmp
jno
jbe
nop
lock
shlb
in
lcall
loopne
in
lahf
int
mov
sahf
in
mov
in
orl
adc
or
push
xchg
add
mov
inc
mull
and
das
pop
jl
mov
mov
rclb
push
loop
mov
mov
pop
or
sbb
xchg
sub
adc
test
or
enter
mov
or
enter
mov
mov
lods
adc
movsb
or
adc
cwtl
or
std
or
enter
mov
movsb
cltd
les
lcall
pushf
or
popf
movsb
insb
enter
mov
or
mov
adc
mov
dec
xchg
movsl
movsb
inc
enter
mov
or
test
adc
stos
les
lods
or
lods
movsb
and
scas
adc
scas
les
mov
adc
mov
adc
mov
or
mov
or
add
mov
cld
mov
hlt
and
in
out
jmp
in
out
lock
pop
inc
out
cmc
testb
movsb
xchg
mov
lea
fiadds
xchg
xchg
xchg
and
jecxz
in
mov
xchg
mov
stos
movsb
movsl
mov
mov
pushf
fwait
lods
xorb
sahf
test
cmpsb
mov
lods
loope
mov
test
call
jmp
repnz
and
in
cltd
lcall
mov
lock
jnp
orb
ret
cwtl
shlb
fiaddl
addl
adc
mov
sbbl
dec
cwtl
add
xchg
nop
dec
pushf
add
add
or
mov
dec
cltd
stc
mov
and
sub
mov
test
scas
mov
fldenv
test
nop
add
mov
mov
xorb
fs
pop
loope
xchg
add
mov
test
addb
xchg
mov
cltd
mov
xor
mov
cltd
mov
flds
test
pushf
and
movsb
rolb
cmp
jnp
and
mov
mov
mov
mov
adcb
and
mov
orb
stos
ret
adc
cmpsl
cwtl
ljmp
movsb
mov
mov
test
pop
popf
adc
cld
mov
lea
pop
add
stos
add
mov
mov
cs
jb
xchg
dec
mov
mov
and
push
cwtl
xlat
lods
addb
sub
scas
into
xorb
scas
ret
test
mov
mov
xor
adc
mov
or
test
andb
stos
movsb
lods
add
mov
push
add
add
ret
xchg
andb
nop
lock
sahf
addb
lcall
lds
xchg
andb
mov
cltd
fsubrl
mov
mov
cltd
stos
orb
mov
add
lcall
mov
lret
add
int3
add
push
orb
lahf
dec
test
popf
ret
mov
rolb
lret
mov
mov
popf
or
jb
xor
or
shll
mov
in
scas
pop
aam
fs
enter
aad
mov
xlat
dec
mov
adc
ret
orb
mov
ret
test
fistl
popf
xorb
mov
add
orb
mov
test
test
mov
xchg
sbb
fwait
dec
lods
je
loop
mov
jecxz
mov
inc
in
xlat
mov
add
mov
in
add
or
and
aaa
scas
cltd
mov
call
rorl
pop
test
fmuls
in
add
in
movl
out
lahf
add
add
clc
icebp
out
xchg
repz
hlt
cmc
jge
cmpsb
stos
scas
addb
sbb
ret
idivl
outsl
or
call
nop
dec
cwtl
cmp
dec
test
sti
push
daa
add
loop
stos
push
add
add
incb
lcall
dec
test
dec
add
nop
fwait
stos
add
adc
mov
mov
mov
push
sub
cltd
pop
adc
test
dec
popf
fs
mov
adc
jb
mov
or
xchg
or
xchg
mov
orb
adc
cltd
or
dec
cwtl
pop
pushf
mov
mov
adc
adc
xchg
adc
mov
mov
lods
or
stos
rcll
dec
cmp
pop
in
sti
mov
cmp
ret
pop
add
gs
nop
mov
popf
out
andb
rcrb
add
mov
push
sbb
and
das
adcb
and
xchg
push
mov
cltd
cwtl
test
xlat
xchg
call
mov
or
mov
and
bound
xorb
es
les
sub
dec
test
stos
fildl
dec
cmpsl
stc
scas
jns
mov
rolb
xchg
or
xchg
and
sub
sub
cs
das
dec
mov
dec
xor
stos
fwait
sbbb
cwtl
adc
test
xchg
cltd
xor
lods
iret
xorb
dec
lods
scas
cmp
jns
mov
aaa
fdivs
stos
jl
in
fs
andb
mov
incb
lcall
pushf
test
out
xchg
or
adc
cmp
int3
subb
adc
addb
mov
inc
mov
popf
shll
inc
adc
inc
jae
jo
mov
push
mov
dec
xchg
sbb
mov
dec
xchg
bound
dec
clc
mov
mov
dec
rorl
adc
mov
add
push
add
push
mulb
push
xchg
xor
in
enter
push
pop
add
cmp
mov
push
add
fadds
test
in
mov
movsb
lahf
scas
mov
test
popf
cltd
mov
dec
stos
adc
add
xchg
mov
jbe
rcrl
pushf
inc
mov
lahf
js
pop
jo
out
test
push
add
lcall
jb
mov
pusha
add
pushf
enter
xchg
orb
ret
arpl
iret
nop
test
add
sbb
add
mov
imul
jb
adc
insb
add
ss
shrb
mov
test
test
repnz
jno
shlb
jb
mov
je
xchg
test
andb
aam
mov
dec
mov
mov
jbe
fsubl
mov
add
jns
mov
test
jns
nop
pushf
sub
mov
mov
mov
jnp
jne
orb
stos
mov
test
in
repnz
adc
add
jb
xor
jg
xchg
mov
lcall
test
mov
add
adc
test
mov
fnstenv
push
fisttps
xchg
mov
pop
mov
mov
push
movb
mov
sbbb
add
stos
add
mov
test
lods
jl
push
mov
cmpsl
stos
xchg
xchg
add
ret
mov
cmp
out
xchg
lea
bound
and
lcall
mov
add
mov
xor
sahf
stos
mov
mov
xorb
lcall
mov
and
stos
dec
mov
mov
cmpb
mov
mov
cmp
bound
add
imul
xorb
fwait
mov
test
lcall
mov
out
lods
mov
test
subl
scas
test
mov
hlt
mov
rcrb
mov
jno
orb
ret
mov
sbb
lahf
jb
mov
sub
adc
cmpb
and
les
adc
fwait
mov
mov
ret
pop
cwtl
adc
test
test
movsb
xlat
lods
andb
add
add
adc
nop
or
and
mov
lds
lods
pushf
mov
mov
pop
les
addl
mov
mov
je
add
lock
test
repnz
scas
add
in
lods
mov
sbb
enter
imul
lret
cmpsb
mov
sbb
fnsave
test
test
cmp
cmpsl
loope
lods
fwait
mov
outsb
popa
test
nop
cltd
mov
mov
les
cmpsl
in
xchg
mov
xchg
sbb
mov
lea
push
mov
leave
popa
sub
push
sahf
cmp
lea
lcall
fwait
push
mov
mov
mov
fwait
scas
mov
or
add
mov
loope
push
pop
pusha
mov
xchg
mov
lea
lcall
xchg
push
test
sbb
sbb
scas
ds
gs
data16
xchg
push
mov
aaa
mov
test
push
aam
stos
lods
jo
mov
repnz
loop
dec
dec
and
add
stos
test
je
dec
mov
je
enter
test
add
xchg
in
sbbl
test
add
sub
nop
dec
lea
mov
xchg
nop
int3
cltd
ret
mov
stos
or
je
inc
mov
mov
js
xchg
lods
mulb
es
lock
mov
cmp
or
mov
adc
lcall
push
enter
movsb
insl
mov
xor
sbbl
rcrl
movsb
xchg
xor
lods
mov
movsb
aam
jno
lcall
movsb
fadds
es
loop
xor
enter
nop
scas
aad
jbe
push
loop
add
xchg
mov
ret
dec
mov
cmpsl
mov
xchg
stos
xchg
bound
subl
xchg
popf
cmpsl
mov
and
sub
ss
scas
mov
ljmp
mov
add
xchg
add
mov
push
xlat
add
xor
jb
xchg
mov
enter
enter
scas
shlb
pop
or
aam
test
and
pmaxsw
sahf
mov
fiaddl
xor
test
pushf
mov
enter
popf
cmp
rolb
jo
and
sub
les
cmpsb
arpl
fldt
sbb
add
and
inc
ficoms
xchg
lods
mov
test
enter
int3
sarl
push
movsl
sbb
cli
xchg
and
mov
sbb
pop
xchg
adc
in
cmpsl
cmp
mov
mov
sbb
loopne
loope
xchg
je
add
cmpsb
sub
fisubrl
mov
push
rorb
mov
jecxz
add
add
movsl
loope
in
int3
dec
and
inc
add
and
xchg
mov
xchg
mov
mov
cwtl
mov
out
jecxz
mov
and
hlt
add
test
and
mov
call
add
shl
adc
in
add
xor
lcall
ret
pop
shll
test
inc
rolb
sbbb
testl
les
popf
data16
loope
mov
lock
lods
xchg
jp
mov
fwait
lea
push
ret
imul
loopne
xchg
lods
test
andb
dec
int3
cltd
xchg
rcll
mov
int3
add
fsubs
out
hlt
sbb
rcrl
jae
mov
mov
popf
test
orb
lahf
cmpsb
mov
out
add
sub
int
scas
mov
lods
pop
xor
add
test
scas
ror
popf
cmp
orl
cli
mov
pop
scas
pop
push
nop
lcall
andl
dec
cli
xor
test
xchg
mov
jb
jge
test
mov
js
int3
add
rorb
and
repnz
rcrl
add
mov
xchg
pusha
inc
xchg
mov
cmc
lods
cmpsl
mov
cmp
mov
lds
nop
lcall
add
stos
mov
pushf
xchg
in
lcall
xor
push
add
js
clc
dec
pop
mov
cltd
inc
mulb
push
rol
xor
shll
stos
mov
negl
mov
lods
test
mov
dec
mov
add
movsl
cli
add
jo
pop
test
lea
mov
or
jo
cld
and
sub
jle
sbb
sbb
lcall
outsl
inc
rcrb
mov
lret
pop
mov
in
cmp
cmpsb
xchg
xchg
mov
adc
mov
ja
mov
xchg
mov
into
mov
ret
pushf
je
ss
xchg
fwait
test
sbb
push
add
cld
mov
xchg
push
inc
sbb
mov
xorl
add
add
clc
push
cmp
insl
lods
ljmp
ret
test
mov
ror
mov
push
mov
dec
push
add
cmp
mov
stos
int3
test
enter
sbb
mov
pushf
xchg
sub
loope
popf
push
xor
cltd
pop
lcall
test
loope
sbbb
xchg
sbb
js
cmp
nop
movsb
stos
lock
movsl
add
mov
lds
mov
mov
test
inc
add
mov
orl
cmp
js
in
and
and
ja
sbb
insb
fstpl
lret
xchg
xchg
xchg
mov
or
fs
pop
adc
test
or
hlt
in
mov
in
faddl
fimull
jbe
xchg
aam
cmp
sub
nop
call
xchg
mov
testb
movsb
les
jmp
xchg
add
mov
lock
push
test
sbb
rolb
scas
sub
cwtl
xchg
shll
xchg
mov
lods
xchg
mov
pop
or
xor
add
pop
mov
inc
dec
test
cltd
push
xchg
adc
mov
cltd
adcl
dec
ljmp
pop
mov
test
lret
add
test
push
icebp
repnz
jp
push
dec
add
daa
mov
in
fmuls
mov
and
mov
sarb
ret
ss
mov
fidivs
in
sbb
mov
shrl
hlt
mov
call
int
fs
and
push
or
adc
mov
xchg
sbb
nop
jns
xchg
enter
push
mov
fdivrs
test
jp
mov
loop
add
xchg
jp
cld
call
fcom
adc
jle
jle
dec
and
dec
lock
mov
mov
test
sub
shrb
mov
sbb
fcoml
xchg
add
sbb
push
xor
es
add
lret
xchg
popf
mov
pushf
cmpsb
sbb
xchg
lods
or
sbb
pop
add
mov
lahf
pushf
adc
inc
cmp
cmpsb
shrb
cs
xor
xor
xor
stos
mov
sub
adc
jno
imul
mov
add
push
push
xchg
add
dec
sub
adc
push
adc
jecxz
test
popf
sbb
xchg
lods
shll
mov
push
sub
into
mov
hlt
inc
sbb
mov
mov
xchg
sbb
in
cmp
adc
add
inc
into
xchg
sbb
xchg
push
enter
popf
push
enter
xchg
ficompl
fsub
jmp
xchg
dec
cmp
rorb
test
in
xor
mov
xchg
leave
inc
mov
in
mov
enter
or
mov
mov
add
in
in
push
clc
pushf
sbb
cli
test
pop
add
mov
inc
mov
mov
mov
inc
fs
add
leave
call
sbb
mov
fs
mov
mov
test
mov
jecxz
movsl
sbb
lea
adc
push
cwtl
jp
mov
sbb
xchg
cmp
inc
mov
pop
loope
popf
and
add
int3
clc
sarl
cmp
or
adc
xchg
cmp
inc
cmp
and
xchg
cltd
and
sub
mov
push
lcall
add
nop
mov
add
mov
sub
pop
jl
mov
inc
mov
jbe
mov
lret
and
lods
test
js
mov
dec
xchg
sbb
dec
add
hlt
add
repnz
clc
add
sub
out
mov
mov
lret
jp
mov
ret
les
inc
xchg
cmp
lods
movsl
addb
add
mov
push
sbb
and
leave
sub
and
hlt
mov
inc
out
and
hlt
mulb
push
loopne
mov
fabs
test
sub
inc
mov
add
das
xchg
cltd
sub
mov
sarl
cmp
lods
xchg
xor
add
je
sub
fdivrs
or
mov
inc
xchg
popf
sub
xchg
fwait
sub
ja
movsb
and
mov
cs
sbb
xor
ljmp
xchg
mov
shl
mov
add
add
add
lods
test
mov
dec
sbb
fcoml
or
cmpsb
rcl
xor
add
xchg
shr
loopne
cwtl
push
movsb
lcall
adc
push
xchg
inc
add
sub
sbb
xor
test
add
sub
shlb
je
out
sbbb
mov
lock
divb
pop
sub
mov
cmpsl
mov
and
cmpsb
mov
xchg
pop
cmpsb
mov
pop
orl
enter
int3
pop
or
sub
xchg
lods
js
sbbb
test
push
es
lcall
fwait
push
int
push
enter
pop
frstor
jp
push
mov
pusha
xor
xor
xor
mov
mov
and
fistpl
lock
push
scas
mov
mov
insb
lret
mov
xchg
mov
lods
fsubrl
xchg
je
enter
divb
cs
fwait
push
lea
sub
fbstp
xchg
lea
lahf
add
xchg
mov
shll
cmpsl
lcall
jno
xchg
lods
xor
xchg
scas
adc
shlb
add
rcrl
mov
movsb
lods
shlb
mov
fsubl
or
add
jae
gs
mov
mov
movsl
sahf
mov
adc
insl
icebp
les
xor
xor
mov
clc
push
shrb
jmp
rorb
and
mov
adc
pushf
pushf
lret
rorb
mov
lcall
cmp
adc
xor
lds
sbb
int3
xchg
cmp
movsb
inc
xchg
cmp
xchg
and
cmp
out
sub
xor
cmpsb
in
movsb
xor
cli
rorb
cmp
mov
lcall
xchg
cwtl
aaa
mov
pushf
lock
mov
pusha
jo
lahf
dec
jo
loopne
sbb
ljmp
mov
mov
lods
mov
fcompl
mov
add
mov
nop
insb
ljmp
sbb
xchg
sbbl
xchg
test
out
or
movsb
xor
push
out
mov
xlat
lret
add
mov
xchg
xorb
mov
and
xchg
popa
out
popf
xor
insb
add
adc
popa
cmp
xchg
jle
sbb
xor
add
hlt
js
aad
sub
lcall
add
shl
inc
adc
cwtl
sbb
loope
and
imul
dec
adc
movsl
or
nop
dec
sbb
and
loope
xor
mov
scas
cld
dec
fwait
mov
fmuls
lods
popf
xchg
mov
fcomps
mov
enter
sbb
int3
push
inc
imul
jle
push
and
stos
sbb
ds
mov
lods
or
or
pop
cmp
inc
dec
sbb
xor
lods
xchg
mov
lcall
movsl
mov
push
mov
mov
stos
lea
mov
popa
mov
mov
hlt
xor
pop
jmp
mov
bound
ror
xchg
xchg
nop
push
adc
movsl
aam
cli
ljmp
mov
int3
mov
jp
xchg
test
aam
les
add
jmp
in
xchg
lret
inc
insb
fcompl
fadds
xchg
adc
and
adc
movsl
rorl
jl
popa
mov
cwtl
xchg
mov
loope
mov
mov
xchg
inc
adc
sub
cltd
jle
nop
in
mov
xchg
lea
mov
xchg
mov
mov
pop
push
into
mov
cwtl
cmpb
jo
dec
xor
and
lods
adc
cmpsb
in
fsubrs
mov
jne
scas
xlat
add
inc
xchg
rolb
int3
xor
mov
pop
mov
mov
les
lods
addb
pop
rorb
mov
add
jo
dec
push
je
les
cmp
sbb
mov
fs
xchg
fwait
xchg
ds
popf
test
stc
ljmp
xchg
test
clc
fsubl
adc
mov
fstpl
lcall
adc
test
lea
inc
and
and
dec
add
push
push
aad
mov
enter
xor
xchg
push
loop
xchg
rolb
mov
jle
xchg
push
adc
xchg
fcom
add
test
fs
cmpsl
sub
daa
dec
push
inc
movsb
lods
pushf
cld
xor
mov
adc
push
movsl
add
lea
pushf
dec
add
dec
sbb
and
fldt
xchg
sub
cmp
push
test
mov
mov
sbb
and
rclb
inc
dec
push
addr16
dec
and
adc
add
sbb
mov
or
mov
mov
loopne
pushf
pop
nop
movsl
gs
mov
jmp
push
push
sbb
sbb
xchg
xor
jb
sub
sbb
xchg
xor
scas
push
lea
std
cmp
sub
int3
mov
leave
add
out
cwtl
movsb
leave
movsl
js
inc
movsb
test
enter
mov
clc
sub
adc
fs
js
rclb
add
adc
mov
mov
mov
xchg
cmp
ds
int3
cltd
push
push
insb
xchg
mov
movsl
push
scas
mov
mov
in
mov
mov
pushf
inc
lret
mov
adc
and
lea
mov
movsl
arpl
adc
aam
cmp
fldt
popa
les
mov
fisttpll
fldl
inc
daa
or
movsb
lret
lcall
pop
aam
in
fwait
fs
nop
orb
sbb
jb
bound
adc
call
outsb
xchg
push
cmp
jle
popf
pop
dec
daa
mov
movsl
mov
roll
les
xchg
test
jbe
mov
pop
add
pushf
pop
sbb
pop
outsb
or
hlt
push
sbb
adc
cld
mov
sub
es
mov
cmp
imul
movsb
imulb
mov
dec
inc
mov
mov
test
push
or
or
movsl
lods
ljmp
mov
test
mov
lret
push
sbb
mov
and
ficoms
rorl
mov
movsl
and
mov
test
add
mov
in
inc
test
and
cmp
mov
pop
pop
add
into
xor
xchg
xchg
test
push
loopne
stos
adc
mov
enter
jb
fisubl
ss
cmc
mov
js
lahf
mov
sbb
mov
push
pop
push
pop
in
flds
sbb
inc
lock
add
xchg
cs
mov
xchg
push
cli
jmp
lahf
lcall
hlt
mov
mov
mov
pop
xor
dec
pop
sar
mov
mov
sahf
xchg
push
pop
pusha
cld
mov
mov
mov
adcl
jns
fisubrs
push
or
push
xchg
sbb
and
mov
add
aad
and
rclb
adc
call
mov
xchg
mov
out
test
pop
test
mov
pop
sub
mov
leave
insb
enter
movsl
xchg
scas
lcall
cmp
cmp
loop
inc
ljmp
stos
and
mov
cwtl
mov
pushf
xor
xor
or
push
rolb
xchg
add
and
leave
cld
scas
rclb
sbb
push
adc
int
int3
int3
hlt
xor
sub
dec
and
mov
popf
and
push
jb
mov
pushf
pop
fsubs
lea
rorb
sarb
daa
fs
iret
pushf
dec
mov
in
mov
mov
adc
movl
mov
ljmp
in
jbe
mov
arpl
xchg
cltd
push
movsb
mov
add
jo
xchg
js
jno
mov
in
rcr
je
in
mov
lea
xchg
pop
xchg
mov
cmp
mov
xchg
and
ss
mov
jno
sbb
movsl
mov
xchg
pushf
hlt
xchg
lcall
mov
jge
fidivrs
mov
mov
push
nop
xchg
out
lcall
lds
mov
inc
mov
cmp
rolb
cmpsl
iret
popf
or
xor
or
xor
jl
add
mov
lea
mov
inc
pop
fwait
movsb
sbb
mov
mov
lea
aad
mov
mov
and
nop
mov
and
inc
mov
fimull
or
lea
mov
iret
dec
lods
enter
jns
jge
fwait
mov
mov
mov
insl
mov
xchg
loope
mov
mov
mov
out
cltd
or
add
roll
xchg
pushf
lret
cmp
aad
xchg
scas
lcall
xchg
in
mov
call
stos
ret
lea
mov
icebp
les
mov
or
dec
lea
push
add
sub
mov
pop
mov
ror
lea
add
mov
mov
ljmp
xchg
cmp
scas
jl
or
nop
or
push
xchg
and
sub
shlb
lcall
xchg
adc
jge,pt
mov
cmpsl
mov
test
lods
and
xchg
jge
inc
je
and
aam
mov
lcall
mov
fnstcw
mov
mov
ret
xor
test
fwait
rorb
adc
xchg
xacquire
int3
pop
lea
xchg
in
push
jl
pop
in
pop
or
xchg
add
jb
mov
mov
xchg
mov
xchg
xchg
scas
xchg
lret
lea
xchg
rorb
mov
sbbl
mov
cmpsl
lds
fisubrs
mov
mov
lods
add
js
xchg
mov
mov
xchg
adcl
sahf
andb
mov
test
cmp
lea
inc
roll
cld
lea
lea
lea
mov
mov
mov
popf
lods
stos
ret
sub
cli
jge
jecxz
repnz
sub
mov
cltd
scas
lea
lock
push
jmp
or
test
push
orl
mov
scas
pop
cwtl
repnz
fistl
xorl
ret
adc
movsl
mov
stos
sahf
mov
repnz
pop
movsl
xchg
cwtl
lret
nop
nop
xchg
lds
xchg
mov
jo
rcll
addb
nop
mov
inc
dec
mov
push
mov
xchg
subl
mov
lcall
into
and
mov
cmp
or
or
cmp
xchg
les
xchg
and
cltd
push
in
mov
pop
movsb
ror
add
popa
pushf
mov
mulb
lahf
xchg
xchg
add
sbb
iret
or
das
clc
mov
ss
xchg
es
pop
mov
daa
or
movsb
lods
mov
adc
fiaddl
push
jl
mov
call
xor
jnp
push
iret
nop
xchg
adc
xor
loopne
or
cwtl
mov
mov
sub
loop
and
cmp
lret
mov
push
xor
xchg
repnz
lods
sub
shlb
lods
popf
xchg
lds
and
xchg
call
fmuls
cwtl
leave
movsl
outsb
test
movsb
lcall
add
iret
movsb
rcll
sahf
xor
mov
mov
adc
outsl
nop
insb
add
push
push
mov
dec
ret
or
dec
leave
scas
xchg
inc
aaa
les
les
sahf
cmpsb
xor
and
push
rcl
sbb
insb
dec
mov
add
xchg
nop
jo
popf
fmull
cmc
push
cmp
lds
xchg
and
mov
mov
mov
adc
dec
mov
mov
xchg
bound
mov
xchg
scas
xor
les
push
xchg
call
stos
xchg
lret
and
rolb
sbb
add
sbb
lods
or
testb
pop
sub
shll
test
or
mov
cltd
add
clc
mov
cmpsl
stc
test
cmpsb
cltd
ret
test
mov
lods
pusha
add
mov
shr
mov
movsl
nop
fldcw
mov
xchg
lret
aam
test
mov
cs
xchg
and
ljmp
mov
mov
push
push
mov
les
or
push
out
xlat
test
stc
test
xchg
jno
aaa
stc
or
sub
mov
add
je
cmpsb
orb
or
stos
xchg
dec
test
or
lret
test
lret
scas
xor
mov
jb
cmpsl
cmpsb
push
insb
add
mov
sub
in
nop
xlat
enter
ds
scas
in
in
mov
enter
out
out
loope
adc
in
test
lret
lds
mov
shr
mov
ljmp
enter
testl
add
sub
mov
pop
rorl
not
stc
mov
repz
cli
xchg
repnz
clc
enter
mov
loope
mov
in
out
in
movsb
lock
fninit
adc
out
adc
adc
add
lock
push
push
inc
cmp
repz
pop
jnp
push
mov
sti
movsl
scas
jle
xchg
fnstsw
mov
test
stos
xorl
dec
xor
mov
fildl
mov
pusha
cmp
add
xor
xor
add
push
and
jno
xchg
das
mov
mov
jbe
add
pop
xor
mov
mov
cmpl
push
and
or
xor
movsb
push
loope
aam
dec
add
jb
jbe
or
sub
mov
rcl
mov
mov
enter
ret
push
pushf
pop
aaa
mov
xchg
dec
mov
fistl
ds
mov
clc
rcrb
xor
mov
into
sub
outsb
push
pushf
mov
mov
mov
lds
test
push
les
or
cmp
sbb
adc
clc
adc
mov
or
xchg
loopne
fmul
fcoms
aam
rol
int3
enter
mov
adc
mov
mov
or
movsb
sub
and
adc
or
cld
lock
xchg
fsubs
mov
rcrb
or
movsb
cmp
sub
sbb
or
or
lds
mov
ret
movsb
enter
mov
or
xchg
lret
movsb
int3
enter
mov
or
xchg
shll
mov
or
out
lods
icebp
sub
sbb
cmc
cmp
push
div
ds
dec
dec
out
jmp
repnz
xchg
hlt
movsb
cmc
enter
mov
or
or
lds
adc
or
jns
dec
les
xchg
dec
lds
adc
or
jns
and
mov
in
lcall
xchg
push
inc
mov
add
mov
mov
mov
mov
mov
mov
mov
adc
aaa
outsb
xchg
xor
das
sti
add
daa
popa
iret
and
daa
pop
cmp
sbb
outsb
xchg
adc
psubd
fldt
pop
xchg
mov
mov
mov
mov
mov
mov
mov
cs
out
rcl
pop
mov
dec
mov
mov
mov
mov
jb
dec
xchg
fimull
repnz
mov
aam
rcll
rorb
fs
iret
mov
int3
mov
leave
fs
pushf
lds
mov
mov
dec
pop
or
sub
push
rclb
and
test
daa
hlt
mov
rcl
shrb
cld
mov
fwait
scas
pop
xchg
lods
scas
xchg
mov
call
loop
xor
call
cwtl
dec
jae
push
cmp
and
movsl
repz
out
fs
xchg
cmp
adc
icebp
push
nop
dec
mov
xorb
mov
xchg
mov
mov
call
mov
ret
int
push
jge
hlt
aas
xor
mov
xor
lods
sbb
js
dec
nop
jle
push
jl
dec
xchg
jnp
cmp
jp
sub
or
xchg
ja
lock
mov
or
jb
mov
les
or
pop
movsb
outsb
enter
mov
or
test
push
loop
imul
xchg
movsb
call
mov
or
enter
mov
clc
les
or
sub
pop
enter
mov
or
movsb
movsb
pop
enter
sahf
je
mov
push
or
movsb
and
push
adc
push
hlt
push
or
xchg
push
movsb
ror
push
adc
mov
or
test
push
les
or
cld
movsb
dec
enter
mov
or
mov
inc
enter
mov
rclb
inc
xchg
insb
movsb
inc
enter
mov
or
enter
mov
or
xchg
shlb
nop
js
mov
or
xor
xor
xor
cld
mov
or
sarl
shrb
inc
inc
pop
inc
fisubrl
rolb
pop
cmp
lret
xchg
das
xor
jl
sti
enter
and
xor
test
cwtl
enter
jb
xchg
inc
dec
cmc
ljmp
inc
inc
rsqrtps
xor
imul
loope
xor
aas
sub
mov
jge
mov
dec
pop
mov
insl
xor
outsl
iret
cmp
ds
test
arpl
add
inc
fidivrs
xor
xchg
aaa
cmp
and
mov
ss
inc
push
xor
xor
sbb
test
imul
aas
push
push
test
inc
xor
ret
enter
ss
add
xor
js
faddl
mov
jl
negb
dec
jge
mov
mov
lods
dec
push
push
mov
lcall
orl
test
rorb
and
cmp
iret
shl
or
fidivl
ljmp
pop
cld
rorb
lret
cmp
scas
push
jp
dec
pop
and
pop
mov
mov
push
lods
clc
push
enter
cmp
jbe
dec
ret
int3
aam
push
hlt
sub
dec
cmp
add
arpl
mov
mov
xor
mov
and
inc
lods
and
shrb
les
cmp
gs
cmp
ret
ret
scas
test
adc
fmul
nop
push
std
push
nop
je
push
clc
cmp
clc
and
xchg
je
dec
outsb
pushf
add
add
xchg
dec
lods
mov
int3
loopne
push
sub
rclb
out
loop
paddq
sbb
xchg
rorb
inc
sub
or
add
std
data16
sub
aam
dec
jo
xchg
add
xchg
pop
xchg
mov
es
movsb
dec
insl
and
or
pop
dec
sub
les
enter
lret
nop
lcall
mov
inc
adc
cmpb
test
or
mov
sarl
shrb
movsb
push
cwtl
clc
push
fsub
inc
xor
jnp
shll
xchg
mov
cld
aaa
xor
dec
sub
xor
mov
cmp
inc
fs
jnp
fsubrl
cmp
add
das
push
mov
push
cmp
push
int3
xchg
inc
push
pop
sub
les
repnz
or
push
mov
adc
xor
and
nop
movsb
movsb
mov
fs
fs
into
repnz
and
dec
lods
fisubrl
mov
mov
sahf
dec
dec
mov
ljmp
adc
sets
leave
or
push
sbb
dec
movsb
sub
insb
cmpsb
mov
movsb
fadd
nop
xor
jp
dec
mov
gs
cmp
mov
and
div
adc
sarl
push
adc
test
and
ja
pushf
lods
xchg
inc
add
cmp
sbb
mov
adc
mov
aaa
je,pt
and
jl
pushf
push
test
push
lret
sub
or
jns
xor
jmp
and
push
push
dec
sub
pop
push
mov
movsb
out
xchg
xor
mov
leave
movb
lret
push
gs
or
or
movsl
clc
sbb
pushf
cmpsl
cmp
ficoms
enter
cmpsb
xchg
push
jnp
shll
mov
dec
movsl
hlt
jg
rorl
push
jae
xchg
push
mov
pop
fwait
ja
jmp
loopne
xor
add
cmp
les
lea
lea
cmpl
adc
sbb
jo
cmp
xor
mov
scas
jb
cmpsl
ficoml
enter
dec
js
pop
fistps
push
loopne
aas
mov
loop
mov
pop
mov
mov
enter
mov
or
xchg
dec
dec
mov
dec
push
mov
ret
inc
mov
sub
inc
lds
shrl
mov
fimuls
xor
sbb
call
lds
rcrl
in
les
xchg
repz
movsb
movsb
inc
movsb
out
lods
fimuls
xchg
call
mov
dec
adc
jb
lret
xor
into
insl
xchg
dec
and
xor
stos
sbb
mov
xchg
pop
xchg
lahf
add
sub
test
and
inc
roll
aam
sarb
add
or
jle
in
rclb
test
mov
adc
xchg
mov
xchg
fdivs
nop
and
je
mov
loopne
js
xor
sub
mov
dec
xchg
adc
pop
push
xchg
xor
add
lock
loopne
and
ret
mov
call
sub
loopne
xor
outsb
cmp
pop
cmp
dec
jge
xor
inc
pusha
inc
mov
int3
inc
dec
mov
push
dec
add
and
rcrl
add
aaa
bound
sar
rclb
ret
rorb
ret
call
mov
and
xchg
lock
push
inc
inc
xor
enter
rcrl
rcrb
inc
sub
add
nop
xchg
cmp
add
out
out
mov
in
sbb
jecxz
in
mov
fmuls
adc
mov
lods
xchg
push
dec
repnz
xchg
rol
int
push
test
sub
push
roll
inc
sub
adc
lcall
in
mov
xchg
pop
mov
jae
xchg
or
in
ret
fcoms
cmc
mov
cmpsl
in
lock
fiaddl
mov
and
cmpsl
mov
mov
cli
cmc
stc
mov
scas
cwtl
fimuls
mov
lods
cmpsb
mov
ds
call
jnp
mov
jmp
fstpt
jne
rcll
sub
pop
dec
mov
cwtl
daa
std
sub
and
xchg
cwtl
mov
notl
cmc
push
inc
pop
notl
xchg
add
enter
cmp
mov
test
xorl
mov
pushf
xor
xchg
adc
aam
loope
jmp
shlb
shl
mov
int3
mov
imul
std
sarb
adc
bound
inc
imul
pop
cmp
clc
enter
add
pop
sbb
lds
lret
int3
leave
and
pushf
sbb
loopne
idivl
add
out
dec
pop
sarl
imul
sbb
aam
rol
repnz
lahf
int
iret
aad
lds
rclb
mov
call
add
xchg
inc
mov
stos
sbb
and
fisttpll
and
std
jns
lods
je
xor
add
leave
into
sbb
xor
rclb
push
repnz
sbb
fsts
and
movsb
jmp
cmp
adc
sarb
add
fst
jg
push
mov
enter
clc
test
inc
dec
pushf
loop
test
mov
sbb
xchg
adc
mov
mov
mov
mov
mulb
ret
mov
mov
fs
adc
push
mov
cmpsl
aad
and
nop
cmc
sbb
adc
cmp
aas
push
xchg
test
or
mov
push
enter
mov
sub
dec
mov
test
mov
aad
mov
orl
lock
ss
out
push
addr16
loop
lea
push
mov
cmp
movsb
cmp
jl
adc
ret
inc
fwait
xchg
lret
rcr
int3
cld
xor
int3
enter
mov
or
mov
les
or
insb
movsb
push
mov
or
dec
movsb
inc
enter
test
mov
or
xchg
lock
in
loopne
fsubl
or
sbb
mov
test
cwtl
adc
mov
xchg
mov
mov
adc
mov
fcoms
xchg
dec
xchg
adc
test
mov
dec
shll
sbb
mov
xlat
loopne
frndint
adc
cwtl
dec
in
adc
gs
dec
xchg
cmc
mov
mov
int3
mov
enter
test
and
test
dec
aaa
and
mov
push
mov
addl
and
and
stc
adc
pop
mov
pop
pusha
jl
nop
sar
dec
sub
inc
mov
add
movsl
add
mov
xor
mov
fs
or
mov
fisubs
inc
fistps
ljmp
pop
pusha
jns
mov
mov
push
mov
int3
movsb
nop
mov
insl
mov
mov
cmp
mov
adc
xchg
loopne
xchg
xchg
mov
les
cltd
or
xchg
lcall
mov
or
cld
test
enter
xchg
xor
mov
test
js
jg
decl
push
cmp
out
movsb
inc
xchg
ja
ret
mov
test
shlb
mov
adcl
jb
mov
inc
push
or
es
es
int3
mov
repz
sbb
or
xchg
popf
mov
insb
mov
xchg
pop
movsb
xchg
enter
mov
or
enter
sub
test
and
xchg
mov
or
or
xchg
decl
pushf
xchg
clc
movsb
cltd
enter
mov
or
enter
mov
or
out
js
cmc
imul
hlt
xor
into
les
mov
es
push
mov
cmp
mov
stos
pushf
rolb
mov
mov
data16
jae
cmp
cmp
inc
add
movsb
push
enter
mov
or
jp
mov
enter
mov
or
xchg
movsb
ds
mov
les
loop
test
adc
mov
or
fs
lcall
fimuls
xchg
adc
mov
shlb
mov
into
movsb
loop
add
pop
mov
or
jb
mov
and
push
nop
lcall
nop
inc
mov
mov
test
rcrb
push
das
mov
add
push
mov
ret
mov
test
scas
push
mov
aad
xchg
aam
cld
enter
mov
addl
jno
subl
pushf
pusha
orl
dec
mov
ret
hlt
test
ret
stos
mov
lods
fstl
lock
mov
mov
fsubrl
rol
sarb
imul
adc
inc
mov
push
stc
or
mov
adc
adc
jb
sahf
pop
jge
pop
clc
adc
sahf
das
icebp
enter
les
cmp
xchg
push
cmpsb
jb
out
shrl
or
test
or
or
mov
mov
cmpsb
fdivs
scas
adc
imul
and
orl
pop
add
mov
mov
sbb
xchg
nop
rolb
xor
push
sbb
ds
inc
test
dec
fwait
mov
insl
dec
dec
pop
inc
push
into
js
xorb
lock
sub
adcb
movsl
gs
add
push
push
adc
or
jns
and
btr
cmp
mov
jg
lahf
clc
cli
jo
inc
int3
pusha
movl
cmp
jmp
cmpsl
mov
pusha
cld
ret
push
pop
jns
cmpb
sub
ret
and
mulb
jb
scas
add
andb
js
push
lahf
inc
inc
jp
imul
jae
push
popa
lret
adc
inc
adc
cltd
arpl
std
lea
push
mov
dec
enter
ret
adc
xor
add
mov
push
adc
cli
jg
es
mov
xorl
adc
fldl
sub
aas
and
pop
add
int3
dec
sbbb
mov
inc
mov
call
jnp
icebp
mov
lock
mov
pop
out
xchg
add
inc
push
lods
in
cltd
fcoms
push
mov
sub
daa
outsb
jo
xorb
in
das
test
xorb
push
adc
aas
push
mov
mov
negl
scas
int3
inc
xchg
adc
dec
inc
adc
sarl
xchg
lahf
sbb
sbbb
adc
lds
jg
movsb
mov
mov
cli
mov
xor
cld
lahf
xchg
cmp
adcb
or
add
jl
mov
push
sub
andb
push
pop
aad
mov
mov
jg
add
cli
and
ret
mov
sub
mov
add
pop
cmp
push
cmpb
xor
arpl
addl
add
ret
ss
mov
scas
mov
push
mov
adc
cmpb
pop
and
xor
xchg
daa
adc
fnstenv
nop
lods
movsl
or
lods
mov
iret
shrl
mov
flds
std
jnp
inc
sahf
push
or
adc
cwtl
into
lret
in
jge
comiss
fcompl
orl
pop
mov
lea
xchg
es
scas
pusha
mov
pusha
pusha
addr16
lea
enter
test
push
test
push
mov
lret
xchg
mov
out
int
stc
test
inc
sbb
test
addr16
stos
lea
rcll
fwait
rclb
and
xchg
mov
popa
int3
sbbl
clc
mov
cmp
cmp
pushf
cli
mov
movsb
mov
mov
lock
faddp
sahf
std
lock
inc
push
mov
mov
lock
test
je
add
mov
lock
js
mov
sbb
icebp
xchg
sarl
mov
xlat
fstl
lds
rclb
test
cmp
cs
add
cltd
nop
xchg
ret
pop
aad
mov
push
or
adc
jmp
and
lcall
repnz
pushf
adc
lock
ror
sahf
xchg
lahf
in
les
mov
je
mov
les
les
add
movsb
jmp
lret
fs
mov
repnz
add
jne
loopne
mov
movsb
fsubl
mov
lcall
and
lods
lock
ret
leave
sbb
test
das
shrb
pop
mov
test
push
movsb
mov
in
aad
xor
lods
pusha
mov
test
mov
mov
pop
xorb
mov
repnz
add
scas
mov
ljmp
pop
adc
in
stos
fldenv
outsb
shrl
aad
pextrw
add
and
lret
out
icebp
icebp
test
mov
xchg
loop
mov
lock
arpl
repz
xor
push
push
shrb
mov
adc
xchg
shlb
movsl
test
pusha
add
pop
or
mov
jno
jns
lods
sub
jle
cmp
cmpl
adcl
add
loopne
xchg
cld
dec
mov
cmp
mov
xchg
sbb
nop
loopne
mov
or
xchg
mov
test
dec
and
inc
loop
ds
mov
mov
fcoms
sbb
stos
insb
dec
cmp
lock
mov
enter
mov
or
xchg
push
inc
mulb
mov
clc
xchg
enter
loopne
inc
out
clc
nop
xchg
stc
mov
or
mov
sahf
jo
mov
mov
mov
orb
dec
mov
mov
mov
pusha
out
sti
in
sahf
inc
sbb
inc
xor
ret
dec
dec
xchg
mov
les
or
test
cmp
adc
loopne
mov
lock
mov
or
xchg
xchg
movsb
cmp
xchg
adc
xchg
les
or
xchg
mov
or
sbbb
mov
subl
or
pop
movsb
jb
sbb
lcall
mov
jo
jns
mov
cwtl
daa
add
lea
mov
ret
shlb
adc
jl
pop
add
ret
inc
jb
lahf
adc
jo
outsb
mov
mov
rolb
sarb
ret
mov
xor
sbb
insb
pusha
pop
fs
lock
mov
lahf
adc
sarb
dec
lock
add
lahf
adc
jl
pop
fs
mov
pusha
mov
inc
nop
mov
ret
shlb
xchg
and
add
and
mov
ja
fs
mov
sahf
les
add
mov
insb
dec
jo
push
add
pushf
les
addl
mov
and
xchg
fcoms
xchg
cld
pop
popa
push
pop
sahf
xchg
lods
pop
popa
add
sahf
xchg
pop
pop
popa
mov
sahf
nop
or
cld
ret
test
mov
nop
popa
test
ficoms
adc
inc
popa
pop
push
push
insl
ret
test
push
jo
add
jb
call
jns
popa
mov
mov
jo
rcrb
mov
cli
loopne
cmp
jp
mov
push
nop
les
mov
sbb
mov
mov
mov
bound
mov
jo
lea
xchg
lods
sahf
les
pop
pop
mov
rolb
js
mov
mov
xchg
shlb
sub
in
nop
xchg
mov
add
xchg
mov
andl
adc
nop
enter
in
mov
mov
sub
rolb
lds
mov
ret
jo
lock
les
in
fists
rcrl
movsb
int
lods
test
sub
int3
sbb
repnz
dec
xchg
jmp
andl
mov
cmpsb
lea
cmpsb
out
mov
push
adc
outsb
rorl
cmpsl
fnstsw
ret
mov
sahf
movsb
repnz
int3
lds
ret
xlat
lret
ret
rclb
les
int
xchg
out
mov
adc
mov
mov
rol
pop
fadd
stos
shrl
testl
int3
shl
aad
mov
mov
mov
out
addr16
fisttps
push
test
test
mov
jl
out
gs
lcall
dec
call
cmp
stos
mov
dec
ja
sahf
repnz
repnz
pushf
and
lock
or
repz
sbb
repz
mov
mov
test
cmpb
int3
orb
out
mov
fs
fimull
mov
inc
add
ret
mov
decb
incl
add
mov
loopne
and
cmpb
js
jo
mov
out
mov
xor
jl
or
mov
cwtl
xchg
mov
mov
mov
jge
test
and
sub
mov
cmpsl
xchg
inc
je
addl
add
ret
xchg
mov
jge
sub
sbb
in
mov
mov
add
mov
xorl
js
incl
ret
jo
jbe
es
inc
add
lds
mov
lahf
xchg
js
jl
fsubl
mov
dec
pusha
adc
xchg
mov
jl
inc
mov
sahf
mov
add
adcl
cltd
xchg
add
sahf
addl
addl
sar
and
mov
mov
push
outsl
cltd
cmp
js
rolb
loopne
dec
pop
inc
mov
adc
call
sbb
cwtl
xchg
dec
add
add
clc
add
sbb
dec
mov
add
push
pop
or
adc
cld
mov
mov
add
xor
lret
xchg
test
fildl
in
mov
enter
andb
and
or
adc
in
push
add
jno
xchg
adcb
jmp
std
inc
lret
dec
xor
addl
jge
xchg
int
jle
test
movb
test
popl
xabort
clc
ret
nop
or
je
bound
dec
fsubl
xchg
pop
int3
shl
test
adcb
sub
xchg
sti
dec
loop
mov
and
xchg
test
int3
pop
in
adc
dec
pop
cmpl
xchg
pop
inc
pop
aad
mov
pop
dec
nop
and
sti
and
cltd
rorb
cmpl
shlb
ja
imul
enter
clc
jo
shlb
shlb
scas
mov
nop
scas
bound
shlb
sbb
mov
push
add
xor
xor
mov
loope
fwait
test
nop
xor
adc
or
ja
or
mov
call
sbb
mov
in
sbb
mov
enter
cmc
dec
adc
push
push
mov
xchg
leave
push
hlt
mov
xchg
push
in
lahf
xchg
and
mov
fadds
push
add
inc
add
xchg
mov
es
movl
and
and
and
and
or
les
jo
inc
mov
sbb
cmp
pop
test
clc
mov
mov
pop
mov
xchg
mov
fs
sbb
fdivrs
pop
mov
xchg
mov
and
fsubrs
xchg
ret
mov
pop
lcall
stos
fdivrs
leave
out
mov
ret
ret
xchg
cwtl
and
fcoms
das
mov
dec
jl
fcoms
sbb
pop
addr16
ljmp
fdiv
scas
xchg
popa
fisttps
jo
sbb
mov
repnz
push
xchg
mov
fcomp
mov
xchg
data16
fadds
imul
mov
lret
or
add
insb
cli
xor
xor
cmp
xchg
xchg
jg
xchg
sub
jg
jo
xor
test
es
pop
loop
mov
out
out
adc
xor
clc
xor
mov
enter
aaa
jo
enter
shr
lods
enter
jmp
enter
jmp
dec
dec
fwait
test
push
mov
dec
push
pop
push
popw
enter
xchg
frstor
movsb
inc
fcmovbe
sub
cmpl
xchg
mov
ds
mov
xchg
mov
or
mov
jmp
shrb
ucomiss
fcmovb
sahf
ja
mov
push
sub
jmp
sub
add
test
js
mov
push
into
cmpsb
push
xchg
jl
sar
movsb
mull
xchg
movsb
and
push
lock
mov
mov
add
adc
or
push
mov
leave
jae
mov
movsb
aaa
mov
xchg
push
jne
sbb
cmp
or
les
xchg
xchg
inc
push
xchg
xchg
nop
xor
dec
xchg
int
iret
fs
xchg
dec
movsb
pop
jg
xchg
pusha
xchg
je
pop
xor
add
mov
test
jmp
or
aad
mov
leave
xor
in
call
call
inc
lcall
jb
adc
shlb
or
cmpsl
mov
cltd
or
jle
xchg
xchg
ret
inc
add
cmc
dec
popa
scas
sbb
xchg
mov
scas
out
aam
mov
cltd
xchg
test
gs
rcl
fbld
xor
stc
jo
and
pop
andl
push
test
call
call
ret
cmp
sub
xor
or
sub
fs
cmp
adcl
mov
push
out
test
fnstcw
clc
data16
aam
test
jns
clc
inc
xchg
clc
ficoml
and
ficomps
push
sbbb
and
fwait
xchg
clc
aas
arpl
or
mov
shll
fldenv
out
test
cmp
adc
jnp
and
and
int
mov
push
mov
iret
test
and
add
das
bound
add
sub
pusha
and
cmpl
movsl
ud0
mov
lret
adcl
adcl
mov
test
js
fidivrs
in
sbb
push
push
cmp
rorl
pop
mov
lahf
cld
pcmpgtw
nop
punpckhdq
in
testl
mov
fs
mov
test
aas
or
xchg
movsb
lahf
jg
clc
lret
loop
push
loopne
xchg
jbe
jo
imul
xchg
pop
popa
ds
add
push
lds
push
adc
in
pushf
mov
addr16
nop
fcomps
lret
jle
nop
mov
rorl
mov
adc
pusha
pop
outsl
xor
pop
dec
nop
iret
je
out
rcll
jno
outsl
mov
xchg
lcall
lahf
cmp
add
add
xor
out
xchg
int
adcb
ficoms
xor
negb
loopne
mov
loopne
mov
andps
cmc
mov
xchg
pop
aas
and
push
shl
decl
xchg
jbe
popa
lcall
cmpsb
je
push
mov
out
and
cli
lahf
enter
movsb
shlb
lock
lock
repnz
lock
call
outsl
hlt
sar
adc
enter
das
xchg
and
repz
lds
aas
cmp
scas
pop
aaa
loopne
push
mov
xor
jg
ja
xchg
dec
fstpt
cwtl
hlt
test
cwtl
xchg
mov
cltd
mov
xor
mov
lahf
lahf
test
mov
mov
cmpsl
add
push
mov
push
fidivl
cmpsl
out
out
sub
mul
psadbw
test
adc
movsb
in
loopne
shlb
out
fnstenv
inc
mov
pop
cltd
mov
mov
insl
jo
frstor
shrl
in
mov
popf
or
ret
inc
mov
cwtl
adc
lcall
insl
cmpsb
mov
movups
out
orb
and
cwtl
ds
decl
lds
cwtl
nop
out
aaa
js
fbstp
mov
enter
inc
out
test
hlt
cwtl
sub
js
adc
imul
loope
stc
push
sub
hlt
adc
test
call
in
shld
int
lock
adc
sbb
adc
loop
sbb
push
sbb
addr16
ret
push
cwtl
adc
leave
mov
dec
inc
int3
outsb
and
and
jo
lahf
pop
sub
dec
pushf
mov
mov
push
xchg
cmpl
add
nop
add
add
or
lock
lea
mov
push
sbb
pushf
hlt
pushf
repnz
in
xchg
stos
xor
in
ret
mov
mov
add
add
add
fisttpl
cmpsb
mov
loopne
into
mov
ret
movsb
into
enter
adc
mov
sbb
les
ret
or
es
cmp
clc
call
movb
add
mov
xor
xchg
add
dec
jge
cmpsb
adc
push
rorl
out
adc
loop
xchg
add
pushf
scas
sub
movsl
fsub
jbe
inc
mov
xchg
mov
or
mov
mov
xchg
adc
mov
adc
and
cli
or
mov
into
push
mov
test
sar
and
ss
mov
int
mov
shl
out
or
lods
sbb
xchg
adc
lock
jecxz
fiadds
inc
mov
faddl
inc
xor
inc
or
ror
sbb
mov
mov
enter
inc
add
mov
ret
loopne
add
cs
pop
or
test
je
add
nop
jnp
or
test
adc
xchg
sbb
mov
lcall
pop
xor
test
lods
clc
test
nop
pushf
adc
mov
pushf
xor
test
test
sahf
test
or
xchg
jmp
mov
lock
add
out
test
lds
mov
orl
leave
fbld
iret
flds
xchg
push
fistpl
jmp
aam
pop
lods
in
mov
rorl
ret
ret
rol
xchg
fistl
addb
clc
adc
and
push
mov
mov
mov
cmpsb
movsb
loopne
aas
inc
outsb
adc
out
rorb
xchg
ret
test
sbb
lock
les
int3
and
and
lea
test
inc
cmpsb
mov
test
clc
and
or
test
sbbb
call
jl
nop
test
mov
mov
repnz
xchg
fwait
sbb
mov
mov
lods
test
jno
fistpl
lret
mov
xchg
iret
push
bound
sbb
adc
test
adc
lock
or
pop
loop
call
adc
jo
xorl
stos
mov
xor
cmpsb
mov
sbb
aad
and
sub
sbbl
inc
mov
shr
adc
in
into
mov
pushf
popf
xchg
sub
ret
ss
lock
pushf
outsb
fidivs
in
cmp
dec
push
xchg
push
in
mov
cmc
ror
dec
out
rol
cmp
pop
or
mov
iret
dec
imul
movsb
cld
test
aam
and
sub
sbb
pop
test
call
movl
xchg
filds
sbb
xchg
in
mov
push
movsb
in
popf
mov
cld
iret
pop
adc
push
inc
aam
cld
enter
mov
cwtl
leave
test
mov
mov
ret
jmp
out
out
int3
mov
or
mov
or
sbb
sbb
test
cmp
movsb
out
ret
fiadds
rorb
mov
loope
push
sbb
leave
adc
add
and
nop
fildl
xchg
movsb
push
jmp
fldenv
les
ja
jecxz
loopne
jns
hlt
fiadds
adc
push
xor
sbb
xchg
add
fs
clc
adc
mov
cmp
fdecstp
rorb
in
lods
sub
pusha
adc
dec
jne
push
lods
and
es
into
push
test
xor
enter
mov
push
movsb
mov
xchg
test
in
lret
test
inc
and
xorl
nop
or
out
stos
aam
lret
xchg
scas
enter
sti
dec
rcl
cmpsb
shrb
and
ret
push
mov
popf
nop
dec
dec
shl
ret
dec
mov
sbb
pushf
popa
xchg
mov
mov
and
inc
cmpsl
test
push
in
and
push
add
ret
and
lock
shld
pop
adc
add
push
add
test
iret
out
mov
daa
or
or
lock
mov
push
jp
int3
mov
call
inc
ret
orl
call
dec
mov
dec
nop
sbb
rorb
fld
call
mov
rcll
std
testb
xchg
movb
mov
pusha
movsb
mov
adc
pusha
xor
cltd
sub
enter
into
mov
mov
test
cmpsl
jns
push
push
xchg
fnstenv
adc
jo
fidivrl
cmpl
and
test
xor
mov
pusha
shrl
mov
or
pop
xor
cmpb
mov
mov
mov
stos
insb
mov
inc
sbb
mov
xor
ret
cmpl
jmp
xlat
les
orb
rcrb
sbb
in
pop
xor
rcll
loop
nop
mov
lret
dec
adc
sub
inc
repnz
es
in
dec
into
sub
rclb
pop
sbb
das
add
push
add
sub
dec
lahf
and
mov
sahf
jbe
inc
or
test
lcall
xor
lods
jp
and
int
les
xchg
test
out
loope
loopne
push
cmc
sti
lods
rolb
add
and
leave
in
aad
push
jae
in
in
mov
movl
fs
mov
popa
subb
enter
mov
mov
jle
add
in
or
mov
call
sbb
pop
shrb
sbb
lcall
jno
call
nop
sbb
in
xor
xchg
mov
xor
call
jb
out
rclb
int3
lret
rclb
call
inc
leave
jo
dec
xor
divb
add
dec
shrl
std
sub
push
insb
fsubrs
icebp
jno
xchg
aam
mov
lret
pop
adc
movsl
addl
into
adc
mov
hlt
dec
mov
xchg
icebp
sbb
xchg
out
aam
loop
iret
or
movsb
dec
add
mov
into
mov
jp
sbbl
adcb
cmpsb
out
xchg
test
add
dec
in
push
and
loop
mov
or
push
in
clc
xor
add
xor
adc
repz
and
sub
clc
hlt
aam
push
enter
inc
mov
fwait
test
fldenv
mov
mov
push
push
or
jg
fidivs
stos
mov
sbb
es
mov
mov
xchg
mov
and
pushf
add
aam
dec
push
xor
cli
sysenter
or
fs
leave
mov
in
sbb
data16
jge
cmp
cwtl
xchg
adc
stc
int3
sbb
movsb
sub
neg
xchg
into
js
ss
mov
mov
lcall
mov
jp
out
in
add
popa
movsb
ljmp
int3
or
xchg
loop
push
xchg
call
call
lods
mov
mov
pop
loop
dec
adc
cmp
and
movsl
test
jmp
pop
mov
jecxz
mov
rol
and
xor
adc
les
xchg
loopne
fdivrl
xor
jmp
scas
push
cmp
xchg
enter
int3
adc
in
pop
movsb
hlt
sti
mov
shlb
xchg
call
pushf
mov
test
mov
mov
adc
xlat
mov
xlat
fldt
mov
in
loopne
or
orb
jecxz
adc
add
xor
mov
lahf
add
cwtl
inc
nop
in
outsb
lahf
in
add
imul
xchg
or
call
fsubrl
xor
mov
int3
lcall
or
adc
sbb
pop
inc
adc
fistps
adc
clc
and
pop
icebp
sbb
and
shl
out
dec
lods
xchg
int3
or
mov
fisttpll
push
inc
xchg
fisttpl
enter
mov
rcll
repnz
nop
xchg
lahf
mov
sbb
rcll
call
jnp
call
cwtl
mov
mov
adc
test
lahf
cmc
inc
andb
mov
sbb
lahf
push
scas
mov
enter
movsb
push
nop
add
loope
stc
repnz
cmc
dec
mov
xchg
cmpsl
lcall
cs
pop
in
xor
je
pop
enter
push
int3
cmp
fsubl
push
cmpsl
shlb
iret
xchg
adc
sahf
add
inc
xchg
xchg
mov
xchg
mov
pop
adc
xchg
js
mov
add
fnstenv
xor
dec
ret
sbb
xchg
shrl
cwtl
enter
pop
cltd
fmul
cmp
js
cwtl
leave
xor
push
sub
add
rcr
clc
clc
cwtl
push
shll
lock
and
or
inc
out
push
dec
cmpb
rcl
add
out
and
out
or
mov
inc
mov
hlt
add
add
inc
movd
push
add
adc
mov
or
or
loop
inc
push
and
add
and
xlat
mov
les
icebp
shrl
into
pop
movsl
ud2
test
mov
sahf
or
mov
orb
inc
psadbw
int3
mov
adc
enter
cwtl
loopne
mov
and
mov
pop
in
mov
je
fs
adc
push
jnp
cwtl
xchg
test
add
mov
mov
adc
inc
call
mov
or
mov
mov
arpl
std
outsl
ds
int3
orl
jle
adc
xchg
sub
adcl
add
mov
xor
les
cmpb
adcb
lcall
mov
mov
jmp
lds
jne
xchg
nop
or
test
adc
dec
mov
mov
add
mov
xchg
leave
push
into
fbld
jae
cmp
mov
mov
das
mov
out
rclb
inc
clc
adc
dec
nop
in
in
push
pushf
out
adc
cld
daa
movsb
mov
mov
ret
xchg
mov
jl
or
popf
out
adc
push
cmp
test
fists
add
insl
or
or
scas
mov
pop
out
test
sub
adc
loope
mov
inc
mov
les
dec
or
int
push
sub
mov
stc
push
in
movsb
call
push
test
lahf
enter
movsb
andb
dec
adc
fdivrp
iret
test
cmc
jecxz
mov
roll
andl
icebp
lods
out
sbb
test
setbe
lahf
subb
cltd
scas
test
mov
sbb
jecxz
shrl
xor
andb
mov
int3
inc
test
les
leave
into
icebp
fsubs
mov
imul
imul
inc
movsb
mov
adc
and
xor
inc
scas
mov
mov
mov
or
je
or
and
pop
mov
fs
imul
insb
mov
mov
jae
cwtl
mov
fisttpl
dec
ret
mov
out
add
dec
dec
push
mov
insb
xor
push
pop
je
js
jl
jl
jl
mov
mov
imul
mov
adc
and
xor
jp
xorl
xor
inc
adc
daa
arpl
push
jae
jo
mov
fs
jo
je
js
jl
jl
jl
jl
jl
mov
mov
in
js
jl
jl
mov
mov
cwtl
mov
into
aad
or
push
iret
insl
add
mov
adc
push
or
jl
jl
mov
fidivl
test
mov
fs
push
mov
xorl
dec
push
fs
insb
pcmpeqb
inc
test
mov
lock
lods
testb
es
pop
cld
imul
mov
bound
mov
not
clc
lock
das
cld
cmp
popf
insl
push
ja
jl
mov
loopne
sti
dec
sub
dec
inc
dec
dec
dec
dec
dec
bound
dec
outsb
inc
cmpl
lods
push
cmp
dec
fdivrp
in
out
clc
incl
decb
sub
dec
jne
add
xchg
mov
push
or
dec
jl
mov
sub
inc
dec
push
sub
fidivrs
mov
push
mov
mov
adc
add
into
lret
push
in
dec
adc
mov
frstor
add
sub
push
jns
xor
sub
mov
mov
push
adc
mov
add
sub
xor
mov
sbb
ljmp
mov
dec
push
push
mov
out
add
into
and
push
shll
mov
mov
xor
pop
xchg
mov
ja
push
leave
xchg
mov
push
push
fwait
and
ja
push
jle
mov
push
stos
mov
pop
or
out
add
movsb
cmpsb
jp
jle
push
mov
fnstcw
mov
mov
sarb
add
adc
nop
lock
inc
or
dec
lret
pop
sbb
mov
mov
push
mov
lcall
mov
dec
mov
cmpsb
mov
into
fisttpl
add
popl
push
or
dec
sbb
pop
arpl
push
hlt
int3
imul
clc
inc
cli
push
into
jbe
dec
pop
jg
ljmp
jnp
scas
mov
js
lods
mov
sub
inc
cmc
jp
xchg
xor
aas
xchg
inc
cmpsl
push
ja
lds
xorl
mov
xorl
jl
sarl
scas
clc
popa
pushf
fwait
mov
pop
push
sub
sarb
jbe
les
jmp
jno
mov
mov
xchg
adc
int3
add
lret
and
dec
into
pop
imul
icebp
mov
xor
push
mov
push
out
dec
adc
scas
xor
loopew
mov
dec
ret
lea
insl
movsb
xchg
pop
push
cmpsl
rol
pop
loope
mov
push
shll
push
xchg
mov
inc
jo
je
js
jp
jle
push
imul
dec
sbb
lret
out
cmp
and
scas
mov
movsl
sbb
add
mov
adc
mov
fs
push
cmp
ret
mulb
jne
inc
imul
xchg
push
jg
lds
xchg
fcomps
popa
hlt
imul
cmp
es
fs
insb
shlb
je
js
jl
mov
mov
cli
xor
popf
add
pop
aam
pop
scas
inc
mov
inc
out
add
mulps
hlt
adc
push
arpl
push
jge
sahf
roll
inc
sub
push
inc
adc
rclw
dec
and
cmc
push
mov
xchg
fs
aam
cli
dec
xor
push
nop
nop
mov
fs
push
cltd
mov
mov
add
insl
mov
shl
push
add
adc
mov
adc
inc
or
arpl
data16
jo
mov
cmp
insb
sahf
mov
mov
jnp
xchg
mov
into
add
sbb
cmp
jns
mov
lds
daa
je
inc
mov
inc
out
pop
dec
daa
push
inc
jg
int
loop
cmc
push
add
popa
aaa
imul
jns
mov
not
clc
cli
sbb
popf
xor
sub
xor
cmpsl
mov
xchg
into
loop
add
and
mov
cwtl
hlt
mov
sbb
pop
mov
mov
xchg
mov
adc
and
jae
fwait
mov
arpl
jnp
mov
leave
add
popa
dec
movsb
push
scas
fs
clc
cli
add
sbb
and
sub
inc
pop
fldenv
mov
or
pop
stc
mov
testb
mov
mov
fcmovbe
mov
mov
xchg
mov
xor
aam
mov
cmp
mov
imul
pop
in
and
xor
cmc
int
cmp
movsl
inc
add
addr16
inc
xor
inc
and
js,pt
or
ljmp
notl
mov
mov
mov
push
int3
shlb
ja
sbb
mov
sbb
xchg
mov
inc
movsl
and
sbb
mov
cmp
jo
jne
jo
rolb
mov
adc
fcoms
push
mov
lods
mov
into
mov
xor
sbb
mov
enter
cmpsb
scas
fcompl
sbb
push
ja
pushf
mov
pop
xor
lea
lret
dec
cld
enter
repnz
cmp
push
clc
insl
cli
js
mov
jns
pop
mov
call
in
hlt
into
inc
sahf
aam
mov
jb
mov
lods
rcrb
xchg
adc
sbb
mov
xchg
pop
fwait
mov
cmpsl
mov
add
xor
inc
mov
sub
lret
jecxz
sbb
je
js
mov
mov
jae
jle
sbb
test
or
xor
or
adc
insl
mov
js
add
xsaves
mov
mov
clc
hlt
add
aaa
clc
inc
cli
push
fmuls
testb
cli
imul
xchg
mov
test
mov
push
daa
sub
jno
mov
fcomps
hlt
xor
pop
jl
movsb
mov
fbld
repnz
insb
sarb
mov
nop
mov
and
push
lret
sub
sub
or
out
add
popa
inc
mov
fs
insb
add
je
js
push
push
lahf
jne
adc
lret
pop
mov
cwtl
mov
push
hlt
mov
cli
sti
cld
or
inc
pop
fs
adc
test
leave
insb
inc
pop
mov
fdivp
out
int
or
sbb
sbb
sar
mov
jl
sbb
push
xlat
pop
push
mov
sbb
sbb
enter
orl
cmpl
pop
and
push
dec
ds
push
bound
push
mov
mov
mov
inc
pop
inc
dec
mov
mov
sbb
js
xorl
repz
shlb
jge
xchg
mov
adc
and
dec
scas
out
mov
aam
and
adc
popf
and
jb
adc
and
daa
push
push
and
mov
fsubp
ds
sbb
mov
fsubrl
enter
jg
inc
jno
mov
adc
and
xor
adc
mov
ret
jp
mov
mov
sub
adc
xchg
fs
push
into
lahf
jecxz
out
pop
add
loopne
mov
ljmp
mov
push
rclb
mov
cwtl
std
jl
adcl
mov
mov
adc
mov
mov
or
adc
fmuls
lods
mov
loop
sti
sarb
mov
cmpsl
pinsrw
adc
mov
mov
mov
mov
mov
fs
mov
pop
pop
popa
jp
xchg
mov
faddl
negb
gs
movsl
mov
sbb
andl
pop
test
cmpsl
rorl
psrlq
inc
loopne
pop
fmuls
mulb
cwtl
mov
cmpb
repnz
iret
je
clc
and
int3
ret
mov
into
loope
mov
lods
adc
cmp
inc
movsb
mov
xchg
mov
cs
sub
add
mov
test
in
dec
push
mov
pop
mov
mov
pop
or
push
pop
dec
dec
loopne
xchg
mov
iret
push
shr
and
mov
mov
aas
adc
mov
cwtl
int
lcall
mov
cmp
pop
inc
inc
jge
mov
adc
xchg
mov
cmp
push
jp
mov
pop
inc
xor
xchg
xchg
inc
lods
jo
add
pop
gs
mov
sub
lods
es
fstpt
mov
push
or
pop
inc
xchg
mov
fcoms
hlt
xor
fidivl
mov
adc
rcrb
xchg
mov
outsb
push
jns
mov
dec
insb
bound
addb
icebp
in
inc
add
mov
fwait
fs
push
sbb
xchg
mov
jb
lods
push
pop
insb
cs
inc
fs
dec
in
push
add
int
fsubs
push
insb
mov
and
ds
jnp
nop
push
repnz
ret
clc
loop
mov
sbb
mov
loop
or
lret
dec
mov
cld
in
pusha
adc
shl
div
add
sbb
push
mov
outsb
or
inc
dec
add
jae
jle
cmpsl
mov
negb
adc
fildl
and
and
mov
mov
in
add
nop
add
popf
cmpsl
mov
mov
mov
lods
hlt
sub
imul
mov
mov
xchg
call
imull
sbb
sub
inc
xor
repnz
hlt
or
jg
rolb
repnz
ficoms
aam
jo
xchg
adc
in
xor
cmp
push
fistps
js
inc
xchg
int
movl
jo
hlt
mov
nop
push
xchg
mov
mov
jl
jl
jl
push
mov
test
fmull
call
sbb
lahf
and
xchg
or
or
dec
adc
mov
mov
mov
xor
jle
mov
mov
ret
inc
jl
imul
inc
pop
dec
adc
dec
and
mov
es
adc
pushf
cmpb
mov
inc
pop
pop
pusha
cmpl
add
shlb
xor
into
jl
dec
dec
adc
into
icebp
or
shrb
shlb
mov
mov
add
pusha
lret
inc
jbe
push
mov
imul
push
and
mov
mul
pusha
mov
xchg
pop
mov
mov
es
fadd
mov
jmp
call
or
sub
pop
or
mov
cmpsl
daa
les
hlt
jl
inc
mov
mov
xchg
xor
jl
scas
mov
pop
mov
arpl
push
inc
jno
inc
mov
scas
mov
push
dec
and
mov
pusha
sti
mov
ret
pop
push
and
cmp
arpl
mov
add
js
int3
lods
jmp
jb
popa
xor
dec
and
pop
adc
mov
push
or
pop
dec
push
stos
mov
jo
aam
mov
cmpsl
pop
xchg
shlb
pusha
nop
mov
mov
mov
mov
pop
je
jl
inc
movsb
mov
cmpsl
cmp
pop
push
insl
jno
mov
or
adc
imul
int3
in
int
daa
scas
fs
cli
insb
daa
jo
je
bound
shlb
add
mov
insb
jl
test
test
hlt
rolb
mov
xor
xchg
jecxz
or
ds
push
push
mov
into
adc
mov
mov
mov
adc
adc
and
pop
fdivrl
popf
arpl
xchg
movsl
pushf
pusha
outsb
jo
je
xor
lahf
adc
dec
mov
push
hlt
ljmp
fimull
shr
and
call
jl
inc
int3
push
mov
mov
push
adc
mov
pop
xchg
addr16
popa
xchg
mov
test
test
rcrl
je
mov
adc
lret
scas
mov
inc
add
js
pushf
mov
shll
and
push
addps
dec
pusha
popa
fisubrl
insb
jns
jns
jns
or
imul
mov
adc
or
push
jo
sbb
jl
jl
jl
ds
xor
arpl
mov
fs
push
xchg
push
pop
popf
notl
cmpsl
push
arpl
mov
xchg
mov
loop
imul
lods
ss
ret
into
inc
dec
pop
loop
shll
sub
imulb
mov
sub
inc
sbb
addr16
aad
mov
inc
sub
sarb
adc
adc
mov
add
mov
fcompl
pushf
or
dec
mov
xor
sbb
mov
dec
mov
enter
sub
mov
sti
xchg
or
fs
js
cmp
lahf
xor
pop
dec
adc
fcomps
pop
adc
sbb
lret
jge
push
mov
clc
call
data16
pop
lods
mov
cmpsl
xchg
fidivs
jae
jae
jae
jb
dec
inc
or
jns
jns
jns
mov
movsb
and
cmp
adc
sarb
gs
xchg
adcb
in
xor
mov
sub
ljmp
or
mov
or
or
dec
lahf
adc
dec
mov
mov
roll
out
or
adc
xor
cmp
inc
jl
or
pop
test
mov
jle
mov
mov
popf
xchg
push
cltd
sahf
lahf
adc
sbb
into
dec
rorl
dec
loopne
jmp
dec
stc
dec
jmp
vmwrite
mov
xor
cmp
lcall
xchg
cwtl
or
jnp
mov
cld
mov
stos
mov
cmp
mov
fiadds
fsubr
jne
xor
fmul
or
push
inc
pop
loope
daa
jns
jns
stos
mov
cmp
or
mov
push
stos
pop
pop
dec
dec
insb
dec
jno
jbe
jnp
mov
stos
out
sahf
iret
movsb
pop
dec
scas
dec
mov
add
lds
jns
jns
jns
jns
jge
jns
jns
jns
jns
jns
jns
in
out
movsl
adc
sub
jp
scas
cmp
dec
mov
pop
pop
push
imul
dec
cmp
push
shll
dec
pop
mov
pushf
scas
mov
sbb
cmp
leave
ds
and
xchg
mov
xchg
push
mov
dec
mov
mov
stc
rclb
hlt
jns
addl
fs
inc
insb
pusha
jo
je
mov
mov
jmp
xor
les
cmp
test
mov
inc
in
sbb
or
mulb
loopne
in
xchg
mov
int3
pslld
fdivrs
lret
in
mov
neg
clc
add
sub
cmp
test
mov
je
pop
xchg
addr16
addr16
jge
nop
mov
dec
popa
mov
test
mov
mov
bound
mov
fimuls
call
cmp
repnz
daa
jne
sbb
jg
xchg
mov
adc
and
xor
arpl
jne
mov
adc
sub
push
mov
mov
dec
sbb
push
or
mov
std
cmpsl
add
or
push
mov
mov
inc
lock
popa
loopne
in
call
scas
mov
clc
popa
test
jns
lods
mov
or
adc
sbb
stos
sub
dec
xor
dec
cmp
cmpsl
push
fs
adc
push
cld
fs
pop
inc
lret
push
push
outsb
xchg
js
xor
cltd
sbb
nop
sahf
xchg
pop
cwtl
movsl
cltd
xor
mov
adc
mov
adc
cld
int
andb
inc
or
inc
add
mov
cld
jns
sbb
scas
fwait
and
mov
add
mov
mov
dec
xor
pop
rorl
cmp
test
popa
iret
mov
sub
dec
inc
mov
movsb
mov
mov
repnz
cld
popa
xor
jns
jns
scas
mov
clc
lcall
inc
push
in
cmp
pushf
adc
push
jno
cmc
mov
cmp
cwtl
mov
add
arpl
leave
rorb
adc
mov
mov
imul
inc
pushf
xlat
sbb
lcall
xchg
add
je
or
and
and
movsl
fbld
punpckhbw
mov
push
mov
outsl
inc
int
sbb
test
lret
inc
cmp
and
mov
inc
rcll
xchg
mov
cwtl
mov
xor
popa
push
jp
sub
pushf
popf
fstl
in
scas
mov
xchg
fstpl
adc
xchg
pop
mov
add
inc
xchg
push
aam
movsb
mov
push
jl
int3
shl
mov
mov
xchg
mov
jno
jns
jns
mov
mov
jle
sbb
or
loopne
js
jl
ss
and
fsubrs
mov
cmpsl
pinsrw
insb
sbb
movsl
adc
repnz
mov
mov
nop
lcall
or
jns
jns
jns
jns
jecxz
mov
cmpsl
add
mov
mov
int3
lods
rolb
jl
jl
xor
push
clc
jl
jl
jl
jl
pop
test
adc
bound
jl
pop
test
js
lods
sub
push
cmpsb
call
fmul
mov
mov
roll
repz
fs
testb
and
mov
xor
hlt
cli
push
xor
or
mov
ret
repnz
push
nop
mov
xor
sarb
cld
test
sbb
push
jno
jns
in
lock
mov
mov
cmc
mov
mov
lea
mov
mov
popa
inc
adc
sub
sub
dec
popa
pop
imul
push
mov
hlt
lret
lret
cmpsb
cmp
je
stc
popa
adc
pop
enter
addr16
add
xor
jns
or
pop
aam
push
test
mov
xchg
je
js
sbb
lahf
movsb
pop
test
lods
sub
mov
mov
jb
jo
fcmove
popl
pushf
loopne
in
call
hlt
jl
jl
jl
jl
xor
mov
sahf
les
enter
jl
pop
add
fdivl
fsubp
ds
in
pusha
insb
hlt
jl
xor
fs
push
xor
jle
mov
mov
mov
xlat
shlb
lret
decb
add
and
mov
icebp
insb
sub
mov
clc
cli
fiadds
cmp
mov
repz
ds
mov
push
pop
and
scas
xchg
subb
jnp
mov
mov
into
xor
stos
jp
mov
shrb
aad
mov
pop
xchg
push
into
add
or
test
stos
fnstenv
and
into
sbb
mov
pop
clc
and
out
mov
push
lods
xchg
enter
mov
rorb
pop
les
mov
inc
je
add
xchg
test
js
lcall
mov
or
outsl
mov
pop
mov
mov
mov
icebp
add
int
stos
hlt
or
add
adc
push
mov
sub
shlb
sbb
popf
xor
xor
mov
popf
push
xchg
jno
xor
xor
mov
push
in
shrb
mov
repnz
xchg
inc
xor
push
shlb
jbe
xor
xor
sbb
push
sahf
and
and
sub
sub
xor
xor
cmp
out
mov
mov
add
sub
mov
or
or
les
and
and
mov
mov
pushf
lret
cmpsl
push
outsb
aam
pop
and
mov
pop
push
movsl
repz
lods
adc
xchg
adc
decb
imul
mov
iret
mov
adc
xor
mov
mov
sub
cld
pop
sbb
add
addb
clc
xor
je
ds
dec
push
imul
xchg
add
int3
fidivrs
negl
xchg
rolb
push
xchg
mov
push
repnz
stc
cmp
scas
mov
loope
sbb
sub
popf
inc
and
mov
iret
add
clc
adc
xor
push
mov
cltd
mov
movsb
mov
xchg
mov
mov
lods
mov
lods
and
dec
lods
push
test
cmp
movsl
xor
movsb
xchg
push
mov
push
fisttps
aaa
dec
dec
mov
ds
cwtl
mov
mov
scas
mov
test
add
dec
lcall
push
mov
nop
mov
push
outsb
xchg
sbb
sahf
jle
push
fsubl
xchg
mov
mov
movsl
lret
test
sub
cmpsl
adc
inc
mov
and
sub
aaa
cmpsl
imul
mov
push
sarl
cwtl
imul
push
dec
mov
mov
loope
enter
jns
push
in
mov
into
les
lret
dec
ljmp
inc
inc
popa
xor
jmp
call
cwtl
adc
push
movsb
sbb
pop
and
fadd
push
sarl
stos
sahf
popa
test
mov
cli
mov
mov
adc
mov
mov
mov
loope
cmp
inc
inc
fcoml
xchg
icebp
and
fs
adc
lods
dec
in
loope
clc
dec
movsl
aaa
shrl
out
orl
call
div
enter
add
lock
inc
xchg
and
xchg
ret
into
cmpb
mov
mov
leave
dec
fimuls
scas
mov
xchg
or
clc
into
ficoml
adc
or
nop
mov
imulb
mov
xchg
into
mov
dec
aad
xor
insb
fdivrp
push
dec
daa
jg
mov
scas
sbb
fcompl
xchg
and
mov
into
test
or
loope
or
mov
cmpsl
cmp
rcr
mov
push
push
test
fs
mov
push
pushf
xchg
andl
insb
mov
pop
sub
js
jl
addb
cli
sub
adc
cmpsl
ljmp
cmpsb
out
mov
mov
sub
das
jo
movsl
sbb
es
lahf
mov
xor
mov
cltd
pusha
xor
xchg
imul
fmulp
inc
rclb
pop
aam
daa
ficompl
pop
movsb
and
adc
dec
jae
jae
mov
mov
loope
lcall
popa
mov
movsb
repz
push
sbb
nop
ror
call
into
mov
loopne
and
pop
addl
mov
popa
lret
xchg
daa
mov
mov
cmpsl
xchg
in
jo
js
cmpsb
mov
mov
sbb
data16
pop
mov
movsb
adc
xchg
and
rcrb
adc
divb
rcrb
loopne
mov
fsubl
in
add
xor
cwtl
cmp
dec
inc
dec
ror
fnsave
pop
mov
test
loopne
in
adc
cli
mov
lods
fcmovbe
mov
rolb
add
pop
inc
pusha
pop
sub
push
leave
push
es
mov
movsl
fwait
popa
lock
push
imul
pop
fmul
in
lods
mov
sbb
filds
jo
rolb
mov
cmp
js
lahf
leave
mov
scas
gs
mov
xchg
mov
sub
add
mov
dec
rol
mov
rcrl
daa
imul
push
pop
jo
lret
loopne
sbb
and
and
mov
int3
hlt
test
mov
rcll
imul
ficomps
pop
out
je
lock
bound
insb
data16
enter
jmp
hlt
mov
add
and
fimuls
pop
fisubs
jns
and
pop
mov
adc
insb
lahf
ret
leave
inc
pop
lock
inc
inc
mov
mov
mov
sub
mov
dec
jbe
xchg
roll
lock
popa
xchg
or
lret
mov
dec
jns
movsb
mov
icebp
and
dec
xchg
dec
inc
or
adc
les
sbb
cmp
repnz
push
lret
xchg
push
sbb
lret
pushf
lock
mov
xor
sbb
cmp
les
cmpsb
adc
pop
pop
mov
xor
jmp
inc
hlt
or
lds
xor
sub
repnz
jle
dec
xchg
add
cltd
pusha
lret
stos
mov
enter
lret
xchg
xchg
xchg
and
push
mov
and
push
push
jo
test
inc
int3
push
pushf
mov
mov
mov
in
fs
adc
enter
xchg
sbb
jecxz
ja
jae
dec
leave
sarb
xor
cmp
inc
pop
pop
lahf
dec
sbb
mov
enter
pop
mov
mov
iret
cmp
adc
adc
mov
test
fdivs
add
and
cmp
mov
sbb
push
xchg
lret
add
sbb
push
add
xor
xor
fisubl
ljmp
enter
push
jne
xchg
mov
mov
enter
lods
mov
insb
enter
push
mov
popf
fidivrl
clc
fidivrl
subl
popf
adc
dec
bound
mov
dec
lret
xchg
xchg
adc
imul
loopne
dec
mov
pop
cmp
in
and
inc
mov
jge
repz
addb
mov
inc
inc
mov
xorl
pop
lcall
xchg
mov
test
and
aad
add
scas
inc
scas
mov
sbbb
cli
push
subb
mov
fs
adc
xchg
and
push
xchg
jbe
mov
add
pop
cmp
scas
pusha
rorl
add
pop
call
pop
pop
pusha
xchg
sub
push
ret
push
xor
xor
mov
in
pusha
subb
cmp
ficomps
xchg
int3
ret
lret
and
subb
push
mov
cmp
xor
mov
les
mov
mov
fs
cmp
int
inc
mov
fadd
es
imul
test
jl
movsl
mov
add
push
pop
test
push
je
adc
filds
mov
pop
shll
gs
ffreep
add
inc
faddl
fsubr
fimull
int3
decb
lods
test
mov
xor
xor
je
js
aas
adc
in
lods
xor
xchg
xchg
pusha
ret
test
addr16
loopne
sbb
fdivrp
inc
out
push
mov
add
cmp
sahf
pop
mov
loope
int
mov
in
and
cmpl
sbb
and
push
mov
sub
mov
call
insb
test
aad
sahf
pop
out
cmpl
jl
sahf
sbb
jae
xor
mov
pop
xchg
and
adc
lcall
dec
out
add
xor
pop
insb
sbb
lahf
push
pop
addr16
mov
mov
cld
sub
aaa
mov
jnp
mov
movsl
cld
add
xorb
cmpb
cmp
cli
sbb
inc
int3
mov
push
clc
cld
hlt
mov
xchg
xchg
aaa
mov
push
mov
add
mov
ret
dec
fmul
jns
adc
cmp
xchg
push
dec
jnp
mov
or
dec
jns
js
mov
mov
mov
loopne
add
dec
jb
jo
repnz
into
jb
jb
shlb
push
add
out
fsubl
mov
cmpsb
fcmovnbe
add
in
ljmp
xor
adc
lds
scas
xchg
mov
mov
push
cmp
sub
enter
mov
mov
mov
pop
mov
je
stos
mov
repnz
out
aas
add
aaa
adc
dec
fs
push
xchg
add
sbb
hlt
and
mov
inc
push
cld
outsl
jnp
fwait
mov
dec
js
clc
leave
iret
flds
inc
nop
xchg
mov
les
mov
das
test
lcall
adc
jae
sarb
test
xor
gs
sub
cmpb
pop
nop
xchg
rorb
test
adc
mov
push
adc
inc
adc
pop
pushf
mov
adc
jo
icebp
jo
je
js
jl
jl
jl
cmp
leave
add
stc
push
adc
push
lods
xor
jno
mov
inc
xchg
out
push
sub
xor
aam
pop
inc
push
test
xor
fcompl
or
sbb
into
dec
inc
jo
ret
xor
frndint
cmp
jne
fwait
imul
mov
xor
or
lock
jp
andl
xchg
inc
and
leave
shr
scas
adc
or
and
mov
aas
pop
xor
out
or
mov
hlt
mov
out
adc
xor
xor
xor
insl
jp
mov
mov
enter
loop
call
js
fprem
fs
or
mov
int3
and
sub
add
pop
test
inc
pusha
push
pop
hlt
push
addr16
push
mov
mov
fdiv
loope
mov
or
or
adc
inc
or
xchg
mov
stos
test
idivl
add
push
fidivs
and
push
lret
stos
or
iret
addl
xchg
mov
adc
mov
mov
lock
cld
push
lods
add
insb
test
dec
adc
les
and
adc
pop
xor
jle
loop
xchg
fildll
inc
popa
leave
jns
or
movb
sub
test
aas
or
frstor
add
les
adc
rolb
test
mov
mov
xor
clc
ror
pop
mov
loope
sub
test
movsl
ret
hlt
xor
push
dec
jge
lea
loop
lds
sti
scas
add
push
jo
fbstp
xchg
mov
adc
jo
mov
clc
mov
and
sub
shll
mov
and
add
mov
cmpsl
clc
cwtl
add
mov
je
lock
jno
add
aam
in
inc
bound
inc
fidivrs
pushf
mov
dec
arpl
or
and
loopne
xor
cmp
clc
fldenv
mov
sbb
pop
mov
cmpsb
dec
xor
cli
pop
cld
pop
xor
ficoms
xchg
cli
movsb
daa
je
mov
and
xor
subl
push
inc
mov
xchg
lcall
lods
xor
fistl
pop
ret
mov
sahf
xlat
and
pusha
pop
xor
cmp
fs
js
movsl
push
inc
mov
xchg
repz
test
xchg
pop
add
mov
dec
lret
movsb
add
inc
jb
push
inc
xchg
and
push
add
scas
mov
add
loopne
mov
scas
dec
inc
mov
cmpsb
clc
push
in
cwtl
ret
loop
add
in
push
adc
jo
leave
pop
mov
cmp
mov
push
notb
popf
cmp
les
lret
popf
mov
movsl
js
push
jno
push
icebp
rolb
mov
clc
shlb
into
xor
pop
nop
add
add
std
test
and
pop
xorb
mov
nop
xchg
sbb
mov
push
and
jge
lock
inc
mov
aam
fmuls
nop
dec
loopne
outsb
xchg
mov
xchg
cmpl
mov
xor
std
push
mov
stc
mov
sbb
mov
push
leave
or
test
mov
mov
or
add
insb
xchg
lcall
xor
push
insl
and
xor
cmpsb
out
or
pop
xor
cmp
mov
jp
mov
gs
pusha
mov
and
mov
fbld
lods
xor
cwtl
lods
mov
popf
pop
pop
mov
out
loop
or
dec
cmp
adc
and
mov
pop
js
scas
je
es
mov
test
js
mov
inc
cmpsb
dec
clc
pop
pop
push
lret
js
jo
into
cmpl
mov
adc
cmp
ds
push
decb
popa
fsub
popa
add
or
aam
and
mov
jle
jle
sarb
inc
cmp
jo
lret
insb
pusha
cli
or
sbb
push
std
lds
xor
je
jns
lock
sbb
cmp
mov
cmp
sub
mov
insb
stc
adc
pop
adc
push
out
add
inc
out
mov
jno
bound
test
cld
xor
pop
test
pushf
mov
pusha
movsb
mov
ret
mov
ljmp
add
adc
sti
in
dec
xor
pop
cld
enter
cs
xlat
add
imul
cld
pop
or
mov
lcall
inc
push
add
fadd
adc
and
ja
adc
cmp
mov
call
and
xchg
movsl
out
jb
fidivrl
into
xchg
in
sub
lods
adc
data16
and
cmp
lahf
inc
xchg
inc
pusha
adc
xchg
or
addr16
enter
adc
test
add
xlat
sub
fdivrs
shll
hlt
jl
sbb
xchg
cmpsb
dec
xor
add
cli
mov
movsb
pusha
push
dec
fisubl
out
add
scas
aas
pusha
jle
mov
fildll
sahf
shlb
mov
lds
sub
cmp
call
xor
stos
add
mov
adc
or
xchg
and
ds
and
dec
and
sbb
cmp
xor
mov
aam
sub
mov
repnz
mov
inc
popf
push
in
flds
push
sbb
mov
xchg
repnz
sbb
ds
xor
inc
popl
pop
dec
cmovl
jbe
iret
jbe
xchg
cli
je
aas
or
int3
rolb
xchg
mov
mov
out
push
jp
adc
ds
inc
mov
mov
lret
pop
sub
and
fcoms
dec
mov
pusha
mov
add
push
and
push
jo
pop
pop
loope
pusha
jns
mov
int3
rolb
scas
push
int3
lock
addl
scas
hlt
push
cld
xchg
cld
add
in
xchg
pop
pusha
cmp
pop
add
add
imul
mov
push
push
xchg
in
add
leave
push
test
inc
adc
pop
leave
and
mov
and
in
iret
cs
punpcklbw
mov
jno
out
mov
pusha
cmp
mov
inc
lret
push
push
pop
ret
mov
popa
outsb
and
ficoml
push
and
loop
pop
inc
stos
dec
mov
mov
testb
mov
out
cmpsb
hlt
sub
lret
cs
push
daa
pusha
jno
adc
sub
dec
scas
test
inc
inc
shll
imul
add
jne
lcall
cmc
add
push
fiadds
push
jbe
xchg
xchg
sub
movsl
int
loop
sub
jb
cmc
test
pusha
push
pop
cmp
xchg
rcr
hlt
or
mov
sbb
xchg
and
inc
jo
sahf
or
inc
dec
ret
add
cli
clc
ret
int3
mov
or
popa
fadds
push
jns
stos
dec
jl
adc
add
scas
scas
mov
dec
jns
jns
cld
mulb
ljmp
inc
rcll
fsubrl
push
or
jl
sbb
mov
xor
jo
cld
cmp
inc
add
jb
incl
jmp
sbb
xchg
out
xor
mov
rorl
pop
and
inc
lods
addl
xchg
mov
pop
mov
fmul
or
jns
jns
jns
stos
loop
dec
sub
bound
fwait
adc
jl
cmpsb
adc
add
insl
jb
push
xchg
lahf
and
leave
jo
cmp
sub
movsb
popa
into
jg
push
lret
push
or
test
cmp
mov
pop
mov
add
mov
xchg
aas
add
fdivrl
cmc
cmpsl
add
add
arpl
jb
jl
xchg
mov
shrl
push
movsl
xor
mov
imul
dec
movsl
sbb
movsb
into
cmp
dec
push
adc
in
pop
sub
in
dec
push
push
mov
sbb
or
in
dec
stos
push
mov
inc
out
cmc
jl
mov
shlb
mov
mov
mov
push
jb
lods
mov
jl
add
push
sub
jmp
xchg
dec
mov
mov
sub
inc
iret
sub
cli
decb
loope
pusha
jns
ljmp
testb
js
iret
xchg
add
mov
fistps
stos
mov
fildll
mov
ret
adc
lds
sub
mov
mov
push
push
int
scas
movsl
inc
push
repnz
push
in
js
lahf
and
pop
ret
test
jbe
fisubs
pusha
sbb
ss
mov
and
test
pop
iret
xchg
adc
dec
es
jbe
xchg
cmpsb
mov
mov
incb
wrmsr
sbb
inc
xor
push
mov
jo
js
jle
ret
push
mov
jnp
subl
int3
mov
jb
xlat
xchg
add
cmp
mov
sub
aas
sub
mov
popf
sahf
push
cmpsb
xchg
scas
jo
ds
fs
ja
shlb
sbb
mov
fiaddl
jo
jge
test
loope
xchg
push
fisubs
sub
out
data16
add
add
add
loope
insl
push
inc
jo
jns
jge
test
push
push
and
insb
inc
adc
dec
fistpl
femms
pop
push
clc
add
adc
xchg
mov
mov
push
loope
sub
aam
iret
xchg
dec
dec
jl
dec
mov
outsb
pusha
popa
mov
insb
std
mov
inc
mov
dec
inc
enter
adc
mov
movsb
rorb
adcl
mov
xchg
add
aad
xchg
fdiv
fcmove
pusha
loop
sub
stos
mov
and
sahf
lret
lea
clc
lret
pop
or
sub
gs
adc
pop
jb
jbe
xchg
je
sub
popf
popf
pop
cmpsb
inc
mov
fdivrp
add
cmc
cmp
movsl
adc
dec
inc
bound
fmull
shlb
mov
xchg
test
mov
mov
int3
push
sub
fildl
cmpsl
outsb
push
adc
pusha
push
cmp
xchg
popa
dec
imul
ror
mov
daa
mov
mov
push
out
mov
add
repnz
mov
arpl
imul
mov
pushf
xor
jns
in
les
xchg
mov
fistpl
and
xchg
pop
mov
xchg
cmpsb
cld
and
push
cld
sahf
xor
cmp
orb
pop
xchg
lods
push
and
mov
pop
inc
fistl
pop
jge
enter
sub
mov
push
cld
insb
xchg
sti
jo
inc
sbb
movsl
scas
add
xchg
xchg
mov
or
popa
lcall
xlat
dec
out
inc
fmull
out
add
push
jb
and
mov
adc
mov
roll
push
pop
inc
cli
dec
aam
push
je
ret
mov
push
insb
popf
aas
test
pop
sbb
add
cld
mov
adc
leave
add
cmp
int
sbb
and
rclb
rcrb
je
js
adc
push
enter
mov
sub
mov
mov
sub
add
clc
cmpsb
jle
pop
pop
and
jbe
test
or
add
and
outsl
cmp
mov
mov
dec
stc
dec
dec
dec
push
dec
pop
pop
mov
lret
push
ret
jbe
rol
repnz
push
mov
mov
ds
fs
push
inc
clc
imul
xor
lods
loopne
ficompl
in
and
scas
fildll
adc
iret
mov
and
adc
or
and
push
jl
cmp
mov
inc
xor
mov
add
pshufw
ss
and
inc
pusha
push
inc
mov
sub
faddl
dec
push
fiaddl
and
push
push
sub
cmpsl
mov
adc
cmc
or
mov
jmp
lods
es
data16
mov
popa
pop
inc
jmp
inc
push
mov
sbb
mov
jmp
mov
lcall
cmp
mov
xchg
push
and
jo
cmpsl
mov
scas
in
xor
jle
mov
and
ss
mov
cmpsb
jg
cmp
in
cmp
lahf
pop
push
push
xchg
bound
incl
xor
es
pop
je
and
dec
clc
imul
add
add
mov
clc
push
add
mov
cmp
xchg
push
jo
push
jl
cmp
xchg
int3
mov
scas
mov
pop
int
fsubrl
and
roll
cmp
shl
outsb
lahf
or
jb
rorb
loop
repnz
inc
fmull
scas
idivb
test
loopne
idiv
shlb
in
add
je
popf
ret
xchg
mov
add
out
lock
mov
movsb
testb
cli
add
and
scas
mov
jb
push
add
and
pop
mov
aaa
pop
cwtl
les
inc
jne
and
cmc
test
pop
fiaddl
sub
filds
add
stos
test
adc
ret
adc
test
push
jb
mov
loope
adc
xorb
add
lods
jp
mov
pop
pop
push
pop
gs
sub
iret
inc
add
jbe
jge
lods
mov
adc
popf
adc
and
aas
add
push
jle
xchg
je
mov
mov
adc
add
rcrb
clc
repnz
repz
xchg
stos
test
fstpt
loopne
pop
xor
mov
sbb
out
add
dec
clc
adc
xor
sbb
dec
jo
lcall
lret
sub
sarb
pop
imul
movsl
arpl
xchg
pop
mov
mov
dec
mov
push
pop
add
pop
cmp
cmpsl
test
insb
push
fdivs
fnstsw
cmp
mov
mov
inc
push
lods
les
add
and
adc
cmp
imul
sbb
pusha
mul
clc
in
cli
dec
int
js
mov
adcb
mov
pop
aam
dec
jl
mov
mov
test
fdivrs
add
and
bound
fsubrs
std
xor
sbbl
stos
mov
fisubrs
jbe
xchg
dec
cmp
mov
repz
les
jle
js
inc
rcrb
in
rorb
xchg
lods
xchg
cmp
mov
or
xchg
test
shlb
adc
rcr
xchg
mov
popa
js
scas
add
dec
jl
xchg
xchg
js
mov
lret
xchg
sub
cmpsl
mov
sbb
scas
mov
ss
or
ret
and
dec
ds
push
inc
es
shlb
cmp
xchg
pusha
loopne
mov
ljmp
mov
and
lcall
loope
inc
call
inc
sahf
mov
popa
ret
movsb
aam
adc
mov
cmpsb
mov
fiaddl
in
push
mov
xor
sbb
xchg
rorb
cmpsl
cwtl
popa
mov
xchg
rcr
xchg
cmpl
mov
xchg
test
lods
pusha
mov
sarb
mov
rolb
fdivrs
jmp
mul
shl
mov
pop
cld
scas
mov
clc
movsl
adc
movsb
sbb
ss
sub
xor
imul
repnz
into
pop
and
push
xor
lcall
mov
add
bound
les
mov
movsb
xor
jge
mov
cli
ss
mov
inc
leave
xchg
hlt
test
pop
daa
rorl
mov
push
clc
inc
jns
mov
int3
dec
sbb
inc
add
mov
mov
cmp
fcmovu
cmp
xchg
adc
fs
mov
aad
cmc
adc
xchg
orb
sti
jo
and
shrl
ss
scas
mov
cld
lret
lods
adc
clc
cli
pop
aam
mov
outsb
xchg
mov
movsb
loope
push
aam
and
ljmp
les
iret
mull
or
pop
mov
pusha
imul
repnz
sbb
js
mov
mov
mov
ljmp
ja
add
lods
jne
mov
xchg
mov
call
xchg
xor
mov
cmpsl
sahf
add
dec
js
movsb
shll
dec
cld
sub
dec
scas
scas
test
push
pop
push
inc
adc
jp
loope
sti
add
pushf
push
mov
xor
push
mov
and
inc
popa
rorb
lea
leave
mov
adc
mov
mov
addl
add
inc
inc
dec
in
jle
hlt
xchg
rcll
dec
xor
sbb
jo
insb
jl
adc
xor
xor
sti
adc
xor
pop
fisubs
mov
pop
popa
sbb
jo
stos
adc
lret
loop
push
adc
sub
data16
fiadds
xchg
adc
lock
iret
rclb
pop
adc
fdivl
adc
lahf
jp
mov
movsb
scas
push
xchg
jmp
mov
loopne
call
and
mov
pop
loop
divb
enter
lahf
jb
jle
sbb
push
xchg
test
int
jae
push
mov
lahf
fs
into
mov
in
xor
push
pusha
jno
lods
xchg
fs
cmp
push
push
and
js
cmp
ds
sbb
int
push
lock
iret
je
add
pop
push
popf
jmp
sub
and
mov
in
aas
popa
dec
adc
ds
jl
xor
aam
aam
daa
fs
and
fsubrl
cld
dec
mov
adc
jo
idivb
rcl
test
scas
push
test
push
sub
cli
jo
sbb
shrl
rclb
aas
xchg
push
cmpsl
inc
add
mov
dec
mov
push
mov
fmulp
icebp
xchg
scas
mov
movsb
je
aaa
xchg
popa
imul
movsl
xor
shll
jbe
lock
push
cmp
ss
inc
and
sbb
push
fmulp
add
push
xchg
das
iret
cs
mov
dec
scas
hlt
pop
test
cs
and
inc
jo
cmp
subb
push
xchg
dec
test
iret
les
enter
lahf
repz
add
inc
pop
xor
push
pop
test
int3
into
cmpsb
add
push
inc
shl
inc
es
jb
fmul
and
xor
popa
dec
jnp
popf
mov
cld
push
test
lods
dec
rol
sti
mov
or
cmpsl
and
and
jo
pop
jl
mov
inc
rorb
mov
mov
les
mov
mov
mov
xor
lods
aas
fs
fcomip
mov
mov
jo
and
test
jns
cltd
inc
es
jo
popa
mov
cmp
jns
cltd
popa
cmp
mov
test
sub
je
ret
cmpsl
pusha
fadd
fisubrl
shlb
or
rol
fisttpl
push
lret
cmp
sub
pop
or
sbbb
test
shrb
or
push
out
and
orb
aad
dec
lock
jbe
or
mov
dec
xor
pushf
jmp
or
cld
sub
or
rclb
add
clc
push
fnsave
cld
pop
inc
xchg
or
or
scas
dec
mov
push
xor
push
adc
sub
sarb
leave
pop
jo
shll
xchg
imul
cmp
mov
pusha
cmp
mov
in
lret
fnstcw
movsl
sbb
mov
nop
mov
sbb
mov
sbb
mov
sbb
cmpsb
jnp
cwtl
mov
and
xor
mov
shll
out
xor
and
push
enter
popf
jmp
in
dec
xchg
es
cs
fwait
arpl
jle
push
sub
adc
fs
xchg
dec
jno
mov
and
into
ficompl
xor
xor
push
gs
mov
and
cmp
lock
stos
and
ficompl
or
xor
xchg
add
popa
inc
xchg
mov
push
xchg
in
mov
jl
jo
sbbb
mov
adc
cmp
mov
jo
mov
and
push
cmpsb
mov
cmc
outsb
sub
fs
adc
aad
or
mov
fmul
xchg
test
rcr
pop
pop
lret
fidivl
jo
fbld
lcall
jmp
mov
cmp
xchg
popa
inc
mov
clc
xchg
lods
add
push
aaa
leave
ret
jo
jns
divb
enter
add
sbb
cmpsl
dec
gs
movsl
pop
pop
pop
insb
adc
inc
js
fidivrs
mov
inc
inc
dec
pushf
jle
xchg
movsb
add
dec
adc
xchg
sbb
and
jns
jns
in
sahf
lods
cmp
in
inc
jp
adc
ljmp
mov
nop
dec
nop
js
lret
cwtl
shlb
les
lahf
int3
adc
add
jns
cli
or
pop
dec
pop
dec
pusha
shll
jmp
mov
mov
adc
lock
into
movsb
mov
lods
jo
mov
mov
mov
enter
cli
mov
xchg
lock
fdivrp
adc
stos
cli
ficomps
pop
dec
pusha
popa
shrb
int3
mov
inc
jl
test
nop
jo
je
jns
cpuid
dec
int3
sarl
dec
loopne
in
rclb
ror
iret
or
repnz
xchg
push
insl
fcoms
add
push
mov
ss
mov
adc
jge
adc
dec
jb
mov
lret
push
insb
fdivs
and
or
or
jb
dec
dec
xor
lcall
pop
cmpsl
jns
scas
and
or
rorl
fs
mov
xor
mov
sub
into
add
js
fdivrp
loop
out
fsubr
jb
fsubl
cli
inc
dec
add
decb
decb
fists
inc
je
fldl
and
mov
stos
ss
mov
rorb
dec
fimuls
cld
push
cld
xchg
pop
xchg
fs
mov
rcrb
mov
xchg
xchg
inc
xchg
push
sub
sahf
lret
push
cld
xor
addb
mov
les
jle
adc
fsubs
inc
mov
dec
clc
lock
push
fists
pop
pop
inc
and
insb
lret
outsb
mov
xchg
in
sub
mov
ljmp
les
movsb
mov
lcall
movsb
fs
cmp
mov
ss
adc
hlt
mov
int3
xor
cld
push
rclb
fs
xchg
mov
push
sub
mov
lahf
je
mov
add
or
push
shrl
stos
and
aam
fiadds
sbb
xchg
cs
mov
in
fcmovbe
xor
add
sbb
in
aaa
cmpsl
data16
mov
mov
hlt
insb
cvttsd2si
clc
fs
je
mov
xchg
mov
mov
cmpsb
sub
adc
mov
fdiv
cld
or
out
inc
rclb
sbb
xor
inc
iret
push
push
mov
ftst
sub
in
dec
xchg
pushf
xor
fxch
int3
lods
cld
mov
fs
mov
test
cld
jo
fildll
mov
mov
mov
aam
adc
push
cmp
push
into
add
mov
int3
mov
add
lret
in
hlt
adc
jp
inc
enter
lock
test
or
cmp
cmp
es
je
push
roll
adcb
enter
add
add
sbb
xchg
cmp
test
mov
pushf
daa
push
add
in
fiadds
xor
jns
clc
mov
mov
or
inc
push
jl
cwtl
mov
cmp
or
xor
xor
movsl
mov
push
fcoms
pop
test
sub
xor
or
insb
adc
js,pn
add
pop
dec
jp
pop
xchg
loopne
jge
xchg
fnstsw
pop
sub
imul
pop
add
push
cmp
mov
test
jmp
movsl
test
movsl
inc
add
je
inc
or
movsl
sbb
aam
xor
lock
hlt
popa
push
cld
out
xchg
inc
sub
pop
xor
das
jo
pop
xchg
mov
scas
mov
lret
addb
fsubl
inc
or
and
nop
lahf
pop
pop
pop
push
je
jp
jle
ds
fdivs
push
mov
inc
dec
push
dec
mov
nop
fstps
mov
jb
insb
mov
filds
lds
lods
pushf
jns
in
test
lods
jl
aaa
add
shlb
enter
rorb
fdivr
mov
call
clc
jle
lahf
add
or
mov
mov
and
lahf
xchg
scas
les
clc
and
cmpsl
sub
notb
lretw
mov
imul
adc
jl
xchg
sbb
fsubrl
and
repnz
mulb
jg
add
pushf
or
dec
adc
sbb
sbb
cmp
nop
push
imul
xor
les
cmp
and
fnstenv
js
xor
movsb
xor
add
xchg
jl
mov
leave
enter
inc
add
js
scas
and
hlt
push
push
bound
fimuls
cmp
jb
out
iret
pusha
add
fldl
jo
jbe
aad
sbb
mov
pop
iret
adc
mov
jo
je
js
jl
dec
sub
sub
fs
jl
jl
push
bound
lock
loopne
insb
call
clc
scas
inc
and
stc
cli
push
jne
push
sub
pop
add
add
add
jae
jb
clc
fldenv
push
mov
xor
outsb
cmp
sbb
push
sub
mov
adcb
push
adc
and
push
movsb
dec
cwtl
adc
test
inc
mov
fiadds
je
xor
dec
cmp
push
hlt
xchg
or
sub
cmp
mov
mov
xchg
cmpb
dec
and
jl
xchg
leave
add
sbb
cld
imul
sarb
mov
cwtl
push
pop
arpl
jb
in
jbe
les
shlb
dec
add
and
push
sbb
and
jmp
cli
mov
push
push
cli
add
mov
xor
push
adc
jle
loopne
nop
sbb
js
ss
mov
pop
jb
fldz
lods
cmpsl
shlb
jecxz
in
call
fs
xor
iret
in
or
dec
adc
push
sbb
mulb
jns
cld
xchg
adc
inc
cld
mov
es
jl
jl
ds
je
iret
ljmp
pop
inc
lods
insl
xor
imul
jb
sub
fidivl
inc
cwtl
cmp
pop
xchg
dec
xor
sbb
lahf
pop
push
pop
dec
jb
jge
push
mov
pusha
nop
aam
fdivs
in
ss
fld
dec
movsl
hlt
add
and
mov
fdivs
lods
and
xor
daa
pop
bound
push
jmp
jo
fsubl
enter
cmp
pop
and
out
sub
pop
xor
aam
dec
cmp
adc
cmp
adc
xor
and
push
adc
sub
inc
pop
push
xchg
mov
mov
xlat
fimull
lahf
xor
inc
mov
jnp
mov
pusha
sbb
addl
sbb
lock
shl
cs
xor
adc
xor
repnz
lcall
ljmp
out
pop
xchg
sub
out
hlt
movsb
fsubrl
cli
in
clc
lock
mov
adc
sub
sub
ljmp
push
je
sti
xchg
inc
mov
fcmovnbe
add
fs
aas
insl
clc
xchg
test
loopne
stos
leave
ljmp
imul
lret
or
mov
mov
sbb
mov
clc
roll
cmp
hlt
inc
cmp
xor
jo
sub
jbe
xor
sbb
jae
mov
roll
inc
int
movsl
in
js
lret
add
or
push
dec
movsb
ss
cmp
inc
popa
fsubrl
movsl
sub
call
and
pusha
push
pushf
ja
notl
test
or
xchg
push
sub
sub
js
xor
xchg
adc
mov
sbb
jp
dec
or
push
mov
mov
in
bound
lcall
add
cmp
movsb
inc
xchg
shl
hlt
fldcw
and
rcrb
dec
push
addr16
xchg
inc
cwtl
cmpsl
cmp
lods
inc
and
xor
jge
and
cwtl
sbb
enter
adc
sub
xchg
cmp
sbb
push
movsl
movsb
add
xor
movsl
rclb
cld
mov
cld
inc
dec
lret
mov
xor
shrb
xchg
sub
outsb
movsl
fs
pop
add
push
push
in
inc
fsubrs
xor
cmpsl
mov
shll
rclb
xor
cmp
push
lret
push
dec
or
nop
nop
mov
mov
xchg
call
and
cmp
adc
insb
xchg
add
test
ljmp
sub
test
pop
and
sub
sbb
mov
je
enter
int3
rcrl
mov
movsl
cld
adc
inc
mov
fmul
cmpsb
lret
test
iret
jb
dec
dec
push
jns
movsl
fs
mov
mov
movsl
stos
dec
test
adc
les
mov
nop
sbb
call
push
push
insb
adc
xor
pusha
scas
fs
out
xchg
stos
xor
jl
and
xor
xor
inc
or
xor
sub
sub
xchg
jo
loop
sbb
rclb
iret
adc
inc
cmp
xchg
xchg
pop
les
test
aam
and
cld
push
test
xor
push
dec
imul
cmp
int
sbb
cld
lret
adc
and
pusha
jmp
mov
xchg
sbb
je
jl
sbb
ficompl
mov
mov
cli
in
in
stos
dec
dec
add
dec
adc
push
and
dec
xor
dec
scas
pop
mov
mov
mov
mov
fcompl
push
xchg
in
enter
sub
cld
push
fcmovb
clc
xchg
mov
movsb
push
les
clc
scas
lret
add
rorb
xor
nop
inc
mov
push
aaa
xchg
data16
sbb
or
fsubr
enter
int
out
pop
loopne
jo
cwtl
fcoml
mov
jnp
sahf
cld
jmp
push
cmpsl
cmp
js
push
loopne
movsb
test
xchg
sbb
xchg
movsb
add
jmp
lock
loopne
cmp
loopne
push
fdivrl
adc
mov
fsubl
add
push
xchg
adc
fsubs
dec
lret
pusha
inc
insb
test
push
movsb
mov
mov
mov
dec
mov
cmpsb
inc
rclb
insb
cmpsb
jl
movsb
lret
xchg
mov
add
adc
mov
int3
insb
push
les
mov
mov
mov
into
faddl
in
mov
cmp
rcrb
aam
mov
mov
sbb
jmp
hlt
add
mov
cmpsb
in
adc
pusha
sbb
or
fcmovu
sbb
pop
sub
and
cmp
scas
dec
xchg
fs
loopne
push
cmp
jo
clc
movsb
fisubrs
xchg
aam
mov
jmp
cmpsl
or
dec
call
loop
lods
in
mov
in
xor
and
out
jl
or
nop
enter
sbb
les
inc
or
movsl
mov
mov
in
int3
hlt
call
sbb
jle
cmp
xchg
inc
inc
cmp
imul
es
xchg
inc
sbb
fcoms
lret
sub
cld
and
add
clc
sbb
aam
add
inc
aam
or
lock
cmp
int3
lret
dec
mov
pop
inc
ret
mov
xchg
xchg
or
pusha
xorb
xchg
dec
add
jl
mov
dec
mov
jle
or
mov
pop
cmp
jl
in
movsb
notb
fdivl
jbe
hlt
int3
cld
adc
and
jl
out
xchg
movsb
inc
sub
pop
es
outsb
mov
sub
repz
jb
sahf
int
or
in
jb
loope
xor
outsb
pop
xor
xor
clc
movsl
mov
push
lods
mov
xor
pop
mov
js
and
mov
in
aam
adc
dec
dec
push
mov
adc
and
cltd
in
fisubrs
pop
adc
mov
leave
shlb
dec
sbb
cli
int
repnz
insb
dec
out
movsl
mov
mov
loopne
hlt
and
out
push
loopne
icebp
repnz
shlb
adc
sbb
inc
lock
les
mov
aam
mov
lret
inc
pushf
adc
in
cmp
out
lock
into
into
cwtl
mov
rolb
imul
cmp
inc
xor
pop
xchg
hlt
lods
imul
pop
aam
insb
stc
pushf
hlt
push
lods
sbb
pop
iret
pop
aam
fcompl
loopne
or
adc
push
stos
out
jo
jo
pushf
sbb
sahf
lods
xchg
mov
in
jecxz
and
repnz
sbb
xchg
jl
repnz
jl
shr
movsl
clc
shl
stos
mov
xor
push
jns
mov
cmpsl
mov
ljmp
loop
jl
cmpsl
insb
test
xchg
popa
fidivrl
enter
or
ficompl
pusha
xchg
sub
in
adc
push
dec
jl
adc
test
pushf
sbb
data16
rolb
or
mov
je
bound
or
repnz
loopne
cmp
repnz
in
and
lock
mov
clc
inc
add
or
aam
sbb
sbb
cmp
push
fs
clc
cmp
in
lock
push
lahf
xor
inc
std
clc
xrelease
clc
lds
pop
pop
inc
clc
repnz
enter
pop
jo
push
cld
adc
cwtl
pop
cmp
lods
mov
js
decb
xor
ljmp
dec
ror
fcomps
push
sbb
push
scas
xor
fs
jl
cmpsb
add
adc
lds
dec
push
xor
add
ret
mov
add
pop
sub
cmp
push
nop
add
mov
ror
decb
sbb
dec
mov
dec
mov
in
shlb
sbb
fiaddl
cmp
enter
and
rclb
clc
out
ret
mov
sub
xchg
mov
sub
or
sbb
pop
call
xchg
les
or
sbb
adc
enter
pusha
fs
dec
test
pushf
in
bound
cmp
fcmove
and
dec
push
cmp
inc
inc
pop
movsb
scas
fcomps
jl
cmp
adc
ret
scas
ficoml
into
in
mov
jns
repnz
dec
les
js
add
xchg
add
push
push
fnsetpm(287
xor
mov
sub
mov
cwtl
sbb
inc
int3
jb
mov
movsl
and
pop
int
ret
les
mov
sarb
adc
xor
cld
sbb
roll
or
mov
call
adc
xor
push
cmp
lret
cwtl
out
fcmovb
mov
in
daa
mov
fs
dec
inc
xchg
js
mov
test
mov
orb
pushf
push
mov
into
in
adc
mov
cmpsb
je
movsb
movsb
adc
xor
adc
sbb
pusha
dec
popf
scas
cmpsl
aaa
out
sub
cld
push
out
xchg
enter
mov
sub
cmp
push
pusha
cmpsb
test
jmp
pop
pop
jmp
addps
int3
adc
in
sbb
loopne
pop
mov
fdivs
cmp
scas
push
inc
mov
lret
out
mov
lods
mov
xor
js
divb
push
sub
or
mov
loopne
adc
les
mov
idivb
test
loope
pusha
hlt
movsb
test
stc
lods
inc
cmp
lods
pusha
test
lret
call
jns
mull
jo
mov
sahf
lret
mov
push
adc
xchg
xor
cwtl
pop
arpl
punpckldq
dec
mov
xor
lret
mov
shlb
jmp
add
arpl
les
fsubrs
mov
adc
pusha
jno
int3
sub
or
or
add
push
xchg
pop
aad
nop
pushf
nop
mov
scas
push
je
pushf
push
and
push
jge
repnz
xchg
dec
js
mov
bound
les
lret
es
or
data16
and
stc
sbb
bound
ficoms
leave
stc
or
mov
mov
data16
cmp
scas
outsb
mov
retw
mov
cmpsb
jmp
mov
ss
dec
insb
fisubrs
movsl
fs
or
stc
sbb
jl
inc
js
je
pushf
es
lret
lret
dec
adc
push
movsb
dec
cs
dec
cmp
cmp
pop
adc
push
lock
sbb
xchg
cmp
cmp
inc
cmp
in
sbb
sbb
xor
bound
fimuls
dec
stc
add
out
cli
mov
or
into
push
cld
lret
sar
and
leave
cli
notb
or
stc
ljmp
clc
fcoms
jmp
les
jmp
lock
adc
mov
push
ror
mov
jmp
mov
cli
push
daa
test
or
es
add
and
jl
dec
jbe
xchg
jo
push
inc
data16
adc
scas
movsb
test
dec
dec
mov
iret
inc
ss
adc
call
dec
ret
sarb
mov
imul
hlt
jb
jbe
sbb
sub
push
or
xchg
push
test
arpl
iret
dec
pop
cli
mov
loopne
mov
iret
inc
push
jl
adc
mov
iret
dec
xor
iret
dec
and
push
jno
cli
movsb
sarb
or
cli
xchg
shlb
ficoms
cmp
sbb
adc
push
imul
add
cli
es
adc
adc
incb
fs
pop
and
mov
pushf
inc
lock
mov
sbb
push
adc
shrb
out
dec
push
out
inc
dec
cmp
cmp
fimuls
mov
xchg
andb
iret
inc
sbb
jno
mov
push
in
push
inc
jge
adc
lret
adc
mov
jo
ljmp
js
dec
and
loop
hlt
mov
and
into
lret
or
adc
cs
je
jo
insb
mov
lahf
sub
sub
js
lret
bound
gs
shl
cmp
bound
inc
loop
ficoms
jae
iret
dec
aam
mov
jl
push
js
iret
dec
enter
jge
or
inc
leave
cld
adc
jnp
and
cld
pop
inc
clc
pop
inc
repnz
leave
cld
out
jno
scas
ret
repnz
push
in
cmp
jmp
fidivrl
cmpsl
sar
lret
cmp
or
test
mov
mov
xor
mov
fimuls
mov
mov
or
iret
push
stos
js
cli
dec
js
pop
adc
xchg
or
js
dec
cmp
jmp
sahf
das
lcall
int3
mov
xchg
clc
data16
inc
outsb
cmp
adc
and
fildl
cmp
fildl
cmp
adc
sub
movsl
xor
fisttpl
out
xchg
push
mov
pusha
cld
cs
stc
or
loop
pop
cld
dec
stc
clc
sub
lds
or
push
shll
xor
sub
sub
cmp
cs
sub
sub
stos
add
jno
out
movsl
idivb
cmp
and
dec
mov
cmp
push
jae
fisttpl
stos
or
stos
or
jb
filds
sub
jmp
ds
xorb
mov
xor
lret
mov
xor
xor
ret
mov
movsl
mov
es
into
lods
mov
cmpsl
hlt
push
lods
les
and
or
mov
sub
sbb
pop
lret
scas
fsqrt
das
bound
leave
jo
aaa
adc
pop
into
cmpsl
inc
mov
out
mov
xor
jo
xor
cmp
int3
ss
add
cld
je
les
xor
push
or
stos
stc
adcb
jl
adc
fdivs
lock
or
lcall
leave
jo
pop
dec
or
loopne
call
xchg
aaa
or
nop
lret
in
test
cmpsl
lock
xor
loop
add
adc
lcallw
into
je
in
mov
push
out
lret
in
cmpsb
prefetcht0
rep
lahf
push
adc
js
mov
xor
out
in
sub
pop
jl
in
push
sub
xchg
mov
nop
and
fistps
js
push
addr16
arpl
arpl
les
or
test
pop
arpl
mov
roll
sbb
add
xor
jbe
ficoml
outsl
inc
int3
cmp
pmulhuw
lods
hlt
add
or
jbe
jo
pop
push
les
test
mov
cmp
lret
pop
sub
adc
shlb
bound
test
in
ja
scas
in
or
push
or
insb
and
mov
jbe
jmp
or
out
push
cmp
mov
leave
bound
adc
xchg
or
repnz
mov
dec
pop
and
pop
dec
mov
cmpsl
adc
pop
pop
int3
sub
pop
stc
inc
mov
pop
cmpsl
pop
or
mov
sbb
push
cmpsl
adc
insb
call
rcr
cmp
scas
in
cld
movsb
push
and
dec
fdivr
mov
insb
rclb
int3
fiadds
insb
rorb
push
inc
cmpsl
or
pushw
cmpsl
sbb
in
cs
lret
dec
pop
push
sahf
mov
mov
dec
lock
in
popa
pop
clc
fcoms
or
sub
push
sub
push
sub
push
sub
push
sub
push
or
cwtl
push
insb
les
jo
cld
dec
jb
jae
fidivrl
cmp
sbb
push
lcall
decl
out
hlt
out
mov
cmp
leave
fcomps
add
jb
leave
push
in
orb
dec
add
adc
sbb
sub
push
adc
pop
mov
cld
pushf
pop
adc
jl
pop
aas
mov
mov
adc
pop
fildll
add
jmp
and
mov
cmp
bound
fmull
aam
push
fistpl
cmp
ret
xchg
pushf
adc
jl
aaa
xor
ficoms
mov
push
push
xor
loopne
loop
nop
jmp
pop
cmpb
insb
loopne
lock
dec
add
dec
sbb
dec
jo
sbb
scas
mov
pop
lock
into
nop
mov
shlb
adc
mov
cmp
fstl
cmp
push
and
lock
adc
dec
push
cmp
add
and
call
bound
lock
movb
scas
pop
mov
fcomp
sbb
adc
xor
mov
or
loop
inc
aad
loope,pn
cwtl
in
fdivs
xchg
dec
cmp
push
mov
jo,pn
lret
js
add
push
pusha
lods
fimuls
fstps
daa
pop
mov
hlt
gs
adc
jb
pop
mov
xor
inc
imul
push
int3
inc
adc
aam
jle
cmp
hlt
mov
mov
xchg
je
js
jl
jl
jl
jl
cmp
and
ret
jae
jae
jae
jae
jae
jae
jb
jg
inc
ljmp
addr16
addr16
add
or
xor
dec
push
dec
sbb
dec
and
dec
sub
dec
xor
dec
cmp
dec
inc
dec
inc
dec
dec
dec
dec
dec
push
dec
push
dec
pop
dec
pop
dec
bound
dec
push
outsb
dec
jb
jbe
jl
test
les
int3
fcoms
pusha
mov
lock
adc
fdivrs
sbb
or
jmp
jae
aas
and
roll
stc
jle
test
out
pusha
shl
hlt
fwait
int
idivb
inc
ret
ja
repz
enter
in
pslld
fcomip
into
aam
mov
lock
shr
mov
hlt
mov
in
insl
movsb
add
lods
into
insb
clc
pop
pushf
sbb
cmc
push
cli
pushf
adc
push
xlat
pop
std
ja
loop
aam
in
jne
popl
sarl
repz
xchg
and
push
clc
outsl
gs
mov
loop
jecxz
repz
mov
jmp
pushf
add
mov
xchg
lock
mov
mov
test
xchg
xchg
lds
lret
mov
cli
xchg
mull
mov
ret
movsb
ror
adc
mov
movsb
mov
mov
mov
mov
mov
or
enter
mov
or
enter
mov
or
jp
stc
enter
mov
xchg
movsb
mov
cmpsb
orl
mov
loop
mov
in
fsub
mov
and
mov
les
xchg
rolb
inc
mov
adc
mov
add
push
lea
popl
mov
xchg
sbb
subb
xchg
xchg
xchg
leave
lds
mov
cltd
mov
das
fwait
nop
std
pushf
nop
iret
popf
nop
xchg
sahf
mov
les
shlb
mov
or
movsb
add
movsl
dec
mov
aad
cmpsb
push
jb
sbb
inc
test
or
push
mov
fldcw
lods
paddw
sub
mov
mov
xchg
sub
and
scas
or
sub
adc
push
fistl
pusha
fcoml
cld
cs
ficoms
xor
or
sub
or
push
es
lock
mov
rcll
test
sbb
mov
sub
sub
add
adc
mov
adc
dec
aad
lock
adc
rorl
pop
rclb
shlb
lock
adc
pop
mov
and
and
lret
cwtl
sub
test
push
sub
nop
mov
hlt
or
xchg
arpl
flds
aam
dec
jecxz
nop
psraw
xlat
test
adc
jo
and
add
jb
rcll
test
in
mov
fmuls
and
test
pop
sbb
rorb
loop
mov
mov
dec
popa
aad
or
or
jl
adc
test
or
les
xor
or
fisttpll
xor
mov
cmp
in
sub
inc
xchg
sub
adc
xchg
add
out
test
cwtl
rol
add
test
dec
test
test
movsb
xlat
mov
adc
ret
push
pop
and
or
aam
and
and
cwtl
lcall
js
and
aad
es
test
rorl
mov
ret
aam
or
fs
call
adc
jno
enter
dec
test
cmpsb
adc
sahf
cltd
xor
sub
xor
adc
inc
nop
int3
add
pusha
int
sbb
sbb
add
pop
push
lret
ror
sbb
movsb
dec
and
and
xchg
lret
and
movsb
aam
sbb
mov
lea
inc
mov
daa
leave
sub
mov
xlat
cltd
bound
test
sbb
rorb
fisubl
fcoml
xor
test
sbb
and
mov
or
rolb
sbb
cwtl
pop
xor
in
into
lock
or
push
xchg
rorl
and
or
test
sbb
and
cmp
clc
sub
push
add
inc
sub
push
sub
test
inc
daa
and
aad
les
pushf
movsb
adc
mov
xor
sbb
insb
int3
and
rcrl
mov
adc
roll
mov
mov
es
fxch
rcl
dec
and
int
into
ret
test
cmpsl
mov
mov
mov
lods
test
xlat
sbb
leave
mov
unpcklps
mov
dec
push
shlb
sub
pop
int
shlb
cmp
rorl
xor
out
xchg
aam
int
mov
iret
push
mov
pop
leave
shlb
adc
and
fistl
push
xchg
sbb
test
cltd
cmp
adc
fsubrs
cmpsb
sub
test
clc
rclb
es
rcl
cmp
rclb
and
nop
es
les
rorb
test
or
adc
xchg
out
cld
add
mov
jmp
mov
sar
in
mov
icebp
mov
pushw
push
call
pusha
sub
sub
jo
adc
mov
aam
mov
sub
lods
mov
mov
leave
inc
xchg
sub
lods
into
xor
adc
or
loopne
adc
loopne
or
and
les
orb
pop
nop
test
inc
mov
cli
inc
lods
roll
inc
fwait
mov
cld
lahf
xchg
mov
xchg
pop
les
fcomp
jmp
stos
loope
lcall
into
adc
fbld
jo
pop
cld
cmp
out
cmp
and
xor
shlb
out
mov
and
js
mov
mov
mov
pop
pusha
adc
sub
js
xchg
int3
ret
cmp
pop
sub
std
adc
mov
mov
xlat
add
adc
cltd
mov
fdivl
fldl
aad
ror
cmc
cld
adc
mov
ficompl
mov
mov
movsb
lock
push
loope
sub
stc
sub
inc
clc
repz
aas
test
and
test
and
cmp
out
sub
mov
es
sub
std
mov
xor
add
cmp
aaa
push
inc
lock
loop
pop
cmp
cmp
sub
and
inc
pop
cmp
mov
mov
lret
js
sarl
int3
cli
mov
popa
mov
fisttpll
xchg
fisubs
adc
and
test
sub
push
aad
push
call
and
lods
int
inc
mov
loope
sahf
scas
cltd
out
call
add
sti
or
add
and
add
stos
sbb
dec
and
ljmp
or
xor
add
cmp
push
inc
or
pop
inc
or
test
stos
sbb
xor
or
or
lods
cld
xchg
push
add
daa
inc
push
loopne
ret
mov
dec
jo
out
mov
inc
enter
adc
cmp
fstl
add
mov
aam
adc
aam
roll
jo
inc
test
lret
adcb
inc
les
rcrb
add
aad
mov
fcomip
push
sub
cmp
dec
pop
cli
xor
pushl
rolb
rorl
jle
dec
xor
inc
mov
mov
aam
or
and
test
leave
scas
adc
mov
jb
lods
mulb
dec
lahf
ret
test
mov
push
mov
ret
out
inc
mov
clc
js
mov
mov
mov
xor
popa
cmpsl
mov
lret
shrb
inc
fsubrs
fdivs
mov
rcl
fsts
cwtl
mov
in
clc
call
in
enter
jecxz
adc
xchg
mulb
adcb
inc
int
daa
and
rcl
xchg
js
je
or
push
dec
iret
or
xor
inc
lret
dec
or
or
cltd
shrb
fld
std
test
lock
popf
dec
inc
movsb
xchg
mov
fadd
mov
add
add
hlt
mov
add
mov
movsb
mov
jo
scas
inc
mov
fdivs
mov
mov
dec
sahf
mov
enter
je
ret
add
xlat
loopne
shl
je
negl
and
fildl
aam
icebp
push
orb
mov
add
jecxz
nop
xlat
add
sbb
sbb
pop
fisttpl
movsl
mov
es
sub
push
rorb
sbb
sbb
xor
clc
fisttpl
xlat
push
pop
lock
add
stc
test
and
add
mov
sbb
add
icebp
or
mov
add
movsb
add
dec
mov
push
push
lods
mov
push
shll
xchg
mov
dec
negl
les
cld
add
and
cmp
ss
mov
fdivrl
jo
aad
pop
xchg
fisttps
mov
sbb
add
sbb
loope
sub
cwtl
fimuls
cmp
adc
push
jb
nop
and
cld
fsubs
dec
fstps
inc
sbb
stos
in
popa
test
shll
push
jo
sbb
jl
cmp
xchg
fadd
rol
in
add
shr
fwait
mov
in
enter
mov
dec
loope
sbbl
into
popa
pushf
les
inc
fmul
push
mov
xlat
add
mov
mov
mov
out
sbb
aam
sbb
adc
fsubl
in
xor
and
jmp
ljmp
dec
out
and
test
and
rcrb
and
shlb
inc
mov
shll
and
fadds
call
call
int3
shl
adc
lcall
leave
jno
mov
stc
lar
test
mov
inc
js
out
adc
imul
push
cmp
int3
pushl
sti
adc
cwtl
out
add
lds
leave
nop
aam
xor
pop
sbb
add
stc
test
mov
fneni(8087
js
sbb
das
push
xor
sub
call
fsub
sbb
jecxz
sbb
mov
call
and
mov
aas
test
test
popl
fldl
or
sbb
cltd
jecxz
mov
movsb
cmp
jns
jo
add
jecxz
sub
sbb
cwtl
ljmp
xchg
icebp
push
mov
loopne
cmp
or
xor
adc
sbbl
shl
insl
inc
jno
insl
dec
jo
xor
cmp
sti
xor
adc
fs
sub
mov
mov
clc
cmp
sbb
cmp
movsb
pusha
mov
movsb
mov
rcrb
push
loope
sbb
ret
call
and
in
cmp
lock
inc
and
pusha
or
sbb
aaa
leave
mov
cltd
xchg
or
fsubrp
loopne
mov
or
scas
mov
adcb
sub
xor
stos
out
leave
out
nop
jmp
push
clc
xor
hlt
das
inc
popa
adc
mov
fcmovbe
lds
sbb
jno
sbb
fwait
or
xchg
scas
mov
xchg
xlat
pminub
movsb
xor
sbb
lock
pop
pop
inc
mov
or
mov
cwtl
jne
dec
fdivs
pusha
sbb
mov
fildll
sbb
cmp
testb
lcall
xchg
or
movsb
lock
pusha
rcl
xor
and
or
lret
mov
nop
sbb
ficompl
mov
sub
add
or
jno
rolb
xor
adc
mov
lahf
je
lret
jb
clc
mov
or
mov
lods
inc
fmull
pushaw
int3
mov
push
dec
mov
out
lock
lret
insb
cmpsb
rcrb
aam
mov
in
mov
shl
fsubs
and
ss
add
sbb
lret
movsb
leave
sbb
push
mov
adc
movsb
rorb
and
pop
sub
jl
mov
in
sub
mov
lock
inc
shl
xor
scas
pop
inc
mov
or
jl
or
testb
test
or
mov
iret
adc
fdiv
or
pop
pop
testl
test
lahf
jmp
xchg
rcr
dec
xchg
loop
mov
loope
pusha
or
push
mov
in
cwtl
in
pushf
test
mov
inc
sbb
test
add
es
push
nop
jmp
hlt
js
jecxz
inc
mov
sbb
xor
scas
adc
jl
popa
lock
insb
xchg
or
nop
stos
int3
test
mov
mov
rcl
loope
jo
enter
leave
aam
mov
cltd
lret
nop
mov
xchg
sarb
sub
mov
dec
xchg
mov
test
fisttps
test
nop
andl
fdivr
add
ljmp
xchg
repz
inc
xor
cld
adc
fisttpll
les
sbb
cltd
fisubrl
or
or
fmul
xor
cmp
dec
roll
and
frstor
shlb
inc
and
nop
cwtl
mov
nop
mov
sbb
popf
mov
mov
sti
add
ret
add
movsl
out
rclb
movsb
dec
xchg
dec
loop
nop
mov
hlt
mov
sub
or
push
sbb
das
arpl
jns
pop
mov
pop
or
xchg
mov
in
sub
clc
sbb
test
add
dec
dec
fmuls
rcl
inc
hlt
add
test
adc
loop
mov
scas
jecxz
fldcw
jo
cwtl
or
adc
stc
lahf
adc
test
shrl
fdivr
shlb
in
test
lahf
rcl
cmp
shll
subb
js
hlt
sub
xor
dec
add
call
sub
imul
fists
dec
cltd
push
pusha
ret
xchg
xchg
fildl
adc
inc
rcl
xchg
mov
std
add
cmp
cltd
rolb
mov
mov
les
fmul
pop
adc
movsb
mov
jo
fdivl
add
pushf
adc
loop
clc
mov
sbbl
sub
mov
add
mov
add
mov
les
inc
test
cmpsb
and
shl
adc
inc
push
adc
inc
cmp
push
rcrb
pop
mov
sbb
sbbb
xchg
push
sub
mull
shr
cmp
jl
sbb
ljmp
shr
bound
cmc
pop
cmp
jl
push
mov
leave
mov
shll
sub
leave
fistpl
call
test
xor
lods
push
inc
and
mov
sarl
or
into
pop
push
loopne
mov
mov
adcl
xchg
xchg
cli
fnstsw
shlb
push
roll
rol
jl
xor
push
or
add
fstl
loop
add
fiaddl
xchg
leave
call
in
fdiv
test
mov
add
ljmp
out
xchg
shl
adc
mov
sti
loope
shrl
and
add
add
push
nop
jmp
cwtl
in
mov
jl
xchg
xchg
rolb
sbb
int3
test
mov
or
cmpb
cmpl
add
les
dec
popf
push
mov
in
push
jmp
cltd
nop
js
lods
cwtl
lods
or
adc
push
inc
cmc
pop
xor
rorb
xchg
lods
movl
nop
out
mov
sub
shlb
cmp
or
js
int
mov
pushf
lret
xchg
xchg
mov
or
aad
pusha
mov
or
sub
pusha
pusha
jmp
cld
mov
sub
and
push
enter
in
xor
in
or
mov
add
xchg
into
dec
xor
int
cwtl
mov
clc
test
xchg
cwtl
rcrb
add
faddl
adc
xchg
push
xchg
ror
loopne
test
int
xchg
call
loopne
or
cmpsb
dec
out
int
enter
adc
add
lods
and
mov
pushf
pushf
shlb
mov
or
add
jno
in
clc
lret
mov
loope
cmc
in
mov
jmp
cmp
movsb
fisubl
xchg
sahf
aam
cwtl
mov
sbb
xchg
mov
movsb
in
xchg
in
and
sbb
xor
lret
mov
pop
cwtl
flds
xchg
into
cmpl
lret
mov
movsl
fxch
test
mov
push
sbb
lock
fsubr
popf
shl
push
fmul
mov
mov
loopne
scas
fsubs
jecxz
scas
into
mov
les
int3
pusha
adc
xchg
shrb
mov
lahf
clc
or
test
cltd
add
cld
fs
scas
adc
or
mov
adc
adc
inc
dec
movsl
mov
inc
pushf
mov
stc
push
xchg
leave
or
roll
test
popa
nop
lret
xchg
mov
clc
mov
hlt
lods
cld
enter
and
pushf
leave
add
int3
sbb
fsubs
mov
fmuls
lret
adc
push
mov
mov
add
ret
or
cwtl
rolb
popf
int
dec
cwtl
leave
push
inc
nop
xchg
enter
std
and
sub
mov
xchg
popf
into
or
movsl
and
nop
add
cwtl
add
mov
addb
fmuls
loopne
cwtl
movsb
iret
std
mov
dec
jb
pusha
jno
ret
or
outsb
pop
std
fadds
loope
js
lret
movsb
mov
rolb
sbb
int3
nop
popf
iret
and
ret
mov
or
loopne
stos
adc
leave
mov
and
mov
cwtl
xchg
lds
fsts
or
fldenv
cmpsb
loope
add
rcll
lcall
mov
into
push
xchg
adc
mov
or
add
addl
dec
loop
xchg
rolb
ror
in
hlt
mov
and
sub
cmp
clc
mov
cmpsl
fsubp
jecxz
clc
mov
in
inc
imul
inc
mov
and
in
pop
mov
mov
rolb
ret
mov
xchg
push
scas
clc
inc
push
in
rcl
movsl
loop
lock
fadd
fsubrs
cltd
lahf
leave
shlb
lods
int3
test
or
lret
inc
mov
pop
rclb
inc
adc
insb
mov
fwait
test
in
xchg
adc
cmc
out
lcall
pusha
mov
inc
cmp
cmpsl
pop
jmp
mov
sbb
inc
push
in
or
and
jmp
fs
rcr
or
fadds
pushf
aam
xchg
lds
lea
enter
jo
movsb
sub
mov
addb
mov
mov
rclb
cmpsb
mov
adc
or
mov
mov
sub
mov
mov
sahf
test
icebp
push
shlb
sub
mov
dec
in
xchg
mov
inc
test
out
insb
in
ficomps
imull
xor
add
loope
add
add
fdivr
nop
enter
aam
and
int
add
dec
nop
mov
faddl
add
mov
adc
pusha
xchg
push
add
mov
adc
mov
lea
or
test
and
xlat
cld
sbb
in
enter
lea
mov
fldenv
cmpsb
rcl
js
fmul
cmp
popf
mov
je
cmpsl
mov
mov
les
test
icebp
testb
loopne
ljmp
fisubl
adc
dec
in
push
inc
push
lahf
arpl
and
pop
movsb
int3
out
mov
ret
adc
mov
inc
lea
or
mov
ljmp
test
mov
leave
rcrb
scas
add
rcr
sbb
icebp
push
inc
pop
jae
lret
inc
fwait
pushf
jo
cld
pusha
mov
jno
mov
idivb
dec
hlt
push
popa
shlb
xor
mov
pusha
push
popf
add
repz
lret
mov
mov
ljmp
fistl
lods
enter
loop
repnz
adc
sub
jo
inc
cld
xor
push
pop
dec
inc
push
pop
push
jae
push
xor
cmpsb
mov
mov
sarl
inc
mov
test
iret
adc
mov
xor
mov
xchg
mov
testl
loopne
dec
mov
dec
cmp
popa
or
mov
jmp
or
or
ret
cmp
call
pushf
mov
out
hlt
xchg
add
mov
add
mov
and
sub
mov
inc
mov
cld
push
mov
nop
repz
mov
xor
je
push
in
or
lods
cs
mov
outsl
jne
jo
jnp
pop
mov
jl
cmp
adc
cmpsl
mov
popf
nop
mov
mov
in
xor
jmp
xchg
test
sbbb
add
ret
js
mov
jnp
add
pop
arpl
pop
popa
bound
mov
push
inc
sbb
sub
stc
cli
sbb
mov
xchg
leave
enter
int
clc
test
lret
negb
mov
mov
ret
xor
mov
or
jle
dec
mov
pop
mov
in
add
enter
sbb
mov
sub
mov
pop
arpl
inc
lahf
jb
dec
xchg
push
mov
pusha
mov
hlt
xchg
aad
and
pusha
nop
test
xchg
mov
push
lret
shll
and
push
js
jnp
xchg
pop
add
adc
pusha
pusha
addr16
inc
inc
dec
cmp
movsb
das
and
xlat
clc
adc
aam
add
adc
sti
sbb
push
xor
inc
out
adc
jecxz
sbb
loope
rorl
or
pop
incl
or
xchg
rolb
aam
test
out
andb
loope
loopne
push
int3
bound
clc
push
js
jp
jno
push
add
bound
sub
js
int3
add
mov
rolb
div
dec
jo
clc
xlat
fsub
je
pop
push
dec
sub
shlb
and
add
cmc
aad
cmp
nop
or
cltd
call
js
pop
inc
data16
rclb
sbb
adc
int3
cmpsb
dec
test
mov
clc
mov
call
sbb
mov
cmp
and
and
fsubs
mov
jbe
or
adc
adc
or
cmpsb
call
stc
orl
ljmp
mov
jge
inc
jl
inc
jle
in
pop
movb
xor
outsl
fsubrs
inc
fsubs
jnp
cwtl
stc
jb
shlb
sarl
leave
xor
sub
pop
movsb
sbbb
lret
jl
mov
adc
ja
loopne
fs
sub
pop
add
add
mov
sbb
std
and
xor
fadds
es
sbb
push
idivb
out
adc
shlb
add
icebp
in
jo
out
xor
adcb
push
mov
cltd
push
dec
mov
jnp
mov
push
out
shll
and
mov
es
aad
test
inc
sub
mov
leave
pop
mov
jl
cltd
jno
nop
push
mov
push
aas
add
inc
ss
add
aaa
add
xor
loope
xor
clc
xchg
sbb
out
adc
insb
push
enter
sbb
shlb
sbb
push
pushf
xor
jno
lret
test
push
and
mov
test
call
pop
pop
cmpsb
loop
test
aam
jp
sbb
mov
mov
ja
xchg
push
pop
inc
sarb
js
int3
dec
int3
xchg
and
leave
sub
sbb
dec
inc
out
mov
lods
shl
sbb
jnp
pop
lds
dec
push
leave
dec
adc
sub
cwtl
pushf
test
push
movb
in
stos
test
test
pop
leave
call
leave
mov
pop
pop
xchg
ja
int3
adc
shlb
dec
shlb
pop
push
mov
pop
mov
jge
sbb
adc
inc
dec
inc
dec
dec
test
mov
mov
int3
or
int3
sub
adc
cs
test
call
hlt
push
test
fs
enter
pop
jmp
daa
test
push
pop
mov
mov
dec
lock
inc
sbb
filds
test
push
adc
enter
pop
popa
in
mov
test
push
and
faddl
or
adc
dec
test
cwtl
inc
and
stc
dec
jecxz
roll
push
cmpsb
pusha
insl
xchg
xchg
sbb
test
xor
pop
test
and
xchg
xor
push
cmpsb
mov
add
test
mov
xchg
cmp
sub
aas
jb
sub
xchg
cmp
xor
cmp
xor
cmp
sbb
pusha
adcl
loopne
sbb
pop
pushf
ret
mov
addl
push
mov
mov
mov
lea
xchg
pop
notl
xchg
xchg
orb
xchg
aas
cwtl
rol
sub
pop
clc
dec
xchg
loopne
pop
andl
inc
pop
inc
jae
test
mov
xchg
inc
lahf
sarl
test
cmpl
xchg
ret
xor
aas
test
cmpsb
ss
pop
xchg
add
xchg
adc
xchg
adcb
mov
adc
jo
mov
repnz
xchg
aas
sbbb
subb
mov
enter
rcl
aad
xlat
fcomp
sbb
in
out
call
hlt
cmc
div
clc
stc
cmp
add
push
pop
or
orb
adc
sbb
and
and
es
subb
sub
xor
cmp
inc
inc
inc
inc
addb
dec
dec
push
push
push
adcb
pop
pop
pop
popa
bound
addr16
jb
je
jbe
js
jns
pop
mov
sbbb
jb
test
mov
pop
dec
xchg
mull
push
xchg
loope
xchg
mov
or
orb
add
push
movsb
mov
test
pop
and
add
mov
pop
adc
mov
sub
dec
mov
or
loopne
je
push
fiaddl
testb
pop
mov
mov
call
pop
adc
dec
mov
and
mov
cmpsb
xorb
inc
andb
xor
mov
jl
pusha
std
sub
dec
decl
cmpsb
sbb
mov
mov
add
ljmp
and
jne
jmp
add
fisubrs
add
insb
mov
andb
imul
mov
pop
fs
test
sbb
addb
mov
xor
subb
cmc
xchg
divl
adc
call
sbb
sub
adc
popf
mov
fildl
xchg
mov
bound
push
adcb
in
scas
enter
push
push
cmp
shlb
and
mov
in
popa
lahf
rcrl
or
lret
pop
mov
inc
shrl
fwait
bound
ss
mov
xor
and
mov
mov
subb
movl
mov
xchg
ja
test
adc
push
push
dec
loopne
cmpb
mov
loop
pop
ja
sub
or
pop
push
stos
testb
dec
addb
fnstenv
rcrb
rolb
js
outsb
lds
inc
leave
cmp
in
insb
or
test
inc
and
sub
mov
adc
jnp
xchg
je
daa
inc
cltd
test
cs
sbb
pop
pushf
mov
fidivrl
into
je
stos
cmpb
and
cmpb
rorl
in
cmp
cltd
sub
dec
adc
loop
pop
dec
and
fmul
das
loope
and
mov
leave
mov
mov
fs
addb
enter
ficomps
mov
stos
jge
mov
cwtl
pop
mov
or
inc
out
mov
pop
imul
xor
jbe
sbb
sbbb
push
sub
pop
cmp
je
ljmp
adcb
test
mov
mov
xchg
fisttps
pusha
test
mov
mov
mov
fwait
hlt
jg
add
mov
bound
pop
push
push
dec
cmp
lahf
mov
stc
mov
xor
aas
inc
scas
out
pop
fucomi
inc
mov
cld
out
or
sub
cmp
fcomps
dec
xor
jbe
sbb
orb
inc
lds
cmc
mov
fistl
push
orb
inc
insb
cmpb
gs
sbb
iret
out
jne
mul
xor
add
xchg
and
clc
push
fists
addl
mov
sbb
outsb
jo
push
nop
mov
notl
clc
adc
jo
xor
pop
bound
mov
in
lahf
inc
adc
pop
enter
inc
subb
pop
pusha
orb
and
xor
cld
icebp
jae
and
arpl
aad
or
pop
lds
fs
dec
lcall
sub
imul
adc
int3
pop
jo
pop
test
dec
orl
lock
adc
jae
loope
pop
adc
xor
sub
fwait
andl
dec
xchg
add
sarb
jb
push
mov
sbb
xor
dec
cmpb
xchg
or
stos
dec
movsl
clc
push
fadds
inc
cmpsl
inc
jne
outsl
punpckhwd
sbb
pop
or
mov
fadd
inc
stos
xchg
mov
imul
das
pusha
xorb
jae
mov
jp
aad
aaa
xor
jmp
inc
adcb
in
dec
lods
or
pushf
adc
cmpb
mov
and
mov
xor
lock
es
or
xlat
lahf
loopne
cmpsb
push
faddl
adcb
pop
or
imul
andb
inc
cmc
adc
sbb
andl
in
xor
cmpsb
addb
call
lea
sbb
insb
inc
pop
testl
or
in
push
jp
fcoml
pop
sti
das
pushf
aaa
mov
stos
sub
andb
fisubrs
or
and
mov
adcb
mov
test
inc
dec
call
inc
cwtl
mov
addl
dec
pop
adc
cwtl
insb
xor
mov
jae
ljmp
and
outsl
or
jmp
mov
idiv
addl
movsb
mov
jge
lods
mov
cmp
cmc
jne
inc
das
push
xchg
mov
pop
shlb
xchg
jle
pushf
xlat
sub
dec
rorl
arpl
repz
mov
mov
push
lods
insb
and
xorl
sub
movsb
fistpl
mov
sub
add
xchg
cli
andl
jmp
cld
cmp
test
leave
inc
or
rclb
and
lods
dec
lock
add
jns
pop
rorl
mov
rorl
jecxz
xlat
data16
xchg
mov
adc
ds
sbb
push
aam
xchg
sti
cmp
xchg
add
cmpb
lret
jb
adc
mov
clc
add
xor
push
xchg
pop
dec
cli
pusha
incb
pushf
insl
lds
and
icebp
add
outsb
shl
pop
xorl
and
xchg
imul
pop
cmp
cmp
inc
pop
arpl
push
pop
inc
pushf
jbe
inc
pop
in
dec
add
inc
cmp
andb
popa
adc
push
lods
push
jecxz
mov
shl
dec
xlat
jae
mov
cli
cmpsb
pop
stos
push
fs
sbbb
mov
adc
stos
adc
jo
insl
mov
add
adc
mov
jge
adc
in
fstp
in
pop
jo
xchg
addb
fs
jbe
addb
fisubrs
into
sbb
scas
push
fistl
arpl
leave
stos
add
ljmp
pushf
sub
mov
jecxz
subb
add
push
outsb
stos
icebp
fcompl
and
jp
aad
sub
cmpl
mov
stc
jecxz
insl
pop
popf
sarl
add
mov
addb
jo
lcall
movsb
and
fbld
fisubs
sub
inc
dec
test
cli
aas
cmpb
popa
dec
int
push
scas
sbb
fidivl
mov
fs
stos
addb
test
lahf
xor
pop
testl
gs
cmp
push
xorb
dec
repnz
std
orl
mov
data16
iret
test
push
pop
int
pop
and
inc
data16
and
sub
xorb
popf
mov
rolb
pop
ret
xchg
repnz
or
mov
cltd
push
dec
andl
sbb
pop
or
push
mov
dec
adc
sti
subb
sbb
es
inc
sahf
push
jae
inc
enter
dec
cwtl
lahf
outsb
dec
adc
mov
cltd
and
cmp
negl
lcall
stos
jae
cmpb
aam
and
push
pop
adc
shr
jp
adc
mov
cmp
sbb
in
js
inc
xchg
dec
lahf
orb
and
sar
jecxz
loopne
loop
cmpsl
lods
jle
xor
xor
mul
sbbb
aas
movsb
out
into
xlat
xorb
fldcw
xor
pop
push
xchg
int
popa
repz
add
adc
ljmp
aad
cmp
cmpsl
adc
sub
inc
outsl
popf
dec
fldz
subb
cmp
xchg
orl
cmp
movsb
mov
xchg
outsb
and
int3
adc
push
add
sbb
add
xchg
mov
andb
sbb
sub
adc
jmp
testl
andb
xor
fisttpl
rorl
mov
cli
push
fdiv
loope
and
outsb
out
adc
repnz
addb
mov
lds
adc
leave
mov
sahf
dec
push
xor
sbb
in
loop
cld
and
jae
mov
cmpsl
cmc
mov
into
add
es
add
xlat
push
mov
mov
inc
and
xchg
sbb
lcall
mov
js
dec
inc
in
out
mov
sbb
mov
in
mov
mov
adcl
sub
and
jnp
xchg
adc
orl
push
or
pop
shr
subb
cmpsb
jo
or
mov
ss
cmpsb
pop
xchg
jo
cld
mov
add
sbb
addb
aad
ja
out
addb
repz
faddl
fdivs
jl
iret
adcb
and
sbbb
les
cmpsb
xor
fisttpl
push
fdivrp
arpl
bound
jb
and
xchg
lods
shl
xchg
add
test
xchg
sbb
xchg
loope
add
mov
andb
ret
sub
and
rorl
call
or
mov
iret
dec
sub
int
test
lock
lods
cmp
call
xchg
fwait
jecxz
andb
jmp
js
bound
andb
shrb
rcrb
sbb
iret
jmp
mov
call
pop
cmpsl
xchg
cs
push
sahf
xchg
push
inc
inc
dec
inc
xorb
xchg
jns
mov
jl
sub
push
fstps
or
andb
test
cmpb
int3
push
fstl
inc
sub
sti
adcb
pop
mov
daa
cmpb
lret
mov
inc
ds
push
adc
bound
lods
fstpt
std
sub
fldl
clc
xchg
loopne
pop
add
cmp
mov
popf
cwtl
iret
shll
daa
in
cmpb
int
pop
into
aam
mov
jno
ljmp
jo
std
lret
dec
rcrb
addb
mov
sub
sbb
cmp
mov
movsb
or
adc
sbb
scas
and
mov
lods
or
subl
jne
xchg
mov
adcl
ss
inc
mov
inc
mov
add
rcll
xlat
aam
push
sub
fsubl
orb
or
mov
sbbl
jb
mov
sub
test
fldenv
data16
xchg
mov
push
out
in
std
and
fwait
sbb
dec
push
cld
roll
mov
repz
mov
cmpl
push
jbe
or
push
xchg
pop
xlat
pop
ljmp
pushf
movsb
iret
push
sbb
mov
lea
adc
xchg
lods
das
dec
cmp
scas
mov
cmc
jecxz
pusha
pusha
lea
sbb
mov
dec
inc
push
or
cmp
xchg
mov
xor
cmp
das
test
orb
pop
insl
pop
je
adc
fcompl
push
adc
loop
sbb
dec
cli
loopne
adc
es
or
stos
sbb
mov
mov
rcrl
out
mov
pop
pop
rorb
pop
add
sahf
jne
dec
andb
sbb
dec
aaa
repnz
sub
inc
test
mov
push
xor
mov
rolb
in
lret
add
cmp
xchg
jne
jbe
or
repnz
pop
orb
popf
imul
cli
mov
movsb
and
mov
in
xor
jno
daa
add
mov
call
gs
pop
pop
cmp
mov
jge
cmpl
adc
dec
mov
iret
mov
jnp
test
xor
imul
push
enter
add
repnz
pop
popa
inc
movsb
push
das
fimuls
mov
aad
sub
dec
test
and
cmp
bound
mov
mov
rdmsr
push
xorb
in
orb
xor
jnp
xchg
in
jne
int3
fistpl
mov
inc
jo
jge
sbbl
js
jle
adcb
lock
lods
int
inc
cmpl
dec
andl
cli
cmpl
insl
xchg
sub
pop
cmpsl
bound
imul
and
mov
pop
push
cmp
stos
sti
pop
cwtl
cmpb
add
xchg
inc
sbb
jl
push
cmp
cld
ficoms
sbbb
mov
repz
pop
xor
insb
in
xchg
aaa
pop
outsb
out
movl
rcrb
adcb
inc
data16
mov
orb
push
das
popf
into
lcall
jmp
jl
cli
sub
adc
pop
xchg
sbb
andb
mov
js
xor
and
insb
cmc
and
and
pop
lcall
xlat
jo
cs
shlb
adc
cmpb
sub
pop
das
mov
cmp
lret
shlb
or
mov
mov
pop
push
mov
fdivs
push
add
adc
dec
dec
sbbb
mov
mov
adcl
orb
scas
lock
xchg
popf
mov
js
loope
shll
xchg
jecxz
adc
and
xchg
sbb
mov
test
test
loopne
cmp
outsb
cli
mov
js
xor
push
adcb
jmp
xchg
arpl
clc
mov
add
ja
pop
add
dec
fildll
mov
cmp
mov
dec
push
bound
add
fnstsw
fs
lea
mov
insl
cmpb
aaa
jbe
jno
test
xchg
pop
pop
push
mov
mov
push
stos
add
in
cmp
dec
cmp
roll
sar
pusha
xchg
test
lahf
fisubs
adc
fsubrl
aas
xchg
pop
es
xor
inc
jmp
push
push
add
cmpsb
lds
mov
gs
xor
stc
inc
fcmovu
mov
pop
fnsave
mov
push
ret
inc
lods
leave
in
xchg
cmp
icebp
mov
pop
and
xor
dec
pop
adc
insb
js
jmp
ret
xor
cmpl
daa
sbbb
and
inc
or
mov
or
add
dec
add
xchg
xor
mov
jle
dec
ret
mov
daa
pop
and
fistps
out
jb
std
adcb
jae
cmpsb
jge
adc
mov
sbbl
push
inc
aam
push
mov
and
inc
mov
jo
xchg
mov
cwtl
outsl
ljmp
cmp
sub
push
lcall
or
loopne
or
icebp
xchg
push
push
jno
pop
pusha
daa
xchg
sbb
out
lahf
or
adc
gs
dec
addb
pusha
fiaddl
mov
ja
mov
inc
pushf
adc
sbb
test
mov
dec
outsl
movsl
sbbb
stc
jp
xorl
pop
or
cmp
int3
push
xchg
shlb
jns
sbb
flds
cmpsb
incb
sub
push
repz
push
mov
or
shlb
push
xor
mov
adc
andb
dec
sbbb
icebp
imul
jge
add
fisttps
add
xchg
add
repnz
enter
xor
mov
mov
lock
mov
mov
fwait
sub
rorb
cmpb
addl
enter
xchg
adc
cmp
bound
out
mov
mov
test
and
loopne
cs
xor
popa
test
test
jecxz
xorb
sub
repnz
ljmp
xor
cwtl
jle
insb
pop
push
out
andb
mov
xchg
and
pop
dec
mov
fdivr
xor
mov
mov
bound
lahf
scas
test
jmp
mov
arpl
mov
stc
mov
mov
addb
insl
mov
rolb
js
aas
out
mov
lahf
enter
xchg
int3
ret
cwtl
dec
add
movsb
adc
repz
movsl
mov
jo
adc
and
ds
out
mov
jb
movsb
sbb
push
xchg
jle
jecxz
addr16
jns
jae
andl
jo
fisttpl
movsl
cltd
push
addr16
jle
adc
xor
ss
and
divb
cmc
cs
adc
push
push
out
pop
mov
loopne
iret
orb
mov
cmp
sub
subb
outsl
mov
dec
xorb
repnz
aad
sub
or
mov
jmp
push
pushf
fmull
mov
negb
cltd
sbb
inc
xor
and
mov
mov
pop
inc
je
pop
sbb
pusha
pop
cwtl
adc
sbbb
jp
xorb
pop
xchg
pop
fldt
sbb
rolb
mov
scas
daa
inc
icebp
xor
jns
mov
fimull
insb
inc
or
xchg
ret
test
imul
or
inc
lcall
mov
add
aaa
test
test
inc
dec
repnz
rolb
mov
mov
int
jmp
call
pushf
xor
and
sub
sbb
jnp
xor
sub
icebp
popa
mov
xchg
sbb
pop
cwtl
andl
xchg
push
or
subb
jo
sbbb
mov
andb
pop
movsl
adc
push
stos
dec
sub
pushf
int
sub
xchg
std
and
out
leave
and
jno
lock
or
push
xlat
sbb
stos
fnstcw
dec
sbbb
in
lret
xchg
pop
dec
mov
fs
push
mov
ja
clc
xor
xchg
mov
cmpb
loopne
std
adc
add
inc
fnstenv
xor
sbb
test
pop
push
repz
sub
inc
int3
mov
insb
add
out
and
insl
andb
dec
loop
push
in
push
and
outsl
xchg
pmulhw
sbb
cmc
aad
loopne
cwtl
je
ss
push
jmpw
adc
pusha
outsb
mov
pop
fcoms
fst
mov
mov
addb
jb
mov
sbbl
sahf
xchg
lds
dec
pop
push
push
shll
imul
or
mov
pop
inc
push
fisubrl
xchg
adc
jmp
pop
sbb
add
in
lea
mov
ja
lds
jle
bound
xchg
outsb
outsl
mov
cmpsb
into
mov
mov
jo
and
jbe
pop
fsubrs
fwait
sub
cmp
movsb
cmp
loop
outsb
je
cmpsl
sub
cli
hlt
outsb
cmpb
mov
cmpb
dec
stos
xchg
sbb
repz
addr16
adcl
adc
push
sub
jae
mov
aam
push
rorb
arpl
out
faddl
sahf
xor
adc
cmp
mov
pushf
cmovbe
or
sbb
pop
ds
jp
inc
mov
shl
lock
stos
jmp
mov
mov
lret
repnz
or
jge
push
jns
sahf
outsb
ja
shll
pop
xchg
cmp
fldl
fs
or
dec
dec
inc
mov
mov
addb
ficompl
outsl
inc
test
pop
icebp
inc
add
adc
dec
add
jo
xlat
stc
cmpb
mov
repz
add
daa
faddl
stos
aam
cltd
cld
repz
and
push
movsl
push
sub
add
sbb
pusha
test
push
sbbb
or
xorl
je
xor
push
aaa
pop
fcmovbe
repnz
or
imull
cmp
jae
js
xchg
adcb
pop
mov
lds
mov
mov
mov
jae
addr16
push
sbbb
push
mov
js
cmc
sub
cs
mov
sub
arpl
and
js
out
sahf
pushf
jb
sarb
movsb
jno
mov
and
mov
sub
mulb
movsb
in
push
cwtl
dec
outsb
lock
clc
cmpsb
cmp
jne
sbb
jmp
js
sbbb
scas
cmpsb
push
lcall
add
mov
xchg
jmp
lock
testb
insb
movsl
or
aas
xor
inc
jecxz
push
movsb
lea
testl
loope
sti
xor
inc
insl
addb
outsl
or
pusha
push
cmpl
lds
lret
and
push
addb
mov
dec
int3
scas
enter
rolb
fs
xchg
fidivrs
push
push
call
cmc
in
jnp
dec
scas
cmp
push
fistps
pop
jb
aam
mov
lahf
scas
popf
mov
or
mov
test
stos
stc
mov
pop
sbb
std
inc
lahf
lret
inc
popa
pop
js
jne
addb
push
aaa
stc
adc
dec
pop
pop
push
add
mov
dec
subb
shll
mov
fisubl
hlt
pop
int3
cmpb
enter
pop
sahf
sbb
push
popa
or
orb
push
xor
push
add
fwait
jecxz
and
mov
sbbb
lods
aaa
fcmovu
repz
fcomi
fs
sub
out
xchg
or
insl
cmp
fildll
xchg
frstor
lret
aam
cmc
mov
test
add
mov
lds
js
pusha
cmp
incb
rcrl
lcall
pop
inc
popa
orb
loope
lods
es
test
pusha
cmp
cmpsl
testl
mov
mov
pop
mov
sbb
lods
mov
mov
pushf
rcl
jb
not
cmpb
jo
addb
jecxz
mov
push
xor
cld
pop
xchg
sbb
cli
data16
out
movsb
jecxz
pop
inc
cmp
jge
fisttpl
cmpl
xchg
sti
adc
xor
or
or
dec
push
in
addl
xchg
adc
insb
pop
aas
rcrb
jns
lahf
or
scas
xor
leave
and
faddl
mov
pusha
cmpsb
inc
or
int3
jl
pop
js
sbb
iret
lret
repz
xchg
pusha
and
call
xor
push
mov
sub
push
adc
out
aas
mov
pop
mov
xchg
sub
xchg
sbb
sbb
rorb
add
std
jo
lods
imul
scas
adc
add
fs
lahf
rcrl
jns
inc
mov
xlat
bound
fsubrp
sub
fs
cmc
xor
loop
insb
clc
cld
jl
std
push
mov
sub
xor
mov
aas
push
orb
xchg
jmp
stos
das
lods
sub
test
xchg
mov
ja
mov
jo
adc
fs
orb
add
push
mov
add
popf
imul
inc
sbbb
inc
aas
jo
mov
jmp
lahf
ss
dec
sbbb
cmpsl
mov
mov
sub
stos
addl
pop
call
push
pop
cmp
popf
jp
adc
ljmp
dec
dec
mov
pop
xorb
in
jl
jmp
sbb
sar
cmp
sbb
les
adc
adc
shll
mov
or
pop
je
xorl
mov
push
insb
fadds
and
xorb
out
push
adc
xorb
xchg
movsb
je
cmpb
daa
xor
sub
call
push
cmpsb
gs
in
mov
dec
adc
orb
mov
pushf
lock
icebp
movb
sbb
cmpb
cmp
iret
insl
rolb
mov
or
sti
mov
testl
adc
addr16
jbe
leave
sbbl
jge
sub
mov
mov
xorb
and
loopne
cs
or
or
mov
ja
fcompl
sbbb
mov
cmp
insl
orb
roll
incb
xchg
out
popf
or
add
stos
push
faddl
add
out
and
mov
mov
call
jae
ss
jb
mov
stos
jb
sbb
push
and
push
pop
andb
lods
std
pop
xchg
inc
xorb
in
xor
orb
pushf
xchg
cltd
mov
bound
inc
mov
xor
or
jo
insl
sbb
sbbb
outsb
cltd
loope
add
mov
mov
js
mov
popl
jo
cmp
pop
in
sub
dec
pop
add
sbb
xchg
jne
stos
push
cwtl
xchg
loopne
bnd
jo
or
mov
arpl
xor
sub
rcll
orb
lahf
popf
lret
inc
pop
icebp
sbbb
and
ljmp
add
sub
mov
jno
leave
xchg
ret
aaa
movsb
xorl
inc
cli
orb
jmp
push
xchg
cmp
stc
icebp
inc
or
in
subb
xor
xchg
cmpsb
mov
push
xorb
inc
popf
mov
mov
jo
adc
mov
mov
daa
xorb
call
icebp
pop
jp
addb
adc
fsub
je
icebp
sahf
pushf
ja
dec
mov
inc
addb
jne
push
loopne
andb
sbb
cmpb
int3
push
mov
cs
mov
sbb
mov
das
repz
lret
mov
in
movsb
jmp
mov
fidivl
jmp
data16
xorb
cmc
pop
mov
adc
mov
cmp
addr16
jnp
gs
jmp
mov
in
mov
and
ljmp
xchg
jl
lret
std
push
mov
arpl
push
xor
daa
sub
inc
mov
data16
or
jo
and
test
pop
mul
lods
popa
je
andb
ss
addb
or
pop
scas
arpl
adcl
sub
mov
cltd
ljmp
loope
and
jne
xchg
mov
jo
or
pop
cmp
cmp
incl
mov
push
adcl
inc
mov
and
arpl
rol
xor
or
add
cmpb
mov
push
push
mov
xor
sarb
cmpb
sub
dec
repnz
repz
or
arpl
cmp
stc
pop
mov
lcall
sub
dec
imul
shrl
adc
movsb
pop
adc
cmp
out
div
adcb
out
add
mov
add
cmc
notl
push
shlb
mov
mov
xchg
js
stc
jmp
dec
mov
mov
adc
addb
stos
cmp
jmp
push
mull
push
xchg
cmpsb
push
pop
cli
enter
and
lea
rep
adc
mov
sbbb
loope
pop
cmp
fcmovne
xor
test
sbb
aaa
ljmp
adc
subb
shlb
outsl
lahf
daa
sub
jmp
outsb
pop
xor
ja
lods
sbb
mov
pop
fildl
lcall
inc
andb
sarl
xchg
cmp
rcrb
lret
sbbb
out
jno
enter
sub
loopne
mov
xlat
mov
and
andb
scas
js
pop
hlt
sbb
mov
setbe
loope
cmp
lds
xorb
bound
xchg
orb
fsubrp
sarl
pushl
js
sti
jno
inc
divl
mov
adcb
sbb
add
sbb
xchg
je
sti
sbb
ljmp
dec
mov
repz
orb
jge
cmpb
add
addr16
cmpl
clc
shlb
xchg
stos
sub
push
mov
xchg
ja
iret
lea
dec
mov
decl
jae
sub
adc
adc
push
mov
mov
fisubs
clc
pusha
inc
fiaddl
sbb
shrb
lret
cld
sub
jb
daa
sahf
and
inc
cwtl
push
in
ficomps
mov
arpl
lock
jl
adc
je
insb
lcall
pop
cmpsb
mov
sahf
xchg
inc
ljmp
imul
sub
adc
mov
addl
int
jb
cmp
out
clc
aam
jne
sbbb
or
pop
inc
outsl
xchg
aaa
mov
out
mov
mov
and
ret
bound
cmpb
int3
jo
sbb
test
and
ss
xor
imul
add
cmp
pop
mov
subb
scas
adc
insl
insb
filds
fsubr
rcrl
lods
jbe
fnsave
xchg
hlt
adc
arpl
dec
inc
xlat
loopne
sahf
cmp
mov
out
add
arpl
push
in
icebp
adc
push
cmpb
imul
int3
mov
add
pop
xchg
lahf
mov
mov
sbb
mov
xchg
inc
aaa
jl
orl
inc
and
pop
sbbb
cmp
sub
out
push
and
jbe
jp
mov
mov
adc
aad
in
jbe
scas
cmc
or
xor
fsubrl
cmpb
pop
out
mov
lret
gs
sti
orb
aaa
orb
and
jp
jbe
orb
dec
in
enter
loop
dec
lret
insb
jecxz
push
dec
xchg
mov
sbb
jp
xor
pop
out
pop
add
lahf
push
pop
mov
xor
mov
xchg
inc
fadds
btc
xor
dec
cmpb
test
add
rcl
mov
sbb
nop
jp
nop
dec
mov
sbb
jecxz
shlb
mov
lahf
test
movsl
cmp
or
addb
jp
mov
cmpb
cs
or
sub
xchg
mov
outsl
adc
or
push
aad
jns
jb
mov
shr
or
sub
or
movsb
or
dec
xor
adc
movsl
or
adcb
sub
xchg
aam
out
imul
fdivrp
cld
inc
sbb
ljmp
pop
pop
testb
xchg
or
popf
and
in
add
inc
jns
sbb
mov
ret
xchg
jge
and
sbb
fs
cmp
cs
push
mov
jbe
jb
cmp
xchg
mov
sarl
cmpb
daa
add
jae
sub
les
jge
subb
inc
xchg
push
movsl
fs
mov
adcb
stc
iret
inc
pop
pop
out
push
xchg
ret
xchg
shlb
add
mov
dec
xorl
outsb
insb
andb
das
loopne
mov
out
inc
mov
jo
xorb
ror
sub
xchg
cmc
popa
push
adc
xchg
push
rolb
orl
push
test
pusha
fxch
mov
ja
stc
cmp
idivl
jb
add
sub
xor
and
mov
mov
inc
xchg
mov
inc
and
js
jge
ds
es
iret
or
mov
xlat
cld
addb
pop
decl
sar
shufps
repz
es
popa
push
add
xorb
jl
orl
adcb
mov
jo
push
std
push
insb
pop
lcall
scas
push
adc
fstps
pop
shll
cli
data16
jnp
lcall
popf
xchg
mov
jmp
mov
mov
sbb
cmp
mov
xchg
insb
mov
jl
subb
and
xor
push
movsl
aaa
jne
sub
aas
inc
incl
pop
push
xchg
repnz
dec
nop
test
std
and
ret
or
adc
pop
mov
pop
popa
lahf
data16
imul
pushf
cmpsw
cmpl
xchg
jne
filds
jl
push
cmpb
inc
addb
addr16
mov
fildll
or
mov
lahf
mov
fidivrl
cmp
addb
addr16
fs
mov
fdivs
icebp
sbb
pop
xadd
lds
xorb
sub
inc
data16
scas
and
out
test
jmp
add
packssdw
sub
pop
xchg
push
mov
mov
add
mov
jbe
add
sti
mov
mov
xchg
jne
lea
or
adc
pushf
jnp
cld
sbbl
popa
xchg
lahf
and
jae
xchg
sbb
jg
rorl
loopne
jmp
subb
xchg
pop
push
mov
js
xorb
cld
mov
xor
xchg
mov
jno
inc
mov
or
cmp
mov
adc
and
arpl
cwtl
cli
xor
andb
pop
mov
jmp
and
fmuls
dec
or
mov
outsb
sub
jbe
cmc
stos
sub
shlb
or
pop
cmp
jno
xor
mov
lock
jnp
xorb
and
andb
or
dec
cs
add
fisubl
xchg
cltd
shrl
jle
dec
push
sub
mov
repz
mov
adc
adcb
out
test
fldt
sub
leave
add
pop
rcrb
stc
loopne
sbb
lahf
fisubrl
testb
je
dec
mov
and
xchg
push
xchg
outsb
stos
cmpsb
mov
popa
in
adc
pop
mov
add
pushf
cld
jl
idivb
dec
popa
push
inc
xchg
dec
addr16
push
fidivl
or
filds
dec
xchg
dec
subb
xor
inc
cmp
mov
pop
in
inc
dec
jb
jmp
or
add
jmp
mov
into
test
mov
ja
inc
cmpsb
fisubs
dec
xorb
stos
jl
stos
push
mov
rcrb
incl
mov
adc
cmpb
pusha
stos
pop
aad
or
sbb
mov
cwtl
inc
add
cmp
xchg
mov
and
ret
cwtl
dec
loopne
leave
dec
cmpb
repz
dec
sbbl
xor
stos
pusha
cmp
push
fldenv
sbbb
jl
aas
mov
sbb
rorl
pop
add
loopne
inc
imul
fildl
outsb
mov
stc
mov
imul
pop
mov
orb
js
popa
pop
mov
jb
int
aam
ret
inc
mov
call
mov
jle
incb
push
scas
push
fisubs
cltd
insb
hlt
mov
es
or
loop
adc
mov
je
shlb
or
jmp
pusha
mov
out
inc
popl
in
dec
lcall
test
lock
dec
dec
std
xor
pusha
adc
cmp
adc
test
or
leave
je
sbb
lds
sbb
mov
stos
sub
addb
cmp
out
inc
fildll
addb
mov
stc
andb
add
inc
mov
stc
pop
addl
fnstenv
push
add
fsubrs
add
mov
xchg
mov
leave
inc
add
or
gs
orb
xchg
push
sbb
nop
adc
cmp
inc
dec
movsb
hlt
add
ucomiss
pusha
xor
dec
outsb
ror
xorb
jno
or
sub
adc
faddp
sbbb
aaa
mov
jnp
movl
inc
sbb
adc
adc
cmp
std
test
addb
or
jbe
sub
ja
jmp
mov
cmpsb
mov
loop
push
outsl
or
adcb
mov
pshufhw
mov
int3
jecxz
sub
xchg
adc
cmpsl
subb
stos
addr16
movsl
jne
adcb
lahf
jo
jmp
cltd
aas
cli
adc
xorb
push
push
xchg
popa
fadds
xchg
xchg
pop
inc
rorl
pop
push
jp
cwtl
stc
sub
fistpl
pop
sub
adc
push
xchg
cmp
dec
aas
xchg
and
test
pop
xchg
addb
add
test
data16
leave
fwait
pop
pop
lahf
fdivrl
divb
adcb
hlt
push
pop
mov
and
cmp
dec
inc
adc
sub
ret
or
aam
mov
add
push
pop
mov
mov
and
pushf
flds
push
xor
pop
sahf
insl
push
aam
shlb
int3
ficoml
out
mov
push
adc
inc
mov
rcrb
push
sbb
sbb
cmp
out
jb
imul
mov
jp
inc
movsb
addr16
sahf
icebp
sub
inc
sub
inc
leave
hlt
xorb
arpl
stc
sahf
je
filds
jns
mov
lahf
int3
loopne
inc
and
movsb
push
add
sbb
lods
cmp
mov
andb
negl
jle
subb
incb
mov
pop
andb
sbb
imul
addb
xchg
sbb
jo
adc
dec
mov
sbb
incb
sbb
adc
cli
addl
inc
shll
iret
pop
inc
mov
pushf
mov
or
mov
ljmp
add
mov
lcall
cmpsl
pop
jmp
and
je
add
jmp
jle
adcb
xor
in
pop
iret
std
jecxz
xchg
dec
stc
mov
add
push
and
pusha
inc
cmpsb
icebp
ja
subb
and
pop
addb
fisubrl
lea
shlb
je
push
dec
orb
subl
imul
lret
cmpb
fistps
and
add
mov
mov
adc
jl
push
cmc
clc
dec
sbbb
lds
addb
lret
cmp
leave
loope
orb
cmp
pop
inc
inc
adc
add
leave
pop
xor
sahf
jp
arpl
adc
sub
ljmp
das
xor
cli
sub
dec
in
or
cmp
and
jl
mov
popa
inc
nop
push
push
int3
push
roll
hlt
and
ljmp
fadds
pop
pop
dec
and
push
mov
xchg
rolb
gs
rolb
cmovb
and
xchg
scas
adc
push
ret
mov
jne
movl
ret
lea
fsubrl
fwait
ret
mov
inc
inc
test
push
stos
mov
mov
andb
mov
mov
adc
push
cmpb
cmpb
jo
inc
lods
xchg
inc
xchg
and
adc
pusha
sbb
insb
sub
jns
lret
sbb
dec
xchg
lcall
inc
aam
inc
into
mov
ds
push
cmpb
movsb
lret
sti
cmp
dec
loop
adcb
mov
fdivp
push
sbb
add
hlt
insl
cmpb
popl
in
repnz
inc
popa
frstor
xchg
imul
dec
xor
fcompl
jge
mov
xchg
sub
push
and
pop
subl
daa
flds
fmuls
cwtl
adcl
jbe
sbb
andb
adc
and
push
mov
add
cmp
test
out
div
hlt
andb
cmpsb
jp
xorl
xchg
pusha
jae
in
mov
orb
sbb
mov
repz
push
inc
mov
arpl
hlt
fldl
jecxz
movb
in
push
add
adc
rcrb
add
movsb
jecxz
jno
ja
lcall
sti
adcb
dec
icebp
and
lods
jl
leave
mov
jns
lahf
dec
sbb
mov
out
push
mov
adc
xor
loop
xor
mov
pop
add
push
addr16
andl
inc
outsb
loopne
pushf
out
andl
push
xchg
shlb
jmp
adc
push
imul
leave
inc
mov
pusha
dec
pusha
push
negl
addr16
jge
in
mov
pop
lods
out
out
sub
mov
and
mov
fcmovb
or
andb
inc
xchg
leave
movsb
xorb
xor
cmpb
adc
subb
sbb
mov
dec
andb
push
lcall
pop
shr
adc
cmp
mov
pusha
add
adc
cli
mov
cmp
cmpsb
bound
test
jns
orb
test
addb
aaa
ret
xchg
and
mov
enter
aam
pop
sbb
scas
pop
testb
loopne
xor
cmpsl
mov
imul
fsubr
dec
adcb
scas
xchg
lock
and
mov
push
into
fwait
cmp
nop
std
pusha
pop
movl
adc
pop
lahf
rcrb
cmp
int3
arpl
mov
dec
bound
stc
or
mov
fldt
std
add
ja
into
cmp
sub
jbe
cld
js
sub
cmp
and
mov
mov
dec
dec
dec
sar
js
sbbl
sub
ss
daa
mov
or
movsb
mov
gs
loope
mov
and
pop
xor
dec
cmp
sti
arpl
insl
sub
pop
inc
lret
sbb
mov
cmpl
xchg
lahf
call
subb
loopne
orl
xor
sbb
pop
stos
enter
arpl
cmp
xor
subl
xorb
xor
stc
rorl
addb
cmp
adc
daa
pop
add
jae
bnd
hlt
les
inc
adc
negl
cwtl
dec
rcr
add
andb
sti
adc
dec
xor
mov
pusha
and
jae
cli
push
andb
mov
lock
mov
or
scas
ss
and
leave
test
inc
jae
mov
xor
pop
jne
mov
inc
xor
jb
rcl
sbbb
mov
hlt
addb
mov
data16
xor
pusha
popf
mov
daa
insl
dec
addb
sub
test
xchg
jae
leave
dec
mov
andb
ret
rcl
push
push
addb
scas
out
adc
sbb
cmp
jp
orb
sub
pop
sub
subb
aam
sbb
mov
jns
cwtl
mov
cmp
js
dec
cmc
jb
out
pop
cwtl
sbbb
sub
cmpb
sub
cmp
mov
repnz
fsubrs
pop
pop
insb
push
testb
mov
cld
xor
mov
lahf
jno
or
popf
sub
pop
or
imul
clc
or
sbb
pop
addb
pop
sub
mov
outsl
test
popf
vmread
xorb
mov
icebp
and
inc
dec
sub
sbbb
cltd
xchg
dec
cmp
psubw
sti
cmpb
scas
xor
jle
ss
mov
mov
cmp
jbe
mov
clc
lock
test
add
es
or
fwait
adc
push
in
add
xorb
dec
loopne
fildl
sbb
clc
xchg
aad
adc
jb
mov
xor
mov
cmp
movl
or
push
sbb
sub
ret
rclb
roll
nop
cmp
mov
and
lock
xorb
es
orb
lcall
mov
mov
test
add
out
jne
mul
jnp
stc
lahf
cmp
icebp
push
cmp
shrb
xchg
out
lock
es
push
adc
test
out
push
xlat
adc
fs
mul
imul
or
stos
addr16
ljmp
ret
inc
sbbb
aad
lahf
test
cmp
jne
add
incb
and
and
fwait
bound
pusha
movsb
fcomps
and
loope
in
or
push
add
push
stos
orb
fs
std
test
nop
mov
adc
sbb
pushf
xor
mov
orb
ljmp
xchg
in
and
xchg
dec
clc
inc
adcb
xchg
add
mulb
std
adc
pop
faddl
call
pop
sbb
push
outsl
loop
push
jb
addb
cld
push
cmpb
popa
rolb
adc
mov
frstor
andb
xchg
pop
jns
fiaddl
fistpl
sahf
movsl
loop
xchg
xlat
popa
idivb
cmpb
ljmp
cmp
add
jo
test
push
jp
les
rcrb
adc
jne
xchg
sub
push
cmpb
and
adc
add
cmp
adc
mov
inc
or
add
mov
push
inc
adc
outsl
orl
fsubrs
int
inc
movb
pusha
out
cli
mov
adc
je
js
subb
iret
or
int3
in
xor
or
movsb
cmc
std
add
test
sbb
push
aad
and
inc
dec
cwtl
mov
daa
pop
jecxz
rol
iret
orl
inc
sub
scas
mov
addb
add
cmpb
pusha
jnp
cmp
repz
mov
jo
bound
mov
push
xor
cmpb
inc
or
or
xorb
jbe
cli
mov
mov
out
rcrl
jmp
gs
pop
lods
ljmp
orb
pop
mov
leave
data16
mov
int
popa
or
sub
stos
add
cld
mov
add
xor
inc
xor
inc
cmpsb
adc
andb
fs
outsb
in
data16
cmpsl
movsl
xlat
mov
adc
subb
enter
mov
int
inc
adc
pop
nop
test
icebp
insl
faddl
xlat
mov
jle
ljmp
iret
popa
cwtl
insb
xchg
das
add
or
mov
inc
clc
jmp
and
jne
cmpsl
push
jns
fnstsw
sbbl
loopne
xchg
push
pop
andb
hlt
fisttps
jmp
call
stos
andb
loope
orb
fnsave
pop
leave
inc
addb
or
adc
mov
cs
or
addb
cli
push
das
js
cwtl
sahf
and
leave
subl
int
ss
shrb
xorl
add
test
and
jbe
in
test
jmp
stos
dec
mov
sbbl
jns
loopne
dec
subl
and
ja
cmp
fcomps
orb
mov
aam
mov
test
inc
aam
movsl
sbbb
subl
lods
roll
sbb
push
repz
inc
imul
out
cwtl
mov
lcall
sub
sub
cmp
shll
sbbb
inc
repz
xorb
arpl
dec
and
cmp
test
mov
cmp
push
dec
lahf
stc
addb
lock
xchg
xchg
inc
inc
divb
idiv
mov
movsl
cltd
repnz
mov
aas
pop
add
lahf
lds
jb
je
xorl
push
insb
dec
jbe
sub
xlat
cmpsb
ret
shrb
repnz
and
rcrl
cmp
add
sub
xor
addr16
mov
in
pop
mov
adc
test
daa
cld
scas
jno
aaa
sbb
xchg
out
or
cmpb
dec
mov
mov
and
lahf
pop
rcr
fadds
cltd
pusha
cmc
xorb
and
subb
cmp
jnp
js
adc
inc
push
mov
fildll
jle
clc
mov
jmp
mov
sub
sahf
insb
jb
adcl
mov
je
xchg
rcrb
pop
dec
insb
sub
cmp
aad
jns
addl
push
or
adcl
bound
dec
loopne
cmp
cmp
push
divl
mov
mov
sub
and
and
test
ds
ret
mov
mov
dec
push
jbe
mov
adcb
xchg
sub
or
out
subb
cmc
das
xor
xchg
sbbb
add
jp
dec
arpl
mov
pop
push
cmp
testl
adcl
pusha
xorb
mul
push
scas
arpl
xor
adc
mov
and
jl
dec
push
and
das
addb
sub
xchg
jnp,pt
pusha
lock
and
xorl
sbb
popa
das
test
jns
mov
pop
cmp
mov
dec
orl
hlt
enter
cmp
pop
clc
push
mov
jl
ss
add
popa
insl
lret
pusha
adcb
lock
aaa
add
jmp
dec
and
inc
and
std
movsl
lods
bound
orb
cs
sti
enter
ds
xchg
sbb
lods
out
push
fcmovnb
inc
add
jbe
adc
pop
xchg
call
daa
addb
push
loop
lahf
mov
cmpb
fiaddl
cmc
lret
idivb
fs
mov
fnstenv
ds
add
dec
inc
outsb
shrl
mov
adc
mov
mov
add
mov
cltd
mov
pushf
and
sub
das
xchg
xor
inc
out
cmpl
fidivrl
aad
mov
nop
addb
insb
mov
mov
cli
jo
jle
mov
andb
pusha
xchg
das
pushf
pushf
daa
pop
cmpsl
orb
sub
inc
out
nop
clc
add
test
mov
or
idivb
mov
fcompl
pop
out
orb
loop
cmp
fwait
jbe
push
ja
pop
xchg
adc
or
cmp
pusha
lds
andl
adc
jle
xorb
push
rcrl
gs
xlat
test
stc
push
mov
stos
add
cmc
jns
and
add
dec
xchg
add
addb
mov
or
lahf
loop
and
lods
mov
pushf
push
lcall
je
sbb
and
jae
jo
loop
xchg
mov
xor
sub
sub
mov
sub
gs
icebp
iret
loopne
pop
orb
scas
mov
push
sub
std
insb
cmpb
xchg
enter
out
cmpsl
pop
xorl
sub
cmc
mov
xchg
dec
add
loopne
or
push
sbb
and
cmp
sub
rcr
inc
cmpl
mov
icebp
and
cmp
jmp
stos
inc
mov
insb
sbb
js
out
loopne
push
insl
adc
das
in
or
push
cmp
in
aas
rol
ficoml
xorb
cmp
rolb
rcrl
subl
imul
xorb
cmp
pop
loope
repz
or
fmull
cmp
cmpsl
sar
jle
loopne
dec
pop
mov
mov
lods
ret
jecxz
ds
loopne
xchg
pop
out
sbb
lahf
cmp
imul
pushf
icebp
cmp
push
jmp
jns
data16
out
xchg
gs
mov
movsb
loopne
test
pop
xor
out
fs
mov
iret
sub
jne
mov
xorb
stos
pop
faddl
xorb
sbb
lahf
fimull
mov
stc
sbbb
sub
jge
stos
or
adc
xchg
mov
lea
adc
aad
stc
lods
pushf
sbb
sub
xchg
test
loope
sub
cld
insb
mov
sbb
insb
popa
js
adcb
aas
jb
adc
mov
fstps
mov
jmp
fstpl
inc
aas
in
mov
or
xor
and
leave
xchg
ret
xchg
lahf
sbb
pop
jge
sub
cwtl
mov
aaa
xchg
xor
int
mov
cmp
int3
and
jo
pusha
movsb
cmp
xchg
mov
or
xchg
cmp
retw
je
lock
orb
stos
xchg
gs
shlb
and
sub
mov
stos
test
fbstp
jl
es
add
push
aas
gs
mov
xchg
mov
shll
xchg
enter
xor
dec
cmp
push
les
rolb
adc
mov
mov
mov
cmpl
dec
dec
dec
gs
shll
mov
push
testl
mov
into
outsl
jae
jno
inc
pop
cmp
jb
xchg
jp
sbb
pushl
enter
cmpsb
daa
fxch
or
bound
add
mov
add
ja
add
xchg
sbb
mov
mov
and
and
arpl
ret
cmp
mov
sbb
pushf
ret
push
addb
out
std
enter
add
sbb
out
into
cmc
adc
in
mov
xchg
into
in
xchg
in
aam
mov
into
arpl
inc
add
ja
mov
arpl
out
inc
ret
mov
mov
adc
mov
enter
movsb
lret
mov
mov
enter
stos
jecxz
movsb
mov
mov
mov
mov
dec
xchg
movsb
ret
pop
sahf
sbb
mov
enter
xchg
sahf
jae
mov
mov
out
mov
sbb
dec
scas
lahf
xor
sbb
mov
lods
cwtl
mov
mov
pusha
scas
inc
stos
mov
or
movsb
mov
in
mov
mov
enter
dec
xchg
stos
stos
jge
aaa
sahf
xchg
or
push
xchg
lods
movsb
inc
je
loopne
lods
mov
xchg
repz
or
movsl
mov
decl
dec
stos
movsl
mov
cwtl
movsb
popf
mov
out
cwtl
mov
lea
mov
sahf
xchg
xchg
jnp
sahf
popf
xchg
fwait
testb
cmp
xchg
lahf
mov
pop
mov
add
lea
xchg
data16
ss
xchg
pop
xchg
adcb
lea
stc
dec
into
nop
xchg
sbb
out
xchg
xchg
pop
xchg
pushf
cmp
lea
mov
mov
xchg
xchg
jg
cwtl
loope
addr16
jg
addb
ja
cs
push
jmp
int
xchg
jns
cmpl
mov
add
rol
rcl
mov
mov
addl
lods
unpcklps
rclb
or
jbe
pop
roll
andb
jmp
insb
adc
mov
jo
ss
mov
repnz
xchg
and
call
xchg
js
popa
ret
adc
push
sub
ret
dec
mov
imul
subb
test
adc
xchg
pop
push
or
mov
cmpb
inc
jmp
and
lea
lahf
sahf
lods
clc
sbbb
xchg
mov
repnz
pop
aaa
call
test
iret
push
subb
cmp
or
scas
loopne
lds
insl
in
xchg
fldl
out
add
cwtl
and
enter
cs
pop
loopne
dec
pop
inc
fucomip
bound
imul
cld
adcb
cmp
sbbb
cs
jo
subb
in
or
cwtl
sbbb
mov
adcb
xor
cmp
and
push
fnclex
mov
pop
jp
insb
lea
xlat
jg
aaa
scas
lods
push
das
cmp
jmp
je
and
dec
adc
jne
cs
pop
lods
jl
jb
or
popf
mov
mov
pop
xchg
push
push
mov
js
mov
sbb
andb
lahf
add
push
xchg
int
xchg
js
sti
fstl
mov
dec
mov
dec
faddp
pop
test
js
or
add
xchg
or
jb
addr16
push
mov
pop
lret
out
bound
jne
and
mov
in
pusha
sub
pop
cmp
pushf
fisubs
inc
xlat
scas
cltd
dec
clc
mov
lcall
cmpl
push
pusha
sbb
icebp
imul
addl
pop
adc
fstl
lds
out
mull
movsb
sbb
loope
mov
jg
or
and
adc
lahf
adc
and
into
push
inc
pop
outsb
orb
mov
cmpb
dec
adc
xchg
cmpb
sub
or
lcall
in
inc
shlb
sbb
inc
subb
sub
adcb
or
sbbb
outsb
pop
ljmp
scas
add
lods
sbb
pop
imul
and
sbbb
dec
adc
cmp
cmp
lret
out
jl
insl
sahf
xor
pop
negb
subb
sub
int3
mov
into
dec
push
das
mov
subb
out
push
jp
cli
aaa
subb
push
push
sarb
lock
out
jnp
subb
repnz
mov
movsb
sbb
pushf
cmc
cmp
jecxz
imul
orb
cmp
mov
mov
xor
pop
andb
pop
dec
add
push
inc
push
and
fsubrl
xchg
push
flds
inc
sub
jp
testb
ret
push
int3
addl
cmpl
push
sahf
shlb
popa
adc
add
cmp
sbb
hlt
ret
sahf
idivl
rcl
mov
or
push
adc
xchg
addr16
sti
mov
push
ja
dec
cld
mov
das
push
nop
mov
jg
cmp
js
cmpl
jns
pop
addr16
jp
popf
adc
or
and
in
andl
js
shr
jge
push
out
inc
jbe
leave
dec
jl
data16
adcl
sub
pop
and
popf
jg
push
fcmovbe
jno
mov
fbstp
addb
jle
sahf
push
mov
adc
pop
add
andb
mov
dec
call
mov
clc
cmp
adc
addw
pushf
call
and
nop
or
js
mov
popl
ret
mov
andb
xchg
xchg
out
push
test
adc
mov
mov
movsl
sub
jg
and
mov
xor
xchg
fimuls
adc
sbb
fidivl
fmuls
aaa
dec
sahf
inc
scas
cli
inc
or
mov
cwtl
inc
sbb
or
int3
pop
lcall
mov
xchg
ret
jae
pop
jo
shlb
jnp
lcall
std
sub
popl
ror
add
pop
adc
jmp
add
dec
mov
scas
orb
int3
mov
mov
cmc
cmp
test
add
fwait
pushf
mov
ja
aam
dec
mov
stos
rcrl
out
les
xor
call
adcb
cmp
pop
fcomip
sbbl
loopne
cld
push
psubsw
inc
jp
addb
sar
subl
adc
adc
jns
inc
orl
inc
andb
cmp
subb
ret
push
xorb
mov
movsb
in
inc
loopne
rclb
sbb
mov
sub
aas
rclb
stos
mov
mov
aam
rorl
int
adc
or
pushf
mov
in
push
sub
mov
mov
cmpsl
adc
cld
mov
push
push
into
xlat
add
mov
adcl
dec
mov
sub
sti
or
mov
mov
stos
imul
sub
xor
sub
xor
inc
adc
push
xlat
cmpsb
dec
roll
bound
lret
mov
ljmp
jbe
xchg
dec
xor
sbb
cmp
pusha
out
movsl
sub
or
xchg
sahf
sbb
enter
addl
pop
lcall
dec
sbbb
cltd
inc
orb
repz
jne
inc
inc
push
pusha
test
lds
mov
xor
insb
int3
roll
xor
sub
lods
jmp
jp
mov
inc
or
push
inc
or
and
in
icebp
fsubs
xorb
adc
test
xlat
cmp
dec
xchg
repz
push
mov
xchg
and
sbb
xchg
xchg
movb
push
insb
and
iret
xor
cltd
push
mov
icebp
loope
pop
jns
mov
pop
or
faddl
mov
out
clc
pop
fcomp
inc
add
cmp
stos
mov
xor
cmp
repnz
add
jp
sahf
mov
mov
inc
ja
lret
orb
outsl
xorb
inc
push
add
clc
jg
pop
xlat
fwait
push
mov
fists
mov
sbbb
jbe
jno
dec
fwait
push
mov
cmpb
pop
jo
pop
dec
adc
push
lods
jno
add
pop
inc
push
mov
xor
insb
pop
xchg
xchg
in
or
loopne
and
dec
mov
and
ss
pushf
cmpb
cmpsb
push
cmpb
sub
and
stos
mov
push
repnz
pop
jne,pn
stc
inc
mov
sbb
jb
push
dec
pop
loopne
xchg
or
mov
hlt
out
outsb
sbbl
shlb
pop
or
in
mov
out
sub
sub
mov
push
gs
xorb
ret
fcoms
mov
add
mov
add
popf
cmp
mov
sub
call
push
cmc
or
insl
loope
out
inc
sbb
add
add
fiaddl
into
pop
inc
xor
mov
add
testl
mov
push
ffree
pop
mov
scas
push
jmp
jae
pusha
and
out
inc
insb
test
push
mov
adcl
lret
pop
scas
das
dec
ss
push
into
and
ljmp
dec
xchg
fsubrl
cmpsl
dec
iret
push
repnz
cli
sbb
mov
jge
pushf
mov
xlat
icebp
cltd
push
imul
sbbb
les
aam
int
jp
push
inc
cmpsl
mov
pusha
iret
xchg
dec
and
mov
lds
sub
inc
and
addb
cmp
lods
mul
pop
dec
popa
ficomps
nop
xor
les
loope
cmpb
out
sahf
lret
push
ja
rorb
bound
mov
js
sbb
hlt
andb
ja
sbbb
movsb
std
jmp
dec
sbb
mov
jl
subb
jae
ljmp
pop
out
pop
fmul
dec
xor
xor
mov
inc
push
outsl
idivl
lcall
test
les
loopne
and
push
fcmovu
shlb
jp
repz
xor
mov
iret
out
divl
faddl
push
push
jbe
cmpb
lods
jmp
pop
mov
ds
cmp
push
ret
push
mov
mov
pop
jg
ja
lret
call
push
fs
out
es
push
cld
sub
add
cli
cmp
in
push
xchg
fistpl
data16
inc
mov
idiv
inc
add
cmpb
pusha
xchg
bound
sub
xlat
incb
imul
and
adc
xchg
outsb
mov
push
mov
sbb
idivl
ja
ljmp
bound
add
ss
jecxz
call
xor
xlat
mov
sahf
add
data16
mov
cmp
clc
add
ljmp
out
push
cld
ret
lods
ds
xchg
test
rclb
xchg
adc
cld
mov
inc
sbb
adc
cmpsb
fisubs
mov
xor
mov
movsl
in
cmp
loopne
jne
cld
jg
js
mov
movsb
add
ja
add
dec
adc
adc
fnsave
inc
out
adc
ss
orb
mov
inc
stc
movsb
mov
ret
pop
mov
es
add
ret
enter
into
aaa
cmp
daa
test
xor
xor
jge
or
cmpb
inc
scas
xor
or
call
push
sbb
mov
aam
pop
xor
sbbb
or
cld
mov
movsb
addr16
bnd
and
mov
mov
adc
mov
movb
mov
ret
fbld
sahf
jg
rorb
mov
jns
arpl
inc
insl
jecxz
hlt
dec
jge
jae
cwtl
adc
mov
enter
fcoms
mov
fwait
cltd
lret
xor
inc
xchg
aam
xor
jae
scas
xchg
out
dec
inc
mov
repz
movsb
inc
sti
mov
sub
add
adc
in
inc
mov
int
test
mov
pop
add
pop
rcrl
cmp
fs
data16
cli
xor
cmpl
or
mov
mov
loopne
xchg
movsl
call
loop
into
fs
adcb
mov
and
leave
imulb
jl
mov
or
cltd
xchg
mov
fnstenv
push
stc
or
js
cmp
mov
inc
je
lea
out
rcrl
xchg
data16
add
xlat
inc
and
lods
mov
mov
popa
out
jb
enter
cwtl
inc
add
xor
imul
jo
cmp
dec
sbb
mov
pop
jae
imul
sub
or
dec
jns
orb
cltd
sbb
in
clc
cmp
jno
and
jl
enter
push
shlb
pop
leave
faddl
xor
mov
push
mov
jecxz
outsb
imul
cmp
and
xchg
add
loopne
adc
mov
mov
mov
xor
jmp
cmpsb
mov
dec
orb
jg
enter
nop
add
pop
pop
mov
push
adc
lret
sahf
or
xchg
es
jns
xor
sbbb
and
xchg
sub
dec
into
mov
shlb
incb
mov
add
mov
rcr
jle
loope
ret
addb
xchg
fimull
loopne
push
and
add
pop
xchg
jo
pop
inc
jl
stc
inc
sbb
sahf
jl
sti
sbb
orb
jne
rol
and
or
push
sbbl
cmc
pusha
sar
mov
xlat
pop
scas
in
pusha
ficomps
loop
ljmp
movsl
xlat
das
adc
lods
jg
add
je
std
push
xchg
jp
loope
inc
cwtl
jno
loopne
or
arpl
out
mov
mov
loop
push
or
xlat
sub
cli
and
test
stc
sbb
push
stos
sub
ljmp
xor
cmp
add
and
repz
test
sahf
daa
dec
add
pop
loopne
movsl
xchg
fadds
lcall
jp
or
sbb
jg
and
push
daa
sub
call
sbb
sub
sub
or
cmp
test
fstps
mov
subl
jecxz
jo
jmp
mov
lret
mov
pushf
daa
mov
adc
jns
or
ror
outsl
js
xor
cmp
data16
ss
sbbl
inc
sub
pcmpeqb
cmpsl
ficoms
sbbl
insb
mov
cmpsb
mov
fidivl
pop
mov
cs
ret
jl
jg
das
xor
xor
lret
call
stc
jo
cs
or
sub
cmp
dec
and
xorb
jp
arpl
add
push
sub
cmp
cld
xorb
mov
dec
xor
and
cwtl
fwait
add
sub
pop
xor
icebp
sub
mov
sbb
lcall
lods
sbbb
mov
das
pop
adc
shlb
loopne
or
jecxz
xchg
cmp
ss
and
and
nop
fldt
dec
mov
cmp
xor
xor
cmp
adcl
jg
sub
cs
sub
xorl
inc
or
sahf
xor
lea
push
add
xchg
mov
push
icebp
xor
orb
imul
in
add
pop
xlat
or
fisttpl
sbb
roll
jmp
push
pop
rcrb
jne
sahf
aaa
cmpl
adc
pop
xor
mov
lahf
popf
xor
and
cwtl
push
fiaddl
js
ljmp
lock
outsl
sbb
je
mov
cmpb
mov
mov
aaa
fmul
int3
addl
and
les
subb
subb
cmc
ljmp
arpl
repz
inc
stos
repz
jp
enter
not
incl
mov
cmp
adc
or
clc
lahf
mov
iret
mov
leave
setne
repz
mov
inc
cmpsl
pop
lahf
inc
arpl
jge
add
xorl
add
jl
inc
roll
pop
fisubrs
mov
cmp
inc
mov
xchg
or
sbb
xchg
lahf
jmp
mov
lahf
in
addb
xchg
icebp
lea
andl
orb
adc
or
mov
and
add
sbbb
xchg
inc
or
mov
mov
cmp
idivb
mov
and
dec
mov
dec
in
shrb
cld
xchg
flds
stc
mov
cmp
sub
lcall
lret
xor
stos
jmp
or
or
jns
pop
cmp
das
pop
xchg
pushf
cmp
inc
push
jp
sub
xlat
mov
dec
cmp
add
movsl
aas
mov
mov
jnp
ror
mov
lret
fdivl
jb
sbbb
aaa
ficomps
daa
stc
or
cld
xorl
pushf
cmp
dec
fs
stos
cs
fldl
xor
in
dec
mov
lret
aaa
push
or
dec
jns
rorb
push
clc
sub
xchg
xor
loop
or
sub
fwait
xor
imul
insb
bound
repz
jg
loopne
int3
xchg
and
dec
iret
jae
std
sbb
out
xor
lods
sub
sub
test
subl
fnsave
out
sbb
mov
sbb
subb
iret
sub
mov
add
cld
lcall
push
repnz
hlt
cmp
mov
push
sbb
out
jmp
adc
dec
lds
dec
jne
push
cltd
scas
cmp
loope
xor
sti
push
fistl
aaa
mov
inc
popf
fisubl
call
mov
jno
fstpl
in
push
mov
sbb
pop
incl
dec
jecxz
mov
jmp
xchg
sbb
add
dec
push
mov
subl
push
inc
sbb
sbb
pop
repz
push
mov
pop
in
ret
pushf
push
mov
adc
mov
loopne
sub
subl
xchg
shlb
mov
add
jg
cmp
jge
mov
xchg
pop
xchg
sbb
pusha
in
sbbb
aam
push
mov
cmpb
insb
test
lea
bound
stc
inc
sbbb
jno
xchg
out
pop
sub
pushf
inc
pusha
pushf
leave
dec
repz
mov
lcall
popa
stos
inc
aam
push
jmp
loope
nop
clc
inc
jl
dec
xchg
jge
pop
push
bound
sbbb
inc
repz
push
jmp
leave
sbb
adc
arpl
enter
lahf
stos
adc
mov
sub
repnz
sbbl
lret
aad
mov
jb
rolb
pop
or
jae
sbb
and
stc
int
pushf
mov
xchg
inc
popw
ror
out
andb
rorb
shll
adcb
sub
idiv
addr16
repz
faddp
sbb
pop
je
clc
into
push
shrb
xchg
push
pop
outsb
notb
imul
loopne
mov
sub
addr16
scas
loopne
add
ss
mov
sbb
jns
fs
push
jo
data16
xor
and
sbb
js
cld
dec
xchg
xchg
mov
and
adc
stc
repnz
add
insb
and
sbb
cmp
ficoms
xchg
add
insl
mov
movsb
xchg
push
mov
mov
leave
xorb
fcomip
fs
xchg
loope
cmc
mov
pop
insl
cwtl
repz
bound
pop
jns
mov
jmp
repnz
lock
xorb
loope
mov
arpl
hlt
xchg
dec
xchg
jp
sbb
jns
mov
popf
dec
xor
fwait
jno
cmp
lcall
and
cwtl
mov
mov
lcall
aam
movsb
jae
lret
shl
add
cwtl
ja
in
mov
aad
stos
jo
xor
orl
je
add
xor
int
iret
dec
mov
lods
subb
mov
jno
mov
dec
mov
xchg
dec
orl
and
pusha
enter
loope
adcb
leave
int3
inc
xchg
addb
fcoml
lret
ret
mov
repz
mov
mov
jae
arpl
sub
add
mov
dec
mov
call
dec
std
mov
prefetcht2
rclb
or
insb
popl
mov
xchg
js
lods
mov
xchg
cmpsl
mov
ja
scas
stos
xchg
sbb
and
push
js
lahf
push
jbe
inc
mov
mov
pusha
ret
cmpsb
mov
lods
xchg
cld
outsl
inc
mov
push
aad
pushf
js
repz
sbb
stos
mov
shld
jnp
popa
js
mov
filds
pop
das
jle
insb
mov
lods
push
addb
lahf
jl
outsl
jge
loope
sbbb
xor
pop
mov
jg
dec
aas
jbe
jae
jl
xchg
jge
loop
push
cmp
pop
iret
pop
cmp
hlt
jns
lock
addl
cmp
mov
pop
add
dec
repnz
rolb
xchg
in
sahf
mov
xor
in
push
sub
mov
pushf
fadds
xchg
jle
mov
add
push
jo
sbb
cwtl
icebp
bound
push
les
loope
adc
sub
dec
mov
inc
cmpsb
xchg
rcrb
mov
push
test
jno
rcll
bnd
cmpb
leave
out
addb
addr16
sub
sub
sarl
pop
decl
xchg
mov
aas
sahf
mov
lea
adcb
add
mov
nop
movsl
jne,pn
popf
mov
fildl
jmp
cmp
and
sbbb
jb
push
xorl
pop
and
roll
mov
push
andb
daa
scas
popf
cltd
jmp
decb
lds
insb
dec
ss
outsl
mov
inc
repz
cmp
cmp
sub
stc
jae
sbb
cmc
scas
cmpb
lcall
jmp
out
adc
nop
cltd
and
lahf
add
out
sub
mov
lods
lock
shl
cmp
std
fs
ljmp
xchg
in
inc
cwtl
orb
or
xor
or
jo
addb
mov
mov
std
insb
test
cmp
and
or
mov
es
movsl
mov
scas
or
lret
cmp
sub
xor
int
push
sbb
aas
mov
loopne
xchg
add
sbb
cltd
xchg
add
iret
jnp
mov
inc
roll
rclb
cwtl
dec
scas
push
jle
xchg
fldl
outsl
dec
mov
lret
shrb
rcl
sbbb
stos
inc
push
push
into
ja
xor
insl
and
mov
and
fsubs
jae
insl
mov
mov
ja
push
pop
xchg
stos
in
sbb
ss
sbbl
popa
sub
mov
mov
aaa
add
push
sbbb
popw
enter
imul
orb
int
cmp
addb
divl
inc
jle
subb
fsubl
orb
stos
xor
dec
adc
dec
into
addl
subb
lret
cs
rorb
cmp
xor
mov
lahf
fimuls
pop
clc
and
mov
cmp
pop
repnz
or
loop
lcall
cmpb
cmc
mov
and
push
in
stos
loopne
xlat
cmpl
sbb
pusha
cli
out
inc
mov
stc
out
xchg
ljmp
mov
sub
inc
test
push
adc
daa
lods
add
sub
loopne
cmp
push
sbb
sbb
dec
cmp
xor
pop
popa
xchg
sub
shrl
jnp
or
cmp
into
int
cmp
mov
sbb
mov
sti
icebp
xor
inc
add
insl
sub
and
jne
outsb
push
addr16
sahf
dec
arpl
sahf
mov
sbbb
aaa
pop
mov
imul
sbb
sbb
mov
add
cmpsb
dec
jge
pop
add
mov
jg
outsl
inc
mov
push
mov
mov
popa
loop
mov
insb
or
sbb
inc
daa
nop
pop
dec
cld
mov
mov
cld
xchg
sahf
pop
mov
shrl
imul
jg
xor
sub
adc
inc
jmp
orb
aas
fcomp
xlat
push
movsb
mov
ljmp
lds
cs
push
adc
loope
orb
add
xchg
push
pop
insb
rorl
je
imul
adc
lods
xchg
dec
and
jge
insb
adc
jb
inc
xchg
xor
xor
jmp
mov
lret
scas
fxch
jbe
xor
xor
pop
add
add
adcb
or
lret
jns
icebp
nop
popl
or
inc
mov
insb
dec
mov
sub
mov
loope
js
push
adcb
cmc
xchg
fdiv
lods
adc
jmp
add
icebp
sbb
dec
xchg
dec
enter
andb
cmp
or
dec
sbb
mov
adcb
mov
jbe
xchg
sarb
add
push
lods
xor
sbb
xchg
xor
jg
and
adcb
mov
mov
out
cmpb
sbb
gs
adcb
fadds
into
insb
ret
mov
or
test
je
lahf
clc
pop
push
lods
xchg
mov
and
xlat
mov
sti
bound
mov
inc
push
cwtl
mov
adc
pusha
test
pushf
pusha
adc
mov
rcll
addb
and
movsl
jmp
rclb
testb
jp
sbb
imul
shll
ret
cld
orb
mov
mov
aam
push
xchg
lahf
sub
jge
rorb
jp
and
hlt
mov
stos
lcall
xlat
or
ss
push
clc
push
andb
pop
inc
stos
sbbb
movsl
imul
cmp
andb
and
idivb
cmpsl
cmpb
xor
loopne
subl
das
nop
cmpsl
shl
orb
inc
push
jo
mov
sti
mov
xlat
or
movsb
addb
xchg
out
ret
xor
xor
inc
xchg
add
adc
lds
pop
push
jb
sbb
into
stos
fcmovnbe
stc
adc
mov
imul
js
inc
xchg
and
push
pusha
mov
popa
cmpb
mov
add
rolb
cmp
outsb
into
mov
aaa
sbbb
imul
xchg
and
adcb
mov
or
hlt
push
mov
xchg
std
lahf
mov
jbe
out
ss
mov
aas
cltd
xorb
ret
cs
or
sub
cld
js
out
mov
push
jl
xorb
jno
push
rolb
cld
lds
xor
push
popf
or
scas
fidivs
lahf
testb
icebp
jae
push
pop
les
or
mov
cmp
sub
loope
add
mov
andb
mov
imul
sbb
ja
inc
repz
mov
movsl
sbb
fdivrs
andb
cmp
xchg
dec
in
inc
cmpb
pop
dec
data16
jns
dec
add
adc
nop
repz
add
add
dec
addl
add
leave
js
fcoml
push
orl
repz
pop
lcall
shll
or
sbbb
repz
sbb
mov
inc
xor
cmp
xorb
jmp
sahf
push
jb
push
sbb
dec
call
push
cs
push
and
push
das
cltd
repz
loop
dec
imul
dec
push
cmpb
dec
mov
loope
cmpb
fdivp
sub
iret
cmp
sbbb
inc
pop
into
sbb
or
lret
pop
cmpsb
adcb
jbe
sbb
mov
xor
inc
sarb
lcall
push
pop
cmp
sti
push
repz
jge
fsubl
insl
push
mov
sbbb
inc
xchg
xorb
loopne
jp
push
outsl
rcll
jl
mov
mov
jbe
mov
pushf
pop
pop
cli
nop
cmpb
adc
sub
inc
xorb
out
out
daa
inc
fs
push
lods
add
cmp
call
rcrb
pop
divl
or
fsubs
cmp
push
pop
pop
jno
sub
fldl2e
subl
xchg
pusha
xchg
inc
sbbb
notb
jo
pop
mov
mov
adc
fisubl
or
dec
lds
mov
add
sbb
mov
andb
mov
xchg
add
cwtl
repz
pop
push
push
xchg
mov
xchg
jle
fdivl
in
pop
inc
inc
cmc
jge
xorb
mov
test
xchg
and
jg
jnp
out
mov
test
add
pushl
xchg
jle
xorb
cld
dec
push
pop
orb
and
dec
dec
rolb
jle
xor
cmpb
stos
mov
inc
enter
add
int
push
gs
pop
and
adc
test
pop
cmp
outsb
jne
sbbb
xchg
xchg
fldcw
orb
xor
cmc
outsl
addl
or
jecxz
push
cmp
inc
and
sbb
jl
stos
mov
dec
xchg
mov
int3
dec
xor
insb
xor
imul
shrb
or
jg
xchg
adc
loope
mov
jg
cmpb
mov
and
or
lahf
sbb
vmwrite
addl
xchg
pop
jo
xorl
xchg
sarb
fmulp
cmp
adcb
xchg
xchg
inc
fcomps
ror
lea
jl
mov
movsb
ret
lds
mov
ret
pavgb
aaa
ret
or
add
imul
xor
mov
or
icebp
mov
adc
popf
pop
mov
dec
mov
and
es
ret
or
pop
lcall
mov
adc
lods
dec
add
insb
cmp
cmp
mov
mov
int3
adc
pushf
cmp
inc
xor
mov
push
dec
pop
adcb
stc
inc
addb
add
pushf
cmp
insb
inc
fcmovnb
or
inc
sbb
cmp
js
popl
fstpl
fsubrp
popf
mov
add
loope
movl
js
bound
mov
arpl
mov
loopne
mov
jmp
mov
xchg
cmp
xchg
xorb
inc
mov
pop
mov
mov
add
add
xor
cld
sti
mov
fcmovnb
mov
out
cmpb
lds
pop
mov
cmp
dec
loop
enter
in
cmp
adc
lret
loopne
inc
mov
push
fsubrl
je
sub
pushw
cmpb
mov
sub
sbb
inc
mov
add
xor
and
add
xor
in
inc
inc
or
pop
cli
sbb
jg
mov
pop
test
xor
sub
adcb
inc
jnp
xchg
and
lret
xor
adc
cmp
or
movsb
mov
aam
jmp
sub
mov
imul
js
cli
mov
fidivs
adcl
dec
inc
ret
ljmp
adc
xor
loop
sahf
ljmp
dec
cmc
sbb
neg
subb
movsb
dec
subb
int
repz
popa
xor
cmp
lahf
fwait
mov
pop
je
sbbl
pop
js
ret
xchg
mov
dec
mov
sub
ljmp
xchg
faddl
inc
gs
xchg
dec
into
cmpsb
flds
add
add
in
pop
jo
inc
pop
dec
mov
xchg
orb
sub
dec
jae
adcb
icebp
iret
cmp
sub
sbb
cmp
mov
pop
cltd
or
add
mov
jg
mov
addb
mov
pop
ljmp
nop
pop
shll
mov
shlb
mov
and
push
loopne
lock
add
adc
push
xchg
mov
xchg
sbb
inc
cli
and
stc
daa
ja
sub
inc
cmpsl
xor
mov
cmp
in
mov
sub
orb
test
repz
insl
add
push
ljmp
xchg
out
es
daa
mov
xchg
ret
add
adc
dec
sub
mov
mov
add
daa
and
enter
pop
pop
inc
inc
mov
rolb
repnz
mov
test
push
add
push
add
sub
cli
lods
cmc
fildl
mov
and
mov
test
rcl
jg
cmp
rcr
add
lret
push
add
push
jle
sahf
push
mov
sbb
mov
add
shrb
iret
pushf
out
cwtl
pop
test
xchg
in
test
jmp
shr
sahf
adc
and
out
sub
add
sarl
int
push
fisubs
xchg
in
rol
popf
loopne
jge
les
sub
xor
xchg
mov
stc
sarb
xor
sub
int3
or
add
inc
xchg
inc
adc
cwtl
add
loopne
push
ror
ljmp
xor
in
add
jbe
lods
int3
roll
adcb
adcl
push
or
cmpsl
clc
jl
in
xchg
popl
add
add
add
neg
dec
in
sbb
fadds
ljmp
cs
in
sub
std
test
inc
inc
ja
mov
ljmp
and
or
add
les
aad
mov
sbb
mov
iret
or
aam
adc
dec
pop
fwait
cwtl
rolb
add
mov
add
ret
adc
addb
pop
cmp
sub
mov
mov
inc
dec
popf
cmp
or
dec
addb
dec
adc
into
pop
push
scas
sbb
fisttps
gs
fs
sbbb
in
call
add
xchg
mov
mov
andl
roll
fnsave
pop
jg
rclb
xchg
adcl
enter
pop
xchg
pusha
or
mov
pop
ds
mov
mov
and
adc
jbe
adcl
pop
iret
jns
pop
push
dec
test
aas
push
jp
adcl
and
orb
lods
pop
xchg
enter
inc
mov
fsub
xchg
lock
add
adc
rclb
jbe
mov
fldl
std
inc
out
mov
test
jne
dec
push
mov
jg
addl
sahf
xchg
mov
add
call
in
rorb
and
test
lahf
jnp
enter
xchg
pushf
cmp
dec
sub
clc
adcb
bound
jo
and
sub
subb
stos
scas
push
lea
pushf
pop
mov
ret
fidivrs
or
xor
fwait
in
xlat
jo
or
mov
mov
data16
shl
arpl
sub
push
pop
jbe
leave
aam
pusha
test
clc
push
popf
gs
mov
adcl
dec
fcoms
pushf
push
inc
enter
adc
lret
xchg
inc
xor
movsb
test
xchg
push
adc
add
adc
fisubs
push
jge
bound
push
push
mov
stos
sbb
xor
cwtl
sbb
mov
xorl
loopne
or
pop
sbb
pop
cmc
testb
mov
mov
in
arpl
fadd
loopne
or
jl
mov
cmp
and
andl
sbb
push
int3
rcrl
mov
addl
adc
loope
mov
add
ret
push
sub
xchg
sbbb
inc
sbbl
pop
add
mov
jg
jo
xchg
sbb
daa
cmpb
nop
addr16
or
jmp
jnp
subb
push
lds
jmp
jmp
out
cs
hlt
and
cmpsb
out
mov
call
inc
push
mov
cwtl
es
fstpl
xchg
addb
pusha
int
xchg
or
cld
fildl
sub
or
addb
sbb
sub
mov
add
orb
add
test
scas
pop
test
nop
js
and
cmp
dec
jmp
mov
mov
jle
xchg
ljmp
ja
mov
sbb
out
pop
dec
mov
test
in
rolb
xchg
push
lods
data16
pushf
adc
call
int3
cli
mov
add
es
push
add
andl
clc
sbb
add
andb
mov
add
add
xchg
in
push
daa
ja
ds
dec
xchg
in
cmp
jecxz
inc
mov
mov
mov
pop
inc
sahf
mov
mov
outsb
insb
push
jb
orb
dec
xchg
dec
push
cmp
mov
call
push
push
pushf
xorl
ljmp
jle
shl
jp
addb
outsb
push
fstpl
imul
adc
lret
popa
pop
mov
sub
arpl
outsb
loopne
jmp
addl
push
jae
ret
in
inc
idivb
fildl
pop
xor
outsl
mov
jo
ss
adc
mov
pop
cmc
mov
test
push
test
testl
in
mov
jbe
sbb
fdiv
xchg
inc
push
cmpsl
xor
xchg
loopne
mov
shll
fcomps
cmpb
push
push
xor
ss
rorb
insl
fsubrp
xchg
pop
jae
cmpl
push
dec
jb
js
or
cmp
adc
push
clc
cli
mov
insb
pop
cmpsb
xchg
in
addb
mov
push
cmpsb
add
lock
xorl
rcll
pop
or
mov
mov
movsb
push
fnsave
daa
cmc
jl
addb
jle
mov
push
rep
loopne,pn
daa
cmp
sbb
xchg
jle
mov
pop
in
inc
data16
lock
sbb
lods
and
cmpsl
pop
xchg
js
rorb
test
dec
test
fiadds
cwtl
cmc
popa
roll
sub
mov
call
punpckhdq
mov
add
cmp
cmpb
fnstsw
mov
decb
lahf
jno
mov
add
push
das
mov
push
pop
mov
push
js
push
xchg
daa
sub
or
pop
mov
mov
inc
inc
scas
pusha
add
xchg
push
pop
pushf
inc
jns
stc
xabort
fs
adc
add
inc
adc
adc
ljmp
xchg
and
lret
lock
push
mov
xchg
add
mov
mov
dec
sarb
test
mov
bound
out
or
cld
cmp
lods
movsl
rorb
push
orb
fmul
cli
inc
xchg
mov
adcl
pop
imul
mov
pushf
mov
inc
sahf
ficomps
movl
mov
sbb
add
mov
pushf
or
cmp
sub
sbb
imul
mov
stc
imul
mov
push
in
pop
jg
dec
mov
imul
fs
rcr
jle
aad
bound
pop
shlb
adc
pop
in
dec
inc
test
add
pop
jnp
scas
jne
pushf
and
js
insl
aas
sub
mov
xchg
rolb
sub
mov
pop
and
outsb
das
stc
pop
adc
dec
mov
xchg
and
pop
mov
lcall
nop
mov
popl
jo
inc
add
frstor
rcrb
xlat
stos
aad
mov
aas
sbb
mov
mov
shlb
add
loop
sbb
mov
stc
cmp
in
shll
repz
mov
push
fisubrs
jne
sub
aam
jb
adc
aad
pop
dec
fsubr
pop
sbbb
lcall
call
xchg
pop
mov
lea
jno
lock
xorb
lds
and
inc
fistps
push
mov
xorb
xchg
pop
xchg
mov
clc
sbb
call
pusha
mov
push
fmull
shrl
ljmp
sahf
aas
add
jnp
pop
sbbb
sbb
lret
pop
mov
xor
jge
sub
xchg
cltd
iret
sub
aaa
gs
orl
lock
cli
stc
in
adc
mov
repz
das
pusha
and
nop
inc
mov
leave
pushf
int
add
addl
sbb
mov
mov
pusha
add
test
sub
and
cmpb
insb
xchg
pushf
enter
repz
in
adc
mov
nop
pusha
pop
xchg
fwait
andb
or
pusha
fstpt
movsb
sbb
int3
gs
cmc
mov
mov
push
sahf
cmp
jb
clc
das
loopne
lahf
fmulp
out
xchg
mov
loopne
in
adc
xorb
sahf
sbb
ret
rorb
pusha
jl
fs
subb
mov
dec
test
mov
addb
sahf
inc
mov
orb
mov
hlt
clc
shrl
addb
sbb
in
sub
or
push
andb
enter
mulb
xchg
scas
inc
mov
cmpb
cltd
into
sbb
bound
dec
cli
shlb
lea
fdivs
orb
inc
or
sbbb
cmpsb
add
ljmp
fwait
adc
mov
test
sub
push
mov
xchg
or
test
or
orb
test
dec
mov
bound
xchg
pusha
or
sub
push
mov
icebp
test
btc
mov
pusha
cmp
dec
xor
lahf
sti
dec
jnp
gs
bound
lods
xor
adc
out
loop
cmpsl
adc
cli
orb
popa
aad
mov
cld
jno
dec
sahf
loopne
in
xchg
and
mov
pushf
mov
push
outsl
aas
mov
or
es
ret
loopne
xchg
or
jo
xor
push
mov
add
add
sahf
test
repnz
roll
jl
orb
jge
adc
sub
popa
sub
mov
in
cli
pusha
bound
sbbb
fbstp
cmc
push
or
cmp
jp
int3
cmp
cs
pop
mov
mov
inc
jge
and
andl
sub
push
inc
mov
xchg
lock
push
cltd
in
xchg
stc
addl
cld
inc
js
test
popf
mov
cs
inc
cmp
fcomi
xor
cmpsl
mov
cmp
add
jmp
or
cmpsb
xchg
outsb
aad
inc
fisubrl
subb
std
jle
mov
and
push
sub
adcb
or
stos
call
push
cltd
mov
add
lahf
sbb
fs
mov
lcall
sub
pushf
jne
rcll
pusha
addb
loopne
jecxz
sahf
jnp
push
inc
inc
std
outsl
fldenv
sbbb
add
or
jnp
addr16
mov
rorb
lock
subb
roll
xor
subb
stos
lcall
nop
pop
mov
xlat
xor
or
nop
test
ret
in
lock
movsb
out
or
mov
add
xchg
mov
mov
push
xor
lock
and
sahf
mov
mov
jecxz
aad
mov
inc
mov
sub
xchg
leave
cmp
ljmp
hlt
sbb
mov
dec
cmp
mov
and
dec
les
xchg
lods
movb
or
adc
scas
xchg
loopne
add
hlt
mov
mov
xchg
push
mov
mov
cmp
mov
addb
hlt
adc
fcoml
inc
shlb
in
repz
popf
inc
jbe
scas
sbbl
push
or
push
in
xchg
xor
in
adc
addr16
add
xchg
sbb
or
mov
cwtl
push
inc
push
adcb
loopne
test
and
xorl
loopne
nop
data16
pop
mov
jo
std
pushf
inc
loope
sarb
jbe
stos
cmpsb
or
xor
and
adc
mov
add
ret
call
orb
push
and
int3
adcb
jae
mov
inc
sbb
pop
mov
push
inc
mov
mov
and
jae
loopne
cmp
adc
cmp
push
mov
sub
mov
jl
ljmp
aad
cli
xchg
filds
loopne
push
in
les
cmpl
popf
andl
addps
add
dec
shlb
inc
cltd
scas
sti
or
fadds
mov
in
orb
lcall
jbe
xorl
cmc
insb
addl
add
xor
fiadds
and
jp
lods
cmp
sbb
and
aam
cmp
xor
sub
ljmp
andb
pop
sahf
jp
sbb
scas
icebp
sub
pop
dec
orb
out
push
ret
add
sub
cmp
into
rorl
divl
xorb
test
sbbb
dec
mov
jnp
cmp
adc
cmp
lds
xor
loopne
cmp
sbb
imul
int
popf
push
mov
adc
inc
cltd
sbb
lock
fisttps
loopne
outsb
inc
add
out
orb
add
stos
dec
pusha
push
test
inc
sahf
jle
aad
lods
bound
into
fildl
jg
and
add
mov
mov
push
mov
push
loopne
lds
push
ret
pushf
or
mov
and
inc
push
push
stos
mov
jle
lods
mov
sbbb
in
xlat
xchg
sub
pop
adc
insb
add
cmp
sbbl
or
dec
out
mov
sbb
data16
scas
orb
cmpsl
mov
push
lods
test
dec
dec
rolb
add
mov
mov
adc
sbb
bound
movsb
pushf
popa
adcb
inc
lods
es
outsl
mov
inc
clc
subl
xchg
punpcklbw
fwait
and
mov
shrb
mov
xchg
and
inc
sahf
push
andl
dec
cld
insb
test
and
or
cmpl
call
test
mov
mov
fiadds
ficompl
arpl
lods
call
lock
sub
andb
mov
movsb
arpl
push
inc
push
daa
push
andb
ds
insb
mov
mov
andb
mov
cwtl
pushf
push
leave
rcrb
xchg
add
ret
lcall
mov
popa
cmp
clc
inc
addb
sub
sbb
xchg
addl
mov
adc
insb
cli
xor
lods
push
pop
add
push
and
iret
xchg
inc
xchg
fadds
cltd
jb
lret
sub
pop
mov
sbb
lods
fmuls
scas
sub
cmpsl
inc
out
xchg
mov
aam
fs
inc
mov
andb
pushf
pusha
outsb
stos
int3
add
incb
fiadds
adc
xchg
andb
mov
icebp
pop
inc
adc
inc
popl
dec
out
mov
pop
xorb
sub
mov
aad
and
mov
cmpb
jmp
add
divl
loopne
adc
pop
addb
movsb
xor
leave
jl
orb
mov
bound
movsb
xchg
mov
xchg
mov
add
mov
loopne
add
push
stos
sbbl
dec
outsl
lea
imulb
sub
xor
adc
lahf
aam
data16
sub
clc
shlb
add
adcb
jl
out
shll
orl
pop
pop
jle
enter
faddl
mov
mov
fisttpl
jb
cmp
xchg
repz
and
jno
inc
xchg
mov
adc
gs
jl
repnz
mov
mov
pusha
into
add
enter
jg
nop
add
lahf
push
mov
data16
fisubl
lds
pop
pushf
cmp
orb
andb
cmp
or
lret
jmp
jmp
add
add
cltd
jo
addl
xorb
inc
js
jne
pusha
xchg
out
jl
mov
cmpl
and
test
hlt
aad
leave
inc
insb
dec
adcb
and
pop
xorb
push
ss
cs
loope
rolb
mov
mov
popa
dec
sub
mov
and
and
jl
sahf
cwtl
cld
inc
arpl
scas
adc
ret
ret
mov
inc
mov
sub
mov
xchg
inc
popl
add
mov
mov
and
xorb
pushf
mov
xorl
insl
pop
or
inc
lahf
pusha
add
into
adcl
lcall
mov
les
xchg
mov
or
ret
notl
add
mov
popa
jp
xchg
orb
andb
addb
dec
rolb
cmpb
or
in
jo
cltd
in
sbbb
ret
pop
inc
popf
adc
lea
test
and
pop
inc
xor
cld
pusha
xchg
test
inc
mov
and
mov
push
xchg
jl
mov
mov
cwtl
roll
stos
insb
ret
and
int
idivl
push
or
int3
xor
testb
das
jo
shlb
or
mov
and
jb
inc
shll
fiaddl
loop
mov
fnsave
popa
lock
movsl
add
mov
lods
adc
int3
add
pop
mov
inc
xor
push
xchg
mov
cwtl
fcomps
add
pop
mov
ror
inc
xchg
fs
pop
inc
mov
pop
test
xor
ja
and
enter
nop
push
inc
sbbl
pop
dec
mov
add
in
enter
add
pop
or
jmp
das
xchg
in
lods
and
in
mov
sbb
data16
inc
adc
es
and
addb
jmp
cmpsl
adc
out
movsl
dec
imul
enter
scas
inc
mov
jo
inc
jecxz
and
mov
dec
inc
test
lock
mov
mov
jg
add
les
inc
add
push
testb
cmp
insb
pusha
xchg
lea
fsubl
mov
push
sbb
out
xchg
lret
ljmp
iret
dec
out
inc
mov
pop
xor
jo
in
ljmp
outsb
es
popw
out
movsl
add
and
push
out
repnz
mov
inc
rorb
ret
add
pushf
movsl
sarb
stc
fs
sbb
and
mov
ret
or
and
pop
jg
in
xchg
inc
mov
hlt
add
lcall
insb
inc
repz
daa
xchg
enter
dec
scas
subb
popf
push
pop
push
jmp
stc
sarb
out
fisubrl
push
cs
inc
cltd
pop
add
popa
orb
or
in
cmp
mov
adcb
inc
and
push
dec
mov
nop
rorl
inc
and
and
mov
repnz
add
sahf
mov
movsb
jo
pushf
mov
call
lret
push
xchg
loopne
loopne
into
fwait
add
lods
or
jno
inc
int
in
sbb
and
jmp
mov
cmp
inc
jae
dec
sbb
and
push
mov
mov
pop
sub
mov
test
out
hlt
mov
mov
jp
adc
xor
cmpb
in
insb
and
cltd
inc
in
dec
inc
addb
add
pop
fadds
movsl
in
sub
or
add
pop
jmp
fdivrl
or
cmpb
rcll
xorb
insb
in
scas
stos
aam
subb
in
fdivp
or
rolb
ret
xchg
inc
test
sbb
int3
push
adc
loopne
mov
andl
add
inc
mov
jecxz
mov
fiaddl
and
lea
xchg
hlt
or
movsl
mov
mov
or
in
into
adc
stos
sbb
shrb
insb
ljmp
sbb
fs
jle
and
mov
add
inc
pushf
into
stos
jne
rcll
fmuls
mov
mov
movsb
inc
pop
sbb
ficomps
xor
ret
mov
popa
data16
subl
jo
aas
and
mov
loop
or
mov
lret
icebp
sub
subb
jmp
call
js
xor
movsl
adc
inc
xor
incl
inc
sahf
movsl
mov
loop
sbb
pusha
mov
mov
xchg
es
jle
xchg
xchg
mov
lahf
roll
inc
jb
outsl
xchg
jns
add
roll
adc
in
xchg
icebp
cmpsb
data16
adc
xchg
hlt
inc
xor
cmp
cmpsb
add
pop
adc
xchg
roll
pop
sbb
pushf
test
xchg
xchg
test
mov
inc
push
adc
addl
inc
cwtl
add
clc
mov
xchg
mov
mov
pusha
inc
ret
aad
leave
mov
fists
sbb
adcb
push
push
jno
cwtl
mov
inc
lock
sbb
adcb
sahf
das
inc
in
mov
sbb
mov
jp
mov
pop
fnstcw
pop
pop
mov
push
in
outsl
xchg
movsb
add
push
push
lea
adc
cmp
loopne
xchg
loopne
stos
aam
mov
jns
jb
push
rolb
sbb
aaa
xchg
clc
into
iret
rorl
ret
xchg
inc
jno
inc
inc
insl
pop
push
mov
int3
lods
and
xchg
push
fiaddl
loopne
scas
js
inc
mov
fistpll
lahf
mov
xor
jae
xor
lock
std
repz
icebp
repnz
mov
adc
jno
sub
jne
orb
loope
cmp
mov
and
add
jg
test
mov
and
xchg
add
pop
nop
movsb
pop
movsb
sub
test
mov
repz
roll
dec
mov
fcomps
sbbl
je
addb
rorl
jl
mov
repz
mov
daa
xorl
xorl
sbb
fsubrs
xor
add
mov
adc
or
xor
cld
xchg
hlt
pop
int
cs
rcr
iret
subl
dec
sub
push
test
mov
jmp
and
ret
mov
movb
test
pusha
xchg
xchg
fisubrl
andb
popa
mov
sub
aam
and
loopne
sub
xor
arpl
rcrl
inc
mov
fsubs
inc
inc
in
sahf
dec
shll
add
dec
or
pusha
inc
imul
repnz
mov
imul
pop
into
shrb
insl
sub
or
cwtl
movsb
mov
add
scas
cmpsb
dec
popa
addb
pushf
sbb
xchg
add
addb
cld
rorl
jp
adc
mulb
sub
cwtl
adc
inc
outsl
loopne
lods
pop
addb
call
inc
xchg
stos
shrb
pusha
in
fisubrs
xor
sub
sbb
add
andb
push
ret
cmp
lods
cmp
fildl
imul
and
mov
xchg
clc
ljmp
add
inc
es
pusha
out
loop
cltd
lock
xchg
fisttpl
xchg
lods
sbbb
and
push
out
and
stos
cmp
repz
cltd
pop
pop
jne
add
jno
testl
insb
das
or
hlt
push
insl
loopne
adc
pop
and
mov
test
jmp
mov
js
in
out
mov
pop
cmpsl
adc
mov
xchg
cmc
and
xor
arpl
stos
movsb
and
pusha
rcrl
cmpsb
mov
cmpb
leave
outsb
fmul
addb
cmp
add
inc
scas
sbb
and
pop
movsb
in
xor
mov
or
sub
pop
push
add
add
sub
mov
xchg
sbb
mov
or
xchg
ret
test
fstpl
push
pop
jo
adc
mov
mov
jmpw
pop
lret
and
xor
mov
cmp
jg
outsl
fidivs
adcl
stos
inc
pop
incl
xor
daa
dec
push
cmp
push
call
mov
int3
addr16
rcr
and
adc
popf
test
jecxz
fisubrs
ret
lods
dec
ret
fucom
cltd
in
ljmp
pop
addl
ret
jmp
mov
fwait
mov
ss
add
mov
inc
mov
packsswb
sbb
pop
push
jp
arpl
addb
mov
jmp
mov
add
rcrl
cmpsb
fistl
stos
test
sub
fidivs
int3
gs
inc
lods
sarb
push
pushf
mov
roll
insb
mov
push
repnz
or
out
loopne
mov
sbb
sbbb
lods
jl
jbe
sub
sub
cmp
stos
aaa
out
addb
and
hlt
loopne
movsl
mov
cmp
dec
jne
aad
add
push
popf
xor
ret
xchg
subb
test
push
mov
push
mov
inc
mov
xorb
cwtl
enter
push
xchg
sbb
out
js
sbb
mov
mov
pushf
sbbl
insb
add
ja
test
add
cmp
jae
out
aad
fs
mov
or
dec
add
dec
inc
out
nop
xchg
pop
rcrl
pusha
mov
sub
outsb
ljmp
sahf
cmp
subb
push
cltd
loopne
mov
dec
pusha
pusha
arpl
addr16
jle
stc
sbb
movsb
inc
inc
add
mov
sbb
loopne
and
jg
mov
add
add
loopne
int3
fdivl
orb
mov
inc
clc
imul
in
mov
roll
jmp
fsubr
orl
aaa
scas
int3
pop
xorb
push
and
adc
push
lods
subb
ja
rcrb
inc
out
xchg
jle
sbb
popa
aas
or
test
fwait
les
sahf
sub
sti
mov
sbb
and
shlb
sbb
das
pusha
mov
dec
sbb
mov
xchg
cmp
push
pop
mov
adc
mov
inc
adc
adc
enter
pushf
shl
pusha
xchg
dec
xorb
enter
sub
xor
push
scas
in
or
and
xlat
scas
adc
fwait
push
mov
xchg
inc
add
inc
addb
pop
mov
and
xchg
jle
testl
sbb
adc
loopne
or
lahf
xorb
mov
es
sti
data16
jp
pushf
and
scas
mov
lds
out
mov
or
xor
lret
sbb
xchg
adc
cmp
mov
add
dec
add
push
xor
pop
in
lahf
sbb
jle
mov
iret
mov
mov
jg
mov
mov
mov
mov
mov
push
ret
lods
adc
orb
sbb
cmpsb
cltd
inc
orl
sub
sbb
xchg
aam
or
and
add
jg
test
loop
subl
sbb
cmp
lds
xor
scas
mov
sub
icebp
lods
pushf
cmc
or
fs
stos
xor
mov
lds
inc
pop
adc
lds
pop
or
inc
mov
xchg
jne
cmpsl
adc
in
scas
jo
inc
andb
mov
orl
xadd
add
movsl
xchg
enter
adc
movswl
icebp
movsb
js
and
and
out
cmp
imul
xchg
es
lods
lds
les
gs
and
leave
lret
sbb
mov
les
sarl
adc
push
sub
into
mov
ljmp
mov
sarb
lfs
mov
jo
adc
add
push
rorl
mov
adc
icebp
test
jmp
subl
js
adc
outsb
jg
aam
cmp
test
mov
sbbb
sahf
sbb
cmpsb
loope
inc
mov
adcb
or
ja
insb
adc
pop
and
shlb
rcll
lcall
clc
dec
loope
mov
mov
dec
into
pushf
imul
outsb
call
out
pop
in
into
sbbb
js
orb
fucomi
addb
adc
inc
jo
ljmp
xor
pop
mov
popf
mov
ret
mov
movsl
cltd
call
inc
mov
ficomps
sbb
push
enter
shr
addr16
lock
sbb
scas
cmpsl
and
dec
lock
inc
fcomps
je
mov
inc
xchg
adc
scas
mov
pop
adcl
xchg
pop
mov
push
test
mov
mov
test
scas
mov
pop
jge
addb
fnop
cltd
add
push
scas
popf
adcb
out
mov
cmpsb
jnp
aas
adcb
adc
outsl
das
cld
mov
and
mov
xchg
mov
jno
mov
roll
fs
addl
pop
test
popf
add
jb
addb
rorl
adc
xchg
divb
orl
js
das
inc
jle
xchg
add
inc
xchg
lcall
inc
sahf
jbe
ret
addl
fs
addl
mov
pusha
mov
cmp
rcll
mov
dec
xchg
adc
inc
jg
bound
and
lds
mov
or
or
call
sbb
pop
dec
lock
jle
pop
scas
mov
cs
lea
jecxz
popf
mov
inc
mov
mov
icebp
pop
lcall
xchg
mov
cli
jg
inc
js
andb
scas
repnz
mov
adc
loopne
les
fsubrs
add
nop
cmp
sti
loopne
popf
js
mov
andb
and
sbbl
xchg
sahf
mov
mov
js
adcb
lret
dec
les
dec
pop
add
mulb
jmp
dec
push
andl
dec
int3
mov
jmp
jae
jmp
adc
sbb
addb
inc
mov
mov
push
hlt
iret
fdivs
mov
jge
and
pusha
inc
in
rolb
add
sbbb
sahf
push
add
cwtl
jmp
add
xchg
or
loopne
mov
pusha
push
pop
mov
mov
ret
fwait
pop
jo
call
test
and
aad
xchg
rclb
pushf
jo
popl
mov
test
mov
cmp
xchg
cmp
lahf
mov
sub
fwait
enter
sbb
mov
setns
call
inc
jmp
jae
push
das
jp
sub
jnp
jne
stos
sub
jns
sbbb
out
sbb
adc
fsubrs
inc
cltd
cmp
pop
xchg
aam
rolb
mov
fadds
cwtl
bound
inc
mov
call
stos
pop
mov
mov
shlb
xchg
xor
sbb
xor
cmp
sbbl
sbb
cwtl
inc
test
outsb
push
and
push
subl
jle
mov
sub
test
insl
lret
inc
jne
sub
or
ja
pop
dec
or
push
dec
adcb
pusha
imull
sbbb
or
adcl
in
add
roll
andb
ret
inc
addl
scas
addb
loop
xchg
cli
mov
add
js
sbbb
or
cmp
mov
and
mov
jo
sub
mov
adcb
test
addb
fsubr
outsb
repz
mov
push
fwait
push
std
or
mov
push
xchg
ja
mov
pop
leave
fiadds
dec
add
in
add
mov
sarb
add
add
xchg
add
inc
popf
orb
mov
movsl
fcoml
leave
mov
push
lahf
mov
sti
add
push
lret
mov
fwait
orb
ss
popf
or
loop
cmpb
inc
mov
cmp
popf
jg
dec
jnp
mov
ficoms
loop
cmp
inc
mov
pop
imul
imul
mov
jl
cmp
andb
test
jg
mov
js
add
ss
sti
fdivr
jmp
cwtl
insl
xchg
clc
lock
incb
dec
fisubrl
icebp
orl
pop
mov
data16
or
clc
xchg
lds
je
out
xorb
pop
dec
mov
pop
into
das
push
cmp
xchg
cmc
clc
adc
cmpb
or
rorl
aad
inc
inc
popf
push
and
test
dec
orb
test
add
xchg
lock
and
sbbb
pop
inc
nop
or
call
stos
jl
dec
xchg
sti
lods
mov
fisubrl
jg
xchg
push
inc
outsb
sbb
sbbb
adc
les
je
pop
lods
into
aaa
ss
pop
out
or
pop
push
dec
adc
std
xchg
dec
mov
dec
sbbb
int3
mov
cmc
data16
aam
mov
test
and
and
ret
push
jb
sbb
xchg
stos
aad
cwtl
push
shl
loopw
jg
mov
cmp
xorl
and
mov
int3
loop
cmp
or
cmp
ljmp
test
fdivs
push
fistps
andb
fwait
imul
cmp
es
pop
pop
sbb
andb
sbb
pushf
leave
mov
xchg
cmpsl
idivl
lcall
dec
aad
addb
push
loopne
lahf
push
orl
add
and
mov
mov
lock
cmpsb
mov
mov
nop
in
dec
mov
sub
sbbl
sbb
inc
sub
lds
arpl
mov
mov
icebp
or
loopne
mov
movb
mov
pop
pop
mov
xor
cmp
rcrb
je
jbe,pn
and
addl
addl
mov
popa
mov
mov
xchg
adc
add
xchg
ret
lcall
xchg
in
xchg
sub
andb
hlt
call
rorb
inc
xchg
or
out
xchg
mov
roll
mov
les
rolb
adc
shlb
fs
ficoml
inc
adc
lock
scas
xchg
jp
xchg
loopne
sub
xchg
out
xchg
in
and
insl
inc
loop
mov
xor
mov
lock
outsb
push
jne
nop
fwait
push
pop
inc
inc
xchg
dec
add
sbb
mov
addb
push
dec
rol
mov
addr16
jae
jb
sbb
mov
call
fisubrl
pop
add
andb
lods
leave
ljmp
mov
xchg
rol
orb
mov
sbb
into
and
insb
popl
mov
cltd
mov
rorb
inc
mov
rcrl
addr16
leave
mov
imul
roll
arpl
test
xchg
jno
pop
adcl
roll
and
jb
add
xsha1
cmpsb
dec
mov
xchg
mov
repnz
adc
in
movsl
int3
loopne
push
jne
shll
lods
jo
mov
mov
sbb
xchg
mov
lret
xchg
and
mov
and
or
in
add
add
xchg
iret
rolb
cld
fadds
notb
into
call
and
loop
mov
jno
jp
icebp
push
pop
stos
sbb
push
out
jl
adc
pop
mov
stos
inc
adc
and
loope
mov
ret
push
inc
test
fwait
pop
inc
shrb
cmpb
push
xor
inc
scas
test
lcall
push
andl
call
xchg
ljmp
pop
pushf
inc
cmpb
xchg
sbbl
int3
mov
jle
dec
jo
lds
movsb
mov
add
data16
out
int
int3
xchg
mov
repz
jmp
or
cmp
xchg
insb
mov
add
addb
scas
xchg
pop
bound
mov
sbb
cld
iret
mov
daa
lods
add
dec
mov
out
mov
loopne
outsb
pop
or
xchg
fsub
xchg
ret
and
xchg
js
test
nop
sahf
xchg
adc
push
subl
addr16
adc
sbb
movsb
jg
push
inc
inc
test
ficoms
rcl
cltd
outsb
popa
jle
jno
dec
or
sbbb
or
adc
add
xchg
mov
loopne
in
push
lods
je
shl
testl
shll
cmp
cs
dec
hlt
sub
push
xor
jbe
add
call
mov
mov
test
inc
xchg
or
outsb
or
jnp
xchg
dec
mov
adc
add
cwtl
cmpsb
and
addb
sub
adcb
enter
xchg
loopne
popl
or
lock
fwait
mov
aam
push
sub
pop
or
push
push
iret
mov
add
insb
lahf
cmp
inc
mov
inc
xchg
cli
adc
insb
mov
loope
and
push
repz
jle
test
inc
gs
xchg
lret
adc
jns
popa
ja
jl
scas
mov
pop
mov
lcall
jae
push
mov
ret
sbb
add
jbe
or
add
or
mov
lods
push
rorb
dec
xchg
inc
mov
int
pop
fs
bnd
insl
push
jae
push
push
std
test
hlt
xchg
mov
add
ret
xchg
data16
lcall
jnp
and
add
inc
adc
mov
enter
or
enter
insb
adc
scas
addb
orl
cmpb
repnz
adc
iret
sbb
ficoms
jle
mov
aad
sub
sub
adc
nop
mov
add
in
dec
sub
pop
repz
jo
push
sub
and
and
mov
push
sbb
lret
jl
or
daa
rcrl
add
subb
inc
sar
pop
fdivs
push
jbe
adc
idiv
lds
mov
aas
mov
in
dec
in
adc
sarl
sub
xchg
dec
fiadds
xchg
jg
arpl
cmp
andl
fs
and
pop
nop
mov
sbb
repnz
or
and
dec
mov
loope
mov
subl
fnstenv
mov
in
cmpsl
lock
in
fucompp
cmc
aam
in
hlt
popf
loope
shlb
cmp
leave
xchg
push
jmp
inc
rcl
andl
mov
jmp
xor
xor
mov
xchg
test
outsb
xchg
cmc
cmpb
fbstp
jle
xor
loopne
jge
add
jecxz
cmp
lahf
stos
popa
lods
pop
sbb
andl
scas
jbe
adcb
xchg
mov
push
jbe
push
add
lret
iret
notl
or
and
mov
mov
icebp
out
shrb
mov
cwtl
inc
in
xchg
je
and
out
sub
sbb
cs
clc
enter
xorb
xor
call
add
imul
mov
dec
jo
sti
xor
lcall
subb
cmp
pushf
call
cmc
inc
mov
cmp
test
rorl
and
mov
sbb
and
and
cltd
mov
lcall
or
dec
jle
and
loope
xchg
mov
lahf
pusha
negl
cmp
test
pop
mov
subl
daa
push
add
fs
mov
pop
xchg
loopne
xchg
cld
mov
mov
movsb
pop
pusha
movb
loop
add
and
xchg
adc
jle
andl
sub
jg
add
push
jle
push
mov
sbb
cmp
subb
pop
movsb
scas
mov
or
jecxz
cmp
sbb
stc
push
mov
loop
jg
mov
add
enter
jno
push
jns
sbbb
push
mov
mov
jge
sub
ja
sbb
stc
push
xchg
and
add
les
xchg
add
jno
cmp
add
jle
mulb
xchg
loop
sbb
addl
sti
xchg
mov
and
mov
mov
adcb
mov
push
mov
call
xorb
mov
mov
mov
and
bound
inc
sub
and
test
pop
xor
imul
fdivs
daa
icebp
and
cwtl
sub
loopne
jmp
sbb
add
xchg
mov
scas
jns
es
test
notb
shll
cmp
idivl
ljmp
in
orb
mov
andb
cmp
int3
inc
or
jb
test
xchg
andb
rol
movsb
movsl
je
jp
mov
inc
push
adc
lcall
out
xchg
xchg
fisubrs
fistpll
orb
ss
outsb
pusha
dec
pop
sarb
in
imul
divb
and
lods
int3
fdivl
mov
aaa
inc
sti
les
neg
orb
movsb
xorl
and
clc
fwait
dec
mov
sbb
push
xchg
mov
ljmp
xchg
callw
sub
or
xor
adcl
int3
mov
aaa
push
fstpt
xor
mov
test
and
xchg
fadds
mul
mov
mov
cmp
add
cltd
clc
dec
add
push
jge
js
jl
xrelease
aad
addr16
test
jo
cmp
pop
shll
mov
adc
xchg
insb
imul
sarl
mov
lcall
adc
cmp
addb
jl
xchg
inc
jmp
mov
push
test
mov
repz
sarb
dec
mov
and
adc
sbb
pop
jo
mov
inc
xchg
arpl
inc
add
addr16
mov
out
pop
fwait
test
mov
pushf
incl
dec
jge
popf
dec
lea
and
mov
dec
in
addl
fs
mov
sbbl
stos
fs
inc
aad
mov
cmpb
rorl
mov
pushf
scas
movsl
popf
incl
push
xchg
ret
andl
mov
roll
push
lahf
setb
inc
mov
lock
mov
mov
sub
push
jecxz
xchg
jge
mov
pop
xchg
add
or
jnp
pop
jno
sub
or
std
push
movsb
pop
orb
pop
jg
jge
push
jp
sbbb
popl
rcll
dec
xchg
cmp
sbb
mov
or
das
add
push
mov
push
xchg
sbbl
das
xorl
aaa
mov
insl
push
int3
and
dec
xorb
cmp
decl
sbbb
scas
lock
divb
andb
adc
adc
add
addl
faddl
jle
xor
mov
jo
dec
out
mov
outsl
mov
mov
imul
ret
push
cmpsl
divb
cmp
inc
mov
lcall
andl
or
pop
ret
cmp
mov
movsl
dec
cltd
loopne
push
inc
cmp
repnz
add
push
xor
cltd
adc
sub
xor
sarb
add
sbb
mov
inc
mov
inc
repz
mov
push
lahf
popa
or
add
mov
mov
inc
xor
pop
xorl
push
dec
sahf
adc
insb
xchg
test
cmp
cmp
pop
addl
sub
outsl
dec
or
subb
push
mov
sbbl
mov
sub
cs
mov
lahf
jns
jne
mov
pushf
insl
ja
add
mov
fists
or
js
jg
jl
andl
rcrl
popa
ficomps
hlt
jl
cmp
xchg
xor
sbbb
or
insl
lock
push
cld
adc
inc
add
dec
in
loopne
iret
cmp
push
mov
mov
lods
loop
rorb
mov
cmpsl
in
mov
mov
mov
les
movq
xchg
data16
pop
addb
adc
jl
nop
andb
adc
xorb
leave
or
cmpsl
hlt
cmpl
mov
cmc
movsl
dec
sub
cmpsl
inc
sbb
add
adc
jg
pop
int3
pop
hlt
test
pop
sti
pusha
xchg
es
cmp
jp
cmpsb
into
subb
test
adc
icebp
mov
sahf
arpl
inc
rorl
cltd
xchg
mov
pop
dec
fnstsw
pop
cmc
enter
cmpsl
xor
stc
icebp
sub
sti
mov
and
ja
repnz
and
jge
jo
lds
mov
jp
push
xlat
or
adc
jno
adc
out
ds
jp
call
ret
adc
xorb
out
andb
xchg
cld
jle
ss
cmc
sub
inc
mov
lock
leave
orl
aam
sbb
andb
out
cld
sbb
mov
add
loope
fcmovu
je
addb
lds
xchg
subb
push
sarl
subl
test
cli
xor
dec
adcb
aas
or
lret
scas
mov
lcall
jae
mov
adc
orb
bound
enter
dec
or
arpl
mov
or
cmp
xor
sub
mov
or
mov
or
xchg
mov
lods
and
fbld
adc
out
cmp
or
cmpb
push
mov
jns
pusha
bound
int3
mov
and
mov
jmp
subb
cwtl
test
ljmp
and
imul
andl
popf
fisubl
sub
mov
push
jbe
xchg
and
imul
scas
sub
popf
sbbl
inc
dec
push
or
cmpsb
imul
dec
out
stc
push
xor
or
insl
and
loope
push
lret
aas
data16
out
or
and
sub
push
cmpl
dec
fsub
punpcklbw
outsl
cmpl
push
push
dec
out
xor
push
mov
std
or
and
jmp
xor
loopne
cmpb
scas
sbb
and
stos
add
in
orb
cld
repnz
mov
xor
jne
iret
cmpb
popa
in
push
cmpsl
or
push
mov
jecxz
repz
in
xchg
iret
push
xchg
xchg
pop
add
xchg
push
add
add
repnz
fsubl
ja
popf
fimuls
lahf
pusha
add
arpl
shll
addr16
push
shrb
add
je
mov
jle
std
xor
sbb
adc
mov
xor
inc
stc
call
sbbb
pop
xchg
mov
inc
add
lds
mov
jg
push
xorl
clc
add
pusha
lods
jno
fldl
pop
adc
sti
sbb
mov
jbe
xchg
imul
push
xor
xchg
outsb
mov
cs
mov
enter
dec
pushf
jnp
aaa
mov
sbb
sub
divl
fstpl
cmpsb
es
ja
addl
adcb
outsb
test
repz
add
mov
cmc
xchg
push
pop
push
outsb
addb
mov
rolb
or
int
xchg
mov
je
sbb
js
mov
mov
fnsave
add
mov
dec
push
fwait
dec
shll
ret
cmp
pusha
pop
lods
enter
dec
push
or
add
mov
cli
cwtl
rcrb
inc
subb
mov
adc
xor
addr16
pop
lods
xchg
mov
cmpsb
pop
mov
xchg
cmp
sbb
add
inc
fistl
cmp
cmp
sbb
repz
insl
addb
jl
xchg
mov
xor
shll
add
into
in
jmp
mov
xor
xchg
dec
sub
mov
add
push
into
xor
cmpsb
dec
enter
aas
pushf
inc
scas
nop
orb
mov
hlt
mov
dec
add
lret
bound
mov
leave
test
sub
or
adc
cmp
test
aam
lcall
leave
lret
push
fs
sbb
dec
lahf
pop
insb
bound
scas
andl
fnstcw
mov
aam
mov
enter
test
stc
push
sub
sbb
je
daa
shlb
sbbb
test
jnp
lods
int3
subb
xor
addb
sbb
subb
test
lods
pop
push
push
int3
fisubl
lods
dec
jg
subb
adc
test
push
or
leave
push
faddl
or
or
sub
mov
lock
push
ret
orb
shl
dec
jmp
shlb
mov
jl
mov
push
fdivl
pop
sbbb
mov
aad
repnz
outsb
mov
shlb
adc
loop
dec
into
dec
addr16
add
daa
pop
add
loopne
insb
xchg
rcr
sti
aad
mov
cli
aam
pop
pop
movsb
inc
xor
outsl
cli
scas
xchg
sbb
pusha
in
lret
leave
addb
xor
and
enter
sub
jbe
imul
in
or
clc
lods
mov
jne
pop
inc
and
subb
mov
pop
dec
and
adc
out
push
aaa
cmp
jae
decl
idivl
inc
lods
cs
ud2
jbe
sti
stos
pushl
xchg
mov
jnp
push
lcall
out
mov
imul
outsb
stc
cmp
fildl
cmp
dec
pop
sub
mov
cmp
push
mov
jb
mov
repz
xor
aaa
cltd
insl
sbb
fwait
pop
clc
push
test
pushf
xchg
lock
gs
orb
shlb
shll
and
xlat
fcoms
sub
or
mov
adc
cmpb
lea
mov
sahf
mov
imul
and
es
xor
fwait
adcb
test
jmp
mov
xor
scas
jae
mov
mov
setne
xchg
cwtl
adc
and
sub
sub
cltd
mov
jl
ret
scas
std
call
sbb
test
addb
fs
adc
inc
mov
sbbl
fidivrs
out
sbb
data16
mov
test
fidivs
data16
mov
pop
pop
xchg
jle
push
adc
xchg
sbb
or
and
iret
adc
je
addb
into
fstpt
roll
subb
mov
je
sub
insl
push
pop
sub
mov
ljmp
out
or
stos
mov
push
subb
repnz
fisubrs
push
loop
adc
sbb
sub
pop
jmp
pushf
pop
iret
popa
add
cld
or
insl
jnp
sub
or
jae
lea
pop
aam
mov
cmp
cld
sbb
pop
stos
jbe
cmc
adc
fwait
pusha
sub
mov
xor
js
jmp
call
imulb
subb
in
js
outsb
xchg
inc
pop
jmp
jo
push
xchg
in
in
pop
inc
fists
jns
cs
pushf
or
inc
xchg
mov
insl
out
jl
mov
push
outsb
push
mov
or
inc
cmpsl
jle
sbb
cmpb
dec
sti
adc
out
dec
arpl
cmp
aas
mov
rcrl
cmp
scas
ja
dec
test
xor
mov
test
sbbb
das
or
jle
repz
and
xorb
pop
imul
sbb
pop
jl
push
push
scas
xchg
jle
icebp
sub
xor
add
scas
push
fcomip
pushf
outsb
sarb
mov
push
cmp
adc
repz
jl
pop
cmp
xor
dec
jecxz
xorl
test
cmp
in
add
out
add
frstor
orb
add
stc
pop
xchg
jbe
xchg
xor
push
aaa
insb
push
adc
in
jmp
sbb
in
jnp
out
xor
dec
fwait
pop
inc
out
jmp
jae
outsl
cmpl
sub
dec
js
iret
aas
jl
pop
popf
cmp
sub
je
loop
mov
mov
fadds
imulb
aaa
cmp
daa
out
pusha
cmpsl
stc
sbbb
sti
pusha
jbe
std
push
out
inc
and
andb
mov
jb
phaddw
mov
ret
andb
lret
call
xchg
jo
xor
mov
push
loope
scas
negb
bound
push
test
cmc
je
inc
andb
loope
stos
clc
add
xor
or
iret
into
call
js
adc
hlt
add
xchg
jge
push
sbb
dec
inc
cld
cmpsb
push
mov
movb
stos
sbb
push
xorl
aas
ret
loopne
repz
test
lock
push
das
ret
pop
sbb
call
mov
add
test
mov
test
jecxz
sub
or
pop
add
enter
subb
movsb
subb
aas
rcrb
inc
sub
mov
js
jo
xchg
jg
mov
enter
cmpsl
cmp
cmc
call
ficompl
xor
aas
clc
mov
inc
test
inc
push
or
in
sbb
xchg
stos
loopne
and
add
push
fcomps
add
mov
scas
mov
mov
mov
add
cmp
cmpsl
test
test
sahf
xchg
adcb
sub
mov
addl
enter
cs
or
xchg
leave
cltd
call
cmp
or
sbb
stc
push
xchg
pushf
or
mov
add
dec
sahf
xor
addr16
in
daa
pop
test
aaa
cli
add
je
pushl
pop
dec
adc
inc
jb
andb
daa
xchg
subb
dec
mov
test
std
js
out
arpl
gs
clc
mov
negl
mov
popf
out
incb
cld
jne
loopne
xchg
std
inc
mov
jbe
sarb
das
addb
fld
pop
mov
popa
adcb
into
jmp
addl
and
repz
fdiv
movl
rcrb
pop
xlat
stc
mov
incb
fadds
repz
ss
xchg
mov
std
xor
lock
xchg
dec
cmp
mov
out
imul
xchg
out
or
stc
cmp
dec
and
sbb
cli
addb
add
mov
add
sbb
add
imul
cltd
sbb
hlt
clc
dec
mov
sub
fsts
add
pop
mov
push
and
add
dec
pushf
sbb
cmp
addr16
mov
sbb
sbb
xchg
pop
pop
pop
or
sbb
imul
cltd
mulb
add
repnz
pop
inc
addr16
das
mov
push
mov
lahf
cmp
popf
jbe
add
sbb
adc
sbb
mov
in
addl
push
xchg
cltd
cld
cmp
loopne
out
cmpsb
out
or
pop
add
add
call
jo
adc
fidivrl
inc
pop
push
and
fbstp
sbb
aad
or
and
jge
stos
ljmp
in
xchg
cmp
popf
push
xlat
inc
mov
es
fisttpll
loope
negb
mov
mov
daa
rolb
push
mov
cmp
inc
jecxz
and
js
sbb
enter
jecxz
neg
insb
es
addr16
pop
cli
sub
cmp
repnz
imulb
push
out
or
jmp
inc
mov
adc
popf
or
lret
pop
idivl
push
test
lcall
add
cmpb
xchg
addl
lods
add
insb
jge
adc
loop
loopne
sub
loopne
xor
pop
dec
sub
mov
arpl
jecxz
ljmp
and
in
imul
ss
sbb
or
jno
das
jnp
sbb
movsb
flds
inc
mov
jmp
jl
adc
xchg
fsts
subb
xchg
push
lret
stc
jbe
mov
xor
and
aam
gs
xchg
sbb
xchg
stos
add
pushf
cmp
out
jne
mov
hlt
sub
xor
shrb
inc
inc
dec
cmc
or
mull
cli
and
aad
in
jne
mov
stc
inc
sahf
sub
xlat
into
imul
xor
lock
lea
es
xchg
add
pop
cs
sbbl
ljmp
mov
mov
scas
cmpsl
movsb
sbb
int
push
mov
ss
hlt
incl
push
or
xor
roll
sbb
xchg
sbbb
add
and
ljmp
push
fimull
pop
adc
das
dec
pop
cmp
or
inc
lret
or
pop
inc
adc
int3
mov
int
aaa
cmp
pop
mov
pop
int3
pop
sub
ficoml
pop
xor
stc
cmp
xchg
xchg
xchg
les
lret
inc
xor
mov
sub
addb
aam
inc
std
bound
add
aaa
pop
xchg
sbb
fmuls
lret
lret
mov
popa
cmpb
loope
jg
cmp
scas
xor
add
addb
ds
scas
adcb
xor
xor
fcmovnb
cmp
stos
aas
sbb
pop
adc
and
inc
xchg
xor
imul
push
sti
sbb
adc
jnp
mov
pop
lock
fcmovnb
orl
lahf
imul
cmp
cltd
ds
mov
lret
inc
add
pusha
and
orb
sub
inc
mov
push
cmpsb
adc
cs
cmp
xchg
inc
adc
sbb
cmp
cmp
mov
lahf
fdivrl
mov
mov
xchg
or
sahf
inc
popf
mov
xlat
aas
cmpsl
mov
js
repnz
stc
inc
mov
inc
cmc
rorl
addb
xchg
mov
fcompl
lods
pushf
stc
mov
inc
jnp
out
rolb
mov
inc
jo
sub
xchg
inc
nop
in
inc
jp
sbb
dec
sbb
mov
pop
jo
loopne
inc
subb
repnz
or
sub
xchg
inc
insb
fwait
js
subl
addl
inc
stc
xchg
jns
jl
cmpb
xorb
dec
lret
je
sbbl
jg
adc
cmp
sub
dec
sub
xchg
sub
sbb
loopne
pop
insb
aas
repz
icebp
daa
faddl
lahf
in
dec
or
pop
jnp
and
lahf
ds
pusha
adc
movsb
jmp
fiadds
push
in
adcb
pop
mov
sahf
les
roll
mov
mov
fists
mov
push
jbe
and
roll
jne
or
dec
xorl
jnp
dec
cmp
test
cwtl
shrl
mov
fs
sbbb
jl
subb
push
test
cmpsb
cltd
sbb
cmpb
mov
push
in
ret
dec
icebp
lahf
inc
push
cmc
xor
adc
in
test
iret
mov
mov
mov
shlb
and
in
test
sbb
lods
hlt
inc
sarb
xorl
ds
aad
iret
sub
ljmp
loope
push
lcall
fcomps
add
lods
test
push
scas
mov
mov
jo
out
add
push
or
jge
push
mov
test
fidivs
fnsave
mov
out
mov
jge
sarb
scas
add
popf
pop
mov
pop
loopne
jge
jmp
sub
mov
ljmp
pop
sub
fcompl
movsb
push
pop
adc
inc
mov
jae
push
negb
pop
sbb
shl
mov
dec
mov
push
pusha
sbb
dec
push
lret
pop
xor
sub
out
jnp
cmp
pushf
cmp
dec
stos
jl
and
andl
push
dec
les
xor
or
xor
mov
jl
leave
pushf
pop
movsl
push
mov
cmp
in
cmpsl
pop
sbb
bound
rcr
pop
std
data16
mov
das
insb
inc
orb
sub
jg
cmp
insl
mov
pusha
mov
mov
data16
xchg
jno
dec
addl
pop
pop
rorb
xchg
pop
std
dec
mov
scas
xchg
mov
jl
jne
sbb
add
fisttps
in
lahf
inc
subl
dec
inc
push
pop
icebp
cmp
popf
jno
bound
inc
dec
mov
outsl
jmp
jnp
ds
sbb
into
fdivrs
test
je
lods
addb
dec
push
frstor
mov
xchg
sbb
lods
pushf
arpl
into
inc
jl
pop
jecxz
inc
pushf
out
sbbb
cmp
mov
andb
add
scas
aam
pop
repz
xorb
add
dec
mov
cwtl
pusha
frstor
sbb
pop
adc
scas
xor
loope
lock
adc
sbb
adc
push
lret
pop
into
aas
mov
psubw
mov
cmp
jns
lds
cmp
mov
imul
mov
andb
xchg
data16
sarb
cmpsl
jb
pop
add
push
lcall
ss
ljmp
sbbb
xorb
rcrw
cmp
loopne,pt
ret
repnz
jecxz
inc
add
outsl
mov
and
mov
stos
jns
lods
mov
mov
insl
into
decb
iret
cltd
imul
xchg
loop
das
xlat
push
test
stos
push
xchg
jno
xor
xor
mov
in
inc
mov
movsl
xorb
lahf
jb
add
lret
pusha
stos
out
shrb
cmp
mov
xor
mov
sbbb
or
fldl
sahf
sbb
add
hlt
adcl
push
pusha
and
cs
comiss
shlb
jne
jae
fldcw
pop
fisttpl
outsl
sbb
jbe
inc
pop
ja
jbe
popf
push
push
ljmp
aas
xor
mov
push
push
in
dec
jecxz
jne
xor
mov
or
dec
mov
pop
subb
out
scas
adc
mov
pop
scas
sbb
sbb
lret
xor
xchg
nop
jbe
adcl
rep
negb
and
ror
pop
mov
stos
and
adc
sub
xchg
adc
scas
jbe
and
lret
adc
pop
aad
popa
insl
cmpxchg
mov
test
aas
lret
pop
jge
fs
mov
stos
adcb
adc
push
popf
scas
push
outsl
add
or
mov
xlat
sti
rolb
ret
test
subl
xchg
or
mov
shll
testl
fdivl
mull
pop
ret
adc
loopne
add
xchg
lret
xorl
popl
cmpsl
je
adcb
push
mov
icebp
xchg
fistpll
add
sti
xchg
xchg
cs
adc
mov
xor
sti
jne
sbb
mov
mov
es
pop
cmp
mov
xchg
aad
adc
in
jmp
outsb
loopne
cmpb
push
imul
cli
sub
mov
mov
cmpsl
int
sarb
adc
shlb
fadd
mov
jo
adc
xchg
pop
int3
in
cwtl
andb
scas
rep
insl
movsb
test
adc
xor
inc
ret
jge
xlat
cmp
xor
cltd
dec
push
or
sub
inc
in
sub
cmp
divl
dec
leave
jp
dec
ds
cmpb
mov
jo
dec
mov
sbb
push
push
mov
sub
dec
loope
std
int
jne
adc
in
aas
or
outsl
cmp
sub
mov
lock
cmpsl
filds
adc
sbb
push
mov
and
orb
ds
popf
or
shrl
in
sub
orb
dec
sbb
xchg
push
inc
jne
dec
jl
incl
test
jmp
cmp
mov
xchg
push
mov
lods
roll
and
cmp
xorb
cmc
mov
dec
mov
inc
jbe
sub
mov
and
les
sub
pop
xor
sahf
jl
roll
dec
inc
cmc
adc
bound
dec
rorl
xor
aaa
orb
add
mov
nop
mov
stos
and
cwtl
mov
adcb
es
and
enter
call
fwait
inc
jmp
dec
aad
add
pop
dec
add
cmp
jo
mov
dec
clc
in
mov
mov
lods
add
sub
aam
sbb
cmp
pushf
xor
adcb
push
push
aad
sub
adc
movsb
push
stos
fisttpll
push
sub
cmp
adc
pop
mov
pop
xor
mov
inc
test
fisubs
mov
or
ljmp
test
cmpb
or
push
test
inc
xorb
ljmp
rol
adc
xchg
pusha
rolb
mov
mov
adc
inc
add
sbb
in
test
addb
loopne
sub
andb
mov
or
hlt
mov
adc
pop
mov
mov
popf
enter
mov
lods
mov
hlt
sbbl
xor
shl
addb
inc
mov
or
push
and
out
mov
in
test
lods
push
inc
rorb
sub
mov
fcomps
mov
pushf
adcl
ret
fisttpl
cwtl
pop
sbb
inc
lock
mov
lods
push
sub
xchg
addl
sarl
jp
adc
add
negb
xchg
movsb
add
sub
je
push
mov
test
subb
add
mov
xchg
addb
mov
cmp
xchg
out
adc
call
sub
xchg
or
add
mov
add
mov
xchg
mov
xlat
add
mov
sar
cmp
adc
repnz
clc
jg
mov
cmp
sub
nop
xor
mov
cli
jmp
adc
sti
cmpsb
sub
out
sub
and
add
push
adc
xchg
push
lock
std
xchg
xor
mov
mov
insb
loope
mov
mov
cs
sub
icebp
push
sar
bound
out
and
je
and
insl
push
stos
push
push
rolb
mov
rorb
std
xorb
add
mov
loopne
mov
mov
test
adc
ret
and
mov
xchg
es
popa
push
inc
mov
subb
add
and
rorl
imul
sub
stos
rolb
imul
xor
inc
mov
mov
xchg
add
cmp
add
fisubrl
adc
xor
andl
mov
test
js
mov
mov
pushf
fcomi
clc
add
addl
addb
shlb
and
jne
insb
subl
in
icebp
pop
les
adcl
jo
aam
add
mov
add
pop
adcb
mov
lcall
mov
orb
shr
arpl
inc
loopne
pushf
adcb
mov
ror
stos
repnz
jns
sub
and
cwtl
mov
test
mov
xchg
pop
add
dec
cld
cmp
add
xchg
xlat
lock
sbb
push
inc
shl
mov
icebp
xchg
in
add
test
enter
sbbb
shrl
mov
inc
add
pop
clc
push
xorb
xchg
mov
addr16
mov
fadds
cmpsb
mov
mov
mov
push
cmp
sub
addb
mov
cmp
xor
loopne
js
loop
mov
xchg
sbb
bound
or
mov
dec
jecxz
sahf
arpl
pop
mov
mov
inc
js
mov
leave
sarb
stos
lret
popl
xchg
lock
xor
in
add
jecxz
icebp
orb
fmul
sbbb
or
in
sarl
addb
lock
in
mov
test
push
cwtl
inc
mov
mov
repnz
adcb
popf
bound
lahf
cld
addb
adc
push
adc
dec
inc
loopne
lods
flds
push
test
xorl
lds
aad
or
dec
adc
and
push
pushf
or
xchg
xchg
mov
repnz
cmp
fcomip
pop
and
xchg
or
int3
sub
ss
orb
pushf
bound
mov
cmp
or
add
movsb
testb
insb
mov
mov
and
or
sbb
jno
push
insb
push
ficoml
pop
addb
push
jg
in
in
and
or
loopne
pusha
xor
pop
cmp
sub
sub
fsubs
inc
subb
cmpsb
adc
xchg
mov
mov
mov
dec
and
push
mov
stc
addb
addb
into
mov
adc
dec
push
pushf
pop
or
scas
rol
push
jmp
xchg
sbbb
dec
mov
jo
xor
mov
xor
jno
daa
adcb
sub
pusha
adcb
add
cltd
faddl
mov
mov
sbb
loope
dec
mov
mov
lahf
or
and
mov
pop
inc
test
mov
or
test
rolb
popl
mov
rcll
fnstenv
test
les
cwtl
pop
sbb
xchg
cltd
jle
andb
and
addr16
mov
cld
push
popa
add
push
mov
sub
mov
scas
sbb
fisubl
adcb
xchg
and
or
ficoms
mov
pop
clc
and
dec
lock
scas
sbb
inc
jno
adc
enter
js
test
stos
pop
push
orb
add
ret
sub
push
test
lock
into
negl
jecxz
push
sbbb
cld
rorl
fdivs
std
and
xchg
cltd
dec
mov
int
orl
and
and
add
xor
lds
stc
push
mov
sahf
add
int
adcb
inc
xchg
rolb
push
cltd
mov
fsubl
inc
ret
mov
mov
mov
jo
sub
adc
popf
adc
xchg
jns
sbbl
test
popl
lods
loopne
mov
mov
andb
xor
mov
inc
stc
mov
popf
push
loop
inc
mov
dec
iret
sub
orb
call
popa
or
xor
xchg
xchg
test
aam
pushf
mov
sbb
mov
sub
pop
mov
add
add
or
lahf
mov
loope
push
push
xor
push
jo
and
xchg
inc
lods
or
enter
mov
cwtl
mov
mov
test
xchg
jl
or
xchg
or
adc
fwait
and
sahf
stos
inc
nop
xchg
hlt
sub
cwtl
xchg
test
fcoml
and
mov
maskmovq
divl
adc
mov
mov
inc
pop
mov
adc
mov
adc
mov
add
mov
divl
sbb
cmp
mov
push
adc
mov
add
cmpsb
cs
mov
or
pop
inc
in
adc
xchg
lds
out
test
jg
shlb
mov
bound
lcall
cltd
dec
pop
test
add
addb
jo
mov
sub
lahf
shlb
pop
mov
and
pushf
pop
lds
adc
pop
fs
or
mov
adc
adc
or
int3
loop
xchg
xchg
mov
xorb
cmp
inc
cwtl
jp
cmpsl
xchg
mov
xor
cltd
jo
test
adc
or
andb
frstor
push
mov
cwtl
les
cmp
sbbl
sbb
lcall
scas
xchg
sub
popf
mov
add
movsb
xchg
rorb
sar
add
add
dec
mov
loopne
sbb
bound
xchg
xor
fsub
mov
je
daa
cwtl
adcb
or
movsl
add
add
fdivs
xorb
aas
xchg
rolb
out
pop
inc
and
push
and
jmp
mov
je
orb
andb
leave
int3
addb
popa
sbb
stos
addb
sar
loop
lea
addb
mov
xchg
cmp
xlat
bnd
mov
and
xor
jmp
addl
or
add
sub
pushf
push
scas
mov
outsb
and
mov
popf
repz
push
sub
test
xchg
mov
cmc
push
jle
pop
cmpsl
sti
sub
stc
pop
mov
xor
mov
mov
pop
sbb
std
push
mov
jo
cli
adc
lock
cmp
adcb
mov
adc
andl
sub
push
loopne
shlb
add
xlat
sti
push
add
xor
xchg
push
aad
loopne
mov
add
hlt
xchg
jo
cmc
sbb
rolb
leave
nop
sarl
mov
lock
iret
add
and
ret
sub
sbb
sbb
mov
cmpsl
inc
xor
jo
daa
fists
sub
inc
jb
inc
xchg
nop
inc
fildl
sbb
or
jmpw
call
cltd
fs
mov
mov
adc
dec
mov
add
nop
pusha
int
mov
inc
sub
xor
inc
out
and
loopne
popa
xor
ds
mov
push
xchg
rcr
jle
subb
adc
cmc
mov
jmp
sbb
lock
xchg
and
outsl
mov
test
adc
in
stos
mov
movsb
divb
mov
lea
lret
jo
xchg
dec
adc
or
inc
pusha
filds
xchg
jg
dec
add
loopne
aam
mov
add
enter
lock
cmp
mov
mov
cmp
pop
mov
add
and
lea
inc
xor
dec
inc
mov
adc
loop
push
cwtl
and
je
mov
repz
pop
jae
and
mov
mov
pop
rorb
xchg
not
or
adc
xchg
adc
nop
jae
and
out
xor
mov
icebp
loope
push
rorb
dec
pusha
popf
in
push
inc
int
xchg
shlb
and
cmp
mov
lock
xlat
xchg
and
sbb
push
lock
xchg
pop
int
xchg
addb
push
jmp
push
rorb
andb
repnz
mov
inc
loopne
mov
adc
jl
daa
divl
push
jecxz
mov
aaa
xchg
test
sub
mov
lea
es
pusha
or
push
or
cmp
call
subb
xor
pop
inc
xchg
mov
cs
add
or
mov
or
xor
mov
addb
xor
lock
ljmp
cwtl
jns
or
add
out
pop
xchg
pop
adc
movsl
cli
sti
push
jle
push
fcomps
xchg
dec
cwtl
adc
jo
outsb
ss
aam
xchg
addr16
push
in
mov
loop
loop
loopne
mov
shl
mov
aam
loopne
and
mov
pop
stc
jo
add
fildl
jmp
adcl
pop
and
rorb
cmpsl
mov
fidivrs
stos
cmpsb
or
in
loopne
aam
imulb
mov
nop
cmp
pusha
and
ja
pop
shlb
addr16
stc
add
mov
mov
loop
sbb
loope
xchg
addb
loopne
sub
subl
mov
mov
addb
incb
or
jns
loopne
and
sbb
imulb
xchg
ss
xorb
orb
add
push
inc
or
mov
sbb
mov
cmpsb
add
lret
orb
mov
cwtd
xchg
cmp
mov
push
ret
dec
xor
std
sbb
jmp
xorb
stos
lea
out
mov
xor
inc
subb
jno
cmp
mov
inc
fldcw
in
scas
fcomps
cmpl
push
inc
andb
mov
rcll
das
loopne
sti
cmp
pop
xchg
cmc
mov
cmpb
mov
inc
xchg
xor
loopne
add
xchg
sti
mov
cmpsb
dec
dec
lahf
aam
xor
mov
in
fimull
push
test
mov
push
dec
cltd
xchg
call
jmp
in
inc
jo
mov
or
stos
and
jb
sbb
cmpb
mov
pop
repnz
inc
mov
nop
andl
xchg
xchg
bnd
xchg
xorb
mov
sti
pop
jbe
fbld
mov
add
xor
cmpb
push
fmuls
lods
mov
pop
shlb
test
ficomps
dec
inc
cwtl
cmp
in
and
push
loopne
dec
es
fidivrl
add
and
jg
lret
cmpsb
sbb
jnp
mov
ja
aaa
pop
or
inc
and
and
xchg
xchg
stc
or
sub
in
pop
data16
in
addr16
sarb
nop
mov
xor
pop
push
sahf
addb
inc
test
dec
mov
or
insl
hlt
repnz
fdivs
popf
adc
push
fcoms
or
test
dec
addb
div
notb
test
in
ljmp
cmp
mov
mov
pusha
adc
push
jecxz
pop
sub
adc
std
or
dec
inc
in
mov
loope
jb
lock
add
cmpsl
loopne
fwait
ret
fwait
mov
and
and
xchg
mov
add
repnz
sbbb
cmpsl
cmp
mov
popl
sbb
mov
xchg
scas
cmp
xchg
sahf
loope
xchg
addb
cmp
adc
and
sbb
jmp
mov
idiv
mov
cmp
popf
jo
test
adc
mov
mov
repz
push
xchg
fadds
jnp
mov
dec
jmp
push
test
cmp
cli
jmp
xor
inc
xchg
push
cmpb
sub
pusha
and
cmc
fsubl
mov
lea
sbbl
in
adc
cmp
mov
in
nop
adc
inc
test
mov
aam
xor
mov
xor
lahf
lea
push
es
cmpsl
xor
pop
jg
add
inc
popl
enter
dec
inc
mov
adc
daa
jbe
push
repnz
sub
nop
xchg
clc
adc
aam
add
and
fstps
push
loopne
gs
jo
or
imul
sbb
scas
xor
nop
pop
inc
and
sarb
into
loopne
cmp
inc
repz
test
push
xchg
mov
movsl
rorl
jl
lods
mov
add
xor
and
std
adc
test
mov
roll
mov
xchg
subb
mov
loop
xorb
inc
rolb
cmp
push
mov
fldl
clc
loopne
insl
mov
adc
xorl
jecxz
decl
popf
ja
jp
stos
fsubrl
lds
or
loopne
addl
mov
inc
push
pushf
js
push
stos
nop
bswap
loope
cmc
jo
enter
in
repz
int3
pusha
sti
dec
add
in
xchg
movsb
inc
xchg
jo
pop
ss
sar
movb
or
lds
sbb
mov
push
sub
or
out
xor
mov
add
sbb
setle
sub
dec
loope
shl
adc
sbb
mov
push
and
test
mov
adc
jg
out
xlat
dec
nop
aam
push
add
sbb
shrb
xchg
sub
movsl
aaa
mov
inc
sbb
sarb
mov
fsub
pop
subl
inc
mov
nop
sbb
pusha
inc
mov
test
sub
pop
sub
add
xchg
lret
push
test
xor
inc
pop
rcrb
test
gs
addb
cmpl
pop
testb
xor
jmp
loopne
xchg
mov
nop
dec
addb
test
loope
roll
std
andb
and
xchg
movsbl
les
jge
out
dec
out
pop
je
xchg
mov
jo
pop
rclb
sti
sub
and
popl
aam
popa
sahf
push
int3
cs
andl
in
push
shlb
xchg
lock
addb
repz
xchg
add
push
movsb
test
xchg
call
ljmp
inc
out
test
es
xchg
mov
test
inc
shll
adc
je
outsl
mov
mov
pop
lahf
mov
rorl
fsubl
push
std
adc
cwtl
adcl
mov
std
out
hlt
loopne
icebp
into
test
shlb
orb
test
xor
sub
pusha
mov
mov
sbb
pop
outsb
mov
enter
jge
inc
out
insb
cmp
push
andb
mov
andb
sub
adcb
std
aam
adc
cmp
jae
lods
push
mov
push
mov
popa
mov
clc
andb
outsl
fsubs
cmp
stos
cmc
add
cld
andb
int3
test
add
sub
and
loopne
fistpll
notb
xor
outsb
pusha
dec
mov
add
jno
out
inc
sub
repnz
js,pt
jnp
ror
mov
sbb
xchg
xor
sbb
je
ds
cmp
mov
add
push
adcl
pop
xor
jge
es
repnz
subl
fistps
xor
push
lock
cmp
mov
jo
mov
push
push
divb
ja
pop
jle
fadds
icebp
test
loope
or
test
ret
aas
adc
repnz
adc
cmpsb
inc
je
subb
jo
loop
faddl
jecxz
roll
mov
gs
or
mov
jne
mov
iret
lahf
jbe
inc
dec
in
sahf
or
inc
xchg
jmp
cmp
mov
lock
icebp
jo
subl
cmpsl
lock
cmpsb
push
test
inc
mov
push
nop
popf
es
or
add
xchg
xlat
jge
xchg
push
subb
mov
add
adc
cld
jb
and
and
cmpsb
xor
jp
mov
add
push
mov
ret
in
adcb
ret
fistpl
movsb
rorb
bound
sub
add
inc
push
fwait
xchg
in
jne
lea
mull
sbb
jmp
xor
xchg
int3
shl
rcl
mov
sub
sti
js
fwait
dec
in
dec
es
cmpsl
fs
pop
pushf
add
mov
and
add
and
push
cmpsl
inc
xchg
and
xor
aad
xchg
int
lods
adc
addr16
jnp
push
cmp
xchg
lret
es
sub
orb
sbb
inc
xor
andl
std
mov
mov
add
mov
cmp
sub
imul
andb
adc
mov
dec
sbb
popf
in
adc
mov
or
loop
fdivrs
test
xchg
inc
push
sub
mov
imul
incb
ljmp
hlt
sbb
inc
pusha
push
and
ss
sub
mov
xchg
inc
pop
int
and
xchg
xor
out
and
out
and
cld
call
pop
lds
or
daa
and
lock
jmp
add
in
adc
and
cwtl
fcmovnbe
mov
call
ret
add
jns
call
sahf
inc
push
repnz
dec
fcompl
or
test
dec
xlat
nop
or
and
lret
orl
cmp
scas
inc
xchg
or
shrl
add
loope
pop
xchg
mov
mov
inc
add
sbb
icebp
loopne
test
xchg
inc
adcl
cld
xor
inc
sbb
xchg
sub
push
mov
dec
fimull
and
cmpsb
sub
testb
adcb
ljmp
nop
or
arpl
pop
shrb
cmp
pop
aas
jmp
add
or
cmc
sbbb
rol
addl
sbb
out
xor
subb
insb
sub
sbb
int
sub
pusha
aad
push
lds
xor
inc
addb
adc
push
rolb
push
stos
fimuls
testb
add
dec
imul
fimull
mov
and
insl
addb
mov
inc
xchg
jmp
mov
movsl
add
cmpb
ljmp
add
jle
dec
nop
or
or
call
popl
mov
sub
sbbb
lahf
xchg
sub
test
inc
add
mov
cmp
testl
xor
mov
lea
add
and
add
call
movsl
jne
dec
mov
xchg
sub
cmpsl
rcl
xchg
pop
inc
cwtl
cli
xchg
repnz
sbb
push
cmpb
mov
js
loopne
cmp
loop
mov
test
pop
addl
inc
xchg
xchg
enter
and
cmp
xchg
and
and
adc
mov
popa
les
cmp
cs
subb
jae
adc
mov
or
xlat
mov
xchg
loopne
xor
lcall
pushf
and
xor
cmp
and
test
jns
movsl
add
or
pop
enter
and
int
adc
fs
repnz
push
inc
pushf
or
sbb
sahf
push
add
and
sbbb
dec
sbbb
ficoml
inc
adc
jmp
adcb
inc
repnz
pushf
adc
orb
add
lods
xchg
mov
and
scas
mov
sub
sarb
xor
into
fisubrs
add
xor
adc
rcrl
popf
inc
mov
addb
xchg
mov
cmp
out
push
jb
dec
inc
cltd
add
add
loope
jo
test
adc
add
sbb
mov
orb
sbb
xchg
mov
mov
addb
ljmp
ret
or
cmp
xchg
xorb
hlt
pushf
inc
xchg
lock
sub
hlt
xlat
adc
test
cmpsb
es
sub
sbb
rclb
pushf
pop
push
test
mov
rcrb
adc
xchg
add
dec
inc
subl
subb
mov
inc
mov
mov
stos
call
pop
ret
loopne
adcl
pop
in
cli
add
cwtl
mov
stos
mov
je
mov
sbbb
test
in
mov
sbb
sub
pushf
test
iret
sub
mov
sbb
ret
xchg
jne
add
lea
mov
pop
cltd
hlt
shll
sbb
mov
mov
pusha
mov
inc
nop
mov
add
and
loopne
insb
mov
xchg
scas
inc
decb
fsubr
jb
mov
js
popf
dec
xchg
stos
rorb
enter
mov
and
mov
sbb
inc
jo
mov
cmpl
mov
mov
and
clc
andb
mov
and
aaa
aam
lcall
rcll
out
int3
ret
and
rclb
movsl
cmp
sbb
out
mov
call
psrlq
lock
adc
movhps
lds
sub
inc
icebp
test
cwtl
mov
ret
mov
dec
xor
cmpsb
movsb
daa
mov
jo
fwait
stc
mov
and
push
mov
popa
inc
lcall
loop
into
add
mov
sbbl
cmp
shlb
ljmp
xor
push
or
lock
xchg
adc
mov
fimuls
inc
add
inc
sar
jp
cmpb
mov
or
iret
inc
jo
xchg
sahf
lret
add
ror
lds
xor
dec
insl
addl
stos
inc
orb
stos
dec
fwait
and
cltd
sub
les
xor
push
aam
mov
adc
add
cwtl
xor
jno
fdivl
sahf
call
xchg
in
pushf
test
pop
adc
iret
in
pop
dec
xchg
xchg
ss
xchg
xlat
cmpsl
mov
xor
or
xchg
add
pusha
xchg
orb
xor
adc
xor
pop
hlt
repnz
scas
shll
push
test
sbb
xchg
addr16
ret
stos
xchg
les
inc
xchg
sbb
popf
mov
inc
test
mov
mov
push
pusha
xchg
movsb
fldenv
sahf
inc
bound
and
jo
add
mov
pusha
push
xchg
shrb
subb
sub
js
push
fsubl
or
aam
adc
addb
cltd
imul
pop
cmpb
xchg
icebp
mov
sub
add
sbb
or
aaa
push
push
mov
mov
mov
aad
ret
cld
xchg
add
aaa
jg
leave
cmp
lods
inc
adc
pop
xchg
or
and
inc
sbb
fcompl
xchg
ljmp
mov
jp
and
and
icebp
mov
test
rolb
fldl
mov
rcl
out
nop
sub
cmc
movsb
and
mov
cmp
cmp
push
sahf
cmp
movsl
lcall
or
dec
cmpb
push
or
cld
inc
mov
xor
or
lahf
jo
cmp
xchg
xor
adc
into
mov
fadds
xor
mov
push
es
pop
add
movsb
out
or
xor
xchg
addb
movl
rol
out
shll
icebp
mov
rol
add
incb
xor
aad
cli
jo
mov
lret
stos
fadds
fildll
cwtl
sbb
fmull
adc
add
cmp
in
mov
cmp
loope
stc
xchg
xchg
inc
and
fmuls
jp
pop
cmpsb
shrb
pushf
add
mull
arpl
add
mov
repnz
inc
xchg
pushf
xchg
roll
movsb
add
ss
jg
out
mov
add
fistl
pop
pop
add
and
add
andl
sbb
subb
repnz
xchg
cld
jmp
or
inc
aam
stc
mov
mov
inc
pop
or
nop
xchg
jo
cltd
adcb
loopne
add
lock
addb
cmpsl
nop
sbbb
imul
adc
inc
xchg
xchg
shrl
lods
orb
fadds
adcl
inc
jp
ljmp
jl
mov
shl
sub
mov
mov
xchg
add
inc
lahf
lock
mov
push
jle
sbbb
iret
add
inc
subb
shrb
addb
or
test
xchg
and
mov
jno
adc
bound
shlb
arpl
jns
test
mov
out
lods
push
dec
pushf
cmp
loop
aaa
sbb
lds
pop
cmp
mov
add
sbb
mov
cwtl
inc
adc
test
outsb
push
sub
pop
sahf
and
jp
cmc
add
ret
lock
add
addb
jg
hlt
mov
js
xor
sbbl
jne
mov
xor
add
inc
leave
mov
push
dec
jmp
cwtl
xorl
jo
cmc
int
loop
adc
popa
mov
add
rcl
outsl
sbb
ret
imul
fisttpll
or
rclb
dec
cmpb
jnp
jp
xorb
insl
jg
xchg
addl
mov
add
or
jae
mov
orb
and
push
push
add
push
sbbb
nop
ljmp
sti
pop
adc
and
pop
xchg
add
test
enter
std
cmp
sbb
in
adcl
in
jns
sbb
and
mov
mov
add
and
xor
adc
jo
fistps
cmp
xor
ds
sahf
mov
nop
jecxz
xchg
test
repnz
adc
pop
mov
mov
clc
adc
pop
loopne
sub
mov
pusha
mov
mov
mov
mov
int
es
jg
mov
js
xchg
push
rorb
test
xor
pushf
addl
mov
les
add
jg
std
add
negb
test
dec
or
sbb
mov
dec
test
repz
ret
int3
loop
pushl
inc
inc
pop
nop
jmp
xchg
mov
or
loope
inc
push
mov
jb
imul
and
xor
dec
dec
adc
dec
mov
inc
mov
jmp
ja
out
lock
clc
test
fsubrs
icebp
xchg
out
mov
add
mov
clc
lret
in
pop
push
mov
enterw
mov
repnz
xchg
test
jo
lea
dec
mov
andb
subl
xchg
adcl
dec
or
dec
mov
jecxz
push
popf
add
pusha
test
jno
insb
mov
mov
or
fwait
and
stos
add
test
push
loopne
mov
movsb
stos
jg
xor
pusha
mov
cmpb
xchg
pop
fdivl
rclb
add
inc
roll
mov
mov
hlt
ja
or
mov
sbb
adc
dec
mov
mov
and
push
loopne
add
pop
ds
insb
jge
mov
popa
or
mov
ficoml
ljmp
xorb
aas
jno
inc
loopne
mov
push
sub
fadds
xchg
dec
push
jg
popf
mov
mov
vunpcklps
movd
cld
inc
ja
cmp
sbb
pop
loopne
push
xchg
or
adc
inc
movsb
pop
mov
loope
and
xchg
adcb
pusha
sbb
mov
clc
and
pop
jo
inc
jno
and
or
jecxz
test
and
shl
or
dec
popa
addb
shll
fs
aas
mov
inc
mov
jg
mov
pusha
push
enter
cmc
add
fnsave
add
pushf
jmp
jp
xchg
je
fnstenv
fimuls
dec
mov
inc
shrb
mov
and
std
xor
mov
test
xor
add
into
pop
adcb
loope
mov
in
sahf
ljmp
mov
lcall
add
inc
cmc
or
test
mov
xchg
add
int3
sbb
pop
mov
stos
addl
adc
or
xchg
dec
outsb
mov
inc
or
orl
xchg
mov
adc
sbb
rcll
jo
fmuls
cmpsb
cmp
xchg
push
addb
mov
stc
pusha
mov
jecxz
divl
cmp
jecxz
psraw
jg
push
sub
and
xor
fldl
dec
dec
jmp
es
in
and
inc
imul
and
ja
rclb
xchg
xchg
nop
movsb
dec
sbbb
pusha
adc
mov
xchg
int3
hlt
xorb
int3
and
mov
mov
test
jecxz
cmp
popa
icebp
pop
inc
fstpl
and
in
sbb
lock
mov
inc
rcr
orl
loopne
mov
enter
cli
addl
sbb
loope
add
inc
and
ret
push
push
pushf
mov
mov
movsb
xchg
testb
stos
adc
sbbb
inc
movsb
das
shrb
mov
inc
add
adc
mov
xor
dec
jns
cmp
test
push
fwait
jnp
and
add
or
add
cmp
mov
pop
fstpl
jg
andb
push
int3
xchg
jb
loopne
shlb
mov
andb
aaa
clc
andl
sub
cmpb
enter
test
and
sbb
shlb
push
xor
mov
dec
inc
xchg
lock
shlb
cmp
fiadds
test
movsb
push
pushf
clc
sub
aam
and
mov
aas
xchg
mov
fisttpl
insb
mov
mov
pushf
mov
mov
fwait
mov
add
lea
sbb
add
shr
push
xor
fwait
jmp
cs
mov
mov
fadds
inc
sbb
nop
inc
jno
mov
xchg
loope
pop
ret
pusha
cmp
pusha
xchg
xorb
sti
and
sbb
popf
mov
aaa
adc
pusha
outsb
mov
add
sub
cmp
dec
mov
mov
inc
sub
add
jns
lea
xchg
pop
sub
mov
and
xchg
sbb
push
orb
push
gs
mov
adc
inc
addr16
cmpsb
sbb
fsub
mov
mov
add
cwtl
sbb
nop
cmc
cwtl
lea
adc
push
addr16
xchg
call
mov
stc
push
mov
mov
mov
mov
ss
xorb
sarl
pop
pusha
loop
push
xor
inc
lcall
mov
adc
mov
add
xchg
dec
jo
adc
cmp
out
push
mulb
mov
mov
xchg
incb
aaa
out
push
mov
sub
add
outsb
nop
add
popf
lock
and
popf
adc
stos
xor
popf
jle
jg
add
mov
rcrb
nop
sub
hlt
dec
xorb
sbb
lcall
iret
inc
xchg
mov
test
rolb
orl
ss
jo
nop
add
mov
cmp
out
movsb
dec
loopne
adcb
mov
or
xor
push
adc
andb
and
or
mov
fsubs
daa
xchg
out
inc
or
cmp
shlb
mov
or
lcall
fwait
rolb
adcl
pop
xor
adcl
in
lods
push
add
cli
movsb
popf
jmp
pop
mov
pop
sbb
stos
loop
test
pop
sbb
add
insb
stos
xchg
mov
repz
pop
push
aaa
add
test
mov
add
inc
addr16
out
jg
test
mov
subl
popf
and
xchg
inc
mov
mov
in
test
mov
mov
inc
mov
lea
xchg
mov
fiaddl
rclb
pop
shlb
leave
scas
xor
mov
orb
dec
mov
mov
sub
cld
add
xchg
inc
lods
mov
mov
subb
mov
adc
sbb
jne
shl
inc
mov
mov
push
hlt
pop
mov
adc
jo
movsb
std
pusha
lds
sarl
pop
add
inc
or
jo
mov
clc
jo
hlt
cmp
orb
rorb
popa
jo
xchg
mov
or
push
add
in
loopne
adc
mov
push
shll
add
int3
sub
and
xor
call
rcrb
mov
inc
jo
enter
sub
adcb
push
xchg
or
sbb
and
xchg
data16
sbb
in
sub
bound
orl
or
pop
stos
nop
in
pop
sbbl
cmc
loopne
dec
sahf
xchg
decl
mov
inc
sub
bound
insb
push
and
sahf
mov
int
push
xor
inc
lret
addl
pop
addb
adc
gs
xorl
push
aaa
in
jp
arpl
lcall
into
out
adc
outsb
cs
adc
test
sbb
subb
and
jo
test
clc
xor
adc
test
enter
repnz
jo
add
popa
jnp
mov
xchg
inc
scas
push
sahf
jo
loopne
mov
test
mov
mov
xor
ja
mov
or
rolb
fsubrs
str
dec
push
enter
movsb
out
xchg
xor
cmpb
mov
sbb
push
pop
xchg
sahf
cli
adc
cmpsl
mov
arpl
movsb
repnz
cwtl
cmpsl
mov
xor
roll
xchg
or
test
mov
jp
mov
enter
repz
fwait
rorb
sbb
push
les
adcb
aam
movsb
insl
or
test
std
rorb
dec
or
shrb
jnp
add
jno
mov
enter
mov
mov
jge
insl
dec
js
insb
add
shl
push
fdivl
testb
lods
scas
nop
jl
push
subb
cmp
filds
push
xchg
fs
scas
lock
fldcw
cltd
test
adc
add
mov
popl
sti
adcb
adc
mov
jne
and
sahf
or
pop
nop
sbb
cpuid
mov
imul
add
ds
xor
addb
sti
pop
xor
cmp
cmpl
add
test
insb
or
bound
sti
popf
mov
loope
rclb
decl
mov
mov
rorb
andl
js
adc
pop
adc
inc
je
int3
fadds
xchg
jne
popf
mov
mov
stos
mov
adcl
pop
mov
adcl
lea
add
bound
xchg
or
inc
mov
xorl
add
clc
repz
sbbl
push
lock
mov
pop
ds
inc
js
pop
adc
sub
mov
push
rcrl
cmpl
ljmp
stc
mov
test
cmpsl
pusha
lret
les
in
mov
cmp
xchg
jg
jmp
mov
pop
mov
and
dec
arpl
adc
fsts
dec
call
xor
mov
addb
mov
xchg
andb
mov
jns
notb
shll
subb
lods
lods
mov
ret
shrb
lds
inc
jmp
and
push
push
mov
jns
push
sahf
adc
or
int
lods
sbb
or
clc
xlat
inc
fsubr
adc
sbb
xchg
aad
fwait
jo
addr16
push
xchg
add
stos
adc
mov
xor
jnp
jb
sbb
gs
pop
ja
cmpsb
adc
mov
lods
adc
andb
scas
out
rcl
pushf
repz
roll
insl
add
fs
xor
daa
fisttps
imul
fcomp
sbb
inc
xchg
adc
scas
or
dec
imul
pop
jg
push
nop
mov
test
fiadds
dec
adc
in
mov
rolb
popa
xor
gs
cmp
lea
aad
xor
cmpsl
push
rcr
mov
pop
mov
mov
xchg
xor
cwtl
add
dec
jge
push
inc
push
pop
inc
mov
xor
cmp
call
lock
popl
orb
or
jecxz
imul
dec
dec
mov
pushf
addb
mov
out
inc
xchg
xchg
dec
mov
rcrb
fstl
out
push
into
loop
push
xor
xchg
test
or
mov
sub
ljmp
mov
cmp
and
icebp
nop
mov
ljmp
jl
xchg
pop
cmp
fisttps
mov
and
repz
cwtl
int3
scas
xchg
sbb
xlat
or
push
faddl
dec
leave
enter
aaa
fs
xor
fidivl
jecxz
add
push
push
mov
dec
loopne
movsb
leave
jne
ljmp
mov
rcrb
and
adc
daa
and
dec
add
mov
nop
test
and
dec
fwait
xor
mov
lods
in
jmp
enter
stos
std
add
xor
dec
mov
frstor
stos
les
lock
mov
mov
add
xchg
sub
mov
icebp
lds
mov
lcall
jo
sub
push
dec
loopne
shlb
mov
mov
rorl
inc
sub
les
cmp
gs
mov
jno
push
pop
int
adc
push
mov
call
push
mov
jmp
mov
push
call
daa
ds
push
enter
xchg
out
mov
enter
xchg
rorl
mulb
fmul
mov
or
gs
adc
stos
loop
popf
cmp
mov
aas
xor
or
mov
icebp
sarb
mov
and
rol
ds
mov
cmp
cltd
mov
mov
cmp
insb
les
fst
enter
pop
adc
inc
xor
sub
fs
fstpt
xchg
dec
cmc
rep
xchg
cmpsl
push
mov
movsb
cmc
stc
mov
mov
aad
mov
test
fstp
sub
pop
push
pop
jne
xchg
lahf
add
push
jno
push
fdivs
lret
mov
mov
pop
xor
lds
push
add
jg
or
jne
pop
cmp
and
pop
mov
mov
aaa
push
jg
rcl
jl
cmp
inc
sbb
jne
sbb
and
mov
pop
movsl
mov
jno
mul
mov
push
dec
mov
fcomps
push
stc
sub
inc
cmp
jmp
adc
mov
jmp
adc
xchg
mov
sbb
sub
lahf
sub
xor
cmpsl
bound
cmpsl
mov
mov
nop
cmp
pop
pop
adc
shll
xchg
das
and
push
or
iret
in
das
addb
mov
call
mov
repz
pop
in
pop
movups
mov
xor
hlt
mov
xor
aaa
xor
mov
push
add
or
sbb
and
adc
scas
adc
psubusw
xchg
loopne
ret
mov
ficompl
adc
clc
mov
ret
leave
mov
nop
movsb
inc
popl
rclb
jo
enter
mov
jge
cltd
mov
shlb
sahf
add
subb
movsb
pop
mov
repz
mov
add
orl
test
loopne
pushf
xchg
ss
mov
mov
shlb
mov
mov
xor
dec
xor
mov
mov
pusha
lret
lock
mov
gs
mov
mov
aaa
push
cmp
in
xchg
mov
into
add
scas
jge
cmp
sbb
cltd
mov
or
push
shlb
mov
sub
sbb
mov
inc
mov
sub
movups
andl
adc
jb
cmpsb
nop
inc
scas
xchg
cmp
inc
shll
cwtl
mov
mov
sub
mov
in
loopne
mov
and
add
and
add
add
in
mov
dec
sbb
out
rolb
mov
xor
xor
cwtl
or
mov
mov
xor
aas
rcrb
loop,pt
ss
xor
enter
jo
cmp
daa
sbb
mov
popa
sahf
mov
lods
dec
mov
stos
jae
lods
loope
push
fsubp
mov
xchg
adc
xor
rcll
add
mov
pop
mov
movsb
mov
pusha
push
jo
push
add
lret
shlb
jo
mov
adc
pop
mov
mulb
imul
pop
inc
add
dec
divl
xchg
adc
imulb
test
inc
test
adcb
xchg
mov
mov
xchg
test
pop
les
xchg
movups
pusha
ret
mov
mov
lret
pop
xchg
adcb
or
and
mov
xchg
cwtl
pop
popf
cmp
mov
and
xchg
xor
jno
fidivrs
lock
shrb
jg
loopne
jns
lds
test
rorl
mov
xor
dec
or
cmpb
mov
fmuls
js
xchg
and
movl
xchg
rolb
cmp
jge
movups
iret
and
xor
ret
xchg
popa
lock
lods
cmpb
cwtl
jo
cltd
or
orl
mov
lock
movl
adc
xchg
imul
mov
add
lahf
or
push
add
and
and
mov
js
fists
mov
mov
add
bound
and
add
mov
in
sarb
adc
popa
nop
test
ret
test
push
add
add
cmpsl
mov
subb
pop
inc
pusha
mov
mov
mov
add
mov
mov
mov
cwtl
les
test
and
add
mov
mov
mov
js
ret
mov
xchg
daa
scas
mov
fwait
jo
sarb
jo
rolb
nop
rcrl
xor
mov
mov
in
scas
fcomps
sbb
xchg
xorl
jns
xor
nop
add
dec
popf
fnstenv
sbb
jns
rclb
xor
jns
pop
les
fimull
add
xor
fwait
add
mov
xor
imulb
call
xor
or
out
mov
jo
das
xchg
sbbb
xor
fidivrs
rcr
add
repnz
mov
loopne
lock
inc
loopne
fnstenv
loope
dec
jb
test
mov
dec
test
loop
rorb
sbb
loop
add
mov
mov
in
mov
xchg
shl
mov
sbb
mov
insb
lock
mov
pusha
and
test
jb
jb
mov
neg
out
outsb
popa
nop
icebp
andl
xchg
js
inc
pop
pop
lods
pusha
add
adc
mov
iret
sti
fistpl
mov
rorb
js
lds
adc
cmp
div
or
int
cwtl
test
inc
add
dec
mov
xchg
mov
repz
and
mov
xchg
or
les
rorl
shlb
mov
push
add
xor
aam
call
int3
mov
and
mov
and
xor
mov
xor
nop
and
inc
jo
pop
cltd
shrb
nop
and
out
test
xor
test
scas
push
dec
lock
mov
arpl
mov
sbb
mov
push
push
sbb
rcrb
mov
cltd
add
lock
imul
nop
xor
dec
inc
add
inc
sub
add
das
ret
sub
test
add
mov
lea
ret
nop
leave
jl
jnp
jns
lods
movl
mov
xchg
add
rorl
inc
nop
mov
sbb
loopne
adc
mov
and
xor
stos
add
adc
mov
inc
mov
mov
pusha
shr
jns
mov
xor
and
mov
enter
insb
mov
js
mov
mov
xchg
cmp
jbe
icebp
and
add
nop
shlb
mov
mov
jp
loopne
sbb
mov
int
mov
xchg
cmp
adc
mov
shl
nop
add
repnz
lock
jp
leave
clc
clc
andl
fcoms
sbb
in
mov
lock
fs
inc
test
in
roll
xor
nop
sbb
xchg
xchg
nop
nop
xchg
scas
lock
jo
mov
lahf
mov
mov
movsl
xchg
nop
bound
cltd
adc
sub
xchg
cmpsl
ret
or
mov
nop
les
das
mov
call
or
call
inc
fimuls
in
scas
inc
jnp
js
int
js
lock
enter
loopne
mov
jo
mov
jo
lcall
sbb
inc
cwtl
ret
mov
bound
mov
shlb
arpl
xor
call
les
movsb
add
addl
nop
mov
mov
fdivr
loop
call
dec
loopne
push
outsl
fadd
sbb
icebp
jb
jno
shl
dec
mov
inc
jmp
xor
das
and
lock
inc
call
mov
test
scas
xor
and
je
hlt
mov
sub
mov
mov
out
jge
icebp
xchg
sbbl
icebp
xchg
xchg
dec
test
test
test
roll
repz
dec
mov
xor
sbb
andb
ret
cmp
sub
mov
cmp
mov
xchg
pusha
jmp
fcompl
ja
and
lret
sub
adc
jo
pop
add
pusha
add
ret
and
mov
sbb
mov
andb
rclb
xchg
mov
mov
nop
mov
cmp
cmp
ret
lock
or
stc
add
rcr
mov
popa
int3
ret
test
js
bound
cmpb
mov
sub
js
and
ret
lods
cmp
mov
ror
ret
mov
dec
mov
lock
fildl
fcompl
ficoms
pop
cltd
add
mov
lret
adc
cwtl
lds
into
push
call
test
ret
jmp
cwtl
lock
mov
lock
xor
mov
mov
mov
shll
mov
cld
mov
enter
aaa
inc
xchg
out
mov
cmp
xor
in
sbb
add
lock
cmp
jo
xor
fadds
cmp
imul
dec
dec
jo
scas
xchg
mov
mov
rolb
idivb
inc
js
sub
inc
andl
and
cmpsb
dec
gs
inc
inc
ret
add
ret
imul
xor
shlb
mov
xchg
cmp
test
test
js
xchg
les
fs
mov
insl
stos
mov
mov
and
inc
and
and
test
enter
push
sahf
xor
movsl
pop
subb
mov
xchg
hlt
push
ret
rorb
cmp
mov
mov
scas
adc
stc
fcoms
pushf
vrsqrtss
imul
loopne
mov
nop
mov
jo
std
loope
pop
fwait
aaa
adcb
mov
mov
xchg
mov
xchg
syscall
iret
push
orb
mov
sar
sahf
rolb
mul
mov
mov
push
cmp
adcb
cld
mov
sbbl
xlat
dec
mov
inc
xor
push
mov
cmp
test
cmpsl
clc
push
addl
lock
sti
xchg
xchg
popa
cli
add
fs
stos
scas
clc
mov
aam
test
sbb
inc
mov
loopne
and
push
mov
and
lret
cwtl
mov
loopne
test
mov
mov
ror
cwtl
mov
pop
adc
test
cmp
pop
dec
fstpt
mov
mov
fsubl
pusha
mov
test
nop
loopne
les
loopne
insb
adc
stos
sbbl
ret
aam
cld
lods
mov
xchg
mov
add
pusha
add
nop
bound
mov
test
loop
mov
add
inc
icebp
mov
xor
or
mov
mov
mov
xor
rclb
sub
nop
aas
push
mov
mov
mov
push
mov
sub
loope
rol
mov
test
cld
mov
iret
sbb
jo
int3
dec
adc
fldl
popa
lock
pushf
movups
pop
repz
les
lret
mov
mov
pusha
push
cmp
push
in
lock
call
pop
push
out
nop
adc
jnp
loopne
out
add
out
jo
bound
inc
rolb
or
jp
in
movsl
mov
rolb
cwtl
mov
movsb
mov
adc
mov
mov
les
xchg
aam
inc
xchg
or
enter
cmp
adc
stos
movsb
push
mov
ficompl
and
sahf
mov
movsb
mov
movsl
lods
in
xor
lahf
mov
mov
scas
enter
mov
les
mov
das
mov
cmpl
jns
jno
or
add
enter
mov
add
inc
fcomps
rol
lret
add
sub
jl
loop
call
mov
cwtl
mov
aam
nop
xor
lods
xchg
in
xchg
aam
or
fcoms
test
xchg
stc
shlb
lock
mov
mov
pusha
lea
pop
nop
pushf
aas
xchg
mov
mov
sub
lock
nop
mov
sahf
jo
subl
jbe
dec
out
xchg
adc
addr16
sub
push
jb
mov
inc
jmp
cmp
popa
pusha
test
pop
aad
push
addb
mov
jl
inc
mov
dec
jle
addb
xor
or
cmp
addb
xor
bswap
aas
incl
lods
insb
pushf
pop
andb
lahf
pop
andb
adc
sub
sbb
andb
adc
das
out
pop
filds
test
orb
mov
orb
cmp
add
xor
orb
cmp
pop
aaa
testl
subb
xchg
push
subb
sbb
and
adc
subb
sbb
daa
out
xlat
addb
mov
mov
lea
jge
add
xor
push
into
incb
or
mov
outsb
sahf
pop
andb
popf
pop
andb
adc
cs
push
fiadds
sub
mov
jp
inc
mov
orb
mov
orb
cmp
push
testb
lds
lcall
test
gs
push
subb
sbb
es
subb
sbb
and
xorl
orb
cmc
mov
clc
insb
lahf
jae
xor
test
inc
test
adc
mov
xor
xor
adc
enter
push
jns
ret
pop
sbb
inc
out
clc
xor
ret
mov
mov
lahf
xchg
rol
jmp
pusha
mov
add
mov
cmp
call
mov
loopne
pop
popf
jo
inc
rol
nop
test
nop
addl
push
mov
loopne
adc
andb
mov
mov
add
push
push
js
js
test
and
mov
fcoms
clc
sub
lret
add
mov
int3
cwtl
jecxz
or
roll
adc
int3
mov
adc
jo
pop
loopne
out
inc
push
int
mov
cld
and
into
mov
cwtl
xchg
push
jb
test
iret
cld
mov
int3
pop
inc
addb
xlat
popf
test
rcr
rclb
sbb
xchg
rcrw
ror
and
xchg
mov
mov
adc
mov
push
ffree
stos
lds
js
mov
test
mov
mov
xchg
ret
test
out
jns
mov
add
mov
cltd
stos
mov
mov
xchg
mov
sub
stos
addl
mov
jb
fildl
inc
xor
mov
mov
fs
xchg
xchg
add
xchg
mov
orl
xchg
lods
movsb
sub
in
adc
les
or
movsb
cmp
cld
adc
les
ret
xchg
mov
adc
xchg
les
rorb
push
xchg
mov
xor
repnz
mov
or
or
stos
movsb
sub
ljmp
fimull
pop
xchg
mov
adc
xchg
push
or
cmpsb
movsb
es
mov
or
mov
ss
mov
or
scas
movsb
cs
mov
or
mov
adc
add
xchg
mov
adc
xchg
les
rorl
push
xchg
mov
xor
icebp
adc
mov
or
or
test
adc
cltd
les
pop
xchg
mov
adc
test
add
movsl
movsb
and
mov
or
mov
xor
mov
or
lods
movsb
sub
mov
or
mov
adc
xchg
inc
push
xchg
in
rcr
mov
mov
mov
repz
mov
mov
lret
frstor
stos
frstor
jmp
mov
frstor
fcmovnu
mov
mov
push
movsb
sti
frstor
xchg
mov
frstor
cmpsl
frstor
out
mov
xchg
frstor
xlat
frstor
mov
mov
neg
mov
frstor
iret
frstor
scas
frstor
out
frstor
lahf
frstor
mov
mov
push
movsb
frstor
xchg
lcall
les
lock
mov
enter
call
mov
enter
mov
or
in
mov
enter
mov
or
mov
sbb
cwtl
mov
pushf
adc
lcall
enter
mov
or
lea
movsb
mov
fwait
adc
cs
mov
xchg
lahf
mov
mov
jb
mov
xchg
bound
dec
xchg
fs
cld
cltd
movups
pushf
decl
jg
fildll
arpl
xor
test
nop
es
xchg
dec
xchg
jns
lahf
mov
cwtl
pcmpgtb
pushf
sbb
mov
icebp
mov
call
pushf
sbb
fs
mov
or
mov
mov
pusha
stc
mov
in
adc
in
aaa
inc
test
int3
dec
inc
mov
cmpsl
nop
insb
mov
mov
mov
jae
adc
fisttps
jmp
mov
cmp
and
lea
xchg
jnp
xchg
lahf
jbe
cmpsl
stos
insb
xchg
les
jecxz
repz
mov
fiaddl
js
lock
lods
push
adc
xlat
lea
int3
fadd
mov
or
xchg
add
clc
mov
addb
mov
mov
nop
mov
or
xchg
loopne
clc
aad
inc
loopne
or
adcb
xor
lcall
mov
xchg
add
orl
sub
add
ds
les
cmp
adcb
rol
js
movsl
stos
scas
fs
leave
mov
mov
mov
mov
aad
andl
inc
sub
mov
add
in
ret
into
xchg
hlt
shl
lock
dec
repnz
in
imul
arpl
test
int
in
fdivr
lods
stos
mov
scas
fsubl
xchg
mov
sar
stos
jecxz
or
test
push
sub
inc
decb
test
xor
rorb
and
push
enter
dec
mov
xor
hlt
mov
cltd
fstpl
pop
mov
or
insb
rolb
lock
ret
ret
lahf
mov
jo
mov
cwtl
mov
stc
adc
mov
movsl
mov
mov
mov
shll
fwait
mov
dec
and
and
arpl
mov
xchg
add
mov
fdivr
fidivrs
adc
xor
inc
jmp
jecxz
hlt
mov
cwtl
sti
rcrl
fs
dec
inc
pushf
enter
fs
push
loope
icebp
hlt
addr16
test
ret
in
fsub
mov
mov
xchg
daa
test
mov
repz
xchg
shl
sub
mov
push
mov
mov
mov
rcl
push
enter
push
shr
or
outsl
lret
pusha
rclb
stos
out
imull
mulb
test
mov
or
mov
jo
repz
repnz
ja
test
adc
repz
cmc
repnz
or
lea
adc
mov
rorb
and
nop
xor
test
push
or
mov
jle
pop
dec
sbb
xchg
hlt
movsb
sub
dec
adc
clc
jno
mov
inc
enter
aas
inc
cwtl
or
call
and
dec
push
mov
mov
or
cld
clc
stc
fcoms
mov
sub
sub
rolb
inc
popa
test
test
mov
lret
insb
scas
nop
nop
lock
fsubl
js
jmp
pop
inc
add
out
dec
push
inc
sti
inc
or
les
or
or
adc
out
sub
or
aas
xchg
out
and
jmp
inc
xor
pusha
shlb
aad
adc
push
ss
lret
cmp
cld
inc
push
clc
pop
jns
test
in
mulb
js
out
repz
mov
nop
call
push
shl
sbb
mov
out
sub
mov
movsb
fcomps
mov
cmp
and
mov
dec
mov
ret
mov
mov
das
roll
lods
push
pop
mov
clc
rcll
mov
loope
mov
fsubrp
jmp
fwait
mov
test
nop
jbe
insl
das
mov
add
adc
xchg
add
adc
cmpb
and
test
push
xchg
sarl
inc
lcall
sbb
lret
adc
xchg
dec
adc
js
mov
ja
dec
arpl
iret
in
in
xor
jecxz
mov
int
xor
ret
call
ret
ret
cmpsl
mov
jno
in
in
xchg
mov
jmp
pop
xor
mov
in
int
loope
push
repnz
insb
out
sarl
js
mov
lock
loope
sbb
and
in
sarb
fildll
shr
jmp
scas
mov
sarl
mov
xchg
inc
pop
jecxz
lock
mov
nop
insl
rolb
out
repnz
ffreep
xchg
out
bound
push
sbb
push
in
loopne
inc
aad
mov
adc
xor
ret
in
movsl
daa
cmpl
xchg
adc
xchg
pusha
lret
test
leave
adc
or
clc
scas
iret
int
xchg
int3
xchg
dec
in
or
fcmovb
xchg
rorb
cmp
test
xchg
enter
xchg
lds
rorb
nop
stc
cltd
adc
ret
sbb
add
mov
test
aam
loop
ret
xor
adc
test
ret
hlt
pop
mov
push
hlt
loope
dec
mov
enter
mov
dec
or
adc
jnp
cmc
fcmovbe
gs
inc
xchg
add
nop
sarl
test
and
cltd
ret
shl
push
and
out
jns
pop
mov
clc
mov
fcmovb
xor
and
push
jge
adc
add
mov
mov
scas
mov
test
add
xchg
add
clc
mov
dec
dec
adc
cmp
cmpsl
mov
adc
sub
mov
inc
shlb
xchg
cmc
mov
jo
rolb
js
dec
inc
xchg
fsub
arpl
pop
pop
mov
sbb
scas
mov
cmp
popf
lock
aad
pop
mov
adc
out
mov
adc
in
sub
push
mov
xchg
xor
or
sbbb
jp
mov
pop
bnd
outsb
mov
mov
push
push
clc
mov
cwtl
mov
adc
mov
movsl
inc
sbb
cmpsl
mov
in
push
shl
dec
call
mov
test
inc
stos
mov
adcl
xchg
repnz
mov
xchg
mov
cs
nop
cmp
xchg
repnz
pop
pop
repz
inc
and
cmpsl
roll
test
mov
int3
mov
xchg
mov
xorl
jns
xor
int
push
mov
cmp
adc
sub
and
jno
in
les
repnz
leave
sbb
mov
in
daa
xchg
mov
in
arpl
aam
loop
in
hlt
rol
or
cld
ss
xchg
out
fdiv
mov
dec
js
cld
movsb
shl
out
cmpsl
lcall
repz
sbb
dec
jo
mov
pop
bound
movsb
add
cmp
or
adc
mov
fsubr
add
sbb
xor
push
sub
loopne
mov
les
jae
scas
and
call
sub
adc
scas
call
add
enter
mov
ret
xchg
call
jo
shl
xchg
call
pop
mov
cmpsb
pop
adc
inc
mov
xor
fdivrl
pop
cld
cmp
dec
test
add
insb
adc
xor
and
insb
nop
shl
pushf
pop
js
cmp
dec
popa
scas
repnz
lods
inc
or
add
loopne
jmp
shl
lea
mov
mov
cmp
cld
and
pushf
cli
mov
mov
icebp
ror
nop
mov
nop
adc
loopne
les
mov
lods
sarb
leave
call
sub
xchg
loope
loop
icebp
adc
shll
in
jb
mov
jnp
cmp
dec
inc
bound
cmp
and
sub
test
dec
addr16
arpl
and
cmc
mov
test
inc
lret
pusha
ret
movsb
mov
sub
dec
sbb
sub
andb
mov
imul
xlat
jl
iret
in
pop
jo
loope
iret
aaa
xchg
or
mov
ret
fwait
sbb
adcl
jbe
cmc
and
mov
sub
xchg
jecxz
and
sbbb
pusha
stc
mov
lock
in
jb
inc
and
cli
fcomps
hlt
fsubr
xor
cmpsl
jmp
clc
out
mov
xor
popa
cwtl
sbb
nop
test
add
fstl
enter
in
lods
inc
sbb
js
push
jno
stos
faddl
stos
js
sub
movsl
iret
push
xor
push
xor
sbb
inc
mov
loopne
lcall
push
xor
cmp
adc
inc
sbb
xor
adc
mov
xchg
stc
adc
ds
stos
adc
xor
scas
mov
pop
mov
xchg
mov
mov
jl
test
adc
into
int3
leave
mov
mov
aam
xchg
mov
push
mov
rol
sahf
mov
loope
and
mov
std
mov
mov
jl
push
js
fsubs
add
pop
sub
adc
pop
rcrb
test
int3
shlb
or
sbb
fldl
adc
pusha
repz
push
iret
push
add
in
out
fists
lods
call
shl
movsb
adc
push
mov
adc
enter
out
jmp
loope
int3
ret
xor
mov
into
out
mov
decb
push
call
sbb
xor
sarb
repz
out
test
add
clc
sub
out
dec
mov
out
jecxz
aam
push
bnd
mov
pop
lock
pop
sbb
popf
mov
mov
loop
jns
leave
call
push
adc
in
adc
ficoms
pushf
dec
push
sbb
inc
mov
mov
cwtl
ss
lock
mov
mov
popf
inc
mov
addr16
repz
pusha
jno
fs
test
inc
jg
enter
negl
mov
mov
andl
outsl
push
and
mov
rol
cmpsl
adc
cmc
loop
or
xchg
testb
mov
xchg
mov
cmc
out
mov
push
nop
out
in
shl
movsb
test
jecxz
orb
cwtl
mov
add
mov
aam
int3
add
mov
icebp
stc
and
mov
mov
in
cmc
dec
in
les
call
cmpsb
xlat
repz
mov
aam
leave
mov
xchg
sub
xchg
shl
mov
mov
mov
add
addr16
mov
mov
add
pop
mov
add
int3
iret
ret
scas
mov
lret
mov
stos
mov
jp
jbe
jns
shlb
repnz
leave
pop
aam
cld
shr
mov
add
shrb
and
mov
mov
mov
adc
loop
xchg
sbb
cli
jmp
cmp
int3
pushf
push
enter
shrb
in
cld
mov
jecxz
pop
repz
jecxz
out
sbb
imul
mov
mov
stos
in
fnstenv
inc
fdiv
jmp
and
es
cmp
add
dec
mov
out
lods
clc
cmp
pop
mov
loopne
xlat
mov
jbe
in
scas
dec
mov
lods
lods
mov
mov
jo
lcall
jae
fs
sti
pop
sbb
jmp
dec
cwtl
pop
push
mov
push
or
and
in
adc
cli
pop
ret
add
mov
sub
in
dec
nop
hlt
ficoms
test
cmc
mov
loope
lods
out
inc
pop
inc
das
mov
pop
dec
or
xor
int
scas
cs
jmp
fs
ret
stos
sysenter
rcrb
imul
mov
mov
fucom
xchg
in
movsb
shl
push
mov
bound
pop
in
dec
push
div
cs
inc
incb
jg
push
movl
xor
clc
cmpsb
push
cmpsb
push
iret
sti
mov
jmp
into
daa
int3
sbb
and
mov
jo
cmp
mov
call
data16
cs
inc
mov
shlb
out
mov
pop
clc
xor
aam
pushf
call
jnp
sbb
in
mov
shlb
or
or
adc
pop
nop
psllw
ja
mov
lds
and
mov
call
mov
scas
mov
cmpsl
mov
roll
and
insb
adc
dec
jmp
imul
push
mov
jg
test
add
or
mov
aam
xchg
fmuls
les
cs
cwtl
xor
aam
cmp
cltd
mov
xchg
inc
cmpl
cmp
test
imul
mov
ja
jae
icebp
mov
loopne
lods
sbbl
cmpl
lret
cs
jns
test
inc
cmc
inc
in
adc
jge
ja
adc
or
add
sbb
mov
loopne
sti
fmull
xchg
addb
nop
test
lret
or
xchg
cli
push
add
in
lods
sbb
sub
xor
fcmovu
js
int3
loope
ror
testb
xchg
cmc
stos
xchg
and
int
outsl
popa
xor
xchg
pop
outsl
scas
popa
data16
and
ljmp
mov
push
outsb
orl
pop
mov
loop
cltd
rcl
cwtl
add
incl
lods
addb
pop
outsl
sub
mov
cmpsl
mov
xchg
popa
push
mov
mov
xchg
adc
xchg
adcl
mov
fsubrl
cwtl
xor
int3
add
sub
movl
cmp
ja
or
cwtl
or
xchg
test
dec
and
and
les
sar
xchg
test
xchg
mov
js
mov
rorl
test
fwait
inc
mov
stc
add
sbb
shll
jb
rolb
call
jae
and
mov
sub
cmp
pusha
stc
js
rol
rorb
xchg
mov
fsubs
call
mov
call
add
lock
bound
xor
and
roll
ljmp
dec
mov
or
movsb
mov
mov
enter
shl
pop
or
rcrb
les
mov
mov
popa
inc
or
bound
fadds
int3
jo
xchg
mov
fsub
cwtl
or
mov
xchg
sarb
shlb
inc
and
dec
mov
and
sarl
lahf
ror
es
pop
mov
mov
push
cwtl
and
test
cmp
pop
enterw
sbb
jno
fistpl
xchg
rcrl
jno
push
mov
fadds
int3
dec
int3
xchg
jo
inc
bound
seto
mov
test
shlb
fsubrs
shlb
les
xchg
out
dec
inc
addb
bound
fadds
int3
pop
int3
xchg
loopne
fsubr
mov
xlat
mov
mov
xchg
clc
sbb
mov
or
mov
mov
xchg
sub
adc
fwait
dec
adc
mov
popa
fcoms
imulb
lock
les
int3
xchg
push
out
mov
push
xchg
or
cwtl
test
fimuls
test
mov
adc
js
clc
clc
sub
dec
aam
enter
adc
orb
mov
xchg
or
xor
les
xchg
in
mov
pop
lahf
rol
es
roll
shlb
nop
adc
add
sbb
loopne
mov
les
rorl
xchg
test
xchg
sbb
or
pop
test
pop
mov
mov
cmpb
jo
cwtl
adc
add
test
xchg
bound
call
clc
xchg
mov
call
cmp
and
decb
int3
xchg
push
imulb
mov
shlb
call
int3
xchg
sbb
inc
cmp
mov
shll
movsb
pop
dec
cmpsb
cwtl
push
call
dec
les
dec
mov
sub
inc
jno
fcmovnbe
rol
es
std
mov
xlat
dec
call
test
pusha
mov
fsubs
add
pop
xchg
dec
in
fcmovne
add
pop
stc
or
insb
orl
lret
xchg
out
or
mov
xchg
or
js
xor
xchg
pusha
shlb
les
rcrb
aaa
adcb
popa
and
mov
cmp
xor
sbb
add
push
les
and
fs
std
add
sbb
sbb
and
mov
xchg
rol
shlb
loopne
cwtl
adc
mov
rcrl
xchg
mov
sbb
int3
jo
xchg
and
sub
sbb
rolb
sbb
inc
jns
fsubrs
sbb
add
and
fwait
dec
pusha
jp
les
xchg
jp
xor
sbb
mov
jb
shlb
call
lahf
rol
es
cld
enter
mov
or
dec
push
xchg
pop
test
jae
bound
sbbb
call
fdivs
dec
adc
movsb
loopne
xchg
roll
or
mov
and
xor
inc
pop
sbb
xchg
jo
sub
js
push
jne
andl
fadd
test
test
lahf
shrb
cmp
mov
frstpm(287
dec
stos
cmp
lock
push
out
mov
js
jo
jo
or
pusha
mov
mov
mov
push
inc
push
shr
xor
mov
mov
imul
andb
lock
nop
pushf
mov
or
mov
or
jmp
inc
rolb
inc
mov
pop
stc
fisttpll
mov
loop
fimuls
fsubs
sbb
test
rcl
push
nop
or
xchg
inc
shrb
test
push
and
js
xor
out
test
dec
arpl
fs
sbb
jg
test
fbld
sub
es
mov
or
aam
clc
jecxz
inc
icebp
or
or
mov
sbb
test
int3
mov
movsb
mov
inc
and
nop
and
mov
test
icebp
cmp
pop
adc
cmp
pop
adc
cmp
push
les
jo
or
lds
mov
sub
xor
and
loopne
cmp
inc
or
out
mov
jb
xor
rolb
mov
mov
adc
or
fmul
mov
movsb
shr
mov
add
add
sbb
fstps
fwait
dec
xor
andl
jo
push
ret
js
and
clc
xchg
fldl
jo
and
mov
adc
sahf
fwait
stos
js
mov
or
cwtl
loop
and
or
enter
icebp
inc
push
shrb
sbb
push
test
mov
lock
repnz
xor
fs
andb
orb
lds
mov
call
pushf
mov
push
adc
mov
pushf
push
or
pushf
sub
shll
test
inc
les
pop
cwtl
mov
call
mov
in
xchg
sbb
scas
adc
daa
fwait
add
jo
test
rcl
mov
stc
addb
lock
adc
mov
fdivs
stc
or
xacquire
rcrl
mov
cs
les
and
out
mov
test
mov
mov
shrb
inc
rorl
clc
fimuls
xor
es
sar
test
or
sbb
adc
cmp
in
popa
jo
sahf
into
les
clc
sub
in
andb
nop
out
mov
sub
out
push
add
lods
mov
inc
loop
sbb
jno
orb
mov
sub
inc
mov
jle
shrb
or
clc
sub
mov
cs
clc
jo
call
adc
xchg
dec
adc
pushf
mov
mov
lret
movsb
or
xchg
mov
lock
test
shlb
push
sbb
clc
test
xor
or
fcompl
inc
es
dec
sbb
mov
xchg
nop
call
fwait
add
call
ret
inc
loop
sbb
jno
push
lock
jno
add
call
scas
mov
rcr
inc
and
jo
sahf
mov
iret
pop
xchg
mov
cmp
imul
shrl
pop
mov
jmp
mov
xchg
pop
mov
adc
push
mov
xchg
test
pop
adc
shl
es
sarl
mov
dec
jno
lock
fcoms
jo
dec
sub
nop
ljmp
js
mov
pop
ret
lock
enter
repz
fwait
dec
xor
js
xchg
loop
inc
sbb
mov
push
jo
jnp
adc
jmp
clc
cwtl
adc
sahf
mov
or
lock
nop
mov
mov
dec
fsubs
adc
xor
sbb
or
xor
mov
xor
adc
push
cs
pop
mov
xor
mov
mov
nop
lock
inc
icebp
sbb
test
loopne
fs
dec
push
push
fwait
dec
adc
es
xor
mov
inc
bound
push
push
lods
sub
xchg
les
jp
mov
xchg
in
and
movsb
movsb
enter
mov
or
xchg
mov
mov
or
xchg
xchg
movsb
adc
xchg
adc
mov
or
xchg
xchg
movsb
dec
enter
mov
or
lcall
xchg
adc
or
enter
shll
fwait
dec
out
mov
clc
bound
int3
test
or
fwait
dec
xor
pusha
out
xchg
jecxz
inc
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
loope
out
cwtl
lcall
jno
les
shlb
loopne
cwtl
out
jno
cld
jno
or
sbb
es
xor
cwtl
inc
jno
push
jno
pop
jno
insb
jno
jp
cwtl
mov
lock
mov
mov
mov
clc
mov
push
sbb
popa
xor
cmpsb
sbb
push
loope
mov
ret
jb
stos
jae
cmp
mov
in
mov
adc
pop
mov
nop
push
movsb
dec
shlb
or
pop
mov
push
scas
nop
icebp
xor
test
stc
or
push
test
push
call
dec
clc
call
inc
adc
mov
mov
repnz
enter
subb
aaa
lock
ret
rorl
pop
mov
mov
loopne
mov
rorb
fisttpl
pop
cmp
in
aam
pcmpeqd
testb
int
or
rorl
add
dec
movups
jno
cmpb
mov
cmp
xchg
or
xchg
movsb
pop
enter
mov
daa
xchg
pushf
cmp
lds
and
out
xchg
mov
jecxz
mov
and
fsubl
enter
or
int3
mov
or
enter
aas
pushf
inc
push
clc
dec
cmp
jb
addr16
nop
out
or
or
mov
mov
sub
shlb
loopne
call
add
sbb
xchg
xor
mov
inc
mov
add
jo
jo
rcrb
pop
push
hlt
sbb
cmc
or
fdivrl
cltd
mov
dec
mov
into
repnz
mov
cli
xor
repnz
adc
dec
sbb
or
push
mov
fadds
mov
mov
xor
jo
daa
or
shlb
mov
mov
mov
orb
fwait
dec
sbb
adc
cmp
mov
int3
fsubrs
test
jae
mov
cwtl
mov
adc
sahf
xchg
test
xchg
stos
lret
loopne
rclb
movb
sahf
push
xchg
nop
ds
or
sub
mov
pop
inc
scas
test
push
dec
clc
lods
push
jecxz
inc
loope
clc
fisubrl
xchg
test
mov
or
push
xor
in
mov
pusha
sub
dec
nop
clc
stos
or
mov
mov
int3
sub
clc
xlat
cmp
inc
mov
mov
lock
dec
je
dec
add
sbb
jae
adc
sub
and
pusha
daa
sbb
dec
cmp
jno
xchg
jno
sahf
jno
lods
jno
clc
add
inc
out
xchg
sar
loop
fistpl
enter
xor
mov
and
lock
and
sub
pushf
ss
rolb
dec
xor
pusha
test
pop
pop
pusha
cli
pop
mov
sbb
mov
rorb
shlb
mov
daa
aas
or
add
loopne
jmp
ret
dec
xor
pop
roll
loopne
or
rorb
xchg
jecxz
sbb
sbb
es
cmp
nop
inc
out
mov
mov
fdivrs
sbb
sti
enter
inc
call
mov
iret
push
add
xor
push
test
push
jb
mov
xlat
add
test
dec
push
sub
pushf
jo
rolb
mov
lock
xor
sbb
repnz
mov
xlat
adc
push
ret
sub
inc
sets
popa
mov
sahf
mov
xchg
test
mov
test
sub
sub
filds
mov
inc
or
mov
enter
cwtl
inc
cwtl
mov
mov
cld
stos
add
inc
scas
nop
push
test
jno
sbb
pushf
pop
push
shll
dec
push
push
xor
fwait
add
std
jecxz
inc
jo
test
xchg
enter
mov
mov
stc
push
les
lods
test
or
or
inc
fwait
or
enter
arpl
dec
nop
cmp
or
pop
mov
outsl
ret
pop
call
shlb
xchg
nop
dec
insb
lock
shlb
mov
dec
pop
int
orb
xchg
clts
xchg
dec
adc
jno
sbb
call
dec
xorb
cwtl
cmp
dec
inc
jecxz
inc
jecxz
inc
cmp
dec
imul
xchg
mov
setne
stos
xchg
movzbl
int3
xchg
xchg
psrad
clc
xchg
lsl
arpl
push
mov
mov
mov
xchg
mov
adc
mov
test
add
enter
mov
or
enter
mov
or
enter
mov
or
into
mov
js
cmp
iret
add
cwtl
or
push
bound
bound
add
xchg
or
movsl
or
mov
clc
rorl
or
fisttpll
jmp
clc
stc
or
pop
or
adc
clc
xor
aas
or
dec
or
pop
or
imul
adc
nop
add
fwait
mov
mov
jecxz
add
dec
out
test
out
mov
fisubrl
sub
ss
js
fs
mov
jb
mov
jo
xor
add
mov
mov
mov
mov
mov
push
test
test
adc
popf
adc
cmp
leave
add
add
add
lock
cmpsb
mov
mov
mov
frstor
repz
or
pop
mov
xor
dec
dec
mov
popa
sbb
insb
int3
call
addb
sahf
cwtl
stos
sub
scas
stos
dec
sahf
mov
fmuls
loopne
or
call
hlt
mov
add
fs
xchg
and
test
inc
mov
dec
mov
adc
mov
push
adc
lock
push
jecxz
inc
sub
mov
mov
mov
lret
dec
adc
dec
testl
pop
sub
sub
mov
xchg
cwtl
cmp
push
popa
push
push
mov
int3
loopne
and
nop
movb
cwtl
ret
or
pop
mov
mov
rclb
fcomps
push
or
stos
lcall
add
sub
push
clc
cmp
in
lods
test
or
dec
or
cwtl
bound
pusha
cltd
nop
mov
bound
rorb
push
adc
xor
or
push
add
xor
sbb
sbb
adc
cs
xor
fldcw
fcmovb
dec
push
pusha
fs
repnz
and
pusha
ja
or
bound
sarb
iret
lock
mov
sarb
in
push
fld
rclb
ss
sbb
mov
and
adc
add
in
xchg
cmpl
push
or
mov
les
movb
rcr
push
clc
cmp
push
movups
test
mov
mov
push
pusha
add
movsl
and
call
add
push
cwtl
clc
and
inc
mov
xchg
add
stos
clc
nop
mov
fs
iret
rorl
push
push
push
mov
adc
adc
xchg
push
loopne
mov
lret
add
enter
test
xor
cmpsb
nop
rorb
adc
jo
and
fists
and
notl
mov
popa
loopne
scas
mov
add
sahf
or
lock
or
movsb
inc
out
lock
or
jnp
mov
mov
cwtl
pop
out
mov
dec
mov
shl
fmuls
pop
movl
and
mov
test
push
cmp
push
lds
xor
es
clc
pop
cmp
gs
pop
cmp
xchg
stc
orb
mov
mov
mov
shrb
lock
dec
pop
xlat
adc
test
dec
sub
fmuls
lods
test
or
or
orb
lds
mov
adc
cmp
push
test
pusha
jb
mov
out
out
or
mov
nop
insl
sub
push
cwtl
add
es
xor
dec
xchg
jo
pop
pop
xchg
dec
or
pop
icebp
pusha
mov
fs
scas
lock
push
jb
cmp
adc
les
lods
sbbb
fmuls
fsubl
push
sbb
pop
add
les
mov
nop
adc
pop
mov
pop
dec
ret
mov
rcrb
enter
push
mov
out
nop
xchg
clc
std
les
mov
sbb
dec
daa
xchg
arpl
cwtl
inc
jno
mov
push
inc
cmp
lock
xchg
mov
seta
dec
mov
mov
mov
mov
sub
add
pavgw
inc
jg
sbbb
rclb
andb
and
or
or
mov
sarb
orb
or
orb
rcll
call
roll
cmp
mov
popf
dec
movsb
shr
stos
jo
adc
adc
sahf
cltd
test
enter
adc
rorb
stc
js
dec
lock
repnz
xor
dec
cmp
add
push
mov
pop
test
data16
jno
or
adc
push
mov
mov
inc
mov
xor
bound
push
add
pushf
push
push
sub
cmp
push
xchg
insb
andb
adc
jb
mov
adc
mov
adc
mov
adc
mov
adc
in
rorb
fcoms
dec
xor
orb
nop
stc
jo
orl
out
xchg
nop
adc
test
or
mov
arpl
mov
loopne
adc
dec
sti
fs
repnz
fidivs
bound
xor
adc
enter
jecxz
inc
inc
xor
dec
test
shlb
enter
fs
in
in
popa
int3
movsb
sahf
lds
fdivs
mov
js
andb
clc
nop
adc
cli
mov
adc
dec
fdivs
pop
lock
shl
jno
out
or
pop
mov
cwtl
dec
push
test
pop
mov
pusha
sbb
push
inc
adcb
push
lds
outsb
lods
lock
cmpl
call
dec
loopne
in
mov
xchg
mov
sti
pop
inc
inc
repnz
movsb
or
adc
insb
es
ja
adcb
lea
mov
scas
fs
mov
ficoml
in
nop
lock
cmp
push
clc
cmp
or
pop
test
push
shr
xchg
nop
sbb
inc
fwait
inc
cmp
mov
pop
iret
xchg
xor
and
lock
add
jo
adc
xor
fdivr
push
enter
lock
mov
mov
xor
sbb
mov
push
inc
stos
aam
loopne
js
cmp
fstps
clc
push
mov
and
cmp
ret
sbb
sub
pop
ds
jb
mov
adc
nop
dec
push
mov
pop
jb
mov
mov
inc
sbb
push
lds
dec
mov
adc
xor
lock
mov
repnz
js
inc
mov
imul
push
ret
fs
fcomps
nop
sbb
out
mov
cmp
and
in
outsl
pop
enter
jns
fisubs
stos
sub
pop
dec
fisubl
insb
dec
cltd
test
mov
cld
pop
call
mov
enter
mov
fs
movsb
adc
sti
inc
insl
mov
sub
xchg
sub
fs
test
out
mov
mov
nop
test
jo
adc
mov
mov
mov
mov
mov
mov
mov
and
mov
adc
jb
mov
dec
shlb
outsl
popa
add
stos
dec
lock
push
jo
jo
xor
sahf
nop
out
test
and
ret
nop
cwtl
push
cmp
mov
rcrl
cmp
adc
fnstenv
call
mov
add
fcomps
ds
xchg
xor
call
pop
jne
sarb
movb
sbb
jno
xadd
imul
bound
mov
enter
inc
jb
mov
push
add
jb
mov
mov
frndint
xchg
popl
or
dec
add
xor
push
pusha
mov
mov
and
fcoms
inc
test
les
js
gs
mov
or
enter
stc
lock
dec
jl
sbb
inc
or
or
je
int3
mov
adc
lret
movsb
cmp
jns
dec
add
fstps
fwait
dec
sbb
inc
pop
xlat
sub
mov
mov
mov
pusha
jb
xor
dec
jl
lock
add
xor
test
xchg
push
jne
nop
and
cli
stos
jo
xor
fsubs
cwtl
jbe
xor
pop
or
enter
mov
cld
pushf
hlt
daa
pusha
adc
and
xor
dec
jb
push
sub
jo
fs
ja
nop
and
fs
test
out
mov
faddl
adc
lock
adc
add
or
dec
rcrb
mov
dec
into
enter
cld
mov
clc
js
xchg
sub
shrb
pusha
xor
insl
fs
andb
and
call
adc
enter
stc
fmull
xchg
mov
add
adc
fdivrs
pop
adc
cmp
pop
adc
cmp
push
les
rolb
mov
pusha
jp
add
cld
enter
and
bound
push
test
sub
mov
adc
fcomp
add
hlt
test
test
adc
dec
adcl
cmp
or
loopne
or
push
test
xor
mov
scas
jl
shlb
jnp
lret
jge
adc
mov
cld
andb
inc
mov
mov
jge
shlb
inc
insb
andb
lahf
fs
cld
insb
or
mov
rcrl
pushf
orl
shrb
in
adc
fwait
dec
or
add
push
scas
xor
cmpb
inc
inc
and
sbb
roll
shrl
xor
shrb
test
addl
loope
xchg
jmp
shlb
sub
repz
push
jmp
inc
pop
push
orb
sbbb
xchg
out
frstor
add
push
sbb
dec
daa
xorb
dec
sub
cmp
mov
dec
or
mov
pusha
pop
adc
adcl
jl
aas
mov
ja
cmp
mov
fsubl
lea
pop
call
nop
add
fidivl
or
aaa
and
popa
std
or
orb
lahf
scas
sbb
jecxz
mov
push
jg
mov
fldl
mov
rep
mov
xlat
mov
xchg
mov
lods
stc
push
dec
lcall
dec
lods
aaa
xor
jno
dec
mov
jnp
das
xor
dec
fsubl
loope
cmpsb
pop
out
pop
mov
fwait
cmpb
jb
mov
jbe
push
leave
aaa
inc
pop
push
mov
pop
xchg
movsl
add
mov
mov
scas
mov
sbb
fwait
jle
xchg
cltd
mov
xchg
mov
adc
insb
les
or
xchg
movsb
sbb
push
adc
mov
or
enter
xchg
xchg
je
les
or
xchg
sbb
push
out
sbb
ret
enter
mov
rclb
mov
enter
mov
or
mov
adc
mov
or
push
mov
push
mov
movsb
inc
enter
mov
jns
les
mov
mov
or
add
push
xchg
mov
mov
cltd
and
in
shlb
mov
and
or
xchg
call
adc
popf
sahf
xchg
mov
outsb
pushf
xchg
pop
mov
out
xchg
sbb
les
hlt
or
xchg
fsubs
orb
fwait
pop
jno
ss
sbb
mov
jp
xchg
pusha
push
or
xor
mov
or
enter
mov
dec
cmp
sub
sbb
mov
or
les
insb
adc
dec
les
sub
adc
aam
shlb
mov
mov
adc
push
push
inc
or
xchg
and
push
enter
mov
or
xchg
mov
test
lret
pop
mov
cwtl
cltd
add
sbb
inc
movsb
xor
mov
jbe
xchg
pusha
mov
inc
shr
cmp
fsubl
dec
mov
add
xchg
rolb
cmpsl
out
leave
and
mov
inc
mov
mov
fdivp
or
adc
and
xor
inc
mov
or
mov
mov
les
xchg
mov
in
lock
add
or
movsb
cmp
mov
push
or
movsb
jbe
xchg
or
enter
mov
or
movsb
dec
enter
rcrl
pushf
scas
or
enter
mov
or
xchg
push
movsb
pop
enter
add
loopne
mov
cltd
mov
mov
into
xchg
or
cmp
ljmp
les
add
mov
enter
mov
or
enter
nop
xchg
dec
mov
or
xchg
clc
movsb
ljmp
les
adc
mov
dec
xor
and
in
adc
nop
loop
mov
or
xchg
movsb
inc
enter
mov
rcrb
mov
xchg
in
mov
enter
mov
or
mov
ficoms
adc
sub
sbb
push
and
andl
jl
xchg
mov
int3
or
xchg
hlt
mov
jo
sub
int3
les
xchg
orl
mov
cmp
and
or
nop
shlb
sub
cmp
ja
adc
les
test
mov
cmp
movsb
xchg
mov
sbb
mov
xchg
out
mov
aam
inc
fmull
out
movd
imul
inc
stos
add
adc
cs
push
pop
xchg
jnp
pop
adc
iret
jns
push
out
loopne
pushf
pop
rorl
mov
pop
mov
fs
mov
push
orl
fucomip
adc
outsl
fisttpl
add
push
pop
sub
cltd
xor
add
mov
lock
loope
into
or
mov
fiadds
xor
test
int3
popf
pop
lea
lcall
xchg
jl
lcall
mov
popf
jmp
or
xchg
sbbb
addb
mov
inc
cli
shlb
fistpl
subl
ljmp
test
xchg
mov
aas
ss
shll
mov
lret
mov
lea
xor
andb
mov
and
into
xchg
sub
fistl
test
push
test
imul
mov
xchg
cmpb
loopne
lahf
roll
dec
lret
loopne
mov
or
dec
pushf
dec
jo
mov
int
lcall
or
mov
push
sbb
pushf
cmp
je
xchg
mov
in
fadds
add
lock
out
repz
cwtl
or
loope
jo
xchg
jge
jg,pt
mov
orb
scas
addb
or
lock
xorb
add
jmp
and
lret
cmp
push
xor
ret
xorl
dec
mov
jnp
sbb
and
lods
mov
dec
cwtl
mov
mov
inc
cmp
xchg
shll
sub
push
cmpxchg
or
ss
outsl
mov
cmp
mov
mov
or
hlt
inc
je
or
push
addb
xchg
out
xchg
lds
int3
in
and
mov
clc
xchg
icebp
inc
mov
push
dec
lahf
ret
xor
andb
arpl
jb
jns
out
pop
cmpb
push
subb
test
fs
push
pop
imul
xor
jnp
fcomip
loope
inc
mov
mov
or
shlb
push
pop
and
insl
mov
movswl
mov
stos
inc
and
xchg
loope
lahf
xor
xor
lods
fcmovnbe
mov
test
pusha
cmp
leave
mov
dec
icebp
add
outsl
andb
pop
lods
mov
rcrb
test
leave
ljmp
jmp
inc
cmpl
jge
cwtl
cmp
enter
mov
stc
xor
aas
inc
adcb
xor
inc
lods
dec
clc
mov
cmp
out
or
adcb
dec
inc
mov
jo
cld
mov
movsb
sbb
and
ja
push
das
adc
dec
test
adcb
dec
movsl
mov
lods
pop
push
and
dec
adc
cmpb
scas
sub
push
xlat
adc
sbb
outsb
add
inc
test
sbb
ret
inc
scas
and
pusha
outsb
mov
popf
loope
cmpb
xor
jp
pusha
je
mov
cld
add
xor
adc
subl
pop
sub
inc
dec
mov
or
lock
lcall
sbb
dec
sub
xchg
mov
lcall
stc
cs
outsl
das
js
push
mov
rclb
and
sbb
dec
addb
icebp
inc
loopne
call
imul
jno
adc
dec
fmul
shlb
loopne
add
stos
popa
ds
dec
int
sbbl
jns
add
ret
pop
arpl
cmp
sub
cmpsb
pop
testl
subb
mov
push
fistpll
popf
jecxz
icebp
addl
subl
mov
and
sbb
ret
mov
jp
lcall
sub
xor
xchg
mov
xchg
lcall
mov
adc
inc
and
add
push
movsl
jae
mov
in
jno
fidivrl
enter
mov
add
add
mov
imul
mov
ds
sbb
lock
fdiv
das
mov
lahf
test
dec
add
add
jae
push
xor
and
mov
cwtl
mov
mov
or
mov
test
and
pusha
xor
je
xchg
mov
cmp
scas
add
test
outsl
jg
stc
mov
pop
push
lcall
and
sbbb
ret
adc
icebp
mov
inc
xor
jge
push
mov
mov
mov
xchg
mov
enter
sbbb
repz
cmp
pushf
popf
jo
mov
xchg
shrl
lret
jle
pop
repnz
inc
outsl
lock
stos
or
mov
dec
pop
dec
and
jp
xchg
pop
sub
shrb
add
xor
mov
mov
ret
fmuls
push
sub
cmp
sahf
cmpsl
dec
cli
add
out
pop
push
int
pusha
orb
cmp
cmpb
shrb
mov
fadd
loop
lret
adc
leave
icebp
insb
and
jns
movsb
fiaddl
ret
cmp
mov
addb
or
inc
xor
cs
xlat
shll
pop
inc
dec
loope
xchg
xor
sub
aaa
or
pop
cmp
cwtl
xlat
mov
pop
pop
test
lock
sub
pushf
xchg
inc
push
or
pop
cmpb
enter
cmp
mulb
sub
enter
sti
fiadds
jl
xchg
adc
sbb
cwtl
stc
xchg
orb
adc
les
adc
mov
mov
push
push
xor
fimull
loope
sti
adc
sbb
mov
inc
jl
mov
cmp
jns
adc
lahf
mov
jge
lret
loope
pop
adc
movsl
pushf
push
subb
inc
xor
out
mov
jae
add
loope
mov
ret
icebp
or
mov
imul
mov
dec
inc
push
jb
mov
jns
loopne
inc
jbe
scas
mov
in
xchg
lods
and
mov
mov
cmp
dec
mov
jmp
jp
mov
movsl
cmc
aaa
sub
or
mov
inc
or
ds
andb
out
xchg
xchg
dec
call
or
lods
xor
mov
dec
insl
jecxz
andb
jg
dec
out
cmpsb
sub
cmp
mov
mov
addr16
adc
enter
fidivl
movsl
inc
adc
add
es
jae
sbb
push
jle
rolb
test
add
dec
scas
subb
dec
xchg
pushf
jne
ror
sti
fwait
jp
subl
inc
add
xchg
inc
les
movsl
mov
pushf
or
cmp
and
cld
fwait
mov
mov
loopne
mov
out
iret
adc
pop
cmc
xchg
push
out
sahf
movsb
cmp
jbe
pop
dec
imul
test
cmpsb
orb
mov
out
dec
rol
mov
add
pop
cmp
inc
rcrb
lods
cmp
add
fildl
or
lcall
rcrb
adcl
lds
add
pop
sub
popf
and
or
cmp
andl
xchg
das
pusha
cltd
xchg
pop
xchg
push
or
xor
out
arpl
rcr
imul
inc
mov
in
incl
fdecstp
jb
mov
push
enter
testl
add
mov
jne
mov
test
clc
jo
movsb
xor
repnz
jne
inc
xchg
mov
sbb
mov
idivb
mov
int3
mov
jns
add
pop
jne
aad
xchg
xchg
bound
push
mov
push
imul
pop
loopne
adcl
call
mov
daa
movsl
popf
xchg
mov
mov
subb
je
pop
sbb
cmc
cmpsb
jl
repz
push
mov
fildll
addl
push
shrb
pusha
stos
addl
int
push
add
je
in
add
mov
mov
mov
pop
and
pop
scas
iret
xchg
cmc
mov
dec
loope
sbb
stc
lods
cmpl
andb
out
mov
push
dec
adc
andb
mov
push
mov
addb
fidivrl
lret
or
cmp
jo
and
cmpsb
pop
mov
lea
sub
xor
adc
sbb
das
aam
nop
cmc
pop
subb
mov
xchg
repz
push
xor
mov
adcb
shlb
push
mov
push
mov
inc
lods
add
mov
sbbl
fwait
inc
xchg
push
loope
xchg
dec
add
jno
imull
enter
orb
push
push
subb
std
subl
out
dec
and
xorb
roll
pusha
xchg
pusha
mov
push
lea
push
dec
test
stos
fistpll
subb
test
mov
rcl
pop
mov
movsl
cmpsb
int
pushf
stc
jnp
rolb
mov
jecxz
dec
sub
mov
aas
jns
cwtl
jg
mov
sahf
add
imul
inc
jb
push
mov
fisubs
aas
out
jmp
inc
rolb
nop
mov
jno
repz
sub
outsl
int3
mov
sbbb
ret
movsl
stos
arpl
sub
mov
or
add
inc
mov
jbe
adc
inc
or
mov
xor
sbb
orb
cli
jl
cs
outsb
or
data16
loopne
sbb
lods
adc
mov
lock
inc
je
imul
loop
imul
das
inc
xchg
mov
or
out
nopl
inc
adcb
mov
mov
dec
push
and
popf
popa
dec
xor
mov
or
and
push
icebp
je
mov
js
add
stc
or
das
dec
cmp
lea
movsl
lcall
scas
test
mov
dec
cmp
pop
repnz
in
xchg
cmpsb
outsb
xor
in
inc
sbbb
mov
inc
mov
xor
insb
icebp
adcb
pop
cmc
push
fdivs
bswap
subl
ds
pop
and
jns
jmp
addb
stos
clc
sbb
mov
cmp
jle
mov
sbb
mov
sub
test
pushf
jns
adc
outsl
call
inc
mov
mov
popl
rclb
stos
sahf
in
stos
loopne
lret
xorb
aam
and
sbb
fwait
xor
and
adcb
int
loopne
test
insb
push
dec
subb
fmuls
pushf
lds
sub
subb
jmp
push
out
scas
jg
inc
push
sarb
xchg
sbb
clc
mov
dec
rcrl
pushf
pusha
sub
cmp
filds
ja
xorb
pop
sbb
das
cmp
shlb
xchg
and
mov
adc
cmc
ds
shrb
add
cld
orb
addb
insl
cwtl
arpl
push
insb
and
loop
mov
jns
int3
mov
mov
mov
addl
inc
mov
or
negb
xorb
and
ss
sbb
dec
xor
das
test
adc
movsb
jle
add
mov
xchg
out
aad
xchg
loope
or
and
sub
leave
cmp
leave
mov
addb
dec
into
jecxz
iret
sbbb
xor
xor
jo
fcomps
scas
int
xchg
fldt
rorb
popa
ret
bound
jne
mov
fiadds
mov
mov
ja
scas
mov
pop
les
sbbb
xor
fwait
xchg
jecxz
jl
sub
cmp
andb
adcb
stos
xor
js
xorb
dec
out
mov
pop
xor
ljmp
push
inc
cmp
out
nop
push
xor
dec
pop
aam
and
dec
gs
js
mov
cld
loope
adc
jae
xor
push
fsts
dec
jg
pop
add
dec
add
bound
xor
cmpb
sahf
xchg
mov
imul
lea
or
add
xlat
fs
sbb
insb
mov
nop
adc
out
pop
inc
and
sbb
mov
std
enter
inc
jo
sub
lcall
rorl
add
cmp
add
sti
xor
lods
je
repnz
loop
rolb
push
rcrl
pushf
test
inc
xor
cmc
filds
insb
inc
cmp
lock
sub
cltd
scas
in
pusha
aam
incl
push
mov
push
sub
mov
mov
aad
in
xchg
adc
and
add
fistpl
es
icebp
cwtl
pop
sbb
sub
mov
shlb
cs
test
xchg
sbbb
jge
loopne
push
fiadds
mov
add
loopne
dec
push
mov
sub
push
rcrl
cmp
aam
movsb
lea
sub
add
roll
repnz
lahf
andb
js
popf
mov
imul
das
sahf
cmpb
push
xchg
int3
add
mov
dec
subb
mov
mov
pop
lods
pop
push
fcmovu
ljmp
mov
inc
mov
sti
and
scas
subb
sbb
cmpsl
gs
outsl
popa
orb
jle
rcrl
or
and
adcb
jp
int3
call
jnp
scas
sub
cmpb
dec
das
shlb
fdivrl
adc
insl
mov
call
icebp
inc
mov
test
xchg
notb
dec
push
out
fnstcw
lcall
mov
lods
addb
and
loop
inc
into
addr16
rcl
mov
pop
mov
mov
cmpsl
test
add
lahf
push
popf
stos
sti
or
test
into
push
rolb
lret
add
das
jl
fwait
mov
fimull
sbb
cmp
insl
push
jge
addb
jb
mull
fnstenv
cmpb
lods
cltd
out
rorb
pop
inc
mov
jno
add
int3
cltd
fildll
jbe
sbbl
lock
andb
fucomp
lret
insl
enter
cs
xor
cmp
hlt
sarb
or
sbbb
dec
mov
jne
dec
addl
cmpsb
cmc
sbb
cmp
outsb
push
mov
dec
add
cmc
xor
adc
dec
sub
fisubl
xchg
bound
fwait
ret
and
cmpb
jl
pushf
lods
insl
mov
xor
add
dec
xchg
add
jns
clc
dec
or
xor
cltd
xor
inc
cmp
xor
mov
into
imul
xchg
dec
insb
hlt
mov
xchg
jge
orb
ljmp
pop
cltd
mov
cltd
subb
sbb
jbe
xor
push
pusha
sbb
dec
xor
cltd
pop
mov
call
mov
ss
data16
orb
mov
xor
or
mov
jae
or
aaa
pusha
mov
movb
sub
push
xchg
idivb
arpl
or
fs
pop
bound
push
into
jp
adc
sahf
mov
pushf
adc
sub
sbbb
jecxz
adc
imul
xchg
xor
pop
mov
pop
daa
adc
nop
cmc
sub
scas
fldenv
lods
das
cmpsl
orb
lock
mov
inc
jae
cli
outsb
aaa
in
pop
jmp
arpl
mov
movsb
cmp
inc
fs
add
push
sub
loop
adc
lods
xor
push
in
enter
mov
mov
mov
jne
sub
pusha
loope
xchg
idivb
int
push
movsb
ret
pushf
popa
in
inc
subb
jns
mov
decl
mov
mov
mov
pop
stc
jl
pop
fs
adc
inc
orb
lods
mov
sbb
jmp
sub
jl
jbe
xchg
data16
dec
enter
jo
jne
psubb
mov
aad
jbe
sbb
in
cwtl
orb
pusha
xor
data16
dec
bound
test
push
or
orb
mov
std
shr
test
sub
repz
addl
aas
pop
inc
insl
subb
daa
lret
andb
cmpsb
add
fstpt
in
test
fcomps
jae
push
rolb
mov
scas
or
and
cmc
inc
mov
int3
push
add
pop
jnp
imul
sbb
inc
out
loopne
sbb
bound
mov
pop
outsb
andl
push
push
add
mov
pop
cld
cmp
insl
jbe
xor
mov
imul
in
add
pop
jmp
fsts
mov
pushf
in
adc
push
xchg
mov
push
leave
push
lds
fstpl
add
xor
push
xchg
subb
jnp
rorb
jns
add
mov
and
sti
pop
xchg
xchg
rcrb
int3
js
add
ss
dec
test
movsb
aam
aas
jbe
inc
shr
jecxz
faddl
or
add
inc
cmp
dec
add
mov
sti
mov
sbb
loopne
and
mov
inc
imul
sub
mov
ds
subb
cmp
or
pop
fimuls
imul
cmp
cmpb
jno
push
loop
lods
shl
adc
cmp
sub
call
sahf
jl
and
test
add
pop
insb
jl
popl
xor
push
cli
roll
dec
cmp
ds
xchg
adc
mov
in
push
dec
ret
sbb
adc
mov
sub
insl
mov
fisttpl
pop
or
push
lret
dec
mov
mov
cs
aas
add
add
cltd
popa
mov
mov
add
xchg
jae
xlat
xor
pop
dec
xor
adc
lods
mov
sbb
xchg
xchg
sahf
or
pop
cmp
sub
jl
add
jmp
pop
push
mov
rorl
addr16
jmp
jo
xor
fbld
rcrb
lods
add
pop
jp
fwait
mov
push
aam
adc
cmp
cmpb
std
cltd
addr16
cwtl
or
in
sti
add
pop
mov
pushf
or
std
cwtl
scas
mov
xorb
pop
sub
pop
insl
cmc
sahf
dec
subb
in
nop
andb
jne
xor
daa
add
mov
ret
push
lods
scas
popf
fadds
cli
in
and
sbb
adc
mov
lock
jno
loopne
adc
es
or
movsb
in
xorb
mov
cmpsb
sbb
out
jnp
jge
lcall
movsl
push
cmp
fimull
xchg
enter
popf
repz
addr16
js
push
ljmp
hlt
cmp
cmp
stc
jo
mov
ljmp
xorl
fstpl
movsb
movsb
inc
lock
mov
xor
test
and
push
mov
out
andb
mov
mov
xor
xor
mov
cmpl
sbb
jg
dec
std
cmp
das
movsb
fs
cmp
addb
xchg
sbb
andb
pusha
push
sub
addl
or
cs
inc
daa
test
cmp
fadds
and
rcr
addl
jnp
imul
loopne
shr
push
and
jle
orb
cmpsl
push
xchg
subl
inc
in
push
andb
push
adc
pop
subb
cmpb
xchg
daa
loopne
adc
lea
pop
push
cli
addb
insl
jne
das
adc
push
popf
sub
cmpl
iret
hlt
mov
cmc
icebp
mov
ljmp
stos
dec
andb
imul
imull
insb
mov
loopne
loopne
sub
repz
es
cmp
sbb
mov
cmpsb
movsb
pop
mov
subb
xor
mov
cmpsb
sub
pop
xchg
add
fcomip
sub
lock
adc
sub
nop
or
std
popf
xorb
not
aaa
enter
mov
push
cmpsl
jp
pop
das
xchg
inc
into
mov
inc
scas
orl
jmp
push
cmpb
cs
cmc
fsubl
int
and
push
shlb
mov
and
xchg
jb
orb
mov
cltd
lds
xchg
and
add
aaa
sbbl
xorb
dec
cmpsl
mov
pop
movsb
rcl
jle
lods
inc
sbb
xchg
mov
mov
dec
mov
stos
mov
repnz
jnp
insb
in
sbb
mov
mov
add
jae
cltd
sbb
inc
fwait
les
mov
fst
mov
cmp
push
subb
add
sahf
je
lret
inc
inc
pusha
sub
add
lea
xchg
andl
xchg
pop
mov
clc
scas
std
sub
stc
negb
addl
push
adc
xchg
xorb
pop
into
adc
sarb
les
outsb
fwait
mov
mov
icebp
addr16
bound
sbb
dec
add
or
pushf
mov
xchg
xor
push
stc
sbb
fwait
or
js
sbb
mov
pop
repnz
addb
xchg
or
push
add
mov
hlt
mov
popf
add
dec
jae
adcl
push
sub
adc
push
popa
std
fmuls
addb
lods
sbb
fistl
int3
cwtl
dec
subl
ja
mov
mov
out
test
adc
push
into
pop
shlb
jg
popf
insl
sub
das
mov
outsl
mov
mov
jb
or
mov
xchg
test
inc
rolb
insb
andb
fwait
mov
lods
sahf
jnp
popa
jp
or
js
push
orb
mov
push
iret
and
sub
jo
and
dec
ljmp
xchg
jl
out
fiaddl
or
and
cwtl
sbb
mov
add
adc
dec
cmp
outsb
call
repnz
dec
fwait
mov
adc
hlt
pop
cli
ljmp
xchg
add
je
aam
jmp
cli
mov
pop
xchg
mov
mov
cmp
pop
sbb
iret
xor
cmp
xchg
popa
mov
insl
xchg
xor
xchg
lret
popl
data16
push
dec
addl
lret
subb
pusha
lahf
xchg
pop
sbb
pushf
xorb
cwtl
or
out
ja
mov
xchg
xor
mov
es
dec
dec
bound
mov
xchg
mov
and
xchg
mov
dec
pop
sbb
push
call
xor
and
push
inc
mov
shl
push
mov
mov
addb
lret
xor
fbstp
and
scas
fdivrl
popl
xor
into
icebp
jno
in
lcall
stos
sub
xchg
aam
pop
xchg
mov
lret
pop
aad
sbb
xchg
push
push
fwait
add
dec
mov
mov
jle
add
lods
sar
mov
outsb
rcrl
stos
addb
sbbb
cmp
test
in
orl
lock
xorb
xor
sti
rorb
andb
push
loop
mov
lea
ss
mov
std
xchg
test
sarb
iret
jb
xchg
dec
mov
lock
push
add
imul
arpl
push
popf
insl
mov
add
outsb
popa
pop
cmp
andb
cmp
mov
lods
cmp
inc
in
and
test
pushf
pop
push
xchg
mov
scas
jp
subb
push
int
test
inc
pusha
mov
jmp
scas
push
dec
and
or
popl
jl
dec
inc
pushf
outsb
cmp
adcb
les
clc
sub
or
in
cmp
jl
push
inc
pop
imul
jae
movsb
cltd
xor
lock
shll
pushf
xchg
sti
cmpb
rcrb
adc
cmpl
ljmp
jae
xchg
add
xor
xchg
in
repz
repnz
call
dec
test
hlt
cmpb
or
lds
ljmp
adc
hlt
jge
pop
bound
cmpsb
xorl
lret
mov
add
in
cmc
andl
xchg
jge
or
ret
mov
mov
fs
js
push
jnp
xorb
pop
push
lods
and
xorb
jecxz
pop
ret
outsb
cld
addb
subb
jnp
mov
stc
pop
cmp
in
push
dec
xchg
ret
or
imul
stos
shrb
mov
lock
fwait
in
xorl
incb
add
or
or
add
cmp
cmpb
call
pushl
stos
pushf
lea
jmp
sub
call
bt
push
ror
clc
not
jmp
cmp
pop
sub
xchg
jg
xlat
xchg
aaa
lahf
jg
xor
jmp
addb
shlb
es
and
cmp
lock
cmp
cmpsl
fwait
and
push
or
repnz
cld
hlt
nop
je
inc
push
lret
cmpsb
inc
cmpsb
push
cmpsb
sti
int3
mov
xor
adc
jg
idivl
in
movsl
inc
int
xchg
push
test
xchg
push
push
out
jmp
jmp
out
mov
les
lods
cld
push
insb
pushf
push
and
jg
fimull
dec
mov
fiaddl
cmp
push
push
testl
xchg
mov
dec
das
adc
subl
mov
lea
andl
or
icebp
fwait
xor
jbe
inc
inc
test
pop
jp
pop
leave
or
adc
rcr
inc
dec
stc
dec
into
pop
sbb
add
das
add
mov
insb
xchg
lds
push
je
push
or
xor
inc
sarb
int3
push
insb
lods
lahf
xor
das
xchg
aaa
lcall
adc
push
push
pushl
pushf
lea
jae
pusha
call
inc
dec
jae
pop
sub
mov
fs
inc
cmp
xor
fstpl
ret
je
rol
dec
inc
mov
or
mov
dec
ret
punpckldq
xchg
lods
popf
cmpsb
imul
dec
ds
int
add
lret
inc
test
ljmp
or
ljmp
xchg
es
mov
dec
out
xchg
jp
adc
push
or
test
movsbl
sub
movzbl
daa
mov
adc
sbb
add
call
pushf
pushf
pushl
lea
je
test
clc
add
pusha
jmp
pop
cmc
add
sbb
inc
shr
pushf
mov
add
pop
call
lea
ja
jmp
movl
lea
jne
call
lea
pushf
pushf
pusha
jmp
xchg
sbb
pop
sub
sub
push
add
std
push
sbb
xchg
imul
dec
sub
jecxz
push
or
cmp
adc
fistpll
xchg
pop
sbb
insb
nop
xor
add
sub
or
nop
in
mov
lods
outsl
adc
cmpsb
or
adc
pop
dec
jge
sbb
scas
out
cld
sbb
sbb
jne
push
and
sub
aam
mov
rcl
add
inc
mov
stc
cmp
mov
test
mov
jmp
push
js
or
cli
and
pop
fwait
repnz
mov
test
sti
dec
lcall
sbb
and
rep
leave
ljmp
and
mov
cmp
add
xor
sti
fs
pop
rorb
in
mov
sti
sahf
pop
out
mov
and
icebp
dec
repnz
add
mov
add
inc
pop
push
and
and
in
add
sub
and
les
cmpsb
inc
mov
or
jle
sbb
in
mov
sti
arpl
add
mov
pusha
mulb
mov
and
bound
pop
dec
addb
cmp
and
lock
dec
dec
sbb
in
mov
sti
imul
popa
adc
in
jg
sti
jae
push
addb
add
sub
pusha
sti
cmp
inc
xchg
add
mov
add
enter
in
stos
and
movsl
add
add
mov
and
adc
imul
sti
ficomps
test
mov
dec
xchg
rcrl
and
cmp
add
cld
movsb
and
push
and
repnz
mov
clc
repnz
add
mov
xlat
mov
dec
arpl
in
mov
sti
adcl
jg
add
inc
lods
adc
cli
push
pop
pop
cli
roll
cld
mov
ret
adc
and
rclb
mov
inc
jp
or
mov
sti
mov
add
in
inc
and
xor
lods
lods
cmp
and
mov
or
aaa
add
sub
and
push
rolb
or
lods
sub
fldl
clc
mov
insl
int3
and
add
mov
mov
jbe
add
outsb
and
cmp
dec
mov
add
fdivl
cmp
or
in
mov
sti
jle
mov
or
addr16
stos
add
in
mov
sti
pop
mov
das
sub
and
adc
dec
ljmp
and
mov
push
add
mov
pop
jne
adc
pop
and
jno
and
inc
addb
mov
rclb
cli
arpl
cld
jl
and
lock
aaa
icebp
dec
arpl
in
mov
sti
arpl
add
mov
push
lods
clc
cmpsb
cmp
or
lods
and
pop
stos
jbe
push
jg
in
mov
popa
jb
adc
or
lds
testl
sti
dec
and
mov
sub
pop
mov
icebp
popa
xchg
shrl
cmp
cmp
sub
xchg
push
mov
cmp
mov
lahf
call
sbb
div
clc
mov
cmp
mov
lret
push
test
xchg
in
aad
leave
jns
dec
and
popf
pop
arpl
mov
xor
sub
sub
xchg
jnp
dec
jmpw
out
ljmp
dec
scas
jl
sub
fisubs
cmpsb
or
sti
push
add
add
loopne
and
or
loopne
and
stos
andl
imul
inc
fisttpl
jmp
jmp
xchg
mov
mov
clc
pusha
cmp
jmp
call
scas
repz
inc
popf
aad
or
insl
sbb
insb
aam
sbb
cld
mov
xor
hlt
jbe
jo
call
repz
lcall
popf
call
in
jecxz
je
dec
sub
mov
mov
jns
ss
mov
js
subb
aas
insb
stc
pop
mov
jp
push
sub
inc
mov
push
cmpsb
lock
aad
dec
dec
cwtl
fdiv
cmp
sub
lock
loopne
pusha
loopne
js
dec
sbb
decl
cmc
or
mov
push
inc
and
mov
jbe
or
jp
pushf
mov
and
sub
dec
add
movsb
cmp
or
mov
out
sub
mov
fcompl
pop
rcr
push
jne
sbb
in
popf
xor
or
sbb
call
call
mov
sub
xor
sub
sbb
stos
ret
sub
shr
mov
mov
sub
jle
xchg
int
repz
pusha
pop
outsb
mov
bound
ret
stos
roll
sbb
push
jmp
cmp
xchg
cmpb
mov
fdiv
xchg
pop
mov
into
xchg
jnp
leave
pusha
mov
jnp
gs
push
es
sbb
fstp
aaa
pop
out
pop
addr16
jg
pop
outsl
xor
jp
xor
shr
push
add
dec
xchg
sbb
stos
cmp
and
sub
sbb
scas
ja
js
scas
pop
mov
xchg
repz
ret
or
mov
stos
sbb
iret
addb
mov
hlt
lods
xor
insb
ja
mov
repnz
sub
push
ja
ds
mov
jg
jmp
pop
ja
out
xlat
cmp
sbb
popa
sub
pop
xlat
adc
xor
bound
cmp
push
ret
add
lock
inc
mov
add
jp
cli
or
xor
or
push
jnp
out
mov
outsl
je
push
mov
lcall
xchg
fbld
addr16
sbb
sarl
mov
jg
adc
fwait
or
xchg
lds
gs
idiv
pop
mov
xchg
mov
adc
jle
xor
xor
fs
int3
sub
dec
and
and
int3
ss
stos
ss
mov
mov
jne
daa
lock
pop
sub
or
xor
test
add
pop
pop
mov
js
pusha
pop
leave
xor
inc
and
and
loopne
push
test
mov
or
xchg
push
push
mov
xchg
test
inc
adc
jnp
xor
and
lahf
lock
test
test
push
inc
bound
mov
movsb
data16
mov
sbb
inc
idivl
jle
rcl
xchg
mov
push
roll
push
inc
ljmp
mov
xchg
in
adc
jp
pop
xor
xchg
push
fldenv
popa
aad
outsb
pop
push
adc
cmpsb
movsl
cld
mov
movb
xchg
inc
lods
jns
rcrl
sbb
insl
jbe
jno
push
call
xchg
imull
lods
leave
jmp
clc
addr16
xchg
xor
push
dec
sbb
dec
push
sbb
sbbb
enter
lods
inc
sbb
insl
std
mov
xor
bound
adc
xor
fadds
push
push
mov
xchg
or
stos
rorl
mov
jp
cs
outsb
and
leave
add
mov
repz
cmc
cwtl
repz
jg
adc
mov
dec
xchg
je
mov
xchg
inc
and
push
sbb
mov
sub
stc
sub
adc
loope
add
test
xchg
mov
mov
sub
nop
push
test
mov
xchg
lods
xor
sub
sub
inc
push
mov
jmp
movsb
ret
inc
loopne
jnp
in
mov
adc
out
rolb
or
or
fsubrs
pushf
in
push
push
push
inc
sub
xchg
push
inc
dec
out
iret
lea
cmc
int
in
sbb
or
mov
lret
out
and
xchg
movsb
xor
and
cmp
mov
sub
add
scas
call
adc
fistpll
or
jbe
jp
arpl
jae
outsl
xchg
in
sbb
push
and
ljmp
pop
add
loope
jno
jmp
fsts
pop
test
mov
jge
push
cmpsb
lods
fistps
pop
mov
insl
test
out
mov
mov
sbb
jne
frstor
gs
mov
pop
fistpll
or
mov
jg
das
dec
pop
aas
cmpsl
pop
scas
jg
xlat
fists
inc
cmp
dec
mov
mov
ret
pop
das
cmpsl
mov
sbb
push
int3
inc
mov
sbb
sarl
mov
push
inc
clc
mov
pop
or
nop
test
jo
rorb
add
ljmp
insb
out
push
dec
lcall
inc
sub
pop
bound
jb
push
xchg
inc
mov
or
fmuls
or
jp
mov
mov
adc
jae
cmp
cmp
bt
bt
cmp
jmp
push
lea
jne
bt
bts
cmc
rcl
mov
bt
add
cmc
call
mov
sub
xlat
mov
mov
lahf
iret
pop
das
das
or
jbe
xor
xchg
dec
mov
xchg
cmp
and
pop
enter
in
fdivrs
andl
out
inc
push
and
mov
ds
push
sub
adcl
idivl
xchg
jns
pop
sbb
jnp
lret
inc
stos
jmp
or
aam
mov
or
jge
mov
andl
mov
inc
popa
cli
jge
xor
mov
and
rcrb
push
sub
sar
sbb
repz
fsts
push
les
shrb
lcall
inc
bound
call
bound
movsb
xor
dec
push
pop
adc
add
cld
mov
mov
sbb
or
xchg
mov
jmp
mov
call
orb
pop
sub
jmp
dec
sub
xor
mov
arpl
popa
jle
sbb
sub
sti
or
scas
cmc
ja
popa
ljmp
push
shrl
and
xor
test
cmp
leave
inc
dec
in
jb
lds
add
jne,pt
pop
pop
fiaddl
cmp
pop
inc
fisttpl
mov
or
loop,pt
sub
das
rcll
push
js
mov
shlb
or
mov
push
mov
rorb
jmp
neg
pop
nop
rolb
mov
mov
sar
clc
sbbl
sbbl
add
cmpl
and
and
cli
mov
bt
cmp
mov
push
jmp
popf
shll
pop
sub
daa
outsl
outsl
out
push
daa
iret
push
xchg
pop
pop
scas
pop
int
and
in
xchg
fbstp
and
lds
dec
dec
pop
movsb
adc
push
lcall
mov
sbb
loopne
fwait
cmp
pop
and
pop
lcall
xchg
jp
int
cmc
repz
cmp
test
daa
shr
mov
pop
dec
push
mov
popf
mov
rcrl
mov
dec
pop
mov
sbb
in
insb
mov
mov
xor
mov
dec
adc
push
inc
popa
and
push
in
stos
mov
mov
lahf
inc
mov
mov
std
arpl
cmpsl
les
and
xorb
in
fisubrs
lods
jae
add
mov
sub
popa
add
dec
and
adc
std
sub
ja
jl
ds
pop
out
add
std
inc
mov
mov
jae
mov
sub
test
push
loop
mov
movsl
jge
test
mov
std
xchg
inc
movsb
xor
sub
pop
je
stos
fiadds
lea
jno
subb
jecxz
fistps
lods
pop
jge
adc
pop
xlat
out
and
mov
rcl
or
add
popa
test
mov
lods
mov
xchg
popl
aas
push
scas
push
pop
cmpsl
lock
push
xchg
sub
out
cmp
call
dec
js
mov
shrl
mov
shll
ds
mov
mov
pop
and
cmpsl
jo
jecxz
mov
nop
fcomps
pushf
mov
jb
aam
loope
mov
sbbl
cmp
push
or
hlt
cwtl
fldl
inc
movsb
rorl
jle
popf
sub
scas
movsl
cmp
fadds
push
das
or
insb
mov
test
int
lods
dec
fstpl
out
jmp
jnp
mov
mov
ret
or
or
xchg
push
dec
sub
loope
pop
mov
jge
subl
inc
ret
ja
mov
xor
pop
ret
pop
mov
sub
and
test
aad
inc
leave
pop
jmp
xor
pushf
mov
mov
cli
jns
jb
mov
data16
xchg
orb
test
and
cmp
jge
outsb
xchg
fimuls
repnz
dec
pop
dec
loopne
sub
insb
sbb
in
in
insb
pop
je
lods
add
and
in
push
fstl
cmp
dec
pusha
pushf
call
xchg
xchg
xchg
test
in
dec
ja
fisubrl
cmp
subb
and
idivl
dec
cltd
leave
cld
sbb
xchg
inc
adc
out
jle
sahf
pop
lock
inc
push
push
insl
cwtl
pop
add
push
pop
pushf
jb
jle
sub
in
cwtl
pop
jge
push
adc
fmulp
shlb
xor
nop
clc
nop
inc
inc
mov
cmpsl
das
iret
cmpsb
jmp
mov
mov
pushf
mov
push
pushl
push
pushl
ret
pop
inc
aam
pop
sub
sbb
mov
mov
and
leave
test
xchg
leave
push
inc
fld
icebp
push
jmp
loope
fucomp
call
xor
push
mov
pop
or
cmp
loope
test
js
xchg
jp
or
daa
sbb
jge
pop
sub
out
daa
xchg
xlat
pop
lahf
mov
cmpsl
das
cmpsl
mov
lret
sti
loopne
dec
inc
push
jnp
dec
out
and
pop
in
pusha
push
sub
insl
loop
lcall
sub
nop
or
push
adc
loop
add
adc
je
test
sbb
lods
pop
and
jl
xchg
ss
mov
push
push
jbe
xchg
out
mov
cmp
lea
sarb
xor
lcall
mov
fisubrl
popf
inc
mull
xor
outsb
or
jb
leave
jl
les
ret
mov
jb
sub
push
xor
rcr
mov
cmp
adc
mov
std
sti
mov
shrl
dec
std
iret
cmpsb
imull
daa
faddl
std
std
dec
lds
popa
or
or
int
fdiv
and
mov
mov
jns
stc
pop
test
xchg
add
stos
ja
outsl
xchg
push
lahf
inc
jb
inc
mov
enter
mov
and
js
jo
pusha
leave
scas
adc
cld
jnp
lret
sbb
in
loopne
dec
pop
sbb
stc
cmc
mov
and
adc
xlat
sbb
sbbl
pushf
scas
push
xchg
xor
inc
das
jno
dec
js
stos
xlat
movsl
rolb
pop
cmp
nopl
rcll
popa
repz
mov
mov
hlt
into
xchg
or
dec
out
test
dec
dec
lcall
sub
bound
repnz
jmp
fildl
jge
inc
int
dec
xor
in
mov
js
mov
lret
pop
adc
xchg
sub
and
mov
and
sti
pop
lret
pop
popa
outsl
iret
cmp
cs
iret
pop
jmp
leave
lcall
adc
scas
movsb
cld
jmp
call
cmp
sub
pusha
lods
in
jmp
push
adc
inc
mov
pop
pop
scas
inc
das
iret
lahf
xchg
out
pop
das
mov
fisttpll
loopne
jle
stc
data16
lods
mov
in
insb
mov
pushf
push
movsb
insb
adc
ljmp
pop
add
inc
add
jno
xor
lcall
push
jmp
sub
cmpsb
mov
in
inc
jmp
cltd
and
sbb
or
shll
pop
cmp
je
sub
mov
cmpl
pop
cmpsl
cmp
jl
scas
mov
xlat
aad
loop
inc
icebp
pushl
dec
in
xchg
mov
mov
sbb
and
mov
imul
dec
or
shl
pushf
rol
stc
cmp
setae
lea
cwtl
not
mov
call
mov
mov
pushf
pushl
movw
pushl
lea
jmp
jmp
pusha
lea
jae
call
inc
call
ror
jmp
push
pushf
pusha
movl
pushf
lea
jmp
movzbl
pop
bswap
not
bswap
pop
jmp
les
cltd
rcrb
sahf
lret
mov
rorl
negl
lahf
cs
and
pop
pop
addr16
divl
out
xchg
nop
sbb
ret
in
mov
cwtl
inc
cmp
dec
or
es
sub
jge
vcvtpd2ps
sarl
cmp
stc
jo
stos
cmpsb
pushf
mov
dec
push
loopne
adc
adc
add
js
imul
sub
push
sbb
pop
cmpsb
add
mulb
pop
sub
sbb
adc
cltd
fmul
into
mov
scas
xor
jb
mov
lods
cmp
test
roll
sbb
les
aad
loop
inc
lds
rcrl
push
jl
fcompl
fcoml
jb
test
push
add
push
out
mov
jl
scas
push
cmp
mov
stc
lea
fs
lret
out
fcmovne
sbb
shll
ret
sbb
and
mov
sbb
dec
dec
loope
sbb
rol
pop
sub
orb
sbb
repnz
or
stos
cli
aam
push
mov
pop
rorb
xorb
or
pop
push
and
and
ljmp
not
mov
inc
pop
aam
shll
push
cmpsl
sbb
imul
js
mov
xor
and
jb
fldenv
popf
push
lret
pop
dec
and
sub
or
sbbb
shrb
cli
mov
lcall
mov
pop
xchg
push
ss
jg
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jae
pop
sub
jl
movsb
sbb
inc
cmp
call
imul
imul
ret
cmp
lds
jnp
adc
lea
fcomps
sub
mov
mov
nop
mov
or
cwtl
mov
sti
jecxz
ja
adc
pop
sarl
push
jae
fnsave
pop
xor
inc
rolb
adc
icebp
outsl
mov
sbb
cmp
xor
pushf
mov
push
mov
xorb
and
xor
mov
cmpb
jmp
stc
sub
call
dec
mov
ret
pop
sub
lcall
rolb
jnp
pop
xor
cmc
andb
jns
insb
inc
cmpsb
pop
jp,pt
cmp
dec
ljmp
cwtl
pop
cmp
mov
nop
or
mov
mov
inc
jb
mov
jle
repnz
add
lds
pop
push
xor
add
cmp
les
andb
xchg
int
inc
and
push
adc
movsl
add
pop
test
mov
add
mov
xor
ret
pop
sub
fcomp
loopne
call
andb
xlat
mov
lret
sub
add
repnz
and
mov
mov
fwait
cs
adc
jmp
xor
push
sti
adc
scas
ffree
sbb
mov
add
into
insb
pusha
jns
mov
push
call
pop
mov
jae
cmp
ret
sbb
adc
cmp
mov
mov
cmp
sub
stc
cmp
jmp
xchg
mov
dec
fisubs
cmpsb
jle
push
mov
adc
sub
add
and
mov
push
inc
ja
in
mov
push
jbe
int
lret
in
push
xor
lret
cmp
fmulp
fwait
mov
pop
mov
push
loop
cmp
sahf
cli
push
rcrb
mov
mov
dec
mov
push
into
dec
out
ja
xchg
add
fbstp
lds
sub
inc
adc
stc
xchg
mov
je
mov
mov
lret
repz
ror
cmova
push
dec
jecxz
adc
sbb
cltd
cmp
or
les
bound
push
into
dec
push
jge
xor
inc
iret
test
pop
sub
xor
mov
insl
mov
fsubp
xor
mov
ss
mov
mov
sub
fidivs
hlt
lret
dec
movsl
or
lret
cmp
rol
adc
repz
dec
sbb
push
mov
pop
sub
inc
andl
adc
sub
test
dec
mov
into
mov
inc
in
call
jns
in
push
int
into
loopne
pop
or
jae
fisttps
in
sub
or
jns
pusha
xchg
push
scas
sbb
cli
adc
push
inc
and
aad
xchg
dec
jge
cmc
pop
test
pop
push
xchg
push
jae
mov
mov
jecxz
test
mov
jno
xlat
insl
mov
pop
notl
out
mov
pop
ja
addr16
xchg
sbb
out
mov
pop
sub
xor
sbb
jmp
mov
fdivrl
iret
mov
call
pop
cmpsb
jp
pop
and
cmp
in
push
push
lods
jb
cs
mov
gs
cvttps2pi
lods
out
push
stos
rclb
jg
and
adc
mov
and
test
jg
jb
or
ss
jle
push
mov
push
cmpsl
adc
pop
loopne
and
pushf
mov
call
xchg
gs
sub
push
sub
jmp
lret
inc
mov
adc
lea
adc
dec
das
les
orb
push
and
sub
repz
mov
push
stos
loope
and
xlat
push
cmp
inc
dec
cmp
inc
push
push
es
mov
push
lcall
push
xchg
pop
adc
lret
mov
push
jbe
int
negl
cmc
call
pop
sahf
loop
cmp
sub
bound
push
test
sub
ljmp
dec
mov
pop
or
aad
xor
adc
lock
test
mov
jae
mov
icebp
mov
idiv
lret
inc
xor
adc
inc
dec
mov
mov
mov
data16
dec
pslld
lret
leave
rclb
sti
pop
test
or
mov
mov
jecxz
or
sub
imul
fstl
push
and
jns
pop
mov
add
repnz
std
int3
orl
cmpsl
in
adc
mov
int
inc
icebp
scas
cmc
mov
imul
sbb
call
popa
pop
outsb
sub
vpperm
into
jae
and
pop
movsl
mov
adc
jo
dec
jo
cli
add
sti
sub
jmp
ret
cmp
pop
pop
xor
cmpb
repnz
rorb
inc
std
and
orl
xchg
add
mov
test
mov
stc
call
clc
push
call
xor
idiv
sti
jnp
push
sti
inc
or
mov
shrb
mov
scas
test
sbb
xchg
xchg
out
fwait
push
inc
push
xor
ss
lods
int3
sbb
mov
add
pushf
int
mov
fdivs
jge
pushf
out
jbe
shrl
jno
sbb
out
mov
sub
dec
xor
push
pop
pop
ja
dec
lret
cmp
outsl
test
cwtl
cwtl
push
dec
push
sbb
addb
jb
pusha
ret
data16
fdivs
sbb
jp
leave
pop
sub
pop
add
dec
cwtl
jo
lock
test
out
mov
jl
or
inc
scas
push
mov
mov
inc
orl
ja
cmp
in
fcoml
mov
and
jle
pop
and
hlt
pop
push
ret
sub
ljmp
repnz
and
dec
arpl
sub
int
lds
std
pop
inc
lods
popf
push
arpl
rol
jmp
ljmp
inc
and
jnp
xorl
xor
cmc
dec
lahf
dec
cmp
outsl
add
mov
dec
ret
dec
arpl
ficoms
leave
call
jne
pop
into
fstpl
andb
in
sub
push
or
inc
out
jge
fbld
and
xchg
xchg
out
ds
push
xchg
repnz
xchg
dec
insl
dec
pop
sub
jae
ret
ret
jecxz
sbb
mov
mov
xor
and
sbb
jbe
insb
jne
or
jmp
into
adc
jecxz
enter
fs
jb
repz
dec
jg
in
aam
scas
es
add
mov
inc
adc
sub
lock
add
icebp
xorl
in
xor
data16
outsl
add
fs
cmp
jp
mov
pop
fisubl
mov
pusha
mov
jmp
inc
subl
sub
and
adc
in
fsubl
aam
xor
int3
fcmove
loopne
or
mov
hlt
sbb
jne
jbe
ja
xchg
jle
cmpsl
in
mov
and
and
stos
or
sub
push
adc
xor
in
aaa
pop
dec
jo
clc
jp
dec
fistl
ja
lret
stos
aas
sbb
in
and
dec
seta
sbbb
sbb
sti
xor
jecxz
repz
jmp
fists
push
xchg
mov
in
inc
and
setno
movb
pushl
push
push
lea
jmp
mov
stos
jmp
cltd
mov
stc
fld
in
sbb
outsl
adc
sbb
roll
ret
shlb
aad
add
xchg
adc
add
lock
mov
pop
je
insl
pop
inc
xor
fbld
mov
dec
dec
dec
mov
addl
clc
sub
or
hlt
addb
sbbb
lret
and
mov
push
adc
je
or
push
pushf
lea
jmp
jmp
and
pop
sub
add
cmc
mov
jle
inc
and
leave
jb
mov
and
sbb
lods
jg
arpl
xor
push
pop
aad
xor
inc
inc
xor
sbb
test
pushf
inc
jns
fisubs
jp
icebp
mov
pop
mov
aam
mov
in
jl
test
movups
jmp
outsl
xor
test
xchg
sbb
dec
inc
inc
int3
push
sub
and
add
jg
sbb
insl
and
pop
mov
sar
btc
pusha
mov
jmp
movsl
or
jnp
add
arpl
jnp
and
mov
inc
xor
pusha
push
test
push
inc
fsts
and
xchg
out
outsb
xlat
in
xor
inc
cld
repz
add
out
pop
xlat
jp
push
push
or
jbe
scas
add
push
pushf
jne
jecxz
test
pop
pop
enter
js
stc
enter
fdivr
pop
mov
add
add
pushl
loopne
add
pusha
and
pop
xchg
lods
in
push
add
xor
aam
in
aam
repnz
mov
lea
jne
adc
mov
stc
stc
add
pushf
cmp
cmc
movb
movzwl
adc
not
shld
mov
test
stc
pusha
add
mov
push
clc
clc
mov
clc
test
push
call
xchg
testl
sbb
popa
or
mov
pop
fsubrs
push
xchg
xchg
pinsrw
push
neg
mov
pop
mov
add
pop
orl
sbb
dec
jae
dec
shll
xchg
adc
mov
inc
push
repnz
jbe
fsubp
movsb
sub
enter
cmp
sahf
sub
fwait
dec
push
xchg
sub
xchg
test
fsub
pop
sarl
imul
out
iret
das
lahf
outsl
xlat
das
aas
ja
jne
mov
cmp
inc
call
sbb
pop
sub
icebp
push
fldcw
adc
pop
loop
add
aaa
lahf
pop
data16
push
cmp
or
or
push
rcrl
mov
enter
jmp
mov
shrl
in
imull
add
jo
push
push
das
inc
jne
xchg
adc
mov
mov
pop
fnstsw
popa
mov
shrl
lods
notl
sti
ret
lret
sahf
call
into
adc
clc
inc
adc
cmp
rcrb
loop
mov
pushl
adc
int
mov
sbb
daa
fdivp
ds
int3
mov
notb
lret
loop
fs
and
sub
fs
lods
mov
and
xlat
cmp
inc
cmp
mov
mov
nop
daa
inc
pop
mov
lea
inc
xlat
cmp
inc
inc
mov
fwait
xchg
xor
xor
add
bound
and
xor
dec
pop
or
mov
dec
inc
dec
xor
cs
insb
add
shlb
and
dec
xor
add
add
mov
sub
pop
rcrb
sub
cmc
in
test
or
int
out
in
pop
dec
leave
and
cmp
cs
jns
pop
add
gs
out
sub
ss
pop
dec
shl
jmp
rcr
sbb
inc
pop
xchg
jbe
rclb
clc
mov
fistps
add
xchg
test
sub
mov
lret
lea
jae
jb
jne
pushf
jmp
ss
iret
pop
sub
aam
in
in
or
int3
in
adc
mov
or
push
arpl
and
pop
push
frstor
testl
std
pop
add
bound
lea
mov
loopne
cmp
and
daa
sub
sub
push
sbb
ret
jae
mov
nop
mov
or
std
mov
andb
loopne
nop
adc
nop
sar
shl
cs
cwtl
push
negb
mov
icebp
stc
bt
mov
sub
stc
push
test
call
mov
sub
lock
or
inc
add
and
mov
pop
xor
jge
mov
imul
data16
sub
clc
pop
stc
adcb
mov
mov
add
cmp
jecxz
cld
je
jge
pop
in
outsb
jmp
shr
cld
add
and
mov
mov
jnp
sbb
dec
sub
xchg
dec
bswap
jne
sbb
sbb
pop
sub
int
pop
jge
cmc
test
jne
std
gs
in
push
push
dec
push
mov
shlb
and
test
ja
mov
jle
scas
dec
mov
hlt
xor
mov
mov
int3
xor
dec
push
mov
inc
cld
cld
adc
xlat
pop
cli
scas
sub
cmpsb
lret
or
fisubrs
stos
mov
cmp
aam
inc
mov
adc
mov
vpunpcklbw
sub
push
lret
lret
inc
xor
fisubl
cs
bound
xchg
std
jge
pop
push
popf
mov
scas
push
into
in
inc
cwtl
imulb
nop
mov
and
movsb
push
jmp
push
or
mov
add
mov
sbb
fistpl
ss
stc
fisubrl
xor
sub
pop
addl
pop
or
or
jp
inc
adc
ss
xor
imul
rcl
sub
mov
mov
ds
push
shrl
adc
pop
sub
sub
xor
bound
sub
out
and
test
cld
inc
scas
dec
cmp
lds
sub
negl
sub
int3
inc
movsb
add
dec
enter
mov
xchg
fwait
push
out
jae
dec
mov
pop
cwtl
mov
cmp
fisttps
pushfw
cwtl
loopne
hlt
test
pop
sub
ret
repz
push
scas
xchg
adc
cltd
dec
dec
mov
pushf
fdivrs
aad
pop
sbb
jne
mov
jo
or
jecxz
xor
loopne
ret
dec
daa
push
fsts
inc
push
mov
xor
push
sbb
popa
mov
into
cltd
test
shll
jno
popa
std
pop
jg
add
jo
fdivrs
cmp
push
cmp
inc
xchg
daa
adc
bound
pop
dec
add
xor
jp
out
leave
jbe
fcoml
sub
mov
pushf
and
adc
mov
or
daa
rcrl
sub
add
cmp
hlt
lahf
sbb
jbe
add
cmp
pushf
and
jnp,pn
mov
jecxz
mov
jmp
add
mov
into
sub
sub
or
orl
mov
inc
ljmp
fucomip
add
movsl
fwait
jg
out
push
into
or
adc
pop
stos
int
icebp
jno
xor
in
adc
dec
cmp
mov
mov
push
sub
mov
rorb
sub
fs
js
pop
pushf
lea
jno
pusha
bswap
mov
pop
jmp
jmp
sarb
pop
sub
in
les
sub
insb
inc
pop
inc
jmp
mov
ret
mov
cmpsb
dec
mov
cmp
sbb
int3
stc
mov
add
mov
lea
aam
pop
aad
push
jg
sub
orl
iret
test
xlat
mov
icebp
gs
iret
dec
jb
or
je
insb
hlt
je
movsb
insb
fs
or
jecxz
scas
mov
dec
add
and
push
enter
push
lea
jmp
lea
jae
stc
test
cmp
pushf
pusha
call
mov
aad
sub
jnp
xor
adc
ret
ret
shrl
fildl
add
cmc
ja
es
xchg
mov
cwtl
mov
adc
xchg
mov
adc
inc
movb
dec
test
sti
rcrb
sbb
dec
clc
into
pop
lahf
sti
sarb
out
push
outsb
mov
data16
xchg
xlat
and
mov
clc
xor
add
sub
dec
jns
push
jns
mov
mov
push
bound
lcall
pop
shll
inc
push
out
fscale
jb
lea
arpl
jbe
cmc
cwtl
jne
mov
sti
cmp
jle
jl
inc
test
imull
mov
fadds
test
xor
cmp
lea
pop
dec
jp
mov
sub
ret
lret
shl
push
mov
lret
add
jnp
dec
divb
push
and
mov
scas
push
sub
mov
fcmovne
mov
movsl
mov
fistpl
pop
lcall
add
movsl
int3
mov
mov
shrl
fs
aaa
push
add
add
loopne
sub
push
subb
lock
pop
int
xlat
in
stc
xor
mov
shll
je
call
negl
popf
sarl
jns
jns
popa
sbb
test
or
pop
aas
cwtl
xor
jge
sub
inc
mov
fstpt
mov
inc
mov
jp
pushf
mov
pop
adc
mov
cltd
fdivrl
or
out
mov
push
jne
jl
and
je
in
mov
ss
lret
jns
adc
ja
mov
hlt
js
jg
push
outsb
bound
outsb
xor
clc
in
push
in
pushf
aam
xor
and
xor
push
into
mov
jecxz
mov
test
cmp
stos
stos
mov
repz
xorl
inc
enter
int3
int3
in
iret
xchg
dec
loop
sub
mov
negl
movsl
lahf
imul
movsb
jnp
jmp
lahf
sbb
js
mov
adc
into
xchg
pop
sub
mov
icebp
cmpsl
mov
push
loope
pop
pop
adc
leave
lret
xlat
mov
inc
sbb
ljmp
cmc
mov
push
xchg
cltd
icebp
push
sbb
xchg
mov
shl
xchg
addb
fisubrs
add
mov
shrb
lcall
add
push
push
push
inc
lods
mov
mov
sti
pop
mov
and
jae
imul
cmp
cld
adc
dec
and
daa
lcall
imul
rorl
fsubrs
lea
dec
cmp
mov
push
test
xchg
je
fildll
imul
in
fbld
mov
mov
push
sbb
adc
pop
fucomi
mov
callw
clc
test
xor
andl
shlb
pop
jno
imul
pop
mov
xchg
mov
add
sbb
xor
sbb
mov
shr
pop
sub
push
push
mov
xchg
mov
subl
adc
fs
sbb
arpl
pop
mov
bound
adc
pop
in
inc
mov
sbb
and
cs
out
or
push
fsubs
add
es
inc
push
and
cmp
and
loopne
sub
call
cli
rorl
sbb
pushl
lea
call
push
lea
jmp
jp
lret
sub
mov
mov
rol
cmp
mov
mov
mov
cs
loop
mov
inc
and
pop
dec
in
cmp
push
inc
push
stos
idivl
fcompl
xchg
in
xlat
sub
neg
and
xchg
push
hlt
add
loope
cltd
aam
push
add
mov
push
jno
lds
insl
add
and
leave
adc
fwait
outsl
imul
sub
cmc
call
push
stos
pusha
push
mov
mov
lea
jmp
jmp
jae
sbb
pop
sub
icebp
rcrl
sub
lret
mov
insb
nop
pop
sbb
lahf
gs
mov
fcoms
jns
sbb
sub
gs
mov
mov
jmp
push
pop
xorb
adc
xchg
push
hlt
xlat
push
sub
clc
or
popf
lahf
sbb
xor
jp
into
add
mov
mov
adc
xlat
jg
inc
mov
out
cmpsb
mov
fnstsw
push
sub
or
add
in
lcall
pop
sub
in
inc
inc
hlt
movsb
cld
push
int3
sbb
dec
pop
nop
fstp
fmul
mov
pop
xchg
ljmp
mov
add
sbb
scas
jb
sub
and
xchg
sarb
adc
sbb
in
pusha
arpl
hlt
pop
stos
xlat
cli
frstor
jo
push
ret
cld
shrb
sbb
lods
xchg
add
jecxz
or
xlat
dec
aaa
pop
dec
dec
fucomip
push
jg
pop
mov
xchg
sub
jb
pop
fistpl
sub
cmp
rorl
mov
not
ja
bnd
push
sar
es
je
cs
mov
push
mov
push
cmp
shll
aad
or
lret
push
test
adc
sub
lods
leave
hlt
push
imul
imul
inc
pop
xor
jecxz
push
lods
pop
and
pop
pop
pop
jge
lods
rcrl
stc
xor
imul
movsl
mov
xchg
repnz
pushf
pusha
pushl
lea
je
jne
pusha
sete
pusha
movb
push
mov
lea
movsbw
lea
mov
push
pushf
movl
movb
mov
push
push
mov
pushl
ret
lea
jb
cmc
cmp
push
push
cmpb
pusha
jmp
xor
fcompl
sub
mov
sbb
aam
mov
sbb
dec
sub
or
push
scas
cwtl
lock
js
hlt
insb
hlt
enter
inc
pusha
rorb
shll
stc
lods
push
fucomp
sub
daa
pusha
fucomi
xor
cmpsl
xor
imul
sub
cltd
cmp
imul
shrl
or
push
enter
ficoml
into
push
out
cmpsb
mov
ficomps
cs
fisubl
pop
cmpb
neg
lods
fistpl
sub
outsb
push
mov
push
divb
mov
sub
fists
fisttps
adc
mov
repz
pushw
cltd
cmp
xchg
das
xor
ficoms
loop
push
insb
sahf
int3
gs
xlat
pop
dec
repz
pushf
scas
not
mov
lock
rorb
fnstenv
insb
mov
int3
xchg
dec
lods
inc
cmp
fs
lret
and
pop
sbb
push
call
js
sub
or
xor
es
iret
and
mov
std
outsl
ret
dec
fidivrs
les
push
mov
ljmp
addb
js
jle
ret
push
cmp
adc
mov
jne
xchg
dec
inc
mov
sub
mov
jmp
xor
or
call
loope
mov
ss
jbe
xchg
pop
xchg
out
fidivs
or
jle
cmp
cmp
movw
pushl
popl
clc
cmc
clc
cmc
cmp
push
pusha
lea
ja
ror
push
test
sub
pushl
and
cmc
sub
add
cmp
shld
mov
not
bt
mov
bt
stc
repnz
pushf
jmp
call
bt
xor
call
fs
add
es
into
ss
outsb
das
inc
or
xor
bound
mov
lret
xchg
push
fisttpl
scas
data16
loop
dec
jge
jo
add
int
arpl
in
or
jle
sbb
jl
add
dec
pushf
sub
adc
popa
push
fisubrs
mov
cmp
aas
dec
and
fstpl
nop
sbbl
jno
and
sub
push
mov
mov
pusha
hlt
or
outsb
scas
adc
mov
iret
dec
lea
stc
mov
pop
jmp
dec
dec
jbe
jb
push
stc
int
ficomps
sub
add
adc
add
mov
arpl
inc
xor
pushf
nop
and
inc
xor
outsl
movsl
fnstcw
mov
mov
mov
jmp
jne
or
dec
in
outsl
pop
add
push
inc
xor
mov
das
arpl
nopl
adc
adc
pop
loopne
or
cmp
cltd
cmc
ss
sbb
into
sbb
push
xchg
sub
cmp
jno
int
pop
adc
sub
inc
loopne
sbb
sub
or
stc
stc
rcr
shr
dec
rorb
loope
popa
ljmp
pop
cmp
push
jg
ficoml
adc
xchg
mov
gs
sbb
int3
jne
imul
push
adc
dec
in
fisubl
call
and
jmp
xchg
scas
pushf
nop
sub
rorb
int
jp
sbb
rcrb
cmc
mov
cs
dec
fwait
mov
and
and
test
or
out
filds
dec
das
mov
mov
add
cmp
or
fs
jmp
mov
loopne
sub
ds
push
push
data16
cs
scas
mov
dec
mov
mov
mov
mov
stos
inc
subl
scas
pushf
sarb
repnz
icebp
jle
mov
fwait
adc
push
jno
push
sahf
icebp
loopne
scas
ficoml
sbbb
orl
stos
pop
in
fidivrs
add
pop
loopne
pop
mov
rol
mov
jg
in
loope
int3
test
pop
mov
sbb
push
mov
ret
dec
stos
ljmp
icebp
sti
es
icebp
sbb
mov
loopne
sub
inc
int
fldl
xor
push
xor
xor
mov
pop
gs
repz
pop
imul
and
xchg
and
jecxz
stos
iret
adc
add
insl
mov
mov
call
mov
sub
inc
and
lods
mov
jecxz
and
inc
adc
mov
in
jnp
std
mov
in
jmp
jl
mov
pop
sub
cmp
push
pop
jmp
adc
push
loope
arpl
movsl
pop
jnp
pop
jno
pushf
dec
and
mov
arpl
lods
mov
jno
jge
fbld
nop
dec
lahf
mov
jo
insb
out
mov
adc
xor
dec
scas
cmpsb
mov
sarl
cli
mov
or
lcall
test
fwait
lea
ja
mov
shr
add
sub
pushf
neg
pushf
lea
add
call
jmp
sbb
push
data16
push
fisubrs
mov
iret
adc
cmpsb
outsl
or
push
arpl
xor
repnz
or
inc
mov
inc
xor
fwait
aas
jnp
out
mov
cmpsb
cltd
imulb
dec
push
sub
mov
hlt
jge
jns
jnp
cmpsl
xchg
add
and
je
int3
popa
leave
pop
mov
add
dec
imul
push
and
jo
rolb
or
inc
inc
jp
push
jp
repnz
mov
out
pushf
loope
sub
dec
leave
jmp
sub
subl
notl
xchg
jne
popf
mov
and
mov
cmp
es
aaa
test
lret
fists
bnd
mov
xor
pop
hlt
enter
addr16
cmp
and
sti
pop
in
push
lcall
cmp
mov
outsb
xchg
test
push
std
sub
pop
sub
pop
dec
mov
cmp
in
mov
jne
cmp
and
rcrl
xlat
cmp
flds
stos
addr16
jo
idiv
popf
or
and
rcrb
push
dec
popa
fsts
shll
outsb
mov
cmp
pusha
or
movsb
sarl
or
jns
or
in
in
mov
mov
mov
lret
mov
mov
add
lea
jbe
mov
call
lea
jne
movzbw
movsbw
setb
lahf
movb
push
push
pusha
jmp
out
mul
pop
sub
sub
hlt
xchg
hlt
je
fs
in
dec
int3
push
test
sti
lds
pop
out
std
push
iret
mov
push
dec
xor
or
pop
lods
mov
hlt
mov
or
fdivrl
or
loop
icebp
bound
pop
inc
xorl
or
out
cmp
mov
adc
outsb
mov
jno
repz
xchg
add
out
pop
push
ds
out
fidivs
jp
jge
push
cmc
xchg
fisubrl
pop
sub
and
cmp
dec
in
and
cld
pushf
test
testb
mov
aad
mov
sub
movsb
mov
xor
xchg
ror
outsl
shll
je
push
loope
inc
scas
inc
loopne
and
push
repz
pop
movsb
mov
xor
adc
repnz
sbb
mov
xlat
lock
jecxz
inc
insl
loope
mov
arpl
in
pushf
test
mov
adc
cltd
icebp
leave
mov
popl
sbb
scas
cmp
out
pop
sub
mov
sbb
js
dec
loopne
and
dec
pop
stos
sahf
pop
sub
fistl
add
push
orl
push
xor
pop
xor
fistpll
fs
add
xchg
fbstp
in
xchg
jecxz
add
mov
fildl
sbbl
add
add
imul
fwait
ss
mov
pushl
pushl
ret
ljmp
xor
hlt
in
fs
movsb
xchg
cmp
adc
insb
inc
mul
mov
mov
inc
enter
cltd
jb
adc
sbb
sti
int
inc
rolb
les
fsubrp
daa
xor
add
inc
in
outsb
test
bound
aad
inc
adc
mov
pop
loop
popl
push
jecxz
cmc
jecxz
out
pop
dec
ud0
out
pop
iret
and
cwtl
sahf
cmp
sub
stos
cmp
pop
adc
jno
sbb
mov
push
test
xor
out
sub
xor
inc
dec
movsl
je
jne
jns
out
cmp
icebp
cli
jb
mov
int
xchg
adc
push
sahf
shlb
sbb
pop
push
xor
inc
and
fcompl
bound
jge
lods
lods
mov
sub
das
and
mov
nop
xor
mov
mov
mov
pop
inc
xorl
stc
in
sub
add
and
sbb
mov
ljmp
sub
mov
out
out
mov
shr
out
jg
adcl
test
mov
sub
dec
jg
xchg
adc
and
ret
mov
push
adc
aaa
cs
jbe
cmc
clc
xchg
add
fnstcw
incl
jge
adcb
cmp
cwtl
sbb
or
cmp
mov
and
movsl
divl
fstpl
dec
imul
jmp
iret
lea
jle
mov
out
sub
nop
mov
cmp
enter
adc
cmpsb
push
mov
testl
daa
std
lea
cmova
lea
xchg
mov
mov
pop
jb
cmp
mov
imul
mov
sub
xorl
mov
es
lret
sub
shll
sub
cmc
add
mov
pop
mov
or
jle
lahf
gs
xchg
pop
push
inc
comiss
mul
and
adc
push
int3
cwtl
push
inc
fisttpl
mov
cmp
cwtl
adcb
add
mov
mov
fmulp
dec
std
bound
xor
and
les
xchg
cwtl
mov
push
loop
mov
rcrl
cmp
call
sbb
jge
mov
mov
movsl
std
mov
jns
imul
test
stos
jp
ljmp
lcall
adc
scas
outsb
add
sub
inc
movsl
jne
movsl
insl
gs
int
add
sub
fbld
shlb
and
enter
and
pop
dec
sahf
fyl2xp1
in
das
subb
cmp
pop
out
inc
das
lods
into
push
ret
xchg
lds
ret
lock
ljmp
mov
int3
pop
cld
in
mov
push
mov
lret
xchg
add
add
inc
cmp
add
xor
add
icebp
inc
add
add
add
sti
inc
add
add
add
inc
add
add
add
flds
add
add
sbb
inc
add
add
add
out
add
add
add
ds
add
add
add
ds
add
add
addb
add
loopne
inc
add
add
add
add
add
jmp
add
push
cmp
add
std
inc
add
inc
add
scas
inc
add
add
add
sub
rolb
lret
jbe
mov
sub
push
mov
popa
jge
inc
in
jne
xchg
push
mov
cmp
jg
mov
rorl
aam
cmp
xor
loop
aad
pop
stos
testb
roll
daa
scas
gs
pop
sub
and
ret
or
add
cmp
xor
xchg
dec
movsl
pop
stos
test
inc
pop
mov
xchg
inc
dec
dec
and
adc
jnp
pop
and
sti
inc
rcll
sbb
cmovbe
arpl
ret
mov
popa
mov
or
leave
mov
xchg
fisttpl
fbld
lret
sub
test
bound
xor
inc
xchg
call
xchg
outsb
rol
jmp
mov
cs
xor
repz
pusha
test
ja,pt
repnz
xchg
movsl
pop
subb
sub
imul
mov
jne
popf
ffreep
and
mov
push
outsl
pop
sub
jecxz
out
les
push
and
ljmp
or
flds
cmp
in
bound
daa
jae
mov
mov
ret
subl
jns
stc
cmp
sbb
inc
mov
stos
jae
xchg
cltd
jmp
leave
icebp
pop
adc
mov
jmp
gs
push
test
aad
and
push
push
int
sub
fs
arpl
add
shrb
pop
pop
or
aaa
std
aad
xorl
scas
sub
pop
pop
jl
loopne
xor
push
cli
jb
jp
fdiv
sub
lret
dec
xchg
std
jp
and
sbb
xchg
adc
push
enter
pop
insl
pop
or
gs
push
cmp
mov
xlat
push
xchg
pusha
mov
pushf
jmp
pushf
cmp
sub
pushf
push
test
test
pushl
popl
bt
cmp
mov
pushf
lea
ja
rcl
inc
shl
sub
jmp
cmp
pushl
popl
clc
cmp
push
jmp
fldl
cwtl
inc
sbbb
mov
inc
or
adc
adc
or
dec
sbb
or
addr16
xor
mov
sub
sbb
je
out
inc
es
pop
pushf
mov
and
push
dec
mulb
adc
scas
lret
mov
and
xchg
and
xchg
test
jmp
idivb
in
shlb
aad
lock
cmp
inc
and
dec
pop
sub
dec
lret
ror
ja
xorl
mov
jns
pusha
enter
jo
out
mov
xor
sti
aaa
mov
call
jns
arpl
pop
mov
fwait
and
cmp
mov
xor
lret
js
popf
jmp
sub
and
push
jb
lret
lret
mov
andl
fsubs
adc
ljmp
mulb
jle
scas
bound
lods
lret
das
out
inc
aas
filds
cmp
clc
xchg
mov
or
mov
jnp
aas
inc
sbb
adc
daa
iret
adcb
mov
mov
gs
pop
cmp
lret
daa
daa
jle
sub
lret
mov
mov
mov
xchg
sbb
pop
jno
mov
and
je
cmc
bt
or
push
push
jmp
cmp
call
cmc
push
pusha
movzwl
pop
stc
bsr
inc
mov
jmp
ror
not
mov
jmp
pushl
bswap
mov
not
mov
push
mov
mov
mov
mov
pop
pusha
movw
movw
movl
pushl
ret
mov
pop
in
pop
sub
mov
shlb
dec
clc
pop
push
adc
nop
loop
xchg
mov
add
jmp
push
shll
je
mov
mov
mov
cmpsl
adcl
ret
cmpsl
lret
dec
adc
and
inc
add
add
xchg
test
cltd
lcall
call
xor
popa
mov
test
mov
add
inc
ljmp
insb
pusha
mov
and
xor
pop
jl
in
int3
inc
inc
sub
not
into
mov
jmp
mov
fs
pop
sub
push
cmpsb
sahf
ds
pop
not
dec
mov
pusha
notb
push
mov
mov
cmp
ret
mov
dec
fisttps
sbb
mov
or
cmp
inc
outsb
cmpsl
imulb
scas
and
jge
test
jns
dec
push
mov
or
ss
jbe
inc
dec
insb
sti
pop
js
insb
lock
push
fisttps
lods
leave
out
lahf
fbld
cmp
and
cltd
xor
aaa
out
popf
imul
mov
xchg
outsb
xchg
jle
out
push
mov
lea
fildll
in
and
inc
sub
jge
popf
jne
jge
jecxz
lcall
mov
jle,pn
out
jbe
out
clc
cmp
lret
mov
mov
lret
pushf
outsl
inc
imul
pop
mov
test
mov
xchg
in
das
icebp
enter
xchg
push
test
mov
push
jb
fadd
jnp
inc
mov
popa
mov
and
stc
pop
add
pop
lds
clc
cmp
call
mov
jmp
pop
sub
pop
insl
dec
push
test
gs
cmpsb
shlb
test
add
insb
std
std
cs
xchg
cmp
adcb
xchg
xlat
mov
jns
jae
loope
enter
ljmp
bnd
icebp
lret
pop
adc
and
mov
mov
mov
pop
jne
and
mov
xchg
cs
push
jbe,pt
outsl
scas
fcomi
mov
push
cmp
cmp
pushf
pusha
call
lea
je
push
pushf
lods
movb
pushf
test
xor
pushf
ror
test
stc
xor
push
push
ror
mov
not
push
pusha
lea
call
push
cmp
pusha
pushf
push
lea
jae
push
movb
cmp
jmp
pushf
pushl
popl
mov
cmp
call
call
fdivr
or
pop
sub
push
or
popf
mov
mov
sbb
nop
int3
pop
mov
sub
jmp
cmc
inc
jge
andl
xchg
pop
sbb
shll
cmc
outsl
push
add
insl
push
scas
and
popa
fs
cmp
lods
adc
and
push
and
insl
repz
aas
xor
and
incb
sti
cltd
into
and
cld
jle
bnd
movsl
and
js
enter
pop
xchg
out
mov
out
mov
add
pop
jp
ljmp
jmp
jecxz
and
add
sub
movzbw
add
shl
mov
bt
cmc
cmp
push
shr
pusha
pusha
cmc
pushf
cmp
call
jmp
mov
iret
lock
sub
rorb
mov
push
mov
out
jbe
mov
sbb
push
jecxz
mov
add
push
out
inc
xchg
ret
push
cmp
jl
pop
loop
lcall
sub
ret
out
or
in
jle
sub
push
lock
push
cmp
push
les
add
pusha
stos
cmpsl
xchg
dec
mov
js
loopne
and
push
in
ss
xchg
and
scas
aas
lcall
push
ljmp
ficoml
lcall
inc
push
mov
pop
sbb
negb
push
cmp
sub
cmpsb
pop
rolb
lods
mov
push
sub
in
add
shrl
push
sbb
xchg
push
jae
and
xchg
mov
ja
fwait
stos
mov
sbb
jnp
sub
pop
sbb
addb
sub
scas
pop
addr16
aas
iret
mov
addr16
fistps
cli
rolb
ss
jnp
jb
jp
lods
andl
pop
pop
out
mov
aaa
pop
scas
imul
xchg
lock
pushf
aam
pushf
push
test
mov
and
cmp
and
adc
rcll
xor
lcall
xor
push
imul
xchg
sub
sub
in
mov
pop
insb
mov
sub
add
outsl
addb
xchg
jne
push
mov
cs
rorb
push
mov
pop
movsb
jp
call
lods
les
sub
mov
cmp
and
inc
bt
cmp
cmp
jmp
mov
dec
repz
sub
mov
mov
jae
repz
or
adc
add
test
rcll
jbe
mov
adc
and
hlt
sub
addb
sbb
loopne
cmpsb
outsl
add
xorl
lods
or
int
adc
sub
inc
dec
jle
and
xchg
jle
int3
jg
push
push
jae
and
cmp
pop
ss
inc
cmp
cmpsl
and
roll
andb
xor
ljmp
stos
mov
lret
and
ret
pop
pop
sub
div
pop
sub
dec
sbb
adc
test
icebp
jns
frstor
cmp
mov
frstor
inc
add
pop
inc
adc
mov
js
sbbb
push
adc
inc
xchg
mov
mov
popf
mov
cmp
aas
inc
aaa
xchg
mov
dec
aam
loope
movsb
xchg
jne
jnp
or
sub
push
inc
jl
push
xchg
lret
in
cmc
lods
push
fldl
xor
movsb
pop
pushf
mov
pop
push
fcomi
pop
sub
in
add
fdivs
lea
inc
jmp
mov
jo
mov
cs
add
push
jbe
mov
incb
out
out
das
sbbb
clc
hlt
push
icebp
dec
out
popa
xchg
jnp
adc
es
mov
es
insb
mov
pop
push
sub
aam
push
int3
pop
fcoms
std
xchg
sbb
jl
ja
xorl
mov
add
push
or
xchg
cmp
fisttpll
ljmp
pop
push
xor
in
test
and
fldl
inc
xor
bound
adc
mov
adc
call
cmpsl
in
add
das
lret
push
loopne
mov
std
adc
sahf
sub
stc
jo
jmp
lods
and
pop
cmp
cli
mov
mov
mov
out
lock
icebp
rolb
xchg
or
jl
jge
fisttpll
shlb
in
cli
dec
jmp
stc
or
fdivrl
cmp
es
in
and
push
aam
mov
cli
cmp
ja
aaa
ret
arpl
mov
popl
movaps
aas
scas
xchg
lds
sbb
out
xchg
aaa
jecxz
les
shrl
loop
fisubrl
js
out
adc
dec
inc
sub
cmp
xor
cmp
in
sbb
xchg
sub
jle
dec
imul
fs
mov
stos
pop
js
fsubl
rolb
arpl
sub
cmp
jg
lret
stos
mov
adc
hlt
lods
or
lds
out
sub
cmp
jecxz
and
mov
test
pop
scas
daa
lahf
pop
push
lahf
scas
daa
addr16
loopne
dec
mov
js
cmp
cwtl
negb
sub
adc
xchg
jge
in
aad
lds
pop
dec
push
adc
jg
shl
push
dec
movsl
xorl
and
ret
mov
xchg
testl
or
js
jno
hlt
push
xor
jnp
pop
mov
jno
and
or
addr16
cmp
cld
lret
call
in
or
xor
pushf
pusha
mov
mov
mov
aaa
leave
mov
xchg
and
jo
ja
pushf
lea
jge
push
pushl
lea
jb
bt
cmpb
jmp
bt
jno
pusha
imul
jmp
aas
jge
rorb
fbld
rolb
aad
add
mov
or
and
push
clc
movzbw
push
and
btc
and
adc
push
shld
push
and
push
dec
ror
push
ror
mov
dec
or
dec
movl
mov
jmp
call
mov
stos
negb
sub
adc
ret
push
push
jae
xor
pop
or
cmp
push
std
sub
rorb
xchg
push
movsb
enter
cmp
inc
pushf
jg
inc
iret
outsl
push
add
inc
int
insb
shrd
or
fldl
movsb
inc
shrb
sti
adc
testl
or
ja
scas
daa
clc
lcall
push
stos
cmpl
gs
mov
jmp
imul
jno
aas
or
mov
stc
incl
add
mov
mov
movw
lea
jbe
bswap
shl
mov
lea
bts
add
mov
sar
mov
neg
add
inc
rcr
neg
bsf
movl
test
sub
movzbw
setns
mov
pushf
movw
cmp
pushf
pushf
lea
jbe
bsr
sub
shl
shr
bts
mov
btc
mov
bsr
and
not
dec
add
ror
shr
shr
mov
pusha
inc
cmp
add
pushl
movsbw
movzbl
mov
lea
pushf
mov
pusha
setp
setge
pushl
lods
cmc
jmp
ror
movb
xor
call
push
stos
cmp
pop
sub
aam
cmp
hlt
in
sub
aam
mov
mov
in
xor
cmp
gs
and
pop
mov
popa
inc
and
out
data16
pop
stos
movsl
mov
sarb
movsl
xor
mov
xor
out
xchg
push
add
jae
sub
mov
pusha
es
ret
ljmp
loopne
pusha
sub
push
js
dec
xchg
test
cmp
pop
sub
shll
add
sbbl
add
xchg
pop
cmp
lds
out
imul
adc
sbb
and
lods
ret
out
dec
out
imul
push
ljmp
sbb
ljmp
into
add
dec
inc
jbe
dec
pop
ret
ja
jg
aaa
add
mov
mov
jb
and
jnp
fstpt
stos
xor
pop
jae
cli
ficoms
out
inc
pop
pop
pop
pusha
lea
jae
xadd
mov
dec
adc
bts
shld
mov
neg
sar
pusha
mov
cmc
xor
cmp
repnz
push
lea
jne
inc
sub
mov
shr
rol
shld
shl
sub
test
mov
pushf
call
incl
push
aas
addr16
mov
mov
push
push
jmp
movsb
dec
out
pop
xchg
or
cmp
xchg
sbb
xchg
push
push
jg
mov
adc
repnz
ss
jp
or
xchg
shlb
loop
pop
pop
in
cmc
nop
bound
arpl
stos
lods
outsl
mov
or
in
and
imul
mov
sbb
xchg
test
int
fsts
mov
jl
cld
aam
pushf
sub
xchg
xchg
hlt
js
mov
jb
adc
pop
sub
mov
shlb
jp
push
push
test
pop
orl
sub
and
rcrb
mov
xchg
xor
push
jo
dec
push
fisubrl
stc
pop
push
sbb
ja
jbe
ret
xlat
imul
mov
iret
int3
shlb
jecxz
pop
inc
mov
xchg
out
add
cmp
xchg
arpl
sub
inc
sub
insb
mov
sbb
lods
pop
dec
mov
mov
pop
pop
cmp
add
dec
test
mov
jb
pushf
sbb
cltd
mov
push
pop
jbe
lret
adc
adc
mov
cmc
dec
aad
ljmp
aad
pop
push
stos
insb
xor
push
and
mov
or
stos
jle
pop
adc
lock
sbb
bsr
not
mov
stc
cmpb
pushf
pushf
lea
jne
movzbl
movsbl
aad
xor
adc
and
das
bt
mov
stc
add
not
not
pushf
push
mov
pushf
push
lea
jmp
test
jp
pop
sub
daa
out
out
inc
pop
push
jg
daa
mov
push
push
cwtl
lods
ss
arpl
sbb
cmp
add
int3
mov
or
mov
mov
clc
inc
ss
adc
imul
clc
mov
movsl
inc
jp
decb
mov
xlat
shr
and
loopne
and
or
sbb
mov
mov
or
loop
ljmp
mov
jmp
jmp
rclb
sub
jecxz
mov
fwait
rcrl
arpl
pop
ss
imul
adc
in
add
ja
mov
add
mov
dec
xor
jecxz
sbb
out
cmp
xchg
inc
xchg
cmc
pop
in
imul
cmp
sbb
loope
roll
sbb
sub
scas
in
mov
inc
out
dec
outsb
imul
je
outsl
outsb
and
jb
jb
and
fs
ja
call
mov
mov
push
push
pushl
ret
pusha
pusha
cmp
pushf
push
lea
jae
test
add
call
fcoml
cld
pop
sub
mov
push
push
pop
cs
push
fiadds
out
xchg
stos
mov
call
or
testl
inc
outsl
bound
stos
rorl
pop
xchg
ljmp
loop
pslld
xlat
test
dec
mov
cs
push
xor
outsl
cmp
xchg
add
xor
cwtl
mov
cmc
inc
test
test
clc
call
int
adc
xor
sub
mov
cmc
jge
xor
pop
cmp
push
mov
xor
sub
aaa
pop
out
push
xchg
icebp
in
loop
mov
mov
js
mov
xchg
sub
loopne
enter
mov
lock
dec
fimull
or
ja
mov
dec
push
jbe
movsb
lock
sub
pop
outsl
mov
in
adc
or
mov
cmp
cmp
dec
test
call
mov
push
pop
sub
fbld
jg
pop
outsl
jg
pop
or
and
inc
mov
xchg
adc
bound
stos
sbb
lea
mov
cmp
mov
push
rorl
push
lds
mov
ja
lcall
and
ds
mov
std
insl
adc
push
inc
lods
dec
mov
ja
lcall
fs
or
or
and
pop
inc
xchg
or
ds
stos
and
cld
or
dec
mov
inc
jbe
ljmp
iret
xchg
int
loop
or
add
dec
lea
shrb
mov
pop
and
push
pop
imul
sarb
jp
mov
fisttps
adc
std
ret
sar
pop
sub
or
and
and
xchg
mov
repnz
insb
cwtl
push
lock
add
push
push
pop
mov
int
into
ret
rolb
cld
push
dec
push
out
dec
inc
pop
pop
daa
xchg
sbb
push
push
scas
rclb
mov
sti
mov
cmp
inc
int3
jne
std
imul
call
pop
inc
adc
add
push
sahf
push
incb
outsb
scas
push
push
sahf
pop
add
push
popa
xchg
xchg
push
ja
in
inc
ljmp
mov
movlps
dec
sub
xor
rcll
in
xchg
stos
xor
sahf
xchg
xchg
xor
scas
aam
xor
sbb
push
push
clc
imul
push
movl
cmp
mov
leave
mov
mov
mov
movsl
das
inc
lods
xchg
dec
test
out
pop
sub
adc
cmp
mov
ficompl
popl
or
cmc
or
adcl
push
repz
ss
dec
adc
stos
pusha
jge
pop
adc
mov
and
pop
xchg
sub
fwait
popf
cmpsl
mov
fimull
movsb
dec
and
in
xchg
movsb
je
jl
xchg
iret
sub
dec
mov
cwtl
aam
mov
jo
mov
inc
add
in
xchg
or
or
mov
and
jae
xor
and
movsb
rolb
sbb
lock
enter
loopne
mov
nop
into
lock
bt
xchg
js
js
mov
es
rclb
mov
cmpsl
out
movl
cmp
inc
outsb
push
out
cltd
jae
js
and
aam
jb
bound
pop
fiaddl
sbb
jne
xchg
in
imulb
out
cltd
lods
cmc
data16
xchg
xor
mov
push
xor
mov
repz
and
icebp
cs
dec
rcrb
jbe
add
in
and
mov
jbe
mov
idiv
ds
dec
xchg
aaa
subl
fldl
jmp
pop
pop
and
arpl
sti
mov
inc
push
iret
in
fidivs
dec
jns
and
das
cmpsl
mov
std
cmc
lret
xlat
pop
fidivrl
inc
adc
mov
and
test
mov
lea
test
daa
in
stos
mov
pop
jns
pop
std
pop
jecxz
test
test
arpl
popf
loope
in
aaa
int
sub
push
jns
loope
popa
jmp
pop
cmpsl
or
pop
jge
inc
xlat
iret
cmp
cltd
cmpsb
add
sub
jg
pop
scas
jg
sarl
fs
sbb
and
pop
mov
xchg
gs
mov
inc
pop
push
push
popf
inc
mov
xorl
gs
into
ss
sub
inc
jge
mov
repnz
mov
jp
adc
push
adc
pop
mov
dec
and
lea
jne
cwtl
bswap
call
mov
add
sub
jne
sbb
or
jge
scas
enter
mov
std
mov
mov
and
mov
sbb
test
mov
scas
call
addr16
jmp
xor
aam
dec
mov
das
out
aas
cmpsl
pop
mov
aas
outsl
notl
imul
insb
ret
add
sub
or
sub
cmp
pop
add
push
push
dec
loop
jp
add
cmpb
shl
mov
call
mov
hlt
lahf
push
movsb
add
or
xrelease
jg
jg
aaa
lahf
ja
out
xchg
jge
call
mov
aas
rolb
and
inc
sub
int
popf
mov
movsl
scas
enter
mov
in
stos
cs
jo
in
fistps
mov
jne
push
repz
je
das
mov
xlat
mov
sarw
adc
cmp
fs
mov
outsl
and
xchg
ja
ss
rorl
fwait
push
sub
fcmove
cld
xor
out
inc
js
mov
cmpb
leave
and
mov
daa
mov
lret
dec
jge
insl
mov
push
sbb
inc
sub
mov
xor
xor
pushf
bt
clc
ror
pushf
movb
dec
lea
js
bt
cmc
ror
pusha
cmc
jmp
pushf
push
faddl
and
dec
cmp
or
sbb
xor
xlat
les
psubsb
adc
jno
std
stos
mov
inc
daa
sub
andl
fcom
mov
sub
scas
xlat
outsl
jnp
xor
xor
inc
mov
stos
dec
jbe
mov
or
dec
sti
notl
aaa
les
add
les
loopne
out
into
ret
mov
dec
sbb
mov
jmp
mov
adc
loopne
das
fsubr
and
push
movl
call
xchg
xor
add
popf
xchg
gs
aas
cmp
ror
lods
test
test
out
jle
mov
lfs
mov
imul
and
jge
push
adc
mov
fdiv
mov
mov
fistpl
push
xchg
jns
lods
lock
mov
and
fcompl
jns
sub
push
repnz
xchg
stos
ficoml
mov
add
ret
push
xor
or
pusha
arpl
push
lea
jne
lea
mov
pushf
cwtl
movb
mov
movzbl
call
repnz
xor
ja
xlat
pushl
lahf
das
das
out
pop
movl
ja
hlt
push
inc
sbb
xor
sub
sti
lcall
inc
inc
inc
stc
iret
mov
jae
pop
pop
fsts
sahf
dec
mov
ret
mov
xor
add
cld
lret
cmpsb
push
jno
inc
sub
jb
add
dec
shrl
rcrl
mov
inc
jns
notb
fiadds
decl
mov
sub
shlb
and
adcb
or
or
lret
push
fldt
mov
test
and
cmc
loope
test
mov
fnstenv
mov
out
mov
sbb
pop
sub
inc
lds
cmp
sbb
pop
pushf
pushf
mov
enter
sub
je
gs
loope
inc
jo
pushf
lods
push
mov
jmp
dec
and
push
dec
adc
add
fisubl
jp
dec
ficompl
into
xchg
mov
fcoms
and
movsb
cli
lret
stos
shrb
lcall
inc
and
mov
repz
cmpsl
out
add
mov
jno
shll
or
adc
cmp
int
and
into
jo
lcall
fmuls
mov
icebp
daa
js
mov
sahf
cmpsb
lahf
xchg
sub
push
shll
sub
scas
jge
xchg
jl
adc
push
jg
std
dec
dec
lea
adc
xorl
sub
mov
sti
das
out
stos
test
sub
mov
jo
test
mov
cwtl
test
mov
clc
push
sub
lea
xlat
pop
jae
std
outsb
xchg
add
push
inc
loope
pop
stc
push
fisubrl
sub
push
lcall
sbbb
repnz
fbld
pop
in
sbb
xchg
pusha
mov
add
fsubrp
mov
dec
mov
out
out
inc
fbld
arpl
xchg
mov
pop
mov
ret
and
and
jg
pop
test
and
and
mov
lock
or
inc
and
pushf
cwtl
push
mov
inc
rcll
mov
push
xor
or
mov
mov
aad
lcall
add
push
shlb
jp
jmp
xlat
add
setno
aas
scas
fadd
lahf
push
push
sbb
cltd
mov
add
adc
gs
sub
or
dec
jb
mov
jne
xor
lea
je
pushf
movl
clc
call
call
and
pop
and
sub
repz
fwait
xchg
orl
test
nop
test
rolb
mov
mov
mov
xor
xor
in
pop
mov
in
add
insb
jmp
cld
xchg
js
cmp
pop
pop
adc
lea
stos
cmp
iret
xchg
insb
call
mov
decb
cmpsl
sub
dec
sub
leave
jno
sarl
sbbl
mov
sbb
popa
add
insb
jae
jb
popa
je
add
scas
or
sub
mov
mov
int
int3
data16
lea
insb
repz
iret
shrl
xchg
jmp
jnp
ret
stos
mov
call
cmp
pop
stos
pop
pop
and
sbb
push
adc
adc
mov
xor
mov
mov
inc
and
push
push
mov
loope
mov
jle
or
sub
mov
push
hlt
in
mov
mov
addb
test
and
fidivrl
ds
mov
sub
add
jecxz
jle
cmpsl
sti
addb
push
shrl
cmp
sub
icebp
jg
and
scas
or
cmc
dec
mov
outsl
sub
out
ds
imul
mov
and
daa
jae
xor
add
push
sbb
mov
rcrb
paddsb
pop
call
repnz
inc
mov
cld
adc
cmp
aad
mov
pop
dec
cmp
int3
mov
cs
sub
mov
stos
push
jne
sub
js
mov
insb
hlt
in
sbb
mov
adc
ret
or
cs
cli
orb
sub
in
mov
pushf
mov
cmpb
call
lea
je
pusha
add
movw
test
cmp
jmp
push
inc
push
inc
push
dec
xor
cs
insb
add
int3
pop
or
sub
or
ret
sbb
mov
stos
ret
mov
jge
ret
mov
adc
sub
or
mov
xchg
jecxz,pn
jp
sub
pop
cmp
pop
mov
sti
jge
enter
add
int3
sbbb
xchg
jbe
inc
or
ret
jnp
aad
es
int3
in
cmp
add
mov
pop
mov
outsb
into
pop
cltd
mov
mov
push
sbb
bound
bnd
xchg
lret
lods
int3
stc
mov
inc
jnp
addl
lods
daa
cltd
cs
movsb
daa
mov
jnp
lds
cpuid
add
fadds
mov
inc
dec
in
imulb
lods
loop
xchg
les
jne
and
mov
sub
inc
mov
push
enter
cmp
rol
push
or
xchg
scas
xchg
lret
inc
adc
pusha
lea
jne
sbb
rol
sub
sar
mov
sar
add
not
not
push
not
mov
movb
pushf
push
pushl
lea
jmp
push
dec
dec
dec
dec
cs
insb
add
sti
addl
ret
dec
setns
mov
pushf
pushf
dec
inc
pushl
push
pusha
mov
mov
pushf
push
pushl
lea
call
pushf
adc
call
call
nop
mov
or
sub
add
jmp
ds
aam
outsb
push
shll
sub
cli
std
jae
incl
mov
push
mov
and
orl
out
pusha
fs
loop
shll
and
daa
daa
daa
xor
xchg
ret
cmp
add
lods
push
arpl
mov
inc
xchg
scas
push
outsb
scas
imul
bound
dec
xchg
fs
lea
jne
bswap
cwtl
mov
movb
pushf
call
dec
repz
cmc
aad
push
lea
inc
mov
mov
cmc
sub
stos
sti
adc
cmc
or
sbb
and
dec
xor
inc
and
add
mov
dec
cli
stc
mov
lods
pop
mov
xor
push
mov
mov
sub
mov
rcrb
adc
out
mov
in
leave
rcl
dec
loopne
ljmp
lds
dec
mov
insl
adc
adc
cld
ret
out
jmp
xor
or
sub
mull
scas
xchg
iret
pop
outsl
sbb
jmp
mov
mov
push
cwtl
pusha
adc
sbb
cmp
shrb
xor
dec
insb
daa
jno
in
jg
les
mov
mov
pop
test
jo
lret
cmp
push
jl
test
xor
insb
jne
dec
sbb
push
jp
or
ljmp
sbb
inc
jg
fdivl
insl
imul
jns
or
ret
cmc
out
loopne
dec
dec
jbe
jg
jo
cmp
cld
test
mov
outsl
push
stos
xor
xor
pop
pop
mov
mov
aam
lods
and
mov
inc
jb
or
sbb
out
ret
addr16
push
ja
xchg
test
or
insb
adc
pushf
rorb
fcmovb
rcl
loop
add
and
sub
and
push
test
mov
inc
imul
cmp
scas
lods
fs
xchg
in
icebp
xchg
jg
pop
add
jbe
sbb
stc
js
loop
inc
daa
pop
cmc
sahf
negb
aad
les
sbb
loop
xor
cmp
mov
arpl
push
divb
dec
cmp
push
pop
inc
mov
jmp
dec
xor
rorl
cmp
aas
rcll
pop
fiadds
addr16
mov
shlb
decl
pop
pop
out
push
jnp
push
mov
and
and
add
inc
out
mov
sahf
jge
xchg
jns
das
sbb
sub
mov
fucomip
dec
scas
ret
lds
not
lods
cld
xchg
jns
lods
jnp
mov
repnz
rorb
dec
insl
fisttps
popa
mov
jmp
adc
and
insb
sbb
sbb
cli
es
sbb
pop
sbb
movsb
lods
jnp
aas
loope
sbb
cld
xor
je
sbb
jbe
sbb
jmp
fwait
xchg
popf
push
jp
jecxz
nop
inc
iret
in
scas
shlb
inc
lds
enter
js
jge
jmp
data16
fistpll
lahf
mov
mov
sub
movsl
mov
jne
imul
jg
xchg
mov
shlb
dec
cmp
pop
hlt
and
enter
xor
mov
mov
xchg
repnz
dec
in
pop
mov
and
decl
sub
sti
jmp
add
fwait
lret
arpl
cmpsb
lret
imul
push
pop
pop
ret
fildl
jnp
mov
loop
jecxz
scas
in
scas
xor
into
dec
movsb
inc
out
cmp
xor
xor
fcomi
sbb
or
loop
and
jbe
insb
icebp
adc
mov
push
mov
xor
inc
stos
fwait
ret
xorl
sub
pop
je
loop
imul
xor
in
pop
lods
fs
pop
scas
aad
and
es
out
ficomps
out
push
daa
addl
push
jecxz
mov
jmp
call
aaa
jmp
adc
sub
aad
lea
and
jns
mov
push
inc
lret
arpl
cmp
jb
dec
jnp
lret
jg
sti
inc
jnp
dec
dec
jno
andl
sbb
and
add
repnz
pop
fiaddl
shrl
jns
out
cmp
or
mov
and
orl
lcall
rcrb
adc
xor
in
sub
jl
bsr
bts
movzbw
cmc
mov
cmp
clc
push
test
and
cmp
add
pushf
pusha
push
pushf
lea
jmp
shlb
cmp
rcl
rcl
add
sbbb
pop
push
sub
movsb
enter
aas
repnz
out
test
pop
imul
loop
insb
jmp
push
jo
pop
jg
rolb
rol
xor
mov
arpl
push
fs
xchg
rorb
out
push
outsb
dec
into
movb
or
dec
out
mov
cmp
and
inc
push
in
jl
les
cmp
add
movsb
dec
sub
int
jl
popf
push
inc
cmpsl
mov
xchg
ror
or
jo
nop
jns
rclb
push
cmp
mov
rolb
dec
xchg
mov
xchg
cltd
sub
in
pushf
sbb
add
push
push
stos
in
lock
addb
std
jge
idiv
or
xchg
lock
insl
leave
gs
jmp
dec
scas
addr16
inc
xchg
xchg
ljmp
xor
dec
sbb
adc
sub
push
fs
pushf
test
insb
aam
les
ja
sbb
pop
mov
sbb
adc
fwait
sub
inc
add
loop
frstor
leave
mov
mov
add
dec
or
inc
lock
fs
cmc
sbb
int3
inc
cmpsb
push
push
es
out
pop
cmpsl
out
push
mov
add
ret
add
jbe
push
dec
pop
lcall
jb
push
lret
aas
add
test
xor
cs
add
imul
inc
gs
addb
movsb
xchg
xor
xlat
insl
inc
fcoml
lods
in
mov
bound
xchg
add
test
bound
push
stos
dec
ret
cmp
push
test
outsb
xchg
add
sub
and
push
repnz
mov
pushf
push
lea
jne
sar
lea
mov
pusha
stc
sar
sub
shl
bt
lea
clc
jmp
inc
stos
xor
and
mov
insb
je
or
sub
push
int3
sub
in
test
cmp
sub
cmp
out
arpl
andl
hlt
xlat
push
inc
fucomi
pop
pop
mov
std
sahf
pop
mov
fdivl
outsl
xchg
int
xchg
cmp
leave
add
or
mov
xchg
mov
ja
push
hlt
pushf
sbb
in
movsl
jae
or
pop
es
cmpsb
pop
pop
imulb
ds
jne
out
fcompl
sub
adc
sub
and
or
adcb
cli
adc
or
imul
xchg
inc
jmp
push
iret
inc
dec
add
mov
outsb
cltd
nop
pop
leave
adc
mov
cmp
mov
jl
je
inc
sub
fwait
lock
std
popa
fld
fyl2x
imul
stc
sub
aaa
les
fadds
dec
mov
adc
sub
xchg
adc
cltd
shll
adc
loope
jns
jmp
jb
push
test
inc
lds
inc
fsubr
mov
test
mov
fdivrl
loopne
int
imull
cmpsb
leave
cmp
jae
push
and
jae
shlb
cld
loope
sbb
mov
and
jmp
xlat
fildl
push
mov
sub
xchg
mov
ds
inc
addr16
xor
loopne
push
outsb
fucom
pop
inc
inc
xor
mov
add
jno
jns
cmc
aas
xchg
jae
dec
ret
mov
fists
sub
adc
sub
sbb
cmp
les
test
inc
outsb
mov
data16
inc
xor
push
add
jns
mov
jl
cld
clc
jmp
xor
arpl
imul
xchg
out
and
xor
out
adc
adc
repz
cltd
cmp
adc
pop
shl
add
mov
sub
lahf
arpl
xchg
push
loop
xor
cwtl
pusha
push
shrb
jo
mov
call
add
out
mov
and
cmpsb
stos
inc
cmp
bound
ljmp
mov
mov
addb
push
out
cmp
rolb
fsubr
mov
lock
popf
call
jbe
repnz
xchg
ret
outsl
lret
dec
and
jno
fcmove
push
push
mov
push
xchg
dec
push
push
into
scas
cs
ss
jle
mov
add
xor
in
cmpb
call
cmc
jmp
lea
jb
stc
test
push
cmp
push
mov
jmp
rol
mov
pushf
bswap
movzbl
bts
mov
lea
push
setnp
mov
bt
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
add
dec
insb
gs
outsb
imul
imul
cmc
movzwl
clc
xor
mov
jmp
inc
push
xchg
pop
and
lcall
xchg
dec
data16
out
ss
push
jmp
cmp
adc
xchg
xchg
fwait
xchg
sbb
sub
repz
lods
dec
insl
dec
adc
jp
repz
iret
xor
ja
sbb
bound
mov
mov
dec
sbb
mov
dec
sub
xlat
imul
mov
fnstenv
repz
sub
ret
jns
pop
mov
out
out
sarb
hlt
in
and
sub
mov
cld
sbb
or
arpl
popl
add
pushl
call
pushf
lea
jae
call
sub
sub
je
dec
pop
movsb
test
lods
movsb
pop
xchg
les
pop
mov
pusha
and
imul
dec
fiaddl
sub
decl
jmp
ja
push
mov
popf
cmpsb
outsl
xchg
mov
inc
js
jo
js
jecxz
xchg
rorl
insb
out
pop
push
and
sub
mov
inc
xchg
hlt
insb
sbb
mov
pop
add
cwtl
loop
ss
rclb
xchg
rorb
shlb
pushl
pushf
pushf
lea
call
jmp
fbld
mov
and
mov
lods
aad
sbb
imul
jne
clc
pop
scas
jb
in
sub
pop
or
mov
arpl
std
mov
adc
sahf
mov
outsl
hlt
mov
push
xchg
andb
adcb
push
pop
cltd
je
or
adc
sar
mov
subb
xor
loop,pn
or
in
jp
xor
ret
adc
pop
xor
nop
inc
pop
mov
jecxz
sbb
sub
rorl
xchg
cmp
sub
imul
aad
frstor
mov
fidivrl
and
jle
push
pushf
xor
or
mov
push
cli
inc
push
into
out
repnz
nop
daa
pop
imul
cmc
xchg
or
jae
sub
cwtl
cmp
inc
push
mov
rcll
mov
and
jns
fstpl
fistpl
frstor
cmc
xchg
int
int
xor
shlb
push
outsl
cmp
lret
call
int3
jne
sbb
sub
sub
inc
lods
or
lea
fstl
mov
inc
jno
pop
cmpl
cs
stc
jl
pop
aas
imul
jo
sahf
sub
xchg
push
icebp
or
or
pop
in
inc
clc
and
fisttpll
xlat
mov
test
cmp
fistps
mov
xchg
lcall
push
stos
push
sbb
pop
mov
or
add
push
popa
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
cld
cmc
not
cmp
pushw
popfw
jmp
enter
and
or
and
cmp
sbb
loopne
cwtl
pop
mov
mov
dec
mov
loope
cs
or
mov
mov
pushf
dec
xchg
cmp
cltd
into
mov
scas
lret
popa
jmp
mov
ss
popa
and
mov
in
test
push
rolb
sbb
shlb
or
cmp
xor
mov
jmp
push
loop
and
jl,pt
and
int3
add
movsb
lods
jl
sbb
fcoml
mov
inc
hlt
aad
sbb
inc
mov
imul
cmp
xor
ret
jmp
popf
xor
mov
call
enter
ss
or
gs
xchg
xchg
mov
data16
xor
dec
mov
ret
lret
and
js
mov
sbb
mov
loopne
sbb
sub
add
mov
stos
fcmovu
sub
xor
imul
push
or
and
int3
ljmp
push
mov
dec
orb
mov
sbb
out
jl
jg
adc
idiv
adc
cmp
cwtl
cld
add
xor
mov
lods
adc
push
jne
dec
push
push
lods
add
in
pop
inc
dec
and
shl
mov
test
add
neg
call
sbb
and
jmp
stc
popa
inc
sbb
adc
push
stos
divl
pop
pop
lahf
xchg
mov
movsb
popf
repnz
and
inc
ficoml
inc
leave
pop
in
add
int
dec
add
sbb
incb
out
push
loope
and
enter
xchg
cmp
or
push
pop
xor
out
out
lcall
push
push
repnz
mov
stos
and
sbb
cmp
popa
mov
and
mov
ret
inc
mov
cli
mov
adc
and
imul
mov
js
cs
mov
jne
sbb
daa
out
repnz
adc
sbb
xor
push
les
jns
adc
std
push
xchg
in
adc
jp
or
scas
sarb
es
insl
cli
xchg
jge
mov
enter
jo
test
push
mov
jbe
jbe
or
mov
mov
cmp
test
inc
sbb
add
imul
jmp
leave
dec
cmpsl
mull
xchg
and
xchg
cmpsb
mulb
pop
icebp
jecxz
mov
fs
xorl
cmp
popa
xlat
sub
inc
mov
shl
aad
adc
push
cld
in
in
popf
orl
cmc
xorb
sti
and
lds
or
inc
xchg
mov
add
insl
sbb
movsl
xor
loopne
loopne
push
inc
cmp
cmp
and
pop
lcall
addr16
mov
out
jg
lahf
pop
jns
ret
jecxz
fcoml
add
mov
mov
aad
xchg
xlat
fwait
in
adc
dec
addb
and
out
jge
nop
sub
push
jns
pop
icebp
inc
mov
cmpsb
mov
das
in
xor
adc
aaa
aad
xchg
ror
mov
inc
into
ret
mov
test
push
mov
pop
and
jge
std
jge
pop
gs
int
push
movsl
scas
out
fstl
lods
ret
push
add
addr16
and
fsubs
in
mov
add
in
in
sub
popf
fidivrl
cmp
lcall
out
pop
mov
and
popf
and
pop
jo
cld
or
shrb
cmc
and
stos
inc
adc
orl
int3
dec
jg
movsl
mov
mov
dec
jle
sub
call
add
js
mov
lret
jle
or
lea
jne
push
pusha
lea
call
pushf
mov
pusha
pushf
lea
jmp
jmp
mov
movb
pushl
ret
clc
mov
push
xchg
ss
push
pop
push
ds
mov
call
mov
test
xchg
pop
outsl
push
and
rol
cld
test
out
pop
jbe
js
mov
popa
sub
adc
orl
dec
hlt
jnp
jge
sbb
arpl
xor
outsb
mov
loopne
cmp
xchg
mov
add
push
outsb
xor
out
mov
fbstp
xlat
xlat
lahf
jg
daa
aaa
cmp
aad
test
cmc
add
test
cmc
test
call
lods
adc
pop
and
and
or
or
inc
adc
or
test
cwtl
out
repz
push
adc
sub
sbb
mov
iret
jne
xchg
pop
mov
sbb
insl
fwait
push
and
loop
jmp
ficoms
cmc
jp
fsubs
in
jnp
add
outsb
xlat
mov
xchg
pop
notl
pop
outsl
xchg
jg
mov
xchg
mov
dec
and
and
and
push
test
jno
shll
je
and
sbb
lock
cmp
sti
pushl
add
jmp
mov
insb
sbb
cmp
and
jnp
xor
mov
loopne
mov
push
cltd
out
adc
xchg
push
addr16
popa
dec
int
push
mov
adc
push
xor
shll
in
leave
outsl
xchg
mov
lret
pushf
add
sub
fsubrs
enter
push
sub
insl
sbb
jge
sub
adc
push
movsb
inc
int3
xchg
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
push
and
sub
mov
sub
cmp
lds
pop
filds
aam
adc
or
xor
test
bound
int3
jno
xor
xchg
mov
loopne
xor
mov
test
cwtl
xor
mov
mov
mov
call
lahf
inc
filds
xor
and
sub
fnsave
int
inc
lods
in
mov
int3
mov
mov
outsb
push
add
jo
xor
xor
mov
ret
or
scas
xor
addl
jnp
mov
lcall
stc
loope
cmc
add
add
mov
out
cs
push
jg
or
movsb
nop
and
mov
mov
movsl
test
fldl
pop
adc
stc
neg
fwait
arpl
sbb
lcall
or
inc
mov
scas
pushf
subb
lods
or
test
dec
mov
shll
mov
int3
adc
inc
fisubrl
jg
aas
mov
mov
mov
jne
xorb
test
loop
push
jbe
xchg
repnz
xchg
add
xor
sub
push
cmp
lret
ret
sub
xor
imul
subl
dec
aaa
mov
pushf
jmp
call
jle
xchg
and
sub
or
jne
mov
in
adc
sbb
rcrb
mov
ficoms
pop
and
pop
fwait
out
mov
loope
fwait
or
cmpsl
mov
jmp
mov
xor
out
xor
mov
inc
or
cmp
or
pop
das
mov
pop
cmpsl
daa
inc
aaa
pandn
daa
push
out
and
push
mov
mov
and
sub
cmp
ret
dec
sti
and
adc
or
mov
push
lods
mov
sbb
bound
add
in
sahf
mov
sti
or
loop
xor
roll
leave
inc
mov
xor
mov
pop
adc
xor
cmp
fs
push
inc
daa
jmp
push
data16
cmpsb
outsb
xchg
push
cmpsb
outsb
es
inc
sahf
out
add
adcl
jecxz
inc
and
sub
mov
push
sub
mov
nop
test
sarb
std
ja
sub
pop
cld
dec
fcoms
add
fwait
cmp
fnstcw
jne
or
and
jnp
or
lods
xchg
fninit
gs
adc
dec
cmp
cwtl
arpl
lds
mov
pop
and
adc
ss
push
out
cmpsb
pop
xor
sti
inc
cwtl
dec
nop
add
xor
mov
pushf
lea
bswap
pop
pop
pushf
pusha
pushf
pushl
ret
bt
cmp
clc
add
push
lea
jmp
stc
add
push
jmp
pop
out
jg
and
jmp
xchg
inc
cmp
pop
cltd
loope
mov
mov
mov
adc
dec
pop
sbb
aad
es
out
ja
int3
inc
loopne,pn
dec
xlat
push
in
mov
xchg
das
gs
negb
inc
sbb
cmp
jns
push
inc
mov
iret
fldl
mov
add
das
push
adc
dec
cli
movsl
imul
push
jp
dec
pop
jnp
cmp
jo
adc
sbb
pop
jb
jb
cli
shrb
rcll
daa
xchg
mov
sub
or
mov
sbb
fisubl
or
mov
xchg
iret
and
sahf
addl
sbb
pop
daa
sbb
iret
jno
mov
dec
cmpb
in
fs
xor
pop
xor
sbb
ja
xchg
scas
mov
test
cmp
cmp
lea
in
push
fwait
dec
jmp
andl
js
stos
adc
adc
mov
outsl
dec
andb
cli
add
push
push
pop
and
ja
jmp
neg
add
and
sub
xchg
inc
xchg
mov
out
lret
rolb
jp
stc
lret
fnsetpm(287
out
mov
fcmovnbe
xlat
jg
fisttps
out
cmpsl
mov
and
jge
xchg
xchg
cmpsl
filds
inc
test
and
pop
and
sti
pop
dec
pop
xor
add
jnp
inc
xor
inc
lods
mov
loop
mov
iret
sahf
fildll
push
mulb
jle
mov
cwtl
jb
and
pop
cs
mov
fcmovnb
xor
es
mov
call
pop
sub
xor
add
test
rclb
dec
lods
negb
cmpsb
out
mov
not
mov
push
call
sub
bndstx
jecxz
lret
rcrl
or
sbb
loope
mov
push
xchg
jnp
insb
fcompl
push
dec
popa
pop
mov
mov
xor
mov
xor
mov
pop
pop
faddl
scas
ljmp
pop
push
mov
pop
lret
pop
push
mov
ja
jg
pop
inc
pop
cmpsl
sti
inc
daa
outsb
orl
and
imul
pop
aas
xchg
lahf
dec
xchg
mov
loope
push
mov
xchg
sub
add
and
push
sub
dec
incl
dec
mov
push
cmpsl
and
mov
xchg
sbb
dec
fnstenv
sbb
jne
loop
mov
push
and
add
add
mov
cmp
push
mov
jbe
ret
out
arpl
cmp
inc
and
call
fdivrs
dec
mov
test
pushf
repnz
push
outsb
cmc
and
and
and
stc
out
test
mov
add
test
jo
repnz
mov
scas
sahf
outsb
xchg
add
dec
outsb
sub
add
out
xchg
aad
outsl
push
jns
or
fwait
cltd
cmc
sub
pop
xchg
xlat
xor
test
daa
push
lret
jp
add
fld
xor
dec
push
pop
mov
movsb
insb
gs
fistl
inc
cli
lds
mov
push
mov
mov
call
out
lea
data16
pop
in
add
mov
add
pop
aad
or
push
mov
ds
adc
and
inc
mov
mov
push
es
cmpsb
inc
es
inc
test
mov
fucom
pop
mov
inc
pop
dec
xchg
mov
pusha
les
pop
sub
repz
dec
xchg
ljmp
xor
mov
xchg
xor
mov
pop
aam
jmp
cmp
xor
pop
xor
dec
movsb
cli
sub
das
lret
dec
dec
ss
cmpl
fmuls
mov
daa
xor
test
cmp
push
mov
ficoms
fs
enter
add
xor
movb
movsbw
mov
lahf
pushl
mov
pushf
lea
movl
push
movl
pusha
mov
mov
movb
pushl
ret
or
in
daa
and
pop
mov
loope
test
and
pop
xlat
sub
mov
stc
xlat
dec
inc
in
pop
nop
lcallw
int
mov
mov
sbb
mov
and
jae
icebp
imul
enter
ret
lahf
addb
lea
fstpt
shlb
test
cltd
xchg
mov
mov
loop
fnclex
and
dec
ret
std
or
jo
int
push
loope
cmc
cmpl
div
sub
pop
insb
fidivs
mov
in
pushf
dec
hlt
aam
lods
mov
adc
push
jmp
rol
mov
clc
bt
bt
cmpb
jb
push
lea
jne
pusha
cwtl
xor
cmc
xor
mov
add
push
rcr
add
jmp
call
mulb
sub
sub
pop
xchg
push
pop
push
xlat
lahf
out
popl
lcall
jle
addr16
in
pop
add
inc
xchg
jns
imul
stc
loop
jp
push
rol
fcom
jge
lcall
xor
adc
dec
xor
fwait
push
in
push
xchg
arpl
inc
xchg
inc
out
inc
dec
sahf
push
testb
xchg
dec
push
lahf
jb
shr
shlb
jle
and
or
sarb
mov
mov
push
rcr
mov
push
scas
rcll
sbb
pop
adc
mov
xchg
aam
cmp
adc
movb
repnz
mov
dec
fdivrl
adc
loope
mov
sbb
in
and
or
sysexit
sbb
shlb
test
xchg
stos
dec
pop
movsl
idivb
xlat
in
leave
cmp
mov
sub
inc
mov
jge
out
fbstp
call
add
bt
pushf
movzwl
pusha
mov
push
call
add
dec
outsl
popa
fs
imul
add
imul
jmp
or
sub
jne
xchg
mov
jge
jge
cmp
ficoms
jne
movaps
jb
push
jmp
xorl
ljmp
stos
pop
and
ljmp
imul
inc
andb
ret
cmp
jae
sti
sbb
cld
daa
jge
ja
push
inc
aas
cli
cmp
xchg
add
sub
in
insl
mov
into
ds
mov
dec
push
ret
shll
cli
mov
xchg
inc
mov
and
push
jo
clc
or
add
enter
and
mov
pushf
rcr
mov
in
mov
sbb
dec
fisttpll
inc
repz
mov
adc
jl
mov
push
pop
sub
mov
lret
arpl
mov
add
lret
es
ds
jns
mov
push
rorb
jp
pop
out
jle
push
dec
xor
push
push
movsl
cwtl
imull
lods
mov
sbb
sub
hlt
mov
int
inc
enter
xchg
shll
jae
and
js
cmp
pop
sbb
dec
insb
xor
sbb
les
mov
mov
sbbl
xchg
mov
push
je
dec
jge
divl
jnp
lds
push
in
sahf
and
repz
and
call
push
cmp
mov
sti
sbb
lods
add
mov
sbb
nop
cli
cmpsb
push
xchg
add
mov
mov
rclb
cmpsb
je
mov
or
enter
enter
or
inc
push
or
pop
sub
sub
sbb
push
push
daa
iret
adc
sbb
sahf
jb
iret
dec
popf
mov
fldl
out
cmp
sbb
lahf
xor
and
mov
nop
sbbl
xlat
aaa
xlat
out
pop
mull
nop
or
shrb
sarb
xlat
in
push
cmp
push
lods
les
sub
mov
and
mov
fcoms
mov
js
sbbl
sbb
ljmp
mov
mov
push
push
pop
movswl
cmp
lea
fistl
jnp
add
sbb
adc
push
stc
push
lock
push
in
and
cmp
push
fmuls
cmp
sub
leave
mov
imul
adc
das
xchg
add
lar
popf
lret
out
sub
pushf
pusha
ficompl
mov
fistpl
xchg
cltd
jg
jbe
inc
bound
mov
loopne
mov
lcall
xchg
xchg
push
or
popa
jl
repz
into
sub
cmp
inc
push
pop
dec
and
pop
jne
in
cmp
mov
or
divb
movsb
mov
movsb
je
test
popf
mov
andl
mov
cmc
clc
mov
bt
mov
test
lea
jl
push
movb
lea
je
bt
cmp
add
pusha
clc
cmc
cmp
cmp
pusha
pushf
push
call
clc
adc
sbb
lcall
sahf
cld
lret
lock
sbb
ja
fbld
sub
or
jae
repz
repz
mov
cli
mov
sbb
test
add
addr16
ds
dec
lods
insl
neg
movsb
sbb
sti
mov
and
rcrl
insl
dec
dec
dec
aad
imul
and
jno
and
movsl
mov
cmc
cmp
js
push
cs
xor
add
jnp
adc
xor
or
mov
dec
inc
imul
mov
test
cmc
mov
xor
mov
jmp
mov
andb
adc
lahf
scas
and
pop
rolb
dec
add
push
xchg
into
pop
outsb
mov
out
testb
addr16
call
lcall
scas
ja
das
das
jg
out
das
out
dec
xor
pop
ffree
je
mov
loopne
inc
sub
push
mov
jmp
cmpsl
iret
pcmpgtd
mov
fwait
aad
xchg
jns
jmp
mov
lahf
pmuludq
fwait
xor
push
loope
in
insb
movsl
add
mov
jecxz
call
mov
ja
in
outsl
jb
mov
mov
aad
mov
aad
xor
adc
adc
jge
push
sbb
pop
cld
pusha
bound
jns
pop
xor
add
movsl
lods
and
daa
negb
push
in
daa
pusha
stos
pusha
lea
jmp
sbb
push
add
test
sub
sub
shl
jp
xchg
push
xchg
lret
xchg
lods
and
mov
push
jbe
or
xchg
mov
xlat
cmovb
orb
inc
jns
gs
daa
lahf
mov
push
stos
jl
inc
adc
inc
push
sahf
into
into
sub
adc
cmp
mov
imul
ds
adc
lea
pushf
pushl
ret
pushl
movl
pushf
lea
jmp
or
pushf
lea
je
setno
cmc
add
rcr
sub
and
shrd
shr
xor
xchg
mov
jmp
jmp
test
cmc
sub
cmc
cmp
repnz
pusha
lea
jne
xor
push
stc
pop
mov
neg
jmp
ds
scas
xor
sub
jo
pop
dec
adc
xor
rcr
add
fcmovnbe
int
loope
mov
shll
cli
rcll
add
xchg
movsl
sbb
cmp
mov
pop
cli
mov
fcomps
stos
lea
pop
or
gs
cs
mov
out
xchg
scas
sub
or
cmp
fucomi
arpl
fistl
fwait
and
dec
mov
shl
movsl
jne
mov
pop
imul
sub
int3
cld
dec
and
test
adc
and
test
shrl
insl
inc
jl
js
ret
sarb
sahf
push
call
push
test
push
fadds
stc
sbb
mov
in
add
int
rorb
fisttps
mov
jno
popa
mov
jge
jnp
sbb
lock
push
push
mov
clc
xchg
xor
or
test
js
push
mov
repz
xchg
mov
jns
mov
repz
cmc
jecxz,pn
scas
call
out
dec
in
imul
mov
clc
mov
jb
lock
cmpsb
out
mov
ffreep
hlt
fdivrs
ror
leave
aam
pop
iret
lcall
into
movsb
sbb
int3
lds
adc
shl
shlb
aam
movsb
repz
jmp
stos
in
movsb
out
adc
int3
or
sbb
cmc
aam
rol
add
fstpt
leave
into
mov
popf
sahf
int3
rorl
sbb
lds
mov
repz
jl
out
lret
xchg
push
test
test
mov
jl
out
gs
lcall
dec
call
cmp
stos
mov
inc
shl
loope
repnz
arpl
in
lock
repz
shll
sbbl
shlb
inc
sbb
push
in
mov
inc
cmc
int
mov
and
cmp
cwtl
mov
inc
inc
in
add
ret
mov
or
xchg
mov
rclb
or
xchg
loopne
and
mov
jo
andb
xor
sbbl
call
mov
adcl
jl
mov
cld
fistpll
mov
les
adcl
mov
mov
popa
mov
test
jo
test
xchg
mov
jge
sub
shr
dec
mov
mov
mov
adc
test
jo
jbe
pusha
test
inc
mov
test
loope
mov
lahf
jle
sarl
xchg
shll
mov
mov
lahf
add
jl
mov
dec
xlat
sahf
mov
add
orl
sbbb
rorb
sbbl
mov
mov
lahf
mov
outsl
mov
sarb
inc
jl
out
pop
inc
mov
dec
adc
out
call
scas
sbb
xchg
rorb
enter
adc
mov
push
xchg
test
dec
pop
or
and
mov
mov
pop
jns
orl
mov
xchg
add
xor
cmpsl
xchg
lea
sbb
add
jle
xchg
andb
mov
push
test
pop
and
test
jo
or
jne
test
jnp
test
cltd
xchg
xchg
and
popa
mov
ret
pop
push
out
clc
sbb
xchg
mov
rclb
adc
or
xor
pop
clc
and
pushf
and
fldcw
in
ret
pusha
das
stos
pop
xorl
mov
add
add
sti
or
add
cmp
jo
pop
adcl
rcl
nop
push
inc
mov
bound
add
jg
and
scas
mov
jp
or
mov
or
xor
xor
fwait
mov
nop
push
sti
lret
mov
xlat
ja
shlb
pop
xchg
call
sbb
mov
mov
push
mov
enter
push
mov
push
aas
aam
jo
mov
mov
and
adc
mov
loop
test
inc
add
push
pushf
add
outsl
sti
xchg
jb
insb
xchg
pop
push
rolb
xchg
mov
and
test
dec
jp
xchg
lds
or
test
enter
xlat
or
mov
mov
cld
mov
mull
ret
cwtl
adc
sbb
fcmovu
outsl
lock
mov
lcall
xor
aad
mov
fidivs
enter
imul
mov
xchg
cwtl
fiadds
mov
enter
roll
mov
mov
and
fsubl
fcomp
push
jl
and
jg
sbb
pop
add
sub
fildl
inc
sbb
dec
sub
fdivs
mov
test
je
fmul
sbb
fcoms
and
mov
maskmovq
js
adc
xorl
cli
inc
lret
push
enter
mov
or
lods
cmp
cmp
lds
movsb
test
add
out
lods
xor
rcll
orl
mov
mov
or
in
pushf
or
or
clc
orb
jo
lods
fwait
enter
aaa
jo
call
sbb
mov
jmp
dec
ss
push
jmp
xor
test
ret
enter
mov
enter
xchg
xlat
mov
dec
inc
xchg
fcmovbe
sub
mov
and
das
xorl
movb
mov
nop
sub
aaa
packssdw
xchg
sahf
out
mov
xor
movsb
pop
aaa
mull
xchg
and
xchg
mov
enter
js
rclb
cmp
xchg
cli
movsb
sbb
movsb
pop
cmp
xchg
faddp
call
movsb
adc
adc
clc
mov
cmp
jge
mov
jo
movsb
in
mov
adc
std
push
out
cmp
or
mov
mov
out
xchg
out
xchg
adc
stc
iret
mov
mov
mov
into
jg
pusha
add
loope
xor
add
pop
lcall
gs
xor
call
xor
aad
adc
push
mov
lock
adc
dec
mov
jl
adc
mov
sbb
mov
jns
xchg
inc
or
sub
adc
xchg
shlb
mov
sbb
mov
bnd
cmp
mov
in
test
mov
je
adcl
xchg
jnp
pushf
jnp
and
jo
test
lret
test
int3
xchg
sahf
test
iret
test
and
repnz
clc
and
push
mov
add
fists
cld
clc
int
mov
xchg
mov
in
test
or
test
jmp
clc
cmp
stos
clc
xchg
les
test
sahf
and
dec
lret
test
add
pusha
stos
or
lock
dec
xor
push
sbb
xchg
mov
repnz
add
out
in
aad
lock
mov
pushf
out
pushf
notl
rorb
add
mov
into
enter
adc
mov
sbb
les
ret
or
es
cmp
clc
call
movb
add
mov
xor
loope
into
xchg
test
lds
xor
in
push
mov
cmpsb
mov
jmp
aam
xor
sub
enter
movsb
test
pushf
scas
es
hlt
imul
adc
mov
add
dec
mov
adc
shlb
dec
mov
and
cli
inc
lds
test
in
roll
repnz
sbb
add
shl
out
or
lods
int3
fmull
adc
lock
jecxz
adc
pop
dec
jae
xor
xlat
mov
fcmovnbe
iret
mov
test
pushf
mov
es
mov
enter
or
shl
int
loopne
add
cmpl
pushf
and
mov
mov
mov
jne
pushf
scas
xlat
orb
movsb
andl
cwtl
and
shlb
test
push
inc
test
lock
and
inc
mov
xchg
movsl
fadds
mov
inc
and
xchg
jmp
mov
lock
add
out
test
lds
mov
orl
leave
fbld
iret
flds
xchg
push
fistpl
jmp
aam
pop
lods
in
mov
rorl
ret
ret
ficoml
ret
xchg
fisttpl
sub
lcall
fisubs
adc
ja
and
test
adc
roll
fsts
incl
xchg
jns
mov
or
mov
int
in
test
sbb
xchg
test
clc
and
cmpsl
lods
sbb
adc
test
andb
jl
mov
inc
sahf
jl
nop
sbb
xor
rorl
and
mov
mov
or
pushf
pop
push
push
mov
xchg
sbb
push
insb
sub
mov
ds
jns
fistpl
call
mov
sbb
mov
mov
mov
icebp
xor
add
call
mov
clc
sub
push
dec
add
mov
call
xchg
jbe
mov
popf
pusha
sub
adc
adc
jne
pushf
lret
mov
dec
add
mov
aaa
shlb
cmp
pop
rorb
int
dec
imul
repz
test
aam
xchg
jl
mov
shll
dec
mov
ljmp
movl
xchg
fbld
add
test
data16
push
sbb
mov
mov
adc
enter
dec
data16
fildl
mov
inc
nop
jae
cmp
push
ret
out
out
int3
je
mov
inc
test
or
or
ror
lods
pop
xchg
fldl
cmp
movsb
pop
add
adc
fiadds
flds
rorb
rol
fsubrl
loope
push
sbb
jns
rclb
nop
fildl
mov
cwtl
mov
cmpsl
movsb
fistps
jecxz
loopne
fisttpll
xor
dec
sbb
addl
stc
sub
adc
loopne
fdecstp
shlb
loopne
in
fildll
adc
es
sub
cli
adc
lock
ret
es
into
test
repnz
push
adc
mov
test
or
or
xor
inc
add
test
mov
dec
rcr
sbb
sub
inc
aam
mov
fdivr
dec
rcl
cmpsb
shrb
and
ret
push
mov
popf
nop
dec
dec
shl
ret
dec
mov
sbb
pushf
popa
xchg
mov
mov
and
inc
cmpsl
test
push
in
and
push
add
ret
and
lock
shld
pop
adc
add
push
add
test
iret
out
mov
daa
or
or
lock
mov
push
jp
int3
mov
call
inc
ret
orl
call
dec
mov
dec
nop
sbb
rorb
fld
call
mov
rcll
std
testb
xchg
movb
mov
pusha
movsb
mov
adc
pusha
xor
cltd
sub
enter
into
mov
mov
test
cmpsl
jns
push
push
xchg
fnstenv
adc
jo
fidivrl
cmpl
and
test
xor
mov
pusha
shrl
mov
or
pop
xor
cmpb
push
add
mov
mov
insb
mov
xor
sbb
js
es
xor
orl
jmp
xlat
nop
sbb
cli
cltd
sar
sbb
push
in
fldl
test
into
loop
mov
les
or
iret
sub
xchg
repnz
es
in
mov
in
xchg
fnsave
hlt
adc
inc
mov
pusha
add
sbb
mov
sahf
xor
pusha
sahf
movntq
test
push
lcall
xor
jp
pop
dec
int
les
in
in
test
xchg
jb
dec
xchg
sti
xor
call
into
push
and
and
int3
in
add
push
sbb
mov
cli
mov
jmp
adc
mov
popa
mov
add
enter
roll
mov
push
mov
mov
push
in
pop
movsb
call
lods
sub
cmp
pusha
push
fmul
mov
imul
nop
sbb
imul
dec
sbb
add
adc
and
rol
pusha
int3
or
push
lret
xor
and
adc
leave
jo
mov
add
push
cmp
sub
sub
xor
push
icebp
jno
aam
mov
fs
sahf
aad
push
nop
push
mov
cs
movsb
xor
adc
lret
hlt
scas
mov
xchg
sbb
call
std
enter
cmpsb
mov
adc
dec
add
hlt
add
pop
filds
jp
cltd
adc
loopne
aas
pop
adcb
out
sbb
mov
jecxz
add
push
push
mov
pop
loop
les
mov
in
clc
hlt
push
lods
mov
xor
xor
gs
sub
xchg
push
enter
inc
add
lock
mov
movsl
or
nop
and
sub
mov
xchg
shrb
movsl
xor
fimuls
push
subb
aam
stos
repnz
sbb
and
fdivrs
scas
jmp
add
mov
mov
dec
push
mov
mov
rsqrtps
fs
movsl
mov
mov
jne
cmp
movsb
adc
lods
subl
mov
sub
mov
neg
xchg
into
js
sbb
fdivrs
nop
mov
lcall
mov
jp
out
in
add
popa
movsb
ljmp
int3
or
xchg
loop
push
xchg
call
call
lods
mov
mov
pop
loop
dec
adc
cmp
and
movsl
test
jmp
pop
mov
jecxz
mov
rol
and
xor
adc
les
xchg
loopne
fdivrl
xor
jmp
scas
push
cmp
xchg
enter
int3
adc
in
pop
movsb
hlt
sti
mov
shlb
xchg
call
pushf
mov
test
mov
mov
adc
xlat
mov
xlat
fldt
mov
in
loopne
or
orb
jecxz
adc
add
xor
mov
lahf
add
cwtl
inc
nop
in
outsb
lahf
in
add
imul
xchg
or
stc
jo
xor
inc
mov
lcall
adc
sbb
pop
decb
jmp
rcrl
or
loop
sbb
or
xor
out
stos
lods
xchg
int3
lods
jns
lcall
or
adc
cmpsb
dec
mov
not
push
into
cmp
nop
rcrb
cwtl
pusha
push
in
call
jnp
and
rol
push
cld
scas
out
rcrb
cmc
xchg
orb
mov
sbb
lock
sbb
add
xor
stc
repnz
pushf
inc
enter
and
xchg
inc
or
cs
adc
mov
jecxz
pop
mov
ficoml
int3
test
push
sahf
loope
mov
test
xchg
movsb
inc
cmpsb
pop
rcl
xchg
js
jns
jbe
test
in
xchg
xor
dec
mov
inc
sub
mov
or
and
fsubl
cwtl
movsl
xor
push
fldcw
and
int
loopne
push
loopne
mov
loop
incb
xchg
inc
or
push
or
stos
lods
cmp
vcvttpd2dq
and
out
movsb
sahf
xor
dec
inc
mov
hlt
mov
mov
repnz
repz
mov
adc
sahf
dec
xchg
mov
or
xchg
push
adc
lret
fbstp
shrl
into
pop
ud2
adc
xchg
mov
sahf
mov
sbb
or
ror
cmpsb
outsl
cli
pop
aam
push
enter
cwtl
loopne
mov
add
mov
in
in
mov
mov
adc
ds
and
rorl
xchg
test
add
sbb
fisubs
rcll
jbe
push
movsb
mulb
ljmp
fsubl
dec
int3
sbbl
mov
xchg
gs
lods
addl
les
pushf
mov
shll
pushf
sub
fst
mov
jne
xchg
sub
xor
mov
in
inc
add
adc
insb
movsl
rclb
std
loop
jmp
jnp
xlat
rolb
inc
arpl
push
jl
cld
sub
outsb
jmp
jmp
xor
add
push
in
fcmovbe
out
jb
dec
xchg
es
jp
in
push
xchg
cld
dec
jl
pusha
test
mov
aaa
sub
xchg
fildll
mov
mov
add
rol
fisubrl
scas
nop
sub
clc
inc
sub
movsbw
movsbw
mov
call
add
clc
inc
add
xor
add
clc
inc
add
clc
cmp
mov
cmp
add
call
cmp
add
mov
cmp
add
cmp
add
inc
add
cmp
add
inc
add
ret
inc
add
adc
add
adc
add
adc
add
pushf
inc
add
adc
add
call
cmp
add
mov
cmp
add
adc
add
test
add
add
add
add
add
clc
cmp
sbb
cmp
add
add
mov
jg
pop
inc
and
fs
and
mov
add
and
dec
jo
adc
cmp
lea
add
shlb
inc
lret
jle
fwait
cltd
xchg
in
cmp
loop
cmp
lahf
and
mov
clc
mov
pop
sub
or
xchg
pop
sbb
mov
xchg
mov
leave
mov
outsl
xor
fcomp
xchg
fwait
and
sub
loope
stc
cltd
fsts
jns
aad
hlt
add
cmp
js
shll
inc
aaa
cli
cwtl
adc
je
mov
pop
dec
mov
inc
inc
enter
xchg
jle
and
je
scas
pop
scas
aaa
dec
cmp
icebp
xlat
dec
test
push
inc
dec
lret
mov
inc
ljmp
je
sbb
inc
xor
dec
cwtl
call
adc
cmp
mov
stos
in
in
sbb
ss
dec
jmp
and
cmc
sub
cmp
jno
push
aas
cmp
inc
sarb
mov
cmp
fidivrs
or
and
movsb
loope
sbb
xchg
arpl
lods
subl
inc
push
lock
sbb
and
ljmp
shrb
addb
scas
repz
add
push
ds
cs
xchg
roll
pop
scas
xor
xchg
or
roll
icebp
xlat
jmp
cmpsb
fisttps
arpl
ss
and
cmp
out
out
lcall
addr16
dec
sub
mov
dec
sub
and
stc
loope
adc
pop
inc
jno
bound
sbb
adc
lea
lods
xchg
lock
jbe
xorb
pusha
mov
popa
out
aaa
push
std
out
das
sbb
push
jo
jb
bnd
les
lods
jne
cmc
in
adc
xor
push
inc
xchg
xor
cmpsl
cmc
stc
test
mov
cmpsb
fisttps
fdiv
and
pop
dec
and
pop
cmp
add
loope
leave
stc
or
aaa
inc
xchg
cld
xchg
add
in
fcom
fcoms
cmpb
pusha
mov
add
pop
pop
jnp
leave
movsb
pop
jns
inc
jp
les
sbbb
and
dec
stos
mov
push
xlat
sbb
sbb
test
inc
jb
jne
xchg
push
call
enter
cmp
mov
cmp
dec
in
and
js
inc
cwtl
jno
cmpsl
fisttps
ja
xchg
shll
jne
dec
and
ja
mov
in
das
inc
les
dec
loop
sahf
shlb
in
and
push
mov
repnz
inc
pop
fdivrp
pop
mov
push
jmp
test
subb
inc
aaa
in
mov
cmp
inc
fprem1
repnz
ja
xor
cmp
pusha
mov
or
cmpsl
in
mov
cmp
sti
ret
ficompl
push
push
xor
lods
adc
test
scas
jmp
jmp
mov
sub
xor
cmp
sub
ficoml
add
sbb
cli
mov
cs
push
shll
push
dec
movsb
lahf
inc
add
sbb
xchg
mov
gs
fildll
test
loop
stos
fsts
dec
dec
std
pop
xchg
scas
mov
pop
mov
push
aad
inc
mov
fisubrl
sbb
xchg
xchg
orb
mov
mov
jecxz
inc
and
jnp
inc
pushf
push
pushf
lea
jmp
xchg
out
loop
subb
ljmp
loop
pushf
call
or
ds
mov
fnsave
or
sahf
loop
jle
adc
push
or
jae
aad
loop
push
mov
stos
dec
jnp
sub
dec
fwait
push
push
add
int
test
fdivrl
and
insb
push
push
xor
pop
cld
hlt
sub
sub
in
rcrb
test
lret
jmp
test
sub
imul
cmpsl
cmpsl
movl
xor
rclb
or
sbb
sbb
in
rcrl
pop
mov
mov
mov
mov
js
sbb
iret
cmp
arpl
push
mov
pop
insb
sbb
dec
mov
repnz
ret
inc
push
pop
popl
xchg
out
mov
xlat
daa
lahf
nopl
fsubrs
push
xor
pusha
cwtl
or
xorl
lods
and
mov
or
or
jne
cs
sbb
icebp
lahf
gs
mov
test
cli
push
push
cld
loope
and
xchg
or
adc
jmp
xor
dec
push
bound
and
aam
xor
test
push
dec
xor
rcrb
scas
cmp
enter
jo
mov
push
cmp
ja
adc
jns
int
xchg
fidivrl
sbb
lret
push
les
mov
dec
mov
ss
test
or
test
sub
ficompl
addl
lea
add
push
int3
add
mov
repz
dec
push
adc
sbb
imul
xor
cld
pushf
sub
insb
jl
adc
inc
inc
pop
inc
sbb
add
cmp
pusha
jmp
xchg
mov
fisttpll
in
dec
int
aad
or
push
and
in
or
jle,pn
mov
or
daa
das
xchg
inc
gs
mov
aaa
in
test
mov
mov
stos
in
or
add
mov
verw
dec
mov
sub
jb
sbb
enter
pop
xchg
mov
cwtl
mov
sub
pop
outsl
imull
mov
push
out
sub
cmc
dec
outsl
insb
xor
cs
insb
add
mov
call
sub
sbb
mov
jo
nop
loopne
andb
jo
loop
jge
cmp
dec
imul
addr16
cmp
stos
mov
jge,pn
and
and
dec
cmp
stc
jp
int3
das
int
shlb
mov
in
aam
push
hlt
imul
xlat
fbld
cld
push
adc
pop
push
jmp
data16
lock
nop
loopne
out
dec
inc
hlt
jp
into
push
popa
push
pusha
mov
movzbw
mov
ror
test
sar
rcr
mov
and
sets
shl
sub
lea
call
call
rorb
xchg
dec
and
xchg
jae
sub
ret
mov
lret
or
popa
inc
pop
inc
into
rolb
fistpl
inc
ds
lock
std
and
push
sti
pop
test
add
ss
les
push
sahf
pop
out
out
repz
jne
and
and
lods
jns
or
out
pop
push
mov
jbe
ds
xchg
cmpsb
outsb
out
pop
mov
imul
and
inc
mov
mov
mov
fdivs
mov
cmpl
cmp
int3
mov
out
pop
sbb
fldenv
addr16
pop
stc
es
test
aad
pop
push
je
shll
xchg
jnp
jbe
fsubs
stc
rcl
ss
fcomps
test
jecxz
aam
aas
cltd
or
scas
fbld
add
and
ss
stos
jl
dec
mov
mov
mov
rcrl
pop
les
adc
mov
pop
test
dec
mov
aam
and
flds
sub
adc
ficomps
jp
push
leave
popf
insl
push
lret
sub
divb
inc
jecxz
cmp
test
incb
cmp
sub
inc
addl
add
popf
jmp
test
jnp
pop
outsl
cmp
pop
mov
sti
and
push
dec
imul
pxor
das
push
ja
aas
repz
push
xchg
movb
ljmp
shrb
repnz
jle
add
sbb
sub
or
adcl
add
mov
xor
push
lea
jns
adc
push
pusha
jmp
xor
neg
or
mov
pushf
or
call
pop
cmp
dec
and
sarb
push
out
push
push
mov
push
pop
and
or
std
shrb
jo
mov
gs
outsb
xchg
andb
loope
xor
or
sub
xor
scas
jne
push
repz
aas
call
arpl
fisttpl
dec
jle
push
mov
dec
int
popa
pop
inc
std
aam
in
push
and
int
pop
and
cmp
out
mov
or
or
push
or
lahf
push
fimuls
cmp
mov
enter
das
sub
sub
ljmp
add
mov
test
or
out
bound
les
sub
pushf
push
jmp
xchg
and
and
sub
test
cmp
push
lds
jae
movd
and
loop
ja
std
mov
jns
loopne
mov
fwait
jno
ret
in
push
stc
aad
lret
add
or
int
push
xchg
movsb
and
push
fwait
ret
cmc
popa
fcompl
push
xchg
mov
subl
lret
pop
stos
arpl
or
pop
push
mov
iret
lods
leave
stc
fnstenv
mov
and
js
cmpsb
push
push
dec
es
jle
xchg
pop
dec
xchg
imul
xchg
and
in
dec
adc
pop
adc
or
iret
pop
das
and
and
sahf
mov
mov
mov
push
push
cmpsb
mov
push
repz
xor
fsincos
test
lret
in
fwait
mov
in
mov
jecxz
adc
sar
adc
push
ret
punpckldq
aaa
aad
or
stc
adc
xor
add
mov
int3
in
sbbb
push
repnz
xor
sarb
dec
xchg
loop
inc
cmp
ss
cmpsl
das
cmovp
jmp
stos
out
jg
and
lock
mov
sbb
pushf
mov
mov
adc
es
out
fimull
sub
sahf
std
push
push
pop
aaa
ja
jmp
movsb
push
shlb
ss
push
ret
mov
xchg
mov
push
or
push
or
lcall
gs
or
add
sbb
mov
sbb
in
in
scas
sub
bound
add
xor
int3
jnp
mov
dec
pushf
je
bswap
dec
push
and
push
pop
shr
sarb
mov
add
fs
add
imul
inc
aad
inc
jmp
sub
jle
fildl
sub
adc
jmp
fidivrl
cs
fidivl
cmp
add
inc
iret
mov
mov
jmp
push
or
lahf
mov
mov
loop
mov
testb
jmp
fbld
xor
add
dec
push
push
dec
dec
dec
cs
push
push
add
push
xor
adc
xor
xchg
xchg
in
add
jnp
dec
daa
and
xchg
cmpsb
mul
mov
insb
nop
dec
jae
cmpsl
jno
in
inc
dec
pop
and
xlat
daa
testl
xchg
out
fists
push
xor
pop
and
jmp
repnz
and
negl
arpl
adc
dec
sbb
rorl
xchg
push
and
jnp
cmp
xor
inc
push
lahf
lock
push
hlt
sbb
shr
or
mov
dec
xchg
add
add
das
mov
xor
mov
shl
push
das
xchg
sbb
push
mov
in
push
sbb
or
mov
imul
jae
add
daa
mov
fmuls
jb
jae
ss
jnp
pop
or
xchg
pusha
adcb
fmuls
nop
pusha
mov
call
sbb
mov
and
fldl
sub
mov
jge
cmc
movsl
jge
inc
pop
shll
hlt
lods
or
jp
push
mov
test
sbb
lock
mov
add
cltd
lcall
js
scas
ret
adcb
insb
aas
frstor
ret
adc
xchg
or
ss
and
add
lahf
aaa
push
dec
add
mov
cwtl
nop
and
scas
in
mov
pushf
xchg
fs
into
imull
push
cwtl
out
lret
ret
add
and
lcall
in
mov
and
sub
add
fidivrl
push
cltd
xchg
imul
and
inc
cmp
and
mov
push
add
push
mov
mov
lahf
dec
gs
jmp
fs
push
cmpsl
imul
xchg
jne,pn
mov
and
je
out
outsl
mov
sbb
pop
cltd
xlat
xchg
add
div
inc
cmc
outsl
mov
pop
stc
inc
jns
jmp
shlb
in
insb
cld
xchg
xchg
sub
add
adc
xor
fucom
add
mov
incl
loop
call
or
jge
and
fincstp
out
cmpsl
idivl
aas
mov
aas
cmpsl
push
daa
jno
dec
das
je
stos
out
sub
add
xor
lock
fs
add
pop
and
push
popf
cmp
lret
cs
out
mov
lods
push
hlt
fadds
test
xor
test
addl
insl
xchg
xchg
mov
imul
mov
je
jl
and
mov
and
popa
jmp
dec
mov
aad
mov
sti
push
and
insb
shl
adcb
nop
add
adc
leave
leave
dec
xchg
pop
in
pop
fs
lock
int
es
sub
push
pop
icebp
and
dec
es
sub
adc
and
push
mov
adc
sbb
jb
adc
push
sbb
pop
aam
jp
pop
mulb
ds
cmpsb
mov
aad
ja
mov
push
and
xchg
jbe
pop
mov
jbe
dec
out
mov
mov
xchg
adcl
cmpsl
push
cmp
adc
int3
inc
lods
jle
sbb
repz
push
test
cwtl
xchg
je
inc
loope
mov
loop
sbb
sti
mov
jbe
sbb
fs
and
loope
dec
push
arpl
pop
and
fucomp
stos
push
fistpl
pop
inc
mov
pop
sahf
xchg
outsb
push
data16
mov
sub
inc
and
and
jge
lea
ja
inc
mov
not
jmp
push
aaa
mov
lahf
lahf
pop
pop
scas
div
mull
js
das
movsl
test
lcall
out
pop
mull
jb
mov
mov
fs
mov
je
push
pop
mov
add
jl
outsb
sub
xchg
and
jmp
jmp
shrl
lret
loop
or
lea
and
push
sahf
scas
push
pop
out
ss
mov
xchg
or
faddl
adcl
mov
mov
add
push
sbb
lods
jnp
cli
and
inc
cmp
mov
push
xchg
test
lret
or
add
inc
jo
or
sub
mov
cltd
flds
idivb
pop
cli
jae
pop
and
or
lods
in
cmp
jne
add
sti
fstl
popf
push
imul
pushf
mov
sbb
lcall
add
idivl
push
sbb
sbb
in
fstps
jne
cmpsb
xor
mov
pusha
mov
leave
addb
repz
mov
xor
mov
ja
sub
add
push
sub
mov
scas
mov
push
xchg
cmpsb
inc
sahf
cmpsb
out
cs
jle
pop
cli
jl
cwtl
pop
mov
add
fwait
xchg
lahf
outsl
jg
movq
pop
fldenv
insb
bnd
pop
mov
cs
mov
fcoms
orl
mov
xchg
enter
xlat
stos
fsubrs
sbb
lds
ss
push
mov
test
stos
xor
aad
cwtl
add
mov
mov
shlb
addr16
aad
mov
imul
mov
lea
call
jmp
rcll
sarb
pop
sub
inc
cwtl
jo
rcl
rolb
xor
xor
orl
mov
in
icebp
xor
movsb
dec
mov
jp
xor
cmpl
rclb
dec
mov
dec
ss
fs
sub
shlb
in
adc
inc
inc
add
outsb
lock
aas
movl
aaa
and
mov
pop
lcall
and
cmp
clc
xor
test
les
xor
xchg
jp
jno
add
repnz
pusha
pop
pop
jo
dec
dec
lock
sbb
mov
xorb
cmp
sub
jp
es
cmp
dec
dec
pop
cltd
aad
push
divl
iret
pop
aaa
iret
xlat
or
dec
fs
fisttpll
pop
and
dec
dec
sub
arpl
arpl
push
xchg
in
lea
roll
scas
sub
and
jmp
jae
ljmp
inc
mov
jne
mov
stos
fmul
and
stos
push
cmp
sbb
repz
fdivl
push
rcll
in
sub
mov
dec
and
out
mov
enter
ss
ss
push
push
data16
mov
dec
aas
and
jmp
daa
das
push
ja
sbb
sub
out
ss
out
out
notb
mov
sub
nop
mov
fimuls
and
aaa
dec
pcmpgtw
pop
mov
movsb
add
mov
jb
xorb
jecxz
and
lods
xor
decl
lret
out
xor
mov
push
cmpsl
pop
out
mov
into
dec
movsl
mov
cld
and
test
test
pop
xor
and
push
pop
mov
pop
pop
jo
pop
mov
and
lods
shrd
xchg
shlb
mov
cmc
adc
xchg
into
nop
mov
shlb
arpl
push
lcall
les
jb
push
fstl
mov
cmp
insb
fs
les
mov
mov
or
insl
fs
xor
cs
insb
add
rorb
ret
cmc
cmc
rol
test
pushf
cmp
lahf
setl
pop
mov
lea
jmp
push
dec
ja
and
jl
dec
sbb
pusha
lock
xor
sahf
sahf
sub
mov
cld
in
jmp
adc
and
mov
dec
inc
cs
xchg
enter
push
sbb
push
mov
inc
pop
sbb
mov
cli
cs
cmc
inc
mov
mov
test
fidivl
cmc
test
mov
data16
pop
mov
push
dec
out
adc
push
and
pusha
or
lea
pop
and
jp
fcomps
push
inc
jmp
dec
mov
inc
mov
ja
stos
mov
add
push
and
adc
lret
add
int
aam
int3
mov
mov
xchg
sub
mov
scas
lret
in
cmpsb
ret
jmp
dec
popa
cltd
cwtl
xor
popf
add
sarb
push
mov
dec
pop
out
daa
xor
repz
and
stc
test
inc
pusha
pushf
push
movsl
ret
iret
or
pop
fs
xchg
mov
or
sub
mov
mov
cmp
pop
and
push
les
lods
fadd
jnp
sub
cmpsb
lods
fs
dec
add
lea
daa
sub
sbb
fcoms
ret
inc
das
cmpsl
mov
sub
jo
pushf
fidivs
in
and
mov
incb
and
dec
ss
sbb
xor
sti
int3
nop
popa
jl
addr16
mov
or
ret
and
lock
mov
mov
cmp
sti
insb
cmpsb
arpl
negb
fidivs
rcrb
ror
pop
push
mov
sbb
xchg
pop
ja
ss
mull
cmp
je
cmp
or
mov
cmp
lock
jle
xor
xor
lea
shll
push
and
addb
fisttpll
sub
dec
loopne
dec
xor
rorl
mulb
fistpl
leave
inc
aas
fwait
scas
aas
pop
cmpsl
mov
shrl
cmpsl
xor
push
cs
fisubrl
repnz
ljmp
sub
mov
push
insb
insb
in
into
mov
pop
and
inc
dec
out
pop
pop
das
addr16
dec
push
daa
inc
lcall
sarb
movsl
inc
cwtl
pusha
hlt
lret
xor
es
jnp
movsb
mov
cs
stc
dec
mov
xchg
xor
stos
loop
mov
insl
loopne
jg
out
mov
ds
mov
mov
jb
cmp
push
ds
mov
jle
cmpsb
outsb
in
lock
mov
jne
xchg
rorb
fs
jmp
addr16
mov
sub
ficoml
bound
repnz
adc
add
fisubs
mov
stos
and
mov
dec
imul
push
adc
pushl
mov
roll
ss
add
stos
dec
pop
bound
ret
repz
in
mov
cwtl
fdivrs
shr
push
in
sti
pop
push
pop
xchg
data16
jmp
testl
or
cmp
movsb
in
in
cmp
cmp
xor
hlt
or
mov
cwtl
loope
lock
icebp
jmp
jnp
xor
mov
stos
ret
lcall
mov
push
test
mov
scas
ljmp
mov
hlt
pop
inc
pcmpeqw
xor
cltd
cwtl
adc
movsl
icebp
lds
push
daa
inc
add
dec
adc
shrl
stos
sbb
pop
push
pop
cmpsb
dec
jbe
outsl
xchg
mov
push
xchg
add
and
mov
push
cs
push
test
inc
inc
inc
cmp
shlb
jo
mov
inc
inc
xchg
push
outsl
scas
mov
pop
mov
out
xor
aas
cmp
pop
mov
pop
xchg
lcall
cmp
cli
mov
inc
sub
psubusw
inc
inc
or
out
es
mov
push
dec
aaa
ja
dec
nop
shr
pop
pushl
mov
inc
inc
adc
xchg
or
inc
inc
mov
add
adc
pushf
cmp
push
add
mov
sub
sub
bound
xchg
push
hlt
cmpsb
sti
fs
pushf
movsb
lea
aaa
nop
pusha
subb
inc
mov
jle
jge
jl
aad
insb
fs
repnz
mov
jl
pop
out
cmc
mov
sahf
add
test
push
flds
inc
jl
cmc
ljmp
insb
push
dec
inc
inc
or
or
mov
fmuls
mov
inc
or
enter
xchg
mov
add
pushf
pop
cmp
orb
shlb
push
or
push
or
js
cltd
movsl
lods
jae
lret
adc
jl
dec
call
popa
jo
jo
sub
mov
loopne
out
cmp
out
fcoml
addr16
js
xor
lret
fst
je
mov
aad
call
ljmp
cmc
test
xor
popf
push
push
xchg
lds
and
insb
loop
mov
ret
cmp
shl
orl
mov
pop
in
rorb
jl
dec
jecxz
mov
jl
adc
outsb
pop
popf
push
push
and
push
cmp
test
mov
fistps
and
mov
int
std
mov
popl
push
mov
dec
push
ret
sub
lret
nop
addl
enter
fistl
sub
mov
mov
xchg
jg
add
xchg
mov
test
sub
inc
stos
lods
stos
imul
mov
lcall
push
mov
or
mov
pop
into
add
negl
push
sub
dec
into
jno
mov
mov
xchg
adc
sbb
xlat
adc
mov
adc
lret
mov
arpl
mov
inc
jle
pop
lret
imul
movsb
push
in
and
movsb
sbb
add
testb
hlt
xchg
mov
inc
fwait
xchg
cmc
mov
rclb
inc
or
mov
inc
hlt
movsb
inc
loope
xchg
mov
inc
push
arpl
orl
lods
sub
inc
fwait
in
pusha
mov
or
shll
sub
xlat
xchg
push
mov
inc
or
imul
adcl
in
jl
sbb
test
enter
test
test
xchg
xor
repnz
test
in
mov
je
rcl
loopne
sub
sbb
lret
movsb
jo
jle
push
cmp
js
mov
inc
mov
scas
rcrb
popa
xorb
or
loope
mov
in
popf
cmc
sub
xor
mov
sarl
jnp
jl
xchg
push
or
and
adc
ret
and
mov
mov
iret
nop
js
pop
jl
je
bnd
loop
xchg
sub
xchg
lahf
hlt
popf
add
cmp
les
notb
add
orl
xchg
mov
imul
jne
mov
imul
js
jl
or
sub
ret
stos
mov
mov
and
fs
pop
jp
or
pop
ret
mov
ret
cmp
repz
mov
adc
mov
mov
sub
in
cmp
mov
mov
fs
out
inc
jecxz
bnd
adc
mov
xor
ret
dec
dec
inc
jg
loop
out
in
jl
add
int
add
push
or
mov
enter
pushf
cmpsl
mov
jp
and
mov
sti
jmp
mov
dec
rcr
ret
cltd
ret
shrl
mov
fmuls
jecxz
pop
jo
sub
jbe
movsb
push
scas
test
sti
or
pop
sarl
cmp
call
cmp
jecxz
sti
leave
sarl
mov
or
dec
in
push
into
fsubrs
jle
jo
rorb
xchg
ret
icebp
outsb
shl
fcompl
lods
add
inc
cld
lods
out
cmp
mov
lret
sbb
les
xor
mov
insb
mov
lret
sahf
test
repnz
mov
jl
xor
popf
mov
xchg
mov
pop
and
das
pop
nop
test
jae
xchg
shll
mov
mov
popa
addr16
cmp
mov
or
sub
mov
out
mov
pop
pop
sub
leave
or
and
mov
xchg
mov
mov
adcl
jge
pop
add
ficompl
cld
add
mov
pop
mov
test
lock
iret
push
pop
int3
jno
mov
es
xchg
jle
cli
push
dec
sbb
repz
mov
std
test
jle
insl
dec
aad
sbb
mov
cmp
push
es
mov
mov
add
insl
rol
paddsw
cmp
mov
imul
push
mov
sbb
mov
sbb
cmp
lods
cmove
clc
addl
add
scas
jo
xchg
mov
jmp
mov
jo
pusha
ret
fwait
int3
xchg
bound
xor
and
cmp
dec
xchg
pop
mov
iret
sbb
insl
dec
and
push
mov
mov
fcmovnbe
mov
lock
lods
mov
fnsave
xchg
scas
popf
clc
lods
and
fsubs
or
or
mov
mov
dec
xchg
xchg
or
fmuls
xchg
push
ret
sbb
nop
lea
test
sbb
inc
lahf
mov
pop
mov
mov
inc
movsb
shr
mov
fisttpl
cmpl
sub
shl
je
and
call
cmp
hlt
scas
sub
int3
jl
repz
test
mov
dec
inc
mov
aad
aam
mov
or
jp
jne
addl
or
mov
psrlq
fwait
add
mov
mov
mov
sbb
into
insb
dec
repnz
je
jnp
xlat
ljmp
repz
mov
pop
movsl
leave
pop
test
das
adc
push
ds
and
add
test
mov
in
pop
mov
add
dec
inc
xchg
fisttpll
nop
les
insb
in
repz
out
mov
dec
rorl
jno
xchg
push
or
xchg
lret
imul
pusha
xor
sbb
mov
hlt
pusha
xchg
lods
in
sub
shlb
mov
dec
in
movsl
lods
xor
mov
jecxz
mov
ret
sub
push
jl
push
sub
ret
nop
ja
xor
jge
push
sub
bound
stos
stc
push
call
adc
or
pand
mov
insb
add
mov
nop
mov
mov
mov
ret
or
bound
mov
push
mov
js
loop
mov
rcrb
mov
adc
fmuls
nop
divl
jl
ret
jg
fwait
xchg
movsl
insb
push
inc
mov
mov
or
pop
inc
fnstcw
push
cmp
xchg
inc
jae
in
cli
push
nop
mov
notl
mov
in
mov
mov
dec
dec
stos
mov
pop
mov
adc
add
jle
push
jmp
loop
jl
fdivl
jg
push
add
mov
mov
ljmp
add
std
scas
aaa
out
jo
push
mov
jge
lret
mov
enter
negb
xor
xchg
shrb
cwtl
push
call
pop
jg
out
in
cwtl
inc
hlt
xchg
cld
pop
push
sahf
sar
loop
mov
fsubp
cwtl
mov
stos
ret
mov
dec
sbb
data16
cmc
pop
xor
ljmp
int
lahf
push
push
clc
insb
inc
and
popf
and
pop
setne
add
out
movsl
movsb
leave
repz
fsts
and
call
fnstcw
popa
inc
lods
sahf
nop
and
push
xor
push
lods
js
je
jp
es
loope
or
loop
adc
int3
adc
mov
xchg
sbb
adcl
xchg
lds
repz
aad
cwtl
fs
push
ljmp
in
ja
or
ljmp
lahf
stc
xchg
js
sub
js
xor
push
mov
repz
cmp
sbb
push
sub
cmp
fsubr
cmp
rclb
cmc
adc
dec
int3
and
inc
or
inc
imul
mov
mov
add
adcb
sti
add
cmpsl
or
xchg
or
test
cmpsb
adc
insb
xchg
mov
fs
loop
xchg
xchg
cmp
stos
fwait
mov
sub
or
stos
mov
mov
cmp
test
mov
mov
dec
fnstenv
enter
stc
out
lret
cli
mov
cld
fnstenv
adc
mov
jp
out
or
push
mov
test
xchg
cmp
dec
fnstcw
sti
into
dec
pop
xchg
or
data16
clc
in
iret
test
js
add
mov
inc
iret
fcmovnbe
mov
mov
mov
into
test
stc
mov
push
pop
adc
scas
incl
cmpsl
stos
nop
cmp
sub
es
jmp
cmpsl
jae
ficomps
cld
ret
pop
nop
lret
cmpsl
and
xchg
cmpsl
push
add
movsl
cwtl
xchg
or
cmpsb
pushf
lock
ret
nop
add
pop
mov
cmpsb
mov
jbe
jae
jb
adc
dec
test
xchg
xor
dec
mov
movsl
repz
imul
sbb
mov
push
out
iret
stos
pop
jno
sub
daa
push
daa
popa
or
movsb
pop
movsl
popa
jno
mov
movsl
push
mov
fs
pop
xchg
aaa
sub
jecxz
loope
lea
stc
and
cmpsb
adc
or
jb
add
leave
cmc
les
or
adc
xor
int3
sbb
push
inc
push
test
sbbl
aad
mov
pop
ret
movsb
dec
cld
fsubs
movsb
push
int3
cld
mov
cmp
mov
pop
adc
leave
add
inc
mov
dec
xchg
cmp
mov
in
pop
mov
pushf
sbb
shlb
pop
bound
lahf
or
mov
enter
stos
lcall
dec
out
fs
add
cltd
cld
mov
cmc
mov
or
idiv
pusha
aam
mov
push
clc
push
mov
dec
push
sub
xor
nop
xchg
add
push
mov
pop
xchg
daa
mov
mov
mov
mov
fs
xchg
pusha
mov
mov
in
push
pop
out
pop
xchg
movsb
mov
add
mov
mov
mov
mov
pop
ret
xlat
mov
mov
jno
xchg
imul
lcall
dec
ret
filds
mov
jbe
jl
pop
pushf
shll
jecxz
dec
mov
push
scas
aaa
nop
movsb
push
sub
mov
mov
fcmovu
inc
js
push
and
pushf
mov
outsl
sub
lahf
in
mov
pop
movsl
push
pop
bound
push
mov
lahf
xor
in
lods
push
lahf
dec
mov
mov
pop
inc
add
aad
or
bound
aaa
ret
nop
lahf
sahf
lock
lahf
sbb
sahf
mov
dec
sahf
mov
scas
add
sahf
stos
nop
jmp
sahf
sub
sahf
lcall
mov
xor
mov
or
lods
push
mov
sbb
clc
repz
push
adc
mov
mov
fmuls
pushf
fstl
aad
and
sahf
movsl
sbb
adc
cli
pushf
jnp
cmp
jb
xor
pushf
stos
stos
cmpb
stos
add
lods
outsl
xchg
pusha
fwait
popa
ds
test
cmp
jo
fwait
adc
pop
push
inc
in
jmp
mov
lret
lahf
add
fucomp
mov
mov
cmp
insl
lcall
lret
cmc
jnp
push
aam
pop
insb
xchg
lea
js
mov
lcall
je
add
leave
movsl
mov
or
pop
sub
lcall
lods
shlb
lret
mov
fnsave
imul
jns
movsl
push
add
adc
in
pop
shrb
or
dec
xchg
adc
scas
xor
ret
inc
and
popf
call
cltd
fs
dec
dec
mov
xor
lods
ss
pushf
addr16
sbb
sub
daa
clc
jnp
adc
pop
imul
pop
xchg
orl
cwtl
addr16
inc
mov
cwtl
mov
mov
clc
mov
jge
dec
inc
mov
data16
jns
shlb
inc
es
idivb
push
xor
bound
xchg
mov
je
jle
sbb
loope
ficoml
sbb
cmpsl
mov
mov
lret
mov
bound
jno
xchg
pushf
pop
add
mov
ficoms
mov
push
xchg
cmp
dec
dec
hlt
push
loope
mov
movsb
rcrl
pusha
jbe
addl
dec
fs
pusha
int3
lret
cmp
enter
rcll
mov
fs
mov
fnstenv
fsubs
mov
pop
xchg
mov
jle
icebp
repnz
mov
aam
out
or
push
sbb
fadds
xchg
ss
dec
lahf
and
or
xchg
mov
enter
xchg
rol
push
into
outsl
addr16
shr
mov
insb
data16
repz
mov
fadds
push
mov
fdivr
cs
xchg
and
and
sbb
mov
xchg
xchg
mov
dec
or
jno
int
bound
outsl
test
mov
in
mov
push
dec
xchg
pop
ret
lcall
aaa
popa
loop
xor
xchg
std
xchg
lea
sti
inc
out
out
dec
nop
and
xor
push
inc
push
xor
pop
or
test
inc
shlb
rcll
push
dec
fwait
dec
call
out
mov
or
push
in
int3
dec
mov
outsl
mov
add
test
js
xchg
js
les
pop
mov
xchg
mov
push
jbe
mov
inc
das
xchg
stos
and
xchg
sahf
bound
nop
push
add
push
nop
push
das
nop
add
mov
pause
stc
xchg
or
sarl
lea
sahf
xchg
cs
popa
push
mov
stos
nop
and
jl
jno
inc
mov
out
add
mov
xor
mov
add
mov
xchg
stos
mov
arpl
jb
adc
std
sub
mov
xchg
mov
rorl
fsubl
loop
je
fs
out
cmp
fistpl
test
filds
test
mov
sahf
mov
or
dec
fmuls
or
fsubs
xchg
xchg
les
xchg
imul
cli
jmp
xchg
push
xor
aas
icebp
bound
mov
jl
fisttpll
or
mov
movsl
iret
mov
or
dec
into
inc
scas
xchg
stc
dec
dec
notl
mov
mov
mov
mov
mov
mov
movsb
jo
pop
lret
add
outsb
inc
add
or
hlt
push
add
lods
adc
mov
out
xchg
xor
fists
mov
mov
mov
push
adc
or
pusha
sub
add
dec
or
add
mov
mulb
push
repz
call
int3
mov
push
loope
cmp
cmp
xchg
mov
sbb
xchg
xchg
xchg
jg
push
nop
mov
inc
lds
adc
jg
cmp
or
jo
xor
xchg
xchg
and
inc
jl
jecxz
push
cmpsl
xchg
inc
outsb
xchg
xchg
xchg
movl
sub
jle
cmp
out
mov
mov
pusha
test
aad
mov
xlat
in
pop
xlat
test
push
scas
or
pop
xor
cli
pop
test
jae
jg
and
test
inc
cmp
ret
mov
dec
mov
nop
pop
test
xchg
mov
je
mov
jne
test
pop
adc
xchg
mov
jno
shl
imul
imull
pushf
add
mov
mov
fstl
aam
sub
mov
sub
cmp
clc
mov
sub
sub
dec
loop
jecxz
clc
pop
lret
outsb
cmp
add
push
jmp
mov
ss
fisttps
addb
adc
cmp
inc
jo
orl
mov
movl
in
daa
fsts
ja
jmp
lock
in
xchg
ret
lock
mov
add
xchg
ret
cld
add
xchg
fistpll
mov
mov
jo
pop
enter
and
sbb
mov
pop
scas
int3
jle
mov
push
aaa
cmpsb
iret
inc
xchg
mov
add
mov
movsl
call
in
xchg
lock
in
int3
mov
cltd
fmuls
dec
addl
mov
imull
mov
orb
addb
sbb
xchg
in
int
mov
adc
addl
or
movsb
pushf
xlat
push
cld
push
cwtl
inc
into
xchg
xchg
xchg
rolb
mov
popa
repnz
push
ret
mov
cwtl
rorb
add
in
mov
mov
aam
xchg
push
cmc
xchg
fiadds
mov
inc
xchg
loopne
js
inc
jbe
ja,pn
leave
xchg
fisttps
mov
push
repz
pushf
popf
mov
or
jl
cmp
jno
xchg
ret
aam
push
adcl
out
int
add
inc
ficoms
fs
push
lds
rorb
test
inc
jg
lods
adc
mov
jle
and
sbb
inc
incb
test
xchg
test
xor
rcrb
lock
jno
mov
int
jno
adc
jp
fistpll
stos
push
orl
enter
push
dec
fidivrs
fwait
pushf
mov
aad
stos
mov
in
bound
or
ret
push
or
inc
adc
mov
mov
test
cmc
testl
loopne
lret
pop
enter
sbb
lret
mov
adc
loopne
and
stos
addl
imulb
stos
jo
push
mov
call
adc
or
xchg
jns
mov
in
mov
fwait
subb
and
cmpsb
pop
jl
fbstp
dec
fldt
inc
mov
cmpsb
aas
int3
pop
ljmp
dec
movsl
mov
sbb
pusha
pop
stos
cmpsb
pop
ret
into
pop
shrb
je
push
testb
cmc
xchg
mov
xchg
imul
xor
or
addl
test
cmp
jg
fwait
ret
mov
cwtl
jmp
mov
in
ror
shll
cmp
add
sbb
xor
mov
shl
or
pop
lea
mov
push
mov
inc
mov
popl
dec
inc
xchg
jg
add
add
xchg
dec
xchg
dec
adc
pop
add
sbb
add
repnz
cli
testl
jbe
popf
push
or
cmpsb
add
xchg
or
jb
aam
hlt
mov
rorl
stos
pop
xchg
mov
sbb
into
nop
or
mov
xchg
mov
sbb
mov
ret
xchg
sbb
jl
int
xor
adc
mov
push
sbb
mov
xchg
inc
add
fistl
icebp
orl
xchg
es
or
add
cs
cmc
lahf
xor
fadds
shlb
rcrl
leave
clc
xchg
mov
xchg
movb
adc
sbbl
shrl
or
lods
rolb
data16
lds
int
mov
or
mov
enter
or
cwtl
xlat
add
cmc
mov
shrl
jg
test
mov
lret
cmp
leave
test
push
inc
xchg
lret
fmuls
jo
mov
ret
sarb
mov
adc
lret
int3
jl
int
loop
lret
sarb
ret
xor
int
cld
push
adcb
adc
pop
mov
mov
nop
pop
lods
lret
nop
mov
push
cmpsb
test
rcll
insl
inc
mov
lods
push
dec
sbbl
mov
lcall
pushf
adcl
push
inc
xchg
mov
dec
jmp
and
jae
daa
cvtpi2ps
in
lods
dec
iret
mov
rorl
bound
cmp
mov
enter
mov
subl
or
mov
lret
into
into
lret
imul
add
cmp
ret
roll
lcall
sti
dec
test
jecxz
out
enter
mov
mov
xchg
xor
rcrb
sub
xchg
push
and
ffree
lcall
je
adcb
rol
imul
mov
in
leave
mov
mov
cwtl
movsb
aas
inc
adc
push
push
cmp
mov
les
test
and
push
sub
sbb
dec
cmc
xchg
mov
add
cld
in
add
inc
or
dec
rol
fs
test
lcall
pushf
nop
adc
nop
push
add
popl
hlt
test
test
jp
andl
xchg
lcall
lret
mov
add
mov
push
add
dec
fcoms
outsl
andb
or
mov
push
fsts
orb
lret
cmp
ja
add
or
jbe
push
mov
jb
popf
add
pop
and
mov
adc
ljmp
ret
adc
mov
jae
out
hlt
aad
mov
pushf
mov
dec
add
mov
push
pop
inc
aas
or
jl
xchg
sub
or
mov
mov
inc
jb
mov
push
mov
mov
rolb
nop
push
mov
pushf
inc
cmc
movsl
hlt
movsl
andb
ja
dec
test
cmpl
mov
inc
push
mov
push
xchg
pop
das
filds
jle
and
pop
cmpsl
imul
orl
or
pop
dec
fistpll
hlt
mov
mov
cmpsb
das
pop
gs
rcl
outsb
xor
cmc
add
rorb
mov
cld
sub
push
add
in
test
cmc
testb
and
push
bound
cwtl
jle
ret
test
mov
adcb
adcb
pushf
mov
xchg
sar
adc
mov
aad
xchg
dec
lock
inc
or
addb
add
pop
fs
push
adc
mov
nop
stos
fwait
mov
aam
dec
mov
pop
jbe
loopne
xchg
cmp
mov
stos
pop
cwtl
mov
icebp
cwtl
sbb
and
mov
rcrb
scas
lret
sub
out
xchg
mov
push
lock
stos
add
dec
adc
and
mov
arpl
mov
pushf
std
mov
lret
repz
or
js
popl
test
jmp
imul
and
inc
and
nop
dec
xchg
insb
inc
jb
adc
mov
xor
push
lcall
rcrb
test
inc
aad
lahf
in
pop
lea
dec
lds
pop
mov
aam
cmp
mov
popf
out
outsb
jo
mov
add
pop
xchg
xchg
int
hlt
cltd
add
movsb
test
ret
stos
inc
insb
sub
cld
mov
xor
xchg
or
xor
or
xor
pushf
shrl
push
int3
xor
mov
lock
cwtl
pop
mov
enter
xchg
mov
jmp
sub
imul
mov
push
pop
nop
jns
mov
sbb
mov
push
mov
pop
adc
inc
xchg
push
lahf
mov
jb
and
xor
xor
xor
mov
adc
data16
jmp
lret
nop
ds
cmpsl
adc
push
jecxz
jnp
xchg
pop
enter
rcl
addr16
stos
ror
popa
pop
mov
test
jecxz
sahf
data16
mov
cld
out
mov
inc
nop
xchg
scas
xor
dec
mov
mov
aam
pop
xchg
sarb
pushf
dec
ds
fs
ret
mov
mov
xchg
mov
mov
clc
fisttps
subb
mov
rorb
pop
scas
pop
pop
xchg
mov
sahf
sub
add
enter
or
push
loop
test
sbb
add
push
xchg
stos
jl
lods
test
jae
loop
in
subl
mov
adc
adcl
test
jp
dec
inc
shl
push
lahf
mov
rcrl
js
shll
jecxz
xchg
stos
cmpsl
mov
inc
xor
pop
mov
std
xchg
and
xor
and
aam
in
add
cmpsl
les
ret
mov
cmp
aas
lods
xlat
enter
clts
pop
shlb
push
lods
arpl
sbb
mov
mov
loop
movsl
xchg
jmp
xchg
mov
xchg
lods
lock
jl
xor
adc
or
aaa
push
sarl
std
jle
lcall
leave
pop
cld
and
and
call
inc
sub
adc
stos
jb
fdivp
and
adc
sbb
mov
push
aam
pop
adc
mov
push
xor
jmp
cmpsb
in
xchg
movsb
out
shl
and
pop
push
mov
lahf
pop
mov
shl
push
dec
adc
lods
jno
sbb
mov
mov
popf
mov
ficomps
inc
cwtl
push
or
mov
push
orl
jle
mov
imul
mov
push
stos
mov
ss
lret
mov
lds
ret
xchg
sahf
ret
mov
in
stos
je
mov
enter
push
mov
or
sub
orl
mov
stos
icebp
xchg
mov
and
rcl
push
xchg
movsl
andb
repz
scas
test
std
lret
lods
movsl
mov
push
lods
add
or
lods
ret
sub
pop
inc
xchg
lcall
mov
add
adc
cmc
mov
push
aaa
jo
jae
std
popf
or
psrad
dec
mov
mov
rcr
push
imul
push
xchg
and
sbb
out
pop
pop
jb
in
sbb
insl
fcmovnu
jbe
lds
sahf
xchg
cmp
xor
mov
test
push
fnstcw
push
inc
mov
loopne
add
mov
movsl
jbe,pn
in
das
and
and
push
das
bound
cwtl
mov
xchg
mov
mov
hlt
lods
jbe
cmp
jg
les
nop
mov
lods
cmpsl
jl
sbb
add
mov
adc
adc
rcrb
adc
rcl
rcr
gs
leave
inc
lods
mov
fists
xchg
fdivp
lret
imul
ret
in
cld
stos
dec
test
or
test
xacquire
or
sbb
adc
mov
shlb
rolb
pop
hlt
mov
scas
lock
lcall
or
mov
cmpsl
inc
xor
add
dec
push
loopne
imul
mov
enter
iret
rcll
shl
faddl
add
into
test
int
sbb
js
xor
lcall
test
test
or
add
lods
xchg
lods
fcoms
mov
fadds
fisubs
jecxz
adc
addb
mov
scas
cmpsl
push
add
sarb
pop
pushf
and
pop
cwtl
add
mov
scas
subb
int
adc
or
fsubrs
dec
push
imul
out
mov
sub
inc
fwait
cmp
loop
xchg
mov
movsb
push
inc
shl
add
push
sarb
xor
mov
sarb
cwtl
sarl
cmp
fcmovnbe
nop
into
add
mov
pop
or
pop
xchg
shll
mov
fmuls
push
fstpt
or
push
sbb
jg
add
inc
add
cmp
cmc
int3
loope
inc
dec
stos
inc
push
cli
and
or
out
cs
add
sbb
into
stos
loopne
or
sti
sbbl
out
mov
nop
inc
xor
add
fistpll
jb
and
fimull
sbb
xchg
and
lcall
lock
in
mov
mov
pop
sbb
mov
inc
adc
pop
cmc
lea
jle
cmp
ret
push
lods
mov
sub
lret
and
mov
xchg
add
inc
pop
cmp
mov
jbe
mov
add
jmp
sbb
inc
inc
jmp
and
xor
ret
sbb
or
and
xchg
and
outsl
sub
cmpsl
std
add
repz
xlat
inc
jg
hlt
scas
in
loop
bound
pop
call
enter
icebp
test
outsl
les
loop
shll
xor
inc
adc
dec
jmp
repz
scas
frstor
mov
ret
xchg
cmp
mov
push
pop
xchg
dec
jl
data16
aam
icebp
mov
repnz
mov
lahf
inc
add
sbb
bound
jge
inc
inc
js
fists
add
test
imul
leave
lods
cmp
xlat
repnz
jle
rol
sbb
cmp
repnz
rorl
test
cwtl
xchg
mov
jmp
cmp
adc
jnp
out
enter
shrb
repnz
insl
lcall
add
sti
rorl
fdivr
test
pushf
mov
in
test
dec
add
pop
inc
adcl
notb
mov
cwtl
mov
inc
nop
add
pop
xchg
test
popa
mov
in
mov
push
sub
movsb
cwtl
ljmp
test
sub
movsb
or
or
andl
mov
ret
fsubl
mov
adc
jne
mov
into
test
or
testb
xorb
inc
popf
add
cmpsl
shl
jge
test
xchg
lcall
and
jb
xchg
adc
lahf
orl
xor
movsb
dec
pop
mov
or
sbb
js
test
lea
cmpsl
cltd
push
sub
push
stos
add
leave
mov
add
inc
loop
inc
aam
push
shrl
fisttps
ret
jbe
jnp
es
stc
rcl
pushf
mov
mov
hlt
mov
lret
and
mov
ds
in
rolb
rcrl
jge
nop
mov
test
or
loop
ret
imul
shl
pusha
fs
jns
outsl
loop
int3
lods
cmp
add
dec
xor
repz
call
frstor
push
jge
jns
fs
push
xor
ja
subl
hlt
test
js
inc
push
push
nop
mov
adc
fwait
dec
mov
mov
nop
add
addl
push
daa
cs
cwtl
int3
jmp
decl
adcb
mov
gs
out
inc
movsb
mov
movsl
mov
insb
aad
insb
cmp
scas
ret
sub
push
and
xchg
loopne
frstor
push
mov
jo
mov
mov
hlt
test
adc
inc
addl
int3
jp
add
xlat
sbb
mov
jae
jne
lds
icebp
mov
inc
cwtl
aad
leave
xchg
ljmp
adc
mov
push
push
stos
sbb
nop
rclb
test
mov
test
fmul
js
mov
xlat
hlt
xchg
cmp
pop
and
cmpsb
lods
jnp
movsb
nop
fmul
rcll
sub
sbb
std
loopne
popl
arpl
mov
xchg
xor
das
shll
push
and
flds
add
xor
iret
popl
imul
cmova
ret
sub
adc
cmc
mov
lods
push
dec
jb
xchg
xorl
cmpsb
xchg
mov
adc
imul
rorl
std
mov
leave
insb
lahf
xchg
sahf
rclb
jne
mov
and
add
mov
hlt
push
enter
xchg
loopne
push
and
out
movsb
mov
mov
sbb
stos
rolb
and
leave
mov
jp,pn
imul
dec
pop
xchg
mov
arpl
loopne
imul
xchg
pop
mov
int
xchg
hlt
push
testl
stos
cld
dec
cld
push
ficoml
ret
and
xchg
push
fwait
mov
cltd
pop
xlat
lods
xchg
pop
aas
adc
mov
shrb
shl
sub
mov
mov
in
popa
mov
inc
cli
and
mov
out
das
in
push
nop
enter
fmulp
repnz
arpl
mov
loopne
adc
dec
adc
scas
imul
cmc
xchg
xlat
jmp
loopne
mov
mov
das
fadd
xchg
rorl
rorb
frstor
movsl
xchg
ret
clc
test
lods
sarl
dec
stos
inc
xchg
hlt
xchg
inc
cmp
in
dec
pop
dec
clc
popa
clc
call
andb
or
cmp
xchg
inc
xchg
enter
adc
sbb
ds
les
add
or
xor
call
mov
push
xchg
stc
mov
or
xor
add
test
sub
addr16
ljmp
stos
std
add
mov
sbb
xchg
fadds
cmp
roll
mov
xchg
adc
aad
repnz
mov
sub
mov
mov
shlb
in
aad
clc
ret
rcll
pop
sbb
jg
push
or
call
mov
nop
mov
cwtl
jge
adc
xlat
cmpsb
stos
cmp
loopne
sbb
int3
adc
dec
mov
sbb
in
enter
and
mov
mov
mov
jp
movb
cltd
push
dec
loopne
fcom
sbb
addl
test
test
js
rolb
ret
filds
addb
xchg
pushf
aas
lahf
fnsave
mov
jne
mov
call
inc
out
sub
jge
fwait
sahf
add
ja
xchg
out
sub
shrb
or
push
xchg
xor
lret
mov
cmpl
mov
lods
xchg
sbb
stc
test
cmp
or
movsl
and
orl
mov
jp
dec
mov
adc
jge
mov
dec
mov
mov
mov
lahf
pop
pop
mov
mov
js
push
les
xchg
sbb
into
add
or
nop
mov
fnop
xlat
pop
jbe
jmp
inc
xchg
adc
jle
or
mov
adc
fcmovb
push
sbb
xchg
dec
xor
fs
xchg
les
xchg
inc
nop
mov
sbb
jbe
cltd
mov
push
scas
rcrb
nop
mov
or
cmp
mov
mov
xchg
repnz
adc
repz
stc
mov
rcrl
dec
push
inc
xchg
mov
call
pusha
xchg
xlat
push
inc
mull
xchg
inc
out
enter
adc
clc
popa
je
lods
sub
imul
xchg
jns
xrelease
pop
cmpsl
adc
sbbl
mov
rolb
dec
andb
sub
mov
mov
nop
in
mov
push
sbb
mov
es
and
or
fisubl
push
hlt
lret
or
call
mov
ja
aam
cmpsb
mov
push
cmpsl
add
arpl
repnz
lret
mov
bound
fdivl
out
call
mov
dec
aaa
adc
add
xor
push
xlat
mov
adcl
cwtl
fs
sub
cmp
mov
nop
sti
dec
pushf
bound
arpl
push
inc
sbb
rcl
cmpsl
lds
dec
bound
bound
push
ret
stos
in
repnz
xchg
adc
xchg
int
push
test
sti
mov
mov
icebp
pop
fwait
xchg
stc
mov
or
pop
push
bound
iret
fcmovbe
lds
sbb
test
mov
js
iret
inc
xchg
or
rol
sbb
dec
loopne
js
test
lret
cmpsb
mov
inc
mov
lcall
dec
jmp
fadd
test
lods
xchg
mov
stos
les
shl
sub
or
hlt
loopne
add
nop
scas
imul
jb
ror
mov
inc
loope
lret
pop
jns
or
jae
jg
cld
hlt
mov
lods
sub
pop
mov
popl
loopne
lret
cmp
fs
mov
sbb
loop
orb
lret
mov
popl
rcrb
cmpsl
std
dec
lret
pop
xchg
inc
jo
sub
sbb
mov
mov
or
lods
nop
pushf
cmp
jmp
movsb
lods
shll
mov
cltd
xlat
mov
shrb
rclb
mov
mov
sbbb
shr
out
stc
rorb
mov
mov
add
cmp
mov
fadd
pop
les
or
roll
ret
test
dec
push
imul
mov
push
xchg
fisttps
nop
outsb
push
mov
into
push
xchg
fcomip
mov
mov
adc
movsl
or
sub
orl
mov
mov
and
mov
cmp
ret
and
jo
dec
shlb
inc
out
jb
arpl
enter
inc
cmp
cltd
clc
movsb
int3
pop
mov
jnp
ret
rolb
mov
lahf
adc
bound
xchg
rol
mov
push
lods
leave
mov
jnp
mov
lds
jns
sahf
lea
pop
adcb
addb
lret
js
jns
or
cld
push
xchg
imul
test
test
insb
cmp
xchg
out
mov
pop
test
fisubrs
repnz
and
aas
adc
jmp
xchg
mov
sbb
out
inc
test
stos
mov
in
pop
stos
test
aad
call
sbbl
into
mov
or
jo
mov
pop
cmpsl
hlt
lahf
sti
jecxz
pushf
xchg
into
mov
ljmp
cs
in
sub
movsb
mov
sarb
mov
xchg
or
cmp
out
xchg
shlb
jno
mov
cmc
xchg
in
jmp
sahf
les
test
sbbl
xchg
xchg
mov
les
mov
test
add
mov
fmuls
subb
mov
aam
xchg
mov
mov
test
mov
int3
out
sub
xor
mov
cmpsl
icebp
xchg
mov
inc
ret
push
mov
sub
xchg
enter
ret
mov
dec
add
fldl
in
in
and
rcrb
fimuls
fistl
leave
in
enter
mov
shr
testb
shrl
rcrb
scas
call
loope
sub
jg
mov
xchg
sbb
or
dec
mov
add
push
lods
add
fsts
mov
xor
mov
pop
sub
push
rorl
outsb
leave
pushl
ficoml
les
xor
fnstcw
or
imul
or
aam
or
mov
test
jg
fcoms
xchg
push
nop
pop
sbb
pushf
mov
xor
and
movsl
popa
fiadds
popa
and
mov
cltd
ss
lahf
sub
outsb
mov
mov
ja
popa
test
jo
adc
xchg
xchg
mov
adc
in
inc
ret
les
loopne
jl
enter
cmp
inc
push
test
pop
sub
adc
push
js
add
mov
or
cmpb
mov
xchg
ds
lahf
mov
insl
mov
or
fmul
int3
fisttps
dec
mov
inc
inc
mov
stc
xchg
push
mov
outsl
in
mov
push
mov
ljmp
aas
mov
ret
ret
xor
call
xchg
loopne
or
loopne
nop
les
jbe
orl
stos
add
ret
or
movsl
and
into
pushf
dec
jmp
test
imul
pop
and
lret
sahf
bound
das
mov
adc
inc
and
xchg
dec
hlt
int
test
add
imul
sub
mov
leave
loope
mov
fmull
notb
ret
stos
stos
mov
aam
test
les
add
mov
in
mov
xlat
enter
int3
test
dec
lods
inc
testb
std
icebp
xchg
inc
jo,pt
test
xchg
mov
mov
ja
jl
test
imul
pushf
cmp
xchg
fnstsw
push
inc
imul
xor
adc
mov
fcoms
push
push
sbb
mov
push
icebp
mov
adc
aaa
hlt
sahf
jbe
sbb
and
mov
add
lret
fdivrs
or
add
movsl
enter
adc
pusha
aam
stc
mov
stos
mov
mov
mov
add
outsb
sbb
xor
inc
fdivl
and
mov
cltd
call
loopne
pop
mov
jnp
pop
lea
mov
nop
xchg
push
ja
dec
test
pop
mov
in
or
dec
mov
lcall
aaa
cwtl
mov
sub
dec
stos
and
add
mov
shr
jno
rclb
in
int3
add
repz
out
mov
push
xor
jnp
enter
lock
sar
shlb
dec
sbb
jnp
enter
out
mov
mov
mov
xchg
enter
mov
shl
nop
int3
fdivrl
fidivl
mov
xor
inc
in
clc
ret
ja
push
push
adc
rcl
fmull
bound
xlat
lods
orb
cmpb
xchg
out
ss
dec
cmp
icebp
sub
call
shll
inc
int
push
ror
hlt
leave
bound
int
mov
or
imul
aad
push
add
or
iret
adc
mov
shlb
adc
or
int3
int3
rorb
or
cwtl
add
fstpt
and
jbe
jo
or
insb
or
rcl
les
rorl
lock
xchg
test
outsl
mov
leave
rcr
mov
dec
aad
or
js
dec
adc
xor
xchg
mov
cltd
enter
sbb
or
xchg
es
push
sub
push
rorb
call
pushf
or
adc
or
mov
xchg
test
xchg
cmp
out
in
lret
sbb
pop
push
add
push
adc
nop
ds
push
adcl
mov
mov
mov
pushf
test
mov
lods
lds
mov
sbb
sbb
orl
or
inc
cli
mov
add
and
nop
mov
paddq
cltd
adc
pop
enter
adc
and
or
adc
or
cmc
adc
adc
mov
cmp
mov
popa
and
adc
pushf
mov
add
xchg
or
or
sbb
in
into
jnp
cmp
or
rorb
mov
adc
les
push
loopne
int3
lock
loopne
adc
dec
push
lahf
js
ret
or
fdivrs
cmpsb
mov
jb
mov
das
loopne
hlt
jmp
stos
inc
cld
popf
xchg
or
cmp
mov
or
es
xchg
add
cmp
repz
cmp
rolb
lock
cld
sarb
and
rcr
int
cwtl
cmp
mov
cmp
fcmovu
adc
das
dec
inc
adc
ret
cmp
cwtl
xlat
aam
inc
sub
mov
push
rorl
sub
rolb
cli
cmpsb
pop
in
mov
xor
outsl
call
xchg
out
movsb
sbb
xchg
sbb
mov
enter
inc
adc
adc
mov
mov
push
or
xchg
dec
movsb
outsb
les
into
mov
or
mov
andb
sbb
push
filds
lcall
jl
sub
and
mov
adc
xor
xor
lock
xchg
mov
fwait
ror
addr16
mov
lods
push
pushf
add
mov
or
add
fsubp
cld
mov
lahf
xchg
mov
nop
push
flds
or
or
adc
cmp
lret
jg
xor
rcll
in
test
call
mov
roll
fistps
add
loopne
or
in
inc
mov
mov
bound
je
int
mov
dec
in
clc
call
lods
mov
rclb
pop
cs
imul
sub
and
sbb
lods
dec
push
nop
push
xchg
adc
push
and
xchg
movsb
outsb
repnz
fldenv
or
or
ljmp
push
int
push
mov
nop
add
or
xchg
mov
pusha
ret
sbb
shlb
adc
popa
nop
sbb
push
inc
inc
push
add
xchg
jne
mov
pushf
adc
mov
inc
nop
dec
cmp
mov
js
mov
test
mov
cmp
dec
into
mov
add
xchg
xchg
dec
rcrb
xchg
incb
cmpsb
sarb
loopne
popl
lea
int
jmp
in
sub
test
mov
sub
or
lds
mov
xchg
or
add
push
inc
rcll
xchg
push
ret
fs
mov
xchg
nop
xchg
test
xchg
rol
xchg
adc
cmpb
xlat
rorb
call
outsl
mov
jno
adc
add
movsl
decb
xchg
jg
pop
iret
lahf
adc
lret
xlat
or
rcrb
shrl
cmpsb
sub
lds
fldt
mov
idivb
movsb
xor
out
mov
sbb
pop
rclb
sbb
xchg
dec
jle
mov
call
repz
push
pop
clc
gs
lahf
sbbl
pop
jae
fs
leave
lret
test
xchg
mov
pop
jmp
push
test
jp
aas
pushf
stos
inc
mov
cmpsl
xor
cmp
shlb
cwtl
sbb
fsts
dec
lahf
push
or
xchg
sub
lock
shlb
js
add
sub
sub
push
cmp
push
dec
cwtl
cmpl
jb
jnp
in
or
push
shlb
test
ss
push
xor
mov
push
ret
cmp
shl
inc
xchg
sub
mov
jle
jb
cmp
fimull
rolb
xor
nop
mov
stc
insl
mov
leave
and
cmp
mov
jmp
mov
push
mov
sbb
nop
sub
jnp
and
dec
sbb
test
lret
and
cmpsl
data16
imul
and
lcall
mov
loopne
orb
fmull
dec
xchg
les
push
xchg
iret
test
xor
ds
shl
cmp
ljmp
mov
push
cmc
cs
aaa
sbb
js
test
ret
add
adc
div
mov
hlt
cli
mov
mov
sti
lods
push
pop
fisttpll
fwait
jnp
pop
jg
lret
push
or
into
lods
and
lret
push
sbb
sub
add
xchg
pushf
fidivrl
dec
bound
xor
aas
inc
and
pop
jnp
push
stos
into
ss
ficompl
pusha
mov
movsb
xchg
fisttps
mov
dec
sarb
jmp
pop
mov
loop
lods
mov
test
out
idivb
lret
and
add
xchg
or
mov
int3
cwtl
ja
cmpsb
pop
add
lods
mov
je
mov
test
mov
or
arpl
lods
les
or
shl
stos
insb
and
mov
lods
les
arpl
sbb
movb
stos
test
scas
shlb
xchg
enter
push
add
fwait
cli
xor
shrb
push
cmp
cmpsl
dec
inc
fsubrs
pushf
or
cmp
std
and
mov
xchg
adc
enter
mov
lock
loopne
pushf
sub
push
jmp
jmp
scas
rcl
mov
add
out
hlt
testb
xchg
nop
push
mov
jae
xrelease
call
enter
push
mov
push
mov
cli
jmp
jnp
lret
lods
dec
mov
adc
mov
test
mov
dec
inc
incl
push
push
js
push
aas
lea
mov
bnd
es
stc
test
push
or
fistpl
fldl2e
push
pop
shr
sub
lret
sub
xchg
adc
xlat
jo
filds
movsb
pop
test
pop
aad
jge
test
ror
xchg
dec
aam
mov
mov
mov
jmp
sub
inc
test
loopne
sub
adc
add
popf
xchg
mov
popl
pop
push
push
cwtl
je
divl
add
jle
cmpb
aam
lahf
xor
cmp
int
push
add
stos
leave
ss
gs
dec
cmpb
adcb
push
xchg
mov
sbb
loopne
orb
gs
cwtl
or
xchg
imul
sbb
mov
sbb
lea
or
imul
or
roll
mov
das
sahf
cld
nop
inc
rorb
fidivrs
cmpsl
cwtl
adc
aas
in
fs
and
push
mov
test
xchg
movsb
andl
xchg
cmp
xor
pop
outsl
dec
imul
pushf
orl
xchg
xor
xchg
fucomi
movsl
inc
sti
inc
ljmp
clc
xor
sub
jmp
cmpb
test
pop
pusha
xlat
call
lret
scas
in
and
ret
mov
dec
xchg
shrb
mov
pushf
mov
hlt
test
mov
xchg
into
or
ja
add
dec
ret
sub
mov
pushf
sub
jl
stc
pop
lret
xchg
std
ret
lock
dec
lods
pop
test
dec
jo
adc
lods
stos
mov
sahf
xor
xor
xor
dec
push
cmpsb
ret
dec
fcmovbe
cmpsl
xor
xlat
sbb
stc
pusha
mov
mov
mov
cmp
lods
inc
out
rorl
ds
ret
mov
pushf
adc
xchg
movsb
ljmp
aad
push
mov
shlb
push
sbb
jbe
push
ss
movsb
mov
lahf
int3
pop
lahf
test
cmp
dec
adc
lods
int3
imull
andl
iret
aam
jo
mov
mov
test
add
cmpsb
add
mov
sahf
jp
lods
out
mov
bnd
xchg
ljmp
loop
testl
add
or
mov
xlat
loopne
push
cmpsl
adc
jecxz
push
inc
jnp
inc
sub
fsubrl
fbld
cltd
addl
ret
mov
xor
imul
test
mov
xchg
les
imul
in
sub
add
ret
jns
cmp
rcrb
stos
dec
mov
xchg
ret
mov
imul
inc
popf
mov
cmp
out
cltd
scas
pusha
icebp
mov
cld
xchg
xorb
test
or
nop
mov
cwtl
mov
cmp
test
cmp
outsb
ret
scas
rolb
into
xchg
mov
jb
mov
rorl
and
xchg
push
xlat
dec
outsb
push
pop
xchg
xchg
mov
imul
rcrb
scas
pop
jl
leave
addr16
adc
xchg
xchg
and
rorb
rorl
xor
pushf
push
aam
fwait
dec
ret
es
test
adc
sbb
hlt
lret
inc
setge
lret
add
cltd
addr16
clc
cmpxchg
clc
mov
rcrb
adc
push
lret
cmc
test
push
ret
push
ret
adc
hlt
cltd
mov
cmp
xlat
andl
int3
ret
mov
and
mov
out
xchg
add
and
aas
jecxz
pop
loope
rcll
adc
inc
stc
push
xor
push
scas
and
adc
nop
pop
call
mov
mov
rcrb
repnz
pop
insb
cmp
mov
in
mov
xchg
test
out
lods
mov
enter
nop
orl
mov
ds
les
add
les
inc
xchg
imul
push
jo
sbb
push
cmpsl
inc
clc
push
push
pop
push
loope
mov
loopne
cltd
xchg
ficoms
lret
xchg
sbb
ffree
dec
js
jb
outsl
scas
popa
js
sbb
imul
fadds
insl
adc
rcr
mov
cmp
in
add
insb
sub
nop
adc
cs
sub
or
mov
dec
xchg
push
es
pushf
push
xor
mov
cltd
push
and
out
rcl
xchg
rorb
inc
xor
iret
sbb
sub
stos
cmp
xchg
sahf
cltd
sbb
nop
adc
cmpsl
adc
mov
cwtl
ficoml
sbb
sbbb
and
inc
inc
mov
cmp
test
ret
sbb
jo
sub
mov
test
dec
test
inc
push
jo
rorb
inc
in
mov
jb
lret
xchg
jmp
inc
pop
fildl
dec
xor
inc
push
cmc
mov
testl
jl
cmpsl
icebp
shlb
andl
push
repnz
cs
jnp
loope
xchg
popl
rcll
popa
adc
mov
imul
mov
xchg
mov
xor
int3
mov
andl
xchg
fwait
pushf
mov
inc
or
mov
test
stos
addr16
test
fcmovnbe
mov
test
test
sub
sub
or
into
iret
xor
int
mov
out
fwait
push
lds
xor
cltd
pop
in
scas
nop
jo
push
mov
mov
fadd
cmc
or
xchg
inc
fbld
jmp
cmp
and
mov
add
mov
xor
mov
jl
xor
sub
rorl
out
add
mov
mov
rolb
dec
fisttpll
mov
shrl
inc
dec
mov
xchg
pop
mov
hlt
and
aam
mov
inc
out
push
jae
fidivs
inc
cwtl
add
sarb
inc
int3
add
fsin
addr16
sti
fcoms
std
add
shll
pop
test
xlat
mov
shlb
and
hlt
fs
pushl
subl
mov
fwait
push
adc
bound
inc
mov
lcall
and
sarb
test
subb
and
xchg
push
push
lds
nop
add
cmc
xchg
or
in
sbb
sbb
call
addl
fcoms
ret
and
mov
jne
xchg
fs
xor
add
test
mov
add
enter
add
lods
add
push
mov
mov
pushf
subb
out
loop
sarb
jo
xor
xchg
int
mov
loopne
iret
lock
xchg
stos
pushf
add
mov
das
cltd
test
mov
inc
xchg
jp
cmp
cltd
fdiv
jmp
nop
add
jne
xchg
inc
imul
push
stos
fcmovnb
mov
lret
vcmpsd
adc
add
mov
adc
pop
iret
mov
lret
mov
xchg
xor
lret
sub
sub
pop
ficompl
subb
and
push
scas
jae
in
cmpl
ljmp
or
mov
ljmp
mov
dec
cmpsl
add
add
cmp
aam
or
pushf
mov
dec
mov
lds
ljmp
cmp
loope
aas
mov
call
or
and
ret
fldl
mov
cmc
add
push
or
lret
imul
test
xor
push
add
enter
pop
dec
add
aad
xchg
or
xchg
sbb
outsb
cmp
in
lods
add
movl
pop
stos
push
lret
lcall
pop
nop
aam
shl
jno
je
lds
xchg
xorb
jb
xor
add
in
ljmp
mov
mov
lahf
daa
sub
les
adcb
movb
or
fmull
repz
imul
mov
lock
lock
xor
sbb
xor
cmp
test
mov
lds
nop
or
mov
push
enter
fstl
inc
and
dec
test
fcoms
shrl
popf
fcom
shll
cwtl
cmc
shrb
test
popf
scas
cmpsl
in
push
fs
out
adc
and
mov
mov
pop
popa
push
pop
xchg
test
lods
cmp
dec
sub
jmp
js
insl
imulb
mov
lods
pop
aad
nop
sahf
inc
clc
enter
jge
xchg
fistl
sti
adc
out
add
ss
mov
test
or
scas
repnz
insb
jmp
fcmovnbe
xchg
and
lret
test
popf
cmp
mov
mov
add
jmp
test
mov
add
push
mov
xlat
adc
cmpsl
cwtl
loope
add
iret
pop
pop
stos
dec
sbb
adc
jbe
test
xchg
jno
test
pushf
test
loopne
mov
and
xchg
push
hlt
mov
in
call
dec
fbld
jmp
push
inc
dec
aad
sub
jmp
loop
inc
or
inc
add
test
aam
daa
imul
iret
aam
inc
pop
mov
insb
outsl
sbb
repz
shl
enter
adc
daa
popf
xchg
push
mov
in
std
cmp
push
cmp
mov
xor
mov
inc
xor
mov
adc
jl
xor
xchg
scas
xchg
mov
inc
ret
pushf
jbe
nop
nop
sarb
sub
imul
mov
arpl
sub
shll
or
or
add
ljmp
xchg
mov
mov
mov
sub
mov
pop
outsb
test
or
jae
push
mov
sbb
adc
frstor
or
add
lods
add
mov
adc
roll
cmp
pop
test
jns
and
lods
mov
mov
xchg
add
fs
push
rolb
movhps
movsb
push
adc
sub
cmp
mov
out
mov
dec
mov
mov
adc
or
dec
scas
mov
rolb
sub
mov
jne
jp
in
mov
lock
in
adc
stos
leave
cwtl
clc
add
pushf
mov
out
or
fildl
dec
pop
pop
inc
ret
mov
xchg
mov
cmc
mov
stc
hlt
fsubl
push
pop
mov
mov
movsl
into
shr
mov
iret
xor
sar
xchg
add
xchg
out
dec
adc
add
mov
push
jle
mov
hlt
xchg
dec
push
shrb
call
shll
aas
cmp
jecxz
nop
adc
adc
cwtl
mov
mov
push
pusha
into
lods
adc
rcrb
sbb
into
mov
data16
mov
mov
push
les
xchg
scas
movsb
mov
jb
jmp
xchg
hlt
jbe
and
rorl
xchg
hlt
stos
imul
test
call
in
test
flds
lods
scas
lret
int3
or
cmp
or
lret
aas
mov
pop
loope
aas
call
in
mov
leave
incb
xchg
mov
lret
pop
in
adc
mov
call
dec
mov
gs
adc
push
and
fistl
sub
pushf
adc
or
mov
push
xlat
jno
hlt
cltd
sarb
xchg
enter
clc
test
mov
sub
lock
mov
xchg
pop
or
inc
inc
mov
add
fmul
add
fbld
dec
mov
add
decb
or
xchg
sub
mov
push
mov
inc
mov
add
xor
lock
mov
aam
fmuls
fdivl
in
in
mov
test
imul
xor
push
xchg
and
jno
loope
or
out
ret
test
cmpsb
fsubl
repnz
inc
xor
jg
mov
and
insb
jmp
sub
shll
out
iret
nop
mov
xlat
mov
push
sbb
xchg
jge
add
and
or
in
mov
mov
mov
in
inc
push
shrb
orl
jle
inc
and
ret
inc
push
pop
xor
mov
cmpsb
cli
or
or
ret
push
ret
mov
icebp
lods
or
cmp
cmp
cmp
lods
hlt
mov
sbbb
xor
ljmp
test
mov
sbb
xchg
and
int
in
cli
inc
mov
xchg
js
xor
ret
fisttpl
jno
gs
stos
test
mov
fidivrl
mov
lcall
push
pop
ljmp
fcom
jo
mov
and
fimull
mov
shrb
loopne
jp
or
mov
add
mov
mov
inc
sbb
scas
mov
mov
jne
and
rorb
xor
jle
ret
incb
insb
nop
iret
lock
dec
leave
aaa
and
loop
jbe
mov
xchg
dec
insl
test
jmp
les
lods
jmp
mov
sbb
scas
jp
adcb
xchg
pop
mov
mov
les
cltd
popf
mov
xchg
push
inc
pop
or
push
ss
mov
shlb
mov
mov
mov
call
or
ffreep
xor
lods
mov
lods
ret
xchg
jne
adc
rorl
pop
mov
in
jg
enter
cmp
xchg
das
icebp
inc
fisubrs
inc
mov
mov
mov
sbb
push
ficomps
push
mov
dec
xchg
mov
scas
inc
push
dec
sbb
and
jns
mov
sti
inc
and
fisubs
cmp
mov
mov
mov
les
test
and
mov
push
mov
adcl
add
xor
add
popf
xchg
add
imul
xchg
pop
les
std
ja
cmp
int3
push
and
fdivs
pop
pop
xor
stos
mov
les
adc
cmc
adc
jmp
mov
or
fdivr
lcall
jp
sbb
test
xor
or
cld
aad
aas
push
aam
cmp
push
test
test
popa
hlt
push
movsl
xor
ret
clc
inc
pop
xor
xchg
sbb
popl
decb
inc
sti
mov
xchg
pop
mov
pop
test
mov
cmp
nop
mov
es
mov
sahf
rcrl
leave
lea
jno
sub
rolb
adc
pop
jb
xchg
push
cmp
mov
mov
iret
nop
adc
call
andb
xchg
into
or
adc
lret
shrb
xchg
outsl
stos
movsb
shl
stos
pop
sbb
movsb
fwait
sbb
push
rcll
jp
rol
enter
and
jo
repz
jle
movsb
stos
push
in
das
pop
out
lds
lar
sub
or
inc
sbb
daa
out
xchg
or
shrb
lea
push
pop
cli
dec
mov
je
imul
insb
cmp
sbb
inc
jb
inc
mov
mov
jo
lea
stos
icebp
or
xchg
sub
enter
mov
out
push
or
insb
test
mov
in
scas
add
pop
pop
loope
or
ret
cmp
or
cmpsl
enter
pop
jmp
data16
icebp
enter
mov
mov
jecxz
mov
push
xchg
nop
fdivs
in
mov
test
mov
mov
or
jno
mov
cmc
xlat
cltd
fldcw
xchg
or
popf
push
movsb
aad
in
sbb
jg
mov
je
or
lret
sbb
and
sub
inc
xor
ficomps
push
xor
mov
push
xchg
movsb
jne
xchg
adc
mov
or
push
movsb
imul
xchg
movsl
mov
or
rorb
jp
loop
fnsave
lods
lret
mov
inc
inc
nop
push
daa
enter
pop
xchg
dec
nop
mov
dec
cld
push
and
dec
sbb
adc
xchg
js
mov
pop
xor
push
iret
enter
cmp
lods
sbb
push
fs
cld
adc
push
add
xor
test
test
push
rolb
mov
sbb
enter
nop
inc
or
es
shrl
imulb
sbb
cmpsl
out
daa
mov
inc
cld
loop
and
arpl
pop
xchg
lock
mov
ret
sub
add
jae
add
pop
test
adc
inc
inc
or
mov
mov
push
imul
stos
xchg
scas
and
psubb
xor
xor
ds
and
xchg
addl
xchg
cmpsb
mov
lds
cmp
or
inc
sar
inc
aam
gs
shrb
add
jb
or
in
cmpsl
lcall
adc
mov
mov
negb
ljmp
js
jno
push
pop
idivl
pop
and
push
iret
das
test
push
xor
push
xor
and
xchg
pushf
addb
or
cmpsb
mov
in
cmpsl
cmp
sbb
xchg
sbb
cmp
push
pop
mov
sub
add
subl
push
cs
gs
scas
dec
insb
or
ljmp
aas
repnz
push
push
or
loopne
jmp
sbb
sti
into
es
cmpsl
test
leave
push
je
rcll
pusha
mov
out
sahf
xor
loopne
push
mov
jl
or
inc
push
adc
out
mov
roll
cmp
fsubp
mov
nop
adc
pop
adc
xor
rclb
jp
pop
fs
ficoml
adc
mov
add
fbld
enter
cmpsl
jp
sub
xor
clc
xor
inc
jmp
cs
jp
jle
jle
inc
add
xor
mov
int3
xchg
adc
xchg
aaa
lret
mov
push
test
jge
mov
xor
sarb
sub
jns
xor
test
addr16
imul
push
repz
icebp
enter
mov
mov
adc
mov
xchg
in
cmp
in
push
xchg
mov
movsl
divb
imul
adc
lock
pop
dec
add
or
push
sbb
hlt
push
mov
out
mov
sbb
std
out
call
pop
ja
push
lock
clc
mov
call
pop
stos
inc
mov
pop
push
lods
push
clc
stc
mov
inc
mov
scas
jo
out
dec
cld
cwtl
incl
mov
pop
cld
lock
clc
out
mov
pushf
fistl
mov
fs
fildl
pop
dec
jl
push
fwait
cwtl
dec
xchg
or
fcmove
fwait
ret
out
jle
and
call
or
jo
fwait
cld
call
aad
and
iret
push
sub
sbb
xor
loopne
add
in
inc
inc
mov
mov
inc
cli
xlat
push
test
mov
fs
push
xchg
fnstcw
out
pop
ja
fildl
inc
rorl
enter
mov
xorl
nop
imul
mov
fsubp
ljmp
mov
sbb
call
xor
lock
incl
out
xchg
mov
jg
enter
jno
das
lods
imul
jnp
ror
cltd
mov
mov
dec
fisubrs
test
fcoms
and
dec
xchg
lds
pop
cmpl
or
cld
imul
shlb
hlt
mov
test
push
mov
arpl
jne
imul
dec
lods
fisubl
dec
out
aam
int3
xor
rolb
call
mov
and
iret
lds
jb
lcall
repz
push
sbbl
jbe
test
sbb
lods
aas
inc
adc
and
fsub
ja
add
cmp
mov
outsb
sarb
cmp
pop
and
mov
push
in
insl
mov
jbe
inc
lds
mov
sub
jmp
std
lds
add
enter
lods
sub
inc
mov
push
gs
je
mov
mov
mov
lods
pushf
pop
xchg
or
aam
les
mov
adc
add
fisubl
push
int3
adc
aas
lret
mov
aad
cmp
aad
clc
sarl
repz
fiaddl
scas
cmp
jecxz
xchg
ret
int3
sbb
push
fstpt
and
add
fldt
mov
cmpl
push
popa
jg
mov
incl
mov
cmp
hlt
pop
les
in
iret
orl
cmpsb
fsubr
rcl
outsb
push
ret
shll
aas
sets
or
or
xchg
enter
jg
mov
notl
hlt
jecxz
mov
out
scas
or
jle
insb
push
scas
lock
push
aam
fs
nop
push
rorb
cmpsb
push
cmp
inc
mov
cmp
push
and
mov
lods
cwtl
imul
mov
xchg
lret
sub
or
push
rolb
adc
push
adc
shrb
mov
mov
lock
dec
cmpsb
mov
mov
inc
mov
dec
sarl
scas
sbb
and
leave
jle
mov
mov
sahf
xchg
les
imul
sti
pop
int
pop
es
shll
call
iret
lods
ficoml
jnp
mov
jmp
ret
hlt
lret
dec
xor
mov
mov
mov
out
adc
add
mov
pop
icebp
jecxz
subl
test
int
sbb
add
and
jl
sbb
and
xchg
mov
mov
or
mov
movsl
push
xchg
into
lods
sub
in
ja
pop
or
or
sbb
ljmp
adc
std
mov
push
and
aas
inc
cmp
sbb
cld
cld
test
xchg
jg
fidivs
in
fisubrs
fcmovbe
mov
test
iret
test
xchg
mov
jae
mov
fwait
mov
xchg
or
adc
addb
js
into
out
in
mov
mov
xchg
aas
call
out
lret
rorl
inc
mov
and
xchg
fs
mov
lcall
loop
stos
mov
mov
mov
and
int
xchg
insb
scas
adc
or
rolb
shlb
lret
mov
xchg
xor
movsb
jns
add
outsl
adc
adc
jae
push
xchg
pop
mov
or
inc
adc
aaa
ret
or
rcrb
inc
int3
adc
jo
pop
sub
add
scas
jmp
cmpsl
adc
cmp
outsb
loop
push
pop
aam
sbb
movsb
pop
xor
cmpsl
shrb
adc
mov
lahf
xchg
es
mov
cmp
addr16
xor
inc
mov
mov
xlat
mov
pop
icebp
enter
xchg
push
jge
mov
inc
ss
cltd
imul
xlat
mov
adc
fsubs
cmpsl
scas
mov
mov
mov
mov
outsl
push
popa
inc
mov
push
sub
add
pop
lcall
xor
test
shlb
push
xchg
lods
mov
push
out
fidivrl
pop
pusha
adc
repz
push
push
sar
add
stc
mov
shl
push
sub
iret
sub
cmp
call
and
xchg
cli
test
push
mov
arpl
les
jl
sarb
or
or
test
ds
mov
xor
lds
std
outsl
lahf
dec
jl
fsubrl
jecxz
jno
jns
pop
icebp
push
inc
jecxz
cli
xchg
cmc
mov
sub
jp
add
cmc
jb
mov
push
pop
js
fmul
mov
pop
aad
scas
pop
pusha
inc
xchg
mov
cwtl
mov
adc
stos
lods
adc
push
lret
lahf
cmpsb
cmpsl
push
cmp
insb
add
push
ds
mov
mov
mov
aas
mov
xchg
xlat
decb
sub
jb
adc
enter
into
push
mov
shr
mov
or
js
cmp
push
enter
inc
mov
sub
add
orl
movsl
inc
stos
sub
or
sahf
xchg
pushf
aad
cmpsb
faddp
mov
fistps
dec
rorl
xlat
mov
test
mov
imul
xchg
mov
scas
add
out
test
xchg
add
stos
out
cwtl
mov
xchg
mov
out
or
mov
mov
or
test
add
pop
movsb
rcl
in
add
fildl
xchg
in
pop
je
dec
in
mov
or
push
pushf
addb
sub
push
mov
xchg
cmpsb
or
or
xor
jne
pop
imul
loopne
mov
fidivrl
fs
sbb
and
mov
lcall
repz
sub
push
scas
add
or
orps
pushl
mov
loope
inc
xchg
xchg
adc
xchg
shrb
add
xchg
inc
stos
stc
adc
dec
inc
xchg
rolb
cmpsb
add
lods
in
ja
cld
add
imul
clc
fcmovne
pop
dec
ret
popf
popa
adc
test
adc
jb
xchg
sub
push
mov
inc
les
sub
inc
enter
inc
cmc
xorl
scas
or
sbb
fsub
roll
movsl
xchg
push
jle
lock
or
or
enter
daa
jno
ret
pop
rcl
loope
clc
xor
mov
pop
cmp
js
jb
xchg
mov
rolb
les
loop
gs
mov
mov
mov
mov
in
pusha
xor
inc
mov
inc
mov
jmp
inc
inc
popa
nop
and
nop
data16
jp
add
shlb
xor
call
cltd
sbb
cmp
loopne
js
sti
sbb
xchg
cmpsl
cwtl
xor
movsl
fwait
scas
sbb
or
fimuls
push
xchg
jns
dec
lret
or
sbb
sbb
cmp
fs
dec
loop
cmpsb
enter
rclb
clc
ret
pop
mov
mov
cmpsb
in
xchg
mov
sub
adc
inc
in
inc
jo
pop
and
addl
mov
ds
movsb
sub
dec
mov
mov
sbb
cmp
inc
mov
or
jb
or
lcall
mov
add
inc
in
inc
clc
test
sub
lret
jo
jne
inc
xchg
aad
test
imul
add
in
sti
inc
movsb
sbb
les
movsl
cmp
push
aaa
push
lret
icebp
call
lods
add
and
out
andb
out
or
and
shll
add
roll
popl
test
call
fistl
push
sarl
test
xchg
lods
scas
xchg
add
pop
cmpb
inc
lock
addl
test
insl
mov
rol
pop
subb
or
push
divb
push
movsl
push
fsubrp
inc
sub
add
push
sbb
sbb
add
adc
mov
popa
mov
xchg
out
jmp
outsl
imul
lods
ret
cmpl
lods
pop
push
insl
adc
test
pusha
mov
rcl
xchg
push
sub
sbb
sbb
int
push
lahf
fdivrl
ror
mov
xchg
pop
mov
int3
cld
fistl
ljmp
push
xchg
push
jnp
xor
in
nop
xor
pushf
mov
lcall
xchg
or
daa
sbb
adc
or
mov
movb
insl
mov
pop
pop
test
add
cmpb
out
inc
addb
fisubrl
repnz
mov
call
dec
inc
xor
cmp
xchg
mov
aad
mov
rclb
movsl
xchg
in
jo
add
mov
sbb
aaa
or
xlat
xchg
icebp
movsl
fstl
clc
pop
inc
scas
dec
call
gs
mov
hlt
outsb
sbb
mov
loopne
inc
mov
inc
ficoms
mov
nop
nop
xchg
fidivl
xor
xor
add
mov
pushf
jns
cwtl
or
imul
xchg
push
sarb
xchg
add
cmpsb
mov
cmp
in
xchg
push
mov
mov
push
cmp
aam
mov
add
insb
adc
and
fsubrs
test
or
das
in
movsl
mov
push
cmpsl
sub
scas
mov
xchg
dec
sub
jmp
mov
push
inc
add
cmpsb
inc
mov
faddl
cmpsl
lock
shrb
push
adc
mov
xchg
in
add
or
int3
ss
mov
mov
in
mov
mov
cltd
les
enter
repnz
enter
mov
inc
sti
shrb
jae
xchg
cmp
adc
inc
mov
mov
lods
push
pushf
stos
jae
lret
inc
cmp
lret
sbb
xor
lock
mov
add
shlb
fwait
mov
aas
nop
fsin
lret
jle
and
in
jecxz
mov
hlt
js
push
pop
dec
push
mov
imul
mov
and
test
stc
mov
les
sbb
ja
add
es
mov
shlb
jge
pop
loopne
push
and
daa
mov
subl
lahf
xchg
xor
movsb
in
pushf
stos
inc
pop
dec
call
jno
push
rcl
js
fisttpll
jne
jmp
movsl
pushf
cmp
stos
jno
jge
lret
cmp
cmc
mov
jle
mov
inc
stos
inc
jno
push
dec
and
ljmp
inc
stos
inc
enter
repz
mov
add
jmp
mov
test
mov
dec
ror
jp
stos
in
dec
mov
test
dec
lods
stc
push
xchg
sahf
push
mov
aaa
mov
cmpsl
sarl
mov
jge
shl
dec
out
loope
imul
test
test
fcoms
aad
fwait
addl
loope
cmp
es
fucomi
add
mov
lods
ljmp
push
imul
dec
js
fmull
out
inc
xorb
jp
jns
xchg
adcl
xchg
dec
ja
xchg
pop
xchg
leave
pushf
mov
push
xchg
push
enter
rolb
lock
lds
push
cltd
fwait
cwtl
scas
dec
in
push
imul
jns
ret
mov
push
adc
cmp
mov
and
inc
ds
jns
and
dec
imul
out
aas
int3
faddp
dec
test
xchg
xchg
shl
xchg
xchg
or
xchg
out
cmp
mov
daa
insb
lods
lock
push
jp
push
lock
nopl
movsb
xor
dec
mov
xchg
jb
loop
push
fidivrl
sub
add
ja
pop
jmp
sub
or
mov
xchg
imul
jo
in
xchg
mov
test
xor
dec
add
jo
je
lods
add
fisubrs
mov
cmp
fisubrs
cmpsb
mov
cmpsb
imul
jo
subl
popa
and
cli
and
sub
fisubrl
ret
jl
stos
xchg
cmp
inc
sahf
inc
je
or
call
jo
mov
mov
add
xor
pusha
ljmp
or
lock
or
in
sarb
shlb
into
add
call
ljmp
je
int3
sbb
add
mov
or
pop
int3
mov
ret
mov
mov
dec
mov
pusha
pop
mov
pop
dec
or
push
rcrl
push
in
mov
mov
sbb
mov
push
arpl
repnz
sbb
mov
push
bound
js
jl
sar
sbb
dec
arpl
jl
aaa
mov
les
ja
insb
lret
sbb
stos
xlat
lods
enter
lods
push
negb
insl
dec
mov
xor
jb
sbb
push
rol
fwait
sub
rcl
jl
stos
jmp
cmp
mov
in
cmp
push
mov
mov
popf
adc
ja
and
mov
loop
in
loop
idivb
cmp
or
sub
stos
sub
and
or
je
mov
adc
mov
mov
imul
and
call
popf
fisubrl
into
cli
dec
or
or
jno
xchg
shrb
sub
dec
mov
test
mov
cmp
jle
mov
imulb
push
add
add
xor
mov
lods
cld
push
js
out
mov
adc
cld
insl
inc
xor
mov
sub
jno
ja
push
and
rol
push
push
mov
dec
add
xchg
jmp
mov
pop
xor
shlb
xchg
nop
in
js
or
xchg
hlt
push
jbe
jmp
mov
test
rolb
mov
out
test
das
test
mov
das
test
out
in
pop
decl
sub
dec
lret
jno
sahf
xchg
add
call
test
shll
test
add
lock
movb
addl
pop
mov
or
fdiv
lret
in
jg
lret
dec
xor
dec
jo
shl
shr
mov
sbb
add
jns
div
scas
inc
mov
ja
stos
hlt
iret
sub
push
out
xor
xor
test
shrl
jb
lret
ja
xchg
mov
cmpsl
pushf
push
outsb
or
sub
fistps
pop
clc
leave
aam
lret
add
jg
movb
in
xchg
push
adc
dec
aad
cmp
lret
sub
sbb
mov
mov
cmp
mov
jmp
fs
mov
mov
dec
mov
aas
les
test
stos
xchg
add
call
inc
mov
xchg
cmpl
xor
pop
lods
nop
dec
sbb
inc
call
lods
sub
inc
fsubrs
xor
jle
mov
lahf
sti
aaa
or
mov
filds
mov
fucom
cwtl
xchg
ja
fmull
loopne
sarb
into
cld
rol
cmc
sub
lock
fsubrl
add
dec
test
lea
mov
test
mov
popl
and
je
sbb
dec
or
and
sahf
sbb
cltd
data16
pop
in
mov
cltd
aaa
icebp
add
loope
rcr
mov
in
subl
dec
lds
mov
shrb
test
xchg
popf
jo
mov
inc
dec
insb
sub
ja
hlt
mov
je
adc
sbb
shlb
push
pop
jno
lea
adc
cmpsb
aad
or
dec
int3
bound
in
push
jne
xchg
jns
xorl
arpl
sub
iret
ja
xlat
xor
sbb
movsl
hlt
xchg
jns
daa
add
rcl
lret
xchg
fstpt
sarb
push
in
mov
jp
push
mov
mov
xor
inc
shll
sarb
dec
sar
pop
push
test
inc
mov
mov
pop
popa
ljmp
lods
aam
mov
dec
fcmovbe
popf
das
int3
add
fmulp
test
or
nop
adc
jno
insl
xchg
xchg
cmpsb
sbb
nop
mov
inc
fcompl
js
insl
push
iret
shll
outsb
and
dec
test
jmp
sub
les
sub
push
mov
fnsave
inc
les
adc
scas
dec
ljmp
cmpsb
roll
rcll
mov
arpl
or
xchg
mov
call
mov
test
and
or
rol
fcmovne
out
jo
inc
sbb
push
rcr
ss
faddp
loopne
hlt
dec
pop
mov
stos
loopne
in
mov
mov
es
stc
sub
xor
int
sbb
inc
mov
jbe
add
shlb
bound
mov
out
jnp
xchg
or
push
pop
cmp
out
shll
test
lods
sti
bound
cmpsl
test
loopne
test
jno
stc
mov
sbb
mov
fadds
push
test
orl
mov
xchg
mov
lret
xor
scas
jbe
pop
data16
jo
cmpsb
out
mov
test
rclb
insl
insb
stos
or
xor
daa
mov
fucomip
push
imul
inc
adc
orl
push
mov
mov
or
xor
roll
mov
mov
add
stc
fmuls
pop
leave
std
xchg
xor
add
sbb
out
dec
or
adc
and
adc
sbb
fs
mov
adc
movsl
jbe
loop
pop
add
hlt
into
or
dec
sbb
pop
jno
xor
fidivs
orb
sti
repnz
aam
subb
scas
rorl
into
push
movsb
jns
je
jle
mov
adc
push
mov
movsl
xchg
jne
cmp
jge
pushf
sar
leave
cld
jg
ljmp
cvtpi2ps
movsl
mov
push
pusha
aaa
jo
push
xor
scas
arpl
int3
jns
dec
outsl
adc
or
xchg
cwtl
js
mov
pushf
movsb
mov
mov
fidivrs
loop
rolb
stos
dec
jns
mov
sarl
mov
xor
loopne
popl
int
imul
fs
roll
dec
push
push
lds
nop
mov
aam
xchg
iret
mov
shrl
jo
sar
push
popf
push
test
mov
mov
mov
jecxz
or
inc
xor
test
xchg
pushf
jo
das
push
inc
xor
hlt
add
pop
push
pop
or
pusha
inc
iret
fsubs
or
stos
xchg
aad
pop
and
xchg
fbstp
mov
mov
xchg
or
lret
pop
sbb
movsb
fbld
les
sbbb
add
mov
dec
movsl
stos
std
xchg
xor
scas
adc
or
jns
dec
ds
rclb
int3
fsubl
outsb
xchg
and
cmp
and
or
hlt
cmp
sub
inc
insb
das
mov
sub
call
es
jno
scas
and
stos
lds
inc
clc
in
cld
inc
mov
push
cmc
mov
add
mov
dec
xor
rcl
pop
andb
mov
call
call
mov
jmpw
hlt
cmp
inc
xchg
jns
inc
popf
xchg
inc
push
sbb
or
pop
xlat
pop
push
add
loop
xlat
xor
pushf
add
pop
mulb
ret
xor
nop
lret
imul
roll
mov
sbb
arpl
add
clc
scas
scas
cwtl
push
jb
jns
nop
test
xor
xchg
pop
add
dec
add
lcall
pop
jnp
pop
enter
sub
push
add
xchg
xchg
cmp
mov
mov
xor
bound
add
jno
dec
mov
fldt
sub
xor
test
xor
pushf
rcr
push
xorb
stos
test
stos
jb
sub
hlt
xchg
sbb
into
lret
xchg
sbb
or
ror
es
xlat
jnp
cwtl
xchg
dec
ret
inc
mov
push
mov
and
dec
shlb
addb
sbb
les
cwtl
push
rclb
or
adc
das
out
xor
std
adc
ljmp
std
lock
sbb
loopne
jns
xchg
cmp
cmp
into
cmp
inc
imul
jo
andl
outsb
int3
pop
cltd
or
insb
sub
sub
popa
sbb
inc
push
xor
lahf
daa
aaa
shrb
leave
insl
les
rol
stos
mov
ret
mov
lods
insb
mov
das
inc
xor
adcl
rcl
arpl
scas
roll
divb
cld
cmp
or
repz
out
fmull
mov
sub
push
aas
scas
loopne
inc
mov
cmp
loopne
jns
nop
mov
enter
test
jne
call
sbb
xchg
add
xor
push
mov
and
pop
aaa
sbb
jmp
dec
and
shlb
pop
xchg
andl
int
lea
in
cmpsl
sbb
test
push
sub
hlt
aad
mov
into
sbb
es
rolb
add
imul
lods
xchg
mov
or
push
std
push
dec
or
stos
jo
sbb
movsl
outsb
loope
cmp
nop
hlt
aam
pop
cld
mov
enter
or
mov
sbb
pop
aaa
lods
and
add
repnz
mov
fbstp
jecxz
cmp
add
ja
les
idiv
xchg
adc
cmp
out
ror
lret
mov
stc
cmc
out
pop
imulb
lret
insb
cmp
clc
jg
mov
inc
in
or
pushf
sarl
xchg
out
ja
lret
xchg
sbb
pop
or
or
or
mov
and
pusha
pop
add
xor
bound
push
and
shrl
mov
mov
add
sbbl
aam
adc
adc
push
mov
lret
fisubl
out
cmp
lcall
gs
sub
rolb
dec
jg
sbb
aam
xchg
fmull
cwtl
jl
mov
loopne
push
mov
cmp
mov
shr
xor
sbb
shl
adc
dec
cwtl
adc
sub
inc
cmp
leave
shlb
push
std
pop
ficomps
shll
in
rol
hlt
or
scas
push
mov
add
in
daa
or
push
cmp
call
mov
in
into
sbb
movsb
push
add
movsb
lock
ljmp
add
xor
pop
and
fdivl
shll
cmpsl
fisubrl
andl
adc
mov
add
sbb
inc
adcb
push
mov
orb
adc
stos
mov
mov
cmpl
jne
mov
or
mov
into
push
jne
jo
xlat
sub
add
mov
lds
adc
call
and
lret
mov
fcmovbe
cmpsl
iret
shr
dec
add
add
loop
cmc
xchg
dec
lahf
pushf
adc
add
dec
and
cmc
jmp
and
imul
andl
test
mov
mov
pop
jl
movsl
jnp
push
iret
test
mov
jg
mov
mov
mov
cmp
ds
insl
mov
fildll
jecxz
xchg
mov
loopne
shrb
mov
or
rclb
shlb
push
data16
ret
mov
leave
push
hlt
inc
leave
inc
lret
mov
ret
das
xor
mov
mov
adc
adc
sbb
jle
addl
xor
cmpsb
dec
mov
outsb
sub
adc
imul
leave
jo
scas
push
inc
inc
inc
xor
call
daa
mov
mov
mov
pop
mov
mov
test
pop
dec
add
test
mov
pop
cltd
movsl
aam
test
imul
movhps
nop
mov
push
xor
or
push
adc
adc
outsb
loop
cwtl
sbb
fs
mov
pushf
push
mov
cmpsl
jno
dec
insb
test
xlat
fnstsw
and
jo
inc
mov
mov
xchg
lret
lods
iret
clc
stos
jb
push
and
inc
sub
es
loopne
sub
clc
inc
mov
inc
movsl
stos
rorb
jns
ret
mov
sbb
cmp
mov
jno
pushf
out
stos
xchg
jae
jmp
xchg
pop
icebp
xlat
stc
mov
cmc
ljmp
ret
or
lret
push
bound
stos
mov
xchg
lea
lods
outsb
test
inc
in
fisubrs
xor
testb
scas
mov
mov
add
jl
mov
push
loope
xor
dec
mov
test
jmp
and
insb
mov
mov
rcr
adc
inc
sub
mov
mov
xor
jbe
mov
loope
aad
dec
xor
popa
mov
mov
add
sub
inc
fiadds
inc
cmp
pop
aam
adc
mov
subb
je
pushf
movb
ror
or
xchg
cmc
fwait
movsb
shlb
inc
mov
leave
push
inc
in
ja
nop
cltd
adc
adc
sub
out
jmp
movsb
cmpsb
add
add
xlat
nop
test
xor
add
push
testb
mov
pop
mov
push
adc
mov
cmpsl
clc
jecxz
cs
call
dec
jns
mov
subl
push
add
nop
cmp
lret
mov
call
lods
cwtl
lds
lret
mov
xor
imul
ret
or
jg
cmp
mov
ret
inc
xchg
in
shlb
es
and
mov
push
outsl
lcall
cmp
inc
or
sub
cmp
pop
xchg
aam
out
add
jmp
scas
in
adc
dec
sbb
bound
push
or
jge
dec
data16
xchg
adc
movsl
cmc
icebp
test
or
sbb
fsubrp
es
ret
sahf
lods
inc
movsb
test
aad
add
jbe
shlb
cs
mov
pop
and
andl
cmp
sbb
inc
pop
fld
mov
addl
data16
cmpsl
cltd
mov
call
aam
push
pop
adc
push
sbb
jb
mov
orl
in
mov
divl
fwait
mov
aaa
push
inc
pop
mov
mov
fsubrs
lcall
mov
shll
mov
mov
test
cmpsl
js
xor
pop
xchg
or
pop
lea
mov
nop
out
sbb
outsl
movsl
pop
mov
lods
daa
js
iret
add
fmuls
ds
xchg
loop
movsl
jne
mov
xchg
push
vrsqrtps
cmpsl
jnp
and
push
pmulhuw
es
and
fmuls
ror
adc
test
js
or
ja,pn
imul
push
outsb
lret
mov
pop
adc
movsb
outsb
add
xchg
ljmp
add
test
bound
jne
sbbl
subb
inc
mov
push
cmp
nop
test
data16
movsl
cmc
aad
insb
notb
add
and
ret
or
jge
or
imul
insb
xor
cmp
insl
mov
ret
test
adc
mov
pop
inc
loop
sbb
mov
push
mov
xchg
mov
js
cs
or
pop
inc
pusha
aam
mov
cmpsl
call
fstpl
inc
add
xchg
leave
jl
dec
jp
outsl
xchg
mov
xchg
cli
mov
mov
add
icebp
xor
aad
pop
mov
lcall
push
inc
mov
or
nop
cwtl
ret
repnz
test
stos
push
stos
jbe
lods
mov
pop
dec
pusha
push
pop
gs
call
nop
mov
dec
sbb
and
fildll
add
ret
ret
shlb
mov
or
hlt
loope
adc
gs
mov
les
add
sub
xlat
cmpl
mov
js
push
and
stos
pop
or
mov
into
test
movsb
fs
xchg
xchg
movsb
xchg
push
pop
or
sbb
fsubrs
jp
movsl
and
jo
mov
addl
add
or
stos
add
nop
les
xchg
stos
pop
adc
enter
mov
cld
inc
xor
or
testb
cs
cmp
sub
jmp
stos
loope
iret
xor
int3
adc
cwtl
pop
pushf
push
and
sbb
xlat
xchg
lret
stos
shrl
and
cmp
test
or
xor
mov
jge
out
pusha
or
adc
sub
mov
push
lods
incl
cmpsl
xor
jns
bnd
in
mov
dec
xchg
sbb
nop
or
and
neg
add
push
mov
inc
mov
dec
subl
inc
jo
dec
add
xor
cmovs
sbb
lods
push
adc
mov
pop
or
faddl
aam
je
jmp
xchg
inc
lea
adc
xchg
sub
and
sbb
xchg
movb
rcr
pop
or
cmp
orb
push
enter
vpshufhw
push
sbb
adc
pop
adc
pusha
or
fcom
lock
and
mov
imul
mov
test
call
je
in
sbbb
mov
jge,pt
xchg
xchg
shll
jmp
fiaddl
loopne
mov
imul
xchg
mov
cmpsb
cmp
mov
lret
je
sbb
or
pop
ret
or
mov
mov
out
mov
cmp
fcoml
ret
sbb
int3
je
and
test
int3
cltd
mov
cwtl
data16
xlat
roll
dec
push
pop
arpl
or
imul
cs
lahf
cmc
out
pop
fstpt
scas
cmpsl
mov
mov
test
or
iret
data16
loop
xchg
jae
mov
stos
or
pop
lods
mov
aas
cld
ret
adc
jmp
inc
int3
scas
mov
push
dec
adc
jno
push
xchg
sahf
mov
mov
mov
mov
in
aas
fildl
insl
stos
fidivs
loope
cltd
push
dec
nop
roll
mov
enter
rcrb
fcmovnb
shl
xchg
in
shrb
sub
rep
jns
int3
jne
add
mov
sub
cs
in
out
fsubr
mov
aam
stc
call
inc
fchs
lods
lret
jnp
xchg
loopne
test
enter
jnp
stos
sub
or
fisubs
dec
sbb
push
push
xchg
jle
lds
jmp
dec
push
dec
je
int3
movsb
popa
ljmp
or
and
aaa
testl
mov
adc
add
cmp
aad
rcl
inc
fsubl
bound
mov
mov
sbb
mov
test
mov
notl
arpl
add
imul
cmp
jne
adc
cs
and
into
shl
xorl
aam
aam
xlat
mov
mov
mov
jmp
icebp
pop
fmul
push
xor
ljmp
sarb
inc
jo
nop
mov
mov
inc
xchg
push
stos
inc
jae
mov
fmuls
ret
push
ja
adcl
pusha
test
nop
int3
mov
mov
mov
movsl
and
sub
in
movsl
jmp
aam
loope
pusha
inc
xchg
mov
lods
sub
fnstcw
mov
in
push
ljmp
iret
loopne
sub
push
call
mov
lods
insl
pop
cmc
stc
in
in
add
das
pop
xor
cs
or
adc
mov
call
mov
add
addr16
fdivrp
and
aaa
sub
hlt
sarb
popf
cmpsl
in
repz
nop
pop
add
sub
mov
adc
int3
rcrl
into
adc
and
mov
out
mov
jb
cmpsb
mov
add
ret
mov
in
int3
adc
movsb
lret
jge
adc
pushf
mov
add
insb
mov
bound
add
dec
stos
xchg
cwtl
xchg
aam
into
pop
imul
cmp
faddl
push
mov
mov
ret
lock
push
imul
rcll
xchg
popa
ror
dec
or
ficoms
bound
ror
roll
fstp
in
xchg
popa
iret
loopne
cmp
int
fists
icebp
mov
or
and
fcomp
jne
pop
jo
je
les
or
loopne
adc
mov
mov
lods
fisubs
in
out
js
leave
or
js
mov
mov
out
push
xor
rorl
jmp
jge
cmc
xchg
jbe
inc
bound
pop
rorb
mov
mov
lcall
mov
shlb
inc
pusha
inc
sarl
xchg
push
fidivl
push
std
push
xor
dec
mov
cmp
iret
pop
xchg
cmp
dec
xor
and
inc
lods
jl
into
stos
or
sub
cld
push
fucomip
jns
cmp
jo
and
push
sub
les
and
jnp
xchg
lahf
add
filds
xchg
cmp
push
cwtl
add
push
repz
fistps
xchg
sub
pop
bound
lcall
mov
and
mov
jp
out
cmc
iret
ss
jno
mov
pushf
or
jne
xchg
jg
inc
cmp
cltd
jg
mov
imul
mov
inc
add
inc
sbb
adc
inc
or
push
pop
movsb
push
aad
jmp
adc
test
lods
sar
or
hlt
and
lret
jo
loopne
pop
or
pop
add
stos
add
xor
push
and
add
add
mov
icebp
test
mov
pop
fistl
ret
jmp
sub
xchg
inc
add
lret
and
inc
mov
lret
push
mov
or
mov
xor
mov
jmp
fs
out
movl
add
pushw
jo
loope
into
andb
pop
xor
enter
nop
fsubrs
fiadds
jp
psrlw
sub
mov
lods
mov
xchg
into
mov
insb
inc
dec
jo
pop
fsts
jo
int
daa
int3
and
inc
jno
je
jae
repnz
shl
jns
mov
addr16
rcl
jge
subb
test
int3
mov
call
lret
sub
daa
fisubl
dec
xchg
push
cmp
mul
stos
mov
lock
lahf
push
stos
xor
inc
mov
xor
insb
adc
loope
mov
or
dec
sbb
pop
fstpl
insb
xor
pusha
xor
pop
jle
pop
data16
mov
lret
add
nop
sbb
cmp
sbb
cmp
lods
js
jl
push
imul
movsl
xor
pushf
mov
or
lret
lcall
pushf
and
je
ret
sbbl
fmull
adc
inc
out
lret
jecxz
addl
dec
je
pop
in
dec
and
pushf
ret
xchg
mov
aas
fldenv
lods
sub
mov
cmp
fisubl
push
mov
out
ret
jns
les
pushf
push
cli
movsl
jne
shrb
call
in
clc
pop
push
ret
test
pusha
push
rcrl
fcoms
ss
push
mov
xchg
xor
cmpsb
add
xchg
mov
pushf
push
pop
loopne
stos
and
gs
mov
lret
inc
or
and
adc
add
fadds
ds
inc
and
in
js
mov
pop
loopne
ficompl
insb
jmp
pop
xchg
fsubrs
sub
jg
push
cmpb
xlat
mov
dec
stos
cltd
sub
adc
test
push
mov
hlt
rol
mov
loop
std
stos
adc
outsb
xlat
out
and
cmpsl
in
pop
adc
or
xchg
mov
movsl
jns
adc
fstps
inc
inc
mov
movsl
es
lea
adc
pop
int
das
sti
jo
pop
fdivl
add
mov
lods
leave
mov
mov
inc
mov
sub
cltd
adc
pop
fwait
jg
insl
mov
and
iret
push
les
sub
mov
xchg
fs
popf
cmc
xchg
lcall
inc
sbb
ss
hlt
inc
mov
int3
push
lods
test
cmp
outsl
inc
imul
mov
rcl
sbb
aam
fcoms
in
mov
fisubs
pop
testb
nop
ffree
pop
aaa
fnstsw
inc
xchg
mov
in
cld
jnp
js
pop
fsts
adc
adc
stc
push
and
insb
stos
or
jl
rolb
mov
loop
scas
mov
data16
mov
cli
scas
jle
sbb
lods
xor
test
mov
mov
insb
loopne
insb
xchg
in
jnp
mov
scas
sahf
xor
hlt
fwait
add
lods
cli
pushf
imul
jo
scas
cmp
loopne
cmp
popf
push
fsub
roll
adc
xchg
xchg
push
xchg
inc
jp
mov
mov
lret
dec
mov
inc
cmpsl
cmp
and
sub
ret
pusha
mov
inc
test
rolb
insb
xchg
jo
dec
mov
enter
sbb
rolb
mov
cmc
scas
mov
lcall
mov
mov
mov
rclb
or
adc
int3
nop
rorb
aam
fsub
fsubl
fidivs
mov
call
lock
imul
clc
test
cld
test
and
cltd
or
mov
push
hlt
mov
jg
mov
mov
adc
test
mov
push
imul
or
fdivrs
mov
lret
lods
mov
jno
or
in
cmp
add
imul
fnstenv
pop
xchg
fimuls
xchg
int3
xor
jb
xor
pop
push
xlat
xchg
push
xchg
loop
dec
dec
neg
les
jg
rorl
dec
mov
mov
ret
sub
jnp
fimull
out
rcrb
inc
mov
sbb
adc
or
iret
jb
xchg
mov
aad
inc
fbstp
pop
push
icebp
cld
rclb
dec
xor
ja
nop
ret
ret
test
lret
inc
stos
pop
cmp
call
dec
mov
adcl
and
inc
imul
mov
inc
push
popa
xchg
sub
rclb
or
dec
test
ret
andl
inc
mov
repnz
iret
jb
push
rorb
dec
jbe
mov
fdivrs
fsts
repz
sbb
filds
xchg
mov
cmp
mov
mov
insb
pop
scas
incb
test
xchg
lock
in
inc
bound
cmpsl
or
add
jbe
inc
popa
ja
jg
sti
or
push
pop
mov
int3
mov
push
movb
iret
push
pushf
enterw
mov
pop
xchg
adc
mov
cmpsb
test
dec
xchg
xchg
aad
movsl
mov
cwtl
adcb
nop
stos
and
mov
sbb
cltd
lock
in
mov
jo
andl
sbb
lret
xor
in
sub
lea
add
add
push
cli
fs
push
xor
bound
ljmp
push
pop
hlt
incl
js
sbb
movsl
push
outsb
dec
data16
out
movsb
lods
sub
loopne
pop
mov
jp
mov
or
mov
xor
test
or
loop
and
imul
in
or
fists
mov
cs
out
in
rcll
dec
mov
shrl
inc
ja
cmpsb
mov
pop
cli
nop
imul
push
rol
sub
sbb
roll
aam
shlb
mov
rcrl
push
fcompl
mov
xchg
hlt
jmp
xlat
in
call
lret
sub
or
add
cmp
cwtl
cmp
mov
pop
outsb
imul
sbb
cmpsl
inc
push
andb
clc
jg
lahf
push
cmp
test
push
cmp
stc
and
or
push
adc
stos
into
in
jp
pop
and
xchg
test
dec
lods
cmp
popf
add
fdivrs
xor
sub
inc
rolb
out
pushf
cltd
out
push
inc
pop
jg
or
sbb
lods
jg
or
xchg
and
out
test
nop
mov
andl
int3
mov
cli
testb
hlt
out
scas
or
les
pushf
iret
sarb
pop
mov
add
into
xor
pusha
mov
lods
lcall
leave
loope
aad
test
and
std
mov
jbe
jno
or
mov
stos
not
sub
and
dec
mov
sbb
or
lret
loopne
jmp
lock
imul
leave
test
stos
je
movsb
aad
ret
int3
xor
test
sbb
mov
cmp
in
xlat
adc
jo
std
mov
pop
mov
inc
xchg
or
in
pushl
dec
sbb
rcl
inc
pop
cltd
pop
add
xor
es
mov
dec
cltd
mov
or
xor
adc
mov
or
or
xchg
aam
cmpsl
mov
jae
mov
enter
ja
xor
scas
addl
dec
mov
jb
movsl
cmp
popf
sarl
repnz
outsl
mov
pushf
xchg
add
inc
les
fidivrl
cmp
out
nop
cmp
and
sub
rorb
stos
decb
cmpsb
in
int
add
and
rolb
xor
lods
push
inc
es
xchg
fnstsw
mov
and
push
loopne
add
dec
ss
dec
cld
ja
ja
ret
xchg
mov
shlb
sbb
push
pop
in
pusha
test
inc
push
fcmovnu
cltd
xchg
test
cmp
loop
ss
xchg
nop
out
xchg
and
test
xchg
adc
add
in
sub
add
lock
lcall
xchg
xlat
mov
adc
test
or
xchg
mov
out
mov
lea
or
lcall
mov
fmul
pop
cmp
insb
or
lock
mov
mov
mov
cld
push
add
sbb
adc
lods
push
xor
xchg
adc
mov
in
pop
out
je
xor
enter
stc
mov
pop
fiaddl
jecxz
xor
add
push
les
test
xchg
sti
shll
out
sub
adc
cli
out
push
daa
jg
test
add
adc
enter
movsb
pop
sti
or
mov
and
roll
add
filds
mov
pop
push
sub
add
test
out
ret
rcl
jns
sub
add
subl
cmp
test
and
pop
and
cmp
add
cmp
pop
scas
xlat
xorb
jno
popf
and
aas
jbe
mov
loopne
xchg
mov
mov
dec
xchg
bound
rcrb
adc
cmp
dec
les
test
hlt
mov
or
cld
cltd
add
sub
push
cltd
adc
imul
sub
xor
cmp
and
inc
popf
nop
dec
dec
dec
les
push
cltd
pop
mov
ja
pop
pop
rclb
add
insb
cmpsb
les
jne
popf
jb
je
js
jl
cs
movsl
sbb
dec
mov
test
cmp
mov
mov
mov
mov
mov
ret
mov
ret
mov
cwtl
decb
mov
bound
sbb
les
iret
enter
mov
enter
fsubl
call
lock
hlt
mov
add
add
or
xchg
mov
add
sbb
and
nop
sub
xor
xor
cmp
ret
dec
nop
dec
dec
push
les
xchg
pop
cwtl
pusha
push
ret
push
inc
je
jbe
mov
pusha
loopne
test
mov
mov
mov
cltd
nop
stos
inc
mov
mov
mov
xchg
lods
cwtl
mov
ret
mov
mov
mov
mov
les
mov
pop
fdivs
mov
or
xor
push
fsubl
fisttpll
mov
mov
mov
cmpsl
push
test
xchg
or
je
loop
addl
push
decl
int3
cld
call
pusha
fs
mov
mov
pop
add
inc
or
fbstp
and
sub
lret
xchg
lcall
xor
inc
shlb
iret
stos
mov
mov
enter
inc
or
sbb
push
adc
out
filds
xchg
rcl
add
dec
dec
fisubrs
in
js
movsb
test
insl
bound
inc
pusha
or
mov
mov
ljmp
scas
or
push
mov
push
imul
adc
jge
mov
mov
js
sahf
pushf
cld
xchg
inc
rolb
nop
ret
pusha
enter
rcr
iret
jnp
lock
nop
mov
fsubl
or
rolb
inc
pop
call
insb
pushf
fstpt
jne
nop
add
aad
push
xlat
xchg
or
jg
mov
iret
aad
inc
mov
inc
fistpll
popa
mov
orl
xchg
xor
adc
mov
jg
movsb
adc
call
lea
test
les
mov
ljmp
mov
pop
cmp
xchg
mov
lods
push
push
mov
mov
das
sbb
les
fdivrp
add
aam
or
repz
nop
sub
loopne
mov
hlt
ret
stos
cmpl
mov
and
cmp
and
es
pop
scas
adc
andl
hlt
gs
les
stos
aaa
adc
hlt
add
ret
push
movsb
cld
mov
hlt
outsl
cmpsb
sarl
mov
test
push
xor
inc
popl
mov
inc
clc
lea
and
jns
sbb
subl
jno
adc
shrb
orl
jno
bound
add
lods
mov
cmpsl
xchg
andb
jle
adc
pop
jecxz
add
xchg
enter
xchg
mov
cli
stos
jo
or
hlt
leave
out
fprem
adc
cmc
xchg
sbb
push
outsb
out
int
stos
add
jmp
fldt
stos
mov
and
out
xor
sub
adc
out
mov
or
mov
mov
adc
lret
clc
sub
inc
and
lock
stc
fadds
mov
push
jo
pop
mov
shll
mov
mov
adc
sarb
int3
xchg
repz
cmpb
jae
lods
fwait
mov
xor
cwtl
mov
sahf
xchg
push
mov
and
sub
mov
rclb
pop
xor
mov
mov
pop
add
cld
and
ja
incb
jmp
les
inc
addr16
xor
jle
sub
mov
out
ljmp
insb
xchg
pop
lret
adcl
nop
aad
popf
pop
jecxz
fisttpl
xchg
notl
jp
sbb
jnp
jle
inc
popa
xorb
insb
shlb
nop
and
jnp
xchg
imul
jp
jecxz
cmp
test
xchg
and
add
mov
push
into
lret
stos
or
xor
pushf
stos
nop
jo
shr
mov
enter
in
or
mov
xor
adc
das
mov
rcl
out
leave
lds
xor
loop
frstor
icebp
loop
faddp
inc
and
lret
xchg
dec
rcll
dec
fistps
shlb
mov
cmp
cmc
push
aas
and
inc
int3
mov
mov
adc
dec
popf
mov
bound
mov
fistpl
adc
ds
shr
out
lret
add
add
imul
mov
push
out
test
cmp
jmp
pusha
je
dec
sbb
daa
div
jecxz
push
add
mov
cmpsb
push
scas
mov
stos
popf
add
dec
push
push
cmc
mov
dec
stos
xor
pop
sub
and
jp
and
scas
inc
sub
jne
and
push
sub
dec
fdivrp
xchg
daa
cmp
aam
in
icebp
cwtl
pop
popa
push
mov
in
jnp
xor
in
jmp
int
loop
jmp
mov
or
hlt
shlb
les
stc
mov
jns
mov
aam
negb
std
movsl
stc
xor
mov
mov
test
inc
aas
xor
test
test
mov
or
loopne
jmp
sub
jecxz
add
incl
ret
push
cmc
jp
mov
xor
xor
push
jle
xor
inc
rolb
aaa
adc
and
mov
stos
pusha
icebp
add
imul
loope
push
pushl
scas
xor
lret
or
test
mov
test
add
sti
leave
test
mov
popf
test
xor
push
orl
xchg
jne
fdecstp
push
mov
mov
xchg
enter
test
xor
mov
adc
aaa
fs
push
mov
cld
cmp
fsubs
jecxz
nop
fiaddl
jecxz
ficoms
cli
mov
dec
mov
add
hlt
xchg
popa
rolb
sbb
dec
enter
jns
xor
add
jb
add
out
adc
xor
mov
xlat
mov
mov
sahf
jge
or
std
dec
xor
mov
icebp
into
inc
cld
inc
cli
push
mov
loope
enter
mov
mov
aam
sti
test
xor
xor
jmp
xor
and
jge
and
std
inc
adc
fwait
call
mov
jl
cmc
adcl
rcr
mov
adc
dec
jge
es
or
and
sub
test
xor
es
fdivrl
lea
mov
decb
sbb
out
addl
outsb
mov
pop
xchg
int
xchg
nop
in
or
call
push
outsl
sub
mov
les
lods
or
shrl
dec
seto
xchg
call
ret
lods
popf
js
sarb
or
push
rol
xchg
call
fimuls
outsb
testl
fists
hlt
xchg
pushf
pop
or
enter
cmp
mov
nop
mov
inc
stos
arpl
adc
fsts
stos
in
adc
sbb
xchg
cli
push
pop
and
lret
in
loopne
xchg
inc
mov
iret
xchg
sub
pop
lcall
push
mov
mov
jo
and
xchg
cmp
push
mov
nop
fwait
push
or
and
ja
push
mov
inc
loope
icebp
jl
xchg
xchg
sbb
mov
xchg
jae
fdivp
xor
mov
mov
movsl
rcrl
test
adc
adcl
push
push
ds
nop
or
xchg
pop
pop
add
fistpll
mov
mov
dec
add
sub
leave
nop
adc
inc
push
mov
jle
mov
xchg
cmp
ret
adc
jae
into
scas
mov
pop
xor
mov
xchg
mov
icebp
orl
xchg
fstps
xchg
lods
jecxz
cmp
mov
push
push
mov
mov
roll
jecxz
lret
dec
jp
subb
pop
stos
or
lds
outsl
mov
sub
stc
jo
pushf
test
pop
fwait
or
mov
mov
nop
pop
jae
das
pop
mov
dec
orl
es
fimuls
shrb
sub
mov
mov
lcall
push
mov
aad
mov
cmp
ljmp
cwtl
mov
inc
xlat
xchg
jne
mov
mov
ljmp
mov
lods
sub
inc
dec
nop
pop
jl
int3
mov
rcl
movsl
cmp
or
mov
or
mov
inc
dec
xchg
jno
mov
push
jnp
xchg
sub
xchg
or
sar
cld
mov
mov
rorb
pop
mov
fnstenv
neg
repnz
pop
add
cmp
cmc
push
xor
inc
sbb
push
fstpl
aam
call
mov
xor
sti
rolb
cmpl
cmpb
xchg
mov
push
sti
pop
stc
outsb
mov
dec
jb
add
lods
dec
rcl
mov
cwtl
add
shlb
xchg
fisttpl
jbe
notb
xor
and
stc
stos
dec
movsb
leave
leave
sub
push
push
adc
mov
inc
into
jb
mov
push
mov
nop
out
mov
push
mov
scas
gs
sub
out
cmc
pop
jo
xlat
jnp
sarb
stc
jnp
shll
push
lret
insb
mov
dec
cwtl
inc
xchg
push
cmp
shll
fcmovnbe
or
xor
xchg
fucomi
rcl
mov
add
mov
lahf
mov
out
pop
cmp
push
cld
ljmp
popf
pushw
push
scas
and
xchg
mov
mov
pop
push
lods
icebp
lods
xor
sub
mov
xchg
incb
lods
iret
fdivrs
ret
mov
jae
mov
cltd
rcr
insl
push
push
and
and
adc
in
jecxz
push
or
xchg
jl
fbld
shll
addr16
popl
lods
lret
mov
or
add
or
mov
or
addb
inc
aad
mov
push
call
sbb
js
pushf
out
test
pop
jae
mov
stc
rorl
insb
inc
test
inc
push
pop
aaa
std
or
mov
enter
lds
enter
add
cmpsl
cmp
push
dec
shlb
mov
movsl
nop
adc
xchg
shr
sub
inc
fisubl
notl
in
pop
and
int3
xchg
jmp
mov
mov
shlb
fistpll
adc
mov
movsl
out
cmpsl
decl
mov
jl
push
stos
faddl
sbb
push
add
mov
movsb
out
sub
or
int3
mov
enter
lcall
stos
dec
cwtl
insb
mov
insb
in
daa
test
push
push
xchg
xlat
push
stos
int
mov
mov
test
pop
adc
pop
imul
jne
ds
andb
push
subb
test
rcl
ja
pop
test
or
dec
loopne
sti
pushf
pop
data16
mov
dec
mov
or
sarl
clc
loop
xchg
or
xchg
or
test
nop
dec
sbb
cmp
ret
mov
fmulp
rorb
pusha
incb
add
hlt
lds
dec
cmp
push
iret
leave
mov
fs
jge
sub
aaa
pop
movsl
fiaddl
push
call
ret
push
add
out
inc
test
call
mov
aam
sbb
sbb
xorps
push
cmp
fstps
orl
fiaddl
divl
iret
or
stos
cmp
push
ja
sbb
mov
frstor
mov
push
dec
fstpt
jbe
add
outsl
aad
sbbb
pop
test
mov
dec
mov
adc
lret
mov
ljmp
push
add
cmp
xchg
and
enter
repnz
jb
cmp
rorb
test
adc
loop
imul
test
dec
mov
fsubl
mov
pop
xor
add
jle
imul
ja
hlt
stc
push
test
iret
jbe
imul
mov
cld
test
add
inc
imul
leave
in
pop
or
push
or
and
mov
test
sub
imul
or
jbe
aad
cmpsb
push
loop
movsb
stc
adc
in
mov
or
add
out
pop
pusha
jle
shll
lahf
add
mov
nop
mov
jle
imul
mov
stos
xchg
hlt
test
sub
push
sarb
xchg
or
mov
scas
lods
mov
cmp
ficoml
inc
movsb
insl
aad
pop
test
insl
roll
sbb
scas
jno
xchg
nop
jg
mov
xor
xchg
sarl
pop
add
imul
add
jae
scas
mov
cmpsb
inc
mov
jmp
fstl
mov
into
outsl
fsubr
xchg
hlt
lea
pop
pushf
in
iret
lods
test
mov
imul
aad
hlt
mov
mov
out
loope
xchg
test
xlat
xor
mov
push
xchg
cmpsl
or
js
or
out
mov
pop
icebp
add
jne
in
adcl
lea
cwtl
inc
cmpsb
rorb
scas
rcl
jp
test
sub
inc
and
jbe
or
ret
out
mov
jecxz
imul
lock
mov
fisubs
nop
push
clc
stos
js
popa
in
fwait
lret
push
mov
xchg
int3
push
leave
pop
sub
in
das
xor
shlb
into
dec
push
call
sub
cmp
inc
cmp
mov
pusha
jge
adc
xchg
ss
bound
hlt
in
int
cmpsl
int3
lcall
nop
loop
mov
pop
cmpsb
adc
ja
dec
sub
call
test
xchg
push
pop
xchg
mov
inc
inc
hlt
xor
test
stos
fidivl
xlat
shll
fdivs
and
nop
sub
clc
add
jg
js
add
sub
ljmp
inc
fstl
xor
lds
leave
pop
lahf
inc
mov
pop
xor
pop
pop
push
rcrl
lret
pop
pop
lahf
ret
pop
daa
clc
ja
push
movsl
or
push
enter
inc
fildl
pop
adc
mov
nop
jne
fs
iret
shr
mov
sub
imul
mov
push
ljmp
outsl
lods
adc
cmp
add
ret
loope
push
and
pusha
les
jbe
test
insb
push
mov
rclb
sub
enter
adc
push
leave
movsl
pop
mov
cli
jo
pop
decb
push
lahf
lcall
mov
movsl
mov
or
push
or
jle
adc
flds
cmpb
adc
cli
sub
pop
jns
pop
cmp
xchg
mov
mov
paddsw
in
in
insb
jo
inc
jb
lret
dec
adc
mov
ljmp
popf
or
xchg
jne
ret
add
cs
outsb
in
pop
rorb
jo
pop
and
mov
jo
movsl
mov
movsb
inc
pushf
xchg
sub
jnp
stc
notb
mov
xchg
dec
push
dec
mov
int3
mov
sub
cwtl
mov
outsb
and
mov
test
cmc
inc
and
enter
push
sub
adc
pushf
js
mov
jl
add
iret
cmc
jb
pushf
out
or
xchg
or
mov
jb
mov
insl
pop
and
lret
outsb
cmp
mov
or
xchg
fcmovnu
mov
jp
sbbb
sar
addr16
sbbb
and
jecxz
add
lods
mov
shr
test
cmpsl
out
cmpsl
inc
add
test
insl
inc
shll
and
daa
push
ret
out
nop
or
icebp
ffreep
cmp
adc
roll
mov
dec
or
test
mov
stc
sti
and
imul
ret
xlat
bound
dec
and
shll
mov
call
sbb
mov
idivb
out
cmpb
pop
mov
cmp
movsb
pusha
jb
or
jl
or
mov
mov
push
add
out
mov
inc
aad
adc
ss
fildl
mov
cmp
ss
popa
outsl
aaa
fadd
or
add
sub
test
mov
jne
add
pop
dec
or
js
or
mov
dec
xor
mov
mov
mov
fs
fsubl
sahf
sahf
movb
adc
add
ja
sub
ret
add
inc
xorl
mov
mov
cli
add
hlt
js
ret
sub
push
mov
mov
mov
int3
push
loopne
ret
mov
sbb
shlb
push
stc
loopne
adc
mov
push
in
add
xchg
mov
sub
aam
cwtl
sbb
mov
push
xor
sahf
push
icebp
inc
cltd
dec
mov
push
xchg
push
push
dec
mov
aam
push
jo
xchg
xchg
xchg
lea
cmpsb
jb
xor
pusha
sub
cltd
push
jo
or
mov
mov
icebp
not
adc
test
xchg
xchg
inc
ret
adc
mov
push
subl
and
push
mov
xchg
movsl
fucomip
add
dec
pop
flds
sarb
cmp
daa
stc
fidivrl
sarl
call
ja
push
mov
loopne
mov
adc
jbe
xor
stc
or
pop
loopne
ret
inc
jne
in
popa
rcl
sub
leave
mov
cli
or
imull
xchg
shrl
xchg
push
cmp
and
lret
sub
or
imul
stos
xchg
sbb
cmp
orb
pop
xchg
jmp
add
push
push
cmpsb
mov
jno
int3
or
push
mov
aas
push
dec
popf
xchg
lahf
xchg
lock
mov
arpl
and
pushf
test
out
and
mov
adc
nop
pop
mov
addr16
lods
adc
add
repnz
loop
jle
ret
sbb
sbb
out
mov
loope
jl
repnz
xchg
mov
loopne
xchg
repnz
cltd
int3
pushf
xchg
push
ret
cmp
and
mov
mov
pop
js
xchg
xchg
dec
loop
pop
lock
push
or
loope
push
dec
dec
cltd
shrb
nop
lea
mov
mov
dec
xchg
add
mov
lock
fsubl
inc
cltd
enter
ret
mov
sbb
mov
mov
lds
lods
xchg
or
test
daa
fdivrs
movsl
mov
mov
ret
mov
nop
inc
fwait
adc
stos
xor
subb
mov
ret
dec
mov
test
xchg
mov
push
mov
and
insl
xor
into
add
push
aad
dec
sar
inc
test
addl
mov
xchg
in
mov
cmpsb
inc
rolb
xchg
movl
in
ret
hlt
push
rcrl
arpl
cmc
push
push
jle
inc
sub
cmp
fildll
sub
mov
sub
nop
ret
mov
nop
inc
test
adc
mov
add
add
js
or
loope
pop
nop
imul
xor
lret
push
mov
mov
scas
aad
dec
mov
call
mov
mov
mov
jmp
xchg
sahf
shlb
mov
rcr
enter
lods
adc
hlt
mov
or
push
mov
ds
mov
ljmp
pop
mov
pusha
jl
aas
mov
mov
or
lds
fdivl
ret
pop
pop
les
mov
add
xchg
popf
ljmp
cmp
mov
int
test
cmp
jo
xchg
inc
cmp
cmp
mov
shll
or
push
rorl
imul
test
shl
jge
test
mov
mov
adc
out
les
or
mov
imul
enter
push
adc
mov
lret
mov
cmp
test
push
push
mov
jmp
scas
adc
ds
lret
rorl
jp
lcall
ljmp
mov
fnstcw
ret
xchg
xchg
inc
out
or
sub
dec
and
in
lea
mov
inc
jbe
into
mov
mov
inc
test
mov
dec
rorb
jno
push
pop
cli
rcll
mov
sub
lahf
inc
push
scas
and
ret
adc
lods
cmpsl
lods
lahf
mov
adc
jno
rorb
iret
sahf
mov
lds
mov
gs
dec
cmpsb
mov
test
cmc
mov
mov
ljmp
scas
pop
jmp
cmpsl
fsubl
out
mov
das
sbb
jns
pusha
inc
cwtl
test
push
decb
pop
mov
xchg
cltd
mov
mov
or
imul
push
outsb
adc
xor
lret
sbbb
inc
fmull
rcl
mov
mov
push
nop
xor
lret
mov
sbb
shll
rcrl
sbb
notb
or
cmp
decb
ljmp
test
inc
xchg
dec
je
inc
xchg
lds
mov
mov
int3
mov
sub
sbb
mov
and
hlt
fiadds
lds
or
push
fs
inc
stos
enter
out
cmp
and
fadds
mov
push
cltd
scas
lret
push
lahf
fadd
js
inc
push
into
or
jae
mov
stos
ret
scas
cmc
mov
mov
test
ss
xchg
push
jb
into
inc
sub
push
fisttpll
mov
ficomps
xchg
inc
rcll
cmp
fiaddl
insb
cmpsl
adc
into
mov
add
xchg
mov
or
call
adc
pop
ljmp
sarl
pop
addb
enter
xor
enter
add
mov
mov
popf
xchg
test
je
pushf
gs
mov
xchg
mov
mov
mov
outsb
test
bound
mov
jo
xorl
push
je
mov
leave
std
jno
popa
neg
xchg
pop
test
push
pop
enter
and
lea
pop
js
fnstcw
cmpsb
pop
sub
sub
mov
ffree
push
lock
lds
nop
into
and
mov
stos
in
pushl
adc
std
sahf
push
test
mov
int
leave
mov
test
sbb
mov
ret
xchg
push
add
scas
sti
or
mov
mov
pop
pushf
out
test
cmpsb
sahf
pop
xchg
lcall
rclb
ss
mov
jno
add
mov
ljmp
cmpsl
mov
mov
pop
mov
mov
scas
cmp
nop
decb
inc
jmp
cmc
iret
ja
call
mov
iret
cmc
outsl
add
imul
cmc
xchg
jecxz
mov
and
les
shlb
mov
xchg
in
mov
pop
test
xorl
shrb
mov
mov
adcl
in
mov
xchg
test
xchg
sub
sub
dec
shlb
shll
cltd
pushf
daa
scas
arpl
int3
pop
inc
js
imul
in
xchg
stos
movsl
mov
orb
mov
xchg
cld
cmp
andl
cmp
fiaddl
xchg
or
stos
or
adc
test
iret
sbbb
nop
out
cs
in
add
sub
addb
arpl
add
rcrl
std
iret
test
mov
ret
daa
cmpb
sar
xchg
imul
push
xorb
jmp
pop
adc
rclb
or
dec
xchg
adc
adc
adc
mov
mov
dec
pushf
pop
and
jecxz
sub
inc
aam
hlt
mov
loope
xor
jg
or
xchg
add
into
mov
fs
fildll
xchg
or
and
jno
jecxz
cmpsl
hlt
aad
stos
mov
adc
cmp
xchg
in
scas
outsb
jle
cmpsl
push
ret
mov
test
sub
xchg
cltd
xchg
or
adc
and
xchg
or
popf
add
lods
inc
js
gs
jmp
jnp
bnd
mov
insb
pop
les
mov
xchg
mov
inc
icebp
pop
mov
or
aad
clc
or
lea
mov
push
jg
aas
jnp
sbb
or
or
int3
outsb
movsb
imul
cmpsl
adc
rclb
xor
lret
rorl
xor
push
cltd
mov
rorb
cmpsl
jns
xlat
jno
and
adc
mov
inc
adc
adc
jns
mov
rorl
add
add
addl
movsb
repz
mov
ja
andl
mov
mov
or
mov
jo
jl
test
xchg
mov
cmp
inc
xchg
or
or
adc
mov
mov
cmpsb
pop
mov
imul
test
cmpl
add
roll
mov
push
mov
or
fimuls
xchg
sbb
jge
pop
xor
or
mov
dec
add
and
mov
fnstenv
mov
scas
mov
lret
test
push
mov
mov
fmull
xor
mov
push
dec
mov
sarb
aad
roll
in
jle
test
popa
xchg
iret
fstl
push
xchg
test
sbb
cwtl
call
adc
aad
leave
lret
mov
dec
test
mov
pop
pop
mov
movsl
jecxz
dec
sub
mov
movsl
inc
andb
in
sub
ds
jl
mov
out
mov
jg
shrb
or
add
xchg
xor
xchg
ja
fisttpll
xchg
pop
data16
pushf
sbb
add
jne
and
lahf
mov
xor
ljmp
lea
xchg
mov
xchg
lcall
lods
add
push
lcall
and
aam
xchg
push
les
fmulp
inc
outsb
cld
andb
bound
ror
mov
outsl
cwtl
iret
sub
push
movsl
lds
mov
adc
mul
mov
or
cmc
pusha
push
cld
aaa
sti
aaa
cmpsb
loopne
inc
xchg
andl
in
push
cmp
loope
inc
jae
or
fdivl
fcmovnu
sbb
jmp
add
mov
test
loop
fidivrs
xor
adc
pop
mov
repnz
cmpsl
xchg
mov
mov
jecxz
add
cltd
lock
jle
int3
mov
or
cld
loopne
je
lret
lcall
andb
stos
push
pop
stos
out
popf
xchg
cmpsb
test
fwait
sbb
pop
out
rcll
mov
movsl
loop
decb
inc
xchg
xchg
data16
into
stc
xchg
pop
sub
add
inc
push
rclb
xorb
cmc
mov
mov
movsb
mov
jle
ss
shlb
or
xchg
imul
push
push
in
xor
or
decb
in
lahf
mov
in
jae
out
stc
adc
shl
sub
adc
imul
pop
pusha
adcl
push
popa
nop
ficoml
inc
add
stos
out
or
in
mov
or
std
xchg
adc
xor
dec
jl
rcrl
cld
iret
dec
das
mov
push
adcb
adc
or
and
pushf
imul
xchg
lods
xchg
push
jmp
rclb
add
sbb
pop
rcl
into
ss
push
sbb
mov
jb
int
dec
mov
js
pop
cmpsl
movsl
jo
xchg
fmuls
stos
cld
and
push
cmpb
mov
rcl
mov
mov
mov
dec
push
xor
ds
scas
mov
and
movsl
add
insl
leave
adc
xchg
imul
adc
rol
adc
test
jecxz
fxch
push
mov
push
inc
xchg
or
pop
into
rolb
rcr
scas
pop
mov
aaa
hlt
fimull
test
add
cmpsl
lret
mov
scas
jne
dec
dec
and
movsb
adc
push
imul
int3
dec
sbb
mov
and
add
pop
sub
xchg
test
cmpsl
or
and
push
mov
and
ficompl
aam
movsb
xchg
lods
fistps
movsb
je
xchg
addr16
mov
jp
or
repz
in
popf
mov
aad
out
scas
push
ds
jge
xchg
stos
jle
lret
cs
outsl
mov
pop
scas
adc
mov
push
dec
loop
test
push
cmc
mov
dec
xchg
out
mov
pop
xor
movsb
ret
lods
sahf
lret
fisubl
test
push
xor
add
or
outsb
fs
daa
xchg
and
or
dec
xchg
push
movsb
shll
test
and
mov
xchg
or
mov
sub
mov
sbb
rclb
add
adc
stos
pop
pop
into
xchg
add
xchg
cmp
int
std
dec
ss
ret
mov
lock
aam
push
cwtl
mov
nop
jno
or
mov
std
xchg
inc
add
add
or
mov
or
jmp
inc
out
ja
sub
mov
fwait
push
clc
aad
add
hlt
lret
test
rorb
add
adc
clc
mov
xor
aad
xor
rorb
sbb
movsb
xchg
sub
cltd
out
add
mov
or
mov
dec
dec
adc
leave
adc
push
mov
inc
cld
jo
cmp
or
adc
jmp
jg
and
in
enter
mov
es
nop
movsl
icebp
sbb
xor
lretw
into
ljmp
les
shll
xor
mov
and
roll
data16
enter
inc
mov
aas
dec
sahf
jp
shlb
lods
enter
jnp
in
cmp
das
jmp
and
cs
jmp
enter
nop
jmp
ret
pop
in
scas
lock
mov
into
jle
shlb
enter
xchg
mov
test
cmp
not
les
dec
jns,pt
stos
sub
movsl
jns
or
dec
xchg
xchg
mov
mov
inc
adc
ret
mov
imul
add
fadd
mov
lea
lret
in
pop
xchg
xchg
imul
jecxz
jl
xchg
imul
push
mov
lahf
or
test
outsb
in
fnstsw
test
pop
or
jp
jnp
cld
xor
lea
aam
jle
pop
add
pushf
cmp
inc
inc
push
pause
out
and
sbb
les
nop
aaa
adc
in
rcrl
popa
dec
lods
adc
sbb
jb
movsl
sbb
sub
clc
popa
xor
cmpsb
xchg
cli
nop
cwtl
mov
cmpsb
and
and
test
add
adc
jl
mov
cmp
je
push
test
mov
scas
outsl
mov
inc
xorl
or
jae
test
cmp
out
xchg
and
mov
pusha
jb
lret
and
cmc
popa
mov
hlt
mov
bound
and
sub
lods
sbb
rcrl
jmp
pop
sub
add
pusha
jecxz
inc
mov
test
mov
addl
imul
or
mov
xchg
sub
sahf
into
pop
mov
inc
jns
sub
add
lret
fs
stos
std
inc
sub
lods
mov
xchg
or
iret
enter
aas
and
jg
fildll
pusha
dec
inc
mov
cmp
sbb
jb
mov
xchg
fsubrl
int3
fcmovbe
test
imul
jbe
mov
push
out
or
jbe
push
mov
hlt
pop
or
mov
iret
bound
mov
in
or
mov
sub
adc
xchg
push
jmp
daa
mov
imul
insb
adc
mov
sbb
lret
clc
jmp
and
jo
into
push
loop
jbe
leave
sbb
dec
mov
mov
xor
fs
adc
stos
bound
inc
add
push
imul
dec
aas
xor
in
popf
ljmp
mov
mov
jb
or
xchg
scas
inc
mov
jbe
mov
inc
aas
lock
pushf
mov
jle
cmpl
les
pop
dec
popa
rolb
cltd
jnp
cwtl
test
pop
xchg
or
and
mov
scas
cli
cwtl
test
test
push
xchg
xor
pop
hlt
cmp
lahf
sub
dec
xchg
insb
cmp
pop
dec
cmp
adc
fcom
addb
or
xlat
aad
adc
in
mov
rclb
orl
mov
or
repnz
leave
push
adc
adc
push
lods
lods
js
mov
sub
cli
adc
ret
mov
pop
repz
add
stos
es
cmp
and
mov
aam
loopne
add
cltd
mov
int
stos
jo
push
adc
adc
imul
shl
pop
or
ficomps
aad
das
imul
mov
cmc
or
sbb
cwtl
scas
mov
clc
daa
xchg
fwait
iret
test
mov
aad
cmpsb
mov
rol
loopne
push
shll
fldcw
test
andl
push
dec
mov
xor
add
pushf
rcrl
ret
rorb
jmp
lret
cmp
xlat
loop
xchg
fcomp
test
add
dec
mov
lcall
push
pop
pop
adc
addr16
stc
divl
pop
mov
and
jno
or
jno
mov
lahf
mov
xchg
cltd
lods
loopne
push
xchg
shlb
iret
icebp
cmp
inc
or
fbld
insl
xor
ljmp
clc
fldcw
subl
adc
fbld
sub
fstp
inc
sbb
mov
lods
xchg
roll
or
sub
not
xchg
int3
jno
loopne
inc
mov
stos
pop
mov
inc
je
push
in
cmp
fmuls
jg
cmp
notb
and
popf
dec
cli
pop
fwait
incb
xor
pushf
fcomps
jle
movsb
enter
sbb
pushf
outsb
push
xchg
imul
xchg
outsl
cld
push
movsb
idivl
cltd
fnsave
jb
pusha
mov
add
pushf
cmc
cs
adc
bound
push
flds
std
dec
cltd
ret
mov
xchg
sub
cs
pop
jecxz
inc
sub
jb
cltd
push
adc
xor
loopne
inc
xlat
xor
fucom
jo
cmc
shrw
mov
les
ss
push
jno
inc
mov
fisttps
inc
mov
add
jmp
sub
mov
or
mov
adc
js
cltd
jae
cli
mov
xchg
jl
inc
gs
xchg
lods
cmc
lods
jb
xor
std
mov
mov
psubsw
mov
add
daa
nop
push
xor
xor
hlt
cld
add
cmp
or
ret
movsl
repnz
hlt
mov
sbb
push
pop
mov
inc
popf
movsl
negl
mov
addr16
ret
test
in
outsl
in
lods
xchg
mov
mov
adc
dec
jmp
das
mov
sbb
ds
mov
roll
ret
mov
sub
mov
clc
call
subl
sub
cmpxchg
loope
fnstcw
fdivrs
pop
jecxz
popf
imul
xchg
dec
stos
mov
rep
xchg
lret
cmc
and
fmuls
xchg
inc
inc
sarl
add
inc
test
test
xchg
hlt
loopne
dec
add
sbb
sar
mov
jno
jge
or
rcr
mov
mov
inc
cs
shl
movsb
mov
jge
not
nop
jl
inc
pop
das
imul
mov
test
rcrb
pop
or
xchg
xchg
hlt
cmpsb
pop
mov
insb
lahf
push
or
mov
or
pop
cmc
test
pushf
or
xchg
or
adc
aaa
jp
sbb
and
jl
sbb
ljmp
mov
mov
push
mov
mov
insb
cmp
push
faddp
sbb
pushf
pop
ret
xchg
leave
sub
add
aaa
push
xlat
aad
std
mov
and
sub
or
lcall
xchg
push
sahf
push
xor
xchg
movsb
nop
imul
rcrb
jno
push
mov
or
mov
adcb
les
fisubrl
shlb
cmp
sbbb
repnz
and
adc
rcrl
in
mov
jl
enter
int
bound
dec
out
push
mov
in
lcall
pop
xor
ljmp
popf
shrb
cmc
push
adc
cmp
add
test
fcmove
aad
or
push
or
shrl
nop
adc
movsl
shl
arpl
dec
xchg
and
cmp
rcrb
or
fcomip
xchg
push
sbb
sbb
xchg
call
cmpsb
shll
adc
fstl
mov
sbbl
loopne
insl
lock
clc
xchg
cmpsl
aam
dec
add
sbb
lods
mov
and
mov
out
test
sub
jp
enter
xabort
fcomi
sar
gs
or
lods
mov
ds
jle
xor
xor
dec
xlat
jae
pop
idivb
fsts
jl
or
dec
sbb
mov
test
pop
jle
adc
test
scas
ljmp
aaa
lods
cmp
cmc
mov
into
jge
or
outsb
mov
push
out
mov
push
movsl
push
inc
fisubrs
sub
incl
mov
inc
add
scas
in
mov
outsl
mov
test
push
or
gs
idivl
inc
inc
mov
jmp
xlat
inc
pop
jo
cwtl
sbb
nop
xchg
push
stos
rolb
cmp
lret
movsl
pusha
sub
push
jb
xchg
std
xchg
push
popa
jo
xor
cli
push
fwait
repnz
scas
or
shl
call
cmp
leave
mov
decl
or
ret
mov
fwait
sub
aaa
xchg
cmc
cmp
adc
lret
sub
into
pushf
jmp
mov
popf
loop
test
jle
rclb
xchg
xchg
ret
fsts
xchg
sbbl
into
test
xchg
cld
mov
lcall
stc
adc
mov
out
nop
stc
into
jge
push
xchg
mov
sbb
ret
into
xor
jecxz
xchg
imul
icebp
call
or
push
hlt
sub
lods
jl
ficompl
loope
cmc
lea
mov
js
dec
lods
shlb
xchg
or
movsl
jge
xor
and
andb
ror
ret
lods
fisttps
fnsave
call
lods
in
adc
fmul
movsb
xchg
mov
outsl
cmc
imul
aas
push
je
aam
pop
inc
aaa
mov
rcrb
rcrl
adc
and
mov
outsl
mov
jl
lock
in
ret
aad
lahf
inc
xchg
sbb
or
rol
xchg
mov
int3
mov
lods
or
or
xor
inc
xor
pop
mov
or
push
dec
push
cmc
ret
xor
push
adc
jo
aad
ds
scas
aas
mov
dec
xchg
mov
add
jb,pt
mov
in
mov
push
jle
cmp
pushl
xlat
cmc
enter
shl
pop
add
sarl
xor
shlb
rorb
push
inc
adc
les
or
add
push
xchg
push
pop
cld
repz
nop
inc
push
lea
enter
test
imul
pop
jo
scas
or
sub
sub
das
movsb
sub
sbb
sbbl
push
mov
mov
mov
addb
out
sbbb
jge
inc
sub
sub
sbb
inc
xchg
aaa
xor
xchg
das
xor
cmpsl
pop
xchg
cmc
sarl
loopne
lods
rcl
cli
call
pop
adc
inc
mov
out
mov
pop
mov
jno
jge
sub
mov
std
out
js
dec
rcrl
sbb
sbb
out
sbb
rol
andl
mov
mov
pop
add
push
clc
leave
mov
xchg
das
aas
out
rcr
mov
push
in
add
mov
sub
or
test
add
cmp
cmp
push
push
pusha
leave
add
bound
mov
cld
pop
jge
lea
test
cmpsb
fisubl
xchg
add
imul
aam
adc
dec
xchg
push
jg
sub
or
scas
dec
add
jns
shr
or
push
inc
rcl
mov
push
cltd
nop
mov
insb
bswap
dec
popa
and
fisttpl
call
lds
ret
pop
inc
test
adc
pop
test
jnp
jne
pop
mov
add
inc
push
movsl
pushf
test
and
jnp
ror
lods
inc
xchg
and
mov
xchg
test
xchg
add
inc
cmc
or
rcll
mov
clc
mov
test
out
test
aad
dec
xchg
fsubl
or
push
aam
xchg
or
fmuls
stos
out
dec
arpl
dec
sarb
fdivrl
inc
fs
xchg
mov
mov
mov
int
jmp
add
imul
loopne
gs
inc
stos
aam
mov
mov
mov
add
sbb
les
int
xchg
testb
imul
loope
push
mov
stos
fs
nop
sar
jge
mov
jle
push
xchg
jmp
inc
leave
or
lods
inc
mov
cmc
cltd
and
lcall
mov
add
and
test
dec
pushf
imul
lods
push
mov
lea
popa
push
and
sbb
add
fisttps
mov
sub
inc
js
inc
jnp
outsl
add
jb
push
cs
push
scas
sub
jp
pop
dec
cmpsl
call
xchg
or
sbb
lahf
mov
das
inc
lret
push
mov
test
jb
popf
xchg
mov
push
jle
stc
or
hlt
loopne
or
aad
adc
adc
inc
popa
ret
jmp
and
cwtl
sbb
xchg
shrb
inc
lcall
jbe
adcb
popa
xchg
dec
mov
maskmovq
idivl
roll
je
mov
ds
gs
scas
imul
rclb
inc
jmp
ret
or
pop
ds
mov
ds
inc
xchg
cmc
mov
mov
inc
cmp
test
popa
pop
or
jmp
cli
lret
data16
int
shr
mov
je
aad
mov
and
and
mov
rorb
push
cmpb
mov
xchg
add
xchg
jns
jge
fstps
loop
shll
xchg
mov
push
pusha
cld
test
mov
pop
insl
sub
pop
ja
and
mov
aad
lock
rorl
lcall
push
and
xchg
cmp
int3
and
call
out
push
mov
add
dec
insl
mov
jb
add
imul
pop
cld
pushf
xchg
lods
xchg
mov
std
xchg
add
adc
lea
push
cli
adc
shrl
jae
out
in
add
cmp
inc
lds
add
jge
shll
bound
outsl
mov
lods
in
mov
shrl
je
xchg
push
pushl
push
sbb
adc
adcl
mov
shl
scas
xor
in
add
push
insb
xchg
inc
push
js
mov
push
cltd
pop
mov
add
mov
shll
mov
mov
cs
and
sbb
lret
adc
mov
insb
je
mov
loop
std
mov
adc
or
sbb
mov
xor
mov
cmp
jnp
dec
data16
add
push
sub
popf
dec
mov
aad
aaa
das
push
ret
loope
std
pop
sbb
adc
nop
nop
shrb
fcomps
jne
jecxz
xchg
imul
ljmp
test
test
mov
sub
mov
and
jnp
mov
or
shrl
roll
pop
push
sub
cltd
or
xchg
mov
loope
test
rcl
push
and
and
lret
xchg
js
sarl
shlb
or
sub
mov
movsb
xchg
sub
addl
push
push
outsb
shl
fisttps
mov
pop
les
mov
jnp
ljmp
movb
pop
sbb
mov
mov
mov
std
and
cwtl
jl
push
add
das
or
test
jmp
sub
jle
push
dec
aad
mov
insl
movsb
mov
jl
adc
aad
adc
pushf
inc
hlt
mov
inc
mov
subb
cmc
xchg
hlt
mov
and
sbb
loope
movsl
addb
add
sub
daa
push
mov
mov
mov
inc
test
cmp
pop
cmpb
popa
cmp
pop
xor
cmp
dec
outsl
in
inc
xchg
adc
add
mov
push
in
jp
enter
xchg
aam
sbb
ret
fsub
push
std
insl
outsb
ja
jecxz
pop
outsb
mul
xor
in
mov
ret
aas
mov
mov
imul
or
mov
ljmp
pushf
gs
mov
cmp
ja
movsb
icebp
mov
mov
sub
xchg
aaa
sbb
inc
inc
or
or
dec
xchg
pop
dec
mov
movsb
cwtl
jo
push
enter
lahf
add
jne
fdivr
mov
pushf
ret
mov
enter
add
cmp
inc
jmp
fwait
aam
sbbl
xchg
pop
mov
cmp
gs
xor
push
mov
adc
cld
call
push
jne
inc
stc
int
xor
pop
mov
or
fimull
arpl
outsl
test
or
mov
mov
ss
nop
pop
cmp
and
mov
gs
enter
pop
popa
mov
dec
mov
push
lret
pop
xchg
mov
xlat
enter
pop
js
dec
loope
adc
pushf
pop
mov
pop
jo
repnz
add
clc
jo
sub
nop
mov
cmp
add
adc
rol
fisttpl
mov
adc
xchg
lret
test
dec
nop
shr
imul
push
cmp
arpl
fcomps
mov
mov
stos
call
jg
mov
adc
stos
arpl
mov
adc
out
scas
iret
aaa
add
dec
fcomip
pop
rorl
and
jno
mov
xchg
outsb
gs
rcll
push
dec
arpl
jp
mov
testl
xor
popl
inc
repz
mov
sar
push
mov
xchg
xchg
outsl
adc
cmpsl
or
loopne
movsb
call
insl
insb
xor
mov
mov
je
repz
icebp
fnsave
mov
dec
loope
xlat
rcll
push
mov
push
inc
inc
fildll
cmpsl
les
stc
mov
insb
test
push
xlat
sbb
dec
pop
lds
aad
add
arpl
lock
test
sbb
mov
jns
xchg
enter
jp
ficoml
xchg
pop
sbb
mov
mov
cs
outsl
subb
pop
and
cmp
nop
movsl
fisttps
and
fs
sarb
and
sbb
inc
cltd
sarl
sub
pop
sahf
fs
add
aas
jecxz
inc
mov
scas
in
orl
rclb
inc
scas
xor
mov
push
imul
xchg
cmpsl
loop
push
ja
push
or
stc
adc
dec
adc
mov
cwtl
into
aad
inc
mov
ja
xor
push
xor
ss
xchg
scas
es
adc
jae
movsb
sbbb
jnp
xchg
or
xchg
push
jae
sbb
aam
sbb
mov
lds
dec
jnp
scas
sbb
nop
mov
shll
hlt
fcmovbe
or
test
push
inc
test
xchg
js,pt
dec
mov
addl
test
or
hlt
add
xchg
sbb
stos
aam
lods
outsb
and
inc
inc
mov
ds
sarb
std
or
test
pop
dec
jmp
fcoml
adc
insb
add
mov
incl
in
shrl
or
push
adc
nop
fimuls
gs
scas
aad
hlt
and
nop
lcall
shll
adc
jg
mov
or
inc
push
or
les
mov
mov
leave
sahf
mov
ss
repnz
shlb
into
sarl
mov
loope
push
fbld
jbe
mov
mov
xchg
jne
or
xchg
push
push
iret
lret
pop
adc
shr
fldcw
sbb
lahf
aad
lods
lret
add
jns,pn
cltd
rcl
lea
cli
jbe
mov
icebp
or
dec
sub
sbb
movsl
std
int3
sbbl
fwait
xor
mov
cs
fildl
pop
bound
jle
mov
sbb
adc
nop
xchg
inc
mov
loope
xlat
mov
sbb
outsl
in
cld
sbb
ja
or
add
mov
or
pop
mov
xchg
fs
sarb
jg
jbe
add
rorb
cli
movsl
ret
or
or
jmp
xor
shl
jo
cmp
insl
or
outsb
and
jbe
jg
jle
or
mov
or
sti
popa
sub
push
test
mov
subb
inc
loop
inc
movsl
adc
dec
sub
mov
lret
or
or
outsb
movsb
xchg
pop
mov
mov
imul
adc
ret
scas
cmc
lea
cmc
enter
push
mov
push
aam
mov
mov
test
adc
mov
adc
shl
decb
dec
movsb
sub
mov
xchg
dec
imul
push
dec
test
inc
add
std
movsl
push
lock
mov
or
leave
pop
jg
jg
dec
pop
dec
jmp
cld
hlt
push
ret
push
in
sbb
mov
das
sbb
imul
fs
mov
dec
stos
sub
dec
jns
mov
dec
sbb
cmp
mov
movsl
cmp
cmpl
push
movsb
mov
imul
cmp
xor
xchg
bound
mov
mov
stos
xor
adc
imul
push
sub
stos
imul
inc
mov
insb
push
adc
enter
test
add
mov
and
cmc
test
movsb
or
insl
dec
add
xchg
mov
out
in
or
pop
pusha
push
fisubs
jnp
cmp
fiaddl
enter
cmpsl
xor
repnz
xchg
movsb
cmpb
jl
fisubrl
push
js
mov
outsl
xor
mov
ljmp
jne
ret
add
fisubrl
push
jmp
mov
test
adc
inc
xchg
and
mov
mov
mov
sti
fwait
enter
and
shrb
fcom
jae
xchg
mov
cwtl
int3
movsb
aam
and
adc
lock
fs
das
mov
aas
mov
jb
in
mov
mov
sub
mov
int
cltd
push
addb
call
mov
cwtl
or
leave
nop
inc
mov
mov
adc
ficomps
lock
aad
aam
jp
shrb
sbb
repz
gs
jecxz
hlt
xor
and
and
mov
xor
addl
cltd
les
push
fisttps
aam
jmp
shrb
aaa
cwtl
pop
rolb
imul
test
mov
rcl
sti
xchg
call
pop
jmp
xchg
lock
imul
mov
cs
psubb
jg
jae
out
mov
leave
loopne
dec
mov
out
inc
subl
nop
and
cmp
or
xchg
out
mov
cmp
clc
test
insb
cmp
aad
in
test
mov
out
cmp
rcr
pushf
push
cmp
jo
mov
mov
clc
jl
nop
sub
sbb
xlat
ljmp
leave
int
jl
xchg
sbb
pop
xchg
sbb
jns
xchg
xchg
jle
xor
push
inc
pushf
mov
into
mov
inc
popf
mov
pop
iret
mov
lea
sub
int3
jb
and
mov
sti
nop
lret
sbb
aad
vfrczss
xor
sub
roll
test
scas
enter
mov
lret
hlt
jmp
fdivs
movsl
mov
inc
roll
xchg
pop
test
inc
jle
mov
mov
bound
aam
add
xchg
add
ja
fsubrs
pop
xor
add
pusha
inc
add
adc
mov
cwtl
fnsave
jae
sti
dec
push
push
in
xchg
shlb
push
cmp
push
mov
mov
js
pop
adc
inc
sbb
insl
push
mov
pushf
mov
shl
mov
add
mov
stc
popf
jnp
push
fisubs
rcrb
mov
cmpsl
imul
stc
add
pop
dec
push
add
xchg
les
jg
sub
movsb
cmp
xchg
push
push
push
mov
stos
or
in
repnz
jge
imul
mov
mov
mov
stc
inc
adc
add
xor
xchg
inc
mov
cld
shll
lock
or
mov
cld
pop
xchg
adc
test
adc
xor
out
mov
pop
mov
inc
int3
cmpsb
jl
or
xor
mov
rcrl
lock
add
cmp
out
nop
pop
push
add
nop
xchg
jmp
lcall
addb
subl
rorl
pop
xchg
cmp
adc
std
js
mov
rcl
cli
adc
or
push
insl
push
leave
shlb
cmpsl
mov
lea
add
stos
cmp
xchg
lods
cwtl
sbbb
negl
cmpsb
mov
lcall
lcall
xchg
fnstsw
pop
stos
or
jge
out
pop
and
call
clc
scas
adc
imul
ds
enter
pop
stc
js
and
sbb
add
dec
push
imul
dec
or
shl
adc
jae
or
cmp
add
and
mov
fwait
or
xor
cld
das
dec
fsubl
push
lret
rolb
and
test
aas
push
int3
jnp
lock
movsl
pop
cmp
lea
fld
mov
mov
inc
sbb
jmp
cmpsl
stos
jae
aad
aad
adc
das
dec
adc
stos
jae
inc
mov
fistps
icebp
dec
insb
push
add
xor
out
inc
movsb
mov
sti
lret
decl
xchg
adc
cmp
mov
sub
les
mov
push
in
lods
addb
jmp
rorl
add
mov
xchg
call
fwait
mov
xor
sbb
add
sbb
jle
mov
dec
movsb
inc
push
mov
or
shrb
xor
dec
xorb
cmp
outsb
test
mov
or
lret
inc
sub
aaa
dec
adc
das
and
xlat
mov
cmp
pop
rorl
nop
mov
mov
decl
add
xchg
std
mov
push
sub
xchg
mov
mov
shl
cmpsb
cmp
fisubrs
xchg
or
mov
cmp
ss
push
lcall
test
add
lahf
fidivs
fcmovne
out
inc
mov
push
jmp
lods
or
mov
jl
cmpsb
stos
push
rorb
jl
or
mov
iret
imul
jg
ffree
pop
stos
inc
ljmp
int3
push
mov
push
popa
mov
jb
inc
xchg
pop
std
mov
adc
mov
fs
xchg
ret
fnstsw
push
jl
inc
test
imul
jne
out
add
xor
aas
pop
enter
out
rcl
rcr
or
push
movsl
pop
and
jo
dec
mov
adc
pushf
mov
adcb
sub
push
loop
fildl
push
push
shlb
enter
cmpsb
or
mov
adc
jp
lret
mov
imul
out
pop
int3
add
add
mov
in
ret
sub
in
mov
arpl
mov
dec
subl
mov
inc
test
sub
pop
popa
dec
or
adc
scas
mov
aad
loopne
sahf
test
pop
les
adc
lcall
lods
loope
adc
fwait
xchg
push
js
xchg
xor
insb
cltd
cmp
mov
insl
fidivs
lds
adc
lds
mov
push
or
sbb
dec
xorb
mov
xor
pusha
pushf
imulb
nop
clc
xchg
sub
jle
sbb
in
inc
and
push
mov
div
in
cmp
and
cmp
fstpt
dec
xchg
mov
popf
mov
stos
push
xchg
aad
ficoms
rolw
movsl
cmc
jno
inc
mov
movsb
push
imul
shll
jmp
xchg
push
into
pop
in
jmp
imul
addr16
xchg
sub
imul
pop
pushf
adc
shrb
mov
shll
inc
mov
lea
mov
mov
in
inc
pop
add
push
rolb
cmp
and
sahf
xchg
dec
or
push
mov
push
mov
inc
popa
jge
shrb
jmp
adc
shrb
enter
test
scas
pop
in
mov
add
mov
mov
sti
jl
pop
push
repnz
xlat
pop
dec
lods
shr
roll
push
inc
fisubs
test
fwait
or
pusha
in
mov
outsb
inc
and
mov
mov
lds
inc
jle
inc
mov
addr16
or
popa
sub
fsubs
jno
jp
mov
aam
shl
fnstsw
aam
cmp
shr
into
or
xor
jle
and
test
call
mov
mov
scas
cmp
lret
jg
sub
and
or
lods
sbb
cmp
xchg
shl
cs
push
lods
test
insb
adc
add
adc
pop
add
adc
sub
dec
imul
lret
sbb
fcom
les
in
sub
adc
imul
cmp
enter
inc
popa
mov
ret
sbb
inc
push
hlt
fstp
adc
lret
mov
lods
cmc
mov
inc
jle
and
rclb
inc
mov
rorb
shr
data16
mov
cmpsl
mov
adc
and
into
mov
sbb
or
iret
adc
sbb
js
push
xlat
xor
mov
leave
push
test
mov
ret
xor
fwait
adc
enter
sbb
in
adc
dec
push
sbb
imul
imul
loopne
fstl
loop
enter
lret
insb
xchg
subl
out
icebp
inc
mov
cmp
cmp
pop
sbb
ret
jl
mov
push
xchg
fcomps
xchg
ret
loop
loope
and
pop
lock
xchg
popf
and
stos
dec
cld
inc
je
jecxz
cmpsl
in
adc
nop
test
daa
repz
mov
in
xor
jg
pop
add
adc
add
push
movsb
rorb
and
mov
dec
ret
lret
push
cltd
or
cmpsb
mov
add
xchg
and
dec
outsl
mov
cld
jl
push
push
dec
bound
aad
push
pop
cwtl
add
jg
dec
inc
or
mov
dec
je
push
add
push
mov
mov
xchg
push
nop
cwtl
push
mov
or
push
xchg
dec
jae
pop
sti
sbb
sbb
movsb
popa
enter
pop
lods
jno
outsb
add
mov
imull
sub
movsb
mov
mov
inc
xchg
xchg
test
xchg
shll
add
push
jg
push
inc
mov
dec
in
xchg
pop
mov
or
shl
call
push
cld
xchg
lahf
push
mov
shrl
fisubrl
mov
push
push
shll
add
lea
and
fiadds
adc
or
and
sti
pushf
or
and
add
xchg
outsl
or
mov
repnz
pusha
das
sarl
cld
outsl
xor
cmp
sbb
lahf
not
lods
sub
call
std
clc
xor
js
lcall
xchg
or
movsb
orl
cmp
fisubrl
dec
test
lods
dec
mov
std
rcll
lea
mov
scas
shlb
test
mov
mov
clc
lods
test
outsl
mov
xchg
mov
inc
ja
push
arpl
arpl
js
sti
push
pop
leave
push
rcr
sub
test
lret
sbb
in
jnp
xchg
xchg
hlt
sub
jmp
cld
jmp
lea
insb
nop
xor
test
pop
rorl
sti
xchg
ja
mov
nop
jl
add
call
in
nop
dec
lock
clc
xchg
push
xchg
das
cmp
xchg
repnz
fsubrs
outsl
cmp
imul
mov
incl
cmp
and
test
insb
loopne
or
adc
add
or
test
test
add
orb
push
jmp
push
orb
pop
pop
fcomps
push
dec
xchg
inc
xchg
add
sub
and
dec
mov
adc
lret
or
rolb
shrb
adc
in
test
and
push
xchg
rol
js
sarb
mov
nop
sbb
inc
out
mov
mov
fadd
popf
xor
xchg
mov
int3
psllq
jb
popf
adc
sbb
in
mov
mov
fcmovu
or
pop
fcoml
popf
inc
rcl
push
subb
sbb
sbb
nop
jae
push
out
xchg
mov
std
dec
fcoms
xchg
xor
adc
es
clc
mov
push
rcll
pop
daa
pop
popf
test
cld
shlb
push
jno
es
sub
outsl
pop
jns
je
pop
adc
jns
or
mov
jns
mov
mov
inc
push
adc
imul
bound
in
jp
adc
shl
pop
push
out
jl
aam
pushf
hlt
rolb
sbb
sbb
shlb
cmp
cs
xchg
popf
or
mov
pop
scas
and
adc
rorb
sbb
lahf
stos
jbe
lods
add
ljmp
fnstsw
cmp
adc
loop
mov
pop
stc
inc
pop
inc
ds
orb
or
pop
mov
insl
lods
push
add
subl
in
xchg
push
dec
fucom
jbe
out
and
mov
in
fcomip
int3
lods
pushf
std
rolb
fisttpl
rcl
jg
or
sbb
in
je,pn
cmc
ficomps
adc
adc
aas
icebp
out
js
subl
and
mov
mov
or
jp
adc
aaa
fsub
mov
loopne
ja
push
jb
lds
fisubl
dec
jae
mov
mov
test
lods
cltd
adcl
mov
loope
push
inc
dec
call
mov
cmc
test
shl
pop
pop
dec
rcl
push
stos
repz
lods
ljmp
jmp
js
mov
and
cmp
mov
inc
ficompl
jo
jnp
test
cltd
out
js
add
outsb
test
push
fistps
hlt
mov
sbb
test
test
mov
fcoms
pop
mov
mov
xchg
inc
ja
shrl
jp
leave
mov
fadds
nop
ss
adc
in
es
ficoml
rclb
nop
scas
les
xor
andb
adc
jnp
hlt
leave
add
push
cmpl
xchg
popf
pop
cltd
mov
mov
in
mov
aaa
xchg
cmpsb
sti
dec
push
call
mov
sbb
mov
lds
out
test
mov
add
nop
test
lea
fwait
dec
orb
stos
jp
call
call
jne
push
int
pop
test
ror
enter
xchg
sub
lret
adc
addl
and
jno
incb
mov
sub
xchg
aam
sahf
fsubs
adc
push
sarb
sbb
xchg
mov
sbb
shl
cmpsb
sub
movsb
mov
nop
xchg
push
jnp
dec
rclb
fisttps
addl
push
cmp
scas
orb
xlat
in
out
xchg
sbb
add
push
shll
mov
popa
pop
ret
push
rorb
lret
outsl
jle
fwait
xlat
xchg
mov
aad
xlat
mov
filds
xchg
outsl
jl
pop
mov
ss
int3
gs
xchg
push
cs
cmp
sbb
cmpsl
popa
mov
mov
mov
mov
adc
xchg
stos
dec
leave
push
xchg
daa
xchg
inc
into
inc
add
push
test
xchg
mov
mov
xor
jge
incb
mov
fdivrs
outsl
and
jb
jae
mov
xchg
dec
out
xchg
std
outsb
movsl
outsb
mov
adc
xor
outsl
in
aas
mov
andl
insl
mov
and
hlt
and
cmpsl
cs
movsb
nop
shrl
cwtl
into
add
enter
mov
mov
stos
rorb
lea
and
jno
mov
mov
cld
mov
mov
mov
push
test
and
cmpsl
xor
leave
in
xchg
ljmp
xor
add
dec
jle
xchg
je
mov
mov
and
subl
in
xor
ljmp
cld
mov
push
andb
addr16
ret
mov
and
push
test
push
xchg
roll
xchg
shlb
or
adc
mov
repz
dec
cld
fcmovne
int3
into
push
roll
out
movsl
push
insb
cli
jl
and
test
hlt
mov
mov
cmpsl
xchg
adc
lret
dec
cltd
sub
cld
std
rorl
sub
out
lcall
add
add
mov
das
or
les
enter
inc
mov
jg
sti
mov
add
cmp
pusha
shrl
mov
xor
test
add
mov
lcall
mov
pop
lcall
icebp
lods
into
ja
shlb
and
cli
xchg
sub
repz
daa
ja
clc
cmpsb
adc
scas
fists
mov
leave
jge
mov
movsl
nop
mov
xchg
jp
mov
push
test
xchg
jge
mov
call
pushf
rcl
adc
lock
aas
popa
fsts
out
int
in
icebp
or
or
outsl
lods
icebp
decb
mov
shll
ret
and
dec
movsl
pop
fcmove
mov
pop
cmpsl
mov
movsl
lods
loop
and
nop
xor
push
mov
stos
js
jg
jmp
inc
inc
idiv
lret
das
dec
jmp
push
out
cmpsl
nop
mov
xor
iret
mov
adc
xchg
stos
dec
pop
xlat
cmp
das
adc
xor
xor
es
sbb
adc
das
fcomip
dec
leave
mov
add
mov
fsts
jb
dec
and
test
ret
add
mov
scas
test
test
push
push
cwtl
dec
push
adc
aam
pushf
sub
cmc
jb
mov
mov
pop
popa
add
mov
push
sub
cwtl
mov
cmp
adc
fistpl
cmp
and
nop
cmp
mov
mov
das
les
stc
jecxz
leave
out
ret
mov
add
shrl
xor
xchg
xchg
push
or
enter
aas
pop
fs
xchg
push
mov
movsb
fsubrl
jb
or
js
lods
mov
dec
cmp
xor
dec
add
add
lds
jmp
jmp
jbe
stc
pop
jns
ret
mov
cmc
inc
outsl
pop
cmp
add
xchg
sub
sbb
sbb
xchg
cmp
mov
outsl
adc
scas
imul
movsb
xchg
sbb
dec
int3
in
xchg
and
stc
sbb
nop
test
adc
test
enter
nop
mov
cmpsl
insb
cmp
gs
jge
xchg
insl
test
mov
or
outsb
add
mov
movsb
int
aam
fidivl
mov
jb
inc
sbb
push
cmp
mov
inc
sarb
pop
loope
enter
fdivrl
incw
iret
jle
xor
repnz
lcall
ja
cmp
xlat
lret
jae
gs
stos
push
mov
fnstcw
daa
xor
or
mov
mov
icebp
cmpl
jge
push
mov
push
or
or
aam
add
sahf
xor
push
in
std
push
loope
lret
mov
xor
je
mov
or
dec
and
aam
inc
adc
and
jge
jo
shll
mov
or
mov
or
sub
aad
lock
enter
mov
push
mov
cltd
repz
push
dec
shlb
aas
das
ja
call
in
jg
xlat
into
inc
cwtl
push
int
sbb
stos
stc
mov
sub
js
or
scas
mov
add
sarl
sub
nop
addl
xchg
mov
lds
ret
lods
lret
push
xor
andb
fnstsw
outsb
movl
xor
push
lahf
add
stos
mov
mov
mov
lods
out
loop
inc
test
mov
stc
mov
out
jo
clc
jmp
ljmp
xchg
mov
pop
stc
subl
push
aam
sub
out
mov
inc
ficompl
je
mov
std
pop
push
and
add
mov
movsl
mov
cmp
sub
or
and
add
je
mov
scas
test
xchg
mov
xchg
mov
ret
xchg
ret
push
lahf
cltd
xchg
xchg
imul
or
bound
mov
in
mov
pop
pushf
pop
stc
ret
mov
mov
or
out
repz
sarb
sbb
mov
inc
mov
adc
adc
pop
lock
sahf
xchg
test
push
aas
jbe
rcrb
aaa
jns
push
and
push
outsb
xor
imul
cmc
int3
xorb
xchg
int3
popf
test
int3
mov
nopl
in
sbb
pop
pop
mov
fisubrl
lock
or
xchg
mov
sbb
das
cmpsb
cmp
lret
xor
lods
rcr
mov
cmpsb
or
jle
or
sbb
in
mov
xchg
jle
std
hlt
xor
cwtl
jmp
or
icebp
ljmp
popa
push
lds
nop
inc
test
daa
flds
pop
dec
mov
push
sub
nop
add
push
mov
xchg
sub
sub
ret
sar
stos
loop
xor
sbb
xchg
pop
xchg
sbb
cmp
ret
loopne
shl
jnp
clc
sub
add
xchg
mov
subl
hlt
jge
loopne
lret
sbb
pushf
test
cmp
aam
sti
jp
ret
shlb
div
mov
xor
jecxz
cmpsb
xor
jl
fstps
in
add
mov
push
test
cmpsb
add
and
in
push
mov
cltd
pop
mov
pop
nop
and
cmp
sub
cwtl
adc
dec
pop
in
mov
and
cmp
cwtl
les
aas
jl
jns
js
sub
movb
rcll
aaa
and
mov
push
stos
pop
and
pop
pop
cli
outsl
xchg
jnp
aaa
pop
mov
xchg
or
push
aaa
mov
xor
jb
lret
addr16
pop
insl
int
sbb
sub
mov
or
stos
sbb
adc
lret
lahf
mov
ud1
repnz
add
cld
leave
ud1
mov
inc
aas
cld
and
and
push
jne
push
pop
into
movsb
jp
push
mov
xchg
mov
cltd
or
lahf
std
lcall
jecxz
mov
adc
pop
lret
rsqrtps
xor
out
cmpsl
mov
sub
mov
and
cmpsb
filds
jl
push
popa
pop
ret
je
mov
push
shlb
xchg
jg
and
sub
sti
mov
je
shll
ja
mov
or
xchg
mov
pop
inc
mov
inc
mov
out
dec
mov
ffreep
push
adc
jl
fdivl
inc
push
xchg
cmp
je
push
xchg
sbb
fcoms
cld
jecxz
xlat
cmp
mov
cmc
jg
add
mov
xchg
jb
stos
cli
insb
xchg
sti
cmc
jae
test
dec
int3
and
popa
decb
jmp
jbe
mov
mov
cmp
leave
ficompl
lods
jne
adc
xchg
decb
mov
fdivs
inc
mov
ljmp
mov
xorl
push
inc
or
mul
je
leave
lock
ljmp
or
jle
jnp
add
mov
leave
test
push
mov
enter
push
aad
xchg
adc
mov
lea
jno
inc
mov
add
cmc
add
dec
call
inc
cmpsl
cmc
test
push
dec
test
and
loop
or
push
xchg
add
cld
into
inc
adc
xlat
jb
cmp
mov
popa
fildl
insl
xchg
scas
cmp
stos
jns
push
or
dec
popf
fadd
dec
leave
popl
out
aaa
adc
insl
xlat
addb
in
in
pop
xchg
popf
out
mov
xorb
pop
inc
hlt
lea
xchg
in
xor
enter
jae
test
daa
fimull
lds
mov
jge
xchg
or
push
in
sub
in
xor
test
push
rolb
inc
mov
jns
movsl
cmp
xchg
enter
xchg
push
cmp
add
test
mov
in
les
jno
dec
pushl
xchg
sub
add
cmpsl
pusha
inc
and
cmp
xchg
mov
int3
mov
mov
push
aad
sarl
jg
mov
inc
sbb
bound
imul
cmpb
sbb
imul
adc
fmuls
idiv
loop
stos
xchg
jb
mov
test
rclb
cmp
dec
inc
pushf
push
jno
fadds
test
lret
fcoms
std
out
mov
push
imul
or
inc
pop
cltd
cmpsb
in
xchg
adc
push
fstpl
push
inc
cmpsb
add
lret
movsb
scas
mov
mov
jecxz
shll
jno
jns
and
jbe
mov
cltd
cwtl
imul
inc
int3
add
xor
addl
xor
pusha
aaa
ljmp
xlat
arpl
orb
pop
pop
mov
mov
test
in
cs
adc
pop
js
ret
into
inc
jg
and
xor
jg
cmp
pop
xchg
adc
jp
adc
std
out
aas
jns
inc
loopne
inc
fmuls
jge
enter
aas
push
les
imul
fisttpll
sbb
mov
xor
pop
cmp
daa
loop
and
int3
xchg
add
arpl
mov
push
jne
mov
imul
mov
insb
mov
loope
add
push
or
mov
les
push
idivl
and
sub
xor
fiadds
adc
or
aam
orb
ss
jp
scas
cmc
scas
push
lcall
scas
xchg
dec
mov
fbld
in
outsl
and
push
arpl
mov
cmp
or
cmp
rcll
adc
and
ret
fcmovnu
insl
inc
xchg
fldl
and
insb
jl
aam
xchg
mov
pushf
aad
xchg
push
jbe
inc
mov
rol
mov
xchg
dec
cmp
aaa
inc
jo
sbb
rep
cmpsb
ret
mov
lret
in
mov
aad
scas
jbe
mov
aam
and
movsl
dec
in
jl
popf
shl
rorl
ret
adc
mov
stos
and
addb
je
ret
lret
les
ds
sbb
jmp
or
cltd
mov
out
xor
in
xchg
dec
dec
mov
jge
add
ds
dec
roll
ror
nop
pop
mov
push
cwtl
lea
sarl
fildl
iret
lods
imul
xor
mov
dec
mov
jns
add
or
xor
jp
jl
sahf
push
gs
loop
rcr
inc
and
mov
imul
test
xchg
rcr
es
dec
fdivrs
xchg
push
subb
stos
fnstsw
aam
les
lock
cli
mov
pushf
cmpl
inc
push
push
inc
sub
aad
jmp
cwtl
or
aam
pop
or
andl
imul
icebp
pop
call
pushf
stos
inc
or
dec
push
push
jne
or
push
dec
xchg
push
sub
shlb
nop
push
jecxz
in
incl
jecxz
fsubrs
jno
int3
pop
dec
push
jmp
and
mov
push
nop
xor
orl
out
fwait
pop
fdivrl
xor
sub
nop
jp
mov
sub
dec
sbb
fnstsw
adc
pop
outsl
dec
jl
mov
test
jl
cmp
push
xchg
aad
mov
in
jl
test
mov
pushf
adc
push
fwait
or
mov
fldcw
bound
fstl
sub
loop
mov
add
cmc
cmpsl
ja
jo
pop
fisttps
lock
pop
inc
lds
mov
std
jno
rcll
mov
rcrb
lret
inc
insl
add
cmpsl
repz
mov
lods
enter
inc
pop
dec
lret
test
adc
aas
mov
mov
mov
adc
jle
popa
xchg
jns
lea
cmpb
popl
aaa
mov
dec
and
outsl
xchg
divl
mov
loop
out
loop
sub
rcrb
ret
sub
pop
or
adc
add
ss
rcrl
ja
inc
aas
test
adcl
jle
loope
mov
cld
jno
xor
ss
cmpsl
mov
repnz
pop
mov
das
in
cmp
dec
xchg
divb
or
adc
push
mov
sarb
inc
or
aas
fisubrs
mov
mov
aas
stos
add
jnp
dec
aad
inc
mov
adc
mov
ret
sub
cli
pop
cmp
lret
mov
add
out
mov
popa
cwtl
cli
dec
cmp
stos
nop
shlb
adc
xlat
stos
outsl
dec
dec
aad
imul
cltd
xchg
add
sub
mov
gs
pop
mov
or
cmp
mov
rolb
xor
add
mov
repnz
fists
test
add
xchg
iret
mov
jg
inc
sub
xchg
decl
mov
pop
hlt
mov
nop
into
mov
cltd
cmp
cmp
lods
inc
fistpll
hlt
mov
test
cmp
shlb
pop
cwtl
lret
push
pop
cmc
cli
aad
pop
cmp
nop
aad
cmpsb
in
jp
jp
push
stos
das
adc
test
add
mov
jl
dec
std
sti
or
hlt
stos
push
insb
sbb
mov
push
das
scas
cld
in
div
imul
add
jmp
mov
xchg
aad
pop
aas
mov
jp
popa
stos
cs
cmp
xor
add
lret
sete
repnz
adc
cltd
xchg
test
das
lds
add
stos
dec
xchg
iret
mov
out
dec
mov
into
sbb
sarl
add
std
movsb
mov
rcll
lods
jno
hlt
sub
cmp
std
decb
das
movsb
aam
xor
lods
leave
jl
call
lds
leave
jno
mov
loop
lret
es
inc
es
or
jmp
mov
cmc
je
arpl
rcll
repz
das
movsb
jmp
xlat
mov
mov
call
cmpsb
mov
lods
xor
push
sbb
xchg
push
fscale
fmull
jmp
lock
jg
xlat
and
test
dec
lret
and
xchg
stos
pop
dec
cs
adc
or
xchg
mov
mov
add
pusha
in
orl
push
fcompl
into
push
add
andb
cmc
mov
cwtl
in
jno
jae
dec
sahf
jne
les
cld
mov
push
in
lcall
scas
xchg
xchg
adc
cmp
loope
addl
subl
sub
push
test
aam
int3
ret
shll
xchg
dec
cwtl
xchg
shl
mov
cmpsl
pop
adc
fisubrl
add
xchg
push
add
repz
cmpsl
pop
test
lahf
rorb
enter
lock
lret
xor
adc
scas
jo
add
iret
adc
popa
jge
enter
aam
and
jge
push
cmc
mov
lahf
lods
out
roll
hlt
mov
xor
stc
xchg
jg
ja
xlat
push
sbb
cmpsl
add
movsl
jge
mov
rcl
mov
test
xchg
mov
mov
xchg
daa
std
sbb
add
xchg
repnz
inc
cmpsb
push
xchg
cmpsb
std
xchg
lock
or
divl
cwtl
outsb
fistpll
jns
int
adcl
cmpsl
lds
pmovmskb
ljmp
inc
mov
shll
mov
push
rcrb
shl
das
dec
scas
pop
adc
sub
or
enter
shlb
movl
movsb
xor
xor
push
faddp
xchg
in
pop
rcrb
adcl
fnstsw
mov
test
enter
flds
sub
mov
rcl
pop
fsubp
je
inc
loopne
cmp
push
jmp
push
push
and
jle
push
push
add
lret
mov
sbb
lcall
imul
hlt
jnp
cmp
jecxz
aas
rcll
les
fcom
notb
in
fcomi
scas
lods
dec
movsl
fdivs
xor
fwait
push
fdivs
lret
add
lret
aas
inc
pop
nop
sbb
fwait
into
mov
push
inc
adc
push
sbb
call
fbld
mov
add
int
pop
out
inc
mov
sub
pop
add
sbb
dec
pop
in
adc
and
xor
pop
mov
adc
aas
test
hlt
daa
mov
pop
mov
movsl
cmpl
stos
cmp
xchg
cld
sahf
mov
jp
test
mov
test
xchg
ja
xchg
fimull
pop
fsts
or
test
dec
popa
xchg
jp
and
test
dec
outsb
adc
rol
mov
xor
xchg
lock
mov
scas
lock
mov
inc
loope
dec
sub
in
fmul
mov
in
and
enter
mov
mov
add
bound
je
xor
rorb
jg
mov
xchg
push
mov
outsl
test
xchg
in
out
push
mov
dec
stos
lods
xor
es
test
or
shrl
lret
in
notl
jmp
mov
mov
in
aaa
repz
xchg
mov
dec
jge
jo
movsl
cmp
test
cmpsb
jl
pushf
push
adc
add
push
and
ja
push
loope
mov
idivl
inc
or
mov
les
into
add
push
outsb
imul
rcr
mov
rcl
in
cmp
xor
lea
int3
cltd
xchg
ret
adc
int
andb
mov
pop
fs
jno
fs
stc
call
sub
mov
pop
lods
xor
pushf
scas
mov
mov
sarl
push
cmp
pop
inc
pop
inc
cmp
push
mov
jl
or
test
pop
dec
xchg
xor
push
je
push
inc
xor
xchg
push
fcomps
xchg
add
mov
inc
mov
mov
pop
push
mov
pop
cmp
inc
mov
inc
nop
mov
shll
movsl
jne
mov
mov
fwait
iret
movsl
xor
jle
shr
and
sti
fmull
mov
or
stos
xor
jmp
mov
cmp
mov
loop
rorb
xchg
push
xchg
leave
fs
shll
mov
jae
push
or
out
dec
push
pop
fmull
rolb
insb
rolb
xchg
push
movsl
nop
je
adc
in
jnp
lcall
cmp
or
clc
xchg
iret
mov
add
lods
leave
aad
adc
stos
jge
lcall
xor
in
jns
fcomi
das
mov
fstl
xchg
fst
sub
out
cmp
jmp
mov
jge
add
xchg
pop
mov
jo
push
push
nop
cs
mov
aaa
jmp
xchg
xchg
xor
iret
cld
mov
clc
jne
sbb
popa
pop
cmpsl
mov
sub
mov
ja
xchg
repnz
stc
mov
jbe
test
mov
hlt
ss
rcr
insb
mov
xchg
hlt
ret
mov
mov
sub
mul
lret
push
dec
inc
enter
outsl
loope
lds
jmp
hlt
lcall
pop
test
in
fistpl
iret
cmp
mov
in
add
daa
and
and
ds
leave
pop
adc
ret
int3
pushf
ficoml
mov
das
sub
cmp
in
shl
inc
add
sub
mov
adc
pop
sarl
enter
fisubrl
movsl
dec
imul
dec
xchg
jo
pop
push
sbb
or
cmp
push
pop
fcomps
xchg
shr
xor
add
out
push
inc
xor
pop
add
xor
int
lcall
lret
or
sarb
daa
xor
jo
jb
xor
pop
pop
ds
sub
adc
xor
repnz
jmp
and
fistps
movsb
rcrl
sti
fs
shrl
jle
adc
movsb
hlt
aad
xchg
push
dec
pop
add
or
mov
lahf
scas
jbe
inc
test
aam
xor
mov
clc
les
test
xor
push
pop
jae
aad
imul
dec
mov
add
inc
test
pop
in
add
sub
nop
fimull
cmc
mov
cmp
add
test
in
lods
mov
xlat
pushf
jge
test
call
scas
or
mov
jo
ljmp
push
testl
int
mov
inc
test
dec
ret
xchg
imul
mov
mov
lds
das
es
in
clc
pusha
pop
test
imul
call
pop
mov
pop
mov
movsb
adc
int
dec
inc
enter
pop
mov
xchg
xchg
shlb
xor
push
dec
dec
test
mov
sahf
sbb
jl
xor
jl
pop
or
jae
inc
pusha
cmc
aas
pshufw
add
imul
inc
lret
xchg
notl
cmp
xchg
push
add
mov
hlt
xchg
xchg
shrl
jg
push
sub
out
inc
imul
add
aad
fiaddl
sarl
inc
imul
mov
pushf
add
into
pop
push
xchg
jae
clc
and
test
or
clc
or
mov
jo
out
sahf
iret
xor
test
test
enter
or
test
push
scas
mov
into
add
mov
mov
xor
es
pop
pop
sbb
lcall
lods
insl
xchg
xlat
stc
jp
test
jbe
int
aas
popf
ljmp
mov
hlt
push
ljmp
and
xchg
mov
adc
lods
jnp
inc
sub
and
jecxz
jg
mov
stc
shll
sub
shrb
mov
add
aad
sub
push
inc
xchg
cmpb
fsub
lods
fcoml
add
sub
das
cli
loopne
outsl
std
rclb
sar
mov
shrb
xchg
cmc
imul
imul
cmp
sbb
lcall
ror
rclb
in
movsb
pop
xchg
ret
in
adc
in
mov
add
fs
aaa
into
shll
js
inc
cwtl
push
ret
enter
out
push
pop
xchg
andb
dec
cmpsb
pop
sti
mov
xchg
int
push
mov
roll
xor
cld
add
push
push
xchg
dec
arpl
js
adc
dec
and
mov
xchg
rolb
add
jge
jb
and
scas
test
les
adc
lret
mov
movsl
jnp
sub
xchg
adc
mov
ds
ret
jl
push
insb
imul
shlb
push
xor
popf
fldenv
sbb
or
add
mov
adc
cli
mov
push
out
int3
rol
pop
shll
repz
orb
or
repz
sbb
mov
mov
mov
mov
jge
lds
mov
xchg
inc
hlt
mov
push
idiv
scas
rolb
adc
lds
mov
dec
mov
scas
push
xchg
repz
je
imul
bound
pusha
cltd
sbbl
mov
insb
mov
adc
je
add
incl
out
cmpsl
push
add
adc
test
lcall
outsl
out
mov
add
sub
jno
lock
rolb
and
lds
push
bound
lock
add
shl
out
mov
jnp
cld
test
xchg
or
jle
jl
sbb
loopne
xchg
or
inc
lret
mov
xor
mov
push
and
sub
add
stc
dec
mov
sub
xchg
ljmp
subl
inc
rorb
or
adc
and
mov
cwtl
loopne
jg
adc
adc
pop
mov
and
subb
lret
flds
or
xor
lret
icebp
movb
mov
fidivrs
push
pop
jo
adc
xor
cmpsb
add
or
push
repz
mov
cltd
adc
cld
or
shlb
mov
push
cmpsl
inc
outsl
or
mov
out
lds
pop
gs
lahf
scas
lcall
ja
inc
pushf
mov
adc
sub
jo
sbb
adc
jl
sbb
inc
and
aam
inc
rcrb
leave
stos
push
aam
clc
rcl
call
pop
inc
dec
imull
or
inc
in
movsl
mov
sbb
or
mov
fadds
cld
or
xchg
lock
fisubs
js
fsubrl
arpl
mov
cmp
push
pop
mov
clc
push
insb
sub
xchg
inc
sbb
xchg
xorb
movnti
inc
pushf
outsb
insb
xchg
addr16
test
dec
mov
leave
iret
pushf
les
or
scas
mov
test
mov
xor
dec
nop
mov
inc
push
test
xchg
push
and
hlt
sbb
xor
push
cmpsl
or
movsb
outsb
or
in
outsb
js
scas
mov
les
xor
add
imul
fildll
xchg
imul
inc
test
xchg
mov
jle
nop
or
mov
dec
and
inc
push
ljmp
push
dec
adc
stos
sbb
sbb
shr
pop
xchg
adc
imul
sub
pop
lcall
sbb
inc
sub
mov
inc
jmp
push
xchg
or
mov
rorl
daa
and
test
outsb
xor
xorb
rorb
sahf
movsl
jg
sbb
and
dec
in
mov
ja
in
mov
js
pop
aaa
lods
addb
inc
test
inc
movsl
push
push
mov
mov
ret
mov
inc
or
dec
push
xor
bound
cmp
addb
lahf
or
inc
sub
hlt
sti
mov
mov
add
mov
jle
or
and
test
dec
ss
dec
call
mov
xchg
lret
xchg
sbb
jne
mov
push
ret
out
mov
aam
mov
out
or
clc
mov
iret
xchg
jg
or
sbb
roll
xchg
sub
mov
push
mov
ljmp
gs
imul
push
jo
std
and
jle
lds
xchg
nop
orb
test
test
loop
shrb
sbb
and
mov
imul
fisubrs
adc
imulb
push
xchg
or
or
add
ja
pop
push
subb
jp
or
sub
sub
mov
faddl
push
mov
test
pop
int3
jmp
lret
sahf
mov
xchg
and
cmc
xchg
aas
adc
stos
in
das
or
out
sub
push
jnp
add
sbb
mov
cmp
nop
lcall
les
setp
test
mov
rcll
inc
rclb
mov
test
dec
rorb
and
sub
sub
movsl
mov
bound
pop
jo
cltd
shrb
pusha
sar
cmc
ret
jmp
inc
rorb
push
mov
call
push
xchg
out
lods
test
inc
test
or
negl
or
out
xchg
push
jae
das
xchg
pusha
cmpsl
rclb
popa
mov
ret
hlt
fsubr
into
lds
pusha
icebp
mov
insl
or
lods
push
test
inc
gs
mov
xlat
inc
mov
jne
push
xchg
movsb
xchg
insl
push
xchg
fcmovu
and
out
lds
insb
jo
cmc
pop
lock
mov
inc
inc
add
cli
ss
iret
xchg
sub
or
nop
idivb
sarb
sbb
and
clc
mov
lods
mov
dec
pop
push
dec
jge
sub
xor
mov
push
xchg
cmovp
cmpsl
xchg
data16
fadd
mov
pop
xor
pop
sti
lods
cmc
adc
mov
or
cs
clc
mov
pop
add
sub
pop
aad
clc
push
adc
outsb
mov
sub
nop
fwait
inc
fidivs
sbb
adc
shrb
add
loopne
test
mov
dec
fdivrp
dec
in
xchg
sub
sub
mov
sbb
mov
imul
or
mov
ds
mov
testl
pop
js
mov
imul
shl
test
rorb
ja
stc
and
jne
ret
inc
push
xor
mov
loopne
mov
sahf
js
daa
rcrb
jge
fnsave
xor
rclb
jb
mov
inc
cmp
mov
shr
out
cli
mov
lods
sar
xor
or
loop
out
stos
jle
add
cmp
test
push
xor
mov
dec
test
enter
daa
leave
inc
inc
xor
sbb
frstor
aam
or
add
aam
ljmp
cwtl
test
icebp
stos
dec
xlat
icebp
and
mov
adc
arpl
mov
lods
adc
shlb
lret
push
ja
shlb
adc
adc
jle
in
fistps
daa
mov
adc
cmc
jbe
enter
inc
movsl
cld
inc
loope
ljmp
pop
in
filds
mov
add
mov
xlat
xchg
mov
dec
mov
xchg
mov
test
js
inc
test
pop
mov
rcl
mov
fildll
movsl
aad
inc
mov
dec
mov
xchg
sub
sbb
xor
add
aad
int3
cmp
sbb
mov
sub
test
pop
push
or
enter
and
pop
and
push
mov
sar
xor
push
jg
cmpsb
scas
jbe
lock
xor
xchg
sub
cli
pop
or
lcall
insb
mov
stc
sub
les
rolb
insl
cmpsl
imul
xor
orb
lret
and
lods
ret
data16
jno
int
mov
mov
and
rolb
mov
sub
xchg
les
add
dec
pusha
test
mov
and
jg
enter
rclb
dec
mov
ret
test
sub
ljmp
sub
mov
xor
les
loope
mov
inc
dec
daa
mov
iret
mov
lods
ret
or
cmpsl
adcl
rcll
lret
scas
cmp
mov
inc
roll
mov
mov
movsb
mov
stos
sbb
rcrl
adc
mov
aad
data16
popa
lret
sahf
test
push
push
inc
inc
jno
mov
mov
mov
add
lock
cmpsl
add
add
fisubs
inc
mov
mov
int3
std
mov
mov
shlb
shrl
ficompl
cmpsl
out
pusha
rclb
lahf
mov
addr16
ds
dec
mov
movsb
sub
fldt
push
jle
pop
test
or
rorb
pop
dec
lret
dec
push
pop
scas
cwtl
jb
stos
int
cmp
test
outsb
push
inc
inc
test
setne
test
mov
shl
std
pop
mov
out
stos
add
insb
rorl
sbb
imul
jp
xchg
adc
cmc
dec
imul
dec
lahf
aad
fnsave
inc
mov
out
pop
dec
sbb
je
hlt
xchg
fildl
sarb
ja
aad
or
test
je
por
xor
out
jno
dec
nop
push
subl
sbb
dec
fs
xor
jge
mov
inc
jmp
nop
cmp
and
dec
mov
jne
mov
lea
lcall
mov
std
lds
pop
add
or
iret
add
fimull
cmc
pop
xchg
out
pop
je
lea
pushf
dec
xor
mov
movsb
inc
push
cwtl
xchg
mov
dec
add
sbb
adc
hlt
sub
mov
pushf
imul
xchg
test
mov
and
push
es
sub
inc
jl
push
xlat
push
jl
sar
sbb
rorb
mov
inc
jmp
clc
test
xchg
mov
je
adc
repz
cmp
xchg
inc
repz
inc
cmp
in
bound
adc
xchg
mov
xchg
lea
div
mov
pop
push
sbb
xchg
cs
or
addl
filds
inc
push
xchg
adc
push
out
int
or
pop
add
sub
rcrl
dec
and
sbb
mov
cmp
sub
adc
cmpsb
dec
lock
or
xor
dec
and
nop
dec
cltd
mov
leave
inc
imul
je
loope
test
je
sbb
pop
sbb
mov
es
push
and
lahf
repz
pusha
lea
jbe
shl
shll
popa
mov
loop
or
repz
sarb
scas
loopne
and
mov
and
imul
stos
mov
shlb
mov
imul
or
mov
rorb
push
mov
fldenv
int
stos
adc
fwait
stc
xlat
je
xor
cmp
and
std
ja
sbb
js
mov
hlt
movsl
inc
test
inc
sarl
mov
add
cld
call
and
xorb
xor
pop
dec
inc
fimuls
stos
xchg
imul
mov
mov
jbe
mov
xchg
cmp
stc
mov
aas
push
add
and
insb
sarb
sbb
stos
add
aam
pop
xchg
xchg
or
adc
pop
addr16
push
test
pop
sbb
call
or
jp
stc
push
push
jns
popf
icebp
or
cmpsl
js
hlt
cwtl
lods
pushf
mov
popa
popa
dec
sbb
jl
jne
je
ret
dec
hlt
lea
je
or
push
mov
add
xor
cwtl
testb
ljmp
jl
js
jae
movsb
cwtl
call
nop
mov
in
movsb
or
cmp
pop
outsl
sbb
jecxz
stc
test
es
mov
jmp
jle
fldt
sub
mov
fildll
or
shrl
xor
cmc
test
mov
mov
add
rclb
add
inc
lds
ds
mov
sbb
inc
rcll
fbstp
aas
js
cmpsb
xchg
mov
or
mov
ret
inc
or
add
loopne
rorl
add
stos
push
cltd
xchg
inc
jmp
jmp
xchg
dec
xchg
mov
mov
pop
xchg
add
das
fdiv
mov
cmc
cwtl
xchg
cmp
out
aas
fwait
ret
std
out
std
sbb
aas
lods
sbb
xchg
loopne
xchg
mov
incb
mov
cmpsl
std
test
or
xchg
mov
mov
into
xchg
or
mov
cmpsb
xchg
mov
stos
xor
adc
loop
scas
and
aad
sbbb
shll
add
std
test
mov
xchg
movsl
repnz
add
shl
nop
mov
dec
ja
jnp
nop
bound
aam
pop
sbb
inc
popf
test
popf
adc
xchg
leave
mov
mov
inc
add
push
clc
or
xorb
mov
enter
shrl
mov
mov
or
mov
inc
sbb
pop
insb
pop
xchg
test
pop
clc
clc
jno
popf
mov
xlat
outsl
scas
mov
add
lds
add
or
jl
jg
cmp
in
or
orl
sbb
je
sahf
push
fnstsw
add
jbe
popa
shlb
xor
jo
and
lds
mov
ds
push
or
test
nop
test
pop
nop
into
dec
jo
xchg
lret
aad
or
int
jmp
cwtl
fldenv
ljmp
test
mov
pusha
in
orl
fistpl
and
pop
data16
pop
pop
lret
push
xchg
bound
jns
sub
and
mov
int3
lods
test
loope
cmp
fs
pop
pushf
add
pop
push
lcall
scas
cwtl
pusha
jmp
out
xlat
lcall
lods
ja
mov
xchg
push
xchg
addr16
pop
adc
mov
sbb
shrb
lret
add
hlt
xchg
popa
push
pop
mov
dec
orl
enter
pop
fcoml
decb
adc
inc
mov
jnp
sub
fsts
inc
inc
movsb
test
adc
sarl
mov
mov
in
push
add
inc
xor
enter
sub
cmp
jmp
mov
test
push
cmp
push
adc
mov
loopne
lret
fsubs
adc
lock
xor
dec
addr16
ja
sub
mov
lods
and
mov
cld
and
inc
add
fs
dec
imul
sbb
jo
xor
xchg
nop
imul
iret
push
adc
pop
fwait
jge
rcrb
add
adc
hlt
mov
lahf
and
or
xchg
nop
aad
inc
stos
hlt
jmp
mov
iret
pop
cwtl
out
mov
rolb
shrl
mov
mov
jb
jo
movsl
sbb
add
mov
mul
scas
push
lods
into
mov
sub
shrl
test
sub
fnsetpm(287
mov
xor
jne
es
fildll
pop
inc
cmpsl
clc
gs
inc
mov
mov
inc
fdivl
jbe
cmpsl
sarb
push
xchg
aam
dec
sbb
cmpb
cltd
rol
stos
test
push
xchg
mov
leave
pop
fbstp
enter
nop
pop
mov
cmpsb
sub
mov
mov
mov
aas
adc
adc
iret
push
incb
mov
hlt
test
scas
push
mov
popf
movsb
mov
jnp
mov
subl
inc
push
add
cld
imul
loopne
sbb
fmull
arpl
adc
loopne
mov
lahf
mov
inc
push
cmc
mov
inc
cmp
fwait
ss
push
data16
into
jmp
and
mov
test
stos
mov
ret
pushf
mov
cmc
mov
gs
data16
mov
dec
xchg
push
jle
xor
insl
pop
xor
cmpsl
mov
sbb
sub
sbb
decb
out
push
aaa
add
dec
imul
xchg
rol
imul
lret
cmp
sub
mov
push
mov
popa
xchg
lods
add
mulw
shlb
adc
mov
testb
cld
jl
js
sbb
sub
jo
jo
pop
mov
into
pop
mov
dec
cmp
inc
imul
mov
loopne
mov
fistpll
xor
cwtl
xchg
push
and
bsf
push
add
mov
mov
cmc
adc
mov
lods
scas
lock
push
in
shl
jbe
test
or
fidivrl
test
mov
cmpsl
dec
cmp
sarb
inc
fidivrs
orb
jmp
inc
mov
rcl
cmpsl
scas
je
fstl
jns
add
fadds
leave
imul
fcmovnu
cmp
outsl
mov
cmpb
or
cltd
mov
xor
inc
cmp
outsl
insl
xchg
insl
stos
outsl
mov
mov
testb
pusha
mov
inc
mov
hlt
add
xchg
mov
nop
cltd
xchg
in
fisubrl
shl
or
add
test
scas
cmpsl
rol
movsl
test
aad
push
lahf
pop
cmpb
incb
jb
sti
cltd
fimull
fdivrs
shlb
jmp
inc
lock
mov
test
jl
dec
jg
jno
nop
mov
mov
mov
mov
mov
ffreep
fisubrs
or
ret
pop
jmp
in
or
push
mov
pop
out
inc
pop
fidivrs
push
cmp
ret
mov
repnz
test
jge
inc
cmc
pop
xchg
pop
icebp
mov
imul
fstl
cmc
sub
push
int3
cmp
xchg
int3
xchg
jmp
push
dec
jbe
pop
sbb
mov
cld
mov
push
std
xchg
pushf
in
xchg
inc
ds
adc
call
mov
pop
scas
outsl
mov
popl
emms
or
pop
sub
std
nop
cwtl
push
in
cltd
cwtl
aas
or
pop
imul
repz
out
hlt
jecxz
fimuls
stos
xchg
test
call
out
dec
adc
or
fnstsw
nop
test
mov
iret
movsl
mov
leave
xor
push
lret
mov
sub
sub
or
dec
xchg
pop
orl
and
pop
inc
push
adc
fisttpll
xchg
dec
mov
jnp
ljmp
test
mov
or
int
push
adc
jns
inc
enter
push
xchg
mov
mov
mov
pop
jmp
popf
fmuls
dec
mov
or
dec
jmp
mov
sbb
inc
adcl
xor
push
fisttpl
rorb
out
aad
jle
les
call
fbstp
and
mov
xchg
push
imul
aad
ljmp
popa
adc
mov
aam
shlb
mov
imul
stos
lea
add
mov
xlat
nop
ja
mov
dec
mov
out
xchg
aas
loope
stos
inc
out
sbb
pusha
leave
xlat
mov
lret
xchg
add
cli
sbb
lret
mov
jp
aaa
stos
inc
mov
rorb
in
nop
mov
xchg
in
cs
bound
mov
and
imul
dec
rorb
pushf
xchg
ret
sub
pushf
add
fistpll
mov
mov
inc
test
or
inc
cmp
inc
push
jmp
rolb
nop
loope
in
rcrb
enter
shrl
or
push
mov
xchg
cmp
dec
mov
rol
mov
push
insl
movsl
pop
mov
scas
mov
mov
xor
add
adcb
add
jle
adc
jl
mov
lods
in
movsl
out
inc
jmp
outsl
push
stos
cld
mov
ret
sahf
hlt
mov
fdiv
loope
and
sub
call
add
test
inc
xlat
mov
push
lods
daa
mov
scas
mov
mov
shll
roll
sbb
lea
xchg
pop
push
xor
insl
sti
arpl
bound
jl
xor
in
out
test
insb
vpshab
rorb
mov
dec
xchg
adc
sub
xchg
nop
cltd
popf
daa
aas
dec
or
test
and
xor
rcl
mov
cs
and
add
xchg
movsl
mov
lcall
add
or
push
cmp
ss
cmp
push
inc
jg
sub
adc
mov
loopne
rolb
and
mov
mov
mov
and
jmp
cmp
sarb
jns
sarb
repz
mov
clc
iret
sbb
and
mov
nop
movsl
sub
xchg
or
inc
inc
repnz
xorl
movsl
mov
aad
stc
mov
rol
add
pushf
shl
push
mov
rcr
js
fisubrl
fistl
les
mov
mov
push
negw
nop
hlt
or
aam
imul
addb
pusha
rclb
mov
hlt
mov
cmp
mov
movsl
push
cmp
ja
movsl
adcl
and
add
test
sub
or
nop
lods
xlat
xchg
inc
fs
cmpsb
iret
mov
push
adc
jle
mov
rolb
xchg
lods
in
pop
cmp
daa
add
xlat
dec
cltd
mov
sahf
xlat
enter
sbb
mov
sbb
dec
and
cmp
push
or
xchg
movsl
movsb
cmpsb
call
adc
lret
cmp
pop
shlb
lock
aaa
insb
mov
or
lahf
add
hlt
xor
mov
xchg
xchg
mov
xchg
or
cmp
xchg
xchg
mov
movsb
xchg
mov
movsb
mov
mov
cmpsl
mov
movsb
cltd
cmpsb
inc
sti
mov
xor
xchg
sbb
sarl
lods
lock
and
pop
inc
add
xlat
adc
jo
fsubp
leave
mov
jns
sbb
or
orl
mov
sarl
mov
int3
mov
xchg
nop
cmp
jecxz
mov
jae
out
or
mov
movsb
cmp
insb
and
movsb
add
mov
add
jp
lods
mov
hlt
roll
pop
sarl
aad
jnp
jns
cs
dec
push
push
nop
mov
mov
cltd
test
cmp
jne
push
mov
sbb
cmp
adc
xchg
cmp
jp
and
loop
test
hlt
into
movsl
mov
and
movsl
popa
mov
sub
imulb
insl
cwtl
aad
lret
and
dec
ficoms
aam
mov
add
jb
repnz
cmc
mov
lods
xor
jmp
inc
mov
div
scas
mov
sub
cmpsl
popa
test
out
loop
mov
xchg
lcall
dec
jns
out
jge
scas
mov
sar
out
aad
and
pushf
es
mov
jae
lds
mov
scas
addr16
mov
out
or
test
xchg
in
or
rolb
push
cmc
lcall
jecxz
aaa
nop
addr16
jb
inc
test
pop
push
rcll
dec
push
mov
or
mov
call
pop
popf
or
jne
aad
test
pop
inc
pop
xchg
scas
pop
push
xchg
cmp
add
stc
mov
gs
mov
int3
pop
les
mov
cmp
ja
sbb
cmp
sub
push
and
cmpsb
pushf
or
or
popf
movsl
adc
push
add
lds
mov
aad
jl
lods
aas
orl
pop
adcb
xchg
pop
inc
xchg
cmc
jo
les
rol
pop
lds
stos
pop
out
pop
ret
insl
push
and
scas
sub
data16
or
adc
or
lock
add
mov
imul
xchg
mov
or
add
push
fcoms
add
xchg
add
adc
add
jp
or
mov
mov
sbb
mov
xchg
leave
nop
xor
inc
mov
inc
fwait
movsb
pushf
xorl
nop
stos
je
xchg
icebp
push
sbb
dec
sbb
std
pop
dec
cmpsb
lock
jb
cmp
sbb
xchg
cs
or
jnp
shlb
sbb
lcall
xchg
sbb
stos
inc
sarb
mov
lret
adc
jnp
adc
xchg
dec
adc
fs
pop
push
xchg
xlat
scas
lcall
and
adc
dec
add
jo
hlt
pushf
or
or
xchg
roll
mov
ljmp
xor
mov
jge
int3
lret
pop
mov
dec
mov
inc
mov
mov
mov
test
and
test
adc
rcl
xchg
lods
inc
pop
lods
aad
xchg
jae
push
fwait
lahf
inc
push
popl
xor
pop
icebp
push
mov
adc
in
xchg
cwtl
jl
mov
dec
outsb
ror
mov
aas
outsl
xchg
mov
lock
add
stc
lods
adc
movsb
mov
adc
call
pop
outsl
movb
or
sub
inc
mov
inc
or
in
sarl
ljmp
lret
sub
or
aam
ja
sbb
int3
mov
push
lahf
or
xchg
nop
cld
outsl
loop
std
gs
pop
mov
mov
rclb
mov
xchg
mov
loope
xor
mov
pushf
fadds
testl
test
or
in
push
add
aam
cwtl
push
or
lds
aam
ret
sbb
sbb
pop
and
push
ds
sbb
inc
xchg
test
mov
cwtl
shlb
hlt
add
jl
fcoml
into
push
sub
nop
cmpsb
popf
rcl
daa
push
dec
insb
enter
inc
stos
cmpsl
loope
rorb
sub
daa
xor
cmc
mov
mov
test
mov
cmp
aaa
adc
push
adc
mov
fidivs
jle
mov
add
jne
iret
mov
std
cld
sbb
mov
dec
repnz
fsubrp
mov
div
inc
sub
ret
scas
js
pop
pop
inc
out
cmpsl
test
jno
jo
out
es
push
push
sub
mov
popa
xchg
push
int3
out
in
xchg
add
daa
std
and
vcvtps2dq
cmpsl
imulb
mov
xor
cwtl
movsb
les
stos
popf
push
ljmp
icebp
nop
jae
cwtl
xchg
mov
cmp
les
xchg
mov
mov
xchg
das
fs
stos
or
pusha
and
xor
lock
add
pop
call
pop
jbe
push
fldenv
xchg
xchg
and
sbb
push
int3
jp
ljmp
aaa
fwait
loop
mov
xorl
add
mov
sbb
fnstenv
jb
iret
push
lock
ret
into
hlt
ficoms
mov
into
cmpl
push
jo
fidivrs
adc
insb
sbb
dec
aam
push
repz
adc
and
push
loop
xlat
leave
cmp
inc
fisubrs
mov
int3
push
enter
cmpsl
stos
jno
mov
mov
jne
sbb
pop
fdivs
and
jno
aam
or
movsl
in
jnp
in
lods
inc
int3
mov
mov
mov
mov
sub
sub
movsl
movsl
xor
cld
int
push
mov
fsubrs
cmp
fs
mov
enter
and
pop
push
aad
fstl
adc
add
or
mov
adc
rolb
orl
lcall
jbe
iret
sub
int3
nop
adc
movsb
loopne
pop
pop
inc
mov
fcoms
push
les
or
cmpsb
lods
scas
in
aam
lods
adc
xchg
mov
subl
mov
lcall
and
add
push
jmp
sub
add
adc
cld
lock
pop
adc
andl
add
xchg
loop
movsb
rcrb
out
not
lret
ret
push
cs
aam
mulb
and
adc
in
nop
xchg
enter
in
sbb
pop
pop
nop
mov
loopne
sti
dec
mov
push
fsubrs
mov
js
insl
mov
mov
call
fwait
in
xchg
mov
or
addr16
cmp
mov
pop
push
and
iret
adc
call
daa
pop
decl
mov
out
enter
cwtl
xor
out
out
xlat
sub
cmp
cmpsl
shl
in
int3
lret
jns
xchg
pop
shll
scas
filds
test
push
mov
jecxz
add
aad
mov
jp
cld
push
loop
ficomps
push
rorb
clc
faddp
cmpb
dec
std
dec
xchg
jbe
lock
fisubl
cld
lds
mov
dec
and
xchg
cs
loop
ret
add
jl
dec
movsb
mov
fs
movsl
nop
movsb
nop
into
mov
cmc
test
xchg
push
imul
sbb
or
mov
xchg
adc
in
adc
jmp
sbb
call
lret
push
aas
or
pushf
mov
xlat
stc
hlt
mov
lods
sbb
inc
mov
cwtl
sarb
std
fs
lods
xchg
enter
rolb
insb
sbb
loopne
mov
adc
insb
mov
fcoms
mov
loopne
fists
cmp
xchg
mov
mov
lea
mov
lret
cmp
cs
lea
and
lret
pop
mov
rolb
cmp
add
xchg
addb
cmp
lods
int
sbb
jp
pushf
and
xchg
cmp
shll
or
jmp
mov
pushf
incl
fadds
xchg
fsubs
mov
lods
cmpsl
clc
cmpsl
dec
lods
push
enter
call
dec
imul
or
cmpsl
imul
mov
out
out
shr
push
popa
push
daa
decl
sarl
mov
insb
fwait
stos
sbb
js
lahf
cld
cmp
pusha
xchg
jnp
dec
push
test
movsl
imul
icebp
and
push
jbe
movsb
mov
sbb
pop
mov
mov
add
and
imul
bound
neg
xchg
cmpsl
cmp
inc
jo
pop
test
movsl
loop
xchg
fs
out
push
jo
repnz
je
inc
mov
hlt
iret
xchg
insl
int3
xchg
mov
shr
adc
xor
inc
push
mov
arpl
int3
jecxz
and
mov
shl
mov
add
nop
cmpl
adc
pusha
unpckhps
inc
movsb
mov
or
jl
stos
insb
push
lods
push
add
push
adc
pop
lcall
inc
or
push
xchg
dec
sahf
std
mov
lock
andl
lcall
xchg
lods
fstpl
cli
loopne
and
inc
jmp
shll
jecxz
adc
mov
das
lock
adc
mov
std
subb
shrb
aad
xor
insl
stc
mov
lds
dec
jecxz
cs
cltd
push
leave
jge
fstps
aad
push
pushf
fs
ret
adc
pushf
push
or
test
adc
inc
add
mov
test
dec
testb
aad
add
mov
nop
add
inc
fmuls
xchg
jmp
ds
mov
mov
adc
inc
adc
rcrb
aam
loopne
pop
cmc
sahf
or
add
rclb
jecxz
ret
sub
push
push
sahf
repnz
mov
jae
mov
sub
sbb
xor
dec
dec
dec
jbe
sbb
sub
add
mov
or
mov
inc
or
cmp
enter
or
pop
lds
mov
insl
mov
inc
xchg
int
outsl
faddl
mov
xchg
sub
and
mov
test
inc
bound
mov
adc
jl
mov
nop
mov
test
adc
push
inc
xor
and
fs
sbb
or
cmp
mov
or
repz
push
dec
jbe
inc
mov
lret
jmp
push
sarb
ficompl
rol
add
rol
inc
push
shll
inc
lcall
fldenv
hlt
push
dec
push
lock
jmp
ja
xlat
call
int
dec
inc
pop
push
loope
shll
int3
push
ljmp
int
in
ljmp
inc
cltd
test
cmp
lea
aad
mov
xchg
shll
aam
mov
add
idivl
int3
imul
inc
and
push
mov
jns
sub
mov
test
fists
test
pusha
lret
movsl
and
addb
add
or
ret
adc
inc
dec
adc
cltd
stos
sti
fwait
add
fmul
xchg
es
cli
cltd
or
iret
inc
shlb
add
xor
int
pop
sbb
outsb
mov
mov
roll
insl
pop
daa
ret
add
add
push
fs
cmp
adc
in
test
push
fmuls
sbb
les
aam
mov
push
les
and
xor
mov
xchg
enter
mov
mov
nop
shll
mov
mov
insb
xor
push
or
mov
pop
or
xchg
mov
mov
dec
lea
mov
aas
mov
add
mov
xor
push
lock
xor
lret
sub
mov
adc
push
or
testl
cmp
outsb
pushf
push
fs
lock
push
lret
cmp
pop
iret
sbb
mov
mov
xorb
dec
fiaddl
xchg
insb
pop
mov
scas
or
push
aad
je
xchg
xor
or
into
add
mov
push
mov
dec
jb
test
test
xchg
cmc
fbstp
pop
xchg
cmp
push
mov
stos
xor
outsb
jns
je
pop
jle
sbb
dec
or
clc
dec
repnz
add
inc
jge
inc
js
insl
adc
loop
dec
movsb
test
push
sub
test
pop
and
loope
adc
xchg
inc
push
xchg
fildl
loop
xchg
sbb
int
dec
push
decb
fcmovu
mov
push
or
jnp
call
and
push
add
jno
ds
cmp
jae
test
mov
add
mov
add
mov
or
jno
xlat
js
inc
je
imul
in
in
xor
xchg
les
mov
in
push
nop
and
adc
jo
xor
push
push
mov
xor
fwait
mov
les
fists
xchg
leave
xlat
sub
repnz
test
xor
jno
in
cmpsb
aam
mov
push
lea
in
bnd
subb
jo
shrl
lret
lods
xchg
decb
pop
popa
int3
lret
stos
imul
jo
sahf
fmull
mov
jno
mov
imul
outsl
or
loop
cli
adc
pop
enter
push
pushl
shrl
ret
inc
imul
cld
mov
mov
push
sub
mov
cmpsb
dec
cwtl
inc
aaa
lea
adc
xor
stos
or
mov
rol
stos
loop
iret
int
nop
imul
movsl
pop
fimull
lcall
enter
loope
xchg
fcompl
iret
jae
fdivr
sarl
lods
xlat
sbb
hlt
hlt
lahf
push
mov
popf
ja
sbb
shlb
xchg
or
push
ror
cmpsl
pusha
cwtl
adc
rorb
into
test
adc
lds
and
add
fbld
into
pushf
pop
pop
imul
mov
jg
movsl
cmpsl
mov
popa
push
lea
sub
pop
insb
hlt
movsl
mov
inc
inc
mov
call
fwait
roll
aaa
mov
fisttpll
aam
inc
jo
mov
pop
xchg
inc
rolb
inc
cld
inc
jecxz
clc
nop
in
out
mov
sahf
in
rol
out
fstl
adc
mov
inc
lock
ljmp
mov
inc
mov
loop
stc
add
aam
ljmp
fldt
lds
dec
xor
mov
lcall
imul
addl
rcrb
ret
cmp
sub
sarl
xor
scas
nop
cmpsl
aam
cmp
push
jbe
test
loopne
stos
push
dec
cmpsl
mov
ror
into
add
popa
and
mov
popf
call
sub
idivb
rclb
sub
mov
daa
shl
mov
ret
xor
inc
nop
mov
inc
cmpsl
and
xchg
sahf
das
dec
adc
aam
jno
out
xchg
or
fmull
xor
loope
xchg
sub
cmpsl
loope
dec
inc
xchg
ds
cwtl
adcl
addl
inc
xchg
mov
push
jl
leave
subl
dec
mov
dec
xlat
push
push
shrl
movsl
and
jno
cmpsl
pop
les
xlat
push
add
add
call
lret
fistpll
shl
cmp
inc
icebp
stc
jg
and
dec
fucom
push
iret
hlt
xchg
cmc
addb
jne
fimuls
js
pop
lret
testb
imul
and
dec
test
lret
movsb
leave
xchg
call
int
xchg
mov
test
stos
inc
hlt
mov
sub
sub
out
ss
mov
and
dec
lahf
mov
jge
addb
mov
xchg
or
loope
xlat
mov
or
std
nop
push
lods
mov
dec
mov
cmp
push
mov
sahf
mov
shrl
xchg
cli
push
inc
or
and
cmp
hlt
mov
lods
cmc
cltd
push
mov
ret
mov
jle
cli
fildll
cmpsl
call
out
ret
mov
add
ljmp
sub
lds
popf
ja
dec
add
add
notl
sbb
fmuls
lret
out
js
cmp
mov
aam
aad
add
jne
enter
call
imul
mov
jb
mov
sub
dec
sbb
cmp
or
jnp
inc
jecxz
test
or
rorl
cli
add
mov
push
nop
mov
test
push
ss
fstp
std
in
lock
stc
mov
loopne
jb
int
lods
mulb
movsb
scas
ljmp
fs
push
js
jb
sbb
aad
insb
dec
mov
jecxz
fidivs
dec
lods
push
adc
lcall
lods
cmc
xchg
mov
mov
sub
cltd
mov
cmp
push
movsl
les
mov
mov
push
lcall
clc
mov
cmc
xchg
dec
int3
scas
adc
pop
pop
ljmp
jb
lods
cmp
jg
inc
mulb
shrl
adc
js
cmpl
aad
jg
mov
flds
fld
adc
test
pop
enter
xor
movsl
movsl
add
fsubl
dec
pop
adc
imul
pushf
call
pop
cwtl
inc
add
mov
stos
add
rorb
jecxz
enter
add
inc
stos
push
pop
arpl
fucom
mov
adc
lahf
jmp
mov
into
cmp
mov
out
test
xchg
cmpsl
push
mov
daa
in
enter
aam
inc
lcall
cmp
add
out
xchg
hlt
test
cmpl
push
in
je
cmp
andb
daa
loop
daa
rcrb
mov
mov
shll
jae,pt
stos
mov
jp
idivl
push
inc
cmp
sbb
shrb
and
xorl
cmp
adc
incl
inc
jne
add
pop
sub
xlat
and
mov
sarb
lods
xchg
or
orl
orl
lcall
and
icebp
out
nop
add
es
pushl
push
sub
sub
fdiv
xor
pop
xchg
pop
scas
arpl
and
inc
ljmp
adc
push
icebp
int3
xchg
icebp
add
shrb
dec
es
hlt
imul
jmp
jge
incl
mov
out
insl
inc
sti
imul
sub
aam
inc
nop
xchg
dec
dec
mov
cmpsl
imul
and
aaa
and
loopne
bound
xchg
stos
cmp
cmp
bound
sarb
iret
adc
addr16
push
mov
inc
inc
or
scas
icebp
or
xor
or
pushf
addb
push
test
lret
pop
outsl
push
sub
bound
and
cwtl
mov
stos
ds
push
adc
adc
in
add
test
sbb
sbb
cmpl
xchg
stos
mov
inc
xor
repz
lret
xchg
repnz
dec
mov
or
or
out
xchg
jle
pop
dec
cmp
add
inc
cmc
mov
imul
sub
clc
pop
addr16
jle
jp
jne
sbbb
into
xchg
jb
nop
or
mov
rolb
test
xchg
aam
call
cmc
mov
hlt
cmp
jnp
or
icebp
andl
and
adc
push
imul
and
fsub
pop
push
lret
in
jbe
sahf
cmp
mov
mov
mov
stos
cmpsb
leave
xchg
mov
ret
cwtl
mov
mov
fdivr
jge
hlt
xchg
dec
and
mov
das
faddp
and
push
xorb
jp
xchg
cld
subb
popa
pop
mov
inc
das
dec
dec
xchg
in
roll
fwait
cmc
mov
clc
push
pushf
mov
decb
test
mov
mov
ret
mov
add
mov
pop
nop
pushf
ds
xchg
imul
mov
ret
cmp
sub
enter
or
cs
cmc
jecxz
test
jle
ret
repz
inc
inc
dec
hlt
mov
repz
nop
pusha
and
movsl
idivb
push
imul
loope
or
xchg
lret
cmp
sti
adc
xlat
adc
mov
cmpsb
daa
rclb
notl
xchg
push
xchg
mov
xchg
test
addr16
in
xchg
jnp
jge
pushf
imul
adc
mov
aam
je
xlat
outsb
mov
lds
aad
mov
setns
ret
mov
inc
out
ret
add
jbe
loop
aas
dec
lods
xlat
hlt
pop
clc
into
mov
int
push
xorl
push
push
lret
int3
ss
adc
rclb
jb
enter
cmp
in
lods
xor
mov
pop
mov
ja
movsb
push
jnp
mov
fisttpl
rclb
push
inc
cwtl
fcomip
ss
adc
mov
lds
sbb
pop
jp
and
into
push
popa
jno
inc
lods
push
adc
add
hlt
mov
cld
ror
enter
pop
faddl
mov
rorl
negl
je
or
jmp
enter
in
jnp
jecxz
sbbl
ljmp
dec
fdivs
stos
loope
notl
or
inc
leave
int
lret
cmp
fiadds
rcll
and
or
ret
lret
xchg
dec
orl
out
ror
mov
clc
js
xor
xchg
iret
cmc
dec
add
aad
mov
clc
stos
mov
or
sbbl
pop
ss
lock
and
movsb
fbstp
or
lea
ja
xchg
pushf
les
cmp
mov
std
xchg
mov
or
jbe
xchg
lahf
orl
arpl
inc
jnp
add
test
dec
adcl
and
mov
jl
mov
xor
shl
inc
into
test
mov
mov
inc
scas
rolb
div
ret
out
jae
xchg
into
push
das
movl
rcll
dec
mov
sbb
push
sbb
mov
pop
in
push
adc
pushf
incl
mov
mov
in
mov
adc
and
sbb
test
mov
mov
push
aad
and
push
mov
add
xchg
cmp
sbb
mov
xorb
and
and
nop
cwtl
or
adc
xor
ret
mov
pusha
and
xchg
cmc
xchg
cwtl
mov
or
mov
cli
xchg
repnz
cmc
fistl
icebp
test
stos
rorb
or
push
movsb
lcall
sti
cmp
and
popa
lock
pop
or
cltd
xchg
ret
test
jge
xchg
adc
scas
loope
int
imul
add
xchg
insl
out
imul
push
pop
movb
adc
test
add
dec
fsubrs
in
jo
stos
dec
fidivrs
mov
sarl
div
inc
xchg
jns
xor
mov
in
fbstp
into
inc
push
imul
test
mov
push
and
mov
rolb
popa
pushf
lods
jns
mov
add
js
xchg
dec
adc
mov
sub
ds
dec
out
shll
cmpsb
sub
aad
rolb
sbb
lcall
xchg
jmp
add
push
sub
adc
incb
aas
fidivrs
aad
or
cmp
xchg
adc
or
in
sbb
xchg
enter
scas
sbb
mov
mov
lcall
enter
rcl
xchg
mov
rorl
jp
cld
pushl
cmp
roll
rcl
add
push
rol
adc
adc
int
aaa
je
xor
paddq
mov
enter
xlat
and
adc
in
in
adc
loope,pt
rcl
in
cmp
rclb
loope
enter
ret
rcrl
ret
hlt
dec
or
xchg
sub
sub
and
rcll
das
in
das
adc
mov
pop
mov
ja
jno
cmp
jge
mov
jecxz
pop
or
cmp
mov
cmpsl
stos
add
js
lret
test
cwtl
popf
shl
lock
inc
push
cltd
mov
ljmp
test
out
mov
lods
dec
dec
aam
xor
mov
fsub
or
nop
call
test
and
mov
sub
jg
addr16
jbe
enter
clc
xchg
ljmp
xchg
sti
add
mov
cmp
aad
and
aad
hlt
imul
ret
dec
xchg
cmp
test
js
icebp
push
jae
scas
jns
mov
xchg
inc
cs
and
adc
and
mov
dec
into
jne
fldt
push
lcall
mov
sahf
cld
inc
jle
mov
fnstsw
orb
shrb
jecxz
sbb
add
shrb
xchg
cmp
pop
inc
clc
stos
repz
sbb
add
inc
mov
lds
pavgb
adc
and
and
push
aaa
in
cli
push
inc
jne
cld
mov
mov
pushf
lret
push
pop
inc
lock
cmpsb
inc
jmp
gs
mov
test
dec
mov
shrl
enter
or
bound
out
lret
xchg
stc
add
fwait
inc
or
xor
add
fnstsw
inc
fldcw
test
jo
lods
sub
into
jle
push
pop
jne
shrl
fstpl
pop
test
iret
mov
cs
incb
out
pop
ret
adc
fisttpl
lds
add
mov
mov
xchg
mov
jl
mov
pusha
out
jle
fidivs
jbe
xlat
mov
and
xor
cmp
adc
mov
mov
insb
cmp
lret
adc
icebp
cli
roll
shlb
into
fsub
xor
mov
xor
test
cli
iret
xor
roll
pop
leave
sti
sbb
mov
mov
aas
fs
cmp
pushf
add
jnp
mov
clc
fsubr
in
shll
sbb
movsl
subb
xchg
ja
add
xlat
cmp
into
hlt
repz
and
push
rcrl
mov
add
push
jecxz
mov
mov
popa
shl
cli
adc
mov
fisubs
jmp
or
pop
out
add
insl
cmp
sbb
and
jg
mov
test
xchg
xchg
jg
insb
hlt
dec
xchg
les
xchg
leave
pop
or
popf
cmc
mov
cmp
or
jnp
mov
nop
imul
out
and
inc
or
data16
xor
loopne
xor
fsts
and
dec
lldt
pop
push
int
push
ret
scas
mov
jb
cmpsb
xlat
imul
mov
cltd
aam
mov
mov
in
arpl
cwtl
add
mov
xor
mov
pop
pushf
mov
or
mov
push
shrl
test
pop
sbb
repnz
push
test
adc
movsl
in
xchg
in
push
stc
lret
or
cwtl
sar
push
add
inc
shll
mov
push
mov
xchg
aam
or
jp
in
scas
test
push
sbb
mov
mov
cmp
mov
sbb
jne
adcb
int3
icebp
fmull
fstl
mov
repz
stos
pop
shl
xchg
cltd
and
lods
sbb
push
stc
call
add
test
pop
ret
sbb
test
inc
inc
sti
adc
rcr
inc
int3
inc
adc
mov
iret
orl
and
dec
mov
pop
cmp
mov
jb
jmp
into
dec
pushf
aaa
arpl
js
subl
push
sbb
ja
bt
test
ss
int3
push
test
xor
leave
inc
mov
outsl
hlt
repnz
addr16
cmp
mov
cmp
jns
psubb
int3
data16
int
addr16
icebp
scas
ret
or
cltd
mov
daa
xchg
adc
lret
jl
lret
pushf
xchg
test
jb
add
lods
std
lods
push
lea
or
inc
mov
scas
scas
mov
cs
cmp
mov
clc
sbb
adcb
adc
xchg
cmp
pop
xor
xchg
or
inc
xchg
loope
jo
andl
and
lret
aam
test
sbb
ja
push
loope
xchg
xchg
xchg
inc
fbld
rorb
add
add
in
ret
out
nop
nop
enter
jo
adc
pop
push
jp
aam
inc
mov
movsb
mov
mov
mov
sbb
ret
add
inc
loop
mov
add
pop
jmp
sbbl
or
or
enter
push
add
mov
and
sti
cwtl
lock
sbb
sbb
mov
push
mov
hlt
pop
ja
shlb
stc
mov
in
xchg
adc
lock
lock
mov
dec
or
add
push
cmpsb
mov
xchg
dec
xlat
mov
and
sbb
test
call
rol
fldl
loope
sbb
inc
mov
iret
add
sub
movsb
lret
xor
mov
fldlg2
cmp
pop
jle
dec
dec
inc
inc
sbb
cs
daa
cmp
jnp
negb
stos
mov
add
push
inc
jae
fistpll
xor
rol
aas
je
inc
das
outsb
ja
rcll
inc
add
sub
mov
lret
lock
int
and
cmpsb
in
test
adc
fdiv
lret
lea
sub
push
pop
movsb
data16
pop
mov
or
sbb
cmp
xor
in
test
insb
lret
sbb
xchg
sbb
lods
inc
mov
push
rorl
pop
xchg
addb
shl
jbe
push
aam
or
loopne
push
sbb
sbb
sbb
ljmp
sbb
mov
push
jno
sbb
mov
or
ret
hlt
jne
lock
xor
outsl
jge
je
mov
sbb
push
xor
orl
mov
in
push
inc
and
adc
fdivr
adc
ret
addb
rcl
fcompp
loope
add
mov
outsb
mov
mov
orl
pusha
iret
mov
mov
sub
xchg
xlat
test
jbe
imul
fsubl
inc
xor
lret
fdivrs
adc
das
inc
jbe
add
int3
std
hlt
adc
call
fisttpl
sbb
push
and
clc
inc
pusha
cmpb
adc
orb
sbb
inc
repnz
ret
pop
or
xor
jmp
mov
inc
loop
xlat
push
push
pushf
jp
stos
scas
ret
mov
jae
cld
mov
jne
xchg
adc
sub
cltd
imul
pop
sbb
gs
leave
push
adc
push
lods
xchg
inc
das
push
push
jle
out
or
push
test
nop
test
cmp
mov
push
jmp
dec
pop
or
push
mov
ret
or
add
ret
aad
adc
sbb
pop
pop
je
rolb
push
stc
and
mov
xor
cld
rol
mov
mov
repnz
add
xchg
xor
push
in
lock
adc
push
in
testb
outsb
sarl
out
pop
mov
dec
push
adcl
mov
pop
js
sub
data16
sbbb
xlat
pop
pop
mov
imul
mov
fisttps
mov
push
pop
rolb
mov
cld
xor
xchg
int3
mov
cwtl
or
addr16
divb
int3
sbb
scas
addl
fildll
cmp
push
push
lret
outsl
push
and
sti
lret
popf
adc
pop
inc
lea
mov
fidivl
sub
ficoms
mov
xchg
and
adcl
sti
pop
adc
dec
adc
cmp
subb
add
int3
lods
push
int
mov
jg
inc
lds
cltd
inc
loop
sbbb
test
inc
jo
cld
call
faddl
mov
daa
fstpl
mov
mov
sub
rcrl
push
js
xchg
inc
lods
adcl
test
xor
fmuls
test
notb
mov
movl
push
imul
mov
jno
mov
xor
enter
mov
aam
mov
stos
incl
movb
les
test
push
sbb
mov
or
or
mov
pop
dec
push
xor
aas
mov
dec
popa
pushf
clc
xor
enter
ret
add
mov
dec
inc
or
rcl
dec
enter
icebp
rclb
sbb
mov
xor
mov
loop
sub
jae
mov
adc
mov
ljmp
mov
xlat
xor
scas
inc
xor
sar
add
xchg
repnz
sarl
lock
or
or
out
cltd
aam
rorb
cmp
push
push
int3
jb
adc
or
jp
jbe
test
jg
ja
insl
mov
mov
sbb
cmpsl
js
sbb
push
movsl
mov
dec
or
mov
scas
sbb
mov
fisttps
rolb
fimuls
clc
pop
rorl
imul
mov
pop
shlb
imul
into
push
pop
add
xchg
sub
std
cltd
test
pop
int3
pop
xor
lcall
dec
adc
or
in
push
fdivr
cmp
dec
push
adc
pop
dec
push
test
mov
or
cs
out
mov
cwtl
add
bound
out
fildl
and
mov
cmc
test
inc
pop
add
sti
in
pop
add
leave
insl
mov
dec
xchg
fldcw
test
addb
test
xchg
imul
mov
loopne
pushf
in
pusha
cmp
out
and
mov
les
stos
fldl
mov
movsb
sbb
adc
scas
lret
popa
out
fisubrl
mov
xchg
mov
mov
add
sarb
sbb
push
lret
dec
fsubrp
adc
ficoml
pop
pop
mov
jg
cld
xchg
cmc
xchg
fildll
pop
cs
cmp
add
lock
mov
test
std
dec
test
repz
xorb
push
jns
movsl
jle
dec
xor
push
lock
dec
push
fwait
loope
hlt
xor
sbb
fstpl
sbb
std
xchg
push
adc
out
and
or
cmc
enter
and
enter
lods
negb
mov
mov
add
ds
imul
push
in
cmp
adc
xor
inc
inc
clc
rcl
push
jb
rclb
mov
jno
sbb
inc
cld
lds
mov
stos
dec
jno
mov
xchg
cld
xchg
leave
ror
push
dec
or
stos
pop
pop
imul
push
iret
cmpsb
fwait
jmp
jle
leave
aad
int
adc
rolb
jns
rcl
push
ljmp
push
in
and
out
mov
nop
mov
stos
inc
sbb
out
test
jb
icebp
push
pop
bound
mov
test
cmp
jmp
nop
jne
xor
jne
stos
xlat
imul
cmpsl
dec
mov
fcomp
leave
test
and
int3
inc
mov
mov
enter
insb
addr16
lods
hlt
xchg
add
rorb
push
aad
pop
scas
jae
adc
rorb
lods
loopne
mov
aas
sbb
mov
cmpsl
sar
cltd
jo
fcomps
cld
adc
test
ja
lds
loopne
xor
das
test
enter
dec
push
and
cmp
jl
cmp
fwait
xchg
inc
cmp
int
mov
movsb
nop
mov
std
inc
lret
aad
loop
cwtl
outsl
cmpsb
loopne
int
mov
inc
out
dec
mov
repz
nop
xor
mov
sub
mov
sbb
nop
mov
cmp
bound
mov
nop
ror
enter
mov
js
daa
lods
rcl
fwait
in
cmp
push
fildll
pop
shll
mov
rcl
mov
lds
jl,pt
jle
xor
lods
cmpsb
pop
mov
mov
cmp
aad
stc
mov
lock
in
mov
sbb
inc
imul
inc
cmp
jmp
lahf
call
xchg
cs
pop
rorl
mov
mov
xchg
push
lahf
enter
lret
mov
loopne
xchg
imul
mov
cld
lahf
sbb
mov
push
int
add
jne
push
cmp
bound
jl
pop
jle
inc
pop
jle
aad
mov
push
das
hlt
jle
popa
adc
rol
les
pop
push
cli
cmp
subl
aad
xchg
add
push
xchg
aam
adc
or
outsb
and
mov
cmc
mov
mov
sarl
cmp
dec
fbstp
inc
movsb
popa
scas
sub
adc
adc
cmp
mov
jbe
or
jg
xor
mov
mov
test
ret
add
push
pop
lret
imul
scas
imul
or
dec
fcoms
mov
repz
fbld
in
cmp
out
into
xor
mov
jge
enter
aad
xchg
aam
push
adc
cmp
aas
cmp
enter
sbb
push
xor
jae
movsb
dec
xor
fsubrl
shll
mov
fcom
jg
jbe
or
test
inc
mov
aas
stos
pop
stos
bound
add
dec
pushf
fstps
xchg
mov
jl
sbb
mov
into
das
pop
add
fstl
mov
rolb
clc
fwait
jbe
or
cmp
jl
add
fldl
test
inc
mov
subl
adc
xchg
jecxz
jmp
push
cmpsl
lret
adc
fstps
dec
movsb
pop
addr16
shrl
jae
shll
mov
mov
rcl
pop
iret
push
movsl
mov
jns
cmc
sahf
leave
add
lcall
jge
int
adc
jl
test
add
jle
mov
orl
push
pop
clc
cmc
xchg
adc
lock
test
hlt
imul
jmp
ljmp
sub
xchg
add
mov
jge
jae
dec
rclb
xchg
and
shlb
xor
xor
jl
push
enter
xlat
cmp
and
filds
stos
jbe
add
test
shr
adc
mov
out
stos
jb
inc
dec
sti
aas
insb
ret
cmp
int
jo
push
xchg
cmpsb
into
pop
rcrb
mov
std
push
sbb
sub
cmp
not
movsb
jns
incl
mov
cmc
sbb
pushf
jle
setns
pop
clc
and
and
icebp
in
xchg
fldl
mov
imulb
sub
push
inc
xchg
fadds
dec
enter
or
cmc
jo
cmp
shl
arpl
jge
xor
jle
mov
imul
mov
cmc
mov
or
fsubrp
popa
lret
ret
sti
sarb
outsl
pusha
in
lahf
repnz
ret
jp
sbb
xchg
cmp
push
add
adc
push
push
lcall
mov
test
fidivrl
imul
enter
das
inc
jne
stos
pop
sbb
jo
xor
sub
hlt
adc
xchg
lret
jb
lds
jne
cwtl
dec
dec
aas
cwtl
mov
sub
push
cmc
cmc
repnz
andb
lea
fstpl
pop
mov
jle
ret
icebp
sub
sti
cwtl
mov
mul
pushf
inc
lahf
mov
inc
imul
xor
add
test
mov
or
mov
xchg
sub
jle
xor
and
add
imul
inc
adc
push
adc
pushf
fnstsw
movsl
dec
cmp
cltd
ficomps
adc
out
aas
sahf
fcmovbe
es
mov
lds
shlb
in
mov
int3
sub
mov
jae
rorb
lods
xlat
sub
aaa
dec
sahf
out
inc
cmp
sbbl
adc
sbbl
push
loopne
sub
dec
xlat
push
push
cmpsl
inc
dec
js
in
cltd
jle
dec
nop
dec
pop
iret
outsl
xchg
pushl
leave
mov
lea
jo
lds
imul
das
filds
xchg
cwtl
pop
cld
jae
mov
cli
add
filds
xchg
cmpsb
add
nop
int
sub
mov
aas
pop
inc
pop
jo
pcmpgtb
xor
adc
test
movsb
mov
adc
mov
push
les
inc
push
pop
pop
mov
in
lret
nop
stos
hlt
push
in
cs
sahf
fadds
aam
les
nop
mov
sahf
or
out
into
ret
push
xlat
lcall
push
push
sahf
test
push
pushf
or
mov
test
jb
imul
xorl
stos
push
pop
dec
or
xchg
shlb
insb
or
js
adc
loopne
push
hlt
xor
sar
xchg
rcl
adc
nop
stos
movsl
mov
aad
mov
sarb
mov
pop
into
mov
cmp
roll
in
sub
xor
rorb
push
rcrb
fisubrl
add
rcl
pop
mov
rorl
mov
adc
jg
mov
adc
fiaddl
lods
outsl
nop
data16
add
test
shrl
jmp
add
addr16
test
push
fdivs
and
mov
xchg
js
seto
add
sub
push
mov
cmpsb
fmull
aad
cmpsb
ret
cld
pop
adc
xlat
scas
mov
or
jne
mov
sub
xchg
ds
cmp
scas
mov
adc
mov
mov
pop
push
ljmp
push
mov
mov
sbb
mov
filds
pop
nop
hlt
or
fsubs
mov
sbb
into
sub
inc
pusha
ss
jle
pop
fwait
mov
data16
sar
inc
sbb
add
aad
add
and
jo
xor
stc
int3
xchg
cmp
cmpsl
pop
sahf
adc
ret
xchg
ret
jg
in
insb
push
cwtl
mov
aas
or
cld
xchg
push
push
movb
lods
test
cwtl
in
inc
int
sbb
and
mov
popa
lret
out
rcl
enter
inc
in
rclb
ljmp
dec
ds
sub
jns
repnz
xlat
mulb
std
nop
test
dec
mov
out
int
shrb
pop
pop
xchg
rcl
push
mov
popa
imul
fildll
out
pop
call
imul
cmp
shl
add
lcall
je
cltd
hlt
pushf
mov
and
jge
add
mov
or
rorl
adc
mov
nop
and
lcall
inc
pusha
or
ja
mov
inc
in
mov
mov
mov
les
in
mov
mov
mov
mov
fcomi
div
inc
hlt
insb
pop
test
push
xchg
inc
addl
cld
xchg
dec
in
or
mov
xchg
xchg
jp
dec
mov
cmpb
xchg
or
push
xchg
inc
in
mov
in
jl
enter
mov
rcl
cmp
int3
in
sti
add
add
and
lods
xor
push
mov
fbld
aaa
cmpsb
and
add
xor
xchg
and
adc
in
iret
out
bound
mov
xchg
jns
hlt
shl
fcompl
call
hlt
or
sub
leave
nop
cltd
fisubs
negl
imul
ja
lahf
stos
pop
lret
sub
add
xchg
mov
xchg
orb
adc
jge
dec
mov
xchg
xor
mov
mov
dec
shrl
dec
movsb
add
adc
cld
hlt
cmpsl
fsub
loop
xchg
std
lods
stos
mov
or
jae
in
ljmp
fs
xor
ret
fcom
aaa
push
push
dec
xor
mov
les
adc
cltd
and
cmpsl
dec
lods
pavgw
mov
xchg
shlb
mov
push
sbb
mov
movsl
add
jecxz
xchg
scas
mov
push
imul
push
sub
int3
xchg
fs
or
xor
jg
sahf
ljmp
push
mov
shlb
dec
cwtl
test
mov
mov
es
nop
das
mov
pushf
and
inc
jg
cs
inc
in
scas
loop
push
aaa
push
xchg
shll
lret
jns
daa
cmp
imul
stos
ret
push
mov
push
xlat
lods
cmpsl
test
adc
hlt
adc
mov
cmc
insb
push
movsb
jmp
inc
orb
sub
mov
or
test
add
sbb
jno
or
pop
lods
bound
inc
xchg
add
ljmp
ja
xchg
mov
jbe
sbb
mov
cli
das
push
lock
popf
decl
cs
pusha
arpl
mov
inc
in
fisttpl
movsl
ljmp
sub
fwait
xor
arpl
int
inc
hlt
xchg
or
push
jae
rorb
or
test
and
rcl
add
mov
mov
std
inc
jne
mov
mov
dec
scas
mov
cltd
sahf
sarl
sahf
mov
inc
out
lret
leave
xchg
and
mov
inc
jp
arpl
xchg
into
mov
popf
into
aas
pop
in
test
lcall
add
mov
or
icebp
test
and
and
xorl
aad
icebp
xchg
or
rorb
adcl
or
mov
aad
add
ret
mov
inc
mov
jne
mov
lods
push
ret
mov
push
xlat
mov
filds
xchg
xor
js
mov
xchg
leave
pop
xchg
call
paddsb
jne
jne
adc
jge
lret
nop
ja
jnp
mov
shlb
jne
mov
xchg
fists
iret
mov
adc
jno
mov
daa
roll
xlat
insb
addl
cmc
sti
and
insb
mov
cmp
cmpsb
fcmovnb
xor
fsubrs
pop
xchg
cmp
je
fsubr
add
enter
les
cld
and
cmc
scas
cmpsl
leave
out
mov
mov
or
jns
mov
fs
mov
scas
xor
mov
cli
in
mov
mov
into
orl
mov
push
jp
or
adc
nop
dec
mov
cmc
push
xchg
repnz
adc
xchg
adc
cmc
mov
pusha
gs
push
push
lock
xchg
jns
inc
mov
stos
jecxz
inc
pop
movsl
bound
cmp
add
in
xchg
shlb
mov
ret
mov
test
push
or
adc
lcall
push
xor
mov
mov
mov
bound
xchg
movsl
ret
pop
in
jl
mov
adc
test
sbb
mov
int3
pop
mov
add
jbe
loopne
push
call
sahf
xlat
inc
test
push
mov
push
into
sbbl
iret
inc
fs
xchg
inc
popa
test
xchg
rcl
adc
mov
mov
lcall
add
lahf
jnp
mov
inc
pop
dec
fisubl
out
adc
cmc
mov
xchg
dec
xchg
inc
add
decl
xchg
aad
ds
mov
cwtl
xor
cwtl
hlt
sti
xchg
imul
cmc
mov
dec
fadds
adc
iret
test
jp
imul
push
bound
shlb
push
and
ficoml
cmp
test
in
mov
inc
js
jle
mov
mov
jp
lock
pop
mov
mov
repnz
lret
mov
jb
clc
into
pushf
inc
mov
nop
pop
jge
xor
mov
sti
mov
retw
clc
xchg
jmp
inc
fstl
orl
sbb
push
shlb
stos
sub
jnp
insl
mov
out
pop
inc
rcl
add
mov
stos
mov
cld
adc
mov
add
jmp
sbb
cmc
enter
lcall
mov
mov
mov
xchg
and
divl
fistpll
mov
nop
adc
outsb
fsubp
jg
xchg
or
xchg
roll
mov
pop
test
xor
mov
loopne
lea
push
adc
and
arpl
clc
js
mov
rcrl
inc
addr16
mov
mov
push
bnd
inc
jl
mov
addr16
mov
xchg
inc
inc
adc
mov
aad
mov
inc
mov
inc
xchg
or
shll
sub
subl
orl
scas
das
ret
inc
inc
push
orl
jecxz
sub
in
push
cmp
lret
mov
mov
push
test
aam
push
fs
lods
popa
xchg
jecxz
xchg
inc
or
push
movsl
pop
sbb
mov
mov
add
inc
sti
stc
aaa
cs
das
rcrl
pop
dec
pop
jnp
popa
push
in
mov
mov
jp
and
loopne
mov
pop
mov
xor
lahf
mov
popa
cli
dec
fcoml
loopne
xchg
int3
or
xchg
pop
mov
cli
testl
xchg
mov
cmp
fildll
mov
dec
jnp
jb
into
das
fbstp
push
stos
jl
test
lea
dec
scas
sub
xchg
lea
xchg
sub
jp
inc
cltd
test
shrb
lds
jnp
jle
fs
xchg
lret
loope
cmp
inc
mov
adc
inc
and
xor
push
add
xchg
push
jge
dec
call
lret
inc
and
aas
xchg
ss
nop
popf
inc
clc
incl
cwtl
lods
adc
mov
aas
pop
jae
inc
jb
xchg
lods
xchg
inc
cmp
fwait
in
dec
jle
mov
inc
and
nop
lahf
rclb
or
imul
repz
insl
incb
iret
mov
outsb
mov
and
fdivrl
mov
add
push
jl
out
and
loope,pt
test
shll
dec
or
fwait
pop
xchg
cmpsb
mov
out
sub
inc
arpl
pop
jnp
push
mov
mov
add
inc
fisttps
mov
hlt
xor
lods
adc
leave
mov
mov
mov
xchg
or
mov
push
out
mov
insl
jnp
push
lahf
stos
xorb
xlat
aam
jmp
pop
mov
int3
xor
xchg
xchg
push
rcl
cs
pop
pop
shlb
adc
movl
and
stos
or
adc
jae
repz
pusha
pop
jae
sbb
lods
mov
cmp
cmc
addr16
fsubp
sar
inc
and
in
xchg
subl
cld
stc
out
lret
dec
shl
outsl
push
and
int3
jl
js
jecxz
cltd
push
scas
xchg
jl
shl
fcom
pushf
or
lock
push
jnp
movsl
xlat
les
push
fidivrl
dec
mov
repnz
jnp
aam
les
jmp
lcall
jae
std
ret
pop
pop
lock
xchg
jns
sub
jmp
fldcw
mov
movsb
push
add
pop
inc
aam
ss
int3
leave
jg
repz
mov
sub
or
shll
xchg
xchg
int3
movl
test
mov
clc
insb
mov
add
push
push
mov
mov
je
cmpsl
cmc
mov
popa
adc
lret
or
scas
sub
fistpll
imul
sub
sti
mov
mov
mov
push
insl
xor
test
sbb
cld
mov
std
jo
dec
pop
in
add
fstps
enter
push
fidivrs
mov
xchg
cmp
or
lods
xlat
clc
scas
hlt
stos
fcompl
mov
fistl
mov
cmpsl
mov
pop
je
cmp
jle
mov
sarl
xor
sbb
mov
sub
loop
add
cmc
add
popl
cs
sti
lods
aad
sub
mov
mov
popl
mov
mov
sti
pop
aas
lods
into
jmp
ficoml
jne
pop
ret
test
insl
xchg
stc
mov
bound
movsl
mov
iret
jbe
mov
idivb
xchg
mov
lret
pushf
popa
aas
stos
or
incb
add
and
inc
dec
sub
xchg
out
cli
ss
iret
stc
jno
out
xchg
mov
mov
leave
push
loopne
push
dec
dec
mov
inc
inc
outsl
orb
jae
aaa
test
pushf
jae
push
addr16
inc
hlt
jmp
rorl
jbe
and
push
cmp
rolb
gs
lea
push
jo
out
or
std
ja
testl
xor
out
pop
and
into
mov
out
cwtl
rcrb
repnz
rcr
add
arpl
adc
cld
sbb
cmp
sub
sub
adc
or
movsl
inc
je
inc
neg
or
or
int3
and
setp
scas
mov
dec
mov
mov
pusha
nop
out
mov
outsb
mov
dec
outsb
jg
mov
scas
push
sub
inc
xchg
mov
stos
mov
or
mov
cmp
adc
loopne
add
mov
push
xchg
outsb
mov
inc
adc
pushf
enter
add
loopne
or
xor
andb
cmp
out
orl
arpl
jl
jnp
lock
leave
cmc
fs
aas
data16
std
cmp
sbb
and
loop
jno
mov
mov
fildll
jecxz
call
xchg
js
lds
fmull
pop
test
jo
push
xchg
mov
xlat
aad
out
js
xchg
inc
jg
movsl
repz
jle
cmp
js
hlt
cmp
or
mov
add
shrl
mov
xchg
cmp
or
fcoml
loop
xchg
ret
mov
sbb
js
enter
movsl
mov
into
rclb
insl
or
fnstenv
adc
push
jbe
cmc
orb
mov
jnp
lods
popf
or
jge
push
or
test
mov
rolb
jge
into
push
xchg
xchg
cmpsb
dec
leavew
xchg
xchg
outsb
lea
fs
mov
orl
test
dec
repz
psrlw
dec
test
cmp
mov
das
xchg
push
popf
mov
lea
leave
add
dec
push
fwait
out
mov
dec
out
xchg
ss
lods
push
les
or
movsb
lock
or
mov
xchg
mov
pop
push
cmp
inc
push
mov
cmc
roll
or
outsl
pop
lods
pop
call
mov
xchg
mov
icebp
jo
mov
mov
cmp
sub
inc
inc
lcall
sbb
add
loope
mov
sbb
cmpsb
inc
fildl
std
lods
rorl
cld
mov
mov
cmpsl
cmpl
cmc
popf
or
fmull
loopne
inc
adc
xor
or
adc
xchg
mul
fistps
mov
cld
cs
adc
js
pop
push
sub
test
jge
sbb
ja
add
insl
adc
clc
mov
and
clc
sub
lret
les
pusha
out
mov
ds
test
mov
xchg
adc
nop
lret
lods
mov
xchg
sbb
push
lea
insl
ret
cld
sub
lock
mov
shll
mov
xor
adc
in
sbb
fisubs
mov
and
insl
cwtl
dec
je
aas
lds
jbe
inc
mov
aad
insb
dec
xchg
shlb
shrb
mov
mov
xchg
enter
rolb
push
inc
pop
js
and
mov
xchg
hlt
cltd
cmp
lret
and
jno
leave
xor
int3
addr16
rolb
fdiv
hlt
in
test
or
adc
mov
pop
mov
mov
cmc
movsb
in
enter
ret
and
sub
mov
xchg
add
call
xchg
sbb
adc
sbb
cmp
and
or
mov
test
fldt
fidivl
xchg
test
xchg
mov
rcl
xor
sub
or
fimuls
and
mov
adc
jle
enter
out
xor
inc
sbb
jmp
es
mov
lcall
sbb
test
jns
shl
mov
cltd
fmull
dec
nop
xchg
xchg
orl
rcr
test
jecxz
or
jmp
xor
jo
or
mov
jmp
stos
icebp
adc
xchg
or
xlat
js
aas
pop
cmpsb
dec
mov
inc
push
xchg
lret
push
sub
inc
sbb
mov
nop
fisubs
stos
dec
cmp
sub
stos
ja
pop
in
add
mov
aam
adc
nop
rolb
das
rorb
add
rcl
lahf
aad
in
xchg
pushf
sarl
adc
xchg
fcmovnbe
pop
mov
mov
fcoms
call
or
add
inc
add
roll
rcll
rcl
push
pop
mov
sub
mov
fwait
test
fcmove
ja
cld
test
stos
mov
mov
jns
xchg
xchg
imul
mov
test
adc
mov
rolb
sbb
pop
dec
add
data16
mov
push
ds
in
pop
or
shll
stc
push
dec
inc
mov
jbe
adc
cmpsb
pop
rol
stc
popf
pop
into
out
insb
addr16
mov
inc
stos
inc
inc
js
xor
xlat
xor
and
xchg
pop
jbe
or
push
and
xchg
adc
in
test
rorl
popa
rorb
fwait
inc
fisttpll
mov
int3
mov
push
cmp
push
push
add
cwtl
push
stos
mov
addr16
movsb
inc
cmp
insb
mov
xchg
mov
jge
mov
cmpsl
add
out
js
push
rcr
in
cwtl
mov
lods
shrl
mov
cwtl
cmc
test
decb
ljmp
adc
dec
loope
in
fs
push
nop
in
inc
lods
insb
inc
pop
mov
ljmp
leave
rcrl
pop
cmc
orl
cmp
mov
pop
add
cmp
pushf
push
das
cmp
hlt
mov
cmc
xchg
lahf
mov
out
and
adc
sub
dec
fcomip
gs
push
mov
push
adc
mov
xor
shld
into
add
xor
inc
mov
mov
mov
inc
out
cmpsl
test
inc
pop
stc
pop
sub
adc
mov
inc
mov
test
data16
popf
loopne
inc
out
push
out
out
xlat
loope
fcoml
rolb
pushf
mov
jno
rclb
sarb
lods
mov
cmpsb
add
cmpsb
outsl
xorb
test
xchg
inc
filds
xor
adcl
lock
or
test
push
and
sub
ret
rorb
push
jl
or
popf
mov
hlt
cmpsb
movsl
int3
push
xchg
xchg
stos
jg
xorb
mov
sbb
orb
cmp
sbb
mov
or
jmp
mov
scas
hlt
fadd
ret
or
das
and
and
test
fisttps
mov
pop
hlt
mov
mov
les
xchg
test
push
int3
bound
push
rorb
mov
pop
inc
inc
sbb
adc
ljmp
cwtl
outsl
push
push
or
xor
jbe
adc
rol
inc
repz
xchg
lret
push
movsb
inc
fst
ds
cmp
lods
imul
into
xor
mov
enter
das
std
jns
adc
jp
and
orl
daa
movsl
cwtl
rcrl
or
cmpl
sub
xchg
cmc
mov
cmp
lret
orl
leave
sbb
fwait
xor
xchg
loopne
andl
repnz
sarl
imul
jl
test
xchg
and
xor
or
das
test
xchg
push
mov
push
test
pop
cmc
cli
fildll
mov
inc
or
test
inc
mov
test
mov
sbb
pop
xchg
les
rcl
add
das
mov
add
nop
or
xchg
ss
mov
mov
popa
jo
jns
hlt
in
xor
test
sbb
or
mov
gs
or
xlat
push
and
in
shld
xor
or
imul
ja
adc
ret
popa
mov
xchg
aas
adc
or
xchg
adc
fsts
mov
pop
jb
ja
mov
iret
arpl
rorl
inc
ret
mov
popf
dec
divb
jecxz
stos
dec
shlb
and
and
sub
dec
mov
cmp
push
je
inc
add
test
xchg
int
imul
xor
xchg
push
xor
push
xchg
test
or
inc
pop
cmpsb
les
into
int3
xchg
lds
xchg
dec
adc
xchg
mov
adc
int3
dec
mov
aam
lcall
iret
cs
call
jo
xor
aaa
inc
jns
mov
ljmp
rolb
dec
xchg
hlt
gs
mov
sar
pusha
hlt
incl
jbe
add
pop
dec
stos
xchg
xchg
or
aas
mov
inc
rclb
enter
jle
pusha
xor
adc
inc
xlat
cmc
roll
lea
stos
inc
mov
mov
fisttps
test
sbb
scas
push
push
xorl
stos
pop
lock
pop
mov
les
mov
movsl
fildll
hlt
mov
xchg
dec
shll
add
add
xchg
ja
mov
mov
inc
loope
aad
mov
mov
rorb
fadd
enter
dec
cmc
jl
inc
das
xlat
ss
push
pushf
or
xchg
test
mov
scas
frstor
xchg
jp
ret
sbb
test
mov
filds
inc
mov
packssdw
jge
insb
lds
fcmovnbe
hlt
lods
mov
xchg
fsubl
js
cs
vcvtsi2sdl
add
sti
mov
pop
into
imul
test
inc
push
aam
test
xchg
mulb
push
lods
sub
out
sarb
cltd
mov
lods
stos
test
ret
scas
add
inc
xor
jmp
add
or
popf
or
xlat
ds
cli
cmc
scas
scas
mov
push
out
xchg
jmp
mov
lods
les
call
nop
xor
adc
mov
call
in
cmp
leave
push
adc
cld
and
test
cmpl
or
mov
sahf
and
lcall
mov
mov
addb
repz
mov
sub
xchg
mov
rcl
adc
xchg
add
adcl
xchg
into
sbb
test
sub
xchg
or
mov
leave
mov
fnstenv
xchg
xchg
cmp
or
aas
adc
sarb
aad
cmp
inc
stos
inc
sub
sub
in
faddl
xor
leave
pop
add
fistl
fwait
mov
mov
nop
movsb
or
mov
fdivl
inc
mov
stos
addr16
insl
scas
fwait
scas
lds
push
adc
mov
mov
aaa
or
add
aam
mov
rclb
lret
xor
or
adc
ljmp
scas
mov
popl
aam
push
sbb
mov
mov
fcoml
std
xor
pop
mov
sarl
pop
inc
and
jle,pn
sti
lods
mov
sub
stos
xor
ret
loopne
rcrl
dec
or
sti
bound
add
stos
iret
mov
lret
fwait
xor
pusha
sub
sub
call
push
add
mov
adc
sbb
cmp
or
inc
jb
dec
mov
lock
fldt
mov
test
rcrl
mov
mov
push
push
pushf
mov
and
cmp
insb
les
push
scas
pop
xchg
gs
xchg
cmc
movsb
loope
leave
mov
mov
jecxz
add
jne
popa
mov
in
fwait
test
loop
mov
mov
mov
es
int3
orl
adc
add
nop
xchg
sub
orb
add
sahf
jmp
popf
arpl
or
or
mov
add
les
cmpsb
jae,pn
adc
cmc
sti
sub
shlb
popf
loope
int3
adc
ds
or
ret
xlat
xor
or
enter
push
xor
mov
inc
mov
out
imul
out
bound
mov
inc
add
movsl
jo
aaa
mov
hlt
add
popa
push
jns
xchg
add
xlat
ret
js
xchg
inc
cmp
add
sbb
subl
lock
xchg
scas
mov
dec
xchg
fmul
in
fcmovnu
and
jb
pop
call
push
mov
out
or
mov
fimull
fcom
call
pushf
and
cmp
mov
inc
and
jne
and
xchg
stos
popa
jmp
push
test
xchg
andl
cmp
rorb
pop
pop
and
xchg
adc
adc
and
lret
shll
fxsave
stos
jno
or
adc
pop
add
or
subb
test
mov
call
scas
ffree
add
and
lret
sarl
add
insb
jmp
rcrb
sbb
lods
push
in
xchg
mov
or
mov
push
xchg
popl
in
xchg
mull
xchg
dec
mov
stos
dec
movsb
adc
mov
lcall
imul
mov
push
stos
mov
addb
lea
inc
push
cmc
sarl
xchg
popf
filds
dec
jo
jp
and
inc
cwtl
sub
add
popf
lds
gs
jmp
push
test
lret
cmc
gs
push
repnz
repz
mov
jbe
pop
lret
push
insb
inc
clc
cmpl
mov
jmp
pop
and
sbb
mov
fists
add
xchg
movsl
repz
popa
adc
ret
cmc
ficompl
subl
pop
or
jge
mov
pop
xor
add
scas
and
lock
xchg
push
xchg
dec
jae
fmuls
mov
lret
leave
push
or
mov
cmp
dec
or
sub
push
cmp
test
inc
pop
jl
mov
icebp
jne
cltd
ret
lds
inc
xor
jb
hlt
xchg
cmp
push
cmpsl
mov
outsb
out
mov
or
popl
add
or
scas
rclb
and
push
push
adc
movsb
xchg
jmp
pop
sahf
out
aaa
fdivl
jo
lahf
add
push
icebp
int3
test
mov
add
scas
sbb
lcall
jae
sub
xor
inc
shl
outsb
aad
call
cltd
xor
add
les
test
or
mov
das
fstl
neg
sbb
sub
movl
cmpb
mov
add
dec
and
push
pop
in
inc
add
mov
int3
xchg
pop
ds
xor
test
or
stos
sub
inc
movsl
test
mov
negb
bound
mov
test
sub
mov
mov
movsb
ret
loopne
addl
rclb
mov
leave
inc
addl
xor
out
mov
pop
xor
movsl
mov
arpl
outsl
mov
xchg
push
add
xchg
inc
fistps
aaa
cmpsl
imul
or
jae
sbb
out
pop
adc
xchg
xchg
mov
adc
dec
in
lods
and
nop
mov
repz
dec
mov
ret
pop
ret
cld
imul
xchg
or
inc
iret
mov
mov
xchg
or
int
jne
test
add
sti
jle
and
dec
aam
jbe
cltd
or
sahf
jmp
mov
push
cmp
jecxz
mov
or
stos
and
or
mov
or
cmp
jmp
dec
add
inc
or
leave
sub
sar
int
in
nop
adc
shr
mov
add
xorl
jg
pop
add
and
dec
fdivrp
xchg
int3
or
stc
adc
push
and
mov
xchg
sub
fidivrl
or
mov
cmpsl
fisttpll
cltd
decb
xor
xor
add
xchg
repz
cld
aam
and
int3
adc
adc
in
pop
insl
sbb
aam
cli
ret
aam
fsubl
loop
xchg
sbb
int
ss
movsb
dec
add
std
mov
push
inc
mov
xchg
mov
push
pop
movsl
cltd
inc
pushf
cmpsb
mov
jnp
dec
cmpsb
stos
pop
clc
adc
mov
adc
inc
mov
cmp
fwait
push
fstl
test
push
and
roll
adc
in
mov
sbb
hlt
movsb
jns
scas
and
adc
push
xlat
mov
fstl
cmp
cmc
adc
xchg
imul
push
sub
aam
into
js
pop
roll
push
mov
inc
and
hlt
push
push
roll
push
dec
aas
mov
int3
test
cltd
fst
outsb
in
adc
xchg
mov
aam
inc
push
loop
mov
mov
xchg
and
dec
sub
mov
or
xor
test
loope
jl
rcl
stos
cs
aas
rcrl
outsl
cltd
test
ds
cmp
nop
mov
ret
loope
push
ljmp
out
test
pop
pop
push
xchg
imul
gs
ja
aad
push
sti
jbe
std
into
sarb
repnz
xchg
loope
xchg
mov
in
push
mov
adc
inc
cltd
cmp
inc
add
fcmovnbe
xchg
jmp
mov
jbe
outsb
notl
inc
or
aad
adc
cmp
lods
pusha
mov
push
test
add
std
sarb
jle
test
stc
out
andb
xlat
jbe
xchg
lds
dec
jp
jg
fbstp
mov
loopne
dec
dec
pop
pop
loope
fstl
cmp
pop
pop
sbb
xor
jge
stc
sbb
sbb
outsl
and
inc
scas
leave
sbbl
push
xlat
lret
hlt
test
mov
sbb
test
sub
cmp
imul
imul
aam
xor
jno
loop,pt
mov
das
jae
xchg
mov
and
mov
shl
mov
add
mov
scas
lea
lcall
xchg
cmpsl
cmp
push
jnp
insb
imul
mov
pop
ljmp
shr
mov
lea
jns
xchg
add
leave
jecxz
loopne
xchg
std
jg
sub
add
fmuls
test
cmp
jle
sbb
cltd
xchg
loope
scas
insb
push
inc
shr
test
stos
cmp
in
fdivl
lock
icebp
inc
addl
jnp
inc
or
fistpl
jl
jmp
dec
mov
out
cld
jns
dec
jg
fistps
aad
sub
push
dec
inc
push
pop
lock
mov
mov
jo
je
jnp
mov
xchg
imul
xor
ror
ja
les
dec
addl
lods
and
or
movsb
jmp
mov
andl
xchg
bound
lret
inc
loope
jns
rolb
add
or
lds
data16
push
or
repz
sub
dec
int
stos
hlt
stos
push
cmpsb
gs
out
mov
sbb
rolb
adc
aad
int3
inc
bound
mov
xchg
push
pop
stc
test
mov
movsl
xchg
dec
fldenv
xchg
mov
rcll
ret
jo
xlat
loopne
lods
mov
movsb
out
aas
sub
adc
subl
push
pushf
cmpl
mov
out
orb
inc
pusha
jo
and
jns
aam
xchg
dec
jmp
enter
ret
out
mov
test
ds
jg
fldl
fisubs
or
iret
jl
fsub
mov
inc
aas
sub
lcall
aas
or
shrb
inc
push
mov
pop
int
out
mov
xor
jae
orb
enter
jo
inc
inc
push
daa
repnz
pop
je
enter
cltd
iret
repnz
ret
add
adc
std
rolb
add
cmp
jg
push
in
aad
push
mov
xchg
stos
dec
mov
push
xor
imul
add
or
mov
fistpl
mov
push
int
xor
sbb
imul
sarb
test
push
mov
inc
clc
or
inc
mov
sub
cs
mov
les
mov
in
xchg
loopne
ljmp
mov
movl
xchg
or
and
sbb
imul
orb
push
mov
push
sub
mov
or
xor
das
or
xchg
arpl
iret
loope
repz
sub
mov
into
jae
scas
mov
cmpsl
popa
jne
jmp
dec
lods
or
and
and
popf
enter
ret
inc
adc
xchg
xor
adc
mov
test
dec
lret
das
xchg
ret
cwtl
xchg
xor
int3
in
mov
push
adc
cmc
lods
pop
pop
dec
loop
lret
in
and
loopne
data16
cwtl
mov
sar
sahf
ret
in
and
push
inc
js
add
test
push
jle
imul
sbb
insl
inc
cltd
nop
cld
push
in
clc
cltd
push
daa
fsub
popa
push
push
repz
js
push
jle
sti
cmpsb
jp
pop
mov
mov
iret
nop
cmp
ret
ss
adc
scas
and
inc
mov
shlb
xchg
stos
mov
xchg
repz
and
pop
int
ljmp
jo
push
rcrb
iret
rcrl
jb
mov
mov
mov
repz
mov
cld
mov
cmpsl
push
fcoms
fisttpl
lahf
adcl
pop
int
add
jo
xchg
insb
sub
inc
cmp
hlt
lcall
imul
mov
jb
sbb
ror
nop
and
dec
xor
jbe
leave
imull
imul
cwtl
mov
outsb
and
les
xor
cmp
xchg
cld
mov
lret
mov
xor
mov
push
insb
cld
pop
bound
xchg
std
lea
push
xchg
hlt
and
rclb
xchg
push
xchg
inc
outsl
cwtl
sahf
cmp
cmp
pop
or
and
push
add
fiadds
inc
mov
push
shll
je
outsb
bound
jle
in
lahf
into
jle
dec
icebp
scas
xor
sarb
setno
mov
and
stos
ljmp
movsb
mov
sarb
popf
add
push
pushf
ds
pop
add
pushf
xchg
pop
shrb
jo
dec
jge
out
jecxz
in
rorb
sbbl
fildl
aas
sub
pop
mov
scas
lret
cmp
lock
adc
mov
movsl
cmc
test
cld
sub
lds
and
ja
test
shlb
add
sti
xor
scas
fwait
nop
push
mov
or
je
fmull
sbb
fdivp
nop
fwait
movsl
in
or
popf
inc
sarl
andl
repnz
or
mov
pop
lock
pop
adc
lcall
inc
leave
stos
xchg
sub
mov
pusha
addl
pop
int3
add
xchg
pop
push
lahf
test
push
mov
movsb
xchg
ret
sarl
shr
int
mov
mov
lcall
repnz
xchg
dec
pop
jne
mov
sub
jb
pop
jmp
fisttpl
rep
aas
stos
jp
mov
cmpb
out
mov
int3
enter
adc
sbb
pop
scas
rorl
js
mov
std
dec
andb
decb
inc
push
jg
jge
test
sub
dec
mov
cmpsb
scas
loop
mov
pop
cli
fimuls
dec
xchg
std
movsl
nop
sub
iret
js
xchg
popf
mov
fldl
pop
stc
xor
popf
cmp
cs
js
sbb
mov
iret
outsb
mov
loopne
shrl
jno
jns
xchg
fidivs
xchg
jb
lea
rclb
ss
arpl
adc
pop
imul
rcrl
shlb
mov
mov
adc
mov
mov
add
aad
pusha
mov
xchg
and
in
jo
xchg
add
mov
xchg
jg
or
mov
add
cld
aad
cmpsb
fisubrl
rcl
inc
mov
mov
imull
lret
shrb
cmpsl
xchg
jno
je
xlat
pop
adc
lahf
subb
xchg
lea
loop
movsl
lahf
sub
aam
stos
push
mov
hlt
lods
fdivrs
sub
inc
outsl
mov
inc
lret
nop
xchg
sbb
mov
xchg
sarl
cmp
cwtl
movsb
push
insb
rorb
xchg
imul
inc
xor
push
or
jle
pushf
add
insl
gs
mov
stos
pushf
mov
shlb
jbe
pop
inc
mov
aam
stc
in
cwtl
insb
pop
jmp
pop
sbb
js
push
adc
pop
loop
lret
out
mov
xchg
inc
imul
mov
test
rcrb
lods
pop
test
inc
subl
jno
sbb
cmp
push
fildll
sub
loopne
pop
das
divb
dec
cs
mov
sub
push
ja
mov
xor
xchg
lds
mov
fwait
lods
or
dec
fidivrl
movsl
pop
inc
sahf
testb
clc
mov
dec
inc
andl
mov
push
iret
enter
xchg
adc
int
sub
movsl
cmc
out
les
jo
test
stos
insb
inc
mov
or
ljmp
shlb
pop
lds
mov
jno
rcrl
mov
adc
sahf
cmpsl
sbb
sub
mov
es
shll
out
fcmovnb
fcompl
jg
ja
sub
pop
mov
jnp
cmp
movsb
push
mov
test
popa
ja
mov
mov
cmpsb
rcl
or
nop
mov
movb
lds
push
icebp
and
fisubl
add
sbb
pusha
add
xchg
test
xchg
adc
dec
jecxz
jae
lret
adc
in
inc
xor
add
or
dec
test
call
push
rol
and
lock
filds
lea
fucomi
rcrb
adcl
xchg
cwtl
push
or
push
mov
test
pushf
mov
push
call
mov
push
test
pushf
mov
adcl
or
xchg
rorb
in
inc
mov
cwtl
mov
test
orb
sarb
xchg
add
mov
xor
push
shl
pop
and
lea
mov
test
pop
mov
mov
test
mov
mov
mov
cwtl
sbb
test
fimuls
xchg
push
inc
cltd
mov
mov
fisubrs
hlt
xchg
add
jns
push
mov
jno
fnstenv
sub
mov
ret
mov
push
ret
mov
sbb
mov
ret
scas
push
lods
push
outsb
inc
dec
mov
push
stos
push
test
shrb
cmpsl
push
cmpsb
push
movsl
push
mov
mov
push
mov
mov
adc
fs
xchg
mov
mov
nop
push
nop
push
nop
push
and
sbb
mov
lcall
inc
shll
sbb
ret
cmp
lret
cmc
inc
mov
jmp
test
cmp
and
or
cmpsb
inc
rolb
mov
mov
mov
mov
add
stos
and
mov
add
sub
adc
nop
adc
inc
repnz
nop
fdivrs
or
pushf
es
xor
aam
mov
out
dec
mov
loop
cmp
stos
sub
stos
sbb
xchg
or
xchg
cli
nop
mov
and
sub
mov
mov
xchg
xchg
stos
or
sub
ret
rorb
nop
xor
push
xor
push
es
xor
popa
cltd
loopne
shrl
nop
sbb
mov
jns
paddsb
xor
addl
imul
rep
fsubl
pop
mov
shlb
cli
xchg
sub
pop
cmp
inc
and
and
mov
adc
inc
lea
cwtl
fmul
hlt
mov
mov
dec
inc
mov
addb
pop
rorl
push
bnd
and
or
sub
mov
sbbb
mov
shlb
rclb
addl
and
xor
movsb
aas
and
inc
test
xor
add
xchg
mov
inc
xchg
les
mov
insl
pop
inc
popl
hlt
call
call
aas
dec
pop
push
cmp
push
js
imul
xor
mov
cltd
push
add
sti
call
inc
test
aad
push
mov
pop
pop
pop
mov
cwtl
aaa
fcom
aaa
cs
pop
push
insl
lret
cmp
fwait
aad
lahf
aaa
je
cmpsb
fidivs
mov
imull
ret
sub
mov
and
sbb
hlt
mov
les
popa
idivb
scas
push
lcall
dec
fildll
int3
inc
daa
and
mov
nop
fildl
push
xor
xchg
clc
inc
mov
sbb
imul
shll
test
adc
jo
cmp
adc
cli
push
cmc
and
jo
push
les
adc
mov
in
loope
stc
iret
jge
iret
or
jge
or
fists
sbb
inc
outsl
xor
inc
ret
fistpll
fstpt
lods
jo
pop
or
out
ljmp
lods
adc
lds
mov
sbb
dec
push
scas
and
pop
fwait
push
fwait
xchg
cwtl
int
jle
sbb
nop
dec
mov
sarb
mov
stos
lea
jmp
push
xchg
pop
adc
adc
aad
and
and
ss
mov
and
xor
or
or
mov
push
push
add
push
daa
pop
mov
adc
addl
cmpsb
jnp
iret
jb
popf
push
dec
jp
jp
jbe
iret
dec
ret
or
sub
cwtl
cld
jo
loopne
mov
xchg
dec
xlat
repnz
jns
hlt
mov
xor
xlat
ljmp
adcb
in
cmp
jns
push
pop
dec
inc
fsubrl
pop
add
xchg
xor
xor
lahf
mov
mov
lock
jle
push
sbb
push
subl
xchg
das
nop
enter
adc
inc
xchg
or
std
adc
idivl
inc
dec
je,pn
insl
out
test
push
push
addb
inc
aaa
lods
enter
jle
jb
stc
ret
lret
ljmp
stos
or
out
je
dec
jle
fildll
cmp
jo
dec
imul
add
and
and
xchg
or
mov
sub
dec
inc
mov
mov
inc
or
imul
mov
mov
push
adc
das
mov
fists
dec
outsl
gs
dec
push
mov
das
dec
xchg
mov
in
aas
bound
xchg
mov
in
stos
fs
mov
dec
enter
xchg
pop
fs
pop
decb
loop
jge
imul
fst
cmc
outsb
cltd
lock
andl
mov
pop
repnz
cmp
inc
mov
xchg
jp
lahf
cmp
mov
lods
jnp
in
je
int
fcoms
aad
jne
les
add
mov
or
pop
xchg
out
adc
xchg
mov
mov
repnz
fiadds
cmpsb
icebp
xchg
inc
repnz
int3
xchg
call
inc
cmpl
test
cli
dec
push
scas
inc
sbb
jge
sti
loop
xchg
lods
cmp
enter
or
jbe
mov
lcall
ret
cmp
xchg
dec
popa
mov
and
in
popa
mov
adcl
movsl
call
ror
push
mov
or
cli
clc
fstl
stos
into
into
in
ss
scas
loopne
loopne
call
sbb
xor
adc
inc
add
push
cs
lods
jl
call
ljmp
pop
test
jle
fs
int
push
movsl
shlb
mov
iret
cmp
les
mov
fidivl
push
pop
jle
and
lods
cli
mov
icebp
js
dec
cwtl
pop
or
std
jbe
adc
jo
lds
lret
fdivrp
clc
xchg
cmpl
push
push
repz
add
insl
sbbb
ljmp
imul
or
cmc
pushf
popl
hlt
xchg
push
rolb
mov
jo
inc
addr16
sar
jp
xor
aam
jns
aad
jno
movsb
pushf
mov
adc
cmp
pop
xchg
xchg
jnp
dec
andl
jo
cli
lea
sbb
mov
push
iret
mov
lds
cmc
fwait
jl
mov
jge
sti
mov
lods
stc
xlat
xor
mov
mov
cld
mov
add
ljmp
jmp
jne
int3
test
das
scas
aad
movsb
in
in
sub
sub
lret
pop
mov
cmpsl
jmp
push
add
pop
cmp
xor
cmpsb
cmp
test
push
inc
add
aam
cmp
into
xchg
mov
stos
mov
bnd
clc
mov
gs
out
inc
jg
pop
fucomp
jo
add
push
mov
or
pop
jbe
addr16
mov
arpl
sub
in
jg
add
sti
lock
popa
data16
jge,pn
push
sub
int
repz
int3
xor
divb
lcall
fsubl
jl
xor
cltd
fiaddl
push
dec
inc
mov
or
or
or
push
mov
movsb
add
mov
xchg
clc
shrb
mov
mov
inc
into
xchg
mov
or
faddl
xchg
xchg
mov
incb
movsl
std
int
pop
bnd
push
test
mov
scas
xchg
std
std
test
data16
jg
cmpb
jbe
nop
sub
inc
jp
rcl
add
mov
mov
stos
or
aam
mov
iret
pop
inc
mov
call
and
iret
addr16
int3
test
addr16
shlb
movsb
test
stc
aam
xchg
mov
shlb
inc
ja
test
sbb
addl
sarl
roll
aam
ja
mov
mov
fcomps
dec
test
pushf
push
fistpll
sub
sbb
mov
xchg
mov
inc
inc
aad
pusha
pop
loop
push
jmp
ror
jg
je
in
xchg
lods
push
lea
push
inc
sub
leave
add
mov
push
and
mov
xchg
repz
xor
out
add
and
jo
adcl
xchg
jns
addl
add
push
bound
and
adc
shll
push
fcomip
std
shll
add
lret
bound
aas
shrl
pop
pop
sub
in
xchg
pop
js
cmpsl
testl
addl
rcr
ja
inc
add
inc
jle
rorb
adc
pop
cwtl
hlt
mov
xor
sbb
and
out
xlat
and
mov
cmc
mov
fadds
sub
ret
cmc
cli
push
stc
mov
dec
repz
and
out
loop
mov
inc
shr
stos
sti
mov
jns
cwtl
shrb
pop
in
movsl
es
adc
fildll
ss
cmovb
test
mov
out
pop
push
and
adc
sub
cltd
add
outsl
leave
xor
rorl
sub
xchg
outsl
inc
jno
lds
mov
sbb
arpl
dec
ljmp
or
push
inc
nop
adc
loope
cltd
mov
andl
cmpl
push
fnsave
pop
aas
mov
mov
add
int
stos
imul
xchg
mov
cmpsb
add
xchg
mov
shrl
roll
testl
lods
jmp
aad
fdivrl
sub
testl
rcl
fbld
dec
push
scas
push
std
pushf
mov
and
and
jae
xchg
or
mov
or
or
adc
ret
xchg
adc
pop
in
test
mov
mov
sub
dec
enter
dec
lret
ljmp
mov
adc
mov
out
xlat
movsb
dec
ret
aaa
aam
rol
test
les
jl
push
insl
jns
mov
xchg
fcos
or
add
xchg
xchg
mov
vpsubq
sbb
mov
ds
push
repz
xchg
ret
mov
jo
adc
mov
mov
add
cmp
xchg
pop
lods
add
stos
inc
in
fs
mov
rclb
js
and
outsl
dec
jp
mov
js
imul
fsts
loopne
jns
bound
push
mov
xsha256
cmpsb
xchg
nop
dec
cwtl
mov
hlt
jg
xlat
xchg
scas
cmp
xchg
stos
xchg
les
mov
pop
nop
movsb
pop
inc
xchg
xchg
sti
mov
push
sti
or
lahf
movsl
in
orl
mov
jne
add
pop
decb
jg
mov
sbb
aad
rolb
cmc
mov
mov
xchg
pop
mov
cld
test
or
stc
inc
js
shll
mov
hlt
ret
jno
adc
and
lds
cmc
adc
cwtl
in
rorl
xchg
jmp
iret
in
pop
movsb
adc
sbb
les
out
mov
push
cmpsl
dec
mov
cwtl
popf
mov
jnp
xor
mov
inc
cmp
xchg
xchg
adc
sbb
aam
cmp
ds
jl
pop
mov
adc
add
mov
or
jmp
mov
fcoml
or
add
jle
inc
jg
xor
or
neg
and
test
stos
cmp
inc
cmp
enter
mov
pushf
fsts
jmp
mov
xchg
shr
ljmp
xchg
push
mov
push
xor
mov
dec
movsl
fs
mov
mov
in
xchg
cmovle
mov
push
shr
gs
cmc
enter
clc
xchg
xchg
das
cltd
test
xchg
jo
jp
adc
jo
cld
leave
dec
pop
dec
inc
aad
cld
iret
imul
inc
fisttpl
mov
adc
xchg
test
sub
pushf
mov
inc
shll
in
mov
mov
xchg
sbb
mov
sbbl
mov
sahf
insb
xchg
dec
sbb
mov
mov
imul
ljmp
je
into
push
cli
iret
xlat
and
fcompl
sub
mov
rcrl
cmpsl
sbb
shll
and
xchg
es
movsl
call
push
and
xor
rcr
pop
bound
lea
xchg
mov
and
clc
movb
pushf
lret
pop
jp
ficoms
xchg
rcrl
inc
mov
mov
ret
dec
push
nop
in
adc
test
mov
pushf
or
popa
test
xchg
mov
fidivrl
ljmp
pushf
or
fcom
mov
pop
cmp
xchg
subl
stos
mov
adc
je
adc
mov
xchg
es
ja
in
sub
lock
or
pop
pop
cld
fcmovb
test
xor
cmpsl
xchg
dec
cmp
pop
test
dec
ljmp
les
push
dec
push
mov
imul
js
fnstsw
jp
insl
cmp
test
mov
mov
data16
xlat
xchg
invd
imul
fsts
add
adc
pop
sub
mov
in
sub
dec
pop
xchg
and
sub
aad
fbld
andl
rorb
inc
sbb
pushf
aam
mov
je
lods
jb
jns
xchg
adc
adc
xchg
faddp
cmp
inc
push
nop
lods
ljmp
and
jmp
pop
in
fldcw
cmp
push
stos
mov
xor
dec
loopne
dec
mov
sbb
sahf
xchg
mov
mov
imul
sbb
das
mov
js
mov
orb
cltd
and
inc
mov
mov
mov
jmp
nop
sub
push
xchg
xchg
add
adcl
les
mov
pop
xorl
shr
fcoml
or
cmpsl
dec
sbb
call
das
dec
movsb
test
das
add
cmp
jbe
dec
ja
mov
ljmp
add
vpcmpgtw
sbb
sbb
or
pop
lret
sub
mov
insb
cmp
jae
ljmp
and
leave
imul
shll
jae
pop
jg
pop
pop
jno
cmpsl
rorl
daa
sub
popa
xchg
xchg
mov
lods
mov
cmp
or
inc
xchg
les
adcl
enter
or
xor
ljmp
cmc
mov
push
enter
add
jp
aad
or
out
sub
shlb
in
and
dec
andl
inc
push
int3
sbb
sbb
les
popf
pop
push
push
mov
inc
stos
cld
mov
cli
mov
incb
cwtl
scas
sub
add
mov
mov
popf
int3
stos
rcl
sub
jb
mov
les
shl
push
bound
pop
jmp
inc
inc
jecxz
out
push
int
cmpsl
iret
inc
jge
nop
lahf
dec
push
mov
cwtl
decl
push
in
lcall
xchg
pop
sub
dec
ret
adc
jg
jmp
xchg
nop
in
add
int3
mov
out
loopne
aam
stc
add
fiadds
dec
xor
jmp
cmp
aad
pop
test
loopne
xchg
cmp
cmc
mov
movsl
pop
inc
cmp
rorl
dec
push
fwait
mov
adc
mov
sub
push
dec
xchg
js
outsb
dec
xchg
cld
xchg
enter
xchg
popf
xchg
movsb
push
es
lods
jg
shll
stos
xor
cmpsb
and
pop
data16
or
mov
xchg
jno
fwait
mov
cld
mov
inc
std
enter
mov
mov
jecxz
inc
sbbl
cltd
and
fs
mov
cltd
xchg
or
jae
lea
cli
fs
movsb
lds
or
lods
mov
clc
fsubrs
mov
lcall
pop
push
xchg
mov
jp
inc
inc
iret
add
in
sub
push
lcall
cmp
ret
rcrb
xchg
or
add
aad
mov
stos
lret
xor
xchg
cs
test
mov
mov
pop
adc
mov
push
mov
xchg
rcll
lods
je
adc
inc
and
lahf
dec
push
outsl
or
mov
arpl
add
rcll
jne
lret
notl
xchg
shrl
xchg
cmpsb
adc
cld
mov
xchg
hlt
jp
jecxz
les
int3
subb
clc
mov
jl
push
dec
and
negb
outsb
xor
cwtl
mov
xchg
push
ljmp
stc
insb
jmp
filds
dec
cwtl
xchg
pop
test
adc
aam
sub
cmp
sub
mov
sbb
orl
or
mov
push
cltd
nop
push
xchg
psrlw
adc
sbb
mov
imul
daa
inc
or
aam
sbb
lods
pop
lret
in
cli
shrl
test
push
or
enter
into
outsl
mov
cmp
adc
push
mov
lret
cmpsb
jne
out
xor
pop
hlt
lret
sbb
pushf
in
enter
dec
add
outsl
andb
cmp
push
mov
fsubp
xor
push
shrb
rcr
mov
aad
mov
lds
xchg
test
mov
and
adc
mov
cli
lds
and
mov
lods
int3
out
or
jmp
fsubs
cmp
and
nop
test
test
sbb
fdivr
test
xor
loopne
sbb
jl
fucomip
jg
call
and
inc
call
xchg
movsb
pop
in
sbb
or
int
insb
xchg
sarb
rcl
mov
ljmp
sbb
cltd
xchg
mov
enter
rorl
out
push
mov
lret
jg
stos
or
mov
cmp
pusha
sti
in
insb
mov
fwait
outsl
inc
jb
xor
js
or
mov
add
dec
pop
xlat
xchg
push
popf
and
out
adc
and
sub
adc
sub
adc
or
push
jns
sbb
ret
in
rcrb
ja
push
add
sbb
lds
aad
cmpsl
xor
cmp
push
add
xorb
mov
xchg
mov
hlt
xchg
cmp
addl
mov
enter
rolb
pushf
cmpsb
or
insb
push
aas
orb
push
iret
dec
mov
popa
mov
or
cmp
mov
jg
stos
pushf
push
mov
adc
sub
stos
sbb
or
pop
adc
sub
sub
jg
fbstp
cmpsl
sub
sti
dec
push
ret
add
cmp
push
pusha
xchg
in
mov
adc
xchg
inc
xchg
lods
clc
std
nop
in
bswap
inc
nop
inc
sub
and
enter
pushf
adc
jo
imul
stc
jb
mov
sarl
mov
test
sarl
mov
gs
cmp
fcmovbe
sbb
push
adc
test
jle
rcll
mov
aaa
insb
xor
cmp
movups
stos
movsb
test
pop
and
jnp
mov
adc
enter
dec
fistpll
insb
in
test
test
stc
enter
fcmovbe
mov
mov
lret
rcrb
xor
dec
pushf
xchg
stos
inc
push
dec
jg
insl
sub
adc
add
mov
stc
adc
push
std
stc
jne
jmp
subb
adc
jecxz
imul
cld
xchg
mov
mov
cmpl
ret
add
js
fldcw
loopne
loopne
leave
out
xchg
xchg
jno
jg
xchg
ret
leave
rcr
add
jl
push
sbb
add
stos
xchg
movsl
mov
pop
rclb
in
xor
pop
pushf
xchg
pop
int3
push
lds
shlb
ja
movups
add
cmc
jmp
and
add
jb
xor
rorb
push
aas
in
fadds
push
sahf
mov
jecxz
shrb
xchg
int3
ret
add
popa
call
lock
cmpsl
rcl
fistl
rcl
xchg
or
nop
adc
ret
test
jg
scas
add
push
hlt
mov
popa
xchg
je
push
mov
fldl
mov
out
cmpsb
add
ljmp
mov
rorl
mov
jmp
mov
dec
xor
push
fcmovb
or
enter
mov
std
jmp
add
mov
xchg
mov
ds
xor
jne
push
in
mov
xchg
ror
cs
push
movsl
push
mov
dec
faddl
inc
loopne
std
mov
cmpsl
pop
pop
cmpsb
mov
test
pmuludq
shlb
mov
addl
add
push
call
rcll
dec
mov
mov
enter
andb
aad
and
orb
sahf
xchg
mov
inc
xor
les
shrb
shrb
xlat
mov
shlb
add
rcl
add
pop
jg
push
adc
mov
inc
or
jl
in
loope
stos
mov
dec
addb
mov
cmp
pop
scas
cmp
xor
fisttpll
mov
sbb
push
mov
imul
mov
pop
push
lret
or
clc
sarb
scas
cmpsl
mov
adc
aam
cmp
pop
cwtl
mov
sbb
xchg
hlt
mov
les
imul
call
cld
imul
lock
ds
push
aas
fstpl
push
adc
ret
ret
cmp
nop
stos
mov
lock
xchg
imul
xorl
fimuls
push
xor
xor
cmpsb
out
push
mov
lods
inc
imul
jl
clc
adc
loope
push
outsb
xchg
mov
imul
add
loop
sbb
xlat
mov
sub
mov
jns
lret
out
push
test
inc
xchg
xor
loop
sbb
sbb
fsubrs
testb
insb
std
lods
or
imul
testl
jge
movsb
jecxz
pop
rclb
sub
fists
test
clc
test
sub
std
ret
mov
fldenv
lods
push
outsb
out
shll
pushf
pop
xor
or
gs
adc
or
shll
sbb
aam
add
mov
aad
xchg
dec
ret
test
nop
ror
jnp
pop
sarb
sbb
push
jecxz
add
mov
push
jp
pusha
push
sub
pop
sub
in
lods
mov
push
xor
test
fcom
in
push
sbb
enter
or
inc
sbb
xor
and
cli
ror
mov
aad
mov
mov
add
in
mov
sub
ja
push
xchg
add
jnp
call
jns
sbb
dec
imul
in
mov
in
push
insl
pop
loopne
sbb
aas
mov
loope
pop
or
iret
stc
loop
nop
leave
lods
mov
and
mov
adc
mov
imul
mov
shrl
cltd
addl
add
loopne
push
xchg
das
mov
push
hlt
imul
adc
sti
cmpsb
adc
jae
out
mulb
mov
sub
mov
jle
mov
stos
adc
pop
fdivs
cs
sbb
cli
sub
loopne
xor
in
xor
adc
loopne
inc
pop
call
sbb
popl
aad
imull
sub
into
sub
ljmp
leave
or
arpl
jp
xlat
addr16
cmp
into
cmc
xor
mov
mov
adc
fadds
push
xchg
test
pop
sub
push
dec
jbe
push
add
cmc
xlat
push
in
call
jbe
jmp
adc
in
bound
mov
cmc
mov
inc
sub
sar
leave
mov
jns
hlt
lret
rol
ret
int
incl
cwtl
arpl
test
inc
mov
lods
or
mov
rcl
adc
pushl
flds
cld
test
xor
imul
fdivrl
mov
loopne
inc
jo
cmc
sbb
enter
mov
dec
jg
dec
pushl
movsb
repz
xchg
enter
sbb
movsl
gs
sub
popa
add
jo
fidivl
mov
add
jl
adc
mov
pop
ljmp
mov
shlb
stos
loop
lcall
outsb
cmpsb
pusha
jb
lock
ds
aam
aad
mov
dec
stos
pusha
adc
xchg
insl
ret
in
xor
and
jle
mov
loope
repz
shr
and
cmp
pop
dec
rol
std
xchg
xor
fcmovne
les
add
fsub
shlb
shrb
cwtl
shlb
lret
cmpsl
shr
fstl
mov
xchg
mov
aam
leave
js
cmpsb
add
cmp
mov
dec
push
les
push
adc
iret
lods
lret
shlb
sbb
pop
lret
xor
jp
popf
xchg
in
hlt
or
nop
push
jnp
repnz
push
rcl
fildl
inc
push
lds
mov
pop
nop
inc
jo
add
mov
mov
or
mov
rcl
push
xchg
and
cmp
push
or
sarl
xor
sbb
test
mov
cmpsl
call
xchg
mov
ds
mov
clc
test
sbb
movb
cltd
sti
cmp
insb
rol
or
and
in
imul
mov
fwait
mov
pop
pushf
xchg
xchg
push
jo
xchg
push
push
outsl
inc
xchg
mov
hlt
sub
xchg
cwtl
push
in
lock
int
mov
sbbb
int3
testl
loop
mov
mov
dec
test
pusha
xor
mov
or
dec
push
xor
inc
xchg
rorb
xor
lock
cmp
xor
sti
daa
pop
xchg
xchg
inc
xchg
pop
xor
dec
clc
aad
xchg
and
mov
jns
cmpsb
les
js
and
mov
sub
adc
adc
rcll
xor
cltd
out
fldt
adc
cmp
es
enter
or
fcom
mov
lret
jge
test
pop
push
cwtl
ret
test
and
outsl
push
xor
inc
leave
inc
cmp
ret
adc
aas
push
andb
mov
or
jl
dec
lods
pusha
scas
out
int3
mov
inc
mov
sbb
mov
fwait
aam
pop
jg
inc
rcrl
fistps
and
push
inc
or
cld
shr
pop
cltd
adc
xchg
les
aam
or
lock
test
sarl
test
or
cmp
pop
loopne
rcr
sub
sbbl
into
fcom
leave
jno
dec
stos
mov
fs
or
fadd
cs
sub
mov
ret
mov
movsb
mov
adc
mov
mov
mov
push
fisubs
fdivrl
in
popf
enter
in
jp
mov
or
xor
ror
mov
stc
pop
jle
in
jle
pop
sbb
lret
jns
pop
loopne
lods
in
into
push
cs
lods
ret
aas
and
fiadds
push
pop
jns
sbb
aad
stos
mov
xlat
ror
insl
rorl
roll
and
daa
push
test
cmp
scas
fsts
test
push
cmpsl
sbb
fimuls
aad
or
popa
scas
pushl
xchg
std
push
movb
push
pop
fisubrs
test
addr16
fsub
adc
mov
insb
pusha
or
sbb
nop
repz
cmc
test
xchg
or
mov
shrb
pop
gs
stos
dec
ror
jae
push
ret
movsl
mov
icebp
nop
mov
push
bound
js
ljmp
adc
cmp
or
push
adc
out
cmp
jmp
mov
push
ret
sbb
adc
loopne
inc
shr
sbb
mov
jmp
jne
adc
cmp
mov
mov
in
shrl
inc
pop
push
pop
push
mov
xchg
push
imul
push
push
mov
lcall
mov
cmp
xor
xlat
pushf
jp
int3
test
push
movsl
fcompl
adc
xor
test
mov
pop
loopw
into
movsl
mov
pop
xor
sbb
filds
subb
mov
adc
push
in
cs
jae
push
loope
loop
mulb
popf
xchg
mov
and
fiaddl
mov
lahf
adc
or
nop
mov
cmp
mov
imul
mov
jmp
in
loop
cwtl
cmp
adc
mov
ds
mov
lock
or
fwait
push
leave
fsubl
xchg
sbb
cmp
cmpsl
int3
fstps
sbb
pop
pop
lock
add
test
pop
fmull
stos
xchg
sub
mov
enter
bswap
nop
adc
test
fs
imul
inc
in
pushf
push
ss
mov
pop
mov
test
dec
dec
cwtl
xor
lret
icebp
ljmp
cs
enter
mov
dec
lods
mov
inc
jne
imul
mov
movsl
jp
or
push
dec
imul
mov
imulb
inc
xor
cmc
mov
adc
sbb
fdivr
xchg
xchg
pop
scas
andl
xchg
lret
jecxz
daa
adc
dec
insb
xor
pop
sbb
mov
stos
imul
or
scas
sarl
sub
inc
ret
mov
fs
data16
jge
stc
jp
jbe
fwait
das
call
add
pushf
sarl
jbe
leave
std
or
xchg
movsl
pop
mov
mov
cmpsb
notb
lock
aad
inc
xchg
mov
mov
mov
inc
dec
or
add
or
jbe
mov
mov
jl
adc
cwtl
mov
sarb
xlat
xchg
jge
call
xchg
xor
cmp
jmp
pop
sub
mov
int
nop
pop
das
and
xor
or
nop
in
dec
pop
jns
mov
xchg
aam
in
xchg
dec
leave
lock
dec
nop
ret
inc
xchg
and
movsb
shrl
pop
rcll
add
mov
jp
ds
and
orb
mov
popa
ljmp
pop
mov
hlt
dec
cli
mov
xor
inc
push
sub
mov
adc
jnp
xchg
push
mov
cld
push
in
movsl
bound
or
or
ja
and
adc
sub
mov
push
mov
mov
lcall
rcll
inc
fistl
out
mov
jg
mov
lock
cmpl
sub
add
or
fs
cmp
movsb
add
add
in
cmp
flds
test
les
adc
jno
pop
mov
outsb
loop
enter
movsb
or
in
ja
mov
aad
push
push
cmp
pop
sub
mov
or
push
bound
sar
or
bound
imul
test
enter
xor
imul
mov
push
iret
ja
dec
sub
lods
sub
int
jbe
shrb
sbb
jo
loope
inc
outsl
dec
jge
shrl
mov
adc
or
jo
pop
mov
iret
jg
out
mov
add
and
lret
jo
push
push
ss
dec
test
adc
pop
sbb
fnstsw
sbb
dec
jo
rcll
cmpsl
test
fists
pusha
scas
insb
xor
cmpsb
dec
or
mov
mov
cmp
adc
mov
mov
fimull
bound
lea
mov
shrl
pop
leave
pop
push
popa
scas
cmp
fs
popf
mov
push
cmp
test
outsb
adc
and
xchg
in
sub
add
nop
push
add
cmp
jbe
int3
and
cli
cmpsl
movsl
sub
hlt
xor
sbb
imul
mov
jl
loop
mov
pop
loop
cmp
js
sbb
fmuls
lea
xchg
push
pop
fs
adcb
test
pop
or
dec
test
pop
rcl
mov
push
adc
mov
subl
stos
pop
push
dec
jb
neg
mov
push
out
push
mov
cmpsb
pop
push
adc
in
xchg
xchg
xchg
aaa
cmpsl
nop
lret
popa
jg
mov
stos
and
or
int
ret
mov
pushf
mov
js
es
jl
stos
pop
xor
fistpll
mov
jl
add
das
pop
add
sub
movsb
fbld
push
jne
stos
mov
imul
rclb
int3
stos
fsubr
andb
mov
in
sbb
in
rolb
adc
inc
jmp
popa
mov
leave
cld
push
inc
lahf
rolb
jp
jns
pop
or
mov
xchg
cld
mov
adc
xchg
pop
adc
inc
imul
test
pop
pop
xchg
mov
pop
lret
inc
pop
aas
jae
orb
push
in
sbb
and
cmp
push
hlt
mov
mov
repz
inc
xchg
pop
sub
push
xchg
cmp
push
int
sub
ficompl
cmp
sbb
ret
inc
sbb
push
bound
pop
pusha
or
xchg
shrb
shll
xchg
push
cmp
imul
sub
les
xchg
inc
adc
fidivrs
stos
inc
inc
inc
std
loope
test
pop
movsb
mov
push
rorb
mov
cld
pop
imul
mov
push
mov
arpl
test
mov
mov
mov
mov
push
outsl
or
dec
enter
call
out
cmp
inc
dec
test
jecxz
mov
xchg
and
leave
hlt
sub
test
lds
cmp
jle
inc
mov
dec
je
mov
movsb
fwait
jnp
movsl
fbld
and
stos
hlt
dec
sub
mov
or
add
test
cltd
mov
std
pushf
rclb
pushf
rcrb
or
jb
fcmovnu
insb
in
lret
mov
mov
aas
or
or
inc
mov
or
subl
iret
je
or
adc
fldt
add
jg
xchg
loop
mov
andb
fnstcw
pop
popf
movsb
dec
jno
or
pop
test
nop
imul
mov
mov
push
jp
fcomps
xchg
xor
mov
sub
add
shll
xchg
mov
inc
mov
sub
inc
or
inc
and
cwtl
mov
gs
push
jge
push
fwait
enter
sbb
out
movsl
push
adcl
hlt
lea
scas
scas
jmp
lock
negb
mov
aas
push
aaa
fbstp
addb
outsb
xor
insb
xchg
stos
les
adc
jnp
inc
aas
shlb
pop
xchg
or
mov
fwait
movsb
in
test
add
or
dec
outsb
fiadds
stos
sbb
lods
mov
adc
mov
shrb
or
shlb
cltd
mov
and
cmp
dec
negb
imul
mov
pop
cmpsb
leave
sub
mov
sub
js
out
mov
push
aam
jnp
dec
rolb
test
pop
pusha
scas
push
inc
imul
jae
mov
push
adc
pop
xor
mov
mov
ljmp
cltd
lret
cmc
xchg
ljmp
test
jg
pop
mov
cmp
and
enter
cld
nop
test
insb
or
mov
les
inc
and
enter
or
fstps
mov
xor
lods
fists
cmp
cmp
gs
scas
mov
add
xor
pop
cltd
mov
pop
sub
cmpsl
xlat
xchg
mov
pop
nop
outsl
cltd
fsubs
pusha
enter
lret
pop
sbb
xor
xchg
add
sbb
mov
push
jae
aam
ja
mov
sbbb
adc
bound
xor
mov
pop
xorb
or
pusha
or
pop
ffreep
xor
adc
push
dec
xorl
cmp
shrb
xchg
sahf
test
pushf
orl
or
inc
adc
int3
rclb
fnstcw
loope
aad
mov
cmc
ficoms
inc
rorb
xor
enter
in
icebp
add
push
int3
int3
or
xchg
dec
stos
call
into
int3
jg
or
test
push
pop
data16
nop
insb
sub
aas
dec
aam
out
cs
xchg
addb
sahf
fcmovnb
push
repnz
mov
push
xor
std
in
mov
cmc
stc
mov
shr
cltd
push
adc
add
or
hlt
out
pushf
test
fwait
mov
xchg
addl
pop
mov
add
ja
xor
sahf
stos
cltd
and
stos
mov
ljmp
imul
or
xchg
and
scas
scas
fstpl
pop
fisttps
ja
push
pop
in
lods
or
dec
lods
add
push
dec
mov
popf
xchg
jbe
repnz
movsl
add
dec
push
in
mov
add
mov
inc
xchg
sub
dec
pop
sbb
and
or
shll
call
ja
cltd
shrb
or
push
jmp
rcrl
and
je
add
test
sbb
movsl
pop
ds
mov
in
mov
push
jne
or
inc
daa
pop
adc
shlb
push
inc
mov
cmp
push
mov
fiadds
or
push
test
inc
push
out
rcrb
xor
fwait
insl
ffree
in
scas
mov
xchg
movsb
lods
mov
mov
push
test
fcompl
je
dec
mov
lds
cwtl
mov
inc
call
dec
sbb
adc
je
push
mov
mov
lods
or
cmp
pop
mov
add
notl
pop
pop
lcall
mov
test
push
sarl
and
hlt
aad
imul
stos
test
pop
test
in
mov
in
mov
loope
hlt
movsl
mov
cmpsb
mov
lahf
loope
inc
in
sbbl
enter
add
inc
add
adc
cmpsl
sbb
les
test
add
orl
nop
push
push
sbb
movsl
pop
imul
pop
into
pop
dec
fcmovne
push
roll
and
hlt
test
sub
cltd
faddl
fdiv
jmp
movsb
mov
pop
fmull
pop
cld
jg
aas
lock
enter
push
daa
pop
insb
cmp
adc
pop
pop
rcrl
xchg
rcr
js
xchg
fiaddl
add
add
scas
hlt
in
cmc
dec
call
jge
mov
fisttpll
into
or
push
ret
mov
dec
enter
dec
cmpsl
rcr
mov
test
lahf
test
add
pop
cmp
and
hlt
jle
rcrb
or
daa
pop
add
mov
jne
xchg
lds
jbe
test
lds
icebp
mov
mov
add
push
ljmp
fsubs
add
or
arpl
popa
repnz
push
aas
stos
add
push
cmp
xchg
repnz
sahf
jns
fbld
repnz
rorl
adc
cmp
sarb
rcl
xchg
iret
outsb
mov
pusha
inc
push
stos
jno
out
xor
and
test
pop
xor
cmp
lock
dec
or
adc
inc
push
adc
mov
xor
lods
sub
jns
push
andl
mov
dec
insb
push
mov
insl
cmp
or
les
jbe
ja
xor
mov
mov
xlat
les
xchg
sbb
mov
xlat
xchg
cmc
subl
aad
fs
push
ds
push
les
sbb
rcrb
repnz
and
lea
inc
frstor
jmp
addr16
add
hlt
repnz
fcmovnu
xchg
in
sbb
adc
xchg
fwait
jmp
aad
cmpsl
xor
rcr
push
mov
mov
mov
pushf
ljmp
into
fsubrl
cwtl
subl
cwtl
cmp
push
imul
and
push
mov
jl
out
xor
jle
test
ja
cmp
js
cmc
pusha
adc
xchg
cmc
sub
idivl
and
lea
xchg
xor
stc
push
mov
and
scas
bound
pop
mov
ja
rorb
adc
sub
fcoms
mov
sti
xchg
mov
lret
nop
int3
into
mov
pushf
rcl
imul
pop
and
xor
rcl
loop
add
mov
or
inc
test
inc
or
ror
xchg
mov
aaa
adc
fsts
movsl
jne
mov
xor
stos
std
push
and
xlat
or
test
xlat
ror
and
dec
or
js
aaa
cwtl
cmp
subb
dec
adc
jnp
mov
stos
aas
or
push
inc
movsb
push
mov
inc
adc
adc
movsb
into
dec
adc
cld
adc
xchg
jg
sbb
mov
mov
pop
cmp
lret
cwtl
jmp
sbb
push
xchg
roll
or
cwtl
aam
sbb
cmpsl
hlt
dec
test
adc
bound
inc
mov
xchg
hlt
or
fadds
in
adc
push
mov
push
inc
mov
fwait
call
dec
sub
xor
mov
push
or
imul
sub
sbb
pop
adc
cmpsl
inc
sbb
ljmp
mov
inc
mov
cmp
nop
or
in
mov
rolb
icebp
mov
test
iret
icebp
int3
roll
push
push
add
adc
or
jecxz
add
aam
or
mov
or
in
outsb
adc
xchg
push
repnz
xor
mov
outsb
pop
mov
mov
xchg
push
repnz
xor
test
cmp
xor
xor
das
adc
jb
scas
push
negb
mov
adc
shl
xor
xchg
fstp
dec
inc
fisttpl
pop
lret
push
inc
xchg
dec
jecxz
aad
push
das
mov
imul
sub
jne
mov
scas
or
sub
fwait
jg
add
iret
pushf
imul
test
sub
mov
fisttpl
mov
mov
mov
mov
push
andb
push
ds
pop
cmp
adc
sbb
mov
ret
pushf
ret
pop
or
inc
in
in
and
pop
aas
xchg
push
sahf
popf
sbb
mov
mov
adc
clc
fstpl
adc
jl
cmp
pop
mov
mov
int
loopne
popl
push
les
push
je
xchg
jnp
rcrl
cmpl
pop
mov
adc
aad
test
roll
cmp
fiaddl
adcl
push
fcoml
and
lret
mov
inc
daa
dec
add
push
int
filds
mov
cmpsl
inc
out
adc
lods
mov
pushf
cli
or
fdivl
push
xchg
paddb
and
std
test
imul
daa
inc
xor
fdivrs
insl
jae
mov
jl
paddsw
shl
jmp
cmp
dec
mov
out
push
jno
mov
jg
pop
cwtl
pusha
pop
or
mov
aaa
and
fidivrl
mov
xchg
ds
pushf
mov
shl
cwtl
jle
or
icebp
add
outsl
or
or
fistpll
lds
sbb
inc
adc
sbb
addl
xchg
ljmp
xchg
out
flds
movsl
sarb
push
mov
push
sub
jge
adc
ficompl
mov
jp
xchg
rcrl
and
lock
fldcw
mov
add
scas
das
cmpsb
scas
adc
sbb
push
mov
lret
adc
test
xchg
movsb
into
int3
addb
enter
test
push
aam
push
mov
arpl
dec
sub
mov
or
adc
add
xchg
popa
pusha
repz
push
jg
add
xchg
or
or
or
cmp
jno
ljmp
imul
dec
scas
jne
pop
mov
fistps
push
mov
mov
push
leave
lods
lock
or
mov
mov
or
lcall
ja
outsb
sbb
xorb
in
ret
cmp
les
ljmp
shl
imul
xor
rcl
imul
mov
ret
imul
cwtl
hlt
xchg
adc
mov
in
cmp
clc
inc
pop
fsubrs
cmpsb
or
jge
xlat
lea
int3
mov
sbbb
dec
adc
pop
xchg
into
adc
jnp
test
insb
aas
push
shlb
ret
aam
dec
mov
cs
pop
cmp
popa
xchg
xchg
movsb
mov
jecxz
mov
mov
pop
or
xchg
cmp
mov
cltd
push
ror
sub
xchg
mov
mov
jo
mov
gs
inc
sbb
xchg
leave
mov
clc
mov
aad
adc
outsl
dec
fisttpl
xor
xchg
lds
ret
icebp
cmp
mov
les
scas
xchg
enter
sub
pop
push
addr16
nopl
mov
outsl
das
or
js
arpl
push
or
jp
and
jge
jl
cmp
xchg
dec
mov
xchg
push
mov
cltd
fcmovnbe
addr16
inc
in
sti
adc
arpl
adc
aad
mov
dec
sub
cmpsb
leave
cmp
mov
lret
inc
lea
mov
jle
in
imul
out
fistpl
sbb
hlt
mov
jp
bound
xchg
pop
xor
xchg
mov
inc
add
dec
or
dec
test
mov
xchg
movsl
sbb
cmp
jg
stos
hlt
cmp
ret
hlt
pusha
inc
enter
outsb
scas
shlb
aam
sbb
fstl
in
mov
or
mov
xor
xor
mov
inc
xor
lods
movsb
and
mov
inc
sbb
xlat
rolb
fcomp
aad
or
aas
cmpsb
or
mov
mov
test
jnp
ret
icebp
int3
sti
aaa
rorb
jo
add
imul
test
lds
xor
popf
cmp
imul
cli
int3
jecxz
fldenv
out
shrl
and
int3
xor
dec
add
cmpsw
or
shrl
pop
cmpsb
add
shrb
inc
sbb
dec
leave
adc
decl
mov
insl
decl
mov
push
mov
or
aas
fstl
sub
flds
ds
or
lcall
nop
mov
dec
cltd
mov
or
and
dec
pop
inc
cwtl
mov
mov
adc
loop
enter
cs
out
push
inc
pop
and
cwtl
dec
xlat
leave
push
enter
fcoml
sub
lret
fists
lds
cmp
out
ret
adc
mov
push
mov
outsb
in
push
in
rorb
mov
sbb
jb
push
lea
sbb
push
addb
push
mov
in
subb
test
mov
cld
test
inc
push
ret
lds
jmp
stc
test
call
xchg
sub
mov
sbb
loope
xor
jp
adc
lret
pop
or
pop
jo
hlt
testl
sti
test
dec
or
lods
mov
xchg
int3
les
call
xor
inc
cwtl
pop
fidivrl
cmp
stos
lcall
xor
mov
testb
fbstp
test
mov
cld
pop
dec
mov
mov
xchg
nop
scas
push
loope
ror
sbb
pmulhuw
stc
andb
mov
sbb
mov
in
ljmp
loop
xchg
inc
fwait
mov
inc
not
sbb
idiv
es
testb
mov
pop
push
sub
movsb
lods
shrl
arpl
push
fdivl
xor
mov
dec
popf
mov
aam
test
jnp
xchg
sbb
push
mov
push
xchg
jp
push
sub
mov
shl
fildll
aam
repnz
rcl
add
sbb
dec
lods
hlt
mov
ret
scas
mov
scas
cltd
incl
fimuls
ljmp
sbb
ss
das
pop
into
dec
ret
loopne
lret
fstpt
aaa
pop
fldenv
mov
inc
sub
int
fsubr
or
or
xchg
xchg
js
shrl
loope
ds
outsl
bnd
xlat
pop
push
dec
jmp
xchg
adc
out
stos
mov
cmp
call
push
icebp
in
lods
fmull
mov
mov
mov
jno
inc
jnp
inc
into
cmc
repnz
add
sub
lock
push
or
mov
sbb
fiaddl
pop
mov
jns
mov
cmpsl
test
mov
popf
dec
dec
add
out
mov
inc
mov
push
insb
ret
enter
mov
mov
jle
jmp
jnp
into
arpl
rcrl
pop
std
push
push
fucomi
xchg
mov
outsl
jns
xor
mov
fcom
xchg
test
sub
mov
or
sbb
shl
data16
sub
sub
lret
les
or
loopne
dec
lods
and
loop
ljmp
cmp
lods
add
push
scas
enter
das
movsb
outsb
push
sub
dec
lods
or
lret
mov
lcall
inc
ljmp
ljmp
xor
nop
fadd
xor
lret
mov
stos
test
cld
mov
jl
out
push
cli
cmp
or
xchg
mov
repnz
inc
movsl
std
out
jmp
stos
pop
add
fisubrl
out
adc
sub
sti
jae
jle
mov
or
imul
xor
sub
sahf
or
rcrb
add
loopne
sbb
mov
loop
dec
lret
pushf
ret
shlb
loop
add
and
inc
lds
ret
mov
inc
inc
test
and
sbb
sbb
negl
in
rol
mov
mov
sub
lods
movsb
mov
sbb
xchg
cmpsb
jo
daa
insb
stc
xchg
in
rcll
ss
hlt
in
adc
mov
or
mov
sbb
jg
push
lods
mov
loop
sti
adc
xor
xchg
out
leave
mov
flds
daa
cmc
lea
enter
dec
imul
push
fsubrs
add
nop
fistl
xchg
xor
or
loopne
hlt
xchg
add
push
lea
aas
sarb
js
jle
push
imul
push
sbb
test
xor
rolb
xchg
hlt
jge
cmp
das
aad
xchg
sbb
fiadds
sub
test
les
xor
mov
mov
pusha
xor
cmpsl
mov
sbb
xchg
movsl
les
xchg
adc
mov
lods
xchg
loopne
sub
inc
pop
popa
test
inc
push
ja
in
dec
xor
jge
lods
enter
cwtl
imul
fucomip
cmp
daa
xchg
popf
sub
mov
add
faddl
and
bound
loopne
jg
subb
ds
inc
add
shlb
fistps
loop
sahf
mov
ss
sbb
test
ja
das
mov
jg
out
fwait
cmp
mov
fdivrp
and
clc
mov
mov
mov
in
push
fstpt
cmc
and
sbb
jae
xchg
fisttpll
imul
lds
movsl
sti
sbbb
inc
daa
hlt
divb
mov
mov
pop
rorl
and
xor
or
add
add
aad
mov
test
or
add
aad
stos
sub
hlt
push
cmp
mov
mov
inc
popf
mov
mov
sbb
mov
push
scas
test
test
or
lods
or
mov
scas
cs
insl
mov
xchg
aam
xchg
jmp
cltd
loopne
test
cmpsb
out
mov
mov
inc
push
inc
or
in
dec
and
enter
stos
mov
cwtl
insb
cmp
mov
inc
test
xchg
dec
icebp
test
lahf
dec
clc
shlb
mov
lret
decl
lds
dec
mov
icebp
rol
xchg
push
mov
sbb
mov
xor
stos
jmp
or
inc
xor
sub
dec
icebp
add
dec
push
lds
mov
xor
std
sahf
in
cmpsl
jae
dec
es
in
int
mov
lods
insl
sti
or
imul
loope
sub
pop
sbb
sbb
pushf
cwtl
std
shrb
test
add
cli
shlb
fcmovne
test
xorb
out
mov
pop
sub
and
nop
outsl
adc
test
xchg
testl
sbb
ja
pop
into
jle
push
mov
cmpsb
mov
sahf
fsubrs
push
call
je
das
enter
test
dec
movsl
hlt
neg
in
mov
fcoms
adc
adc
fcmovnu
inc
sub
roll
xchg
mov
adc
mov
fadd
sub
dec
out
push
xchg
jp
test
in
test
ret
or
ja
xchg
rorb
pusha
rcrl
adc
xor
inc
loopne
pop
sub
adc
add
bnd
add
and
jbe
imul
and
popa
inc
mov
cltd
or
fistpll
arpl
movsl
test
nop
mov
stos
scas
xchg
call
in
das
lcall
mov
add
test
loopne,pt
push
xor
call
js
xlat
rcrl
sub
push
iret
or
hlt
mov
imul
mov
std
mov
inc
leave
mov
xchg
push
arpl
xchg
popf
mov
push
pushf
lds
jg
cmp
mov
rcl
cmp
jle
cmpsl
loopne
je
mov
gs
jg
movsl
xorl
pop
jmp
ljmp
sub
adc
cmp
je
andb
pop
add
pop
or
mov
dec
jge
gs
jge
or
fisubs
scas
das
test
mov
sub
hlt
add
mov
int3
cwtl
enter
mov
fs
ds
scas
sub
inc
pop
xlat
rcrl
std
sbb
mov
mov
rorb
xchg
icebp
fbld
cmpsb
add
test
fcomip
mov
inc
test
push
test
sahf
fs
test
shl
leave
inc
mov
roll
cmpsb
mov
gs
movsl
jns
test
lahf
sti
sub
enter
aam
mov
lds
enter
pushf
cltd
lret
xlat
xchg
mov
adc
mov
mov
xor
push
ret
and
xor
mov
adc
jl
or
divb
test
out
lret
and
xor
sbb
cmc
nop
cmp
lcall
cmp
fdiv
iret
in
and
mov
test
popf
cmp
sbb
jp
add
mov
add
inc
mov
mov
and
stos
fcoms
nop
fimull
dec
sbb
jmp
ljmp
ja
enter
shrb
mov
dec
shlb
cmpsl
clc
roll
es
gs
cmpsb
xchg
test
xchg
enter
xchg
js
xchg
cmpsl
lock
ljmp
jbe
cmpsb
xchg
sub
sbbl
mov
dec
mov
jle
idivl
adc
movsb
cs
sub
mov
inc
sbb
fists
or
aad
push
jae
popl
mov
rol
mov
dec
or
push
lods
dec
aad
pop
into
mov
mov
test
fld
xor
pop
movsl
jp
jnp
jmp
push
shll
push
xor
das
push
or
cmpl
outsl
mov
pop
cwtl
movsb
lock
mov
sarl
and
pushf
pop
sti
js
clc
int
pop
les
inc
into
imul
push
in
bound
out
fs
xchg
addr16
xor
aad
icebp
les
rclb
adc
mov
pop
push
cmpsb
push
sbb
rcr
cmp
ljmp
inc
pushf
lods
jle
rol
sti
add
call
cmc
data16
test
movsl
sub
pop
lock
xchg
rol
fadd
add
adc
cmpsl
scas
cld
mov
iret
clc
lods
js
xchg
mov
arpl
hlt
stc
push
stc
nop
push
jmp
enter
push
add
cltd
adc
and
pop
jmp
sub
js
and
sti
int3
lods
mov
xchg
pop
fwait
mov
aam
jge
call
adc
adcb
push
jns
push
sub
cmpsb
imul
sub
inc
sarb
jle
es
lods
int3
frstor
jl
jp
fdivrl
mov
fiaddl
ret
jne
icebp
mov
hlt
nop
les
jae
xchg
shrb
mov
shl
enter
cmpsl
sub
ja
ss
jmp
xchg
decl
xchg
divl
sti
test
leave
rcl
push
ss
and
jo
into
push
xor
out
mov
xchg
lahf
test
sub
fstps
test
xchg
aam
mov
ss
add
jnp
pop
stos
imul
xchg
leave
rorl
jmp
js
jo
sbb
stos
imul
ds
sub
and
ss
jbe
icebp
shlb
dec
mov
cmp
pop
test
jae
push
mulb
xchg
push
ja
hlt
add
nop
mov
push
ficompl
add
les
pop
iret
ds
stos
scas
sbb
mov
inc
xlat
sub
dec
pop
jb
mov
icebp
and
push
cmp
nop
lret
adc
ja
stos
cmp
lds
out
dec
cmpb
mov
cmpsb
lds
rcl
adc
jo
lret
push
and
hlt
scas
fldt
mov
popf
mov
shr
ret
and
lea
xor
mov
ja
aas
lock
add
cld
test
testb
addl
ss
shlb
es
enter
dec
pop
jbe
shlb
cmp
shll
ret
sti
add
fstpt
je
xchg
aas
scas
pop
jnp
mov
mov
mov
mov
jle
roll
xchg
mov
xor
push
and
cwtl
xchg
repz
sbbl
cmpsb
lret
push
mov
insb
je
sub
xchg
std
daa
mov
bndldx
aam
fdiv
cwtl
xor
push
test
ljmp
stos
cmp
inc
mov
test
in
je
movsl
aad
fbld
inc
xor
nop
test
stc
repnz
lods
push
xor
xchg
lahf
aad
loop
jno
sbb
cwtl
adc
mov
mov
aam
out
or
pushf
addl
dec
int3
cltd
dec
mov
test
inc
mov
shl
stos
mov
icebp
les
loope
icebp
mov
call
and
insb
cmp
cs
mov
push
mov
sbb
xchg
rorl
inc
decb
inc
insb
les
jns
testb
pop
out
add
or
pop
jae
test
movl
cmpsb
fbld
adc
mov
pop
inc
sbb
insb
or
stc
jg
hlt
inc
enter
push
fsubl
xchg
mov
mov
les
sbb
movsb
das
xor
inc
jno
sub
mov
adcb
or
bound
mov
hlt
std
xor
cld
mov
mov
mov
rol
cmp
cltd
sbb
fwait
cmp
out
out
cmp
cmpb
mov
adc
pop
mov
dec
lcall
outsl
mov
ret
test
cmp
jge
ret
mov
inc
sbb
movsl
cmp
add
addl
test
pop
lcall
popf
inc
or
push
xor
das
xlat
xchg
xor
mov
ds
mov
adcl
mov
xchg
jp
dec
enter
fucom
xchg
mov
jbe
mov
je
mov
jb
push
cmp
inc
jno
mov
decb
jnp
mov
jg
lea
lds
xor
scas
sub
mov
les
sub
mov
mov
jp
xor
adc
xor
jns
adc
fistps
xchg
mov
xor
cli
fcoml
adcb
or
inc
jecxz
leave
fisubs
js
and
es
jle
aam
add
imul
xchg
stos
push
inc
push
rorb
xchg
mov
andb
jnp
lock
rcr
sbb
add
rcrl
cmp
std
jno
or
pop
enter
and
shl
das
push
subl
mov
mov
push
xchg
enter
push
add
imul
in
xlat
jo
xchg
bswap
mov
mov
xchg
add
std
or
cli
cmc
sbb
add
subl
adc
push
rorb
and
cmp
add
pop
mov
mov
imul
enter
push
or
mov
push
push
xchg
inc
mov
arpl
push
mov
sbb
mov
xchg
notb
mov
scas
mov
rcl
xchg
shrl
xchg
xchg
inc
mov
or
xchg
subl
dec
jg
addl
xchg
shll
mov
or
sbb
ljmp
push
shlb
ror
xchg
sub
adc
push
xchg
call
cmc
push
imul
scas
cs
cs
jno
jns
loopne
arpl
sub
mov
les
movsl
jge
rcrb
pop
xchg
lds
mov
fs
add
rcr
push
fists
mov
adc
or
and
ror
bound
jp
rcrb
adc
inc
movsl
mov
in
push
loop
jle
pop
out
mov
fistpll
movsb
mov
adc
or
pop
sarl
jg
jle
lods
in
aaa
divb
pop
or
xchg
xchg
pushf
cld
movsb
in
bound
push
lds
inc
mov
mov
movsl
adc
enter
aad
cmc
cmpsb
push
shlb
fwait
scas
sub
sarb
mov
nop
cmp
xchg
ret
mov
push
mov
cmp
and
cmc
mov
inc
inc
pop
hlt
lods
scas
lcall
std
insb
jge
fwait
scas
or
cmpb
inc
bound
or
rol
jns
cmp
push
les
repnz
jmp
int
cmp
or
fldcw
mov
pusha
mov
xchg
sub
outsl
shlb
xchg
jmp
fadd
adc
or
jge
les
add
fcmovbe
fildl
movsb
jne
push
fs
xor
shrb
int3
jg
add
mov
inc
jge
xor
xlat
loope
xor
inc
xlat
mov
jecxz
lea
mov
push
xchg
testb
cmpsb
fnstsw
mov
in
lret
ret
or
rcll
and
inc
std
scas
fiaddl
mov
cld
jb
lret
jnp
fcmovbe
je
cmp
inc
hlt
orb
sub
cmc
mov
filds
jp
and
jbe
inc
push
loopnew
adc
pop
adc
stos
push
jl
and
mov
xchg
push
pop
loopne
push
into
add
or
sub
xor
icebp
fildl
adc
cmp
mov
test
in
fimuls
sahf
xor
jl
in
loop
jmp
add
push
mov
fdiv
and
lock
test
mov
adc
mov
add
jg
xchg
adc
pop
dec
clc
enter
xchg
hlt
xchg
out
xchg
ret
test
out
add
outsl
loope
cli
sub
and
test
js
xchg
cmp
loopne
or
mov
cmpsb
adc
mov
aam
cmp
aaa
std
push
cmpsb
rclb
push
inc
sub
lret
push
sub
enter
pop
cltd
jmp
rcrl
and
icebp
rolb
orl
xor
mov
cmp
inc
mov
cmc
and
inc
mov
lock
push
adcb
shlb
mov
push
loope
mov
icebp
add
hlt
mov
mov
sar
jae
test
sub
add
imul
inc
ja
xchg
inc
mov
mov
push
jp
scas
in
nop
fbstp
hlt
push
add
lds
dec
mov
loope
loope
jecxz
jbe
mov
mov
adc
movb
add
lret
leave
or
or
add
sbb
jp
je
imulb
or
mov
loop
or
jbe
roll
fnstsw
add
lcall
sub
dec
pushf
sub
ja
mov
cmp
sbb
mov
int
lret
adc
jp
jge
adc
inc
add
aad
xchg
jp
adc
inc
push
mov
mov
das
dec
jge
js
sub
push
mov
into
cmp
test
jns
fsubl
xchg
fdivl
add
cmc
popa
push
lds
push
and
or
test
fldcw
xchg
out
shll
dec
xchg
pop
ret
aad
lret
fstpl
imul
push
push
jnp
mov
jmp
push
sbb
adc
inc
orb
mov
es
idivb
and
clc
sub
leave
sub
and
add
test
add
in
lret
fdivr
jbe
ret
std
in
mov
hlt
pop
xor
jbe
push
in
cltd
cmpsl
dec
pop
push
inc
push
mov
aam
jmp
mov
sub
xchg
mov
mov
sbb
cmpl
shl
pushf
dec
jo
push
cmp
push
lret
jo
loopne
cs
jl
xchg
push
push
adc
pop
jge
lcall
mov
jmp
dec
mov
into
std
ljmp
lret
test
dec
bswap
nop
arpl
nop
jp
xchg
imul
movsb
jno
xor
xchg
adc
sti
cmpsl
mov
pop
int3
xlat
adc
push
lret
mov
lret
faddp
mov
std
pop
aas
insb
mov
leave
leave
jns
xchg
mov
sbb
movsb
int
pop
test
cmp
lahf
or
int
sub
shl
dec
sbb
jo
fdivr
mov
ror
sbb
xor
scas
rclb
cld
push
sbb
inc
insb
cli
push
mov
or
in
mov
sbb
sbb
stos
lock
nop
popf
mov
mov
inc
xlat
and
add
js
xchg
xor
mov
ljmp
iret
cmp
cmpsb
inc
lret
nop
outsl
mov
xchg
testb
jmp
cmp
aad
imul
aas
in
or
into
push
or
ds
addl
jl
add
aam
xchg
adc
cs
pop
pusha
jg
mov
pop
and
imul
jne
adc
push
mov
cmp
push
movsb
rclb
push
es
mov
insl
bswap
out
xchg
dec
push
rclb
movsl
lods
and
es
test
jo
jns
add
aas
add
fcmovnb
fcoml
test
adc
mov
push
push
push
rclb
cmp
or
out
movsb
lahf
push
sub
daa
add
ds
cmp
mov
leave
xor
loopne
rcrb
mov
sub
sbbl
or
and
or
and
push
adc
fbstp
adc
mov
lods
shlb
push
adc
stc
addl
dec
leave
pushf
fucomi
adcl
sarl
push
xchg
jb
nop
int
add
xchg
push
pop
adc
jb
lcall
aam
fnsave
adc
scas
jae
lret
enter
adc
push
leave
mov
ret
jne
ljmp
jb
mov
and
and
xor
jge
xchg
movsb
into
aas
daa
jbe
aam
push
push
jnp
sub
lret
sahf
scas
xor
rorl
ja
cmp
push
in
cmp
fisubrs
dec
out
movsb
lcall
or
dec
lds
call
cmp
sbb
enter
mov
shrl
shrl
xchg
fisttpll
lret
je
scas
pop
lahf
scas
lods
sbb
sbb
adc
mov
jno
mov
inc
add
sub
sbbl
enter
js
ret
das
and
into
jle
pusha
jg
pushf
mov
sbb
sbb
or
cld
outsl
leave
mov
mov
inc
push
add
inc
jg
fcoms
rclb
loope
int
xchg
jle
arpl
sahf
hlt
lret
add
sarl
mov
mov
ljmp
lea
cmp
mov
les
adc
cld
cmc
xchg
push
dec
hlt
into
lods
rorl
jle,pt
mov
lods
adc
cli
push
mov
scas
xchg
rclb
pop
insl
adc
mov
ret
std
out
push
mov
iret
lret
mov
call
subl
shll
jle
out
mov
sbbl
mov
pop
lahf
lret
pop
pop
sbb
jns
xor
inc
stos
adc
loopne
and
pop
and
push
push
inc
lret
test
lds
out
mov
inc
mov
mov
andb
pop
xchg
or
mov
jge
lcall
lods
mov
jno
sub
push
mov
faddl
add
rolb
pop
and
pop
xchg
aam
cmpsl
and
clc
cld
or
test
ss
xor
mov
and
adc
lret
iret
pop
enter
mov
fs
imul
inc
and
aam
cli
push
lods
xlat
fsubs
push
shl
shl
and
add
sbb
test
sbb
add
add
add
push
sub
cwtl
pusha
mov
aam
add
hlt
jge
cld
pop
lods
lods
pop
pop
enter
into
les
cmp
insb
push
clts
jns
test
fsubrs
push
jg
sub
es
mov
push
ficomps
nop
nop
test
nop
adc
sub
pop
call
mov
ja
movsl
mov
leave
rcrl
dec
test
or
incl
into
cmp
bound
mov
and
and
xchg
mov
fxch
dec
jl
aam
rorb
call
loop
mov
mov
xor
add
mov
xchg
insb
mov
pop
addr16
mov
adc
cmp
aas
lods
push
or
xlat
cmp
lcall
clc
rorb
add
lret
lret
bound
sti
sub
das
lcall
dec
pusha
mov
hlt
iret
cli
les
or
sub
movl
ss
xor
push
les
push
rcrl
or
push
mov
mov
popa
sbb
xchg
leave
decl
pop
xchg
stos
and
mov
or
mov
adc
xchg
cmp
std
push
xchg
mov
iret
sahf
test
ret
add
push
ret
clc
cmp
in
mov
ja
ljmp
out
das
lret
jns
xchg
pop
imul
movsl
pop
mov
adc
int
xchg
sbb
mull
mov
adc
push
push
mov
stos
xor
imul
int3
addl
or
aas
mov
sub
dec
xor
lock
xchg
pushf
ret
cmc
jbe
addr16
sarl
mov
jo
xchg
pop
cwtl
mov
cmc
outsb
mov
movsb
mov
push
fsubrs
mov
mov
fidivs
pop
mov
inc
mov
xchg
push
nop
das
sahf
scas
jbe
cli
scas
push
jmp
clc
push
fimull
and
fs
push
pop
or
cwtl
lret
addr16
push
orb
jo
enter
inc
pop
enter
pop
into
and
jns
popl
out
fidivrl
adc
dec
mov
fisttpll
jge
rorl
xchg
paddsw
inc
testl
xchg
mov
adc
addr16
scas
xchg
add
paddb
or
decl
inc
js
pop
popa
sbbb
lret
adc
ja
and
cmp
xor
xchg
pop
xchg
dec
push
lret
xorl
lea
mov
lahf
rcrl
and
xchg
jmp
pop
pop
lret
xchg
ss
sti
push
popf
das
mov
cmp
cmc
jecxz
mov
rorl
xchg
jecxz
stos
cmpsb
mov
loopne
imul
sub
mov
sahf
cmp
add
mov
fs
cld
dec
dec
pop
pop
push
sarl
xor
sbb
into
mov
cmp
inc
insb
in
sub
adc
mov
rclb
adc
stos
push
and
frstor
push
sbb
sub
add
add
xchg
cmc
xchg
jbe
movb
xor
xchg
inc
add
mov
cmc
xchg
pop
pop
mov
add
sarb
jae
jmp
or
jnp
mov
push
and
in
nop
add
ret
or
or
int
mov
outsb
cmc
les
stos
adcb
mov
mov
xchg
xchg
sub
ds
cmpsl
insb
mov
pop
shlb
nop
or
nop
aam
js
xlat
lea
jmp
call
or
mov
add
lret
loope
lds
test
pop
test
mov
xchg
rcl
sub
xorb
hlt
cltd
mov
iret
andl
lea
fdivr
sub
sbb
loope
mov
pusha
sarb
stos
mov
js
sbb
xchg
dec
imul
pushf
dec
test
inc
xchg
loope
pop
mov
xor
sub
ja
test
cmc
add
jp
mov
movsb
fxrstor
aaa
jle
enter
inc
arpl
bound
pushf
pop
jbe
mov
call
int3
xchg
arpl
hlt
xchg
ljmp
fildl
mov
or
stos
jp
mov
push
xor
mov
cs
or
dec
jge
jmp
pop
jl
add
nop
add
or
out
sahf
and
dec
test
filds
movsb
add
mov
adc
vminpd
xor
fildll
lahf
enter
cltd
test
xchg
fstl
sub
aam
adc
shll
push
pop
xchg
mov
jmp
xor
mov
sbb
enter
les
mov
cmp
nop
push
jg
or
mov
mov
je
jb
jnp
inc
mov
ret
jo
jle
pop
rorl
add
fmuls
andb
jb
xlat
xchg
xchg
adc
outsb
rolb
mov
jno
inc
nop
cmp
icebp
lret
pop
nop
int3
sub
cmc
call
pop
adc
aaa
sbb
loope
dec
nop
mov
ljmp
daa
mov
pop
daa
push
dec
inc
add
add
lahf
rclb
mov
mov
cld
std
movsl
cmpsb
jg
inc
cmpsb
sahf
jbe
movsb
cmp
rcrb
mov
inc
push
test
dec
dec
das
mov
jle
push
or
loop
mov
into
lds
ss
push
popf
pop
pop
lret
lods
mov
jno
dec
clc
daa
cmp
mov
pop
lret
push
dec
jae
shrl
pop
test
ljmp
scas
mov
inc
fidivrl
sub
mov
mov
push
imul
mov
inc
dec
imul
cld
pop
addb
and
in
mov
test
jp
mov
sub
shr
mul
mov
mov
test
stos
repz
lret
add
pop
int
or
rol
outsb
mov
hlt
lahf
fnstsw
clc
addr16
pop
nop
lret
jecxz
inc
rcl
nop
out
jge
or
xchg
sbb
scas
mov
int3
xchg
in
jge
dec
push
leave
adc
loop
xlat
or
add
popl
adcl
in
cmp
popa
lret
mov
aam
or
dec
leave
cli
sub
popf
cmp
add
out
mov
pop
aad
xchg
icebp
sub
movsb
aam
or
inc
or
xchg
shrl
xchg
dec
insl
inc
add
int3
xchg
pop
pop
clc
lret
jl
dec
xchg
ss
sbb
mov
adc
je
jl
mov
and
lods
adc
or
inc
pop
add
les
leave
xchg
addb
out
mov
or
imul
rclb
dec
lahf
les
xchg
mov
xchg
out
cmp
cmc
xchg
jg
xorb
and
test
stos
stos
xchg
stos
pop
aad
test
push
inc
adc
ffreep
add
push
mov
mov
push
pop
pop
insb
mov
jns
nop
inc
jp
lret
mov
outsl
shll
scas
movsl
or
leave
test
loop
lret
repz
int3
or
xchg
imulb
inc
jnp
mov
add
mov
scas
push
push
sub
and
push
or
mov
outsl
ds
mov
enter
jge
mov
popf
mov
sub
ljmp
dec
xchg
leave
in
movsb
mov
fldl
aaa
ret
test
jmp
or
inc
push
or
mov
mov
xchg
lds
scas
xchg
in
roll
dec
rcl
test
in
sub
xchg
xor
lds
sbb
std
cli
pop
aad
not
rol
push
sub
rcrb
inc
scas
rolb
mov
imul
ret
mov
cmp
stc
jl
into
xchg
inc
or
xor
mov
scas
les
test
rcrb
mov
ds
add
sbb
jne
mov
cmc
jl
inc
lods
shr
stos
inc
pusha
mov
jno
cwtl
or
push
inc
xorl
ja
mov
push
in
je
aas
out
jp
adc
aad
lret
daa
test
shrb
inc
jbe
adc
out
inc
aad
add
cmp
lret
push
sbb
xor
dec
inc
push
shrb
rcr
mov
addr16
jbe
jne
pop
outsl
push
adc
push
push
mov
in
leave
int
ss
mov
dec
pop
push
mov
inc
push
mov
add
test
or
bound
rorl
dec
roll
rclb
enter
xchg
inc
mov
pop
mov
roll
lock
sbb
aas
pop
add
aaa
jnp
xchg
mov
repnz
rcl
lea
inc
xchg
outsb
loope
lret
push
mov
shl
pop
insl
insb
nop
scas
pop
rcrl
test
inc
mov
and
xor
rcr
shlb
add
jno
push
adc
push
fwait
sub
jl
inc
roll
mov
jbe
mov
mov
pop
movsb
xchg
shll
nop
mov
fisubrl
inc
lds
sub
mov
shlb
mov
jnp
pop
imul
daa
jns
and
popa
fsts
xchg
cli
filds
push
les
fildll
inc
add
cltd
aas
ret
xchg
jecxz
imul
lods
add
push
sbb
jp
jg
xor
or
dec
push
scas
outsb
mov
daa
decl
daa
xchg
outsl
in
mov
mov
xor
push
fildll
pop
dec
nop
and
es
push
scas
pop
test
sub
pop
xor
les
js
lret
aam
xchg
imul
test
pop
push
pop
and
cmc
rcrb
subb
push
insb
adc
add
hlt
aam
push
sti
fsts
push
push
mov
or
dec
cs
das
je
mov
nop
pop
leave
fwait
mov
mov
add
fiaddl
roll
mov
clc
ljmp
jg
pop
inc
leave
dec
cli
loop
dec
std
shll
enter
jge
movsb
xor
cmpsb
or
sbb
add
push
roll
and
test
inc
or
cmpsb
repz
mov
rcrl
or
xlat
jecxz
lret
inc
das
aam
in
loop
movsl
jns
into
lods
hlt
mov
int
mov
arpl
xor
mov
imul
icebp
imul
adc
dec
aaa
xorl
popf
add
mov
or
cmp
and
mov
mov
xchg
xor
sahf
cld
push
into
mov
xchg
test
mov
std
test
dec
push
aam
sbb
rolw
rcl
mov
mov
sub
loope
ds
and
aas
lret
sbb
mov
cmpsb
test
cld
cmp
adc
jge
pop
cwtl
call
mov
push
iret
sub
jmp
or
aas
pop
shrl
or
and
mov
mov
fimuls
in
dec
insb
in
sbb
lds
movsl
adc
sub
leave
movsb
or
std
aad
lds
inc
cwtl
dec
or
or
js
jae
fs
nop
std
addr16
ret
test
and
adc
pop
cmc
xchg
imul
push
mov
fwait
scas
cmc
jo
push
into
in
push
mov
hlt
push
mov
cs
cwtl
and
pop
and
int3
into
test
fstp
dec
outsb
dec
add
lods
sar
rcl
cmp
stos
jmp
addr16
adc
fmul
mov
inc
hlt
mov
ss
out
sbb
jmp
shl
rcrb
xchg
in
arpl
bound
mov
or
and
dec
rclb
jne
lock
sbb
fcmovu
add
push
jmp
outsl
sub
sub
iret
add
lock
outsl
mov
rolb
iret
xchg
lret
inc
addl
mov
and
out
lret
andb
scas
mov
imul
cmp
iret
mov
mov
or
mov
mov
add
adc
dec
push
push
xchg
movsb
mov
or
in
lods
iret
dec
orb
sti
jl
add
jl
jnp
outsl
lret
mov
sub
or
adc
test
lods
push
sar
fs
lret
pop
pusha
call
pop
stc
cmc
mov
dec
fstpt
pop
jp
imul
shlb
dec
movsb
mov
loope
sti
insb
es
lret
pop
daa
pop
cmp
inc
pop
int3
lret
xchg
pop
inc
or
jge
and
dec
xchg
outsb
lcall
es
test
jge
enter
nop
lret
or
outsl
sub
sbb
mov
in
inc
repnz
or
nop
dec
xchg
aas
pusha
jl
push
das
push
lahf
test
dec
push
cmc
push
mov
ds
add
cmc
mov
adc
test
shl
lds
or
xchg
jl
jnp
xchg
nop
mov
xchg
mov
addr16
inc
in
and
cwtl
lods
movsb
xchg
adc
int
or
ret
sarb
sub
sbbb
mov
int
add
xor
iret
leave
pop
hlt
add
xchg
loop
lahf
push
add
or
outsb
adc
scas
pop
enter
push
je
scas
nop
mov
mov
mov
pop
movsl
clc
shrb
lods
dec
sarb
xchg
and
insb
sub
push
fcmovbe
sub
xchg
leave
pop
jmp
push
pop
sub
insb
mov
test
leave
mov
xchg
jo
stos
lods
int3
cld
repz
sbb
test
dec
pusha
sub
adc
or
aaa
lcall
movsl
push
inc
leave
push
xlat
mov
xchg
loop
insb
cmp
test
fs
into
cmpsl
nop
leave
ret
push
pop
scas
pop
push
and
xchg
das
imul
inc
sub
push
jle
les
jmp
jno
imul
fistpll
gs
push
cwtl
or
shl
mov
rclb
or
imul
pop
mov
test
int
mov
mov
lock
mov
mov
xor
arpl
push
js
fs
pushf
jnp
mov
ljmp
push
idiv
repz
push
push
dec
xchg
lret
into
jbe
xor
sbb
jnp
add
pushl
enter
rcll
pop
orl
and
andl
mov
in
jnp
lcall
push
xor
mov
movsb
shr
mov
sahf
and
and
cwtl
xlat
lds
add
xorl
shrb
pop
lods
iret
int
loop
mov
jbe
repnz
or
or
pushf
cltd
rcl
dec
lods
loopne
imul
fcoml
lret
or
mov
adc
movsb
dec
aam
inc
sbb
xor
lret
mov
mov
mov
inc
xchg
jb
xchg
testb
or
adc
scas
adc
addb
int
loop
test
adc
stos
dec
adc
push
dec
fmul
pop
dec
aad
xchg
popa
repz
inc
xchg
inc
sbb
cmpsl
xchg
loop
add
mov
shlb
out
jbe
insl
sub
lret
mov
xchg
mov
ja
jnp
xorb
inc
xorb
xor
jp
mov
push
mov
pop
cmp
inc
cmp
in
xorl
xor
jmp
cmp
hlt
cmpb
pop
movsl
pop
push
out
add
cmp
or
in
adc
stos
sbb
or
ja
lret
pop
mov
xchg
pusha
sahf
ror
pusha
mov
add
leave
les
cmp
add
nop
mov
dec
mov
stos
into
out
addr16
test
push
dec
pop
cwtl
and
ret
fcoml
add
stos
dec
fmuls
push
xchg
xor
xor
inc
sbb
mov
movsl
pusha
push
scas
addr16
sbb
lock
sub
cmc
int
push
iret
xchg
xchg
push
mov
sub
or
lahf
lods
idivb
loope
or
ljmp
pcmpeqw
cmp
sbb
iret
scas
shl
or
mov
xor
add
push
lods
inc
jl
iret
mov
xchg
xchg
movsl
popa
mov
test
fmulp
adc
xlat
rclb
fstl
loop
mov
mov
cmp
rcrl
push
cmp
jae
cmpsl
dec
mov
mov
rorb
sub
iret
rolb
mov
ljmp
ret
push
fildl
push
rol
or
adc
fdivp
popa
test
mov
or
or
cltd
dec
ret
xchg
ljmp
adc
fdivr
aam
mov
sbb
pop
rcll
cmpsb
or
data16
loope
out
add
inc
fisttpl
mov
dec
lock
cwtl
ret
inc
pop
add
mov
mov
or
std
nop
imul
add
cmc
mov
cld
loop
lods
hlt
xchg
mov
inc
inc
je
js
jne
inc
inc
pop
or
cli
stc
jb
pushf
inc
or
inc
xor
jo
mov
or
push
inc
shrd
adc
stc
and
mov
jmp
loop
jbe
int3
int3
adc
lods
jae
cmp
sub
mov
test
xchg
pop
lcall
fs
push
int3
and
pop
push
arpl
mov
hlt
lds
std
jae
cmp
lods
scas
adc
jmp
aaa
les
loopne
stc
lret
xor
and
pop
es
adc
into
or
jge
mov
xor
and
jo
and
int
xchg
popf
ljmp
inc
pusha
inc
mov
seto
daa
push
subl
stos
add
mov
push
das
inc
mov
lock
pop
dec
push
cmc
mov
ja
in
enter
mov
mulb
xchg
lea
add
pop
sarl
arpl
cmpsl
ds
xor
popf
push
outsb
mulb
push
sbbb
mov
std
in
adc
lret
sbb
icebp
mov
ret
out
mov
sbbb
stc
cmpsl
and
decl
push
imul
stc
cmp
mov
shll
push
sub
add
add
add
fistpll
adc
mov
addr16
pop
cmp
subb
fists
xchg
mov
cli
sbb
sub
hlt
test
sbb
push
cmp
movsb
mov
call
test
and
hlt
xchg
mov
call
sbb
cs
cltd
mov
dec
sbb
xchg
loopne
dec
ret
shll
sbb
cmp
cmpsl
dec
test
xchg
mov
add
fcoml
xlat
lret
jle
pop
inc
jg
lcall
fndisi(8087
into
cmpl
pop
aad
test
inc
fadd
add
andb
shlw
and
lret
xchg
cmp
inc
cmp
mov
stc
pop
or
ret
sarl
jns
ds
pop
fstpt
pop
inc
sub
shrl
mov
faddl
cmp
cmp
fstpl
loop
push
xlat
outsb
cmpsb
adc
iret
out
push
xor
gs
cmp
fistpll
dec
adc
jle
in
inc
lret
lds
icebp
push
ret
adc
shlb
adc
adc
mov
and
add
rcll
in
mov
stos
or
inc
inc
jg
cmpsb
push
mov
hlt
fwait
shrl
xchg
inc
frstor
jns
jbe
in
hlt
mov
imul
xchg
int3
push
mov
push
xchg
cmc
pusha
cmp
xor
lret
or
xchg
mov
nop
mov
adc
cmpl
inc
add
cld
and
mov
xchg
or
push
andb
mov
test
ret
insb
in
jg
jb
push
mov
cltd
xchg
jmp
in
dec
inc
or
int3
pusha
or
out
push
out
int
sahf
push
dec
adc
mov
mov
pop
push
ljmp
mov
inc
call
push
faddp
inc
dec
int3
andb
inc
pop
push
call
cld
jmp
scas
dec
in
nop
inc
jbe
fisubs
jo
or
push
add
nop
pop
or
cmpsb
adc
mov
jo
mulb
lock
add
inc
ljmp
leave
cmp
push
stos
addr16
and
lods
push
mov
mov
push
ficoms
jae
inc
cmp
jmp
leave
push
push
shrl
pop
push
rol
push
mov
mov
test
lcall
call
jg
push
test
insb
xchg
rcrb
xor
arpl
pushf
imul
adc
xor
sahf
xchg
repz
or
xchg
rorl
and
adc
divb
fstp
fdivp
in
xchg
aas
push
scas
hlt
pop
add
mov
add
dec
xchg
enter
imul
add
imul
out
push
pop
sub
stos
into
cmp
xlat
mov
lea
mov
push
cmpsl
scas
ficoms
add
jge
xchg
sub
add
and
dec
cltd
mov
add
adc
sub
dec
scas
pushf
mov
mov
mov
mov
xor
cmp
scas
push
mov
and
dec
xor
lret
pop
gs
fstpl
iret
orb
jg
jo
div
stos
pusha
ljmp
neg
mov
cmp
loop
aam
lea
jbe
sbb
lods
mov
test
adc
xchg
inc
cwtl
rolb
std
out
pop
xor
ret
stos
lods
push
movsb
sahf
sub
mov
stos
inc
shll
mov
fcoms
nop
sarb
nop
out
fsub
mov
cmpl
out
adc
pop
jnp
subl
sahf
stos
push
inc
xchg
mov
xchg
mov
add
pop
hlt
mov
mov
pop
mov
adc
inc
or
xlat
lret
test
push
outsb
mov
xlat
push
add
fdivrs
add
dec
mov
cwtl
push
push
jg
cmp
test
les
test
test
add
addl
jl
or
shrb
sub
shrb
push
into
lods
test
cmpsl
inc
je
test
push
sub
push
mov
aam
xchg
xor
add
imul
xor
cmp
dec
adc
dec
mov
xchg
jg
movsb
push
cmp
jmp
pop
pop
mov
xor
pop
jns
and
mov
xchg
adc
iret
in
mov
inc
andl
ljmp
pop
dec
push
in
fcoml
fnstsw
xlat
mov
dec
dec
fdivrp
lahf
in
lods
sbb
stos
lret
xchg
cld
dec
xlat
imul
nop
xchg
hlt
sahf
cmp
lock
cmpsb
stos
lret
test
or
idiv
mov
mov
fdiv
out
xlat
jge
mov
enter
jbe
jp
stos
lret
fsubr
fsubrs
lea
lock
add
int3
cmp
into
insb
ja
dec
mov
nop
inc
lea
or
rcrb
imul
lcall
dec
test
jbe
sbb
adc
test
mulb
enter
lcall
loopne
nop
jmp
mov
xchg
mov
test
push
stos
add
sti
pop
lcall
cmp
out
mov
xchg
mov
out
xchg
nop
mov
test
je
aas
bound
lret
xchg
in
lods
xor
dec
push
scas
mov
je
call
filds
jmp
aad
pop
hlt
xchg
stos
push
sarb
dec
test
dec
popf
subl
inc
aad
add
push
jg
popa
data16
movsl
xchg
inc
hlt
pusha
mov
xchg
ds
inc
adc
adc
orb
mov
loope
mov
std
add
mov
inc
jge
mov
cld
jge
addb
inc
sub
std
test
sahf
imul
mov
lods
scas
adcl
data16
arpl
in
arpl
call
mov
mov
aas
gs
xchg
adc
shr
fs
push
leave
testl
roll
mov
inc
stc
aas
sub
xchg
call
push
push
lahf
xor
mov
adc
xchg
ds
xchg
dec
movsb
fcmove
mov
or
mov
inc
xor
mov
arpl
call
lds
jae
lret
cmpsl
pop
cmp
jbe
insb
and
xchg
sub
ja
push
jns
dec
hlt
mov
jb
loop
rorb
popf
mov
shlb
orl
shl
fimuls
push
inc
sub
mov
jle
add
xor
into
mov
je
jae
loop
mov
cmpsb
iret
dec
sub
and
popl
or
cmp
rclb
pop
add
pusha
inc
ret
add
out
je
dec
mov
mov
cltd
mov
mov
mov
daa
pop
xlat
lea
xchg
aaa
pop
repz
hlt
adc
mov
dec
xor
dec
rcl
adc
and
outsl
dec
sub
dec
inc
sti
insb
dec
stos
xchg
mov
or
mulb
mov
lret
fwait
xor
jmp
dec
mov
das
mov
in
xchg
xchg
mov
inc
xchg
adc
sbb
ror
icebp
add
sub
push
mov
push
add
sub
int3
jl
cmp
push
adc
or
lods
adc
inc
push
mov
movsl
jns
divl
mov
insb
adc
fs
js
sub
arpl
nop
jb
mov
adc
jg
inc
push
popa
mov
jge
add
test
mov
xlat
xor
mov
xchg
xchg
add
test
fstl
call
loop
bound
push
and
inc
add
and
xchg
mov
add
and
pop
dec
push
in
mov
nop
shl
xchg
add
adc
sbb
mov
aam
xchg
dec
mov
jo
fists
inc
mov
fistpl
ror
les
in
stc
mov
pop
inc
mov
cmp
push
mov
sub
sbb
or
xchg
pop
jg
int3
sub
cmpsb
adc
adc
and
jecxz
jnp
mov
adc
pop
inc
mov
nop
inc
add
jns
sbb
inc
mov
pop
nop
xchg
push
xchg
lret
pusha
or
adcl
jb,pt
in
fldt
lahf
dec
mov
std
pushf
stos
outsl
mov
movl
pop
xchg
mov
loope
xchg
cwtl
jmp
mov
push
notb
pop
popf
mov
nop
mov
hlt
fcomps
cwtl
pop
pop
mov
stos
outsl
ret
pop
andl
push
cltd
fsubl
psubsb
sbb
sub
addb
insl
or
mov
jb
ret
jg
xchg
inc
fbstp
dec
pop
mov
xchg
add
loop
xchg
xor
mov
or
push
push
mov
pop
pop
mov
jns
push
sub
mov
pop
inc
xchg
mov
inc
fildl
push
ret
cli
in
jae
sub
jno
leave
daa
push
mov
lods
aas
inc
inc
fisttpl
add
stos
dec
add
inc
mov
mov
cmc
in
cmp
cmc
enter
xor
push
jg
adc
and
xchg
lock
mov
push
jne
xor
push
push
jge
sub
mov
nop
mov
add
adc
push
into
ror
push
and
iret
in
mov
jb
in
inc
mov
imul
sub
inc
dec
xchg
hlt
mov
pop
mov
imul
int3
repnz
test
fsubr
ror
and
test
pop
test
inc
mov
std
add
push
pop
push
inc
xchg
insb
push
pop
test
xlat
js
scas
push
xchg
pop
cmp
aas
jge
lods
or
in
mov
xchg
fscale
jle
dec
movsl
aam
add
test
scas
cwtl
sub
out
push
testb
test
shlb
scas
lret
mov
mov
mov
in
xchg
dec
mov
jns
lret
push
out
test
scas
call
in
stos
and
inc
movsl
ret
cltd
push
jb
gs
pusha
add
add
in
xchg
xor
test
test
cmp
push
jb
fdivp
aad
add
jne
int3
in
rcll
fwait
jmp
das
push
xchg
inc
dec
ret
int
xchg
jbe
js
inc
icebp
xchg
lock
jl
jp
mov
mov
mov
sub
adc
mov
insb
mov
sub
sbb
leave
into
xor
fsubrs
mov
pushf
movsb
out
leave
add
cmpsl
js
and
add
push
sbb
add
add
cmpsl
push
sbb
mov
mov
and
dec
out
push
into
inc
adc
mov
roll
aam
es
adc
cmp
les
mov
aad
or
stos
dec
aad
shll
mov
lret
cmpb
into
jne
ljmp
lret
je
outsl
aam
pusha
rcl
rcl
jne
test
arpl
jae
mov
js
cwtd
lret
fsubl
pop
xlat
xor
xchg
adc
test
pop
fsts
out
test
addr16
push
add
out
push
enter
xchg
adc
adc
or
testl
sbb
push
rorl
xor
cwtl
shrl
in
push
adc
loopne
ja
test
inc
and
fdivl
call
call
sti
xor
push
sbb
inc
mov
ret
add
into
fsubs
les
mov
mov
std
fidivrs
into
loopne
jns
sbb
fcoms
in
push
or
push
call
or
addb
arpl
push
fmul
clc
adc
arpl
pop
out
and
loop
push
outsl
scas
jnp
mov
mov
aam
divb
fiaddl
rcl
scas
sub
adc
xor
nop
lret
dec
sbb
jl
pushf
mov
movsl
stos
push
lods
test
rol
pop
or
push
aad
sbb
lods
pop
push
cmpsb
adc
xchg
cmp
xor
adc
and
flds
push
or
aaa
jne
bound
cmp
xor
xchg
cmpsl
sbb
adc
push
loope
popf
pmullw
sbb
mov
lds
aad
adcl
jge
inc
mov
mov
add
aad
pusha
in
mov
stos
lods
int
fisttpl
mov
add
sub
into
jb
ds
loopne
jbe
test
test
push
pop
out
and
cmp
cmp
out
push
ljmp
cmc
idivl
sbb
lock
push
ret
loop
movsl
mov
repnz
xor
les
pop
arpl
scas
mov
ficoms
inc
mov
scas
insl
imull
jns
adc
lods
adc
inc
mov
popa
jp
fsubrs
xchg
push
sbb
mov
imul
leave
ja
clc
dec
negb
and
add
mov
in
mov
cmc
push
jecxz
add
xchg
cwtl
or
and
add
int3
jne
push
cmp
push
mov
sub
test
mov
ljmp
inc
xlat
pop
pop
push
add
cmp
mov
nop
ret
lcall
xlat
add
or
repz
fbstp
add
adc
mov
nop
sti
hlt
xchg
push
sub
add
add
push
push
pop
popf
inc
xchg
or
movb
mov
mov
hlt
mov
test
loope
mov
stos
jle
movsl
lds
mov
mov
pop
xchg
lock
jo
jbe
add
rorl
rcll
lds
scas
and
push
vmwrite
outsl
and
leave
dec
rorl
sahf
mov
cmp
ss
jb
xchg
or
xor
ja
or
imul
decl
and
jae
or
mov
push
jno
lret
dec
mov
imul
repnz
mov
clc
in
pushf
fdivrs
popa
sub
repnz
sar
mov
inc
nop
ret
pushf
xor
lods
fbld
fisttpll
mov
ror
xor
call
sbb
test
add
xchg
lea
enter
sbb
bound
pop
stos
pop
adc
test
or
imul
shll
mov
mov
data16
scas
xor
hlt
in
jno
ja
subl
sbbb
int3
int3
add
test
pushf
or
xchg
pop
stos
cmp
cltd
adc
lods
loop
ror
lods
sub
enter
inc
mov
in
shrb
add
jbe
roll
mov
scas
inc
or
nop
mov
and
cltd
inc
test
stc
cltd
imul
rcrb
in
into
push
mov
or
and
and
repnz
rcll
mov
cmpb
ret
xchg
mov
cmc
sbb
pop
pop
imul
fwait
and
add
imul
inc
mov
std
or
fcompp
inc
loop
sahf
adc
cwtl
mov
inc
push
fsts
cmpsb
imul
mov
adc
cmp
sub
push
xchg
or
dec
mov
out
xchg
outsl
mov
das
sub
andb
arpl
mov
rorb
test
stos
mov
mov
or
adc
mov
cs
rol
mov
into
repz
push
mov
stos
fcoml
cmpsl
lret
outsb
dec
rolb
lret
fcmovne
jecxz
rcl
mov
and
das
inc
stos
aas
mov
xorl
call
mov
cmp
icebp
pushf
or
mov
inc
mov
dec
insl
add
add
cmp
nop
push
cld
pop
out
fnstenv
cltd
test
outsl
cmp
inc
fisubs
ja
pop
cmp
jbe
sbb
cltd
xor
mov
sahf
fists
xchg
or
mov
aas
jmp
addr16
mov
sub
iret
or
lods
xor
mov
lods
or
repz
push
int
cmpl
and
movsb
adc
incl
or
mov
or
mov
ret
mov
lea
orl
jl
or
mov
cmp
mov
lock
push
loope
mov
adc
push
push
aam
mov
imul
or
fcoms
mov
out
loopne
icebp
and
insl
leave
dec
sbb
mov
push
inc
test
int3
mov
mov
cld
fdivrp
cmp
sbb
lret
mov
shl
adc
mov
mov
arpl
jle
sbb
pop
jecxz
rclb
lret
lret
imul
stos
inc
or
mov
shrb
std
notl
mov
xchg
xchg
lret
jae,pt
out
rcl
pushf
or
fs
sbbl
mov
hlt
cmp
stos
dec
leave
add
adc
test
leave
and
or
lea
mov
ds
rcll
lds
stos
dec
jo
not
les
dec
and
int3
or
movsl
xchg
push
mov
pushf
pop
sahf
or
sbb
mov
pop
std
adc
xchg
shrb
push
push
sbb
les
push
shrb
sti
gs
xchg
xchg
or
int3
ds
xchg
out
jbe
fs
nop
stos
dec
lret
out
sub
lods
imul
push
mov
xchg
adc
mov
out
nop
into
mov
mov
dec
shrl
popa
mov
push
add
dec
lods
in
mov
jl
movsb
or
imul
jbe
xchg
xor
xchg
sbb
cwtl
repnz
cltd
sarl
mov
cs
adc
lea
xchg
imul
mov
repnz
ds
stos
cmpsl
adc
lds
in
test
sbb
add
or
leave
mov
mov
rorb
fwait
es
cmp
mov
lret
int3
mov
outsl
push
loopne
push
add
jp
mov
mov
bound
cmp
enter
mov
mov
jmp
xchg
mov
dec
shrb
mov
mov
adc
adc
enter
mov
loop
sbb
pusha
addl
rolb
lods
nop
or
lcall
cmp
aad
xchg
mov
inc
addl
push
xorb
shl
rcll
test
ja
rcrb
cmp
test
call
and
sbb
in
nop
sbb
cmp
out
sub
das
cli
lret
loopne
or
movsb
in
scas
mov
mov
cld
enter
popf
and
mov
in
addl
and
sub
or
idivl
xchg
or
xchg
incl
iret
or
or
int3
aad
out
mov
mov
pop
popl
sub
mov
cmpsb
or
std
dec
cwtl
sub
ret
lahf
push
cmc
xor
add
iret
mov
leave
imul
adcb
rcll
dec
push
mov
cltd
dec
orl
mov
xchg
or
and
mov
dec
jecxz
lret
xchg
mov
shrb
add
fdivl
arpl
test
call
into
or
dec
and
jmp
inc
cmp
ret
cmp
rcll
faddl
xchg
adc
rclb
inc
push
or
movl
push
lds
je
cmp
cmpsb
push
enter
adc
ret
stos
test
sbb
mov
fcomps
sbb
mov
hlt
aas
sti
popf
xchg
xchg
cmpsl
xchg
pop
mov
sub
int
lea
jae
inc
mov
nop
add
sbb
lds
fxch
fwait
cwtl
aas
mov
std
call
xchg
stc
mov
xchg
nop
popa
imul
test
and
push
push
movsl
jno
imul
mov
les
les
fadd
aam
xor
mov
cmc
xchg
in
sbb
lcall
cwtl
les
mov
and
fstl
pushf
xchg
ret
jb
xlat
popf
cmp
mov
or
daa
aam
in
jge
dec
and
xor
ljmp
sub
add
das
adc
inc
adc
or
fwait
mov
push
dec
nop
mov
and
das
xchg
adc
mov
push
pop
sub
mov
sbb
fnstcw
pop
mov
dec
pop
or
inc
lret
adc
mov
rol
xchg
jns
hlt
hlt
test
andl
cs
popa
and
ret
js
pop
jmp
gs
push
es
dec
aam
push
cmp
inc
nop
ds
pop
insl
aad
adc
insl
add
cmc
cli
add
push
pusha
in
dec
filds
mov
sub
gs
pusha
into
pusha
mov
into
mov
mov
add
scas
sbb
test
dec
cmp
gs
subb
sbb
mov
hlt
sahf
std
jae
xchg
or
test
scas
push
mov
sbb
xchg
inc
cmp
xor
lcall
jp
pop
nop
daa
stos
push
sbb
mov
inc
adc
test
bound
fnstsw
xor
xor
or
cmpsl
nop
movsb
inc
mov
shll
std
jno
or
je
movsl
ja
add
pop
jo
ja
popa
repnz
cmp
and
mov
js
fcmovb
mov
xchg
pop
mov
movsb
hlt
mov
aam
xchg
enter
mov
push
sahf
mov
into
sahf
ljmp
push
out
adc
xchg
or
or
mov
cmpsb
add
andl
pop
in
mov
aam
aad
mov
xchg
call
nop
and
loopne
movsl
lret
jnp
sub
mov
divl
jmp
mov
pop
adcl
ljmp
movsl
into
xchg
adc
add
dec
add
popa
test
add
cmpsl
in
lahf
or
iret
cmc
jae
rorl
jo
data16
test
nop
ljmp
lock
cmpsb
clc
fwait
lcall
repz
pop
xchg
call
fisubs
fstpt
pop
and
out
or
shlb
in
inc
push
idivb
pushf
aaa
pop
rclb
daa
adc
inc
cmc
mov
push
xor
out
add
adc
mov
test
mov
cmp
adc
xor
hlt
test
adc
xor
jno
xchg
lods
inc
mov
lahf
subl
jle
and
ret
and
imul
iret
pop
mov
in
push
cwtl
adc
insb
rorb
hlt
test
xchg
mov
ror
push
lock
inc
rorb
outsl
mov
std
inc
mov
sub
jno
xor
loope
loopne
scas
xchg
sahf
mov
push
insb
xchg
lods
es
ds
mov
rorb
xlat
push
cmp
iret
sub
cmp
add
aas
rorb
movhps
xchg
inc
imul
mov
imul
jmp
or
mov
mov
pop
nop
das
push
inc
push
xchg
insl
or
or
loope
dec
call
jb
stos
push
mov
jbe
fisttps
lahf
ret
test
push
pop
jb
sahf
or
jnp
aas
mov
add
xchg
inc
mov
dec
repnz
mov
ja
insl
testb
aas
or
inc
and
fs
jno
dec
test
lret
dec
and
lods
test
and
sarb
mov
fidivrl
cmp
ljmp
jae
xchg
enter
inc
ret
cmc
lods
pop
bound
lcall
add
push
jne
shll
stos
sbb
push
test
ja
les
out
xchg
mov
adc
push
fldl
popa
test
scas
xchg
xor
mov
push
aas
iret
test
jb
ret
shrl
mov
inc
adc
inc
leave
loopne
pop
mov
lret
dec
test
pop
stos
push
add
jp
repz
jns
out
mov
or
testb
arpl
pushf
in
push
cmp
add
test
pop
mov
xchg
xlat
pop
psubq
sbb
clc
lods
cmc
insb
fisttps
jecxz
loopne
push
or
mov
ja
mov
mov
inc
mov
push
sbb
lds
aam
xchg
mov
push
pop
add
mov
jo
pop
dec
inc
repz
or
mov
mov
push
cmp
or
mov
xchg
stos
sub
movsl
push
dec
inc
xor
lret
les
or
je
movsb
mov
stos
fisubs
jo
loopne
mov
jo
clc
dec
cmp
or
cwtl
mov
cmpsb
adcl
or
les
js
dec
ret
jno
mov
enter
adc
scas
dec
jno
xchg
xchg
insl
lea
stos
mov
cmp
pop
leave
sub
lods
fiadds
jecxz
popl
dec
jmp
sbb
imul
xlat
mov
out
cmc
nop
shrb
pop
push
push
fmuls
xchg
cmp
frstor
mov
test
aas
jo
jl
xor
mov
and
sbb
pushf
mov
mov
cmp
xchg
enter
aad
jns
ret
push
mov
shll
dec
and
lods
dec
adc
jns
xchg
mov
push
js
jae
add
popa
pop
mov
xor
xor
nop
fwait
iret
or
sbb
cmp
fstpt
dec
mov
jg
clc
xlat
jne
inc
lea
mov
cwtl
lock
sub
dec
shll
mov
divb
adc
sbb
mov
mov
inc
imul
popa
mov
test
movsl
and
xchg
inc
xchg
popa
mov
int3
dec
nop
insl
inc
enter
rorb
pop
push
sbbl
jle
adcl
mov
sahf
mov
leave
mov
movsl
rcrl
push
loop
in
orb
out
cmpsl
aam
adc
push
loope
adc
mov
lods
addb
add
imul
ret
mov
mov
mov
inc
popf
add
movsb
mov
add
and
lock
stos
cmp
loope
pop
out
inc
addl
mov
cmpsl
test
or
test
aad
adc
mov
ss
les
adc
mov
adc
or
pop
xor
jge
das
pushf
push
out
cmp
lret
mov
add
mov
ds
fisubrs
push
roll
xchg
fmull
fisubrs
in
jo
fwait
push
pop
xchg
cmp
and
mov
or
cli
jb
dec
sub
cmp
cmc
push
or
lcall
push
adc
mov
fmulp
cmc
jb
xor
ret
in
mov
xchg
fisttpl
cmp
js
ret
add
orl
out
inc
add
mov
xchg
inc
rcl
dec
je
cltd
ds
scas
or
adc
iret
js
movsl
ret
adc
lds
stos
add
movsl
sub
mov
call
int3
scas
mov
push
faddl
aaa
mov
xchg
jle
or
xchg
or
ret
das
mov
sbb
enter
xlat
imul
xor
rcl
pop
jge
aam
out
ret
leave
mov
iret
bound
call
popa
mov
cld
andl
dec
adc
cltd
mov
and
push
lea
lcall
test
jo
js
repz
rcl
xlat
adc
pusha
push
gs
pop
xchg
sbb
mov
add
add
mov
andb
aaa
xlat
and
inc
rclb
jle
jle
sub
and
shr
rcll
fs
inc
std
insb
or
pop
pop
or
cs
int3
mov
aad
mov
ljmp
mov
faddl
mov
mov
jo
cmpsl
add
push
xor
inc
push
sbb
xchg
mov
movsb
shlb
cld
pop
test
stos
sub
es
add
cltd
mov
insb
dec
inc
lret
mov
test
rcl
push
adc
nop
fisubrs
test
mov
or
outsb
shr
popl
int3
call
mov
add
outsb
lock
xchg
test
or
or
andb
mov
mov
xlat
mov
add
out
mov
popl
aad
orb
add
push
addb
sub
push
push
int3
inc
stos
cmp
jo
mov
ds
les
int
cmc
cmpsl
out
push
and
jle
or
rcrb
or
dec
fdivs
xlat
aas
jl
add
and
notl
cmpsl
scas
mov
mov
rorb
test
mov
xchg
cmp
movsl
pushf
ljmp
cmp
fadd
or
push
push
or
pusha
inc
ret
iret
subl
mov
or
pusha
lds
xor
or
adc
jp
ret
cwtl
push
or
enter
pop
outsb
xchg
ret
notb
stc
and
push
inc
cwtl
xor
leave
dec
push
fwait
xorl
rorl
cmp
lret
pop
into
and
sbb
cld
or
out
mov
mov
sub
xchg
xchg
aas
sub
repnz
mov
xor
fwait
mov
sbb
dec
nop
js
and
cmc
adcb
imul
out
jmp
mov
aas
xchg
lds
lret
lret
pop
loope
fs
pop
mov
adc
add
test
push
inc
ljmp
push
xor
push
xchg
mov
or
dec
lcall
and
js
cmp
cmp
jbe
inc
cmp
cmp
add
add
xchg
xor
decl
push
and
pop
jmp
aaa
pusha
lods
ficoml
sbb
imul
pop
mov
lock
test
rcl
imul
cli
cmp
iret
mov
mov
or
jp
movsl
cmpb
lods
shlb
repz
nop
mov
cmc
adc
aas
jle
xor
jle
ret
call
in
adc
movsl
jnp
push
adc
in
xchg
lcall
push
sub
ljmp
int3
jmp
mul
mov
cmp
mov
fdiv
jp
aaa
pop
pop
shrb
sub
ja
fs
mov
outsl
mov
inc
cmc
mov
or
and
push
lcall
or
mov
dec
bound
dec
pop
pusha
jle
mov
addr16
xchg
or
popa
enter
ja
mov
push
lret
mov
add
lock
mov
repz
sahf
arpl
pop
mov
pop
jno
xchg
lods
sbbl
lahf
outsb
dec
cmp
addr16
imul
adc
or
pop
ja
jns
ret
test
mov
add
das
cld
jne
js
inc
outsl
push
shll
jnp
dec
mov
mov
sbbl
stos
inc
pop
movl
lea
rolb
mov
xchg
mov
xchg
popl
mov
add
jge
int
arpl
or
mov
sbb
rcl
push
cmp
cmp
pop
sbb
jmp
push
shll
adc
jp
ret
les
and
inc
ja
mov
jp
inc
mov
shlb
nop
inc
xor
jg
mov
dec
dec
in
iret
sbb
ds
fmull
mov
cmp
iret
pop
das
shr
push
sbb
dec
int3
push
rcrb
sbb
jne
jb
xchg
adc
mov
movsb
pop
lret
and
aam
nop
inc
adc
sbb
jge
xchg
lds
jnp
test
mov
push
mov
ret
stc
les
iret
push
ljmp
dec
fcoml
or
xor
ja
fadds
sub
scas
shrl
test
test
outsb
rcrb
ffreep
dec
fwait
sbb
and
in
pop
mov
xor
cmp
inc
or
push
orl
jl
int
hlt
dec
int3
mov
fisubs
mov
jp
cmp
imul
aas
xchg
inc
ss
adc
data16
xchg
inc
movsb
ret
xchg
cmp
nop
scas
push
rolb
fwait
pop
clc
mov
xor
mov
xor
inc
fucomip
enter
xor
adcb
dec
addl
aaa
imul
dec
or
shlw
pop
dec
adc
orb
dec
pop
mov
jnp
push
sub
shlb
outsl
add
mov
pop
arpl
pop
imulb
cmc
sbb
mov
popa
mov
es
fcomps
push
sub
jecxz
fsubrs
nop
cmp
xchg
mov
and
inc
lods
cltd
adcb
push
enter
push
mov
dec
dec
sbb
shlb
adc
insl
lahf
xchg
fcmovb
push
pop
inc
test
shrl
inc
mov
inc
cwtl
int3
pop
shll
es
test
arpl
mov
es
stos
pop
xor
and
nop
push
dec
test
push
sub
js
outsl
jl
sbb
mov
jnp
add
mov
pop
sub
out
ret
xchg
int
or
mov
sub
rcr
int3
imulb
jnp
mov
test
xor
mov
adc
mov
mov
xchg
mov
imul
stos
push
insb
test
jbe
pop
add
add
xchg
rcll
movsl
and
mov
mov
fdivrs
sbb
fwait
nop
mov
adcl
dec
subl
ret
ss
rol
push
andl
movsb
mov
add
push
and
in
rcrb
dec
xchg
pop
mov
sub
lret
icebp
fidivs
clc
sub
pop
subb
leave
lahf
dec
subb
mov
addr16
sub
jge
hlt
jnp
pop
aas
inc
sbb
in
lock
aas
ds
xchg
mov
dec
mov
sarb
mov
inc
sbb
ret
xchg
cmp
and
pop
sbb
cmpsl
and
sbb
jo
mov
mov
lahf
sbb
xchg
add
movsb
xchg
mov
or
inc
push
push
cld
test
or
clc
nop
insl
clc
cmp
dec
repnz
shlb
or
jo
cld
jne
enter
dec
fdivrl
pop
xchg
push
xchg
orb
add
cmpsb
and
pusha
les
test
push
call
xchg
enter
movsb
test
add
sub
movsl
pusha
mov
imul
xchg
cli
adc
je
imul
mov
rclb
movhps
ret
add
xchg
mov
add
lods
aad
gs
xchg
nop
adc
mov
mov
bound
shll
imul
das
leave
dec
xchg
fmull
xchg
sbbb
ljmp
aam
cmp
pop
or
add
lods
call
pminsw
aam
rcrb
dec
add
mov
jge
std
call
jg
or
and
mov
pushf
call
add
push
ret
test
cli
xchg
sarb
or
call
or
adc
or
adc
data16
jle
and
sbb
push
xchg
xchg
shrb
push
mov
ret
andl
pop
inc
mov
test
jae
rcrb
xchg
mov
push
movsl
shl
xchg
popa
shl
mov
mov
sbbb
shll
test
mov
mov
jae
sbb
mov
mov
mov
adc
or
mov
push
push
stos
sbb
mov
lods
cltd
jmp
dec
sbb
adc
imul
adc
sbb
fmulp
es
mov
shl
cwtl
sbbl
lods
arpl
rep
push
mov
outsl
shlb
lcall
push
push
das
mov
fsubr
sub
pop
push
mov
fbstp
xchg
jae
repnz
mov
cmp
dec
push
arpl
dec
sbbb
or
or
int3
mov
test
call
or
enter
xor
andl
outsl
add
jle
pop
cmp
sahf
fdiv
fdivs
push
call
mov
mov
lods
jbe
scas
rorb
rclb
sarl
mov
nop
mov
dec
mov
mov
imul
mov
daa
xchg
sub
jmp
ss
xor
adc
std
mov
js
repnz
clc
add
loopne
gs
pop
insb
int3
push
in
out
or
aas
mov
cmp
adc
test
lods
cmp
in
dec
cli
add
cld
or
aaa
sub
sbbl
testl
rorl
aam
lds
adc
mov
outsb
or
add
addr16
dec
iret
jae
jmp
shlb
nop
or
adc
test
and
mov
jl
les
inc
or
adc
stos
dec
push
or
ret
cmp
cmp
popf
loopne
ret
dec
or
repnz
fldcw
or
or
jl
daa
jne
push
cmc
mov
xchg
jne
lcall
inc
mov
pop
mov
inc
or
jg
stc
cmp
movsb
mov
adc
add
lods
sbb
add
jmp
lret
cmpsl
aam
int
cmp
or
lret
ljmp
xchg
mov
imul
subl
fidivrs
sbb
hlt
mov
rcrl
ja
push
ret
call
popf
sub
shrb
fldenv
icebp
mov
scas
mov
repnz
addl
aad
and
das
outsb
and
cmpsb
mov
test
push
shlb
xor
repnz
hlt
push
test
mov
aad
nop
rcrl
stos
cwtl
sub
in
mov
int
addr16
inc
mov
jo
mov
mov
fbstp
or
and
mov
int
xchg
or
std
bound
imul
push
mov
cmp
leave
xor
adc
out
adc
test
fmuls
stos
shld
outsl
adc
add
add
add
mov
stos
aaa
and
test
pusha
xor
or
int3
adc
mov
jp
mov
cwtl
xor
or
and
idivl
flds
mov
push
into
cmc
mov
fiadds
jo
push
sub
rolb
test
mov
inc
mov
push
outsl
sub
or
xchg
cld
insl
adc
pop
mov
sbb
push
in
pop
pop
pop
mov
icebp
daa
fwait
rorb
sbb
jle
dec
pop
jae
add
sub
scas
cmpsl
inc
ljmp
push
les
mov
scas
fsubp
leave
repz
xchg
and
mov
sarl
or
testl
imul
mov
pop
in
mov
jg
pop
add
add
add
lea
lods
into
out
push
es
xchg
adc
sbb
sbb
cmp
jo
sub
stos
push
add
cmp
jg
cmp
inc
or
pusha
and
mov
loopne
outsb
js
popl
cmpsl
jo
push
sbb
hlt
cmp
cwtl
cmpsl
adc
dec
pop
xchg
push
fs
test
adc
cmp
fadd
stos
lcall
push
pop
std
and
insb
or
aaa
rorb
pop
xorb
adc
shll
rol
lret
pop
push
data16
sub
dec
frstor
in
mov
xor
mov
push
shlb
mov
std
mov
push
add
loope
test
imull
jnp
stc
lret
les
push
mov
mov
lds
mov
inc
imul
pop
pop
ret
cltd
into
lret
mov
xchg
push
mov
pop
cmpsb
cmc
pop
dec
xchg
ret
rclb
sbb
xor
rcrb
das
xchg
clc
lret
cli
xor
cmpsb
lcall
push
test
arpl
or
rolb
cld
hlt
pushf
je
adc
andl
push
dec
test
test
outsl
xchg
bound
imul
test
sbb
cmpsl
lcall
test
insb
xchg
or
dec
bound
add
cli
sahf
cmp
std
add
dec
push
js
enter
incb
stc
xchg
stc
int3
in
xchg
jge
les
push
jl
push
ds
rorb
xor
inc
shrl
mov
cmp
insl
sub
pop
add
jmp
jecxz
jmp
mov
mov
andb
jbe
xor
test
cld
cmpsb
scas
icebp
pop
mov
and
sarb
xor
lods
test
test
ret
insl
ja
mov
xor
ljmp
rdtsc
xor
jp
cwtl
mov
adc
push
inc
rcrb
ret
dec
lods
shrl
or
sysret
jb
std
out
pop
inc
mov
aad
pop
lcall
mov
sub
push
pop
daa
mov
mov
in
cli
push
test
sbbl
jno
push
push
sbb
pushf
mov
fdivrs
cltd
sbb
cwtl
add
lret
bound
adc
insb
dec
xor
jae
nop
mov
daa
cmpb
push
dec
and
bound
hlt
ret
sub
jge
jnp
dec
lret
xlat
imul
or
cmp
pop
rorl
push
lock
outsb
imul
xor
daa
ret
scas
adc
cmp
nop
fildll
mov
jae
inc
sub
mov
adc
adc
ficomps
xchg
inc
inc
xchg
jne
adc
mov
std
mov
setne
fs
call
outsb
adc
add
sub
add
jmp
and
xchg
call
push
andl
xor
mov
mov
test
sbb
mov
mov
mov
mov
ret
mov
mov
clc
repnz
mov
mov
cwtl
xor
xor
xchg
call
jb
mov
pusha
pushf
xchg
pushf
test
nop
adc
push
mov
xchg
enter
inc
adc
cwtl
xchg
movsl
out
lods
mov
push
les
mov
fs
cmpsl
mov
les
inc
gs
inc
jae
bound
nop
sbbb
popa
mov
xchg
aam
push
xlat
fs
push
and
addr16
out
inc
cmc
sbb
lock
xchg
popa
push
inc
add
call
daa
ret
mov
movsb
adc
in
mov
addl
mov
addl
inc
dec
shl
int
test
mov
orb
ret
adc
mov
cltd
jo
leave
push
mov
loope
push
mov
iret
aas
mov
dec
mov
and
in
ret
cltd
cmp
ret
sub
rclb
dec
les
jb
into
mov
push
ret
push
mov
mov
mov
ret
fsts
mov
test
call
xchg
sub
push
scas
cmp
pop
incl
xchg
mov
dec
int3
mov
imul
hlt
adc
movsl
movl
andl
jmp
sbb
daa
aad
pop
mov
rcl
cmp
cld
jg
ret
scas
mov
nop
call
push
sbb
outsb
shll
mov
mov
fst
sti
xor
inc
cmp
psrlq
and
adc
ret
sti
addl
insb
cmp
xchg
jl
xlat
sub
sbb
lahf
ror
nop
sub
mov
pop
and
xor
das
jnp
pop
in
imul
adc
mov
lock
cmp
xchg
out
ljmp
lcall
testb
js
mov
scas
mov
cmpsb
lret
scas
outsb
cwtl
pop
int3
sub
nop
stos
mov
test
in
add
shrl
hlt
inc
into
ss
outsl
pop
outsl
outsb
sub
mov
mov
xchg
iret
xchg
shll
add
mov
popa
stmxcsr
addb
xchg
jmp
fcomp
lahf
das
mov
jne
xchg
fbstp
mov
imul
mov
aad
mov
stos
in
into
test
ret
add
test
jmp
sub
add
mov
mov
pop
mov
mov
push
pop
aad
jnp
mov
or
ret
and
sahf
pop
es
into
mov
mov
mov
xchg
and
xchg
mov
adc
jl
aam
sub
dec
xchg
cltd
push
daa
mov
scas
push
rolb
push
push
push
inc
leave
loopne
jle
adc
aas
and
and
cmpsb
inc
or
fsubrs
or
les
mov
rcl
xor
fisttps
ret
pop
adc
xchg
repz
movswl
or
pop
popf
out
in
sbb
mov
mov
pop
push
gs
sub
loopne
add
repz
loope
ljmp
adc
cwtl
aam
stos
mov
cmp
mov
call
lods
dec
mov
push
mov
pop
jge
ret
mov
mov
inc
orl
inc
add
movsb
outsl
push
movsb
ljmp
enter
or
cmp
jle
sbb
mov
cwtl
loop
sub
mov
call
or
lret
mov
and
push
mov
xor
dec
call
cmc
sarl
in
jge
lret
jl
cmpsl
cmpl
mov
add
pop
fs
fs
xchg
adc
inc
dec
push
clc
sub
fists
xor
dec
pushf
pushf
jno
ret
orb
ret
adc
add
leave
cmc
roll
xchg
xor
ret
nop
mov
and
xor
or
test
outsl
push
mov
repnz
mov
sub
movsl
mov
test
arpl
push
jl
inc
fst
out
mov
pop
imulb
inc
call
mov
dec
push
hlt
fiaddl
ret
mov
push
mov
sbb
push
fcompl
imul
cmc
lret
lea
jl
pop
aam
shlb
add
sbb
mov
test
test
cmc
push
inc
xchg
push
das
test
nop
mov
ret
dec
ret
xchg
mov
mov
lods
ja
aaa
nop
push
push
or
rclb
and
in
les
push
fstl
popf
mov
lods
popa
gs
pop
pop
test
add
stc
push
cwtl
xchg
out
fbld
into
iret
cmpsb
pop
adc
mov
mov
pop
sbb
cmc
xchg
ljmp
jno
loope
pusha
mov
push
push
push
mov
mov
push
xor
pushf
or
mov
scas
fdivs
insb
jo
pushf
cld
push
lds
adc
stos
cmc
mov
je
test
mov
shrb
xchg
out
test
jbe
je
xor
push
bound
mov
adc
or
lret
in
mov
pushf
aad
daa
push
call
push
push
jg
cmc
xchg
stos
inc
ret
cmc
pop
xchg
and
mov
push
pop
enter
cmpl
xlat
push
jmp
dec
push
test
scas
add
inc
cs
pop
cmp
test
adc
sbb
push
stos
adc
iret
sub
movl
les
sub
fsubl
leave
push
adc
mov
mov
sub
adc
xlat
mov
push
cwtl
or
test
ds
or
sub
or
gs
movsb
and
jecxz
push
aam
mov
sub
and
cmp
shl
test
pop
movsl
push
imul
lods
mov
or
loope
in
mov
pop
xlat
mov
mov
sbb
push
dec
popf
and
inc
pusha
pop
fisttps
out
outsl
jno
mov
dec
inc
cmp
mov
test
lods
shrb
inc
repnz
rclb
out
shrb
scas
std
mov
std
cwtl
adc
mov
add
stos
xchg
lcall
aam
pop
adc
mov
lea
test
mov
test
lea
or
mov
test
ja
push
bound
cmpsl
mov
sbb
inc
xor
inc
mov
aaa
add
mov
in
or
fisttps
mov
xchg
repnz
seta
pop
stos
mov
or
pushf
mov
jmp
and
add
push
push
lcall
or
push
dec
ror
arpl
adc
std
filds
stos
imul
clc
push
mov
adc
adc
push
mov
xchg
xchg
xor
pop
hlt
nop
and
xchg
fsubrp
ds
push
mov
out
jo
lret
or
pop
insl
xchg
sbb
les
fnstsw
mov
adc
fbstp
popa
mov
push
popf
xor
push
pushf
adc
iret
lcall
stos
inc
mov
lret
imul
mov
and
mov
icebp
mov
add
or
je
mov
rorl
sbb
test
jae
or
mov
or
lahf
cmc
add
js
and
xchg
push
sbb
jns
test
gs
xchg
in
jmp
add
clc
or
push
imul
push
jno
mov
dec
push
or
pop
and
pushf
cmp
inc
imul
fmulp
lods
xor
rorb
rcrb
mov
cmp
adc
xor
push
mov
aaa
xor
add
push
mov
cmc
popf
in
rcrl
push
daa
repnz
repnz
sbb
cmp
in
into
xor
inc
mov
mov
jnp
movsl
ficoms
cwtl
test
test
test
popl
movsl
sahf
pushf
test
les
inc
inc
andl
or
scas
lods
mov
lea
mov
cwtl
mov
inc
jle
sbb
mov
mov
cmpsb
jg
adcb
mov
xchg
and
pushf
mul
loope
lock
push
mov
xchg
add
outsl
lcall
int
dec
fadds
mov
or
mov
test
mov
mov
dec
and
sbb
data16
lea
cmpsb
sbb
les
pop
loop
jge
lret
xchg
jle
movsl
ss
std
fidivl
cmpl
push
xchg
test
mov
xchg
pop
in
hlt
mov
popf
cwtl
push
adc
lock
adc
xchg
dec
icebp
rolb
mov
mov
in
leave
cltd
pop
push
jg
mov
rcrb
rcl
fistps
cmp
in
add
push
xchg
jmp
cltd
push
or
test
add
mov
movsb
nop
xchg
push
adc
enter
rorb
xchg
lods
movsb
insb
add
mov
or
mov
rorb
rorb
aad
mov
scas
pop
sub
and
jl
sbb
sbb
int
adc
pop
push
or
jl
cmc
mov
aas
in
imul
iret
in
movsb
xchg
push
push
or
xchg
fbstp
jl
int
cwtl
stos
push
mov
in
jmp
jne
je
stos
adc
ret
in
xchg
out
xchg
into
or
cwtl
inc
shrl
jae
test
push
rclb
ja
rcrb
insl
push
arpl
enter
movsl
and
out
push
js
add
cmpsl
xor
cmp
sub
ja
push
add
jg
iret
fcomps
mov
xor
sub
xchg
cltd
jno
sti
mov
fwait
mov
andl
dec
xor
in
out
mov
xchg
dec
fdivrp
rolb
adcb
cwtl
stos
cmp
daa
inc
dec
movsb
inc
sub
xlat
pop
push
std
loopne
xchg
sub
ja
inc
iret
addb
mov
jb
jo
hlt
fs
sarb
lods
mov
push
xchg
call
roll
push
scas
rcrb
fistl
into
mov
ds
add
push
jnp
and
push
push
push
mov
add
xor
rorb
pop
jae
bnd
push
push
roll
scas
test
in
mov
pushf
mov
cmpsb
aas
inc
pop
xchg
push
pushf
test
aam
dec
xchg
rclb
pop
dec
mov
mov
mov
hlt
mov
and
xor
or
dec
push
gs
sbb
mov
and
ret
out
push
ret
mov
sub
xor
mov
mov
shld
sub
mov
pusha
rcr
loopne
push
inc
sbb
add
insb
pop
bound
sbb
mov
mov
pop
nop
push
scas
shlb
sbb
test
jo
movsl
xlat
out
push
rol
subb
lret
subl
adcb
pop
std
jno
inc
scas
adc
mov
mov
loopne
sbb
mov
jnp
rorb
adc
inc
jb
mov
inc
dec
push
xchg
and
rcrb
fcomps
push
xchg
or
mov
lret
sbb
push
pop
mov
mov
sti
and
mov
mov
es
inc
pmaddwd
sarb
ds
arpl
imul
popl
jae
shrb
fmuls
or
adc
pop
sahf
imul
xchg
rclb
fistpll
cmc
xchg
scas
or
aam
enter
mov
int3
mov
mov
xchg
mov
cltd
mov
loopne
faddl
jge
jp
movsb
sub
nop
fcomps
ja
data16
sahf
mov
shll
mov
mov
sbb
and
test
pop
sub
aad
push
loope
filds
jae
in
dec
dec
or
mov
aad
fstl
shlb
loop
mov
dec
sub
sarb
mov
pushf
les
inc
push
cmp
fcmovne
fildll
adc
lods
cmp
dec
mov
mov
out
test
xchg
push
cs
inc
cmpsl
aad
pop
test
jns
in
out
inc
je
fbld
js
push
push
mov
hlt
aam
mov
push
ffree
movsb
orl
test
add
ljmp
adc
lret
sub
into
sti
push
nop
fistps
nop
mov
or
or
incl
test
mov
sti
mov
xor
lret
insl
sub
mov
imul
ljmp
mov
xchg
push
cmp
outsb
sub
sub
stos
dec
or
nop
push
xor
adc
lret
out
add
push
imul
int3
mov
adc
ja
or
imulb
in
and
and
pop
jmp
test
pushf
scas
cmp
push
imul
xchg
jae
in
xlat
jl
mov
mov
sbbl
loopne
mov
stos
popf
jmp
add
push
out
rorb
jo
and
into
lcall
ret
mov
and
pop
repz
mov
pop
jnp
xor
pop
test
and
xchg
cmpsl
clc
sbb
jb
xor
cmp
xchg
movb
outsb
jne
cltd
ret
pop
les
lods
dec
pop
and
jb
inc
pop
jo
pop
hlt
lcall
sarb
leave
xlat
daa
inc
mov
mov
lods
pop
repz
mov
xor
mov
ds
xlat
cs
dec
and
cmp
xlat
into
icebp
nop
push
sub
xchg
pushf
out
dec
jmp
or
pushf
fimull
ficoms
adc
insb
or
adc
bound
cmpl
sti
jge
add
xchg
or
push
loopne
or
test
mov
jae
mov
add
xlat
pop
jl
cltd
xchg
xlat
movsl
inc
mov
nop
adcl
fcomps
inc
xchg
cld
imul
push
or
add
hlt
xchg
sti
mov
push
out
mov
scas
aas
mov
dec
mov
and
into
xor
lahf
add
into
test
hlt
movsl
cmp
adc
cmpsl
js
add
sahf
ja
push
in
mov
xchg
faddl
lods
shlb
pop
cmp
or
jp
dec
add
push
data16
mov
test
fnstcw
icebp
hlt
ljmp
test
enter
bound
stc
lret
xchg
mov
ret
scas
loopne
adc
pushf
rclb
mov
inc
sbb
das
dec
and
stos
aad
ljmp
test
inc
xor
jb
pop
icebp
pop
lods
push
cli
sub
test
shlb
movsl
dec
cmpsl
icebp
pop
pop
mov
loope
ja
insb
ja
incb
xchg
xchg
mov
push
push
inc
pop
addr16
imul
or
jp
adc
mov
jb
cld
cmp
lods
mov
pop
xchg
inc
cwtl
cmc
jae
shrl
insl
adc
fildll
or
adc
aad
or
push
push
lcall
xor
les
leave
ds
mov
pop
movsl
sti
jne
fdivs
adc
push
sbb
roll
lds
ret
jmp
aas
xchg
loopne
pop
push
bound
test
push
push
mov
test
dec
mov
adc
rcrb
jmp
stos
pop
pop
mov
mov
lret
add
jg
sub
adc
mov
cmp
in
fdivrs
sub
fildll
hlt
test
pop
fistl
and
test
push
jb
pop
andb
pushf
cmpsb
sti
shlb
mov
mov
mov
les
sub
mov
add
mov
pop
imul
inc
jno
arpl
clc
loopne
push
cmp
pusha
sub
mov
pop
xchg
test
sub
cltd
add
in
mov
lret
mul
xlat
dec
push
aad
mov
enter
or
data16
shll
js
fidivrl
xorb
bound
rorb
fisttpll
or
mov
jb
rcrl
sub
xor
ror
or
push
jno
cltd
test
ss
nop
pusha
and
sbb
xchg
test
gs
bound
xor
nop
pop
jp
mov
xchg
mov
stos
xor
dec
cmp
stos
rsm
cld
mov
mov
sbb
push
test
xchg
ret
sub
fwait
mov
daa
mov
push
and
jnp
adc
aas
jae
adc
push
in
cmc
cmpl
pop
jmp
lds
jg
mov
push
sub
jl
or
inc
neg
andl
lret
mov
jmp
push
jno
loopne
push
jl
aad
sbb
test
mov
sbb
jge
xchg
fidivl
fdivs
fisubs
ljmp
fcomps
inc
lret
mov
clc
cwtl
mov
jecxz
cmp
adc
add
mov
dec
mov
or
rcrl
push
dec
call
jg
sbb
in
mov
xor
pop
jo
xor
nop
loopne
sub
aad
cmp
push
imul
je
or
jl
or
sbbl
push
jle
cwtl
in
jbe
mov
cmp
add
add
or
lea
sbb
adc
cmc
test
ljmp
cli
sub
movsl
cld
aad
sbb
push
addl
cmp
inc
jbe
xor
orb
scas
cmc
lret
or
mov
adc
and
lds
xor
fildll
pop
push
mov
fistps
repnz
mov
scas
mov
fists
frstor
dec
adc
adc
dec
inc
in
pop
jb
pop
xchg
in
xor
je
mov
fsub
and
icebp
add
out
cmp
setl
cs
mov
call
sarb
mov
cmpsl
jne
push
xorps
sarl
test
rclb
mov
mov
cwtl
out
cmp
jecxz
hlt
cmp
adc
cs
mov
and
scas
nop
inc
adc
and
jbe
mov
cmp
push
mov
clc
incl
push
add
hlt
loopne
into
mov
movl
rcll
cltd
int
dec
scas
jbe
xor
addr16
cwtl
cld
sub
jo
lds
or
xchg
div
xor
les
out
jo
imul
push
cmp
dec
sarb
or
jg
push
imul
dec
cwtl
popa
js
inc
xchg
add
cmpsb
mov
sub
mov
mov
ja
dec
mov
test
adc
test
shll
mov
mov
enter
pop
add
push
jo
cmpsl
orl
mov
dec
into
rcl
push
push
and
mov
xchg
inc
enter
loop
scas
jmp
popfw
popa
push
add
int
lods
or
lods
fdivp
das
jno
pop
push
pop
clc
test
mov
xor
pop
cld
mov
inc
fcmove
sbb
aam
sub
inc
fdiv
je
imul
rorb
fsts
push
jle
xchg
addr16
aad
dec
nop
fildl
jnp
xchg
inc
fisubrs
adc
faddl
shll
mov
sub
not
cwtl
es
pop
adc
pop
outsl
mov
sbb
and
jb
push
jb
mov
or
lods
and
jp
repnz
cmc
xchg
mov
jge
and
add
mov
fidivrl
sub
cwtl
leave
push
ret
fcmovu
sub
imul
pusha
pop
or
fbstp
cmpsb
and
shr
into
adc
outsb
loop
mov
pop
out
add
loop
or
pusha
nop
fldt
and
dec
loopne
xchg
inc
out
shrb
sti
xchg
mov
xor
filds
jp
rolb
mov
inc
mov
cmp
xor
xchg
mov
add
gs
stc
shlb
cwtl
sub
xchg
sub
xor
pop
ret
pop
add
rcr
in
or
lock
inc
add
xchg
out
jnp
test
and
sub
popa
add
dec
sub
xorb
out
jae
cmpsl
dec
sub
dec
xor
xchg
aad
sbb
cmp
cwtl
lcall
mov
bound
in
inc
or
int3
sub
out
pop
inc
inc
cmp
dec
ret
sub
push
push
jmp
push
jmp
ljmp
xor
dec
in
push
iret
or
hlt
adc
push
inc
add
inc
sub
sbb
cld
loopne
mov
or
mov
out
loopne
leave
xchg
out
sub
push
sbb
shr
lret
cmc
dec
ret
or
loop
mov
clc
push
loopne
scas
xchg
cmp
in
in
lret
push
pop
push
push
dec
push
aaa
cmpl
in
ret
mov
push
mov
je
lcall
or
cld
cmc
in
sar
rcll
cmc
xchg
sbb
mov
sub
icebp
or
jmp
shlb
shrl
les
or
jb
pop
xchg
push
mov
stos
push
adc
jp
mov
arpl
cmp
pop
shrb
push
movsb
dec
test
dec
rorb
cwtl
sbb
shrb
mov
push
sbb
sub
loop
xchg
outsb
xchg
in
mov
sbbl
popf
mov
in
sbb
push
inc
ret
mov
xchg
lods
jnp
inc
xor
xchg
xchg
mov
in
dec
in
xor
test
jne
jno
dec
adc
xchg
sarb
xor
dec
scas
lods
push
sbb
aas
fs
cmp
mov
dec
fdivr
je
into
shll
pop
xchg
dec
out
xchg
push
jmp
data16
push
mov
push
and
faddp
xor
jle
xor
jmp
test
dec
inc
xchg
lret
cwtl
dec
cmp
imul
mov
xlat
je
inc
in
adc
movsb
or
stos
cs
stos
push
adc
sbb
mov
xchg
add
mov
out
cmp
sub
out
jb
xor
and
fsubrl
enter
adc
sub
lea
dec
add
cld
xchg
push
pop
xorb
cmp
and
movsl
mov
loopne
mov
out
adc
push
shrl
mov
shrb
popa
sbb
pushf
xor
outsb
and
popf
jg
adc
scas
outsb
xchg
or
cwtl
push
das
inc
push
ds
add
movsl
rcrl
jmp
inc
lret
and
sub
fiaddl
inc
adc
lods
mov
dec
sti
test
lds
jae
movsl
dec
out
fsts
add
push
neg
lret
test
pop
je
mov
daa
test
add
movsl
dec
test
scas
push
in
adc
out
cwtl
cmpsb
out
shl
mov
pop
cltd
lret
mov
cld
lcall
mov
cmc
sahf
add
adc
xchg
mov
mov
das
jmp
inc
fcom
adc
ds
fmull
rcr
xchg
scas
pusha
add
add
mov
repnz
mov
das
mov
shrl
push
mov
push
sbb
pop
push
int
push
cmpsb
sbb
cmpsl
adc
out
cmpsl
fcomip
mov
sti
test
lock
sub
inc
aad
push
int3
movsl
push
xchg
cmp
mov
mov
cli
mov
mov
loop
cmpsl
push
sarb
rolb
cmc
cs
cltd
xchg
mov
ret
inc
mov
ret
mov
add
xor
inc
xchg
sbb
push
dec
cwtl
and
sbb
xor
cld
hlt
xchg
les
jns
or
jb
mov
and
ret
pop
add
adc
stc
ss
push
test
xchg
bound
xor
mov
cmp
cmp
sbb
lock
adc
inc
or
adc
out
fidivrs
xchg
push
jbe
js
dec
push
sbb
and
clc
subb
cmpsl
mov
lea
pop
daa
fisubl
push
jecxz
inc
aam
popf
or
orb
imul
xorl
stc
mov
xchg
icebp
push
ret
xchg
test
cmpb
popa
sbb
adc
mov
fsincos
sbb
stos
test
mov
jo
pushf
pop
aam
shrl
mov
inc
push
scas
jp
xor
ret
sbb
sbb
sub
cmp
pushf
subb
mov
ret
lods
dec
xor
int3
mov
nop
fdivl
out
adc
mov
mov
lahf
add
cmp
inc
push
cmp
into
jno
add
add
nop
dec
push
push
xlat
rcl
fildll
hlt
insl
lret
scas
or
outsb
icebp
mov
insb
call
jg
outsb
ljmp
mov
insb
fsubp
rolb
xchg
push
mov
sub
fldt
cmpsl
into
ret
mov
or
es
push
fsubl
add
push
xchg
push
pop
popa
mov
push
fwait
std
xchg
mov
es
lret
or
loop
test
orb
cmp
fists
shlb
orb
mov
mov
pop
or
mov
xchg
stos
cmp
inc
xchg
lret
xchg
cmp
je
lret
jns
mov
fcomps
iret
cmc
pop
lret
int3
mov
cltd
xor
sbb
imul
xchg
dec
jge
and
mov
add
dec
xchg
or
rcrl
and
rcrl
fdivrl
sbb
dec
dec
stos
fidivs
rcrb
hlt
sub
dec
shrb
sahf
jecxz
nop
fcoms
pop
sub
popa
mov
dec
xchg
push
mov
adc
js
cli
rol
xor
jno
mov
sbb
lret
and
mov
clc
pop
fidivl
jmp
testb
hlt
ds
push
pop
test
pmaddwd
jmp
call
enter
rclb
add
inc
cmc
cmpsl
sub
push
into
or
enter
imul
sti
insb
inc
adc
mov
aad
loopne
jecxz
shrl
int3
sub
xchg
xchg
mov
rorl
stos
xchg
lcall
dec
inc
test
out
clc
pop
loope
into
sbbl
rcrl
mov
adc
ret
aad
pop
cmpsb
rorl
lret
dec
nop
or
add
pxor
sbbl
add
push
mov
add
xchg
cmpsl
adc
adc
xchg
mov
or
mov
jge
das
add
jb
jmp
int
out
cltd
mov
fwait
pop
out
or
test
cmc
ljmp
inc
add
jns
stos
jge
or
cmpsl
cmp
jge
or
dec
dec
cltd
sub
cli
mov
aaa
or
add
test
lods
push
fcoms
inc
adc
lds
add
cmpsb
cmc
not
out
fcoml
xchg
mov
cwtl
mov
enter
dec
add
jae
push
push
fcmovnb
jbe
mov
das
mov
cmpsl
cmc
clc
xchg
xchg
xor
imul
out
and
mov
fmulp
jo
cmp
addr16
jb
std
and
add
ret
cs
and
push
push
xor
dec
xchg
pop
jp
add
xchg
or
out
push
lds
imul
jo
shrl
inc
fnstcw
push
jns
scas
xchg
ror
xlat
ret
mov
imul
dec
add
nop
insb
jns
or
sub
into
dec
popf
mov
inc
lock
mov
fdivr
push
push
rol
and
mov
dec
call
or
push
lock
mov
mov
ja
ret
and
cmc
jbe
aam
cwtl
adc
jecxz
dec
xor
dec
adcb
lock
jecxz
mov
pop
mov
mov
rcr
lret
xchg
cwtl
pop
les
xchg
aas
jbe
cwtl
imul
jle
jae
mov
enter
adc
imul
mov
test
sub
lock
test
dec
insb
nop
push
jb
inc
lock
cld
push
shll
insb
lods
mov
imul
and
sub
xchg
ds
loopne
aas
rcr
cmp
jle
xor
testb
lock
fs
mov
into
sbb
mov
es
sub
and
hlt
inc
ljmp
xchg
sarb
mov
hlt
cmc
rolb
fwait
xchg
or
idivb
xchg
test
loop
mov
xor
dec
mov
add
cwtl
cmc
lret
add
or
and
rolb
add
scas
sub
orb
leave
fldenv
cmc
ds
jle
cmp
insb
ret
test
outsl
fistps
mov
mov
js
cld
fcomps
rol
std
xchg
mov
pop
mov
mov
cld
pop
pop
scas
push
cmpsb
jo
dec
ret
push
stos
scas
in
dec
mov
jge
leave
sbb
cwtl
push
cmp
mov
out
rcrb
and
in
mov
mov
sub
out
aam
hlt
cmc
add
and
rolb
mov
and
out
xchg
ds
hlt
sahf
jl
xchg
mov
je
sbb
aad
mov
push
adc
test
mov
scas
jnp
shll
sub
les
in
ret
sahf
shrb
shlb
and
xor
movsb
xchg
xchg
fs
loope
xchg
jp
stos
fcoms
cld
cli
mov
fbld
and
outsl
and
jg
mov
addl
or
int3
out
sbbl
pop
fnstcw
outsl
jbe
push
fmulp
pop
add
pop
fdivr
push
mov
push
cwtl
cld
mov
mov
inc
jnp
ret
jne
sub
adc
inc
mov
and
rolb
xchg
jmp
mov
and
adc
inc
mov
sarb
int3
and
test
cmpsl
mov
popa
inc
jg
xor
insb
sbb
mov
mov
pushf
or
rolb
ret
sbb
incb
in
xchg
js
xor
push
popa
shlb
and
jns
pop
adc
adc
sbb
sub
sub
and
mov
mov
adc
jecxz
mov
aad
push
dec
xchg
or
mov
xchg
pop
jle
imul
and
add
push
adc
sar
test
ds
push
push
popa
sub
jae
mov
nop
loopne
inc
shl
xlat
mov
pop
xchg
pusha
ss
xlat
push
scas
adc
test
inc
or
cmp
adc
loopne
mov
or
stos
pop
jnp
ss
orl
fs
pop
xchg
push
cmpsb
fildl
lds
inc
int
push
bound
loop
arpl
sub
jmp
clc
sbb
mov
push
sub
xchg
test
push
pop
ret
mov
jns
push
inc
xchg
adc
shrb
xchg
popa
dec
shll
test
dec
mov
pop
push
pusha
mov
inc
fcom
or
sub
out
mov
scas
subb
jl
stos
jg
iret
mov
ret
push
or
call
rcrb
cmpsb
xchg
adc
push
outsl
xchg
mov
sbb
add
sbb
cmp
jns
dec
pushl
sub
rclb
and
dec
push
or
test
bound
push
cli
popf
lret
xlat
imul
arpl
inc
fildl
xorl
add
mov
pop
mul
fucompp
stos
fdivrs
xlat
push
xchg
push
in
push
xchg
lods
mov
cmpsl
test
adc
sarb
dec
pop
ficomps
hlt
test
jae
xchg
push
inc
add
mov
xor
dec
mov
fdivrp
shlb
fsts
daa
xlat
sbb
rclb
mov
lods
negb
xchg
xchg
inc
push
and
int3
movsl
shr
test
imul
ret
nop
call
pop
fimuls
into
push
stos
pushf
aaa
sbb
into
mov
sti
adc
insb
mov
fisttpl
fimuls
int3
lcall
pop
movsl
add
cs
imulb
call
push
mov
mov
adc
lds
xrelease
sti
lock
sbb
mov
mov
jecxz
notb
xchg
push
or
adc
sbb
xchg
or
push
xchg
into
pusha
inc
xlat
iret
rcrb
xchg
movsb
add
aas
in
lods
jg
int3
inc
and
inc
adc
pusha
pop
xor
loopne
in
adc
rorb
ret
lcall
loopne
std
or
pushf
aas
lock
inc
inc
fcmovne
cmp
iret
adc
ds
mov
lret
pop
mov
test
xchg
mov
xchg
mov
nop
stos
push
std
jmp
rorb
jmp
ljmp
stos
imul
xchg
rcll
das
jb
mov
out
ss
xchg
aas
lock
test
xor
pop
mov
dec
arpl
repz
cmp
mov
add
out
adc
mov
ljmp
es
imul
add
arpl
lds
cmp
mov
mov
xchg
test
clc
xor
cmp
adcl
call
jg
ja
lret
fsubrl
fdivl
mov
sbb
js
mov
test
movsl
cmp
jge
add
inc
push
fdivp
cmp
je
xor
pop
sub
ret
xchg
add
orb
ja
push
dec
shl
jmp
test
aam
cld
fidivs
mov
fstpt
mov
dec
and
mov
cwtl
adc
sbb
or
xor
push
pusha
push
push
stos
and
add
inc
jle
lret
push
jno
sub
and
lret
mov
sbb
and
ret
call
xchg
ljmp
dec
dec
fcomps
jbe
dec
mov
iret
test
lds
xor
adc
mov
fwait
ret
vpshlb
push
roll
or
leave
fcoms
pushf
lods
lret
dec
imul
pusha
xchg
pop
push
bound
adc
add
aam
add
add
les
imul
rcl
or
sub
cmpsb
jmp
movsl
ret
push
mov
sahf
mov
dec
mov
call
arpl
lret
push
inc
xchg
mov
or
lods
mov
pop
aam
and
inc
addr16
or
xlat
inc
add
rol
rcrl
xchg
rol
xchg
movl
xchg
js
xchg
or
sub
or
scas
jle
lret
jg
pop
add
andb
mov
rcrb
ds
xor
incl
lock
movsb
dec
sbbl
movsb
inc
test
scas
ja
sbb
cmpb
mov
addr16
pop
rclb
xor
rorl
imul
or
mov
sbbb
sub
xchg
pop
movsb
rorb
mov
lock
sbb
xchg
add
mov
mov
fwait
nop
dec
test
jnp
mov
pusha
cmc
fwait
adc
and
sub
sahf
mov
in
mov
jmp
or
aam
inc
xchg
frstor
shl
pushf
and
aas
mov
fadd
sub
aas
push
sub
fisttpl
jae
xchg
loope
repnz
cwtl
jmp
xchg
push
sti
push
out
adcb
push
jbe
cltd
sbb
sarb
mov
int
lret
test
adc
sub
lods
and
sarb
call
push
test
xchg
mov
inc
inc
sub
jecxz
jg
pop
mov
mov
mov
jg
push
repnz
add
xchg
push
adcl
cmp
sub
jmp
js
mov
sub
or
mov
add
notb
inc
lds
sub
sub
fisttps
jo
cwtl
push
nop
les
fwait
push
mov
sub
das
xchg
idivb
icebp
and
and
mov
stc
testl
mov
mov
hlt
mov
jp
clc
inc
retw
mov
or
and
inc
aas
ja
adc
adc
push
inc
test
dec
rclb
rcr
ffreep
les
inc
out
pop
and
inc
sti
xchg
xchg
mov
mov
dec
or
push
fwait
les
xor
mov
data16
les
sbb
lret
in
xchg
shrl
adc
movsb
pop
mov
or
xchg
test
test
movups
mov
hlt
cmc
xchg
test
jnp
cltd
rcrl
mov
imul
test
lock
hlt
stos
orl
test
mov
xchg
mov
xchg
ljmp
test
hlt
sub
push
mov
hlt
xchg
lds
subb
fwait
movsb
add
stos
add
incl
xlat
rcrl
out
xchg
dec
aas
xchg
mov
aam
add
popf
jp
shrl
sti
test
insb
add
shl
lcall
ret
mov
ret
xchg
add
call
inc
out
cli
addr16
cmpb
mov
mov
enter
sbb
mov
mov
lcall
or
call
xlat
enter
xchg
xchg
xchg
imul
rolb
test
push
mov
push
and
scas
fwait
adc
lahf
mov
nop
movsb
dec
mov
orl
xchg
xchg
leave
movsl
inc
movsb
lods
xchg
jne
and
std
adc
sub
xchg
dec
lods
mov
aas
xor
je
xor
mov
int3
jecxz
pop
mov
add
rcl
mov
aas
jno
movb
dec
push
pop
rorb
nop
out
scas
mov
add
xchg
leave
mov
js
pop
dec
jb
sbb
push
cwtl
cmp
enter
mov
mov
cmc
push
or
mov
mov
test
push
adc
stos
cmp
add
push
scas
mov
cmpb
xor
in
in
scas
mov
movsb
push
out
dec
movl
or
adc
ds
xchg
sub
xor
xchg
enter
push
push
ret
faddl
or
pop
aam
jne
xchg
inc
shl
inc
in
cmp
jmp
jb
xchg
mov
adc
inc
addr16
adc
les
icebp
adc
xchg
out
dec
fiaddl
fldl
push
and
mov
sbb
inc
lock
rol
mov
push
lret
jns
xchg
rorb
sub
enter
addr16
inc
or
test
or
test
sub
outsb
fbld
js
lahf
xchg
mov
mov
add
arpl
sti
mov
adc
fsub
addb
inc
jg
add
pop
jmp
aam
imul
mov
subl
in
lcall
push
aad
negl
test
add
xlat
sbb
xchg
leave
sub
mov
pop
or
clc
enter
dec
je
or
fists
aam
pop
xor
rcll
add
cmpsl
in
mov
xchg
shrl
xor
pop
dec
sbb
addl
sahf
jp
pop
movsl
dec
inc
ret
sqrtps
outsl
pop
js
jg
mov
and
mov
in
mov
fadd
in
shl
add
or
subb
jno
lods
add
fildll
jmp
inc
out
stos
nop
mov
jo
in
shlb
outsl
jnp
bound
push
fdivrl
je
mov
pop
fs
pop
fs
arpl
aad
cmp
adcl
pop
inc
pushf
mov
pop
push
push
in
mov
rcl
int3
test
nop
mov
and
rorl
cmpb
cwtl
in
inc
mov
js
movsl
pop
loopne
aas
orb
idivl
and
test
push
arpl
mov
cmc
cwtl
pop
jnp
push
or
sbb
sbb
mov
push
and
inc
mov
dec
or
lret
fsts
sbb
bswap
cmp
ljmp
mov
adc
adc
inc
in
mov
call
int3
add
or
testl
cmp
dec
outsl
stc
sub
push
lret
mov
and
mov
adc
enter
pushf
push
shl
sbb
aad
xchg
loopne
stc
and
xor
xchg
lahf
fnstenv
cld
incb
jns
enter
and
cmpsl
push
in
sbbb
sbb
lods
idivl
mov
add
push
fwait
push
mov
xchg
aas
add
cs
mov
lods
aad
lock
and
xchg
in
ret
push
xor
mov
addr16
scas
mov
idiv
rcll
aam
cs
test
mov
jp
js
out
stos
pop
out
xor
adc
adc
les
push
inc
xor
mov
xorl
sahf
xor
movsb
or
loopne
ds
mov
hlt
adc
xchg
ret
mov
mov
cmc
jno
movsl
ja
push
mov
stos
fisttpll
ror
jnp
jno,pt
les
aad
hlt
push
adc
decl
test
cmc
ret
jg
push
adc
mov
add
and
jb
shlb
push
ret
out
add
mov
andl
call
and
movsb
in
es
cwtl
xchg
cld
adc
ds
xchg
fdivl
or
and
adc
xchg
and
fistpll
dec
jbe
mov
rcrl
xor
pop
enter
cmc
cli
inc
lret
mov
pop
mov
xor
aam
xchg
inc
inc
inc
lret
lret
inc
and
stc
add
pushf
ss
inc
fisubrs
cmp
popf
adc
adc
hlt
or
mov
ret
fdivl
incl
mov
jns
cmp
mov
into
jb
xor
dec
mov
adc
aas
sarb
or
jl
push
sbb
js
mov
and
or
add
jmp
insb
cmpsl
enter
in
rorb
xchg
mov
push
dec
clc
int3
in
mov
push
les
xlat
insb
add
push
rorl
test
stos
in
cwtl
jo
xchg
aas
fcomp
pop
mov
xchg
in
sbb
adc
out
mov
add
mov
pushf
mov
mov
repnz
nop
adc
mov
ss
and
bound
push
in
mov
mov
push
mov
push
fstpt
scas
push
pop
loop
insb
daa
fstp
je
inc
push
pop
sarl
xor
dec
jmp
cmp
push
std
xor
test
popa
adc
inc
mov
andl
inc
xor
lods
sbb
jle
in
std
xchg
dec
sub
dec
sahf
push
or
into
nop
push
or
movb
xchg
add
xchg
mov
hlt
cmpsb
cmc
mov
rorl
fidivrs
sub
sub
xor
loopne
test
mov
iret
hlt
stos
pop
xchg
stos
xchg
aad
mov
mov
and
into
jg
in
add
sbb
out
fstpl
mov
cmp
mov
cmc
dec
dec
lods
rorl
cwtl
loopne
into
or
mov
mov
enter
pop
mov
call
push
mov
hlt
loope
inc
cmc
dec
push
jp
push
adc
stos
sub
add
jp
pushf
popa
add
jmp
jmp
push
imul
in
sub
sahf
leave
mov
mov
lret
adc
pushf
je
fadd
mov
sub
notb
add
loopne
enter
inc
push
add
les
scas
mov
mov
out
test
in
mov
mov
or
jo
push
lcall
aad
lahf
js
jbe
and
loope
in
nop
push
out
mov
push
sub
in
lret
add
cmc
and
out
push
jp
shll
dec
mov
mov
cvtps2pi
in
sahf
mov
mov
popl
fidivs
lods
mov
scas
push
lret
xor
shl
repz
nop
or
xchg
mov
cld
push
imul
imul
mov
xchg
xchg
xor
mov
dec
pushf
pop
mov
leave
adc
xchg
mov
cwtl
add
sbb
hlt
rorl
cmp
jo
lahf
imul
mov
cwtl
inc
inc
mov
xor
push
xlat
popa
mov
out
ss
negb
lea
mov
mov
pushf
pop
push
sub
faddl
add
mov
mov
inc
add
adc
add
or
push
mov
in
rclb
lcall
inc
aas
add
imul
hlt
lahf
add
or
xchg
out
and
cmpsl
or
daa
or
mov
rcll
cs
add
add
adc
add
xchg
add
mov
add
cmc
gs
ror
movsb
mov
xchg
subl
insl
cmpb
iret
in
into
mov
pop
arpl
aad
mov
mov
movsb
int3
lods
push
cwtl
vpaddb
xor
rcll
xchg
in
leave
inc
xchg
out
fs
loop
mov
mov
jl
or
sub
arpl
and
out
jne
fld
ret
cwtl
sarl
scas
mov
xor
jmp
or
xchg
scas
nop
bound
test
and
lcall
jg
loop
push
pop
fildl
fs
mov
mov
or
mov
xchg
addl
mov
ficoml
ret
iret
add
jle
sahf
dec
mov
lds
sbb
fbstp
dec
pop
bound
fmull
adc
cmc
scas
xor
dec
clc
rolb
xchg
push
adc
mov
lods
imul
jmp
fdivl
add
inc
dec
popl
mov
adc
cmc
les
push
pop
test
xchg
add
test
ret
movsl
or
leave
dec
rolb
xchg
fidivrs
lret
rcrb
fldenv
pusha
icebp
mov
inc
insb
jle
out
lock
adc
and
movsb
mov
rclb
rolb
mov
in
dec
popa
push
xchg
lds
or
shl
hlt
rcrb
cwtl
cli
xchg
ja
ret
xchg
stos
out
outsl
jle
scas
adc
cwtl
adc
or
xchg
jmp
sub
pusha
hlt
xchg
insl
add
mov
cltd
cltd
enter
cltd
jns
mov
xchg
jbe
les
sbb
inc
xchg
mov
mov
nop
cmpl
test
popl
mov
mov
add
jo
jmp
in
cmp
repz
test
cmp
push
je
stos
dec
xorb
or
jo
arpl
xor
lods
outsl
icebp
sub
xor
test
push
xchg
xchg
xchg
mov
cwtl
cmpsl
or
mov
inc
scas
push
sahf
or
xchg
mov
in
xor
mov
sub
pop
mov
inc
cmc
mov
add
add
fcmovnu
ret
xchg
cmp
into
mov
add
lret
call
pop
xor
orl
push
adc
sbb
icebp
jb
mov
pushf
mov
lock
xor
add
scas
mov
iret
cwtl
in
mov
or
xchg
adc
cmpsl
pop
popa
dec
pusha
add
pop
xor
into
cli
rcll
outsl
adc
push
roll
js
adc
ret
pushf
or
testb
mov
mov
xchg
lret
mov
and
xchg
adc
sbb
adc
add
lock
into
ror
or
test
or
mov
outsl
mov
xor
xchg
lds
and
mov
sub
roll
jp
test
pusha
popl
inc
int3
bound
or
mov
sbb
adc
test
dec
int3
nop
jb
cmpsb
and
pushf
pop
aam
sub
cld
pop
adc
rclb
enter
xchg
jmp
jmp
arpl
int3
repz
mov
dec
xchg
push
xchg
std
cwtl
mov
test
or
dec
cmc
in
lods
or
lock
xlat
push
add
adc
shlb
hlt
or
ret
mov
jno
sbbl
shrl
aam
ret
adc
xchg
mov
ja
mov
les
in
or
adc
sbb
cmp
jge
filds
cmp
roll
or
mov
push
add
out
pop
add
xchg
or
mov
ret
shrl
inc
ret
xor
mov
xchg
arpl
imul
cmp
mov
fs
test
dec
cmp
push
cmp
nop
cmp
adc
mov
or
add
or
lds
mov
pop
inc
rcr
clc
movsl
fs
js
stos
int
mov
daa
push
sbb
lods
xchg
inc
mov
mov
xor
ret
cmp
mov
xchg
cwtl
xlat
dec
and
mov
fwait
or
cmc
lcall
mov
mov
dec
mov
dec
lods
push
jb,pt
mov
cmp
pop
xcrypt-ofb
cmpsl
jmp
insl
xchg
sahf
and
dec
mov
pusha
mov
push
pop
and
sbb
push
imul
inc
cmpl
adc
fs
mov
mov
aaa
push
dec
sbb
jae
xchg
pushf
bswap
ret
or
scas
sub
xor
and
push
jge
inc
test
rol
xor
mov
rcr
add
scas
add
cmpl
in
lds
xchg
mov
rcrl
cmpsl
lds
mov
imul
in
test
lds
add
test
mov
cmp
cld
popa
out
icebp
fnstcw
addl
ror
rclb
ret
jnp
fistps
push
add
push
or
addl
adcb
add
sbb
adc
loop
loop
cmp
jbe
mov
es
add
jns
loopne
or
mov
rolb
pushf
mov
mulb
dec
sbb
movsb
xchg
pushf
pop
fistl
dec
xchg
mov
pushf
cld
dec
aas
push
lds
inc
and
dec
clc
push
movsl
sbbb
fsubp
sub
pop
push
sbb
mov
lods
adc
jne
pop
xchg
test
sub
imulb
andl
or
pop
mov
loop
das
jae
dec
mov
hlt
pushl
scas
fbstp
sti
inc
add
adc
jnp
mov
iret
rcl
call
cmc
xchg
xchg
rcr
pop
loop
andl
mov
mov
add
negl
imul
lds
shlb
add
iret
push
js
jae
subl
xchg
cmp
repz
popa
xchg
out
std
jbe
ficompl
dec
sbb
xor
shrb
popl
and
loop
add
or
mov
push
in
mov
fsubrs
hlt
lds
pop
aas
sbb
mov
ljmp
addb
mov
push
add
into
jns
add
outsb
popa
inc
mov
mov
and
jo
lret
or
lods
or
cld
cltd
cmp
enterw
pop
mov
shlb
imull
jl
movsl
roll
or
fcmovb
sub
das
incl
and
jne
insb
imul
jmp
jo
dec
lods
addb
aam
aam
cwtl
lds
movsl
into
js
outsb
fmull
and
lock
mov
mov
push
dec
aas
ret
mov
or
test
fnstcw
adc
xchg
movb
in
orl
cld
and
fs
dec
add
pop
ds
inc
xchg
stos
sbb
xor
xchg
cmpsl
and
lret
jmp
inc
in
lahf
lahf
add
or
push
cmc
lods
stos
mov
andl
push
add
ss
aaa
lret
imulb
ret
or
or
xchg
fst
pusha
cmc
aaa
jno
or
xchg
pusha
and
cwtl
or
and
pop
mov
and
or
rcrb
les
shlb
sbb
cmp
cwtl
push
sarb
lret
push
or
xlat
adc
lret
sbb
xor
rolb
lock
and
xchg
or
je
mov
nop
mov
imul
seta
lahf
into
lods
or
mov
inc
mov
xchg
jg
nop
shr
cltd
insb
push
in
test
or
inc
adc
pop
sbb
mov
cltd
shr
fs
clc
push
les
xchg
cmc
shl
cmpsl
mov
push
nop
cli
cltd
mov
lods
jl
and
sbb
cli
repnz
xchg
test
jg
stos
push
cltd
xor
cld
dec
iret
sub
scas
stc
sbb
out
cmpb
lea
inc
ja
fsubs
jns
scas
fcomip
rol
add
int3
cmpsb
out
pop
mov
xor
xchg
test
cmp
imul
dec
adc
xor
ljmp
pmulhuw
jns
stos
inc
mov
lds
pushf
dec
xchg
leave
movsb
test
mov
mov
push
mov
push
mov
loope
hlt
pop
lods
imul
popa
stc
enter
dec
divb
adc
cmp
or
mov
mov
lea
lahf
mov
adcb
enter
adcl
inc
jno
push
mov
push
inc
stos
das
into
and
mov
fidivs
movsb
loopne
clc
mov
ljmp
loope
or
in
out
dec
cmp
movsb
jp
pushw
mov
adc
or
imul
out
mov
or
cmp
push
or
inc
jo
adc
jg
add
add
mov
hlt
aas
adc
or
mov
bnd
jbe
into
mov
mov
and
enter
repnz
das
dec
mov
lods
jp
jle
notb
push
cmp
add
cmp
cmc
jbe
jge
pushf
int3
pop
adc
and
dec
rcrl
test
fs
mov
xchg
mov
scas
stc
nop
mov
rclb
pop
in
and
test
aas
sbb
mov
push
sub
test
mov
adc
into
or
push
mov
dec
gs
xor
lahf
inc
les
adc
jbe
adc
frstor
lahf
sub
cmpsl
xchg
fsts
cmp
xchg
adc
shrb
ret
cltd
jmp
scas
xchg
test
pop
push
push
xchg
adcl
xlat
shrl
lret
add
dec
sbb
imul
fisubrl
ljmp
add
and
shrb
jp
into
repz
out
mov
gs
push
push
movsl
or
roll
and
mov
test
dec
nop
rcl
pop
daa
push
nop
loopne
or
into
xchg
and
xchg
adc
adc
mov
pusha
in
test
xchg
pop
imul
mov
mov
movb
lea
adc
divl
sub
sub
test
xchg
test
mov
fnstsw
enter
cs
xchg
xchg
mov
mov
mov
test
mov
xchg
xlat
and
into
and
fildl
push
movsb
inc
mov
mov
or
clc
or
sbb
cltd
xlat
and
mov
jle
dec
cmp
xchg
into
cmpsl
xchg
cmpsb
inc
xchg
sub
test
sub
pop
adc
out
mov
sbbb
dec
test
inc
fimuls
data16
test
insb
int3
adc
push
push
add
cmc
lahf
rcrb
mov
aaa
stos
push
sub
sub
push
mov
xchg
pop
imul
add
and
xor
lds
orl
xchg
xchg
jnp
mov
xchg
inc
pushf
pushf
orl
push
sub
jne
testb
repz
cmp
push
xchg
iret
mov
or
rorl
xchg
lret
movsl
inc
push
push
or
outsl
jb
jecxz
sub
pinsrw
pop
stos
insl
nop
push
sub
or
out
mov
xchg
imul
cmc
push
movl
hlt
sar
jnp
fsubl
out
mov
lret
pop
mull
shll
or
fwait
mov
pop
add
sbb
pop
mov
fld
cli
adc
lret
ficomps
mov
out
adc
xor
xchg
arpl
dec
stos
addr16
or
jae
sbb
cmpsl
xchg
pop
xchg
flds
jg
arpl
lds
int3
divl
mov
in
iret
mov
bound
xlat
mov
lods
mov
data16
ret
add
sarb
dec
lret
sub
mov
lret
fwait
stc
aaa
inc
or
clc
lahf
push
enter
add
cwtl
cmc
pop
xchg
mov
cmp
les
fsubs
imul
mov
mov
stc
jae
push
add
push
movsb
out
fcoml
push
outsl
out
push
scas
mov
stc
inc
das
stc
shr
pop
movb
and
cmp
jmp
lock
mov
loope
inc
insl
xchg
ljmp
aad
scas
pop
xor
dec
inc
mov
add
sti
and
xchg
addl
mov
sbb
sarb
inc
fsub
push
mull
outsl
xchg
sbb
std
inc
arpl
jns
cs
addr16
call
or
stos
les
fcomp
fistps
enter
adc
mov
xchg
in
adc
mov
mov
sub
call
int3
xlat
popa
into
sbb
dec
fcmovnu
fidivs
test
std
mov
ds
mov
mov
push
arpl
andb
xchg
imul
and
loope
pop
or
xor
int3
push
aam
into
xor
cld
fldt
movsl
pop
xor
xchg
lret
add
pop
xlat
fs
add
or
mov
jae
test
ret
jno
test
arpl
into
mov
sub
and
enter
add
sahf
les
imul
lods
xchg
test
xchg
or
hlt
imul
out
adcl
push
and
testb
fwait
movsb
pop
xchg
inc
nop
sub
inc
or
test
dec
push
jae,pt
adc
pop
xrelease
lods
fldenv
jmp
movsl
add
cli
fnstsw
add
rclb
test
pop
divb
addr16
sub
push
lahf
mov
mov
jg
sbb
mov
loopne
mov
lcall
movsb
sub
mov
push
les
aas
xchg
fildll
orl
inc
pop
xchg
adc
push
mov
xchg
es
sarl
fimuls
push
mov
sub
ss
mov
nop
or
mov
mov
pop
out
ret
xor
xchg
xchg
add
test
xor
in
xchg
in
movsb
int3
jns
in
scas
les
mov
jnp
pop
jns
mov
or
imul
mov
push
mov
call
and
rcrl
or
fbld
or
lret
xchg
scas
in
in
arpl
pushf
or
mov
shlb
or
and
rcll
rcrl
mov
mov
in
aam
mov
lea
xchg
fdivs
xor
mov
or
push
testl
mov
movsl
jns
leave
sub
jecxz
rol
out
in
cmc
inc
xlat
mov
sub
lods
rcrb
cmp
test
rol
jnp
aam
and
ret
test
movsl
addr16
orb
pop
lods
push
mov
sub
adc
insl
cli
xchg
ljmp
mulb
mov
lret
mov
scas
mov
fildl
add
fidivs
lret
xor
inc
popa
daa
and
sahf
push
mov
or
jae
lahf
or
jne
add
loopne
mul
mov
lcall
loope
xchg
or
mov
cmp
push
jp
inc
and
jne
mov
mov
or
mov
push
shrl
ljmp
mov
test
outsl
jb
int3
ss
int
cmc
mov
lret
inc
mov
xchg
sub
or
lret
xor
shl
mov
lret
mov
lret
mov
cltd
mov
lods
cwtl
push
fidivrl
cmp
in
fdivrs
pop
inc
xchg
adc
mov
xor
mov
cmpsl
sar
jns
dec
xchg
push
aas
lret
push
dec
fisttpll
inc
add
jge
dec
and
rorb
mov
movsl
dec
mov
aas
in
lahf
jp
ficoms
shl
out
adc
jg
stos
dec
cld
push
lods
das
mov
movsb
or
sub
rclb
xchg
sub
xchg
ret
push
sub
sbb
ret
fnstcw
jg
loope
inc
leave
shrb
jg
inc
sub
cmc
xchg
fisubrs
mov
fnstenv
lods
add
xchg
adc
lret
movsl
add
mov
mov
imul
xor
xchg
cmc
daa
cmp
sbb
in
ds
movsl
pop
cmp
sbb
jae
loopne
rolb
sub
mov
cmp
and
hlt
outsb
xchg
sahf
xor
nop
test
cmp
push
or
mov
mov
rcrb
mov
and
pop
inc
adcl
jno
inc
sub
hlt
test
xchg
std
sub
fnstsw
cmp
enter
test
out
dec
insl
mov
orb
inc
add
xchg
fldl
rcll
rcr
lcall
js
xchg
push
cmpsl
rorb
mov
dec
xchg
push
adc
xchg
loopne
add
ds
lods
mov
add
mov
sbb
stos
fstpt
rcrb
in
pushf
mov
fldl
inc
aaa
jl
test
ffree
and
push
inc
mov
adc
xchg
jge
loope
mov
fwait
pop
out
not
and
or
sahf
int3
sbb
mov
sbb
pop
jnp
sub
adc
movsl
xor
imulb
add
sbb
pop
es
adc
mov
mov
shlb
xchg
sbb
dec
or
int3
mov
mov
test
enter
lods
mov
pusha
adc
push
push
lods
icebp
popf
test
rcrb
jecxz
lods
or
add
xlat
or
arpl
sbb
ret
movsb
sbbb
lcall
sub
jno
stos
add
into
into
add
mov
outsl
mov
stos
repnz
or
outsl
lcall
int
or
in
or
rcll
xlat
jbe
or
jb
push
ss
nop
lea
mov
push
adc
mov
add
mov
sbb
jl
iret
cmc
insb
ror
pop
lcall
sub
jl
inc
push
stos
inc
sbb
mov
push
and
hlt
cmp
mov
mov
or
lret
js
or
and
lea
mov
push
aaa
mov
scas
mov
and
pop
shr
into
mov
xlat
enter
dec
fadd
adc
cmp
mov
cmp
mov
jmp
out
clc
mov
xor
mov
cmc
mov
pop
mov
inc
sub
xchg
stos
popa
mov
add
push
inc
not
push
add
int3
cs
stos
ja
pushf
les
fsubrs
pushf
ror
pop
std
dec
popl
pop
adc
and
rorb
xchg
int3
push
mov
xchg
dec
cli
enter
popl
xor
pop
xor
test
add
ret
xchg
mov
bswap
imul
mov
mov
push
pop
jbe
divb
repnz
lret
int
roll
in
inc
mov
or
cwtl
sbb
mov
into
fwait
mov
fildll
shlb
stos
ficoml
das
mov
insl
xor
scas
inc
pop
adc
xchg
inc
mov
lret
lods
mov
ret
lods
or
out
out
out
or
mov
pop
das
pop
stos
or
dec
jnp
xlat
test
cmp
js
sbb
mov
mov
or
stos
push
xor
xchg
and
cmp
jle
push
cwtl
aad
xchg
fcoms
mov
test
enter
test
in
lcall
adc
enter
xor
pop
fsubl
fstpt
dec
pushf
inc
leave
test
fcmovnu
test
pop
xor
inc
scas
inc
cwtl
sbb
nop
repz
xlat
pop
hlt
js
push
stos
lret
js
mov
imul
enter
jb
and
test
dec
jne
push
ficoml
stos
dec
ja
loop
mov
mov
inc
ljmp
xor
or
jl
enter
fdivs
pop
nop
jne
test
mov
shrl
rorb
mov
push
pop
jmp
pop
daa
pop
sahf
jae
push
popf
ljmp
and
sub
into
sub
js
cwtl
ret
mov
lock
mov
int
sbb
mov
std
xor
xchg
inc
dec
hlt
andl
leave
insb
out
test
rcll
jne
push
xlat
jl
add
push
push
mov
sti
scas
aad
je
les
cwtl
shr
xor
mov
sub
and
xchg
mov
and
xorl
call
daa
push
mov
mov
lods
jmp
sarb
mov
dec
aas
cld
adc
movsl
inc
add
pop
aas
dec
lods
fnstcw
cmp
test
mov
push
adc
adc
scas
rep
inc
adc
and
sahf
shr
nop
imul
cld
ret
sub
movsl
sbb
add
inc
xchg
mov
sub
push
sbb
push
push
xchg
test
loopne
adc
sti
mov
aam
leave
adc
or
lret
scas
mov
mov
mov
nop
or
lret
jbe
gs
adc
mov
mov
pusha
xchg
dec
fidivs
adc
or
nop
test
fldl2e
mov
xchg
cwtl
lods
mov
cmpsb
jg
cmp
xchg
or
jmp
enter
pop
adc
les
or
test
loop
add
cmp
adc
int
mov
repz
mov
pop
test
cs
jno
pop
mov
dec
les
aad
push
jg
add
lods
add
imulb
mov
cld
mov
mov
repnz
push
xchg
xchg
jecxz
inc
mov
mov
fmull
nop
shlb
sarb
xchg
pop
push
repnz
jp
sbb
iret
xchg
dec
inc
fdivrl
out
cmpsl
mov
loopne
inc
shlb
scas
in
adc
xchg
push
mov
sub
xchg
adc
enter
pop
lds
jle
loope
mov
jnp
jecxz
repz
out
push
cmpsl
mov
mov
sbb
mov
or
sbb
stos
shrl
xor
xor
mov
mov
out
mov
ret
std
sbb
jo
mov
scas
adc
in
shlb
mov
rclb
push
push
push
icebp
movsl
fnsave
cmpsb
push
andl
or
adc
or
movsl
lods
rolb
xor
jns
cld
mov
inc
in
scas
push
inc
xchg
ret
loope
mov
call
mov
jmp
xor
pushf
and
test
int3
push
jns
mov
xor
jl
or
pop
and
push
cmp
stc
mov
mov
fs
pop
push
cmp
jp
sbb
mov
rorb
inc
and
inc
mov
fstps
test
mov
addb
in
pop
lds
scas
mov
xchg
cmpsb
hlt
sbb
add
inc
add
ret
test
and
shrb
jns
and
test
in
insl
int
mov
adc
push
mov
jecxz
lods
cld
mov
jg
push
loop
test
in
das
movsl
cmp
pop
sbb
daa
jle
mov
pop
mov
ret
or
ret
jg
fdiv
xchg
mov
movsl
mov
iret
in
cmp
dec
cmpsb
shlb
xor
aad
dec
jmp
cwtl
int
adc
cs
xchg
cmc
cmpsb
movsb
ret
adc
sbb
notl
or
mov
xor
add
rcll
push
mov
enter
addr16
lods
jmp
outsl
test
ljmp
push
cmc
and
les
xchg
sahf
aad
scas
test
imul
movsl
and
mov
inc
fsubrl
in
ljmp
dec
jmp
push
push
jle
add
mov
mov
cmp
jmp
stos
dec
nop
cmp
es
int3
push
pushf
add
movsb
jo
mov
or
and
pushf
dec
nop
leave
xchg
test
and
pop
cwtl
bound
adc
jne
mov
sub
outsb
mov
mov
inc
negb
inc
fnsave
fistpl
insb
sub
or
xor
into
pop
mov
lods
testb
popf
mov
cwtl
popa
add
fdivp
shr
adc
adc
fiaddl
mov
push
and
xor
pop
adc
dec
sbb
ljmp
dec
mov
stos
out
add
ja
xlat
incb
mov
hlt
decl
xchg
xchg
icebp
mov
lsl
cmp
add
mov
push
or
cmp
lods
jmp
mov
adc
test
shlb
xor
ljmp
pop
mov
les
mov
leave
dec
jne
popf
fnstsw
add
jmp
cmp
push
xchg
dec
pop
orb
lds
push
mov
adc
pop
jnp
jl
push
pop
and
ficompl
jbe
mov
or
xchg
pop
mov
prefetch
dec
rolb
negl
gs
add
inc
cli
xor
inc
dec
and
lods
loop
aas
call
mov
add
cmp
cmp
or
inc
jge
lock
mov
mov
test
scas
shll
add
ss
mov
inc
adc
addl
std
mov
cld
lahf
imul
cmc
xchg
leave
add
orl
add
jno
xlat
push
jp
imul
mov
or
int3
stos
imul
test
int3
cmpsl
lds
dec
lcall
je
aam
sub
cs
mov
lahf
jecxz
xchg
enter
in
adc
mov
aad
lea
mov
adc
xor
xchg
jle
cmp
xchg
les
mov
cltd
lret
iret
clc
popa
xchg
push
ss
inc
sti
dec
sub
mov
lea
test
jns
orl
jle
test
mov
adc
inc
mov
pushf
inc
fcoms
sub
movsl
mov
inc
in
fldt
rclb
dec
and
cwtl
add
insb
outsb
imul
insl
repz
xchg
shlb
add
in
xchg
xor
shlb
cmp
movsb
push
xchg
sbb
fistpll
push
fsubrs
push
out
cwtl
inc
push
pop
aam
pop
test
cmpl
ja
out
scas
nop
cmpsl
push
bound
test
lahf
stos
icebp
mov
pop
daa
lods
out
xlat
xchg
out
lret
push
enter
repnz
jecxz
mov
mov
push
jp
mov
cld
les
mov
mov
test
hlt
or
scas
or
or
dec
cmp
xchg
sub
dec
lahf
mov
dec
cmp
xor
mov
mov
stos
add
ljmp
adc
nop
sbb
out
out
push
mov
loop
inc
movb
dec
sbb
xorl
cwtl
xor
rcrb
and
es
hlt
mov
mov
jns
mov
adc
cmp
out
mov
mov
jg
neg
mov
push
jae
pop
sahf
cmc
mov
in
loop
mov
pop
aaa
fwait
shlb
sbb
pop
lcall
in
aas
push
sbb
or
mov
xor
hlt
dec
inc
iret
inc
adc
inc
or
call
repnz
and
jp
mov
pop
repz
inc
mov
sbb
loop
mov
fiaddl
lds
scas
mov
fwait
call
sub
pop
and
mov
inc
cmp
int3
inc
add
loope
mov
pop
jno
add
cld
mov
out
movsb
addr16
test
jnp
inc
add
nop
out
mov
lret
cmpsb
scas
adc
ret
jp
cmp
notb
orb
jb,pt
stos
dec
mov
stos
mov
mov
dec
sbb
test
mov
sarl
mov
test
push
mov
cmp
pushf
add
adc
mov
or
subb
cmp
add
cltd
xorl
movsb
leave
jge
je
push
add
idivb
jp
imul
arpl
incl
ss
xchg
cmp
adc
push
roll
add
popl
or
arpl
sbb
adc
test
xor
push
sbb
mov
ret
mov
mov
enter
or
mov
or
into
cmc
testl
xchg
mov
cwtl
stos
add
push
lcall
jb
shrl
loop
leave
adc
push
fisubrs
jo
test
jl
adc
jge
push
add
test
pop
and
in
push
mov
adc
xor
je
push
xchg
leave
fnstsw
pushf
jno
dec
lods
push
hlt
push
inc
js
and
pusha
mov
inc
sets
or
jg
jecxz
iret
cmpsb
jo
adcb
lcall
jg
bound
xor
test
or
cmp
sarl
add
nop
ljmp
outsb
mov
and
inc
stc
std
jnp
push
imul
or
jo
push
out
jle
sbb
bound
lods
xchg
dec
mov
push
jle
dec
push
mov
pop
int
jne
scas
mov
popw
ficomps
xchg
int3
cmpsl
rcrb
mov
imulb
ss
lea
repz
dec
orl
jno
roll
ret
cli
dec
push
js
imul
cmp
fildl
sub
enter
xchg
aam
pop
push
sbb
incl
or
mov
and
repnz
cmp
inc
xor
lret
movsb
fwait
add
jb
jns
pop
inc
sbb
scas
dec
xchg
lods
push
adc
out
cltd
add
adc
jb
pop
xchg
cltd
mov
jbe
dec
fwait
shl
mov
or
push
dec
cwtl
shrl
bound
mov
cld
pop
jle
je
ret
xchg
cmp
mov
test
and
sbb
xor
mov
mov
jnp
pop
aaa
stos
cmp
or
ljmp
push
or
inc
mov
jmp
loopne
jp
je
mov
mov
fildll
movsb
ljmp
les
xchg
nop
push
cmp
sbb
clc
iret
movsb
hlt
sahf
jb
aam
xchg
pop
jl
imul
mov
inc
sub
adc
xchg
rorl
add
lret
sbb
mov
sti
ret
cld
lods
cmpsb
loope
mov
sub
dec
mulb
leave
mov
js
mov
jb
movsl
mov
imul
cmpl
fmull
jmp
mov
mov
xchg
dec
sub
rorb
dec
cmpsb
hlt
js
fcoml
aad
inc
pop
std
lods
cmp
xchg
or
push
inc
cmpb
sub
xchg
loop
imul
jp
stc
pop
sub
mov
mov
jge
repnz
mov
jno
add
mov
es
jne
xor
push
imul
icebp
pop
insb
and
mov
inc
std
mov
mov
shlb
mov
bound
mov
lret
mov
jl
inc
popf
xorl
in
fcompl
adc
subl
mov
or
mov
out
mov
inc
jns
add
xchg
int3
insl
push
data16
mov
jle
adc
xchg
lcall
bound
pushf
add
mov
out
subl
mov
jge
xchg
inc
mov
cmpsl
aad
rolb
bound
inc
dec
das
inc
or
push
dec
mov
fcomps
lret
inc
jl
adc
rclb
mov
mov
cmc
lea
or
in
aas
out
push
fbld
shl
fistpl
add
stc
push
cmpsl
push
int
xor
lret
mov
mov
jb
shlb
into
xor
scas
lock
add
sbb
adc
dec
push
sbb
fdivl
imull
pushf
cwtl
das
xchg
mov
add
lret
pushf
fisubrs
lods
outsb
mov
xchg
xchg
aaa
xor
mov
stos
pop
repz
mov
mov
sbb
push
adc
inc
js
push
push
push
jo
pop
test
fisttpll
clc
mov
fistl
dec
ja
scas
xchg
or
inc
or
insb
pop
rolb
cld
insb
inc
dec
push
nop
add
or
movsb
ds
xchg
ljmp
scas
mov
inc
lods
popa
test
out
enter
lea
scas
xor
inc
fnstsw
imul
push
scas
cmc
repnz
cmp
cmp
pop
inc
insb
movsl
or
mov
mov
aam
loope
insb
mov
insl
lret
loop
xor
mov
bound
or
pop
icebp
jb
hlt
mov
fisubrl
nop
push
mov
dec
incl
cld
fstps
loop
adc
hlt
adc
jle
dec
fcomps
push
enter
test
nop
movsb
decl
mov
xor
sbb
iret
or
xchg
ret
test
cmpl
sbb
mov
ljmp
or
pop
mov
xchg
jno
dec
or
dec
hlt
push
mov
push
sbb
adc
pop
decb
push
sub
adc
push
jmp
or
nop
adc
cmc
xchg
mov
xor
enter
xchg
or
xchg
inc
push
inc
enter
inc
mov
pop
cwtl
fldenv
fnstsw
xor
or
xor
std
sbb
movsl
aaa
or
cmc
bound
lods
nop
inc
jae
in
mov
ret
mov
sub
aad
mov
mov
mov
or
out
and
push
es
cwtl
cltd
lret
ret
jecxz
out
repz
out
mov
dec
test
js
dec
mov
mov
les
jae
rolb
adc
js
into
xchg
mov
pop
hlt
mov
test
sbb
fiadds
ffreep
jns
mov
or
mov
inc
push
movsl
adc
sti
dec
add
jg
mov
cmp
dec
sub
fdivrl
in
pop
aaa
movsl
imul
stos
fmull
sbb
adc
imul
xor
scas
fdivl
shl
and
fdivrl
push
pop
jae
xor
add
call
and
sub
lods
dec
and
ret
jnp
jg
mov
loopne
xor
jb
cmpsl
fdivs
pushf
push
data16
ficoms
shrb
xchg
jne
adc
mov
call
push
int
aad
mov
mov
mov
notl
daa
sub
cmp
inc
adc
sbb
ret
xchg
sti
pushf
adc
push
faddl
hlt
aaa
xor
lds
sub
sbb
xor
xor
shll
aad
mov
rcrb
pop
xchg
xchg
test
mov
jle
mov
lret
mov
testb
call
gs
xchg
cwtl
test
lods
test
sbb
ret
lret
out
jmp
mov
or
test
xchg
mov
mov
lods
cld
ret
test
jno
mov
xchg
stos
aad
mov
xchg
jb
fisubrl
aad
push
das
fisttps
mov
cmc
xor
and
and
mov
shlb
mov
inc
jmp
mov
adc
mov
jnp
cmp
mov
sahf
sub
or
sub
aam
out
push
cld
outsb
sbbb
lods
std
cmpsb
xchg
mov
or
inc
inc
push
and
jp
mov
int
sbb
xlat
xlat
js
popf
xchg
xchg
je
or
stos
mov
movsl
ljmp
mov
dec
daa
rclb
adcl
aad
nop
xchg
mov
mov
xchg
push
pusha
and
movsl
push
lcall
xchg
jg
jns
pushf
test
pop
ja,pt
adc
cwtl
cmpsb
pushf
cld
pop
loop
rcr
mov
test
sbb
and
mov
rcll
scas
outsl
xchg
hlt
pop
imul
xlat
leave
adc
add
mov
cmp
test
pop
loop
mov
pop
jmp
addb
mov
test
or
enter
cmp
imul
lds
adc
dec
adc
out
mov
or
add
push
imul
push
mov
xchg
xchg
push
fiadds
gs
out
push
adc
adc
cli
in
hlt
sti
rcl
ds
adc
lret
int
std
jo
lds
js
xor
add
cmp
in
lahf
xchg
push
hlt
inc
jb
divb
mov
add
cmp
jns
xchg
rcl
mov
mov
lret
hlt
loop
jle
cmp
or
inc
push
xchg
movsl
loop
pop
xchg
into
jno
sub
jecxz
lods
push
mov
mov
xor
clc
or
outsb
xchg
jmp
inc
insl
adcl
dec
stc
ja
gs
pop
xchg
je
outsb
cmp
mov
ljmp
repz
xchg
daa
sub
into
dec
push
inc
push
int3
sahf
ficomps
inc
das
xchg
or
jge
xchg
imul
sahf
or
xchg
into
lcall
jb
xlat
xchg
mov
hlt
xlat
and
add
andl
xor
fistpl
inc
ds
add
loopne
cld
xchg
imul
scas
lods
cmpsl
mov
popa
mov
mov
sub
xchg
pushf
ret
push
or
stos
ljmp
daa
lods
adc
cmpsb
mov
cltd
fadd
scas
dec
push
ja
movsl
fists
ret
hlt
test
movsb
dec
mov
imul
add
cwtl
hlt
mov
mov
sub
imul
cli
pop
popa
jo
inc
int3
pop
js
cwtl
xchg
iret
mov
and
mov
pop
sub
push
mov
adc
and
xchg
or
sarl
hlt
int
loop
cmpsb
pushf
lock
adc
enter
add
pushf
mov
mov
enter
jge
push
add
jp
cmpsl
xchg
or
jg
cmp
and
or
addr16
adc
sub
cmove
mov
imul
pushf
cmp
adc
mov
or
inc
cmp
cltd
frstor
xchg
mov
dec
int3
cmc
push
in
and
cmp
mov
aaa
insb
or
fs
cmp
rcl
xlat
nop
push
or
jecxz
adcl
imul
das
mov
inc
lds
lret
decb
and
orl
sub
fildl
pop
xlat
xor
push
test
mov
mov
cmp
aad
adc
sarb
or
push
stos
xor
push
add
xchg
loop
inc
dec
mov
adc
xor
imul
ret
mov
dec
jl
push
mov
popf
xchg
xchg
add
aas
pop
dec
cmpsb
jbe
rorl
mov
gs
mov
dec
push
xchg
push
xor
or
pop
push
xchg
pusha
aas
ss
pushf
mov
stos
aam
jl
leave
xchg
inc
mov
or
js
xchg
lea
mov
mov
insb
dec
add
inc
sarl
mov
cld
push
std
cmpsb
inc
mov
xchg
test
repz
cwtl
mov
repz
mov
jl
pop
jge
lods
add
xchg
pop
inc
cmc
xchg
push
pop
icebp
lock
and
sub
lods
push
daa
adc
pushf
andb
orb
inc
ja
add
shl
jl
mov
rcrl
adc
loope
jmp
outsl
imul
add
fdivrs
cli
iret
fistpll
xchg
ud2
jmp
mov
sbb
cwtl
test
or
or
pushf
decb
ds
inc
xchg
in
aaa
xchg
cld
cmpsl
adc
jne
mov
hlt
lods
sbb
push
jg
jge
cmp
or
clc
push
mov
bound
lock
int3
ljmp
mov
fnsave
push
mov
mov
xor
jo
in
pop
xor
adc
leave
popa
cwtl
jmp
jno
jno
lea
pop
xchg
mov
and
mov
notl
inc
push
dec
shlb
add
cmpsb
loop
aam
hlt
mov
fimull
mov
add
adc
pop
xchg
add
pushf
cmp
mov
jl
cmp
rcrb
dec
xlat
pop
shrb
mov
nop
add
jg
adc
xchg
les
dec
fisubs
xor
pop
adc
loopne
xchg
cmp
fwait
sarb
adc
jb
inc
mov
les
add
pop
push
xchg
xchg
xor
inc
cwtl
or
ret
mov
xlat
add
in
movsl
push
mov
in
mov
test
mov
push
fwait
mulb
dec
mov
test
imul
pop
jnp
mov
mov
dec
cmp
ficoml
aaa
adc
cs
mov
incb
lods
stos
jge
int
fsubl
loopne
in
jl
mov
inc
jp
adc
xlat
or
adc
rcl
and
lock
daa
xor
cmp
sub
ja
xchg
cmp
adc
call
xor
int3
insb
cltd
test
and
loopne
or
inc
andl
shrb
lods
xchg
mov
dec
es
mov
push
push
mov
loop
fisubs
dec
cmp
pop
popa
mov
xor
add
inc
test
lds
add
or
or
mov
iret
dec
lret
dec
fstpl
xor
mov
mov
pop
rorb
imul
js
push
dec
ret
xchg
pop
xchg
es
jb
test
or
xchg
xchg
mov
xor
push
push
sub
xchg
popf
xchg
dec
xor
add
pusha
testl
sbb
nop
xchg
jns
mov
mov
add
sub
aas
test
cmpsl
out
push
xchg
mov
fs
js
push
mov
lea
xor
xlat
data16
ret
pop
xchg
loopne
test
lret
inc
adc
inc
or
test
lret
rclb
mov
or
jg
fcmovu
js
popf
shl
shl
lods
rcl
es
pop
movsl
adc
loop
xor
out
movsb
xchg
jp
mov
and
or
andl
mov
popf
stos
sbb
ror
dec
test
push
sbb
cs
inc
lret
jae
mov
push
out
aam
repz
sbb
loopne
stos
jb
jge
in
nop
int
push
jno
imul
xlat
lea
ret
cmp
sbb
cmpsb
mov
xchg
addl
loopne
lret
fsubrl
xchg
sbb
aad
frstor
xchg
mov
or
push
jnp
popf
sbb
into
ss
mov
stos
lret
adc
jne
fbstp
jmp
or
pushf
push
cmpsl
movb
jl
add
jecxz
test
call
xchg
push
jmp
es
orb
ret
or
cmpsb
lods
mov
popa
dec
dec
xchg
push
pop
fmul
jle
push
roll
xor
fcoml
jecxz
insl
ja
pop
cld
shrb
mov
shll
jg
push
xor
lds
xchg
outsb
sub
dec
xchg
inc
leave
pavgb
adc
add
xchg
movsb
sub
loop
pop
in
and
mov
mov
add
inc
mov
stos
outsl
clc
rorl
sub
lea
or
bnd
stos
fistps
fwait
xchg
xor
pop
loopne
push
test
enter
jbe
call
or
and
xor
xor
sbb
xchg
movl
cmpl
fiaddl
sub
mov
aad
and
add
mov
movsb
in
push
sub
es
std
jecxz
mov
test
jle
or
pusha
mov
stos
ja
or
sub
xchg
rorl
lods
cltd
mov
lcall
call
mov
std
scas
push
loope
lret
or
sarl
mov
add
popa
cmp
fisubs
jg
shll
fdivrl
mov
imul
xor
mov
insb
ss
test
jg
neg
into
fisttps
lock
scas
icebp
and
enter
lret
mov
sahf
movsb
mov
notl
adc
pop
adc
movsl
fstps
or
or
lods
jecxz
xchg
mov
adc
push
adc
testl
push
xchg
add
testb
push
rcrb
and
addr16
dec
stos
or
xchg
mov
aam
in
xchg
test
xchg
push
add
popf
hlt
xor
pop
sub
lahf
mov
neg
cltd
ficoml
mov
in
std
and
lret
clc
push
repnz
cmc
inc
inc
push
or
mov
mov
ret
jg
adc
js
dec
roll
fldenv
sbb
and
fsubrp
add
imul
add
inc
out
or
inc
sbb
dec
mov
jne
push
test
cmp
aam
hlt
stos
cmc
imul
mov
dec
fwait
test
xchg
pop
lret
mov
std
or
inc
enter
gs
loop
push
xchg
fwait
mov
dec
inc
stos
and
fildl
hlt
push
jo
adc
test
mov
add
xchg
imul
mov
pop
aad
ret
out
inc
cmc
xchg
mov
mov
in
scas
xor
sbb
cmp
cmpl
sub
scas
mov
mov
sahf
cmp
in
cmpsl
mull
xchg
mov
and
cld
addr16
adc
or
xor
outsb
clc
pop
or
xchg
cs
adcb
pop
sbb
fisubrs
aam
adc
cwtl
outsb
jge
mov
xchg
mov
mov
nop
xchg
sarb
and
mov
stos
or
aas
pusha
das
sbbl
sub
add
mov
pop
inc
jnp
pushf
in
test
adc
lea
inc
imul
or
cmpsb
lods
nop
cwtl
imul
imul
dec
push
jg
xor
push
xchg
xor
hlt
insl
xchg
add
or
mov
sbb
mov
jnp
jns
rol
and
mov
xchg
or
or
inc
mov
dec
ret
jl
lret
test
lret
in
or
jmp
jl
ret
and
lods
mov
into
cmpsl
jne
jno
jo
push
jnp
dec
pop
fistpll
mov
and
orl
push
cmp
xor
jb
fnstcw
pop
inc
xchg
xchg
or
jge
mov
cmp
js
call
stos
pop
mov
ftst
mov
xor
into
stos
xchg
push
jae
mov
cmc
sbb
push
sbb
enter
jp
jg
mov
test
mov
lock
cs
aam
enter
push
rcll
call
mov
xor
push
movsl
mov
cmp
lds
adc
into
addb
mov
cltd
rorl
pusha
sub
cmc
jmp
pop
mov
in
jg
or
inc
push
mov
test
sub
cmc
sbb
pop
test
les
cmp
cmpb
mov
cwtl
push
nop
in
dec
hlt
fidivl
ljmp
push
std
in
out
leave
mov
dec
mov
shlb
jo
enter
jno
cmp
mov
jo
les
mov
mov
lahf
sarb
add
cltd
jg
mov
das
xlat
dec
xor
adc
mov
xchg
movsb
cwtl
mov
stos
xchg
sub
push
dec
adc
inc
adc
jno
adc
push
mov
sbb
lods
jp
mov
pop
stos
fdivrl
shlb
sbb
xchg
movsl
mov
xchg
adc
mov
lods
xor
enter
inc
addl
mov
inc
jg
xor
or
into
xchg
nop
xchg
pop
fsubrs
and
push
into
test
mov
add
aad
push
loope
mov
rcr
adc
out
mov
movsb
sub
loop,pt
adc
push
pop
add
mov
xchg
or
xor
outsb
icebp
jb
mov
mov
nop
bound
fbld
sub
rcrb
mov
adc
and
adc
inc
adc
inc
pop
fwait
fs
mov
leave
mov
lret
js
sub
mov
xchg
shrl
fdivrs
push
xor
stos
cld
sub
mov
ret
rcr
or
int3
popf
lods
pop
js
jae
add
les
sbb
imul
loope
jno
jle
insl
mov
rcrb
or
pop
cmc
lret
xchg
adcl
fcmovbe
lods
and
xchg
mov
cmpl
cmp
aas
mov
xchg
movsl
sti
mov
pop
cmpsl
in
ds
add
cwtl
sbb
xor
or
je
pushf
stos
fs
out
mov
mov
mov
rclb
enter
test
xchg
fstpl
imul
mov
out
shlb
pushf
add
or
push
mov
add
xor
mov
mov
addl
icebp
xchg
xchg
or
lret
adc
shll
sbb
push
jno
xor
cwtl
xor
jle
addb
or
mov
ss
xchg
in
mov
test
adc
popf
dec
jge
mov
and
mov
shlb
test
xchg
in
stos
inc
test
stos
hlt
sbb
xchg
add
and
cli
add
jnp
fwait
mov
mov
or
inc
cli
mov
jge
shl
sbb
andb
push
sti
cmp
pop
jne
cmpsb
in
movsb
add
in
cmpsb
cmp
pop
jnp
pusha
leave
notl
stc
sahf
and
push
or
cwtl
mulb
outsb
icebp
outsl
sbb
mov
notb
mov
add
enter
popf
xorl
lahf
mov
or
fdiv
int3
lods
cmpsl
adc
pop
sbbl
push
and
pop
and
fwait
pop
adc
or
cltd
xchg
sbb
adc
stos
push
mov
inc
outsl
lret
mov
lods
clc
rcll
ret
rcl
bts
jge
jle
ret
mov
dec
dec
cld
pop
mov
mov
xchg
jmp
aad
jp
call
mov
adc
movsl
imul
dec
mov
mov
sar
jle
or
inc
xchg
pop
xorl
mov
sub
push
adc
cltd
ret
add
adcl
daa
cmpsl
jl
and
dec
and
test
mov
xchg
pushf
inc
sbb
lods
movups
jo
xchg
and
jae
xchg
xchg
filds
add
aas
mov
jp
cmp
rclb
loop
xchg
xchg
cld
outsb
xchg
iret
push
jnp
stos
loopne
cltd
jl
cld
pop
sbb
adcl
jnp
std
insb
xchg
es
das
mov
shll
shr
mov
mov
xchg
ds
or
pop
jno
movsl
pop
lret
pop
imul
sub
push
pusha
scas
arpl
mov
int3
les
test
xor
xlat
call
lods
rcll
cmp
xchg
test
loop
movsl
jo
out
inc
inc
je
je
outsl
rolw
lock
or
ja
ret
fistpl
push
push
sub
movnti
cld
pop
add
xor
fsubs
pop
aam
mov
jae,pt
das
jb
and
xor
push
shr
in
mov
sub
bound
jnp
rolb
mov
push
bound
popf
xor
mov
or
in
jae
xchg
push
addr16
lret
adc
jnp
jecxz
or
push
shlb
cld
sarb
aad
or
mov
test
add
push
xor
js
push
jnp
loope
jle
mov
pop
out
add
movsb
sub
shlb
add
push
mov
mov
ds
mov
movsl
jbe
out
add
lock
push
icebp
clc
es
fidivrl
mov
popf
xchg
jne
adc
inc
or
xor
push
testb
cmpsl
adcl
pop
out
nop
ret
add
dec
or
add
cmc
dec
dec
sub
xor
pop
les
shrb
jbe
enter
jbe
mov
mov
lock
lret
sbb
mov
rcl
adc
stc
ljmp
mul
lods
sbb
xchg
pop
jmp
pushf
add
cmp
movsb
dec
mov
psllw
sbb
scas
sub
push
lods
cs
pop
jle
or
int
lds
dec
sub
xchg
xchg
test
push
daa
arpl
leave
cmc
add
adc
xorl
sahf
sbb
sbb
mov
cltd
popa
stos
dec
sti
and
push
in
xchg
repnz
and
sbb
arpl
div
xor
inc
adc
dec
rcl
lret
rcl
fldt
dec
rclb
test
dec
lock
rcl
xchg
lcall
pop
lfs
push
push
or
inc
inc
fists
mov
repz
mov
and
test
or
xchg
pop
xor
movsb
loop
mov
aas
out
mov
sub
lds
cmc
ret
xor
adc
inc
xorl
xchg
nop
push
inc
fwait
inc
cmp
mov
add
push
mov
sti
mov
jp
jae
mov
add
cmc
cmp
out
pushf
jns
mov
fdivl
les
jp
movsb
rorl
hlt
mov
push
jle
add
mov
adc
cltd
mov
andb
scas
jle
mov
jmp
inc
mov
addl
push
stos
push
bound
das
push
pop
mov
test
xchg
inc
mov
jno
into
ja
or
pop
mov
movsb
dec
imul
fldcw
sub
imul
inc
jnp,pt
push
cmp
dec
dec
dec
in
stc
dec
scas
xor
mov
jb
loop
sbb
loopne
dec
std
mov
cmp
xor
push
in
nop
xchg
mov
mov
cmp
rep
dec
jle
lods
lcall
mov
mov
insb
xchg
cmpb
cmc
jb
cltd
inc
or
and
aaa
dec
push
stos
sbb
inc
aaa
mov
pop
inc
int3
dec
jle
in
cmp
xor
or
stos
mov
outsl
cmp
mov
xchg
dec
cld
push
jnp
cmp
enter
adcb
imul
push
add
mov
pop
mov
inc
fldt
enter
enter
xchg
mov
scas
cmp
shl
adc
outsl
aad
fucomip
and
lds
leave
adc
mov
and
mov
jnp
pop
repz
jge
xchg
mov
mov
loop
jecxz
jl
test
cmc
lods
sbb
mov
test
or
and
into
ret
or
int
test
int
imul
xchg
pop
pusha
sub
and
stc
fwait
mov
cmp
test
scas
ss
lds
int3
movsl
or
scas
mov
into
cmp
pop
scas
aam
jmp
add
rcr
or
ss
in
dec
pushf
mov
mov
out
mov
and
bound
in
sbb
enter
add
sbb
hlt
mov
fldt
stc
cmp
mov
hlt
sbb
outsb
mov
mov
add
cmp
pop
jecxz
jge
xchg
or
and
nop
decl
lock
scas
leave
xor
gs
mov
mov
mov
test
mov
pop
les
pusha
cld
sbb
jbe
dec
repnz
pop
adc
push
sbb
aam
push
hlt
adc
clc
aas
movsb
aam
dec
mov
pop
arpl
mov
mov
popf
mov
mov
jge
ret
test
jmp
mov
test
aam
rcl
test
add
mov
lret
fadds
repz
in
cmpsb
inc
js
sub
or
dec
add
jg
or
leave
mov
int
sbb
enter
mov
mov
arpl
mov
xor
clc
add
stos
outsb
mov
sbb
mov
lock
fdivs
stos
jb
add
sti
loopne
jp
or
mov
dec
mov
mov
or
popa
mov
push
repz
jns
mov
dec
mov
dec
push
xor
fwait
mov
inc
mov
xchg
dec
sbbl
mov
test
lods
jp
dec
ss
call
inc
insl
dec
mov
push
movsb
lret
xorl
push
mov
mov
push
enter
add
xor
mov
push
mov
dec
jle
pop
cmp
xchg
mov
fdivrl
cltd
xchg
or
jge
popf
xchg
fadds
in
sbb
sbb
push
mov
mov
fstpt
jne
sbb
xchg
or
rcll
adc
sbb
std
aas
lock
movb
xchg
xchg
pop
xor
xchg
sub
lret
pop
frstor
imul
push
add
mov
pop
xchg
or
cmc
sbb
repz
shll
shrb
cwtl
or
lock
call
adc
push
sti
sbb
xchg
cld
insl
ja
add
or
mov
and
adc
xchg
ja
shlb
dec
pop
addb
and
jbe
popl
mov
mov
jge
lret
shrb
add
cwtl
ja
pop
sub
inc
lods
imul
sub
lods
or
dec
bound
out
and
and
mov
movsb
push
push
test
cld
movsl
or
call
faddp
push
in
mov
mov
adc
pop
cmp
cmpsb
out
push
rclb
add
dec
lret
fwait
jle
adc
xchg
sti
add
daa
leave
dec
aas
xchg
mov
xor
pop
add
movsl
test
inc
adc
and
sarl
fidivrl
xchg
js
push
or
mov
inc
divl
pop
sub
fistps
sahf
addb
mov
ja
jns
add
inc
add
mov
adc
std
scas
mov
ret
stos
out
movsl
stos
push
cld
int3
jns
or
sbb
pinsrw
pop
dec
push
cmp
por
xchg
mov
mov
rorl
mov
pop
inc
mov
test
or
mov
dec
ljmp
test
cli
fxch
lcall
out
cld
mov
push
loop
and
data16
adc
mov
mov
mov
dec
xchg
cwtl
dec
pop
lea
cmp
shrb
outsb
lock
jno
pusha
test
jae
andl
adc
mov
call
insl
je
sbb
scas
push
repnz
test
ret
lods
movsb
icebp
pop
mov
mov
lods
sbb
xchg
loop
jbe
adc
jp
lret
jmp
in
lret
jno
push
or
hlt
insb
lds
or
cmc
jae
movsb
gs
cmpsb
fistps
popa
lods
mov
out
add
and
push
pushf
stc
hlt
and
data16
std
xchg
ljmp
ja
and
push
pop
nop
adc
pushf
out
mov
adc
sti
addl
adc
inc
push
pop
jno
dec
ljmp
lds
jno
neg
mov
xchg
pushf
xchg
jmp
and
cmpsl
xchg
jl
pop
test
lcall
aad
loope
mov
push
mov
cmp
or
adc
inc
decb
js
int3
push
add
add
mov
out
cltd
out
mov
xchg
movsl
addl
pop
dec
dec
sarb
imul
std
or
xchg
mov
pop
and
pop
test
xlat
push
rorl
sbb
aas
mov
inc
adcb
loopne
out
adc
movsl
inc
cmc
add
cmpsl
aad
mov
scas
push
cmp
or
pusha
pop
xchg
xchg
mov
fnstcw
xchg
shll
cmp
fistl
loopne
rclb
sbb
cwtl
popf
adc
push
and
mov
push
sbb
inc
lods
js
add
mov
lea
rcrb
mov
in
cmp
jg
in
mov
jl
xchg
add
inc
pop
jecxz
stos
dec
mov
fldcw
xor
mov
data16
lret
enter
test
sarl
and
lret
xchg
jmp
adc
add
insl
and
jne
or
pop
adcl
hlt
mov
xchg
andl
btc
scas
xor
pushf
sub
mov
cwtl
stos
and
pushf
cmp
fdivrl
adc
push
push
xor
add
fidivrs
ja
lods
mov
push
jle
dec
js
ret
imul
int3
xor
into
xchg
and
adc
xchg
out
dec
mov
orb
xchg
test
pushf
cld
jnp
xchg
sbbl
jl
sub
inc
rcrl
leave
xlat
in
fsubs
mov
ljmp
push
pushf
push
nop
or
enter
sarb
pop
sbb
xor
insl
xorl
push
mov
cmp
leave
cli
daa
adc
subl
push
into
sub
and
jb
or
jp
mov
rcrb
clc
shlb
mul
aam
ret
jl
lds
xor
sub
movsl
out
xchg
jae
push
push
inc
lea
jmp
xchg
mov
imulb
stos
test
jge
or
inc
test
loop
pop
jnp
test
pop
test
jnp
mov
mov
adc
testl
shll
je
and
fmuls
xchg
pop
sti
aas
add
shlb
stc
jle
adc
lret
fsubs
mov
jne
xchg
sub
pusha
fnstcw
adc
push
bound
mov
mov
iret
mov
pop
cmp
adc
mov
sahf
dec
loopne
mov
pushf
ret
movsb
add
addb
or
jo
mov
jp
push
imul
jnp
cmp
out
mov
jbe
cwtl
push
pop
sub
jae
or
imul
xchg
pusha
aad
das
mov
enter
loopne
das
mov
add
jmp
xchg
mov
les
add
xor
sbb
or
push
das
inc
xchg
pop
jmp
shrl
mov
adc
nop
cmp
cwtl
test
sub
or
loop
nop
cmc
adc
rorl
inc
data16
notb
or
inc
pop
mov
xchg
jge
pop
into
fcoms
xlat
mov
cmc
lea
mov
mov
mov
es
jle
lret
addr16
and
cmpsl
cmp
mov
cwtl
scas
mov
xchg
push
jg
pop
add
or
icebp
jg
cmpsl
inc
out
pop
pop
xor
xchg
mov
lret
sbb
or
mov
cmp
xchg
add
pop
adc
lods
lret
loope
int
jo
aad
or
jb
mov
and
scas
add
xchg
or
test
mov
lret
mov
nop
test
jae
xchg
jbe
and
ror
dec
int
push
inc
dec
sbb
icebp
into
jg
lea
cmc
xchg
rcll
lahf
pusha
adc
ss
adc
and
xchg
enter
inc
stos
xor
mov
inc
loopne
jle
outsb
or
orl
repnz
repz
cmp
or
cmpsb
sbb
xor
aad
bound
push
sub
dec
clc
outsl
mov
data16
cmc
aas
icebp
adc
dec
push
dec
mov
pop
popa
testb
out
sub
cmp
lods
hlt
f2xm1
fs
leave
fistps
cli
mov
int3
ljmp
out
aam
fcomp
out
lret
lock
sbb
lock
xchg
adc
mov
pop
mov
gs
cmpsl
test
jp
ds
es
add
xor
lahf
mov
pushf
mov
dec
decb
nop
out
xor
dec
adcb
and
sbb
std
xor
insb
lahf
out
ds
scas
int
test
incb
rorl
add
scas
and
sub
rorl
pop
add
mov
push
in
xchg
adc
xlat
ss
lods
sarb
mov
mov
imul
aas
jmp
pop
or
and
or
movsb
push
jne
inc
mov
dec
aam
xchg
jl
xor
xchg
pop
sti
iret
ja
push
dec
jne
fcmovnbe
or
mov
rcll
ss
stos
and
lods
mov
and
dec
in
out
rcl
adc
jb
pop
not
jmp
xor
cltd
test
mov
int3
mov
sahf
jno
xchg
cwtl
jne
cld
sub
or
xchg
orl
bound
sarb
cmc
inc
stos
cmp
outsl
int
arpl
cmc
pop
add
fistpll
inc
stos
nop
std
push
xor
xchg
aas
add
scas
stc
lock
out
mov
imul
stc
pop
popa
sbbb
jne
fdivl
mov
mov
ret
xchg
mov
imul
cmpsl
stos
adc
dec
sarb
dec
nop
xor
push
dec
scas
push
cmp
in
mov
mov
push
push
cmpsl
and
ja
mov
shlb
dec
aaa
mov
mov
mov
aas
dec
pushf
std
add
jae
jp
hlt
add
movsl
jno
enter
fisttps
in
add
and
out
decl
inc
shl
out
add
or
cmpsb
cmpsb
mov
ds
jl
or
mov
jle
cwtl
mov
mov
nop
pushf
aaa
les
cmp
mov
xchg
addl
push
data16
cmc
pop
aam
imul
rorb
add
cmc
hlt
shrl
dec
ret
sbb
pushf
xor
ljmp
movsb
cmp
mov
leave
lock
imul
xchg
lock
xor
loop
push
fiadds
stos
inc
xlat
push
sarb
int3
push
enter
mov
cli
cmp
insl
and
inc
popa
pushf
xchg
add
adc
fimull
mov
mov
fs
bound
sbb
mov
jp
xlat
xor
mov
rclb
sbb
leave
mov
ret
leave
lret
or
cmpsb
cmc
and
call
stos
lods
das
push
mov
outsl
ret
mov
mov
mov
mov
add
mov
lock
jnp
and
push
adc
mov
or
mov
xorl
or
sub
sbb
or
jecxz
jbe
inc
scas
in
cltd
or
aaa
sti
push
aam
scas
outsb
nop
pop
in
aas
mov
mov
xor
dec
jp
mov
das
xchg
int
inc
rorb
cmpsl
cwtl
or
lock
subb
in
pushf
outsl
dec
shrl
sbb
mov
mov
cmp
sbb
add
out
jge
sti
add
xchg
cld
xor
and
mov
inc
orl
scas
mov
stos
push
mov
inc
aas
aad
adcb
mov
xchg
sbb
enter
outsl
add
mov
sahf
scas
xlat
pop
cmp
cwtl
iret
xchg
sbb
stos
test
rorl
or
into
sub
ja
ret
test
jle
or
sub
rcl
jg
icebp
adc
mov
xchg
inc
xchg
test
push
or
adc
cmp
scas
nop
fldt
jo
insb
mov
xchg
cmp
or
rcl
jbe
and
fisubl
ror
mov
adc
out
repz
mov
mov
adc
mov
test
jle
inc
scas
xchg
pop
loopne
rorl
loopne
cmp
pop
ror
shld
cld
sub
loopne
mov
mov
aas
cmp
or
xchg
inc
dec
pusha
jno,pn
pop
stos
mov
outsb
cld
es
sub
ret
or
mov
rolb
subl
xor
xchg
arpl
lods
inc
shrd
in
sub
stos
rcrb
nop
test
cwtl
mov
inc
out
loop
int3
jecxz
mov
cmpsb
stos
cmp
lret
int3
cwtl
dec
cmp
inc
faddl
sub
pushf
mov
mov
test
sbb
xor
lods
adc
or
cmp
shrb
shlb
xchg
push
mov
fists
lcall
insb
fidivrl
pop
rcrl
pop
std
pushf
out
xchg
scas
mov
pop
sbb
sbb
inc
nop
add
jbe
mov
adc
test
std
xchg
inc
mov
jg
in
nop
mov
inc
inc
ret
sub
mov
addl
push
jg
mov
pop
or
js
mov
test
jg
sub
sub
roll
aad
dec
or
nop
xchg
int3
lret
add
mov
fcom
jecxz
stos
sub
mov
mov
jnp
adcl
add
pop
push
fwait
pop
cwtl
fbstp
mov
dec
rolb
sbb
mov
or
sub
adc
sbb
mov
test
inc
inc
mov
xchg
xchg
jmp
test
add
stos
and
inc
and
int
jmp
mov
test
in
movsb
ljmp
jns
cmpsb
mov
sarl
popa
inc
add
fadd
daa
pop
mov
in
sbb
fstpl
xchg
mov
mov
add
mov
shrl
xchg
or
adc
test
mov
stos
or
addb
xchg
xchg
mov
test
push
hlt
loopne
xor
pusha
and
xchg
pop
pop
pop
cmp
arpl
call
or
sahf
into
cli
rclb
dec
nop
or
pusha
xchg
xchg
scas
adc
or
or
xor
add
push
cmp
fcompl
fwait
rcll
hlt
adc
adc
fcmove
and
sbb
mov
fs
sbb
adc
adc
roll
mov
push
and
mov
or
mov
dec
insb
frstor
out
iret
aad
scas
sbb
sub
movsb
or
roll
pop
arpl
xchg
or
insl
xchg
mov
or
js
add
lods
bound
shrb
fcomps
gs
lock
inc
enter
nop
enter
aad
movsl
in
mov
fistpll
inc
push
in
jle
mov
xor
pushl
dec
mov
mov
nop
jge
outsb
mov
insb
mov
loopne
or
mov
psrlq
shlb
xor
loope
jb
loopne
sbb
mov
adc
and
nop
cli
lock
fwait
rolb
lods
enter
enter
std
adc
mov
xor
mov
int3
aam
imul
pushf
mov
int
or
rolb
aam
xchg
lret
pusha
insl
jle
sbb
adcb
testb
icebp
rcl
shlb
out
cwtl
out
xchg
sbb
add
cmc
mov
jae
mov
xchg
mov
push
mov
movsb
dec
xchg
ja
in
mov
mov
lods
aad
test
leave
jb
mov
pushf
lds
movsl
stc
pop
xchg
jle
xor
fnsave
ret
mov
xchg
ja
push
aad
pop
in
or
push
pop
xchg
test
js
xchg
jne
jmp
pop
fmul
push
mov
ja
mov
movsb
pop
pop
xchg
xchg
and
xchg
push
fdiv
pushl
xchg
mov
dec
xchg
xor
int3
pop
mov
xor
dec
and
cmp
leave
pop
push
test
mov
sbb
mov
add
lods
lcall
inc
cmp
jns
ljmp
stos
stos
stos
jo
in
lahf
nop
or
xor
add
xor
iret
jns
mov
xchg
addr16
aad
rclb
adc
ds
adc
stc
mov
sub
cltd
rcrl
test
jmp
dec
in
mov
nop
jb
jle
cmp
push
adc
xor
jb
shl
loope
mov
ljmp
orl
scas
xchg
mov
dec
outsl
mov
ds
cmc
jns
mov
xchg
sysret
scas
push
push
popa
inc
jns
test
pop
lret
in
cltd
cwtl
jns
fcoms
xchg
mov
adc
lea
lods
cmc
sbb
lcall
rorl
mov
pop
dec
inc
shll
aam
pop
mov
xchg
lds
jb
arpl
mov
iret
xor
xchg
jg
or
xchg
lret
fcmovne
mov
loop
or
lcall
out
sub
test
push
test
mov
loop
jnp
xchg
insb
outsb
push
fadds
lods
in
ret
cmp
ret
jl
in
mov
out
sarl
stos
ret
popa
fwait
mov
stos
movsl
stos
shrb
sti
sti
jge
scas
xchg
shrl
xchg
scas
sbb
int3
movsl
sbb
fimull
jo
add
std
adc
xor
mov
xchg
ss
add
sbb
push
mov
in
xchg
xchg
xchg
mov
lock
jns
repnz
mov
negb
clc
sahf
pop
mov
cltd
shlb
pop
adc
mov
push
ret
ret
inc
imul
xor
repz
add
xchg
jg
adc
mov
push
bound
cwtl
sbb
mov
pop
inc
mov
push
ret
popa
mov
pop
jns
lret
push
test
imul
pop
mov
arpl
loope
aad
jne
mov
mov
js
push
jo
loop
shll
jnp
loopne
or
or
cmpsl
pop
ret
xchg
push
fbld
xchg
cmp
stos
and
mov
cmp
imul
pop
xchg
lods
int
subl
std
shl
push
fistps
sar
in
lods
or
fmul
mov
inc
push
je
cmp
jae
sbb
xchg
fwait
cwtl
fsin
rcl
add
fsub
pop
fnstenv
push
adc
or
mov
dec
sub
push
les
in
cmp
pop
in
js
dec
xor
popa
cmp
mov
mov
es
lods
add
addr16
mov
cmpsl
adc
lcall
scas
mov
push
and
hlt
mov
test
aad
mov
fidivl
lret
mov
inc
repz
bound
aam
popa
shlb
fs
push
sub
lret
push
mov
popa
leave
mov
or
xchg
repz
test
xchg
inc
mov
sarb
mov
push
daa
insb
dec
mov
xchg
push
xchg
das
faddl
int3
cs
fadds
repnz
aam
jo
inc
adc
mov
stos
ror
addr16
ss
roll
and
mov
and
and
cltd
sub
shll
in
xor
cmp
jge
fdiv
out
lods
dec
pop
loopne
stos
int3
cmp
xchg
push
or
jnp
mov
popl
divl
frstor
adc
xor
mov
fwait
mull
mov
lock
mov
mov
pop
cmc
lcall
filds
dec
xchg
sbb
rcl
sbb
in
jl
mov
pushf
leave
movsl
sahf
xchg
or
test
iret
rorb
xchg
stos
mov
adcb
or
xchg
dec
or
xorl
push
loopne
inc
or
xor
dec
divb
pop
and
mov
push
loopne
dec
ret
test
mov
push
push
jecxz
dec
dec
xor
push
je
fwait
insl
pop
push
dec
pushf
pop
and
test
push
pop
xchg
jne
dec
adcl
lds
imul
xor
adc
outsb
pop
cwtl
push
mov
xchg
xchg
lods
jge
mov
aas
or
mov
test
stc
push
mov
mov
add
movsb
sbb
add
js
or
in
out
nop
cmp
stos
adc
cltd
movsl
inc
test
dec
out
jp
movsb
mov
cmc
cmp
mov
inc
iret
lretw
mov
mov
iret
xchg
inc
dec
loope
push
mov
iret
mov
mov
inc
test
pushf
pop
adc
orl
jecxz
mov
test
ja
ja
pop
mov
test
xchg
cmc
mov
or
add
scas
scas
fxam
cltd
enter
arpl
xchg
movsl
leave
jmp
xchg
dec
jne
enter
mov
xchg
lahf
ret
push
xchg
inc
je
xchg
clc
mov
adc
or
jg
repnz
arpl
push
mov
movsl
dec
jg
sub
push
mov
pop
daa
sub
outsb
imul
daa
nop
imul
dec
pop
pop
xor
adc
ret
hlt
adc
nop
test
xchg
jae
not
inc
xchg
movl
sub
sahf
test
add
inc
and
xlat
xor
lods
cmpsl
mov
xor
dec
push
in
leave
sub
arpl
add
shrl
or
mov
test
rcl
sub
insb
aam
icebp
lcall
cmp
or
stc
fmul
cli
faddl
sub
xchg
test
dec
test
call
mov
jo
xchg
cmp
mov
lods
xor
imul
cmc
mov
mov
mov
cld
mov
push
dec
ret
mov
inc
aad
or
xchg
mov
arpl
add
cmp
xchg
test
ljmp
xchg
mov
xor
cltd
nop
test
rolb
pop
fidivrl
mov
or
mov
and
shll
in
pop
or
faddl
xlat
flds
call
mov
inc
popf
inc
cmpl
push
lods
xchg
in
cmpsl
or
xchg
ret
push
shrl
lds
pushf
xor
adc
push
test
sbb
rcrb
jmp
pushf
mov
mov
mov
jne
adc
inc
mov
push
xchg
aaa
mov
mov
in
mov
sbb
in
adc
or
loopne
stos
jg
pop
icebp
pop
movsl
pop
data16
enter
xchg
filds
add
ds
into
add
xchg
loope
sbbl
dec
inc
xchg
or
loopne
inc
test
mov
xor
pusha
push
std
mov
and
lods
jp
sbb
shl
push
and
movsb
mov
flds
xchg
or
lret
lret
rcrl
xchg
rorb
push
sub
shrb
jmp
sub
or
lods
jg
push
or
stos
jle
repnz
rep
add
dec
js
in
negb
rol
jnp
push
movsl
or
popa
xchg
cmpsl
push
push
andb
gs
push
decb
push
arpl
xchg
add
nop
subl
mov
adcl
into
mov
in
add
mov
clc
ret
or
and
jnp
jne
lds
mov
cmc
in
mov
ljmp
and
enter
popa
mov
or
push
mov
dec
js
pushf
sub
jbe
and
rclb
test
sbb
nop
or
aam
rcrb
aad
sbb
into
lock
mov
push
ret
push
lods
mov
dec
sbb
popf
and
xchg
mov
dec
cmp
sbb
fstpt
loopne
call
sbb
es
mov
jl
ror
xchg
sub
movsb
mov
jle
imul
test
mov
inc
test
shll
push
and
cmpsb
adc
ficoms
sub
jg
cs
fiadds
ja
add
jmp
xor
dec
or
test
mov
mov
cmp
jne
mov
jmp
sbb
nop
rcrb
or
xor
adc
mov
rorb
xchg
xchg
loope
movsb
add
add
int
std
pop
cltd
adc
adc
test
cli
adc
ljmp
xchg
lret
cmp
stc
fwait
cmpsb
mov
add
enter
je
add
or
cmpsb
and
pop
mov
fisubrs
jno
xchg
std
shll
cmpsl
jl
push
pushf
shrl
dec
in
shll
and
leave
xlat
jg
pop
cmc
adc
mov
out
mov
pop
imul
and
ljmp
push
in
fimull
ret
movsb
stos
shll
and
jns
sub
test
xor
fs
push
inc
sbb
inc
pushf
or
lock
pop
jecxz
or
cs
add
jg
ja
scas
in
pop
xchg
test
nop
popl
leave
and
mov
xchg
push
or
std
push
xchg
push
sub
jne
dec
lds
xchg
jecxz
insb
inc
imul
in
call
rcll
in
das
xchg
mov
call
lock
mov
cld
adc
or
insb
sahf
pop
dec
and
mov
ljmp
push
add
push
cmc
mov
test
add
dec
xchg
push
cmp
cmc
fdivrp
nop
dec
adc
inc
cltd
fs
andl
mov
pusha
xchg
invd
pop
and
jecxz
les
push
cmp
mov
mov
aad
xlat
inc
rorb
xchg
cs
and
shrl
mov
adc
lret
leave
fs
movsl
jb
sahf
mov
and
xor
fwait
enter
shl
push
sbb
lds
loope
push
adc
or
test
sbb
mov
in
jecxz
cmp
aam
xchg
xor
outsb
loope
mov
pop
and
sbb
adc
or
arpl
fs
call
add
test
mov
les
jl
and
call
fisubs
iret
loop
test
xchg
stc
test
cmp
imul
hlt
scas
xchg
test
xchg
pop
mov
push
loope
popa
hlt
test
mov
inc
add
xchg
sarb
xchg
push
and
push
mov
add
mov
adc
fsubrs
popa
stc
push
push
add
int3
jns
mov
adc
mov
pop
mov
pop
xor
pop
les
jp
dec
dec
dec
jne
int3
or
xchg
cmp
fcomps
sub
dec
mov
shrb
adc
loope
push
in
pop
cmpsb
hlt
xchg
or
sub
sbb
pop
xchg
out
or
xchg
sub
push
jnp
cmpsb
cwtl
sub
xlat
nop
inc
inc
andl
addb
inc
loope
sub
call
jnp
dec
xchg
xlat
icebp
adc
mov
fistpll
lods
fisubs
clc
sbb
cmc
int3
add
or
inc
cli
test
mov
jns
add
movl
xchg
jp
mov
ljmp
nop
lds
in
jp
mov
out
in
mov
orl
pop
adc
sub
shlb
les
mov
nop
and
jg
jg
test
pop
je
push
add
cmc
lea
add
xchg
or
fadds
xchg
mov
mov
in
push
inc
das
inc
jbe
ret
cmp
mov
insb
je
hlt
mov
addl
loope
dec
cmp
pop
stos
xor
inc
adc
rcll
xchg
cs
add
repnz
sub
fs
xor
adc
mov
call
icebp
test
outsl
les
jecxz
rcrl
xor
mov
cmpsb
xor
mov
scas
fstl
xchg
and
adc
push
xchg
mov
scas
xor
shlb
clc
aam
icebp
mov
lods
push
push
inc
jp
mov
inc
add
sbb
adc
inc
inc
js
inc
aam
add
jg
cmp
cmp
aad
sbb
lea
sbb
ja
push
lock
outsb
or
lret
test
adc
hlt
xchg
rorl
scas
fstpl
ss
jge
jle
clc
mov
lret
push
lock
lea
inc
sub
sahf
out
jae
or
movsl
push
mov
add
mov
inc
add
xlat
shrb
ret
stc
inc
or
rorb
or
jl
xor
iret
ljmp
xor
in
xchg
or
sub
nop
sar
cwtl
add
repz
jle
in
das
sbb
cmp
add
shrl
outsb
lods
push
xchg
idivl
jmp
bswap
subb
testb
mov
inc
adc
or
pushf
adc
sbb
leave
pop
mov
mov
roll
add
fsubrl
cmp
jo
test
icebp
test
pop
adc
jae
lods
mov
push
in
xor
adc
mov
or
fucomip
mov
adc
js
pop
fisttpl
mov
jg
dec
call
cmc
stos
test
jg
rclb
sub
sbbl
xlat
xchg
sarb
cld
pop
sbb
rcrb
push
mov
shl
sbb
pop
xchg
push
ret
mov
insb
int3
sbb
adc
add
cwtl
inc
cmc
xor
andb
mov
and
mov
sbb
sub
mov
pop
add
dec
cmp
imulb
dec
push
imul
test
jo
les
sti
in
divb
mov
ljmp
xchg
stos
sub
xor
or
lahf
repz
add
xchg
jbe
insb
cmpl
pusha
xorl
fcompl
mov
pop
lods
jnp
pop
mov
pop
mulb
orl
test
xlat
mov
insb
idivb
sbb
fimuls
arpl
xchg
or
lret
insb
mov
movsl
pop
js
leave
cld
sahf
and
add
and
out
hlt
ja
or
aas
rorb
xlat
les
xchg
popl
in
xor
cmp
pop
add
push
rclb
dec
sub
stos
and
inc
test
nop
dec
dec
into
insb
rol
subb
test
pop
push
subb
pop
adc
xchg
mov
add
mov
sub
or
mov
movsl
into
jo
roll
mov
sbb
dec
dec
xchg
lock
adc
xchg
gs
xchg
call
fisttpll
mov
add
mov
nop
imul
popf
and
jnp
outsb
fnsave
dec
aaa
pop
sub
adc
xor
mov
or
int
and
push
inc
pop
negl
mov
insb
mov
ficomps
push
cmp
jae
cmp
out
stos
or
pushf
les
sub
cmc
rcl
inc
shlb
cmp
inc
enter
xor
and
mov
movsl
test
nop
or
jmp
xchg
movsb
lret
into
aas
shr
cmpsb
push
shrb
js
pop
pop
je
pop
and
test
fwait
out
mov
or
ds
ds
call
insl
xchg
push
outsl
push
jno
popl
filds
scas
mov
mov
mov
cwtl
push
and
call
mov
call
push
cwtl
xor
sub
push
xchg
sub
pop
sahf
mov
testb
loope
test
popa
cmpsb
insl
sbb
push
stos
hlt
lock
jge
adc
and
xor
sub
add
push
js
pop
xor
rorl
or
push
sbb
iret
in
lods
push
pushf
mov
test
movsb
sahf
mov
mov
rolb
enter
add
rcll
or
in
jg
jl
sub
mov
lea
movsl
mov
bound
inc
mov
bound
mov
fs
lods
xor
sub
jbe
pop
aad
xchg
ret
or
lds
test
cmp
dec
enter
pop
call
and
add
int
inc
stc
call
mov
xchg
rclb
pushf
dec
mov
add
stos
push
mov
add
iret
sub
xchg
or
mov
sbb
das
in
movsb
push
push
fildll
fdivp
les
cmpsl
mov
push
cld
push
fistpl
leave
inc
adc
cwtl
push
mov
xor
xchg
imul
js
dec
and
aas
divb
push
les
xchg
push
rorl
push
lea
mov
push
lds
pushf
popa
ficoms
inc
pushf
mov
js
or
add
icebp
ds
xor
mov
addr16
fwait
push
arpl
add
out
xor
js
or
movsl
rol
das
add
jo
push
dec
loop
xchg
fsubl
and
std
and
pushf
or
fdivl
in
cmp
ja
mov
hlt
xchg
lret
testb
int3
test
xchg
daa
scas
movsl
movsb
lret
dec
xor
dec
push
sbb
les
incl
pop
call
cld
enter
std
xchg
cs
adc
shll
mull
sbb
xchg
enter
cwtl
popf
mov
xchg
fadds
mov
decl
gs
pushf
rcl
or
mov
ror
mov
adc
jmp
sub
mov
mov
nop
pushw
jg
pop
fwait
push
cmpb
mov
jns
dec
lret
pop
jns
je
call
shlb
cmp
adc
mov
and
shl
mov
dec
or
ds
movsl
and
xlat
inc
pusha
in
lret
add
movsb
pop
push
adc
jnp
std
xor
fs
lret
orl
enter
inc
mov
mov
cmp
addl
movsb
js
mov
scas
stos
push
jg
jmp
xchg
call
insb
lods
faddl
cmovbe
xor
push
dec
sub
test
xchg
mov
in
insl
mov
mov
fwait
or
inc
xor
cli
adc
mov
adc
and
call
outsl
pop
jb
cmpsl
xor
push
sbb
mov
adc
js
push
mov
into
loop
ja
mov
mov
call
lcall
nop
lret
mov
js
les
cli
xlat
nop
ret
nop
jp
mov
mov
xchg
cmp
xor
cmp
jp
arpl
dec
mov
jl
mov
ja
pop
std
in
or
push
std
aaa
jo
push
ja
mov
sahf
in
ret
mov
lods
mov
imul
push
or
cli
push
call
xlat
lea
fstpt
push
lret
jmp
je
jb
lcall
push
xor
jne
lock
xor
mov
fcmovu
mov
pop
xchg
imul
inc
jb
mov
nop
adc
lahf
add
or
ret
cwtl
inc
push
into
cwtl
sub
fucomip
cmp
cmp
mov
mov
xchg
rcrl
test
mov
imull
enter
xchg
test
xor
mov
imul
loopne
data16
xchg
test
adc
sahf
leave
mov
mov
mov
in
fists
or
xor
shl
jbe
or
mov
mov
lds
and
dec
xchg
lret
in
or
xchg
mov
xchg
push
sub
mov
mov
xchg
mov
or
mov
pop
or
jmp
filds
movsl
fucom
and
and
test
fmulp
jae
mov
add
scas
into
mov
aaa
mov
je
ret
std
bound
inc
icebp
shlb
sarl
popa
jns
in
bound
sbbl
inc
lahf
iret
in
in
mov
cli
cld
fsubrs
push
or
mov
cmp
jb
cli
ljmp
jmp
mov
loopne
dec
in
aas
mov
xchg
stos
jns
in
mov
pop
les
lcall
xor
mov
rcrl
sub
cmpsl
jmp
call
mov
xchg
jo
and
ljmp
cmc
push
ficoms
ret
dec
jp
nop
cmpsb
sbb
nop
scas
mov
jns
pop
cmp
mov
mov
mov
int
mov
shl
cmpsb
pop
fsubrp
repnz
clc
cwtl
xor
fcoml
inc
cmc
adc
sbb
xchg
test
inc
push
test
add
lods
and
or
inc
xchg
popl
cmpl
jmp
mov
jno
je
les
cmc
xchg
call
dec
sub
sti
adc
cmp
stc
xorb
add
add
pop
jle
mov
outsl
fisttpll
xchg
psadbw
sbbl
add
inc
cmc
dec
das
test
mov
lods
push
dec
mov
inc
xor
int3
push
pop
xlat
jp
adc
fistpll
daa
rcll
push
xor
mov
xlat
nop
ljmp
or
stc
or
pop
or
add
xchg
repz
movl
pop
stos
xchg
sub
mov
call
dec
push
xor
cmp
mov
xchg
xchg
imul
mov
sbb
xchg
mov
pushf
ret
les
sahf
jge
xchg
inc
std
leave
hlt
pop
sarl
xchg
das
sahf
mulb
fidivl
popf
filds
jns
and
lret
add
pushf
add
dec
cmpsl
push
fs
cmpsl
stos
push
repnz
cmpsl
push
and
sub
mov
clc
xchg
testl
scas
fisttpll
scas
pop
dec
out
stos
mov
dec
ljmp
mov
add
lcall
shrb
in
test
mov
subb
loope
mov
xchg
dec
testl
mov
inc
aam
mov
mov
jmp
mov
mov
sub
ljmp
mov
notl
fstps
and
jg
sub
inc
mov
scas
scas
negl
test
test
shr
inc
hlt
dec
push
nop
sub
adc
fwait
push
xchg
sub
adc
add
lcall
xchg
in
ret
and
dec
mov
imul
mov
mov
aad
shl
sub
les
test
in
push
xor
cmp
pop
test
fsubl
push
subl
sbb
hlt
les
or
adc
dec
push
pusha
scas
push
xor
cmpsl
lods
test
mov
jbe
rcrl
lret
or
aaa
pop
shlb
dec
in
mov
mov
jg
xchg
scas
and
sbb
lret
out
pop
mov
in
cmc
test
mov
push
lds
lret
test
xlat
or
clc
pushf
nop
push
out
out
cltd
adc
mov
pop
into
fistpll
adc
inc
icebp
cmpsb
mov
stos
stos
mov
pop
sbb
scas
ja
cld
xchg
nop
jb
fsubrs
ret
addr16
imul
in
jnp
xor
xor
add
ret
btc
pop
inc
stos
mov
jnp
clc
mulb
lret
pop
out
push
mov
into
mov
add
movsl
cmp
add
and
or
imul
popa
xchg
repz
inc
push
inc
cmp
inc
std
xchg
push
push
clc
aad
cmpsl
adc
inc
cmp
mov
int3
sahf
cli
xchg
sar
push
mov
inc
sbb
sbb
push
ficoml
jg
xchg
pop
loop
pop
mov
ret
mov
test
xchg
add
push
scas
lret
flds
loop
leave
sub
mov
leave
cmp
xchg
push
xchg
mov
push
stc
xchg
stos
push
call
or
iret
cmp
pop
sub
push
push
sub
sar
fisttpl
test
outsl
xor
sar
stos
add
arpl
sub
shrb
fcompl
inc
bound
fsubrs
push
aas
mov
ficoms
aam
mov
adc
adc
push
push
cs
enter
lret
mov
cmpsb
cwtl
jp
mov
pop
inc
scas
les
incl
movsb
xchg
jb
subl
jp
out
cmc
push
xchg
push
mov
jns
js
fs
aaa
or
cmp
dec
lcall
jecxz
dec
or
stos
clc
rcll
movsb
push
popa
dec
je
popa
jb
mov
xchg
jns,pt
add
out
push
popa
mov
aas
cltd
dec
roll
mov
rcll
std
mov
push
inc
push
sub
lret
cltd
pop
roll
dec
dec
or
into
insb
xchg
scas
pop
lret
and
cmp
xor
inc
gs
clc
js
js
jge
dec
inc
jae
mov
push
push
into
stos
push
pop
jo
lret
ret
insb
pop
adc
dec
mov
hlt
test
push
or
cmp
pop
sarl
shll
pop
loop
mov
cmpsl
sbb
insl
movsl
add
fistpll
adc
scas
jmp
adc
fistpll
cmpsb
pushf
xor
nop
loope
insl
mov
test
jbe
mov
and
leave
push
push
mov
mov
mov
mov
jne
jp
mov
std
adc
rcl
lods
cmp
clc
aad
push
fisubs
out
inc
inc
lret
mov
xchg
je
adc
aas
inc
xlat
in
sarl
ds
jns
fs
dec
mov
cld
and
and
xor
das
mov
jns
xchg
fadds
or
or
ljmp
jnp
stc
fisubrs
push
fcomip
lds
push
jge
and
pusha
call
cmp
sarl
dec
and
or
aas
in
jg
adcb
sti
lods
adc
in
or
mov
ret
sub
iret
insb
jae
imul
mov
aad
ret
dec
jg
inc
hlt
mov
scas
test
les
push
add
xlat
mov
movsl
fists
and
sub
movsl
sarl
cwtl
mov
mov
or
orb
je
lods
adc
or
int3
jge
push
popa
lods
mov
pop
xchg
xchg
popa
mov
jne
in
mov
test
bound
inc
sarl
adc
js
mov
jge
adc
sbb
add
jecxz
sbb
ffree
in
and
in
mov
mov
xor
pushf
mov
mov
lret
jbe
movsl
jl
daa
dec
cmpsb
xlat
rclb
mov
cli
rcl
mov
sbb
jmp
ja
jno
push
pop
mov
mov
mov
hlt
ror
sbb
mov
push
enter
mov
cwtl
inc
xchg
xchg
iret
and
xchg
mov
adcl
aaa
mov
mov
ret
jl
cmp
ficomps
andb
fildll
jnp
jns
cmpsb
xchg
mov
or
or
rcr
test
cmpsl
sub
sub
pop
add
add
cmc
loope
lods
dec
pop
push
cmp
sbb
sar
les
mov
pusha
out
mov
stos
cmpsl
dec
jo
cmpsl
test
inc
adc
shl
jge
call
add
and
icebp
push
scas
lock
jg
jmp
xchg
enter
or
cmp
xchg
dec
mov
lods
add
insb
sti
jge
push
nop
push
push
lea
lret
dec
xchg
dec
jp
xor
cmc
cwtl
jge
dec
jno
and
pushf
inc
sub
mov
lcall
mov
xchg
inc
fs
lods
jl
push
cmp
dec
enter
sbb
nop
or
mov
push
out
iret
cmpsb
movsl
inc
enter
pop
mov
sbb
rcl
insb
loop
rorb
test
nop
push
rcl
xor
in
mov
movsb
xchg
clc
pushf
hlt
les
jns
cltd
enter
mov
mov
std
mov
out
jnp
js
lret
sbb
adc
in
aas
adc
or
mulb
cmp
or
xlat
sbb
fistl
fdivrs
stos
xor
push
mov
in
jbe
inc
popf
or
jo
lds
lret
enter
xchg
or
dec
aas
mov
ljmp
aad
xchg
movsl
push
nop
jns
cmc
xchg
cltd
mov
or
movsl
shrl
shrb
jg
xor
push
add
add
mov
add
jbe
loopne
test
xor
mov
xlat
jnp
jmp
enter
pop
mov
jbe
bound
jbe
lahf
xchg
aaa
cmpsl
inc
or
xchg
test
mov
les
xlat
loopne
xlat
lret
lds
pusha
mov
cmp
fbld
push
lret
cmc
dec
pop
jae
loope
rcrl
mov
push
xchg
mov
add
dec
mov
xlat
imul
mov
add
xor
cmc
loope
icebp
jl
insl
xchg
mov
je
movsb
xchg
xor
shll
loop
lcall
int3
ffree
lods
jecxz
fwait
hlt
inc
filds
push
pop
push
xor
push
mov
test
adc
orl
pop
cld
dec
movsl
stc
test
adc
js
or
imul
jecxz
ss
push
std
loopne
mulb
sbb
lea
iret
int
mov
fbstp
mov
imul
aaa
pusha
mov
or
sub
xor
dec
scas
pop
aam
fldenv
scas
scas
push
shr
mov
xchg
xchg
lcall
js
jnp
insb
rcll
test
inc
orl
xor
add
fwait
leave
fbld
cwtl
int
ja
sti
push
shrl
into
jno
rep
lret
lret
lret
sub
jnp
mov
sbb
adc
mov
sbb
pop
loopne
mov
push
into
cmpsl
movsl
add
xor
adc
fstp
loopne
dec
xchg
push
mov
lds
lret
push
pusha
das
jne
fisttpl
ja
sub
ficoms
cltd
xchg
cmpsb
addr16
movsl
movsb
fdiv
in
adc
bnd
ret
xor
jo
or
leave
xchg
rorl
inc
out
les
test
or
mov
jmp
jno
movsb
adc
fistl
jge
cwtl
rorl
rclb
loopne
int3
jb
or
mov
leave
frstor
cmp
xchg
jnp
mov
adc
xchg
roll
and
add
flds
je
das
fldl
adc
shrb
cltd
sbb
sbb
xorl
ss
push
imul
scas
lea
dec
add
scas
gs
pop
scas
dec
aaa
cld
pop
outsl
movsb
and
or
pushf
insl
in
push
ds
enter
loopne
js
mov
jno
subb
xchg
add
hlt
lret
cwtl
cmc
daa
rep
inc
pop
mov
lods
xchg
je
inc
pushf
mov
mov
rolb
in
jp
xor
mov
jbe
sbb
jb
pusha
imul
rcr
add
mov
int3
loop
nop
jnp
and
rolb
loope
pushf
push
pop
mov
lock
or
mov
test
stc
push
mov
push
inc
jo
cli
mov
mov
add
test
lds
test
lock
sbb
mov
in
outsl
imul
dec
pushf
inc
cmp
into
rorb
arpl
push
insb
inc
test
inc
fistl
test
xor
and
jae
mov
stc
adcb
adc
push
cmp
adcl
cld
mov
push
pop
ss
add
xor
sbb
out
adc
outsb
je
push
movsb
ret
mov
aad
stos
enter
jne
ror
xchg
inc
add
stos
movsl
pop
cs
cmp
ret
jbe
mov
mov
adc
dec
test
mov
test
leave
cmp
fs
mov
push
scas
nop
cld
lds
rcl
mov
mov
orl
xchg
mov
jge
adc
subl
mov
bound
pusha
call
cli
lret
hlt
mov
aam
or
popa
leave
scas
pop
jmp
insl
mov
cwtl
mov
add
fucomi
iret
cmp
add
add
pop
xchg
xor
or
xchg
addb
cmpsb
or
aad
pushf
inc
xchg
xchg
or
arpl
nop
inc
popf
cmc
test
mov
lods
xchg
loop
dec
xor
jbe
jecxz
fcmovne
jno
cmpsb
add
andl
outsl
push
cmp
popa
mov
and
mov
notb
daa
clc
push
enter
ficomps
mov
mov
inc
lods
aad
stc
sbb
imul
sbb
jle
fidivrs
xchg
or
fiadds
pusha
push
push
lods
mov
in
inc
xchg
ret
mov
out
mov
push
testb
fiaddl
xor
dec
xchg
mov
mov
xchg
popl
lret
cmp
hlt
mov
inc
mov
pop
pop
es
ret
mov
cmpsb
mov
or
or
mov
xorb
or
mov
mov
test
jbe
or
test
test
and
orl
subb
xchg
ret
int
iret
sub
int
pop
ljmp
shr
mov
test
mov
lock
pop
les
mov
sub
lret
cld
jl
les
scas
xchg
xchg
jl
int3
cli
scas
les
in
add
push
stos
jns
nop
insb
cmp
aam
imull
inc
mov
mov
test
enter
mov
cmp
cmpsl
int
adc
or
sbb
or
imul
loope
rcl
add
nop
push
dec
or
ja
and
int
loop
stc
lret
push
scas
inc
xchg
test
scas
jg
aaa
mov
scas
rorl
sarl
jo
fcomip
into
out
dec
lcall
fidivs
inc
shlb
popfw
add
xchg
jmp
insl
jo
mov
mov
dec
mov
jmp
cmp
sub
and
dec
test
nop
fsubl
mov
mov
enter
leave
add
lret
mov
test
or
fiadds
shrl
pop
arpl
icebp
rol
mov
clc
mov
inc
sbb
sub
ret
fcomps
and
mov
je
add
xchg
popf
or
rolb
cmp
lock
cmpsl
ljmp
fwait
mov
mov
in
jns
rolb
dec
ljmp
push
sti
addr16
fistps
dec
aad
push
psrlw
insb
sti
in
xchg
mov
or
pop
mov
jl
pop
rcrl
mov
fcomi
fisttps
jne
sbb
xchg
std
movsl
in
std
repnz
adc
lds
rolb
mov
sbb
aas
jbe
mov
fadds
lods
div
xchg
leave
mov
mov
adc
adc
mov
push
mov
pop
pushf
jge
fstpt
loope
and
jl
inc
rcl
or
push
iret
test
xchg
mov
fdivrl
jb
sahf
pushf
loopne
sbb
mov
std
pop
xlat
pop
in
mov
push
cmpsb
or
dec
jge
mov
std
or
push
stos
fistpll
adc
add
and
push
mov
pop
add
movsl
decl
push
dec
push
sahf
test
sub
pop
cmpsl
rcrl
adc
jo
adc
or
nop
loop
je
dec
scas
testb
mov
push
push
arpl
xor
add
xor
rcrb
movsl
xor
dec
or
mov
aam
imul
mov
sub
add
cld
xchg
push
js
jecxz
daa
jb
in
xchg
pop
fcmovne
adc
adcb
jmp
lods
je
add
loop
mov
pop
mov
int
push
and
aam
ds
mov
sahf
lods
fiaddl
adc
mov
push
loopne
inc
cmp
call
les
pop
insb
iret
lret
xchg
and
repz
xchg
mov
cs
fists
mov
xchg
aaa
and
sbb
sarb
sbb
add
popf
adc
add
int3
cwtl
or
cli
stc
mov
bnd
fisubrl
ss
inc
outsl
pop
movzwl
jmp
ljmp
jno
mov
imul
add
or
push
shl
adcl
mov
jmp
xchg
enter
inc
cmpsl
lret
adc
test
popf
scas
and
xchg
inc
rcr
in
lds
fisubl
mov
call
rcl
and
mov
aaa
or
pop
test
lock
sbbl
or
enter
xchg
scas
sub
loopne
fistpl
and
lods
ds
adc
lret
cld
mov
xchg
aad
pop
sti
sbb
lods
jno
or
xchg
test
jl
insl
ljmp
and
jne
pop
mov
movsb
xlat
std
adc
xchg
xchg
iret
push
inc
stos
sar
mov
fs
lock
and
fiadds
cmp
int3
in
inc
stos
in
mov
sub
jg
xchg
jnp
inc
xchg
xor
fstp
inc
sub
mov
push
add
add
xlat
mov
repnz
loopne
test
push
ret
fadds
sti
loop
mov
in
loopne
call
jbe
fucom
mov
fiadds
inc
mov
adc
xor
and
mov
rol
les
mov
fistpll
cmpsl
sbb
stc
mov
sub
mov
fnstsw
test
movsl
cld
in
movsb
xchg
mov
es
int3
sub
add
xchg
pop
push
rclb
pushf
subl
or
or
sub
vaddsubpd
add
or
cmp
inc
rorl
pop
xchg
test
push
xchg
lret
shl
aas
cmp
and
cld
loop
imul
sbb
xchg
popa
dec
xchg
imul
mov
mov
orl
xor
jl
call
movsl
shlb
ss
adc
sar
adc
xchg
jecxz
mov
mov
jns
mov
xchg
mov
aam
mov
std
pop
pop
cmp
insb
mov
pop
jnp
adc
out
shlb
xlat
push
mov
dec
imul
adc
ror
or
cs
mov
dec
cmp
xchg
inc
cs
lret
pop
mov
push
xor
lea
and
push
dec
ret
mov
adc
adcb
addl
cmp
dec
imul
jl
jns
je
add
in
fidivrl
imul
inc
clc
imul
cltd
rcrb
inc
sub
pusha
sti
add
ficomps
adc
or
mov
pop
or
call
xchg
out
dec
push
test
sahf
mov
pop
cmp
sub
push
xchg
add
and
add
push
lcall
fnsave
in
enter
frstor
push
mov
pop
or
imul
inc
sub
mov
push
adc
or
cld
lods
loope
add
add
in
xchg
addr16
add
xchg
iret
push
inc
jg
push
cwtl
sub
mov
cmpsl
inc
test
mov
aad
inc
sbb
and
and
inc
mov
cwtl
xor
pop
cmp
fs
test
mov
mov
cmp
push
rol
inc
aas
out
xor
fcompp
out
jb
arpl
fstpl
mov
cmp
bound
or
in
ror
and
xchg
fists
add
ds
pop
adc
jmp
call
test
shll
jg
js
shrb
lcall
adc
idivb
cmpsl
add
das
push
mov
push
adc
push
xlat
mov
loopne
imul
test
sbb
aaa
sub
jb
repnz
js
lods
stos
push
lock
mov
cwtl
xchg
sub
or
adc
jmp
cmp
adc
int
aas
test
sbb
pop
out
sbb
mov
jne
imul
sbb
push
mov
lcall
outsl
ret
jp
jmp
loop
or
mov
inc
int3
sbb
cmp
add
cmpsl
shl
dec
adc
sbb
into
scas
aaa
add
jb
cmp
xlat
addr16
jge
pop
cmp
js
cmp
jg
leave
jo
adc
daa
int3
mov
or
test
xchg
bound
mov
shll
cmp
jl
cs
xchg
shll
in
fcmovnb
lds
gs
in
enter
and
mov
arpl
add
scas
ror
bound
jno
das
sti
lock
lock
popa
xchg
movsl
push
mov
lods
fdivrs
repnz
fisttps
dec
cltd
xor
or
xchg
icebp
jo
jno
mov
lods
cmp
pop
stos
out
mov
icebp
mov
jb
mov
pop
std
lret
cltd
fcmovnu
jnp
add
mov
shl
add
cmp
out
lret
mull
and
movsl
nop
es
xchg
movsl
aas
mov
xor
xchg
aas
gs
int3
sahf
in
mov
cltd
hlt
sub
repnz
jne
add
mov
jns
lods
js
xor
ss
lret
int3
outsl
sub
popa
popa
or
fstl
xchg
inc
popl
jecxz
pop
mov
inc
sbb
rolb
sbb
xchg
das
push
xor
in
and
dec
hlt
out
imul
jge
adc
shlb
inc
mov
mov
pop
fstpl
mov
adc
cs
fs
in
inc
mov
mov
je
jle
push
addl
push
pop
jne
add
enter
inc
jle
je
enter
push
cmc
movsb
pop
xchg
sbb
xchg
or
sbb
cltd
jp
jg
mov
pop
repz
enter
test
inc
repnz
sti
mov
iret
jb
movsl
mov
mov
mov
call
aam
jne
dec
or
mov
loope
or
nop
pusha
out
orl
jl
jl
out
out
mov
rol
and
mov
or
sub
and
mov
scas
pushf
dec
push
dec
leave
inc
fidivrs
leave
test
jl
out
jle
repnz
xchg
rorb
xchg
xchg
push
pusha
pop
dec
adc
xorl
icebp
mov
xchg
repz
mov
aad
das
jb
xor
pop
or
test
pop
mov
inc
sbb
iret
mov
stos
adc
rep
sbb
cwtl
ret
add
mov
xchg
aas
push
sub
pop
dec
cmp
in
inc
cmp
adc
mov
mov
or
xlat
lcall
sarl
cmc
xor
in
mov
cmp
arpl
lds
mov
xchg
cltd
repnz
mov
rcrb
xor
int3
xchg
and
fldenv
inc
dec
sub
rol
sub
lods
add
out
out
pop
enter
pushf
mov
fsubrs
int
jno
push
testl
xor
inc
sub
xor
pop
enter
int3
jbe
ret
mov
or
movb
cmpsl
orl
and
aad
lds
and
or
ret
fistpll
jae
pusha
repnz
add
out
add
ljmp
adc
mov
xchg
shll
xor
push
call
clc
mov
xchg
adc
aad
test
add
adc
call
xor
pop
clc
loope
ret
dec
mov
mov
xor
enter
frndint
sbb
fdivrs
inc
inc
ret
rcrb
mov
mov
les
into
mov
sbb
ja
test
rorb
xchg
xor
in
or
jmp
fadds
in
inc
mov
leave
adc
or
into
cmpsb
mov
adc
aaa
add
push
xchg
aad
test
fwait
out
cmp
or
jmp
mov
pop
out
aam
xchg
out
movsb
loop
cli
fmul
mov
jae
push
jl
or
and
adc
sbb
sbb
adc
or
pop
fsts
add
mov
inc
jns
hlt
icebp
imul
loop
pop
fldcw
movsl
or
push
popa
jle
fistpll
bound
pop
fnstsw
adc
jle
fisttpll
mov
imul
testl
mov
aad
fcoml
dec
scas
or
sarl
mov
pop
lods
jmp
mov
repz
jg
lret
sbb
inc
or
call
push
or
inc
push
adc
pop
mov
testb
mov
or
adcl
test
mov
test
iret
sub
pushf
pop
add
cmpb
ret
cltd
rcrl
jle
add
jo
ret
mov
add
xchg
ret
xchg
rorl
dec
repnz
inc
mov
stos
push
add
add
push
faddl
cwtl
or
call
shlb
xchg
or
ret
pop
test
cmp
cmp
add
insb
testb
sbb
ja
inc
cmp
cmp
jne
mov
aad
adc
mov
jns
aad
sbb
sub
add
xchg
es
mov
xchg
fcoml
gs
mov
add
fsubrl
hlt
dec
mov
dec
repz
gs
mov
jg
jo
mull
hlt
xchg
imul
lret
and
xorl
shl
data16
pop
cld
xchg
xchg
in
or
mov
xchg
sbb
fucom
clc
fdivs
fcompl
dec
movsl
jns
push
jp
addb
lcall
add
in
lock
adc
outsl
sbb
faddl
fmuls
int3
enter
xchg
repz
in
fnsave
sbb
adc
pop
mov
enter
sub
sahf
mov
popl
enter
dec
stos
mov
inc
movsl
xchg
out
cmp
movsl
divl
or
fcomps
xchg
shl
and
cmp
sub
insl
stos
test
cmpb
or
mov
sahf
mov
mov
xchg
and
sbbl
xchg
mov
mov
or
lret
les
jg
lds
enter
xchg
pop
cli
inc
imul
fsubl
and
rorb
or
mov
or
mov
outsl
or
enter
xlat
add
xchg
jnp
or
jae
xchg
movsb
jnp
fbld
sbb
and
insb
cmpl
ds
in
pusha
pop
jno
adc
fs
outsl
xchg
sbb
daa
repnz
mov
jne
lahf
aad
jnp
xchg
and
inc
repnz
and
mov
shrb
test
lods
ja
cld
movsb
pop
inc
jnp
xor
gs
xchg
jge
jl
mov
mov
jne
nop
jbe
ja
ret
popa
les
jnp
nop
jl
jge
ret
jg
mov
sahf
popl
rorb
xchg
enter
mov
ja
push
pop
inc
aas
mov
in
ja
lahf
jb
jp
lret
in
inc
mov
inc
pusha
nop
fcomip
mov
lea
data16
cmp
add
and
sahf
pop
int
lcall
iret
xorb
xchg
mov
sbb
rorb
mov
pop
xor
mov
loop
pop
call
data16
xlat
out
icebp
xor
inc
lock
or
or
jl
mov
push
cwtl
xor
mov
cld
fs
les
cmp
nop
push
stos
dec
fbld
push
and
push
rclb
ret
shl
bound
xor
fadds
stos
or
cmp
push
pusha
mov
xchg
fisubrs
jmp
into
cld
push
add
rolb
sbb
xchg
ret
push
nop
mov
cmpl
mov
xor
push
outsb
cmp
ret
add
repz
push
xor
mov
inc
or
lahf
std
test
jp
popf
loope
hlt
xchg
ljmp
add
xlat
fs
mov
lds
fimuls
xor
insb
fists
dec
cmp
movl
mov
push
lret
or
cmpsb
mov
xchg
cltd
jo
mov
or
mov
xchg
inc
mov
inc
movsb
mov
rorl
test
lds
mov
xchg
push
pusha
sub
call
into
cmp
xor
dec
stc
imul
test
pop
inc
out
mov
sbbb
fiadds
pop
cltd
mov
or
dec
inc
negl
int3
adc
dec
mov
loop
push
mov
xor
pusha
rcr
or
mov
mov
push
xor
push
or
loop
test
xchg
xchg
stos
ds
jmp
add
imul
or
lcall
mov
add
mov
cmc
sub
movb
sbb
lea
mov
mov
mov
mov
and
testl
mov
rcrb
mov
xorb
cmp
mov
mov
jge
mov
roll
test
orl
or
loop
test
dec
out
add
fidivrs
mov
fldenv
inc
mov
aas
sbb
fcomp
mov
jnp
roll
mov
lret
mov
inc
out
or
mov
and
rcrb
xchg
enter
fadd
xchg
sahf
push
and
lret
lds
nop
adc
or
xchg
inc
das
movl
add
sahf
arpl
test
scas
xchg
inc
mov
imul
xchg
jle
inc
or
test
mov
int3
das
sbbb
rcl
pop
into
ds
in
mov
jecxz
in
cs
orb
popf
sub
sub
mov
in
add
add
dec
lahf
call
xchg
xchg
sub
into
bound
pop
mov
stos
sub
xor
ds
call
lods
xchg
or
test
aaa
mov
je
xchg
xchg
or
push
test
pop
push
mov
lods
mov
fidivl
add
loop
mov
loope
stos
dec
repz
push
popa
insb
xor
adc
push
adc
sahf
incb
xor
mov
or
leave
lods
ja
mov
xor
js
cmp
movsl
insb
pushf
push
xor
sahf
push
dec
xchg
test
int
and
add
decb
aaa
mov
push
aas
mov
cmp
rcrl
add
cmc
or
dec
pop
mov
inc
cmp
add
rcl
and
adc
or
lahf
lods
cli
sarb
xchg
stos
cltd
inc
xorl
adc
mov
cmp
movsb
mov
mov
jge
inc
sarb
lds
or
sarl
iret
mov
int3
repnz
jns
jle
lods
cld
fwait
mov
addl
je
mov
inc
addl
shll
mov
or
sbb
mov
test
insb
jne
xchg
jle
adc
pop
xlat
test
sarl
and
cmpsl
pop
jnp
lods
cmp
add
cmc
into
mov
enter
dec
xchg
jbe
ret
pushf
sub
ljmp
incl
jge
jge
adc
sub
sub
push
dec
sbb
lds
cmp
mov
adc
int
into
add
adc
aam
mov
mov
stos
mov
stos
push
insl
mov
addl
or
mov
jle
inc
cmc
sub
imul
cmc
into
add
in
sub
mov
adc
push
xchg
cli
mov
repnz
movsb
push
cmpsl
loopne
sarl
imul
mov
adc
fwait
into
inc
aaa
data16
nop
scas
aam
sarl
rcr
inc
sahf
nop
push
mov
iret
test
push
add
inc
cltd
ja
rcr
loop
shlb
outsl
rcrb
mov
popf
lock
and
jbe
call
xchg
or
adc
push
test
cmc
into
xchg
addr16
push
pop
lahf
rclb
fiaddl
shrb
mov
jge
cmpl
xchg
rolb
mov
cwtl
add
xchg
or
pop
cmpsl
ret
aad
in
mov
jb
dec
push
int
add
jp
mov
jle
mov
leave
clc
imul
aad
mov
push
lds
xchg
jae
decl
xchg
inc
cmpsb
pop
test
lcall
sub
adc
and
sbb
out
jp
sbb
dec
ror
out
aam
jae
addb
mov
fldl
cltd
adc
mov
jae
push
lods
jb
or
out
sti
push
adc
dec
pcmpeqw
or
mov
call
ret
sub
add
push
dec
jns
xor
fiaddl
cmp
fs
test
and
in
jg
jae
sbb
or
add
adc
xor
mov
push
mov
sub
cmc
fs
fstp
cwtl
int
or
xchg
adc
loope
lret
dec
mov
cwtl
std
xchg
nop
daa
adc
cmc
jo
dec
push
fmuls
roll
lods
cmp
sti
fs
mov
test
inc
xchg
scas
sub
inc
cwtl
aad
jae
jp
dec
sbb
sbb
leave
enter
js
fwait
popl
adc
sub
arpl
into
pop
sub
aas
nop
add
out
or
jp
sub
enter
in
jb
or
bound
adc
out
sahf
movsl
mov
xchg
dec
inc
jb
sub
xchg
lret
xor
fnstsw
cmp
les
loope
fisttps
cmp
adc
loope
fsts
filds
lods
outsb
ficomps
and
and
and
int
pop
jl
add
fcomps
xor
sbb
fsubp
jno
stos
in
sub
mov
les
icebp
or
push
cmp
push
lock
xchg
jp
mov
inc
xchg
xor
scas
lahf
mov
xor
nop
test
sub
jno
mov
push
fs
mov
cmp
ja
imul
sbb
dec
inc
cmpb
aam
add
mov
arpl
mov
lods
lods
scas
imul
iret
icebp
insb
and
lret
jp
loop
mov
ds
add
xor
jb
sbbb
ljmp
bnd
pop
lea
pushf
jle
or
sub
inc
and
cld
adc
mov
dec
ffreep
dec
mov
adc
and
lds
xor
or
and
movsb
mov
dec
subb
movsb
mov
add
addb
aam
imul
daa
and
or
ljmp
xor
leave
xchg
outsb
push
xor
xlat
pop
mov
mov
pop
je
sbb
rcr
add
push
fwait
or
xchg
mov
dec
and
mov
cmp
shll
aam
fldcw
adc
in
in
mov
sbb
add
mov
sahf
cmp
cmp
mov
pop
cmpsb
mov
pop
xor
inc
mov
imul
iret
push
mov
mov
pusha
pop
aaa
and
cltd
inc
imul
ds
cmp
adcb
mov
ljmp
pop
add
aaa
sub
mov
adc
xchg
sbb
push
mov
mov
jb
cmp
inc
ja
popa
or
jns
mov
pop
cmpsb
xchg
sub
push
outsl
push
dec
sub
fldenv
mov
and
in
cs
xor
push
and
ret
adc
shrb
es
mov
mov
frstor
outsb
and
scas
xlat
mov
xor
inc
ljmp
jae
aad
sub
xorl
add
fisttpl
mov
lds
add
enter
cmpb
or
jge
jo
jl
sub
andl
inc
push
imul
stc
jo
push
not
addb
mov
mov
lock
mov
mov
push
sub
loope
mov
cmpsb
in
mov
ret
lods
push
push
jo
push
fists
xrelease
leave
fmulp
or
leave
dec
adc
insb
or
ret
pop
push
shll
out
insb
mov
mov
mov
push
int
dec
outsb
dec
jno
testb
test
cwtl
and
mov
leave
xor
fucomp
adc
jb
sbb
xchg
inc
movsl
inc
inc
sarl
mov
mov
cmpsb
xchg
adc
add
add
push
lds
mov
mov
jno
imul
nop
add
mov
cmc
mov
aaa
je
addb
sbb
ja
jnp
cmc
jecxz
cwtl
cmp
fidivrl
xchg
std
nop
popf
or
jl
push
icebp
jnp
icebp
inc
imul
into
out
outsl
fisubl
lods
ret
fimull
cmp
cltd
jno
xchg
aad
and
dec
xchg
cwtl
stos
inc
or
scas
bndstx
idiv
xchg
xchg
dec
outsb
adc
add
and
cmp
mov
pop
loopne
orl
jmp
mov
xchg
fidivs
jo
int
es
jmp
lcall
hlt
or
outsl
cwtl
sub
mov
inc
test
pushf
mov
fidivrs
add
lock
mov
inc
sahf
nop
or
inc
pop
cwtl
fmuls
sub
and
inc
pushf
add
mov
ficomps
loope
ficompl
push
ret
sub
xchg
or
inc
add
xchg
addr16
leave
inc
fidivrl
xchg
enter
xchg
rolb
pop
inc
push
rorl
or
mov
push
aad
mov
out
pop
in
aaa
fstps
push
rol
movb
mov
pop
pop
adc
imul
out
cwtl
push
lahf
mov
mov
sub
and
or
nop
mov
cld
clc
mov
testl
xor
or
mov
test
mov
mov
ja
push
pop
shlb
aad
jb
orl
enter
test
xchg
xor
cwtl
cltd
sub
pop
out
pushf
add
mov
lods
jle
push
pop
pop
pop
xchg
and
mov
dec
repz
pop
and
jl
mov
sbb
ss
xor
pop
clc
fsub
push
imul
cld
subl
cmp
mov
cwtl
or
imul
stos
test
ret
or
mov
jo
fcom
enter
test
add
add
mov
pop
scas
mov
ret
lods
dec
push
cli
mov
fsubrs
xchg
mov
bound
movsb
sarb
mov
mov
rcll
mov
mov
mov
cmpsb
repz
xchg
andb
xchg
int
mov
pop
mov
mov
mov
orl
cmpsb
add
xchg
xchg
xchg
int
es
jge
rolb
mov
push
or
add
cmp
jns
cmp
mov
cmc
push
pop
adcl
hlt
ror
add
jo
outsl
mov
enter
leave
cltd
nop
lock
mov
xchg
fs
xchg
pusha
mov
xchg
pop
mov
dec
lods
jg
dec
and
dec
or
lahf
or
sbb
stc
dec
xchg
cmc
cltd
sbb
xor
jo
iret
inc
xor
and
mov
sti
pcmpgtb
lea
xchg
pop
jb
xchg
je
setbe
js
mov
cs
inc
sbb
adc
dec
add
fcompl
rcr
push
mov
xor
rorl
popa
nop
mov
mov
std
xchg
inc
xchg
test
xchg
lods
jnp
mov
movb
xchg
mov
lret
test
mov
movsb
mov
jg
enter
pop
pushf
inc
dec
flds
mov
jg
mov
and
mov
test
ljmp
je
mov
sub
inc
out
loopne
mov
loop
push
mov
cmp
rorb
movsl
cmpsl
xchg
incb
add
adc
mov
fwait
ds
shrb
jp
sub
add
cmpsb
mov
sub
pop
lock
mov
lods
xchg
test
and
push
jae
pop
lahf
pop
in
jle
adc
fidivs
jg
cmc
pushf
xchg
nop
mov
test
cmpl
inc
cwtl
incb
lea
repz
mov
inc
addb
and
popf
mov
mov
add
cltd
inc
nop
lods
adc
movsl
pushf
adc
fwait
mov
inc
mov
jmp
cmp
push
xchg
pop
inc
inc
sub
stos
inc
mov
ret
mov
mov
pop
fwait
mov
gs
nop
test
jb
lahf
adc
cmp
or
les
cwtl
inc
cmpsb
cmpsb
pop
mov
cmp
rclb
xlat
push
jg
jo
pop
mov
leave
and
mov
pushf
enter
test
lret
cltd
in
dec
adc
fimull
fcoms
roll
pop
stc
xchg
mov
leave
cld
fldenv
scas
sbb
test
cmp
and
lods
iret
int3
or
das
lahf
aaa
sbb
jmp
aad
cmp
add
inc
jp
sub
adcl
xchg
dec
fiaddl
sarl
call
rclb
fmul
popa
jmp
bound
cli
cld
lods
xor
mov
sbb
jnp
mulb
lret
rclb
cwtl
inc
scas
xlat
jg
mov
fistpll
fcoml
mov
mov
ret
xor
fcoml
mov
push
sub
subb
popf
or
mov
push
ret
shlb
rcll
cmp
xor
xchg
push
fwait
bound
jmp
pusha
xor
in
cmpsb
mov
jno
ss
fwait
mov
xchg
fisttps
fildll
mov
jp
movb
ret
xchg
sub
arpl
fisubl
mov
inc
int3
orl
lods
jne
push
mov
mov
rorl
shlb
cmpsb
shl
lea
add
mov
dec
ret
jmp
pusha
xchg
push
fadd
out
jno
sub
jecxz
rcr
inc
jbe
mov
shrl
rol
ljmp
popf
out
ret
xlat
or
ficoms
xchg
loopne
pop
jns
cmp
push
or
jo
jmp
out
unpcklps
movsb
fcomip
popl
addl
and
in
jne
sti
int
inc
movsl
adc
shll
jecxz
jne
mov
jle
inc
dec
sub
xor
test
dec
fstp
inc
inc
push
aaa
and
rorb
fldenv
shl
push
mov
jl
pop
test
ss
es
clc
push
popl
ss
add
xchg
and
rcll
addl
ret
inc
cmpsb
xchg
jle
out
cmpsl
mov
nop
mov
push
push
fdivrp
mov
push
jbe
call
call
xlat
mull
lret
push
push
add
scas
test
stc
popf
push
stos
pop
popf
inc
mov
insl
push
or
std
add
mov
cmp
pop
xchg
fiadds
sahf
mov
jp
pop
push
xchg
iret
enter
adc
or
jns
adc
mov
mov
push
nop
ror
xchg
or
movsl
push
ret
sbb
in
stos
outsb
mov
nop
call
or
shrb
adc
addb
subl
mov
adcl
add
ss
cmp
repz
cmc
cmpsb
or
mov
add
adc
cmc
mov
jg
dec
cmp
testb
dec
leave
and
das
fistl
orb
push
cmp
pop
aam
mov
shll
xchg
cmpsl
adc
inc
cs
ss
mov
inc
dec
xchg
xor
push
or
ja
lret
pusha
push
fwait
rcl
add
push
addr16
inc
aas
push
mov
sbb
xchg
js
lcall
lea
lret
lods
cmp
adc
ret
aad
push
push
pop
into
mov
add
inc
jg
cld
test
push
xchg
sub
lds
or
add
sbb
pusha
dec
call
movsb
jge
push
push
add
add
jnp
push
out
mov
out
xchg
jl
mov
jmp
mov
push
mov
lds
into
sub
adc
push
xchg
daa
and
push
orl
andl
mov
inc
fcomps
or
xchg
pop
cmpsb
rcr
pop
mov
mov
dec
inc
xchg
mov
xchg
nop
insl
xor
jl
mov
mov
es
and
push
hlt
or
cwtl
or
into
mov
int
mov
xor
enter
fldcw
mov
or
jbe
push
mov
mov
movsl
mov
addb
or
gs
movsb
and
insb
outsl
fldl
adc
sbb
pusha
ss
push
jg
jne
pop
pop
loop
sbb
mov
andl
dec
pop
ret
test
movsb
inc
xor
jp
and
or
enter
shll
mov
inc
sub
and
test
mov
xchg
pop
bound
gs
adc
int3
and
mov
enter
ror
and
gs
fcoms
lds
in
adc
pop
dec
in
fdiv
pop
test
push
mov
aam
arpl
test
mov
mov
xor
and
mov
mov
insb
inc
push
push
adc
xchg
or
jecxz
dec
add
imul
lret
dec
jns
movsl
in
test
fsub
add
lea
nop
cmp
loope
mov
sub
sbb
and
jp
loopne
xor
xchg
add
add
mov
mov
cmp
lods
inc
cmpsl
mov
jo
mov
xchg
sbb
nop
cmc
mov
sbb
ret
add
cmc
xchg
and
cmp
mov
rcrl
nop
mov
push
icebp
mulb
dec
lahf
mov
push
scas
inc
pop
pop
cwtl
add
pop
sbb
inc
ja
popf
cltd
pop
pop
stos
xchg
mov
push
in
fwait
addl
ja
scas
xchg
add
lods
loopne
push
add
sub
fwait
jbe
arpl
movsb
inc
xor
ja
imul
inc
xchg
imul
push
or
lods
sahf
add
insb
ret
push
in
test
inc
or
jle
jl
xlat
xor
lahf
xchg
pop
lea
jle
xchg
popf
pop
ljmp
addr16
sub
inc
pop
jmp
pop
pop
outsb
mov
dec
out
dec
int3
cmpsl
andb
mov
add
push
orl
insl
lahf
jne
mov
jecxz
rep
dec
je
push
mov
mov
adc
leave
loope
add
lods
xchg
mov
loop
filds
iret
jmp
hlt
add
jo
rcrl
mov
sahf
and
fptan
adc
ret
cmpsl
imul
sbb
jno
ret
pop
cwtl
xchg
fwait
imul
dec
leave
sbb
pop
in
mov
push
mov
cmp
mov
or
roll
cmp
stos
xchg
test
js
inc
mov
cmc
add
xlat
loopne
cli
addr16
pop
push
call
xlat
cs
daa
pop
inc
std
add
jne
cmp
decl
jle
fwait
jae
or
mov
sbb
leave
xorb
inc
fcmovnu
fisttps
sbb
adc
invd
mov
cltd
mov
mov
rcll
nop
push
cmc
aad
sti
adc
adc
mov
mov
inc
imul
data16
cmpsl
lret
loop
fbld
aam
mov
fists
rorb
add
push
les
xchg
mov
mov
fcomip
in
jmp
pusha
jmp
pop
test
add
divb
in
or
mov
aad
ja
lcall
mov
cmpsl
in
call
movsb
mov
movsl
pop
lret
cld
fstp
insl
mov
in
fxch
push
hlt
xchg
sbb
mov
inc
and
and
inc
dec
lock
out
push
add
sahf
ja
ds
test
hlt
sbb
adc
mov
mov
sbb
shlb
mov
mov
not
pop
mov
imul
jno
xchg
inc
add
cmp
popf
mov
mov
xlat
hlt
in
xchg
fwait
js
mov
inc
aad
pusha
shlb
inc
mov
das
jb
clc
enter
outsb
cmpsb
shrb
adc
mov
lahf
mov
xchg
mov
mov
push
leave
ljmp
mov
mov
sbbl
mov
adc
cli
in
in
idiv
adc
mov
jecxz
mov
or
fbstp
add
flds
test
rcr
sub
sbb
mov
ja
mov
mov
loop
lcall
jge
insb
dec
push
rcll
push
sub
fidivrs
test
test
jl
and
call
push
mov
mov
lret
in
sub
fisttpl
or
shlb
jl
pop
dec
sbb
data16
popa
mov
cwtl
shrl
aaa
jbe
movsl
lods
push
insb
js,pn
inc
lret
dec
jl
mov
js
mov
xchg
cwtl
add
stc
push
push
stc
aad
das
push
jb
add
shrl
mov
pusha
testl
in
pop
ljmp
xchg
fbstp
mov
cmpsb
mov
js
push
rcrl
inc
les
push
pop
mov
fmuls
mov
xchg
shlb
cmc
lret
aas
lods
call
add
xchg
ds
pop
mov
or
dec
cmp
ss
mov
ret
pusha
out
jge
xor
inc
shll
mov
mov
nop
push
sub
push
xchg
test
mov
insl
push
hlt
ljmp
js
adc
mov
jmp
fucomp
imul
pusha
xlat
cmp
test
or
rcrb
add
clc
test
into
or
int3
add
test
xor
test
cmpsb
es
enter
movsb
inc
int
xchg
or
mov
test
in
sbb
jmp
add
xor
dec
call
test
xchg
fnstsw
mov
das
dec
xor
xchg
pop
shl
sbbb
jmp
call
jg
das
mov
movsl
xchg
shlb
cltd
les
hlt
mov
pop
test
js
lea
popf
sahf
add
adc
or
rcrb
inc
xchg
in
test
sti
mov
je
inc
lea
jmp
jp
sbb
sbb
or
cmp
mov
jno
lret
xchg
aaa
jo
xchg
mov
loopne
cwtl
push
inc
sub
popf
rclb
xchg
ss
je
scas
push
bound
mov
mov
test
inc
orl
push
shr
mov
add
sbb
fiadds
ret
xchg
jmp
out
mov
adcl
rolb
int3
loopne
test
rorl
push
movsb
lea
cmp
push
and
jge
inc
cmc
andb
adc
jbe
cs
ret
push
decl
sbb
movsl
insl
in
sbb
or
dec
popf
jo
mov
add
push
xor
test
aaa
xor
js
inc
cmp
push
popa
pop
pop
imul
xchg
jg
movsl
or
cmpsl
mov
test
adc
cli
xlat
cld
mov
nop
mov
lea
popa
js
mov
mov
lahf
sahf
adc
mov
orl
cld
sub
push
mov
xlat
loop
insb
aam
in
imul
inc
sub
sarl
xchg
cmp
sub
add
pop
inc
out
test
xchg
or
mov
mov
cmc
aad
sub
push
or
ja
aad
stos
inc
cmpsl
test
les
pop
pop
push
mov
das
sbb
imul
push
push
or
mov
inc
pop
mov
enter
or
sbb
test
fsubs
add
cwtl
in
addl
jmp
fisttps
les
dec
lea
adc
test
dec
xchg
mov
add
jmp
je
xchg
jl
inc
movsb
inc
insb
adc
xchg
roll
pop
subb
push
pop
pop
and
xchg
std
jl
cwtl
aaa
jmp
pop
rcll
loope
js
cmp
inc
imul
or
mov
popa
nop
out
jns
cmc
mov
mov
sarb
push
or
je
add
xorl
imul
je
mov
xchg
js
sub
xchg
jbe
ret
sahf
test
add
aad
pop
das
lahf
xor
lods
adc
xchg
imul
xchg
cltd
inc
lahf
mov
and
mov
sub
xchg
mov
push
shlb
hlt
add
cmp
mov
jae
cmc
and
xchg
xlat
bound
xor
nop
xchg
push
imul
cwtl
imulb
xchg
xchg
push
pop
mov
adc
jo
push
pushf
dec
dec
xor
adcw
mov
xchg
fdecstp
or
iret
fwait
movsl
pop
mov
mov
mov
xlat
das
out
jo
mov
lret
mov
bound
ret
cs
pop
std
mov
cwtl
iret
stc
into
imul
pop
aam
loop
mov
xor
dec
cwtl
fcoms
or
or
not
stos
jle
adc
nop
sbb
rcr
loop
fisubrs
nop
cmpsl
mov
jno
addl
sub
add
addl
xchg
add
mov
dec
subb
clc
xor
or
add
repnz
iret
pusha
outsb
arpl
mov
mov
xchg
mov
mov
mov
xchg
push
test
sbb
in
xor
mov
adc
leave
lret
cmpsb
pop
mov
add
es
adc
lcall
fcoml
mov
mov
or
push
xchg
or
insb
cmp
jo
and
je
les
and
jl
pushf
or
push
lcall
jno
mov
or
lret
ds
adc
push
adc
aad
mov
or
cld
mov
mov
jl
jno
xor
inc
shll
jo
adc
jns
stos
mov
les
test
cltd
enter
movsb
pop
cmpl
ror
xlat
ss
xor
cmc
mov
xchg
decb
stos
test
into
sub
outsb
sub
outsl
das
enter
andl
lds
dec
mov
xchg
movsb
insb
enter
xor
adc
enter
or
or
mov
mov
fimull
push
xchg
repnz
mov
aaa
pop
inc
rorb
lds
mov
sar
lret
jno
mov
cwtl
stos
fadds
mov
rcr
xor
mov
xchg
push
inc
sub
outsl
out
lods
or
xlat
shrl
cld
jb
xlat
cwtl
nop
lcall
xchg
test
cmc
addb
jg
dec
push
insb
pop
insb
inc
mov
popa
or
dec
mov
mov
repnz
xor
inc
fcoms
repz
dec
mov
push
push
scas
push
out
iret
addr16
lahf
and
xchg
enter
aas
add
incl
arpl
outsl
push
xor
xorl
lcall
jmp
push
ret
lods
ja
test
mov
mov
mov
lods
test
int3
insb
and
and
je
sarb
mov
fldl
popl
adc
or
xchg
pushf
aad
stos
cmp
hlt
dec
imul
es
cmp
lods
sbb
xchg
stos
xchg
mov
imul
hlt
jmp
fs
add
popf
sub
mov
pop
cwtl
cwtl
movsl
adc
push
leave
inc
cmp
mov
test
xchg
call
out
pushf
dec
in
movsl
out
imul
pop
sub
sbb
divb
int3
push
mov
mov
leave
push
inc
add
shrb
faddl
jl
lea
inc
mov
and
loope
hlt
xchg
lds
int3
outsb
mov
fidivrs
dec
jecxz
fimuls
ficoml
das
cmp
decb
outsl
jo
mov
pop
xchg
icebp
inc
test
inc
addl
popf
lods
cmpsb
mov
xor
mov
hlt
imul
push
pop
push
das
xchg
lret
xchg
xchg
test
adc
xchg
cmc
aad
xor
lret
dec
dec
mov
add
jle
pop
sub
and
in
mov
insl
out
lret
sti
mov
stc
xchg
sub
aam
mov
rcll
sbb
and
std
fs
imul
in
movsb
cmp
dec
popf
xchg
lret
repz
popf
or
pop
es
movsl
xor
pop
sbb
cli
mov
xchg
jbe
xchg
or
mov
or
scas
fsubs
mov
and
mov
rclb
mov
mov
push
in
add
add
andb
jns
fwait
pushf
cmpsl
cmpsb
pusha
fldenv
mov
les
push
into
cmpsl
shlb
mov
mov
repz
popf
popl
adc
mov
stos
xor
cltd
mov
cmp
sub
mov
movsb
fisubrl
lock
sub
ret
fiaddl
add
scas
xchg
xlat
push
in
sarl
mov
mov
pushf
sub
jmp
and
add
xchg
movsb
jo
lods
mov
mov
jno
add
xchg
mov
in
mov
xchg
push
std
cmp
and
lcall
lahf
loopne
and
out
cmpsb
xchg
or
cltd
je
add
pop
add
dec
cmp
stos
lret
lcall
outsb
add
pusha
jge
test
push
mov
sbb
lret
jle
xchg
lahf
and
test
dec
push
mov
cmp
addb
add
inc
push
fiadds
fucomip
add
aam
hlt
test
adc
mov
jmp
add
mov
nop
stos
mov
and
adc
jp
movsl
mov
clc
sub
scas
mov
std
mov
mov
mov
pusha
das
shl
and
shrb
movsl
popa
fcmovnbe
mov
dec
xchg
aam
fldenv
push
xchg
fbld
fstps
rorb
aad
mov
push
cli
lods
loop
mov
jns
inc
jmp
stos
rcrb
fildl
sbb
add
test
out
out
imul
stc
lret
jae
mov
mov
inc
out
insl
mov
popf
or
enter
ljmp
and
and
inc
hlt
cmp
insb
push
int
es
fwait
js
cld
les
cli
call
je
lret
jle
mov
push
mov
test
mov
add
jecxz
rcrb
push
sbb
mov
jg
ljmp
or
dec
pop
add
aas
xor
jnp
aad
nop
jge
inc
add
lahf
adc
icebp
lea
imul
es
jae
push
jb
lods
mov
test
jno
adc
xchg
out
data16
fcoms
xchg
inc
imul
sti
xchg
ljmp
jbe
lret
add
in
mov
or
fisttpll
pushf
pusha
push
xor
mov
scas
test
adc
cmp
and
add
mov
mov
sub
sbb
mov
lea
inc
pusha
mov
jne,pn
loopne
or
xchg
xlat
repnz
jmp
gs
jle
dec
mov
and
xchg
lods
fidivrl
rorb
fists
imul
add
hlt
shrl
cmc
inc
adc
cmpl
inc
pop
mov
loopne
jmp
inc
outsb
gs
mov
or
inc
out
jno
leavew
fmuls
cmpsl
in
cli
push
movsl
rcrb
nop
rolb
fcoml
cmpb
imull
xchg
rclb
push
or
mov
rcrb
mov
cwtl
sub
in
repz
inc
xor
adc
push
push
push
ret
sbb
xor
js
sub
inc
icebp
movb
pop
outsb
push
mov
xchg
xor
movsb
sub
nop
xchg
add
fiadds
fisttps
add
dec
rorb
lock
test
cmc
pushf
movsl
mov
mov
or
scas
fistl
push
mov
mov
cmpsl
leave
shlb
push
mov
mov
pop
mov
imul
mov
sub
lock
ret
hlt
push
jno
and
shll
enter
jge
mov
dec
addr16
fstpt
jnp
push
mov
frstor
xlat
pusha
es
or
dec
movsb
cltd
movsb
mov
inc
xchg
pop
call
roll
adc
jo
test
nop
or
add
mov
jno
insb
inc
or
insl
pushf
fisttpl
lods
sbb
push
ja
xchg
shrl
sbb
cltd
push
ljmp
std
pusha
insb
xchg
sub
xchg
xchg
xor
stc
dec
inc
fsubs
push
arpl
cwtl
pop
gs
aad
jnp
dec
xchg
mov
and
shll
dec
fildl
outsb
orl
xchg
mov
add
inc
inc
jae
pop
ret
or
les
mov
fcoms
cmpsb
dec
mov
mov
xor
lea
or
stos
inc
repnz
add
fstps
mov
jmp
sub
sahf
into
mov
xchg
mov
adc
mov
outsb
inc
fwait
test
xchg
adc
int3
jnp
mov
nop
subb
add
fmuls
enter
dec
test
imul
jmp
vunpcklpd
ds
lret
mov
inc
mov
nop
xchg
mov
pushf
leave
fwait
adc
lcall
stos
fimull
cli
adc
mov
nop
or
jle
mov
mov
ret
int3
mov
ds
xchg
cltd
mov
imul
mov
insl
ds
loope
xchg
pushf
imul
hlt
fcoms
jae
cli
lock
jns
xchg
test
add
and
das
jl
rolb
dec
loopne
cwtl
in
xor
testb
scas
in
jle
mov
or
or
mov
ja
xor
jns
mov
mov
push
cmp
cwtl
pushf
xor
mov
cmpsl
mov
xchg
imul
push
rcll
nop
fdivrl
sub
xor
iret
push
into
out
inc
fxch
jae
cli
cltd
stos
xchg
xchg
mov
jb
sarb
push
nop
dec
cli
push
jg
mov
xor
pop
ljmp
js
jl
int
outsl
jae
ficomps
sbb
lret
test
jg
clc
nop
cmpsl
push
push
mov
std
test
imul
pushw
dec
or
in
int3
mov
stos
sub
mov
rorb
clc
sbb
aad
pop
int
xchg
mov
adc
into
mov
into
test
sbb
xor
xchg
inc
mov
test
inc
mov
repz
mov
xchg
adc
mov
sbb
mov
movsl
or
call
shll
add
adc
inc
loop
in
mov
or
fcomps
rorb
and
fsubs
data16
nop
popf
jmp
sbb
hlt
cmp
arpl
test
jg
into
cmc
je
push
fldcw
subb
mov
popf
jae
xchg
push
xchg
aaa
pop
mov
or
pop
inc
jns
popa
pop
jno
cmc
inc
or
fldcw
in
inc
rcll
lock
int3
mov
aam
rorb
fstl
xor
mov
mov
mov
xchg
repnz
test
cmc
pop
mov
or
add
push
cwtl
mov
leave
and
shll
stc
pusha
call
push
mov
test
cmpsl
xchg
xlat
or
ds
adc
xchg
insl
ficoml
mov
xchg
rcl
dec
roll
xlat
or
mov
imul
add
std
or
imul
adc
and
mov
mul
xchg
pop
testb
mov
fldenv
shll
leave
dec
push
inc
arpl
stos
or
js
fcoml
movsb
adc
xlat
or
repz
pop
inc
imul
dec
push
mov
mov
stc
int3
testb
push
jp
mov
test
movsl
and
les
dec
stos
mov
rolb
xchg
push
push
movsl
mov
adc
and
imul
mov
addl
fildl
sbb
hlt
enter
xlat
cld
dec
arpl
imul
shlb
cltd
sti
xlat
stos
fsubs
pushf
cmpsb
xor
push
in
xchg
repnz
hlt
cmp
xor
dec
clc
sub
ds
mov
inc
inc
xor
loop
sti
mov
inc
adc
add
add
das
adc
mov
dec
sub
je
add
sub
add
mov
xchg
or
xlat
mov
mov
movsb
pusha
xlat
in
int
inc
int
dec
fs
push
ret
adc
mov
rorl
inc
ret
xor
push
movsb
xchg
pop
cmp
icebp
test
mov
mov
push
lods
in
xchg
cmpsl
sub
or
mov
test
aad
sub
push
jp
pusha
aad
fmuls
mov
inc
out
dec
inc
insb
js
add
fimull
and
dec
mov
fmuls
adc
dec
iret
mov
lods
mov
or
fmuls
mov
cld
lds
jmp
pusha
xor
mov
sub
jo
xchg
mov
stos
jo
pop
shlb
or
sbb
cmp
inc
enter
mov
pop
xor
mov
xor
into
outsb
lds
roll
rorb
pusha
mov
js
stos
fildl
in
xchg
fsts
push
imul
xchg
mov
inc
cmp
and
mov
js
movsl
sbb
sub
sahf
xor
in
nop
inc
sub
cmp
xchg
sbb
dec
pop
scas
movsl
dec
repz
cltd
imul
setl
in
inc
or
or
js
dec
cltd
sub
xchg
cwtl
adc
flds
stos
sbb
or
jmp
movsl
hlt
out
xor
sub
pusha
cmpsl
hlt
jle
ficoml
mov
jp
iret
dec
jp
fadds
push
aam
hlt
fwait
xchg
divl
leave
cmpsb
mov
xchg
bound
or
sbb
rcr
popf
adc
cmc
xchg
imul
test
fs
test
das
or
shlb
lea
outsb
fdivl
mov
stos
sbb
js
mov
enter
dec
pusha
xchg
mov
xchg
outsl
xchg
xchg
inc
sub
jecxz
loop
xchg
movsb
fiadds
stos
mov
xor
addb
inc
notl
push
test
fadds
fcomps
sarb
scas
dec
sub
add
xchg
or
pop
pop
ror
cmc
mov
test
mov
inc
cmp
jl
lret
mov
and
lahf
xchg
jmp
nop
popa
push
dec
stos
inc
mov
push
mov
xchg
jle
ret
jl
ljmp
repnz
xlat
adc
sub
and
mov
std
xchg
lds
xchg
sub
xchg
sub
push
add
xlat
mov
adc
fwait
push
sbb
or
ljmp
fsubs
shrl
fldl
stos
pop
out
enter
rol
daa
std
sbb
xor
dec
cwtl
mov
cmpsl
mov
lea
push
or
rol
enter
jp
mov
enter
xlat
dec
xchg
mov
push
pop
sbb
stos
jae
daa
cmpsl
ror
jp
addr16
fwait
movsl
scas
aas
mov
sub
addb
cmp
int3
cmp
ljmp
mov
dec
cwtl
imull
pusha
mov
xchg
xor
bound
enter
fcmove
fists
cmp
dec
lret
jne
jnp
je
and
jo
inc
xchg
push
aas
mov
push
insl
popf
xlat
inc
call
iret
mov
mov
sub
in
mov
mov
stos
push
xlat
push
mov
mov
rclb
mov
cltd
adc
xchg
inc
push
mov
mov
pusha
cmp
pushf
popf
shlb
std
adc
xlat
aam
jp
adc
xlat
lahf
or
ret
mov
ret
mov
ret
and
iret
mov
jnp
mov
stos
or
sbb
pop
dec
or
out
add
outsl
int
xchg
sub
push
mov
lret
les
add
scas
or
xchg
mov
movsb
mov
inc
imul
add
shrb
xchg
movsl
sub
jmp
adc
dec
push
and
aaa
imul
xchg
cmp
stos
test
ret
loop
sbb
add
aaa
adc
add
ret
jb
cmp
and
cli
in
mov
or
orl
push
lods
sbb
lcall
push
mov
mov
fsubs
mov
shrl
out
test
push
mov
movsl
jns
lret
test
adc
cltd
lret
jp
push
cmp
mov
inc
rcr
inc
mov
sub
nop
add
fs
mov
mov
or
inc
ds
xchg
add
adcl
test
out
sbb
dec
xchg
fistpll
mov
inc
mov
rcrb
pop
sub
add
int3
mov
rorb
lahf
push
jle
inc
inc
fld
clc
roll
cmp
sbb
std
jns
mov
xor
push
xchg
mov
push
add
lahf
jg
aad
dec
rcrl
jnp
fcmovnbe
xchg
test
pop
mov
movsb
aas
enter
cmp
jb
mov
fdivrl
repnz
hlt
xchg
xchg
xlat
jg
jno
push
leave
xchg
cs
fsubs
andl
fldcw
mov
jb
not
mov
or
hlt
out
mov
adc
icebp
push
les
imulb
mov
imul
inc
imul
adc
mov
inc
test
adc
sbb
mov
mov
inc
testl
stc
nop
cmp
push
xor
cltd
test
xchg
testb
jp
push
add
icebp
xchg
in
cmc
ds
sbb
cmovg
inc
mov
test
sahf
dec
nop
push
sub
sub
mov
pushf
push
loopne
rorl
xchg
int
and
sbb
fmull
adc
cmc
adc
xlat
sbb
adc
pop
std
popf
test
stos
dec
fwait
daa
pop
push
test
cmpsl
jnp
lds
add
imul
cmpsb
ss
sahf
xchg
xchg
pop
dec
or
test
ret
push
push
movsl
pushf
enter
nop
hlt
jmp
xchg
popa
sbbb
mov
lret
test
adc
lcall
sub
jmp
inc
xorl
push
sub
stos
and
aad
xor
pop
bound
les
in
adc
les
cmp
lock
iret
ret
cmpsl
std
cli
cmpsb
aam
add
mov
and
test
or
xlat
imul
mov
stc
not
dec
in
add
loope
les
xor
sub
xchg
popl
rcrb
jmp
jo
dec
push
mov
test
fldl
xor
nop
adc
mov
and
jb
sahf
or
les
push
test
sbb
enter
mov
mov
push
cmpsl
testb
lret
mov
lret
lcall
mov
pop
cmp
mov
test
push
xor
jnp
push
mov
push
lea
add
imul
xchg
xchg
icebp
movsb
mov
bound
push
imul
leave
popf
icebp
and
and
and
nop
and
cld
push
push
out
sbb
xchg
push
sub
shrl
jmp
xchg
cmp
mov
fstl
movsl
shll
jno
mov
hlt
rclb
iret
adc
imul
inc
leave
xchg
fwait
mov
xor
push
movsl
lret
push
mov
stos
sub
addb
push
or
add
jns
sbb
cmc
pop
test
or
fildll
out
pop
lret
xlat
je
sbb
es
add
xchg
shll
mov
inc
add
pop
incb
cwtl
popf
xchg
or
fidivl
pop
push
and
andl
jl
es
xor
dec
mov
xchg
or
or
mov
notb
sbb
aad
sarl
cmpl
shll
inc
mov
mov
aas
and
sub
pop
push
mov
mov
andl
mov
and
adc
out
xchg
ret
xchg
add
lods
add
jbe
sbb
fwait
adc
cmc
ds
add
imul
inc
push
scas
jl
cmpsl
in
mov
test
loope
setge
enter
xchg
gs
add
push
push
dec
inc
call
xchg
xchg
call
les
nop
add
lock
int3
sbbl
fiadds
fwait
xchg
mov
mov
clc
aas
nop
adc
sarb
mov
xor
imul
fwait
out
pop
sbb
xchg
sub
nop
aad
pop
fsubs
xchg
xchg
stc
loope
mov
imul
bound
xchg
cmp
and
adc
out
xchg
int3
xor
imul
jns
xchg
mov
cltd
adc
aam
divb
xor
adc
xchg
add
jp
xchg
or
cwtl
mov
mov
mov
cmp
int3
nop
aas
les
or
cmp
ja
shrl
cmp
imul
clc
xchg
movsl
xlat
fs
js
mov
scas
imul
pop
jno
cli
mov
imul
in
pop
loope
pop
and
mov
aam
mov
sbb
stos
leave
pop
fisubs
test
jle
popa
jg
push
call
cmp
mov
insb
pop
jne
pushf
mov
push
cmp
fisubs
aam
xchg
xchg
dec
xchg
nop
orl
roll
fistpll
in
add
int3
sbb
jo
in
fwait
mov
jg
stc
or
popf
add
test
ljmp
or
repnz
xchg
xchg
push
mov
inc
jae
sbb
xchg
lahf
dec
xchg
insb
xchg
mov
add
cmp
inc
add
or
movsl
xchg
movsl
ljmp
mov
sbb
cli
push
cmp
mov
push
mov
test
pusha
mulb
or
fucomip
leave
cmpb
and
mov
sahf
stos
fs
xchg
or
sbb
mov
mov
dec
inc
pusha
push
mov
sti
arpl
dec
mov
cmp
xor
int3
xchg
pop
rcrl
push
and
mov
mov
add
inc
mov
nop
pop
test
jecxz
push
or
add
dec
mov
sbb
rcrb
imul
xor
daa
sub
sub
orl
cmpsl
pop
mov
in
add
aad
nop
out
mov
cmpsl
cmp
icebp
imul
jp
jl
test
mov
cmpl
jo
aad
mov
sub
lret
movsb
mov
test
bound
fisubs
mov
inc
data16
jb
lds
push
adcb
push
sti
or
sbb
add
shll
movsl
rol
sub
lahf
or
jl
sbb
ret
lock
adc
inc
aaa
gs
test
sahf
imul
jmp
in
add
xchg
cmpb
pushf
stos
xchg
jmp
sahf
lret
and
add
negl
ljmp
mov
mov
rorb
xchg
fcoms
cmp
mov
xchg
xchg
cmp
sub
orb
add
xor
aas
adcl
fwait
cmp
pop
mov
mov
mov
xchg
insb
mov
xlat
or
inc
xlat
ror
adc
sarb
repz
js
sbb
je
bnd
and
mulb
xchg
mov
cmp
cwtl
imul
xchg
enter
mov
mov
ror
jl
add
sub
fwait
dec
andl
add
addb
data16
mov
push
or
inc
mov
js
pop
mov
movsb
xorb
or
js
test
ds
xlat
adc
lcall
xchg
imul
cmpb
in
jae
ja
stos
sub
push
cmp
jle
sahf
push
inc
hlt
mov
mov
bnd
jns
imul
add
js
sbb
in
pop
jmp
mov
lea
hlt
inc
add
mov
dec
pop
negl
mov
sub
xchg
xor
sbb
dec
adc
pop
dec
iret
xchg
outsb
lds
rol
aas
sub
mov
notl
mov
mov
sarl
ljmp
mov
jg
nop
cmp
add
leave
les
sti
sbb
xchg
test
cmp
adcl
jg
dec
in
mov
addl
xchg
mov
scas
scas
add
push
xchg
xor
mov
and
js
inc
mov
xchg
fucomip
jnp
mov
fs
mov
stos
pop
xor
mov
enter
lock
jge
fs
popf
or
dec
mov
pop
clc
ret
fs
sbb
fdiv
cld
je
push
pop
xchg
or
or
mov
adc
add
xor
push
sbb
pop
or
hlt
enter
mov
inc
sar
dec
cmp
and
and
ret
stos
mov
hlt
mov
lods
and
dec
fildll
or
bound
pop
xorl
push
js
push
icebp
inc
jmp
inc
cld
mov
lret
push
nopl
pop
or
adc
jbe
andb
lahf
push
xchg
jmp
js
jb
dec
add
add
cld
mov
xchg
xchg
xor
test
jp
mov
decb
lcall
mov
hlt
in
subb
jmp
jle
xorl
arpl
adc
pop
filds
xchg
add
push
out
cmpsl
enter
ljmp
and
dec
sbb
mov
adc
push
nop
mov
mov
cwtl
xchg
sbb
mov
jo
jae
outsl
or
adc
or
adc
pop
int3
sub
leave
pop
mov
sbb
popf
pop
int3
and
and
lods
pop
cmpsb
leave
xchg
and
nop
xor
pushf
mov
mov
sti
popa
mov
dec
stos
add
inc
dec
movsl
pusha
sbb
nop
mov
pop
mov
lock
adc
aas
jb
repnz
int3
subl
fimuls
mov
outsb
xchg
dec
jge
int
or
or
sarl
jg
cs
adc
cmpsb
outsb
mov
into
outsb
fimull
psrld
adc
mov
or
hlt
lods
lock
adc
cmp
add
inc
notl
adc
push
adc
enter
divb
fidivs
adc
test
adc
repnz
sbb
fistpl
call
and
and
cwtl
ss
stc
aas
mov
mov
movsb
push
add
rclb
xor
shl
inc
and
and
add
test
mov
fsubrl
test
mov
sub
pop
push
cmpsl
movsl
hlt
push
test
imul
pop
mov
xor
dec
aad
scas
mov
jle
cmc
nop
sub
mov
jb
jbe
mov
cmpb
mov
push
test
lcall
insl
mov
xchg
mov
rcrl
cmp
ret
insb
xchg
sub
jb
xlat
push
repnz
popf
inc
int
push
adc
movsw
push
fildll
adc
shlb
shrb
jno,pn
pop
add
xchg
frndint
ds
add
insb
imul
je
lds
add
aam
test
xlat
or
mov
xchg
stos
dec
jp
and
orl
pop
fistpl
or
ljmp
push
mov
or
sti
les
mov
lahf
cli
and
mov
mov
loope
test
ret
imul
repz
out
xchg
imul
sbb
pmulhw
rol
pushf
mov
xor
or
arpl
and
rolb
xchg
and
cmpsb
mov
xor
inc
mov
lahf
mov
repnz
add
out
mov
pusha
int
pop
ds
lret
pop
int3
nop
hlt
cmc
xchg
mov
jge
cwtl
pop
fsts
jge
int3
pop
iret
rolb
loope
xlat
repz
mov
cwtl
insl
cmpsb
rcrb
addb
push
mov
mov
test
in
cmc
lahf
xchg
and
data16
xchg
mov
dec
mov
pop
mov
push
jnp
add
imul
inc
inc
pop
pcmpeqd
push
xchg
sub
adc
repz
fisttpll
cmp
add
cmp
xchg
push
xchg
cmp
and
mov
test
ja
loopne
cmc
mov
mov
sbb
lea
js
push
enter
in
mov
rorl
sub
movsb
mov
mov
xchg
cltd
push
stos
mov
fildll
mov
adc
fadd
inc
into
outsb
stos
sar
test
ficomps
shrl
sub
jle
mov
xor
out
jne
mov
cmpsb
insl
dec
mov
jg
cmpsb
xlat
rol
mov
adc
mov
fildll
push
add
jge
outsb
lods
mov
lea
jecxz
fs
or
sub
push
faddl
and
fs
push
jbe
mov
hlt
and
or
filds
outsl
mov
fnstenv
mov
jnp
mov
inc
cltd
jbe
mov
stos
gs
add
adc
imul
les
cmc
testb
adc
pop
loop
mov
or
cmc
mov
addl
das
dec
mov
lar
stc
mov
popl
xchg
aad
pusha
bound
repnz
pushf
loop
add
inc
pop
loopne
fiadds
xchg
mov
xor
or
daa
aam
in
xchg
cmpb
frstor
cwtl
xchg
clc
fmuls
insb
loopne
lea
push
std
cmpsl
or
and
shl
add
mov
movsb
ret
ret
mov
sub
add
push
jmp
mov
push
fidivrs
add
add
mov
add
add
mov
mov
enter
outsl
scas
inc
jae
pop
jb
fildll
imul
shrl
cmp
movsb
aad
mov
xchg
or
fs
mov
rolb
xchg
push
outsl
leave
xchg
cmp
test
jo
mov
mov
hlt
bound
lea
test
fnstsw
xchg
or
dec
mov
or
vcompresspd
pusha
adc
loope
data16
hlt
and
mov
jnp
xor
jp
mov
imul
mov
mov
cmp
or
add
jbe
mov
jo
sub
iret
popf
or
notb
or
outsl
dec
fnstcw
repz
adc
push
rol
inc
mov
repnz
or
fld
add
mov
cmp
mov
scas
adc
movsb
cmp
cmp
cmpl
xchg
dec
fnstsw
inc
push
or
xchg
adcl
add
jp
ds
test
jo
fcmovne
jge
pop
movsb
and
test
jle
cwtl
push
dec
js
call
arpl
and
cld
add
js
lahf
push
daa
mov
outsb
nop
and
and
jns
mov
push
lret
inc
pop
push
rclb
sbb
icebp
lcall
loope
mov
inc
test
jg
ret
xlat
pop
divb
sbb
shrb
imul
out
scas
cmpsl
mov
test
xchg
add
enter
imul
test
movsl
test
inc
mov
test
or
add
mov
cltd
or
mov
dec
add
or
xor
pop
in
cwtl
push
push
inc
inc
pusha
lods
or
cmpl
jno
dec
or
push
subb
add
and
test
fdiv
test
inc
ljmp
inc
add
std
sub
add
mov
cld
frstor
mov
push
loope
cwtl
jmp
jnp
mov
or
filds
or
test
xor
sub
lret
cld
rorb
mov
scas
rcrl
mov
xadd
imul
sbb
dec
test
fsts
jl
int3
inc
lret
cmp
ljmp
mov
popa
pop
push
jbe
es
mov
push
lret
cmp
push
subb
push
imul
les
movsb
out
xchg
adc
rorb
out
sahf
inc
hlt
xchg
xchg
cwtl
test
jb
inc
add
push
int3
js
mov
xchg
fimuls
jg
xorb
mov
ljmp
shlb
imul
filds
ficoms
ret
inc
test
aad
xchg
mov
inc
stos
jo
imul
push
mov
or
fcompl
mov
mov
inc
mov
std
js
add
push
adc
int3
dec
push
sub
or
ficoml
mov
aam
movsl
lods
jnp
and
mov
enter
push
inc
mov
fwait
xchg
lods
cs
mov
repz
mov
incb
subl
add
mov
movb
cli
movsb
and
sarb
jp,pn
jge
fsts
jle
ljmp
inc
mov
les
push
popf
adc
dec
push
mov
mov
movsb
sbb
adc
stos
and
inc
hlt
or
inc
repz
xchg
loopne
mov
rolb
add
inc
add
mov
aaa
lock
mov
xchg
loope
int3
in
jge
sti
andb
enter
inc
add
fwait
into
cmpsl
jle
dec
dec
incl
in
mov
rcr
cmp
adc
mov
ret
push
shll
mov
movsb
dec
add
sahf
cmc
int
fs
mov
jl
mov
imul
inc
enter
sbb
jne
push
adc
add
xchg
pusha
cld
cmpl
arpl
or
movsl
add
rcl
mov
mov
stc
lea
cld
pop
jg
and
xchg
push
sti
push
xor
lret
pop
cmp
sub
adc
add
into
push
into
dec
addr16
clc
into
rcrb
movsb
popa
cwtl
lock
daa
test
sbb
loop
aam
cmp
push
icebp
add
rolb
jecxz
mov
push
fwait
or
enter
xchg
mov
cmpsb
jp
xchg
mov
add
scas
pushf
loop
dec
pop
xchg
xchg
sub
dec
divb
or
push
imul
lods
test
bswap
add
ljmp
roll
add
jmp
dec
inc
incl
mov
fwait
lret
movb
xchg
jge
inc
push
lcall
inc
aam
sub
lea
mov
lcall
in
xchg
in
ret
mov
inc
hlt
addb
in
push
insl
mov
adc
fiadds
push
xor
les
pop
mov
rcrl
cmpl
mov
rcrl
cwtl
rorl
jmp
imul
nop
in
xchg
dec
test
push
imul
add
incb
fwait
ror
ret
sar
inc
jmp
hlt
mov
insb
inc
xor
jl
xor
addl
push
mov
ror
xchg
push
or
shll
dec
and
sbb
xchg
adc
xorl
push
cmp
iret
adc
cmc
inc
daa
add
aam
hlt
mov
adc
decl
aaa
mov
xchg
sub
cld
mov
push
lds
push
hlt
sbb
iret
daa
fidivl
ret
mov
mov
adc
loopne
ja
pop
jns
scas
loop
cmc
out
pop
jns
nop
jl
js
dec
repz
sti
mov
jle
loope
shlb
wrmsr
dec
je
mov
nop
jg
cwtl
mov
fiadds
clc
mov
fidivl
cmpsb
jno
sbb
xchg
lea
dec
push
jae
sub
stc
jle
add
and
push
jno
mov
fnsave
mov
pop
mov
jns
in
das
or
jbe
mov
rorb
xor
je
or
lea
test
call
ja
and
rcr
insl
adc
dec
sbb
dec
mov
cmp
mov
nop
mov
sarl
jno
repz
cmpl
pushf
lock
adc
lds
arpl
add
adc
int3
fdivr
xor
adc
cmpsb
and
mov
mov
rorb
rcr
xchg
mov
shl
cmpsl
ja
mov
sbbl
jo
fwait
dec
cmp
mov
out
jl
lret
push
loop
xchg
xchg
dec
mov
mov
inc
ss
push
xchg
pop
movsb
sbb
subl
fildll
cmpsb
inc
ret
sbb
scas
push
loop
push
xorb
gs
push
mov
inc
push
les
call
fwait
mov
adc
jmp
cwtl
pop
test
jb
sub
pop
cmc
jg
int
xchg
cwtl
jnp
repz
jle
sbb
outsb
mov
loopne
jb
cmp
xchg
jnp
int
inc
mov
rcl
push
xchg
inc
imul
xchg
or
in
xchg
lods
and
mov
sbb
aas
dec
push
hlt
add
push
je
out
aam
dec
xchg
pop
ds
sti
jg
inc
mov
test
pop
push
xchg
sahf
lret
mov
cli
rorb
movsb
aas
lea
adc
insl
lcall
jp
nop
cmc
adcl
jg
adc
pop
into
js
and
insl
or
iret
les
fwait
jb
mov
aaa
icebp
imul
jl
enter
cmp
xchg
push
lods
pop
ljmp
rclb
sub
ror
xchg
insl
push
test
stos
push
es
lods
aad
inc
popf
xorl
call
and
inc
adcl
fwait
shrl
rcl
lret
pusha
cli
lret
fildll
mov
mov
loope
andb
xchg
out
rorb
lea
pop
add
addl
testb
ret
cmc
xchg
cmp
xchg
popa
sbb
or
jmp
sbb
testb
nop
andb
dec
add
mov
xchg
movb
test
pop
test
lods
xor
or
or
jno
mov
pop
scas
mov
xchg
into
inc
sub
mov
addr16
je
daa
mov
mov
xchg
lods
dec
stc
stos
xchg
mov
dec
test
jae
std
xchg
mov
lcall
aam
loop
dec
pop
jbe
xorl
cltd
adc
pop
inc
movsl
pop
pop
lret
leave
out
xchg
and
jmp
je
les
mov
shl
test
mov
in
mov
imul
or
jne
arpl
xchg
ljmp
movsl
lret
jl
xchg
sub
xlat
shlb
or
stos
lock
lret
mov
stos
scas
add
push
sbbl
cld
cmpsb
and
mov
or
mov
xor
movsb
mov
imul
xchg
aaa
jge
adc
nop
loopne
mov
lea
cmc
jae
mov
sti
and
xlat
mov
shll
xchg
aam
aam
push
sarb
push
lcall
movsb
add
xor
xor
movsb
ljmp
adc
insl
mov
lret
pop
dec
ret
lea
xchg
mov
jle
movsl
pop
dec
fildll
dec
out
mov
lods
sbb
xchg
lcall
or
sarb
jge
or
mov
xor
jbe
fcoms
jbe
jbe
add
popa
imul
sub
mov
xchg
in
shl
push
movb
leave
mov
cmp
icebp
shl
and
int
xorb
in
rorl
fisubrs
mov
fwait
cs
test
into
div
dec
and
inc
stos
mov
xlat
les
or
add
add
imul
test
xorb
es
jo
imul
adc
and
decb
pop
outsb
adc
jl
out
nop
or
out
clc
jle
and
jl
pop
jns
sbb
adc
jg
stos
cmpsl
hlt
adc
inc
mov
xchg
jno
sub
mov
lea
adc
testb
jle
dec
movsb
xchg
mov
inc
add
cli
mov
or
dec
xorb
imul
sbb
roll
lods
or
orl
mov
into
jns
pushf
bound
movsb
push
mov
jge
xchg
sbbb
add
jg
and
xchg
call
mov
adc
inc
addr16
sub
outsl
in
test
sub
outsl
es
xchg
movsb
imul
mov
or
pop
sub
jmp
loop
xchg
mov
cltd
outsl
dec
lret
lods
or
jmp
shll
aad
add
popf
adc
adc
adc
das
icebp
pusha
lret
dec
push
jo
je
mov
xchg
lock
insb
int
fs
pop
xchg
push
push
inc
insb
mov
rcl
rcrl
xchg
sbb
xor
cmp
pop
in
cmp
int
and
ret
dec
cmp
sub
test
dec
push
push
test
sti
nop
out
dec
call
push
inc
pushf
xchg
lcall
mov
in
xchg
lock
outsl
sbb
or
lds
andb
sarb
lea
cmp
mov
lahf
mov
mov
popa
pop
mov
pop
lods
xchg
mov
sub
cli
or
mov
cmc
xor
dec
fcmovu
lcall
lahf
sahf
pop
add
in
adc
lret
mov
adc
mov
shrl
js
or
imul
test
dec
stos
ret
xchg
ret
cwtl
cli
cmpsl
jp
sar
aad
ficomps
lret
pop
test
sub
test
pop
popf
or
lods
stc
push
fbld
insb
sub
mov
inc
or
and
push
mov
aad
fistps
shl
mov
enter
das
loopne
mov
lds
nop
rcl
pop
or
xchg
mul
mov
in
ljmp
xor
imul
mov
ret
mov
inc
mov
cli
adc
mov
outsb
push
or
das
imul
popa
repz
icebp
imul
cmp
push
scas
sub
leave
fsubs
mov
xchg
xchg
or
fstpl
inc
xchg
lds
xchg
cltd
popf
push
push
pop
xchg
push
jge
pop
dec
pop
xchg
xor
sub
sbb
leave
fcoml
cmp
push
fldt
xlat
xor
xchg
and
mov
push
ss
cmpsl
xchg
lret
and
xchg
stos
sbb
cmpsl
cmc
test
push
pop
das
lods
jecxz
scas
push
lret
push
xor
fnstsw
call
lods
mov
dec
xchg
pushf
call
fsubrs
and
repz
mov
pusha
jle
fistps
pop
xchg
sub
frstor
cmpsb
cwtl
add
dec
sbbl
sbb
nop
cmc
and
rcll
call
cmpsb
push
jmp
mov
sbb
cwtl
ljmp
stos
inc
loope
into
xlat
pop
pop
push
pop
xchg
fisttpl
mov
movsl
hlt
incb
iret
call
fadds
adc
add
test
adc
push
xchg
push
sti
pop
cmpsb
and
adc
imul
sub
rolb
push
mov
outsl
roll
inc
fwait
or
add
ret
mov
pop
fwait
imul
rorb
in
mov
jle
or
clc
lret
lods
add
ja
imul
jg
push
and
mov
stc
je
dec
xchg
lds
jg
clc
mov
repnz
outsb
lahf
dec
mov
cmc
test
movl
xchg
ja
ss
cld
dec
rorl
stc
or
lds
jl
orl
mov
imul
sub
push
add
test
stos
sti
test
rcll
xchg
push
stc
mov
je
data16
popf
leave
lock
cmpsl
lret
lahf
adc
pop
and
adcl
push
test
shrl
dec
inc
sbb
mov
mov
jle
jbe
jnp
test
outsl
add
fcomps
jg
jae
cmp
imul
xchg
dec
xchg
into
orl
dec
cmpl
or
add
aad
mov
xchg
sahf
mov
xchg
cwtl
stos
imul
mov
xchg
pop
shlb
insb
jg
lds
rcl
sub
xor
inc
rcl
shl
jb
loope
lods
ja
dec
lods
cmp
pop
xchg
int3
jbe
out
mov
ljmp
imul
push
push
cmp
jmp
xchg
clc
jae
mov
movsl
shrb
dec
dec
mov
or
jns
push
add
mov
test
mov
es
xchg
test
inc
movsl
call
sbb
lret
mov
lods
enter
scas
mov
sahf
push
lock
in
test
imul
mov
dec
pop
dec
mov
inc
pop
pop
test
or
mov
leave
mov
icebp
adc
psubsw
adcl
arpl
test
mov
mov
xor
imul
ret
scas
repz
xchg
or
jp
add
into
cwtl
out
xchg
cmp
cmp
es
cmpsl
bound
add
pop
pushf
fidivrs
adc
jecxz
stc
cwtl
xchg
enter
orb
and
fmulp
mov
jne
fs
jge
dec
leave
or
mov
lock
adc
xor
loop
xlat
out
inc
cmp
and
pop
push
push
fwait
fs
stos
lods
in
mul
les
iret
mov
call
sub
iret
mov
shll
dec
cmp
jp
mov
mov
mov
adcl
lret
fnstenv
push
pushf
add
enter
cmp
dec
inc
or
inc
jo
xorb
hlt
mov
mov
mov
insl
push
mov
cmp
mov
sbb
std
pusha
ljmp
nop
orl
or
ss
sbb
sbb
stos
mov
push
mov
inc
lods
popl
lods
pop
lret
mov
jle
popa
add
add
mov
adc
test
jg
jecxz
stos
adc
sub
add
and
jmp
pop
les
xchg
test
adc
pushf
sbb
adc
fldt
rorb
mov
insb
add
add
fdivl
push
mov
jbe
ficoms
mov
add
xchg
imul
dec
mov
jecxz
dec
into
test
enter
jle
dec
xchg
out
adc
pusha
or
mov
lahf
mov
out
cmpb
aas
jo
outsb
fidivrs
sub
xor
ljmp
fwait
pop
lret
sub
fidivrl
cli
movsl
dec
mov
das
mov
or
pop
in
sti
fs
or
mov
jo
push
out
sbb
xchg
mov
sub
leave
jl
xchg
push
mov
loope
pop
and
adc
mov
push
push
mov
inc
mov
enter
cmp
pop
xchg
hlt
mov
mov
mov
jne
in
ds
adc
lcall
mov
jno
sbbl
ficoml
les
mov
push
jmp
cmp
jl
pop
adc
mov
fsts
add
fwait
sbbl
jle
jbe
lcall
sub
std
mov
jno
movsl
cltd
mov
mov
add
dec
mov
or
fdivl
inc
mov
mov
cli
pop
sub
aad
jge
jbe
and
xor
lods
les
ss
clc
add
lea
inc
cltd
imul
mov
xchg
adc
pusha
dec
sbb
or
mulb
mov
lcall
cli
cmpsl
and
xchg
pause
mov
add
pop
nop
out
shlb
xchg
or
mov
nop
arpl
inc
inc
sbb
imul
ss
pop
outsl
pop
push
and
into
sbb
inc
xchg
je
out
jnp
pop
out
ja
xchg
cmc
sahf
xchg
or
aad
xor
mov
xor
in
outsb
add
push
mov
dec
add
mov
test
das
addl
add
imul
pop
jns
inc
iret
pushf
add
mov
jg
pop
adc
xchg
pop
into
cld
jg
xor
leave
mov
mov
pushf
mov
adc
lods
and
push
or
lds
aas
inc
sbb
jp
sub
cmc
push
jb
adc
xor
mov
movsl
xchg
push
test
stos
imul
pop
call
xchg
pop
notb
xorb
js
aad
std
jge
mov
popa
add
insb
mov
jecxz
mov
pop
js
mov
xchg
pop
aam
cmpsl
xchg
dec
xchg
xor
mov
sbb
sub
popf
mov
push
xchg
mov
faddp
fmuls
xchg
test
xchg
bound
shlb
mov
or
outsl
jge
lahf
cmp
xchg
movb
test
xor
add
sbb
push
cwtl
and
lods
rorb
or
les
in
in
and
push
lret
lahf
sti
pop
xor
stc
jp
add
ret
ret
or
js
in
call
xchg
rorb
or
xchg
dec
and
dec
pop
dec
mov
sub
ja
call
mov
and
mov
rclb
lcall
fisubs
mov
dec
dec
adc
insl
xchg
sahf
nop
pop
jnp
test
jnp
mov
ret
xor
xor
rorb
or
les
in
in
and
cltd
lahf
outsb
sahf
push
xchg
bound
mov
adc
ret
push
lods
rorb
or
xchg
dec
and
dec
pop
dec
mov
sub
ja
call
mov
and
mov
enter
hlt
shr
cwtl
shrb
lods
xor
xor
int3
cmpsl
jle
test
xchg
sarb
sub
mov
pusha
mov
mov
fwait
mov
aaa
int3
adc
pop
insb
or
stos
xchg
mov
pop
test
pop
aas
or
mov
popa
ret
pop
jmp
or
pop
mov
or
int3
nop
mov
or
les
pop
mov
jae
mov
andb
mov
cld
cld
add
jmp
xor
jle
inc
lods
jle
mov
cmpsl
clc
xchg
js
int3
fcoms
ja
xchg
rcl
shll
lock
add
popl
push
add
lods
gs
add
pop
jle
les
in
test
loop
fwait
mov
mov
lods
add
add
mov
inc
mov
add
subb
mov
xchg
leave
xchg
test
stc
and
add
pop
testl
or
xor
fsts
js
jno
pop
pop
imul
cmc
iret
mov
mov
mov
ret
in
mov
add
mov
cmp
add
repnz
or
loope
popa
leave
and
mov
xchg
xor
rolb
stc
pop
addl
les
pushf
test
in
aam
mov
inc
hlt
fisttps
and
aaa
mov
pop
hlt
mov
lahf
inc
aaa
mov
mov
fwait
mov
nop
test
ret
jnp
inc
daa
mov
add
jg
xor
ret
fucom
icebp
pushf
fxch
fildl
sbb
inc
stc
xchg
or
xchg
mov
jb
mov
sbb
xchg
cmc
hlt
stc
or
dec
orb
or
mov
cwtl
mov
cwtl
rcl
andl
xor
pop
pusha
imul
cmp
xchg
shll
sub
inc
jp
jne
jne
scas
cmp
or
pop
cmp
sarl
push
xor
mov
shrb
jae
cld
jb
fmulp
dec
test
aaa
push
dec
push
nop
and
adc
hlt
push
fisubrs
loopne
add
xchg
in
mov
mov
mov
orb
flds
arpl
add
pushf
dec
xchg
dec
dec
scas
and
xlat
cmc
adc
popa
or
imul
jge
ss
push
lret
mov
jecxz
in
xor
mov
dec
lods
es
xor
mov
mov
cmp
subl
movsb
pushf
jns
mov
outsl
fidivl
push
mov
push
cltd
jp
push
cli
and
mov
fldt
lahf
cmpsl
xor
subl
cld
add
jmp
in
ficompl
lcall
lcall
test
fsubs
scas
mov
push
lods
cmc
iret
cmp
jmp
ficomps
adc
hlt
fs
and
js
sarb
cli
bound
inc
int
sbbl
iret
fstpl
jo
fldenv
pushf
jecxz
cmc
aam
or
cmc
sarb
lret
mov
and
popf
mov
cmp
mov
mov
mov
push
or
inc
sbb
and
enter
push
pop
in
mov
ret
add
imul
mov
lret
xchg
mov
gs
notl
sub
inc
mov
idivb
and
dec
rcll
cmp
test
inc
mov
cld
cmc
cli
sbb
loopne
pop
or
cmp
mov
test
mov
divl
mov
xor
shll
fbstp
pop
test
into
test
data16
dec
and
xchg
and
ret
sub
lret
js
push
xchg
ja
fwait
scas
add
pop
rorl
mov
lods
mov
xchg
das
xor
lret
or
rcrb
dec
fwait
loopne
mov
enter
add
lcall
stos
rolb
jl
or
fiaddl
bound
movsb
filds
adc
or
jne
mov
xor
mov
mov
inc
xchg
rcll
add
sbb
cmp
addl
jg
icebp
outsb
and
xchg
ljmp
sbb
loop,pt
mov
mov
insl
cld
insb
mov
pop
lahf
stc
jp
lea
jge
orl
cltd
or
or
imul
push
pop
ljmp
loope
push
jae
xchg
xchg
sbb
daa
repnz
inc
movl
cs
cwtl
xlat
aas
xchg
mov
mov
mov
lods
jmp
dec
inc
lahf
add
ss
out
stos
test
or
jmp
jnp
push
sbb
pop
mov
mov
stos
jo
clc
rcll
sub
aad
lret
mov
cmpsb
out
hlt
xchg
mov
shlb
fsubrs
push
cltd
nop
cwtl
xchg
mov
jnp
fs
shrl
incb
test
sub
sub
add
sbb
nop
xor
pop
sbb
test
push
out
in
mov
lahf
lahf
or
jl
lahf
mov
rclb
fsubrs
push
dec
outsl
jmp
sarb
outsb
lock
pop
in
push
fcmovb
xlat
data16
or
divb
or
outsl
out
push
imul
mov
mov
cld
je
test
jp
rcll
lods
cmpsl
nop
je
in
test
std
rcrb
xchg
js
shll
xor
pop
lcall
mov
je
add
nop
das
mull
inc
imul
rcr
out
aad
mov
push
mov
mov
lods
and
xchg
imul
imul
sub
call
es
jo
lret
imul
lock
aam
inc
push
fnstcw
mov
sbb
test
dec
repz
aaa
bound
cmpsb
mov
inc
js
iret
sub
or
outsl
adc
jle
adc
xchg
xlat
clc
test
mov
jmp
aam
and
loop
sbbl
xchg
cmpsl
imul
sub
hlt
cld
hlt
cwtl
lret
or
sub
into
fisttps
pop
lds
cmpsb
jge
mov
jbe
addb
xchg
lret
fldl
mov
push
push
sarl
mov
and
popa
in
sti
push
imul
std
nop
sarb
xor
cli
test
negl
mov
rcr
leave
in
or
les
rorl
pop
ljmp
leave
lcall
push
lea
add
imul
inc
scas
daa
nop
push
insl
shl
xor
imul
xor
pushf
lret
or
mov
xlat
lods
push
lahf
fs
push
jae
stos
mov
out
mov
jmp
cmpsb
out
xchg
test
or
imull
nop
leave
xchg
popa
mov
push
fwait
icebp
add
xor
pop
sbb
pop
or
sbb
push
out
xchg
fs
mov
xchg
int3
mov
insl
pop
rorl
jl
mov
lock
xor
xchg
shll
inc
xchg
xor
mov
out
rcll
lds
mov
mov
in
nop
out
aaa
mov
mov
xor
push
add
jl
sti
and
hlt
pop
or
sbb
stc
mov
xchg
lock
add
lret
pop
mov
leave
or
adc
data16
hlt
mov
and
cmpl
cmc
cltd
mov
icebp
xchg
jge
mov
es
sbb
jns
dec
lds
dec
stos
hlt
adc
repz
jle
loope
inc
mov
fldt
jle
push
cld
nop
adc
outsl
les
call
pop
repnz
adc
test
stos
cld
xchg
adc
xchg
xchg
pop
inc
pop
mov
pop
cmpsb
shlb
int3
mov
fs
or
pusha
xchg
loop
lods
insl
pop
pop
sbb
jl
mov
ds
xchg
mov
mov
imul
mov
xchg
add
mov
rorl
test
sub
adc
imul
adc
inc
mov
jp
jge
xchg
sarl
add
or
xor
movl
imul
xchg
loopne
filds
jp
aas
enter
push
mov
icebp
rcll
inc
das
fimuls
mov
add
jg
mov
aam
stos
loop
popf
mov
int3
out
clc
outsb
in
outsl
and
mov
addl
jne
popa
scas
mov
push
mov
dec
inc
fidivs
rcrl
stos
jns
pop
jg
in
mov
mov
add
push
or
fisubrs
dec
cmp
xchg
test
xorb
fstp
pop
stos
inc
mov
push
push
fmuls
mov
lahf
icebp
xor
mov
imul
cmpl
insl
xorb
movsl
es
dec
xchg
mov
xchg
fsubrp
leave
insl
fistpll
pop
xchg
xlat
int
scas
cmp
lods
pop
repnz
inc
leave
rclb
pop
inc
dec
jbe
mov
lock
sub
and
xchg
inc
mov
fldenv
or
orl
cmp
popa
outsb
push
repz
cwtl
xchg
out
or
fidivs
ret
je
sarl
mov
jae
xorb
shrl
dec
clc
hlt
rorb
push
jg
addl
jle
push
sbb
jge
arpl
push
adc
jl
mov
aas
sbb
mov
lock
pop
fstl
cld
mov
lret
dec
cmpsb
jo
dec
xchg
movsl
scas
fs
popf
push
sets
rorl
stos
xchg
test
call
pop
mov
push
or
sbb
fwait
push
push
pusha
test
xchg
imul
out
xchg
out
push
call
dec
mov
aas
xchg
or
push
mov
jnp,pt
mov
sub
popl
jecxz
xor
mov
cmpsb
mov
popf
movsb
mov
mov
cwtl
lods
mov
lds
flds
and
xchg
xchg
nop
cmp
jne
lds
jns
rolb
imul
ja
stos
push
mov
adc
cli
push
push
fbld
xchg
test
rcl
movb
out
sbb
fs
xchg
add
out
adc
fwait
sti
add
movsb
inc
mov
pop
add
ja
inc
cmp
add
xchg
pop
sub
repnz
push
or
out
test
loop
les
xor
scas
or
jb
fwait
mov
outsl
lahf
aas
lret
and
xorl
test
jnp
and
sub
add
mov
push
setne
outsl
jecxz
push
push
push
jecxz
sub
pusha
mov
xor
jge
hlt
xor
dec
fs
push
push
aad
adc
mov
or
sbbb
scas
xchg
fildl
cmp
icebp
xchg
inc
imul
push
sub
ja
nop
mov
or
jl
mov
fiadds
stos
and
jbe
fcoml
cmp
or
lret
lahf
xchg
dec
mov
cmp
sbb
xchg
sarl
or
pop
xor
pusha
push
cmp
roll
stos
inc
imul
insb
push
adc
push
popa
mov
test
add
pop
stos
test
outsb
sub
inc
xchg
sub
mov
mov
pop
adc
push
cmpsl
aad
es
inc
hlt
pop
mov
pop
inc
lods
fmuls
iret
imul
or
jns
fisttps
stc
adc
stos
cmp
push
imul
mov
icebp
dec
out
movsb
pop
mov
mov
adc
dec
data16
dec
xchg
adc
sub
or
stos
mov
out
movsl
nop
mov
adc
nop
xchg
mov
adc
nop
in
in
sub
testb
nop
xchg
or
aad
insl
dec
jnp
jmp
xchg
cmc
inc
js
sbb
mov
mov
pop
rol
add
mov
and
mov
lea
cltd
xor
addb
and
lahf
or
rorb
adc
add
and
js
push
xchg
xchg
imul
outsl
adc
jbe
cmp
sarl
cmpl
jo
outsl
decl
test
add
sbb
sbbl
jl
mov
mov
xchg
mov
pushf
addr16
je
out
mov
xchg
jbe
inc
mov
inc
jp
mov
testb
arpl
loopne
mov
sub
add
enter
or
cmp
jle
cmc
test
add
imul
pusha
mov
cmp
lds
mov
imul
mov
aas
fwait
mov
fisubrl
jle
mov
push
in
add
pop
je
xor
cmc
inc
movsl
inc
jnp
fidivrs
adc
push
or
movsl
negb
add
pusha
nop
rolb
nop
pushf
ds
dec
push
outsb
ja
stos
mov
addl
movsb
stos
lret
pusha
lahf
or
sarl
icebp
out
pop
mov
pop
or
leave
mov
jo
movsb
cmc
movsl
dec
aas
adc
je
pop
push
jg
sub
or
mov
mov
in
rcr
lock
add
or
mov
jle
cs
rep
add
stc
add
mov
lahf
cs
cwtl
push
test
repnz
cltd
push
add
cmp
xacquire
or
cmc
inc
jp
lods
and
leave
leave
rcrb
loopne
popf
aad
jl
cmp
addl
or
into
es
andl
mov
mov
mov
movsb
lcall
push
pop
fcomps
mov
mov
jbe
sti
stc
and
mov
xchg
loopne
jle
fnstcw
jb
mov
mov
fsts
inc
cwtl
fsubl
cmpsb
or
js
sbb
or
xchg
insb
cmc
rcr
enter
hlt
cld
xchg
jns
mov
push
lea
mov
test
testb
in
mov
lds
sarb
jg
clc
xchg
and
dec
xlat
and
enter
popa
jo
mov
jne
mov
fmul
mov
imul
popa
mov
jbe
push
push
and
adc
repz
in
jae
mov
or
xchg
fnstsw
repnz
cmc
stc
or
pop
rcrb
xchg
or
data16
fstps
sti
pop
pusha
mov
insl
mov
sub
push
or
xor
fnstcw
shrb
mov
daa
loop
stos
or
dec
scas
jp
aad
fdivl
adc
cmp
sub
or
mov
xchg
lock
rcl
pop
and
mov
cwtl
jl
push
jmp
push
mov
add
imul
pop
loope
leave
mov
xor
lea
out
ljmp
test
popa
imul
mov
jns
mov
fimuls
add
mov
mov
or
movsb
add
xchg
stos
loop
dec
inc
and
cld
mov
insb
mov
jo
jle
cmc
lret
mov
mov
xchg
iret
mov
push
mov
adc
cltd
ljmp
push
sbb
ss
xchg
cli
xor
stc
insb
insl
lcall
call
dec
inc
lea
dec
not
rcl
mov
lods
in
nop
xchg
test
js
pop
movsl
inc
aas
int3
xor
push
outsl
mov
test
das
test
lea
movsl
aad
mov
fsubrs
adc
or
scas
mov
dec
cmc
jo
push
movb
and
inc
les
xchg
lcall
sbb
and
xchg
out
movsl
test
mov
mov
movsl
lea
out
repnz
fisttpll
fcmovnbe
or
cltd
xchg
xlat
lock
xor
mov
rorl
mov
fcmovb
xor
mov
pusha
jecxz
pushf
inc
add
or
test
cmp
sbb
xor
mov
mov
in
sbb
std
xchg
into
nop
mov
test
add
ja
into
insl
or
icebp
bound
inc
enter
or
mov
scas
fidivrl
mov
add
ja
mov
xchg
loope
lret
jnp
push
inc
cmp
stc
mov
pop
nop
add
lea
jbe
mov
mov
imul
mov
cmpl
lods
jo
jae
lods
or
mov
jg
xor
rcrb
fld
sahf
outsl
in
roll
shlb
lods
pop
jnp
flds
and
add
mov
dec
rorl
mov
xchg
push
les
cmc
cmp
xchg
mov
dec
inc
mov
hlt
sti
or
into
xor
mov
test
fistpl
subl
out
cmp
rclb
pusha
push
or
rcll
push
data16
fmuls
iret
xchg
jl
mov
fdivrl
jnp
inc
push
fistpll
add
pop
clc
mov
pextrw
push
loop
mov
adc
loop
xchg
or
jecxz
sbb
enter
repz
aam
js
cmpsl
int3
adcl
cwtl
mov
jne
iret
ss
rorl
mov
xchg
cmpsb
in
lea
jmp
pop
sbbl
nop
pop
std
inc
stos
mov
test
dec
or
nop
fistpll
rorb
in
xchg
mov
icebp
aaa
cwtl
mov
sbb
or
xchg
xchg
mov
xchg
mov
out
imul
lods
enter
cmp
scas
hlt
iret
xor
aad
mov
ret
inc
hlt
addl
ret
sahf
js
das
cs
insb
ret
mov
mov
push
xor
mov
std
xor
lods
imul
pop
fidivs
js
sub
or
es
cltd
shlb
push
mov
movsb
hlt
xchg
rorl
pushf
enter
sub
nop
mull
mov
fwait
andl
pop
imulb
icebp
sti
or
sti
pop
lret
icebp
dec
es
fsubrl
icebp
cs
xchg
loop
jecxz,pn
push
shlb
add
callw
stc
lods
loop
pop
and
mov
addl
and
sbbb
aad
jb
inc
loopne,pt
cltd
imul
loopne
push
cmp
shrb
adc
add
stos
aas
fisubs
sub
sub
das
lret
cmpl
mov
pushf
in
pushf
push
subl
mov
lods
test
mov
or
insb
push
in
sbb
mov
jg
xchg
in
add
lahf
dec
scas
and
xor
sbb
dec
lds
dec
mov
adc
jge
dec
addr16
arpl
lods
or
lahf
inc
insb
addl
js
fwait
add
cs
xor
enter
cs
stc
jo
fwait
add
xor
mov
jg
rol
outsl
add
jle
xchg
hlt
outsb
test
aad
push
sub
push
outsb
mov
mov
outsb
adc
cltd
cmp
ja
inc
and
xchg
ret
mov
mov
or
movsb
rorb
sbb
adc
or
int3
xchg
cmp
lods
into
mov
std
xchg
jo
cs
mov
orl
cli
call
test
inc
outsl
je
and
lods
lret
mov
inc
sbb
and
andl
mov
outsl
mov
xor
xchg
imul
jg
aad
or
mov
rol
jp
outsl
mov
cmp
inc
or
and
and
pminub
jl
and
in
test
orl
nop
testb
mov
mov
outsb
sub
into
cmp
sbb
jg
jb
leave
mov
cmp
inc
imul
int3
js
pushf
les
hlt
ud2
stos
enter
mov
inc
ss
mov
mov
rolb
test
nop
out
cmpsl
mov
jle
xor
sub
xlat
jnp
push
xor
loope
xchg
inc
decb
dec
xchg
inc
std
arpl
push
jbe
cmpl
jns
jo
mov
dec
add
lcall
roll
cmp
test
pop
scas
aam
ret
xor
xchg
xchg
into
xchg
cwtl
cmpsb
int3
js
filds
xchg
rcrb
bound
ljmp
clc
and
es
push
lahf
mov
aaa
add
xchg
imul
lea
stc
imul
adc
jg
dec
dec
mov
pop
cmp
imul
fcmovnu
or
jae
mov
cli
ja
outsb
pusha
jle
data16
cmpb
in
test
mov
mov
add
push
loop
or
cmp
xchg
inc
cmpsl
push
iret
push
inc
sub
push
mov
push
xchg
dec
xchg
xor
cmp
in
rcrb
sbb
sbb
xchg
inc
rcl
sahf
push
popa
test
cmc
push
or
mov
mov
mov
imul
fwait
inc
mov
mov
xchg
jecxz
adcl
cmp
jg
push
mov
fisubs
mov
push
test
fnstenv
imul
pop
testb
push
loop
ret
mov
test
add
jno
cmp
je
mov
orl
xchg
sub
or
enter
xchg
imul
mov
imul
add
movsb
orb
ret
or
mov
mov
mov
imul
repz
dec
mov
mov
mov
mov
add
mov
inc
imul
and
add
dec
push
xchg
jbe
xchg
call
push
in
mov
movsl
ret
xor
jmp
fadds
mov
sub
iret
mov
mov
nop
movsb
inc
imul
repz
test
repnz
mov
inc
inc
mov
lock
mov
xchg
shll
or
or
mov
stos
adc
movsb
aam
and
push
mov
test
rol
add
mov
inc
cwtl
scas
notb
dec
or
popa
lea
repz
adcl
add
aam
jo
push
and
xchg
mov
push
mov
cwtl
dec
ret
pop
ljmp
not
cmpsl
lods
cltd
repz
jle
dec
mov
rolb
and
cmpsb
xchg
ret
sub
jecxz
inc
sub
insb
push
jmp
pop
jmp
out
mov
into
ds
and
sahf
das
out
pushf
add
int3
sbb
loopne
mov
xlat
adc
pop
sub
push
jmp
xchg
cmp
cwtl
call
add
or
add
add
cld
xchg
or
popl
inc
cwtl
push
in
pusha
cmp
inc
mov
inc
xchg
inc
xchg
pop
imul
scas
movsl
les
lds
dec
adc
shll
inc
jmp
pop
sub
mov
pop
inc
mov
push
out
mov
jmp
mov
mov
or
add
sarb
mov
ret
mov
pop
or
ja
imul
or
les
stc
sub
adcb
imul
mov
mov
cltd
cmp
in
imul
inc
pusha
mull
push
nop
aam
mov
mov
xchg
xorl
or
shll
fists
jnp
or
and
insb
stos
gs
xor
inc
int
in
mov
imul
out
movhps
push
inc
scas
lods
fsubs
xchg
and
repz
mov
mov
sahf
test
mov
outsb
mov
jg
or
mov
int3
sahf
rolb
pop
fisttps
lea
lcall
cmp
test
push
mov
adc
mov
popf
out
mov
shlb
in
les
add
adc
pop
cmp
pushl
inc
ret
rorb
xchg
stc
xchg
or
mov
imull
or
add
scas
mov
loop
jo
std
mov
push
movb
push
insb
mov
jl
pushf
and
loop
neg
or
enter
imul
sub
stos
jb
add
push
push
addr16
push
mov
lods
push
mov
or
mov
rclb
cli
xchg
push
mov
icebp
sbb
xor
js
mov
test
fnstsw
movsb
cld
in
sub
js,pt
fstl
mov
out
inc
cmp
or
mov
leave
int3
cmp
orb
xchg
fadd
lods
sub
pop
xchg
data16
movsb
hlt
mov
leave
xchg
fldenv
xchg
mov
or
add
xlat
push
fldcw
out
into
jmp
das
test
in
push
jmp
mov
in
xor
movsb
les
bound
cmpsl
xchg
imul
in
xchg
or
repz
hlt
jp
sbb
stos
imul
aam
xchg
jo
leave
add
mov
or
mov
shll
imul
sbb
mov
dec
aam
xor
mov
or
xchg
mov
nop
add
or
dec
stc
mov
es
mov
mov
imul
mov
mov
push
mov
in
fsts
inc
sbb
inc
imul
jb
inc
mov
nop
imul
and
hlt
popf
and
cltd
lret
out
repz
mov
pop
or
shlb
xchg
xchg
cmp
test
mov
and
mov
sahf
movsl
rclb
ja
fistpll
mov
loopne
insl
fs
jmp
imul
inc
decl
mov
jp
sub
jmp
aam
leave
mov
iret
mov
xchg
mov
mov
sbb
or
dec
xorl
or
pop
fwait
xchg
hlt
jo
add
jo
or
mov
shlb
lods
dec
fdivr
jnp
adc
mov
daa
inc
adc
imul
mov
mov
add
pop
sub
jo
mov
jmp
cmp
stos
pusha
subl
movsl
mov
xchg
cmp
adc
fidivrl
hlt
mov
test
add
cmp
jo
nop
mov
clc
add
cmp
mov
mov
mov
mov
sbb
push
inc
iret
rcrl
xchg
sbb
fists
popa
je
rorb
fildll
and
hlt
push
orl
in
int3
iret
in
fstps
movsl
sbb
lret
sub
and
insb
bound
mov
ret
movsb
lock
xchg
xor
bound
orl
push
inc
sub
push
push
js
ficoml
js
lock
mov
lea
mov
out
pushf
aam
mov
jne
xlat
mov
lret
out
in
sti
jmp
in
push
add
xchg
ds
dec
nop
test
sbb
lods
out
fiadds
add
fucom
ret
enter
roll
jl
popf
test
sahf
fcmovbe
cmp
push
out
push
add
fst
xor
cmp
cwtl
lods
rcr
lea
mov
add
test
push
and
sub
push
mov
das
icebp
movsb
add
fdivr
and
mov
stos
in
sub
sub
popa
cmova
aas
or
mov
xor
sub
mov
xchg
aaa
test
mov
xchg
fwait
sub
push
inc
movb
ljmp
jmp
inc
into
nop
xlat
dec
mov
xor
adc
pusha
mov
mov
or
inc
or
xchg
jns
clc
xchg
dec
je
add
xchg
add
mov
ljmp
or
add
sub
mov
and
push
fildll
dec
push
mov
dec
ret
inc
rcrl
jb
aas
sbb
or
shll
mov
cmpsb
mov
dec
mov
mov
jl
xchg
pop
testl
inc
push
inc
mov
jecxz
mov
in
sbb
cmp
jbe
loop
xchg
ja
cmc
cli
lods
aas
pop
dec
xchg
cltd
inc
or
test
fists
test
or
subl
mov
jo
rcl
jecxz
or
repz
jmp
mov
inc
inc
cltd
pushl
xchg
stc
hlt
sub
repnz
pop
or
jecxz
mov
enter
lret
nop
xor
imul
xor
insb
inc
cmp
pusha
mov
pop
fwait
push
push
sub
push
gs
pop
rcrb
add
imul
xlat
push
pop
andl
movsb
mov
popa
mov
rcr
pop
mov
inc
or
std
mov
les
adc
rorb
push
mov
cs
jnp
pop
fnsave
mov
outsb
add
pop
mov
cltd
dec
mov
imul
jnp
mov
xchg
je
scas
lds
dec
push
adc
sub
subl
les
ss
imul
jnp
lcall
stos
call
out
mov
je
mov
xchg
ss
sahf
mov
lods
mov
stc
in
cld
push
outsb
popa
cwtl
mov
imul
scas
mov
in
pop
mov
and
mov
pop
stc
aas
xchg
std
xchg
int
inc
add
jno
xchg
xchg
iret
js
adc
shl
or
test
mov
test
jnp
ret
or
ret
mov
jg
test
lret
pop
test
add
in
mov
out
mov
inc
hlt
test
jecxz
xchg
dec
mov
rclb
push
cmp
lahf
pusha
jl
and
xchg
mov
mov
inc
pop
xchg
mov
fiadds
or
push
xchg
lods
js
in
js
mov
push
ljmp
jmp
sbb
adc
cwtl
punpckhwd
ficomps
insb
and
adc
inc
sub
sub
xchg
xor
lods
cmc
mov
mov
cmpsb
stos
jl
movsb
aad
or
daa
push
xlat
push
add
lcall
adc
je
test
decb
xchg
mov
in
fimuls
lret
ds
sbb
in
xchg
xchg
dec
xor
ficoms
lock
cmp
cmc
mov
mov
xchg
or
fidivrs
ret
icebp
mov
push
pop
mov
or
inc
xchg
mov
dec
mov
lods
loop
cmc
test
sbb
test
and
push
dec
aad
daa
nop
aaa
pop
push
adc
int3
and
fdivp
and
and
test
pop
andl
out
rorb
jo
mov
ds
movsb
rorb
xlat
push
clc
test
mov
inc
ficoms
jmp
sub
test
stos
or
popl
andb
lods
adc
inc
xlat
xchg
xchg
hlt
movsb
lahf
push
adc
xchg
inc
lods
imul
inc
test
xchg
mov
cmp
repnz
add
nop
inc
or
sbb
push
mov
mov
les
add
jno
imul
xchg
mov
jnp
hlt
lds
mov
jae
mov
fcom
stos
lahf
jae
pop
ret
mov
imul
mov
ljmp
fstps
add
dec
nop
stc
and
sbb
jns,pt
insl
clc
pushw
hlt
std
lret
scas
mov
push
mov
dec
xchg
mov
in
mov
push
test
mov
mov
push
repz
inc
imul
test
xchg
jb
or
inc
jle
or
sbb
sbb
ret
fbstp
dec
mov
push
or
jo
sbb
les
addl
adc
or
gs
mov
push
mov
lcall
hlt
decb
ficompl
lods
mov
push
mov
adcl
dec
add
dec
mov
rorb
adc
xchg
mov
jae
lea
scas
dec
dec
cmp
adc
inc
mov
jne
scas
pop
or
xchg
mov
add
push
sti
loopne
repnz
add
call
sarl
pop
dec
dec
nop
incl
mov
and
cmpsb
add
in
fmuls
fldl
dec
inc
mov
cmpsl
into
xor
push
test
dec
int
fs
add
mov
and
and
fcoms
dec
shll
sub
in
pop
add
push
mov
std
xor
dec
shll
push
fldl
cmpb
std
rcrl
rolb
mov
icebp
add
dec
sub
lret
scas
xchg
and
push
sbb
gs
test
movsb
cs
mov
cmpsl
imul
mov
imul
push
or
pop
fcompl
pop
xor
hlt
mov
mov
adc
or
addl
push
inc
call
into
nop
dec
push
insl
cli
and
in
mov
cmpl
rorb
mov
sbb
andl
pop
or
adc
dec
inc
in
fisubl
popa
mov
pop
xor
imul
mov
jb
loope
out
mov
fmuls
push
inc
sub
or
into
jnp
mov
sub
aaa
add
test
adc
dec
movsl
stos
mov
sti
pop
inc
pop
movsl
fisubs
jl
jb
xor
jbe
fdivl
insl
test
mov
or
repz
xchg
sbb
adc
sub
xor
cmp
inc
nop
jp
aas
lods
rcll
fcmovnu
mov
mov
add
mov
repz
mov
mov
push
push
add
xor
das
mov
dec
mov
ret
cld
pop
ud2
js
mov
rcrl
loop
addr16
jne
mov
fstpt
and
hlt
popf
xlat
and
mov
sbb
dec
and
bound
pop
cmc
dec
adc
jle
sbb
xor
stos
lea
cmp
das
xchg
jge
sbb
pushf
mov
xchg
test
orb
mov
sbb
mov
lahf
fsubrl
stos
test
ds
add
or
and
out
sub
dec
pop
roll
cltd
sub
xchg
push
add
ja
jnp
test
xchg
in
test
mov
mov
stos
out
leave
pushf
xchg
mov
add
or
loop
js
jge
inc
pop
sahf
xlat
aad
add
jne
xor
mov
or
mov
xchg
or
aas
shl
lea
or
ds
push
push
or
imul
cmpsl
roll
les
movl
shlb
leave
sub
mov
int3
xchg
xchg
test
xchg
cmpsl
or
in
adc
movsb
or
mov
pop
ds
sbb
clc
scas
add
mov
or
lea
add
ja
repz
mov
andb
jne
pop
nop
sbbl
popl
dec
pop
sbb
or
lcall
hlt
mov
xor
imul
inc
mov
cwtl
mov
xchg
subb
inc
orl
dec
pop
fsts
push
loope
mov
sahf
mov
xchg
imull
arpl
nop
xchg
sbb
aam
lahf
xchg
inc
ud2
pop
or
test
jnp
mov
dec
jnp
scas
sbb
sbb
dec
es
mov
or
adc
jno
sub
aam
gs
jmp
push
mov
jge
mov
imul
clc
pushf
push
add
fsubl
mov
push
imul
xlat
rcrl
aaa
push
mov
jb
mov
jle
jnp
cmp
insb
movsb
push
int3
nop
sub
ret
sub
nop
int
mov
imul
xchg
sub
add
outsb
mov
jmp
nop
mov
pop
or
or
pop
add
jne
movsb
outsl
adc
add
jecxz
mov
popa
int
mov
daa
mov
popf
and
out
adc
adc
xlat
mov
enter
xor
pop
adc
cmp
sbb
dec
imul
scas
mov
std
pop
sti
test
cmp
fbstp
adc
scas
hlt
repz
jle
push
or
aam
add
filds
test
stos
and
scas
hlt
xchg
cs
xor
or
enter
nop
xchg
or
fcmovnb
or
lods
add
stos
ja
scas
push
push
push
test
or
push
mov
outsl
adc
mov
lcall
enter
fisubs
xchg
inc
jge
or
aaa
inc
xchg
push
es
rcll
jl
mov
add
jnp
insb
iret
dec
mov
push
mov
or
xchg
jo
pusha
enter
jo
test
adc
push
xchg
loop
dec
or
stos
or
aad
mov
pop
push
hlt
ret
inc
rcl
inc
inc
cld
mov
xchg
dec
pop
cmpsb
push
mov
or
push
xchg
mov
pop
scas
loop
cmp
ss
int3
push
fsts
rcr
mov
ss
addb
je
rcrl
mov
fs
fwait
dec
dec
mov
push
push
les
and
adc
jns
lds
mov
fidivl
mov
add
out
pushf
and
add
and
mov
shlb
adcl
xchg
andb
add
imul
rcrb
and
repz
or
popa
mov
sub
gs
xchg
push
jb
sbb
jns
hlt
xchg
iret
arpl
cmpsb
xchg
cmpsl
inc
adc
lock
or
xchg
inc
hlt
mov
repz
inc
and
push
insl
xchg
into
inc
adc
add
mov
test
lods
add
test
popf
pushf
fcmovnbe
jae
int3
in
xchg
or
ja
push
mov
and
cltd
dec
push
inc
loope
adc
mov
push
imul
nop
fstpl
leave
lods
push
add
jl
pusha
cwtl
push
push
pop
shlb
jecxz
test
or
xor
xchg
scas
rcll
sub
xchg
pop
xlat
dec
stc
scas
cs
fdivrl
ljmp
adc
loopne
mov
andl
daa
movsl
xchg
shlb
sub
cmpsb
and
mov
jb
add
xchg
or
mov
lock
fwait
add
jns
sbb
aam
jle
mov
js
loop
jb
and
cwtl
fisttps
dec
mov
movsb
mov
xchg
in
xor
jnp
dec
lret
cmpb
lea
pop
or
sbb
stos
out
add
or
jg
cmp
mov
or
lret
push
outsl
or
sbb
test
adcl
jo
inc
loopne
pushf
or
mov
dec
jmp
mov
xchg
iret
jo
xorl
or
add
cld
jp
shlb
cmp
push
xchg
xchg
xorl
movsb
or
push
clc
cmp
ret
rorb
lds
sub
jg
sbb
mov
fsubrp
rorb
or
and
popf
clc
adc
mov
xor
inc
ret
pop
adc
ret
in
mov
roll
movsl
and
and
jmp
mov
inc
xchg
sarl
enter
xchg
in
jno
jmp
adcl
fwait
and
xchg
stos
inc
rolb
dec
add
push
push
nop
mov
push
push
jb
ljmp
dec
mov
add
xlat
push
pushf
cmpsl
push
push
push
cmp
enter
and
sahf
add
in
adc
les
mov
lret
mov
rcll
adc
and
mov
lods
sub
int3
xchg
inc
mov
inc
fistpll
jno
xor
adc
fwait
push
cli
xor
rcrl
pushf
dec
shlb
mov
scas
test
xchg
cmpl
dec
jno
dec
mov
and
cwtl
je
imul
cmpsl
int3
sbb
sub
xor
sub
mov
stos
hlt
mov
cmpb
outsl
ljmp
aam
add
lds
test
jae
les
movsl
push
and
mov
leave
fwait
cli
nop
inc
je
and
lret
jl
mov
mov
aas
sbb
imul
xchg
imul
adc
aaa
jg
cmp
and
xor
out
sbb
mov
in
fisttpl
adc
inc
aad
nop
fcoms
ficoml
sbb
movsb
ljmp
xor
mov
popf
xchg
les
fwait
lcall
xchg
xchg
xlat
xchg
pop
int3
shrb
xchg
test
add
cmp
xchg
shlb
dec
adc
test
les
and
add
rcrb
aas
cmp
inc
imul
lahf
xlat
sbb
imul
lock
popa
push
lret
jl
addr16
pop
popf
test
les
sti
loopne
or
and
mov
into
pushf
mov
scas
dec
dec
xchg
aas
pop
sbb
aaa
add
lods
std
lcall
jbe
movsb
pushl
decb
pop
movsb
scas
sub
test
push
xor
sbb
nop
loopne
sbb
outsl
adc
add
mov
add
jb
mov
in
add
loop
jl
adc
scas
xchg
imul
sbb
dec
ret
inc
xchg
inc
mov
ljmp
movsl
rcrb
fbld
cwtl
lock
mov
xchg
fidivl
add
imul
cwtl
test
lret
mov
or
in
loope
mov
dec
mov
fwait
aad
push
mov
add
xchg
adc
or
std
mov
movsb
sbb
mov
icebp
dec
sub
mov
and
imul
stos
mov
stos
add
stc
lock
lea
adc
lea
xlat
aad
xchg
mov
adc
fcmovnb
rorl
fsubrl
repz
sub
pop
mov
inc
push
roll
rcr
nop
mov
shrb
and
test
movsb
mov
hlt
xchg
push
mov
jg
out
xchg
aaa
inc
jg
out
xchg
add
mov
mov
ds
cli
pushf
xor
lret
addr16
fidivs
cmp
add
cli
cmc
cmpsl
cmc
pushf
sarl
sub
cmc
fwait
mov
pusha
movsl
sbb
fnstsw
lret
rolb
aas
stc
movb
push
jno
mov
scas
xlat
adc
and
stos
hlt
shlb
movsb
adc
and
and
mov
rolb
push
pop
cli
aas
fmull
test
xchg
fdivp
mov
vcvtsi2ssl
addr16
imul
push
lret
mov
out
in
cmp
imul
mov
lcall
scas
pop
in
inc
dec
cmp
les
lret
test
sub
aad
sub
jecxz
sub
fcoms
mov
inc
nop
or
adc
dec
fisttpll
or
push
jmp
xor
push
cmp
lcall
push
inc
xchg
mov
fcoms
icebp
int3
inc
and
addl
andl
out
or
loopne
jbe
stos
nop
fcmovnu
push
clc
adc
or
cmc
test
or
mov
xchg
sbbl
dec
cmp
popf
adc
xchg
mov
lods
mov
lea
imul
mov
push
or
xchg
fbstp
xchg
cmc
xchg
inc
ficoms
adc
nop
mov
das
subb
ja
inc
lahf
jne
pop
lahf
nop
mov
push
xchg
push
bound
add
lahf
mov
cmp
or
sbb
mov
jb
fistpll
mov
mov
and
mov
scas
int
int3
xchg
mov
scas
lahf
fnstenv
aad
push
pusha
mov
mov
mov
into
clc
pushf
push
mov
orl
test
std
addr16
scas
cmp
cmp
int
orl
dec
cmp
lcall
int
xchg
subb
cmp
add
mov
xchg
xor
mov
lods
fiaddl
arpl
sarb
jg
mov
push
into
sub
push
sub
ss
mov
xchg
cmc
jne
jge
cmp
dec
sub
insl
dec
mov
or
inc
jg
cwtl
mov
dec
stos
inc
test
adc
shrl
sub
les
mov
bnd
aas
shl
stos
cld
pop
into
push
inc
add
dec
sub
mov
xchg
dec
into
jl
les
loopne
sbb
fldt
mov
fyl2x
test
inc
jge
stos
inc
inc
test
jmp
into
add
lret
sub
stc
pusha
out
dec
inc
mov
mov
or
je
push
mov
pop
sub
mov
mov
adc
cmp
mov
shlb
jl
xchg
and
sub
or
pop
pop
push
ss
frndint
insl
xchg
imul
and
sub
cmp
add
xchg
stos
iret
xchg
lret
mov
popf
adc
sbb
mov
enter
insl
popf
sbb
pop
xchg
cs
xor
push
test
adc
test
sbb
lahf
pop
test
xchg
and
add
nop
in
add
notl
and
shrb
lahf
test
andl
cmp
inc
mov
mov
fistl
mov
shlb
rcrb
push
aas
push
ret
fistps
out
mov
aas
and
in
loop
push
jo
sbb
push
call
movsl
movb
mov
pop
test
lds
dec
lods
jb
sahf
ret
adc
insl
mov
incb
pop
jle
jb
xor
or
ds
shl
ljmp
cmp
xor
mov
cld
xchg
pop
mov
fdivs
xorb
loope
cwtl
jg
test
mov
mov
adc
cld
push
icebp
mov
inc
mov
mov
pushf
je
xchg
xchg
mov
out
loope
sti
jb
enter
loop
addl
pop
cmp
adc
inc
or
cwtl
pop
or
push
loop
push
fisubl
repnz
rorb
out
ret
jg
dec
decl
adc
inc
mov
mov
scas
pushf
push
xchg
xchg
ds
sub
lcall
xchg
popf
movsl
movsb
mov
scas
imul
mov
mov
dec
fmuls
cwtl
out
dec
imul
into
or
fcoms
dec
ret
jmp
es
bound
rclb
inc
mov
popf
or
dec
rcrb
lahf
orb
add
add
ficoml
mov
mov
jg
int3
push
add
dec
enter
es
xlat
enter
ss
insl
mov
adc
imul
ljmp
jno
loop
xchg
inc
in
mov
std
add
test
push
sbb
mov
dec
mov
popa
pop
out
popa
out
and
or
arpl
sbbl
into
mov
test
or
mov
inc
out
es
sbb
scas
hlt
xchg
aam
mov
iret
outsl
mov
mov
xor
hlt
lahf
jle
outsl
or
dec
mov
add
add
les
rcl
hlt
rcrl
push
sub
inc
mov
mov
push
popl
jg
test
mov
xchg
mov
enter
cmp
adc
shll
mov
cld
xchg
loop
mov
xchg
movsl
imul
sbb
push
imul
mov
rcll
dec
inc
hlt
in
mov
mov
adc
or
and
mov
inc
mov
pop
shrl
xchg
das
rorl
cltd
and
xor
mov
hlt
lcall
or
adc
mulb
sbb
cmp
in
and
mov
fs
mov
mov
ret
mov
imul
push
ljmp
leave
cmpsl
cmp
fs
rolb
popa
mov
xchg
addl
xchg
mov
xchg
add
xchg
aam
sbb
add
stos
jae
rcr
and
movsb
push
adc
ret
mov
fs
cmpsb
adc
pusha
movsb
stos
loope
inc
xchg
xlat
bound
stos
pop
scas
bound
mov
jnp
lods
sbb
push
cltd
test
and
shlb
addr16
movsl
pop
cli
xor
int
pop
rcl
and
test
aam
fbstp
jbe
pushf
pop
pushf
sub
dec
mov
push
lds
mov
xchg
mov
and
push
xor
sbb
add
fildll
xor
orb
xlat
xchg
mov
or
aaa
les
push
mov
and
scas
adc
mov
rorb
cmc
mov
dec
fidivrs
add
add
mov
pop
mov
jnp
cld
mov
mov
imul
and
aaa
les
lret
mov
push
adc
sbb
mov
out
mov
and
test
push
adc
out
or
lods
mov
rolb
ret
xchg
push
or
xchg
cltd
jecxz
sti
mov
jb
loope
xchg
ljmp
inc
mov
nop
adc
int3
sub
fcomp
call
xor
aas
loope
jge
xchg
rorb
mov
movsl
add
xor
in
imul
inc
ja
cli
add
or
add
mov
jle
sbb
jge
cmpsl
mov
dec
mov
xchg
lea
aas
and
pop
xor
mov
or
movsb
cmp
mov
xchg
andl
inc
stc
out
iret
das
movsl
das
jo
xlat
xchg
or
inc
jnp
or
into
dec
arpl
xchg
mov
dec
xor
lds
out
cmpsb
sub
or
xchg
imul
decl
xchg
imul
les
inc
imul
mov
jg
pop
jl
pop
inc
ss
icebp
add
scas
xchg
lcall
mov
data16
sub
push
movsl
adc
or
jge
adc
or
cld
jbe
ss
rclb
ds
cltd
or
mov
mov
jmp
jo
mov
ljmp
notb
cld
cmp
insl
mov
enter
jp
les
aad
xor
dec
push
push
mov
mov
inc
loope
and
cltd
fdivs
out
dec
and
cmp
test
add
aas
pusha
adc
pusha
loope
adc
stos
test
mov
and
and
push
xchg
cmp
dec
loopne
dec
cmp
mov
into
insb
orb
fidivrs
mov
xchg
inc
cmp
add
rolb
dec
or
dec
inc
mov
sub
xchg
scas
dec
mov
pop
add
arpl
or
xrelease
rorl
xchg
and
mov
mov
movsb
les
push
mov
mov
or
xchg
cmp
pop
push
repnz
cs
les
shrb
push
jp
clc
mov
leave
xchg
cmc
shll
lods
push
cli
or
mov
and
sub
sub
add
cmpl
lahf
jge
cld
push
stos
sbb
or
add
dec
xchg
out
mov
shl
inc
idivl
fsubrs
dec
jae
aas
xchg
aas
jl
push
iret
fildl
and
push
sub
push
pop
cmp
mov
and
stos
or
add
push
and
and
fstpt
test
cwtl
and
or
xchg
icebp
out
xchg
outsl
les
lret
mov
movsb
push
push
notb
lock
sbb
lahf
adc
add
and
lds
xchg
mov
jne
mov
scas
add
test
int
dec
hlt
pop
rolb
pop
xchg
fsubrs
sub
and
mov
into
and
stos
mov
inc
outsb
mov
popa
mov
push
rcll
mov
aad
test
jnp
adc
out
ret
dec
imul
scas
mov
cmc
shrb
xchg
adc
xor
inc
push
shlb
idivb
inc
xor
fiadds
outsb
in
cmp
pop
xor
cmp
lret
aam
sub
jg
mov
or
pop
pusha
cwtl
xchg
jg
mov
cwtl
xor
or
lea
cwtl
adc
test
inc
adc
jl
and
ret
movsb
enter
popa
out
lock
movb
les
jp
mov
mov
mov
cmp
and
xor
xor
mov
cmp
test
mov
aas
bound
popf
adc
sub
test
mov
daa
and
in
lret
jne
sbb
add
or
push
jle
push
mov
dec
inc
aaa
hlt
movsl
call
pusha
add
dec
js
xor
test
aam
cmp
dec
leavew
pushf
into
fsubrs
movsl
or
mov
int3
mov
nop
clc
sbbl
test
pop
leave
dec
ret
jecxz
sbb
dec
jl
push
add
jp
dec
jb
mov
or
andl
in
add
xchg
sub
mov
repnz
sub
vmread
xchg
push
mov
inc
rclb
test
hlt
mov
movsl
push
sbb
aam
mov
mov
dec
pop
cli
xchg
dec
ds
ss
push
jle
mov
test
xor
ds
popf
dec
sub
sub
inc
scas
aaa
cmp
xchg
jnp
es
pop
pop
bound
pop
mov
jno
daa
pop
jo
pop
clc
jmp
dec
xorl
jmp
mov
mov
and
push
jg
daa
push
push
push
popa
jge
ds
scas
out
shlb
inc
jle
xchg
popf
cld
mov
addr16
dec
push
dec
cmp
imul
dec
push
or
xchg
test
into
rolb
inc
xchg
adc
or
jg
lock
jg
aas
out
lea
adcb
sub
add
mov
popf
pushf
hlt
mov
ss
mov
mov
push
jns
testl
push
jno
cmp
and
pusha
and
jle
or
add
imul
cld
add
je
cmc
mov
out
outsb
fdiv
cmpsl
ret
mov
rol
pushf
scas
fucom
pusha
cmpsl
dec
ds
sbb
mov
add
fs
mov
or
imul
jnp
outsl
mov
jbe
add
daa
loope
mov
sbb
sahf
leave
add
lcall
add
addl
dec
jmp
rclb
mov
cmp
add
lock
jl
aaa
jbe
inc
ja
stos
sarb
movsl
call
sub
hlt
xchg
faddl
mov
mov
clc
lcall
popf
call
xor
pop
lea
push
test
mov
push
call
pop
movsb
xchg
inc
or
roll
nop
int
int3
fimull
xor
cmp
into
scas
adc
jmp
int
std
jbe
xor
jle
lret
cmp
js
jle
adcb
aas
inc
ja
pop
aas
lds
loop
dec
mov
jp
mov
fs
cltd
lcall
cwtl
arpl
push
test
adc
mov
sbb
xchg
xchg
jle
cmp
aas
mov
jnp
rolb
pop
fisubs
inc
scas
jge
and
fprem1
jno
sub
ja
add
data16
mov
out
iret
subl
mov
rorb
cmp
cmc
iret
test
icebp
and
imul
sub
mov
stos
notl
sbb
dec
pop
sub
dec
mov
xchg
or
lahf
or
jns
mov
jns
or
inc
push
sbb
enter
jns
rorb
stos
inc
lods
xor
ret
dec
filds
and
mov
mov
fidivl
test
mov
jecxz
test
adc
movsl
and
jno
test
dec
out
repz
mov
mov
mov
add
xor
mov
jnp
cli
mov
cmp
mov
sub
aas
mov
mov
mov
or
in
in
pop
lods
mov
in
push
lea
fldt
mov
lahf
mov
ret
mov
cmc
mov
imul
mov
xchg
mov
inc
mull
add
or
je
adc
cwtl
xchg
js
dec
xchg
mov
sarl
test
dec
fdivr
movsl
jl
mov
subb
je
int
push
ss
xor
fcomps
xchg
out
insl
movsl
mov
roll
inc
stos
or
fdivrs
or
bound
fmull
jle
aaa
sbbl
ja
adc
mov
push
insb
popa
sub
dec
cmp
divl
shlb
lcall
pop
adc
bound
popf
mov
test
jmp
jno
imul
je
bound
pop
or
mov
repz
inc
xchg
into
orb
lcall
mov
repnz
push
inc
mov
mov
add
mov
sarl
into
rolb
pusha
subb
js
jecxz
std
ret
or
xor
sub
bound
xchg
rcl
mov
inc
aam
test
xchg
test
cmpsl
or
ja
inc
cmc
mov
sbb
dec
shl
mov
inc
bnd
mov
iret
inc
jg
shrb
movsl
mov
mov
mov
xchg
cltd
xchg
xor
cmpsl
jg
sbb
filds
fcomp
pop
cmc
mov
xchg
imull
xchg
loop
aad
xchg
ds
xor
movsb
loopne
push
sub
lods
enter
jge
dec
fbstp
or
mov
testb
push
mov
mov
mov
push
add
cwtl
xchg
cltd
mov
and
xchg
inc
imul
lds
sbb
decb
int3
or
jp
or
mov
pop
lahf
jmp
fistps
mov
mov
test
pop
imul
xchg
mov
mov
out
jb
cmpsl
sub
mov
popa
add
push
and
and
xchg
mov
in
bound
fisubrs
cld
xchg
push
movsl
push
es
xor
incb
mov
mov
scas
sbb
cli
test
fistpll
popa
insb
in
inc
cmp
mov
enter
popf
std
xorb
push
cmpsl
inc
mov
movsb
mov
mov
inc
stos
inc
inc
push
inc
mov
into
cmc
das
push
cltd
mov
int
repz
movsb
and
push
mov
push
or
test
sub
add
cmpsb
fcmove
or
xchg
fildl
xor
jo
rcrb
sti
cmp
jle
or
fistl
ret
xchg
add
mov
hlt
jo
pop
div
imul
popf
clc
jl
js
ja
call
std
mov
mov
mov
in
push
cmpsl
xchg
cmp
cld
mov
inc
cmp
nop
xchg
mov
mov
or
sub
push
jb
xor
nop
inc
movsl
imul
sub
jno
xchg
or
inc
dec
jno
dec
jmp
imul
aaa
hlt
mov
pop
int3
jo
xchg
xchg
lcall
aas
xor
stos
filds
sbb
inc
aam
mov
inc
repz
out
dec
fdivrl
subb
push
push
jmp
xchg
xchg
lods
js
inc
cmpsb
add
mov
cmc
inc
cmp
mov
clc
je
sbb
daa
aas
les
mov
jmp
fwait
test
jl
mov
test
mov
xchg
hlt
cltd
aas
pop
or
into
loop
mov
imul
out
rclb
mov
mov
pushf
adc
or
repnz
fmuls
enter
cmp
stos
fnsetpm(287
cmp
divl
mov
xchg
fdivl
sub
ret
or
aas
jecxz
mov
xchg
jns
mov
or
add
cltd
int3
adc
sbbl
mov
mov
rorl
jle
cmp
dec
inc
sub
ljmp
pop
rorb
mov
add
js
jmp
mov
xchg
ljmp
mov
iret
mov
mov
mov
mov
xchg
imul
test
mov
loope
cmpsb
loop
jno
ret
mov
movsl
or
aad
pop
scas
sbb
lahf
shlb
fisubrs
lods
mov
fistps
leave
and
inc
call
mov
les
jae
push
cmpsl
sbb
into
adc
pop
dec
imul
mov
cld
test
pop
or
pop
test
je
icebp
shll
lods
xchg
mov
pusha
jl
call
mov
mov
popf
or
shll
mov
mov
add
xor
hlt
mov
pop
mov
test
scas
ret
imul
push
inc
mov
cld
add
jo
or
outsl
mov
mov
adc
xor
insl
xchg
out
rcrb
int
jo
outsb
inc
out
lods
sub
imul
ret
dec
std
ljmp
outsb
es
shlb
jne
repnz
mov
add
adc
mov
sub
mov
push
fsub
das
inc
loopne
stos
mov
xlat
add
hlt
addl
jge
sbbb
pop
rclb
and
pop
scas
rcll
repnz
cmp
sub
jbe
scas
addl
pop
dec
int
shufps
mov
pop
out
xchg
imul
pop
push
cmpl
push
arpl
iret
cmp
xchg
push
sub
inc
fsubr
int3
rcl
loopne
incb
out
adc
imul
sub
push
push
push
xor
or
mov
arpl
mov
cltd
mov
mov
rolb
mov
clc
xchg
cld
mov
mov
roll
mov
mov
in
test
movsb
sahf
inc
mov
add
jae
add
xchg
inc
loop
pop
in
cmp
adc
test
call
shrb
sub
movsl
jne
mov
cmp
or
push
and
icebp
mov
ljmp
stc
cmp
xchg
cwtl
mov
test
xor
ficompl
sbb
cwtl
shr
pop
sbb
push
inc
xchg
adc
aad
xlat
jg
clc
xor
dec
mov
adc
in
mov
and
mov
aad
scas
ret
ljmp
nop
lods
xchg
mov
jbe
xchg
loop
out
rolb
fisttps
sub
jmp
xor
addb
test
xchg
loope
std
add
sub
cmp
rcrb
push
pop
mov
test
jecxz
inc
pop
xchg
add
sbb
fimuls
pop
mov
or
xor
adc
jle
sub
pop
movsl
sbb
pop
cmpsb
cmp
stos
mov
shll
es
add
int
pop
in
inc
shrl
imul
lea
into
or
jo
shrl
jp
mov
mov
ljmp
sbb
in
add
into
pushf
cmp
cli
je
std
loope
ret
push
notb
aad
and
iret
clc
xor
mov
xchg
test
lock
mov
into
sbb
shl
ret
mov
adc
dec
pusha
orl
icebp
clc
dec
inc
es
ljmp
add
inc
cmp
les
addb
dec
mov
in
mov
or
pusha
inc
aas
mov
push
or
dec
mov
xchg
inc
test
outsb
and
sti
dec
mov
cli
sub
pushf
int3
cmpsl
fs
xor
mov
stc
inc
cmp
push
mov
sub
jnp
and
add
xchg
ret
adc
mov
pusha
popf
adc
xchg
jmp
fucom
fs
roll
xchg
push
lret
inc
jecxz
rcll
xchg
inc
jg
call
sub
int
insb
movsb
rorl
stos
in
nop
loop
xchg
adc
push
mov
mov
push
js
push
push
bound
cmp
flds
fs
cmpsl
lret
pusha
inc
inc
lret
mov
shl
movsb
xchg
and
fwait
sub
xchg
mov
and
iret
pop
mov
cmp
das
orb
fdivr
add
std
insb
sti
or
test
push
xorb
shll
in
imul
nop
mov
lahf
filds
mov
scas
repz
lock
pop
scas
in
clc
cwtl
int
mov
xchg
xchg
addl
xor
adc
cltd
xchg
sub
mov
dec
fnsave
jb
mov
stos
add
fsubrs
sbb
call
stos
cmp
cmp
inc
test
xchg
mov
cmp
aas
jb
lret
shll
sti
insl
sbb
xchg
in
mov
enter
hlt
and
test
aas
lret
jae
pop
jmp
cld
iret
adc
xchg
adc
xor
out
lret
inc
mov
xchg
lret
in
imul
push
jbe
xchg
rorb
xchg
mov
or
lret
sbb
aaa
xchg
lret
js
popf
xor
or
and
xchg
push
mov
jl
aaa
push
stc
mov
mov
pop
ror
jne
sbb
fisubrl
or
addr16
mov
shrl
lcall
ss
std
sbb
mov
sbb
into
mov
xchg
and
fsubs
mov
in
pushf
add
in
lcall
sbb
fmul
mov
cwtl
jb
mov
push
mov
mov
cmp
fmul
add
or
int
cmp
movsb
mov
pushf
dec
mov
cwtl
fwait
xor
add
je
xchg
insb
std
lock
pop
nop
jl
dec
dec
les
cmp
xchg
adc
mov
add
test
outsb
movsl
xchg
mov
and
pop
xchg
nop
scas
mov
cwtl
inc
mov
mov
call
mov
push
lret
jns
in
and
xor
dec
pop
lcall
movsl
xor
sbb
es
lock
and
movsb
cmc
popf
out
add
inc
imul
xchg
imul
ret
mov
pop
adc
test
lret
jl
stos
xchg
das
clc
test
mov
cmp
aad
cld
mov
cmp
cmp
lea
lahf
mov
mov
and
mov
shl
push
clc
mov
cmp
rorl
in
jb
dec
jge
push
inc
jg
mov
xchg
test
xchg
or
pop
nop
add
in
push
hlt
inc
repnz
jns
xchg
mov
jl
les
call
fstp
scas
push
cmp
sbb
inc
cmp
pop
pushf
inc
movsl
mov
es
lods
jle
pusha
xchg
or
push
fldcw
fsts
sub
mov
xchg
push
jecxz
xor
add
add
or
bound
mov
sub
mul
push
push
test
mov
stos
call
mov
jmp
xor
xor
orb
xchg
movsb
out
out
sarb
and
add
mov
adcl
test
or
std
dec
dec
pushf
mov
sbb
mov
fwait
jae
dec
or
mov
xchg
popf
testb
pop
sbb
jle
mov
push
fistl
insl
jle
rcll
test
scas
inc
pop
mov
shlb
mov
pop
sub
bound
mov
mov
ret
mov
pusha
testl
xchg
pop
mov
or
and
mov
shl
jmp
nop
in
mov
in
dec
aad
push
lds
adc
xor
sbbb
push
inc
sahf
mov
mov
insb
repz
jl
inc
lret
pop
lea
fiaddl
mov
jle
sub
sub
xor
test
das
out
je
dec
cmp
or
stc
inc
lret
and
mov
sub
push
mov
stos
xchg
cmp
sub
out
push
xchg
xchg
mov
and
nop
loopne
in
rcl
fisubs
idivl
sub
xchg
or
hlt
sub
negl
pusha
std
mov
sbb
iret
movl
push
mov
xlat
int3
adc
xchg
lods
mov
cmpsb
in
out
imul
mov
and
mov
test
outsl
sub
xchg
cmc
enter
ret
bound
push
enter
pop
xchg
outsl
dec
inc
stos
or
movsl
xchg
out
add
shl
lea
lods
mov
cltd
movsb
push
call
inc
pop
jg
fidivl
cld
fsubs
cmp
into
shrb
and
xchg
mov
push
mov
ljmp
jae
mov
stos
or
test
lret
sub
stc
jmp
sti
mov
dec
int
cmpsb
mov
jmp
jle
or
or
and
hlt
add
adc
enter
inc
scas
lds
xchg
mov
into
mov
add
int
ret
popa
sub
fldl
sbb
and
mov
adc
cwtl
or
rclb
jo
mov
jbe
jle
jae
xchg
pushf
cmp
sbb
jg
jp
pop
cwtl
cli
sub
mov
inc
hlt
mov
push
lods
fdiv
jno
repz
cmp
sub
xchg
mov
cmc
jg
mov
jbe
xor
stos
mov
xor
adc
fdivrs
ds
insl
mov
cmp
mov
mov
or
mov
mov
mov
xchg
push
adc
mov
test
das
pusha
outsb
mov
sbb
add
mov
sahf
cwtl
cmp
push
rorl
pop
mov
xchg
mov
push
mov
aas
and
or
cltd
adc
aam
mov
lret
addr16
hlt
lcall
add
popf
sub
inc
adc
stc
fstpt
jmp
mov
in
sub
sbb
mov
mov
xor
add
shl
fcmovbe
decl
aad
mov
lods
dec
repnz
stos
xor
xor
shrb
push
cmp
add
fnstenv
xchg
js
in
test
xor
lock
in
fisttps
scas
cmc
insb
int
mov
fistpll
xchg
clc
pushf
push
pop
ljmp
loope
inc
addb
mov
fdivrl
sbb
ljmp
pop
jge
jecxz
mov
add
cmp
dec
lods
add
test
add
jge
adc
sub
adc
push
adc
dec
jno
movb
xor
test
dec
mov
jb
cmp
mov
jmp
pop
pusha
inc
arpl
ret
push
jno
xor
ficoml
dec
les
shll
lods
xor
adc
rcr
pop
js
push
push
push
rolb
inc
bound
pusha
lods
adc
or
das
mov
fldl2e
adc
xchg
lret
lods
mov
cld
test
pusha
daa
test
cld
aas
or
sub
push
pop
sti
mov
test
fidivrs
lret
repnz
jp
mov
mov
lds
mov
push
sub
fs
dec
sbb
pop
ret
sub
mov
pop
cmovae
shrb
test
aad
insl
mov
aaa
lds
or
sbb
xchg
loopne
lock
mov
test
cmc
outsl
ficomps
sub
movsb
dec
sbb
inc
loop
xchg
lods
cmp
ljmp
mov
inc
adc
mov
push
enter
shr
ljmp
stos
cld
inc
dec
mov
idivb
dec
pop
cmp
mov
dec
stos
dec
adc
sahf
mov
xor
mov
push
call
lcall
test
gs
xchg
gs
sbb
jns
negl
mov
movsl
pop
and
movl
stos
imul
jb,pn
fistl
jns
inc
pop
out
or
orl
jae
test
in
add
ror
cmp
shll
out
xchg
sbbl
sbb
mov
xchg
test
cmp
neg
ret
sti
lret
jle
mull
mov
add
rol
test
scas
jecxz
test
mov
imul
pop
je
sbb
xchg
lods
imul
stc
aad
pop
popa
inc
dec
and
mov
stc
lock
mov
sub
gs
aas
jns
sub
js
adc
movsl
insb
movsb
jnp
mov
mov
pop
push
int3
xchg
fisttps
xchg
clc
adc
jno
fwait
adcb
hlt
lcall
mov
xchg
divb
mov
test
insl
es
adc
sbb
shl
popf
mov
std
mov
mulb
mov
xchg
loop
jno
mov
stc
sub
push
mov
imul
xchg
clc
xchg
add
mov
pushf
mov
xchg
les
lods
movsb
pop
adc
dec
decl
mov
imul
add
xchg
lods
push
pusha
inc
inc
ja
roll
jmp
inc
insb
cmpsb
mov
xchg
pushf
cld
sti
ret
push
mov
inc
mov
or
sahf
inc
cmp
inc
mov
fiaddl
pop
loopne
xchg
cwtl
scas
loop
mov
push
mov
negb
into
xchg
nop
cs
dec
cmp
inc
cmp
xchg
les
add
movsl
or
sub
js
inc
jg
or
roll
fs
leave
adc
jg
jo
and
lds
mov
lock
mov
cmp
mov
test
inc
loop
mov
mov
ret
jge
cs
das
dec
mov
pop
lds
xchg
das
push
add
outsl
test
mov
push
adc
mov
test
jle
js
je
test
push
test
test
jne
fisttpll
jne
les
fnstcw
movsb
mov
scas
cmc
add
icebp
pop
mov
movsl
in
push
and
les
repnz
rcr
fucomi
xchg
jg
jp
adc
mov
mov
cmp
das
sub
data16
scas
fsubrp
push
mov
ss
sbb
pop
or
push
jo
adc
adc
leave
cmc
int
insl
repz
or
pop
mov
fimuls
sbb
mov
test
ja
sub
xchg
movsl
aad
sbb
mov
into
push
iret
outsl
iret
jae
adc
push
insb
loopne
mov
sbb
lock
mov
xchg
push
mov
cli
loopne
xchg
pop
fimull
pop
pop
andl
fs
sbb
into
scas
and
mov
leave
add
push
sub
or
pop
mov
mov
cmc
and
jno
or
push
lea
add
or
lcall
sbb
jl
cmp
mov
add
lods
adc
adc
sub
jecxz
mov
mov
pop
cli
shll
ret
mov
xchg
aad
jbe
xor
lods
mov
dec
push
ret
out
cmc
in
push
rolb
xchg
hlt
jno
sub
or
aad
mov
mov
aad
xchg
inc
mov
sahf
out
xlat
push
loope
sbb
iret
adc
int
cld
incl
inc
sbb
fistpll
cmpsl
mov
add
dec
call
sahf
add
jecxz
imul
xchg
mov
cmp
sbb
push
mov
xor
leave
jl
fistpll
or
nop
jo
jle
into
out
out
and
dec
pop
or
xor
popa
sti
cmp
cmp
add
leave
jmp
mov
inc
jl
mov
cld
mov
nop
xchg
roll
movsl
mov
sarl
sbb
das
arpl
rorb
imul
mov
cmc
movsl
dec
sub
insl
lods
cmpsb
shl
or
fcomp
mov
or
adc
lret
mov
les
dec
mov
jnp
pop
push
mov
test
inc
dec
or
idivb
test
mov
xchg
repnz
push
sub
xchg
and
jmp
mov
mov
je
inc
xchg
shll
jb
xchg
cmc
bound
je
cmp
jnp
fptan
insb
imul
addl
mov
bound
pusha
rcl
mov
stos
mov
dec
inc
xchg
dec
jmp
cmpl
mov
mov
rorb
lret
lea
pusha
lea
loop
xchg
and
or
xchg
or
and
pop
loope
cmp
nop
mov
mov
nop
adcl
dec
scas
adc
xor
or
mov
push
ret
mov
fstl
movsl
mov
sbbl
cld
inc
orl
frstor
inc
xor
data16
roll
imul
adcb
sub
jb
stc
mov
pushf
lods
addl
mov
incb
clc
das
outsl
sub
mov
mov
inc
mov
shr
int
and
mov
jp
es
dec
push
addl
add
loope
repz
leave
data16
jg
cmpsb
imul
adc
push
stos
repnz
call
stos
dec
xchg
xchg
sbb
jns
fmul
es
bnd
mov
mov
push
js
adc
int3
loop
push
scas
pusha
loop
jnp
cltd
jmp
cld
jmp
inc
sbb
pop
jl
in
pop
int3
xlat
xchg
repnz
out
ja
dec
or
mov
dec
icebp
inc
and
xchg
je
xlat
std
cmpl
jmp
pop
movsl
jne
mov
xchg
add
mov
adc
fistpll
jno
and
movsb
add
mov
inc
cwtl
out
mov
sub
adc
rclb
shll
fwait
lret
int3
pushl
sbb
jg
cwtl
cmp
mov
js
rclb
cmp
pop
mov
and
add
xchg
ljmp
cmc
or
add
mov
imul
xor
imul
cmp
mov
testl
push
cmpsl
ds
dec
outsl
mov
hlt
mov
ret
or
cmp
pop
movsl
xor
out
and
movsl
flds
out
pop
push
or
cli
and
jl,pn
jno
cwtl
test
loope
popf
lods
addl
jbe
xchg
movsl
cwtl
lds
sbb
icebp
cmp
inc
push
gs
icebp
sahf
or
ficomps
jbe
shl
icebp
cmp
jle
cmp
lds
cmpsl
rep
lds
out
lcall
sti
jl
movsl
das
jo
leave
nop
pop
pop
js
cltd
jbe
loop
xchg
sahf
mov
mov
fstl
lahf
mov
lock
hlt
mov
hlt
into
sarl
pop
adc
int3
dec
fistpll
stos
pop
enter
sahf
mov
mov
gs
xchg
sbb
adc
push
subl
mov
mov
test
or
add
test
fbstp
push
lods
dec
mov
pop
lock
pop
shlb
or
cs
nop
enter
push
pop
fs
std
testl
movl
cs
rol
sarb
cmpsl
xor
xchg
loopne
xchg
fistpll
fisttpll
mov
adc
sbb
sti
jmp
mov
jg
std
xchg
adc
cwtl
jbe
fcompl
fstl
fdivrl
pop
test
add
mov
imul
pop
mov
push
cmpb
mov
pop
push
mov
hlt
sahf
or
leave
mulb
cwtl
rclb
pop
inc
mov
inc
inc
shrb
pop
add
mov
and
fimuls
outsl
xchg
mov
pop
mov
sub
shl
adc
loope
jmp
fmul
sub
jno
xchg
jl
movd
imul
lds
mov
adc
and
mov
testb
ficoms
sub
rcl
mov
icebp
out
test
movsl
push
cld
movsl
icebp
lahf
jmp
pop
test
sbb
cmp
fildll
mov
movsb
add
push
push
mov
enter
push
aad
push
inc
inc
in
fdivrl
mov
ja
mov
mov
movsb
mov
fdivrs
push
add
xchg
jl
xchg
mov
hlt
mov
sub
xchg
jns
fwait
sti
ror
inc
shr
shll
or
lea
dec
adc
push
push
jnp
pop
shrb
ljmp
outsl
sub
xchg
test
mov
call
add
jne
popa
add
pop
out
inc
ret
outsb
dec
dec
or
ret
mov
push
dec
inc
outsl
out
push
jp
lret
jns
sahf
es
dec
pushl
xchg
push
test
jle
adc
aam
cmpsb
mov
lds
orl
data16
stos
xchg
cmp
adc
mov
call
enter
lret
out
pushf
cli
mov
push
imul
fimuls
in
js
push
xorl
push
mov
add
xlat
test
pushf
sbb
sub
add
imul
dec
xor
test
rcl
fs
shrb
xchg
test
xchg
cld
inc
or
push
cmpsb
xor
scas
xor
into
nop
pushf
xchg
aam
jns
pop
imul
fisubrs
and
sub
stos
sub
mov
xchg
sbbl
sbb
or
push
aam
or
rcl
sub
loop
mov
mov
or
mov
dec
repz
sub
mov
movsb
mov
fincstp
mov
test
push
add
pop
dec
cli
mov
cmp
pop
outsb
mov
push
and
jl
int
decb
lods
fstl
nop
lret
inc
test
add
mov
hlt
stos
mov
sub
gs
inc
xchg
cmp
filds
shrl
mov
leave
inc
int3
not
cmpsl
mov
mov
cs
movsb
mov
les
sub
in
aas
cmpsb
dec
mov
add
xor
fnstenv
mov
in
pop
push
bound
or
pusha
mov
psrlw
dec
push
push
aad
test
cmpsl
rcll
out
leave
movsb
shrb
lods
inc
xchg
lret
adc
fs
fcom
xchg
movsl
clc
lret
or
xor
mov
pop
inc
xlat
aad
das
jb
enter
leave
push
sbb
outsb
xchg
xchg
mov
js
pop
les
push
xchg
jle
lods
pop
cli
imul
out
vpmulhuw
int3
fdivrp
scas
pop
aad
cmp
and
ljmp
jge
or
add
hlt
ret
mov
cmc
xchg
inc
and
mov
notl
movsb
and
xchg
fldl
mov
mov
mov
inc
subl
jne
mov
call
hlt
cmp
mov
mov
popa
inc
xchg
mov
xor
mov
popl
mov
aas
leave
add
add
loopne
jmp
lret
fistps
push
xchg
mov
dec
ret
imul
xchg
leave
mov
sbb
orl
fmuls
call
pop
xchg
mov
pusha
add
pop
push
jo
int3
out
addr16
add
jo
ja
sbb
test
mov
imul
out
lret
mov
imul
jle
into
mov
rcr
jmp
add
stos
stos
mov
shr
movsl
fsub
lock
lret
out
cmpsl
sub
cli
fistpll
xchg
adc
inc
xchg
jge
xchg
adc
jecxz
mov
clc
ror
mov
outsl
inc
add
fmull
mov
sbb
add
ljmp
push
adc
sub
cltd
jmp
mov
mov
daa
aas
jl
lds
iret
inc
or
dec
enter
out
xchg
xchg
dec
jns
mov
mov
mov
cmp
jp
das
stos
testl
or
mov
insl
aam
inc
add
add
xchg
and
in
mov
push
in
xchg
mov
rorb
mov
into
sub
pop
into
daa
pop
inc
mov
jg
daa
push
sbb
or
jecxz
jne
mov
pushf
dec
in
xchg
adc
xchg
js
test
sbb
gs
mov
aad
pmulhw
pop
dec
mov
mov
dec
jecxz
jne
pop
call
push
sub
iret
dec
xchg
jl
mov
xchg
inc
adcl
mov
sub
xchg
int
cmp
cwtl
adc
sub
dec
pushf
and
pop
cmp
arpl
push
test
sar
ficomps
out
xor
fldt
movsl
arpl
sbb
movsl
add
shr
stos
inc
cmpsb
enter
popl
pop
inc
call
mov
outsl
jle
mov
cmpsb
call
xchg
xchg
xchg
call
jmp
je
xchg
pusha
outsb
nop
inc
jmp
push
test
pop
int3
cmpsl
and
xchg
or
sahf
xchg
hlt
popf
sub
pop
jle
lahf
cmp
inc
std
cmc
sub
addr16
test
dec
add
lods
jle
xor
mov
fsts
sub
pushf
roll
mov
dec
movsb
mov
and
cmpsl
lock
notb
jp
scas
enter
sub
imul
and
bound
sub
in
or
sbb
mov
andl
aad
pop
bound
mov
xor
jo
test
into
mov
sub
jne
fsts
test
fadds
cmp
xchg
mov
sbb
push
ret
shlb
dec
pop
xchg
dec
lret
inc
repnz
pop
dec
int
lret
insl
mov
scas
ret
jns
jmp
inc
sbbb
jmp
stc
dec
adc
lret
sbb
stc
les
loop
lods
aam
inc
leave
jg
xlat
sub
out
pop
call
loop
or
xchg
add
out
add
cwtl
or
mov
jbe
popa
inc
movsl
pop
inc
mov
icebp
lods
cwtl
sar
mov
movb
test
test
rcll
into
popl
jnp
loopne
inc
mov
scas
add
mov
and
sarl
icebp
lds
mov
test
inc
aam
std
das
xor
adc
lcall
sub
enter
lret
ret
xor
xor
fistpll
inc
hlt
enter
push
lcall
mov
js
add
imul
leave
shrb
hlt
lods
call
repz
mov
xchg
divb
aad
fs
cmpb
in
xchg
call
ret
nop
sub
jne
pop
sbbb
cmc
mov
push
sbb
out
rcr
dec
das
lock
mov
leave
and
icebp
lret
cli
sub
pushf
ja
movsl
data16
hlt
add
mov
ljmp
mov
xchg
in
outsl
jl
push
adc
push
repnz
fimuls
mov
cmp
enter
rcl
sarl
imul
xchg
and
aaa
cwtl
je
je
ljmp
sbb
cld
rolb
mov
movsl
test
pushf
mov
mov
and
cmp
hlt
loop
je
fwait
enter
clc
test
mov
sub
sbb
out
lods
nop
or
xor
cmpsb
xchg
cwtl
xchg
add
add
popf
enter
mov
sarl
pop
mov
adc
push
gs
lea
jp
and
add
jle
xor
xchg
mov
ds
and
xchg
inc
lods
add
shrb
lods
push
nop
lcall
sbb
testl
sbb
idivl
mov
mov
dec
insl
mov
jp
enter
and
dec
lds
outsb
mov
add
hlt
mov
add
int
test
mov
push
xchg
xchg
xchg
lds
sbbl
lret
lods
dec
inc
sbb
dec
inc
mov
adc
mov
cmp
add
sbb
lods
mov
nop
rorb
scas
adc
fiadds
rcll
xchg
xchg
mov
jecxz
mov
jp
xchg
mov
les
sti
adc
or
stos
aaa
fimull
xchg
sbb
mov
test
lea
mov
mov
dec
std
bound
xlat
mov
pop
adc
imul
adc
test
js
fidivrl
out
push
nop
pop
jbe
nop
mov
sbb
jae
mov
mov
mov
xchg
inc
xchg
mov
xor
adc
ficoml
xor
dec
decl
mov
insl
nop
cwtl
push
jl
inc
mov
inc
dec
inc
scas
ret
xorl
xchg
mov
stos
shll
ja,pn
sets
xchg
mov
sbbb
mov
cmc
ljmp
inc
jbe
lcall
daa
fimull
push
adc
or
lahf
mov
push
mov
ret
adc
shlb
fstps
mov
mov
mov
je
mov
jne
xchg
adc
adc
orb
xor
mov
cmp
shlb
shlb
cmc
mov
hlt
sarb
popf
rcrl
pop
pop
pop
cltd
lds
and
add
rolb
xor
pop
movsl
or
adcl
jle
push
in
adc
hlt
xchg
xchg
xchg
cmc
lret
jge
xchg
int3
and
add
jecxz
inc
dec
orl
data16
xor
addl
and
xchg
xor
insl
cmp
mov
adc
testb
loop
mov
pop
ljmp
ret
mov
adc
dec
test
iret
sub
fisubrl
xlat
cmc
imul
sub
mov
insb
iret
mov
mov
add
fdiv
or
jle
mov
push
push
daa
outsl
inc
push
mov
or
dec
push
jp
fstl
pushf
ret
cmpsl
iret
test
cmc
ret
adc
cmpsl
test
outsb
pop
hlt
dec
dec
xchg
jbe
cmp
mov
xchg
lock
in
or
push
push
insb
push
push
cmp
sub
cmc
inc
mov
inc
cmc
inc
or
cltd
movsb
and
js
popa
testl
movsl
inc
jle
ror
insb
add
push
sbb
dec
stos
int3
test
mov
lock
xor
xchg
out
int3
ret
mov
or
cmp
add
adc
xor
and
arpl
mov
xchg
call
loopne
mov
scas
jmp
out
adc
jge
mov
xor
fidivl
and
push
dec
stos
push
or
fs
jb
xor
pop
sub
popa
inc
pop
jecxz
cld
and
mov
js
jbe
pushf
or
int
cli
mov
imul
jl
je
hlt
lcall
pushf
add
pop
jmp
arpl
rclb
adc
loope
mov
and
mov
mov
outsb
and
imul
mov
rcr
jb
leave
inc
insl
dec
mov
push
movsl
insb
rcr
loopne
shl
in
dec
mov
inc
inc
push
rcll
xchg
stos
dec
aam
or
test
sub
lcall
hlt
fisubrl
dec
lret
dec
hlt
daa
leave
mov
std
dec
out
push
lret
fldenv
cltd
pop
jmp
repnz
sbb
shrb
xlat
aaa
xchg
enter
or
leave
push
stc
push
xchg
cmpsl
sub
test
or
pushf
sub
dec
cld
fwait
adc
mov
and
int
aaa
fs
lds
sbb
adc
imul
xor
xchg
pop
fs
ffree
xor
hlt
or
js,pt
pusha
push
sub
imul
xor
xlat
fistpll
js
pop
mov
sub
adc
xor
rol
pusha
cmp
in
push
daa
dec
movb
mov
call
cmp
xor
jo
inc
jecxz
nop
jg
cmp
mov
nop
test
cmc
lahf
cmp
and
ret
push
test
adc
mov
cmp
dec
stos
jns
stos
popa
cmp
hlt
clc
dec
add
jmp
enter
or
xchg
lock
mov
imul
mov
rorb
jnp
js
sub
sbb
mov
cmpl
xchg
add
int3
cmpsl
ljmp
scas
pop
mov
mov
test
lods
movsl
jbe
xor
mov
ljmp
pushf
and
cmpsb
fwait
stc
mov
js
xchg
into
jbe
repnz
add
mov
jmp
lds
cli
sbb
and
loope
push
shlb
push
lea
rcll
lret
fsts
out
orl
pop
push
ds
mov
int
enter
jnp
mov
push
or
stos
aas
add
ja
fwait
jbe
sbb
adc
stos
push
and
imul
cmpsl
pop
push
mov
fbld
pop
xchg
subl
xchg
imul
cltd
dec
xchg
ret
out
std
jl
dec
bound
out
fcmovnbe
jle
aad
jmp
pop
mov
xchg
cwtl
mov
sbb
frstor
adc
dec
add
push
cmp
shlb
dec
mov
subl
pop
insb
dec
pop
adc
xlat
hlt
lea
xchg
je
dec
gs
pop
sahf
lret
in
add
adc
leave
push
loopne
mov
add
cmc
mov
mov
inc
push
mov
shrl
adc
jmp
aas
sub
fidivrl
and
in
mov
mov
add
cmp
hlt
aad
push
nop
shll
add
sub
cmp
mov
jno
lods
xlat
mov
in
je
aam
insb
not
sub
aam
pusha
mov
test
add
lods
jb
in
mov
push
push
pushf
push
dec
lods
mov
data16
fsubp
or
fdivl
in
xor
into
hlt
test
sbb
les
cmp
pop
les
fs
pop
bound
jno
mov
js
jl
movsl
shll
pop
cmp
jmp
adc
and
rcrb
pop
scas
push
mov
mov
sti
and
add
faddp
shrl
mov
lahf
rolb
pop
stos
jp
inc
jle
test
pop
add
pop
mov
mov
enter
jl
mov
add
jo
inc
nop
dec
dec
enter
or
lods
clc
cli
ret
jl
repnz
mov
add
add
sub
xchg
inc
push
cmpsl
cmp
dec
xor
push
shll
out
or
cltd
idivl
push
jle
pop
mov
cmpsb
push
mov
sbb
mov
lds
pop
add
or
or
pushf
cmpsl
mov
dec
mov
mov
dec
mov
pop
dec
outsb
fcmovnbe
adc
shl
inc
add
movsb
pusha
aad
in
adc
gs
mov
mov
ljmp
and
adc
xchg
pop
jb
lret
jl
sbb
mov
test
fistps
inc
add
or
insb
in
loope
out
pop
es
lea
fcomip
push
mov
pushf
add
adc
rolb
lods
inc
js
add
mov
incl
and
xchg
pop
imul
mov
rcl
int
lods
dec
lods
dec
push
push
push
add
sbb
sbb
and
movsl
shlb
enter
and
pop
adc
jecxz
js
es
adc
inc
ss
sbb
jge
out
mov
xor
xchg
xchg
test
adc
sub
insl
vpmaddwd
add
cmpsl
lods
lds
mov
test
repnz
stos
push
fimuls
xchg
notb
scas
icebp
jmp
jae
xchg
shl
lds
dec
popa
or
ss
sbb
cltd
dec
nop
adc
inc
ja
aad
adc
xlat
cmp
push
ret
adc
pop
mov
inc
rcr
sbb
pop
lods
mov
test
xor
adc
dec
xor
add
scas
ret
pushf
sarl
mov
xlat
mov
mov
jbe
add
add
jb
fldl
shrl
fcmovne
imul
scas
test
inc
xor
test
scas
rclb
pop
push
xchg
rolb
add
and
orl
cmp
jg
pushf
jns
adc
arpl
cld
scas
sub
inc
or
xchg
nop
sbb
aam
das
add
js
into
xor
push
inc
std
je
jno
jg
mov
mov
mov
je
fsubrp
sbb
push
adc
lret
dec
ret
pop
jg
aam
jmp
adc
xchg
sub
lret
push
daa
cltd
stos
inc
in
in
imul
test
pop
mov
pop
sarl
sti
jb
stos
and
xchg
pushf
fisttpll
add
fisttpl
adc
push
xchg
cld
inc
xchg
cltd
jae
rcl
inc
repz
movsl
rcrb
clc
or
loopne
enter
test
into
imul
xor
into
icebp
fidivrs
fimuls
adc
jmp
sbb
dec
xchg
rorb
xchg
cmp
adc
lret
stos
mov
jle
das
or
sub
jno
insb
stos
cmpsl
and
and
add
push
xor
into
orl
lods
xor
fidivl
mov
lock
push
fwait
and
pop
or
mov
fldenv
clc
jg
inc
test
fsts
test
jp
aaa
pop
fadds
ret
out
jns
mov
xchg
icebp
xchg
int3
fldl
xchg
lahf
pop
fidivrl
push
xchg
dec
mov
call
inc
or
call
adc
sub
ret
rclb
fcoms
ja
fidivrl
orl
ret
pusha
sbb
clc
push
in
mov
cmp
cmpsl
shufps
xchg
dec
pop
popf
mov
jp
push
xrelease
fistpl
lods
mov
insl
into
ror
aas
xchg
lcall
adc
mov
inc
jecxz
lock
test
jo
push
mov
xchg
add
dec
push
sti
neg
xor
adc
jo
jge
loopne
int3
ljmp
aam
inc
push
ret
xchg
add
mov
sahf
arpl
xchg
rcr
ret
xchg
add
lea
or
add
adc
fistps
and
shr
xchg
in
inc
xchg
xor
mov
sarl
ret
lret
xchg
inc
jge
adc
add
sti
pop
rolb
addb
js
roll
repnz
xchg
scas
mov
jecxz
push
imul
fisttpl
dec
sbb
xchg
in
pop
loope
adc
xchg
std
rclb
xchg
and
cmpsl
mov
push
leave
mov
adc
in
sbb
xchg
aam
movsl
pusha
mov
roll
push
cmc
cwtl
mov
clc
dec
leave
aad
imul
movsl
nop
pop
movsb
jno
fists
push
std
cmp
fwait
sar
fistpl
mov
pushf
or
loopne
mov
push
mov
outsb
xchg
sbb
push
xchg
shrb
xchg
mov
add
sub
int3
or
dec
int
mov
dec
pop
cmp
outsl
dec
dec
ljmp
add
data16
xchg
test
mov
jp
adc
mov
fildl
jmp
and
std
lret
mov
or
pop
or
imul
mov
xchg
aam
shll
inc
push
out
xchg
in
imul
or
sub
lods
hlt
lods
fdivrl
jae
enter
mov
xor
shr
into
adc
push
out
testb
push
add
jecxz
test
and
shll
or
jne
adc
mov
stc
mov
or
push
aas
inc
stos
mov
loop
push
scas
enter
popl
inc
jmp
or
and
imul
sub
jo
imul
mov
or
mov
xor
into
xor
scas
and
jb
fdivr
ficoms
movsb
mov
mov
or
movsb
cmp
scas
enter
fs
subl
adc
pop
push
push
push
pusha
inc
repnz
add
shl
push
in
pop
lret
mov
notb
dec
sti
pop
out
hlt
inc
pop
or
add
rep
stos
int3
pop
xchg
imul
enter
outsb
xchg
imul
lret
imul
push
imul
in
sbb
adc
mov
xchg
mov
push
imul
mov
test
xchg
xor
nop
test
xor
jo
sahf
xchg
cwtl
dec
in
cmp
imul
decl
xchg
cmpsb
sbb
sub
or
shrl
frstor
stos
outsb
add
sub
pop
out
out
sbb
adc
shrb
adc
lahf
mov
mov
popf
or
stos
and
out
cmc
cld
shl
jae
imul
rolb
test
gs
repz
imul
imulb
icebp
and
push
ja
fs
lods
mov
sub
out
add
rcr
mov
cmc
dec
ret
rcll
or
or
pusha
add
je
adc
aad
cmp
pusha
mov
int3
push
push
mov
mov
movsb
push
int3
pop
mov
adc
xchg
and
pop
mov
xchg
inc
pop
sbbl
insb
test
nop
les
dec
xchg
cmpsb
mov
movsb
fmul
icebp
adc
mov
bound
dec
cltd
pop
int
or
roll
leave
dec
mov
test
jmp
popf
add
xchg
mov
in
jae
popa
mov
sbb
daa
test
xchg
fistpll
jb
lcall
mov
shrl
pop
add
sbb
pop
adc
orb
mov
mov
dec
fiadds
in
pop
push
jmp
add
push
insl
pusha
es
fimuls
sub
add
dec
dec
loop
lock
inc
cmp
jns
insb
insb
mov
daa
movsl
mov
inc
jmp
mov
out
repnz
test
lods
xlat
movsb
adc
cmpsl
mov
mov
out
mov
icebp
xchg
je
xchg
sbb
dec
push
and
jl
ret
lcall
mov
push
call
or
jmp
mov
pushf
aaa
js
lret
mov
fsubrl
dec
nop
loopne
sub
jb,pt
push
popa
mov
ret
mov
ljmp
cmp
aas
mov
int
or
push
test
call
jno
movsl
xchg
das
and
out
cwtl
mov
mov
fwait
mov
test
imul
imul
xchg
notb
in
pop
dec
xor
into
ficomps
xchg
sahf
mov
js
fiadds
mov
mov
rorb
in
add
iret
jp
dec
push
jno
push
mov
xchg
push
mov
notb
mov
mov
mov
ljmp
test
fsubrs
pop
mov
lea
iret
sahf
dec
repnz
jns
in
sub
xchg
lcall
call
sub
pop
idiv
pop
dec
arpl
and
add
jmp
call
and
imul
pusha
cmpl
scas
int
cltd
test
xlat
mov
push
cltd
adc
fcoms
xchg
or
es
cmp
in
inc
add
out
lret
ja
lcall
insb
pop
or
xchg
sti
aad
jp
cmp
mov
shll
movsb
fldcw
addr16
or
adc
out
pop
nop
cmp
mov
pop
dec
fcmovnu
add
mov
jae
mov
shlb
sub
push
mov
mov
aam
repz
sbb
aas
mov
xchg
cld
fisubs
in
cmpsl
mov
xchg
mov
repz
sahf
int
js
arpl
xchg
icebp
into
aas
dec
inc
add
cmpsb
and
or
fsubrs
xlat
insl
out
mov
sub
std
mov
pop
xchg
stc
mov
push
sbb
cmp
push
mov
rorb
repnz
mov
inc
int
cs
adc
or
sbb
jle
adcb
hlt
ret
js
popl
dec
jno
xchg
scas
div
mov
into
cmc
std
push
jb
or
sub
rcll
jnp
dec
inc
shrl
into
cmp
or
mov
push
aaa
mov
xchg
cmp
adc
mov
call
mov
xor
jne
push
jmp
imul
fnstenv
mov
je
dec
test
dec
pop
add
pop
je
bound
jmp
fildll
xchg
jmp
aas
sub
leave
mov
test
jb
test
mov
pop
pop
or
fmuls
mov
and
lods
orb
push
jbe
pop
push
out
adc
jbe
and
dec
and
jecxz
repnz
cmp
imul
stos
test
jecxz
pop
jecxz
stos
pop
rcrb
leave
push
xchg
test
lods
call
lods
inc
jmp
mov
test
sub
sub
xchg
xchg
mov
or
icebp
and
inc
loop
jecxz
lods
rorb
adc
xchg
pop
xchg
hlt
mov
clc
add
in
movsl
scas
ss
pushf
xor
jno
out
and
nop
add
mov
xchg
sub
add
lcall
pop
fildl
js
cltd
lret
lock
pop
icebp
mov
pop
sub
xor
sbb
pop
cmc
cmpsb
jbe
push
push
insl
addr16
sahf
mov
cmp
shlb
sbb
dec
insb
loop
sub
mov
mov
xchg
shr
cmp
bound
punpckldq
scas
fs
cmp
in
bound
push
cmp
push
lret
pop
sbb
fs
adc
xchg
popf
xor
mov
push
pop
cmpsb
ret
bound
les
xlat
scas
adc
mov
icebp
aas
or
pop
and
stos
mov
xor
leave
add
call
loopw
je
enter
sbb
lret
cmp
outsl
push
notl
mov
js
mov
dec
sarl
inc
lret
lea
mov
mov
or
fucomp
out
xchg
shrl
adc
mov
pop
pop
lods
fistpl
mov
movsb
icebp
jae
sub
cmp
fucompp
dec
aad
je
fcmove
mov
sbb
add
movsb
or
clc
jne
iret
pop
push
add
lret
pushl
psubsw
xchg
or
int
push
mov
pop
leave
lds
sub
inc
imul
dec
xchg
call
mov
test
or
dec
mov
ror
inc
jg
shlb
xor
fistpll
cmp
sbb
push
decb
xchg
jbe
jg
pop
mov
xchg
sti
imul
cwtl
cmpsl
fs
adc
ss
push
sbbb
je
mov
push
xchg
popl
cltd
ljmp
movsb
jecxz
mov
mov
shlb
les
xor
jle
into
lods
xchg
int
rcll
cmpsb
mov
enter
das
ds
mov
dec
inc
push
mov
or
and
jmp
inc
test
dec
es
cli
xchg
adc
push
xor
inc
pop
or
pop
popf
rcll
rcll
in
add
jmp
fiadds
inc
stos
push
jl
mov
jbe
pop
dec
lods
inc
xchg
pop
aad
mov
popa
pushf
lds
pop
xchg
jo
inc
mov
jle
xor
add
aam
mov
imul
adc
insb
xor
pop
jo
je
decb
push
aaa
xor
xchg
adc
test
shl
js
inc
push
lret
mov
lahf
outsl
dec
xchg
mov
mov
jecxz
fnstenv
mov
call
fistpl
xchg
mov
js
lcall
lds
sub
mov
inc
dec
test
in
jb
aaa
dec
push
pop
sbb
xlat
fcomip
push
or
les
arpl
pushf
xchg
mov
mov
sahf
xchg
subl
cmc
mov
lcall
cwtl
sbbb
mov
cmp
movsb
in
xchg
pusha
jb
fwait
imul
mov
sub
imul
mov
fs
xor
movsl
inc
bound
mov
add
pop
fbld
pushl
and
inc
push
jl
mov
ret
sub
xacquire
testb
jns
pop
imull
sbb
stos
loope
jl
xchg
aad
xchg
pop
cli
fwait
xchg
test
fcmovne
inc
fmull
lcall
sub
lea
mov
and
add
cmpsl
pop
pusha
add
adc
mov
aad
pop
enter
shlb
out
cmpsl
add
xchg
mov
push
into
cmp
jg
dec
mov
xchg
js
inc
mov
mov
adcl
inc
jle
es
mov
shr
lods
cli
inc
loopne
sbb
nop
sub
rcll
test
lds
cmc
or
sbb
lock
lret
lds
data16
call
pop
test
adc
jg
fsubl
lock
push
movsl
movsb
fsubrs
xchg
push
xadd
movsb
stc
pusha
pop
xchg
ret
lods
adc
sub
mov
sbb
push
or
mov
shlb
imul
fiaddl
outsb
mov
mov
shrl
mov
add
pop
fstpt
fwait
adc
aaa
and
popf
xlat
jl
out
mov
mov
sub
mov
mov
sarb
xchg
aad
movsl
inc
or
arpl
mov
cmc
cmpsl
push
cli
or
popf
mov
and
adc
xchg
jg
pushw
mov
dec
loop
add
insb
or
into
xorb
rcrb
mov
pushf
adc
cmpsl
and
xchg
push
xor
or
pop
push
icebp
out
ljmp
inc
pop
and
scas
fcmovnu
adc
loop
in
xchg
jo
lds
push
addl
out
add
rcl
sub
mov
dec
mov
mov
lock
mov
mov
dec
mov
fnstenv
dec
int
jle
jmp
lret
cmpsb
inc
test
add
call
add
sbb
es
aad
mov
push
and
je
movsl
loope
test
or
or
ret
mov
jo
xchg
mov
hlt
xchg
mov
sub
pop
shlb
outsl
fdivrs
rolb
cmp
add
rorb
daa
js
roll
xchg
pop
in
mov
mov
inc
xchg
adc
rcrl
dec
aas
mov
shlb
test
lahf
mov
shrb
std
sbb
cltd
add
inc
or
cltd
call
push
ret
xor
xchg
adc
test
xchg
roll
push
inc
mov
xacquire
stos
mov
scas
add
mov
or
sub
pop
aas
or
scas
js
sub
inc
mov
mov
and
pop
add
xchg
int3
lods
pop
mov
cmp
xchg
inc
lahf
mov
cmpl
sti
or
mov
or
xchg
rclb
cmp
loope
rcrb
imul
push
lock
and
xlat
mov
mov
jge
xchg
fdivrl
sub
dec
into
jp
shll
sbb
in
xrelease
pop
mov
xchg
sti
mov
jg
xchg
mov
push
sub
movsl
mov
pop
mov
xor
movsb
imul
bound
adc
cs
push
inc
int3
and
lock
add
ss
xor
push
push
sbb
cmpsl
xchg
add
ret
cmp
or
dec
inc
filds
mov
ljmp
mov
int3
lea
jp
sub
int
mov
repz
and
mov
mov
enter
xchg
pop
decl
mov
negl
aam
jb
xchg
add
movsb
int3
call
iret
cwtl
das
push
or
push
insb
and
and
push
lds
ret
stos
ret
ret
push
nop
mov
jns
lahf
sub
ror
iret
jne
mov
mov
ficompl
stos
hlt
xchg
or
xor
mov
mov
cwtl
mov
push
xchg
fldcw
mov
cmp
pop
add
add
add
fdivrl
iret
xchg
jl
shrl
mov
shr
xor
xchg
xchg
aas
sub
retw
lock
jae
lcall
cmp
push
jnp
add
or
bound
ds
into
loopne
add
mov
popf
das
stc
push
xchg
pushf
sti
mov
xchg
popa
pushl
mov
cmc
jp
cmp
xlat
sbb
call
sarb
push
jmp
or
int
idiv
in
jmp
xor
clc
arpl
mov
and
stos
push
js
ret
sbb
enter
ljmp
pop
mov
sub
call
repz
test
mov
mov
hlt
outsl
or
loopne
lds
shrl
add
push
fdivrl
xchg
fsubl
aas
dec
lds
mov
pop
aas
into
dec
or
mov
cmp
scas
sbb
lret
arpl
test
jb
or
cmc
call
add
lcall
and
push
xchg
mov
out
fmuls
hlt
faddl
outsb
mov
xlat
cs
ffree
mov
call
mov
pop
fmull
mov
call
hlt
iret
push
cs
jb
out
mov
imul
stos
mov
mov
pop
ror
mov
imul
adc
or
rol
lcall
ljmp
daa
idiv
cli
adc
lcall
xchg
push
mov
imul
or
test
sbb
fucomp
lcall
notl
aad
mov
out
iret
dec
push
bound
enter
orl
or
lret
shlb
adc
push
and
cmp
mov
sub
sbb
push
cwtl
shr
ret
sbbl
or
jns
mov
push
xchg
jnp
jb
orl
mov
xlat
mov
sub
mov
cmc
enter
dec
xchg
cwtl
push
test
lret
icebp
test
aam
cmpsl
inc
imul
in
pushf
outsb
dec
push
or
fstpt
sti
jmp
sub
pusha
dec
mov
test
push
jmp
adc
lods
jbe
iret
es
jmp
jg
imulb
add
xchg
imul
xchg
or
mov
adc
lods
mov
loope
cmp
hlt
iret
ret
jecxz
mov
mov
rol
cwtl
cmc
cwtl
es
mov
lahf
adc
movsl
mov
inc
fs
rcrb
out
gs
jg
xchg
jmp
imul
lret
in
into
sub
dec
scas
outsl
dec
js
or
test
js
or
fstp
lret
mov
adc
lods
les
adc
dec
enter
ret
mov
mov
lret
pop
xchg
movsl
aaa
pop
and
lahf
mov
es
jle
pop
pop
mov
stos
pusha
jnp
inc
pop
or
add
shrl
pop
test
sub
dec
ror
add
and
xlat
push
or
add
in
iret
pop
or
and
gs
adc
out
xchg
lcall
fbstp
adc
bound
lret
add
add
jns
ljmp
nop
jae
mov
in
int3
adc
fdiv
in
ret
clc
mov
sub
sbb
das
pop
pop
rcr
mov
outsb
pop
or
mov
bound
ret
sarl
mov
mov
cmp
leave
xor
sbb
mov
rorb
popa
jge
addb
jp
add
mov
mov
rcr
xchg
rcl
test
movsl
and
idivl
dec
std
stos
xor
adc
andl
xchg
aaa
cmpsb
xchg
ret
inc
jnp
ja
cmpsb
xor
jns
sbbb
notl
xor
or
ret
mov
mov
push
mov
inc
sub
imul
daa
repz
pop
mov
outsl
xchg
xchg
mov
jno
adc
fidivl
xor
pushf
mov
sub
int
jge
js
mov
mov
push
cli
and
test
mov
or
xlat
das
mov
push
fistpll
push
ret
or
aas
popf
stos
adc
xor
ljmp
jnp
jbe
inc
cmp
shl
jmp
or
incb
adc
mov
sub
mov
xchg
xor
aaa
iretw
clc
add
std
and
jge
mov
imul
pop
mov
or
mov
popf
arpl
mov
fiaddl
push
scas
jo
pop
rorl
hlt
push
push
jecxz
push
pop
sti
or
adc
cmpsl
dec
aad
sbb
ljmp
jb
ss
and
jg
lea
lcall
fsub
push
pop
inc
fmull
cmpsl
xor
in
jno
or
xchg
xor
inc
addr16
add
mov
jne
cmpsl
cmpsl
divb
dec
stos
mov
jle
leave
ljmp
xchg
add
or
mov
clc
inc
mov
sar
loopne
gs
addr16
mov
cwtl
or
in
ror
movsl
andb
mov
jo
insl
test
in
xor
inc
sub
cmp
inc
pusha
mov
pop
mov
add
mov
aas
xor
neg
rcrl
outsl
xor
aad
mov
cmp
cmc
mov
leave
out
test
test
test
cmp
jp
sbb
in
jne
pop
clc
add
arpl
and
dec
repnz
push
and
dec
outsl
pusha
jge
adc
popf
ret
cld
popf
cmpsl
push
rcll
filds
aaa
sbb
xchg
push
push
nop
movsl
sbb
mov
test
push
xchg
inc
mov
aam
punpckhbw
or
cmpb
rorl
aad
mov
js
xchg
in
sbb
mov
imul
xchg
adc
sarl
sub
aas
push
imul
test
sub
icebp
add
add
shl
cmp
mov
ret
cmp
movsl
cwtl
hlt
rolb
lea
and
movsl
jg
je
sbb
and
popa
lret
insb
push
and
mov
std
hlt
pop
dec
jmp
pop
shr
mov
pushf
cmp
jp
cmp
movsl
adc
out
dec
dec
aam
pop
adc
add
adc
fistpl
dec
push
fucom
adc
cmpl
push
push
lret
popf
mov
rorb
push
fs
xor
cmpsl
call
ds
and
addl
jl
stc
mov
data16
dec
sub
mov
imul
push
rcll
mov
sbb
ljmp
add
adc
jp
pop
lock
mov
push
cld
push
sub
mov
xor
stos
mov
mov
test
sbb
jo
and
int
sbb
into
test
mov
iret
cmc
test
mov
out
xchg
stos
test
mov
push
out
pop
movsl
js
cmp
jbe
mov
outsl
loopne
mov
jl
leave
sbb
out
push
sub
add
test
test
fisubs
cwtl
pop
cltd
cs
mov
loop
mov
add
mov
sahf
dec
dec
lcall
nop
mov
inc
mov
mul
out
inc
fsubs
pop
jmp
fst
clc
into
lret
inc
pop
pop
add
cmp
dec
rolb
pusha
fldcw
xlat
mov
cld
push
xor
jmp
pusha
add
rcr
lahf
add
and
mov
mov
jp
mull
fstpl
jbe
xchg
jle
xor
inc
and
into
mov
mov
sbb
mov
pop
mov
negb
adc
xchg
pop
shl
jecxz
cmc
pusha
and
adc
ds
sbb
inc
lods
cmp
and
movsb
dec
mov
repnz
sub
cltd
dec
scas
test
xchg
cwtl
nop
push
push
call
test
in
cmp
jno
es
out
es
leave
jno
sub
xor
mov
std
test
dec
xchg
xchg
sbb
incl
sbbl
mov
loop
inc
inc
aas
and
bnd
xchg
and
movsl
nop
ret
ss
and
push
add
xor
call
mov
push
push
cmc
jl
inc
xlat
adc
cmp
lret
cld
push
lret
lock
std
sbb
add
pop
into
cli
cld
jo
negl
pop
mov
decb
and
adc
or
jo
lock
scas
xlat
mov
xor
out
dec
dec
orl
mov
addb
mov
push
shrb
mov
hlt
sbbl
jns
jp
in
inc
fimuls
cmp
mov
cmp
xor
mov
adc
cltd
mull
cwtl
mov
cmp
jp
imul
xchg
mov
adc
lods
cmpsl
scas
test
sti
mov
insb
fmuls
dec
sub
mov
add
mov
lock
mov
hlt
mov
cli
mov
mov
add
xchg
add
adc
mov
loop
test
push
mov
mov
test
inc
cmp
mov
mov
mov
xchg
jmp
sub
loopne
lcall
orb
mov
pushf
loopne
imul
adc
shl
and
cmc
sub
fs
testb
sbb
in
cmp
lea
dec
mov
outsb
call
scas
outsl
lret
std
mov
fiaddl
adc
xchg
xor
test
mov
hlt
mov
imul
in
aad
fisttpll
lods
aaa
cltd
or
shrb
les
xchg
jno
cmp
cmc
cmpsb
imul
subl
xchg
and
lea
jno
mov
out
xchg
jge
les
int3
call
test
std
andl
nop
add
rcll
mov
inc
mov
enter
mov
cmp
insl
std
mov
xchg
push
movsl
dec
xchg
cs
fistl
jb
and
insb
or
dec
cltd
pop
movsb
xlat
mov
movsb
loopne
xor
ljmp
sahf
push
sbb
mov
je
rcrb
shlb
dec
sbb
jge
xchg
lods
rorl
mov
leave
imul
jo
mov
or
fstpt
xlat
pop
or
cmpsl
cmpsb
jb
mov
inc
pushf
js
inc
stos
inc
das
mov
jl
fcomps
icebp
adc
rorl
jle
mov
repz
scas
mov
xchg
and
jb
and
loop
std
pop
stos
loopne
sti
sub
mov
inc
pop
add
mov
rolb
or
adc
stos
pusha
sub
arpl
mov
cmpsb
rclb
scas
push
fsubp
xchg
jns
ret
fcomip
lret
in
xchg
or
mov
adc
add
adc
cld
cwtl
je
cmp
cmp
inc
popl
lret
mov
inc
pushf
inc
dec
daa
mov
aam
mov
mov
inc
mov
cwtl
testb
sub
xlat
nop
pop
fpatan
xchg
lret
add
mov
lcall
xchg
add
xchg
xchg
idivb
sti
push
xor
fldenv
aaa
les
and
dec
adc
xchg
fmull
xchg
hlt
sub
or
xor
mov
cmpsl
adc
lcall
or
xlat
aas
push
or
rolb
jp
xor
lcall
sti
jge
mov
push
push
adc
aas
pop
lahf
mov
js
aas
fildl
inc
cmp
dec
cmp
push
insl
leave
pop
in
cmc
sub
xlat
sub
push
iret
bound
lret
push
rorb
addl
jbe
xchg
test
or
mov
push
insb
mov
jp
inc
sub
push
sbb
adc
add
sbb
outsl
ljmp
int
movsb
and
outsl
xchg
xor
inc
jge
or
lods
sti
xlat
enter
mov
mov
cmp
push
xchg
rcrl
inc
and
push
adc
call
nop
movsl
sbb
sbb
rorl
mov
ja
rclb
xchg
shlb
ljmp
mov
jno
add
loope
xchg
scas
cmpsb
inc
sbb
dec
xlat
sar
sbb
lock
sbb
adc
or
mov
call
andb
ja
cs
test
ja
adcl
push
add
sub
pop
loopne
stos
shrb
lods
clc
jg
jle
or
mov
add
lea
insb
lcall
cltd
mov
subb
cmp
cltd
cli
fwait
imul
push
lods
shlb
test
les
dec
out
sti
xor
adc
mov
lret
mov
rolb
add
mov
inc
add
push
pop
imul
lret
or
add
mov
fsubrs
push
outsb
add
pusha
inc
xchg
movsl
aaa
push
xlat
scas
and
imul
mov
les
shlb
or
lret
inc
sbb
xor
or
xchg
shlb
jle
sub
lcall
or
leave
mov
test
inc
test
enter
mov
es
cs
or
sbb
sarl
scas
mov
pop
pop
mov
shl
in
rorb
adc
mov
test
jg
sbb
cmp
cmp
xchg
inc
xchg
sarb
ret
les
shlb
popfw
add
test
fisubs
ds
xor
lds
cs
pop
jns
or
roll
js
ja
test
mov
ds
cld
mov
cmp
mov
jp
notb
jns
rclb
mov
in
mov
push
testb
cmp
scas
test
subb
and
pop
xor
sbb
aad
stos
inc
enter
xchg
or
fistpll
std
je
add
outsl
movsl
mov
out
stos
cmp
mov
jne
or
inc
jbe
fstpt
clc
push
and
stos
ficomps
xchg
lea
int
rcll
mov
jnp
or
push
out
jne
lret
push
js
ja
loope
xchg
ljmp
jecxz
push
enter
add
test
test
inc
pop
push
aaa
lods
inc
jmp
push
lods
out
vmread
jle
aaa
xor
leave
inc
or
lock
cmp
mov
xchg
shl
int3
lcall
mov
lds
sub
mov
push
xchg
pop
pusha
dec
push
imul
leave
mov
sbb
adc
fcomp
sub
es
data16
jecxz
sbb
cmp
sbb
pop
push
adc
inc
jae
icebp
cmpsb
xchg
pushf
inc
push
xchg
xchg
dec
lds
xchg
out
cmc
or
xchg
adc
or
push
fistl
add
hlt
jnp
imul
mov
nop
lods
inc
nop
aaa
pop
aaa
aas
inc
mov
movsl
cltd
xorl
or
jp
and
adc
aam
or
mov
pushf
stos
xchg
add
or
fisttpll
pushf
in
cld
adc
lret
adc
icebp
lret
sub
in
lret
loop
xlat
or
push
rcrl
mov
jb
call
and
ss
mov
jb
das
sbb
xchg
adc
adc
mov
movsl
fcoms
xchg
jle
repnz
xlat
int3
mov
push
mov
push
ja
rorl
loop
cli
cmp
loopne
cli
xlat
jns
dec
ret
test
movsl
test
outsl
movsb
jbe
xchg
int
scas
test
inc
mov
andl
push
test
out
popa
cmc
mov
movsl
jg
pushf
in
testb
fs
jnp
cmpsl
add
push
outsl
pop
pop
jmp
xchg
adc
push
mov
jmp
mov
inc
inc
sbb
xchg
jle
and
inc
pop
pushf
fsubrp
xchg
das
adc
sbb
add
xlat
xlat
mov
add
test
sarb
dec
xchg
and
ret
push
mov
mov
imul
mov
pop
push
or
cmp
out
push
insl
imul
push
push
mov
lds
inc
rcrl
sub
icebp
push
xchg
pop
scas
aas
xchg
mov
mov
cmp
decl
fisubs
or
addr16
dec
das
mov
or
sub
sbb
lea
rcrl
push
lods
aad
js
stos
outsl
icebp
into
inc
mov
int3
rclb
fsubs
push
cmp
test
shlb
es
xchg
lret
and
dec
lcall
stos
jecxz
outsl
cmp
and
rcrb
enter
add
popf
pop
jo
fstpl
jb
sub
adc
js
fcoml
ds
bound
mov
and
rcrb
movsl
hlt
xor
push
jbe
push
push
jle
mov
shrl
push
or
add
xchg
xlat
add
push
jg
cmovl
jmp
push
ja
sarl
ror
push
into
cmpsb
outsb
cmc
lret
xchg
fs
dec
out
and
jmp
dec
xchg
mov
mov
sub
or
jo,pn
hlt
dec
pop
xchg
mov
pop
leave
test
add
shrb
cmpsb
mov
push
cmp
sub
and
cmp
jmp
xchg
cmovno
lcall
jg
popf
or
jno
cmpsl
loopne
scas
jns
mov
or
repnz
inc
inc
dec
iret
shlb
xchg
ljmp
cmpsl
mov
sub
add
sti
mov
sub
cmpsl
mov
jmp
dec
movsl
movsb
mov
rolb
jmp
rcrl
mov
xor
xchg
mov
outsl
mov
jo
inc
mov
in
cltd
shr
nop
mov
movsl
icebp
cwtl
test
jmp
xchg
push
test
insl
mov
ficoml
pop
nop
mov
xorl
pushf
mov
lea
shrb
imul
mov
test
enter
xor
add
add
push
mov
ss
es
adc
fadd
iret
xor
jbe
adc
fnsave
iret
xor
pushf
dec
sbb
add
xor
xor
jp
movsb
mov
mov
jb
mov
stc
js
stos
jge
shll
inc
lret
fwait
mov
sti
push
add
aam
inc
lods
cmp
in
stos
xchg
rclb
leave
mov
push
daa
xchg
ffree
pop
insl
jg
mov
adc
dec
pop
scas
mov
rclb
jae
inc
fwait
cmpsb
push
mov
mov
mov
pop
pop
dec
shrl
hlt
jae
je
sub
loopne
lods
mov
nop
sub
lock
jns
inc
push
and
pushf
push
and
mov
mov
xorb
movsb
and
xchg
test
add
push
xchg
sbb
mov
ret
jle
jl
push
cmp
mov
mov
std
lea
aam
cwtl
cmc
shrb
fwait
add
rcl
std
xchg
xorb
loop
hlt
jmp
lahf
sub
xchg
push
test
adc
test
shlb
idivb
jbe
inc
je
inc
aam
outsb
mov
pop
add
mov
std
xrelease
mov
cwtl
jl
add
mov
and
add
popf
lahf
lea
add
divb
pop
xchg
imul
fstp
add
xchg
sbb
lods
mov
mov
adc
fildl
add
jle
ljmp
pop
adc
enter
add
pop
pop
mov
sbb
fimuls
inc
iret
dec
mov
jecxz
int3
loope
je
test
mov
loop
rclb
out
add
enter
xchg
in
or
adc
rcll
adc
sub
sbb
dec
aas
and
pop
ror
movsl
add
sub
ror
dec
subl
mov
int3
dec
sahf
fdivs
add
lahf
push
leave
fisubs
cld
mov
mov
inc
push
mov
xchg
enter
xor
out
xchg
nop
mov
add
mov
mov
mov
fwait
or
inc
sub
mov
xchg
das
push
out
cmpsl
call
mull
jmp
pop
fsubl
arpl
cwtl
enter
std
nop
add
add
lret
adc
inc
and
sarb
rcll
pop
jmp
push
adc
mov
adcb
push
dec
outsb
cltd
xchg
push
insb
xchg
xchg
adc
and
add
hlt
sub
mov
data16
mov
out
enter
xchg
dec
mov
and
jbe
jg
in
ffreep
fwait
std
lods
rolb
inc
mov
test
stos
imul
sub
mov
xchg
stos
pop
jp
jb
or
xchg
rcrl
push
sub
jo
pop
fsubrl
pop
lds
xchg
mov
mov
test
lret
pop
stos
fnstsw
mov
popa
pushl
nop
cmc
fldl
cs
xchg
rolb
js
ja
add
pop
or
test
stos
sub
cli
imul
add
add
xchg
cli
inc
push
mov
rclb
fmuls
sub
push
dec
sbb
inc
pop
mov
jmp
sbb
xor
push
cmc
and
hlt
cmp
out
mov
lea
mov
cltd
cmpb
repnz
and
lods
mulb
ja
cld
out
sbb
icebp
in
mov
sti
aad
push
loope
push
push
stos
in
inc
clc
hlt
mov
mov
sub
fisubrs
inc
cmc
xchg
mov
push
rcl
pusha
cltd
jg
mov
xchg
iret
aad
test
test
popf
push
aam
adc
xor
leave
cmpsb
les
fisttpl
fists
sbb
inc
push
pop
test
orl
fsubl
fdivr
scas
mov
xchg
xlat
jle
mov
cvtps2pi
cmpsb
xchg
inc
repz
mov
pushf
mov
ret
les
rorl
or
pop
movsb
dec
mov
out
ljmp
pop
leave
pop
jno
addl
dec
and
imul
out
ja
adc
xchg
shrb
shrl
cmp
ljmp
mov
or
rep
std
pop
jbe
xchg
dec
dec
push
fbstp
mov
push
repz
mov
nop
mov
jmp
fmuls
orl
movb
mov
jl
out
int3
fildl
mov
pop
loop
xchg
sbb
cmp
and
mov
mov
ljmp
push
loop
mov
movsb
mov
pushf
cld
jno
dec
mov
or
dec
out
lret
push
or
mov
ret
outsb
push
or
mov
mov
sub
rcll
test
nop
xor
or
outsl
lock
ljmp
sub
pusha
popl
mov
or
rcl
push
call
pop
xor
test
in
xchg
fildl
pusha
ljmp
push
cmpsb
mov
add
stos
push
push
push
mov
mov
or
test
push
fadd
cltd
push
out
fcomip
aam
push
fiaddl
mov
dec
insl
enter
aad
imulb
push
mull
pop
shll
aaa
or
push
in
in
imul
cmp
fisubrs
xor
cmp
test
aas
xor
mov
ret
rcll
and
int3
into
mov
mov
jbe
cmpsb
icebp
mov
xor
cmp
std
inc
dec
cltd
dec
loop
pop
nop
sbb
jae
lods
fistl
dec
popf
push
decb
xchg
and
push
xor
mov
and
jmp
sbb
in
lahf
and
xchg
mov
push
movsl
push
xor
mov
movsb
mov
iret
mov
sub
leave
shlb
test
andb
mov
xchg
jbe
dec
popf
into
cmc
sbb
cmp
fbstp
in
jb
lahf
ljmp
adc
mov
or
notl
lret
push
out
inc
fchs
sbb
rcl
xchg
cltd
out
cmp
mov
sar
lods
adc
cld
add
enter
cmp
mov
mov
mov
inc
js
pop
push
aad
add
push
mov
fcmovne
or
loope
cmp
add
rcll
clc
lahf
push
mov
ret
push
in
aas
cmpsl
push
jecxz
push
sti
stos
dec
xchg
mov
sbb
sub
fcmovne
inc
sub
subl
xchg
hlt
fs
push
sbb
fildll
sbb
xchg
push
jle
insb
mov
in
imul
push
inc
push
push
sub
xlat
and
mov
jbe
enter
adc
mov
iret
cmp
pop
cmpsl
test
mov
adc
jno
repz
push
bnd
mov
mov
imul
fcom
pop
dec
jp
stc
fists
mov
out
dec
ljmp
bound
pushf
outsb
lods
fstl
testb
ret
pop
lret
pop
es
xlat
sbb
mov
lcall
fsubr
addl
loopne
cld
xchg
addl
ret
loopne
shl
sbb
ss
xlat
in
cld
sti
xchg
dec
mov
pushf
testb
mov
je
mov
sahf
jns
notl
imul
lea
adcw
push
cmpsb
mov
push
shlb
pop
sub
pop
into
cs
ljmp
or
leave
fisubrl
or
hlt
mov
or
xchg
pop
and
push
icebp
inc
jp
mov
into
cmp
jnp
das
adc
push
or
pop
jp
xchg
xchg
inc
cmc
jne
jmp
ja
inc
mov
cmc
xchg
jbe
mov
movsl
enter
or
rorl
cwtl
ret
nop
into
ss
iret
dec
lea
inc
mov
xchg
movsb
cmc
xchg
stos
mov
mov
adc
movsl
stos
jne
cli
pop
fists
push
or
nop
dec
call
jp
cmpps
cmp
shl
pop
jle
lods
cmp
int3
aad
mov
jbe
inc
jo
hlt
lcall
ja
stos
xor
xor
imul
aaa
sbb
dec
mov
fldl
notl
xor
call
lahf
jbe
jo
popf
dec
in
mov
ja
orb
jne
ljmp
lcall
push
sarl
lock
lods
ret
rcrl
pop
je
xor
xchg
pop
fwait
cmc
out
dec
or
push
pop
data16
jno
lcall
inc
xor
and
sti
and
pop
cmp
mov
sarl
or
cmp
dec
cmc
add
out
jle
mov
fisubrl
jl
or
jmp
mov
adcl
mov
xchg
or
inc
insl
mov
data16
shll
pop
rcrb
cmc
in
push
sub
stc
aad
inc
out
bound
push
mov
cmpsl
ja
lods
cli
dec
adc
push
jl
daa
jb
sbb
xlat
push
leave
arpl
scas
mov
roll
or
inc
mov
icebp
das
inc
movsl
push
xchg
dec
mov
jge
addl
add
int3
cltd
jnp
out
inc
ret
clc
and
outsb
xchg
scas
movsl
xor
lods
push
push
xor
jg
mov
repnz
pop
mov
add
mov
mov
and
jle
mov
add
rclb
pop
fists
xchg
or
mov
mov
out
adc
or
mov
xchg
movsl
loop
cmc
jge
lea
imul
mov
icebp
mov
xchg
mov
imul
or
icebp
cmp
movsb
and
and
cld
push
inc
ret
or
jae
and
int
push
js
test
gs
cmpsl
pop
loopne
push
adc
cmpsl
or
lds
push
shl
mov
fbld
ss
stos
call
push
push
mull
pop
lock
xchg
fdivrl
enter
xor
fwait
nop
ja
cld
mov
mov
and
inc
xchg
nop
push
and
test
das
adc
aas
push
movsl
in
jl
jecxz
mov
inc
mov
push
pop
adc
fildll
call
in
in
sarb
movsl
and
add
ja
lea
pusha
call
push
xor
xchg
leave
fwait
daa
xor
in
jnp
xchg
cmpb
hlt
clc
mov
inc
movl
arpl
mov
scas
add
add
mov
mov
sarl
je
test
add
imul
xchg
sbbl
ss
std
fsubrp
inc
add
sarb
add
jo
fsubs
in
js
pusha
and
or
mov
iret
outsb
or
inc
cwtl
pop
cld
rolb
imul
fidivrl
mov
dec
cmpsb
push
jle
std
inc
js
and
iret
das
inc
loope
lea
stos
mov
jg
mov
cmc
clc
inc
ds
cmpsl
idivl
loop
xchg
cwtl
push
xchg
mov
je
in
xchg
jbe
roll
and
addl
mov
or
xor
lahf
cmpsb
les
mov
pop
pushf
jns
call
fsts
into
xor
or
push
or
or
repz
dec
int3
mov
sbb
lock
mov
pop
je
hlt
inc
dec
les
xor
enter
xchg
adc
insl
mov
or
xchg
in
cwtl
lea
lds
push
aas
xor
call
mov
ret
cmp
xchg
mov
lods
xor
push
inc
cmp
mov
movsb
xor
add
out
popf
push
lds
ficoms
aas
xor
xor
xor
jle
mov
mov
push
jl
xchg
insb
xchg
fst
and
js
jmp
pop
sub
sarb
or
adc
mov
aaa
cld
andb
aam
test
and
icebp
dec
addb
lock
ss
jo
orb
outsb
xchg
fildl
loop
loop
loop
jne
leave
mov
dec
call
int
cmp
sahf
ljmp
mov
jg
daa
jg
inc
hlt
shrb
xchg
sti
sbb
fwait
jmp
xchg
push
mov
jae
loopne
mov
mov
movsl
mov
imul
or
sbb
add
call
cmp
insl
adcl
adc
sarb
fidivl
push
or
push
mov
jmp
js
mov
and
pop
inc
cli
ret
cwtl
rol
cwtl
test
subb
or
mov
test
xchg
jmp
in
mov
aaa
test
mov
or
inc
lret
mov
adc
cwtl
xchg
js
cmpsl
enter
sbb
mov
push
pop
pop
in
orb
leave
movsb
sub
mov
mov
adc
xchg
mov
dec
pop
testl
dec
cli
je
push
cmp
and
roll
mov
add
popf
call
xor
lahf
or
or
das
xchg
mov
lock
mov
cmp
scas
sbb
jl
adcl
enter
loope
and
enter
std
push
test
lretw
push
dec
fs
or
fistl
and
aam
inc
cmc
ss
mov
sub
gs
test
imul
js
imul
mov
repz
mov
dec
inc
pusha
subb
xchg
pop
add
aam
call
shrl
add
sbb
mov
movsb
push
cltd
nop
jle
add
into
cmc
loopne
in
cmp
fsubp
push
push
adc
xchg
push
push
dec
mov
daa
xlat
xchg
sbb
xorb
test
movsb
jae
xor
mov
imul
out
lret
aas
js
lea
and
xor
push
jl
jbe
mov
add
adc
aad
push
or
imul
lea
out
mov
add
pop
test
sbb
and
in
dec
ficomps
jo
adc
in
call
test
push
aam
stos
or
sbb
or
stc
jno
je
jmp
in
ficoml
xor
or
daa
xchg
out
jmp
mov
int3
inc
loopne
mov
aad
call
mov
rcll
sub
mov
lods
inc
xchg
cwtl
ds
xor
lret
repz
xchg
sub
ret
into
cmp
sbbb
leave
lret
fdivl
sti
ljmp
push
out
adc
aad
add
mov
cmp
shl
sub
in
jo
push
das
in
adc
and
jp
dec
mov
dec
xchg
jbe
xchg
inc
cmp
add
jge
and
in
or
ljmp
jmp
daa
mov
mov
dec
cmp
loop
popf
push
jp
iret
jbe
or
adcl
adc
rcll
dec
sbb
mov
lcall
test
hlt
mov
mov
popf
adc
add
outsb
aad
push
lret
jno
add
leave
scas
mov
xchg
subb
add
push
jmp
inc
mov
imul
out
mov
pop
in
pop
stos
cmp
sbb
inc
fcmovnu
cmpsb
rcl
add
outsb
fnstcw
push
mov
imul
dec
loopne
fcmovnu
add
mulb
cmp
fimull
xchg
push
sub
adc
fsubrp
or
cmp
ja
xor
iret
aaa
nop
sub
xor
repnz
fisubs
mov
sub
stos
lds
daa
xchg
xlat
fisttpll
mov
test
dec
xchg
int
stc
iret
pop
cmpsl
fs
icebp
sbb
xchg
rorl
ret
jg
pop
xchg
cmc
xchg
pusha
push
mov
divl
out
loop
mulb
push
xchg
decb
xor
jne
mov
in
cld
dec
and
mov
mov
mov
imul
and
add
mov
aam
mov
nop
sub
lock
sbb
je
xchg
dec
lods
roll
dec
repz
cmc
cwtl
mov
sbb
push
push
dec
adc
js
mov
je
add
jl
pop
rcl
lret
loop
adc
mov
push
xchg
mov
loope
lcall
lods
cmp
inc
notb
imul
fcomp
lock
mov
clc
inc
testb
jmp
insb
xchg
adc
dec
pop
or
testl
ss
mov
adc
or
mov
sub
dec
imul
xor
mov
sub
pop
aad
mov
in
in
test
sub
mov
adc
push
push
mov
in
mov
mov
sarl
out
push
mov
fstp
cwtl
stos
stos
movsl
inc
cltd
inc
add
mov
fcmovu
push
imull
push
ja
inc
and
in
lret
and
mov
cmp
jl
jno
xchg
ret
pop
mov
jnp
dec
xchg
lods
xchg
loope
jnp
lahf
jnp
pop
test
or
push
cmp
js
mov
jns
add
xchg
sub
scas
rorl
inc
jmp
fs
idivl
sbb
lea
test
mov
push
mov
mov
mov
mov
lahf
mov
add
xchg
in
mov
push
fs
mov
push
inc
adcl
aad
pusha
sub
inc
fdivp
dec
push
push
sbb
into
jl
rol
imul
movsb
xchg
dec
lcall
je
xchg
push
add
lds
add
leave
insb
repz
fs
lahf
pusha
subl
xchg
sub
lds
loope
scas
lret
loope
aam
rcrl
xchg
xlat
int
gs
data16
shll
cmp
mov
or
ljmp
cli
sbb
adc
mov
mov
or
inc
add
push
inc
xchg
pop
sbb
loop
in
pushf
shlb
inc
or
push
ror
out
in
mov
push
clc
shlb
fistps
aad
dec
dec
stc
call
ds
clc
jmp
call
das
cmp
xlat
hlt
inc
pusha
xchg
mov
fsts
fmuls
mov
addr16
jecxz
loopne
xchg
mov
orb
mov
fidivl
sbb
push
xor
ja
mov
enter
adc
and
cmp
inc
add
imul
scas
jno
xlat
or
mov
xor
push
pop
mov
lock
sub
jle
mov
jmp
cltd
pop
jb
mov
dec
cwtl
jp
mov
jo
mov
ljmp
lock
pop
stos
inc
push
xor
mov
clc
cmpsb
fsubrs
lods
mov
mov
push
xchg
xor
cmp
dec
fs
jle
shlb
adc
pop
and
lret
xchg
in
adc
mov
mov
imul
push
fwait
adc
sbb
jne
cwtl
loop
adc
or
out
mov
or
aas
pop
pop
pop
test
cmp
iret
adc
fisttpl
rcl
stc
test
adc
xor
lds
mov
xchg
test
jb
xchg
jae
cmpsl
imul
nop
dec
sbb
pusha
xor
xor
add
ds
or
xor
mov
out
jmp
sub
ret
mov
or
jmp
int
movsb
les
movsl
loope
int
xchg
loopne
mov
test
mov
clc
mov
mov
cmp
xchg
cmp
leave
arpl
lds
mov
ljmp
or
lock
inc
test
cmp
push
or
or
lds
xchg
sti
testl
cmp
and
lcall
insb
cmpsl
add
rorb
add
push
dec
mov
addl
fwait
mov
xor
aad
insb
add
dec
gs
ds
sbb
cmp
fildll
cs
jmp
lods
mov
jg
jbe
cld
and
jle
insl
mov
jno
inc
xchg
mov
testb
push
xchg
mov
mov
or
or
pushf
adc
test
xchg
test
test
int3
nop
dec
mov
aad
inc
mov
or
lock
lods
mov
cwtl
rorb
push
repnz
outsl
add
push
orb
push
and
cltd
les
add
mov
and
xchg
and
lahf
xchg
push
sbb
in
mov
loop
mov
xchg
lret
movsb
sub
test
in
cmp
dec
imul
sub
scas
push
test
mov
cmpsl
ret
das
mov
xchg
dec
ja
jl
test
sub
call
pushf
mov
jb
mov
push
loopne
push
scas
mov
mov
imul
lea
cli
ss
rol
icebp
hlt
adc
add
lea
stc
inc
stc
test
pop
push
jl
push
fldenv
push
push
clc
push
pop
repz
xchg
orb
cmpsl
xor
cs
das
das
movsl
lahf
aas
mov
imul
hlt
xchg
push
jae
je
adc
or
jle
call
add
jg
inc
loop
cmp
lock
fldcw
sbb
das
mov
imul
mov
inc
dec
xchg
xchg
fadds
jbe
mov
add
mov
inc
popa
cmp
mov
and
aad
xchg
add
pop
inc
enter
push
and
sarl
mov
ret
or
call
scas
mov
repz
fucom
jae
fistpll
test
mov
jnp
cltd
mov
js
mov
push
fiadds
mov
scas
sub
adc
mov
mov
movsl
inc
add
sbb
inc
push
xchg
lret
mov
mov
lods
cltd
jnp
sbb
int3
adc
cld
jl
cltd
scas
adc
std
stos
jl
push
pop
movsl
xchg
shrb
std
xchg
or
call
inc
es
stos
adc
cmc
insl
cmc
jb
adc
inc
into
mov
adc
add
mov
fisubs
xchg
rclb
inc
pushf
bound
pop
je
call
push
arpl
scas
xchg
out
out
adcb
out
adc
mov
fisttps
add
mov
mov
jae
or
pop
adc
cwtl
mov
mov
pop
inc
inc
pusha
lock
call
mov
and
sbb
and
push
outsb
mov
insl
into
inc
shlb
subl
mov
jns
out
ficompl
sub
inc
sbb
lret
out
mov
jge
rcrl
ret
jg
rcr
xchg
push
cmp
adc
or
lahf
mov
inc
popa
fbld
xchg
pop
add
nop
lods
or
pause
and
cli
decb
cmc
lret
and
rol
xchg
mov
push
stc
test
jne
jns
xlat
xchg
jnp
jbe
add
leave
cmp
mov
xchg
jge
dec
sbb
aaa
pop
mov
inc
test
lea
cmp
pop
jle
xchg
insl
iret
cli
test
sub
or
jo
and
movsl
cs
or
or
rol
xchg
cmp
pop
repnz
add
dec
mov
dec
icebp
lret
aas
mov
pop
push
in
int3
cmp
and
shl
dec
adc
cmpsb
mov
mov
cmpsl
inc
hlt
and
xchg
into
outsl
leave
sahf
ljmp
aam
iret
jl
fcmovne
iret
pop
pop
ror
or
sti
or
ret
sbbl
push
int3
movsb
in
iret
ficompl
out
add
mov
outsb
lret
addl
mov
dec
dec
aad
popf
into
sub
or
adc
test
sub
mov
jecxz
sub
xchg
lds
ret
aad
jnp
cmp
nop
mov
aam
out
mov
cli
imul
mov
fs
inc
dec
mov
pushf
pop
xchg
addr16
dec
sahf
adc
gs
xor
adc
jmp
or
push
add
ret
adc
test
xchg
mov
movsl
es
cmpsb
std
fndisi(8087
test
pushf
jo
xchg
cmc
mov
lcall
hlt
mov
scas
lods
out
fcmovbe
jb
xchg
imul
jmp
mov
filds
jns
push
adc
jle
cmpb
in
lods
movsl
lea
mov
inc
mov
xchg
jge
add
sub
movsb
dec
pop
or
mov
cmp
sahf
or
fstps
cmpsl
rorl
or
roll
pop
pusha
push
aam
movsb
and
xor
xor
pop
jbe
imul
mull
shl
mov
add
pop
les
das
sbb
cmp
enter
mov
sbb
loop
test
pop
push
xchg
jmp
es
call
add
jmp
mov
roll
mov
jne
cwtl
rorl
jns
aas
dec
inc
and
pop
add
jle
mov
pop
mov
test
lea
sub
jae
aas
shll
xchg
xchg
sbb
sbb
ret
mov
int
and
cmp
les
filds
or
push
xchg
stc
mov
mov
push
loopne
push
xchg
filds
js
into
pop
movsl
xchg
add
ljmp
test
nop
in
shrb
movsl
push
cld
sub
test
call
inc
insb
adc
xchg
stos
xchg
or
or
adc
adc
mov
and
outsb
test
ret
sbb
add
inc
push
cmp
gs
jmp
iret
mov
fcomp
cmp
inc
push
notl
rol
add
add
leave
pop
adcb
xchg
and
fstl
fstpt
loope
movsb
ja
stos
dec
insl
inc
and
sub
and
rorl
mov
xor
in
cmpsb
jne
or
sbb
mov
fcomp
xchg
scas
mov
aaa
mov
dec
mov
scas
cmp
mov
in
mov
sti
jno
nop
out
mov
pushf
jmp
or
ret
lods
xor
mov
test
sub
fisttps
repnz
jbe
sbb
nop
mov
test
icebp
hlt
les
mov
stos
test
movsb
test
cld
dec
mov
push
push
xchg
mov
adc
xchg
int3
lcall
fimuls
jge
sbb
sbb
daa
je
mov
xor
xor
popa
call
or
mov
push
insl
mov
adc
enter
sub
jge
into
push
cmp
mov
mov
rcrl
loope
cltd
cmp
out
repnz
jge
xchg
adc
add
xor
lret
and
cmc
push
mov
ret
idivb
stos
test
mov
repnz
cmp
ret
jbe
dec
cmc
int3
data16
push
add
xchg
cmpsl
cmp
shlb
sbb
xchg
jns
push
jmp
push
and
fists
and
mov
or
outsl
adcb
fucomip
xor
pop
push
jnp
dec
mov
ret
loope
enter
push
xchg
or
loop
or
je
xchg
test
adc
fiaddl
insl
inc
fistpll
sub
divl
push
js
das
inc
xorl
sub
ficoms
les
out
ss
push
pusha
jge
xchg
mov
ja
or
ret
mov
push
cmp
je
xchg
dec
pusha
add
and
jmp
shlb
add
jecxz
mov
sub
inc
in
cmovg
in
les
stc
lods
jo
and
ljmp
push
fdivr
test
adc
ljmp
pop
sarb
mov
mov
xchg
cwtl
xchg
rclb
sub
fadds
imul
enter
mov
adcb
sbb
clc
pop
mov
popa
aad
mov
adc
xor
mov
stc
dec
mov
mov
sbb
insb
fwait
jae
jl
les
mov
lods
stc
xchg
inc
jno,pn
clc
mov
fs
int
leave
dec
clc
test
mov
xchg
push
test
cmpsl
cmp
mov
into
xchg
ret
js
bound
cmp
rorb
jp
add
mov
faddl
sti
pop
dec
xchg
fwait
rcll
push
rol
cmc
lret
sbb
out
jae
mov
xchg
mov
mov
inc
imul
test
inc
cld
ret
mov
and
cmp
add
fwait
in
xchg
jns
fisubrs
dec
mov
test
adcb
addl
stos
jno
lret
xchg
lock
mov
add
sarb
dec
cmpsb
call
out
nop
mov
mov
xchg
pop
pop
lret
fnstenv
pop
fsubrp
cld
nop
sbb
lret
sub
push
test
xorl
ds
call
or
in
mov
je
test
mov
add
scas
inc
js
call
scas
outsl
int3
add
jnp
cmpsl
cmpsb
sahf
mov
mov
cmc
xchg
sahf
sbb
push
xchg
mov
mov
jl
cmp
mov
push
mov
lcall
mov
push
adc
or
or
mov
inc
pop
xchg
scas
andl
add
mov
or
add
or
jmp
dec
movsb
push
inc
adc
clc
pop
push
push
shrl
fxch
jno
mov
xchg
scas
je
jo
lods
cmc
mov
xchg
mov
jg
lods
xchg
ret
scas
mov
pop
out
movsl
mov
jg
nop
xchg
mov
cwtl
add
add
jle
or
add
fsubs
xchg
fs
mov
jns
xor
fbstp
int
cmpsb
scas
insl
daa
xor
push
rcll
mov
or
push
ror
xchg
movsl
cwtl
xor
out
das
neg
icebp
jmp
fisubs
les
jns
cmpsb
iret
pushf
cmpsb
ret
notl
cmovle
push
stos
xchg
int
xchg
xchg
aam
aas
sbb
hlt
int
push
repnz
addb
movsl
andl
mov
mov
and
scas
fs
cmp
cmpsl
push
cmpsb
mov
movsl
lret
hlt
mov
xor
push
or
out
push
xchg
inc
bound
into
aam
inc
jmp
xchg
fcomps
or
out
mov
fsubrp
cmpsb
hlt
xchg
sub
mov
enter
call
xchg
adc
movsb
push
loopne
xchg
fists
call
jl
push
insb
mov
sarb
mov
cmp
xor
xchg
fisttps
push
xchg
inc
dec
fldt
dec
ljmp
push
movsl
mov
mov
nop
cmpsb
leave
arpl
pop
dec
cmp
mov
and
inc
pop
mov
cmc
mov
int3
fimuls
mov
xchg
xlat
xchg
adc
xor
repz
sbb
dec
scas
push
movsl
mov
out
bound
and
hlt
les
mov
adc
test
jo
xchg
mov
ds
addr16
cltd
ljmp
mov
cwtl
cli
pusha
xor
cld
push
sub
ficompl
fst
sub
out
jl
sarl
fistl
les
bound
loop
jg
xor
jne
test
xchg
call
andb
pop
and
adc
les
shl
xor
sbb
cmp
fisttpll
jne
ss
cmp
xchg
mov
cmp
cmc
mov
sub
fstl
adc
and
sbb
not
pop
fiaddl
push
dec
cs
clc
ret
xor
lahf
cmpsl
je
mov
insb
mov
je
or
xor
stos
add
mov
add
or
push
cmpsl
mov
frstor
xor
aas
sub
movsb
sub
jb
rclb
push
jo
lods
sti
mov
fistl
mov
xchg
gs
xchg
ss
or
mov
xor
loope
push
mov
or
mov
jp
xor
test
push
xchg
or
jo
xchg
les
pop
addr16
out
mov
sbb
sbb
cmpsl
inc
loop
cmp
cli
lds
in
mov
mov
mov
or
aad
cmp
es
add
xchg
pop
xchg
mov
mov
mov
jno
push
int3
mov
ljmp
aad
mov
xchg
ljmp
imul
out
push
fistps
les
xor
stos
subb
cmpsb
adc
bound
mov
mov
inc
ljmp
enter
sbb
stos
pop
dec
inc
movsb
test
ficoms
push
jns
or
popl
jge
enter
sbb
enter
shlb
test
popa
fdivr
mov
mov
dec
xchg
addl
mov
sbb
mov
pop
mov
jmp
ret
jl
add
mov
popf
jne
inc
dec
mov
adc
imul
fwait
or
dec
or
pop
in
or
ret
sbb
cmc
out
jmp
js
aad
dec
sub
sahf
mov
data16
jo
repz
mov
jo
mov
decl
sub
or
jae
frndint
pop
mov
cmp
dec
shl
lds
clc
fisubrs
pop
aad
andl
test
xchg
cmp
incl
mov
xchg
out
pop
or
push
cmp
enter
daa
pop
out
cmp
sbbl
je
mov
lahf
popf
test
mov
imul
mov
ret
adc
push
popa
ret
mov
out
fs
iret
mov
adc
adc
popf
imul
out
aas
xchg
js
adc
push
stos
or
inc
popf
shll
push
loopne
cwtl
cmp
fcomps
xor
ret
stos
nop
cli
mov
ret
fistpll
divl
add
lahf
enter
mov
iret
jg
test
and
rorb
ficoml
mov
pusha
into
mov
and
nop
andb
loopne
mov
sbb
mov
mov
fdivl
and
test
pop
add
ffreep
pusha
hlt
test
mov
add
jae
outsl
shll
push
ret
rorl
dec
dec
lds
xchg
jl
xor
loopne
adcl
stc
xchg
mov
out
nop
add
mov
rcrb
cltd
add
lea
push
or
mov
add
and
xchg
jle
mov
or
lahf
adcl
aad
jo
mov
pushf
scas
mov
dec
ror
aaa
cwtl
les
popl
cmp
and
sbb
call
cmp
pop
add
adc
enter
mov
rolb
xchg
cwtl
and
nop
jne
inc
mov
mov
nop
xor
mov
lock
cmpsl
pop
and
shll
in
dec
rclb
les
and
movsb
add
mov
and
std
into
mov
xor
mov
loop
fnstcw
mov
jle
rcll
mov
and
lds
pop
push
iret
les
xlat
les
mov
sub
cwtl
mov
mov
and
loopne
xchg
in
jns
add
lret
jmp
sbb
xchg
jle
mov
mov
test
pop
ret
xchg
mov
lret
insl
cli
es
shr
fmuls
ret
cmp
rcrl
and
jmp
inc
mov
add
outsl
ret
in
shlb
xchg
rcll
movsb
inc
daa
out
push
inc
mov
ret
dec
and
test
hlt
cmpsb
nop
mov
pop
nop
adc
fcoms
mov
add
aas
add
pop
les
mov
sub
shrb
or
hlt
and
in
mov
xor
mov
leave
jg
mov
sub
jne
mov
sub
dec
push
or
dec
mov
ret
mov
mov
add
nop
or
jl
popf
push
scas
aas
jp
rorb
jl
pop
test
cmp
scas
mov
xchg
adc
adc
inc
test
push
test
call
push
jnp
std
and
dec
sarb
add
push
shlb
jnp
shrb
or
ret
rol
jmp
jnp
mov
lods
jo
test
xor
loopne
mov
testl
jecxz
xchg
xchg
mov
sti
jp
int
jo
cmp
xor
sub
add
clc
mov
cmp
rorl
xchg
sub
inc
mov
mov
mov
push
mov
cmpsb
ja
mov
fmuls
loop
inc
inc
and
cmp
sbb
fnstsw
mov
xchg
nop
sbb
ret
aaa
mov
fs
test
push
ret
xchg
mov
push
mov
mov
push
rcrl
jo
js
sbb
and
fadd
scas
lahf
mov
adc
pop
stos
pushf
and
test
mov
xchg
mov
push
push
popf
lds
in
test
pop
lds
lds
pushf
adc
add
mov
mov
and
cld
mov
lds
mov
mov
or
jo
mov
loopne
ror
ret
lahf
repnz
in
xchg
movsl
add
dec
mov
enter
xor
clc
ret
xchg
in
mov
les
mov
mov
or
xchg
cmp
jo
sub
test
or
sub
xor
mov
lds
mov
mov
dec
add
iret
stos
frstor
fadd
mull
mov
addb
dec
loopne
aaa
xchg
mov
add
dec
rolb
rolb
cs
mov
ja
mov
pop
mov
inc
inc
fcomps
or
mov
push
jbe
ret
dec
inc
lods
xchg
and
mov
lret
jp
nop
enter
xchg
lahf
mov
mov
xchg
mov
outsl
cmp
xor
and
aas
mov
into
mov
adc
insb
enter
mov
fsubr
add
enter
and
nop
dec
sub
cmpsl
xchg
mov
hlt
mov
add
sub
add
sbb
dec
in
jmp
mov
pop
and
lock
nop
xchg
sbb
vunpcklps
xchg
rcl
shrb
or
dec
ret
push
and
and
sub
mov
sahf
adc
mov
cwtl
incl
shll
inc
inc
addr16
xor
fsubs
mov
mov
dec
or
mov
xchg
or
arpl
je
add
push
test
or
les
jo
push
sarb
insl
dec
fmuls
xchg
or
mov
push
and
lock
mov
mov
push
mov
mov
mov
popf
dec
xchg
test
into
mov
and
ret
data16
inc
mov
pop
xchg
ret
dec
fsubl
mov
and
sub
add
ret
sbb
ss
mov
repnz
xchg
cmp
mov
mov
mov
ret
mov
xchg
ret
xchg
hlt
cmpsl
inc
jb
sbb
push
mov
jnp
loopne
nop
decb
movsb
and
xchg
ret
in
mov
scas
insb
loop
xchg
call
mov
hlt
int3
nop
shlb
fnsave
pop
xor
lds
mov
loopne
mov
cli
mov
in
add
rcrl
mov
jo
mov
mov
push
mov
stos
cmp
rcr
mov
roll
add
shrl
in
nop
inc
add
orl
js
lods
in
or
sahf
sub
ret
nop
les
mov
mov
hlt
xchg
pop
mov
xor
enter
mov
mov
mov
and
xor
mov
nop
enter
sub
mov
push
xchg
mov
xchg
mov
sarl
popa
mov
sar
mov
enter
cmp
cli
adc
les
dec
adc
mov
mov
mov
jo
test
cmp
aad
mov
mov
loopne
xchg
loopne
xchg
addr16
and
xchg
dec
mov
mov
shrb
mov
inc
cmp
mov
mov
adc
shrb
and
test
adc
mov
add
cmp
sub
fldenv
daa
jle
or
mov
mov
cli
pop
xor
repnz
daa
add
icebp
pusha
int3
jle
xchg
mov
stos
repnz
adc
mov
sub
stos
iret
shll
fsubrl
dec
test
insl
mov
mov
mov
bound
push
loope
xchg
jle
jne
andb
insl
js
mov
shlb
test
jbe
sarb
mov
or
ret
jno
add
nop
xor
testl
or
mov
xor
daa
mov
lock
shrb
js
ret
mov
jge
icebp
xlat
popf
mov
insb
xor
pop
movsl
and
mov
aam
jle
pusha
cmp
or
sarb
mov
dec
repnz
test
inc
push
mov
dec
imul
or
lcall
in
or
cmp
mov
mov
or
lret
mov
sub
lea
mov
jno
and
dec
out
loop
or
adc
mov
ret
in
mov
push
or
imul
mov
mov
mov
loopne
mov
jo
lock
add
call
xor
or
mov
jo
xchg
push
mov
mov
pop
add
mov
mov
inc
push
aas
scas
rolb
or
sbb
mov
mov
mov
xchg
sub
out
enter
push
sbb
lods
ja
inc
mov
call
sub
iret
scas
shlb
and
xor
rorb
enter
movsb
iret
mov
sub
inc
cld
pop
push
inc
sub
jge
mov
ret
mov
and
xchg
ret
jo
clc
adc
and
push
test
dec
scas
mov
in
mov
js
test
repnz
enter
add
push
movsl
mov
test
push
pop
mov
scas
ret
nop
jl
enter
divl
mov
push
jp
mov
add
mov
ret
adc
rolb
pushl
or
js
call
xor
bound
inc
cmp
pop
shrb
sbb
add
sbb
nop
aas
movsb
in
cmc
mov
push
or
imul
roll
scas
stos
ret
dec
shll
pushf
mov
xor
sub
loopne
add
pop
mov
cld
addr16
xchg
and
test
xor
push
call
test
lret
js
jge
adc
mov
xchg
dec
xchg
mov
ret
push
jb
shl
and
pop
or
adc
rcrb
outsl
stos
loopne
mov
inc
lods
dec
stos
xchg
andb
das
add
sbb
nop
pop
adc
or
and
xchg
stos
adc
mov
push
movsl
pusha
gs
loopne
pop
mov
fcom
lods
stos
or
mov
pusha
mov
js
mov
lds
mov
inc
or
nop
xor
inc
dec
sub
xchg
out
shlb
sbb
dec
shll
loopne
jecxz
test
add
add
mov
mov
jb
xor
mov
pop
or
pop
int3
nop
jecxz
loopne
mov
mov
pop
cmp
mov
imul
shlb
sarl
or
sarb
fs
negl
sub
test
sub
rcll
fidivrs
mov
mov
xchg
movsl
aad
paddsb
lcall
add
inc
int
repz
push
lods
pop
ja
adc
dec
arpl
dec
inc
lds
rol
adc
test
jo
addr16
lock
lahf
scas
out
in
mov
or
mov
dec
add
xchg
pop
adc
shrb
sub
daa
adc
xchg
test
rorb
xor
fcomip
ret
pop
nop
mov
es
add
lahf
scas
mov
push
xchg
cmpsl
mov
dec
mov
shlb
xchg
clc
mov
mov
movsl
inc
jns
insb
test
mov
mov
mov
cli
adc
out
loop
jnp
sbb
enter
add
add
ja
or
cmpsl
mov
xchg
popa
mov
hlt
mov
ret
inc
adc
loop
jge
sub
and
adc
pop
xchg
cwtl
add
adc
cmp
adc
add
sub
mov
ret
mov
lret
js
movsb
in
nop
fdivrs
fistl
fldl2e
jb
sti
filds
jb
xchg
sti
addr16
push
cmp
subl
jnp
push
and
outsb
xchg
sti
add
or
xchg
mov
cmp
pop
outsb
xchg
mov
cmp
add
cld
movsl
cmp
or
xchg
push
sub
cmpsl
sbb
or
push
stos
ret
nop
andl
test
mov
test
mov
repnz
xchg
inc
fcomps
popa
xchg
in
mov
or
shr
mov
add
shll
mov
mov
fsubs
ret
xor
mov
or
lds
mov
test
add
imul
les
xchg
movsb
aad
mov
push
adc
lcall
pushf
into
xor
stos
dec
mov
mov
push
pop
push
jp
dec
xchg
inc
mov
xchg
xchg
nop
dec
mov
or
stos
mov
sysexit
cmp
stos
das
test
or
fadd
aas
rcr
add
adc
xchg
cmp
ret
stos
stc
andb
mov
add
jo
mov
mov
or
adc
or
fsubrp
pusha
in
dec
nop
call
adc
or
mov
mov
pop
xchg
mov
mov
lahf
scas
icebp
fdivs
mov
jnp
and
dec
and
dec
mov
jge
push
ret
xor
mov
sub
testb
out
jns
or
movsb
lods
mov
add
je
ss
xchg
pop
orl
lds
aaa
js
lods
add
jge
push
mov
mov
lods
jecxz
and
xchg
stc
mov
xchg
test
push
push
xchg
and
cmp
mov
xchg
test
loop
xchg
jge
xlat
rcr
xchg
or
mov
xlat
ret
xchg
and
lods
outsl
adc
pusha
and
ret
jns
enter
nop
pop
xor
mov
movups
xor
mov
out
mov
sub
jo
xchg
cmp
test
jmp
mov
roll
inc
sbb
mov
pop
adc
test
clc
mov
lahf
rorb
jnp
xchg
and
nop
cmc
in
xor
mov
and
jns
mov
dec
rorb
shrl
mov
and
jnp
leave
enter
xchg
notl
nop
mov
pop
in
xchg
mov
and
and
and
xor
xlat
cwtl
mov
or
push
lret
pusha
shlb
lds
sub
push
push
mov
cmp
loopne
xor
pop
mov
mov
push
dec
mov
js
test
mov
test
andb
rcl
lods
loopne
pusha
call
mov
push
mov
test
or
mov
push
adc
ror
das
add
inc
add
sub
ret
notl
jns
nop
mov
cmpsb
jo
aaa
mov
mov
les
fcompl
jg
mov
lods
mov
xchg
xor
je
enter
sub
xor
mov
lret
repz
adc
lcall
call
popf
mov
inc
nop
enter
push
adc
mov
sarl
jne
mov
push
js
adc
nop
xchg
sti
lods
jo
and
mov
or
pop
loopne
add
fcomps
lock
push
mov
adc
js
push
mov
test
sub
fwait
sbb
icebp
mov
add
inc
jmp
daa
dec
movsb
sbbb
mov
xor
pop
in
mov
inc
js
enter
scas
icebp
int3
cwtl
fimull
mov
dec
or
and
jp
push
mov
lcall
adc
test
les
int
sbbl
dec
ror
xor
test
mov
mov
add
mov
push
add
jb
xchg
stos
insl
add
xor
mov
fisubs
dec
lods
mov
xchg
sbb
add
mov
mov
mov
fisttpl
loopne
ret
fcoms
shrb
sbb
and
jo
jo
jge
call
nop
pusha
push
mov
out
adc
pop
rorb
cltd
jno
stc
aas
shll
and
sarl
mov
ret
loopne
pop
xor
pop
ret
insb
or
mov
fsubp
fs
jnp
inc
mov
adc
cmp
jo
xchg
rclb
popa
xchg
jmp
or
nop
mov
aad
mov
mov
mov
mov
fcmovnb
cltd
lods
push
add
jl
mov
adc
ret
xchg
adc
adc
iret
xor
and
addr16
mov
movsl
or
ret
aam
stc
xor
and
lahf
dec
and
mov
mov
mov
push
xchg
or
imul
pop
or
pop
and
xor
and
push
movl
jl
outsb
push
lahf
ret
and
fcomi
mov
xchg
xchg
pusha
loopne
popf
jno
add
or
mov
lret
mov
mov
popf
xchg
mov
mov
xchg
and
jmp
xchg
mov
add
xchg
jl
hlt
fimuls
dec
lock
nop
xchg
mov
push
mov
shlb
dec
mov
xchg
mov
add
adc
into
leave
push
mov
test
stos
xor
hlt
mov
adcb
xchg
pop
andb
inc
xchg
inc
pop
xor
fcoms
mov
dec
cmp
or
mov
mov
inc
rcrb
add
and
test
adc
clc
loopne
inc
fwait
lret
nop
pop
jae
jb
add
lods
scas
call
ficomps
xlat
mov
aam
loopne
xchg
icebp
jnp
out
cmpl
jmp
test
cld
mov
inc
mov
pop
ror
or
lock
mov
stos
fwait
sti
push
andb
adc
vmwrite
jmp
sub
pop
xchg
mov
lahf
mov
lcall
mov
in
je
out
je
sti
test
roll
mov
cmp
mov
enter
mov
mov
add
xchg
out
ret
movsl
xor
jg
ret
aas
repnz
aad
aam
and
sbb
mov
loopne
out
je
iret
xor
mov
nop
sub
nop
pop
es
loop
xchg
cmp
in
orb
fsubs
add
and
or
xchg
dec
loopne
cmp
jge
mov
mov
arpl
push
xchg
xchg
mov
mov
mov
sahf
pop
fs
cwtl
and
xchg
mov
test
mov
sbb
xchg
mov
lcall
aad
mov
adc
jo
jg
les
sub
add
mov
dec
xchg
dec
rclb
rorl
fmuls
mov
lds
xchg
repz
pop
enter
nop
mov
fmul
push
xchg
hlt
jae
sbb
xor
mov
and
mov
mov
int
js
inc
dec
sbb
push
sub
add
ret
lahf
nop
mov
mov
adc
test
loopne
ret
push
test
adc
add
mov
fcoms
loopne
loopne
dec
cmp
in
mov
mov
lock
shlb
cmc
xchg
pop
lds
xchg
ljmp
mov
mov
mov
mov
mov
adc
call
cmp
nop
xchg
ret
xchg
cwtl
mov
fsubl
pop
bound
cmpsb
int
xchg
xchg
or
sub
inc
cs
and
testl
ret
xchg
xor
aam
mov
shll
stos
cwtl
mov
test
mov
sahf
mov
outsb
stos
pusha
cli
mov
fs
lcall
out
or
fmul
dec
sti
pop
mov
lds
and
sarl
add
aas
lods
in
pusha
jno
xchg
adc
sub
lea
add
xor
jo
adc
push
or
loopne
pop
cwtl
test
fisttps
mov
insb
enter
mov
add
mov
xor
into
xchg
dec
adcb
cmp
nop
cmc
js
dec
and
dec
mov
jo
push
mov
sub
cld
mov
xlat
push
mov
stc
mov
inc
jp
add
fisubrs
in
ret
xchg
les
jge
inc
xchg
movsb
cltd
cld
orb
sbb
pop
cwtl
xchg
add
mov
xor
jge
fsubs
mov
mov
jns
jp
repz
add
in
mov
rorb
popf
mov
pop
jmp
add
ss
jge
jb
push
lods
push
add
fadds
popf
adc
dec
pop
sarb
fs
dec
jo,pt
enter
pop
ljmp
push
push
stc
gs
mov
add
sbb
or
cli
mov
loope
pusha
inc
loop
dec
add
fmul
lret
xchg
nop
mov
call
and
add
mov
cmp
cltd
fnstcw
add
xchg
popf
test
lcall
mov
ret
xor
arpl
ret
movsb
dec
lods
out
add
enter
mov
adc
and
xchg
loop
add
std
shrb
push
mov
outsl
xchg
xlat
xchg
nop
cmp
jge
mov
mov
dec
sub
les
in
mov
clc
jo
xchg
or
mov
cli
lea
jno
xchg
lods
js
or
xchg
mov
fcomps
call
add
mov
lea
pop
js
fisubrl
test
xchg
daa
movsb
pop
adcb
mov
xor
or
int
jnp
imulb
out
sub
add
cwtl
mov
ret
xchg
sub
shrb
les
or
aam
test
cmpsb
or
adc
ret
push
dec
rorb
lock
and
mov
out
dec
mov
adc
sbb
mov
shll
jns
mov
or
xchg
fs
clc
test
rclb
sahf
adc
xchg
mov
pushf
or
call
mov
shlb
in
xchg
push
add
ret
add
jnp
ret
scas
xchg
adc
enter
xchg
les
mov
or
xchg
stos
xchg
clc
nop
addr16
je
mov
pushf
cld
pop
lea
or
nop
xor
mov
test
jbe
or
or
jp
fmuls
aaa
cmp
add
fldt
adc
fdivrl
stos
test
add
scas
add
inc
ja
jo
lret
adc
jmp
pop
mov
xchg
pop
lcall
inc
mov
xor
adc
mov
push
shrb
xchg
sbb
inc
jge
push
xchg
jne
mov
mov
js
hlt
cmp
test
xchg
fdivl
cmp
popf
enter
hlt
insb
xchg
push
push
lea
aas
clc
cli
and
add
inc
mov
cld
mov
xchg
test
add
les
test
xchg
pop
push
lds
lock
add
les
lods
icebp
add
inc
mov
sahf
mov
xchg
xchg
mov
ds
dec
nop
jp
idivl
nop
jecxz
dec
xchg
loopne
iret
add
lds
or
nop
xor
test
sti
ds
shlb
stos
ja
fcoms
arpl
or
dec
inc
lret
stos
cs
stc
les
mov
rolb
pusha
add
cwtl
push
pop
enter
sbb
mov
sti
mov
sbb
test
call
test
xchg
ret
mov
std
and
lahf
jns
in
dec
test
les
or
and
lds
lods
cwtl
pop
nop
lea
and
and
cld
mov
mov
adcb
cmp
xor
sbb
push
pop
jnp
cmpb
outsl
and
pop
xor
mov
jns
and
adc
adc
add
int3
dec
cmp
ja
jecxz
fnstenv
stc
out
push
and
inc
pop
xchg
out
xor
addl
into
mov
pop
inc
xchg
sub
pop
fisubrl
stos
insl
mov
fldenv
xchg
aam
fisttpll
into
mov
add
test
mov
mov
pop
inc
xchg
push
aaa
mov
mov
dec
pop
das
aas
out
scas
aas
sbb
jle
sub
negb
xchg
popf
int
inc
imul
shlb
leave
or
sub
imul
or
rcl
mov
fs
add
loopne
cmpsl
sub
mov
and
and
add
stos
scas
call
inc
pusha
pushl
lea
jb
pusha
pushl
clc
bt
cmp
pushl
movb
mov
pushl
lea
jae
bsf
not
xchg
mov
not
shl
xadd
ror
mov
sub
shl
mov
jmp
jmp
sub
mov
aad
aad
sbb
and
xchg
dec
mov
repz
adc
mov
aam
sub
jbe
xorb
lret
or
jo
dec
pop
bound
pop
pop
dec
nop
in
outsb
xor
inc
ret
adc
dec
ret
movsb
push
mov
mov
js
cwtl
loopne
fdivrs
test
sub
fstps
inc
in
dec
jne
adc
cmp
hlt
jmp
cmp
inc
jo
sub
xchg
out
into
push
pushw
mov
jbe
sbb
jbe
ja
or
xchg
push
dec
or
mov
imul
mov
jne
cmpsb
stc
adc
jnp
add
sahf
or
pop
shrb
adc
insb
pop
mov
enter
xchg
push
push
xor
xchg
cli
mov
xchg
loopne
lcall
test
sub
mov
mov
nop
pusha
mov
mov
test
stc
lcall
stc
dec
xor
cs
mov
lds
dec
pop
sbb
bound
sub
push
mov
sarb
aas
pop
xchg
dec
int3
mov
jo
outsl
cmpsl
dec
push
sbb
mov
fadd
or
cld
or
leave
sub
out
jecxz
inc
inc
mov
sub
and
repnz
cmpsb
arpl
xchg
cli
leave
stc
sub
sbb
adc
pop
mov
nop
in
dec
leave
cmpsl
fwait
sti
jecxz
inc
pop
jnp
dec
mov
stc
xchg
aaa
pop
gs
inc
cmp
adc
stos
mov
fistpll
pop
xchg
pop
filds
inc
mov
leave
sbb
cli
lahf
xor
cmp
push
xor
test
mov
out
aam
pop
dec
adc
rcrl
xchg
cs
jne
sahf
repnz
out
push
jg
mov
sarl
push
xor
movsb
push
fsub
in
cmp
aam
insb
cmp
aaa
aas
pusha
mov
pop
mov
sub
dec
dec
dec
inc
push
cs
insb
add
outsl
add
sub
lods
sub
xor
xchg
popf
or
mov
xor
scas
in
mov
inc
aam
pop
pop
call
testl
in
leave
rclb
cltd
fs
dec
daa
xchg
sbb
inc
mov
ret
push
jae
pop
mov
inc
call
mov
jmp
xlat
out
xchg
out
shl
daa
or
lret
pop
jae
sub
xlat
mov
ja
in
lds
jb
imul
dec
mov
add
fstps
add
movsl
fiaddl
dec
pop
mov
mov
jge
jecxz
push
lods
je
jp
cmp
lock
pop
out
popf
fwait
xchg
mov
scas
mov
je
push
mov
cs
popf
add
in
push
sbb
push
test
push
cmc
adc
les
hlt
jl
clc
andb
mov
and
lea
call
pushf
movb
lea
jae
pushf
pusha
call
adc
jb
sub
loope
inc
addl
mov
jmp
cmpsl
adc
and
sub
aaa
movsb
adc
add
fsubs
mov
add
xor
lods
and
mov
pop
push
jmp
cmp
add
mov
sub
cli
pop
mov
or
and
push
fbld
push
mov
pop
into
sbb
or
mov
pop
xchg
mov
int3
arpl
xchg
or
mov
jne
insl
in
jle
stc
repz
scas
shlb
add
dec
aam
and
flds
in
lea
lea
andl
fwait
adcl
jmp
std
pushf
jae
mov
mov
decb
inc
pop
jne
mov
xchg
test
fldl
jnp
fstpl
mov
xchg
es
sbb
sub
nop
cmpsl
imul
call
mov
test
pusha
cmp
mov
jnp
ret
daa
dec
dec
inc
rcrl
push
xor
cs
insb
add
lret
add
xchg
test
psadbw
je
sub
cli
rol
mov
xor
stos
mov
mov
jp
and
mov
adc
jle
mov
and
sub
into
push
das
insl
insl
jge
shrl
ljmp
xchg
cld
pop
fmuls
jl
fwait
scas
push
test
outsl
dec
push
jb
add
inc
cli
xor
jnp
jp
sub
mov
jl
mov
ljmp
fists
xchg
mov
shlb
mov
add
jecxz
jecxz
das
lea
jmp
cltd
xchg
xor
mov
fs
jne
shl
mov
adc
cmp
bts
shld
sub
ror
rcr
mov
pushf
sub
push
jmp
jmp
mov
mov
lea
pusha
push
movl
call
lea
jne
jmp
pushf
mov
pushl
pushl
ret
sub
mov
xchg
cmpsl
fcomip
test
mov
insb
jne
ret
lea
out
push
mov
jmp
fdivr
bound
and
mov
push
dec
pop
pusha
jecxz
fyl2xp1
popf
xor
push
pop
jge
pop
jg
push
gs
fprem1
test
lret
cmp
std
pop
roll
pop
jge
mull
jb
mov
pop
mov
jp
adc
xchg
dec
cmpsb
mov
xor
int3
fs
mov
xor
pushf
in
lret
in
cmp
test
jne
sub
push
mov
sub
clc
jo
cltd
push
arpl
sbb
sbb
dec
jnp
into
fcompl
jbe
pop
add
iret
sti
gs
and
xor
pop
sbb
xor
out
dec
or
cmpsb
ss
into
jbe
mov
mov
pop
aas
cmpsl
mov
ja
sub
insb
pushf
inc
mov
fsubl
les
pop
int
push
cs
xchg
cwtl
adc
es
lahf
in
fcoms
xchg
mov
mov
cmpsb
sbb
test
add
arpl
xchg
cmp
rcr
and
push
ds
rcrl
lods
ljmp
inc
ret
cmp
pop
fisubs
aas
cmc
test
cmpsb
push
or
cli
xchg
pop
mov
loop
ljmp
jl
jbe
push
xchg
stc
icebp
cwtl
add
inc
gs
popa
jbe
inc
imul
add
sbb
fs
je
pushf
sub
jg
sub
call
in
mov
ja
sub
mov
push
pop
push
xor
les
sbb
daa
sub
repnz
ret
add
push
sub
out
test
and
push
or
es
mov
mov
hlt
sbb
repz
mov
add
mov
popa
lea
mov
add
pop
int3
sbb
mov
xchg
cmp
fisttps
mov
insl
push
dec
lods
lods
movsl
cmc
sbb
loope
jmp
pop
inc
movl
ret
clc
pusha
cmpb
pusha
pushf
lea
jne
lahf
movzbw
push
movsbw
sub
rol
rol
dec
bsf
mov
sbb
add
pusha
not
mov
push
push
pushf
push
lea
jmp
push
pusha
add
adcb
mov
push
mov
mov
push
mov
ljmp
es
xor
mov
sahf
sbb
jp
hlt
or
push
aad
and
js
mov
mov
and
or
imul
add
and
pop
adc
push
ljmp
mov
sbb
mov
lock
sti
jmp
add
clc
cmc
call
movl
pusha
lea
je
push
push
push
lea
jmp
call
lock
jns
sub
pop
out
mov
scas
cmpsb
push
sub
enter
inc
stc
mov
je
xor
mov
pusha
xchg
cld
lcall
pusha
es
movsl
inc
mov
pop
sub
and
lret
rcll
shl
pop
movsb
addr16
mov
xor
add
pop
lcall
lods
sahf
rcr
mov
add
frstor
sub
jne
push
or
pop
dec
ja,pn
sub
and
mov
data16
jbe
outsb
ss
jle
jp
add
sbb
dec
out
sti
xchg
push
push
sbb
test
nop
push
mov
xchg
or
or
push
jmp
outsl
xchg
xor
sub
xor
mov
test
movsl
test
sbb
imul
dec
and
add
cmp
dec
cli
sub
stos
bound
mov
xchg
xchg
xor
aam
fwait
mov
test
cmp
and
stc
push
test
push
add
lea
call
push
push
xor
xor
fs
insb
add
dec
xor
cs
insb
add
sub
xor
aad
in
in
xchg
mov
rcll
mov
les
loopne
movsb
cmp
mull
push
arpl
movsl
and
out
add
orl
add
mov
cmc
sbb
sbb
lcall
inc
jl
xor
lock
je
mov
or
push
mov
cmp
mov
mov
lret
imul
jae
icebp
mov
cld
adcl
sti
mov
sub
push
gs
std
cmc
cmc
punpckhdq
popa
lea
cmp
and
ljmp
mov
je
sahf
mov
cmpsl
lods
cs
pop
add
jb
in
out
movsl
std
and
nop
or
int3
jae
push
push
out
lods
add
popf
lea
fldenv
or
mov
movsb
scas
sbb
data16
or
xor
lods
in
int3
xor
mov
adc
repnz
out
and
stc
ljmp
cmpsb
push
mov
popf
jo
inc
push
movsl
ret
rolb
insb
add
mov
push
andl
shlb
cmp
scas
mov
jns
es
cli
js
insb
dec
push
insb
fsub
int3
les
les
icebp
mov
enter
out
jl
sub
clc
enter
mov
sbb
sbb
inc
jp
cwtl
pop
inc
pop
sub
fcomps
daa
inc
jne
dec
data16
fistps
mov
mov
ret
push
in
sti
or
sbb
stc
or
inc
xchg
clc
sarl
add
test
dec
cmp
movsb
sub
arpl
pop
sbb
jns
cltd
lds
sub
adc
repz
xor
fwait
sub
and
popf
mov
add
mov
adc
lock
rcl
out
inc
add
jae
lods
test
imul
pop
sub
xor
je
sub
scas
nop
pop
fdivrl
iret
les
cmp
dec
fadds
pusha
dec
ret
out
lret
sub
fisubl
sbbb
mov
or
fnstenv
jl
fs
je
jmp
js
clc
jl
sub
leave
add
leave
mov
leave
mov
adc
mov
int3
int
jmp
sti
es
bound
jge
jge
mov
mov
test
fcmovb
loopne
sbb
xchg
movsb
and
sahf
rcr
lea
xor
xchg
daa
adc
pusha
push
push
imul
cmp
sub
jae
std
cmc
jge
test
pop
mov
outsb
sub
iret
mov
addr16
cmp
mov
mov
in
int3
in
fdivl
adc
faddl
and
shrl
in
test
sbb
cld
test
mov
ret
dec
add
sub
movsb
xor
mov
adc
sbb
scas
push
fucomi
and
addr16
out
es
pop
push
mov
repz
jnp
daa
inc
sbb
push
ja
scas
ljmp
sub
inc
dec
aas
or
jmp
lock
pop
scas
xchg
dec
negb
inc
mov
bound
push
adc
negb
cmpsb
jge
sub
emms
xlat
xchg
lahf
outsl
daa
pop
pop
pushl
mov
sbb
int
xor
iret
jb
xor
pop
fsubr
push
mov
mov
add
and
pop
insb
repz
aam
test
dec
sbb
out
pop
mov
sbb
paddusb
dec
add
ficompl
sbb
push
cmpsb
inc
push
out
mov
incb
fisubl
mov
xorb
sub
jge
and
adcb
push
ds
mov
pushf
add
pop
lock
movsb
test
aam
adc
inc
xchg
loope
fbld
lds
stc
mov
push
fucomip
sbb
fwait
rclb
pop
cwtl
lock
sti
cmp
jle
jl
pop
xor
pop
push
bound
cmp
xor
aad
movsl
xchg
aad
and
ret
push
into
xorl
and
or
mov
push
scas
dec
and
repz
jmp
mov
mov
cltd
fldenv
sub
pop
push
xchg
jns
fldenv
subl
push
aaa
cmpsl
cmp
stos
subb
mov
and
add
movsb
cs
outsb
xchg
idivb
test
jecxz
pop
lods
mov
and
out
dec
scas
push
fmulp
notb
cld
cmpsl
xor
lahf
imul
mov
inc
rcrl
ficomps
xor
push
xchg
adc
sbb
xor
inc
inc
clc
orl
out
sub
mov
popa
adc
or
scas
in
cwtl
icebp
and
xchg
cmpsl
lcall
or
adc
insl
divb
xor
or
cmpsb
aam
test
fsubrl
sbb
mov
mov
jo
sub
or
inc
sub
outsb
fnsave
sub
out
cmpsl
fbld
aas
xchg
out
push
add
or
xor
xor
fdiv
es
icebp
adc
clc
xor
inc
inc
ret
sub
cld
xor
insb
pop
mov
sub
lds
sbb
lods
cld
sbb
xchg
orb
fcmovu
mov
cwtl
lods
mov
in
jbe
mov
rorb
jbe
jbe
cmpsb
scas
jle
sahf
push
scas
ljmp
xor
lods
sub
decl
push
andl
pop
in
xchg
movsb
hlt
in
cld
cld
fs
inc
xchg
sbb
in
aad
mov
insl
out
xor
mov
sahf
gs
sub
addb
mov
jnp
arpl
clc
insl
xor
lcall
mov
inc
pusha
outsb
aaa
fwait
aaa
mov
cmpsl
call
cs
mov
mov
inc
push
mov
jns
xchg
leave
dec
sbb
movsl
out
jge
xlat
sbb
mov
add
clc
cmp
cmc
test
cmp
pushf
lea
jb
cmp
pushf
cmp
mov
call
push
dec
inc
dec
dec
xor
cs
insb
add
inc
into
andb
xor
ret
cmp
xchg
ret
jae
xchg
inc
mov
sahf
fdivrs
jle
out
xor
pop
add
add
test
or
mov
js
iret
push
cmp
outsl
cld
push
adc
std
lret
nop
dec
insl
pop
add
adc
loope
pushf
sub
and
aaa
scas
sub
xchg
mov
xor
xlat
cwtl
push
les
sbbl
sbb
cmp
jecxz
pop
pushl
lea
call
jmp
pushf
lea
je
cmc
shr
lea
bts
mov
movsbl
test
shrd
dec
add
cmc
adc
bsr
mov
cmp
test
jmp
pushf
imul
push
cmc
add
pushf
lea
jmp
mov
dec
pop
scas
mov
aas
iret
iret
push
aaa
rolb
pop
test
sub
test
ret
out
inc
jbe
shll
mov
pop
scas
pop
ffreep
pop
das
ja
shl
jecxz
xchg
pushf
push
in
jge
and
out
cli
mov
push
and
jb
repnz
iret
inc
aam
dec
loope
xchg
sub
dec
add
test
ret
inc
adc
das
dec
mov
add
pop
pushf
push
mov
test
ret
push
pop
das
xor
jbe
jmp
inc
adc
stos
mov
adc
and
das
jecxz
sahf
mov
lds
hlt
test
sbb
aam
je
mov
enter
push
insl
mov
sub
aam
fs
xchg
dec
xchg
in
add
and
pop
shlb
call
or
daa
stos
adc
pop
mov
dec
ds
fcompl
or
cltd
insb
add
test
loopne
stos
xor
cmp
sub
loopew
adc
in
jle
imul
in
and
hlt
push
sub
lods
cld
or
in
sub
std
or
cmp
sub
push
push
data16
xchg
data16
inc
push
dec
sahf
mov
push
xor
xchg
fists
or
std
cmp
dec
cmpl
lock
pop
sub
and
xchg
sub
imul
mov
mov
sbb
mov
imul
sub
cmp
and
outsl
iret
popf
mov
sbb
jno
test
pop
movsl
stc
push
mov
jmp
dec
sub
sub
aas
daa
shl
call
movzbw
btc
mov
not
push
rol
add
mov
push
mov
jmp
lea
ja
pusha
pushf
imul
test
add
pusha
pushf
lea
jmp
out
adc
inc
adc
leave
cltd
xchg
push
pop
rol
fstps
xchg
icebp
jns
adc
sahf
mov
mov
adc
jns
in
ds
mov
clc
xchg
lods
cwtl
pop
sbb
rolb
pop
adc
push
inc
fists
push
fdivrl
sub
jae
push
pop
dec
fldz
jnp
or
cmp
out
ja
data16
jg
popa
leave
cli
jae
cmc
clc
pop
mov
mov
inc
insl
lret
out
push
js
cld
jno
lds
sahf
movsl
in
xchg
mov
and
lret
loop
inc
stc
ffree
cmp
nop
push
cmpsb
data16
xor
sub
loope
shrl
xchg
sbb
jle
cmp
mov
push
sti
es
pop
push
shll
imul
cltd
in
imull
movsb
adc
rorb
jbe
mov
pop
clc
pop
push
imul
dec
mov
repz
inc
cmc
lahf
pop
ja
pop
xchg
dec
divl
ja
je
add
inc
js
je
jb
arpl
jae
call
dec
and
lods
ret
or
stos
ret
ficoml
stos
aam
jo
pop
sbb
je
pop
sbbl
lret
lea
mov
es
divl
dec
mov
cmpsb
pop
pop
ljmp
aaa
pop
movsb
int3
js
mov
dec
and
push
xchg
xchg
pop
xor
inc
pop
push
insb
in
fimull
inc
xchg
int
mov
iret
pop
mov
out
iret
iret
xchg
xchg
dec
mov
sbb
lods
in
enter
add
xchg
cwtl
in
inc
sete
call
lea
jne
jmp
aas
push
in
and
push
dec
push
or
loope
push
mov
popa
stc
xor
and
fstpt
xor
testl
sbb
data16
or
mov
inc
sbb
push
loopne
inc
mov
pop
xchg
adc
into
ret
mov
add
repnz
dec
cmp
and
sahf
mov
jle
mov
inc
lret
rolb
push
bt
cmp
jmp
movw
ror
call
pushf
pushf
mov
lea
call
test
stc
sub
pushf
jmp
push
xor
pop
mov
adc
jmp
rolb
and
ficompl
mov
ds
jbe
pushw
fists
mov
dec
es
mov
mov
xchg
stos
mov
jge
xorl
adcb
adc
jne
mov
lahf
out
mov
pop
push
sub
mov
sub
lods
jle
out
shll
push
mov
leave
push
jbe
nop
cmp
mov
fwait
mov
mov
fidivs
mov
cwtl
ret
rorb
and
call
test
sbb
shrl
adc
sub
cmp
lcall
movsb
cmc
ss
adc
mov
jl
clc
sbb
cmp
outsl
ret
push
scas
or
ds
out
cli
clc
or
jge
not
adc
jae
popa
out
sbb
cmpsb
mov
in
jmp
mov
jne
in
gs
cmp
push
and
sbb
test
lods
fldl
mov
xorb
jo
add
sub
cmpsl
aaa
addr16
out
out
scas
xchg
daa
fistl
clc
scas
data16
and
imul
test
addb
push
and
iret
fisubrl
xchg
xor
fidivrl
outsl
mov
aaa
mov
into
dec
mov
test
adc
xchg
cmpsb
mulb
push
sahf
push
inc
cmpsb
push
into
ss
popl
scas
jne
add
aas
mov
inc
js
mov
nop
pop
rorb
pop
inc
ss
aas
ficoms
jb
inc
mov
ljmp
int
std
xchg
sarb
rcl
lods
popa
jecxz
js
sub
out
andb
push
cmc
xchg
jmp
test
jb
jnp
and
mov
push
repnz
and
sub
dec
ja
fcom
jl
pushf
jp
into
clc
repnz
fs
int3
jl
dec
pushf
adc
push
fcompl
and
push
jns
pop
jmp
jnp
pop
sbb
xor
adc
sbb
into
mov
xchg
scas
mov
psubd
lods
loopne
lahf
divl
pop
aaa
xchg
dec
insl
out
inc
sub
aam
inc
xor
addl
pop
inc
jge
adc
xor
leave
cmc
loope,pn
mov
in
mov
jne
loopne
aam
test
shll
cmc
mov
xor
mov
or
popa
xor
sbb
dec
mov
or
jne
lods
adc
int
lds
sub
jl
movsb
sbb
sub
loop
ret
xor
orb
loop
jp
lcall
and
and
add
cltd
jp
sub
jecxz
push
xchg
dec
out
dec
or
stc
sbb
faddl
jmp
sti
mov
out
sbb
mov
cmp
mov
mov
loope
ss
xlat
ret
mov
mov
lret
je
cld
aam
push
pop
test
fs
js
test
mov
jns
shll
inc
into
outsb
outsb
sahf
jbe
daa
push
std
lods
outsl
arpl
jle
pop
sbb
in
iret
adc
inc
or
mov
push
mov
lea
lods
leave
imul
jne
addr16
scas
adc
adc
dec
popa
in
out
add
pop
stos
inc
les
lret
sahf
outsl
cmp
mov
scas
ds
push
lret
outsb
mov
sub
insb
in
jl
insb
in
mov
sbb
fsubp
inc
and
lods
xor
fs
jae
push
movb
pushl
lea
jmp
pushf
mov
push
lea
jmp
pushf
xor
stc
pushl
stc
ror
cmc
pusha
bt
xor
stc
ror
test
stc
bt
not
cmp
pushw
popfw
push
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
and
adc
dec
scas
test
fidivrs
test
push
mov
pop
ret
pop
das
xchg
inc
fwait
push
jp
shlb
inc
outsb
and
mov
shl
xchg
mov
stos
sbb
ss
push
pop
xor
repz
mov
test
aam
xor
in
popf
pop
lods
pop
jecxz
rclb
roll
cmp
jmp
adc
icebp
add
gs
dec
imul
jmp
push
push
jmp
mov
sub
mov
mov
mov
push
xchg
add
dec
sbb
lahf
ja
xchg
xchg
fcomip
mov
mov
push
xor
xor
cmpsb
mov
add
xor
jae
in
pop
xchg
add
lods
daa
sbb
lods
lods
outsl
inc
inc
out
push
fsubrs
cmp
pop
icebp
std
popa
mov
sub
dec
fstpt
fwait
imul
das
jno
mov
rorb
adc
xor
and
scas
scas
mov
push
repnz
push
jmp
pushl
mov
lea
jne
setbe
not
movsbw
pushf
movb
pushf
mov
not
lea
movl
pushf
movl
pushf
jmp
pushf
lea
jae
adc
mov
inc
shl
mov
btc
lea
mov
stc
cmc
cmp
push
xor
mov
repnz
pushf
call
daa
mov
inc
mov
leave
mov
loope
cltd
or
jns
inc
jp
xorb
sbb
rorb
sub
lcall
lds
jp
mov
pop
xchg
push
out
and
inc
sub
dec
mov
test
mov
imul
xchg
push
xchg
pushf
mov
insb
xchg
fs
jl
mov
inc
and
or
dec
push
mov
push
movb
pushl
ret
setne
lods
pusha
stc
xor
bt
clc
jmp
test
mov
jp
inc
xchg
fsubp
jbe
ss
into
data16
popa
pop
and
push
xchg
push
push
ss
adc
sbb
sub
mov
push
es
jmp
xchg
stos
xlat
cmc
clc
mov
stos
jle
push
pop
add
rcll
filds
lea
cmp
adc
xchg
jge
pushf
adc
aas
leave
cltd
jmp
cltd
mov
and
loop
lcall
cmc
sbb
and
cld
cmp
add
rcrb
cwtl
push
inc
mov
jecxz
and
cmp
test
pop
pushf
and
jb
test
scas
xchg
aas
arpl
pusha
add
mov
mov
in
pop
xor
cmc
push
pop
push
pop
xlat
push
pop
aaa
xchg
icebp
dec
cmp
jge
es
mov
loop
cmc
mov
ret
cmp
neg
rcr
ljmp
ret
pusha
stc
mov
push
jne
ret
jmp
push
shrb
xchg
sbb
push
idivb
idivb
jbe
or
dec
and
test
fiaddl
lret
stos
adcb
or
mov
mov
das
cmp
sti
jl
mov
push
add
or
test
subb
add
packsswb
mov
push
xchg
xlat
adc
fiadds
sbb
cmpb
adc
adc
or
inc
int3
add
rcl
test
push
stc
rclb
pop
leave
mov
mov
adc
or
in
out
iret
mov
xorl
bsf
call
movsl
push
xchg
nop
and
lcall
jle
push
push
es
fxch
testl
divl
sbb
lcall
or
push
daa
cmp
test
insl
jnp
aaa
mov
shll
jb
int3
stc
cmp
add
ljmp
fsubrp
push
inc
test
push
loopne
pusha
fcomps
add
int3
in
add
xchg
cmc
arpl
add
mov
sbb
xchg
or
movsl
mov
mov
sub
imul
sub
dec
popf
lods
lds
and
sti
mov
push
jno
cmpsl
jmp
dec
add
push
and
xchg
pusha
arpl
fcoms
jo
repz
jl
jmp
fdivs
sbb
sub
xchg
push
ja
int3
sub
cmp
sbb
push
test
stos
call
outsb
scas
std
and
mov
outsb
sbb
leave
cltd
gs
sbb
daa
movzwl
aas
out
out
das
mov
xor
ds
xchg
pop
out
and
jmp
out
aas
xchg
mov
addr16
loopne
ds
mov
fprem
and
dec
xchg
adc
pop
xchg
popa
inc
dec
iret
jb
push
test
sbb
mov
inc
push
mulb
and
push
xchg
or
js
adc
pop
lock
imul
loop
xor
pop
pop
call
adc
fdivs
inc
call
dec
js
fdiv
mov
jle
add
add
sub
xchg
and
jo
adc
int3
movsb
sbb
adc
lods
insb
movsb
mov
mov
ljmp
jmp
cwtl
mov
mov
adc
push
sahf
pop
test
test
jmp
push
mov
cmc
xor
mov
in
test
mov
call
xor
add
lret
fmull
dec
daa
xor
mov
cmc
push
call
dec
inc
and
inc
lods
or
and
mov
fucomi
pxor
call
pushf
cmpb
pusha
pushf
lea
jne
push
das
sbb
sub
sar
rol
seto
aaa
mov
rcr
rcl
add
pushf
push
pusha
mov
pushl
lea
jmp
cs
dec
xchg
and
mov
mov
arpl
dec
jmp
shrl
fists
sbb
inc
push
ds
icebp
stc
adc
add
mov
cltd
roll
out
insl
fsubrl
fildl
addr16
inc
jb
adc
push
pop
incl
and
cwtl
lods
ret
and
mov
movsb
out
mov
fisubrl
mov
mov
jmp
mov
fdivs
aad
ret
lcall
cmpsb
fstl
clc
stc
insl
imul
jecxz
popf
flds
adc
test
popa
imul
mov
insl
lahf
bswap
lea
pushl
movl
pushf
jmp
lea
jne
jmp
push
jg
xchg
and
bound
xor
js
sub
add
dec
sub
aas
and
je
lea
mov
dec
mov
shll
pop
js
je
repnz
iret
je
adc
and
in
mov
and
mov
push
fwait
leave
andl
je
jecxz
lret
enter
push
sub
call
xchg
ffree
pslld
stc
popf
xor
jge
xor
lds
sub
xchg
bound
sub
gs
sbb
cmp
mov
in
lea
in
in
add
cs
fcoml
test
xchg
jecxz
pop
xorl
mov
stos
int
nop
push
mov
addb
cmp
sub
cmpsl
dec
lret
push
std
push
icebp
leave
loope
lret
dec
mov
rcrl
gs
and
shl
les
xor
ret
shl
ja
imul
mov
push
pop
rcrl
addb
inc
js
adc
and
xchg
test
int
mov
clc
pusha
jmp
push
lock
std
std
mov
xchg
fs
mov
ret
jns
shlb
insl
mov
mov
pop
and
xlat
andb
cltd
in
cmp
frstor
aam
pop
lret
add
out
frstor
adc
test
sbb
inc
add
mov
cmpsb
xlat
mov
xchg
push
jbe
and
rcll
jb
and
jmp
adc
inc
popf
jno
xchg
and
pop
ret
add
add
jae
jnp
addl
jg
xchg
jae
pop
mov
fwait
xor
mov
jb
into
fidivrl
stos
out
dec
mov
aad
fs
push
mov
test
lock
test
sub
inc
xchg
ss
sub
dec
ja
popl
sar
push
xchg
push
sbb
mov
cmp
xchg
stos
inc
int
add
xchg
and
fld
aad
mov
dec
xchg
mov
push
push
push
mov
adc
xchg
or
pop
lret
add
ret
mov
pop
shl
and
insb
jns
orb
mov
shll
lahf
sub
mov
shll
repnz
xchg
aas
pop
je
std
add
inc
repnz
out
adc
xchg
sbb
cmpsl
adc
adc
iret
mov
cmp
dec
mov
push
test
call
pop
push
pop
test
mov
sub
xor
dec
pop
xor
pop
fs
pop
sub
sbbl
daa
je
mov
and
adc
inc
je
repz
cmp
fwait
loope
inc
mov
fistpll
ljmp
das
repnz
mov
sbb
jbe
inc
inc
iret
out
nop
gs
adc
mov
cmp
rcl
addr16
xchg
or
mov
out
mov
ljmp
pusha
scas
insl
or
sub
sub
mov
repnz
cli
push
xchg
fs
xchg
jle
lods
dec
out
clc
jg
and
test
and
test
and
clc
jecxz
xchg
int3
cmp
mov
daa
inc
sbb
pusha
pop
fidivs
ficompl
xchg
cli
test
lods
in
inc
pop
gs
push
shr
and
loopne
xchg
cld
xor
pusha
cs
jns
cmc
and
pop
mov
mull
pop
divl
mov
ffreep
stos
lock
ret
push
in
or
fcoml
jge
jge
lods
jge
xor
xchg
mov
add
xchg
xchg
and
pop
lds
jbe
dec
jl
dec
jl
out
out
fucom
cmp
jns
cmp
and
mov
mov
fsubl
jo
inc
sub
dec
or
inc
cltd
cmp
addl
movsl
adc
cmp
shrb
sub
test
stc
dec
push
pop
jne
mov
mov
add
sbb
and
lahf
ret
dec
loope
rclb
sub
mov
xchg
mov
xchg
out
into
inc
mov
int3
aam
add
cli
xchg
dec
sub
xchg
int3
inc
jl
jge
mov
cmc
dec
dec
cmp
std
bound
mov
repz
subl
imul
cmp
mov
rolb
cmp
out
mov
push
adc
mov
xor
data16
cmp
test
xchg
cli
ret
xor
ret
xchg
sub
ds
stc
inc
lret
pushf
xchg
and
mov
in
cmc
and
std
lds
cmp
test
stc
das
arpl
mov
bound
inc
mov
add
mov
test
add
push
push
xchg
pop
sbbb
test
jmp
sub
push
mov
adc
cs
and
adc
sub
push
ss
add
mov
and
mov
push
jno
xlat
divl
xchg
xchg
pop
das
mov
aaa
and
in
repz
push
mov
sub
std
lds
aad
inc
test
add
mov
push
out
sbb
xor
gs
sarl
arpl
icebp
xor
out
push
jo
std
xor
and
jae
cli
cwtl
or
popf
xchg
js
fadds
addb
sub
mov
lock
rorb
test
mov
lods
and
jle
sar
loope
jb
cwtl
and
and
loop
pop
mov
sbb
ljmp
or
dec
lahf
arpl
pop
testb
lahf
outsb
and
jns
pop
mov
mov
sbb
jecxz
subl
test
xor
or
adc
mov
mov
xchg
dec
outsl
notl
xchg
add
jne
aad
and
inc
jbe
mov
es
negb
into
jle
pop
jb
xchg
xchg
int3
push
and
mov
sahf
je
pop
jo
scas
scas
in
add
popl
xor
adc
and
repnz
push
mov
in
adc
cmp
lcall
push
mov
outsb
leave
les
xchg
js
or
mov
push
out
cmpsl
mov
mov
mov
jbe
xchg
mov
lods
dec
repz
xchg
lcall
test
ds
xchg
push
xchg
push
xchg
xchg
lret
mov
movsl
gs
enter
pusha
xor
stc
movw
clc
clc
ror
push
not
call
inc
inc
push
inc
push
dec
xor
cs
insb
add
sub
adc
fnstenv
shrl
dec
pop
push
and
cmpsb
xchg
mov
pop
sub
int3
pop
loop
ret
imul
sbb
imul
std
pop
fwait
cs
push
outsl
ret
sbb
xor
sub
lcall
cmpl
jg
xchg
les
ret
inc
incl
loopne
js
push
in
pop
notb
fiadds
jle
mov
pop
push
xchg
or
pop
xor
bt
push
setle
mov
call
push
mov
out
in
cmp
sub
in
movsb
mov
aam
in
mov
adc
push
xor
loope
cmp
cmpsb
push
xchg
stos
mov
call
icebp
push
inc
gs
add
lods
jg
ret
add
divb
mov
insb
outsl
inc
shrl
daa
jbe
pop
aad
xchg
mov
or
sbb
imul
sti
xchg
add
mul
mov
loop
addb
add
ret
mov
lock
inc
mov
sub
sbb
dec
mov
sub
sti
cmp
or
call
push
and
inc
or
test
imul
loope
cli
jp
ret
fsubl
test
xchg
jae
cwtl
sbb
jmp
popa
adc
hlt
std
test
int3
and
and
out
fsqrt
dec
xchg
mov
lods
les
sbb
dec
inc
cltd
leave
xor
mov
pop
and
test
out
in
adc
add
sbb
mov
pop
dec
push
movsb
insl
lods
sbb
add
std
inc
popf
les
rcrb
and
fs
jb
pusha
jmp
inc
push
inc
rcl
inc
xchg
dec
stc
mov
rcr
adc
and
inc
mov
bt
pushf
bt
mov
cmp
add
mov
mov
cmp
clc
sub
mov
rep
pusha
jmp
jmp
stos
cs
inc
sbb
test
aam
fs
jl
ret
xor
jbe
and
or
dec
pop
int
adc
mov
cmpsb
gs
xchg
mov
and
orb
in
pusha
and
inc
fists
push
push
imull
data16
sbb
push
idivb
shlb
mov
inc
test
jo
insb
out
ret
push
loope
test
popf
and
stos
mov
jbe
xchg
in
aad
popf
push
adc
or
mov
inc
shll
cld
mov
lcall
sbb
imul
add
xchg
mov
push
cmc
icebp
mov
add
pop
int
ja
push
lcall
adc
shrb
xorl
insl
jmp
jns
dec
dec
jge
insl
and
inc
dec
dec
jge
cmpsl
add
popa
jmp
pop
inc
test
das
mov
inc
not
ror
test
cmc
xchg
pushf
call
gs
sahf
and
xchg
andl
mov
xor
imul
xor
push
mov
mov
out
daa
inc
insb
scas
lods
push
pusha
mov
mov
mul
cmpsb
cmp
popf
sti
jle
dec
or
je
jae
xchg
push
daa
jg
aam
data16
sbb
pushf
lock
stc
ret
adc
mov
xchg
push
push
pop
lret
fwait
decl
and
sbb
lds
and
and
dec
inc
jmp
jecxz
imul
mov
sub
mov
sahf
rolb
push
mov
or
clc
cli
inc
mov
dec
les
add
data16
pop
xchg
scas
test
fstl
scas
mov
pop
out
jp
pop
dec
enter
mov
int
mov
sub
subl
bswap
outsl
lea
xchg
fisttps
pop
in
sahf
and
icebp
and
insl
movsl
inc
test
fisttpll
inc
in
bound
movsb
pop
mov
mov
sub
and
fdivl
dec
mov
add
sub
dec
je
mov
les
mov
push
insb
aam
repnz
fcom
push
insb
or
jg
push
pop
pop
dec
pop
pop
ja
jg
mov
lahf
dec
mov
sub
lahf
push
out
lahf
and
jae
aaa
xchg
mov
movl
fwait
out
out
mov
jbe
dec
fscale
jne
inc
or
sub
sti
push
decl
mov
shrb
add
subb
xlat
fstl
push
ret
inc
sbb
lahf
sub
iret
repz
mov
sub
addl
xchg
mov
outsl
aas
pop
fisttps
out
mov
jmp
pop
cwtl
sub
or
lahf
and
aas
sub
and
inc
fstpt
push
jae
loope
jle
cmpsl
push
push
in
and
loopne
mov
adc
mov
andps
dec
repnz
mov
inc
lock
push
mov
fstl
rcrl
scas
cmc
fldl
push
mov
adc
gs
stos
jnp
mov
or
dec
pushf
mov
adc
aad
sbb
jns
cld
and
jae
mov
xor
add
test
mov
cmp
adc
std
repnz
js
pop
pop
into
push
and
imul
add
ljmp
aas
add
xor
sti
dec
cmp
inc
pop
daa
scas
adc
sub
arpl
arpl
sbb
aaa
icebp
out
inc
test
push
inc
cwtl
loopne
mov
mov
push
cmc
std
pop
aad
push
sbb
xchg
in
mov
mov
xchg
or
jmp
das
cltd
shr
dec
fs
ja
push
or
imul
movsb
jne
addl
or
lcall
xor
xchg
jge
lds
cmp
mov
sbb
clc
cs
inc
jmp
jnp
or
fisubrl
cltd
fisubrl
mov
inc
dec
call
xchg
adc
dec
xor
nop
ljmp
cmp
mov
cmp
xor
popa
mov
adc
dec
pop
push
xchg
jg
rcll
cmpsb
cmpsb
push
add
sub
mov
cmp
jg
adcb
stos
lahf
lea
jno
adc
or
jns
mov
pop
insb
xor
ja
mov
add
test
jmp
fs
jmp
push
pusha
lea
jne
lea
push
pusha
movb
lea
sete
not
lahf
mov
call
mov
movsl
mov
xchg
cmpsb
cs
mulb
pop
xchg
adc
repnz
add
xor
imul
je
cwtl
test
call
ss
or
ret
fwait
xorb
push
in
outsl
fldcw
add
push
ljmp
jle
jbe
cmp
xchg
int
iret
and
jb
enter
mov
mov
pop
jbe
out
mov
stos
ret
push
stos
loop
testb
mov
lcall
pushf
movsb
lods
dec
adc
fdivl
je
lret
sarb
sbb
push
jg
notl
push
pop
dec
xor
and
xchg
lock
loop
and
jmp
adc
inc
cld
mov
ljmp
inc
popa
and
or
cmp
roll
insl
add
xor
movsl
shll
jg
out
out
push
notl
daa
ja
aas
clc
cmp
jns
mov
fs
jae
cmc
cmp
call
out
xchg
push
mov
mov
lret
ret
stos
inc
cmpl
xor
inc
jns
sbb
popfw
mov
xchg
inc
cmp
std
mov
mov
sbb
jbe
inc
jecxz
jbe
adc
loopne
pop
pop
mov
mov
movsb
outsl
loopne
sub
into
jne
inc
pop
pop
xchg
bound
or
pop
mov
test
lret
xchg
mov
or
cmpb
push
call
clc
test
mov
mov
mov
shr
mov
pushl
mov
xchg
aaa
das
iret
pop
out
scas
dec
outsl
jmp
xchg
int
add
mov
push
stc
mov
in
push
loopne
loopne
pop
rclb
adc
xchg
cmp
cmp
push
lret
test
vshufps
xchg
add
hlt
mov
mov
int
jbe
rclb
repz
xchg
loope
add
rclb
mov
pop
ds
idivb
jbe
into
into
adc
or
aad
int
sub
sub
dec
pop
daa
out
scas
xchg
fisttps
or
pop
xor
adc
dec
push
add
jne
idivl
inc
das
xorl
mov
adc
or
popa
out
pop
or
push
ret
enter
mov
or
xor
cmp
xchg
bound
fdivl
xchg
pusha
sbb
fmuls
dec
sbbl
xor
sti
imul
dec
outsb
rorl
fucomip
lea
sti
faddl
xchg
movsl
and
xchg
jp
push
lret
dec
loop
mov
fisubs
scas
rcll
adc
rclb
add
inc
jbe
adc
push
aad
push
lds
frndint
nop
xor
xlat
dec
pop
dec
and
mov
fists
xor
notl
mov
stos
add
test
rorl
and
or
xchg
pop
addr16
aaa
pop
popl
mov
mov
sbb
pop
inc
rcr
mov
or
ret
cmp
add
cmp
arpl
jecxz
adc
arpl
ja
jge
lret
daa
xor
push
mov
insl
sub
mov
insl
or
std
lret
xor
mov
pop
fidivrl
jae
fsubl
je
mov
pop
inc
cmp
xor
fistl
lock
mov
mov
dec
mov
movl
dec
push
cmpsb
and
and
push
outsl
mov
aas
mov
out
outsl
cmpsl
shlb
xchg
add
sahf
push
repnz
sbb
cwtl
enter
lret
fcompl
ror
or
call
ficoml
mov
add
push
repz
div
and
xchg
xor
shl
stos
jg
adc
adc
scas
cmpb
rcrb
add
jne
sub
mov
mov
hlt
pushf
inc
mov
movsb
and
pushf
andl
mov
and
pushf
not
clc
shr
jmp
push
sub
or
arpl
add
push
or
lret
repz
jnp
and
jecxz
lret
xchg
mov
inc
bnd
popf
int3
insl
sub
test
call
leave
xchg
and
lret
ficoms
cli
cli
dec
pop
sbb
mov
in
sbb
repnz
or
imul
stc
sbb
inc
adc
in
shll
ret
lcall
dec
sbb
adc
mov
das
sarl
repz
in
loope
lds
not
movsl
mov
aam
or
pop
dec
pop
cmp
imul
dec
or
imul
lret
rol
and
sbb
sbbl
jbe
mov
mov
pushf
pushl
inc
setnp
call
jmp
push
xchg
cmpsl
and
jae
leave
icebp
add
inc
leave
cltd
leave
and
jg
sub
mov
shlb
aas
js
cmc
inc
shl
jmp
jb
fwait
outsb
shlb
outsb
test
xor
loop
or
sub
push
inc
push
push
push
jns
scas
mov
xor
stos
daa
jbe
pusha
or
xchg
test
sbb
fldl
mov
out
lahf
arpl
rcl
xchg
xchg
addr16
fincstp
add
jne
dec
and
cmc
std
jno
out
outsl
inc
jmp
or
sbbl
jmp
fsubrs
and
add
mov
out
push
push
jle
jbe
push
push
js,pn
cld
push
cmp
or
inc
pop
cwtl
lds
xchg
inc
rcll
xchg
jl
push
jecxz
mov
and
daa
lahf
rep
lahf
aas
pop
rclb
jge
xchg
xchg
test
lahf
loopne
ret
pop
mov
fmull
jnp
pushf
ret
nop
push
dec
sbb
inc
ret
pop
jnp
shlb
ret
cltd
int
cmp
fisttpl
lret
shlb
adc
pushf
test
test
cmpsl
mov
bsr
lods
pop
test
outsb
es
cmpsb
cmpsb
xchg
outsb
es
cmpsb
mov
ret
or
pop
les
adc
mov
mov
out
lret
sbb
addr16
add
push
mov
dec
cmpl
sbb
in
lret
inc
repz
push
inc
aaa
lahf
aas
xchg
movl
iret
js
add
into
xor
mov
xor
ss
test
sub
and
sbb
test
xor
insb
hlt
push
lods
mov
outsb
xchg
mov
and
daa
xchg
je
xor
es
movsl
xchg
sub
fmul
sbbb
fildl
je
aaa
or
pushf
icebp
aam
adc
push
cmpsl
mov
and
push
inc
loopne
mov
lret
jl
xlat
insl
in
shlb
pop
shr
pop
fbld
pushl
xchg
jo
call
xlat
add
inc
out
sub
pop
mulb
push
jbe
out
out
push
jbe
and
sbb
xor
dec
xlat
jmp
xchg
or
push
xor
mov
sub
push
xchg
popf
push
fldz
sti
sub
jl
sub
aam
movsl
in
and
push
jo
dec
int3
or
mov
mov
sub
cmp
hlt
jbe
jno
dec
clc
scas
mov
inc
imull
insb
insl
xchg
mov
jne
jne
inc
sbb
in
std
push
fwait
xchg
add
neg
inc
stos
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
call
mov
stos
and
ja
pop
lds
push
popf
jne
test
adcb
xorb
xor
std
fstl
scas
xor
decl
mov
gs
scas
shl
test
inc
cli
cwtl
int
and
adc
rdpmc
dec
fdivl
test
or
add
add
xor
mov
ja
addr16
sysret
push
repnz
and
test
and
sbb
jns
cmp
or
fs
xchg
xor
pop
cmc
push
sbb
insl
aaa
fwait
data16
sub
orl
inc
mov
cwtl
pop
mov
dec
call
mov
inc
xchg
xor
sub
jo
pinsrw
jecxz
sub
das
cli
imul
mov
hlt
inc
push
sbb
jp
out
fwait
push
cwtl
into
pop
lods
inc
movsb
shrb
in
cli
pushf
lods
jne
mov
mov
test
xor
pop
xchg
fldenv
fcomip
jmp
pop
lea
jb
pusha
pushf
pushl
lea
jmp
mov
pushl
lea
jmp
pop
repz
and
jg
and
push
adc
jecxz
adc
insl
or
or
in
cmp
mov
std
adc
movsl
cmp
pop
xchg
push
ss
cld
std
sbb
mov
imul
and
xchg
leave
cs
mov
adc
out
imul
sahf
xchg
push
mov
adc
imul
pop
out
movq
inc
lret
xchg
jo
push
xchg
stc
pushf
mov
call
add
stos
and
dec
push
je
jl
inc
fs
jl
mov
pop
sarl
xchg
lcall
mov
push
movl
xchg
mov
je
add
hlt
fsubrs
dec
shll
inc
fstp
out
and
jl
hlt
mov
pop
xor
hlt
xchg
movsb
sub
int3
les
cld
add
cmp
push
xchg
xor
icebp
lds
faddl
sub
dec
pop
xchg
mov
pop
das
cmpsl
outsl
xchg
inc
jbe
sbb
pop
xchg
mov
cmp
sub
out
lea
fsts
adc
mov
popf
sub
lahf
vpcmpgtb
cmp
ret
pop
cmp
daa
push
xor
repz
adc
aaa
mov
fidivrl
ret
sbb
and
int3
loopne
xchg
jb
push
cmp
loop
cli
rcll
adc
cmc
and
and
jl
cmp
mov
sub
bsf
rcl
mov
pusha
bt
sub
lea
jp
push
pusha
push
rep
push
lea
movzbw
call
sub
sub
not
or
mov
bt
cmc
sub
cmc
pushl
clc
cmp
push
pushl
call
lea
call
pusha
jmp
pushf
lea
call
pusha
push
mov
pusha
pushl
pushl
mov
lea
jmp
dec
and
xchg
jp
jb
xchg
sub
jb
sbb
mov
outsb
and
and
jle
jno
dec
push
sbb
aad
cltd
push
int3
sub
mov
cld
add
out
cmp
aaa
scas
repz
pop
mov
mov
rcrl
dec
mov
mov
mov
inc
es
cmp
das
out
lds
xor
inc
dec
jnp
push
inc
push
fdivl
or
ds
aaa
sub
aas
pop
mov
pop
push
mov
pop
mov
pop
pop
xchg
inc
pop
pop
inc
lret
xchg
mov
and
sub
imul
add
mov
sbb
ljmp
scas
and
popf
sub
jb
dec
movb
sbb
movl
pop
add
and
into
testb
inc
xchg
mov
repnz
jmp
inc
ffreep
pushf
pusha
je
aad
cmp
lods
fldcw
jns
icebp
or
or
roll
fdivrs
and
mov
scas
and
xchg
xchg
addr16
dec
maxps
mov
sahf
mov
inc
aaa
pop
mov
inc
nop
andl
fists
xor
sub
add
bnd
fsubrs
cmpsb
outsl
stos
testb
lds
mov
cmp
or
dec
cmc
add
adcl
xchg
mov
iret
sbb
xor
sbb
fldl
mov
mov
pop
daa
sub
mov
scas
and
sbb
add
add
and
je
and
pushf
cmpsb
rolb
inc
xor
arpl
stc
out
das
mov
jae
ja
insl
or
inc
shll
inc
add
mov
inc
cmp
push
mov
mov
int3
jnp
popl
int3
push
push
jp
push
adc
mov
xor
cwtl
jg
jmp
les
repz
ljmp
adc
movsb
rolb
mov
push
cltd
xor
nop
scas
mov
inc
dec
movsl
mov
or
lds
ret
adc
mov
aad
out
es
pushf
pushf
mov
pushl
ret
mov
sub
jno
or
push
cmp
or
pop
inc
ljmp
insl
inc
or
mov
jle
mov
xor
std
lahf
xchg
xor
jge
and
cmp
std
insl
xor
jae
movsl
xor
popa
pop
popa
movsl
sbb
inc
test
das
adc
subb
sub
scas
pop
and
push
in
mov
test
push
cs
adc
outsl
test
icebp
sub
xor
icebp
push
mov
jg
mov
call
call
mov
sub
push
rorb
xor
mov
loop
cmpl
divl
sub
cmp
lock
sbb
in
sbb
ljmp
and
xor
enter
ja
push
shl
sbb
in
shlb
data16
fs
mov
jo
mov
pop
arpl
adcb
js
or
and
add
imul
sahf
rolb
shlb
jmp
add
dec
jo
outsb
push
jb
outsb
je
jb
add
std
mov
sub
xchg
das
inc
out
dec
dec
arpl
pushf
mov
push
mov
mov
sti
lea
dec
mov
pop
imul
jo
lock
int
mov
leave
pop
sbb
aas
pop
inc
jg
addr16
scas
idiv
dec
out
ja
add
sbb
outsb
xchg
sbb
outsb
data16
notb
js,pn
ror
in
and
mov
add
stos
fistpl
sbb
insl
xchg
jae
xchg
dec
mov
mov
out
loope
fs
mov
sbb
push
inc
and
hlt
sbb
movsb
adc
fcoms
scas
and
fiadds
and
lock
or
movsb
xor
or
insb
jl
pop
dec
in
je
in
insb
push
enter
and
fimuls
jns
sahf
das
mov
sub
pop
stc
pop
mov
imul
inc
popf
or
inc
inc
sbb
adc
inc
pop
pop
imul
jecxz
lds
dec
push
mov
push
pop
dec
rorl
jle
jmp
pusha
mov
cmp
leave
aaa
mov
sahf
or
lock
add
mov
push
mov
adc
mov
arpl
xor
add
add
cmp
push
jge
jmp
cmp
jmp
add
pushf
clc
mov
mov
pushf
pushl
test
movb
call
mov
out
and
pop
mov
insb
lods
or
pop
adc
in
mov
sub
lahf
push
sahf
test
sbb
push
cmp
xor
clc
gs
add
pop
popf
lret
pop
ja
adc
mov
outsl
in
idiv
add
int
idivb
mov
stos
inc
int3
filds
push
stc
fs
ljmp
outsb
sbb
adc
es
or
xor
leave
gs
inc
inc
xchg
repz
scas
add
cltd
subl
and
and
xchg
test
cmp
pusha
sub
test
cmp
cmp
pushl
jmp
not
cmp
clc
cmc
mov
clc
jmp
pushf
pushf
call
xor
pushf
call
lea
call
call
call
fwait
aas
shlb
and
push
cmc
jge
gs
gs
int3
movntq
lods
dec
xchg
and
cmpsb
lret
lds
jg
mov
adc
mov
call
xchg
addl
xlat
push
mov
xchg
adc
aas
add
jnp
rcll
fucomi
mov
or
insl
push
pop
lahf
lret
and
cmpsb
or
or
repz
push
xchg
and
inc
sbb
sub
imul
xchg
test
scas
xlat
aas
ja
pop
add
out
xor
mov
sub
sbb
or
in
sbb
hlt
stos
cmpsb
mov
loopne
into
iret
and
std
sbb
dec
mov
pop
inc
mov
lahf
sarl
mov
xor
in
sbb
pusha
xor
and
arpl
cwtl
mov
push
cmp
sub
or
mov
dec
mov
sub
and
or
rolb
in
jae
aad
mov
mov
pop
fbstp
pusha
pusha
push
push
enter
mov
lcall
add
mov
insl
xchg
adc
xor
sahf
icebp
out
mov
popf
sub
or
jnp
fnstcw
insl
lds
mov
lods
fisttpll
dec
and
dec
jecxz
fcmovnb
or
and
sub
test
mov
push
adc
in
lds
and
cmp
jnp
pop
mov
sub
and
push
test
pusha
jo
adc
ficoml
sbb
jl
xchg
sbbb
mov
pusha
notl
adc
js
push
xor
mov
aam
cmp
jg
fiadds
mov
out
mov
dec
aas
fucomip
pop
cwtl
mov
mov
ret
xor
jo
ds
mov
sub
inc
mov
mov
test
mov
and
cmp
jnp
pop
repz
and
stos
insl
or
xchg
int
jnp
inc
out
sarb
call
repnz
push
loopne,pn
sub
dec
add
jb
mov
aam
mov
addr16
jge
dec
cmpsl
push
rcrl
sub
iret
mov
inc
lock
inc
lcall
sub
add
aad
jle
fninit
mov
cmpsb
ss
mov
add
fs
pusha
cmp
movb
jmp
xchg
jmp
mov
pushl
cmp
movb
test
xchg
or
mov
cmp
sub
mov
rep
pop
movsbl
call
insb
xor
mov
sub
data16
jle
ss
cs
neg
es
mov
aaa
mov
xchg
xchg
pushf
ficoml
mov
dec
fisttps
andb
or
adcb
inc
insl
mov
out
mov
and
mov
rcrl
jg
sahf
fnstenv
aaa
aad
pushf
inc
rcrl
sbb
cld
repnz
ret
pop
dec
xor
push
adc
inc
mov
push
pop
dec
scas
outsb
mov
lret
pushl
adcb
and
outsl
lods
lods
inc
xchg
inc
add
in
cmp
mov
xchg
add
jle
sub
jno
testl
sbb
mov
inc
push
cmp
enter
adc
push
je
dec
sbb
ljmp
sahf
inc
xlat
sahf
add
movb
xchg
daa
insb
cmc
adc
or
in
pop
jle
add
fldl
jbe
test
insb
add
stos
inc
push
push
or
lret
ret
call
jmp
xor
pop
ljmp
ljmp
mov
cmp
mov
pop
inc
call
movsl
jl
mov
sub
inc
or
push
fs
int3
cld
sub
mov
mov
xchg
jne
pop
sbb
add
inc
jns
jge
sub
rcrl
out
push
rorl
out
mov
fbstp
dec
fsubs
cmp
lcall
lret
in
loopne
mov
add
test
aas
and
daa
sbb
xchg
sbb
mov
push
fsubrl
cmp
out
dec
sub
sbbl
mov
popa
cli
mov
push
cmpb
jmp
ror
pusha
xor
call
push
call
ljmp
inc
jle
fisubs
push
dec
es
iret
test
mov
adc
loopne
pop
dec
daa
inc
shlb
rcll
jns
mov
shll
and
mov
pop
dec
push
inc
icebp
movsl
out
adcl
dec
xor
cmp
stc
jbe
and
repnz
test
in
adc
push
xchg
mov
sbb
fadds
dec
cmpsb
fisubrs
out
ss
cmpsb
push
es
push
outsl
scas
add
push
test
fdivs
dec
pop
std
or
mov
lret
jecxz
mov
mov
sti
in
ficoml
cld
add
inc
mov
lret
sbb
and
or
cmp
push
cli
cmc
jb
xor
sarb
jnp
push
xor
push
cmpb
or
jb
and
into
pop
mov
inc
cmpsl
jg
jmp
sub
sub
fs
pop
test
cmp
push
or
je
in
xor
fs
ja
arpl
inc
sub
bound
fwait
ds
ret
dec
fs
loopne
mov
sahf
and
popf
pop
cwtl
clc
movsl
sbb
lahf
xor
xchg
sub
xor
push
inc
xchg
shll
sub
mov
lock
push
jbe
fcmovnbe
into
fiadds
call
into
push
fidivrs
sbb
imul
jmp
aad
xchg
push
sub
rcl
ficomps
mov
pop
xor
popa
dec
cmp
fstl
cmp
push
mov
pop
xchg
pushf
or
movb
lock
sub
push
xchg
xor
push
and
add
mov
push
mov
cmpsb
leave
popf
sub
adc
or
push
push
and
cld
sub
lret
and
repz
sub
add
pop
fstl
lret
push
divb
divb
xchg
es
ds
mov
jge
and
out
out
outsl
daa
outsl
inc
mov
jg
inc
lcall
push
ss
xchg
dec
sub
fstl
mov
in
and
or
fsubl
jae
testb
mov
push
cli
negl
cmp
sbb
xchg
jp
out
xor
and
xor
icebp
pop
jp
insb
inc
sbb
inc
rcrb
mov
testl
jo
inc
mov
stc
imul
testl
decl
xor
rcll
push
aaa
dec
addr16
push
out
mov
jne
push
fisubrl
mov
and
jmp
lea
ja
clc
pusha
movl
imul
mov
pushf
test
add
pusha
pushl
pushf
lea
jmp
bt
test
jmp
mov
sub
icebp
or
mov
mov
or
rcrl
pop
ss
lret
popa
hlt
test
and
pop
fsub
gs
scas
push
or
hlt
fwait
arpl
adc
dec
jns
push
dec
faddl
or
and
dec
out
mov
xchg
xor
mov
xchg
mov
mov
pop
outsb
sbb
in
cmp
mov
cld
movsb
dec
cld
in
lods
sub
in
std
jnp
iret
gs
jle
cmpsl
push
and
divl
out
pop
xchg
mov
xor
xchg
fiadds
test
cmp
push
stos
mov
xchg
cmp
and
dec
test
mov
js
insl
mov
fmull
add
xchg
inc
sahf
insb
stos
sahf
mov
xchg
outsb
dec
push
cmpsb
inc
dec
data16
ss
fists
xor
inc
mov
pusha
movzbw
mov
bswap
movzbl
mov
push
mov
pushf
pushl
ret
xchg
or
cltd
popf
and
lea
lods
testb
sbb
das
vshufpd
int
mov
fstpl
sarb
inc
sarl
adc
dec
jb
mov
test
xor
bound
lods
push
pop
ret
xor
aaa
or
push
lods
icebp
push
cltd
fldcw
shl
inc
imul
inc
jns
cmp
pop
mov
push
lea
jmp
movnti
sub
jmp
or
popa
adc
jns
cmp
leave
push
pop
and
jae,pt
or
neg
mov
sub
sub
call
fnsave
fnsave
int
add
dec
insl
pop
jne
lea
jge
std
xchg
sub
arpl
sti
adc
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
xchg
jmp
inc
gs
outsl
fs
gs
imul
add
in
cs
pushl
sub
pop
idivb
push
sahf
mov
push
xor
push
pushf
mov
xor
sub
xor
sub
aam
xor
pop
mov
shrb
mov
cmp
ss
mov
inc
mov
movb
fldcw
jge
inc
les
xor
fldl
out
adc
xchg
sbb
inc
and
and
cmp
sbb
or
adc
mov
push
and
sbb
xor
cmp
sub
iret
mov
pop
leave
fwait
jg
cmpsl
ret
sarl
pusha
nop
shrb
lock
mov
mov
xchg
ljmp
aas
stc
xor
inc
cs
add
ja
push
das
int
mov
xorb
outsb
fldl
out
and
imul
add
cmp
xchg
xchg
jo
mov
lea
jbe
jl
out
cmp
lcall
mov
push
ret
dec
xchg
sarb
mov
out
and
in
fcom
adc
nop
lock
add
push
mov
xor
mov
ficoml
xchg
test
inc
data16
cmpsb
push
cli
sub
pop
rcr
lahf
ss
jecxz
xchg
push
adc
jle
das
push
mov
jbe
mov
lods
add
test
add
push
lods
js
pop
std
push
and
js
xchg
or
jae
ret
mov
bound
sub
pusha
xchg
sub
stos
push
sarb
cmpsb
fistps
jbe
mov
cld
xchg
adc
je
inc
mov
and
arpl
jbe
mov
pushf
mov
lea
jbe
sbb
add
shl
sub
bsr
cmc
push
bt
mov
call
enter
and
orb
out
push
jbe
ds
outsb
xchg
mov
call
call
lea
andb
jge
arpl
aad
or
mov
mov
enter
pop
repz
cmpsl
call
mov
mov
adc
mov
in
jl
mov
je
hlt
cmp
inc
fcoml
popf
leave
sbb
push
inc
dec
dec
inc
push
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
adc
shlb
in
mov
xor
inc
adc
xor
or
insb
mov
int
sbb
mov
xor
add
jp
mov
cmpsl
xchg
pop
outsl
loopne
fsubs
xor
hlt
xchg
arpl
dec
sbb
mov
insl
inc
sbb
push
sbb
push
sahf
fisubs
xchg
ds
hlt
jp
daa
mov
mov
lock
mov
mov
adc
fwait
xchg
in
cmp
in
jmp
cmc
sub
std
dec
cld
iret
mov
loop
cltd
aaa
outsb
lahf
dec
push
jns
addr16
xchg
pop
xor
imul
pop
dec
je
ss
sbb
clc
js
inc
test
mov
loope
leave
xor
sar
je
or
cwtl
or
mov
pusha
sete
movzbw
pop
lea
call
call
pop
mov
neg
cmpsb
imulb
push
into
xchg
xchg
ss
es
push
and
sbb
mov
pop
lret
dec
lret
xchg
and
into
icebp
es
lods
ret
mov
dec
movsb
loope
shrl
fists
sbb
xchg
imul
pop
pop
push
xor
jne
push
mov
cmpsl
mov
push
xlat
push
cmpb
in
gs
lods
lds
mov
and
enter
lea
pushf
not
movw
mov
jmp
test
std
shll
into
out
xchg
outsb
mov
outsb
cmpsb
data16
data16
testb
inc
out
mov
sub
cli
inc
bswap
in
cld
insb
mov
xchg
xor
cwtl
das
xlat
adc
cmp
push
out
fstl
insb
out
out
ja
cli
aad
dec
mov
xorb
in
and
subb
ljmp
and
lock
sarb
sub
leave
jmp
jmp
icebp
xchg
leave
pop
adc
inc
inc
push
xor
sbb
and
lods
inc
daa
inc
xor
pop
jle
and
cld
mov
fidivrs
dec
xor
rorl
xchg
movl
inc
mov
cs
add
xchg
mov
mov
add
sub
test
scas
push
dec
mov
inc
testb
ljmp
mov
and
jb
cli
inc
inc
sbb
bound
jb
inc
fsubl
dec
fimuls
jb
pop
cmpsl
and
lahf
and
inc
add
dec
cmp
xchg
xchg
sub
or
cmp
out
and
lahf
gs
jle
xchg
push
into
xchg
inc
mov
cmp
push
pushf
push
mov
push
cmp
test
dec
mov
jecxz
xchg
inc
lret
xchg
ret
mov
arpl
pop
popa
pusha
pusha
iret
daa
sub
inc
mov
push
je
pushf
fmul
cmp
insb
sbb
test
pushf
sub
popl
push
dec
push
out
cmp
cld
stos
insl
or
mov
cmp
data16
cmpsl
cmpsb
incb
mov
repz
insl
shl
sub
hlt
jg
lds
or
mov
stos
je
and
loope
sub
cs
push
stos
insl
pop
es
scas
lods
adc
mov
cmp
dec
dec
or
sub
movb
std
jmp
cwtl
jl
les
adc
jle,pt
es
jle
push
fimuls
pop
jle
mov
stc
ds
mov
cmp
clc
loope
int3
mov
xchg
stos
rcrb
daa
stos
dec
shlb
imul
cs
add
sub
pop
and
sti
dec
roll
sub
lods
mov
push
cmpb
dec
int3
push
cmp
mov
inc
pop
iret
mov
stos
divb
sub
dec
lods
cmc
int
in
std
in
lea
push
lret
bound
outsb
lds
adc
adc
xor
sub
xchg
sbb
std
in
fwait
leave
push
les
mov
lcall
call
idiv
fxch
dec
inc
pop
mov
or
in
xchg
mov
cmp
jb
loop
xor
cltd
iret
jecxz
dec
and
pop
adc
scas
scas
data16
es
lods
xchg
dec
fcmovne
in
icebp
jmp
decl
add
call
sbb
sub
aaa
pandn
cmpsl
inc
jg
ja
ja
pop
pop
pop
pop
mov
sahf
mov
ret
xchg
adc
js
or
in
xor
cmp
fxch
in
push
call
mov
xlat
mov
xchg
inc
stos
mov
fisttpll
lea
in
cli
out
xor
scas
fsubr
incl
mov
and
js
mov
mov
stos
mov
add
cmp
cmp
dec
adc
jns
xor
dec
and
ja
loop
sbb
lds
mov
mov
ss
cs
incb
xchg
ds
xor
sti
jnp
in
add
aaa
jmp
gs
insl
insb
cltd
cmpsl
out
pop
imul
adcb
fstps
shrl
add
jo
inc
js
mov
sbb
push
aas
test
inc
mov
adc
out
fcmovnb
insb
mov
ficomps
add
rorb
inc
movsb
xor
imul
sub
jg
dec
adc
add
lds
popf
lods
cmc
popf
test
popf
movsl
fldenv
push
ss
mov
call
sub
sub
and
xor
fnstsw
std
in
mov
inc
mov
dec
mov
xchg
lock
rolb
outsl
sub
and
sbbl
shr
add
adc
imul
jmp
adc
cld
lcall
dec
jl
mov
icebp
jl
rep
int
repnz
add
lahf
js
fnstcw
das
adc
or
out
out
div
pop
xchg
pushw
stos
hlt
add
mov
pusha
lret
add
scas
xchg
jae
jae
stc
adc
xchg
mov
fwait
cmp
and
cmp
cs
flds
dec
sub
push
in
sbb
mov
ret
popf
xchg
lods
mov
sahf
push
aad
and
mov
movsl
ss
and
cmp
ljmp
in
inc
aaa
ret
popf
xchg
sti
lock
mov
fwait
mov
filds
pop
dec
lahf
pop
mov
add
xchg
js
ja
movsl
mov
test
xchg
fsub
imul
sbb
push
roll
pusha
into
push
push
hlt
mov
and
fstpl
cs
push
push
es
jo
je
fdivrl
sti
mov
xchg
push
sub
jle
loopne
clc
fcomps
lock
mov
shr
lods
into
mov
fs
jne
call
pusha
movl
push
lea
jmp
mov
movb
lea
call
cmc
jmp
add
aam
and
xor
out
into
push
jbe
mov
es
push
out
xchg
sub
push
jmp
inc
lcall
mov
ret
or
loope
push
add
out
xor
and
add
sub
inc
jno
jno
mov
sub
jae
adc
lcall
repz
ret
cmp
xor
xor
pmaxub
xor
sbb
sbb
lcall
dec
jp
xor
nop
inc
rcrb
hlt
add
push
gs
imul
outsb
addr16
add
lahf
enter
jno
mov
pop
roll
jns
pop
andb
xchg
inc
shrb
aas
sbb
and
push
mov
lahf
cmp
rorl
sbb
mov
cmc
cmp
popf
test
sbb
or
jnp
inc
test
xchg
cmpsl
sbb
stos
and
pop
jo
dec
pop
out
pop
xor
cmp
and
cmp
pop
lods
leavew
inc
cmp
enter
mov
xor
loop
rolb
or
mov
mov
push
lcall
int3
dec
lahf
stos
mov
push
lea
je
pushf
push
adc
pushl
push
pushf
mov
lea
jmp
movsbl
mov
pushl
call
jb
pusha
cmpb
pusha
call
pushf
lea
je
ror
cmp
call
movw
jmp
mov
movb
pushf
jmp
test
leave
and
fnstenv
test
test
sub
into
lcall
sahf
fisttpl
lea
fldl
call
xor
leave
pop
popa
ds
lods
lret
mov
repnz
ret
dec
std
femms
je
pop
dec
cmp
mov
loop
hlt
ljmp
mov
mov
lret
out
cmp
xchg
mov
fs
dec
xor
lret
adc
or
sub
add
ret
pop
fwait
repz
int
outsl
imul
test
lcall
data16
out
dec
sahf
aaa
inc
aaa
jg
scas
dec
scas
dec
xor
jae
in
ds
and
cmp
jno
jmp
cli
insl
inc
push
loop
xchg
repz
fisubrs
icebp
xchg
jb
mov
cs
cmp
ret
inc
fwait
lods
cltd
hlt
fsubr
mov
lea
imul
cwtl
add
add
loopne
sub
push
sarb
mov
jb
mov
mov
cmp
cmp
rol
test
pop
push
mov
pushf
outsl
add
or
or
sbb
nop
xor
jae
popf
pop
cltd
xchg
bound
jnp
and
lods
pop
or
xchg
lock
jbe
adc
xchg
cmp
and
inc
pop
and
std
outsl
dec
dec
cmp
add
mov
pop
lcall
dec
add
push
int3
and
push
jns
mov
jns
jmp
repnz
pop
xor
mov
jb
rcll
insb
int3
pop
shl
insl
push
test
push
and
cmp
mov
rorb
and
adc
pushf
test
push
jge
out
movsb
cmp
sbb
in
out
inc
jb
aas
mov
test
jnp
and
outsb
shll
std
jecxz
in
lea
xchg
in
std
add
add
aas
sti
mov
loope
call
xor
and
xor
sbb
clc
adc
nop
enter
mov
xor
int
adc
sub
sbb
pop
loop
and
and
pusha
mov
and
adc
pop
std
filds
pop
shlb
xchg
in
jg
mov
lret
fidivl
add
push
jecxz
and
lea
inc
sbb
in
jg
fwait
jmp
cs
or
push
cli
mov
add
mov
mov
cld
insb
in
aam
or
test
mov
pop
int
sub
ret
jecxz
repz
and
mov
fdivr
call
and
outsb
push
pop
sbbb
lods
imul
pop
xor
repnz
add
xor
inc
mov
stos
rcr
ja
mov
jl
push
xchg
inc
imul
sbb
pop
fwait
aaa
cli
xor
or
mov
jo
jb
xorb
sub
out
rol
jae
mov
dec
mov
adcl
mov
ss
dec
insb
std
int3
and
outsb
xchg
pop
mov
sub
cli
fiaddl
add
nop
imul
and
nop
xor
jmp
pushl
lds
in
fdivrs
push
lods
mov
push
and
mov
cmp
and
into
addl
ret
xlat
cltd
idiv
sub
push
into
jbe
inc
push
data16
sahf
out
pop
nop
jne
stos
xchg
pop
pop
addb
sbb
xor
mov
jo
dec
loopne
pop
add
lahf
std
imulb
pop
pop
or
sbbb
and
push
jbe
or
loop
jecxz
add
fsub
xchg
outsb
pop
mov
neg
aaa
outsb
mov
and
fwait
xlat
daa
ja
sub
loopne
movsb
subl
mov
xchg
in
cmc
cmc
pop
cmp
cmc
gs
xor
push
push
xor
sub
adc
sar
ret
mov
stc
pop
and
mov
mov
pop
movsl
repz
fidivrs
out
xor
cmp
jno
outsl
in
fchs
repnz
aas
mov
jno
push
and
mov
clc
sub
flds
sub
mov
add
insl
frstor
in
jb
xchg
xchg
js
popf
into
and
mov
scas
push
out
push
into
dec
into
out
jbe
mov
fcomps
push
fdivrl
push
les
and
mov
jmp
andl
enter
pop
fistl
mov
int
inc
test
in
jno
hlt
xor
push
xchg
lcall
xchg
mov
mov
scas
popf
leave
imul
jno
pop
cmpsl
in
rcrl
lcall
das
and
jecxz
arpl
pop
fwait
xchg
or
lret
stos
addr16
sub
and
mov
popa
xchg
fwait
sub
xchg
aaa
add
test
mov
loopne
sbb
jp
hlt
cltd
shl
and
dec
jge
cwtl
inc
lods
divb
shlb
push
or
pop
mov
inc
adc
enter
adc
mov
mov
and
sub
lods
adc
sub
stos
or
sub
xchg
in
add
xlat
pusha
in
cmp
xor
mov
xchg
inc
out
and
clc
mov
repnz
in
icebp
test
repz
enter
jno
sbb
es
movsl
dec
fs
comiss
sbb
int
xor
gs
adc
pop
xchg
and
inc
arpl
popw
inc
iret
and
int3
mov
cwtl
push
test
loop
pop
neg
mov
scas
rorb
inc
int
add
mov
push
loop
les
addb
je
notl
sbb
int
test
es
inc
int
mov
out
jp
jge
or
and
cmp
lea
cmp
lods
xorl
ret
and
lea
jmp
lea
shl
bsr
mov
sar
mov
call
imul
and
stc
addr16
mov
addr16
out
aas
test
roll
jnp
adc
in
stos
out
xor
cmc
jecxz
inc
inc
aas
cmp
rolb
jne
leave
scas
ret
and
xchg
push
out
jno
cmp
push
enter
xor
push
ffreep
jmp
pop
xlat
aad
pop
cld
mov
sub
stos
movsl
xchg
dec
mov
nop
enter
nop
and
mov
rcr
fwait
mov
out
shlb
hlt
call
and
sbb
mov
jl
sub
adc
jp
inc
ds
std
movsl
sub
mov
jo
push
fwait
je
add
xor
aad
aam
xor
in
rcl
scas
repnz
insb
sbb
mov
andb
xor
xor
push
sub
cmpsl
xor
mov
int3
loopne
shlb
jbe
xor
fidivl
cmp
mov
xor
into
push
mov
push
sub
xchg
cmp
mov
mov
imul
cltd
test
mov
xchg
iret
mov
push
jae
add
iret
sub
and
add
lcall
lret
dec
outsl
in
sub
movsb
cwtl
jno
dec
testl
cmpsl
inc
sti
sti
fwait
imul
jnp
and
imul
sub
sub
mov
pushf
mov
lea
call
push
pushf
call
call
add
push
popa
je
push
outsl
push
imul
lcall
sub
jns
adc
fnstcw
xor
push
mov
ljmp
inc
daa
std
cmp
mov
xchg
pop
inc
jle
jl
dec
stos
test
jecxz
pop
jns
fs
or
adc
mov
inc
shr
pusha
cs
jnp
push
mov
inc
sbb
mov
jecxz
add
xchg
ss
data16
push
inc
xchg
mov
sbb
les
add
cltd
adc
add
call
pushf
pushl
jmp
call
pusha
lea
jne
btc
inc
mov
call
push
pop
in
shlb
pop
push
cmp
xchg
dec
add
fabs
sbbl
push
sbb
mov
inc
cwtl
fcmovnu
movsb
scas
arpl
lds
pop
dec
addb
mov
call
bound
and
pushf
test
and
add
add
xchg
jnp
sti
cmp
dec
mov
xchg
mov
cmpsb
mov
loope
outsb
rcrb
mov
stos
dec
int3
mov
ss
fidivs
xchg
push
push
lcall
xchg
inc
lcall
add
jecxz
mov
mov
shl
bt
mov
push
cmp
bt
repnz
pushf
call
adc
mov
mov
pop
outsl
aaa
aas
pop
out
cwtl
loopne
fadd
sahf
ljmp
pop
inc
xchg
cmp
stos
mov
sub
fisttps
rcrl
or
mov
lsl
and
adcb
jle
or
sbb
sub
aad
xchg
xor
jp
subl
jne
shll
lods
mov
xchg
jge
push
insb
sub
mov
test
fdivl
ficoms
outsb
decb
push
cmovg
add
inc
test
jp
and
pop
je
and
les
hlt
hlt
sbb
or
sbb
sub
xchg
push
mov
inc
mov
jo
and
testb
fiaddl
xchg
mov
in
sub
mov
test
hlt
jg
shr
imull
loope
jo
sbb
lods
xchg
push
sbb
out
je
mov
sbb
ds
outsb
repz
dec
pop
ja
sarl
adc
pop
inc
ds
mov
add
sbb
das
dec
xchg
aas
mov
xlat
ja
outsl
out
movsl
dec
and
imul
sub
dec
cs
ds
es
push
pop
push
mov
push
daa
dec
fisubrl
pop
in
mov
inc
pop
into
lods
and
movsb
dec
jb
arpl
dec
jbe
jecxz
in
jo
hlt
sbb
fs
arpl
pop
xchg
sub
cmp
fcoms
ret
out
scas
mov
pop
rcll
sbb
outsl
adc
push
jle
pop
sbb
xchg
jno
lcall
rcl
xor
test
adc
pandn
pushf
pushf
adc
mov
pusha
pushf
jmp
lea
jne
sar
clc
bsr
xor
mov
shrd
sub
not
mov
call
call
movl
pushl
mov
pushf
pushl
ret
lea
jae
push
push
cmp
mov
pushl
pusha
lea
jae
bt
bt
cmp
call
dec
nop
and
and
es
mov
ret
adc
push
sbb
lret
jnp
mov
lods
bound
cmpsb
and
inc
test
xchg
sbb
imul
jo
mov
insb
icebp
mov
mov
lahf
dec
js
leave
mov
data16
jnp
decl
out
dec
inc
movsb
mov
add
sti
out
outsl
xchg
xchg
outsl
sub
mov
repz
sti
push
mov
adc
jmp
movsb
xchg
ret
filds
les
xlat
and
push
sbb
orl
and
xor
mov
repnz
xor
pop
sub
xor
fbld
mov
mov
pop
pop
and
xchg
testb
sbb
push
loope
push
jo
mov
or
shl
push
or
add
adc
xchg
mov
mov
fiaddl
add
hlt
insb
aam
xor
and
add
int3
dec
jo
add
in
mov
sub
ja
setno
neg
pusha
stc
sub
cmp
sub
add
call
adc
setno
dec
neg
mov
pushf
adc
rol
or
mov
test
repnz
jmp
call
loopne
out
in
orb
movsb
test
push
je
loopne
mov
or
jno
add
xchg
inc
mov
sub
mov
mov
pop
cmpsb
lahf
cltd
cltd
push
xchg
jbe
inc
pop
mov
jle
xchg
cmp
sti
jns
aad
loopne
inc
mov
call
mov
nop
jg
and
gs
arpl
xlat
sbb
mov
and
pop
nop
ss
jg
ja
fmuls
add
mov
sbb
pushf
adc
xchg
push
adc
insl
addb
out
sbb
movsb
or
cmpsb
mov
fistl
or
mov
dec
add
xor
lods
popl
dec
loopne
inc
mov
pop
lds
cltd
push
sahf
out
jno
jne
jl
js
sbb
xor
add
sbb
mov
sub
xchg
mov
les
cmp
xchg
stos
pop
push
mov
loopne
xchg
jb
fdivl
and
and
and
sbb
addb
and
arpl
push
leave
mov
push
mov
imul
or
mov
pop
loopne
push
xchg
test
aam
xchg
sbb
push
and
je
jne
and
adc
mov
mov
sbb
lods
sbb
mov
inc
or
or
xorb
sub
inc
fstl
ret
push
movsb
and
test
hlt
sub
arpl
add
sbb
sub
and
jns
jg
sbb
push
mov
jle
push
xchg
jbe
mov
movsl
pop
nop
pop
loopne
mov
sbb
push
or
and
mov
cmc
xchg
jns
loope
pusha
outsl
add
test
in
push
mov
mov
aas
gs
imul
loopne
push
js
push
inc
lahf
mov
scas
jl
test
adc
js
cmp
xchg
out
pop
pop
adc
loop
add
rcll
cmpl
cmp
out
dec
mov
test
mov
test
add
test
xchg
out
mov
mov
or
and
add
inc
and
inc
ja
roll
jbe
sbb
popa
rol
test
and
shrb
or
xor
mov
fidivrs
cwtl
movsb
xchg
in
enter
cwtl
jl
ret
imul
mov
fisttps
inc
les
inc
and
out
movsb
pop
jecxz
add
into
mov
pop
mov
imull
or
sbb
xchg
out
xor
inc
mov
push
cmp
stos
dec
mov
sbb
push
mov
push
jno
nop
xor
cmpsb
sub
imul
push
rep
pop
mov
add
adc
js
pop
and
xchg
and
sbb
cmp
shlb
popa
frstor
and
lds
fstpl
lods
sbb
adc
ja
lods
cwtl
ret
xor
add
cmpsb
fs
in
or
inc
stos
add
enter
mov
xorb
mov
inc
sub
xchg
in
rcll
sbb
ret
push
pop
fsubrp
mov
insb
xchg
hlt
loopne
mov
mov
cwtl
cmp
daa
imul
mov
shl
movsl
pop
mov
mov
imul
pusha
mov
adc
pop
jns
pop
jne
xchg
xor
jmp
jl
pusha
sbb
sahf
pop
push
mov
adc
jb
add
xchg
xchg
test
add
aad
push
stc
dec
cmp
dec
or
inc
sbb
inc
test
mov
push
push
aad
mov
xchg
xorb
sbb
stc
lcall
icebp
test
stos
pushf
sbb
ss
xchg
dec
or
stos
push
dec
jbe
or
popa
jbe
add
test
pusha
cwtl
xor
xor
insb
push
mov
fwait
adc
shlb
mov
out
push
jns
lahf
or
inc
dec
mov
xchg
repz
test
js
popa
mov
pop
and
pop
mov
dec
fucom
mov
js
cmp
fadds
dec
fwait
jecxz
xchg
push
sbbl
imul
jae
dec
push
xchg
bswap
mov
pushf
in
lds
xchg
xchg
push
imul
xchg
lahf
cmpsb
fadds
push
fstps
mov
dec
test
xchg
outsb
jg
int3
mov
adc
loop
or
sbb
mov
addr16
fsubl
xchg
inc
aad
mov
je
dec
xor
cmpl
loopne
and
mov
or
aas
add
mov
insb
or
fimull
adc
sar
cmp
add
movsl
lahf
sbb
add
push
and
xchg
adc
push
mov
dec
imul
das
out
pop
lahf
sub
in
jmp
sub
sbb
mov
imul
andl
arpl
arpl
mov
cltd
test
push
pusha
mov
nop
push
sti
adc
scas
and
mov
popf
pop
outsb
out
sub
test
fimuls
push
jbe
dec
nop
mov
fsubrs
inc
adc
xchg
mov
mov
bound
adc
sbb
push
or
mov
mov
cmp
xchg
inc
mov
jl
icebp
xor
mov
and
stos
mov
push
or
dec
pxor
jle
icebp
xchg
dec
push
pop
test
and
jecxz
mov
bound
loopne
xchg
add
add
sbb
aaa
adc
fdivl
cmp
cmc
movsb
mov
movsl
rol
rcrl
inc
add
jl
dec
xchg
jge
xchg
xchg
movsl
push
loopne,pt
aas
mov
outsb
xor
inc
xorb
sub
mov
or
push
nop
sbb
out
sarl
or
sub
in
test
scas
xchg
lret
dec
movsl
shrb
lret
dec
or
sbb
nop
push
add
sub
mov
imul
in
subl
rclb
mov
push
sub
inc
mov
sbbl
xcrypt-ecb
cmpsl
dec
or
sbb
shll
imul
cwtl
ljmp
pop
aas
xchg
push
daa
loop
push
xor
adc
mov
enter
pop
mov
movsl
sti
ja
inc
rdmsr
mov
mov
xchg
lret
fs
mov
cwtl
movsl
out
insb
mov
push
leave
loopne
test
aaa
jl
jg
inc
mov
js
scas
add
xchg
lea
inc
mov
mov
inc
pop
insl
mov
decb
pop
xorb
add
mov
sub
xor
adc
cmp
add
adc
addr16
mov
adcl
addr16
xchg
movb
sahf
cmp
fs
cmpl
sub
js
mov
and
mov
add
cmpb
xor
enter
adc
or
aam
test
faddl
add
js
loopne
sarb
fiadds
divb
movsb
jo
mov
push
inc
fadds
adc
push
lock
sarb
add
imul
inc
addr16
aad
add
push
jae
sbb
cmc
sbb
xorl
dec
inc
pop
jne
and
inc
es
inc
fstps
scas
mov
fiaddl
mov
pop
rolb
dec
xor
pushf
jnp
and
fiadds
sbb
mov
popl
inc
cmp
xor
pop
cmpsb
std
mov
inc
jb
stc
lcall
adc
stos
cs
in
test
shrb
xor
mov
stos
enter
mov
sub
insl
scas
nop
add
adc
call
call
sub
mov
xchg
sarl
and
mov
js
shll
jae
outsl
int3
xchg
adc
mov
or
aam
int3
xorb
xor
add
mov
out
sub
subb
or
movsb
adcl
sub
sub
inc
cmpb
jno
setb
int
push
test
sub
add
add
push
shrb
fldcw
xchg
imul
mov
jl
xchg
pop
rorb
dec
mov
enter
sbb
pop
movsl
iret
es
push
cs
int
mov
or
stc
subb
into
pushf
insl
cmp
sbbb
imul
cmp
mov
xchg
or
in
and
das
mov
stos
jbe
mov
mov
inc
xchg
push
push
jnp
addl
scas
arpl
jbe
pop
push
mov
mov
pop
rorl
sub
push
out
xchg
rclb
scas
pop
shlb
inc
jae
mov
pushf
frstor
dec
xchg
add
aaa
push
dec
xor
jns
add
insl
in
pusha
or
mov
adc
repz
nop
jg
fldcw
imul
sbb
inc
test
ss
lods
push
mov
cmp
and
lret
pop
jecxz
fwait
adc
or
add
mov
jno
addl
add
adc
inc
int3
add
stos
fucomip
push
test
xchg
and
cmp
cwtl
imul
xchg
sbb
rclb
std
test
xchg
add
mov
add
ss
adc
and
ja
inc
sbb
lods
mov
xorb
mov
jecxz
shlb
lods
adc
popf
add
femms
dec
in
jg
mov
jge
dec
scas
xor
mov
jnp
loope
adc
xchg
scas
push
or
daa
subb
push
jne
jbe
movsb
loopne
loopne
add
addl
add
inc
cwtl
jbe
lret
jp
jns
and
inc
pop
andl
loopne
das
inc
bound
pop
mov
mov
add
mov
xchg
or
add
cli
sbb
nop
or
mov
call
cmc
jmp
sbbl
scas
pop
push
add
pop
lcall
fwait
leave
in
add
je
pop
test
push
std
jl
shll
fadds
xor
in
adc
mov
xchg
xchg
lret
pop
test
mov
stc
jp
imul
andb
enter
ds
pop
add
or
xchg
js
subb
jne
push
nop
push
movsl
pop
inc
hlt
popf
mov
sbb
xchg
dec
add
repnz
mov
test
adc
inc
mov
imul
add
fadds
stc
sbb
cmpsb
or
pop
inc
xchg
or
daa
or
aad
imul
dec
in
mov
mov
mov
shr
insb
lret
xchg
pop
out
adc
not
int
fstps
cmpsb
xchg
enter
mov
cs
mov
rcrl
or
pop
arpl
push
adc
mov
stc
mov
pop
or
orl
notl
or
or
nop
cmp
nop
cmp
inc
push
scas
dec
xchg
or
mull
stos
inc
sarl
test
adc
leave
mov
popa
jmp
xchg
jge
add
mov
leave
rorb
icebp
add
leave
test
test
dec
aam
rcrb
cmp
sbb
xchg
mov
rcrb
movsb
movsl
inc
test
mov
lahf
shr
ret
adc
cmp
leave
sbb
push
leave
mov
les
loopne
jnp
les
and
adc
xlat
jge
call
lret
inc
mov
icebp
mov
pop
add
movsb
mov
push
test
cs
or
or
jo
clc
and
insb
stos
sub
movsb
mov
sub
and
int
mov
add
sub
dec
rorb
sub
mov
or
sbb
nop
fmuls
or
mov
shlb
ret
jmp
add
cmpsb
push
sbb
movsb
mov
stos
inc
push
rol
mov
push
mov
and
orb
mov
rclb
in
lret
orb
add
fadd
call
movsb
loopne
adc
dec
mov
enter
data16
push
pop
sbb
sub
fsubrs
je
inc
and
adc
adc
ret
push
into
mov
mov
mov
in
lret
movsb
mov
sub
sbb
adc
test
lret
lret
adc
imul
add
cmpsl
fwait
nop
xorl
lret
xchg
xor
adc
fsubrs
in
jge
and
in
sbb
cmpb
ret
mov
mov
sbbb
mov
in
jl
cwtl
push
imul
aam
mov
cmp
cmp
scas
ja
imul
dec
jns
in
test
xor
outsl
icebp
popa
js
ja
insb
outsb
inc
subl
sbb
js
inc
fildl
in
mov
mov
mov
hlt
add
jne
push
js
sub
js
lahf
jo
inc
nop
out
pop
pop
fstpt
sub
inc
cmp
lahf
and
push
jp
outsb
stc
test
shll
jge
leave
inc
sbb
lret
pop
push
or
jb
ret
sbb
adc
pop
rorl
out
movsl
cwtl
loopne
dec
mov
in
sahf
mov
or
sub
gs
ret
iretw
add
xor
cmpsl
aad
les
js
cld
jle
js
xor
lret
dec
imulb
fsubrp
test
xchg
test
mov
fimull
arpl
and
adc
repz
jle
xor
jbe
push
xchg
adcb
sub
call
sub
adcl
xchg
push
sub
jmp
xchg
xchg
out
fdiv
jbe
rorb
push
dec
popf
add
pop
dec
sbb
push
and
mov
cld
mov
add
mov
mov
clc
pop
rclb
into
sub
ficoms
mov
movsl
mov
fldt
insb
mov
lret
and
cmpsl
mov
dec
mov
push
arpl
outsb
cwtl
add
test
std
xor
mov
call
inc
loopne
cmp
adc
push
or
movsb
addb
add
insl
push
cmp
or
pop
into
xor
cmp
enter
mov
add
clc
loopne
test
fadds
movsb
push
stc
loopne
pop
popf
imul
test
pop
or
cmpsb
pop
scas
lods
or
popa
cmp
test
push
or
into
jb
mov
pusha
out
imul
sbb
adc
stos
dec
shlb
jle
mov
outsl
cmpsb
sub
xchg
jl
push
lock
pop
cld
and
ja
jge
jbe
inc
xlat
push
pop
out
cmp
xchg
cmp
push
loopne
pop
loopne
pusha
icebp
jne
popf
push
imul
inc
or
imul
push
popw
mov
mov
js
or
xchg
mov
cmpl
sbb
or
mov
mov
nop
stos
call
push
adc
push
les
sbb
lds
enter
push
lock
rorl
imul
inc
or
add
pop
jge
lret
xor
nop
in
lret
mov
inc
or
imul
aam
shlb
mov
inc
mov
fcompl
push
push
mov
out
adc
int3
mov
test
add
sbbl
in
mov
jge
cmp
mov
push
push
popa
subl
call
and
int3
mov
mov
mov
push
mov
roll
cld
inc
adc
mov
sbb
mov
push
inc
and
sahf
or
mov
test
mov
mov
mov
mov
call
outsb
aad
rclb
loopne
pop
out
and
rclb
push
inc
xchg
add
movsb
inc
fsubrs
and
subb
ror
adc
lods
add
inc
in
addl
stos
les
mov
clc
xchg
cwtl
movsb
out
and
std
or
add
mov
push
push
sub
inc
pop
shl
xchg
test
dec
fcompp
mov
push
out
les
sbb
jb
mov
scas
fisubrs
jmp
in
sbb
pop
ret
adc
mov
cli
stc
test
lods
adc
or
jnp
lods
fwait
jmp
enter
mov
dec
int
shll
mov
push
test
mov
std
dec
sbb
inc
pop
dec
xchg
push
pop
test
into
add
insb
adcb
jno
dec
int3
in
out
cwtl
mov
insl
inc
rorb
add
pop
push
out
push
jge
sbb
fcoms
jp
push
shr
mov
add
mov
sbb
xchg
pop
adc
call
and
cld
aas
daa
rcrb
fisubrl
movsl
stos
ret
cmp
fs
or
roll
and
addr16
stc
inc
adc
pop
fnsave
lods
aam
pop
into
andb
stos
imul
sub
repnz
mov
rcr
xchg
rolb
out
mov
loopne
mov
es
pop
ret
lret
pop
mov
clc
movsl
movsl
mov
shrl
lahf
in
fs
inc
lods
test
into
dec
adc
or
or
fwait
call
cmp
inc
lea
insl
jb
test
sub
dec
and
pop
orb
push
leave
shr
and
sub
jl
shlb
js
and
dec
cmp
and
test
pop
push
in
cmp
adcl
push
ja
mov
jno
adc
or
xchg
jb
popa
xor
push
sarb
je
frstor
mov
mov
inc
mov
xchg
icebp
ficoml
aad
loope
and
xchg
aaa
lret
adc
scas
mov
pop
test
nopl
xchg
xchg
mov
int3
les
adc
enter
in
shll
nop
fs
mov
inc
fcmove
xchg
sub
bound
jbe
push
cltd
cmp
filds
sarb
jne
icebp
push
mov
mov
adc
push
mov
inc
mov
scas
rcl
jmp
test
pop
adc
mov
xchg
mov
int3
aad
cmp
into
fimuls
xchg
cmpsl
push
repnz
push
add
jl
jmp
add
pop
movsl
jo
out
lcall
out
fdivl
into
sbb
lods
jb
scas
sbb
lret
push
push
sbb
jae
shl
xchg
sbb
pop
xchg
shlb
mov
dec
js
movsb
jb
mov
push
insl
bound
movsb
mov
movsl
shll
push
sub
cld
fisttpll
data16
ret
and
inc
pop
xor
pop
sti
lret
loopne
mov
cltd
push
dec
xchg
cwtl
leave
insl
pop
int
cmpsb
int3
insl
and
lcall
aam
add
mov
inc
flds
rcl
gs
and
pop
dec
cmpb
or
scas
cmp
aad
out
outsb
cmpsb
xchg
test
xchg
push
jle
dec
jno
mov
push
dec
test
adc
fisttpll
jecxz
mov
sbb
mov
dec
setno
add
jge
leave
mov
adc
jne
mov
popa
mov
add
pusha
mov
ja
loop
push
pop
inc
inc
inc
inc
cmpsb
dec
cs
sti
push
jns
jge
insb
cmp
adc
cmp
scas
mov
test
popa
mov
sub
int
jge
test
mov
insl
mov
loope
pop
mov
mov
imul
adc
outsb
ja
add
and
push
dec
adc
loope
sbb
sbb
push
cmp
lea
out
sbb
add
nop
push
gs
scas
sbb
enter
xor
test
push
pop
dec
ficomps
add
inc
loopne
mov
jo
cmp
push
pop
add
jle
mov
and
pusha
test
inc
jns
inc
push
push
pop
inc
pop
mov
aad
push
push
lret
cmp
sahf
insl
sahf
leave
sarl
sbb
mov
test
inc
fiaddl
ja
mov
push
test
pop
fimull
or
jb
into
or
add
es
leave
out
mov
jecxz
adc
arpl
xorl
pop
sub
sub
stos
pop
stos
push
mov
test
in
test
jecxz
lea
push
lock
dec
dec
orl
or
loope
sub
push
jo
dec
roll
mov
mov
test
jge
mov
ss
inc
and
jne
or
aaa
jbe
sub
loop
insl
pop
push
sbb
push
cmc
jo
inc
cmpsb
insb
movsb
shr
push
in
filds
icebp
mov
add
xor
std
push
push
push
popa
inc
test
sbb
sahf
outsb
sbbb
xchg
adc
or
iret
fadd
push
or
sub
sbb
pop
fbstp
sbb
fstp
adcb
cld
scas
pop
pusha
movsl
cs
sub
les
push
xor
sbb
fldcw
in
xchg
mov
add
pop
cmp
pop
adc
pop
push
fimuls
in
sub
pop
add
loop
fisubs
test
mov
sub
fcomp
cltd
dec
mov
push
mov
aam
mov
mov
int3
popa
lods
nop
clc
sbb
test
jno
lea
jbe
inc
ja
adc
faddp
jns
imul
loopne
xor
int3
iret
mov
ficoms
cmc
sbbb
add
ret
imul
movsl
test
arpl
pop
movsl
cmp
inc
push
test
mov
popl
in
dec
into
or
push
fstpl
inc
call
add
lock
or
mov
jmp
jl
dec
lret
cld
outsl
xchg
push
adc
addr16
inc
cmpb
adc
sbb
stc
sub
jo
sbb
or
dec
mov
imul
andb
pop
add
add
xchg
sub
mov
sub
mov
mov
jo
aad
sbb
stc
into
mov
shlb
dec
mov
fwait
jl
push
fnstcw
je
in
and
inc
xchg
push
and
test
aam
and
jno
fstpl
mov
mov
mov
fistps
jmp
bound
mov
scas
mov
sub
fiaddl
adc
hlt
mov
stos
mov
cmp
lock
sub
lods
pop
adc
imul
inc
adc
or
in
scas
js
jecxz
imul
fwait
jg
xchg
mov
scas
xchg
xorb
sarb
addb
fnstcw
stc
adc
inc
gs
js
loopne
popa
xchg
or
mov
sub
mov
xor
ds
rcl
ficompl
lods
inc
sahf
addl
bound
inc
cmp
cmp
push
test
int3
jle
fstl
popa
jns
scas
imul
inc
or
dec
xor
popl
sub
cltd
clc
sbb
jns
jbe
fwait
jge
sub
addr16
jne
insl
mov
pop
or
adc
mov
and
mov
cmp
add
pop
ret
xchg
lret
mov
sbb
pushf
mov
arpl
xchg
loop
push
lret
fndisi(8087
call
out
xchg
mov
imul
fnstenv
xchg
inc
or
shld
fldl
stos
xor
in
xchg
xor
and
mov
jne
aam
pop
adc
mov
movb
nop
jne
jmp
lods
imul
adc
dec
and
adc
ss
lods
int3
mov
mov
xor
mov
aam
adc
rcl
xchg
mov
mov
test
scas
int
rorb
pushl
adc
sahf
data16
push
aam
cmp
jne
imul
repz
mov
addb
mov
or
notb
xchg
jge
and
mov
popa
sbb
sarl
loopne
add
outsb
xchg
jns
inc
sbb
xchg
pop
push
dec
mov
push
adc
sub
inc
adc
dec
lods
xchg
ret
pop
sbb
jg
xor
into
push
lds
mov
test
push
rclb
xchg
loopne
pop
cmp
incb
mov
pushf
call
fwait
aaa
jns
gs
mov
pop
mov
les
push
or
out
mov
jns
adc
imul
ror
push
popf
pushf
aam
aad
out
rolb
inc
test
dec
dec
inc
mov
lods
xchg
fs
enter
add
imul
mov
loopne
push
push
imul
push
sbb
adc
mov
mov
jp
xchg
mov
jns
dec
test
popa
lret
cmpb
imul
je
test
lret
rolb
dec
xchg
mov
xchg
jb
mov
cmp
mov
data16
les
or
pop
xchg
adcb
or
data16
aas
jbe
int3
xchg
and
pop
jns
imul
jle
insl
push
lock
pop
inc
pop
aas
test
cmp
fcmovb
fst
mov
rclb
enter
sub
xor
push
std
inc
hlt
les
jo
inc
cmc
mov
ds
inc
fidivrl
adc
xor
mov
mov
outsb
jne
insb
cmp
sbb
inc
mov
iret
or
aad
and
mov
cld
push
aam
or
jno
xor
mov
aaa
adc
lock
sbb
mov
lea
je
lods
test
sub
pop
jnp
adc
fdivrl
push
inc
cmpsl
insl
xchg
jecxz
mov
outsl
mov
mov
or
lret
jae
push
loopne
sti
inc
adc
sbb
ja
scas
out
out
adc
addb
dec
mov
in
or
sub
pop
ret
into
and
add
rcrl
cwtl
fisubrs
scas
sbb
mov
mov
jnp
dec
or
dec
into
jns
inc
sub
shl
sub
imul
pop
decl
loopne
insl
jo
sub
dec
or
xchg
push
cmp
push
xchg
mov
aad
push
stos
and
iret
dec
dec
faddp
xor
or
jp
js
sub
mov
inc
push
xor
subl
mov
cmpb
jge
outsl
cmp
xchg
or
rolw
mov
pop
mov
sti
xor
loopne
mov
push
imul
pcmpgtd
xchg
sbb
add
sub
cltd
mov
jno
cmp
popa
imul
inc
mov
imul
adc
repnz
stc
test
outsl
mov
jns
sub
sbb
cmp
push
mov
jl
add
ja
dec
jbe
loopne
push
enter
mov
pop
iret
shlb
mov
ja
mov
lret
test
dec
sarb
orl
leave
orl
xor
or
jp
js
push
bound
add
call
cmc
jne
test
and
adc
mov
out
movsl
lock
subl
or
in
movsl
aad
mov
mov
dec
gs
adc
push
loopne
or
or
loope
cli
push
outsb
pop
push
mov
cld
loop
rolb
test
ja
popl
mov
or
cmpsl
movsl
adc
scas
loopne
pusha
iret
xchg
add
decb
add
sbb
dec
jbe
xchg
cmp
xchg
imul
xchg
add
push
shlb
bound
in
xlat
or
mov
or
into
xchg
dec
and
into
outsl
push
jp
int3
push
add
mov
insl
sub
pop
add
cld
jge
shrl
adc
fidivrs
mov
fdivl
into
push
or
mov
mov
push
adc
sbb
push
call
cmp
loopne
mov
clc
scas
or
loopne
inc
movb
rorb
cld
adc
test
fadd
and
lar
mov
mov
push
test
push
sbb
imul
fwait
mov
jg
mov
icebp
into
dec
subb
icebp
shlb
dec
sub
test
jb
adc
cmp
xlat
daa
pusha
cmp
sbb
ljmp
and
push
jb
loopne
fcomp
pop
sub
xchg
cwtl
cmc
mov
xor
xchg
data16
mov
xorl
in
pop
adc
xchg
mov
js
inc
test
fisubrs
popa
jb
and
adc
jnp
push
jae
fcomp
xchg
cltd
insb
jb
sti
fisubs
outsl
mov
loopne
mov
mov
lods
inc
or
into
packsswb
call
jns
or
xor
in
push
push
test
icebp
je
cmp
es
push
or
xchg
pop
add
fsts
in
sbb
dec
rcll
cmpsl
or
pop
add
sub
jne
adc
inc
fstpt
stc
shrb
or
loope
fdivr
jno
fidivrs
flds
jns
jl
pop
cld
leave
mov
xchg
mov
enter
icebp
imul
mov
daa
push
sub
inc
mov
or
clc
or
or
dec
adc
hlt
adc
orb
lcall
pop
sub
xchg
xchg
inc
pop
xchg
add
ret
call
loopne
ror
loope
cmp
shll
testb
and
adcb
orl
hlt
sbb
movsl
inc
loopne
push
fwait
imul
add
insb
add
loopne
jne
mov
popf
mov
lds
subl
mov
jge
sbb
inc
loop
push
cmp
leave
hlt
loop
add
ror
add
pop
push
sar
add
subb
pop
les
ret
mov
adc
int3
push
popl
cmpsl
inc
cmp
inc
imul
adc
lock
add
adc
push
pop
or
cmp
mov
xor
cmpb
jmp
sbb
addb
add
stos
mov
cld
inc
jno
push
inc
loopne
stos
iret
adc
ss
pop
leave
mov
lds
pop
loope
inc
int3
mov
fisubs
cwtl
popl
jmp
loop
push
hlt
stos
inc
call
add
and
nop
or
cmpsb
inc
aam
outsb
movl
call
adc
dec
xorb
adc
movsb
aam
flds
stc
and
aas
pop
add
mov
adc
rolb
add
int3
push
cld
mov
rorb
call
cmp
adc
xchg
fs
iret
leave
sbb
ret
or
xor
sub
add
xorl
addl
xor
cmpsb
mov
test
andl
jmp
orb
sbb
xchg
test
and
xor
data16
mov
call
xchg
lods
mov
push
mov
add
dec
shr
sub
inc
pop
xchg
cmp
mov
gs
add
dec
test
jns
xchg
dec
imul
xorb
pop
add
inc
mov
lods
sbb
adc
push
arpl
add
bound
imul
push
adc
sti
inc
stos
pop
jmp
push
sbb
lret
add
mov
and
mov
enter
mov
loope
lret
adc
fsubs
orb
outsb
jp
rclb
test
out
sbb
jmp
cs
movsb
push
push
dec
cmp
push
in
movsb
sbb
jnp
test
int3
inc
rclb
in
adc
inc
inc
pop
inc
fcoms
sbb
and
jno
dec
leavew
inc
roll
xchg
xchg
mov
cli
jbe
out
les
adc
movsl
je
movb
mov
xor
sub
xchg
nop
inc
xchg
bound
and
out
cmpsb
sbb
mov
add
push
cs
js
inc
xor
adc
ljmp
xor
pop
mov
sub
leave
in
in
push
jae
xchg
jge
in
and
cmpsb
inc
xchg
hlt
data16
mov
inc
outsb
movsl
mov
aam
inc
test
imul
adcl
inc
lods
jecxz
int3
mov
push
dec
rolb
aad
jno
mov
loop
out
jb
jle
mov
sub
test
movsb
adc
mov
mull
nop
mov
imul
xchg
mov
mov
inc
and
pop
and
jl
int3
lods
pop
pop
xor
stos
inc
push
std
and
sub
sub
xor
xchg
and
or
jp
mov
fbld
or
cmp
add
sbb
push
pop
insb
repnz
js
mov
sbb
push
mov
mov
clc
mov
dec
pop
pop
lods
js
dec
push
mov
enter
xchg
scas
fs
cmp
xchg
lret
xor
or
mov
testl
and
sub
lcall
loopne
dec
jmp
xor
lods
call
stos
mov
xor
dec
aas
movsl
adcb
fsubrs
dec
and
gs
push
pop
jae
lds
mov
aad
movsb
pop
adc
loop
fbstp
fiadds
aad
das
xchg
int
cli
adc
mov
cmc
sub
sbb
mov
movsl
sbb
mov
mov
adc
sub
pop
pushf
push
jbe
adc
nop
in
xchg
or
ror
sarb
sbb
dec
mov
xor
dec
xchg
cmp
mov
test
imul
and
xor
pusha
xor
xchg
push
and
fidivs
add
imul
jmp
rcl
sub
cli
daa
lret
mov
lret
test
cltd
icebp
ds
rolb
iret
movsl
faddp
xchg
js
mov
add
leave
adc
lret
mov
ficompl
adc
inc
fmuls
lahf
lea
imul
push
dec
in
and
adc
xlat
inc
mov
jbe
push
cmp
adc
fmull
cmpsb
add
and
or
fcomps
push
adc
int
in
and
shl
std
mov
data16
lods
cli
xor
dec
mov
jmp
cmp
adc
adc
sbbb
imul
sbb
xor
sbb
inc
cmp
addb
xor
mov
add
sbb
pop
xchg
pop
and
inc
test
xchg
cltd
and
lds
call
popf
iret
mov
int3
setb
cmp
adc
mov
jp
push
add
movsl
pushf
dec
jno
test
loopne
icebp
lock
popa
scas
mov
nop
loopne
xchg
test
mov
xor
aad
das
add
notl
nop
inc
jno
mov
mov
dec
aas
in
les
mov
in
mov
inc
aad
dec
pop
lods
aam
sub
test
dec
jp
in
lods
pop
add
dec
popf
lret
fldcw
add
lcall
dec
gs
xchg
imul
aas
push
add
sbb
sahf
inc
pop
pop
dec
or
jge
outsb
sbb
inc
leave
dec
cmp
adc
jae
or
test
jo
push
push
pop
mov
sahf
out
int3
mov
xchg
add
fmull
push
dec
sbb
add
cli
fwait
imul
pop
mov
mov
out
ret
clc
mov
rcrb
lret
les
and
aam
mov
mov
movsl
outsb
sarl
xchg
push
or
pushf
cs
ds
xchg
cmp
mov
faddl
dec
mov
xchg
imul
mov
or
out
mov
jne
stos
and
test
cmp
out
das
movsb
mov
or
das
xor
mov
mov
or
movsl
fdivrl
jg
xchg
push
add
ret
sbb
add
or
mov
fiaddl
call
imul
in
xchg
loopne
nop
into
xchg
jne
ja
push
and
flds
and
cmpsl
jp
xor
dec
imul
sub
xchg
push
jnp
adc
inc
adc
fiaddl
lock
push
mov
andl
call
clc
leave
sbb
xorl
lahf
dec
les
push
movsl
cmp
mov
or
test
leave
sbb
aad
push
aam
adc
sbb
push
loop
shr
jge
fucompp
or
int
ds
push
sub
mov
xor
movsb
jns
jle
aas
push
insl
pop
nop
push
dec
push
mov
hlt
addb
sbb
pop
inc
push
cmp
jne
jp
push
mov
or
pop
dec
dec
inc
mov
outsb
mulb
call
sahf
pop
fcompl
iret
and
out
or
mov
test
lahf
lret
cwtl
inc
xchg
lods
inc
mov
sub
push
decl
xor
lods
and
jne
flds
pop
cmp
adc
cmp
add
xor
xor
test
ja
arpl
sarb
mov
mov
add
push
test
adc
sub
and
ret
insb
dec
add
push
sbb
ret
cmp
cwtl
pusha
cmc
xor
out
outsb
shlb
push
out
cmp
add
or
lret
out
cmc
movsl
outsb
stos
leave
mov
push
xchg
push
test
rclb
cmp
cmpb
int3
call
fwait
dec
aas
aas
adc
jl
push
push
cmpsl
lods
mov
add
loopne
pop
les
stc
inc
pusha
pusha
mov
sub
inc
sbb
adc
jbe
mov
push
inc
out
sbb
cmp
inc
out
addr16
pushf
enter
sbb
rclb
shlb
mov
popf
sti
xchg
in
bound
jmp
mov
mov
fistl
mov
pop
or
cmp
ja
sbb
aas
xor
pop
mov
test
mov
cmp
inc
cmp
jmp
and
fs
push
and
rcr
das
into
loopne
push
ret
push
iret
out
aaa
or
sub
and
aad
or
ss
stos
mov
mov
sub
pop
lods
aad
xchg
push
xor
pop
mov
inc
add
nop
fsubl
lret
push
push
or
movsb
jb
arpl
adc
lahf
sub
dec
xchg
loopne
mov
and
cmpl
pop
mov
sbb
call
les
lock
lret
pusha
xor
add
and
leave
inc
rcrb
xchg
loopne
and
push
xchg
push
vpaddd
lods
jnp
push
or
cmp
test
ss
inc
add
pop
push
or
mov
test
push
mov
dec
enter
das
mov
and
fmulp
or
in
fstl
ret
xlat
nop
xor
out
fcmovbe
xor
jno
and
ljmp
imul
mov
in
fisttps
loopne
mov
movsb
push
insb
jl
add
out
mov
outsl
hlt
scas
fdivs
dec
aas
shrb
pop
dec
or
push
mov
aam
ljmp
scas
addr16
iret
test
push
call
pop
fsubrl
xchg
xchg
adc
aam
arpl
add
mov
xor
inc
mov
inc
or
adc
mov
fstpl
adc
lods
and
and
adc
outsl
loope
rorb
int
lock
pop
lret
les
add
and
cmp
sahf
popl
sbb
mov
cmp
mov
jecxz
sub
xor
or
clc
gs
sbb
dec
adc
lcall
movsb
mulb
fnstenv
fisubl
or
test
sbbl
cs
ret
les
ss
rclb
xor
aas
lret
rorb
addl
xchg
lret
dec
test
add
sbb
cmpl
push
xchg
imul
enter
call
stos
and
xor
mov
divb
movsl
cwtl
xor
xchg
arpl
push
sahf
xchg
imul
jbe
add
fldl
insl
pop
sub
add
add
lea
push
shll
xor
adc
cmpsl
inc
mov
aaa
adc
js
cmp
repz
call
loopne
dec
loop
fsubrs
push
inc
xchg
aam
cmp
ret
gs
jg
movsl
popa
loopne
inc
les
mov
mov
dec
fimuls
cmpsb
iret
and
adc
mov
xlat
jo
pop
add
and
adc
insb
int
test
adc
icebp
movsl
cmp
call
imul
xor
push
pop
jns
std
adc
inc
jl
add
test
mov
fs
cmp
xchg
sub
je
call
cmp
push
push
sub
mov
push
lret
adc
sbb
xor
test
cs
std
and
fwait
scas
lea
in
scas
dec
nop
mov
movsl
dec
das
inc
inc
mov
jg
xor
xchg
mov
pushf
in
cwtl
insl
pop
sbbl
fidivs
inc
call
add
fnsetpm(287
xchg
and
sbb
sbb
jmp
cmpsb
in
imul
enter
xchg
pusha
jb
xchg
imul
movsl
mov
shlb
push
arpl
mov
mov
cmp
mov
ds
rolb
cmp
add
out
out
push
pop
mov
adc
test
push
mov
sbb
xchg
or
or
pop
sbb
mov
mov
adc
inc
sbb
add
xchg
lods
pop
cmpsl
pop
imulb
cs
jns
xor
adc
rorb
call
filds
cs
sbb
out
push
mov
mov
push
push
pop
mov
loop
or
or
mov
sub
ror
stc
loopne
enter
movsl
shll
dec
add
imul
dec
enter
insb
pop
mov
mov
pop
popa
sarl
aas
fisubl
ret
fisubrl
mov
dec
addr16
aad
ret
imul
adc
xchg
out
pop
mov
add
arpl
aam
cmp
or
mov
inc
sub
ja
loope
pop
rorb
push
dec
and
clc
aas
adc
mov
movsl
repz
mov
in
movsb
adc
inc
lods
mov
call
cmpsl
shll
add
jp
imul
aas
push
sub
push
icebp
ret
lea
rclb
lahf
add
lret
loopne
push
imul
std
xchg
popa
fimuls
or
mov
pop
pop
jl
shlb
dec
insb
jmp
push
inc
xchg
call
ucomiss
pop
imulb
rorb
cli
dec
xor
lsl
cmp
sbb
pop
mov
les
jo
sbb
pusha
sbb
ja
or
lock
int
in
outsl
sar
adc
xchg
push
sbb
push
mov
ja
pop
in
lret
mov
sub
sbb
mov
lcall
sbb
mov
pop
xchg
fwait
mov
mov
out
jg
sti
mov
mov
push
sti
xor
cmp
or
cmpsl
xchg
mov
push
cwtl
addr16
cwtl
movsb
test
sub
or
jns
ret
push
xchg
gs
fs
test
lods
or
push
add
inc
inc
mov
mov
pop
fdivs
sub
mov
andb
xchg
pop
aad
lods
enter
jno
jl
add
add
pop
mov
shll
imul
add
xor
nop
xchg
cmp
jae
jno
mov
adc
cwtl
je
xchg
frstor
mov
xor
shrb
jo
inc
push
or
cmp
call
adc
mov
push
and
loopne
test
or
popf
adc
call
inc
push
jnp,pt
call
dec
push
jg
js
cld
and
fs
and
cmpsl
loopne
or
mov
cmpl
lret
pop
shrl
cltd
inc
cmp
fcomp
jge
cmp
cmp
arpl
mov
mov
cmp
lods
xchg
and
imul
subb
add
test
mov
dec
dec
dec
xchg
mov
mov
or
mov
sub
rcrb
cmp
push
push
and
cmpsb
cmp
add
in
movsb
jne
into
sub
adc
mov
push
imul
xchg
rorl
test
call
outsl
jp
test
cmp
clc
cs
sub
dec
sub
rcr
lods
dec
pop
add
pop
popl
imul
and
push
sub
add
dec
jbe
fcoms
push
imul
mov
jb
subl
push
enter
mov
mov
iret
sub
leave
fisubrs
lods
test
mov
mov
test
incb
shl
dec
jbe
push
incl
inc
lock
sbb
das
mov
mov
in
imul
adc
sbb
xchg
test
mov
inc
in
mov
push
in
ds
mov
pop
dec
mov
js
in
jnp
mov
add
shrb
or
jbe
mov
hlt
adc
fsubrp
sarl
or
cs
nop
imul
adc
fsts
push
test
and
inc
mov
rcll
adc
out
push
aas
dec
cmpsb
lods
stc
xor
std
add
xchg
mov
add
inc
jnp
nop
aas
xchg
shll
je
dec
sbb
mov
fs
cmpsl
or
mov
into
and
out
cmpsb
xor
es
pushf
cli
mov
nop
int3
adcb
ficompl
add
jmp
mov
dec
mov
lcall
xchg
rol
shll
daa
dec
in
adc
dec
add
cwtl
imul
cmc
jmp
imul
mov
sub
dec
jmp
xchg
or
in
inc
push
push
adc
mov
test
lret
dec
shr
cmpsl
xchg
loopne
push
jg
push
add
and
stos
lcall
in
fcmovb
xchg
stos
mov
inc
loopne
mov
cmc
cmp
xchg
push
mov
iret
fucomi
or
dec
out
dec
and
push
fisubrs
adc
punpckhwd
test
push
mov
mov
cli
imul
into
rcr
push
pop
insl
cmpsb
add
and
aas
mov
cmp
mov
sbb
pmaxsw
imul
xor
mov
and
and
xor
pop
cltd
mov
dec
movsb
sbb
decb
rcr
pop
ficoms
pusha
sbb
hlt
adcb
outsb
adc
test
pop
jae
daa
mov
scas
pop
loopne
pop
dec
imul
add
xchg
push
xchg
hlt
subl
pop
add
loopne
ffree
pop
in
dec
dec
cmc
mov
mov
mov
shll
andl
inc
in
push
dec
inc
scas
aad
mov
cmp
mov
adc
xlat
xor
xor
popa
test
xor
and
test
clc
xchg
in
movsb
subl
rolb
mov
nop
repnz
add
addb
cmpsb
fs
xchg
movsl
or
inc
lods
shrl
stos
xchg
mov
jp
out
into
fiaddl
sbb
shrl
jbe
xchg
call
icebp
push
mov
push
fwait
insl
adc
test
shrb
cmp
or
xchg
pop
xor
or
sti
js
push
loope
push
and
rolb
sub
jo
cmc
xor
idivl
push
ret
sub
add
mov
into
xor
out
push
pop
add
or
pusha
jl
push
lret
xchg
xchg
xchg
cmp
dec
aam
mov
popa
imul
test
outsl
cmc
cwtl
les
test
add
lret
mov
lret
or
push
mov
mov
aas
aas
call
rol
rorb
jl
fsub
and
or
xor
sbb
dec
dec
add
adc
imul
les
xor
iret
fs
sahf
inc
loopne
push
cmp
jo
les
sub
lcall
cmp
les
mov
fildll
out
sbb
xor
cli
fdivs
pushf
xchg
sub
cmp
rcrb
ret
inc
sbb
clc
jl
xchg
inc
xor
inc
les
push
aas
jb
nop
cwtl
stos
test
push
adc
in
jae
pop
ror
jnp
shrl
cmp
jnp
sub
push
sbb
lret
jno
lods
cld
in
scas
and
push
stos
pop
inc
mov
sti
ret
pop
call
jbe
mov
push
je
cwtl
loopne
xchg
jle
fdivrs
push
test
sti
jns
cmpsl
sub
add
stc
jp
sbb
fimull
fcmovu
and
push
ret
mov
and
icebp
xor
inc
sub
push
mov
push
fsubr
adc
cmpsb
fwait
jmp
pop
scas
lds
out
rcl
ss
stc
jecxz
lods
adc
sbb
xchg
cmpsb
cmpsl
fisttpl
cmpsl
push
and
adc
push
scas
or
add
sbb
loopne
imul
push
lds
inc
cmp
repz
rcll
sub
into
pusha
push
dec
dec
mov
push
xchg
mov
test
sbb
dec
pushf
jns
mov
xchg
test
adc
cmpb
inc
inc
negb
add
lds
in
mov
popa
daa
stos
test
add
jl
and
push
repz
adc
or
add
fildl
imul
push
push
fdivrs
add
jbe
mov
pop
and
mov
shlb
pop
faddl
push
inc
and
jnp
or
sub
xchg
outsl
pop
xor
fmul
inc
rorl
dec
inc
xchg
add
lret
adc
or
lds
xor
pushf
mov
ret
stos
fists
call
xchg
int3
jb
repnz
xor
sub
das
mov
push
daa
or
insb
add
call
cmp
add
lcallw
outsl
cwtl
xchg
pushf
js
adc
or
jns
and
pop
or
mov
adc
inc
inc
movsb
shll
rorb
jb
push
add
mov
movsb
cltd
xor
push
mov
pop
xor
sub
xorl
mov
test
push
adc
enter
fists
cmpsl
or
stos
sbb
lret
dec
jmp
addl
or
dec
iret
or
mov
outsl
ret
repnz
mov
adc
sbb
pop
or
mov
sbb
mov
pop
scas
or
jl
push
add
xchg
ja
adc
mov
out
xchg
jmp
mov
stos
in
ret
xchg
jecxz
sub
addl
addps
fnstcw
subl
pop
push
cltd
add
inc
and
cmpsl
daa
inc
cwtl
lcall
mov
xor
movsb
mov
int3
inc
aaa
fadds
adc
sub
push
jl
push
and
add
add
push
rcl
stc
cld
inc
movsb
pushf
cltd
ror
jb
xchg
out
sub
inc
jo
and
mov
and
dec
lret
call
mov
das
mov
insl
sbbl
or
insl
test
mov
imul
add
stos
and
cltd
pop
jnp
loopne
imul
add
loopne
jae
test
iret
cmpsl
enter
pushf
testl
mov
mov
clc
cmp
xlat
out
dec
dec
sbb
xchg
jecxz
xchg
call
push
loopne
les
filds
dec
mov
inc
or
jnp
adc
mov
movsl
xchg
mov
mov
mov
mov
push
sub
fadd
dec
add
cmp
sbb
xchg
ljmp
imul
sarb
adc
lret
cmp
lret
mov
cmpb
mov
inc
cmp
lds
cltd
jbe
arpl
xorl
pop
xor
cltd
fmull
loope
and
fstpl
add
insb
mov
fnstsw
imul
lock
push
adc
rclb
sub
lods
popa
out
push
mov
mov
mov
in
or
cmp
nop
adc
mov
aaa
push
call
fistps
enter
adc
push
push
sbb
sbb
pop
fwait
dec
stos
test
cmp
mov
fistl
loope
mov
loope
push
test
and
xor
scas
mov
jl
pop
sahf
mov
andl
ffreep
sbb
push
cmp
pop
adc
push
xchg
imul
sub
add
mov
imul
adc
cmp
mov
pop
xlat
fmulp
aam
pop
sub
enter
int
sub
addl
push
pop
pop
arpl
push
jecxz
or
or
fsubs
call
out
cmpl
push
push
adc
repnz
inc
dec
add
stos
leave
cmc
or
sub
stc
arpl
rclb
push
je
gs
sub
mov
jae
cltd
cmp
fnstenv
enter
into
and
sbb
js
movsl
push
ljmp
xchg
and
inc
mov
test
or
mov
insl
push
cmp
mov
cmpsl
dec
push
les
jbe
mov
adc
push
into
dec
shlb
fisttpll
sarb
inc
mov
stc
rcrb
pop
andb
test
mov
iretw
bound
mov
nop
xchg
sub
adc
cmpb
imul
push
cmpsl
les
push
mov
push
xchg
xchg
insl
aam
xchg
mov
jmp
mov
xchg
mov
mov
icebp
mov
movsl
mov
and
push
or
jl
add
push
andl
lods
insb
pop
orb
ret
mov
js
adc
sbb
jno
add
add
pop
mov
inc
and
cld
mov
hlt
mov
shll
je
cmpsl
sub
jmp
in
out
fisubrl
arpl
les
pop
sub
cwtl
stc
mov
add
dec
pop
xchg
imul
mov
push
or
sub
xchg
jno
ja
adc
inc
leave
jb
cltd
add
sub
bound
sub
cmpsl
inc
cmpsl
cltd
or
xchg
xlat
rcll
sbb
into
sti
xorb
pop
dec
mov
push
cmp
mov
and
inc
mov
or
fadds
aas
sbb
or
fs
stc
mov
cmpsl
into
jo
iret
pop
rcll
pop
dec
aam
push
jb
les
adc
lret
push
sahf
or
das
test
pop
movsl
stos
loope
test
int
dec
leave
or
push
adc
add
fisttps
jbe
xchg
lods
cmp
dec
sub
aaa
scas
lods
mov
xchg
fisubrs
scas
adc
scas
orl
call
add
test
loopne
pop
xchg
jae
loope
or
push
mov
or
xor
push
jns
dec
adc
shlb
lret
pop
stc
lret
imul
arpl
cltd
inc
lods
scas
and
popf
push
adc
les
jnp
sub
fs
add
ljmp
push
jns
fistl
roll
mov
lods
and
sub
push
int
mov
sbb
mov
arpl
or
inc
bound
cmpsl
xor
stos
es
add
push
add
fistps
add
jp
push
push
roll
popf
aam
in
fistpll
xchg
lods
les
cwtl
cmp
xchg
jnp
aad
push
imul
adc
xchg
and
sbb
aam
cmc
push
std
push
push
dec
enter
popa
fdivr
bound
push
add
inc
cmpsl
movsb
push
xor
ret
xchg
je
pop
mov
sbb
push
cmc
minps
sub
in
push
cmpsl
adc
mov
pop
pop
aad
icebp
sbb
sub
outsb
or
rclb
sub
fcmovnu
push
cs
push
push
jne
push
xor
inc
mov
ljmp
jne
mov
sub
test
scas
lcall
adc
aam
insl
cmp
scas
pusha
mov
inc
int3
xchg
loope
dec
cmc
das
test
iret
adc
mov
lds
xchg
loope
fidivrs
or
jnp
xor
cld
add
pop
pop
and
lret
mov
dec
ss
jg
mov
push
dec
pop
jne
imul
cmp
fbld
jmp
sarl
std
xchg
int3
cmpsb
int3
adc
popa
add
insl
mov
mov
push
xchg
add
cs
nop
cmc
shll
mov
fisubrl
and
leave
hlt
dec
mov
cmp
push
xor
imul
lds
out
lcall
dec
add
adc
push
js
mov
pop
andl
adc
data16
jo
push
mov
dec
or
in
xor
cmp
les
cmpl
sti
adc
fnstenv
lahf
xchg
xchg
mov
into
jecxz
int3
adc
jo
or
add
push
lcall
rcrl
insb
lds
jno
push
test
dec
inc
jne
jle
das
mov
scas
insb
xor
xchg
pop
popf
push
mov
jne
cmp
mov
and
sbb
pop
inc
mov
cmpsb
into
pop
sbb
xor
loopne
call
mov
test
adc
cmc
repnz
push
dec
into
adc
imul
stc
scas
lds
xchg
mov
and
mov
adc
push
imul
mov
rclb
movsl
mov
pop
ret
cmpb
out
mov
and
jbe
or
les
sti
or
out
fbstp
mov
neg
xor
out
sub
testl
fistps
jl
mov
mov
daa
movsb
shll
push
lret
push
mov
ret
mov
call
lds
mov
push
ret
sub
adc
je
shl
cmp
or
cmp
jp
out
clc
dec
sbb
movsl
jp
adc
lods
fs
insb
shrb
ljmp
rolb
andl
fs
js
pop
mov
cmp
adc
test
add
insl
in
shrl
mov
jl
inc
popa
mov
ret
jmp
aam
dec
mov
xor
idivb
pusha
into
aam
xchg
mov
dec
xchg
adc
scas
adc
jns
cs
stos
jge
decb
push
outsb
mov
inc
lock
add
cltd
outsl
scas
add
imul
jmp
orb
push
mov
into
orb
inc
lcall
sbb
add
cmp
dec
push
shlb
mov
sahf
or
call
mov
cmp
sbb
xchg
test
cld
mull
mov
pop
fisubl
movsb
popf
shrl
call
xchg
mov
mov
push
xchg
xor
sub
xor
mov
mov
insb
cmpsb
add
aad
xor
or
fildll
jl
repnz
outsl
cmp
jmp
sarl
mov
mov
jge
dec
fcoml
cmp
push
cmpsl
adc
mov
mov
stos
out
push
das
int3
adc
sub
mov
loope
out
or
mov
dec
xor
cmp
dec
cmpsb
pushf
sbb
mov
je
ds
shrb
xchg
dec
push
adc
cmp
mov
jmp
push
fimull
and
mov
mov
mov
push
dec
loopne
dec
int
int3
faddp
push
sub
fcmovnbe
shrb
or
pop
add
mov
lock
cwtl
imul
mul
int3
push
iret
subl
sbb
push
push
pop
imul
jae
mov
mov
pop
push
test
mov
adc
xor
sarb
sti
popa
and
lods
inc
cmpl
add
fimuls
subb
aad
out
xor
and
sub
ss
mov
shr
and
aam
mov
lret
adc
mov
lahf
andl
inc
mov
outsl
in
add
cs
shr
pop
testb
and
ret
xchg
xor
out
bound
xor
xor
adc
mov
jne
adcb
or
outsb
pop
cwtl
add
and
lahf
cli
inc
imul
daa
sub
cmp
inc
in
rorb
outsb
inc
sahf
loopne
scas
popa
push
shlb
cmp
test
ret
xchg
mov
xchg
cld
jbe
mov
test
xor
nop
imul
icebp
leave
sbb
stc
xchg
mov
aad
or
repnz
mov
push
add
and
int
sub
loop
mull
push
push
push
imul
mov
loopne
adc
pop
and
out
push
sub
push
addb
incb
ficompl
cmp
aam
mulb
stos
xor
inc
test
pop
push
out
gs
cmpsl
add
xchg
adc
cld
lods
push
lea
jb
pop
mov
cmp
cmc
mov
sub
xchg
bswap
pop
push
sbb
js
in
addb
enter
adc
jle
sbbb
cmpsl
lods
or
adcb
pop
cmp
out
sbb
addb
sub
mov
and
sbb
jg
popf
push
sub
sarb
adc
clc
ss
mov
push
pop
fs
mov
fsub
or
mov
into
push
and
decb
pusha
push
jo
repnz
pop
pop
das
push
loop
inc
addr16
pop
lds
jb
xchg
mov
mov
pop
mov
pop
sbb
or
fdivrs
cli
test
inc
aaa
fwait
jmp
xor
cld
or
sub
xchg
int
mov
fs
mov
cmp
aad
sahf
imul
and
fs
addr16
inc
xor
sub
sub
mov
mov
out
and
mov
sbb
xchg
inc
xor
xor
xchg
push
call
pop
jo
xchg
xchg
sub
mov
push
or
imul
loop
or
push
dec
cmp
mov
or
jns
add
fdivl
test
dec
out
sbb
cmp
fidivs
call
fstps
fincstp
xchg
pop
mov
outsb
scas
or
in
repz
sbb
subb
sub
mov
cmpsb
push
mov
pop
cmpsl
sbbl
fcmovnu
rorb
jbe
sbb
fists
fsubl
addl
sbbl
dec
xlat
mov
cmp
sub
sub
or
jno
dec
divl
jo
adc
in
cli
dec
jg
fcomps
dec
add
mov
mov
dec
scas
and
test
cmp
clc
push
gs
imul
add
inc
xchg
sub
loop
orl
sbb
shrb
test
xchg
jno
xor
out
jg
lock
and
add
cmpl
lods
xor
aaa
es
stc
cwtl
pop
mov
cmp
insb
ret
es
adc
out
mov
sub
push
imul
xchg
dec
xchg
push
mov
mov
add
xchg
push
dec
mov
mov
mov
add
or
cwtl
stc
test
dec
cs
sar
push
pop
test
mov
outsl
into
stos
push
lock
pop
pop
pop
push
and
sbb
loope
test
lret
cs
and
add
insl
xor
inc
pop
lcall
ret
pop
imul
lcall
or
jno
leave
push
ja
mov
xchg
repnz
aam
cmc
adc
cmp
test
popa
push
and
push
inc
push
sbb
test
mov
pop
push
pop
lcall
fnstcw
adc
rorb
pop
inc
push
cmp
iret
enter
sahf
push
add
sbb
adc
push
aas
adc
lret
jne
adc
imul
inc
insl
add
call
add
and
mov
pop
inc
sub
push
mov
test
lcall
push
shll
sbb
pusha
pop
fs
rorl
orb
addr16
sar
add
mov
scas
mov
push
inc
leave
fstps
or
mov
rcrl
sbb
lcall
stos
and
sub
sbb
pop
sub
lret
movsb
and
dec
and
loopne
lods
inc
pop
addb
cmp
mov
insb
lods
add
rorb
inc
shll
mov
in
cmp
mov
sbbb
push
cmp
pusha
cmpsl
imul
sub
xlat
sub
adc
jbe
adc
mov
fstp
xlat
cmp
xor
jmp
push
loopne
int
sub
push
aaa
out
repz
and
xchg
mov
mov
push
mov
xlat
test
xchg
imul
jns
js
repz
test
push
stos
cmp
or
jno
mov
cmpsb
out
mov
cmpsl
out
ss
lret
fiaddl
rclb
push
and
scas
sti
or
stos
lahf
or
test
outsb
cs
push
enter
or
int3
cmp
les
inc
out
mov
sbb
call
dec
sub
andb
es
xchg
sbb
pop
push
nop
push
movsl
push
fs
inc
cmc
sbb
mov
push
push
lret
iret
xchg
je
fsubs
es
add
xor
nop
adc
cmc
mov
mov
cli
or
ret
stos
dec
jns
lret
arpl
decb
inc
sbb
iret
adc
test
aam
loopne
int3
adc
scas
inc
or
test
outsl
cmp
mov
cld
push
mov
test
or
and
sub
add
or
stc
movsb
sub
push
fldenv
daa
dec
pop
ja
mov
fimull
data16
mov
push
cmp
aas
xchg
mov
sub
dec
roll
sbbb
lcall
lret
xchg
stos
inc
inc
lret
pop
cmp
xchg
dec
adc
repz
and
push
xchg
and
imul
cmp
pop
adc
and
jge
mov
cmpsb
lock
mov
and
test
mov
bound
cmpsl
loope
pop
repnz
aaa
icebp
mov
test
add
adc
dec
or
lods
add
shr
sbb
jne
add
mov
jl
addr16
aam
and
fiadds
cld
fimuls
xor
test
popf
rorb
push
ret
inc
popf
or
call
adc
js
inc
mov
adc
aas
leave
xor
je
xchg
inc
xchg
movsl
movsl
imul
mov
shr
pop
sahf
dec
fdivr
pop
iret
push
xchg
add
dec
lds
iret
sub
lock
fsubrl
arpl
mov
out
push
mov
fsub
push
mov
jbe
fwait
out
sbb
pop
sbb
icebp
movb
stos
push
jl
icebp
mov
push
stos
xchg
sbb
push
sti
movsb
sbb
scas
and
lock
cltd
fistpl
add
into
in
sbb
sarb
push
cld
xchg
imul
push
sahf
adc
sar
dec
sbb
push
lods
int3
and
jmp
enter
sbb
rep
or
mov
ror
ja
mov
aam
call
pop
les
xchg
into
gs
jge
out
ja
aad
lods
outsl
add
push
sbb
cwtl
cmp
sti
arpl
sub
fcmove
arpl
xchg
pop
test
imul
lods
andb
test
xchg
scas
push
jmp
and
lret
xor
roll
lahf
test
lds
sar
stos
dec
call
adc
test
xchg
push
sbb
jo
mov
mov
push
adc
mov
in
adc
jbe
adc
mov
inc
arpl
mov
fidivrl
aam
jecxz
jne
ret
enter
mov
cmc
jne
cmc
xor
dec
into
add
popf
xor
imulb
lret
fists
lret
and
mov
ret
push
jecxz
mov
imul
or
insl
xchg
inc
les
imulb
rcll
data16
shrb
mov
cmp
sbb
pop
imul
pop
pop
push
xchg
sbb
addr16
sahf
notb
fcomps
cmp
cld
in
xchg
std
jb
pusha
loop
je
xchg
lea
xor
pop
leave
in
lret
dec
rol
cmp
cmp
xchg
push
imul
sbb
sub
enter
ds
lahf
mov
and
push
les
jo
and
pop
sbb
pushf
xor
insl
and
les
cld
fs
mov
add
ret
mov
sub
sub
mov
and
call
les
push
xchg
or
data16
adc
add
push
test
fsubrl
ds
cmp
dec
adc
ljmp
cmpsb
pop
rcl
ss
or
mov
sarl
and
mov
sahf
and
jnp
sub
ljmp
andb
aas
push
mov
cmp
xchg
push
aas
loop
fists
movsb
out
test
xchg
outsb
mov
or
jmp
loope
ss
loope
adc
xor
xorb
pop
test
and
push
inc
inc
ret
adc
lahf
call
add
outsl
xorb
not
test
sbb
dec
mov
xor
mov
jecxz
inc
ja
jmp
add
sbb
fchs
xor
jl
cmp
movsb
stc
push
mov
cmpsl
imul
pop
jle
sbb
cmpsb
xor
call
in
sbb
jo
inc
les
pop
pop
orb
or
mov
imul
loopne
adc
jne
movsl
loopne
jle
daa
stc
mov
ss
pop
aas
cmpsl
sti
sub
mov
ja
mov
fimull
scas
and
dec
cmp
ret
sbb
rcl
pop
int3
cmpsl
lods
push
test
xchg
and
and
call
fbstp
jno
lock
sbb
inc
and
clc
fistps
or
jmp
jle
jae
add
call
bound
inc
xor
inc
fldt
movsl
mov
fs
add
mov
adc
push
fcmovbe
xchg
sub
xchg
loope
int3
scas
adc
or
and
ja
cmpsb
enter
mov
lret
lock
and
subb
sub
mov
cmc
mov
lret
lods
xchg
mov
idivb
mov
cld
or
xor
or
cmp
lods
mov
dec
pop
mov
daa
adcb
push
push
or
cwtl
cmp
std
xchg
in
loope
outsl
dec
jo
inc
adc
pop
push
lods
push
cmp
mov
out
rcr
lods
dec
push
in
jg
leave
sbb
push
shrl
dec
aas
mov
or
int3
nop
pushf
and
mov
call
and
fsubs
imul
xchg
or
or
pop
xlat
hlt
fidivl
jns
cmpsl
adc
lret
add
in
call
xchg
arpl
ss
sahf
add
scas
jecxz
test
outsl
mov
lret
cmp
loopne
push
add
mov
or
fbstp
scas
or
add
cmpb
mov
and
int
push
pop
inc
xor
jle
inc
jge
mov
out
mov
sti
mov
ret
push
push
adc
jmp
loop
inc
iret
inc
cltd
stc
fsubl
lcall
loopne
hlt
shrb
or
mov
or
iret
in
xlat
fisubs
jb
cmp
cltd
jb
cmp
and
and
call
cwtl
adc
jmp
lods
in
loopne
push
lds
mov
decl
pop
pop
rorb
adc
add
pop
adc
or
push
sarb
insl
add
xor
xchg
loopne
movsl
sub
and
shlb
mov
jno
fisubrl
rcl
je
mov
in
dec
std
xor
xchg
dec
mov
pop
cmpsl
add
or
cmovo
call
pop
int3
mov
cwtl
ds
inc
enter
rcll
inc
into
addr16
or
jns
push
pop
rcrb
loopne
in
mov
call
aam
inc
fildl
mov
fnop
xchg
push
mov
out
popa
push
shrb
mov
mov
loop
ficomps
mov
lods
xchg
or
ss
jo
sbb
pop
cmpsl
push
adc
or
repnz
xchg
jl
dec
jbe
int3
cmp
add
xchg
cld
cmp
or
pop
shrb
loopne
sub
sub
adc
xchg
shlb
imul
cmp
icebp
or
lods
xor
subb
loop
icebp
sti
test
mov
les
adc
mov
orl
inc
pushf
push
lahf
jne
jno
les
lret
xchg
push
adc
fisubs
mull
popf
ss
pop
insb
or
push
xor
sbb
add
out
xchg
out
pop
and
pop
nop
loopne
cmp
jecxz
xchg
int3
xchg
cmp
or
push
lahf
lahf
push
insl
test
aas
xchg
in
mov
xchg
popf
xor
pop
pusha
inc
loopne
es
fmull
jb
mov
sub
sbb
push
aam
enter
cmp
leave
rolb
mov
in
jmp
clc
into
cmp
pop
mov
pop
sbb
mov
jbe
sti
mov
imul
subb
ds
or
les
and
or
cmpsb
dec
mov
cmpsl
dec
shlb
push
pop
pop
movsl
dec
sahf
pop
mov
stc
shll
or
pop
lods
nop
jns
xor
aad
or
jmp
test
xor
xor
xchg
inc
or
and
mul
sbb
push
les
pop
xchg
pop
cmp
mov
add
xchg
stos
inc
jns
xchg
inc
xorb
adc
outsb
push
push
aam
xchg
inc
sub
dec
cli
movsl
jae
mov
jno
cli
fldt
push
imulb
mov
scas
push
and
xorb
dec
mov
mov
jns
test
dec
ror
sub
and
mulb
push
jbe
js
mov
sbb
pop
sbb
vmovhpd
sahf
jbe
jge
cmp
cmp
subb
jg
lret
sub
pusha
fucomip
sar
adc
xchg
xchg
punpckhwd
xor
or
cwtl
loopne
or
mov
push
xchg
push
int
divb
scas
jb
icebp
jp
cmp
add
stos
lret
pop
repz
pop
dec
or
push
cmpsb
adc
mov
repnz
cld
cmp
mov
outsb
mov
cmc
adc
mov
cmp
lods
mov
ss
insb
cmp
jbe
jne
imul
nop
mov
call
sbb
adc
add
jp
cs
mov
add
push
mov
test
negl
sbbl
mov
ficomps
push
insb
sub
jnp
les
lods
das
mov
add
cmp
mov
pavgb
mov
cmp
iret
and
push
jne
scas
cmpsl
adcl
dec
push
push
push
scas
movsl
mov
imul
addr16
jo
js
push
xchg
loopne
xor
enter
inc
cld
test
orb
or
sti
adc
rclb
xchg
add
in
frstor
mov
lods
push
mov
push
movsb
call
sbb
cmp
sub
fnstenv
imul
mov
aam
xchg
jo
pop
orb
xchg
mov
stos
dec
push
mov
in
mov
xchg
and
les
fcmovb
jno
sti
sbb
int
dec
scas
lock
in
inc
add
cmpsl
das
inc
imul
sbb
push
mov
push
scas
or
stos
sarl
or
push
sub
pop
mov
add
imul
dec
adc
xchg
push
mov
mov
jg
sbb
push
fistpll
push
dec
pop
imul
cmpsl
imulb
mov
insb
addb
add
adc
fadds
push
pusha
cmp
mov
xchg
or
sbbl
fnstsw
fs
xor
call
es
adc
into
loop
les
imul
gs
mov
loopne
add
adc
or
sbb
jle
cmp
jno
mov
jne
cwtl
push
outsb
aad
iret
cmpsl
iret
sarb
ret
cmp
mov
adc
scas
mov
inc
mov
mov
mov
dec
shrb
inc
mov
sbb
sahf
addb
sbb
insb
pop
shrl
mov
les
imul
scas
push
pop
cmp
mov
xchg
pop
adc
fs
cli
cmpsl
push
xlat
repnz
sub
xchg
sti
or
inc
jb
loopne
cmp
loope
aam
dec
lea
insl
subl
or
imul
loop
adc
int3
mov
sub
pop
jle
xor
cmc
xchg
and
sbb
or
fwait
mov
adc
push
sbbb
adc
roll
out
or
mov
shll
mov
nop
mov
mov
lret
out
aaa
sub
test
push
adc
adc
jg
cmp
or
or
or
mov
sub
fucomp
push
xchg
jo
flds
ss
clc
dec
xchg
cmp
shlb
add
ljmp
mull
and
aam
fs
js
adc
xor
roll
adc
aam
imul
or
shll
aam
sbb
xchg
dec
int
pop
arpl
mov
mov
pop
sti
xchg
pop
jge
cwtl
movsl
or
scas
movsb
out
mov
xor
xorb
mov
xlat
push
inc
in
mov
sub
dec
xchg
aas
or
push
js
adc
mov
scas
int
inc
fcoml
cmp
enter
imul
gs
and
loopne
orl
jb
into
or
inc
sbb
in
mov
inc
mov
inc
icebp
orb
testl
daa
cmpsl
mov
push
xor
pop
sbb
push
fists
movsb
mull
jle
ja
mov
sbb
add
or
in
cmp
arpl
ds
sub
lds
push
imul
xchg
sub
into
jbe
adc
push
pop
call
push
divl
jecxz
cmp
inc
pop
divb
sbb
sbb
imul
sbb
push
or
ds
movsb
outsb
xchg
xchg
xlat
aam
dec
lds
cmp
js
add
jbe
movsb
mov
test
sarb
shrl
inc
sub
sub
rdmsr
pop
stos
cmp
sub
jne
lret
mov
cwtl
lret
rorb
ds
mov
lods
nop
add
test
mov
ljmp
mov
pop
push
add
in
loop
push
xchg
add
lcall
pop
ljmp
fistps
cmp
sub
jecxz
imul
dec
icebp
sub
imul
mov
std
jl
sub
shlb
test
pop
xchg
add
sub
mov
into
pop
inc
rcll
xchg
and
adc
adc
push
hlt
and
ss
dec
mov
add
mov
mov
out
movsb
jne
inc
les
sti
pop
sarb
sub
xchg
or
frstor
sbb
mov
repz
and
ficoms
insb
pop
dec
mov
adc
dec
mov
aas
cwtl
into
mov
mov
push
pop
mov
nop
inc
loopne
je
jmp
pop
mov
mov
in
call
enter
js
adc
dec
push
fcomps
call
iret
fadds
cwtl
loope
out
mov
js
cmp
or
sub
xor
dec
je
movsb
pop
sub
fldl
sbb
test
mov
leave
movsl
inc
nop
mov
mov
jae
sbb
push
jbe
mov
lcall
call
and
sbb
dec
pop
aam
sbb
imul
mov
mov
jb
push
dec
sbb
push
mov
adc
data16
js
rcrb
jg
mov
push
cmc
es
aam
inc
dec
inc
dec
rcrl
nop
jmp
push
xchg
dec
push
xor
outsb
pop
sbb
and
mov
sbb
adc
pop
fcomps
andl
xchg
sub
sahf
xor
movsb
dec
xchg
dec
adc
cwtl
lods
fistps
test
shrb
pop
iret
sub
and
mov
or
ror
out
mov
outsl
movsl
mov
adc
insb
aaa
fisttps
jns
rorb
int3
lods
add
mov
mov
adc
ret
sbb
or
addb
inc
mov
cmp
inc
imul
imul
mov
repnz
push
test
push
fisttps
in
sbb
push
or
in
cmpsl
in
mov
pop
xchg
cmp
inc
dec
jecxz
adcl
mov
pop
and
dec
pop
fisubl
out
push
jns
or
mov
filds
sahf
adc
dec
sbb
sub
dec
push
xchg
gs
fdivrl
sub
pop
push
and
adcb
xchg
push
jne
nop
mov
adc
imul
test
loop
faddl
or
lea
lret
adc
fnstsw
mov
xchg
add
lods
sub
adc
cmp
aad
lret
outsl
push
pop
jae
or
mov
mov
push
fldl
cmp
jns
xor
push
stos
add
push
ror
cmpsb
stos
lcall
cmc
movsl
jecxz
cld
adc
push
adc
jns
push
aad
fwait
inc
shrb
ljmp
outsl
mov
pop
scas
loope
daa
add
inc
iret
scas
push
outsb
mov
aaa
push
mov
lahf
stos
and
aaa
push
inc
push
adc
nop
and
ljmp
nop
cmp
inc
cmp
insl
imul
add
fidivrl
fsubrp
popa
xor
ds
sbbb
cmp
jae
andb
orl
cmpsl
pop
push
or
xor
xchg
popa
fwait
jl
les
push
into
xor
mov
mov
push
cld
pushf
inc
mov
and
jmp
imul
inc
sub
ficompl
adc
iret
xor
sbb
in
test
cmp
adc
out
xor
aam
out
and
mov
ljmp
repz
jmp
adc
cmp
test
push
pop
pop
enter
scas
sub
les
sub
push
mov
loopne
in
and
gs
push
xchg
adc
aad
jmp
mov
ret
test
inc
jno
jb
popf
test
jg
loope
or
lret
mov
inc
enter
pop
stc
sti
push
movsb
jns
imul
xor
add
pusha
lret
test
jmp
push
stc
pop
xchg
mov
leave
fldenv
fneni(8087
jae
lret
or
push
lret
and
mov
in
lret
jl
sbb
xor
cmpsl
loopne
push
and
and
into
xlat
daa
jg
jp
add
mov
imul
scas
scas
and
push
sbbl
ret
push
pop
xchg
imul
jle
lods
push
xor
dec
enter
mov
and
rcrb
push
inc
cmc
dec
lods
shlb
mov
mov
inc
ret
cwtl
xor
filds
mov
xchg
push
cs
mov
mov
jle
cld
in
in
es
cmpsl
data16
and
push
sahf
leave
and
jnp
enter
jns
lock
cmp
imul
push
lods
xor
push
cmp
fldcw
stc
adc
rcr
adc
ret
mov
push
xor
loop
xchg
test
ret
jle
add
inc
movsl
rclb
push
cmp
loopne
call
mov
in
mov
adcb
mov
mov
xor
jecxz
shrb
lea
lret
in
ss
or
xor
inc
mov
loop
fcom
pop
loope
testl
mov
or
dec
add
push
push
ret
cld
addl
and
xor
cli
fcompl
cmpsl
aas
pop
in
mov
bsf
lret
call
dec
loopne
mov
adc
xchg
lock
sbb
test
xchg
std
sbb
or
push
sub
jns
or
ljmp
push
fiadds
cmp
out
xor
adc
xchg
push
mov
lahf
mov
leave
pusha
leave
pop
loopne
cmp
bound
pop
push
xchg
inc
dec
pop
push
inc
cld
imul
mov
leave
add
mov
inc
mov
decb
testb
inc
cmpsl
sbb
inc
dec
or
push
and
test
sbb
xor
lret
jb
dec
sbb
icebp
fnstsw
cmp
loopne
mov
sbb
aaa
loope
outsl
ss
movsl
loop
sarb
and
ret
movsl
fdivrl
dec
aam
aad
mov
imul
movsl
push
cmp
int
mov
fildll
jg
ss
adc
mov
push
ret
daa
or
mov
fidivrl
cmp
cmc
cmp
ficomps
lock
dec
aaa
add
out
out
sub
jmp
cli
ljmp
mov
lods
ret
pop
mov
enter
shlb
movsl
fcomps
rcll
xorb
mov
adc
pop
int3
jae
mov
xchg
push
daa
sbb
cmc
inc
imul
leave
movsb
xchg
adc
sub
push
add
clc
lds
add
repnz
inc
mov
mov
cmp
inc
xchg
push
cmp
inc
sahf
mov
xchg
inc
lret
sti
sbb
xchg
and
int
inc
add
dec
enter
sbb
xor
sbb
call
xlat
mov
call
xchg
or
adc
stos
dec
test
pop
pushf
jg
roll
cmp
mov
leave
add
and
mov
fdivrs
xchg
sub
lret
imul
cmp
push
shrb
addl
and
loop
fstl
stos
in
xchg
adc
push
add
test
jmp
mov
inc
mov
rcr
xor
push
shrb
cli
push
loopne
mov
pop
and
mov
mov
bound
sub
or
adc
in
iret
decl
ror
fcmove
jecxz
sbb
push
rol
stos
inc
mov
pop
bound
or
les
push
fisubl
or
ds
stos
mov
out
pusha
mov
sbb
lret
test
fistps
jl
repz
shrl
pop
cwtl
sub
adc
push
mov
mov
cmp
into
nop
lret
mov
push
inc
mov
pop
sub
dec
jl
push
xchg
sub
into
data16
sub
push
push
jmp
lret
loope
push
daa
popa
enter
mov
and
out
in
int
jge
lds
xor
dec
add
in
out
mov
es
int
and
cmpsl
rolb
xchg
xchg
pushf
sub
jno
or
lret
popa
cmp
adcb
sbb
ret
iret
lods
cmp
mov
mov
mov
shlb
or
cli
out
fisubrl
xor
pop
ficompl
and
inc
sbb
sti
pop
pushf
add
cmp
adc
jl
mov
jp
sbb
or
push
fsubrs
dec
jle
inc
pop
shrb
jbe
fdivs
lea
push
bt
push
subb
add
push
stos
test
shrb
test
xchg
aam
in
mov
rcrb
mov
sbb
stc
sbb
out
out
sahf
inc
and
cmp
cmp
loope
mov
dec
adc
cmpsl
clc
xchg
stos
mov
push
shlb
cmp
pusha
push
cmp
push
mov
inc
mov
pop
popa
xchg
leave
outsl
iret
xchg
cmp
push
cmpsl
mov
loop
mov
jnp
jmp
jp
adc
fisubrs
repnz
xchg
push
pop
xor
mov
leave
fcompl
add
add
push
test
iret
dec
movsl
test
jmp
sbb
dec
lret
sub
sub
scas
hlt
shll
fsubs
in
cs
jle
push
pop
and
add
push
in
jg
imul
int
cmpsb
popa
scas
xor
cli
sahf
add
cmp
inc
xor
mov
dec
mov
mov
adc
iret
rcrl
push
xchg
shlb
test
insl
cmpsb
dec
pop
fildll
push
push
adcl
pop
jmp
dec
mov
xlat
jle
mov
mov
jno
adc
cld
cmpsl
dec
shufps
mov
loop
pop
jo
or
mov
test
xchg
cmp
cmpsl
add
mov
mov
faddl
cmp
lds
push
ret
pop
mov
std
adc
ss
push
lret
popaw
jne
test
or
sbb
push
rolb
xchg
out
add
enter
or
outsl
aam
push
push
inc
in
mov
fisttpll
adc
in
test
sub
or
inc
sub
out
push
and
loopne
cmpsb
loopne
jns
sbb
inc
cmpsl
lods
mov
jbe
insb
mov
mov
jnp
addr16
test
lods
imul
shr
and
cmpsl
inc
push
pop
test
push
movsl
fs
leave
push
pop
icebp
aad
loopne
call
or
xchg
cmpsl
adc
js
push
cmpsl
inc
mov
dec
ss
pop
pop
push
pop
fcmovbe
leave
push
js
add
pusha
ret
nop
sbb
int3
mov
ficoml
sub
cmpsb
cmpxchg
stos
cmp
mov
stos
sbb
gs
pop
imul
inc
mov
inc
pop
sbb
jo
sbb
loopne
insb
push
pop
or
adc
fisubrs
stos
js
test
adc
mov
adc
aas
iret
xchg
mov
or
add
inc
repnz
adc
jl
std
and
mov
mov
jnp
imul
mov
dec
movsb
xchg
xchg
and
adc
cmpl
imul
push
add
xchg
filds
adcb
push
sub
or
pop
push
pushf
mov
mov
adc
sub
xlat
jnp
sub
xlat
ffree
repz
adc
inc
jno
push
cli
imul
lcall
call
cmp
test
mov
pop
cmp
mov
xchg
stos
int
jl
push
outsb
movsl
mov
add
inc
nop
sbb
int
das
sahf
mov
imul
ret
and
inc
fs
add
call
or
dec
fdiv
aam
xor
rorl
jg
jl
cmc
cmpsb
mov
cs
and
leave
sbb
scas
or
pop
xor
fadds
add
test
sbb
add
ret
add
mov
add
clc
mov
mov
std
mov
insb
and
sbb
mov
inc
mov
or
jne
lret
dec
push
gs
inc
inc
cmp
dec
aaa
imul
iret
sbb
mov
pop
mov
adc
xor
nop
repz
mov
cwtl
xchg
or
jmp
push
jbe
daa
test
jle
mulb
cmp
xor
into
adc
jle
les
lahf
fwait
cmpl
add
loopne
mov
loopne
ljmp
movsl
fcoms
add
cmp
lods
jg
pop
lods
lds
les
sub
pushf
xchg
test
orb
pop
add
cmp
push
adc
push
mov
lods
cmpsb
subb
adc
jmp
pop
inc
mov
pushf
movsl
std
sbb
aas
call
shrl
mov
movsl
loop
insb
in
cltd
iret
xor
sub
xor
scas
jne
mov
xor
repnz
sbb
sbb
push
mov
mov
loop
fimuls
adc
sbb
xor
imul
out
dec
test
nop
call
xchg
outsl
loopne
mov
or
adc
mov
mov
mov
pop
insb
cli
mov
mov
out
imul
aaa
addl
adc
dec
cmp
stc
outsb
add
dec
cmp
mov
cmp
lods
adc
das
mov
xchg
xor
adc
scas
loopne
and
dec
insl
js
sbb
sub
pop
nop
lea
pop
sub
cmp
cmp
out
pop
sbb
add
mov
aam
fildll
push
fsubrs
in
mov
stc
pop
imul
cmpl
sub
sbb
call
dec
dec
popa
mov
or
and
imul
ja
lret
sbb
aad
xchg
ljmp
fwait
rorb
xchg
add
adc
loopne
aas
aaa
std
movsl
adc
fs
push
outsb
and
inc
nop
sub
rorb
mov
push
jmp
icebp
push
sbb
nop
push
call
sbb
sbb
mov
repnz
dec
push
jp
add
jbe
shrb
shl
leave
cmc
fs
divl
cli
leave
cmp
lret
dec
cwtl
imul
aad
mov
dec
mov
call
lock
jae
iret
sbb
lods
jne
call
push
push
ljmp
sbb
pop
in
imul
inc
test
stos
les
or
cmpsl
pop
lods
clc
cmp
push
aad
imul
inc
or
and
xchg
pushf
push
cmp
arpl
push
inc
sbb
xchg
lods
pop
iret
js
add
push
loopne
jecxz
es
enter
lods
rcrb
jo
into
push
fsubrp
dec
lea
adc
or
xor
das
adc
popa
mov
dec
adc
sub
stos
jae
insl
add
xlat
clc
pop
inc
push
mov
xchg
or
aam
notb
fdivr
repz
mov
into
mov
mov
sub
xor
arpl
cmp
mov
std
jne
xor
test
inc
inc
aaa
aas
or
and
pop
mov
enter
jle
shrl
pop
mov
cmp
pop
cmpsl
mov
les
out
push
xchg
shll
cmp
xchg
mov
inc
hlt
sbb
lcall
inc
adcl
mov
jns
cli
mov
in
add
jns
test
cmp
test
sub
es
jns
imul
adc
add
js
btsl
fisubrs
shlb
mov
fstl
xlat
ljmp
pop
mov
in
and
jecxz
add
lods
xchg
faddl
inc
xor
rcrl
nop
push
adc
adc
mov
notb
adc
inc
in
cltd
jbe
cmp
push
xor
mov
sbb
or
adcb
lods
mov
inc
int3
xchg
shl
mov
xlat
insl
repz
adc
add
loop
or
push
imul
add
dec
jle
adc
push
dec
aad
sub
and
scas
inc
dec
cmp
in
xor
inc
sbb
cmp
rcll
cmpsl
mov
sub
loopne
xor
sub
cltd
fbld
fistl
out
idivb
jl
into
lods
inc
or
sub
aam
jns
loopne
cmc
push
xor
das
push
notl
mov
xor
aad
push
lret
roll
jns
aas
mov
dec
mov
sub
leave
pop
xchg
mov
sbb
imul
loop
pop
call
add
insl
push
mov
loop
pop
call
pop
lock
xchg
or
stos
mov
dec
int3
shll
xchg
scas
dec
cmpsb
xor
xchg
in
stos
sub
add
call
icebp
ss
pop
andb
notl
aam
testl
mov
add
and
push
into
popa
or
test
divb
xor
call
sbb
sti
mov
aas
cmp
movsl
adc
jg
and
mov
rolb
jmp
sub
fdivl
rolb
cwtl
push
adc
rorb
lods
or
imul
das
in
jle
cmpsb
sarb
aaa
adc
lock
fs
jno
adc
dec
fnsave
leave
jne
outsb
cld
add
xor
out
test
and
pop
adc
dec
out
ja
fcmove
cmpsb
aad
cwtl
gs
xlat
cmpsl
cmp
lcall
int
push
and
int3
imul
scas
push
rol
loope
ja
xchg
xor
hlt
xchg
jmp
jo
xor
imul
lods
push
cld
mov
jb
clc
pop
test
into
lcall
cld
call
sbb
sahf
push
rorl
mov
aas
mov
sbb
and
clc
xchg
test
add
add
popf
cmp
ljmp
enter
and
mov
shl
call
testb
loope
je
adc
insl
mov
mov
ja
cmp
push
xchg
insb
repnz
aas
dec
dec
dec
mov
cld
mov
in
jge
or
or
shrb
ss
add
adc
int
or
jecxz
cmpsl
aad
sub
cmp
xor
pushf
mov
call
and
je
adc
fidivs
out
or
aam
or
in
sub
in
insb
idivb
test
dec
idiv
lods
jb
lods
out
lds
xchg
mov
dec
cmpsl
xor
inc
nop
inc
int3
jge
enter
pushl
lods
test
sbb
in
xchg
add
xchg
cs
inc
movsb
fmull
sub
jle
out
cmpsb
adc
lods
dec
call
jge
mov
jecxz
mov
cmc
in
mov
push
test
popl
adc
mov
fisubl
xor
sbb
psubsb
mov
xchg
lds
test
aam
mov
fldl
xor
jns
add
notl
mov
pop
jle
mov
adc
adc
pop
jp
fmuls
loopne
ret
ljmp
mov
push
cmpsb
cmp
mov
xchg
popf
adc
xchg
test
add
push
jnp
filds
push
lret
push
mov
in
cwtl
enter
aaa
jns
jmp
aad
sahf
jmp
jb
in
imulb
mov
add
or
rcrb
jno
test
imul
ds
lret
ss
or
into
dec
xchg
cmp
push
add
sbb
push
xor
gs
mov
sbb
pusha
push
call
popf
cli
mov
push
cmp
stc
ret
sbb
push
test
rol
adc
cltd
adc
test
sbb
jmp
cli
push
scas
ret
pop
ss
xchg
lahf
pop
pop
add
adc
iret
lret
out
int3
adc
bound
and
sarb
adc
pop
fs
mov
lods
leave
lock
mov
mov
clc
fcomps
jecxz
dec
pop
mov
jmp
pushf
cli
movsl
out
aam
lods
imul
ss
iret
pop
ljmp
push
jbe
and
pop
fldt
in
sub
sub
cmp
mov
enter
iret
push
and
aas
cld
pinsrw
pop
dec
xchg
cmpsb
cmp
mov
sub
mov
lret
cmp
mov
push
xor
rcl
or
mov
in
lods
cmp
add
and
pop
nop
xchg
stc
mov
int3
aas
stos
fisttps
push
loopne
rcrl
sub
mov
fnstsw
push
pop
outsb
les
ljmp
ret
sar
aas
outsb
test
mov
add
in
jno
push
fnstcw
lds
idivb
lods
inc
xor
xor
jb
lahf
fcomps
imul
ja
fidivrs
or
je
xor
xchg
test
sub
mov
jno
dec
enter
push
mov
test
int
mov
ss
mov
inc
add
outsl
shll
add
enter
adc
fidivrs
rcrl
mov
adc
push
ss
jle
sbb
sub
enter
xchg
push
adc
mov
rorb
lods
or
lret
loope
adc
test
push
pop
daa
dec
xor
fimuls
xor
xchg
dec
pusha
sub
jp
rclb
or
fsubrs
dec
fistpl
loopne
cmp
das
jno
mov
js
xchg
xchg
cld
lds
rorb
pop
pop
or
mov
movsl
shlb
hlt
sbb
mov
stos
sbb
sbb
mov
scas
iret
cmp
lods
les
cmp
mov
enter
stos
sbb
mov
and
cli
or
cmp
and
adc
cmp
in
orl
mov
pushf
popa
out
mov
mov
nop
es
push
and
and
sub
push
fwait
or
sarl
cltd
out
jmp
xchg
xchg
imul
ja
dec
in
cmp
inc
cmpsl
aad
test
daa
or
mov
call
pop
les
imul
dec
aas
lret
repz
mov
xchg
out
shl
push
xchg
xchg
aaa
mov
gs
scas
mov
aad
mov
dec
pop
scas
add
mov
jnp
jmp
mov
sbb
mov
push
lahf
rol
idivl
mov
roll
xchg
push
or
mov
ds
fistpll
sub
or
rcrl
popf
stos
lcall
and
xor
std
frstor
xchg
imul
ds
cmp
orb
inc
cld
inc
out
adc
roll
data16
jb
mov
inc
push
aad
fists
cld
mov
dec
adc
loop
pop
push
mov
jne
mov
les
out
adc
push
imull
sbb
in
out
pop
cli
push
adc
imul
test
pop
in
lods
sub
imul
sub
mov
ffreep
test
fs
mov
push
mov
mov
or
mov
jbe
xchg
or
les
stos
xchg
pusha
mov
xchg
inc
inc
adc
add
leave
xor
xorl
mov
and
pusha
cmp
movsb
or
and
or
and
mov
push
adc
aas
int
stos
mov
push
cmpsl
mov
push
fidivs
fs
pop
and
xlat
test
scas
jmp
or
call
aaa
iret
test
add
jbe
push
out
dec
mov
xor
xchg
adc
test
mov
fcmovnbe
xor
adc
mov
mov
jns
dec
push
int
lahf
nop
xchg
movsb
aam
mov
xchg
popa
dec
in
jg
inc
ret
in
fstps
mov
fimuls
add
cwtl
outsb
dec
inc
cmp
movsb
insl
sbb
or
mov
adc
ja
pop
mov
repz
xor
ror
add
daa
cmpsl
push
enter
push
and
or
aam
inc
call
mov
xchg
scas
in
fsubs
cwtl
add
push
inc
movsl
fdivp
shlb
mov
sub
rorb
pop
test
fists
shrl
push
push
pop
or
push
jns
or
mov
xor
ljmp
mov
pop
mov
in
dec
mov
js
frstor
call
sahf
repnz
and
pop
mov
mov
leave
insb
mov
adc
push
test
leave
push
cmp
push
add
sarl
into
adc
adc
mov
mov
sbbl
and
insl
or
pop
mov
or
adc
popf
dec
test
or
sbb
in
imull
adc
jno
cmpsl
xchg
pop
icebp
mov
jge
xchg
mov
mov
icebp
ljmp
aad
jbe
inc
aam
imul
cs
mov
je
out
push
and
imul
jmp
repnz
xor
repnz
mov
call
imul
xlat
mov
push
sub
sbb
pop
dec
dec
push
pop
arpl
fisubl
test
fnsave
adc
mov
test
pop
mov
push
sub
pop
popa
cmp
rolb
movsl
shlb
ret
lock
jl
cltd
shll
pop
mov
push
push
pop
les
movsl
or
mov
pop
jmp
ja
push
xor
fiaddl
cmp
sub
sbb
lret
mov
mov
add
jae
adc
ds
movsl
xlat
cwtl
dec
or
gs
pop
je
sub
pop
rorl
sbb
nop
push
mov
xchg
mov
add
orb
popa
scas
mov
fcoml
mov
mov
js
push
aas
ds
and
ljmp
jbe
mov
add
add
cmp
cmpsl
xchg
lea
ss
jecxz
xchg
into
dec
adc
shll
or
cld
outsl
out
xchg
lcall
loope
lret
stc
pop
push
push
xor
or
in
nop
ljmp
mov
or
push
fwait
or
ds
les
test
iret
inc
and
jo
test
loop
imul
flds
iret
xlat
cltd
mov
mov
test
jmp
sarb
push
adc
cmp
pop
cmp
add
pop
es
addb
sub
push
dec
sub
cmpsl
loopne
adc
out
scas
leave
insb
flds
fcmovnbe
fldenv
and
xchg
leave
sbb
mov
test
inc
pusha
inc
xor
loop
or
or
mov
and
adc
sub
xor
fdivrs
mov
sarb
jge
fbld
or
push
xlat
sub
adc
cmp
cmp
rcr
scas
dec
push
or
lods
and
call
ret
leave
lret
or
not
out
js
dec
cmpsl
mov
cmp
mov
mov
test
push
popf
jo
aas
insb
pop
loopne
and
xchg
xchg
movb
mov
push
add
and
xchg
cwtl
lea
imul
imul
lods
mov
movsl
loope
test
or
inc
test
mov
call
shrl
add
rol
test
int3
push
pop
shlb
dec
inc
les
sub
clc
xchg
fisubrs
dec
shrb
call
shrb
xor
xchg
xchg
stos
inc
sub
shl
mov
xchg
mov
adc
sti
push
mov
add
sub
stc
outsb
and
mov
push
sub
decl
add
repnz
int
mov
in
xchg
loopne
in
lcall
or
xchg
imul
jnp
in
bound
mov
xorl
icebp
in
les
mov
mov
sbb
test
int3
cmc
mov
xchg
fnstenv
out
enter
sub
ja
mov
push
mov
pop
or
out
jb
lahf
call
shll
xchg
sub
lods
mov
cmp
div
and
xchg
sub
fsubrl
push
test
pop
les
inc
inc
imul
mov
adc
shlb
mov
cmp
xor
out
bound
into
xor
shlb
fwait
movsl
xchg
movsl
into
lcall
lcall
movsb
cli
xchg
xlat
sbb
rcrl
inc
ucomiss
cmp
les
and
or
or
inc
in
adc
mov
enter
mov
aam
push
cmp
sbb
test
loop
adc
jbe
popa
add
ljmp
andb
enter
sbb
lods
ret
rorb
jo
data16
mov
call
je
push
add
lods
insb
jle
rcrl
stos
jbe
adc
mov
jb
push
xor
ss
or
popa
xchg
inc
xchg
lods
iret
sub
dec
pop
cmp
test
and
sub
add
pop
mov
adc
sti
add
pop
shlb
fldenv
xchg
xor
xchg
pop
inc
jns
mov
adc
push
inc
imul
test
push
or
or
ret
inc
dec
lcall
dec
inc
or
pop
xchg
push
cmp
mov
je
push
mov
or
jp
ja
cmp
jae
imul
jp
push
adc
push
xchg
inc
inc
mov
fldpi
xchg
jb
aam
mov
cmc
cmp
ss
movsl
fld1
cmp
out
nop
xchg
dec
cmp
popf
pop
loopne
adc
inc
push
sub
lcall
pusha
iret
jae
add
enter
lock
pushf
mov
fisubrl
adc
sahf
xorl
sbb
nop
mov
pusha
cltd
imul
adc
sub
mov
push
jge
inc
neg
shll
jl
dec
movsl
lds
xor
cmp
std
rcrl
shll
int
std
cwtl
mov
mov
add
xor
in
filds
out
pop
in
stos
xor
fs
addr16
pushf
das
mov
and
pop
cmp
sbb
cmp
out
mov
lcall
dec
incl
hlt
cmp
cwtl
nop
add
iret
sub
push
imul
incl
iret
sbb
out
in
aam
jp
mov
pusha
out
lea
aad
cli
jl
cmp
mov
sub
cmc
xchg
outsb
sarl
out
movsl
xlat
test
mov
mov
test
fdivs
pushl
scas
sbb
pop
lea
sub
xchg
rorb
test
jmp
cmp
lods
hlt
sbb
ficoml
push
pushl
ds
int3
outsl
notl
sbb
int3
pop
jg
and
stos
jmp
sti
xor
jbe
inc
test
adc
ret
iret
repz
sti
xchg
inc
and
push
leave
psubq
clc
add
mov
push
clc
shlb
push
scas
in
or
inc
add
ffreep
or
popf
adc
inc
dec
xchg
loopne
out
adc
jo
or
jo
nop
xlat
push
dec
call
popf
push
xchg
inc
jnp
dec
test
xor
pop
sbb
pusha
push
mov
adc
jecxz
movsb
ja
stos
rcrl
enter
mov
mov
lds
mov
mov
shr
inc
fimull
les
mov
popa
push
push
push
cmp
xchg
jae
repnz
shrb
push
bound
test
fdivl
dec
xchg
xchg
imul
or
ds
pop
add
xlat
or
outsl
aas
rcr
imul
arpl
int3
outsl
inc
mov
pop
cmpsl
or
into
or
scas
imul
shr
test
das
pop
mov
dec
addr16
cmp
gs
push
pop
push
gs
pop
ljmp
dec
mov
fs
mov
xchg
push
decb
hlt
mov
lcall
mov
push
aad
jecxz
popa
jp
movsb
adc
lahf
lcall
add
aad
int3
sbb
and
ret
xchg
int3
imul
mov
sub
int
mov
ja
sbbl
mov
test
into
cmp
shr
arpl
mov
std
lods
out
movsl
movsl
pop
xor
add
add
mov
clc
or
jne
lret
and
inc
cmp
xchg
xchg
pop
mov
sub
sub
or
stos
fsts
mov
or
xor
test
inc
or
jns
mov
lods
xchg
sahf
inc
into
imul
aad
mov
pushf
sub
dec
outsb
cmp
xchg
jp,pt
jle
adc
and
les
xchg
sarl
popl
pop
lods
xor
push
clc
aad
into
scas
add
mov
in
sub
inc
lods
lret
imull
mov
stos
jbe
ret
jg
push
add
repnz
push
pop
xchg
pop
or
mov
test
mov
bswap
pop
imul
sbb
das
mov
mov
gs
mov
pop
push
cli
push
cmpsl
cli
xor
mov
bnd
or
jo
aas
roll
imul
xor
iret
aas
inc
das
ss
adc
bound
mov
jb
add
mov
add
scas
fcoml
inc
imul
xor
aad
js
dec
push
imul
jge
xchg
jbe
sub
fsubrs
shll
dec
test
popf
xor
ss
mov
test
lahf
xor
push
test
stc
rolb
or
mov
loopne
and
rcll
jnp
sub
in
xlat
aas
xchg
add
push
and
cwtl
cmpsb
js
ret
dec
mov
xor
imul
add
adc
das
jmp
lret
or
iret
pusha
hlt
push
add
pop
ret
adc
mov
loop
xchg
cwtl
xchg
ret
xchg
int
and
cmpsb
add
sub
scas
and
js
ret
and
xchg
mov
jo
cs
pop
lds
cwtl
out
aam
insl
mov
and
pop
aas
scas
lds
popa
shrb
lock
and
mov
cmpsb
mov
sub
jns
mov
jbe
mov
outsb
pop
adc
push
aaa
fldcw
cwtl
jno
xchg
push
fwait
ret
jnp
inc
cmp
fcmovne
jmp
arpl
loopne
push
cmp
push
enter
xor
sbb
cmp
ljmp
push
stos
push
loop
mov
cmp
inc
lods
push
je
mov
fstpt
cmp
push
lea
shrb
sub
cmp
push
push
daa
push
lock
sahf
fldenv
lahf
imul
push
shrl
cmpsl
stos
les
loop
int
fistpl
pop
scas
pop
add
inc
cltd
cmp
fistpl
sbb
mov
inc
scas
pushf
sbb
daa
push
lahf
jbe
mov
dec
aad
pop
lret
pushf
inc
mov
and
ret
cmp
sbb
rol
sbb
pushl
ds
push
jo
mov
xchg
xchg
pop
sub
push
jp
sahf
xchg
dec
xor
inc
mov
adc
sahf
mov
lock
in
cli
push
movsl
push
sbb
cs
rcll
sub
cmc
addb
shlb
mov
or
jns
mov
dec
test
and
clc
pop
mov
xchg
sbbb
mov
outsb
and
mov
mov
stos
test
mov
cmp
stos
cli
lret
or
lods
pop
sarl
adc
aaa
xlat
imul
dec
daa
xchg
shrb
inc
sarl
or
push
adcb
mov
jb
mov
jo
ss
mov
mov
shr
pop
lret
inc
imul
cli
ret
or
fdivrs
das
inc
or
lods
stos
movb
push
dec
adc
stc
das
fscale
das
fcomp
and
add
jp
mov
loopne
fnstcw
lods
push
jb
sahf
jo
into
daa
icebp
and
sub
push
sbb
mov
mov
mov
add
inc
pusha
inc
mov
inc
popl
mov
call
lods
clc
mov
into
inc
es
adcb
pop
call
and
push
add
in
and
movsl
aas
fisttps
ret
mov
mov
lods
and
fiadds
dec
mov
or
inc
pushf
sub
mov
sub
cmpl
pop
cld
push
mov
cmpsl
lods
rcrb
outsl
lahf
add
sbb
ffree
mov
lock
rcll
cmp
movsl
jmp
pop
mov
and
xor
imul
data16
icebp
pop
fnstcw
mov
cwtl
lds
fidivrs
stc
lods
pop
rolb
repnz
sbb
inc
mov
mov
cli
pushl
cmp
xchg
fdivrl
in
cmp
or
mov
scas
mov
push
push
pop
push
int3
or
test
out
sub
test
xchg
cmp
scas
push
xor
nop
push
call
aad
jmp
aaa
imull
dec
fistl
pop
mov
pop
mull
xor
mov
into
mov
dec
cmp
cli
add
mov
int3
xor
hlt
sbb
inc
xchg
adc
mov
les
nop
dec
shll
fists
cmp
call
aaa
subl
out
push
out
je
scas
negb
jp
mov
out
ljmp
dec
sub
test
sbb
lcall
incl
js
inc
iret
stos
sub
cmp
pop
inc
push
or
test
sar
sub
xor
xchg
rcrb
lds
arpl
push
and
xor
gs
cmp
lods
pop
pop
push
in
shrb
outsl
mov
mov
fs
rcr
sub
add
push
xchg
adc
push
mov
dec
pop
out
test
or
mov
inc
cld
pop
cmp
adc
add
sbbb
adc
faddl
cmp
and
addr16
mov
lcall
aam
pop
jnp
popa
popf
adc
push
das
jns
mov
jp
push
xchg
add
mov
xor
ds
stos
push
outsl
xlat
xor
dec
or
pusha
fimull
sub
cltd
icebp
sbb
fimull
add
lret
jns
sbb
js
adc
pop
insb
mov
nop
stos
shl
push
xchg
mov
aaa
sbb
loopne
fiaddl
adc
lds
mov
dec
in
imul
data16
lods
or
pop
sbb
rcrb
push
cmp
cld
mov
push
xor
aad
orb
or
lret
mov
movsl
adc
push
jnp
shrb
xchg
lcall
ja
mov
xchg
iret
mov
iret
inc
ret
out
pushf
mov
mov
or
mov
xchg
dec
add
imul
xchg
cltd
scas
add
decb
and
jmp
fs
mov
jbe
das
fs
call
mov
cltd
and
fnstsw
push
or
push
pop
mov
push
fisubrl
and
stos
inc
lret
jnp
xchg
jbe
or
adc
popf
aad
sbbl
jne
push
pop
test
adc
mov
repz
pop
mov
in
sub
bound
or
pop
rolb
sbb
or
sbb
adc
mov
adc
cwtl
call
adc
add
ds
sub
add
fiadds
into
add
loope
ret
out
sub
xchg
daa
push
sbb
inc
push
pop
lds
adc
daa
fiadds
jmp
cmp
icebp
call
lret
dec
dec
or
jns
xchg
jb
sbb
mov
cmp
adc
add
push
test
into
rclb
inc
loopne
push
call
rolb
inc
ss
push
jno
push
lea
lcall
adc
push
testb
aam
or
xorl
push
inc
fisttps
xor
lcall
insb
and
xchg
mov
mov
inc
das
inc
int3
xchg
dec
cmp
into
fldl
mov
adc
xchg
adc
ja
push
mov
adcb
or
dec
sti
and
lods
popf
pop
int
aad
sarl
cwtl
jp
pop
mov
call
xor
jno
scas
xchg
push
subl
mov
lods
mov
push
scas
adc
int
daa
movsl
pop
sub
cmc
movsb
clc
imul
cmp
scas
push
inc
cmp
std
movsl
mov
mov
jle
jecxz
inc
xchg
xchg
inc
pop
icebp
adc
jmp
lods
jbe
call
negl
fcmovbe
sbb
xchg
fstl
jl
or
pop
aad
shll
aas
push
lret
fcoml
pushf
mov
or
sbb
sub
lret
push
xor
scas
mov
sarl
mov
cmpsl
xor
cmp
sbb
or
push
jmp
out
cmp
repz
loope
jbe
ret
ret
sbb
inc
sbb
mov
jne
insl
pushf
rclb
mov
jge
and
xor
mov
loopne
mov
das
aaa
sub
add
sbb
scas
adc
ja
mov
jbe
push
pop
fcomps
in
aam
push
push
pop
cmp
shl
int3
sarl
lods
sti
ret
mov
sbb
xor
out
and
dec
dec
jge
push
sub
iret
pop
popa
stc
xor
xchg
orl
scas
mov
movsb
cmpsl
cwtl
ds
xchg
cld
and
test
je
test
loopne,pt
call
aam
inc
mov
xor
popl
add
sti
sbbb
or
pop
mov
cli
fbstp
xchg
sbb
pop
add
pop
inc
loopne
aas
adc
fsubrp
mov
jae
pop
mov
xor
sahf
push
or
popa
test
fsts
push
loop
fwait
repnz
ja
xchg
popa
inc
push
pop
mov
mov
test
cmp
push
imul
ss
mov
push
movl
fmuls
insl
mov
and
xor
push
fsubrs
xchg
pop
lock
mov
movsl
adc
jge
xor
cmp
int3
loopne
test
push
popa
mov
inc
testl
mov
xchg
data16
dec
imul
xor
adc
rorb
into
jle
push
inc
cmp
push
pusha
and
sarl
mov
push
out
daa
insb
jne
add
imul
push
xor
pushf
std
iret
lods
ds
movsl
out
dec
jle
dec
mov
test
cmp
mov
push
pop
or
fwait
adc
bound
repnz
sbb
in
lret
jecxz
add
or
imul
adc
or
std
into
lea
push
int3
jge
jmp
mov
les
test
jp
loope
xchg
push
imull
inc
rcll
and
lret
sub
lods
in
pusha
loopne
fimuls
fstps
mov
int3
cld
mov
push
jnp
rcrb
dec
xlat
iret
push
xchg
xchg
mov
sbb
or
xlat
push
lahf
lods
jno
adc
fdivp
jae
xchg
test
jnp
sar
sarl
mov
test
push
cld
pop
jmp
cld
adc
mov
cltd
mov
scas
movsb
call
xchg
cmc
push
das
cmp
push
in
out
inc
sub
call
loop
xlat
pop
xchg
pop
ficoml
js
xchg
scas
mov
push
insb
mov
add
addb
push
mov
imul
add
je
lods
imul
sub
fwait
clc
push
lret
and
or
add
push
pushf
adc
push
loopne
xchg
adc
aam
imul
mov
mov
inc
loopne
aam
push
out
lds
loop
jns
into
xor
fiaddl
imul
add
jle
stos
dec
in
sbbb
adc
lock
pop
push
shlb
push
cmp
in
mov
dec
cmp
cmp
adc
jecxz
stos
sub
inc
lock
adc
sub
loopne
sub
xchg
sub
fsts
push
xchg
jg
stos
mov
add
aaa
xchg
adc
inc
dec
aad
push
shrd
mov
xor
fistl
pop
adc
inc
inc
outsl
adc
shr
xchg
popf
dec
adc
or
and
cmp
imul
call
dec
adcl
adc
scas
dec
rolb
ret
mov
test
cmpsb
xor
outsb
insl
repz
stos
add
imul
repnz
adc
jb
fidivrl
iret
rcrl
add
ss
pop
push
sbb
pusha
xchg
push
sbb
and
cld
xchg
push
jne
pop
arpl
data16
imul
xchg
aad
das
call
adc
js
dec
test
sarb
push
fnstsw
imul
sub
bound
or
mov
inc
inc
jns
rorb
fadds
xchg
fwait
jo
and
subb
mov
add
xchg
jb
xchg
shll
stos
adc
adc
test
fsubp
stc
jge
mov
sbb
fmuls
std
stc
ss
jmp
fdivrp
and
add
inc
cmp
jge
scas
mov
sbb
push
ja
adc
es
movsb
mov
lds
lret
shrb
sbb
xor
adc
inc
jmp
push
repz
mov
sbb
mov
jle
les
jnp
xchg
push
push
adc
dec
fnstcw
cmp
push
bound
lcall
push
lcall
push
sbb
fwait
imul
add
fcomps
mov
mov
sar
shrb
lock
pop
sbb
rcr
stc
adc
stos
push
jmp
xlat
or
notl
mov
xchg
jmp
mov
jae
call
inc
enter
out
and
pop
jecxz
test
or
scas
movsb
imul
fwait
jmp
movsb
enter
cmp
pop
mov
sub
stc
std
xchg
out
flds
ss
ficoms
pop
adc
loopne
sbb
mov
imul
mov
das
mov
mov
adc
sub
ss
jae
cmp
adcl
dec
mov
xor
or
mov
out
jns
xchg
cld
imul
pop
fcmovne
pop
or
icebp
xchg
imul
pushf
or
jnp
scas
je
sub
mov
sub
loopne
or
pop
cld
dec
cmp
incl
sub
vpcmpub
call
rcrl
cmp
xor
imul
xor
lods
mov
fists
movsl
aas
dec
mov
push
adc
rcr
and
push
cwtl
imul
cmpsl
mov
cmp
xchg
nop
sbb
push
lods
dec
add
xchg
sbb
jp
rclb
test
jae
movsl
push
arpl
inc
add
xor
xor
pop
and
dec
repnz
gs
push
adc
cmp
int
mov
sbb
lock
out
and
push
ffree
sbb
mov
mov
mov
fcom
adc
shrb
and
jo
cmpsl
negb
inc
xchg
imul
cmp
sbbl
xor
int3
aaa
cltd
rolb
dec
or
cmp
sub
adc
lahf
aam
sub
aam
fildl
aam
inc
push
rol
aaa
pop
ja
ljmp
xor
mulb
je
mov
fstl
push
pop
lret
and
stos
mov
lret
jmp
in
mov
xchg
inc
insl
popf
xchg
or
into
repnz
xor
and
lods
push
fistpll
inc
fstpt
mov
dec
std
cmp
pusha
test
xor
fnstsw
pushf
push
adc
cs
clc
je
enter
insb
adc
inc
dec
pop
sti
jae
testb
jae
mov
mov
jbe
inc
pop
scas
imul
out
pop
mov
jns
inc
xchg
mov
aaa
test
test
inc
jg
mov
cmp
enter
jecxz
mov
mov
lcall
test
add
mov
mov
int3
xlat
movsb
lods
mov
adc
jns
mov
loopne
imul
test
xchg
scas
inc
lods
imul
add
cmpsb
mov
push
stc
fdivs
adc
mov
lret
in
push
or
inc
movb
or
cmp
push
adc
sub
mov
call
pop
or
push
pop
test
imul
jo
call
leave
data16
shlb
pop
scas
pusha
add
cmp
cmpsl
int3
pop
decl
shlb
fmuls
xorb
push
or
mov
inc
mov
xor
mov
das
stc
jecxz
js
subl
les
inc
jbe
mov
add
inc
jge
push
mov
lret
and
rorb
adcb
cmc
adc
aad
popa
sbb
and
in
pop
sbb
cmpsb
sub
loopne
lock
in
test
fisubrl
cmpsb
sub
push
mov
sti
fsub
push
jmp
movsb
mov
ja
adc
aad
movsl
xchg
mov
xchg
lods
push
imul
inc
sar
aam
movsl
xchg
mov
in
lods
out
loopne
lahf
mov
int3
pop
scas
arpl
sbb
and
imul
sub
dec
cmp
mov
call
rcr
stos
shr
nop
sbb
decl
mov
cmp
lret
sub
push
adc
or
jnp
mov
add
or
mov
mov
ss
aas
bound
pop
dec
sbb
adc
and
test
inc
cmp
rcrl
or
inc
cwtl
sbb
jecxz
pop
xchg
fdivrs
in
pop
add
push
fcmovnu
cmp
push
xor
inc
adc
inc
std
movsb
lods
add
pop
movsl
pop
cmp
sub
jge
iret
pop
pop
mov
adc
leave
mov
pop
ja
lret
sub
out
dec
data16
adcl
leave
push
ljmp
fisubrl
in
mov
xor
cmpsl
rdtsc
shrl
xor
call
stc
rclb
into
inc
push
imul
nop
jmp
cmp
and
mov
jne
leave
adc
inc
cld
jg
push
sbb
inc
adc
fiaddl
xchg
dec
dec
xlat
into
xchg
push
cmp
push
test
mov
insl
push
cmp
mov
mov
insl
xchg
dec
sbb
add
aad
and
ss
sbb
daa
repz
fs
inc
out
push
dec
stos
push
mov
je
loop
pushf
jno
mov
fistl
mov
mov
adc
sub
fxch
lahf
xlat
pop
mov
pop
mov
sub
sub
enter
inc
pusha
call
mov
out
and
push
inc
pop
mov
call
imul
inc
in
das
xor
dec
lods
cmp
aad
jle
imul
out
lret
fsts
push
jnp
add
loopne
xor
jno
jle
mov
xchg
xchg
das
cmc
faddl
inc
add
je
in
outsb
pop
int3
loopne
cmp
sarl
ds
xor
rcrb
xchg
shll
popf
add
cmp
cmc
cmpsl
test
pop
adc
ficoml
call
mov
sarb
cwtl
scas
inc
push
inc
fisubrs
xchg
cmpl
mov
adc
imul
xor
mov
xor
in
adc
lret
cmp
pop
lcall
sbb
scas
jp
push
cmpl
nop
inc
rcll
xchg
lods
test
adc
dec
adc
push
mov
mov
loopne
int
incb
lret
adc
bound
mov
push
movsb
push
dec
insb
js
iret
adc
push
faddp
jl
sarl
sbb
imul
cmp
lahf
and
daa
xchg
outsl
jnp
orl
xchg
or
push
inc
clc
push
cwtl
lret
mov
pop
xchg
fldcw
inc
and
call
loope
roll
adc
dec
movsl
adc
lock
shr
js
imul
inc
and
and
imul
lcall
push
pop
xor
mov
push
mov
clc
pop
and
or
movsb
cs
daa
cmpsb
nop
pop
mov
push
jne
out
push
dec
sbb
cs
xchg
cwtl
outsl
sbb
inc
push
xorb
cmp
xchg
add
add
aas
add
scas
incl
inc
cmp
rclb
rclb
imul
ror
bound
cmp
jo
outsb
fildl
fstpt
lods
test
cmpsl
push
cmp
fwait
aam
aam
stos
clc
xor
adc
xchg
sbbb
jno
sub
cld
mov
addl
hlt
dec
adc
pextrw
sub
push
push
bound
xor
xchg
sbb
adc
insb
sub
add
js
shl
cmc
fldenv
shrb
xchg
cmp
in
subb
cmpl
rolb
rcl
xor
data16
stos
jb
or
inc
mov
aad
roll
ja
mov
push
push
pop
ljmp
jecxz
adc
mov
jno
push
sbb
or
test
push
and
jecxz
leave
fbld
shrl
and
inc
add
lods
jge
cmc
call
adc
scas
ja
int3
cmp
sbb
jbe
fcmovnbe
dec
cmp
cmc
pop
xor
pop
xchg
mov
mov
or
in
mov
int3
insb
into
sbb
or
shr
mov
xchg
jge
push
inc
push
add
into
push
xchg
cmp
dec
jg
xchg
call
and
mov
lods
push
lret
movsl
ljmp
cmp
jnp
jg
add
lods
add
xchg
xchg
cs
movsl
jb
xchg
rcl
xchg
xor
js
add
ficompl
inc
sub
cmpsb
iret
or
sbb
test
pop
xchg
outsl
push
shl
popa
cmpsl
stos
mov
adc
test
bound
aad
sbb
lcall
in
mov
repnz
rcll
push
bound
call
push
scas
and
cmc
mov
dec
rclb
pop
loopne
push
cmp
push
fmul
add
push
rolb
je
leave
icebp
cmp
or
pusha
int3
sbb
add
jmp
loopne
fimuls
in
add
add
insl
aam
jnp
bnd
loope
les
adc
arpl
in
cmpsb
imul
add
jg
cwtl
mov
or
movsb
push
jns
es
cmpsl
les
insb
xor
movsl
cmp
imul
repnz
ljmp
push
mov
xor
xlat
push
xchg
data16
mov
xor
mov
aaa
les
xchg
aad
push
loop
rcll
iret
xchg
cmp
iret
ret
shlb
imul
sub
add
mov
pop
push
mov
imul
iret
mov
jns
pushf
ret
cltd
and
stos
xchg
and
movsl
mov
mov
ficoms
in
jno
sub
in
sub
push
jno
xor
inc
sub
popa
adc
filds
fdiv
mov
mov
idivl
js
add
js,pt
repz
pop
xchg
imul
add
loopne
out
mov
icebp
lret
jne
imul
pop
jmp
cmp
movsb
or
call
ss
rcrb
xchg
mov
push
in
fdivl
rolb
sub
aaa
out
mov
loop
les
cmp
fptan
fxch
fidivrs
sbb
sti
add
dec
nop
in
lcall
roll
xor
push
sub
aam
fucom
out
or
add
ficoml
sbb
test
mov
fdivrs
movsl
ss
dec
and
or
imul
lea
dec
xor
mov
sbbl
inc
push
mov
jge
fnstsw
scas
xlat
push
aaa
movsl
aam
into
jb
loopne
paddsb
lock
fsubp
imul
cli
popf
or
test
shrb
dec
scas
fcoms
loop
dec
inc
xor
mov
and
pop
orl
in
lock
add
ljmp
das
mov
scas
nop
in
ret
xchg
mov
xchg
nop
add
add
push
outsb
out
lods
cmp
xchg
jae
mov
push
mov
push
std
icebp
inc
and
xor
cmp
cmp
popl
sub
mov
dec
pop
and
imul
hlt
flds
and
pop
jmp
insb
mov
dec
js
pop
scas
test
arpl
lret
cmpb
data16
pushf
pushf
sbb
sbb
aaa
jo
andb
call
jge
adc
xorl
xor
sahf
scas
xchg
cmp
jg
or
in
fisttpll
test
loope
push
outsb
lret
inc
push
jae
ficoms
mov
fdivs
inc
loop
loopne
add
or
xchg
clc
mov
push
rclb
movsb
pop
sbb
or
shl
cmp
sub
out
sub
pop
pusha
push
mov
les
call
lds
ficoml
into
or
cmp
iret
inc
jle
imul
xor
pop
cs
imul
nop
ret
fwait
sbb
ret
dec
aas
repnz
jno
imul
cmpb
cltd
ja
sbb
mov
xor
call
fwait
imul
jbe
leave
pop
sub
and
ficompl
arpl
mov
push
movsb
scas
shrl
pop
xor
mov
les
or
sbb
call
ljmp
scas
cmp
into
add
loopne
push
pop
jecxz
cs
mov
cmpb
mov
call
daa
push
int
andl
xchg
mov
or
jmp
mov
add
sbb
jnp
scas
lds
push
adc
sbb
mov
cmp
cmpsb
lcall
orl
stc
mov
and
movsl
pop
mov
sbb
fistl
mov
sub
sbb
dec
jo
jnp
inc
xchg
ss
shlb
xlat
test
sub
es
sub
nop
pop
add
cmp
or
test
outsl
push
cwtl
ds
sub
rclb
push
rcll
push
imul
leave
orb
mov
loop
int
cmp
jns
repnz
sahf
jns
or
ret
push
jl
and
notb
movsl
je
jne
pusha
cmp
push
mov
sub
adc
test
stos
push
arpl
xchg
shrl
call
adc
shl
or
pop
inc
test
fmuls
pop
cmp
lock
push
adc
int3
out
or
and
xor
test
pop
push
xchg
ret
shlb
mov
push
sbb
fistpll
into
mov
mov
mov
jae
xchg
sarl
or
out
aam
out
mov
mov
adc
test
push
loopne
cmc
inc
xchg
jecxz
and
pop
stos
or
scas
jge
mov
fldpi
pushf
xchg
stos
inc
dec
xor
xlat
adc
aam
dec
loope
cmp
cmp
xorl
pop
shlb
dec
and
inc
mov
imul
dec
popf
nop
mov
outsl
xlat
cwtl
imul
xchg
push
cmc
pop
jnp
ljmp
data16
popf
mov
rcl
cmp
or
sbb
mov
mov
ja
ret
dec
pop
adc
xlat
leave
add
sbb
xchg
push
shrl
shlb
mov
jle
imul
and
ret
into
dec
and
xchg
int3
repnz
call
fidivrs
std
push
jo
das
cmc
movsl
mov
and
arpl
ds
add
int3
mov
sub
xorb
cmpsb
adcb
jmp
sbb
cmp
sub
out
fidivrs
cmp
pop
mull
pop
jmp
xchg
sub
mov
jge
movsb
fstpl
imul
call
push
fcompl
inc
pop
or
bound
adc
cmpsl
sbb
cmpsb
mov
js
xchg
mov
mov
jg
or
or
idiv
ljmp
addl
or
aas
mov
sbbb
dec
mov
fmul
jg
xlat
rcrl
icebp
sub
out
fidivrs
into
sarb
pop
xchg
push
movsl
pop
lods
rclb
ja
dec
push
into
sysexit
test
fisttpl
or
lcall
inc
push
shll
sbb
sti
and
ds
xor
cmp
call
mov
mov
push
jb
or
shl
loop
push
cmp
mov
cltd
dec
fwait
jge
cld
mov
mov
adc
dec
or
jo
cmpsl
adcb
pop
xor
or
lret
je
shrl
call
sub
and
movsb
mov
test
fdivp
xor
mov
push
loope
jle
imul
call
call
loope
test
ret
loopne
mov
movsl
jmp
fs
fimuls
repnz
inc
shrl
out
and
incl
test
jge
pusha
subl
adc
popl
xor
sti
or
mov
and
mov
lcall
repz
jl
outsl
xorb
data16
lock
xchg
or
int3
fcomip
prefetcht0
inc
call
stc
jp
mov
pop
fiadds
mov
and
xlat
loopne
dec
push
adc
push
push
aam
or
movsb
dec
ja
pop
mov
lahf
fildll
test
push
adc
clc
mov
mov
test
mov
xchg
sti
mov
mov
push
xchg
lods
mov
inc
sub
sub
ficompl
into
adc
movsl
inc
sbb
jns
add
add
adc
mov
out
xchg
pushf
sbb
cmp
shlb
call
xchg
push
repz
cmp
pop
push
push
in
imul
out
sbb
test
test
ljmp
iret
cmp
sub
cmp
adc
or
movsl
cmp
pop
mov
push
mov
mov
movsl
cmp
push
xchg
jmp
or
fisubrs
mov
imull
les
cwtl
cmp
mov
pop
cld
xor
lds
fsts
std
adc
loopne
aaa
movsl
lods
stos
repz
mov
adc
sub
pop
sbb
cwtl
cld
mov
call
fcmovb
dec
fcompl
dec
push
adc
sbb
inc
imulb
xor
pop
push
test
fmul
outsl
imul
adc
aad
adcl
adc
enter
or
sub
or
enter
pop
mov
dec
add
ret
cmp
xchg
inc
xor
test
pop
cmp
fldl
mov
mov
fldt
push
mov
lahf
ficompl
ljmp
popa
iret
movsl
cmp
add
stos
and
cmpsl
dec
xchg
add
notl
push
out
sub
in
cmp
test
test
and
scas
ja
dec
push
fwait
mov
fistpll
sub
cld
xchg
out
mov
xchg
cmpsb
outsb
sub
mov
addb
movsb
mov
cmp
test
push
imul
in
mov
push
ja
push
popa
enter
mov
sbb
fcmovb
push
push
imul
cmovae
adc
and
loope
mov
and
shlb
xchg
ljmp
and
pop
inc
mov
fists
sub
icebp
and
inc
jae
pop
and
pop
dec
lods
mov
cltd
sbbb
dec
test
ficoml
mov
fbstp
nop
test
push
std
insb
outsl
add
mov
popa
iret
cli
mov
andb
jbe
imul
push
test
or
fsts
cld
lret
add
mov
adc
nop
xor
mov
cwtl
xchg
pop
push
mov
pmulhuw
aas
hlt
add
sbb
iret
add
outsb
ffreep
add
fs
xor
and
dec
ds
in
test
cltd
rclb
fisttpl
xlat
loop
or
add
dec
sahf
inc
push
push
push
jl
adc
mov
or
push
mov
inc
lds
push
fisttpl
loope
or
ljmp
lods
movsb
sbb
and
pusha
push
xchg
scas
test
ds
nop
outsl
xchg
sarl
mov
mov
into
lret
fdivrs
test
mov
dec
cmpsl
or
stos
inc
scas
dec
dec
pop
loopne
add
xchg
fs
inc
push
sahf
mov
mov
cmp
jp
pop
dec
and
lock
mov
xchg
push
imul
jno
shrb
adc
and
and
negl
sbb
iret
inc
test
ret
lret
andl
shlb
mov
stos
mov
push
fwait
cmpsl
jl
loope
out
add
shrb
sub
pushf
sbb
xlat
and
hlt
push
adc
pop
in
jp
adc
aas
xchg
orb
fiaddl
or
jp
loopne
push
out
cmpsb
jl
mov
xchg
into
mov
jno
and
mov
sub
mov
dec
lods
pop
movsb
lods
sub
adc
adc
mov
cmp
add
outsb
hlt
sbb
push
adc
or
cld
pusha
movsl
in
subl
test
aas
hlt
ficoml
into
aam
jmp
lea
xchg
push
ds
xchg
enter
xchg
dec
test
jbe
roll
in
mov
push
xchg
notb
push
dec
addb
jp
loopne
fimuls
nop
jl
push
rorl
jp
roll
inc
imul
sbb
adc
and
shrb
lods
sbbl
adc
int3
or
jmp
and
sub
ss
roll
cs
cmp
pop
mov
cmp
add
popl
dec
movsl
jno
repnz
cmpsl
call
sbb
push
decb
loopne
mov
insl
mov
lea
fs
inc
and
mov
mov
rolb
dec
or
lahf
cmp
stos
lcall
mov
adc
pop
jo
xchg
pop
lock
ret
rcrl
daa
fdivr
adc
sub
call
stos
mov
mov
mov
cmp
ror
popf
repz
mov
inc
pop
pop
pop
mov
jnp
cmp
add
pop
movsl
addr16
pusha
push
test
pop
out
and
inc
and
movsb
sarb
shlb
or
test
and
xor
or
xchg
xchg
lahf
and
pop
inc
cwtl
call
push
xor
dec
inc
xchg
je
adc
and
shll
dec
sahf
adc
xchg
lds
sbb
es
mov
and
pop
test
hlt
call
aam
lret
insl
mov
mov
cmpsb
pop
xchg
sarl
or
into
movsl
xchg
mov
inc
xor
sbb
mov
pop
jl
jle
gs
xchg
pop
mov
in
lret
sub
inc
insb
or
inc
xchg
imul
xchg
movb
mov
cmp
mov
mov
shl
mov
in
scas
cmpsl
aam
push
ror
mov
adc
sti
insb
sbb
popa
jmp
xorl
adc
add
cld
dec
stos
aam
xor
or
push
inc
lods
sub
jns
stc
in
lret
mov
cmpl
xor
outsl
aam
xchg
stos
mov
in
sbb
jb
fisttps
sbb
into
in
add
fcomi
mov
push
adc
jl
das
jmp
and
or
ljmp
jge
aam
sbb
sarb
jge
jp
subl
addb
or
cli
rolb
or
pop
imul
xchg
repnz
std
pop
daa
xchg
inc
pop
jns
int
or
int3
jne
adc
mov
fiaddl
in
out
insl
push
std
pop
repz
cmp
dec
andb
dec
rorl
pushf
imul
loopne
push
mov
fcompl
mov
cwtl
movsl
das
dec
mov
sbb
movsl
mov
adc
mov
xchg
int
push
or
add
loopne
lods
ss
in
es
push
xchg
xor
push
sub
sub
or
push
fdivs
das
or
push
stos
inc
sub
cmpsb
leave
fucompp
add
or
adc
mov
cmp
pusha
call
xchg
leave
pusha
xchg
xchg
in
movb
xlat
insb
adc
or
test
pop
imul
ds
fcom
sti
aad
sbb
dec
pop
jno
xchg
loopne
mov
je,pt
cmp
mov
imul
rol
jnp
add
xor
idivb
fistl
push
out
cmpsb
push
inc
add
mov
push
test
fistl
or
sub
xchg
shrb
jne
jmp
lods
cs
and
push
add
lret
or
sti
dec
aas
mov
incl
mov
xchg
jmp
call
xchg
imul
cmc
stos
mov
mov
cmpsl
mov
dec
ror
mov
arpl
test
sti
mov
loopne
xchg
inc
mov
in
push
pop
rol
daa
xchg
orb
and
into
xor
loopne
clc
aad
shrl
les
mov
sbb
push
jne
adc
cmp
pusha
fnsave
rcl
stc
adc
cmovnp
mov
or
jg
imul
sub
stos
jmp
daa
add
pop
push
mov
shrl
and
call
cmpsb
sub
cwtl
je
pop
aam
addl
aad
jns
adc
aam
pusha
xchg
iret
mov
mov
negb
hlt
cmpl
fistps
imul
dec
mov
cmpsl
xor
std
xchg
inc
push
adc
adc
pushf
jbe
mov
imul
mov
mov
dec
adc
hlt
pop
inc
mov
push
fisubl
lods
mov
mov
loope
in
rcrb
aam
adc
popa
stos
arpl
add
add
lahf
ds
insl
orl
or
mov
push
leave
fbld
fcmovb
adc
fs
dec
mov
test
or
insl
push
cmpsb
mov
insl
push
shlb
jbe,pn
xchg
jge
movsb
push
aaa
fmul
xor
xchg
repnz
add
add
push
xchg
jge
scas
cmp
jg
sbb
add
jns
aam
popa
push
sbb
sub
mov
xor
lret
push
push
jp
and
roll
push
adc
scas
test
les
mov
xor
std
jne
in
out
adc
imul
call
sub
mov
mov
dec
scas
je
addr16
imul
mov
or
into
add
int3
sub
xor
mov
mov
iret
test
cmp
pop
fistpll
iret
cmp
lods
lea
mov
xchg
and
adc
or
jb
or
inc
pop
ss
dec
xor
jno
leave
pop
ja
addl
and
mov
or
fwait
mov
fs
scas
fiaddl
js
xchg
xchg
inc
hlt
inc
mov
inc
sbb
add
cmpl
fidivrs
mov
sti
mov
into
jmp
movups
jle
test
mov
mov
scas
jae
fidivrs
or
sbb
jns
cmpsl
mov
xor
mov
test
xchg
movsl
nop
ret
jb
and
pop
popa
mov
stos
adcl
mov
xchg
das
stos
sub
xchg
sbb
mov
fs
fildll
lret
loope
leave
jne
jb
inc
cmc
into
mov
xchg
push
insb
cmc
xchg
xchg
jbe
in
test
cmp
movsl
mov
jbe
loop
inc
push
push
rclb
add
test
or
push
inc
mov
imul
es
cmp
je
add
aam
mov
pop
adc
adc
dec
cmp
adc
or
rol
mov
cmpsb
fistpll
xchg
fiadds
inc
push
arpl
mov
jo
lcall
jmp
mov
mov
cwtl
pop
call
mov
mov
mov
adc
inc
push
lods
insl
inc
xsave
mov
cmp
or
pop
rol
push
push
sub
lcall
dec
push
out
or
lock
jle
roll
jl
xor
loop
dec
aaa
pop
sub
sbb
dec
xor
into
and
sub
xchg
mov
daa
cmpsl
cmp
sbb
cmpsl
nop
sub
jnp
insb
add
call
push
mov
mov
pusha
filds
inc
cmp
std
or
jne
hlt
mov
cltd
sub
pop
hlt
into
movb
imul
mov
pop
and
inc
cmpsl
jmp
lea
or
aad
sbb
jge
xchg
imul
pop
inc
pop
shrl
mov
push
cltd
icebp
fsubs
or
arpl
xchg
fdivl
pop
mov
adc
jmp
mov
rolb
mov
test
popa
inc
sbb
cmc
stc
loop
pop
jne
sub
jne
xchg
cld
push
sub
mov
test
fisttpll
jae
add
pop
push
xchg
into
shlb
inc
lahf
dec
cs
push
sbb
movsl
popf
mov
std
rcl
add
or
test
loope
ret
cmpsb
jns
sub
mov
mov
test
xor
rcrb
lods
xchg
push
inc
or
rol
pop
psllq
mov
pusha
xchg
ror
cld
cmp
shll
mov
mov
into
cmp
jge
xchg
rcrb
xchg
push
pop
ret
jo
sub
movsb
jns
popf
enter
sub
in
pop
loop
popa
cmp
inc
call
mov
pop
imulb
lock
xchg
stc
inc
pop
adc
mov
movsb
mov
xor
cwtl
mov
icebp
cmp
push
out
jecxz
stos
fistpl
inc
adc
cwtl
mov
in
insb
les
aas
pop
pop
data16
pop
faddl
cmpsl
jmp
fucomip
add
xchg
mov
outsl
dec
mov
and
pop
icebp
jno
repnz
lret
mov
dec
pusha
and
enter
sub
cmc
scas
daa
js
adc
xor
xchg
test
add
or
pop
mov
dec
sbb
adc
movzbl
sbb
subb
aas
inc
dec
dec
xchg
mov
inc
push
sub
dec
xor
ljmp
xor
or
mov
or
ja
fcmovnb
and
scas
ljmp
lret
ror
enter
sbb
cwtl
imul
xchg
or
sub
roll
aam
push
shrb
repz
popa
inc
push
call
ja
or
push
ds
fiaddl
jae
push
lcall
shrb
jb
xor
add
sub
sahf
imul
cli
daa
mov
mov
sbb
mov
nop
rcll
jbe
int3
call
scas
mov
jg
loopne
mov
or
in
fmulp
fnsave
ret
imul
fucomi
xchg
and
dec
cmc
jle
inc
dec
enter
mov
les
cli
mov
adc
std
cltd
jle
sbbl
orb
fwait
jmp
adc
repz
push
inc
jmp
add
cmc
cmp
jno
xchg
outsb
adc
xchg
adc
test
xchg
push
adc
dec
xor
iret
push
push
mov
repz
jb
ficoml
push
sub
mov
push
inc
sarb
rolb
sbb
testb
rcrb
shrl
sbb
aad
lock
push
sbb
jp
mov
jge
scas
lcall
aas
mov
call
xchg
push
xor
inc
mov
enter
out
cwtl
arpl
cs
or
shlb
pop
adc
jecxz
test
push
pop
mov
dec
leave
adc
jne
push
orb
xchg
lahf
das
lret
pop
or
mov
dec
fadds
cmp
jecxz
xorb
adcl
sarb
or
lret
punpckhbw
dec
stos
pop
fsubrs
xor
bound
imul
dec
lret
jno
ret
jg
sbb
jnp
sub
sub
int3
jb
push
cmp
rorb
or
or
rclb
sbb
dec
fldcw
cld
mov
ret
ljmp
mov
test
xor
sub
out
xor
lret
cmp
test
test
ret
imul
sub
fidivl
cmpsl
sarb
leave
int3
sub
adc
ror
xor
mov
jmp
loope
lods
pop
inc
shll
stc
nop
dec
data16
mov
into
js
and
or
mov
inc
fsubrl
xor
inc
fsubrl
cmpsb
mov
jmp
lock
adc
mov
xchg
jb
incb
out
pop
fsubs
xor
jmp
jecxz
in
cli
test
rorb
push
sbb
inc
adc
lret
and
push
push
jg
mov
loopne
lds
ret
lahf
test
dec
hlt
or
pop
pop
push
inc
test
ret
dec
push
addl
mov
in
inc
mov
xor
add
inc
mov
bound
insl
outsb
cmpsl
fistps
stos
cmp
inc
add
stos
xchg
loopne
mov
into
sbb
add
jo
gs
movsl
dec
bound
push
or
inc
mov
test
or
add
leave
shl
sub
add
cmpsb
push
xlat
cmp
or
mov
mov
aas
loope
sbb
mov
xchg
dec
es
and
mov
data16
mov
inc
pop
mov
push
rorb
rcrb
pop
aam
or
mov
lock
les
std
cmpl
rclw
lret
sub
jle
dec
je
imul
add
sti
into
sarl
or
adc
or
or
cmpsb
mov
cmp
xorb
mov
iret
mov
hlt
mov
or
pop
xchg
push
sbb
sbb
lock
adc
sub
ss
cmpsl
stos
xchg
xor
cltd
loope,pn
and
dec
adc
sbbl
movsl
jl
jb
push
scas
cmp
cwtl
pop
call
fidivrs
sbb
mov
sub
add
cld
mov
insl
dec
fidivrs
inc
mov
aaa
test
pop
mov
xchg
push
iret
scas
cmp
cmpsl
mov
add
cltd
dec
cld
mov
ror
or
scas
dec
or
mov
cmc
les
adc
add
enter
out
scas
push
add
inc
clc
mov
paddq
jno
sub
std
xor
jecxz
scas
xchg
xor
jno
in
and
fs
push
inc
jge
sub
nop
xor
or
cmp
les
mov
add
popa
loopne
sub
adc
adcb
enter
mov
cmp
xor
pop
cmp
test
mov
ficoms
cld
push
ret
push
push
lock
sbb
push
dec
and
mov
fstps
adc
lds
test
and
mov
loop
lods
xlat
mov
test
cmpsb
cmpsb
or
fstpl
mov
in
int
ret
mov
and
and
insl
or
mov
roll
movsl
in
les
fsubp
cmp
xchg
gs
cmpsl
subb
aas
dec
insb
add
or
xchg
lret
fcoms
fsubrp
js
inc
imul
sbb
sbb
orl
adc
stos
push
hlt
popf
lahf
icebp
out
push
popa
sub
dec
outsb
loopne
inc
mov
popf
lods
sub
aas
inc
rcrl
adc
push
test
leave
stc
jb
loop
rcl
xchg
into
loope
ds
stos
xchg
sub
fbld
jnp
mov
fidivl
mov
test
and
cmp
push
mov
xchg
cmp
pop
mov
mov
adc
sbb
add
bnd
jne
imul
imul
xchg
pop
push
mov
fnstenv
add
test
lods
adcl
lret
lret
imul
ficoml
xchg
clc
push
add
push
cmp
xchg
in
test
movsb
cmp
inc
imul
mov
jb
orb
gs
mov
adc
xchg
dec
ror
jmp
jg
inc
cmp
aad
popf
push
imul
cmc
loope
les
out
inc
mov
push
mov
loopne
imul
fstpl
insl
repnz
fldl
mov
mov
xlat
outsl
stos
or
add
stc
insl
pop
nop
mov
xchg
sbb
inc
sub
cld
loop
mov
sti
orl
test
xchg
sub
mov
je
inc
out
adc
and
dec
leave
push
mov
lods
sbb
adc
loop
cwtl
pop
std
movsb
in
aad
call
add
cmp
and
mov
test
mov
imul
jbe
xchg
mov
andb
iret
aaa
xchg
ja
adc
and
mov
push
dec
cmp
and
dec
lods
outsb
or
lret
fs
adc
subl
xchg
cmp
fcompl
adcl
subb
lret
icebp
repz
cmp
subb
call
or
push
or
cmp
xor
mov
pop
mov
movsl
xchg
sbb
movsb
add
pop
imul
sbb
popa
xorl
aad
lock
pop
inc
or
mov
pop
imul
xor
add
leave
lcall
push
imul
mov
xor
mov
in
pop
push
shll
mov
arpl
xorb
pop
insb
aam
inc
pushf
sbb
xor
mov
lods
nop
packssdw
inc
xchg
das
mov
scas
xor
pusha
mov
fcmovu
xor
insl
xorl
xchg
rcrb
xchg
gs
dec
pop
fucomip
sub
mov
inc
jo
out
in
mov
pop
or
inc
cli
cltd
pop
sbb
test
loope
sbb
sbb
sbb
mov
imul
or
lods
push
jb
je
jmp
pop
enter
sub
inc
jl
ds
das
lds
pop
cmc
mov
adc
push
in
cs
in
mov
loopne
insb
mov
cmp
dec
into
pop
lds
or
arpl
outsl
shll
jmp
call
daa
jp
mov
xor
push
push
xchg
jmp
sarl
rep
and
or
enter
add
gs
sbb
push
pop
iret
sti
jno
mov
mov
or
cs
rcll
xchg
push
pop
pop
test
movsb
adc
add
cmpsl
mov
cmp
fldt
mov
pop
push
rcr
sarb
add
or
testb
outsb
push
outsb
dec
mov
call
xor
or
icebp
and
aad
inc
std
dec
lods
call
in
xchg
jnp
cmpb
xchg
xor
sub
or
xor
xchg
or
jno
in
fstps
push
pop
aas
sbb
lods
adc
add
imul
pop
int
adcb
movsl
iret
sub
inc
inc
jns
loopne
sarl
in
xor
stos
loop
inc
push
xchg
movl
orl
push
xlat
cmp
mov
fidivs
and
cmpsl
dec
adcl
out
or
out
or
call
out
mov
loopne
jnp
fidivs
idivb
in
repnz
stos
cmp
xlat
mov
push
cmp
std
in
js
lods
lods
mov
or
sarb
jne
xorl
jge
mov
pop
sub
dec
aad
insb
shlb
imul
ret
stos
adcl
mov
loopne
jb
mov
pop
sarl
pushf
jbe
add
push
in
lea
loope
fisubl
inc
mov
mov
xchg
stos
sub
hlt
repnz
xchg
bound
sti
insl
cmp
mov
js
mov
test
outsb
pusha
test
pop
aas
aas
inc
inc
mov
fsubl
mov
push
xadd
incl
jecxz
adc
ds
pop
push
addb
fildll
lock
jle
in
loopne
lods
xor
mov
lret
mov
jns
fwait
test
jl
test
lds
xlat
jp
xchg
sbb
insb
test
xor
xchg
enter
pop
add
int3
add
rsqrtps
sbb
pushl
cmp
mov
int3
lock
ror
sbb
fsubrl
or
push
inc
das
adc
call
inc
add
or
push
push
call
cld
xor
adc
out
aaa
mov
push
inc
add
outsb
xchg
sbb
add
add
aam
addr16
fists
js
push
dec
das
mov
shll
xchg
dec
adc
xor
subl
jecxz
pushf
jns
mov
shlb
mov
hlt
aas
loop
insl
jmp
pop
fildll
mov
popa
push
icebp
sub
jle
jecxz
pushaw
pop
loopne
jne
pop
sbb
xchg
mov
jnp
lods
imul
adc
xor
into
enter
pop
cltd
sbb
mov
mov
push
js
xchg
in
rol
mov
or
ds
out
movsl
jno
jae
lret
int3
adc
fists
mov
xchg
mov
pop
push
add
mov
je
movsl
and
lret
enter
lods
jno
icebp
xor
pop
cmpsl
inc
sbb
xchg
inc
jbe
xor
dec
jo
xchg
dec
cltd
or
cmp
rorb
add
and
out
loopne
or
push
adc
movsl
shll
push
test
daa
add
cmp
loopne
mov
rcll
adc
mov
dec
cmp
mov
fidivrl
incb
mov
add
add
xchg
test
fmuls
sub
cmc
xchg
mov
insl
sbb
mov
jb
sub
hlt
sahf
shrb
loop
sbb
and
cmc
xchg
sti
test
cmp
mov
jge
pop
and
jnp
bound
push
roll
aam
pop
add
ljmp
cmp
mov
mov
imul
rcr
sbb
cmp
mov
sbb
add
mov
dec
nop
jo
hlt
or
fidivl
push
mov
cmp
sbb
mov
int
jg
xchg
pop
and
sbb
xchg
mov
inc
mov
jbe
adc
xchg
fmull
nop
call
sbb
imul
je
jns
rorl
push
lods
movsb
out
jb
xchg
sbb
mov
fdiv
xchg
adc
adc
or
sbb
mov
scas
sub
add
dec
pop
outsw
mov
push
pushf
aas
sbb
js
addl
inc
jp
je
frstor
push
adc
xchg
sub
jno
lea
fidivl
pop
xor
mov
jnp,pt
loopne
and
push
and
ficoms
clc
or
out
mov
fmulp
jl
add
ss
imul
push
cwtl
rorl
mov
xor
push
leave
cli
push
xchg
imul
test
shrl
sbb
add
icebp
mov
movsl
adc
jns
push
inc
push
adc
mov
or
xchg
pop
adc
inc
pop
loopne
push
rolb
aas
xlat
out
ret
insb
sub
shlb
push
aad
roll
sub
call
icebp
pop
sub
dec
imul
hlt
shl
push
mov
cmp
roll
scas
iret
sahf
xor
mov
mov
add
push
cmc
jnp
shlb
mov
push
test
cld
or
fistpll
rcr
adcl
bound
fs
mov
lcall
dec
xchg
xlat
push
punpcklbw
pop
popf
inc
xor
pop
mov
mov
sbb
jl
cmp
lret
cmpsl
cltd
mov
mov
loopne
stc
shrb
mov
sarb
and
jns
cmpsb
push
bound
or
mov
fiaddl
mov
mov
jns
sub
lock
cmpsl
rcr
loopne
mov
in
mov
or
aas
push
jns
xchg
mov
clc
clc
push
pushf
insb
add
mov
imul
pop
js
pop
mov
int
push
mov
pop
dec
gs
loopne
fidivrl
inc
jp
lods
cltd
xchg
jbe
fidivrs
in
adc
push
les
inc
dec
das
aam
arpl
pop
sbb
xchg
pop
mov
data16
loopne
imul
fldenv
xchg
movsb
loope
sbb
pusha
fwait
jns
or
int3
fsts
call
push
lea
outsb
loope
out
scas
and
mov
push
jbe,pt
je
cmp
jns
push
loope
cmc
sub
cmp
in
xchg
pop
aas
add
sahf
adc
insb
and
insb
cld
test
fstps
daa
and
sub
jecxz
jo
jae
cwtl
xor
xor
cmpsl
jne
and
and
cld
in
inc
mov
xchg
xchg
out
ljmp
test
dec
daa
mov
jecxz
jmp
mov
movsl
popa
jmp
scas
sbbl
xchg
roll
mov
inc
cmpsl
mov
jo
lods
or
lcall
roll
mov
push
fs
mov
rdtsc
movsb
in
xchg
das
pop
test
into
mov
push
sub
repz
out
push
sbb
add
push
mov
clc
add
repz
loopne
es
sub
pop
fstpt
daa
movsl
pop
mov
insl
sbb
push
test
sbb
iret
dec
aas
xchg
and
jp
mov
das
out
sbb
fbld
testl
add
popa
jmp
in
pop
test
xor
mov
dec
jbe
push
int3
jle
cltd
aad
jns
add
imul
jp
adc
rcr
sub
arpl
and
fs
sub
mov
shll
fiadds
les
push
nop
movb
cmpsl
sti
notb
stos
pop
add
jne
imul
std
scas
pushf
push
ds
add
mov
imul
aaa
xlat
cwtl
addb
sub
add
pop
ljmp
fisubs
sbb
shl
jl
test
out
add
orb
fcompl
dec
ret
arpl
inc
cmp
ret
sbb
aaa
jl
cltd
aad
jp
fstpl
or
inc
pop
cmp
test
mov
pushf
xlat
xlat
lcall
inc
jb
cmp
cld
shl
mov
xor
push
cmp
test
insb
add
fiaddl
adc
cmp
push
imul
mov
dec
jns
cltd
push
sbb
or
mov
dec
dec
lods
add
push
loopne
push
les
in
rcrb
fistpll
addl
add
ret
icebp
hlt
jg
fwait
push
and
scas
xchg
sbb
push
or
rolb
pop
sub
pop
movsl
cmp
and
and
cmpsl
pop
sti
sub
jnp
sbb
out
sahf
inc
jle
dec
movsl
loopne
icebp
lcall
test
fiadds
push
push
xchg
xchg
loopne
loopne
ljmp
aaa
insb
add
jmp
insl
imul
outsl
fs
and
push
mov
cmc
sub
mov
cmc
cmpsl
aad
in
dec
add
cmp
loopne
loop
jmp
lret
cwtl
imul
adc
daa
mov
mov
pop
ljmp
and
test
adc
stos
mov
jne
jno
daa
jno
cmp
call
aad
ret
xchg
xchg
mov
xor
jg
ja
jbe
push
xor
lods
inc
js
test
rcr
cmp
xchg
mov
add
imul
fs
mov
cmp
or
icebp
pop
loope
cmp
sub
lods
inc
sbb
sarb
sub
mov
jmp
sahf
call
insb
inc
push
dec
adc
jg
sti
push
or
movsl
push
stos
or
add
popf
sub
ljmp
divl
fwait
nop
sbb
mov
and
outsl
adc
inc
xor
imul
std
movb
xchg
mov
xor
popa
pop
fisttpl
dec
mov
je
mov
push
es
cmp
jbe
cmp
scas
and
dec
pop
add
jge
sub
pop
mov
test
add
dec
push
push
hlt
dec
ss
pop
or
test
out
inc
rorl
jmp
pop
pop
jle
adc
andl
sub
or
fs
sub
mov
jns
cld
stos
mov
fs
xor
test
jmp
mov
out
insb
fidivrl
push
rcll
add
jns
adc
leave
xchg
in
cmp
xor
sub
sub
addr16
call
mov
or
fdivrl
jl
sbb
and
test
lock
addb
pop
pop
inc
sbb
jae
xor
inc
sub
mov
shrl
stos
cmpsl
and
imul
dec
add
ret
loopne
push
mov
stos
imul
lahf
xlat
test
das
or
mov
insb
mov
and
or
xchg
inc
aaa
std
sub
jnp
mov
gs
outsl
imul
push
fsts
xchg
dec
or
aam
sbbl
pop
cmp
xchg
cmp
or
mov
sub
mov
fisubrs
stos
xlat
loopne
jae
lods
sub
pop
lds
sbb
dec
shrl
mov
cmp
nop
mov
and
mov
xor
sub
js
dec
jnp
repnz
mov
or
out
or
movsb
cmpsl
sbb
inc
adc
inc
or
fiaddl
int
rcll
shll
ja
roll
push
mov
and
jle
loop
not
pop
not
in
into
sub
in
ja
ja
lods
adc
aaa
mov
std
mov
fneni(8087
std
outsb
stos
push
es
push
imul
mov
cmc
fnstenv
test
mov
xchg
call
xlat
outsl
movsb
sub
outsl
mov
fmull
test
scas
jmp
popa
pop
aas
lods
cmp
inc
cmpsl
scas
in
cmc
cltd
cltd
add
jnp
ret
popa
loopne
xor
fadds
adc
inc
test
popl
jnp
mov
mov
and
scas
mov
inc
mov
inc
push
cld
sub
int3
jle
fdivl
mov
dec
cmp
push
mulb
jge
xchg
in
xchg
adc
test
scas
add
mov
mov
adc
pop
push
mov
ret
clc
xchg
ss
dec
sub
loop
adc
adc
mov
fidivl
sahf
mov
push
push
pop
movsl
stc
jmp
lock
lods
mov
mov
cmp
ret
or
sub
loope
mov
jb
xchg
push
fadd
jp
push
adc
xchg
lods
mov
stos
scas
xchg
lock
inc
icebp
in
mov
mov
ficoms
and
imul
fdivl
leave
fnsave
adc
ret
pop
cmp
aad
mov
icebp
xorl
push
push
and
lock
cmp
xorb
and
xlat
cld
mov
sub
jmp
mov
dec
fisttpll
rolb
inc
mov
adc
lret
sbb
mov
push
arpl
xchg
cmp
pusha
sbb
rolb
push
mov
mov
std
hlt
jmp
das
outsl
xchg
fst
ret
test
fxtract
xchg
loopne
inc
pop
jbe
adc
neg
call
xor
push
sub
mov
mov
insb
cmp
and
jp
fsubp
popa
mov
or
nop
push
in
add
xchg
jns
lea
push
push
push
sbb
and
cmp
inc
clc
test
mov
loopne
and
cmp
test
enter
fildll
xor
movsl
jge
fcmovnb
roll
mov
orl
cmc
xchg
and
loop
pop
outsb
push
sbb
std
test
test
out
bound
loop
push
mov
repnz
xchg
add
addr16
sub
test
dec
sbbb
sub
xchg
mov
testb
cmpsl
loopne
push
inc
popf
call
xlat
jbe
jmp
mov
inc
leave
mov
fcmovbe
sti
popa
xchg
imul
out
cli
or
inc
cmp
mull
jnp
mov
mov
pop
push
fisubl
xchg
gs
or
rorb
adc
xchg
loopne
pop
aas
or
sbb
mov
xor
adc
xor
in
enter
ss
pop
test
add
sub
stos
xchg
imul
sub
cmpsl
pop
aad
adc
std
jnp
repz
je
xchg
xchg
sub
rcrl
bswap
in
rclb
das
adc
in
dec
test
test
dec
sub
mov
lea
xor
lret
xlat
xchg
ret
mov
inc
mov
lret
mul
stc
repz
aaa
enter
test
rolb
movb
adc
ljmp
lahf
xorl
call
and
lahf
push
lret
add
sarl
inc
mov
and
shrl
jbe
push
ret
jmp
sahf
xor
test
mov
cmp
out
sub
lods
iret
inc
cmpsl
xchg
fldcw
mov
cmp
fstpt
out
cmpsb
xchg
test
fidivl
pusha
cli
sub
and
fimull
jae
test
test
and
jo
push
es
stc
test
mov
lret
cmp
icebp
fnstenv
leave
int3
xchg
sbb
aad
mov
idivl
mov
and
add
cmc
xchg
inc
sub
mov
dec
out
mov
dec
sbb
push
cmp
xchg
movsb
xor
cmp
sub
hlt
pop
sub
pop
xor
xchg
ret
popf
aas
or
push
mov
xchg
cld
push
ljmp
xchg
call
insb
pop
cmp
or
sbb
cmp
xorl
mov
gs
add
push
cltd
call
mov
lods
mov
inc
in
out
test
in
mov
sub
call
mov
outsb
lods
incl
pop
xchg
ja
loop
int3
rcrb
fsubrs
iret
sub
cwtl
decb
pop
repz
add
sbb
jmp
xlat
sub
mov
int3
push
fcmovne
cmp
adc
fstps
mov
aad
add
mov
jl
stc
sbb
xchg
add
xor
out
jl
add
cmp
sub
sub
and
xchg
push
imul
xchg
pop
pop
pop
xchg
mov
lods
cmp
sbb
bsf
push
push
int
insb
call
xlat
lcall
das
leave
inc
aam
sbb
in
adcb
pop
mov
push
fcmovu
repz
xor
and
es
mov
adc
dec
ficompl
test
data16
jle
jmp
ljmp
scas
mov
pop
leave
dec
pop
mov
sbb
repnz
imul
or
fbld
cmp
or
call
push
adc
jle
cld
sub
imul
cmpsl
adcl
call
xlat
je
test
xorl
test
adc
stc
mov
or
xor
or
loopne
imul
das
jno
jnp
add
andl
xor
ljmp
aaa
push
jle
mov
jle
movsl
inc
hlt
sbb
jmp
mov
add
or
pop
mov
test
imulb
jle
loopne
sbb
and
and
mov
and
mov
jbe
stos
push
jne
sub
inc
or
test
mov
lds
mov
movsl
fsubrs
xchg
add
loop
aad
lods
or
test
mov
push
mov
repz
cwtl
data16
rcrl
shrb
ss
dec
push
push
test
push
xchg
cmpsl
push
adc
aas
cmp
cmpsb
ficompl
sub
mov
test
lret
into
test
js
loopne
push
or
sbbb
inc
adc
daa
pop
mov
sbb
sti
jle
xchg
mov
imul
dec
xchg
cmpb
jl
sti
xorl
lods
imul
test
call
hlt
ficoml
jne
addb
loopne
or
insb
ficoml
inc
sahf
push
pop
mov
mov
test
outsl
mov
jp
cmp
and
leave
test
imul
add
push
ret
test
roll
mov
or
negl
jb
negb
sarl
das
icebp
es
xchg
mov
pcmpgtb
js
int
and
dec
gs
das
mov
jge
pop
int3
movsl
cmpsb
xchg
add
fcoms
mov
mov
sbb
add
cmp
movsb
and
in
icebp
push
inc
push
loopne
lret
cmp
pop
fbld
sub
sti
aam
mov
lods
bound
imul
inc
cmpsb
sti
int3
imul
fidivrl
call
cmp
pop
arpl
leave
sub
rcr
mov
pop
or
jg
dec
mov
pop
iret
stos
and
or
bswap
lods
sarl
outsb
test
sarb
aas
mov
fists
xchg
shrl
add
push
inc
cmp
dec
mov
xchg
or
mov
jmp
cs
lock
imul
adc
inc
ja
std
filds
test
lds
or
nop
mov
jp
nop
sbb
js
imul
jnp
inc
inc
jne
lds
push
or
ror
nop
mov
outsb
dec
out
aam
jle
scas
pusha
inc
sub
xchg
ficoms
inc
in
cmc
dec
call
push
pop
fidivrl
popa
arpl
push
test
lcall
test
push
gs
jae
sbb
push
out
cmp
mov
lock
rorl
inc
ret
or
out
push
mov
and
test
out
mov
fwait
loop
leave
sub
ds
mov
pop
les
repnz
pop
adc
jg
and
push
test
pop
xchg
lret
lods
jle
add
test
jmp
in
adc
pop
loop
inc
lods
sarb
lods
jge
sbb
or
sub
imul
aad
pusha
or
mov
fldt
push
sub
mov
adc
jae
sbb
sbb
imul
jmp
rcr
inc
lods
inc
jo
pop
adc
cli
add
mov
mov
dec
lods
adc
shll
cld
ds
test
js
xor
mov
and
filds
dec
insb
fidivl
ret
sti
xor
or
popa
jns
sub
sbbb
ja
push
rcl
mov
out
dec
xchg
jbe
xlat
sbb
inc
sub
xchg
mov
or
test
hlt
stos
dec
dec
cmp
pop
hlt
jnp
das
rcrl
xor
fisttpl
push
leave
std
and
jp
ret
testb
add
cmpsl
nop
enter
das
or
aas
lret
rol
xchg
inc
test
aad
test
adc
ret
sti
sub
subl
test
lahf
lods
xchg
nop
lds
xchg
std
mov
and
das
xchg
and
or
mov
cmc
jno
out
imul
je
lretw
rcl
ja
add
inc
adcb
xchg
jae
mov
movsb
xchg
push
or
stos
adc
loope
scas
mov
fwait
sbb
push
incl
std
or
sbb
cs
xchg
inc
rolb
push
xchg
adc
jge
or
mov
call
pushf
or
xchg
push
aas
adc
hlt
mov
scas
aas
cltd
decb
inc
sarb
fcoms
sub
jnp
ret
push
adc
hlt
shll
mov
xor
mov
mov
push
cmp
ret
or
or
jmp
test
adc
pushf
push
stos
das
xchg
jmp
cltd
rcll
inc
sti
sub
popa
or
imul
dec
mov
popf
mov
nop
call
adc
pop
xor
pop
xor
dec
lea
pop
push
jmp
and
or
loop
mov
pop
adc
js
insl
test
sbb
mov
shl
xchg
fldcw
shll
ds
mov
sub
xchg
decl
lret
jl
cmp
fildll
mov
ret
cmpsl
and
mov
jmp
fwait
cmp
xorl
stos
cld
mov
insl
hlt
lret
jle
movsb
pop
or
call
lods
in
and
imul
test
and
mov
cwtl
jno
lds
sub
xchg
xchg
cltd
shr
stos
pop
jne
fisttps
movhlps
inc
mov
xchg
add
push
clc
push
test
pshufw
xor
aas
rsqrtps
adc
jge
movsl
shll
mov
xchg
sbb
loopne
pop
idivb
mov
inc
mov
xchg
mov
jne
mov
adc
test
xor
add
cmpsl
or
pop
mov
movsl
inc
test
sbb
lods
mov
outsb
jecxz
sub
jmp
lret
nop
or
sbb
lret
push
cmp
mov
and
lret
fildl
push
leave
aad
ret
xlat
lock
rcll
mov
movsb
hlt
or
cmp
and
sti
sub
dec
in
push
jb
cltd
push
jmp
das
inc
inc
jb
push
jns
test
push
adc
sub
fwait
aam
decl
pusha
fcmovbe
sub
push
push
addl
dec
xchg
hlt
clc
inc
sbb
push
sahf
lock
cmp
sub
icebp
and
cmc
fucom
sbb
arpl
into
push
divb
lds
data16
mov
push
cmp
fldl
sub
sub
pop
aam
ret
sub
shlb
popa
aad
push
mov
and
xchg
xchg
push
cmp
pop
lret
daa
cmp
or
fldenv
stos
and
dec
cmpsb
ret
mov
xchg
xor
ret
int
imul
arpl
ljmp
xor
mov
and
sarl
loopne
push
pop
sub
push
xor
out
xchg
outsl
test
adc
rcrb
or
ja
ljmp
jb
rclb
stc
int
mov
stc
fidivl
lods
or
and
call
aad
fiaddl
ss
mov
sbb
inc
jmp
mov
shll
mov
push
repz
mov
xor
shrb
imul
out
adc
or
in
mov
inc
fsubs
xor
imul
push
mov
lods
roll
ret
pop
js
test
cmp
jb
repz
and
js
mov
gs
out
cmp
sbb
lea
arpl
add
addl
call
push
push
ss
push
daa
loope
jns
sbb
ja
scas
pop
rclb
outsb
cmp
rclb
aam
call
subl
push
mov
pop
arpl
sbb
cmp
mov
cltd
xor
and
dec
addr16
cmpl
leave
scas
outsl
mov
movsb
filds
popa
call
bound
xchg
pop
ss
jae
and
jns
push
ss
dec
adc
inc
es
arpl
mov
pop
ret
mov
lods
rorb
sbb
and
clc
lods
xchg
push
mov
push
sar
test
loopne
sbb
movsl
or
loop
lret
mov
pop
leave
sub
addb
in
lret
mov
pop
and
shrl
sbb
mov
sbbl
mov
xchg
imul
scas
loop
ljmp
cwtl
repnz
sub
push
cmp
and
stos
lret
add
fwait
adc
push
shlb
sbb
ja
inc
sub
in
adc
imul
jbe
add
leave
mov
mov
gs
cwtl
pusha
push
pop
outsl
int3
sbb
xchg
or
add
add
sbb
pop
sbb
push
pop
mov
dec
cltd
inc
push
test
and
add
lahf
mov
mov
popl
xor
push
jge
stos
scas
imul
and
fwait
xor
inc
lcall
adc
adc
inc
inc
mov
jnp
das
jb
xchg
jg,pt
shrb
mov
fldl2t
lock
test
and
into
js
dec
cmp
xchg
pop
test
cmpsl
fs
data16
jns
push
scas
add
jbe,pt
fisubrs
stos
mov
xor
imul
dec
shl
enter
fsubs
adc
cmpsl
and
sbb
shl
jb
jno
add
fcom
ljmp
fadds
ror
jl,pt
ficomps
int3
movsb
sahf
cmc
std
add
sub
subl
sti
insb
pop
add
mov
mov
xor
fistpl
cmp
dec
mov
jnp
inc
stos
inc
dec
fldt
pop
xchg
and
push
sbb
enter
dec
in
shrl
mov
jbe
xchg
in
aad
xchg
push
sub
out
jle,pt
adc
insl
cld
fsub
sub
xchg
dec
push
test
cmc
je
dec
xor
cmc
or
scas
sbb
in
xchg
sub
adc
sub
adc
cmp
xchg
decb
lret
mov
js
cmpsb
loopne
out
mov
add
lods
in
test
jecxz
int3
jae
int3
mov
adc
lods
aad
pop
shrl
sbb
cmp
movsl
mov
jmp
shll
enter
dec
rcll
imul
sarl
les
in
std
xchg
negw
push
loope
je
fldl
pop
rorl
in
cmp
sub
iret
mov
pushl
bound
add
add
jmp
adc
sbb
outsb
jo
mov
imul
xlat
loop
push
cwtl
dec
ss
enter
cmp
dec
mov
xchg
data16
aas
jno
or
push
mov
test
js
neg
and
or
scas
sub
je
shrl
mov
in
out
aam
cltd
mov
leave
cmpsl
lcall
or
enter
pushf
andl
stos
imul
mov
sbb
imul
movsl
dec
inc
xor
mov
adc
mov
test
imull
fistpl
mov
dec
jecxz
popa
sub
cli
es
sbb
punpcklbw
mov
inc
push
dec
adc
jbe
pop
mov
cmp
push
fistpll
out
push
jle
in
test
or
lahf
scas
aas
mov
sub
imul
jp
pusha
mov
and
stc
mov
les
sbb
sbb
sti
xchg
adc
xlat
scas
or
dec
pop
adc
inc
cmp
sarl
lcall
cmpb
mov
call
lret
dec
test
in
das
and
adc
jns
mov
sbb
cmpsl
pop
push
clc
fcomps
xchg
push
addr16
xchg
push
sbb
cmc
jmp
sbb
sub
fwait
inc
insb
xchg
outsb
dec
xor
cmp
sbb
sbb
scas
sub
xchg
js
lret
jo
mov
mov
cmpsl
mov
add
rorb
outsl
test
jp
scas
sub
xchg
fiaddl
movsb
and
in
xor
mov
and
or
iret
lret
add
out
mov
enter
cmpsl
jge
out
int3
cwtl
push
loopne
fdivrs
xor
cwtl
push
or
mov
mov
or
test
push
and
sub
out
movsl
pop
loopne
dec
into
lods
xor
fwait
scas
scas
push
sub
mov
bound
mov
sbb
iret
and
push
or
ja
push
push
jle
orb
loop
call
pusha
mov
mov
xor
imul
rorl
mov
sub
xor
pop
push
xchg
add
xlat
jb
int3
push
mov
add
sub
icebp
fwait
xchg
mov
fcmovnbe
mov
cmp
fisubrl
mov
pop
mov
das
push
adc
add
push
pop
js
stc
push
adc
arpl
pop
data16
icebp
fsubrs
fistl
cmp
fmuls
jb
scas
mov
pushf
adc
mov
xchg
mov
loop
imul
ss
test
mov
push
cmp
push
xorl
aas
in
inc
mov
imul
mov
adc
inc
test
sub
xchg
insb
mov
repnz
push
ret
xchg
pop
andb
loopne
fisubl
xor
ret
lret
cwtl
test
push
test
xchg
mov
or
gs
fstl
les
pop
sub
out
mov
sbb
xchg
cmp
call
into
sbb
fstpl
mov
out
movsl
repnz
sbb
push
xchg
adc
mov
adc
mov
cmp
cmp
cld
inc
add
ja
xor
push
call
mov
xchg
sub
pop
sti
pop
je
push
enter
das
call
mov
idiv
rorb
bound
call
test
adc
jnp
adc
add
xchg
lcall
xchg
stc
cmc
xchg
jns
imul
mov
enter
pop
stc
es
pop
repz
das
mov
xor
adc
sarl
push
and
cmpsb
sbb
xchg
push
pop
outsl
loope
adcl
arpl
daa
imul
cmc
sub
push
jle
inc
or
xor
outsb
lret
movsb
ljmp
hlt
sbb
cmp
pushf
xchg
data16
xchg
cmp
popa
inc
test
int3
jle
push
data16
xchg
push
lods
push
adcb
adc
pop
mov
sbb
jmp
ja
nop
mov
popa
xor
scas
shlb
cmp
fildl
fistps
mov
mov
pushl
or
sbb
cmpl
imul
jns
lods
daa
mov
push
mov
mov
mov
add
movsb
adc
popa
mov
mov
ret
xchg
xchg
fmulp
sub
jecxz
xchg
pop
jnp
in
mov
mov
test
mov
cltd
jb
outsb
fcmovu
mov
outsl
and
loope
mov
jl
sbb
aam
int3
or
fdivrl
insb
adc
mov
imul
pop
inc
subl
das
mov
inc
faddp
daa
push
xchg
sub
mov
cwtl
xchg
push
mov
test
inc
add
push
xchg
jp
pop
sarb
shrl
movsl
fidivrl
rcll
dec
or
lcall
repz
call
or
mov
dec
mov
or
popa
cltd
push
movsb
nop
cmp
lcall
push
add
push
push
in
pop
adcb
aad
movsl
jmp
push
push
adc
js
iret
dec
pop
scas
jns
pop
xlat
add
call
loop
mov
push
pop
test
adc
push
xorl
iret
cmpsl
jne
push
out
dec
push
andb
daa
in
fwait
dec
shl
sbb
or
jae
cmp
paddq
stos
lret
xor
add
fwait
addr16
test
or
inc
or
xor
or
adc
mov
ficompl
ljmp
xchg
jge
in
adcb
ffreep
pop
mov
mov
adc
inc
add
sub
stos
jbe
test
aas
pop
pop
test
mov
fs
rorb
dec
fistl
pop
cmp
movsl
imul
cli
fcomp
pop
lret
mov
dec
push
lods
dec
adc
or
mov
test
imul
lods
adc
enter
add
pop
ret
push
mov
xor
push
dec
and
notl
pop
movsl
mov
loopne
push
ss
test
add
dec
aaa
mov
xchg
js
daa
sub
pop
cltd
mov
mov
push
fnsave
dec
adc
and
aaa
pop
jp
xchg
xchg
ret
pop
lcall
in
push
in
insb
test
and
int3
add
sbb
mov
cmp
pop
loopne
mov
inc
lret
adc
cli
mov
in
xchg
xchg
shl
cmp
dec
push
dec
and
outsb
aam
push
out
mov
and
lods
mov
call
stos
lea
jle
mov
dec
adc
popf
ret
mov
adc
jp
out
adc
jbe
cmp
add
cltd
fisubrl
or
xchg
lods
add
scas
sub
inc
imul
mov
mov
adc
push
pushf
mov
movsl
jg
ret
test
movl
dec
inc
xchg
pop
test
pop
les
movsb
adc
xchg
ret
daa
mov
adc
mov
add
cmp
xchg
outsb
pop
scas
add
inc
xchg
fbld
ret
cmp
sbb
bound
les
mov
and
cltd
out
gs
fsubs
and
xchg
mov
add
dec
loop
test
gs
ret
ja
je
jl
call
xor
add
mov
call
mov
leave
cmp
add
mov
mov
call
xlat
les
mov
pop
adc
dec
cmp
test
into
inc
je
imul
xor
test
popl
xlat
aad
push
mov
mov
fs
or
sbb
sub
lods
lods
jo
and
jbe
sbb
fcomi
add
adc
xchg
and
xor
and
sti
adc
repnz
sarl
xchg
jns
cmpl
lcall
dec
in
loop
jle
sbb
dec
mov
xchg
xor
cli
jns
xchg
adc
jge
dec
dec
loopne
in
movsl
fsubrl
jb
jno
xor
test
or
add
test
cmpsb
cmp
xchg
test
adc
or
add
or
sbb
stc
fistps
mov
jge
dec
les
out
leave
push
mov
add
int
pop
fmul
xchg
mov
lds
jno
mov
mov
mov
adc
imul
js
fdiv
inc
fcmovbe
jp
nop
mov
cmp
stc
sahf
test
push
or
lahf
enter
out
cmpsl
push
outsb
adc
xchg
les
dec
inc
aaa
clc
jge
push
push
ficomps
fsubrs
loopne
mov
push
cmp
xor
imul
call
or
fsts
dec
int
rorl
xor
test
sub
sbb
das
jecxz
pop
lock
cwtl
sbb
test
movsl
sbb
stos
xlat
cmp
adc
add
push
pushf
sbb
adc
ja
cmpsl
push
or
jge
mov
sub
inc
shrb
push
mov
mov
adc
aad
sub
pop
mov
mov
les
fwait
sub
adc
xchg
pop
call
in
dec
sub
mov
fs
aas
bound
pop
sub
fmulp
mov
aad
or
ljmp
int3
adc
push
dec
push
inc
fucomi
imul
scas
pop
fidivl
xchg
outsb
lcall
and
pop
test
leave
adc
pop
call
mov
add
xor
movsb
jp
js
and
sub
push
mov
jb
imul
pop
xchg
push
rolb
adc
sbb
mov
call
test
or
cmpsb
or
and
enter
xchg
or
xchg
adc
sbb
or
mov
rcrb
add
je
std
cmc
call
or
pushl
std
dec
sub
inc
push
rcr
test
outsl
or
rcrb
dec
mov
imul
fimuls
ja
sarb
inc
hlt
xchg
scas
dec
imul
adc
sbb
push
adc
add
cwtl
xchg
daa
repnz
push
mov
or
adc
pusha
scas
gs
pop
fildl
lret
add
call
pusha
pop
pushf
scas
or
lret
push
cmp
adc
add
mov
popa
add
punpcklwd
xlat
int3
pop
adc
lret
pop
cmp
push
clc
ss
xchg
xchg
ror
jge
mov
push
cwtl
jp
sbb
mov
push
mov
pop
icebp
gs
cld
mov
out
mov
lret
into
sarl
push
mov
xor
push
sub
push
adc
dec
cmp
lock
in
pop
into
jp
cli
xchg
loopne,pt
sti
push
imul
jle
test
clc
cmp
fists
pusha
xchg
push
lret
mov
popa
repnz
sar
push
pop
xor
mov
dec
mov
or
ss
fidivrs
or
int3
mov
adcb
or
xor
push
enter
push
fimuls
leave
lret
sbb
xchg
sbb
fbld
rorb
dec
lea
mov
into
and
lock
call
and
xchg
cld
cmp
pop
fisubrl
jae
outsl
jno
sub
lret
cmp
dec
fnsetpm(287
icebp
cmpsl
in
push
stos
in
xchg
ljmp
adc
dec
or
test
jp
subb
mov
js
test
xchg
repz
push
mov
xchg
ds
inc
cmp
movsb
jge
pop
or
jb
lret
push
shll
mov
xchg
sbb
xor
fadds
int3
aam
outsb
fcomp
ret
inc
lock
sbb
push
jns
xchg
inc
sti
cmp
or
inc
ret
jns
mov
fcomp
add
jle
insl
mov
pop
nop
call
cld
and
cmp
cmc
xchg
test
or
jne
pop
mov
add
aam
leave
lahf
and
mov
cld
mov
in
stos
cltd
iret
push
jae
mov
in
sub
andb
loopne
xor
jb
xchg
push
fsub
fistl
dec
call
xor
adc
push
je
push
and
pushf
cwtl
push
or
fcomps
inc
pop
jne
or
xchg
das
or
out
arpl
cmc
pop
out
call
mov
xor
addr16
loopne
jl
mov
adc
paddw
cmpsb
std
in
sbb
icebp
or
out
xchg
dec
inc
in
mov
dec
xchg
jb
jo
xor
dec
aas
jl
pusha
in
pushf
dec
sbb
adc
push
cmp
jmp
push
adc
and
inc
fisubrl
cmpsl
mov
push
and
add
xor
sar
pop
inc
and
or
or
dec
xchg
jp
dec
adc
or
lcall
push
adcb
mov
jne
adc
scas
jp
inc
lods
inc
mov
lock
popa
pop
jne
rorl
add
les
call
push
div
jl
xchg
push
cmp
out
and
jne
and
fadds
pop
movsl
ffree
mov
adc
mov
xor
inc
imul
jle
push
sub
ss
aaa
xor
nop
rcrb
addb
jge
cmpsl
loopne
pop
xchg
mov
imul
add
inc
inc
loop
adc
push
stos
sbb
mov
pop
sub
ja
push
call
jg
and
jle
jge
iret
pop
jae
mov
lea
cmp
add
xorb
pop
aas
push
adc
push
pop
inc
cs
xchg
inc
add
aaa
sbb
adc
adc
std
pop
movsl
pop
add
adc
mov
push
inc
call
arpl
xchg
push
pop
and
loopne
push
push
scas
cmpsl
aad
in
fsubr
vminps
xor
ret
adc
mov
leave
fsubrp
xchg
inc
stc
inc
insb
inc
adc
mov
push
sahf
pop
das
push
lcall
icebp
pop
inc
jmp
add
call
mov
test
sub
jmp
mov
jne
sbb
sub
in
and
rol
sbb
out
loope
and
mull
rcl
sbb
jbe
aas
jno
and
dec
movsl
fldl
test
lret
xor
sub
ss
shrb
pop
mov
or
mov
fsts
adc
pop
int3
cmp
dec
call
arpl
or
or
jbe
or
xlat
lock
cld
cmp
push
xchg
cmc
adc
stos
inc
xor
or
and
sbb
adc
cmp
scas
pop
outsb
or
into
cmpb
mov
fnstenv
sbbb
jmp
jne
inc
push
insl
mov
int
dec
into
xchg
rolb
xor
stc
je
hlt
neg
enter
jo
jg
dec
pushf
sbb
lret
mov
push
lods
push
inc
xchg
lret
push
inc
lcall
or
adc
decl
add
iret
push
sub
and
movsl
hlt
pop
pushf
mov
and
fnstsw
jo
shlb
scas
outsb
mov
mov
add
cli
mov
subb
push
mov
shlb
mov
out
xchg
or
jae
and
rorl
sub
mov
and
outsb
fdivr
imul
iret
adc
add
jb
xorb
mov
cmpsl
imul
or
fidivrs
out
jae
fs
into
inc
and
shl
test
adc
iret
add
mov
or
rcl
or
push
fst
imul
mov
adc
movsb
aad
sbb
push
inc
ret
pop
cmp
mov
cld
mov
fdivp
stos
shlb
xor
cld
mov
xadd
data16
call
pop
or
inc
dec
jb
in
pop
fwait
xchg
rolb
push
fisttpl
les
jbe
cli
andb
xor
xchg
aad
push
aam
mov
hlt
xchg
test
sub
sub
mov
mov
stos
outsb
out
xor
insb
lcall
loopne
cmpsl
adc
pop
dec
subl
fdivrl
xchg
sti
cld
es
jg
outsb
xchg
mov
xor
mov
ljmp
jno
movsl
decl
aad
shll
mov
je
pop
adc
xorb
icebp
adc
push
test
adc
or
dec
cmpsl
xlat
loope
sti
pop
inc
ds
enter
pop
aad
add
mov
cwtl
push
pop
mov
pop
push
push
test
add
test
inc
dec
stos
mov
push
pushf
imul
add
lods
outsl
push
push
inc
movaps
cmp
sub
xor
add
fisttps
sub
lcall
xchg
test
cmp
push
faddl
mov
cmc
lock
sbb
pop
xchg
rcr
mov
sbb
imulb
lock
dec
test
jno
mov
or
outsb
cmc
sarl
and
inc
nop
ret
call
dec
aam
fs
fst
imul
leave
gs
in
imul
mov
adc
mov
movsl
adc
fstl
jl
in
add
jbe
shrb
jmp
or
jb
adc
inc
test
into
int3
dec
sbb
filds
enter
jae
loop
jne
cmp
data16
lods
mov
push
sahf
ds
xor
lret
xorb
lock
nop
and
aam
push
test
popa
and
mov
push
mov
xor
mov
push
cmp
mov
inc
dec
dec
mov
mov
pop
stc
adc
cwtl
imul
daa
mov
pop
pop
std
cltd
rorb
stos
enter
insl
fisubs
addr16
call
mov
fcmovnbe
je
imul
pushf
jns
mov
or
in
jecxz
dec
cmp
push
adc
clc
lret
jmp
pushf
dec
scas
aaa
mov
rcrb
pop
pop
flds
mov
cmp
mov
cmp
mov
add
jnp
ja
xchg
sub
xchg
fisubrl
mov
adcl
push
mov
repnz
lods
call
out
adc
mov
sbb
dec
arpl
notl
sbb
push
dec
mov
sbb
mov
adc
into
iret
fstl
sahf
mov
idivl
jecxz
mov
mov
lock
sarl
pop
push
mov
test
dec
mov
and
mov
andb
ja
mov
xchg
imul
test
test
dec
add
mov
into
fisubrl
filds
or
scas
dec
scas
test
fistl
shrb
inc
cli
jbe
push
les
adc
push
adc
add
imul
inc
pushf
shr
scas
pop
sub
jbe
or
xor
cmp
in
mov
dec
pop
jmp
pop
adc
aaa
xchg
sahf
orb
adc
inc
adcb
xchg
or
inc
sbb
adc
les
dec
popf
int3
mov
and
pop
dec
push
jge
add
std
in
cmp
lods
adc
push
test
pop
xor
push
mov
push
in
fdivr
lea
jnp
clc
std
cmp
arpl
pop
and
loopne
mov
adc
into
pop
add
or
dec
dec
out
jg
jl
in
pusha
fstpt
stos
jp
push
xchg
imul
jl
out
mov
sahf
out
repz
push
and
cmp
push
dec
jle
adc
push
sbb
dec
leave
push
jle
lods
dec
sbb
loopne
ljmp
cmp
shll
rclb
nop
push
test
int3
xchg
inc
mov
pop
and
jp
dec
popl
loop
iret
imul
inc
test
call
push
imul
add
jecxz
sti
sbb
icebp
subl
sub
repnz
xchg
cmp
fiaddl
scas
ds
inc
imul
movsb
xchg
jle
cwtl
xchg
inc
mov
es
test
mov
jno
sarb
mov
rorl
pop
scas
mov
imul
sbb
aad
cmp
mov
mov
cmc
jo
dec
inc
sbb
dec
push
xchg
out
or
fnsetpm(287
bound
xor
insl
jns
cmpsb
pushl
outsb
mov
cmpsl
aaa
mov
mov
es
xor
jg
ret
push
sarl
and
scas
popa
cmp
mov
scas
push
jge
fmuls
inc
add
testb
cs
push
jp
imul
xor
scas
add
cmp
cli
call
add
push
imul
mov
jmp
push
lcall
aam
loopne
cltd
inc
push
lret
mov
lods
adc
sbb
push
and
jnp
enter
push
rolb
xchg
mov
sub
imul
aaa
push
arpl
xor
call
pusha
fisubrl
push
jbe
sti
inc
fistpl
ret
xchg
sarb
addl
xchg
sbb
inc
outsl
in
xchg
ss
cmpsl
xor
cmpsl
and
sub
cltd
in
cmp
push
imul
pop
es
and
jge
sbb
into
push
cmp
and
jl
into
iret
in
imul
xchg
push
add
mov
in
xchg
push
xchg
and
in
sub
xchg
xchg
mov
push
dec
inc
xchg
lock
es
lahf
bound
mov
mov
and
inc
popf
xor
jb
cli
jg
lea
push
xchg
push
lcall
push
mov
adc
ret
loopne
imul
adcl
in
enter
cli
push
out
adc
scas
xor
sbb
mov
sbb
mov
xorb
sub
bound
outsb
lea
jmp
lock
sub
es
in
sbb
cmp
mov
mov
sbb
lahf
rcl
outsb
imul
jle
push
scas
test
mov
ss
sarl
pop
xor
jp
add
cli
std
inc
xchg
jae
jl
cmpsb
cmp
fcomps
loope
xlat
les
sbb
fldl
adc
mov
lds
popa
xor
aad
sub
repz
xor
mov
sub
imul
mov
lods
mov
ljmp
es
gs
fmull
imul
mov
scas
imul
or
pushf
jae
adc
imulb
test
stos
push
out
xchg
call
aad
mov
cli
into
mov
mov
inc
pop
push
data16
cmp
sbb
xor
insl
push
mov
adc
sbb
fcoml
pop
pop
jmp
add
inc
add
jbe
cmpsb
and
sbb
mov
imul
int
sti
mov
aas
int3
jae
or
pushf
lods
adc
jle
ret
add
mov
shl
xor
add
inc
pop
or
mov
mov
sbb
hlt
xlat
popa
push
movsb
cmp
subl
js,pn
xorb
inc
cmp
imul
push
push
pop
lcall
leave
jno
stos
ds
cmp
push
push
mov
out
adc
addl
jns
add
in
adc
push
lods
scas
mov
pop
xchg
cs
test
push
jmp
mov
add
add
in
test
xchg
pop
pop
aad
add
xor
out
mov
jns
es
cltd
sarl
or
cmpsb
sbb
subb
addb
in
add
pop
jb
lock
mov
lods
dec
lret
adc
mov
into
xchg
out
test
mov
cmp
pop
shr
fbstp
nop
xchg
ljmp
repz
enter
movsl
pop
mov
mov
mov
stos
jno
xor
sbb
dec
fists
jp
dec
daa
addl
into
mov
in
and
cmp
mov
lcall
insb
inc
lret
test
adc
lahf
lods
leave
filds
sub
pop
inc
xor
jno
in
mov
jl
jmp
pop
bound
push
and
cltd
pop
add
xor
loopne
out
pop
shrl
cmp
sub
cmp
cwtl
inc
or
loopne
fists
xchg
sbb
rorb
jo
insl
inc
add
insl
outsb
arpl
and
ljmp
mov
or
jns
je
add
sbb
inc
mov
and
xor
pop
jb
test
shrb
jb
inc
pusha
rcll
push
pop
stos
sub
or
ja
sbb
mov
inc
cmp
imul
out
add
daa
xchg
mov
push
xchg
sahf
sti
je
dec
push
pop
push
pop
cmp
pusha
mov
or
and
enter
or
dec
push
rclb
dec
inc
lock
fmuls
lea
jns
rep
popf
xchg
lock
mov
call
xlat
dec
and
push
cmpsl
cs
jp
sub
imul
into
sbbl
mov
test
sub
iret
icebp
pop
cmpb
pop
jl
imul
push
push
adc
pushf
loopne
add
jo
daa
or
pusha
xor
pop
in
repnz
insb
mov
dec
mov
jmp
enter
inc
mov
lret
insb
jp
mov
push
in
loopne
jbe
into
xchg
jno
into
cs
lods
sar
leave
add
ret
insl
fs
movsb
adc
and
in
sti
xchg
mov
cltd
push
or
pop
in
lcall
jp
jo
movsb
add
mov
lods
mov
inc
lcall
shlb
mov
jl
sbb
fildll
out
jb
test
xchg
gs
inc
sbb
adc
mov
mov
or
decb
dec
and
or
decb
adc
xor
jmp
and
mov
pop
push
and
call
push
jb
les
mov
fsubl
outsb
ds
subb
ja
ljmp
inc
insl
jp
ret
xchg
mov
sahf
cmp
jl
push
jle
in
and
push
or
scas
dec
mov
nop
sbb
mov
cmpsl
loope
push
xor
movsl
call
mov
test
out
stos
cli
dec
rol
push
mov
adc
jb
cmpl
cmp
and
or
ljmp
stc
insl
push
cmp
push
or
int3
sbb
push
cmp
mov
aaa
pop
or
add
push
adc
in
xchg
and
pop
mov
pop
cmc
adc
orb
push
xor
sbb
push
xchg
das
adc
pop
aaa
shll
in
jp
ja
jmp
sti
aaa
and
push
jb
inc
adc
popf
cld
aam
daa
or
loope
scas
or
add
pop
lods
test
jge
fidivrl
test
ret
sub
xchg
sbb
sub
or
xlat
hlt
enter
sub
test
aad
insb
lea
sar
fldcw
orb
ret
jno
sbb
imul
aam
mov
adc
outsb
cmp
push
imul
leave
pop
test
and
lret
cs
add
bound
leave
pop
fldt
pop
sbb
rcl
cmpsb
call
test
mov
fistps
lock
mov
jmp
pop
in
lods
push
popa
push
or
hlt
push
mov
dec
xchg
shll
imul
scas
xor
movsb
ljmp
lds
mov
add
bswap
imulb
add
sahf
push
loopne
pop
imul
call
into
push
xlat
jmp
xchg
loop
sti
push
xchg
outsl
xor
or
negl
pop
mov
movsl
jns
add
xchg
sbb
repnz
ficomps
pop
mov
fidivl
outsb
jg
inc
test
sub
jne
mov
pop
mov
xor
pop
mov
mov
out
movsl
push
add
insb
dec
std
inc
iret
mov
or
out
in
jp
inc
push
insb
insl
adc
jp
mov
aaa
xchg
iret
aas
jne
stos
xor
out
and
or
jno
stos
adc
mov
mov
lret
shrl
aam
repz
xchg
loopne
rcll
or
or
roll
sbb
lret
sub
mov
in
jle
mov
imul
jb
mov
or
ret
dec
and
in
bound
push
inc
loopne
cmp
lcall
mov
jecxz
or
push
ret
or
rorl
fistpl
sub
cmpsl
dec
mov
or
inc
sub
adc
adc
xchg
rclb
push
inc
pop
jne
mov
pop
mov
lock
pop
outsb
ficoms
or
cld
jb
add
and
fnstsw
inc
jno
sbb
dec
sub
stos
fdivrp
es
pop
mov
mov
ret
xchg
test
jge
inc
and
xor
cmp
stos
sbb
test
movsb
mov
stc
arpl
xchg
push
ljmp
xlat
adc
mov
movsb
add
adc
fimuls
pop
jo
xchg
lods
dec
jle
add
dec
mov
icebp
rol
jb
mov
iret
adc
divb
adc
shl
jle
pop
ljmp
or
dec
adcb
mov
mov
sbb
or
test
inc
subb
adc
rorb
lcall
mov
jecxz
mov
dec
fucom
jmp
mov
in
jbe
iret
jb
lods
enter
sub
sub
jb
and
fisubl
aas
das
jg
add
push
push
jl
movsb
cmp
lret
mov
cwtl
inc
jae
ret
adcl
lea
fldl
aam
imul
mov
mov
sarl
mov
mov
js
shrb
cmc
lock
ss
sub
movsl
mov
push
mov
jge
mov
aam
add
mov
cmp
arpl
jbe
cmp
imul
test
push
scas
xchg
jp
adc
scas
add
sub
cmpsl
cld
adc
mov
shl
and
ftst
sbbb
inc
pop
inc
or
pop
push
cld
clc
dec
inc
or
shrb
aam
mov
push
and
std
and
call
int
xchg
xchg
ljmp
lcall
sbb
aam
mov
inc
cmp
cmp
sub
add
fisubrl
rclb
adc
lds
outsb
mov
mov
xor
cwtl
pop
sarb
cmpsl
xor
mov
inc
dec
sbb
jno
daa
fsubl
repz
lret
jnp
aaa
mov
cmc
mov
and
and
rcrb
fbld
or
jge
cs
xchg
stos
jae
mov
xor
cmp
dec
jns
fnsave
outsl
and
jl
add
mov
jle
test
sahf
add
test
jno
cmpb
fsubrp
inc
out
ja
lock
mov
mov
jo
pop
stc
lock
xchg
decl
into
fdivs
bound
xchg
adc
lds
cmc
mov
std
mov
and
lea
adc
stos
adc
loope
mov
loope
insb
mov
hlt
pop
insl
scas
in
mov
into
andl
mov
add
cmp
out
imul
lock
neg
pop
dec
pop
xchg
cmc
jo
push
loop,pn
enter
test
into
mov
aad
or
xchg
cmp
lock
add
sbb
shl
pop
and
jae
movsl
push
xchg
sbb
int3
push
sub
mov
cmpsl
es
or
cmp
leave
int3
fcomp
add
js
xor
das
and
insb
cwtl
cmp
cmp
cltd
sbb
mov
aad
add
iret
dec
xchg
sarb
aas
shl
xlat
aaa
into
sub
mov
sbb
std
icebp
dec
xchg
lods
in
ret
insb
push
in
into
addb
in
or
pushf
cli
ja
movsl
movsb
inc
int3
sub
insl
mov
and
nop
out
stos
adc
sbb
rcll
imul
lahf
sbb
fucomi
arpl
sti
cmpsl
jl
pop
cmpsb
mov
add
movsb
add
push
mov
stos
push
outsb
mov
fiadds
jo
adc
jb
fidivl
push
jp
mov
jg
idiv
loop
fcom
hlt
inc
bound
sub
movsl
test
stos
mov
sti
mov
jnp
bound
xchg
pop
das
sub
test
add
movsb
jbe
sti
in
dec
cmp
push
xor
sahf
aas
fwait
mov
bound
fldenv
lcall
pop
std
negl
int
mov
inc
inc
shlb
dec
add
push
jb
enter
push
or
popa
sbb
int3
cmpsl
pop
std
daa
shl
adc
scas
add
xor
icebp
imul
outsb
mov
inc
lcall
das
xchg
sub
and
sub
in
xchg
push
iret
pop
pop
mov
mov
mov
sbb
es
nop
xchg
cmp
aad
sub
lret
pop
jle
cs
shrl
addl
xor
mov
mov
mov
sbb
scas
cmpsb
mov
jns
loope
add
pop
or
repz
or
loope
inc
pop
imul
mov
sbb
inc
cltd
enter
jno
cmp
aam
ret
pop
mov
jl
inc
cld
fistpl
mul
mov
cwtl
push
sub
xor
inc
cmp
ljmp
sarl
inc
inc
cmp
mov
imulb
aas
clc
adc
cmpsl
fnstenv
insb
cmp
sub
push
in
dec
rep
mov
pushf
sub
pop
sub
clc
sbb
or
pop
cltd
inc
pusha
or
test
push
call
sub
and
or
flds
fsubl
cmpsl
shl
sub
movsl
in
sti
lcall
inc
mov
mov
aam
push
mov
jge
adc
cmp
mov
imul
adc
cmp
dec
shll
and
fisubrs
mov
fisubrl
xor
es
and
dec
lret
jno
mov
scas
das
mov
notl
dec
ret
pop
jb
add
out
ds
div
bound
test
cs
push
mov
lret
add
divb
in
in
fs
jo
sub
lahf
sbb
jmp
subl
push
push
pop
aam
fcmovbe
pop
jle
js
andb
shrb
ja
mov
imul
or
cmpsb
dec
cmpsb
lahf
lret
or
shrb
jg
incb
cmp
ss
ret
pop
push
add
cmp
adc
lds
jno
das
or
imul
pop
mov
push
ss
mov
lahf
mov
sbb
pushf
or
clc
or
cmp
in
ret
xchg
int3
jnp
les
xchg
dec
mov
out
ret
ja
mov
sub
cmp
lea
out
scas
mov
mov
test
test
xlat
addr16
mov
ljmp
outsb
nop
pushf
xchg
aam
dec
aaa
data16
or
test
xchg
push
xchg
inc
mov
push
mov
lret
mov
loope
jns
subl
aam
cmp
stc
xchg
add
mov
xchg
test
adc
out
repz
cmp
aaa
sub
sbbl
sbbl
mov
fwait
es
cld
jns
add
and
fwait
jb
add
pop
xor
dec
das
fmull
loop
fstpt
lods
movsl
sbb
daa
clc
imul
sub
insb
mov
pop
adc
aad
push
rcrl
int3
push
stc
add
pop
rclb
das
push
push
cs
pop
stc
movsl
andb
pop
inc
mov
sbb
mov
cltd
leave
iret
lods
fbstp
jns
repnz
ds
ret
stos
dec
outsl
fisubrs
lahf
imul
lahf
push
std
jb
scas
outsb
ja
jmp
mov
imul
jno
cld
ja
pusha
ss
in
mov
sbb
inc
dec
les
pushf
pop
dec
div
iret
pop
sub
adc
dec
sbb
loope
daa
or
cmpsl
mov
stos
movsb
cmpsl
cmp
scas
int3
fmulp
fnstcw
xor
ljmp
sub
dec
push
aas
dec
add
mov
dec
mov
push
test
cmpsl
fsub
adc
and
movsl
test
xor
add
int
fwait
out
adc
sbb
fucomp
pop
leave
add
add
outsb
ljmp
lods
push
outsb
push
and
aaa
push
outsb
or
das
mov
int3
adc
inc
add
out
adcb
push
ret
cwtl
imul
js
pushl
and
mov
ret
push
aad
fmul
dec
pop
pop
add
add
pop
ficompl
sar
add
cmp
inc
popf
mov
cmp
xchg
jmp
sti
jecxz
lods
xor
inc
lcall
stos
movsl
push
outsb
jae
xchg
bound
jne
cmp
popf
ret
clc
outsb
push
fidivrl
aas
ss
ret
push
inc
sub
or
mov
cld
stc
lret
int
xchg
or
js
pop
sub
les
stc
lods
jge
mov
mov
loop
je
add
dec
cmp
add
add
test
inc
loope
adc
ja
xchg
jg
adc
repnz
nop
sbb
mov
mov
imul
adc
cmpsl
adc
das
pop
jmp
sbb
xor
mov
adc
lods
mov
fucomp
enter
sbb
or
stos
push
ss
jb
and
psllq
adc
dec
fsubs
push
xchg
je
mov
push
dec
and
pop
jmp
jp
pushf
push
jecxz
jmp
lds
imul
inc
jns
shl
push
jge
test
xor
fsts
andb
dec
divl
add
add
xchg
rorb
jmp
iret
sub
mov
in
pop
mov
xor
or
jg
adc
fstpt
jle
jno
enter
sub
sbb
xchg
mov
sbb
push
xor
lods
pushf
mov
jae
push
loopne
arpl
fistps
xor
sub
mov
loopne
mov
xchg
push
or
pop
pop
sub
inc
sub
cwtl
xlat
ja
push
scas
mov
sub
cli
sub
push
sub
nop
imul
addl
mov
arpl
sub
loope
xchg
aad
push
add
dec
cmpsl
dec
push
repnz
pop
xor
aas
addb
mov
iret
aas
nop
xor
xlat
ljmp
enter
fwait
int3
out
aas
jo
sub
cld
dec
xor
repz
call
cmpsl
or
rcl
pmaddwd
jl
pop
push
mov
and
std
xchg
aam
jae
add
out
lods
mov
testl
aas
lods
and
test
dec
ds
and
lcall
imul
xlat
scas
imul
jno
dec
adc
lods
xor
ja
pop
inc
or
mov
mov
push
aad
sahf
stos
add
pop
loop
cmc
pusha
inc
cmp
mov
fnsave
or
dec
movsl
fucom
lret
rolb
push
cs
pushf
aas
dec
sub
inc
cmp
enter
pop
cli
mov
mov
add
ret
dec
push
loopne
sub
rcr
pop
xchg
ficoms
pop
imul
mov
aaa
mov
dec
inc
scas
sahf
cmp
in
lods
cmpsb
lret
stc
jle
mov
imul
lcall
xor
mov
lds
mov
imul
push
imul
inc
pop
ja
lret
dec
dec
dec
imul
inc
jg
mov
xchg
mov
int3
push
jl
add
pop
jge
cwtl
enter
xchg
push
dec
popf
xor
inc
mov
jp
dec
or
imul
test
mov
pop
mov
sub
mov
mov
dec
sahf
shlb
mov
pop
andb
push
popf
cmp
mov
aas
movsb
jle
addb
aaa
addl
sarb
mov
adc
aaa
in
test
popl
sbb
cmp
jns
ja
inc
xchg
dec
test
out
or
xchg
mov
sbb
push
test
cmp
movsb
add
push
push
test
lds
imulb
cmpsl
or
insb
stos
mov
pop
cld
jge
dec
movsl
pop
dec
mov
jmp
dec
lods
call
and
xchg
mov
mov
push
out
int3
or
mov
dec
shr
rorb
mov
add
imul
jns
mov
push
imul
loopne
fs
cmp
xor
ret
aad
pop
xorl
loopne
or
pop
sbb
std
pushf
cmpsl
rcr
popa
lods
imul
mov
sbb
push
push
xchg
pushf
cmp
test
cmp
push
mov
mov
pop
xchg
mov
and
vmwrite
or
inc
stos
and
rcrl
jne
jle
inc
scas
movb
push
jo
sbb
in
jbe
mov
call
jp
in
pop
icebp
adc
nop
add
dec
pop
mov
mov
adc
push
adc
shrl
cmp
sub
inc
push
scas
and
mov
sub
push
or
xor
mul
js
xchg
sbb
mov
movsb
inc
pop
jl
cmc
sub
mov
adc
imul
insb
js
mov
jmp
mov
adc
ja
scas
aas
fcmove
mov
xlat
adcb
loopne
rcrb
jb
jbe
xchg
aam
add
adc
mov
mov
mov
mov
imul
sbb
sub
stc
fisubs
sub
scas
sbb
xchg
in
inc
sarb
push
fsub
lods
dec
cmpsl
ret
sub
jbe
cmp
iret
xor
sub
dec
inc
insb
cmp
iret
pop
adc
popa
ret
pop
jle
xorb
or
push
and
call
dec
inc
nop
int
test
lret
cmpl
pop
dec
cmp
jge
addb
sbb
in
jmp
xchg
dec
xchg
add
add
add
mov
adc
aas
js
pop
cltd
fs
rcl
sbb
inc
in
push
pop
mov
mov
sub
aaa
in
fistpll
mov
xor
push
enter
inc
or
notl
fisttps
mov
push
jmp
adc
cmpsl
cmp
adc
or
fisttpll
stc
jbe
mov
jmp
stos
xorb
out
adc
movsb
sbb
rclb
sahf
test
jnp
imul
lret
cmpl
cs
loopne
jge
add
adc
stc
pop
fstpt
imulb
fiadds
pushf
add
push
roll
xlat
inc
xlat
sbb
repz
lret
orl
lcall
cmpsl
lret
shlb
push
aaa
lock
jg
xor
mov
addb
push
stc
xor
xchg
cmpsb
in
subl
mov
or
fisubrl
lret
xor
cmp
cwtl
movsb
or
inc
pop
sbb
push
testb
adc
cmpsl
push
les
movsl
enter
bound
xchg
iret
test
test
dec
into
fadd
sub
imul
pop
inc
cmp
jae
xchg
mov
jns
sub
jo
jg
in
ja
inc
shr
out
jge
nop
les
jmp
lahf
mov
sub
in
xchg
sub
pop
jmp
int3
xor
scas
inc
out
mov
fisubrl
mov
add
es
fdivrp
and
mov
cmpb
xorb
call
push
dec
mov
and
xchg
popa
ret
ljmp
sub
daa
inc
fcoml
imul
push
cld
cmpsb
dec
mov
fucomi
xlat
xchg
inc
add
adc
shll
add
lods
inc
orb
call
imul
pop
xchg
push
mov
inc
cmpl
out
icebp
xor
scas
inc
push
cmp
pop
aad
mov
jbe
roll
xor
divl
sbb
call
cmp
gs
fildl
sub
jg
int3
cmpsl
push
and
cmc
int3
repz
sbb
rorl
imul
jne
xor
mov
push
gs
in
pop
pusha
jecxz
and
sbb
push
repnz
push
es
call
or
add
mov
leave
xchg
push
mov
stos
mov
mov
xchg
xchg
xchg
ja
mov
mov
lds
add
mov
movsl
aas
icebp
lock
pop
cmp
jns
xchg
lret
incl
push
call
inc
cmc
les
push
mov
enter
push
test
sti
or
test
and
sub
pop
add
sbb
imul
lods
loope
std
dec
mov
imul
sbb
scas
push
jle
pushf
rclb
inc
into
or
xchg
cmp
testl
mov
aad
cmpsb
mov
xor
cwtl
popa
mov
mov
enter
push
lods
xchg
imul
add
and
xchg
mov
mov
mov
mov
inc
fsub
cmp
iret
push
popf
mov
dec
fbstp
leave
jae
or
iret
adc
mov
shll
mov
sub
lock
cmc
xor
int3
and
xor
scas
push
ficomps
lahf
adc
mov
cwtl
cmp
shr
loope
xchg
xchg
loopne
sbb
jp
stos
sbb
lret
cwtl
ds
xor
fistpl
sub
jp
mov
jge
add
sbb
xor
xchg
fstl
mov
movl
xchg
mov
push
imul
add
push
mov
cltd
inc
inc
lock
shrb
pop
push
movsl
jne
clc
push
loopne
stos
aaa
jb
scas
mov
pop
decb
call
mov
mov
ljmp
adc
pusha
popf
popa
pop
enter
aas
jbe
int3
push
cmp
jo
cld
call
xorl
add
jge
stos
mov
and
or
in
int
mov
shr
jne
mov
rclb
ja
in
dec
test
push
push
rcr
cmp
lcall
call
mov
sarb
push
or
mov
and
mov
in
rol
adc
shl
jno
nop
call
in
test
out
jno
fwait
push
jl
sbb
shrl
jmp
roll
mov
pop
xchg
mov
or
sbb
ds
jge
sub
lock
jbe
enter
lret
insb
jae
dec
scas
ret
push
movsl
daa
test
loopne
mov
idivl
out
imul
test
andl
ss
sub
sbb
xchg
jge
loope
adc
sbb
cmp
sbb
lods
scas
fbstp
inc
test
sbb
sarb
std
push
or
push
test
cmp
rcll
loopne
xchg
aas
inc
aam
pop
in
jb
mov
popa
sarl
into
sub
adc
or
ljmp
out
inc
das
aad
mov
sti
testb
daa
inc
cwtl
push
or
js
add
ffreep
mov
js
xchg
imul
cmp
sub
push
cmp
adc
cmp
adc
adc
dec
stos
sbb
test
adc
push
cmpl
push
inc
add
fbld
push
xor
call
and
jns
ret
clc
dec
scas
or
xchg
lea
sbb
inc
mov
push
imul
sti
cs
mov
xchg
mov
or
mov
movsb
cs
push
adc
int3
mov
push
test
xchg
nop
push
leave
xchg
ret
jge
fisubrs
dec
add
aam
aam
call
adc
ja
mov
jmp
xor
div
xor
lods
mov
outsl
or
push
fdiv
int3
cmc
dec
inc
xor
adc
call
add
cmp
push
adc
push
rol
mov
data16
lret
lret
stos
pop
nop
mov
sar
xchg
rcl
in
loopne
mov
jo
pop
aad
or
push
sbb
push
inc
sti
js
xor
inc
imul
or
push
mov
iret
and
mov
adc
push
push
and
mov
movsl
imulb
enter
es
jg
sub
repz
mov
stos
jbe
cmc
pushf
cmp
repnz
out
iret
fimuls
imul
icebp
arpl
shrl
inc
jae
jge
cltd
arpl
add
icebp
sbb
mov
scas
scas
sub
lock
iret
insl
in
das
aaa
icebp
xchg
mov
fstpt
dec
into
rolb
or
outsb
aaa
pop
mov
iret
push
add
pop
lret
push
jle
xor
or
cmc
sti
xor
insl
fisttps
jl
ret
push
pop
imul
pop
and
das
mov
or
movsl
out
pop
mov
mov
push
test
dec
mov
lcall
mov
mov
icebp
cmp
or
inc
push
icebp
insb
sub
iret
jmp
sarb
add
inc
lret
loopne
test
addr16
leave
mov
push
hlt
clc
lods
dec
js
or
mov
push
push
lods
xchg
cmp
mov
xcrypt-ecb
cmpsl
dec
je
in
outsb
bound
mov
test
bound
jle
test
pop
adc
ds
ret
sub
stos
outsl
gs
data16
or
push
sti
cld
mov
das
subb
push
mov
js
dec
mov
ja
dec
imul
inc
mov
aam
out
mov
outsl
and
ja
cmp
ds
rclb
sbb
inc
xchg
stos
jp
outsb
test
sbb
leave
aaa
leave
outsb
cmp
fcompl
ja
leave
test
orl
dec
inc
and
push
ds
clc
push
rorb
movsl
mov
sbb
dec
jle
adc
mov
adc
or
xor
fisubrs
movsl
mov
je
aas
ficoms
loop
adc
push
ret
sbb
lds
push
rolb
lahf
pop
aam
hlt
bound
sbb
ss
mov
xlat
pop
push
sbb
cmpsb
aaa
mov
add
push
xchg
loope
sahf
sbb
mov
pop
dec
repz
stos
ret
in
fiadds
jne
addr16
scas
push
test
lods
jp
mov
rorl
adc
jbe
xchg
mov
aas
lock
or
lret
mov
enter
xor
xchg
fidivrs
dec
mov
add
xor
dec
dec
lods
scas
or
or
imul
call
inc
cmp
rorb
pop
push
mov
jo
imul
mov
pop
jg
mov
xchg
cmpb
inc
adc
clc
cmp
and
gs
loopne
dec
sub
push
rclb
sarb
fdiv
rcr
xchg
cli
rorb
pop
test
xchg
fbstp
jmp
out
jne
cmc
outsl
add
push
cmp
ja
lahf
int3
rclb
out
mov
movsl
in
fstpl
sbb
cmp
jno
in
scas
mov
fnstenv
add
xor
test
aad
or
push
dec
cmpsb
ficoml
lret
fwait
add
aaa
and
jb
rorl
pop
cld
ret
jecxz
popf
xorb
popf
out
mov
lock
sbb
repz
push
mov
jp
adc
pop
push
push
adc
aam
jbe
mov
push
sub
mov
imul
cmpsb
test
xchg
imul
call
xor
loopne
inc
or
dec
push
push
cmp
pushf
roll
aas
jne
mov
xor
jb
imul
fwait
shrl
mov
add
aam
pop
leave
jns
test
cmp
popa
movsbl
and
push
jl
pop
pop
sbb
push
mov
sbb
cmp
adc
call
push
sbb
mov
imul
test
mov
xor
jne
push
mov
xchg
adc
mov
shlb
mov
stos
ret
scas
jnp
cmc
fs
imul
jne
sub
push
in
inc
ljmp
stos
pushf
test
xor
shlb
pop
hlt
pop
cmp
mov
negb
dec
cmp
aam
movsl
aad
rol
adc
bound
scas
xor
cltd
mov
adc
aam
gs
sar
incl
cmpsb
xlat
loopne
shr
lahf
loope
out
addr16
sbb
mov
ret
repnz
pop
rclb
push
scas
insb
mov
adc
les
inc
push
pop
movsl
loopne
enter
into
push
cmp
mov
and
cmp
addb
mov
add
jnp
xchg
sub
push
add
rol
jp
jp
xchg
int3
out
les
repnz
xchg
jg
fcoml
lods
imul
lock
dec
addr16
int
leave
mov
pop
inc
xchg
push
les
outsb
dec
xchg
imul
cmp
pop
add
imul
fxch
out
sub
xor
sub
test
loopne
enter
pop
lret
cmc
sub
es
insl
imul
decb
or
mov
out
xchg
mov
adc
push
dec
ret
dec
lea
sahf
sub
fildll
sbb
push
push
in
push
push
adc
jb
popl
pop
pop
dec
dec
mov
xchg
adc
jne
mov
outsb
out
mov
cmp
jnp
cmp
push
xor
leave
fwait
icebp
add
cmp
mov
in
call
xchg
xor
or
jo
xor
mov
mov
inc
mov
xor
ret
push
repz
add
lods
in
dec
jne
add
jns
push
fsubrs
push
addl
js
cmc
mov
ds
icebp
jo
arpl
cmp
insl
mov
hlt
aaa
out
fildll
cmpl
or
mov
xchg
shlb
lret
ja
int3
jmp
and
inc
xchg
aad
dec
popf
mov
fs
pop
test
xchg
push
sbb
in
mov
push
jmp
je
add
in
xchg
std
and
mov
cmp
and
shl
dec
dec
out
push
jo
push
ss
jl
cmpsl
xchg
dec
adc
sub
cmc
xor
cmp
in
or
jo
xchg
aam
arpl
int
push
leave
in
rclb
jecxz
xchg
mov
cmc
fwait
push
pop
jns
pusha
adc
push
adc
fmull
fwait
mov
mov
aaa
jb
cmc
sub
sub
add
cmp
cmpsl
or
xchg
dec
push
subb
jo
mov
cmp
dec
pop
icebp
xor
out
loop
mov
mov
ds
pop
js
xchg
in
xor
cmpsl
push
jbe
shrb
inc
xchg
sbb
fisttpll
ficompl
jp
cwtl
imul
pop
cwtl
adc
mov
jecxz
std
push
lcall
and
mov
je
test
dec
aas
scas
int3
push
mov
xor
push
cmp
sbb
xor
test
insb
and
aam
in
adc
inc
sub
orb
jg
cmp
cmp
inc
and
xlat
xchg
fists
sub
das
pop
sub
jnp
pop
mov
daa
mov
cmp
sub
lret
sbb
dec
or
mov
lds
pop
mov
xchg
imul
je
and
mov
cmpsb
xchg
shl
fstpt
dec
push
ss
test
and
bound
pop
aaa
jns
daa
in
aaa
push
or
fidivrl
sub
jecxz
call
adc
arpl
xchg
loopne
insl
fmuls
scas
fwait
add
mov
in
or
sbbb
subps
imul
cmp
adc
lret
jle
test
xor
popa
sbb
jae
divl
stc
test
push
and
jmp
sbb
fdivrl
rclb
add
push
lods
imul
aad
mov
dec
jnp
fwait
scas
lods
jge
sub
push
cld
dec
call
sbb
fwait
imul
xchg
popa
add
jnp
lock
mov
dec
adc
test
iret
js
push
inc
aas
sub
jae
push
cmp
or
dec
fidivrs
jecxz
notl
fs
lcall
adc
aaa
mov
mov
push
outsl
out
mov
jne
in
pop
or
mov
loopne
imul
push
or
aam
lods
mov
push
mov
push
mov
mov
adc
popl
sarl
inc
push
sahf
xchg
mov
or
lret
or
add
daa
jmp
movsl
cltd
jmp
push
pop
adc
js,pn
xor
dec
rcll
daa
loopne
or
ja
mov
in
dec
push
call
stos
sub
dec
cmpb
xchg
dec
aas
pop
movsl
outsl
pop
imul
mov
push
stos
mov
pop
pushf
call
clc
mov
test
mov
push
arpl
inc
lods
mov
sbb
lea
movsl
shll
pop
mov
xchg
test
pop
movsl
bound
stos
jne
fldl
popa
or
inc
rorl
mov
js
sbb
inc
lods
jne
decb
cmc
sbb
in
dec
mov
jge
xchg
ja
mov
mov
sbbb
or
outsb
lret
inc
and
lret
loopne
icebp
add
fucomip
inc
shrb
and
sub
imul
jecxz
fstps
mov
outsl
lea
fmull
cmp
mov
pushl
shl
fldz
aas
test
mov
cmp
pop
adc
decl
or
xor
test
push
pop
imul
js
or
les
lods
mov
sub
mov
mov
js
roll
add
or
mov
dec
enter
rorl
pop
mov
test
nop
add
clc
test
or
rorb
scas
sub
icebp
xor
imul
mov
mov
stos
xor
mov
fbstp
dec
hlt
lods
repnz
xchg
jmp
sbb
cltd
jge
and
scas
sub
repnz
mov
cmp
clc
insl
lcall
adc
lret
cmpsb
or
push
in
jg
push
dec
dec
addl
imul
xchg
inc
stos
test
in
and
push
and
add
je
idiv
pop
sub
movsl
div
clc
lods
ss
jne
loop
imul
mov
jbe
test
loopne
sarb
inc
loope
cmp
mov
les
std
shlb
push
jnp
adc
sbb
insl
mov
cli
aas
fidivrs
and
inc
out
outsl
add
cmp
xchg
push
cmpsb
insl
insl
mov
pop
mov
mov
mov
mov
adc
mov
jl
cltd
hlt
cmp
fisubrs
sub
mov
outsb
lock
in
inc
inc
in
add
push
sbb
mov
dec
or
push
call
push
ret
and
ss
inc
movsl
lcall
mov
xor
nop
mov
mov
cmpsl
stos
add
sub
inc
popf
jecxz
inc
inc
int3
lcall
ret
jb
mov
nop
and
cmp
movsb
nop
fnstcw
sti
popa
icebp
cmp
lret
add
insl
pushf
iret
sbb
std
push
movsb
mov
push
or
aaa
inc
cmpsb
imul
shl
xchg
dec
scas
cmp
js
or
or
ss
push
and
push
cli
sub
sbb
jge
xchg
xlat
imul
push
push
push
dec
int
sub
sbb
cmc
in
hlt
adc
cltd
mov
or
subl
pop
pop
pop
push
imul
dec
imul
das
inc
nop
xor
push
inc
push
test
daa
mov
cwtl
mov
outsl
pop
rcrl
jbe
push
pop
cmp
mov
loop
pusha
ss
in
dec
add
lahf
imul
push
adc
add
ret
adc
andl
jg
add
jmp
scas
subb
xchg
or
jmp
bound
sarl
xchg
xchg
ficoml
inc
pop
or
mov
into
cmpb
je
imul
jb
lcall
push
lds
pop
in
xchg
aam
lock
shl
sub
fsts
mov
adcl
ret
imul
fs
sbb
sbb
adc
mov
mov
cmpsb
push
pop
lds
or
xchg
push
sub
dec
leave
andl
leave
mov
imul
imul
and
test
aad
mov
adc
pusha
cli
fwait
xor
je
std
push
and
ss
jmp
nop
mov
add
jbe
adc
adc
push
pop
mov
addr16
cmp
sub
test
jo
adc
shll
fsubl
mov
mov
xor
and
xor
jl
cmp
test
fstpt
cmp
mov
or
fisttpll
inc
cmp
fsubrl
loope
push
jbe
pop
addl
js
nop
cmp
push
or
rolb
cmp
les
and
lret
pop
jb
mov
popf
cmc
inc
cli
out
test
jg
inc
jnp
jge
xchg
test
and
xchg
inc
cmp
aad
push
or
nop
inc
push
cmpsb
loop
aam
mov
jnp
pop
adc
and
push
mov
stos
push
cli
or
mull
clc
adc
fnstenv
add
lahf
sub
ss
loope
les
rcrb
imul
pop
xlat
lcall
rolb
dec
inc
adc
mov
dec
or
stos
inc
loop
out
call
into
lret
xchg
movsl
mov
xor
scas
inc
cmp
mov
loope
jns
test
mov
push
js
adc
lods
adc
cmp
cmp
inc
lret
out
adc
call
or
cld
mov
stos
and
mov
aad
xchg
iret
push
xor
cwtl
cmpb
push
xlat
es
test
inc
adc
stos
sub
inc
lret
movsl
shlb
ds
mov
jo
test
inc
jbe
in
lret
pop
and
mov
adc
imul
aaa
xchg
cmp
mov
rorl
mov
shr
xchg
stc
add
xchg
sbb
mov
xor
ret
jmp
xorl
cmp
adc
in
mov
lds
lds
ret
and
repz
daa
negb
test
push
test
push
test
outsb
mov
test
sbb
daa
in
mov
mov
and
sbb
xor
aad
aam
jns
mov
js
adc
shr
pusha
adc
or
adc
lock
push
cmc
nop
mov
es
sub
xor
sbb
mov
xor
adc
push
mov
cmp
push
in
mov
cli
dec
xchg
push
mov
sub
push
pop
test
iret
xlat
ficoml
enter
scas
mov
sub
aam
xchg
and
loop
fstps
mov
jne
outsb
mov
cmp
adcl
add
jge
jmp
gs
inc
ret
inc
xchg
cmp
aam
or
xor
les
ljmp
pushl
lret
mov
and
mov
or
mov
jmp
pop
out
add
movsl
fsubl
cmp
xchg
push
fistpll
cmpsl
push
jp
je
fs
fbstp
test
sbb
notl
dec
sbb
jl
pushw
xchg
mov
mov
xorl
fcoml
or
cmp
jb
inc
sahf
sub
or
bound
jp
test
inc
popf
pop
dec
in
mov
scas
cmpsl
xor
stc
enter
mov
jle
add
adc
test
rcll
mov
push
add
or
cmp
xchg
cwtl
sub
pop
xor
je
daa
push
imul
js
testl
cmp
call
in
mov
dec
popf
clc
sbb
test
mov
mov
jb
aas
jle
pushf
mov
enter
inc
aad
repz
stos
test
xlat
pop
test
sbb
mov
pop
test
mov
push
arpl
push
fidivl
add
or
nop
mov
push
pop
push
pop
adc
inc
mov
fbld
cmp
sbbl
daa
xlat
enter
iret
or
and
ficompl
and
jb
fisubs
cmp
dec
sub
les
pop
cmp
dec
xchg
xlat
sbb
adc
mov
rol
sbb
iret
mov
xchg
imul
jae
shrb
mov
inc
jns
xchg
test
xor
adc
inc
pop
or
add
dec
or
sub
xor
daa
lods
jl
lcall
std
dec
inc
outsl
xor
sbb
xchg
inc
sub
fidivrs
and
dec
or
xor
cli
jb
inc
mov
sbb
jae
andps
insl
mov
rolb
mov
mov
xor
lahf
xor
dec
outsb
inc
fnsetpm(287
dec
mov
insb
fldt
aaa
push
xor
xchg
inc
js
ja
pop
rcrb
test
mov
ret
je
or
fistpl
in
out
mov
fdiv
xchg
pop
int
add
adc
fmuls
jnp
data16
stos
pop
and
test
push
mov
inc
and
ljmp
pop
fs
mov
aas
xchg
jno
cmpsb
dec
int3
and
rcl
das
jo
push
rorb
ret
fadd
sub
add
adc
pop
push
loopne
push
dec
scas
addr16
daa
sbb
nop
add
sub
daa
mov
jg
andb
imul
data16
cmp
loope
and
in
sti
addb
imulb
ficoml
xchg
xlat
aam
adc
jnp
mov
push
movsb
mov
lock
sbb
add
imul
pop
les
data16
inc
cmp
push
xor
add
lock
sahf
add
mov
add
test
orb
insl
xchg
adc
test
cmp
call
shrl
int3
mov
test
call
cmp
cmpsl
test
mov
test
sarb
jmp
in
lcall
push
imul
jns
add
push
cmpsl
xchg
xor
sbb
or
adc
add
or
push
daa
cltd
orb
push
lret
imul
rcrb
ljmp
fsubrs
sbb
fidivrl
cmp
mov
rolb
andl
cmp
sbb
test
in
rclb
lret
stos
mov
mov
in
and
scas
enter
es
fwait
pop
test
clc
pop
mov
lret
mov
in
out
cmpsl
cmc
jecxz
sahf
inc
bswap
and
loop
xlat
cmp
pop
adc
imul
xchg
pop
mov
mov
gs
xchg
and
fdivrs
pop
stc
scas
leave
xlat
fs
js
lret
push
lods
push
inc
enter
outsl
arpl
fs
aas
or
inc
mov
inc
mov
flds
mov
cmpsl
jns
aam
in
or
test
sbb
fs
int3
mov
add
imul
lcall
ja
outsb
or
repz
clc
pop
add
lds
xchg
lret
das
and
sbb
inc
pop
insl
leave
inc
mov
adc
jb
sti
sahf
push
or
mov
add
xchg
mov
pusha
scas
or
mov
call
pop
je
or
enter
sbb
inc
jmp
xchg
pop
sbb
popf
pop
push
sbb
lock
pop
sti
mov
xor
cld
push
into
je
mov
aad
jle
mov
xchg
test
jg
xchg
iret
inc
popf
dec
xchg
rorb
jmp
jb
cltd
insb
pop
xchg
sti
movsl
mov
stc
adc
fldt
push
push
iret
addr16
mov
mov
xchg
pop
mov
lahf
fisubl
divps
imul
cltd
jae
leave
add
xchg
or
xor
shlb
lret
repz
jns
ret
clc
mov
cmpsb
or
inc
mov
jle
inc
add
int3
push
popa
orb
lods
mul
fbstp
lret
movsb
add
sbb
loop
xor
ret
lret
testl
shrl
pusha
insl
add
xor
sbb
mov
sahf
or
and
push
enter
ljmp
xchg
mov
fidivrs
imul
call
sub
fistpll
gs
pusha
adc
lcall
pop
sbb
add
or
movsb
arpl
addb
pop
out
cmp
pop
jg
push
push
sub
add
xor
adcl
xor
stos
cmp
fidivrl
adc
pop
xchg
sub
je
mov
in
aaa
fisubs
int
call
mov
xor
jnp
out
adc
mov
push
pusha
imul
xor
popf
sbb
dec
mov
ds
cli
dec
push
movsb
ja
mov
cmpsb
loopne
fwait
dec
xchg
pushf
jg
jne
cmp
add
or
push
mov
rcll
jg
inc
fisttpl
xchg
xchg
push
add
das
bound
js
mov
jg
adc
call
jmp
test
sbb
mov
fisubs
dec
and
shl
clc
push
mov
fstps
stos
jge
sarl
add
aam
testb
cmp
xchg
imul
xor
or
cmpsl
or
mov
cmp
pop
xchg
add
fstps
ss
push
xlat
push
push
mov
push
jp
repz
fucomip
pop
cmp
push
lret
cmp
jp
movsl
nop
mov
iret
lret
lahf
mov
push
add
repz
imul
fisubrl
ja
xor
pop
cli
shrl
iret
imul
add
push
pop
stos
call
adc
xchg
loopne
mov
mov
sbb
shrb
mov
cld
xor
jae
cltd
mov
sub
movsb
dec
jnp
push
fs
xor
dec
shll
shll
jmp
sahf
scas
movsl
pop
shrl
add
fimuls
lret
xorl
mov
ljmp
out
sub
test
xor
fmuls
popa
test
divb
leave
jne
sub
nop
jp
and
adc
insb
cs
clc
cmp
scas
add
mov
xor
lods
test
jns
xchg
xchg
ror
test
bound
les
out
sbb
imul
mov
pushf
lret
jl
add
sub
test
inc
xchg
test
int3
shll
sarb
data16
xor
xchg
movsl
push
mov
stc
adc
inc
inc
inc
dec
push
pop
ds
inc
fstl
xchg
lret
and
cs
in
fcomps
mov
pop
scas
addb
ljmp
lret
aas
fsubrs
jae
fidivl
sbb
cmc
fwait
cmp
out
mov
mov
add
cmp
push
add
dec
inc
pop
fmulp
xchg
sub
adcb
jb
in
mov
add
sbb
pop
scas
ljmp
cs
scas
and
sti
fwait
popf
or
int3
mov
push
sub
scas
rcr
int3
js
adc
jecxz
or
jne
test
pop
test
cltd
push
dec
and
mov
mov
pop
negb
or
jge
push
roll
pusha
rorb
xchg
aad
add
add
out
pop
stos
fbld
insb
jl
and
lahf
andb
lock
ljmp
in
cmp
test
andl
outsl
dec
jo
pop
dec
decb
into
cmpb
sbb
lret
mov
insb
rcll
and
mov
pop
jle
xchg
pop
lahf
ffree
cmp
int3
mov
pextrw
and
imul
jae
shl
int3
push
lds
xchg
aas
inc
adc
rorl
pop
xchg
lret
addr16
sbb
mov
packssdw
insl
xchg
cmp
push
int3
inc
nop
aas
fwait
cltd
lcall
fwait
scas
push
test
test
jbe
sbb
mov
xchg
scas
pop
lea
and
insb
jae
lret
xor
nop
stos
push
sar
mov
call
dec
jle
mov
lcall
test
jbe
dec
mov
inc
scas
cmpsb
and
mov
lcall
call
jb
insb
jo
scas
scas
or
lods
notl
push
stos
lahf
xor
pop
pop
dec
push
mov
aaa
mov
scas
pop
fisubs
adc
pop
lock
jb
jle
xor
pop
push
jae
cmp
je
pop
jge
pop
push
mov
imul
lods
js
sbb
adcb
cmpsb
aad
dec
mov
out
push
jecxz
decb
cmp
mov
mov
cmp
adc
xchg
inc
ss
lods
movsl
sbb
fwait
movsl
mov
mov
fbld
xchg
mov
xchg
imul
push
sub
pop
xchg
rcl
push
sbb
mov
inc
pop
fwait
lods
xor
push
das
nop
mov
cmpsb
nop
mov
lret
test
sbb
xchg
xor
adc
jns
ss
sub
cmp
jno
dec
sub
push
or
fcoms
fs
loopne
mov
andb
adc
or
fs
fldt
cli
and
and
mov
push
xchg
sbb
pop
cmp
insl
push
jp
fsubr
lock
dec
imul
dec
cmc
mov
add
pushf
xor
cmp
bextr
jecxz
pushf
mov
sub
mov
inc
lret
add
or
gs
cmp
jecxz
in
aas
xchg
xchg
addr16
repz
cmp
ficoml
mov
mov
xor
ja
jo
in
xchg
xor
inc
jp
push
test
add
scas
xor
xchg
push
adc
imul
cltd
jns
je
add
mov
outsl
push
stc
push
test
cld
loop
lahf
rcl
stos
dec
ret
shll
jmp
jmp
sbb
jne
or
jp
out
adc
es
test
xor
push
mov
in
fcmovnu
jl
and
test
outsl
or
dec
cmp
inc
xlat
push
pop
stos
mov
enter
xor
sarl
lahf
jo
or
clc
pusha
lock
cs
xchg
mov
mov
push
cmp
mov
jbe
cmp
mov
movsl
xlat
in
xchg
jnp
xchg
push
movsl
aaa
adc
gs
xchg
xchg
inc
add
insl
sub
or
aad
sbb
cmp
add
adc
cmp
pop
mov
and
adc
insb
sti
shr
mov
push
dec
mov
cwtl
fisubl
mov
lret
inc
and
and
dec
js
fiadds
std
pop
aad
jp
inc
push
lods
cld
lret
and
and
cmpsb
add
mov
call
sbb
nop
mov
lret
sub
addb
pop
cmp
xor
cmpsl
rcll
mov
push
loopne
flds
ret
jg
imul
xor
loop
adc
mov
nop
mov
cmp
vminss
nop
push
xor
xor
data16
outsb
out
xor
outsb
or
cmpsl
imul
sbb
mov
arpl
test
int3
cmp
aad
and
cmp
cltd
scas
lods
dec
int
loopne
jno
out
sub
inc
push
jmp
mov
int
mov
sbb
sub
out
or
mov
sarw
and
movsl
adc
sbb
xchg
mov
dec
jb
lret
push
stos
test
mov
adc
rorb
sbb
cwtl
movsb
and
jns
subb
mov
pop
xlat
sbb
adc
aas
test
mov
dec
repnz
sub
dec
sti
test
xchg
int
js
pop
loope
push
xchg
sub
xchg
xchg
push
repnz
mov
add
push
call
je
shlb
push
mov
push
call
cmp
xchg
xchg
shll
mov
inc
lock
mov
fstpl
cld
stos
inc
push
aam
rcrl
mov
cwtl
mov
incb
push
call
faddp
roll
push
shrl
sub
mov
repnz
movsb
leave
cmpsb
mov
add
adc
and
out
sarl
mov
gs
push
mov
push
popa
xchg
loop
mov
fwait
pop
insb
xor
aam
push
mov
cmp
sub
call
adc
enter
scas
or
sbb
imul
sub
repnz
inc
mov
cmp
xchg
movsl
and
adc
mov
fistl
inc
or
sbb
jl
jge
outsl
sarb
test
xchg
and
add
mov
push
in
adc
cmp
mov
lds
mov
dec
insl
mov
jecxz
pop
pop
jno
add
movb
adc
xchg
cmp
lds
popf
mov
or
orl
imul
imul
aaa
inc
aas
push
push
ret
xlat
shr
sub
daa
push
and
fucom
stos
vcvtsi2ssl
fcoml
or
mov
mov
mov
sub
adc
aam
or
icebp
sbbl
pop
push
popa
jmp
jne
scas
adc
mov
stc
clc
fsts
adc
mov
ja
mov
call
mov
lahf
xchg
pop
ficompl
ror
lods
push
sbb
lds
dec
imul
faddp
sub
lea
cmpsb
aas
mov
or
scas
adc
inc
adc
test
icebp
in
ja
cmpsl
add
fisttps
int3
imul
vandps
and
rorl
nop
test
mov
movsl
jne
stos
mov
pusha
lods
test
inc
adc
lret
rolb
scas
fnstsw
xchg
test
popf
and
call
cmp
add
push
xchg
xlat
test
adc
add
or
call
fnstenv
mov
xor
sbb
mov
xlat
mov
push
cmp
les
imul
lahf
xchg
pop
iret
movsl
dec
jge
jno
scas
jge
adc
in
push
push
dec
nop
mov
pop
stos
xchg
xor
aam
lret
pusha
xchg
cmp
fsub
xchg
imul
mov
mov
xor
loope
or
movsb
push
and
inc
fdivrp
fldt
inc
movhps
aas
xor
lods
orb
loop
or
lods
imul
inc
jne
cmp
pop
scas
mov
xor
mov
and
mov
mov
jb
add
mov
pop
sahf
push
dec
mov
bound
sub
lea
mov
je
or
cmp
cmpsl
fnstsw
cmpsb
or
lret
repnz
or
test
cmc
xchg
je
push
pusha
mov
loopne
mov
enter
fdivrl
loop
into
jne
adc
stos
stos
mov
sbb
mov
hlt
lret
xor
out
xor
call
ss
test
ret
ss
or
ds
fucomi
jne
mov
imul
arpl
out
loopne
leave
bnd
movsl
data16
fsubrl
test
dec
outsb
push
jno
lret
fsubrl
cld
stc
jnp
push
mov
les
in
adc
outsl
sbb
pop
test
test
scas
push
xchg
push
fidivrs
mov
sbb
js
jne
xchg
imul
add
jo
imul
xlat
imul
lea
movsl
lea
popaw
sub
inc
cli
sbbb
ljmp
jb,pt
push
add
lock
movsl
fisubs
adc
pop
add
sbb
in
cs
bound
add
cmp
test
scas
xor
sbbb
sbb
jle
test
nop
ja
nop
in
pushf
cmc
scas
or
leave
aad
pop
sahf
sub
xlat
or
push
test
push
pop
push
test
dec
test
push
iret
out
test
gs
cli
sub
les
jl
aad
sbb
pop
jnp
mov
mov
cmpl
cwtl
push
push
loope
scas
cmp
push
jl
push
iret
dec
aam
mov
pop
mov
testl
sbb
clc
xchg
loop
int3
and
imul
mov
aaa
pop
jp
dec
xchg
lea
fdivrl
sbb
pop
enter
adc
cmp
stos
lock
scas
jns
add
dec
stos
outsb
insb
nop
pop
push
xor
ret
and
push
or
add
xor
je
or
popa
ds
jg
mov
out
subb
insb
dec
add
fs
enter
rorb
or
sbb
sbb
dec
das
loopne
cwtl
jnp
xchg
adc
push
mov
add
push
sub
or
cs
or
shlb
int3
push
xchg
xchg
add
cltd
pushf
adc
mov
jnp
dec
stos
subl
xchg
adc
cmpl
or
insl
xchg
adc
outsl
in
out
jne
mov
test
mov
adc
add
or
stos
les
push
call
sbb
jg
or
cmp
inc
outsl
and
mov
or
push
subb
shll
mov
loopne
xlat
mov
aam
add
imul
sbb
outsb
mov
xchg
dec
push
scas
rorb
inc
int3
and
flds
sub
rclb
dec
cmp
mov
shll
inc
and
cmp
mov
pop
adc
xor
mov
shrl
or
push
fadds
pusha
cmp
lods
sub
jecxz
inc
push
mov
stos
inc
adc
cmp
sbb
inc
xor
adc
xchg
push
xchg
sub
xchg
pop
stc
xchg
mov
push
popa
inc
jno
in
jae
bound
or
fwait
mov
jmp
unpckhps
lret
jbe
negb
mov
leave
cmp
es
cmp
rorl
outsl
stos
lahf
sbb
ret
hlt
dec
aad
sub
cmpsl
stc
je
add
and
mov
pop
aas
xor
popa
imul
adc
sbb
roll
mull
scas
inc
lret
xchg
add
clc
outsb
mov
dec
hlt
push
aam
adc
hlt
push
xorb
and
mov
mov
mov
repz
pop
push
enter
scas
cmpsl
adc
fldt
push
in
jmp
push
ret
cli
push
les
fmuls
pop
jle
cli
lcall
push
or
pop
nop
push
outsb
xor
add
ffreep
xor
inc
mov
loopne
xchg
inc
int
test
sub
arpl
sbb
cmp
adc
lret
jg
jle
int
sub
push
ljmp
mov
nop
inc
rclb
pop
inc
mov
sbb
jecxz
sub
mov
xchg
loop
push
fsubl
fisubrl
insb
lods
mov
imul
add
fidivl
pop
leave
shlb
mov
lea
and
jne
lods
aas
sti
pop
jmp
mov
popa
pop
loopne
outsb
cmpsl
pop
dec
imull
mov
testb
test
orb
roll
mov
fildll
pop
ret
fmuls
cmc
pop
mov
test
mov
frstor
jne
out
mov
loope
mov
subb
mov
rclb
insl
push
xlat
and
cmp
and
jb
imul
xchg
push
pushf
dec
mov
mov
pop
inc
shlb
xor
sbb
mov
cmpsl
dec
sbb
mov
jnp
mov
pop
mov
add
or
or
add
xor
movsl
mov
push
xor
push
adc
push
ret
vandpd
mov
lods
cld
fildl
lods
lcall
mov
pop
mov
cmp
fmul
jg
iret
mov
ret
xor
dec
stos
dec
adc
int3
mov
lret
enter
cmc
lahf
mov
in
cmp
sub
mov
call
sahf
mulb
cmp
or
fldz
fwait
push
adc
cmpl
adc
or
in
push
jmp
gs
shrb
and
mov
jae
push
inc
aas
xchg
add
int
mov
or
mov
cmpsl
ja
pop
cmc
call
xor
lret
loope
mov
cmp
test
rorb
adc
cmp
imul
cmp
in
lret
add
mov
xchg
sbb
xlat
loope
mov
push
xorl
pusha
cld
lret
adc
leave
cmp
ret
or
insb
inc
push
test
mov
sub
pop
push
addr16
test
sbb
sbb
mov
call
test
hlt
dec
shll
fdivrl
es
imul
xchg
loopne
es
test
jle
jecxz
sar
dec
dec
jo
or
movsl
jno
movsb
pop
shr
movsl
jl
loopne
pop
xchg
mov
outsb
xor
and
popa
cli
xchg
add
cmpsb
js
fwait
rorl
xchg
sub
dec
mov
enter
fisubs
scas
or
fiaddl
fs
adc
push
and
mov
mov
xchg
mov
sub
mov
push
xlat
call
cmpsl
jg
sbbb
in
push
cld
aaa
ror
and
loope
and
dec
test
sub
mov
sbb
imul
pop
les
jb
test
xchg
aad
dec
xchg
pop
addr16
mov
add
adcl
sub
pop
les
lret
lock
jmp
pop
xlat
sbb
and
mov
push
fcoms
movsl
inc
inc
adc
lds
sbb
inc
mov
push
jbe
stos
sbb
push
jns
orb
sbb
xchg
pushf
ljmp
push
jnp
sub
stos
jae
andb
iret
scas
cmp
imull
sub
lods
mov
fsubrp
leave
push
xchg
xor
imul
lret
pop
push
nop
lods
add
lods
add
jno
aaa
cmc
je
fs
jg
sub
and
pop
stos
xor
or
pop
push
mov
sub
pop
nop
imul
jg
xchg
jo
jge
mov
test
xor
push
adc
fists
mov
adc
jnp
add
scas
jl
lret
test
je
lahf
fcomps
js
mov
es
push
cmp
and
xor
xor
mov
shl
adc
aam
cmp
xchg
out
test
sbb
and
loope
jp
xor
cmp
and
jmp
imul
loopne
movsl
repz
int3
jb
leave
hlt
xchg
xchg
movsbl
ret
fidivrs
lahf
xchg
scas
mov
add
mov
adc
pop
loopne
jl
aam
pop
mov
rorb
cmc
loop
jg
rclb
ss
leave
out
inc
adc
mov
aad
dec
mov
jge
mov
pop
or
pop
pushf
adc
mov
in
bound
lcall
sub
jge
hlt
lret
loop
in
js
int3
sub
mov
or
filds
pcmpgtb
jbe
stos
add
adcl
imul
xchg
ret
and
inc
loope
out
dec
mov
or
ror
iret
adc
lods
mov
pop
xchg
dec
incb
subl
aaa
sbbb
test
push
or
mov
xchg
ss
rcll
push
xchg
sub
hlt
add
cmpsl
aam
std
iret
jge
nop
add
test
jns
push
add
mov
or
xor
mov
pop
scas
outsl
adcl
enter
or
adc
outsl
cmp
jp
aas
vshufpd
push
stc
adcb
fcmovb
xor
or
and
pop
cmp
mov
loop
cmpsl
xchg
dec
jo
push
fisubrl
add
jp
fildll
test
push
outsl
jle
push
push
sahf
pushf
ficoms
push
fidivrl
cmp
data16
test
dec
call
ret
or
add
xchg
call
or
xor
cli
aas
nop
sbb
ficomps
adc
jbe
sbb
or
mov
inc
int3
xchg
mov
cmpsb
or
sub
dec
ds
push
aad
shrb
cmc
push
mov
jb
add
rorb
imul
repz
jb
aas
cmp
lcall
push
das
ja
in
out
roll
ret
pop
je
lret
icebp
mov
scas
cwtl
out
fucomi
outsb
loope
out
subl
xorb
lds
cmp
into
or
sbb
mov
dec
ret
cmp
lahf
dec
and
movsl
dec
push
repnz
outsl
adc
pop
add
imul
ds
subb
cmp
ret
adc
in
cld
adc
jbe
fistpl
aas
cmp
cmpb
ret
addr16
in
fwait
push
inc
xor
fcoms
pusha
fnstcw
out
pushf
lret
xchg
icebp
aad
jne
or
cwtl
addr16
mov
gs
shll
pop
insb
adc
ss
roll
and
xchg
push
mov
pop
pop
call
dec
cmp
jo
sbb
sub
popa
movsl
test
stos
lret
dec
std
pop
adc
sbb
fdivrp
push
orb
mov
push
pop
add
jecxz
mov
ljmp
push
movsl
mov
pop
fld
int
subl
mov
lahf
dec
std
xor
push
iret
mov
adc
jbe
push
loop
and
pushf
push
adc
pop
xchg
sub
push
pop
faddp
dec
aaa
test
xlat
mov
scas
push
pop
int3
data16
dec
xchg
gs
movsl
jecxz
rclb
jb
out
cmc
dec
jecxz
cmovle
sub
jp
hlt
stos
or
fmull
int3
cmp
mov
pop
cli
dec
pushf
bound
int3
mov
or
das
rcll
xchg
ja
mov
test
cmpsb
popf
out
fs
push
pushf
fs
cmpsb
test
cmp
iret
je
popf
pop
jp
pop
jae
subb
xchg
sbb
iret
lods
jg
sarb
sbb
stc
xchg
xchg
lods
outsl
mov
xchg
popf
jmp
jp
aam
fnstsw
imul
movsl
pop
icebp
inc
push
and
cmp
inc
sbb
cmpsl
enter
inc
jbe
ja
stos
ss
fnstsw
mov
sahf
pusha
fisttpll
das
adc
cmpsl
sbb
stc
xlat
lahf
les
or
stc
aad
cmp
into
jne
ljmp
rol
jmp
add
dec
cwtl
fdiv
or
fdivp
sub
test
sub
or
test
mov
mov
cmc
mov
mov
pop
sbb
xorb
xchg
dec
jbe
adc
rcrl
mov
fstp
push
inc
lock
int3
push
xchg
adc
jne
mov
fists
adc
xchg
or
or
stc
call
test
or
push
sarb
jge
cmpb
repz
pop
fsts
pop
test
xchg
dec
aas
je
inc
shrl
dec
dec
testl
cmp
stos
jae
mov
cmp
inc
andb
popf
imul
aam
addl
mov
in
ja
mov
push
push
mov
mov
cmp
aad
mov
push
sub
lds
jae
or
jle
mov
fbstp
aas
inc
std
ffree
fs
add
xchg
rcrl
mov
mov
push
mull
lret
xlat
repz
adc
cmp
mov
rcr
pop
mov
or
add
or
aam
arpl
inc
rcrl
in
lcall
int
test
xchg
jmp
push
sbb
test
cltd
aaa
imul
rclb
lock
nop
mov
mov
sub
jns
mov
mov
hlt
or
repz
pusha
push
xchg
pop
jg
inc
add
dec
sbb
mov
shl
inc
xchg
mov
aaa
test
jbe
ficoms
fwait
std
mov
push
push
mov
sub
imul
in
ficomps
push
adc
xor
mov
imul
push
sub
fidivrs
and
adc
xchg
sbb
into
dec
mov
insl
push
std
mov
lcall
adc
sub
shrl
lret
mov
rclb
inc
mov
and
cmp
xchg
push
rcrl
loopne
xor
sahf
cmpl
dec
dec
shlb
je
test
push
test
adc
insb
push
rcr
enter
push
adc
jl
push
jl
mov
jle
fs
cs
add
icebp
or
add
and
sub
mov
sub
push
dec
shrb
js
push
sub
adc
pop
rcrb
pop
adc
arpl
stos
test
push
movsl
add
add
cmp
ja
les
fsubrs
cmp
lods
insb
stos
cmp
xchg
mov
icebp
mov
jmp
lods
mov
mov
xchg
pop
mov
mov
xchg
mov
cmp
xchg
out
adc
movsb
add
call
scas
sub
movsb
xchg
sub
jae
imul
pop
push
adc
jge
call
sbb
cltd
inc
inc
shlb
mov
mov
xor
adc
mov
mov
hlt
test
stos
mov
enter
cmpsl
int3
insb
xchg
sbb
xchg
jecxz
jg
jo
dec
std
mov
add
inc
jp
lock
mov
imul
cmp
out
or
sub
aas
dec
sbb
mov
movsl
enter
jl
into
xor
aas
pusha
ss
ret
or
pop
call
mov
pop
mov
jb
or
pop
repnz
icebp
lock
fdivs
call
sub
mov
ljmp
call
ror
cmpsl
lret
sub
push
or
dec
popf
out
enter
or
ret
arpl
add
in
cmp
mov
dec
push
xchg
aam
test
fists
pop
pop
movsb
scas
add
or
push
fcmovnb
dec
push
ja
xor
cmpl
sbb
js
jp,pt
push
push
das
js
movsl
incl
sbb
test
add
testb
int3
aam
push
rorl
subb
mov
push
pop
and
data16
mov
lcall
loopne
inc
adc
inc
out
inc
insl
adc
loopne
call
mov
mov
and
and
imul
cmpsl
iret
dec
cmpsl
mov
push
nop
das
jne
cmp
and
xchg
imul
lea
or
enter
dec
mov
mov
imul
scas
test
hlt
adc
push
mov
dec
cmpsb
mov
inc
lret
call
jns
es
xchg
xlat
dec
lret
push
mov
repnz
shl
loopne
mov
imul
adc
push
nop
orl
rol
lret
push
mov
js
imul
dec
mov
pop
cmp
daa
inc
add
xchg
stos
mov
xor
sbb
ja
inc
nop
or
xor
test
clc
rcr
mov
sub
flds
add
stos
pushf
iret
fisubl
push
adc
lret
pop
test
jne
cmpsl
and
dec
add
jle
das
rcl
ret
cmp
cmpsl
push
and
out
fcoml
aas
roll
in
mov
jb
call
shll
push
sub
sbb
and
lahf
les
mov
push
mov
mov
mov
inc
bound
sarl
mov
movsl
add
enter
into
shll
loope
add
int3
inc
lcall
add
test
mov
nop
fcomip
jnp
xchg
lods
out
mov
cmp
iret
insl
xchg
mov
cmp
jmp
jns
xlat
imul
xor
clc
sti
aas
divb
add
sub
rcrb
inc
pop
jbe
jecxz
xchg
pop
adc
cmp
mov
sbb
call
inc
xchg
repz
pop
test
loope
mov
aad
lret
xor
lcall
mov
xorb
in
rcll
jno
push
add
imul
add
or
jl
xchg
sbb
lret
xchg
dec
mov
out
repz
orb
adc
xchg
arpl
fcoms
lds
push
dec
cmpl
and
outsl
shlb
shll
dec
push
mov
pop
aaa
movsl
push
mov
xchg
lret
into
and
push
sub
xor
push
pop
lret
in
ja
sbbl
push
cmp
fldt
or
orb
xor
aaa
sarb
pop
into
pop
dec
leave
mov
add
adc
mov
fld
out
nop
add
cmc
lods
mull
xchg
lret
cmp
dec
sbb
movsl
xlat
in
adc
push
push
fldt
in
fsubl
arpl
jg
out
xchg
stos
inc
movsl
movsl
jge
mov
xchg
cmpsl
sbb
cmp
xchg
aaa
pushf
cld
adc
xchg
adc
adc
mov
mov
bound
loopne
xchg
xchg
in
lret
fs
dec
jp
shl
scas
sbb
imul
decl
adc
test
ficoms
push
xchg
mov
push
lcall
adc
inc
adc
or
jb
pusha
adc
mov
mov
shl
pushl
xchg
mov
ficompl
jle
icebp
xlat
adc
fildl
sub
aas
jae
lret
push
in
sub
jp
and
xchg
insl
sub
subb
lahf
les
xchg
mov
cli
pusha
int3
aas
mov
xchg
incb
arpl
call
sbbl
test
dec
lods
movsb
mov
pop
jns
call
cmp
subb
fdivs
ja
test
test
xlat
fiaddl
subl
popf
pop
lds
add
xor
mov
aaa
aam
loope
bnd
pop
xchg
aad
orb
push
ss
pop
repnz
or
add
jg
push
sbb
or
cltd
stos
mov
sub
and
subb
mov
mov
shr
movl
aas
sbb
mov
push
in
add
push
ds
cmp
jno
xchg
cli
cs
mov
xchg
movsl
and
ret
pop
cwtl
aad
inc
hlt
call
lret
xchg
mov
cmpsb
call
les
cmp
adc
jmp
cmp
popf
stos
dec
jg
xchg
imul
into
xchg
and
push
mov
repz
inc
outsl
loopne
rorl
sbb
and
pusha
xor
into
jp
scas
cmp
xchg
lret
adc
xor
cmpsb
mov
mov
je
shr
std
mov
ljmp
xchg
push
jne
orb
cmpl
sub
sub
div
xchg
shrl
sub
loopne
adc
test
shrl
add
call
add
jecxz
loopne
scas
call
shrl
or
lods
dec
or
mov
add
adcl
ljmp
lcall
sub
mov
or
xchg
sbb
adc
imul
mov
cmp
movsb
aam
sbb
test
xor
dec
cltd
loopne
xchg
push
sbb
jecxz
ja
addr16
adc
scas
adc
subl
xor
movb
in
lods
dec
lret
mov
lock
or
inc
call
addr16
call
cmpsl
test
and
sub
inc
or
jg
inc
cli
enter
dec
fisttps
push
out
imul
pop
cld
dec
xchg
loopne
push
int
movsb
cmpsl
sub
cmpsl
dec
fbld
outsl
add
sub
test
xor
push
icebp
xchg
ds
cmp
aad
xor
pop
test
ja
and
or
fnstsw
add
adc
rcrb
imul
sub
aad
enter
cmpsb
adc
stos
lret
xchg
push
push
adc
dec
mov
push
pop
ljmp
dec
pop
into
cmc
ljmp
nop
fstpt
add
lretw
pop
jle
dec
mov
cld
stos
pop
and
lock
push
lret
add
int
xchg
loope
test
call
xchg
xor
aad
xlat
test
insb
addr16
fldl
lds
mov
pushf
ret
call
subb
frstor
gs
lock
pop
repz
cmp
xchg
dec
andl
filds
xchg
xor
xor
iret
aad
loopne
pop
sbb
iret
push
jg
sub
sbb
sarl
xchg
or
xlat
outsb
sbbb
mov
subb
xchg
clc
aas
fiadds
imul
movsl
cmp
es
inc
test
inc
fcomi
test
mov
jbe
shlb
loop
jecxz
adc
ljmp
xor
sbb
adc
mov
mov
fs
or
push
add
movl
sub
pop
int3
inc
xor
cmp
push
ds
mov
mov
push
out
pop
stos
outsl
movl
imul
testl
lret
sub
inc
jno
fdivrs
push
loopne
jb
repnz
shlb
add
jb
pop
or
pop
lahf
test
cld
push
xchg
xchg
mov
sbb
mov
sbb
fs
xchg
push
rcll
movsl
lret
arpl
cmp
bnd
add
outsl
add
in
jp
push
leave
roll
mov
or
sbb
mov
das
cmp
or
imul
xor
cmpsb
adcb
sbb
fisubrs
cmpsl
or
aad
cmp
pop
je
lret
xlat
push
in
mov
cmpsl
mov
jmp
adc
out
pop
pop
cmp
stc
xchg
xchg
cmp
jg
scas
lods
mov
pushf
test
mov
jns
push
in
jb
push
insb
cmp
jbe
sahf
sbb
insl
push
imul
cmpb
mov
or
xor
cwtl
fs
stos
cmp
mov
ret
and
xchg
sub
sub
mov
call
add
cmp
ljmp
or
les
shlb
cli
aas
xchg
xchg
xlat
and
fs
cmp
mov
imul
insl
push
mov
or
ja
pop
rcl
outsb
cli
mov
add
rorb
fdivl
enter
lods
sahf
inc
dec
dec
vmovddup
push
aaa
cmp
int
in
sub
push
loop
test
xchg
ds
bound
sbb
stc
repz
std
inc
xor
dec
in
add
mov
jns
fisubrs
xchg
aas
adc
jecxz
int
fcmovnu
push
and
cmp
mov
pop
cmp
sbb
xchg
sbb
andl
cmc
call
mov
or
fnstenv
fs
push
sarb
cmp
rcll
test
mov
ret
jbe
inc
enter
imul
push
movsb
scas
fidivrl
mov
sub
aam
pop
jle
test
mov
lea
sbb
loop
ja
or
mov
es
stos
fwait
inc
bound
les
push
adc
fcmovb
sbb
lret
lret
aas
test
imul
lods
leave
push
icebp
push
and
pop
arpl
call
fldenv
or
jnp
sub
ljmp
mov
jg
or
jmp
adc
and
into
dec
cs
int3
ss
cs
and
lcall
rcr
in
mov
jnp
ret
pop
loop
fstl
call
sub
inc
ss
jle
mov
in
or
cmc
imul
aas
mov
or
mov
ja
aas
clc
movb
add
pop
ja
nop
and
movsb
cmp
call
outsb
inc
jo
xor
or
out
sub
mov
adc
dec
lret
mov
fcmovnb
and
xchg
aaa
sbb
adc
movsb
jle
popa
gs
leave
inc
inc
mov
lret
fisubrs
cmpsl
mov
jl
add
fucom
imul
inc
shll
sbb
hlt
pop
push
add
pop
sarb
sbb
aas
js
mov
mov
in
test
js
push
lods
xchg
inc
ret
dec
mov
mov
cwtl
clc
jle
xor
jmp
push
dec
cmpsl
adc
repz
jp
movsb
inc
jg
jg
xchg
stos
xchg
mov
and
xchg
fs
subl
dec
leave
or
rcrb
icebp
pop
loope
xchg
ds
push
fstpt
sub
outsl
or
push
jmp
andb
lret
cmp
arpl
push
push
push
sub
pop
xchg
fs
pop
aaa
sbb
sub
adc
xor
aam
fisubrl
xor
pushf
out
sub
push
cmp
test
lcall
rorb
rolb
test
sbb
iret
imul
xchg
jno
sbb
stos
js
dec
nop
fldt
imul
xor
sub
push
inc
aas
ss
pop
stos
lock
sbb
out
and
daa
fisttpl
inc
add
add
pop
jl
push
sahf
in
xchg
dec
or
mov
push
jmp
add
int
enter
mov
xchg
cmp
clc
cmp
loopne
lea
std
sbb
fscale
or
fsubrl
mov
pop
cmp
add
sbb
data16
lods
aaa
adc
or
std
imul
push
jb
rcl
scas
pop
into
mov
push
test
push
std
hlt
out
ficoml
dec
cmpsl
imul
push
sub
sub
stos
mov
xor
add
mov
loopne
outsb
pop
pop
fs
jnp,pt
pop
adc
xchg
dec
fisubrs
fiaddl
shrl
lahf
iret
rorb
jl
xlat
pop
or
aaa
cmp
fldl
in
int3
lods
push
outsl
push
lea
lods
lahf
inc
dec
dec
popa
aam
inc
jno
push
mov
or
jne
mov
mov
add
and
cli
nop
aam
jne
xchg
decb
lret
dec
mov
scas
cmp
nop
push
push
notl
mov
call
imul
leave
adc
and
fistpl
dec
test
cmp
sahf
imul
add
mov
add
lods
and
mov
xchg
cmc
cmp
xor
lahf
movsl
jg
push
or
in
aaa
inc
pop
scas
mov
inc
lds
mov
out
push
scas
sub
aad
insl
jb
jbe
fidivrl
lea
xor
push
mov
hlt
jno
bound
push
test
cmp
mul
lcall
into
jp
nop
add
aas
scas
mov
mov
jbe
cmp
add
imul
and
or
loopne
and
lcall
mov
movsl
shrb
fstpl
or
jecxz
into
cmc
xchg
repz
into
rorl
adc
pop
nop
outsl
test
add
jge
push
push
xchg
rcrl
lret
insl
jae
mov
or
cmpsl
dec
push
sbb
lods
loopne
pushf
sbbb
shl
cmp
add
push
pop
fmuls
inc
cmp
leave
dec
push
xchg
sbb
rclb
add
sub
in
mov
cmc
negb
leave
roll
cltd
inc
cwtl
jns
inc
pop
es
dec
jns
mov
push
cmp
mov
lock
cmp
js
lods
sub
or
push
lahf
add
jl
sarb
in
sub
inc
xchg
adc
mov
test
popf
sbb
adc
xchg
jle
sub
add
ffree
jge
mov
mov
gs
sub
sbb
push
mov
xchg
mov
pop
mov
mov
int3
iret
mov
dec
shll
or
stos
stos
rcrb
dec
pop
mov
mov
jae
scas
xor
push
mov
sub
cltd
push
and
lods
js
int3
mov
mov
and
scas
hlt
cmp
xor
call
xlat
mov
add
mov
insl
push
push
loope
jno
je
mov
test
ljmp
shlb
movsl
sub
imul
in
js
and
jne
and
mov
pop
jo
push
and
mov
jge
pavgb
xchg
imul
rcrl
lret
cmp
hlt
popf
mov
incl
push
jne
fists
or
push
scas
adc
pushf
push
scas
pop
lods
bound
negl
daa
ret
mov
outsb
dec
dec
mov
sub
pop
shrb
popl
fwait
dec
push
add
lret
cmpsl
jnp
adc
sub
leave
iret
stos
loopne
les
dec
or
mov
push
shlb
std
lret
jbe
iret
adc
les
adc
xor
gs
lods
loopne
call
stc
pop
lret
inc
push
loopne
imul
aas
push
std
inc
or
pop
cmp
mov
or
rorl
mov
sti
add
mov
mov
imul
mov
sub
ljmp
jne
jmp
ss
subl
jmp
push
shl
shr
add
dec
xchg
aas
mov
pusha
nop
adc
mov
fcomps
inc
mov
sahf
or
mov
rcll
inc
sarb
sbb
xchg
adc
push
stos
dec
dec
jle
xor
xchg
test
ds
imul
or
jbe
xchg
imul
sbb
roll
popf
push
cmpl
imul
imul
jge
pop
inc
pushf
pop
dec
jl
or
jl
ret
or
adc
das
insb
jno
sub
ficomps
ret
cwtl
aaa
push
test
jb
stos
inc
jge
test
mov
xor
or
mov
je
inc
call
jg
mov
adc
or
cltd
push
cwtl
lds
imul
adc
or
mov
lods
and
pop
sti
insl
mov
cmp
add
pop
call
mov
or
test
pop
inc
jae
cmc
xlat
dec
notl
fsubp
mov
aad
cltd
xchg
add
mov
enter
xor
add
inc
test
inc
mov
arpl
or
adc
push
aam
add
insb
jl
mov
pop
sarb
insb
cwtl
test
mov
adc
xorl
pop
nop
div
lods
xchg
out
cmp
push
jp
int3
pop
jnp
lods
push
sbb
and
call
loope
cmp
pusha
inc
and
push
jle
xchg
pop
mov
stos
xor
mov
icebp
inc
lods
push
clc
push
push
jb
xchg
imul
ret
rcrb
dec
rorl
sub
xor
add
pop
das
jl
push
lret
pop
ljmp
add
jmp
fistpll
mov
and
sbb
loopne
dec
or
fidivl
mov
sbb
push
xchg
cmp
les
push
iret
int3
sbb
mov
push
int
in
pop
movsl
sbb
xchg
add
in
rolb
inc
and
jg
ficoms
fsts
dec
xor
out
cld
cmp
sub
push
lcall
fxch
xchg
test
leave
mov
sub
mov
test
cmp
loope
mov
mov
lcall
add
jns
inc
mov
cs
inc
mov
push
loopne
and
dec
adc
pop
mov
inc
add
faddl
mulb
push
insl
add
call
mov
adc
lods
jmp
invd
cmpsb
test
enter
jle
ficomps
sub
shr
shl
adc
lcall
xor
sbb
cmp
jns
pushl
call
add
adc
in
movsb
mov
pusha
jp
dec
call
mov
loope
sub
call
ljmp
in
aad
inc
stos
rol
das
test
and
cwtl
aad
adc
je
call
push
adc
pop
loop
sti
inc
mov
mov
lahf
push
or
lret
mov
xchg
mov
mul
jle
pop
dec
or
or
jp
loope
jno
pop
adc
subl
inc
cwtl
ljmp
movsb
fidivrs
dec
xchg
mov
enter
dec
adc
push
lock
sub
or
adc
add
fdivl
cmp
sub
xchg
mov
imul
mov
adc
push
add
and
idivl
cltd
aas
jge
jp
loop
adc
fwait
imul
loope
lret
adc
fwait
mov
add
bound
fidivrl
push
int3
inc
xchg
pop
shlb
xchg
mov
bound
jne
mov
test
xor
lods
pop
mov
sti
js
or
jg
pop
inc
xor
adc
imul
rcl
mov
xchg
out
mov
aad
out
sbb
jne,pn
arpl
jmp
scas
dec
loopne
jbe
cld
mov
rclb
in
and
jae
sub
movsb
or
shll
aaa
sbb
outsl
icebp
push
orb
mov
xchg
divb
packssdw
push
adc
imul
fdivrs
xchg
lea
sbb
std
das
adc
cmp
daa
ret
call
les
xor
fcmovnbe
and
loopne
loop
mov
adc
imul
mov
dec
aaa
cltd
out
enter
inc
xor
pop
add
add
call
outsb
dec
pop
jb
mov
adc
loop
push
xchg
push
insl
mov
in
fbld
test
lret
imul
cmpsl
mov
bound
sbb
dec
cmp
pop
test
icebp
les
sbb
or
imul
dec
xchg
mov
mov
pop
shlb
ret
outsl
or
sbb
aad
cmp
ja
xchg
jle
outsb
pop
mov
sub
sbb
mov
pop
pop
dec
in
fs
jmp
stc
sub
xchg
sub
push
call
add
mov
jecxz
mull
push
out
daa
mov
push
outsb
push
ja
cmp
fildll
hlt
out
test
push
ret
dec
pop
push
jg
mov
mov
cmp
in
push
insb
pop
cmpl
push
outsb
push
in
sbb
pop
adcl
cltd
or
add
cmp
pusha
ret
cli
rorl
inc
stos
jno
sti
jge
xchg
outsb
insb
mov
xchg
add
xchg
jecxz
shlb
scas
cmpsl
and
cmp
sbb
jbe
shlb
in
mov
dec
out
pushf
pop
andb
mov
cmp
lds
mov
mov
and
lahf
push
bound
push
fwait
jge
push
adc
add
adc
pushf
call
popf
pop
nop
jle
iret
dec
xor
or
xchg
push
imul
and
rolb
loopne
mov
push
mov
push
mov
mov
adc
hlt
sahf
jecxz
fmuls
dec
fidivs
mov
sbb
loopne
mov
leave
or
fnstcw
mov
push
insb
call
insb
inc
push
adc
cld
xchg
dec
push
mov
jae
les
daa
jno
xchg
rorb
xor
popf
jl
and
sti
xchg
ljmp
or
call
sub
or
jp
pop
sbb
inc
ja
cmp
movsl
imul
xor
cmp
test
xor
xor
inc
jp
cmp
xor
ja
rclb
dec
sub
add
imul
aas
out
in
mov
jmp
sub
push
inc
add
and
test
mov
adc
push
cmp
test
test
fsts
iret
test
dec
or
push
cmp
jecxz
cli
shlb
insb
rorb
test
enter
lods
xlat
cmp
xchg
daa
sub
dec
icebp
ret
push
mov
mov
jmp
mov
pusha
movl
fldt
lds
push
aad
push
leave
adc
mov
sbb
mov
imul
mov
scas
xor
cmc
adc
add
call
sbb
jb
add
rclb
mov
lods
out
pop
push
call
pusha
les
cmpb
xchg
mov
shl
aam
dec
movsl
jle
sub
push
xchg
mov
cmpsb
les
pop
cmp
push
jmp
jb
push
adc
mov
fistpll
std
daa
stos
rcr
xchg
test
add
repnz
sbb
rcll
fcmovnu
cmpsl
fs
xchg
add
iret
jbe
out
lahf
adc
push
out
sbb
pop
and
inc
mov
jns
outsb
dec
adc
div
add
ss
rolb
mov
cld
mov
jb
fidivs
dec
dec
aad
fs
push
jg
mov
cmp
inc
push
out
cmp
in
mov
loop
mov
pop
sub
inc
fnstsw
ljmp
repnz
mov
cli
jae
shrb
xchg
push
mov
out
movsl
lret
push
scas
nop
xor
sub
mov
xchg
rcl
hlt
out
lds
xor
xor
aas
fcompl
push
ds
fsubrp
dec
xchg
jnp
jp
stos
sub
lods
shlb
inc
shrb
add
xlat
xchg
imul
sbb
mov
inc
aad
fimuls
call
movsl
push
clc
jg
sbb
and
test
push
js
add
xchg
inc
fcompl
and
shrl
in
and
stc
rclb
pop
fisttpll
add
clc
shll
or
iret
inc
xchg
mov
xchg
push
enter
xchg
xchg
cs
mov
ds
lret
je
leave
ljmp
sbb
or
xchg
pop
imul
xchg
jno
shrb
out
push
jae
fadds
jl
push
cmpsl
adc
mov
add
sarl
in
or
jg
inc
test
or
fcomps
leave
mov
rcll
iret
cmpsb
push
mov
enter
rcl
mov
xor
push
fs
push
or
mov
daa
imul
into
adc
jae
je
adc
ds
jl
inc
pop
fstpt
sub
lret
mov
jb
mov
xchg
incl
div
shlb
ret
data16
sahf
xchg
or
mov
xchg
add
xchg
adc
fidivrl
push
pushf
sub
fs
les
dec
cmc
jmp
nop
insb
test
je
gs
sub
movsl
xor
shll
mov
cmpsb
mov
mov
mov
shr
mov
daa
adc
push
out
xchg
mov
pop
in
dec
cmpsb
jge
scas
loopne
imul
push
imul
out
stc
jecxz
cli
inc
xchg
imul
pop
int
push
jae
jle
data16
mov
mov
imul
hlt
jg
sarl
jnp
mov
mov
stos
daa
jne
sub
paddusw
dec
add
dec
daa
and
daa
or
inc
or
inc
das
negl
fs
push
xchg
push
ljmp
or
push
push
mov
xchg
cmp
jne
ljmp
cmp
imul
adc
cmpsl
xor
mov
adc
lahf
xchg
and
pop
mov
pop
adc
shl
push
jp
pop
mov
aad
xchg
subb
test
fstps
inc
mov
test
cwtl
les
lret
sub
popa
jbe
adc
mov
add
stos
mov
push
sbb
pop
shl
cmc
mov
lods
mov
mov
xchg
xchg
mov
pop
cmp
adc
je
idivb
pop
cmp
mov
ds
xchg
xchg
out
sub
xor
aas
out
aaa
adc
jb
mov
push
mov
stc
les
xor
mov
testl
fwait
ret
sbb
mov
aam
and
test
sbbb
call
mov
imul
loope
fdivl
sbb
aam
jae
xchg
sub
sub
mov
adc
push
fcompl
call
push
sub
mov
xchg
sbb
inc
inc
adc
lret
xor
add
inc
cmpsl
xchg
pushf
push
cmp
inc
add
xor
call
mov
adc
mov
lock
sub
sub
inc
xchg
gs
jl
push
mov
popa
cmp
add
dec
rol
pop
mov
ds
jge
mov
dec
sbb
test
lods
push
xor
sub
sbb
jg
imulb
test
or
ficoms
xchg
add
adc
inc
int3
std
shll
xchg
call
mov
addb
mov
clc
cmp
lcall
testl
in
pop
sub
pop
inc
int3
mov
mov
sbb
adc
test
imul
or
popa
dec
adc
jl
test
sub
push
or
sub
pop
inc
es
lock
leave
mov
aad
sar
aas
jl
int3
inc
sar
ficoms
jg
popa
cmpsl
int3
sbb
push
loope
mov
lods
add
outsb
fidivrl
jle
roll
and
sub
loop
aas
imul
add
shl
std
fidivl
test
push
rorb
mov
aaa
call
jle
mov
push
call
xchg
sbb
or
imul
sub
mov
lret
call
out
push
jg
and
in
test
fdivp
adc
mov
leave
adc
jae
enter
inc
fwait
push
sbb
loopne
push
mov
inc
cmp
xor
add
mov
test
pusha
popf
dec
movsb
adc
jbe
fbstp
test
out
mov
int
sub
sub
push
daa
add
dec
test
int
shrb
jecxz
sti
std
jp
sbb
out
jl
pop
outsb
inc
ret
cmc
pop
out
xor
lcall
push
fcoml
ljmp
push
xor
jno
dec
or
xor
lods
rclb
data16
sbb
mov
movsb
fidivrl
sub
xlat
in
adc
insb
ds
aas
add
in
xorl
and
push
jne
sti
mov
xchg
shrb
pop
pop
push
imul
adc
mov
jnp
mov
mov
imul
xchg
lcall
scas
xor
push
push
xchg
fdiv
stos
leave
cwtl
push
xchg
enter
sarb
xchg
xchg
cmp
add
sbb
push
dec
mov
aad
or
lcall
je
movsl
fstl
ljmp
out
outsl
sar
mov
adc
add
mov
movsl
sti
cmp
cld
out
frstor
call
je
push
cmp
inc
fimull
cmc
fwait
dec
testl
add
aad
push
outsl
mov
or
xor
adc
imul
adc
mov
xchg
sbb
lods
jg
test
emms
fs
mov
jae
test
jle
es
cmp
std
out
std
or
movsb
adc
out
cmp
xor
in
cs
sbbb
adc
cli
stos
adc
and
or
inc
in
mov
lret
jp
cmpl
js
pusha
imul
jmp
xchg
rcr
sbb
test
push
fcmovnbe
int
pop
cmp
iret
jg
jbe
call
jmp
lahf
mov
gs
mov
jae
mov
fcoml
fcmovnb
mov
or
insl
xchg
mov
xchg
cld
fisttps
aad
mov
or
and
push
scas
mov
enter
adc
xchg
cmp
push
pop
ljmp
xor
aad
jle
dec
cmc
lock
cmp
loop
jp
sbb
aad
cwtl
lods
dec
inc
shlb
popf
std
sub
adc
adc
cmp
adc
jb
iret
aam
add
ficoms
xchg
cmc
mov
shrl
inc
icebp
loop
fistps
sub
mov
in
cmp
inc
xchg
jmp
ja
ja
in
pop
in
pop
cli
push
cwtl
lods
add
into
xor
shlb
and
mov
arpl
les
push
pusha
addr16
add
jmp
xchg
push
jmp
mov
out
outsb
adc
cli
cwtl
test
pop
sarl
cmp
push
insl
les
pop
scas
jae
or
mov
push
fildl
mov
popa
popf
or
out
jno
sub
fists
inc
sub
adc
mov
xor
shll
movsl
aad
mov
sub
push
leave
sahf
test
dec
xchg
enter
shrl
mov
push
sub
imul
cmpb
cmp
or
mov
movsb
lods
pop
sbb
xor
cmc
push
aaa
jmp
push
sbb
push
pop
mov
and
shl
dec
xor
rclb
ja
imul
movsb
sahf
dec
xchg
pop
xor
orb
xlat
ret
mov
inc
int3
jle
adc
mov
js
xchg
mov
cmpsl
mov
nop
out
or
enter
sbb
mov
push
lods
movsl
bound
cmp
jp
std
xchg
int3
and
scas
imul
jg
sub
insb
popa
insl
out
fbstp
cmp
subb
dec
enter
scas
enter
mov
inc
adc
and
ja
out
mov
push
mov
iret
jbe
pop
aas
jae
cwtl
xlat
js
mov
push
iret
lods
xor
test
imul
jo
test
xor
xlat
lret
aas
mov
fmuls
lods
aaa
mov
sti
sbb
mov
sub
imul
mov
jns
push
adc
jns
sub
stos
or
pushf
and
mov
push
cmc
bound
inc
xlat
inc
push
lea
scas
or
pop
xchg
push
push
pusha
ror
loopne
rcrl
mov
sbb
stc
fdivs
out
inc
mov
fimull
shl
dec
or
jecxz
or
inc
add
fisttpl
mov
aaa
insb
mov
insb
sbb
fs
mov
mov
arpl
push
rorb
ja
mov
adc
jnp
mov
mov
jle
mov
push
shl
xchg
imul
sbb
stos
mov
inc
jne
mov
jl
mov
dec
mov
not
nop
shll
test
loope
add
inc
dec
insl
arpl
test
push
adc
dec
inc
pop
sahf
push
lods
sbbl
ja
cli
xlat
stc
dec
leave
out
xchg
imul
aad
sub
lock
add
fidivl
pop
rorb
icebp
pop
cmp
ja
int3
push
mov
fidivs
cmp
fisttpll
or
jp
jmp
inc
adc
lahf
into
xorl
in
inc
jnp
hlt
add
mov
jo
inc
hlt
fldcw
stos
pop
stos
mov
fidivrs
mov
rol
push
inc
mov
daa
std
movsl
pushf
jmp
scas
jp
into
pop
jl
push
sub
insl
subb
sub
xor
rcl
xchg
cwtl
jo
shr
mov
leave
mull
aam
data16
jbe
in
or
cmp
call
xorl
sti
lret
push
hlt
adc
cld
jns
jns
xor
dec
loopne
push
popa
outsb
sbb
not
xchg
push
ds
into
xor
sahf
sbb
jns
fistpll
pusha
stc
push
push
pop
test
imul
xchg
jns
js
pop
push
xchg
add
loopne
arpl
push
out
mov
pop
les
imul
testb
or
mov
mov
inc
nop
call
pushf
push
lcall
dec
decb
aaa
leave
mov
stc
cmp
test
xchg
cmp
aas
pop
sub
mov
cmp
mov
jg
push
push
loope
sbb
out
jmp
and
mov
loope
shrb
arpl
mov
jmp
sub
inc
or
jl
cmpsl
push
jecxz
rol
pop
dec
xchg
push
ljmp
xor
xchg
ja
mov
subb
frstor
mov
hlt
mov
sbb
push
sub
ja
pop
addb
inc
imul
sub
in
out
aam
test
cmpsb
dec
cmc
xor
imul
xor
mov
jecxz
adc
sub
lret
lock
jge
lret
jbe
call
test
mov
adc
mov
xchg
xchg
movsl
fists
dec
cmp
sbb
mov
cld
mov
rol
or
stc
jno
xchg
dec
xchg
pop
inc
add
jne
loopne
out
stos
imul
add
sub
sbb
mov
outsb
xchg
aaa
in
add
iret
dec
mov
cmpsb
push
repz
sbb
push
xlat
cmp
lods
push
mov
bound
and
sub
push
shrl
mov
pop
fldenv
push
sub
push
in
xlat
dec
cmp
push
pop
lret
and
jg
sub
pop
mov
imul
imul
sub
nopl
mov
adcl
mov
sbb
sahf
dec
push
xor
sbb
negl
imul
sti
in
inc
aas
sbb
sbb
xchg
sbb
aam
push
xchg
jmp
stos
jmp
lock
clc
push
cmpsl
sbb
adc
inc
cmp
imul
xlat
sbb
lds
lret
test
push
pop
or
adc
lret
add
scas
lret
fisubs
shlb
sub
inc
shrb
loopne
imul
cs
testb
ror
das
dec
xlat
mov
loopne
sbb
test
and
stos
inc
in
inc
adc
int
stc
dec
int
enter
dec
and
enter
cli
push
insl
call
scas
dec
xchg
mov
std
data16
fidivrl
movsb
nop
enter
clc
lds
in
mov
sub
out
mov
sub
rcr
or
rorb
cmc
add
imul
in
test
in
push
xlat
mov
push
inc
sbb
push
sub
dec
xchg
or
jmp
ljmp
push
std
cli
call
mov
adc
cmp
adc
cmp
cs
inc
scas
xchg
jp
sub
push
test
jns
inc
lcall
mov
lret
movsl
jb
inc
popf
je
popa
inc
push
inc
cli
ja
push
fxch
loopne
imull
mov
dec
das
or
es
sub
cli
pop
cmpsb
imul
outsb
ror
xchg
test
mov
sub
testl
rcl
into
adc
aad
cli
pop
xor
cmpsl
lret
xlat
lret
push
hlt
test
xchg
sar
lret
test
and
push
fdivl
jns
lock
pop
add
push
mov
fildll
inc
andb
mov
xchg
push
jge
and
aam
cmpsl
aam
jmp
outsb
rcr
xchg
xlat
jbe
push
lock
push
pop
cmp
shll
test
adc
or
lods
cmp
xchg
xlat
xchg
hlt
dec
inc
cmp
pop
push
mov
test
in
xchg
jecxz
xchg
sbb
push
outsb
or
adcl
rcl
cmpl
movsb
test
nop
ja
jl
fidivs
test
rol
xchg
adc
jp
test
inc
fcmovu
dec
and
pop
aad
inc
mov
mov
dec
int3
lret
inc
push
movsb
jb
mov
test
std
push
cmp
mov
fnstsw
shlb
leave
xor
dec
mov
jmp
shlb
cmpsl
fldl
lcall
pusha
xorl
or
scas
xor
pop
shll
ljmp
jo
in
cmpsl
or
xor
push
aam
js
push
jmp
loopne
mov
fimull
dec
jecxz
popa
cmp
cmp
fisubs
loop
mov
and
or
shrl
xor
ds
sbb
inc
enter
or
test
cmpsb
imul
xor
dec
mov
mov
aad
and
imul
aas
mov
dec
es
dec
sarl
out
dec
adc
jl
xchg
pop
hlt
mov
jb
in
scas
mov
fmuls
xchg
fdiv
leave
cmc
mov
mov
mov
push
xchg
popa
pop
pusha
or
out
aas
push
adc
mov
leave
cmc
jp
outsb
das
and
clc
cld
js
or
dec
into
frstor
lods
mov
sti
xchg
pop
insl
and
fiadds
dec
les
fistl
fdivrl
dec
inc
gs
sbb
movsb
test
popa
out
xchg
lahf
mov
fcomps
mov
jecxz
adcl
rcrl
mov
lret
movsb
cltd
adc
dec
push
jnp
sarb
or
pop
cmp
imul
adc
jecxz
ds
icebp
out
add
cmp
sub
mov
in
daa
inc
lret
dec
mov
cltd
gs
cld
adc
sub
jno
lret
jb
sub
inc
sbb
movsl
fldcw
lcall
into
xor
ljmp
mul
and
jmp
out
rol
inc
imul
negb
and
cmp
fsubrs
xor
lds
pop
adc
xchg
push
insb
loopne
je
shrl
cmp
dec
mov
sbb
mov
imul
mov
and
lret
xchg
dec
cmp
pop
les
mov
frstor
rcll
mov
enter
sub
call
movsb
adc
enter
mov
and
cmpsb
aaa
call
sub
mov
pop
push
xchg
movsl
imul
jbe
push
das
xor
xchg
movsl
push
sub
jmp
and
push
mov
sbb
scas
loopne
inc
jle
arpl
dec
loope
jle
cmp
cmp
icebp
cmp
lret
dec
int3
lods
pop
rorb
cmp
ret
adc
les
subb
push
or
cld
jo
inc
mov
dec
inc
shlb
stc
sub
mov
sbb
sbb
pushf
xlat
jno
in
fcmovb
popf
pop
xchg
add
jbe
jae
mov
fistpl
shlb
loope
imul
mov
sub
test
or
sub
jo
mov
pop
stos
les
neg
das
int3
adcb
sbb
imul
mov
sub
fcmovb
mov
adc
pop
int3
jg
jl
insb
out
push
pop
add
ret
mov
xchg
or
mov
mov
leave
lock
nop
pop
in
int3
jecxz
das
adc
ret
gs
insb
cmp
xchg
push
aas
lcall
fiadds
xorl
fcmovnu
cli
xchg
jno
repnz
xor
enter
adc
mov
ss
push
xchg
xlat
adc
sub
mov
cmp
mov
mov
xor
xchg
adc
ds
es
call
insb
xlat
jp
imul
shll
fistl
iret
adc
stc
stos
xchg
loopne
dec
pop
test
push
imul
cmc
jle
sbb
shlb
in
cmp
jmp
add
jo
xor
aaa
addr16
push
aam
push
add
lods
mov
jg
scas
es
scas
imul
pop
test
cmp
xor
pop
orl
call
add
int
adc
ljmp
xor
inc
lock
adc
jge
xchg
scas
aam
js
dec
enter
xchg
in
cs
and
jp
add
adc
mov
push
fstps
movsb
cmp
xchg
or
cmc
mov
icebp
fistps
test
clc
repnz
cmp
mov
lret
daa
sub
into
outsl
jge
xor
cmp
fisubl
mov
sbb
sub
mov
mov
push
dec
cmc
mov
dec
movb
test
imul
ljmp
clc
dec
out
icebp
xor
mov
or
jl
loopne
jmp
loopne
sbb
mov
pusha
cmp
pop
or
je
fcmovb
cmpsb
ret
hlt
enter
dec
nop
roll
loopne
pop
sub
sub
sub
add
fwait
jecxz
stc
adc
fcomi
inc
cmp
dec
push
daa
adc
test
aam
xchg
aaa
ljmp
rorl
mov
push
dec
test
mov
pop
sbb
dec
push
jle
and
dec
lods
add
xchg
pop
aas
pop
mul
adc
push
push
wbinvd
mov
into
mov
mov
fdivrs
jmp
call
mov
jnp
imul
in
sub
cmc
movsl
jle
ja
nop
xchg
adc
mov
std
adc
neg
popf
jecxz
mov
inc
dec
mov
sarl
sbb
arpl
pop
cmp
shll
jbe
in
sbb
sub
xchg
out
dec
and
or
sub
mov
add
bound
mov
cmp
jnp
orb
fs
dec
orl
and
dec
dec
xor
andl
jl
shll
fisubrs
dec
sub
into
push
push
bnd
clc
mov
mov
or
jmp
das
neg
mov
add
fistl
js
lods
lock
icebp
enter
in
or
push
cmp
out
mov
jle
adc
sbb
push
adc
xlat
js
push
mov
inc
mov
xchg
enter
dec
into
and
stos
mov
mov
bound
cld
lret
pushf
imul
adc
pcmpgtw
or
loopne
ss
cmp
jo
and
faddp
xor
lret
jp
aad
add
jp
dec
shll
push
fstpl
sbb
cmc
mov
scas
cmp
jle
neg
jbe
dec
lods
adc
mov
cld
sbb
adc
cmpsl
sbb
lret
dec
and
rcrl
xor
pushf
dec
pop
neg
jmp
dec
pop
lock
fsts
add
jb
push
rolb
jmp
jo
addr16
sbb
pop
jp
sub
cmp
xor
jns
adc
adc
cmp
orb
xchg
push
jne
pop
push
or
pop
push
aas
adc
incb
push
push
pop
push
stc
push
pop
xlat
adc
lock
sbb
pop
lcall
fst
jmp
shrb
clc
enter
enter
mov
sub
shl
jmp
sub
mov
scas
jl
pop
rorl
sti
pop
out
sbb
loopne
popf
or
mov
inc
fdivrl
add
dec
enter
and
ljmp
mov
mov
aas
cmc
mov
sub
fwait
imul
or
nop
in
pop
mov
into
inc
andl
xor
movsl
test
das
icebp
sbb
mov
sti
aam
shll
pop
cmc
sarb
mov
cwtl
shlb
mov
xor
add
shl
test
adc
insl
pop
movsl
fisubrl
imul
mov
xchg
test
push
jg
gs
sbb
fisubl
mov
jo
jns
adc
and
push
cmp
add
push
fs
int3
fsub
lods
dec
out
clc
shrl
loopne
iret
hlt
mov
movsl
call
loopne
jmp
pop
jno
addb
jecxz
stos
push
fs
int3
mov
sbb
cmp
adc
adc
test
mov
or
pop
lret
into
movb
cmpsb
dec
mov
test
and
lods
adc
mov
jg
sbb
or
push
and
ret
out
xchg
rcl
les
cmc
mov
out
xor
gs
sub
enter
adc
mov
mov
loop
cmc
icebp
dec
shrl
jmp
and
push
mov
stos
sbb
das
mov
mov
sahf
jmp
or
nop
xchg
push
enter
ret
in
mov
loop
jl
pop
int
test
sub
aam
loopne
xchg
hlt
imul
cmpsb
les
and
add
adc
imul
jb
jmp
inc
jp
or
int3
adc
mov
push
fldenv
mov
das
jne
repz
mov
xor
sbb
push
jmp
sub
add
aas
or
jp
loopne
in
mov
xor
push
fldt
or
in
shl
test
pusha
sbb
pop
cmp
sub
or
aas
adc
daa
dec
jg
push
xchg
add
jb
jo
loope
testb
adc
fmul
mov
pop
test
lret
insl
sub
add
cmovae
arpl
cmpsl
jge
jge
jle
les
push
mov
in
inc
outsl
jns
push
movsb
divl
dec
dec
sub
mov
popl
add
and
imul
lea
or
ljmp
hlt
popa
repnz
scas
cli
xor
in
repnz
dec
sub
xchg
mov
shr
sarb
imul
loopne
addr16
lods
repz
lds
lea
test
pop
inc
loop
or
xlat
into
mov
pop
push
pop
shl
sub
pop
mov
push
or
out
and
push
cmp
mov
cmp
and
insb
dec
enter
addr16
js
dec
sub
es
je
stos
std
ss
add
sbb
vphsubwd
mov
sub
jae
test
mov
cmp
js
push
sub
xchg
jne
outsl
push
xor
and
lods
adc
mov
pop
add
jo
pushf
aaa
dec
add
or
adc
mov
adc
dec
inc
fisubrs
scas
xor
das
or
lock
xor
pop
imul
cs
add
and
loopne
pop
loope
data16
insb
push
rcl
sbb
shrl
imul
popl
ret
pop
dec
mov
loopne
adc
sbb
aas
pop
cmc
mov
loop
mov
scas
cmp
je
fidivrs
dec
push
mov
pushf
test
mov
ljmp
xor
or
fs
push
push
faddl
cmp
jbe
cmp
call
adc
xor
negl
psrld
xchg
das
lods
ror
stc
or
mov
icebp
jno
pop
cmp
lcall
and
adcl
adc
cld
icebp
cmpsl
adc
mov
lret
jbe
iret
xor
rorl
aas
dec
jg
rcl
out
adc
push
fs
push
xchg
popa
jl
les
xchg
pop
mov
inc
mov
cmpsb
mov
dec
test
mov
jns
lock
lods
filds
call
js
test
inc
sub
sub
sub
push
mov
cltd
call
je
call
mov
push
dec
test
jge
pop
sti
lods
adc
clc
test
aad
filds
xchg
or
test
jnp
movsl
mov
in
mov
jno
cli
adc
push
mov
cs
xchg
aas
leave
fists
lds
cmp
mov
add
sarl
push
das
mov
dec
imul
xchg
push
adc
lods
lods
and
xor
sbb
inc
rorb
jl
pushf
cmpsl
cmc
in
and
fs
imul
lret
cmp
mov
push
xchg
js
fwait
inc
jno
bound
lret
add
pusha
inc
xchg
mov
pop
ds
mov
int3
imul
rcr
fcom
mov
pop
sub
and
xchg
imul
out
push
loope
mov
test
jp
xor
xchg
push
adc
js
push
ret
into
outsl
dec
loopne
sbb
sub
xlat
cli
negl
enter
or
add
jmp
jmp
and
and
cmpsb
sub
cwtl
pop
push
cmp
mov
adc
push
loopne
and
push
imul
pop
sub
punpcklwd
dec
jne
into
scas
mov
push
jl
fimuls
sbb
arpl
or
negl
pop
sahf
pop
xor
inc
or
sub
cmp
adc
pop
lret
sub
xchg
push
xchg
scas
imul
cld
add
aad
push
pop
pop
mov
cmp
fisubs
sbb
ret
or
xchg
push
xor
push
adc
cmp
jns
add
xor
xor
cli
mov
sti
fadd
fsubrs
jmp
push
mov
dec
dec
xlat
scas
rcrb
cmp
xor
lcall
sbbb
pop
xor
daa
lret
inc
jmp
sub
popf
lret
insb
pop
mov
inc
add
jg
inc
mov
clc
enter
push
nop
xor
add
movsl
push
add
cmp
loopne
fwait
push
and
scas
push
loope
jmp
sub
cld
scas
xchg
rorb
movsl
cmc
cli
cmp
cmpb
test
stos
filds
or
addr16
imul
adc
push
das
lret
and
adc
pop
icebp
push
add
jbe
xor
dec
jae
lret
out
arpl
xchg
push
sub
dec
enter
push
rcrb
loopne
lcall
sub
and
test
mov
test
loopne
sbb
and
pushf
lods
in
xchg
xchg
pop
cmpsb
scas
ficoms
in
pop
sbb
imul
std
inc
dec
popl
or
jnp
cmp
mov
aam
dec
mov
push
xlat
sub
sbb
insb
testl
icebp
xchg
mov
hlt
dec
test
push
shl
jge
push
cmp
loopne
stos
add
or
mov
cmp
lods
jne
insb
push
adc
xor
imul
andl
pop
ret
outsl
xor
dec
xchg
mov
mov
ss
insb
mov
test
jnp
mov
pushf
leave
in
jno
lret
aas
and
or
lcall
es
enter
call
div
out
jecxz
jmp
cmp
and
mov
cld
and
stos
fsubl
cmpsb
lret
or
jno
xchg
movsb
cmpb
loopne
or
pop
push
mov
arpl
inc
add
iret
orb
call
adc
add
sahf
or
or
adc
leave
stc
lret
lods
dec
cwtl
insb
add
xor
mov
add
test
sub
aas
repnz
pushl
movsl
shrl
mov
and
sbb
push
daa
jl
fistl
out
repnz
cmp
into
ds
mov
out
in
les
test
inc
rcrb
mov
hlt
fwait
xchg
adc
imul
cmp
cmpsl
icebp
es
es
jo
aaa
repz
je
add
cmpsb
xchg
aas
push
mov
mov
push
inc
outsl
test
xor
das
fcmovne
inc
or
xlat
mov
push
jl
push
in
mov
insb
fidivrl
pop
xor
lods
subb
cmp
xchg
dec
mov
insl
imul
sub
lret
mov
pop
fdivs
or
sbb
pop
add
xor
subl
mov
add
jne
daa
dec
fstl
ja
fxam
sub
push
arpl
xor
imul
int
aaa
dec
insb
push
pop
adc
movsl
andl
js
aaa
fs
es
cmp
cmp
jae
sbb
push
add
sub
xchg
lret
mov
dec
sti
loopne
je
fistl
imul
mov
mov
dec
pop
bound
lahf
pop
ret
fisubrs
aam
inc
jb
push
int
add
or
adc
inc
fst
sub
aas
aam
insb
push
shrl
das
jmp
icebp
cmp
xor
aas
inc
push
lret
jnp
in
inc
shrb
inc
div
xchg
jl
sub
sub
lcall
je
scas
inc
lahf
xchg
add
outsl
rcrb
mov
and
sbb
sbb
imul
sbbl
clc
sti
mov
bound
int
jne
inc
jmp
mov
inc
sub
shrb
addl
jmp
pusha
lcall
inc
and
test
aas
push
push
movb
mov
and
out
jp
jno
push
mov
cli
pop
out
or
and
lods
add
ret
inc
scas
test
sbb
push
outsb
shlb
xorl
fildl
rcrl
ja
add
enter
mov
arpl
outsl
fdivrs
cmp
imul
push
sti
mov
dec
movsb
and
cmpsl
mov
xchg
sbb
loop
test
and
movb
inc
push
sub
and
fstpt
xor
mov
mov
js
adc
ficomps
jmp
jne
data16
stos
dec
cld
stos
dec
xlat
cli
cmp
push
push
dec
and
in
push
or
int3
stos
call
cmp
push
imul
pop
idivb
popl
mov
shll
sub
and
add
add
cmp
mov
rorb
mov
andl
nop
or
test
mov
sti
push
sub
movsl
repz
popf
jbe
jbe
into
pop
insb
jmp
and
bound
ror
xchg
or
xchg
scas
mov
dec
in
mov
or
loopne
fxch
imul
mov
enter
loop
mov
rcll
test
cmp
insb
add
inc
imul
cmpsl
push
subl
ret
fmull
rcrb
shrl
enter
bound
adc
stos
pop
stos
add
inc
popf
test
push
mov
fistpll
imul
aad
sub
add
arpl
jo
add
ljmp
xlat
ja
mov
fildll
movsb
ss
push
cmp
adc
add
push
into
rolb
sub
jecxz
add
adc
xor
mov
out
bound
aam
jmp
cs
cltd
js
or
mov
mov
das
push
enter
cmpsl
ffreep
mov
jno
sbbb
jle
cwtl
push
xchg
dec
repz
les
out
push
or
leave
ret
mov
ret
jecxz
aad
lods
dec
adc
cmp
les
sub
jl
and
or
sub
mov
sbb
mov
mov
setno
imul
sub
lock
call
inc
ds
in
xchg
mov
mov
xchg
xchg
dec
pop
les
cmp
sbb
push
cmp
imul
fists
sarl
adc
roll
mov
imul
mov
dec
sti
das
add
push
xchg
mov
shrl
dec
testl
lret
cmp
inc
std
xor
xor
adc
xchg
xor
nop
hlt
aad
xor
mov
sbb
xor
add
enter
adc
mov
inc
jb
lods
xor
jl
sahf
xchg
sub
push
fisttps
rorb
mov
adc
jmp
aas
stc
inc
test
add
cwtl
jb
or
or
enter
pop
loopne
jl
or
test
and
adc
arpl
fcmovnbe
test
aam
aas
jg
test
loopne
es
rcrl
repz
mov
int
xlat
lret
das
addr16
lret
data16
mov
push
jg
jmp
cmp
cmpsl
xchg
lcall
pop
ja
pop
fsubrp
mov
or
xchg
push
jnp
dec
xchg
in
mov
mov
push
rcl
sub
and
inc
push
shrl
mov
or
es
out
or
and
mov
xchg
mov
xlat
sbb
sbb
cmpl
rcrb
ss
add
pushf
and
fmuls
sub
cmp
adc
movsl
dec
stc
out
mov
jo
cmpsb
outsb
lahf
or
and
lret
fcom
xchg
outsl
les
mov
cmpsl
call
pushf
push
xchg
sbb
or
inc
inc
xchg
fcmovnb
lret
xor
pop
push
call
scas
loopne
push
out
pop
je
fwait
maxps
or
test
dec
or
loope
or
cmc
call
dec
inc
cmp
add
lock
mov
add
aam
xor
xchg
push
push
fmulp
cmp
push
mov
pushf
rcr
and
inc
sbb
cmc
push
dec
cwtl
out
outsl
cwtl
dec
gs
add
and
xor
test
push
pop
mov
add
mov
ficompl
sub
jno
dec
adc
inc
scas
cmp
inc
push
movsl
inc
std
out
scas
inc
loopne
pop
pusha
inc
and
mov
sub
inc
call
adc
push
shl
cs
push
ljmp
test
aas
push
xchg
pop
xor
jne
push
hlt
inc
cmp
imul
adc
add
call
decl
add
iret
xchg
and
fs
cmpl
mov
aaa
xor
mov
and
push
push
pusha
lock
pop
jmp
sbb
out
test
jo
and
mov
sub
xlat
iret
pusha
or
addr16
in
lods
cmc
xchg
leave
iret
cld
jle
jnp
adc
test
imul
xchg
in
rclb
test
dec
or
cld
xchg
add
adc
adc
xor
fsubr
icebp
arpl
pop
and
sbb
jnp
arpl
out
andb
xor
call
test
and
mov
mov
cmp
ds
repz
xchg
frstor
loopne
dec
fwait
movsb
int
jno
jge
inc
sub
mov
adc
in
js
or
mov
xchg
push
pop
iret
mulb
mov
aad
insl
cmp
dec
sub
pop
push
pop
cmpsl
movsl
pop
sbb
arpl
pop
adc
cmp
lret
aam
xorl
dec
mov
xor
fadd
inc
cmc
push
bound
js
jp
inc
xor
imul
push
sbb
add
dec
xchg
hlt
cmp
lahf
iret
stos
add
sti
movsb
mov
cmp
adc
sub
xchg
adc
pop
jle
pusha
push
les
and
or
pop
jecxz
scas
stos
inc
mov
and
bnd
or
adc
sbb
jae
test
mov
movsb
adc
xor
sub
dec
int
loopne
pop
xor
adc
jne
mov
or
dec
fmul
dec
and
fucomi
mov
inc
xlat
inc
out
sbb
jp
xor
xchg
scas
in
sub
test
sti
push
pop
or
and
push
lcall
fldl
insl
sbb
push
mov
xchg
test
mov
pop
mov
sbbl
lahf
cmpsl
xlat
sbb
add
iret
jne
push
cmpsb
loopne
inc
sbb
jae
into
add
outsl
inc
movsb
sbb
push
inc
xor
xchg
bnd
lods
add
cmp
push
pop
out
or
stos
adc
push
mov
jnp
jne
sti
mov
int3
out
aad
pop
rorb
cmpsb
in
mov
mov
shlb
sbb
ret
sbb
enter
pop
lds
mov
les
push
or
dec
aaa
sub
push
nop
mov
fisubrl
ds
int
adc
mov
xchg
xor
pop
jae
adc
sbb
sahf
decl
mov
repnz
mov
cmp
sbb
and
push
mov
cltd
stc
call
les
push
scas
ja
test
cld
jo
ja
aam
jne
fucomi
jo
push
stos
fldl2t
mov
sub
ja
jbe
pusha
pop
aaa
scas
test
cmp
loopne
push
push
call
and
ljmp
or
sub
or
dec
pop
scas
jbe
fsubrp
loopne
call
add
jne
lock
stc
inc
repz
push
sub
stos
pop
mov
enter
lods
or
mov
lods
out
sbb
popa
add
aam
sbb
or
sub
movsl
sar
movsl
adc
mov
add
jp
fcmovnb
mov
call
xor
push
nop
xor
pop
aas
dec
sub
loope
jo
out
mov
mov
testl
lret
lods
ret
orl
lods
call
fs
xchg
js
loopne
ficoml
jecxz
push
adc
inc
mov
aas
xor
xchg
push
arpl
jp
fdivrl
call
sub
lods
or
or
pop
into
scas
push
jmp
inc
fcoms
mov
shrb
cmp
and
and
test
fidivs
stos
and
jb
lahf
mov
arpl
subl
decb
or
and
stos
pop
lock
adcb
out
xor
lret
mov
movsb
xlat
outsl
jl
fs
shll
mov
push
push
mov
jae
mov
iret
in
sbbl
arpl
mov
add
mov
mov
xchg
subb
jg
push
jg
cmp
adc
mov
push
pop
dec
mov
mov
stc
mov
cli
rcrl
in
test
ret
adc
cmp
xchg
out
fidivl
imul
xchg
cmp
test
inc
xchg
inc
adc
loopne
sbb
xor
lock
pop
sbb
adc
inc
fnstsw
nop
imul
dec
inc
sarl
lods
mov
xchg
dec
adc
or
cmp
jae
xor
mov
scas
push
mov
cmp
je
shl
adc
lds
cmp
mov
mov
adc
or
push
mov
or
push
cwtl
or
sub
add
data16
in
mov
loopne
leave
popf
jnp
js
ja
clc
and
scas
test
jp
aas
pop
sbb
dec
mov
sbb
std
fsts
adcb
or
sbb
xchg
push
cmp
inc
imul
in
xor
sbb
les
les
test
or
and
xchg
and
push
xchg
pop
ljmp
xchg
push
jmp
rcrb
test
dec
hlt
rorl
mov
iret
stos
or
xchg
lock
sbb
mov
sbb
or
cmp
push
lahf
call
xchg
imul
jb
ds
pushf
stc
xchg
lods
insb
aad
jge
movsl
imul
loope
push
test
inc
aad
iret
loop
rolb
insl
add
push
sbb
fcompl
add
inc
push
imul
movsl
shl
test
sub
mov
cmp
lods
arpl
out
xchg
aad
int3
mov
xchg
dec
popf
pop
xchg
in
jg
pop
or
in
xor
pop
les
imul
adc
jge
add
mov
out
mull
push
test
xchg
pop
add
cmpsb
inc
mov
add
popa
out
pop
pop
scas
adc
inc
add
sub
stos
push
add
movb
jno
stos
push
mov
or
dec
inc
cmc
imul
push
int
and
shll
fdivp
jle
loop
mov
fistps
into
mov
pop
push
in
mov
push
ss
or
jae
mov
pop
hlt
cmp
cmpsb
or
xor
jb
fbstp
hlt
scas
je
outsl
cwtl
out
adc
fcompl
lret
shll
lcall
call
and
adc
movsb
pop
fdivl
data16
mov
pop
jp
les
lds
push
stos
push
hlt
push
scas
push
roll
loopne
daa
test
ss
jmp
arpl
xchg
cmp
adc
pusha
in
push
cmp
pop
jge
scas
sbb
insb
int3
cmpsl
imul
push
aam
in
adc
jecxz
shrl
lret
imul
dec
arpl
sub
adc
aad
stos
aas
fidivrl
push
xchg
icebp
inc
add
sub
add
push
push
lret
test
shrb
jae
cmc
mov
dec
lea
dec
stos
adc
test
jns
adc
roll
je
mov
mov
inc
test
mov
xor
fchs
sbb
lret
sub
jae
mov
pop
xor
jmp
int3
fcomps
pop
negl
xor
aas
cltd
pop
xor
fisttpl
cmp
in
push
addr16
xchg
add
es
pop
ds
sub
dec
repnz
dec
hlt
adc
push
pop
movsl
jne
jecxz
add
scas
inc
mov
or
test
nop
test
mov
push
je
add
cli
mov
pusha
shrl
mov
imul
scas
mov
mov
inc
push
stos
lea
adc
push
cwtl
aad
push
aas
jp
aam
or
mov
test
mov
repnz
notl
scas
out
cmpsl
sub
sbb
sbb
add
in
pop
and
jnp
jb
pushf
lods
call
push
ret
in
dec
pop
lret
pusha
cmpsl
pop
aas
lea
ja
mov
xchg
xchg
imul
rcl
es
aas
lcall
inc
ljmp
test
inc
adc
lahf
push
pmaddwd
adcl
data16
dec
xchg
cmpsl
add
or
mov
ret
xorb
xchg
loope
xchg
sub
push
jg
sub
std
adc
fs
into
jno
stos
dec
jecxz
sbb
adc
pop
call
mov
push
or
and
push
test
or
sbb
xchg
ds
dec
adc
jge
aas
push
movsl
push
out
flds
mov
andl
lret
inc
cmpsl
imul
pop
jg
lcall
or
add
ss
adc
push
mov
fcompl
test
imulb
or
inc
mov
jp
and
and
pop
or
push
lcall
cmp
and
or
out
movsb
mov
imull
lret
out
jns
or
arpl
fidivrl
icebp
mov
mov
lods
scas
jle
fisubs
cmp
popf
or
mov
pop
mov
lcall
xchg
cmc
aam
push
mov
or
fcoms
dec
iret
mov
cs
orb
xor
xor
pop
mov
mov
jae
cmp
pop
dec
fnstcw
push
or
lods
mov
xchg
adc
imul
jg
pop
push
jns
call
aas
insb
ss
lods
jbe
jmp
xor
mov
out
xor
mov
out
fucomp
xor
rcr
rcll
stos
and
sub
jmp
test
push
jo
test
cmpb
jb
lret
adc
jmp
test
cmp
push
pop
nop
clc
adc
cmp
into
inc
cmp
lds
xor
dec
fs
sbb
mov
in
sub
add
insl
sub
imul
cmp
xor
imul
or
sti
cs
sub
mov
cs
mov
dec
ja
cmpsl
pop
movsl
adc
adc
push
inc
adc
ds
imul
mov
mov
test
sarb
sahf
insb
add
cmpsb
or
and
in
shrb
jl
aad
add
call
std
push
std
stc
jbe
divb
mov
sbb
jp
aad
inc
lahf
ss
xor
inc
loope
mov
sbb
int3
xlat
mov
jo
rolb
push
rclb
int3
jge
adc
out
fcoml
movsl
and
fnstcw
jg
lret
std
imul
jae
fcomps
xchg
popl
js
lods
data16
and
jnp
xor
mov
cmp
sbb
sbb
push
jg
je
int3
jp
mov
scas
push
cmp
jge
dec
loop
movsb
jbe
or
fsubp
adc
mov
mov
pop
imul
cmpsl
push
ljmp
movsb
mov
add
mov
and
jecxz
mov
jno
repz
mov
mov
cmp
aam
pushf
repz
or
dec
pop
test
roll
sti
or
imul
repz
push
jge
push
xor
scas
sub
clc
iret
cmpsl
enter
jmp
jb
test
and
dec
jo
aad
stos
sbb
popf
movsl
shll
ds
ss
hlt
push
jecxz
mov
mov
xchg
jno
fstpt
xchg
pop
test
les
cmc
aam
aas
pop
aam
sbb
dec
mov
in
cwtl
pop
shl
cmpsl
aam
inc
pushf
aas
gs
shll
jb
dec
mov
pop
pop
jnp
and
lahf
mov
push
pop
setb
inc
xchg
rcll
cmp
ret
push
sub
dec
add
mov
xor
inc
sub
enter
cmpsl
mov
cmp
lock
scas
and
xchg
iret
faddp
cbtw
leave
mov
xorl
xlat
push
xor
and
xor
dec
sub
adc
int3
lods
or
xlat
pushf
push
jle
rorb
sub
jbe
daa
pop
mov
mov
jle
jno
imul
mov
mov
pushf
into
sub
scas
stos
ror
xchg
rolb
xchg
call
mov
adc
ss
jge
std
mov
lods
adc
rcll
test
add
sub
rclb
jnp
shlb
enter
fwait
imul
adc
iret
cmpsb
cmp
ret
ja
dec
pop
xchg
in
cli
sbb
or
jnp
cld
xchg
nop
mov
pop
pop
or
imul
cltd
cmpsb
imul
stos
mov
rcll
rcl
jmp
scas
jbe
sar
cmp
pop
inc
push
cmp
mov
adc
adc
mov
sarb
xor
add
call
shll
adc
inc
inc
test
mov
jge
mov
or
inc
mov
sub
dec
cmp
enter
ds
push
xchg
out
es
pop
std
int3
adc
stos
enter
ljmp
outsb
jb
outsb
sub
jge
push
cmp
in
nop
mov
test
xor
sete
pop
daa
add
das
xchg
add
mov
ret
cld
mov
mov
sub
adc
mov
dec
pusha
adc
or
aas
pop
ja
mov
cwtl
ret
fisubs
jnp
insb
sbbb
push
fistpl
subb
insl
scas
lcall
pushl
scas
mov
decl
test
push
ret
mov
sbb
inc
addr16
rolb
and
leave
mov
mov
lret
jno
pop
int3
lcall
push
and
xchg
gs
jbe
pop
adcb
or
shr
in
add
je
and
mov
leave
sub
aad
test
add
xchg
sub
push
add
jb
lret
sar
je
jg
inc
int
decl
mov
mov
stos
or
and
xlat
sub
add
cmp
movsl
mov
pop
inc
rclb
mov
push
xchg
add
lret
xor
push
pushfw
imul
push
js
scas
jbe
pop
scas
ret
jo
movsl
mov
nop
cli
aam
aaa
idivb
jae
adc
roll
test
pop
les
xchg
adc
push
and
mov
aad
in
mov
test
lcall
fistps
fstl
cmp
and
or
push
pusha
fdivrl
call
xchg
inc
and
push
lret
sarl
call
hlt
test
inc
or
dec
mov
inc
or
in
adc
mov
push
cmpsl
mov
or
andl
in
mov
push
sbb
shld
jne
xchg
ss
mov
pop
jb
push
xor
xor
clc
les
sti
cmpb
mov
ss
insb
xchg
dec
and
dec
pushf
movl
xor
fucom
out
ds
mov
sbb
imul
adc
add
fucomip
mov
xchg
fldt
ja
sahf
push
movsl
jge
jge
orb
cwtl
mov
add
and
icebp
xor
xorl
test
jns
dec
imul
les
cmp
sub
cmp
cmpsl
test
cmp
push
pop
icebp
jg
jge
test
cmp
or
adc
xchg
dec
ret
and
push
inc
out
mov
pop
shrb
das
xchg
jecxz
call
ljmp
fbld
dec
mov
pop
mov
push
mov
mull
dec
out
movsl
mov
scas
std
cmp
inc
outsb
leave
mov
sbb
sti
rcrl
push
adcb
mov
sbb
inc
mov
jmp
xchg
repz
aam
ret
jae
std
sbb
andb
iret
jne
imul
mov
adc
mov
mov
adc
sarb
sbb
xor
test
les
jp
adc
xchg
cmp
push
mov
inc
mov
xlat
fwait
sahf
pop
das
dec
push
adc
sbb
mov
imul
xchg
push
les
xor
sbb
mov
and
push
mov
dec
mov
lahf
sub
sbb
imul
addb
push
xor
enter
test
mov
xchg
cmpsl
adc
jg
sub
imul
loop
dec
clc
xchg
xchg
imul
or
nop
loopne
or
negl
test
filds
adc
mov
or
or
pop
push
shlb
aas
les
adc
enter
into
fs
adcl
mov
rclb
sub
cwtl
xor
mov
out
lods
aas
add
sub
cld
or
cwtl
push
jle
movsb
mov
outsb
cltd
or
aad
call
fsubs
xor
sub
jb
sbb
add
dec
sub
mov
add
aas
fdivrl
fistpll
jbe
mov
and
aad
lahf
cmp
scas
cli
daa
mov
es
fs
xor
nop
mov
cmc
cmpsl
dec
dec
in
xorb
rcrl
iret
push
xor
cwtl
push
loop
in
fisubl
call
orl
jo
repz
cmp
outsb
mov
inc
add
pop
inc
andb
movb
repz
pop
jg
xlat
cmp
loop
int
pop
jbe
imulb
push
insb
mov
inc
xchg
xchg
dec
jle
jne
into
push
cmc
jnp,pt
cmpsb
imul
aad
mov
xchg
fstl
add
push
rolb
dec
rcrb
arpl
pop
mov
test
loopne
xchg
cmp
push
lds
cltd
mov
push
or
icebp
rcll
das
pop
jno
stc
mov
inc
and
mov
push
cmp
or
fistpl
imul
cmpb
inc
enter
ss
inc
adc
out
and
rcrb
into
repz
scas
jge
jmp
xchg
cli
fs
push
leave
out
sarb
jge
push
movsl
lret
mov
push
jo
pop
pusha
loope
sub
push
or
push
fs
jl
lret
push
xor
lret
mov
cld
add
fs
movsl
insl
jne
mov
loop
add
ljmp
dec
pop
push
fsubl
mov
add
push
stc
or
inc
mov
mov
sbb
pop
jae
xchg
fwait
mov
mov
fbstp
sbb
aam
sbb
sbb
dec
xor
jp
scas
or
jb
mulb
imul
lods
jns
mov
or
decl
push
cli
in
nop
adc
mov
jb
xchg
insb
jo
xor
mov
loope
fisubl
jp
iret
sbb
loop
mov
pop
adc
and
stos
into
sbb
adcl
sbb
roll
jg
ds
push
pop
adc
addr16
inc
ficomps
xchg
imulb
insl
insb
into
scas
mov
sbb
inc
jle
mov
shll
fdivrp
or
sbb
rorb
cld
js
and
pop
jo
notl
lret
push
aad
ret
add
fs
sarl
add
jns
mov
pop
movsl
dec
into
xchg
in
jbe
imul
inc
cmp
sbb
and
leave
test
in
cmpsl
hlt
stc
out
jno
loopne
inc
das
xlat
xchg
pop
xor
sahf
xor
mov
aam
mov
cmp
xchg
lods
call
push
hlt
adc
orb
inc
sbb
xchg
imul
orl
cwtl
jge
cmp
mov
cmpsl
mov
mov
xchg
inc
push
sbb
ficoml
mov
test
ficoml
pop
cmp
cmp
sub
xchg
loopne
pushf
fmuls
dec
cmpsb
push
add
push
xor
movsl
popf
enter
jmp
in
or
insl
or
add
js
adc
nop
imul
lret
cmp
adc
fsts
sbb
das
push
test
lahf
mov
decb
xchg
push
mov
movsbl
je
jle
xchg
jge
xchg
adc
enter
shl
jge
dec
mov
add
pop
jae
imul
lds
leave
fidivl
adc
pop
out
gs
xor
inc
in
jle
fsubrs
jae
add
aad
out
rcr
sbb
adc
dec
mov
jo
adc
lods
push
icebp
add
jg
fbld
pop
int
int
ja
iret
lahf
cmp
xchg
lods
pop
adcl
xchg
scas
rorb
pop
adcl
sti
or
outsl
and
mov
js
xor
ljmp
push
arpl
mov
clts
push
ds
push
add
jb
test
ret
rorl
and
push
xor
ds
cld
jg
push
sub
mov
ret
sub
add
mov
pusha
rcl
xor
mov
fcmovnbe
and
dec
imul
or
pop
pop
xor
into
dec
and
xchg
adc
fists
stos
iret
jge
rclb
lret
loopne
shr
adc
mov
jp,pt
xor
mov
xchg
subb
aam
shlb
push
ret
mov
std
cwtl
sub
outsl
out
adc
mov
push
jno
int3
testl
jmp
add
lcall
loopne
nop
lcall
jnp
or
xlat
mov
push
mov
cmpsb
xor
inc
adc
test
int
mov
jg
dec
mov
dec
cmp
push
fmull
mov
mov
mov
or
aad
clc
scas
js
insb
test
cmp
and
add
push
cmpsl
in
pop
rol
cs
sbb
cmp
mov
popf
push
leave
pushl
xor
sbb
jmp
cmp
into
push
push
test
xchg
pusha
in
pushf
xor
lret
pop
hlt
pop
push
in
aaa
jle
mov
idivl
dec
push
stos
pop
push
pop
ja
xor
movsl
xchg
jae
test
repz
jp
cmc
xchg
hlt
dec
mov
cmp
movsl
and
dec
cmp
ret
gs
fcoms
xchg
adc
sbb
aaa
xor
sub
lods
push
sbb
cld
mov
int
dec
xchg
fwait
push
and
or
sub
push
cli
outsl
movsl
das
in
inc
sbb
insb
xchg
sbb
push
pop
push
shl
fiadds
xlat
imul
and
shrl
fs
pop
pop
jne
daa
scas
cmp
lods
sarl
jb
fs
ds
add
jge
add
push
nop
std
adc
scas
mov
cmpsl
mov
enter
sub
popf
fidivs
dec
xchg
ljmp
scas
push
jo
and
lods
sbb
imul
mov
cmpsl
stos
leave
js
lods
push
or
fwait
inc
jle
xchg
jbe
push
shrl
inc
sub
jg
xchg
ds
adc
mov
mov
mov
hlt
addr16
mov
add
fistps
push
inc
hlt
cmovno
jb
or
push
jge
mov
scas
mov
aam
add
adc
popa
stos
jle
ret
imul
test
push
push
leave
xchg
popf
je
push
mov
test
mov
lods
lea
xchg
out
jo
in
movsl
leave
movsl
jae
sub
roll
push
std
cld
addr16
test
call
shrb
outsl
jecxz
sub
fistl
movsb
inc
push
pop
xchg
mov
sti
mov
nop
mov
mov
jno
insl
daa
aam
xor
pop
dec
mov
dec
lea
mov
idivb
adc
roll
sbb
xor
cltd
mov
in
xchg
movsl
imull
aam
pop
cmpsl
push
pop
movsl
mov
loop
pushf
into
adc
mov
cmp
adc
mov
dec
test
les
popa
into
loopne
mov
repz
pop
je
inc
cmp
xor
cmpsl
push
pop
stos
loope
or
cmpsb
repz
and
mov
mov
adc
ret
ja
ds
sti
sub
push
cmp
out
dec
in
and
lret
pusha
pop
sbb
sub
gs
mov
sbb
stos
ds
leave
insb
jge
icebp
lods
fs
or
inc
mov
jnp
jl
and
pop
mov
ret
xchg
jns
pop
mov
imul
push
das
ret
ss
aam
es
sti
cmpsl
mov
insb
add
adc
in
push
xor
mov
xchg
sub
mov
xchg
in
dec
sbb
xchg
js
icebp
imul
mov
insb
xor
sti
adc
and
lahf
mov
pop
dec
xchg
mov
loop
xor
mov
dec
or
jbe
addb
add
push
bound
cld
pushf
cmp
loopne
mov
idivl
leave
mov
into
xchg
test
jg
xor
mov
cmp
sub
inc
pusha
movsl
jae
and
adc
ret
popa
lods
inc
mov
jg
icebp
push
or
imulb
push
cmc
mov
shl
fldcw
ja
or
pop
ret
or
xchg
mov
imul
out
lock
aaa
sbb
fcmovnbe
push
jg
clc
cmp
out
xor
add
test
in
xor
mov
sub
test
mov
imul
push
int
xlat
rcrb
mov
mov
cld
call
mov
jae
cmp
cmp
decb
and
lock
mov
xchg
sbb
ret
pop
push
push
mov
inc
mov
and
push
adc
sbb
lock
lea
jmp
dec
rcll
scas
add
loopne
pop
nop
xchg
nop
movsl
mov
mov
mov
sbb
imul
lea
aaa
cld
cmc
lret
testl
repz
imul
call
inc
cmp
lods
in
stc
fsubp
lock
push
mov
sbb
pop
js
sbb
insb
dec
jle
pop
rolb
sub
sub
or
dec
inc
mov
rol
adc
ds
sbb
lock
mov
cmp
test
push
add
mov
mov
jl
out
mov
lock
add
outsl
xlat
xchg
adc
cmp
mov
or
pop
jge
imulb
sarl
mov
dec
test
xor
scas
mov
mov
arpl
ret
push
or
dec
xor
or
fisubs
test
jecxz
cmpsl
je
pop
sub
in
cmp
cwtl
push
or
scas
scas
lret
mov
add
inc
cmp
test
mov
mov
and
in
jle
loop
shr
psubusb
cmp
cmpsl
or
in
pop
out
xorl
movsl
pop
dec
das
mov
mov
stos
jb
sbb
cmp
sarl
pusha
xchg
call
loope
test
xchg
pop
test
rolb
outsb
adc
inc
pop
or
pop
xor
imul
jle
inc
roll
bound
dec
cs
mov
leave
aaa
sub
mov
cwtl
jg
mov
or
das
fldl
mov
inc
fidivs
mov
loopne
ds
lods
push
xchg
mov
call
push
add
mov
fs
lret
cmp
icebp
dec
jmp
jns
shr
movsl
fistpll
mov
cmp
andb
loop
xor
adc
int
addb
or
stc
cmp
scas
imul
subb
lcall
pop
dec
cmp
add
fmuls
iret
std
nop
subb
mov
add
nop
les
jae
push
sahf
cmp
inc
shll
adcl
mov
ds
test
fs
arpl
xchg
fimuls
call
je
shl
cmp
cmp
push
mov
out
xor
fisubs
lret
dec
inc
cmp
inc
sbb
lods
lcall
pop
lods
sub
stos
xchg
or
mov
sub
aaa
inc
jl
stos
cmp
call
mov
sbb
cmp
xchg
mov
inc
loopne
addr16
test
wbinvd
jmp
cmp
pushf
loopne
jns
nop
outsl
fists
ljmp
out
and
push
call
jno
test
sbb
pop
test
or
enter
dec
or
xor
add
sub
enter
add
inc
sub
xchg
or
mov
dec
jge
jne
loop
out
mov
push
sbb
jb
jno
mov
lods
ffree
aaa
cld
mov
pop
in
xlat
or
xchg
jmp
cmp
lods
xor
push
lret
lods
cmp
pop
int
sub
adc
addb
cli
in
xchg
xor
mov
inc
inc
jge
cmpsl
cmp
inc
shll
cli
aaa
mov
xor
int3
cmp
mov
adcb
pop
popa
hlt
stos
sub
nop
pusha
ds
sub
das
xchg
mov
or
fbstp
mov
mov
jge
aam
mov
stos
aad
sbb
jmp
jne
lahf
fwait
call
and
push
mov
inc
xor
sub
xor
sub
cmpl
fwait
ud1
mov
mov
add
lods
enter
inc
push
out
es
out
imul
mov
scas
cwtl
jno
jmp
insb
push
add
fsubs
cmp
fdiv
push
lcall
jge
scas
sub
je,pt
push
sub
movsb
cmpsb
adc
call
imul
loopne
dec
xchg
mov
dec
in
adc
pop
push
fucom
fst
push
sub
sahf
dec
clc
subl
xor
pop
and
mov
push
mov
mov
push
push
jns
movsl
inc
lods
shlb
data16
sarb
fidivrs
cwtl
sub
fmuls
rcrb
mov
sbbl
ja
jge
xchg
xchg
jne
aam
aaa
cwtl
and
xchg
push
xchg
jge
mov
push
cmp
pop
gs
mov
jnp
loope
push
cltd
mov
and
rolb
ja
call
mov
loope
imul
fucom
dec
xor
and
aad
push
jmp
adc
xlat
in
ret
aam
jno
xor
xchg
mov
cmp
adc
add
test
xor
adc
testl
cmp
xchg
dec
jp
xor
pop
icebp
sbb
sub
ret
mov
push
ja
pushf
sbb
dec
fcmovbe
cmc
and
sub
or
scas
iret
addl
xchg
mov
pop
jbe
rcll
mov
lods
out
or
ja
mov
movsl
mov
jmp
mov
push
popf
adc
cmpsb
jne
pop
xchg
jecxz
jno
push
std
jno
scas
movsl
inc
cmpsb
aad
adcb
adc
addb
or
push
push
cld
mov
and
outsb
mov
jge
movsl
pop
std
xor
imul
test
leave
call
jbe
pusha
jg
push
cmp
imul
push
lock
pop
jmp
fdivr
mov
add
xor
cld
cmpsb
mov
in
sub
mov
dec
mov
shlb
rcl
xchg
fisttps
inc
xchg
push
dec
imul
pushw
stos
lds
lods
push
fisubrs
pop
xchg
scas
scas
imul
fisttpll
adc
xchg
cli
movsl
out
int
mov
push
adc
test
xor
std
push
pop
and
cltd
push
adc
sub
cmp
inc
jmp
inc
jp
jle
iret
loopne
movsb
adc
sub
mov
add
fldcw
mov
imul
adc
cmp
mov
scas
and
aam
pop
cld
lods
mov
lcall
push
push
shrb
sarb
or
inc
xor
ja
jbe
pusha
mov
or
outsb
pop
cmp
or
shlb
test
xchg
inc
dec
daa
mov
inc
aam
lret
push
jns
sti
call
sbb
jge
mov
mov
sahf
mov
lret
sbb
and
jne
inc
push
adc
jmp
sbb
cmp
xchg
adc
cmp
mov
int
add
cltd
repz
cmpb
jnp
xor
inc
shll
and
jle
sahf
in
mov
inc
xchg
xor
cmpsb
addr16
bound
pushf
jne
jno
pop
mov
lods
push
adcl
daa
xlat
iret
or
jo
lcall
stos
sbb
scas
lahf
sbb
fucomip
jge
add
and
stos
xor
push
lds
mov
or
mov
push
rcrl
inc
mov
sbb
popa
jnp
imul
inc
jbe
repz
popl
lahf
lds
iret
nop
push
imul
insb
shll
shl
imul
mov
mov
cmc
mov
pushf
loopne
sub
movsl
jmp
jns
das
inc
lods
in
sbb
or
dec
test
mov
cmp
addl
sarb
imul
arpl
les
ja
icebp
mov
push
mov
cltd
mov
out
pop
sub
xchg
js
sub
push
mov
inc
cmp
es
mov
pop
in
push
iret
into
sub
or
cs
jmp
cltd
lcall
in
sbb
jns
xor
push
shlb
fdivrs
in
xchg
add
add
imul
dec
sbb
adc
scas
dec
ficompl
or
divl
xchg
lods
mov
inc
sbb
iret
scas
std
adc
repnz
push
xchg
fimuls
js
inc
clc
mov
out
jbe
hlt
rorb
adc
pop
adc
push
cmp
sbb
push
push
imul
sub
add
imul
sub
mov
push
jmp
insb
imul
cmp
cmp
adc
or
shrb
xchg
jae
push
adc
test
dec
mov
cmp
fsin
sub
fstl
aad
xor
push
les
lret
mov
cld
push
inc
jge
ds
add
out
cmc
pop
pop
scas
imul
pop
jecxz
push
cmp
aam
adc
push
or
cwtl
push
pop
fstpt
push
movsl
mov
stos
das
jl
cli
sub
jmp
scas
xchg
imul
lods
in
stos
mov
cmp
fst
lock
fcomi
movsb
add
imul
movsl
iret
sub
push
or
imul
jns
push
push
imul
rorl
lcall
and
jmp
call
imul
aam
jmp
sub
call
notrack
push
add
mov
jecxz
sub
movb
or
sub
mov
xor
or
dec
mulb
mov
bound
inc
faddl
inc
aam
nop
jp
add
jb
mov
out
push
scas
jle
add
sub
sbb
pop
int3
pop
mov
push
mov
pop
sub
cmp
lret
cmp
push
sbbb
leave
lds
pushf
jle
iret
adc
or
dec
push
and
test
sar
inc
cld
shrb
out
or
lret
jmp
sti
mov
fidivs
mov
adc
popa
jecxz
or
fidivrl
outsl
in
inc
fildll
lds
sub
push
pop
dec
cmp
mov
xchg
adc
sarl
xchg
mov
mov
ds
mov
sbb
xchg
jecxz
and
scas
cmpsb
fists
add
jmp
push
mov
repnz
add
je
pop
jecxz
add
ss
adcb
and
lcall
push
adc
or
sub
jmp
cmp
xchg
test
sbb
push
push
and
pop
and
test
push
dec
sarl
push
xchg
cmpsl
jae
cld
js
dec
adc
cli
xlat
pop
cmp
xor
jge
push
jle
jns
cltd
imul
xlat
outsb
add
test
std
mov
mov
cmp
pop
add
loope
jmp
mov
xchg
rorl
sbb
test
imul
and
jae
jb
imul
pop
jmp
xchg
ret
subl
inc
cmc
push
fs
dec
inc
mov
and
fimuls
scas
cmp
jne
sti
add
cs
int3
sti
adc
insl
cmpsb
xor
push
push
and
loope
repz
repz
pop
loop
sbb
icebp
xchg
int3
testb
adc
push
push
mov
xor
aad
mov
and
mov
cmp
sbb
in
test
jecxz
dec
in
loopne
scas
sub
mov
aaa
js
dec
jg
cmpsl
les
roll
arpl
fstpt
inc
mov
dec
or
lcall
ds
sub
or
cwtl
lods
add
xchg
cmp
ret
ror
sub
es
inc
lds
and
ja
or
sub
test
and
xor
mov
aaa
test
sub
lods
or
push
lods
and
xchg
mov
sub
jne
subl
pop
cmp
xor
adc
shr
sbb
ret
inc
shl
das
loope
mov
push
test
mov
test
movsl
and
sbb
mov
inc
dec
dec
xchg
cmp
xor
push
xor
ja
pop
ret
outsl
adc
inc
mov
data16
mov
mov
out
into
or
lea
inc
jb
cs
les
imul
cmpsl
jp
fldt
adc
mov
movsb
lcall
shlb
addb
and
daa
div
adc
rcll
fistpll
aad
add
into
pop
je
jo
ljmp
mov
fisttpll
or
aam
adc
rcl
mov
in
inc
or
push
and
rorb
jnp
je
xlat
jmp
or
aas
aad
push
xchg
imul
fdivrs
pop
cli
sbb
stos
out
fldcw
call
adc
inc
or
sbb
rorl
dec
cmp
adc
pop
push
shrb
addr16
dec
add
imull
jmp
nop
cmpsl
or
scas
mov
int
repz
and
sub
fmull
loopne
jno
mov
jo
inc
mov
adc
cwtl
sti
imul
idivl
or
gs
jns
pop
inc
mov
gs
cli
ljmp
sub
sbb
je
test
jge
dec
scas
jne
jo
popa
pop
cwtl
into
or
jg
xor
data16
or
insb
cs
dec
push
cwtl
popf
add
inc
iret
fdivrs
cmpsl
popf
je
cmp
test
fs
sub
hlt
adc
pop
aad
mov
inc
loope
push
shr
nop
aaa
add
mov
xor
xchg
add
popf
push
jl
in
aam
pusha
out
fiadds
pop
mov
lock
adc
inc
mov
cmp
mov
push
aad
repnz
aas
sti
jnp
mov
push
popa
ss
or
lea
dec
imul
lret
in
mov
test
stos
sti
adc
mov
mov
or
enter
jge
shll
stos
test
cmp
jne
insl
lret
aas
lds
dec
and
xchg
rcrb
jl
mov
ret
and
lea
dec
fisubs
jmp
push
add
sub
add
dec
lret
pop
push
cmp
imul
jo
push
popa
test
inc
jne
mov
aad
and
push
dec
fildll
sbb
cmp
imul
or
scas
fildll
pop
aas
scas
aaa
repz
adc
or
sub
push
and
and
sub
mov
call
jl
mov
pop
popa
inc
push
mov
and
pop
mov
push
outsb
mov
ds
movsl
mov
push
mov
mov
inc
je
lret
dec
fidivrl
fadd
cmp
dec
addl
in
and
cmpsl
gs
fisubs
mov
les
je
movsl
or
mov
mov
fnstsw
aad
push
fistpl
roll
std
out
mov
inc
sahf
das
xor
ss
fbld
mov
jo
cmp
sub
push
mov
xchg
inc
or
dec
movsb
mov
call
mov
rorb
into
insb
jbe
mov
push
and
lret
mov
pusha
push
jg
jecxz
test
pop
popa
and
fsubl
test
aas
jne
mov
lods
jg
fsubs
cmp
mov
in
jbe
fldenv
push
jge
xchg
es
xor
xchg
adc
aad
out
arpl
cld
jp
mov
fcmove
cmpsl
push
imul
and
loop
ljmp
inc
int
push
clc
popa
xor
movsb
rorl
dec
cmp
movsl
in
add
orb
pop
ds
dec
fidivs
je
ljmp
scas
inc
sub
pop
cwtl
sbb
push
or
dec
das
sub
fsubrp
in
movsb
je
insb
add
scas
lock
push
dec
aas
sbb
jnp
icebp
rcl
xchg
lret
cs
mov
roll
jns
jb
enter
xor
push
mov
pop
xor
loope
add
stos
xchg
sbbb
fimuls
xchg
or
out
sbb
mov
lahf
xchg
cmp
test
ja
imul
push
jmp
into
jl
add
push
mov
push
add
sub
clc
pop
rcrl
test
add
mov
nop
mov
rcrl
imul
inc
or
push
cld
xlat
insl
push
fildl
sub
inc
mov
shlb
inc
pop
or
xorb
cmp
repz
lret
pop
jle
rorl
repz
lret
mov
jae
cmp
sub
push
imul
mov
pop
shlb
out
movsl
adc
sub
insl
int
push
cmp
or
ret
test
dec
jge
push
stc
sub
mov
insl
and
pop
or
jl
es
sub
sub
push
sahf
rcl
inc
xlat
push
test
ret
ss
dec
pop
shll
jmp
pop
mov
rorl
scas
mov
pop
lods
xchg
in
sahf
nop
ss
mov
das
faddl
fstpt
jbe
and
ficomps
cmpsl
cwtl
lods
inc
sub
xor
sub
sub
push
fldenv
fmuls
scas
sub
xlat
pop
sbb
mov
fistpll
lcall
aas
adc
movb
call
and
inc
popa
imul
neg
pop
sti
mov
scas
loopne
repnz
cs
cmp
pop
test
ljmp
add
es
ret
add
sbb
loopne
out
adc
das
and
add
loopnew
sub
nop
repnz
aad
mov
mov
inc
xchg
aas
pop
test
sub
cltd
ss
imul
into
or
stos
and
sbb
das
fld
pop
ss
mov
pop
rolb
call
cld
push
mov
lods
mov
cmpl
push
mov
push
dec
push
gs
fistpll
movsl
shr
xor
test
xchg
sar
negl
dec
mov
sbb
and
jb
test
xchg
add
push
adc
sbb
jo
insl
push
add
mov
andb
mov
cmp
pop
sub
mov
imul
fnstsw
mov
imul
idivb
gs
cs
bound
xchg
in
adc
push
fs
ficoml
cmp
add
imul
sbb
jae
mov
xchg
test
aam
lahf
shl
idivl
jae
xor
movsl
fildll
mov
out
adc
inc
xchg
mov
dec
push
insl
mov
out
sbb
add
adc
cli
js
sti
into
mov
sbb
test
cmp
shll
jbe
rcll
dec
adc
or
enter
es
mov
jnp
cld
lret
cmp
dec
pop
subb
push
aas
sbb
ficoms
add
xchg
imul
les
push
movsl
mov
out
adc
sub
nop
lods
mov
or
mov
xchg
cmpsl
loopne
jae
enter
scas
mov
or
out
adc
or
roll
sbb
cmp
pop
mov
les
xlat
aas
mov
fists
sbb
push
iret
enter
cli
jae
xlat
test
xchg
call
popl
sbb
jl
sbb
or
lahf
lods
pop
rorl
cld
push
scas
leave
pop
aad
sbb
dec
sbb
mov
sti
push
mov
mov
mov
imul
mov
sub
idiv
cli
xchg
sub
shrb
mov
icebp
cmc
mov
notl
inc
or
push
inc
sub
pop
aas
jg
dec
cmpsl
repnz
cli
mov
dec
mov
push
and
scas
loopne
lea
cmp
aas
loopne
sbb
sbb
jecxz
jl
insb
cmpl
pushf
or
rclb
stc
adc
xchg
mov
movl
pop
lods
xor
rorb
mov
push
test
std
mov
inc
push
leave
jne
or
pusha
pop
cmc
push
cwtl
xchg
adc
scas
scas
loop
dec
adc
movsl
test
sub
mov
or
xchg
lock
and
sub
pop
add
icebp
mov
loop
xchg
in
mov
jb
adc
push
repnz
xlat
jle
dec
imul
jle
inc
or
stc
ret
lahf
cmp
mov
popa
enter
loopne
lahf
push
cs
aad
jns
mov
mov
pop
jb
adc
xchg
mov
jp
orb
or
orl
mov
imul
pop
cmp
out
xor
cmp
cwtl
cmp
mov
cmp
adc
and
imul
hlt
movsb
sbb
inc
lds
rclb
fcoml
inc
imul
jno
cmp
jbe
sbb
inc
adc
add
mov
mov
cwtl
fwait
inc
out
push
mov
push
cmp
sbb
inc
sbb
sahf
dec
icebp
neg
rcrl
pop
add
pop
imul
push
jecxz
dec
mov
int
jl
dec
mov
fbstp
aad
push
and
and
cmp
mov
test
or
xor
lock
roll
imul
and
std
cmp
cmpsb
aas
shrb
cmp
inc
and
mov
add
mov
xor
xchg
imul
ja
fs
cmp
sbb
pushf
cmp
adc
testl
push
xor
or
ret
inc
mov
jecxz
mov
push
sti
mov
fst
mov
or
movsl
hlt
sub
bound
xchg
add
and
bound
aam
daa
insb
out
out
add
xor
or
or
dec
mov
xchg
push
std
and
test
push
xchg
pop
bound
jmp
xlat
dec
push
imul
aas
pop
push
jne
cmc
je
add
xor
dec
push
dec
div
add
cmp
push
sub
or
jnp
out
mov
call
sbb
imul
bound
and
imul
popf
push
xchg
dec
xlat
movsl
arpl
push
jecxz
sahf
pop
das
inc
jmp
clc
xor
pop
inc
dec
jae
dec
cmp
test
bound
mov
dec
sub
xchg
lods
dec
adc
mov
adc
inc
xor
nop
xlat
fdivl
les
cmp
or
aas
loopne
shll
mov
and
xchg
fisubs
orb
and
jb
xlat
iret
gs
out
setns
popa
aaa
mov
mov
and
call
adc
or
movsb
jecxz
jmp
fistpll
cmp
fidivrl
mov
or
rclb
stos
xlat
call
fcmovbe
dec
shrb
ja
decb
fcomps
push
and
mov
imul
nop
cs
lret
repz
imul
rcrb
lret
orl
and
push
orb
pop
and
loopne
push
jl
jg
xlat
or
adc
xor
popl
aam
cmpsl
pop
lret
test
or
sysexit
imulb
rcrb
inc
ret
orb
std
ficoms
out
loop
mov
and
lret
imul
movsl
rol
push
and
in
pushf
nop
and
into
test
fistps
pop
cmp
xor
or
mov
cmpl
add
js
loop
mull
sbb
dec
imul
and
adc
mov
or
lahf
push
xor
aam
imul
imul
cld
pusha
or
sub
lret
adc
add
mov
imul
push
xchg
adc
sub
add
test
fstps
scas
call
popa
sub
stc
lret
jnp
shrl
in
and
or
out
jmp
mov
stc
je
insb
ja
clc
and
sahf
or
mov
or
daa
jge
dec
icebp
and
push
rolb
call
imul
rolb
cwtl
push
and
push
sarb
in
jne
jne
add
sbb
push
push
or
loopne
push
xchg
scas
sub
iret
and
sub
xor
dec
aas
dec
push
cmc
xchg
pop
out
les
inc
xchg
call
jo
popf
shrl
repz
sbb
push
jnp
out
xor
gs
inc
or
sbb
out
fs
push
add
push
adc
lock
pop
pop
push
adc
add
aam
adc
sbb
lods
in
mov
sbb
and
fs
fwait
imul
mov
pushl
aas
movsl
mov
add
jne
jmp
jae
sub
adcl
push
negl
adc
mov
lret
std
inc
int3
in
adc
mov
adc
lds
cmp
add
jns
ds
or
mov
cmp
std
jns
add
pop
adc
shll
cmp
mov
push
das
mov
movl
imulb
mov
xchg
mov
int3
rcrb
aad
xchg
mov
jb
popf
pop
cmp
imul
in
leave
dec
pop
std
cmp
mov
mov
enter
sub
negl
aas
shlb
sub
inc
mov
nop
inc
stos
cmpb
scas
icebp
ret
xchg
jle
jbe
scas
fcomp
mov
imul
pop
jno
xchg
add
call
dec
pop
mov
xlat
imul
lcall
js
xchg
lods
cmpsl
mov
aad
jns
xchg
shrb
ljmp
inc
fadd
dec
outsl
jl
and
stc
int3
aas
xor
push
out
fwait
enter
stos
add
stos
pop
ret
push
lods
icebp
jl
leave
fnsave
js
lret
pop
fisttpl
dec
rorl
je
and
mov
imul
rcrb
xor
aad
aas
scas
jl
inc
imul
mov
or
lds
movsl
mul
pusha
mov
call
cmp
sub
adc
scas
add
push
xchg
lods
jno
sahf
movsb
push
ss
adc
aad
jno
lods
gs
push
jmp
dec
cmp
imul
xchg
add
and
fcomps
mov
push
mov
mov
data16
sbb
mov
inc
jo
push
sar
mov
or
fiaddl
sbb
mov
or
divl
jns
adc
sub
imul
or
jns
adc
push
fnstenv
lods
popa
dec
std
mov
test
or
cmp
xchg
xchg
outsl
mov
and
sbb
leave
mov
xchg
imul
out
add
sbb
ds
cmpsl
fisttps
movsl
dec
sbb
repnz
ds
add
xor
mov
xchg
mov
rol
or
cmp
aaa
das
dec
adc
rcr
inc
cmpsl
aaa
mov
dec
dec
push
adc
or
inc
pop
sub
xchg
fists
or
test
add
sub
iret
out
or
mov
cltd
ds
mov
imul
arpl
jge
lahf
int
mov
or
and
ja
pop
call
xor
mov
ficoml
call
mov
sub
jnp
repnz
inc
fcompl
mov
jg
test
dec
mov
aaa
lods
push
mov
ss
xchg
imul
mov
nop
outsb
push
xchg
imul
icebp
pop
sbb
mov
rcr
pop
and
lea
lahf
xchg
idivb
test
or
fiadds
cmp
and
pusha
jmp
jbe
pop
pop
push
mov
fistpl
and
sbb
or
pop
scas
paddsw
js,pt
inc
pusha
add
push
fimuls
mov
test
loopne
jno
dec
int3
scas
cmp
dec
push
pop
lret
dec
ror
aaa
mov
adc
cmp
dec
jb
ficoml
dec
mov
mov
cmp
adc
cmp
mul
loop
dec
mov
out
mov
mov
aas
push
negb
pop
aas
roll
or
lret
call
mov
mov
adc
sub
dec
loopne
fsubrp
jmp
xor
sub
jo
xchg
mov
adcl
adc
scas
pop
cmp
xchg
imul
cmp
movsl
xlat
jp
adc
loope
add
frstor
mov
xchg
mov
call
or
or
sar
movsl
adc
mov
mov
into
pop
mov
ret
sbb
mov
stos
sub
or
icebp
pop
and
mov
test
adc
inc
or
cmp
cmc
ret
dec
cs
loope
imul
pushf
out
mov
mov
mov
lcall
shr
cmp
or
adcl
pop
jge
loopne,pn
xlat
jmp
jle
decb
mov
adc
sbb
and
push
loope
repnz
imul
cmpsl
enter
push
mov
jno
cld
out
and
jmp
repnz
lret
pop
mov
adc
mov
lods
add
rclb
lods
dec
cmp
mov
or
ss
sbb
imul
cs
fists
pop
jg
or
scas
loopne
adc
stos
cmpsb
enter
nop
push
jnp
out
loopne
mov
or
or
dec
daa
repz
imul
fldt
lret
cmp
rcrb
iret
js
jns
ds
adc
mov
jo
cmp
adc
int3
negb
fisubrl
add
in
xchg
shrb
mov
cmp
adc
test
push
call
jb
adc
push
sbb
push
inc
lods
js
pop
ljmp
adc
fildl
cmp
cli
pop
sub
push
lds
inc
das
jns
adc
mov
imul
int3
adc
out
data16
xor
push
jae,pt
sbb
scas
jns
scas
mov
scas
dec
je
xlat
bound
dec
mov
jns
cmpsb
xor
dec
xchg
sbb
jnp
cmp
xlat
test
jae
push
push
out
jge
pop
pop
punpckhbw
into
xor
xchg
rcl
cmp
xchg
or
lea
jnp
xor
cwtl
mov
idivl
lock
test
loope
or
adcl
mov
data16
cli
and
cs
mov
addb
loopne
ret
test
or
addb
xchg
cld
pop
and
xor
sbb
les
rorb
jp
mov
stc
mov
std
sar
or
loop
adc
mov
pusha
shrb
cmp
jmp
fstpl
lea
adc
lds
or
mov
jnp
mov
or
mov
mov
inc
rcrl
push
pushf
push
push
and
inc
test
lret
call
imul
inc
movsb
pop
fsubl
into
mov
mov
add
xor
rcr
pop
dec
icebp
sub
les
sbb
adc
add
xor
test
or
cmp
daa
add
adc
mov
push
ljmp
add
xlat
or
shll
adc
lods
cld
cmc
cmp
ja
inc
mov
inc
push
repz
fbstp
ja
movsb
dec
in
lcall
xchg
inc
fcoms
rclb
fmull
dec
adc
xorl
push
out
insl
aas
cmp
lret
jp
adc
jle
pop
mov
mov
test
sub
imul
mov
jle
test
shlb
cs
push
sbbb
cmp
out
loop
repnz
js
jmp
push
lods
cwtl
cmp
and
fcompl
jbe
push
cs
imul
aam
or
data16
adc
rcll
std
insb
mov
jl
int3
mov
and
add
addr16
jge
flds
inc
adc
das
or
push
and
dec
jecxz
fistpll
xchg
dec
or
inc
fdivrp
or
test
call
cmp
xchg
push
test
xchg
jg
xchg
dec
fisttpll
icebp
xchg
lock
sbb
push
and
call
scas
popa
scas
imul
cmpsb
mov
into
or
addr16
xchg
fistl
mov
mov
into
pop
jl
xor
fdivrp
lods
fnstsw
or
fcoms
int
and
lret
out
jno
cltd
test
imul
sbbb
mov
test
add
jge
mov
lds
fcomi
jg
mov
fstps
sub
int3
jne
push
in
pop
ljmp
imul
icebp
xor
inc
imul
push
movsl
pop
fdivr
sbb
push
dec
loopne
xchg
xlat
imul
int3
aad
and
arpl
fbstp
dec
cmp
nop
cmp
shrl
sub
pusha
push
mull
in
xchg
out
cltd
roll
scas
push
scas
call
movsb
sbb
push
scas
jge
cwtl
add
andl
xor
mov
jge
rolb
and
adc
je
mov
dec
ret
adc
scas
xchg
pop
test
test
fisubrl
pop
imul
or
push
push
stos
lret
cmp
imul
dec
xor
add
xor
sub
shrb
xlat
inc
pushf
mov
das
and
xchg
lds
or
adc
lret
pslld
fdiv
in
push
jmp
aad
push
push
negl
mov
daa
addr16
pop
adc
std
inc
add
andb
jbe
je
adc
xchg
adc
or
mov
rolb
filds
cmp
mov
je
test
test
adc
or
movsl
std
sub
pop
dec
xchg
jno
repnz
mov
xchg
fstpt
orl
insb
dec
add
bound
loopne
fs
sbb
mov
push
jnp
sti
in
add
imul
jne
fsubrs
popf
jne
lret
inc
add
lret
shrl
inc
ja
xor
mov
iret
xchg
cvttps2pi
bound
call
data16
sub
adc
pop
and
and
aad
sbb
pop
stc
mov
clc
or
sub
iret
sub
lods
xlat
jp
mov
mov
jo
mov
fisubrl
jno
sti
aam
push
addr16
sub
inc
out
dec
or
sub
int
fidivrs
mov
test
sbb
or
call
cs
pushf
add
fisubrl
add
in
jmp
into
shll
ljmp
mov
push
mov
dec
sbb
mov
jecxz
int
fmull
dec
cmp
xorl
jge
inc
imul
test
sbb
test
in
addr16
fisubrs
mov
mov
aad
leave
mov
push
jecxz
into
mov
xchg
lea
ds
mov
jge
push
ds
or
sub
pop
or
mov
ja
in
aaa
rolb
in
lods
push
xchg
lods
out
pop
shrl
or
sbb
aad
cltd
stos
lret
push
mov
dec
cmpb
fists
call
adc
loopne
sbb
ret
scas
stos
or
pushf
lahf
mov
pop
ljmp
addr16
nop
and
sub
cmpsl
fcoms
or
mov
push
jbe
and
push
scas
mov
repz
cmpsl
aad
pop
fisubrs
rcrl
movsl
or
mov
rorl
daa
pop
aad
call
push
xchg
nop
lock
dec
outsb
movsl
cmp
inc
jle
and
movsl
xchg
outsb
je
jns
inc
mov
jmp
mov
jb
repnz
cltd
nop
lods
call
popf
cmp
scas
mov
sbb
insl
mov
xchg
inc
xor
push
out
push
mov
inc
cld
sub
sbb
andl
cltd
jno
adc
inc
loopne
shlb
int
mov
push
cmp
jp
mov
xchg
and
ret
or
or
clc
push
add
push
push
xorl
orl
add
jno
fisttps
sti
jecxz
adc
mov
pop
inc
mov
loopne
jp
iret
ljmp
test
mov
mov
and
mov
stos
bound
movsb
xor
cmp
and
in
xorl
or
loop
jns
dec
clc
leave
rorl
push
movsb
dec
cmpb
push
outsl
mov
aam
dec
xor
mov
pop
addl
xchg
popl
cmp
nop
popa
mov
mov
aam
test
mov
test
popf
imul
sarb
push
cmp
adc
call
xor
inc
shrb
or
test
cwtl
push
leave
ret
jbe
fidivrs
mov
lock
push
mov
in
mov
shlb
cmp
inc
mov
and
cmp
xchg
fcoms
ds
test
xor
shrb
cmp
andb
in
fisttpll
aad
imul
in
xchg
mov
jbe
jl
mov
enter
pop
shlb
cld
andb
jge
push
adc
adc
mov
lods
mov
mov
rcl
imul
lds
cmc
dec
sbbb
mov
in
lea
mov
sub
mov
or
stos
fimuls
cmc
sub
insb
mov
rorl
inc
push
adcl
stc
jmp
jne
daa
mov
out
or
inc
sub
jmp
xchg
mov
lods
mov
jae
stos
hlt
adc
cmp
sahf
and
inc
inc
out
shlb
mov
pop
test
inc
nop
dec
sub
inc
rcll
addr16
sahf
mov
add
cmp
push
mov
jae
mov
mov
in
rorb
inc
xor
add
sahf
je
notl
rol
push
sbb
inc
test
stos
mov
or
push
dec
int3
jge
call
popa
pop
xorb
test
pop
aam
movsb
cmp
xchg
clc
pcmpgtd
inc
pop
sbb
insl
rorb
clc
movsb
orb
loopne
pushf
mov
mov
es
arpl
loopne
mov
xchg
outsl
mov
push
cli
and
movsb
mov
repnz
mov
mov
dec
mov
int
push
int3
mov
add
rclb
dec
inc
fdivrl
mov
enter
xchg
movsb
cmpb
mov
pushf
push
cmp
jecxz
dec
push
loopne
push
dec
fistpl
add
stos
jecxz
inc
sbb
lods
cld
imul
mov
sub
loopne
cmpsb
decl
mov
in
pop
insb
insb
adcl
std
shlb
aaa
in
popf
mov
xor
jbe
loopne
popf
mov
inc
add
sbb
cld
adc
mov
mov
mov
or
mov
aam
add
sarb
test
cld
test
pop
roll
mov
pop
push
sahf
cmp
loopne
and
out
mov
jno
xchg
push
subl
sub
mov
lds
mov
loop
roll
ret
lods
sub
test
mov
pop
jecxz
daa
mov
testb
pop
loopne
push
in
add
sbb
mov
cmpsb
pop
icebp
imul
adc
sbb
pop
mov
stos
xchg
lods
mov
mov
movsb
mov
lret
fmuls
mov
add
mov
aam
movsb
inc
subb
cwtl
sub
test
rcrb
mov
add
sbb
je
add
lret
jae
inc
add
adc
daa
enter
lods
loopne
movsl
lahf
pop
adc
test
mov
ror
add
sbbb
stc
nop
jne
adc
test
cmc
orb
inc
mov
adc
js
sub
test
pop
xor
into
loop
jmp
adc
xchg
test
mov
push
jecxz
popf
mov
movsb
adc
lds
mov
push
dec
xchg
mov
or
je
popf
adc
pop
push
data16
or
mov
rolb
adc
out
dec
popl
xorl
inc
xchg
push
xchg
dec
jb
loopne
pop
orl
sbb
mov
inc
push
sub
loopne
shlb
gs
sbb
imul
scas
mov
mov
or
in
loope
adc
in
mov
cmp
lock
push
add
mov
add
sahf
mov
add
mov
sar
or
lea
xchg
ss
pop
aam
mov
test
cmp
add
test
orb
push
push
inc
dec
inc
dec
nopl
sbb
cld
aad
xchg
outsb
and
les
mov
pop
fsubl
sub
sbb
jmp
arpl
mov
jns
inc
adc
clc
outsb
adc
out
mov
add
dec
fimull
ret
push
enter
or
movsb
std
mov
dec
mov
aam
sub
jo
mov
ret
mov
or
enter
add
cmp
push
sti
scas
sbbb
dec
add
or
cwtl
jle
adc
xor
adc
mov
mov
mov
outsb
pop
xchg
sub
pop
adc
jae
inc
movsb
push
and
push
mov
or
loopne
cs
dec
inc
adc
cmp
clc
in
pusha
xchg
jns
pop
enter
loope
ret
push
pop
push
xchg
push
out
sbb
and
fsts
ja
cmp
push
enter
repnz
or
enter
cmpsb
xchg
cmp
mov
cmp
inc
outsb
push
imul
adc
lea
loopne
cli
mulb
stos
or
movsb
subl
inc
mov
orb
clc
ljmp
mov
mov
xor
mov
imul
bound
cmpsl
inc
enter
nop
iret
lret
cmp
inc
mov
dec
cmc
xchg
mov
mov
loopne
jo
in
sbb
add
rorb
movsb
dec
xorb
push
mov
cwtl
xchg
xchg
in
repnz
xor
or
sbb
fstpl
add
imul
mov
rcr
pop
aam
aam
sahf
jecxz
sti
mov
inc
movsb
add
and
adc
add
cli
sub
pop
aam
mov
subb
stc
loope
mov
cmp
inc
int
lret
and
mov
stos
repz
ret
sub
mov
jo
inc
js
sub
mov
mov
inc
add
push
push
ja
mov
loopne
rcl
xchg
push
push
aad
repz
adc
lcall
clc
xchg
shrb
cli
ffree
jns
adc
inc
mov
sub
jns
adc
sub
pushf
mov
lods
insb
js
nop
ja
sbb
popf
fs
xchg
add
enter
inc
jae
pushf
sbb
test
mov
mov
fwait
mov
or
push
mov
ret
test
xor
fnstcw
push
cmpb
data16
dec
pop
cmpsb
and
fisttpll
add
iret
arpl
cwtl
xchg
and
mov
ret
inc
mov
sub
mov
xchg
cmc
and
subb
inc
mov
pop
imul
in
shrl
pushf
jo
mov
fiadds
loopne
adcb
dec
cmp
ss
pop
cld
leave
add
loopne
jb
pop
test
in
fdivl
shlb
dec
mov
jp
xchg
mov
imul
mov
pop
mov
movsb
iret
enter
sub
orb
ljmp
fwait
rcll
add
fstl
stos
lods
mov
sbb
mov
cmc
xor
movsb
mov
loopne
jbe
push
xchg
out
test
cld
xchg
test
lea
mov
jmp
movsb
add
leave
xchg
or
andl
add
aam
mov
adcl
stc
lods
add
inc
lock
xchg
mov
mov
xor
rclb
int
cmpsl
sbb
mov
lock
lods
jo
xchg
mov
fsubl
pop
dec
add
stos
enter
cmp
add
cmp
in
cltd
mov
fidivs
iret
repnz
mov
inc
sub
inc
push
orb
push
push
xlat
dec
dec
mov
pop
mov
mov
pusha
and
dec
push
xchg
dec
xor
adc
repnz
ja
cs
arpl
subb
push
pushf
xor
aad
out
ret
pop
mov
mov
daa
mov
inc
mov
mov
sub
loopne
aaa
add
lods
iret
sub
ret
or
in
jo
xchg
jns
mov
mov
inc
test
inc
xchg
pop
jae
subb
xor
push
xchg
push
push
mov
mov
je
rorl
xor
data16
dec
lods
cwtl
add
adc
mov
shrl
xor
mov
dec
inc
les
cmc
cmpsb
test
inc
in
mov
call
iret
imul
stc
adc
daa
dec
movsl
inc
sub
lret
push
lds
cmp
in
jns
rol
in
add
pop
xchg
or
into
ds
push
int3
mulb
lock
or
divb
push
in
add
lret
cld
xchg
test
ljmp
test
mov
clc
sub
inc
or
inc
mov
orb
pop
sub
jo
push
xrelease
loopne
add
add
pop
adc
aam
jecxz
sbb
mov
cs
jle
cmp
lds
cli
lahf
add
jmp
add
dec
insb
inc
test
dec
xchg
inc
mov
jno
cwtl
push
andl
add
xchg
adc
divl
cmc
mov
test
add
xor
mov
push
data16
fdivs
pusha
or
loopne
push
outsl
mov
movsb
test
inc
inc
adc
dec
add
pop
or
cmp
push
scas
cmp
rolb
cltd
stos
outsb
arpl
fldcw
cmpsb
add
push
cmpsb
cmp
mov
scas
xchg
fstps
xor
sti
pushf
adcb
daa
cmp
stc
cld
add
push
fisttpll
sub
fists
test
test
mov
out
mov
loopne
and
push
nop
jno
imul
lret
mov
lods
or
iret
xchg
fmuls
std
enter
int
lock
lcall
out
xchg
mov
xor
out
dec
xchg
push
lods
mov
jl
dec
mov
or
subl
pop
add
xchg
in
inc
inc
dec
in
dec
test
loopne
clc
pop
call
ret
adc
int3
pop
fdivr
xchg
lcall
pop
mov
push
int
or
sub
aaa
stos
mov
add
mov
insb
jecxz
or
xor
cwtl
movsb
outsb
into
add
dec
pusha
push
xchg
cmp
and
xor
notb
loop
mov
sbb
dec
inc
pop
fucom
sbb
add
sub
outsl
enter
lcall
or
xor
test
pop
xorb
cltd
jge
and
push
adcb
xor
inc
test
or
into
add
jmp
mov
dec
pushl
aas
pusha
mov
xor
mov
cwtl
in
hlt
add
dec
ret
push
inc
dec
or
adc
enter
icebp
jp
mov
add
mov
loopne
add
int3
mov
jno
pop
icebp
mov
js
icebp
fstl
adc
fidivl
hlt
stos
jmp
or
adcb
add
mov
mov
les
sbbl
lods
dec
inc
push
pop
int3
mov
call
sbb
shlb
xchg
dec
dec
sbb
xlat
jo
cmpsb
lock
rolb
pusha
inc
cmpsb
incl
inc
cmp
mov
movsb
sbb
inc
in
fsubrl
add
jo
popa
rcr
dec
mov
inc
adc
xchg
add
inc
mov
rcr
mov
cmp
loopne
sbb
in
cmpsb
out
cmpb
rcrb
pop
nop
sarl
mov
mov
lcall
xchg
testb
pop
stc
lods
mov
or
add
dec
movsb
out
daa
pop
sbb
sub
sub
adc
adc
and
pop
mov
stos
sub
in
shlb
dec
xchg
mov
std
fs
shrb
xor
mov
jecxz
leave
adc
adc
xchg
test
push
xchg
mov
dec
adc
cmp
or
add
adc
test
aam
in
lea
push
stc
mov
sbb
lcall
loopne
sub
mov
and
jle
mov
dec
sbb
mov
xchg
jecxz
adcb
out
push
arpl
fs
xchg
sbb
jmp
and
or
nop
adc
sub
mov
ret
aas
dec
jmp
mov
lock
lods
pop
jb
aad
sbb
mov
nopl
popf
add
push
loopne
push
ds
sahf
or
adc
push
cmp
adcb
or
out
inc
and
push
sarb
adc
loopne
sbb
push
stc
push
inc
dec
ds
pushf
and
icebp
out
pop
subb
imul
xchg
pop
mov
dec
jle
test
fmulp
or
or
jle
ficomps
aam
pop
or
les
adc
pop
xchg
fsub
xor
cmp
mov
imul
xlat
push
inc
dec
push
fs
dec
sub
xlat
adc
add
ds
xor
or
icebp
js
js
mov
cld
stos
mov
scas
lods
jo
ja
add
loop,pt
aam
mov
adc
rcll
ja
das
out
or
sbb
or
pusha
push
mov
cmc
fs
nop
push
jae
and
cwtl
add
daa
fldt
add
punpckldq
sbb
xlat
pusha
ss
xchg
aad
roll
cmp
add
in
xchg
mov
xchg
jno
fimull
mov
add
mov
pop
push
mov
mov
mov
inc
in
xor
or
ror
mov
popa
inc
jg
fsts
pop
lock
xor
iret
add
movsb
sub
loop
adc
outsb
mov
jns
or
jge
jmp
push
cltd
mov
inc
ds
adc
cmp
push
push
lret
repz
lods
rcrb
cld
mov
pushf
lock
and
pop
std
inc
je
cmp
cwtl
push
jp
add
pop
and
aad
add
and
idiv
int3
out
test
pusha
stos
pop
sbbb
call
xchg
imul
fildl
dec
loopne
cmp
ds
cmpsl
aas
sbbb
inc
add
shrb
jne
xor
sub
cmpsb
and
ficoml
pop
jnp
pop
fs
orl
cmp
xchg
mov
jge
lret
sbbl
or
adc
loope
cmpsb
inc
mov
push
lods
or
mov
out
pop
int3
push
sahf
jns
adc
aad
add
xchg
addr16
or
sahf
mov
divl
xchg
aas
insb
ds
mov
sbb
xchg
int3
or
mov
or
scas
pusha
cmpsl
or
mov
mov
jae
mov
push
lods
not
lock
jmp
and
gs
in
dec
cmc
pop
push
dec
sub
pop
adc
mov
sbb
pop
xor
clc
inc
lahf
push
aam
sarl
pop
push
cmpsl
aad
loope
lahf
cmc
mov
xchg
out
xchg
loope
mov
cmpsb
mov
rol
lea
mov
not
push
in
adc
pop
shrb
loope
bnd
pop
es
mov
sbb
movsl
inc
es
rorb
dec
jle
imul
cmp
push
data16
out
dec
shl
mov
cmp
scas
out
ret
loope
mov
push
outsl
cmpsb
cmpsw
in
call
push
cwtl
mov
popa
jecxz
dec
add
sub
jecxz
jo
jle
lods
imul
jae
fisubs
pop
aas
push
xchg
inc
inc
cmp
fbstp
jns
sti
test
mov
in
inc
jle
push
mov
dec
rcr
add
scas
jnp
inc
jge
dec
mov
mov
dec
jo
lret
mov
test
fnstcw
lods
jp
jp
fbld
xchg
repnz
mov
mov
inc
push
aam
cwtl
mov
push
xchg
not
mov
test
fnstcw
adc
lret
in
sbb
inc
jg
popf
rcrl
lods
cmpb
sub
negl
mov
fs
and
xchg
lock
std
sbb
fdiv
adcb
cmp
xor
in
or
rcrb
lret
sub
inc
jl
pusha
xor
test
mov
mov
mov
movsl
arpl
in
xchg
and
loopne
iret
inc
rorb
push
xchg
das
icebp
flds
mov
or
ret
fimull
enter
call
push
cmpl
cmpsl
int3
push
add
sbb
cmp
xor
shlb
mov
fs
adc
scas
pop
aad
mov
push
push
rcl
popf
imul
call
sbb
icebp
cmc
jmp
xor
call
ljmp
push
sar
fdivrs
mov
popf
icebp
addb
push
add
dec
cmpsl
scas
jp
jg
add
je
loopne
outsb
mov
repnz
xchg
enter
ror
scas
lret
jl
cltd
sbb
jne
sti
imul
inc
and
or
js
cwtl
lods
jl
inc
in
sub
fs
cmpsb
xor
or
cmpb
mov
and
cwtl
xchg
and
out
mov
std
loop
add
pop
das
popf
popf
or
inc
or
ja
std
xchg
in
mov
push
sbb
jne
test
jb
cltd
pop
sbb
sub
or
push
and
jnp
clc
adc
jb
sbb
ret
mov
mov
test
push
fisubrs
int3
fmul
imul
lret
test
xor
and
imul
cmp
push
inc
cmp
mov
pop
stos
imul
push
inc
ret
cmc
jle
loop
js
loop
lcall
pop
rorl
jae
out
movsb
aam
leave
lahf
jecxz
xor
popa
aad
je
dec
pop
xchg
or
sub
or
out
xor
mov
nop
sub
sbb
je
aad
idivb
dec
adcl
dec
or
xchg
jnp
iret
shrl
jg
je
dec
cwtl
add
fisubrl
mov
dec
not
imul
sub
stos
sarb
nop
xor
xchg
jo
movsb
fnsave
call
test
outsb
xor
imul
fsubrs
push
dec
call
sbb
out
mov
xchg
mov
push
dec
pop
imul
outsl
add
mov
out
sti
les
mov
sbb
inc
adc
sbb
push
sub
push
andb
pusha
dec
pop
sbb
cltd
cmp
les
cmpsl
test
lock
push
inc
faddp
push
fdivs
cmp
adc
inc
outsb
cmp
push
int3
stos
in
div
and
add
imul
pop
jb
cmp
fsubrl
cmp
mov
xchg
or
xchg
icebp
dec
xor
pop
pop
or
dec
xchg
mov
aad
lods
and
mov
movsl
daa
jns
inc
cmp
lret
and
out
bound
lods
mov
shlb
inc
or
xchg
mov
sub
popa
leave
aad
or
outsb
jmp
js
mov
les
jp
mov
out
push
shrb
sub
fs
adc
adc
scas
add
and
or
repnz
scas
loope
mov
in
subl
jne
add
nop
cmpsl
je
inc
ja
xchg
pop
push
dec
into
leave
jae
hlt
sbb
push
packssdw
sbb
jne
jmp
in
lcall
adc
pop
test
jp
out
test
mov
jle
xchg
add
xor
aam
inc
stos
cmp
mov
sbb
rcr
in
dec
mov
movsb
idivb
addb
sbb
cmp
out
iret
pop
out
lods
dec
sbb
pop
inc
loopne
lcall
xor
xor
or
mov
movl
cs
xor
dec
cmp
mov
filds
rorb
fisubrl
mov
or
push
cld
mov
dec
jp
out
pop
test
sub
lret
xchg
inc
mov
imul
cs
push
loopne
adc
stc
mov
mov
xchg
sarl
mov
inc
addr16
jge
sbb
xchg
out
fisubrl
pop
xor
lahf
cmp
push
or
cmp
push
call
adc
les
sub
and
or
push
mov
les
xchg
cmp
je
xchg
in
mov
adcb
cmp
cmpsb
test
cmpsb
mov
jns
mov
adc
aam
add
mov
repnz
rorb
sarb
nop
imul
ffree
and
ds
or
jo
dec
icebp
sbb
jnp
sub
inc
inc
cmc
jo
mov
cmp
aam
mov
clc
ss
fildll
lahf
repz
xchg
or
orl
xor
repnz
adc
push
and
cltd
or
cld
les
lret
aam
xchg
in
and
adc
pushw
out
outsb
call
popf
loop
mov
push
test
jle
outsb
xor
add
jae
loopne
mov
lret
cmpsl
cmpsb
xchg
add
inc
xor
lcall
jp
mov
imul
jge
jl
add
push
shlb
cmp
or
data16
or
lods
movl
sbb
xchg
icebp
std
mov
push
jle
xchg
push
mov
sub
repnz
dec
inc
dec
test
arpl
jmp
test
outsl
cmp
test
cmc
aaa
adc
push
ret
sbb
cmpsl
cmp
cmc
adc
and
mov
data16
loop
mov
mov
sbb
pop
aaa
mov
add
add
push
mov
in
xchg
test
push
fucomip
jne
xor
xor
adc
test
jmp
inc
enter
ja
sub
xor
jge
inc
std
movzbl
push
cmp
stos
add
imul
xchg
pop
mov
jmp
adcb
roll
mov
or
ljmp
mov
push
insb
ret
adc
lea
jp
and
ljmp
insb
mov
cmc
push
lret
mov
xchg
loope
mov
aam
mov
adc
cld
mov
inc
fstl
ss
jg
hlt
je
add
sbb
hlt
fisubl
ret
and
es
adc
subb
xor
in
pop
sub
push
cmc
xchg
push
cmp
xchg
cmpsb
push
lret
in
mov
push
xchg
mov
jge
mov
cli
push
out
loopne
jno
leave
test
call
jae
imul
dec
testb
inc
cmp
push
out
hlt
movsl
cld
imul
push
mov
cmc
insb
cmp
and
or
push
imul
xor
ds
xchg
imul
imul
data16
out
arpl
push
inc
jmp
into
movsl
leave
lcall
or
mov
icebp
xorl
gs
aad
mov
into
insb
scas
cmp
adc
mulb
ljmp
mov
jmp
movsb
push
lcall
sarb
cwtl
sti
ret
ret
test
mov
daa
shlb
out
loopne
testb
pop
rcll
out
loopne
inc
nop
repz
fstpt
in
xchg
adc
xor
sbb
pop
and
push
cwtl
push
out
imul
or
les
xchg
imul
jnp
push
push
mov
insb
and
and
mov
pushf
lret
aaa
loope
xor
jb
pop
cmp
into
push
jle
icebp
push
sbb
shrl
into
int3
notw
popf
mov
jns
mov
inc
orb
or
cmp
into
adc
adcl
mov
aad
leave
stc
cmp
scas
test
jo
stos
daa
test
lret
sahf
add
lcall
push
stos
pop
mov
cwtl
iret
push
nop
das
filds
hlt
dec
leave
nop
push
js
xor
xchg
imul
out
xor
xchg
ss
loope
into
and
pop
pop
leave
insl
sarl
mov
imul
mov
cmp
les
mov
fstpt
hlt
ficoml
push
xchg
es
popf
cli
mov
cmp
jbe
sbb
fmul
rcll
mov
mov
loopne
sub
add
jmp
lods
lods
xchg
cmp
xchg
sub
jbe
xchg
mov
jb
inc
call
adc
shrb
pop
pop
or
bound
jae
jl
les
add
insb
mov
jae
dec
das
std
mov
repnz
adc
or
push
pop
jmp
je
push
xor
adc
adc
movsl
ja
and
lcall
nop
push
xlat
addr16
shr
hlt
dec
lods
jnp
and
dec
bound
jge
push
jbe
xchg
fwait
sub
shrb
sub
js
push
xchg
or
imul
scas
xchg
aam
mov
test
int3
outsb
ja
ret
add
icebp
rcr
lcall
pop
fldcw
mov
xchg
xor
in
ja
jo
popa
ror
call
adc
loope
xchg
scas
ffreep
test
dec
fcmovne
enter
mov
pop
inc
sarb
inc
sbb
call
xchg
aad
popf
in
test
inc
pop
xor
sahf
leave
cmp
adc
call
xchg
or
mov
movsl
adc
pop
ret
imul
sbb
in
rclb
push
push
fldenv
inc
call
pop
adc
dec
les
mov
jne
pop
inc
lcall
mov
lret
mov
xlat
xchg
xchg
fbld
mov
incl
jbe
adc
inc
sbb
mov
gs
call
pop
cmp
push
aam
lds
xchg
out
jle
insb
cmp
dec
jo
add
pop
lods
lret
lock
sbb
std
adc
in
test
test
in
or
pop
out
cmpsl
xchg
cmp
test
popa
andl
mov
adc
call
int3
and
fwait
lcall
insb
mov
inc
adc
ror
inc
call
in
imul
push
inc
cmp
xor
test
pop
int3
das
scas
test
notl
push
add
imul
sub
xchg
jle
or
pusha
jae
push
lods
ja
push
mov
add
cli
or
jb
lock
and
dec
and
lods
test
leave
and
repnz
pop
inc
xchg
shrb
jl
iret
aas
mov
test
cmp
incb
dec
aas
daa
push
loopne
mov
out
fisttpll
add
sub
ss
cmpb
imul
xor
enter
lods
fs
push
loope
insb
dec
in
scas
call
lods
mov
insl
fsubrp
imul
es
sbb
jl
adc
cli
ljmp
cmp
rcrl
sbb
mov
daa
test
jg
xor
inc
dec
ds
or
and
pop
divb
std
sub
sbb
jle
mov
or
jbe
lods
jecxz
and
sbb
into
mov
imul
add
je
dec
aas
mov
mov
divl
into
test
es
add
bound
xlat
ret
cmp
jmp
das
hlt
lock
loop
mov
test
stos
dec
and
rolb
into
adc
jmp
jg
ret
aas
dec
inc
fsubl
cmp
je
imul
lret
lcall
mov
pop
fstpt
scas
adc
lods
imul
jno
xchg
push
sbbb
adc
hlt
lods
mov
pop
jb
sbb
test
in
xchg
adc
data16
xor
mov
xor
rorl
stc
jo
movsl
mov
clc
addr16
ljmp
sbb
jp
inc
push
lret
fwait
xchg
scas
ss
mull
add
aaa
imulb
movsl
int3
mov
loopne
and
add
pop
insb
movsb
pop
sbb
lret
sqrtps
or
and
je
jo
fs
int3
icebp
scas
xchg
cld
shl
ds
add
or
mov
std
mov
or
dec
mov
aad
ret
sarl
test
push
pop
add
repz
movsb
xchg
loop
call
movsl
pop
cld
incl
fisttpll
inc
mov
out
test
or
or
leave
push
mov
add
sahf
int
lock
movsl
fs
inc
sbb
mov
repz
shl
cmp
xlat
pop
cmp
jge
sub
jo
adc
inc
idivl
leave
adc
push
cmp
push
sarb
sbb
push
mov
js
or
nop
movsb
lods
push
push
push
jg
nop
xchg
jns
jg
lret
ljmp
mov
aaa
cmp
mov
mov
imul
fists
pop
mov
pusha
pop
cmp
adc
mov
popl
sbb
gs
stc
loope,pt
scas
pop
sar
ret
ror
cmp
fstpt
xchg
mov
outsl
push
int3
dec
push
test
push
jg
mov
jb
imul
popf
push
mov
stos
mov
cvtps2pi
std
inc
jne
leave
xor
xor
sti
iret
pop
push
and
jns
or
imul
pop
add
gs
test
fidivs
xchg
imul
mov
les
dec
cmp
in
sbb
nop
pop
xchg
test
imul
pop
inc
test
push
out
xchg
movsb
shrl
enter
out
jge
adc
jbe
imul
push
int3
dec
out
inc
frstor
push
pop
cmpsl
sbb
mov
imul
push
push
jns
xor
imul
arpl
jl
push
dec
jno
fstl
lret
mov
mov
jg
cmp
xor
cmp
je
sub
jae
gs
mov
enter
sbb
aaa
testl
faddl
jne
sub
movsb
das
xor
mov
popa
das
jae
xor
in
or
out
cli
lods
mov
pop
pop
xor
imul
sbb
test
fidivrl
out
adc
mov
data16
movsl
push
xor
xchg
sti
xchg
pusha
ds
lods
mov
xor
imul
mov
in
push
push
adc
imul
pop
add
adc
into
adc
adc
mov
dec
jle
test
sub
xchg
push
sub
clc
lret
aam
out
push
jmp
loope
cmc
rolb
fcoml
lock
sbb
scas
xor
je
in
das
jb
nop
iret
shlb
and
xchg
cmp
inc
or
xor
sbb
fbstp
adc
sahf
les
or
xchg
cwtl
jns
leave
stos
in
jmp
and
mov
xlat
lahf
addr16
lcall
push
rol
call
andb
mov
pop
add
xchg
jg
pop
or
lds
imul
sbbl
adc
into
or
fisubrs
or
test
xchg
cmp
mov
mov
adc
adc
or
test
push
dec
sbb
push
repz
rol
sub
push
imul
sub
xor
mov
rorb
adc
and
loopne
in
push
sub
shll
pop
mov
xor
jg
dec
iret
add
rorl
lret
movsb
mov
ss
rolb
inc
mov
les
pop
jno
cmpb
push
inc
mov
push
lds
mov
xchg
mov
jg
inc
lret
jno
ret
xor
mov
mov
pop
movsb
shl
jb
test
cmp
enter
jo
sbb
push
iret
aam
pop
insb
rcll
aaa
scas
jbe
shr
xlat
out
out
rclb
popf
mov
addl
mov
fwait
std
loop
pop
xchg
das
and
bound
arpl
into
push
ss
sbb
mov
imul
aaa
mov
pop
out
dec
loopne
sbb
fsubrl
pop
stos
cs
int
push
or
aas
mov
mov
pop
sbbl
out
lret
aad
insb
or
lret
pushf
mov
in
bound
or
or
loopne
mov
sub
cs
lret
jle
mov
cmp
sub
inc
jmpw
push
push
addb
jne
testb
inc
fwait
aad
cmp
cli
lods
or
jecxz
mov
push
xchg
lcall
add
addr16
adc
sub
aad
mov
jmp
xchg
adc
test
or
jl
cmpsl
fists
mov
cmp
out
dec
int
pop
andb
loopne
loope
or
dec
xchg
xor
aam
sbb
dec
cli
and
js
inc
mov
cli
mov
or
bound
xlat
and
mulb
imull
jl
mov
lret
shrb
int3
jne
adc
jae
mov
or
push
mov
inc
imul
push
in
sbb
lret
and
ss
xchg
xchg
rcll
mov
cmp
mov
nop
jne
ror
or
nop
lret
jno
cmpsb
dec
ret
or
leave
incl
bnd
bound
filds
test
or
cmpsl
imul
mov
out
or
push
ror
lret
jmp
adc
movsl
pop
jle
and
test
push
dec
in
ret
lret
pop
andb
mov
mov
lods
sbb
mov
push
les
ret
cs
orb
pop
mov
sbb
sub
movsl
ljmp
dec
popa
je
enter
inc
aad
cmp
and
inc
pop
jge
nop
pusha
and
push
mov
iret
xor
lret
pop
jnp
punpckhbw
xchg
cmpsl
aaa
dec
movsb
insb
loop
add
sahf
jo
or
in
mov
out
clc
imul
adc
adc
decl
dec
int3
pop
imul
ljmp
loop
inc
loopne
xchg
cmp
rclb
cwtl
or
inc
pop
fwait
jnp
mov
xchg
aam
je
push
insb
inc
js
aad
dec
popa
insl
mov
mov
lods
js
sbb
adc
and
out
clc
inc
leave
sub
jg
and
add
inc
fsubp
push
lds
push
fstpt
mov
xlat
pop
mov
mov
cs
dec
fwait
sub
les
adc
fcmovnbe
or
xor
push
popf
loopne
and
rcll
int
push
iret
sub
inc
jns
cmp
js
add
push
push
fidivs
jo
xchg
data16
jmp
in
sub
mov
dec
js
sub
pushw
cmpsb
scas
add
mov
add
outsl
and
cmp
sub
add
cwtl
dec
mov
xor
xor
lods
std
repnz
cmp
test
subl
add
sar
pop
adc
mov
dec
push
or
mov
pop
shrb
pop
repnz
cmc
call
test
cmpsl
ror
cmc
mull
aad
mov
or
xchg
mov
push
cmp
adcb
xchg
iret
imul
sbbb
adc
icebp
enter
mov
xchg
or
ret
jmp
in
psrad
mov
jb
sti
incb
shr
lcall
cmp
addl
mov
pop
cmp
cmp
cmp
or
call
mov
call
adc
cld
sahf
push
inc
push
mov
aam
cmp
xor
fisubrs
mov
lea
js
push
dec
push
jno
imul
outsl
fisttpl
xlat
inc
lods
je
pusha
dec
sbb
mov
imul
outsb
sbb
ljmp
xor
and
pop
scas
cmp
sub
aas
mov
and
push
ret
rorl
or
push
out
inc
jbe
roll
icebp
xchg
add
mov
mul
mov
fisttpl
aaa
add
push
rcll
push
scas
hlt
in
clc
lods
fsubr
pop
add
inc
inc
add
aad
xlat
sbb
mov
nop
pop
fs
lcall
push
push
xchg
xchg
ja
loopne
andl
xchg
sbb
test
enter
in
repnz
sbb
mov
cmp
dec
sub
push
jp
jno
mov
movsl
xlat
adc
outsl
mov
dec
cwtl
or
sub
xlat
adc
call
movsl
lcall
jle
lock
adc
or
mov
pop
mov
bound
xchg
out
and
outsl
cmpsl
xchg
xor
inc
cmc
and
push
pop
add
mov
jge
shrb
leave
cmc
jg
dec
jnp
and
cmc
mov
pop
fsub
xlat
jns
lods
cwtl
xchg
mov
adc
cmp
push
mov
sub
aas
es
ret
cmc
jl
cs
daa
fucomip
sbb
cmc
mov
adc
adcl
sub
xchg
mov
and
test
ret
outsl
movsb
xchg
xchg
and
fiaddl
roll
dec
enter
add
imul
inc
push
call
aas
adc
movsl
testb
dec
add
loopne
dec
jae
xor
sbb
xor
push
ljmp
mov
loop
std
lds
xchg
arpl
lock
xchg
jecxz
push
jnp
jp
sbb
dec
and
js
mov
in
add
rolb
aad
das
daa
mov
jle
cli
xchg
adc
imul
pop
fistl
mov
adc
imul
in
push
mov
inc
xchg
roll
xlat
jns
adc
cmp
xchg
mov
and
ja
dec
inc
out
jecxz
push
xchg
sbb
mov
or
stc
jo
sub
add
mov
push
sbb
mov
xchg
mov
inc
inc
enter
int3
jl
xchg
lret
jp
mov
jle
xchg
imul
fwait
int
push
cmp
inc
movsl
sahf
pop
lret
insb
adc
and
cmp
add
xchg
jnp
aam
fisubrl
mov
shlb
pop
add
in
shr
cmp
push
or
pop
rorb
xchg
movsb
test
jle
xchg
add
inc
cwtl
xchg
sub
or
jo
inc
inc
orl
enter
adc
xor
cmpb
mov
scas
pushf
sub
pop
test
inc
test
nop
aam
in
das
adc
out
aaa
test
push
inc
pushl
xchg
rcl
dec
mov
add
rcrb
scas
stos
sar
and
mov
sub
dec
push
push
dec
test
add
inc
icebp
jle
and
jns
xor
ss
push
cltd
pop
nop
scas
popa
mov
and
pop
mov
xorl
test
sbb
cltd
imul
dec
mov
or
scas
insl
pop
xchg
inc
sqrtps
xlat
test
push
sub
mov
xchg
pop
add
insb
addb
pop
mov
push
es
mov
clc
sub
push
dec
pop
mov
insb
xchg
push
xor
imul
mov
es
outsl
mov
fbld
jle
jmp
mov
out
sub
mov
ret
push
testl
pop
cmp
int
call
stos
adc
sarb
orb
and
scas
jnp
test
sbb
and
sarl
pop
enter
add
sbb
cmp
aaa
push
sub
push
fdivrl
in
add
jae
mov
int3
ljmp
push
mov
add
hlt
sbb
popa
sbb
rol
pop
out
and
sub
xchg
fcmovnb
sub
sbb
call
sbb
and
push
inc
lret
out
movsb
and
es
xchg
xchg
add
adcb
jmp
les
adc
xor
jae
dec
dec
jae
ds
movsl
sbb
push
jnp
fidivl
call
rclb
movl
cltd
pop
fs
sub
cmp
lret
movsl
jnp
pmaddwd
ds
jbe
xor
xchg
fcom
cmpsl
dec
inc
aas
test
jb
je
orl
and
loop
fs
and
mov
fiadds
or
fiaddl
inc
jge
mov
sub
stos
iret
inc
call
imul
mov
insb
insb
mov
popa
jmp
shrb
insl
int
sbb
subb
arpl
adc
orb
sbb
push
shrl
jp
mov
sub
sbb
scas
jle
test
call
enter
xchg
test
mov
outsl
aam
andb
test
sbb
sbb
popf
add
push
inc
rcr
js
pushf
fcomps
pop
inc
call
cmp
push
pop
daa
lret
jb
mov
enter
adc
cld
lods
popf
or
rcrb
inc
cmc
cmp
outsb
cmp
nop
jae
mov
or
mov
test
mov
loopne
rorl
lret
pop
out
and
ja
dec
lahf
sbb
push
and
mov
filds
outsb
ljmp
push
lock
call
push
movsl
dec
shrb
in
mov
aas
push
or
aad
gs
pushf
mov
xchg
xor
call
xorb
arpl
jns
mov
mov
data16
test
adc
sbb
sahf
mov
daa
and
push
cmp
aam
rcrb
or
push
push
cmp
xchg
rol
cmpsb
mov
test
es
test
inc
imul
push
sub
xorl
mov
jo
jb
scas
loopne
rol
jmp
xchg
dec
mov
js
mov
adc
adc
insl
sub
pushf
scas
bound
mov
rorb
cmp
push
movsl
mov
mov
add
fsts
imul
push
addb
loope
push
pop
adc
je
push
sub
call
dec
fstpt
ss
imul
push
or
or
sub
inc
inc
pop
cmp
sbb
xor
jbe
imul
sbb
sti
cmp
jmp
add
xchg
aas
or
mov
jge
cli
test
imul
adc
fcoms
xchg
xor
lret
pop
mov
lret
jne
push
movsl
call
or
fists
nop
mov
sbbl
std
sub
into
loopne
jbe
jp
push
jae
xchg
imul
dec
jns
or
push
mov
mov
push
cmp
sbb
outsb
mov
cwtl
jl
dec
rcll
fcompl
aad
inc
in
into
mov
push
or
cli
pop
mov
adc
mov
xchg
cmp
fstl
sbb
push
push
rcl
sbb
shlb
adc
je
adc
cmp
lds
ret
push
xchg
mov
pop
push
movsl
jmp
add
mov
push
mov
inc
aas
dec
add
lcall
scas
shlb
mov
rorb
pusha
xchg
fstpt
je
and
nop
rorb
dec
and
push
xchg
aam
scas
mov
adc
ljmp
cmpsb
sarb
sbb
mov
mov
mov
add
xchg
push
sub
dec
mov
and
out
sub
ja
int3
pop
xor
and
sbb
pushf
nop
sbb
imul
dec
ret
test
insb
das
ficompl
jns
iret
jl
push
xchg
mov
sub
aaa
cmpsl
pop
in
orb
cmp
ljmp
mov
inc
mov
sub
add
jp
adcb
leave
std
sub
insl
cmp
xor
nop
add
push
jle
ljmp
aad
into
sub
or
jb
stos
and
push
mov
ds
dec
fisubrs
leave
mov
pop
add
sub
jp
xchg
loopne
mov
stc
fadds
clc
jmp
mov
fisubrl
imul
rorb
push
sub
into
movsl
mov
push
and
or
in
mov
inc
test
fisubs
sti
sub
xor
cmpsl
in
or
ljmp
adc
test
jnp
inc
and
in
xchg
fadd
mov
cld
loopne
std
sbb
sub
rcrl
sbb
cmp
into
sbb
or
xchg
and
inc
inc
cmp
call
adcl
loop
fnsave
xchg
mov
shrb
xchg
inc
lods
out
dec
loopne
sub
in
sub
add
aad
imul
enter
orl
cmp
js
adc
adc
cmc
jle
fsubrs
fnstenv
test
roll
push
cli
jbe
iret
ss
fs
filds
push
movsl
fcmovnu
adc
movups
jge
test
test
pop
hlt
aam
js
cmc
sub
test
movsl
dec
mov
mov
cmpsl
push
arpl
xor
cmpsl
dec
jecxz
dec
ret
orl
cld
jg
mov
idivb
stos
lods
ja
call
mov
inc
cmpsl
inc
push
les
mov
ret
dec
int
stc
add
lds
std
cmpsb
call
test
in
mov
push
add
or
cmp
and
loop
push
dec
mov
or
push
sbb
jp
dec
cmpb
daa
mov
sub
lret
mov
push
inc
jbe
xor
xor
push
shrl
out
add
mov
jnp
pusha
mov
sub
push
mov
pusha
fsubrp
add
adc
mov
xor
ljmp
pop
mov
adc
je
jne
adc
aad
jmp
call
or
and
cmp
in
mov
push
xchg
in
mov
les
shrb
push
les
fs
incb
push
call
sub
adc
push
dec
inc
je
cmp
aaa
mov
and
jl
dec
shlb
xchg
inc
negl
enter
daa
jmp
out
fs
repz
mov
add
xor
sbb
pop
mov
fldcw
push
or
scas
push
insb
pop
mov
das
jecxz
push
mov
adc
fistps
push
lds
fidivs
cmp
jb
scas
mov
jl
es
sbb
sbb
sarl
je
repz
cltd
imul
cmpsl
sbb
mov
pop
inc
or
xchg
mov
stos
lea
movsb
lret
fwait
call
mov
xlat
jb
cmc
add
das
iret
adc
cmp
and
ljmp
stos
dec
and
xchg
push
in
xchg
ljmp
je
add
jl
xchg
xor
jmp
sarb
mov
pop
and
mov
mov
xchg
xchg
lods
fcoms
pop
shl
shll
push
add
xor
and
outsl
loop
std
mov
mov
pop
fdivrs
xchg
xor
outsl
js
std
lock
lods
test
mov
mov
imul
jg
xchg
in
out
test
push
pop
jbe
fildll
mov
test
jl
jge
in
dec
mov
lret
pop
inc
or
iret
into
sbb
jmp
shrl
hlt
sti
adc
je
scas
aad
in
leave
xchg
sub
test
iret
jecxz
into
mov
ja
cmp
push
push
or
rclb
adc
call
enter
std
sbb
call
int3
jb
jb
enter
mov
push
aam
rclb
imul
push
loopne
int
scas
sub
adc
call
mov
fldcw
fbld
sbb
test
push
lods
cltd
imul
icebp
cmp
mov
ret
sbb
outsb
loop
add
push
iret
mov
add
cmp
aas
flds
in
cmp
add
sub
pop
or
add
call
movsb
jle
xor
push
sbb
fdivrp
inc
sub
pop
adc
sbb
dec
stc
xchg
lods
mov
rorb
push
cwtl
xor
mov
insl
dec
rcl
jns
sub
adc
stc
jns
xor
mov
jg
xor
inc
push
loopne
repnz
cmc
adc
int3
imul
push
lret
ja
xchg
inc
dec
mov
sub
push
lods
or
jge
clc
cmpsb
pop
fsubr
filds
cmp
jg
or
test
outsb
movsl
pop
in
lcall
push
push
stos
roll
cld
mov
cmp
xchg
inc
cmpsb
ret
add
push
into
js
add
sub
lret
sbb
mov
push
aas
mov
inc
ficomps
out
pop
mov
pop
imul
mov
ret
imul
pop
enter
mov
aam
push
out
bound
push
negl
insb
push
jle
add
jae
outsl
orl
popf
lcall
daa
mov
movsb
loopne
imul
jle
icebp
push
std
xchg
fidivrs
and
aad
popa
shll
movsb
sbb
int
inc
jmp
loop
scas
pop
xchg
jo
inc
scas
inc
sub
fdivr
push
inc
call
or
test
cmpsl
inc
mov
loopne
cmp
or
and
in
mov
lock
adc
fisttps
pop
and
call
imul
mov
es
ljmp
loope
test
mov
lret
add
push
rcll
add
or
mov
mov
push
sub
mov
or
inc
mov
aaa
addr16
cmp
stos
cmpsb
dec
adc
add
imul
push
popa
out
mov
stos
inc
or
jne
pop
scas
mov
loopne
mov
das
xchg
mov
or
fnstenv
push
outsb
bound
fcmovbe
pop
aas
mov
or
xor
call
aad
insl
mov
jnp
sbb
test
mov
aaa
into
inc
dec
imul
movsl
iret
aas
sub
cmp
jge
imul
insl
test
repnz
lret
out
mov
inc
rcl
ds
repnz
dec
add
jg
pushf
mov
cmpl
cmp
ljmp
adc
scas
nop
repnz
sub
pop
stos
mov
test
adc
push
jl
jbe
adc
xlat
mov
int
and
lret
stos
mov
jle
adcl
enter
push
add
loopne
dec
cmp
or
out
and
xchg
xchg
mov
imul
lret
arpl
sub
pusha
push
movsb
js
cwtl
cmpsl
xchg
push
daa
xchg
jns
or
iret
mov
jb
fiadds
inc
mov
mov
sar
out
jns
mov
adc
je
push
pop
imul
inc
jo
scas
dec
adc
mov
or
mov
dec
lea
pushf
mov
out
ss
mov
outsb
dec
incb
mov
pusha
mov
pop
push
cmp
push
test
mov
jo
rorl
xlat
xor
es
fldcw
mov
stos
inc
jl
les
mov
into
sbbl
push
cmpsl
gs
jb
loop
jne
mov
add
jbe
mov
push
cmp
inc
mov
fisubs
adc
push
sahf
test
sub
loope
sub
jo,pt
ret
and
call
jb
mov
sarl
test
or
cmp
sarb
sbb
add
cmp
aas
mov
stc
shl
adc
push
pop
gs
stos
xchg
mov
jl
imul
xor
enter
jp
jmp
inc
or
mov
div
xor
mov
push
stos
cmp
lcall
jb
jmp
pop
cltd
clc
sub
not
js
test
add
pop
out
movsl
fdivs
or
mov
fimull
push
push
lods
sub
getsec
cmp
or
in
xorb
adc
push
mov
xor
xchg
adc
ds
stc
and
lods
leave
mov
mov
insl
imul
push
filds
shr
out
xor
sbb
aad
test
dec
lret
adc
adc
mov
and
jae
aad
das
mov
push
in
inc
xchg
sub
scas
dec
sbb
add
icebp
adc
inc
inc
mov
pop
fsubrl
mov
xor
xor
pop
and
jmp
jns
inc
add
add
dec
lret
inc
repnz
ds
rcrl
xchg
pushl
int3
mov
and
ss
mov
stc
lahf
stos
and
xchg
push
dec
ja
rcll
roll
aam
sub
jns
fidivrs
add
call
in
pop
jl
inc
cwtl
imul
jnp
pop
imul
std
mov
pop
movsl
sub
mov
push
sub
cwtl
and
js
sub
cs
sub
jmp
popa
push
sbb
adc
mov
cltd
lcall
int3
stos
inc
movsl
pop
mov
jle
add
outsl
rcr
subb
push
push
mov
xchg
stc
insl
sub
cmp
dec
clc
dec
out
js
lret
mov
cmp
xor
sbb
xchg
sarb
mov
aad
icebp
push
push
in
jb,pn
into
outsl
pop
int
adc
mov
bound
mov
sub
or
lret
dec
nop
xchg
lods
sti
push
mov
loopne
or
pop
jl
mov
inc
fisubrl
xchg
mov
xor
lds
xlat
sbb
mov
imul
insb
cmpsb
sub
hlt
lret
and
das
adc
loopne
adc
ja
test
jl
push
cmpsb
les
sbb
xor
cmc
cmp
out
in
iret
inc
insl
fmull
fcom
fwait
or
sbbl
inc
push
adc
ljmp
mov
xchg
in
mov
xchg
inc
sbb
mov
mov
add
inc
sbb
inc
sbb
das
movsb
pop
mov
fnstsw
mov
mov
push
mov
mov
push
scas
jg
push
sub
mov
lock
movsl
imul
lock
movsb
push
cwtl
sbb
je
pushf
movsl
cltd
add
scas
sahf
xchg
adc
or
fldt
add
pop
mov
or
mov
bound
and
ret
std
cld
add
pop
das
lret
push
rcl
xor
rcr
sahf
xor
scas
add
sub
adc
mov
shrl
sti
mov
sub
mov
xchg
sahf
fistpll
sub
fdivrs
cld
loopne
mov
xchg
ja
aas
pop
xor
pushf
scas
mov
cmp
ret
add
jle
ret
xor
lret
or
adc
fldl
mov
jb
xchg
push
nop
push
outsb
xchg
das
ret
rep
jge
nop
add
push
loopne
or
rcrb
cmc
sbb
stos
dec
inc
fidivs
push
sub
test
lods
adc
and
add
sub
outsb
jle
loop
sbb
enter
jb
filds
and
sub
or
lret
cmp
push
xor
mov
xor
mov
jae
test
push
addl
fwait
adc
inc
clc
fisttps
mul
call
add
or
cmp
imul
call
data16
mov
in
sbb
and
loopne
push
imul
fadd
lret
cmpsl
dec
xorb
paddb
cmp
sbb
cwtl
clc
icebp
push
xchg
call
out
and
out
fcomp
aam
fiadds
pop
loope
neg
mov
jp
aaa
push
xor
mov
adc
movsl
lods
mov
cmpsl
cwtl
xchg
imul
fucomip
outsb
ja
ret
push
imul
into
jge
decl
lods
xor
int
or
int3
sub
add
sub
addr16
or
int
dec
cmp
scas
aad
cmpsb
call
subb
jg
jge
pop
or
push
aad
xchg
out
and
les
jns
add
fisubrs
or
test
push
ret
or
popa
lock
nop
and
stc
das
stos
jg
mov
adc
inc
push
add
adcl
pop
mov
rorb
dec
lret
sti
ljmp
xchg
jns
in
imul
in
stos
dec
and
pop
sbbb
cmp
push
pop
add
cmc
dec
push
jbe
push
push
jp
fsubr
sub
insb
test
inc
jle
adc
stc
pushf
leave
inc
fnstsw
sbb
test
sub
in
ret
inc
jge
ss
mov
xchg
dec
push
mov
xchg
cmp
test
fiadds
adc
lods
out
and
push
std
pop
test
push
mov
out
into
lods
and
pop
xor
mov
sub
cmp
sbb
jecxz
xchg
stos
xor
mov
call
int3
ficoms
addps
clc
cmpsl
filds
jo
loop
loopne
push
je
rolb
outsl
dec
test
into
pop
fstpl
sbb
lock
xchg
mov
add
dec
push
jnp
test
adc
push
daa
movsl
push
mov
gs
lock
dec
mov
jb
add
sbb
out
lret
xchg
add
rorb
and
out
jb
aas
cwtl
mov
lods
push
mov
imul
or
cwtl
push
je
pop
dec
scas
sbb
cmpsb
loop
and
xchg
push
push
cmp
sti
movsl
fists
push
lahf
push
nop
xchg
fcmovnu
sub
jmp
and
xchg
push
testl
shrl
mov
mov
pop
xor
mov
ret
data16
mov
scas
mov
mov
insl
pop
jge
mov
aaa
cmp
std
hlt
pop
loop
lods
rcll
cmp
push
adc
xchg
outsb
jecxz
push
mov
adc
mov
lret
inc
cmpsl
push
divb
icebp
jmp
xlat
in
dec
push
pop
rcrl
or
cli
xor
jnp
or
push
pop
aam
push
push
pop
mov
jbe
add
insl
jge
or
mov
sub
mov
sbb
call
cmp
mov
jns
subl
add
fiaddl
cmp
enter
imul
add
pop
pop
mov
xor
sub
push
mov
mov
movsb
xchg
mov
mov
arpl
mov
push
je
pop
mov
lcall
adc
mov
jmp
mov
lcall
mov
mov
xchg
mov
jnp
push
mov
int3
lea
bnd
cwtl
push
pop
in
test
fdivrl
cmpsl
shr
adc
dec
ret
imul
js
pop
add
andl
leave
test
mov
cwtl
push
mov
and
shll
xor
call
cmp
in
and
cmp
jne
aas
dec
popa
sub
sub
xchg
fwait
imul
inc
stos
lods
outsl
jno
lret
adc
movsl
jbe
stc
push
rcll
mov
mov
mov
call
das
sbb
test
add
call
sub
jp
inc
orl
mov
xor
or
push
push
shlb
mov
shrb
adc
push
jle
push
lock
subl
sbb
imul
iret
aam
scas
iret
lods
dec
mov
sbb
xchg
daa
xlat
mov
cmp
cld
mov
mov
imul
movsl
fcmovu
dec
cwtl
sahf
roll
adc
mov
cmp
cmp
mov
push
pop
es
mov
pusha
lds
movsb
inc
js,pt
and
incl
jbe
lods
push
mov
add
cltd
pop
cs
pop
jbe
incb
hlt
mov
jecxz
mov
sbb
leave
test
push
adc
hlt
jb
pop
mov
fidivrl
lret
jge
push
jge,pt
cmpsl
fst
dec
sbb
lret
sbb
jp
sbb
mov
add
mov
fldenv
movsb
push
lods
xor
jl
add
or
dec
xlat
xor
hlt
push
dec
lods
mov
xchg
lret
cmc
insb
sub
lret
clc
lret
test
ret
lret
hlt
xor
mov
ret
dec
lret
mov
rcrb
stc
xchg
mov
lea
aas
lcall
pop
stc
test
mov
push
aas
push
pop
sbb
dec
popa
mov
push
daa
pop
and
rorb
cld
outsl
or
nop
or
cmp
aas
xor
fisttps
rorl
mov
cmc
sub
test
pop
fadd
lds
movsl
jb
push
out
and
add
mov
sub
xchg
std
mov
mov
sahf
inc
jp
test
pushf
out
push
push
imul
xchg
sub
in
xchg
xor
ret
shlb
xlat
nop
pushf
push
in
orl
cmp
mov
adc
or
mov
push
ds
fidivrl
and
add
push
cmp
rcrb
add
push
ja
fcoml
movsl
jne
adc
jb
or
inc
movsb
int3
leave
rorb
sbb
imul
popa
pop
cli
jbe
rcrl
or
adc
out
jmp
cwtl
dec
xchg
stc
xor
xchg
add
cmp
das
push
test
xchg
xor
cld
mov
pop
xchg
fadd
bound
das
cmc
cmpl
add
test
push
push
lods
dec
sbb
call
fcoms
push
sbb
dec
mov
sub
andb
jge
jnp
out
mov
repnz
mov
ret
roll
push
add
adc
aas
jnp
mov
aas
xchg
cmp
xchg
rorb
jnp
pusha
loop
jns
pop
xor
push
cmpb
jle
jns
cmp
call
hlt
je
imul
cmp
scas
and
dec
aaa
mov
jp
ficoml
jg
aas
int3
pop
dec
pop
loopne
call
sti
push
test
insl
loop
jbe
in
punpckldq
add
outsl
cld
mov
pusha
incb
jge
ret
and
jne
shrb
jno
jl
add
orb
stc
repnz
mov
cmpsb
cmp
xor
out
hlt
cwtl
aas
leave
mov
imul
xchg
jg
pop
mov
popf
push
mov
pop
pop
sbb
mov
jg
push
xlat
cmc
test
push
not
imul
rcr
mov
test
adc
mov
xorl
and
movsl
out
jno
mov
pop
adc
cmp
inc
push
js
shl
out
clc
adcl
lea
stos
jns
add
mov
inc
je
mov
mov
sti
or
push
fsubrl
lea
or
cmp
rorl
clc
add
cld
mov
or
mov
subl
out
stc
pop
pusha
adc
in
lods
mov
jmp
and
lods
movsl
jbe
push
push
js
call
imul
mov
add
test
jmp
add
sub
test
outsl
and
xchg
sbb
xchg
leave
repnz
scas
dec
inc
lret
adc
scas
addr16
insl
loopne
xorl
int
add
ljmp
push
scas
pop
cltd
outsb
sbb
lds
cwtl
aad
sti
cltd
add
pop
pop
adc
clc
daa
decl
loop
add
xchg
ja
fdivs
add
out
test
push
lret
push
lcall
dec
popf
hlt
je
sub
popf
xchg
mov
jge
inc
loopne
or
lahf
inc
jnp
xor
inc
cmpsb
test
outsl
ja
movsl
dec
pop
sub
pushf
xor
scas
cmc
mov
lcall
mov
mov
sub
scas
leave
sbb
push
clc
loop
loope
jae
pop
jb
cmc
mov
addb
jge
or
fmul
cmc
mov
or
lods
push
jle
mov
sbb
btc
sub
out
xlat
push
fs
dec
adc
and
call
xorl
mov
loope
imul
cmpsl
add
aaa
test
inc
push
subl
or
sub
xor
fsubp
loope
fidivrl
hlt
call
test
pop
dec
pop
xchg
cmp
xor
movsb
xchg
mov
mov
les
xchg
push
pop
insb
inc
inc
loop
mov
mov
out
in
mov
jg
jl
sbb
lahf
or
mov
cmp
into
cmp
je
imul
enter
dec
and
cmp
adc
lock
ss
mov
aaa
in
push
dec
pop
fwait
cmp
lret
setb
push
loopne
mov
cmpsb
sbb
inc
push
jb
sbb
mov
aad
outsl
jmp
adc
aaa
inc
shr
call
aam
add
in
cmp
cmp
fstpt
insl
add
jmp
add
fistps
cmpsl
xchg
lret
dec
loop
mov
test
rcrb
cmpsb
rclb
movsl
je
sarl
push
and
mov
mov
insl
and
out
test
or
cli
fbstp
enter
nop
add
mov
std
les
cs
je
dec
imul
cmp
fistpll
mov
enter
pop
jbe
or
xlat
fmull
add
mov
popa
cmp
movsl
nop
sbb
lods
fs
mov
fists
push
dec
mov
cmpsb
mov
in
test
xor
xchg
roll
scas
imul
mov
add
jmp
mov
aas
arpl
pop
shlb
test
mov
adc
dec
sub
xchg
push
in
movsl
dec
insl
call
sub
push
mov
in
jne
cwtl
adc
test
jp
dec
scas
leave
clc
pushf
pop
and
iret
scas
fistps
jne
mov
push
in
jnp
daa
in
cld
ljmp
lds
fidivrs
into
outsb
shll
imul
imul
aaa
xlat
test
aam
stos
getsec
pop
xchg
in
dec
in
xchg
sbb
dec
and
lret
cmpsb
pop
sub
pop
das
push
xchg
sti
cmp
push
sbb
mov
mov
adc
add
movsb
and
mov
ret
jne
lret
inc
sub
scas
or
xor
insb
rolb
add
jle
dec
popa
push
stos
and
fidivrs
aam
cli
test
cmp
mov
add
popa
int3
xchg
adc
insb
and
test
hlt
ljmp
jl
sub
push
mov
dec
fsubrs
jmp
inc
lods
aaa
mov
jb
mov
lods
addl
add
sbb
out
test
push
mov
dec
out
sbb
mov
inc
mov
loopne
rcrb
js
outsb
lock
xor
xlat
adc
cld
xchg
add
out
cmp
aas
xlat
repnz
adc
clc
add
and
push
scas
dec
xlat
aam
int3
aam
imul
jb
subb
cmpsb
jmp
jno
movsl
adc
test
fs
call
dec
sub
or
pop
and
inc
ss
roll
push
pop
mov
cmp
nop
sub
inc
jnp
insb
sbb
xlat
jno
cs
dec
sbb
shl
jb,pt
test
mov
aam
das
pop
mov
add
pop
call
nop
std
lock
test
fdivs
add
rol
test
adc
or
cmp
adc
mov
pop
and
lea
add
mov
push
sbb
adcl
xchg
pusha
fstpt
dec
dec
addb
inc
addr16
pop
mov
mov
shll
sbb
xlat
aaa
add
and
inc
mov
call
in
popl
inc
jl
mov
sti
jb
mov
jno
adc
push
push
loopne
push
loop
cmp
scas
cmp
in
cld
xlat
jb
in
mov
push
arpl
lret
add
fs
frstor
movsl
inc
pop
loop
xlat
int3
leave
andb
into
pop
int3
sbb
sbb
repnz
das
cmpb
cmp
pop
cmp
pop
ja
and
adc
xchg
or
loop
or
jnp
loopne
xchg
cld
mov
jnp
cli
pop
xor
scas
jg
jne
into
sub
ret
pop
lods
repnz
stc
jp
test
out
adc
push
mov
aaa
in
scas
rorb
push
das
scas
jb
jbe
jmp
mov
pop
dec
nop
inc
pop
xchg
imull
jp
add
jns
sti
lahf
sbb
pop
data16
scas
in
inc
cmp
xlat
aam
add
cmc
xchg
aas
mov
xchg
subl
stos
xchg
mov
dec
pop
sti
jl
mov
dec
aas
add
sar
lahf
in
adc
inc
inc
jl
das
fidivl
sub
cmp
inc
out
sub
and
or
cmp
cmp
fwait
sub
in
inc
jne
inc
mov
enter
in
cmpsl
or
jmp
inc
inc
sbb
jle
dec
jnp
mov
sub
test
mov
cmp
xor
cmpsl
les
push
nop
cmp
xor
mov
decl
dec
movsb
pop
int3
add
or
push
cmpsl
decb
add
fimuls
push
mov
or
add
aad
imulb
cwtl
inc
pushf
mov
aas
or
sarl
jmp
pop
outsb
dec
imul
add
sbb
jne
js
adc
adc
outsl
mov
xchg
or
mov
lea
sub
into
sub
cmp
push
jnp
arpl
arpl
xchg
popa
mov
jl
rcl
dec
fs
inc
loope
sbb
sbb
sti
les
out
pop
call
decl
adc
mov
rcrl
aas
daa
dec
jecxz
or
cmp
mov
mov
add
adc
xor
aaa
shl
ja
roll
stc
test
addr16
and
or
les
sti
add
call
imul
xchg
ficoml
mov
mov
lods
aam
insb
mov
jecxz
push
adcb
adc
cmp
in
push
xor
or
or
imul
pop
jle
cmc
cltd
lods
test
push
enter
sub
negl
and
movsl
dec
adc
popa
mov
mov
loop
mov
push
inc
or
mov
and
or
dec
push
fcmovu
push
lods
sbb
pop
cmpsl
rcrb
adc
mov
sbb
push
loop
jecxz
xchg
mov
hlt
and
or
pop
cmp
or
es
rdmsr
jle
test
notl
dec
cli
xchg
jne
mov
push
in
orl
lret
add
int
and
jge
jmp
mov
mov
mov
or
imul
fcoms
cmc
xor
fldl
in
aas
jmp
ret
je
pop
mov
adc
aas
pop
xchg
shrb
inc
cmp
orb
xchg
mov
in
dec
xchg
adc
icebp
lods
dec
popf
lret
out
fisttps
adc
sub
rcrb
push
push
call
xlat
es
lods
xchg
mov
ds
jp
and
xlat
jl
enter
mov
ret
fwait
movsl
add
sub
xchg
das
mov
and
aas
and
sub
lahf
daa
pop
or
inc
mov
add
lods
and
pusha
cmc
or
leave
dec
jne
sbb
dec
xchg
call
repnz
and
mulb
mov
int3
pop
push
jp
filds
ret
push
jo
movsl
frstor
nop
dec
icebp
gs
adc
or
push
xor
push
lock
mov
or
mov
test
lcall
and
mov
cmp
push
imul
into
add
addr16
add
aad
mov
or
mov
cmp
clc
mov
dec
test
enter
data16
push
mov
lock
bound
aad
sbb
cmpsl
lods
sbb
mov
fildl
sahf
sbb
shrl
pop
or
stos
imul
or
and
cmc
adc
scas
faddl
or
cmp
test
popf
xchg
mov
mov
clc
hlt
xchg
mov
mov
push
fs
xlat
push
fs
pop
pop
xlat
hlt
xchg
pushf
test
cmp
sti
xchg
xchg
inc
ds
psrld
aad
sbb
jge
xchg
push
xor
push
xor
clc
pop
pusha
mov
mov
dec
dec
mov
adc
aad
xchg
loop
das
add
push
fwait
outsl
pop
pop
lds
xlat
push
push
movsl
pop
pop
pop
adc
sbb
movsb
inc
in
mov
xchg
icebp
call
fldt
xchg
jp
mov
jg
sub
and
frstor
add
or
ds
outsl
inc
scas
shrl
imul
call
add
push
mov
imul
push
aas
lahf
je
jnp
cmp
adc
xchg
or
sbb
jl
daa
aas
jle
stc
scas
sub
sbb
push
mov
jbe
jmp
and
xorb
rcrb
push
into
mov
push
xchg
ljmp
je
lret
in
sub
xor
pushf
loope
push
push
sti
adc
dec
inc
pop
mov
pop
push
push
pop
or
popa
inc
imul
pop
cmp
scas
cmp
push
das
or
or
mov
mov
int3
mov
popa
xchg
cs
and
cli
rcll
rolb
jmp
dec
fcomp
shll
int3
popf
aam
in
sbb
jle
adc
cmpsl
sub
shlb
icebp
movsl
add
and
ffreep
xchg
push
rorb
xlat
loope
imul
push
icebp
aad
movsl
hlt
loopne
fs
jae
push
rorl
lret
xchg
add
lcall
push
pop
dec
sti
add
fnstcw
shl
sub
icebp
pop
dec
add
cltd
int3
shll
imul
xlat
test
sub
and
fistps
hlt
cmp
xor
push
enter
jmp
orl
imul
xor
scas
mov
call
or
loop
inc
fbstp
pop
inc
cmc
or
pop
scas
loope
adc
inc
orb
clc
add
cmp
mov
mov
pop
mov
pop
push
call
ficoml
stos
test
jmp
or
lock
das
cmp
pop
or
and
addr16
mov
les
orl
clc
call
adc
iret
faddl
dec
mov
mov
sbb
movsl
jo
sub
xchg
inc
in
cmp
test
jg
repnz
fidivrs
in
adc
adc
xor
mov
out
fisubl
mov
aad
dec
xchg
imul
add
insb
xchg
mov
or
cmp
and
push
add
adc
or
pop
push
xchg
jnp
test
sub
mov
lret
dec
mov
repnz
orl
inc
jmp
pop
loopne
cmp
jmp
cmp
lds
out
xchg
push
out
mov
xchg
leave
stos
or
fmull
iret
test
mov
inc
data16
stos
push
mov
dec
aas
and
aaa
sarb
push
sahf
mov
rcl
ficoml
xchg
xor
ret
and
dec
aas
mov
in
pushf
push
das
loopne
fsubr
imul
int
pop
or
xchg
sbb
stos
pop
sub
icebp
jns
sub
or
in
or
stos
jg
test
lods
popf
ljmp
mov
test
mov
addl
cmp
mov
dec
loopne
cmpsl
push
adc
inc
dec
cmpsl
icebp
fldenv
nop
xchg
stos
mov
leave
xchg
pushf
xchg
aam
cmpsb
xchg
xchg
imul
shrl
add
stc
mov
adc
sub
pop
cmc
adc
negb
push
aam
sub
jp
leave
jp
mov
dec
adc
push
cli
inc
les
mov
cmpb
pop
xlat
sbb
pop
cmc
sbb
push
push
mov
pop
jae
or
std
mov
adc
or
cmp
push
pop
push
lods
push
repz
xchg
pop
fsub
rcrl
pop
cs
adc
fstl
and
pop
test
mov
mov
stos
cmp
cmc
aad
xchg
call
movsl
jne
pushf
or
jle
or
jl
add
or
sbb
sub
adc
nop
test
call
clc
pop
test
imul
xlat
cwtl
xorb
ljmp
pop
out
cmp
lret
dec
fidivs
leave
mov
iret
test
mov
mov
les
loope
xor
shrb
cmp
mov
mov
sar
xlat
ss
into
andl
sbb
shll
out
mov
scas
dec
inc
push
incb
mull
loope
xchg
mov
sbb
sbb
sub
push
lock
push
stc
iret
dec
sub
add
inc
mov
add
push
imul
sbb
jp
xor
mov
cmp
leave
jl
jecxz
xor
mov
push
hlt
mov
in
out
imul
repz
enter
loopne
pop
call
jecxz
push
jae
adc
jbe
fcoms
adc
test
add
std
popa
into
dec
movsb
mov
imul
sub
mov
mov
imul
leave
pop
xchg
xchg
fdivl
ljmp
add
ss
filds
inc
dec
sbbb
test
lods
xor
adc
or
xor
fucomip
pop
sub
cwtl
ret
aaa
data16
addl
leave
ffree
add
mov
xor
mov
loop
adc
outsl
test
inc
adc
mov
mov
lods
push
scas
jl
pop
jb
enter
leave
dec
xlat
cmp
fistps
bound
lds
dec
repnz
and
dec
jmp
test
or
xor
lret
and
mull
lods
test
and
scas
xchg
into
rcrl
ss
xor
jl
imul
cwtl
or
test
mov
lods
fscale
sub
std
inc
cltd
imul
mov
sbb
jmp
push
sub
cmp
sbb
pop
push
imul
add
cmpsb
call
push
adc
adc
cmp
enter
movsl
rcll
push
jge
cmc
pop
test
test
add
aas
fabs
mov
and
rcrl
mov
int3
filds
out
leave
imul
clc
dec
ja
test
in
pusha
aad
pop
subl
fdivl
mov
sub
push
je
sub
push
jbe
cmp
jne
loope
and
xchg
cmp
mov
cltd
and
dec
push
adc
adc
push
jb
add
dec
sbb
cwtl
call
xlat
adc
sbb
or
and
hlt
mov
loopne
xchg
test
movsl
loop
jmp
test
mov
or
into
pop
jb
cmpsl
les
jbe
lock
rcl
pop
nop
add
add
dec
flds
xor
out
subb
adc
xchg
lret
pop
stc
loope
or
and
dec
adc
cmp
cmp
cmp
jle
mov
push
add
push
jge
push
shrl
jne
mov
iret
enter
push
or
rcrl
jl
cwtl
jge
js
sub
jbe
adc
inc
inc
inc
subl
sub
stc
lret
js
pop
jne
jno
jbe
movsl
lret
subb
fstl
lahf
mov
cmp
push
cmp
lcall
or
cmpsb
roll
fimuls
les
jb
add
nop
adc
fstp
push
xchg
lds
cmp
outsl
cmp
mov
int3
mov
cwtl
or
xor
notl
scas
pop
enter
insb
adcb
scas
sbb
push
pushf
lahf
mov
jne
das
imul
shr
mov
lds
push
dec
pushf
mov
dec
push
push
adc
inc
mov
jb
jne
loopne
jno
scas
dec
xor
imul
fstpl
rol
mov
mov
into
push
cmp
out
mov
or
stos
inc
je
xchg
lea
popa
vaddsubpd
rol
call
sbb
cmpl
movsb
push
arpl
ficoms
dec
je
jo
aad
rcrb
and
mov
cmpsl
pop
xchg
xlat
int3
jo
aam
jmp
pop
lcall
pusha
jns
mov
adc
ds
insl
outsb
scas
sub
add
push
mov
pop
in
lret
mov
jecxz
call
jo
subb
inc
aad
stc
orl
in
call
xor
aas
inc
loope
lock
pop
jmp
push
scas
inc
loope
adc
ja
dec
push
fadds
pop
pusha
cwtl
inc
adc
cmp
fcomi
and
fists
cmc
pop
stos
test
mov
fisttpl
test
xor
add
or
mov
lods
shr
jae
arpl
xor
movsb
movsb
in
stc
outsl
or
cli
nop
pop
dec
in
inc
call
pusha
rcl
push
xchg
sub
inc
or
test
xchg
gs
push
push
xor
mov
mov
mov
mov
fwait
bnd
std
mov
jmp
fsts
mov
addr16
push
cmp
ror
imul
aad
loope
stos
dec
fisubrs
push
dec
push
dec
out
and
jns
sub
call
and
leave
push
sahf
and
orl
imul
dec
mov
in
xchg
jecxz
cmp
push
xor
imul
call
sahf
nop
or
sub
arpl
lods
jno
nop
xor
push
cmp
movsl
mov
call
movsl
xchg
rol
xchg
loopne
stos
addr16
add
loope
insb
movsb
pop
fcoms
nop
sahf
out
test
ja
inc
pop
xchg
aas
sub
nop
cmp
ret
and
mov
lods
sbb
push
sub
cltd
stos
lret
pop
or
adcb
sub
mov
add
cmp
dec
je
imul
repz
adcb
jbe
cmp
lahf
and
imul
testb
inc
cmpsl
arpl
js
pop
orb
insb
cmp
sub
push
and
adc
pop
aaa
mov
push
or
jg
es
xchg
jo
fbld
adc
xchg
jge
les
jmp
pop
adc
fldt
cld
sub
cmp
pop
jae
loop
daa
inc
mov
adc
or
jmp
and
cmp
xchg
pop
pop
xor
or
clc
xor
push
push
jmp
and
push
pop
dec
xor
cmp
stc
cmpxchg
mov
lds
lea
leave
xor
jecxz
and
mov
xor
fisubs
adc
test
lods
sub
mov
push
mov
cli
adc
pop
and
shlb
int3
cs
mov
hlt
add
aam
dec
and
lret
in
repnz
mov
mov
push
sbb
test
ljmp
mov
add
adc
cmp
pop
mov
dec
or
sti
imul
leave
into
faddl
mov
fisubrs
adc
xchg
int3
cmp
movsb
enter
dec
pop
and
int3
mov
ja
sub
jno
aad
enter
insb
mov
aad
shrl
cmp
lock
daa
inc
adc
js
mov
push
lret
xchg
sbb
mov
fbstp
call
sbb
imul
mov
scas
adc
add
sbb
pop
lcall
lret
popf
sub
or
rol
aam
int
push
push
call
out
outsl
mov
test
xchg
imul
aaa
lret
orb
popf
aad
into
sbb
out
mov
push
push
enter
xchg
lahf
inc
test
stc
push
call
xchg
daa
add
out
sbb
sbb
mov
xor
fs
adc
xchg
mov
scas
pop
jns
lret
arpl
mov
pop
pushf
movsl
inc
iret
xchg
cmpsl
add
mov
stos
jbe
daa
mov
in
xlat
inc
push
test
std
add
das
test
lods
jno
pop
in
cli
roll
sbb
rorb
pusha
das
pop
call
rclb
push
xchg
aas
popf
add
aad
or
rolb
ja
bound
fbstp
sub
fcmovnbe
aaa
ror
or
cwtl
and
in
xchg
xchg
inc
sub
jno
mov
cmp
xchg
mov
and
adc
push
pop
lods
dec
sar
inc
mov
test
push
rolb
dec
imul
cmp
fwait
fs
popa
jge
mov
ss
int3
int3
imul
loope
mov
xchg
cs
pop
out
cmp
repnz
inc
nop
es
xor
out
data16
xorb
enter
ss
mov
inc
and
adc
push
pusha
xchg
pop
insb
or
jo
and
int
jl
jmp
aas
lock
call
pop
imul
and
out
push
jle
and
loopne
push
mov
cmp
sar
scas
js
push
push
clc
test
imul
hlt
push
gs
testl
inc
push
ret
dec
jno
push
sub
add
test
ret
sbb
mov
fadd
mov
xchg
and
push
sbb
insl
movsb
fwait
sub
maskmovq
divl
repz
mov
icebp
add
mov
pop
sarb
cmpsl
dec
pop
adcb
jg
es
mov
call
xchg
pop
push
dec
fisttpll
adc
or
xchg
loopne
cmp
and
push
dec
lret
sub
jp
pop
jns
push
test
xchg
lret
push
dec
inc
cmp
ret
pop
dec
mov
add
call
mov
cli
ret
and
test
add
cmc
and
shr
popf
arpl
xor
imul
mov
aam
cmp
xor
movsb
je
push
arpl
test
mov
cld
jno
testl
add
in
fstl
xchg
mov
flds
dec
inc
or
fdivp
mov
repz
mov
mov
iret
shlb
cmpb
andl
mov
cmp
cmp
aas
jns
pop
adc
add
mov
aad
mov
scas
adc
insb
xchg
imul
popa
mov
test
cmp
or
pop
mov
sub
pop
shrl
xchg
push
std
aas
adc
jecxz
sub
lds
mov
loop
shlb
mov
popa
push
ret
mov
ds
cmp
cmp
test
jb
sarb
xchg
aaa
inc
pop
cmp
les
mov
shlb
xor
je
jmp
xor
push
sbb
or
jns
adc
push
sub
pop
xor
imul
cmpsb
sbb
cmc
pusha
xchg
jb
sub
add
add
xchg
inc
jno
mov
fbld
inc
inc
lahf
or
imul
cmp
jb
int3
test
loopne
inc
cmp
pushf
fstpt
mov
fsts
jle
mov
push
add
shlb
mov
les
add
lock
sbb
pop
or
xchg
cli
aad
push
xchg
pop
add
insl
mov
adc
cli
popf
rcl
cmp
lret
sub
push
andb
cmp
adc
cmpsl
aas
push
pop
mov
xchg
jo
adc
mov
adc
daa
cs
xor
lods
imul
cmp
jl
dec
dec
lcall
xchg
or
imul
push
rorl
inc
in
adcb
fnstcw
cwtl
lret
push
fwait
aad
fistpll
aaa
decb
negb
aam
jo
lcall
xor
sbb
or
and
ret
cld
pop
leave
call
leave
hlt
push
sub
fnstsw
push
rolb
mov
aaa
popfw
jne
fs
imul
mov
adc
shll
or
fidivl
or
cmp
push
imul
add
loopne
loop
add
repz
cmp
adc
into
cmp
or
lds
xchg
inc
icebp
loopne
fisubrs
sub
ja
fcoml
pop
out
test
xor
les
ljmp
jne
or
inc
cmpsl
or
lret
cld
mov
stos
in
sub
std
sahf
fmulp
push
adcb
add
and
je
test
test
repnz
push
fs
sbb
ljmp
and
rorl
or
jg
cli
sti
pop
xor
cmp
sti
cmpl
mov
call
xchg
aas
and
movsb
xchg
inc
pushf
in
jge
cmpsl
add
adc
pop
xor
sub
mov
push
out
mov
je
xchg
aas
adc
jg
icebp
sbb
test
xor
cmpsl
mov
idivb
stos
hlt
sub
fistpll
and
in
xchg
cld
ret
or
iret
and
mov
mov
inc
mov
test
icebp
push
aad
sbb
pushf
pop
lods
stos
js
mov
jns
movsl
fldcw
lods
icebp
icebp
pop
add
lcall
inc
push
xchg
inc
add
fnstenv
call
scas
repnz
pop
inc
push
mov
dec
jbe
lret
add
mov
into
add
xchg
adc
test
aaa
push
push
jmp
js
pushf
dec
inc
aas
lea
adc
cmp
and
insl
pop
pop
mov
mov
mov
adc
fstpl
xor
and
in
imul
subl
push
nop
add
fsubs
mov
push
gs
andl
or
inc
jge
or
xor
cmp
inc
cld
or
xorb
xchg
push
push
push
mov
roll
fiadds
mov
add
inc
test
sarl
insl
movsl
mov
fnsave
mov
jbe
xchg
pop
sahf
pop
sub
xchg
mov
imul
idivb
es
jle
sbb
ljmp
sub
pop
mov
call
nop
repnz
jb
test
cli
push
ret
cmp
sbb
mov
loope
xchg
inc
inc
jp
push
lret
or
loop
push
test
bound
lods
aam
adc
xor
test
icebp
add
add
arpl
repz
out
aad
stos
pop
xor
pop
js
push
repz
add
loop
push
enter
pop
inc
fistl
add
notl
push
fidivrl
or
int3
addr16
sbb
dec
stc
cmp
mov
scas
mull
movsb
or
mov
jg
mov
cmp
push
cmp
add
loopne
je
push
loope
mov
mov
sub
adc
frndint
and
dec
hlt
fmulp
push
dec
dec
mov
push
mov
inc
scas
aaa
sub
jns
push
fcmovu
inc
sti
or
cmp
aas
or
aam
lret
mov
push
das
cmp
test
js
leave
xchg
xchg
enter
sbb
ja
lods
lods
loope
sub
mov
cmp
leave
push
fwait
inc
shrb
fimuls
inc
mov
fmul
in
sbb
and
inc
pop
fdivl
push
cs
ds
ficoml
mov
lods
pop
aam
mov
dec
dec
lock
push
loop
fists
add
test
xchg
scas
loop
sbb
pop
cs
sarl
insb
imul
push
inc
loopne
adc
mov
jo
test
subl
xchg
into
loope
mov
rol
loope
mov
sub
ret
testb
push
pop
push
imul
aam
sbb
lret
sbb
out
lea
xchg
push
sahf
or
push
xchg
pcmpeqd
inc
das
loopne
loopne
out
loopne
mov
popl
xchg
push
or
xchg
jmp
in
push
push
mov
adc
ljmp
das
hlt
loope
pop
inc
xchg
rcrl
lret
lods
add
xchg
rol
dec
imul
push
stc
push
sub
fucomi
shlb
and
add
or
leave
xlat
lcall
push
cwtl
movsb
std
sbb
add
jg
push
mov
jp
lret
bound
aaa
and
ror
fimull
sub
sub
test
arpl
or
add
push
cmc
out
in
cmp
xchg
xlat
mov
sub
push
push
std
mov
rorl
xor
mov
and
mov
xor
mov
or
dec
fidivs
cmp
fcmovne
jb
dec
dec
fucomip
push
mov
inc
or
or
out
adc
arpl
lods
pop
mov
inc
imul
call
xlat
shl
adcl
pop
adc
push
xchg
je
cmp
je
jae
push
or
pop
or
jo
aas
lods
aad
jmp
ud2
dec
daa
xchg
adc
popa
loope
inc
mov
fidivrs
iret
mov
push
inc
add
lcall
cli
and
cmpsl
xor
movsb
orl
cs
subl
ret
cmp
add
fimuls
and
mov
dec
loop
fsubr
shrl
or
push
jno
roll
inc
jmp
adc
ret
add
fstpl
test
adc
jp
pop
data16
mov
push
lcall
inc
int
lret
les
and
fwait
mov
lea
cmp
jnp
movsb
aas
jo
cmp
xchg
xor
inc
movsl
mull
mov
sub
push
mov
cmp
out
mov
cwtl
xchg
xlat
lret
out
into
xlat
fisubl
or
jp
lret
sbb
sub
or
mov
xchg
cld
scas
jno
jecxz
test
jge
dec
pop
cmp
cmpsl
and
pop
cli
xor
lods
jo
rcrb
push
aaa
lret
mov
push
xlat
fs
xchg
mov
aam
aaa
pop
mov
into
push
jmp
stos
roll
or
outsl
xor
add
outsl
mov
neg
adc
shrb
imul
xchg
daa
sti
sub
popa
jo
push
test
push
sbb
mov
movsb
sti
cmpsl
adc
ja
popw
pushf
loope
test
filds
inc
popf
mov
push
sti
js
and
or
jmp
pop
add
mov
lock
add
ret
sub
shlb
jbe
idivl
out
dec
fistps
push
lock
movsl
adc
inc
cmpsl
call
in
imul
pop
sbb
push
rorb
movsb
int3
lcall
loopne
mov
lret
sbb
or
mov
ret
hlt
jne
call
scas
or
push
das
mov
jno
sub
mov
xchg
scas
fs
fcmovnbe
cmp
xchg
test
push
rorb
push
cmp
scas
movl
outsb
jns
shlb
scas
jmp
sahf
xchg
adc
sbb
xchg
test
push
add
and
adc
add
or
out
dec
jg
mov
cmp
cmp
test
push
mov
jae
add
imul
daa
push
dec
cmp
test
xchg
xchg
pop
push
or
out
adc
and
sbb
ret
push
movsl
pop
adc
pop
add
jecxz
xchg
fisttps
inc
push
int3
call
lock
fildll
pop
fnstenv
lahf
les
shll
dec
imul
jle
loopne
adc
scas
push
push
jge
leave
adc
cmp
push
mov
push
adc
lret
std
xlat
jmp
jmp
call
cmp
pusha
fistpl
sub
push
sbb
cli
aad
loope
pushf
pop
mov
int3
std
mov
lret
cmp
and
jmp
sbbb
jb
enter
xchg
imul
pop
adc
das
dec
outsb
out
push
sub
xchg
loopne
ss
inc
push
adc
cmpsl
pop
sbb
into
lods
cmpsl
repnz
call
jge
dec
cld
or
mov
push
dec
jae
cs
cmpsl
jge
idivb
cld
fcoml
stc
movsl
fidivs
or
mov
test
movsl
fs
stos
insb
les
adc
sub
cmc
lcall
pushf
loopne
xor
sub
inc
lcall
stc
jle
imul
js
xchg
lods
mov
aas
push
mov
imul
mov
cmp
cmpsl
pop
ret
jne
cmp
jo
mov
enter
inc
daa
lods
cmp
adc
cmpl
aam
dec
daa
mov
gs
clc
aas
lret
mov
rcr
sarb
pop
cmp
pop
rolb
jg
sub
push
call
loope
popf
push
adc
data16
inc
rclb
push
cmp
mov
cmpsb
jecxz
pop
fstl
lret
test
out
and
in
in
scas
scas
rcrb
rcrb
or
push
inc
mov
xchg
jnp
push
rorb
aas
and
loopne
pop
test
movsl
xchg
push
sti
pop
sbb
aad
push
dec
mov
mov
pop
shrl
add
jl
je
loopne
sbb
in
scas
les
push
add
mov
or
mov
fnstenv
push
andl
dec
xlat
dec
cmp
adc
leave
push
jbe
cmp
shrl
cmp
xor
and
push
les
mov
js
push
shl
test
aas
lock
or
mov
mov
rcl
jge
lret
fildll
dec
mov
call
imul
ret
loopne
lcall
sbb
cmp
and
cwtl
adc
pop
je
hlt
adc
ret
aaa
cwtl
or
lcall
jl
adc
adc
out
jne
and
cwtl
push
add
add
sarl
mov
aad
clc
sbb
mov
aad
jmp
dec
adc
nop
je
imul
xchg
outsb
jo
ds
lret
adcb
pop
mov
cld
xor
idiv
sub
cwtl
call
mov
repz
and
add
out
xor
movsl
jns
mov
mov
adc
push
xchg
push
jle
rcl
inc
and
cmp
xchg
movsb
cld
xor
movsl
pop
sub
jecxz
jne
mov
jbe
cmpsl
aam
inc
sbb
push
add
hlt
mov
lock
mov
aaa
xchg
std
cltd
or
lret
jo
xchg
cmp
jne
jmp
inc
add
dec
rcrl
jmp
movsl
add
dec
add
and
subb
fstp
mov
popf
cmp
adc
cltd
add
push
subl
pop
inc
lock
jg
jbe
addr16
ja
outsb
cltd
ret
mov
mov
mov
imul
push
popa
mov
dec
push
stos
js
or
shr
clc
add
lds
test
sbb
inc
int
mov
call
mov
test
jns
in
dec
iret
call
stos
adc
xchg
mov
js
test
mov
adc
mov
xchg
jbe
push
add
jl
inc
rcrl
call
stos
pop
out
adc
cmp
movsl
out
faddp
scas
jge
xor
inc
push
les
lret
cli
adc
lds
cltd
inc
ss
lods
cmp
dec
jle
sub
mov
adc
outsb
cmp
sbb
inc
imul
mov
jne
add
mov
sub
or
push
sub
imul
inc
add
and
sub
or
pop
scas
jg
loopne
clc
pop
fisubl
adc
imul
jb
fistl
nop
xchg
cs
add
mov
inc
xchg
aas
lods
mov
adc
adc
cmpsl
enter
inc
cmp
sub
add
inc
push
or
testl
jle
mov
ja
sbb
movsb
cmp
leave
sub
cli
or
aas
add
xchg
testb
nop
push
pop
call
out
sub
clc
loopne
aaa
sbb
fnsave
cmp
test
jbe
cmp
mov
loop
mov
cmp
stc
adc
stc
xor
leave
fnstsw
outsl
jge
scas
or
aas
icebp
lods
les
js
add
icebp
aaa
data16
loop
lds
cltd
adc
adc
adc
dec
cwtl
test
and
sti
orl
pop
cmp
call
add
jne
popa
ret
jns
test
mov
mov
jl
push
adc
inc
call
out
jae
and
cli
mov
aam
loopne
andl
mov
push
loopne
adc
lahf
push
pop
push
mov
cmp
popf
push
lea
xor
add
xchg
sub
pushf
in
test
jmp
and
inc
ds
outsl
sub
cmc
nop
in
iret
mov
jnp
imul
push
push
rorb
fdivrs
or
cmpsl
mov
push
xchg
add
sub
mov
fs
movsl
mov
int3
cmp
aam
orl
fsubl
mov
aas
lock
xchg
xchg
cwtl
jae
xchg
imul
pop
shr
inc
lret
lret
mov
cld
outsl
lds
imul
add
push
jae
sbb
filds
pushf
xchg
pop
lret
std
test
sbb
jbe
rcl
cmp
add
sbb
ja
push
cmc
adc
ffree
ret
cld
int3
pop
in
mov
dec
inc
imul
out
cmp
push
or
push
mov
mov
mov
leave
xchg
lock
mov
jg
call
lods
nop
movb
mov
leave
fisttpl
in
xchg
arpl
sub
jae
shr
jbe
or
inc
cmp
mov
jb
lret
xchg
mov
xchg
jnp
jg
hlt
lcall
sub
movsl
std
out
xchg
xor
jnp
dec
je
cld
fst
jb
jbe
adc
daa
sub
das
movsl
push
and
jle
imul
aas
push
xor
daa
jmp
sbb
sub
aam
or
shl
pop
and
test
daa
aaa
out
xor
pop
cmp
cmpsl
mov
sbb
loope
ret
inc
lret
inc
enter
cmc
dec
aam
sub
movsl
mov
add
aam
ror
add
mov
sub
sub
or
dec
mov
movsb
inc
push
mov
pop
loopne
xchg
xchg
push
pop
mov
shlb
aam
rorl
sbb
push
es
sbb
loopne
lds
std
lahf
lret
sti
xor
aaa
add
pop
cmp
iret
jae
iret
and
cmpsl
repnz
push
mov
mov
movsl
mov
sarl
rclb
sbb
push
pushl
jp
popf
mov
lret
das
mov
xor
test
cmp
jns
shl
stos
pop
and
mov
push
mov
outsl
or
inc
push
aam
mov
xchg
jb
mov
xchg
inc
jbe,pt
sub
out
jo
mov
imul
and
fstpt
and
and
push
pop
cmp
adc
stos
loopne
rol
push
leave
icebp
inc
jnp
sbb
xor
in
rcrl
cmp
movsl
mov
jl
dec
fsub
dec
inc
jmp
mov
inc
cmp
movsl
jo
cmp
sub
rolb
mov
xorb
push
roll
idiv
cmp
sbb
mov
pop
jg
xor
gs
aam
jmp
rolb
cltd
adc
push
push
adc
mov
xor
leave
jp
scas
aad
addr16
jle
add
mov
stc
stos
cmp
cmp
les
mov
push
inc
lods
call
push
imul
jno
imul
cmp
das
aad
scas
test
in
mov
in
xchg
jno
and
test
and
addb
pop
sbb
or
imul
dec
imul
in
ud2
rcl
xorb
and
cltd
xchg
nop
out
je
pop
jmp
test
adc
or
mov
push
push
or
mov
sbb
divl
dec
std
lret
fistpll
mov
out
subb
jge
push
adc
push
push
bound
test
cmp
jo
imul
aas
sbb
xchg
push
xor
test
dec
adc
lcall
sbb
stos
add
ja
pop
xlat
pop
movsb
addl
xchg
add
aad
xor
or
mov
shrl
aad
jg
mov
repnz
je
cmp
in
fisubrs
push
cmpb
mov
das
dec
lcall
mov
testb
int3
test
lret
mov
push
fisttpl
cli
aas
pushf
fildl
adc
imul
pop
test
jae
push
sub
jns
xchg
ljmp
imul
push
jbe
inc
and
loop
movsl
jge
or
call
sbb
frstor
push
xchg
or
pop
jne
push
rcrl
shrb
stos
xor
decl
adc
pop
in
xor
pop
shlb
cmp
xchg
mov
xor
mov
andl
add
inc
xor
js
push
into
nop
push
out
cmp
mov
ret
jge
es
sub
test
test
cmp
jmp
pop
inc
adc
movsl
clc
rcll
fstp
mov
sbb
mov
lahf
movsl
data16
sbb
push
mov
sbb
pop
sub
fdivs
sub
dec
mov
inc
ja
ja
sarb
jmp
lret
mov
and
push
lock
fistps
mov
adc
or
or
push
jl
jb
push
mov
arpl
enter
xor
movsl
addr16
sbb
dec
vunpckhpd
aam
loop
pop
aas
in
mov
and
mov
pop
test
fs
mov
pop
jnp
enter
xchg
sarl
and
outsl
xchg
inc
aas
cmpsl
test
push
mov
iret
loope
and
push
mov
in
dec
jne
xor
stc
in
shr
push
lret
mov
sub
js
mov
imul
jg
inc
movsl
fcmovnb
mov
sub
xchg
xchg
xor
js
or
xor
xor
insl
jl
push
xchg
aas
xchg
mov
mov
adc
cmpsl
push
xchg
jbe
icebp
loopne
mov
jle
je
pushf
cmp
push
ret
mov
or
arpl
adc
outsl
xor
xchg
addl
fadd
les
orl
push
dec
test
or
lret
push
add
inc
jp
add
pop
mov
fwait
lods
mov
fs
sbb
loopne
mov
mov
stc
std
adc
scas
int3
mov
xor
sbb
mov
shl
fmull
lea
mov
inc
cmp
lds
outsb
or
out
mov
lret
adc
sbb
je
bound
xchg
test
mov
enter
fsubl
mov
xor
mov
pop
pop
leave
jb
pop
jo
xchg
mov
shll
lods
dec
stos
stos
jmp
inc
mov
cwtl
lods
fstpt
mov
movsb
jo
cmp
xor
push
mov
jno
push
mov
popf
leave
stos
inc
pop
test
jg
cs
call
cmp
sti
add
pop
mov
mov
out
push
scas
iret
mov
pop
mov
cmpsb
ss
jb
push
xadd
mov
mov
lock
push
jne
rcll
xorl
sbb
mov
iret
aaa
mov
movsl
loop
fbld
iret
mov
imul
jmp
arpl
iret
scas
dec
out
mov
lea
std
add
adc
clc
aad
jns
ss
aam
ds
mov
testl
xchg
imul
fmuls
mov
sub
add
sub
inc
fimuls
and
call
ret
aas
pop
sub
sti
xchg
and
icebp
movsb
mov
adc
add
adc
scas
in
add
cmp
jg
sub
sub
out
pushf
mov
mov
jae
pushf
mov
adc
rolb
cltd
cmp
scas
mov
sbb
sbb
aad
pop
clc
in
push
jnp
adc
sbbb
imul
scas
adc
scas
jbe
hlt
push
orl
sub
adc
jle
mov
aad
push
adc
xlat
push
or
push
lret
adc
and
jmp
outsb
movsl
lret
cmpsl
imul
into
jl
out
test
loop
pop
stos
rcrl
jl
in
and
cltd
pop
rcrb
loope
mov
clc
cmp
js
adc
mov
aas
stos
push
jle
fiaddl
dec
dec
int
out
pushf
or
outsb
or
and
fdiv
cmp
mov
shrl
push
jecxz
insb
les
xor
sub
enter
push
mov
nop
bound
jmp
jp
test
ja
push
icebp
or
or
fstpt
adc
ljmp
dec
or
fidivrl
rol
adc
inc
mov
cmpsl
daa
lret
mov
push
movsl
fmuls
jnp
data16
nop
movsl
popa
stos
insb
inc
pop
mov
test
shlb
push
lret
scas
mov
ljmp
movsl
in
dec
xlat
sub
mov
push
push
out
gs
mov
popf
aaa
iret
jecxz
adc
jl
and
inc
imul
add
ds
inc
inc
std
xor
mov
jge
push
sub
mov
cwtl
pop
fwait
outsl
stos
daa
adc
dec
push
push
mov
pop
mov
mov
xor
les
test
push
sub
dec
xchg
mov
out
add
push
nop
cmp
push
movsl
loopne
pop
in
aad
or
aas
rcrl
call
dec
push
repnz
test
les
or
mov
mov
shl
out
inc
mov
jns
popa
das
pusha
out
lahf
pop
scas
or
push
iret
jecxz
or
call
shr
push
adc
or
xchg
out
pusha
push
roll
sbb
loopne
mov
mov
adc
push
bound
in
aad
or
imul
leave
mov
jno
mov
shrl
sub
and
rorb
jbe
lock
lock
movsl
loop
stc
jge
lret
pop
ss
push
imul
les
leave
stos
pusha
mov
xor
add
arpl
or
imul
fnstenv
pop
scas
test
add
pusha
mov
out
imul
or
mov
hlt
pop
cs
loop
je,pt
loope
or
test
pusha
push
xchg
movsl
and
fnsave
and
imul
push
add
mov
push
mov
push
push
xchg
outsb
pushf
inc
fs
imul
adc
or
int3
cmp
sub
sub
or
inc
jle
cmp
lret
aam
movsl
rclb
iret
les
push
add
mov
cli
adc
push
adc
loopne
push
sbb
adc
inc
mov
imul
fs
jb
xchg
jmp
in
jg
loop
cmp
or
and
enter
xchg
enter
mov
insl
cmc
ret
nop
pusha
sub
aaa
mov
pop
mov
adc
movsb
ret
sub
pusha
mov
es
std
jecxz
les
xchg
ret
or
scas
mov
test
or
dec
inc
xchg
adc
or
ss
stos
pop
xchg
cltd
mov
push
mov
enter
jmp
or
rcr
adc
xchg
fidivl
movsb
lods
fsts
pop
fwait
jmp
shrl
leave
push
aam
call
std
mov
loop
aad
imul
xor
sub
fadd
insl
mov
push
aas
xchg
and
xlat
dec
lods
sub
or
jnp
cmp
addr16
scas
movsb
in
test
add
adc
cwtl
mov
push
jp
and
cmp
js
cmp
test
sub
or
add
ficoml
repnz
lods
mov
xor
sbb
inc
lods
xchg
imul
jp
rcrb
cmp
dec
in
sub
enter
je
scas
pop
sub
mov
mov
sub
sub
push
cmp
inc
insb
call
xchg
lods
je
rclb
add
dec
adc
or
mov
rorb
leave
or
nop
scas
jb
adc
mov
jle
ds
mov
add
pop
mov
imul
push
inc
lahf
nop
jmp
push
or
sahf
push
sub
pop
cwtl
scas
rcrb
sti
inc
xchg
inc
incl
xchg
lret
jl
sbb
ja
enter
dec
ret
popa
mov
add
xchg
pusha
aaa
pusha
add
inc
add
call
stos
imul
and
std
mov
xchg
imul
add
mov
sbb
jno
mov
xchg
fwait
xchg
mov
inc
stc
imul
loopne
cmp
sarb
dec
jno
mov
fld
fiaddl
sub
adc
popl
lret
rcll
mov
push
ret
lods
imul
sti
pop
icebp
adc
cmp
sub
jecxz
jo
xchg
clc
add
xlat
adc
jmp
cmpsl
das
mov
xchg
jae
mov
adc
in
lods
mov
dec
cmpsl
stos
inc
bound
aad
das
xchg
or
dec
xor
or
cmp
insb
mov
daa
and
test
jmp
sarl
cmp
xchg
push
add
sub
push
out
sahf
mov
mov
xchg
idivb
inc
mov
inc
daa
loopne
pop
arpl
jne
mov
aad
pop
inc
mov
lds
pushf
jne
jne
fists
loopne
les
cmc
add
add
push
jg
mov
sub
scas
dec
dec
or
xlat
in
aaa
mov
faddl
mov
cmp
aas
jl
and
xchg
mov
inc
mov
sbb
stos
pop
andps
pop
or
aad
into
mov
jb
push
cmp
ss
lods
jbe
fcmovu
xchg
int3
jecxz
into
rorb
std
jg
mov
cmpsl
and
jmp
sbb
data16
negl
jno
in
sub
enter
shrb
xchg
xor
les
inc
mov
or
or
jb
push
inc
es
push
xchg
or
adc
movsb
push
inc
test
enter
mov
scas
call
mov
loope
insb
cmp
sub
sub
pop
inc
cmc
lods
pop
xchg
xchg
cmp
test
je
push
pusha
outsb
and
or
add
imul
and
jecxz
pop
inc
xchg
gs
xor
adc
adc
stos
pop
dec
aam
xchg
push
lret
jno
daa
cli
xchg
loop
sub
bound
faddp
test
hlt
movsl
or
ficoml
xchg
mov
mov
mov
cltd
or
int3
push
sub
cmp
das
fwait
movsl
or
punpckhwd
mov
mov
or
subb
push
data16
lret
push
insb
rolb
dec
movsb
sbb
cmp
enter
sub
scas
lea
jl
cli
push
lahf
jb
enter
or
sub
repnz
and
cs
xchg
sti
lods
xor
mov
ror
adc
jne
in
enter
nop
mov
dec
daa
cmp
xchg
mulps
das
xor
mov
ljmp
mov
jae
mov
mov
dec
insb
cmpsl
push
cmpb
insb
jae
adc
mov
into
adc
aas
or
jle
sbbl
cmpl
mov
adc
sbb
int3
rorb
xor
mov
js
aaa
sub
int
jmp
and
sub
adc
sub
mov
push
mov
fcos
sbb
syscall
adc
add
loope
test
sub
sub
xchg
loopne
or
idivl
xchg
loopne
loopne
xchg
and
fnstcw
mov
mov
sub
cmp
xor
push
lahf
mov
shl
xchg
cmovge
sbb
mov
mov
and
jb
push
pop
ret
dec
mov
imul
xor
and
loop
movb
iret
js
adc
clc
jg
nop
add
lret
scas
mov
pop
lock
adc
add
jle
shl
jmp
sahf
mov
push
pop
cmp
dec
adc
xor
ret
xchg
push
push
outsl
or
call
pop
out
popf
sbb
popa
mov
mov
fisttps
lahf
sbb
xor
leave
xchg
lds
into
cmp
negl
jbe
mov
xchg
lds
adc
mov
addr16
cwtl
faddl
jae
ret
or
lods
je
cmpsb
lret
jp
mov
and
gs
push
test
xor
dec
lods
sbb
popf
ljmp
mov
sbb
sub
xor
lret
add
sbb
adc
mov
jp
dec
jnp
neg
das
insb
xor
pop
cmp
call
cmp
push
test
test
arpl
and
aas
lock
ljmp
push
cmpsl
adc
and
loopne
jge
cmpsb
inc
pop
orl
pusha
fimull
mov
mov
lret
int3
add
mov
jl
push
add
add
lods
sti
xchg
mov
scas
sti
fiaddl
jmp
repz
aam
and
adc
jg
inc
mov
jg
lods
fcoms
push
jle
pop
jb
xlat
imul
mov
xchg
jge,pn
jmp
mov
or
push
xchg
xchg
sarb
mov
pop
shl
int
mov
fistpl
outsb
pop
pop
testb
mov
xorb
push
stc
mov
mov
jno
mov
and
push
idivl
pop
mov
cmp
mov
iret
daa
ljmp
mov
lock
jp
and
jg
out
add
aas
js
fistps
insb
lret
cmp
jno
nop
stos
jbe
scas
mov
call
imul
jbe
nop
ss
aam
orl
push
jbe
xchg
push
pop
jae
add
xor
push
sbb
adc
xchg
sbb
jle
data16
inc
rcr
push
mov
cmp
mov
sub
add
enter
and
add
cmpsl
cld
shlb
xchg
sbb
or
mov
rclb
inc
scas
sub
inc
push
scas
and
mov
imul
int3
or
push
mov
push
sub
imul
insl
lods
jle
bound
mov
or
mov
pushf
sbb
scas
daa
test
mov
xchg
ds
xor
inc
adc
cs
in
call
pop
aam
cmp
ss
mov
gs
popa
scas
stos
cmp
and
pop
fnstenv
loopne
and
in
xor
push
shl
arpl
test
mov
or
push
outsl
test
and
or
fsubrl
pop
int3
enter
add
jp
into
test
push
xorl
sysret
or
leave
cmpsl
lock
xor
lock
or
or
mov
sbbb
lret
pop
xor
mov
dec
pop
pop
xchg
or
in
dec
test
imul
shrb
addr16
fcmovnbe
jae
sbb
add
jp
jnp
cmc
mov
js
call
dec
push
loope
xlat
or
ret
shll
pushf
add
pusha
mov
aaa
or
mov
call
inc
andb
test
mov
scas
insl
lock
mov
leave
jmp
xor
xor
adc
aad
jmp
push
push
inc
pusha
loopne
fwait
sub
xchg
and
call
push
pop
dec
test
jne
dec
dec
sbb
aaa
adc
mov
xlat
xor
push
inc
jl
push
mov
lods
adc
and
mov
add
inc
dec
push
cld
add
in
sbb
subb
popa
mov
stos
fiaddl
rcrb
fs
push
lods
inc
addb
xchg
pop
and
repz
rcrl
call
jg
mov
rorb
mov
js
dec
jl
ss
lret
int3
fwait
ja
and
xor
aad
pop
lret
rclb
and
inc
dec
cmpl
sub
add
bound
insl
mov
outsl
jmp
or
clc
lods
and
lods
fidivrs
pop
test
mov
jl
mov
and
jo
rorb
jecxz
das
xorl
jp
mov
cmp
cmp
mov
jge
and
inc
test
cmp
mov
push
and
push
leave
xchg
faddl
jne
loop
push
nop
scas
gs
pop
mov
or
mov
cmp
das
loopne
adc
adcl
xlat
jl
insl
ja
or
mov
mov
fwait
pop
mov
xchg
inc
jb
insl
fcoms
orb
shll
int3
stos
dec
dec
fsts
pusha
into
cmp
int
gs
push
mov
cli
jge
pop
imul
cmpsl
sarb
les
cmp
xlat
xchg
icebp
jo
les
jae
rclb
loopne
xchg
call
mov
loope
pop
fidivs
repz
mov
dec
iret
mov
xlat
call
ja
aaa
sbb
cmp
test
jbe
push
out
cmpl
lock
mov
mov
mov
adc
aas
pop
pop
xchg
xchg
or
dec
adc
mov
aaa
and
sbb
mov
or
rcrl
outsb
ret
pop
aaa
ja
xchg
call
ss
aas
bound
pop
loopne
cmp
les
jns
pop
inc
in
js
mov
xchg
xchg
cmpsl
mov
in
shrb
mov
xchg
xor
dec
daa
jo
adc
cmp
mov
lods
loopne
imul
push
mov
dec
sbb
call
imul
ss
jbe
push
movsb
add
pop
aaa
xchg
lcall
rcrb
or
dec
mov
sbb
lret
aaa
clc
ds
dec
dec
push
xchg
decl
scas
or
xorl
mov
pop
outsl
mull
aas
push
push
test
test
shll
test
gs
jge
imull
fimull
sti
sub
xor
mov
mov
cmp
dec
clc
clc
scas
movsl
inc
ja
fimull
push
sarb
pop
sbb
rorb
leave
jg
cmp
add
and
dec
fsubr
cmp
clc
pusha
and
pop
xchg
sarl
out
lahf
xchg
outsb
push
in
sub
adc
push
cmp
xchg
imul
fidivl
sub
or
and
jge
pop
stc
xchg
into
dec
repz
xchg
push
mov
sub
leave
iret
sub
inc
mov
iret
mov
imul
push
fnsave
call
cli
mov
mov
aad
pop
sbb
adc
and
cld
outsb
mov
cmp
mov
xor
fninit
loop
mov
jp
or
scas
sbbl
dec
and
cmpsl
fiaddl
rclb
adc
lret
iret
jno
jge
mov
jle
stc
sub
adc
sub
xor
pop
bound
std
cli
pop
push
leave
rcrl
std
pop
stos
daa
fs
mov
pop
mov
push
repz
or
mov
mov
fidivrl
imul
cmc
ret
dec
mov
adc
frstor
xor
push
pop
cmp
sub
or
bnd
add
xchg
leave
jo
nop
cs
aas
cmpsl
shll
mov
mov
add
nop
repz
insb
add
xchg
jl
jge
enter
addr16
pop
mov
lock
mov
dec
xchg
fwait
cld
jb
ret
inc
stc
js
xchg
pop
pop
xchg
dec
loope
inc
mov
mov
lock
cwtl
test
jl
inc
cmp
jne
xchg
mov
inc
mov
test
aas
xchg
imul
xchg
lods
mov
pop
push
mov
or
cs
jo
stos
mov
cmp
cmp
sub
aas
push
or
orb
pop
testl
out
or
test
xchg
jg
mov
sbb
sub
pop
xchg
pop
sub
into
cmp
fcmovnbe
imul
test
jne
aas
in
cmp
pop
xchg
fs
scas
sub
or
push
outsb
scas
aaa
cli
lods
insb
jecxz
inc
pusha
arpl
and
add
mov
and
pop
jo
cmpsl
push
loope
negl
xor
daa
fnsave
and
lahf
push
add
cmp
jno
add
sub
or
mov
popa
cs
push
xchg
and
or
or
jno
push
sub
loope
sar
pop
aas
adc
jno
xchg
ret
dec
ret
int3
enter
cmpsl
inc
xchg
mov
test
mov
adc
pop
mov
mov
dec
das
pop
jns
mov
mov
jg
shll
imul
std
in
dec
aas
cmp
mov
out
sbb
mov
jns
test
sbb
test
xor
pop
sub
in
mov
sbb
fstps
add
adc
faddl
fbld
jmp
sarl
pop
cmp
add
neg
jle
mov
push
jge
jne
jb
ret
pop
call
ror
test
lahf
loop
sahf
rclb
and
sub
mov
jae
pop
adc
outsl
or
shlb
sbb
sbb
enter
rcrl
push
dec
dec
sbb
ret
loopne
sub
push
and
sbb
mov
in
mov
and
cmpsb
push
xor
in
dec
enter
pop
cmp
cltd
add
adc
push
lods
adc
mov
rclb
fistps
pop
xlat
cmp
adc
xor
dec
push
sub
add
ficompl
mov
test
xor
fldt
jg
jno
inc
mov
movsb
adc
icebp
stos
cli
cmp
add
sbbb
push
lods
jge
sarb
fwait
leave
movsl
ret
lahf
imul
mov
mov
sub
and
rolb
rolb
xor
lock
loopne
lcall
cmp
lcall
cwtl
sbb
inc
fidivrs
clc
xchg
ja
inc
fcoms
inc
push
and
push
mov
add
ror
cmc
bound
fisubs
xor
frstor
into
loop
mov
mov
fildll
call
fistpll
push
cmp
or
mov
pop
iret
imul
fwait
jge
mov
jb
in
pop
dec
adc
sbb
ljmp
xlat
in
pop
cld
cmp
stc
cmp
xchg
adc
jge
sub
cld
and
xchg
fsubrs
cwtl
push
aas
pushf
xchg
cmpsl
lods
je
dec
scas
test
andps
add
pop
je
cmp
dec
ja
or
les
mov
pop
in
test
dec
pop
xchg
in
mov
fld
mov
scas
cmp
movsl
sbb
movb
sbb
imul
jne
fs
out
arpl
or
arpl
cmpsl
add
adc
lret
or
or
push
push
decl
dec
add
mov
push
movsl
rcrl
xchg
push
mov
ss
inc
fwait
nop
dec
or
cwtl
mov
pop
or
sbb
sbb
imul
dec
sbb
mov
push
ss
in
adc
push
lock
lods
pushf
xchg
ret
cmp
sub
jne
adc
es
orl
adc
orb
lods
dec
jg
jg
sub
stos
and
lods
aam
adc
insb
sub
push
and
pop
insb
push
sar
jecxz
outsb
cmpsl
jns
outsb
adc
sbb
pop
data16
shl
shll
aas
adc
fs
outsl
pop
pop
ffreep
inc
inc
bound
out
cli
nop
lret
inc
sarb
adcb
jbe
adc
and
sbb
push
arpl
nop
lods
call
mov
jb
add
pop
ja
sub
jmp
scas
cmp
lods
dec
data16
test
and
shlb
adc
leave
aas
lock
xchg
adc
pop
jg
fs
adc
or
rcll
add
inc
or
adc
out
pop
sbb
and
jl
fidivrl
test
ret
xchg
cmpsl
sbb
pop
fimull
mov
aaa
rcrl
jg
sub
push
or
mov
jnp
imul
sbb
test
or
shrl
sbb
addr16
xchg
outsb
sarb
rcl
or
pop
adc
imul
jb
xchg
pop
les
xchg
jmp
or
xchg
outsl
pop
inc
arpl
inc
lods
cld
adc
clc
and
mov
insb
ret
test
adc
icebp
or
in
adc
loop
jmp
in
jle
dec
sub
data16
push
or
fcomip
test
adc
xchg
in
or
movb
setl
shrb
sub
or
push
scas
int
orl
in
shlb
stos
dec
jnp
dec
je
in
dec
test
test
pushf
call
mov
push
jo
bound
jge
stos
cld
mov
imul
mov
lock
push
sub
in
mov
gs
into
xchg
sbb
insb
insb
jne
add
mov
rsm
add
inc
ljmp
or
mov
mov
bound
lret
dec
mov
call
clc
dec
unpcklps
mov
jne
cmp
loopne
xchg
loop
add
dec
fsubrs
sub
arpl
add
addr16
jb
lea
into
sarb
leave
insl
insb
or
jne
and
jp
loopne
push
lret
sarl
push
push
mov
mov
ja
arpl
add
adc
subb
mov
imul
xor
cwtl
imul
adc
lret
or
clc
je
pop
rcrl
fstl
popf
add
into
ret
or
push
test
fwait
nop
inc
jmp
shll
mov
mov
push
shrb
xlat
mov
addr16
adc
mov
call
push
jno
orb
xchg
ror
ret
cmp
add
ljmp
movsb
mov
dec
mov
loope
or
xchg
mov
outsb
rclb
push
xchg
adc
xlat
mov
orl
jnp
or
andb
int
scas
shrb
imull
dec
push
cld
pop
repnz
rolb
or
sub
or
es
fnsave
ret
push
repnz
and
inc
loopne
push
mov
mov
fs
inc
xchg
push
in
loope
jmp
dec
cmp
in
ds
mov
imul
cmc
into
ret
adc
mov
jg
out
ljmp
mov
xlat
add
fidivrs
jl
data16
fstl
dec
mov
stos
in
leave
sbbb
mul
or
mov
and
ds
xor
jnp
fdivrl
outsl
lret
inc
in
jns
push
push
arpl
push
in
xchg
adc
mov
or
outsl
mov
rol
loop
imul
ss
lea
test
and
fstpl
cli
mov
mov
and
adc
insb
cwtl
pop
rcrl
xchg
and
mov
cs
sti
mov
sub
jnp
test
cmp
fimull
push
scas
stc
sbb
test
in
dec
das
sti
lods
ficomps
pop
cld
out
fucom
lret
dec
scas
xchg
testb
or
add
int
faddl
in
pop
dec
test
push
les
dec
dec
add
or
cli
je
and
jge
mov
push
dec
jne
icebp
jns
nop
or
xor
inc
test
mov
gs
mov
and
outsb
sbb
mov
push
inc
rcll
and
loopne
stos
mov
mov
stos
pop
aad
push
call
inc
test
outsl
lret
outsl
push
sub
loopne
popf
add
ret
out
aad
in
mov
sub
mov
pop
push
xchg
pop
outsb
adc
out
xchg
or
iret
stos
mov
xchg
fisttpll
cmc
or
or
cmc
xchg
sub
add
sub
lret
add
hlt
jne
repnz
cmp
adc
sbb
add
rcrb
push
test
cmp
pop
pop
and
ljmp
jp
inc
xlat
inc
call
loopne
ja
icebp
pop
test
push
sar
jp
out
lea
insb
push
push
pop
xlat
iret
jle
sbb
add
outsl
cmc
roll
cwtl
jnp
sbb
pop
add
aaa
adc
xchg
cli
sub
cmp
stos
mov
pusha
jns
movsl
std
das
dec
or
imul
clc
jb
xchg
test
insb
sti
pop
jle
mov
cmp
pop
ljmp
mov
js
adc
lret
movsl
movsl
cmp
add
jae
fs
out
dec
imul
aas
xchg
cmp
mov
mov
fucom
pop
mov
insb
lea
jbe
popf
xcrypt-cfb
cmpsl
es
inc
sub
jle
mov
repz
and
outsb
xor
dec
jge
movsl
cmp
mov
mov
push
dec
bnd
imul
push
sbb
jnp
push
outsb
jns
pop
rcrl
sti
push
sahf
ds
or
and
in
jno
leave
push
push
sub
iret
divl
es
shl
loope
js
int
jnp
fcompl
pop
xchg
pop
ds
pop
push
aad
adc
adc
imul
test
into
sbb
sarb
cmp
and
lds
cmp
movsb
or
mov
push
daa
push
jle
cmp
push
push
inc
bound
xchg
aas
sahf
add
cmpsl
push
loop
inc
jbe
or
sub
sub
add
jle
xchg
inc
pop
sbb
adc
mov
out
add
dec
inc
adc
adc
adc
loope
std
add
push
pop
mov
js
add
jne
lds
dec
cmp
into
outsl
jge
cwtl
dec
mov
mov
jae
pop
dec
sbb
mov
or
orb
stc
into
jl
xchg
mov
test
adc
lcall
stos
jmp
pop
xchg
movl
movb
mov
jle
cmp
stc
mov
inc
mov
outsl
xchg
pop
out
sub
fnstcw
ret
out
data16
lds
rcrl
lahf
inc
jp
imul
fildll
add
test
add
add
aad
or
je
mov
sbb
invd
iret
int3
movsl
adc
inc
fcoml
call
dec
xchg
push
adc
pushf
cmc
rcll
cmp
pop
add
loopne
das
mov
mov
lea
mov
fadds
cmp
test
and
lahf
jp
xor
jbe
dec
sbb
subb
push
mulb
or
lods
pushf
xchg
push
hlt
cmp
or
out
testl
add
xchg
fucom
dec
sub
push
inc
rolb
into
insb
sub
or
mov
sbb
cmp
out
and
scas
pusha
mov
xor
push
push
test
imul
out
inc
cli
es
loop
cmp
sbb
or
int3
pop
pop
call
fwait
imul
mov
test
jnp
popf
mov
orl
shll
mov
pop
addl
mov
pop
mov
xchg
jl
sbb
xchg
adc
mov
jg
push
xchg
fwait
add
and
enter
jbe
add
or
jge
test
add
std
jp
movsb
mov
sbb
movhps
adc
pop
inc
xchg
push
imul
xlat
lods
les
dec
adc
gs
sbb
mov
and
fisttpl
push
das
mov
jno
mov
xchg
in
mov
and
test
xlat
bound
call
jge
push
mov
jb
decb
mov
ffreep
pop
data16
int3
ficoms
cwtl
or
mov
xor
bound
loope
push
add
cmp
lds
shrb
iret
insb
cmp
dec
pop
mov
fadds
add
arpl
test
cmp
sub
jnp
or
dec
pop
sbb
adc
sub
shrb
push
adc
popa
push
cmc
repnz
xor
cmpsl
es
pop
sbb
jnp
icebp
jb,pn
sti
xor
push
scas
lods
pop
mov
imul
sbb
inc
sbb
jl
in
inc
adc
jno
mov
push
or
add
popa
pop
out
mov
aaa
or
ficoms
jle
sbb
aas
stc
jno
idivl
mov
jnp
lods
call
fcomp
movsl
enter
pusha
pop
sbb
fcomp
xlat
cmpsb
push
mov
fstl
stc
imul
pop
push
ret
adc
dec
loopne
add
rolb
aam
xchg
es
jae
int3
test
sbb
adc
add
sti
out
stos
test
xor
pop
push
int3
and
fbstp
push
and
test
cmp
sub
inc
mov
out
mov
dec
fisubrs
inc
sbb
pop
mov
jp
es
mov
or
jl
rolb
aas
or
or
xor
xor
or
mov
icebp
pop
popf
rcl
addr16
adc
sub
scas
pop
aas
imul
pop
enter
cld
sbb
cli
mov
int3
pushf
insl
movsb
iret
push
push
popa
xchg
ljmp
ljmp
js
movsb
mov
mov
hlt
daa
inc
mov
push
adc
push
add
sub
imul
inc
lds
jl
frstor
dec
inc
outsb
and
mov
or
ficomps
loopne
dec
test
cmpsl
push
out
jb
sarl
bound
or
hlt
call
pop
insl
movsl
inc
sub
imul
xchg
jp
inc
lds
or
pop
adc
push
mov
pop
icebp
inc
call
adc
push
mov
lds
in
shll
lcall
dec
fisttpll
movsb
adc
mov
jg
fcoms
lret
sub
lret
movsl
loopne
daa
leave
fistpl
sbb
call
pop
sbb
dec
stos
xor
fiaddl
cmp
mov
dec
xchg
mov
faddl
and
fisubrl
leave
push
ja,pt
mov
mov
orl
pop
or
cmc
in
subl
push
out
jne
cld
mov
dec
mov
rclb
xchg
or
cmp
mov
or
addb
imul
jae
lods
out
cli
nop
daa
stos
jge
jg
xchg
and
xchg
push
pop
ret
add
test
jp
dec
jnp
hlt
adc
adc
clc
mov
adc
andl
rorb
repnz
lahf
xor
mov
push
call
add
data16
adc
in
push
loope
adc
and
test
int
xchg
or
or
push
sbb
insl
arpl
inc
les
je
sub
imul
sbb
or
fs
in
es
xchg
lock
test
sarb
cmp
cmpsb
or
pop
flds
add
fucom
and
fwait
scas
mov
lret
jne
mov
or
iret
jge
test
pop
test
cmc
sbb
aad
dec
jmp
or
icebp
xor
xchg
lock
lret
mov
pop
scas
jl
cmp
inc
inc
xlat
sub
fsubl
sbb
or
fdivp
sbb
mov
lret
rcll
addr16
inc
push
call
sbb
outsl
mov
cmp
nop
outsb
xor
mov
lods
mov
imul
cmp
mov
xchg
popa
cmp
scas
stos
and
scas
sbb
dec
ret
xchg
test
push
ret
orb
sbb
loopne
arpl
sub
data16
mov
push
adc
push
test
jp
lret
pop
inc
mov
in
cmc
les
outsb
lock
sub
out
jecxz
adc
lods
sti
fistpll
aas
dec
std
int3
lret
xchg
jbe
fcoms
and
lds
loope
sarl
sbb
movsb
xchg
xor
jg
dec
push
jg
lea
push
sub
inc
hlt
or
ja
lea
cltd
or
cmc
pop
sub
imul
jle
xchg
or
fbld
mov
les
sub
rorb
adc
cmpsl
cmc
xchg
fisttpl
adc
shrb
gs
mov
dec
notl
int3
fdivrs
lods
mov
icebp
cmpsb
mov
xor
cltd
imul
rorb
xchg
repz
or
mov
call
adc
xchg
cmp
test
push
aaa
into
fistps
adc
mov
cwtl
inc
cltd
lcall
xor
icebp
cs
xorl
pop
loope
inc
mov
imul
and
push
lret
call
fsubrs
dec
sbb
mov
push
daa
mov
and
aas
bound
push
mov
test
cmp
js
nop
mov
imul
dec
shrb
decl
addb
jb
lods
push
jne
jo
loop
int3
scas
pop
mov
into
test
adc
cmp
imul
inc
ret
imul
sub
subb
adc
iret
jmp
pop
mov
xchg
outsb
repnz
xchg
lret
sub
andl
data16
pop
jo
jae
dec
dec
in
stos
sub
or
aad
iret
lcall
stos
or
adc
mov
and
jmp
ljmp
test
inc
imul
arpl
inc
popa
and
and
aad
icebp
inc
adc
mov
sub
out
jl
sar
in
rcrb
andb
xor
dec
jae
lahf
xor
adc
jns
mov
or
lds
cmp
push
push
dec
sbbb
fwait
outsl
and
inc
add
bound
sbb
and
call
sbb
ljmp
dec
pusha
lret
push
adc
sub
push
push
mov
movsl
or
push
movsb
rol
scas
aad
mov
jp
xchg
es
bound
faddp
jnp
sbb
insl
lret
mov
enter
add
insl
popa
scas
sahf
inc
rcrl
loope
xor
mov
cmp
xor
ficoms
cld
out
adc
dec
xor
call
iret
scas
cmp
mov
jecxz
add
cld
mov
xor
scas
gs
jp
mov
push
rcll
inc
fs
jnp
mov
jae
push
movsl
and
and
jno
jns
test
aaa
dec
cs
sti
dec
test
insl
das
dec
pop
xchg
test
cmp
sub
xchg
mov
jns
or
jp
push
sbb
fisubs
leave
fnstcw
sub
shlb
xlat
repz
std
cwtl
cmpb
adc
sub
bound
fwait
test
jbe
cmpsl
jns
push
imul
dec
in
out
jno
jb
mov
jne
js
inc
xor
mov
in
mov
scas
ja
lret
mov
pop
xchg
jmp
insb
clc
push
xbegin
mov
mulb
dec
test
dec
scas
out
push
or
adc
mov
sub
lahf
scas
shlb
adc
addb
add
loop
push
sub
jmp
shr
sbb
push
cmp
push
mov
push
lret
stos
int
mov
push
mov
stc
roll
add
aad
stos
mov
fcoml
hlt
cmp
jg
movb
test
test
dec
xchg
xor
mov
cmpb
and
fs
cmpsl
dec
pop
icebp
les
addr16
cmpsl
sub
lret
shrb
and
jmp
ret
in
test
dec
fwait
jnp
pop
outsb
mov
popa
xchg
mov
xchg
mov
mov
daa
jne
and
mov
in
imul
cmp
mov
mov
pop
les
mov
push
adc
and
mov
push
add
mov
xchg
cmp
roll
subl
and
std
push
je
cmpsl
and
dec
pop
daa
mov
xchg
add
mov
stos
push
insb
fwait
shl
pop
test
imul
xchg
decb
cmp
pusha
call
out
shr
adc
ds
add
cmp
nop
aad
in
adc
aad
sub
lret
push
fdivrl
jle
sbb
push
pop
les
in
ficoml
rorl
call
mov
test
jns
jle
sub
clc
fisubrl
scas
cs
bswap
push
xchg
lcall
or
imul
push
aad
sbb
iret
or
in
mov
out
fcomp
pop
push
sbb
cmpsb
popf
call
std
sbb
jp
dec
fists
mov
insb
add
mov
ret
inc
jge
cmp
xchg
push
mov
cwtl
sbb
add
xchg
push
xor
dec
inc
enter
dec
inc
mov
jl
lea
mov
cmp
and
insb
xor
idivb
fwait
mov
inc
push
xchg
or
aas
pop
imul
fbld
xor
test
xlat
repz
lcall
call
movsl
jbe
scas
fnstcw
sub
fiadds
dec
enter
bound
mov
call
jecxz
xor
leave
jo
mov
nop
movsl
cmpsl
loopne
scas
inc
js
imul
scas
les
push
mov
jns
push
mov
test
or
inc
cmpsl
jnp
cmc
adc
loop
das
xor
cmp
cmp
jo
and
push
mov
shl
jmp
mov
cmpsl
dec
icebp
std
sbb
aam
sbb
pusha
clc
add
loop
mov
pop
cld
pusha
sbb
scas
dec
scas
xchg
and
push
cwtl
mov
mov
aad
mov
push
pop
loopne
sbb
and
inc
fdivrs
pop
cmp
rcrl
test
xlat
daa
out
call
sbb
xchg
jmp
movsb
aad
sbb
sbb
mov
lds
movsl
adc
dec
add
outsb
push
icebp
cltd
push
fwait
pop
push
push
in
rcl
inc
sti
jle
in
sbb
jns
cmp
add
and
rolb
outsb
sub
inc
jns
cmp
pop
jae
push
icebp
hlt
and
call
cs
std
lret
jb
mov
jecxz
jo
loopne
mov
jo
xlat
pop
outsb
subl
mov
mov
je
cmp
js
or
push
mov
es
out
int
or
shll
add
xchg
test
test
push
cmp
or
push
stos
inc
loop
clc
jl
and
loop
push
cmc
mov
ret
xchg
add
les
jno
adc
or
or
aad
imul
test
inc
xchg
in
jge
movsl
xchg
fldl2e
mov
cmp
ss
fstps
push
xor
inc
or
daa
sarb
xlat
pop
scas
loope
mov
scas
sub
sbb
xchg
fistpl
jle
dec
les
rcll
aam
dec
lods
cmc
fdivr
enter
cld
push
adc
push
cmpsl
in
lds
rolb
jb
ficoms
xlat
pop
xchg
loope
sbb
jl
aaa
push
push
push
imul
rol
or
mov
inc
inc
mov
jmp
les
ljmp
jb
adc
cmpsb
xor
popa
lods
jecxz
mov
pop
or
cmp
adc
mov
or
jge
push
je
or
fs
inc
data16
sbb
and
pop
push
shrl
mov
fldl
or
sbb
xlat
icebp
js
xchg
push
or
popf
inc
mov
and
inc
pop
loopne
js
cli
insb
mov
add
icebp
mov
xlat
xlat
rorb
mov
loop
add
outsl
or
pop
shlb
xor
jnp
push
xor
fistps
jle
gs
shrl
cmp
sub
cmp
cmpsl
nop
dec
popf
les
imul
jle
xchg
adcb
or
ljmp
scas
ja
push
or
xchg
mov
jg
dec
loopnew
xor
test
in
frstor
lods
imul
in
test
push
xchg
sbb
jl
pop
iret
inc
fisubs
mov
pop
inc
push
xchg
js,pt
ds
mov
mov
repz
ljmp
xchg
je
cltd
cmc
jl
outsb
or
fdivrs
xchg
lds
ret
mov
mov
adc
mov
cmpsl
test
pop
hlt
cli
daa
pop
mov
aad
frstpm(287
sbb
decb
shlb
mov
cli
sbb
rclb
push
mov
add
sub
sub
or
movsb
clc
xor
loop
shl
aaa
mov
inc
sub
jmp
mov
cmp
lods
rcl
popf
popa
mov
add
xchg
fidivrl
daa
jl
cmp
ret
nop
imul
fidivl
fdivrs
insb
aas
jno
jle
rclb
push
dec
shll
cmp
push
push
mov
xchg
mov
and
cwtl
inc
cmpsl
mov
cmp
mov
lcall
repz
fwait
xchg
or
ljmp
into
xor
in
mov
scas
addl
shl
hlt
shl
inc
push
das
mov
xchg
lret
lret
cmpsl
jg
out
fmuls
enter
cld
out
push
sbb
das
orl
scas
test
imul
bound
mov
push
cwtl
in
or
outsl
sub
and
mov
add
sub
imul
notl
loopne
bound
out
dec
add
inc
int3
sbb
lcall
cli
rolb
fdivrl
jo
call
push
out
push
in
pop
adc
pop
mov
cmpsb
test
mov
sbb
push
lret
aam
mov
and
jge
pop
and
pop
pop
cltd
sbb
mov
outsb
mov
pop
aam
int
mov
test
out
lods
fdivs
pop
add
cmc
lret
mov
imul
xlat
sub
mov
mov
adc
lcall
icebp
add
sub
add
imul
mov
jnp
call
push
inc
jnp
add
push
aas
xor
adc
popa
in
xor
cld
xchg
push
xor
pop
aas
sub
outsl
adc
ds
inc
inc
pop
and
push
shl
lea
dec
stos
pop
sub
mov
jno
mov
sbb
outsl
xchg
jg
sbb
shl
adc
jb
movups
mov
add
fiaddl
fidivrs
imul
add
pop
cwtl
pop
push
xchg
test
andl
aaa
shrb
in
sub
add
aaa
push
xchg
shlb
arpl
aam
pop
mov
mov
rcll
loopne
aam
cmc
adc
test
dec
imul
xor
hlt
pop
inc
loopne
call
pop
pop
sub
and
mov
pop
dec
rcrl
jo
in
sub
pop
negl
fdivrl
adc
negl
or
dec
inc
dec
add
sbb
push
push
imul
or
or
mov
adc
lods
movsb
addr16
scas
movsb
popf
cmp
push
sub
nop
mov
test
and
jp
ja
fistps
adc
sbb
ss
dec
jo
dec
and
mov
enter
in
popa
xor
dec
mov
adc
or
cli
cmp
nop
pop
jl
testb
jb
jo
call
adc
pop
cmp
shrl
call
sti
sbb
ret
or
push
add
xchg
adc
mov
adc
call
mov
cli
pop
aad
inc
imul
insl
add
or
push
inc
mov
inc
fdiv
les
test
gs
add
fildll
stc
lcall
sub
inc
out
push
cld
xor
jle
push
mov
sarl
pop
cmp
cmp
sub
pop
leave
cs
daa
inc
cmove
aam
je
fs
shlb
in
mov
inc
add
cmp
stos
xchg
ljmp
xchg
lods
and
xchg
or
leave
pop
into
ja
xor
sbb
add
pop
add
xchg
aas
mov
adc
les
or
sub
push
cmp
mov
clc
mov
pop
xchg
nop
mov
sbb
xchg
push
jge
icebp
outsb
xor
int3
mov
xchg
imul
arpl
sbb
adc
iret
push
and
in
mov
or
and
leave
shr
in
ret
fistps
fadds
pop
stc
mov
imul
and
outsl
adc
rclb
insb
pop
lock
push
sti
fisubs
xchg
lods
loope
inc
sbb
dec
sbb
xchg
mov
lds
out
lea
pop
jge
mov
sbb
ss
lcall
jge
mov
loop
sbb
jp
jns
sub
ret
loop
mov
jne
sbb
or
out
push
lods
mov
sbb
ret
sub
stc
xchg
cwtl
testb
sbb
insb
movsl
int
xor
cmp
imul
jle
or
jp
push
xchg
call
cmp
fistpl
cmpl
push
movsb
test
mov
jnp
sbb
pop
xor
cmp
xchg
in
or
stos
pop
add
lods
push
inc
cli
and
movsl
pop
lods
rcrl
data16
mov
push
and
xlat
into
cmp
fwait
or
jb
aad
ds
call
sahf
xlat
nop
imul
mov
cmp
nop
sub
cmp
stc
mov
popa
push
call
das
or
mov
jb
dec
addr16
lock
push
jp
add
lock
inc
imul
jnp
fs
and
subb
fistpl
incl
xor
sbb
mov
mull
scas
mov
into
jne
mov
mov
scas
or
imul
sub
xor
add
push
movb
and
push
pop
cmp
cwtl
push
sub
mov
sub
jmp
jl
in
push
pop
imul
aas
push
iret
das
mov
sub
xchg
xlat
push
inc
dec
push
sti
arpl
std
gs
cmp
or
inc
rcrb
and
imul
repnz
cltd
shl
or
or
imul
into
testl
cmc
inc
insb
hlt
mov
aad
andl
lahf
adc
pop
loopne
jle
jno
and
sbb
jge
out
bound
ret
dec
push
insb
movsl
add
cs
add
adc
jmp
push
imulb
cmp
mov
pop
jb
cmp
stos
daa
into
scas
pop
outsb
jg
push
mov
sahf
cmc
cltd
cmp
fidivl
dec
outsl
and
add
xor
inc
mov
mov
sub
bswap
fmuls
ret
or
es
aad
jae
ret
test
inc
add
nop
pop
ss
mov
or
mov
fucomi
adc
leave
imul
lret
sub
dec
sarb
push
push
cs
inc
dec
cmp
rclb
shlb
xchg
jo
dec
outsb
imul
xor
pop
pushf
inc
sbb
and
lods
int3
cmp
in
cmp
cmp
mov
aad
jnp
mov
orl
int
xchg
push
dec
or
lcall
std
cmp
pop
or
aad
xor
data16
outsl
je
dec
xchg
jbe
shll
mov
adc
aad
add
ret
fbstp
cmp
mov
add
xor
cmp
ret
push
scas
in
aas
fstpt
stc
jbe
jle
data16
xor
nop
pop
imul
lds
fiadds
sbb
fxch
sbb
in
int3
mov
mov
mov
loop
mov
inc
jl
addr16
jo
xor
ss
mov
add
loop
aam
inc
mov
call
adc
pop
adcb
sub
xchg
sub
aam
fmuls
xor
cmp
rclb
dec
jno
push
testb
in
adc
mov
mov
andb
mov
mov
cmp
pop
in
mov
jno
jp
push
sub
aad
adc
or
movsb
arpl
mov
stos
loope
scas
int3
xchg
adc
sahf
cli
repnz
cli
add
nop
out
insl
out
adc
lcall
cmc
shll
fdiv
out
pop
mov
into
and
jbe
push
enter
push
adc
sbb
pop
fidivl
decl
popf
stos
loop
aam
sar
mov
in
lods
mov
jo
out
or
cmp
cmc
shlb
push
cmpsb
mov
subb
dec
push
dec
inc
lock
xchg
pop
add
pop
mov
call
add
push
mov
mov
xchg
mov
insb
mov
push
test
mov
mov
into
sub
adc
inc
xchg
or
data16
dec
cmp
inc
or
cs
pop
sub
fisttpll
notb
outsl
xchg
pop
adc
ljmp
lret
mov
stc
fnsave
xchg
lret
std
cs
jmp
scas
lods
mov
flds
lds
adc
rcrl
sbb
andb
xor
mov
scas
test
cltd
or
sbb
jmp
cld
cld
test
les
stos
cmp
add
inc
cmpsl
xchg
loop
push
push
xchg
dec
adc
push
sarl
xor
mov
cmp
test
push
inc
cmc
fisttpll
sbbl
adc
adc
test
dec
push
insb
filds
in
sti
out
adc
stos
stc
iret
test
add
inc
out
shrl
xchg
lcall
loop
cmpsl
nop
pop
adc
lahf
sub
xlat
das
sub
xor
adc
inc
mov
test
ljmp
or
enter
lds
or
xchg
sbb
js
jb
mov
insl
stos
sub
xchg
jns
mov
loop
leave
fistl
aas
push
cmp
lds
mov
daa
scas
negb
mov
in
arpl
int3
pop
iret
or
adc
sub
sarl
mov
mov
push
js
fildll
mov
jle
call
cmp
fdiv
pop
cmpsl
push
sub
cmp
sub
sub
pushf
cmc
scas
pop
and
fmuls
lock
imul
or
lret
and
icebp
fistpll
push
iret
rcr
mov
incb
adc
lcall
mov
jnp
adc
in
and
imul
xchg
push
mov
and
xor
lods
cli
mov
jge
fsubr
nop
inc
ficomps
push
and
push
cwtl
outsl
enter
or
test
add
xchg
xlat
ret
adc
aam
mov
jecxz
fcmovu
or
or
sub
jnp
gs
imul
or
imul
pop
add
pop
jb
mov
jne
mov
sbb
out
pop
mov
mov
jmp
push
shrb
int3
mov
orb
loopne
cmp
movsw
cmp
push
in
aas
xchg
ret
int3
sbb
cld
lret
cltd
int3
inc
stos
xor
loope
mov
sub
jmp
push
mov
push
sub
pop
jno
loope
imul
mov
adc
cld
xchg
popf
sbb
push
and
mov
lds
pop
mov
mov
and
pusha
lret
pop
xchg
sub
cmp
mov
adc
aas
stc
cltd
mov
aad
in
movsb
mov
sbb
push
fiadds
pusha
cmp
arpl
ret
ret
aad
jnp
mov
imul
xchg
push
adc
aam
inc
adc
nop
stos
mov
in
les
jbe
loope
and
test
sbb
cmpsl
scas
inc
jmp
xchg
lcall
mov
sbb
xchg
rcll
lahf
jecxz
cmc
lcall
push
fcoms
mov
push
aam
lods
pop
jle
push
movsl
fmull
or
sbb
and
mov
into
mov
lret
jno
outsb
imul
jbe
xchg
adc
sub
push
adc
iret
dec
addr16
jle
imul
mov
loop
cmpsl
imul
sbbl
push
pop
addb
ret
xchg
or
sub
inc
or
mov
jno
pop
lahf
rorl
lods
idivb
cmp
jecxz
cld
mov
lods
aaa
pusha
adc
jne
pop
dec
xor
stos
cmp
sub
jnp
scas
sti
bound
dec
into
xlat
sub
imul
bound
cmc
mov
std
out
sbb
lret
jle
leave
imul
fiadds
movsl
ljmp
jmp
loopne
mov
outsl
push
pop
out
cs
push
lahf
fisttps
push
xchg
pop
fisubl
enter
stos
das
pop
xchg
jo
out
aas
sbb
fnstsw
jno
repnz
movsb
inc
jno
xor
sbb
xor
jmp
rclb
rorb
jno
push
add
push
and
aas
insb
inc
and
inc
out
add
inc
xor
push
adc
cmp
push
add
mov
add
int
imul
push
sub
movsl
and
loop
neg
xchg
in
jnp
mov
xor
sbb
mov
xchg
sub
push
cmp
cmp
nop
adc
xchg
call
or
in
fcmovbe
aas
fsubs
and
add
sahf
dec
xor
lods
add
jb
xchg
xor
leave
adc
nop
stos
mov
pop
lods
call
or
sub
lods
les
out
arpl
sahf
mov
in
call
cmp
sbb
mov
mov
sub
xor
xchg
mov
std
add
inc
pop
jge
add
cwtl
imul
into
sbb
or
or
test
adcl
cmc
movlps
lods
mov
or
jb
dec
ljmp
mov
or
jg
in
scas
add
imul
rcl
xor
push
lret
mov
add
movsl
sub
inc
sbb
aad
test
scas
imul
add
jl
lods
in
xchg
arpl
jl
dec
pop
stos
ja
test
push
jbe
lret
adc
cmp
mov
das
mov
add
mov
inc
movsb
xchg
dec
in
add
stos
fcomps
cmp
daa
dec
ja
inc
aam
adc
lea
setbe
loopne
fistpl
cwtl
and
lock
in
aas
dec
sbb
adc
js
and
push
mov
jns
adc
dec
fs
js
add
pop
fistps
xor
add
lds
int
aaa
idivl
or
mov
outsl
loope
adc
add
inc
inc
mov
push
sbb
cmp
add
test
lea
adc
shll
loopne
call
dec
push
mov
mov
push
movsl
sub
mov
jecxz
or
pop
cmpsl
mov
cmp
push
movsl
fiadds
xchg
aas
xchg
sbb
test
sbb
xlat
leave
cmp
mov
mov
loopne
int3
lock
lds
mov
inc
jmp
ds
jp
cwtl
jne
pop
into
shrb
cmp
cmpsl
sbb
or
cmp
shlb
test
dec
adc
mov
cmp
icebp
sbb
add
cmp
xor
dec
and
lods
ja
mov
jmp
fmuls
cmp
mov
lcall
repz
mov
fisttpll
js
sbb
out
dec
xchg
imul
mov
add
cmpsb
xchg
mov
lds
aaa
repnz
fistl
fnstenv
pop
cmp
adc
bound
sub
adcl
into
push
in
sbb
das
lret
inc
dec
mov
cmp
xor
push
sbb
ss
sbb
test
negl
xchg
outsl
inc
jle
sub
inc
mov
dec
adcl
jbe
les
scas
and
inc
sbb
outsl
push
sub
shl
orl
add
std
xor
popa
adc
stos
jle
pop
imul
test
add
sub
add
leave
xchg
aas
dec
ds
sbb
mov
push
or
pop
cmp
nop
inc
mov
and
ds
test
sbb
sarb
test
pushf
nop
cmp
out
mov
pop
fwait
shlb
push
inc
mov
or
fiadds
test
xchg
in
dec
add
mov
jl
and
movsl
cli
aaa
scas
shlb
ret
sbb
cwtl
aam
dec
insb
jno
lods
ffreep
pop
and
movsl
cmp
cmp
xor
je
daa
std
fistpll
cmpl
outsb
ret
add
cmpsl
adc
xchg
gs
andl
xchg
and
sbb
test
pop
xchg
test
and
sub
dec
imul
add
aaa
pop
mull
shlb
repz
lods
in
loope
cs
and
sahf
lods
das
push
leave
push
xchg
movsb
fisttpl
dec
call
aad
nop
xchg
add
shlb
jns
stos
lret
int3
cmp
fcomps
pop
pop
mov
xchg
aas
ss
movsl
lods
pushf
jns
xchg
xchg
jg
insb
or
scas
movsb
idivb
mov
xlat
xor
jge
sbb
in
sub
aam
mov
mov
lock
xchg
shll
imul
or
sub
inc
xor
pushf
pop
xchg
movsl
mov
sahf
sbb
scas
fmul
push
ret
les
dec
icebp
les
xchg
jmp
pop
cwtl
mov
mov
ss
insl
aas
int3
mov
repz
nop
adc
test
sahf
aaa
push
xchg
push
lret
add
xor
pop
mov
in
mov
mov
stos
es
iret
jle
xchg
cwtl
push
adc
pop
aam
dec
dec
push
cmp
jb
bound
xlat
aaa
outsb
cmpsl
jns
loop
aad
xor
test
jp
lahf
add
jno
push
dec
std
dec
lds
mov
or
dec
pop
sti
sub
je
rcl
mov
imul
cmp
pop
fld
jne
in
push
adc
lods
mov
andb
mov
jge
fisubrs
xchg
call
cwtl
imul
cmpb
lret
xlat
lea
test
sbb
or
out
pop
or
sahf
sub
pushf
scas
add
mov
cmpb
adc
loopne
dec
das
xor
test
xchg
sub
divl
mov
push
cmp
stc
mov
arpl
xchg
out
sub
jno
je
mov
mov
imul
jg
fistps
cwtl
dec
jle
fildl
loope
rolb
mov
and
cwtl
stos
xor
mov
mov
lret
stc
cmp
jo
cltd
sub
mov
jl
cmpsl
enter
adc
sub
lds
lods
outsb
push
and
jmp
jno
pop
xor
xlat
jp
lret
rcrb
jns
call
stos
cmpl
push
sub
outsb
mov
insb
dec
lret
pop
xchg
push
cwtl
sbb
cmp
add
imul
cmc
pop
cltd
shll
add
lods
das
and
fidivl
test
jp
push
sub
fwait
jle
wbinvd
push
or
push
dec
push
or
or
add
cmp
pop
shl
add
mov
mov
or
je
push
sbb
out
pop
int3
and
cmpsb
jnp
push
call
or
pop
jb
dec
fistps
mov
call
repz
xlat
inc
pop
mov
sub
or
fldcw
push
mov
push
lock
addb
imul
and
fstpl
dec
push
enter
sarl
shlb
fidivs
dec
sbb
orl
lods
das
pusha
lcall
mov
adc
mov
jbe
dec
rolb
cmp
cmp
add
addr16
push
pusha
andl
mov
movsb
cs
adc
cmp
dec
test
sbb
jb
movsl
subl
or
inc
push
jle
fstpt
xor
sbb
or
add
pop
inc
ja
pop
push
fistps
imul
fdiv
cmp
in
cld
or
into
dec
sub
outsb
xor
les
mov
cld
sub
call
xor
push
cmp
ss
loopne
test
aaa
negb
push
lcall
mov
insb
jl
and
sub
mov
icebp
adc
dec
xor
xlat
sbb
fidivrs
out
or
cwtl
mov
cmp
adc
lret
imul
movsb
xchg
sahf
add
subb
cmp
sub
mov
inc
sub
movb
pusha
pop
mov
jp
push
inc
aas
hlt
iret
sub
mov
das
cmp
call
test
test
push
scas
sub
lods
lods
movsl
add
subl
mov
cs
add
test
mov
dec
or
inc
pop
imul
cmp
add
inc
xchg
imul
dec
fs
xor
repz
aam
gs
push
mov
imulb
mov
or
mov
call
lea
sub
repz
std
into
jae
mov
call
pop
xchg
pop
xor
push
adc
ror
aad
lods
xchg
xchg
pusha
shrb
scas
pop
and
fwait
push
mov
popl
les
rorb
daa
aas
and
call
imul
xchg
in
les
dec
xchg
mov
dec
outsl
and
lret
imul
enter
ss
xor
ret
sub
fists
test
daa
lcall
mov
mov
cmp
popa
imul
cmp
int3
cmpsb
adc
lcall
cwtl
pushf
movsl
inc
push
jmp
jmp
stos
scas
push
push
mov
xor
jge
pop
imul
or
push
testb
or
sbb
insb
loop
mov
mov
jge
loope
test
ljmp
out
repz
or
ds
sbb
into
lea
fcomps
add
push
fldl
imul
fadds
sub
or
std
cltd
xchg
in
test
push
adc
stc
mov
mov
inc
outsl
and
lods
sub
ds
push
lods
divl
lret
fildl
push
outsl
push
scas
mov
sbb
mov
neg
stc
pop
fisubrl
adc
xchg
mov
cmp
test
std
fistps
imul
jnp
mov
cmpsb
clc
jb
mov
pop
fbstp
xchg
pop
lock
inc
jbe
push
inc
orl
mov
push
cmpsl
sti
fs
jge
xchg
mov
mov
loopne
bound
fstpl
or
adcl
into
mov
adc
xchg
sbbb
mov
push
les
push
mov
rcr
sti
cmpsl
xchg
loopne
push
mov
or
mov
mov
das
inc
scas
xor
sbb
loopne
repnz
loopne
jno
push
inc
pop
sbb
loopne
dec
das
adc
insl
js
push
adc
mov
xchg
ja
jbe
rorb
mov
push
ret
cmc
xchg
or
cmp
mov
fidivs
cwtl
and
aas
inc
into
mov
add
imul
xchg
push
xor
ljmp
sub
jge
sub
jo
imul
or
enter
outsl
ret
lahf
daa
push
fdivs
inc
or
dec
popl
aam
ret
lret
mov
xchg
push
bswap
fcoml
jbe
xor
repz
sbb
push
fistl
lods
fs
arpl
pop
sub
push
mov
rorb
out
mov
nop
aad
xor
sahf
cmp
cmpsl
cmc
adc
enter
sbb
aas
jp
pop
jl
push
cmpsl
pop
add
call
shrl
movsb
out
push
into
cld
je
fucomip
jnp
out
ljmp
aam
fildll
sbb
repz
stos
adc
mov
inc
out
xor
cld
mov
adc
adc
out
jae
popf
or
jle
sbb
lock
cmpsb
cmp
dec
or
sbb
xor
dec
cmpsl
stos
movsb
inc
cmp
aam
mov
inc
inc
int3
or
test
dec
ret
mov
add
movsb
dec
jg
or
mov
frstor
cmpsl
enter
mov
or
cmp
cmp
mov
sbb
push
push
out
jg
push
std
outsb
call
xchg
mov
out
xchg
xor
outsb
cmp
je
pop
lods
mov
inc
jo
roll
mov
test
sbb
jle
and
mov
or
test
jmp
addb
xchg
imul
jp
aas
call
outsw
mov
mov
push
cmc
xchg
test
imul
popl
jle
add
jge
call
jnp
mov
out
dec
mov
adc
subl
shr
cmpb
xchg
adc
and
xchg
in
jbe
mov
mov
out
push
subb
aam
and
cmpsl
pop
or
outsl
and
cs
inc
mov
or
pop
mov
int
push
add
fisubs
mov
loop
adc
dec
mov
push
mov
add
lds
iret
adcl
fistps
sti
adc
dec
sbb
inc
movsl
into
jge
mov
jl
cmp
sub
cmp
fisubrs
or
sarl
test
adc
pop
rcrl
sub
push
sbb
or
repnz
ret
faddl
fcomp
xor
push
xchg
dec
andl
jmp
xor
hlt
jmp
int3
movsl
lds
xchg
add
mov
loop
jl
les
adc
mov
test
and
pmuludq
push
test
rorb
aad
insb
nop
xchg
jg
xor
ljmp
pop
test
sub
je
adc
cmc
pop
pusha
clc
fmuls
adc
in
mov
and
mov
frstor
lods
sbb
inc
es
aam
mov
mov
scas
or
sbb
or
imul
test
inc
or
add
jbe
stc
and
xchg
call
nop
lods
adc
sbb
in
jae
andb
inc
jl
int
sub
dec
dec
and
mov
mov
rcl
xor
mov
les
adc
int
cmpsl
adc
sti
mov
rcrl
xor
and
mov
push
iret
sub
mov
jbe
mov
xchg
add
mov
test
inc
daa
aam
add
push
and
lret
cmp
mov
fidivrl
and
fs
sub
call
rcll
jg
lret
leave
add
adc
out
sub
mov
add
push
fwait
and
cwtl
sarl
sub
jmp
loope
mov
cmp
pop
sti
mov
adc
fsubr
repz
pushf
xchg
ds
out
neg
push
xor
imul
inc
push
push
es
int3
dec
cmc
mov
sahf
arpl
cmpb
scas
and
push
ret
aad
add
rolb
outsl
mov
fbstp
sbb
iret
mov
xor
mov
insb
int3
jge
pop
shrl
bound
sub
imull
or
add
call
stos
sub
int3
cltd
or
dec
adc
gs
adc
mov
pop
fbld
mov
or
sbb
push
jno
cmp
jge
fldt
mov
or
adc
cwtl
xchg
loopne
push
or
fwait
or
or
dec
aam
enter
test
dec
add
pop
or
mov
mov
dec
cmp
out
call
jmp
fsubp
or
adc
jg
sarb
add
push
dec
sub
cld
or
test
pop
push
mov
mov
repnz
test
addr16
jge
cltd
in
es
dec
pushf
sub
and
pop
insb
loop
jp
subl
lock
insb
mov
sbb
cs
mov
inc
ja
call
xor
and
or
gs
mov
call
outsb
pop
cmpsl
inc
dec
sub
adc
inc
sti
pop
jns
xor
and
aas
push
rcr
fisubs
jo
stos
into
arpl
mov
mov
push
imul
xchg
xor
adc
push
mov
mov
push
rorl
cmp
cmp
mov
xchg
loopne
jno
out
mov
and
inc
hlt
pop
add
inc
ja
jns
and
hlt
sub
rorb
repz
inc
sub
insb
pushf
or
hlt
test
jns
sti
lods
aaa
sbb
jecxz
xchg
fwait
testb
leave
jae
imul
xor
lods
fidivrs
xchg
fildl
fcmovnb
ficoml
xchg
or
rcrl
or
push
scas
js
pop
lret
xor
call
aas
lock
fwait
mov
mov
or
imul
push
dec
jno
ss
pop
hlt
dec
jmp
outsl
mov
imul
popa
scas
mov
pusha
fsubrs
push
sub
imull
loopne
mov
ds
lds
movsl
pop
jo
rclb
pop
aas
imul
inc
pop
shrb
mov
idivl
fdivl
mov
rcl
fbstp
jae
ffreep
or
insb
add
shll
jno
iret
xchg
ds
jle
adc
imul
lcall
ds
cli
mov
int
adc
xchg
jae
cmp
cmp
mov
out
cli
mov
leave
fildl
out
icebp
adc
scas
or
cmp
loop,pn
rolb
movsl
lahf
cmp
lahf
movsl
je
inc
scas
push
negl
pop
in
pop
imul
or
or
mov
imul
shrl
int3
push
bound
imul
xor
push
cltd
push
cli
out
int
mov
movsb
or
dec
dec
hlt
or
jmp
leave
pop
push
inc
fcomps
imul
ja
imul
push
popf
push
or
pop
cmc
mov
mov
loopne
jb
jge
cmp
dec
and
sub
sub
sub
lret
scas
mov
cmc
xchg
mov
xor
mov
dec
sub
jb
pop
out
ja
mov
mov
mov
xchg
cmpsb
jp
add
or
aaa
popf
inc
cmp
jns
sub
push
cmpsl
test
mov
cmp
fs
mov
imul
rorb
js
inc
shr
int
clc
iret
jle
mov
push
add
js
fcompl
aas
and
repnz
mov
jmp
sbb
test
int3
aam
mov
or
lods
mov
sub
cltd
mov
pop
mov
push
lret
or
mov
pop
vpunpckhwd
and
push
fcoms
lods
push
sub
push
out
nop
lret
push
pop
cmp
into
or
push
xor
hlt
jp
rclb
pushf
inc
imul
xchg
sub
mov
xor
sahf
xchg
xor
lret
xor
inc
test
cmp
in
and
cmp
shl
dec
fimuls
cmpsb
fnstsw
mov
stc
add
sbb
in
pop
jl
mov
cs
fstpl
scas
xlat
mov
push
sbb
in
imul
pop
rcr
jns
test
cwtl
imul
repz
aas
push
adc
ljmp
call
add
daa
and
xchg
rol
daa
push
jbe
inc
adc
xchg
insl
cmpsl
xor
pop
mov
pop
rcrl
nop
loop
adc
inc
ret
add
add
push
mov
inc
popf
cmp
std
push
jb
xor
cmp
rcrb
adc
lahf
and
sti
data16
jecxz
and
dec
jmp
movsb
ret
fcomp
or
jbe
mov
shl
daa
enter
pop
add
stos
lret
subl
movsb
aam
mov
mov
test
jb
cmp
loop
inc
ffree
int
xchg
shlb
and
adc
outsl
sbb
das
and
jl
addr16
mov
cmpl
ds
dec
jp
test
add
sbb
and
movsl
movsl
cmpsl
je
addr16
es
mov
push
push
add
je
inc
popa
or
leave
js
aam
pop
push
and
xchg
sbb
test
test
dec
subl
inc
and
jb
std
or
inc
dec
push
inc
cli
insb
xchg
cmp
jnp
mov
fdivs
cmpsb
jmp
add
out
lahf
pop
fisubrs
rorb
and
add
in
or
sub
mov
jne
cmp
imul
ficoms
imul
aad
lods
xorb
xlat
lods
enter
mov
cld
inc
lret
and
clc
imul
lods
push
cs
test
ret
in
jp
cmc
imul
fstp
subl
in
fiaddl
insb
sbb
sub
fadds
jno
mov
mov
aad
testl
pop
mov
rclb
dec
out
mov
hlt
test
mov
inc
mov
push
mov
sbbl
xor
popl
inc
ds
or
iret
push
and
sub
sti
pop
scas
divb
fbstp
push
call
mov
aas
xchg
mov
movb
jnp
jl
icebp
xchg
mov
popf
push
xchg
push
jg
adc
sbb
rclb
fadds
dec
sar
mov
dec
sbb
fdecstp
pop
push
shlb
outsb
imul
jno
mov
imul
mov
test
gs
lret
clc
stos
cmp
fnstcw
lds
push
lcall
push
lods
or
sbb
xchg
int3
mov
pop
jnp
jge
jl
dec
sti
rep
call
shlb
fs
adc
lods
call
pop
call
aad
pop
xor
nop
fisttpl
mov
fdivrl
sub
nop
push
das
loop
nop
pop
nop
xchg
inc
sbb
push
outsl
sub
jb
mov
add
jg
cmp
sub
mov
or
rcrl
mov
xor
inc
movsb
pop
cmpsb
es
into
aas
mov
push
pop
cs
div
jno
adc
loopne
jbe
jmp
leave
push
push
push
enter
lods
rorl
insb
in
lods
xchg
aam
rol
hlt
repnz
cli
in
sbb
sbb
in
mov
pop
mov
or
aaa
loopne
xchg
dec
sbb
pop
inc
push
adc
mov
lods
repz
push
xor
cmpl
test
jae
jg
ds
sbb
inc
and
lock
aas
or
xlat
hlt
add
sub
fmuls
mov
push
jl
fstps
cmp
lret
and
call
stc
test
push
pop
fimuls
imul
ljmp
test
lahf
sub
stos
xor
sbbb
inc
inc
and
movsb
fucomip
les
faddp
mov
js
js
xchg
or
or
loopne
mov
cmp
loop
das
fucomp
cmp
xchg
mov
pop
add
xorl
dec
sbb
push
callw
xor
hlt
jp
push
sub
cmc
adc
push
xchg
inc
lods
xor
scas
sbb
adc
xchg
cmp
movsl
adc
xlat
pop
mov
je
cmpsl
rorl
test
dec
mov
in
outsl
or
mov
aas
adc
dec
sbb
jbe
and
fistps
and
aas
movsb
mov
xchg
xchg
cmp
lea
cmp
mov
push
cltd
push
cld
lret
jne
lret
push
mov
xchg
push
js
rcrb
addr16
insb
daa
cltd
rolb
ss
adcl
lods
xchg
mov
jge
fadd
imul
pop
adc
inc
addr16
cmc
pop
repz
add
and
push
in
pop
sub
xchg
test
inc
push
loope
mov
push
filds
fldcw
loope
movsb
adc
sub
imul
call
leavew
movsb
mov
xchg
cmp
xor
lods
xor
jl
push
or
jno
xchg
sub
rolb
call
sti
imul
imul
dec
mov
pop
scas
sar
jmp
gs
xchg
in
sub
movsl
andl
push
insb
jge
sbb
sahf
lret
cmpb
inc
xchg
loopne
sti
std
inc
dec
sbb
xor
jg
jge
xorb
insb
roll
xlat
imul
fistl
mov
insb
ror
sbb
adc
sub
ja
sarb
xlat
dec
xlat
add
push
movsl
dec
lahf
pop
lret
nop
cmp
push
pop
shl
or
push
adc
cmp
sahf
adc
dec
add
and
pop
aad
aas
pushf
push
sti
movsl
xlat
pop
cmp
push
xchg
push
xchg
or
insl
fdiv
cmpsl
fldenv
xchg
shl
adc
xor
push
inc
sub
scas
xchg
jge
and
mov
fdivrp
and
call
inc
in
and
sub
or
inc
xchg
mov
sub
inc
test
inc
mov
mov
in
pop
push
add
xchg
test
dec
mov
test
mov
dec
add
sub
sub
xchg
push
sub
jp
push
push
sbb
jne
jbe
or
dec
mov
test
test
jecxz
imul
sub
add
pop
adc
fisubrl
mov
jle
sub
imul
jecxz
andb
pop
std
fwait
jo
sub
cmpsl
inc
pop
push
rcrb
jmp
into
or
jecxz
sbb
push
hlt
das
and
cmp
fucomi
jge
scas
jl
push
ret
pop
sub
cmp
jl
pop
nop
imul
xchg
push
test
shrb
mov
push
pop
push
cmp
rcrl
sbb
and
pop
dec
xchg
test
bound
xchg
sub
gs
jmp
repnz
addr16
aaa
mov
loopne
imul
mov
loopne
mov
dec
xor
setle
push
addr16
mov
adc
xchg
loopne
push
xor
mov
sbb
cmp
orl
xchg
test
jp
sbb
mov
sbb
lods
cmc
inc
and
imul
aad
stos
loopne
ss
mov
test
inc
mov
cmp
mov
nop
xchg
imul
push
int3
insb
imul
sbb
and
repz
test
xchg
je
inc
cmp
idivl
das
loope
mov
mov
fstpl
sub
xor
pop
dec
cmp
dec
add
adcl
xor
push
imul
cmpsb
out
jge
mov
ljmp
ret
mov
xchg
test
xor
fdivr
test
pop
add
fistl
shr
adc
sub
cwtl
jnp
rorl
sub
jne
jno
sarb
pop
inc
add
call
orl
adc
push
jecxz,pn
jmp
fwait
xor
sbb
sbb
sarb
and
test
int
jle
pop
test
call
call
imul
mov
rcrb
in
fstl
mov
movsb
cmpsb
das
dec
stos
movsb
cmp
sbb
xchg
js
sub
xor
xor
mov
aam
imul
pusha
add
popl
and
aas
mov
xchg
mov
adc
push
filds
movsb
mov
out
push
les
xchg
imul
pop
js
stc
cmpsb
test
pop
ja
or
outsl
mov
mov
push
pop
push
cmpsl
pop
cld
jns
movsb
lcall
adc
inc
cmp
out
in
shr
mov
pop
imul
adc
or
out
addr16
jnp
rcr
addr16
sub
imul
and
imul
lods
add
shrl
rcl
hlt
lret
dec
push
cmpsl
lods
loopne
imul
adc
jbe
mov
mov
sar
imul
adc
mov
test
cmc
lret
stos
int3
imul
push
jl
pop
and
mov
test
scas
lret
test
sbb
outsl
cmp
mov
movsb
outsl
popf
daa
in
out
pushf
xchg
in
mov
shl
or
adc
xchg
les
sbb
aas
inc
mov
push
cmpl
dec
fsubs
in
sub
ret
aaa
adc
pop
jg
inc
jmp
mov
pop
push
cmp
mov
fadd
ror
mov
jnp
sub
mov
enter
shll
add
push
daa
push
lret
dec
aad
dec
mov
vpshlq
call
sbb
aaa
bound
in
test
fcmove
jp
cmp
dec
insl
les
pop
fcoml
push
das
jmp
dec
cli
xchg
xchg
push
sbb
xor
mov
add
push
fs
xchg
push
out
rcll
cld
pop
xchg
add
les
mov
lcall
leave
and
insb
sub
cmpsl
push
dec
mov
mov
mov
cmp
jmp
lods
pop
imul
adc
push
adc
aas
loope
stos
xchg
mov
stc
jae
movsb
in
test
ss
jg
pop
sbb
jle
leave
pushl
iret
out
dec
and
push
aad
and
dec
pop
nop
cmc
jl
leave
adc
or
arpl
in
xor
xchg
imul
pop
add
sub
ret
frstor
inc
xchg
test
lods
xchg
dec
cld
sbb
xchg
push
and
lods
aam
cmp
pusha
call
and
push
push
adc
repz
sub
test
imul
test
jg
lds
sub
mov
jno
push
cmp
adc
xchg
in
dec
movsl
push
xor
push
or
je
enter
cmp
dec
xchg
js
inc
enter
test
xchg
inc
lret
roll
inc
imul
xchg
int
lock
dec
sahf
jo
test
pop
repnz
jge
shlb
add
sbb
daa
jg
sub
lods
push
jns
push
test
mov
fadd
movsl
ret
stos
daa
fcoms
enter
filds
jp
xor
test
xchg
lahf
sarb
fisttps
mov
xchg
push
jg
lea
mov
jae
and
rcrb
stc
cmp
loop
int3
shl
shll
out
jle
mov
iret
aas
loopne
adc
orl
pop
movsb
ret
or
pop
adc
lret
ljmp
fistl
inc
aam
out
cmp
add
inc
aas
mov
mov
dec
cmp
jg
fs
and
pusha
inc
adc
aad
mov
inc
xchg
and
fwait
cmp
pop
aas
shr
and
int3
xor
add
aas
es
rclb
stc
pop
xchg
add
data16
data16
push
ds
stos
ret
mov
adc
sbb
push
sub
xchg
mov
cs
xor
push
sub
or
and
test
imul
outsl
push
insl
std
incl
pop
iret
inc
jne
js
mov
int
fiadds
cmp
mov
pop
mov
nop
mov
mov
mov
int3
or
pop
mov
fists
outsl
add
fdivp
sub
xor
imul
fnop
or
push
add
jns
roll
mov
inc
movsl
mov
inc
std
jle
fidivrs
in
out
outsl
bound
sbbl
lret
cmp
cmpl
out
ret
loope
jb
push
int
stc
aaa
test
sarb
inc
fisubl
xchg
mov
sub
stc
xchg
aaa
jp
scas
aad
sub
pop
movsl
push
jle
jns
mov
jnp
dec
mov
adc
mov
mov
fistl
and
imul
in
add
leave
ljmp
adc
test
xor
loopne
inc
cmc
in
pop
sti
mov
lods
scas
dec
into
enter
sbb
das
push
add
dec
jns
add
insb
outsb
movsb
adc
cmp
rorb
popf
jnp
cmc
sub
clc
aas
and
call
mov
sub
repz
sarl
xchg
sysexit
scas
pop
lods
sbb
cmp
loop
cmpsl
fs
je
jp
sub
rcr
aad
les
xor
mov
xor
into
fidivs
or
xor
or
imul
sbb
mov
imul
mov
aaa
pop
jp
scas
xor
insb
loopne
into
mov
test
adc
xorl
ret
cltd
and
adc
icebp
test
addl
imul
or
fcmovnu
and
push
daa
rcrb
rolb
xchg
sarl
mov
cmp
and
imul
insb
sbbb
push
sbb
add
cmp
ds
push
and
test
or
repnz
xchg
jg
rcrb
xor
into
xchg
cmp
sar
int3
pop
and
ffree
pop
sbb
pop
jge
js
xor
xor
test
push
jge
pop
fnsave
popf
lea
sar
std
fsubrl
pop
inc
push
xchg
inc
adc
jb
int3
clc
stos
shlb
xchg
mov
mov
pop
lds
cmpsl
xlat
push
sub
enter
dec
mov
mov
cltd
cmpl
mov
mov
int3
xchg
adc
shl
and
add
jl
insb
out
push
cli
push
cmp
dec
inc
or
decl
shll
push
imul
mov
shl
cmp
cmp
imul
xor
ret
rcl
xor
dec
cli
insb
xor
mov
int3
or
aad
int3
pop
and
jg
out
sbb
enter
notb
pop
fisttpl
push
jle
pop
lret
fiadds
imul
lea
imul
pop
inc
stc
or
ret
xor
call
imul
test
repnz
shrl
enter
push
dec
loopne
pop
cmp
arpl
cld
scas
push
in
fisubl
and
xor
fdivl
or
push
rcrb
ja
cmpsl
scas
and
call
mov
ljmp
xchg
pop
xor
cmp
push
cld
call
add
mov
cmp
pop
dec
sub
dec
insb
call
pop
std
push
add
jg
call
je
nop
sbb
pop
push
dec
and
scas
xchg
mov
push
add
push
call
and
loop
adc
pop
fcmove
adc
daa
dec
inc
and
scas
xor
lods
pop
test
push
mov
xor
pop
call
cmp
das
ja
repnz
sub
push
ds
pop
stos
leave
add
adc
leave
pop
out
sbb
and
sub
mov
sub
push
or
rcl
or
mov
or
fidivrs
sbb
push
dec
lods
inc
test
jne
out
rcrl
push
xor
fdiv
ljmp
mov
push
sbb
cltd
xchg
jmp
cli
pop
ficompl
scas
sub
sbb
mov
jnp
lods
push
cwtl
fldl
insb
cmp
dec
shl
add
sub
or
xor
and
add
mov
lret
insb
and
ja
mov
icebp
xchg
push
lods
pop
fnstsw
xchg
dec
and
sub
cltd
jl
iret
inc
cmp
test
xlat
in
shll
inc
inc
jo
and
nop
stos
pop
int3
or
add
dec
sub
xchg
roll
out
or
popf
imul
jbe
les
fistl
cmc
fstps
jge
or
ss
lret
mov
popf
lods
int3
lods
inc
popf
cltd
add
cwtl
rcrl
testb
or
lret
xor
sub
sti
mov
loopne
mov
mov
xchg
cmp
mov
daa
das
subb
sbb
jnp
push
dec
mov
jp
adc
xchg
mov
and
ss
jbe
stos
lods
pop
shrl
xor
roll
sub
mov
mov
fisubrl
jno
decb
repnz
aam
fstpl
inc
fisubl
nop
add
or
inc
mov
in
test
imul
test
push
push
sbb
pop
les
cmpl
sub
in
dec
add
aad
lret
loop
adc
ror
and
adc
cmp
scas
jae
lret
jge
or
jl
bound
in
dec
stos
sbb
jmp
pop
gs
aad
sub
gs
xchg
adc
lods
loopne
sbb
in
or
fcoms
push
clc
fs
xor
push
aas
je
test
push
fiadds
push
push
inc
xchg
xchg
stos
sarl
in
or
sbb
mov
sub
les
adc
fcmovb
fs
lock
push
mov
loope
jb
movsl
mov
dec
pusha
scas
aad
loop
and
adc
cltd
or
inc
jo
stos
push
jl
scas
jnp
call
sbb
dec
and
lods
enter
scas
inc
inc
cli
mov
scas
lock
pop
dec
mov
repz
lcall
mov
lods
jle
arpl
lds
mov
adc
inc
fstl
xchg
or
notb
loopne
aas
out
push
cmpsl
mov
push
push
cmp
leave
xbegin
or
sbb
cmp
sbb
add
sbb
lods
daa
outsb
sub
in
nop
imul
fmuls
test
shlb
mov
xor
mov
jp
lret
mov
iret
imul
cmp
mov
jo
and
mov
mov
xchg
sub
lret
xchg
lds
xlat
sahf
cmp
add
hlt
insb
add
fildl
mov
sub
fsubrl
xlat
inc
int
sub
lods
and
aad
dec
fxch
push
cli
aam
sub
mov
mov
pop
lods
lahf
add
mov
cs
push
mov
adc
cmp
sub
insb
lret
lcall
call
out
std
jb
mov
clc
dec
mov
mov
mov
imul
cld
mov
push
or
fcoml
mov
jge
ss
imul
daa
jge
fwait
jne
pop
mov
sbbb
lea
lods
subb
push
out
or
jmp
push
cmc
psraw
xlat
cld
cli
xchg
jmp
movsl
jns
push
mov
or
fdivrs
inc
cmp
dec
xor
add
sbb
movsl
xor
imul
or
ds
popa
sub
and
dec
imul
aas
scas
lcall
sub
test
mov
leave
sub
cmp
lret
repnz
pop
sbb
add
mov
push
jge
dec
pop
vucomiss
mov
or
dec
lods
pop
xor
outsl
mov
mov
xchg
inc
sbbl
aas
sub
mov
cmc
icebp
lahf
movsl
jne
stc
movsl
aas
in
dec
aad
cs
inc
out
xchg
loopne
push
xchg
fidivrs
int3
cwtl
aad
ds
cmpsl
push
cmpsb
xchg
xchg
movsl
mov
pop
jmp
rcl
sub
popf
push
push
adcb
jo
sub
xor
pop
es
call
fst
in
gs
fdivp
jg
adc
mov
or
pop
mov
and
mov
push
in
imul
or
inc
lret
insb
dec
sarl
push
cld
fisubrs
les
or
mov
jecxz
jg
cmp
xlat
add
repz
fisttpll
cmp
test
adc
std
dec
shrb
add
pop
adc
gs
dec
push
test
popf
jle
lahf
mov
xrelease
pop
mov
jg
call
dec
shrb
jl
aas
mov
sbb
ljmp
lret
inc
nop
sbb
lods
lcall
in
fistps
adc
lret
dec
insb
xor
daa
push
lcall
dec
cmp
mov
mov
mov
stos
ret
movsl
aam
inc
dec
and
fsubrs
push
mov
or
sub
push
fidivs
jmp
cmpsb
and
in
jge
imul
inc
xor
jne,pn
ljmp
sti
xchg
fdivp
cmp
or
push
mov
gs
fistpl
int
dec
inc
xchg
dec
sbb
cli
push
sub
pop
sub
or
sbb
movb
xlat
ret
cmp
and
and
cmc
dec
dec
lods
ja
push
in
cmp
push
jecxz
imul
cmp
inc
add
bswap
adc
in
inc
imul
push
inc
jge
ss
and
push
adc
scas
cmp
push
ds
push
add
push
xor
out
jmp
bound
pop
je
or
fsubrl
imul
out
aad
dec
lods
jbe
out
xor
pop
mov
add
inc
jl
mov
subb
mov
lods
mov
fsubrs
jmp
push
testb
xchg
popa
hlt
fisttpll
faddp
mov
mov
fnstenv
adc
pop
mov
dec
or
add
outsl
ja
fstpt
mov
add
xchg
xor
mov
sbb
mov
shr
js
jge
jno
xorb
xchg
nop
aam
in
icebp
dec
test
call
push
stos
loop
pop
clc
dec
and
enter
cmpsl
mov
sbb
or
loop
push
outsb
lods
cli
xchg
das
and
ss
lods
pushf
roll
cltd
pusha
mov
cmp
lock
out
mov
mov
les
push
pop
cmp
mov
loop
sub
pop
jecxz
push
jp
jle
push
adc
ss
sbb
cmpb
or
rcrb
or
dec
mov
jno
mov
enter
cld
mov
mov
fimuls
int3
inc
mov
inc
adc
imul
pop
jns
dec
push
xlat
rcl
sti
or
and
mov
pop
dec
scas
jo
rcl
aad
lahf
mov
shlb
idiv
push
sub
int3
imul
out
mov
dec
push
or
mov
and
push
xor
ret
dec
hlt
data16
xor
pushf
xlat
inc
int
jno
cmpsl
rcll
cmpsl
rol
mov
shl
rcrb
push
sub
in
jo
loopne
ret
in
add
cmpsb
inc
ret
jnp
jne
adc
mov
shll
aam
faddp
jp
loope
push
lock
mov
or
popf
fldt
fcoms
pop
push
xchg
cmp
pop
inc
in
loope
repz
inc
xor
movsb
fs
cld
out
int3
sarb
cmp
add
mov
imul
adc
pop
push
mov
stc
scas
movsb
jg
push
mov
add
sbb
xchg
lret
in
xor
scas
movsl
or
aaa
in
imul
sbb
cwtl
fdivrs
notl
lret
std
adc
scas
jle
stos
jg
fldcw
sub
std
clc
sub
push
or
imul
repz
pop
cmp
aaa
cmp
push
jo
ds
ss
data16
adc
jmp
mov
cmc
test
inc
cmp
in
ds
jmp
mov
adc
mov
inc
test
stc
fnstenv
insb
cmp
jecxz
fsubr
xor
pop
xor
xor
test
das
mov
jno,pt
pop
dec
imul
push
and
les
nop
add
adc
cmpsl
hlt
mov
adc
sbb
fisttpll
xor
lret
jo
mov
sbb
xor
mull
movsl
int3
ret
fidivl
sbb
loop
sbb
cmp
out
jb
xchg
call
mov
roll
xlat
jl
and
sahf
inc
push
mov
push
push
out
mov
or
push
daa
mov
inc
bound
fistps
xchg
imul
mov
push
and
mov
jle
add
jbe
cmp
push
test
pop
cmp
push
loop
mov
adc
ds
aad
sti
loop
xchg
xchg
shlb
sub
push
or
jae
sbb
lods
sub
fcmovb
mov
lret
xor
rol
adc
cmp
jae
sbb
outsl
or
xor
jne
mov
xchg
imul
or
jg
pusha
cmp
and
jns
js
test
and
das
sbb
aas
jno
int3
cmp
outsl
jge
or
sbb
andb
push
rolb
xchg
enter
imul
inc
jns
or
xchg
jb
mov
outsb
cli
gs
mov
mov
mov
mov
inc
inc
ljmp
ret
mov
jl
or
push
dec
dec
mov
sub
pop
mov
mov
jne
sti
push
xchg
fs
out
cwtl
or
lods
lods
outsl
movsl
dec
pop
ficoml
mov
leave
divl
xor
push
dec
outsl
imul
js
push
scas
sub
shrb
dec
scas
arpl
mov
mov
data16
jp
lock
aam
dec
out
es
rcll
push
outsl
push
mov
pop
iret
push
test
push
jo
push
aaa
inc
and
roll
jne
stos
cmp
gs
push
dec
mov
sbb
sbb
xor
out
mov
mov
shlb
lcall
sub
cld
add
push
jecxz
mov
jg
mov
jge
dec
loopne
cmpsl
lahf
sbbl
push
imul
pop
out
jle
data16
pushw
sarl
mov
sbb
clc
mov
pop
scas
sub
adc
pusha
adc
insl
jmp
cmpsb
mov
dec
adc
cwtl
jb,pt
or
cmp
sbb
push
add
mov
hlt
mov
mov
adc
scas
andb
push
mov
lret
fidivl
scas
sub
mov
scas
das
mov
bound
stos
movsb
aad
inc
imul
xchg
aad
push
std
mov
fs
mov
push
xchg
hlt
pop
mov
sahf
pop
xchg
jge
push
dec
xor
jne
out
xor
mov
subl
xchg
xchg
xchg
mov
push
test
je
sbb
adc
rcll
dec
imul
cli
leave
adc
aad
add
or
mov
mov
and
jmp
inc
xchg
shl
outsb
xchg
lea
mov
cmp
fisttps
mov
jle
dec
pusha
lret
dec
jae
fs
out
mov
call
cmp
and
ja
inc
movsl
daa
jnp
adc
cmp
jle
mov
clc
cmc
jge
ficomps
dec
jp
mov
out
pop
pop
xor
fcoms
jbe
add
test
mov
rcrl
xor
xor
or
xchg
dec
cmp
xor
xor
insl
dec
pop
aaa
enter
cltd
das
jge
pop
mov
insb
sub
decl
mov
outsb
in
imul
add
jne
jo
or
mov
mov
popf
cwtl
imul
test
xchg
dec
xchg
push
xorb
sub
push
cli
push
xchg
test
ds
cmp
mov
das
dec
rorb
fcomip
cmp
inc
xchg
scas
lret
push
jg
ret
and
out
testb
fildll
insb
cmp
loopne
fisubrl
push
push
inc
repz
jp
jne
or
jg
mov
frstor
inc
loope
ja
pop
sbb
lods
pop
or
pusha
mov
lret
das
dec
ret
loope
jnp
ret
fstps
lret
repz
mov
test
call
jle
sbb
scas
push
pushf
push
push
lods
popa
fidivrl
jl
or
adc
lahf
mov
cmp
fildll
cmc
sbb
hlt
xchg
cmp
jge
lods
lcall
enter
adc
sub
jmp
mov
aaa
test
loopne
out
call
jne
mov
ffree
or
or
clc
aaa
sbb
ss
les
jbe
call
lods
or
jg
sub
shll
jns
push
ds
xchg
and
and
mov
aam
or
sbb
lds
out
pop
xorb
sbb
push
cmpsl
mov
das
test
mov
fs
adc
rolb
sub
jno
pop
inc
mov
jbe
or
or
or
jl
and
push
dec
pop
lcall
jnp
inc
in
mov
inc
lahf
xlat
fs
xor
enter
cmp
and
push
cmp
dec
or
xchg
je
scas
js
add
and
orb
jl
ljmp
sbb
jecxz
mov
cmpsl
sbb
push
mov
cmp
push
les
call
push
aad
push
ljmp
mov
mov
aad
fbld
and
fdivr
pop
movsl
sbb
mov
inc
push
mov
sub
push
mov
push
adc
aam
lods
dec
inc
cwtl
push
lock
pop
std
test
popf
ret
jp
lcall
cli
sub
fcmovbe
je
push
xor
xor
or
and
xor
and
inc
lcall
cli
cmp
call
push
push
test
scas
and
ljmp
test
inc
jg
mov
push
inc
addr16
inc
mov
jae
adc
adc
xchg
iret
add
sbb
or
add
out
sbb
scas
push
sbb
shll
fimull
cmp
inc
jnp
jl
roll
inc
inc
xchg
cmp
pop
mov
repz
push
call
dec
or
es
sti
nop
cmp
scas
pop
and
rorl
imul
or
lods
jle
xchg
sbb
push
popf
orb
jns
inc
lods
test
add
call
into
loopne
into
push
sbbb
jae
stos
mov
cmp
mov
push
pop
dec
in
adc
rolb
je
je
test
push
mov
cmpsl
sub
insl
pop
shll
mov
push
lods
xor
sub
xchg
push
js
call
sbb
add
pop
out
rcll
fildll
out
aas
jb
inc
insl
adc
mov
lea
cmp
and
mov
ds
jmp
movsb
inc
das
and
je
sbb
mov
add
add
cmc
cmpsl
aas
add
jge
mov
insl
loopne
sbb
jge
cmpsb
in
das
and
jg
out
mov
adc
push
daa
les
std
mov
rolb
xor
add
jge
std
cmpsl
cwtl
fcom
xor
add
mov
mov
xchg
daa
push
pop
ret
mov
mov
adc
loope
inc
mov
mov
mov
cs
lahf
or
js
inc
push
sbb
mov
mov
std
fcmove
pop
fdiv
daa
sti
je
loope
leave
inc
imul
in
mov
test
xchg
pop
xor
sarb
mov
dec
lds
rcl
adc
mov
jp
loopne
ds
add
and
or
leave
fs
in
xor
xchg
sti
mov
test
sbb
fs
inc
stos
push
inc
cmp
mov
xor
in
jg
loopne
push
movsl
xchg
adc
das
shrb
or
sub
mov
fcoml
add
mov
jns
sub
pop
adc
out
xchg
imul
fcmovbe
insb
jns
mov
insl
out
or
xchg
mov
ficomps
mov
and
xchg
and
nop
jmp
fcomps
jne
fistpl
imul
cmpsb
shrl
stc
xchg
inc
pushf
mov
mov
inc
js
outsl
mov
arpl
lods
push
add
fstl
and
cwtl
jnp
adc
dec
scas
sub
push
outsb
mov
sbb
out
divl
mov
call
jmp
or
push
scas
int3
insb
jo
cmp
movsb
sub
lret
popa
cmp
or
scas
jns
lock
fiadds
fidivrs
movsb
cmpsl
sbbb
sub
pop
fildll
pop
or
pusha
fidivrl
dec
mov
pushf
call
pop
icebp
and
nop
and
sbb
js
test
mov
stos
dec
mov
dec
sbb
mov
cmp
push
cmp
fldenv
push
sbb
pop
add
in
xchg
rcll
fisttps
dec
daa
cmp
cmp
into
push
push
cwtl
add
mov
ficoms
gs
sbb
cmpsl
ljmp
fs
fcmovu
jnp
mov
cltd
pop
repnz
jle
popa
mov
push
movsl
or
faddl
loope
push
popf
pop
ret
or
lcall
aam
pop
jno
rorl
aaa
decb
cmp
sub
add
xchg
mov
ja
and
fstl
sub
and
ljmp
cld
or
movsl
cld
dec
cmpl
xor
movsb
mov
add
insb
scas
into
subb
mov
pop
jle
pushf
dec
xor
adc
vcvtps2pd
pop
pop
mov
sub
inc
nop
and
imul
nop
cmp
mov
push
mov
pop
or
cs
and
sbb
push
mov
cmp
call
ds
lds
mov
jp
mov
retw
iret
mov
mov
jl
push
pusha
cmp
adc
mov
mov
mov
fnstcw
jecxz
jge
mov
ds
js
insb
pop
clc
scas
xchg
jmp
push
sar
lods
mov
push
or
cmp
mov
incb
jne
mov
push
cmc
inc
mov
pop
cmpsb
sbb
push
dec
rcll
and
dec
outsb
add
push
call
adc
lret
xchg
ror
int3
mov
cwtl
pop
xchg
aas
es
xchg
imul
loopne
add
adc
add
or
mov
pushf
mov
nop
into
sarl
jecxz
add
adc
dec
imul
xlat
ficomps
push
push
scas
xchg
cs
leave
out
dec
jl
pushf
imul
jb
fisttpl
push
jns
fildll
xor
int3
dec
adc
cmp
arpl
fistl
cmp
lea
ljmp
outsl
add
jmp
pusha
mov
fldenv
mov
lret
insl
jne
lcall
outsb
mov
or
cs
xchg
rcrb
notl
adc
stos
sbb
adc
pop
pop
aad
push
mov
adc
add
imul
or
sub
out
xchg
fadd
jno
mov
mov
add
or
cld
xor
in
pop
movsb
decb
shlb
add
fsubrl
addb
xor
js
jle
lods
fnstsw
inc
jg
and
popa
xor
adc
rorl
mov
inc
push
xchg
sbb
mov
dec
mulb
add
jp
mov
call
sbb
mov
into
sub
imul
xchg
test
add
vfnmadd231sd
jle
mov
dec
fildl
dec
pop
scas
shll
call
mov
sub
loopne
cmp
xchg
shlb
stos
pop
out
dec
js
outsl
mov
mov
cld
inc
rcrl
movsl
enter
xor
inc
jle
jno,pt
test
movsl
adc
xlat
lds
and
stc
call
mov
fmull
xlat
jns
push
sub
sub
jecxz
mov
scas
jne
icebp
in
xor
call
aaa
and
loop
in
sbb
cwtl
sub
xor
insl
jns
fidivrs
ud2
mov
adc
adc
in
imulb
roll
bound
mov
psrld
bound
adc
cmpsl
in
movsl
inc
jmp
not
jns
adc
push
mov
out
or
nop
mov
inc
lods
ja
rclb
int
and
fidivl
mov
dec
aad
aad
gs
mov
push
mov
lock
dec
test
mov
pop
dec
cs
call
mov
lds
xor
nop
push
mov
jl
adc
mov
or
add
test
aas
pop
fidivrl
add
sbb
xor
into
imul
rcrb
jg
nop
in
jl
sbbb
rcl
aas
jne
js
pusha
mov
call
xor
ret
sahf
bound
pop
mov
sbb
shlb
mov
mov
mov
cmc
jne
out
xor
shrl
fisubrl
test
push
stos
out
jb
fldl
xor
scas
sbb
pusha
push
mov
loopne
js
movsl
mov
fnstsw
dec
mov
xchg
addb
cmp
pop
pusha
rol
test
cmp
es
jle
cmpb
call
or
icebp
pusha
jecxz
sbb
sub
dec
pusha
scas
push
jae
xchg
filds
add
call
mov
dec
fnsave
loopne
gs
test
fistl
push
push
repnz
push
mov
jg
push
je
cltd
aam
cmp
sub
iret
jle
add
mov
aad
mov
inc
enter
aad
adc
sarl
mov
mov
scas
insb
test
push
rsqrtps
ficoml
daa
scas
xchg
push
mov
add
daa
or
cmp
adc
rorl
jb
mov
lea
pop
mov
push
xor
lahf
dec
add
inc
sub
xor
push
lahf
sbbb
xchg
mov
mov
push
mov
loopne
imul
loopne
dec
pushf
xchg
xor
pop
push
jecxz
pop
push
xchg
xchg
ss
movsl
mov
xor
popf
jns
loopne
jecxz
lret
or
cmp
inc
sbb
std
enter
hlt
xlat
sbb
or
out
sbb
cmp
sbb
imul
imul
mov
sub
faddl
mov
cmp
insb
xlat
cmp
push
dec
lds
dec
mov
add
adc
jne
dec
gs
add
or
loopne
push
xor
mov
cmp
dec
cmp
push
pop
mov
lods
sub
mov
mov
cmp
frstor
mov
icebp
push
and
std
push
xor
fisttpll
add
mov
sbb
inc
in
fistpll
xor
pop
push
ds
lods
mov
es
jmp
iret
or
daa
enter
rolb
or
bound
fiadds
and
out
insl
sub
inc
xor
mov
mov
movsl
daa
mov
andb
lahf
mov
dec
js
test
sbb
jl
push
adc
xchg
popa
das
mov
imul
fistpl
add
outsl
test
or
iret
cmp
aad
ja
gs
and
inc
inc
push
push
jle
lcall
lret
shrl
fnstenv
cmove
stos
popa
mov
jo
call
sahf
mov
xchg
mov
das
ljmp
push
cmp
int3
sbb
sbbl
enter
lock
dec
pop
and
ffreep
push
pop
test
adc
mov
lods
je
add
imul
ds
xchg
mov
sbb
mov
fildll
mov
roll
add
mov
daa
sub
je
ds
pushf
pop
or
and
fldt
xchg
arpl
or
call
test
pop
push
add
inc
mov
imul
xor
add
call
lret
aad
mov
je,pn
rcl
lcall
fsubrl
push
in
fdiv
cmp
xor
jg
push
shll
and
or
mov
add
addl
jno
test
fsubs
pop
push
inc
outsl
cmc
mov
imulb
and
loopne
imul
stc
cmp
dec
loope
fs
std
sbb
aas
add
aas
mov
test
adc
mov
cwtl
imul
je
shr
addr16
in
mov
pop
adc
ret
xchg
fnstsw
xchg
ss
and
adc
stc
enter
orb
add
cmp
jp
jmp
in
rorb
jnp
inc
or
fdiv
popl
call
jbe
lret
xor
fidivl
cmp
scas
push
addr16
cltd
cmp
rcrb
cmp
mov
daa
ret
mov
inc
push
outsl
mov
dec
mov
in
pop
pop
sbb
mov
adc
mov
push
popl
push
lahf
nop
rolb
adc
push
movsl
cwtl
jnp
pop
add
call
cmp
adc
jno
sbbl
sar
or
mov
dec
or
xchg
push
xor
imul
lret
jne
in
push
fwait
incl
lcall
pop
adc
movsl
pop
or
and
js
mov
push
pushf
sahf
and
xchg
xor
adc
xchg
fstl
lds
cmpsb
cmp
pop
xchg
or
aad
cmpsb
xor
jp
jne
testl
outsb
dec
lods
cli
mov
xor
jnp
xlat
aas
and
cmpsb
xchg
test
shll
enter
push
xor
aad
insl
lret
sbb
dec
iret
cwtl
jle
stos
outsb
mov
xchg
call
imul
mov
or
cmpsl
push
aam
loope
xor
ret
add
into
movsl
orb
xor
repz
std
adc
popa
fdivrl
es
push
inc
movsl
gs
rcrb
stos
dec
sbb
add
fwait
aaa
pop
les
aas
je
sbb
frstor
addr16
push
lret
jmp
jp
shlb
mov
inc
lahf
mov
or
pand
add
ss
aad
xlat
or
addl
cmp
cmp
into
mov
shrb
bound
jb
test
out
das
movsl
push
mov
call
in
iret
iret
sub
xor
test
mov
xchg
fimuls
int3
icebp
int3
scas
test
jge
lcall
mov
sub
pop
add
loop
lods
add
lds
and
mov
int
dec
imul
xchg
daa
das
push
push
lcall
cmp
dec
outsl
jg
fdivrs
cs
outsl
mov
test
bound
mov
dec
mov
sarl
movsb
sub
into
xchg
shrb
pop
insl
cmp
fldl
rorb
inc
call
aas
xor
xchg
vshufps
test
ret
sub
into
stc
sub
add
imul
aam
imul
stos
xlat
jl
repnz
jb
lret
shrb
mov
icebp
add
dec
or
orb
pop
adc
and
xchg
and
jne
scas
and
dec
mov
xor
pusha
lret
mov
nop
ficoms
aas
xlat
mov
test
cs
push
test
cmpsl
mov
icebp
add
out
aaa
js
fistps
inc
inc
test
je
mov
mov
and
int3
pop
push
mov
dec
je
xor
cmpsl
int
add
sti
iret
mov
movsl
or
inc
insl
pop
negb
fsts
or
cmp
lret
mov
sbb
lods
push
mov
jl
push
inc
roll
add
push
loop
xor
shrb
repz
add
pop
mov
lss
ja
add
dec
je
fidivrs
pop
mov
fnsave
fstpl
jmp
lret
rcrb
adc
call
mov
mov
cli
leave
outsl
scas
xlat
cmp
in
out
sub
aas
js
fisubl
xor
in
stc
pop
in
test
mov
aas
mov
adc
loop
or
je
cmp
ret
dec
cmp
clc
sahf
iret
xchg
sub
into
jne
and
fwait
xchg
fildll
sub
add
fxch
in
addb
clc
push
test
outsb
pushf
in
mov
inc
cmp
xchg
fstpl
push
fdivl
mov
sbb
iret
cmp
add
cmpsl
adc
xor
fldenv
lods
cmp
add
mov
loopne
dec
jg
mov
hlt
stc
push
pop
xor
xor
nop
imul
scas
and
mov
in
lret
and
cmp
push
mov
shrl
xchg
imul
outsl
mov
jecxz
xchg
lock
cmp
jle
mov
mov
lret
test
mov
inc
stos
mov
movsb
mov
fldlg2
enter
lret
ret
and
xor
cwtl
or
idiv
xchg
push
xchg
movsl
mov
fldln2
orb
shrb
lock
out
and
aas
mov
pop
movsb
rorb
shr
loope
mov
adc
jno
sub
sub
push
inc
in
xor
adcb
imul
mov
adc
jmp
cmp
cli
sub
push
frstor
mov
xchg
lock
dec
shl
pop
jge
stc
int3
jmp
outsl
or
sub
int3
ja
and
mov
sub
lock
mov
stc
adc
xorb
lea
fbstp
lret
notl
inc
shrb
mov
mov
test
das
ss
scas
fists
adc
nop
bound
dec
in
mov
xchg
int
push
xchg
loope
and
stos
push
clc
rcll
rclb
jno
movsl
xchg
call
cmp
sar
or
jp
test
pop
jg
inc
pusha
and
mov
ja
in
cmpsl
movb
jg
imul
gs
jmp
adc
aas
pop
add
xchg
adc
cmpb
in
sbbl
arpl
ret
gs
testb
add
call
adc
imul
jne
shrl
ss
xor
in
pop
add
loopne
push
das
jno
stos
sub
xchg
shr
dec
xchg
push
shlb
jl
sbb
rol
cmp
and
cmp
enter
ds
jl
leave
faddp
movl
mov
sub
xor
pop
push
add
jbe
pop
sbb
xchg
pop
repnz
pop
sbb
sbb
adc
jno
xchg
xchg
js
into
rol
sahf
cli
dec
jo
sar
cltd
int3
testb
dec
mov
sbb
pop
movsl
ja
jbe
lds
and
mov
xchg
mov
jnp
push
arpl
mov
add
push
or
call
push
aad
jl
pop
ret
pop
pop
dec
loopne
or
aaa
push
xor
mov
sbb
sbb
dec
rclb
fcom
lea
adc
xchg
in
test
sub
sbb
std
leave
cmp
sbb
sarb
int
fcmovu
dec
jb
push
cmp
sub
mov
fsubs
imul
xchg
mov
fucom
fcmove
test
cmp
lret
mov
mov
adc
push
mov
sub
xchg
mov
cmpsb
imul
add
mov
movsl
ja
cwtl
int3
std
arpl
icebp
int3
mov
mov
fucomp
mov
sub
adc
inc
push
add
push
jl
jb
jl
jge
add
push
add
lret
add
mov
test
dec
daa
inc
popf
outsb
lods
repnz
or
jl
in
adc
pop
push
lock
cmpsb
data16
xchg
out
xchg
push
cwtl
pop
or
sub
lds
sar
mov
test
pop
and
rorb
jns
or
xchg
popf
dec
and
das
cmc
fldcw
jbe
adc
adc
cltd
cmp
add
shrl
xor
sub
sub
pop
shrb
pop
cld
push
mov
rol
lahf
mov
and
pushf
enter
mov
cli
shl
in
xchg
mov
popa
jge
pop
or
mov
cmp
add
neg
sbb
or
loopne
add
push
adc
lret
lods
xchg
or
out
and
mov
xchg
and
pop
push
lret
inc
ss
mov
add
xlat
js
mov
imul
add
inc
mov
outsb
cmp
pop
add
lock
testb
sbb
jb
inc
sarb
cwtl
test
inc
or
xlat
loop
jb
js
sub
shrb
inc
jl
insb
pushf
push
cmp
and
sub
loope
test
pop
ud2
rcl
addr16
enter
addb
enter
xor
aas
mov
aaa
add
addr16
dec
mov
xchg
arpl
aad
or
imul
lcall
mov
fldcw
push
sub
aaa
shrb
add
adc
int
push
push
imul
jb
cld
inc
xchg
sarl
cli
push
iret
clc
mov
imul
cmp
xchg
int3
outsl
pop
ror
lret
in
jo
sub
push
int
movsl
adc
cli
sbb
inc
js
xorb
or
jae
mov
adc
ss
xchg
push
ret
xlat
push
add
sbb
add
ss
mov
or
dec
out
jbe
push
mov
or
aad
lret
xor
repnz
imul
mov
push
cli
lds
mov
xor
mov
lret
imull
jmp
ret
jge
sahf
jo
inc
int3
mov
pop
add
push
or
xchg
push
pop
nop
xor
popl
cmp
incl
mov
or
aaa
out
cmpsb
push
in
scas
add
dec
imul
xchg
push
xchg
rcl
test
jnp
adcl
into
aaa
jle
sub
ja
push
int3
lds
popl
mov
movsb
orb
push
mov
loop
lods
jnp
mov
jle
jl
loopne
xlat
call
dec
fsubs
sub
cmpsl
inc
stos
test
adc
adc
cli
jg
bound
mov
repnz
pop
fwait
add
bound
pause
lret
dec
js
sbb
pop
cmpsl
sbb
inc
mov
out
rolb
add
loopne
imul
or
xlat
dec
mov
mov
jl
cmpsl
shll
mov
sbb
xor
popa
aaa
mov
push
movsl
fcomps
pop
xor
int3
inc
fildll
js
cmpsl
push
mov
cmp
or
xchg
or
dec
dec
mov
xchg
dec
insb
int3
sub
xor
test
rcrw
jne
pop
lods
inc
inc
ds
mov
ss
mov
fcoml
jle
iret
out
push
pusha
loopne
and
dec
mov
sbb
sahf
push
ss
cmp
mov
outsl
outsl
jae
fdivr
fwait
mov
movsl
rcr
call
xor
dec
dec
pop
outsb
out
jmp
imul
ljmp
imul
jle,pt
dec
stc
f2xm1
popa
fimull
insb
push
pusha
ret
loope
cli
jne
cmpsl
mov
insb
test
subb
sub
cld
dec
adc
stos
lods
das
ror
push
jp
adc
xor
bound
and
inc
sarl
sbb
push
sub
jne
sub
jbe
stc
or
lds
jp
mov
pop
shrl
and
jmp
jg
clc
jle
xchg
imul
subl
popa
push
dec
fwait
imul
lcall
mull
and
sub
arpl
bound
in
jmp
ficoms
pop
fs
lret
std
lods
cwtl
call
sbb
pop
xor
stos
mov
mov
mov
adc
adc
stos
xchg
lods
mov
mov
les
icebp
mov
push
out
rcrl
fsubrs
loopne
cmp
lcall
push
mov
fcmovbe
imul
sub
rorl
test
pop
cmpsl
jle
cmp
or
mov
fisubs
arpl
pop
and
int
or
dec
lods
or
rcrl
or
inc
aad
test
or
daa
andb
std
jb
mov
push
ds
push
ret
push
add
test
mov
mov
pop
xchg
lds
cmpsb
arpl
jae
inc
imul
cwtl
fistps
fidivs
mov
inc
inc
push
cli
adc
add
xor
call
cs
jge
inc
std
push
punpckhbw
aas
xor
pop
mov
push
std
dec
out
add
sbb
rcll
sbb
push
xor
lods
cld
or
fildll
outsb
mov
shll
mov
xchg
aam
les
cmp
insb
xlat
ret
inc
mov
cmp
mov
jecxz
ficompl
scas
and
aad
scas
jecxz
ret
add
dec
push
mov
push
push
arpl
icebp
inc
test
jne
imul
adc
inc
leave
jecxz
arpl
aam
mov
mov
icebp
mov
or
loopne
adc
in
rcrl
stc
cwtl
test
repz
add
or
adc
and
rcrb
leave
dec
inc
cmp
cltd
sbb
xorb
mov
shl
pop
stos
jmp
ret
jnp
mov
les
add
or
mov
lret
and
enter
loopne
je
arpl
fwait
push
sub
out
push
lret
sub
movsl
sbb
adc
or
scas
test
push
adc
and
add
pop
lret
fisubrs
mov
and
pusha
aas
xor
mov
pop
pop
mov
xchg
sub
adc
dec
cmp
sub
xchg
push
push
adc
and
add
mov
sub
and
imul
adc
mov
aas
mov
cld
adc
jne
out
xchg
enter
call
les
inc
mov
stos
pop
cmp
aam
dec
sub
push
jno
mov
mov
push
fidivrl
leave
mov
push
outsl
in
lds
imul
lcall
dec
lret
xor
ljmp
fiadds
divb
or
dec
jne
mov
inc
jnp
clc
test
inc
push
lods
add
mov
inc
cmp
push
sahf
aam
pushf
lods
mov
push
cld
or
jmp
cmpsb
dec
test
in
sub
in
mov
sbb
std
imul
jg
lret
hlt
lret
imul
ret
ljmp
pushf
scas
fmull
enter
pop
decb
pop
xchg
inc
mov
scas
xor
xlat
push
mov
scas
and
pop
cmp
fadd
mov
mov
pop
mov
popl
sbb
mov
lcall
pop
push
ret
push
cmpsl
rcr
push
push
cmp
scas
arpl
sbb
push
sub
lea
jl
lret
xchg
test
adc
imul
fstpt
sahf
pop
dec
sub
inc
sahf
push
fisubl
imul
xor
shrb
pop
add
push
and
inc
sub
out
stos
cs
xchg
push
jp
test
das
into
jge
mov
pop
cmpsl
ljmp
insb
xor
or
jnp
cmpsb
xchg
mov
shr
pop
out
adcb
or
rol
sub
add
mov
or
push
clc
xchg
mov
inc
dec
int3
jmp
test
or
dec
xchg
fistpll
cmpsl
and
xchg
or
and
jne
add
popf
pop
mov
sarl
cmc
icebp
xchg
rcrl
sbb
jbe
ss
mov
xlat
leave
adc
lcall
shrb
popf
sub
shl
repnz
aad
sub
pop
jg
adc
in
test
lods
popf
lret
enter
cmp
sbb
cltd
pop
cmp
mov
repnz
mov
fstl
inc
shrl
add
enter
push
sti
mov
xchg
aas
fwait
add
cltd
lahf
mov
adc
imul
loop
xlat
icebp
pop
insb
sti
sbb
insb
enter
cmp
cmp
pop
add
mov
jns
mov
lds
sub
scas
insb
rorb
clc
es
push
fstpl
lods
cli
out
mov
out
and
scas
imul
adc
and
mov
aas
or
xchg
xchg
inc
incb
xlat
loopne
mov
into
imul
popf
cmp
mov
jns
clc
and
movsb
insb
dec
fidivrl
dec
jno
scas
or
aas
movsl
pop
dec
or
das
dec
dec
in
test
mov
rolb
vunpcklps
mov
rorl
push
pop
xchg
or
xor
rorl
in
scas
jbe
pushf
adc
fs
pop
mov
inc
adc
mov
int
rolb
fldt
cwtl
push
jl
adc
dec
cmp
orb
or
out
pop
cwtl
aad
jg
mov
icebp
or
stos
xchg
xlat
call
jns
add
fsubrl
cmpsl
sbb
loopw
add
imul
lds
cmp
dec
arpl
stos
or
adc
frstor
mov
xchg
jecxz
test
lcall
test
movsl
mov
mov
movsl
jmp
sub
fisubs
push
loopne
or
pop
nop
mov
xor
jp
les
and
push
xor
mov
in
aad
mov
xor
aam
sbb
sbb
push
fdivrs
lods
push
pop
fbld
rcl
stos
inc
sbb
imul
xor
bound
jle
scas
in
cmp
mov
orl
fucomi
outsl
jne
jp
fldl
sbb
movsl
loopne
mov
jmp
mov
mov
pop
cmpsl
or
adcb
rcrb
movsl
xchg
and
xchg
daa
nop
and
lods
rorb
and
mov
jg
imul
lods
iret
push
cmp
orb
sub
fcmovb
roll
addr16
xchg
sti
inc
addb
imul
loopne
es
and
inc
push
outsl
loope
push
leave
cmpsl
cltd
fadds
fistl
imul
imul
or
cmp
mov
mov
or
shll
add
insb
das
and
cltd
mov
arpl
mov
inc
loope
mov
xchg
xlat
mov
hlt
mov
xor
mov
rorl
rcll
sbb
out
mov
pop
cmp
cmp
cmp
sbbl
imul
xchg
sbb
lahf
sub
push
or
out
adc
mov
rcrl
mov
stos
popf
sar
or
pop
out
adcb
jle
lret
aad
fildl
ljmp
mov
nop
add
cmpsl
xor
sbb
mov
and
inc
xor
jae
in
mov
cs
leave
jb
data16
dec
inc
fwait
jmp
lods
arpl
pop
xor
jl
cmpsl
repz
dec
movq
movsl
imul
cmp
rorb
or
shlb
cmpsl
test
hlt
lcall
les
sub
fldt
jnp
out
mov
aas
mov
call
icebp
or
in
shll
stos
dec
shrl
pop
cmp
imul
or
push
cmpl
cmp
rclb
mov
leave
stos
dec
lret
ljmp
ja
out
push
movsl
pop
sarb
mov
pusha
pop
lahf
adc
scas
xlat
jne
add
pushf
aad
mov
pop
pop
push
xchg
imul
and
push
outsl
std
jbe
sub
jo
fildl
sbb
out
jnp
leave
mov
mov
in
mov
xchg
pop
xor
inc
push
dec
negl
movsl
mov
divb
hlt
dec
pop
or
sbbl
in
lds
loopne
sbb
push
mov
mov
movsl
mov
mov
xchg
call
or
ja
xlat
cmp
data16
jb
adc
push
mov
aaa
addr16
lock
add
jnp
ljmp
or
xchg
fwait
sub
dec
inc
imul
enter
xor
cmp
arpl
or
mov
mov
lcall
or
adc
inc
cwtl
lcall
iret
fisubrl
mov
and
ja
sub
fsubrl
or
inc
or
jle
in
pop
cmp
rolb
or
pop
push
xchg
mov
andl
fisubl
into
xchg
shrb
fs
nop
and
leave
pop
aas
lods
ja
or
dec
jecxz
lea
mov
cli
mov
xchg
mov
movsl
and
mov
adc
iret
mov
addl
out
mov
lcall
movsl
sbb
and
imul
addr16
push
imul
mov
push
pop
out
ds
mov
xor
dec
sbb
cmp
lret
jbe
aad
cmp
mov
push
xchg
rcrl
imul
in
mov
lret
in
mov
cmp
dec
leave
lcall
push
cltd
mov
cmpsb
mov
bound
jp
fimull
clc
out
imul
jl
push
mov
imul
in
push
imul
mov
pop
or
pop
push
fnsave
fidivrs
imul
aam
sbb
sbb
jae
dec
rcr
push
sahf
into
jle
cli
push
adc
sub
and
lret
inc
lret
jle
sbb
lret
iret
mov
inc
xchg
ljmp
insl
insl
push
push
adc
in
outsl
loopne
lods
imul
xchg
insb
and
xchg
sub
call
adc
sub
out
add
fadds
pop
movsb
aad
cmpsl
testl
inc
movsl
aad
add
movsl
push
push
jns
cld
xchg
aas
fwait
mov
mov
or
into
fisubrs
clc
mov
sbbb
repz
rcrl
out
jmp
cmp
jmp
das
daa
dec
mov
outsl
sub
fisubrs
push
jmp
mov
sub
popa
or
lahf
imul
enter
mov
in
adc
out
fucomip
cmpsl
push
in
or
pop
cs
xchg
and
stc
daa
sahf
cwtl
iret
push
adcl
lods
sub
jge
xchg
adc
vmovaps
push
sub
mov
stos
data16
jle
and
loop
add
push
insl
pusha
mov
sub
or
jg
or
xor
mov
inc
dec
rorb
stc
into
mov
and
cmp
dec
sub
fs
sbb
ja
mov
jge
orl
push
mov
ljmp
sub
mov
fldenv
mov
push
mov
lret
xchg
js
sbb
dec
adc
stos
fwait
sbb
cmp
loope
sub
xlat
hlt
ds
lea
mov
repnz
inc
aam
add
push
mov
adc
sbb
insl
add
loopne
mov
jnp
adc
cmp
movsb
loop
cmp
imul
lds
and
hlt
mov
pop
mov
shlb
dec
cltd
fstps
stos
test
mov
lock
dec
dec
jle
fisubrs
add
adc
enter
popa
jle
roll
sbb
cmc
test
orb
push
mov
xor
aaa
dec
sub
mov
add
bound
pminsw
adcl
pop
shlb
jo
or
pop
fidivl
adc
xchg
in
aas
lea
mov
jno
jb
aas
jno
or
or
adc
jae
stos
push
cmp
sub
cld
add
push
mov
dec
std
test
insl
cmp
dec
scas
push
fs
add
mov
pop
sub
add
in
sub
fsub
ss
rcl
mov
xchg
mov
pusha
dec
push
lret
jb
add
cmc
icebp
fmull
adc
loop
mov
jnp
scas
lods
push
cmp
aas
pop
jmp
jb
mov
or
jno
jo
jle
xchg
pop
aam
stos
nop
daa
inc
lret
test
cmpsl
lahf
movsl
rorb
cmp
je
jmp
loope
mov
push
mov
sub
cli
xchg
cmp
and
add
jg
ror
cmp
ret
mov
or
pop
sub
jge
xor
cmpsb
cltd
push
inc
or
out
cld
int3
push
mov
ror
addl
xchg
xor
dec
ds
inc
push
push
lds
push
mov
pop
push
rorb
jl
lret
pop
sbb
ljmp
arpl
adc
inc
mov
jge
loop
mov
out
cmp
loopne
mov
lcall
rol
push
push
les
mov
add
jp
add
enter
push
punpckhwd
sbb
scas
rolb
ja
push
add
xchg
shl
incl
rolb
cmpsb
add
mov
jge
dec
fiadds
cmp
pop
js
xchg
ljmp
cmp
into
sub
push
inc
nop
in
movsl
sub
mov
push
jl
xor
xlat
lock
cli
or
xor
aas
rcll
sub
jb
jno
fidivrs
add
int
or
jl
aas
mov
ss
jne
stc
rcll
dec
adc
iret
push
cmp
inc
sbb
sub
inc
movsl
out
loope
lcall
loopne
icebp
mov
movsl
pop
in
jbe
imul
cmp
sti
mov
mov
pop
inc
les
cmp
and
jp
xor
roll
daa
das
int
test
sahf
cmp
sub
xchg
push
jnp
imul
mov
sbb
scas
sbb
cmp
add
and
inc
cltd
fisttpll
outsb
or
add
xchg
mov
dec
add
xlat
int
fdivrl
mov
sbb
roll
sar
int3
movsb
pushf
repz
dec
jb
mov
inc
jne
imul
nop
out
inc
aad
enter
inc
pop
fwait
jae
cli
sub
mov
iret
and
jl
pop
sbb
imul
sub
ss
add
imul
push
sub
movsl
lcall
mov
push
sub
inc
imul
ja
xor
push
test
pop
stos
xchg
rcrb
adc
call
push
xchg
cmpsl
jl
scas
xor
push
hlt
punpckldq
adc
into
test
call
rcll
sub
gs
fiaddl
jnp
or
ljmp
lcall
pop
imul
or
lret
sbb
aaa
int3
xor
call
in
jle
sbb
cltd
test
sub
mov
imul
mov
cmp
add
pusha
aam
cmp
adc
sahf
ljmp
sub
xor
adc
mov
push
lretw
int
insl
lret
mov
inc
cmp
test
add
xor
add
fstl
mov
test
lds
or
fisubs
xlat
jmp
mov
bound
jmp
mov
nop
mov
xchg
lahf
shl
ret
xor
sti
xor
sbb
add
fs
fstps
out
lret
sti
imul
mov
lahf
pop
cmpsl
and
aad
pop
xor
sar
inc
xor
jns
push
imul
shr
jg
test
sbb
loopne
scas
xor
fs
into
adc
ds
mov
popa
mov
pop
outsb
inc
xchg
cmp
ret
add
imul
test
jg
mov
popf
cmc
je
ficompl
push
test
into
push
pop
xor
cmp
bound
xor
dec
pop
push
or
insb
scas
addr16
fstps
movsl
lret
clc
scas
lret
adc
enter
sbb
sahf
mov
push
outsl
hlt
test
lret
sbb
pop
mov
insb
dec
mov
cmp
pop
test
jle
inc
icebp
add
aas
jl
jmp
push
mov
loopne
dec
or
cltd
leave
or
lret
out
adc
imul
mov
mov
into
fs
das
or
inc
into
inc
adc
add
xor
adc
gs
scas
imul
xrelease
sbbl
in
xor
mov
adc
leave
dec
pop
add
fsubrs
cltd
jle
pusha
jnp
cmpsl
aad
nop
push
jne
add
fs
movsb
ds
inc
xor
sub
ficoml
jns
or
mov
mov
mov
dec
mov
bnd
lods
jb
add
dec
jl
imul
les
or
call
jo
mov
inc
call
stc
pop
ss
add
out
xor
imulb
movsl
inc
jg
inc
loop,pn
lcall
mov
call
cmp
mov
aas
xlat
movsb
ss
jge
pop
test
or
sbb
sarb
or
inc
fdivs
push
cmp
dec
lret
rclb
movsb
push
stos
popa
test
lret
inc
push
adc
stos
imul
mov
push
cmp
rorl
aad
das
sbb
leave
dec
repz
aas
push
sbbb
inc
lahf
fwait
cli
mov
cwtl
out
insb
dec
sbb
imul
jb
loop
les
cmp
xchg
mov
jo
push
imul
jle
aad
pop
xchg
insl
cmpsl
jle
pop
jb
xchg
mov
jmp
out
shl
inc
ret
xor
iret
pop
dec
adc
mov
cs
push
js
pushf
lods
test
cmpsl
out
orl
mov
subb
call
fisubrl
iret
aaa
add
out
adc
mov
outsl
cmp
adc
inc
or
mov
push
xchg
adc
push
or
xchg
dec
lcall
cld
add
dec
aad
xchg
jns
int
icebp
enter
sbb
std
hlt
aad
repnz
stc
test
push
fldcw
sbb
dec
loopne
mul
int3
dec
ja
push
cli
xor
sahf
push
sarl
jmp
and
imul
xlat
fdivrl
mov
cwtl
adc
shlb
loope
arpl
jo
and
cmpsb
inc
mov
pop
push
aad
cmpsb
inc
mov
cmp
imul
shl
out
inc
cmp
roll
cmpsb
lods
mov
std
fs
scas
loopne
dec
xchg
and
repz
and
xor
mov
mov
and
scas
shrl
inc
and
xchg
pop
in
shlb
or
jb
sub
fcomp
jo
je
lret
mov
mov
stos
xlat
pop
gs
or
pop
ljmp
negl
add
mov
jbe
jne
jno
fidivs
and
lahf
test
rcrb
jae
out
inc
xor
dec
mov
repnz
push
xchg
stos
jle
js
fisubs
sub
jle
pop
pushf
out
cmp
xor
mov
inc
lret
xchg
jno
imul
arpl
xor
push
faddl
lds
test
dec
jns
cmc
fs
shl
jge
dec
imul
inc
pop
enter
xor
call
icebp
pop
inc
outsl
and
into
xchg
cs
push
lret
jnp
xor
mov
aam
cmp
jb
sbb
push
int3
mov
test
es
adc
lret
sub
inc
in
mov
push
js
or
sahf
lods
xchg
sbb
filds
sub
add
jbe
jns
aas
pop
xor
fistpl
cmp
ficomps
sub
and
aam
adc
xchg
stos
rcr
jbe
or
push
push
mov
ss
movsl
mov
push
mov
adc
aad
mov
sub
sarb
mov
ljmp
pop
test
mov
and
mov
and
jmp
dec
xchg
xor
vmovdqa
lods
cwtl
jl
fstpl
or
sub
lods
movsb
jp
hlt
mov
xchg
cmpsb
pop
xchg
jp
lods
int3
mov
lods
xor
or
imul
cmp
pop
cwtl
mov
push
mov
sub
mov
push
add
pop
mov
clc
js
scas
insb
push
add
shrb
fwait
pusha
daa
pop
adc
aam
push
xchg
ds
decl
jnp
call
lret
adc
push
out
pop
lods
mov
imul
cmp
mov
or
add
popa
idivl
mov
cwtl
xchg
push
jns
cmp
mov
sbb
sbb
inc
mov
push
or
adc
rcrb
mov
xor
imul
dec
adc
lahf
or
or
daa
nop
jae
and
scas
hlt
fsubrl
xor
mov
sbb
jmp
test
jne
sbb
sbb
sbb
xor
add
decl
xchg
fstpt
push
or
and
pop
mov
imul
mov
mov
shl
mov
jg
mov
cs
xchg
push
adc
insb
xchg
cmpsb
mov
and
add
shrb
xchg
pop
add
push
enter
fucomp
mov
gs
test
enter
cmp
pop
cmp
out
push
scas
fisttpl
pop
mov
imul
jg
add
sub
sub
int3
pop
push
xchg
aaa
dec
mov
fs
adc
lods
mov
cld
or
je
sub
add
sub
xchg
jge
mov
test
cli
enter
cmp
pusha
call
dec
les
rcr
movsl
mov
jle
mov
add
jp
mov
pushf
loope
pop
jp
lods
lods
hlt
add
call
jle
loopne
push
sbb
movsl
and
enter
xchg
stc
jle
icebp
pop
xor
jne
ja
call
fdivrs
mov
mul
or
cmp
mov
adc
mov
jecxz
negb
loope
sub
jmp
push
cmp
sbb
mov
lret
mov
push
cmc
insb
sbb
bound
mov
pushf
sub
outsl
dec
add
out
mov
push
dec
add
aad
pop
pop
test
rclb
call
cmpsl
xor
mull
stos
outsl
lds
and
push
arpl
add
iret
add
fdivrs
and
fildll
cmp
adc
xchg
sub
les
xchg
pop
hlt
dec
ret
pop
jae
or
sbb
rcl
pop
fcoml
mov
sub
rcl
es
pushf
cmp
paddd
cltd
pop
mov
adc
mov
and
push
adc
dec
lds
into
cmp
pop
aad
fsubs
add
addl
and
push
daa
inc
nop
sbb
cmp
cmpsb
mov
in
rcrl
or
loop
lret
xchg
loopne
mov
lret
mov
push
dec
push
aam
iret
inc
jo
imul
pop
mov
xor
sub
push
jae
or
fcomi
cld
add
mov
and
cmpsl
push
inc
cmp
xor
sbb
jl
call
jecxz
sub
stos
popl
notl
mov
sub
leave
xchg
lcall
cmc
jns
jl
add
push
jp
mov
jg
or
loop
test
and
mov
mov
sbb
add
inc
fbstp
rcrl
imul
mov
call
xchg
repnz
xor
or
je
push
jnp
bound
mov
out
or
int3
lret
xor
pop
pop
lret
and
lahf
mov
sahf
jmp
or
dec
or
loopne
ss
js
aaa
imul
or
pushf
mov
into
push
aaa
loope
xchg
stc
xchg
lret
jp
cli
add
inc
push
push
movsb
mov
pushf
mov
xorl
sbb
mov
mov
fdiv
data16
fdivl
shl
mov
pop
and
aaa
leave
xchg
fstl
mov
cld
fcmovbe
ds
push
aad
xchg
inc
call
jge
in
bound
mov
xor
xchg
scas
cmp
jns
cmpl
mov
push
les
adc
lods
or
xchg
gs
sbb
ror
fidivl
fucompp
test
pop
clc
ja
push
pop
push
jb
enter
fisubl
fists
and
lret
test
subl
jo
loop
jae
jmp
mov
sub
inc
shlb
gs
cmpsl
xchg
popl
xchg
iret
and
xor
mov
scas
movsb
sbbb
mov
imul
add
jns
inc
cmp
cmp
or
sub
icebp
dec
and
mov
jge
sub
sarl
in
mov
imul
add
icebp
out
dec
in
repz
dec
aas
sarb
fidivl
mov
lods
fnstsw
push
mov
add
mov
loope
sub
mov
mov
sub
lods
push
xchg
sub
sub
ds
ljmp
test
scas
sub
sub
add
push
outsb
cmc
aam
jne
rclb
dec
rol
jmp
cmp
outsl
mov
leave
out
ret
or
or
data16
js
pop
pop
scas
ret
addr16
xor
js
add
imul
inc
ret
arpl
mov
scas
mov
pop
xlat
mov
scas
or
xchg
adc
push
mov
aad
icebp
les
or
bound
cmp
sbb
rcr
inc
mov
mov
jo
and
add
xor
ja
je
outsb
out
mov
sbb
imul
jne
jbe
movsl
std
inc
sahf
cltd
ss
mov
ds
cmpsl
repz
xorb
call
lret
lcall
jl
mov
ds
mov
push
cmp
lret
dec
pop
adc
xchg
jo
in
push
mov
jle
mov
xchg
jbe
push
cmc
shlb
adc
sbb
jp
jae
inc
push
ja
and
jle
push
sbb
mov
jmp
das
data16
mov
insl
sub
test
mov
mov
imul
dec
loope
shlb
cmpsl
cmpl
jnp
cs
outsb
or
lock
adc
cwtl
aas
out
cmp
push
push
loop
mov
shll
jle
subl
or
call
ja
mov
andb
push
add
outsb
push
outsl
leave
shl
std
cltd
adc
inc
and
test
dec
loopne
mov
adc
cwtl
add
int3
xchg
repz
cltd
xlat
stos
add
cmp
lods
xorl
lret
or
jb
scas
mov
mov
movsl
aam
bound
lret
xor
dec
cwtl
pop
mov
push
sbb
inc
call
mov
test
mov
imul
jge
push
xchg
or
dec
fnstcw
stc
je
push
mov
xchg
jecxz
dec
inc
negb
jmp
aas
fs
test
pop
sub
iret
arpl
cwtl
in
loope
jo
adc
rcrl
mov
lcall
mulb
sub
mov
or
into
mov
shll
or
fildl
mov
adc
xor
adc
cwtl
fldt
pop
push
lock
popf
adc
mov
push
pop
mov
notl
jmp
xor
daa
adc
inc
mov
push
dec
addl
aaa
shrl
lret
repnz
rcrl
mov
adc
std
inc
pop
pop
mov
adc
mov
push
scas
jl
adc
iret
push
fadds
jae
pop
pop
push
shlb
xchg
push
in
xlat
imull
aad
cmp
push
adc
and
dec
leave
add
cmp
add
in
arpl
sti
fldt
imul
fbld
dec
movsl
pop
adc
shlb
roll
fstpt
add
pop
test
idivl
xor
mov
add
cmp
adc
cmp
push
shl
cld
xchg
xchg
stos
test
inc
lea
inc
test
les
js
mov
and
xchg
push
inc
xor
xchg
or
es
adc
scas
test
mov
inc
jb
lret
stc
out
mov
movsb
icebp
stc
mov
sarb
leave
mull
adc
cmp
repz
sbb
xor
push
fiadds
ja
mov
fadds
xor
and
out
xchg
xchg
mov
cmp
call
hlt
aas
xchg
out
ret
jbe
ret
jmp
mov
iret
jo
pop
aas
mov
cwtl
jg
push
ja
inc
lods
xchg
adc
sub
fwait
and
ds
fnstenv
insb
pushf
clc
sbb
icebp
cmp
aam
rcll
mov
sbb
lahf
push
jg
sbb
into
push
jge
stos
in
addb
repnz
add
fstpl
xchg
lods
jbe
ret
dec
mov
movsl
adc
fcmove
and
popa
test
jg
in
jl
aas
ret
lods
xlat
or
xchg
shl
cli
pop
or
jge
xor
push
jmp
test
out
add
loopne
adc
jbe
incl
push
jle
orb
call
mov
sub
cmp
xor
loop
enter
dec
mov
xlat
lock
mov
rcll
jmp
fldt
push
mov
stc
and
iret
outsl
mov
sbb
cli
mov
hlt
adc
sbb
xchg
or
stos
push
mov
cmpl
je
fisubs
test
dec
xchg
push
into
add
rcrl
aad
or
adc
pop
and
cmc
adc
pop
je
inc
sub
sub
push
stc
push
mov
scas
aam
mov
xor
ffreep
repnz
in
out
xlat
fildl
dec
imul
insl
mov
pop
fcompl
enter
jge
fisubrl
test
push
cs
push
cld
movsl
mov
aaa
xchg
ret
jb
test
data16
push
sub
cmp
sbb
sub
mov
and
mov
pop
mov
addr16
insb
cmp
lcall
xor
popa
and
or
dec
cwtl
sub
pop
dec
push
fs
mov
pop
icebp
test
dec
inc
xchg
pushf
mov
adc
notl
xchg
popf
xor
cmp
icebp
sbb
in
das
mov
jo
test
xor
xchg
rcl
push
imul
ss
call
std
cmpb
lds
xlat
stos
aas
xchg
insb
push
es
lea
imul
je
insb
lahf
or
xchg
test
cmp
sub
hlt
iret
mov
inc
and
js
repnz
dec
mov
sti
call
push
or
mov
shr
xchg
ret
pop
adc
adcb
jbe
pop
add
fisubl
push
sub
mov
push
mov
cmp
cmp
pop
outsb
rclb
pop
aam
mov
cltd
leave
mov
mov
aas
xchg
sarb
addr16
call
adc
jmp
pop
jno
sub
push
add
and
test
adc
outsb
addl
dec
scas
push
shrl
add
aas
fistpll
xchg
sbb
and
leave
ljmp
or
cmp
inc
sub
sarb
pop
xor
ds
imul
dec
lds
xor
loopne
sub
xchg
or
stos
das
bound
rclb
ds
aam
ret
mov
cmp
loopne
push
test
lret
pop
insb
rcll
push
pop
inc
push
xchg
or
pop
loop
or
cmpl
xchg
jns
jnp
jmp
fdivrs
sbb
push
rol
push
push
rcrb
fwait
hlt
xchg
bound
out
sub
cmp
js
je
in
cmpsl
or
int
cli
imul
dec
sbb
cmp
or
sbb
xchg
jo
jb
rclb
call
fcmovbe
jae
fldt
lret
mov
fst
sub
in
adc
aas
cli
fiaddl
sbbl
je
lret
std
fstp
xlat
lret
jne
push
and
sub
xchg
cmp
adc
jg
mov
lret
xchg
sub
sub
mov
call
je
inc
mov
cmp
sahf
lods
push
cmp
sahf
pop
dec
pop
clc
mov
dec
jge
mov
mov
imul
stos
sub
lea
gs
lea
pop
push
testb
jne
xlat
sarb
sbb
xchg
cmp
xor
sub
add
fwait
push
mov
fidivrs
push
lods
mov
pop
cmpsl
pusha
lock
push
movsb
mov
push
stos
sub
xchg
test
cmp
jbe
bound
sub
fldl
mov
lret
dec
shll
in
pop
clc
xor
fchs
add
jns
add
lds
sbb
gs
pushf
push
mov
fistps
add
das
push
jge
cs
add
call
push
mov
cmpsl
sub
jl
rcr
clc
mov
sbb
mov
xchg
lret
mov
and
aaa
pusha
push
out
lret
mov
sub
into
add
nop
popf
pop
adc
addl
call
cmp
jg
push
dec
shr
aam
cmp
in
lcall
scas
fistpll
sar
test
mov
add
fidivrs
idivl
xlat
call
daa
and
lock
outsb
adc
call
push
cmp
inc
cmpsb
mov
sarb
pop
call
ja
or
adcl
call
jnp
push
lds
or
pop
fwait
mov
sarl
inc
ficoms
xor
aas
movsb
lcall
xlat
adc
aaa
jns
mov
divb
jbe
push
mov
mov
xchg
leave
aad
push
mov
lods
push
pushf
and
mov
adc
das
nop
sub
push
outsb
pusha
or
movsl
cmp
fadds
sbb
faddl
jp
les
fnstsw
ja
mov
call
dec
and
push
add
cmpsb
pop
and
jmp
test
je
or
jp
sahf
out
test
add
ror
push
push
adc
mov
mov
lret
stos
jl
add
adc
rol
sbb
and
ja
data16
ret
iret
lods
push
shll
imul
insb
jbe
xchg
popf
push
jp
pop
int3
jmp
and
aas
nop
ds
xchg
inc
pop
shlb
pop
jecxz
scas
jl
inc
ds
inc
inc
push
cmc
lea
aas
or
push
lods
cmp
mov
mov
les
sarb
mov
adc
pusha
and
inc
pop
pop
or
outsb
mov
ret
ffree
enter
fcomps
mov
xlat
sub
push
mov
dec
dec
addr16
mov
out
imul
push
xlat
sbb
push
lret
jg
aad
enter
loopne
mov
lea
into
adc
jle
mov
jmp
dec
je
xchg
xor
xor
or
mov
xchg
xor
test
adc
fildll
jno
mov
inc
nop
incl
adc
fnstcw
test
jecxz
or
pop
inc
sbb
das
ret
mov
inc
rcr
sti
jle
aaa
dec
pop
cli
movsb
fisubrs
sti
loopne
sarl
cwtl
xchg
xor
or
in
xchg
pop
inc
mov
push
stc
in
sahf
xchg
repnz
sbb
imul
push
xchg
mov
jle
lock
nop
stos
dec
xchg
rcr
xchg
dec
xor
jnp
mov
loopne
mov
sbb
adc
arpl
cwtl
pusha
daa
test
add
sarb
pop
mov
push
hlt
mov
mov
mov
jb
orb
loop
pop
push
cmp
xor
call
mov
jmp
sbb
imul
scas
mov
andb
push
stos
pop
fdivrs
cld
jo
je
leave
std
adc
lret
dec
push
ret
jge
or
lret
imul
mov
fsub
add
cmp
mov
les
imul
xchg
push
adc
mov
dec
cmc
subb
inc
pop
ficomps
cmp
stos
or
loopne
cmc
adc
fdivl
push
aam
ss
out
fs
push
push
mov
pop
sbb
lret
pop
sub
adc
push
xchg
stos
jge
dec
imul
call
repz
cwtl
and
icebp
push
loopne
call
xor
jp
mov
inc
call
scas
push
jns
movsl
add
push
shrl
lea
icebp
das
or
jl
xchg
jo
mov
addr16
push
hlt
xor
sub
movsl
std
and
inc
push
pop
mov
pop
aam
pop
arpl
ja
pop
push
stos
fdivs
cmp
fiadds
pushf
push
lds
aad
cvtdq2ps
add
sub
add
adc
mov
in
lret
jle
ret
dec
pop
inc
scas
mov
aam
inc
cmp
adc
mov
sarb
add
das
lret
jnp
stos
iret
or
lods
aas
clc
subl
pushf
test
mov
mov
popa
mov
xchg
mov
imul
ds
sti
add
xchg
pop
inc
mov
sbb
nop
mov
lcall
xor
inc
pop
push
subl
cmpsl
mov
aad
cld
fbld
sti
cmp
mov
mov
je
loopne
inc
adc
and
leave
pusha
in
mov
mov
pop
fbld
out
out
jae
rcr
xor
addl
sub
and
inc
add
fistpll
or
xlat
adc
out
stos
cmp
push
iret
rclb
and
xchg
or
add
lret
push
push
push
fldl
push
or
aaa
jmp
pop
adc
mov
pop
push
leave
push
adc
mov
loopne
loop
addb
or
adc
push
in
or
mov
pop
aam
add
xrelease
or
mov
jp
icebp
jnp
cmp
mov
cmp
aas
pop
push
adc
add
and
mov
std
movsl
pop
aad
inc
mov
sub
push
int3
mov
orl
mov
js
or
cli
mov
xor
leave
inc
sub
and
mov
rclb
mov
js
aad
ds
ffreep
orb
push
sbb
iret
lods
jg
dec
ds
adc
mov
xchg
jg
mov
int
scas
adc
mov
cmpb
or
mov
or
imul
sbb
fcomps
cmp
int3
and
enter
fiadds
shlb
adc
pop
push
movsb
sti
push
xchg
idivb
sbb
push
xchg
push
test
iret
repnz
add
xchg
xchg
sub
aam
loopne
push
cmp
fs
sbb
dec
xchg
and
out
xor
sti
cmp
xor
into
out
imul
ds
xor
mov
mov
xchg
ja
test
insb
push
add
test
fcomps
fmul
xchg
mov
fisttps
lcall
push
enter
ficompl
negl
sbb
dec
lretw
stos
neg
xchg
lcall
jle
out
sbb
push
and
inc
orb
or
lahf
ja
jb
imul
lods
xchg
stos
xor
cmovo
aam
call
aaa
mov
std
scas
xchg
inc
xchg
mov
inc
out
and
jb
mov
loop
dec
leave
gs
jns
out
jl
push
imul
pushf
jns
mov
repnz
mov
outsb
scas
imul
and
adc
xorl
mov
gs
sbb
cmpb
scas
mov
dec
mov
sti
in
mov
mov
gs
jnp
cmp
add
mov
cwtl
push
lock
mov
xchg
push
jecxz
xor
aam
add
mov
gs
push
mov
mov
jmp
or
cli
xchg
bnd
das
xchg
jmp
adc
fistpll
xor
stos
and
mov
cmp
push
mov
rcrb
add
jbe
iret
in
imul
or
shll
pushf
stos
xchg
cwtl
jnp
fimuls
mov
sahf
pop
lea
cmpsl
dec
test
xchg
repz
cmp
std
add
mov
cmp
test
in
int
mov
stos
sub
xchg
mov
scas
mov
mov
imul
cmpxchg
sub
adc
lods
test
xchg
push
ror
fisubrs
sub
push
aas
xchg
inc
cld
fidivl
push
addb
or
dec
fimuls
ret
lea
in
xchg
and
or
aaa
in
nop
dec
loopne
test
nop
pop
xlat
xorl
xchg
enter
xchg
jp
dec
jnp
cs
cmp
sbb
mov
rcl
loopne
adc
xlat
mov
adc
dec
cmpsb
lret
pop
imul
jno
cli
mov
xchg
stos
das
push
test
or
or
imul
add
sbb
es
add
add
lcall
ret
imul
xchg
std
jo
into
mov
loope
stc
inc
jl
xchg
inc
mov
icebp
ror
mov
push
cmpsb
pop
arpl
das
push
sbb
shrl
or
cmp
lock
das
dec
fs
xchg
sub
push
sub
fwait
mov
mov
movsl
pop
out
or
js
outsl
loopne
mov
imul
mov
or
adc
shrl
mov
or
stos
add
shrb
cmp
inc
mov
and
rcr
icebp
lahf
int
incl
cmc
loopne
in
ret
test
fwait
add
call
das
mov
cld
fcmove
sub
jg
imul
push
out
lret
addr16
rcll
mov
rcrl
cmp
in
pop
cwtl
xrelease
in
ds
ss
mov
jp
cli
enter
orb
sbb
lret
mov
or
sub
jmp
jge
subb
lcall
inc
std
cltd
push
adc
cld
push
into
and
jmp
mov
pop
aam
call
enter
js
sub
or
ja
filds
inc
ja
js
xor
mov
sti
cwtl
sbb
mov
xchg
fdivl
xchg
jecxz
enter
pop
pop
mov
inc
loope
push
jle
sbb
or
pop
sti
movsb
dec
push
test
jnp
repnz
sub
mov
shrl
imul
or
push
fcmovnu
icebp
mov
lret
jle
rorl
add
push
cmp
aas
arpl
into
outsb
rol
inc
jp
cwtl
push
lret
dec
mov
xorl
jle
add
daa
or
daa
xchg
mov
cmpb
call
sahf
or
cmpsb
les
dec
inc
jmp
push
fildl
sub
jno
cmp
rcrl
pop
out
jbe
mov
loopne
inc
dec
outsb
bound
fs
push
cmpsb
enter
out
cmpsl
dec
push
fbstp
inc
cld
sbb
sbb
adc
std
dec
ret
popf
sbb
ss
aas
mov
adc
inc
es
add
adc
bound
inc
dec
call
cwtl
push
xchg
scas
jmp
push
into
movsl
jbe
jno
push
xorl
add
js
nop
xor
sub
sub
and
fstl
daa
mov
fs
testl
cmp
fmull
push
xchg
push
jp
inc
mov
adc
sub
xchg
cmp
rol
pop
test
ljmp
inc
sbb
sub
arpl
imul
mov
push
add
ffreep
mov
pop
lahf
sub
jl
xor
adc
dec
mov
nop
call
aas
xchg
pusha
imul
pusha
fs
popf
pop
fistpl
jne
xor
ss
push
lods
shlb
shl
cmp
cmp
mov
sub
imul
rcrb
cmp
adc
nop
rcrb
ret
pop
arpl
mov
mov
sbb
pop
les
mov
rorb
in
mov
movsb
sbb
sar
lods
les
push
sub
test
mov
call
das
xchg
dec
jmp
push
pushf
or
mov
aaa
fdivrs
cli
cmpsl
mov
jns
mov
insl
mov
aad
jge
push
cmp
popl
call
push
dec
or
push
jle,pt
dec
sahf
scas
mov
loopne
movsb
stc
rol
push
cs
cli
enter
push
add
pop
mov
out
rcll
cmpsl
add
out
mov
add
stos
jl
rorl
and
mov
mov
inc
les
lahf
cmpsl
nop
xor
mov
daa
call
js
cmc
fnstsw
ret
sahf
adc
xlat
loopne
stos
lods
pop
hlt
sub
mov
test
jle
cmc
sub
aaa
push
lea
test
aas
fstpt
into
adc
mov
mov
inc
mov
cmpsb
test
sarb
jne
push
fwait
cmp
sarb
xlat
pop
sub
pop
xchg
pop
xchg
sti
call
gs
rcr
stc
pop
or
push
out
ss
rcrl
dec
dec
loopne
pop
idiv
add
cmpsl
sarl
adc
and
push
call
lcall
scas
rcrl
mov
cmpsl
fstpl
fs
mov
pop
jp
add
jno
sub
leave
in
and
lret
hlt
lcall
shl
xchg
imul
movb
and
cmp
sbb
lret
sub
fildll
push
insb
and
add
scas
mov
test
movsb
sbb
out
ret
les
fimull
cmp
jecxz
paddsw
pop
lret
jae
icebp
ja
rcl
cmp
insb
or
jle
scas
push
or
jns
es
mov
xor
jno
ret
lret
dec
dec
cmpsb
loope
fisubrs
xor
pop
sub
push
sub
pop
pushl
fsubs
iret
in
shrb
adc
cmp
mov
jp
leave
cli
xchg
loopne
and
sub
ljmp
scas
shll
push
negb
icebp
adc
subb
xor
cmp
add
in
pusha
aas
cltd
inc
cmp
mov
sbb
sahf
sub
and
mov
shlb
push
xchg
rcr
pop
cs
jle
mov
cmp
pop
aad
inc
icebp
subl
imulb
sub
xor
add
pusha
cmp
repz
divl
xchg
cmpsl
jp
repz
cltd
push
and
xlat
cmpsl
inc
incb
aad
lahf
mov
js
adc
call
shl
test
jno
mov
mov
hlt
lcall
mov
xchg
adc
repnz
add
aas
fsubr
lds
subl
icebp
pop
xchg
int3
jbe
scas
enter
dec
jmp
lods
call
mov
add
cs
or
outsl
inc
push
shr
or
imul
fs
cmpsb
into
mov
xchg
aas
mov
andb
and
fsubr
into
repnz
shrl
je
push
addb
cmp
jl
push
adc
inc
insl
push
mov
cmp
cld
adc
mov
xchg
insb
add
shlb
cmp
and
stos
adc
scas
ss
lods
add
inc
imul
in
insb
cmovae
dec
sbb
inc
gs
test
addl
xor
lret
ds
mov
lock
mov
jl
jmp
fs
mov
xor
into
and
shrd
jle
insl
push
push
cmp
cmp
aad
cmc
sub
loopne
mov
xorb
xchg
daa
iret
ja
sbb
mov
movsl
jno
mov
loopne
nop
rcl
loopne
mov
ror
cmpsl
mov
xlat
cmp
push
sarb
pop
or
or
mov
fcmove
pop
adc
test
jg,pt
mov
jge
jbe
lahf
pop
movsl
lahf
shll
fimull
jnp
adc
int
xchg
pop
leave
mov
xchg
mov
inc
into
imul
mov
shlb
hlt
lret
mov
das
loope
int
dec
jnp
mov
cmp
data16
aad
adc
ljmp
outsl
mov
add
call
out
imul
mov
cmp
lret
mov
mov
and
les
lods
jne
xor
test
mov
push
pop
inc
jecxz
jne
scas
cmp
test
das
pop
scas
jp
inc
push
push
in
pop
push
xchg
push
loop
ja
add
push
imul
fistpll
and
push
lret
push
lret
add
cmpsb
add
mov
adc
inc
jnp
movsb
int3
mov
sub
and
rclb
call
mov
sbb
xlat
ror
and
fnstenv
mov
test
xchg
inc
fcmovnbe
mov
sbb
and
flds
adc
or
clc
icebp
lret
and
xor
out
mov
adc
cmp
cmp
orl
push
push
in
jno
jbe
xor
mov
in
push
xchg
leave
pop
push
cltd
mov
jne
lods
divb
scas
mov
out
xchg
dec
mov
pop
je
dec
add
mov
ret
add
inc
cld
sar
fldenv
scas
nop
cltd
inc
inc
pop
sbb
jp
mov
in
mov
in
jae
test
mov
push
pop
adc
or
adc
cwtl
pop
hlt
push
imul
fsubr
xor
mov
fs
loopne
aad
ret
cwtl
imul
inc
lock
or
fimuls
bound
cs
pop
js
cmp
xchg
inc
dec
mov
mov
ss
pusha
fcompp
add
dec
sbb
ret
adc
jle
sub
fisttps
inc
fdivr
cmc
lret
adc
and
addb
mov
or
pop
jb
into
cmp
pop
shll
sahf
or
jmp
repnz
fisubl
xchg
mov
push
mov
ss
and
push
jecxz
ss
xor
cmpsl
jnp
std
push
clc
popf
xchg
cmp
loopne
sarb
fcmovb
pop
setp
cmp
jge
push
lock
and
xchg
shlb
xchg
cld
in
imul
mov
cmp
xor
adc
mov
aad
repz
jg
jae
jb
push
int
jle
pop
xor
shr
fsubrl
into
mov
cmp
sub
cmp
push
leave
mulb
cmp
sub
cmp
jle
mov
add
mov
leave
pusha
pop
and
js
jge
shrl
scas
sbb
sbb
pop
sbb
ja
cwtl
imul
mov
es
test
std
nop
loopne
lret
cmp
fimuls
stos
je
dec
adc
imul
and
jne
test
fidivrl
jae
inc
adc
movsl
xor
cs
fmuls
loopne
repz
leave
fnstsw
cmp
sub
push
popf
std
fcomi
test
push
xchg
pop
addr16
or
out
shlb
data16
xlat
xor
jo
jmp
idivl
mov
sbb
jmp
cmp
lds
and
xor
and
leave
movsl
cmc
cmp
jno
stos
das
mov
nop
mov
push
jle
sbb
push
add
stos
fdivrl
ljmp
add
add
adc
cmp
mov
data16
inc
cmp
mov
add
bound
pop
jp
xchg
shrl
and
in
add
add
ret
xchg
xchg
imul
adc
sbb
aam
bound
into
jo
xchg
add
xor
loopne
push
sbb
test
arpl
fiaddl
push
push
frstor
cmpsl
call
popf
jnp
call
dec
popa
test
stos
outsl
xchg
lea
mov
outsl
rclb
in
cs
xchg
and
push
add
cmp
lds
je
orl
mov
add
sarb
add
push
ja
and
push
mov
sub
in
test
push
inc
aam
sbb
pop
add
mov
mov
fmulp
push
mov
repnz
pop
sub
aas
jge
and
inc
outsb
fildll
and
xchg
pusha
xchg
mov
das
xor
adc
mov
sbb
mov
lea
iret
jge
add
jo
mov
jo
jno
subb
jge
push
scas
fstl
pop
test
jg
mov
and
ja
clc
xor
addl
mov
xlat
dec
stos
cwtl
push
lret
pop
mov
lahf
dec
jns
test
cltd
pop
jbe
mov
mov
add
cs
mov
push
push
pop
subb
insb
mov
or
fs
lret
xchg
adc
sub
stos
enter
shl
notb
popf
cmp
xchg
dec
and
sub
test
xchg
fildl
or
out
jmp
test
insl
sub
ficoml
jl
pop
inc
sbb
dec
add
inc
cmp
mov
iret
sbb
stc
in
xchg
stos
mov
aam
and
inc
mov
das
push
mov
fists
xchg
aam
cmpsl
jbe
jmp
aad
inc
fadd
mov
call
dec
mov
adc
test
xchg
jg
push
iret
mov
and
xchg
lods
cmp
out
stc
mov
push
loopne
pavgw
xlat
sbb
lock
inc
mov
loope
shl
test
sarl
scas
adc
xor
push
cmp
out
cwtl
test
imul
and
xor
adcl
insl
lods
push
dec
sti
mov
test
dec
rolb
inc
aas
das
xchg
sub
mov
pop
push
cmp
orb
mov
adc
dec
loopne
movsb
movsb
jns,pt
mov
pop
jge
xchg
jae
fs
call
dec
add
fmull
pushf
ljmp
lahf
aas
cmp
repz
adc
outsb
xchg
add
jle
sub
adc
lods
mov
cld
jmp
mov
xchg
bound
inc
jg
jns
xchg
lods
dec
jle
scas
xchg
fildl
test
sbb
xchg
frstor
adc
jg
gs
notb
std
adc
in
sahf
adc
push
jo
xchg
aas
pop
sti
ror
and
fidivs
jmp
xchg
push
push
or
sti
mov
call
mov
aam
cli
bnd
jae
cmpsl
mov
xor
mov
jl
inc
fnstsw
sbb
inc
sbb
jmp
sbbl
rcll
xchg
ret
imul
movsl
das
test
mov
stos
lea
stos
sub
movsl
loopne
jbe
xchg
mov
sub
and
gs
xor
inc
xor
enter
scas
cmpsl
in
cmp
pand
cld
dec
int
push
movsb
push
test
or
dec
mov
adc
or
adc
ds
iret
inc
xlat
push
mov
fildl
sub
jnp
xlat
call
xchg
jge
loope
shrb
or
jle
das
push
jge
cmp
add
cmp
loop
mov
sub
push
scas
lret
add
push
addr16
iret
bound
push
sahf
jl
fnsave
or
aad
pop
inc
lret
push
sbb
pop
mov
or
mov
shll
cwtl
jae
leave
movsl
loopne
rcll
into
aaa
movsl
mov
add
test
mov
aas
fidivl
movsb
test
cwtl
shlb
sti
inc
add
repnz
lods
mov
jle
cwtl
push
push
inc
call
loopne
pop
mov
fs
sub
inc
mov
imul
imulb
fldl
cmp
pop
call
jno
xchg
lea
rolb
cmp
fmuls
mov
add
mov
sbb
je
les
and
iret
mov
loop,pn
loopne
jae
xor
imul
inc
inc
and
add
jns
push
mov
lcall
lods
arpl
or
stc
fisttps
jle
add
xor
ret
dec
rcrl
test
lods
push
in
xchg
cmp
leave
je
jmp
and
xchg
jge
aam
ret
adc
movsl
fisubrs
mov
daa
leave
call
xchg
jle
mov
add
loopne
jge
stc
sbb
add
xor
adc
cmpsb
push
in
add
arpl
mov
sub
out
mov
filds
jns
pop
jne
aas
notl
cmovo
cmp
jno
mov
pusha
cmc
and
and
shl
or
jecxz
jo
xor
pop
push
repz
imul
jb
aaa
cmp
orb
ja
test
mov
add
js
stc
sub
or
rcl
push
push
es
adc
dec
sub
int
sbbb
loope
sub
pusha
sbb
push
push
rorb
aaa
jle
loopne
call
mov
in
and
pop
or
scas
sub
mov
or
aam
inc
aas
test
das
fistps
cmp
mov
mov
dec
xor
mov
pop
insl
cld
pop
lds
adc
or
nop
jge
push
cmp
dec
jne
xchg
pop
clc
pop
mov
pushf
sub
outsl
adc
test
fmul
es
jge
add
leave
adc
sub
cmp
cmpsl
shrl
sbbl
insl
cmp
lcall
and
pushf
push
jmp
xor
sbb
js
insl
mov
cmp
sub
xchg
push
mov
sub
mov
aaa
push
mov
mov
into
or
insb
jg
ja
push
inc
insl
sbb
iret
inc
sub
push
sbb
or
fcompl
sbb
aad
aaa
call
and
mov
imul
and
cmp
mov
cmpsb
cmp
sbb
jg
fs
mov
xchg
cmp
adc
mov
add
push
cmp
data16
cmc
aam
add
pusha
ljmp
out
sub
jge
mov
inc
jbe
pop
adc
jmp
mov
mov
aas
sbb
inc
mov
sbb
daa
and
lds
cwtl
in
loopne
push
ja
add
inc
inc
mov
cmp
lret
mov
mov
inc
or
in
xor
ljmp
sbb
adc
addl
jne
jmp
fxch
loopne
adc
test
mov
jl
cltd
fidivrl
and
jl
pop
loopne
lahf
testb
jnp
and
jp
mov
push
or
jns
mov
push
inc
loopne
fiaddl
notl
adc
imul
mov
popa
sbb
mov
add
xchg
js
sub
add
fiaddl
xchg
inc
rcl
jmp
pop
push
out
movsl
test
pop
in
in
mov
int3
and
fistps
popa
adc
jns
inc
adc
gs
or
call
and
adc
mov
cmpsl
ljmp
inc
jb
out
mov
insl
mov
repnz
push
lods
nop
xor
pop
xor
adc
push
push
ret
cmpsl
repz
arpl
adc
lock
daa
sub
cmpb
rorb
jne
outsb
cmpsl
sub
mov
jns
adc
in
jae,pt
mov
mov
pusha
xchg
pop
lds
mov
sbb
xor
mov
or
ficoms
push
arpl
add
hlt
push
cmp
mov
lods
cwtl
push
out
or
lock
adc
ljmp
push
ds
sbb
shr
pop
adc
add
mov
movsl
xchg
test
out
test
mov
nop
adc
out
pop
push
xchg
mov
ja
and
mov
sbb
adc
sbb
or
sbb
cltd
mov
pop
test
push
data16
xor
sub
mov
push
call
push
leave
push
mov
adc
and
lcall
cltd
push
sub
mov
inc
lahf
call
push
cli
mov
pop
testb
add
mov
jl
out
std
mov
hlt
pusha
add
jne
pop
lret
out
push
dec
popf
rclb
inc
jne
outsb
call
inc
clc
call
adc
int3
scas
or
outsb
aam
cmpsl
jp
lret
iret
dec
js
add
dec
fsts
sbb
aam
loop
out
imul
cmp
xlat
or
call
pop
or
jbe
sbb
mov
scas
in
std
sbb
loop
push
mov
mov
lcall
cmpsl
aaa
xchg
imul
jno
jae
sub
jmp
repz
aas
dec
fmuls
mov
divl
sub
nop
ret
inc
sahf
mov
imul
cmp
int
mov
aaa
jnp
mov
call
push
es
mov
pop
push
push
insl
movsb
aam
inc
or
lcall
ja
adc
xor
pop
mov
rcrl
sbb
pushf
sbb
inc
cmp
pop
or
dec
dec
push
sub
imul
mov
jb
ficomps
push
adc
call
movsl
lds
ja
jl
dec
jmp
loope
into
lret
push
inc
ljmp
add
adc
in
pop
scas
push
pop
nop
in
or
cli
daa
pop
xlat
xchg
push
adc
push
inc
adc
pusha
add
mov
jp
jl
or
push
stos
test
sbb
push
jb,pn
sub
into
lock
bound
dec
jge
aam
mov
jl
ja
fisubrl
ja
rorb
mov
adc
repz
jae
sarb
xor
adc
je
cltd
mov
lds
jecxz
stos
sub
and
call
sbb
int3
mov
aaa
jle
imul
cmc
shrl
aas
mov
mov
and
push
cmpsl
adc
es
inc
test
bound
mov
repz
inc
aaa
adc
dec
xchg
test
mov
sub
out
or
pop
xchg
sbb
cltd
push
add
or
mov
jle,pn
sub
xchg
dec
fsts
push
inc
jmp
shr
pop
lahf
into
push
and
cmpsl
pusha
xchg
es
test
jp
rorl
mov
push
mov
mov
push
mov
cmp
and
or
jp
jne
mov
punpckhwd
sbb
lret
jno
cmp
push
out
jge
fwait
pop
sub
inc
stos
loopne
in
dec
cmp
loop
in
cmpsb
pusha
cli
shrl
xchg
lods
test
adc
cmpsb
pushf
or
sub
mov
push
frndint
or
addr16
xchg
test
inc
adc
push
push
inc
ret
filds
mov
jg
and
sub
iret
xlat
insl
stc
mov
pop
hlt
adc
cwtl
push
push
mov
int3
imul
sbb
xchg
push
inc
mov
push
jmp
xchg
xor
jae
mov
pop
cmp
mov
mov
mov
and
je
xorb
xchg
insl
stc
les
lret
aas
or
mov
fisubrs
pop
jnp
mov
push
sbb
or
or
pushf
fstpt
mov
mov
aad
adc
decb
in
mov
or
cld
pop
jbe
sarb
cmp
jmp
sub
xchg
push
imul
cld
pop
stos
cwtl
adc
xchg
adc
xor
addl
call
fwait
mov
push
mov
scas
jle
lds
mov
inc
jne
jmp
jo
pop
out
xchg
inc
jg
adc
notl
mov
mov
xor
repnz
push
dec
inc
mov
or
pop
xchg
cwtl
rcll
repnz
mov
xchg
loopne
push
in
adc
mov
stc
mov
xchg
loopne
push
adc
pop
test
mov
lods
insb
roll
or
lret
sbb
enter
cmp
iret
je
rcl
sbb
add
cmp
mov
push
jmp
subb
or
std
sarl
xchg
fs
insb
add
push
cmpsb
scas
push
jns
add
dec
sbb
jns
and
lods
jg
push
aas
icebp
ljmp
jg
mov
jg
mov
or
mov
and
das
lds
and
pusha
jmp
sub
stos
out
jne
fsubrs
aam
xchg
enter
push
and
hlt
leave
dec
dec
mov
dec
mov
into
loop
dec
push
mov
mov
data16
dec
sarb
xchg
jns
mov
or
cmp
jg
fs
jb
divl
and
inc
cmp
adc
adc
jnp
ficompl
adcl
push
jl
fimull
mov
mov
and
mov
jecxz
mov
mov
loopne
call
and
lods
fstpl
and
sbb
adc
ja
mov
imul
mov
outsb
jge
jns
pop
dec
pop
fwait
xchg
xor
or
xor
add
adc
lock
loope
cs
shll
cmp
aad
push
mov
jns
xchg
cwtl
or
stc
fucomip
jle
loop
call
adcl
sub
jb
mov
jo
and
iret
divl
push
cwtl
mov
imul
aas
mov
testb
inc
movsl
add
lret
mov
sbb
cltd
cmp
mov
cld
add
xchg
mov
dec
sub
aaa
mov
add
pushl
xchg
mov
dec
je
popa
imul
or
test
sbb
rclb
mov
adc
cmp
jg
jl
adc
cmpsb
jae
xchg
and
sti
mov
adc
add
cmp
mov
push
or
movsl
xlat
mov
call
sti
and
loop
xchg
add
jbe
bound
lods
gs
add
rcr
jb
add
lret
out
aas
int3
or
pop
gs
push
clc
lods
mov
mov
enter
scas
inc
fs
addl
cmpb
push
mov
loop
cwtl
jp
mov
mov
push
push
and
adc
sbb
scas
or
lea
xor
ljmp
dec
ds
xchg
mov
test
push
jbe
inc
into
mov
pop
cs
push
cmpsb
shlb
add
xor
jl
xor
xchg
repz
sub
xchg
je
out
cld
cs
test
dec
adc
popa
pushf
rcrb
mov
xchg
dec
pop
jge
lods
adc
inc
mov
lcall
cmc
or
dec
pop
mov
sti
testb
jle
shr
inc
inc
mov
mov
into
adc
stos
insl
inc
inc
pop
rclb
sarl
scas
aaa
inc
lcall
cmp
sarb
jns
int3
sbb
mov
jnp
pop
pop
andl
rcrl
or
inc
notl
nop
push
add
cmpsb
dec
into
sbb
test
push
xchg
lds
sbb
mov
mov
adc
das
jle
ret
leave
je
ret
jne
xlat
adc
mov
aad
mov
clc
jecxz
and
dec
sahf
adc
popf
fcom
pop
xchg
outsl
jle
pusha
sarl
xlat
sub
ffree
call
and
push
pusha
adc
pushf
test
jge
stc
xchg
decb
jnp
sbb
out
outsl
or
mov
sub
add
fwait
dec
jmp
jmp
pop
pop
cwtl
ret
adc
movsl
loope
jecxz
or
mov
sbb
add
test
cs
popf
mul
stos
in
adc
sub
nopl
mov
aaa
add
xor
cmp
test
movsl
and
push
das
arpl
sub
push
stos
jnp
ret
into
xchg
or
jns
adc
xchg
out
pop
movsl
jae
icebp
movsl
push
sub
sbb
das
mov
dec
fistpll
mov
out
imul
js
movntq
arpl
arpl
out
and
pop
roll
mov
jbe
loope
test
jnp
add
or
jle
and
inc
mov
pop
sbb
dec
out
lods
je
xor
bound
jne
pusha
mov
lret
dec
and
mov
sub
rcrb
and
iret
pop
xchg
xchg
push
rclb
imul
aad
in
xor
movsb
xor
nop
loopne
aam
fsubrs
jecxz
arpl
das
fstps
cli
leave
loopne
mov
mov
aad
jno
jmp
movsb
mov
lret
mov
out
inc
xor
fimull
pop
mov
push
xchg
test
mov
mov
mov
stos
mov
sub
ficoml
jp
incl
jle
jne
inc
jo
fsubr
loop
mov
repz
test
shrb
scas
sub
lea
push
and
mov
or
sarl
xor
lret
insl
idivb
movsb
sbb
pop
or
adc
cmp
iret
cmp
push
and
push
sbb
push
pop
jecxz
push
sbb
inc
cmc
xor
push
loopne
nop
fcmove
lret
or
movsl
cmp
ljmp
push
pop
cwtl
cmpsb
push
xor
cmp
cmp
movsl
out
dec
cmp
ja
addb
imul
xchg
dec
js
push
push
pop
outsl
and
movsl
mulb
pop
jo
push
and
cmp
xchg
call
test
xchg
jb
lret
fcomps
inc
ja
loop
push
adc
cmp
push
sub
push
cmp
mov
cmp
xor
testb
inc
out
or
xchg
inc
inc
push
js
cmpsl
and
stc
mov
les
fnstcw
dec
in
test
mov
pop
rorb
daa
cmp
dec
pop
adc
aam
add
sarl
or
addb
adc
and
sar
repz
sub
sbb
std
lret
sbb
test
dec
mov
mov
out
add
shl
sbb
imul
aas
mov
stos
mov
dec
adcl
pop
js
insb
sbb
jle
cltd
jp
jl
lock
xor
into
inc
aas
loopne
test
sbb
cmp
dec
fisubrs
cmpsb
lret
aas
jl
add
pop
popf
leave
cmp
stos
lret
mov
mov
std
fs
fildll
push
into
ret
push
dec
rolb
jle
call
sbb
push
lcall
jmp
negl
lea
pushf
push
gs
nop
insl
add
pop
add
or
out
cmpsl
and
jmp
test
push
lods
dec
xor
loopne
push
sbb
frstor
cmp
fisubrl
jge
jmp
aaa
inc
push
jmp
es
jbe
into
scas
sub
movsb
jg
sub
xor
mov
ss
add
mov
stos
xor
repnz
pop
xchg
jo
aad
rolb
jnp
imul
sti
ljmp
xchg
jnp
addr16
mov
scas
or
enter
cmp
ds
stos
inc
call
sub
xchg
mov
push
sbbb
popf
ss
xchg
cmp
adc
notb
imul
sarb
pop
fimull
pop
test
out
sbb
adc
sub
cmp
mov
out
popf
les
roll
das
dec
std
mov
push
loop
sbb
pop
adc
lock
cwtl
mov
fbld
mov
dec
in
ficoml
stc
sbb
or
nop
jae
push
add
call
mov
pop
sbb
mov
enter
adc
jle
add
cmp
inc
ds
push
sbbb
imul
xchg
adc
mov
rol
cltd
jae
rcrb
lods
mov
sub
fsts
stos
and
pop
mov
adc
hlt
das
aas
mov
shrl
mov
jns
cmpsl
and
jg
mov
jle
stc
pop
das
lret
test
jp
mov
jns
jmp
adc
adc
ror
inc
inc
test
inc
inc
pushw
fmull
jns
dec
mov
mov
call
mov
pop
and
cld
mov
jecxz
sub
mov
ss
jbe
in
or
adc
sub
xchg
cmc
mov
movsl
mov
push
lods
adc
sbbb
cs
enter
and
aad
adc
sbb
imul
adc
sti
int
sti
nop
gs
enter
inc
mov
les
pop
into
bound
fsubrs
add
aaa
jnp
outsl
cmpsl
nop
push
cltd
jbe
ret
add
scas
or
int3
xor
mov
repnz
das
mov
int3
ja
xlat
sub
pop
fmulp
mov
xlat
mov
jo
sbb
push
jecxz
cvtps2pi
loopne
sub
xor
rorb
or
jg
std
imul
cltd
adc
mov
loop
rorb
inc
fbld
repnz
and
push
mov
movsl
mov
adc
xchg
or
cmp
ljmp
jp
addr16
xor
out
add
jmp
push
inc
adc
or
push
call
sub
fsubl
xchg
push
push
test
inc
xor
jp
xchg
sbb
add
enter
fwait
push
push
movsb
ficoml
mov
adcb
pop
push
les
mov
imul
test
inc
cmpsb
jmp
lahf
mov
jno
or
loop
loopne
xlat
mov
aam
add
push
xchg
push
adc
jl
lahf
imul
push
jle
test
clc
in
int3
aam
sbb
and
loopne
stos
out
cmp
fwait
xor
xchg
loop
fidivrs
lods
fs
movsl
ja
jle
jmp
inc
sbb
inc
testb
dec
fmul
les
out
xchg
and
add
jp
fsubs
add
fidivrs
sbbb
fmul
fstp
decl
mov
cmc
push
lock
lock
call
mov
jp
push
aad
and
cmp
mov
push
adc
add
cmp
add
popf
mov
aam
loop
int3
std
cwtl
pop
dec
out
mov
inc
mov
dec
stos
jp
in
ja
or
scas
sbb
push
jns
pop
adc
nop
jnp
hlt
jnp
mov
shl
ret
pop
lods
lahf
stos
adc
or
out
push
out
push
push
mov
scas
mov
mov
and
mov
lcall
mov
and
cmp
sar
sarb
adc
jne
and
lcall
bound
cmp
scas
cmp
rcr
mov
repnz
jmp
in
sub
hlt
xor
mov
adc
push
cmp
push
int
ror
push
in
test
push
rcl
wrmsr
inc
cmp
int
sub
call
fs
hlt
popf
addr16
out
jge
sub
push
ficompl
xchg
add
xor
xor
stos
lods
cs
xor
in
sbb
xchg
fistl
scas
lret
dec
ds
cmp
push
outsb
xchg
mov
icebp
jle
scas
cmp
mov
shlb
lret
mov
add
pop
jl
add
xlat
sarb
rcrl
sub
clc
dec
aas
push
ret
push
pop
xchg
in
inc
xchg
mov
cltd
cld
dec
cmp
ret
jp
imul
stos
pushf
cld
imul
and
add
pop
mov
jne
ljmp
test
or
pop
dec
test
test
test
mov
nop
jne
jg
clc
jns
dec
and
roll
push
push
in
pop
dec
imul
inc
cmp
insl
mov
sbb
aas
xchg
pop
push
fnstenv
loopne
or
adc
mov
arpl
jmp
cmc
div
jmp
jnp
adc
lahf
test
mov
mov
inc
xor
mov
xchg
data16
mov
cmp
inc
int3
mov
jb
and
call
cli
dec
movsl
in
lret
fadds
cmc
jmp
pop
call
mov
sbb
inc
insb
push
popa
xchg
mov
pop
stos
outsb
rorl
add
and
lds
cmp
sub
loop,pt
mov
jbe
jne
aas
inc
rclb
adc
loopne
adc
call
or
movsl
jae
mov
lretw
dec
jo
or
js
jp
add
mov
or
fnstcw
into
cmpsb
and
fcmovu
adc
mov
adc
stos
mov
popa
mov
movsl
pop
out
lods
xchg
mov
out
das
mov
aaa
int3
clc
cmpb
sub
popf
les
js
cmp
mov
cld
sar
and
push
out
stc
cmpsb
lods
bound
rorb
sbb
adc
inc
loop
mov
xor
fadd
gs
inc
into
shll
jp
jge
push
ret
lods
lret
das
loope
mov
sbb
je
es
mov
adc
inc
out
pop
push
aas
shrl
xor
lds
mov
push
mov
call
jmp
in
push
adc
xor
sub
xchg
cmp
push
imul
insb
aaa
mov
cmp
rcrb
fistpl
std
in
or
stos
faddl
mov
shrl
jo
pushf
jbe
or
adc
rorl
test
cli
sub
std
enter
adc
xor
insl
cli
in
das
shr
es
aaa
ret
xchg
mov
inc
xor
lds
xor
push
pop
lds
push
pop
or
xor
push
loop
fs
mov
popf
and
push
inc
xchg
cmp
nop
lds
es
orb
ds
in
mov
leave
leave
cmp
lods
jle,pt
out
xlat
pushf
mov
xchg
pushf
inc
jle
jnp
add
int3
jecxz
cmpsl
int
ss
push
xchg
adc
sbb
cmpsb
xchg
xor
mov
test
jle
mov
enter
das
stos
and
sbb
or
std
lods
lods
sbb
cltd
xor
adc
je
push
mov
repz
inc
mov
sub
adc
cmpsb
nop
shrb
jmp
sbb
sets
pop
sub
mov
fcomp
imul
cmp
sahf
pop
mov
test
popa
add
lret
lock
push
adc
jecxz
icebp
aas
mov
dec
jmp
inc
push
pop
mov
jg
pop
sub
dec
mov
into
push
mov
mov
mov
jge
or
adc
xor
inc
pop
test
clc
int
fiaddl
ja
insl
test
orb
mov
adc
in
pop
std
imull
push
fimuls
cmp
mov
pop
add
cmp
and
sbb
xor
insb
adc
add
inc
and
cmovg
pusha
shrb
sahf
pop
aam
out
or
xor
inc
xchg
xorb
dec
scas
mov
lea
aaa
shlb
cmpb
call
movsb
pop
test
dec
andb
xchg
sbb
loopne
insl
push
add
xchg
sbbl
shrl
mov
cmpl
add
cmp
inc
cmpb
ret
out
xor
inc
sub
icebp
int3
imul
out
loope
addb
jno
lahf
cmc
rorb
movsb
popa
push
dec
xchg
stos
xchg
cmp
lcall
cs
subl
jae
push
sub
fdiv
dec
mov
jb
pop
int3
mov
cmova
jmp
xor
addb
clc
enter
int3
inc
jl
cmpsl
in
pop
test
out
ret
xlat
nop
dec
fildll
mov
pop
rolb
pop
mov
ja
and
dec
sbb
andl
lea
lahf
in
out
add
repnz
xchg
push
add
xlat
add
sub
hlt
int
test
mov
mov
pop
addl
add
dec
std
inc
repz
mov
dec
andb
fcomps
shll
sbbb
xchg
jle
addl
add
ffreep
push
xchg
mov
mov
lods
popf
pop
cwtl
add
xor
add
pusha
stc
roll
int
jmp
cmpsl
xchg
into
nop
aaa
inc
and
sti
jns
pop
add
int3
and
push
lret
pop
and
adc
test
add
pop
in
adc
subl
aam
and
cmpsb
subb
movsl
cltd
mov
inc
cmp
insb
xchg
push
int
add
enter
xor
inc
add
mov
mov
cmpsb
jmp
mov
jo
pop
insb
lods
loopne
cltd
andl
movsb
xor
popa
push
add
adcb
aaa
add
jecxz
insl
sbb
ret
rorl
inc
add
cmpsb
sub
and
movl
jl
rclb
mov
out
adc
icebp
shll
test
and
jnp
aaa
test
lock
sbb
inc
cmpsb
pop
andl
movsb
adc
inc
mov
js
adcb
rcll
out
testb
mov
in
cmp
fimuls
dec
dec
and
pop
int3
adcb
in
orb
jns
decl
mov
aad
add
orb
xchg
push
sub
aam
dec
lcall
adcl
daa
pop
dec
es
orb
cmp
adc
sub
ljmp
rcl
clc
shll
adc
test
adc
out
xchg
out
stc
and
out
jmp
adcb
gs
lret
cld
add
movsb
leave
inc
cltd
jb
xlat
dec
pop
inc
or
xor
adc
pop
xchg
mov
leave
sbbb
je
andb
scas
inc
xor
and
jbe
stos
test
jecxz
add
sbb
rcl
repz
hlt
mov
cltd
sub
rolb
pop
mov
movsl
insb
add
shlb
mov
out
cs
jecxz
sbb
mov
imul
mov
aas
xchg
dec
sti
pop
or
mov
icebp
std
jmp
roll
sbb
add
adcb
adc
je
xlat
out
fdivr
and
lahf
adcb
in
mov
mov
inc
fldl
mov
sub
andb
mov
ljmp
hlt
lock
scas
inc
and
test
sbb
push
subl
cmp
and
in
stos
stos
movsb
out
data16
mov
fwait
repz
push
test
lcall
sub
into
icebp
lahf
xchg
push
adc
add
mov
dec
aad
or
mov
rol
nop
add
clc
sbbb
test
and
aad
notb
add
sub
incb
lcall
bound
addb
mov
incl
push
jmp
shlb
push
bound
fs
jmp
mov
popl
jne
cmp
add
mov
push
xchg
cmpsb
inc
adc
addb
push
mov
arpl
popf
js
xchg
outsb
xor
and
adc
in
orb
fiaddl
repz
cmp
hlt
je
pop
pop
cltd
popl
addl
nop
xlat
cmp
rorl
fildl
pusha
xchg
add
dec
sarl
xchg
xlat
xor
xor
xchg
xchg
rcrb
sbb
dec
addl
cmp
adc
out
mov
jl
or
js
xchg
mov
lret
std
and
loop
les
or
ret
and
sbb
icebp
out
pop
adc
jb
ds
mov
mov
push
xchg
mov
fldenv
pusha
mov
pushf
js
xchg
sub
push
add
ljmp
aad
mov
testb
test
mov
xchg
sti
push
rclb
out
mov
aad
inc
mov
or
mov
xor
frstor
or
pop
push
xchg
mov
xchg
and
shlb
adc
in
mov
xor
or
andb
icebp
adc
loop
cmc
and
sub
mov
mov
inc
mov
and
add
sbb
and
fimuls
test
gs
sub
add
adc
orl
sbb
andl
add
outsl
andb
stos
movsl
nop
cmpsb
in
mov
mov
in
hlt
xchg
mov
sbb
pop
aaa
loope
popa
xchg
mov
orb
ret
jne
nop
or
push
sbbl
xchg
jmp
adc
jmp
push
add
add
add
sbb
or
sub
dec
ljmp
shl
mov
enter
or
loop
lock
fs
out
shlb
lds
push
xor
icebp
mov
cltd
jbe
inc
mov
mov
out
sbb
cli
add
xchg
stos
inc
shl
xchg
mov
push
mov
outsl
and
xor
and
movsl
jo
cmpsb
lods
jmp
cwtl
or
aad
ret
neg
bound
js
imul
xlat
mov
aad
nop
pop
fdivrs
mov
shr
loopne
or
fists
and
add
push
cmp
andb
lods
ja
mov
stos
or
pop
xor
adc
sub
loopne
movl
jmp
push
rclb
in
orb
push
out
test
mov
je
push
push
inc
xor
in
rorl
insb
sbb
push
movsl
insl
and
rolb
mov
pop
xchg
mov
sbb
scas
addl
xchg
mov
adc
xor
and
cmc
mov
mov
push
sub
fdiv
insb
adc
ret
xchg
push
hlt
jbe
enter
int
mov
into
mov
rcll
fwait
add
mov
aad
xchg
andb
mov
xlat
mov
cwtl
add
cmpb
sub
out
mov
adc
enter
dec
lcall
xchg
call
cmpb
test
sbb
xchg
mov
movsb
or
outsb
pop
sbb
test
inc
sub
dec
cltd
adc
inc
push
add
sub
sub
sub
test
xorb
aam
sub
xchg
xchg
sahf
js
xchg
sub
icebp
movsb
and
mov
in
mov
lcall
hlt
add
inc
outsb
xlat
pop
fucom
lcall
cmp
mov
xchg
mov
mov
mov
mov
cli
fidivrs
xchg
mov
rol
inc
mov
mov
ret
aas
mov
adc
mov
mov
lret
adc
and
mov
shlb
fstl
lock
mov
dec
inc
mov
cmp
adc
fs
mov
pushf
adc
xor
push
in
xor
inc
jmp
sub
jg
mov
je
loope
mov
sahf
mov
aad
sbb
idivb
mov
xor
jecxz
xor
rol
mov
mov
fs
mov
subb
mov
mov
fs
mov
addl
sahf
mov
ret
xchg
mov
std
fdivrl
mov
mov
sbb
jo
push
and
inc
mov
add
mov
mov
fs
mov
ss
push
mov
pop
gs
mov
mov
inc
add
mov
adc
mov
pop
push
xchg
mov
hlt
repz
mov
bound
pop
mov
mov
into
push
cmpsl
mov
into
or
xchg
mov
adc
and
xor
mov
mov
in
mov
aas
dec
xchg
adc
and
xor
int
ds
test
pusha
mov
popf
movsb
addb
mov
mov
fs
mov
mov
lret
cmpl
mov
add
sbb
aaa
adc
push
outsb
push
jb
mov
jo
or
add
mov
mov
dec
out
mov
add
mov
cmpsl
in
pusha
in
pop
sub
xchg
mov
dec
xlat
push
dec
pop
les
jge
push
insl
pop
test
imulb
iret
mov
and
pop
xchg
je
call
mov
int3
mov
adc
jecxz
mov
mov
mov
into
xor
icebp
mov
mov
pop
adc
mov
mov
sbb
movsl
jp
push
nop
stos
mov
mov
add
xor
push
mov
mov
into
cmp
test
add
scas
test
add
out
mov
jb
lret
mov
adc
add
out
mov
mov
dec
in
repnz
jno
sbb
mov
dec
pushf
mov
mov
cwtl
mov
add
mov
adc
and
mov
add
jo
je
mov
mov
push
aam
mov
mov
adc
mov
mov
mov
lds
pop
insb
out
mov
mov
bound
shlb
adc
mov
pop
mov
pop
push
mov
jae
shll
insb
xor
cwtl
mov
mov
lret
mov
insb
xor
pop
lods
mov
mov
dec
sub
sarb
pop
hlt
testb
mov
pop
xchg
jae
aad
test
pushf
movsl
mov
sbb
mov
inc
mov
jne
loopne
int3
add
mov
push
stos
rclb
and
push
mov
mov
lcall
rcll
mov
xchg
mov
mov
mov
nop
mov
in
mov
xchg
lock
mov
push
mov
mov
adc
and
or
push
cmp
into
mov
cmpsl
test
mov
insl
dec
ficoml
pop
mov
pop
lods
mov
mov
sbb
mov
add
in
mov
lcall
hlt
inc
fmull
xchg
cld
mov
mov
xchg
mov
lret
mov
cmp
lahf
repnz
lds
mov
mov
dec
or
mov
dec
inc
fiadds
xchg
mov
sbb
and
cld
adc
sub
sub
cld
mov
das
push
fstpt
mov
xchg
rorb
dec
test
mov
in
sbbb
push
xchg
hlt
std
pushf
push
mov
xor
adc
daa
push
inc
push
mov
ja
mov
or
mov
mov
mov
or
adc
mov
sbb
adc
mov
sbb
push
adc
sbb
outsl
mov
push
push
cwtl
mov
idivb
push
mov
mov
mov
pushf
nop
adc
add
and
mov
sbb
push
mov
lret
orb
adc
out
mov
sub
mov
pushf
lods
mov
adc
add
mov
mov
fs
mov
mov
into
push
push
je
or
fs
mov
addb
mov
mov
ds
xlat
pop
or
cld
mov
es
pusha
loopne
mov
mov
shlb
jb
ret
mov
in
sbb
sbb
imul
dec
jno
or
enter
pushf
call
addl
mov
stos
mov
xor
es
sbb
sbb
sbb
popa
fcomps
mov
fs
mov
mov
add
mov
mov
mov
pushf
clc
mov
pop
adc
sbb
imul
out
mov
mov
jg
push
sbb
sahf
mov
xor
shlb
fcomps
mov
push
out
test
scas
mov
mov
mov
adc
test
mov
hlt
or
es
dec
pushf
add
push
add
mov
adc
dec
cmp
mov
loop
or
loope
movsb
test
enter
add
mov
ja
xchg
mov
xor
jo
shlb
cmpsl
hlt
lret
cmpsl
les
and
clc
imul
adc
mov
fs
push
mov
into
mov
and
add
mov
mov
rorb
mov
pop
hlt
jo
lods
mov
add
mov
mov
mov
aad
es
popf
ret
stos
adc
mov
rclb
dec
mov
fmuls
sti
dec
pop
mov
ret
adc
hlt
adc
roll
inc
jle
dec
imul
repnz
pushf
mov
pop
add
mov
xor
enter
add
sub
ffreep
inc
loope
mov
repnz
leave
nop
hlt
mov
xchg
mov
shl
mov
mov
mov
movswl
shrl
push
inc
cli
xchg
fnstsw
sbb
push
shl
sub
out
mov
lock
push
sbb
mov
dec
jne
inc
mov
test
push
mov
mov
mov
adcl
repnz
fdiv
xchg
mov
scas
and
lret
mov
jecxz
mov
call
mov
mov
mov
xchg
pop
cmpl
imul
pop
les
dec
or
dec
fsubl
sub
ja
xlat
mov
sti
hlt
push
loope
or
mov
std
test
inc
or
add
addr16
mov
or
stos
cwtl
and
mov
pop
test
mov
mov
push
popf
mov
fs
push
mov
mov
mov
jmp
push
imul
movsb
dec
fs
decb
push
test
mov
adc
into
cli
jne
xchg
mov
adc
and
xor
clc
jbe
decb
pushf
test
push
pop
mov
cmpsl
and
pop
inc
aaa
jp
in
mov
repnz
dec
xor
cmpsl
sub
mov
repnz
hlt
outsb
pushf
fdivrs
mov
xor
pusha
fidivrs
dec
mov
dec
inc
pop
dec
mov
mov
adc
sbb
adc
mov
inc
insb
mov
js
inc
xchg
push
mov
sub
pusha
dec
pop
xchg
pop
mov
repnz
sbb
adc
lods
ds
push
js
cs
leave
pop
loopne
mov
mov
in
dec
pop
cmc
add
dec
cmpsl
mov
push
inc
jl
je
dec
sub
mov
ja
mov
push
cmpsl
sub
mov
pushf
sub
sti
movsl
add
stos
cwtl
data16
aad
mov
lea
repnz
hlt
fdiv
and
dec
mov
mov
mov
lds
push
jl
shr
fdivrs
dec
ret
loope
adc
hlt
jo
enter
mov
into
into
adc
and
mov
mov
mov
mov
adc
add
mov
sbb
pushf
mov
add
push
in
into
cmpsb
mov
lods
or
xchg
xor
pushf
aad
dec
sbb
cmp
mov
push
inc
mov
mov
mov
lret
sub
mov
cwtl
mov
out
mov
hlt
lret
xchg
mov
sub
jb
mov
mov
or
stos
pusha
aam
push
xchg
mov
outsb
dec
test
cmpsl
repz
pop
mov
cmp
fcmovb
mov
les
inc
jo
xchg
push
cmp
cmc
mov
repnz
hlt
jge
leave
mov
pushf
xor
and
pushf
adc
mov
out
bnd
push
mov
in
sbb
sbb
std
mov
into
add
sub
xor
ds
enter
inc
sahf
rcl
andl
in
push
stos
xor
pushf
mov
xchg
lds
pushf
lods
cmp
jecxz
gs
sub
xchg
mov
call
xchg
insb
test
mov
mov
lock
mov
fsubrs
fnsave
loop
sahf
mov
adc
enter
call
jno
xor
mov
mov
or
lahf
scas
mov
xorb
mov
lods
mov
pop
std
mov
mov
repnz
sub
arpl
test
pop
xchg
mov
mov
stc
adc
add
enter
sbb
mov
pop
test
or
jnp
hlt
xorb
mov
mov
inc
sbb
rcll
sub
pusha
add
push
ret
enter
add
cltd
add
jecxz,pt
aaa
repz
adc
out
mov
mov
out
pop
outsb
mov
cld
rorb
pop
inc
jle
mov
fcomps
cmp
dec
adc
xlat
pop
jmp
sbb
popa
stc
adc
mov
pop
pusha
loope
mov
mov
sbb
jb
xorl
mov
ret
ds
pushf
pop
add
mov
js
mov
loope
movsl
mov
push
mov
xchg
mov
inc
sbb
fdivr
push
mov
jl
out
mov
mov
mov
icebp
lods
mov
mov
mov
loopne
lods
rorb
shll
mov
mov
pop
test
push
loope
mov
movsb
ficoml
fnstsw
cmp
int3
sbb
mov
mov
cmpsl
add
cwtl
mov
dec
push
mov
mov
or
add
mov
push
mov
ror
jmp
mov
mov
sti
andb
lahf
mov
negl
popf
mov
mov
mov
dec
mov
xchg
mov
cmp
mov
dec
add
mov
or
into
sub
push
inc
adc
subb
test
xor
mov
mov
ret
sahf
mov
adc
clc
inc
bnd
mov
push
movsb
or
mov
cmp
repnz
hlt
pop
pushf
test
cld
jecxz
ss
pop
jl
mov
int3
or
adc
mov
hlt
mov
adc
pushf
mov
pop
add
sti
mov
mov
scas
mov
adc
mov
cmp
cmpsl
adc
scas
mov
pop
mov
negb
mov
inc
adc
lods
mov
scas
dec
add
and
mov
mov
pop
test
lods
fs
mov
data16
gs
out
adc
out
in
enter
cmp
inc
sbb
outsb
push
fnsave
pop
and
shll
mov
sbb
jg
inc
sbbl
mov
cmp
enter
xor
lret
or
dec
pop
iret
inc
or
push
add
ret
mov
dec
gs
mov
pushf
stos
mov
sbb
sbb
inc
fs
mov
xchg
mov
mov
dec
mov
nop
shrb
movsl
mov
xchg
loope
mov
dec
les
add
add
mov
push
mov
or
jl
xchg
int3
pushf
out
cmpb
mov
stos
adcl
and
mov
mov
loope
repnz
dec
inc
mov
hlt
push
divb
mov
dec
scas
out
adc
sarl
mov
sbb
mov
xorb
enter
xchg
xorb
dec
scas
adc
fistpll
mov
je
lock
add
xor
hlt
jge
or
test
repnz
xchg
mov
mov
loop
add
adc
mov
mov
addb
enter
pop
rolb
mov
lods
mov
xor
mov
mov
cmp
rolb
or
xchg
jns
adc
or
mov
push
shrl
adc
mov
adc
mov
fdivs
jae
sub
add
mov
pop
insb
adc
mov
ljmp
in
mov
cmc
jo
scas
sbb
cmpsl
add
and
or
mov
inc
hlt
jno
mov
pop
inc
inc
xor
enter
sub
adc
mov
dec
mov
sahf
clc
mov
sbb
dec
push
push
test
mov
insb
lods
mov
xchg
xor
in
xchg
mov
fs
mov
mov
leave
dec
fmuls
aad
daa
sbb
pushf
jo
pop
ret
push
repnz
dec
push
loopne
repnz
pushf
pop
mov
cmp
cs
fs
push
addr16
adc
aam
push
leave
jbe
dec
or
pop
insb
pusha
inc
mov
xlat
mov
add
mov
and
mov
push
mov
pop
inc
mov
cmp
fs
push
mov
mov
lret
xor
mov
jo
cld
mov
dec
sarl
xchg
and
add
daa
push
mov
adc
and
pushf
pop
add
mov
inc
andb
lea
inc
sbb
jnp
xor
insb
mov
adc
in
mov
sbb
loopne
mov
jno
loop
mov
push
push
test
mov
neg
xor
or
jns
adc
movsl
jnp
mov
cmp
dec
mov
pusha
push
test
or
add
dec
adc
adc
or
mov
stos
stc
data16
adc
rolb
xor
loop,pn
add
clc
les
rcr
ss
repnz
pop
andb
pop
sarb
fs
pusha
je
fcmovbe
mov
and
les
scas
add
mov
cmpsl
mov
pop
cmpsb
cli
add
mov
mov
dec
jnp
mov
push
sbb
jbe
or
fdiv
mov
andl
mov
add
xlat
fildl
shl
push
xchg
not
clc
push
btc
bsr
shl
jmp
pushf
cmp
call
push
movl
call
not
xchg
bswap
pop
bswap
push
movzbw
xchg
mov
bswap
mov
call
cmp
test
pusha
add
push
movb
push
lea
jmp
lcall
add
dec
hlt
xor
adc
ljmp
dec
pop
int
mov
insl
cmc
and
pop
mov
rol
mov
mov
inc
cmpl
fidivl
jmp
mov
pop
ficoml
push
push
imulb
icebp
orl
into
pop
sub
fidivrs
xchg
aam
mov
jg
push
repnz
push
repnz
mov
fdivr
mov
pushf
roll
sbb
movb
pusha
adc
or
daa
cli
aam
inc
cmovo
sbb
data16
sub
test
cld
sub
sub
cmp
push
lock
sbb
push
in
adc
pop
das
das
sub
sarb
push
outsb
jp
sub
xchg
popf
outsb
loopne
xchg
mov
push
cmp
pusha
or
lret
lcall
outsl
mov
shl
lcall
test
in
push
xchg
inc
loop
cltd
mov
shlb
jbe
xchg
mov
mov
ret
sub
fldl
leave
imul
cltd
jmp
in
push
mov
dec
clc
ror
not
not
pushl
mov
stos
pushf
pusha
call
mov
movb
mov
mov
lods
bt
push
stc
not
bt
jmp
dec
pusha
pushl
lea
jne
movsbw
sub
rcr
mov
clc
pushf
cmp
pusha
pusha
lea
ja
movsbl
movzbw
xchg
lea
pop
sete
lea
jmp
pusha
lea
ja
pusha
lea
jb
jmp
inc
jmp
push
sub
ja
xor
jecxz
stos
mov
mov
add
ret
add
inc
add
xchg
rcll
popf
in
adc
xor
jo
mov
pop
pop
ret
dec
jle
mov
rcll
ffree
dec
xchg
mov
and
ret
mov
mov
mov
pop
jmp
mov
mov
pushf
ret
jae
sbb
in
mov
das
test
js
ds
test
rolb
push
push
mov
arpl
sarl
xchg
aam
sbb
in
fldl
idiv
out
xchg
and
sub
jge
xor
inc
add
cmpsb
shrb
ficomps
insl
iret
clc
subb
cld
adc
or
sar
fistpl
repnz
cld
cs
in
mov
or
stos
pop
ds
popa
fsts
mov
sub
clc
or
adc
xchg
and
push
nop
popf
imul
sti
push
sub
jmp
ljmp
es
fs
jb
push
pushl
pushl
ret
call
pushf
mov
jmp
fs
fsts
sub
cs
mov
xchg
dec
cmpsb
mov
mov
sbb
dec
stos
dec
test
lea
xchg
stos
inc
fcoms
lods
cmp
xor
dec
fildll
cltd
inc
sbb
pop
jge
lret
clc
mov
xchg
adc
jns
cmpsl
sub
jo
adc
dec
mov
adc
mov
jns
stc
loope
ja
pop
arpl
or
push
xor
inc
adc
sub
fisubs
xor
push
sub
pop
int3
xor
int3
in
sub
insb
cmp
add
dec
mov
ja
mov
ja
xchg
or
xor
scas
mov
out
push
aam
mov
stos
sbb
pop
jle
cld
incb
dec
jno
iret
into
dec
int
dec
lods
movsb
dec
aad
les
lcall
call
mov
sub
mov
rorl
or
shrl
inc
aas
loopne
rcpps
jecxz
lea
adc
sub
add
xchg
xchg
lods
dec
jne
pop
mov
loop
xor
test
icebp
add
xor
push
mov
mov
xchg
lods
xchg
jnp
jbe
sbb
jnp
test
push
cmp
inc
enter
sub
or
push
cltd
hlt
jge
jnp
sub
mov
jne
mov
jnp
push
mov
add
mov
test
jns
jge
push
add
jmp
psubusb
sub
xor
mov
rolb
add
xor
cli
orb
inc
aas
bound
test
sbb
dec
pusha
mov
xchg
pop
iret
dec
jo
mov
xor
popa
into
adc
gs
xor
dec
jb
xlat
dec
ret
cmpsb
insb
mov
jmp
push
add
sub
mov
sub
fisttps
cmpsl
addb
sub
add
mov
xchg
notl
ret
nop
test
mov
rcrl
mov
mov
test
clc
pushf
pusha
repz
aam
mov
mov
lock
test
enter
xchg
lds
cwtl
subl
call
xchg
push
mov
jbe
mov
xor
xor
add
mov
jns
dec
mov
push
call
push
aaa
cwtl
adc
mov
cwtl
nop
stc
cmp
cmp
inc
mov
fdivrl
fidivrs
xchg
xchg
or
mov
pushf
adc
fcoml
mov
xor
add
shlb
xor
daa
dec
jb
mov
pop
nop
shr
andb
ss
jge
lahf
inc
dec
cmpl
xor
inc
ret
cwtl
dec
dec
and
sub
call
nop
mov
cmp
and
dec
imul
cli
ds
lods
mov
push
push
inc
orl
dec
xor
imul
fdivrl
data16
aam
mov
ret
in
lock
jmp
mov
hlt
shl
lock
out
repnz
lods
pop
test
jmp
adcb
and
cmp
mov
inc
pop
nop
cwtl
lock
xorb
and
xor
dec
inc
cmp
mov
test
add
push
push
xor
cmc
pusha
mov
mov
push
fiadds
dec
xor
xor
stos
push
pop
xor
jl
dec
mov
hlt
enter
mov
les
fmull
mov
push
add
push
xchg
xchg
das
dec
insl
faddp
imul
les
stos
mov
test
jbe
sub
and
addb
cmp
or
stos
xchg
adc
ret
je
and
dec
insl
mov
gs
test
jl
xor
push
enter
and
mov
push
les
mov
mov
push
mov
adc
mov
xor
xchg
cltd
andl
inc
push
xor
jecxz
xor
dec
insl
lahf
xor
and
in
rcr
cmpsb
or
aaa
sub
cmp
lds
clc
je
int3
jne
jl
jbe
enter
jbe
sbb
std
lret
shll
fdivrl
loopne
cmp
sbb
jne
adc
sti
xchg
dec
imul
sub
je
cwtl
xlat
nop
subl
mov
xor
test
pusha
jno
scas
mov
sub
insb
lret
xchg
ds
or
int3
sub
dec
loopne
insb
aaa
xchg
jmp
ror
enter
iret
in
jns
mov
mov
js
pop
xchg
lods
lret
in
or
and
jne
loopne
push
js
adc
insl
fstps
add
push
adc
ja
dec
jns
scas
push
test
xchg
xlat
movsl
addr16
stc
jne
cwtl
sub
cmp
mov
xor
aad
xchg
pop
push
les
push
push
orb
and
xchg
fidivl
cwtl
nop
subb
sbbl
pop
lahf
rcr
das
rclb
pop
aas
pop
insb
sti
fildl
sub
pop
subb
insl
icebp
sub
lret
add
mov
or
jne
pop
mov
adc
nop
adc
sub
xchg
imul
jne
cmp
int
mov
aas
stos
jg
rcrl
mov
jle
mov
mov
pusha
testl
aad
cmc
test
xchg
test
les
test
es
mov
mov
mov
push
aad
add
push
pop
xchg
and
lock
lock
mov
out
mov
mov
arpl
lahf
mov
lea
popf
adc
test
sub
test
sub
mov
and
aas
roll
ret
mov
mov
int3
xorb
cmp
mov
cmp
xor
inc
repnz
into
inc
dec
loope
inc
fs
sti
xor
jg
fildl
addr16
out
jmp
pop
lock
jle
addb
or
inc
popa
int
lret
jnp
sbb
aas
mov
mov
fisubs
nop
xchg
pop
ja
stc
test
mov
je
add
inc
test
cmp
adc
test
mov
ljmp
mov
and
imul
in
xchg
and
dec
xchg
jg
arpl
mov
lret
daa
jo
sbbb
jl
or
cli
cmp
pop
dec
pop
xorb
fcomps
sti
in
xor
jmp
or
sahf
xchg
gs
xchg
fdiv
repnz
daa
mov
mov
movsb
repz
into
cmp
push
push
imul
fiadds
cmp
mov
cmp
insl
jbe
cmp
imul
mov
mov
bound
in
fs
nop
arpl
add
lods
adc
mov
rorb
mov
shlb
xor
xchg
mov
xor
mov
mov
shr
inc
in
nop
mov
scas
in
mov
mov
daa
mul
xor
mov
repz
mov
ljmp
cld
xchg
test
dec
jns
popa
cmp
xor
dec
jge
inc
mov
xchg
pusha
push
dec
pusha
cmp
jnp
xchg
sub
rolb
sub
adcl
xor
test
outsb
test
cwtl
dec
sub
xchg
mov
pop
push
imul
push
pop
inc
arpl
jb
and
mov
in
or
pusha
dec
outsb
push
cmp
ret
ja
icebp
test
xor
jbe
dec
into
push
xchg
insl
aaa
mulb
clc
jo
je
test
push
cmove
push
inc
or
nop
mov
shll
outsl
ds
xor
int3
push
rcrl
cmp
sahf
inc
dec
dec
xor
jns
adc
mov
call
mov
int3
and
cmp
aaa
and
ss
push
cmp
lock
add
mov
add
dec
clc
dec
testl
push
mov
rcrl
xchg
dec
clc
pop
sub
xchg
cmp
xor
push
mov
add
pop
mov
stos
push
enter
ljmp
adc
adc
adc
repz
jecxz
in
sbb
lock
test
aam
sub
mov
in
test
sub
iret
into
xorb
inc
and
mov
xchg
push
inc
pusha
dec
and
ja
xchg
mov
out
mov
fdiv
cmpsl
stc
jecxz
lock
pop
jecxz
in
or
sub
pushf
add
mov
mov
xchg
and
test
pop
rcl
xchg
int3
rcr
test
cmp
push
mov
hlt
mov
nop
ret
mov
out
xchg
lods
xchg
jnp
ret
out
icebp
out
ja
push
rorl
jmp
xchg
aam
ror
repz
movsb
push
jb
adcl
bound
movsb
dec
imul
dec
pop
aaa
sub
cmp
loope
or
cmpsb
xor
mov
xchg
sarb
inc
adc
dec
push
nop
adc
inc
je
das
add
mov
or
xchg
rcr
inc
jge
push
dec
movsl
repz
push
movsl
call
or
adc
shlb
cmp
shl
or
out
aas
dec
or
int
push
jp
ret
push
dec
push
mov
enter
lahf
adc
orb
out
repnz
adc
xchg
rclb
aad
aam
leave
leave
ret
outsb
rcll
add
mov
aaa
inc
mov
mov
dec
dec
mov
push
loopne
dec
inc
pop
mov
jbe
daa
or
jp
sahf
aam
cmp
push
sub
out
repnz
inc
in
push
mov
xchg
in
out
cmp
xchg
aas
dec
add
scas
insl
pop
je
jae
pop
fidivs
cmp
add
stos
xchg
push
or
jb
pop
sub
xchg
js
fbstp
push
inc
imul
fisttpll
jmp
test
mov
mov
mov
sub
mov
sub
xchg
aad
xchg
cld
or
pop
mov
lahf
sbb
lods
ret
loop
ret
xchg
movsb
adc
addb
sbb
in
nop
shr
fsubs
into
mov
test
mov
push
nop
mov
mov
fs
jo
mov
push
pop
mov
mov
fisubl
pop
xchg
xchg
jle
movsb
pop
fcomps
xchg
jb
dec
lods
bound
mov
cld
mov
sub
faddl
cwtl
add
stc
hlt
pop
lods
mov
sbb
call
and
mov
shlb
sbb
sub
xchg
mov
clc
movsb
push
out
ret
mov
cmpsb
fwait
xchg
mov
xchg
xchg
sahf
leave
lds
mov
je
fisubrl
fwait
xchg
push
sbb
mov
nop
jne
aaa
fisubrs
sbb
fucomi
or
xor
sub
in
ljmp
pop
lods
or
jl
mov
movsb
leave
pop
add
mov
sbb
xchg
ljmp
repz
out
popf
movsb
cmp
lea
test
or
lods
jns
insb
push
fdivs
sahf
mov
mov
sub
lret
repnz
fchs
leave
mov
ret
xchg
mov
adc
roll
rolb
test
sub
xchg
mov
nop
push
movsb
test
xchg
mov
scas
and
adc
test
call
rcrl
jae
test
mov
mov
ljmp
fcmovnu
adc
ret
adc
out
out
repnz
aad
popa
hlt
cwtl
jbe
mov
fwait
lock
notb
mov
adc
xchg
pusha
xor
mov
inc
adc
xchg
pushf
les
xchg
repnz
sub
xchg
andb
push
les
add
movsb
test
or
mull
aam
mov
mov
adc
mov
mov
push
mov
pop
jmp
les
loopne
adcl
adc
rorb
xchg
enter
les
mov
adc
mov
xchg
lods
movsb
nop
enter
mov
or
enter
cld
or
enter
mov
or
nop
jl
mov
or
movsb
jo
lahf
adc
les
or
movsb
pusha
enter
mov
or
movsb
inc
enter
mov
or
xchg
stos
movsb
xor
stos
adc
mov
or
xchg
scas
movsb
and
scas
adc
mov
or
xchg
mov
adc
mov
adc
or
xchg
mov
add
mov
add
add
jecxz
out
call
in
in
out
lock
xor
hlt
cmc
div
clc
stc
enter
xchg
mov
orb
xchg
xchg
orb
rcr
cmp
sub
mov
out
imul
in
add
mov
stos
movsb
movsl
andb
pushf
fwait
subb
sahf
xchg
mov
mov
test
sub
ljmp
cli
loope
in
cltd
lcall
mov
movsl
shlb
adcb
sub
push
add
inc
xor
mov
add
add
fwait
out
sbbl
adc
test
xchg
add
mov
mov
out
andb
xchg
mov
mov
mov
mov
fs
repnz
ret
mov
mov
nop
mov
andb
dec
fwait
mov
xchg
add
mov
test
fldl
mov
test
xchg
add
mov
fwait
test
cwtl
xor
xchg
rcrl
cli
movsb
and
in
xchg
mov
pop
cltd
ja
lret
mov
insb
test
xchg
andb
nop
xlat
test
mov
adc
sbbb
adc
mov
test
cmpsl
cwtl
push
andb
enter
mov
pop
test
mov
stos
dec
lods
jns
mov
and
test
mov
fwait
xor
mov
mov
cwtl
faddl
mov
adc
xchg
cwtl
lods
das
orb
fiaddl
sbb
in
mov
jl
pop
xchg
adc
andb
test
sbbb
mov
mov
mov
mov
push
sarb
aam
mov
mov
add
test
nop
lahf
pusha
sahf
sub
jns
add
orb
ret
mov
cltd
cmp
xlat
add
sub
cltd
adc
leave
int
add
mov
add
add
aam
mov
add
and
adc
adc
rolb
push
mov
mov
dec
test
movsb
shr
daa
lods
jecxz
sar
pushf
pop
nop
shll
mov
xorb
fwait
dec
lcall
adc
sbbb
fsubs
fisubl
sbbb
test
mov
xchg
faddl
mov
popf
test
push
test
test
mov
xchg
xorb
mov
lods
push
or
xchg
mov
or
cwtl
mov
orb
jns
xchg
lcall
out
scas
mov
test
test
jmp
ljmp
lods
iret
andb
add
mov
push
jb
mov
add
lock
mov
jo
dec
xchg
repz
or
jp
cmpsb
xlat
scas
addb
push
idiv
sar
xchg
pop
xchg
mov
cs
call
dec
mov
test
sti
push
jge
orb
lcall
mov
add
addb
jg
nop
lea
add
mov
imul
iret
dec
pushf
and
call
rcll
cltd
pop
test
popf
dec
mov
mov
mov
movsb
lods
call
or
mov
orb
xchg
mov
mov
or
mov
xorb
adc
push
in
or
mov
jo
dec
mov
xchg
adc
xchg
stc
mov
lods
fwait
dec
movsl
test
add
adc
cmp
jbe
scas
arpl
stos
cmp
mov
inc
pop
add
dec
sbb
call
ret
stos
dec
mov
mov
sbb
adc
sbb
ret
xchg
xchg
sbb
stos
push
mov
pop
mov
test
das
xchg
adcb
and
shlb
and
mov
cltd
fwait
and
inc
mov
mov
and
rorb
adc
rorb
scas
mov
adc
nop
sub
and
xchg
addb
test
jns
fildl
add
gs
fwait
xorb
cwtl
mov
out
test
scas
mov
mov
movsl
mov
scas
xorb
cmpsl
sahf
scas
mov
mov
pop
mov
dec
fs
mov
ret
mov
add
adc
dec
test
dec
cmp
xchg
andb
stc
mov
add
lods
sbb
mov
mov
push
orb
mov
rolb
popf
jl
daa
addb
inc
inc
inc
inc
addr16
popa
nop
mov
and
xlat
dec
xchg
mov
mov
add
mov
subb
dec
and
daa
mov
in
test
push
in
lea
add
push
mov
mov
xchg
ljmp
adc
add
xorb
mov
lea
sbbb
mov
xchg
lcall
mov
cltd
mov
test
fs
mov
xchg
adc
lahf
pop
add
xchg
lea
mov
mov
cltd
pop
pusha
andl
sbbb
test
andb
mov
popa
fcomps
adcb
jl
add
nop
rcrb
gs
subb
aam
mov
lea
push
imul
popf
stos
andb
nop
test
outsb
in
xchg
outsl
and
jecxz
test
test
fs
jno
shlb
jb
clc
jne
xchg
test
add
mov
sub
popf
adc
fdivl
orb
mov
adc
xchg
inc
js
rcrl
rcrl
mov
adc
adc
stos
xchg
ret
scas
mov
dec
popf
fs
mov
jl
lea
mov
cmpb
mov
xchg
mov
lcall
dec
test
ret
mov
xchg
or
mov
mov
xor
push
cmpb
xchg
mov
mov
sbb
mov
and
lea
mov
mov
gs
xchg
mov
shrb
jns
and
dec
cmpsl
aam
xchg
add
scas
add
fmull
xchg
lea
inc
stos
stos
andb
mov
mov
cltd
call
jo
fwait
add
pushf
and
pushf
pmulhuw
sahf
aam
dec
mov
aam
lahf
mov
mov
mov
mov
dec
cmpsl
xlat
pop
mov
xlat
add
mov
mov
icebp
movsb
fldt
stos
stos
adcb
cmpsl
push
mov
test
repnz
fwait
call
inc
lcall
mov
lods
pop
mov
test
xchg
scas
insb
adc
popf
mov
pushf
fwait
and
mov
bound
adcb
insb
pushf
add
mov
lahf
pcmpgtb
mov
inc
stos
cmp
lods
cmpb
movsb
lds
les
popf
xorb
mov
add
movsb
mov
nop
mov
test
mov
or
movsb
lods
cs
mov
test
rorl
push
mov
add
nop
xchg
test
add
popf
and
lds
lods
mov
cmp
rolb
xorb
fwait
mov
fiadds
movl
xorl
addb
fs
fiadds
pop
lea
sbb
leave
push
movsl
clc
nop
inc
mov
jo
mov
xorl
jl
cmp
add
test
test
hlt
mov
cmpsl
lea
mov
outsb
inc
test
nop
mov
hlt
mov
les
sbb
test
mov
xchg
sbb
mov
dec
lea
push
lea
mov
inc
sub
push
sahf
cmp
sbb
mov
mov
push
xchg
mov
mov
mov
iret
add
mov
inc
mov
xchg
mov
mov
push
lcall
xchg
push
mov
mov
cmpb
negb
scas
ds
cltd
stos
mov
or
xchg
push
mov
out
mov
test
and
dec
aam
jo
push
cwtl
gs
loop
dec
adc
test
xchg
stos
test
imul
jmp
xchg
in
sbbl
test
add
sub
nop
dec
or
mov
lods
sbbl
cltd
add
xchg
mov
stos
fwait
add
nop
sub
in
mov
insl
ret
popa
hlt
mov
cmp
or
mov
andl
push
mov
push
mov
insl
es
insl
leave
mov
call
test
mov
push
subb
movsb
aam
arpl
lcall
fmul
xchg
xchg
and
mov
ds
nop
scas
aad
jbe
lods
loop
xchg
xchg
cs
push
add
sbbb
mov
mov
test
pushf
sbb
xchg
and
sub
pop
imul
scas
mov
xchg
xor
call
mov
movsb
mov
loop
xlat
add
xor
fs
xchg
mov
adc
lahf
mov
and
jl
sub
lahf
out
movsb
mov
adc
xorl
push
pushf
cmpsb
mov
enter
popf
cmp
roll
leave
jo
sahf
test
fwait
mov
sahf
les
mov
movsl
pop
fldt
push
add
and
or
and
xchg
lods
ret
cmp
mov
js
inc
lret
sbb
cli
and
mov
mov
mov
add
mov
hlt
pop
mov
pop
xchg
add
cmpsl
loope
xchg
imul
mov
shrb
pop
mov
xchg
nop
stos
and
jecxz
mov
and
dec
sbb
jge
add
and
cmpsb
mov
xchg
rclb
xor
lods
cwtl
mov
xor
mov
lret
or
xchg
leave
test
shlb
jl
adc
add
pop
call
and
cmpsb
nop
cwtl
movsb
lcall
mov
xor
pop
lcall
pop
pop
dec
jbe
test
sahf
or
mov
cmpsb
sbbb
outsl
or
pushf
or
mov
inc
xchg
inc
mov
lock
xchg
jp
mov
mov
cwtl
add
add
push
add
loopne
rolb
xchg
or
rorb
add
fsubrp
xor
test
and
cwtl
pop
hlt
mov
add
xchg
xchg
mov
lods
mov
add
fildll
xchg
rclb
add
fildl
stos
xchg
lcall
mov
sub
xchg
test
scas
enter
mov
or
mov
sub
fstpl
lcall
fwait
andl
dec
jne
xor
data16
out
mov
jnp
test
js
clc
pop
xchg
rorl
sbb
and
rolb
adc
pushf
and
nop
repz
scas
xchg
hlt
lea
jl
pop
lods
xchg
inc
inc
xchg
mov
cmc
lods
cmpsl
mov
cmp
mov
or
lcall
stos
addb
ljmp
rcl
lods
sub
mov
xorb
adc
fs
or
movsb
xchg
and
jmp
lds
xor
add
xchg
fdiv
cwtl
int3
call
andl
or
mov
add
lret
cli
mov
pop
test
lea
mov
xchg
adc
jo
adc
add
loop
or
jle
sbb
sbb
cwtl
mov
inc
mov
add
mov
cmp
dec
in
lock
xchg
xchg
xchg
stos
nop
leave
jl
movsl
cmp
xchg
pop
adc
cmpsb
mov
ss
mov
push
and
test
pushf
imul
fwait
test
mov
dec
mov
push
add
or
inc
mov
cwtl
xorl
mov
mov
pusha
test
jno
icebp
aam
sbb
lcall
mov
mov
and
ret
stos
push
mov
dec
push
add
clc
pop
xchg
sbbl
push
and
fcompl
fs
pushf
sub
xchg
inc
es
push
lahf
xor
sbbl
mov
lcall
or
xchg
mov
jno
icebp
pushf
cmp
out
nop
movsb
lock
push
mov
and
mov
push
ret
ret
and
mov
xchg
mov
lahf
dec
and
lods
js
test
and
sbb
push
inc
xchg
inc
mov
fimull
push
fs
pop
or
lret
bound
fstpl
fsubl
mov
jbe
test
sub
call
les
xor
lods
je
or
mov
ret
mov
or
xorb
pop
decb
mov
lock
mov
test
nop
inc
movsl
add
movsb
or
hlt
and
cltd
in
cwtl
aam
and
push
mov
adc
mulb
pop
ret
cwtl
lock
or
pop
aaa
mov
jo
add
push
in
or
dec
fisubl
mov
cltd
addl
jo
xor
xor
cmp
int3
pop
int3
clc
lret
add
and
test
push
fmull
add
jp
cmp
mov
mov
in
fmuls
mov
sbb
int3
mov
mov
adc
ss
loope
int3
fmulp
add
es
adc
sbb
enter
adc
outsb
ljmp
add
dec
int
cmp
test
cmp
and
adc
mov
mulb
lret
lcall
xchg
inc
shll
mov
or
test
lea
shl
add
push
jo
xchg
sbb
lcall
adc
nop
jle
mov
and
repnz
push
mov
ret
jp
hlt
je
push
sub
pusha
push
mov
xor
jmp
and
add
inc
lods
add
sbb
sub
inc
cmpsl
lods
sub
add
inc
mov
pushf
pop
rorb
lods
add
jmp
sbb
mov
mov
pushf
jo
lock
cmpsb
push
sub
lods
popf
sbb
dec
stos
mov
jne
in
mov
mov
mov
mov
push
cmpsl
sub
sub
push
and
sbb
popf
lods
sbb
lods
adc
into
xchg
adc
rolb
push
mov
lea
fisttpll
mov
dec
stos
xchg
xchg
mov
xor
or
mov
sbb
xchg
rclb
fiaddl
mov
xchg
xchg
pushf
add
xchg
sbb
xchg
lcall
xor
ror
fisubrs
movsl
sbb
clc
xor
mov
inc
adc
ret
call
mov
enter
xchg
xchg
pop
loopne
mov
cli
mov
in
push
test
inc
cli
movsl
test
pusha
mov
inc
mov
mov
mov
inc
fs
sbb
pop
shr
rclb
sbb
call
mov
ljmp
mov
sbb
dec
sbb
ret
rclb
cwtl
pop
inc
sub
push
in
xchg
cmp
adc
pop
sbb
add
xchg
clc
cmp
sarb
or
adc
rolb
cmp
or
cltd
sub
int
test
xor
nop
fwait
loopne
mov
cmpsl
xchg
nop
mov
add
mov
sub
pop
jl
test
mov
jbe
mov
lret
test
lret
out
mov
ljmp
les
inc
test
sub
dec
loope
les
movsb
repnz
and
sub
out
mov
and
jp
inc
mov
and
rorb
adc
inc
cmp
lods
mov
add
xchg
aas
call
xchg
out
mov
push
xor
mov
hlt
movsb
mov
sub
inc
popf
es
daa
xor
pop
mov
fstps
test
movsb
sub
sub
in
inc
add
js
inc
or
sarb
out
mov
mov
lods
xor
dec
mov
mov
in
js
and
movsl
popf
sub
xchg
sub
jge
leave
and
mov
stos
les
adc
sbb
xor
out
mov
add
cmpl
or
mulb
mov
fsubl
in
and
push
mov
xchg
adc
fcoms
mov
and
and
xor
test
xlat
or
mov
push
in
push
xchg
icebp
mov
mov
mov
dec
xchg
stos
adc
mov
aam
inc
je
out
mov
cltd
mov
popf
lock
pusha
test
jge
jbe
adc
es
pop
daa
sub
inc
ds
jbe,pn
adc
addl
rorb
dec
enter
test
outsb
loop
add
xchg
add
add
sub
push
and
fwait
dec
ljmp
ss
push
push
xchg
rclb
xchg
or
test
ljmp
clc
lods
xor
xchg
test
sbb
xor
xor
mov
ret
inc
xchg
rclb
imul
in
mov
mov
stos
xor
push
xchg
mov
sub
add
out
xchg
loopne
cmp
cs
fwait
sbbl
mov
in
sub
push
ss
lea
loopne
xchg
xchg
mov
mov
jmp
movsb
mov
ds
xchg
jl
roll
lods
mov
xchg
dec
fs
push
inc
jbe
xchg
shlb
aam
push
int3
xchg
lods
mov
test
sar
mov
call
adc
jns
into
int3
int3
inc
leave
sahf
iret
nop
xor
movsb
xor
mov
xor
lods
mov
inc
mov
lcall
aaa
jb
ret
fs
pushf
inc
lret
rorb
mov
repnz
movsb
cmp
cli
sub
xor
stos
arpl
jecxz
sbb
add
cmp
leave
inc
scas
xchg
test
je
and
sbb
cmpsb
and
fsubs
cli
mov
add
xchg
push
mov
push
lcall
xchg
fistpl
mov
mov
pusha
js
out
jo
loopne
sbb
lods
data16
cmp
push
mov
cwtl
adc
push
in
xchg
adc
fsubl
xor
or
add
sbb
nop
insb
and
ja
mov
scas
nop
dec
mov
xchg
sbbl
into
test
out
or
add
dec
adc
cwtl
js
mov
sbb
and
jmp
lret
cs
lock
popf
pop
mov
ret
push
lock
insb
mov
js
xchg
sbb
lods
test
stos
popf
lea
lcall
add
test
enter
cwtl
int3
les
mov
shrl
dec
inc
mov
test
or
dec
int3
xchg
xchg
jbe
mov
nop
cmpl
add
adcl
in
add
pop
je
pop
sub
sub
mov
or
sbbl
xchg
enter
sbb
es
inc
imul
faddl
adc
rolb
int
cmp
ds
mov
xchg
xlat
or
insb
cmp
inc
out
xchg
mov
adc
das
dec
lea
jno
call
xchg
lea
adc
sbb
es
xor
mov
rclb
cs
add
je
shlb
adc
adc
xchg
mov
call
int3
pop
movsl
cwtl
mov
mov
mov
or
mov
push
in
ss
movsl
arpl
adc
clc
out
add
dec
ret
and
adc
adc
xor
cwtl
dec
jl
jo
dec
cwtl
xchg
sub
loope
mov
mov
mov
xchg
loop
lret
sbb
push
les
and
call
xchg
push
js
sbb
cltd
xchg
scas
mov
in
push
cmpsl
mov
adc
jo
dec
fisubl
rcrb
fldenv
mov
jne
pop
sub
or
out
sub
rolb
cmp
dec
dec
cmpsb
xor
xchg
cs
mov
les
push
lods
add
in
shl
test
popf
dec
js
lret
dec
xchg
je
les
sbb
mov
fs
int3
or
popf
aas
test
cmp
sbb
xchg
test
mov
sub
mov
lea
cld
dec
xchg
stos
lds
test
xchg
dec
imul
loopne
dec
add
push
jmp
test
enter
mov
lcall
or
test
jg
dec
push
adc
xchg
sub
sarb
push
es
test
sbb
cmpsl
pop
jl
cmpsl
cmp
jmp
movsb
lods
pushf
ds
mov
cwtl
xchg
push
add
xchg
pushf
addr16
jo
enter
ret
sub
es
mov
or
jmp
mov
mov
into
push
in
jne
enter
xchg
in
mov
jae
cmpsb
in
leave
andl
cmp
mov
inc
mov
push
scas
lcall
repnz
pop
xchg
xor
test
push
into
int3
hlt
mov
cltd
adc
xchg
push
jb
sub
sbb
ficoml
xchg
push
push
pop
adc
cmp
sub
int3
mov
and
xorl
es
cwtl
movsb
movsb
movsl
jl
jecxz
test
movsb
lods
sahf
mov
and
lods
adc
and
js
shr
in
ret
push
mov
mov
sbb
fstl
clc
mov
cltd
iret
push
mov
and
push
scas
lahf
lea
lcall
mov
pushf
loopne
cmpsl
xchg
adc
jmp
adc
es
sub
enter
test
stos
sbb
adc
clc
dec
or
adc
scas
int
lods
stos
add
xchg
lock
cmp
inc
xor
pushf
scas
add
rcr
push
inc
inc
movsb
and
mov
cltd
xor
nop
adc
push
lock
sbb
jns
icebp
cmp
adc
jp
clc
lock
add
cwtl
xchg
cmp
cmp
test
jle
popf
pop
fs
mov
movsl
mov
ljmp
push
mov
xchg
mov
add
into
pushf
lret
sbb
outsb
outsb
mov
into
inc
push
mov
sub
movsb
xchg
push
lcall
and
xchg
notb
mov
dec
loop
cmc
xchg
test
stos
rorb
or
adc
fsubs
mov
addl
insb
dec
movsl
and
sbb
sbb
shl
scas
ljmp
push
cld
mov
test
in
add
mov
inc
mov
mov
and
cmp
int3
add
fdiv
or
jb
push
loopne
lret
into
xor
mov
add
cmp
ss
cmp
pop
sbb
cmp
js
mov
in
lods
test
ss
movsb
sub
inc
movsl
loope
stos
ret
xlat
xchg
mov
push
xchg
and
or
hlt
sbb
sbb
mov
ret
insb
xor
dec
pop
test
sbb
movsl
inc
add
cmp
cld
cmpsl
mov
repnz
push
leave
andl
das
push
push
int
cmpsb
rol
subb
mov
andl
mov
adc
call
fimuls
lods
sbb
test
push
cld
mov
pop
aam
mov
nop
jo
pop
cmp
insb
and
mov
lea
mov
ss
js
cmp
mov
loope
test
movsb
adcb
data16
pop
and
or
mov
mov
xchg
inc
pushf
inc
cmpsb
lods
push
mov
dec
mov
and
scas
and
int3
andl
adc
cmpsb
sbb
int3
mov
mov
dec
pushf
clc
clc
fiaddl
popf
sar
jne
jb
fisttpll
and
sahf
lea
test
enter
lea
cmp
shll
cmpsl
pushf
mov
mov
in
sbb
and
and
and
add
lret
lahf
xchg
cwtl
xchg
sub
loope
mov
xchg
subl
mov
scas
dec
xchg
cltd
ljmp
roll
movl
les
je
ss
lea
aam
xchg
sub
sub
push
xchg
stos
xchg
mov
mov
sbb
mov
xchg
pushf
mov
leave
jmp
dec
cmp
xchg
cmp
cmp
nop
xchg
out
repnz
pushf
xchg
mov
movsl
jecxz
out
cmp
test
xchg
cmpsl
popf
inc
mov
mov
rcr
leave
push
mov
or
fisubl
cmp
mov
mov
push
push
mov
inc
iret
or
je
outsb
fwait
scas
lea
mov
mov
mov
push
mov
mov
and
lock
push
movsl
inc
add
nop
mov
mov
daa
lods
movsb
cmpsb
push
sarb
lea
mov
sbb
mov
mov
xchg
mov
mov
mov
mov
aaa
cltd
lds
roll
xchg
faddl
xorl
xchg
xchg
jbe
fwait
xchg
pop
or
lods
and
mov
lea
or
mov
and
or
cmp
jns
mov
les
out
cltd
in
cmp
xchg
iret
mov
add
mov
in
mov
add
xor
lea
mov
mov
ljmp
ficoms
mov
les
xor
or
call
mov
xchg
jecxz
lcall
xchg
pushf
cwtl
sub
jge
mov
cmpsl
push
ljmp
lods
rol
mov
mov
sbb
mov
sub
nop
lea
lods
cmp
and
mov
xor
cltd
mov
sub
cwtl
dec
inc
jb
or
xchg
int3
dec
lea
or
mov
in
in
or
xchg
fdivrl
mov
mov
or
or
mov
sar
lea
sub
repnz
lea
mov
cmpsl
mov
xchg
das
cwtl
sub
sarb
xchg
mov
mov
xchg
orl
fiaddl
xchg
fiadds
mov
addb
mov
cltd
xchg
cmpsl
add
bound
push
xor
or
mov
popf
push
stos
mov
mov
insl
mov
cmp
aad
push
mov
push
scas
lea
cmp
mov
mov
and
dec
cmp
push
test
push
pusha
popl
les
lods
or
xchg
mov
mov
inc
and
mov
adc
aad
repnz
movsb
movsl
or
pushf
pushf
mov
or
sbb
test
enter
addb
mov
mov
loope
mov
call
test
xchg
fisubs
xor
adc
into
inc
sbb
stos
cmpsl
jo
mov
mov
mov
leave
fsubrl
xchg
mov
or
push
mov
addb
lods
andb
mov
dec
xor
jb
add
gs
cmpsl
add
pop
adc
xor
inc
stos
mov
cmp
jmp
sbb
rcll
fwait
adc
or
push
movsb
or
int3
lods
xchg
mov
mov
mov
shlb
mov
std
sub
nop
xchg
dec
into
nop
add
fmuls
mov
mov
stos
cmp
test
mov
or
movsl
sbb
les
xchg
repnz
aad
sub
lods
mov
xchg
lret
and
pop
out
flds
in
dec
out
movsb
movsl
ja
ljmp
repnz
cmpsl
movsb
sub
sahf
fdivrs
add
call
mov
dec
jp
testl
test
mov
clc
leave
ret
pusha
in
leave
scas
or
and
mov
sahf
adc
cmpsb
ljmp
movsb
xchg
insb
in
xor
xchg
mov
scas
popf
mov
call
pop
add
xchg
scas
add
mov
mov
push
push
ds
les
sarl
test
movsb
mov
xchg
pushf
test
nop
fsubrs
lahf
and
push
xchg
xor
mov
lret
push
sub
iret
test
xchg
stos
shlb
sbb
add
xchg
push
test
pop
aam
xchg
mov
jbe
xor
adc
or
mov
cltd
add
clc
push
add
add
mov
mov
lods
pusha
ret
fs
push
call
sbb
adc
mov
xchg
sbb
adc
mov
cs
mov
mov
xchg
xchg
dec
test
mov
mov
enter
out
iret
mov
xchg
jmp
stos
adc
add
insl
mov
stos
or
or
sub
mov
add
xchg
dec
in
dec
clc
andb
mov
scas
and
ret
test
lret
test
mov
pop
sahf
pop
inc
push
mov
jb
cmpsl
cmpsb
jmp
insb
push
nop
mov
nop
sub
inc
jl
mov
mov
mov
movsb
jmp
loope
enter
and
in
test
mov
out
pop
shll
out
xor
sub
mull
das
lds
cwtl
add
sub
adc
and
mov
sar
mov
cli
or
xchg
clc
movsb
icebp
enter
mov
adc
in
or
xchg
lock
loop
repz
dec
mov
in
mov
dec
xchg
mov
add
mov
dec
push
push
bound
inc
inc
dec
jge
inc
mov
mov
mov
fistps
stos
xor
dec
xor
sbb
pusha
cmp
sub
xor
nop
cmp
xlat
clc
or
mov
das
movsb
mov
xor
addr16
mov
dec
cmp
sub
and
inc
adc
movsl
push
xor
adc
aam
gs
xlat
stc
jns
les
je
xchg
rcl
mov
xchg
lea
xchg
mov
mov
in
mov
fisttpl
fcoms
pop
hlt
clc
test
pop
sbb
and
mov
rolb
ret
mov
mov
or
enter
js
inc
jo
push
enter
decl
cmp
and
sbb
or
xchg
clc
movsb
hlt
enter
mov
or
xchg
fsubs
mov
or
enter
nop
jl
mov
or
movsb
xor
sub
sbb
adc
add
or
xchg
loopne
aam
les
mov
movsb
les
sbb
xor
and
adc
adc
or
orl
xchg
enter
lret
mov
or
xchg
shlb
mov
or
xchg
fsubs
icebp
out
lods
repz
gs
pop
fdivp
xor
push
stc
repz
sti
mov
lock
movsb
repnz
mov
or
xchg
stc
movsb
cli
fchs
test
scas
adc
or
jns
dec
lds
mov
mov
lds
adc
or
jns
dec
xor
mov
in
ror
out
inc
call
stos
shr
mov
mov
stos
nop
into
mov
mov
lock
mov
mov
mov
mov
mov
mov
sahf
cmp
aaa
lock
xor
shrl
pop
test
ja
and
add
sbb
pop
lock
adc
rorl
push
and
cmpps
es
mov
dec
mov
mov
mov
mov
and
out
fisttps
enter
enter
enter
iret
adc
fldenv
fs
aam
rcrl
rclb
iret
dec
into
fs
int3
mov
leave
mov
fs
mov
roll
lock
adc
dec
lret
jmp
add
int
cli
lea
ficompl
ret
test
cld
mov
scas
out
pop
fnstenv
xchg
call
and
push
sub
cmpsb
xchg
jae
push
cmp
push
scas
add
pop
adc
negb
fs
out
adc
add
mov
mov
call
mov
lods
addb
dec
mov
xchg
sarb
dec
mov
adc
mov
scas
cmc
sub
nop
or
jp
lods
in
jge
pop
aas
lea
push
xor
cli
cmc
dec
sarb
xorl
jo
mov
or
movsb
inc
enter
mov
or
xchg
ja
clc
enter
mov
or
jb
xchg
mov
or
dec
test
pusha
adc
call
insb
xchg
les
mov
rorb
or
adc
mov
or
enter
mov
les
or
xor
pop
enter
mov
or
lods
movsb
pop
enter
nop
jl
mov
or
movsb
sub
push
adc
push
cld
push
or
xchg
push
movsb
fmul
push
adc
mov
or
dec
or
xchg
dec
mov
or
add
dec
enter
mov
movsb
inc
enter
mov
or
adc
addb
mov
addb
xchg
les
push
or
xchg
cmp
cmp
adc
cmp
hlt
adc
mov
or
xchg
mov
ss
pop
inc
mov
or
xchg
xor
mov
or
xor
inc
imul
pop
pop
cmp
shlb
sub
popa
jl
pop
push
mov
aas
bound
xor
lret
cwtl
mov
cmp
xchg
inc
dec
sbb
inc
shlb
inc
inc
arpl
xor
stc
xor
pusha
loope
lods
xor
and
pop
xor
aas
cld
sub
mov
lods
dec
jne
pop
mov
insl
xor
jbe
pop
fiaddl
xchg
test
push
push
ficomps
enter
mov
pusha
and
push
cmp
inc
push
xor
xor
pop
inc
rclb
imul
push
xor
daa
je
loope
push
ss
add
mov
scas
enter
test
jl
insl
inc
adc
lret
sub
mov
lods
dec
push
and
mov
movsb
jmp
xchg
movsb
pop
nop
test
and
leave
mov
mov
and
dec
push
mov
xor
ret
sbb
adc
adc
and
sub
jp
dec
mov
pop
shl
out
outsb
mov
push
lods
push
jo
adc
cmp
jbe
adc
es
cmp
sub
aam
jnp
inc
add
push
arpl
and
and
ljmp
cli
call
fsubs
inc
and
lods
jb
inc
mov
or
sarb
stos
dec
imul
data16
add
xor
push
or
fcoms
nop
and
push
cmp
je
push
cmp
fprem
lret
lock
test
add
xchg
adc
sbb
std
push
sarb
and
repnz
jle
out
sahf
aam
dec
sub
popf
dec
add
xor
dec
out
cwtl
test
jnp
repnz
rorb
mov
test
pop
lods
mov
and
xchg
dec
enter
xchg
movsb
or
clc
and
pop
dec
sub
add
add
xchg
inc
adc
add
or
or
cmovo
dec
cmpb
mov
in
sbb
or
nop
sbb
cmp
mov
cwtl
aam
push
or
loopne
xor
jnp
and
xchg
mov
aaa
jns
xor
sub
insb
cmp
add
nop
and
xchg
fs
jnp
cmp
shlb
mov
cmp
mov
mov
pop
or
aaa
enter
xchg
inc
push
dec
jge
cmp
fisubrl
insl
push
les
repnz
orb
push
pop
idivl
sbb
mov
push
enter
enter
mov
fs
add
fs
ss
lods
xor
mov
push
sahf
dec
sbb
jl
out
hlt
mov
push
lahf
cwtl
adc
bound
xchg
fsts
inc
sub
sub
jl
cmp
ror
mov
xor
adc
loop
xchg
gs
cmp
mov
lds
insl
hlt
mov
push
cmpsb
push
leave
cli
adc
add
cmp
ja
mov
test
inc
cmpsl
sbb
loopne
xor
mov
aaa
imul
push
sub
or
xchg
out
in
adc
repnz
movsl
rol
jl
push
dec
sub
add
xchg
movsl
popa
test
arpl
je
inc
cmc
and
gs
js
or
movsl
scas
lea
mov
push
aam
cmpsl
mov
and
push
cmp
imul
mov
hlt
jg
jmp
dec
xor
jae
xchg
push
mov
pop
fwait
ja
jmp
loopne
xor
add
cmp
les
lea
lea
cmpl
adc
sbb
jo
cmp
xor
mov
scas
jb
cltd
fiaddl
ficoms
fbld
or
push
hlt
inc
mov
je
push
push
or
inc
mov
inc
add
dec
push
ret
aas
insl
add
or
inc
sbb
cwtl
fs
cmp
outsb
xchg
mov
into
rcr
mov
arpl
lods
push
jge
push
sbb
mov
inc
mov
adc
cmp
je
cwtl
in
cmpsb
call
mov
dec
movsb
jb
mov
pushf
xorb
sbb
mov
in
and
mov
in
mov
hlt
pop
mov
andb
nop
stos
mov
ret
add
mov
mov
xchg
rorb
mov
aad
rclb
mov
out
cwtl
nop
cmpsb
notb
sar
xor
xorb
cmp
jo
ljmp
mov
pusha
xchg
cltd
sub
and
lock
nop
loopne
and
xchg
jg
cli
and
nop
in
xor
loopne
shlb
push
add
pop
cmp
dec
and
nop
inc
pusha
mov
inc
dec
shlb
dec
xor
sbb
js
pop
test
aaa
inc
cmpsb
rcrb
push
rorb
mov
push
cld
enter
mov
aaa
adc
ret
lcall
mov
push
add
pop
add
add
mov
mov
mov
ret
adc
add
test
ret
cmc
loopne
in
in
push
loope
das
pop
jecxz
in
sbb
sub
xchg
dec
enter
push
sub
mov
xchg
imul
or
pop
scas
popf
sub
jmp
mov
scas
mov
test
in
fdiv
pop
sub
in
in
push
lods
xchg
xlat
pop
fwait
push
imul
mov
rcrb
shrl
adc
stos
scas
fidivrl
adc
mov
push
push
mov
mov
loop
mov
mov
adcl
sbb
jmp
mov
mov
add
lods
ret
cld
jo
lret
int3
or
iret
rcl
rcl
aam
aad
xlat
fcomp
ret
addr16
daa
pop
jne
mov
push
mov
mov
mov
xchg
mov
mov
mov
ret
cmp
hlt
in
lods
sahf
aam
loope
repz
cmp
lds
fildl
ss
mov
hlt
int
add
repz
mov
and
std
cmpsb
pop
xchg
clc
push
scas
in
mov
xchg
in
mov
in
movsb
cmc
in
mov
imul
in
add
out
enter
mov
ret
into
fnstenv
add
in
inc
stc
daa
call
xchg
movsb
repnz
shl
loop
pop
ret
lea
andb
stos
lods
xchg
ret
jecxz
js
pop
mov
daa
lret
add
fnstcw
call
inc
mov
scas
mov
lret
leave
rcl
leave
aam
mov
int
pop
scas
push
dec
sub
aaa
add
inc
ja
fs
push
lret
or
jge
mov
es
mov
cmpsl
inc
addr16
cmpsb
mov
cmp
lret
testl
cmp
adc
inc
movsb
push
mov
bound
aam
dec
out
xchg
decb
cmp
loope
stos
mov
and
rclb
xor
je
aad
add
aas
push
stos
push
rcll
push
int
mov
xchg
andb
outsl
cmpb
sbb
aam
nop
and
test
add
mov
and
loop,pt
nop
pop
dec
into
lcall
jle
cmpl
subb
mov
mov
cmpb
jmp
xchg
xchg
lea
movsb
pushf
xchg
mov
addl
mov
xchg
xchg
cltd
fwait
pushf
std
nop
outsl
daa
xor
xchg
rolb
xchg
mov
movsb
scas
mov
cmpsl
int3
mov
subb
mov
lods
test
cmpsb
fadds
rcrl
push
xchg
or
out
nop
xchg
movsb
rcrl
xchg
test
mov
mov
xchg
sbb
enter
clc
dec
xchg
mov
push
shr
adc
pop
imul
test
loopne
mov
mov
add
mov
mov
or
clc
cltd
and
pop
mov
mov
mov
int3
data16
add
jge
test
int3
int
lea
xor
ret
lock
and
rolb
or
mov
mov
js
and
or
add
sti
jno
ss
mov
test
push
xchg
pop
xchg
mov
cltd
ja
mov
movsb
int3
movsb
pushf
shlb
in
cltd
mov
push
call
mov
rorl
mov
out
dec
or
or
xchg
sbb
cmp
mov
movsb
ret
fadd
adc
insb
pop
cwtl
lret
addl
sbb
xchg
andl
adc
mov
daa
dec
push
test
sub
int3
cltd
push
dec
int3
xor
enter
clc
cltd
mov
adc
outsl
xchg
pop
mov
or
cwtl
pop
ss
adc
movsb
int
and
rolb
mov
notl
in
int
lea
hlt
adcb
shl
xchg
adc
push
add
test
sahf
stos
shl
or
add
push
pushf
or
movsb
test
mov
jge
sahf
jns
jge
mov
mov
lods
cld
es
popa
les
mov
lret
push
adc
adc
loopne
jmp
clc
shrl
add
and
push
sub
int3
mov
pushf
and
outsb
nop
push
int3
ret
xchg
mov
mov
cld
adc
iret
adc
fisttpll
mov
loopne
lods
and
call
dec
aam
xchg
int3
call
mov
fmull
test
mov
mov
xchg
ficoml
test
adc
lret
add
adc
jnp
and
out
or
xchg
cmp
mov
lea
lods
leave
sbb
jns
lods
cld
sub
sbb
in
inc
cltd
aam
clc
mov
call
rol
and
mov
sbb
movsb
mov
cmp
insl
or
pop
aas
or
mov
xor
mov
xchg
fsubl
lods
or
or
dec
xchg
jb
out
stos
out
mov
nop
out
rep
insb
jecxz
clc
pop
fistps
test
mov
aas
sub
mov
and
pushf
inc
out
xor
push
ds
cmp
adc
bound
popa
roll
into
adc
sahf
dec
mov
inc
test
into
arpl
adcl
sbb
mov
pop
jl
mov
jno
dec
mov
dec
rcrl
mov
roll
rol
mov
and
das
xchg
rol
mov
xchg
fs
repnz
mov
push
adc
mov
test
xor
or
enter
faddl
test
aam
xchg
in
xchg
arpl
add
push
dec
mov
movsb
fs
loop
add
int3
mov
mov
dec
sbb
aam
rcll
cld
dec
mov
xchg
push
in
mov
dec
mov
sbb
push
shlb
mov
push
movl
fs
cmpb
fs
fisubl
ret
fs
repnz
push
ljmp
fs
lret
pushf
test
mov
dec
rol
mov
imulb
repnz
sub
xchg
push
dec
fs
idivl
fs
sahf
mov
mov
fwait
fs
repnz
mov
push
mov
adc
int
orb
add
mov
loope
mov
andl
cltd
push
adc
fs
jmp
pop
arpl
or
fs
aad
les
setno
dec
mov
dec
cld
in
movsl
mov
add
mov
adc
jb
mov
adc
dec
lods
fs
lea
jp
call
inc
testl
jecxz
mov
or
gs
mov
outsw
adcb
dec
fwait
fs
cld
sti
push
mov
repnz
mov
or
xlat
mov
fs
dec
mov
adc
dec
xchg
mov
adc
pushf
mov
out
fs
repnz
iret
cmpsl
jle
addb
and
lahf
dec
adc
push
jb
mov
dec
jns
lahf
dec
imul
adc
jl
vmwrite
dec
and
adc
xor
dec
dec
jle
sub
sbb
cmp
movl
jl
pcmpgtb
mov
jb
mov
pcmpgtb
jmp
dec
jnp
adc
daa
pcmpgtb
mov
dec
aaa
jle
ja
dec
pcmpgtb
jmp
dec
pop
jle
aas
jb
mov
rcl
mov
xchg
shrl
nop
xchg
sar
or
mov
frstor
xchg
fcoms
mov
mov
adc
inc
pop
mov
nop
loopne
rolb
cltd
les
xchg
test
mov
mov
lea
pop
scas
jg
subl
adc
adc
or
jns
dec
ds
out
sub
xchg
les
hlt
jmp
aam
enter
and
ficoml
lods
sbb
push
xchg
jecxz
xchg
mov
mov
into
movsl
in
insl
or
arpl
fcoms
iret
and
mov
shr
in
lock
sbb
xchg
mov
fisubrs
xor
call
scas
cwtl
cli
mov
mov
cwtl
sbb
xor
mov
adc
rcrb
jle
cwtl
mov
loope
scas
call
jmp
sub
pop
dec
mov
cwtl
add
repnz
repz
xchg
lock
cwtl
fs
in
fstpt
shl
repz
inc
popf
jecxz
fnstsw
popa
enter
icebp
mov
push
aam
repnz
in
sub
adc
daa
cwtl
loopne
jmp
out
stos
rclb
xchg
repz
pushf
xor
xchg
adc
jmp
testb
out
fmul
cli
int3
mov
pushl
das
rolb
hlt
repnz
flds
mov
and
hlt
jmp
mov
ret
in
mov
repz
ret
enter
insb
pop
enter
enter
int3
leave
sbb
mov
in
loope
and
out
dec
or
jae
out
je
add
je
sbb
cmp
or
aad
vaddsubps
fidivl
ret
lds
into
inc
addb
xchg
sbb
lcall
gs
imul
push
xchg
aad
jae
lock
into
mov
fcom
leave
ror
clc
push
stos
rol
leave
js
cmp
movsb
lock
mov
lock
movsb
cli
adc
stos
mov
cli
cs
cmp
loop
fwait
sahf
cwtl
int3
leave
xchg
add
out
mov
mov
stos
jecxz
jmp
mov
rcll
in
lds
jg
xor
lock
in
clc
enter
out
cmc
test
inc
mov
sbb
mov
xlat
mov
aaa
test
lods
mov
aam
push
aaa
mov
inc
fs
or
mov
negb
in
mov
lock
pop
sbb
iret
int3
sarb
adc
movsl
inc
repnz
and
rolb
inc
mov
fcomps
loop
dec
cmp
inc
hlt
dec
mov
mov
inc
je
test
mov
jmp
repnz
mov
ret
fistpl
pop
mov
xrelease
test
adc
out
idivl
out
inc
in
xchg
adcb
inc
jg
mov
jno
movsb
gs
roll
mov
jo
mov
test
sbb
ds
into
ja
fcoms
xorl
adc
sbbl
inc
fwait
add
aam
nop
pop
int3
add
mov
mov
dec
enter
mov
or
xchg
sbb
adc
or
cld
mov
or
xchg
call
or
xchg
shlb
mov
mov
or
mov
pop
or
movsb
cmp
jl
or
test
cwtl
xchg
test
das
adc
mov
xchg
adc
mov
sbb
mov
lret
call
mov
in
bnd
mov
es
rcl
mov
cld
dec
in
cwtl
in
enter
mov
test
xor
add
add
or
and
adc
lock
daa
stos
aaa
and
mov
xchg
mov
les
loope
add
mov
pop
mov
and
pusha
jl
sar
mov
mov
inc
and
mov
jle
shl
pop
mov
shl
mov
lcall
lcall
scas
enter
lods
inc
fildll
mov
inc
push
pop
pop
pusha
sarb
mov
sbb
push
stc
or
push
lret
mov
adc
adc
jb
sahf
pop
mov
lret
or
dec
dec
dec
movsb
xchg
nop
dec
mov
shlb
push
nop
ret
mov
nop
and
in
xchg
les
mov
les
cwtl
or
xchg
cltd
movsb
mov
add
pushf
or
clc
xchg
enter
call
jl
adc
inc
mov
test
mov
andb
cmp
rol
pop
sbb
sbb
sbb
pusha
and
lock
addl
lds
lods
lock
mov
loope
fs
fwait
mov
call
dec
jne
ret
mov
push
movl
fs
in
sub
sub
clc
fmull
aam
lahf
enter
mov
or
enter
mov
or
enter
mov
or
les
or
pushf
movsb
push
mov
or
xchg
movsb
dec
enter
mov
or
xchg
movsb
movsb
xor
je
out
js
fisubs
movl
adc
dec
test
sahf
lret
xchg
lock
or
mov
fistps
lock
mov
data16
cmpsb
xor
xchg
cltd
cmp
dec
enter
mov
or
sahf
movsb
mov
mov
or
enter
nop
xchg
xchg
mov
or
xchg
mulb
mov
or
lcall
fcmovb
cli
decl
sbb
push
adc
jle
sahf
xchg
les
loop
test
adc
mov
or
xchg
add
mov
nop
push
ficoml
sarb
addl
into
xchg
test
lret
dec
test
je
dec
enter
ret
call
adc
add
loop
mov
inc
aam
scas
mov
out
xbegin
dec
mov
sub
lret
pusha
loope
nop
and
in
adc
mov
imul
mov
fwait
lods
fstl
testl
rcl
aam
ja
rol
sarb
test
or
mov
dec
pushf
je
mov
movsb
fxch
notl
push
mov
or
iret
in
adc
push
cmp
xchg
jl
mov
mov
xchg
add
mov
mov
cmpsb
push
bound
and
push
xlat
call
sbbl
mov
test
mov
add
inc
lods
movsb
mov
push
sbb
ds
mov
aas
mov
push
mov
and
dec
jbe
mov
jo
xor
sub
push
fnstsw
sbbl
pusha
icebp
push
push
adcb
das
push
js
cmpl
xchg
cmovl
cmp
mov
jg
lahf
clc
cld
cli
sub
pusha
or
add
cmpb
sub
cmp
jmp
andb
cld
ret
orb
jns
jnp
sub
mulb
jb
test
les
js
and
inc
jp
imul
push
jae
shlb
adc
dec
inc
adc
cltd
arpl
lea
mov
add
push
xor
enter
fs
adcb
mov
sarl
fnstsw
or
adc
jg
es
mov
or
loope
jge
or
sbbb
or
out
sub
and
pop
addb
int3
dec
sbb
mov
loopne
movsl
cmc
adc
dec
push
test
mov
lock
mov
out
xchg
add
inc
push
lods
in
andl
aaa
push
jno
push
mov
add
es
das
test
mov
mov
push
adc
mov
jge
dec
loope
xchg
testl
inc
ds
adc
dec
movlps
dec
xchg
mov
out
adc
lds
jle
movsb
mov
mov
cli
hlt
adc
inc
xor
cld
xchg
mov
outsb
scas
or
add
js
imul
ljmp
stos
inc
std
sub
cmpb
push
pop
aad
and
xchg
testl
mov
cli
jecxz
movsl
ret
mov
sub
mov
add
pop
cmp
jge
mov
mov
push
addl
sbbb
mov
scas
mov
push
mov
adc
mov
inc
xlat
pop
and
xor
xchg
daa
rolb
nop
lods
movsl
leave
andb
iret
shrl
dec
sti
jmp
psubusw
cmpb
sahf
push
addr16
adc
mov
cwtl
xchg
lret
in
jge
comiss
fcompl
dec
adcb
pop
es
call
pushf
inc
lea
test
inc
mov
movl
fwait
pop
enter
lock
mov
out
lret
xchg
stc
test
inc
sbb
pop
xchg
jae
hlt
add
test
lea
rclb
fwait
rcll
mov
xchg
mov
out
rcll
mov
or
mov
mov
clc
mov
inc
int3
inc
xchg
stc
mov
mov
cli
mov
and
xchg
sti
mov
mov
cld
mov
fidivrs
inc
inc
dec
mov
mov
mov
mov
out
mov
jb
movsl
add
mov
stos
adc
or
mov
pusha
rcrl
dec
cld
nop
ret
ljmp
lds
xchg
repnz
jl
adc
push
cmpsl
aam
mov
in
nop
xchg
mov
jl
push
xchg
jmp
xchg
out
pusha
iret
pop
adc
jl
or
mov
in
ja
test
test
and
sahf
adc
lahf
aaa
ret
cmp
mov
test
jb
scas
mov
jge
ljmp
xchg
lret
mov
int3
mov
scas
and
push
inc
test
das
dec
mov
fsubl
cli
cwtl
lcall
push
bound
xchg
jge
pushf
scas
loop
ret
pushf
mov
xchg
into
jge
pushf
mov
nop
int
mov
cmp
lret
push
dec
mov
xchg
mov
out
movsl
repnz
xor
orb
leave
mov
dec
pmullw
arpl
xlat
test
in
movsl
addr16
fstps
sub
ret
and
inc
xchg
movsb
lock
sub
lock
icebp
stos
add
popf
enter
or
mov
arpl
repz
int
popa
scas
arpl
stos
nop
mov
mov
cmc
nop
shlb
mov
not
shlb
adc
add
fmuls
mov
cld
or
or
or
cmp
out
xchg
subl
sar
repnz
pusha
movw
pusha
lea
jne
cmp
pushf
mov
rcl
mov
btr
rcl
call
lea
call
push
jmp
mov
dec
stos
sub
test
scas
push
mov
push
mov
fldenv
xor
adc
cmp
push
sbb
dec
jp
fwait
aad
dec
jle
sub
push
rcrl
insb
std
adc
movsb
cmp
push
jl
idiv
and
fisttps
cmpsl
popf
mov
cmp
adc
xchg
mov
cmp
sbb
rcr
inc
add
adc
or
std
popa
leave
shll
pop
xor
inc
push
out
stos
mov
outsb
xchg
add
sub
lcall
adc
lret
push
adc
ret
jg
in
add
jge
push
les
aaa
outsl
out
or
in
lret
fdivl
jle
push
lret
ret
sub
push
xchg
or
xchg
pop
add
mov
cli
add
addb
imul
int
clc
lock
ror
sub
push
mov
xor
mov
shlb
test
mov
iret
movsl
xor
or
in
popf
inc
xchg
fcoml
out
jle
sbb
jae
mov
repz
or
push
mov
dec
hlt
fmuls
jmp
ljmp
arpl
addl
aaa
mov
mov
xor
aad
sub
cmp
push
rclb
cmp
pusha
mov
lock
adc
daa
sub
mov
mov
imul
jl
lret
js
dec
sbb
hlt
cmovl
xor
lods
in
pop
std
sub
add
or
jp
or
dec
jo
in
jno
imul
jmp
xor
cs
dec
test
adc
cwtl
mov
adc
xchg
cmc
add
bound
and
cmpsl
loope
enter
es
mov
popa
and
scas
cli
into
add
add
ja
sub
aas
mov
sbb
mov
and
arpl
test
pushf
movb
movl
pushf
call
mov
or
cltd
dec
subl
mov
adc
enter
je
lds
outsb
lcall
push
dec
and
cmp
mov
enter
popf
inc
clc
sub
lods
adc
inc
in
inc
call
js
daa
adcl
hlt
push
out
shrl
arpl
shrb
pop
cmp
movsb
mov
pop
xor
lods
les
dec
dec
jle
sti
inc
xchg
push
imul
sbb
iret
mov
popa
leave
adc
sbb
xchg
pusha
es
xchg
pop
mov
fs
inc
push
and
dec
lods
cld
and
inc
aas
pop
movsb
not
leave
jbe
jne
mov
cmp
aam
imul
pushf
sarl
hlt
outsb
or
jae
or
xor
mov
pusha
xorl
sbb
push
adc
cmp
push
jno
sar
int3
cwtl
mov
call
and
adcl
or
jmp
jnp
data16
negl
push
lret
mov
mov
xchg
cmp
lret
jle
popa
pop
in
mov
add
adc
pop
inc
out
js
inc
aaa
mov
sbbl
mov
sbb
sbb
mov
xor
cmp
lahf
fwait
loopne
mov
gs
or
push
gs
imul
shl
enter
adc
fisubs
sub
mov
fs
add
mov
sub
stc
das
pop
ret
daa
in
insb
inc
mov
inc
aas
push
mov
jle
in
shll
cld
cmp
popf
jmp
dec
inc
sub
cmp
adc
dec
mov
push
jo
ficoml
and
daa
xor
jge
xchg
push
pop
dec
adc
pop
xlat
lcall
xchg
mov
pop
insl
cmp
mov
lds
outsb
pushf
xchg
inc
cmp
ret
lea
dec
cmp
mov
cmp
cmp
and
adc
xchg
xor
sbb
jno
mov
test
fwait
into
dec
int
test
cmp
test
cmpsl
dec
in
hlt
gs
cli
into
lods
sub
pop
js
adc
fsubr
lahf
mov
rol
divb
sub
xchg
or
loopne
cmp
adc
cwtl
cwtl
and
xchg
lock
lahf
xor
add
ret
fidivrl
sbb
cmp
test
outsb
movsb
push
pop
mov
negb
xor
cld
sub
movsl
fcoms
scas
aad
adc
lds
fwait
aad
mov
add
neg
lods
int
ljmp
clc
gs
add
cs
lret
dec
outsb
cmp
sbb
sbb
xor
sub
add
sti
jae
addr16
lret
pop
fcmovu
nop
or
sub
dec
popa
pop
jg
push
lds
sbb
push
into
stos
or
rcl
push
fstpl
test
imul
dec
je
push
mov
test
adc
lock
xor
or
xchg
scas
fcmovb
imul
adc
push
sahf
mov
sbb
test
int3
or
inc
sarl
push
jnp
test
scas
aam
mov
les
mov
sti
sbb
out
shrb
imull
inc
push
popw
inc
jge
aas
xor
sub
movsb
shlb
dec
mov
out
insl
mov
lock
stc
popa
mov
sub
fnstcw
push
jno
ret
fcomip
inc
jmp
xchg
xorb
or
addl
in
clc
mov
sbb
sub
daa
outsl
xlat
das
and
outsl
ja
xchg
testb
mov
mov
ljmp
jg
mov
pop
mov
movsl
sub
gs
das
daa
sbb
push
out
and
sub
out
in
data16
iret
jecxz
nop
addr16
pop
icebp
es
mov
popa
cwtl
push
sbb
and
in
incb
sbb
mov
outsb
addr16
bound
fucomip
mov
frstor
fwait
pop
xchg
pop
jno
fcmovnb
xlat
sub
mov
sub
into
mov
sbb
data16
push
popf
xchg
add
dec
shl
clc
fisubrl
cmpsl
rcll
dec
push
add
aas
cmp
mov
pop
adc
jnp
sbb
lret
lcall
pop
dec
ja
sub
movsb
js
xor
in
sarb
out
popa
sub
lret
push
out
sub
mov
jne
dec
rcr
mov
dec
jmp
loope
icebp
repz
mov
sbb
daa
mov
outsl
movsl
js
imul
pop
rorb
adc
movsl
sbbl
jnp
insl
addl
xor
cs
in
sub
in
mov
data16
xchg
daa
test
dec
mov
mov
cli
shll
or
test
hlt
and
js
cmp
sub
lahf
lret
das
pushf
or
xor
mov
nop
imul
add
push
add
movsb
mov
lods
addr16
cmp
test
ret
out
xchg
mov
imulb
jns
xor
cwtl
xlat
mov
or
popa
cmc
out
bound
jne
testb
push
mov
adc
out
daa
or
jo
dec
dec
lahf
inc
jb
pop
and
mov
lret
ret
fistl
dec
and
push
incb
cmp
scas
sub
and
shl
sub
aad
fldt
push
inc
jbe
je
cmp
or
fstps
sub
andl
repz
jg
pop
stos
mov
out
xor
lock
xor
out
sub
in
out
add
adc
inc
cltd
and
add
test
pop
pop
adc
sbb
xchg
jns
bound
scas
pop
jno
xchg
test
jl
push
imul
sarb
push
mov
push
fyl2x
pop
xor
jne
loopne
mov
mov
mov
add
mov
jecxz
pop
push
push
stc
or
mov
cmp
jmp
cmp
cmp
lods
ret
or
sub
rclb
mov
adc
add
mov
daa
pextrw
xor
fcmovnbe
lock
sti
scas
icebp
add
jo
mov
mov
aam
popa
jne
loop
adc
clc
loopne
shl
mov
loop
pop
pop
aad
sub
jbe
mov
cmp
cwtl
mov
mov
push
jne
lret
ret
cmp
scas
enter
sbb
ffreep
mov
test
hlt
adc
adc
push
loope
lret
sahf
add
xchg
popf
in
xchg
repnz
mov
roll
cmp
xchg
jno
call
dec
mul
in
cld
cmp
sarb
cmp
mov
outsb
pop
hlt
popa
xchg
jge
dec
insb
sbb
pop
inc
xchg
stos
cs
mov
scas
testb
cmpsb
stos
mov
ljmp
mov
add
mov
subb
imul
fs
sbb
gs
or
mov
sbb
bound
xor
dec
adc
fs
or
dec
imul
pop
repnz
jb
xchg
mov
mov
cli
xchg
adc
test
mov
mov
lea
sub
mov
jmp
mov
imul
dec
std
dec
icebp
scas
out
roll
mov
test
xor
add
cmp
dec
in
jne
mov
adc
adc
mov
adc
mov
fcmovu
hlt
stos
mov
push
jmp
pop
jnp
pop
lock
xchg
inc
nop
not
mov
jno
dec
insl
add
xchg
stos
push
and
jno
mov
imul
xor
aaa
add
add
mov
sub
int
lds
imul
lret
cs
mov
imul
stos
mov
jne
xchg
mov
das
dec
shrl
xchg
data16
in
inc
inc
dec
stos
movsb
in
push
loop
xor
popf
hlt
loopne
mov
daa
mov
nop
inc
cmpsb
insb
pop
adc
dec
les
je
jbe
cmp
scas
adc
mov
or
iret
and
mov
xchg
setge
mov
scas
jp
dec
cld
cld
test
cmp
xor
fstps
nop
int3
in
xor
in
xor
push
lds
movsl
jno
fistl
fcom
out
pusha
negb
xor
pop
dec
jecxz
jge
push
cli
test
std
push
fistpl
jns
sbb
cmp
in
and
or
pop
xor
push
xor
and
pop
push
dec
lods
daa
mov
stos
jg
dec
jecxz
mov
inc
lcall
scas
xchg
call
int
lcall
mov
pop
jne
pop
fnstcw
inc
icebp
mov
cli
sbb
fbld
mov
jg
popf
popf
and
cmp
je
inc
scas
adcl
es
cmp
aad
out
dec
add
push
aas
test
or
jbe
mov
cmc
repz
sub
insl
lahf
xchg
fwait
dec
xor
dec
cltd
cmp
aam
rcrb
dec
outsb
cmp
std
add
mov
and
into
mov
fiadds
pop
sub
inc
fcomi
or
pop
pop
lret
ret
imull
movsb
sbb
call
push
xchg
pop
xchg
test
mov
mov
aam
sub
lds
fs
adc
inc
inc
iret
enter
mov
iret
arpl
jns
ds
lock
push
mov
popa
jge
sub
jns
pop
dec
out
movsb
sbb
into
xor
xchg
movsl
in
cmpl
sub
fimull
cmp
loop
repnz
jmp
xchg
inc
lahf
lahf
test
xor
mov
pop
mov
outsl
fidivs
mov
add
les
pushf
in
sbb
mov
fwait
push
insl
dec
aas
xchg
or
cmpsb
mov
shrb
sub
dec
push
cmpsb
in
mov
scas
xor
mov
push
sti
lock
xchg
out
call
and
loopne
les
sbb
sbb
repnz
mov
mov
push
leave
mov
out
cli
push
push
sysenter
jge
dec
in
jp
mov
inc
or
cld
mov
or
adc
dec
or
jl
add
xchg
cmpsb
pop
movsb
cmp
pop
adc
xchg
mov
sbb
fnstsw
nop
mov
sarb
insb
lods
pop
dec
lea
ljmp
leave
add
push
cmp
movsl
test
fndisi(8087
and
xchg
pop
test
insl
sbb
bound
push
mov
or
lret
jmp
fisttps
xchg
push
and
push
idivl
out
push
ds
lahf
mov
lock
fidivrl
aas
movsl
jno
push
push
std
test
ficoml
jnp
shll
adc
cmc
jl
hlt
movsb
ljmp
adc
or
xor
and
push
inc
mov
sbb
loop
add
mov
frstor
imul
dec
jecxz
int
inc
xor
cs
lods
addr16
jbe
icebp
and
xor
sbb
mov
pop
xor
cmp
xchg
mov
shll
cmpsl
sbb
in
shlb
lahf
decl
imul
jg
jb
aaa
test
ret
sarl
les
xchg
pop
jmp
iret
cmpsb
and
data16
std
adc
jg
push
add
xor
xchg
xchg
fdivrs
aad
push
dec
sub
in
push
popf
xor
sbb
jle
pop
sbb
addr16
sub
sub
cwtl
and
xlat
adc
pusha
ljmp
sub
pop
aam
repz
mov
pop
xor
jecxz
cmp
xchg
loopew
sbb
mov
shlb
cmp
or
cltd
sub
call
mov
stos
iret
push
mov
jmp
cmp
stos
add
and
repz
add
mov
xor
loopne
and
cli
or
call
cmp
and
cmp
inc
lret
adc
test
loope
rcll
lret
fsubl
out
mov
add
or
mov
mov
jmp
xchg
and
pop
ret
fidivrs
clc
pop
aad
roll
sbb
call
push
push
cmp
pop
repz
out
test
xchg
and
out
add
aaa
xchg
pushf
mov
das
fistpll
or
add
mov
xchg
fimull
mov
je
xor
push
imul
push
and
inc
add
mov
pop
pop
pop
call
push
stos
lret
aam
pop
and
mov
mov
lods
repz
mov
xorb
stos
add
movsb
inc
test
aaa
xchg
lcall
fcmovnbe
jmp
dec
jnp
and
xlat
int
lcall
push
push
out
loopne
pop
fcmovnu
ret
xlat
test
pop
ja
jg
and
pop
or
imul
push
shl
xor
leave
or
pop
and
stos
add
cs
arpl
loopne
mov
enter
xor
and
les
dec
sbb
mov
popa
dec
push
int3
sbb
and
and
icebp
and
and
scas
xor
jl
rol
ja
ds
mov
ret
adc
xchg
lods
enter
insb
cmp
or
dec
xor
inc
fdivrs
mov
push
mov
jbe
sbb
int
mov
insl
xchg
ja
xchg
dec
mov
iret
sub
cmp
inc
dec
sti
mov
dec
jb
jbe
ret
push
and
popa
scas
insb
or
mov
dec
dec
mov
mov
jae
mov
xor
jns
jecxz
xlat
mov
cwtl
hlt
pop
popa
popa
gs
daa
std
std
addb
lahf
xchg
inc
lods
xor
push
iret
stos
sbb
push
pshufw
jle
xchg
add
cmp
pop
cmp
negl
negl
cmp
mov
ret
xchg
mov
mov
dec
pop
mov
stos
popl
mov
xlat
mov
call
or
mov
mov
xchg
push
loop
out
dec
lret
ss
testb
push
push
lahf
pusha
cli
xchg
out
repnz
add
stos
lahf
into
cmp
clc
cld
repnz
sarb
sub
aad
mov
loope
cmc
ret
pinsrw
sbb
mov
fidivs
xchg
push
push
sub
lret
cmp
jmp
movsl
cltd
adc
or
gs
adc
out
sti
mov
cmp
mov
xchg
fdiv
outsb
add
arpl
andl
repnz
sub
push
ljmp
out
movsb
adc
enter
pop
add
adc
pop
ret
lahf
bound
or
inc
cltd
dec
jl
jne
xchg
test
and
inc
mov
xor
bound
nop
in
pop
pop
lcall
sbb
enter
add
mov
repnz
push
sub
dec
data16
mov
push
mov
mov
lds
jmp
sbb
sbb
stos
cmc
cli
enter
mov
imul
mov
aaa
imul
loope
sbb
dec
lret
lret
push
cmpsl
push
fistps
in
add
test
dec
in
push
aas
sbb
add
xchg
call
add
sti
xchg
mov
mov
jo
adc
jne
jl
int
repz
push
or
cltd
mov
popl
pushf
bound
add
out
or
scas
in
imull
scas
sbb
in
loopnew
ja
xor
fisubrs
push
stos
cmp
out
aam
mov
inc
sub
adc
jno
aaa
fisttpll
outsb
mov
lea
push
dec
cli
jl
js
stos
les
pop
pop
cltd
mov
sbb
dec
cmpsl
xor
ds
and
es
and
sbb
lock
arpl
popl
clc
fdivrs
or
add
xchg
dec
push
sbb
ja
and
or
lret
dec
sub
aad
mov
inc
xchg
mov
movsb
hlt
test
xchg
jge
cmp
dec
hlt
push
inc
pop
ret
sub
jo
shlb
sub
ds
mov
fstpt
repnz
or
cs
jo
rep
icebp
pop
pusha
aas
loop
std
xor
addb
mov
mov
ret
pop
sub
loope
outsb
hlt
pop
pop
inc
adc
iret
enter
jmp
sub
fstpl
sub
xchg
test
push
xor
ds
test
lock
xchg
or
mov
and
jle
mov
in
xchg
ret
xchg
or
icebp
mov
out
cmc
into
jo
lahf
imul
jbe
imulb
fadds
push
rcrb
call
lahf
mov
xorl
enter
loopne
xchg
xchg
xor
mov
push
pop
push
mov
imul
xor
sahf
sbb
stc
mov
addl
outsb
push
mov
jo
inc
mov
pop
and
xchg
pop
sub
addr16
into
filds
sti
sub
into
test
mov
inc
inc
inc
jl
inc
in
cli
adc
sub
pop
sbb
jb
xchg
mov
fcoml
jecxz
dec
sbb
mov
cmp
push
push
pop
xchg
ret
adc
das
pop
sahf
outsb
dec
and
ret
lods
jge
xchg
lods
xchg
xchg
repnz
nop
clc
shl
add
jns
mulb
outsb
cld
movsb
lret
dec
xchg
add
add
xor
add
pcmpeqd
std
stos
int
ja
pop
add
cmpsb
leave
push
pop
xor
in
cli
push
mov
cltd
or
mov
cli
xor
leave
pop
call
test
out
adc
inc
cmp
xchg
pop
mov
aaa
cmp
repz
mov
fs
sbb
ljmp
int3
aad
rclb
inc
cmpl
inc
xor
pop
nop
xchg
subl
cmpsb
mov
inc
sbb
adc
rol
fdivrp
loope
add
pop
das
jno
out
fcmovb
pusha
mov
pop
inc
in
sbb
repnz
sub
adc
cltd
cld
or
into
int3
xor
pop
mov
xor
iret
aaa
popl
sbb
lcall
jl
push
gs
scas
sbb
mov
loope
ljmp
test
mov
into
mov
push
jb
dec
fs
sahf
pop
sbb
dec
push
bound
pop
xchg
pop
in
xchg
insb
es
dec
out
jb
dec
das
mov
mov
pop
out
jge
push
jle
sub
dec
pop
add
sti
mov
lahf
pop
sub
inc
or
pop
cmc
or
and
lea
fisubrl
rolb
mov
js
insb
mov
movsl
dec
mov
xor
loope
xchg
test
and
test
int3
fsubrs
push
push
pop
adc
dec
cltd
test
lods
cmpsb
lret
mov
push
inc
jae
mov
push
xor
mov
ret
loope
pop
aaa
out
jecxz
xchg
pop
test
or
dec
gs
or
push
in
fcom
call
daa
sbb
jo
ja
sub
xchg
pop
xor
pop
cmpsl
shld
ret
pop
ds
xchg
inc
stc
pop
jnp
shrb
loopne
shlb
inc
push
pop
pop
imul
and
mov
dec
int3
mov
or
fdivr
cltd
mov
or
jmp
mov
pop
add
inc
ljmp
push
push
ljmp
daa
stc
cmp
insb
mov
aad
gs
jns
nop
ret
cmp
mov
inc
mov
lods
push
pop
stos
dec
movsb
or
pop
icebp
frstor
lcall
xchg
mov
insl
and
mov
cli
icebp
inc
jle
loop
pop
push
imul
add
pop
orl
rcl
mov
add
dec
dec
pushf
jmp
jns
mov
out
pop
sbb
mov
jg
jge
shrl
and
jo
mov
je
push
mov
mov
cmpsb
rolb
sbbl
add
mov
sti
popa
sub
and
inc
xchg
mov
and
jecxz
clc
addr16
divb
in
xchg
in
mov
inc
dec
enter
dec
lods
daa
push
nop
sbb
loop
or
cmpsl
sub
test
andb
rcrl
xchg
in
xlat
xchg
shrb
xor
scas
ret
mov
or
xchg
cmpsl
sub
push
out
lahf
les
daa
push
out
gs
outsb
fs
shlb
jg
leave
in
into
je
scas
fwait
xchg
stos
adc
mov
xor
jo
mov
in
loopne
xchg
out
mov
aaa
push
cmp
push
popf
inc
pop
nop
ret
sbb
imul
rcll
mov
push
sarb
gs
push
imul
ret
rcrb
fcmovu
bound
arpl
xchg
xchg
mov
fcomps
mov
enter
test
pop
icebp
jg
or
loope
xchg
out
mov
mov
leave
clc
divb
pop
lock
mov
sub
mov
dec
cs
jecxz
add
fs
and
outsl
pop
pop
fldcw
int
dec
sbb
imul
inc
cmpsl
loopne
ret
iret
pop
neg
aad
imul
mov
loope
loop
mov
push
pop
push
and
leave
aad
imul
mov
or
mov
outsl
push
dec
inc
mov
pushf
dec
ret
mov
les
xchg
pop
aas
outsl
scas
adc
pop
push
jbe
xchg
out
aam
mov
jo
jns
push
loop
hlt
call
push
cmp
mov
add
addr16
add
xchg
mov
fsub
sub
cltd
dec
fistpl
sbb
lret
and
xchg
mov
insb
mov
push
mov
test
dec
xor
xchg
les
jmp
sahf
sbb
cmp
stos
imul
xor
xchg
aam
pop
popa
leave
out
push
inc
mov
scas
je
push
add
stos
mov
mov
cmp
mov
adc
mov
cs
pop
jle
xchg
xor
push
mov
or
push
jmp
cmp
adc
daa
dec
cmp
pop
cmpsl
pop
mov
ret
sub
xor
or
cmp
outsl
jecxz
sub
shl
into
es
push
inc
popf
scas
notl
mov
sbb
les
jge
popa
mov
popa
add
fs
aad
nop
enter
xchg
icebp
mov
fisubrs
mov
fdivl
push
iret
fstpl
sub
jle
push
inc
mov
cmp
in
dec
enter
in
inc
popa
push
xor
and
into
inc
jmp
push
pop
mov
iret
mov
aas
lret
iret
enter
mov
mov
jg
fstps
or
sbb
adc
mov
addr16
pop
mov
adc
mov
jmp
mov
movsl
and
cmp
mov
jae
lds
movsl
test
in
lea
ljmp
es
sub
shl
or
stc
bt
lea
call
mov
push
sbb
xor
test
loopne
cwtl
cmp
mov
aad
jp
loopne
adc
je
addr16
das
test
inc
mov
sub
mov
pop
dec
out
scas
fstps
jecxz
std
add
mov
imul
lock
cmc
ror
loope
adc
sub
mov
insl
inc
dec
enter
cmp
sbb
xor
or
push
jp
cmp
shlb
lcall
and
push
push
testb
lea
sub
test
dec
xchg
shrl
mov
sub
insb
mov
mov
jns
and
push
or
push
lods
ret
mov
fiaddl
xor
mov
into
pop
jle
or
sbb
pop
mov
cmp
aam
cmp
mov
adc
popf
inc
leave
jle
mov
add
addr16
jne
jb
push
popa
insb
jne
inc
add
fs
jne
pushf
stos
mov
push
movl
lea
jmp
mov
sub
mov
pop
push
mov
sbbb
sub
cli
push
ljmp
js
pop
daa
cmpsl
sbb
rclb
dec
jl
jne
fisttps
adc
xor
push
jp
shl
popa
cmpsl
and
fpatan
xor
or
cmp
mov
push
cmp
out
outsb
dec
outsb
push
fsubp
push
out
push
mov
mov
mov
ss
ds
faddp
sub
jecxz
dec
pop
cmpsl
out
lahf
dec
jg
pop
cmpsl
addr16
xlat
arpl
xchg
sbb
pop
insl
jno
les
dec
in
loopne
sub
add
ljmp
cli
inc
inc
loope
cld
test
or
test
jne
push
movsb
iret
jp
lods
push
movsb
rcrb
mov
imul
fidivs
subb
sbb
inc
frstor
call
inc
mov
sub
add
daa
dec
and
push
test
xor
outsb
js
xlat
lods
and
lds
std
test
pop
mov
scas
mov
shl
push
cld
inc
lods
in
fs
lods
add
dec
push
mov
aam
sub
sub
idivb
inc
xchg
mov
outsl
cld
imul
add
dec
jns
out
in
aad
sar
setnp
cmpsl
add
imulb
or
sbb
into
lock
or
sbb
data16
js
jp
bound
loop
ret
jp
dec
push
and
icebp
xor
pop
adc
jae
sub
iret
push
lea
sbb
jge
mov
les
inc
rclb
push
outsl
js
mov
adc
xor
adc
mov
inc
sub
mov
mov
call
sub
bound
movsb
or
adc
rcrl
mov
mov
scas
xchg
enter
mov
xchg
dec
outsb
xchg
jle
jle
out
ficomps
sub
sbb
jge
sub
xchg
push
sti
cld
jg
or
xor
pusha
arpl
jmp
aas
or
pop
gs
fisubrs
jge
push
jmp
stos
mov
jecxz
or
test
jmp
xchg
dec
stos
push
jg
and
test
inc
and
test
push
push
xor
mov
shl
pop
jb
insl
loopne
aad
add
push
scas
fcoml
and
test
mov
dec
enter
movsb
cmp
mov
popf
test
mov
adc
and
or
out
inc
sbb
rcll
mov
sarl
sbb
sub
addl
xor
inc
js
je
xor
xchg
sbb
popa
dec
mov
loope
and
adc
pushf
lea
jns
push
push
lea
jae
pushf
lea
jne
push
push
stos
pushf
lea
jmp
mov
or
sub
push
sbb
and
cmp
sbb
pop
rol
fs
pop
outsl
adc
jae
mov
ss
jbe
push
test
cmpsl
mov
out
push
shrb
mov
pop
lods
dec
pop
jne
outsl
add
xor
add
or
mov
lret
sub
xchg
leave
mov
sub
pop
inc
shrl
pop
cli
ss
cvtdq2ps
pusha
push
sub
in
sub
pushf
mov
in
and
clc
sti
mov
xchg
and
inc
loopne
int
notb
cmp
cmp
add
cmpsl
lcall
adc
mov
mov
ret
shll
jae
xlat
imul
jecxz
ds
adc
adc
push
fstl
insl
xor
lods
push
fldenv
jmp
xor
pushl
popl
test
jmp
out
lret
sub
and
fsubs
inc
sbb
clc
jo
xor
cmp
push
das
test
cmp
dec
cmpsl
popa
or
fstps
stos
jno
or
mov
out
fisubrl
insb
mov
subb
je
push
jp
sub
into
ljmp
and
xor
mov
jecxz
adcb
jmp
sub
aam
int
sub
jne
sbb
fucomp
sbb
cmp
aaa
inc
mov
sub
xor
jmp
test
pop
imul
xchg
jecxz
sbb
call
mov
add
or
sbb
xlat
cmp
and
mov
dec
loop
lret
test
shr
mov
movsb
or
pusha
movw
push
lea
jne
shrd
cmp
bsr
xor
daa
setg
mov
stc
dec
cmp
shl
add
setb
pusha
mov
pushl
pushf
lea
jmp
out
mov
cmp
sub
add
mov
cld
lods
sbb
mov
popa
cmpsb
hlt
out
outsl
push
arpl
jle
mov
jno
mov
add
sub
sub
adc
ficoms
test
mov
aas
dec
mov
xchg
mov
cmp
dec
mov
xlat
mov
xchg
ficoml
cmp
and
fwait
lock
xchg
xchg
out
dec
xor
ja
jbe
xchg
test
push
sub
push
arpl
stc
test
push
jno
dec
jmp
sub
xlat
pop
xchg
and
jecxz
sub
push
bts
mov
clc
cmp
pushf
jmp
push
rep
mov
mov
pushl
push
push
lea
jmp
pushl
pushf
pushf
lea
jae
jmp
call
adc
and
cld
jg
or
push
in
xor
pusha
imul
cmp
jae
pop
pop
pop
mov
jg
in
addl
mov
fwait
add
add
mov
mov
stc
stos
popa
jnp
and
xlat
sarl
outsl
js
test
inc
xchg
sarb
lea
jp
cmp
vpmuludq
inc
mov
scas
inc
mov
jns
sbb
pop
lret
frstor
push
movsl
xchg
dec
push
cwtl
mov
outsb
push
push
rclb
and
and
push
cmpl
hlt
in
push
sbb
xlat
push
mov
movsl
adc
mull
push
addl
roll
movsl
je
xor
xchg
sbb
insb
dec
adc
out
scas
shl
pop
test
sub
add
sub
bound
pop
cmp
mov
je
rol
add
out
push
notb
outsl
pusha
inc
mov
std
push
cmpsl
imul
cs
iret
sub
and
mov
xlat
sbb
mov
mov
fsubrp
jno
sub
sbb
popf
lods
mov
dec
xor
test
fs
pusha
idiv
rol
lea
js
inc
bt
rol
bt
clc
push
cmp
lea
pop
call
push
inc
cmp
add
xor
add
icebp
inc
add
add
add
sti
inc
add
add
add
inc
add
add
add
flds
add
add
sbb
inc
add
add
add
out
add
add
add
ds
add
add
add
ds
add
add
addb
add
loopne
inc
add
add
add
add
add
jmp
add
push
cmp
add
std
inc
add
inc
add
scas
inc
add
add
add
mov
iret
sub
cmp
add
rorb
mov
out
cmp
dec
sti
push
xchg
movsl
pop
aaa
inc
cli
int
in
jge
jle
test
pop
out
xlat
lcall
das
repnz
xor
jg
cmpsb
or
xchg
pop
mov
jnp
pop
lds
or
pushf
cmp
or
xor
repz
sub
sbb
popf
inc
inc
imul
out
movw
lea
jae
pusha
lea
jne
pushf
jmp
ja
cltd
shrb
sub
imul
pop
dec
ret
jae
mov
mov
std
sbb
mov
inc
xor
nop
les
lahf
mov
pop
out
push
sub
xor
jp
pushf
rcrb
insl
lods
and
aas
movsl
shl
mov
icebp
and
repz
lock
mov
ljmp
jns
test
sub
int
mov
testl
pop
push
xchg
sub
sub
int3
fdivl
aam
fs
add
sbb
dec
dec
xchg
push
jmp
idivl
sub
fiaddl
nop
jo
rclb
cwtl
adc
mov
mov
mov
push
loop
sti
jl
inc
cwtl
popf
jnp
xorl
xlat
rolb
cs
xchg
mov
fnstcw
xchg
addb
sub
push
addr16
nop
mov
inc
or
push
jmp
sbb
sub
cmc
adc
in
xchg
sub
jecxz
mov
pop
mov
dec
xchg
sub
rorb
imul
lods
loopne
adc
xor
add
adc
cmp
push
adc
sbb
imul
lock
shrl
sub
pop
push
inc
mov
out
push
cmpsb
mov
mov
aaa
lods
testb
sbb
shlb
cmp
mov
pop
in
xchg
push
je
xorl
aas
pop
rorb
stc
xchg
cld
movsl
sbb
stos
leave
push
lods
push
lods
jno
xor
in
cmpsb
pop
push
test
mov
xor
mov
xchg
sbb
data16
das
push
pop
dec
adc
jge
cmpsl
push
aas
aas
mov
push
lahf
ja
cmpsl
xchg
jae
mov
les
cmp
lds
sub
pop
pop
xchg
jmp
out
outsl
mov
pop
pop
enter
sbb
cs
or
mov
jb
mov
inc
int
pop
push
dec
js
sub
lods
jle
mov
add
mov
dec
fs
mov
push
inc
popl
arpl
loop
push
inc
jp
inc
stos
and
push
xchg
rorl
aam
seto
setg
jmp
int3
mov
mov
lock
pop
mov
out
adc
push
ljmp
ds
clc
test
xor
lock
push
fdivrs
inc
fcom
inc
and
call
into
xor
sub
sub
pop
int
movsl
add
pop
sbb
mov
cli
clc
mov
cwtl
mov
testb
or
clc
aad
mov
inc
cltd
dec
push
jno
mov
popf
les
adc
pop
cmp
jne
mov
pop
push
mov
fistl
xor
fwait
imul
pop
test
addr16
sub
ret
shrl
sub
in
push
hlt
mov
movsb
or
lods
sbb
je
mov
fs
in
stos
sbbb
mov
xchg
dec
pop
jne
dec
mov
leave
adc
repnz
jl
jge
test
inc
adc
std
cmp
int
out
ja
scas
add
jecxz
sub
lods
dec
hlt
sarb
movsb
fadds
dec
mov
and
call
clc
push
xchg
mov
scas
inc
into
out
mov
push
iret
insb
cld
addb
inc
jnp
add
popa
insb
inc
jb
add
cmp
sub
aas
dec
sbb
sar
dec
xchg
push
adc
hlt
subb
lods
scas
mov
push
mov
cmpb
dec
outsl
mov
das
adc
xchg
lret
loope
call
les
loop
adc
add
jnp
int
fwait
sub
cld
hlt
hlt
sbb
and
or
sbb
aaa
idivl
rclb
fs
cwtl
nop
call
or
cmp
js
pop
dec
mov
and
in
inc
idiv
rep
repz
sub
and
and
aad
jge
mov
inc
out
aaa
adc
addr16
mov
sbb
in
lds
repnz
ss
bound
jecxz
cmpsl
add
lods
rol
repz
sbb
pop
pushf
mov
shl
int
xchg
xchg
into
sub
cwtl
leave
inc
pop
push
dec
sub
jnp
push
push
push
rolb
inc
and
into
cs
mov
mov
outsb
mov
pushf
cmpb
xor
sub
rcl
rcl
test
cwtl
xchg
or
adc
fbld
add
cltd
mov
insl
mov
inc
push
and
jle
aad
shl
mov
js
popf
mov
pop
mov
and
sub
lahf
inc
mov
mov
pusha
fbstp
pop
pop
mov
fs
movb
jb
xor
cmp
cmpsl
add
adc
xchg
sub
jmp
movsl
mov
icebp
jns
flds
add
cmp
test
dec
or
jnp
push
and
sub
xchg
scas
outsl
testl
out
bswap
pop
call
or
add
dec
push
and
jo
xor
mov
lahf
push
ret
out
xchg
test
inc
sub
mov
aam
jb
inc
stc
push
arpl
adc
xchg
pop
ja
maxps
pop
aas
pop
pop
aaa
inc
loop
jno
ds
repnz
sub
mov
mov
mov
dec
int3
lcall
rcrb
lret
add
aad
mov
inc
dec
push
lret
into
out
movsb
std
xchg
fs
loopne
xchg
jl
dec
adc
sarb
cli
and
mov
mov
mov
sbb
or
xor
xchg
sbb
mov
arpl
jle
cs
aad
jl
jo
mov
sub
out
sbb
fldenv
aas
out
out
scas
pop
inc
pop
xlat
addr16
nop
push
adc
adc
dec
sbb
shlb
sub
shrb
xchg
push
scas
push
cmpsb
into
data16
cmp
jecxz
repnz
xor
in
mov
jge
xchg
add
daa
push
push
lret
shlb
bound
and
in
mov
push
pop
or
gs
lods
stc
xlat
fs
or
scas
mov
xor
popa
inc
popa
push
por
mov
cwtl
mov
adc
mov
sti
xor
pop
je
pop
imull
cmp
je
xlat
lret
push
xlat
sub
movsl
test
cmp
adc
pop
orl
faddl
aas
jae
sbb
and
adc
push
cmp
aaa
or
jecxz
test
es
ja
je
lcall
test
outsb
push
aad
mov
lret
or
add
sarb
inc
sbb
jbe
data16
pop
inc
repnz
aas
inc
xlat
jg
iret
out
inc
cmpsl
lahf
pop
cwtl
mov
enterw
jbe
xorl
cmp
sub
aas
sbb
imul
sti
and
shll
sbb
jnp
mov
stc
jo
roll
scas
outsb
xchg
rclb
cmp
jnp
xor
fldt
inc
fcoms
mov
sbb
add
sbb
adc
sahf
cld
lcall
push
xchg
cltd
or
xchg
lea
loope
ja
lea
jecxz
sbb
xchg
jecxz
stos
inc
stos
jnp
decl
and
cld
push
mov
cmpb
movb
pusha
lea
jne
shrd
neg
pushf
movzbw
xor
bsf
movsbw
or
aaa
mov
inc
add
bt
cmp
and
sub
mov
cmc
clc
test
pushf
lea
je
clc
stc
cmc
sub
cmc
cmp
cmp
cmp
push
lea
ja
jmp
pop
xchg
and
sub
sub
jne
inc
inc
xor
testl
fisubrl
cmp
mov
ss
cld
in
movsb
fldl
inc
scas
test
repz
pop
cmp
mov
movsl
and
sub
add
xlat
jne
loope
pushl
mov
imul
cmp
dec
cmp
test
mov
sbb
fbstp
out
scas
outsl
dec
xchg
pop
push
pop
aas
xchg
sbb
loope
popa
sub
pop
sbb
sub
movsb
xchg
sbb
xor
dec
push
aam
sbb
inc
fmul
leave
fidivs
pop
cmp
cmp
xchg
and
pop
xchg
insb
repnz
test
lods
mov
mov
xchg
add
shll
pop
dec
hlt
loop
pop
and
pop
adc
sub
sub
sbb
pop
inc
pop
lds
pushf
call
lods
cmc
std
push
jne
inc
and
adc
push
fistpl
aas
push
ljmp
add
int
or
gs
or
mov
jmp
push
mov
push
shl
test
stc
idivl
pop
cmp
cmp
hlt
fmuls
mov
icebp
testb
push
mov
mov
mov
outsl
xchg
out
mov
or
mov
jo
xchg
or
insl
jno
mov
std
addr16
subl
gs
in
sbb
sahf
jle
push
push
push
mov
jp
xor
and
in
jecxz
inc
fcomp
sub
dec
cmp
inc
mov
out
xchg
fadd
mov
mov
sbb
cs
lret
incl
xchg
cmp
or
push
push
push
pop
es
fldt
divl
iret
push
adc
shlb
into
mov
pop
push
push
push
loop
test
mov
mov
pushf
jmp
adc
fsubrl
sub
mov
hlt
les
xchg
int3
push
and
fcoms
sub
pop
cltd
add
jae
lods
inc
aaa
ljmp
and
push
pop
mov
sub
push
divl
fwait
jo
ja
test
sbb
ret
out
rclb
test
push
leave
aaa
insb
lods
in
jp
test
mov
lds
lret
pop
xchg
jb
sub
ljmp
fcmovbe
data16
pop
je
sub
push
or
test
stos
lahf
stc
inc
xor
aam
shr
mov
shr
pushf
mov
rcr
cmc
cmc
shr
sub
stc
sar
bsr
mov
call
pop
pop
sub
sub
popf
icebp
dec
push
jns
popa
stc
sub
jno
popa
dec
sub
mov
insb
aam
sub
inc
inc
iret
mov
sbb
cs
jns
or
add
fsub
xchg
add
lds
mov
push
lea
adc
into
lahf
dec
fstps
or
enter
xor
dec
scas
xchg
dec
sub
loope
lods
xor
mov
sub
push
jno
push
cmp
or
repnz
fimuls
adc
daa
daa
scas
test
sbb
or
xchg
inc
cmp
sarl
pop
fs
cli
imul
push
push
cmp
popf
sbb
push
pusha
adc
xor
sub
in
mov
mov
add
sub
xor
sbb
loop
adc
sar
cmp
add
sub
gs
inc
loope
and
dec
mov
push
push
push
clc
rorb
lods
dec
xchg
in
sti
cmp
add
sub
push
sub
inc
dec
ljmp
xchg
test
out
lock
pop
pusha
fwait
xchg
daa
xor
incb
aaa
add
push
jmp
lcall
push
arpl
fbstp
lock
cltd
jge
repz
test
addb
dec
gs
imul
bnd
jg
dec
fimuls
mov
loopne
adc
cmpsb
movsb
out
lcall
push
lods
mov
ss
sahf
pop
jge
orb
test
aam
hlt
aam
sbb
mov
pusha
lea
ja
stc
and
sub
shl
add
or
bswap
mov
ror
mov
clc
repnz
pushf
pusha
mov
lea
jne
lea
pushf
movb
pop
push
mov
lea
call
mov
push
lea
jmp
outsl
out
fildll
sub
rclb
jp
jp
mov
adc
ljmp
xchg
mov
test
test
fcmovbe
adc
sbb
mov
add
mov
jg
cwtl
adc
test
scas
sti
xor
cmc
loopne
or
adc
cmp
das
fs
cltd
or
in
sub
mov
addr16
sub
roll
addl
dec
inc
jle
inc
xor
xor
enter
mov
push
dec
mov
mov
lret
in
push
dec
rcl
scas
inc
into
sub
jg
scas
lahf
out
dec
xlat
out
call
jo
xlat
pop
jbe
lods
mov
fs
jne
call
inc
pop
in
fisubrs
sub
mov
imul
or
pop
sub
lds
roll
jne
jmp
adc
sahf
pop
or
fisttpll
andb
add
sbb
out
or
dec
lret
cli
and
mov
ret
nop
push
ficompl
mov
mov
inc
add
xor
or
fidivl
rclb
mov
inc
pushf
and
test
mov
in
sbb
in
xchg
xor
insb
insb
xchg
enter
iret
imul
jl
fildll
sub
inc
dec
sub
jo
lock
scas
ret
dec
shrb
sbb
push
mov
dec
in
pop
jb
xor
sub
out
mov
add
pop
mov
mov
mov
push
sti
lret
repz
pusha
sbb
icebp
fidivrs
adc
and
dec
jmp
dec
mov
clc
or
push
or
lahf
jae
sti
mov
mov
lret
mov
push
and
dec
cwtl
pop
jge
dec
jno
cmp
pushf
lea
jae
pusha
pushf
call
cmp
sub
pop
idivl
fildll
pop
xchg
outsl
lahf
outsl
fists
mov
gs
xchg
insl
outsl
pop
loopne
push
sub
scas
cmovg
sbb
jge
mov
test
cmpb
fdivrs
shl
aaa
or
cmpl
jmp
inc
mov
test
imul
shll
or
fst
js
jae
cmc
xchg
pop
gs
or
xchg
movsl
in
mov
ret
notb
cmp
je
stc
pushf
pusha
pushf
cmp
push
movb
lea
je
jae
stc
cmc
cmp
pusha
lea
je
push
push
pusha
pushf
lea
jmp
cmp
jmp
add
inc
loope
sub
inc
jbe
out
cmpsb
inc
inc
scas
xchg
cmpsb
inc
inc
cmp
out
and
pusha
lods
jno
cmpsl
cs
repz
sbb
int
popa
nop
pop
jg
fs
ret
gs
imul
mov
fisubs
std
sbb
icebp
xchg
jae
sub
push
jne
in
popf
ljmp
test
lahf
ret
xchg
mov
outsb
out
inc
mov
repnz
outsb
pop
enter
mov
cmpb
shll
dec
mov
aas
pop
incl
dec
adc
xchg
push
or
jl
or
or
jns
cmpsl
idiv
lea
ja
and
rcr
sbb
sub
bt
add
jl
pushf
mov
mov
sub
sar
stc
stc
mov
pushl
jmp
add
dec
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
cmp
idiv
test
push
call
push
sub
and
lods
mov
in
sub
xchg
xchg
int3
sbb
lea
data16
cld
bound
xlat
fs
jecxz
mov
and
and
mov
push
movsl
test
adc
add
mov
and
fidivs
addr16
ror
push
and
ds
iret
pop
fisubrl
xchg
imul
dec
inc
mov
arpl
out
test
in
mov
pop
std
std
xchg
xchg
dec
mov
ret
js
pushf
push
mov
sub
mov
pop
mov
xor
inc
jg
dec
jge
test
inc
stos
and
aam
push
rolb
shrb
inc
test
xchg
loope
scas
dec
add
hlt
inc
test
in
xchg
push
mov
les
xchg
cmp
and
adc
pop
shll
cld
dec
add
call
xor
pop
scas
idiv
push
mov
fidivrs
shl
es
shlb
cs
int
sub
je
pop
mov
mov
mov
clc
mov
adc
sti
jae
sti
into
ljmp
sahf
xchg
repz
cmpsb
push
add
lret
mov
mov
daa
addr16
aaa
out
xchg
pop
repz
adc
cmp
mov
sar
shll
or
xor
cld
outsl
or
mov
int3
sub
push
es
mov
mov
sub
xchg
outsb
inc
lods
mov
pop
jmp
push
daa
scas
mov
mov
dec
mov
mov
rolb
in
mov
cwtl
test
push
idivl
sub
add
add
adc
jae
xor
dec
stc
xchg
dec
pop
pop
out
outsl
filds
lahf
addr16
and
xchg
mov
xchg
mov
sub
ljmp
jecxz
lahf
push
and
test
outsl
push
popa
ja
sub
loopne
stos
loope
adc
xchg
stos
loope
dec
outsl
sbb
ds
push
jne
in
arpl
mov
rorb
lods
shlb
cmp
inc
popa
jmp
or
xchg
leave
jge
test
ror
in
add
es
outsb
xchg
cmpsb
jbe
inc
out
sahf
jbe
in
mov
ficoms
lods
mov
and
pop
push
cmp
pop
rorl
and
ret
cltd
pusha
jb
in
jno
cmpsl
test
inc
jnp
jns
imul
jmp
cli
or
jb
sbb
mov
sub
pop
mov
ljmp
call
fdivl
idiv
mov
sub
insb
fs
hlt
inc
pop
insb
aam
or
fsubl
or
adc
loop
lret
add
ds
outsb
fidivrs
jbe,pn
adc
pop
adcl
mov
and
test
sub
xor
addr16
test
xor
mov
cwtl
cmp
mov
aaa
xchg
sub
icebp
pushf
add
out
pop
jp
xor
and
push
in
insb
mov
je
frstor
jb
nop
out
ds
dec
fxam
sub
fidivrs
lcall
sbb
dec
sub
fwait
popl
dec
dec
rcrb
dec
pop
mov
bound
data16
pop
rorb
ss
mov
nop
xchg
dec
orl
mov
pop
iret
test
add
cmpsl
in
lea
fs
mov
out
push
cltd
inc
mov
movsl
frstor
test
pop
or
jno
fwait
imul
iret
mov
in
jge
sub
out
add
cli
stos
bound
mov
ret
cmpl
sahf
fimull
outsl
sbb
enter
or
loope
mov
mov
mov
push
das
dec
mov
rorl
and
sub
pop
lcall
pop
mov
push
xrelease
push
sub
imul
xor
movsl
dec
in
jge
lea
je
in
shlb
aam
push
shrd
cwtl
cwtl
xadd
mov
pusha
test
shrd
sub
neg
btr
push
pusha
btr
das
mov
bsr
lea
setg
aad
mov
movzbw
xor
shrd
btc
mov
pusha
not
mov
stc
test
lea
jnp
pushf
mov
lea
je
shl
bts
mov
rcl
dec
add
movsbw
shl
mov
cmp
test
push
lea
je
bswap
bswap
add
lea
shl
mov
stc
add
jmp
xor
jmp
cmc
mov
clc
jmp
lea
ja
pusha
imul
call
clc
jl
call
dec
mov
mov
lcall
push
push
das
add
repnz
adc
aad
and
insb
sbb
scas
rol
and
scas
xchg
lea
mov
imul
cli
and
jmp
jnp
fisubs
xchg
imull
mov
or
loope
dec
push
imul
jge
or
add
filds
ror
bswap
shl
btr
mov
call
pusha
dec
shr
sub
aad
pop
push
loope
xor
leave
xor
out
mov
fidivs
andl
sub
daa
mov
fmul
jmp
mov
push
xchg
sub
fwait
adc
cmp
daa
xchg
and
dec
ljmp
das
dec
loop
and
push
xchg
jb
and
insl
inc
jp
pop
xlat
pop
sub
aas
nopl
pop
out
addr16
aaa
dec
and
dec
xor
lea
jge
pushf
movl
pushf
pushf
jmp
lock
jne
pop
jno
sub
test
imul
ljmp
stc
call
fwait
push
pusha
rorl
sbb
sbb
adc
sub
aaa
cmpsl
sarb
push
out
dec
rolb
mov
gs
pop
xchg
xor
or
sbbl
fwait
fists
rcr
fimuls
pop
and
mull
dec
xchg
ja
stos
push
fidivrl
out
add
cltd
mov
sbb
std
inc
inc
jo
jge
mov
aas
mov
sub
or
in
insb
push
mov
pushf
insb
les
aam
add
aas
ret
aaa
push
fistl
gs
or
cltd
ss
mov
icebp
xchg
lock
bound
leave
xor
adc
cmpsl
aam
stc
divl
and
int3
ja
jne
push
je
pop
pop
sahf
mov
jle
sahf
scas
negb
push
aas
jg
lock
scas
outsl
pop
repnz
mov
sub
in
ret
mov
mov
xchg
jecxz
sti
ja
add
inc
adc
inc
push
ja
push
jbe
mov
pop
inc
xor
lret
call
cmc
bound
sarb
xor
or
mov
enter
data16
pop
dec
leave
mov
xchg
mov
sahf
call
into
inc
mov
xchg
xorb
mov
sub
mov
insb
cli
push
mov
sbb
leave
mov
fstps
imul
pop
jo
cmp
imul
into
ljmp
addb
push
mov
xchg
or
in
out
idiv
mov
mull
pusha
mov
cmc
add
xchg
push
mov
push
fiadds
jns
scas
add
xchg
pop
add
cld
inc
nop
push
call
cwtl
loopne
rclb
push
das
fisubl
mov
lea
jae
push
call
pusha
mov
push
mov
call
fwait
out
sub
sub
mov
add
mov
xchg
cmp
xchg
je
cmpsb
jnp
sub
xor
cmp
inc
push
addb
in
fdivrl
and
mov
xchg
movntps
fists
int
dec
inc
mov
loop
push
divb
inc
mov
fwait
das
addr16
adc
sbb
movsl
mov
jmp
mov
cs
inc
decb
mov
sbb
mov
jmp
sub
dec
mov
fmull
inc
mov
or
xor
pop
add
add
mov
cmp
push
xlat
mov
inc
stos
sbb
inc
jnp
in
xorl
mov
js
popa
out
lret
jge
mov
movl
ficompl
xchg
pop
xchg
jnp
xor
shll
movsb
cld
push
or
dec
mov
leave
pop
mov
fld
cltd
cmp
xchg
fbld
push
sbb
jne
push
pusha
stos
pusha
push
movb
pushl
lea
jmp
or
fucomp
sub
loop
jbe
mov
xchg
scas
out
scas
cmpsb
mov
call
pop
dec
cmp
mov
imul
cmc
adc
add
xchg
push
loop
je
testb
in
test
dec
jle
jbe
mov
stc
push
mov
adc
mov
out
xchg
mov
fisttps
movsl
pop
lcall
icebp
jno
or
test
mov
mov
cmpsl
test
das
push
fwait
jnp
or
imul
inc
cs
leave
cmp
and
shll
push
arpl
mov
jns
imul
leave
es
push
iret
cld
xchg
xchg
subb
jmp
jo
add
imulb
sti
test
in
xchg
fsubs
pop
or
ret
fisubl
mov
and
scas
incb
mov
psubsb
loopne
lcall
xchg
mov
jmp
xchg
addr16
outsl
xlat
out
iret
push
mov
jg
aaa
sarb
xlat
sahf
pop
pop
cmp
aas
into
cmp
cwtd
aaa
scas
rclb
mov
sbb
dec
add
das
lods
daa
and
cld
mov
in
repnz
xchg
aad
xor
mov
cli
inc
lret
push
dec
fisubl
jae
sbb
das
das
cmpsl
jp
pushf
stos
mov
mov
sbb
cmp
movsl
push
adc
push
bound
jae
push
in
add
and
cld
fs
je
test
mov
fmuls
mov
dec
mov
shl
jmp
push
lea
jne
rol
sar
stc
mov
push
add
test
movzwl
add
push
or
bsf
mov
test
pusha
add
stc
mov
cmc
pusha
cmc
pushf
test
push
push
lea
je
pusha
pushf
cmp
add
pusha
cmc
cmp
call
lea
jl
lods
bt
pushf
xor
pusha
mov
bt
clc
ror
cmp
cmp
test
cmp
xor
pusha
pushl
push
pushf
ror
lea
jge
pusha
not
jmp
pop
jne
out
sub
add
cmc
gs
push
popf
jne
test
push
dec
sub
aam
adc
int
ret
sub
andb
leave
dec
dec
mov
inc
pusha
sbb
loop
mov
sub
dec
add
sub
add
xor
or
scas
dec
push
and
mov
mov
shl
cmp
jecxz
adc
inc
pop
pop
adc
cmp
ficoms
sub
mov
push
inc
icebp
xor
dec
xchg
mov
clc
lea
push
add
cltd
and
mov
int
jmp
xchg
or
and
push
jnp
lahf
mov
cmp
arpl
pop
stos
popf
js
mov
dec
mov
iret
cmp
lods
push
test
fmulp
jae
or
stos
xor
in
and
movsb
sbb
xchg
lods
inc
jns
cmp
or
xchg
xchg
leave
test
mov
mov
xor
loopne
clc
adc
lock
adc
stos
repnz
push
add
sub
leave
fs
sub
movsb
in
lods
cld
aam
mov
sub
sahf
jmp
popf
sarl
push
fwait
xchg
push
scas
mov
scas
jle
xchg
popf
or
push
stc
cmp
leave
call
xchg
mov
xor
cmp
das
imul
je
sub
dec
jne
inc
push
mov
mov
repz
lea
xchg
inc
cmp
inc
jmp
sub
leave
mov
jae
inc
sbb
push
subl
dec
lcall
int3
bnd
data16
sub
or
dec
cmpsb
add
pop
lcall
mov
xor
xor
xor
insb
push
xor
loop
mov
push
stos
adc
loop
inc
clc
lods
pop
push
add
or
pusha
lea
ja
dec
dec
sete
pushf
inc
inc
not
inc
dec
xchg
neg
mov
sbb
pushl
mov
pushf
movb
jmp
xchg
push
repnz
pop
and
js
rcrb
jo
dec
mov
mov
and
xchg
je
out
and
push
jo
int3
xchg
sub
lods
lcall
xchg
or
std
mov
dec
sbb
push
xor
ds
sbb
dec
cmpsb
jl
scas
pusha
cwtl
int3
mov
repnz
mov
scas
cmpsb
push
into
fisubs
movsl
mov
mov
sub
jge
push
popf
in
in
aad
mov
push
sbb
movsl
or
scas
vsqrtpd
xorl
mov
or
repnz
mov
fldz
sbb
inc
aas
hlt
jmp
or
or
cmovbe
push
inc
les
loop
mov
xchg
icebp
add
ret
push
pop
sbb
sahf
sahf
push
push
inc
into
ss
jle
into
adc
cltd
pop
lock
dec
add
inc
and
call
rcrb
je
ss
and
jnp
dec
pop
aaa
pop
dec
scas
iret
idiv
mov
dec
push
mov
ret
fdivs
mov
sub
call
add
insl
xchg
loope
and
mov
rorb
dec
sbb
sub
ja
out
mov
add
jg
mov
cmp
inc
fcmovb
gs
cmc
aad
or
push
adc
imul
add
xchg
lea
jne
mov
xchg
movsl
std
popf
xchg
sahf
fisubl
mov
pushl
inc
cmp
iret
and
or
aam
int
in
inc
mov
pop
push
int
and
mov
add
test
sub
loopne
xchg
stos
popf
or
fs
jne
mov
mov
sbb
sbb
mov
daa
jne
mov
pushf
add
adc
cmp
roll
sbb
mov
xchg
xor
pop
sub
int
hlt
sub
arpl
outsl
jmp
push
nop
movsb
dec
adc
out
adc
loop
enter
cvtps2pi
mov
jbe
into
jle
es
out
sub
xlat
cmpsl
fisubrs
mov
xor
sahf
int3
inc
cmp
and
dec
pop
popf
ret
jmp
aas
lods
push
xor
rcrl
sub
stos
arpl
push
ja
rcrb
je
push
xor
call
loope
inc
hlt
sub
dec
pop
pop
daa
cmpsl
xchg
pop
cmpsl
mov
div
xchg
dec
pop
outsl
fwait
jns
outsl
movsb
stos
push
mov
dec
ja
pop
pop
es
ljmp
insl
xchg
mov
faddl
fs
pop
and
clc
arpl
sahf
loope
ljmp
mov
aaa
or
and
mov
out
repnz
sub
push
xchg
mov
xor
das
rcrl
cmp
shr
xchg
lret
sti
mov
mov
mov
sub
jle
inc
lret
sbb
xor
adc
rcll
push
out
sub
sbbb
ret
pop
push
das
cmp
jbe
or
mov
stc
ffree
cmp
bnd
outsb
out
jg
stc
adc
xor
inc
pushf
xchg
sarl
clc
xchg
movsl
adc
scas
popa
popl
jbe
pop
inc
shlb
and
sbb
cmp
neg
inc
sub
sub
in
pushl
lcall
sub
fst
lds
in
std
cmp
dec
pop
dec
mov
cmp
push
rorb
neg
mov
int
jo
mov
push
in
adc
dec
jb
fisttps
lds
mov
loopne
enter
movsl
xchg
xchg
xchg
ret
popl
or
push
hlt
jl
mov
add
fmull
cmp
push
call
add
lret
adc
mov
lea
call
stc
call
add
ja
jbe
dec
jne
push
gs
je
lea
jb
push
stc
push
cmp
call
xlat
pusha
out
sub
inc
push
pop
test
xchg
jns
xor
cmpsl
add
je
dec
xchg
lahf
repz
test
fistpl
xor
add
lods
and
lods
sub
ljmp
cmp
movsl
loope
imul
or
adc
pop
imulb
sub
sub
cmpsl
mov
cmpsl
dec
ljmp
rcl
jecxz
inc
jno
leave
mov
addl
inc
addl
clc
fcoms
jo
push
sbb
pop
dec
out
subl
shrb
inc
mov
mov
int3
fs
pop
and
sub
ffreep
fistpl
ret
pop
xor
inc
mov
out
xorl
imulb
mov
and
lcall
inc
std
insb
pop
mov
dec
popa
mov
jb
loopne
or
jl
jmp
aam
rcrl
out
lock
call
lds
dec
repz
jae
in
int3
xchg
dec
jb
movsl
test
shlb
cmpsl
jae
adc
push
fs
and
dec
lea
jmp
mov
repnz
scas
not
jecxz
and
outsb
cmpsl
daa
lds
push
adc
mov
test
xchg
orb
pop
add
test
idiv
inc
out
jne
sub
shl
aaa
daa
dec
lahf
pop
pop
mov
xchg
rorb
push
cltd
xchg
mov
pop
cmp
mov
leave
scas
and
in
push
cmp
pop
leave
jns
repnz
xorl
inc
test
out
aam
xor
cmp
push
jmp
xorl
daa
loopne
mov
inc
loope,pt
push
into
dec
movsl
mov
xchg
inc
cmp
push
popa
cs
lods
int3
nop
push
jns
pop
in
dec
dec
cwtl
xor
cwtl
call
lock
imul
ss
leave
lea
je
pusha
add
bt
jmp
lea
jae
add
mov
stc
bsr
bsf
mov
cmc
mov
call
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
ss
dec
loop
shl
repnz
cli
add
inc
rcl
and
shrl
fs
loopne
adc
inc
add
xor
fcmove
mov
pop
xor
cmpsl
pop
mov
lahf
clc
divb
pop
or
in
pop
or
aas
jne
fists
arpl
cmp
hlt
ljmp
xorl
adc
jecxz
daa
aas
inc
dec
jg
outsl
daa
mov
push
pavgw
fstps
mov
sub
cli
fiadds
push
outsb
push
push
scas
fmulp
xchg
sahf
outsb
out
inc
roll
loopne
je
jns
push
ficomps
cs
movsl
pop
sub
lds
mov
xchg
andl
scas
shlb
inc
in
loopne
aaa
scas
sbb
push
mov
repz
sbb
pop
popf
leave
cmp
add
inc
xchg
ss
nop
dec
andb
clc
add
cltd
fldcw
outsl
xchg
aam
lcall
incl
aaa
cli
sub
addr16
or
repz
dec
sti
rcrl
xor
mov
mov
stos
mov
push
mov
cmpb
dec
test
mov
loop
je
cmp
mov
out
mov
jnp
push
push
inc
dec
push
jb
dec
movd
and
sbb
inc
add
ss
ret
adc
mov
or
inc
sub
dec
or
push
lret
shl
jmp
clc
pushl
stc
lea
stc
cmc
xor
call
movl
mov
dec
mov
pop
jmp
push
call
mov
mov
call
movzbw
mov
not
inc
mov
lea
pop
lea
mov
not
pop
mov
jmp
pushl
popl
movb
lea
jmp
inc
and
neg
bsr
shl
bts
sub
sar
bsf
rcl
neg
mov
mov
jmp
mov
mov
push
lea
dec
mov
movsbw
push
jmp
call
mov
pushf
movb
pushl
ret
push
cmc
bt
xor
clc
cmc
test
clc
xchg
lea
jne
pushf
pusha
mov
mov
push
push
movb
sub
jmp
mov
movb
push
pushf
movw
lea
jmp
bswap
lea
btr
ror
bsf
neg
sub
bsf
mov
bswap
movsbw
cmc
push
mov
pusha
add
add
cmc
jmp
not
call
pushf
mov
mov
pusha
mov
jmp
push
pushl
popl
push
push
pushl
lea
jmp
bt
sub
push
lea
jmp
pushf
pushf
mov
mov
pushl
mov
movb
mov
movw
mov
movb
mov
lea
jmp
cwtl
cmp
cmc
cmp
sub
jmp
bswap
dec
shl
sub
lea
bt
jmp
shr
inc
cmc
neg
mov
jmp
movl
xchg
mov
not
dec
pusha
lea
jmp
push
push
pushl
popl
pushl
lea
jmp
jmp
pushl
popl
mov
movb
lea
jmp
lea
and
aaa
btc
xor
sub
rcr
not
btc
lea
pusha
and
movsbw
bswap
and
sub
movzbw
mov
movsbl
movzbl
call
pusha
call
pushf
cld
push
pushl
pushl
pusha
rep
sub
movzbw
dec
mov
stc
lea
movzbl
mov
stc
bt
clc
call
call
cmp
add
call
jmp
pushf
popl
pusha
push
mov
jmp
inc
pushl
popl
lea
not
inc
movl
movsbw
pop
mov
movsbw
movsbw
inc
dec
pusha
bswap
pop
mov
not
pop
dec
movsbw
shrd
lea
bt
pushf
sub
push
lea
jmp
movb
mov
push
pusha
lea
jmp
pusha
decl
movb
push
push
lea
jne
jne
pusha
push
jmp
push
push
mov
pushf
pushl
lea
jmp
mov
movl
mov
pushf
call
dec
pusha
dec
inc
bswap
bswap
pushf
pushf
dec
test
lea
mov
cmp
cmp
stc
sub
pusha
movw
mov
movb
lea
jmp
stc
sub
cmp
clc
and
lea
jnp
pusha
pushf
mov
mov
jmp
inc
movzbw
dec
dec
pop
call
mov
mov
pushf
jmp
cmc
and
movsbl
btc
neg
or
mov
movb
sub
call
dec
mov
push
pusha
pushf
mov
inc
pushf
xchg
push
not
pushl
popl
not
call
call
bswap
inc
movsbw
movsbw
not
dec
add
lea
test
sub
push
pushf
pusha
lea
jmp
stc
sub
pushf
stc
cmpl
pusha
movb
mov
push
pushf
mov
pushl
jmp
cmc
cmc
pusha
and
stc
test
stc
cmp
cmp
pusha
call
pusha
pushf
popl
pusha
mov
pushf
pushf
pushf
pop
mov
call
push
mov
mov
movb
pushf
lea
jmp
jmp
mov
movl
mov
lea
jmp
jmp
mov
pushl
pushf
lea
jmp
mov
mov
jmp
sub
pusha
jmp
pushf
pushl
popl
push
pushf
pushf
lea
jmp
pusha
jmp
pusha
mov
mov
movw
pushf
popl
movw
pushf
mov
pop
pushl
dec
mov
movsbw
dec
movsbw
mov
lea
inc
inc
mov
pusha
bswap
mov
inc
pop
mov
pushl
call
pushl
popl
movw
lea
jmp
daa
shld
call
bswap
inc
dec
cmc
not
sete
movsbw
bts
ror
pusha
and
adc
mov
pushf
movb
test
add
call
mov
call
pushf
push
mov
jmp
push
pushf
popl
jmp
lea
jne
cmp
bsf
xorb
push
pushf
mov
mov
mov
pushf
lea
jmp
push
push
movw
xchg
inc
mov
movsbw
push
pusha
movw
bswap
mov
pushf
mov
pop
bswap
mov
call
ror
pushf
add
bt
mov
pusha
add
pusha
pushf
mov
movw
pushf
lea
jmp
pushf
movw
pushf
mov
pushf
lea
jmp
and
pusha
pushf
jmp
mov
pushf
lea
jmp
sub
jl
cmc
pushf
add
cmp
pushf
bt
mov
lea
jnp
pushf
stc
push
or
pushf
call
jmp
jmp
movw
stc
sub
pusha
pushf
push
lea
jmp
xor
stc
pusha
stc
clc
add
push
stc
pushl
xor
clc
pushl
mov
neg
movb
pushf
pushl
inc
mov
call
mov
pusha
push
pushf
lea
jmp
dec
dec
jmp
jmp
pushf
pushl
popl
mov
push
pushl
mov
lea
jmp
bswap
aad
mov
jmp
push
mov
mov
pushf
push
pushf
lea
jmp
bswap
neg
mov
pusha
inc
movzbw
bt
mov
test
clc
bt
add
pushl
pusha
jmp
sub
xadd
mov
inc
shl
mov
test
push
mov
stc
sub
stc
mov
shl
pushf
pushf
mov
call
add
add
bt
sub
pushf
lea
jmp
pushf
push
jmp
lea
jmp
daa
mov
add
btr
shr
mov
jmp
mov
pop
push
not
movsbw
mov
movzbw
pushl
inc
xchg
push
lea
jmp
sub
call
pushf
jmp
movb
call
movsbw
not
mov
jmp
mov
pushl
movb
pushl
ret
mov
push
pusha
push
push
lea
jmp
call
mov
cmc
sub
pusha
add
call
pushf
popl
jmp
bswap
mov
dec
mov
mov
push
movsbl
push
pushf
mov
xchg
mov
pusha
pushl
popl
not
movl
movl
pushf
inc
mov
inc
pusha
jmp
movzbl
inc
mov
dec
dec
pusha
bswap
pushl
popl
pusha
not
pop
dec
movl
movsbl
jmp
movzbl
pop
mov
mov
movzbw
bswap
movsbw
mov
movzbw
pushf
pushf
mov
lea
jae
mov
pushl
movsbw
mov
mov
dec
push
lea
lea
mov
movzbl
call
pushf
lea
mov
dec
mov
movsbw
pop
dec
mov
not
pop
xchg
xchg
lea
jmp
push
pushl
mov
movb
push
pusha
lea
jmp
mov
call
dec
xor
call
push
mov
pusha
mov
movb
movw
pushf
mov
lea
jmp
bswap
jae
mov
push
jmp
bts
movsbl
bsf
mov
neg
mov
jmp
dec
movzbw
bswap
bswap
movzbl
pushf
dec
shrd
lea
test
sub
push
lea
jmp
add
pushf
jmp
jmp
setl
lea
clc
mov
rol
test
test
add
push
pushf
pushf
mov
mov
call
jmp
push
mov
jmp
xor
clc
add
movw
bt
ror
cmp
sub
pusha
test
push
pushf
sub
call
call
lea
jge
pushf
pushf
pushf
popl
movb
pusha
call
add
jmp
movsbl
lea
jmp
bswap
pop
lea
pop
lea
dec
bt
adc
and
btc
lea
push
cmc
bt
sub
pushf
lea
jmp
dec
bt
movw
jmp
bt
sar
mov
cmp
inc
add
not
sub
bts
push
cmp
mov
movb
push
movw
shl
mov
shr
bt
cmp
pushf
or
test
xor
pushf
pushl
inc
jmp
pushf
popl
pushf
pushf
jmp
lea
movb
pushf
lea
jmp
bsf
rol
mov
push
stc
clc
lea
pushf
push
sub
bt
pushf
call
rol
setns
setp
movzbl
stc
pushf
pushf
call
shrd
shl
mov
jmp
pushf
popl
pushl
push
jmp
stc
sub
cmp
test
pushf
shl
call
push
mov
lea
jae
push
movb
pushf
popl
jmp
call
pushf
popl
pushf
pushl
popl
push
pusha
pushl
lea
jmp
mov
call
lea
mov
bswap
pushf
mov
pushf
pushl
push
lea
mov
pushl
pushl
pushf
mov
pushf
pushl
lea
jmp
pushf
push
pushf
mov
pusha
mov
movb
lea
jmp
mov
pushf
call
lea
jne
shld
btc
mov
call
mov
push
movb
lea
jmp
mov
mov
mov
inc
pushf
mov
dec
call
mov
pushl
rep
shld
mov
movzbw
dec
mov
clc
bt
cmp
pushl
popf
push
pushf
lea
jmp
cwtl
mov
cwtl
mov
pushf
push
divl
call
xchg
jmp
test
sub
call
pushl
popl
pushf
push
movw
movb
lea
jmp
cmp
call
xchg
movsbl
not
pushl
popl
xchg
push
lea
movl
bswap
movzbw
dec
mov
call
jne
pusha
clc
cmp
jmp
pusha
lea
jg
mov
cmc
jmp
call
aaa
rcr
mov
test
stc
push
stc
add
push
pusha
push
pushf
mov
pushf
mov
mov
lea
jmp
pusha
mov
mov
pushf
call
pusha
jmp
pusha
inc
inc
mov
lea
mov
movsbw
movsbw
mov
movl
xchg
inc
pushl
popl
xchg
movw
movsbw
movzbl
movl
dec
movzbw
jmp
shr
pushf
push
movb
call
mov
push
lea
jmp
sub
push
pushf
movw
pushl
lea
jmp
mov
pushf
pushf
popl
movl
call
jmp
push
push
push
pushl
mov
pushf
movb
pushf
popl
pusha
movb
movw
pushf
mov
lea
jge
push
mov
movsbw
mov
mov
movsbw
lea
call
sbb
mov
shl
mov
shr
setp
std
test
pop
lea
pop
mov
aaa
pop
dec
cmp
pop
pusha
cmc
das
sar
mov
pop
cmp
mov
sbb
inc
stc
shrd
mov
movzbw
shld
mov
sar
shr
mov
movzbw
std
pushl
popf
mov
pushf
sets
movsbw
mov
movb
pushf
mov
push
pushl
ret
xchg
not
std
pushl
mov
push
call
mov
pushl
popl
mov
movl
lea
dec
movsbl
xchg
mov
pusha
not
bswap
movzbw
dec
not
pushf
bswap
lea
not
dec
shld
lea
btc
lea
cmp
jmp
movb
jmp
add
call
mov
pushf
mov
pushf
lea
jmp
neg
sbb
push
movzww
cmc
bt
clc
test
add
pusha
xchg
cmc
cmc
call
pushf
dec
inc
bts
lea
clc
jmp
jmp
xchg
movsbw
movsbl
dec
mov
movsbw
mov
movsbl
pushf
mov
pushf
inc
bswap
mov
movsbw
dec
mov
pusha
mov
xchg
xchg
pushl
popl
push
pushf
movl
mov
inc
pop
mov
call
xchg
pushf
call
sub
bt
cmc
cmp
mov
push
test
sub
jmp
mov
dec
btr
bsr
clc
lea
clc
bt
bt
bt
sub
pusha
mov
pusha
lea
jmp
mov
call
pushf
pushf
mov
lea
mov
pushf
mov
movsbw
pushf
pushf
movw
mov
movsbw
inc
pop
inc
mov
mov
movzbl
movzbw
pushf
mov
bswap
mov
jmp
movb
pushl
jmp
pushf
mov
pusha
pushl
mov
pushf
popl
call
add
pushf
pushl
mov
call
jmp
push
mov
call
shrd
push
stc
ror
mov
dec
mov
push
test
cmp
sub
call
pushf
mov
movl
pushl
mov
mov
push
pushf
push
push
pushl
ret
movzbw
push
movzbw
pushl
popl
xchg
bswap
mov
movl
push
jmp
movw
mov
lea
call
pusha
jmp
pushf
pusha
mov
jmp
pushf
popl
jmp
ror
test
stc
neg
cmp
bt
push
xor
clc
sub
jmp
mov
pushf
popl
lea
jne
pusha
pusha
pushl
popl
mov
push
lea
jmp
pusha
mov
jmp
lea
je
cld
call
mov
pushl
popl
movl
lea
jmp
mov
mov
inc
movzbw
bswap
mov
not
pushl
lea
dec
xchg
pushf
pushl
popl
push
movsbw
lea
movl
pop
xchg
jmp
das
mov
xor
pushf
shl
mov
pushf
push
sub
clc
sub
jns
shr
jle
pusha
push
pushl
mov
pushf
pushl
pushf
popl
mov
pushl
popl
push
mov
lea
jmp
xchg
mov
inc
lea
jbe
dec
bswap
bswap
call
pushf
mov
pushf
pushf
popl
movb
push
push
mov
movzbw
mov
mov
lea
inc
mov
inc
mov
jmp
pushl
popl
movzbw
not
movl
lea
inc
mov
movw
movzbw
dec
pushf
bswap
bswap
inc
pushf
dec
and
mov
sub
rol
lea
cmc
sub
push
movb
push
pusha
lea
jmp
test
jmp
call
shld
inc
test
btc
mov
movzbw
rcr
mov
pusha
pushf
mov
add
call
pushf
pusha
pushf
popl
push
pushl
pushl
popl
movw
push
lea
jmp
pusha
movw
xchg
call
lea
dec
mov
not
not
mov
push
ror
ror
push
call
lea
push
pusha
cmp
sub
push
lea
jmp
pushf
dec
stc
not
pushf
add
jmp
cmp
push
bt
cwtl
push
test
bt
cmp
sub
mov
mov
jmp
lea
jne
shr
shld
mov
cmp
test
cmc
and
test
stc
jmp
jmp
sbb
adc
xadd
aas
mov
dec
btc
stc
mov
pusha
add
pusha
push
mov
pushl
movb
pushl
push
lea
jmp
jmp
inc
movzbl
lea
pushf
pushl
mov
pushf
jmp
lea
bswap
mov
lea
movsbw
push
dec
and
jmp
mov
movzbl
pushl
mov
movzbw
not
movzbw
push
mov
dec
mov
lea
mov
jmp
call
pusha
call
pushf
popl
jmp
mov
mov
movl
pushf
popl
mov
call
rcr
btc
shr
mov
test
not
rcr
sbb
mov
pusha
not
bt
call
pushf
pushf
jmp
pushl
popf
push
pushf
movb
pushf
lea
jmp
jmp
movb
sub
push
mov
push
movw
pushf
lea
jmp
xor
mov
sar
mov
stc
cmp
pusha
sub
bt
shl
pusha
pushf
jmp
pusha
pushf
mov
not
mov
pushf
push
mov
lea
cpuid
jmp
pushf
pusha
sub
mov
pushf
jmp
call
bswap
mov
movw
call
push
mov
mov
push
lea
jmp
mov
pushf
popl
movb
mov
pushf
call
pushf
pusha
push
xchg
movsbw
setno
pushf
popl
movzbw
mov
movsbw
mov
pusha
dec
setl
mov
lea
mov
pushf
push
mov
push
pop
bswap
call
mov
and
pushf
pushf
push
mov
pushf
popl
mov
pusha
pushf
pushf
pushl
popl
movb
movw
mov
lea
jmp
dec
stc
shrd
lea
call
mov
pushl
pushf
jmp
pushf
popl
pushf
push
mov
movsbw
dec
mov
mov
jmp
adc
mov
test
rcr
and
mov
mov
clc
push
pushf
pushf
not
movb
cmc
not
call
bswap
lea
dec
lea
bswap
call
movl
jmp
jmp
pushl
popl
push
lea
jmp
pushl
pushl
popl
mov
lea
jmp
pushl
dec
inc
lea
pushf
push
bswap
lea
jmp
lea
cpuid
pushf
sub
push
cmpl
pusha
pushf
mov
jmp
inc
xchg
xchg
pushl
popl
setl
movzbw
movl
lea
mov
movzbw
dec
movsbw
dec
inc
inc
lea
movzbw
bswap
xchg
bswap
dec
inc
dec
call
pushf
inc
inc
mov
movsbw
pusha
mov
call
pusha
pushf
pushf
movl
jmp
pushl
popl
call
movzbw
bswap
movsbl
call
call
pushl
popl
push
movw
lea
jmp
mov
mov
pushf
push
push
pushf
popl
jmp
lea
pop
dec
movzbw
bswap
call
aad
sar
movsbw
shr
mov
stc
push
pushf
pushl
add
call
pusha
mov
pushf
jmp
movzbw
pushl
popl
movsbw
inc
pushl
movl
inc
mov
movzbw
call
call
not
not
lea
lea
mov
call
mov
pusha
push
mov
call
lea
movl
not
dec
mov
pop
jmp
jmp
mov
setne
bswap
jmp
pushf
pushf
popl
push
call
sbb
movzbl
rcr
setne
pusha
or
xor
bsf
add
dec
dec
xor
movzbw
bt
sub
neg
movsbw
stc
xor
shl
rcl
mov
bt
stc
call
jmp
mov
push
mov
pop
bswap
call
mov
pushf
pusha
movb
pushf
lea
jmp
pusha
dec
call
mov
pushf
pushf
pushf
pushf
lea
jmp
mov
movl
movzbw
pushl
popl
movsbw
call
jne
call
pusha
pusha
mov
call
cmc
shr
call
pushf
mov
pushf
pushl
pushl
pushl
lea
jmp
pushl
push
jmp
pusha
pushf
call
pushf
popl
pushf
mov
lea
lea
jo
inc
not
push
pusha
call
mov
push
pushf
pushf
pushf
popl
pushf
jmp
call
not
inc
inc
movzbw
call
pushf
popl
jmp
jmp
repz
add
xor
add
xchg
dec
sub
add
add
xor
add
push
xchg
pusha
aas
xchg
aas
cmp
add
push
xchg
push
sub
add
inc
xchg
fbld
xchg
pushl
xchg
add
xchg
cwtl
dec
xchg
push
sub
add
inc
xchg
fs
xchg
sub
add
das
xchg
cmp
xchg
clc
inc
xchg
push
sub
add
das
xchg
shrl
xchg
leave
daa
xchg
or
dec
xchg
jb
xchg
push
sub
add
xchg
xor
add
inc
xchg
xchg
dec
xchg
dec
xor
add
push
xchg
push
sub
add
xchg
movsb
cmp
add
xchg
inc
xor
add
add
inc
xchg
xor
add
inc
xchg
sub
and
xchg
sbb
xchg
push
sub
add
xchg
sub
js
xchg
sub
add
xchg
push
sub
add
and
add
xor
add
inc
xchg
gs
add
add
xchg
xchg
cmp
add
xchg
jb
xchg
inc
inc
xchg
push
sub
add
sub
xchg
out
xchg
pop
inc
xchg
push
xchg
js
xchg
push
sub
add
xchg
gs
add
sub
add
xchg
push
sub
add
inc
xchg
inc
xor
add
xor
add
sub
add
xchg
out
cmp
add
inc
xchg
push
dec
xchg
push
sub
add
sub
add
xor
xchg
gs
add
sub
add
cmp
add
das
xchg
dec
xchg
dec
sub
add
cmp
add
daa
xchg
fbld
xchg
pushl
xchg
dec
xchg
repz
add
dec
xchg
clc
inc
xchg
dec
xchg
leave
daa
xchg
xchg
dec
xchg
sub
cmp
add
sub
xchg
jne
xchg
pop
inc
xchg
pushl
xchg
repz
add
xchg
fbld
xchg
push
sub
add
das
xchg
repz
add
xchg
aas
cmp
add
inc
xchg
leave
daa
xchg
pop
inc
xchg
repz
add
xchg
js
xchg
xor
add
cmp
add
xor
add
cmp
add
das
xchg
dec
xor
add
inc
xchg
pushl
xchg
cmpl
add
cmp
add
xchg
dec
xchg
jne
xchg
sub
add
xchg
repz
add
dec
xchg
fidivrl
xchg
jne
xchg
js
xchg
add
xchg
repz
add
xchg
movsb
cmp
add
das
xchg
fidivrl
xchg
repz
add
sub
add
dec
xchg
inc
xor
add
xchg
repz
add
xchg
dec
xchg
xor
add
xchg
scas
das
xchg
fidivrl
xchg
js
xchg
pusha
aas
xchg
pop
inc
xchg
out
cmp
add
xchg
push
cmp
add
xchg
xchg
dec
xchg
pushl
xchg
movsb
cmp
add
cmp
add
xchg
leave
daa
xchg
shrl
xchg
inc
xor
add
sbb
stc
clc
stc
add
jmp
not
mov
jmp
call
mov
pusha
pushl
pushf
pushf
lea
jmp
sub
rol
shl
mov
cmp
btc
mov
jle
mov
call
push
call
mov
pop
pushf
dec
movsbw
bswap
movsbw
movzbw
bswap
dec
bt
clc
lea
cmc
sub
pushf
pushl
pushf
lea
jmp
test
xchg
clc
pusha
cmp
bt
mov
pushl
sub
mov
lea
jne
cmp
stc
clc
xor
push
push
call
mov
push
mov
mov
push
pushl
movb
lea
jmp
pushf
pushf
popl
mov
push
mov
pushl
popl
pushf
pushl
push
pushf
lea
jmp
js
test
push
bt
jmp
cwtl
jmp
cmp
push
call
lahf
bt
aam
mov
cmc
add
test
xchg
cmc
pusha
sub
jmp
bt
cmc
mov
bsf
shld
mov
test
dec
not
pusha
mov
clc
pusha
pushf
stc
add
jmp
pusha
pushf
mov
pusha
pushf
jmp
pusha
bswap
mov
mov
pushl
call
sub
jmp
jmp
push
pushf
mov
pusha
call
call
sub
pusha
add
mov
pushf
pushf
popl
mov
pusha
pushl
popl
mov
lea
jmp
inc
mov
pusha
mov
call
movzbl
mov
mov
call
movb
pushl
lea
pusha
mov
pushf
pushl
push
mov
lea
jmp
dec
push
pushf
jmp
pushl
mov
push
lea
jmp
pusha
jmp
call
mov
push
push
movb
lea
jmp
cmp
ror
mov
cmc
cmp
test
cmc
add
pushf
lea
jmp
pushf
xor
pushl
call
cmc
xor
clc
pushf
jmp
sub
push
pushf
push
push
lea
jmp
inc
shr
add
setbe
mov
jg
pushf
push
pushf
mov
push
lea
jmp
pushf
pusha
pushf
mov
pusha
jmp
or
mov
push
adc
mov
call
xadd
sub
shl
movzbl
movzbw
shl
xor
not
push
dec
movsbw
bts
btr
ror
shl
ror
neg
shld
dec
rcl
rcr
xor
jmp
shld
mov
cmp
bt
stc
add
pushf
push
push
push
lea
jmp
not
bt
test
test
add
call
bsf
lea
test
clc
movb
sub
pusha
pushf
movl
pusha
lea
jmp
rcr
btc
mov
shl
sub
bswap
movsbl
inc
movsbw
ror
not
btc
rol
stc
neg
movsbw
movsbl
setns
dec
inc
sub
sets
call
mov
movb
movb
mov
call
bsf
mov
sub
neg
mov
not
add
not
pushf
mov
pushf
mov
mov
lea
jmp
cmc
aaa
lea
mov
je
neg
ror
mov
pusha
add
pusha
pushf
mov
push
push
mov
lea
jmp
call
mov
movsbw
xchg
mov
pushl
popl
pushf
movw
lea
movl
inc
movsbw
mov
mov
call
movsbw
mov
mov
mov
movsbw
mov
call
mov
pushf
call
jmp
aaa
das
btr
lea
stc
cmp
push
lea
ja
xadd
clc
mov
shrd
mov
sar
jmp
movzbl
call
lea
je
jmp
mov
jmp
call
mov
dec
movsbw
not
mov
bswap
pusha
mov
jmp
pushf
pushf
movsbw
dec
dec
lea
bswap
bswap
lea
pop
dec
shr
lea
stc
jmp
pushf
inc
pushf
cbtw
cmc
bt
bt
jmp
pushf
sub
pusha
lea
jmp
pushf
pusha
mov
pushf
call
aad
cwtl
rdtsc
cmc
cmc
stc
sub
pushf
pushf
pusha
call
pushl
popl
pusha
jmp
movsbw
dec
dec
pop
movsbl
lea
bswap
lea
dec
sub
sbb
mov
clc
cmp
pusha
bt
sub
pushf
lea
jmp
push
pushl
mov
call
dec
call
mov
jmp
mov
pushf
mov
movb
pushf
pushf
popl
call
mov
mov
movsbw
jmp
pushf
mov
movsbw
dec
not
movzbw
mov
jmp
ror
pusha
pushf
neg
cmp
bt
clc
xor
call
not
mov
jmp
rol
rcr
notl
or
shld
xor
bts
mov
stc
cmp
jmp
lea
jg
pusha
mov
pusha
pushf
popl
pushl
call
lea
dec
not
not
bswap
pushf
dec
bts
bt
lea
test
bt
pusha
mov
sub
push
pusha
pushl
lea
jmp
cmp
sub
lea
jb
mov
pushf
lea
jmp
pushf
pushf
call
movsbw
pushl
popl
bswap
inc
not
movl
mov
pushf
dec
movsbw
mov
not
movzbw
dec
pushf
dec
dec
inc
movzbw
bswap
pop
pop
pushf
dec
pop
rcl
lea
pushl
call
mov
pushf
jmp
mov
call
call
pushf
pushf
jmp
pusha
pushl
lea
jmp
pushf
mov
movw
pushl
ret
pushl
pushf
mov
movb
mov
lea
jmp
jbe
pusha
pushf
pushl
mov
pushf
call
pushf
bt
sub
push
lea
jmp
not
mov
pushf
jmp
pusha
pushf
popl
lea
jnp
push
pushl
mov
mov
pushf
lea
jmp
pushl
xchg
pusha
jmp
lea
dec
dec
bswap
dec
dec
pop
lea
mov
bt
movb
pushl
sub
pusha
mov
mov
pushf
lea
jmp
mov
push
pop
bswap
mov
lea
not
mov
movsbw
mov
call
push
mov
mov
call
pushf
pushf
popl
call
pop
dec
call
cmp
clc
pusha
add
stc
clc
jmp
jmp
call
cmp
add
stc
test
shrd
pusha
pushl
call
movl
xchg
jmp
xor
call
sub
pushf
lea
jmp
not
pushf
inc
push
bt
test
neg
test
call
bswap
xchg
call
jmp
push
lea
jne
cmp
pusha
sub
pushf
xchg
pushf
jmp
shrd
jmp
mov
pushf
jmp
pushf
dec
pushf
rol
dec
lea
jmp
pushf
jmp
ror
neg
mov
add
stc
sub
rcr
mov
bt
sub
push
cmp
bt
cmc
shr
call
mov
pushl
push
pushf
popl
jmp
setge
lahf
mov
call
mov
pushl
pusha
mov
dec
push
lea
movzbw
mov
pop
call
pusha
mov
lea
jae
pushf
lea
push
jmp
aaa
mov
stc
test
cmp
bt
add
push
pusha
movw
pushf
pushf
popl
lea
jle
pushf
pushf
pushl
popl
pusha
pushf
push
lea
jmp
pushf
popl
bswap
push
pusha
movzbl
mov
mov
jmp
mov
movzbw
bswap
jmp
jmp
inc
push
lea
mov
lea
bswap
pushf
pushl
mov
lea
pushl
mov
movzbl
pushf
lea
mov
mov
pushf
inc
jmp
mov
pop
not
mov
pop
inc
lea
mov
pushf
pusha
bswap
bswap
pushl
popl
lea
mov
inc
xchg
movl
lea
pushf
call
pusha
call
lea
jne
or
xor
xorb
push
call
push
pushf
pushl
popl
mov
push
lea
jmp
inc
movl
mov
inc
movsbw
mov
mov
mov
inc
pop
push
dec
movsbw
jmp
pusha
mov
mov
movl
pusha
mov
lea
jmp
pushf
call
movl
pushf
mov
pushf
movb
movb
pushl
ret
mov
pop
movzbw
call
movw
pushl
popl
movb
mov
mov
lea
jmp
push
call
push
mov
movw
lea
jmp
mov
pushf
pushf
call
mov
jmp
dec
bswap
pushf
dec
bts
neg
lea
call
neg
mov
sub
jns
push
sub
pushf
pushf
shl
jmp
push
mov
bt
pushf
cmp
cmp
or
pushf
push
lea
je
push
pusha
sub
push
xchg
stc
cmc
mov
test
sub
mov
lea
jne
jmp
call
push
bswap
not
inc
inc
push
movzbl
movsbw
pusha
not
mov
movsbw
mov
movsbl
inc
movzbw
movzbw
mov
movsbl
inc
push
mov
lea
mov
dec
jmp
push
xchg
inc
movzbw
mov
jmp
pushf
jmp
call
pusha
and
mov
bt
add
inc
or
sub
sbb
clc
sub
call
call
cmc
mov
shld
jmp
sub
push
pushf
jmp
pusha
clc
stc
sub
pushf
inc
jmp
cmp
push
pushl
popl
clc
add
push
pushl
popf
pushf
pushf
mov
lea
jmp
call
pushf
call
push
mov
mov
mov
lea
jle
pushf
pusha
pushl
popl
movb
lea
jmp
btr
mov
rol
jmp
dec
pushl
popl
movzbw
pop
lea
movl
movsbw
mov
movsbw
pushf
dec
movsbw
movzbl
pop
lea
bswap
call
call
clc
or
pushf
push
lea
je
bt
call
mov
push
cmc
sub
pusha
lea
jne
clc
stc
clc
xor
pushf
xchg
call
xor
call
mov
jmp
call
call
call
call
jmp
movzbw
pusha
dec
call
pusha
push
pushl
popl
mov
lea
jmp
push
pushf
push
lea
jmp
pusha
pusha
pushf
popl
jmp
pushf
pushf
call
xchg
bswap
inc
jmp
jmp
add
jmp
pushf
mov
pushf
pushl
ret
dec
jmp
jmp
mov
mov
mov
pushf
mov
lea
jmp
lea
call
stc
add
jmp
pop
call
clc
not
jmp
mov
pushf
mov
pushl
mov
push
push
lea
jmp
not
shld
mov
cmc
mov
cmc
bt
bt
cmp
add
pusha
call
jmp
