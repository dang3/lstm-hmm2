test
sub
mov
test
mov
pop
cwtl
in
mov
mov
fstpl
pop
ret
and
rcr
sbb
dec
pop
pusha
jo
insb
movsb
pop
or
out
sub
mov
jmp
arpl
pop
stos
test
test
cmpsl
adc
jns
rcrb
rcrl
adcl
les
dec
mov
xchg
xchg
sbb
add
sti
clc
sub
test
jl
adc
push
mov
cmp
adc
mov
js
mov
cld
cmc
test
push
ret
hlt
mov
fucom
shrb
mov
sub
lds
cmp
cmpsl
xchg
leave
sbb
sbb
outsl
insb
cli
in
js
adc
sub
cld
and
loop
daa
pushf
jecxz
xchg
mov
loope
lods
mov
pop
adc
pop
popa
add
mov
sbb
cmpsl
inc
aas
insl
jge
fcompl
add
adc
outsb
ja
xchg
ret
mov
cmpl
and
fnstcw
lods
adc
fsubs
aas
je
pop
cmpsb
call
sti
sahf
dec
aam
loopne
sub
stos
inc
loope
fwait
dec
mov
mov
dec
jg
dec
sub
stc
loope
pop
xchg
insl
aam
ret
sarl
jp
push
pop
pop
dec
dec
lds
ret
cmp
es
or
sti
xchg
je
inc
mov
sbb
rcr
mov
sub
fcompl
push
and
inc
lods
aad
and
js
nop
fwait
and
pop
shlb
pop
es
mov
js
js
cmp
pop
das
sbb
adc
inc
mov
mov
pop
orl
mov
mov
cmp
sbb
fwait
cmc
xchg
xor
cmp
xor
lcall
cmp
cmp
pop
xor
test
sbb
icebp
pop
out
lcall
repz
ret
push
add
push
orb
insl
dec
cli
dec
xchg
mov
loop
or
lret
adc
dec
adc
pop
ja
jg
mov
sub
fcoml
xchg
cltd
lret
pop
sbb
mov
outsl
sti
xchg
xchg
daa
shlb
cmp
out
ret
adc
dec
rorl
lods
mov
into
dec
cmp
inc
and
xor
mov
pop
aas
fdivrl
and
jg
and
mov
fidivl
out
mov
daa
mov
std
push
cmp
pop
jno
lcall
rorl
jo
pop
sub
inc
sbbb
cltd
sub
aas
cmp
mov
pop
push
pop
inc
xor
xor
pop
sub
stos
mov
sbb
shlb
test
xor
mov
push
add
jp
imul
push
orl
int
popa
clc
jne
cmp
bound
in
loope
enter
mov
test
sub
pop
add
cmpsl
dec
mov
sahf
nop
sub
mov
ret
bound
mov
pop
xorl
inc
mov
add
js
inc
lea
ljmp
lea
dec
xor
inc
adc
mov
fistpl
cmp
out
xchg
add
inc
shlb
inc
ret
in
outsl
in
stc
sub
inc
leave
jae
mov
cmp
mov
push
in
jecxz
push
stc
xchg
lret
aad
sahf
scas
nop
sbb
pop
adc
ds
lret
nop
inc
shlb
jmp
shl
es
sub
push
cmp
add
mov
lahf
movb
dec
nop
jb
add
mov
push
test
cli
mov
nop
jl
fsubl
stos
incl
repz
push
and
insl
sbb
inc
inc
add
inc
pop
dec
add
in
push
cmp
lret
or
hlt
cmc
lods
or
ds
cmp
hlt
pop
sub
aam
or
jge
cwtl
in
loopne
jo
add
cmpsl
in
stos
push
pop
cwtl
repz
lcall
int3
push
jmp
jp
adc
imull
xchg
into
cmc
aam
enter
in
mov
rolb
aas
lods
mov
dec
cmp
push
pop
inc
sbb
sub
push
fisttpl
ret
push
stos
lahf
dec
test
bound
fidivrl
xor
orl
adc
push
outsl
clc
in
inc
xor
mov
jle
call
inc
xlat
xlat
pop
sbbl
push
cmp
mov
push
hlt
loopne
push
cmp
pop
sub
adc
cmp
imul
fdivl
mov
pop
pop
imul
pop
cmp
stos
in
sbb
popf
enter
and
ret
aas
adc
mov
mov
and
sub
xchg
mov
mov
sub
xlat
fimull
cmp
cmc
pop
push
fnsave
rorb
int3
test
in
inc
pop
push
out
mov
cmc
cmpsl
stos
ds
sbb
popl
popf
sub
or
add
rol
shll
push
xor
and
xchg
pop
xlat
out
mov
das
xchg
push
xchg
lret
cmp
and
in
lods
sbb
inc
sub
sbb
fwait
mov
adc
test
pushf
loopne
mov
das
and
call
insl
jns
negb
shll
mov
push
out
mov
icebp
fsubr
outsb
mov
ret
mov
jns
and
in
cmpsb
mov
and
sbb
inc
aam
inc
push
test
xchg
jecxz
stos
mov
lock
fnsave
lods
cmpsl
cmp
loope
mov
in
fistpl
and
and
ficoml
mov
add
femms
push
jg
rcl
mov
out
mov
cmp
dec
loop
repz
cltd
je
pop
xor
add
sub
xor
lcall
push
inc
mov
and
inc
push
add
aad
mov
jge
cmp
ja
pop
test
xchg
inc
sub
mov
add
aaa
sub
push
inc
mov
inc
stos
inc
sub
ret
rorl
pop
xor
push
or
jmp
sbb
pusha
cmp
mov
nop
inc
pop
imul
xlat
scas
fdivl
in
int
lock
jnp
cld
sub
sarl
call
out
sub
and
cwtl
inc
pop
into
pop
out
loopne
cltd
std
sub
imul
mov
push
add
xchg
enter
fnsave
cs
sub
fcom
pushf
xor
sbb
fiaddl
mov
push
xchg
pop
inc
dec
mov
mov
sahf
sahf
jecxz
pop
fstp
and
and
test
cmc
xchg
fucomp
test
hlt
push
inc
ret
jmp
dec
das
inc
iret
pop
and
mov
adc
call
and
xchg
iret
mov
faddl
mov
fcoms
gs
rolb
ficompl
adc
fildll
pop
int
and
adc
shll
sub
xchg
mov
pop
inc
mov
rcrl
mov
sub
movsl
lret
cmp
sbb
or
stos
out
inc
jecxz
mov
mov
les
adc
cld
sbb
aad
cmp
push
or
cld
faddl
scas
inc
mov
test
push
loope
and
adc
xchg
mov
add
popa
mov
xchg
inc
push
jae
aaa
xor
inc
jnp
ret
cmpl
jle
cs
or
mov
and
jns
pop
stos
shrl
fwait
sbb
push
inc
out
orb
jnp
jle
xor
cld
pop
idivl
sub
fidivrs
push
mov
mov
dec
stos
adcl
scas
pop
testl
loopne
pop
loope
or
pop
jp
filds
sbb
jle
mov
mov
sub
fisubrl
add
push
dec
xor
mov
sub
fisttpl
mov
mov
stos
inc
ljmp
aaa
or
das
or
and
movb
jg
push
push
sub
mov
dec
xor
pop
push
mov
adc
out
mov
push
cmp
insb
pop
orl
push
inc
daa
adc
das
and
out
int3
in
push
std
mov
jl
pop
ljmp
aad
stos
loope
imul
pop
lcall
add
mov
test
frstor
test
mov
jp
shrl
or
sbb
xor
sub
andb
cld
or
fcoms
je
xor
dec
in
xchg
pop
inc
cli
mov
dec
mov
lds
push
push
sti
mov
cmpsl
mov
sbb
mov
int3
pushf
call
movsl
cmp
fisttps
fcmovbe
inc
icebp
jge
fimull
push
loop
sub
mov
push
push
fdivrl
adc
xchg
fisttpll
notl
xor
stos
aam
gs
jbe
arpl
mov
mov
movsb
mov
mov
cmp
inc
fdivp
dec
mov
mov
out
fwait
movsl
jp
xor
nop
cmpsb
cli
cmc
in
rcll
lea
lcall
adc
stos
adc
mov
stc
js
outsl
mov
adc
test
loopne
push
dec
xchg
nop
inc
push
inc
pop
cmp
repnz
aas
mov
aas
mov
pop
inc
add
mov
add
xor
and
and
imul
lds
cmp
xor
sbb
das
rcr
mov
push
mov
push
dec
cli
lret
dec
je
lahf
xchg
mov
nop
adc
cltd
pop
fisttpl
xchg
pop
shlb
aaa
and
out
ds
inc
das
dec
and
push
xchg
or
mov
xchg
pop
jne
inc
xor
shrl
fnstenv
ficompl
sbb
jge
data16
cld
outsl
xor
imul
pop
lcall
mov
jnp
or
fidivl
adc
add
xchg
xchg
mov
rolb
aad
jo
cmp
je
push
push
lret
cmp
jne
subl
enter
cwtl
mov
stc
pop
xor
pop
cmp
pop
shll
out
or
add
arpl
push
xchg
dec
sub
push
rcrb
mov
jb
sub
fldl
xor
aaa
test
inc
lods
mov
pusha
imul
ret
mov
fstps
push
fistpl
sub
sub
mov
gs
lahf
fistpl
fidivl
jg
in
sbb
cmp
mov
ss
aaa
insl
pusha
aam
jecxz
lcall
sbb
push
fdivp
mov
std
pop
xor
stc
mov
dec
inc
dec
or
cmp
into
mov
roll
jbe
xor
sub
jl
hlt
int
xchg
jge
mov
push
adc
mov
dec
and
cmc
or
test
inc
sbb
push
mov
nop
test
int
stos
shl
cmp
jmp
jbe
pop
pop
mov
cli
cwtl
pop
in
pop
dec
add
or
lret
pop
jmp
insl
push
insb
stos
sbb
jb,pt
pop
pop
lods
lods
loope
cmpsb
movsb
mov
xchg
push
mov
or
arpl
lods
daa
jmp
lea
push
mov
add
push
sbb
pshufw
sub
inc
ret
rorl
inc
pop
push
addr16
pop
mov
pop
mov
lret
pop
stos
push
cmp
shr
push
or
push
jo
jmp
das
dec
cmpl
mov
lret
sbb
cmp
xchg
stos
aas
outsb
in
and
push
dec
into
loope
notb
sbb
mov
pusha
push
movsb
adc
movb
inc
pop
xor
pop
sbb
call
and
jge
testl
adc
pop
enter
xlat
sbb
inc
jns
adc
jae
or
aas
pop
mov
xor
push
bound
dec
insl
adc
dec
mov
sbb
inc
mov
mov
add
popf
jecxz
outsb
hlt
jne
dec
int
cld
mov
cld
in
inc
lods
xchg
mov
cmp
inc
out
pop
mov
xchg
notl
sahf
sub
popa
mov
inc
ss
test
mov
push
into
add
inc
cmpsb
xchg
mov
mov
fimull
jl
pop
subb
xchg
cmp
bound
inc
lock
bound
jl
push
pop
outsb
iret
adc
mov
repz
ljmp
fucomi
andl
push
jae
adc
icebp
pop
bound
add
xor
xchg
loopne
icebp
mov
adc
js,pn
repnz
dec
cmc
or
or
movhps
mov
add
jo
leave
dec
andb
push
inc
mov
stos
mov
jmp
cwtl
or
nop
out
jg
push
mov
sub
pop
dec
js
call
xor
js
jg
mov
add
in
rcrb
lds
ss
or
inc
adc
mov
enter
mov
add
fisttpl
sub
loop
lock
shrl
and
and
mov
call
dec
push
mov
sbb
push
push
aas
cmpsb
sbb
add
jae
inc
add
dec
lea
push
aaa
imul
xor
jl
iret
call
adc
in
bound
mov
inc
pop
cmp
pop
rorb
mov
cmp
adc
sarb
and
loopne
push
adc
mov
imulb
mov
stos
stos
clc
pop
mov
mov
inc
pop
rcr
mov
int3
xchg
clc
push
enter
movsb
sub
gs
push
jnp
mov
and
add
and
jo
jle
movsb
int3
aaa
mov
out
clc
jns
xchg
popa
jae
mov
out
inc
pop
stos
mov
push
jb
icebp
imul
push
loopne
inc
cli
xorb
mov
into
aam
les
adc
jnp
pop
decl
test
dec
mov
fistpll
lods
imul
jge
nop
mov
stc
fs
loopne
je
mov
dec
push
loope
dec
mov
inc
sub
push
je
in
sub
pushf
xor
mov
notl
mov
jns
xor
mov
jnp
nop
mov
fwait
xchg
cmp
mov
cmp
lods
and
push
test
sbb
dec
mov
test
std
mov
and
shrl
jge
fstps
xor
leavew
cmp
les
and
xchg
mov
pusha
in
inc
xchg
mov
push
movsl
mov
mov
dec
or
out
cmp
cmp
mov
lods
xor
rol
cmp
cmpl
pushf
inc
js
popf
hlt
std
les
cmp
test
add
and
mov
addl
pop
dec
gs
icebp
add
pop
or
lods
testb
push
inc
mov
cs
jb
popl
pop
daa
jae
mov
adc
mov
jge
shrl
jb
nop
mov
add
push
movsb
data16
mov
jge
pop
mov
push
mov
and
das
sbb
loope
sbbl
or
cmc
push
outsb
fmul
jns
pop
cltd
mov
adc
dec
or
add
dec
pop
fidivrl
jl
add
nop
test
push
call
jl
mov
sbb
sbb
fwait
orl
xor
in
negl
add
idivl
jl
push
mov
pop
pusha
cwtl
les
pop
dec
cmp
mov
jb
sahf
cmc
mov
test
rorl
and
pop
cmpsl
pushf
dec
mov
inc
insl
je
inc
xchg
pop
je
nop
pusha
das
mov
int
idivb
pushf
dec
push
sbb
out
stos
lret
clc
loope
sti
jo
iret
or
popf
cwtl
cwtl
les
inc
nop
push
imul
or
dec
jae
inc
test
cs
jg
push
aam
xor
jecxz
outsb
ret
mov
inc
add
cmpsb
dec
shr
stc
aas
mov
and
insl
out
sbb
inc
loope
sub
xchg
pop
cmp
nop
insb
sub
loopne
cmpsb
test
movsl
cld
xchg
mov
rorb
int
xor
and
fndisi(8087
pop
test
mov
mov
and
sbb
lods
fcoml
push
cmp
repnz
sbb
xchg
cmpsl
mov
bt
mov
and
lods
imul
sbb
and
leave
ficomps
sub
dec
dec
cmp
movsb
inc
push
cwtl
fldt
cmp
inc
sbb
sub
jmp
push
loope
aaa
mov
add
push
or
and
ror
imul
pusha
jg
ret
xchg
lds
inc
test
ds
push
pop
push
add
pop
or
pop
pop
add
les
and
mov
outsl
jle
jge
inc
cld
call
out
add
rol
outsb
sub
loopne
push
pop
repz
mov
mov
sbb
test
cmp
pop
push
push
lret
js
dec
aaa
movb
cmpsb
mov
mov
mov
movsb
test
mov
add
fistpl
inc
dec
je
pop
shll
dec
or
push
fwait
xchg
pop
sub
adcb
cwtl
mov
cmp
mov
faddp
ret
cmp
in
shlb
sbb
and
sbb
mov
popf
sbb
mov
add
dec
mov
dec
xchg
jecxz
jl
cmp
and
sub
das
movsb
inc
jle
rcl
pop
call
mov
pushf
jo
addl
mov
fwait
xchg
imul
sti
sub
dec
sub
rorb
cmp
pop
out
sub
out
shrl
pop
sub
popf
adc
les
xchg
add
test
fadd
fdivs
mov
sbb
stos
xor
lret
ret
lcall
jno
das
sbb
or
lcall
pop
in
sahf
loop
mov
cli
fincstp
inc
mov
add
hlt
fisubs
sahf
sub
pushl
icebp
js
fwait
out
pushf
std
mov
cld
imul
je
inc
mov
push
push
sub
push
and
mov
mov
mov
clc
enter
pop
pop
sbb
inc
jns
rorb
fyl2x
rclb
xchg
std
addr16
enter
mov
xchg
outsb
enter
mov
cmp
sub
fwait
addl
les
adc
jno
xchg
out
cld
pop
sbb
rorl
lret
std
shrb
jns
test
hlt
mov
xor
mov
bound
insb
mov
dec
out
and
mov
push
cmp
mov
jno
sbb
int
jp
push
or
ss
pushf
mov
xor
out
jle
add
mov
mov
repnz
fldenv
shlb
cltd
xchg
mov
inc
add
sbb
sbbl
fdivrl
cmp
imull
mul
sbbb
fsubl
je
sub
cmc
lret
jb
movsb
add
jp
ljmp
lods
cmpsb
dec
mull
add
inc
push
jg
sub
cmp
mov
jmp
mov
xchg
sbb
inc
adc
ret
xchg
mov
sub
mov
sbb
cltd
cs
scas
push
mov
fwait
mov
mov
push
mov
dec
dec
jbe
dec
fadds
jg
add
dec
popf
or
mull
icebp
arpl
dec
sbb
mov
mov
adc
pop
lret
mov
xor
sti
lods
faddl
loopne
dec
je
arpl
ret
sbb
mov
xor
jl
inc
dec
cmp
cmp
or
jmp
fsubs
cmpsl
cmp
add
jno
dec
pop
dec
cmp
push
popf
cmp
inc
sbb
dec
mov
cs
out
push
js
test
into
and
mov
subb
mov
aad
in
loopne
aaa
mov
rolb
inc
data16
push
mov
inc
dec
lahf
inc
xor
or
sub
pop
mov
leave
push
push
push
or
in
mov
test
cmp
jg
mov
loopne
hlt
repnz
fcomip
mov
pop
cmc
ljmp
cmp
shlb
mov
jmp
addb
pushf
adc
lret
divl
popa
shlb
dec
xchg
lahf
sub
arpl
sti
cmp
jnp
test
fisubl
imul
push
leave
push
js
pop
dec
jo
in
shufps
and
mov
mov
sub
or
push
or
pusha
cmpsb
cwtl
lret
jnp
sbb
sarl
ficoml
jge
xor
jp
in
popf
adc
xchg
jge
pop
repz
mov
das
adc
and
cmp
or
or
les
or
add
cmpsl
add
xchg
in
stos
insb
lods
xchg
jl
ja
jmp
cmpsl
mov
push
push
aas
mov
mov
jle
in
imul
mov
lret
pop
mov
and
xchg
adcb
add
sbb
push
push
cmp
xor
or
sahf
adc
or
call
sbb
push
push
stos
lods
adc
lods
jb
or
adc
hlt
xor
dec
mov
push
test
ja
lods
sbb
xlat
cmc
and
fmuls
in
jnp
xor
adc
cmp
nop
aam
xor
push
adc
push
lds
inc
cmp
mov
jb
mov
fistpl
and
and
shl
sbb
cli
xchg
xor
cmp
dec
mov
mov
aad
rcrb
pop
jmp
ss
cmp
mov
jb
addr16
pop
out
pop
push
cmp
push
pop
nop
sahf
iret
add
loopne
fwait
pop
cmpl
inc
mov
push
xchg
shrl
mov
push
inc
jp
xchg
sbb
cld
imul
in
mov
inc
push
pop
stc
pop
movl
insb
jno
test
das
lahf
sub
fsubrs
call
test
pop
sahf
dec
popa
sbb
pop
or
add
mov
aad
push
inc
mov
sub
add
push
push
mov
shrb
shlb
and
lcall
sub
loop
scas
pop
add
cli
mov
mov
pop
push
outsb
sbb
sbb
mov
xchg
in
je
sbb
jle
loop
test
aaa
rcrl
icebp
mov
sar
mov
pop
xor
ss
pop
mov
scas
mov
cld
clc
dec
add
movsb
push
leave
inc
sbb
sbb
bound
or
adcl
je
lods
arpl
xchg
mov
adc
ja
bound
out
cld
cld
inc
mov
nop
sbb
add
push
std
in
sub
sti
inc
lret
push
sbb
xorb
inc
dec
sub
cs
pop
pop
dec
mov
sbb
enter
adc
push
aaa
mov
int3
and
popf
ja
repz
ret
adcb
es
insl
fmull
jp
sbb
repnz
fldl
adc
ja
ljmp
aaa
out
push
mov
or
aas
lods
jo
out
daa
loop
dec
inc
adcl
pop
dec
pushf
insl
outsb
mov
mov
sbb
call
les
rclb
cld
cmp
inc
aaa
mov
or
stos
add
pop
jbe
lea
stos
inc
pop
int
and
inc
lods
stos
sbb
sbb
xchg
and
imul
jecxz
pop
xchg
xchg
or
cli
imul
mov
movsl
js
sub
scas
xlat
pop
inc
mov
insb
sub
pop
pusha
aaa
aam
pop
mov
adc
cmpsb
xchg
xchg
in
mov
aam
sbb
or
mov
mov
lret
cmpb
ja
xor
out
adc
imul
hlt
mov
push
fimuls
js
roll
arpl
popa
xor
mov
arpl
cmc
enter
mov
pop
push
pop
fcomps
mov
rclb
jmp
scas
movl
jne
fcmovnbe
cmp
dec
enter
xor
mov
jo
mov
sbb
xor
movsb
sub
cld
in
fucom
nop
adc
addl
xor
aas
jg
push
and
mov
addl
add
leave
xor
xchg
mov
cmp
lods
jo
pop
sbbl
push
test
and
in
sbb
jl
push
repz
mov
inc
xchg
inc
dec
mov
repz
divb
leave
scas
inc
xor
outsl
movsb
nop
ja
dec
and
mov
or
pop
mov
inc
sub
dec
mov
and
orl
adc
sbb
xchg
mov
sbb
or
xchg
pop
mov
push
or
cmp
sbb
mov
cmpb
pop
dec
xlat
stos
arpl
aaa
mov
movsb
pop
fcomps
je
flds
inc
addr16
mov
fiadds
pop
int3
mov
sbb
int3
xchg
faddl
pop
pop
pop
ret
icebp
ret
pop
gs
sbb
ret
mov
jp
mov
fldenv
addr16
mov
sub
or
aas
addr16
aas
mov
mov
xchg
cli
mov
inc
lret
outsb
lea
inc
pop
cmp
cmp
dec
fsub
push
push
aad
cmp
mov
or
addb
and
shll
mov
sbb
mov
mov
ja
cmp
cmp
jg
xchg
ret
add
sub
inc
loop
cli
hlt
call
fadds
loope
jmp
add
sbb
rcrl
sub
ja
xchg
fs
cmp
jo
lret
test
test
loop
inc
aad
add
jo
repnz
popf
jecxz
mov
dec
fisttpll
test
addl
xchg
inc
or
or
jp
call
movsb
push
jmp
pop
mov
div
pushf
mov
mov
repnz
sbb
add
hlt
and
imul
fxch
cld
push
outsb
jge
jge
cmpsb
inc
repz
jmp
mov
push
call
adc
or
push
cmp
adc
push
mov
andl
pop
xchg
sub
shll
fwait
or
insb
shll
mov
mov
push
xor
or
fwait
mov
rcrb
sbb
in
lds
mov
mov
je
push
arpl
ror
add
enter
adc
push
jb
xchg
cmp
icebp
pushf
add
dec
fs
faddp
dec
cmp
and
push
sbb
testb
mov
loope
pop
mov
das
dec
fadd
cmp
cmpsb
loope
dec
rcrb
outsb
into
and
jns
mov
mov
shll
cmp
push
lea
movsb
mov
pop
rorb
add
ret
shll
imul
jmp
testl
clc
test
jmp
in
dec
push
and
jmp
sbb
adc
mov
or
push
or
loopne
arpl
into
scas
dec
bound
ja
xor
lret
xchg
sti
js
mov
cmp
hlt
es
ja
enter
int
cwtl
inc
fdivr
mov
adc
mov
mov
lea
jg
xor
xchg
cs
pop
ret
lds
mov
es
clc
arpl
inc
dec
lds
mov
aaa
jb
into
imul
push
xor
popa
cmp
loop
push
dec
pop
mov
call
jmp
dec
cwtl
gs
mov
loopne
fbstp
ds
cmpb
inc
inc
add
cli
test
cld
and
mov
push
mov
and
rolb
xor
rcll
mov
daa
fisubrs
js
and
dec
cmc
lds
dec
fildl
mov
mov
lock
nop
test
inc
or
cmp
mov
das
shl
push
pop
hlt
push
or
mov
leave
sub
pop
int
test
jmp
leave
push
subb
mov
out
loop
sbb
jp
push
push
dec
jae
icebp
dec
xchg
add
fiaddl
or
xchg
or
sub
fucomi
mov
mov
arpl
add
lcall
or
sub
sti
aas
adc
mov
or
gs
fs
add
outsb
or
fsubl
mov
nop
jle
sarb
roll
ds
mov
fdivr
mov
loopne
arpl
mov
mov
push
sti
and
xor
mov
ja
js
js
mov
gs
dec
xchg
imul
jb
shlb
fdivrl
inc
push
leave
adc
icebp
mov
mov
mov
inc
cli
mov
gs
push
in
mov
jecxz
inc
lds
and
push
leave
cmp
int3
push
enter
cmova
jo
je
cmp
loopne
mov
subb
xor
dec
inc
cltd
xchg
lock
lret
inc
jge
lret
pop
pop
imul
xor
shl
pop
pop
mov
leave
decl
jecxz
add
ficoml
mov
cmp
nop
std
dec
arpl
std
inc
arpl
std
cmp
fucomi
push
mov
imul
std
cmp
mov
test
pop
xor
pop
mov
mov
lock
jne
sbb
mov
iret
movsb
xchg
leave
or
dec
mov
icebp
pushf
movsl
push
aad
psadbw
loop
xchg
xor
test
int3
or
dec
rclb
and
inc
mov
push
pop
mov
xchg
addl
mov
lea
cmp
jo
jns
loopne
inc
sbb
push
int
loope
sbb
ret
out
mov
mov
fcmovu
adc
mov
jle
sarb
push
es
mov
pushf
int3
rcrb
outsl
insl
push
imul
or
test
roll
daa
pop
movsb
push
xor
leave
inc
or
repnz
push
rorb
mov
mov
in
dec
jae
xor
lcall
inc
cs
imul
inc
cmpsl
jle
adc
sti
and
jp
cmp
les
inc
lea
jnp
mov
xor
mov
iret
divb
rolb
outsl
xchg
sarb
and
mov
movsl
xchg
les
mov
les
stc
aad
iret
sub
mov
fwait
lret
cmp
scas
dec
test
sbb
repnz
push
into
lds
cmp
hlt
sub
scas
and
ret
daa
push
test
lahf
call
cmp
xor
aas
cld
fwait
rolb
lcall
jp
dec
jl
inc
repnz
adc
pop
add
and
mov
and
xor
or
dec
es
mov
fdivr
jns
insw
data16
add
pop
pop
sbb
js
adcl
push
lock
sub
adc
xchg
add
xorl
jg
adc
or
jmp
mov
dec
pusha
das
inc
inc
cmp
enter
pop
push
shlb
aad
add
std
test
fimull
add
mov
fidivrl
pop
mov
dec
lods
xchg
ret
push
pop
fists
push
fsts
adc
and
cmp
cmc
enter
sti
sbb
xchg
cmp
push
push
and
cmp
jb
mov
or
mov
add
push
into
insl
or
out
sbb
out
sti
mov
insl
dec
sub
decl
dec
pusha
cmp
pusha
shlb
xor
mov
mov
mov
inc
lea
push
push
cmp
cmc
adc
stos
test
sub
lcall
fsubs
adc
pusha
jle
ret
push
pop
jnp
test
aad
mov
dec
in
mov
mov
mov
add
push
mov
movsb
mov
add
dec
ret
loope
pop
xor
arpl
and
push
dec
jno
lcall
shrl
ror
dec
jecxz
out
pop
mov
jmp
adc
adc
mov
mov
dec
lcall
adc
cs
sarb
jmp
inc
push
sti
aad
or
sarb
sbb
and
or
iret
int
sarb
or
inc
inc
jg
decl
lds
inc
or
leave
cmpsl
aam
fwait
mov
cmp
xchg
inc
jo
sbb
outsl
pop
push
dec
push
inc
mov
cmp
loope
cld
stos
stos
test
mov
ds
insw
shl
push
cmpb
rolb
dec
enter
push
aas
add
mov
popa
jnp
fld
cld
pop
inc
stos
ss
nop
sbb
xchg
lret
add
xchg
mov
pusha
mov
push
sarl
inc
xchg
out
pop
cmp
mov
mov
pop
test
cmp
movsl
or
loopne
add
cmc
aas
mov
lcall
sub
lret
mov
cld
lock
data16
rcrl
mull
inc
test
enter
mov
repz
cmpsb
insl
clc
mov
pushf
sbb
adc
cmpsb
aaa
and
sbb
cmpsb
movsl
cmpl
push
mov
push
comiss
repz
dec
inc
ret
cld
xchg
mov
jg
add
inc
je
in
adc
xchg
cmp
xor
sti
scas
inc
cs
aaa
mov
pop
cmp
adc
dec
rolb
sbb
ficoml
or
sub
xlat
mov
inc
add
popf
pop
shl
and
xchg
scas
mov
in
and
jp
push
cmp
mov
ss
loope
and
mov
nop
call
push
cltd
mov
lds
mov
and
fs
imul
std
push
out
mulb
je
inc
and
jne
push
inc
adc
lahf
jo
pop
xor
imul
clc
inc
sbb
xchg
xchg
sarl
test
mov
sbb
flds
push
pop
leave
push
push
loopne
sub
enter
pop
xor
pop
lods
mov
in
mov
movsb
mov
sarl
addr16
aam
push
push
or
inc
dec
aas
jae
in
ss
dec
add
add
pop
cwtl
add
inc
jle
enter
shrb
das
adc
push
enter
sbb
push
push
dec
call
cmp
imull
lret
shl
ret
add
or
stos
push
pop
out
jno
pop
push
or
mov
dec
mov
dec
out
add
jne
mov
mov
push
xchg
mov
stos
mov
or
mov
fisubs
fadds
sbb
mov
aad
nop
insb
pop
xor
push
test
lcall
and
in
fcmovbe
inc
inc
pop
rcrl
adc
test
movsl
xor
cmpsl
std
clc
xchg
mov
loope
push
dec
popf
or
mov
and
les
hlt
pop
sbb
and
pop
jmp
add
xlat
lahf
inc
ret
jb
lret
mov
push
rcll
cli
inc
repz
out
jg
jl
mov
imul
nop
push
push
nop
sub
loopne
dec
or
mov
lock
add
adc
cmp
aas
sub
lcall
sbb
mov
ret
fisttpl
sub
xchg
push
jno
xchg
clc
sbb
mov
ljmp
imul
push
inc
out
nop
adc
xor
pusha
push
push
jnp
cltd
stc
shll
out
mov
imul
sbb
sahf
mov
xchg
imul
arpl
mov
mov
xchg
add
int3
xchg
xor
cmp
jno
repz
mov
test
mov
shll
jp
mov
push
int
sub
dec
dec
sbb
dec
fwait
icebp
lock
add
sbb
push
icebp
icebp
ja
inc
cmp
xchg
cmpsb
dec
scas
mov
mov
in
push
roll
cmpsb
mov
rolb
cmp
mov
ret
movsl
pusha
mov
jp
ret
aas
mov
sbb
loop
lds
dec
sbb
bound
addr16
cmp
aad
pop
sub
cmovno
push
cli
mov
arpl
mov
sub
cmp
and
test
xchg
pop
stos
mov
jg
ljmp
jno
mov
push
repnz
pop
in
pushl
cwtl
dec
lds
and
jae
repz
out
push
loop
push
xchg
xorb
xchg
jne
or
outsl
xor
insb
add
mov
cmpsb
ficompl
inc
fwait
lcall
and
push
and
lods
pop
jp
dec
mov
fs
dec
fwait
rcrl
cmp
enter
into
dec
rcr
inc
mov
mov
cmp
mov
mov
data16
repz
pop
sbb
lret
les
xor
cltd
or
add
test
fiadds
psllw
arpl
adc
pop
xor
dec
add
jp
and
xor
sbb
arpl
add
fsubs
ja
adc
push
inc
sbb
out
inc
scas
cld
cmp
xchg
mov
cld
in
push
cmp
punpckhbw
push
stc
movsl
pop
test
cmp
test
push
or
jb
sarl
add
lea
rcrb
mov
call
mov
inc
call
dec
and
or
mov
xchg
out
jge
adcl
int3
fxtract
cli
das
or
outsl
mov
je
loope
sbb
and
mov
push
or
outsl
push
sub
mov
sti
ljmp
subl
imul
repnz
xor
jmp
cmpsb
lcall
fsubrl
dec
movsb
inc
xchg
sub
into
movsl
or
js
in
push
mov
inc
xchg
hlt
pop
sub
adc
adc
or
call
xor
fs
dec
sbb
and
clc
inc
push
mov
mov
data16
fmuls
fs
sbb
scas
dec
mov
les
cmp
or
mov
mov
sub
sbb
call
das
enter
adc
inc
xchg
pop
push
xlat
and
pop
insb
mov
cmp
cmpsb
in
inc
add
dec
bound
movl
pop
push
inc
inc
mov
push
imul
sahf
test
loope
adc
mov
int
repnz
lds
pop
mov
lahf
mov
mov
mov
adc
stos
mov
jb
fwait
or
push
test
inc
and
mov
push
mov
sbb
cli
lret
lock
mov
xchg
aaa
add
mov
rorb
loopne
lahf
leave
data16
test
pop
hlt
ret
xchg
push
clc
les
push
xchg
test
movl
out
pop
sbb
enter
lret
bound
sarl
pop
dec
jno
add
inc
cmpsb
enter
jmp
xor
jmp
ss
add
ret
xchg
fldenv
frstor
cmp
jge
imul
push
mov
cmpsl
jecxz
jmp
aaa
aas
je
sbb
dec
xchg
lret
push
jmp
mov
cltd
mov
and
inc
jbe
test
std
test
dec
inc
or
add
add
adc
addl
push
and
cld
hlt
add
mov
add
adc
or
es
xchg
nop
int3
sbbb
lods
add
and
dec
sbb
adc
xchg
pop
loop
in
aam
jae
leave
pop
inc
mov
cmpsl
xlat
in
pop
andl
sub
pop
inc
js
mov
dec
stc
sub
push
cld
xchg
push
xchg
fldt
pop
cmp
lods
add
ret
fdivs
out
push
inc
jge
jmp
popa
ljmp
in
stc
lods
mov
dec
sub
pusha
mov
mov
dec
jnp
loopne
fndisi(8087
add
dec
sub
ret
xor
shll
mov
fcompl
scas
sbbb
xor
mov
cwtl
pusha
imul
test
jnp
cmp
imul
adc
jle
fdivrs
xchg
dec
pop
mov
adc
rol
test
ret
sub
add
dec
test
pop
cltd
idivl
xrelease
mov
rolb
shlb
mov
mov
scas
inc
into
jne
cmp
sbb
mov
loope
jno
mov
mov
inc
adc
ljmp
fildl
ja
lret
pop
jle
pop
lret
xchg
lock
pop
cmp
add
add
mov
loope
pop
mov
pop
xchg
int3
mov
dec
rol
jp
ret
xor
push
pop
fildl
or
xchg
pop
pop
int
xor
imul
mov
xor
xor
inc
jecxz
sbb
pop
mov
mov
sarl
xor
sbb
sbb
pop
and
xor
dec
shll
pop
mov
cmpsb
stos
mov
daa
jne
addb
enter
int
dec
mov
push
aas
lret
and
out
cli
adc
sahf
lret
dec
pop
jno
stos
cmc
imul
loop
ret
xor
and
inc
enter
sub
decb
lods
inc
pop
cs
mov
lret
push
ret
jae
fs
nop
or
push
loope
inc
cmp
dec
fadd
leave
dec
imul
pop
mov
nop
inc
andl
cld
inc
cli
xlat
cli
aad
scas
jl
push
jbe
out
add
dec
mov
jmp
mov
enter
sub
out
mov
int3
imul
push
xchg
daa
loopne
mov
out
mov
mov
add
lock
sub
bnd
ss
sbb
inc
xor
ja
fstl
mov
jbe
jl
fdivs
mov
xor
xchg
ret
ds
test
mov
jge
cltd
cmp
mov
std
dec
ret
mov
mov
mov
inc
and
push
test
ret
out
sub
daa
mov
xor
imul
xchg
inc
jo
repnz
inc
enter
movsb
sbb
jl
fdivr
inc
pop
fld
mov
sahf
or
mov
hlt
and
dec
dec
or
ss
sar
ds
lock
rclb
mov
cmp
mov
std
fxam
pop
mov
aas
ret
push
fs
rcrl
clc
fisttpll
scas
or
shlb
adc
test
cli
pop
sub
inc
cmc
sub
fistpl
xchg
in
subl
mov
stos
mov
and
stos
test
cmp
jmp
js
cmc
dec
mov
and
stos
xchg
cmp
jp
cmp
xchg
inc
nop
mov
or
lds
pop
and
xor
xlat
mov
add
xchg
jae
lods
xor
jne
dec
mov
in
fxch
cmp
xchg
adc
mov
inc
fstpt
push
in
jb
push
xor
sahf
daa
push
inc
mov
stos
aas
xchg
or
roll
mov
and
dec
out
mull
inc
enter
mov
and
mov
dec
ret
mov
in
fsubs
pop
and
jbe
cmp
sub
inc
xchg
fidivrs
out
rclb
in
add
pop
aas
add
dec
pop
outsl
fstl
jmp
pop
sarl
repz
sub
sub
arpl
add
adc
mov
enter
fs
and
dec
pop
cli
mov
iret
mov
mov
inc
ljmp
sub
loope
jno
mov
into
call
shrb
mov
dec
sub
add
movsl
enter
dec
jns
or
adc
pop
mov
lcall
jmp
push
pop
int
sbb
shl
out
xchg
pop
dec
mov
shrl
and
cmp
cmp
ss
dec
imul
and
mov
cmp
stc
jno
sbbl
and
sub
fsubrl
outsb
dec
mov
xchg
lcall
mov
mov
shrb
stc
aam
lock
hlt
adc
loope
cltd
pop
xor
in
sub
sbb
add
dec
inc
dec
or
imul
pop
idivl
movsb
jge
jnp
lods
popa
ja
jl
loopne
xchg
daa
mov
cmpsl
pop
inc
int
clc
cltd
xor
cmp
push
pop
push
daa
rorb
or
je
xor
sbb
call
mov
call
movsl
cmp
ljmp
stos
mov
incb
sbb
sub
ss
inc
rcrb
mov
scas
mov
xor
sub
adc
lret
addr16
test
ss
add
ds
push
loope
or
jno
inc
leave
xchg
mov
or
mov
es
fistl
das
in
fdivrs
cmp
mov
mov
mov
jo
mov
stos
mov
repz
mov
imul
ds
lods
scas
cmpb
pop
mov
dec
push
cmp
or
mov
xchg
xchg
aas
mov
movsl
inc
dec
and
adc
hlt
sbb
push
outsb
push
fimuls
mov
push
orb
rcr
sub
fmull
jo
push
add
ja
dec
int3
jnp
mov
stos
addr16
push
inc
in
movsl
arpl
inc
pop
leave
sub
push
addr16
test
pop
js
imul
fisubs
cli
mov
cmp
sub
jge
dec
lret
pushf
xor
cld
sti
clc
lret
cmp
mov
fs
or
or
pusha
pop
push
ficoml
repnz
sub
xchg
lds
ss
inc
xchg
sub
fwait
mov
or
out
aam
lock
cmp
das
fidivl
cli
sti
inc
push
sbb
fs
cwtl
mov
fucomp
adcl
shlb
into
mov
cwtl
out
mov
rol
pop
bound
je
push
sub
push
in
jb
push
and
xchg
decb
mov
dec
add
pop
lods
push
addr16
pushf
or
mov
adc
imul
jbe
cmc
pop
insb
sub
and
mov
cs
loope
dec
es
les
jbe
into
add
sub
xchg
add
lds
mov
mov
es
psubb
pop
das
push
iret
fistps
and
push
and
adc
rcll
and
test
cmpb
jge
jecxz
push
jle
inc
pop
mov
pusha
sub
ret
mov
xor
aad
xor
ljmp
loop
cli
frstor
std
push
inc
aad
push
fimuls
stc
push
out
add
test
lcall
cltd
mov
psraw
out
cmpsl
sti
sbb
mov
mov
mov
mov
cmp
mov
cmp
rorb
or
rclb
mov
aam
jp
rorl
dec
mov
shlb
xchg
or
hlt
add
inc
out
pop
push
and
in
lea
xchg
nop
ficoms
jle
in
mov
loope
scas
pop
cmp
sub
ds
rol
and
enter
clc
and
add
and
sahf
stos
sbb
je
mov
jae
insb
push
push
cmp
mov
lock
stos
mov
push
pop
and
pop
ljmp
fcomps
push
not
sbb
sub
and
push
and
xchg
aam
shll
imul
jae
sbb
imul
cmp
cmp
pop
movsb
pop
adc
imul
es
pop
pmuludq
dec
cs
jp
sub
imul
cmp
out
inc
enter
pushf
sub
push
cmp
popa
bound
cmp
inc
xchg
cmc
mov
bound
pushf
adc
xchg
sub
xchg
and
sub
pop
jmp
lods
sti
xchg
mov
pop
sahf
sbb
xorb
sbb
in
inc
addb
lea
aam
mov
fnstcw
cmp
jmp
setne
ds
and
pushf
add
jp
cli
or
lahf
ret
sbb
and
sub
adc
pop
xchg
mov
cmp
push
test
jae
mov
clc
xchg
ret
shlb
mov
and
lret
pop
xor
pop
jb
cs
push
rorl
imul
dec
sbb
dec
aad
pop
mov
sar
dec
push
adc
mov
dec
aad
rorb
adc
lret
mov
cmc
loop
push
sti
xchg
flds
lret
rcl
cli
pop
mov
xlat
mov
push
cmp
sub
sbb
mov
dec
push
cmpl
pusha
push
adc
xor
repnz
js
lock
mov
cmpsl
sub
es
mov
xor
mov
repz
jne
add
shll
add
adc
neg
sbb
shrb
mov
jmp
add
mov
inc
push
add
frstor
shrl
dec
or
jp
or
int3
xchg
sub
inc
push
lods
mov
or
insl
mov
lret
sub
or
and
pop
mov
aam
lea
push
sarb
pop
fstl
test
sbbb
sub
fstpl
xchg
lret
jl
sbb
adc
sub
cltd
ret
ficomps
out
sbb
mov
push
dec
mov
sub
mov
mov
sub
pop
stos
pop
xor
ror
loope
xor
clc
std
out
stos
aaa
ret
inc
addr16
dec
and
push
ss
cmp
loopne
gs
cmpsl
aas
jle
sub
repnz
xchg
add
js
mov
scas
xchg
addr16
add
add
sbb
fidivrs
pop
loop
jp
cmp
dec
jp
mov
ss
in
add
cmp
and
fidivrl
push
dec
jns
jo
mov
and
repnz
pop
cmp
inc
sbb
add
popf
add
or
sub
cmp
std
cltd
sub
adc
lcall
and
imul
sbb
stc
add
les
and
xor
xchg
scas
mov
pushf
imul
cmp
xchg
repnz
movsl
jnp
sub
inc
inc
add
bnd
cmpl
add
out
les
add
pop
xchg
sbb
mov
pop
lds
ret
jg
mov
repnz
xchg
xlat
loopne
ret
mov
iret
fsubrl
sub
mov
and
push
add
lret
push
xchg
shrl
test
fldt
sar
and
mov
nop
push
mov
inc
mov
xchg
mov
push
xor
imul
pop
sbb
mov
jb
adc
inc
dec
pop
clc
aad
clc
lret
pop
inc
int
les
xchg
and
out
ret
mov
shll
sbb
mov
or
add
cmp
push
lret
or
xchg
add
pop
ret
sub
push
fisttpll
fwait
dec
sub
jge
imul
fimuls
xlat
jae
lahf
lahf
aas
rcrl
cmp
repz
test
insb
adc
sbb
psubq
dec
push
cld
sbb
mov
cli
lods
mov
xchg
imul
xor
dec
xchg
mov
dec
inc
pop
or
movsb
mov
lret
addl
insl
cmp
cmc
cmp
cmp
movsl
sbb
push
in
ret
fisubrs
fsubp
movl
mov
testb
test
lock
mov
add
stc
adc
dec
push
jg
nop
test
pop
aas
xchg
and
add
mov
test
test
pop
and
out
sub
ss
jnp
pop
movsl
xor
bound
xchg
xor
mov
fs
jle
std
test
inc
cmpsl
mov
dec
test
sub
dec
addb
pop
adc
dec
jno
jecxz
mov
push
mov
fdivrs
pop
movsb
daa
mov
dec
jb
cmp
mov
outsl
cmp
test
jnp
int3
sub
pop
js
cs
std
and
arpl
pop
imul
das
and
imul
xor
jl
mov
flds
adc
ror
mov
pusha
out
pushf
je
dec
and
ljmp
call
std
mov
mov
jnp
fmuls
jecxz
and
dec
sbb
jge
and
sub
add
pop
and
stc
or
mov
lods
es
fsubr
sub
sbb
bound
scas
rcrb
ja
push
addl
adc
xchg
push
xrelease
dec
jg
push
pop
icebp
xchg
test
jno
std
dec
pop
inc
das
loopne
add
nop
dec
pop
dec
inc
mov
ljmp
push
and
lret
inc
nop
mov
cmp
aam
add
mov
iret
cmpsl
lret
pop
jbe
shlb
inc
out
pop
subb
jne
mov
jmp
mov
push
stos
mov
add
jnp
movsb
mov
std
inc
les
sbb
and
cmp
mov
sub
xor
sbb
es
inc
xor
cmp
mov
verw
push
mov
loop
enter
enter
xor
sub
sub
popf
xchg
sbb
cmpsl
cwtl
jae
push
push
cmp
enter
and
hlt
je
aas
enter
xchg
sti
hlt
and
jns
enter
sub
sbb
rorl
repnz
jmp
push
cmp
sbb
icebp
cli
mov
das
jle
xchg
push
dec
test
inc
jl
nop
shll
call
decb
lret
xor
pop
jnp
in
pop
mov
jmp
add
lods
in
addr16
scas
or
shlb
jg
add
pop
daa
mov
les
sbb
jp
xor
xlat
inc
mov
ret
jo
mov
jg,pn
imul
pop
sarb
insl
pop
and
dec
jb
push
rcrl
fs
lret
nop
ja
jp
mov
xchg
pop
imul
pop
lods
mov
cmpsl
scas
imull
ret
pop
jg
repnz
inc
imul
loop
inc
ja
jmp
cli
mov
adc
dec
insb
daa
lret
xchg
popa
aas
sbb
xchg
loop
jbe
xor
mov
imul
rcll
ret
cmpsl
jp
call
fcoms
xchg
sbb
les
je
xchg
push
movsl
inc
and
ja
clc
xchg
jecxz
mov
pop
xor
orb
push
insb
push
push
sub
inc
push
jnp
enter
inc
nop
fisubrl
push
xchg
fdivrl
mov
rolb
xlat
std
jl
xchg
repz
mov
jns
xchg
fcomp
mov
add
jo
shll
cmp
xor
pop
rorl
jno
inc
push
int3
flds
aaa
push
jb
xorb
rorb
and
or
sub
das
add
in
test
mov
sarl
xor
xchg
shll
inc
stos
dec
push
and
mov
add
cbtw
out
xchg
rorl
bound
fdivrl
mov
sub
pop
insb
xchg
push
dec
fstps
int
xor
mov
jb
fs
add
ficoms
sub
rcl
dec
add
mov
arpl
xor
inc
mov
pop
bound
cld
push
in
cmp
pushf
cmp
stos
sub
add
pop
jbe
adc
js
adc
jl
popa
xor
mov
mov
fwait
sbb
pushf
push
sbb
sahf
test
faddl
leave
imul
pop
mov
cmp
or
or
add
pop
pop
dec
repz
cmc
test
pop
inc
popa
push
mov
jnp
cli
bnd
cld
pushf
jle
jle
fsub
enter
sbb
out
dec
aad
cmp
jmp
mov
add
pop
cmp
cmp
push
ds
popa
mulb
pop
pop
push
fcompl
pusha
test
sub
ret
enter
sbb
aad
cmp
lret
fs
mov
mov
add
mov
lcall
outsl
add
ja
jl
and
incb
fistl
adc
rorb
xchg
sbb
js
pop
out
insb
push
sub
outsl
cld
das
nop
mov
pop
add
scas
jecxz
mov
cld
dec
and
xchg
mov
aas
jle
adc
xchg
mov
jg
repz
sub
stos
cmp
jl
sbb
jae
xor
mov
jmp
std
and
sbb
out
sbb
test
lds
stos
dec
pop
addr16
in
rcrb
loope
lock
cmp
jne
test
cli
adc
orl
imul
pusha
into
cmp
es
inc
sbb
adc
xchg
test
adc
pop
mov
les
jo
xchg
fsubrs
jo
ret
or
mov
xchg
xchg
cmp
mov
xor
adc
jbe
not
sbb
inc
adc
ds
mov
push
mov
xlat
and
call
push
scas
mov
xlat
adc
push
nop
jb
jmp
push
xor
jmp
shrl
leave
mov
push
fcmovu
xor
cmp
sub
and
out
sbb
jb
shll
out
sbb
js
fldcw
or
sub
aas
push
iret
out
arpl
sub
lods
ret
ljmp
adc
pop
cmpsb
cmp
lret
rorl
mov
dec
sub
push
stos
bt
sbb
loopne
lods
adc
sbb
inc
mov
insb
adc
jnp
jne
xchg
lds
or
jmp
lcall
in
pop
add
hlt
mov
test
sti
adc
daa
orl
jl
xchg
loope
jle
pop
test
fimuls
int
mov
cmp
sbb
pop
repnz
xchg
jbe
shll
fs
jbe,pt
xchg
dec
or
add
push
jae
ficoms
loop
and
adcl
adc
movsl
push
loop
add
sub
scas
out
inc
imul
aas
and
cld
push
mov
mov
fucomi
inc
mov
cli
je
stos
jl
xor
sub
nop
and
rolb
pop
cmc
fcomps
inc
imul
test
stos
and
push
adc
aam
jecxz
mov
add
or
jnp
cmc
mov
sti
rorb
inc
sti
mov
mov
xlat
cwtl
and
mov
inc
pop
shrb
pusha
lods
es
mov
xor
nop
movsb
sbb
movsb
or
lods
in
stc
pop
mov
xchg
js
fimuls
rcrl
sub
jg
mov
stos
cwtl
sbb
dec
out
or
rolb
or
cltd
jmp
sbb
mov
push
cmpsb
flds
add
mov
out
sub
xlat
enter
xchg
jg
imul
test
mov
leave
adc
neg
dec
sahf
lds
imul
jno
cmp
mov
int3
ret
xchg
ljmp
inc
mov
pop
enter
ret
adc
out
or
xchg
jg
shr
push
clc
xchg
cmp
pop
sub
cmp
push
pop
loope
sbb
std
ds
loop
ds
sbb
cwtl
popa
xor
or
sbb
cli
jns
ret
nop
ficoml
fbld
mov
lock
cmp
mov
and
xor
xchg
into
fsts
ljmp
lods
sarb
shrb
mov
aas
xlat
add
mov
test
fxch
clc
sbb
sub
and
daa
cs
pop
or
subl
push
stos
inc
js
jmp
adc
xchg
jns
xor
fsubrs
pop
mov
popl
xchg
or
mov
cmp
sbb
loope
add
sbb
push
mov
daa
mov
push
mov
pushf
xchg
pop
aaa
and
pop
xor
jns
inc
inc
test
rclb
bound
fwait
xchg
lret
leave
mov
and
dec
inc
pop
mov
jecxz
mov
loope
aas
popf
shrl
mov
pusha
or
fidivl
repz
iret
testb
out
sbb
icebp
add
jge
xchg
cmp
cmpsl
and
cld
js
out
mov
cmp
lods
xor
clc
lret
iret
addr16
mov
adc
inc
insb
stos
cld
bound
xchg
stc
shll
jns
mov
sub
jl
cmp
xor
ja
cmp
push
mov
cli
int3
push
int
mov
mov
cwtl
movsb
cld
cld
stos
aad
lea
dec
loop
jecxz
jmp
popa
imul
xchg
imul
mov
hlt
xlat
test
aam
clc
rcrb
xchg
dec
jno
xchg
sbb
jnp
lods
and
jmp
es
scas
das
dec
ss
jecxz
push
or
cltd
and
xlat
cmp
ficoms
push
fadd
jecxz
pop
pusha
hlt
loopne
mov
sub
bswap
push
or
into
fs
das
xchg
out
dec
out
lret
push
pop
mov
cmp
mov
bound
lret
jo
movsb
nop
push
xchg
in
push
pop
orl
imul
lret
or
movaps
cltd
and
pop
or
sub
add
sub
cmp
mov
and
arpl
inc
mov
sbb
imul
mov
sbb
imul
mov
outsl
or
gs
add
dec
adcl
shrl
mov
mov
mov
mov
mov
sbb
cmp
loope
cmp
ret
or
dec
ljmp
sbb
dec
scas
sbb
or
jecxz
sbb
add
push
and
mov
call
xchg
lret
cwtl
leave
jb
mov
mov
mov
test
insl
or
cmp
cld
daa
fisubrs
in
orl
push
fmull
xchg
add
cwtl
xor
mov
xchg
addr16
or
sub
lods
xor
mov
mov
es
mov
cltd
iret
jnp
mov
inc
ja
push
sub
pop
dec
and
sub
add
xchg
loope
dec
pop
lcall
inc
and
mov
sbbb
inc
fisttps
imul
add
push
push
mov
and
popf
dec
fisubl
popa
nop
inc
xor
enter
aas
ret
mov
jnp
pusha
std
add
cmpsl
rclb
cmp
bound
fwait
mov
pop
mov
hlt
inc
repnz
inc
into
test
adc
movsl
adc
jns
or
dec
ss
fisubrl
jmp
cmc
mov
rolb
dec
mov
jle
mov
adc
xor
mov
fnsetpm(287
xor
fnstenv
lret
inc
and
aas
in
jno
ret
push
mov
push
xchg
sub
dec
into
cld
jecxz
aas
ret
aam
xchg
cwtl
xor
mov
es
lea
xor
cmpsb
sub
cmp
sub
in
adc
and
add
and
stc
adc
mov
and
into
inc
and
decl
mov
cmp
aam
call
sbb
dec
sub
inc
sub
adcl
push
inc
push
imul
push
mov
push
mov
insb
cmpsl
jne
lea
int3
xchg
cmp
xchg
dec
scas
in
cmpsb
cmp
sbb
ja
and
popa
dec
xchg
dec
ret
add
jle
lods
push
pop
add
rol
and
aam
mov
push
inc
out
movsb
or
test
xchg
inc
sub
push
cmp
cltd
inc
sbb
call
and
jae
inc
xchg
fisttpl
test
push
movsl
arpl
mov
push
xchg
xor
xor
jge
push
xchg
icebp
push
push
nop
lock
sub
nop
in
mov
fstpl
add
cltd
inc
adc
and
inc
add
mov
mov
or
sub
cmp
cli
mov
lods
cmp
arpl
jno
mov
fisttpl
sub
out
cmpsl
adc
out
dec
mov
fdivl
rclb
and
aam
mov
mov
ret
jle
sbb
mov
pop
jmp
push
sbb
cld
addr16
or
and
je
daa
add
and
jp
std
cmp
add
jnp
add
xchg
stos
rcl
int3
mov
hlt
xchg
dec
jo
lret
pop
fmuls
mov
lods
loope
cmp
pop
sub
test
lods
dec
push
jns
pop
scas
jns
cmp
mov
mov
xor
sti
push
outsb
pushf
sti
test
clc
mov
and
pop
jne
jno
cmp
aaa
sub
cmp
adc
insb
push
out
jnp
mov
mov
pop
jae
mov
and
adc
sbb
mov
mov
cmp
or
push
jge
mov
andl
bound
adc
in
fisttps
mov
jecxz
push
inc
adc
jecxz
sub
inc
test
pop
hlt
adc
int3
add
subl
dec
jns
jbe
mov
inc
xchg
cmpsl
stos
adc
test
add
xchg
xlat
cmp
mov
jo
adc
mov
mov
cmp
out
mov
push
push
inc
pop
aad
or
jb
mov
xchg
int
subl
push
xchg
dec
cmpsb
jl
loop
pop
inc
sub
int3
enter
and
inc
sub
inc
mov
and
add
mov
inc
adcl
cmp
mov
pop
jo
inc
lods
inc
pop
xor
aad
testb
cld
fwait
mov
mov
cmp
pop
pminsw
push
shr
inc
ja
mov
aaa
or
xchg
jo
pop
xchg
insb
fbstp
and
xchg
xorl
incb
xchg
jnp
push
mov
out
jl
xchg
adc
adc
cmp
add
jle
nop
jbe
mov
daa
jp
out
imul
lret
ror
test
cwtl
mov
insb
push
iret
popa
mov
loopne
xchg
pop
adc
pop
jmp
orb
in
int
sub
inc
fadds
rorl
iret
mov
inc
push
add
fmuls
ret
imul
lods
sub
adc
sub
lret
lret
xlat
in
fmull
xor
ljmp
int3
repz
jmp
arpl
mov
movsb
jne
pusha
in
das
dec
lret
mov
dec
pop
sldt
in
and
out
cmp
aad
ret
loop
subl
subl
cld
inc
bound
jnp
imul
ja
dec
in
or
inc
mov
adc
mov
sub
sub
sub
cmp
sbb
es
out
add
push
js
orb
mov
loope
xchg
mov
insb
call
xchg
or
jns
sub
cmp
fiaddl
iret
int
in
xchg
sub
adc
xchg
add
out
and
dec
cmp
dec
dec
add
mov
out
popf
pop
dec
mov
push
loope
mov
mov
dec
lock
leave
inc
xchg
mov
ret
in
out
add
sub
test
pushf
daa
aad
decb
jle
imul
dec
daa
and
out
pop
push
mov
sub
adc
dec
push
add
lods
nop
lret
sarl
fisubl
xor
jae
pop
ror
ljmp
add
mov
add
lds
es
push
or
mov
sar
pop
xor
ficoms
xchg
and
cmp
xchg
dec
dec
dec
mov
mov
movsb
mov
cmp
sbb
pop
add
xchg
sub
xor
lods
fimull
out
jl
xchg
in
jmp
push
lods
xor
lcall
cmpsb
dec
scas
pop
jo
lret
push
cltd
enter
pop
fdivl
cli
dec
sbb
adc
cwtl
clc
cld
jo
cld
inc
loop
rclb
mov
aam
sub
andb
or
ja
sbb
mov
mov
js
mov
add
mov
add
outsb
or
sbb
xchg
mov
loop
repz
dec
std
movsb
imul
stos
ss
adc
in
pushf
push
mov
test
push
sahf
subl
imul
jae
movsb
jge
mov
mov
imul
lea
movsb
sbb
loope
cltd
xor
iret
lds
fldenv
ljmp
cmp
insb
int
pop
imul
dec
fldt
and
dec
dec
mov
ja
and
sub
adc
jns
pop
mov
push
dec
fisubl
pop
sbb
pop
ja
adc
shl
inc
push
add
int3
pop
leave
fisubl
das
aaa
sahf
inc
js
leave
mov
pop
pop
lret
xlat
inc
test
lahf
pop
stc
clc
xchg
movsl
insl
xor
adc
lods
mov
xchg
inc
lahf
outsl
mov
icebp
sar
mull
xchg
dec
fadds
aas
xchg
add
add
in
in
jb
sub
pusha
pop
cmp
iret
dec
push
arpl
xchg
ret
nop
mov
jl
pop
sbb
lahf
xor
adc
mov
cmc
call
xchg
cli
testl
jae
cltd
cmp
push
push
flds
sub
and
pop
mov
inc
daa
lret
mov
sub
and
fwait
mov
shlb
jno
in
mov
push
mov
lret
push
inc
or
inc
shr
cmp
jl
loope
std
mov
inc
je
and
movsb
movsb
cwtl
int
arpl
lahf
inc
gs
pop
adc
ret
xor
jecxz
inc
imul
sahf
xor
mov
mov
adc
cwtl
xchg
push
pop
push
rorb
add
popa
fisubrs
push
scas
in
pop
cmp
je
mov
nop
add
bound
xchg
jmp
mov
and
dec
dec
and
dec
push
and
push
pop
outsb
fildl
xchg
jae
lods
lods
inc
mov
dec
mov
mov
cltd
lret
and
aad
and
addr16
js
sub
cmc
and
filds
arpl
jnp
mov
mov
push
cmpsl
cmp
inc
add
ss
bound
push
or
fninit
inc
mov
jo
pushf
insb
xchg
mov
in
imull
push
jo
jl
scas
pop
sbb
imul
cmc
mov
inc
or
dec
inc
stos
adcb
push
nop
pop
cld
data16
es
loop
sbb
roll
cmc
popa
in
fldcw
push
ret
test
mov
pusha
notb
loope
sub
and
mov
xchg
js
nop
lret
xchg
and
les
mov
dec
imul
mov
call
fdivrl
inc
cmp
mov
test
add
pop
inc
sub
sub
dec
movsb
push
cmc
aam
test
outsb
mov
inc
lods
jl
pop
pop
jmp
clc
sub
mov
or
decb
sub
xchg
int3
mov
int
xchg
das
xchg
and
pop
mov
jge
movsl
loope
dec
std
pop
adc
loopne
jns
rorl
add
mov
push
mov
dec
imul
aaa
cmp
xchg
adc
idiv
xor
mov
lret
adc
pop
ja
jp
ljmp
out
xchg
lea
lods
movsl
mov
iret
mov
into
movsl
aam
jecxz
clc
jnp
pop
pop
xchg
cmp
es
imul
shl
shll
pop
and
and
xor
jl
imul
int3
loope
add
out
push
ret
mov
or
jnp
rorb
jno
xchg
aad
jl
jae
movsb
jmp
jg
or
out
mov
or
test
call
and
pop
or
xchg
sbb
inc
adc
mov
mov
xchg
pop
mov
add
jecxz
jecxz
mov
inc
ljmp
rorl
inc
mov
loopne
jl
and
enter
xor
jmp
dec
mov
jns
es
fadds
mov
ror
repz
pop
divb
push
cmp
push
sbb
xchg
pop
inc
xor
fsubl
add
std
jg
cmp
imul
int3
pop
leave
pop
push
push
adc
dec
sub
or
and
mov
enter
fidivrl
cltd
les
or
in
add
insb
scas
arpl
mov
adc
movsl
sbb
jmp
push
mov
iret
adc
push
scas
mov
dec
xor
and
mov
lods
mov
movl
out
int3
lret
imul
sub
pop
cmp
lods
cltd
into
ss
ljmp
cmp
sub
lret
in
pop
roll
mov
fwait
aaa
roll
mov
jns
push
insl
arpl
insb
addr16
aaa
inc
push
cmpps
ja
stos
mov
test
loope
js
sbb
push
jl
mov
push
cmp
mov
dec
outsb
popa
ret
cwtl
cmp
stos
shl
aas
jmp
and
fimuls
fmull
jno
iret
test
mov
sub
adc
mov
loopew
daa
push
stos
mov
mov
jbe
stos
mov
lcall
dec
or
mov
loop
sbb
inc
mov
mov
ror
scas
mov
add
bound
stc
imul
aad
xchg
push
ja
or
or
mov
or
mov
lds
mov
xor
lret
imul
lods
call
into
mov
loop
xor
jp
fstpl
leave
sub
dec
lret
sub
sti
out
insl
mov
insl
imul
pop
andl
cmp
mov
ficoms
sti
push
orb
lcall
sub
enter
xorl
or
faddl
ds
stos
sahf
jnp
jmp
or
mov
fwait
or
cmp
xchg
sti
sti
cmp
shld
add
cmp
mov
movsl
js
inc
ja
mov
cmp
gs
stos
loope
gs
or
test
pop
ss
js
or
insb
cmp
mov
inc
test
inc
inc
or
mov
stc
cs
fimuls
icebp
xchg
lret
outsl
enter
ret
pusha
cmp
testb
lret
dec
sarl
and
xchg
data16
push
xchg
xchg
jge
fimuls
repnz
jle
lock
inc
cmp
out
hlt
repz
push
pop
xchg
test
jmp
lcall
push
push
cs
push
mov
in
popa
sbb
and
lods
mov
das
rcrb
push
fisttpl
pop
vminpd
imul
and
popf
fs
pop
xor
add
jns
outsl
fwait
pop
ret
xor
int
pop
dec
lea
outsl
pusha
lods
ljmp
shrb
xlat
cmp
xchg
jg
add
lcall
add
sub
or
cltd
inc
sub
jg
clc
in
dec
das
lds
xor
mov
push
push
rcrl
push
movsb
push
ja
gs
or
mov
mov
inc
sbbb
rorb
pop
add
addr16
dec
stos
inc
lret
jl
mov
rclb
push
adc
mov
loope
out
push
mov
inc
lds
paddw
pop
mov
xchg
scas
cmp
jbe
cmpl
les
cmpl
add
fimuls
or
push
dec
cmpsl
mov
push
enter
mov
or
loopne
sarb
into
out
or
inc
jno
sbb
add
adc
fs
xchg
dec
sbb
xor
shll
fstpt
leave
adc
dec
roll
and
xor
je
or
cli
ret
mov
xchg
int3
sub
int
sub
clc
int3
aad
js
dec
sub
sbb
inc
lret
or
jmp
mov
jle
mov
xchg
add
or
dec
cmp
or
sbb
stos
lock
and
dec
and
pusha
add
shrl
sbb
divb
mov
fistps
fnsave
test
in
movsl
mov
mov
int3
push
mov
sub
pop
cmp
out
inc
mov
cmp
inc
inc
cld
repnz
scas
in
pop
xchg
and
notl
mov
out
dec
adc
add
repnz
sub
cmpb
cmp
xchg
cwtl
stc
nop
or
pop
mov
and
jno
pop
rol
inc
pop
jo
lds
js
cmc
mov
roll
push
movsb
jnp
loop
cmpb
add
dec
fnstcw
lods
and
mov
add
lret
iret
xor
and
sbb
mov
orb
jle
out
mov
sub
insl
movsb
cmp
in
xchg
dec
aas
push
stos
pop
dec
sarb
pop
cmp
push
and
pop
inc
push
cmp
or
cli
push
pop
or
scas
push
jle
pop
sub
push
jp
test
inc
lea
pop
out
mov
lahf
aas
mov
movsl
cmp
fdivrl
imulb
aaa
sarl
ret
leave
mov
ds
sbb
sbb
xor
pop
inc
mov
xchg
into
mov
adc
sub
jle
xchg
push
cmp
jns
loope
lods
sahf
cmpsb
cli
jb
aaa
push
leave
incl
cmp
ficomps
repz
fnstcw
mov
sbb
dec
pop
into
loop
rclb
scas
dec
and
add
inc
in
sub
adc
cli
loope
mov
xor
test
dec
inc
adcl
xchg
pusha
imul
scas
xchg
fcoms
xor
fistps
xchg
lcall
mov
fldt
cmc
jmp
pop
incb
pushf
cmp
aas
stos
arpl
xchg
xlat
ror
sbb
pusha
dec
mov
and
xchg
xlat
cmp
pop
ret
mov
lock
pop
pop
xchg
fnstsw
je
lock
dec
cmp
xchg
push
fstl
pop
mov
inc
ret
mov
xchg
mov
xchg
and
aam
orl
pushf
lret
cmpsl
loop
lret
iret
cmp
cmp
dec
mov
sbb
xor
mov
push
sub
aad
movsl
adc
scas
jecxz
jle
lret
dec
sub
dec
sbb
sbb
andl
cmp
xchg
add
fsts
xor
int
xchg
nop
sbb
je
jne
push
in
fstps
inc
jnp
lcall
xchg
lea
cmp
inc
and
je
stos
pop
mov
hlt
mov
lods
scas
mov
or
test
int3
xchg
pushf
imul
out
xchg
sahf
mov
shll
jle
lret
or
jg
mov
mov
sub
xor
imul
sbb
scas
pop
shr
lcall
push
cmp
jnp
mov
adc
push
sti
lahf
mov
mov
pop
pop
add
inc
inc
xchg
xchg
shlb
push
xchg
mov
pop
inc
sub
lods
dec
incb
cmp
sub
icebp
mov
or
std
cltd
cmp
pop
loope
rclb
popa
addr16
hlt
cld
movsl
add
jno
dec
pop
xchg
mov
xor
xchg
pop
cmp
dec
mov
sub
pop
sarl
sub
xchg
cmp
test
xchg
fs
fcomp
sbb
or
shrb
fcoms
push
aas
in
int3
movsb
lods
xchg
in
fistpll
push
cmp
incb
jp
movsb
pop
cmp
pop
sub
in
xor
sar
and
mov
ret
pop
cmpsb
pop
push
cmp
xor
mov
push
add
lahf
xchg
std
repnz
push
push
repz
jp
lret
jle
mov
js
cmp
and
pushf
add
cmpsl
push
sbb
lret
jmp
xchg
sbb
cltd
mov
add
jecxz
outsb
inc
repnz
fidivrl
rcrb
add
mov
cltd
int
jp
fcmovne
xchg
push
mov
inc
jns
mov
or
dec
jbe
jg
int
clc
test
icebp
inc
pop
repz
rcrl
pop
or
cmc
enter
lods
add
mov
ljmp
mov
adc
es
mov
daa
push
mov
aad
imul
dec
clc
add
cmp
cmp
dec
dec
push
mov
dec
push
push
xor
dec
outsb
cmp
mov
push
rcrb
cltd
dec
or
movsl
mov
test
cmp
push
push
xchg
dec
loopne
mov
xchg
mov
mov
dec
icebp
mov
int3
adc
pop
scas
in
xor
dec
aam
xchg
mov
popa
lods
je
dec
add
es
adc
or
aas
loop
adc
andl
jns
or
mov
cld
addr16
add
insl
sbb
rolb
sub
sbb
xor
std
test
data16
adc
xchg
pushf
aad
cmp
sahf
xchg
test
jbe
push
fiadds
fdivr
mov
rol
and
push
andb
adc
xor
int
or
pop
arpl
jns
push
cmp
roll
popf
sbb
xor
pop
leave
jo
jmp
dec
das
dec
insl
pop
js
mov
popa
in
cmp
and
jne
ret
stos
insl
inc
xchg
jle
pop
in
test
cmpsb
cmp
cltd
sbb
sahf
clc
bound
dec
leave
xorb
imul
add
mov
out
out
mov
hlt
xor
cs
mov
jb
enter
fdivs
adc
fcoml
mov
cmp
pop
xchg
lods
inc
push
mov
and
adc
stos
rcll
iret
or
in
aas
gs
sbb
call
fwait
ret
push
pop
loope
in
js
add
adc
jb
scas
and
dec
subl
into
call
fadd
fildll
ret
jns
xor
xchg
mov
xchg
xor
xor
das
adc
ljmp
jge
xor
pop
mov
cmc
jmp
sbb
scas
cltd
adc
ror
add
sub
fmull
cmp
xchg
jns
daa
aam
test
inc
into
xchg
mov
mov
jecxz
xor
fsts
xor
lret
shrb
cmp
les
sti
mov
jge
iret
xchg
rorb
inc
sub
pop
jle
or
jno
pop
jns
pop
add
and
inc
loopne
and
push
fistpl
jno
push
mov
and
ljmp
dec
arpl
lock
pop
inc
pop
mov
data16
lret
imul
hlt
jp
fs
shl
sti
sub
stc
jp
add
pop
clc
cmc
loop
dec
push
stc
pop
mov
les
sub
mov
imul
pop
jg
ja
mov
sbb
mov
add
in
dec
and
aaa
adc
arpl
cmp
pushf
sbb
mov
mov
xor
cmp
push
pop
push
popf
dec
push
daa
hlt
or
add
outsb
push
aas
cmp
notb
mov
push
or
fwait
aaa
ds
sub
xchg
xor
jmp
pop
inc
mov
stos
jno
insl
mov
mov
xchg
or
mov
pop
and
cmp
mov
mov
std
pop
sti
je
loop
mov
and
imul
je
add
cmp
xadd
lret
arpl
inc
pop
cmpsb
cmpb
cli
fcoms
cmpsl
and
ljmp
sbb
repz
cmpb
jnp
push
call
test
xchg
loope
es
inc
out
sbb
cmp
cli
imul
les
cmp
adc
xchg
test
xor
sbb
sub
dec
cltd
lcall
add
cwtl
and
mov
pop
shlb
or
nop
sub
enter
jmp
sahf
fadds
mov
and
xchg
pusha
pop
sub
and
popa
cmp
jle
call
jns
mov
jns
add
shll
loope
aas
loop
jmp
aad
stos
js
sub
arpl
cld
sub
cmp
lds
push
cmc
ret
pusha
mov
pop
mov
mov
cmp
lcall
aas
arpl
sti
pop
imul
imulb
mov
inc
addr16
add
lock
dec
xchg
adc
sub
aam
xor
movl
pop
outsb
fisubrs
inc
or
jb
cmpsl
mov
test
add
lods
inc
es
sbb
add
cmp
pop
mov
cli
loopne
clc
iret
fadd
push
inc
pop
inc
cltd
das
add
daa
pop
add
or
sbb
mov
test
cmp
mov
sbb
fcompl
jg
cmp
inc
inc
inc
or
test
cmp
das
add
enter
nop
pminsw
std
hlt
xor
push
jnp
mov
adc
std
roll
mov
jp
jno
fmul
push
int
pop
xchg
mov
cmp
lds
call
fnstenv
cmpsb
scas
cmpsl
xor
js
xchg
push
mov
cmp
in
or
stos
mov
ret
repz
sti
mov
pop
xchg
rolb
or
mov
mov
inc
in
mov
stos
or
mov
dec
and
dec
cmp
pop
add
movsb
imul
jb
and
xor
shr
dec
rorl
xor
idivl
add
cli
cmp
pop
sub
add
mov
xor
jp
and
mov
dec
in
cmp
sub
and
mov
ret
nop
filds
jo
fisttpl
inc
inc
enter
mov
fisttpl
mov
xor
mov
and
mov
jecxz
ds
int
mov
mov
stc
sbb
and
cmp
or
ret
inc
pop
setbe
add
inc
sub
imul
inc
jg
jb
popa
pop
adc
mov
xchg
pusha
push
and
imul
pop
idivb
mov
jle
inc
popa
fcmovnu
in
pop
cmpsl
js
bound
adc
out
fnstsw
or
and
int
imul
ss
sbb
cmp
stos
mov
stos
fildl
adc
loope
pusha
das
js
loop
insb
rcl
jg
cli
dec
sbb
pop
sub
imul
pop
cmp
les
mov
in
cmpsb
jne
pop
loop
xor
scas
mov
mov
ficoms
xchg
icebp
adc
stos
jg
dec
enter
sub
and
push
inc
add
cli
mov
cmp
pop
out
sbbb
jmp
addr16
popa
or
push
test
pop
popa
dec
cmp
add
add
std
inc
xchg
andb
xor
dec
add
adc
cmpsb
shlb
clc
xchg
pop
test
sub
mov
xchg
or
jle
out
cmp
mov
outsl
mov
pop
xor
dec
popf
mov
inc
jle
jmp
inc
fsubs
lret
mov
fcmovbe
jns
ficomps
in
jmp
ret
push
sbb
inc
stos
mov
mov
push
xchg
in
mov
cli
add
fisttps
xor
adc
dec
hlt
das
jb
scas
or
sub
push
in
sti
xor
pop
test
xchg
sub
gs
inc
ret
mov
rolb
jnp
ds
nop
into
iret
loop
ret
pop
cli
push
movsb
es
push
je
into
sbb
cmp
dec
pop
mov
add
int
movsl
cmp
pop
jbe
inc
ret
loop
daa
mov
leave
dec
test
mov
xlat
jns
mov
push
in
xor
cmp
dec
inc
sub
jecxz
movsl
lods
mov
outsb
and
ja
add
cmp
dec
push
fnstsw
add
testl
xor
and
cld
lods
xchg
std
cmp
les
test
cwtl
add
dec
stos
jae
ret
mov
bound
add
into
loop
dec
sbb
adc
add
pusha
jnp
or
lock
adc
adc
decl
dec
ror
mov
inc
add
push
loop
cmc
ret
mov
loope
sbb
loop
in
dec
js
jne
sbb
and
repz
testl
or
and
std
cmp
adc
iret
scas
jb
xor
inc
fsubrs
sbb
adc
je
in
dec
pushf
fisubrl
jne
arpl
xor
jle
push
inc
mov
les
mov
int3
cmp
and
or
jle
insb
fdivs
pop
sbb
jmp
imul
cmp
jmp
dec
out
dec
mov
popa
ja
arpl
gs
std
outsb
in
mov
into
fmul
push
je
stos
call
cmp
fndisi(8087
mov
pop
cli
xchg
cmp
adc
stc
call
mov
jns
jge
js
leave
lds
lds
pop
mov
mov
jnp
cltd
pop
adc
jne
dec
inc
loop
loopne
mov
inc
in
cmp
lock
mov
jmp
mov
mov
adc
xchg
mov
sbb
in
sbb
adc
shl
shlb
push
sbb
sbb
xchg
mov
movb
and
cmp
jecxz
xchg
inc
mov
repnz
ror
insb
xchg
pop
imul
fistpll
int3
std
into
aas
push
or
pop
and
lcall
rcrl
fdivrs
mov
pop
stos
xorb
ret
adc
cmp
inc
daa
fs
xor
shlb
mov
xor
inc
lret
jo
pop
push
jb
int3
daa
mov
inc
xor
inc
pop
loop
push
and
test
daa
dec
filds
das
fwait
mov
jge
xchg
stos
cmp
imul
push
mov
rcl
js
cmc
pop
daa
xchg
cmp
sti
xchg
mov
adc
lock
mov
jo
and
sbb
enter
popf
lret
pop
cld
push
je,pn
sub
mov
es
pop
pusha
sbb
gs
jbe
mov
aas
cmpsb
mov
fstps
lcall
sbb
mov
push
mov
xor
push
movsb
test
aad
arpl
pop
mov
out
mov
rcrl
sub
into
xor
stos
scas
pop
popf
inc
outsb
cmp
xchg
adc
xchg
imul
pushf
mov
pop
dec
xor
outsl
insb
jge
or
psraw
pop
mov
jle
dec
roll
ret
popa
pop
cmp
frstor
jle
fmull
pslld
shrl
std
shl
fs
or
dec
loope
fwait
andb
mov
ja
push
jl
repz
sbb
ljmp
lret
cmp
cltd
mov
stos
pop
inc
xlat
cwtl
and
clc
test
push
ds
sbb
nop
addr16
imul
or
aam
mov
cmp
add
sub
dec
sub
jge
repnz
xor
repz
jbe
ret
imul
mov
imul
or
clc
mov
mov
iret
mov
je
mov
pop
out
push
mov
or
aas
mov
nop
jne
sub
cmp
adc
adc
ret
test
cmp
mov
add
data16
sub
sbbb
test
inc
cmpsb
test
lods
cmp
pusha
call
inc
ja
pop
mov
add
test
push
mov
call
insl
mov
test
jno
push
negb
push
add
xchg
cli
jo
xchg
mov
mov
out
sarl
dec
jo
cmp
es
or
ficomps
int3
mov
push
nop
movsb
daa
sub
dec
sar
xchg
imul
lds
sub
imul
sarl
cmpsl
aaa
data16
imul
sub
inc
fwait
xchg
negl
lds
and
je
jbe
imul
jmp
mov
imul
ljmp
orl
add
repnz
faddl
sub
fadds
test
sub
fcomps
loope
mov
mov
sub
sti
rcll
sbb
push
jecxz
xchg
nop
lock
orb
cmp
into
pop
fcoml
std
ljmp
mov
add
push
pop
cmp
inc
xor
xor
sbb
dec
fldcw
mov
push
fmulp
mov
push
jne
fistps
mov
push
mov
movsb
scas
mov
mov
mov
and
ret
mov
dec
loop
sahf
fsub
in
fstps
mov
mov
push
leave
enter
daa
ret
cld
addr16
add
nop
loop
mov
pop
mov
icebp
sub
push
sub
add
adc
cmc
data16
mov
pop
mov
leave
jp
fdivs
push
inc
popf
divl
insb
aas
into
jmp
and
lret
clc
sub
pop
arpl
cmpsb
js
sub
sub
mov
and
or
sahf
lea
mov
cmp
movsl
hlt
mov
push
or
mov
add
and
fsubrs
push
and
std
adc
arpl
mov
out
imull
mov
lahf
std
jb
aaa
fcmovu
mov
adc
lahf
or
in
jnp
das
xorl
xchg
pusha
xchg
jb
inc
jb
gs
pop
dec
loop
xor
push
xor
pop
shlb
and
lea
and
push
jbe
jle
xchg
jb
sarb
insl
fs
inc
out
in
lea
test
mov
daa
stc
ss
pop
add
lret
mov
jne
cmpsl
sbb
bound
aaa
ficompl
lret
fnsave
jbe
lahf
cmp
div
loopne
pop
icebp
mov
mov
rclb
inc
mov
cmc
sti
icebp
les
cmp
mov
mov
jle
pushf
xor
pop
jg
push
lcall
inc
bound
loop
add
in
and
adc
xchg
sbb
out
or
or
loope
inc
sbb
mov
pop
cmp
mov
cmc
cld
int
fwait
inc
in
cmpsb
ret
mov
popl
mov
add
add
push
lret
pop
test
icebp
ret
leave
popf
mov
inc
mov
push
iret
nop
shl
jne
jae
test
mov
and
mov
sub
lcall
sbb
jge
sbb
scas
xchg
push
add
push
and
mov
xor
pop
dec
insb
or
popa
daa
push
out
andb
mov
push
mov
ret
inc
mov
scas
xchg
ss
jnp
xlat
mov
dec
out
and
add
xlat
adc
inc
dec
cmc
aam
cltd
in
pop
dec
or
mov
mov
adcl
or
xchg
pusha
push
jp
mov
sub
dec
push
pop
push
outsl
mov
mov
dec
mov
cmp
ret
sarb
test
add
fimuls
jl
ja
dec
inc
xor
ds
adc
lret
mov
xchg
cmp
pop
aas
cmp
aas
jno
add
out
decb
pop
repnz
lcall
lret
dec
aam
jge
inc
inc
ret
fs
out
jnp
sub
fstps
xor
fcoms
mov
xchg
xchg
push
xor
adc
das
inc
pop
xor
gs
scas
jl
cmp
jg
or
stos
loopne
sub
fmulp
add
xchg
in
adcb
scas
push
mov
popa
pop
xchg
push
fcomps
rcrb
and
mov
je
dec
into
jae
push
sar
jg
aas
nop
pushf
int3
insl
cwtl
rolb
rolb
movsb
push
xor
stos
xchg
arpl
mov
pop
xlat
daa
and
fstpt
aad
xor
inc
ss
jl
jnp
or
and
rorl
mov
in
out
xchg
fcmovne
popa
dec
push
pop
mulb
add
cmpl
jbe
xor
mov
jno
addr16
scas
mov
jmp
stc
cltd
mov
fs
and
sub
mov
lods
jg
out
jmp
popf
mov
mov
cmp
pop
jae
cmp
xlat
mov
jmp
loop
ja
mov
push
dec
loop
lret
adc
dec
mov
sbb
ret
and
fisubl
adc
ret
dec
mov
sbb
stos
sub
inc
or
xchg
or
sbb
gs
jmp
jns
outsb
ljmp
push
and
jle
aas
cmc
mov
or
adc
pusha
hlt
iret
test
add
and
pop
jmp
mov
inc
jbe
std
cmpsl
add
stc
and
popf
inc
dec
or
pop
sub
jmp
fnstcw
mov
push
inc
push
bound
test
clc
cli
pop
jle
mov
ret
add
add
add
mov
jb
inc
nop
push
mov
js
or
sti
pop
mov
add
ret
mov
dec
imul
std
ret
adc
ret
lahf
loop
sub
and
sbb
test
movl
or
sbb
adc
or
lods
ds
pop
dec
decb
mov
mulb
jp
pop
int3
insb
jae
aam
xchg
addr16
orb
inc
jns
sbb
inc
out
sub
adc
les
mov
mov
cmp
cwtl
adc
cmp
jl
aaa
je
sub
dec
dec
sub
nop
add
jl
push
pop
movsb
cmp
loopne
ret
ret
loopne
dec
imul
pop
mov
mov
pop
cmp
mov
pop
inc
mov
cmp
mov
nop
ss
dec
xor
popa
jne
pop
cmp
addl
pop
fbld
fnstenv
leave
xchg
mov
mov
jp
inc
les
adc
or
or
pop
ret
shlb
das
push
aad
addr16
and
mov
fs
popa
add
jp
xor
les
pop
sub
pop
pop
xor
sbb
int3
add
mov
xor
xlat
add
inc
dec
jno
js
inc
mov
cmpb
dec
pop
adc
and
les
popa
inc
dec
fcompl
inc
imul
psubsw
adc
enter
mov
imul
mov
ret
pop
cmp
cmp
fisubl
push
lds
push
lods
shrb
inc
pop
inc
lods
bound
test
addr16
xchg
lea
or
or
repz
daa
pop
push
cmp
mov
mov
dec
inc
popf
add
inc
lods
sub
js
adc
jb
push
mov
iret
dec
sub
adc
cmp
cmp
jo
outsb
mov
xor
jno
stos
cmp
sbb
pop
jo
loop
popf
push
mov
movsb
xchg
sbbb
lcall
inc
pop
xchg
pop
int
push
mov
rcrb
cmpsb
inc
dec
pop
js
mov
mov
hlt
sub
enter
mov
jle
mov
arpl
dec
cld
mov
andl
cltd
mov
cmp
popf
daa
pop
push
cmp
mov
ret
mov
jle
inc
andl
push
fwait
dec
cmp
mov
add
shll
mov
inc
add
mov
out
rcrb
and
mov
mov
mov
lods
repnz
adc
lahf
iret
loop
inc
mov
pop
dec
sub
ds
or
add
nop
fisubl
fs
mov
rol
and
jecxz
lret
lret
inc
loope
inc
mov
lret
and
rcr
or
fistpll
and
insl
pop
enter
or
mov
ret
test
lods
inc
mov
sbb
leave
iret
mov
mov
mov
adc
imul
mov
movsb
popa
lahf
dec
push
and
xor
push
lcall
jle
int3
mov
add
cmp
ss
dec
out
sbb
pop
add
les
das
push
imulb
add
cmp
repnz
pop
scas
sub
gs
shld
pop
add
movsb
xchg
inc
es
mov
sti
push
or
pop
test
stos
xchg
cmpb
cmp
mov
sahf
ja
mov
sub
sub
push
scas
mov
and
fs
cmpsb
ds
in
mov
lret
and
push
ds
inc
and
loop
jns
xor
mov
xorb
and
popf
shlb
in
jmp
lret
push
test
dec
jo
cmp
addr16
out
jns
mov
pop
stos
loop
pop
lea
jl
jmp
fs
add
mov
leave
in
gs
sbb
outsb
cmp
sub
pop
test
jo
fmuls
xchg
loope
test
inc
dec
xor
adc
adc
shr
lahf
iret
fdivl
jae
movsl
xor
cmp
leave
rclb
jae
inc
mov
lahf
cmp
repz
out
aaa
jg
popf
enter
lcall
mov
sbb
lcall
jns
add
xor
cmp
push
mov
inc
xor
sub
add
mov
fiadds
ss
inc
cli
lods
sub
cs
out
lds
xlat
adcl
pop
jae
fisubl
sbb
stc
pop
dec
enter
loop
sbb
enter
int3
add
mov
loop
jecxz
mov
lods
inc
mov
push
loopne
xlat
sub
ffreep
cwtl
adcb
push
fsts
mov
sbb
rcl
cmp
lods
fs
push
jns
mov
popa
mov
mov
mov
add
dec
repnz
mov
cmp
adc
mov
dec
fwait
cli
cmp
data16
jns
imul
imul
mov
inc
or
fcmovb
mov
stos
mov
cli
xchg
add
mov
fs
and
daa
movsb
hlt
movsl
out
and
sbb
and
adc
jp
inc
mov
std
xchg
sti
pop
pop
ja
loope
mov
mov
push
adc
cmp
mov
mov
imul
add
mov
xor
ss
jb
mov
inc
add
cmp
test
mov
sbb
test
fs
add
out
cmpsl
scas
adc
dec
movsl
sbb
hlt
shl
pusha
ljmp
mov
cli
xorl
ret
inc
mov
mov
cmp
fstpt
js
mov
negb
or
sbb
xchg
push
data16
xchg
pop
push
loopne
inc
dec
inc
push
mov
inc
push
jl
popa
inc
mov
pop
adc
repnz
lret
adc
pop
xor
sub
mov
dec
leave
add
fbstp
dec
stos
mov
out
jp
sbb
jl
dec
test
push
and
ret
pop
aad
xchg
and
stos
into
jl
and
call
xchg
cld
xor
aas
mov
xchg
pop
pop
or
mov
es
jbe
adc
sub
cmp
dec
leave
arpl
cmp
add
ljmp
sbbb
mov
add
sub
or
dec
fs
daa
pusha
jp
lock
push
mov
and
repnz
jnp
and
and
cmpsl
imul
idivl
ss
adc
jle
inc
mov
nop
pop
mov
popf
pop
int3
fcompl
mov
fistps
fsubs
popf
xchg
icebp
mov
ret
inc
dec
mov
insl
enter
mov
adc
fnop
or
mov
stos
mov
insb
add
sub
mov
les
xchg
add
mov
loope
out
mov
sarb
pop
xchg
pop
shrl
imul
inc
es
mov
dec
dec
rcrb
inc
scas
jo
mov
push
cs
lods
dec
dec
out
push
dec
mov
or
pop
xchg
jno
cmp
push
mov
push
scas
clc
or
mov
lods
mov
jno
enter
scas
popf
fs
pushf
inc
push
mov
pop
mov
inc
es
xchg
mov
mov
fsts
xchg
rcrb
sub
sbb
xchg
insl
lock
cmp
sbb
xlat
icebp
jnp
cmpsl
inc
sahf
fwait
shrl
push
mov
aam
pop
mov
ret
jae
mov
adc
fprem1
mov
lret
or
mov
outsl
sbb
in
gs
inc
loopne
loope
inc
xor
scas
adc
mov
icebp
vphsubbw
out
inc
or
mov
sub
push
cltd
inc
pop
push
or
mov
inc
cmpsl
outsb
adc
popf
xor
xchg
gs
pop
push
mov
inc
dec
lea
imul
fiadds
in
push
pop
sub
dec
nop
loopne
lret
lods
fdiv
lea
ficomps
lds
jg
mov
orl
ffree
mov
push
dec
fisttps
fstps
ret
pusha
nop
and
add
pop
sub
sub
jp
mov
mov
dec
mov
mov
rcll
mov
jge
lods
inc
jo
outsb
dec
mov
xor
inc
fdivrl
jp
pop
sti
les
int
inc
mov
in
and
je
xchg
jnp
sub
xor
xor
sub
adc
cmp
cld
cmp
rcll
push
shlb
cmp
daa
cwtl
add
ret
sbb
and
gs
pop
jmp
dec
ljmp
gs
mov
mov
std
jp
test
mov
add
adc
push
pop
mov
inc
dec
enter
loope
jno
xchg
mov
ret
sarl
stos
repz
sub
ret
mov
adc
ret
push
into
add
xchg
jmp
mov
push
dec
movb
inc
fldcw
mov
jae
dec
gs
rcr
ret
pop
enter
std
inc
push
pusha
sub
add
or
push
ret
pushf
popa
leave
pcmpeqw
pop
xchg
or
fldl
outsl
sti
in
inc
scas
xchg
ljmp
loopne
jns
lds
popf
push
enter
cmp
cmpl
lods
mov
mov
sub
xchg
aaa
shlb
out
cmpsb
xchg
jo
sbb
es
sbb
mov
test
test
scas
jnp
mov
test
fmull
add
dec
lods
fscale
lret
dec
rcr
repz
popa
mov
pushf
xor
mov
orb
push
out
cld
or
cmp
mov
xor
je
pushf
jmp
sbb
adc
mov
cmp
mov
leave
cmp
hlt
je
jle
lcall
into
cmpl
sub
sub
push
ret
idivb
cmp
push
jl
inc
mov
lret
lcall
mov
dec
sahf
sub
int3
sti
and
adc
inc
sbb
jp
leave
add
sbb
jbe
mov
add
into
leave
xchg
iret
rcll
int3
sub
insb
cmp
pop
lea
or
and
xchg
sub
dec
lods
dec
jae
aaa
pop
std
outsl
jp
sub
stos
pop
push
inc
push
jno
pop
into
leave
add
int
dec
cltd
stos
loope
mov
rorb
mov
cmc
stos
mov
sbb
sub
jae
cmc
rol
ret
jbe
lret
gs
outsl
cmp
xchg
dec
imul
xchg
repz
cmc
mov
faddl
lea
int3
pop
iret
mov
sub
scas
add
flds
or
je
pop
or
mov
cmp
jnp
lret
je
cld
sbb
cmp
and
shrl
jnp
jl
inc
scas
shll
clc
cmp
adc
in
inc
enter
nop
mov
out
or
or
add
xchg
fdivr
push
enter
not
mov
or
popa
out
xchg
mov
lret
add
adc
jae
shr
sar
cld
dec
dec
inc
js
lea
push
js
adc
jb
fisttpl
mov
test
imul
mov
or
stos
mov
call
and
xchg
inc
pushf
loope
ds
les
lea
xchg
stos
push
lahf
shll
cltd
imul
aas
and
iret
jl
out
and
jecxz
push
sbb
inc
stc
and
add
and
cmp
dec
sub
xor
mov
push
inc
push
test
dec
jmp
outsb
ret
sub
gs
or
js
icebp
and
add
and
repnz
enter
cli
xlat
das
xor
clc
add
pop
xchg
sub
dec
xor
mov
or
mov
xchg
dec
sub
sub
mov
pusha
adcl
shrb
push
out
into
xchg
dec
pop
jp
fdivs
popf
lahf
jge
and
mov
and
mov
andb
push
xor
orb
aas
fcompl
cmp
dec
sbb
das
adc
loop
xor
mov
lret
repz
adc
or
xchg
inc
fucomi
pop
push
cmpsl
mov
add
add
dec
add
outsb
adc
push
loop
lds
inc
mov
pop
call
push
sub
sub
inc
pushf
xchg
pop
or
in
push
dec
into
rorl
mov
shlb
mov
mov
mov
cmp
jae
aas
and
std
xchg
jg
repz
jl
jge
dec
or
jg
mov
mov
push
dec
pop
pushf
sahf
sti
cmc
test
jl
cmp
js
and
gs
lret
jp
mov
jo
mov
xor
les
adcl
mov
pop
push
add
addr16
aas
das
fcmove
mov
jb
mov
xchg
int3
scas
push
xor
stc
inc
cmp
dec
adc
not
inc
mov
outsl
mov
xchg
sbb
mov
rcrl
mov
and
mov
adcb
fisubs
out
sbb
rclb
and
or
xor
cld
hlt
inc
jl
or
jb
cmp
mov
in
fsubs
int
test
cld
xor
sub
dec
mov
movsb
inc
sub
icebp
das
jecxz
aas
sbbb
rcll
sbb
mov
test
pusha
xchg
repz
stc
daa
push
push
sub
inc
jecxz
jle
add
lock
testl
shlb
js
fistl
sbb
iret
enter
mov
xchg
inc
scas
mov
sbb
add
sbb
or
enter
cld
mov
fistl
idivl
fimuls
mov
ret
push
mov
pop
inc
push
pop
push
adc
cwtl
insb
lods
cmp
daa
mov
ja
sbb
ja
cmpsl
jle
push
mov
sbb
pop
pop
mov
fsubrl
xlat
push
int
sub
xchg
inc
dec
mov
and
add
adc
iret
je
cltd
enter
or
cmp
push
adc
inc
lahf
aas
push
inc
xor
xchg
test
push
push
fcmovnu
fwait
test
aad
mov
dec
fwait
jecxz
in
pop
and
cmc
lret
lds
jno
sub
icebp
inc
sub
cmpb
loope
xchg
mov
cld
fldenv
popa
test
xchg
sub
mov
mov
fistpl
cmc
gs
in
mov
iret
lods
jne
adc
pop
pop
xchg
rorl
adc
jnp
jl,pt
mov
lret
xchg
lret
mov
std
and
aas
loopne
cmp
or
cmpsl
or
dec
mov
sbb
dec
je
pusha
ret
cmp
arpl
gs
inc
faddp
or
stc
cwtl
js
push
adc
int
dec
pop
inc
lret
in
loopne
jge
lret
fwait
dec
add
sbb
idivb
adc
ficompl
dec
dec
repz
or
scas
in
fs
enter
call
scas
cltd
sub
add
mov
and
jp
xchg
sbb
xchg
sbb
mov
fucom
sarb
add
mov
xor
mov
test
test
enter
fdiv
sub
rorl
addr16
jge
mov
inc
sbb
js
sub
add
push
pop
idiv
fisttpll
xor
loope
mov
incl
std
pop
aam
roll
dec
test
lret
outsl
xchg
les
pop
mov
xchg
cmp
or
je
jle
xchg
pop
cmp
xchg
pop
and
add
mov
inc
leave
lods
mov
xor
popf
aas
daa
cmp
mov
push
roll
test
pop
sub
cli
mov
ss
rcrl
repz
shll
mov
ffreep
enter
into
cmp
out
push
clc
sar
xor
test
add
les
xchg
das
push
dec
mov
gs
nop
shll
mov
inc
jmp
adc
mov
add
xchg
sarl
mov
jae
pusha
cwtl
or
fsubrs
mov
inc
mov
inc
hlt
in
call
loope
enter
out
sbb
xchg
in
cwtl
jae
xchg
push
dec
xchg
movsb
jo
add
sahf
jg
mov
stc
mov
jb
or
pop
jns
cmc
dec
xchg
xor
and
movsl
stos
inc
mov
cmc
sub
jp
jge
jae
xchg
das
jnp
lock
jo
les
inc
jmp
sbb
mov
mov
ret
jae
sbb
mov
iret
nop
movsb
lock
sbb
imul
je
push
xorb
es
mov
out
sbb
mov
mov
movsl
dec
out
sbb
inc
icebp
and
daa
mov
inc
sbb
stc
xchg
leave
sahf
fisttpl
jae
je
mov
mov
pop
xchg
rcr
fistpll
fs
pop
stos
psllq
xchg
cwtl
stos
fdiv
lcall
xchg
jmp
inc
cltd
xlat
sub
arpl
mov
push
jl
inc
aas
loope
int
in
jae
mov
hlt
pushf
test
loop
icebp
out
fsts
adc
aaa
ficoms
sub
shlb
hlt
mov
cmp
aam
adc
sub
jl
pushf
push
add
sbb
aas
icebp
aam
and
mov
mov
nop
and
lahf
adc
popf
mov
sub
pop
pop
mov
dec
pop
addr16
out
fsts
fildl
pop
mov
nop
out
repz
or
push
push
cld
fnstcw
inc
aad
xchg
nop
movsl
sbb
dec
sub
add
sub
mov
xor
mov
sahf
jp
sub
jnp
jmp
dec
xchg
ret
mov
mov
inc
and
fwait
pusha
jmp
dec
xor
insb
mov
mov
flds
xchg
sti
movl
push
les
jp
fcmove
je
leave
adc
or
and
sahf
loop
das
ret
fsubrs
out
and
jp
mov
xchg
cmpsl
testb
pushf
cmp
fwait
or
insb
lods
loop
jmp
sbb
pop
cwtl
daa
mov
shll
aas
iret
mov
or
and
dec
jge
sub
add
enter
add
mov
enter
ret
adc
lret
sub
nop
add
sbb
sti
sub
jl
pop
sbb
movsl
mov
xchg
adc
cmp
daa
enter
outsl
dec
sbb
jecxz
pop
or
es
imul
and
cmp
insb
loope
inc
cli
test
inc
movsl
dec
push
inc
push
shrb
ds
rcll
arpl
mov
rolb
aas
inc
push
sub
mov
fsts
dec
jl
mov
mov
nop
jmp
cmp
lods
out
push
sti
mov
frstor
push
fidivl
mov
gs
lahf
out
xchg
lock
xchg
fsubl
mov
int3
loope
scas
sub
out
stos
popa
adc
js
lods
inc
xchg
pop
sti
pop
mov
sub
add
int3
or
pop
mov
xchg
inc
mov
mov
les
shlb
fldenv
stc
imul
pop
pop
aad
aaa
rorl
lret
add
jo
jp
xorl
movsl
sbb
push
inc
mov
sub
pop
cmpsl
dec
pop
cltd
pusha
mov
jg
das
mov
ret
xchg
loop
out
lahf
and
orl
cwtl
lahf
mov
iret
pop
test
loop
stos
push
mov
adc
jne
mov
pop
mov
jle
je
scas
xchg
mov
pop
aas
fmul
nop
dec
xchg
xor
ret
popf
cmp
jle
cmp
aaa
jns
sbb
jle
xchg
inc
out
sgdtl
test
bound
xor
int3
mov
push
aad
lcall
adc
in
icebp
outsl
rorb
movb
push
inc
int
arpl
and
fwait
cmp
test
or
test
call
pop
pop
fwait
push
push
outsl
sbb
adc
add
jle
add
pop
dec
pop
pop
in
jne
jge
sbb
add
mov
ror
arpl
out
dec
pusha
add
fs
or
push
sahf
test
sub
push
leave
lock
mov
jp
push
jno
mov
fs
xchg
jne
xchg
pushf
leave
outsb
cmc
and
add
adcb
aas
and
aad
push
aad
cs
insb
xchg
clc
mov
mov
dec
icebp
xchg
aas
stos
and
in
dec
ror
lret
mov
pop
jo
push
push
push
shr
pop
or
cs
pusha
int3
imul
or
pop
in
sub
aas
cmp
push
lret
push
dec
mov
cmpb
lods
pushf
mov
or
mov
bound
jo
jp
cltd
lret
pop
jb
mov
dec
jp
and
xor
les
ds
leave
fwait
push
and
dec
enter
and
sub
dec
loop
xchg
dec
sub
daa
nop
push
dec
mov
pop
or
aaa
fildl
mov
js
in
sbb
jno
stos
adc
xor
fdivrl
and
mov
mov
add
inc
or
push
test
xor
imul
test
push
xor
mov
scas
xor
and
lret
jno
mov
subb
mov
pop
xor
ds
sbb
mov
ret
loopne
mov
fimuls
pop
cwtl
jbe
or
bswap
pop
sub
sub
inc
test
or
xchg
dec
addr16
addr16
sbb
inc
mov
aas
xchg
fsubrl
or
aad
pop
jae
ljmp
pop
data16
fdivrs
jns
cmp
dec
lret
dec
mov
subl
pop
leave
jbe
and
ds
lds
js
ret
xchg
incb
inc
push
jo
sti
sub
scas
insl
pop
cmp
imul
xlat
fwait
pushf
out
mov
or
fcomip
in
pop
ror
loopne
mov
xlat
sbb
dec
sar
fisttps
pop
jl
lret
xchg
in
daa
daa
sub
dec
push
pop
inc
hlt
test
cli
leave
aas
leave
mov
stc
mov
sub
mov
push
ret
mov
dec
inc
fistl
and
jle
fmuls
lret
sbb
test
mov
fbld
shrl
mov
mov
pop
pop
or
lods
loopne
leave
push
mov
sbb
jmp
pop
fstps
outsb
xlat
cmpsb
aas
or
mov
dec
or
fistpll
jne
loopne
cwtl
pop
inc
pop
imul
mov
jnp
or
inc
xor
or
jb
cmp
fmuls
sub
jg
std
sub
arpl
lret
lahf
and
fwait
les
daa
pop
test
lods
cmp
int
addl
xor
ss
sahf
cmp
mov
imul
enter
inc
xchg
fdivrl
fwait
sti
push
sahf
imul
sbb
mov
cmp
mov
dec
out
fdivl
cmp
cmp
adc
addr16
stc
inc
stos
xchg
fstl
mov
add
cmp
sub
jge
pop
inc
aaa
cli
pop
daa
jge
pop
cmp
add
jp
int3
jg
add
push
jbe
xchg
cmp
icebp
push
cmp
ds
pop
pop
aad
ja
sub
jb
push
lcall
enter
incl
subb
jecxz
test
mov
cmp
sahf
gs
push
inc
fstpt
add
dec
popa
fisubl
scas
xchg
test
cmp
sub
out
pop
dec
cmc
insl
cmpb
sub
push
int
pushf
jl
aas
daa
xchg
or
cmp
mov
inc
and
int3
dec
imul
cmpsb
ret
sbb
xorl
lods
mov
das
fs
pusha
adc
xchg
in
jg
xorl
mov
cmp
push
call
gs
xchg
mov
imul
out
lahf
jo
jge
adc
cmc
mov
mov
data16
sub
pop
icebp
cmpsb
das
add
hlt
filds
pop
add
rolb
sbb
mov
clc
call
mov
adc
jp
das
cmpsl
push
mov
iret
mov
movsb
inc
jmp
lcall
mov
in
fimuls
push
mov
adc
test
inc
scas
lock
les
test
cld
cli
cmp
call
leave
std
jmp
jge
dec
movsb
into
dec
mov
loope
loop
add
ljmp
cmpsl
mov
sbb
mov
les
insb
cld
add
sbb
mov
xchg
adc
mov
add
std
pop
adc
mov
scas
aas
inc
pop
xchg
negl
jae
dec
fmuls
and
dec
add
in
xor
mov
push
dec
mov
push
adc
hlt
mov
sbbl
aam
js
jg
inc
cmp
cmp
lea
pop
mov
insb
aam
mov
test
idivl
js
pop
imul
cs
cld
xor
rcll
in
sbb
into
cmc
xchg
je
rolb
stos
pop
decl
stos
mov
mov
inc
adc
shrb
xor
ret
ljmp
push
mov
mov
ljmp
enter
mov
cvtps2pd
pop
mov
cmc
inc
js
inc
stos
xor
mov
aas
and
sahf
adc
popa
aas
rol
inc
cmp
mov
push
xchg
fidivrs
mov
popa
jge
adc
lds
sub
nop
and
push
sbb
enter
add
xchg
pop
pop
cltd
mov
lret
ljmp
pop
int
and
cli
sbb
scas
xchg
and
mov
leave
jo
popa
jnp
pop
movsb
es
push
fistpl
mov
or
jle
pushl
sub
xchg
dec
dec
pop
aam
aas
push
inc
inc
inc
shll
js
scas
pop
rcrl
sbb
push
outsl
lcall
je
cmp
pop
inc
lret
xchg
jnp
mov
sahf
outsb
in
movsb
push
xchg
mov
push
ror
cmp
xor
adc
fwait
outsl
movsl
inc
and
push
in
or
fbstp
pop
pop
mov
push
mov
stc
cld
jns
bound
movsl
pop
sarb
out
ret
add
mov
sahf
xor
xor
test
mov
loopne
leave
cs
jo
subl
popa
icebp
pop
mov
subl
pop
mov
inc
pushl
popa
mov
call
jns
lods
dec
test
push
leave
rcl
adc
decl
lods
jae
jmp
sub
mov
inc
pop
insl
fdiv
ret
loope
in
ja
jge
pop
loope
push
mov
pop
orl
repnz
mov
sti
ds
sub
cli
push
fnstcw
pusha
adc
mov
jb
cltd
mov
and
imul
xor
ss
adc
push
les
into
cmp
cld
dec
les
loopne
jno
and
cwtl
enter
cs
xlat
cmp
enter
mov
inc
insl
mov
or
xor
xchg
es
mov
sbb
adcl
pop
js
jge
and
ds
inc
cmp
add
push
ds
add
shlb
lds
sahf
pushf
dec
test
jecxz
mov
and
jp
sbb
mov
mov
test
jae
inc
gs
insl
jle
loope
inc
cmp
adc
mov
lcall
xor
pusha
or
mov
popf
sbb
jl
shrb
outsl
mov
divb
scas
dec
testl
int
lds
cmp
jbe
jl
xchg
int
pop
fidivs
dec
adc
cmp
test
pop
dec
repz
arpl
iret
adc
insb
and
dec
dec
mov
xor
lcall
sbb
cld
push
pop
cmp
fcoms
dec
cmp
xchg
cmpl
dec
or
pop
test
mov
movsl
cwtl
mov
movsb
xchg
sti
movsl
imul
dec
test
sub
mov
sub
int3
cmp
inc
push
fildl
inc
cmp
lret
push
mov
cmp
push
pop
adc
imul
ror
pop
movsl
jge
add
cltd
pop
arpl
or
mov
or
adc
inc
clc
pop
inc
pop
mov
pop
cmpsl
and
pusha
dec
sub
mov
xor
cltd
lods
stos
mov
outsl
ret
cmp
xor
std
addr16
sub
push
dec
and
cmp
jl
sub
mov
arpl
lods
add
outsl
add
inc
inc
sti
cmp
sub
ss
xchg
cmc
pushf
inc
aam
inc
adc
pop
or
or
js
aam
scas
mov
insl
lea
mov
out
or
cs
or
mov
xchg
popa
lret
inc
idivb
sub
loop
arpl
or
mov
cmp
pop
xchg
sub
rcrb
mov
push
lock
and
in
pop
std
mov
cltd
pushf
lret
and
stos
xchg
adc
nop
xchg
and
push
pop
mov
iret
push
sub
dec
push
jmp
or
rcrl
inc
mov
sub
in
insb
inc
sub
add
xchg
pop
shlb
sub
or
mov
dec
mov
mov
pushf
push
ror
push
jge
pop
mov
fdivs
sub
leave
inc
repz
jns
das
lahf
repz
nop
mov
mov
pop
frstor
mov
xchg
dec
pop
fucomp
fs
arpl
stc
cmp
add
mov
sbb
inc
jge
sub
sti
rol
and
jge
loop
push
in
cwtl
cmp
pop
rcrb
push
faddl
call
into
xor
pop
fwait
mov
mov
cmp
inc
mov
inc
fcmovne
test
stos
xchg
add
pop
fsubrl
inc
mov
enter
push
ret
mov
popf
clc
adc
sbb
inc
fdivp
rcll
dec
test
test
dec
push
sbb
rcrl
or
xchg
jmp
jle
mov
cmpb
or
mov
push
pop
pusha
mov
lret
loopne
add
dec
in
mov
pop
adc
out
cmp
cmc
pop
sti
pop
loope
cmp
mov
pop
int
jmp
adc
shlb
cmp
popa
push
mov
mov
shll
mov
imul
inc
aaa
rolb
stos
pop
pop
and
push
xor
inc
inc
lahf
dec
lea
and
mov
cmp
popf
and
repz
xor
out
jmp
fiadds
adc
sub
lds
and
lods
or
jae
sbb
lret
pop
push
mov
dec
jnp
cmp
aam
ret
lea
dec
jecxz
in
and
enter
sahf
mov
jecxz
sbb
mov
cli
shrl
cmp
jl
negb
faddl
add
xchg
lods
xor
cmp
pop
cmp
and
sub
sbb
sbb
jecxz
incl
jmp
popa
mov
cli
scas
xor
ret
aaa
jae
fldenv
and
jns
fbld
cmp
or
mov
mov
adc
mov
dec
arpl
dec
push
mov
and
and
inc
test
gs
repz
mov
and
call
pop
and
or
arpl
cmp
jp
mov
cli
inc
cmp
mov
cmp
mov
imul
das
inc
lret
nop
test
lods
mov
dec
add
xor
fstpl
cmp
or
shlb
test
xor
cmpsb
cmp
fwait
in
jne
pop
into
insb
dec
adc
fisubrs
and
jle
clc
dec
sbb
daa
push
xchg
cmp
push
pop
pop
or
fimuls
mov
scas
push
pusha
negb
sub
lret
add
enter
loopne
cmp
pop
xchg
shrb
decb
jo
jle
sub
add
pop
jge
rorl
sbb
mov
out
mov
add
fsubrs
jae
mov
sub
cli
or
add
dec
pushf
push
and
push
aad
test
inc
dec
xchg
xchg
and
lds
push
and
dec
outsb
iret
add
xchg
imul
ss
leave
mov
inc
jecxz
jg
stos
fsubr
xorb
scas
rclb
and
mov
pusha
outsb
add
xchg
int3
mov
jle
incl
mov
sahf
xchg
data16
inc
std
loopne
je
lock
or
jl
js
cmp
pop
pop
inc
popa
test
nop
imull
sbb
jecxz
pop
jge
jg
adc
push
lcall
jl
xchg
divb
cmpsl
lods
sub
fs
add
pop
sbb
imul
aam
iret
ss
out
mov
or
dec
inc
icebp
insb
decb
movsl
xor
cmp
push
icebp
outsl
sub
jge
push
push
mov
subl
outsb
rcrl
push
jne
dec
xor
jmp
repz
lcall
jl
in
sti
sub
mov
ficompl
repnz
lcall
int
push
dec
add
repz
in
xor
mov
inc
popa
dec
xchg
sub
xchg
cs
mov
stc
push
test
dec
ss
lods
inc
and
xor
pop
push
cs
sti
das
test
mov
push
sti
pusha
cmc
arpl
or
mov
xchg
aad
push
cmp
inc
int
jb
dec
fstpt
inc
hlt
mov
outsb
fcoml
adc
dec
enter
dec
aad
inc
mov
imul
int3
pop
lcall
lret
repnz
and
sub
and
fiadds
inc
jnp
cmp
int3
inc
or
dec
cs
mov
jns
or
sub
sbb
mov
xchg
cld
inc
je
or
flds
xchg
loop
xchg
jge
ljmp
inc
dec
push
jp
jle
push
xchg
xchg
mov
loope
push
xchg
cwtl
jmp
jnp
sbb
mov
ret
mov
ficoml
add
dec
imul
out
lret
inc
pushf
pop
add
shrl
sub
std
sbb
jae
cli
sahf
and
ret
sub
popf
mov
hlt
inc
outsl
fwait
mov
mov
ja
mov
sub
cmpsl
mov
mov
pop
xchg
mov
mov
imul
lea
push
push
mov
sbb
xchg
scas
xor
dec
mov
scas
sub
or
lret
ret
mov
pop
jo
call
js
inc
xchg
fs
sti
std
cwtl
fs
xchg
daa
jmp
mov
push
sti
xor
ret
inc
out
jmp
cld
in
or
nop
test
push
lret
mov
pop
rclb
fwait
outsl
mov
push
push
test
mov
nop
and
push
xorl
or
mov
or
push
aas
dec
cmp
pop
inc
mov
sub
fwait
lock
xor
inc
mov
sub
or
sub
inc
cmp
mov
push
sub
push
fisubl
ret
push
xor
imul
cmp
lds
in
rcr
adc
push
inc
or
cwtl
sahf
pop
icebp
stc
popf
rclb
jl
and
test
dec
jle
xchg
mov
fnstenv
addl
lds
cmp
popf
outsl
inc
jg
adc
int3
flds
adc
fstps
xor
dec
and
dec
mov
mov
add
sub
cwtl
clc
clc
sbb
sbb
shl
inc
imul
pop
in
and
decl
inc
sub
cmpl
les
imul
xchg
mov
mov
pushf
xchg
ds
jae
pop
jecxz
sarb
jae
bound
adc
sbb
push
mov
mov
icebp
pusha
add
rcrb
addb
mov
in
loopne
inc
stc
xor
lods
ljmp
dec
test
mov
inc
lods
iret
out
mov
js
and
push
add
shll
movsl
and
movups
stos
and
and
aam
das
xor
xor
popa
push
imul
imul
cmpsl
sub
sahf
xchg
mov
in
cmp
xchg
js
add
test
xchg
and
mov
dec
fcompl
jns
mov
loope
mov
mov
push
lea
adc
fdivrl
gs
adc
mov
rcr
push
dec
cld
aaa
dec
and
out
fcoms
adc
xchg
push
jns
nop
sbb
leave
das
ds
adc
cmp
push
rolb
fdivl
ljmp
jecxz
add
fmul
aad
cltd
out
movsl
inc
add
and
xchg
leave
dec
pop
stos
rcl
cmp
dec
push
test
or
jg
pop
les
and
jns
sub
jge
inc
ficoms
jl
xorb
inc
jle
fcompl
movsl
cmc
jo
mov
fdivrs
mov
pop
add
xlat
mov
and
dec
mov
xchg
es
or
stc
lahf
in
int3
xor
jb
mov
shrb
lea
jnp
pusha
dec
stc
xchg
mov
cmp
jmp
insl
push
or
ret
mov
inc
enter
mov
sub
shrl
scas
inc
push
int
test
aad
push
std
pop
inc
ficomps
sub
jo
push
loop
inc
xchg
mov
and
xchg
or
bound
mov
insb
add
pushf
inc
mov
jp
cmp
mov
dec
xor
ds
add
push
mov
adc
lret
dec
rol
imul
lahf
mov
dec
push
fisubs
xor
cli
pop
lea
icebp
xchg
adc
adc
das
mov
pop
lcall
pop
pop
or
mov
clc
ljmp
jnp
mov
cmp
dec
int
ror
jg
std
push
or
mov
cli
mov
lock
mov
xchg
xor
add
mov
loopne
lea
imul
aad
les
add
and
dec
or
clc
and
dec
add
les
mull
aam
push
arpl
fdivp
push
in
sbb
push
mov
inc
mov
add
shll
and
mov
sbb
insb
arpl
fmul
xor
fidivrs
and
and
je
sbb
pusha
mov
mov
cmp
cs
xor
push
push
outsl
jmp
divl
je
pop
pusha
cmp
pop
adc
jp
jmp
aaa
cmp
sti
cld
leave
push
jge
lea
call
ja
dec
test
and
daa
mov
movsl
adc
fwait
jnp
aad
add
mov
push
sub
push
pop
dec
scas
inc
lods
sub
dec
sub
cld
lret
jns
popa
out
lret
or
pop
cmp
xchg
in
fisttpll
pop
sub
mov
adc
aad
jp
add
mov
cld
iret
inc
or
fwait
nop
rcrb
loope
xchg
pusha
in
lods
lcall
sub
or
mov
jns
ss
or
ljmp
jp
pop
dec
push
adc
add
das
sub
push
stos
push
sub
inc
add
push
jno
and
leave
lods
flds
int
xchg
and
dec
ds
hlt
test
mov
and
sbb
loope
adc
and
pusha
pop
andl
push
push
sub
jge
ljmp
sub
test
sub
dec
mov
sub
js
mov
pushf
mov
sbb
mov
add
popf
cmpsl
dec
pop
fwait
xchg
push
jp
ret
cmpsb
jmp
or
enter
subb
loop
cmp
cmp
das
xor
mov
mov
and
outsb
mov
sub
mov
int
mov
adc
pop
add
icebp
insb
mov
movsb
push
call
fisubrl
int
in
lahf
xor
rcrb
ret
pop
std
sub
push
sub
add
adc
sub
les
les
xor
sub
adc
mov
push
jle
fidivl
lock
dec
adc
xor
leave
lcall
lcall
call
pop
dec
mov
icebp
push
lea
outsb
lods
fistps
and
scas
mov
jl
lahf
scas
stos
aam
out
bound
push
sub
dec
outsb
imul
xor
insl
push
dec
arpl
cmp
push
int3
loope
jge
pop
shll
pop
xchg
jecxz
or
addr16
hlt
daa
pop
cmp
shll
xor
rorb
mov
mov
insb
cmp
add
nop
rcr
movsl
mov
test
mov
negl
adc
pop
sub
movsl
in
addr16
sub
enter
gs
hlt
cmp
inc
jnp
neg
ds
inc
cwtl
aas
dec
fimuls
or
push
out
mov
and
stc
add
daa
ja
repnz
inc
pushf
fwait
out
fwait
xchg
fstpl
loopne
xor
iret
mov
int3
mov
cmp
shlb
jecxz
mov
lcall
add
xor
jl
out
jecxz
imul
cltd
jo
and
roll
sarb
cmp
pop
mov
testb
lret
mov
push
pop
aad
push
mov
shrb
stos
mov
lods
adc
ret
shlb
push
and
loope
pop
mov
mov
sbb
stos
iret
xor
pop
push
iret
imul
int
movsl
xor
lods
pop
push
sti
mov
int3
cmp
push
shlb
and
loope
repnz
repnz
and
stos
or
jle
sahf
arpl
call
adc
mov
dec
pop
jns
movsb
jge
xchg
aad
icebp
xor
cs
mov
jno
add
adc
aaa
mov
xor
lahf
push
dec
shll
fs
pusha
adc
mov
or
sbb
std
cwtl
mov
stc
sti
xlat
int3
sub
les
je
cmp
mov
or
jo
mov
xor
and
jp
sbb
dec
cltd
sbb
adc
insl
push
dec
in
jns
mov
in
push
lret
pop
pop
cltd
adc
push
or
lods
mov
stc
jb
or
sub
cmpsl
loop
mov
mov
sbb
jl
add
cmp
mov
bound
inc
cmp
jnp
int
push
pushf
pop
repz
es
fcompl
cmp
xor
or
and
iret
mov
and
cmc
inc
dec
mov
cli
cmp
cmp
adc
dec
stos
mov
jmp
in
es
js
mov
and
pop
inc
mov
push
popa
divl
mov
cs
add
xchg
jl
popf
jns
mov
sub
jbe
in
push
cmp
jmp
pop
inc
cmpsl
nop
sub
dec
lds
add
je
sub
mov
rcll
rorl
sbb
pop
movsb
mov
inc
dec
sahf
std
aam
dec
loope
pop
or
fnstsw
lods
fs
pop
push
data16
xchg
inc
andl
xchg
mov
mov
test
add
sub
fisttpll
mov
and
jo
mov
sbb
dec
jae
pop
adc
mov
adc
out
mov
rclb
and
mov
dec
scas
pop
xor
add
movsl
lahf
pop
movl
pop
les
stos
stos
jno
sub
outsl
stos
daa
lret
dec
imul
mul
lret
fstl
mov
jp
sbb
je
inc
test
sbb
and
mov
aas
or
lret
dec
mov
push
xor
imul
sub
or
sbbb
push
popf
mov
push
jae
fsubrs
sub
frstor
or
and
mov
cmp
pop
mov
or
dec
jo
sbb
pop
imull
cmp
dec
add
das
aad
pop
and
gs
rcrb
pop
xor
lods
call
add
fnstenv
sub
add
jge
xchg
lock
xchg
xchg
imull
scas
cmp
mov
movsl
loope
mov
xor
jp
popf
pop
lret
mov
jmp
ret
popf
sub
stc
nop
bound
insb
shll
jecxz
or
add
sbb
jbe
or
lds
adc
xor
mov
mov
cli
inc
xchg
adc
xchg
mov
cmpsb
sti
mov
fs
cwtl
inc
loope
jns
mov
jo
or
xchg
sub
sub
pop
xor
cmp
lds
fwait
movsl
inc
sbb
sbb
inc
es
pop
outsl
in
jno
push
lret
dec
xchg
mov
or
cld
out
mov
addr16
xor
sbb
mov
ret
mov
push
push
into
hlt
cmp
sbb
or
xchg
dec
inc
shl
pop
add
lods
cmp
push
mov
sub
lret
movsb
imul
cmp
call
loope
incl
push
mov
sub
repnz
cmp
sbb
or
or
sub
cli
mov
cmp
ss
mov
xchg
fists
fdivs
rclb
lock
insl
pop
jg
pop
mov
fnstenv
sub
mov
sub
pop
add
data16
push
js
sub
fs
sub
in
jmp
jle
inc
pusha
jge
jns
out
sub
sub
pop
ret
dec
out
or
int
jp
int3
jge
sbb
roll
mov
call
stc
pop
push
out
sub
pushf
cld
in
push
scas
sub
mov
subb
mov
fldl
cwtl
mov
xor
inc
dec
push
jmp
dec
add
mov
movsb
pop
daa
frstor
add
dec
mov
add
testb
pusha
xchg
js
pop
cltd
stc
push
gs
lods
mov
hlt
add
mull
lods
mov
hlt
adc
repz
adc
test
ror
loopne
call
pusha
bound
or
cmpsl
dec
or
sub
mov
in
cld
dec
or
add
lods
fisttps
pop
fisubs
dec
dec
add
mov
pop
out
das
dec
add
adc
sub
lods
out
add
clc
shrb
shrb
loop
adc
clc
fld
data16
pop
adc
jo
mov
popa
jge
lret
aaa
lods
lret
sub
lds
addb
jno
cmp
bound
enter
mov
lock
push
mov
arpl
test
fmull
xor
inc
xlat
mov
es
outsl
adc
push
and
mov
mov
in
scas
scas
cmp
mov
mov
mov
in
adcb
push
jns
pop
aas
xchg
add
lods
adc
popa
test
out
outsb
aas
dec
xchg
push
std
aas
pop
insl
push
nop
loop
cmpb
adc
cmpl
jl
jne
rclb
sahf
std
xchg
cmp
pushf
jns
or
sub
mov
popf
mov
xchg
cld
cmp
and
pop
push
imull
iret
sub
fs
ror
ret
inc
mov
fisttpll
ret
call
ret
mov
pusha
aas
loopne
jno
mov
cmp
adc
rcrl
xor
cmp
mov
loop
test
and
stc
aam
sbb
xor
and
cli
or
shlb
inc
push
sbb
shlb
sub
sub
clc
loopne
shrl
ss
pushf
scas
mov
std
sbb
aas
or
insb
push
rorb
rorb
add
dec
mov
subl
cmp
mov
fsubs
xchg
mov
lock
push
pop
lods
cld
push
xchg
mov
aaa
mov
shll
test
xchg
lods
fistpl
mov
mov
aas
adc
inc
cmpb
mov
xor
xor
fisubrs
pop
pop
or
fsubr
cli
jp
xchg
sarl
sbb
out
or
pushf
in
xchg
scas
test
xchg
mov
dec
mov
jge
sahf
mov
lock
hlt
sahf
mov
push
mov
add
push
mov
xchg
stc
push
push
pusha
filds
test
mov
adc
cmp
pop
jmp
mov
cmp
jno
inc
push
and
ss
and
push
mov
xchg
inc
pop
sub
add
decl
vdivpd
jmp
sub
xchg
or
inc
and
insl
or
xchg
testb
pop
sahf
in
add
mov
dec
dec
loop
cltd
shrb
mov
imul
mov
adc
mov
inc
xchg
loope
arpl
cwtl
dec
hlt
sbb
test
xor
push
inc
clc
xorl
sub
mov
dec
lock
and
sub
mov
arpl
pop
loop
inc
jne
sarl
sbb
adcb
pop
insb
out
pop
dec
add
cs
cld
enter
dec
cs
adc
mov
int3
cmp
mov
cmp
push
ja
test
ret
xor
negb
pop
jo
add
mov
cmp
cmp
jecxz
cmp
outsb
sub
cmp
sbb
xchg
in
aaa
add
push
adcb
jg
movsl
sub
xor
addr16
push
aas
sbb
js
fadds
leave
sbb
out
fiaddl
movsb
inc
push
jae
add
push
push
pop
cmp
imul
pop
push
pop
adc
sub
std
pushf
and
loop
paddw
adc
pop
or
sbb
pop
repnz
ljmp
push
in
adc
ficomps
mov
xor
scas
add
mov
insl
sarb
or
shlb
jmp
lods
sbbl
ds
fsubrs
in
stos
xchg
je
jecxz
hlt
addr16
mov
adc
lcall
xchg
sbb
in
adc
jo
push
push
pop
jno
cmp
pminub
fldt
mov
mov
inc
adc
pop
jle
jne
movsb
jle
push
mov
dec
out
mov
out
and
cmpsb
sti
cli
mov
movsb
scas
mov
fwait
cmp
inc
mov
ret
cli
xchg
dec
push
rorb
or
cmp
enter
mov
lret
ss
jl
int
mov
arpl
minps
xchg
pop
repz
fildl
and
mov
mov
mov
push
popa
mov
mov
jns
lret
cmp
lods
insb
in
ss
fmuls
mov
mov
in
adc
imul
movd
and
cmp
adc
sub
inc
js
data16
fs
movsl
cmp
pop
repnz
ror
mov
gs
dec
pusha
jge
jmp
in
addr16
aam
push
addb
stos
xchg
mov
outsb
test
mov
cmp
xchg
mov
lret
push
add
cmp
test
mov
dec
dec
mov
jns
jl
add
popf
and
es
shlb
leave
mov
sbb
ds
jmp
movsl
push
or
mov
adc
jp
adc
aas
pusha
cmp
cmp
pop
push
push
xchg
inc
and
or
lods
lds
adc
mov
stos
mov
ret
or
repnz
shll
jecxz
mov
pop
in
cs
mov
xor
push
ljmp
shrb
xor
inc
iret
bound
cltd
ljmp
sub
mov
inc
aas
mov
lock
and
or
adc
cmp
les
test
je
pop
das
orl
sub
sbb
sahf
inc
mov
sbb
callw
test
adc
icebp
and
rcrl
xchg
dec
add
dec
mov
dec
mov
and
mov
scas
or
movsb
mov
jno
mov
cld
sub
cwtl
jns
mov
fs
push
xchg
xchg
imul
outsb
jl
push
or
push
js
rolb
pop
sbb
mov
repnz
mov
inc
repz
outsb
pop
call
sub
sbb
popa
add
fdivrl
mov
loope
arpl
xor
cmc
je
pop
and
add
movsl
sbb
es
and
mov
orl
xchg
mov
incl
jge
ljmp
push
loopne
lea
fsubl
xor
inc
xchg
mov
xor
sub
roll
jae
pop
inc
js,pn
inc
cmp
mov
les
nop
jmp
mov
es
mov
add
aam
aas
ret
sub
xchg
xchg
mov
xchg
cmp
mov
rol
bnd
pop
pop
inc
cmp
mov
mov
xchg
leave
test
frstor
xchg
insb
dec
in
adc
out
mov
xchg
push
imul
push
xchg
adc
cmp
fcmovb
sbb
imul
ds
mov
nop
sub
scas
rclb
jmp
scas
stos
mov
aad
or
add
std
add
cmp
sub
enter
cmpsb
or
aam
outsb
pusha
das
xchg
pop
xchg
lret
fdivr
nop
cld
test
xchg
mov
mov
fdivrl
lret
cmpsl
shll
sbb
test
sbbl
jecxz
hlt
inc
ret
mov
and
jo
testb
pop
fcmovnu
mov
insb
push
mov
sub
push
jge
add
inc
fcmovnb
and
subb
test
cmp
pop
mov
nop
jnp
pop
push
std
xchg
cvtpi2ps
cmpsb
test
mov
dec
fwait
leave
out
add
xchg
ja
and
test
inc
and
sub
xchg
arpl
add
je
stc
clc
notb
ret
mov
cmpsl
or
test
push
ja
adc
and
sbbb
mov
xor
mov
test
call
push
test
outsl
pop
sti
inc
or
mov
ret
movsb
ds
dec
push
mov
or
cmp
bound
nop
xchg
push
push
flds
scas
mov
sarl
rorb
or
mov
mov
xchg
std
pop
adc
lret
hlt
add
sub
sub
mov
dec
cmp
cmc
enter
mov
jmp
jns
mov
jp
int
lret
movsl
or
std
inc
insl
sarl
mov
insl
sub
mov
outsl
test
push
dec
rolb
fsubs
loop
add
mov
push
inc
int
dec
cmp
mov
mov
mov
jne
sub
imul
sub
es
stos
ljmp
sarl
jne
cmp
pop
xor
push
fcoms
pusha
xchg
mov
lds
roll
adc
fadd
mov
ljmp
aaa
push
pop
punpckhwd
cmpl
lahf
inc
imull
adc
add
mov
lret
push
push
sbb
jmp
add
ja
adc
enter
ret
jge
inc
pushf
xchg
mov
xor
clc
in
insb
dec
es
test
xor
stc
mov
cmp
xor
jmp
xor
xchg
enter
sub
xchg
shll
dec
ret
rorb
clc
enter
outsb
icebp
mov
in
repz
sti
inc
sahf
insl
mov
or
xchg
test
mov
movsb
and
adc
jnp
xor
mov
lods
mov
fneni(8087
mov
inc
add
es
xor
ljmp
lea
push
cmpsl
push
add
sbb
xor
je
rcll
add
add
dec
jle
mov
pop
add
inc
movsb
push
mov
dec
ja
sbb
cmp
bound
ja
mov
mov
pop
pusha
pop
jne
les
cli
mov
data16
adc
jnp
mul
mov
nop
sub
nop
jecxz
cmp
int
clc
outsb
xchg
inc
cltd
lock
lea
cltd
lcall
sarb
daa
mov
xchg
push
fcoml
loope
xor
je
repz
inc
cmc
mov
jae
std
add
lods
test
xor
adc
add
int
mov
cltd
mov
sub
das
inc
popa
adc
pop
or
outsb
dec
lret
leave
inc
stos
lods
and
iret
jbe
dec
ja
push
push
repz
cmp
lds
mov
repnz
aam
test
ss
dec
pop
push
xor
jmp
sbb
popa
ret
jmp
adc
in
xchg
decb
sub
jmp
mov
mov
int3
sub
mov
xor
xchg
pop
mov
pop
jbe
inc
lahf
dec
dec
fisttpll
cmpb
jmp
std
pop
roll
inc
pop
mov
out
adc
mov
mov
out
sub
imul
aam
rorb
sub
sub
jge
test
fdivr
aam
inc
in
xchg
imul
mov
out
mov
jmp
in
inc
pop
cld
push
pusha
and
fistl
mov
jmp
stos
sbb
insb
lds
ret
int3
fdivrl
mov
pop
jp
sbb
lds
push
bound
add
push
mov
cmc
add
ret
jmp
js
movb
imul
insb
fdivrs
into
mov
jb
sub
fs
pop
add
pop
pop
cmp
xlat
rolb
in
bound
into
adc
jb
or
pop
mov
lods
loop
pop
int3
add
pop
mov
daa
int
clc
sbb
leave
sbb
or
dec
leave
xchg
add
inc
cmp
sub
add
pop
sti
or
jge
sti
cli
and
mov
daa
pop
lods
inc
jbe
das
mov
and
shl
mov
repnz
stos
mov
mov
into
arpl
pop
xor
adc
in
sbb
dec
pop
pushf
das
cwtl
push
cmp
inc
mov
decb
roll
pop
insb
leave
and
sub
jmp
pop
mov
pop
ret
jne
rorl
rolb
lods
mov
and
mov
lea
ljmp
xchg
and
push
loopne
sub
push
fcoml
add
movsl
adc
mov
cli
dec
push
pusha
pop
push
or
es
cmp
inc
add
inc
addr16
bound
mov
inc
ret
adc
scas
cwtl
mov
cmpsl
into
pusha
test
push
roll
xchg
ret
push
jmp
cwtl
orl
pop
xlat
cmpsb
xchg
push
pop
xchg
or
sbb
mov
fstp
lods
cmp
inc
cmp
subl
sub
sahf
jle
mov
sti
test
push
mov
or
in
pop
leave
push
stos
mov
rorl
fdivrl
mov
inc
daa
mov
jbe
lds
add
enter
or
movsl
hlt
int3
fnstsw
int3
add
pushf
repnz
fs
clc
push
mov
les
cltd
test
sub
or
dec
in
inc
imul
jl
nop
push
dec
fdivrl
push
or
imul
imul
add
mov
scas
imul
jnp
sbb
jg
loope
jge
jg
in
aaa
xchg
push
push
ficompl
stc
pushf
es
xlat
jge
pushf
cli
cmpsb
or
xor
xchg
add
sub
and
leave
mov
lret
dec
out
imul
rorb
scas
rcll
add
push
in
iret
dec
out
xchg
jle
icebp
cld
daa
mov
add
lahf
dec
cmpl
aad
imul
ljmp
push
xor
movsl
or
fidivrs
inc
sti
into
mov
sub
out
dec
sbb
push
pop
inc
xchg
movsb
cwtl
in
lds
push
xor
inc
add
bound
dec
cmp
dec
inc
push
sub
subb
mov
dec
shrl
popa
cmp
test
cmp
sar
push
mov
out
aad
xchg
and
movsl
push
mov
adc
jl
add
mov
pop
push
fmull
rorb
daa
pop
xchg
lock
js
test
fcmove
pop
add
mov
test
xchg
mov
movsl
mov
call
movsl
out
movsb
xor
xor
lds
cmp
xchg
lods
aaa
imul
xor
dec
inc
test
cmp
xor
sahf
lods
pushf
mov
or
fisttps
dec
scas
arpl
cmp
push
int
lcall
cmpsb
sub
lea
adc
test
hlt
insb
fistl
and
adc
dec
dec
add
enter
xchg
imul
inc
bound
aaa
adc
shl
nop
pushl
test
xlat
pop
mov
mov
cmpsl
das
call
sti
subl
lret
jl
daa
adc
fimuls
repnz
stc
push
jg
inc
je
pop
aas
mov
adc
or
pop
inc
cmp
into
dec
call
mov
loop
fiaddl
ss
notb
pop
mov
push
iret
cmp
dec
and
stc
adc
rorl
test
dec
lret
call
pop
nop
ficompl
push
jge
outsl
sahf
mov
ja
cwtl
aam
dec
push
push
cmpb
add
fxch
add
dec
xor
dec
lret
fdivl
pushf
jns
test
stos
inc
xchg
aam
ret
scas
xchg
cmp
jle
lea
pushf
mov
dec
ret
xchg
dec
fs
shl
mov
stos
test
popf
mov
xchg
pop
pop
mov
inc
mov
jmp
lods
inc
outsl
lock
fisubrl
xchg
cmpsl
adc
xchg
out
loope
movsl
add
mov
cmp
inc
cmp
stos
test
mov
mov
xor
mov
jbe
inc
dec
icebp
and
sbb
or
xchg
dec
mov
and
fisttps
inc
xorl
dec
mov
rol
fisttpl
add
mov
out
dec
ret
test
out
movsb
lds
jp
mov
ret
mov
pop
mov
xor
pop
loop
sbb
jo
scas
mov
push
sub
dec
ljmp
cmp
mov
mov
outsb
pop
ljmp
pop
nop
add
cmp
into
insl
mov
out
mov
rcll
addr16
jb
mov
popa
add
cmp
scas
push
or
lret
fcmovnb
out
aaa
add
loope
cmp
fldt
and
lods
cmpsl
cmp
sbb
rorb
mov
mov
push
xor
push
jle
fmul
imul
sub
cs
scas
call
push
shl
sarb
js
sub
jl
fistps
jecxz
lea
ret
mov
rol
xor
movsl
iret
lcall
sbb
inc
lods
movsl
or
nop
sbb
testl
or
in
mov
pop
cs
movsl
pop
xor
int3
lcall
add
mov
adc
movsl
pop
clc
in
int3
mov
xchg
push
fcmovnbe
inc
sbb
ret
and
mov
arpl
mov
xchg
pop
cwtl
push
add
sbb
jne
in
add
add
push
mov
int
push
sbb
fwait
xlat
mov
jg
bound
pop
fnsave
movsb
mov
mov
movsb
push
mov
sub
inc
int
out
xor
sub
inc
jnp
in
ret
sub
test
lahf
cld
inc
push
pop
and
outsl
dec
aam
jl
sbb
mov
dec
cmp
in
mov
jl
push
jnp
mov
mov
btl
xchg
sbb
cmp
icebp
adc
orl
aad
cmp
cmp
movsb
fxch
cmpsl
in
fadd
cmp
xorb
stos
sarb
mov
or
and
mov
lahf
add
rcrb
jns
movsl
inc
sbb
cmp
test
lahf
add
sbb
sti
push
add
xchg
mov
jecxz
or
cmp
int3
cmp
inc
or
addb
sub
test
add
jo
push
fisttps
aam
out
loope
mov
cltd
jb
leave
in
mov
aam
push
dec
flds
adc
jecxz
subl
addr16
aaa
push
popl
push
dec
pop
sbb
and
das
fstpl
sub
das
hlt
mov
sub
sub
test
ljmp
push
xor
loop
enter
jg
xchg
int
dec
cmp
leave
sub
mov
loop
mov
xchg
sbb
dec
xor
xor
ljmp
mov
fldenv
fisubrl
push
mov
fnstenv
sub
inc
mov
pop
sbb
sub
push
subb
jmp
nop
enter
push
and
daa
fwait
jg
rorl
push
xchg
bound
cmp
sbb
mov
sti
mov
loope
pop
dec
adcb
and
sbb
pop
pop
xchg
cli
mov
inc
je
jge
xchg
test
addr16
mov
adc
jl
add
push
mov
mov
sbb
xor
imul
inc
fld
and
lcallw
add
adc
or
cmp
pop
push
push
and
daa
das
imul
dec
fstps
push
adc
int
test
iret
enter
cwtl
mov
lcall
incb
inc
or
push
jb
loopne
jg
leave
or
inc
pop
sarb
add
mov
mov
jo
data16
je
add
scas
cli
lahf
mov
movsb
rcll
mov
call
mov
xchg
sub
repz
gs
pusha
outsl
fildl
push
sbb
push
mov
and
ret
insb
adcl
es
rorb
adc
cmp
push
std
sti
sub
mov
inc
dec
mov
aaa
inc
add
sbb
sbb
aaa
inc
loope
xor
das
push
xchg
decb
mov
into
pop
jns
adcl
aas
inc
lds
mov
sub
out
or
xchg
xor
jae
pop
cltd
shl
mov
mov
push
mov
lock
mov
or
std
enter
cmp
dec
sub
out
xor
dec
and
pop
add
jnp
mov
xlat
xor
shrb
loopne
sub
add
push
adc
push
faddl
gs
dec
push
lret
loopne
push
sub
movsb
icebp
leave
int
mov
mov
int3
push
loop
cmp
mov
push
sti
and
test
add
loope
shll
stos
dec
push
mov
jmp
and
mov
dec
bound
shlb
xchg
mov
lods
stc
daa
sub
shll
loopne
lods
cmp
aam
test
push
scas
cmp
add
je
in
mov
adc
push
lods
or
mov
adc
pop
fdivl
pusha
sub
sbb
adc
adc
mov
loop
fistl
shr
into
call
sub
inc
jge
pushf
cmpsl
mov
or
mov
stos
mov
fdivrs
rclb
mov
lods
lock
and
push
adc
jo
mov
fcoms
fdivrs
loopne
inc
jnp
mov
cld
cmp
add
es
fnstcw
xchg
jns
scas
pop
mov
jmp
cmc
sbb
mov
scas
int3
pop
loope
jb
dec
fisttpll
mov
adc
movsl
les
scas
shlb
rcrb
or
mov
pop
es
leave
xor
shll
cltd
lcall
pop
push
popf
mov
mov
adc
jecxz
xchg
mov
cmpsl
cs
push
jg
mov
add
inc
mov
arpl
add
imul
jmp
jge
push
and
add
mov
repnz
loopne
sbb
inc
insb
andb
fildl
hlt
sub
adc
inc
arpl
or
inc
fdivrs
test
mov
jne
pop
das
lcall
test
jns
mov
dec
mov
dec
mov
or
fdivl
push
int
inc
mov
or
cmp
lds
ja
and
imul
hlt
cmp
addl
pop
imul
into
sbb
inc
sbbl
xor
bswap
cmp
push
cmpl
xchg
jecxz
lea
sub
mov
int3
ret
adc
sti
out
cmpsb
sub
mov
mov
add
arpl
cs
scas
jae
hlt
dec
mov
loopne
mov
out
aad
and
je
jns
mov
push
inc
sti
mov
cmp
mov
les
jnp
mov
cmp
lcall
cmpl
or
xlat
cltd
ret
mov
mov
jnp
sub
lock
push
aad
sub
cmp
loope
loopne
lea
jl
inc
push
lcall
pop
lea
test
xor
push
adcb
sarl
fdivr
sub
push
ss
inc
mov
mov
mov
jp
js
aas
mov
dec
inc
sbb
push
adc
std
leave
call
dec
jge
adc
fisttpl
mov
mov
and
mov
jbe
cmp
ja
jle
inc
push
stos
inc
aam
fisubs
stos
pusha
outsl
sti
js
pop
xchg
push
mov
add
pop
out
mov
add
adc
push
andb
aam
fldcw
shlb
fs
data16
cs
jle
sahf
rcr
adcb
jmp
inc
cmp
cltd
dec
mov
mov
jg
test
add
mov
stos
xchg
fstl
and
inc
in
arpl
lods
or
sti
add
fsubr
repz
push
les
pop
popf
adc
cmp
jmp
and
add
aas
push
inc
pop
jge
ret
or
in
or
lret
add
mov
leave
cmpsb
mov
inc
ret
mov
sub
ret
dec
push
and
add
add
cmp
outsl
in
pushf
cmp
stc
out
andl
pop
jmp
int3
mov
nop
sub
adc
sbb
into
fidivrl
sub
lret
add
lods
pop
test
xchg
cmp
inc
jb
sahf
shrl
fsubl
xor
mov
cmp
inc
pop
inc
push
pusha
and
and
in
les
mov
aas
andb
dec
mov
fcoms
ds
pop
out
mov
mov
mov
imul
and
in
add
mov
hlt
xorb
pop
pop
inc
mov
xchg
pop
mov
call
or
andl
mov
loop
fisttpll
mov
and
sarb
sub
fs
push
sbb
aaa
jle
pop
xchg
mov
cs
fadd
daa
inc
aam
mov
aaa
push
and
xchg
clc
jge
inc
push
es
cmc
sub
sbb
pop
push
sbb
repnz
xor
sti
inc
mov
cmp
inc
pop
dec
outsl
jle
inc
xor
cld
sub
lahf
or
sub
pushf
xor
adc
sbb
mov
mov
add
jb
jp
enter
and
in
je
cmp
leave
mov
imul
sbb
jo
xor
adc
bound
dec
aas
jns
ds
pop
jge
testb
sbb
inc
pop
jg
ror
scas
adc
mov
pop
into
push
push
js
or
jg
or
lret
pop
pop
push
std
adc
repz
ja
xor
je
inc
lds
inc
adc
out
jbe
and
adcl
cmpsl
outsl
mov
add
stos
in
fnclex
sub
lret
xchg
in
out
in
mov
xor
rcr
not
lcall
stos
stc
xor
adc
lahf
imul
je
aaa
repz
aas
arpl
push
fisubl
cmc
fisttpl
add
jnp
inc
inc
dec
notb
outsb
enter
hlt
subb
inc
mov
and
mov
hlt
inc
imul
mov
lret
shr
test
and
in
ficoml
add
lret
xchg
mov
add
and
xor
push
imul
xchg
inc
shl
jl
adc
aad
idivl
ficomps
test
stc
sbb
mov
out
push
push
dec
push
xor
aad
jmp
in
mov
adc
sub
push
mov
loop
xlat
adc
mov
aaa
dec
lods
pusha
pop
mov
mov
stos
pushf
lcall
das
aas
cmp
loope
mov
add
shrl
outsb
mov
or
pop
or
jmp
js
rorl
negl
push
mov
mov
pop
mov
fs
push
jg
xor
mov
repz
mov
dec
xchg
test
mov
cmp
bound
push
push
dec
les
lahf
jp
add
mov
dec
int3
aad
fiaddl
mov
sahf
inc
pop
mov
loopne
and
pushf
cs
dec
and
inc
jg
idivb
push
xchg
in
and
test
xchg
cmp
sub
or
je
cmc
stos
mov
in
push
ret
mov
mov
xchg
sbb
sti
not
pop
or
adc
pop
in
inc
cltd
push
adc
incl
jp
test
hlt
inc
lock
adc
inc
test
inc
mov
mov
fisubs
jecxz
bound
dec
fsubl
pop
sarl
mov
shlb
in
dec
test
imulb
dec
decl
mov
mov
push
and
push
mov
push
jb
cs
sbb
clc
add
xor
sbb
out
xchg
stc
push
pop
dec
jo
xor
xor
test
pusha
in
sub
out
pop
mov
mov
pop
hlt
jnp
cmp
xlat
icebp
push
test
add
push
mov
dec
mov
sti
mov
outsb
test
fsubrs
sahf
jp
out
enter
cmp
mov
scas
fxam
or
ljmp
gs
and
scas
adc
cmpsl
push
in
mov
xor
jecxz
mov
mov
mov
or
push
sub
sub
and
stos
pop
stos
cmc
cltd
adc
in
lret
push
inc
push
es
movsb
enter
mov
sti
and
enter
jl
jns
push
idivl
mov
pop
pop
push
dec
sub
fsts
push
ret
xchg
inc
int3
cmp
loop
mov
lods
enter
jno
jnp
hlt
mov
jmp
js
mov
lock
or
iret
bound
lock
cli
or
xlat
push
pushf
incb
out
fsubs
aas
fucom
xor
stos
stc
repz
divb
fistpl
xlat
dec
sub
mov
iret
ficompl
aaa
mov
mov
and
inc
dec
sti
cmp
jae
fldt
aas
aam
test
or
cmc
and
and
popa
inc
sarb
fwait
es
mov
push
sbb
test
add
mov
dec
cmp
push
mov
or
mov
sbb
aad
vmovaps
stos
fs
push
add
cld
pushf
xchg
test
loopne
pop
int3
sbb
sahf
faddp
imul
sarl
jle
pop
jns
cmc
in
lret
test
xchg
pop
sbb
daa
mov
jmp
movsb
negl
insl
inc
add
ret
sbb
adcl
cmpsb
jns
cmp
es
adc
jecxz
sub
sub
pop
pop
pusha
icebp
insb
in
mov
xchg
inc
sub
das
pop
or
out
fs
xchg
sbb
mov
push
jno
loopne
fcomi
add
or
outsb
inc
pop
xlat
adc
jmp
lods
jecxz
mov
das
dec
push
mov
push
pusha
mov
idivl
arpl
insb
cwtl
inc
sub
sub
sub
cmp
xchg
stc
lea
inc
xor
ja
pushl
aas
incb
cs
movsl
xor
push
lcall
invd
add
add
cmp
ret
in
in
jo
or
cmp
mov
xor
xchg
mov
or
push
fbstp
call
pop
movsb
pop
push
push
ret
in
dec
inc
pop
inc
fcomps
je
mov
test
xchg
ja
lea
and
push
cltd
mov
and
das
cli
pop
pop
cmp
rcr
shll
arpl
mov
pop
inc
rcll
mov
test
gs
mov
dec
inc
and
adc
and
cmp
adcb
push
cmp
loop
pusha
jne
mov
adc
pop
inc
daa
cld
mov
dec
lods
std
inc
outsb
rorb
repnz
or
lahf
add
roll
jge
test
jo
repnz
mov
shlb
adc
push
xchg
add
fwait
loopne
cmp
xchg
cwtl
cmpsl
lea
dec
das
jecxz
sti
inc
test
mov
xchg
jo
xor
popf
xchg
dec
jge
dec
rcrl
xchg
jecxz
mov
sbb
mov
xor
jb
jle
int
jns
dec
shrl
outsb
sbb
dec
mov
dec
popf
push
adc
iret
addl
popa
cmp
mov
jbe
in
mov
ret
subl
pop
and
push
std
in
je
xchg
sub
adc
cwtl
cmp
dec
cmp
fisubs
pop
adc
dec
hlt
inc
dec
hlt
inc
sahf
inc
repnz
mov
int3
mov
push
xorl
lods
inc
scas
gs
push
adc
movsb
inc
and
or
in
sbb
mov
add
fucomp
pop
ret
inc
mov
mov
cmp
jnp
pop
cmp
mov
pop
jecxz
inc
movsl
scas
ja
push
daa
and
loop
cmp
bound
dec
push
mov
clc
dec
pop
ffree
pop
sbb
mov
xchg
inc
adc
dec
test
mov
pop
test
lcall
push
insb
xchg
es
inc
jo
mov
push
mov
leave
fists
fnstsw
pop
or
jnp
lods
push
and
pop
cmp
xchg
pushf
sub
fiaddl
mov
jp
stos
cli
sbb
add
mov
mov
xchg
inc
mov
fld
jns
add
inc
movsb
sub
pop
pusha
xchg
mov
lods
cwtl
shl
inc
aas
insb
add
sti
mov
jns
mov
inc
lret
mov
push
gs
dec
aaa
dec
mov
inc
fistpll
jbe
dec
xchg
ret
enter
cmpsl
dec
push
data16
popa
push
es
lods
mov
ss
nop
enter
repnz
cmp
and
xchg
mov
mov
les
fstps
pop
movsl
das
xchg
mov
mov
pusha
mov
fisttpl
mov
push
cmp
shll
lods
movsl
addr16
mov
pop
imul
iret
pop
sub
not
dec
clc
ja
idivl
sub
push
jno
jg
shlb
mov
sbb
pop
push
mov
fiadds
mov
loop
mov
into
lock
sub
xor
push
mov
cmp
sub
pop
or
or
sti
lret
mov
dec
mov
pop
push
stos
inc
adc
dec
xchg
clc
add
mov
stos
xchg
pushf
scas
lods
rcll
dec
fsubrl
dec
rorl
pop
dec
dec
stc
pop
adc
pop
addb
ror
mov
and
pop
test
cltd
mov
mov
fisubrl
and
pop
dec
lods
aad
rol
popa
add
xor
adc
push
mov
or
cmp
and
ljmp
cld
lods
and
jge
xchg
fsubrs
xchg
dec
xchg
ss
or
inc
cwtl
or
imul
ja
add
mov
add
es
sub
mov
int3
xor
cmp
pop
in
insl
dec
jo
push
pop
imul
inc
out
loopne
and
inc
xchg
mov
aad
adc
inc
in
jmp
ss
and
sbb
fwait
popa
add
dec
adc
mov
xchg
mov
sbb
cld
and
jg
xor
bound
lcall
xchg
push
add
shlb
fdivl
push
cmc
add
sti
inc
push
insb
movsb
jnp
add
call
push
das
xor
cmc
cli
mov
cwtl
jp
std
add
dec
cli
iret
or
push
sub
fmuls
sbb
xchg
sbb
outsl
or
enter
mov
std
xor
jno
mov
jg
test
cmp
dec
inc
mov
or
stos
push
mov
jnp
cmp
xchg
sarb
or
and
cmc
mov
not
mov
push
enter
push
imul
or
add
fists
and
pop
movsb
aas
adc
dec
inc
jb
dec
inc
xor
mov
push
mov
rorl
cmp
pop
lds
test
stc
in
cltd
or
xor
jle
insb
inc
bnd
or
cmp
mov
sbb
call
ljmp
and
adc
lcall
xor
xchg
lock
std
xor
mov
imul
xchg
mov
mov
mov
xor
xor
js
push
cmp
xchg
imul
movsb
mov
lock
outsl
negl
es
mov
xorl
rorb
aas
xorl
xor
inc
cmp
cmp
sub
cwtl
test
jge
hlt
mov
add
jno
das
push
pop
in
inc
cmp
leave
sbb
pushl
pop
jge
cld
pop
push
jge
sarb
add
dec
movsb
call
push
nop
fisubrl
data16
mov
xor
repnz
mov
push
xchg
xchg
pop
sahf
jae
jo
aas
test
and
push
or
dec
add
inc
jbe
jg
adc
std
mov
pop
sbb
stos
test
test
rcl
push
sti
mov
out
fwait
out
push
stos
mov
cmp
push
cmc
mov
pop
sub
pop
xchg
inc
ss
xchg
scas
dec
xchg
popf
fsubl
icebp
roll
in
ret
icebp
adc
lods
adc
cmc
and
and
mov
inc
push
arpl
shll
mov
mov
pop
sbb
cmovp
sbb
adc
add
loope
mov
mov
jbe
and
dec
jg
mov
movsb
sbb
addl
sub
repz
daa
or
and
ficoms
xchg
jb
mov
arpl
sahf
popf
mov
cmp
xor
mov
mov
pop
cmp
dec
mov
adc
mov
iret
pop
pop
lret
adc
or
filds
xchg
pop
sbb
jl
mov
ret
int3
mov
popa
ja
mov
idivl
pusha
xchg
lds
jnp
jge
push
add
enter
sahf
jg
mov
ret
dec
mov
sub
loop
pop
mov
mov
into
and
pop
int3
inc
jg
or
test
in
cmc
jmp
mov
sub
pop
sub
pop
repnz
sti
mov
jge
leave
imul
push
xchg
cmp
cmp
fs
cld
mov
add
mov
jns
aas
andb
stos
lret
bound
aad
adc
adc
fisttpll
mov
jmp
inc
into
jle
aam
sub
inc
mov
loopne
mov
cmpb
lock
dec
rcr
mov
es
dec
xchg
adc
and
loop
pop
fiadds
inc
add
int
rcr
cld
xchg
fistps
dec
enter
adc
sub
cmp
cmp
ss
lods
mov
pop
loopne
icebp
sbb
scas
rolb
insl
mov
cmp
mov
pop
and
sbb
cmp
xchg
mov
jmp
push
ret
add
add
mov
cmp
movsb
xor
mov
pushf
stos
dec
daa
pop
cmp
mov
sub
adc
xor
fwait
inc
movsb
mov
testl
nop
mov
popa
push
pop
and
dec
jge
stc
mov
cmp
and
cmpps
lret
mov
addr16
and
sbb
mov
cmpsb
sub
lock
add
or
test
int3
adc
bndstx
adc
lret
pushf
jmp
inc
push
dec
sub
subl
cmp
push
out
jmp
lea
mov
inc
call
pop
lret
cli
es
mov
ds
cmp
cltd
adc
fimuls
outsb
mov
int3
test
subl
xor
cli
divps
mov
add
and
cmpsb
fisubs
pushf
das
mov
rcll
jb
fwait
loop
into
push
sub
and
push
test
xor
sub
jns
jge
repz
dec
sub
or
and
bound
in
aas
xor
lret
int
mov
push
dec
sub
test
fs
inc
xchg
imul
xchg
bound
adc
xchg
jne
cmp
fisttpl
fsub
jge
cmpsw
out
and
cmp
imull
ror
clc
movsl
rolb
nop
nop
dec
imul
orb
inc
and
pop
mov
mov
movsb
xor
lret
orb
cmp
mov
adcb
jecxz
push
leave
mov
and
xor
cmc
lds
mov
mov
in
mov
rcr
dec
mov
jmp
and
push
movsb
mov
and
mov
push
and
inc
mov
push
outsb
incb
cmpsl
adc
xchg
jbe
push
nop
xchg
xchg
xchg
xchg
xor
sub
dec
les
mov
sub
cmp
fnstenv
xchg
and
cmp
mov
nop
daa
mov
cmp
movsb
push
mov
mov
dec
or
cmp
test
in
test
imul
mov
mov
gs
mulb
jecxz
les
mov
ret
inc
loop
and
xor
dec
xor
pop
pop
cmc
adc
jo
imul
xchg
xchg
adc
and
add
dec
imul
fildll
push
les
movsb
inc
orl
aas
push
adc
add
jle
out
andb
inc
pop
push
cmp
loop
dec
sub
pop
cmp
jp
inc
fdivrs
decb
jle
pusha
xor
pusha
sbb
test
repnz
cli
dec
add
nop
insb
nop
flds
test
lds
cmp
and
dec
pop
popf
xchg
lea
and
das
jg
xchg
lret
mov
popf
mov
les
add
mov
insl
mov
fsubrl
pop
add
out
or
das
cs
lds
enter
mov
aad
pop
xchg
ds
pop
cmpsl
bound
mov
mov
repnz
test
shl
push
pop
mov
lock
jns
sahf
and
xor
rorl
inc
sbb
inc
stc
mov
jo
sub
pop
ret
imul
pop
inc
xor
push
add
sub
pop
mov
and
jo
sti
lcall
jecxz
add
shll
les
loopne
or
mov
dec
xchg
rcrl
add
pop
inc
ljmp
out
xchg
ret
add
inc
inc
add
lods
repz
sbb
rolb
cltd
pop
pop
jp
sahf
mov
repz
out
mov
fldl
int3
sub
xchg
shl
mov
icebp
cmpb
mov
loope
dec
inc
loop
pop
ja
daa
jo
popf
inc
and
int
fimuls
dec
xor
add
into
pop
jecxz
and
icebp
clc
add
gs
cmpb
lock
lahf
inc
aam
cmp
cs
sahf
xchg
pop
out
repnz
sub
mov
test
inc
sbb
add
cmp
push
xchg
inc
iret
iret
xchg
lds
mov
or
pushf
in
sub
add
dec
or
aam
adc
push
fdivrs
mov
cmc
inc
lret
sbb
fs
repnz
xchg
push
insl
repz
mov
and
and
pop
ret
movsb
std
pop
xor
and
mov
and
fwait
dec
fstl
dec
inc
lods
sets
cmpsl
mov
mov
movsb
pop
or
push
lods
push
cmc
in
ret
add
fisubs
lea
inc
cmpsl
lea
adc
imul
inc
fldl
pop
pop
push
out
add
scas
popa
mov
aam
mov
fcomps
push
mov
xchg
out
mov
icebp
loopne
fdivrs
mov
sub
ret
xor
test
cwtl
or
movsb
jbe
insb
repz
or
es
insb
sbb
dec
adc
cmp
add
stos
hlt
sarb
jne
sti
sbb
cmc
fmuls
daa
int3
cmp
sbb
adc
out
cli
jno
popf
jl
mov
sub
pushf
and
jno
fsubrl
nop
inc
data16
loop
pop
jecxz
jecxz
es
dec
xor
shlb
xchg
mov
mov
lret
cmpsl
xor
jnp
push
jp
add
sub
leave
or
sub
sub
xor
lods
and
lret
fwait
pop
dec
lea
inc
in
inc
mov
incb
daa
xorb
inc
cmp
add
test
rorb
insb
arpl
pop
inc
int3
push
pop
xchg
inc
xchg
pop
and
xchg
dec
testl
in
sub
inc
jmp
in
cwtl
or
lret
outsl
rcr
mov
shll
add
push
push
sti
add
xor
sub
les
cmp
ret
in
dec
cltd
xor
mov
push
movsb
fldenv
adc
cmp
lret
bound
add
loope
cmpb
mov
enter
loope
aam
and
ljmp
xor
jmp
xchg
fnstenv
mov
outsb
into
xor
add
mov
dec
and
push
sbb
adc
outsl
adc
cmp
arpl
rcrl
add
mov
cltd
mov
xor
int
pop
shrl
jns
sub
sti
sub
mov
cltd
adc
dec
lcall
pop
sub
push
lock
iret
xchg
mov
inc
and
shll
out
or
ss
out
xor
mov
test
imul
ljmp
jp
fwait
sbb
fwait
stos
xchg
xor
ret
push
xor
sub
jo
pop
out
fs
dec
adc
mov
add
inc
sbb
add
add
or
cmpsb
mov
mov
fwait
repz
xchg
scas
xchg
mov
mov
cltd
movsb
sub
cwtl
jo
inc
pushf
sar
nop
shl
inc
mov
and
movsb
dec
iret
or
and
pop
enter
test
or
push
aaa
jl
adc
jecxz
ret
je
and
ds
sub
xchg
push
xor
mov
pushf
rcll
and
dec
xor
enter
add
movl
sarb
cmp
jmp
test
pop
lea
in
mov
addl
stos
insb
or
adc
pop
pushf
and
negb
inc
inc
sub
mov
test
scas
test
loope
fadd
dec
nop
inc
sub
outsb
sbb
dec
xchg
rcrb
jo
xor
rcl
ja
int3
pop
push
push
inc
mov
sbb
test
xor
rorb
aas
mov
adc
outsb
and
cmp
pop
std
dec
sti
imul
mov
mov
outsb
dec
dec
dec
bnd
sub
dec
jbe
sbb
subl
or
cmpsl
fcomps
dec
or
sub
push
loopne
push
ficoml
push
movsb
mov
dec
push
sbb
mov
mov
addr16
inc
mov
stc
pusha
in
xorl
ds
aam
popf
mov
lock
cltd
test
test
and
sub
mov
jno
ja
mov
cli
mov
movsl
jmp
mov
popf
cld
or
and
aad
dec
cli
mov
hlt
push
sub
rorb
test
jmp
mov
mov
or
jl
arpl
cs
lock
inc
test
cwtl
out
sbb
jmp
clc
scas
popa
shll
lcall
xchg
sub
pop
dec
lods
mov
and
mov
adc
jo
dec
pop
sbb
push
clc
sub
mov
test
xchg
out
xor
int
shr
test
or
aas
push
dec
push
dec
loop
das
testl
lahf
mov
add
test
or
outsb
jno
mov
xor
cli
xor
jl
push
and
daa
aam
xchg
xor
aas
push
pop
inc
dec
leave
repnz
fwait
pushf
and
les
in
inc
sub
mov
cmp
loop
pop
mov
push
ret
cwtl
decl
in
fcoms
enter
sub
movsb
lahf
bound
mov
dec
mov
sub
rcrb
js
xor
inc
lock
and
push
mov
js
jne
xchg
push
push
lahf
enter
mov
push
sub
cmpsl
inc
repnz
addb
mov
fmulp
aam
fs
mov
xchg
jbe
or
imul
add
insb
and
cmp
repz
cld
sub
jnp
push
andps
mov
rclb
sbb
mov
hlt
sbb
mov
gs
aam
mov
into
or
fsts
jmp
scas
dec
cmp
ret
inc
sbb
js
jnp
inc
test
jge
xlat
pop
xchg
mov
mov
scas
adc
sub
xchg
mov
xor
pop
inc
jnp
ret
mov
mov
movsl
lret
and
mov
shrd
push
in
ret
sbb
mov
sbb
push
pushf
jb
ret
cmpsb
cmp
sbb
scas
add
clc
mov
lock
popf
mov
rcrl
add
pop
int
inc
dec
hlt
fadds
aam
inc
movsl
ficompl
jnp
cmc
mov
aaa
fcom
movsb
sbb
movsl
jae
lds
mov
mov
insb
push
js
jl
add
and
js
xchg
enter
mov
fwait
push
imul
sti
loopne
push
inc
jo
clc
inc
and
adc
inc
mov
cltd
inc
mov
jmp
push
mov
adc
aad
cltd
in
jmp
in
adc
sub
pop
mov
das
inc
mov
cs
add
lods
ljmp
jo
or
mov
add
icebp
and
or
bound
out
cli
mov
jge
mov
gs
mov
dec
cmp
xchg
rcl
mov
xor
aam
xchg
mov
insl
inc
xor
inc
test
sbb
mov
cmp
sbb
sub
dec
pop
dec
stos
sub
mov
cmp
ss
add
pop
popf
push
ret
mov
and
rorl
addr16
test
add
sub
mov
or
jecxz
xchg
cli
xor
fmull
pop
lock
push
loopne
mov
leave
dec
or
cmpsl
sbb
push
es
gs
shrl
std
ror
mov
clc
pusha
clc
mov
xor
stc
ja
add
scas
or
scas
fnstsw
push
xchg
popf
sub
push
push
dec
jecxz
aam
mov
je
ret
adc
mov
movl
cmp
repz
repnz
data16
pop
push
push
mov
sar
xchg
decl
sysenter
adc
jmp
fsubrl
sbb
fs
insb
cs
pop
insb
dec
push
fstps
sub
imul
mov
mov
popl
sahf
xchg
dec
mov
ljmp
jnp
mov
sub
ret
ds
lret
imul
inc
dec
imul
pop
imul
and
jg
mov
lret
jo
fiaddl
jl
inc
inc
jno
lods
movsl
outsb
out
mov
lods
sub
adc
aad
inc
lock
or
jb
imul
dec
sub
pop
ret
imul
pushf
mov
sub
pop
js
pusha
jge
jnp
dec
fstl
cld
sbb
pop
push
dec
and
xor
inc
jp
and
xchg
or
sti
aad
out
mov
fnsave
push
lahf
in
scas
jnp
lret
daa
push
rolb
pop
fidivs
and
sbb
lahf
mov
enter
jle
sahf
pop
pop
xchg
fisttpll
cmp
pop
add
cmp
push
mov
xchg
je
pop
bound
and
repnz
pop
sub
enter
add
xchg
inc
addr16
not
mov
or
roll
shlb
or
out
pop
sarb
jge
adc
sbb
pop
jp
sbb
adc
rcrl
push
pop
aad
push
cmp
inc
iret
mov
cld
xor
rep
cmp
es
out
je
js,pn
jp
addr16
mov
ficoml
dec
or
enter
cmc
fistpll
mov
mov
and
imul
cld
mov
in
movsb
inc
lret
mov
addr16
lcall
push
dec
mov
scas
int
pop
aas
lea
dec
xchg
mov
repz
mov
pop
jb
cs
mov
bound
cld
xor
inc
cmp
sbb
rcrl
sbb
jo
movsl
dec
adc
bound
loope
dec
mov
pop
fisttpll
pop
fdivs
sub
jbe
jecxz
std
jmp
ds
push
sub
test
push
xchg
cmp
jle
push
dec
mov
add
xchg
pop
ss
xchg
and
mov
fbstp
push
adc
inc
cmp
pop
stc
stc
fwait
stc
incb
pop
mov
in
inc
jb
in
fwait
inc
sbb
push
cmpsl
add
add
aad
imul
repnz
pop
movsl
mov
jle
jge
mov
cmp
mov
cmpsl
jge
data16
fwait
and
mov
into
pop
mov
jb
adc
repnz
test
xchg
shlb
add
add
and
or
ret
push
or
sbb
mov
and
imul
out
fnstcw
inc
out
cmovbe
fldcw
jg
mov
xchg
and
pop
xor
ds
aad
dec
mov
fidivl
mov
mov
fst
mov
fldenv
adc
cmp
cmp
loop
bound
pop
test
mov
in
rclb
sbb
loope
cmpsl
in
mov
xlat
invd
mov
and
dec
pop
xor
daa
cltd
xchg
je
xchg
dec
xor
in
imull
mov
aad
pop
or
scas
xlat
mov
jns
mov
push
add
mov
aam
adc
test
xor
jae
cmp
cmp
jp
sub
jo
cld
int3
xchg
add
jp
mov
pushl
and
in
cmp
jnp
ss
icebp
push
xchg
push
test
mov
sub
es
cmp
mov
jno
rolb
sub
fcomps
int3
leave
ds
fidivs
enter
and
pushf
mov
into
pop
dec
cltd
clc
and
das
std
aam
mov
xchg
in
pop
xor
in
jns
ret
sbb
sarl
adc
test
repz
and
addr16
arpl
insb
mov
sub
ret
sbb
and
cmc
sbb
pop
and
sbb
frstor
inc
sbb
in
fnsave
sbb
sub
fiaddl
xor
adc
dec
imul
sbb
lret
faddl
push
repnz
cs
lret
jmp
das
adc
and
testl
pop
dec
cmp
sub
add
push
adc
sbb
add
popf
and
fistps
mov
mov
inc
test
add
stc
push
cli
cmp
gs
cmpsl
fld
insl
jb
pusha
add
dec
xchg
movsb
cmpsb
add
jp
popa
xchg
insl
jecxz
push
push
shl
pop
add
adc
in
inc
fiaddl
adc
jge
jb
dec
data16
and
and
dec
sbb
jl
inc
fldt
in
sub
xchg
and
aam
call
pop
loop
fcomps
mov
jne
fnstsw
fs
lds
mov
push
lret
jmp
mov
or
shrl
jp
cmp
inc
clc
push
xor
jne
in
test
or
ret
push
fsubl
mov
and
sbb
xor
loope
fucomp
or
lcall
push
inc
data16
dec
xor
xchg
nop
test
mov
pop
jbe
shl
and
inc
xchg
adc
mov
aad
push
repnz
sub
das
inc
aam
inc
setge
loopne
lea
fs
pop
and
pop
mov
and
add
aam
addb
or
adc
xchg
daa
adc
cmc
jae
icebp
mov
cwtl
cmp
aam
xchg
cmp
mov
lret
cmp
idivb
xchg
mov
leave
shll
add
add
js
int
jbe
mov
sub
add
jo
ret
jp
cmpsb
mov
sub
pop
cmp
add
pop
dec
clc
jmp
mov
mov
mov
imul
lret
scas
mov
jle
mov
cmpsb
and
nop
hlt
cmp
enter
fisubs
test
repz
or
push
imul
add
and
arpl
test
and
stc
inc
jmp
fdivrl
mov
cmp
inc
mov
push
pushf
or
push
sahf
popf
outsb
in
int
sbb
fbstp
inc
inc
pop
inc
hlt
xchg
in
bound
add
push
movsl
add
push
xchg
in
cmp
mov
sbb
je
xchg
sub
lds
pop
bound
and
inc
insb
es
rcl
leave
lret
xchg
mov
test
adc
sbb
inc
ja
dec
scas
inc
xor
sbb
mov
pop
fiaddl
int
adc
pop
add
repz
daa
mov
jl
das
loope
add
add
dec
or
out
jmp
and
flds
add
pop
fucomi
in
mov
iret
mov
fwait
loope
pop
pop
inc
push
std
and
dec
or
and
popa
sub
cltd
cmp
aas
xchg
adc
mull
stos
or
xchg
dec
pusha
inc
pushf
cli
inc
dec
in
lret
mov
cmp
adc
xchg
insb
jmp
popl
sub
mov
pop
lea
pop
and
xchg
lcall
sbb
pop
lret
push
fwait
cmp
or
int3
or
pusha
or
dec
enter
or
jle
add
jo
arpl
dec
rol
fwait
mov
in
enter
add
mov
mov
inc
mov
xor
push
iret
lret
xchg
cmp
jl
shlb
imul
inc
ds
inc
mov
jnp
xchg
xor
add
dec
out
and
js
adc
cs
or
test
or
mov
outsb
xchg
jp
sarb
mov
scas
pop
adc
add
mov
fs
sti
mov
or
and
orb
inc
popf
mov
sub
push
cwtl
or
imul
mov
jg
push
shlb
jle
dec
sub
lcall
hlt
push
or
sub
sub
push
lods
and
mov
mov
pop
push
cs
mov
pop
inc
inc
and
iret
mov
out
nop
sub
inc
and
fnsave
jno
sti
imul
aad
push
loope
xor
jno
jp
fmul
int3
mov
int
jnp
out
ljmp
xor
test
das
dec
test
push
jbe
xchg
add
in
jmp
movsb
or
push
nop
jne
mov
push
sbb
push
rcrl
sbbl
push
jns
inc
into
cwtl
xchg
pop
fmuls
ja
addl
addr16
push
inc
mov
inc
popa
ja
imul
mov
pop
nop
rcl
roll
mov
xor
call
hlt
lods
add
add
je
shl
mov
mov
rcrl
imul
loop
sti
push
int3
mov
and
sub
in
int3
movsl
pusha
ret
sub
sub
add
sub
xchg
pop
pop
xchg
or
mov
add
xchg
fdivs
rcrb
mov
mov
sbb
pop
jecxz
call
xchg
mov
popf
mov
int3
or
pusha
lret
out
test
dec
std
outsl
or
mov
cmp
test
test
jmp
mov
jp
inc
push
jae
das
mov
add
jg
bswap
test
pop
inc
lret
inc
js
dec
cmp
mov
push
enter
adc
out
and
insb
ret
lock
mov
xor
dec
loop
popa
sbb
or
cld
int
mov
push
cmp
xchg
out
mov
lret
repz
outsb
sti
stos
xchg
sub
sub
xor
icebp
adc
aam
inc
fwait
or
cltd
mov
mov
test
fstpt
sub
xor
popa
xlat
xchg
lods
in
push
xchg
cmp
mov
jno
iret
or
mov
mov
pop
lret
repz
add
mov
rol
jns
or
mov
popf
mov
jl
jbe
pop
and
outsl
add
std
popa
mov
les
push
sbb
fidivrl
xor
test
jne
mov
sub
jp
or
jl
mov
imul
jb
rclb
mov
aam
mov
or
jl
and
hlt
jle
icebp
and
xchg
sub
and
bound
push
jl
fistps
fidivrl
lret
inc
es
adc
divl
loop
jl
mov
and
pop
in
aaa
sub
mov
int3
cmpl
mov
repz
or
inc
out
mov
repz
jmp
popf
popa
jecxz
inc
push
cmpsl
pop
xchg
mov
mov
cmp
sub
or
lods
push
adc
daa
imul
gs
adc
mov
shrl
push
fcompl
and
test
add
test
mov
mov
sub
jg
push
jp
cmp
cmpsl
gs
jmp
jmp
mov
fcomi
popl
test
movsl
inc
jne
in
pop
subb
aad
or
cmp
jg
cmp
clc
cmp
add
in
add
lcall
lods
push
mov
inc
cltd
and
int3
js
lcall
pop
ret
add
jp
push
dec
inc
adc
cmpl
movsb
jle
mov
aaa
dec
mov
mov
hlt
mov
mov
addr16
mov
mov
inc
imul
xor
inc
push
cmc
mov
xor
leave
xchg
orl
inc
inc
jp
mov
and
pop
push
pop
jl,pn
lret
sahf
push
push
sub
call
dec
leave
or
sti
lea
add
test
xlat
dec
andl
xchg
mov
stos
inc
jbe
adc
je
imul
dec
pusha
dec
jmp
adc
cmpsb
cltd
add
lds
add
in
or
sahf
xchg
mov
adc
hlt
cmp
aaa
sub
and
popf
lds
outsb
pusha
jg
inc
xchg
cmp
mov
push
cmp
mov
std
test
cmp
fbstp
add
lods
xchg
pop
push
pop
add
fildl
mov
inc
xor
subb
test
sub
mov
jbe
xchg
xchg
push
or
push
cmpb
sub
lods
cld
int
jmp
adc
fiaddl
push
cmp
ja
mov
mov
aam
ret
mov
sbb
adc
arpl
das
adc
sti
pusha
xchg
push
fnsave
or
out
aam
pop
mov
pop
adc
mov
stos
add
loope
cmp
or
push
lret
cltd
cmp
xor
into
into
or
icebp
pop
mov
adc
mov
in
andl
mov
jnp
cmp
fisttpl
cld
out
jl
pop
hlt
adc
outsl
adc
int3
push
xchg
fnstcw
cwtl
sahf
cmp
push
mov
data16
das
jne
dec
les
jge
loop
loop
arpl
push
lret
lds
pop
in
mov
jle
pop
into
pushf
adc
aas
in
js
xor
xorl
dec
imul
adc
ss
movsb
xchg
xlat
or
pop
add
fistl
in
and
pop
out
adc
ss
mov
fwait
or
push
mov
or
rol
cmpsl
adc
incl
test
ljmp
jbe
add
xchg
pop
test
clc
jb
data16
mov
cld
fldlg2
cmp
cmpsb
push
es
jo
dec
jge
andl
jg
pop
mov
jns
mov
scas
dec
mov
icebp
or
xchg
inc
xchg
mov
inc
ffree
imul
mov
js
sti
dec
xlat
jno
cmovp
pop
jmp
enter
test
inc
leave
ret
addr16
loop
jle
inc
and
mov
adc
cwtl
std
mov
dec
pop
movsb
jns
lods
or
lcall
sbb
fbld
jp
xchg
push
inc
sti
daa
dec
adc
cmp
jp
jge
jae
stos
xchg
push
push
cmpl
sbb
cs
dec
sub
push
xor
sub
pushf
dec
fs
lahf
jns
mov
divb
out
cmp
int
push
mov
mov
jno
jo
cs
mov
pop
mov
fst
leave
icebp
and
mov
xor
jle
stos
add
in
mov
sahf
dec
mov
sub
ljmp
cmp
push
adc
mov
xlat
fisubrl
test
jmp
loopne
mov
imul
daa
iret
pushf
sbb
lods
in
jge
into
fildll
fwait
andl
ja
cmp
or
out
cmp
nop
cld
jno
fidivs
cld
cmc
push
xchg
sub
icebp
loopne
stos
and
les
ror
aas
add
fld
rorb
imul
push
dec
fsts
jb
mov
fstl
fnsave
jp
and
xor
and
sbb
imul
fmull
add
je
rcl
sub
push
push
mov
bnd
cmp
sbb
mov
es
ja
test
scas
mov
lret
cmp
push
cmc
lea
mov
ds
cmp
into
jnp
pop
sbb
cmp
insl
push
imul
mov
repnz
xchg
lods
push
rcrb
loopne
add
into
jge
lds
test
pop
out
aad
cltd
push
mov
push
or
mov
pop
sbb
bswap
lea
std
xor
fwait
cmp
push
pop
add
sbb
lods
arpl
sbb
dec
sub
jnp
xchg
jge
stos
pop
out
lods
jmp
test
mov
cmp
andl
xchg
pop
iret
test
mov
adc
jge
and
mov
pop
and
lret
fdivrl
sti
hlt
mov
lcall
inc
cmp
flds
sbb
mov
loop
cmp
out
xchg
aam
mov
cld
int3
xor
cmp
je
push
mov
lods
sbb
ds
or
cmpsl
jnp
or
add
dec
in
rcll
sub
rep
subb
cmp
or
repnz
push
mov
fcomps
push
fadds
sub
sub
pop
pop
push
or
and
cmpsl
addb
out
jb
icebp
jl
lods
add
inc
iret
dec
pusha
pop
cltd
repz
enter
je
xchg
adc
sbb
pop
cmp
push
jb
cld
pop
test
fs
cltd
shl
jl
daa
xchg
nop
and
jg
in
stc
popf
or
adc
int
mov
sub
mov
arpl
mov
popf
xor
ds
fs
enter
cmp
clc
push
nop
fnsave
mov
movsl
pop
push
cmp
iret
enter
push
push
add
pop
pextrw
ret
push
ljmp
ret
lods
out
hlt
adc
xchg
cmp
and
and
aas
ds
pop
push
fimuls
push
push
sar
arpl
int3
push
cmp
in
or
sbb
lods
cmp
jae
fstps
enter
fisttps
jecxz
mov
xchg
xor
andb
mov
jo
push
sbb
out
imul
push
fwait
mov
or
in
inc
pop
shll
and
in
mov
fisttps
add
aam
and
mov
pop
popa
mov
adc
into
test
aaa
adc
or
jo
xchg
or
cli
push
test
into
xor
bound
mov
sub
data16
push
lods
enter
adc
mov
sbb
push
xchg
or
push
int3
cmp
and
lea
mov
repnz
inc
les
push
xchg
ss
mov
fwait
imul
fwait
sub
dec
imul
mov
test
loop
fbld
pushf
dec
dec
or
sahf
fildl
ja
imul
fidivrl
pop
lock
cmpsb
and
andl
cmp
cwtl
and
loop
xlat
dec
jmp
cmp
sub
xchg
adc
mov
fs
dec
ret
dec
jb
movsb
jno
fs
sbb
cld
xchg
mov
lds
bound
inc
or
lock
pop
inc
push
into
fcmovb
inc
in
adc
and
sub
mov
arpl
push
inc
mov
xchg
cld
les
lock
jg
mov
mov
jge
out
movsb
xchg
adc
jbe
rclb
push
hlt
test
shlb
cli
test
jne
test
mov
jns
inc
ret
lret
sub
mov
jge
fdivr
jle
mov
push
fwait
les
xor
dec
jmp
les
aas
mov
ljmp
xchg
mov
loopne
ljmp
push
fcompl
jb
lret
adc
or
orb
pop
pop
sti
pop
movsb
push
push
dec
ljmp
mov
sub
cmpsb
js
popf
pop
or
dec
lea
imul
faddl
loopne
jno
stos
insl
push
xchg
lods
in
xor
test
adc
lahf
outsl
scas
mov
mov
pop
jge
pop
xor
xchg
xlat
out
pusha
jmp
push
mov
pop
mov
cmp
int3
dec
popf
push
mov
cmpsb
cmp
cmpsb
lea
sub
xchg
test
arpl
in
push
in
shlb
cmp
je
sbb
adc
imul
ret
ucomiss
xlat
cmp
mov
jg
push
push
nop
arpl
dec
or
mov
adc
pusha
sbb
pop
xchg
push
add
int3
cmp
je
out
rcl
add
sbbb
pop
or
sbb
dec
dec
ror
dec
cltd
dec
movsb
cli
imul
jp
mov
push
mov
sbb
push
ljmp
test
icebp
imul
in
cmp
fisubrl
jl
jecxz
mov
pop
test
clc
mov
test
add
repnz
add
cmp
mov
or
fnsave
ja
cli
and
push
fcompp
xchg
fistpll
inc
fsubrs
mov
inc
ret
add
inc
mov
lds
stos
and
push
shl
and
push
jp
test
inc
repnz
dec
mov
pop
movsb
fisttps
cld
aas
inc
outsl
dec
test
sbb
shl
dec
in
cmp
jo
mov
xchg
mov
adc
fbld
jmp
sub
je
mov
jmp
sti
loope
aas
cmc
lds
cmp
pop
pop
push
adc
xchg
jb
std
cmp
mov
loop
mov
insb
sbb
inc
push
push
or
pop
insl
jmp
stos
lahf
aas
nop
cmc
loope
xor
cltd
sub
inc
data16
and
rcrl
push
ficompl
repnz
inc
cmpl
jnp
bound
stos
or
pop
imul
mov
push
adcl
lret
sub
shrb
jle
repz
int3
inc
or
add
and
ficoms
test
repz
fidivrl
loope
fiaddl
mov
add
cs
and
fmull
push
xchg
adc
ds
mov
out
adc
orl
inc
aam
push
aad
xor
lahf
push
jp
cmp
push
bound
stos
enter
fdivp
icebp
and
in
push
std
adc
mov
dec
sub
mov
cwtl
inc
cmc
sarb
imul
add
jae
dec
dec
pop
sahf
push
icebp
scas
js
outsl
js
loop
sub
rorl
cli
out
int3
das
xor
loope
push
xchg
sub
jns
mov
sbb
sub
sub
cmp
loop
sub
loopne
fbstp
mov
dec
test
out
rorb
add
andl
lods
and
fisttpll
xor
roll
loopne
imul
movsb
mov
sub
cmpsb
aaa
sub
dec
imul
dec
inc
xchg
mov
xchg
mov
push
mov
lods
jae
in
and
xchg
push
dec
xchg
and
add
cmc
mov
shrl
xor
and
rcll
popf
out
icebp
cmp
lds
scas
or
ja
inc
outsl
xor
fstps
dec
jns
inc
pop
or
nop
jb
loopne
inc
lds
and
xchg
fwait
and
dec
cmp
cli
push
xchg
cli
popf
cmp
push
adc
sarb
pop
fwait
jnp
push
scas
imul
test
scas
mov
xor
cmpsl
jmp
das
cmp
cmpsl
pop
xlat
int
xchg
cmp
addr16
mov
adc
mov
mov
mov
add
mov
add
pushf
lods
andb
stc
inc
stc
inc
lret
cmp
adc
std
les
aam
notb
nop
lods
mov
fiaddl
mov
imul
push
mov
outsl
nop
mov
jo
iret
std
js
in
xchg
js
jnp
mov
and
cmp
rcr
mov
arpl
mov
jae
test
pop
ds
sub
cltd
jb
and
out
jnp
mov
outsl
mov
shlb
mov
push
mov
inc
gs
or
pop
jmp
pop
inc
mov
push
pop
popf
jge
cmp
cs
add
push
icebp
je
add
push
xchg
inc
mov
dec
sub
jp
add
xchg
test
mov
or
add
rcrl
int
mov
cmpl
test
xor
leave
mov
imulb
mov
jmp
mov
xchg
xchg
push
in
lock
and
pop
or
add
mov
jle
inc
scas
fxch
dec
stos
adc
lret
mov
pop
das
dec
adc
gs
adc
push
mov
imul
mov
sti
jnp
dec
jge
adc
inc
repnz
adc
into
sbb
adc
shrl
cmp
jo
and
xchg
adc
pop
mov
daa
push
mov
aad
cmp
dec
cmpsb
mov
push
push
popf
sub
mov
lea
xchg
cli
aas
pop
ret
insl
or
scas
xchg
adc
sub
push
add
mov
mov
dec
scas
out
fmuls
lods
push
mov
sbb
xorb
fsubs
and
xchg
jnp
jae
das
imul
jl
gs
out
mov
mov
outsl
adc
ja
cmp
sbb
jo
jmp
inc
imul
cmp
xlat
stos
inc
mov
mov
fildl
mov
and
mov
adc
in
mov
lret
adc
dec
fidivs
mov
mov
lret
packsswb
xor
movsl
ljmp
mov
dec
sti
mov
andb
mov
in
push
mov
dec
addl
dec
push
lret
mov
and
pop
in
add
scas
sbb
iret
sub
hlt
mov
popf
add
sub
mov
xchg
outsl
add
and
push
dec
pop
dec
or
pop
sub
bound
cmp
xchg
and
call
inc
ret
mov
aaa
push
arpl
fwait
xor
lcall
mov
add
in
inc
xchg
mov
cli
xchg
into
movsl
in
rorb
popf
in
jmp
in
dec
inc
rcr
dec
and
lods
movsl
dec
inc
mov
jmp
pop
and
push
repz
sbbb
sti
shlb
hlt
or
jae
jne
je
int
add
into
fsub
js
mov
in
in
xor
and
pop
fs
dec
mov
int3
add
adc
bound
enter
fildl
add
scas
cmc
fcoms
adc
push
inc
xchg
adc
jmp
rcll
into
lret
jecxz
jb
into
cmpsl
sbb
lock
rcl
push
cs
sbb
jecxz
sbb
dec
jae
lcall
mov
sbbl
subb
enter
aad
scas
xchg
fildl
mov
cmp
nop
mov
shlb
cld
or
aaa
sahf
aas
sbb
je
popa
insl
inc
xor
push
xor
xlat
mov
shlb
divb
jb
or
or
test
inc
sub
fsub
xor
xchg
insb
dec
int
adc
ds
ret
cmp
push
loop
dec
out
enter
push
xor
inc
lods
aas
inc
mov
daa
cltd
aas
dec
xlat
jmp
cs
sahf
loop
pop
sbb
shlb
pop
or
stc
mov
mov
add
in
or
add
mov
les
out
cld
or
fisttpl
mov
cmp
inc
inc
movsb
addr16
jmp
dec
jmp
aaa
les
add
and
cltd
mov
add
subl
ret
sub
bound
movsl
mov
add
roll
dec
subb
and
shr
aam
iret
fistl
nop
jno
push
arpl
lods
mov
jecxz
js
cs
jmp
mov
popf
fistpll
test
dec
mov
sbb
mov
mov
cmp
push
inc
push
jmp
cltd
scas
push
dec
sbb
ret
mov
inc
dec
push
pop
pop
cltd
int3
leave
xor
xchg
fiaddl
dec
mov
push
xchg
test
xor
add
es
dec
mov
pop
stc
lret
inc
pop
xor
pushf
xor
jne
cmc
pop
mov
cmp
jl
neg
mov
ljmp
push
xchg
mov
jae
push
push
jne
jl
outsl
or
ds
pop
imul
mov
xlat
mov
cmpsb
mov
push
lea
push
xchg
pop
aas
test
inc
and
jg
and
mov
out
out
and
mov
sahf
ror
lock
push
cwtl
xchg
jns
inc
enter
or
outsb
dec
fs
mov
add
push
movsb
adc
pop
xchg
xchg
sahf
pop
scas
addr16
dec
cmpsb
pop
xchg
cli
xor
arpl
inc
sbb
xchg
mov
jp
or
cmp
cld
push
xor
jne
push
sbb
inc
inc
popf
dec
cmp
out
xchg
lods
xchg
sti
cmp
push
dec
jecxz
arpl
stc
sub
leave
add
jno
dec
push
fisubrl
sti
cmp
lcall
mov
xor
pop
ljmp
push
daa
inc
adc
idivb
in
scas
cmp
cld
fstpt
push
and
sub
or
in
les
lret
repnz
out
test
jns
aas
rorl
int3
ja
mov
xor
lcall
ss
adc
enter
lret
jg
adc
outsl
fwait
xor
or
addr16
inc
xor
repz
push
adc
adc
in
psadbw
lods
dec
cltd
outsl
xchg
cwtl
xor
sbb
ja
daa
cmpl
sub
cltd
mov
dec
pop
and
jns
sbb
call
xchg
leave
test
test
lods
adc
insb
xchg
inc
cmpsl
imul
aas
xchg
popa
push
xlat
xchg
dec
push
mov
xchg
loop
push
cld
jb
je
imulb
loopne
inc
mov
cld
adc
sbb
push
lock
xchg
js
rclb
inc
or
lods
xchg
mov
lret
xor
pop
sbb
pop
out
xchg
push
es
mov
xor
mov
in
cmp
dec
mov
mov
arpl
mov
movsl
test
ss
push
insb
or
mov
add
adc
repnz
jge
cmp
aaa
or
sahf
sbbb
and
adc
fcoml
xchg
or
or
bound
and
jo
mov
add
push
mov
add
loopne
jnp
pop
daa
inc
stos
hlt
mov
and
nop
mov
js
xchg
je
je
or
arpl
push
leave
popl
imul
cwtl
xor
cmp
ds
push
adc
mov
inc
push
mov
insb
out
xorl
popf
mov
xchg
cmp
inc
xchg
inc
fwait
sbb
icebp
fidivrl
push
pusha
ss
dec
pushf
sub
daa
inc
ret
mov
sub
loopne
inc
rcrl
popa
sti
fisttpll
dec
cmove
and
push
lret
or
aam
push
inc
xlat
pop
cmp
sbb
or
enter
sahf
push
out
pop
arpl
push
loope
lds
inc
loope
add
cmp
flds
inc
nop
aas
fcomi
mov
inc
test
mov
aas
sub
fidivrs
xor
mov
push
pop
xlat
push
mov
push
pop
cmpsl
das
pushl
aam
or
sbb
lret
in
lods
mov
cmp
cli
fwait
cmp
jns
cmp
pop
inc
jns
popa
fwait
leave
scas
testb
ljmp
push
or
dec
xchg
out
sub
mov
test
repz
cmp
and
and
sbb
int3
pop
roll
adc
in
int3
jno
in
inc
xor
lods
stc
dec
jge
cmp
fisubrl
sbb
sar
loope
cmpsb
xchg
ja
rcll
mov
adc
addr16
mov
sbb
cs
fadds
xchg
ret
and
in
or
fsubrl
sub
jecxz
mov
jb
cmp
rol
addb
notb
xchg
ror
mov
mov
inc
bound
aad
aas
cmpsl
aam
xchg
inc
das
inc
int
ss
rorl
js
stc
adc
icebp
and
call
stc
imul
jb
roll
outsl
fxch
xor
ret
inc
cmp
nop
outsb
mov
xchg
xchg
pop
in
xor
out
fidivl
mov
fwait
adc
fcmovnb
aaa
and
insb
mov
aad
lods
lea
inc
mov
push
loope
loopne
aas
jae
scas
mov
dec
mov
jle
roll
mov
test
imul
es
and
push
jl
pusha
mov
xor
in
enter
xlat
popf
adc
imul
pop
pop
jecxz
adc
sub
std
lahf
add
adc
mov
repnz
inc
jle
ret
stos
jg
leave
js
dec
pop
xchg
int
dec
dec
test
mov
xor
ljmp
push
ret
cmpb
fs
repnz
jbe
mov
xor
sbb
cmp
jbe
mov
fidivs
xchg
add
scas
xchg
stos
jnp
xlat
inc
xchg
cmp
iret
shlb
cmpl
ljmp
orl
outsl
push
xchg
test
leave
lods
and
or
xlat
dec
shlb
jae
inc
rep
mov
mov
js
call
adc
cmc
mov
ret
arpl
pop
dec
movsl
push
ret
push
jle
into
mov
mov
bound
rcll
mov
sbb
xchg
sbb
inc
testl
in
into
inc
test
xor
jno
mov
xor
jecxz
dec
cmp
add
cmpsb
in
xchg
xchg
jnp
sar
jle
jle
xchg
clc
adc
mov
inc
mov
jp
inc
insb
cmp
dec
or
js
std
shl
rcl
jne
lret
test
push
add
pushf
jne
sub
int3
inc
idivb
lea
sub
and
sbb
cmp
push
xor
ret
adc
lret
aaa
xor
adc
mov
or
push
ds
inc
xchg
adcl
cmp
dec
movsl
negb
dec
ret
dec
jg
push
rcl
inc
mov
mov
paddusw
add
adc
jbe
xor
xchg
cmp
sbb
mov
xor
dec
sbbl
int3
pusha
cmpsb
and
dec
ret
add
xor
inc
or
rclb
div
xor
xchg
mov
push
pop
or
out
insb
push
cs
inc
jns
push
mov
push
cmp
outsl
std
xchg
adc
mov
fcompl
push
movsl
pop
addb
mov
mov
aad
aad
enter
mov
xchg
out
rcr
and
jbe
loope
jae
scas
xchg
mov
mov
adc
aas
xchg
xchg
adc
and
xchg
pusha
xchg
scas
xchg
cmp
ss
mov
fwait
cwtl
xchg
outsl
iret
mov
push
mov
or
rorl
je
pop
pop
sbb
pop
push
aam
mov
in
sbb
xchg
int3
and
ret
add
inc
dec
stc
lret
mov
dec
adc
je
test
mov
out
in
shll
mov
inc
sub
mov
jmp
jne
or
mov
or
sbb
arpl
addr16
shll
stos
inc
or
notl
mov
repnz
movsb
inc
mov
lahf
data16
jns
pushf
add
inc
dec
scas
or
fstp
or
je
cltd
cwtl
scas
cmpsl
pop
mov
negl
sub
out
jne
loop
or
lcall
mov
fdivrs
mov
enter
mov
jno
scas
cmp
pop
jg
dec
lret
lods
daa
fisttpl
jle
ja
cld
mov
push
mov
mov
into
cmpsl
xor
into
sub
jl
mov
cmp
mov
fidivrl
adc
sub
jg
inc
jns
push
icebp
mov
stos
aam
push
call
dec
jns
insb
int
adc
test
shrl
mov
pminsw
imul
insb
push
sbb
mov
dec
push
nop
pop
sbb
icebp
mov
cmc
push
mov
adc
inc
jg
sbb
jl
mov
sub
cmp
fstpl
adc
xchg
mov
gs
pop
add
inc
cltd
out
testl
sub
add
inc
push
or
push
fwait
pusha
push
je
cld
cmp
pop
xor
rclb
mull
jno
mov
or
test
xchg
in
mov
jp
adc
jb
movb
int
les
add
fstpl
mov
and
jbe
xchg
sbb
aas
inc
aam
lcall
sbb
sbb
sub
jae
in
pop
jecxz
cmp
xchg
fstpl
cmp
je
pop
inc
dec
add
mov
sbb
inc
enter
dec
loop
and
cmc
das
aas
and
mov
inc
sbb
dec
mov
inc
aad
negl
clc
in
cmp
aaa
scas
sub
cmp
popf
mov
and
cld
sbb
push
xchg
jae
pop
nop
hlt
aaa
xchg
ds
or
pop
inc
adc
mov
add
insl
and
push
scas
xchg
icebp
out
loope
add
cmp
mov
adc
fsts
xchg
std
dec
cmp
pop
mov
sbb
daa
xor
pop
movb
sbb
insl
dec
bound
pop
adc
test
inc
imul
aad
pop
movsl
xor
inc
sarl
inc
cmpsb
sbb
subb
adc
or
push
mov
cmp
push
lret
shl
mov
in
jle
xchg
mov
pushf
dec
dec
xchg
scas
inc
lock
mov
scas
xchg
insl
out
jmp
mov
and
or
hlt
es
xchg
dec
cltd
scas
addr16
mov
pop
jne
ja
pop
xlat
add
aam
pop
sbb
test
dec
sub
pusha
outsl
dec
jbe
cmp
sub
cmp
sbb
pushf
mov
dec
push
lret
pop
repnz
js
sbb
in
inc
dec
icebp
in
inc
pop
pop
dec
push
js
xor
mov
pushf
mov
and
popf
mov
hlt
ds
push
inc
dec
popf
jbe
rol
and
xchg
scas
add
mov
nop
mov
and
dec
xorb
hlt
in
ss
adc
inc
dec
call
mov
fwait
add
jb
into
fldenv
sub
pinsrw
mov
in
cmp
scas
mov
jl
inc
pop
outsl
mov
outsb
arpl
lock
jecxz
or
sbb
adc
out
push
dec
hlt
mov
popf
add
ss
pop
cmp
repnz
mov
pop
popa
push
mov
lahf
fdivr
mov
mov
popf
rcl
adc
js
adc
leave
fisttps
cld
lds
and
das
push
mov
sbb
push
hlt
xlat
pop
cmp
mov
xchg
and
fisttps
orl
sbb
dec
out
in
dec
loopne
xor
lock
cmpsb
cli
aad
icebp
inc
add
leave
or
and
cmpsl
hlt
and
fcmove
enter
fidivl
aam
inc
ficomps
addr16
push
push
mov
clc
add
dec
push
and
dec
dec
push
arpl
mov
neg
insl
jp
xchg
mov
sahf
jl
out
fidivrs
jle
jl
out
clc
dec
or
shrb
push
int
pop
out
stc
inc
xchg
xlat
movsl
mov
adc
mov
or
mov
push
jl
popf
movsl
cmp
stos
jb
insb
or
jo
sbb
aas
cmp
inc
pop
cmp
ss
sbb
xchg
pushf
dec
xor
xchg
add
imul
or
clc
sbb
movsb
jge
int3
mov
xor
xchg
mov
inc
xchg
int
push
lcall
sub
fs
call
and
jecxz
ret
inc
test
jle
xchg
lea
test
popa
jb
lods
mov
mov
sub
lock
test
pop
mov
rolb
lock
cmc
or
sub
pop
rcrl
lret
fiaddl
enter
xor
je
lea
jp
pop
in
xchg
add
cltd
and
cmp
dec
pop
sbb
lret
repnz
add
or
lahf
outsl
add
mov
xor
loope
jno
sbb
scas
or
or
push
shlb
cltd
sub
hlt
pop
cmp
mov
mov
mov
jae
fs
lret
push
jb
pop
aam
fstpt
fs
out
mov
mov
enter
movl
mov
mov
xchg
mov
and
ret
add
and
pop
stc
outsl
arpl
int
int3
outsb
mulb
sub
pushf
inc
or
xchg
insb
ss
sub
sub
mov
mov
lds
data16
aad
xor
xor
prefetch
adc
scas
jno
pop
loope
loop
pop
aaa
inc
mov
int3
outsb
fidivl
push
jno
sbb
and
jmp
mov
mov
pcmpeqw
pop
mov
sub
jns
xchg
mulb
pop
mov
cmc
lret
leave
lock
and
out
into
add
mov
les
ret
mov
clc
and
mov
lret
xchg
int3
jb
test
imul
rcll
cwtl
mov
movsl
sub
shlb
and
jbe
inc
adc
fistpl
ret
cmp
jmp
mov
jp
mov
fadds
imul
aas
push
adc
in
outsb
in
cmpsb
inc
rclb
mov
gs
pusha
ss
jnp
repz
adc
aam
hlt
pop
inc
inc
mov
add
in
ret
stos
push
faddl
lds
mov
jae
sbb
iret
data16
js
test
xchg
push
lds
lea
arpl
rcll
pop
and
mov
fcompl
push
roll
sbb
loopne
imul
test
sbb
daa
push
icebp
bnd
mov
in
mov
push
xchg
sbb
xorb
popa
mov
hlt
dec
cmc
jle
repnz
or
rorl
sub
cmp
xor
lcall
fsub
sub
sbb
push
inc
movsb
adc
lock
mov
rclb
fimuls
xor
repnz
in
aam
add
xchg
cmp
mov
xor
fnstsw
sbb
clc
cld
idivl
dec
jo
xor
les
subl
pop
out
loop
dec
add
imul
and
jl
movsb
movsb
dec
sbb
sub
movsl
inc
int
push
sti
jmp
imul
push
hlt
push
mov
jge
cmp
adc
pop
rorb
xchg
imul
inc
pop
mov
mov
outsl
sub
or
sbb
xlat
jo
in
or
jbe
sub
rcl
xchg
jmp
inc
jmp
je
fisubrl
xor
inc
xor
jae
movsb
pop
jns
xor
or
call
jg
add
fwait
in
les
sub
mov
ret
dec
xor
nop
cmp
push
inc
enter
jmp
mov
adc
pop
inc
dec
imul
arpl
ljmp
jnp
adc
cmp
mov
jo
adc
inc
in
leave
cmp
mov
and
imul
cmpsb
jb
or
push
add
mov
imul
roll
xchg
mov
out
and
std
pop
repz
lret
cmpsb
test
adc
xchg
js
and
pop
bound
lret
jge
das
and
nop
call
pop
mov
push
into
imul
push
ja
ror
sbb
orb
in
leave
jg
add
sub
xchg
mov
push
mov
daa
and
pop
mov
inc
and
mov
adc
mov
pop
je
mov
movsb
inc
add
or
lahf
push
fsubrs
push
cmpsl
jg
push
adc
push
fistps
jp
push
and
std
mov
adc
lods
mov
test
dec
adc
push
or
push
push
xchg
cmpb
adc
clc
in
push
es
repnz
ret
leave
pop
xor
mov
imul
pusha
sbb
mov
inc
je
imul
mov
jmp
pop
daa
es
pop
insb
sbb
jge
mov
cmc
xor
into
sti
sbb
cmp
inc
scas
adc
ret
jl
inc
call
xchg
scas
cwtl
dec
mov
lds
push
dec
imul
lds
push
hlt
in
push
jno
mov
push
adc
addr16
add
and
rcl
mov
dec
mov
in
adc
lahf
add
dec
push
stc
mov
mov
jmp
pop
cmp
push
jmp
mov
jmp
shlb
mov
sbb
adc
mov
cmp
loope
pop
pop
int
dec
pop
shr
mov
adc
mov
in
mov
mov
pop
imul
push
mov
mov
cmpsb
popa
out
adc
xor
jl
sti
das
lret
and
mov
inc
mov
add
loopne
or
dec
popa
out
aam
pop
test
or
mov
lret
lahf
addr16
mov
pushf
ror
sbb
and
pop
shl
dec
mov
pop
or
sahf
test
mov
adc
sti
lods
ss
pusha
popa
inc
sub
pop
mov
dec
fs
adc
ljmp
aaa
mov
xchg
lods
push
inc
or
sub
lahf
lret
and
sbbb
sbb
and
jl
fwait
dec
sub
stos
popa
cwtl
testl
pop
mov
test
mov
or
out
cmc
add
dec
je
inc
cmp
sbb
xlat
add
xchg
bound
jecxz
repz
jb
scas
data16
arpl
test
add
push
and
sbb
gs
mov
jl
lods
cmc
dec
imulb
or
int3
test
pop
jp
fistpl
push
test
and
scas
mov
loope
push
inc
mov
push
mov
and
add
pop
orb
scas
xchg
sbb
popf
xchg
fistpll
ret
aam
setg
and
pop
cld
js
jecxz
out
mov
inc
movsb
mov
ja
aaa
movsb
cmp
incl
enter
xchg
fs
leave
jge
mov
js
or
sbb
inc
jno
mov
data16
test
loop
mov
jmp
insl
cwtl
mov
stc
lods
adc
ss
fsts
mov
inc
sub
jle
sub
and
xchg
int3
mov
push
gs
repz
pop
call
sub
enter
dec
inc
mov
pop
or
stos
lahf
pop
mov
cmp
sar
mov
loop
sub
cmpb
mov
pop
test
js
in
lea
xchg
sub
or
inc
insb
lret
xchg
jp
mov
rcll
mov
sub
mov
mov
jae
push
daa
mov
xlat
clc
xor
dec
sub
mov
rorl
fcompl
sti
pop
and
xlat
inc
shrl
out
xchg
cwtl
cwtl
mov
aam
repz
pushf
fsubrs
push
jge
xchg
and
adc
data16
lret
mov
lret
insb
and
test
sub
xchg
jbe
cmp
pop
adc
xchg
mov
dec
loope
fwait
push
jo
sub
pop
mov
jl
negb
sub
fcmovne
push
mov
mov
jmp
ret
or
adc
sub
stos
pop
ljmp
fsts
out
ljmp
test
adc
mov
cmp
lods
hlt
mov
add
jmp
das
rol
mov
add
dec
in
or
test
push
pop
fisttpl
rcrl
data16
test
push
mov
and
ljmp
or
cmc
mov
mov
xorl
cltd
dec
dec
stos
cld
je
shll
push
sbb
std
add
pop
pop
and
pusha
std
in
ret
jnp
mov
sbb
scas
jp
mov
sub
pop
jle
mov
or
sbb
imul
add
stos
daa
push
xchg
stos
cld
imulb
mov
jno
jge
popf
mov
adc
add
jl
cld
pop
xor
mov
mov
scas
push
in
cmc
stc
sub
data16
bound
ret
xchg
aas
sbb
dec
out
stc
add
fs
fs
cmc
xchg
add
push
negb
shlb
shrl
sub
popf
adc
arpl
mov
test
out
aas
repnz
adc
cwtl
fisubrs
lret
push
loope
dec
jns
insb
incl
dec
push
push
mov
xchg
mov
imul
pushf
testl
xor
mov
fs
bound
jle
sub
dec
imul
stos
xlat
shl
lods
test
ret
dec
out
fsubs
int
in
mov
jle
or
jle
pop
das
mov
lret
xor
fs
adc
adc
cmp
push
pusha
sub
sbb
mov
mov
aas
sti
and
push
mov
or
jmp
mov
int3
je
stc
sub
xchg
sbb
arpl
lds
push
pusha
daa
ret
sarb
jp
pop
dec
lods
mov
jns
nop
xor
leave
pusha
push
movsb
cmp
aas
pop
jno
sahf
movsb
ljmp
push
sbb
aas
std
test
or
and
clc
adc
xchg
mov
sbb
pop
cmp
sbb
aaa
jl
outsb
mov
lock
stos
adc
or
cmp
addl
lcall
enter
pop
pushf
rolb
adc
sbb
dec
rcr
jl
sbb
inc
pop
inc
cmpsl
int3
sti
cli
test
inc
mov
or
cmp
sahf
inc
xlat
lahf
adc
loope
les
sbbl
shll
push
push
or
pop
xchg
movsl
sub
lea
push
xlat
xchg
sbb
pop
mov
pop
arpl
add
in
xchg
jecxz
loope
outsl
stos
movsl
hlt
out
shrb
imul
test
adc
in
ret
and
fimull
push
mov
in
mov
cmp
jbe
push
inc
sub
jnp
mov
mov
movsb
mov
pop
jge
xor
das
push
int3
push
cmp
pop
clc
or
xlat
pop
jnp
mov
mov
add
icebp
add
and
ret
or
les
les
pop
pop
sbb
jnp
xor
je
xor
xlat
mov
jbe
cmp
and
ja
lahf
pop
cs
sbb
les
xor
sbb
dec
popf
jg
mov
stos
fildll
test
ucomiss
movsl
xor
seta
mov
fisubs
ret
push
and
imul
lods
sbb
push
subl
arpl
jb
scas
fwait
push
imul
mov
into
aam
test
add
push
jp
out
cmp
mov
mov
in
jmp
mov
jmp
aas
sub
and
idiv
scas
mov
push
jns
adc
lods
xor
xchg
stos
iret
push
aas
pop
dec
inc
pushf
mov
mov
stos
mov
add
daa
insb
sub
pop
mulb
testb
sub
sti
or
cs
in
xchg
mov
fwait
xor
data16
xor
sub
adc
leave
mov
bound
sti
js
pop
pop
xor
mov
test
add
inc
add
ret
ret
dec
jns
das
pop
or
push
mov
lea
adc
ja
leave
push
xorb
lea
mov
fisubs
mov
outsb
fnstenv
pop
ljmp
jno
mov
lret
outsb
cmpsl
mov
dec
movsl
mov
popa
aas
aas
inc
xor
les
jmp
mov
and
or
xor
fcoml
xchg
cmp
mov
dec
clc
fimull
jg
fwait
cli
lret
mov
and
mov
mov
arpl
sarl
enter
pop
mov
cmp
push
mov
rcll
aam
cwtl
sub
inc
movsb
cmc
pushf
fwait
ds
insl
xor
out
rorl
stc
pop
std
rdmsr
mov
scas
mov
aad
cwtl
dec
sub
dec
imul
mov
mov
mov
lcall
inc
sub
loop
pop
xchg
inc
dec
aam
jns
imul
ret
movsl
jnp
add
jnp
subl
pop
mov
push
inc
dec
hlt
mov
les
imul
inc
movsb
andb
dec
add
in
test
imul
xor
repz
mov
movsb
push
decl
lcall
movsb
xorb
dec
in
out
data16
loopne
push
xor
push
int
adc
mov
sub
mov
scas
inc
fst
test
das
aam
push
shrl
imul
cmp
inc
and
sbb
daa
imul
mov
xor
mov
mov
mov
sbb
lods
pushf
rep
cmp
jne
pop
sub
data16
dec
dec
push
mov
cmp
dec
add
stc
jae
and
stos
jns
inc
mov
xchg
cmp
outsl
add
cmp
ds
out
movsl
popa
xchg
jb
test
jb
xor
xor
fcmovne
and
mov
lcall
cmpsl
fimuls
test
test
inc
call
xor
pop
sbb
fildll
out
outsl
mov
test
xchg
repz
fs
or
lcall
pop
les
xchg
cli
jg
gs
adc
push
dec
or
shrb
xchg
jle
aas
rorl
xchg
insl
nop
int3
cmpb
fiaddl
xchg
mov
popf
adc
cmp
push
sub
inc
push
cmp
in
dec
in
and
enter
test
lock
pusha
add
gs
shlb
test
cltd
imul
mov
pushf
inc
pop
daa
lret
cltd
cmp
int3
out
push
cmp
mov
sarb
or
push
jp
and
in
ljmp
add
and
jge
popa
mov
lock
loope
loope
mov
fwait
aad
cwtl
jne
mov
iret
xor
add
shrb
iret
adc
jbe
mov
cmc
pop
je
push
addr16
sbb
adcl
push
enter
and
enter
fisttpll
shrl
imul
jge
xchg
xor
push
add
lcall
dec
iret
insl
icebp
mov
fimuls
dec
mov
and
out
and
xchg
repz
mov
mov
xchg
dec
repz
xor
lahf
out
fisttps
sti
imul
lds
flds
movl
shl
jo
test
sti
insl
je
or
push
mov
push
movsb
ret
jnp
nop
push
add
jo
inc
fnstcw
jae
mov
xor
push
addl
enter
jo
loope
ret
mov
dec
inc
jne
lcall
xlat
clc
fimuls
pop
mov
add
mov
mov
mov
insl
or
jge
inc
inc
fistl
mov
loop
and
scas
test
add
pop
insb
hlt
lret
mov
lret
sbb
and
inc
or
sub
push
ss
outsl
cwtl
xchg
scas
arpl
add
mov
mov
inc
mov
jle
jecxz
mov
fidivs
jmp
inc
cli
ds
shrl
loopne
movsb
shlb
popf
lret
pop
mov
jmp
dec
jl
xchg
xchg
scas
shlb
inc
push
dec
lods
xorl
pop
jmp
cmp
call
lds
std
scas
std
adc
das
mov
or
push
xchg
xlat
sbb
jl
mov
adc
push
mov
shlb
test
or
pusha
or
int3
sub
sbb
popf
jp
sahf
xor
inc
or
xchg
jg
sub
dec
cmp
test
push
in
rcrb
out
fwait
sbb
push
jb
pop
repz
shr
shl
enter
mov
mov
pop
pop
aas
popa
xchg
fstpl
cld
cmp
cmp
jno
mov
sti
ds
lcall
inc
push
sti
ja
int3
mov
test
and
dec
and
sbb
icebp
loop
cmp
jns
jl
icebp
imul
xchg
sbbb
push
xchg
cwtl
repnz
jge
mov
testl
testb
push
sub
sbb
movsb
mov
cmp
out
loop
cmp
sbb
cli
sbb
mov
mov
or
adc
in
push
push
jge
push
jle
pop
sbb
movsb
cmpsb
or
iret
incb
mov
int
inc
sbb
cmp
loope
enter
jnp
sub
push
lret
iret
adc
cs
hlt
jg
sub
push
dec
cli
das
inc
dec
and
scas
loopne
movsl
sub
xchg
insb
popf
cmp
xchg
jo
ret
adc
fcompl
inc
pop
rorb
mov
dec
add
in
leave
lret
inc
lahf
int3
cmpsb
imul
popf
add
sbb
jp
clc
loop
sub
ja
xchg
mov
jle
fnstcw
xor
into
pusha
loope
lea
jge
xor
icebp
aad
cmpl
inc
sahf
mov
test
enter
lods
cmp
pop
or
sbb
int3
int
and
dec
inc
js
js
outsb
loop
aas
test
movsl
jnp
inc
movsb
xor
push
push
aas
stc
je
inc
sub
mov
addl
xor
js
jae
test
jb
cmp
mov
jecxz
pop
dec
stos
cwtl
dec
dec
cmp
sarl
xor
push
mov
cmp
sub
mov
mov
pushf
push
adc
or
bound
insl
mov
ds
adc
push
and
sahf
jne
pop
fcoml
mov
inc
cmp
repnz
insb
push
xchg
push
les
dec
sub
jns
xchg
pusha
inc
sbb
add
data16
or
push
mov
les
movsl
inc
lret
fwait
adc
mov
outsl
arpl
xor
lahf
cmpsl
addr16
push
add
outsl
data16
sbbl
lahf
movsb
loop
lods
sbb
cmp
aas
push
mov
test
mov
test
movsb
xchg
sub
push
dec
dec
adc
rcll
pushf
ret
jmp
fisubrl
mov
rcrl
jg
and
decl
fdivrl
push
xchg
imul
push
sub
push
pop
loopne
sub
add
sbb
push
iret
mov
inc
inc
mov
inc
mov
mov
cmc
mov
pop
lahf
inc
mov
add
daa
lods
lds
cli
cmpsl
add
mov
dec
adc
movsl
sti
test
pushf
sub
nop
jp
mov
sub
cmp
push
jne
mov
pop
jbe
clc
jmp
push
mov
lret
jno
pusha
mov
in
stc
and
and
push
cs
ds
xchg
mov
mov
frstor
pop
dec
jg
pop
imul
stc
loopne
adc
in
sti
xchg
xor
mov
or
push
mov
roll
add
mov
mov
dec
add
and
dec
or
inc
push
sub
inc
mov
adc
cmp
cmp
mov
pop
pop
stos
cli
ret
mov
inc
dec
out
cmpsl
xor
push
xor
jecxz
ret
cmpsl
dec
pushf
mov
aam
and
cmc
cmp
mov
test
pop
push
mov
dec
push
push
inc
inc
call
stos
in
xor
mov
sub
xchg
cmpb
pop
adc
push
push
lds
enter
xlat
mov
add
inc
lock
push
jmp
mov
xor
call
int3
dec
pop
out
mov
dec
shl
ja
sub
test
cmp
mov
imul
add
mov
movsl
mov
inc
pop
push
mov
out
xchg
loopne,pn
aaa
xor
into
lods
stos
mov
insb
js
or
xchg
cld
pop
ss
inc
mov
push
dec
mov
and
sti
push
shll
mov
std
or
cli
fprem1
aas
push
and
pop
jmp
outsl
or
pop
fisubl
ljmp
insl
push
subl
iret
std
push
loopne
sbb
lahf
cld
xchg
inc
jb
daa
shrb
jb
mov
push
pop
mov
pusha
out
sub
ds
fildl
mov
cwtl
call
scas
push
js
cmp
sahf
pop
enter
jne
adc
xlat
adcb
mov
and
xchg
sar
jle
sub
in
and
inc
scas
cltd
ret
pop
push
inc
xor
fsts
fmul
or
mov
aad
mov
aas
aas
daa
jbe
xor
test
push
je
mov
sbb
sub
jge
sbb
incl
adc
sub
pop
mov
cmp
cmp
mov
sti
or
mov
push
xor
lods
aas
insl
mov
cwtl
add
dec
dec
pop
faddl
push
jp
pop
inc
lds
dec
pop
cld
adc
mov
jo
dec
sbb
pop
fcmovne
out
aas
data16
jge
je
pop
sbbb
ss
lcall
mov
adc
sbb
fisttpl
outsb
and
ficomps
icebp
push
dec
sbb
sub
fs
xchg
popa
subb
jge
test
ja
adcb
mov
xor
subb
dec
das
and
sbb
shrl
fisubrl
mov
sbb
cmp
push
cmp
xchg
push
add
add
leave
std
inc
and
mov
jge,pt
jl
dec
popf
or
divb
gs
dec
adc
nop
loop
fdivrl
insl
lods
mov
jg
dec
movsl
or
mov
es
add
inc
inc
jo
pop
pop
addl
push
jne
adc
mov
inc
xor
jo
xor
hlt
in
jne
pop
sub
mov
imul
add
mov
push
sub
mov
dec
cmc
sub
fisttpl
cli
int
fadds
inc
arpl
sub
dec
cmp
into
cld
add
nop
jecxz
int3
sarb
ds
in
test
loopne
xor
not
fcomp
mov
xchg
sti
in
das
mov
push
fsubrp
test
out
lcall
dec
test
loop
push
lahf
sbb
fs
pushf
ja
rolb
imul
ja
jecxz
pushf
push
adc
mov
hlt
push
dec
push
flds
int3
adc
gs
fisubrl
xchg
daa
push
jbe
sahf
sbb
xchg
adc
imul
nop
mov
int
adc
pop
mov
popl
cmp
mov
stos
fwait
xchg
repz
xchg
fucomi
lahf
pop
pop
mov
cmp
subb
xor
jmp
scas
cmpl
adc
call
xchg
test
push
out
inc
cmc
push
leave
lret
inc
lret
mov
insl
adc
inc
sar
xor
js
adc
mulb
push
pop
cwtl
insb
hlt
pop
cmp
aaa
cmp
push
rorl
bound
mull
jl
or
pop
jecxz
out
lock
jmp
in
imul
adc
dec
xchg
cmp
inc
cs
mov
inc
int
mov
and
xchg
enter
pop
decl
dec
cmc
and
ficoms
push
ret
sub
andb
pop
lret
outsb
cwtl
xor
and
pop
aas
daa
inc
adc
jo
movsl
filds
mov
sbb
pop
sub
inc
cmc
jne
inc
inc
iret
or
out
aam
pushf
add
outsl
scas
pop
pop
sbb
add
xor
sub
rol
aad
push
scas
mov
mov
lcall
test
jl
cmp
xor
or
lea
mov
dec
ret
fidivrl
stos
lret
scas
aam
jae
jl
ficoms
lods
inc
outsl
sub
dec
stos
inc
bound
rol
mull
push
mov
add
jecxz
mov
mov
jle
and
je
sbb
std
pop
leave
add
ficompl
xor
and
or
mov
mov
imul
fsts
stos
ja
jle
cmp
jns
or
cmpsb
jl
mov
les
mov
jbe
or
out
arpl
adc
lret
or
inc
lret
sbb
mov
pop
hlt
sub
pop
xor
or
pop
imul
push
lret
es
ret
mov
mov
push
dec
decl
cmp
mov
cmp
es
ja
cmpsl
rolb
sti
jo
pop
jo
outsl
and
movsl
mov
sbb
push
jp
mov
push
mov
jo
lcall
inc
add
or
inc
mov
add
shr
andl
xchg
inc
jmp
rcrl
gs
into
pop
sti
inc
xchg
clc
mov
dec
ret
in
mov
mov
sub
sbb
mov
add
filds
mov
jo
add
dec
push
popf
pop
cmp
mov
insb
adcb
stos
mov
cltd
pop
jle
pop
dec
jp
push
ja
jae
xor
push
jne
hlt
rolb
ret
mov
in
cmpb
push
push
pop
mov
js
daa
into
sbb
inc
inc
idiv
sbb
nop
and
jb
pop
mov
pop
insl
dec
nop
movsl
jmp
adc
and
pop
add
add
incl
mov
pushf
std
repz
mov
inc
and
fisubrl
jecxz
lahf
adc
pop
pop
nop
pop
test
xor
sub
testb
adc
dec
jg
call
lret
cmp
lods
mov
pusha
enter
lcall
sbb
lret
sbb
and
hlt
pop
mov
pop
mov
cmp
mov
insb
shr
idivl
push
mov
std
mov
insl
xor
jmp
cmp
in
pop
xchg
push
cmp
lea
inc
xor
push
push
jae
movsb
stos
in
idiv
push
xchg
cmp
and
repz
cmp
sub
mov
sub
cmp
hlt
jmp
dec
jge
and
incb
cmpsl
jnp
push
lahf
add
push
cld
loope
push
shll
shrl
push
jp
jns
lret
in
sub
push
cs
int3
dec
gs
mov
mov
mov
daa
cmp
mov
out
pop
popf
push
ja
adc
cwtl
push
sahf
sbb
mov
pusha
sbb
dec
ds
aad
rcrl
mov
xor
js
pushf
insb
jge
lret
pusha
xchg
add
cmc
xor
cmpsl
out
rorl
xorl
mov
sbb
dec
cmc
lods
xchg
cmp
jns
fists
sbb
out
dec
rolb
nop
sbb
add
cmp
mov
push
cli
aas
lea
iret
in
sbb
mulb
shll
shl
ja
iret
xchg
hlt
lds
rclb
ss
cs
out
cmc
data16
aam
jmp
fstl
cld
dec
inc
stos
mov
lret
dec
daa
in
frstor
out
repnz
cld
lock
pushf
lock
mov
fnop
xchg
in
xchg
dec
sub
adc
and
push
sti
cmc
add
aas
lods
inc
mov
addr16
scas
push
pop
push
insl
sbb
xor
push
or
stos
pop
xor
daa
sbb
and
sbb
inc
push
std
mov
mov
cmpsb
jle
jns
inc
push
push
mov
in
ja
sub
repnz
push
stos
dec
cmp
pop
push
hlt
fstp
sub
addr16
mov
mov
cmp
popf
and
inc
pop
or
push
and
aad
fs
xchg
xchg
popf
mov
cmpsl
fwait
stos
popf
lock
sub
lcall
pop
pusha
loop
into
or
adc
mov
inc
insb
lcall
and
xor
cwtl
inc
push
push
or
ficomps
sub
and
aaa
mov
mov
shrb
lock
daa
ljmp
push
sub
xor
inc
hlt
push
cmp
dec
pushf
cwtl
sbb
pop
nop
fnstenv
pop
in
insb
fnsave
fsub
popf
adc
mov
or
lret
cli
xorl
add
xor
pop
clc
test
mov
rcrl
aad
lretw
push
inc
sbb
pop
out
inc
ret
jno
dec
mov
cmp
xchg
dec
adc
jmp
mov
jge
test
dec
and
push
add
loope
sub
cld
pop
mov
movsb
sub
mul
int
out
pop
jge
and
lods
pop
fisubs
adc
sub
sub
incb
xorb
jo
jle
mov
test
add
subb
arpl
in
insl
cwtl
js
cmp
fcmovbe
inc
fidivrl
aam
xor
cmp
leave
dec
mov
pop
jl
or
lods
mov
push
mov
or
fnstcw
sub
ljmp
pusha
and
leave
mov
int3
insl
sub
ljmp
inc
pop
or
shrb
fwait
or
into
mulb
inc
cmp
sbb
inc
push
cmc
test
sbb
pop
sbb
mov
leave
pop
cmp
dec
aad
faddp
pop
movsb
push
call
or
pop
stos
mov
sbb
jge
xor
nop
stos
ret
xchg
xchg
ficomps
mov
adc
mov
sbb
fistpl
add
ds
dec
dec
scas
outsl
fwait
pop
pop
in
fs
mov
pop
mov
mov
ds
inc
mov
or
cwtl
sbb
cmp
mov
lcall
test
cmp
push
mov
jecxz
inc
call
scas
jns,pt
or
mov
and
cmp
pop
mov
add
hlt
cmc
add
adc
inc
adc
cmp
sub
iret
test
inc
adc
mov
call
sbb
jmp
and
sbb
cwtl
cltd
or
adc
arpl
je
fistpll
add
iret
inc
pop
cmp
std
cmp
lcall
icebp
aas
dec
jle
adc
jmp
sbb
js
mov
push
fcomps
pop
or
loopne
inc
rorb
jns
enter
outsb
cs
ds
call
imul
out
lods
dec
jp
cmp
and
dec
and
dec
cmp
mov
fnstsw
inc
add
mov
adc
repnz
or
les
sub
push
ss
xlat
fistl
xor
xchg
cwtl
adc
mov
mov
enter
in
push
cmp
dec
ficomps
sbb
jl
lods
lds
xlat
xchg
xor
mov
sub
mov
ffreep
adc
push
mov
jmp
xor
ret
cli
lods
jecxz
insb
mov
mov
pushf
cmp
dec
fistl
xor
dec
jl
inc
mov
out
pusha
aad
sbb
lods
xchg
and
call
fst
cwtl
ror
add
push
and
push
inc
push
inc
push
lea
psubsb
mov
movsb
pop
shl
gs
adc
sub
add
inc
pop
movb
imul
sub
cmp
repnz
inc
inc
or
fyl2x
jp
mov
inc
stos
dec
lods
push
xorb
nop
mov
push
mov
sahf
sbb
mov
jbe
inc
push
les
mov
in
push
mov
jb
into
lret
fistl
jne
movaps
iret
or
jg
mov
inc
in
add
std
pop
cmp
aas
hlt
xchg
pop
inc
fiaddl
loopne
mov
ror
push
ret
bound
js
jns
leave
push
outsb
mov
xor
xlat
cmp
lcall
outsl
insl
ret
dec
adc
loope
xor
fstpl
subl
xchg
mov
cmp
roll
or
add
mov
addr16
inc
dec
roll
pop
mov
loop
mov
jg
jecxz
mov
inc
sub
dec
push
rorl
insl
inc
mov
jge,pt
xor
stc
adc
and
jnp
loope
or
ss
arpl
add
in
and
fsts
jns
scas
test
mov
lds
popf
cmp
sbb
int3
jnp
xorl
fwait
xlat
jl
out
imul
add
pop
rol
loop
mov
lock
sbb
mov
fnstcw
rcrb
mov
mov
pop
mov
add
fld
inc
in
xchg
frstor
ret
mov
sub
pop
sti
inc
rcrl
sub
cwtl
pop
outsb
insb
add
mov
pop
pop
sub
fs
xor
arpl
mov
iret
mov
loop
push
popa
lock
test
push
fidivrl
loopne
cld
mov
sahf
adcl
cmpsl
mov
adc
das
fwait
adc
sub
adc
outsl
inc
in
lret
mov
pop
adc
fdivs
mov
fldenv
pop
aaa
cwtl
addl
pop
and
jns
adc
mov
ds
icebp
sub
cmp
jl
mov
push
sarb
add
shrb
jmp
scas
aaa
imul
int3
lret
add
mov
movsl
sbbb
insl
xchg
mov
insl
jne
and
jmp
clc
jle
filds
or
movsl
push
imulb
xor
les
fsubs
adc
leave
inc
and
lods
cmp
mov
inc
adc
or
call
enter
dec
sahf
sub
test
lret
outsl
and
jbe
dec
adc
fildl
or
adc
stc
stos
and
dec
ffree
xor
std
loop
sub
or
dec
lods
addb
mov
ret
mov
or
insl
cmp
orl
sub
sub
ja
lret
sub
clc
clc
xor
push
inc
inc
xchg
sahf
iret
or
mov
and
inc
popl
nop
repz
rcrb
out
sub
xchg
sbb
fistpll
mov
test
fnsave
xor
aad
adc
sbb
imul
push
mov
jo
inc
mov
imul
xchg
sbb
ret
rclb
adc
dec
cmp
inc
cmpsb
sub
fcmovnu
xor
jge
lret
jnp
pop
jno
or
aam
out
out
jge
inc
hlt
icebp
aad
mov
leave
and
push
out
out
js
mov
push
cmc
shrb
pop
ds
xor
outsb
push
xchg
mov
into
push
stc
mov
ds
rorl
pop
int3
inc
in
sub
add
insl
loop
add
test
nop
pop
ret
lcall
push
js
std
and
pop
adc
mov
test
xchg
lea
nop
je
mov
roll
cmp
cmpsl
aas
addr16
outsb
les
inc
rorl
stos
sbb
test
cmpsb
and
mov
dec
lods
ret
fists
pop
add
mov
out
shrl
and
nop
pusha
es
loope
sbb
js
xor
ret
shrb
cmpl
jae
cmp
xor
xor
lea
movsl
push
dec
or
xor
cltd
push
cmpsb
inc
xchg
cmp
fdivl
mov
in
pop
sub
xorl
adc
and
dec
ret
push
jge
ret
lea
push
add
loope
aaa
ss
cld
mov
and
scas
and
push
test
dec
adc
dec
xchg
cmp
jl
sub
int3
outsb
rcrl
shl
jnp
pop
ret
je
rcll
mov
inc
mov
leave
rol
mov
or
sub
in
fcom
pop
sub
or
movsl
or
and
lods
sbb
dec
rolb
lods
pop
xchg
mov
fistpll
daa
rol
cli
sahf
daa
xchg
xorl
add
insb
dec
mov
fdivrs
fxch
and
pop
mov
xchg
xchg
bound
or
pop
adc
arpl
cmp
nop
sbb
divb
pop
inc
adc
popf
sub
pop
add
in
imul
sbbb
rcrb
mov
shll
imul
fimuls
out
or
fidivrs
pop
mov
sub
sub
movsb
jb
clc
push
call
push
inc
jg
pop
loopne
push
fistps
or
sub
insl
mov
leave
xchg
loop
stos
mov
jnp
adc
xchg
jp
je
jl
mov
repz
fidivrs
pop
inc
pop
pop
push
cmp
cmp
arpl
or
lcall
roll
and
mov
popf
adc
xor
push
fildl
fisttps
out
inc
rorl
jle
mov
fldenv
mov
mov
pop
popf
xchg
cmp
push
adc
jne
inc
dec
jb
outsb
xchg
repnz
mov
jmp
pop
cbtw
dec
xchg
out
and
push
lcall
pusha
nop
inc
cld
out
das
lret
push
test
fwait
xchg
lret
sbb
pop
dec
mov
and
dec
inc
inc
jns
rcrl
xor
das
adc
scas
push
lahf
mov
pop
stos
dec
inc
fstpt
mov
orl
int
bnd
scas
popa
push
nop
inc
xorb
out
icebp
roll
popf
push
lret
rclb
movsl
adcb
fldl
ficompl
test
adc
push
stos
mov
pop
sahf
cmpsb
lret
cmp
pop
push
push
sbb
psubusw
xlat
cmp
pushf
pop
adc
mov
push
pop
cmc
ret
mov
adc
loop
and
and
pop
mulb
sahf
js
sbb
sbb
sbb
cli
rcrb
popa
inc
adc
mov
imul
das
mov
test
cmp
adc
into
dec
pop
mov
pop
rcrb
cld
mov
repnz
cmpsl
dec
mov
mov
add
mov
movsl
sub
sbb
xchg
dec
fbld
movsb
dec
scas
mov
les
cltd
inc
add
and
cmpl
outsb
mov
repz
mov
push
jp
xor
mov
pop
call
push
and
call
dec
es
shl
cmp
adc
arpl
mov
rcr
popf
dec
lds
cmp
in
mov
xor
popf
aam
mov
or
cmpsl
xchg
mov
repz
mov
cwtl
fdivrs
sbb
adc
adc
mov
sbb
xor
jle
jle
inc
mov
sbb
fimull
movb
loop
mov
jecxz
sub
out
ss
mov
add
pushf
shlb
pop
or
pop
xlat
mov
andl
out
xchg
addr16
pop
mov
jo
data16
mov
movsl
xchg
mov
test
in
cmp
mov
pop
icebp
aad
adc
sub
hlt
dec
push
dec
and
test
cmp
movsl
sub
push
mov
popf
jg
adc
xor
jl
std
cli
loope
cmp
lahf
pop
sbb
mov
mov
in
popa
xchg
pop
stos
dec
hlt
aam
in
add
inc
mov
cltd
push
out
ret
jg
and
enter
sbb
xchg
jmp
xor
adc
imul
adc
sub
mov
dec
loop
and
mov
gs
rorb
mov
jbe
and
jp
nop
loopne
insl
les
ss
cld
jmp
cmp
mov
pusha
fstpt
fsubrs
push
push
loopne
jnp
sbb
add
scas
sbb
mov
inc
lahf
cmpsb
mov
out
test
or
outsl
loop
dec
hlt
fbld
repz
repnz
jl
pushf
sub
mov
je
inc
movl
fs
cli
loopne
sti
rcll
push
pop
or
outsb
sbb
sub
mov
out
mov
fstpt
inc
xchg
insl
pop
movsb
outsl
ja
outsb
inc
xor
pop
xor
and
jo
loope
je
loopne
lea
push
dec
push
test
push
jecxz
mov
pop
jl
inc
das
adc
cmp
sub
xchg
xchg
rcll
jge
push
push
ret
leave
nop
pop
mov
loope
ret
fsubrs
imul
mov
lock
mov
test
loope
dec
mov
addr16
mov
js
or
sub
cmovs
lcall
mov
arpl
mov
adc
aaa
sub
xor
fidivrs
inc
mov
lods
xchg
add
in
mov
dec
cs
mov
test
jecxz
xchg
out
lods
repz
clts
mov
adc
and
daa
mov
add
mov
jge
divl
xchg
jno
ljmp
pop
movsb
pop
mov
pop
jp
loop
push
mov
mov
adc
add
iret
lret
lcall
notl
push
test
adc
xor
inc
iretw
lahf
popl
scas
je
push
sub
xchg
dec
push
lcall
call
addb
in
xchg
sti
sbb
pop
mov
mov
or
ss
ret
lods
add
pop
xchg
cmpsb
xchg
es
cltd
cld
lea
or
or
xor
cmpsl
fs
insb
jle
push
xchg
add
shl
nop
adc
rorb
dec
mov
jae
lock
dec
xchg
aas
add
push
mov
hlt
das
push
pop
cmc
leave
ds
fldcw
fdivrl
ja
cmp
and
pushf
push
sub
addr16
xor
mov
jno
xor
lret
ret
inc
or
out
enter
mov
push
jge
mov
pop
pop
mov
push
mov
inc
loopne
fiaddl
mov
ret
popa
jno
fisubs
sub
pop
mov
mov
cmp
cmp
stos
lods
jmp
fnstcw
call
pop
cmpsl
insb
inc
mov
push
add
imul
ret
in
push
out
scas
or
mov
xchg
sbb
fdivr
and
sub
cmpl
cmpsb
pop
sbb
xor
pop
push
fldl2e
dec
push
popf
sbb
cmp
cld
lods
arpl
push
cmpsb
fisubrs
sub
sbb
cmp
fsubrs
inc
sub
push
xor
push
push
cmp
add
loope
lret
mov
rorb
aad
jb
pop
or
jns
cs
andl
lahf
addr16
loop,pn
call
stos
nop
and
fistl
cmpsb
and
or
insb
add
pop
or
std
andb
sbb
push
gs
ss
pop
shrl
sub
mov
leave
adc
mov
pop
shl
cmp
ds
and
pop
jl
cmpsl
loope
add
lcall
ret
dec
notb
adc
in
and
sub
addr16
ret
add
xor
rolb
movsb
test
pop
jbe
adc
inc
ss
rorb
sbb
les
mov
ficomps
lret
inc
sbb
push
fcmovnu
out
adcl
adc
dec
cmp
inc
sub
inc
sbb
shrl
fwait
sub
test
mov
call
ds
aas
cmp
mov
push
rcrb
loopne
nop
aam
pusha
mov
pushf
inc
jne
mov
add
imull
popa
imul
dec
and
cld
lock
push
lods
rolb
scas
or
jp
inc
rcrl
cmp
ret
push
ffreep
xchg
push
daa
and
xor
out
lods
inc
jmp
sahf
into
jbe
inc
es
jg
jp
xor
divb
icebp
insb
sub
stos
sub
test
xor
inc
cmp
sbb
mov
nop
dec
rcrb
or
adc
xor
push
cmp
lock
mov
and
fistl
push
mov
inc
fadds
add
jmp
rclb
pop
fdivrp
cltd
sbb
cs
lods
jbe
pusha
outsb
lret
xor
xor
test
xchg
ds
xchg
test
js
pushf
sub
lret
std
loopne
loop
stos
das
ljmp
inc
inc
mov
push
stc
xlat
pop
mov
xchg
lcall
inc
and
mov
push
out
js
push
sbb
mov
scas
int3
lahf
inc
pusha
cmp
imul
neg
cmp
js
and
push
jp
jmp
inc
test
mov
stos
jle
xor
mov
inc
dec
fcmovbe
sub
lahf
sbb
jno
movsl
and
mov
add
fldcw
rcrl
cmp
mov
and
xlat
cmp
enter
push
jbe
pop
sbb
les
or
sbb
inc
ficoml
cmp
mov
push
xchg
fstpt
data16
xorl
pop
into
aam
and
sbb
add
test
aas
dec
xchg
mov
loop
addr16
pop
pop
inc
aas
iret
mov
sub
shl
lea
enter
adc
push
or
mov
sbb
ret
lcall
dec
fstpl
lretw
fstl
fmuls
mov
jnp
add
xchg
mov
hlt
fbld
and
adcb
enter
inc
lcall
jo
push
lds
mov
lods
cmpsb
leave
inc
lods
mov
xchg
xor
ret
fwait
mov
lods
stos
out
sti
lea
cmp
lds
clc
mov
lods
adc
cmp
sbb
inc
sahf
sbb
pop
imul
stos
or
and
pop
inc
clc
adcl
test
pop
lret
adc
pop
fdivl
js
call
dec
mov
fdivrl
xor
adc
fwait
fs
mov
mov
and
mov
out
dec
mov
rcrb
push
aam
popa
mov
adc
nop
repnz
pushf
adc
jle
filds
pop
jo
aam
inc
jge
dec
popa
dec
pushf
arpl
int3
inc
popa
test
jmp
push
push
in
cmpsl
jle
fisttpl
mov
push
sbb
aam
cmp
adc
loope
fimull
pop
push
add
pop
cmpsb
dec
inc
ljmp
icebp
inc
push
lods
inc
popa
mov
leave
std
dec
repnz
pushf
int3
cmpsl
jle
fldt
enter
sbb
aam
cmp
adc
cmc
pop
adc
ret
movl
es
rcrb
cmp
repnz
lds
push
cmpl
sti
push
cmc
xchg
shll
arpl
mov
and
rolb
xor
push
ror
add
jge
rorl
lahf
cli
movsl
ljmp
sub
add
mov
jg
dec
and
leave
dec
fsubrp
push
lret
in
addr16
repz
push
dec
xlat
ret
fisubl
mov
inc
ret
and
lea
stos
pop
xlat
pop
mov
iret
xchg
mov
movsb
jmp
popf
repz
sub
mov
mov
lods
movsl
xchg
xchg
nop
push
loop
pushf
mov
fnsave
pop
cmp
lea
adc
sbb
xchg
or
out
and
jmp
cmpsl
push
call
jnp
movsb
cmpb
jecxz
mov
gs
mov
pop
mov
shll
inc
paddd
arpl
or
cs
mov
dec
ret
sbb
sbb
stos
in
ljmp
mov
xchg
inc
lea
ja
add
or
les
mov
cltd
ror
dec
mov
mov
bound
fiaddl
and
arpl
jnp
mov
sub
cmc
mov
lods
test
and
xchg
push
sub
enter
movsl
and
mov
xor
xchg
ret
aaa
jge
xor
sahf
mov
es
mov
mov
lret
and
fistps
inc
xlat
nop
push
sahf
push
jmp
and
adc
push
push
fldenv
xchg
and
jp
xchg
mov
dec
cwtl
shl
data16
jge
imul
lods
push
and
pop
test
iret
push
daa
std
popa
lret
push
es
test
std
fcom
imul
fidivrl
sub
aam
jle
shl
lods
mov
icebp
dec
cmp
mov
lahf
sarb
mov
ret
mov
dec
rcr
xorl
sbb
pusha
movsl
add
mov
scas
test
outsl
lret
mov
fstpl
inc
push
lret
mov
xchg
fistpll
adc
sbb
out
fcmovnu
inc
cmp
dec
sti
int
mov
in
mov
sbb
outsb
mov
adc
cmp
sbb
mov
dec
shl
dec
inc
loop
cmp
jo
nop
sub
pushf
jecxz
sti
lods
jle
hlt
cltd
nop
cmc
roll
imul
jecxz
push
loopne
stc
and
popa
mov
sub
loope
loope
xchg
mov
push
sti
push
and
fadds
pop
or
cmp
jo
fnstenv
mov
sub
ljmp
pop
sbb
movsl
cmp
mov
and
rcrb
cltd
lahf
dec
lahf
xchg
mov
cmpsl
mov
in
shll
dec
inc
pusha
andb
mov
test
aas
sbb
jmp
pop
fidivrs
fcmovne
cmp
fcoml
cs
dec
out
nop
nop
mov
test
loope
daa
stos
and
inc
popa
mov
jg,pn
test
pop
pop
xchg
scas
outsb
mov
mov
jb
stos
mov
jns
popa
mov
test
movsb
cmp
leave
stos
jbe
scas
ss
mov
stos
jo
dec
jg
inc
mov
mov
cmpsl
and
sti
mov
mov
into
and
daa
xchg
aas
push
test
ds
jg
je
xor
sbb
ret
jge
imul
push
mov
repnz
xor
push
cmc
dec
pop
sub
orl
sbb
int
aas
sahf
xchg
sub
addb
jb
out
dec
pop
ret
pop
adc
or
inc
mov
mov
sbb
mov
lret
mov
mov
in
and
ror
sbb
xchg
test
mov
mov
dec
add
int3
adc
orl
or
sbb
inc
fwait
das
lds
int3
or
pop
inc
shr
add
stos
out
dec
cmpsb
sub
movsl
or
rorb
jne
imul
iret
fldenv
inc
push
outsl
shrl
test
in
jne
and
bound
mov
in
sbb
aas
cmp
cltd
insb
and
out
sbb
adc
and
and
mov
mov
outsl
inc
mov
mov
or
test
enter
mov
or
pop
xor
leave
ret
out
xor
test
in
out
in
adc
rcrl
aaa
fldenv
cmp
add
or
cwtl
loopne
sub
shlb
cmp
repz
imul
mov
pop
sub
jb
ret
pop
and
enter
and
mov
push
cmp
out
cli
in
inc
test
addr16
add
andb
popa
jne
xchg
aam
inc
and
cmp
sarb
inc
imul
cltd
or
lock
inc
or
sbb
ret
mov
enter
testb
push
dec
jo
and
leave
ss
aas
cmp
fs
mov
cmp
rcr
nop
loopne
roll
leave
and
pop
pop
ret
or
enter
addr16
mov
xchg
sub
repz
jo
loopne
jle
call
ficompl
pushf
sti
xor
fmuls
imul
and
leave
mov
mov
loopne
add
mov
inc
mov
imul
mov
sub
adc
mov
xchg
dec
ret
xor
and
push
mov
jg
lea
push
mov
mov
xor
mov
nop
fisubrl
inc
add
cld
jmp
xchg
mov
cld
lods
xor
xor
lds
xchg
in
and
and
push
pop
les
jo
add
stos
dec
ret
test
ret
ds
fcomp
fdivl
repz
lret
into
lods
adc
rolb
mov
and
gs
sub
pop
inc
addr16
loope
arpl
dec
dec
rclb
push
test
sbb
sub
jge
jg
or
cmp
adc
std
jge
js
inc
scas
push
aam
sbb
push
jp
les
cmpsb
inc
add
fildll
fwait
push
sub
rolb
or
jg
adc
mov
jae
das
enter
data16
ja
cmp
das
imul
jmp
adc
pop
rcr
sbb
mov
mov
repz
xchg
sub
aas
add
sub
loopne
pop
stos
sub
cmp
ret
out
xchg
mov
lods
insb
dec
push
ret
xlat
push
mov
jle
add
lret
jge
je
jae
mov
out
sub
sbbl
ss
jnp
jnp
and
dec
mov
in
xor
cmp
push
outsl
mov
sbb
std
retw
outsl
test
adc
pop
lret
js
lcall
mov
mov
lds
and
and
inc
sbb
and
pop
out
nop
ss
test
jno
cwtl
mov
mov
mov
out
icebp
in
inc
xchg
mov
jbe
pop
mov
adc
add
sarl
cs
icebp
push
xchg
loop
in
mov
mov
dec
lds
lods
mov
and
dec
sub
scas
push
sbb
pushl
in
jge
push
out
sahf
clc
test
mov
cmp
mov
mov
lea
insb
adc
adc
sub
adc
cwtl
je,pt
and
xor
adc
std
ret
jns
xchg
push
fistps
out
and
popf
pop
aas
cmc
xchg
xchg
enter
stc
mov
insl
leave
fld
xor
dec
fsqrt
sbb
test
jne
cmp
stc
mov
bnd
cmp
stos
dec
dec
sub
outsb
mov
cmp
fsubs
pop
jg
icebp
mov
xchg
sub
xchg
adc
movsl
ljmp
rcl
lret
xlat
pop
dec
cmpsb
lret
mov
push
inc
arpl
xchg
push
mov
and
mov
jnp
iret
push
add
jl
ret
inc
insb
push
inc
movsl
nop
adc
jmp
jmp
jnp
stc
or
sarb
cmpsl
fnstenv
jae
insb
loope
jno
sbb
sbb
xchg
mov
jp
push
in
sbb
mov
lahf
add
lahf
mov
mov
jnp
shrl
loope
lods
jmp
push
sbb
sub
add
mov
xor
jp
sbb
jmp
xchg
pop
dec
mov
lea
sub
inc
ret
xchg
jp
cwtl
lock
mov
mov
adc
roll
xchg
jns
arpl
movsl
in
cli
jns
cmpb
xchg
pop
test
ret
cwtl
ret
sahf
mov
repnz
xor
ja
lds
ret
arpl
scas
in
jp
fdivl
add
sbb
int3
mov
cmp
push
xor
adc
pusha
dec
shl
ja
add
inc
fwait
push
sti
mov
aad
dec
pop
cmc
movsl
mov
sarb
jmp
fldpi
nop
int3
fstps
xchg
outsl
out
sub
mov
cmp
int
pop
xlat
ret
rolb
loope
fldl2e
mov
daa
out
pop
cmp
dec
jmp
sti
xchg
cmp
dec
push
push
mov
cs
or
movsb
cld
fnstenv
bound
ret
adc
or
xchg
jb
push
mov
enter
jg
into
aam
pop
mov
mov
sub
cli
sub
js
jge
in
fcomps
inc
or
mov
pop
and
in
inc
sub
jne
xlat
sar
mov
aad
jp
xchg
insb
add
loopne
pop
jle
stc
outsb
adc
add
mov
cli
push
mov
sub
add
and
ds
and
mov
daa
dec
lret
pop
ret
xchg
clc
lcall
mov
int3
leave
pop
leave
push
pop
add
mov
data16
mov
cmpl
fcoms
add
scas
test
movd
cwtl
and
lret
pop
dec
aam
pop
js
jmp
negl
dec
push
pop
pop
sbb
jne
cmp
rorl
push
mov
push
xchg
xorb
mov
mov
je
cmp
jge
leave
or
mov
ret
movsl
push
shll
rcl
ret
stos
mov
mov
ljmp
mov
adc
mov
jecxz
sbb
add
cmp
ss
aam
and
mov
iret
xor
mov
inc
pop
inc
or
or
push
cmp
popf
xchg
popf
fcompl
fcoms
xchg
js
sub
rcrb
imul
cmp
jmp
xchg
sbb
inc
cs
mov
jne
mov
push
pop
stos
repnz
push
fsubs
pushf
mov
and
loopne
cwtl
out
popf
and
add
pop
pushf
xchg
xchg
pusha
add
nop
cld
and
jne
push
xchg
shlb
test
lahf
ret
or
and
int
push
add
jmp
int3
xlat
mov
icebp
push
inc
cltd
adc
xor
ret
adcb
les
sub
js
mov
pop
push
cmpsl
ss
sub
sbb
mov
cmpsl
pop
jns
pop
das
push
stc
sahf
and
push
loop
in
outsl
push
sbb
aad
add
mov
add
mov
pop
enter
fdivl
loop
mov
rolb
popa
dec
xchg
inc
nop
sti
and
push
orb
xchg
ret
mov
dec
in
imul
mov
repz
jl
add
mov
fwait
enter
adc
stos
cmp
and
or
shrl
pop
inc
mov
dec
sub
hlt
sub
jne
push
jmp
sub
inc
xor
push
add
int3
inc
inc
scas
or
sbb
push
push
int3
mov
push
or
cmp
push
push
aad
mov
inc
push
pop
js
data16
push
out
cmp
inc
test
aaa
mov
or
xchg
fistps
shrb
jge
mov
lret
icebp
repz
mov
or
adc
shll
jecxz
inc
adc
mov
test
cmp
dec
lock
cmp
lods
ss
adc
or
cltd
dec
scas
cmp
mov
sub
pop
dec
pop
pop
pop
lock
int3
mov
sub
push
push
lods
push
mov
add
sbb
pop
add
inc
in
sub
mov
fcomip
lods
stos
fisubrs
mov
mov
fsubrl
inc
xchg
add
mov
test
push
add
push
mov
pushf
inc
mov
aam
fsubrl
inc
scas
xor
sbb
roll
addb
mov
fwait
cmp
add
mov
push
ljmp
std
push
outsl
pop
pop
ja
adc
out
push
pop
add
in
nop
mov
adc
inc
mov
cmp
pushf
inc
in
aad
inc
mov
pop
leave
aaa
repz
jno
push
or
int3
mov
ds
arpl
lock
dec
cwtl
push
ffree
sbb
aas
sub
stos
sub
and
call
cwtl
jmp
xor
mov
outsl
or
inc
inc
ficomps
mov
mov
or
repnz
ss
mov
xchg
loope
xor
mov
jae
add
mov
sbb
jno
mov
xchg
pop
push
loopne
add
adc
cmp
imul
xchg
push
pop
cltd
cld
adc
cmp
or
fs
mov
dec
cmp
add
xchg
jnp
mov
or
lcall
lock
inc
push
cwtl
loopne
mov
stc
xor
lret
adc
adc
mov
test
fwait
dec
xchg
xor
andb
mov
pop
cmpl
mov
mov
imul
push
pop
fnstcw
and
adc
les
dec
imul
xor
stc
pop
dec
pop
dec
sub
push
sti
mov
and
cld
mov
xlat
and
cmpsb
jg
or
xchg
adc
arpl
jp
lret
mov
cmp
lock
sbb
cltd
push
cld
fisubrs
sub
pop
xchg
insl
mov
aad
mov
mov
lahf
and
dec
sti
push
sti
mov
mov
dec
push
call
sbb
sahf
loope
add
lock
pop
mov
xlat
push
loopne
notb
sub
jl
and
aam
mov
push
xor
add
mov
fistpll
mov
fldl2e
add
inc
add
jge
and
ficoms
xor
add
leave
mov
leave
sbb
cmp
inc
mov
push
adc
sti
repnz
faddp
adc
aaa
dec
mov
mov
enter
push
xchg
mov
add
aad
pop
pop
mov
sub
call
sarl
or
call
pop
pop
aaa
sti
pop
dec
aad
jns
ja
mov
inc
push
push
pop
sub
repnz
ja
mov
xor
cmp
mov
or
inc
shll
mov
push
inc
and
je
mov
les
aas
jl
cmc
pop
leave
cmpsl
rorb
leave
inc
dec
mov
jnp
sbb
adc
mov
dec
or
je
in
jle
pop
cmpsb
andl
dec
loope
inc
ss
mov
mov
cltd
push
sbb
push
pop
sbb
cmp
ja
decl
sti
fcomps
mov
dec
or
gs
fnstcw
mov
mov
cmpsl
testb
cmp
bound
nop
ffree
test
inc
sbb
mov
mov
sti
adc
scas
dec
lods
pop
jmp
xorl
pusha
mov
sti
xchg
mov
inc
cmp
mov
xor
mov
aad
jns
pushf
outsb
cmp
push
jge
call
out
out
adc
ds
or
rorl
mov
adc
addb
lds
sti
into
int
mov
iret
int3
enter
mov
roll
mov
fnstenv
cmp
lret
push
cld
mov
mov
sub
inc
scas
sub
mov
and
loop
lret
xor
xchg
ljmp
cld
sub
sub
cli
pop
jno
sub
aas
insl
stos
lahf
sbb
cmp
adc
and
rcrl
ss
hlt
sbb
in
addl
dec
ret
xchg
dec
dec
imul
pop
pop
push
sub
sar
test
iret
pop
scas
mov
fimuls
pop
mov
loopne
sbb
inc
imul
dec
sbb
int3
pop
in
xlat
shrl
hlt
xchg
or
pop
imul
or
mov
dec
aam
and
sbb
adcb
jg
adc
cli
sbb
inc
pop
scas
pop
add
xchg
loopne
mov
push
mov
xor
cmp
mov
inc
mov
imulb
test
int
adc
dec
rcl
loopne
push
inc
es
jecxz
mov
xchg
jo
push
sbb
mov
clc
inc
std
mov
ss
or
xchg
cmp
push
jno
lea
cmp
ljmp
dec
pop
aad
dec
mov
mov
add
in
incl
cli
pop
inc
mov
mov
icebp
insl
mov
ret
idiv
ljmp
loope
out
and
mov
int3
jl
xchg
cmp
shl
cmp
dec
cmc
outsl
jge
fdivl
repz
inc
dec
stos
cmp
js
push
sarb
in
mov
cmpsl
jmp
inc
dec
addr16
pop
jmp
sub
les
or
add
jl
int3
dec
push
rcrb
or
cmpb
rol
add
push
frstor
mov
inc
stc
lds
cmp
lahf
add
test
pop
dec
pusha
jno
pop
pop
dec
jns
out
rolb
lret
decl
lret
add
pushf
imul
int
fnstcw
mov
xchg
and
int3
lret
xlat
xchg
mov
adc
or
sti
stos
pushf
push
test
dec
hlt
arpl
jae
or
scas
pusha
mov
repz
mov
es
inc
loop
push
fimuls
ljmp
mov
push
xchg
stos
cmpl
push
leave
inc
pop
cmp
xor
xchg
mov
fstpl
lods
dec
imul
fmull
fdivrp
jmp
or
pop
and
je
ss
int3
xchg
test
mov
add
sub
cvtps2pi
xor
out
mov
xor
mov
add
jle
jno
or
int
outsl
mov
insb
cld
out
dec
and
sahf
inc
mov
xchg
jge
enter
fsubrs
pop
repnz
rolb
repz
jno
jmp
bound
scas
adc
int
adc
xor
mov
jns
cmp
iret
std
mov
xchg
pop
xor
mov
and
push
inc
insl
pop
orb
out
icebp
or
jmp
push
hlt
inc
jns
pop
sub
and
cmpsb
jecxz
mov
mov
das
ljmp
mov
fs
sub
adc
int3
cmpsb
dec
adc
sarl
dec
insl
adc
mov
and
jno
mov
sbb
push
jge
clc
in
xor
cmp
mov
daa
repnz
push
push
xchg
jbe
ret
sub
arpl
pop
cs
fistpl
or
jb
sub
insb
bound
xchg
loop
pushf
mov
movsb
negl
ficomps
jge
mov
fwait
pusha
je
cmp
aam
stos
jbe
mov
pop
daa
mov
or
cmp
enter
lcall
gs
xorl
jno
imul
in
pop
pushf
mov
cli
hlt
or
mov
jge
cmp
or
loop
jecxz
scas
mov
imul
cld
xor
orb
mov
xchg
stos
imul
fisttps
dec
bound
inc
mov
add
mov
and
jns
pusha
and
enter
int
dec
movsl
enter
ror
xchg
rcrl
mov
cmp
stos
jnp
test
inc
push
ja
or
rorb
pop
outsl
aad
cmp
fdivl
jl
inc
fildl
xchg
es
inc
clc
mov
mov
cmpsb
iret
jbe
pushf
hlt
lret
add
lcall
mov
pop
pop
xlat
dec
stc
hlt
ret
mov
addl
pop
mov
mov
lods
stos
dec
xchg
test
pop
out
enter
or
in
les
mov
outsb
mov
ret
dec
adc
cmp
ret
and
js
adc
xor
mov
cmp
push
movsb
push
adc
loop
pop
sub
or
jns
dec
mov
sub
out
xor
mov
enter
pop
mov
jns
jno
gs
inc
xor
cmp
xchg
ret
hlt
sbb
js
ss
stos
es
pop
iret
movsl
adc
xor
or
cli
or
ja
mov
jge
ljmp
test
xor
shlb
leave
pop
push
jnp
fisttpl
imul
add
out
or
sbb
xor
push
adc
cmpsl
aad
mov
pop
pop
enter
stos
push
cmp
and
jae
pop
pushf
movsb
inc
sarl
pop
icebp
jmp
sbb
sbb
adc
pop
fs
sub
lcall
stc
dec
or
jle
mov
fldl2e
mov
mov
fidivl
loopne
inc
adc
xchg
dec
mov
mov
fnstenv
mov
adc
sub
push
dec
sbb
out
in
mov
jb
mov
outsb
mov
mov
dec
xorb
clc
popf
mov
xchg
repnz
adc
dec
push
push
dec
es
jae
cmp
mov
add
in
dec
sub
mov
push
outsl
mov
or
leave
mov
rcll
test
pop
ret
icebp
nop
rcl
pusha
pusha
arpl
shrl
out
xor
pop
loopne
lret
sbb
push
jle
adc
loop
ljmp
and
fsubl
xor
dec
mov
and
jns
jo,pt
mov
jecxz
mov
test
mov
int3
outsl
ret
sub
jns
loop
into
adc
test
repz
gs
fs
dec
es
out
dec
aas
xlat
add
mov
aam
iret
mov
rcl
test
rclb
test
pushf
sbb
and
fstl
ss
aam
pusha
add
mov
inc
mov
xchg
adc
pop
or
push
sub
xor
into
ss
sub
lahf
int3
cmp
jg
inc
adc
adc
popa
incb
and
xchg
sub
mov
les
jmp
inc
rcrb
jecxz
ret
and
fnstcw
sbb
pushf
jle
cmp
nop
inc
push
lea
leave
loopne
daa
fmul
pop
mov
mov
jno
in
sub
aas
xchg
inc
jb
fisubrl
popf
jmp
cmc
push
cmp
pop
adc
imull
xchg
xor
inc
cmp
mov
push
dec
ja,pn
jg
cmp
cld
dec
add
cmp
les
mov
arpl
jmp
out
fxch
ror
stos
roll
aaa
roll
shrb
xchg
inc
mov
stos
enter
fadd
pushf
in
add
jno
fistpll
rcrl
loope
add
int3
adc
jl
shlb
int
xor
adc
sub
and
pusha
lds
aad
test
shl
lahf
fnstcw
inc
pop
pop
push
les
idivl
mov
add
lret
jp
or
fiadds
aam
cltd
idivl
pop
sarb
push
lds
dec
pop
xchg
test
sahf
loopne
adc
cli
and
mov
inc
mov
pop
mov
jg
insl
inc
adc
pushf
mov
pop
js
xchg
sub
testl
nop
mov
cld
adc
cmp
pop
pop
xor
sbb
cmpsb
popf
push
xchg
cmp
mov
test
rorl
inc
fcomps
leave
inc
sti
sbb
neg
fs
pop
flds
mov
dec
leave
xor
mov
sub
xlat
or
pop
push
push
test
icebp
inc
jl
mov
adc
fbld
movsl
xchg
inc
mov
scas
lret
inc
imul
push
xor
sub
xor
sarb
inc
adcl
stc
lods
cmp
jns
push
adc
jge
lods
mov
or
data16
inc
cltd
loope
push
sbb
movsl
jno
mov
sub
xchg
das
add
mov
push
std
push
and
jb
sub
andb
inc
cmpsb
jmp
cs
aaa
inc
or
sub
inc
push
loope
push
pop
xorb
rcrb
es
sbb
sahf
pusha
cs
mov
arpl
rcr
and
in
push
shrl
fs
sti
jno
lods
mov
hlt
negb
dec
scas
add
ja
ror
sbb
xlat
jg
mov
test
or
mov
mov
inc
stc
cmp
mov
push
inc
fucomi
mov
xor
cmp
mov
ret
imul
sub
cmpb
cmp
add
sbb
mov
pop
mov
cli
cltd
xchg
movsl
adc
insb
and
fstpl
xor
pop
add
ret
xchg
in
sub
pop
bound
hlt
dec
fidivrl
fmuls
ss
mov
jo
dec
add
pop
or
jle
clc
sbb
adc
jnp
sub
push
sbb
fisubrs
mov
jno
cmp
fcmove
xor
push
push
jecxz
scas
jmp
mov
fwait
and
aad
out
mov
fnstcw
mov
push
movsb
lods
std
pop
scas
test
clc
adc
mov
fistps
xor
fcoms
mov
ret
push
sub
mov
dec
inc
pop
or
in
add
rolb
xor
test
sti
jle
push
push
xchg
mov
or
jg
das
push
adc
and
mov
inc
scas
xchg
xchg
mov
and
add
mov
fs
sub
daa
popa
sbbl
adcb
push
pop
loopne
inc
pop
popa
les
or
cmp
fs
xchg
pop
rorl
fstpt
lods
stc
cmp
fbstp
adc
or
iret
popa
rcll
or
ss
js
insl
cltd
iret
movl
jle
sub
pop
or
cld
jns
xchg
push
xchg
mov
cmp
inc
push
pop
sarl
std
add
mov
out
in
pop
mov
cmp
push
or
mov
cmp
movsl
dec
sbbl
jp
fxam
jl
cli
cld
iret
ret
add
les
push
lods
xor
pop
jecxz
stc
int
xor
in
push
mov
mulb
inc
lcall
sbb
mov
mov
inc
movb
lahf
inc
in
add
inc
xor
mov
jl
push
ds
push
ret
xchg
sarl
repz
jle
in
les
ljmp
pop
outsl
jle
inc
add
lret
aas
rol
lods
loopne
or
and
lahf
clc
mov
or
pop
mov
shll
gs
push
mov
frstor
mov
out
dec
inc
cmc
pop
scas
cli
mov
mov
adc
aam
cmp
clc
mov
mov
scas
mov
les
shrb
test
or
ret
dec
movsb
push
jge
ja
loope
cli
jp
cmpl
add
scas
pop
aas
adc
lea
les
std
add
or
into
and
sahf
push
loope
jns
sub
rolb
inc
lea
shlb
inc
mov
sbb
stc
lret
in
lea
and
cmp
push
addr16
pop
mov
mov
inc
mov
adc
or
dec
xlat
and
lods
pop
pop
je
inc
gs
pop
iret
insl
in
movsl
repnz
movb
jae
addr16
pop
xor
imul
sub
xchg
scas
cmp
inc
sti
rorl
dec
lods
dec
jp
orb
mov
es
push
or
in
adc
lret
mov
jmp
in
adc
jg
outsl
jle
mov
xchg
or
pusha
ret
mov
mov
jo
rorl
jno
mov
or
mov
push
xor
dec
mov
rcl
and
js
iret
nop
dec
adc
push
loope
inc
inc
call
ret
fsts
push
adc
arpl
les
or
or
popa
cmp
cmpsl
inc
mov
fbld
ds
sti
sbb
js
cmp
sbb
or
int3
movsb
inc
mov
sub
dec
ljmp
add
jge
not
sbb
pop
dec
mov
fmull
cwtl
in
inc
jle
and
stos
and
stc
fldt
adc
adc
ljmp
mov
push
jne
push
aas
pop
mov
push
push
add
pushf
les
xchg
xchg
cmpsl
push
xor
ljmp
cmp
mov
jecxz
les
gs
mull
mov
sbb
jmp
xor
dec
in
rclb
push
jge
test
adc
les
lea
pop
jo
cwtl
pop
clc
in
mov
pusha
mov
es
pop
cmp
stos
xor
or
xchg
mov
hlt
aas
shll
jo
sahf
pushf
pop
adc
test
nop
fists
add
loopne
and
xchg
xor
popf
ret
cmp
popa
xchg
sub
test
cs
insb
jge
ja
fildl
or
mov
ret
mov
test
jnp
rcll
push
andl
imul
fs
hlt
dec
lea
mov
bound
in
add
jmp
aad
outsl
in
test
dec
addl
jb
sub
push
xor
pop
mov
into
pop
push
shrb
jmp
jns
stos
add
movsl
mov
shrl
mov
into
aam
pop
jecxz
sti
test
leave
subl
push
loopne
jg
and
jl
cmp
jge
jecxz
call
cli
inc
inc
popf
sti
lds
dec
mov
pop
jno
push
cwtl
sub
fadds
inc
jo
xchg
out
inc
or
outsb
sbb
xchg
sbb
pop
lods
jp
notb
fisttpll
mov
adc
scas
in
mov
add
add
adc
or
mov
jle,pt
lods
xor
mov
or
xchg
mov
jbe
mov
scas
mov
enter
push
cmpsb
repnz
or
lods
dec
xor
test
pop
jbe
add
xor
fsubrs
adc
flds
add
or
dec
xchg
rorl
and
sub
into
jecxz
push
fsubrl
inc
shrb
das
or
pushf
mov
daa
add
aaa
int
mov
fldt
jne
jae
mov
cltd
lods
inc
mov
jns
cld
sub
xor
lret
jae
push
inc
pop
jo
imul
loopne
jns
push
dec
outsb
icebp
popa
dec
mov
push
sub
xchg
inc
mull
push
mov
loop
mov
flds
iret
mov
cltd
xor
push
test
fiaddl
and
pusha
test
sub
sbb
jge
add
das
adc
clc
add
cmp
les
cmp
jge
popa
lods
xchg
lret
xchg
enter
ret
xor
mov
jbe
jnp
test
fldcw
push
add
arpl
repz
adcl
mov
in
cmp
call
or
lock
jb
adc
mov
inc
mov
movsl
adc
cs
xchg
cmp
aas
add
rorl
pop
adc
mul
or
xorl
mov
fcoml
mov
xchg
imul
xchg
jno
mov
call
dec
ljmp
loope
frstor
repnz
fsubp
lret
test
sub
mov
out
test
jns
mov
sbb
loopne
push
mov
ficoms
fxch
fbld
dec
lret
xor
lds
sbb
mov
icebp
or
std
fsts
fwait
cwtl
cmp
test
nop
and
rolb
and
jb
push
mov
pop
mov
add
addr16
repz
in
jbe
out
test
fldcw
nop
shll
mov
and
push
fadds
xor
pop
daa
lds
aam
fldl
or
xor
xchg
leave
fisubrs
dec
xchg
dec
mov
push
aas
mov
mov
ljmp
sti
shl
jl
loopew
mov
stos
enter
push
loope
mov
push
push
rcl
cli
pop
pop
cmpsl
sub
fdivp
insb
iret
pop
sbb
inc
int3
mov
mov
push
adc
aas
stc
mov
movsl
jbe
fcomps
xchg
mov
push
jnp
or
and
out
lds
cmp
push
push
cld
int3
and
divl
loopne
cltd
scas
les
mov
lods
pop
outsl
and
jl
pop
inc
mov
int3
jl
aas
jbe
or
rorl
mov
mov
or
jp
and
test
dec
sbb
adc
pop
fbld
test
xchg
or
adc
sahf
popf
cmp
dec
mov
jae
mov
inc
arpl
adc
push
xchg
pushf
test
in
pop
jge
shll
or
aam
in
or
pop
aaa
sbb
es
dec
rcrl
jle
or
sbb
hlt
add
les
inc
mov
pop
pop
loop
sub
das
cmc
or
inc
xchg
push
out
js
mov
cmpsl
movsb
push
mov
adc
mov
int
cltd
loop
jne
imul
out
pop
and
test
jp
sub
aaa
xchg
loope
jnp
jnp
ja
sbb
sub
jmp
pop
push
loopne
sbbl
mov
ljmp
mov
adc
insb
lret
pop
leave
lcall
test
inc
xor
cs
mov
in
mov
inc
shrb
adc
add
mov
cmp
or
addr16
sbb
ret
aad
in
jae
and
bound
faddp
cmpb
jns
adc
es
mov
andl
popa
inc
mov
pop
xchg
int
enter
filds
imul
dec
push
or
sbb
sbb
sub
xchg
adc
xchg
xorb
ret
jno
ror
xor
pushf
xchg
jp
mov
xor
ret
dec
inc
mov
nop
rcll
gs
subl
pusha
cmp
pop
fs
loopne
push
lods
inc
mov
xor
aaa
jge
rcrb
or
jbe
push
xor
xchg
adc
test
arpl
mov
bound
movsb
xchg
and
daa
xchg
adc
jl
outsl
cmp
add
or
enterw
mov
mov
pop
push
mov
jecxz
fistpll
mov
fisubrs
leave
lods
jl
loopne
add
test
imul
push
sub
imul
stos
pop
call
and
sub
xchg
aaa
scas
add
adc
shlb
sbb
inc
xchg
xchg
xchg
xchg
mov
xor
mov
pop
adc
and
into
int3
stos
call
add
xor
mov
add
je
mov
movsb
adc
or
aam
mov
cmp
or
adc
fsubs
mov
repnz
lds
loopne
std
or
lret
fcomip
jne
aam
xor
sub
cwtl
sub
roll
fs
mov
cmp
fs
andl
les
cmp
push
dec
jo
jmp
cmp
les
pop
fsubrl
xlat
enter
pop
cwtl
inc
pushf
shll
mov
jp
ljmp
das
aam
int3
xor
les
insb
int
jae
iret
in
push
mov
inc
xchg
xchg
mov
sbb
sti
test
cld
xchg
in
xor
nop
adc
jb
stc
sub
fsubl
xlat
sbb
lcall
jge
loop
fiaddl
sub
je
pop
cmp
sbb
orl
add
lods
pop
hlt
js
fsubrl
popf
mov
xor
into
fwait
xor
add
out
int
cs
cmp
and
inc
and
lods
pushf
xor
xor
ffree
sti
cli
vcmpsd
sbb
mov
nop
js
or
insl
fidivs
testb
xchg
rorb
fstl
mov
cwtl
inc
repnz
cld
ds
fucomp
std
testl
mov
dec
xchg
mov
jbe
add
aam
mov
pop
int3
mov
sbb
test
xchg
xchg
sub
cltd
mov
add
mov
imull
pop
mov
mov
es
into
add
mov
lods
stc
sbb
ss
daa
pop
scas
mov
cmp
mov
mov
push
filds
scas
sbb
das
dec
xor
sbb
or
into
movsl
popa
outsb
mov
sbb
test
clc
cld
jno
inc
lret
jno
mov
mov
xchg
jmp
inc
push
mov
sti
dec
loop
sar
inc
ret
lock
push
in
aas
mov
bnd
mov
std
jecxz
or
inc
sub
add
xor
pop
add
xlat
dec
call
clc
mov
fldcw
xor
mov
dec
addr16
nop
or
repz
rol
mov
cmc
ficoml
popf
or
loopne
jmp
xor
mov
cmp
pop
add
imul
stc
or
arpl
movsl
xlat
or
loope
inc
lcall
push
lahf
and
mov
out
es
cmp
mov
fistl
mov
insl
scas
adcb
or
mov
dec
mov
sub
push
mov
fwait
lret
pop
pop
add
and
pop
xchg
jl
in
inc
lret
adc
mov
popf
jl
xor
pop
mov
nop
sub
jp
mov
add
aam
jle
add
xchg
push
jmp
add
enter
leave
mov
and
jbe
enter
fsubrs
xchg
adc
loope
mov
jecxz
notl
movhlps
adc
pop
stos
ja
xor
into
mov
sub
testb
adc
lods
rep
jge
lock
daa
sti
test
rorb
push
lcall
or
mov
mov
dec
add
xchg
in
out
jl
and
rorl
mov
filds
jp
ror
fwait
push
lret
test
cmp
loope
pushf
cmp
add
add
dec
sbb
arpl
test
pop
lods
pop
dec
push
push
loop
push
nop
xchg
popf
jae
jecxz
mov
sub
add
rcll
mov
shrb
pusha
xlat
pushf
and
mov
lods
leave
arpl
popf
iret
rcrl
sbb
aad
rcrl
ficomps
push
lds
mov
incl
hlt
inc
xchg
xchg
xchg
repz
test
jge
adc
je
mov
pop
push
add
inc
adc
jnp
leave
sbb
sbb
fabs
pop
jecxz
push
das
or
enter
arpl
mov
lret
test
push
xchg
insb
scas
xchg
add
jp
mov
stos
mov
int
and
pop
add
add
sete
pop
ss
lahf
insl
jns
leave
lcall
adc
sbb
cmc
or
jmp
mov
push
sub
add
push
cmp
pop
fisttps
jecxz
mov
xor
xchg
xor
fisttpl
out
and
mov
cmp
loopne
roll
mov
mov
push
js
pop
test
outsb
sbb
cs
mov
push
sahf
jp
jmp
pop
pop
lock
or
call
jne
mov
xchg
cli
and
sub
and
push
adc
notl
xchg
jp
xor
lds
add
pop
inc
movsb
sub
push
insl
movsl
push
dec
addr16
stos
mov
mov
pop
out
aas
mov
fstpl
lcall
mov
dec
shll
jg
test
or
mov
cmp
mov
jl
rcr
shrl
clc
cmp
cld
pop
insl
imul
repnz
mov
xorb
ja
inc
gs
sub
add
and
popa
aas
in
cli
pop
subl
ror
neg
sub
mov
je
inc
xchg
popl
push
inc
mov
fiadds
enter
push
sar
jmp
mov
cmp
mov
das
and
popl
sub
out
or
mov
dec
cmp
mov
ret
ljmp
pop
jp
mov
sub
sbb
mov
mov
aam
inc
sbb
cmp
xor
lock
push
sti
popa
pop
aam
fwait
stos
sub
jecxz
std
outsb
inc
jo
jo
fists
adcb
test
mov
adc
xor
xlat
pop
add
sbb
xchg
and
nop
cli
inc
sub
jae
clc
out
loopne
lock
push
cmc
clc
pop
dec
jb
pop
fcmovu
lods
mov
pushf
jp
add
js
sub
sbb
into
cmc
cli
dec
andl
push
insl
ss
xchg
stos
call
sbb
push
sarb
rclb
stos
or
loopne
xchg
cmpl
loope
push
cmp
cmpsb
aas
aaa
pop
test
in
dec
and
mov
sub
jo
pop
jle
test
pop
jnp
ss
shr
jl
stos
sti
ja
pop
out
sub
fcomip
add
aaa
sub
push
fldcw
jbe
adc
pop
inc
jno
mov
jmp
inc
mov
lret
ret
inc
outsb
dec
adcl
or
fnstenv
stos
sti
pop
xchg
cmpl
div
enter
loop
rclb
xor
in
stos
je
aas
mov
add
inc
leave
and
inc
icebp
xchg
dec
pop
enter
jmp
mov
negb
push
lds
int
testl
mov
fs
popa
aas
xchg
sbbb
sub
icebp
inc
cmp
inc
cmpsb
scas
and
stos
mov
xchg
cli
jne
xchg
sahf
mov
bound
ret
inc
cmp
mov
les
iret
imul
pop
xchg
pop
fsts
cmpb
jno
ds
outsl
addl
outsb
scas
ja
sub
icebp
lds
sbb
dec
sub
adc
notl
mul
dec
sbb
test
out
pusha
hlt
nop
lock
mov
daa
testl
push
les
xor
leave
loope
adc
xchg
pop
mov
jp
push
cs
mov
mov
fadd
test
test
ds
pop
cmp
shll
rcl
xchg
pop
negb
out
jae
dec
sub
icebp
adc
ret
add
xor
and
shl
and
push
mov
mov
aad
fldl
jg
pop
pushf
aaa
mov
nop
into
fadds
jbe
adc
into
imul
int
stos
imul
xchg
and
test
es
xchg
jmp
std
pop
mov
mov
mov
jb
push
or
shl
pop
aas
mov
xor
aaa
ljmp
inc
add
fcomip
in
shll
sbb
sub
mov
outsl
xchg
insb
push
add
push
ds
ja
call
mov
xor
add
sub
sbb
mov
inc
aad
lret
inc
sub
inc
ljmp
pop
cmovge
dec
mov
jbe
cmpsb
dec
sub
movsb
sbb
sub
inc
lods
or
push
mov
cmp
outsl
sub
clc
out
pop
enter
mov
pop
pop
add
ds
and
mov
jp
enter
mov
movsb
pop
roll
imul
sahf
pop
cmpsb
addb
imul
mov
insb
pop
dec
leave
lods
dec
addr16
loop
lock
dec
int
inc
push
and
add
repz
and
xchg
jg
cmpsl
xchg
mov
jns
test
test
icebp
int
xchg
jge
shrb
xor
sti
sbb
push
rol
jg
and
mov
repz
mov
loop
dec
dec
cmpsl
mov
sub
and
sti
sub
int
sbb
push
test
pop
inc
dec
xchg
add
stc
sti
rcrl
lock
pop
fldt
ja
fimull
xor
pop
mov
je
shlb
and
rolb
push
mov
test
aaa
lods
mov
adc
jmp
jl
push
cltd
les
mov
mov
clc
xor
pop
enter
icebp
inc
movl
xchg
and
lea
push
stos
nop
fs
rclb
add
add
hlt
cli
dec
movsl
pop
cmp
pop
add
dec
push
shl
ss
scas
cmpsl
inc
pop
pop
xchg
popa
push
popa
mov
cmp
jmp
pop
and
mov
xor
lea
add
pop
rcrb
andb
mov
sub
mov
mov
dec
mov
pushf
fsubs
scas
jg
orl
and
mov
add
in
lret
lods
cmpsb
lahf
dec
call
jno
push
jno
mov
add
cbtw
aas
cmp
lret
push
sbb
sbb
sub
or
js
sbb
ljmp
cmp
inc
mov
add
pusha
add
lret
repz
out
lods
mov
shlb
and
cmp
leave
push
fisttps
mov
aas
dec
fildl
into
and
jl
clc
loop
add
mov
mov
mov
mov
pushf
sbbb
add
push
in
dec
mov
push
loope
pop
push
pop
push
test
outsb
rolb
movsb
inc
adc
inc
dec
mov
fisubrl
mov
add
rorb
or
mov
add
sahf
mov
xchg
arpl
repz
mov
mov
adc
stos
mov
pop
mov
and
pop
jle
push
aad
fsubs
xchg
les
es
xchg
jne
jne
jo
clc
js
lea
loopne
fs
cmp
mov
mov
popf
mov
lock
pop
cmp
cwtl
roll
ja
xor
cmp
and
and
pop
or
test
adc
push
jb
xor
jae
jnp
lcall
in
fs
enter
pop
push
cmpsb
mov
add
mov
sub
sti
aas
adc
into
das
pop
xor
pop
in
pushf
repz
fstp
insb
cld
pop
jno
pop
xchg
add
lods
mov
pop
add
xchg
pusha
in
lret
shll
mov
mov
insl
nop
rclb
mov
test
cmp
es
clc
cli
xorl
mov
loope
mov
or
dec
jmp
sub
cmp
mov
aad
mov
shlb
fcomps
stos
push
jnp
add
dec
mov
jne
mov
in
les
cmp
clc
adc
adc
mov
dec
loop
or
and
fisttpll
pop
add
lret
mov
frstor
and
das
iret
rclb
clc
in
mov
popa
into
adc
push
icebp
cs
adc
loop
pop
jns
js
in
push
adc
js
fsin
rcrb
push
cmp
mov
repnz
pop
popa
and
xchg
push
out
xchg
mov
fs
nop
imul
xchg
mov
addr16
and
mov
xor
in
xor
mov
and
mov
rcrb
push
cmp
js
push
adc
call
pop
cmp
cmp
and
pop
stos
je
stc
dec
mov
xor
sub
jle
push
xor
jg
mov
inc
popf
pop
mov
in
mov
jno
cmp
mov
into
sub
jbe
jns
sub
push
and
icebp
stc
adc
sub
cmp
sahf
mov
test
subb
int3
stc
and
sub
mov
icebp
mov
mov
xchg
test
xchg
pop
popf
ja
adc
ljmp
jae
mov
enter
dec
mov
xor
cmp
ljmp
rol
dec
add
dec
lea
push
pop
mov
adc
jp
inc
incb
subl
add
js
ja
imul
inc
cmp
xchg
jb
les
popa
fcoml
ja
loopne
inc
dec
jge
adc
fisubl
xlat
stos
ret
orl
dec
xchg
out
sti
mov
mov
adc
or
and
loop
dec
jl
add
xchg
nop
inc
imul
dec
cmp
sbb
test
push
popa
inc
xor
loopne
enter
enter
cmp
xor
lea
cmpsb
lahf
inc
das
jne
sub
push
push
mov
icebp
inc
sub
xchg
cmp
outsb
rorl
dec
in
nop
loop
ret
loopne
test
push
mov
lods
test
xchg
movsb
in
cmp
inc
and
adc
ret
pop
orl
gs
and
loopne
ret
jns
mov
xor
dec
test
cmpsb
daa
cwtl
cli
xor
xchg
jp
cmp
lret
dec
fxch
je
cmpsl
mov
ret
sub
or
mov
enter
shrl
inc
inc
rcrl
push
es
icebp
pop
dec
into
jmp
push
and
sub
pop
fistps
jp
outsb
enter
fcomps
jg
int
or
adc
or
dec
stc
scas
sub
orb
cmp
sbb
dec
jb
stos
cmp
push
mov
data16
push
fxch
pop
popf
mov
outsb
or
pusha
shrb
pop
pop
lock
es
mov
idivl
out
cmpsl
imul
and
loopne
nop
inc
test
push
pop
jp
loope
inc
enter
and
lods
mov
push
pop
test
ja
sbb
outsl
inc
xchg
jno
jmp
notb
iret
and
mov
adc
push
fucomip
inc
jo
lea
xchg
lret
sub
inc
add
test
cmpsb
sbb
add
rorl
fcmovnb
pushf
mov
dec
jns
xchg
cmp
mov
sub
fldcw
or
xchg
rorl
pop
adc
or
icebp
push
or
mov
cltd
cmp
out
mov
aam
ds
mov
imul
into
adc
jl
ss
rorb
test
leave
or
adcb
outsl
sbb
rcr
andl
jge
xchg
or
mov
jg
mov
add
xor
int3
cmp
popl
mov
ror
mov
test
lret
xchg
stos
repnz
mov
pop
enter
in
sub
xchg
mov
fcomps
mov
bound
xchg
fbstp
xchg
jae
ret
or
and
xchg
jns
pushf
jle
jecxz
lods
movsb
cs
pop
in
xlat
in
fld
aam
pop
stos
fmuls
nop
pop
pop
pop
xchg
push
js
jne
and
jbe
subb
pop
mov
dec
dec
fcompp
xchg
cmpsl
lret
rcr
xchg
push
xchg
sub
or
iret
xchg
cmpsl
cmp
inc
out
jns
aad
adc
add
xchg
mov
fldl
pop
push
pop
inc
jmp
cltd
and
cmpsl
test
subb
mov
pop
mov
push
add
testb
xor
ret
insb
dec
shrb
jae
rclb
repz
std
ds
mov
outsl
pop
iret
adc
loopne
adc
lret
in
pop
xchg
js
xor
insl
pop
test
mov
testb
shl
jle
scas
in
pop
sbb
cmc
pop
rorl
xchg
movsl
stc
jge
sub
fisubrs
inc
lds
add
in
jle
repz
cmp
mov
pushf
in
rcrb
push
xor
arpl
sub
inc
cltd
call
add
lods
test
sub
cli
inc
and
ret
mov
mov
test
sbb
mov
ficoms
add
and
dec
loope
push
sub
fadd
or
mov
add
jmp
repnz
cmpsb
xchg
or
sub
leave
mov
and
mov
fadds
and
mov
stc
mov
aas
dec
mov
lods
addr16
mov
jp
inc
cmp
and
lcall
mov
inc
mov
fs
out
dec
cmpsb
out
push
pop
cmp
mov
cld
jg
add
aad
sbb
std
sarb
mov
xchg
jno
inc
sbb
add
xor
clc
xchg
pop
cs
sbb
sbb
fbstp
lds
cmp
in
pop
jle
cmp
xchg
cmp
sub
jno
fiadds
pop
sub
inc
sub
lahf
cmp
cli
xor
xchg
mov
sub
js
into
jmp
push
mov
ljmp
out
loop
adc
out
mov
sbb
adc
imul
xor
pop
mov
inc
hlt
arpl
sub
mov
add
outsb
bound
xchg
fcoml
jge
in
sahf
push
sarl
mov
push
scas
out
or
jmp
jle
adc
xor
test
sbb
add
in
subl
aam
ret
cmp
xor
ja
ss
sub
cmp
ds
sbb
fldt
pop
subb
lret
push
pop
mov
sbb
bnd
mov
sub
fadds
xlat
sub
or
loop
pop
mov
addr16
lock
movsl
adc
add
pop
shl
or
shlb
fmuls
adc
inc
fnstenv
pop
aad
add
lods
push
in
mov
or
lcall
out
sub
mov
pop
mov
xorb
jnp
lods
xor
add
jle
subl
mov
hlt
jge
xchg
dec
dec
dec
cmpb
sub
push
jg
movsb
addr16
int
adc
leave
mov
add
clc
adc
xchg
test
movsl
in
das
or
sbb
les
cmp
mov
mov
les
pop
dec
jb
aad
adc
mov
add
cmp
inc
ja
xor
sti
enter
sbb
or
sbb
dec
lcall
stos
ljmp
int
inc
mov
push
sti
sub
into
lcall
sub
fsubrs
and
fdivrs
testl
xor
test
sahf
pop
add
jle
enter
pop
loopne
aad
sahf
in
in
imul
pop
xor
test
or
lods
aad
inc
ljmp
cmp
sbbl
inc
pop
inc
fs
call
lret
mov
inc
sub
out
push
lea
fsubrl
adc
loope
mov
inc
xchg
sub
pop
sahf
pop
jno
ret
push
loope
adc
pop
inc
lock
popa
or
cli
ror
rorb
xchg
aad
stc
imul
divb
xchg
adc
dec
xchg
enter
inc
push
dec
in
mov
shrl
or
inc
iret
cwtl
loop
imul
rcrl
insl
cmc
push
test
cltd
ficoms
data16
sbb
xchg
mov
sub
jle
or
xor
and
push
out
stc
push
data16
and
inc
or
into
dec
xchg
pop
ljmp
or
add
test
and
push
pop
into
movsb
push
pop
mov
imul
popf
testl
lods
jnp
lcall
mov
ret
idivl
cmp
insl
cmp
scas
lcall
lret
mov
adc
rcl
pop
jns
inc
xchg
jp
inc
add
sahf
test
pusha
pop
aad
mov
lods
pusha
iret
fnsave
iret
adc
push
sarl
data16
and
push
lods
loope
jo
mov
es
out
sub
push
cmpl
fcom
sub
leave
and
stos
test
andl
dec
adc
aas
add
ret
ret
inc
cmp
test
adc
lret
or
push
and
fs
sub
cmpsl
push
inc
mov
leave
mov
ret
lods
adc
dec
mov
fs
insb
cmpsb
popf
cli
xchg
dec
ror
sbb
adc
lods
jl
cmp
gs
mov
lods
xchg
cltd
sub
ss
or
mov
mov
pop
xchg
insl
lds
xchg
imul
movsl
jecxz
lods
mov
cmp
xor
outsl
mov
inc
nop
cmp
mulb
add
roll
pop
jno
shrb
je
mov
sbb
add
rcrb
sahf
mov
testb
stos
dec
in
sub
stc
out
xor
sub
aam
rep
fidivs
bound
inc
outsb
mov
mov
xchg
cs
pop
fistpl
push
gs
sub
jmp
inc
jg
dec
add
dec
and
pop
push
fs
cmp
pop
and
adc
or
stos
pushw
add
jmp
rolb
sub
dec
dec
or
vcmppd
scas
push
xchg
mov
je
in
imul
push
scas
sub
cli
scas
add
imul
lret
push
push
lret
loope
fmull
data16
dec
cmp
mov
xchg
arpl
xor
daa
cwtl
mov
loop
loopne
rorl
popa
xor
ficoms
pop
pop
lcall
aas
enter
and
inc
ljmp
fbld
inc
out
cmpl
bound
mov
pmaxub
adc
iret
cltd
fcomps
rcrl
dec
loope
mov
lret
mov
jmp
pop
iret
mov
mov
shlb
sarl
add
cmc
shlb
cwtl
xchg
xchg
dec
adc
jmp
cld
mov
stos
jle
sub
icebp
sub
cmpsb
cltd
add
xchg
sub
and
add
lcall
sbb
or
and
sub
lahf
aas
dec
jl
inc
sub
or
lds
fistpll
pop
and
daa
pop
insb
addr16
ss
mov
lds
mov
imul
mov
mov
fld
lret
rclb
and
and
push
and
insl
sub
push
mov
adc
xchg
into
jp
push
xchg
sbb
cltd
filds
jnp
pop
sti
iret
sub
jp
lret
xchg
mov
mov
cltd
aas
cmc
inc
stos
inc
xchg
fnsave
sub
adc
push
cmpb
mov
cmc
inc
cmc
and
inc
mov
add
cmp
scas
imul
lods
and
or
cmpsl
mov
mov
ja
inc
shrl
ja
add
mov
xlat
pop
adc
or
pop
sub
inc
inc
insl
movb
jecxz
inc
test
inc
add
jbe
jne
loop
or
inc
push
fprem1
aaa
adc
pop
and
pusha
subb
xor
or
stos
fsubrs
cwtl
pop
aas
imul
mov
add
ljmp
lock
add
sub
cmp
repz
mov
dec
jle
xchg
clc
or
enter
and
dec
movsl
das
push
xor
or
lds
adc
adc
mov
sbb
test
jno
roll
sub
mov
mov
mov
movsb
push
mov
and
and
sub
add
or
fdivrs
out
enter
xor
jg
stos
int3
inc
into
dec
lods
pusha
std
pusha
lods
mov
cmp
in
xchg
out
dec
fmuls
call
mov
pop
jmp
dec
mov
dec
or
inc
and
cmpsb
jg
mov
pushf
push
mov
loopne
mov
mov
mov
fs
pop
push
inc
in
test
xchg
mov
imul
pop
inc
adc
mov
adc
sbb
scas
xor
cmp
loop
aaa
orb
imul
inc
pop
loope
cmp
outsb
lods
sbb
or
orl
push
push
sub
pushf
ja
jmp
mov
adc
sub
jne
pop
daa
daa
dec
pop
xor
or
and
sub
inc
mov
push
mov
fsubrs
and
pop
sahf
fcmovbe
pop
arpl
add
add
imul
push
hlt
nop
add
addl
int3
fldl
xor
push
cmp
cmp
mov
mov
imul
sbb
cmp
aas
outsl
int3
rcr
iret
dec
and
loope
push
push
fiaddl
jns
sub
sub
mov
aam
in
je
push
or
repz
jo
sub
xchg
cmpsb
and
shll
and
into
push
mov
cmp
cmpsl
data16
hlt
jg
ds
in
jbe
icebp
insb
jo
cmp
rcl
and
insb
or
daa
inc
and
iret
xor
stc
mov
data16
js
iret
mov
test
ss
mov
testb
xor
insb
xchg
mov
je
jle
mov
or
sub
pop
cwtl
movsb
push
rcll
sub
jmp
in
iret
jno
arpl
in
dec
mov
stos
jecxz
mov
leave
daa
push
nop
push
lds
cmp
xor
es
mov
fidivrl
jmp
std
subl
stos
mov
mov
into
fsubl
mov
mov
popl
push
fdivrs
xchg
lret
xchg
rolb
pop
or
xchg
outsb
decl
mov
rolb
test
stos
hlt
fbld
pop
mov
jno
rcr
pop
popa
lea
adc
out
sub
add
movsb
jne
rol
cmpsl
rol
loope
mov
insb
pop
mov
clc
daa
pop
test
sub
sub
cmp
jno
dec
enter
mov
call
pop
pop
cwtl
movsl
das
cmp
pop
cmp
movl
push
xor
xchg
dec
or
dec
popa
mov
rcrb
test
cld
xor
popa
fidivrl
fisubl
in
mov
jmp
sub
add
ja
cmp
mov
add
imul
bnd
sahf
fildl
lahf
push
mov
pop
jl
jbe
stos
cmp
insl
test
dec
sti
fcomps
jns
push
imul
xchg
push
rolb
and
xchg
lods
icebp
test
add
les
dec
pop
aas
rdmsr
mov
dec
cmc
into
sub
in
sbb
adc
outsb
jle
dec
incb
jmp
sbb
fstpt
notb
xor
pop
scas
adc
sub
popfw
stc
push
lahf
roll
in
test
js
arpl
ds
pusha
sub
xchg
mov
les
popa
decl
out
stos
cmp
push
xor
add
mov
ja
fisttpll
pop
outsb
les
push
daa
rcrl
push
jp
bnd
pop
inc
test
fbstp
insb
fs
fnsetpm(287
inc
xor
inc
decb
push
out
shlb
dec
lds
jbe
fdivp
ljmp
nop
sbb
leave
cmp
jl
enterw
or
fadds
mov
xchg
cmp
sub
or
es
xchg
scas
mov
aad
fs
dec
inc
aaa
sub
stos
aam
cs
je
lds
jno
btr
pop
dec
ljmp
sub
sbb
sbb
sub
sub
xor
mov
fstps
aaa
mov
adc
mov
jp
push
jecxz
stc
addr16
cmp
mov
sahf
mov
push
mov
or
sub
repnz
dec
push
fimull
cmp
cmpsb
push
xchg
stos
mov
mov
push
cmp
in
enter
jg
gs
and
push
shrb
movsb
pop
inc
sub
adc
in
popf
aam
mov
pop
in
cmpl
js
jmp
mov
dec
inc
cmp
test
and
or
aaa
mov
and
out
cmpsb
cmpsl
sahf
mov
cs
dec
stc
cmp
test
enter
stc
fwait
shll
repz
pop
scas
in
pop
sub
leave
inc
call
loop
xor
mov
test
or
mov
push
mov
xchg
movsb
sahf
dec
jg
xor
inc
xor
inc
push
xchg
test
adc
sub
cmp
jo
pop
mov
gs
mov
outsl
inc
mov
sbb
jnp
cmp
inc
scas
sub
dec
outsb
addr16
icebp
jle
pop
sbb
jnp
cmp
fadd
adc
cmp
out
fsubl
leave
fdivrs
aas
shll
mov
in
sbb
adc
lea
cmp
xchg
ljmp
push
jecxz
jl
fistl
js
pop
flds
enter
sbb
shll
sbb
xchg
or
jl
dec
movsl
pop
rorb
jns
es
aam
ljmp
fmull
fcmovnu
bnd
jnp
outsl
ds
mov
pusha
roll
testl
mov
mov
mov
push
and
add
jbe
je
or
scas
std
mov
inc
push
and
notl
mov
mov
pusha
enter
jcxz
sbb
fdivs
fcom
xchg
ss
sub
pushf
repnz
push
cmp
mov
mov
aas
mov
addr16
ret
sarb
mov
sub
mov
or
xlat
pushf
loop
sbb
mull
push
packsswb
sub
dec
movsb
repz
lock
cli
sbb
into
std
insl
aas
test
in
movsb
outsb
fwait
roll
jbe
shlb
aam
jbe
add
pop
fists
in
xlat
sub
jl
cli
jne
push
das
mov
sub
cmc
insb
xor
ja
imul
out
scas
sbbl
in
movsl
push
imul
rol
imul
lcall
mov
mov
mov
dec
incb
mov
shll
arpl
adc
cmc
push
cli
add
pop
test
and
jg
cmp
jle
sub
lret
sbb
repz
shrb
sbb
mov
rorl
mov
mov
and
inc
adc
shrl
mov
inc
mov
sbb
cmc
insb
mov
and
arpl
pop
xchg
popl
seto
pop
jp
lods
jno
test
jns
rcl
sub
adc
or
push
cmpsl
cmp
mov
or
aam
sbb
xchg
sub
enter
cmc
jae
cmp
cmpsb
pop
jecxz
push
sub
sub
pop
xor
push
testb
xchg
push
cmp
add
inc
add
jo
bts
aam
ret
call
sbb
pop
pushf
and
mov
jl
jg
mov
std
jnp
loopne
jnp
fisubrl
jae
insb
cld
mov
xchg
call
out
je
and
xchg
mov
ret
clc
cli
fstpl
dec
stos
or
pop
mov
jecxz
mov
in
and
test
fists
movsl
jge
xchg
mov
jo
xchg
testl
mov
xchg
mov
cli
sti
inc
cmp
es
mov
pop
lods
dec
xor
jg
cmp
add
dec
insl
pop
jns
sbb
or
enter
pushf
xchg
gs
xor
sbb
jo
xchg
icebp
loope
shll
and
xlat
jno
lcall
mov
loop
add
out
out
adc
fiadds
fsts
jns
adc
pop
test
and
or
call
jae
pop
orb
jns
xchg
cmp
inc
jg
jp
pop
mov
sti
and
scas
fidivl
pop
ret
push
pusha
push
nop
scas
adcl
mov
fldl
mov
sti
pop
aas
repz
repnz
je
lods
fcmovne
loop
scas
mov
repz
pop
and
lcall
cmp
lock
jae
mov
call
inc
mull
sub
mov
aam
ss
xor
js
leave
sbb
xchg
pop
lret
dec
pop
or
xchg
out
mov
aam
or
jecxz
aaa
arpl
adc
sub
inc
mov
sbb
int
cmp
fstps
pop
daa
pop
or
stc
jecxz
sahf
pop
lock
arpl
cld
pop
inc
ret
mov
pop
xchg
pop
xchg
scas
lret
fsubs
inc
scas
push
mov
pop
fwait
mov
adc
insb
and
xor
lret
mov
add
jo
sub
dec
adc
pop
mov
scas
mov
in
mov
jp
test
lods
andb
push
ficoms
or
frstpm(287
aad
hlt
pop
jecxz
sub
mov
hlt
sbb
jmp
dec
dec
cs
push
xor
adc
int
shlb
mov
or
pop
adc
jp
ficoms
stos
dec
iret
xlat
jnp
adc
inc
ljmp
sti
out
int
sbb
sub
mov
enter
mov
lods
lret
mov
lahf
add
in
lret
imul
and
push
call
xchg
aam
scas
fcompl
inc
adc
cmc
aaa
test
or
or
test
dec
cmpsb
push
cld
dec
add
inc
sub
dec
and
mov
mov
adc
and
cltd
in
cwtl
xchg
or
xchg
and
cmp
fcompl
xchg
pop
daa
xchg
and
mov
jl
rclb
test
jg
mov
dec
cmp
in
sbb
cld
add
rorb
xor
out
insl
mov
ja
lea
out
pusha
xchg
push
leave
adc
mov
xor
xlat
subb
push
js
lret
xor
out
mov
jge
in
jl
jns
cmpsb
repz
cmp
inc
mov
dec
push
sbb
xchg
adc
mov
daa
jmp
in
mov
outsl
cld
cmp
ds
push
cli
sbb
cs
add
loop
mov
testb
push
mov
sub
arpl
in
xchg
and
sub
pusha
pushf
dec
iret
dec
pop
mov
lcall
and
movsb
gs
and
and
ret
cli
mov
add
shr
out
pusha
iret
pop
sub
ret
stos
orb
cmp
inc
and
scas
movl
in
sbb
mov
or
rcrb
pop
and
xor
sub
and
lea
hlt
and
imul
mov
enter
repnz
test
sub
pop
lcall
cmp
adc
inc
fstpl
xor
roll
rorl
mov
pop
lret
jbe
aas
jle
lret
add
xor
adc
push
xor
imul
lret
gs
iret
jno
or
dec
rorb
mov
mov
pshufw
inc
lock
jnp
ret
aas
push
xor
sub
lret
inc
mov
jo
addb
push
lods
adc
daa
ret
pusha
push
add
mov
inc
std
test
push
clc
movsl
lcall
add
outsb
mov
mov
sub
in
jle
sbb
add
shll
xchg
inc
fistpll
das
shrl
xchg
mov
and
and
sub
add
sub
push
dec
rep
mov
mov
mov
je
aam
adc
insb
cmp
out
push
adc
mov
inc
es
lret
or
pusha
jb
std
les
mov
and
std
data16
stc
leave
cmp
and
mov
mov
js
sbb
testb
enter
jne
xchg
mov
mov
mov
das
sbbl
outsl
ds
sub
iret
xor
test
int
jge
push
xchg
xchg
or
xchg
dec
pop
mov
cmp
xchg
stos
inc
add
xor
rolb
fnstsw
inc
adc
and
push
lahf
pop
mov
mov
insb
lods
scas
rcrl
ret
or
cmp
cmp
jae
movsb
ret
dec
in
and
enter
sbb
cmpsl
into
fisubrl
jnp
cmp
mov
rcl
clc
clc
out
cmp
lret
pop
push
sbb
leave
daa
std
rcl
xchg
addr16
xchg
outsl
stos
std
push
cmp
rcr
inc
in
and
push
or
es
cmp
push
mov
dec
cli
inc
stc
push
xor
xchg
or
pop
movsl
add
xchg
sub
dec
cmpsl
xor
cmpsb
sub
pop
enterw
test
and
es
xchg
inc
ret
inc
inc
cwtl
dec
cs
lcall
xor
push
add
pop
adc
dec
int3
lods
dec
int
scas
addr16
adc
in
int3
mov
les
xchg
stc
jb
push
inc
dec
sbb
sub
push
mov
lds
lret
xlat
adc
shrb
mov
mov
insl
mov
add
xchg
fisubrl
lea
inc
xor
dec
push
jb
cs
insl
in
jle
inc
out
lock
out
pop
pushf
or
pop
adc
and
inc
lds
sahf
in
rcl
cmc
push
imul
jns
outsl
imul
lock
mov
push
rcrl
js
pop
lret
nop
inc
cmp
adc
dec
mov
inc
mov
pushf
shlb
jmp
cwtl
xchg
lds
pop
ljmp
xlat
adc
cli
push
loopne
pop
jle
aad
xor
cli
das
sbb
ljmp
xchg
int
jg
dec
lcall
in
mov
outsl
inc
cmp
lds
movsb
les
lea
and
mov
hlt
add
call
aaa
jle
sbb
inc
or
or
xchg
les
inc
inc
bound
dec
xchg
movsb
xor
cmp
aas
pushf
inc
jb
add
cmp
or
pusha
or
jl
jns
jnp
jg
fidivs
loope
inc
nop
subb
push
pop
lds
out
psubusw
lods
pop
pop
pop
orl
pop
mov
pop
xor
es
xchg
cmpsl
daa
xchg
lret
jl,pt
sub
add
mov
gs
inc
mov
push
lea
jp
in
rol
push
inc
dec
std
mov
pop
xchg
sahf
imul
mov
xor
test
sbb
sub
jmp
jle
adc
in
sbb
shlb
js
and
sub
pop
jne
jne
mov
les
pop
xor
cmc
jl
and
cmp
shll
ss
mov
dec
fadds
pushf
cmp
or
jle
mov
fcompl
int
push
inc
lea
cwtl
mov
inc
stc
into
daa
pop
scas
or
lock
inc
cmp
ret
shll
and
loopne
fimull
dec
int
mov
idiv
mov
xchg
fldl
sarl
sub
xchg
test
dec
or
and
ds
xor
sbb
pop
enter
loop
insl
ds
stos
mov
sbb
dec
andb
aam
in
pop
pop
push
enter
enter
lods
push
xor
imul
mov
aas
fsubl
aaa
lahf
mov
sub
jae
xchg
xchg
add
add
sub
or
fldl
jnp
inc
pusha
add
cmp
mov
mov
push
mov
dec
into
setg
add
pop
lea
lock
sti
pop
adc
mov
xor
cmp
cmc
pop
sbb
mov
push
jno
nop
mov
data16
cmp
mov
push
lahf
adc
mov
xchg
push
cmp
fisubrs
adcb
cmp
aaa
xchg
mov
aad
jae
cmp
int
mov
mov
jge
push
cmp
lods
in
test
and
adc
iret
call
cmpsl
mov
jmp
sub
jg
push
andl
add
int3
mov
es
inc
and
jbe
mov
ficompl
pop
jmp
push
dec
inc
fiadds
add
inc
ficoms
movsb
nop
fisubrl
xchg
push
stos
add
popa
or
cmpsl
fdivl
or
cmp
cltd
sbb
xchg
sub
das
jne
push
and
mov
dec
adc
leave
pop
mov
mov
into
loopne
lcall
loope
xor
push
xchg
xchg
ljmp
lock
fs
xchg
push
hlt
jle
mov
mov
xor
pop
lcall
add
arpl
shll
sub
test
inc
inc
movb
and
daa
test
fdivrl
add
sbb
pop
pop
dec
cwtl
mov
arpl
in
push
test
repz
stos
xorb
fisttpl
cmpsl
movsl
popf
push
stos
cmp
xchg
and
in
je
xchg
scas
les
pop
mov
push
stos
sahf
test
sub
aad
mov
sub
xor
mov
imul
jg
dec
outsl
iret
pop
ja
mov
mov
mov
mov
mov
fimuls
adc
pop
clc
sub
mov
int
test
ret
mov
cmp
pop
mulb
mov
mov
rolb
mov
inc
and
jl
inc
pop
or
dec
or
mov
xorl
cmc
sub
xor
ret
adc
sub
vdivss
enter
pop
xlat
add
mov
sahf
jns
lret
sbb
jno
push
leave
mov
mov
cmp
fnstsw
add
xchg
clc
arpl
popa
test
mov
leave
or
cwtl
fidivs
js
add
jle
cmpsb
dec
in
sub
mov
mov
fimull
fisttpll
inc
mov
ds
xchg
gs
jg
fsubr
ss
decb
inc
push
mov
mov
inc
push
pop
mov
sbb
inc
jmp
mov
in
mov
or
or
out
adc
inc
mulb
xchg
sub
das
xor
xor
jle
inc
push
mov
add
mov
nop
clc
fsubrs
add
sub
sbb
movsl
dec
mov
sbb
out
js
pop
mov
das
push
push
mov
and
sub
dec
pop
pop
push
mov
aad
xor
pushf
add
xorb
les
mov
mov
mov
ja
fwait
in
mov
pop
rolb
push
push
daa
dec
cmp
andb
outsl
pop
sbb
mov
and
int3
xchg
cmp
pop
push
cwtl
fdivl
or
push
pop
ja
sbbb
sub
pop
dec
fcmovnu
bound
fs
sub
jb
in
adc
mov
jno
jae
cmpsl
pop
mov
mov
sub
shlb
pop
leave
lahf
popl
mov
sub
into
jecxz
imul
sub
lods
mov
loope
push
repz
pop
cli
mov
push
mov
loope
jmp
inc
sti
push
mov
pop
vcvtss2sd
adc
ret
cmpsl
push
sbb
push
mov
pop
cmp
leave
mov
sub
mov
sub
pop
cmp
jns
xchg
push
jb
dec
push
imul
mov
outsl
lock
add
out
loopne
jmp
mov
xchg
xorb
cmp
fmull
mov
sarl
scas
je
pop
or
movsl
sbb
lcall
inc
sub
fimuls
loope
repnz
xor
ja
pop
lods
add
aaa
cwtl
mov
fbld
aad
test
jns
hlt
xchg
adc
cmc
les
pop
stos
adc
cmp
js
inc
cld
sub
popf
push
mov
add
or
mov
dec
js
mov
mov
lcall
int
jl
sub
int3
mov
sub
fstps
add
cmpl
fisubs
mov
imul
enter
mov
push
clc
rolb
and
adc
lret
lahf
popa
out
xor
or
jl
in
push
inc
dec
inc
jge
xchg
mov
push
sbb
mov
sbb
cmp
popf
mov
push
stos
jge
add
cmp
cli
test
mov
inc
mov
dec
sti
fst
pusha
out
mov
inc
nop
clc
ret
enter
pop
and
bound
inc
mov
out
in
dec
bound
sbb
jg
out
pop
outsl
mov
add
mov
mov
mov
repnz
xchg
mov
or
arpl
cmp
dec
shl
pushf
and
push
xchg
sar
add
clc
cmc
xchg
mov
ja
add
inc
jg
cmp
mov
call
mov
push
dec
call
leave
cltd
aam
dec
lds
sbb
xchg
aas
xor
pop
ret
add
cli
xchg
sub
add
fiaddl
movl
mov
mov
test
fdivrs
mov
dec
loope
xchg
test
sahf
xor
enter
mov
cmp
data16
mov
push
inc
push
fwait
inc
xor
mov
rcll
rol
mov
mov
ds
push
adc
xor
das
cmp
ret
mov
pop
xlat
push
into
cmpsb
data16
rol
mov
fcom
cmc
sbb
xchg
pop
inc
insb
outsl
mov
mov
sub
iret
mov
ja
fisubs
lea
dec
mov
pop
sub
adc
lret
out
cmp
pusha
jge
xor
xor
lods
andb
mov
test
dec
or
sub
and
or
fmulp
pop
mov
adc
js
add
out
shll
mov
sub
sub
cmp
xchg
xor
inc
mov
push
add
enter
jne
orb
jb
mov
mov
sub
lods
lea
test
ljmp
mov
mov
ficoml
jno
jo
aad
mov
jp
push
mov
shlb
sub
pop
xchg
mov
gs
aaa
and
rorl
lret
call
jne,pt
fwait
pop
xor
sbb
inc
loop
mov
or
lods
pop
sbb
mov
and
cltd
sub
lds
inc
pusha
jmp
jo
repz
sbb
sti
or
dec
or
fdivr
dec
fs
add
insb
sbb
imul
jecxz
or
mov
leave
fisttpll
rorb
cwtl
fsubs
dec
lods
inc
dec
sti
mov
push
push
jns,pn
inc
add
jle
jecxz
mov
lods
and
cmp
pop
push
pop
sub
push
hlt
pop
in
mov
cmp
shrb
cmp
or
insb
repnz
and
dec
dec
sbb
mov
dec
sahf
sub
inc
pop
jb
dec
sub
loop
iret
call
fcompl
test
jnp
sub
ret
repnz
sub
mov
jns
fcmovb
dec
sbb
jno
sub
int
inc
aad
mov
adc
repz
inc
daa
cmp
or
xchg
in
jbe
sti
in
mov
std
gs
fadds
inc
mov
mov
jg
std
cltd
test
adc
or
jp
pop
or
out
movsb
sub
pushf
push
sahf
jns
fdiv
icebp
ret
jne
ficoml
sbb
fcomip
jns
sub
mov
dec
test
int
test
push
push
mov
pop
aas
mov
lds
repnz
inc
mov
pop
jnp
pop
dec
mov
rcrl
repnz
sub
push
test
inc
fidivrl
dec
sub
fnsave
roll
cwtl
cmp
nop
in
das
fs
nop
enter
and
imul
cmp
jmp
jae
add
mov
pop
test
rcrl
loopne
inc
jne
test
lea
xchg
pop
mov
mov
xorb
imul
or
inc
jne
xchg
ror
not
repnz
sbb
mov
int
push
push
push
shl
jp
pop
ja
cs
cld
mov
fcmove
arpl
cmp
jne
sub
cmp
lock
stos
stc
fsubrs
jmp
std
call
and
push
lods
repz
jnp
pop
pop
mov
and
bound
inc
mov
xor
and
adc
push
dec
nop
inc
lret
in
shrl
adc
je
cmp
lea
sbb
lods
add
pop
mov
jno
sub
sub
push
jle
test
cmp
rorl
push
or
lcall
mov
int
leave
cltd
ret
xchg
gs
mov
jmp
outsl
iret
sub
ja
sub
dec
fisubrl
add
js
iret
pop
xor
mov
stos
fldenv
test
inc
cmpsb
out
pop
lods
repnz
push
je
xor
mov
jge
pop
outsb
rcrl
mov
lret
jmp
sbb
lret
push
into
sbb
xchg
cmpsb
jecxz
pop
insl
jmp
mov
mov
das
mov
out
sub
mov
inc
das
xor
rorw
xchg
shl
pushl
mov
outsb
repz
data16
mov
cmpsl
sub
jg
daa
cld
ljmp
out
jmp
add
cmp
out
ret
ret
sbb
out
xchg
sub
pop
mov
test
mov
imul
jl
jg
mov
sbb
or
cld
in
add
or
mov
nop
popf
or
mov
add
outsl
mov
fcompl
repz
das
inc
mov
xchg
jmp
mov
andb
flds
pop
inc
cmp
in
jp
data16
cmc
fldcw
loop
pop
cmp
movsl
ret
and
push
imul
cmp
add
lea
inc
push
pop
hlt
int3
inc
jg
sub
and
stc
push
adc
jb
sub
push
mov
dec
cmc
enter
aam
xchg
fcomps
pop
xor
pop
mov
xor
add
push
sbb
cwtl
mov
lret
cmp
cmp
mov
or
cmpsl
cwtl
add
jnp
cmp
cld
mov
and
mov
ror
add
mov
pop
xchg
addr16
mov
xor
mov
pop
imul
mov
mov
loopne
adc
fcmovu
and
cld
push
cmc
add
addr16
pop
rolb
mov
and
and
inc
aam
add
pop
std
sbb
cmpsb
int
inc
inc
out
and
loope
jo
in
xor
dec
cmp
jnp
mul
sub
adc
xchg
cmp
lcall
pop
ja
mov
sahf
in
les
pop
inc
daa
jb
test
push
shll
int
rclb
pop
pop
cmp
in
sub
lods
jae
ret
addb
or
sub
cmp
gs
adc
nop
inc
jnp
pop
xchg
loopne
inc
and
cli
jne
das
ljmp
adc
push
clc
bound
dec
mov
hlt
nop
sub
scas
cmc
test
inc
out
iret
dec
repz
adc
lahf
cmc
out
aad
pop
jge
int3
sub
das
popa
pop
mov
cmp
dec
stc
das
leave
push
xchg
data16
out
pop
enter
cld
aam
mov
sub
aas
jge
test
into
cmpsb
inc
ss
call
inc
ds
adc
lea
inc
cmp
mov
sbb
xor
pop
mov
clc
lcall
rcr
inc
popa
and
mov
repz
nop
and
jno
imul
add
mov
sub
scas
and
xchg
mov
push
mov
das
pop
inc
jg
fcoms
scas
pushf
jl
out
cltd
aam
lret
nop
cld
add
insl
sub
out
xor
and
fisubs
mov
out
mov
js
cmc
pop
adc
and
hlt
int
cmp
pop
inc
and
movsl
mov
push
mov
fwait
add
pop
dec
or
sarb
enter
inc
adc
lret
mov
aad
jecxz
inc
jp
cs
cltd
rcrb
movsl
fsubl
lret
movsb
test
dec
loop
fdivl
push
outsl
cmp
jle
out
fisttpll
xchg
in
or
or
xorl
mov
mov
xchg
dec
dec
adc
dec
jmp
faddl
scas
xorb
icebp
pop
fucomp
mov
mov
vunpckhps
mov
push
lahf
aam
lock
repnz
cmp
stos
adc
fs
movsl
push
stos
cmp
cmp
dec
lahf
enter
mov
xchg
js
aam
cmp
mov
std
loopne
popa
xor
pop
sub
lea
popa
ja
xchg
in
dec
sub
in
dec
aas
inc
fst
jnp
xor
das
js
cmpsl
mov
xchg
popf
inc
jbe
bswap
sbbl
testb
addr16
mov
mov
in
add
cmp
test
pop
sar
icebp
push
in
and
ja,pt
adc
repz
sub
sub
push
stos
cmp
pop
loop
sub
in
mov
xchg
mov
out
fld
popf
inc
fcoms
dec
les
lds
mov
adc
nop
dec
or
js
adc
lock
jl
mov
push
sbb
sub
fwait
xor
enter
bound
pop
rcr
imul
inc
inc
int3
aas
adc
in
rorb
mov
bound
cmpb
mov
add
arpl
pop
or
andb
dec
mov
rorb
push
cwtl
cltd
jne
adc
lods
ja
add
pop
fiaddl
pop
adcb
dec
or
cld
mov
pop
or
push
cltd
aam
scas
mov
loop
lret
xchg
push
fwait
and
jge
iret
adc
mov
insb
cmc
iret
rol
push
stc
cltd
cmp
or
cld
adc
pop
test
xchg
jp
loop
andb
add
das
jp
or
cmp
sub
push
aam
pop
inc
sti
cmpl
jnp
pop
sub
cmpsb
pop
push
stos
rcrl
aam
xchg
call
ja
inc
popf
aas
xchg
lret
pop
adc
mov
lods
or
aam
and
imul
aaa
mov
aas
jae
sti
pop
das
sahf
sahf
test
sbb
in
mov
or
xor
fstps
jp
fwait
rep
jle
popa
dec
inc
mov
lds
and
or
jecxz
test
js
or
gs
andb
lods
mov
xchg
mov
imul
sbb
inc
rclb
jne
xor
push
xor
rcrb
mov
add
hlt
cmp
nop
jecxz
adc
xchg
mov
add
outsb
mov
push
mov
test
gs
jo
lods
int
jl
or
test
call
fsubrs
sub
push
imul
and
cmp
jp
insl
mov
mov
lods
xor
push
rclb
jl
push
lret
xor
inc
rorb
imul
inc
dec
jns
js
call
xchg
inc
jno
sub
popf
sub
ret
movq
cwtl
sub
js
fs
mov
sbb
xchg
sub
add
mov
out
les
pop
call
pusha
movsb
mov
or
pop
cmc
lock
dec
inc
cmp
scas
pop
and
push
lea
and
ret
sub
mov
aaa
rcl
jle
sub
lahf
or
xor
push
or
lods
fsubrl
rcl
cmp
sbb
pop
push
xlat
pop
and
and
roll
inc
loope
sbb
dec
loope
mov
pop
test
pusha
add
xor
and
daa
lret
push
divb
enter
inc
cmp
sub
loop
adc
sub
and
iret
mov
or
add
les
pop
push
mov
sbb
aas
in
pop
mov
mov
hlt
sub
inc
add
cwtl
pusha
jecxz
out
xchg
xchg
data16
cmpsb
leave
add
pop
popa
mov
sbb
mov
push
in
push
jle
mov
jmp
rorb
cmp
test
dec
and
pop
fwait
jmp
mov
sub
lds
loopne
rcl
mov
aad
mov
pop
int
sbbb
cmpsl
cmp
xor
mov
dec
mov
jecxz
adc
clc
xor
or
xchg
dec
inc
or
aaa
sbbl
xor
inc
inc
cmp
dec
int3
pop
sbb
mov
pop
jp
sbb
push
jg
out
nop
inc
fisubrs
pop
inc
das
jl
or
xchg
mov
lea
jae
sti
std
iret
movsl
pop
subb
xchg
push
unpckhps
sahf
call
fistpl
cli
insl
call
or
pop
out
xor
arpl
in
jp
dec
jne
mov
out
je
or
inc
movsb
jnp
fsubl
aam
shr
dec
lock
add
aam
ja
mov
nop
add
insl
xchg
repz
outsb
add
mov
loope
dec
sbb
inc
std
leave
les
loop
and
or
xchg
pop
inc
mov
add
pushf
adc
mov
dec
add
jno
fwait
scas
push
leave
out
jp
push
adc
pop
add
and
ficoms
fisubl
psubsb
test
fwait
ret
add
mov
in
mov
or
das
neg
cld
sti
pop
mov
cmp
xchg
cld
imul
fnstenv
cmpsl
test
icebp
jnp
insb
xchg
jecxz
testl
mov
or
bound
inc
rcrb
scas
sbb
lods
cmpsb
inc
add
mov
loopne
test
xor
in
or
push
mov
mov
test
mov
mov
lds
std
and
jo
ficoms
lods
xchg
arpl
pop
fwait
mov
pop
pop
sahf
mov
out
cwtl
insb
mov
cwtl
cmp
sbb
aas
orl
dec
or
data16
hlt
mov
mov
push
sub
outsl
notl
add
inc
cmp
dec
icebp
mov
inc
cmp
or
push
xchg
mov
push
mov
pop
das
scas
addl
sbb
mov
sub
pop
and
roll
jo
dec
pop
cltd
lods
aas
sub
jno
sahf
push
inc
mov
inc
inc
and
nop
push
fdivp
int
add
xor
dec
or
mov
pop
out
cmpsl
adc
rolb
pop
mov
pop
push
xchg
sbb
aam
mov
jmp
dec
mov
add
sub
jns
jg,pt
mov
int3
gs
mov
fistl
push
fwait
lahf
add
stos
in
inc
fs
cmp
xor
fs
cld
gs
call
adc
inc
jp
push
aas
imul
into
aam
int3
mov
xor
fcmovnu
add
sbb
or
adc
push
imul
mov
inc
xor
lret
jge
dec
pushf
inc
mov
subb
jo
mov
or
lret
ja
jge
aad
adc
lret
add
rcrb
jnp
outsb
pop
js
sahf
popa
dec
mov
mov
sbb
and
subb
and
sbb
insl
mov
inc
popa
mov
pop
push
hlt
add
ret
repnz
out
stos
ret
xor
sbb
xor
shl
fstps
pop
pop
popa
xor
ret
addr16
fdivl
push
xchg
in
lea
mov
and
sbb
lret
lock
mov
repnz
inc
adc
test
xchg
andl
adc
ret
sbb
outsb
loop
int
mov
lret
dec
mov
cmpsb
mov
pop
jecxz
ret
icebp
scas
jne
and
std
cltd
xchg
adc
sar
dec
roll
stc
or
popf
in
addr16
gs
xor
fcom
mov
popf
and
push
mov
cwtl
push
pop
fwait
in
pop
jns
int
xor
pop
or
sub
dec
js
xchg
and
sahf
aas
gs
pop
mov
test
stos
jno
pop
push
lods
cltd
fucomi
lds
pop
es
lds
mov
lret
dec
inc
mov
sti
push
pushf
aas
dec
mov
cli
pop
adc
dec
adc
fldt
mov
sub
adc
mov
rorl
insl
cmpsb
ret
xor
aad
scas
cmc
add
jnp
cmc
push
mov
and
outsb
shl
scas
inc
cmp
testb
test
mov
push
inc
fcmovb
ret
aad
adc
ja
mov
mov
ret
inc
pop
mov
inc
and
xchg
xchg
es
cmp
mov
push
pop
push
ret
scas
and
sbb
mov
inc
enter
lret
std
jecxz
add
jl
fdivs
push
add
in
xchg
dec
ljmp
mov
adc
push
jecxz
rolb
ja
jp
shrb
dec
clc
adc
repz
ret
sbb
xlat
mov
and
or
fwait
cwtl
shlb
out
loop
add
xchg
mov
ljmp
stos
xchg
enter
jp
ss
and
push
and
xor
cld
cmp
xchg
movl
push
inc
cmpsb
xchg
xchg
aaa
out
shr
icebp
popf
jb
enter
and
loopew
mov
cmp
pop
jno
notb
xchg
jo
adc
mov
jns
cmc
fisttpll
jle
mov
cmp
jp
inc
push
mov
jl
mov
fildl
and
lods
int3
mov
fwait
sbb
jecxz
adc
or
xor
cmp
sarb
or
mov
cmp
lods
jge
stos
mov
subl
add
push
mov
mov
cmpb
jl
gs
aas
lcall
and
loop
in
ja
js
out
mov
imul
mov
addb
jmp
inc
add
sub
fdivl
fsin
pushf
mov
dec
push
pushf
clc
jecxz
pop
mov
imul
std
inc
inc
fdivl
mov
lock
addr16
push
sahf
int
add
cmp
mov
pop
clc
jl
xor
xor
adc
and
in
mov
bound
enter
mov
imul
ds
lea
rcrl
mov
cmpsl
test
xor
mov
sub
push
or
je
in
call
gs
int
pop
cwtl
jnp
xchg
push
sbb
popa
aas
fs
movsb
iret
cmp
inc
sahf
ret
mov
pop
ret
fcmovnbe
movsb
out
mov
cmp
mov
inc
fwait
mov
mov
mov
xor
movl
aam
and
bound
cs
stos
in
xchg
add
punpckhwd
cmp
sbb
icebp
movl
mov
imul
lret
jns
bound
movsl
insb
mov
rcll
movsl
sbb
out
add
adc
aas
dec
popa
push
stos
in
adc
and
mull
sarl
pop
std
pushf
or
jle
xchg
or
sub
out
sub
movsb
divl
cmc
mov
test
lds
mov
jge
lcall
jg
dec
outsb
inc
aas
mov
sub
xchg
fmull
mov
sahf
call
lea
int
ficomps
adc
push
je
test
cmp
fimull
pop
push
pop
aaa
dec
mov
jns
lret
test
lahf
jo
xor
xchg
mov
shll
jl
sahf
subl
rcll
lret
push
cld
sub
lock
or
sub
pop
lea
out
cmp
arpl
ret
rcrl
pop
add
jbe
dec
cwtl
or
or
gs
sbb
xchg
jmp
test
fisttpll
stos
xlat
test
ljmp
fcmovnu
test
ljmp
and
loope
mov
fadd
adc
mov
int3
and
push
sub
cltd
inc
and
mov
shrb
sub
sub
push
mov
xchg
js
sbb
inc
sub
push
mov
sub
add
loopne
dec
scas
mov
xor
cmp
jecxz
sub
xor
lret
cmp
add
mov
mov
repz
ret
or
lret
dec
ret
or
inc
nop
orb
sbb
push
scas
xchg
dec
sub
mov
popa
cmpsl
je
xor
pushf
inc
addr16
or
sub
mov
insl
cmc
mov
sahf
sub
dec
xchg
rorb
xchg
push
pop
out
inc
leave
xor
push
sbb
xchg
bound
jge
loopne
inc
enter
jnp
xor
lds
mov
fdivr
cmp
or
scas
pop
loop
fsubrl
int3
imul
lahf
mov
lds
inc
pushf
jmp
pop
repnz
cmp
mov
loopne
lret
jp
movsl
lret
ds
insl
inc
movsl
out
push
pop
push
jno
add
push
sbb
adc
inc
pop
sbb
out
fcompl
xchg
cmpb
test
shlb
dec
popf
mov
sbb
dec
movsb
dec
pusha
adc
jne
adc
cmp
adc
lahf
cmpsb
and
pop
pop
pop
stos
pandn
mov
mov
dec
inc
mov
pop
cmp
sarb
sub
xor
sbb
int
pop
in
daa
xor
jecxz
fcomps
add
mov
aas
cmpsb
loopne
fldl2t
test
mov
bound
xlat
icebp
push
cmpb
aas
jbe
loope
push
xchg
sub
clc
pop
ret
push
jecxz
inc
pop
loope
stos
sub
stc
pop
push
or
cmp
or
pop
out
sarl
push
in
hlt
cmp
cmp
jecxz
or
xchg
sbb
push
inc
adc
fsubp
js
mov
arpl
movsl
mov
mov
xchg
pop
test
jae
sbb
or
cmpsb
dec
add
bound
pop
xchg
out
cmpsb
adc
or
push
int
sbb
rcll
sahf
fcmovnb
aam
aad
xor
aas
movsl
mov
jge
mov
push
xchg
test
mov
lds
mov
addl
popa
ljmp
jl
mov
scas
mov
jnp
and
inc
add
fcom
cli
dec
fmul
iret
stos
mov
sub
imul
and
dec
mov
arpl
jbe
mov
cmp
sti
push
pop
aaa
inc
movl
loope
andnps
xchg
xchg
cmpsl
repz
cmp
mov
repz
mov
jb
nop
push
pop
inc
stos
mull
mov
mulb
jns
and
data16
mov
fwait
shlb
push
test
mov
or
dec
jne
imull
jae
cwtl
mov
es
pop
lock
inc
dec
mov
jns
adc
jecxz
fdivl
mov
cmpsl
mov
dec
loope
and
mov
or
test
test
and
mov
in
add
js
xlat
push
mov
lea
dec
inc
das
cs
enter
mov
outsl
pop
jecxz
adc
cwtl
pop
stos
sbb
dec
mov
pop
cmp
aas
jp
lret
icebp
add
rcrl
xchg
mov
mov
lods
push
adc
lods
push
adc
and
repnz
inc
enter
cld
mov
call
es
and
push
jbe
iret
arpl
lahf
cmp
es
std
adc
mov
out
cmp
and
and
mov
fwait
mov
xchg
lret
outsb
mov
adc
mov
pop
xor
es
cmpsl
jns
enter
stc
mov
in
and
fisttpll
push
lea
mov
movl
dec
into
jnp
lcall
repnz
sub
cmc
aam
mov
popf
xchg
sbb
push
imul
sbb
pushf
mov
cwtl
lods
and
ds
out
xchg
xchg
aad
sub
xor
fidivrl
sbb
pop
mov
in
lods
pop
lock
ret
cmpsb
push
or
das
add
cwtl
jle
testl
jmp
sub
shrl
jmp
push
loopne
andl
and
lcall
xchg
or
sub
inc
pop
mov
fsubs
pop
add
leave
je
cmc
xchg
lret
outsl
in
adc
out
mov
test
dec
lret
enter
int3
jne
sarb
call
lcall
rcr
mov
and
mov
adc
xor
add
out
push
xorl
push
test
insb
in
inc
mov
imul
ret
leave
mov
test
adc
aam
fstl
jmp
pop
mov
push
pop
pop
jle
mov
enter
adc
push
or
lret
js
iret
and
cwtl
mov
xlat
mov
add
dec
push
xor
inc
xorl
mov
int
call
loope
clc
repnz
stc
cmp
mov
daa
mov
mov
rorl
fisubs
fldcw
xchg
nop
cmp
mov
pop
mov
jl
inc
adcb
inc
int3
dec
lods
cltd
or
movsl
inc
out
fmuls
or
das
cmc
gs
icebp
mov
push
sub
ret
push
stc
adc
or
mov
mov
push
push
adc
insl
fwait
or
clc
inc
pusha
push
call
xor
push
addl
stc
icebp
mov
adc
jno
lock
pop
fidivrl
pushf
xchg
out
mov
lods
rolb
les
sub
cld
loop
rclb
jp
cmp
add
cmpsb
sub
ror
ja
insb
repz
push
shl
mov
cltd
cwtl
lds
adc
nop
push
and
push
xor
sti
inc
xchg
ss
cltd
pop
push
dec
icebp
lahf
sbbb
mov
iret
sub
xchg
inc
js
xchg
cmc
iret
imul
dec
fdivrl
jg
add
xchg
push
cltd
popa
inc
jecxz
in
dec
mov
or
sub
adc
and
jge
sahf
jae
shlb
push
mov
les
or
je
xchg
inc
pushf
test
mov
sbb
insb
lods
mov
pop
pop
cmpsb
std
test
cmpsb
push
xchg
adc
leave
push
fsubp
lret
mov
jb
int3
out
pop
adc
push
data16
mov
pop
xchg
int
cwtl
icebp
xor
insl
lock
mov
into
xchg
mov
mov
add
add
jecxz
inc
pushf
xlat
ds
cmp
insl
jg
add
jmp
xor
jbe
call
imul
leave
push
push
push
dec
fwait
push
jae
push
mov
jae
repz
fsts
mov
xlat
add
mov
jg
in
sub
jmp
je
and
xchg
addr16
sub
adc
jp
push
mov
iret
cmp
fsubr
cmp
mov
cmp
int3
xchg
mov
mov
dec
xchg
sbb
shlb
dec
xchg
jle,pn
or
push
nop
and
sahf
inc
andl
repz
xchg
sub
inc
mov
adc
data16
imul
bound
xor
mov
pop
jecxz
xor
aad
iret
mov
jb
das
cli
mov
inc
pop
add
sbb
pusha
loope
xor
mov
jo
add
push
in
subb
adc
rolb
fs
xor
fstl
adc
and
push
push
out
mov
pop
and
out
adc
ficoms
pop
test
inc
mov
les
jle
push
dec
lret
mov
rolb
bound
lea
inc
mov
dec
cld
push
jnp
push
inc
push
xor
lret
sub
jmp
pop
shrb
in
xchg
imul
data16
mov
in
ss
cli
pop
xorb
jno
and
cld
es
ja
jg
addr16
jo
jecxz
rorb
imul
or
xlat
jg
pushf
imul
sub
cli
push
or
pop
test
add
mov
mov
shll
sub
sub
scas
bound
push
and
mov
ljmp
movsb
xor
push
cmovg
sub
fs
inc
and
aaa
insl
mov
sub
mov
je
fld
stos
mov
jle
sarb
outsl
xchg
jg
push
sub
pop
jo
inc
shl
dec
add
cmp
pop
movsl
mov
push
inc
xchg
aad
xor
outsb
jge
hlt
sarl
jecxz
ds
test
mov
mov
mov
shll
cmp
mov
mov
in
xor
frstor
pop
push
pop
rorb
jne
sbb
adc
cmc
sbb
jne
jmp
std
loopne
dec
stos
inc
xchg
adc
out
in
aas
dec
inc
xor
push
fcompl
ss
or
lock
pop
pusha
mov
aad
xchg
cmp
test
aaa
fdivl
mov
cltd
ficoml
cmp
loopne
lock
lock
mov
cmp
int3
mov
inc
mov
sbb
pop
in
pop
ret
sub
add
rcrl
loope
push
push
push
js
fisttpl
lods
mov
lcall
xchg
push
dec
movsb
mov
add
dec
test
out
stos
dec
lds
cmc
int3
inc
sub
je
fcmovb
sbb
nop
inc
adc
subb
pop
xor
sub
xlat
popf
popa
dec
inc
scas
jbe
mov
or
inc
repnz
add
fwait
mov
mov
add
lea
mov
sbb
stos
xor
shlb
les
jb
sub
pop
jnp
pop
fldt
and
and
std
add
mov
mov
xchg
push
jo
pop
pop
je
push
imul
ret
cmp
roll
pop
lret
nop
or
inc
xlat
xchg
rclb
mov
daa
inc
test
test
jl
clc
cmp
adc
mov
dec
xor
mov
mov
mov
jl
cmpsb
dec
sbb
out
int3
inc
sub
shrb
pop
std
xor
cmp
cwtl
cli
imul
stos
mov
dec
sub
inc
pop
mov
xor
inc
repz
mov
movsb
dec
scas
mov
insl
test
popa
icebp
dec
gs
sbb
inc
inc
loopne
rcll
jbe
mov
xor
fldl
je
mov
mov
jmp
push
inc
mov
jnp
dec
push
sub
inc
push
mov
dec
std
pop
mov
scas
mov
stos
push
test
fs
inc
test
pop
in
mov
mov
fdivr
movd
dec
and
push
xor
inc
sbb
dec
xchg
scas
mov
dec
outsb
test
jl
sub
fs
ss
xchg
enter
fsubrl
or
mov
xchg
ret
fmuls
neg
roll
test
push
pop
sub
pop
push
xor
pop
les
lods
jo
cld
ficoml
mov
mov
out
lahf
stos
xchg
filds
in
into
movsb
arpl
lret
fsubrl
cmp
mov
cmp
test
adc
les
mov
push
or
je
dec
sub
cmp
into
fiaddl
cmp
enter
add
daa
stos
adc
lcall
aaa
std
cmc
sub
mov
add
adc
sub
jnp
enter
lods
jg
mov
sbb
jmp
add
mov
xor
lret
into
ljmp
and
add
add
adc
pop
rep
xor
es
push
loop
jnp
adc
xchg
cmpsb
mov
inc
int
xor
scas
mov
mov
bound
into
enter
std
xlat
fstpl
adc
imul
repnz
fildll
fsubrs
or
repz
inc
popa
aas
mov
std
inc
repnz
pushf
cmpsl
pop
jo
sub
dec
stos
sub
lods
push
sub
scas
test
ja
adc
jns
adc
jnp
push
jno
pop
jno
aad
cmp
sbb
sbb
push
add
pop
push
add
stos
outsb
repnz
popa
or
lea
test
into
and
cmp
push
enter
mov
inc
and
out
pop
fcomp
adc
les
or
enter
rolb
enter
jnp
mov
push
enter
mov
inc
and
out
pop
and
adc
push
or
adc
add
cli
enter
jnp
mov
lahf
enter
mov
inc
push
sub
popa
jg
dec
pop
pop
sbb
push
or
sub
adc
cmp
nop
lret
mov
jp
les
mov
dec
jo
popa
jg
dec
pop
pop
pusha
std
push
wbinvd
jmp
popa
call
fnstcw
negl
and
fidivrs
dec
shlb
cwtl
sarb
add
rcrb
dec
aam
nop
fstps
enter
cwtl
dec
div
js
cli
dec
sti
mov
pop
sahf
mov
aad
enter
or
aaa
cmp
mov
adc
dec
dec
sub
jl
push
mov
xchg
xchg
hlt
nop
jmp
out
mov
fs
jbe
inc
or
fadds
sub
loop
dec
push
fstl
in
or
fcomps
out
shlb
or
ret
jmp
add
cmp
add
mov
lds
lods
mov
adc
sti
adc
push
into
cwtl
into
rolb
pop
in
orb
cmp
leave
fldl2t
inc
lods
lret
daa
test
iret
ja
xor
mov
add
jb
lcall
pop
dec
mov
mov
orl
jne
test
or
in
jp
pop
mov
cmp
push
lock
mull
or
pop
jge
cmp
jb
sub
jecxz
stos
pop
xchg
mov
sub
lock
xchg
sbb
sbb
inc
test
divb
sub
cmp
dec
mov
xor
add
adc
dec
mov
pop
mov
sub
inc
adc
or
cmp
mov
mov
stos
je
out
inc
push
loopne
mov
divl
in
add
mul
and
jbe
sti
jl
jno
cmpsb
out
fs
insb
adc
pop
decl
fidivrl
fidivl
sarb
in
push
hlt
push
xor
negl
adc
shl
and
gs
cmp
cmp
adc
sti
xor
dec
enter
into
xchg
xchg
clc
stos
mov
dec
pop
push
aas
pop
cli
mov
jp
mov
push
fimuls
push
int
dec
push
pop
mov
xchg
push
inc
scas
imul
loope
movsl
dec
jae
inc
shrb
inc
gs
enter
sti
pop
rol
pusha
xchg
rcrb
movsl
xor
jl
jae
jnp
dec
mov
mov
add
jbe
addl
adc
iret
adc
sbb
mov
test
cmp
and
int
adc
enter
adc
add
jb
ss
andl
xchg
adc
dec
or
mov
insl
and
das
pop
rol
and
fdivrl
imul
into
dec
ja
adc
ss
ret
movsl
jno
push
movsl
popa
jns
dec
aam
add
push
cmp
add
pop
pop
jo
jo
test
sub
popf
pop
cltd
rcll
jl
js
arpl
and
pushw
xor
xchg
insb
iret
arpl
jl
mov
movsb
jne
push
hlt
pop
imul
xor
mov
call
sub
roll
enter
addr16
mov
cmc
pop
enter
jl
dec
cmp
mov
add
mov
jns,pn
cmp
jne
mov
sub
sbb
dec
rclb
ficoms
in
or
dec
and
mov
sub
mov
push
or
mov
mov
inc
in
mov
outsl
add
inc
lret
sub
cmp
ficoml
pop
in
or
sbb
xchg
push
inc
gs
arpl
pop
inc
xor
pop
cmp
ret
inc
nop
xlat
jno
aas
imul
push
cmc
mov
xchg
mov
int
shlb
test
inc
push
pushf
ret
fucomip
mov
xchg
inc
lahf
and
cmp
popf
and
cmp
mov
jno
push
aas
inc
les
cmp
xor
push
jno
fbld
mov
xor
test
add
or
subb
loope
aam
xlat
xchg
cmc
sbb
loop
popa
test
xchg
test
mov
mov
push
lret
int
cmpl
sarb
add
add
sarl
test
insl
test
and
je
test
insb
sub
sbb
call
fcompl
inc
or
fstpl
jb
xchg
push
orb
or
and
mov
mov
js
lea
loope
pop
lock
loope
out
hlt
sarl
push
mov
xchg
pop
mov
pusha
lret
je
push
mov
outsl
ds
flds
leave
jl
pop
inc
shrb
mov
notl
in
sub
imul
cmc
adc
cli
inc
and
sub
mov
adc
inc
aam
pop
cld
add
bound
inc
sahf
mov
inc
cmp
pop
bswap
fsubl
jg
lods
push
and
jge
popa
push
cld
pop
adc
daa
nop
sbb
pop
js
mov
mov
pop
arpl
inc
mov
add
mov
push
mov
das
pop
cmp
lea
dec
push
dec
xchg
push
dec
fisubs
js
mov
pushf
cmp
insl
sbb
jle
jb
pop
pop
push
inc
movsb
mov
mov
sbb
inc
inc
ret
dec
sub
and
cli
jmp
scas
xor
inc
mov
std
adcl
xchg
call
dec
movsl
sub
or
leave
xchg
dec
or
dec
mov
mov
xchg
push
stos
mov
jl
jp
lcall
stos
leave
cs
cmp
ficomps
add
sbb
hlt
je
xor
xchg
pusha
xchg
xchg
scas
ret
lcall
js
in
es
hlt
jmp
stos
and
jl
sahf
or
mov
mov
ret
push
pop
loop
jno
jmp
cmp
mov
pushf
les
add
pop
test
or
sub
cmp
mov
jp
divl
inc
xchg
std
loopne
nop
fimull
or
inc
lds
mov
push
or
mov
lods
mov
jg
mulb
push
lret
push
sub
mov
add
cwtl
ret
xchg
add
inc
mov
movsb
ds
adc
jecxz
or
mov
jo
pop
loop
adc
rol
and
out
into
jle
dec
adc
cmp
xchg
in
notb
fisubs
jmp
pop
xor
xor
push
mov
test
push
add
mov
mov
lcall
sahf
lea
pop
push
in
mov
mov
dec
push
aam
inc
pusha
iret
repnz
jbe
cltd
jb
mov
shrl
test
inc
jo
test
xor
imul
es
nop
adc
adc
pop
test
cmp
fldl
pop
jns
mov
xchg
xchg
std
scas
dec
xor
cs
out
subl
cmp
cmp
outsb
xchg
sbb
sti
push
lods
mov
add
mov
xor
xor
rorb
inc
movsb
dec
testl
mov
mov
push
nop
push
mov
sahf
call
inc
jbe
insl
enter
das
add
fistpll
push
dec
cwtl
and
jnp
popa
movsb
jnp
jecxz
pop
xor
add
xor
pop
lock
pop
sarb
or
dec
xor
pop
lock
lods
mull
xor
js
ss
daa
sub
add
in
dec
aad
leave
sarb
stos
negl
in
fincstp
loop
ljmp
mov
or
neg
es
pop
decb
fsts
aaa
push
loop
jg
push
xchg
inc
push
and
dec
and
mov
fmuls
cmp
dec
mov
xchg
mov
ror
hlt
xchg
cs
mov
dec
add
and
jnp
jg
and
stos
mov
pop
fcomps
pop
cmc
mov
cltd
xor
pusha
shlb
sbb
js
repnz
mov
push
or
jge
push
rclb
lds
loop
popf
sbb
push
lcall
push
mov
int3
dec
sti
insl
int
popf
mov
xchg
in
fstpl
xorl
cmp
xor
inc
lret
sbb
leave
jg
jle
shl
xchg
jno
fnstcw
lods
xchg
dec
sbb
mov
cmp
mov
inc
repz
scas
scas
sahf
arpl
shrb
aad
mov
push
push
sbbl
addr16
xchg
pop
lds
lret
pushf
imul
push
add
and
and
cmp
push
pop
rorl
in
mov
arpl
repnz
les
fnstenv
movl
or
enter
int
adc
inc
mov
pusha
xor
sub
xchg
jl
ljmp
fdiv
fs
out
jmp
aas
ja
sub
jne
mov
cli
pop
push
inc
cmp
lock
jno
fcoms
rorb
sbb
or
push
mov
daa
xor
cltd
arpl
das
bound
pushf
jae
lret
xlat
stc
add
aaa
sub
clc
in
fmull
enter
lcall
pop
shrb
push
xchg
add
test
or
xor
push
sbb
dec
and
sbb
sub
mov
filds
dec
stc
fdivrs
dec
push
fdiv
add
and
pop
cltd
sarl
xchg
dec
xlat
mov
les
cmp
jl
rolb
sub
dec
pop
outsb
jae
js
insl
adc
jne
or
add
or
dec
testl
mov
add
add
movsl
jne
dec
cmp
add
sub
adc
dec
call
fcomps
bound
pop
in
inc
jno
sub
cmp
inc
call
in
and
add
xchg
inc
or
sub
test
rcrl
cmp
cld
popf
and
xor
and
out
ret
sti
aam
push
insl
dec
push
push
fcmovu
xchg
xor
dec
sbb
sbb
bound
dec
mov
loop
adcb
add
mov
daa
sub
sbb
pop
movsb
mov
or
fistl
cmp
push
mov
lods
or
in
xor
iret
dec
bndldx
mov
push
add
mov
repz
jg
or
cli
leave
fldt
mov
fistps
insb
fsubp
mov
mov
outsb
xchg
aas
rorb
insl
xchg
cmp
std
cmpl
or
mov
sub
jae
lds
jecxz
lock
rorl
xor
test
jmp
sub
sbbl
push
shlb
jecxz
lcall
sub
adc
add
out
scas
lock
cmp
ljmp
jle
add
pop
mov
ss
lahf
jns
inc
adc
sub
inc
mov
repz
inc
cmpsb
pusha
imulb
vpsubsw
mov
sahf
inc
cmp
jo
roll
or
hlt
shlb
sbb
xchg
ljmp
test
push
out
jge
adc
add
or
lcall
jmp
loope
sbb
pop
dec
sub
std
cmp
mov
push
pop
push
add
push
sub
push
xchg
push
lahf
cmp
outsl
pop
adc
cmp
leave
ljmp
rolb
push
dec
adc
cwtl
inc
mov
and
and
mov
add
pop
pop
int3
mov
test
cmp
inc
jo
sahf
addb
popa
mov
push
dec
jge
mov
and
or
pushf
incl
push
and
cmp
aaa
and
sbbl
jae
out
mov
icebp
cwtl
inc
add
sub
cld
cmp
mov
cmp
inc
xchg
mov
mov
pushf
arpl
icebp
loop
pop
cwtl
out
inc
add
xor
stc
mov
cltd
lea
repz
dec
and
mov
push
cld
std
sbb
bound
mov
cmpl
outsl
fnstsw
inc
gs
push
lahf
pusha
cmp
aam
and
dec
push
cld
push
push
xchg
cmpsb
xchg
jmp
aaa
aas
xchg
ljmp
sti
mov
stos
int
pop
cmpsl
mov
and
xchg
cli
dec
lock
or
inc
xor
in
add
scas
lds
sub
mov
pop
mul
inc
xchg
movsl
mov
cld
mov
iret
inc
xor
ret
enter
xchg
or
loope
test
jle
pusha
pop
add
inc
mov
std
icebp
sbb
in
sbb
dec
int
dec
cwtl
stc
or
sub
mov
shrl
sbb
imul
pop
mov
rolb
dec
inc
jp
xchg
cmp
sub
add
mov
xchg
mov
cmpl
adc
xor
jmp
jne
adc
clc
dec
cmp
aas
xor
js,pt
icebp
jbe
int
or
mov
lret
subl
adc
jo
add
mov
je
push
orb
inc
add
int3
mov
pop
mov
test
fs
dec
ret
aaa
pop
test
pop
inc
ret
inc
mov
xchg
cltd
mov
ds
jg
push
addr16
pop
xor
inc
and
sarl
jg
cli
jmp
inc
adc
dec
stos
test
movsb
sahf
pop
pop
sarb
repz
jmp
sub
or
cmp
sbb
or
rolb
scas
je
addr16
je
adc
sub
add
pop
cmp
xchg
rorl
sub
mov
test
cltd
sub
les
iret
mov
mov
fsts
in
fwait
cmpsl
mov
dec
lret
or
repz
in
cltd
loopne
testb
fsubl
hlt
push
aam
fsubp
xchg
das
and
scas
sub
loopne
scas
aas
ds
je
hlt
or
arpl
fsubr
int3
push
mov
popa
mov
and
sub
push
gs
jne
pop
mov
cmp
mov
in
ja
pop
cs
ss
call
lods
adcl
lods
jmp
mov
mov
shll
xor
xor
imul
sub
filds
xor
xor
jl
aad
mov
fdivrl
jmp
insb
mov
jecxz
fsubs
imul
push
int3
mov
cmc
cmp
xchg
clc
in
mov
xchg
mov
scas
or
pushf
lret
int3
mov
add
lods
in
sub
dec
push
or
in
cmp
and
add
outsl
lahf
add
adcb
sbb
sub
sbb
sbb
popf
pop
xor
pop
cmp
test
push
nop
jle
pop
dec
movsb
sub
inc
mov
push
xchg
rorl
adc
cmp
xchg
or
cwtl
jle
mov
sbb
inc
or
and
aad
stc
sbb
loopne
add
or
adc
lahf
push
lret
jecxz
mov
sbb
popa
cmp
mov
outsb
push
jg
cld
mov
ds
lods
mov
ficoms
and
sub
inc
pushf
lock
bound
sbb
test
lcall
dec
cs
nop
ss
leave
mov
xor
mov
mov
sarw
mov
loop
sbb
push
xlat
ljmp
shlb
sbb
stos
xchg
pop
xchg
mov
xlat
mov
and
pop
ret
js
or
gs
sbbb
push
fisubrl
in
fadds
test
jo
add
ja
dec
xor
push
mov
fisubrs
mov
inc
or
sub
ljmp
pop
fldl2t
jae
cmp
inc
shr
insb
pop
adc
imul
inc
mov
mov
mov
or
mov
pop
mov
loope
push
sbb
add
rcrb
jae
adc
leave
xchg
mov
and
sub
inc
jmp
or
jl
jbe
jge
and
add
mov
fmuls
mov
loop
mov
fisubrl
ffree
bound
loope
aaa
call
cmpsb
lret
imul
addb
push
pop
pop
or
xor
jbe
popa
mov
out
rcll
push
ss
pop
mov
test
inc
adc
cmp
leave
inc
mov
xor
sub
and
mov
sub
pop
testl
jmp
pushl
mov
jo
jmp
sbb
push
in
fdivrl
mov
jp
sbb
inc
pusha
mov
xchg
add
pusha
and
adc
and
push
lds
adc
sub
call
jmp
das
add
jle
sbb
cmp
mov
loope
sub
lods
inc
mov
mov
scas
xchg
fs
pop
adc
jge
pop
push
or
inc
mov
mov
dec
mov
lea
les
cltd
or
push
mov
dec
shlb
mov
daa
in
push
pop
iret
cmp
jns
mov
sbb
rorb
mov
mov
xor
pop
inc
xchg
push
xor
fstps
sub
pop
test
or
adc
cmp
xchg
shrb
mov
fimuls
inc
push
push
test
mov
sub
sub
cmpsl
movsb
pop
test
lods
sub
mov
xor
mov
loope
test
int
cmpb
lcall
inc
fsubrl
pop
sub
fdiv
js
jle
fcompl
cmp
in
addr16
add
arpl
movsb
pushf
test
stc
cmp
test
and
mov
push
xchg
roll
cli
xchg
dec
sbb
lock
scas
in
scas
mov
dec
cmp
cmp
mov
adc
loope
sbb
pop
add
add
enter
imul
push
sub
mov
ja
or
bnd
xlat
add
or
lret
or
test
or
pop
aam
dec
int
xchg
xorb
push
clc
ljmp
popa
jmp
insb
repz
stos
insb
cmp
pop
push
dec
add
mov
andl
cli
xchg
push
stos
cmp
scas
repz
sub
mov
jg
mov
test
fmuls
pusha
sub
pop
push
ret
pop
mov
sub
inc
pop
pop
dec
cmpsl
rorl
adc
adc
mov
leave
mov
mov
push
fld
pushf
rcrl
or
adc
sti
shrb
hlt
rol
sarl
sahf
out
ret
sahf
lods
hlt
rclb
mov
aam
xchg
int
pusha
or
fistpl
fstps
aad
imul
cmp
or
xchg
push
or
jo
or
add
js
mov
push
lods
add
push
mov
jno
aad
push
push
loop
rclb
and
leave
adc
mov
and
int3
sbb
aas
sbb
bnd
mov
dec
cmp
add
add
pusha
pop
jns
addb
push
mov
push
daa
outsl
sub
adc
adc
out
loopne
bound
incl
sub
incb
pusha
or
push
in
shl
sahf
stc
push
rcrl
stos
ret
cmpsl
mov
pushf
aaa
scas
adc
push
imul
mov
cmp
lock
arpl
ja
xlat
inc
sbb
or
push
pop
dec
call
push
jbe
cmp
mov
int3
dec
mov
cmpsl
mov
xor
sbb
movsb
adc
iret
pavgw
repz
das
outsb
mov
inc
push
adc
aas
scas
xchg
aad
xchg
add
dec
test
jl
aad
push
stos
mov
out
or
lret
cs
in
in
cmp
clc
pop
push
sbb
ss
sub
inc
mov
iret
dec
inc
and
sub
cld
loop
adc
dec
icebp
add
pop
popf
cltd
pushf
mov
scas
push
adc
subl
pop
in
test
cmc
and
bound
xorb
push
mov
mov
shlb
push
lock
jl
scas
mov
aad
loop
cmp
or
rorl
xor
or
ret
les
jge
iret
xchg
pop
mov
jnp
inc
mov
inc
mov
and
fildll
inc
mov
js
icebp
push
es
xchg
jo
sbb
and
mov
cwtl
in
pop
inc
and
test
xchg
push
fsubrl
sti
es
pop
nop
cld
out
test
inc
cld
lcall
and
or
lods
pop
pop
sbb
test
dec
adcl
jnp
test
jae
movsl
jg
xchg
jne
add
sub
jl
addl
fwait
gs
pop
aas
inc
push
test
loope
jnp
pop
jl
jne
sarl
fildl
cs
push
dec
pop
popf
sub
mov
mov
je
sub
or
xor
xchg
dec
push
xor
rorb
or
lcall
cltd
cld
addr16
imul
mov
jl
test
push
hlt
or
test
cmp
test
add
into
dec
rcrl
ja
imul
and
rorl
mov
xlat
mov
fwait
ja
sahf
add
ss
out
les
test
testl
jbe
les
and
fwait
aas
mov
adc
pop
fidivl
fstl
bound
cli
clc
insl
cld
xor
dec
inc
mov
popf
mov
mov
negb
aaa
iret
dec
movsl
jns
inc
dec
xor
inc
in
icebp
rcr
xlat
pop
lcall
dec
xor
push
stc
pop
xor
call
jb
add
lock
ss
and
dec
or
dec
cld
and
push
fdivp
fcoml
arpl
daa
mov
mov
sti
aad
mov
sub
ret
push
orb
jle
insl
out
push
or
sub
pushf
call
int
and
fidivrl
jle
fadds
test
scas
mulb
fidivrl
decl
imul
push
ja
dec
cmp
mov
fsubl
fldcw
shlb
lret
mov
jnp
cmp
lcall
add
js
sti
lds
xchg
ss
xchg
lods
loop
and
sbb
std
sbb
jl
ret
out
dec
adc
xchg
sbb
push
xor
xchg
fucomp
xchg
decl
int3
rorl
xchg
xchg
xchg
or
mov
jl
pop
in
loope
out
cmc
dec
jnp
or
mov
or
addr16
imul
test
or
mov
and
inc
sbbb
jp
loope
sub
jmp
xchg
jno
daa
xchg
pop
leave
call
push
addb
fmull
gs
mov
repnz
jns
insl
jp
fmull
and
lods
sbb
fwait
adc
mov
cs
cld
sbb
lds
mov
sub
js
leave
mov
add
lret
mov
aam
sub
lahf
jb
xchg
dec
rclb
dec
lods
test
sti
outsl
and
cwtl
movsb
cmp
mov
ret
xchg
scas
mov
pop
sahf
fsubl
arpl
inc
xchg
nop
cmpsl
push
dec
fwait
lcall
push
cltd
jge
mov
dec
and
lods
dec
cmp
orl
sbb
xlat
nop
adc
mov
les
mov
outsb
mov
fsubs
pusha
cmp
adc
inc
pop
pop
xchg
and
mov
repnz
and
sub
dec
pop
add
sub
jecxz
jne
push
xchg
push
dec
dec
into
xor
dec
repnz
xchg
fisubl
cmp
lret
adc
cmp
arpl
mov
cmpsl
mov
outsl
sub
arpl
push
jge
sub
call
dec
cmp
lods
mov
dec
pop
add
jnp
inc
or
and
cmp
insb
sub
in
std
fidivs
adc
add
and
xor
es
and
dec
jecxz
xchg
fildl
out
xor
addr16
sub
mov
popf
pop
enter
jecxz
and
xchg
mov
icebp
mov
loop
cltd
jno
lret
bound
inc
aam
xlat
inc
and
les
and
adc
aam
xchg
inc
cmpsl
out
xor
push
mov
jmp
popa
rcr
jge
fwait
adc
add
stos
mov
in
mov
sbb
mov
test
jne
xor
inc
cmp
arpl
sub
loop
add
int3
pop
dec
mov
rcrb
sarb
jg
adc
xor
cwtl
mov
addr16
mov
test
dec
pusha
add
insb
rcll
cmp
imul
pop
stos
cmp
mov
xchg
cmp
xor
pop
enter
push
ljmp
insl
inc
push
dec
stos
cmpsb
sbb
or
xor
inc
mov
mov
call
and
dec
jp
dec
filds
lret
test
aam
mov
dec
int3
inc
pop
lods
jl
addb
pop
popa
int
or
cmpsb
andb
mov
mov
test
add
mov
mov
adc
jns
popa
ja
cli
sub
xlat
subl
cmpsb
mov
adcb
mov
inc
aaa
pop
mov
fs
ss
cmp
fs
leave
xlat
rorl
jo
enter
cmp
mov
roll
movsb
xchg
inc
and
gs
xor
push
cltd
jo
and
cmpsl
jle
jmp
sub
fistps
lea
lods
mov
xor
xor
or
pop
pop
lret
dec
cmp
fwait
pusha
outsb
popf
ret
out
popf
pop
int3
or
sbb
xchg
roll
sub
test
addr16
fmuls
mov
dec
ljmp
shrb
jl
dec
dec
stos
sub
out
add
sub
loopne
dec
sub
test
xlat
jb
mov
dec
dec
mov
ret
jp
push
sti
mov
inc
sub
xor
leave
push
xor
aam
jnp
inc
sub
cwtl
pop
bound
add
daa
xchg
and
jb
add
mov
sbb
lea
sub
out
in
pop
mov
orl
mov
and
std
xor
xchg
cmp
jno
stos
jbe
pop
dec
mov
add
ret
cld
lea
mov
nop
inc
push
jns
inc
pop
jp
lock
or
sub
jno
sbb
mov
fadds
nop
xorb
sbb
cmp
js
cltd
dec
sahf
cmp
pop
add
sub
mov
sbb
mov
mov
test
cmc
popf
cltd
rcl
enter
ja
mov
sub
pushf
enter
jl
stos
fchs
mov
jmp
sub
push
jle
js
in
mov
xor
shr
leave
pusha
adc
cmp
pusha
das
sahf
inc
cvtdq2ps
and
and
sub
pop
mov
inc
mov
in
mov
mov
add
into
inc
xor
mov
add
ror
or
push
fs
cmp
mov
sub
cwtl
int3
sbb
aam
push
test
out
cmp
adc
add
xor
xchg
fwait
jmp
and
jnp
and
repnz
dec
sub
mov
sbb
loopne
xor
mov
leave
mov
or
mov
inc
adc
rcl
lods
aaa
sub
sub
nop
mov
sbb
repnz
mov
lret
mov
xchg
add
xor
lea
sub
loopne
arpl
cltd
repnz
mov
sub
or
inc
adc
cmp
push
mov
dec
dec
sub
mov
adc
mov
out
inc
push
out
mov
lea
movsb
push
loope
arpl
pop
out
pop
enter
pop
sarl
inc
push
sub
lds
xorb
movsb
adc
jo
or
rcr
gs
pop
or
stos
cmpsb
push
adc
pop
imul
or
fcomps
add
inc
js
mov
push
pop
mov
cmp
sahf
sub
jp
xchg
das
mov
outsb
ljmp
imul
scas
enter
jnp
jno
loop
ja
cmpsl
repnz
inc
jl,pt
enter
jge
and
inc
fs
sbb
addr16
jnp
xchg
jo
inc
bound
dec
pop
mov
fcmovnu
enter
or
in
sub
hlt
xor
call
lods
jle
sbb
and
aas
lret
adc
enter
call
sub
cmp
cmpsl
sbb
sub
jg
pop
pop
lock
or
rol
ret
in
xchg
inc
or
das
pop
lods
push
pop
sahf
push
jge
sub
mov
test
mov
addr16
sti
push
or
mov
jno
adc
aad
call
mov
test
cmpsb
add
sbb
lods
cmpsl
idivw
hlt
ja
leave
stos
mov
sub
and
movl
aas
pmaddwd
gs
imul
sub
xor
inc
loopne
xor
mov
fs
push
sub
xor
repz
jne
push
insb
fadds
push
ds
stos
cmp
cmp
shrl
and
das
dec
cmp
jl
rcl
fsubrp
insl
nop
es
mov
or
adc
xor
loope
enter
xchg
mov
nop
jno
aam
mov
imull
mov
movsb
sbb
sbb
jp
test
inc
pop
push
push
in
xor
dec
mov
jo
in
test
xchg
cmp
sub
mov
mov
cmpsb
cmp
rorb
fidivrl
push
fldl2t
roll
mov
test
clc
pop
scas
enter
adcl
movsl
ss
imulb
and
sbb
insb
pop
stc
aas
hlt
or
inc
cltd
aas
je
loopne
lret
jg
add
xor
sub
in
mov
les
fcmovnbe
cmp
std
pop
dec
fimuls
add
jle
aam
lods
lahf
adc
pop
jge
sahf
iret
sbb
cmpsl
lods
xchg
push
mull
pop
nop
sub
pop
push
jo
and
xor
into
adc
sbb
hlt
rcrb
scas
add
leave
int
pop
inc
jno
mov
sbb
sbb
adc
push
add
test
mov
xor
gs
into
clc
ds
cmp
cmpsl
mov
and
jb
mov
lret
push
xchg
ret
push
push
leave
cmp
int
jne
add
cs
leave
jbe
push
push
push
pop
in
cmpsb
test
jnp
mov
outsl
xchg
test
lock
xchg
cmp
jne
addr16
jbe
push
push
fadd
dec
pop
cmp
adc
adc
mov
xor
or
cmpsl
cmp
mov
fiadds
hlt
ret
lahf
subl
xor
sbb
test
nop
icebp
es
stc
mov
xlat
and
les
dec
inc
les
jb
mov
lods
mov
cmpsl
adc
or
shrb
mov
inc
dec
push
sbb
inc
cld
push
mov
insb
fdivr
jne
xchg
pop
inc
jne
xor
mov
pop
fsts
mov
insl
push
adc
arpl
jl
out
add
push
xor
xor
in
inc
mov
pushf
inc
push
cmp
pop
movsb
es
fidivrl
xor
bound
xchg
cli
pop
mov
push
sub
push
or
sbb
mov
cmpsl
mov
call
push
or
cmp
add
or
xor
lea
mov
out
in
mov
rcrl
mov
mov
dec
outsl
mov
test
enter
sbb
enter
dec
push
ret
dec
cmp
inc
dec
sbb
cld
sbb
shr
xor
dec
add
pusha
aam
mov
cmp
pusha
sub
loope
xor
mov
scas
lods
or
imul
dec
lods
stos
in
dec
int
insb
out
negb
clc
jle
movsb
out
nop
ljmp
cmp
mov
mov
lds
sbb
pop
mov
pop
dec
or
pop
cmpsb
pop
xlat
ret
xchg
pop
outsl
add
pop
addr16
adc
xor
pop
or
es
pop
or
movsl
add
movsb
jo
or
add
xor
jne
or
adc
outsl
pop
hlt
stc
adc
sub
cwtl
insl
insb
jge
int3
shlb
jmp
jno
out
sub
scas
xlat
aas
sbb
push
repnz
mov
xor
mov
dec
push
pop
jns
dec
pop
xor
inc
mov
mov
loopne
cmc
lret
leave
lods
pusha
scas
mov
sarl
mov
xlat
pop
jl
rorb
rcrb
imul
sub
push
lret
jo
sbb
pop
dec
cli
jp
ljmp
arpl
mov
sbb
fsubp
jnp
xor
jle
cs
testb
pop
adc
sub
cwtl
fstl
adc
fs
xchg
add
lods
or
xchg
push
nop
pop
sbb
loope
inc
xor
bound
jmp
cltd
mov
add
mov
dec
out
push
pop
jmp
ljmp
and
fwait
push
xor
fistps
add
mov
cld
pushf
cmpb
data16
sub
xlat
sbb
fsubp
lret
jl
nop
sub
ret
adc
lret
adc
pop
insb
jp
lods
scas
inc
push
imul
out
pop
arpl
ja
scas
push
in
xor
insl
sahf
pop
fdivr
inc
popa
cld
repnz
xchg
hlt
push
or
movsb
shll
out
sub
adc
xchg
daa
mov
sub
push
sub
and
pushf
fistps
mov
scas
and
mov
dec
aas
lret
add
push
pop
inc
jne
inc
jl
fwait
push
cmp
cmp
inc
mov
cmp
lods
les
or
push
icebp
nop
pop
das
pop
xor
pop
jb
ret
push
and
sbb
rcrb
inc
mov
mov
inc
clc
mov
lcall
mov
adc
stc
cmp
and
call
jge
inc
fldcw
es
lret
jnp
adc
sub
cli
sub
out
divl
mov
add
mov
divb
stos
push
movsl
out
jnp
pop
adc
and
fcomps
jle
cmp
repnz
jmp
cmp
stc
sbbb
fsubs
adcb
push
cmpsl
insb
lds
ret
and
xchg
stos
enter
rorb
and
bound
lcall
push
jae
in
dec
push
ret
push
mov
movsb
fs
xchg
nop
inc
aam
ljmp
mov
rolb
mov
xchg
mov
add
xor
jecxz
push
push
fistps
sbb
gs
jbe
lds
inc
push
xlat
cmp
mov
lcall
xchg
xchg
data16
inc
roll
mov
xchg
add
sbb
sti
mov
jmp
mov
xchg
jmp
loope
cli
lahf
sbb
daa
pop
push
xor
mov
jecxz
or
inc
pop
sbb
xchg
cmp
xor
stos
dec
push
mov
lahf
fcmovnu
loopne
ds
mov
jmp
cld
cld
xchg
cmp
sub
dec
bnd
xchg
flds
jmp
lods
decl
repnz
stos
mov
pop
jg
mov
fs
inc
rorb
dec
dec
mov
aas
or
fwait
add
das
or
mov
xchg
fcoml
pop
inc
or
xchg
out
mov
mov
repnz
mov
inc
xlat
insb
fdivrl
pop
or
sbbl
xor
scas
into
inc
scas
mov
into
sbb
jge
mov
fwait
ljmp
or
mov
push
push
or
ss
ljmp
mov
dec
in
fcomp
lcall
adc
imul
and
nop
cmc
mov
out
add
shlb
adc
shrl
data16
xchg
xor
andl
pop
lds
inc
je
sub
and
jmp
push
int3
push
in
dec
dec
mov
jge
inc
jge
dec
jle
test
js
lret
fdivrs
loop
mov
idiv
inc
pop
imul
loopne
xlat
outsb
push
test
jge
gs
jge
push
sarb
xchg
push
inc
sbb
mov
in
fsts
lahf
xor
aaa
jmp
repnz
ss
or
inc
pop
xlat
cmp
cwtl
cltd
cmp
cmp
dec
push
mov
lret
repz
ret
popf
leave
mov
jmp
mov
dec
mov
sbb
lret
dec
or
popf
inc
fucom
arpl
nop
inc
out
jno
fisubl
stos
mov
mov
cli
sarl
leave
pop
dec
and
in
cs
sub
arpl
stc
mov
mov
test
rclb
pop
mov
mov
or
push
xchg
inc
iret
add
push
push
decb
sbb
xor
mov
movsb
aam
mov
sub
inc
pop
fwait
sbb
xor
add
mov
mov
jo
popf
in
dec
cltd
push
push
aas
ret
cli
push
inc
mov
push
loopne
sbb
fs
add
lidtl
fidivl
popf
cmp
cwtl
sub
add
sbb
jge
jle
xchg
mov
inc
adc
adc
mov
fisubrl
fwait
push
jg
xchg
adc
jns
lods
cmp
mov
lods
orl
push
xchg
xor
int
jnp
mov
test
hlt
ror
pop
jge
mov
jnp
clc
dec
in
mov
pop
push
jle
dec
les
jb
push
mov
and
loope,pn
shrb
test
loop
jecxz
addr16
jecxz
pop
lea
aam
mov
ror
lods
sub
push
dec
aas
mov
jne
fldt
popa
push
add
xchg
cmc
or
mov
addr16
jle
outsl
dec
test
sub
mov
adc
data16
clc
sbb
inc
std
fsubrs
aam
inc
mov
jns
xor
imul
pop
lods
arpl
mov
mov
cwtl
notl
std
cmpsb
es
fimuls
sti
lods
push
fisubrs
icebp
adc
push
add
cli
pop
mov
jmp
cmc
mov
jl
cmpsb
dec
sub
into
in
leave
or
sub
jp
repz
sarb
pop
sbb
and
ret
rolb
rep
pop
ljmp
xor
dec
xor
add
punpckhwd
push
imul
mov
lds
aad
in
adc
notl
loop
test
cld
add
cwtl
mov
test
dec
adc
inc
lods
xchg
outsb
cmp
hlt
fcmovb
lds
int
cmc
push
inc
shl
pusha
jl
test
dec
pop
add
or
addb
fistpl
xchg
scas
mov
xor
mov
and
cmp
cld
pop
push
push
sub
add
and
mov
idivb
or
xchg
fistl
xor
xchg
dec
jns
mov
gs
inc
shl
lods
xor
ja
aas
and
pop
mov
rcrb
pushf
cmp
inc
push
data16
in
fists
jl
mov
pop
popa
add
push
lods
lret
or
mov
out
movsl
dec
lahf
aam
mov
es
push
hlt
push
dec
lcall
dec
out
out
stos
jne
inc
inc
mov
call
mov
mov
mov
pop
jbe
daa
xor
xor
mov
jp
loop
push
pop
cmp
in
mov
xor
mov
dec
popa
pop
enter
hlt
mov
cld
idivb
sub
xchg
xchg
imul
xor
int3
fstps
mov
gs
daa
pop
inc
inc
aam
imul
add
ret
pop
xchg
data16
sbb
mov
xchg
outsl
out
inc
and
cmc
xor
adc
jnp
inc
jns
ret
jp
cli
js
hlt
fsubl
insl
clc
popa
or
test
popa
mov
mov
leave
je
shl
inc
fisttps
rol
movsl
loop
loop
fs
ret
inc
std
mov
xor
fldz
cmp
shlb
insl
or
cmp
in
or
cmc
inc
jns
enter
lea
mov
or
ss
in
bnd
cmp
push
test
repnz
and
insb
jbe
dec
sbb
sarl
lret
test
test
fnstenv
mov
xor
mov
sbb
pusha
mov
jge
adc
sub
push
pop
int3
add
ud1
push
les
sub
xchg
push
sbb
addps
es
mov
insl
xchg
pop
lcall
js
cmp
mov
inc
push
push
lret
idiv
ret
orb
mov
icebp
cmp
ds
out
mov
test
js
mov
and
in
jecxz
mov
mov
sub
je
dec
xor
cld
andb
xchg
xchg
jg
stc
push
and
xchg
clc
dec
lahf
jecxz
mov
incl
mov
cmp
ret
scas
or
pop
in
daa
mov
push
scas
fsub
daa
scas
push
repnz
push
adc
jg
cltd
jl
out
pop
cmpsl
aas
mull
mov
jnp
xor
xchg
sbb
into
out
cmpsb
add
test
fs
xor
sub
inc
stc
fidivrl
scas
dec
cmp
inc
add
shr
aad
aam
and
xchg
loope
jne
fists
movsb
pushf
add
aam
ss
fcmove
cmp
or
sar
xchg
push
in
cmp
add
mov
bound
movsl
ret
nop
push
jno
and
dec
shrl
cmp
xchg
inc
add
lods
push
aaa
or
xlat
adc
arpl
add
clc
aas
mov
in
and
add
sbb
xchg
pop
adc
pop
cmp
push
push
test
shll
dec
push
insb
xchg
in
popf
iret
mov
xor
push
or
stc
int3
inc
fbld
cli
das
out
xchg
inc
loop
xchg
rcl
and
inc
cmp
mov
xor
scas
xor
dec
or
std
inc
dec
cwtl
mov
add
cmc
scas
or
push
cli
ss
ljmp
fldenv
test
test
xchg
mov
out
rcrl
stc
movsb
cld
sub
inc
mov
xor
push
test
mov
je
sub
inc
cmc
rcll
inc
incl
inc
aaa
test
mov
ret
les
scas
jns
fwait
xchg
dec
cld
nop
lret
popf
jae
xchg
fldcw
out
imul
stc
push
lock
cmp
lock
xor
in
sub
sub
pop
popa
sbb
cmp
xchg
pop
mov
inc
cltd
movsl
ret
sarl
stc
pop
xchg
movb
cmp
pop
shlb
rol
fmul
and
mov
cmp
nop
dec
push
fiaddl
push
and
shll
mov
xchg
div
xlat
stos
inc
fstpt
inc
xchg
ret
call
pusha
pop
sub
into
int3
mov
inc
mov
shl
sarb
mov
outsl
push
mov
sbb
dec
repnz
or
and
inc
je
or
lahf
inc
rcrb
pop
arpl
mov
pop
popa
xchg
or
enter
enter
sbb
out
add
jne
mov
sub
push
cmp
test
sbb
fs
push
das
testb
ds
gs
mov
xchg
mov
pop
sub
add
call
cmp
push
xchg
loopne
rcll
mov
test
ret
in
pop
test
or
cmp
and
jmp
aas
dec
xchg
sbb
fstpt
loop
mov
cmp
jns
jl
es
mov
sub
iret
jle,pn
add
aad
pop
dec
dec
push
fwait
mov
into
clc
cld
cwtl
inc
mov
cmp
addr16
cld
pop
xchg
fadds
insb
and
cmpsl
push
and
inc
pop
and
lahf
cld
mov
pop
and
adc
cwtl
fadds
mov
ret
dec
addr16
into
mov
imul
lds
ja
jbe
sbb
hlt
mov
daa
stos
push
lcall
push
and
xlat
jne
imul
add
and
add
mov
jbe
out
or
jnp
adc
sahf
clc
aaa
loope
inc
xchg
movsb
les
pop
or
rol
inc
sub
stos
es
or
je
iret
movsb
dec
adc
dec
pop
je
and
mov
inc
mov
sahf
call
sbb
xchg
loope
iret
jbe
ss
stos
mov
fsubl
inc
aam
clc
out
cmp
test
mov
push
pop
adc
popa
imul
and
mov
and
inc
loop
cmp
dec
mov
sbbl
xchg
and
xchg
lea
and
inc
adc
sub
or
sti
and
cs
andl
push
mov
xchg
das
sbb
or
cmpsl
mov
daa
mov
push
or
push
fsubl
fbld
jae
jl
iret
repz
es
cmc
or
inc
rcrl
and
xor
out
cwtl
push
out
sub
insb
sub
in
lods
in
imul
popa
mov
test
mov
sbb
hlt
inc
add
mov
arpl
inc
repnz
pop
sub
push
mov
pusha
dec
stc
push
call
cli
inc
push
jge
out
lcall
sub
inc
fldz
jg
add
int
or
dec
pop
push
lret
shlb
xchg
or
jae
into
ficomps
int3
jg
pop
js
adc
jle
hlt
adc
xchg
mov
and
pushf
lss
xor
ret
inc
popf
xor
idivb
or
pop
jae
xor
cmp
out
mov
push
inc
test
inc
fistpll
sbbl
jge
push
andb
fisubl
mov
cwtl
sub
rcrl
or
add
into
jo
push
std
xchg
out
pop
xor
or
mov
shrb
lret
arpl
jg
shll
jbe
sbb
cs
dec
es
mov
xchg
mov
stos
hlt
int3
pop
pop
sbb
pop
fisttps
adc
mov
imul
es
dec
and
add
dec
stos
test
pop
fsubrs
mov
pop
rcr
subl
outsl
das
testl
aaa
lret
push
xchg
sub
adc
fcmovb
pop
faddl
push
and
mov
sub
nop
push
jg
js
cmp
inc
std
dec
jns
jle
add
mov
cmp
xlat
pop
sub
dec
stos
xor
jle
cli
sbb
jbe
clc
xchg
push
add
and
cli
sbb
add
xor
xchg
cli
push
pop
popf
lret
and
add
add
mov
mov
mov
in
mov
and
cmc
in
clc
lret
xchg
xor
cmp
imul
pop
insb
std
dec
pop
mov
or
dec
or
adcl
jmp
int3
inc
or
sbb
pop
mov
test
call
movsw
mov
call
sahf
dec
mov
sti
cmp
mov
sbb
ds
movsb
inc
or
movsb
inc
or
mov
inc
adc
cmp
lret
xchg
lret
xchg
add
enter
jnp
shll
push
sbb
pop
mov
jmp
in
js
inc
push
std
cli
sub
mov
ds
mov
popa
enter
jnp
inc
mov
cmc
enter
mov
cld
sub
or
sub
punpckldq
les
shlb
pop
push
add
enter
in
movl
shlb
cmp
mov
shrl
pinsrw
adc
int
dec
xor
adc
or
fdivrl
mov
das
mov
nop
shlb
push
xchg
mov
pop
push
mov
popf
jge
fbld
inc
shlb
daa
pop
movsb
leave
mov
loop
sub
lods
cmp
mov
stc
fisttpll
in
sub
lret
popf
jns
inc
xchg
inc
push
jnp
sbb
dec
rol
sbb
add
xchg
inc
bound
sbb
dec
int3
shl
ret
xchg
or
fiadds
xchg
dec
xor
sti
jne
add
inc
add
jns
fiaddl
dec
fcmovnu
cmp
loopne
pop
add
jge
mov
cmp
popf
or
pop
sahf
test
popf
jge
insl
loop
cmp
xchg
adc
inc
hlt
aad
arpl
mov
subl
sbb
dec
inc
imul
push
aaa
push
push
dec
es
mov
mov
adc
jae
mov
push
xor
xchg
cmp
mov
fisubl
cmp
fidivrs
icebp
jmp
mov
mov
hlt
and
sbb
jg
aaa
push
mov
loop
cmp
test
lods
test
dec
mov
xchg
pushf
fmul
mov
xchg
or
xchg
nop
xor
or
mov
sbb
jnp
pop
dec
mov
and
daa
fdivs
andl
add
loop
and
arpl
adc
xor
ljmp
adc
push
dec
xchg
and
mov
push
jno
je
add
mov
enter
inc
jl
mov
inc
outsl
mov
pop
aas
cltd
sbb
inc
nop
mov
dec
into
and
push
enter
sahf
insb
mov
imul
xchg
jge
pushf
ljmp
lret
mov
cmc
inc
loopne
test
popf
insl
nop
sub
jle
fsubs
lock
xchg
rcll
or
adc
mov
xchg
push
inc
xchg
or
mov
dec
jle
lret
inc
out
inc
mov
mov
outsl
mov
jno
pop
push
dec
add
bound
mov
mov
and
xchg
into
xor
or
adc
movsl
push
dec
rorb
das
inc
scas
mov
mov
sub
fidivl
push
add
fldcw
sti
mov
into
jnp,pn
cmpsl
add
movsl
out
pop
push
imul
and
test
mov
pop
xor
sahf
mov
ret
xchg
sbb
popa
or
js
scas
jae
addr16
dec
or
aam
mov
stos
push
fimull
or
je
popf
cli
sbb
nop
lods
and
in
cmp
int3
insl
inc
add
jne
divl
lret
mov
stos
pop
into
testb
cmp
std
lret
inc
push
push
sub
mov
jbe
mov
les
cs
shll
xchg
mov
mov
inc
repnz
stos
fs
fwait
dec
ret
cld
pop
and
adc
push
push
cwtl
loop
cmpsl
ja
lds
gs
push
hlt
pusha
dec
xorb
fstpt
shrb
cli
test
sti
paddw
dec
xchg
add
xchg
pop
ds
cmp
je
sub
ret
pop
sahf
cmp
xchg
inc
sbb
jle
xchg
cmp
lds
sub
jae
fs
fidivs
inc
cmpsb
sub
aam
and
or
add
mov
add
pop
jmp
punpcklwd
dec
repnz
fwait
jb
push
push
add
adc
xchg
sbb
stc
jl
or
in
lds
shrd
inc
or
add
push
lods
gs
cmpsb
add
cmp
add
cmp
out
mov
and
xlat
mov
mov
and
pop
pop
sub
mov
pop
notl
push
xchg
ret
popa
add
rol
pop
stos
cs
arpl
or
cmp
pop
or
and
mov
icebp
xchg
fstp
data16
jg
jnp
mov
jmp
or
fidivl
push
cmpsl
subb
sub
cmpsl
sbb
mov
test
aam
mov
ficompl
pushf
dec
nop
push
ret
pusha
in
push
jle
jle
enter
sbb
push
sbb
arpl
inc
jge
jbe
inc
mov
inc
dec
ret
sub
pop
push
sbb
and
pop
lret
mov
mov
push
mov
lret
daa
mov
imul
sub
xchg
inc
je
dec
push
loopne
iret
xchg
and
test
and
ljmp
sub
add
lds
out
and
jae
inc
sub
insb
or
push
jl
cmp
add
adc
xchg
sub
rcl
cmpsl
mov
push
sub
fildll
shll
xchg
mov
loop
popa
lods
ja
push
dec
fimull
or
xchg
fisubs
inc
xchg
stos
jo
push
cmp
mov
adcb
fisubrs
mov
push
aas
pop
push
mov
pop
sbb
mov
cmp
push
jge
ret
lret
lods
and
cmpsl
es
and
pop
out
outsb
sahf
mov
sti
cli
sub
arpl
or
filds
add
rolb
lcall
pushf
stos
or
inc
movsb
leave
dec
rcrb
stc
ret
add
and
lods
add
mov
lods
sub
rcl
pusha
in
sbb
push
sarl
and
into
sbb
mov
test
hlt
add
cwtl
clc
add
movsl
out
lea
pushf
pop
fldenv
add
push
inc
mov
sub
loopne
push
lea
inc
ret
imul
icebp
enter
mov
xchg
dec
inc
fsubl
pop
movsb
pop
or
fs
cmp
arpl
jle
nop
mov
js
mov
add
test
jae
mov
sub
dec
dec
insl
and
popa
jle
xchg
fwait
mov
aad
dec
and
mov
and
mov
adc
mov
xchg
push
or
xor
and
and
cwtl
add
repnz
scas
enter
bound
pop
cmpsl
mov
sub
mov
repz
jne
xchg
test
rcrl
xor
rcrb
lds
jg
imul
in
ret
cmp
fwait
pop
iret
pop
lods
test
leave
mov
insb
inc
mov
xor
enter
fs
hlt
stc
xor
mov
and
add
sbb
mov
sbb
ret
cmpsl
fiaddl
cmpb
push
lcall
rorb
ds
orb
in
in
jle
cmp
mov
sbb
mov
bound
test
mov
lea
fwait
adc
pop
outsl
out
mov
sub
cmp
daa
or
mov
iret
and
xchg
imull
xchg
ret
push
add
js
sahf
arpl
push
loope
jmp
inc
fldcw
mov
aam
cmp
mov
outsb
rcll
xor
cs
inc
push
push
adc
adc
and
aaa
and
stos
xor
mov
mov
das
pop
rcl
arpl
sub
xchg
cmp
imul
push
push
sti
scas
enter
fsubrl
scas
push
jmp
cmp
add
in
xor
out
insl
push
out
lock
mov
repz
mov
sbbb
clc
aam
rclb
js
sti
sahf
jns
adc
aas
mov
push
mull
and
mov
addl
sbb
ds
lds
addb
pop
test
adc
dec
imul
icebp
sbb
loop
and
jns
xchg
popa
or
cmp
sbb
mov
add
inc
sbb
adc
jnp
cmp
mov
xchg
leave
sbb
out
pop
les
int3
mov
aas
cltd
xorb
jo
in
add
movsl
xchg
popf
pusha
scas
std
cmp
insl
lock
in
and
fsub
sub
icebp
or
stos
sti
cltd
shlb
pop
ret
mov
jne
out
xchg
gs
stos
or
mov
inc
sub
pushf
xor
icebp
enter
sarl
lret
mov
sbb
outsl
cmpsl
mov
nop
test
out
push
fdivrs
mov
rcrb
mov
pop
mov
jo
roll
lock
mov
nop
pop
jl
aas
fs
mov
aad
jge
push
inc
das
and
sub
stos
ljmp
jmp
jmp
test
inc
add
jo
pop
cmp
jmp
xor
or
aam
jecxz
push
mov
shrl
shll
mov
fldt
mov
shll
sub
rorb
sub
inc
imul
fsubrl
xchg
aam
cmp
push
push
inc
movsl
sbb
aas
pop
iret
insb
mov
and
push
sub
js
jge
xor
cmpsb
sub
call
jp
jecxz
push
dec
dec
or
mov
adc
sub
frstor
fisttps
das
cmp
pop
std
sarl
inc
jae
xor
ss
cltd
adc
sub
rcll
fbstp
inc
mov
pop
rol
sar
xchg
leave
bound
sbb
imul
imul
in
test
or
push
mov
mov
mov
bound
sub
jle
scas
ja
sbb
add
sbb
pop
jg
and
lea
mov
arpl
xor
pop
shl
repnz
pop
jbe
sbb
xchg
mov
repz
lods
dec
sti
mov
xchg
les
test
out
sub
lahf
push
mov
xchg
decl
fisubrl
xchg
leave
scas
pop
pop
jle
jmp
push
daa
rcr
adc
and
int3
push
mov
push
mov
aam
jl
mov
jb
aam
dec
adc
popa
lock
sub
loope
aad
cmp
and
popa
jl
sti
outsb
xchg
pop
xchg
shrb
pop
dec
inc
ljmp
jl
dec
movsl
inc
xchg
movsb
jne
dec
add
adc
sub
pop
pop
or
inc
xor
xor
cmc
into
inc
fcomip
data16
popa
jnp
jle
adc
loope
sahf
lock
dec
xchg
repz
sbb
je
jle
and
arpl
jmp
imul
cmp
in
lds
dec
int3
pop
xchg
cmp
push
push
or
jo
repz
pop
jb
pop
lret
scas
out
stos
shl
test
int
jb
sbb
dec
push
loope
cmc
ja
mov
stc
mov
or
pop
pop
add
fucom
cwtl
dec
out
loopne
adc
jae
jp
mov
es
and
sbb
cmp
out
push
in
dec
insb
fcomp
sarl
fwait
push
std
dec
inc
test
inc
mov
mov
cld
dec
jecxz
pop
movsb
jb
cmc
add
or
mov
xor
aaa
in
test
movsb
pop
rol
push
inc
dec
and
repz
sbb
test
jne
or
in
fwait
sub
dec
fldt
orl
inc
xor
mov
mov
fs
daa
pop
lret
lcall
xor
pop
orl
mov
daa
loopne
mov
fimuls
and
stos
pop
fsubl
push
mov
cmp
xor
out
and
nop
in
bound
lock
cmpsl
pop
mov
mov
mov
and
xchg
xchg
push
pop
data16
popa
mov
mov
cld
pop
divl
icebp
stos
aaa
je
fdivl
cmpsb
inc
dec
xor
mov
gs
xor
popl
lret
xor
aaa
movsw
jge,pt
sub
outsb
aaa
pop
dec
push
xor
into
outsb
enter
jecxz
int
jno
out
push
jmp
in
or
lds
mov
push
scas
inc
xor
nop
ror
pushfw
std
lods
nop
popf
ret
xchg
sbb
mov
sbb
ficoms
jecxz
jmp
cmc
jg
mov
jecxz
jmp
fiaddl
ret
pusha
add
in
fwait
lods
out
fisttpll
out
out
jge
xchg
insl
and
xor
sbb
mov
ret
jl
aad
in
ret
sbb
or
mov
xor
sbb
sub
mov
sarb
xchg
lock
movsl
popa
pop
hlt
push
inc
xchg
and
jae
add
xchg
sbb
inc
test
sahf
ja
ret
fs
test
or
lret
ret
popa
mov
in
cmp
mov
xor
in
dec
cli
test
js
lods
pop
pop
fmuls
or
scas
enter
xchg
loope
dec
hlt
add
ljmp
mov
jne
pop
pop
sub
mov
icebp
adc
mov
or
lds
lods
cmp
mov
ds
dec
sub
and
int
pop
xchg
sub
dec
cmp
mov
aad
xor
scas
rclb
pushf
xor
xchg
nop
aad
pop
sahf
sub
push
sub
sahf
mov
arpl
rclb
push
js
fdivl
pop
stos
stc
mov
loop
fucomip
jns
mov
in
push
roll
pop
mov
pop
push
mov
or
dec
repnz
cld
jns
xchg
sub
enter
sub
aad
xor
lock
pop
inc
cmp
xor
jb
test
subb
push
inc
aam
imul
jno
imul
xor
mov
ds
gs
mov
xchg
pop
cmp
lock
dec
das
cmp
pop
arpl
nop
xor
mov
jmp
sub
fisubrl
xchg
ret
dec
add
mov
nop
test
pop
arpl
dec
in
inc
lods
cmp
cli
dec
jecxz
cmp
dec
dec
fs
inc
pushl
shl
adc
mov
cltd
sub
adc
xchg
sub
je
pop
in
sbb
cmp
sbb
push
mov
sbb
cwtl
in
mov
into
cmp
mov
insb
aaa
test
lret
fistl
jmp
nop
mov
shll
leave
inc
icebp
aas
enter
xchg
rcl
sbb
movsb
fwait
cmp
inc
and
mov
and
mov
adc
repz
lcall
lret
pop
cld
mov
jp
mov
lcall
cmp
pusha
daa
sahf
and
pop
loope
or
and
imul
mov
pop
pop
in
add
sub
popa
das
test
ja,pt
lods
pop
sub
push
adc
inc
xorl
adc
dec
sub
xchg
mov
sub
cwtl
sbb
mov
test
and
call
lcall
push
push
inc
mov
dec
inc
push
mov
fwait
jns
test
andl
cmpsl
out
or
xchg
or
dec
or
shll
or
push
push
movl
and
stos
dec
pop
push
and
or
sub
out
ficomps
add
inc
mov
movsl
cld
inc
jg
mov
xlat
push
xlat
or
push
inc
cmp
ret
mov
bound
jbe
xchg
lcall
xchg
movsb
xor
cmp
xchg
inc
add
add
sub
in
mov
rolb
or
pop
jp
mov
and
popf
jmp
gs
pop
sub
mov
daa
ss
adc
or
xor
cs
mov
add
pop
movsl
lret
push
and
inc
cmpb
shlb
insb
mov
movsl
cld
cmp
adc
lods
lods
jbe
ljmp
jle
pop
cmp
fcomps
cs
pop
insb
loop
or
cld
insl
mov
leave
hlt
xchg
hlt
mov
add
jno
adc
push
pop
pop
mov
out
pop
scas
lahf
push
mov
add
add
jecxz
popf
dec
sbb
mov
pop
mul
into
and
xchg
mov
cmp
lods
push
pop
call
leave
mov
xchg
iret
sti
add
xor
into
push
lahf
xchg
sbb
lret
push
lock
stos
push
adc
cwtl
jns
je
mov
mov
sbbb
stc
rolb
jb
push
cmc
inc
aaa
pop
jp
std
sahf
adc
ret
xchg
sbb
mov
adc
pop
and
pop
sub
pop
mov
lea
mov
dec
xchg
hlt
shrl
pop
sahf
xchg
orl
cmp
or
lds
cmc
daa
sahf
test
insb
inc
pop
dec
pop
outsb
out
imul
icebp
xor
and
subl
pop
inc
or
push
cmc
stos
add
lahf
into
dec
pop
sub
pop
or
push
xchg
rol
mov
aas
movsb
xor
hlt
inc
cmp
adc
jg
jo
cs
cmp
cwtl
cli
fninit
sub
jb
dec
imul
inc
rolb
and
adc
scas
sub
movsb
arpl
test
mov
or
test
in
mov
test
pop
mov
ljmp
cmp
mov
jle
into
call
leave
xlat
dec
rclb
pop
mov
test
sti
inc
popa
sar
cli
mov
mov
mov
test
movb
dec
adc
or
dec
adc
dec
adc
std
pop
inc
jg
xor
ss
or
mov
inc
or
and
dec
and
lahf
lds
xchg
call
into
xchg
or
addr16
outsb
pushf
jp
cmpsl
notb
aaa
cmp
mov
mov
push
lea
mov
repnz
mov
sbb
xor
sub
mov
pop
shll
mov
shrb
xchg
push
movsl
pop
add
lahf
pop
inc
jns
sbb
je
xlat
cmpl
xchg
cmp
lds
dec
rcrb
hlt
aad
or
dec
or
js
xchg
mov
rol
mov
rcrl
enter
jae
scas
psllq
inc
int
enter
repnz
int
pop
xor
sbb
and
mov
lods
popl
lds
mov
jb
pop
sahf
inc
pop
jg
xchg
xchg
dec
stos
std
hlt
jno
or
push
cmp
std
pop
inc
in
inc
cwtl
pusha
dec
dec
cmp
data16
pusha
ss
push
mov
leave
nop
push
push
mov
sbb
and
or
xor
push
push
pop
addr16
push
add
jb
sub
lds
add
ret
sahf
adc
mov
fisubs
popa
inc
sub
cli
add
xor
int3
mov
and
sub
xor
bound
sbb
xor
pop
xchg
icebp
jbe
ret
pop
push
cmp
adc
movsb
arpl
sub
jg
mov
cmp
imul
nop
jae
popf
lcall
mov
mov
push
cs
pop
inc
jae
aas
inc
icebp
nop
fsubrl
or
pushf
sub
rolb
cs
lock
pop
shll
xorl
or
stos
mov
xchg
lock
scas
mov
adc
adc
pop
mov
or
sbb
fstps
and
mov
fistps
or
cs
mov
scas
nop
cld
ret
jge
mov
sbb
out
pop
cmp
jns
shrl
cld
jns
out
lds
scas
scas
mov
fmul
enter
outsl
subb
mov
cmpsl
mov
cmpsb
pop
xchg
pop
ja
fucomip
mov
pop
test
jae
push
cmp
xor
pop
aad
and
or
and
jle
rorl
cld
shll
mov
cs
rcr
inc
cs
add
int
jno
fsubs
xchg
subl
loope
mov
or
ror
cltd
mov
inc
fildl
inc
and
not
pusha
mov
and
xor
jne
push
cmc
dec
pop
add
xor
push
jbe
jae
mov
push
imul
outsl
add
shlb
jmp
jp
mov
and
subb
roll
pop
xor
dec
jns
inc
pop
shrl
fcoms
std
and
out
sbb
mov
dec
add
shrl
mov
call
dec
push
xchg
adc
in
aas
stos
lods
mov
inc
pushl
add
dec
push
rcll
mov
scas
mov
or
call
adc
lock
ficoms
mov
aas
jnp
cmpl
out
cmpsl
fdivrl
mov
dec
push
adc
pop
cmp
xchg
add
xor
inc
sbb
xchg
or
pop
hlt
dec
xor
pop
cmpsl
cld
mov
mov
mov
ret
mov
popa
lea
aas
adc
dec
push
add
aas
mov
add
into
xchg
sbb
aam
cmp
mov
mov
pop
mov
hlt
test
mov
inc
rcll
add
push
mov
add
test
mov
lods
out
enter
sub
or
fwait
add
xchg
mov
nop
fisubl
std
mov
jg
cld
gs
stos
cld
cmp
iret
cwtl
or
adc
hlt
xorb
pop
or
inc
shrb
das
test
cmp
xchg
cmpsb
mov
mov
movsb
movsl
das
jbe
addl
fnstcw
lret
aas
xchg
fimuls
jg
adc
inc
mov
push
std
push
pop
insl
mov
cmp
mov
test
mov
xchg
mov
sub
rorl
sbb
sbb
cli
and
mov
dec
lret
lock
hlt
inc
dec
mov
xor
cld
pusha
jg
stos
pop
cmp
xchg
add
jne
jge
inc
int
in
je
mov
repnz
mov
fs
lret
stc
imul
mov
xor
push
sub
aaa
xchg
pusha
outsb
mov
ss
mov
dec
or
outsl
mov
pop
xchg
sti
mov
popa
mov
into
mov
xor
lahf
or
cs
adc
cmp
mov
adc
mov
mov
hlt
cmpsl
inc
pop
dec
test
sbb
cmp
lods
cmc
jne
push
and
movsb
cli
adc
ror
jb
mov
mov
push
repz
mov
shr
jns
inc
jo
loop
stc
leave
or
xor
cmpsb
subb
lods
lss
hlt
or
sbb
or
jg
repz
mov
pop
inc
push
subb
push
lahf
stos
xchg
lcall
sub
ljmp
sub
fistpll
dec
mov
mov
inc
pushf
mov
add
pop
mov
mov
cld
mov
cmp
pop
clc
sbb
jns
insb
test
pop
jg
add
inc
sub
push
imul
mov
inc
jnp
inc
cmpsb
pop
inc
mov
add
ds
push
and
add
shrl
int
mov
filds
cmp
and
nop
clc
or
inc
and
xchg
das
pop
sbb
dec
cwtl
dec
hlt
int3
mov
cmp
adc
sub
add
arpl
loope
dec
clc
cmp
insb
cmp
xor
xor
sub
iret
xor
xor
push
jmp
ljmp
inc
pop
sub
pop
daa
or
mov
sub
jp
repz
daa
lret
sub
push
push
cli
mov
jns
fcomps
xchg
aas
inc
sahf
pushf
rol
imul
popa
loope
or
arpl
inc
in
cli
pop
xor
add
mov
dec
leave
mov
mov
ret
xchg
insb
out
in
mov
mov
neg
fistl
inc
or
movsl
or
and
mov
dec
and
js
adc
fnstcw
push
sub
loop
mov
shrl
pop
or
mov
inc
fmull
cmp
cli
leave
int3
nop
mov
push
pop
lret
scas
hlt
adc
pop
mov
aam
pop
int
jae
je
pop
scas
iret
cmc
stos
dec
push
and
call
shlb
cmp
jno
bound
push
push
add
add
iret
pop
xchg
jl
lahf
aam
pop
push
nop
in
jecxz
pop
pop
outsl
imul
mov
cmp
cmpl
scas
or
mov
imul
inc
stos
out
dec
ljmp
inc
adc
cmp
mov
pushf
insl
daa
std
sub
push
sub
not
repz
das
mov
inc
popl
ficompl
xchg
mov
andl
pop
popa
jmp
inc
mov
iret
pop
loope
dec
cltd
jecxz
daa
imul
jbe
jp
movsb
add
add
pop
mov
cmp
mov
inc
mov
jbe
stos
dec
push
loope
xlat
xor
jbe
outsb
xchg
popa
cmp
fbstp
sub
mov
mov
fsubl
cmp
mov
push
fdivs
pushf
jnp
jns
jnp
inc
mov
cmp
inc
add
inc
inc
int3
hlt
cmp
cmp
sbb
mov
loope
or
cmp
inc
adc
mov
fistpll
inc
cltd
and
movsl
es
les
outsb
mov
inc
pop
lods
cmp
add
xchg
inc
lock
mov
push
sub
aam
stc
xor
pop
fwait
push
fsubrl
sbb
or
daa
mov
mov
jne
in
popf
lea
popa
adc
fcomi
je
inc
or
sub
mov
cmp
mov
cmp
ret
push
xchg
xchg
or
outsb
lods
xchg
fmuls
fidivs
repnz
push
mov
xor
lods
addr16
or
and
sub
fdivrl
cld
sub
dec
sti
inc
adc
adc
lret
mov
test
adc
inc
mov
stos
xchg
ror
sub
pushf
fxch
fdivrl
lret
fwait
inc
fdiv
xor
or
push
mov
shr
lar
daa
das
roll
mov
ja
jnp
fldl
cmc
xor
add
sarb
push
data16
xchg
sub
pop
xor
mov
pushf
sahf
inc
ss
sbb
or
dec
xor
cmpsl
mov
cmp
ret
cmc
into
mov
arpl
cmp
jnp
js
js
add
pop
xor
jns
adc
mov
jo
mov
jb
movsl
pop
popf
scas
inc
jp
mov
dec
mov
sub
xchg
xor
sarb
mov
cmpb
jle
outsb
ret
aaa
mov
fsubr
jg
ret
int3
push
scas
push
pop
pushl
or
rol
hlt
push
daa
insb
pop
and
xor
mov
xor
sahf
mov
lds
sbb
dec
sbb
lock
jmp
ret
shrb
aaa
xchg
lods
loopne
mov
dec
jo
nop
dec
sub
or
sub
clc
sbb
ror
adc
cmp
jnp
push
fstps
dec
cld
and
mov
cmp
adc
jge
inc
sub
mov
push
jp
fsubp
cmp
pop
aaa
loope
es
loope
loope
daa
xchg
and
sarl
cwtl
xor
iret
fneni(8087
mov
in
add
cmp
out
adc
jmp
mov
out
push
repz
jo
inc
sub
cmp
ljmp
fsubp
pop
fistpl
xlat
dec
hlt
clc
fwait
rorl
mov
int
cmp
in
cmp
les
sar
loopne
ret
jl
int3
in
sbb
cmp
pushf
add
lds
faddl
mov
adc
jns
rcrl
push
pushf
push
testl
sbb
mov
and
in
enter
pop
in
insb
sti
cmpsb
cmp
fistpl
xchg
loop
test
mov
pop
add
sbb
xorl
dec
mov
fsub
addr16
push
iret
add
imul
pop
pop
jle
aad
mov
movsl
rcll
pushf
mov
pop
pushf
push
outsb
xchg
cltd
mov
bound
pop
jg
outsb
mov
mov
pusha
pop
rorl
mov
push
pushf
pop
incl
jns
mov
cltd
sub
cmp
loop
dec
imul
fs
push
arpl
iret
dec
cmpsl
xchg
mov
pop
mov
cli
add
push
js
dec
and
fs
xchg
jg
fwait
pushf
cmpsl
pop
scas
dec
jb
sub
mov
ss
inc
pop
inc
sub
xchg
xchg
xor
push
in
pop
pop
lahf
sbb
fstps
dec
push
pop
out
fst
pop
adc
inc
sbbb
in
adc
orb
inc
fisubrl
push
sbbb
cmp
in
mov
mov
dec
shll
xchg
lock
leave
jnp
int3
addl
loopne
iret
inc
jmp
jb
or
xchg
mov
fisubs
inc
es
jnp
sub
push
test
add
enter
cmpsb
cmp
mov
decl
jae
xchg
ds
mov
push
mov
outsb
orb
fcmovnb
sub
icebp
cmpl
mov
sub
inc
movl
clc
mov
xor
fsubl
mov
outsl
sti
inc
or
mov
inc
sarb
pop
xor
jge
mov
sbb
stos
popf
xor
inc
cli
cmpsl
fnstsw
inc
mov
popa
dec
adc
addr16
and
out
cmp
cmp
jg
cwtl
shlb
push
gs
ds
and
inc
rorb
add
mov
mov
push
or
orl
inc
and
and
mov
ficomps
sti
push
or
imul
aaa
jns
cmp
call
rorb
and
aam
adc
aad
sub
int3
cvtdq2ps
inc
mov
fisubrs
mov
cmpl
mov
mov
pop
shll
out
inc
sub
and
jno
fst
pop
push
fisubl
add
dec
jo
test
ret
test
inc
fcmovnb
dec
mov
fldcw
dec
add
and
and
add
inc
mov
cmp
test
int
imul
or
mull
lods
mov
dec
cmp
stc
xchg
adc
mov
adc
nop
mov
movsl
xor
rcrl
into
dec
fidivl
cmp
xor
and
dec
aam
movsl
xchg
adc
jmp
call
sub
adc
and
jg
push
sbb
or
inc
shll
xchg
or
dec
xor
fmull
js
ret
popa
lock
cwtl
xchg
pop
mov
dec
push
imul
in
outsl
sbb
or
ss
xchg
add
scas
mov
imul
dec
cmp
bound
dec
pop
mov
imul
jbe
test
mov
jns
dec
js
fs
push
cmp
std
mov
jp
popf
jl
sub
into
test
aam
jmp
or
push
fcompl
dec
jge
mov
insb
pop
mov
shrb
fldt
lret
xchg
ss
jnp
pusha
push
mov
adc
mov
in
lock
mov
inc
test
or
clc
jmp
lods
inc
cs
xor
ret
jg
jnp
fmul
nop
mov
or
std
mov
add
sbbl
or
cmp
cmp
push
push
mov
adc
xchg
push
clc
subl
or
inc
xchg
jb
cwtl
movsb
jo
jbe
jmp
adc
popf
pop
xor
fwait
jp
out
lret
mov
jo
int3
adc
aaa
hlt
jnp
inc
adc
dec
inc
cmp
push
nop
jns
mov
dec
aam
xor
dec
push
add
mov
dec
or
aam
push
insl
enter
aas
dec
int
fisubrs
sub
mov
mov
pop
shr
pop
testl
int
mov
inc
mov
sahf
sbb
andl
gs
mov
xor
inc
cmp
rclb
test
fcmovbe
jno
push
popa
outsb
jmp
jnp
pusha
aad
cs
xorb
clc
lcall
sbb
mov
ret
pop
pop
int
jp
test
sbb
dec
leave
test
orl
jl
or
lahf
repz
int
mov
sbb
lea
push
xlat
lret
rcrb
cmpsb
mov
nop
ja
mov
push
dec
jge
xor
pop
cli
pusha
pop
ret
inc
iret
add
loopne
sbb
out
cmp
push
notl
stos
adc
dec
loop
inc
test
pop
push
test
scas
aaa
mov
jmp
jb
or
push
cmpsb
inc
cwtl
and
cwtl
xor
inc
pop
js
sbbb
dec
xor
inc
stos
push
aad
and
int
ficomps
test
push
ljmp
xchg
aas
test
inc
sbb
push
add
xor
and
cmp
out
mov
cmpb
addr16
push
idivl
loopne
popa
sub
cmp
sub
popa
dec
shlb
adc
mov
add
jnp
inc
cs
adc
lea
les
push
cmp
stos
jae
push
das
cmp
or
mov
data16
and
push
adc
bound
sahf
stc
rclb
cmpsb
popl
cmp
xlat
hlt
adc
lret
mov
xchg
xor
and
mov
mov
adc
out
or
xchg
std
and
incl
cltd
out
sbb
inc
in
js
pop
jecxz
ds
or
lret
fcomps
adc
or
out
lods
leave
rorl
fsubs
dec
mov
jmp
mov
test
loopne
and
fsts
cmp
xchg
cltd
xchg
mov
push
jo
inc
push
jb
lahf
shlb
fcomps
ja
dec
and
inc
pop
loop
cmp
mov
mov
push
flds
jbe
lret
cli
popa
lods
mov
adc
mov
ret
mov
push
push
xorb
fwait
pushf
and
mov
imul
push
mov
cmp
sbb
test
mov
imul
push
icebp
jno
jb
push
xor
mov
bound
rcrb
lahf
sub
daa
test
or
pop
add
sbb
ret
and
adc
sbb
lret
push
int
jb
jo
mov
cmpsl
dec
inc
stos
dec
or
jmp
gs
ss
mov
cmp
fdivrs
adc
decl
mov
sti
popl
dec
fildl
xchg
push
xor
lea
inc
mov
adc
mov
inc
shl
push
aas
faddl
movsl
repz
movsb
lret
and
arpl
test
je
stc
push
inc
mov
hlt
loop
xchg
sub
lcall
ds
mov
movsb
mov
sti
lods
sub
mov
jbe
cmp
int3
push
xchg
outsl
inc
loopne
in
jne
mov
and
sbb
fwait
loopne
arpl
jb
inc
push
push
inc
add
jecxz
insl
lods
adc
fistpll
std
and
dec
hlt
jno
js
mov
push
stos
xchg
in
mov
push
dec
sub
adc
jne
lods
xor
xchg
and
mov
lock
loop
ficoml
lds
cltd
int
push
dec
ljmp
mov
cmp
rcl
enter
into
push
pop
movsl
mov
pushf
mov
sub
in
sbb
sbb
sub
cmp
outsl
pop
add
mov
or
movsb
cmp
jle
mov
mov
pop
cwtl
aam
lock
dec
rorl
xor
dec
in
enter
shr
inc
inc
inc
xchg
or
call
cmp
cmp
mov
out
lahf
xchg
out
test
les
push
fidivrs
and
jne
sbb
cmc
gs
sub
mov
jae
dec
sbb
jae
fists
imul
jmp
mov
roll
mov
xchg
lods
test
int
cmpsl
pop
lret
test
sub
repz
nop
jecxz
sbb
mov
sbb
push
shlb
lods
repnz
or
shlb
jbe
push
movsb
repz
nop
mov
inc
outsl
daa
mov
mov
jbe
popa
cld
loopne
xor
fbstp
insl
lds
out
lods
mov
push
lret
and
push
test
add
inc
sub
addl
imul
inc
inc
lods
jmp
add
ret
bound
or
push
jl
jo
je
movsl
out
daa
nop
mov
loopne
push
mov
nop
cli
pop
xchg
cmp
and
les
push
mov
test
ret
ficompl
int
inc
jo
and
sub
out
xchg
and
and
and
and
cmp
push
in
cmpsb
imul
or
dec
cmp
pop
ds
mov
sub
cmp
mov
jp
add
fldl
and
dec
pop
push
lock
inc
cmpl
xchg
mov
lods
pop
popa
inc
mov
std
adc
clc
xor
add
push
mov
push
fs
jbe
inc
mov
test
add
shll
dec
add
inc
adc
cmp
push
stc
lea
push
test
add
pop
ficompl
insl
xchg
roll
sub
lea
sti
lahf
jb
inc
push
cmp
xchg
sub
lods
ror
jo
enter
sbb
and
adcb
xchg
mov
xchg
fldenv
sbb
adc
shlb
or
loop
ds
mov
sbb
cmpsb
xchg
push
xchg
orb
pop
add
loopne
imul
push
fistl
push
mov
inc
and
dec
mov
out
cmc
cli
mov
mov
pop
pop
adc
stc
jne
scas
mov
cld
xchg
loop
inc
or
cmpsb
test
pushf
inc
pop
jl
push
shll
rolb
rcrb
and
fildll
push
and
sub
testb
out
aam
dec
stc
repz
and
pop
sbbl
cmp
inc
xor
into
cmp
xchg
jno
std
sub
sbb
add
fldl
insb
mov
dec
cmc
popf
inc
mov
mov
push
iret
add
mulb
imul
dec
dec
mov
xchg
jg
aam
jecxz
in
sbbl
xor
imul
inc
sub
mov
repz
mov
add
push
jno
fs
into
shlb
adc
arpl
enter
mov
jne
dec
sub
xchg
jmp
in
add
or
cmp
pop
clc
lret
xchg
inc
jbe
or
aas
jl
mov
adc
ret
ja
cld
lods
pop
rorb
fld
shl
hlt
adc
cmp
xchg
adc
push
shll
mov
scas
pushf
dec
and
daa
dec
int
jl
clc
out
lret
loopne
aam
push
and
and
mov
mov
push
sub
orb
mov
jns
xchg
enter
jg
cs
pop
xchg
popa
mov
stos
sbb
cmpl
xchg
mov
push
and
mov
fcmove
ficoml
dec
iret
pop
sub
lcall
jbe
test
je
mov
inc
sub
stos
arpl
cmp
xchg
cmp
mov
mov
xchg
adc
xor
dec
xor
leave
lret
aas
or
loope
in
mov
arpl
das
pop
add
cs
mov
add
mov
inc
hlt
cmp
mov
jns
test
repz
cli
shrb
fldenv
pop
mov
and
inc
xchg
inc
lcall
mov
and
pop
or
sub
push
bound
popf
mov
mov
adc
dec
or
enter
roll
pop
add
stc
dec
fbld
pusha
mov
sub
dec
aad
dec
push
aas
incb
psubusb
push
jo
and
dec
mov
lea
mov
sub
dec
pop
pop
xlat
sbb
add
mov
adc
aam
inc
jle
mov
xchg
mov
sbb
jg
into
lea
add
nop
dec
lods
or
repnz
bound
adc
and
xchg
cmpsl
out
and
fwait
loop
leave
pop
and
jmp
mov
imul
mov
pop
movsb
jle
push
sub
and
fidivrl
loope
repz
out
add
mov
mov
inc
imul
icebp
or
adc
stos
imul
mov
mov
enter
xchg
fcoml
test
inc
or
push
mov
ret
jns
into
test
fmull
sub
push
test
push
cmp
push
int
inc
icebp
loope
inc
loope,pn
push
jmp
int3
adc
push
sub
roll
nop
sahf
push
xor
mov
daa
and
test
adc
cmp
xchg
aam
rclb
mov
ja
in
fildl
sub
xor
bound
and
sarb
add
out
lcall
rol
nop
add
sub
adc
inc
push
enter
and
test
jo
fsts
lret
movsb
lfs
mov
cld
sbb
pusha
aam
or
lcall
mov
daa
lcall
iret
inc
lahf
xchg
sarb
pop
gs
imulb
jns
lahf
into
inc
ret
aam
mov
inc
insl
mov
inc
shrb
lds
xor
cmp
popf
std
xchg
scas
add
add
dec
mov
divb
outsl
iret
xchg
mov
je
cmpsb
hlt
fidivs
iret
mov
xchg
mov
outsl
sub
and
and
dec
pop
loop
and
add
orb
and
mov
leave
pop
and
adc
add
mov
out
xchg
outsb
in
lcall
inc
out
and
pop
jo
and
loope
fs
jle
sahf
xchg
or
les
in
mov
outsl
cltd
inc
or
pop
mov
mov
adc
or
pop
mov
jge
pop
jmp
sbb
outsb
loope
movsb
push
movsb
push
lods
cmpb
or
lret
or
xorl
jle
sub
sub
roll
mov
mov
scas
pop
daa
rcl
shlb
mov
ja
lahf
mov
jl
ficompl
jns
fiaddl
mov
push
adc
cwtl
out
cmp
xor
xchg
and
sub
cmpsb
xchg
dec
inc
jecxz
push
jbe
mov
and
int
mov
insl
push
sbb
push
cmp
fld
inc
mov
cmpsb
jp
or
js
loope
mov
mov
mov
mov
shlb
nop
cmp
jnp
cmc
sbb
push
incl
and
push
int
cmp
sahf
push
adcb
or
cmp
ljmp
jg
mov
and
aaa
xor
movsb
imul
mov
mov
ret
pop
dec
lret
sbb
xor
inc
adc
iret
rcrb
jecxz
shrl
ja
mov
mov
sub
or
cmpsl
int3
scas
mov
dec
mov
xlat
xor
mov
fldenv
or
add
pop
stos
adc
pop
jg
mov
sub
cli
in
aam
inc
mov
and
push
aas
std
call
cs
insl
cmpsl
adc
push
adc
std
xchg
add
add
xor
xchg
sub
sub
cmp
fistpl
and
adc
push
aad
scas
or
xchg
xchg
loope
xchg
xchg
daa
pop
dec
inc
shlb
faddl
jns
fistpll
mov
test
cli
sbb
leave
sbb
xchg
aaa
and
xor
sub
mul
push
cmp
mov
add
cmp
push
aad
cmp
ss
dec
iret
jg
mov
adc
int
arpl
cmp
jl
movsl
or
adc
add
ljmp
adc
cmp
popf
mov
iret
popf
mov
cmp
fwait
inc
cmp
add
inc
mov
js
in
in
xor
daa
sahf
mov
push
mov
imul
xchg
adcb
sub
jle
sar
jmp
movsb
ljmp
shlb
push
aaa
and
cwtl
imul
add
adc
jge
pusha
es
fbstp
test
insb
popa
lret
test
jo
out
fwait
shrl
pushf
in
aas
test
cmpsb
push
cmc
fcmovne
ss
xchg
ror
and
iret
mov
outsl
pop
cmp
mov
psrlw
mov
lcall
pop
fisttpl
sarb
and
imul
out
inc
sub
mov
jns
fs
fistpll
lods
insl
stos
pusha
mov
xor
cmp
pop
and
insl
stos
jle
in
push
xor
lret
add
pusha
jnp
sub
in
cmc
aad
out
int3
fcmovnbe
stos
sub
stos
xchg
int3
add
push
cmpsb
lods
aas
incl
xlat
mov
rorb
inc
jns
pop
outsl
shlb
xchg
pop
sti
cmpsl
inc
xchg
into
aam
into
pop
push
sti
mov
mov
cmp
ja
out
fsts
cltd
arpl
dec
jle
ret
push
loope
push
rcll
js
fiaddl
add
push
add
push
dec
mov
cmpsl
sub
sbbb
xor
push
stos
ss
mov
cld
add
cmp
xchg
int
popa
or
out
ret
mov
cs
call
inc
xchg
and
sahf
jecxz
dec
outsb
push
add
movntq
push
ljmp
outsl
inc
in
imul
movb
sub
mov
stos
mov
push
clc
int3
not
mov
push
movsl
adc
test
pop
outsl
ret
sahf
iret
mov
sub
pop
cmp
ds
pop
subb
xchg
jmp
or
cmp
push
push
insb
cmpl
aas
nop
mov
pop
shrl
mov
jl
test
int
pop
or
or
pop
sbb
inc
stos
and
xor
mov
inc
movsl
popl
leave
jb
mov
gs
lods
insb
aad
inc
cmp
stos
int
rorb
mov
and
dec
mov
sbb
clc
dec
loopne
and
mov
or
fstpl
and
xor
xchg
imul
dec
xchg
inc
and
es
pop
inc
lret
pop
lock
movsl
shlb
daa
jb
hlt
sub
dec
jmp
pop
xchg
arpl
je
cmpsl
add
push
nop
pop
ljmp
mov
pop
lret
push
mov
out
idiv
or
lcall
pop
mov
cmp
mov
sbb
popf
sub
mov
int
in
popa
sub
xor
leave
mov
ficomps
and
ffree
addl
jno
sahf
mov
aam
lret
orl
mov
hlt
fcoms
add
add
test
ret
push
rorb
repz
inc
mov
sub
jp
aas
loopne
fdivs
add
cmp
orl
mov
testl
inc
inc
int3
aas
and
shrl
stos
repz
pop
mov
fwait
scas
lahf
pushf
popf
mov
or
sub
out
bound
dec
mov
pop
addr16
mov
inc
and
mov
shl
jno
in
cs
int3
push
inc
cld
aam
dec
inc
mov
sbbl
inc
cld
out
nop
pop
xor
out
pop
sbb
dec
les
lock
sahf
inc
clc
rclb
mov
cmp
iret
bnd
popf
call
sti
inc
arpl
aad
jge
fsts
popf
push
ret
adc
inc
les
pusha
jns
enter
push
mov
aaa
stc
pop
xor
ja
shrl
out
xor
pop
push
pop
je
push
ret
mov
xchg
xchg
xchg
adc
fs
mov
fcoml
mov
out
mov
sbb
sub
mov
lcall
mov
movsl
mov
push
and
addr16
cmp
jl
lea
decb
ss
mov
lret
into
pop
sub
pop
dec
inc
les
negb
mov
addl
mov
hlt
pusha
adc
xchg
repnz
push
inc
mov
aas
outsb
loop
or
cwtl
fdivrs
call
pop
or
dec
movsb
jle
cmp
sbb
mov
test
test
je
imul
sbb
or
cs
test
dec
sbb
fwait
mov
cmp
ds
sub
adc
imul
test
call
add
adc
lock
in
pop
testb
cld
sti
insb
xchg
jnp
out
shlb
dec
jecxz
jns
bound
add
add
xor
fidivrs
push
call
dec
or
notl
into
mov
dec
cmp
outsb
dec
push
int
ret
mov
xor
mov
cmp
push
cmpb
adc
adc
addl
pop
int3
xchg
or
add
mov
fisubrs
jle
jecxz
sti
enter
mov
or
lcall
inc
ret
pop
xchg
roll
movsl
push
imul
stos
in
cmp
pusha
pop
mov
mov
aas
xchg
cmp
fwait
lods
das
daa
imul
andl
mov
pop
int
pop
push
nop
test
movsb
add
mov
jns
addb
adc
jne
ret
sub
xchg
test
fmull
inc
movsl
sarb
xor
ss
fbld
jecxz
jno
jnp
ss
in
and
aas
sahf
out
lods
je
jo
mov
or
aas
imul
hlt
rol
jge
sti
cltd
mov
inc
inc
test
mov
sbb
and
loope
icebp
push
xor
add
pop
andl
cmc
nop
adc
xlat
jp
cmpsb
pop
insl
dec
pop
stc
add
sbb
sub
push
sbb
cltd
pusha
mov
in
pop
xlat
cmpsb
push
fisubrs
lock
pop
add
jg
push
aam
mov
or
inc
add
cld
cwtl
and
and
int3
sbb
sub
ret
movsb
add
cmp
cltd
pop
outsl
not
sub
pop
xchg
arpl
aaa
inc
add
dec
imul
in
inc
loopne
rol
push
mov
fidivrs
lahf
cmp
lret
pushf
popf
dec
inc
mov
push
shrb
sub
mov
stos
dec
adc
dec
jl
jecxz
dec
iret
xchg
leave
das
stos
sub
push
mov
add
add
jecxz
fmuls
sub
lds
sub
aaa
movsb
fs
jno
mov
rcrb
xorb
addr16
cmp
or
xchg
imul
xchg
sbb
sbb
aam
add
push
pop
xchg
shrl
les
and
mov
popa
call
fstps
mov
inc
jae
add
fmul
fmul
sub
out
roll
mov
dec
in
pop
sti
jns
rcll
push
or
mov
add
inc
std
xchg
stos
inc
movsb
xor
data16
fsubs
xor
js
xor
inc
mov
shrb
adc
sbb
nop
mov
stc
lods
dec
cmp
fldl2t
xor
sub
loopne
mov
fcompl
pop
and
addr16
dec
movsb
pop
sbb
push
inc
push
jmp
push
xchg
mov
pop
adc
or
mov
push
pop
repz
es
nop
mov
nop
cmp
or
inc
sarb
stos
push
sbb
ret
adc
and
leave
adc
lret
roll
sub
jge
xor
fs
mov
add
push
lods
mov
stc
xchg
sub
stc
pop
xlat
andl
mov
xor
movsl
push
repnz
mov
jge
and
fsts
fnstenv
sbb
adc
mov
mov
jbe
movsl
inc
popf
dec
xor
shll
mov
adc
es
fwait
daa
add
mov
out
jmp
adc
xchg
sbb
in
cmpsb
mov
or
lea
repz
mov
jbe
and
jno
je
pop
and
fs
lock
jae
in
outsb
daa
sub
js
push
push
sub
out
mov
add
and
in
and
push
lret
mov
aad
sbb
push
fcmovbe
jbe
push
bound
pusha
decb
xor
pushf
outsl
mov
cmc
dec
push
fneni(8087
xor
jnp
xor
add
stos
adc
sub
sbb
test
and
in
cmpsb
mov
sub
sub
sbb
jecxz
bound
cs
pop
lods
shll
mov
bound
cmp
mov
mov
add
jb
sbb
test
cli
pop
rcrb
incl
pop
fnstsw
adc
mov
stos
outsl
or
push
dec
hlt
in
jae
sarb
xchg
enter
into
add
jge
sbb
xchg
and
in
sbbl
cld
inc
out
sahf
rcrb
addr16
or
mov
mov
inc
mov
pop
pop
jge
fidivl
mov
cmp
dec
les
rclb
jl
and
imul
dec
push
inc
imul
dec
push
mov
lret
outsl
in
mov
inc
aas
repnz
jl
push
loope
lea
test
cmp
mov
cmp
lret
mov
sub
or
rclb
jbe
sbb
stos
movsb
les
mov
sti
jb
cmp
xchg
xor
out
xchg
fcom
jp
pop
push
jns
and
or
enter
cmp
dec
inc
push
dec
mov
adc
jno
mov
out
cmpsl
push
fcmovbe
enter
js
test
xor
xor
xchg
aas
pop
mov
rorl
xchg
lods
imull
pop
dec
lahf
mov
fbstp
pop
ja
xor
add
jo
push
enter
add
cwtl
cmp
repz
lea
je
inc
sub
aas
int3
mov
imul
lods
scas
sub
sbb
pop
ret
cmp
cmp
lcall
mov
ret
mov
mov
pop
stc
push
xor
cmpsl
popa
lea
pop
mov
jne
cmpl
mov
jp
sahf
push
mov
movsb
push
mov
mov
insl
xchg
push
lret
into
adc
jb
sbb
ret
div
pop
jge
mov
stos
imul
sbb
lret
into
inc
mov
xchg
sbb
lret
add
xchg
adc
xchg
mov
inc
inc
jle
and
jbe
icebp
xchg
popa
add
mov
fnstenv
push
mov
add
mov
and
inc
mov
sbb
int
test
ficoml
push
ljmp
and
int3
add
call
fnsave
dec
and
and
fwait
or
mov
enter
jns
cmp
xchg
pushl
sarb
dec
outsb
dec
pop
fs
aam
das
mov
or
pop
scas
test
int3
dec
iret
aas
es
push
outsb
nop
jl
cmc
adc
mov
jge
mov
dec
dec
cmp
xchg
movl
shll
mul
lea
push
cli
dec
jecxz
dec
adc
je
mov
cmp
jle
shlb
mov
movsb
xchg
cmp
andb
lret
jg
xor
cmp
ljmp
rcrb
ja
rcl
and
enter
stos
scas
das
add
dec
adc
orl
inc
cmp
cmp
jmp
inc
mov
mov
fstpl
dec
and
jge
cli
mov
mov
sub
repnz
inc
jno
jae
int3
pop
mov
push
lret
or
xchg
add
pusha
xchg
movsb
sbb
cmp
add
std
inc
in
dec
jl
jg
xor
pop
xchg
jb
loop
fisubrs
jnp
rorb
insl
xchg
loop
xchg
lds
outsb
fstpl
shll
jne
and
das
inc
jecxz
or
lods
push
cmp
and
dec
push
arpl
std
or
mov
xor
sbbl
mov
popf
push
xor
fldl
dec
in
into
mov
in
pop
fsub
jbe
stc
lret
fs
stos
inc
push
pop
imul
sahf
or
xor
adcb
or
das
pop
lods
adc
mov
jae
test
popa
cli
ds
arpl
or
sub
sahf
xor
imulb
mov
xlat
fcoms
cmp
cmpsb
dec
mov
popa
arpl
dec
inc
pop
sub
mov
icebp
cmp
je
imul
pop
sbb
push
out
movsl
sbb
or
or
mov
repz
cmpsl
mov
and
xchg
fsubrp
leave
aam
pop
jmp
mov
cmp
ds
dec
and
imul
add
mov
aad
add
mov
pop
push
std
and
push
outsb
ret
lahf
jle
add
ret
loopne
jmp
mov
push
fs
push
fisubrl
outsb
sbb
shrd
ljmp
dec
xor
mov
mov
adc
adc
xchg
lar
inc
hlt
outsl
xchg
sub
popa
cmp
mov
popl
roll
aas
ja
test
or
xchg
leave
mov
ds
xchg
fisttpl
loope
rcrl
pop
cmp
orl
xchg
add
inc
lahf
pop
mov
sbb
push
loope
pop
or
add
loop
pop
outsl
mov
push
cmp
pop
pop
scas
inc
mov
lcall
xchg
push
sub
in
add
in
lahf
inc
push
sarl
jno
xlat
push
les
jg
ret
cltd
dec
adc
ds
or
nop
or
jle
ret
rorb
cmc
cld
fildll
shl
les
test
mov
cmp
xchg
sub
rorb
fucomip
les
rclb
loop
shl
aaa
ret
sti
dec
fldt
insb
incl
ffree
pop
inc
addb
lret
clc
xchg
xchg
pop
aaa
push
cmpsl
ds
cmp
sahf
pop
cmp
pop
movsb
mov
shrb
fs
cmp
bound
in
test
ja
aad
mov
inc
addr16
dec
incl
mov
push
icebp
jl
nop
hlt
dec
fs
jns
dec
fmul
dec
enter
push
loop
movsb
stos
and
push
mov
push
or
xchg
jb
xor
out
test
add
mov
pop
adc
dec
pusha
xchg
pop
cltd
sbb
fimuls
pop
in
ret
mov
orl
or
out
xchg
pop
aad
pop
icebp
mov
push
xchg
inc
fbld
dec
rolb
mov
pandn
je
imul
add
ficompl
cltd
sbb
adc
inc
popf
les
inc
or
mov
movsb
int
dec
nop
imul
cmpsl
or
jbe
repnz
cli
sbbb
stos
fwait
mov
sti
adc
in
adc
cwtl
or
and
add
stos
jne
inc
sti
sub
movsl
psrad
and
loopne
xor
shlb
ficompl
sub
and
push
add
cmp
push
push
cltd
push
movsb
adc
xchg
mov
or
stos
inc
fcompl
lahf
mov
jmp
icebp
ds
pop
cmp
and
add
std
xor
mov
and
add
ja
leavew
cmp
cmp
mov
dec
lods
lret
pop
nop
shrl
pop
in
lahf
pop
in
in
inc
xchg
jecxz
push
fdivrl
inc
adc
push
push
aad
popa
push
or
ret
lds
hlt
outsl
sti
test
sbb
and
testl
test
cmp
orb
movsb
dec
mov
jmp
stos
mov
mov
fimull
xor
mov
push
ljmp
push
add
sub
fcmovnbe
out
push
popf
popf
bound
test
pusha
jp
enter
push
imul
into
imul
push
rcr
cmp
enter
pop
lcall
ret
mov
cld
jecxz
lea
sub
rcrl
pop
int3
lcall
push
test
sub
jl
mov
push
and
addr16
add
jmp
lds
lods
jle
and
lods
jl
pushf
sub
imul
jmp
enter
jp
cmpsb
nop
mov
not
cld
pop
out
lret
mov
sbb
jg
sub
pushf
dec
lods
pushf
sub
mov
and
test
daa
in
pop
test
mov
movsb
mov
mov
dec
cmpsb
enter
call
hlt
dec
adc
pusha
les
pop
mov
mov
push
mov
ror
or
fisubl
inc
js
cmp
cli
sub
cmp
fs
nop
mov
mov
mov
mov
in
fcmovne
cmp
lds
mov
cmp
jg
shrb
dec
and
pop
bnd
sub
pop
sar
pop
test
dec
and
lcall
leavew
push
inc
out
mov
xchg
mov
imul
adc
mov
aad
les
fidivl
xchg
sbb
jecxz
adc
xchg
and
mov
je
ret
sub
or
aaa
mov
sbbl
rcll
jno
sti
mov
adc
aas
mov
jns
mov
dec
sbb
test
lahf
or
and
pop
mov
fs
rorl
mov
xchg
sti
sbbl
jo
aad
fst
or
mov
out
shlb
sub
les
clc
stos
test
out
cmpsl
and
enter
mov
inc
fisttps
fucomp
jg
dec
xchg
pop
add
xor
pop
sbb
jl
sub
cmp
push
cmp
dec
push
hlt
cld
xchg
sbb
and
mov
sbb
out
xlat
dec
inc
lret
aaa
bnd
daa
and
mov
and
rol
dec
fisttpll
leave
xor
push
scas
or
mov
divl
xchg
into
pusha
iret
or
out
lds
popa
pop
mov
mov
mov
ss
out
inc
xchg
orb
and
pop
lods
icebp
pop
movsb
push
push
push
popf
into
mov
pop
lds
inc
test
cmp
fnstsw
das
out
mov
or
cmp
push
cli
iret
xlat
test
lods
sti
hlt
add
ja
jmp
fidivrs
mov
add
in
repnz
dec
aam
test
mov
icebp
pop
dec
cmp
outsb
jns
sub
jns
mov
xor
stos
dec
or
mov
es
cmp
sahf
inc
lods
inc
daa
and
xchg
in
adc
mov
loope
xor
jmp
lcall
mov
mov
hlt
cmp
in
inc
jno
in
jl
sbb
or
shlb
jbe
addl
sbb
pop
inc
arpl
and
sub
fidivrl
fistpll
mov
xchg
and
push
fiadds
or
iret
inc
mov
and
popa
sub
add
stos
ret
sub
cmp
repnz
mov
cltd
lret
pop
inc
mov
stos
lock
push
loopne
sub
push
or
incb
shl
xchg
rclb
jl
jl
pop
iret
test
je
outsb
pop
sbb
pop
push
int3
push
xor
cld
or
into
insb
cmp
xchg
push
stos
or
push
into
repnz
leave
movsl
in
bound
sbb
cmpsl
mov
or
adc
inc
pusha
pushf
jae
sti
sbb
mov
push
mov
lret
scas
fwait
cltd
push
rcrb
push
dec
leave
std
inc
js
add
pop
movsl
sub
arpl
test
inc
imul
arpl
lcall
inc
inc
jg
inc
orl
andb
cmp
and
out
insb
orl
ljmp
aas
mov
lea
adc
repz
int
sub
jb
ret
dec
jecxz,pn
push
pop
mov
cs
cli
mov
add
mov
add
int3
add
les
ret
push
adc
das
stos
in
je
push
std
add
jbe
inc
inc
not
pop
xor
xor
pusha
push
add
fsubrs
xor
loop
push
jecxz
test
pop
repz
ret
out
mov
test
lods
jp
jno
mov
jg
leave
repnz
mov
cmp
add
aaa
jns
data16
cmp
add
sbb
shrb
jl
xchg
popf
lods
xor
lock
jne
inc
enter
pop
pop
in
in
pop
ret
xchg
lret
add
stc
lahf
xor
ret
ret
int3
fldl
pop
add
jno
pop
mov
xor
sti
or
es
adc
ljmp
pop
mov
imul
fisubrl
shlb
cmpsb
stos
cwtl
push
test
int3
aad
sar
sub
xchg
xor
pop
or
add
inc
mov
mov
cmp
dec
shlb
ficoms
arpl
push
adc
lock
sub
rolb
mov
lea
jl
dec
dec
ds
outsb
sbb
aaa
addb
sbb
cmpsl
jnp
xlat
jle
pushl
pop
ret
dec
push
test
fsubrs
int3
jnp
or
mov
push
test
xor
aaa
pop
in
dec
enter
xlat
mov
cmp
cld
inc
sub
ds
dec
test
lret
loop
movsb
outsb
sbb
sbb
ja
fisubs
lahf
add
and
xchg
popf
mov
aas
pop
lea
pop
int
pop
mov
xrelease
scas
das
setnp
roll
add
enter
xchg
adc
mov
cld
test
jmp
mov
jne
fisttpl
in
inc
loopne
add
inc
inc
mov
into
std
and
pop
test
adc
imul
data16
sub
adcl
mov
cmp
ja
nop
sub
mov
movsb
ror
push
in
dec
push
fistps
add
jge
pop
es
fimuls
jp
jl
mov
pop
test
lahf
aaa
cmp
std
add
pop
mov
pop
fsubp
insb
lret
push
mov
lods
aas
pop
mov
cmp
stos
lcall
xchg
addr16
hlt
mov
stos
xchg
and
pop
fisubrs
pop
daa
aam
jl,pt
pop
mov
iret
scas
jnp
jne
mov
mov
mov
ret
test
ss
stos
repnz
popf
xlat
inc
cli
mov
mov
andps
cli
and
add
mov
mov
dec
jle
into
and
int3
enter
mov
ss
mov
mov
cmp
in
jne
arpl
cs
sarl
cwtl
arpl
imul
ja
add
and
add
mov
cwtl
sbb
push
push
aas
mov
les
fwait
setne
fisubrl
mov
sub
cmp
adc
and
lea
fildl
add
popf
sarl
xlat
jg
fldenv
js
inc
add
movsl
mov
popa
mov
sbb
mov
push
add
jbe
adc
aaa
stos
jecxz
aad
mov
fisubrs
outsl
adc
pop
mov
push
sub
js
les
clc
add
xor
sbb
div
pop
lret
sbb
fstpl
ret
sub
movsl
aam
in
mov
pop
pmaxub
jle
js
in
xchg
and
cmp
and
inc
jne
push
sti
fdiv
xor
repz
xchg
inc
xor
mov
fcmovbe
inc
les
xchg
aam
mov
outsb
fsub
shrl
and
push
pop
sbb
ljmp
push
mov
cli
xchg
fldt
push
gs
inc
addr16
lea
pop
stos
pushf
aam
and
cli
lds
lods
leave
cli
stos
and
inc
stos
push
pop
rolb
xchg
sbb
fidivrs
hlt
push
pop
ret
cmp
das
xchg
mov
mov
mov
mov
mov
pushf
movsb
jns
inc
loope
inc
lock
sbb
pop
pop
popa
xchg
push
inc
add
push
inc
enter
jl
and
call
test
mov
pushf
cmp
rol
jmp
and
leave
inc
mov
pop
sub
sti
push
in
leave
add
nop
jge
mov
ret
jns
or
js
or
in
push
push
jl
sbb
mov
nop
cwtl
cmc
cs
push
adc
jle
in
int
mov
mov
test
dec
add
sub
mov
mov
scas
sar
les
pop
pusha
mov
into
enter
lods
outsl
push
or
or
add
cmp
test
lods
lods
add
pop
movsb
ja
loop
xor
cmp
int
mov
out
mov
test
lret
das
xchg
add
push
repz
sub
cmc
push
xchg
pop
pop
out
out
cmpsl
shll
js
sahf
jae
in
fsubrs
adc
lea
pushw
mov
lods
inc
jmp
inc
bound
adc
pop
sbb
dec
cmp
xchg
xchg
insl
inc
dec
xchg
jo
mov
push
cmp
dec
or
dec
inc
mov
popf
repz
fisttpl
lods
xchg
imul
jnp
fs
pop
loope
dec
jge
lods
sub
clc
fs
jns
repnz
js
insb
aas
enter
mov
dec
rolb
sub
mov
test
aaa
mov
sbb
outsl
sub
fldenv
xchg
int3
aam
sar
das
pop
jno
xor
jmp
cli
cwtl
enter
ds
sarb
js
jecxz
dec
stos
mov
jecxz
push
jo
sbb
inc
rcr
mov
mov
scas
mov
pop
cmp
es
inc
andl
repz
or
lret
adc
sub
inc
test
jne
sbb
filds
add
ds
push
aas
add
pmullw
pop
adc
inc
mov
imul
xor
push
movsl
pusha
es
cmp
jge
pop
inc
push
dec
and
push
and
push
cmp
repnz
lahf
rorb
mov
add
ret
cld
sbb
sti
sbbl
aad
mov
loopne
fisubl
xor
mov
mov
dec
dec
fdivrl
mov
lcall
fs
fsub
mov
xchg
dec
bound
inc
into
aas
inc
xor
pop
push
out
add
enter
cs
test
movsl
jge
inc
xor
out
mov
loopne
cmpb
fldt
inc
xchg
fisubs
mov
dec
adc
ja
mov
icebp
sub
inc
jmp
add
and
nop
fdivrl
sarl
cwtl
push
fsubr
je
bound
out
mov
arpl
dec
int3
sbb
lea
jae
push
pop
push
hlt
or
xchg
push
stc
aas
xlat
popa
sbb
int3
test
iret
es
inc
xchg
neg
sub
sub
in
xchg
enter
or
orb
sub
ret
sbb
stos
mov
fsubrs
cltd
out
je
push
sub
mov
insl
pop
cmp
pop
rorl
fsubl
jbe
lods
icebp
ret
stos
push
outsl
roll
adc
iret
jb
loop
jle
clc
cli
push
sbb
xchg
xchg
pop
loop
xchg
jae
inc
enter
xor
je
jno
dec
pop
xchg
inc
ret
pushw
mov
mov
mov
das
in
mov
ds
mov
fnstcw
lods
and
cs
aas
inc
bound
insl
shlb
push
inc
into
push
and
sbb
fdivr
sbb
lods
xchg
pop
ss
jns
inc
xlat
test
pop
sarb
add
dec
lcall
aad
cmp
pop
jmp
pop
mov
fdivrs
mov
and
lahf
mov
add
cltd
dec
and
mov
mov
stc
pop
push
mov
cmc
pop
jp
xor
es
push
and
ss
push
sahf
cwtl
sbb
pushf
cwtl
sbb
lcall
xchg
cwtl
adc
xchg
cwtl
adc
xchg
cwtl
adc
nop
cwtl
push
into
mov
add
mov
or
pop
jl
push
push
jl
push
add
test
add
sub
add
mov
and
inc
clc
xor
xor
enter
inc
dec
mov
pusha
and
xchg
mov
mov
cmp
les
cmpb
dec
xor
pushf
mov
pop
mov
push
dec
lret
inc
jge
inc
or
test
jl
sub
mov
xchg
cmp
sti
or
cmpsl
sub
push
outsl
or
lds
clc
ja
or
xor
sarl
mov
cld
lods
ret
sarb
mov
mov
pop
inc
out
and
shll
mov
pop
add
dec
dec
xchg
adc
xchg
inc
js
or
or
and
test
cmpb
imul
sub
cmc
js
ret
scas
das
fadd
ficoml
and
sbb
fsubl
push
cmc
lea
jnp
subb
push
lret
adc
or
test
std
dec
dec
repnz
pusha
xchg
push
mov
ja
inc
and
mov
and
or
repnz
aas
ds
aas
push
mov
xchg
xor
xchg
fidivs
xor
sub
sti
lcall
das
loopne
in
lods
jnp
push
pop
mov
lcall
xor
push
xchg
clc
ss
scas
or
or
jge
mov
int
imul
pop
test
or
cmp
call
movsb
inc
mov
roll
cld
movsl
xor
xchg
aaa
je
in
sub
xor
scas
jp
sub
inc
inc
iret
insb
js
out
adc
pop
mov
or
hlt
cmp
ds
dec
pop
lahf
pusha
push
int3
mov
movsb
pop
lcall
sti
xchg
mov
jg
cwtl
mov
cli
xchg
jns
ds
jmp
inc
sub
shll
idivb
pop
jne
in
mov
testb
inc
stos
jle
mov
imul
xor
pop
mov
lea
mov
push
inc
sub
incb
mov
jbe
int
inc
xchg
mov
enter
sarb
xlat
ret
inc
jnp
or
je
js
pop
lret
adc
loopne
push
mov
insl
mov
pop
lea
mov
incl
outsl
push
jno
int
jae
jp
cmp
iret
sub
dec
dec
test
ja
sbb
cmp
mov
push
push
cmp
or
arpl
adc
push
pop
dec
lea
cltd
xor
nop
fiaddl
jl
mov
xor
jecxz
pop
adc
loopne
xchg
pop
lds
xchg
in
loop
mov
xor
cwtl
std
nop
pop
jmp
test
out
cmp
cs
push
inc
lods
into
enter
fcoml
push
pop
pop
dec
out
stc
cmpl
scas
and
dec
enter
mov
mov
fbstp
adc
mov
fimull
js
out
out
or
lock
mov
clc
call
push
dec
aam
xchg
movsb
lock
idivl
jbe
testl
xor
jae
testl
mov
rcrb
cli
push
push
addr16
mov
loope
addr16
stc
addr16
mull
lahf
jge
xlat
xor
jle
cmp
loop
or
in
jae
or
fstl
add
inc
les
dec
call
dec
out
inc
fsubrl
push
xor
test
insl
mov
inc
movsb
jne
mov
ds
ds
mov
not
push
and
cltd
pop
sub
cmpsb
mov
pushf
fs
xor
cmp
les
mov
bound
stc
mov
inc
into
dec
pop
test
popa
iret
adc
dec
lock
ret
insb
push
dec
inc
shlb
jnp
loopne
addr16
lock
test
adc
icebp
loopne
adc
cmp
outsb
test
adc
icebp
dec
bnd
or
push
mov
movsl
jmp
inc
jle
test
push
out
cmp
popa
ja
push
out
and
test
inc
aam
sti
sbb
cmp
sub
push
sbb
adc
aam
into
mov
shr
sbb
or
sub
in
fmuls
ljmp
mov
inc
inc
or
xor
mov
cmp
leave
loope
jg
sbb
dec
shl
mov
aam
mov
sub
pop
fs
and
mov
ds
inc
cld
jo
sub
dec
shl
aas
mov
pop
add
xchg
add
jl
push
jg
cmp
out
or
or
push
or
adc
std
or
adc
mov
fadd
mov
cld
mov
faddp
xor
nop
cltd
mov
cmp
pop
sbb
adc
mov
xor
fwait
je
sbb
out
mov
and
jle
aam
imul
sub
in
push
pusha
dec
xchg
ficoms
stos
xor
stos
enter
xor
stos
and
jne
jecxz
sbb
xchg
in
xor
ret
vucomiss
xchg
insb
fimull
adc
push
into
and
cmp
xchg
or
insl
push
cmp
xchg
adc
jecxz
dec
and
pushf
and
pop
pop
rorl
pop
and
lahf
pop
add
add
or
jmp
ret
das
fsubr
push
mov
xor
and
cld
lods
lcall
dec
sub
add
mov
cmp
dec
test
jmp
fstpt
leave
call
push
stos
in
lea
adc
in
jno
out
mov
and
sti
dec
shll
aas
outsl
xor
mov
inc
cli
out
xor
mov
pusha
loopne
pop
jns
dec
sub
sub
jg
in
sub
jnp
adc
sbb
out
lret
insl
mov
jbe
rclb
je
dec
shlb
push
fistps
fcomps
ret
imul
cmpsl
pop
mov
xchg
aad
ja
aas
push
pop
inc
gs
jge
inc
inc
or
adcl
jno
adc
and
cld
imul
or
and
popa
ret
jno
sbb
ljmp
enter
sar
ja
lea
push
scas
mov
loopne
rcll
sbb
fiadds
lods
and
add
mov
add
cmp
sub
mov
mov
push
mov
dec
xchg
icebp
dec
lods
outsb
scas
sbb
dec
pop
js
pop
data16
jle
xor
or
inc
cli
int
addr16
sub
cmp
aaa
mov
bound
xchg
xchg
decl
icebp
and
mov
das
push
sub
mov
imulb
out
ret
nop
mov
test
addr16
mov
ret
xchg
or
sub
sub
push
xchg
sub
mov
aaa
sbb
jnp
lea
out
ljmp
adc
mov
test
or
jo
xchg
pop
add
ret
je
stos
dec
iret
pop
lds
xor
pop
jnp
pop
sbb
cmp
and
dec
xchg
dec
sub
lods
into
cmp
rcrl
sub
jl
stos
pop
xchg
jg
cmp
adc
xchg
je
movsl
or
mov
xor
mov
cmc
lret
pop
or
pop
push
jge
hlt
test
jne
mov
popl
jbe
es
leave
das
test
stc
mulb
pushf
in
mov
push
std
pop
jge
mov
dec
mov
inc
jb
or
pop
jmp
or
push
sbb
mov
fnstsw
dec
dec
rorl
push
and
outsl
jae
jbe
flds
adc
mov
dec
test
or
lcall
sahf
roll
cs
nop
imul
sub
inc
inc
add
and
arpl
test
lods
lds
jno
test
icebp
pop
jns
xchg
lds
mov
add
mov
enter
and
cwtl
or
pop
fisubrs
mov
into
add
enter
in
and
xchg
enter
ret
inc
scas
adc
jmp
sbb
or
mov
jl
mov
sbb
sbb
sbb
sub
arpl
lahf
jo
mov
das
lock
pop
mov
enter
inc
dec
sub
cmp
push
pop
cmp
fs
ss
aas
loope
test
addr16
sahf
mov
mov
fidivrs
mov
push
jge
arpl
cmp
jle
inc
and
or
and
or
aam
out
addb
mov
pop
or
add
ja
bound
leave
sbb
pop
dec
jae
jg
ljmp
push
loop
pop
leave
mov
sub
mov
add
rcrl
mov
das
inc
xor
mov
mov
gs
inc
and
mov
sbb
mov
xchg
inc
aaa
mov
lods
lret
pop
int
fidivs
and
fsubrl
fmull
sub
movsb
sbbb
xchg
inc
mov
lock
xchg
pop
outsl
popf
inc
adc
fiaddl
cmp
dec
insb
pop
push
ja
dec
mov
je
outsl
sbb
mov
push
mov
in
les
push
mov
cmp
push
leave
xchg
adc
gs
add
mov
std
test
gs
ds
sub
test
mov
add
nop
addr16
mov
punpcklbw
and
sub
push
mov
push
je
mov
mov
and
xor
cltd
xchg
xlat
jge
or
xor
mov
shrb
outsl
adc
sub
cmpb
aas
and
jg
movsb
es
movsb
mov
push
shrb
mov
inc
xchg
fcompl
es
ljmp
xlat
ret
in
pop
sbb
int
cmp
xorb
arpl
or
nop
mov
shlb
nop
mov
lahf
sbb
mov
cmp
mov
inc
push
and
stos
pop
jp
lahf
inc
repz
pop
je
pop
lret
cli
repz
and
pop
arpl
push
push
cmp
xchg
jle
cltd
lods
subps
push
imul
mov
mov
rclb
adc
and
dec
xchg
hlt
jg
ret
je
cltd
in
mov
rorb
icebp
fwait
popl
es
push
and
maskmovq
testl
hlt
xchg
or
add
shrb
mov
data16
mov
xor
pushl
add
or
cmc
test
sub
push
push
dec
cmc
repz
testl
push
stos
xchg
pop
cmc
jg
aaa
push
or
pop
cmc
arpl
negl
fsubs
pusha
fldl
rcll
mov
int
add
inc
jnp
lds
jbe
outsl
aaa
jmp
jae
out
sub
jmp
inc
jae
adc
bound
daa
test
xlat
fsub
and
ffreep
adc
push
xchg
mov
inc
gs
sub
dec
cmp
sub
sbbl
addr16
xchg
sbb
sbb
add
push
rolb
int
jb
xor
pop
mov
mov
sub
cld
arpl
mov
mov
mov
cmpsl
mov
mov
pop
jne
sub
aas
movsl
stos
fstpt
mov
fcoml
adc
stc
pop
push
push
xor
fstl
xchg
jl
scas
pop
push
add
adc
int
cli
adc
jge
mov
test
jmp
ja
adc
sub
mov
call
cmc
mov
ja
and
icebp
mov
cmp
push
stos
lods
jb
fldt
xor
xor
xchg
jp
push
in
jge
ret
ljmp
mov
dec
add
mov
xlat
mov
dec
cmp
or
rcll
fadds
mov
and
addr16
inc
mov
xor
fisttpll
push
fdivrl
mov
enter
dec
mov
iret
rep
insb
jb
gs
cmp
or
mov
xchg
push
in
mov
and
ss
adc
jmp
cmp
mov
xchg
cmp
in
jmp
adc
add
nop
push
add
fidivrs
pop
add
xchg
dec
mov
fidivrs
push
adc
shlb
clc
add
push
jo
roll
pop
xor
shl
xchg
jnp
mov
inc
hlt
dec
testl
and
push
ja
insb
fldt
push
scas
test
into
lock
outsb
repz
les
and
jge
pop
xor
or
jl
mov
sbb
jns
int3
sbb
xchg
addr16
mov
dec
andb
stos
jb
dec
inc
lret
and
sbb
imulb
dec
ja
push
sub
int
sbb
call
cmp
inc
test
popf
jg
frstor
sbb
inc
in
mov
testl
mov
adc
cld
and
aad
jnp
iret
lea
adc
les
pushf
add
jl
ja
inc
hlt
enter
and
in
js
inc
mov
adc
pop
sbb
push
lods
xorb
aas
in
mov
rcrl
pop
cmc
in
xchg
xchg
inc
add
cmp
enter
inc
add
cmp
adc
inc
inc
adcb
mov
xor
and
inc
jecxz
fldt
sub
bound
sbbb
dec
shll
mov
imul
mov
dec
mov
ja
sub
lret
dec
jp
das
dec
mov
bts
nop
cmp
cltd
test
and
pop
scas
popl
jle
mov
sub
xor
push
popa
push
mov
ds
pop
push
or
or
fildl
mov
push
push
sbb
xchg
sbb
pop
push
sub
add
shll
pop
push
popw
xor
dec
adc
pusha
add
sub
imul
mov
rcrb
lahf
aad
fcmovbe
xchg
lods
fnstsw
dec
sub
mov
mov
jo
fisubrs
jno
dec
arpl
adc
push
mov
in
inc
loope
aad
xchg
cltd
lds
int3
jge
push
lret
lea
xor
cmp
gs
orb
repz
sbb
sub
das
add
inc
cs
or
mov
xor
cmp
xchg
insl
pushf
sub
pop
sub
xlat
lds
inc
int3
iret
sbb
sahf
insb
pop
xchg
jns
cld
pop
rcll
fcmovne
cmp
jae
test
mov
mov
inc
jl
or
add
clc
or
jno
mov
leave
pop
fsubl
inc
loopne
push
or
stos
nop
clc
jno
jo
xchg
xchg
and
rcl
jnp
dec
push
int3
sbb
sub
cmp
outsl
mov
sub
popf
mov
lods
mov
mov
jo
xchg
adc
inc
push
rcrl
add
hlt
iret
xlat
gs
inc
jmp
pextrw
insb
jl
clc
psubq
mov
xchg
mov
aam
in
jb
push
pop
je
outsl
dec
popa
rol
jne
pop
mov
jge
jno
mov
jb
outsl
ficomps
pusha
outsb
xor
pop
in
ret
das
mov
sub
incl
ficoml
test
mov
imul
cmp
ja
sarb
cmc
mov
add
xchg
inc
stos
and
mov
lea
mov
xor
add
scas
les
xchg
cmp
cli
push
stos
mov
mov
add
and
adc
leave
mov
addr16
xor
cmc
je
dec
fisttps
inc
mov
sbb
cmp
sub
adc
les
sarl
cmp
mov
insl
xchg
cltd
gs
and
loope
push
fsubrl
aam
aas
cmc
nop
sbb
sub
adc
sbb
mov
pop
push
pop
rolb
sub
mov
cmp
mov
sbb
lahf
repz
hlt
add
in
std
add
movsb
lea
aaa
rorb
push
enter
xchg
mov
push
outsb
icebp
jo
jns
lea
add
pop
fbld
imul
push
les
aam
loope
mov
xor
cmpsb
imulb
jl
fwait
inc
inc
mov
into
popa
daa
xchg
push
add
cmp
lock
mov
orl
cld
cmp
push
adc
repz
fsubrl
negb
lret
aaa
pop
jg
lods
addr16
les
jns
ljmp
push
loope
fsubrl
inc
loop
out
leave
insb
leave
add
adc
nop
test
pop
daa
test
lret
mov
pop
stos
add
enter
inc
sbb
jbe
loopne
movsb
mov
sar
jne
mov
aam
sub
stos
cmp
jge
lea
dec
and
mov
std
addr16
or
lods
inc
pop
flds
push
inc
dec
subb
mov
int3
adcl
adc
mov
xor
pop
push
fcmovbe
fs
xor
jge
pop
push
mov
or
xor
pushf
imul
std
sbb
aaa
cmp
cli
les
dec
or
ret
xchg
daa
xchg
bound
jb
inc
iret
mov
mov
xchg
mov
out
push
xchg
push
daa
adc
cwtl
pop
js
push
mov
enter
stc
stos
es
ljmp
add
jge
mov
sub
scas
addb
push
push
jmp
subl
jp
or
xlat
add
andb
add
scas
gs
jno
mov
inc
shrb
add
outsl
jle
sub
or
cld
xchg
sahf
pusha
lret
fistpl
mov
nop
aas
cltd
mov
scas
test
testb
adc
or
xchg
fidivrl
pusha
outsl
add
pop
dec
inc
mov
outsb
jb
adc
mov
cmp
call
add
mov
inc
cs
lock
ja
xor
cmp
jnp
jg
pop
xchg
mov
and
fwait
xchg
jbe
mov
sub
inc
insl
mov
dec
inc
xchg
mov
jg
or
enter
or
nop
loope
adc
adc
sahf
sbb
mov
jbe
inc
and
xchg
push
xchg
lcall
add
jge
mull
fucom
cmpsl
stos
cwtl
in
mov
repnz
iret
push
fiadds
sub
xor
add
and
xor
ficoms
jno
data16
sbb
in
or
std
and
shl
stc
lods
leave
pop
push
rol
dec
outsb
sbb
mov
cmp
jnp
pusha
adc
xchg
xchg
flds
cs
push
rcll
scas
nop
js
xor
push
mov
xchg
loopne
jle
inc
mov
add
stos
xor
pop
pushf
jnp
fldenv
jno
dec
fcmovbe
push
std
adc
inc
outsl
or
ss
add
add
invd
pop
push
cmp
fildl
jnp
mov
nop
pop
mov
movsl
dec
cltd
pop
aam
jecxz
in
cmp
dec
dec
or
outsb
sub
imul
dec
mov
pop
inc
ret
mov
scas
pusha
std
inc
and
and
add
fcomp
ja
lahf
mov
adc
push
jle
dec
add
lods
cld
fldl
add
sub
jno
dec
mov
xor
push
inc
shl
mov
pusha
mov
add
jno
push
insb
pop
mov
fsts
mov
inc
inc
jno
lea
xchg
pop
lahf
or
js
push
mov
movsb
mov
sbb
pop
mov
jecxz
dec
es
and
imul
jg
and
add
lods
test
aaa
push
mov
stos
pop
lods
mov
movsb
and
scas
rcrb
jecxz
loop
sbb
loopne
mov
cld
xor
xlat
leave
sub
test
inc
rcl
dec
fdivl
pop
imul
jne
testl
adc
push
pop
lods
loopne
shl
sub
jge
fsubrl
jnp
sub
outsb
gs
jo
out
and
mov
into
add
dec
jge
mov
les
xor
pushf
paddsb
imull
xchg
fidivs
imul
std
out
test
or
mov
adc
adc
inc
pushf
mov
es
clc
daa
in
mov
xor
aam
lods
std
jnp
xchg
mov
fstps
or
sbb
test
mov
hlt
and
cmp
mov
jge
cs
mov
mov
imul
addr16
xchg
mov
js
hlt
push
add
cmpsl
adc
and
wbinvd
imul
add
dec
cld
and
sub
aam
xorb
jl
test
mov
jbe
flds
mov
shlb
adc
ja
sbb
and
les
sahf
mov
fwait
pop
add
xchg
fsubs
cmpsl
cmp
cmc
push
jbe
xlat
inc
dec
inc
adc
ja
or
int
sub
loopne
cmp
adc
push
cmp
aas
cld
adc
xor
lods
sub
mov
jmp
pop
in
insb
cmp
icebp
pusha
adc
out
pop
sbb
loope
sbb
int
popf
mov
dec
loope
ficomps
xchg
bound
ficoml
inc
dec
inc
pop
loope
aas
cs
add
movsb
mov
and
jg
add
popf
mov
lds
arpl
subb
popa
xchg
clc
jne
and
cmp
sub
iret
mov
cmp
ret
cld
dec
faddl
xor
inc
daa
mov
xchg
outsl
fimull
dec
and
loope
mov
arpl
mov
mov
jnp
or
popa
sarb
mov
movsl
out
cmp
sub
pusha
mov
lret
jp
or
xor
pusha
rcrb
mov
dec
pop
mov
and
fwait
shll
mov
xor
xchg
jae
daa
rcr
jno
dec
arpl
dec
lret
shrb
cwtl
or
cli
push
popf
sub
rolb
ds
mov
movsb
pop
enter
les
push
or
data16
iret
mov
pop
in
repz
mov
loop
or
inc
mov
lcall
push
test
ret
sahf
add
icebp
xor
stc
sbb
or
jbe
jnp
fcomi
or
loopne
enter
cmpsl
pop
stos
mov
inc
jge
js
lods
xchg
push
ja
and
rorb
and
xchg
insb
xor
cmp
inc
xor
add
or
xor
aam
std
icebp
test
xchg
fwait
cwtl
ret
sbb
or
out
add
loope
cmc
jp
in
enter
mov
lcall
lret
pushf
out
add
push
je
push
inc
lds
push
insl
adc
add
adc
and
fs
mov
mov
les
lret
xchg
fstpt
fsubrp
mov
shll
push
fnstcw
lret
push
lods
xor
or
lret
mov
xor
mov
pop
std
inc
dec
or
and
bound
pop
dec
jnp
sub
or
jb
in
sbb
dec
hlt
sahf
jae
sbb
dec
mov
movsb
jg
dec
jbe
inc
sti
pop
jp
insl
cwtl
popf
push
xlat
shlb
pop
scas
shll
and
adc
test
cld
mov
aas
push
lds
lret
inc
mov
push
jge
fnstenv
roll
mov
xlat
loop
xor
mov
loopne
rcll
sub
cli
pop
xchg
gs
or
sbb
push
mov
and
fistps
fcomps
pop
shl
mov
repnz
int3
xchg
cmp
jle
push
mov
jnp
std
jno
xchg
or
fimull
push
jl
shrl
xor
jle
xchg
fsubl
leave
inc
jns
push
sbb
sub
mov
fadds
inc
lods
mov
pop
loop
setb
push
or
adc
push
mov
sub
loop
mov
or
xchg
push
inc
ret
dec
inc
jp
push
add
ret
or
rol
or
popf
fcomi
jecxz
dec
jnp
xor
push
ja
inc
jne
mov
cmp
fadds
push
iret
enter
add
mov
xchg
jae
and
jp
dec
add
sub
lock
movsl
clc
lea
shll
cmpsl
adc
daa
ss
lahf
jno
mov
jno
or
sbb
jg
sub
sbb
xchg
add
xor
dec
and
add
dec
fadd
outsb
push
adc
insb
mov
pop
sub
lcall
mov
mov
sbb
xor
mov
and
xchg
sbb
mov
into
and
adc
test
sub
dec
pop
dec
imul
xlat
and
stos
lea
adcb
lahf
inc
mov
inc
in
cs
xlat
xchg
sti
shrb
push
add
xorb
mov
inc
push
or
jno
mov
popf
test
sub
lahf
push
jg
dec
mov
outsl
ret
stos
je
imul
ss
xor
bound
cmpsl
ss
out
push
mov
outsb
int
xorb
pop
jge
or
push
mov
add
pop
mov
nop
movsl
inc
in
xchg
pop
and
int
test
ljmp
into
iret
aaa
je
xchg
sub
inc
mov
test
into
mov
xchg
movsb
cmp
lea
mov
cmp
jne
daa
icebp
pop
xor
shl
out
jp
sbb
mov
cli
hlt
add
cmp
jmp
pop
cwtl
int
mov
add
or
int3
mov
cld
or
sub
int3
adc
mov
cmpl
dec
add
and
adc
cmp
mov
mov
push
push
fdivl
pop
jg
cld
shll
pushl
xchg
inc
mov
xor
xor
mov
push
inc
xchg
lock
inc
add
cwtl
arpl
xchg
push
cmc
mov
mov
sbb
ja
cltd
pop
rclb
outsb
mov
aaa
inc
enter
jmp
cmp
ret
insb
inc
sbb
or
push
test
mov
dec
das
add
addr16
fstl
xor
inc
faddl
rclb
or
fistpl
std
push
mov
stos
xor
or
mov
lea
loop
popa
shll
xor
movsb
lds
outsb
mov
cltd
push
sbb
insl
jae
fsubl
and
fadd
xchg
hlt
push
shl
out
fcompl
fucomi
jb
xlat
cltd
and
sbb
aas
enter
xor
pop
mov
push
xchg
mov
cmp
jno
dec
mov
jmp
mov
or
pop
and
push
fiaddl
or
push
data16
sti
cld
push
add
les
or
lcall
adc
push
or
jns
rcrl
adc
add
jle
lds
xchg
fwait
jo
fisubrl
fs
push
shlb
outsb
push
inc
mov
ss
xor
test
push
mov
or
jnp
fwait
mov
inc
mov
inc
mov
cli
adc
sub
pusha
or
inc
into
jge
call
loope
rcrb
jecxz
int
xchg
mov
pop
cmp
cld
xor
add
mov
dec
mov
lea
outsb
push
push
leave
fdivrs
cmpb
loopne
dec
out
jle
pop
lret
imul
mov
pop
dec
call
inc
inc
lods
and
inc
es
dec
sahf
clc
insb
jg
clc
and
or
mov
jp
lds
and
or
sarb
test
sbb
sbb
movsb
subb
clc
aas
flds
or
cmp
lcall
sbb
cmpb
pop
out
jmp
repz
mov
test
out
xchg
outsl
mov
mov
inc
pop
add
lret
xor
cs
xchg
dec
fcmovnb
out
bound
hlt
cli
ja
mov
sub
xchg
jbe
xlat
sbbb
add
aas
push
mov
dec
out
push
mov
jae
in
sbb
test
outsl
mov
xor
xorl
xchg
aam
adc
scas
outsl
js
fwait
iret
mov
mov
xchg
jns
iret
mov
out
cmp
loope
scas
aaa
lret
xchg
int
test
xchg
inc
jbe
pop
mov
pop
movsl
ficoml
js
ds
cmp
fistpl
push
dec
nop
pop
jno
les
pusha
es
add
sbb
cmp
push
xchg
mov
cmp
xchg
add
inc
es
loope
stos
push
xchg
divb
sahf
and
nop
inc
lret
out
adc
pop
fucomp
jns
xor
and
stos
cli
pop
hlt
pop
jl
or
add
jne
inc
or
mov
stc
insb
cmp
in
addl
jnp
lret
lret
hlt
push
lock
andb
xor
mov
or
out
out
ret
jmp
std
cmpsl
pop
sub
sahf
add
js
cli
and
ja
jo
pop
jno
cld
lods
jge
in
cs
ja
insb
pusha
sbb
jl
scas
add
lret
xchg
into
pusha
push
cmp
xchg
movsl
into
xchg
jmp
and
repnz
add
pop
add
imul
add
cmpsl
xorl
adc
shrl
pop
xchg
cmc
mov
jp
dec
dec
cmp
jae
les
fldcw
sar
ds
lret
mov
pop
test
out
into
jge
test
dec
sbb
push
loopne
daa
fwait
inc
es
jne
push
jae
enter
sbb
stos
mov
aad
aas
add
lcall
or
getsec
ja
mov
jge
andl
fstpl
inc
ds
imul
push
mov
or
mov
ljmp
xor
adc
and
fwait
roll
dec
or
loope
jmp
and
subb
insb
mov
mov
test
dec
and
xlat
mov
ror
and
push
add
lret
mov
push
xchg
jnp
cmp
mov
ret
adc
and
in
dec
pop
cwtl
ds
pop
jecxz
dec
mov
xor
mov
cwtl
nop
mov
leave
mov
mov
ja
call
mov
and
ret
ficoml
imul
arpl
push
out
in
dec
in
and
jns
testl
ret
add
stos
inc
push
mov
xchg
js
inc
jae
add
cmp
jmp
or
ret
pop
inc
push
int
inc
test
mov
imul
dec
cmp
push
iret
dec
imulb
popf
inc
iret
subb
ror
test
add
std
mov
testb
repnz
cmpsl
jb
xchg
sti
popa
cmpb
ds
arpl
mov
add
mov
clc
jae
loop,pt
push
fimuls
addr16
xor
inc
push
sbbl
std
cld
cwtl
lcall
insb
or
sub
adc
cmc
imul
pop
outsl
cmp
imul
mov
jecxz
xchg
inc
sbb
mov
adc
push
or
ja
and
mov
and
imul
push
mov
rclb
imul
pop
daa
rorb
or
les
lcall
int3
dec
jg
xchg
jb
repz
lock
sub
jno
inc
xor
icebp
popa
mov
out
js
cmp
pop
xor
dec
pop
jnp
cli
xchg
jg
push
pop
repnz
pop
imul
in
fsts
add
sub
or
or
jo
and
dec
cli
or
shlb
or
mov
cmp
sbb
js
xchg
enter
int3
sti
mov
jmp
notl
push
stc
test
cmp
andb
mov
cmp
jae
std
adc
mov
loop
mov
sub
cltd
jle
jnp
jmp
popa
cmp
inc
es
lds
out
xchg
push
and
push
push
sahf
or
mov
mov
xchg
insb
inc
and
push
pusha
sbb
push
or
mov
or
mov
or
cmp
sysret
stos
pop
or
imul
std
ja
in
push
cmp
mov
mov
jp
movsb
fs
pop
mov
xchg
xchg
lcall
sub
xchg
int3
mov
dec
cli
fidivl
mov
pop
movl
sub
lahf
xor
and
stos
in
stc
jle
add
fmull
adc
fs
les
mov
add
push
in
cmpsb
mov
sub
fs
inc
fwait
mov
jne
pop
jmp
jo
pop
movq
in
loope
hlt
testb
or
repnz
stc
mov
scas
xor
jecxz
test
mov
stos
outsb
cmp
ret
mov
sar
shlb
stos
jecxz
pushf
dec
dec
push
xchg
or
and
push
shll
jnp
shll
out
mov
lds
add
xchg
lret
add
fs
out
outsl
pop
mov
xor
inc
xchg
aam
test
mov
push
data16
sti
adc
test
xlat
push
xchg
movsb
jo
xor
movsl
push
or
imul
or
pop
loopne
mov
in
sub
adc
adc
int3
cmp
rorb
hlt
mov
pop
imulb
adc
sub
sarb
xchg
pop
add
xchg
data16
or
add
sub
push
int
and
mov
test
fisttps
push
pop
bound
add
push
mov
int
dec
mov
cmp
add
testl
jge
sbb
mov
icebp
sbb
and
jge
out
mov
pop
xchg
popf
lret
push
adc
add
loop
lret
push
and
xchg
sbb
cmp
ret
nop
pop
and
les
add
cmp
push
mov
leave
out
inc
mov
adc
xchg
inc
popf
movsb
sub
popf
lods
pop
lcall
pop
sub
cmp
out
in
or
adc
ss
mov
jb
cmp
cmp
and
cmp
decb
fs
sti
jbe
addl
mov
jmp
sub
or
out
addl
mov
jle
pop
ret
in
inc
test
dec
jne
lcall
std
les
xorb
test
mov
das
xchg
inc
add
and
cwtl
mov
and
movsl
sub
filds
loop
mov
mov
repz
addr16
jae
and
push
sbb
fcmovbe
fwait
enter
xor
pop
pop
int
dec
mov
add
popf
scas
inc
mov
sbb
jbe
orl
insb
sbb
xchg
mov
or
cmp
inc
inc
and
shrb
mov
das
flds
cmp
std
push
add
jecxz
lcall
inc
mov
push
fldt
loope
pop
mov
cs
sub
adc
and
mov
add
lcall
jno
cmc
and
push
je
pop
daa
lea
decl
mov
subl
mov
rorb
dec
mov
push
xchg
test
inc
push
inc
stos
and
add
aas
data16
add
cmp
adc
les
dec
cmc
and
sbb
dec
pop
fcmovb
cld
fsubrl
adc
xlat
and
lret
fmuls
jne
aad
rorb
and
mov
rorb
push
add
inc
aaa
sub
xchg
js
push
arpl
out
jne
movsl
mov
or
popf
hlt
xlat
inc
and
iret
rorb
xchg
sbb
jecxz
lock
fmuls
es
lea
mov
daa
ljmp
adc
and
jl
xchg
pop
repz
fmuls
mov
adc
inc
and
and
xor
lahf
in
adc
mov
ja
sub
inc
bound
mov
jle
sub
xchg
cmp
ret
lock
lods
icebp
stos
int
mov
shrb
roll
inc
mov
mov
fsubs
es
enter
inc
mov
cmp
add
inc
jle
stc
notb
xchg
sarl
das
clc
xor
cs
je
fwait
inc
dec
mov
xchg
cmp
loope
ret
xchg
sahf
es
rol
es
lret
jnp
stc
mov
frstpm(287
xchg
inc
lds
adcl
aam
dec
in
sub
or
scas
sub
out
push
outsl
das
xchg
pop
mov
inc
adc
mov
push
ret
pop
or
push
cmpsl
pop
fs
mov
push
pop
add
les
mov
mov
lret
inc
mov
jae
repnz
cmp
cwtl
inc
std
adc
std
pushf
jno
subl
pop
pushf
movsb
push
bound
outsl
and
aam
sub
popf
mov
xor
outsl
fistpl
in
std
inc
ret
jnp
adc
enter
mov
xchg
lods
sub
mov
imul
fimuls
mov
jne
dec
mov
jp
mov
dec
pop
xor
dec
fcomps
xchg
aas
repz
jp
lcall
movsl
pop
outsl
lods
ror
xor
inc
lock
test
mov
sahf
aam
jp
jle
in
cmp
mov
repnz
mov
ljmp
jo
ret
bnd
dec
movsl
pop
mov
jnp
mov
xor
xchg
sub
lods
stos
xor
mov
xor
in
andb
xor
in
pop
add
xor
inc
dec
popf
adc
enter
adc
jecxz
mov
add
and
mov
inc
mov
int3
in
add
adc
and
add
jp
pop
xchg
mov
or
scas
nop
jo
xor
fsubrs
std
push
fldenv
pop
xor
lea
dec
shrb
addr16
cli
jp
sbb
add
clc
pop
inc
aam
fiaddl
jnp
adc
sbb
and
add
adc
ss
mov
pushf
lahf
cmp
push
lret
mov
daa
pop
ja
mulb
fstpt
inc
adc
jmp
jecxz
test
mov
sub
mov
add
les
jmp
adc
pop
lea
sub
xor
mov
and
jmp
in
mov
jo
clc
mov
jns
sbbl
in
cmp
inc
or
and
call
test
stos
test
pop
ret
repnz
iret
stc
jecxz
insb
adc
pop
pop
xchg
jge
in
or
dec
jbe
mov
xchg
icebp
daa
js
into
in
mov
mov
lret
loope
jecxz
cmpsb
in
cmp
jmp
aaa
dec
shlb
mov
dec
mov
fidivrs
sti
sub
jo
jl
pop
add
xchg
cmp
mov
leave
test
jns
push
or
mov
push
sub
rcrb
dec
scas
add
xchg
test
lea
sub
cmpsb
ret
imul
sbb
xchg
lret
pop
mov
xchg
xor
mov
stos
pushf
jge
cmp
int
ja
lock
mov
sub
or
in
dec
dec
push
inc
adc
mov
inc
inc
stc
cmpsl
add
test
insb
mov
adc
out
cmpsl
fcompl
leave
mov
mov
insl
mov
xor
cmp
imul
aad
inc
test
outsl
ret
jns
or
xchg
sarl
lock
or
cmpb
stos
lock
mov
mov
jb
jae
sub
enter
mov
out
stos
cmp
pop
xchg
les
pop
lds
inc
imul
or
lds
cld
lret
mov
xchg
add
cmpsb
repz
roll
inc
mov
adc
mov
pop
inc
mov
cmp
and
xchg
pop
std
mov
scas
out
sub
insl
shlb
dec
jge
into
loope
inc
mov
sbb
or
hlt
popf
in
ja
clc
int
dec
or
les
stc
ret
mov
enter
xor
sti
cltd
mov
fcmovb
rclb
into
cld
and
imul
add
cmp
jae
inc
cmp
inc
into
push
or
push
pop
les
inc
push
jo
and
pop
negl
push
mov
cli
push
pop
mov
test
mov
fisubs
in
stc
pop
aad
mov
sti
jns
jg
outsl
cmp
enter
inc
inc
cmp
leave
leave
outsb
cwtl
call
fistl
xchg
out
mov
repnz
outsl
imul
xor
mov
add
mov
mov
xor
pop
inc
cmp
sub
popf
mov
push
mov
sub
push
mov
mov
mov
inc
imul
mov
je
repnz
repz
or
jnp
inc
test
cli
and
or
fs
roll
test
xchg
mov
and
and
loope
xor
xchg
fcoms
rol
sahf
pop
shrl
dec
lret
mov
add
pop
sub
xchg
and
mov
sbb
pop
hlt
add
cwtl
test
pusha
fwait
aas
add
icebp
js
push
divb
inc
arpl
scas
cmp
iret
mov
shrl
rcrb
or
push
aam
testl
xor
push
das
pop
push
mov
xchg
inc
int3
stos
or
sbb
aam
dec
lret
sbb
mov
ja
insb
adc
and
add
addl
gs
sub
adc
out
or
xor
dec
insb
popa
jg
out
xchg
cld
xchg
pushf
enter
mov
mov
mov
adc
sbb
add
pop
mov
pushf
lods
push
js
jl
push
pop
jnp
mov
repz
push
mov
fdivrl
add
and
fldl
lds
in
repnz
xor
dec
jb
inc
fsubrp
jbe
mov
inc
inc
push
adc
jmp
lods
mov
aas
iret
sub
mov
lods
aaa
xchg
testb
sub
clc
cld
jb
icebp
jo
dec
daa
rolb
sbb
sub
incl
pop
sbb
sbb
dec
int3
fsts
xchg
rorl
repnz
popf
inc
testl
fisttpl
mov
mov
nop
test
out
pushf
mov
cmp
int
mov
pop
add
cwtl
mov
mov
negb
push
dec
jae
lahf
testb
inc
js
dec
cmp
xchg
inc
add
test
mov
jns
mov
dec
lahf
int3
leave
inc
pop
xor
or
sub
push
pop
cmpl
push
mov
testl
xlat
push
or
shll
notb
xchg
cmp
fcoml
gs
cmp
xor
jmp
lahf
sbb
jg
mov
mov
push
cld
sub
pop
test
sub
jg
in
mov
sub
addb
dec
psubusb
inc
mov
out
jne
xchg
fists
mov
std
icebp
fucomp
adcl
sti
pop
inc
repnz
stc
dec
pop
insb
dec
sbb
xor
sub
subl
cmp
sti
mov
clc
sbb
xchg
pop
scas
cld
and
xor
insl
stos
pop
dec
fcmove
xchg
add
mov
add
int3
mov
and
adc
testl
imul
loopne
push
cmp
mov
xchg
inc
sti
std
push
jp
bound
cmp
adc
cmp
out
mov
out
sti
fildl
mov
dec
or
rcrb
and
outsb
pop
xchg
fs
cmp
xchg
xor
jp
mov
ror
mov
rcrl
inc
movsb
cmp
push
push
ljmp
mov
mov
mov
arpl
mov
xchg
mov
sub
fs
pop
dec
mov
ja
lret
rcrl
push
dec
fcmovnbe
dec
shrl
sbb
andb
lret
out
shrl
je
dec
dec
les
add
out
cmc
dec
aaa
inc
or
movd
push
dec
ljmp
sub
fisubl
mov
iret
mov
dec
cwtl
stos
fimull
imul
std
sbb
push
xchg
dec
inc
dec
mov
ja
pop
mov
aas
adcl
mov
push
flds
push
lods
cltd
movsb
pop
jb
mov
sub
lds
dec
add
pushl
push
ljmp
sub
sbbl
dec
mov
fs
rclb
pop
add
mov
and
popf
sbb
lea
pusha
push
shrb
cmp
lods
adc
loopne
lea
and
pop
lods
arpl
pop
lret
add
adc
decb
mov
push
mov
mov
addb
cld
mov
mov
xchg
mov
sub
insb
xor
shrl
movsl
cmp
mov
dec
cmc
mov
movb
push
adc
and
rcll
int
movsl
loopne
pushl
fists
fbstp
sbbb
pop
nop
in
dec
lea
subl
movsl
push
lahf
movl
sahf
inc
xor
int3
fcomps
sub
addl
fbld
add
mov
in
push
mov
pop
mov
and
je
jno
dec
mov
int
mov
ficoml
mov
mov
adc
or
add
mov
push
imul
xor
xor
int
popf
xchg
sar
push
inc
rolb
fisubrl
dec
lcall
gs
sti
mov
pop
bnd
jo
jnp,pt
pop
xchg
adc
addr16
mov
pop
lock
pop
cmp
or
bound
roll
mov
pop
ja
cmpsl
scas
stos
les
hlt
cmp
pop
or
blcic
lret
and
aad
dec
mov
dec
arpl
mov
in
movsl
pop
movsl
xchg
outsl
out
adc
mov
stos
repz
xor
xchg
push
lds
cli
xor
or
mov
mov
xlat
sbb
data16
push
loope
dec
rcl
nop
fidivl
ja
mov
faddp
push
shll
mov
dec
mov
inc
xchg
cwtl
out
faddp
mov
aas
or
sbbb
imul
mov
mov
jnp
add
fndisi(8087
xor
xchg
sub
lock
roll
dec
mov
dec
inc
or
cmp
rcrb
lods
adc
insb
cmpl
pop
jb
pop
enter
rorl
mov
cld
mov
iret
imul
nop
rcl
cmpsb
shll
dec
fwait
adc
aas
arpl
into
imulb
lods
cmp
imul
pop
ds
jmp
cmp
ljmp
test
mov
dec
mov
fisubrs
stc
call
add
cmc
mov
fs
xchg
cmpsl
inc
scas
loopne
mov
mov
or
xchg
test
inc
in
adc
add
xlat
cmp
test
adc
fsubrs
adc
lea
fistpl
sub
in
sbb
mov
add
inc
mov
mov
scas
mov
movsb
xchg
lock
fisubrs
mov
jmp
ret
add
sub
xchg
fidivrs
outsl
inc
push
enter
in
pop
dec
and
in
jbe
jge
out
out
and
cmc
ja
cmp
sahf
daa
incb
mov
pop
out
lock
enter
nop
xor
sbbb
out
jns
lock
aas
lcall
dec
cmove
add
cmp
mov
xchg
push
pusha
xor
or
shlb
add
xor
pusha
mov
pop
pop
arpl
imul
leave
mov
and
fnstenv
lahf
cld
mov
shll
and
xorb
mov
loop
aad
xchg
and
cmp
jmp
imul
pop
pushl
or
and
aas
or
mov
std
or
sbb
jg
xor
or
fucompp
xor
adc
xor
jne
mov
pop
push
cltd
or
arpl
mov
loop
scas
ret
sbb
cli
icebp
add
incl
jo
pushf
lods
scas
lock
test
xchg
mov
shll
add
xor
fwait
jns
ret
jle
and
jl
icebp
pop
iret
inc
sahf
outsb
ret
dec
ret
pop
in
mov
adc
jg
les
fsubr
fistps
push
or
jnp
mov
cli
sbb
fmull
mov
mov
xor
clc
mov
add
sarb
or
cmp
mov
mov
xchg
mov
add
fs
out
push
cltd
jp
jo
test
dec
push
mov
stc
xorl
mov
mov
icebp
inc
shlb
mov
add
xor
sub
mov
jecxz
repz
ljmp
sub
xor
in
fistpl
xlat
mov
sub
xor
ret
out
pop
inc
cltd
mov
cmpl
fwait
enter
push
js
loopne
xor
loop
fsts
and
cli
fildl
je
das
inc
pop
ret
mov
lods
adc
add
out
fidivrl
push
cmp
ficomps
std
pop
bound
dec
cltd
pushf
iret
mov
inc
insb
mov
aam
sbb
xchg
xchg
mov
fimuls
cmc
jle
xchg
das
inc
or
dec
jecxz
jl
jg
movsl
dec
sbbl
and
sub
cli
add
pusha
cmc
fdivrl
fidivl
call
mov
dec
jge
lcall
ss
and
cmp
sub
add
out
sbb
loopne
lds
fimuls
cmc
mov
lds
push
fmull
pop
les
lcall
mulb
sub
push
pop
cld
cmp
loop
push
in
outsb
enter
xor
inc
mov
or
imul
xorl
in
fnstsw
rolb
cmp
xchg
add
leave
inc
sbb
fs
call
fsts
psubd
repz
cwtl
sub
cli
jmp
not
adc
cmp
mov
in
adc
xlat
lcall
xchg
pop
int3
xchg
adc
lret
add
add
dec
sbb
push
xchg
jno
dec
rorb
movsl
adc
pop
cltd
push
and
inc
cmpsl
fimull
xchg
or
ds
repz
dec
push
movsl
andl
lcall
sub
sbb
dec
jae
mov
stc
js
mov
or
int3
cwtl
xlat
xchg
add
leave
pop
add
jg
pop
mov
inc
and
jmp
xor
iret
mov
outsl
scas
add
repz
jp
mov
pop
mov
dec
loop
and
adcb
es
movsl
addl
outsb
cmp
data16
cmc
pop
sub
push
fstpt
xabort
add
std
xchg
pop
jbe
push
fdivrs
insl
ja
cld
popa
pop
lods
or
push
mov
lea
ret
add
mov
inc
roll
ljmp
aad
sub
gs
cli
inc
or
jge
and
mov
and
mov
fsts
mov
ret
push
sti
std
pop
push
adc
pop
fs
movsl
sti
adc
test
std
shrb
pop
xor
mov
xor
xor
mov
shlb
enter
adc
mov
in
pop
stos
or
or
je
pop
aad
test
mov
dec
cmp
pop
cmp
sbb
mov
dec
jge
mov
sbb
jno
dec
out
test
push
divl
jecxz
sbb
mov
add
sbb
push
enter
dec
adc
pop
je
leave
sbb
mov
inc
sbb
in
shrl
jle
inc
movsl
sbb
adc
cmp
loopne
sbb
fs
into
mov
sub
lods
push
xor
adc
popa
xchg
mov
jno
jp
jge
in
movsl
sbb
subb
push
xchg
mov
shl
popf
pop
jp
cmp
jg
push
sbb
inc
lret
add
repz
inc
stos
lcall
shll
aad
and
and
mov
sub
mov
pop
inc
js
push
lret
or
or
mov
add
pop
das
ror
repz
inc
leave
xor
dec
test
lods
repz
mov
xchg
push
lret
mov
sbb
testb
mov
imul
pop
jmp
pop
mov
movsb
cmpsl
add
lcall
adc
pop
lds
sub
push
cmpl
decb
mov
je
loop
mov
add
pop
adc
jnp
or
sbb
out
dec
adc
cmp
xor
dec
lret
sub
or
mov
call
sbb
push
mov
insl
lods
dec
jecxz
in
pop
mov
lcall
mov
int3
daa
into
mov
inc
clc
loope
lret
mov
imul
sub
or
xchg
xchg
cwtl
mov
and
pop
jne
test
xor
mov
mov
push
stos
sub
fdivrl
cli
and
leave
or
dec
andb
push
das
arpl
mov
cmp
lret
push
subl
sub
neg
adc
cmp
lret
sub
ljmp
adc
cmp
stos
cmp
insb
dec
mov
mov
jl
or
ljmp
sub
sub
outsb
shlb
mov
repz
sub
jb
jb
xchg
cs
sub
or
pop
dec
loopne
mov
xchg
mov
ret
mov
ret
mov
pop
adc
adc
sub
xchg
stos
xchg
aam
or
inc
push
jecxz
xor
add
mov
ljmp
adc
mov
out
dec
mov
fisubrs
scas
lds
negb
cs
mov
inc
lret
cmp
dec
test
sbb
lahf
sbb
pop
out
or
dec
mov
adc
sbb
xchg
cmp
jle
sbb
jns
jo
scas
jge
lahf
lock
fucompp
shll
inc
sti
nop
pusha
or
ret
pop
jmp
push
pop
xor
aam
or
in
outsl
pop
adc
icebp
add
xor
mov
mov
subb
and
leave
sbb
ss
jg
mov
dec
jle
mov
adc
and
enter
cltd
pusha
aam
jp
sub
fimull
bound
mov
cmp
sub
inc
mov
inc
cmpsb
xchg
gs
cltd
mov
ds
pop
gs
xlat
xchg
dec
sarl
push
xor
punpckhbw
addr16
jmp
add
pop
mov
out
in
and
enter
jno
jbe
iret
insb
xor
shrb
sub
rolb
dec
adc
mov
fdivp
lods
leave
inc
bound
xor
mov
int
cmp
ljmp
ss
test
inc
mov
test
je
mov
cmp
sbb
insl
inc
or
lds
icebp
int
mov
jecxz
jg
in
outsl
jmp
call
adc
dec
fisttpl
mov
andl
sbb
lret
imul
ss
fisubrl
mov
dec
imul
xor
mulb
addr16
ficomps
sti
pop
leave
inc
cwtl
aam
dec
xchg
outsb
push
lock
outsl
jmp
jnp
lds
sub
fisubl
dec
fs
mov
push
mov
sub
insl
push
pushf
mov
inc
mov
and
xchg
loope
jge
out
sbb
imul
mov
insl
vprotd
loope
sar
jl
dec
sub
or
movsb
jae
or
xchg
int3
call
cs
fdivr
movq
jl
ret
sub
and
add
mov
inc
push
dec
sub
and
cmc
fcmovnu
fsubrl
add
movsb
mov
cs
outsl
cs
repz
pmaddwd
pop
mov
pusha
clc
xchg
lcall
lret
outsl
btc
shlb
fadd
add
jno
xor
xchg
scas
adc
xor
xchg
jbe
cmp
fwait
sbb
inc
fildl
stos
cmpsl
enter
inc
es
cmpsb
jp
repnz
jmp
or
cmp
sbbl
jl
or
push
sbb
std
ja
movsb
push
pusha
add
jecxz
xor
jl
leave
enter
rcrb
jmp
cmp
add
xchg
sub
fwait
sti
fists
stos
hlt
dec
lods
mov
or
push
lahf
lret
fwait
or
cmp
mov
xor
pop
pop
or
or
mov
or
stos
mov
lcall
xlat
adc
repz
inc
mov
add
xlat
fistl
sub
ja
jnp
fwait
les
aas
enter
int3
xor
xchg
incb
imul
dec
movsl
push
pushf
insl
sbb
push
dec
sbb
mov
out
push
cmp
test
orb
lahf
nop
adcl
mov
nop
in
xchg
sti
add
movsb
cmp
xchg
lds
pop
mov
dec
int3
rcll
sbb
push
ss
in
ss
aaa
int3
and
leave
arpl
lahf
pop
xlat
cmp
out
or
ret
add
shlb
pop
mov
aad
call
and
sti
ja
inc
and
das
xor
loopne
enter
or
jecxz
mov
sbb
or
jge
dec
nop
jne
sti
adc
stc
pop
rorl
aas
mov
push
push
stos
adcl
icebp
cmp
push
pushf
push
xor
lea
imul
out
push
lods
mov
mov
lret
mov
es
nop
in
sbb
test
sub
insb
insl
xchg
pusha
sub
push
pop
cmc
add
push
imul
mov
test
xor
push
mov
shrb
xlat
xchg
pop
insl
inc
nop
and
pop
insl
add
movsl
inc
xchg
dec
mov
adc
xor
jbe
jae
addr16
xchg
js
in
out
out
lret
mov
mov
test
pop
ja
fnstsw
fbld
inc
into
aas
dec
clc
or
ret
xor
jp
aad
aam
lahf
sub
hlt
sub
sbb
dec
inc
lds
loope
push
outsb
cmc
aaa
add
dec
jno
cld
pop
outsb
jecxz
or
adc
fldenv
imul
ret
pop
mov
sub
lcallw
insb
popf
lcall
js
mov
daa
inc
add
jno
or
push
xchg
repnz
fwait
lods
int3
push
push
lods
subb
inc
cltd
xor
jbe
mov
bound
popa
cmp
mov
rol
xor
sub
push
and
insl
mov
repz
repz
jle
lods
and
shrl
jns
outsb
fadds
add
pop
pushf
repz
xchg
cs
mov
mov
sub
lock
jno
sbb
push
or
scas
sub
in
mov
lcall
xchg
jmp
cmp
aaa
mov
add
into
adc
mov
adc
fcmovu
pop
and
int
sbb
mov
dec
je
adc
int
cmpl
sbb
jecxz
mov
cli
sub
aam
fs
enter
in
das
dec
aas
sub
repnz
sti
cmp
pop
xchg
fs
mov
cmp
cld
sub
cmp
and
fimuls
sarb
and
lea
and
enter
fadds
and
bound
nopl
inc
sub
and
and
or
insl
ficomps
mov
sbbl
jle
push
and
in
aam
inc
aas
mov
xchg
movsl
int3
or
or
jle
scas
enter
mov
cmp
sarl
ljmp
sbb
pop
imul
outsl
jns
pop
dec
push
mov
inc
cld
dec
ja
or
movsl
loope
add
popf
jae
pushf
pop
jg
test
xchg
mov
fstps
xor
cwtl
adc
sub
hlt
xchg
shll
rorb
or
push
shl
ret
and
push
lods
sbb
into
jl
movsb
cmpb
or
and
and
ss
mov
adc
jp
or
in
sarb
sub
enter
ds
push
xchg
pusha
fdivrl
shr
out
sbb
mov
imul
sub
mov
in
mov
adc
imul
cmpsl
xchg
xchg
add
fisttpll
add
xchg
adc
cmp
sbb
sbb
inc
dec
daa
jb
aaa
jecxz
aas
jb
add
scas
mov
sub
or
sti
lret
jge
or
in
and
sarb
outsl
xchg
mov
out
arpl
jg
sbb
out
cld
mov
sub
ljmp
popw
ss
add
jae
push
mov
mov
mov
inc
mov
hlt
sbb
repnz
sub
imul
lret
imul
xor
adc
cmp
clc
mov
pusha
lret
mov
mov
mov
loope
sarl
sti
push
mov
shlb
sbb
or
inc
fcomps
mov
mov
inc
jns
test
mov
mov
imul
inc
cltd
cwtl
push
lods
sbb
divl
adc
mov
inc
jnp
inc
mov
sbb
xchg
or
sub
fistpll
sbb
orl
pushw
and
cltd
das
xchg
sbb
sub
xor
mov
fstpt
push
xor
fwait
fs
loop
inc
or
mov
mov
jb
in
pmaxsw
mov
cmpsb
scas
adc
xchg
mov
outsb
cs
sti
ljmp
fsubr
stc
mov
repnz
adc
subl
push
jns
fisttps
cwtl
mov
jnp
mull
lds
lds
mov
fwait
enter
lods
xor
les
sbb
push
adc
pop
je
jne
dec
sbb
cmp
adc
dec
stos
mov
into
lock
and
mov
stos
pop
inc
cmovno
aas
sbb
in
iret
fadd
scas
clc
fs
mov
aad
push
stos
xchg
in
inc
cmp
push
adc
testb
lret
sub
sbb
cld
or
push
push
push
adc
lret
jl
daa
leave
inc
mov
paddd
add
pop
xchg
loopne
jge
and
and
and
cld
in
movsb
addr16
addr16
mov
js
mov
mov
icebp
xor
movsb
fstpt
pop
rcl
and
xchg
pop
adcb
sub
ss
inc
loope
sbb
data16
push
or
sti
sub
stos
sbb
cmpsb
sbbl
add
mov
aam
pusha
dec
test
xchg
inc
push
aam
xchg
or
mov
add
mov
mov
inc
imul
xchg
cmp
jp
fsubr
xor
ds
mov
jl
or
mov
insb
sbb
stos
lcall
push
fldenv
stos
movsb
test
or
js
xchg
fwait
stos
outsb
sti
outsw
xor
loope
int
outsb
ss
inc
stos
fiaddl
jg
pop
adc
inc
movsb
sbb
inc
dec
ljmp
mov
pop
out
push
inc
xchg
insl
xchg
dec
rorb
mov
add
and
insb
sbb
decl
cmp
iret
push
push
out
leave
mov
inc
add
andl
subb
iret
stos
adc
pop
mov
cmp
mov
jno
les
jnp
mov
enter
fldcw
enter
jmp
sti
inc
mov
inc
ljmp
cmc
addr16
inc
lea
cmpsl
xchg
jno
scas
mov
rorl
cltd
ljmp
not
xchg
loopne
je
dec
pop
mov
leave
clc
shrb
pop
out
push
mov
leave
xchg
xor
cli
pop
popf
mov
xor
mov
mov
mov
enter
lret
jmp
mov
pusha
add
pop
mov
sbb
movsl
fildl
lods
sarl
fistl
inc
sub
int
push
push
xchg
clc
adc
mov
and
mov
sbb
xchg
enter
filds
shrb
cltd
lods
enter
scas
in
int
cld
outsl
xor
mov
lret
xchg
sub
push
sbb
cmpl
loope
push
in
les
std
mov
xor
iret
mov
xor
sbb
fdivr
test
and
mov
sbb
dec
and
mov
mov
mov
addb
aam
pop
jle
imul
pop
fisubl
pop
sarl
and
aas
pop
inc
lods
lahf
cmp
addb
andb
sbb
mov
inc
loopne
xor
xchg
leave
ja
test
dec
icebp
bound
dec
add
pusha
imul
xor
cmp
push
inc
sbb
xchg
fdivs
jmp
push
xchg
mov
pop
je
dec
dec
addr16
mov
xchg
lods
sbb
jmp
mov
mov
and
sub
cmp
push
scas
js
xor
loope
scas
mov
repz
adc
outsl
adc
shr
addb
bound
push
or
ss
push
call
pop
incl
test
sbb
orb
jge
sub
push
das
jmp
gs
jo
call
mov
dec
add
jmp
negl
popa
xor
or
ljmp
or
lret
cmp
mov
cmp
cwtl
lods
mov
inc
call
push
xor
cs
adc
pop
mov
je
mov
xlat
stc
pusha
mov
fsubrl
aam
lret
dec
push
in
push
lret
out
sub
jmp
lods
dec
push
push
lcall
xor
mov
inc
ds
sahf
scas
push
leave
andl
mov
fisttpll
mov
xor
movsb
mov
pop
int3
aam
push
pop
out
loop
push
sbb
cmp
mov
mov
lret
sub
mov
inc
js
pop
inc
inc
mov
fs
lahf
or
dec
push
ret
push
sahf
inc
mov
push
scas
pop
sub
testl
nop
cmp
js
xor
cmp
fimuls
in
and
xchg
loopne
bound
leave
cmp
add
lret
and
out
mov
popa
cmp
pop
add
mulb
pop
lea
sbb
fwait
pop
cmpsl
daa
xchg
repz
xchg
xchg
xor
dec
loopne
or
adc
push
mov
mov
in
mov
xchg
ret
adc
jge
test
inc
add
xor
aas
or
lret
sub
subl
aas
aaa
cld
mov
imul
pushf
popl
repnz
jp
and
andl
pop
shr
mov
push
outsb
inc
xchg
andb
dec
pusha
xor
mov
dec
or
mov
popa
inc
in
add
fisubrl
sbb
adc
jmp
adc
ljmp
stos
xchg
in
inc
and
jecxz
xchg
test
add
es
repnz
sbb
out
bound
out
fcoms
lds
movl
xchg
xor
ret
aad
xchg
pop
inc
add
orb
or
daa
dec
orl
into
sahf
mov
fdivrl
sbb
add
cmp
mov
xor
add
push
xchg
mov
inc
jp
cli
xchg
mov
adc
loopne
push
pushf
pop
outsb
dec
sbb
test
rorb
cmp
mov
mov
aam
fs
pop
lcall
mov
pop
out
or
push
cmpsb
inc
leave
fbld
mov
sub
or
mov
popf
pop
inc
dec
inc
aad
jl
lret
in
iret
inc
fisubs
cmp
je
adc
aaa
lahf
sbb
mov
sub
cld
mov
jns
sbb
push
xlat
inc
movsb
or
fsubs
stos
int
xchg
fwait
cwtl
add
dec
mov
cld
and
aam
sar
ss
xchg
mov
cld
shrl
orb
mov
xchg
or
lods
adcl
iret
add
jae
sub
inc
push
jmp
push
mov
fsubrs
fisubs
lods
lds
mov
dec
lret
pop
jae
jnp
add
jle
loope
cwtl
pushf
inc
and
mov
aas
and
lock
nop
imul
fidivl
cmc
adc
aas
mov
sbb
cld
fildll
mov
stos
mov
jb
or
dec
xor
int3
push
adc
fcmovne
push
ss
repz
push
subl
arpl
in
mov
rolb
std
pop
movsb
pop
sar
sub
nop
aad
lcall
fs
scas
divb
sbb
jp
xchg
cltd
inc
aad
jns
stos
lea
jmp
pop
jo
adc
icebp
sub
enter
jmp
dec
leave
jne
icebp
mov
add
sarl
push
pop
test
test
and
movsb
pop
mov
pop
aas
fmul
sarb
xor
hlt
ret
repnz
into
push
mov
jnp
push
xor
xchg
sub
mov
mov
dec
daa
adcl
dec
loop
jne
out
or
and
sahf
and
lcall
cmp
out
aaa
cmp
pop
inc
push
push
cmp
imulb
dec
bound
jo
jmp
sub
rcrb
ret
lods
mov
lret
ffreep
sub
pop
xchg
pop
lods
push
push
jle
jbe
ds
lahf
fcoml
sub
rol
cmpsl
fwait
loope
stos
add
push
xor
movsl
mulb
js
iret
sub
xor
cmpsl
test
sarl
sub
shl
jbe
ret
inc
cmc
cmp
stos
and
rol
ucomiss
mov
idiv
xor
add
jmp
std
xorb
push
and
xchg
inc
rorl
test
sub
add
scas
and
add
call
shlb
jne
gs
mov
scas
imul
fcom
adc
call
jae
lock
xor
fstl
mov
insb
pop
mov
imul
lcall
clc
sbb
mov
xor
aad
or
and
xor
shrb
pop
std
mov
mov
iret
xchg
int
jns
aas
mov
lods
enter
out
push
test
les
repnz
addr16
or
jo
mov
jp
je
aad
mov
mov
jg
inc
or
or
fs
je
jge
iret
sbb
xorl
or
mov
pop
sbb
ror
adc
inc
outsl
in
xchg
pop
pop
outsl
imul
shrl
inc
testb
addr16
out
cmp
inc
or
mov
push
jb
inc
sub
inc
test
loope
xor
sbb
cwtl
inc
jno
fbstp
jg
mov
cltd
int3
test
je
jg
lods
xor
sbb
or
push
cwtl
mov
gs
sbb
sub
and
sub
rclb
aad
or
out
xor
cmp
fwait
mov
or
imul
xor
mov
shr
pop
aas
jae
add
cwtl
lods
push
fdivrl
mov
xchg
decb
lods
stos
mov
ljmp
jo
cmp
scas
cmp
add
test
les
loop
or
nop
cmp
fistl
ds
mov
bound
jb
ljmp
ds
stc
mov
rolb
shrb
pop
jg
pop
mov
xchg
cmp
stc
rorl
jbe
jg
lret
shll
and
sahf
stos
pop
movsl
test
push
xor
and
xchg
movsl
sub
scas
mov
lea
enter
dec
jge
insl
lock
add
and
es
fdivr
lret
cmp
jb
cwtl
pop
sarl
xchg
frstor
into
lahf
imul
pushf
aad
xlat
hlt
loop
adc
dec
sub
push
shlb
pop
cmp
mov
dec
cmp
add
pop
xchg
adc
mov
jae
xchg
mov
loop
lds
push
bound
andb
push
or
adc
movsl
mov
jge
jo
rorb
inc
jns
sbb
add
and
orb
dec
sti
lahf
std
repz
or
mov
popf
jmp
js
icebp
pop
and
and
lds
adc
jmp
fmuls
add
pushf
pop
ljmp
xchg
push
pop
cmp
mov
jae
pop
mov
out
stos
cmp
push
pop
sub
into
fimull
cmc
add
popa
rolb
sbb
xchg
jg
ja
jb
dec
pop
adc
pop
outsl
mov
or
add
mov
imul
pop
mov
mov
sahf
add
push
mov
iret
jns
sbb
mov
jns
addl
xchg
fcomps
xor
mov
sub
stos
mov
sbb
cltd
rorl
push
int
xchg
mov
mov
out
push
xchg
insb
xor
in
pop
fisubs
inc
xchg
or
scas
mov
ja
add
dec
cli
aas
mov
and
lahf
out
cld
lods
daa
and
xor
scas
sub
in
and
ds
jg
fadd
outsb
jmp
mov
sbb
cmp
icebp
fists
aam
ja
or
xor
mov
mov
xor
insb
add
mov
adc
xchg
jns
pop
into
and
or
or
into
movsb
sti
das
jmp
ret
icebp
lods
movsl
jno
xchg
mov
xor
sarb
cmp
dec
aam
js
and
lcall
push
inc
cmp
cli
cmp
jg
sub
cmp
push
xchg
fisubl
push
jmp
test
sbb
xchg
leave
push
inc
iret
dec
fsub
cwtl
out
jnp
lret
int3
or
addr16
jne
add
hlt
push
int
movsl
sub
fists
or
mov
lcall
test
dec
fdivrs
sti
mov
mov
test
imul
mov
cmp
mov
mov
in
sbb
jmp
push
or
sbb
add
aas
int
data16
mov
js
sub
xlat
mov
mov
sub
orl
test
sub
jae
inc
sbb
js
out
test
mov
cld
xchg
sarb
pusha
mov
lret
adc
mov
mul
push
popf
pop
mov
fidivrs
push
ret
and
mov
pop
pmaxsw
jl
aam
push
or
sub
xchg
addl
mov
loope
int3
out
xchg
aas
out
pop
sarl
ss
lret
ljmp
mov
sub
and
loop
cmp
arpl
add
popa
jns
into
xchg
sub
dec
aas
testb
les
pop
jg
outsl
and
sahf
inc
pop
mov
fisubs
dec
js
mov
mov
mov
push
cmpsl
jmp
jno
frstor
cwtl
pushf
test
loope
and
int3
popf
dec
mov
dec
or
call
fnstenv
mov
lcall
andb
inc
dec
mov
mov
enter
loop
pop
dec
les
adc
jg
mov
xor
jle
cmp
clc
fstpt
scas
cmp
adc
cmpsl
push
rorl
cmp
xor
xchg
sub
cs
and
sbb
jg
jp
cmp
repz
int3
cld
repz
les
mov
mov
imul
aad
or
jl
in
mov
mov
and
aad
arpl
mov
cmc
pop
insl
andl
iret
pop
cwtl
dec
pop
xchg
xor
cmp
jp
prefetcht0
in
into
xor
in
pop
pop
sub
or
xchg
sbb
stos
or
outsl
notb
dec
mov
loop
or
ljmp
in
dec
mov
add
jo
testl
in
jmp
add
xor
mov
hlt
mov
idivb
add
cmp
mov
mov
popa
in
rol
adc
lcall
mov
cli
aas
add
xor
js
jae
mov
sbb
mov
push
xchg
in
movsl
rcl
mov
xchg
orl
insb
cs
sub
xor
mov
sub
jle
jnp
pusha
das
into
mov
pop
imul
out
insl
xor
aad
or
push
xchg
or
andl
mov
and
fmuls
push
int
test
jp
push
mov
xchg
push
cld
lock
into
pop
in
pop
inc
stos
std
mov
pop
fmul
ret
pop
or
push
and
arpl
and
pop
mov
mov
jg
test
xchg
cmpsl
cmp
cmp
shr
or
aas
pushf
movsb
dec
pushf
aas
xchg
push
mov
enter
icebp
mov
scas
mov
mov
popf
or
lods
lcall
jno
adc
jbe
ja
out
in
push
mov
bound
test
into
cmp
dec
popf
mov
arpl
or
push
dec
cmp
pop
popf
dec
adc
in
mov
cld
mov
imul
js
ret
inc
cmp
and
lret
test
mov
mov
movsb
loop
addr16
or
cmp
add
dec
dec
mov
nop
imul
stos
jbe
ret
out
xchg
cmc
xchg
setl
fbld
add
xchg
fsubl
or
push
or
mov
lods
int3
sti
lock
push
pop
push
cs
fisubs
stc
sub
into
xchg
in
mov
mov
push
push
outsb
mov
adcb
and
or
adc
ja
arpl
insl
sub
adc
fiadds
ljmp
adc
inc
lret
lock
add
fstpt
js
movsb
in
inc
jnp
testl
enter
cmp
in
ds
nop
jno
xor
popa
decl
shr
jno
xchg
into
lods
leave
mov
sub
pop
imul
jecxz
outsl
adc
imul
pop
jl
scas
ljmp
sbb
ja
mov
popa
inc
ret
mov
mov
and
push
lcall
dec
pop
jmp
enter
loope
mov
inc
and
and
or
cmp
loope
adc
fcoms
and
adc
in
fstpt
inc
popa
xchg
in
ljmp
dec
outsb
xchg
mov
orl
or
xor
adc
cld
xor
pop
pop
jb
and
mov
jb
xchg
loopne
ja
mov
pop
cmp
inc
and
cmp
add
and
sub
jge
and
in
jne
outsb
jmp
push
or
imul
int3
pushf
ljmp
in
mov
ss
add
les
testb
xchg
mov
jmp
mov
into
out
push
cmpsl
inc
mov
xchg
rcrb
lock
icebp
rcrl
inc
add
mov
enter
xchg
push
inc
ja
sbb
ffree
cmp
add
adc
and
fsubp
sarb
imul
std
or
rcl
imul
test
dec
sbb
jo
jge
fsts
faddp
sub
sub
decb
push
sub
push
adc
ljmp
xchg
mov
inc
cmp
pop
inc
sub
call
test
push
jns
imul
mov
loopne
jmp
leave
loopne
imull
fstpl
int
imul
cltd
cltd
push
inc
and
pop
xchg
and
dec
inc
in
outsl
lods
lret
jp
lock
daa
xor
into
lods
adc
pop
inc
enter
leave
popa
aad
bound
aad
inc
rorl
scas
mov
iret
fstps
mov
rcll
stos
icebp
pusha
div
mov
add
pop
xchg
sub
insl
mov
insb
and
lock
or
fsts
jbe
sti
push
pop
mov
lahf
push
sub
int
out
repnz
push
mov
add
mov
push
push
or
pop
cmp
popf
movsl
pushf
test
mov
dec
dec
xor
inc
scas
jae
nop
lods
adc
xchg
xchg
sub
es
lock
icebp
pop
movsb
fs
add
pop
ret
stos
fsubs
push
dec
stos
push
sub
cmp
mov
ja
push
lret
imul
mov
push
into
cld
test
aam
ds
inc
push
xchg
fisubrs
sbb
inc
int3
and
add
mov
add
imul
les
divl
sbb
imul
loopne
out
push
rcll
fiadds
pop
addb
aam
and
out
lret
xor
cmp
sub
jmp
jmp
das
ffreep
inc
xor
add
jle
rcrb
int
cmp
aaa
pop
mov
lods
mov
xor
test
xor
jns
xor
std
popf
shll
jae
aas
jmp
repz
lods
out
mov
and
hlt
jae
loop
mov
lea
sti
pop
rclb
inc
inc
mov
push
dec
push
cmpsb
sbb
test
dec
sbb
adc
out
sub
in
lcall
adc
lds
xlat
jmp
outsb
insl
xchg
xchg
lock
mov
test
jmp
push
mov
lahf
pop
add
fnstcw
scas
dec
cmpsb
lret
lcall
push
mov
fistpll
aad
inc
jg
stos
add
mov
mov
dec
mov
sahf
movsb
mov
push
aaa
scas
adc
dec
adc
fstps
mov
cmp
add
std
inc
xor
cmp
test
pop
jns
inc
dec
inc
bnd
fucomi
dec
inc
or
mov
popl
push
sbb
jl
lcall
adc
fdivrs
into
sbb
xchg
mov
mov
mov
pop
addr16
sbb
fiaddl
rcrl
and
jle
insb
or
inc
ds
push
data16
sahf
pop
cmc
call
fiaddl
cmp
lahf
mov
sbb
mov
lret
jo
lods
in
cmp
cs
mov
gs
dec
add
insb
jnp
xor
out
or
sub
mov
int
xchg
jg
ss
popa
scas
mov
fiaddl
add
or
pop
in
repnz
xor
and
data16
ret
mov
pusha
fisubl
test
call
clc
fsubl
or
dec
pop
aaa
outsl
dec
pushf
jne
xorb
insb
jne
mov
aam
cmp
rolb
mov
shll
ljmp
lret
xchg
lock
je
pop
dec
shll
imul
ljmp
add
jp
lret
pop
sti
jg
stc
xchg
fwait
xchg
pop
stc
xor
rcll
cmp
sbb
adc
push
adc
in
fcomps
cmpsb
fldenv
xlat
cmpsb
or
loope
js
daa
lahf
sahf
int
jnp
rcr
inc
cmp
pushf
mov
lock
cli
sbb
xchg
and
sbb
mov
fs
pop
add
out
mov
jne
sub
mov
pop
xor
cmp
dec
movsl
jns
ss
adc
cwtl
cli
mov
cli
daa
das
mov
inc
jecxz
jl
nop
ds
push
and
fadd
dec
mov
movsb
in
lods
mov
sub
jg
icebp
and
sub
pusha
mov
or
add
xchg
test
push
orb
fistpll
movsb
vpor
ja
cld
or
jp
sub
mov
imul
mov
cmp
jle
jge
loopne
imul
ret
jp
fisubs
or
xchg
ss
inc
add
in
mov
mov
adc
out
xchg
jb
pop
mov
jnp
test
xchg
add
data16
in
xor
in
insl
ljmp
xor
shrb
aam
or
adcl
icebp
gs
test
pop
jg
vmaskmovdqu
jmp
or
mov
dec
xchg
subb
adc
xor
loop
orb
cmp
in
and
nop
test
dec
push
sti
or
xchg
adc
mov
and
mov
push
dec
mov
mov
xor
mov
or
cmp
jo
or
jne
fildl
je
dec
cmp
into
test
bound
std
out
lahf
xor
mov
cli
pop
pop
mov
xchg
cmp
in
or
bound
ret
add
or
hlt
or
xchg
or
or
adc
sbb
xchg
jno
mov
movsb
sbb
cmp
jne
insl
cmp
mov
pop
pop
mov
test
dec
jnp
sub
mov
xlat
enter
inc
jns
xchg
loop
mov
shll
es
inc
dec
jg
cmp
pop
dec
sti
pop
jl
jmp
pop
xchg
testb
insb
pop
mov
gs
lods
push
mov
scas
daa
sbb
push
dec
push
pop
cmp
dec
call
hlt
mov
mov
cld
out
in
das
int3
std
leave
add
pop
mov
mov
mov
movsl
ja
cs
nop
jle
popf
ja
adc
cs
aas
and
dec
and
ret
cmp
or
shlb
add
sub
pushf
cli
jl
outsb
insl
pop
fsubs
and
jbe
leave
jge
loop
inc
inc
dec
cmp
dec
mov
and
stos
cmp
mov
lods
clc
pop
fimull
adc
rcrb
cltd
sbb
xlat
jp
dec
or
repz
mov
inc
loope
in
andb
lea
cli
jecxz
jl
std
testl
sub
popa
aas
jne
lods
sbb
js
inc
ror
sbb
int
fs
mov
movl
pop
inc
lods
shlb
pop
icebp
sbb
xchg
or
fwait
or
and
dec
cmp
cmpsb
pop
addr16
or
gs
fdivs
pop
sub
adc
loope
or
push
and
pop
add
js
push
adc
or
rcll
cmpsb
lahf
dec
test
push
xor
ret
sbb
or
fisubs
fdivs
cmp
out
sbb
es
cmpl
cmp
cltd
mov
inc
shll
ret
xor
fs
imul
lret
rol
mov
loope
ds
and
mov
testb
out
les
jne
mov
loopne
cli
dec
mov
mov
lods
pushw
mov
fidivrl
pop
xor
jno
xchg
sub
and
mov
fbstp
shrl
loop
or
inc
hlt
fcompl
xor
push
scas
push
adc
jno
aam
cwtl
lret
mov
mov
daa
or
test
mov
rsqrtps
xchg
adc
cmp
lods
cmp
test
dec
leave
add
daa
sbb
repnz
sbb
pop
lcall
pop
scas
push
cmp
xchg
mov
push
fs
psubsw
mov
and
and
add
lcall
repz
dec
js
cmp
mov
pushf
jp
out
or
sbb
sarl
jmp
mov
out
lock
dec
inc
sub
dec
push
testb
pushf
push
add
xor
xchg
lods
aas
mov
fimuls
sbb
out
out
sti
add
and
leave
sub
xlat
sbb
lock
pop
cmp
fldl
cld
pop
mov
or
and
fists
lock
jl
mov
pop
ss
nop
rolb
test
mov
push
rcrb
imul
inc
sub
je
test
and
push
pop
into
iret
or
lods
sub
xchg
test
test
dec
mov
hlt
sbb
inc
sbb
das
fmuls
loope
dec
or
sbb
das
and
mov
and
cmpsb
jae
fcompl
sti
ja
jecxz
xor
and
pop
nop
cmpl
mov
pop
fwait
mov
imul
push
cmp
cmp
fisubl
add
jle
and
cmp
sub
int
add
test
sbb
xchg
adc
test
popf
or
es
dec
les
cmp
ret
lock
cmp
sbb
xchg
mov
lods
cmp
clc
test
dec
or
push
and
sbb
pop
loope
data16
sub
rolb
and
cmp
stos
out
int3
pop
jg
frstor
mov
shrl
jns
fnstcw
je
xor
or
push
xchg
push
mov
inc
jmp
push
ja
mov
dec
inc
mov
jns
adc
clc
std
pop
fsubrl
cmp
cli
std
push
mov
ret
pop
push
adc
test
fsts
dec
add
iret
lret
stos
push
test
stc
icebp
or
pop
cltd
mov
pop
sbb
bound
mov
imul
push
mov
notb
pop
sahf
fwait
and
pop
cmp
pop
daa
and
aas
cmp
cmp
ret
cld
push
adc
dec
jle
dec
sbbb
sbb
mov
cmp
daa
push
jg
lret
cmpsl
cwtl
jo
push
test
mov
scas
ret
inc
mov
and
fbstp
aas
jmp
inc
push
lcall
xchg
dec
test
roll
addl
cmp
js
cmp
mov
orb
mov
shll
push
fnclex
inc
scas
les
jno
std
sbb
jle
mov
cmpsl
insb
fs
mov
clc
rclb
pop
pushf
leave
pushf
dec
pop
xchg
fcoms
pop
inc
aad
iret
dec
or
subl
xor
mov
lcall
popa
pop
shrb
push
test
into
dec
pop
sbb
fisttpll
shlb
inc
insb
sub
scas
sarb
ret
xchg
cmp
in
or
lahf
jg
cltd
dec
rol
push
jecxz
enter
mov
add
loop
add
aam
ss
pop
fildl
or
adc
or
jno
lcall
test
or
cmp
addr16
in
mov
shrb
cltd
ljmp
xor
fisttps
cmp
sbb
pop
ds
cli
bound
lret
add
mov
cmpsl
ficoms
imul
mov
sub
inc
jp
xor
pop
fdivrs
jb
and
pushf
cwtl
inc
es
pop
stos
sub
shl
test
xchg
adc
dec
sbb
mov
xchg
rcl
outsl
cmc
or
xchg
sbbl
fcoml
inc
mov
mov
or
add
leave
mov
adc
add
jb
xor
iret
cmp
insl
call
outsb
lds
fnstcw
jae
cmp
fsubp
mov
scas
in
arpl
mov
aaa
jns
fucomi
ret
pop
inc
dec
iret
pop
xor
cwtl
aas
dec
popa
mov
jge
cmpsl
fldl
adc
jns
out
loop
daa
mov
scas
jno
subl
sahf
pop
aam
adc
sbb
test
in
shl
and
test
push
roll
mov
pushf
jp
int3
rcr
xor
addr16
jo
mul
push
xchg
out
xchg
loope
into
jb
add
rcrb
out
inc
incl
bound
enter
std
fisubrs
jp
cld
int3
jne
adc
xchg
lcall
inc
adc
pop
inc
call
lods
daa
cld
or
mov
popw
adc
les
push
jl
cmpsl
jl
cmpsl
mov
testb
adc
imul
aam
fmull
cmp
mov
fstp
adc
cmp
jg
dec
inc
adc
lret
sbb
stc
pop
fwait
mov
add
sbb
les
mov
xchg
arpl
mov
mov
sub
iret
pop
ss
sbb
pop
pushf
xor
dec
xor
xor
in
pop
or
out
xor
sti
sub
or
pop
jp
enter
push
fldenv
pop
push
inc
cmp
divl
mov
pop
xor
dec
leave
xchg
lret
cmp
jp
scas
aam
out
fbld
rorl
ror
cltd
xchg
jns
push
mov
mov
push
subb
inc
imul
xchg
dec
push
adc
ds
inc
je
popa
sub
mull
dec
cld
pop
lods
mov
xchg
or
in
int
cmp
dec
cmp
and
shrb
cmp
testb
icebp
adc
pop
push
xchg
add
dec
sub
inc
lea
cmpsb
inc
inc
push
sti
mov
sarb
push
imul
in
xor
cld
pushf
rcr
sbb
push
dec
xchg
cmpsl
jbe
sub
cmc
inc
leave
xor
mov
cmc
mov
jge
and
or
sub
xlat
pop
ljmp
and
jg
xchg
jne
popf
nop
cmp
cmp
dec
inc
stc
imul
and
in
add
mov
mov
mov
cmp
mov
call
jle
jne
aaa
inc
popa
out
adc
in
or
fstps
jp
nop
popa
adc
add
sub
mov
enter
mov
addr16
pop
push
dec
pop
rcrb
adc
xorb
mov
cmp
dec
inc
mov
xchg
xchg
lret
imul
xchg
push
aam
sub
xchg
movsl
push
mov
xchg
pop
inc
out
aaa
push
adc
test
mov
add
enter
jle
or
or
cmp
add
fcmovnbe
and
adc
xor
movsb
rorb
xchg
addr16
sti
push
rcr
rorb
or
xchg
lcall
jno
inc
test
and
push
mov
jo
ror
test
mov
cs
cmp
mov
sbb
and
fs
popa
xchg
scas
arpl
out
sub
test
mov
mov
and
mov
add
sahf
sub
dec
mov
sbbb
scas
movsb
mov
mov
push
jo
or
mov
push
jg
mov
inc
inc
fadd
add
mov
mov
mov
aad
mov
xchg
lods
lret
mov
cmpsb
dec
movl
repz
pop
dec
push
jno
sbb
dec
inc
mov
mov
mov
push
das
std
pop
mov
lock
sbb
in
xchg
xchg
sbb
mov
jmp
ficompl
adc
test
sbb
dec
jg
sbb
cmp
dec
es
das
pusha
insl
sarb
mov
popf
xchg
iret
pop
mov
sub
insb
pushf
pop
stos
sbb
lahf
xchg
push
jb
xor
test
sti
sub
or
je
mov
je
inc
jmp
xor
mov
pop
pop
jle
fstl
imull
int
lcall
and
enter
xchg
dec
dec
mov
pushf
xchg
iret
dec
and
adc
shlb
rolb
ror
sub
add
in
inc
int
loopne
je
lods
dec
adc
adc
mov
imul
xor
loope
pop
xchg
pop
push
xor
das
jns
mov
mov
loop
xchg
lret
push
cmpsl
lock
sbb
fistpl
lcall
shrl
pop
pop
jg
push
mov
pop
mov
shlb
pop
or
fmul
mov
test
and
push
nop
push
cmc
fcomps
std
inc
add
out
adc
jg
lret
and
xor
lea
imul
in
sti
iret
stos
inc
out
lock
cli
insl
insb
repz
push
mov
mov
and
in
lahf
mov
stc
dec
gs
es
add
iret
push
push
or
call
push
adcl
in
push
push
jnp
xchg
pop
lahf
repnz
fiaddl
inc
pop
push
mov
dec
mov
and
dec
sarl
sarl
shlb
enter
pusha
cmp
sub
xor
out
stc
ret
sbb
addr16
dec
mov
xchg
push
int3
xchg
xchg
popa
sbb
stos
inc
sub
pop
or
xchg
and
inc
add
lds
add
jne
xchg
xchg
hlt
icebp
xchg
inc
xchg
in
cwtl
inc
adc
cs
xor
mov
pop
push
xor
mov
push
jge
pop
fimull
cmp
cmpl
jp
lock
cld
adcl
scas
sub
in
pop
or
add
xchg
xchg
push
add
jae
mov
int
fprem
mov
stos
shll
xor
fwait
lcall
fcmovne
mov
push
mov
adc
mov
les
mov
dec
bnd
dec
mov
mov
jns
inc
jp
add
ror
jge
nop
jl
fimull
scas
add
ret
int3
fsubr
sbb
xchg
push
push
mov
and
inc
out
cltd
scas
pop
sub
jg
or
call
jne
cmpsb
jo
es
jbe
inc
cmpsb
pop
sub
aad
or
push
ret
cmc
mov
pop
scas
addr16
fdiv
stc
xchg
iret
adc
adc
rcl
xor
rcll
pop
rol
push
das
lods
adc
pop
mov
xor
sbb
push
movsl
nop
dec
movsb
in
es
ffreep
pop
and
mov
mov
or
jl
enter
sti
je
cs
cmp
mov
out
sbb
adc
and
or
in
mov
movsl
in
addb
dec
rorb
es
icebp
fs
jp
dec
pop
pusha
fsub
cmp
inc
jl
jns
orl
arpl
repz
fsts
xchg
add
cmp
and
repnz
daa
lcall
sbb
or
jmp
push
cwtl
cltd
add
fcompl
outsl
mov
xchg
jbe
add
ja
push
dec
pop
movsl
dec
mov
lds
mov
and
jge
loopne
clc
test
popa
pop
gs
dec
shlb
cltd
les
cli
jbe
leave
nop
push
add
sub
mov
es
shrb
test
push
xchg
in
pop
aas
push
dec
ret
adcl
imul
decl
cmc
js
test
jnp
cmp
jnp
sub
popa
and
add
adc
outsl
add
and
mov
adc
fildll
in
pusha
sbb
in
dec
mov
rclb
mov
rol
cmp
inc
fwait
sub
jns
sbb
mov
mov
imul
adc
int3
outsb
aas
vmovntdq
pop
mov
mov
adc
icebp
in
test
mov
sbb
cmp
or
push
dec
lods
ja
xor
adc
pusha
mov
jge
jns
and
enter
mov
gs
or
push
test
or
das
add
imul
mov
dec
sub
int
bound
mov
stos
dec
imul
outsl
xchg
push
xlat
les
jo
pushf
dec
repnz
cmpsb
test
int
sub
jns
rcr
cmp
jmp
cmp
stos
cld
insb
mov
cmc
push
push
sbb
aaa
pop
or
outsb
das
mov
sbb
jge
jp
and
mov
mov
repz
les
jmp
xchg
mov
into
int
cmp
mov
movsb
popf
and
cmp
xor
sub
pop
adc
mov
add
out
inc
or
adcl
bound
out
xchg
lahf
dec
adc
mov
pushf
stc
adc
mov
icebp
xchg
movsl
data16
lods
pushf
pop
test
sub
xchg
pop
fcoms
pop
or
or
cld
fdivrl
jg
add
fidivrs
xor
subb
ret
add
mov
inc
jmp
addl
flds
jp
xorl
pop
pop
shrl
or
out
sub
mov
scas
daa
shll
xchg
pop
in
add
dec
push
stos
inc
lock
je
inc
int3
pop
mov
cmpl
xchg
adc
mov
ljmp
mov
imul
out
fdivl
xchg
sbb
outsb
adcl
jb
test
mov
xchg
sahf
subps
outsl
sarl
inc
cli
dec
inc
mov
fisubrs
pop
ret
add
mov
fsubr
out
xor
inc
push
lea
sbb
lock
cmp
xlat
popa
mov
aas
adc
inc
sbb
mov
lock
add
imul
outsb
cs
ss
sub
movsb
loop
jge
sub
xor
xor
inc
pop
xor
inc
rcr
xor
xchg
cmp
out
or
popf
push
fisttpll
hlt
aaa
mov
iret
sub
insl
lahf
lock
mov
mov
jge
in
nop
subl
ror
sarb
sbb
icebp
jno
subb
pop
sub
iret
or
add
test
out
dec
jle
pop
std
jl
aam
cmpl
cmc
mov
js
sbb
xor
in
dec
imul
mov
dec
std
loopne
std
stc
mov
ljmp
in
or
push
sahf
js
mov
mov
cmp
sub
icebp
ljmp
sub
enter
mov
inc
sbb
gs
push
test
mov
xchg
sbb
add
cmp
aaa
cmp
sbbb
inc
stc
cs
jle
sbb
jg
and
jbe
iret
mov
sub
dec
movsb
in
sarl
sbb
repnz
jl
ljmp
cmp
adc
jae
or
inc
dec
nop
out
in
fwait
mov
mov
pop
cld
test
add
cmp
adc
inc
xchg
xchg
sub
cld
xchg
les
jp
or
jae
pop
push
andl
lcall
mov
orl
cmc
mov
loope
inc
mov
das
mov
mov
jnp
fcoms
fs
int3
xor
int3
add
fildl
fwait
inc
or
lret
test
xor
pop
dec
aas
xchg
dec
and
scas
std
adc
nop
fisubs
loopne
addr16
daa
push
and
inc
lock
push
iret
xor
cltd
add
pop
divb
inc
adc
pop
cli
adc
mov
jmp
aad
js
xorb
add
sbb
out
dec
sub
mov
jbe
int
dec
testb
or
cmpl
nop
into
add
fildll
and
jl
inc
leave
add
rorb
push
aad
fildl
adc
adc
daa
pop
js
sbb
cmp
inc
jmp
test
dec
sub
pop
xchg
mov
cmpb
cmpsl
push
rorl
out
jecxz
popf
sbb
jp
repnz
addr16
fwait
adc
iret
das
inc
cmp
stos
xchg
psllq
movsl
lods
sbb
mov
sub
push
fxch
jmp
data16
jnp
add
dec
mov
sub
sbb
lds
ljmp
or
outsb
or
aaa
and
clc
adc
mov
daa
add
or
mov
test
and
and
rcll
pushf
cmpsl
clc
jecxz
or
jb
add
jge
xor
repnz
dec
inc
cmpsb
mov
mov
rcrb
sbb
sub
negl
mov
aas
cmc
ret
xor
std
mov
xchg
cmpsb
test
sbb
xlat
push
dec
pushf
cmpsb
sub
fs
dec
mov
or
int
dec
xchg
js
aas
xorb
cmpsb
cli
add
pop
lret
popa
xchg
add
in
and
pop
enter
js
pop
push
jnp
ror
xor
das
and
push
xchg
and
repz
in
push
cld
insl
inc
rorl
cmpsb
enter
inc
popa
sub
push
mull
mov
dec
mov
push
dec
xor
push
fmulp
pop
sahf
dec
xchg
inc
cmpsl
rep
out
mov
mov
inc
pop
adc
push
fcompl
sar
jno
subl
ret
jne
or
clc
mov
xor
inc
mov
test
xchg
cmpsb
xor
fildl
pop
inc
inc
dec
xor
aam
data16
fs
jle
push
and
ror
and
popf
cs
sbb
arpl
mov
inc
das
pop
xor
cld
sub
dec
stos
sub
dec
adc
pop
xchg
lahf
jo
inc
gs
and
pop
xchg
sub
dec
cld
scas
icebp
adc
sub
mov
es
or
xchg
mov
push
js
xchg
inc
lods
push
xchg
and
lret
pop
adc
pop
aaa
fisttps
cmpsl
sub
mov
xor
mov
cmp
push
lea
add
pop
inc
xchg
int3
adc
fisttpl
mov
cmp
ds
xor
mov
das
sbbl
mov
jle
enter
out
and
ret
xor
pop
jecxz
test
out
fsubr
mov
mov
adc
and
lea
pop
cwtl
jl
and
mov
fisubl
jge
test
fsubrs
mov
sub
shlb
fcmovne
cmp
rclb
push
cltd
push
mov
push
pop
ja
xchg
pop
mov
jg
icebp
dec
or
and
fadds
sbb
add
xorb
dec
pop
sbb
or
sub
mov
add
xlat
sahf
pusha
popa
push
aaa
sbb
call
or
adc
or
push
dec
mov
sub
movsl
push
jg
add
cmp
out
stos
mov
fcomps
lods
roll
fs
inc
mov
ds
inc
cmp
inc
scas
xchg
push
pop
fstl
push
das
call
ret
inc
aas
cmpl
lret
or
push
add
in
movsl
mov
scas
cld
outsl
mov
ret
adc
inc
adc
in
lret
push
mov
or
bound
xlat
or
pushf
js
aad
jecxz
jge
fnstenv
xchg
int3
test
pop
push
fidivrl
sbb
nop
push
pop
cltd
into
dec
jns
cld
enter
xchg
dec
xchg
les
or
jl
mov
sub
mov
imul
out
dec
jbe
scas
dec
jmp
mov
rclb
mov
enter
mov
insb
adc
inc
xor
adc
std
nop
xor
lods
je
clc
push
mov
bswap
bswap
xchg
mov
jbe
daa
pop
inc
push
pop
or
inc
stos
mov
outsl
push
iret
das
xchg
pop
scas
adc
gs
sub
test
ffreep
mov
add
hlt
jae
jne
lret
into
stos
jp
imul
icebp
rorb
cmp
repnz
pop
or
or
lret
fwait
repnz
lds
mov
mov
add
jnp
jne
in
sbb
dec
into
mov
int3
and
cs
jmp
sahf
lcall
pop
xchg
rol
daa
push
push
dec
rolb
cmp
icebp
fisttpl
add
mov
xchg
out
lods
insb
lret
cld
inc
push
pop
cmp
mov
push
hlt
pop
lods
ficomps
repz
push
jecxz
mov
into
cltd
mov
cs
mov
push
or
sahf
push
repnz
sarb
lcall
lret
aam
add
in
fsubrs
outsb
xorb
scas
das
adc
test
mov
and
jl
fmull
or
cli
cs
gs
pusha
xchg
mov
mov
cwtl
in
ss
out
fisttps
pusha
lret
mov
dec
jno
add
pop
leave
push
cmpsl
ja
loop
subl
shll
vrsqrtps
dec
mov
sub
jge
loope
and
jp
add
jle
lret
mov
dec
imul
jmp
inc
lret
sbb
in
popa
cmp
jbe
xor
imul
or
mov
sbb
cwtl
test
xlat
or
push
int
and
ret
in
cmc
fs
int3
mov
adc
mov
sbb
sub
and
cmp
subb
js
ret
pop
mov
mov
nop
mov
int
out
mov
pop
xor
pop
std
shr
mov
dec
movsl
in
mov
jnp,pt
push
push
dec
mov
mov
xor
xchg
push
adc
ds
call
inc
daa
cmpsl
mov
jg
xchg
shl
cwtl
movsl
iret
fistl
imul
or
mov
aad
cltd
dec
push
fdivr
xor
pop
xchg
outsl
stc
into
push
scas
rcrl
je
dec
sbb
or
out
movsb
xchg
inc
pop
cmp
pop
cld
dec
jecxz
mov
mov
dec
xchg
cli
push
pop
jecxz
sbb
mov
mov
fs
cwtl
cmp
pusha
adc
and
dec
jp
xchg
insl
push
movsl
mov
pop
imul
ret
cmpsb
gs
loopne
ret
inc
data16
and
jmp
in
mov
fwait
rcrb
mov
jl
jne
dec
jnp
sbb
adc
jae
pop
push
mov
insb
loopne
mov
aam
jle
xchg
xchg
test
mov
xor
or
and
scas
lret
pop
icebp
add
xor
mov
add
adc
dec
mov
icebp
mov
lret
add
push
push
ss
xchg
je
dec
cltd
cli
cmp
sbb
sub
lds
mov
add
popf
pop
movsl
pop
dec
lock
stos
inc
jge
out
cmp
xchg
inc
jnp
cld
stc
pop
icebp
fsubrs
jmp
xchg
mov
jno
mov
or
lret
xchg
xchg
fsubs
adc
mov
mov
fldcw
and
rorl
sbb
loopne
ret
pop
push
enter
jno
adc
popl
imul
sbb
pop
cmp
pop
or
inc
xor
pop
mov
fldt
daa
imul
ds
sbb
or
fwait
cs
mov
pop
mov
jae
in
or
push
rorb
jns
repnz
jp
mov
jg
repnz
imul
bound
ret
shr
lock
cs
xor
dec
jl
push
mov
inc
pop
mov
in
dec
popf
sub
cmc
es
xor
sbb
dec
hlt
xor
mov
add
mov
jge
fdivs
mov
mov
push
inc
xchg
add
pop
inc
jge
pushf
adc
xor
xor
xchg
add
jns
mov
add
je
mov
sub
mov
mull
pop
pop
iret
lcall
xchg
xchg
iret
mov
loop
test
sbb
pop
stos
imul
ret
xchg
daa
aam
xor
xchg
mov
cmpl
jl
arpl
mov
lods
inc
je
pop
inc
call
adc
xor
sub
or
xor
jno
fs
jo
xchg
cmc
sbb
xchg
mov
inc
icebp
fs
sti
je
je
or
imul
out
movsl
out
scas
insl
iret
rorb
nop
pop
cmpsl
pusha
cltd
adc
sub
mov
bound
ret
xchg
fnsave
stos
lcall
push
loopne
jecxz
pop
sub
fildl
jle
jl
outsl
mov
lret
rcr
loop
mov
sub
in
add
pop
in
push
pusha
repz
jns
mov
repz
or
push
cwtl
cmp
shll
dec
inc
cmp
loope
jp
cmp
fldt
fxtract
es
lahf
mov
arpl
push
ss
sub
xlat
out
jl
leave
dec
ja
sub
scas
mov
flds
push
cs
in
sbb
mov
fisttpll
movsl
sub
enter
js
shlb
insb
imul
push
je
jbe
and
jle
cs
arpl
sub
adc
jecxz
cmpsb
nop
ljmp
dec
jo
mov
sub
gs
mov
loop
cmp
xchg
stos
and
pop
xchg
stos
cwtl
add
dec
imul
imul
mov
notb
mov
dec
inc
hlt
pop
ficompl
cld
jge
fs
icebp
shll
sbb
inc
rcl
fisubl
sub
mov
mov
xor
cwtl
dec
sub
fisttpll
std
ja
add
out
lret
data16
push
lods
mov
mov
or
shl
or
aas
test
in
xchg
and
icebp
xchg
sub
das
mov
jle
or
ret
outsl
add
aad
inc
ret
inc
js
push
add
sub
mov
mov
or
das
xor
mov
sti
sub
xchg
adc
pop
aas
dec
jle
fsub
or
mov
adc
fs
mov
mov
mov
xor
iret
jne
mov
aam
jl
jp
push
bound
cld
cld
mov
xchg
ret
adc
icebp
mov
inc
inc
rcll
test
mov
dec
dec
stc
jge
xor
cmp
or
fs
lahf
xchg
loope
push
loop
popf
mov
mov
push
sbb
cmp
cmpsl
sub
jecxz
cmp
mov
leave
push
pop
and
lcall
and
xchg
cli
cmpsl
pop
cld
enter
leave
cltd
aas
hlt
aas
sub
mov
fidivrl
dec
cmp
cmp
mov
lret
add
add
iret
les
mov
dec
pop
dec
inc
mov
sbb
lods
out
div
les
push
cmp
icebp
push
jg
cwtl
sbb
mov
sbb
and
fwait
das
dec
addb
mov
nop
add
xchg
mov
jnp
jp
xchg
dec
movsb
cs
aad
ds
arpl
adc
aad
cmpsl
stos
lret
into
cmpsb
mov
repnz
dec
aam
pusha
es
push
cwtl
push
mov
in
pop
sahf
loope
shll
popf
stc
in
sub
mov
lock
dec
fwait
mov
cli
sub
pop
aam
insb
push
in
or
cmp
movsl
push
xor
pop
aas
jmp
enter
cmpsb
push
jl
ss
cld
push
pop
xchg
mov
mov
inc
imul
push
stos
inc
dec
cmpsb
mov
jmp
sbb
cltd
jge
inc
in
loope
fmull
and
orl
cmp
and
xchg
popa
test
or
sub
inc
rorl
jne
mov
mov
fs
inc
lret
out
pop
es
jp
js
mov
sub
inc
xor
mov
and
mov
inc
imul
cs
out
inc
aad
fwait
cli
mov
lret
push
sub
insl
push
lods
loopne
js
call
stc
shll
dec
loopne
fmuls
push
push
dec
jne
mov
popa
sub
mov
pusha
cmp
push
in
pop
test
dec
pushf
jo
loope
movsl
pop
fs
sub
mov
xchg
and
mov
jmp
adc
jae
xchg
int3
inc
xchg
or
ljmp
xchg
cmp
ret
xchg
cld
jnp
or
notl
into
imul
lret
mov
cli
lods
jno
insb
cwtl
dec
aam
mov
lcall
addb
pushf
sub
outsl
jmp
stc
stc
mov
shlb
xchg
jmp
and
ds
stos
das
push
inc
jg
xor
movsl
out
outsl
fdivs
aam
cs
stos
cwtl
cli
xor
movsl
icebp
out
sti
in
enter
dec
pop
sub
dec
pop
jl
imul
std
push
mov
pop
lahf
sub
add
mov
xlat
mov
je
lock
stc
and
cmp
out
jle
mov
dec
lret
shlb
popa
in
sbb
andb
mov
xchg
and
test
mov
das
pop
lcall
das
test
lods
cmp
sti
fs
mov
xor
or
pusha
ficoml
sbb
inc
shlb
sarb
mov
ret
adc
addl
mov
inc
cmpsb
adc
stc
xlat
cmpsb
pushf
leave
mov
mov
or
dec
stos
jecxz
bound
dec
xor
dec
dec
test
sbb
stos
jb
add
fstpl
pop
ret
loop
and
sbb
int3
fbld
mov
aas
inc
add
jge
ds
mov
mov
sarb
jo
bound
pop
ret
iret
cmp
data16
mov
fnstsw
insb
cld
mov
pop
nop
fsub
push
mov
lret
lds
fsubrl
das
movsl
jo
cmpsw
clc
rclb
and
adc
ret
jae
or
enter
mov
xor
sub
and
sbb
test
jg
adc
pop
sbb
orl
sbb
fnstenv
mov
push
in
xor
in
xchg
pusha
mov
leave
and
sbb
and
xor
pop
xchg
lods
xchg
ja
int3
pop
push
test
inc
scas
or
dec
loop
rcrb
pop
mov
daa
mov
xorl
xchg
and
mov
in
rcl
lret
scas
shlb
aad
addr16
leave
and
mov
loop
adc
in
rol
dec
aam
addb
sub
jbe
testl
mov
pushf
test
push
pop
cwtl
xor
lret
nop
cld
jae
or
sti
cmc
jb
int3
ds
pusha
iret
sub
mov
pusha
scas
mov
sbb
lret
push
sub
dec
xchg
mov
or
dec
ret
insb
ljmp
bound
jne
movsb
add
xor
sahf
aam
inc
ss
adc
aaa
xchg
test
inc
stos
jb
aaa
mov
push
dec
jmp
lods
push
mov
stos
add
ret
cmp
aad
aad
into
dec
dec
ret
adc
shll
xor
jbe
jbe
mov
fstps
or
push
push
jbe
daa
lods
or
ja
or
adc
xchg
sbb
mov
cmp
mov
iret
out
push
and
dec
xchg
test
shrl
pushf
mov
test
xchg
lret
hlt
mov
fadd
testl
ss
xchg
inc
xor
jb
int3
dec
nop
jo
jl
dec
pop
ja
popf
mov
or
mov
sub
mov
mov
sub
jmp
rorl
sub
in
ficomps
sbb
mov
mov
mov
pop
jae
out
jmp
es
or
sub
or
and
mov
dec
adc
stc
stos
mov
ret
or
mov
shrb
sub
rcll
adc
daa
nop
add
pusha
pop
lret
mov
cmpsb
pop
call
add
push
sbbl
pop
addr16
fsubrs
push
out
add
imul
outsb
adcl
stc
xchg
push
jp
stos
sti
mov
inc
jne
in
dec
mov
mov
jmp
decb
nop
mov
dec
mov
imul
and
sbb
pop
lahf
call
scas
fcmovbe
jno
imul
fdiv
pop
std
inc
and
xor
les
sbb
lcall
loop
push
or
icebp
lret
add
lods
lods
jmp
mov
mov
popf
in
push
fisubrs
rclb
mov
lds
push
jb
mov
rclb
out
xor
ja
fwait
dec
ljmp
xor
lcall
cltd
rclb
and
inc
stc
out
sub
jne
out
add
mov
movsl
pop
ret
mov
js
shll
rcrl
mov
or
cmpsl
je
rcrl
jb
cmp
out
fistpl
shr
inc
fs
pop
dec
inc
ficoms
sbb
pushf
cmc
pop
adc
mov
inc
cmc
sbb
push
jns
sbb
out
hlt
pop
xor
add
push
mov
mov
ja
ss
xchg
sbb
rcrl
cwtl
sub
repz
out
fbstp
xor
lock
mov
push
and
clc
test
inc
imul
and
dec
or
clc
shlb
mov
leave
dec
fcmovnu
addl
vmovq
rcr
outsb
pop
mov
cmp
cltd
rcrl
xchg
int3
or
dec
xor
sub
test
inc
xor
mov
push
mov
pusha
push
xchg
pop
cmp
lcall
mov
lods
dec
jnp
push
lahf
int3
bound
sahf
je
lahf
dec
fnstenv
in
dec
mov
stos
inc
dec
inc
mov
icebp
and
sub
xlat
add
call
xchg
repz
push
nop
push
mov
das
jp
fildl
test
jbe
std
sbb
xchg
pusha
jl
mov
ja
imul
add
mov
or
mov
test
jbe
and
push
inc
xor
outsl
mov
movsb
or
xor
repnz
mov
mov
inc
sti
mov
outsl
xchg
sbb
aad
sbb
mov
dec
mov
mov
sub
cmpsb
jp
xlat
add
jmp
jmp
repnz
push
movsb
mov
xor
and
jp
push
jmp
push
xchg
in
mov
subl
fcoml
dec
sbb
fists
lods
pop
push
addr16
in
mov
push
inc
hlt
or
fsubl
add
shrl
int
dec
nop
push
xchg
gs
push
dec
pop
pop
nop
into
movsl
xchg
enter
mov
xchg
out
lea
insb
dec
dec
shll
loop
push
jecxz
cmp
rcrl
fbld
in
mov
mov
cmpsl
or
push
cs
scas
inc
daa
and
rclb
cmp
cmp
lods
xchg
jmp
sahf
jp
aaa
inc
xor
inc
xchg
fsubrl
pop
push
and
push
fiaddl
jo
mov
test
lods
insl
dec
js
sub
xlat
mov
sub
mov
dec
clc
cld
repz
mov
loop
pop
enter
hlt
inc
pop
testb
dec
ss
pop
xchg
in
mov
xlat
inc
xor
mov
insl
and
xchg
aas
loope
adc
adc
mov
leave
adc
and
sbb
push
sarb
and
dec
js
test
loope
inc
ret
loopne
sub
and
mov
sub
mov
jbe
jno
sub
ljmp
hlt
jl
cld
loopne
push
fisttpl
mulb
icebp
test
or
sahf
rolb
mov
pop
inc
subl
pop
rcrl
xchg
cmpl
add
test
dec
mov
loopne
fiaddl
push
sub
dec
nop
adc
add
sbb
or
mov
in
leave
ret
jne
fwait
sbb
pop
into
icebp
out
ss
or
sbb
aaa
mov
xchg
jbe
mov
call
add
jg
pcmpeqb
mov
inc
dec
and
push
sar
jnp
cmp
mov
jge
push
adc
mov
in
popa
sub
mov
outsl
call
loop
push
mov
lret
arpl
xor
or
push
mov
shll
pop
nop
shll
cwtl
jmp
sbb
pushf
faddl
ret
stc
jmp
movsl
popf
mov
test
mov
aam
mov
cli
push
push
adc
lret
mov
adc
pop
sahf
pop
repz
adc
pop
popf
pop
inc
adc
sub
sbb
inc
jno
inc
out
js
mov
fistps
cmp
mov
leave
mov
sbb
hlt
cmp
add
sub
jo
sbb
fucomip
sbb
loope
mov
xor
jl
in
aam
mov
lock
adc
leave
and
loope
movsl
ret
outsb
xchg
mov
cmp
fidivrs
and
inc
das
cmp
inc
outsb
adcl
or
out
scas
jmp
ds
mov
or
lret
enter
fs
icebp
sbb
outsl
mov
xor
cld
popa
jl
mov
mov
sahf
dec
cmpl
les
stc
sbb
dec
inc
inc
mov
inc
mov
hlt
mov
gs
adc
sti
out
push
inc
fwait
ret
and
mov
shll
fsubs
es
cwtl
fisubl
mov
das
fwait
mov
divb
push
leavew
jl
repz
movsl
inc
add
loope
push
cmp
cmp
decl
ss
xchg
xlat
gs
inc
xlat
jecxz
aam
mov
cmp
mov
leave
testl
cmp
inc
jmp
adc
fcomps
mov
push
js
xor
and
loop
add
sbb
incb
mov
inc
and
push
out
stos
cmp
or
or
mov
fildll
inc
js
mov
dec
leave
loope
mov
adc
mov
cmpsb
jb
ds
cmp
mov
pusha
inc
outsb
rorb
mov
fimuls
es
push
je
xchg
and
xor
into
lret
cmp
addb
js
fstl
mov
mov
xor
xchg
repnz
std
shr
dec
xchg
sub
rolb
jle
add
repz
jmp
fdivs
mov
and
push
sub
dec
mov
mul
inc
ljmp
push
insb
xchg
or
sub
xor
or
push
pop
insl
or
add
jae
mov
jno
or
mov
xchg
xor
add
sub
add
mov
mov
mov
dec
and
mov
xor
lcall
jmp
push
std
adc
push
js
sahf
cs
mov
add
sbb
jno
fbstp
pop
or
push
sti
sbb
fsub
push
or
sub
lret
push
adcl
lcall
ret
or
into
push
or
aaa
mov
stos
or
jle
pop
or
cmpsb
les
push
mov
dec
lods
in
gs
mull
pop
mov
decb
pusha
xchg
fidivs
jmp
sbb
sub
lods
fcmovnbe
push
cwtl
sbb
or
fsubrs
std
push
pushf
cmp
inc
mov
lock
lea
cld
fs
sub
lea
mov
mov
mov
adc
std
mov
cmp
mov
fs
fisttpll
scas
dec
push
mov
add
pop
jp
and
cli
pop
inc
pop
jle
pop
hlt
fsubrs
in
cs
ret
pusha
fnstsw
das
icebp
divl
jo
stos
inc
mov
call
inc
push
divb
adc
and
or
inc
pop
cli
sub
mov
jno
mov
xchg
adc
loop
push
nop
lods
add
dec
cmp
lock
jne
dec
inc
out
fadds
lcall
mov
cmp
mov
mov
shlb
sub
out
sbb
addr16
pop
adc
xor
push
loop
subl
push
ror
inc
mov
sbbl
hlt
dec
lds
mov
adc
pop
push
inc
mov
sub
xchg
rcr
pop
inc
ret
cmp
and
mov
mov
jmp
adc
rcll
fistpl
gs
leave
cmp
cwtl
sbb
int3
or
add
jl
pop
cld
out
push
outsl
cmp
adc
imul
jae
mov
dec
mov
xor
pop
ljmp
jle
ss
or
mov
data16
lds
xor
add
das
dec
adc
rorb
xor
repz
or
int
shrb
mov
outsl
subl
mov
push
insb
outsb
xchg
movsl
jns
fdivl
push
scas
adc
or
fld
lret
aas
mov
sbb
inc
mov
fcoms
data16
and
dec
inc
lahf
stos
fwait
mov
pop
push
mov
icebp
xchg
pusha
mov
inc
mov
sbb
mov
aam
aaa
push
bswap
jns
aad
aad
mov
pop
xor
shrl
jnp
sub
fldt
enter
cmp
inc
pop
lds
das
push
out
fs
push
hlt
xor
jno
jge
push
daa
cld
dec
sub
push
mov
imul
sbb
lea
in
xor
inc
into
test
push
mov
dec
loop
lret
push
jo
add
inc
mov
ja
and
test
mov
enter
and
jnp,pn
adcb
and
add
lds
movsb
add
int
add
adc
nop
addb
inc
leave
mov
sbb
int
dec
xlat
adc
cmpl
lds
xchg
shl
push
adc
inc
push
mov
dec
and
add
aam
mov
or
adc
xchg
pop
leave
aam
sarb
shr
jg
in
sub
jp
mov
push
icebp
addr16
cmp
or
into
data16
fistpll
lret
in
or
nop
push
mov
pop
cmpsl
adc
adc
sysexit
rcr
push
cmp
adc
clc
or
pshufw
add
xchg
inc
xchg
xor
outsl
lcall
push
fs
jbe
popa
arpl
push
or
shl
lahf
and
jge
enter
imul
and
out
inc
das
xchg
and
or
ret
sub
jne
push
sub
les
xchg
push
push
mov
inc
aas
inc
push
in
jne
shll
dec
fldl
pop
mov
xchg
or
xchg
dec
sub
pop
gs
mov
jle
mov
movsb
cs
pop
xchg
dec
dec
jo
in
popa
iret
sub
aad
dec
fisubl
dec
pop
cltd
in
stc
cs
adc
ljmp
jp
es
ret
cmp
mov
popa
int3
pushf
sub
push
jb
xchg
mov
sbb
lock
fstps
stos
repnz
into
imul
jo
add
push
in
in
int
scas
xor
std
scas
dec
test
push
js
icebp
ja
jle
cli
cmp
dec
scas
aaa
dec
arpl
mov
std
test
jmp
sbb
std
loope
and
fcmove
jb
stos
xchg
pushf
dec
push
lods
mov
mov
and
jo
int3
dec
mov
sti
adc
ljmp
shll
popa
cvtps2pd
lods
pop
jae
mov
mov
ss
jb
cs
loop
xor
xchg
sbb
xchg
nop
insb
movsb
js
mov
cli
ja
pop
test
cmp
inc
mov
pop
lods
rcr
or
ret
cli
aad
imul
sub
sbb
cmp
fwait
jle
arpl
mov
out
cs
jno
pop
push
pushf
mov
mov
mov
shlb
or
test
ret
mov
repz
pusha
cld
les
sahf
dec
shrl
xchg
mov
sub
sti
xor
ret
repnz
mov
mov
xor
movsl
mul
les
cltd
mov
fidivl
jns
out
cmp
leave
sub
mov
or
pop
push
aam
mov
les
cs
and
add
ja
mov
cld
cmp
cli
mov
dec
mov
mov
sub
test
pop
jle
popf
push
fistps
sbb
push
into
jge
aam
sahf
scas
sbb
sbb
mov
lock
pop
ror
pop
aaa
ret
jae
decl
insl
jae
cmp
or
cld
test
ljmp
outsl
lods
jmp
inc
std
push
cltd
stos
push
and
mov
aam
out
mov
cmp
clc
push
push
test
lret
pop
cmp
mov
imul
mov
mov
mov
jbe
addr16
mov
add
test
sub
mov
mov
jno
xchg
rcll
rol
mov
dec
in
jo
int
test
or
pop
lahf
lods
cli
inc
inc
push
sbb
or
push
push
sbb
shll
pop
or
push
xchg
test
cmp
fcom
loope
out
js
pop
adc
ficomps
into
adc
sbb
jg
loop
cltd
push
je
cmp
push
jmp
xor
adc
scas
or
stc
cmpsb
incb
inc
xchg
mov
orl
loope
sub
divb
ljmp
xchg
lret
xor
mov
stos
inc
imul
dec
or
lods
dec
xchg
bound
test
das
mov
push
pusha
add
fbld
or
inc
push
adc
in
adc
aas
fstpl
push
cwtl
lock
jbe
inc
mov
xchg
arpl
repnz
push
ret
inc
stos
pushf
sub
add
leave
add
mov
pusha
add
sar
mov
pop
or
rcl
fnstenv
pop
mov
sub
gs
or
mov
push
fildl
jle
hlt
xchg
mov
repz
or
xor
push
mov
xchg
xchg
mov
pop
shll
cmpl
out
lret
adc
mov
loope
in
imul
dec
jb
lret
enter
push
fidivl
pop
sub
aad
xor
ror
dec
push
dec
sub
pop
mov
test
int3
insl
aas
sub
sub
int
fmuls
dec
adc
bound
ljmp
fiadds
push
push
jp
push
pushl
mov
cwtl
cwtl
sbbb
adcb
adc
add
aas
xchg
sub
cmp
lcall
lods
sub
jno
adcb
stos
shll
sub
inc
jae
addb
stc
xchg
ret
add
mov
mov
sbb
lods
mov
adc
lock
xor
mov
into
mov
sub
test
gs
or
sub
fwait
sbb
les
mov
xchg
mov
fs
jge
sbb
add
aaa
mov
orb
cmpsb
sub
inc
outsl
es
and
jbe
jg
dec
jne
add
daa
adc
xor
in
adc
cmp
popf
xrelease
add
pop
jl
repnz
lret
dec
fisttpll
cmp
sti
xchg
ljmp
xor
cwtl
dec
loopne
add
cmpsl
jbe
xor
aam
in
rclb
mov
mov
xlat
sub
loope
and
stc
rcrl
adc
or
mov
push
pop
lcall
fs
ja
cmpsl
dec
das
push
cmp
xor
les
xchg
adc
ja
hlt
aam
stos
lock
out
mov
test
push
out
jl
cmp
and
xor
mov
lock
gs
dec
xchg
mov
loop
ds
cmpl
dec
je
jnp
add
leave
ja
push
mov
lret
push
mov
bound
es
mov
stos
jp
lea
jnp
mov
cmp
outsl
in
das
pop
xor
sbb
mov
inc
dec
and
inc
out
insl
pop
data16
arpl
shlb
aaa
lds
and
movsb
or
enter
cmp
repnz
jns
lds
inc
cmp
jne
mov
pushf
mov
scas
popl
pop
es
aaa
add
inc
jmp
lret
scas
cmpsb
pop
mov
adc
cwtl
or
sub
mov
or
test
loope
and
mov
imul
scas
jg
rolb
fistpl
daa
adc
pop
and
movsb
push
mov
dec
mov
sub
push
jb
mov
pop
test
es
repnz
mov
in
js
add
sub
xchg
arpl
sbb
dec
cmp
inc
mov
and
je
inc
test
stos
sbb
ret
ja
into
xorb
filds
jecxz
ds
and
jl
jmp
cmpsl
bound
pop
pop
dec
adc
fisttps
lds
pop
and
mov
nop
shrb
lret
stc
adc
inc
and
xor
pop
sbbl
sub
mov
or
fwait
dec
xor
loope
mov
mov
jle
scas
out
and
mov
push
test
scas
xchg
pushf
xchg
sub
sub
sub
cmp
mov
mov
sar
int
int3
fsubrs
insb
lret
jmp
incb
push
rcll
pop
into
bound
hlt
ljmp
ja
pop
jg
shlb
jnp
and
cltd
bnd
cwtl
outsb
mov
push
jno
insb
lcall
in
push
arpl
filds
fdivrs
mov
inc
leave
pusha
adc
cwtl
ljmp
in
inc
jg
dec
xchg
add
loopne
shl
inc
insb
inc
rorb
or
mov
leave
mov
adc
insb
inc
and
dec
push
mov
or
or
mov
out
aam
in
mov
int
jg
mov
daa
sub
sbb
loop
fnstcw
aas
bound
mov
mov
lret
mov
sub
adc
inc
sub
les
jecxz
push
sbb
add
lea
dec
or
dec
pop
sahf
xor
mov
sbbl
pop
pop
jg
shll
pop
sbb
dec
scas
shr
adc
push
rol
mov
fcmovnu
pop
cmp
pop
enter
in
lea
sbb
lret
xchg
fwait
push
std
xchg
xor
inc
xlat
and
cmp
pop
cmp
pop
add
rcrb
cmp
fistps
rcrl
pop
ss
pop
mov
add
mov
sub
fnstcw
ja
pop
add
movsb
test
and
repz
or
ret
fs
sbb
and
fisttpll
xchg
add
icebp
mov
pop
stos
in
and
fwait
push
pop
jbe
inc
ss
lds
inc
sub
inc
fbstp
push
aam
sub
mov
test
out
je
daa
mov
cmpb
dec
xchg
adc
not
ljmp
in
imul
lret
jae
rstorssp
push
mov
jnp
mov
sub
xor
rolb
test
xlat
stos
enter
sbb
xchg
popf
mov
jo
repz
and
cmpb
les
mov
sub
mov
adc
cs
cld
rcrb
mov
popf
outsb
sbb
arpl
cli
dec
and
in
dec
and
stos
sub
jnp
out
mov
arpl
mov
and
dec
ds
push
movd
jmp
movsl
movsb
enter
jo
add
loope
sub
mov
repnz
inc
push
pop
cmp
mov
and
jg
fistps
dec
sbb
divb
xor
stc
daa
test
test
dec
xlat
insb
sub
sbb
adc
insb
pusha
loopne
push
gs
mov
mov
mov
add
jle
out
test
leave
je
xchg
cmpl
aas
cmpsb
fs
repz
mov
xchg
test
arpl
mov
jp
fdivs
out
sbbb
daa
andl
cmpsb
mov
and
fimull
mul
mov
mov
sbb
mov
cld
or
sub
mov
jecxz
imull
jb
enter
aas
mov
test
dec
mov
jne
jp
cmp
arpl
mov
inc
cmpb
sti
pusha
mov
sar
mov
mov
sbb
mov
lea
xchg
ss
lcall
arpl
es
rcl
aas
jg
pop
ret
pop
movsb
add
outsb
cmpsb
sub
pop
cmp
sub
popf
mov
inc
sbb
dec
fs
mov
popa
enter
mov
movsb
cmp
fdivr
mov
jge
shll
sbb
enter
enter
dec
mov
jno
movsl
ds
lret
int3
movsl
popa
inc
movsb
lds
xchg
leave
insl
sub
jae
cmp
sbb
aas
pop
cmp
aad
mov
test
mov
insl
sub
pop
in
adc
test
cld
dec
jmp
pop
movsb
aam
xchg
xchg
mov
pop
fwait
and
in
sub
sub
pop
sub
mov
cmpsl
hlt
gs
insl
lret
lods
fdivl
sub
out
push
popa
mov
jmp
jne
adc
and
std
pop
push
inc
mov
ja
sbb
push
dec
xchg
cmc
mov
add
sbb
in
dec
insl
mov
push
aaa
mov
pop
jp
std
pop
jle
add
lret
add
test
mov
outsb
mov
ucomiss
push
int
ljmp
out
xchg
and
loope
inc
pop
or
mov
ss
push
jns
mov
push
daa
push
xchg
push
cmpsl
out
fildl
cwtl
jne
push
adc
mov
pop
sub
lds
mov
js
jmp
mov
fsubrs
mov
in
addr16
ret
gs
pop
je
xchg
es
shlb
aad
xchg
cltd
sub
push
std
gs
lret
cmp
mov
cmp
xchg
roll
xorl
or
adc
outsl
lahf
push
sbb
fiaddl
icebp
mov
out
pop
push
mov
lahf
cmpl
inc
ja
ret
sub
jno
pop
xor
inc
enter
inc
add
and
dec
testb
loope
lds
cmp
dec
mov
inc
out
pop
cmp
cs
mov
mov
fwait
ret
sahf
dec
xchg
enter
sub
outsl
fdivl
push
pop
cmp
cmpsl
jns
fcmovnbe
pusha
imul
mov
inc
in
add
xchg
jae
lea
add
and
jp
test
sub
mov
frstor
in
cwtl
fwait
xchg
jl
icebp
insb
dec
arpl
gs
out
mov
pop
jl
mov
push
jbe
sbbb
fadds
push
jle
lock
lea
sti
add
stos
jno
sub
xchg
loop
dec
mov
fwait
pusha
and
loop
mov
push
imulb
add
or
and
xor
adc
jb
xor
push
pop
cmp
icebp
inc
push
pop
int
pop
jb
out
dec
lret
adc
push
es
pop
int
xor
mov
dec
inc
pusha
sub
leave
iret
sti
and
jo
stos
nop
mov
loope
adc
scas
lret
mov
cld
data16
xchg
push
imul
cmp
sub
out
mov
push
xchg
inc
cmp
jl
test
inc
ja
in
xor
loop
push
rorl
fs
imul
fwait
xor
sbb
pop
fldt
scas
sbb
mov
push
mov
jge
jno
fdivl
loop
cmp
inc
aaa
mov
or
push
dec
je
adc
cs
les
out
dec
arpl
push
push
cmpsl
add
or
pop
jbe
mov
xchg
pop
out
aad
data16
lret
lcall
sbb
lcall
test
lods
or
mov
and
or
add
push
jo
fidivl
jae
sar
sub
and
cli
cmc
cld
and
xchg
mov
xchg
jo
mov
jb
imul
and
leave
ss
mov
mov
inc
scas
xchg
icebp
int
ret
pop
xchg
mov
out
mov
dec
test
cli
add
ss
xchg
dec
loope
ds
mov
aad
jp
lret
push
jmp
or
push
rclb
pusha
int3
cld
add
cs
es
cmpl
jp
lock
mov
stos
mov
push
mov
adc
imul
jae
push
mov
nop
add
ja
rcrb
pop
cmc
pop
lret
icebp
mov
dec
push
stc
sbbb
int
mov
mov
inc
ljmp
enter
js
sbb
dec
mov
or
fadd
imul
and
xor
mov
jge
push
pop
into
xor
mov
or
inc
ja
jge
cli
dec
adc
xchg
push
mov
and
icebp
xor
inc
cmpsl
fisubs
in
int
jne,pn
adc
mov
lahf
dec
add
in
add
mov
mov
mov
mov
xchg
jmp
xlat
push
out
mov
push
mov
pop
inc
mov
push
ret
xchg
lds
mov
scas
push
pop
popa
stos
inc
mov
icebp
ret
mov
mov
pop
and
fmuls
pop
inc
push
cmp
or
cmpsb
sbb
push
divb
sahf
fmul
pop
mov
jne
rclb
mov
ror
inc
push
andb
or
repz
sahf
repz
mov
scas
mov
stos
mov
and
and
adc
mov
mov
pop
xchg
xor
fdivl
lea
mov
out
movsb
add
cwtl
out
test
lahf
popf
imul
fsub
cmp
imulb
xchg
ja
xchg
mov
jbe
xlat
xcrypt-ctr
cmpsl
sbb
cwtl
and
scas
add
gs
mov
add
inc
enter
in
loop
addl
test
sbb
fstp
mov
mov
mov
add
shlb
cmp
mov
popw
jbe
mov
mov
fwait
enter
mov
es
push
mov
add
jo
pop
xchg
ret
loopne
stos
jbe
mov
add
sti
rcrb
repnz
rclb
adc
or
outsl
test
fnstenv
imul
add
arpl
loopne
sbb
inc
movsl
sbbl
inc
int
jg
sbb
in
xchg
ja
fisubrl
aad
iret
mov
jp
sbb
in
fidivs
mov
and
push
cmp
cwtl
mov
inc
or
xlat
xor
mov
jg
ret
cmp
xor
fs
pop
mov
loope
dec
dec
mov
js
icebp
push
add
lds
inc
pop
inc
or
mov
andl
dec
repz
cmp
ret
lock
loopne
ljmp
or
push
mov
ds
imul
stos
rorl
lods
ret
push
stos
scas
imul
xchg
pop
and
lods
test
sbb
cmc
mov
out
push
test
xchg
je
and
cmp
jp
push
mov
pushaw
mov
jns
sub
or
fldcw
mov
lods
in
adc
jb
lds
insb
xor
cmc
mov
xchg
lea
cwtl
lock
adc
outsl
inc
xchg
inc
int
ret
addl
test
add
pop
mov
js
pop
push
jl
ja
clc
out
pushf
push
push
or
sti
adc
push
stc
mov
push
dec
mov
dec
sub
add
dec
mov
or
jns
inc
es
hlt
pushf
lret
stos
mov
add
inc
pop
stos
lcall
ja
pop
and
shr
pop
scas
xchg
cmp
shrl
fistpll
ljmp
lock
pop
dec
pop
mov
sbb
pop
and
lds
inc
add
mov
sbb
sub
mov
lds
rorl
leave
adc
mov
lods
cli
sub
lods
dec
call
psrad
sbb
mov
and
sbb
test
and
addb
in
aaa
mov
out
orb
aas
hlt
sbb
cwtl
adc
mov
dec
add
xchg
xor
inc
or
jp
xor
stc
inc
xor
std
adc
push
pusha
inc
gs
pop
pop
lret
ja
movsl
push
jb
fcoml
sub
push
mov
int
pop
lret
xchg
cwtl
outsb
inc
mov
lods
pop
bswap
add
fsubl
imul
jae
stc
mov
push
mov
aas
test
inc
and
imul
mov
testl
or
fsubrs
lret
icebp
cwtl
and
mov
out
aam
test
dec
dec
pop
dec
adc
mov
sub
shl
mov
mov
push
les
xchg
mov
scas
or
insb
pop
stos
aas
inc
mov
rcrb
leave
xchg
xor
andl
cmp
das
pop
push
popa
mov
js
mov
icebp
aas
lods
ror
and
iret
in
rcrl
cmp
sbb
lds
fcomi
push
dec
lods
cmpsb
mov
fildll
cli
pop
test
mov
lret
mov
orb
int3
sub
imul
ja
add
push
xor
mov
data16
ja
addr16
test
fadds
int3
cld
fcompl
jbe
sbb
mov
sbb
orl
mov
pop
aas
hlt
fsubrs
mov
sbb
add
das
aas
aad
lea
cmpsl
jns
or
sub
rcll
cltd
inc
mov
int
sub
cmpsb
loope
mov
sbb
pop
test
arpl
out
sbb
pop
popf
inc
pop
cmpsl
nop
imul
cld
cmp
test
inc
inc
shrl
cmp
sub
dec
rcll
mov
stc
int
lret
mov
ds
std
aam
call
mov
and
stc
lret
movnti
lds
cmc
fwait
stos
lret
mov
loop
cmp
and
cli
cmpsl
je
ds
lahf
mov
fidivrl
cmp
pusha
dec
rcr
daa
mov
pushf
data16
add
outsl
rorb
inc
or
mov
and
push
fcompl
rolb
pop
daa
mov
cmp
or
into
iret
mov
push
rcll
popa
out
jns
or
sbb
mov
mov
lods
scas
aaa
xchg
cltd
cltd
ss
cs
loopne
jle
cmp
push
push
xor
cld
sbb
mov
cwtl
loopne
std
sub
xchg
mov
cs
fsubrs
push
lods
lret
mov
inc
movsl
les
sti
fcompl
int3
xchg
mov
cmc
inc
cmp
cmp
ja
cli
mov
cmp
lret
stos
lret
test
in
daa
bound
pop
testl
mov
mov
sahf
add
test
enter
jno
das
inc
fcmovb
loopne
dec
lahf
ljmp
stos
xor
les
mov
ljmp
outsb
xlat
push
sub
mov
fs
mov
test
fmulp
add
mov
je
jl
mov
gs
data16
jbe
sbb
sub
mov
stc
and
inc
sub
loop
adc
ret
mov
xor
movzbl
andb
bound
push
lret
xor
outsl
stos
xor
push
cwtl
xor
mov
jne
imul
adc
mov
clc
mov
shrb
out
pop
pop
dec
xchg
imull
dec
insl
mov
jae
dec
lret
addr16
mov
push
arpl
sbb
xchg
cli
imul
xor
mov
sub
stos
mov
sbb
fadds
shll
inc
push
mov
hlt
mov
dec
orb
les
pop
mov
cmp
inc
mov
or
lret
jg
xchg
mov
les
in
xlat
or
adc
mov
call
call
xor
mov
pop
cmp
dec
push
adc
nop
mov
das
sub
push
shlb
adc
cwtl
in
pop
dec
out
adc
sbb
sub
inc
pusha
sbb
xchg
lret
add
cmpsb
jnp
and
das
mov
ds
mov
imul
es
pushf
jp
popa
repnz
jp
loopne
int3
incl
mov
cwtl
mov
jge
loop
sub
sub
repnz
push
dec
adc
mov
scas
loop
xchg
sbb
jg
test
mov
mov
mov
cmp
je
sbb
push
enter
dec
cmc
enter
add
pop
sub
adc
sbb
out
pop
cmc
adc
pop
push
aas
pop
sub
mov
cmpl
aam
pop
rcrb
add
nop
stos
fwait
push
enter
sbb
pop
pop
push
loopne
jmp
out
adc
lahf
loopne
stc
bnd
push
lea
push
faddl
enter
ja
add
jne
aad
cwtl
push
ret
movsl
mov
push
sti
dec
adc
push
insl
xchg
int3
inc
divl
cmp
add
xor
ja
lods
mov
push
into
jbe
fidivrl
xchg
mov
push
int3
or
add
xchg
xor
cli
leave
filds
gs
js
jne
movsl
push
ficoms
pop
addr16
je
mov
or
outsb
fsub
push
out
inc
xor
mov
cmpsl
dec
inc
pop
dec
cmp
sub
sbb
fisttpl
mov
inc
jg
in
mov
mov
fnstenv
sbb
xchg
imul
fwait
mov
fwait
int
mov
adc
adc
test
stc
jg
xlat
nop
sub
mov
daa
mov
push
inc
xchg
dec
inc
cmc
lods
fistpl
clc
fisubrl
jae
xchg
push
int3
pop
mov
cmp
fdivrl
sti
lods
ds
mov
sub
pushl
inc
sub
ret
or
rcl
mov
test
shrb
pushf
stc
add
jecxz
dec
pop
jns
sbb
stc
sub
sbb
orl
mov
pop
enter
inc
adc
xor
roll
inc
andb
loope
jne
movsb
sub
jl
mov
inc
cmp
loop
sbb
mov
adc
js
push
call
adc
or
pushf
and
mov
enter
mov
cmp
loope
jbe
clc
sbb
xor
imul
aas
inc
sub
add
jae
dec
mov
jmp
pop
push
push
hlt
push
ljmp
icebp
push
adc
inc
jge
cmp
add
lods
xor
push
or
repnz
push
into
jmp
divl
es
push
sub
push
js
dec
sbb
cwtl
fadd
pop
jb
cmp
add
outsl
mov
ficoms
stos
repz
ret
pop
push
cld
insb
xor
cs
addr16
lcall
sbb
sbb
cmp
std
push
cs
test
mov
mov
jo
subb
jb
lea
jnp
dec
dec
loope
pushf
rcrl
lret
xchg
mov
cmp
sbb
mov
fwait
dec
icebp
movsb
ss
mov
xchg
mov
rcr
mov
xchg
mov
xor
xchg
test
aad
sbb
jno
data16
andl
inc
sarb
arpl
lds
cmp
add
dec
movl
mov
pop
mov
and
test
xor
imul
add
xor
adc
out
sbb
mov
ljmp
jb
cmpsl
pop
loope
xchg
adc
aas
jl
pusha
xchg
adc
add
ss
xchg
adc
xor
push
pushf
imul
incl
add
and
xor
outsb
sahf
inc
mov
mov
comiss
fsubs
movsl
mov
imul
hlt
push
mov
add
xchg
cltd
push
sti
es
fld
arpl
and
mov
cmpsl
cmp
addl
xchg
fildl
jns
jb
lret
mov
mov
pop
repz
mov
scas
lods
das
xchg
out
shlb
pop
xchg
xchg
mov
xlat
call
pop
and
lods
ficomps
mov
and
mov
lcall
addr16
lods
cli
xor
lahf
mov
lret
aam
fcompl
cmp
mov
mov
ret
mov
filds
les
pop
inc
cmpsl
dec
mov
mov
sub
xchg
fiaddl
sar
inc
jnp
or
pop
repz
scas
xchg
shrb
pop
aam
jmp
stos
lret
cmpsb
inc
in
pusha
mov
or
in
fcom
js
cmp
xor
inc
inc
arpl
lcall
jo
insl
enter
notl
repnz
aaa
mov
repz
jo,pn
push
jo
out
outsl
lea
mov
js
loopne
jle
mov
dec
adc
push
push
mov
mov
cmp
add
hlt
rcrb
xchg
xchg
nop
or
stos
rcrl
sbb
fisttpll
adc
int
mov
in
addr16
imul
cmp
mov
and
push
xchg
imul
jno
lea
cld
in
fildl
and
adc
pop
in
mov
sbb
aad
jb
les
cmpsb
xor
sub
int
aas
cmp
mov
sbb
push
mov
div
pop
xchg
xchg
movsb
mov
mov
xorb
jp
pop
inc
ret
inc
pop
push
mov
imull
test
sub
in
enter
and
int3
inc
inc
mov
fdivl
or
aas
jp
cwtl
imul
dec
ss
in
mov
outsl
add
jmp
adc
push
adc
movsb
jl
cmpsl
mov
jb
rorb
adc
fcompl
ljmp
inc
pop
xor
pop
jge
push
rol
mov
leave
adc
or
jbe
hlt
add
scas
mov
cmp
repz
push
shrl
test
leave
fbstp
movsb
enter
mov
adcl
outsb
loop
mov
pop
mov
cmp
mov
stc
in
adc
inc
or
scas
fdivs
mov
sbb
dec
push
rep
lods
push
nop
dec
enter
sbb
stos
fldt
adc
xor
int
sbb
fisubrl
and
js
in
sub
cmpl
jno
sbb
ds
mov
sbb
ljmp
jl
or
int3
fdivrs
fildl
fistps
mov
shlb
push
mov
inc
shlb
scas
imul
fwait
mov
stos
dec
inc
ficoms
out
lea
scas
cmp
loopne
cld
cmp
lret
cltd
repnz
push
cmp
sbb
sub
xor
sarl
cmpsl
dec
pop
jmp
adc
movsb
adcl
andl
mov
mov
cltd
imul
xchg
out
pop
scas
or
sub
xor
outsl
or
cmc
dec
sub
dec
imul
and
cmp
pop
jmp
insl
sbb
mov
fdivl
movsb
ror
stc
leave
or
in
mov
call
and
mov
iret
test
ja
mov
cli
add
mov
mov
and
mov
subb
lret
int3
push
in
add
mov
int3
xchg
mov
xchg
lea
inc
mov
rcl
outsl
mov
pop
mov
leave
add
lock
dec
cld
ss
ret
int3
dec
and
mov
dec
jnp
cmp
mov
adc
movsb
imul
xchg
cmpsb
sbb
xor
push
jge
inc
shll
push
sub
xorb
mov
mov
in
pusha
adc
and
repnz
loopne
adc
jge
add
jne
xchg
ljmp
mov
negl
hlt
ret
fsubrl
nop
or
addr16
push
movsb
aam
hlt
dec
lret
dec
sub
mov
and
popa
mov
movsb
cmpsl
mov
lret
mov
push
fbld
stos
jp
pop
cmc
scas
int3
dec
lock
lds
inc
rolb
sub
xor
sbb
add
add
adc
cmp
jns
adc
pop
ds
cmp
aas
add
mov
pop
imul
dec
xchg
out
inc
jno
or
and
mov
aam
jl
mov
popl
push
xchg
pop
test
fidivrl
mov
and
xor
popa
mov
scas
stos
mov
out
dec
xchg
fsubrs
sub
mov
sub
jp
das
mov
mov
imul
ss
xchg
inc
adc
scas
cmpsl
xchg
adc
jecxz
xchg
sbb
aad
popa
into
es
je
pop
cmp
jns
cmp
mov
popa
jae
stc
pop
hlt
inc
stos
and
dec
pmuludq
std
adc
jge
mov
aad
push
jns
push
or
mov
ja
into
push
aad
call
xorb
add
insb
pop
xchg
insl
ret
call
mov
fnstsw
push
push
nop
xchg
adc
xor
sub
scas
jmp
xchg
fcompl
ror
movsl
fisubrs
cmp
xor
add
xbegin
jmp
lods
xchg
mov
jl
sbb
xor
je
pusha
loopne
push
xchg
pop
mov
push
mov
roll
mov
mov
mov
mov
lret
jnp
mov
and
repnz
pop
int
enter
sub
mov
add
imul
or
adc
leave
cmpsl
sbb
loop
inc
mov
mov
popa
mov
fists
push
lds
mov
mov
add
sbb
and
movsb
test
js
dec
jg
cld
in
sbb
out
addr16
inc
jae
inc
aaa
push
jno
push
in
into
adc
add
aaa
ret
daa
pop
xchg
scas
and
lock
fs
inc
fistpl
push
ds
mov
or
add
repnz
dec
jae
fwait
cli
pop
pop
sub
test
popa
lods
popa
rclb
repz
mov
jle
nop
call
push
pop
jno
jno
imul
and
xchg
xchg
mov
mov
lcall
imul
adc
adc
inc
mov
fcoms
rcll
aas
mov
and
sbb
cmp
and
dec
adc
pop
push
push
fcoms
lret
iret
jae
js
ret
outsl
cmp
andl
cmp
sub
and
pop
mov
inc
fmull
mov
fnsave
mov
pop
or
add
data16
push
pop
cli
fistpll
fwait
push
mov
inc
push
push
mov
mov
insb
mov
rcrl
jmp
flds
sub
je
pop
xor
xchg
int3
aam
lret
inc
sub
or
popf
push
cmpsb
xor
stos
or
adcb
add
sbb
xchg
and
xor
jl
mov
das
xchg
mov
jbe
pop
or
adc
mov
or
pop
xor
xchg
dec
cmp
pop
pop
push
inc
push
mov
psubusw
jo
jmp
inc
in
test
sbb
mov
ret
mov
outsb
andl
inc
test
sub
and
jno
or
or
jg
dec
adc
mov
fsubl
adc
sbb
push
dec
mov
mov
mov
sub
stos
popf
push
pop
fwait
mov
jle
inc
pop
arpl
shll
adc
or
test
inc
jl
xlat
mov
xor
out
repnz
xchg
inc
addb
inc
pop
pop
xchg
pushf
cmp
movsl
test
jp
xor
std
cmp
dec
xchg
push
mov
xlat
ret
sub
fwait
iret
sbbl
mov
xchg
jno
inc
out
or
add
mov
and
mov
jnp
or
inc
xchg
out
sbb
out
xchg
add
push
pop
jae
jb
cmpsl
xchg
rol
fnsave
xchg
cwtl
cld
dec
mov
ret
flds
fs
in
mov
mov
pop
movups
mov
cmpsl
aam
sub
mov
mov
rorb
test
xor
mov
inc
pop
sbb
popf
dec
loope
mov
loop
adc
sub
idivb
cmpsl
ret
push
or
enter
cmp
jg
idivb
add
mov
fadds
or
ror
fcoms
xor
pop
adc
sbbl
arpl
lret
inc
push
repnz
or
repnz
cwtl
clc
adc
cltd
pusha
sahf
scas
pusha
or
push
rorb
mov
lock
mov
movsb
mov
xor
add
shl
cmp
adc
outsl
aas
adc
and
jge
dec
add
aam
orb
imul
push
mov
enter
cmpsl
in
fisubs
test
pushf
add
enter
jg
scas
loopne
test
loope
mov
push
idivl
ds
gs
jnp
pop
jle
sub
outsb
sbb
stos
stos
pop
sub
fnsave
push
xlat
jae
cmp
outsl
repz
sti
out
cmp
xchg
seta
mov
inc
inc
xchg
or
mov
push
cmp
cmp
jl
cld
cmp
and
cmp
jecxz
cli
mov
fcom
mov
rcl
inc
cli
lods
mov
outsb
iret
les
jecxz
or
inc
mov
push
jle
cwtl
dec
and
adc
sub
xchg
jmp
cmpsl
adc
cmp
je
pop
xchg
cmpl
mov
jae
mov
je
nop
hlt
xlat
cmpb
and
jge
loopne
inc
nop
das
pop
push
adc
add
imul
adc
icebp
leave
repnz
lock
aas
push
cmpsl
out
push
lahf
outsb
pop
cmp
fs
push
mov
pop
lods
sbb
mov
stc
inc
mov
jp
test
add
in
fidivrs
sbb
mov
push
xor
jg
push
movntq
in
jg
hlt
mov
mov
hlt
ja
dec
inc
mov
push
ret
call
mov
jl
jae
cli
or
cmp
push
xchg
call
add
rorl
je
jl
sarb
movsb
inc
cmc
pop
rclb
add
pushf
imul
js
stos
xchg
pop
fdivs
shll
loopne
or
mov
push
cli
dec
mov
dec
in
push
repnz
movsb
outsl
adc
xor
movsl
loope
scas
imul
movsl
push
jg
and
push
dec
and
icebp
sbb
lods
push
pop
jle
cld
movsl
xchg
push
pop
aad
rcrb
ficompl
jae
ret
pop
aaa
int
pop
mov
dec
outsl
sbb
jb
and
fistl
cmp
ljmp
mov
or
cmp
aam
cmp
inc
sub
cld
outsl
fwait
sub
pop
mov
push
int3
repz
pop
daa
add
xchg
call
inc
iret
adc
ja
xchg
push
loope
push
fistps
aam
mov
je
inc
ljmp
inc
fwait
push
call
jnp
mov
data16
add
cmpb
gs
adc
jge
jnp
xchg
inc
popf
mov
lahf
adc
lret
pop
mov
push
fs
cmp
jl
std
sbb
mov
mov
fs
jno
fs
mov
or
movsb
shl
dec
ret
fistps
aaa
jl
cmc
lods
pop
in
and
jne
loopne
mov
mov
mov
pop
or
popa
mov
pop
sbb
lods
mov
jo
dec
das
int3
nop
pop
mov
repnz
es
adc
daa
mov
xor
push
lea
pushf
insl
std
jl
dec
andl
or
xchg
mov
mov
mov
outsb
cmp
lods
mov
mov
cmp
test
adc
xchg
cld
add
call
rcrb
xor
popf
xor
xchg
fiaddl
xlat
ret
out
faddl
pushf
es
gs
jmp
lahf
mov
pop
xchg
mov
cmp
sbb
xor
insb
or
vmread
enter
nop
xchg
jecxz
xchg
cmp
mov
push
sub
shrb
inc
lds
push
sbb
arpl
mov
bound
sarb
roll
cld
jo
and
icebp
add
pop
adc
lods
mov
jne
dec
adc
sub
jge
popf
imul
fmull
shll
cmpsb
testl
jae
sbb
adc
cmp
loop
ret
aad
or
arpl
cmp
pop
js
or
les
lret
sbb
hlt
xor
inc
lea
xchg
ds
mov
icebp
cmp
push
dec
push
inc
sub
pop
ror
insl
mov
fstps
rcr
mov
cmp
inc
loopne
adc
adc
mov
lock
faddl
inc
push
ja
fldl
pop
mov
inc
inc
pop
in
dec
or
shlb
mov
inc
dec
mov
stc
stc
mov
leave
mov
imull
sbb
std
mov
mov
add
jle
mov
hlt
and
mov
rcrb
sub
rcl
jns
movb
lods
sbb
adcl
not
dec
inc
jp
aas
pop
roll
jo
sub
xchg
pop
xor
pop
movsb
mov
lds
lcall
test
push
inc
movsl
sti
outsl
fisttpll
stc
or
ss
or
pop
fisubl
inc
xchg
std
sarb
mov
addr16
mov
push
mov
jp
push
nop
shl
jle
mov
pop
das
push
inc
scas
jle
push
inc
aam
pop
push
inc
insl
push
bound
cmp
cmp
ljmp
pop
xchg
jge
pop
push
clc
fadd
mov
int
iret
jno
loope
cmp
hlt
sbb
psubsw
sar
jg
scas
mov
mov
lret
cmp
mov
add
cmp
adc
sti
adc
sub
leave
in
or
outsl
xchg
pushf
jae
cmp
mov
push
cwtl
sbb
xlat
sbb
sti
stc
sub
adc
mov
mov
mov
into
lea
sbb
or
fldcw
adc
movsl
add
add
gs
pushf
and
pusha
mov
xchg
inc
or
lods
xchg
out
mov
mov
push
xchg
push
lahf
mov
test
sarl
insl
jg
rcrb
pop
sbb
add
or
pop
mov
idivb
repz
xor
cmpsb
loopne
mov
add
aam
xchg
dec
imul
mov
jae
mov
stc
nop
sub
mov
push
push
cmp
mov
or
pushf
jmp
in
pop
outsl
mov
cltd
les
lea
outsl
inc
lods
dec
movsb
dec
add
dec
pop
mov
xor
aas
or
mov
movsb
sub
scas
pop
xor
pop
inc
sub
adc
pop
mov
sahf
inc
mull
cmpsl
adc
or
xor
subl
adc
sub
or
dec
push
adc
stos
ja
lods
lret
leave
add
andb
test
add
hlt
inc
add
push
test
cmp
ret
pop
rcrb
in
xchg
jbe
xlat
sbb
outsb
test
loopne
push
adc
jo
add
and
insb
and
enter
movsb
mov
jo
mov
or
cmp
into
add
cmp
cmp
addb
fadd
test
inc
mov
and
cs
pushl
add
lods
pop
lcall
sar
cld
mov
bound
dec
dec
sbbl
or
dec
mov
jo
pop
fimull
fwait
popf
sub
mov
and
sbb
inc
pop
jnp
inc
outsl
popf
pop
pop
popa
pop
and
int
mov
pop
fists
mov
adc
mov
mov
andb
fildll
shl
inc
pop
test
push
xor
in
mov
jle
pop
sbb
pop
in
or
push
jl
je
pushf
popf
mov
dec
les
lahf
mov
and
mov
xchg
ret
cmp
dec
jns
sub
lea
sub
xchg
cmp
js
cmp
imul
pop
jne
arpl
xor
xor
xchg
ret
lret
mov
inc
push
roll
sbb
popf
insl
bound
fwait
pop
mov
lods
ljmp
imul
cltd
outsl
sub
jle
add
xor
mov
push
cli
enter
cmc
fdivrl
xchg
mov
push
dec
popl
insb
pop
push
sub
or
push
xchg
lods
sub
mov
cmc
lret
xor
xchg
negb
inc
inc
and
mov
xor
lods
fsubrl
stos
xchg
es
sbb
mov
mov
mov
add
lods
mov
sub
cs
ret
mov
lds
push
or
inc
adc
sub
jg
jo
cld
ret
sti
fcomip
push
mov
loope
pop
lret
mov
inc
mov
aas
jno
adc
into
cld
jae
sbb
outsl
outsb
cs
mov
mov
inc
inc
add
lret
pop
loop
sub
les
pop
add
scas
jb
arpl
lods
iret
cs
incl
sub
dec
jp
filds
fldcw
sub
dec
cmp
lods
pop
ds
add
ss
repnz
push
jle
ret
imul
filds
out
fsts
inc
sub
imul
pusha
cmp
and
mov
cmc
fadds
sub
sub
aas
dec
pop
mov
jbe
pusha
jl
dec
inc
adc
adc
push
push
mov
push
mov
push
scas
sub
push
mov
pushf
inc
pop
or
cld
xchg
xor
cmp
cld
mov
add
addl
es
int
xchg
clc
xor
pop
enter
mov
mov
jb
les
xchg
iret
iret
inc
in
dec
dec
sub
fldcw
inc
and
bound
les
into
sbb
les
pop
add
cmp
aad
xlat
mov
in
pop
int3
xchg
mov
or
insb
mov
xchg
xchg
mov
dec
add
and
cmp
xchg
xor
faddl
inc
iret
fistpl
or
inc
push
inc
lret
aam
mov
sbb
cmp
mov
dec
add
adc
loop
sbbl
sub
movsb
sahf
mov
rcl
or
mov
sarb
xor
movsb
fcmovu
or
push
jbe
inc
nop
or
les
jle
ficoml
outsb
mov
jecxz
icebp
shrb
cmp
push
and
dec
pop
cmp
cmpsl
dec
sahf
push
dec
fisttpl
jl
cli
sub
mov
sbb
pop
sbb
es
fstl
mov
mov
lock
outsb
popf
sub
inc
lods
xor
add
pushf
mov
pop
shlb
xor
aam
lret
loop
pop
inc
pop
inc
push
pop
cmp
enter
inc
or
dec
lret
mov
fstpt
mov
pop
lahf
jmp
addl
inc
inc
adc
imul
or
pop
push
cmp
repz
negl
or
push
pop
daa
out
dec
repz
rorb
in
pop
push
cmp
sub
scas
movsl
push
adc
mov
dec
repnz
mov
ljmp
adc
sbb
shr
stos
leave
leave
or
or
and
dec
add
pop
mov
inc
leave
out
movsl
xchg
cmpsb
nop
add
repz
lods
notl
jp
test
xor
out
add
push
adc
xor
leave
ret
aas
dec
iret
js
hlt
pop
jle
js
xchg
mov
jnp
outsl
mov
call
add
scas
xor
add
sahf
mov
outsl
and
sub
pop
mov
cmp
mov
cs
aas
and
inc
xchg
inc
pop
xchg
ja
pop
icebp
out
push
aaa
add
cmpsb
jp
mov
jle
arpl
add
jnp
xor
cmp
out
mov
adc
popf
imul
jbe
sub
xlat
int
mov
pop
fstpl
fisubl
xchg
mov
mov
jns
js
fstps
mov
out
or
outsl
enter
xchg
dec
mov
dec
and
in
cld
pop
mov
ret
stos
jae
popl
insb
ds
popf
mov
vcvtps2pd
out
xchg
cmp
ret
aas
jl
in
inc
aaa
cmpsb
sub
jmp
mov
xchg
aad
pop
repz
subl
enter
xlat
scas
sub
mov
mov
pop
pop
mov
and
inc
bound
sub
lret
adc
test
add
in
lods
pop
and
arpl
sub
outsl
iret
stos
jae
cmc
dec
lret
xor
mov
lahf
aas
subl
loopne
fcoms
cmp
mov
leave
jp,pn
ret
lods
dec
dec
add
movsb
add
sti
dec
leave
cmp
shlb
test
leave
sbb
je
adc
out
cld
and
dec
lods
add
shlb
mov
out
shlb
push
adc
cltd
sub
aam
adc
arpl
mov
add
or
jo
mov
leave
mov
shrl
lret
lock
inc
and
pop
push
add
ljmp
das
cmp
add
cmc
mov
aad
lods
stc
mov
mov
je
sbb
fwait
sti
add
pusha
jmp
inc
cli
sti
add
dec
stos
mov
push
sti
xchg
mov
adc
push
loope
or
int3
daa
pop
mov
inc
mov
mov
xchg
test
out
sti
sahf
inc
fxch
and
sbb
jmp
sub
in
push
pop
subb
hlt
mov
mov
clc
inc
sub
add
mov
inc
pop
mov
or
in
pop
xchg
sbb
ret
or
jne
dec
fidivl
movsb
cmp
fs
sbb
cmpsb
in
jnp
jo
mov
add
jnp
xchg
cld
inc
cmc
call
sub
xchg
sub
lret
mov
or
cmp
aas
out
mov
rorb
leave
mov
and
in
addr16
repz
cmp
dec
adc
adc
fs
fs
sbb
scas
mov
lock
jecxz
push
int3
mov
stos
outsl
stos
mov
sti
in
fs
or
pop
lcall
push
dec
cli
dec
push
or
lret
cmp
fdiv
fistpll
push
cmp
jl
int
or
rolb
sbb
loop
andl
insl
sbb
sub
sub
mov
sbb
xor
in
movsb
mov
adc
lds
sahf
add
mov
int3
into
lock
stos
in
pop
cmp
jecxz
push
inc
repz
insb
pushf
out
mov
push
xor
mov
not
push
push
cmp
dec
stc
mov
jg
cltd
out
mov
das
decb
loop
and
pop
sbb
xchg
mov
adc
adc
popa
cltd
cli
pushf
push
aam
fdivr
pop
in
lods
mov
dec
add
movsb
pushf
into
xchg
mov
and
subl
sbb
dec
dec
mov
and
dec
aas
mov
fstpt
xor
inc
mov
xor
lcall
pushf
shl
and
dec
iret
cwtl
adc
jle
shr
leave
inc
xchg
in
push
test
lcall
push
cld
cltd
mov
imul
cltd
mov
fucom
mov
movsb
out
clc
int3
lahf
aam
or
jmp
mov
dec
mov
insb
cmp
cmp
inc
ret
xchg
dec
outsb
cmc
loop
in
mov
and
mov
data16
pusha
sub
sbb
mov
jno
add
in
inc
mov
scas
push
test
ret
das
scas
or
out
add
jle
mov
xchg
imul
hlt
rol
jo
rcr
nop
shrl
push
mov
and
jns
xchg
lds
jo
pop
mov
sbb
and
nop
mov
cmpsl
cmp
cmp
arpl
lds
mov
orl
jno
sbb
in
adc
jl
mov
mov
sarb
aas
aam
mov
sbb
out
xor
mov
and
sub
push
sbb
cld
enter
inc
mov
mov
add
sbb
push
or
mov
insb
or
and
mov
push
aaa
inc
sub
movsl
cmpsl
iret
dec
mov
add
inc
shrb
leave
int
jecxz
xchg
add
sbbb
pop
dec
cvtps2pd
mov
and
cmpl
jg
jae
ret
inc
inc
or
push
mov
pop
test
out
or
mov
mov
aas
in
push
lock
sarb
jg
adc
repnz
xor
jle
cs
stos
cli
cmpsb
out
and
sahf
inc
cmp
icebp
mov
dec
mov
and
cmp
inc
lea
arpl
push
fwait
test
xchg
pop
xchg
mov
dec
xor
movsl
dec
orb
jp
inc
dec
mov
xchg
into
and
cmp
sbb
pop
or
and
pop
stos
adc
clc
insb
fiadds
dec
sub
scas
arpl
cmp
and
mov
pop
add
fyl2xp1
mov
shlb
call
std
adc
cmp
in
hlt
bound
mov
cltd
push
jmp
xor
and
lcall
mov
fimull
loopne
and
or
addl
lret
sbbb
dec
fdivrs
popa
ljmp
cs
sub
mov
xchg
dec
xchg
popa
mov
pop
mov
pop
inc
sar
test
xchg
sub
add
push
sub
int
lret
mov
outsl
orb
int
cmp
push
out
ljmp
jne
xchg
or
jns
xchg
mov
ret
inc
lds
out
cli
mov
inc
mov
call
mov
sbb
loopne
cmp
inc
xchg
pop
sbb
shll
repnz
xor
test
or
jle
and
orb
pop
test
or
add
adc
mov
sbbb
mov
add
mov
cmc
pop
nop
sbb
adc
xchg
cmpb
xchg
inc
inc
sub
or
or
jnp
sbb
cmpl
push
mov
jmp
xchg
repnz
adc
cmp
mov
loope
fistpll
jnp
lcall
nop
filds
leave
ljmp
sbb
cltd
or
stos
and
jp
in
mov
clc
nop
or
cmp
insl
dec
mov
and
int3
pusha
inc
xchg
pop
or
loopne
jl
mov
inc
into
fcoml
jnp
xor
mov
adc
push
fisttpll
out
mov
mov
test
dec
cs
icebp
lcall
or
cmpsl
xchg
stos
xor
rcrb
add
loope
loopne
fisttpll
test
dec
mov
push
dec
cltd
shlb
and
push
cmp
dec
sub
mov
cli
mov
clc
add
fwait
mov
push
cmp
cs
pop
cwtl
cwtl
sub
cwtl
cwtl
cmp
and
jl
pop
int
popa
inc
xorb
inc
push
popf
iret
mov
sahf
mov
mov
dec
pop
sarb
dec
pop
loop
je
sarl
cmpsl
movsl
popa
and
imul
in
gs
xor
popf
mov
loop
andb
shlb
lret
sbb
sub
xchg
enter
outsb
xor
inc
and
pop
xchg
push
cmp
fldcw
push
in
xor
dec
inc
mov
gs
loop
xorb
dec
and
xchg
xor
mov
inc
mov
in
call
mov
sub
mov
jmp
pop
in
daa
mov
jns
mov
mov
inc
push
ret
sbb
stos
push
add
cmp
inc
adc
rorb
out
cmp
push
inc
and
cld
or
jno
pusha
pop
pop
repnz
sbb
inc
and
inc
movl
cmp
inc
cmp
push
mov
push
sbbb
test
sub
rcrl
es
xchg
mov
pop
dec
cwtl
int3
popa
mov
fld
inc
pushf
push
xchg
jp
out
imul
test
or
fcoms
pop
outsl
mov
movsl
mov
pop
cmpsl
call
outsb
push
sbb
cltd
bound
movsb
addr16
push
ret
jb,pt
mov
lods
mov
sub
jl
mov
xor
mov
pushf
push
repz
mov
cld
scas
setg
outsb
cld
repnz
or
adc
rolb
movsl
dec
into
fs
mov
popa
cli
out
popf
scas
vpaddq
loopnew
mov
and
dec
jbe
push
mov
push
dec
pusha
int
cmp
xchg
iret
sub
pop
cmpsb
scas
sbb
leave
xchg
cwtl
push
cs
cld
insl
jg
mov
pop
fnstcw
sub
outsb
ret
cld
pop
push
push
sbb
push
jg
cmp
jmp
leave
data16
xor
pop
xchg
lock
jns
xor
cmpsb
stos
add
aaa
jo
sbb
jg
mov
testb
push
lret
ljmp
ret
push
js
rol
stos
cmp
lock
cmp
scas
and
fdivrs
fsubs
loopne
lds
sbb
test
sbb
mov
inc
jb
mov
or
mov
jl
inc
iret
or
cs
outsl
sarb
mov
jno
mov
enter
enter
xchg
add
jbe
jmp
ret
into
xchg
dec
pop
testb
cmp
adc
out
or
mov
loope
clc
popa
jne
insb
mov
cli
gs
notl
pop
push
add
cmc
push
inc
sub
sub
sub
inc
mov
arpl
fwait
cmp
inc
mov
cmp
mov
jge
inc
xchg
lods
jbe
fsubrs
pop
pop
mov
insb
xlat
test
inc
out
add
imul
jae
sahf
jmp
rorl
add
inc
xlat
push
loop
ret
jp
es
inc
mov
mov
arpl
jns
cmp
iret
rolb
sbb
bound
enter
call
fdivs
mov
mov
fcoms
mov
mov
leave
mov
pop
xchg
xor
repz
mov
xor
xchg
mov
insb
sbb
sahf
int
inc
dec
inc
hlt
jae
addr16
faddl
out
rorl
sbbl
jb
jg
stos
sbb
iret
movsb
dec
ret
jg
or
dec
pop
sub
mov
inc
xchg
das
pop
pop
test
rol
cmp
lcall
pusha
fisubrs
pop
int
mov
rclb
inc
movsb
lock
ret
popf
lret
sbb
and
cmp
pop
xchg
ds
mov
cmp
mov
decb
xchg
cmp
mov
fdivrl
inc
sti
push
std
and
shl
cwtl
movsl
lahf
add
jg
mov
jnp
fidivrs
pop
or
imul
iret
es
push
inc
cld
jae
mov
movsb
mov
fisubrs
cld
xor
mov
sbb
inc
inc
dec
je
cmp
or
dec
pushf
es
xlat
xor
into
jle
jnp
lock
rorb
gs
xor
or
cmp
aas
adcb
sub
inc
addr16
sti
fwait
inc
lcall
stc
out
mov
int
imul
loope
xchg
xchg
inc
enter
pop
call
add
movsl
out
icebp
ror
hlt
cmp
in
mov
xchg
lods
scas
jnp
fdivrl
sti
add
mov
cmp
popa
cmpsl
outsl
push
lcall
add
add
test
inc
xchg
add
sbb
add
loopne
and
into
xor
ret
pop
xchg
cmp
push
in
pushf
lret
jl
adc
jg
mov
es
sbb
dec
popf
out
fisubl
pop
xor
pushf
lea
dec
sarb
pusha
aam
jae
push
imul
repnz
or
fiaddl
scas
jge
arpl
cmp
call
mov
xchg
mov
sub
inc
push
mov
sub
decb
out
sub
loop
pop
jae
call
adc
mov
or
inc
pusha
cmp
add
xchg
mov
jl
call
pop
cli
ja
lea
pop
mov
enter
xlat
cmp
imul
and
add
rorb
stos
popa
xlat
push
nop
mov
xor
repz
jae
add
dec
jp
jg
jae
ljmp
scas
sub
sarb
popa
xchg
rorb
and
movsl
adc
and
or
push
stos
and
jnp
mov
ret
js
dec
adcl
pusha
jecxz
push
fucomi
movsb
and
les
pop
jno
repz
inc
mov
stos
xor
jno
xchg
hlt
sbb
mov
add
dec
outsb
adc
xchg
shll
jno
xchg
dec
mov
mov
sub
jp
stos
jns
cmp
xchg
ljmp
les
out
add
push
fwait
or
popf
fsubr
and
dec
loopne
or
testb
jae
add
push
shlb
mov
outsb
cmpl
inc
imul
sbb
mov
mov
add
adc
jmp
icebp
hlt
mov
or
icebp
and
sbb
pop
lcall
mov
pop
and
dec
adc
pop
aas
nop
sbb
push
ret
xchg
les
jns
jle
xchg
aas
adc
adc
ds
xor
and
add
push
fimull
xchg
and
sub
or
xlat
push
notb
and
mov
int
mov
cmp
in
in
sub
push
xor
xchg
or
ror
lcall
lods
call
imul
push
iret
xchg
xchg
adc
jno
add
xor
dec
rcl
push
mov
lods
or
mov
dec
int
sti
mov
mov
and
leave
test
inc
loop
gs
sub
arpl
xchg
jb
adc
sbb
lcall
stos
sub
cmp
push
bound
sub
in
pusha
xchg
and
push
roll
test
mov
add
and
pop
xor
aam
pusha
ljmp
xor
mulb
fldl
cmp
xchg
in
fsubrs
mov
adc
or
or
orb
aas
cmpb
jnp
pop
rolb
and
jg
lods
ljmp
dec
or
pop
icebp
cmpsb
shrb
dec
push
popl
movsl
adc
loop
sbb
inc
mov
fsubr
or
pusha
int
orb
adcl
les
pusha
sbb
je
sbb
xchg
inc
aaa
js
mov
loope
mov
add
mov
dec
ret
push
and
jo
je,pt
in
pop
xchg
rcrb
stc
hlt
mov
jle
pop
xor
push
test
push
jns
cwtl
testb
hlt
sub
notl
imul
cltd
repz
add
call
cmp
cltd
mov
push
mov
sub
jb
jne
mov
mov
pop
and
stos
mov
addb
nop
stos
dec
out
icebp
dec
jbe
ss
xor
insb
orb
xor
mov
fstl
pop
fisttpll
cld
push
std
pop
pop
aaa
lods
int
sti
js
pop
stos
adcl
or
jo
into
insl
adc
lock
fnsave
add
mov
and
sbb
dec
nop
jb
jg
mov
or
fadds
add
pop
or
jp
ficoml
cwtl
cmp
leave
test
leave
or
stos
mov
sub
popa
nop
cmp
cmp
mov
jle
mov
into
inc
sbb
cmp
pop
jae
or
scas
jns
mov
lock
lods
adc
nop
or
test
jge
dec
fadds
jo
scas
or
and
dec
stc
and
scas
push
push
mul
stos
scas
xor
inc
shufps
iret
jmp
loopne
mov
mov
xchg
out
out
ret
pusha
or
sbb
dec
fldenv
push
xor
je
xor
cmp
stc
in
mov
xchg
sti
lret
xor
rolb
lock
inc
popa
dec
out
rolb
mov
push
clc
lret
dec
mov
scas
or
rcr
js
xchg
rcr
sub
mov
cmp
mov
int3
xor
shl
add
dec
mov
pop
ljmp
sub
call
in
mov
loop
or
jno
mov
push
mov
xchg
cmp
inc
or
and
push
pop
pop
je
fistpl
or
jecxz
sub
lods
adc
jbe
test
icebp
leave
jle
lret
and
addr16
jo
pop
rcr
rep
lods
stos
add
loop
pop
cli
ret
push
adc
jbe
mov
stc
dec
and
adc
fistl
cltd
cwtl
inc
das
repz
bnd
push
shll
push
xor
and
ds
sbb
or
fnstenv
fstpt
lcall
subb
and
mov
pop
add
lcall
and
push
shlb
es
cmp
xor
cmp
and
jg
decl
mov
bound
add
mov
cltd
jno
sub
stos
cmp
pop
lahf
mov
mov
js
out
insl
clc
xlat
adc
das
fsts
add
dec
sarb
vmulsd
mov
and
and
nop
fadds
pop
pop
fdivrs
cmc
mov
xor
daa
or
ja
or
push
pusha
mov
in
add
mov
ljmpw
mov
roll
lods
dec
or
mov
adc
sub
adc
pusha
loop
xchg
inc
mov
push
shll
ljmp
fsubrs
imul
rorb
cli
cmp
leave
sub
xor
mov
daa
stos
sub
aad
pop
cld
sbb
test
lret
adc
int
sub
xor
add
sbb
pop
cmpsb
aaa
push
addb
push
iret
fidivrl
cmp
bnd
push
inc
ret
enter
push
cltd
pushf
rol
loopne
sub
sub
cmp
call
xchg
and
repnz
dec
ljmp
or
inc
and
cs
adc
mov
dec
dec
std
das
inc
add
cmpsb
xor
rorl
sbb
mov
jg
pop
jnp
jg
std
scas
je
call
cmp
ljmp
cli
scas
mov
pop
rcrb
rolb
out
add
inc
mov
add
popf
and
mov
mov
cmpsl
insb
inc
aas
fsubs
out
pushf
sub
hlt
mov
pop
jp
in
std
sbb
test
cs
insb
push
pushl
js
rclb
in
jb
mov
inc
aad
inc
pop
add
lret
sbb
repnz
xchg
xchg
data16
fisttpll
cmp
cmc
pushf
call
fcomps
mov
ret
jle
pusha
cmp
mov
fistpl
inc
jp
jno
and
mov
cs
jmp
sbbl
xchg
mov
andl
ds
fildl
fmuls
aam
frstor
sbb
or
pop
popa
jmp
push
or
inc
daa
mov
sahf
dec
hlt
sbb
loopne
imul
inc
shll
loopne
mov
add
ficompl
pop
and
lcall
jae
and
push
inc
insb
cmp
rcll
push
in
jb
jo
lcall
mov
jmp
enter
push
int3
mov
push
stc
movsb
cmpl
rep
pop
pop
popa
cvtpi2ps
iret
dec
fmull
aam
sti
mov
inc
and
xchg
sti
pop
cmp
pop
fists
pop
or
hlt
lret
cli
inc
inc
stc
inc
cli
out
shlb
dec
mov
add
imul
jp
inc
ja
test
call
and
daa
inc
xor
push
cwtl
add
mov
js
enter
sub
ds
addr16
shrb
insb
stos
jp
inc
out
dec
test
leave
sbb
pusha
mov
nop
sub
sub
adc
test
pushf
out
jle
int
add
cld
inc
jle
pop
inc
aas
movsl
stos
pop
xchg
inc
cmpsb
lcall
or
sub
lods
test
loope
mov
fs
mov
mov
pop
push
mov
sub
fdivrl
dec
rol
xor
or
sub
cmc
mov
nop
loop
movups
add
sbb
mov
cli
mov
jnp
pop
inc
aad
stos
jge
testl
xchg
jle
xchg
jnp
push
xchg
fmul
xor
ds
lea
rclb
and
push
shrb
es
cmp
aas
ret
push
aas
inc
insl
add
out
je
scas
sub
mov
mov
out
or
pushf
sti
and
cmp
mov
xlat
cmp
jnp
inc
sbb
lock
leave
cmc
mov
loope
mov
and
push
enter
xchg
pop
or
push
stos
mov
jae
push
add
popf
inc
pushf
mov
xor
cli
jg
rcrl
inc
mov
repnz
inc
xchg
int
nop
lcall
int3
and
ljmp
push
xchg
mov
enter
pop
add
ljmp
or
loop
xchg
jle
orl
cmpsb
jmp
cmp
aas
and
mov
out
and
xor
fstpt
mov
and
dec
movsl
or
jbe
adc
xlat
test
push
pop
push
dec
jge
jns
mov
mov
jae
add
aam
imul
inc
mov
adc
inc
fldcw
rolb
cmp
inc
loopne
in
js
es
sub
adcl
into
insb
bound
je
or
hlt
pop
ja
add
rcrb
pop
movsb
push
rcrl
pop
movsb
mov
addr16
pop
rolb
cmc
fadds
lods
mov
sbb
xchg
xor
xor
jns
push
sub
push
cmpsl
pop
mov
and
stc
jmp
adc
jns
cmp
lods
cmc
mov
lret
jg
and
sahf
adc
mov
cs
push
mov
sub
push
add
sti
sub
jg
pop
mov
mov
xchg
adc
push
pcmpgtb
sub
mov
cltd
je
pop
jb
sbb
mov
add
lcall
testb
and
jo
rcr
push
into
and
outsl
ljmp
sub
pushf
lahf
into
mov
or
mov
and
lahf
sbb
or
out
dec
sbb
cmpb
sub
pushf
sti
into
and
cltd
mov
sub
mov
mov
out
jg
std
and
push
inc
mov
fcompp
lea
ja
nop
sti
and
lret
xor
xor
mov
sahf
adc
sub
inc
mov
in
aaa
popa
mov
std
add
dec
clc
ret
test
dec
mov
call
adc
orl
add
movsl
faddl
stos
sub
jnp
loopne
mov
int3
adc
test
adc
lods
xor
test
mov
aas
jmp
mov
loopne
mov
int3
stc
xor
mov
loope
and
mov
xor
dec
stc
push
loope
test
movsl
movl
sub
sub
mov
inc
dec
lods
lret
clc
xlat
push
xchg
aam
arpl
jne
scas
lahf
sbb
or
push
inc
xchg
and
mov
mov
js
in
rcrl
sub
aas
xchg
dec
adc
xchg
and
mov
or
and
lods
andl
jb
ss
pop
popf
jle
bound
and
ds
int3
jo
pop
pop
fs
in
mov
in
test
inc
lods
sub
mov
in
fisubl
jns
cli
fnstsw
sbb
add
inc
fisttpl
add
out
std
jno
inc
hlt
pop
lods
std
and
cwtl
stos
int3
ljmp
sti
outsl
scas
push
sbb
iret
dec
lods
sub
cmpsb
mov
push
adc
xor
addl
sub
ja
mov
loope
add
mov
mov
mov
and
fstl
jp
sbb
in
and
jb
add
jecxz
jle
cmp
cs
orb
and
cmp
jecxz
movsb
or
sti
lds
mov
jl
cmpsl
lret
mov
push
mov
pop
add
fsubr
fmul
jle
and
jge
fcoml
jns
jns
mov
or
movsb
popf
mov
rcrb
inc
data16
stc
and
sub
cmpsb
jb
mov
fdivrs
jnp
adc
inc
sub
or
or
inc
cmp
movsb
loop
xchg
add
cmp
mov
xor
test
popa
mov
out
dec
mov
popf
hlt
and
cmp
push
scas
sti
or
sbb
inc
leave
sbb
in
insl
call
jg
sbb
add
dec
test
test
or
test
lds
adc
faddl
imul
addr16
push
mov
inc
fistpl
sub
sbb
out
roll
and
sub
adc
xchg
add
xchg
push
and
rcrb
xchg
ret
xchg
insl
pop
mov
test
pop
push
mov
mov
pop
jae
test
dec
inc
jb
pop
movsl
mov
pop
rcrl
imulb
add
cmp
jns
sti
pop
fldl
add
jp
orb
inc
lahf
dec
nop
jp
std
aad
sahf
imul
xor
xchg
xchg
push
inc
dec
aas
push
ret
inc
cli
xchg
pop
loope
shrl
or
ret
push
fwait
test
mov
jb
adc
mov
xor
outsl
xchg
push
std
in
adc
pop
movsb
mov
scas
jae
insb
lcall
jp
enter
scas
movsl
pop
dec
arpl
or
xor
ret
fdivs
adc
hlt
lret
mov
int
imul
push
push
xor
mov
movsb
fwait
ljmp
pop
xchg
and
test
mov
pop
or
stc
ljmp
rcrb
subl
ds
in
push
push
int3
sub
rclb
and
sub
fmul
sub
test
movd
or
loop
adc
sbb
pop
pop
dec
fistps
inc
popf
sahf
test
fistps
mov
jge
mov
sbb
mov
pop
jne
bound
dec
sbb
xchg
into
imul
or
adc
pop
loop
shl
and
repnz
mov
push
nop
cmp
jo
imul
jg
sbb
inc
into
dec
or
add
dec
sbb
arpl
push
mov
mov
pop
mov
mov
and
inc
lret
pushf
repnz
jb
pandn
pop
shrb
push
push
clc
sub
mov
dec
push
aad
repz
scas
je
scas
inc
stos
inc
xchg
xchg
jo
push
ret
repnz
and
mov
mov
jno
dec
push
or
pop
inc
notb
jmp
jnp
dec
gs
inc
test
mov
bound
movsb
shrb
popf
add
fsub
inc
decb
pop
dec
out
jb
fadds
imul
ja
sub
xor
push
hlt
ficompl
andl
mov
or
lock
mov
mov
rorb
nop
add
mov
hlt
ret
push
or
push
scas
paddq
xor
adc
or
inc
pop
inc
push
dec
imul
sub
sub
stos
xchg
sbb
loopne
add
mov
cmp
loope
mov
rcl
add
mov
es
xor
inc
mov
jmp
frstor
inc
scas
imul
iret
clc
sub
ds
aas
jno
out
add
sahf
dec
mov
add
pop
or
sahf
and
sbb
push
mov
mov
movsb
ds
std
jge
std
lcall
das
std
mov
mov
cltd
push
xor
dec
sarb
imul
out
or
out
push
mov
fnstcw
xor
pushf
xchg
xchg
mov
mov
scas
mov
inc
stos
data16
test
mov
gs
jae
rcll
and
pop
lock
int
sbb
fisttpl
lods
nop
pop
sbb
cltd
push
loop
gs
push
enter
and
inc
call
sbb
push
jmp
ds
mov
sub
push
call
clc
ds
or
push
mov
and
mov
mov
and
xchg
lods
cmp
jno
aas
mov
fdivl
pop
and
inc
daa
lret
jb
mov
adc
bound
or
gs
sti
in
jge
ret
sbb
xchg
pop
and
mov
js
dec
jnp
out
mov
push
cmp
inc
cmp
mov
call
rcl
mov
mov
cwtl
inc
ds
pushf
mov
mov
add
ds
scas
xchg
mov
in
sub
mov
mull
repnz
sarb
into
jg
iret
push
mov
xchg
mov
shll
test
cmc
mov
add
cmp
lret
cmp
xchg
test
or
cmp
jne
jp
mov
and
lahf
push
inc
jno
notl
sbb
pop
enter
es
insl
push
mov
sbb
inc
cmp
arpl
out
daa
inc
test
imul
inc
stc
lret
test
dec
mov
lods
sub
es
cmp
aam
popf
jl
out
push
jno
inc
push
jnp
divb
int3
dec
mov
repnz
inc
cmp
jp
push
adc
xchg
in
sbb
cmc
ret
inc
mov
add
bound
xor
dec
inc
fdivrs
inc
push
test
outsb
pop
jl
rorb
add
push
ret
xchg
popa
aam
push
outsb
in
jbe
adc
mov
cmp
int3
ss
cltd
repnz
inc
ja
fcomps
jmp
sbb
add
in
les
movl
sbb
jo
add
inc
push
aam
or
daa
sbb
sub
xorb
push
stos
pop
mov
aad
shll
cmp
fbstp
lret
arpl
mov
xor
fstps
pop
jg
data16
lcall
out
outsb
jmp
ret
insb
cmp
daa
push
push
insb
pop
fldcw
add
je
insb
out
or
lock
test
dec
scas
fadds
movsl
loop
ret
sarl
xchg
dec
call
test
pop
cltd
test
lea
sub
jp
jecxz
inc
orl
je
jmp
imul
repz
push
cltd
mov
sub
pop
sub
fisubrl
cmpsl
pop
fcoms
cli
xor
sbb
adc
insl
imul
xchg
jae
les
stos
push
jmp
push
xor
adc
jno
aam
aas
sbb
mov
repz
outsl
add
ljmp
cmp
lret
dec
add
scas
jae
mov
mov
sbb
and
inc
sub
out
jg
aas
mov
xor
mov
mov
es
cmc
mov
popf
mov
or
jge
add
and
jnp
add
adc
add
aaa
jno
sbb
movsb
push
push
stc
fistpl
cwtl
jge
jle
js
loopne
pop
mov
dec
bound
mov
pushf
lret
lds
cmp
in
inc
loop
fildl
in
cmp
jg
or
mov
loope
jbe
mov
pop
cmp
pop
adc
imul
mov
push
dec
or
pop
addb
ljmp
mov
push
pop
fbld
jmp
fisubrl
cmp
push
cmp
jge
inc
test
js
mov
xor
cmp
lds
mov
leave
call
dec
in
pop
sub
dec
jge
cmp
add
dec
xchg
add
into
addr16
cmp
or
dec
repnz
sub
adc
xor
js
cmp
scas
aaa
jnp
mov
or
sarl
fs
add
add
mov
stos
jmp
push
pop
shll
dec
dec
aam
mov
cmp
cld
mov
sub
call
mov
popa
mov
mov
and
movsb
xor
inc
cmp
add
sub
or
mov
cmp
neg
nop
lock
inc
adc
aad
mov
mov
inc
mov
inc
mov
test
ss
sbb
dec
and
and
cmp
daa
roll
sub
cmp
inc
dec
inc
dec
inc
leave
shr
aas
add
xor
inc
addl
and
loopne
inc
dec
cmp
mov
lret
cmp
scas
cmp
jnp
add
jo
mov
and
pop
dec
push
push
push
flds
jnp
add
mov
xlat
inc
xchg
mov
out
popf
pop
js
add
or
fcoml
out
enter
ret
push
lcall
lock
int3
pushf
or
or
arpl
data16
repz
or
test
cmp
adc
aaa
xchg
int
jle
ffreep
inc
sbb
int
xor
leave
lea
mov
cmpsb
movsb
sub
adc
sub
jg
shrb
enter
test
jmp
or
sub
lock
or
push
es
mov
sbb
daa
bound
mov
jl
mov
mov
rolb
sti
popa
icebp
jmp
cltd
stc
mov
ds
dec
mov
sub
iret
je
into
xchg
xor
adc
sbb
scas
push
add
pop
std
and
mov
jle
mov
xchg
mov
xchg
aad
enter
and
test
fcmovne
mov
rol
loope
ret
mov
out
clc
in
xor
push
test
add
mov
push
push
pop
repnz
ror
cmp
pop
outsb
add
out
lahf
inc
add
ficomps
xchg
int
pop
lds
sub
mov
sar
mov
mov
cmpsl
dec
sbb
cmpsl
cmp
mov
lret
pop
xchg
imul
mov
cmp
mov
pop
ret
cmp
mov
outsb
jp
and
fs
dec
and
sahf
and
xor
xor
mov
inc
mov
cli
call
sub
repz
sarl
fiaddl
pop
push
out
pop
pop
shlb
pop
dec
aaa
ret
mov
push
push
out
jns
popf
mov
rcl
pop
bound
outsl
into
push
out
filds
dec
cs
aaa
mov
pop
pop
lea
pop
xor
cld
fldenvs
sbb
out
xlat
lret
cmpsb
sti
out
aaa
loop
mov
pop
push
and
or
imul
fsubl
fmuls
inc
xor
and
nop
adc
jg
out
dec
mov
and
shrl
pushf
push
outsb
and
aam
jae
add
xor
push
push
cmp
fstps
in
sub
fs
inc
sub
dec
jge
xchg
mov
shll
jne
and
jl
sbb
jp
push
and
xchg
or
rcl
mov
adc
cmpsb
in
mov
mov
inc
jne
mov
popf
iret
imul
je
scas
mov
inc
fnstenv
cld
and
xlat
jmp
dec
cmp
jns
scas
loopne
aam
push
sub
test
imul
insl
mov
test
and
mov
mov
add
jp
mov
xor
jns
and
mov
mov
pop
add
repnz
pusha
movsl
cmc
inc
inc
inc
inc
mov
clc
inc
mov
outsl
jge
push
xor
repz
rcl
mov
xchg
call
pop
add
js
nop
movsl
mov
neg
lret
ret
arpl
xchg
clc
aad
lcall
mov
pop
push
fcmovnu
gs
and
mov
add
add
imul
sub
aam
jecxz
pop
lds
out
jno
jg
pop
cmp
xchg
lcall
cmpsl
mov
popf
loopne
out
sbb
pop
push
fnstcw
gs
xor
add
lock
mov
add
fsubrl
aad
sub
scas
xor
inc
push
mov
fimull
adc
incb
lret
jo
and
or
mov
popa
repnz
popf
rol
or
mov
js
pop
push
xor
pop
ja
jle
cmp
lods
xchg
jnp
sbbb
das
mov
push
movsl
cmp
jp
clc
sub
addl
mov
adc
hlt
dec
scas
mov
xchg
enter
fcoms
xorb
stc
push
in
mov
xor
dec
shll
shll
cmp
mov
roll
push
shll
pusha
inc
mov
sahf
int
ds
in
adc
cmpb
push
movsb
sti
fsubrp
sbb
xor
mov
xchg
pop
or
jg
push
xchg
pop
and
jg
shl
movsb
cld
or
push
cmp
dec
xor
mov
adc
lods
or
in
push
das
xor
pop
sbb
nop
add
in
pop
sbb
mov
ret
ja
lods
fisubrl
push
fildl
jbe
fs
popf
ret
leave
adc
fs
scas
dec
cmpsb
gs
pop
fdivrs
dec
in
jg
jle
or
ds
mov
nop
add
call
pushf
and
or
cltd
cld
xor
test
sbb
rcrb
mov
jge
fisubl
mov
mov
xchg
clc
mov
pop
and
loopne
scas
mov
xor
mov
fcmovb
or
mov
mov
and
inc
jnp
cmp
ljmp
push
jnp
inc
leave
icebp
stos
xor
mov
repz
mov
jns
xor
fimull
shl
and
adc
pushf
pusha
ret
pop
dec
push
mov
and
lods
mov
movsl
mov
cmpb
lods
loop
or
mov
movsl
jmp
add
push
and
cmp
cmp
fadds
and
loope
test
ficompl
cmp
jno
add
mov
clc
mov
push
stos
jb
jl
mov
cmp
lcall
and
loop
cwtl
jbe
mov
or
jge
daa
inc
add
inc
in
dec
shrb
addb
fldt
xchg
aam
leave
and
xchg
mov
cmc
xchg
stc
cli
mov
in
fdivr
inc
sahf
sub
cmp
mov
mov
xchg
hlt
repnz
roll
sub
fidivl
mov
rclb
loopne
push
or
clc
fwait
jno
pop
jecxz
rcrb
sub
add
lret
push
movsb
jp
inc
bound
lret
jo
pop
mov
cld
sub
icebp
aas
mov
neg
gs
pop
pusha
jmp
cmc
pushf
hlt
out
divl
sub
cld
mov
sbb
fistl
cmp
xor
inc
int
sbbl
and
insl
push
sub
rorl
mov
cmp
lahf
push
aad
imul
gs
adc
xchg
ret
stos
mov
sti
add
das
in
lret
pop
stc
mov
sub
faddp
jb
bound
xchg
mov
pop
jmp
int
icebp
and
fstpl
xchg
mov
scas
lret
mov
hlt
pop
jae
sub
push
cmpsl
call
loopne
ror
push
lret
popf
in
mov
sbb
rcr
push
roll
adc
ds
lock
dec
jb
push
movsl
add
sbb
mov
sub
jnp
jno
repz
cmp
jecxz
es
xor
add
mov
mov
or
pop
aas
inc
pop
xchg
mov
cmp
es
cltd
jo
jecxz
cmp
inc
sbb
xor
mov
shlb
mov
or
xchg
clc
popf
jnp
jecxz
cld
jle
or
sahf
fisubrl
and
xchg
xchg
enter
jmp
gs
pop
adc
push
loope
addr16
push
cmp
mov
in
data16
sahf
dec
and
pop
cmp
xchg
std
rcll
cmp
scas
cli
jnp
lods
cli
sub
jmp
push
push
pop
xor
rclb
sbb
pop
scas
ret
fbstp
ss
jecxz
cli
and
mov
jne
sub
dec
pop
jmp
jl
pop
leave
mull
cld
pop
mov
cmp
ret
rolb
inc
imul
cltd
scas
push
mov
dec
mov
dec
data16
out
mov
xlat
xchg
shll
into
inc
mov
push
insb
shr
and
int
gs
pop
dec
insb
xor
push
in
push
pop
outsl
in
jnp
inc
add
lods
mov
repz
cmpb
outsb
xchg
mov
sub
push
inc
js
sbb
sub
jne
mov
cmp
or
lcall
pop
mov
cmpsl
xchg
testb
aam
mov
pop
inc
xchg
inc
mov
pusha
or
pop
add
nop
xor
adcl
movsl
xlat
xchg
insb
sub
add
sar
mov
jge
mov
std
adc
es
aaa
sub
sarl
aaa
pop
nop
or
js
dec
lock
sbb
pop
loopne
xchg
pop
in
aad
rcrb
pop
lea
or
das
pop
cmpsl
mov
cmc
ret
fbstp
stos
aas
hlt
xchg
push
les
sbb
aad
mov
cmpsb
mov
lahf
dec
aam
mov
cmp
pusha
jl
mov
mov
mov
testb
sbb
mov
sar
mov
leave
cmp
andl
notb
out
sub
aaa
jl
fcmovnu
jbe
sbb
sub
popa
movsl
mov
adc
mov
pop
mov
iret
ja
pop
lds
mov
aad
pop
repz
xor
jg
out
or
out
pop
scas
xchg
dec
lea
aas
and
mov
lea
pushf
adc
movsb
ljmp
sub
push
in
jl
mov
adc
push
addr16
push
je
imul
leave
test
inc
dec
sbb
out
popa
cmp
pop
push
adc
call
mov
cmp
movsl
and
xchg
cld
ret
imul
sub
or
jp
mov
adc
jo
inc
pop
test
xchg
stos
movb
int
les
pop
or
sbb
dec
cmpsl
jae
pop
xchg
pop
scas
imulb
lds
insb
push
and
cmpsl
inc
scas
jns
pop
mov
dec
pop
jnp
jns
insb
in
leave
cmpsl
or
jp
mov
sti
je
cmp
dec
cmp
pop
incb
add
sbb
test
and
nop
sarb
sub
mov
adc
mov
or
jae
subb
mov
sub
pusha
pop
or
mov
push
cmp
imul
fadds
cmp
scas
rclb
movsl
add
sub
shr
mov
les
repz
and
jo
mov
movsl
and
cmp
pop
sbb
pop
nop
cli
lcall
fstps
mov
sbbb
adc
filds
jle
es
repnz
in
outsl
imul
mov
or
leave
cmp
inc
gs
cld
mov
push
pop
orb
aam
nop
sub
mov
pop
pushf
pop
leave
jns
fnsave
cvtps2pi
mov
mov
adc
pop
cmp
adc
jb
daa
lcall
int
xchg
add
repnz
cmp
inc
pop
push
cltd
loope
cmp
test
ja
mov
xchg
sbb
mov
std
ffreep
pop
or
rcll
xor
sub
pop
or
cmc
loop
gs
daa
or
jg
cmpsl
mov
aam
push
js
mov
rorl
jnp
stc
cmp
mov
dec
mov
sbb
imul
inc
jns
in
add
js
dec
rcrb
push
adc
cld
xor
sub
lods
and
shlb
in
repz
pop
stos
push
push
mov
mov
mov
and
mov
push
mov
inc
dec
mov
pop
inc
test
aam
iret
pop
adcl
mov
mov
cmp
lahf
ret
push
mov
sarl
push
flds
orb
into
xchg
bound
mov
jmp
pavgw
pop
sub
loope
mov
mov
popf
ret
xchg
dec
cmp
addr16
dec
xchg
mov
es
and
or
jae
mov
aad
mov
and
ror
and
mov
dec
jb
aaa
sub
pop
cmp
pop
cmp
les
int
sub
dec
xlat
ficomps
pop
fs
inc
stos
mov
jle
fsubrs
lods
pop
push
adc
sarl
mov
fistl
and
mov
or
sub
pop
adc
mov
cs
fstpt
aam
sub
mov
pop
add
jae
mov
rcrb
xchg
cmp
lods
xor
add
jbe
lock
cmp
mov
jle
lods
ds
xor
call
xchg
nopl
xchg
int3
int3
icebp
pop
pusha
test
mov
incb
mov
or
xchg
mov
outsb
add
loopne
inc
pop
adc
or
mov
lea
push
adc
xchg
adc
mov
daa
xor
subb
je
mov
addb
pop
dec
inc
xchg
addb
or
xchg
shll
push
and
and
cmp
add
pop
mov
lcall
mov
xchg
sub
cmp
mov
dec
mov
divb
inc
pop
inc
add
dec
pop
into
jo
ret
bound
xchg
mov
add
mov
jb
xor
push
leave
and
sub
or
jns
loopne
xor
dec
mov
cmc
xor
loope
test
mov
or
rcrl
mov
movsb
mov
jecxz
push
adc
pop
dec
jns
sbbb
out
sbb
pop
sbb
call
dec
add
lret
and
sub
ret
fsts
pop
xorl
arpl
shlb
popf
aam
or
or
push
nop
scas
xor
jp
sub
ret
inc
and
mov
lcallw
cltd
das
jne
pusha
popa
aas
mov
enter
ret
leave
icebp
mov
xchg
jmp
imul
inc
shlb
add
cmp
and
sbb
sub
pop
pop
add
js
aam
inc
pop
ljmp
sub
xorl
ret
das
mov
dec
loope
nop
mov
dec
mov
call
push
in
cmpsl
fstpt
inc
cli
inc
ss
xchg
adc
nop
push
mov
fbstp
dec
xor
out
mov
jnp
aam
jnp
and
fstenvs
lret
inc
cs
push
cmp
mov
imul
push
repnz
mov
out
call
add
insb
in
sti
ja
adc
daa
aas
dec
jl
imul
add
mov
mov
js
leave
js
pop
addb
sbb
adc
mov
lret
mov
in
adc
cmp
cmpsl
out
aas
jmp
mov
jg
add
out
fs
mov
mov
lds
loopne
cmp
imul
and
push
add
push
pop
lret
adc
or
jecxz
nop
or
and
lcall
pop
mov
inc
cmp
mov
cmp
into
loopne
and
lds
xor
mov
movsl
lds
ja
pop
outsb
dec
pop
test
test
cmp
cmpsb
repnz
out
mov
ljmp
cli
add
push
test
dec
lock
sbb
mov
enter
hlt
bound
xor
jl
sahf
xchg
push
sahf
lahf
lret
jno
pusha
xor
in
mov
repnz
lcall
and
jle
xor
movsl
inc
xor
sahf
jecxz
fidivl
popf
test
subl
add
jl
lds
inc
mov
es
mov
adc
pop
sbb
lods
sub
push
xor
jnp
mov
cmc
imul
add
pusha
pushf
xchg
ds
xchg
dec
and
jp
push
call
out
roll
int
and
popf
push
inc
mov
orl
insb
arpl
sahf
add
and
jl
lods
pusha
das
cmp
jns
scas
mov
add
xor
int3
add
mov
push
pop
jno
jge
cmp
repz
lds
sub
add
push
inc
sub
and
mov
lret
dec
stos
lea
inc
test
pop
dec
mov
aaa
cmpsb
nop
inc
cwtl
xchg
sarl
xchg
sub
repnz
push
ficoms
shrl
mov
adc
and
pop
xchg
adc
jb
in
cmc
xchg
xchg
fsubrs
jo
repz
mov
add
cmpsl
int
loope
out
and
fimuls
mov
inc
pop
or
outsb
into
cmpsb
bound
shrb
sub
and
jl
in
and
adcl
dec
gs
sub
repz
insl
xchg
mov
pop
dec
mov
sub
and
push
int3
icebp
cmp
inc
outsb
out
push
sub
cmc
iret
ret
lds
xchg
movsl
cmp
movb
push
scas
mov
push
mov
sub
or
mov
ja
jle
arpl
and
aam
cmp
and
xchg
ja
in
pop
das
xor
aaa
sahf
gs
out
test
lcall
xchg
stos
adc
loopne
xchg
cmp
pop
jge
push
push
push
sti
and
rcrl
dec
getsec
jmp
pushf
lret
test
mov
int
sti
adc
sbb
orl
inc
cli
imul
cmpl
dec
pop
insb
add
mov
xor
jg
mov
push
jns
pop
sbb
xchg
imul
jns
dec
inc
push
mov
loop
mov
mov
jae
cmp
stos
adc
push
xchg
inc
cmp
inc
mov
cli
sbb
out
fbstp
mov
imul
push
shl
sub
add
lret
inc
sbb
dec
div
xor
sbb
jmp
jnp
mov
adc
testl
lret
add
mov
cmc
cmp
cmp
add
sub
mov
push
ja
js
lcall
icebp
jp
xor
ljmp
push
test
loopne
ja
mov
push
jnp
jle
jb
xor
or
in
mov
push
mov
mov
inc
inc
shlb
sub
loop
adc
xor
scas
fcomip
mov
daa
jb
into
add
out
cmp
jae
lock
lret
sub
test
inc
inc
fldl
dec
ret
pop
xchg
or
or
sub
sti
insb
fnstsw
daa
push
push
cmp
aas
out
mov
nop
inc
daa
aad
arpl
sub
ret
mov
jne
rclb
dec
jmp
lods
addb
enter
sbb
arpl
ret
mov
add
adc
out
inc
rcrb
ret
lods
xchg
insb
icebp
std
add
mov
mov
js
outsl
pushf
data16
cltd
cmp
mov
mov
push
imulb
cmp
mov
roll
xor
push
or
adc
xor
inc
jbe
dec
inc
and
mov
xchg
jge
mov
push
pop
xlat
pushf
sbb
ja
lds
push
push
add
add
lret
fbld
push
mov
xchg
cmp
lahf
mov
fwait
sbb
test
lock
ds
xor
bnd
xchg
add
lret
mov
mov
in
push
jae
xchg
dec
mov
dec
and
lahf
cmp
fcomps
jbe
mov
push
fistpl
push
scas
mov
jge
andl
pushf
dec
mov
adc
inc
ret
mov
inc
and
jns
and
call
dec
or
pop
push
gs
ss
add
push
inc
mov
out
stos
sarl
addr16
pop
sbb
ret
pop
imul
addr16
testb
pop
cmp
pop
pop
in
pusha
xor
jae
xchg
lret
das
ljmp
fldenv
icebp
cltd
int3
fbld
lcall
xchg
movsl
cmp
int
dec
fsubp
fmuls
movl
sub
cmc
lock
or
dec
fadds
dec
or
out
or
ss
mov
outsl
leave
mov
add
insl
out
mov
out
lret
in
mov
cld
xor
inc
dec
jl
jmp
in
jp
sub
push
int3
enter
dec
adc
xor
inc
sahf
add
sub
dec
pop
cmpsb
mov
aaa
add
inc
int
lret
popl
adc
push
sub
lock
inc
sub
jl
loop
hlt
inc
and
in
push
dec
lock
js
enter
fdivrp
movsb
jge
adc
stos
test
push
xor
cli
das
mov
push
stc
inc
lcall
and
mov
sar
dec
sbb
in
sub
push
into
pop
dec
xor
or
mov
pop
stos
push
hlt
ret
mov
fisttpl
jp
mov
pop
pop
pop
sarl
imul
and
out
cmpsl
cmpb
out
int3
std
mov
cmpsl
mov
adc
jns
sbb
nop
pop
mov
and
arpl
sti
adc
iret
aam
add
lret
mov
mov
xor
in
push
das
fdivl
dec
loop
xor
hlt
mov
mov
and
dec
xchg
stos
or
push
xchg
lret
bound
clc
mov
lahf
ljmp
mov
pop
mov
sub
xlat
and
mov
inc
inc
cmp
aam
mov
mov
pop
aas
or
jl
shrb
cmp
fistpll
inc
rcrb
jle
mov
dec
mov
notb
ficoml
push
push
mov
shlb
pop
and
mov
cmp
xor
cmpsb
inc
xchg
hlt
pop
arpl
cltd
roll
out
leave
les
adc
mov
xchg
mov
out
int
jl
xlat
shl
or
repz
jb
imul
sub
incb
fs
aaa
mov
dec
sub
add
inc
jle
jl
mov
and
mov
push
push
pop
gs
sbb
push
aas
mov
daa
xchg
mov
mov
xchg
cmp
and
imul
pusha
adc
into
adcl
enter
mov
adc
loope
test
jbe
lret
cmp
scas
lods
inc
xorl
aas
dec
mov
push
add
sub
pop
enter
push
orl
adc
scas
iret
popf
pop
out
arpl
das
out
jne
ljmp
or
pop
push
cmpsl
mov
inc
xor
cmp
adc
sub
dec
lods
lods
roll
std
mov
inc
cmc
jae
outsl
mov
sbb
push
xchg
pop
mov
fs
arpl
pop
addl
pop
adc
into
ret
jb
pop
lahf
inc
imul
lcall
add
mov
sbb
pop
sbb
mov
scas
mov
pop
add
sbb
test
xor
mov
lds
out
outsb
pop
into
fsubrl
repz
mov
push
mov
push
inc
ja
mov
call
cmp
cmp
insl
xchg
aam
push
pusha
test
xchg
stc
rep
xor
aad
mov
lret
mov
shrl
out
enter
je
rcll
and
lds
daa
lret
insb
sub
xchg
inc
and
dec
xchg
jmp
push
call
or
cmp
popf
dec
out
imul
sub
and
mov
xchg
fs
adc
or
xchg
icebp
cmc
dec
pop
shrl
aaa
in
aas
lcall
and
xchg
data16
movsl
add
mov
xor
dec
inc
pop
push
scas
push
jge
sbb
into
data16
dec
or
dec
insl
movsb
lods
pop
loop
jmp
mov
jl
test
int
sbb
add
push
incl
sbb
popa
xchg
and
into
rol
fiadds
adc
nop
imul
mov
xor
and
xor
les
sub
sub
and
mov
fsubs
mov
xor
movsb
pop
lea
cmp
xor
notl
cmp
lret
sub
xchg
jp
inc
sarb
imul
jle
lahf
adc
sub
mov
aas
cli
or
sub
fldenv
push
lock
jmp
cwtl
enter
std
mov
cltd
add
cwtl
sub
mov
dec
mov
mov
sub
mov
pop
cmpsb
gs
dec
out
sarb
out
or
jge
fstl
sbb
xor
sbb
fcompp
cs
push
in
push
ss
bound
aaa
or
push
mov
fiadds
cld
fcoml
fisubrl
or
ret
ret
mov
mov
out
pop
inc
lcall
add
cmp
push
sahf
jne
rclb
movsl
pop
fmuls
fstpt
inc
clc
dec
call
scas
inc
jmp
lcall
add
xchg
loopne
aas
mov
test
adc
nop
adc
popf
add
pop
adcb
leave
pop
or
rorb
cmp
jb
dec
test
or
xor
aad
lret
pop
scas
add
push
adc
sub
jnp
sbb
sbb
roll
jl
ret
xor
dec
mov
fstpl
ret
ret
push
sub
movsb
daa
xor
push
data16
pop
jb
outsl
stos
outsb
sahf
pop
ret
fcmovu
xor
jmp
cmpsl
sub
ja
aam
push
lods
or
xchg
divl
enter
es
xchg
inc
addr16
push
xchg
es
insb
sub
mov
dec
fcomp
sub
mov
insb
adc
xchg
add
push
and
mov
sub
enter
lahf
inc
icebp
aas
jns
fmull
push
sbb
mov
incb
fldt
pop
adc
sbb
arpl
inc
into
mov
loope
xchg
int3
pop
xor
dec
sar
imul
mov
xor
cmp
xchg
mov
lods
mov
sbb
sub
xchg
test
add
daa
mov
and
ja
mov
mov
mov
mov
cltd
or
mov
cmpl
push
cmp
cmp
sub
sahf
jno
or
leave
test
push
roll
fwait
idiv
cmpl
add
arpl
ret
mov
pop
push
jl
pop
popa
test
mov
insb
jmp
fmuls
loopne
es
inc
repz
movsl
pushf
dec
andb
push
add
fs
nop
icebp
jbe
enter
mov
dec
add
adc
ss
cltd
or
jp
mov
test
incb
in
cmp
add
ja
dec
fdivr
and
dec
adc
pusha
xor
adc
pop
and
xchg
cwtl
lret
enter
jns
xor
icebp
pop
push
outsl
int3
push
cli
test
xchg
xchg
mov
mov
shlb
and
pop
insb
push
lds
cmp
js
sub
or
add
hlt
mov
fisttps
lret
push
std
mov
clc
jmp
mov
idivb
push
std
in
push
pop
push
inc
or
inc
xchg
testl
fs
xor
inc
sub
test
xorb
daa
push
fildll
mov
cltd
or
and
ljmp
pop
or
jns
add
pop
lcall
rcl
je
jmp
inc
cmpsl
mov
pop
loopne
push
les
lret
shll
add
pop
fisubs
xchg
and
adc
sbb
mov
dec
mov
dec
sahf
pop
enter
mov
or
xlat
xchg
ss
dec
sbb
or
xor
sbb
inc
pop
icebp
mov
js
subl
sbb
hlt
sbb
insb
or
push
dec
cld
and
into
pop
lods
mov
pop
icebp
cmp
loope
int3
call
xchg
cmp
xlat
aaa
xor
mov
es
stos
test
repz
and
add
hlt
into
hlt
repz
fsubr
jle
mov
xor
push
lds
xchg
jle
xchg
test
sub
lods
in
dec
push
sarl
adc
cmp
aam
shll
ret
andb
pop
inc
test
pop
push
push
inc
adc
icebp
mov
mov
pop
add
adc
insb
icebp
sub
cmp
push
push
fimuls
inc
or
sub
in
mov
into
std
push
clc
imul
sti
imul
fbstp
data16
mov
aam
dec
fs
jp
stos
adc
fwait
sbb
inc
jo
aaa
in
mov
insl
add
adc
stos
fidivl
gs
fidivrs
adc
cmp
mov
xchg
inc
mov
add
jle
mov
pop
stc
lock
pop
jae
cmpsb
daa
scas
out
inc
adc
xor
jns
sarb
imul
lahf
inc
mov
xchg
loop
dec
inc
stc
jo
je
push
mov
jp
clc
out
mov
xchg
leave
ja
sub
sbb
cltd
inc
sub
pop
jne
lea
inc
xchg
jmp
icebp
jnp
and
pop
cmp
test
out
cmovbe
mov
add
xor
fcmovu
xchg
xchg
fisttpl
std
insl
daa
ljmp
aas
int3
jp
push
mov
insb
inc
mov
fs
mov
mov
lcall
fcmovb
lods
insb
push
mov
ja
pop
xchg
in
cld
cmp
inc
add
xchg
mov
aas
sti
and
dec
lds
xor
into
push
add
xchg
inc
fiadds
loopne
cmp
cmp
mov
push
ret
pop
loop
repnz
mov
lret
add
cld
outsb
sbb
add
mov
fadds
mov
dec
pop
push
lock
stos
mov
dec
jp
seto
scas
adc
pop
fstps
arpl
gs
dec
jge
mov
lods
sbb
stos
pop
rcr
ljmp
mov
lahf
mov
sub
or
outsl
sub
outsl
and
or
push
jmp
jbe
insl
mov
mov
pop
mov
mov
push
pop
mov
je
sbbb
std
pop
jl
sbb
and
int3
xlat
jmp
jns
xor
pop
mov
imul
fdivp
and
cmp
jmp
jae
test
jp
pop
cld
pushf
std
test
ss
xorb
xchg
push
test
cmp
fisubl
mov
add
imul
pop
mov
add
icebp
mov
add
fdivl
mov
sub
or
adc
mov
or
dec
lds
sub
lret
sbb
or
and
arpl
inc
cmc
outsl
push
mov
sub
sub
in
call
and
jecxz
cmp
clc
int
add
nop
jns
orb
mov
mov
insb
and
mov
outsb
push
add
imul
mov
in
dec
ja
sub
sub
in
pop
sub
popa
sbb
xchg
fldcw
int3
insl
mov
shll
leave
lock
std
imul
add
outsl
push
jno
pop
dec
nop
loopne
lds
xor
andb
inc
mov
inc
push
std
mov
daa
jne
cli
es
clc
push
stos
shr
xor
in
add
xor
mov
jge
movsb
pop
adc
xchg
negl
xor
jnp
call
pushf
add
sub
mov
push
mov
xchg
push
push
add
cmpsl
xchg
mov
add
sbb
cli
inc
lods
xchg
mov
jo
dec
insb
add
inc
mov
xor
cmp
mov
mov
das
mov
push
jmp
add
sub
xchg
sbb
jnp
mov
leave
adc
in
addb
pop
lods
repnz
test
outsl
mov
mov
mov
push
sbb
adc
movsl
out
scas
mov
leave
mov
xor
jae
pop
jg
subb
mov
adc
cmp
fstl
cmpsl
add
mov
adc
leave
mov
sbb
loopne
bound
lds
imul
loop
sub
cmp
and
bound
fwait
mov
adc
sti
sbb
or
dec
push
sub
imul
clc
fidivl
mov
js
dec
mov
daa
mov
push
movb
and
stc
getsec
push
inc
inc
jns
fbld
aam
jae
adcb
pop
jb
cs
push
inc
enter
fiaddl
fs
fidivs
imull
lock
mov
xchg
mov
scas
mov
fsubr
xor
push
cmp
fs
popa
into
push
daa
xchg
les
add
aam
or
xchg
mov
adc
ss
xor
jnp
cld
xor
jne
ja
mov
iret
sbb
sbb
notl
daa
push
adc
dec
ret
xlat
aas
jnp
jp
cli
add
lock
adc
xor
xchg
mov
lods
shlb
fisttpl
vpavgw
ret
loopne
out
pandn
ds
fisubrs
mov
add
dec
push
cmp
sub
mov
fiaddl
adc
jbe
and
test
or
nop
fsub
dec
cmpsb
mov
and
or
inc
xchg
inc
jg
or
pop
jns
es
movsl
mov
mov
loop
xchg
lcall
or
adc
nop
inc
lods
sub
mov
ja
push
jns
inc
hlt
mov
xchg
subb
fscale
sahf
mov
add
push
arpl
xchg
inc
ds
stos
mov
pop
jb
jmp
jnp
lret
add
xchg
nop
push
addr16
push
add
fcoms
shrl
pop
ret
roll
cmp
ja
jno
mov
clc
mov
lock
lods
notb
pop
stos
call
mov
das
add
sbb
sbb
jno
das
outsb
jl
jecxz
cmp
mov
fwait
enter
adc
mov
mov
aam
or
dec
adc
je
push
mov
xor
mov
inc
das
fsubrp
les
fistl
add
out
pusha
imul
mov
test
adc
scas
imul
inc
xorl
ss
lock
jbe
mov
dec
out
test
gs
sub
and
test
repnz
pop
or
xchg
js
das
bswap
movsl
mov
scas
scas
leave
fmuls
sbb
and
lret
jnp
test
bound
std
sub
cmp
inc
daa
sbb
lea
mov
fmull
adc
mov
sbb
dec
mov
mov
add
jno
jg
movsb
les
add
out
inc
incl
xchg
mov
rolb
cmp
mov
mov
popa
daa
xor
mov
popa
and
mov
mov
add
insb
lret
inc
fiaddl
fsubl
pop
cwtl
or
imul
pusha
dec
ror
push
push
lods
cld
xorb
push
gs
pop
cs
mov
xchg
or
insl
mov
dec
imul
push
mov
mov
or
add
mov
lret
xor
pop
out
pop
xchg
fidivs
dec
jge
jae
mov
aas
cmpb
sbb
mov
or
repnz
cmp
jle
into
and
lret
mov
mov
dec
ret
jl
add
inc
jns
lods
mov
or
sarb
gs
cmp
cli
sahf
xchg
mov
jecxz
mov
cmp
mov
add
or
scas
pop
pop
pusha
fisubl
sahf
adc
fmuls
fwait
lcall
mov
fcmove
add
adc
in
dec
push
rdpmc
nop
add
mov
dec
in
popa
scas
fsubs
adc
pop
cmp
push
fnstcw
xor
sahf
mov
push
cmp
shll
out
dec
sbb
repnz
jne
cmpsl
enter
pop
rorl
mov
fcmovb
inc
mov
xor
les
xorl
push
test
lret
pop
bound
popf
add
mov
inc
faddp
outsl
adc
adc
push
leave
orl
iret
push
jge
ret
lock
xor
repnz
xlat
or
xchg
mov
cmp
fs
fsqrt
pop
cli
in
xchg
das
sub
cmp
ds
sub
mov
in
sbb
cmc
ret
cmp
sti
mov
call
jns
and
stos
pop
repnz
xchg
xchg
test
push
cmp
xor
imul
rorl
adc
add
push
bound
insl
rolb
or
aad
popf
dec
pusha
or
or
push
mov
in
pop
pop
inc
xor
mull
mov
dec
push
pop
rcl
and
sbb
out
aaa
ljmp
add
lods
cld
les
repz
cmp
dec
adc
mov
stos
mov
ja
cli
in
add
xchg
mov
xchg
sub
in
add
add
inc
cmp
mov
and
push
cli
pop
scas
dec
dec
push
xlat
leave
mov
divl
push
scas
pop
mov
fwait
pshufw
cli
fs
mov
aam
jno
ss
jle
popa
daa
loope
das
jle
adc
clc
pop
pop
mov
stos
pop
scas
lods
aad
and
sahf
lahf
inc
lcall
cmp
dec
stc
gs
and
outsl
pop
out
cltd
sbb
sub
adc
inc
cmp
jmp
push
loop
sub
push
xor
xor
inc
ret
es
aam
mov
push
dec
add
inc
lahf
aam
enter
cmpsb
js
ja
jbe
test
push
xchg
jns
vpmadcsswd
inc
das
lret
mov
inc
dec
popa
mov
mov
lret
xchg
je
mov
push
mov
rcrl
gs
cmp
pop
jnp
jns
daa
test
test
fcmovnb
push
mov
and
bts
lods
nop
jo
jle
mov
and
rcrb
cmp
xor
fwait
pop
jb
pop
repz
jns
js
push
jp
pop
lock
jge
lahf
pop
xchg
mov
xchg
rol
mov
decb
sti
pop
inc
jge
mov
ds
movsb
xor
aam
add
test
fstps
pop
add
cmp
cmpb
or
out
jmp
xchg
xor
push
jne
enter
and
mov
xchg
jmp
lret
xchg
cmp
ds
xor
mov
inc
mov
into
or
orb
aaa
data16
shlb
xchg
clc
call
test
mov
fists
movsb
test
mov
dec
lcall
std
lea
sbb
jo
mov
and
pop
push
out
hlt
cmp
sbb
pop
test
dec
cmpsl
in
aad
cmp
into
rolb
ss
mov
ljmp
insb
prefetcht2
mov
mov
cmpsl
mov
inc
jno
mov
aas
mov
push
mov
inc
mov
dec
call
or
fisubrl
das
je
pop
mov
or
nop
mov
inc
add
inc
dec
cmp
dec
popa
leave
sti
dec
jmp
scas
stc
sbb
and
popf
out
mov
loop
push
inc
cld
xchg
imul
jno
mov
jmp
ror
push
arpl
or
fs
in
inc
dec
call
test
ret
add
jns
or
dec
jb
pusha
or
cmc
mov
pop
pusha
enter
or
and
in
gs
scas
mov
lahf
mov
fildl
fs
je
sbb
ret
cmpsb
xor
jo
in
cltd
icebp
daa
xchg
mov
mov
pop
addr16
call
jae
mov
lea
ret
jp
and
mov
pop
in
mov
icebp
out
inc
negb
not
and
xor
sti
aas
into
sahf
cmp
out
aad
in
xor
repnz
fisubrs
push
ret
mov
mov
movsb
adc
lret
ret
test
out
daa
mov
enter
popa
in
stos
sahf
inc
scas
mov
push
xor
pop
call
in
leave
cld
int3
pop
dec
sbb
pop
dec
pop
adc
cmp
test
xor
sub
inc
imull
subl
sbb
adc
mov
lret
sub
pop
sub
aas
or
cs
hlt
adc
test
je
jge
xchg
cs
push
xlat
mov
pusha
test
out
xor
pop
sub
pop
dec
dec
mov
xchg
pop
sub
das
lcall
test
mov
js
fsts
fidivrl
or
or
int
sub
lods
faddl
pop
mov
lods
sub
jno
inc
ds
mov
aas
pushf
mov
sub
les
mov
jmp
lcall
mov
call
mov
sub
into
les
push
imul
lds
inc
adc
sub
pop
xchg
lret
lret
loope
pop
jecxz
mov
dec
out
push
in
push
xor
pop
add
dec
insb
js
push
pop
adc
lds
inc
hlt
ret
mov
cs
push
scas
icebp
gs
add
add
mov
aam
jmp
xchg
mov
mov
pop
fucomp
orl
cs
push
mov
into
cwtl
mov
xchg
pushf
mov
cmp
pop
jb
sbb
flds
mov
push
sbb
pushl
popf
aaa
dec
pop
es
push
push
mov
add
sub
push
cmp
sbb
scas
sub
xchg
pushf
iret
fdivrl
sub
push
test
lret
hlt
das
popf
mull
jle
cmp
lods
cltd
sbbb
mov
icebp
and
jp
lahf
inc
insb
pop
xchg
adc
and
xlat
outsl
push
add
sbb
dec
cmpsl
jle
test
sbb
push
inc
stos
leave
mov
pop
mov
sub
mov
shll
mov
test
aad
mov
sbbb
scas
jp
pusha
in
dec
mov
movsl
dec
adc
dec
int
cmc
lea
and
imul
das
inc
cmp
mov
into
ljmp
cmp
or
bound
jae
insl
and
xchg
xchg
lods
xor
loop
or
sbb
mov
and
fdivr
cmpsb
mov
addr16
mov
and
add
pop
ficompl
test
sub
push
push
into
jecxz
mov
and
xchg
cmp
mul
adc
test
and
scas
jmp
arpl
sub
xor
sub
pop
mov
sub
add
cmp
insb
inc
xchg
push
add
cltd
push
call
mov
adc
push
cld
aaa
mov
push
mov
or
inc
xchg
cmp
cmpsl
aad
jmp
std
cmpsl
inc
cs
icebp
add
dec
sub
in
or
scas
inc
rcll
and
and
je
sbb
mov
insb
scas
pushf
push
pop
cmp
stos
out
sub
inc
les
fst
pop
ret
jae
loop
out
add
dec
inc
pop
ret
xchg
fs
ja
sub
arpl
or
mov
mov
aaa
fnstcw
cltd
out
outsb
in
hlt
stc
pop
out
das
pop
pop
xchg
imul
and
pop
push
dec
xor
out
xchg
cli
add
les
xchg
dec
out
mov
dec
sub
std
test
bound
ds
mov
mov
sbb
lcallw
mull
jno
pop
mov
lock
jmp
mov
enter
add
mov
push
push
ret
les
aas
xchg
fsubrs
jmp
fdivrs
orb
push
leave
jnp
pop
mov
mov
jle
or
xchg
ja
sti
sbb
xor
push
push
add
mov
mov
lahf
sbb
cmp
shlb
daa
dec
mov
jp
lods
xchg
push
jl,pt
adc
and
sub
or
dec
stc
outsl
pop
cmp
jb
sub
fs
pusha
or
and
and
shl
sbb
int3
adc
push
movsl
mov
xchg
test
lret
jnp
test
scas
jl
leave
and
mov
push
out
sbb
into
add
in
lods
inc
ds
movsb
imul
sbb
or
or
test
ficoml
or
leave
add
cmpsl
les
adc
mov
inc
inc
mov
daa
jne
sub
movsl
adc
addb
bound
test
sub
into
cmp
pop
cmpsb
es
jle
push
stos
mov
sub
movb
xchg
add
jg
inc
xor
dec
sbb
mov
xchg
add
cmp
imul
cmp
test
popl
rcrl
mov
cwtl
pop
jne
and
and
jmp
push
sub
enter
shlb
ljmp
inc
nop
cmpsl
or
and
push
xchg
sub
pop
add
adc
xchg
cmp
sbb
pop
xchg
dec
loopne
cltd
sub
or
cmpsl
lcall
fiaddl
xchg
cmp
pop
sarb
cmp
in
addl
loopne
cltd
push
mov
cmc
outsl
pop
test
int3
std
dec
xchg
push
pop
aas
mov
xchg
jge
jo
xor
mov
jae
jne
pop
pop
mov
into
push
dec
lods
or
test
mov
inc
push
pop
cmp
enter
adc
cmc
cmpsb
mov
sub
pop
sbb
dec
hlt
pop
sbb
or
pop
pop
fidivrs
popf
out
movsb
sub
jle
pop
movsb
mov
sub
jno
call
leave
shrl
aas
fiaddl
in
mov
fs
fisubs
imul
clc
test
mov
js
jne
and
push
lods
js
fmulp
pop
dec
mov
pusha
cmp
cmp
sarl
int3
ja
mov
ds
lods
adc
xchg
gs
pushl
ret
mov
xchg
and
dec
mov
iret
cmp
je
inc
xchg
mov
dec
and
mov
imul
cltd
or
cmp
mov
mov
scas
inc
lods
and
sarb
test
dec
cmc
aad
jecxz
cld
cmp
pop
stos
mov
and
shr
add
inc
dec
xchg
mov
mov
out
mov
xchg
jnp
mov
add
pop
mov
inc
cmp
loop
lahf
in
push
test
clc
loop
mov
cmp
pusha
das
cmp
or
rcr
fwait
imul
add
pop
mov
sahf
in
shlb
xor
pop
jns
mov
fbstp
push
mov
sub
out
mov
push
inc
or
maskmovq
ss
imul
xchg
mov
xor
out
pop
mov
jne
jge
mov
sbb
mov
mov
mov
hlt
sub
xchg
jae
cmp
cltd
mov
stos
push
or
sti
fcomps
sub
in
cltd
inc
stc
fstps
or
les
sbbb
je
stos
mov
push
mov
scas
dec
ss
and
pop
mov
aam
mov
pop
loop
in
mov
lahf
lret
je
fidivrs
xchg
shl
jmp
imul
ds
aaa
out
push
iret
and
shrb
les
mov
jns
mov
test
sbb
sti
or
inc
pop
aam
addr16
adc
xor
add
fmull
lods
cmpsb
out
jno
aas
ds
push
dec
pop
jl
jl
pop
mov
fistl
lea
xor
inc
ret
pushf
mov
and
pop
mov
inc
jp
xorb
stc
sbb
pop
jg
fmull
pop
lahf
cmp
fisubl
jb
call
femms
xorb
mov
cwtl
adc
cmp
outsb
mov
test
je
cmp
mov
inc
lahf
mov
insl
adc
mov
pop
push
stos
cmp
pop
and
adc
add
fisubs
bnd
dec
and
gs
cmpsl
add
push
pop
aas
aad
scas
and
daa
dec
mov
jecxz
fistpl
aad
je
mov
push
cmp
lcall
push
into
mov
ss
adc
pop
shll
push
mov
and
push
or
ret
push
mov
mov
out
jecxz
lea
je
sti
add
hlt
loopne
xchg
mov
stos
int
rolb
inc
scas
cmpb
mov
movsb
cli
add
dec
imul
and
jg
repz
cmpsl
imul
mov
movsb
mov
inc
pop
xor
sub
test
push
mov
repnz
inc
imul
xchg
and
xchg
push
int
and
fcoml
pop
insl
mov
inc
loope
aas
out
pushf
push
fwait
lods
cmpsb
les
mov
sub
sahf
or
sbb
rorl
or
stc
xor
jb
outsb
add
movsb
mov
enter
out
insb
fwait
jecxz
cmp
push
mov
je
cmp
dec
popf
push
or
lret
into
xchg
addr16
mov
gs
cmpsl
mov
xlat
mov
int
fwait
int
xchg
dec
stos
sub
mov
in
xchg
shr
push
jnp
aam
leave
cmp
jmp
icebp
inc
sub
pop
and
or
addr16
addl
outsb
xor
and
inc
icebp
subl
dec
sbb
in
xor
cmp
mov
pop
subb
lret
add
sbb
lcall
dec
cmp
xchg
adc
das
std
jo
sbb
aam
xchg
lahf
fdivrs
pop
sub
fsub
cmp
iret
out
push
xchg
cmc
push
sbbb
mov
iret
sub
daa
aas
imul
ds
sahf
pop
pushf
notb
je
scas
cmpsl
jo
jecxz
lods
mov
arpl
fcomp
fwait
lcall
or
cmp
lcall
add
inc
mov
pop
je
rcrl
sbb
xchg
mov
fcomip
cltd
sub
jne
and
xor
add
hlt
inc
jge
adc
mov
and
mov
mov
loop
mov
lock
sahf
xor
mov
into
mov
mov
inc
aaa
mov
jmp
lods
sbb
scas
mov
jg
cmp
stos
xchg
adc
dec
lock
xchg
xchg
int
adcb
popa
rcrb
addr16
movsb
inc
fdivrs
arpl
stos
fists
fsubrl
subb
lods
push
inc
jne
jmp
inc
mov
mov
fiadds
enter
hlt
xlat
sarl
orl
fisubrl
ficoms
mov
shll
shrb
xor
pop
aas
movsb
and
lds
and
adc
scas
je
in
sub
dec
pop
je
pop
insl
dec
lock
gs
test
xor
xor
xchg
xchg
cmc
add
xor
pop
add
imull
mov
jmp
jo
lcall
lahf
jl
ljmp
pop
push
daa
jae
xor
cwtl
in
popa
aaa
pop
aas
xorl
je
mov
ret
bound
xchg
icebp
jns
inc
mov
xor
mov
mov
pop
xor
cmp
fwait
mov
cs
aam
mov
jae
push
orb
daa
mov
and
scas
sbb
and
lea
leave
in
rol
int3
cmp
jne
jb
mov
mov
dec
adc
bound
adc
pop
leave
adc
cmp
into
es
mov
push
pop
jmp
cmpsl
mov
mov
and
outsl
test
lret
cltd
and
push
push
je
adc
cmp
sub
jne
mov
fistpl
data16
sbb
daa
sarb
cmp
cltd
data16
mov
mov
sbb
flds
dec
push
hlt
inc
mov
pop
cmp
leave
cmp
in
ss
mov
adc
mov
out
nop
mov
and
pop
mov
outsb
pop
cmpsb
sub
test
inc
cmp
ljmp
addr16
lock
and
aaa
or
out
xlat
cmp
adc
cli
lds
pop
jne
iret
inc
loopne
push
aas
lahf
cmp
xchg
push
xor
popf
push
iret
xchg
and
cmc
mov
outsb
lea
nop
les
xor
mov
js
inc
and
jp
jge
pusha
clc
xlat
inc
jle
jp
cmp
cmp
or
rorb
scas
stos
fwait
std
mov
jbe
sarl
in
sbb
aaa
jne
sarl
stos
push
outsl
inc
arpl
push
xor
scas
cmp
sub
out
or
test
jge
popf
or
push
ret
call
int
mov
xor
je
or
test
push
mov
cltd
sbb
insb
scas
loope
sahf
aam
jmp
test
ja
sbb
loop
sbb
pop
adc
add
sub
cmc
ret
push
lret
in
jl
lods
fnstenv
mov
andl
mov
and
mov
mov
sahf
xor
fs
flds
mov
cmpb
cmp
lea
popf
adc
enter
mov
movsb
or
orb
adc
fldt
and
rorl
insb
nop
int3
test
mov
lret
xchg
addr16
push
xor
js
inc
add
pop
push
sbb
rcrb
jb
mov
in
cmpsb
xorb
das
jmp
push
adc
jg
pop
loop
mov
les
inc
mov
mov
dec
out
mov
les
fisubrl
pop
int
cmp
jge
mov
mov
cltd
or
mov
loope
push
push
adc
aad
test
xchg
xchg
fidivs
or
sarl
push
jg
test
sub
mov
mov
inc
add
fs
xor
loop
lea
loopne
pop
and
loope
andb
js
push
jnp
rorl
inc
rcrl
mov
mov
cwtl
fwait
mov
mov
xor
je
pop
lea
scas
sbb
imul
inc
int
jp
xchg
in
cmp
nop
into
icebp
nop
fdivs
inc
sbb
lret
test
jecxz
mov
cltd
aaa
sbb
mov
push
sub
or
jp
or
fsubrs
gs
jp
push
dec
ljmp
in
ror
xchg
mov
out
movsl
mov
pop
stos
add
sub
dec
sbb
mov
lds
mov
aad
inc
mov
jbe
jp
stc
push
insl
rolb
pop
scas
xor
sub
sub
sahf
push
add
popf
stos
shll
loope
lahf
ret
add
add
rcr
xor
andb
mov
aam
mov
add
bound
aaa
and
cmp
xor
leave
out
or
pop
int
shlb
popf
pop
test
and
sub
daa
push
push
pop
or
cmp
pop
insb
cmpsb
fistps
fisubs
pusha
adc
or
jae
cmpsl
scas
test
add
fmul
es
sub
add
nopl
ljmp
and
sub
push
dec
inc
mov
add
test
in
and
pop
inc
dec
rorb
push
iret
ret
dec
jge
mov
movsb
imul
inc
mov
cwtl
add
in
inc
sub
lcall
lcall
or
ljmp
out
sub
pop
fbstp
sbb
es
mov
lods
and
push
cmp
jns
mov
das
push
ljmp
dec
mov
jno
jle
fcmovb
and
popl
cmpsb
add
pop
adc
addr16
adc
push
xchg
std
mov
sahf
push
inc
push
sti
xchg
shll
clc
cmp
inc
push
sub
mov
mov
hlt
pop
push
jnp
add
les
push
les
ja
repz
xchg
loop
jmp
cmp
adc
and
fwait
das
andb
daa
xor
nop
sahf
cld
push
xchg
and
xchg
lods
insb
sbb
xor
xlat
cmc
and
js
imul
dec
or
dec
xchg
lea
in
pop
sbb
lods
in
imul
cmpsl
xchg
jecxz
js
xor
nop
inc
cwtl
stc
mov
jae
test
mull
stos
dec
imul
mov
lds
jne
xor
xor
add
add
subl
adc
out
sbb
leave
cmp
rolb
stos
and
stos
mov
mov
rorb
in
fwait
dec
subl
xchg
lret
adc
popa
fiadds
dec
jns
cmp
or
cmp
lret
lds
loop
mov
roll
scas
fdivr
out
imul
ss
jmp
and
dec
lods
mov
bswap
mov
scas
xor
push
lret
call
fldt
fnstenv
cli
scas
in
inc
xchg
mov
leave
sub
jae
mov
stos
int
test
lret
push
int3
mov
sub
add
and
jmp
orl
es
jge
js
inc
adc
mov
sar
sbb
je
rcrb
mov
jb
test
lock
fimull
add
jge
push
lcall
xchg
pop
movsl
pop
call
daa
stc
aad
pop
or
es
xor
sub
cmp
les
adc
dec
lcall
push
xor
insb
test
xor
mov
pop
pop
data16
fsubrp
jbe
fnsave
das
inc
push
repnz
shrb
xchg
lods
cmp
mov
and
stc
push
xor
xchg
sbb
push
mov
push
test
insl
lea
imul
jp
ret
es
jb
jge
mov
mov
cmp
scas
aam
sti
sub
and
sarl
subl
repz
and
sub
push
cwtl
lock
push
out
inc
outsb
scas
leave
pop
jp
sti
xchg
data16
mov
dec
pop
inc
inc
jge
push
jnp
dec
pop
orb
push
and
es
and
cli
mov
push
sarl
subl
xor
insl
hlt
ret
stc
nop
push
jge
add
cli
adc
lods
arpl
sahf
out
add
jns
push
ret
mov
scas
fwait
cmp
incb
pop
cmp
sbb
inc
mov
mov
mov
mov
js
xor
call
push
sub
mov
repz
or
rcll
push
inc
mov
and
dec
stos
test
stos
test
inc
cld
mov
xchg
sbb
mov
inc
mov
pop
jg
lea
ja
aaa
mov
movb
pop
jle
pusha
adc
inc
mov
stos
das
pop
adc
pop
xor
add
mov
adc
adc
mov
je
pop
jmp
push
fsubrp
adc
sbb
inc
outsl
mov
push
inc
jle
sub
pop
jns
popf
imul
sub
pusha
and
inc
ds
cmp
lods
xor
hlt
test
lahf
push
imul
outsl
in
subl
sbb
jae
lret
jno
mull
lods
push
cmp
cmp
ljmp
dec
cmpsl
loopne
and
pop
mov
sub
andw
sub
mov
into
movsl
scas
leave
sahf
repnz
adc
aaa
dec
dec
xchg
or
ss
std
push
ss
aaa
cwtl
dec
ret
cmp
mov
cmp
test
pusha
cltd
adc
and
jnp
pop
cmp
mov
lret
sahf
xorl
mov
pop
cmp
fisttpll
mov
das
popf
and
ljmp
hlt
inc
adc
sbb
rcll
mov
outsl
cmp
xor
xor
imul
jp
dec
pop
sbb
jbe
les
cs
inc
popf
es
and
sub
loop
inc
push
mov
das
call
fdivl
inc
in
scas
xor
inc
ljmp
lock
mov
andl
loopne
or
mov
push
xor
jecxz
mov
loope
or
clc
push
mov
sub
bound
dec
mov
out
pop
xchg
pusha
sub
jecxz
jmp
mov
xor
outsl
cmpb
mov
in
jge
push
xor
mov
popa
loope
dec
insb
arpl
adc
jb
sahf
imul
mov
je
imul
sbb
je
push
out
js
shl
xor
mov
or
push
sbb
pusha
mov
int3
iret
in
pop
fmull
jns
jle
outsb
dec
xchg
imul
inc
sbbl
mov
cltd
sub
push
pminsw
push
aaa
cmp
imul
shrb
xchg
or
dec
xlat
fildl
loope
xor
iret
push
adc
aam
mov
ljmp
leave
call
jbe
push
push
dec
test
sahf
and
jle
ret
push
dec
or
les
mov
repnz
aaa
daa
insl
push
roll
pushf
dec
push
int3
xor
test
lea
les
imul
jl
into
icebp
inc
and
js
cmp
add
adc
into
outsl
dec
movsb
push
pop
jge
sub
insl
ret
add
imul
lock
shlb
push
leave
pop
inc
les
sahf
push
js
fiaddl
int3
push
std
test
or
jle
push
dec
or
fldcw
pop
pop
sub
fwait
int3
inc
pop
dec
or
aam
in
mov
negl
stos
inc
add
push
pop
mov
lods
enter
addb
push
rcrl
lea
popf
inc
pop
int
xchg
xlat
fs
and
add
jns
and
or
sbbl
mov
sub
mov
push
out
arpl
sub
cmp
inc
cmp
mov
jg
mov
bound
flds
arpl
xchg
adc
inc
or
push
jg
out
subb
or
mov
mov
jno
cmp
cmpsl
inc
dec
jg
push
lcall
testb
mov
popf
dec
add
out
mov
or
mov
cs
add
int
scas
ss
push
lret
and
pop
lock
xchg
push
adc
lret
or
sbb
mov
js
pop
loop
fxch
imul
jecxz
jbe
hlt
nop
dec
adc
stos
into
dec
jb
xchg
repnz
mov
cmp
sub
add
aad
push
in
cmp
lods
imul
iret
orb
push
mov
cmpsl
jp
push
mov
xor
out
lods
mov
jne
add
sub
xor
push
add
test
push
cmp
mov
sub
push
dec
int
sbb
dec
mov
xchg
jp
inc
pop
sub
cmp
jecxz
mov
fildl
adc
adc
xchg
repnz
in
mov
cltd
sti
jns
sbb
stos
xchg
cmp
fdivs
cld
cmp
cmc
mov
jb
mov
loop
clc
repz
test
aas
push
push
and
mov
bound
or
xchg
test
adc
pop
jge
mov
test
into
in
test
jp
stos
mov
rorb
insb
ds
pop
and
ret
icebp
rclb
stos
mov
lahf
pop
mov
or
add
mov
sbb
test
dec
out
jmp
add
xchg
inc
inc
push
out
pop
int
test
mov
ret
push
lock
mov
and
mov
bswap
push
mov
and
mov
in
stos
cmp
ret
xchg
sub
std
out
cmp
adc
pusha
shll
in
adc
xchg
fcmovb
add
imul
pop
fstl
mov
and
mov
jmp
inc
adc
adc
fildl
loope
bound
ficompl
lea
push
cmpsl
orps
fildl
outsl
in
popf
cld
imul
jmp
mov
mov
xchg
enter
fnstsw
xchg
movsb
pop
or
add
test
mov
popf
cmp
in
dec
dec
and
xor
stos
fnstenv
imul
arpl
jle
mov
in
fisubs
inc
adc
mov
es
iret
movsl
jg
add
add
and
and
ror
add
mov
imull
add
mov
and
mulb
xor
mov
and
push
add
pop
pop
dec
hlt
lcall
imulb
pop
inc
popa
mull
jl
sti
bnd
std
pushf
jg
jle
fsub
enter
sbb
jo
aad
cmp
ljmp
ss
push
add
pop
cmp
cmp
xlat
push
aas
inc
popa
xlat
mov
pop
sub
add
popf
pop
mov
pop
mov
pusha
push
ror
xor
cwtl
push
sbb
mov
inc
lret
mov
sbb
mov
lods
push
xor
xchg
clc
lods
ds
shll
dec
shr
mov
mov
leave
mov
mov
insl
mov
add
mov
cmc
sbb
cmc
mov
cli
es
or
das
lret
sub
adc
pop
int3
std
sub
jbe
xor
push
hlt
sub
or
xor
cld
insl
add
jbe
cmp
mov
dec
dec
and
in
por
jmp
mov
js
and
mov
insl
movsl
test
aas
lret
pop
mov
clc
adc
pop
push
mov
jne
aas
jmp
out
xlat
imul
loope
mov
inc
adc
cmp
fldenv
cmc
sub
jne
mov
mov
fstp
push
sti
inc
dec
lret
pop
test
cmp
frstpm(287
sbb
in
pop
fwait
mov
lea
cmp
jb
ret
out
pop
xor
sbb
fidivrl
inc
test
xor
add
sub
test
fs
cmc
jb
push
xor
outsb
fwait
shl
sbb
dec
imul
aam
hlt
jg
jge
push
and
xchg
inc
ret
adc
jg
and
scas
add
mov
mov
and
or
add
stos
imul
int3
sarb
sub
sub
imul
mov
pop
int
lea
lea
subl
clc
fimuls
and
int
test
jbe
jne
loop
inc
stos
and
lcall
dec
inc
jnp
add
std
test
inc
mov
dec
and
repz
mov
sti
mov
adc
shrb
popa
movsb
pop
mov
inc
add
cs
call
pop
cmp
dec
outsl
cmpl
sbb
and
btr
inc
cmp
cwtl
pusha
hlt
add
dec
xchg
pop
mov
es
mov
or
xor
aaa
addr16
mov
lcall
bound
xor
push
nop
ret
scas
dec
dec
ret
mov
out
sub
inc
mov
or
idivb
or
negb
in
inc
add
fnsave
mov
sarl
fisttpl
inc
dec
dec
sarl
mov
sub
subl
mov
test
mov
lret
add
jbe
jg
xchg
insl
and
aad
pop
sbb
add
es
incl
jge
je
push
inc
fbstp
cld
aas
aam
pop
adc
xchg
imul
ja
ret
xchg
sub
cld
out
out
rcrb
xchg
jo
ja
mov
sub
lret
or
cmp
and
cmpsl
pop
and
les
fstl
mov
ljmp
pop
imul
mov
les
aad
js
dec
sbb
ret
lods
testb
das
lds
mov
incl
pop
push
add
mov
nop
jo
mov
jbe
enter
fisubrs
jle
fistpl
enter
pushf
inc
cmpsb
mov
ret
fwait
icebp
mov
in
jge
mov
sub
pop
into
ja
inc
adc
cmpsl
or
cmp
mov
stos
dec
test
test
and
sbb
mov
loope
dec
lods
mov
ds
jmp
xlat
aas
fisubrl
mov
xlat
jge
shrl
int3
xchg
inc
outsl
adc
imul
cmp
xor
fwait
jmp
ss
sub
and
pop
imul
sub
xchg
mov
es
je
pop
xor
mov
fs
dec
xchg
mov
jecxz
cmp
or
mov
pop
ret
dec
imul
mov
inc
das
mov
and
mov
jecxz
mov
in
pop
mov
sub
jg
ss
std
mov
or
xchg
imul
aaa
jnp
incb
js
pop
inc
jecxz
sbb
js
xor
xchg
cmp
push
push
roll
repnz
repz
mov
popa
mov
jge
fstpl
and
iret
in
lods
dec
pop
cmp
pop
jl
lods
leave
cltd
lcall
jnp
or
outsb
arpl
push
dec
jbe
or
je
lret
adc
scas
dec
push
mov
xlat
pop
icebp
imul
mov
push
push
ds
mov
jns
sahf
loopne
xchg
inc
fs
das
add
divl
xchg
xorl
or
inc
dec
aad
cmp
loope
sbb
sub
dec
push
repz
mov
addr16
mov
mov
jmp
dec
and
out
add
daa
roll
and
test
leave
je
into
inc
adc
cs
je
jmp
cmpsb
rcrl
scas
lahf
orb
inc
and
jns
imul
pop
cmc
fisttps
jg
adc
or
enter
push
cmpsl
cmpsl
test
inc
ffreep
cmp
inc
cmc
dec
push
insl
dec
jne
pop
pop
pop
dec
jmp
adc
stos
xchg
ds
iret
jne
sbb
xor
loopne
rolb
mov
pop
hlt
inc
dec
inc
and
xlat
shlb
sub
push
les
pop
pop
mov
mov
mov
mov
jb
dec
popa
pop
out
cmp
shr
lock
sub
push
cmp
add
pop
fistpll
fisttps
cmp
cmpb
xchg
addb
neg
mov
or
sub
xchg
mov
xchg
cmp
mov
das
and
divb
hlt
das
or
mov
leave
cmp
rcrb
ja
mov
ficomps
outsb
mov
movsb
mov
xchg
test
inc
or
in
mov
pop
outsl
lret
or
xchg
ret
xchg
sbb
das
pop
inc
lods
ja
mov
lret
sub
jl
out
mov
jecxz
cmc
je
pop
rorl
outsl
roll
sub
stc
inc
je
out
xor
bound
mov
les
pop
mov
push
inc
jmp
lds
jmp
add
les
jns
mov
imul
arpl
adc
cmp
pop
into
or
and
sub
leave
or
imul
adcl
lahf
pop
push
bound
movsb
pop
push
cmc
fnstsw
loope
pop
aas
mov
fcoml
mov
fs
mov
and
mov
cltd
pop
out
stos
jae
cld
cmpsb
jecxz
inc
movsb
cmp
cmp
dec
outsl
ds
dec
movsb
test
push
movsb
sub
or
out
cmp
push
jnp
pushf
jae
popa
mov
jmp
outsb
mov
adc
mov
pop
xchg
leave
pusha
mov
gs
movsl
std
stc
sahf
mov
cltd
lods
cmpsl
enter
fistps
jge
jnp
inc
push
mov
push
mov
scas
mov
add
lret
xchg
insb
rorl
fcompl
outsl
rcrb
pop
testb
aas
mov
jle
clc
pop
jg
jp
fbld
aam
xchg
xchg
xchg
or
mov
adc
scas
testb
mov
dec
jno
pop
mov
imul
add
mov
shlb
add
or
cld
sbb
imul
cwtl
stos
mov
or
lret
scas
movsb
loopne
arpl
loop
mov
aam
push
dec
test
push
xchg
lret
add
mov
or
aad
stc
aam
mov
xor
sbb
jne
les
and
mov
xchg
jge
mov
mov
leave
push
insl
movsb
and
mov
fbld
add
popa
xchg
dec
insb
jne
cmp
push
xchg
mov
ljmp
ja
mov
xchg
push
cmp
sub
cmp
enter
sub
cli
sbb
insb
pop
loope
and
aad
push
fstpt
shlb
adc
mov
adc
hlt
in
fdivr
dec
cmp
cli
push
sub
fcoml
xor
in
mov
sbb
jecxz
outsb
push
lret
jno
inc
push
push
push
test
dec
mov
sbb
add
daa
xchg
mov
sbb
enter
jl
mov
sub
push
inc
stos
jmp
pop
pop
outsl
les
add
loope
add
sbb
mov
push
ret
daa
sti
push
and
mov
jle
rcl
inc
int3
loopne
mov
cs
pop
lods
aas
ficompl
sub
add
or
push
cmp
mov
clc
arpl
push
stos
pop
mov
add
push
jge
inc
xchg
xchg
stos
mov
in
mov
cmp
mov
gs
cld
sarl
mov
int3
push
decl
sub
mov
clc
cmp
inc
mov
ljmp
mov
dec
xchg
daa
ja
pop
push
xchg
fs
das
jge
addr16
and
popf
call
scas
dec
inc
fidivl
fcmovne
or
aas
out
imul
pop
lds
gs
xchg
aas
jmp
les
cmp
imul
movsb
jl
xchg
icebp
les
cmp
daa
adc
sub
xor
dec
out
idivl
mov
lret
cmp
mov
jl
lcall
cmp
mov
cmp
int
cmp
mov
xchg
lock
and
add
mov
test
fidivrs
or
push
adc
pop
iret
inc
xchg
mov
shlb
mov
fbstp
cwtl
xor
inc
sti
ret
in
addr16
mov
mov
dec
leave
sub
mov
pop
mov
cwtl
sti
leave
sub
ja
adc
cwtl
lods
mov
xor
rolb
fsubl
repz
rorl
sub
xchg
fldl
xor
popf
mov
fstl
xchg
movsb
adc
jns
pusha
fsubl
mov
jp
cmp
pop
or
mov
inc
call
mov
xchg
jp
mov
xor
pushf
push
mov
hlt
ds
test
mov
dec
pusha
inc
sbbl
fs
sbb
cmp
lret
jg
pop
xchg
pop
jge
jns
pop
addr16
mov
js
sub
jb
leave
adc
or
vunpcklps
xor
cs
cmp
jge
mov
mov
and
xchg
adc
sbb
lea
jle
fldcw
cmpb
sbb
in
jle
dec
pop
lods
adc
jle
cmpsb
enter
mov
pop
mov
xor
ret
fidivrl
pop
xorb
mov
stos
mov
lods
out
xlat
pop
pop
aas
sbb
insb
pushf
js
in
stos
cmpsl
xchg
jno
jmp
pop
cltd
out
out
dec
mov
mov
dec
jbe
mov
les
mov
ljmp
ret
cli
mov
push
or
fsubp
ret
jo
push
push
lods
xlat
ja
cmp
std
add
data16
pop
in
enter
out
push
xchg
test
sub
xchg
jbe
aaa
stos
mov
jg
adc
inc
jo
sahf
cmp
sahf
lods
and
dec
mulb
sbb
pop
dec
inc
int3
cmpsb
cmp
adc
mov
pop
ret
xor
cltd
pop
in
mov
fisubrs
je
inc
pop
lret
sub
cmp
ret
cmp
mov
repz
and
mov
mov
fwait
data16
cmc
cmp
cmpsb
xchg
shll
rcll
fisttpll
mov
bound
xchg
mov
cwtl
inc
xchg
push
jo
pushf
inc
lcall
inc
xchg
cmpb
push
push
pop
adc
aam
aam
shll
insb
or
mov
cmp
mov
mov
imul
xor
inc
jmp
ss
or
sahf
ja
vfmaddps
mov
mov
mov
dec
and
ret
pop
loopw
dec
inc
cwtl
mov
cwtl
mov
nop
lds
out
mov
inc
dec
int
xor
pop
jno
sub
jmp
mov
sahf
or
xchg
mov
pxor
add
pusha
and
aad
test
aaa
cmp
add
jecxz
pop
sarb
or
insb
pop
pop
fistpll
mov
add
std
adc
test
inc
or
dec
fcomps
jo
inc
cmc
je
xchg
pushf
ret
popa
les
add
and
mov
sahf
fidivl
aaa
aad
in
cs
and
or
push
inc
mov
and
rorb
outsl
enter
sbb
rcl
mov
sub
sub
data16
and
mov
pop
into
sub
fcoms
shl
out
mov
and
sub
je
int
xlat
je
gs
add
sarb
notl
adc
pop
out
aas
add
dec
bound
arpl
pop
jnp
add
repz
cs
inc
cld
test
and
mov
pop
adcl
add
imul
mov
pop
xchg
inc
lret
movsl
xchg
lret
loope
repz
or
enter
nop
lcall
jne
test
mov
xor
jnp
addr16
mov
lret
pop
dec
aam
mov
cmp
jns
lret
push
sarl
sbb
test
mov
dec
lds
adc
jmp
dec
xchg
loopne
ret
adc
mov
lods
dec
add
imul
xchg
xchg
xchg
nop
jb
mov
imul
mov
mov
out
adc
je
sbbb
cmp
cmp
shll
lds
add
sub
and
cmp
and
or
push
mov
imul
flds
push
adc
clc
nop
call
sahf
imul
stos
jnp
jle
mov
cmp
adc
mov
xchg
roll
movsl
dec
lea
mov
lods
pop
adc
sub
repz
stos
push
sahf
jmp
mov
adcb
jp
push
cli
lods
mov
das
push
cwtl
jb
inc
dec
sarb
data16
sub
js
and
mov
das
pop
out
push
push
divb
cmpsl
mov
jg
sub
or
xlat
in
jne
or
jnp
push
dec
sbb
push
adc
mov
fmul
dec
stos
cld
and
push
enter
mov
pop
and
ss
adc
cli
cmp
mov
fdiv
repnz
scas
imul
je
cmp
fcmovu
sub
mov
sub
cmc
add
mov
mov
rcr
sbb
mov
rcrb
push
in
outsl
aaa
pop
or
lods
fs
fldenv
hlt
icebp
daa
adc
xlat
mov
cmc
sbb
std
push
imul
dec
insb
mov
out
pop
jl
std
je
fwait
pop
pop
xor
mov
xor
mov
mov
into
stc
iret
pop
sub
dec
lret
in
lock
enter
mov
call
or
sti
enter
fstps
ret
mov
dec
pop
push
pop
fiadds
mov
mov
cmp
xchg
jle
or
add
jb
dec
push
adc
mov
sub
dec
push
inc
shrb
cs
or
js
add
xor
pop
in
mov
or
adc
cmp
sbb
sub
popf
test
ljmp
nop
inc
add
mov
pop
xchg
aas
out
sbb
or
mov
pop
mov
scas
imul
push
shll
fcomp
mov
inc
mov
sbb
daa
xor
jle
push
data16
or
cwtl
sub
in
dec
cmpsb
stc
loop
pop
mov
xlat
jo
sbb
test
mov
mov
mov
pop
xchg
push
jmp
js
outsl
ja
lret
mov
aad
jge
push
pop
imul
pop
push
and
bnd
in
push
shrb
jns
add
push
pop
sbb
mov
cmpsl
ficompl
pop
nop
gs
jg
cmp
jbe
xor
and
mov
iret
lock
inc
jl
movsb
cli
into
sarb
aaa
mov
scas
xor
fisttps
add
std
sub
sub
jns
repz
mov
mov
cmpsb
mov
and
frstor
loopne
es
icebp
inc
imul
jmp
std
mov
stos
leave
xlat
xor
adc
xchg
in
ret
pop
ret
fbstp
push
xor
nop
push
and
inc
orl
sub
or
mov
out
std
xor
dec
xor
add
stos
push
pusha
mov
inc
mov
enter
xchg
mov
xchg
sub
mov
das
mov
jb
inc
or
pusha
sub
ror
sub
shll
aad
call
ss
or
fcomps
dec
fiadds
cmpsl
fs
or
mov
or
mov
adc
rcll
das
push
inc
sub
add
int
push
in
xor
jg
mov
mov
aam
lea
dec
lods
lahf
bound
xor
xchg
mov
mov
ret
mov
bound
jmp
mov
fmuls
dec
pop
loopne
fwait
mov
jge
rcrb
int3
fdivp
mov
xor
int
test
not
or
jmp
jp
aam
rorl
mov
lea
cld
cmp
aaa
xchg
push
sub
dec
mov
sub
iret
xchg
sarb
dec
mov
mov
mov
rcrb
cmp
out
mov
cmpsb
dec
cmp
pop
mov
or
inc
mov
insb
pop
lcall
lret
ret
mov
rorl
cmpsl
xchg
jg
jnp
jle
decl
aas
dec
or
add
popa
in
lret
inc
ss
and
add
mov
mov
lret
mov
add
lret
xor
push
mov
push
sti
xor
inc
mov
scas
sub
ret
sarl
fistl
movsb
cmp
and
lock
dec
aam
mov
inc
fwait
ja
js
or
inc
stos
mov
sbb
push
loop
lods
clc
imul
sti
ficompl
pop
cmp
adc
inc
pusha
fucom
icebp
mov
push
dec
and
addr16
mov
addl
inc
jl
mov
adc
rol
es
or
add
lock
mov
xor
mov
adc
and
sbb
sbbl
push
lret
add
es
clc
les
and
or
push
bound
mov
push
sbb
and
lret
loopne
add
xchg
out
ror
jge
mov
or
orb
xor
lock
jl
ret
inc
daa
adc
pop
andl
mov
mov
call
cld
xlat
xchg
pop
xor
shl
or
mov
xchg
lea
imul
mov
xchg
xor
push
loop
es
mov
aaa
mov
rorl
cltd
inc
dec
sahf
cld
and
loopne
mov
push
sti
je
test
stos
cmp
pop
lcall
fimull
shl
jecxz
testb
xchg
or
std
repnz
push
and
dec
arpl
and
into
in
push
dec
mov
add
imul
xchg
push
pop
sbb
push
xlat
cld
cmp
iret
test
cmp
loop
cmp
sbb
xor
mov
ds
jae
cmp
insb
mov
lea
js
push
stos
jne
adc
and
sbb
xor
mov
pop
movsl
shlb
xchg
mov
sub
mov
push
jbe
mov
ds
and
int3
jge
loopne
pop
xlat
pop
lahf
popf
add
jo
cld
clc
push
lods
lret
push
sub
jg
lcall
les
sti
in
pop
aad
inc
inc
jle
test
ror
pop
and
popf
mov
int3
jg
pop
sahf
movsb
sbb
push
lret
mov
inc
dec
mov
lret
jle
pop
loop
and
jmp
inc
jo
jnp
faddp
int
mov
mov
js
ljmp
popf
negb
push
inc
dec
in
and
pop
aaa
mov
inc
push
into
movsb
dec
fs
xchg
jl
pusha
inc
rorb
xor
fdivl
jp
mov
push
popl
pop
mov
iret
sbbl
nop
out
lods
inc
insl
mov
pop
lods
cmpsl
jge
into
jbe
cmc
loop
xchg
ret
pushf
jle
ja
movsb
je
fwait
or
in
xor
cmp
rcl
gs
cmp
repz
scas
aas
mov
jle
pop
mov
jp
dec
int
aas
fs
popf
stc
shlb
icebp
mov
lock
ret
jg
mov
iret
rolb
jae
inc
nop
imull
xor
in
sub
xor
push
movsl
std
dec
and
test
jno
xor
mov
cmp
inc
rcll
jno
sub
aas
cwtl
or
add
in
cmpsb
mov
jae
in
ljmp
mov
mov
mov
shrl
mov
mov
lods
out
sub
push
std
push
montmul
cmpsb
add
clc
pusha
repnz
mov
pop
or
jle
and
das
js
sub
pusha
das
mov
jnp
dec
xor
cmp
dec
in
cmp
pop
in
cmc
lds
ret
lds
cltd
pushf
push
sbb
inc
sbb
sbb
dec
dec
mov
test
pop
testb
into
repnz
out
mov
inc
mov
repnz
mov
aad
fstpl
pop
xchg
sub
pop
sarb
adc
ret
call
and
push
dec
sub
jae
inc
xchg
xchg
cmp
cmpsb
sub
cmpsl
xchg
inc
out
pop
pop
dec
ja
adc
stos
je
mov
mov
or
lods
jmp
pop
test
divl
sbb
mov
and
subl
xchg
jp
push
sti
je
jecxz
push
mov
mov
xor
sub
pushf
cld
and
xchg
inc
cltd
clc
mov
das
sub
pop
rcr
pusha
sbb
jo
xchg
nop
test
cs
ja
ljmp
cmp
adc
pop
scas
jp
or
lea
and
nop
jnp
lods
inc
push
xor
das
mov
in
addb
mov
call
inc
and
inc
fisttps
cltd
push
inc
in
int3
cmp
nop
or
sub
inc
inc
stos
stos
ret
push
fiaddl
or
ja
adc
mov
fidivrs
movsb
movsl
dec
sbb
mov
mov
les
repnz
xor
mov
and
lods
mov
jle
mov
mov
pop
push
add
or
repnz
push
xor
outsl
jae
std
enter
int3
add
fs
jno
in
dec
lods
call
fsts
test
leave
sub
sbb
mov
sbb
loopne
pop
mov
add
sti
stos
int
xchg
xchg
je
pop
adcl
xlat
mov
push
into
test
sbb
fcmovu
int3
icebp
lahf
out
sbb
movb
int3
sub
test
ja
iret
js
mov
stc
sbb
sbb
push
fimuls
fxch
pop
loopne
mov
sub
and
mov
inc
cmp
sbb
cmp
xor
stos
out
insl
push
cmp
mov
mov
dec
gs
ljmp
jo
imul
adc
mov
and
push
mov
lds
pop
adc
iret
inc
xchg
rcr
or
pop
aam
mov
mov
inc
aaa
xchg
cmpsl
stc
inc
cmp
cmpsb
loopne
fiaddl
hlt
lahf
xor
fstl
enter
xor
popf
repnz
jo
cmp
dec
lods
sub
fsubrp
jns
sarb
sbb
stc
push
and
daa
icebp
cwtl
mov
scas
mov
and
or
imul
or
jmp
mov
stos
mov
inc
push
addr16
sub
ss
popa
inc
mov
sub
hlt
pop
inc
stos
jne
test
and
sub
or
insl
lds
xchg
test
jnp
lret
jns
lea
sub
mov
in
mov
loopne
inc
lods
mov
popa
mov
fimuls
insb
popf
imul
dec
ss
inc
imul
addb
out
push
fdivrl
sbb
rol
inc
xor
pop
lret
mov
pop
ss
pop
cmp
repnz
pop
cmpsb
or
push
out
push
mov
fistl
fwait
ror
inc
gs
inc
cld
rcll
pop
pop
jnp
test
pop
daa
cltd
adc
aad
push
xor
loopne
cmp
cmpsl
cmpl
roll
std
pop
call
mov
jecxz
loopne
outsl
pusha
loop
dec
lock
add
xchg
mov
imull
push
frstor
inc
xor
push
add
test
nop
inc
and
add
add
cwtl
push
pop
jo
cmp
sbb
frstor
inc
and
xchg
pusha
lcall
mov
int3
xchg
decl
adc
inc
add
imul
rcrl
mov
cmp
cld
xchg
inc
sub
in
insb
and
dec
mov
inc
mov
mov
add
pop
popa
add
test
repnz
mov
mov
xchg
add
xchg
mov
test
scas
jl
sbb
lahf
xor
call
add
pop
imul
inc
sti
test
not
add
jp
inc
or
mov
cmp
sahf
iret
inc
pop
fwait
or
sbb
and
push
addr16
hlt
push
shll
xchg
sub
or
inc
or
and
push
negl
movsb
stc
push
mov
mov
loopne
pop
push
ja
cmp
fcomps
cli
outsb
int
push
cmc
pusha
aas
xor
xor
stos
mov
sub
inc
lret
mov
loop
xor
push
pop
adc
test
ljmp
movq
jg
pop
sub
pop
add
test
jo
ret
cmc
in
pop
orl
std
pop
inc
outsl
pop
adc
js
js
leave
ds
ret
mov
cmp
mov
call
inc
mov
in
mov
std
xchg
ja
mov
scas
inc
dec
jle
stc
add
cmp
test
and
adc
loopne
xchg
pop
mov
fiadds
mov
into
xchg
and
int3
stc
loopne
xchg
aad
sub
rolb
js
jno
mov
lret
mov
push
cmc
in
dec
or
and
sti
cmpsl
imul
push
xchg
adc
push
jno
jp
or
pop
repz
and
int
push
cmp
test
jp
mov
jmp
adc
mov
out
mov
xchg
inc
mov
mov
mov
in
ror
and
adc
cmp
fwait
jecxz
pop
shrb
xlat
lahf
movsb
and
add
out
inc
stos
mov
xor
fistpll
js
lock
add
lret
sahf
mov
jnp
jnp
int
sub
add
and
arpl
sahf
imul
data16
cmp
lea
jp
dec
cmc
mov
adc
jo
inc
imul
pop
incl
cmpsb
xorb
mov
push
sub
cmp
inc
out
mov
dec
xor
js
jmp
and
push
ljmp
jl
mov
inc
xchg
cli
das
mov
mov
outsb
mov
and
push
adc
mov
adc
cmp
repnz
lds
scas
out
mov
dec
es
cmpsl
in
std
adc
xchg
gs
lods
outsb
std
inc
mov
mov
sub
loopne
popa
cmp
inc
add
int3
cwtl
push
aaa
jp
icebp
dec
jecxz
dec
push
mov
loope
popa
out
mov
add
inc
shll
dec
pushw
mov
mov
testb
clc
jle
push
sbb
ds
stc
mov
pop
jnp
ja
ret
out
les
roll
inc
inc
pusha
add
lds
cltd
fisubl
aad
test
call
jle
mov
mov
pop
mov
push
inc
pusha
loope
sahf
test
dec
xor
sbb
adc
test
loop
in
in
mov
test
inc
test
add
out
icebp
and
add
movsb
jmp
and
frndint
std
lods
adc
ret
xchg
mov
addr16
jne
xorb
aam
jecxz
xchg
pop
cmp
push
stos
push
mov
imul
push
or
nop
pop
lret
out
test
and
dec
sti
scas
adc
mov
call
jle
lahf
jp
push
add
jo
mov
jl
jbe
cmp
or
adcl
mov
mov
mov
nop
push
adc
pop
das
int
pop
jb
inc
data16
sbb
in
out
scas
adc
out
lds
idiv
into
mov
test
stc
movsl
inc
loop
adc
jno
lods
test
aam
xor
mov
ficomps
and
mov
loop
mov
inc
add
xchg
rcrb
xor
loope
add
mov
add
aad
mov
js,pt
inc
cmp
mov
pop
aas
xchg
ds
xchg
fidivs
loope
dec
std
inc
jl
dec
dec
pop
lret
add
jl
out
pop
mov
mov
fistps
arpl
xor
sub
or
sub
inc
mov
adc
xchg
std
push
pop
or
es
jg
push
push
add
adc
leave
clc
xchg
sarb
cmc
shrb
sub
add
or
clc
lock
pop
ror
adc
loopne
clc
in
push
test
xlat
push
xor
mov
es
int3
nop
inc
sbb
xchg
inc
add
cmpsb
jp
sub
dec
js
jne
and
mov
sahf
or
das
cwtl
fdivrs
sbb
into
xlat
call
das
jl
cmpsl
mov
or
test
fists
jns
stos
shl
xorb
or
pop
xchg
pop
jp
sti
xor
cmc
movsb
inc
mov
in
add
add
dec
lods
mov
enter
enter
aaa
sub
gs
pop
cmp
add
mov
jmp
mov
jb
clc
pop
jecxz
stc
sti
or
out
fstpt
fld
sub
mov
outsl
jg
add
jbe
jecxz
shll
mov
dec
dec
je
mov
in
mov
jns
cmp
cmpsb
repnz
xchg
lods
sbb
jmp
pop
add
dec
pushf
jae
cs
dec
cmp
decl
fsts
xchg
inc
stc
lret
test
ror
mov
insl
add
jmp
cs
jp
pop
mov
cmp
jmp
jp
sub
jbe
jb
lea
cmp
ret
ja
ja
rol
rorl
lds
jge
scas
shrb
ret
push
mov
pop
sub
jmp
xchg
das
les
cmp
xor
lea
dec
aam
dec
fadd
xor
fnstenv
jmp
ljmp
lock
mov
and
xchg
lcall
adc
repz
cld
sahf
cmp
xchg
enter
fwait
pop
mov
jle
push
mov
cmp
test
push
pusha
push
test
icebp
imul
xchg
notl
loopne
test
sub
es
pop
notb
jae
jle
inc
es
mov
inc
faddl
sub
push
ds
adc
sbb
addr16
xor
pop
or
fwait
outsl
int
push
inc
xchg
rorb
mov
dec
test
adc
cmp
push
and
in
xchg
rcrl
xor
cs
movsb
mov
push
insb
ljmp
push
mov
loopne
aad
pop
mov
push
bound
add
xchg
stc
sbb
pusha
cmp
jbe
dec
sub
push
mov
cmp
add
pop
add
movsb
mov
rep
cmp
xchg
aas
pusha
pop
cmp
xor
mov
cmp
push
inc
cli
sub
scas
mov
cs
cmp
add
adc
int3
or
inc
inc
ljmp
cld
leave
lods
mov
sbb
iret
and
sub
jmp
daa
test
jp
or
add
adc
and
inc
sbb
pop
call
cmp
roll
xchg
sub
mov
push
loop
inc
inc
push
stc
sub
popf
cmp
pop
sub
pop
add
push
mov
sbb
jp
sub
pop
int3
jbe
dec
cmp
jmp
mov
iret
xchg
out
sbb
repnz
into
or
les
sbb
sti
mov
ret
rcrl
push
adc
add
mov
mov
jne
push
lea
rcr
icebp
lea
or
sub
jge
add
repz
pop
cmp
jmp
pusha
jo
fdivr
ret
sahf
cmp
pop
stos
repnz
sar
movsb
adc
cmp
xchg
pop
test
mov
sub
ss
xchg
ja
addr16
hlt
xor
mov
sbb
pop
shr
ds
or
sub
sbb
repnz
lea
sub
nop
sbb
addr16
mov
add
repz
mov
xor
and
mov
cmpsb
adc
pushf
pop
lret
enter
movsb
daa
pop
pop
mov
xor
movsl
sub
dec
pop
pop
fcoml
pop
lods
mov
sbb
inc
inc
jecxz
orb
mov
mov
inc
pop
aam
xchg
enter
jnp
ficompl
lret
dec
sbb
fstpt
inc
sub
push
inc
mov
sarb
js
mov
jle
ret
jno,pt
and
idivl
sub
or
and
clc
shlb
aad
xchg
inc
adc
mov
fisttpl
inc
dec
mov
clc
cmp
scas
xchg
shrb
insb
pop
adc
pop
adc
movsb
loope
pop
push
clc
sub
or
inc
jbe
into
pop
idivb
pop
ror
mov
nop
and
pop
sub
adc
out
push
sbb
fisubs
mov
stos
mov
in
xchg
mov
call
scas
jl
loopne
ds
mov
into
lds
sbb
push
mov
stos
lret
stos
or
cmp
test
push
push
and
cmpsb
out
sti
daa
out
push
add
or
or
or
mov
push
mov
push
jb
mov
inc
pop
ret
insl
inc
xor
inc
pop
cmp
js
lods
cli
xor
pop
push
lret
subl
mulb
ficompl
hlt
in
or
push
lods
push
inc
push
dec
je
push
test
mov
into
jb
xor
mov
pop
jnp
add
std
les
scas
pop
xor
push
jns
ss
loopne
inc
lock
test
jno
pop
xchg
stos
push
mov
movsl
les
into
out
movsl
bound
sub
dec
dec
std
or
push
daa
sbb
xchg
add
sti
ss
movsl
lret
cmp
mov
jecxz
mov
ja
sbb
lds
push
in
mov
cli
mov
xchg
pop
push
leave
jl
or
cmp
xchg
aam
sbb
mov
stos
pusha
movsb
dec
inc
jg
jl
mov
mov
jns
xor
lods
pop
je
adc
adc
and
sbb
mov
cmp
and
push
sub
inc
pop
mov
mov
aas
lods
insl
fwait
xchg
xchg
lods
xor
ret
add
jl
cmp
cld
sbb
mov
ret
mov
enter
push
cmc
hlt
outsl
pop
and
inc
mov
pushf
add
xchg
lods
dec
insl
pop
inc
int3
sbb
cli
inc
out
nop
mov
clc
pop
mov
or
stos
pop
sarl
insb
mov
mov
xchg
frstor
sub
stos
test
cmc
popa
call
dec
sub
lret
leave
pop
push
mov
shrl
sub
push
cmp
ljmp
fldcw
stos
cmp
aam
dec
push
jl
push
adc
loop
scas
jp
mov
sub
cmp
xor
push
jns
pop
mov
enter
lods
int3
cltd
fs
or
scas
adcb
rcll
pusha
inc
inc
mov
ret
stos
mov
scas
push
sbb
out
movsb
dec
loope
arpl
hlt
aas
add
shll
data16
aad
xchg
popf
out
push
stos
loop
fcoms
out
cwtl
faddp
adc
nop
nop
cmc
xlat
or
test
dec
pop
jnp
inc
or
or
mov
movsl
cli
test
out
jae
fdivrs
je
push
cmp
std
xchg
iret
push
mov
adc
aas
nop
xorb
jno
ja
and
mov
or
pop
lock
inc
jae
add
xlat
mov
pop
test
mov
sar
iret
lods
je
xor
movl
and
add
sbb
push
cmp
mov
pop
out
push
pop
insb
into
inc
or
add
mov
loopne
in
sub
int3
xchg
aas
lock
pusha
and
dec
jp
stos
inc
fisttpl
xchg
adc
dec
movsb
into
push
dec
jle
mov
rolb
xchg
cmp
rorb
add
test
add
scas
sbb
xor
out
ljmp
stc
inc
sub
in
jmp
push
insl
shll
jge
ficoms
inc
xchg
mov
jl
cmp
addr16
jb
cmp
jle
xchg
jecxz
popa
das
scas
and
icebp
dec
movsl
ja
or
or
mov
mov
pop
nop
lds
mov
divb
pop
repnz
icebp
cmp
cmp
out
gs
sub
dec
cmc
fimull
leave
rcl
sbb
mov
mov
loope
loopne
test
enter
movsl
clc
cmp
and
xchg
dec
xchg
imul
pop
xchg
orl
sbb
pop
pop
lods
pop
mov
inc
jg
pop
insb
jmp
lea
adc
push
in
and
mov
lods
insb
jle
rcrb
roll
sub
iret
sub
dec
les
sbb
jl
fstl
imul
sbb
xchg
lret
aam
mov
daa
out
sbb
or
rorb
pop
mov
adc
in
push
push
mov
rcr
ret
pusha
push
sub
push
imul
cmp
xchg
xor
adc
enter
imul
mov
movsb
mov
les
shrb
pushf
push
adc
mov
mov
adc
inc
aaa
pop
jb
xchg
sub
popf
mov
je
jecxz
mov
dec
sub
sub
out
mov
clc
dec
xor
lock
subb
sahf
push
dec
add
lock
pop
std
mov
sub
loop
dec
jae
push
sbb
je
out
cmp
pop
outsl
mov
movsb
sar
ret
sbb
cmp
shr
jecxz
pop
mov
pop
hlt
xlat
sbb
and
lods
mov
and
aad
add
push
adcl
dec
call
loopne
dec
push
xchg
mov
lods
jmp
pop
mov
mov
cmpsl
mov
dec
daa
mov
std
imul
insb
inc
fsts
shr
mov
lcall
mov
mov
loop
lds
mov
dec
daa
int3
jnp
scas
sub
scas
cmpsl
pop
push
sahf
sbbb
pop
scas
bound
ljmp
movb
repnz
dec
mov
push
cmpsl
sbb
or
out
pop
ja
fsincos
lret
bound
fwait
push
or
push
out
subl
hlt
pop
ljmp
push
lcall
pop
sarb
push
aam
cmp
sub
nop
lds
gs
notl
sti
xor
pop
pop
mov
sbb
add
imul
fwait
lret
data16
or
loop
dec
sbb
test
cltd
lea
sar
inc
loop
cmp
loope
adc
jge
out
sub
mov
cmp
ljmp
loop
cmc
or
scas
mov
mov
inc
cmp
or
into
push
mov
mov
and
mov
mov
sbb
loopne
xchg
pop
xor
bnd
or
int
aas
dec
pop
or
and
mul
sub
je
push
test
pushf
pop
int3
insl
pop
pop
sub
lds
xchg
in
fcmovnu
xchg
push
push
nop
fisubrs
fcomps
loope
out
inc
gs
jle
test
cmc
xor
mov
sub
and
mov
mov
pop
sbb
sub
fisttpl
mov
mov
mov
into
sbb
aas
mov
mov
aam
xor
jle
movsb
pop
out
aad
int3
pop
int3
pop
mov
jo
cmp
mov
decl
inc
ja
mov
inc
callw
std
jno
lods
stos
fsts
fwait
data16
lret
rcrl
fucomip
add
inc
stos
punpckhdq
cli
mov
cmpsl
cmp
movb
mov
out
add
call
add
cld
arpl
jbe
sub
repz
ljmp
sahf
nop
mov
outsl
xchg
push
and
adc
fldl
pop
xchg
push
jl
xor
stos
cmp
xor
pop
cmp
push
mov
sub
dec
xchg
lods
fwait
ja
sub
fsubs
sbb
push
pop
test
dec
xor
movsb
xchg
cmp
push
addr16
cmp
fs
sahf
add
lods
and
fisttps
outsl
stos
pop
jae
jnp
addr16
or
jp
xor
mov
and
gs
call
leave
add
arpl
or
je
pop
decl
mov
xor
push
cs
push
testl
and
push
jecxz
xchg
divl
and
pop
sub
sbb
mov
pop
insl
ret
repnz
repz
stos
dec
jnp
push
repz
cwtl
rorl
jle
js
int
sub
sub
jge
cltd
pop
nop
pop
rol
sbb
adc
imul
adc
push
dec
pop
js
stos
lock
sub
mov
test
push
dec
cli
cwtl
add
cmp
or
sbb
mov
inc
sbb
aas
enter
movsb
inc
xchg
pusha
add
xchg
fists
pop
adc
jle
sub
outsb
xchg
dec
in
pop
mov
stc
push
ja
push
out
lcall
inc
dec
dec
mov
push
jbe
xchg
loop
adc
es
push
fisubrl
dec
mov
inc
mov
or
dec
ljmp
mov
je
push
or
mov
or
push
mov
int3
inc
mov
dec
add
xor
add
sahf
inc
or
aaa
xor
pushl
xor
fmuls
add
adc
adcb
ja
sub
mov
push
pop
mulb
xor
sbb
adc
lret
dec
je
int
movsl
clc
xor
adc
or
sbb
loop
pop
cmp
add
ja
addr16
movsb
cltd
add
jg
out
scas
iret
or
lock
sti
subb
les
gs
inc
stos
sub
fwait
outsl
lahf
mov
ljmp
pop
pop
icebp
into
sbb
push
fs
ret
mov
mov
jp
shl
add
mov
ss
push
jmp
popa
cli
mov
lods
or
js
lret
out
push
jb
les
les
stos
mov
or
mov
mov
dec
mov
add
lret
fwait
cmp
ret
repz
cmp
dec
out
test
lret
in
das
std
outsl
mov
lret
pop
inc
push
aam
xor
gs
push
bound
lcall
cmc
mov
jl
andl
cmp
jno
and
jbe
mov
pop
fwait
hlt
add
mov
bnd
out
jmp
incl
jne
arpl
jae
fcom
pop
aad
add
ja
mov
adc
pop
adc
mov
or
rcrb
inc
pop
jns
add
or
stc
mov
xchg
loope
stos
insb
cmp
pusha
cmp
mov
inc
and
xchg
xchg
shll
int
inc
xchg
push
mov
pop
sahf
pop
push
xchg
push
mov
fstpl
fisubrs
aas
aam
mov
int3
lods
test
lods
sti
fs
andl
inc
xchg
loopne
stos
sub
jns
dec
and
lea
cmp
out
jno
pop
sarl
pop
notb
mov
jo
cltd
push
data16
jecxz
fcmovb
jae
mov
or
push
cli
lods
in
rol
pop
les
cld
imul
movl
adc
mov
stos
addr16
negb
jmp
dec
mov
pop
xchg
sbb
cwtl
icebp
iret
pop
cs
jnp
pop
lret
adc
and
ss
or
popa
cmp
jne
jmp
xor
lea
or
punpckhdq
and
imul
out
aam
push
out
xchg
pop
xchg
mov
jecxz
and
les
into
add
ficomps
js
pusha
ljmp
fsubrs
pop
movsb
sbbl
fisubrl
or
outsb
out
jp
xor
ja
push
subb
adc
sub
pop
ret
dec
loop
leave
jmp
xchg
ret
imul
test
sub
mov
hlt
ja
or
add
add
inc
jl
lea
int3
imul
test
adc
adc
add
movhps
rorb
insb
cmc
cli
dec
ffreep
pop
xchg
fdivs
sub
inc
dec
data16
mov
or
mov
mov
sbb
orl
mov
cmc
shl
pop
adc
or
test
and
test
testl
xchg
loopne
imul
mov
xor
cltd
cmpsl
fcompl
pop
push
mov
in
push
in
or
jnp
dec
loop
and
and
xchg
adc
stos
stos
push
adc
cmp
cmpl
inc
popa
loop
inc
or
mov
daa
mov
inc
outsl
call
fcoml
int3
dec
ret
loopne
scas
shlb
mov
dec
dec
test
adc
std
and
sub
or
mov
sbb
push
inc
cmc
fmul
xor
mov
jmp
sub
jno
cmp
sbb
out
adc
aas
dec
jl
push
test
enter
fstpl
lahf
ret
xchg
ret
add
jns
xor
add
mov
punpckhbw
jle
mov
push
aad
pop
sub
fwait
les
shrl
sub
mov
cmp
jg,pn
mov
jp
mov
call
pop
pop
dec
shl
inc
dec
xchg
mov
and
xorl
stc
mov
fld
xor
cs
addr16
out
movsl
ljmp
clc
mov
inc
iret
and
fcmovnb
shll
mov
aad
loope
mov
add
push
aas
sbb
notb
sti
xor
in
gs
test
or
dec
lods
or
popf
fucomip
mov
push
sub
aas
nop
add
xchg
call
dec
rcrb
mov
rorl
popf
push
and
pop
mov
dec
jno
mov
movsl
insb
or
nop
and
fiadds
mov
pop
loop
lea
jae
jbe
cltd
adc
pop
adc
xor
inc
xor
jg
cmc
xchg
jns
mov
cli
mov
outsb
mov
jle
stc
sub
push
sarl
es
out
das
out
aas
daa
int
cmp
ret
repnz
cltd
mov
jle
fbstp
test
xchg
decb
daa
jmp
test
cmc
mov
movsb
jg
out
pushf
push
inc
and
pushf
inc
cltd
sbb
rcrl
cmp
inc
pop
pop
lods
imul
sbb
pop
aad
aas
sub
mov
sbbl
fsubs
fwait
mov
adc
iret
addl
clc
jne
shrb
repz
arpl
add
imul
sub
pop
std
lret
cld
insl
iret
insl
cli
ficompl
fimull
adc
or
cmp
pop
push
mov
ret
pop
add
cmp
mov
repz
cmpsl
xchg
and
push
sub
pop
fcmovnbe
push
adc
lcall
jo
xchg
mov
xor
jns
lods
out
add
out
pop
frstor
pop
pop
jl
into
sbb
mov
inc
rolb
inc
or
es
dec
and
leave
jno
cmpl
sarl
out
in
mov
enter
pop
out
inc
or
push
mov
xor
mov
sub
aas
test
push
mov
mov
push
pop
ret
or
inc
or
roll
daa
mov
stc
les
inc
loope
sbbl
xchg
xchg
cli
mov
and
and
mov
shl
adc
mov
mov
addr16
enter
cltd
movsl
inc
and
daa
pop
out
jbe
mov
ret
mov
dec
dec
xor
xchg
test
dec
mov
and
inc
sub
adc
xchg
scas
xchg
dec
mov
sub
mov
lods
or
pop
imul
sbb
dec
inc
or
lds
and
add
and
ror
stos
cmp
sbb
xchg
mov
cltd
ret
cmpsb
xor
xlat
aaa
nop
inc
or
cltd
mov
jno
adc
cmp
adc
fnstsw
pop
push
xchg
sbb
sbb
in
fistpl
nop
jecxz
push
cmc
insb
cmp
outsl
mov
jecxz,pt
add
je
push
lcall
dec
dec
in
mov
fs
mov
sub
dec
inc
fwait
and
adc
jg,pn
adc
pop
lock
daa
adc
xor
mov
dec
bound
add
jns
push
outsl
insl
in
sub
mov
fidivs
or
xchg
pop
jge
sub
mov
les
loope
into
inc
or
mov
cmp
cmc
stc
xchg
jns
xor
inc
xchg
inc
push
dec
mov
or
add
rolb
mov
cmp
filds
loope
mov
mov
lds
cmp
xchg
cltd
sub
jmp
cmp
or
hlt
and
scas
mov
aad
dec
leave
and
fisubrl
push
add
ss
jmp
orl
mov
je
test
mov
adc
or
mov
sarb
or
and
shlb
shrb
mov
inc
mov
out
push
add
adc
xchg
pop
cmp
push
add
adc
mov
mov
in
mov
shrl
sub
push
add
add
in
jns
or
push
test
push
mov
lcall
xor
mov
sub
dec
fisttps
inc
sahf
stc
cmp
rolb
and
push
mov
or
pop
xchg
test
sbb
dec
idivb
mov
cmp
ret
out
into
pop
in
pop
inc
xlat
and
pop
and
pushfw
mov
nop
in
and
loopne
pop
xor
pop
data16
fcomps
mov
sub
xchg
popf
push
outsl
incl
aam
dec
enter
xchg
lret
mov
pop
dec
jle
jge
cmp
cmp
mov
fildll
xchg
insl
das
mov
mov
mov
mov
test
mov
inc
movl
in
cmp
loope
pop
cmp
shl
movb
gs
jnp
std
orb
inc
jl
int
mov
sti
loop
scas
jbe
aas
dec
leave
mov
xor
aas
mov
adc
xor
cmpsl
inc
les
shlb
xor
mov
iret
xchg
test
rolb
icebp
stos
test
pop
sbb
dec
loope
rorb
mov
test
lret
clc
rcrl
inc
and
movsb
xor
out
lods
sub
fadds
inc
mov
mov
icebp
mov
fisttpll
sub
pop
lods
push
les
add
dec
pusha
fbld
push
pop
xor
stc
imul
mov
sarb
stos
dec
push
jmp
jmp
xchg
xchg
xchg
inc
adc
pushf
call
sub
mov
add
decl
stos
add
stos
popa
sub
cwtl
lods
pop
xor
rorl
inc
movsb
jl
out
mov
rcrb
jp
mov
repz
mov
adcl
adc
or
idivb
sub
sahf
aas
push
xor
push
and
nop
mov
dec
lret
mov
mov
jecxz
cmp
into
ds
and
jno
dec
imul
aaa
push
outsl
dec
mov
in
cmp
sbb
repnz
jbe
xchg
lcall
imul
sbb
and
popa
ds
test
into
xchg
addr16
hlt
lcall
mov
inc
scas
ret
repz
lea
push
cmpsl
subl
pop
pop
push
test
pop
xchg
repnz
xchg
add
inc
movsb
push
mov
mov
js
or
or
sbb
xor
lds
fidivs
cmp
arpl
dec
ds
insl
aad
xchg
in
push
jg
jp
dec
lret
shlb
xchg
dec
or
sar
and
jno
in
cmc
jne
sub
inc
sub
aas
cmpsl
push
mov
cmp
movsl
in
jge
out
stc
sub
inc
dec
inc
call
cmp
mov
outsb
imul
cmp
dec
scas
mov
sub
stos
mov
sbb
and
aad
cwtl
cmpsb
mov
pop
lock
fmull
fisttpll
sub
mov
push
or
push
scas
mov
jb
sarl
inc
sbb
mov
enter
xchg
sub
cld
std
push
cmp
shl
std
rorb
movsb
aaa
fwait
stos
push
aad
pop
cltd
lock
adc
lret
inc
mov
sbb
stos
jno
jecxz
ljmp
in
cmp
cltd
pushf
cmp
cmpsl
mov
loope
add
js
ret
push
jno
test
in
jecxz
and
ja
andb
cli
inc
push
fcmovne
mov
call
push
cs
xor
push
out
push
and
adc
mov
and
dec
adc
int3
loope
sti
cli
ret
sbb
lahf
test
xor
ds
imul
ds
xchg
push
js
add
mov
cmp
mov
push
add
and
aas
negb
inc
mov
or
faddl
xor
xchg
adc
cmp
mov
loopne
shll
clc
cmp
mov
xchg
xor
lret
mov
xor
push
pop
pushf
pushf
movsb
ja
pop
popl
jecxz
jg
mov
andl
mov
jg
mov
sbb
iret
sbb
jb
test
mov
mov
pop
ret
dec
andb
xchg
das
xchg
mov
rcrb
mov
imul
cmp
js
pop
ret
xor
dec
lret
mov
sub
ret
pop
jnp
les
xor
ret
mulb
inc
movsl
notl
or
or
nop
cmpb
sbb
sahf
mov
je
mov
cmpl
test
dec
scas
decl
fsubrl
jns
lds
mov
xchg
test
inc
jmp
insl
hlt
mov
les
ret
scas
and
js
sub
nop
leave
addl
cmp
movl
jns
jns
js
mov
adc
jp
pushf
adc
cmovno
out
sti
lods
fsubrl
out
xchg
adc
mov
inc
dec
mov
sub
repz
in
sub
enter
mov
or
xchg
adc
mov
adc
or
ja
mov
jnp
inc
test
jae
enter
nop
subb
xchg
mov
mov
cmp
lods
inc
in
pop
lods
jg
xor
sub
loopne
adc
mov
ja
addl
dec
adc
cli
adcl
add
testb
add
insl
in
fisttpll
cmp
sbb
sbb
mov
pop
mov
and
rcr
or
lcall
fldl
fstl
repnz
repz
or
pop
inc
mov
mov
movsb
fists
fwait
mov
iret
add
or
mov
stos
test
mov
pop
cmp
or
repz
cmpsb
and
daa
adc
sbb
scas
lock
aas
inc
dec
inc
shll
into
fs
and
mov
lret
xor
and
sbb
pop
rorb
pop
push
jmp
rcl
sub
leave
pop
sarl
loope
shrl
cmp
andl
mov
lret
out
dec
pop
popf
adc
mov
sbb
lds
sub
pop
xchg
add
push
pop
sub
repnz
in
test
xlat
mov
xor
and
mov
jae
int3
popa
xlat
cmp
jno
mov
lret
and
adc
gs
sarl
mov
mov
mov
push
inc
mov
push
test
mov
mov
dec
and
cltd
das
faddl
push
into
fildl
inc
inc
sub
inc
pusha
push
nop
andb
sub
fldenv
rclb
test
jns
dec
lods
pop
push
testl
or
mov
sub
leave
jns
sub
push
push
jno
lahf
fwait
enter
mov
fidivs
xchg
les
fstps
pop
xor
call
pop
bound
sarb
enter
nop
pop
lret
das
pop
mov
jge
leave
adc
inc
ds
lret
cmp
cmp
push
mov
xchg
jae
or
fbstp
icebp
mov
inc
adc
adc
and
enter
jnp
out
jl
push
add
sbb
pushf
imul
in
dec
leave
stos
push
or
mov
les
pop
or
fdivr
arpl
inc
mov
inc
dec
xchg
pop
leave
sarb
xor
add
mov
cltd
sub
sahf
out
sbb
xchg
outsl
es
or
push
daa
add
mov
pop
push
adc
cmpsb
in
cmp
pusha
fwait
cmp
nop
cld
push
cmp
test
pop
add
pop
dec
sub
fisttps
pop
dec
in
dec
xchg
add
jmp
sbb
in
movsb
ds
fcompl
mov
dec
mov
xor
jnp
in
movsl
mov
mov
jp
scas
push
dec
int3
ficompl
adc
add
fcompl
lea
lea
xchg
rol
jecxz
inc
cmp
jo
adc
push
xor
cmp
lret
cmp
je
sbbb
arpl
test
jae
lods
nop
pop
test
jmp
xor
ret
out
sub
dec
push
jmp
lret
test
cs
xor
mov
mov
or
out
and
hlt
mov
cmp
notb
test
pushfw
nop
dec
stos
pop
les
popa
pop
loop
int
and
sahf
ss
fdivl
adc
mov
xor
mov
sar
mov
stc
and
xchg
cmp
and
mov
push
inc
inc
push
inc
das
xor
mov
xor
sub
jnp
inc
rorb
sbb
xlat
rorb
daa
loop
cltd
rorl
leave
shr
les
imul
inc
iret
cmpsb
int3
inc
dec
les
cmp
aas
stos
hlt
mov
das
inc
mov
in
push
aad
mov
jne
jno
cli
lock
int3
push
mov
inc
lret
jno
nop
jbe
jg
clc
ret
sbb
cmp
loope
dec
ljmp
mov
adc
dec
leave
sub
xor
push
loop
scas
inc
dec
pop
xor
divl
pop
test
or
mov
stos
arpl
fsubrl
lret
xor
dec
notb
lods
cmp
jnp,pt
stc
mov
cld
jl
sub
into
lds
clc
mov
lcall
lods
jl
inc
shlb
inc
inc
ret
mov
add
jb
inc
cmp
aad
ret
lock
aam
dec
inc
ja
xchg
jp
cli
cs
xchg
loop
dec
and
ret
mov
sub
add
arpl
hlt
adc
cmp
fs
inc
push
adc
jg
mov
mov
clc
lods
int3
inc
dec
enter
stos
loope
leave
shlb
mov
push
dec
inc
or
dec
mov
rorl
ret
and
jbe
arpl
leave
pop
mov
push
out
aam
out
xor
pop
out
test
sbb
jle
pop
cwtl
push
adc
pop
sarl
lock
insb
jnp
add
test
xchg
add
ljmp
push
inc
adcl
fwait
in
scas
push
adc
imul
sbb
adc
pop
rolb
xchg
pop
sbb
loope
dec
ss
dec
clc
ds
nop
sbb
dec
or
jl
jecxz
mov
dec
sub
adc
adc
adc
add
adc
mov
sbb
fiaddl
cmp
ljmp
nop
std
sub
rorb
dec
rcr
add
pop
test
test
sub
imul
pop
imul
cltd
jb
in
xchg
nop
push
pop
test
nop
loopne
push
cmpl
dec
or
cmp
or
scas
mov
int
dec
and
aad
pop
bound
jae
cmp
stc
lock
pusha
xchg
cld
fildl
xor
nop
fmull
push
sarb
mov
push
stos
arpl
adc
or
sbb
sub
pop
jmp
jbe
inc
or
xor
mov
ds
dec
imul
dec
inc
xchg
sar
dec
mov
cld
outsl
cmp
orl
movsb
arpl
inc
push
push
faddp
imul
pop
test
scas
dec
and
out
jmp
fsubrl
jo
popa
mov
outsl
dec
xchg
jge
sub
sub
inc
mov
out
mov
in
mov
jne
repnz
fiadds
stos
sub
lea
js
jnp
push
icebp
sub
iret
int3
fcompl
jmp
rep
adc
jp
xchg
scas
punpckhwd
jmp
daa
loopne
sbb
mov
push
insl
adc
or
mov
dec
add
cmpsb
jecxz
inc
lcall
xchg
mov
push
jne
sub
mov
pop
mov
sub
xchg
and
js
jno
pop
hlt
and
push
and
rcrb
push
orl
xorl
movsl
inc
pop
faddl
jno
cmp
jb
push
xor
aam
mov
mov
les
cmc
push
inc
jge
lcall
sub
adc
icebp
inc
test
lahf
dec
ret
and
and
fsubrl
jg
push
mov
pop
xor
cmc
cld
sub
xchg
test
ret
loope
inc
inc
scas
out
jae
pushf
mov
jo
jecxz
pop
pushf
jp
inc
xor
mov
les
mov
cld
popf
dec
push
shl
xchg
hlt
lods
loopne
mov
jecxz
nop
pop
xor
ja
inc
rcrl
clc
dec
insl
leave
add
pop
stos
pop
sbb
and
mov
pop
add
dec
imul
idivb
lret
in
mov
ret
nop
adc
inc
mov
lcall
mov
flds
test
and
hlt
push
mov
mov
ljmp
enter
mov
dec
sub
das
repz
std
pop
movsl
dec
push
jle
out
ja
mov
daa
adc
and
push
jne
xor
les
or
dec
or
or
jo
add
inc
fprem
fcoml
out
xor
out
mov
sbb
aaa
lahf
mov
or
test
jnp
fs
or
jg
out
sub
push
stos
pop
adc
xlat
dec
add
mov
scas
cli
sbb
ss
cwtl
xchg
mov
in
arpl
stos
xchg
aas
dec
mov
mov
add
icebp
mov
push
mov
movsb
les
xor
dec
shrb
movl
xchg
fisubrs
inc
out
xor
leave
call
in
out
push
sbb
add
test
cli
out
std
pusha
sbbb
mov
mov
add
mov
lods
inc
in
pop
incl
xchg
mov
and
push
int
neg
rorl
pop
jg
xchg
lds
cmpsb
dec
testb
in
pop
cs
adcl
data16
jp
daa
enter
add
or
test
jno
xchg
or
inc
mov
clc
cmpsb
mov
loop
inc
and
mov
inc
jo
repz
in
dec
and
test
sbb
jbe
in
int3
movsb
insb
pushf
xchg
mov
jnp
jno
mov
imul
mov
adc
mov
popa
fadd
pop
xor
fsubrl
pop
test
pop
into
sti
xchg
inc
cmp
dec
adc
mov
mov
movsb
sub
stos
lcall
pop
call
aam
pushf
inc
out
leave
test
pop
xchg
stos
and
inc
push
sbb
push
aas
cmc
push
and
movsl
mov
cmpl
aas
xchg
outsl
push
cmpb
adc
lahf
int
add
jmp
imul
idivb
add
jmp
sbb
das
adc
add
mov
mov
rcr
cmpl
hlt
pop
dec
xchg
lds
fdiv
add
cmp
les
add
mov
push
pop
inc
add
pop
mov
push
scas
mov
std
or
xor
mov
pop
in
subb
sub
lcall
leave
inc
cmp
loopne
dec
imul
push
mov
sbb
jp
les
cltd
rorb
mov
sub
aad
dec
fcomi
jnp
mov
cmp
movsb
lret
ret
enter
mov
jp
xor
lcall
sub
mov
dec
adc
out
lds
add
nop
mov
lcall
pop
and
in
cltd
push
mov
call
or
bound
test
push
arpl
jmp
fists
insl
cmp
les
pop
jo
push
leave
je
adc
out
dec
add
ret
sbb
cmpb
push
lock
cmp
cwtl
and
jl
mov
cwtl
dec
jecxz
nop
cld
pop
scas
inc
adc
outsb
xchg
push
mov
ret
call
xchg
mov
jmp
cld
add
jnp
aad
sti
mov
nop
dec
inc
rol
inc
stos
adc
lcall
adc
xlat
insb
inc
cmp
cwtl
sub
xchg
xchg
arpl
inc
arpl
mov
fsubrl
pop
adc
in
inc
enter
icebp
inc
dec
imul
cs
adc
in
iret
je
cmp
in
pop
sahf
mov
fwait
adc
loop
inc
xchg
push
add
nop
bound
xchg
cmp
sbb
ret
mov
and
dec
dec
inc
stos
lock
xor
inc
ret
or
sbb
mov
jle
mov
dec
pusha
inc
pop
inc
fs
rorb
in
and
or
sub
out
pop
movsb
jmp
sbb
icebp
push
jne
pop
xor
add
sbb
enter
cmp
dec
adc
add
push
push
and
in
add
sahf
xchg
iret
cmpsl
imul
pop
in
pop
shll
pop
cmp
cmp
push
add
aaa
stos
pusha
imul
add
sub
out
dec
shrb
popa
loop
fwait
sbb
pop
cld
adc
and
mov
pop
jmp
sub
sbb
adc
jne
mov
adc
scas
iret
sbb
test
add
test
add
dec
mov
push
insl
sub
lahf
loopne
pop
lret
stos
jae
mov
popa
mov
repz
int
push
stos
pcmpeqb
jge
shlb
es
es
xchg
sti
pop
add
pop
jbe
gs
inc
ror
stos
stos
fadds
hlt
andb
testl
jecxz
mov
add
push
or
pusha
adc
xor
test
subb
and
into
pop
xchg
adc
ja
sub
mov
aas
dec
rorb
loope
pop
xchg
imul
pop
cmpsl
jge
pop
mov
outsb
mov
push
jae
rcrl
inc
mov
outsb
push
xor
scas
or
inc
mov
add
sbb
sbb
pop
pop
lock
int
jne
and
rcrl
dec
pushl
les
add
add
test
repz
add
addr16
dec
mov
mov
sub
out
mov
xchg
pusha
add
mov
pop
clc
call
push
sbb
or
cmp
cmpsb
mov
cmp
sahf
xor
test
or
repz
push
lret
addr16
jecxz
jo
lahf
pop
and
pop
dec
stc
fcompl
inc
pop
mov
adc
outsb
aas
pop
xlat
push
jg
dec
fldenv
mov
adc
or
out
cs
xchg
mov
data16
jno
addr16
movsl
sub
js
pop
xlat
ja
mov
ffreep
push
push
inc
cs
sbb
rcrl
hlt
mov
adc
add
negb
ret
cmp
pop
jb
cmp
add
pop
scas
std
stc
in
vphaddbw
aaa
stos
jo
pop
repz
movsb
pop
bound
inc
fistpll
dec
aas
sub
push
mov
xor
movsb
pop
mov
mov
stc
add
mov
mov
push
nop
adcl
lret
push
cli
jo
xchg
das
roll
mov
xor
jle
xchg
adc
insb
sarb
fisubrs
cmp
add
imul
shrl
pushf
mov
push
movsl
push
adc
jmp
and
aam
out
dec
std
test
loope
cmpsb
jg
xchg
test
lret
mov
pop
call
sti
popa
pop
mov
imul
or
cmp
mov
cld
arpl
xlat
mov
cli
pop
into
xchg
lahf
dec
mov
jle
sbb
pusha
stc
xchg
xorb
enter
pop
cmp
or
in
and
jmp
lods
test
fcmovnu
adc
add
dec
jnp
loopne
shrl
lea
cmpb
jb
lds
mov
sbb
mov
roll
les
incb
dec
fadds
inc
xchg
push
out
inc
test
xchg
out
nop
dec
or
jnp
call
jle
push
pop
and
sub
cmpsl
dec
loop
popf
ljmp
cltd
inc
xchg
jp
in
jmp
fs
sub
int3
outsl
stc
dec
ds
dec
daa
pop
cmp
shll
stos
dec
mov
insb
scas
mov
sbb
jae
loopne
in
popl
cmpsl
out
ja
cmp
pop
outsb
mov
or
loopne
mov
imul
add
adc
jo
sub
adc
and
insb
loope
and
sub
jmp
push
jge
aaa
pop
or
jg
push
push
add
sbb
jb
add
lret
fdivrp
adcb
and
test
dec
dec
into
icebp
cld
push
and
test
sbb
test
push
jmp
cld
aaa
mov
dec
push
xchg
or
mov
ret
ret
lret
xchg
xchg
sbb
xchg
cmp
jp
push
dec
and
in
insl
xor
insl
push
sub
push
stos
insb
scas
jl
push
mov
push
inc
pushf
add
call
test
rcr
adc
mov
cmp
mov
mov
adc
loopne
pushf
xchg
dec
outsl
rcl
stos
mov
pop
inc
pop
dec
push
in
imul
mov
xchg
ja
xchg
shr
jmp
adc
adc
cmp
add
mov
ss
pop
insl
movb
mov
lods
cmpsb
dec
popf
pop
sahf
mov
xchg
mov
and
mov
sub
dec
test
scas
mov
and
mov
mov
cmc
ret
rcll
lods
pushf
push
xchg
dec
nop
or
cmp
sub
shrb
gs
dec
aam
leave
jg
xchg
je
jle
movsb
inc
jp
imul
sub
nop
popa
mov
cs
das
or
mov
in
sub
jns
mov
popw
mov
leave
aas
les
mov
mov
xchg
mov
call
fs
fs
ret
scas
mov
or
bound
addps
xor
cmpsl
and
add
jne
in
invd
pusha
mov
int3
mov
jns
fimull
movl
ret
repnz
subb
icebp
cmp
cwtl
sbb
xor
inc
jecxz
mov
lods
dec
lahf
xchg
nop
adc
or
fwait
pop
mov
dec
cmp
inc
xlat
pop
aam
out
cld
movsb
cmp
cs
dec
mov
mov
and
add
jnp
mov
ror
rcrb
push
jge
or
sub
xor
out
and
adc
lahf
rcrb
mov
pop
aad
scas
pushf
add
imul
cmc
fdivl
pusha
push
mov
es
inc
imul
int3
inc
negl
pop
sar
loope
or
push
nop
xor
or
cmp
xchg
cmpsl
or
iret
cs
mov
mov
sub
pop
push
movsb
cmp
mov
shlb
mov
push
or
or
jo
mov
cmp
shlb
mov
mov
push
and
movsl
jle
pop
mov
sbb
pop
in
jmp
cwtl
enter
leave
and
js
pusha
add
inc
xor
mov
sbb
cmp
mov
jno
outsb
dec
lods
movsb
xchg
stc
add
orb
lahf
push
lret
test
not
mov
ss
mov
pop
add
dec
sar
je
jge
jg
aaa
xor
sahf
test
getsec
or
into
shl
push
push
inc
jno
js
xchg
dec
out
cmp
or
ss
stos
icebp
push
jge
dec
or
lods
in
shlb
mov
sub
fstl
jno
xlat
mov
test
or
sbb
jge
push
add
adc
pop
insl
add
lods
lods
clc
int3
push
rcr
sub
add
shlb
inc
in
in
xchg
xchg
jno
xchg
test
das
or
mov
ret
inc
lahf
sbb
xchg
in
dec
sub
ja
ficompl
popa
cltd
xchg
mov
mov
xor
pop
ja
les
and
mov
imul
inc
loopne
out
fiaddl
enter
or
ja
ja
cmp
int
and
test
test
movsb
fcomi
sbb
dec
push
jp
sub
dec
push
insl
movsb
xchg
jae
inc
mov
je
add
les
repz
cmpsl
push
cli
aaa
popa
sti
add
inc
aas
icebp
mov
lods
imull
lahf
aam
pop
mov
mov
pusha
sbb
mov
mov
test
rcll
jne
lods
mov
mov
std
std
push
mov
popf
mov
xchg
out
adc
cmpsl
jl
arpl
js
mov
or
movsb
mov
mov
daa
xchg
inc
push
inc
adc
inc
data16
sbb
adc
pop
sub
xchg
cwtl
bound
repnz
pop
in
lods
in
sti
jmp
clc
sub
dec
push
xor
loop
sbb
mov
pop
sub
adc
jne
js
pop
push
enter
movsb
cmp
cmpb
shll
pushf
loop
push
mov
mov
nop
sub
fcomps
incl
mov
mov
jl
test
xchg
pop
bound
pushf
movsb
movsb
mov
jmp
and
cmp
movsb
push
into
stos
loopne
inc
mov
sahf
lea
mov
pop
push
adc
or
pop
inc
push
roll
lcall
add
aam
int3
add
vmwrite
outsl
sbb
mov
lds
adc
out
push
jge
das
push
or
cmc
hlt
inc
int3
jg
lcall
mov
mov
jg
sbb
js
and
add
pop
stc
int
sbb
bound
dec
sub
inc
sbb
add
fnstsw
loopne
mov
lods
mov
lret
add
adc
int
outsl
sub
sub
xchg
dec
mov
jl
mov
lods
push
push
jbe
sarb
mov
inc
jb
ljmp
test
push
arpl
lods
push
repz
repz
cmpsb
js
aaa
rorb
cwtl
fisttpll
jl
hlt
and
cmpb
jg
jg
or
dec
call
jle
ss
xchg
add
ja
lock
dec
push
clts
enter
inc
dec
or
sub
lret
leave
lcall
jno
jns
adc
mov
mov
outsb
inc
push
imul
fistl
push
pusha
and
dec
cmp
sub
pusha
mov
ljmp
pop
mov
mov
jae
shlb
xor
imul
cmp
dec
cmovl
jae
mov
cmp
dec
ret
sub
cmp
and
loop
inc
popf
loope
jo
jmp
jle
testl
into
les
cmc
pop
mov
add
orps
cmpsl
xchg
push
push
sub
aaa
popa
sub
ror
and
jge
jmp
ljmp
push
pop
jno
aaa
subl
mov
cs
mov
push
enter
aam
xchg
inc
dec
cmp
sub
into
push
mov
rorb
cwtl
adc
hlt
jecxz
ljmp
lcall
fimull
xchg
imul
imul
cld
sub
mov
push
in
or
nop
imul
dec
push
shlb
mov
pusha
test
out
loope
pop
cmp
ror
test
or
rclb
dec
pop
or
sbb
add
fsts
stos
inc
imul
xor
lea
xor
ja
push
fisubrl
mov
and
jno
inc
inc
push
sub
and
xchg
insb
outsb
cmp
pusha
cmpl
jl
xor
adc
pop
bound
call
sub
dec
jns
add
mov
adc
mov
xchg
cmc
gs
xor
cmp
inc
mov
jg
push
gs
sub
lods
in
sbb
push
insl
rorl
pop
lods
hlt
rolb
les
fldenv
scas
or
cltd
lods
rcr
iret
pop
adc
test
adc
jmp
addl
pop
add
popa
sub
das
pop
or
lahf
pop
xorl
enter
cmp
inc
adc
cmc
sbb
mov
pop
loop
xchg
lret
outsb
int
jo
enter
stos
out
hlt
enter
ljmp
dec
adc
xor
loopne
add
xor
pop
sbb
sti
js
add
sbb
popf
fs
and
inc
xchg
insb
cld
mov
fisttpll
lods
lods
sub
ja
fbstp
dec
js
dec
mov
xchg
inc
pusha
pop
mov
adc
pop
imul
inc
and
fimull
adcb
int3
test
arpl
jo
clc
out
pop
xor
mov
push
cmp
xor
push
icebp
ss
insl
mov
out
adc
inc
loop
ja
cmp
testl
rcll
push
mov
mov
and
or
jne
push
ret
mov
mov
repz
xchg
jb
ss
in
sub
lods
cmp
sub
daa
mov
or
rcrb
mov
xchg
bound
xor
sbb
cli
bound
xchg
aad
outsb
sub
nop
dec
jns
sub
lea
pop
mov
or
adc
ss
mov
out
pop
cmp
ror
addr16
repz
icebp
pop
inc
ret
shl
mov
sti
outsl
cmpl
add
cld
sti
leave
jg
ss
sbb
add
push
add
dec
movsb
add
loope
fcmovb
das
jb
xor
int
push
ds
daa
aas
insb
into
cmp
mov
sbb
mov
push
addl
inc
outsb
js
sahf
cmp
out
je
push
lds
shl
and
pushf
push
dec
jp
pop
mov
dec
adc
xor
or
ja
loope
push
add
jp
pop
cmp
jp
lret
mov
mov
std
add
cmp
pop
arpl
or
pushf
roll
mov
mov
dec
xorl
rcll
dec
inc
bswap
call
cwtl
fmuls
movsb
add
mov
pop
mov
ret
cli
lods
lods
lods
loope,pn
mov
xor
mov
cmpsl
cmc
mov
imul
mov
xchg
fistl
adc
sbb
xchg
and
sbb
cmp
int
pop
cli
mov
aad
push
aas
inc
push
idivl
add
lods
sbb
pop
jp
das
mov
stos
inc
into
xor
mov
lods
or
shlb
loopne
jge
into
fdivl
int3
inc
sbb
pop
cli
jbe
cld
xor
popa
or
or
sahf
clc
rcl
xchg
clc
pushf
aad
sbb
outsb
arpl
daa
in
pop
and
lcall
cltd
lret
and
fmul
shrb
xor
repz
insl
cld
pop
jmp
daa
xorb
loope
mov
jns
jge
test
sub
pop
jmp
mov
test
aas
or
insb
int3
jb
clc
mov
dec
mov
imul
les
fisubrl
jno
sub
ficoms
lea
mov
je
sub
arpl
sti
stos
aad
lret
xor
dec
or
cli
sub
mov
fldenv
fwait
xor
and
enter
aad
bound
adc
add
xchg
mov
mov
les
out
dec
out
bnd
dec
dec
or
loopne
imul
insl
cld
adc
cmp
inc
push
lret
xor
and
subl
cli
cli
mov
sub
daa
adcl
pop
pop
sbb
imul
lea
xchg
bound
and
rcll
ljmp
inc
push
sub
xor
ret
xchg
clc
in
gs
cmp
mov
push
cmp
test
push
jmp
pop
jb
jnp,pt
fsubl
inc
repnz
and
cmpsl
je
cmp
adc
outsl
mov
sbb
lret
ljmp
push
pop
loope
jnp
jecxz
jecxz
inc
push
mov
jo
enter
gs
outsb
orl
jo
lds
ret
mov
inc
cltd
mov
push
adc
push
popf
outsl
rcrl
test
pop
add
cld
adc
adc
add
xor
cmp
adc
or
stc
push
adc
jno
or
pop
shrb
push
xchg
stos
inc
movsl
rcrb
mov
ss
mov
pop
ficoml
jo
jno
jl
jecxz
jmp
sarl
test
pushf
inc
sbb
bound
push
pop
push
lret
add
jae
jmp
cmp
cmc
dec
outsl
dec
cwtl
enter
and
and
push
jle
test
xchg
mov
pop
mov
adc
cld
xchg
jne
hlt
pusha
outsb
mov
adcl
mov
adc
sbb
cmp
popa
lahf
mov
pop
jnp
cmp
xor
mov
cwtl
mov
movsb
fcompl
shr
mov
test
and
sbb
repnz
jmp
dec
or
mov
or
xchg
mov
push
pop
xor
lret
mov
aam
dec
lea
in
cmc
je
mov
or
scas
xor
jecxz
mov
roll
fninit
mov
mov
add
pop
test
fnstcw
xor
repnz
inc
add
jb
and
lock
add
pop
cmp
add
sbb
jge
aas
rolb
sbb
jle
lods
xchg
mov
mov
jl
push
aas
sbb
sahf
mov
cmp
inc
dec
jge
pop
js
std
push
popf
mov
imul
rcr
and
lcall
lds
pushw
jge
pop
ja
mov
cmc
xchg
cmp
enter
mov
int
je
add
fildl
xchg
sbb
xchg
scas
push
inc
sysexit
jecxz
out
testl
mov
sbb
cld
cli
mov
mov
mov
dec
iret
or
sbb
mov
cmc
xchg
add
in
nop
les
jae
xchg
cmp
pop
fwait
movsl
sub
in
cmc
fmull
out
movsb
sub
sahf
jl
stos
jmp
cmc
sbb
ss
mov
mov
dec
push
cmc
test
loopne
sub
lret
jae
adc
dec
fwait
imul
xchg
insb
push
mov
enter
movsl
jbe
filds
jp
in
loop
pop
pushf
jle
shrb
mov
leave
mov
cmpsb
dec
out
pop
inc
negb
inc
int3
fdivs
test
mov
or
test
add
mov
xor
enter
cs
pop
jns
dec
add
jp
in
pop
cmpsl
leave
lcall
add
bound
jle
cmp
cmp
lods
xchg
dec
sub
dec
push
xchg
push
dec
xor
mov
inc
ljmp
loopne
or
mov
xchg
call
dec
loop
inc
dec
add
mov
imul
es
sub
lcall
insb
pusha
or
aad
stos
in
aad
fs
pop
dec
negl
pop
les
jle
lods
and
inc
pop
scas
xchg
pop
aas
out
int
adc
adc
add
adc
sub
daa
pop
cmp
imul
pop
jmp
push
push
inc
aaa
or
lret
fidivs
imul
jnp
filds
mov
rorb
lret
pusha
and
insl
sti
insl
mov
stos
fnsave
popw
cs
sbb
das
leave
inc
scas
mov
pop
pop
inc
out
fists
gs
cli
jnp
push
adc
or
adc
scas
in
push
call
sub
in
in
add
mov
rclb
insl
sub
in
cld
stos
lret
xor
sti
push
sub
bound
daa
xchg
xor
in
pop
dec
pop
dec
push
sub
or
test
stos
jg
ljmp
shr
mov
iret
mov
cmp
xchg
and
inc
icebp
imul
dec
data16
ljmp
std
pushf
xchg
mov
out
daa
nop
dec
pop
cmp
hlt
mov
jp
aas
mov
jo
sub
or
mov
inc
xchg
shr
aaa
dec
inc
addr16
out
mov
fistpll
fs
repz
push
mov
dec
bound
and
push
nop
pop
imul
ja
insb
mov
aad
pushf
neg
lcall
imul
xlat
add
jnp
mov
pushf
push
and
sbb
cmp
repz
aaa
clc
or
pop
pop
std
jmp
xor
aas
or
mov
cmp
push
fsubp
jg
xchg
xor
fcoms
mov
mov
inc
sahf
fidivrl
pusha
sub
mov
pop
and
xchg
dec
inc
cmc
sbb
stos
test
pop
scas
jnp
push
xchg
mov
cmp
pop
ja
or
sti
clc
lock
mov
clc
inc
mov
push
fimull
inc
xchg
test
sbb
in
cmp
pushf
push
add
test
imul
rcll
testb
decl
and
movsl
cmpsb
enter
or
and
js
sarb
mov
scas
push
ds
in
xchg
push
mov
dec
xlat
mov
xchg
pop
sbb
mov
mov
ret
insb
fcmovbe
or
or
inc
mov
psadbw
xchg
std
xchg
leave
mov
ja
jnp
daa
mov
das
adc
icebp
mov
imull
sbb
lret
mov
mov
xor
xchg
mov
cmp
mov
jg
cmp
sbb
js
mov
fiaddl
pusha
cli
adc
sbb
stos
cwtl
aad
or
notb
mov
mov
lgs
fwait
mov
ficoms
mov
daa
sbbb
or
xorl
sub
inc
fwait
jb
xchg
scas
enter
jle
mov
adc
adc
adc
shrb
or
mov
call
pusha
insb
mov
outsl
ret
aam
push
jbe
adc
aas
mov
xor
sub
and
dec
clc
push
jae
addr16
sti
in
push
inc
ja
popf
out
pop
addl
jae
mov
loope
outsl
sub
sbb
pop
into
add
push
out
lret
pop
dec
fistps
mov
pushf
xrelease
cmp
xor
popf
and
or
mov
lods
sbb
out
add
mov
popf
xlat
shl
and
loope
or
or
pusha
cld
pop
mov
add
mov
jmp
adcb
fdivp
sti
roll
dec
dec
pop
addr16
dec
int
dec
dec
scas
ja
jg
sbb
push
xlat
aaa
std
sub
inc
inc
and
leave
xor
repnz
leave
sub
lds
in
add
fldcw
imul
pusha
int3
fidivrl
jb
pop
mov
ficoml
jmp
aas
mov
push
cli
jns
sub
push
ret
lea
pop
pop
push
ret
clc
mov
push
cmp
pop
push
push
out
jb
test
call
push
push
mov
mov
pop
push
imul
insb
loopne
lods
inc
and
mov
jl
pop
mov
dec
dec
enter
and
pop
stos
jecxz
dec
outsl
mov
add
fnstenv
sahf
ljmp
ja
mov
mov
imul
add
pop
dec
pop
int
out
dec
fucomp
jmp
popf
lea
xchg
dec
lods
pop
sbb
arpl
in
adc
and
iret
xor
mov
mov
and
push
std
popa
stos
fwait
xor
jae
xor
andl
push
ror
dec
nop
add
dec
mov
add
mov
xor
insl
xchg
push
sub
adc
icebp
js
cmp
jae
int
fnstsw
mov
jnp
or
xchg
mov
leave
cmp
in
mov
cli
cs
jns
sub
shl
pop
stos
cmp
sahf
xchg
mov
pop
xorl
movsb
pop
pop
scas
xor
cltd
test
sar
popf
pop
test
int
in
sub
scas
outsl
imul
out
loope
jg
push
enter
jp
adc
imul
dec
xor
jp
inc
fidivrs
jne
and
xor
loop
call
test
or
ret
push
lret
pushf
xor
pop
inc
in
fsubs
lahf
scas
icebp
inc
sub
std
inc
add
stos
jns
scas
adc
call
xor
dec
jp
insb
cmp
test
xchg
scas
aas
jo
bound
add
or
mov
ljmp
loop
xor
add
xchg
pop
adc
mov
xor
or
push
movsl
test
mov
les
imul
and
data16
sub
sub
pop
sub
and
inc
hlt
sub
aam
fdivs
mov
cmp
aas
sub
mov
push
nop
shl
mov
fldl
jl
mov
push
add
pop
and
test
shrl
sbb
cmp
outsb
lods
sub
test
fstp
sub
sbb
insb
imul
imul
cmpsb
push
add
pop
scas
adc
divl
int
data16
xor
xchg
inc
jl
mov
mov
push
add
pop
popf
mov
xor
lret
pushf
imul
pop
imul
jnp
dec
rcr
test
in
inc
fcompl
dec
jno
lcall
jle
pop
mov
sbb
ficomps
mov
ficompl
clc
dec
inc
sbb
push
xor
fisubs
ss
mov
dec
fucomip
ror
or
or
ja
jne
test
mov
pop
mov
dec
inc
scas
stos
mov
cmp
sub
adc
jle
mov
xchg
pop
sub
stc
push
cmpsl
mov
in
hlt
shlb
mov
mov
popf
cmpsb
inc
or
sbb
test
daa
enter
or
sti
stos
jle
mov
mov
pop
mov
sbb
cli
daa
movsl
imul
push
mov
orl
jns
adc
bound
mov
and
add
mov
adc
mov
or
in
and
add
sub
mov
rcrb
call
cltd
cmp
xlat
or
int3
shrb
xor
in
lock
insl
outsb
rcll
cmp
stc
dec
lret
jne
inc
pop
pushf
mov
mov
xor
lods
int
dec
lret
dec
rorl
mov
sub
outsb
jecxz
dec
cmp
sbb
in
int
gs
or
sbb
push
or
shll
mov
or
enter
mov
in
push
mov
mov
cmp
or
repnz
push
mov
sbb
scas
add
cmp
insb
mov
int
inc
popl
adc
int
out
pop
push
popa
test
decl
aam
cld
loope
xchg
mov
aaa
jecxz
add
in
mov
mov
xchg
movb
icebp
mov
data16
test
cmpsb
cmp
or
lds
ret
add
clc
and
outsl
push
fmul
add
mov
dec
out
fnsetpm(287
sahf
push
int3
dec
pop
mov
push
rorb
ret
decl
mov
iret
fnstsw
movsb
jg
jns
jns
push
jno
push
aas
mov
imul
push
out
fnstsw
pop
aas
filds
inc
mov
push
push
push
mov
stos
aas
cmpsb
pop
jns
and
adc
push
cld
frstor
mov
push
fdivrl
cmp
xor
push
xchg
es
add
imul
lret
and
sub
dec
addl
mov
aas
adc
in
cmp
lcall
movsb
cbtw
dec
rolb
push
loope
push
cmp
xchg
stos
mov
daa
arpl
add
or
lahf
and
mov
xchg
sbb
cmpsb
data16
subb
inc
and
sahf
hlt
jge
ja
out
fnsave
ss
adc
sbb
push
fiadds
jno
adc
cmp
imul
mov
das
repz
xchg
jns
lret
pop
cmc
jl
or
rolb
out
das
mov
sub
jecxz
or
xlat
scas
and
ss
jb,pn
jmp
mov
popf
rcr
lods
mov
jmp
std
cmc
outsb
cs
or
mov
pusha
jg
sbb
mov
xchg
sbb
pop
xlat
xchg
ss
push
stc
mov
and
pop
ds
mov
stos
pop
xor
mov
push
jge
shll
fnstsw
jne
or
pop
ds
movsl
cmp
andl
sub
dec
or
sub
push
sbbl
out
push
enter
ljmp
lock
out
mov
ficompl
iret
cmpsl
push
incb
test
and
push
aas
mov
inc
mov
pushf
add
sbb
movsb
sbb
xor
rclb
mov
out
incb
and
negl
rol
pop
lea
imul
xlat
ds
adc
dec
sarl
imul
fisttpl
shlb
in
mov
mov
jl
add
pop
loope
pusha
pop
inc
arpl
fld
or
inc
xchg
int
movsl
jmp
cmp
inc
mov
pop
cwtl
dec
movsb
imul
call
xor
adcb
fidivrs
sti
jbe
pop
adc
and
inc
mov
mov
aas
popf
adc
cmp
cmpsl
mov
popa
inc
fs
push
mov
dec
mov
xchg
mov
mov
loopne
inc
add
adc
outsb
mov
inc
fisttpll
mov
sbb
sub
xchg
push
xabort
mov
push
aad
sub
loope
pop
xchg
mov
out
xchg
fldz
sbb
lret
scas
xchg
cmp
pop
imul
sub
ja
lods
push
inc
imul
test
mov
out
sub
push
ret
jae
dec
roll
jns
lret
shlb
jne
rcr
jle
push
lcall
push
aad
bnd
pop
inc
or
imul
inc
jl
sbb
mov
jae
dec
and
sarb
lahf
push
pop
cmp
adc
xchg
or
xchg
pop
inc
sbb
xor
cld
xchg
push
ret
mov
lods
shlb
js
push
jmp
repz
pop
aaa
cmp
movsb
and
and
movsb
mov
sub
std
push
dec
insl
push
imul
mov
sub
cmp
fisubrs
xchg
test
lods
fldenv
sub
inc
sbb
ljmp
pop
mov
mov
testl
push
roll
xor
mov
lcall
jne
xorl
mov
sub
sub
cmpsb
push
aad
sbb
movsl
xchg
inc
ljmp
cmp
dec
cmc
mov
add
xorb
xchg
les
cmp
movsb
cwtl
xchg
enter
inc
das
clc
push
lret
into
cmpsl
repnz
add
stos
sub
sub
loop
call
cmp
insl
hlt
and
jb
push
fnstcw
js
ret
stc
bound
leave
aas
mov
inc
add
in
pusha
js
sahf
mov
stc
scas
push
jmp
in
pop
push
aas
sub
shlb
add
cmpsb
jmp
inc
push
out
orb
test
pop
mov
cmp
xor
mov
cli
enter
ljmp
jno
or
or
repz
mov
sbb
mov
dec
cltd
fld
scas
fdivrs
daa
mov
rorb
or
repz
xchg
sub
lret
cli
aad
in
hlt
sub
add
imul
xor
cwtl
sahf
dec
mov
lock
mov
add
xchg
sbbb
fistpll
lds
mov
dec
lods
fwait
lret
xchg
das
jmp
daa
mov
fdivrs
or
mov
ljmp
jno
cmc
mov
repnz
cltd
dec
call
inc
imul
cwtl
jge
shll
adc
xor
mov
sbbb
jmp
inc
xchg
sbb
stc
sbb
je
pop
daa
in
ljmp
jp
repnz
ret
in
je
scas
mov
lret
xchg
mov
sbb
pop
lea
add
mov
js
out
inc
lcall
scas
ds
enter
adc
shll
mov
inc
xchg
ljmp
mov
push
fdivs
pusha
jb
cmpb
out
push
pop
test
cmc
setbe
jne
jmp
pusha
or
icebp
ret
mov
out
ficomps
jge
mov
jl
adc
xlat
push
je
jmp
stos
pop
sbb
jmp
mov
lods
aaa
inc
push
jmp
dec
xchg
fimuls
test
add
or
es
xor
sub
xchg
icebp
push
push
mov
xor
xor
fsubrl
lock
mov
cmp
loopne
cmp
add
sbb
enter
ds
enter
mov
fcomp
pushf
mov
loopne
or
xchg
adc
jnp
std
into
cmp
lea
sbb
out
test
scas
fisubs
in
inc
pop
ja
pusha
dec
nop
stos
add
cmp
cld
xchg
push
in
stos
lods
dec
xor
and
dec
fnstsw
das
dec
ss
sbb
mov
movsl
adc
dec
es
cmp
inc
mov
adc
jecxz
inc
out
push
mov
mov
jb
mov
pusha
repnz
cmpsb
pop
sub
into
lds
mul
mov
aad
mov
mov
aad
sbb
pop
mov
xchg
dec
jecxz
or
hlt
fidivrl
jns
insl
sbb
in
test
shll
pop
mov
ljmp
mov
mov
arpl
xchg
xor
lods
adc
mov
das
fsubp
pop
inc
xchg
cld
adc
mov
mov
sub
mov
fimuls
ss
pop
xchg
repz
dec
in
inc
inc
add
ds
pop
insl
fildl
pop
cmp
pop
mov
jp
int
pop
js
fwait
pop
xchg
inc
and
mov
mov
es
lock
ret
adc
loope
jg
loop
mov
leave
jg
adc
into
add
fs
cmp
fwait
repnz
lock
in
or
pop
xchg
xor
add
sahf
or
cmpsb
cmp
cmp
cmpl
dec
push
fimull
dec
dec
stos
jnp
fdivs
lret
mov
mov
mov
loop
add
pop
pop
ljmp
push
lret
inc
xor
outsb
popf
jge
mov
sbb
int3
pop
xchg
cmp
mov
test
mov
add
popf
add
hlt
call
mov
mov
lret
enter
rcrl
inc
inc
mov
in
jg
cs
andb
push
test
mov
dec
cmpsl
and
xor
pop
xor
mov
mov
xchg
mov
fwait
enter
dec
in
xlat
mov
std
sub
cmpsb
mov
add
pop
sbbl
mov
fwait
and
jge
sub
dec
adc
xchg
rol
bound
ja
repz
int3
cmp
shlb
dec
repz
inc
insl
bnd
sbb
add
fisubrs
addb
addl
ret
loopne
outsb
movsb
push
fcompl
ftst
das
add
ja
mov
lahf
mov
jg
or
fdivs
pop
inc
dec
add
cmp
push
gs
xchg
out
scas
shll
fs
leave
mov
mov
jbe
sahf
in
es
sarb
les
xchg
lahf
and
mov
mov
mov
lcall
fcmovne
and
dec
out
dec
xor
movl
mov
jo
mov
dec
hlt
leave
aad
xor
mov
out
loopne
mov
xlat
mov
lahf
cmp
dec
and
aas
push
push
xchg
cmpb
or
out
pop
jns
mov
call
shl
stos
xchg
pop
add
rcrl
cs
or
lods
pop
fdivrs
xchg
int
xchg
xor
les
fildll
jo
pushl
xchg
sub
jmp
jne
xchg
push
in
or
negb
mov
outsb
lret
mov
xchg
dec
pop
int3
fwait
jnp
cld
lods
repz
insl
push
or
push
adc
mov
mov
push
cs
cli
xor
pop
pop
loope
int
call
lret
insw
adc
push
xor
cmpsb
sbb
jg
pop
mov
pop
xor
data16
xorb
push
jae
and
int3
mov
aas
push
movsl
into
pop
test
mov
movsb
lcall
int
fdivrl
loope
pop
scas
jnp
stos
loopne
dec
sbb
popf
insb
push
mov
fcoms
jl
ret
movsb
mov
jecxz
stc
dec
sub
sub
mov
pop
je
dec
clc
sti
mov
inc
out
nop
mov
popa
and
pusha
mov
push
cs
pop
xchg
insb
movl
adc
stc
jo
push
lret
cmp
and
mov
test
shll
or
jmp
inc
xchg
loop
mov
lret
ss
and
xor
sahf
jne
xchg
add
repnz
mov
cmp
scas
xchg
movsl
inc
fcomps
push
push
mov
or
cmpb
or
mov
mov
mov
and
adc
jecxz
lret
mov
or
scas
inc
sub
int
outsl
xor
fistpll
fstps
cmp
rorb
insb
in
add
jno
adc
push
xchg
fnstcw
fdivr
jo
int3
ds
insl
cmp
xor
ret
popa
xchg
mov
or
fwait
das
mov
jne
lret
cli
fmull
movsb
mov
mov
inc
ficompl
inc
loope
pusha
clc
mov
cmp
mov
fidivrl
pop
jge
or
loop
sub
std
ljmp
adcl
lahf
adc
pop
cld
pop
pop
inc
xchg
sub
fisubrl
out
adc
push
inc
test
les
xor
mov
mov
cmpl
out
ja
and
and
inc
or
insl
sbb
test
insl
cmp
inc
pop
jb
aaa
daa
inc
xor
or
mov
cli
push
jg
vandnpd
rorl
adc
pop
lds
loop
cmp
jno
pop
fildl
add
xlat
cmp
and
fstps
cmp
inc
push
push
lahf
rcrl
mov
sbb
mov
flds
jl
icebp
stos
pop
xchg
jge
dec
mov
pusha
test
mov
ret
cwtl
mov
icebp
add
mov
lods
sarb
test
lds
xor
xor
lds
or
jae
aam
cmp
push
movsl
test
sub
mov
mov
insb
nop
repnz
sbb
mov
inc
imul
fs
and
outsb
clc
in
jmp
pop
cmpsb
lds
std
add
je
pop
test
sub
add
mov
stc
ss
adc
pop
xor
sbb
inc
js
bound
mov
push
fimuls
jge
inc
icebp
test
rcl
lcall
push
and
iret
inc
pusha
lahf
inc
add
cmp
dec
sti
sub
sahf
frstpm(287
fimuls
push
push
sub
popf
inc
cmc
int3
mov
aad
out
push
xchg
pop
sar
movsl
mov
gs
mov
push
xorb
in
testb
addl
push
pop
mov
jns
adcb
mov
addr16
jmp
int
movsl
iret
pop
movsl
xlat
sbb
cwtl
dec
mov
dec
int
fsubs
xlat
adc
movsl
mov
stos
inc
fnstenv
faddl
or
aaa
std
stc
adc
sub
add
and
push
loope
push
sub
cld
arpl
les
int
dec
mov
adc
mov
js
ja
sti
dec
into
mov
mov
xor
mov
xchg
inc
gs
jp
cmpsb
test
mov
shrb
inc
push
fidivl
cmp
mov
push
in
cmp
imul
xor
aas
fwait
lods
dec
adc
push
jmp
sbb
xor
cmpsb
addb
daa
push
add
cmp
inc
jo
lock
fnstsw
enter
aam
or
insl
dec
adc
test
lea
push
sub
cmp
push
mov
mov
fisttps
test
push
out
cmp
ret
lret
sub
jle
daa
mov
pop
cmpsb
push
arpl
pop
pop
ljmp
or
push
push
repnz
add
daa
fldl
push
dec
inc
add
adc
outsl
hlt
push
sub
loop
mov
jns
push
scas
xor
imul
clc
mov
push
dec
movsl
lods
es
fistpl
or
scas
mov
sub
std
xchg
sub
rorb
outsb
xchg
icebp
icebp
mov
mov
inc
mov
outsb
rclb
add
stc
loope
and
cmp
js
std
mov
and
mov
pop
pop
fstpt
pop
dec
test
inc
popa
jbe
test
test
iret
or
xchg
inc
lea
ja
fxch
cld
ret
push
mov
pop
and
xor
rolb
mov
lret
bound
test
fwait
mov
xor
or
in
punpckldq
fwait
push
lret
xchg
inc
aaa
cs
outsb
inc
sub
movsl
movsl
sbb
stc
push
dec
in
ds
mov
dec
cmp
sbb
adc
jb
inc
xlat
cmp
std
in
or
jmp
jbe
sti
mov
dec
loop
mov
jp
pop
push
push
xlat
arpl
push
dec
shll
mov
cmp
mov
cwtl
cmp
test
or
push
mov
leave
dec
inc
push
cmp
adc
fidivrl
mov
push
call
int
adc
int
jmp
data16
popa
push
dec
mov
pop
and
dec
cmp
test
addr16
and
fld
nop
mov
add
sub
jbe
xor
int3
in
push
rol
lods
imul
mov
sub
nop
enter
popf
add
and
hlt
push
cmp
lcall
nop
out
sub
out
cmp
xchg
imul
insl
lods
adc
pop
push
popa
ds
jae
aas
imul
mov
into
data16
movsb
dec
andb
mov
add
cmp
mov
mov
lds
clc
inc
add
imul
iret
ret
sti
inc
jns
enter
ljmp
stos
scas
sarb
or
shl
push
shrl
cmp
sub
repnz
inc
stos
roll
shlb
mov
jbe
jbe
lods
xchg
enter
dec
jp,pn
fmull
mov
test
push
push
lds
cmc
jmp
jp
jg
cmp
sub
push
ret
enter
popf
dec
mov
shlb
popa
mov
shlb
aas
scas
push
jbe
lods
sahf
scas
aad
push
xchg
fisttpll
pop
xchg
jbe
cltd
out
jl
pop
sbb
mov
je
xor
in
roll
mov
jp
ret
faddp
lret
stc
imul
pop
mov
dec
sub
pop
stos
repnz
sti
xor
incl
fldl
mov
mov
cmc
add
inc
mov
inc
or
icebp
pop
xor
mov
ljmp
adc
jle
inc
push
sbb
add
hlt
inc
inc
add
ljmp
rorb
aas
scas
mov
jo
stos
addr16
push
mov
stc
lds
sub
cmp
pop
lahf
movsl
jbe
int3
adc
cmp
movsb
pop
jg
fsub
mov
sbb
in
jo
ljmp
and
dec
fcomp
xor
cmpsl
adc
in
int
ret
imul
push
fisttpll
pop
jl
sub
mov
push
movsl
fisttps
cmp
and
stos
test
cmpsb
cmp
jmp
test
mov
or
xor
pop
jno
call
lods
lods
les
lcall
fsubrp
dec
add
int3
test
ret
outsl
std
imul
sub
pop
sti
adc
dec
scas
mov
fisttpll
loope,pn
add
sbb
in
inc
cmp
and
xchg
pop
sbb
adc
std
add
mov
test
cld
inc
shr
sahf
ja
sbb
icebp
add
add
cmpsl
lret
flds
or
jo
rorb
mov
jb
fldt
fbstp
js
cltd
mov
out
pop
adc
inc
xchg
out
mov
movsb
add
jbe
mov
jo
sahf
xlat
jge
ret
mov
lds
hlt
jg
into
je
ss
cs
and
mov
dec
xor
movsl
push
test
push
out
pushf
mov
add
and
xor
imul
mov
inc
mov
pop
pop
inc
inc
lds
xorb
fsubrl
rcll
pop
pop
rclb
mov
sub
mov
andl
mov
xchg
std
sub
mov
mov
repnz
add
xchg
cmp
int
sub
sbb
dec
xchg
ja
pop
xlat
xchg
fidivrs
cmp
or
mov
jb
push
adc
xchg
addr16
xor
mov
les
lret
mov
xchg
cmp
sub
or
aam
push
nop
cmpsb
insl
mov
int
ret
push
or
out
xchg
sub
adc
in
push
mov
test
insb
int
nop
aad
rcrl
loop
jl
mov
sub
in
test
ja
mov
xorb
scas
sti
adc
leave
pushf
roll
test
sub
loopne
fs
mov
mov
ljmp
movsb
and
cltd
adc
sub
aad
cmpsb
out
mov
addr16
in
int3
mov
sub
mov
inc
xorl
mov
lea
ret
aad
aam
pop
mov
insb
in
pop
add
adc
inc
dec
and
push
mov
pop
fdiv
jmp
in
cld
inc
cmp
mov
mov
insb
ret
dec
adc
mov
es
push
or
cmc
enter
stos
addl
adc
cmpsl
lret
pusha
jns
adc
imul
aaa
iret
add
mov
cld
in
hlt
nop
outsl
lret
mov
mov
loope
xchg
or
jecxz
dec
movsb
mov
mov
lea
out
jbe
jmp
icebp
xchg
sbb
shrb
mov
mov
in
arpl
sub
xor
popl
mov
insb
jbe
repz
test
pop
and
cmc
pop
outsl
adc
push
mov
mov
inc
xchg
test
and
iret
stc
in
pop
nop
cld
test
lods
bound
repz
push
jg
std
cmovns
add
imul
push
dec
ret
xchg
outsl
fisubs
icebp
fs
pop
fsts
les
jns
sbbb
or
jns
cmp
xchg
sbb
pop
mov
push
imul
imul
cmp
pop
cs
mov
out
les
xchg
inc
lcall
pop
adc
test
in
into
ret
pop
push
ja
push
das
or
lods
pop
movb
mov
dec
stc
icebp
inc
int3
pop
test
out
inc
movsb
bound
xchg
aas
pop
insl
mov
xor
dec
sbb
imull
shufps
xchg
jg
aam
sub
add
rcrb
or
add
jle
dec
xchg
pop
out
in
fs
test
and
or
push
xchg
lcall
sbbl
dec
cld
rcll
stc
arpl
jo
mull
and
inc
mov
push
sub
xchg
sbb
pop
xchg
dec
xchg
das
or
jmp
mov
cmp
mov
bound
sbb
das
leave
int3
mov
and
shr
mov
mov
jo
xor
roll
lods
hlt
xor
dec
jno
vzeroupper
and
test
jno
hlt
mov
pop
sti
outsl
gs
lret
ljmp
fcoms
fsubrs
add
into
fldcw
mov
xor
inc
mov
and
lahf
push
add
sub
int
call
dec
jns
mov
std
and
xor
jb
add
pop
cmp
mov
testb
mov
rol
push
ror
punpckldq
ficoml
or
pop
fsubs
mov
fiaddl
jno
in
data16
mov
sbb
hlt
outsl
rolb
mov
xor
nop
push
sar
out
nop
jae
add
into
sbbb
mov
mov
adcl
mov
in
mov
xchg
mov
xchg
sti
adc
iret
dec
daa
rcr
das
inc
mov
pop
dec
jg
pop
loop
push
pop
jle
fstpt
or
sub
add
mov
push
xor
jmp
adc
stos
xchg
mov
adc
sub
nop
add
dec
scas
inc
sti
sahf
arpl
js
lods
pop
ffreep
mov
stc
cmc
cmp
in
mov
mov
adc
add
clc
rcll
push
add
ss
mov
adc
jge
sahf
movsl
xor
repz
cmp
cmp
roll
and
xor
cmp
insl
cmp
ja
in
shlb
outsl
inc
pop
cs
or
aas
in
pop
popa
add
xchg
xchg
adc
ret
mov
out
and
rclb
out
stos
pop
adc
repnz
xchg
imul
iret
arpl
rcr
aad
dec
push
in
dec
idivl
mov
test
and
jbe
cltd
mov
subl
xor
outsb
int3
sub
push
push
icebp
mov
xor
sub
pop
pop
es
sahf
hlt
je
or
jo
sti
jmp
rclb
jg
lds
and
add
xchg
cwtl
lods
cmpsl
mov
cmp
bound
mov
push
repz
imul
or
lock
push
sbbl
add
pop
dec
cmp
sbb
hlt
pushf
jae
into
ja
call
popa
leave
icebp
jp
es
dec
push
fstpt
jmp
or
dec
jno
cmp
je
and
lcall
inc
inc
mov
or
nop
or
dec
es
push
jmp
jb
sahf
nop
cld
out
mov
mov
cs
aad
cmp
jecxz
aam
sarb
cmp
ficompl
inc
leave
aas
xor
mov
mov
sbbl
cmp
jmp
lea
loop
mov
push
cmpsb
movsl
sti
fistpll
pop
imull
mov
stos
bound
xlat
xchg
adc
je
push
mov
mov
mov
pushf
mov
mov
xchg
out
cmpl
sbbb
lahf
or
push
subl
pop
adc
xchg
out
xor
push
xchg
dec
lret
xor
cmp
sbb
xchg
popf
adc
adc
sub
fists
lock
dec
out
push
out
movsb
pop
inc
mov
lahf
push
xcrypt-ofb
cmpsl
ljmp
ret
addr16
leave
sbb
les
mov
ficoml
mov
cs
mov
popf
xchg
adc
cmp
or
test
enter
adc
lods
mov
push
jne
and
cld
ret
ds
aaa
add
out
dec
mov
mov
dec
pop
rcll
or
cmpsb
and
mov
cmp
adc
clc
leave
std
into
pop
loop
lcall
inc
leave
das
push
mov
insl
insl
pusha
or
and
cmp
std
xor
pop
stc
cmpsb
push
repz
fistpll
inc
xor
dec
sub
stos
pop
push
cmc
std
test
sti
sar
cmpsl
shll
cmpsl
push
or
mov
xchg
pop
sub
jae
add
xchg
repnz
pop
cwtl
lock
lods
enter
add
push
fucomip
and
mov
dec
repz
dec
push
adc
pushf
mov
sti
push
out
mov
push
adc
movsl
sbb
adc
lahf
jp
add
or
cmpsb
xchg
stos
mov
push
mov
in
xchg
negb
sub
dec
call
jmp
mov
ret
jg
add
mov
pop
cltd
and
adc
dec
inc
pop
cmp
dec
xchg
xor
mov
and
sub
lret
clc
orl
sarl
and
push
adc
lods
pop
sti
or
xchg
pop
fisubs
lods
lock
mov
xor
mov
frndint
mov
and
lcall
fstl
adc
out
or
jno
aad
sahf
rorb
data16
sbb
outsb
movsb
xor
ss
lods
aas
sub
fbld
pop
or
mov
leave
dec
mov
rcrl
lret
inc
out
xor
or
xchg
mov
popf
sub
mull
cmp
in
ss
notl
or
je
shll
inc
aas
xchg
dec
stos
pop
nop
movsb
ret
call
ljmp
in
push
ret
mov
or
mov
test
test
cld
lods
enter
enter
out
iret
adc
inc
pop
shl
jecxz
mov
xor
push
pop
push
inc
dec
mov
pop
or
inc
std
sub
sbb
out
lds
outsl
jle
cmp
fistpl
rolb
cs
dec
pop
je
test
bound
pop
mov
shll
into
cltd
rorl
push
inc
adc
cmpsb
add
pushl
imul
gs
xchg
adc
mov
sbb
test
sahf
arpl
cmp
push
imulb
sub
test
pop
mov
ljmp
in
jmp
insl
std
and
daa
iret
pop
push
test
and
jg
mov
jle
and
jge
pop
push
mov
pusha
pop
mov
repz
cmp
fidivrl
sub
sti
fadd
fadd
mov
ljmp
mov
aad
adc
or
and
aaa
mov
cmpsl
decb
scas
repnz
test
cli
xor
push
cmc
add
mov
test
lcall
fsubrl
adc
daa
test
jmp
rcll
sub
jno
or
mov
pop
pop
mov
cmpsl
fldt
stc
repz
push
mov
xor
je
push
jo
jb
out
sub
add
mov
sub
mov
mov
xor
mov
xchg
dec
in
add
fadds
inc
cltd
push
pop
popa
into
fnstenv
inc
stc
testl
in
jnp
dec
pop
dec
movsl
pop
jge
enter
movsl
sahf
test
cmp
cmp
stc
adc
mov
fsubl
shll
inc
lcall
imul
sbb
dec
add
mov
inc
pushf
mov
mov
sti
or
mov
stos
jl
mov
sub
add
or
xorl
inc
ljmp
enter
je
rcrb
mov
jbe
sbb
xor
inc
lds
mov
cmp
js
mov
push
loop
sarb
sbb
xchg
or
pop
das
cmp
or
push
mov
sub
dec
and
jecxz
test
cmp
cmp
ljmp
mov
cld
xchg
mov
js
aas
scas
loop
xor
cld
fxch
ret
mulb
fnstcw
add
xchg
repz
sbb
xchg
mov
bound
repz
bound
xchg
cmp
lock
cmc
cmp
nop
push
in
mov
das
adc
add
sub
dec
cmp
push
pop
xor
pop
mov
fnstcw
mov
decl
imul
ljmp
cmp
sbb
sti
idiv
adc
shrl
cltd
cld
cmp
out
loopne
mov
sbb
clc
pop
mov
mov
aas
jge
ds
loope
lods
ret
scas
daa
stos
mov
sub
and
out
fs
ja
xor
sti
fbld
push
aaa
inc
mov
repz
xlat
insl
push
loopne
js
les
insb
sub
add
sti
enter
jne
jae
out
xchg
inc
mov
popf
dec
jo
loop
xchg
pop
fnstsw
les
inc
xlat
push
ss
mov
fidivs
pop
outsb
int3
add
stos
lods
sub
sub
mov
rcrl
add
fildl
bsr
repnz
shll
push
fwait
movsb
cmp
and
imul
adc
xchg
dec
xchg
sbb
xchg
in
popa
pop
push
inc
xchg
sub
mov
sub
js
movsb
pop
stc
cli
inc
pop
inc
std
push
add
sub
xchg
lds
push
xlat
sub
sti
rcrl
clc
repnz
adcb
jns
sub
les
adc
xor
aaa
jge
sti
int3
mov
and
mov
dec
xorl
fistps
popa
sti
fisttpll
test
pop
xchg
cmc
push
sub
push
dec
and
mov
ljmp
cmp
sbb
mov
mov
shr
fisttpl
fmuls
add
dec
mov
mov
and
and
sbb
out
xor
cmp
inc
jg
ret
outsl
cwtl
adc
int3
fldenv
stc
loope
push
mov
push
or
aad
imul
mov
lods
cli
dec
inc
add
dec
pushf
lcall
popf
pop
inc
xchg
and
inc
cmp
inc
push
inc
push
and
fstpl
adc
mov
pop
icebp
sub
mov
rcl
jl
and
movsl
xchg
pop
and
bound
sub
xchg
pusha
rolb
scas
mov
addl
aas
iret
repz
mov
test
fld
dec
aaa
push
cli
xchg
jns
inc
pop
inc
push
xor
xchg
into
add
outsl
in
scas
dec
dec
call
push
sub
sub
std
ret
pusha
xchg
lret
rcll
adc
sbb
xor
add
sub
test
cmp
jmp
outsl
add
add
clc
leave
addl
inc
push
sub
sbb
mov
repnz
mov
fwait
mov
cmpsl
jae
and
pop
imul
xor
fisubrs
xor
jl
ja
jne
out
rcll
mov
jmp
das
mov
and
xlat
mov
xchg
inc
or
pop
cmp
xchg
mov
nop
inc
fnstcw
or
andl
xchg
movsb
data16
jne
shrb
xor
imul
fnstsw
insb
mov
sub
lds
lods
cs
mov
mov
mov
enter
add
std
leave
popa
or
jp
in
add
pop
out
loope
jl
fidivrs
clc
leave
lods
in
inc
orl
test
outsl
cmpsb
int
mov
popf
or
int3
pop
mov
cli
add
cld
xchg
adc
test
fs
cmp
movsl
into
sub
js
cmp
sbb
and
fcmovu
call
xchg
mov
stos
fsubs
mov
add
mov
jl
imul
push
scas
xchg
and
inc
pop
add
push
jae
mov
dec
add
fxch
lahf
mov
adc
inc
js
pop
ljmp
jnp
jns
pop
mov
aas
add
lds
cmp
xchg
pop
sti
cwtl
in
leave
shl
and
or
adc
and
rorb
out
fisubs
test
or
mov
imul
jns
lret
popl
test
out
mov
mov
inc
arpl
inc
in
insb
xor
mov
mov
cmp
jle
jbe
aad
push
sbb
lcall
mov
int
pop
roll
or
sub
and
subb
sub
sub
mov
mov
mov
mov
ds
jnp
jns
fstp
pop
jg
outsb
scas
les
js
inc
cwtl
cmp
sub
add
sahf
fstpt
mov
add
orb
inc
or
stc
pop
daa
loope
inc
mov
xchg
xchg
jo
dec
movsb
inc
mov
insb
inc
sti
psrad
jmp
daa
xor
jmp
sbb
pop
mov
aas
out
jbe
and
xor
addb
inc
stos
or
subl
pop
cmp
shlb
or
pop
sti
fdiv
cli
and
inc
or
dec
jo
loope
dec
rcl
mov
or
popa
inc
orb
push
jge
or
gs
sub
xchg
push
push
pop
push
dec
stos
lods
jge
aas
lods
pop
subl
data16
mov
scas
and
mov
ficoml
loop
popa
jb
movsl
mov
or
adc
xor
in
test
call
imul
std
sub
or
mov
pop
xchg
scas
inc
fists
sahf
lret
mov
mov
inc
add
into
sub
pop
push
js
push
loop
lret
scas
movsl
and
and
and
test
adc
pop
jge
sub
or
xchg
clc
mov
sar
dec
mov
jnp
imul
push
arpl
pop
rcrb
fcmovu
xchg
cmp
test
sub
jnp
or
push
cmc
fucom
arpl
dec
bound
idivb
mov
and
mov
test
cmp
mov
mov
jle
xchg
fsts
cmp
popf
pop
fiadds
pusha
pop
out
add
or
sbb
dec
ljmp
hlt
std
into
test
insb
cmp
and
mov
scas
test
jge
cs
sub
cltd
das
adc
addl
dec
sbb
movsl
lods
inc
mov
test
pop
jl
fs
fcoms
and
test
add
rolb
and
mov
fldl
imul
dec
shrb
jp
arpl
movsl
ja
ds
xlat
hlt
es
testb
sarl
mov
jp
push
adc
sbb
movsb
cmpsl
into
repz
cli
jg
xchg
pop
movb
pushf
aad
dec
push
jmp
icebp
and
cmp
mov
sbbb
dec
dec
mov
push
f2xm1
int3
cmp
mov
arpl
mov
test
subb
fsubl
xchg
dec
xchg
xchg
loope
inc
and
ret
cltd
mov
cltd
ret
enter
push
xchg
pop
mov
out
in
mov
inc
mov
mov
lahf
inc
jae
rep
aam
xchg
sahf
push
loopne
std
inc
lret
xchg
sbb
adc
sahf
fdiv
pop
cmpsb
fdivrl
and
cmp
jno
inc
fwait
mov
sub
test
rcrb
popa
jae
ljmp
das
adc
lret
aaa
stos
mov
dec
dec
ret
pop
and
inc
in
aad
mov
clc
dec
sbb
arpl
xchg
jb
addr16
pusha
out
mov
pop
inc
je
mov
dec
mov
sbb
jae
push
sub
dec
sbb
repz
fmull
cs
stos
mov
les
pop
hlt
je
inc
nop
push
jno
lods
movsb
inc
imul
push
es
add
pop
mov
push
jp
push
in
xchg
mov
fisubl
mov
xchg
jl
jae
mov
iret
inc
jnp
stos
pop
pop
xlat
enter
mov
dec
nop
pop
cwtl
inc
hlt
add
adc
cmc
cmp
lret
mov
imul
xor
popa
mov
jnp
adc
je,pn
mov
push
jge
sub
call
ds
jecxz
push
pushf
ret
xchg
jno
in
movl
shrl
pop
sub
fs
xor
xchg
enter
int
ret
test
inc
shrb
shl
cmc
cmp
jecxz
dec
cmp
push
iret
popa
add
sbb
nop
fmul
xchg
lret
ret
jmp
jmp
jmp
mov
dec
sub
jg
push
test
loop
subb
push
or
cmp
shll
mov
add
add
shlb
or
sub
dec
loop
sbb
sub
rol
push
fidivrl
jle
inc
stc
pop
ss
pop
or
stc
push
out
fidivrs
cmp
mov
jae
nop
pop
pop
std
pushf
mov
cld
and
xchg
ss
stc
mov
mov
xchg
and
andl
mov
fisttps
push
add
loopne
mov
mov
imul
jnp
es
lods
outsl
mov
lcall
sbb
mov
sbb
je
fidivl
xchg
arpl
popf
ss
mov
adc
in
mov
fimull
or
sub
mov
dec
push
sub
imul
pop
data16
nop
popf
push
incb
loope
cmp
clc
adc
sub
pop
out
jne,pt
sub
test
add
lahf
fdivr
aas
sahf
inc
inc
sub
jmp
mov
lods
xchg
das
imul
loop
pop
xchg
xchg
enter
mov
out
or
lods
jg
cltd
lea
pop
testb
lea
pop
and
sbb
cmpb
lods
mov
sub
mov
repz
cmpl
mov
dec
mov
inc
lcall
push
sbb
popf
dec
and
repz
mov
inc
aas
lds
cmp
jnp
xchg
pop
mov
outsb
popf
xchg
std
mov
and
icebp
fistpll
adc
lea
in
dec
das
pop
add
shll
popa
out
dec
ret
mov
rorb
push
and
lret
addr16
sub
and
or
ret
jae
mov
in
push
pop
adc
pshufw
mov
push
cmp
mov
aam
sub
jmp
fimuls
cmp
pop
iret
out
inc
push
fistl
add
ds
cld
test
rcrl
popa
mov
add
mov
lods
adc
ficoml
sub
mov
inc
pop
cmpsl
adc
leave
dec
ret
test
popf
int3
aad
cwtl
pop
jae
sbb
jne
mov
jmp
test
ss
mov
sub
and
dec
out
pop
push
in
jmp
mov
scas
aam
xor
data16
rorb
pop
push
mov
or
cwtl
jp
fsubs
cmp
ja
lock
in
and
add
sahf
xchg
test
cmp
mov
mov
rcll
adc
arpl
dec
int3
pop
push
mov
enter
xchg
in
or
dec
adc
mov
sbb
pop
push
jl
es
sub
loop
cmpsb
and
inc
nop
mov
pop
and
or
cmpsb
pop
sbb
sub
fwait
add
xchg
sub
daa
and
mov
cld
test
into
mov
jmp
pop
aaa
dec
dec
mov
pop
imul
idivl
jnp
xchg
jo
dec
pushf
xchg
mov
jns
mov
add
pop
dec
aaa
and
inc
shrb
cwtl
pop
jecxz
mov
je
jbe
mov
movl
cmp
insl
xchg
bound
dec
aas
jg
pop
hlt
push
popa
lret
adc
ret
lock
xor
sbb
and
jae
xor
xchg
es
add
les
cmp
xor
nop
fimull
xchg
ret
mov
loopne
cmpsl
mov
pusha
lahf
inc
pop
enter
dec
test
repz
jae
pop
loope
lret
dec
adc
dec
imul
inc
cmc
add
jecxz
insb
push
cmc
mov
jnp
add
jge
std
jle
das
int3
mov
sbb
shr
cmp
lock
insl
callw
stos
hlt
mov
jno
mov
inc
or
xchg
xorb
sti
aas
jb
push
shll
pop
sub
inc
js
pop
jns
inc
int3
xchg
xchg
dec
inc
sub
cmp
outsb
gs
inc
lods
cltd
pop
sbb
pushf
inc
cld
add
jmp
xchg
cmp
inc
orb
out
jbe
dec
xchg
pop
or
cmp
inc
mov
push
adc
mov
mov
xor
faddl
add
and
dec
test
negb
sti
lods
mov
jp
scas
jmp
and
mov
cld
mov
into
xor
sub
mov
stc
shrl
pop
in
stos
sub
xchg
mov
insb
adc
adc
inc
pop
jbe
mov
or
push
in
cmp
repz
lcall
out
jge
sti
jl
call
sbbb
push
inc
mov
mov
inc
xchg
xor
shlb
mov
xchg
xchg
movsl
add
dec
xchg
push
jmp
popf
cltd
inc
aas
in
mov
add
jb
cmpsl
lods
xchg
pop
cwtl
lds
or
ljmp
les
mov
mov
cmpsl
outsl
incb
cmp
sub
shll
fdivl
dec
sahf
imul
orb
jbe
bound
outsl
ds
jmp
xor
adc
xchg
les
mov
lock
jle
inc
ret
dec
mov
lock
stos
ficoml
fwait
jae
push
jb
sbb
out
xor
popl
mov
add
adc
pusha
inc
push
pop
or
or
xchg
enter
mov
add
mov
fdivrs
sub
mov
scas
mov
lcall
mov
mov
and
xor
ret
fldenv
push
movl
adc
sub
cmpsb
mov
faddp
mov
dec
call
popf
inc
loop
cmp
shll
pop
lcall
lret
sbb
in
cwtl
shr
cmc
sbb
dec
xor
xchg
iret
mov
and
shll
cmp
add
lea
lret
std
stos
jl
pusha
mov
fisubrl
jle
fisubrl
jnp
in
cmp
lret
cwtl
inc
hlt
in
divl
add
movsl
sub
stc
pop
pop
dec
xchg
sub
insb
js
jbe
fimuls
into
test
rorb
outsb
pop
mov
test
shrb
and
mov
fidivl
mov
mov
faddl
sub
subl
pop
mov
add
int
and
mov
sub
lret
mov
xor
ljmp
fcmove
nop
mov
mov
test
stc
jns
cs
inc
into
dec
xorb
outsl
fldl
sub
inc
add
fcomps
inc
pusha
jmp
es
ljmp
pop
push
pop
and
jae
popa
pop
sarl
xor
cmc
jb
push
test
je
clc
dec
les
add
pop
push
jge
add
fisubl
push
mov
data16
arpl
cs
pop
jb
push
push
xlat
pop
jg
mov
xchg
jb
push
inc
jmp
ja
inc
cld
xchg
add
push
dec
push
mov
sbb
inc
dec
cltd
loopne
aas
test
push
adc
jle
loope
daa
dec
sbb
enter
leave
popf
movsl
mov
enter
test
jae
or
add
sub
fs
xchg
test
xor
add
jp
loop
cmp
mov
cltd
or
adc
fcompl
add
or
dec
sub
xchg
cmp
xor
mov
add
cwtl
jnp
aam
inc
mov
cmp
cld
push
mov
mov
shrl
or
dec
sbb
sub
scas
es
cmpsb
mov
pusha
pop
mov
pop
ret
mov
leave
loop
pusha
imul
inc
cmpsl
cmpsl
xchg
pop
lods
push
xor
popf
ja
lds
aas
scas
dec
out
testl
test
mov
mov
or
lods
push
aas
push
adc
inc
and
mov
pop
das
pop
mov
xor
lds
inc
cmc
pop
cli
and
nop
and
rolb
leave
xor
lods
rcrl
inc
scas
add
loop
shll
test
je
aad
icebp
enter
push
sarl
imul
enter
or
loop
shrl
dec
push
lods
movsb
ja
pushf
adc
and
jno
lock
lds
inc
cmp
dec
xorb
jnp
push
cmp
scas
nop
or
repnz
mov
pushf
fadds
sub
test
add
or
stos
lcall
leave
adc
rcrb
lods
dec
mov
inc
sbb
and
test
int3
sub
insl
mov
in
decl
sti
pop
dec
in
lcall
pop
mov
movsb
add
sub
dec
cli
inc
jge
ja
and
xchg
xchg
inc
stos
xor
fimull
add
add
mov
jb
rcll
sub
fldl
dec
fs
adc
xor
cmpl
fbld
in
add
pop
inc
pop
adc
enter
or
push
pop
xchg
aas
mov
mov
cli
mov
push
push
lret
sbb
push
add
xor
inc
jg
or
orb
les
popa
sahf
int3
pop
fwait
inc
call
jmp
mov
push
lret
xchg
ret
lahf
iret
addr16
xchg
ret
imul
ljmp
loopne
jg
js
pop
sbb
jge
xor
jle
fildl
hlt
jno
adc
sub
mov
cmp
and
dec
cmp
sub
sub
xchg
add
mov
jne
mov
pop
mov
scas
jg
pop
dec
xchg
adc
dec
add
sbb
lret
and
xchg
imul
sbb
jb
pop
dec
lcall
lret
or
mov
mov
sbb
lret
or
sbb
mov
frstor
xor
dec
dec
or
cld
pop
lret
addr16
xchg
adc
mov
movsl
pop
mov
cmp
bound
dec
mov
inc
or
and
push
cmp
cmp
sbbb
jmp
test
ds
out
popf
iret
addb
mov
icebp
imul
out
mov
jns
add
rorl
pop
sbb
shlb
jnp
sbb
iret
int
sub
enter
popf
pop
cld
xor
call
sarl
das
shll
mov
mov
sti
enter
cmpl
into
loop
shrb
pop
stos
push
xchg
cmp
nop
sub
cwtd
sbb
orl
shrl
arpl
jae
cld
jo
stos
dec
call
stos
mov
pop
lods
ret
inc
clc
jno
push
adc
lock
test
cmovp
dec
cmp
sbb
xchg
movsl
js
sbb
pop
mov
gs
sahf
leave
std
jg
rolb
adc
pop
push
stos
or
xor
mov
lods
ret
ret
dec
call
jp
add
cmc
sarl
sbb
inc
cmp
lahf
xchg
push
pusha
inc
popf
pop
sub
mov
cmpsl
out
jg
test
cmc
jne,pt
arpl
inc
test
call
jecxz
pushf
adc
flds
add
mov
sub
insl
dec
subb
xchg
js
pop
fnsave
xchg
and
jge
cmp
adc
je
roll
cs
xchg
sub
mov
fnsave
subl
pushf
loope
sar
scas
adc
popf
mov
sbb
xor
sbb
jl
jns
pop
pop
cwtl
int
outsl
mov
cld
jle
ret
sarl
test
sbb
popa
dec
fistpll
out
cwtl
pop
xor
dec
inc
or
pushf
jge
lods
push
push
xchg
addl
xor
clc
mov
inc
push
xlat
in
mov
ds
cmp
jno
fstl
push
das
fisttpl
jo
mov
or
inc
dec
popf
roll
fdivl
sub
call
dec
js
add
outsl
xchg
nop
mov
aad
test
mov
pusha
into
sti
jmp
pop
xchg
test
xchg
inc
int3
idiv
fidivrs
or
std
ds
mov
mov
mov
cmp
ret
roll
sarb
mov
repnz
and
imul
test
xor
cmp
aas
ja
add
xchg
push
or
arpl
xlat
jge
hlt
or
and
lods
jecxz
hlt
bound
rcrl
mov
xchg
sbbl
xorb
push
mov
cmp
aas
fld
bound
imul
jmp
mov
shll
jne
popf
cmp
iret
lods
xchg
push
cmp
push
in
jo
fcomps
mov
ja
inc
push
lds
jns
cld
dec
test
ja
xorb
lock
mov
aad
shrb
les
push
adc
push
add
jl
mov
stos
aam
fldenv
gs
xchg
xor
mov
cmp
xor
mov
lcall
popf
xchg
je
cmp
pop
cld
inc
ds
int3
rcrl
lret
call
cld
and
bound
add
je
jns
mov
imul
add
aam
mov
xor
ret
jae
adc
inc
mov
insl
int
out
pusha
icebp
mov
mov
mov
adc
add
popa
je
call
dec
lret
mov
popa
movsb
js
or
mov
jmp
rolb
cmpb
pop
inc
adc
sub
jno
fwait
mov
frstor
jp
mov
add
cld
loop
test
or
ret
jae
push
insl
xor
lret
fstpt
jp
xchg
and
in
mov
in
ja
negl
inc
sub
icebp
or
cwtl
push
pop
adc
mov
fmuls
ret
dec
pop
push
out
jae
lock
adc
pop
sub
setl
out
rclb
mov
add
mov
fcompl
pop
fisttps
popa
ja
ret
ljmp
xchg
les
cmp
add
andb
shrb
aam
mov
mov
xchg
add
shlb
pop
aad
cmp
test
ljmp
das
push
pop
aad
int
mov
cli
inc
lahf
arpl
jb
mov
fcompl
mov
test
sbb
add
dec
andb
sarl
rcrl
dec
dec
fdivrl
mov
pop
das
lds
mov
aam
inc
push
jecxz
repnz
push
idivb
push
sub
push
jo
test
lods
cmp
mov
leave
test
mov
ret
addl
pop
call
dec
mov
pop
cmp
lret
out
cmpsb
pop
aad
fmul
inc
stos
jnp
cmp
out
imul
shrb
mov
into
scas
inc
stos
dec
inc
pushl
in
dec
sbb
int3
jbe
lret
jle
pusha
and
mov
popl
in
sub
shll
push
inc
cli
adc
jnp
xchg
cld
xor
xor
lret
rcl
stos
xchg
add
cmpsl
lret
mov
add
sub
jmp
dec
pop
sub
inc
faddl
jl
imul
sub
mov
mov
inc
aad
cli
shlb
aam
sub
fisttps
inc
loopne
and
add
add
and
cmp
pop
xor
sbb
jmp
daa
inc
scas
mov
cmp
mov
push
call
sbbb
push
mov
jle
mov
fcomp
pop
fidivrs
repnz
aas
lods
sti
push
push
insb
cmpl
rorb
push
in
je
int
vpmaxsw
lods
mov
add
out
into
popf
or
and
fs
stos
cltd
cs
out
inc
mov
aam
pop
test
sub
cmp
gs
dec
neg
pop
rorb
push
lds
leave
mov
sbb
popf
mov
lds
sbb
adc
fbstp
sti
cmp
les
test
pop
inc
or
popa
fptan
out
mov
pop
lock
push
es
mov
cmc
dec
rcrl
ds
sbb
loop
call
adc
push
jbe
mov
adc
jmp
jg
inc
or
adc
jb
fwait
sti
xlat
xchg
ss
push
aas
je
mov
int3
enter
out
fwait
int
xchg
lcall
and
inc
xchg
in
mov
cmp
ljmp
and
mov
dec
sub
fidivrl
mov
push
mov
cmc
and
mov
mov
cld
gs
cmp
scas
xchg
or
sub
mov
incl
pop
push
pop
je
popf
sub
je
pop
add
cli
inc
xor
int3
jae
int
insb
xchg
add
xchg
lock
cmpsl
mov
scas
fcomps
jp
sti
dec
pop
jg
cltd
dec
mov
fnstsw
sub
imul
roll
mov
mov
fnstcw
lods
into
sub
mov
and
or
jle
xchg
nop
sub
pop
push
in
and
mov
add
lret
or
mov
pushf
jmp
cmpsl
bound
mov
add
iret
mov
add
loopne
jns
jp
dec
leave
idivb
mov
fsincos
das
bound
shlb
ljmp
imul
fldt
pop
lea
sahf
das
lret
push
jp
xchg
mov
cs
movsb
or
outsl
sbb
out
outsb
mov
mov
mov
lret
mov
xchg
cmpsb
mov
add
mov
xor
add
fs
cmpsl
dec
sbb
cmp
xchg
rcll
or
arpl
xor
inc
mov
repz
push
scas
inc
sti
jo
mov
sbb
int
in
or
sbb
pop
jp
xor
or
aad
xor
dec
sbb
call
dec
and
mov
cld
clc
push
xor
xor
lods
shll
pop
loope
cmp
jp
adc
into
das
scas
lock
pop
inc
ret
test
ja
pop
xor
or
add
testl
movsb
decl
pop
mov
mov
adc
dec
sub
fildll
mov
les
orl
xchg
dec
fbld
je
pop
fisubs
push
push
add
test
cltd
or
cli
cmp
mov
in
cmpsb
mov
test
fadds
sbb
adc
mov
mov
mov
mov
popa
pop
mov
or
arpl
das
jae
adc
les
dec
mov
mov
mov
cmp
arpl
push
mov
xorb
inc
sbb
enter
cmp
or
lods
dec
and
rolb
ss
stos
xchg
int
sub
gs
sub
jb
aaa
cmp
xchg
scas
ljmp
dec
loopne
adc
cmp
test
push
dec
xchg
icebp
pop
gs
mov
inc
dec
cmpsl
lcall
loopne
repz
adcl
xchg
add
fucomi
stos
cmp
cltd
inc
sub
cmpl
mov
movsl
add
cmp
les
jge
pop
jge
int3
mov
add
fsubs
cli
inc
rol
cld
xchg
xchg
inc
or
pop
shll
pusha
js
outsl
data16
sub
popf
push
loop
jne
lcall
je
mov
mov
dec
sub
fwait
daa
icebp
push
mov
shlb
add
cmp
mov
ret
mov
or
popf
rcll
movsb
int
xchg
sub
jbe
loopne
outsb
int
adc
loop
add
pop
jl
and
push
inc
in
jmp
dec
popa
imul
pusha
xchg
or
fdivrl
stc
in
ret
add
add
pop
nop
xor
push
jp
push
xchg
lods
out
mov
dec
inc
sub
and
dec
scas
and
push
dec
js
and
lds
and
outsb
xchg
lret
pusha
ret
inc
mov
subl
adc
and
sbb
test
xor
popf
rcrl
xchg
in
adc
or
mov
popf
shlb
jecxz
sti
rcrb
xor
mov
xor
aam
or
outsl
xchg
fxch
rol
int
jg
mov
inc
jg
std
cltd
dec
test
mov
add
test
pop
add
adc
into
jns
in
mov
popf
icebp
ret
cltd
and
fadds
das
subl
mov
cmp
outsl
movsl
lods
dec
repz
add
fimull
add
mov
fnstcw
adc
data16
cwtl
cwtl
xchg
hlt
loop
mov
adc
scas
mov
xchg
xor
lds
push
cmpsb
scas
sub
adcl
or
ss
mov
jge
pop
sub
icebp
ficoml
mov
mov
sahf
fcmovnb
in
pop
cli
sti
addr16
mov
push
xor
gs
jg
insb
inc
fwait
mov
mov
and
sbb
cmp
pop
dec
roll
inc
js
mov
and
repz
cmp
cbtw
sub
mov
dec
in
jp
ret
daa
push
cli
popf
cmp
dec
add
sahf
pop
or
loop
inc
xchg
std
dec
fs
mov
sub
pushf
div
inc
jg
mov
adc
dec
pop
mov
xor
lahf
fiadds
jg
iret
cmp
cld
inc
jno
mov
xchg
pop
xor
popa
sbb
inc
mov
rorl
jbe
adc
jecxz
add
mov
xchg
fwait
iret
or
adc
cmpsl
mov
mov
bound
ljmp
fiadds
mov
sbb
cmc
sub
pop
ficoml
gs
mov
mov
jecxz
pushf
repz
mov
cmp
or
daa
scas
sbb
ret
jge
mov
mov
jmp
pop
and
test
sbb
jb
inc
les
sub
shlb
xchg
pop
add
xchg
dec
xlat
xor
imul
and
pop
imul
or
lahf
negl
mov
sbbb
pop
int
push
push
or
jo
pushf
movsb
push
test
add
movsb
rcrl
lods
inc
cwtl
sbb
test
mov
lcall
jno
inc
imul
jns
fcom
lds
mov
arpl
fdivr
jge
sti
repnz
mov
shrl
out
popa
push
push
mov
mov
int
sbb
fldenv
inc
cmc
test
ret
adc
idivb
or
testl
andb
rol
mov
stc
pushf
or
push
loope
jecxz
add
sahf
out
repz
inc
in
cmp
inc
push
mov
sbb
stc
dec
mov
shrl
xchg
mov
ficoml
insb
mov
fucomp
dec
fstpl
in
fists
inc
out
or
stos
sub
inc
jae
scas
xchg
xor
cmp
repnz
xchg
pushf
cs
push
lds
push
int3
or
push
add
or
mov
add
dec
das
les
popf
aas
mov
push
jo
std
nop
aas
cmp
add
sbb
mov
sub
cs
pop
inc
loope
jb
lds
jp
aaa
lea
mov
daa
mov
jne
mov
fs
fildl
rcll
stc
pushf
pusha
dec
adc
dec
mov
test
aas
pop
cmpb
out
cs
data16
rclb
jo
arpl
jns
push
or
mov
idivb
add
dec
mov
rorl
mov
mov
test
pop
lods
cmp
add
sbb
out
add
inc
xlat
pop
mov
jg
jmp
mov
sub
mov
adc
icebp
push
mov
jo
mov
mov
jns
sub
movsb
mov
pop
int3
icebp
and
stos
push
insl
dec
or
cmp
jmp
loop
fxch
jb
ljmp
cmp
dec
pop
push
mov
push
adc
pop
sbbl
mov
push
push
mov
sub
jle
lret
cmp
sbbl
scas
and
cmp
ficoms
sarb
lock
or
repz
movsl
xchg
inc
pop
or
aaa
sub
lret
in
popa
mov
imul
xchg
cmp
jnp
pop
testb
pop
adc
cmpsl
ja
pushf
cmp
mov
fucomp
xorl
xchg
push
xor
sub
in
icebp
daa
and
sub
addr16
add
sub
add
test
pop
mov
stc
loopne
subb
scas
iret
mov
mov
sub
mov
movsl
mov
int3
loope
fcompl
pushf
cli
imul
jbe
pusha
inc
xchg
xchg
or
inc
jns
fprem
dec
cli
imul
push
fs
test
test
das
xor
inc
stc
or
inc
mov
adc
mov
int3
mov
push
cld
sub
inc
mov
mov
sbb
fstl
ret
fadd
jmp
test
xchg
cmp
mov
fs
push
cmp
jg
jg
sbb
jbe
pop
cmp
in
sbb
xchg
repz
mov
dec
inc
push
xor
sub
push
psubd
jnp
test
clc
xchg
scas
cmp
pop
sub
add
push
aas
and
pop
test
in
les
dec
ljmp
push
inc
aam
cli
into
push
inc
xorb
or
and
lods
les
push
incl
cld
stc
lret
imul
adc
push
enter
mov
loopne
imul
js
sub
shlb
jns
push
les
mov
xor
les
aam
inc
das
int
js
adc
add
cltd
gs
bound
dec
pop
shlb
pop
pop
add
adc
jb
mov
imul
cmp
cmp
iret
sbb
xchg
and
xchg
add
xchg
xor
out
xor
mov
pusha
or
cmp
lea
cmp
outsl
aaa
xchg
sub
dec
mov
mov
or
faddl
and
pop
jmp
add
ror
sub
dec
push
lock
mov
push
xor
mov
in
fistpl
sub
testb
cmp
xchg
fildl
xor
repz
mov
inc
fndisi(8087
popa
popa
xor
lahf
jns
mov
pop
scas
scas
pop
sbb
cmp
pop
ret
xor
jp
mov
dec
inc
mov
and
adcb
cld
stos
jmp
xor
push
aam
fnsave
int3
movsb
and
cmp
scas
mov
xlat
sbb
pop
shl
mov
scas
jne
or
int3
cmp
aas
lret
in
popf
ret
push
cmp
testl
bound
pop
pusha
mov
shrb
jmp
dec
loope
pop
ss
xchg
fsubs
out
rolb
xchg
dec
or
nop
xor
shll
mov
add
xor
inc
sub
sub
or
pop
hlt
std
sbb
test
incb
aas
ljmp
test
das
or
cmp
das
in
add
jp
jmp
or
inc
cmc
in
add
daa
je
into
xchg
inc
mov
xchg
jp
mov
push
and
sbb
aaa
das
cs
jne
jmp
stos
mov
and
sub
xor
and
jmp
or
lcall
inc
popf
int
sbb
jmp
out
pop
lea
lock
sub
mov
sarl
cs
lret
fdivrl
add
out
rolb
es
or
loop
xchg
sub
mov
in
orl
dec
and
add
xchg
mov
ds
mov
mov
add
popa
arpl
mov
insl
xchg
das
insb
mov
and
dec
dec
xor
cli
add
inc
adc
popf
insb
iret
pop
mov
das
fwait
push
inc
bound
aas
shrl
pop
cltd
std
xchg
fcompl
cmc
mov
fwait
sbb
test
shrb
xorb
inc
divl
push
mov
push
fisubl
pop
xor
divb
repz
mov
ret
adc
or
cmp
push
aaa
add
popf
ljmp
dec
int
push
cmp
mov
inc
pop
jle
icebp
cwtl
fistpl
mov
or
pop
aam
daa
sti
hlt
in
dec
lahf
insl
push
test
mov
ss
in
push
nop
in
pusha
movsb
roll
imul
mov
rolb
xchg
mov
jmp
mov
adc
dec
or
imul
sbb
inc
sbb
call
lret
fcomip
sub
icebp
ja
movsb
lods
loop
jge
cwtl
testb
fcoml
rcrb
arpl
lret
daa
in
in
int3
fildl
or
push
jp
mov
xchg
addl
jl
add
adc
sti
pusha
jge
fwait
cmpsl
sbb
pop
outsl
fsubr
mov
cmpsb
mov
dec
jmp
insl
fs
inc
or
fnstsw
mov
dec
sti
mov
ret
mov
adcl
dec
lods
inc
gs
je
inc
push
mov
dec
push
sub
adc
hlt
xchg
incl
and
loope
push
jne
mov
inc
insb
ljmp
push
jae
sub
dec
call
push
adc
dec
mov
or
gs
imul
dec
loopne,pn
enter
imul
imul
adc
repz
xor
call
push
adc
stos
jecxz
jl
cmpsb
jbe
and
imul
push
lea
rcrb
sub
push
sub
movsl
sub
sbb
cmpsl
mov
stos
aaa
cmpsb
add
mov
push
add
lods
jno
cmpsb
in
push
xchg
rorb
imul
fs
in
push
mov
loopne
cmc
xchg
sub
mov
mov
fidivs
mov
cmp
or
and
int
mov
sahf
lds
mov
jp
push
nop
lods
sub
jnp
imul
shlb
mov
lods
xor
dec
stc
bound
pop
les
lods
cld
push
mov
mov
sub
push
mov
aaa
push
or
pop
lods
fimuls
cmp
cmp
emms
jle
or
mov
or
stc
add
ja
arpl
addr16
adc
pushf
jecxz
arpl
in
iret
mov
cmp
test
add
icebp
lret
clc
pop
sbb
cli
mov
dec
cmpsb
xchg
call
add
in
dec
xor
mov
into
lret
loopne
aam
sub
adc
fs
loop
xchg
dec
cmp
jp
icebp
jbe
and
movsb
es
mov
mov
pop
pop
xor
inc
add
xor
cltd
sub
sub
add
xor
daa
inc
mov
sbb
addr16
fstps
imul
dec
aas
mov
and
fisubl
data16
insl
faddp
pushf
mov
sub
and
mov
cmc
ficomps
fsts
icebp
sub
or
mov
pop
repz
int3
jl
insl
mov
je
loopne
fistpl
dec
bound
push
addr16
rcrb
mov
jge
clc
hlt
and
dec
mov
or
out
ror
sahf
repnz
mov
test
xchg
mov
push
aas
ljmp
cmpsl
xor
push
int3
insb
incl
rorl
jnp
cli
mov
adc
pop
out
repnz
cmp
out
cs
ss
jnp
inc
aas
out
leave
test
add
nop
stos
xor
sar
pop
cwtl
cld
add
or
pop
dec
pop
in
repnz
mov
in
pop
repz
jae
or
push
jo
jl
adc
shl
mov
xor
mov
stos
stos
gs
inc
lods
addb
push
cmp
dec
push
flds
inc
inc
or
sub
push
ror
pop
mov
in
pop
sbb
fadds
xor
pop
jmp
push
mov
xlat
push
frstor
push
in
xor
int3
ljmp
in
inc
out
or
inc
repnz
lret
push
xchg
bnd
inc
xlat
or
out
xlat
std
add
popf
adc
pop
mov
dec
pop
inc
aaa
jno
rclb
xchg
adc
mov
out
push
jnp
add
mov
pop
sub
out
xor
add
cmp
inc
jae
dec
cmp
cmp
inc
push
mov
add
adc
add
sarb
adc
jno
enter
into
sahf
add
inc
sub
in
adc
push
add
fadds
pop
sbb
dec
pushf
fdivrl
mov
xor
movsl
add
sahf
and
add
push
int
lahf
mov
and
pop
in
mov
out
inc
mov
pop
notrack
push
jp
fdivrs
inc
test
mov
pop
test
adc
scas
test
stc
xlat
jp
sbb
sub
mov
lods
out
add
cwtl
mov
in
hlt
add
fsubrs
std
mov
xchg
cltd
adc
dec
push
insl
push
int
fbld
sub
shrb
loope
mov
cmpl
cmp
je
shll
xchg
repnz
movsl
shrl
hlt
jmp
jmp
jg
daa
mov
sub
ljmp
push
jle
das
fcmovne
add
hlt
mov
test
lds
loope
sub
mov
fsubs
jns
adc
cmp
inc
sbb
xlat
adc
push
orb
es
mov
out
cmp
icebp
mov
pushf
test
leave
sbb
mov
push
in
mov
xor
mov
das
mov
jl
je
mov
push
lret
dec
scas
cli
sub
jle
push
pusha
or
sub
ret
popa
mov
mov
add
pop
cs
leave
call
popf
stos
test
adc
popa
int3
mov
push
shl
push
push
rcrb
mov
pop
sbbl
cmp
mov
mov
add
push
pushf
mov
hlt
inc
popa
lods
mov
xor
mov
xor
pushf
xor
jle
fistl
sbb
sub
aam
cmp
pop
adc
clc
ficoml
and
mov
push
pop
cmp
loop
les
mov
scas
jl
sub
push
pop
xchg
out
dec
out
lret
ret
sbb
movsl
sub
mov
adc
fbld
adc
xchg
or
mov
popf
les
int3
sar
ret
inc
xchg
adc
lea
push
mov
mov
adc
adc
sub
aam
fsubrl
sub
jno
push
sub
decb
hlt
dec
pusha
cmc
dec
mov
loop
shll
mov
push
cli
and
add
push
sbb
and
stos
test
and
subl
sbb
mov
sbb
jge
nop
xchg
add
les
cmp
data16
inc
sbb
jg
pop
xor
mov
dec
or
or
or
mov
xor
lods
push
add
fs
jl
addr16
int3
cmpsb
inc
push
jecxz
rcr
sar
mov
xor
rcll
ss
push
mov
xchg
js
test
cmc
rcrl
test
add
add
cmp
mov
js
push
lods
add
push
cs
jge
bound
mov
or
icebp
loope
xor
push
mov
jno
stc
jns
mov
iret
arpl
dec
push
push
das
pop
adc
cmp
test
loopne
adc
insb
or
mov
addb
popa
test
cmpsl
mov
pop
orb
testl
mov
push
sarl
and
cld
in
hlt
sub
into
shlb
sub
in
js
icebp
pop
adcb
pop
pop
sti
sbb
cwtl
test
pop
cmp
dec
inc
ja
pop
cmp
mov
xchg
push
dec
jbe
jno
lock
sub
sti
pusha
subb
jp
int
test
rcrl
insl
inc
cmpl
mov
mov
push
mov
test
daa
jl
int3
aas
mov
sbb
rcr
inc
out
mov
push
adc
mov
cltd
fs
mov
push
or
add
push
push
pop
bound
sub
or
inc
jnp
push
filds
lods
movsl
xor
jb
jae
push
cmp
icebp
and
and
push
mov
or
pop
push
test
xchg
outsl
outsb
pop
mov
shr
rclb
jns
push
pop
sub
push
jg
pushf
xchg
movsb
sub
push
lds
mov
paddw
inc
test
scas
mov
rorl
or
imul
mov
push
mov
lods
repnz
mov
cmc
je
xor
xchg
push
add
pop
jnp,pt
xor
cmp
stos
shrb
sahf
lods
jnp
mov
mov
push
in
sub
adc
std
popf
or
pop
xor
fs
adcb
jo
imul
pop
leave
jecxz
jno
xchg
xchg
ja
and
jmp
or
and
scas
int3
adc
or
lcall
jae
lcall
pop
pusha
daa
inc
insb
adc
jb
movsl
dec
in
daa
shll
sarl
mov
fs
xor
cmpsb
cmp
xor
mov
mov
mov
add
insl
fisttpll
cli
loope
add
loopne
and
sub
cmc
xorb
hlt
mov
cmp
pusha
mov
inc
xor
das
les
addb
arpl
mov
fimuls
jg
inc
sbb
mov
rcrl
push
sub
cmpb
clc
and
out
out
loopne
hlt
gs
push
fisubrl
cmc
mov
jmp
push
pop
test
fs
hlt
lret
push
lret
push
dec
into
jb
stos
xchg
add
aad
hlt
aas
outsl
mov
mov
jmp
xchg
inc
inc
pop
mov
ja
sub
jl
or
mov
cmp
mov
pop
ret
xchg
mov
scas
sbb
out
dec
add
push
test
dec
inc
cltd
mov
inc
bound
inc
mov
mov
adc
or
cmpsl
jmp
bound
and
sub
lahf
mov
mov
push
ret
sbbl
or
ficoml
mov
hlt
inc
insl
inc
pop
movsb
xor
aam
xchg
cmp
lcall
jmp
mov
sar
iret
lret
test
push
jle
mov
adc
repz
decb
sub
jo
fwait
cmp
add
add
cltd
les
mov
out
in
mov
jp
push
lock
jne
xchg
cmpsl
and
pop
add
popf
sub
xchg
popf
and
sahf
sub
popa
icebp
xor
jno
jno
lret
fmuls
cmp
xor
xor
inc
repnz
roll
jo
add
mov
push
cmpsb
les
fldt
jge
jb
or
push
cmp
nop
shl
pop
sahf
pop
and
gs
imul
lret
xchg
shlb
ljmp
push
xchg
xchg
cmc
test
xor
jle
mov
add
sub
insl
pop
or
icebp
loope
xor
aad
lahf
lods
or
jge
xlat
lea
out
scas
lret
add
lcall
fisubl
push
stos
push
mov
sub
sub
stc
mov
cmp
jge
cld
cli
mov
icebp
push
mov
jmp
popa
or
add
popa
push
gs
pop
and
aam
cwtl
rorb
or
cmp
cvtps2pi
mov
mov
ja
mov
adc
aas
and
ret
scas
dec
test
decl
adc
dec
fwait
or
int3
jecxz
mov
inc
mov
push
inc
cwtl
mov
adc
int3
popa
or
call
pop
shr
cmp
cmpsl
xchg
imul
xchg
ret
xchg
mov
mov
inc
mov
push
in
xor
addb
repnz
lcall
int
dec
sbb
xor
scas
icebp
xor
dec
stos
and
sbbl
sub
gs
sub
testb
stc
aad
sbb
inc
cmpsb
sub
push
mov
sti
cmp
jo
xchg
cmp
orb
andl
fildl
jle
lds
int3
and
sbb
dec
inc
fadds
loopne,pt
loope
xchg
mov
aad
addb
and
sbb
inc
aam
in
inc
mov
push
insb
mov
cli
shrb
out
shll
popa
xchg
stc
adc
add
mov
arpl
mov
shr
fcmovnbe
das
lods
cmp
aaa
sbb
fnstenv
adc
or
mov
sub
int3
xchg
mov
xchg
add
loope
sub
jp
mov
sti
nop
stos
pop
nop
int
add
dec
sti
test
mov
std
or
inc
or
and
adc
lret
mov
shl
push
cltd
push
push
mov
sbb
fistps
in
push
mov
out
inc
jnp
inc
fsubrl
lods
mov
mov
xchg
dec
push
es
and
mov
enter
mov
add
push
push
gs
mov
dec
pop
jno
pop
xchg
ficoms
cmp
idivb
jnp
inc
lahf
int3
insb
iret
sbb
lret
jbe
sub
adc
lock
sub
add
push
sbb
mov
test
sbb
add
mov
pop
sbb
popf
xor
mov
mov
sub
inc
mov
shlb
sub
mov
cltd
and
cs
mov
icebp
mov
inc
fs
mov
lahf
xor
mov
inc
adc
in
pop
in
xchg
dec
jns
dec
rcrl
sti
hlt
jno
inc
cmp
or
or
das
mov
and
fisttps
test
bound
imul
cli
sbb
dec
mov
sarb
sub
aad
ficompl
pop
cmp
je
shl
out
lods
out
pop
iret
add
icebp
ja
xlat
dec
and
in
ss
pop
mov
add
mov
aam
pop
inc
imul
sub
jo
lret
add
add
lods
sahf
call
xchg
mov
aam
rcrl
push
jmp
dec
pop
dec
add
sbb
fsts
pop
cmp
loope
decb
cltd
xor
or
mov
xchg
ret
out
jbe
lret
scas
and
mov
xor
pop
jnp
xchg
es
fldcw
test
fucomip
pop
test
in
pop
mov
arpl
sub
pop
mov
pop
push
push
or
xor
js
pop
outsb
pop
mov
mov
lret
add
into
aam
push
jl
lds
add
out
and
pop
pop
pop
push
pop
sub
adc
rcrl
or
inc
ss
jo
cmpsb
adc
cmp
sbb
dec
in
jecxz
test
cmc
xchg
repz
xchg
inc
loop
insb
cld
jg
sub
or
js
icebp
lock
and
add
pop
imul
aam
int
pop
mov
pop
imul
mov
cmc
sbb
dec
int3
xor
enter
jb
xchg
pop
std
cmp
arpl
add
sbb
push
pop
mov
into
xor
push
rolb
adc
sbb
shrb
cmp
int3
cltd
inc
and
xchg
pop
push
jb
sbb
repz
mov
cli
sbb
and
dec
inc
sub
pop
insb
dec
sbb
lods
xchg
adc
push
out
aad
cmp
loope
xchg
add
sbb
cmp
cmp
cmpsb
or
repz
jl
test
test
or
loopne
das
leave
or
lret
xor
lret
aaa
stos
mov
jne
sub
into
call
repnz
mov
outsb
dec
sub
in
or
inc
insl
outsl
push
push
stos
adc
add
inc
iret
data16
popl
inc
jg
mov
sub
adc
js
dec
xor
repz
aad
cltd
ret
lcall
mov
add
cli
test
imul
inc
insb
xchg
mov
xchg
mov
push
add
push
cmp
or
clc
push
das
or
jbe
cwtl
hlt
cltd
dec
fidivrs
push
ret
gs
mov
jge
mov
xchg
addr16
js
cmp
ret
pushf
mov
subb
int
dec
aam
mov
cmp
xor
pop
repnz
and
or
js
mov
ret
and
sbb
clc
pop
xchg
dec
sub
fcomps
push
pop
dec
sbb
les
cmp
jbe
and
jns
add
clc
push
push
sub
lret
mov
lods
fstpt
sahf
xor
mov
cltd
lods
xchg
mov
xor
push
pusha
dec
xchg
sarb
stos
mov
xor
xchg
lods
dec
sbb
and
les
dec
xchg
mov
int3
sub
mov
clc
cmpsl
popl
ds
insb
ds
jp
int3
in
sbb
ftst
and
cmp
das
pop
nop
push
pop
cwtl
or
flds
pop
rolb
and
lods
add
cld
adc
sbbl
sbb
sub
and
rorl
push
data16
inc
ljmp
add
dec
xchg
ja
xchg
jl
mov
jl
iret
xchg
push
icebp
loopne
fadds
lcall
lock
pop
mov
in
sub
loop
test
xor
pop
pushf
aaa
jbe
jl
insb
movsl
hlt
bextr
jns
in
fs
cmpsl
dec
inc
inc
mov
inc
shl
add
ret
mov
test
cmp
xchg
enter
xchg
or
jle
push
and
push
mov
mov
ja
inc
int
aaa
mov
in
int3
inc
cmp
sub
clc
test
mov
sbb
test
mov
push
push
idivb
cmp
popa
sbb
test
mov
mov
lds
xchg
push
mov
int3
and
push
xlat
add
sti
outsl
fstpl
bswap
shlb
ss
call
push
sub
xchg
pop
or
xchg
fisubrs
sahf
jg
push
mov
test
and
cld
popa
xchg
fwait
popf
cmp
sbb
in
jns
movsl
repnz
scas
cld
jl
mov
jl
push
mov
cmp
pop
sbb
std
mov
je
pushf
mov
jl
dec
xchg
mov
xor
in
stos
inc
stos
xchg
jbe
test
mov
jns
std
or
xchg
xchg
pop
insb
xchg
cltd
mov
cwtl
push
lcall
cmp
jge
cmpsl
or
test
fidivs
aas
repz
mov
test
mov
outsl
in
lods
inc
ret
dec
mov
mov
pop
push
and
or
inc
pop
or
or
mov
cmpsb
mov
enter
adc
inc
jo
dec
pop
mov
lcall
mov
int3
mov
xlat
xor
rcrb
sub
hlt
jmp
pop
cmpsl
sub
mov
push
jge
stc
cmpsb
lret
pop
leave
xchg
push
in
sub
xlat
shrl
add
adc
ds
cmpsb
mov
adc
inc
mov
pop
and
mov
adc
mov
cmp
lahf
pop
push
mov
or
cli
push
and
add
pop
out
lcall
jae
fstpl
dec
test
cmc
xchg
or
jns
das
jge
orl
pop
fisubrl
xor
movsb
or
xchg
and
sub
bound
fwait
nop
les
or
icebp
mov
sahf
adc
ja
mov
sbb
cmc
jmp
nop
sti
jge
je
pop
std
test
and
ror
sbb
mov
rolb
std
jecxz
inc
sti
xor
cmp
arpl
pop
jno
mov
fwait
xchg
xor
int3
add
mov
and
das
cs
repnz
mov
ja
jmp
inc
mov
ret
arpl
jg
loop
dec
dec
push
pop
pop
scas
add
jg
ja
push
mov
inc
xchg
into
loope
lock
idivl
lcall
movsl
imul
ffree
jecxz
sub
std
ficomps
test
dec
mov
or
insb
xor
mov
movntps
rorl
sbb
out
pop
sbb
stc
or
lcall
fbld
jl
jo
pop
pop
jae
inc
into
push
sbb
hlt
cwtl
test
les
xor
xchg
fcoml
shrb
xchg
pop
pushf
lret
pop
mov
sub
frstor
mov
lahf
in
and
outsl
mov
push
in
xor
pusha
mov
rorl
xor
nop
call
mov
add
int3
push
popa
pop
xchg
bnd
sti
outsl
mov
fimull
loop
dec
and
jo
xchg
sbb
adc
mov
aad
dec
xchg
ret
dec
test
dec
ds
cmp
cmpsl
push
scas
mov
std
jl
push
sub
mov
push
iret
mov
jmp
shl
and
mov
inc
insl
inc
cmpsb
sbb
or
mov
sub
fcoms
or
addr16
and
movsl
mov
ds
dec
in
pushf
sub
inc
xor
js
aad
outsl
mov
jae
movsl
sbb
dec
cs
mov
xchg
call
outsl
js
fildll
imul
mov
rolb
nop
mov
pop
out
popf
xor
add
inc
pmulhuw
pop
dec
jns
inc
jle
in
dec
jns
inc
fistps
mov
push
jge
lea
or
fcmovnb
sahf
add
cli
cmp
jbe
lret
xchg
dec
lret
clc
sti
xchg
aas
lods
ss
xlat
mov
jo
mov
ss
fldt
sub
aam
bound
out
in
leave
and
lock
mov
in
dec
jge
sub
jbe
insl
lahf
fs
mov
xor
pop
pop
push
mov
outsl
out
adc
scas
adc
jl
ret
test
fsts
aaa
popa
push
repz
imul
inc
xchg
inc
movsl
sbb
outsb
ljmp
aaa
call
push
mov
dec
add
xor
int3
subb
into
aam
add
push
fs
pusha
mov
outsl
mov
mov
jnp
sub
jl
inc
sub
shlb
outsl
mov
int
aaa
cmp
pop
inc
stc
repnz
cwtl
mov
pop
xor
push
push
cmc
xlat
adc
push
leave
pminub
les
mov
sbb
pop
movsl
adc
sbb
test
leave
and
xor
and
sub
push
mov
push
into
hlt
clc
subl
jp
pop
mov
cld
fs
xchg
xchg
dec
test
das
inc
int3
notl
shll
pop
sahf
enter
mov
lret
js
mov
test
arpl
or
mov
outsl
xchg
xchg
and
sub
and
cmpsb
stos
ds
popa
ror
std
xchg
leave
lret
xor
adc
repnz
jge
inc
insl
xchg
and
std
pop
das
fs
adc
dec
loop
arpl
mov
cmpsb
mov
xchg
lea
inc
mov
fidivs
shll
mul
sbb
cltd
pushf
shr
and
loope
jns
and
jle
xchg
or
jl
cmc
out
jns
mov
in
and
inc
or
outsb
or
sub
mov
dec
jns
jo
mov
dec
and
rolb
pop
push
in
xor
jecxz
pop
inc
or
jnp
inc
leave
les
js
sbb
jae
sti
sub
pop
out
mov
pop
sbb
mov
divb
push
ret
mov
insb
lret
sti
scas
cmpsb
push
test
cmp
xor
push
pop
fidivrl
pop
push
testb
xor
mov
mov
mov
push
lods
insb
push
insl
cltd
fsubrl
jl
fisttps
mov
mov
add
cmp
adc
lds
mov
inc
sub
push
fwait
add
sub
fisttps
mov
addr16
shlb
push
dec
add
std
xor
lods
cmp
cltd
notb
mov
je
std
push
nop
sub
xlat
mov
and
add
dec
rol
jbe
rol
xlat
aad
and
imul
sub
and
in
cmp
cli
and
aas
fwait
jae
mov
inc
call
lret
cmp
lret
cltd
pop
mov
mov
mov
xor
leave
sbb
imul
das
xor
mov
dec
adc
test
dec
stos
aas
aas
push
xlat
sub
mov
sub
push
cmp
sub
iret
cmp
push
push
sub
lcall
jp
ret
cwtl
insb
cmp
js
sub
xchg
push
jmp
les
mov
addl
or
adc
repz
cmpsb
cmpl
addl
sbb
sbb
ds
mov
out
iret
loopne
jo
in
test
cmp
add
call
mov
pop
push
std
sub
std
sbb
push
sub
sbb
pusha
sub
jnp
pop
inc
xlat
jmp
out
movsb
pop
stos
movsl
mov
jecxz
lahf
lcall
enter
mov
mov
jnp
adc
int
jb
rcll
ret
mov
leave
stos
shlb
dec
mov
xor
loope
pop
dec
das
xor
inc
or
out
js
inc
stc
add
orb
push
and
pushf
test
add
rorb
movsb
adc
stos
nop
xor
ljmp
jno
dec
add
cmp
mov
sub
pop
cwtl
add
pop
and
jl
adc
add
add
rolb
jno
dec
movsb
fs
adc
sub
cmc
pop
stos
icebp
cli
repz
jle
mov
pusha
pop
adc
idiv
xrelease
and
and
and
xchg
dec
adc
xchg
data16
jecxz
popa
mov
in
adc
lcall
out
xor
jb
dec
push
sub
ljmp
scas
pop
inc
add
sbb
xor
pop
pop
cld
movb
push
sub
ljmp
lds
inc
mov
dec
out
mov
pop
add
jo
lock
lret
in
stc
inc
mov
xchg
mov
bound
cmc
js
adc
pop
psubq
jl
in
sbb
xchg
cmc
lock
xor
test
inc
addr16
cmpl
jb
mov
pop
aas
inc
fimull
imul
add
and
mov
inc
pop
scas
mov
fnop
add
in
push
stos
test
cmp
mov
mov
shrb
mov
das
or
inc
pop
hlt
lret
in
or
inc
cmp
repnz
inc
out
aam
mov
sub
test
sub
in
and
js
adc
dec
mov
mov
push
fmuls
sti
inc
pop
cmp
fnstcw
xor
es
lretw
sub
fisubs
xor
sub
mov
xchg
xchg
adc
xchg
lods
add
loop
xor
cli
cmp
daa
add
push
cmp
popf
add
fdivs
stc
mov
gs
jl
mov
push
jns
sub
xchg
cwtl
in
jp
xchg
rep
mov
in
sub
inc
out
lcall
or
mov
testb
xchg
mov
inc
shr
fisttpl
mov
inc
mov
shrb
push
push
aaa
push
das
mov
lods
orl
fisttpl
inc
push
adc
into
sti
ret
cmpsb
clc
fbstp
xchg
ret
add
adc
pmuludq
stos
dec
xchg
add
inc
or
cmp
push
scas
sbb
daa
and
ffree
push
pop
sub
leave
movsl
jp
add
xchg
rcll
outsl
dec
js
xchg
or
sub
dec
insb
inc
shll
inc
jl
dec
int
cmp
lds
dec
mov
dec
and
add
icebp
and
pop
lret
or
shl
les
test
mov
pop
sbb
rolb
fidivl
mov
push
outsl
sbb
push
aas
je
nop
cmp
sbbl
dec
inc
pop
ret
adc
xor
adcb
xchg
shr
hlt
add
sub
adc
ds
dec
in
fcom
or
ss
in
pop
push
or
jge
mov
jno
frstor
sbb
data16
xchg
push
andl
mov
sub
xchg
rol
testb
fbstp
int3
and
jae
sub
add
in
pop
popa
test
ja
sbb
jnp
mov
lds
iret
sub
stos
mov
fmull
dec
push
cmp
push
iret
pop
push
add
repz
cmpb
pop
inc
loope
lret
jns
push
mov
sbb
jmp
imul
and
loope
cltd
add
cmp
jle
pop
imul
dec
adc
inc
cmpsl
cmpsb
mov
cmp
pop
mov
hlt
add
add
rorl
cmp
enter
repz
push
mov
jg
in
or
lock
add
imul
mov
lret
insb
out
movsb
sbb
out
in
fstps
dec
jae
mov
rorl
inc
jno
popf
cwtl
add
mov
in
imul
pusha
lds
mov
hlt
mov
and
dec
mov
mov
out
push
popf
mov
push
mov
mov
test
lcall
xchg
dec
lahf
ret
test
pop
mov
ret
movsb
nop
pusha
lahf
pop
lahf
cmp
cmp
or
repnz
xchg
xchg
test
or
movsl
dec
xchg
push
jle
jp
xor
sahf
jae
xchg
xlat
sbb
dec
in
fsubl
dec
mov
inc
sahf
pusha
hlt
mov
div
xor
mov
mov
jbe
jnp
dec
cmc
push
sbb
adc
mov
stc
lret
mov
fisttps
add
mov
popf
stc
aas
shll
jp
roll
xchg
cltd
sub
mov
jo
popf
sub
pop
push
push
hlt
and
ror
add
cmp
sahf
and
rorl
es
xchg
pop
notb
inc
or
mov
mov
adc
mov
jbe
negb
mov
jle
jae
in
and
fldl
sub
mov
ds
imul
inc
xor
sti
pop
pop
out
push
mulb
pop
stc
adc
or
pop
sbb
mov
cmp
daa
xchg
xchg
roll
jns
pop
xor
dec
jno
test
adc
icebp
lods
jb
and
jle
subb
dec
pushl
cmpb
adc
push
cs
jl
jle
out
push
test
sub
repnz
stos
fadds
adc
idiv
and
in
pop
add
adc
ss
inc
mov
rcrl
std
enter
push
mov
stos
call
mov
pop
lods
xor
add
lret
mov
ret
mov
and
add
add
pop
xchg
push
cld
jbe
mov
dec
sub
aas
inc
sar
add
pop
push
inc
je
mov
and
int3
fmull
cwtl
mov
pop
sbb
inc
mov
std
inc
adc
pop
add
shl
or
iret
js
lahf
arpl
hlt
loopne
inc
add
lea
orl
ret
dec
mov
adc
iret
xchg
jmp
test
shlb
data16
adc
filds
in
imul
dec
cmp
ret
out
inc
push
lret
scas
adc
xchg
nop
mov
mov
sub
xor
lock
cltd
shrb
pop
sahf
and
mov
cwtl
fsubrl
sub
ss
das
pop
cmc
pandn
and
mov
add
stc
mov
pushf
sbb
xchg
scas
pop
imul
jns
rcrl
les
in
popf
sub
ja
mov
daa
pop
and
fsubs
jge
mov
jae
mov
inc
jmp
leave
dec
and
inc
aas
mov
adc
add
xchg
mov
xorl
fsubs
loop
ja
jb
sarb
je
sbb
xlat
fwait
mov
stos
jae
repz
inc
push
test
push
push
cwtl
pop
mov
cmp
cmc
sbb
cwtl
out
stos
in
cld
xchg
out
cltd
xor
cmpl
andb
mov
dec
fiadds
sub
mov
mov
fsubrs
fsubs
sarl
add
ds
mov
mov
inc
js
test
xchg
mov
pop
pop
mov
popa
stos
jnp
dec
dec
nop
test
inc
lock
mov
pop
inc
mov
nop
ds
mov
andl
inc
sub
sbb
mov
pop
mov
jnp
adcl
in
addr16
mov
int
pop
dec
sub
cmp
mov
add
nop
sbb
lds
mov
xchg
cmpsl
cmpb
lret
repnz
or
jmp
xlat
xchg
push
fcmovb
jno
or
pop
cmp
cmc
inc
test
aad
mov
test
int3
movl
imul
aad
fistl
dec
pusha
jo
shl
sbb
add
mov
stos
scas
cmp
adc
shlb
clc
dec
mov
mov
mov
fldt
out
in
fisubrs
adc
dec
pop
cwtl
jmp
gs
xlat
mov
add
jb
xor
cmc
test
add
xchg
jne
add
test
ja
xchg
mov
dec
cwtl
js
pop
or
mov
data16
xchg
jb
inc
int
push
and
jae
jne
adcb
js
sahf
sarb
dec
jmp
or
imul
imul
or
pop
jmp
inc
sbb
adc
loopne
xor
xchg
aas
bnd
fcoml
idivl
enter
mov
add
dec
push
sbb
fwait
push
decl
dec
aaa
inc
or
pop
rcrl
lret
cld
sub
sbb
out
pushf
les
mov
fistpll
fwait
adc
jno
mov
loopne
adc
into
cmp
test
mov
mov
sub
xor
cltd
pusha
inc
or
mov
je
daa
nop
arpl
movsb
cltd
mov
inc
test
cld
outsl
mov
scas
pushf
mov
mov
sub
jbe
dec
and
sti
pushf
fs
lock
or
hlt
mov
ret
mul
mull
movsl
inc
clc
shrl
pusha
add
shl
sub
leave
ljmp
dec
repnz
or
movsl
imul
mov
mov
popf
jecxz
imul
sti
xchg
cmovbe
dec
adc
scas
inc
xchg
inc
mov
testb
pop
cwtl
ss
cmc
add
data16
add
pop
and
inc
jo
jne
push
add
cmp
mov
pop
out
add
and
push
sub
fwait
nop
cmc
popa
pop
mov
push
pop
stc
fsub
adc
xchg
cmp
or
shll
pop
mov
adc
push
outsb
fdivrs
std
repnz
shlb
int3
loope
mov
es
scas
xchg
decl
mov
pop
aad
fadd
jb
inc
movsl
dec
sti
scas
cli
rolb
into
movsl
push
or
js
adc
fstp
js
xor
fists
sbb
pop
mov
leave
lds
or
sbb
movsl
imul
sub
mov
pushf
rorb
or
xor
xchg
movsb
lahf
test
mov
adc
mov
std
xchg
ss
neg
hlt
popf
jae
mov
push
cwtl
and
fsubrl
adc
and
or
sub
cld
repz
mov
stos
and
shrb
ja
rorl
dec
dec
ret
sbb
inc
mov
ss
sbb
adc
in
jmp
rcl
movnti
jb
mov
mov
popf
pop
push
mov
stc
cmpsl
lea
pop
stc
jge
popf
js
xchg
dec
repnz
cmp
into
loope
popl
call
sub
in
cmp
stos
mov
and
push
ds
jl
mov
pop
jle
sti
movsl
pop
sbb
or
or
adc
cwtl
mov
inc
jnp
and
ss
lods
call
push
inc
mov
pop
cltd
test
cmp
add
cmpsl
dec
call
mov
mov
jle
xor
dec
cmpb
cmpb
in
lahf
fidivs
mov
jns
scas
aam
fsubrl
rcrb
and
xchg
mov
pop
cmp
lret
test
mov
xor
xor
fcoms
pop
pop
push
mov
adc
adc
and
pop
jno
mov
jecxz
fcmovbe
xchg
xchg
out
jl
scas
movsb
out
dec
fisubrl
push
mov
mov
lods
push
inc
push
push
hlt
mov
aaa
xorb
jno
xchg
imul
pop
aad
dec
mov
in
pop
push
test
icebp
loop
je
xor
xor
jnp
js
bound
mov
cmp
inc
push
dec
imul
mov
xor
jp
fdivrs
test
and
pop
xor
aas
fs
repz
xor
insb
leave
inc
and
in
imul
aas
and
lret
outsb
loope
leave
xchg
int3
mov
psllq
popf
xchg
rcrl
add
stc
or
pop
js
dec
inc
popa
pusha
imul
sub
ljmp
add
xor
cmpsl
cmp
add
imul
and
fbld
adc
scas
outsb
scas
mov
add
dec
lock
and
stos
jne
mov
popa
xchg
cmp
pop
fcomp
ss
mov
in
loopne
pop
or
xorb
fst
cmp
scas
cli
dec
mov
scas
xor
fstl
xor
cmpsb
stos
add
xchg
jne
pop
add
fimuls
je
xchg
cmc
push
and
pop
das
adc
push
pop
push
outsb
mov
sub
mov
xor
push
push
xchg
cmpsl
xchg
adc
std
mov
inc
sub
ret
or
jl
push
xchg
or
stos
and
push
int3
mov
mov
loope
pop
enter
mov
inc
push
jl
stc
cmp
movsb
and
inc
dec
adc
call
mov
imulb
dec
or
sti
aas
mov
sub
lret
adc
mov
notl
inc
jle
cmpsl
jge
arpl
movsb
insb
imul
aad
mov
add
pop
aas
idivl
jnp
xor
mov
ss
xor
cs
inc
and
sub
cwtl
jmp
mov
xchg
movsl
mov
dec
repz
nop
and
xor
jo
out
or
rolb
loope
pop
mov
cmpsb
nop
call
cld
ja
leave
std
pop
gs
dec
jp
mov
out
nop
sub
mov
xor
inc
sbb
out
dec
add
ret
inc
mov
mov
or
mov
sbb
scas
into
call
adc
icebp
lods
adcl
popa
cmp
xcrypt-cfb
cmpsl
and
sub
xorl
lds
xchg
test
and
inc
push
or
dec
sub
inc
sub
and
ret
loopne
lahf
xor
sub
in
lea
cltd
rolw
mov
sbb
test
ds
mov
push
add
mov
inc
xor
popf
add
mov
lahf
jecxz
inc
in
arpl
int
push
add
arpl
js
or
push
cmp
or
mov
outsb
lcall
cld
scas
mov
stos
rcrl
xchg
or
loope
xchg
mov
aad
hlt
ret
xor
cmc
repz
lock
fisubrs
sub
sub
std
sub
stos
je
push
pushf
outsl
jle
mov
bound
bswap
mov
rorl
pop
push
sbb
push
lret
andl
sbb
xchg
push
stos
stos
mov
ror
outsb
int3
mov
pushf
push
sub
or
icebp
or
adc
fwait
daa
cmp
mov
shr
sbb
lea
repz
push
cld
add
out
loopne
shrl
sarl
mov
cmpsb
inc
pop
sub
inc
pop
xchg
hlt
insb
jne
pop
imul
jo
stos
xchg
push
sbb
mov
sub
inc
pop
loope
dec
dec
push
xchg
imul
pop
pop
mov
inc
inc
cmp
dec
sbb
jle
adc
sahf
ja
mov
inc
roll
outsl
or
fisttpl
mov
adc
xor
sub
stc
inc
mov
inc
xchg
and
arpl
enter
les
imul
jge
add
xor
in
or
jnp
mov
nop
fdivrp
shl
jp
rcrb
insb
and
push
jo
xor
xor
jbe
sub
pop
aaa
jmp
lcall
lret
mov
mov
jns
or
fistl
cli
in
nop
std
fstl
pop
out
push
cmp
mov
mov
sahf
jnp
mov
cmp
ljmp
lea
leave
loope
adc
sub
dec
push
lods
adc
and
and
xchg
outsl
mov
icebp
cltd
stos
imul
mov
mov
enter
insl
push
sub
and
xor
jno
fsubrs
daa
inc
lahf
in
int
dec
in
cmp
push
push
int3
pusha
push
mov
mov
jp
mov
ret
mov
push
mov
sbb
inc
sub
cli
lock
mov
sbb
lahf
rorl
pop
or
sub
dec
xchg
in
sti
inc
inc
mov
cmpsb
mov
shrl
mov
and
push
in
mov
mov
fcompl
cmp
push
cmp
mov
pop
and
cs
mov
xor
fdivrl
rolb
fnsave
sub
cmp
xchg
mov
mov
push
sbb
add
fcmovu
mov
add
pushf
jmp
cmp
aad
and
pushf
icebp
cmp
enter
pusha
clc
pop
xor
fwait
sbb
ret
mov
aam
dec
jle
pop
xchg
fmulp
cmp
stos
addr16
cmp
xor
ret
xor
fsubl
aas
mov
aaa
jno
jne
mov
sub
inc
leave
cmp
inc
pop
mov
inc
cmp
and
sahf
jl
popa
shl
xor
cmp
pop
jmp
popf
or
in
xchg
xchg
loop
in
int3
test
and
in
fdivr
in
and
sub
jle
xchg
mov
insl
fimuls
mov
pop
sub
jmp
je
inc
cmp
and
sarl
cmc
sub
out
fisttps
jge
sbb
mov
mov
pop
mov
xor
push
cmpsb
in
mov
add
leave
jmp
icebp
shlb
fsubrl
fmuls
mov
jno
loopne
mov
and
scas
add
stos
fdivrl
leave
pop
shrl
enter
mov
lret
aad
aad
ss
sti
and
test
sub
mov
enter
rorl
mov
xchg
dec
sub
pop
imul
cmp
int
push
je
scas
aaa
sub
lods
push
lret
enter
neg
stos
sub
sar
rorl
xor
jae
mov
movsb
nop
adc
xchg
dec
nop
scas
out
jo
std
inc
js
dec
add
mov
or
mov
cmp
and
dec
xor
test
lods
mov
xchg
fistl
out
xchg
bound
sbb
orl
js
outsb
xchg
loop
xor
push
add
sub
fcompl
xchg
jns
loop
push
bnd
push
lcall
out
xor
and
mov
or
lds
push
sahf
inc
dec
and
dec
mov
and
leave
xchg
mov
push
xchg
hlt
int3
and
mov
cs
mov
mov
repnz
andb
cld
and
aam
rcrl
idivb
mov
lahf
repz
xchg
push
popa
jae
pop
mov
pop
adc
and
lret
or
arpl
aam
sub
cli
xor
ja
rorl
in
out
stc
int3
mov
jmp
jnp
mov
call
lret
pushf
test
aam
xor
and
jo
mov
jecxz
xchg
mov
push
push
std
mov
insb
scas
sbb
mov
jmp
inc
lcall
mov
nop
pop
enter
xor
xlat
insb
sahf
adc
push
adc
or
in
gs
into
xchg
shl
cmp
mov
sub
fisttpl
ss
sub
leave
cld
push
pop
lods
fdivl
mov
sbb
std
int3
or
mov
pop
pop
pusha
mov
jge
jo
scas
mov
out
int3
add
mov
adc
cld
inc
inc
mov
iret
or
hlt
xor
popa
push
movsb
lock
mov
into
pop
inc
push
imul
inc
insl
jp
adc
pop
aam
lods
insb
je
subl
data16
ret
inc
leave
mov
cs
cmp
pop
dec
xchg
sahf
jl
push
push
xor
ljmp
lods
and
fists
cmpsb
fdivr
push
push
adc
mov
aas
bound
lds
cwtl
dec
jg
scas
out
mov
adc
popf
fwait
outsl
push
hlt
fxch
call
sbb
lahf
int3
aas
and
shr
repnz
fisubrs
sbb
call
addr16
push
add
cld
mov
cld
lock
mov
inc
sub
sbb
test
mov
jmp
pop
and
jmp
push
cmovbe
add
sbb
or
sub
inc
aad
popa
int3
pop
sub
int
aad
sbb
dec
cmp
push
or
adc
mov
stos
scas
ds
das
jne
rep
fcoml
fs
cs
dec
mov
loopne
pop
cli
in
test
dec
adc
lds
inc
adc
push
push
mov
push
jb
pop
lds
mov
ret
fsubrl
xchg
enter
mov
mov
mov
test
jnp
sti
cwtl
pop
adc
or
mov
inc
mov
mov
btr
sub
insb
arpl
inc
insl
scas
mov
cmp
pop
jmp
dec
jae
xchg
stc
add
push
movsl
inc
mov
cltd
shl
mov
adc
sub
jae
iret
dec
add
xchg
xchg
rclb
adc
xchg
pop
mov
iret
std
xchg
aas
test
dec
je
dec
mulb
inc
push
lret
jmp
inc
add
mov
mov
mov
insb
scas
mov
xor
popf
sbb
xor
push
out
mov
mov
cmc
xchg
ds
rclb
test
xor
push
js
das
loope
mov
in
sbb
scas
mov
das
pop
fwait
inc
xchg
stos
ss
add
xchg
pop
jecxz
push
pushf
pop
add
cmpsb
inc
xor
xor
loopne
movl
cmc
and
fcoms
dec
add
shl
mov
test
pop
dec
add
mov
mov
dec
xor
adc
xor
jb
adc
fisttpl
add
adc
jl
or
iret
hlt
xchg
fcmovu
mov
dec
xchg
scas
fwait
outsb
sahf
aas
insb
mov
or
pop
enter
push
dec
lret
pop
dec
adc
inc
adc
out
push
movsl
les
jle
fldcw
xor
pop
mov
dec
jg
xchg
inc
jo
cmpb
ljmp
jbe
jl
sbb
xor
mov
xor
test
lock
test
xchg
fsubl
mov
jnp
shr
lcall
outsl
jno
shlb
jnp
hlt
cmc
xchg
bound
jp
lock
outsl
cmc
jmp
daa
orb
mov
bound
je
inc
ret
sub
jp
cmp
dec
fnstcw
movsl
adc
in
nop
cs
mov
jne
in
lds
dec
lret
pop
jmp
pushf
nop
add
out
fs
lcall
fimuls
cmc
add
xor
inc
fwait
mov
xor
ret
jne
call
repnz
adc
subb
mov
lock
mov
ss
jmp
vshufps
xor
les
pop
lahf
cmp
arpl
dec
jnp
lret
add
loope
add
ret
aas
test
sub
ficoml
gs
sbb
push
and
imul
xchg
fdivr
pop
lds
lock
pop
pop
cmp
aam
repz
push
inc
push
or
daa
jle
pop
cmc
pop
lods
jl
lock
sub
ds
lds
push
scas
js
stos
mov
mov
ret
push
xor
int3
sbb
in
or
js
rcl
repz
lods
cmp
jge
xchg
loop
xor
aam
lods
scas
mov
fldenv
cmpsb
sbb
test
mov
jmp
sub
call
add
inc
scas
jg
cmp
and
mov
pop
mov
xor
leave
mov
iret
fwait
pushf
inc
test
jb
stc
sub
add
enter
xchg
push
int3
pop
sub
in
lret
jns
mov
pop
test
sub
repnz
nop
jns,pn
or
inc
sbb
inc
ljmp
xor
jg
sahf
cmpsl
mov
ss
pushf
push
imul
or
xor
push
ja
mov
ret
mov
insb
mov
or
mov
mov
sbb
add
out
sub
stos
mov
dec
push
jmp
and
rclb
daa
sub
adc
dec
mov
outsl
imul
jge
ret
aad
mulb
fldenv
dec
movsl
mov
xlat
jnp
push
jne
leave
sub
pushf
pop
push
lea
lods
lods
pop
jle
insl
inc
rcll
outsb
les
out
dec
aam
jge
loope
push
and
subl
leave
xor
jmp
mov
mov
push
mov
call
adcb
call
jl
mov
dec
sahf
mov
rcll
iret
add
aaa
fmuls
adc
xchg
cs
bound
cmp
shll
pop
sbb
scas
mov
fnsave
pop
cmp
push
inc
mov
pusha
adc
push
sub
mov
pusha
sub
lret
and
pop
jg
jmp
pop
adc
jmp
xor
aaa
lret
adc
orl
pop
cmp
mov
mov
xor
xchg
out
test
loopne
mov
jbe
leave
push
js
repnz
repz
ret
scas
lods
flds
adc
mov
je
ret
mov
push
ja
int3
rorl
pop
ljmp
inc
aas
out
cmc
mov
jmp
shrb
aam
lods
pop
adc
gs
enter
xor
sahf
aam
loope
ret
inc
jmp
cmpsl
cmpsl
push
pop
inc
pop
and
aam
enter
cld
and
xor
js
jmp
mov
lahf
loop
rcrb
mov
or
popw
fistpl
sbb
js
pop
es
pop
xor
mov
pop
cmp
arpl
push
push
xchg
mov
push
mov
dec
xchg
call
sub
lods
sahf
scas
push
xchg
je
les
ja
outsl
push
outsb
sti
cmpsb
mov
les
xchg
rorl
insb
lret
pop
loop
inc
pushf
push
xlat
fs
xchg
pop
adc
ss
roll
aas
mov
add
and
inc
daa
int3
mov
into
fldl
sbb
sbb
jns
pop
xor
mov
mov
iret
or
aas
sub
ret
adc
xor
in
add
mov
das
in
jecxz
add
or
pop
jne
mov
and
sahf
cmp
mov
lret
cmpsb
push
aam
mov
and
mov
cld
pop
mov
mov
push
pop
sar
sub
repz
push
test
stos
pushf
cmp
cld
sarb
fsubs
fdivrl
xor
jmp
xchg
shrl
xchg
test
mov
or
pop
push
push
jle
les
or
xchg
es
xor
cmp
fidivl
in
inc
xor
sti
les
jne
stos
cld
push
adc
in
and
pop
pop
lcall
movsb
aas
outsl
cmp
push
inc
std
and
shl
ror
mov
pop
or
cmp
mov
subb
shll
or
aas
dec
les
aad
int
imul
ds
insl
sbb
bound
iret
stc
roll
daa
jno
add
push
loop
ljmp
push
pop
sbb
sub
mov
mov
add
and
and
shlb
fldenv
jae
add
cmpsb
inc
in
pop
cld
xchg
adc
xor
sbb
xor
hlt
jno
mov
jp
xchg
pop
dec
nop
inc
jg
mov
sub
stos
pop
int
bound
mov
inc
shrl
movsb
sub
push
or
ret
test
cld
add
repnz
push
sti
mov
in
int3
nop
sar
enter
cmpb
and
jo
inc
and
mov
pop
and
dec
fiaddl
leave
xor
mov
xorb
and
dec
nop
pop
pop
xor
xchg
adc
mov
or
mov
sub
je
mov
fisttpl
enter
lock
clc
fbld
pop
cmp
dec
cmpsb
mov
sti
fimull
dec
inc
lret
pop
lret
cmc
into
stos
movl
xchg
rcll
pop
fidivl
ret
dec
jno
or
inc
dec
or
int
xchg
jnp
sahf
lds
adc
loope
add
cmp
mov
pop
dec
cmp
aad
push
daa
mov
mov
add
data16
cmc
lcall
sbb
les
fsts
fimull
push
pop
test
movsl
mov
in
cmp
pop
decl
or
inc
cmc
mov
pop
add
fistps
rclb
push
mov
cwtl
iret
scas
lock
push
insb
dec
icebp
cmpsl
mov
mov
mov
sub
jae
adcl
inc
lcall
dec
cltd
call
add
add
pop
push
popa
dec
and
jne
icebp
mov
movsl
je
jne
data16
xchg
scas
fadds
rorb
mov
and
cli
insl
add
xchg
sahf
jns
ss
pop
sbb
push
addl
mov
fs
loope
ret
cli
les
insb
xchg
pop
dec
or
insb
dec
dec
mov
inc
aad
addr16
lods
add
cmp
sbb
lahf
push
aaa
movsl
mov
jnp
mov
jb
fmulp
out
es
shrl
lds
jb
fiadds
int3
enter
pop
stos
add
add
cld
aad
and
leave
sbb
xlat
pop
scas
dec
mov
cwtl
and
cmpsb
imul
pop
outsl
inc
out
jnp
or
es
insb
and
les
xor
adc
nop
mov
mov
rorl
xor
add
outsl
lds
push
inc
andb
mov
mov
popa
jno
add
subb
icebp
movl
pop
pushf
loopne
inc
mov
jno
xchg
repnz
mov
jl
xchg
pop
lea
pop
pop
ljmp
xchg
int3
in
sub
into
xchg
mov
bound
mov
mov
sbb
test
inc
adc
mov
rcr
mov
stos
je
sub
mov
jecxz
addl
sbb
sahf
fdivs
rorb
jle
sbb
cmp
ror
mov
fst
in
mov
cli
jbe
sbb
sbb
cld
jno
outsb
mov
xchg
pushf
clc
push
xlat
inc
loopne
pop
mov
aas
inc
mov
inc
cld
lahf
xor
xor
mov
cmp
mov
push
stos
int3
cmp
mov
pop
inc
adc
jle
ficoml
sbb
stc
shlb
or
mov
aaa
bound
adc
push
adc
les
clc
int
sub
cmpsl
xor
insl
stos
jmp
cltd
pusha
mov
add
pop
mov
std
jmp
sub
insl
cli
add
mov
cmp
stc
test
sub
bound
pop
dec
mov
int
mov
mov
adc
xor
jns
dec
bound
ret
fnstsw
pop
dec
and
push
sub
cwtl
cmp
push
enter
out
dec
cmp
and
jl
popf
xor
add
stc
bound
dec
or
cmp
mov
mov
rorb
dec
sub
and
lret
xchg
adc
pop
loope
xchg
aas
xchg
xchg
scas
sbb
mov
add
jae
xchg
test
dec
push
pop
test
outsb
and
aam
lcall
inc
dec
cmpsl
test
push
jns
mov
jle
cmp
xor
jecxz
mov
mov
mov
rorl
xlat
adc
add
les
pop
in
lcall
test
inc
push
stos
pop
or
pop
lods
addr16
adc
pop
lods
xchg
rorb
mov
js
push
rol
movsl
lret
loope
loope
mov
cli
xor
ret
stos
and
loop
sbb
jo
push
fldl
out
sbb
dec
movsb
enter
bnd
sbb
outsb
insb
fcoms
in
sub
jge
and
pop
lret
cltd
mov
pusha
movsl
dec
lret
sub
pop
test
jns
aas
mov
movsb
nop
cmpsl
mov
cmp
mov
xchg
mov
fisttpl
mov
push
inc
jecxz
movsb
mov
aam
aaa
repnz
jmp
sarb
cmp
adc
pop
mov
xor
enter
cld
sub
cmp
cli
cmp
call
sbb
sbb
mov
xor
inc
sbb
les
adc
pop
inc
ret
daa
jle
sbb
fiaddl
cwtl
add
jmp
sbb
pop
lods
mov
xor
push
cwtl
test
enter
sbb
movsl
mov
das
enter
mov
int3
lcall
leave
movsl
push
cmpl
pop
jno
sub
addr16
mov
or
ret
aam
push
lock
nop
xchg
adc
int3
mov
stos
sub
imul
dec
xor
aas
or
rcrb
xor
jmp
cmp
out
pushf
xchg
out
push
int3
and
mov
mov
push
jns
decl
pop
add
in
nop
stos
das
stc
xor
push
pop
rcr
addr16
ljmp
adc
ds
mov
or
ss
cmp
and
sub
add
aaa
mov
and
rcl
or
in
or
enter
in
out
les
fadd
jge
test
sbb
sub
xchg
xor
adc
mov
ss
pop
testl
lock
scas
jo
pop
pop
cmp
xchg
cmpsl
push
loopne
dec
mov
lods
mov
add
inc
sub
je
and
cmpsb
test
pop
ficomps
leave
sub
rcrb
stos
enter
push
push
xchg
lahf
or
cmovl
xchg
sbb
repz
xlat
lods
cmpsb
icebp
mov
dec
add
lods
push
lock
adc
inc
mov
mov
out
xchg
fmuls
fisttps
xchg
mov
adc
cmp
aas
mov
mov
jne
pop
lods
add
xchg
xchg
das
push
cltd
cmp
push
jne
inc
les
fisttps
in
aaa
jg
frstor
pop
pusha
popa
enter
or
xorb
enter
insb
sbb
notb
insb
sub
add
inc
lcall
rorl
fisubrs
mov
cmc
dec
cmp
fs
push
fwait
jo
and
notl
push
push
loop
int
scas
cwtl
mov
or
xor
outsl
test
adc
ds
xor
addr16
mov
addr16
addr16
out
xchg
clc
clc
mov
cld
in
jmp
sub
xor
and
repnz
pusha
jmp
test
pop
fs
inc
gs
adc
pop
lret
xor
scas
xor
pusha
mov
insl
mov
das
jl
in
dec
lret
rol
cmp
pusha
jmp
mov
cmp
scas
xchg
sub
paddusb
xchg
cli
ljmp
pusha
test
shlb
sbb
movsl
xor
test
mov
mov
out
jmp
stos
stos
loopne
inc
loop
dec
rol
add
cld
jecxz
mov
sahf
push
movsb
nop
cwtl
mov
roll
adc
inc
lahf
ret
int
sbb
mov
std
xchg
lods
sub
pop
jecxz
or
loop
pop
repz
adc
lahf
mov
into
aad
push
shrl
inc
and
mov
lahf
stos
sti
leave
add
mov
inc
stos
adc
ds
movsl
pop
pop
jge
sbb
clc
push
subl
sbb
mov
adc
adc
loope
fs
mulb
push
pop
pushf
xchg
das
xchg
or
lcall
jl
out
or
popa
pushf
and
out
xchg
popf
xchg
mov
push
add
in
mov
push
inc
in
lods
xchg
scas
aas
fwait
mov
dec
dec
loopne
je
lret
ror
dec
pop
adc
movsb
jae
leave
ljmp
mov
lcall
mov
jmp
test
xchg
or
stos
dec
pop
fcmove
cmp
in
mov
imul
jle
jecxz
fisubrs
xchg
sti
adc
cmp
cld
dec
mov
pop
mov
enter
cltd
or
push
enter
stc
pusha
jns
xchg
fadds
push
movsb
sbb
fdivp
mov
sub
jle
fs
sbb
xor
mov
inc
pop
mov
dec
or
or
dec
lret
shrl
pop
fmuls
dec
sbb
push
and
cmp
mov
jo
stc
or
call
cmp
cmp
jae
sar
cmp
cld
xor
push
lock
mov
jg
idivb
xor
xchg
cmp
or
outsb
jbe
movsl
push
mov
into
rclb
mov
mov
xor
mov
lods
pusha
jle
sub
push
sub
hlt
mov
pop
lcall
pop
es
jbe
inc
in
inc
xchg
scas
xchg
pop
cmpb
loop
rcrb
in
and
cs
sbb
inc
imul
cmp
sub
mov
jbe
rolb
cli
push
mov
adc
mov
sbb
test
mov
aam
adc
out
insl
add
andl
push
daa
lods
pop
rolb
dec
gs
mov
nop
pusha
addr16
nop
or
jno
dec
jae
js
jl
mov
fs
mov
pop
outsl
cmc
cld
imul
inc
pop
rol
lret
test
into
test
test
mov
add
lcall
ss
xchg
pop
shll
push
pop
out
leave
insb
arpl
adc
xor
inc
popa
jb
push
pusha
or
dec
push
inc
out
sbb
int3
out
mov
dec
cmp
in
sub
test
stos
leave
dec
lods
and
in
imul
jnp
or
mov
les
js
fs
mov
imulb
out
mov
mov
jae
cmp
test
mov
out
xchg
mov
xchg
push
inc
mov
bound
arpl
xor
data16
lret
and
dec
add
fxch
push
inc
test
inc
inc
lret
sbb
fcoml
fs
sbb
icebp
sub
push
fnstsw
sub
test
int
mov
sbb
ja
adc
enter
jecxz
jmp
dec
sbb
cld
dec
addr16
iret
in
adc
xor
orb
insb
das
add
pop
shll
push
jo
inc
inc
xlat
fbld
test
call
jae
mov
pop
cmpsb
subb
lods
into
enter
or
and
cwtl
xchg
xlat
xor
pop
test
fildll
sub
or
andl
shrb
mov
jno
jne
mov
lock
pop
f2xm1
popf
sti
jno
jne
mov
sub
jno
sbb
rol
jge
into
movsl
nop
or
fmulp
loope
or
cltd
rorb
xchg
movsb
and
mov
jo
mov
aam
push
test
rcrl
inc
sbb
or
imul
dec
imul
fdivl
and
jb
add
or
sbb
popa
sbb
sub
cltd
cwtl
or
stos
sub
sbb
cmp
cltd
and
pushf
cld
subb
insl
movsb
ds
push
sahf
adc
mov
loop
jno
jne
mov
xor
pushf
pop
rcrl
inc
inc
test
popf
push
stc
fildll
sbb
ds
notl
call
leave
pop
add
dec
push
xchg
mov
mov
push
test
mov
inc
test
jmp
cmp
out
jp
test
icebp
jle
stos
fwait
pop
sti
fs
and
jne
pop
fwait
test
cmpsb
cmpsl
mov
mov
push
dec
push
cld
rcr
mov
mov
andl
push
fisttps
aad
mov
mov
inc
push
sub
popa
adc
push
ja
jp
inc
mov
addr16
adc
daa
dec
notl
mov
adc
cmp
xchg
xlat
bound
jo
push
dec
lock
sub
aam
xchg
repz
stos
jl
cmp
push
jmp
pop
inc
out
jge
inc
rcl
daa
popa
sbb
push
sub
ror
inc
pop
and
shll
lock
les
sahf
pop
mov
insb
mov
fcompl
cld
in
mov
cmp
inc
mov
push
jmp
imul
and
jg
pop
and
stc
clc
jno
ljmp
jp
sub
cld
inc
fcmovnbe
mov
es
adc
pop
imulb
push
lods
pop
jge
repnz
sbb
loope
jmp
mov
andb
mov
pop
push
leave
sub
mov
dec
cwtl
xor
das
xchg
ja
aaa
adc
cmp
xchg
mov
pop
es
dec
ljmp
mov
fbstp
inc
mov
cld
pop
sub
shlb
dec
cli
and
jnp
leave
mov
mov
pop
xor
dec
ljmp
and
insb
ds
insb
cmp
cs
je
sbb
mov
sub
insl
pop
scas
popa
pop
xchg
gs
and
pop
mov
mov
sub
popf
cld
addr16
sub
or
imul
mov
sbb
push
fiadds
jge
mov
jmp
jmp
inc
loopne
popa
inc
lock
jo
jmp
and
dec
les
mov
jl
inc
xchg
jae
roll
shrb
in
out
sar
lds
fwait
insb
popf
mov
and
fstps
mov
popf
adc
mov
and
pop
mov
pop
dec
lret
jmp
enter
lock
in
enter
xor
xchg
mov
rcrl
and
jge
fdivrl
pusha
xchg
jmp
pop
and
mov
insb
sub
sbb
fists
push
sahf
mov
lock
push
or
int
in
inc
cmp
mov
mov
rcrb
dec
and
leave
out
es
cmp
je
rcll
fucomp
adc
into
and
in
xor
mov
pop
pop
hlt
mov
xchg
leave
fucom
lods
js
out
mov
xor
nop
mov
sbb
test
sub
lock
jb
or
mov
sub
dec
fwait
or
leave
xor
fidivs
rcrb
test
cltd
or
inc
jns
xchg
rcrb
inc
and
xchg
cmp
test
stos
pop
pushf
lcall
inc
dec
and
cmove
dec
cmpsl
xchg
push
pop
sbb
rolb
std
sub
lock
and
and
sbb
jp
mov
subl
shrl
xor
and
mov
xor
fsubrl
je
divb
fiadds
mov
and
mov
pushf
inc
mov
pusha
xor
dec
rclb
rcr
mov
mov
je
sub
loope
mov
dec
adc
pusha
or
shr
sub
enter
and
aas
push
cmp
scas
mov
ret
mov
xor
pop
js
bound
sub
lret
je
lret
or
add
scas
gs
xorb
imul
xorb
in
je
imul
mov
xchg
cmp
pop
sbbl
out
out
push
inc
mov
or
fcmovne
cmp
mov
addr16
leave
mov
sbb
xchg
addr16
xchg
movsb
ds
adc
inc
lods
xor
cmp
les
ja
sbb
or
and
xchg
shll
cli
pusha
mov
and
popa
cmpsl
sahf
jo
pop
push
lahf
outsb
pop
shll
ret
xor
pop
push
cmp
mov
in
cld
pop
fistps
cmc
es
call
leave
leave
stos
mov
sub
dec
pop
cld
sub
pop
xor
shrl
cli
push
mov
add
testl
sbb
cmp
dec
inc
add
incb
cmpsb
sbb
sub
imull
fwait
je
dec
sti
mov
jl
jnp
adc
push
add
cmp
dec
out
outsb
imulb
jl
adc
mov
lods
lret
aam
out
test
movsb
mov
lock
mov
cmc
andl
xor
test
push
add
jg
rcll
sarl
nop
insb
mov
shr
xchg
pop
push
add
adc
adc
inc
xchg
mov
cs
inc
shll
nop
mov
jnp
loope
mov
xchg
add
es
sub
fsubrs
add
fldcw
jb
sahf
jnp
mov
mov
lret
movsb
ljmp
inc
into
pop
cwtl
out
in
in
lcall
and
and
arpl
mov
inc
fisubrs
or
shlb
lret
mov
cmp
cmp
or
ja
jno
out
cmp
aad
sbb
ret
aam
xchg
cmp
cmp
mov
xchg
push
inc
cmc
inc
pop
leave
leave
gs
faddl
daa
or
frstor
jnp
inc
pop
add
sti
dec
adc
decl
sbb
in
xor
sub
pop
sub
jge
mov
cwtl
nop
mov
mov
mov
add
filds
jl
push
add
or
fs
fimuls
les
outsb
pop
jo
mov
cli
repnz
jo
aaa
ss
adc
cmp
ds
repz
and
stos
push
adc
movsl
push
test
and
jb
xchg
lods
lock
xchg
arpl
aad
sbb
pop
xor
nopl
rorb
inc
mov
pop
and
sbb
jne
stos
test
stos
iret
shl
push
jle
push
push
mov
jae
faddp
arpl
in
clc
xchg
add
sub
dec
sub
idivl
fdivrl
aas
orl
add
xchg
mov
dec
iret
hlt
sarl
or
mov
jnp
popf
pop
mov
cs
sahf
inc
nop
loopne
sub
aam
adc
xchg
jmp
sub
jae
sub
mov
jbe
lret
xor
and
xchg
icebp
sub
pop
sbb
mov
mov
pop
mov
pop
sbb
and
inc
ljmp
in
in
stos
std
xor
lods
popf
sub
data16
aaa
sub
push
and
push
daa
lret
stos
cmp
add
cli
xchg
pushf
nop
jmp
lahf
test
mov
sti
cmp
daa
jp
jb
enter
sbb
arpl
push
mov
aam
add
mov
clc
add
imul
mov
insb
xchg
mov
iret
mov
and
jno
loopne
mov
hlt
xor
adcl
and
imul
sub
mov
mov
xchg
inc
pop
lods
xlat
fcmovb
mov
dec
push
adcl
mov
xchg
aas
loop
popa
das
flds
enter
push
fimull
mov
cmp
mov
rolb
xchg
orl
movsb
iret
jp
insl
mov
sbb
pusha
and
dec
add
mov
mov
sbbb
mov
jno
or
jge
ret
mov
lret
jb
mov
add
pop
xor
dec
or
iret
lret
pop
adc
sbb
inc
mov
sub
and
mov
ds
pop
jnp
pop
insl
imul
icebp
rcrb
mov
mov
mov
xchg
pop
jae
jae
mov
pusha
dec
fldcw
aad
lods
shlb
loope
scas
inc
or
inc
sub
test
jb
xlat
cmpsb
fs
stos
push
mov
push
shll
push
jae
or
into
pop
out
in
jl
jae
outsb
test
mov
std
mov
lods
rclb
pushf
iret
lahf
jmp
ja
or
int
fnsave
sbb
and
loop
push
jns
popf
and
push
add
jmp
or
mov
push
sub
in
or
ss
xor
pop
adcb
fisttps
fwait
ljmp
mov
inc
pop
sbb
test
mov
shlb
mov
pushf
jb
scas
xchg
roll
lods
push
or
stos
mov
dec
adc
scas
leave
ficomps
mov
cmp
pop
inc
cmp
inc
int
jle
repnz
ljmp
pop
mov
push
test
rorb
add
sub
mov
xor
fldenv
imul
test
cmp
mov
test
das
in
or
push
xchg
xor
scas
adc
and
jle
insl
adc
fidivrs
mov
ljmp
mov
outsb
movsb
leave
mov
cmp
xor
adc
repz
ret
js
insl
inc
pusha
jb
sbb
cwtl
pushf
pop
pop
push
or
sub
cmp
adc
leave
aam
pop
data16
addr16
lahf
fistpl
mov
lahf
cmp
pop
xor
xor
std
daa
sbb
cmp
movsb
das
pusha
jmp
push
js
rorl
cltd
dec
js
repnz
aam
sub
outsl
jo
aas
xor
mov
pop
xchg
pop
pop
ja
js
pop
ljmp
jno
push
aaa
repz
outsb
jbe
sub
stos
addr16
jno
cmpsb
sub
ret
jb
inc
test
jbe
jo
bound
push
mov
xor
cmc
lock
notl
outsl
fsubl
mov
adc
jecxz
std
fists
test
push
popf
and
mov
pop
and
dec
xchg
cwtl
cmp
hlt
sbb
mov
push
mov
int3
mov
push
push
cs
cmpsb
inc
xor
jne
dec
stc
pushf
rorb
clc
xchg
mov
lcall
xor
pop
add
xor
ja
popa
dec
in
int3
cmpsl
sub
lcall
scas
adc
mov
push
fiaddl
movl
lret
lcall
mov
je
xchg
popa
push
pop
mov
ds
mov
add
iret
sbb
xchg
jmp
mov
or
mull
lods
inc
jo
xchg
cmpsl
nop
insl
ljmp
les
mov
int3
sbb
mov
je
push
lcall
cmp
test
daa
pop
mov
cmc
fsubrs
nop
lods
lods
pop
mov
iret
bound
aam
aad
mov
inc
xor
xchg
jg
sbb
adc
mov
sahf
repz
pop
sbbl
push
push
outsb
daa
imul
jle
test
les
inc
in
lret
or
out
pop
jns
mov
mov
dec
test
inc
xor
imul
push
cmpl
dec
das
ffree
xor
imul
bnd
test
les
and
mov
xor
xchg
pop
and
pop
iret
mov
ss
fdivrs
or
adc
hlt
les
cmpsb
mov
outsl
jl
pop
mov
test
das
test
cwtl
jge
mov
icebp
or
push
arpl
sub
dec
mov
andl
pop
adc
mov
xor
push
xor
test
mov
jae
cmp
adc
int3
pusha
sti
cmp
lods
cmp
pop
fsubl
lcall
imul
jne
push
push
dec
lods
and
fdivr
mov
fs
or
pop
cmpsb
fisubrs
xchg
mov
arpl
jo
out
add
test
mov
outsb
test
jo
inc
mov
push
test
shlb
xchg
cmp
sbb
cmpsl
sbb
mov
movsl
into
int
orb
aaa
or
add
imul
cs
loope
pushf
decb
testl
sbb
cmp
jb
jp
inc
inc
mov
ja
push
add
push
ret
mov
push
std
push
sub
cmp
jo
xchg
cmp
inc
and
icebp
scas
or
jge
cmp
and
jl
jns
aad
pop
daa
nop
add
lods
scas
dec
nop
jbe
ret
mov
jl
xor
dec
setge
ret
push
enter
sbb
clc
enter
jb
jb
arpl
arpl
jecxz
mov
cwtl
test
out
push
sti
dec
mov
loope
xlat
stos
add
das
mov
adc
aas
arpl
sub
inc
sub
sahf
sbbl
out
sub
fs
in
sub
add
xchg
mov
pop
sahf
lret
cmp
cmp
add
pop
xor
popa
jnp
lods
nop
ret
fsubl
mov
orb
ds
out
cmp
pop
stos
xchg
nopl
xchg
jp
movsb
inc
je
testb
pop
inc
xchg
or
lea
lahf
ja
aad
or
sbb
jg
sub
nop
lcall
dec
xlat
nop
andb
repnz
mov
pop
pop
leave
adc
cmp
sbb
pusha
ljmp
and
gs
xchg
imul
cmp
cmpsl
pushf
nop
inc
inc
mov
lret
outsl
mov
das
out
lods
stc
aas
popa
jo
xchg
cmp
popa
filds
xchg
movsl
fisubrl
sahf
int
cmp
dec
ror
pusha
lahf
mov
fldcw
ret
addr16
jecxz
xorl
lds
andb
pop
mov
icebp
fbld
mov
in
imul
mov
aam
ret
pushl
fptan
sub
and
push
and
pop
outsl
jl
hlt
shrl
jbe
inc
sub
jmp
in
insb
cmpsl
out
dec
ljmp
dec
push
fsubr
rol
lcall
lret
mov
mov
and
push
inc
push
ds
popa
push
mov
cmpsl
popa
pop
pop
dec
mov
cmp
popa
loop
inc
fcoms
pop
je
in
push
xchg
sub
in
inc
fisubl
lods
aas
aas
mov
cmp
cld
popf
adc
cmp
test
jns
in
sub
sub
test
xchg
pop
leave
xchg
test
into
mov
ja
int
andb
dec
stos
fbld
pop
mov
xchg
dec
xchg
push
push
adc
xchg
xor
and
inc
add
xor
stc
sti
das
mov
ret
lods
jmp
mov
mov
daa
add
push
pop
sahf
scas
test
and
dec
iret
mov
fsts
rolb
mov
push
xor
lock
mov
call
push
xor
sahf
scas
inc
xor
loop
orl
aam
ftst
cltd
sbb
push
cmp
js
ret
jge
mov
mov
push
or
fsts
ss
test
shrl
addr16
cmp
cwtl
mov
rcrb
jns
xor
push
outsb
out
jb
xor
pop
mov
mov
aam
jg
jns
pop
cmp
sub
bound
leave
adcl
inc
dec
pushf
inc
loop
lret
lahf
ret
pop
aad
and
cltd
clc
jl
sub
pop
or
dec
aam
fsub
mov
cmpsb
scas
int3
inc
pop
nop
leave
sbb
jle
jbe
rolb
mov
jmp
and
add
mov
pop
xchg
filds
inc
addr16
vshufps
outsl
loope
lods
xchg
inc
lods
xchg
cmp
inc
lock
test
fwait
and
inc
hlt
cmp
out
xor
addr16
shll
shll
sarb
sbb
jbe
loope
cmp
pop
add
sahf
dec
cmp
and
fcoms
test
adc
add
lahf
int3
jl
lahf
ret
sbb
lods
das
xchg
repnz
inc
lds
gs
xor
dec
test
fimull
int3
push
out
xor
push
jmp
sub
mov
add
jb
pop
cmp
dec
pop
icebp
aaa
xchg
push
bound
inc
push
nop
or
call
test
pop
xchg
push
sub
rorb
mov
and
idivl
mov
mov
pop
loopne
dec
out
pushf
gs
cld
or
adc
pop
sub
ja
mov
mov
and
jns
cmp
mov
mov
pop
cmc
into
adc
mov
add
and
adc
inc
ljmp
fdiv
lahf
enter
iret
loopne
or
push
inc
xchg
js
xchg
cmp
out
fs
lods
and
shrb
int3
xchg
push
sbb
and
repz
mov
test
mov
or
xor
jge
jne
inc
cmp
push
arpl
push
push
push
mov
sub
fdivrl
mov
lcall
bound
dec
addr16
popf
pop
cmp
fs
mov
xor
inc
sub
inc
pusha
mov
sub
pop
icebp
insl
jg
xchg
and
sbb
add
add
adc
dec
outsb
adc
test
lds
out
ret
cmp
fwait
loopne
mov
repnz
movsl
les
fwait
cwtl
aaa
rcl
scas
xchg
pop
out
pop
movsb
xor
xor
cmp
orb
xchg
mov
sbb
push
push
test
jno
lods
loope
mov
cmc
cld
mov
cmpsb
xor
sub
mov
jge
inc
cld
iret
fcompl
pop
test
sti
popf
pop
xchg
adc
and
sub
pop
adc
lock
and
add
cmp
adc
mov
cli
xchg
xor
mov
lods
sub
fistl
into
xchg
aas
mov
and
pop
mov
movsl
mov
lcall
mov
jle
sbb
cmp
scas
fcoml
push
ficompl
jno
adc
inc
xchg
paddusb
jno
ja
or
or
cld
lcall
sub
in
mov
jmp
lcall
outsb
and
sub
scas
int
jg
sbb
daa
loop
xor
imul
dec
jg
lods
fs
pop
repnz
push
lret
fcoms
call
or
sbb
fidivrs
pop
std
adc
dec
cwtl
int
pop
int3
mov
stos
inc
loop
mov
mov
mov
mov
cmp
jle
mov
pop
mov
gs
push
out
das
test
fsubp
jge
add
rolb
shr
js
shl
xor
push
je
in
mov
jmp
sub
mov
mov
cmp
sbb
inc
pop
adc
xor
push
jae
cwtl
repz
lea
mov
arpl
imul
hlt
clc
repz
and
inc
imul
inc
mov
sub
fisttpll
out
fimull
ljmp
rcrb
sub
sub
mov
cmp
adc
ja
pop
dec
xor
imulb
fldenv
int
jnp
push
mov
jae
js
hlt
std
jge
loope
mov
mov
push
je
insb
repz
jg
xchg
ja
cmp
cmc
daa
inc
add
daa
pusha
scas
test
inc
push
fnstenv
push
iret
cmp
lea
dec
pop
ret
adc
andb
sub
cmp
in
fidivl
lock
mov
pop
add
fdivr
fs
push
add
jecxz
mov
enter
sti
outsb
inc
xchg
mov
mov
add
popf
test
ja
mov
adc
or
sbb
xchg
mov
mov
mov
jmp
jl
cmp
outsl
pop
inc
inc
mov
or
mov
or
pop
orl
inc
out
inc
dec
dec
shl
fists
xchg
xchg
jp
cmp
cmp
and
adc
sarl
ljmp
ja
lret
sti
test
stc
jp
jg
xchg
outsl
add
sar
lods
pusha
and
or
movsb
lea
push
xchg
in
fsubrl
ret
dec
int
xor
out
aad
popa
push
aas
and
sub
iret
pop
add
into
mov
cmp
mov
lock
push
leave
jle
fisttpl
lahf
loopne
test
sub
mov
mov
fiaddl
mov
sbb
lret
ret
jno
sti
stc
lock
lock
mov
loopne
and
enter
and
leave
out
xor
iret
lods
xlat
outsl
pop
insb
int3
add
pop
push
add
leave
mov
mov
adc
stos
outsl
shrl
fiaddl
std
ljmp
stos
arpl
rclb
mov
mov
mov
or
jnp
adc
je
sbb
mov
mov
fdivl
inc
pop
and
jmp
int
lock
sbb
arpl
pop
inc
hlt
push
fisttpll
inc
mov
sti
loopne
in
sti
jle
jno
rorb
leave
xor
lret
lcall
test
clc
fldenv
add
ret
hlt
and
movsl
enter
aam
cmp
ret
and
inc
sti
push
lea
mov
inc
outsb
and
pop
jae
filds
stos
lods
push
mov
pop
pop
shr
sbbl
sub
and
dec
pop
stc
cmp
popf
stos
jno
int3
imul
cld
test
or
lods
mov
dec
add
or
sahf
fisttps
out
dec
jl
ljmp
lods
cs
call
lret
pop
sub
xor
or
push
and
sub
or
mov
jns
or
mov
mov
xor
dec
inc
pop
shl
mov
cmp
imul
pop
shl
jl
and
pop
fisubrs
mov
push
dec
push
pop
gs
and
arpl
sbb
andb
inc
or
cwtl
mov
mov
hlt
dec
pop
repz
leave
add
sarl
mov
rcrb
jnp
je
inc
inc
lret
hlt
or
adc
sub
dec
xchg
cld
push
notl
mov
repz
movsl
mov
mulb
cs
or
popf
outsb
fdivrl
outsb
xlat
xchg
dec
xchg
xor
lods
popf
jle
jmp
add
pop
sbb
sub
mov
pop
inc
out
mov
mov
and
aas
negb
jbe
lcall
icebp
jl
out
loopne
push
ljmp
pop
dec
call
out
add
add
sbb
and
insb
xlat
sub
or
sub
stos
loope
sub
sub
in
das
mov
push
sub
jbe
clc
sub
cmpb
xor
cwtl
nop
insb
and
xor
sti
or
imul
pusha
test
aas
jns
flds
je
cmp
stos
ljmp
movsb
add
mov
std
push
cmp
mov
xchg
mov
mov
mov
test
int
lods
pop
fdivrs
and
out
fdivr
pusha
popf
or
xchg
aas
push
xor
jg
dec
mov
mov
cli
cmp
js
mov
mov
inc
lret
cmpsl
and
push
nop
push
clc
inc
add
cmp
aam
jo
and
add
jne
dec
jle
jle
cmc
lret
cmpl
lock
test
stc
stc
sbb
ret
jle
outsl
sub
fstpt
add
imul
pop
dec
xchg
mov
popa
dec
mov
add
cmp
add
dec
inc
or
out
add
push
sub
push
inc
xor
imul
xchg
sarb
or
popf
jp
ja
popa
pop
aas
xchg
mov
cmc
xor
or
inc
aas
xchg
fadds
adc
push
lea
stos
rorb
fildl
int3
jo
cmpsl
pusha
clc
insl
fistpll
pop
mov
insb
adc
pop
repz
or
stos
mov
fstps
inc
inc
cmp
push
dec
mov
es
shrl
inc
push
movsl
cwtl
jbe
dec
sub
mov
aaa
pop
jle
cmpl
imul
jne
js
ficoml
push
pop
movsb
sub
repz
or
or
add
mov
fsubrs
push
sbb
cmp
xchg
sbb
push
adc
call
sbb
lret
mov
or
xchg
pop
sbbl
adc
cmpsl
fisttpll
pop
inc
pop
cwtl
je
pop
loopne
mov
pop
sahf
sub
fiaddl
imul
jo
and
cmp
push
or
adc
push
mov
dec
mov
hlt
out
lods
jns
sub
mov
mov
pop
int
push
das
imul
adc
sub
push
hlt
mov
test
sub
sub
sbb
inc
jno
pop
pop
das
lret
jae
inc
sbb
insb
xchg
sbb
mov
les
movsb
sahf
ret
jge
cmp
mov
aad
in
push
mov
xchg
into
daa
jecxz
cld
sub
arpl
insb
ds
outsl
inc
leave
mov
icebp
test
into
cmp
mov
test
lret
leave
dec
jnp
stos
and
mov
in
mov
sub
pop
daa
and
sub
sub
sbb
hlt
sbb
cmp
mov
mov
scas
clc
js
je
mov
or
and
addr16
mov
cli
stos
outsl
jo
adc
cltd
mov
cmp
pop
aas
cmp
pushf
push
pop
ja
rcl
or
push
psadbw
inc
inc
pop
lret
lcall
into
mov
pop
cmpsb
adc
mov
xor
add
xor
aas
adc
stc
out
sub
push
cmp
adc
ret
cmp
inc
popf
jp
imul
mov
ds
test
and
and
rol
push
push
or
and
inc
ror
xor
je
mov
ret
pusha
lea
xchg
jnp
adc
and
stos
xor
inc
cmp
push
dec
iret
leave
fldl
mov
mov
xor
icebp
or
push
inc
lods
mov
ss
cmpsb
xchg
popa
jp
mov
lahf
insl
call
pop
movsb
push
xchg
mov
loope
or
or
sarb
jns
lock
subl
mov
in
xchg
jecxz
mov
sbb
cld
inc
stc
sub
xor
pop
jno
out
pushf
push
mov
inc
movsl
hlt
sbb
pop
and
or
pop
jmp
xchg
fbld
scas
cmp
ret
bound
lret
adc
push
mov
mov
mov
stc
sbbb
lods
xchg
add
jmp
add
call
and
mov
push
jns
fsubrl
sti
fstpt
jae
bound
fwait
inc
mov
nop
dec
inc
outsl
lahf
ret
aaa
femms
stos
xchg
lock
jmp
adc
fucomi
das
lahf
enter
imul
je
imul
mov
cmpl
fldenv
pop
in
inc
jne
outsl
xchg
sarb
xor
ret
lods
in
or
int3
mov
cld
sub
imul
arpl
or
jg,pn
mov
aaa
aas
push
stos
mov
pop
inc
test
sbb
push
xchg
mov
adc
add
xor
gs
sub
outsl
in
inc
xor
adc
sbb
mov
inc
hlt
fcoms
add
insb
xchg
insb
cmp
inc
cmp
cmp
loopne
test
push
xchg
or
or
xchg
mov
mov
fldt
pop
les
or
sub
mov
rclb
jbe
ds
repz
add
cld
or
pushf
jne
dec
dec
test
aas
sub
gs
imul
mov
std
jecxz
dec
and
push
sub
sbb
pop
std
adc
in
pop
fstpl
cmp
test
pop
lret
and
popa
ljmp
cmp
outsl
sub
xchg
dec
dec
add
sub
aaa
and
push
fcoms
lods
mov
icebp
push
lret
cmc
sti
dec
rol
dec
xor
mov
jne
fiaddl
test
cmp
cmp
shll
mov
icebp
pusha
sti
pop
arpl
inc
add
jo
arpl
mov
aam
mov
mov
arpl
adc
lods
mov
and
cs
lcall
insb
and
mov
mov
pushf
and
enter
insl
cmp
inc
jb
pop
cmp
fwait
mov
pop
mov
cli
mov
stc
aam
ret
sbbl
lcall
xor
sub
jno
aas
lds
push
testl
mov
mov
loopew
fmul
faddp
shll
pop
jne
ljmp
rcr
or
roll
rclb
adc
mov
ror
pop
adc
jge
cltd
or
lock
mov
es
into
mov
mov
xchg
xchg
aam
popf
jb
mov
ss
jne
ds
dec
and
ffreep
xchg
mov
cmp
cmpsb
sub
mov
fstpl
jne
cmc
mov
inc
sahf
ret
sahf
nop
iret
adc
stos
cmp
jp
loop
adc
dec
adc
pop
add
loop
xchg
adcb
jg
daa
jae
js
out
sbb
mov
cmp
mov
push
into
add
or
mov
das
cmp
and
add
imul
int
or
out
xchg
mov
cwtl
adc
jns
fsubl
sub
mov
and
leave
sarb
jns
sub
mov
dec
sub
mov
mov
or
in
movsb
repnz
scas
xchg
ret
leave
cmp
popf
arpl
pop
les
inc
sbb
imul
incb
aas
scas
ljmp
or
rcrl
push
ds
sub
xchg
jl
cmp
rcl
xor
or
or
adc
or
fwait
inc
mov
add
out
mov
fdiv
repz
and
insb
sub
push
movsb
loope
test
adc
nop
xor
scas
mov
and
ss
call
int3
movsl
xchg
lock
pop
adc
movsl
add
pop
sub
int
mov
jbe
jb
mov
dec
lahf
out
dec
mov
xor
mov
std
popf
jne
cmp
lahf
push
addr16
in
add
shll
push
mov
mov
lahf
test
adc
pop
insb
mov
rcrl
divb
scas
arpl
mov
fwait
ja
movsb
out
dec
scas
mov
push
and
jmp
or
pop
cltd
scas
sub
stos
lods
jb
pop
cltd
les
scas
into
xor
cltd
outsl
gs
nop
int3
jno
pushf
ja
mov
rorb
lods
repnz
lods
jp
jnp
ret
stos
gs
adc
insl
dec
or
shll
cmc
mul
push
inc
sbb
inc
imul
xchg
push
pusha
sbbw
or
pop
aas
jbe
pop
int
daa
cwtl
fldenv
mov
dec
stos
pop
push
and
push
mov
fidivl
imul
cli
inc
fs
adc
jp
xchg
dec
jb
lea
cs
cmp
das
dec
shlb
sbb
into
sarl
stos
sahf
inc
mov
or
sub
icebp
jae
or
dec
loope
lds
shll
ror
stc
jno
pop
mov
mov
push
add
cmpsb
dec
or
mov
dec
les
fmul
and
daa
mov
fmul
pushf
fidivrs
or
cmc
or
out
sbb
mov
cmpsl
divps
mov
lods
outsb
call
inc
jno
mov
sbb
shlb
push
xor
mov
pop
push
dec
shll
imul
dec
inc
shll
aaa
pushf
insl
or
loopne
sarl
mov
in
sub
or
jae,pt
pusha
dec
ret
adc
push
int
xchg
sbb
xor
mov
xchg
fwait
mov
push
mov
scas
add
loop
push
or
sbb
sub
nop
inc
jb
daa
int
mov
mov
mov
mov
cmp
ja
xor
mov
lods
scas
jne
test
out
pop
add
js
fsubr
pushf
sub
jb
pop
adc
inc
lods
lea
dec
cmp
ja
shll
into
int
jecxz
push
iret
sub
sub
sbb
sarl
jmp
inc
or
fldenv
cmp
shrb
dec
pop
int
in
xor
movsb
inc
stos
stos
fs
testl
push
pop
xor
mov
adc
jnp
cwtl
mov
popf
mov
push
jno
xchg
mov
inc
mov
jmp
and
pushf
lods
sahf
imul
cmp
int
iret
arpl
and
jmp
hlt
xor
dec
mov
popl
sub
sbb
pop
sbbb
rcr
add
mov
stos
inc
sarb
add
mov
adc
insl
leave
lods
mov
outsb
jae
gs
sbb
inc
sbb
mov
ds
addr16
cmp
xor
add
pop
xlat
in
dec
movsb
insb
xchg
scas
test
aas
lahf
lods
pop
insb
outsb
lret
orb
adc
inc
inc
jb
pop
aam
aam
mov
lods
repz
movsl
mov
pop
aas
loop
add
movsl
add
pop
jb
push
sarl
aas
adc
mov
sti
or
cmp
sub
testb
add
aas
xchg
cmp
ret
ljmp
xchg
insb
pop
pop
enter
mov
jne
and
mov
mov
fmuls
add
std
adc
pop
push
sub
scas
pop
push
push
cmp
or
and
addr16
scas
rcll
ja
jno
shlb
mov
adc
jno
rorb
std
mov
scas
clc
dec
call
xchg
test
aas
xor
mov
or
pushf
inc
mov
jbe
in
adc
aaa
adc
add
ljmp
push
sub
dec
push
pop
jb
insl
and
jb
cli
and
rcrb
fcompl
int
jg
cwtl
inc
mov
aad
gs
loop
imul
xor
sbb
pop
sahf
fisttpl
xchg
add
or
cmp
push
mov
xchg
les
loope
in
xchg
lcall
data16
outsb
shrb
addl
and
sahf
mov
pop
shrl
jae
jmp
adcb
popf
cmpsb
pop
stc
jo
out
scas
and
xor
or
cmp
mov
aaa
repnz
js
test
mov
mov
outsb
push
testb
pop
push
mov
jae
sub
es
and
jl
xchg
mov
jp
insl
cmp
xchg
pop
or
or
rclb
cs
push
inc
inc
dec
mov
ja
pop
addr16
or
jnp
ror
scas
or
mov
jns
lret
adc
imul
sahf
fidivs
loopne
test
icebp
rcrl
mov
jne
into
or
push
fmuls
adc
pop
aad
or
push
and
and
sahf
sbbl
push
add
or
mov
imull
xchg
fbstp
cwtl
fistpl
cmp
imul
jmp
push
testl
push
mov
xchg
dec
add
mov
pop
add
or
mov
jb
fs
out
scas
das
dec
dec
ss
in
sti
or
jns
insb
inc
xchg
stos
mov
dec
jbe
cmpb
xor
cltd
mov
ds
adc
cmpsb
arpl
mov
mov
mov
jle
push
sub
mov
add
or
sbb
xchg
or
inc
cmpsl
adc
in
lret
push
jbe
addr16
test
fsubs
iret
push
push
pop
lcall
movsb
add
mov
dec
sbb
cmp
pushf
cwtl
inc
pop
push
cmc
aad
xchg
inc
push
xor
cmp
loopne
jecxz
movsl
mov
xchg
pop
or
push
push
scas
dec
ret
roll
xor
enter
xchg
pop
xchg
call
insb
pushf
loope
test
cmp
inc
inc
adc
popa
jmp
jmp
gs
out
mov
and
xlat
and
mov
stos
outsb
or
faddl
nop
cmp
shl
pop
rcrb
adc
push
ret
lea
fs
ds
mov
lods
dec
sbbb
movsb
xchg
scas
fcmovb
sub
push
jle
inc
ds
out
pop
mov
adc
or
aas
mov
cmp
dec
out
sbb
lea
push
pop
ret
and
lahf
enter
addl
and
jae
sbb
fidivl
mov
mov
in
aad
push
test
mov
push
je
mov
movsl
ds
or
mov
lock
sbb
adc
and
aaa
mov
xor
inc
inc
lea
mov
dec
inc
cltd
pminub
fstl
fdivrs
mov
insl
push
das
pusha
cmp
xor
sbb
cmp
mov
adc
aam
cmp
jg
dec
mov
pop
push
xchg
sbbl
push
ja
fmuls
sbb
in
call
sbb
adc
jbe
add
xlat
data16
fisttpll
scas
jae
clc
push
inc
pop
ret
test
rolb
sub
and
lea
xor
mov
fistpll
push
iret
sbb
in
adc
add
cmpsl
iret
mov
mov
rolb
inc
iret
dec
pop
pusha
xchg
xor
push
mov
mov
inc
push
loope
cmp
out
jne
mov
add
adc
lods
in
cmp
stos
popa
stos
mov
sub
mov
mov
ss
cmp
stc
repz
cmpsl
mov
idivl
pop
lds
das
aad
cmpsb
mov
nop
test
fdivrs
xchg
pop
sbb
push
xor
lcall
in
lahf
movsl
rclb
cmp
xor
cmp
mov
pop
leave
xor
xchg
xchg
push
out
cmpsl
jg
mov
ja
mov
or
cwtl
in
ret
jno
pop
popf
mov
mov
pop
scas
push
ss
jbe
sub
push
mov
jge
sti
mov
aas
pop
stos
gs
or
mov
add
adc
daa
in
add
add
jb
lahf
sub
mov
sti
adc
test
adc
xlat
jbe
cmp
jo
pop
sub
leave
lahf
sub
cmc
insb
cltd
or
jl
sbb
jae
lock
dec
dec
fstps
stos
jnp
rcrl
jp
outsb
cmp
mov
and
jae
pushf
repz
dec
xlat
lds
xchg
cld
insb
add
mov
and
jp
mov
aas
xchg
mov
jg
enter
shrb
mov
in
push
loopnew
mov
dec
addl
addb
gs
stos
push
sub
ljmp
leave
adcb
add
pop
lret
in
mov
sub
gs
and
jge
sbb
or
lods
inc
and
sub
aas
mov
notl
cltd
out
inc
mov
cmp
xchg
inc
jb
lods
cmp
adc
hlt
std
pop
adc
ret
pop
cmp
pusha
mov
nop
push
sbb
xchg
sti
dec
out
les
jnp
fs
pop
pop
push
movsl
enter
idivb
xchg
sub
out
stc
cmpsl
inc
adc
ljmp
inc
inc
and
jb
incb
in
cmp
mov
lret
int
rolb
rcrb
insl
jo
and
adc
fcomps
cmp
aaa
out
notl
cltd
pop
das
int3
aam
sub
test
push
push
cmp
adc
mov
gs
enter
lahf
mov
and
push
out
xor
enter
mov
in
sub
add
lods
mov
and
pop
mov
inc
scas
pop
scas
adc
sahf
test
pop
loop
mov
rcll
ud0
adc
xchg
xor
jecxz
cmovo
cltd
mov
jmp
std
aaa
inc
mov
inc
notb
sub
mov
test
aaa
jns
or
ret
inc
gs
and
xor
lods
mov
es
cmp
pop
and
repz
pop
and
jl
cmp
fldl2e
into
ffreep
cwtl
js
aas
dec
je
mov
xchg
xchg
movsb
push
pop
or
out
jmp
popl
iret
or
pop
sbb
and
and
cmp
xchg
and
shl
pop
inc
and
mov
xor
jmp
das
ret
xor
pushf
pop
cmp
cmpsb
in
jae
lahf
mov
jbe
fnstcw
cmp
int3
sub
jmp
into
xor
cmp
cmpsb
or
xchg
sbb
out
aam
lcall
jmp
mov
test
sub
les
xchg
xchg
lods
pop
mov
pop
icebp
xor
mov
xlat
mov
push
mov
dec
loope
int3
pop
fisubrl
lds
mov
mov
jo
pop
jne
or
and
pushf
inc
or
inc
jo
mov
lods
inc
sarl
cmp
mov
sarb
shl
call
jne
mov
or
arpl
mov
fists
inc
mov
or
scas
sub
dec
inc
rcr
mov
add
xor
cs
insb
mov
lods
lahf
jg
jno
jae
xorl
dec
xchg
xor
cmp
push
rcr
mov
lods
int3
call
inc
sahf
stos
adc
out
sahf
inc
pop
and
loopne
clc
push
sahf
pop
xor
sbb
inc
fisubl
dec
inc
xchg
mov
pop
xchg
fldenv
xor
or
fwait
in
xor
push
jmp
mov
push
xchg
mov
shrl
cmc
pop
push
pop
lcall
or
repnz
cmp
mov
repnz
into
les
cs
cmp
repnz
icebp
jbe
movups
gs
jle
aas
hlt
in
inc
pop
adc
sub
iret
pop
lea
inc
lods
ret
imul
es
dec
push
pop
push
or
fs
sbb
or
sti
jmp
mov
pusha
sbb
int
cmp
jp
aam
pop
sub
jb
std
mov
push
ds
mov
and
push
mov
add
or
mov
and
mov
movsb
sub
flds
mov
cmp
dec
shlb
mov
mov
insb
imul
cmp
mov
mov
subb
ret
sub
and
aaa
xchg
mov
sbb
cmp
test
psadbw
sub
jg
adc
scas
push
sti
jl
pop
mov
jmp
mov
mov
hlt
dec
xlat
xor
cmp
das
mov
test
inc
inc
stos
push
xchg
pop
adc
filds
insb
hlt
jmp
fs
ret
xlat
pop
insl
pop
aas
pop
ror
mov
int3
enter
dec
dec
adc
imul
mov
ret
dec
pop
push
mov
jge
cmpsl
fsubrs
cmp
cmp
loopne
inc
pop
bound
aaa
pop
push
xorb
cwtl
cmp
xchg
sbb
inc
mov
in
xor
dec
sbb
xchg
stos
xchg
mov
es
aas
test
xchg
mov
sbb
xor
sahf
pop
hlt
hlt
push
jns
cmp
mov
pop
addr16
sub
pop
jmp
loop
arpl
push
push
lret
mov
sbb
shrb
adc
jnp
loope
adc
enter
mov
fdivr
icebp
adc
fwait
lock
lret
lods
dec
mov
xchg
cmp
adc
in
dec
or
inc
mov
das
mov
mov
push
cmp
xor
cmp
daa
je
cltd
nop
jmp
dec
mov
jb
lcall
cmc
mov
mov
lret
push
inc
popa
and
mov
pop
adc
inc
xor
xor
mov
test
xchg
mov
add
int3
push
pop
pop
xor
lret
sbb
inc
and
sbb
mov
fidivl
push
dec
add
insl
mov
hlt
pop
cld
into
push
lods
in
inc
and
dec
and
mul
lods
repz
fcoml
and
push
stos
push
lret
inc
push
pushf
push
sub
es
push
cmp
xchg
and
xorb
shlb
sbb
jne
in
adc
inc
loop
scas
jp
cs
cmp
sti
mov
or
mov
fwait
loopne
js
adc
test
pop
fs
cld
gs
dec
dec
dec
into
sbb
sub
mov
xorb
xchg
aaa
fidivs
push
pop
ljmp
or
adc
push
lret
sub
into
jno
or
or
mov
repnz
sub
jne
xor
icebp
aam
push
and
cmpxchg
rolb
das
adc
cmp
cmpsl
add
imul
and
popf
pop
adc
in
jnp
sub
fldl
mov
xchg
call
xchg
cs
jmp
sub
push
inc
lahf
fmull
xchg
popa
xor
xchg
jle
pop
xor
arpl
iret
inc
sti
cltd
adc
shll
aas
dec
into
and
mov
dec
sbbl
xchg
mov
int3
sub
xor
or
flds
push
xorb
lcall
jnp
add
mov
popf
pop
bound
fdivrl
out
fldt
sahf
push
and
fnstsw
imul
mov
or
jle
fst
inc
repz
and
hlt
cwtl
push
adc
fsubrl
hlt
fildll
sub
fwait
xlat
ret
xor
mov
mov
pop
aas
xchg
and
lock
inc
xchg
dec
xchg
ljmp
out
fistps
idivb
push
xor
in
enter
sub
les
adc
arpl
mov
jo
sub
push
int3
sbb
inc
in
mov
and
jle
cmpsl
fldenv
cmc
out
dec
jl
jge
xor
andb
push
cld
ret
mov
add
shl
adc
lret
jno
sbb
mov
fcmovnbe
cmp
cmp
imul
or
ret
sub
mov
hlt
lea
or
adc
mov
jl
fnsave
xchg
inc
push
sub
cmc
shr
push
or
gs
cmp
fwait
pop
out
cmpsl
mov
repz
cld
push
sti
aam
mov
push
aam
mov
pop
cmp
push
or
mov
movsl
rcrl
mov
cmc
outsb
xor
sub
ret
sahf
mov
fdivl
push
xchg
add
stos
out
mov
mov
enter
xor
imul
cwtl
outsl
xor
out
mov
cmp
stc
ds
je
push
jmp
pop
aaa
jae
mov
in
pop
int3
add
xchg
xchg
push
mov
shlb
inc
into
dec
xchg
jno
pop
fs
mov
add
dec
add
testb
fisubs
xor
adc
mov
lret
shrl
rcl
add
pop
lods
cmp
xchg
lret
in
insl
adc
add
push
mov
or
push
test
lcall
incl
nop
loop
push
cmp
shl
push
jb
rolb
pop
mov
inc
xor
rcl
movl
add
jl
mov
inc
jo
shlb
pop
and
jns
into
jb
fstpl
sub
adc
ja
cs
lock
sub
testb
mov
mov
ds
std
mov
out
ret
inc
lods
mov
stos
data16
jb
lea
mov
popf
nop
and
fsubl
js
cmp
scas
mov
xchg
adc
inc
int
xchg
test
bound
pop
rolb
mov
xor
lea
call
sub
int
sbb
mov
push
rcr
mov
xchg
and
add
out
fs
scas
idivb
repnz
sbb
pusha
jle,pt
hlt
iret
adc
adc
and
jbe
sub
cs
fimull
lcall
dec
das
inc
add
enter
cmp
je
outsl
fistps
lods
cmp
mov
inc
sub
jp
test
in
ljmp
dec
dec
jnp
aam
out
data16
cmc
bswap
rcrl
inc
inc
stc
ja
pop
or
loope
test
mov
or
or
rorb
jb
push
mov
sub
push
dec
popa
pop
out
adc
stos
scas
or
push
adc
ret
roll
iret
sarb
push
sahf
jl
jecxz
fld
sub
mov
mov
sub
popa
jnp
divps
mov
jge
dec
mov
dec
mov
pop
rcrb
lahf
hlt
mov
push
int3
fidivl
faddl
add
movsl
stos
sub
jnp
iret
jnp
cld
out
subl
pop
incl
dec
outsl
add
xlat
test
outsb
out
sbb
popf
out
movl
lods
mov
or
mov
dec
mov
or
adc
inc
dec
popf
cmp
sub
mov
inc
jge
inc
into
ficomps
imul
addr16
and
clc
adc
in
jnp
cmp
inc
data16
push
scas
xchg
mov
out
push
addl
lock
fists
sti
outsb
popf
fsubrs
mov
mov
cmp
cmp
test
insl
faddp
push
vpslld
arpl
fimuls
ds
call
dec
fs
incb
xchg
fwait
xor
mov
sub
int
ljmp
lods
dec
or
or
fnstcw
aad
mov
adc
shl
cmp
mov
xchg
cmc
sbb
and
pop
pop
mov
xchg
mov
les
out
gs
adcb
and
pop
loop
jno
scas
inc
fiadds
mov
pushf
and
rcl
dec
sub
hlt
ficoml
or
stos
push
sarl
inc
outsb
push
inc
enter
mov
xchg
bound
lea
int3
push
adc
xchg
mov
mov
lods
je
cs
sarb
pop
test
add
push
adc
push
jb
dec
or
dec
push
popa
inc
loop
rcrb
inc
imul
adcl
and
dec
mov
fdivl
cmp
add
cmp
aaa
mov
mov
sub
inc
mov
xor
push
mov
lret
out
imul
push
xchg
test
stc
jl
repz
jo
in
xchg
ds
mov
pusha
test
xchg
ja
cmp
nop
aam
lods
push
sub
or
add
mov
mov
pop
enter
jb
mov
and
icebp
je
jge
shlb
cld
mov
repz
adc
push
mov
and
les
into
jae
cmp
cld
clc
and
mov
push
pop
ja
lods
les
stc
inc
and
testl
push
adc
fs
andl
adc
gs
jge
jl
dec
stos
lret
xchg
add
and
mov
and
dec
adc
xlat
push
sub
roll
sbb
shlb
iret
fmuls
pop
push
ficoms
scas
sub
adc
cmp
sub
sub
pop
push
in
push
sbb
jns
fs
jbe
lods
cmpsb
aad
and
cmc
inc
stos
dec
data16
loop
sbb
cmp
cmp
dec
or
add
bt
sub
pop
cmovs
jb
or
add
cld
aaa
dec
jno
jmp
xchg
dec
mov
mov
push
cmp
bnd
es
call
dec
test
inc
mov
add
adc
cmpsb
pop
mov
sub
in
in
in
pop
xchg
dec
ret
or
xchg
movsl
sub
pop
daa
fstl
ds
fistl
ja
test
js
adc
leave
stos
incb
cmpsl
sub
enter
ret
movsl
push
movsl
or
cmc
jns
or
sub
sbb
mov
cwtl
push
mov
xchg
out
arpl
shrl
cmpsb
jb
lock
mov
ret
stos
or
mov
jns
and
push
movsb
sub
in
cmp
inc
js
aas
xchg
pop
lret
xchg
aad
arpl
add
and
xchg
addr16
loopne
xor
lcall
sbb
pusha
sbb
decl
std
pop
dec
jp
pop
popa
jae
pushf
das
pop
cli
data16
add
or
test
sbb
adc
cmp
or
cli
clc
int
jecxz
repz
fcoms
adc
and
sub
mov
mov
xchg
push
mov
pop
leave
push
lret
sbb
call
sbb
mov
mov
mov
xor
mov
mov
xchg
imul
cmp
inc
add
mov
xchg
jmp
int3
and
stos
adc
pusha
jmp
and
imul
scas
popf
pushf
jecxz
dec
cmp
and
insl
loope
into
arpl
push
mov
xlat
shlb
dec
out
pop
pushf
cmc
jae
add
sbb
fwait
leave
push
push
jne
roll
cmovp
ljmp
outsb
and
lods
jno
mov
mov
fstps
cmpsb
jnp
out
out
popf
adc
add
mov
lds
imul
std
in
outsl
sub
mulb
subb
stos
xchg
fldt
int
lods
mov
rorl
sahf
xchg
lret
adc
push
jmp
pop
adcl
cmp
cmp
leave
pushf
push
lods
repnz
test
cmc
nop
adc
or
or
add
aad
popa
or
pusha
adc
jb
push
aaa
lret
pop
jns
rorl
sbb
push
xor
lea
and
insb
jb
stc
nop
pop
stos
and
enter
enter
cmp
insb
pop
pop
xchg
sbb
dec
mov
cmpl
xchg
mov
xor
lret
pop
push
hlt
xchg
pop
dec
xchg
and
mov
loope
pop
ret
push
xor
adc
movsl
loop
push
push
push
cmpl
adc
mov
or
lahf
pop
imulb
pop
push
cmp
jbe
frstor
lahf
push
jecxz
stos
insb
ss
dec
repz
popa
mov
ret
aaa
mov
xor
addb
out
pop
rclb
pop
arpl
cld
in
outsb
sarl
fnstenv
dec
push
std
cmp
mov
ljmp
ss
add
cmc
jle
mov
jo
pop
stos
jae
shl
adc
or
sbb
mov
mov
rcl
outsb
jno
inc
cmp
or
gs
imul
lds
or
dec
inc
dec
push
cli
jae
mov
mov
lret
jbe
fcoms
arpl
aad
jl
xchg
xchg
scas
out
inc
push
cmp
ljmp
leave
rcl
mov
jmp
lahf
or
frstor
test
ret
dec
pushf
jle
movsl
lock
sub
pop
xor
inc
sub
das
cmp
js
push
xor
xlat
jg
clc
pop
clc
dec
out
push
pop
dec
sub
fs
xchg
enter
jg
scas
and
add
sbb
mov
in
int
aaa
jge
enter
cltd
xchg
sub
loop
lods
inc
pusha
mov
add
test
cld
rcr
call
sbb
movsb
fs
stc
lods
fidivl
in
jle
jge
xchg
enter
or
in
imul
sub
test
dec
adc
iret
test
inc
insb
popa
and
xchg
je
mov
lods
stos
mull
test
push
pop
pop
hlt
sub
xchg
daa
lds
and
icebp
pop
add
inc
pop
xchg
inc
pop
inc
popl
cld
stos
jnp
fadd
fildll
inc
pop
inc
jle
cmpsl
push
xchg
repnz
mov
orl
in
js,pt
sub
cmp
stos
pop
sub
cmp
jae
test
push
aam
arpl
add
jno
aas
xor
jbe
sub
sub
sub
xchg
pusha
jg
mov
ret
cltd
and
out
stos
sbb
pop
inc
xchg
xor
inc
mov
mov
mov
or
lahf
cmpsb
cli
sbb
lcall
pop
xchg
mov
rorl
lds
mov
and
scas
push
rol
jns
leave
sub
sarl
popf
jl
xchg
xor
push
pop
leave
cld
sub
jns
mov
loop
xor
mov
cld
cmp
pop
xchg
lret
mov
xchg
movsl
stos
adc
mov
cmp
cltd
pop
jae
and
jmp
int
ja
or
pop
leave
jne
jbe
leave
inc
in
cmp
call
jno
add
mov
push
sti
mov
fiadds
jne
or
lahf
leave
js
inc
xchg
leave
scas
arpl
inc
mov
xor
nop
sub
lret
sarb
add
cmpsl
xor
pop
and
nop
cmp
xchg
aas
fdivrl
outsl
cld
pop
rorl
insl
and
lock
fxch
popf
ret
and
sti
fsts
jno
movsl
mov
std
mov
adc
js
sbb
cmp
loopne
cltd
xchg
push
sbb
jle
movsb
flds
stos
inc
or
pop
loop
dec
or
pop
scas
cmp
loop
xchg
mov
fstpt
mov
pushf
add
aad
scas
sub
sub
aaa
push
or
xchg
sub
pop
repz
repnz
add
lods
push
cmp
enter
push
pop
cmp
mov
loopne
outsb
pop
outsb
xor
out
les
aas
repz
ss
lret
roll
inc
cmp
sub
sub
xor
cmp
jns
jns
push
sbb
je
mov
fldcw
lret
stos
mov
jmp
xor
pop
stos
sbb
jmp
add
cmpsb
in
insb
rorl
and
xor
push
and
sarb
mov
jae
inc
aad
xor
add
aaa
jecxz
faddp
das
push
jbe
jno
xorb
fcmovb
push
sbb
lods
add
inc
shll
push
cltd
cmc
cmc
cmp
fs
xchg
cmp
ss
mov
stos
movsb
and
out
add
or
js
pop
scas
call
hlt
add
lods
test
lahf
dec
mov
dec
or
cmc
shll
and
push
adc
out
roll
dec
mov
movsl
cmp
push
xchg
jp
push
adc
inc
adc
adc
pop
adc
add
lock
push
pop
outsl
icebp
mov
test
shr
inc
sub
ss
les
xchg
cmp
test
lods
and
sbb
add
jno
dec
cmp
mov
xchg
test
jl
arpl
pop
rcrl
ret
or
lret
rcr
jbe
mov
cmp
flds
imul
xor
sub
add
shrl
and
pop
insb
pop
xchg
jne
shrb
dec
push
xor
sub
leave
push
xor
sub
mov
mov
or
and
pop
or
negb
fidivrl
cmp
icebp
sbb
loope
lock
movsl
mov
adc
or
cli
and
xlat
rolb
dec
dec
jae
push
sub
or
lds
sbb
sbb
cs
in
mov
nop
jle
mov
stos
lahf
push
jmp
popf
or
fsubl
sbbl
mov
pop
stc
cmp
inc
or
mov
mov
ss
aad
pop
imul
mov
dec
das
adc
dec
push
inc
jmp
inc
in
aas
loope
push
ret
imul
jno
hlt
lcall
sarl
xchg
hlt
mov
subl
stos
std
xlat
stos
loopne
loope
jb
ss
cmp
mov
xor
sub
inc
fistpll
mov
add
push
inc
icebp
or
cmp
or
xor
pop
fmuls
lret
sub
dec
sbb
inc
cmp
inc
pop
mov
jecxz
mov
ss
fs
shrb
add
or
bound
mov
hlt
cmp
rcrl
jl
sti
outsb
xchg
inc
cmp
pushf
std
cmp
in
xor
mov
sbb
push
dec
les
lea
xor
xor
pop
mov
shlb
orl
pop
mov
test
inc
push
subl
inc
or
pop
inc
or
jno
leave
jbe
arpl
jno
cmp
dec
inc
ds
mov
lods
inc
bswap
xor
jne
mov
in
dec
loop
pushf
fbstp
xchg
inc
sub
leave
aam
pop
rcll
ret
out
cmp
sub
mov
xchg
jg
test
and
lods
stc
and
push
sti
insb
call
xchg
int3
mov
mov
push
push
sub
xor
mov
push
and
sub
cmpsb
push
mov
mov
sub
add
nop
cmc
sahf
mov
mov
add
out
ret
and
xchg
sub
fcoml
mov
inc
xchg
pop
xchg
sbb
inc
xchg
and
dec
nop
scas
fs
mov
mov
mov
pushf
fsubl
jg
xor
pop
mov
roll
and
movl
lret
cmp
mov
shll
cltd
or
adc
xorb
adcb
jmp
adc
cmpsl
ret
popa
add
push
jl
add
dec
or
insl
mov
subb
add
cmpsl
inc
pop
xchg
mov
in
ret
mov
lds
mov
sbb
sbb
fcmovnu
inc
jge,pt
or
lahf
imul
fcomps
aam
and
shll
aam
addr16
jg
aas
into
mov
cmp
fdivrs
inc
in
insb
mov
shll
add
imul
inc
sbb
and
mov
add
popa
push
arpl
mov
pop
ficoml
mov
pop
ds
pop
sti
test
mov
jg
popa
push
addr16
jne
and
ret
pushf
mulb
xorl
xchg
clc
insl
pop
sub
push
into
lret
clc
in
pop
add
jns
orb
sbb
mov
push
lock
cmp
jmp
adc
mov
int
in
pop
scas
insb
and
int
sbb
adc
cmp
mov
xor
pop
or
sub
xchg
jmp
stos
decl
leave
pop
mov
or
sbb
mov
stos
nop
sub
and
xor
add
jns
loop
push
pop
ret
dec
ret
jne
dec
stos
xchg
xchg
nop
fiaddl
sarl
ds
or
jecxz
lods
daa
sbb
enter
mov
insl
add
scas
mov
xor
inc
xchg
or
mov
lret
push
mov
stos
sub
xchg
pop
xchg
pop
in
sti
pushl
pop
mov
inc
pop
jno
push
stc
rclb
rol
push
lret
cs
jne
fs
rcr
and
xchg
jg
fists
mov
xor
enter
loop
iret
fsubrs
sarl
cwtl
seto
enter
xor
xlat
xchg
cmpsb
mov
jle
cmp
adc
int
in
ja
out
jns
loop
push
push
in
cs
dec
mov
test
jb
pop
rolb
adc
sbb
mov
ljmp
out
test
mov
cmp
shrb
lds
inc
inc
popa
std
lret
loop
inc
adc
and
ss
sub
lea
push
fs
jle
dec
mov
xchg
adc
xchg
and
mov
adc
sti
xchg
mov
jne
icebp
or
fisttpl
push
mov
in
addb
lods
lods
sub
pusha
add
xor
icebp
mov
mov
fucomi
sahf
jecxz
inc
in
imul
push
and
xchg
lahf
cmp
mov
cmpsl
xchg
int
cmp
lods
imul
lret
leave
cltd
int3
mov
out
into
mov
sahf
shrb
sbbb
dec
repnz
in
jp
cmpsl
shrb
les
mov
push
lret
cmp
push
jbe
and
xchg
and
notl
mov
test
cmpsl
xchg
mov
add
cmp
adc
xchg
xor
hlt
sbb
jge
inc
lea
cli
je
in
mov
xchg
push
insl
das
jl
cmpsb
inc
mov
fstps
in
inc
test
ss
mov
mov
adc
pop
sbb
out
jb
int
dec
ror
dec
inc
shll
mov
sub
enter
xor
orl
les
loope
pusha
xor
xchg
adc
les
xchg
xchg
or
js
outsb
mov
sbb
cmp
pop
pop
cltd
sbb
inc
nop
inc
pop
sub
in
pushf
sahf
mov
cmp
mov
in
push
aam
xchg
dec
and
in
mov
lods
sub
inc
cltd
mov
inc
in
movsl
pop
xor
inc
enter
setg
fsubs
or
jecxz
xchg
dec
dec
fisttps
cmp
mov
shl
shlb
jecxz
lock
cld
gs
push
jb
sbb
adcl
notl
lods
pop
mov
icebp
movsb
mov
pop
xchg
enter
cmp
fnsave
add
or
cld
mull
sti
stos
inc
sub
imul
and
faddl
das
jecxz
dec
push
sbb
je
inc
out
jb
dec
inc
cltd
cmp
or
cmp
dec
xor
push
pop
les
cs
ror
test
mov
dec
xchg
sub
dec
fs
jge
mov
jge
hlt
sbb
pushf
lods
ret
ljmp
sub
mov
cld
adc
pop
cmp
sahf
xor
out
sbb
inc
bound
out
leave
sarb
jae
jge
jae
mov
push
cmp
xchg
cmp
shlb
pop
mov
in
sub
or
or
imulb
pop
leave
hlt
test
adc
cwtl
adc
inc
gs
cmp
int
add
ret
sub
xlat
adc
push
xchg
mov
mov
dec
scas
imul
add
dec
push
repz
stc
inc
jl
movsl
xlat
test
loop
jae
push
sub
mov
add
cld
mov
jnp
pop
mov
xor
or
mov
pop
jge
lret
jecxz
in
lea
leave
mov
pop
inc
cmp
cmp
inc
push
pusha
call
arpl
out
jo
data16
mov
sahf
enter
xchg
xchg
pushf
adcl
test
push
repz
dec
loope
dec
je
repz
mov
cmp
add
pusha
pop
and
lods
fwait
mov
mov
insl
idivl
loop
add
push
mov
mov
dec
mov
adc
gs
in
jnp
jge
popf
sub
cmp
sbb
inc
call
jmp
pushf
sub
fs
push
pop
in
dec
iret
loope
push
jno
mov
inc
pop
mov
iret
into
dec
nop
pop
push
xor
lcall
pop
leave
repnz
xchg
shlb
js
push
mov
jecxz
pop
push
cmpsl
mov
mov
push
cld
dec
test
scas
repnz
imul
adc
pop
sub
jns
out
ja
xchg
inc
ds
mov
mov
pop
cld
jp
push
inc
cmc
cmp
inc
xor
int
xor
ja
pusha
pop
ja
mov
xor
cmp
in
test
ret
clc
imul
cwtl
js
sbb
je
sbb
add
in
push
dec
test
lods
int3
rcll
sub
jl
dec
fdivrs
inc
rorl
inc
jno
ja
fcompl
dec
stos
cmp
jmp
gs
ret
ds
mov
scas
and
jp
sti
mov
sbb
jl
adc
pop
js
sbbl
mov
dec
fs
push
push
insb
test
loopne
nop
std
mov
mov
mov
repz
cmp
test
adc
leave
std
ds
push
std
cmc
add
jg
pop
fwait
enter
enter
loope
mov
hlt
incb
imul
repz
sbb
inc
cmp
pusha
ja
sbb
xor
mov
ds
jl
jl
jg
cli
inc
inc
jmp
lret
xor
add
cli
clc
sub
jno
je
mov
add
xchg
js
cmp
pop
cmpsb
push
adc
jle
lods
fs
pop
mov
stos
lock
jp
rolb
ja
call
cmp
ljmp
lds
out
mov
xchg
adcb
cmpl
hlt
fnstenv
addb
daa
sarb
orb
xchg
gs
out
and
mov
imul
aam
popf
inc
or
dec
cmp
pop
std
je
jnp
icebp
test
lods
les
nop
add
dec
es
push
or
in
jno
jne
mov
out
xchg
mov
fsubrl
mov
and
clc
add
lahf
test
and
jge
gs
arpl
test
fcompl
xor
mov
daa
rolb
xor
orps
adc
scas
jg
adc
xor
push
mov
lret
dec
xchg
icebp
mov
pusha
mov
cmp
fidivrl
repnz
ficoms
adc
out
mov
mov
lea
bound
movsb
in
loopne
ljmp
pop
call
push
mov
sbb
test
xchg
jecxz
pusha
ret
pushf
sbb
shlb
cmc
jg
dec
pop
inc
std
stc
ret
or
roll
sahf
test
jecxz
pop
dec
stos
pop
mov
add
mov
mov
sub
pop
call
in
icebp
mov
add
adc
dec
insl
or
lock
mov
jp
shll
cs
lea
aaa
filds
cmp
sbb
xchg
xchg
rcll
mov
and
leave
aas
add
dec
ret
shlb
add
call
movsl
inc
sbb
sbb
adc
popf
dec
mov
enter
sbb
mov
xlat
xorl
inc
push
insb
pop
cmp
xor
enter
mov
xchg
inc
in
lods
sbb
lods
push
jo
add
cmpl
sub
and
mov
add
inc
and
lds
insl
mov
test
shlb
xchg
les
inc
shlb
pop
test
lods
mov
clc
popf
ret
dec
mov
inc
clc
clc
mov
les
jp
pusha
cmpsb
push
inc
mov
stos
or
in
mov
jmp
and
fisttps
jle
sbb
mov
mov
xor
mov
pop
mov
cld
dec
push
sub
and
sti
clc
loope
pop
adc
push
into
insl
cmpsl
mov
popa
xorb
sub
lods
push
cmc
xlat
movsl
int
sahf
jae
push
pop
mov
xlat
mov
fld1
fsubs
sub
push
bound
and
mov
mov
xor
fmul
xor
test
xorl
hlt
into
imul
adc
xchg
cmp
or
arpl
jg
sarb
lock
orb
or
adc
je
and
out
mov
sub
jg
rol
call
and
outsl
je
inc
mov
fsubp
xchg
fistpl
xchg
gs
mov
rcl
shlb
sub
sub
out
ret
push
add
scas
cmpsb
pop
in
fwait
pusha
addr16
pop
add
xchg
aaa
mov
pop
pop
mov
jg
ljmp
or
mov
jno
cmp
sub
pop
add
mov
test
jns
mov
outsl
xor
mov
mov
push
and
inc
mov
jmp
push
mov
adc
aad
cltd
or
icebp
sub
cmp
add
in
dec
pop
loopne
ret
jge
cltd
fdivrs
test
aam
testl
jnp
aam
into
and
in
and
mov
adc
pop
cwtl
pop
out
mov
movsb
popf
pop
pop
push
xorb
and
inc
in
call
dec
pop
rol
xor
in
jg
push
dec
cmp
ret
call
inc
and
sbb
movsl
cmp
xor
xor
sarb
iret
add
ja
inc
push
or
xchg
leave
jns
cmovns
faddl
adc
or
cld
pop
shll
mov
push
pop
jbe
imul
dec
jg
cmpl
pop
add
es
cmpsb
dec
jge
xchg
sbb
leave
ljmp
fcmovnb
sbbb
jae
in
xorb
fsubr
sub
xor
mov
ret
pushw
sti
or
repz
mov
repz
cmp
daa
push
dec
insb
ds
lods
sub
push
jecxz
mov
sbb
bound
out
enter
sub
mov
lret
lock
pop
cmp
push
add
inc
and
lds
cld
rcr
mov
and
sub
cmp
cmp
pop
cmp
out
iret
enter
cmpsl
adc
push
sub
out
lods
iret
pop
clc
sbb
sub
jnp,pt
lret
mov
insl
inc
add
stos
loopne
cmp
jnp
daa
mov
mov
bound
insl
dec
shrb
mov
cmp
pop
xchg
lds
rol
mov
adc
cmp
and
mov
inc
test
jle
in
pop
dec
dec
popa
or
lret
inc
lret
das
jne
int
iret
lock
mov
inc
xor
cmp
aad
mov
inc
xchg
cmp
jns
adc
nop
xorb
fs
mov
out
enter
adc
xchg
mov
jge
out
ljmp
or
adc
movsb
push
inc
pop
stc
dec
call
cwtl
test
mov
roll
jl
cltd
repnz
pushf
jne
push
adc
cmp
in
shlb
enter
icebp
daa
movsl
loop
push
movb
xchg
fdiv
out
iret
movsb
pop
xchg
fisubl
mov
lods
mov
mov
push
inc
xchg
fidivrs
aam
and
inc
sti
mov
add
dec
sub
jo
movb
xor
add
stos
xchg
pop
jp
cmp
mov
js
setb
cmpsb
fldenv
adc
mov
sub
cmp
loope
shll
fbstp
fdivrl
xchg
xchg
xor
cmpsl
imul
addr16
dec
aas
push
bound
les
out
adc
mov
or
in
push
pop
jmp
les
or
fsubr
pop
jnp
jmp
mov
jg
ja
ret
leave
inc
and
ror
mov
cmp
cmc
setb
inc
push
in
test
rcl
sub
push
sub
arpl
scas
jmp
fsubs
pushf
test
ljmp
add
lds
sub
loopne
repnz
nop
cld
aad
adc
pcmpgtd
mov
fsubp
inc
iret
mov
mov
cmp
and
cmp
or
push
cli
inc
dec
jne
inc
xchg
xor
mov
add
jecxz
stos
and
lret
xchg
inc
jg
inc
mov
mov
adc
add
das
gs
movsb
sbb
fdivp
dec
jo
clc
or
gs
adc
sub
sbb
sbbl
inc
cs
rol
pop
das
cmp
and
into
stos
dec
shll
dec
dec
add
addr16
push
gs
in
repz
fldl
xchg
clc
sbb
fs
inc
adc
jbe
cwtl
fwait
das
mov
xchg
ljmp
leave
sbb
iret
pusha
cmp
mov
mov
cwtl
sub
addr16
sahf
je
fs
pusha
outsb
sbbb
and
xchg
jmp
mov
jne
js
inc
in
pop
les
pop
pushf
mov
sbbb
push
rorl
andl
mov
pop
aas
roll
cwtl
test
cmp
and
lahf
outsl
mov
push
mov
mov
push
cmp
scas
es
shlb
imul
lds
cli
push
shl
mov
and
mov
pop
aas
dec
jl
jns
xchg
xor
and
ds
enter
cmp
or
pusha
xorl
and
xor
gs
mov
ret
and
shll
inc
dec
inc
and
cmp
lods
pop
insb
bound
shlb
sub
mov
insb
jecxz
les
pop
sub
fxch
enter
add
arpl
clc
add
andb
fdivs
divl
or
add
lock
xor
jge
mov
imul
push
aam
dec
scas
adc
sahf
jg
lods
and
pop
inc
pop
nop
sahf
push
je
push
gs
inc
movsl
aad
mov
xor
shlb
xor
push
ljmp
in
jecxz
lret
mov
push
in
inc
inc
xchg
std
lods
scas
sub
adc
les
or
jb
xchg
cwtl
iret
xchg
xor
pushf
stos
mov
test
xchg
mov
cmc
arpl
adc
movl
enter
and
mov
lods
bound
dec
sbb
test
dec
les
mov
cmc
jns
je
add
and
and
shlb
mov
pop
cmp
xor
shrb
xor
xor
pop
mov
mov
lds
push
sbb
out
push
sbb
stc
lock
or
and
std
inc
sub
enter
rcrl
jae
jle,pn
mov
mov
daa
cmp
bound
mov
or
jg
push
jno
outsb
pop
xor
mov
mov
and
fldl
inc
stos
pop
ss
mov
jo
clc
add
mov
mov
mov
mov
mov
jo
daa
xchg
ret
pop
add
test
add
rol
xlat
pusha
mov
inc
pop
adc
pushf
pop
incl
or
and
cwtl
mov
out
lods
and
in
ss
or
adc
mov
cmp
and
les
jge
out
test
mov
add
mov
adc
js
adc
xchg
inc
sub
dec
push
jecxz
add
xchg
inc
scas
xor
scas
test
fdivs
fdivr
add
xor
mov
out
daa
lret
out
out
jl
xchg
mov
cmp
mov
arpl
icebp
loopne
test
and
cs
sub
push
ret
mov
jmp
cmpxchg8b
lret
and
ret
xchg
insl
enter
sarb
push
das
pop
jmp
mov
mov
jnp
nop
stc
mov
fsubp
push
in
clc
dec
sti
loope
cmp
cmc
sub
add
and
bound
insl
popf
adc
and
jecxz
and
adc
ficoms
lock
cld
scas
sbb
stos
insb
cs
pop
popl
fdivrl
cli
dec
dec
mov
addr16
mov
cld
mov
aam
pop
js
inc
xor
ds
dec
cwtl
sar
jmp
jo
push
or
outsl
fwait
pushf
xor
xor
sub
pop
dec
mov
shrl
jl
rcr
cld
pop
test
test
sub
pushf
leave
pop
xlat
les
notl
sar
inc
xchg
mov
push
int
cmpsb
mov
sub
add
jge
rorl
test
mov
lods
and
cmp
cmpb
and
xchg
outsb
inc
lds
or
pop
mov
pop
mov
pop
movsl
pop
add
jmp
scas
xchg
inc
xor
loope
cmp
subl
lea
aas
inc
adc
scas
das
add
push
jg
ss
call
mov
adc
scas
sub
inc
jecxz
stos
and
sub
jne
ret
jbe
popf
pop
aad
lds
and
cmp
inc
pop
pop
test
lods
push
in
inc
ret
pop
push
sub
ljmp
cmp
lahf
andnps
pop
sub
jmp
mov
dec
sub
inc
sarl
shrb
shrb
mov
lods
mov
in
pop
sahf
pop
add
add
jge
imul
jle
dec
pop
inc
jb
xlat
dec
ss
dec
je
test
adc
mov
fbld
fldenv
pop
and
mov
sub
xor
mov
cmpb
into
test
jmp
stos
fisttps
hlt
popf
and
xchg
data16
aas
add
lret
add
jne
ja
add
lea
mov
dec
hlt
xchg
popa
adc
sbb
mov
repnz
pop
js
add
and
outsb
fldt
fildll
je
in
fcomp
or
add
lods
mov
jb
ret
lahf
add
aam
xorb
fistl
loope
inc
cmp
js
negb
sub
mov
fnsave
cmp
mov
lods
or
xchg
cmpsl
test
mov
sbb
sbb
jmp
sub
fsubl
sti
push
scas
adc
out
enter
pop
push
jg
adc
push
in
push
pop
adc
cltd
popa
int3
mov
fsts
sti
arpl
jmp
daa
sbb
and
adc
mov
pushf
movsl
movswl
dec
pop
lods
xor
push
shlb
push
dec
mov
daa
mov
fldenv
jae
fcompl
test
mov
lahf
dec
pop
pop
inc
xchg
mov
ror
scas
mov
xchg
shll
scas
arpl
movsl
dec
fnstenv
outsb
ret
imul
jmp
in
sbb
testb
adc
gs
mov
lret
xor
xchg
pop
pop
inc
sub
lret
xchg
jae
repz
mov
sub
fldl2t
fiaddl
stc
sub
sbb
in
pop
sub
mull
ds
stc
in
shrl
fsubs
cld
outsl
pop
popa
addr16
dec
aaa
fs
sub
xor
in
dec
outsl
xchg
arpl
push
frstor
mov
enter
add
ret
scas
mov
or
cmp
jnp
cld
fdivrl
xor
adc
loope
jns
push
dec
and
leave
movsl
cmp
mov
js
add
jmp
jns
sbb
dec
xchg
add
loopne
popf
mov
cwtl
popl
leave
in
cmp
mov
adc
xor
out
pop
cmp
push
cwtl
cmp
aam
aas
jp
or
xchg
je
fs
clc
int3
sub
cwtl
xor
xor
jecxz
icebp
dec
fsubs
sti
xchg
scas
adc
stos
add
push
adc
sub
sbb
jbe
mov
shll
xor
sbb
enter
ret
mov
pop
mov
mov
iret
mov
sbbl
jl
inc
adcl
ja
push
sti
test
fcomps
loopne
jmp
add
pushf
jmp
ficoms
js
sbb
and
imul
loopne
fbld
ror
aad
push
push
nop
jle
dec
add
pusha
inc
imul
rcr
jecxz
push
jbe
mov
inc
and
das
lret
in
sbb
mov
sbb
mov
xlat
push
xor
sbb
inc
jl
push
sbb
sbb
ja,pn
in
xor
and
fists
roll
loop
xchg
dec
or
push
push
add
stos
mov
and
push
mov
cs
mov
add
pushf
push
mov
mov
adc
pushaw
push
push
movsb
pop
push
pop
xor
cmpsl
lock
sbb
lods
pop
lcall
lret
xchg
sbb
fdivl
jp
and
lds
sub
nop
mov
nop
lock
in
fwait
mov
ss
cmc
imul
flds
jnp
loope
mov
insb
subb
rorb
mov
test
daa
xor
fsubl
jnp
xchg
cmpsl
das
mov
js
pusha
sarl
addr16
pop
mov
scas
fisttps
leave
dec
dec
sub
jae
cmp
push
xor
add
lahf
inc
jbe
leave
movb
cmpsl
cli
sub
in
dec
cmc
mov
inc
lahf
push
ds
mov
sahf
add
es
xchg
les
cmc
pushf
push
loop
mov
mov
adc
jle
or
pop
sbbb
and
mov
fsub
shll
aad
add
sbb
jp
rcll
jecxz
in
mov
sahf
test
daa
mov
mov
arpl
lea
pop
loopne
mov
scas
je
mov
shrb
xchg
jo
out
pop
mov
insb
scas
jle
mov
in
jp
scas
xor
fucomip
adc
jg
sahf
sbb
insl
pop
or
pop
test
xor
inc
dec
shll
pop
mov
mov
loop
call
mov
ret
faddp
push
ja,pt
cmpl
loopne
test
or
aas
cwtl
test
rcr
adc
push
mov
mov
inc
repz
lret
scas
pushf
ja
in
les
and
jo
daa
xor
cmp
sub
andb
mov
shr
push
inc
loopne
js
std
lods
xorb
repz
gs
add
sub
pop
jo
dec
jne
out
test
insb
cmp
sub
add
cmp
jbe
adc
dec
or
fwait
rorb
mov
lds
stos
xchg
pushf
add
nop
mov
mov
inc
ljmp
push
bound
xchg
fisubs
push
imul
adc
dec
inc
cmp
movsb
popf
sub
xor
jmp
cltd
xchg
icebp
or
push
cmpsl
in
dec
jg
aam
jns
lret
or
push
cmpsl
xchg
inc
scas
xchg
fcompl
jmp
inc
xor
in
mov
cltd
call
cli
arpl
cmp
xchg
jl
mov
adc
aam
xchg
push
flds
sub
ljmp
add
cmp
call
pusha
jne
scas
in
or
dec
jno
cmp
test
aas
outsb
mov
mov
les
in
pop
mov
add
pop
test
mov
jmp
inc
fsubs
mov
jbe
or
idivb
cmp
add
xchg
jg
das
in
test
sbb
pushf
mov
loopne
and
mov
pop
and
cltd
mov
jmp
mulps
xchg
mov
pop
pushf
inc
push
pop
testb
mov
dec
mov
inc
mov
mov
mov
mull
cmp
mov
js
fs
inc
or
cli
or
lahf
lods
inc
iret
cwtl
out
cmp
sub
sarl
rcl
sub
mov
cmp
and
jle
dec
sub
outsl
or
pop
aad
repnz
xchg
shrl
sub
js
hlt
stc
cmp
xor
mov
push
lcall
pop
fcomi
jo
xor
testl
jno
mov
pusha
mov
push
imul
xchg
inc
jne
adc
xchg
repz
call
pop
dec
push
leave
rolb
cli
push
push
in
shr
xchg
mov
pop
mov
dec
or
sbb
leave
subb
sarl
in
dec
mov
notb
and
fists
insb
pop
pop
sub
rclb
xor
pop
jb
mov
push
sub
mov
shr
movsb
add
mov
loope
xor
and
stc
jno
xor
fcompl
outsl
rolb
out
dec
dec
or
mov
popf
fucom
mov
lahf
or
fcmovnbe
out
adc
xor
xchg
adc
mov
pop
outsl
mov
mov
push
subl
add
lds
icebp
popf
sti
dec
jne
popa
lock
aas
sub
negb
arpl
xchg
scas
xchg
outsl
cmp
insl
rorb
js
shll
push
mov
data16
ja
xor
loop
jbe
push
pop
insb
and
fdiv
in
ret
fidivl
iret
outsb
loop
aas
add
sahf
leave
adcl
test
mov
inc
dec
sub
pop
repz
ret
adc
sub
jmp
xchg
flds
je
or
mov
add
add
mov
xchg
cs
or
inc
std
cmp
pop
pop
sahf
mov
mov
sahf
fidivrs
xchg
sarb
xor
pop
outsl
xor
jbe
xchg
fcoms
movsb
add
mov
jl
lret
sti
ljmp
fistpll
cmp
repz
mov
pop
scas
scas
nop
lea
and
mov
xchg
jl
mov
push
xor
mov
or
jg
bound
test
pop
mov
adc
adc
imul
jl
jle
dec
dec
pushf
cltd
jl
insb
or
insl
jecxz
mov
into
jnp
out
cmpsb
arpl
leave
int3
orb
jae
mov
leave
clc
cli
sbb
mov
icebp
sti
das
xor
cmp
and
jae
mov
jb
mov
popa
lds
sbb
nop
push
repnz
or
pop
outsl
jp
mov
in
jnp
cwtl
jnp
push
test
push
xlat
loopne
mov
daa
dec
mov
pop
outsl
add
dec
lcall
ficomps
in
pop
add
mov
int
dec
cmp
jp
mov
imul
sub
shlb
or
rcr
ret
mov
jo
and
inc
sub
sub
jbe
adc
repz
or
cmpsb
js
mov
movsl
call
mov
cmc
pop
jbe
adc
sub
rol
das
lcall
jl
cmpl
mov
sbb
sbb
jb
mov
in
xchg
insl
push
fbld
jmp
jle
mov
ret
cmp
andb
popa
stos
orb
cmp
jl,pt
lahf
lods
inc
cmp
ret
add
ds
pop
jno
pop
cmp
and
into
dec
cmpsl
nop
pop
rorb
sub
in
pop
jo
mov
inc
out
and
sar
jo
mov
mov
fisubrl
ret
and
addl
shll
test
daa
cmp
add
jg
leave
or
test
xchg
cmp
mov
sub
xchg
dec
rcrl
lret
test
add
lock
pop
in
lret
lcall
sbb
ja
out
cmp
xor
sub
adc
icebp
fbstp
out
mov
or
xlat
cmp
or
lods
pusha
enter
mull
jno
or
fisttpl
fucomi
fdivrs
push
lock
je
mov
popa
jmp
shrb
dec
xor
push
inc
hlt
shll
cmpsb
sub
movb
iret
out
xchg
add
inc
shll
inc
xor
test
pop
xchg
gs
mov
push
in
mov
sti
sub
fisubrl
mov
push
pushf
inc
es
inc
cmp
in
or
sub
push
push
cltd
add
in
cli
sahf
push
mov
shll
ja
outsl
inc
aad
jl
inc
pop
or
mov
pop
iret
outsb
fnstcw
mov
mov
jecxz
das
mov
and
xchg
scas
xlat
pop
aas
or
and
push
adc
cmpsb
cmp
rolb
mov
or
sbb
lods
mov
xchg
inc
sub
xorl
or
lahf
pop
cli
pop
mov
mov
push
addr16
add
push
mov
push
out
mov
les
mov
mov
cmpsl
cwtl
cmp
cltd
sbb
mov
inc
aad
rcl
xchg
movsb
xor
xchg
mov
mov
test
hlt
leave
out
push
adc
sub
dec
dec
inc
sti
jo
fisubs
roll
inc
jne
fwait
jg
out
or
and
push
call
mov
cmp
stos
jo
sbb
sub
in
jnp
or
fs
mov
ret
xorb
jb
mov
leave
mov
xor
int3
fldenv
fwait
cltd
sub
mov
dec
movl
popf
data16
imul
jb
sub
lcall
and
fisttpll
sub
cmpsl
flds
and
pop
mov
xchg
pop
outsb
lret
sti
xchg
mov
push
xor
jle
inc
lcall
pop
into
push
orl
adc
fs
add
dec
or
out
jns
iret
add
es
fisttpl
and
ljmp
and
jle
pop
cmc
and
lahf
and
adc
mov
jae
push
add
ficompl
cld
movsl
mov
arpl
mov
push
jmp
cmpb
outsb
mov
sbb
bound
repnz
inc
mov
jo
in
imulb
fcoml
jp
enter
cmpsb
je
jne
sub
dec
jb
push
mov
loope
inc
inc
add
lret
sbb
mov
and
mov
out
push
out
std
xor
ja
das
clc
ret
dec
aaa
lds
arpl
sti
jg
scas
cs
sbb
mov
lock
jns
int
and
push
mov
divb
jg
outsl
scas
and
jbe
push
iret
adc
stos
sub
cmpsl
pop
adc
sti
lock
rclb
jl
xlat
icebp
out
rorb
push
push
int3
ficompl
scas
loope
mov
push
or
mov
or
aas
mov
or
mov
jnp
sub
cld
dec
addr16
ficoml
inc
hlt
mov
inc
xchg
inc
ljmp
dec
insb
inc
cmpsb
cmp
cs
push
icebp
add
cs
jbe
sbb
add
pop
ret
inc
and
cmpsl
push
lods
call
inc
jae
sbb
aas
xchg
mov
ljmp
jle
xchg
cwtl
outsl
add
xlat
lea
shlb
in
push
outsb
nop
jecxz
mov
mov
adc
xor
imul
into
dec
leave
lret
ret
loop
xchg
or
mov
xor
cmp
scas
arpl
cmp
pop
lcall
inc
lds
xor
cmp
inc
xor
divl
cmp
jbe
push
ds
pop
lds
cmp
rorb
fdivrs
stos
jnp
adc
jmp
jle
ss
jbe
sbb
xlat
sarb
mov
jno
cmp
scas
iret
loop
int3
or
inc
add
out
xorl
cmpsb
inc
pop
test
push
int
sub
jo
inc
rclb
leave
mov
pusha
push
or
jge
in
lock
dec
incl
xchg
fimuls
test
mov
rcrb
loop
xchg
lock
popf
imul
adc
pusha
icebp
jg
cmp
shll
xlat
sbb
addr16
cmc
sahf
pop
push
pop
sbb
inc
inc
fsts
dec
outsl
mov
xor
daa
adc
loopne
or
adc
or
xor
fdivl
call
std
jbe
iret
imul
xor
les
mov
or
cmc
sub
ficompl
into
push
bound
push
cmp
inc
sub
adc
push
test
fisttpll
mov
out
push
or
add
or
fcom
int3
call
scas
xlat
mov
fnsave
jl
lret
push
ret
mov
push
out
ret
dec
cmc
scas
push
movsl
ljmp
mov
mov
cld
mov
movsb
popl
xor
dec
ret
cmp
cmp
mov
js
movsb
enter
jne
test
out
add
fcoms
fneni(8087
pop
je
xchg
sbbl
imul
jp
add
push
sub
add
call
cltd
pop
cli
fmuls
outsl
push
and
and
das
sub
outsl
mov
call
ds
shrb
rorb
dec
or
sahf
xlat
dec
les
xor
inc
dec
dec
inc
sub
popf
loope
mov
ret
je
pop
xor
push
jns
jmp
in
shl
pop
mov
dec
xchg
adc
fiaddl
js
mov
xor
sbb
in
xor
ffree
int3
mov
dec
fisttpl
mov
pop
mov
cmp
jp
mov
sti
jecxz
loope
aas
push
dec
rolb
mov
fdivrs
mov
jo
std
adc
or
sbb
or
jmp
push
push
xchg
pop
adc
es
pop
sub
push
test
and
mov
xor
loop
clc
mov
repz
push
mov
inc
scas
daa
rcll
int3
roll
pop
insb
lds
mov
pop
daa
sbbl
mov
test
in
sub
test
mov
mov
mov
popa
lock
sti
bound
repz
into
inc
sbb
inc
xor
pmulhuw
aas
dec
fsubrs
fisttpll
cli
aam
adc
lahf
loopne
or
movsb
mov
loope
push
pop
neg
ret
xlat
xchg
push
mov
test
cld
pop
mov
icebp
les
mov
pop
adc
jnp
and
adc
dec
or
cmp
push
test
fdivrl
sbb
inc
push
add
inc
pop
nop
filds
add
pop
dec
xchg
lret
jmp
pop
adc
es
std
test
cmp
and
loop
sbb
push
cli
xor
out
lahf
adc
scas
repnz
mov
cmc
int3
jne
xor
mov
jae
mov
mov
lds
into
nop
dec
pop
dec
leave
mov
mov
cld
push
pop
and
cmp
dec
ds
jbe
and
aas
push
icebp
lods
js
cmpsl
cmp
jge
lods
lods
pop
aam
insl
mov
addb
in
jmp
sbb
movsb
dec
fnstcw
outsw
jl
je
mov
jl
mov
add
mov
hlt
cmp
arpl
mov
adc
push
cmp
cmp
lret
push
sub
xor
jmp
or
les
xchg
pop
mov
stc
dec
and
sub
test
pop
push
adc
pop
dec
mov
sub
jae
ss
jbe
hlt
inc
hlt
mov
sub
shlb
push
mov
jns
cmp
xchg
xor
sahf
test
in
pop
or
movsl
rol
xlat
test
aad
test
mov
jnp
loope
jl
fcompl
jns
popf
stc
cmp
sub
jle
sbb
rolb
sar
out
mov
fcoml
and
enter
dec
or
push
mov
xchg
gs
in
push
push
cmpsb
xchg
stc
push
mov
mov
and
add
push
xchg
add
adc
scas
jl
jae
jnp
movsb
jmp
xchg
jne
push
add
jmp
and
fdivl
shll
and
sbb
arpl
sbb
adc
pop
adc
xor
fisttpl
inc
mov
inc
stos
mov
and
cltd
push
mov
popa
popl
mov
add
fsubp
test
add
mov
fldcw
cmp
dec
push
repnz
pop
popf
cli
jnp
add
mov
inc
fs
int3
jmp
insb
mov
orb
es
ret
lcall
rorl
adc
dec
dec
iret
jne
cmp
dec
repz
test
mov
test
adc
ja
inc
push
add
sbb
pop
dec
fidivs
dec
enter
pop
adc
rcrb
sar
adc
pop
rcll
js
fs
pop
push
adc
je
test
fmull
jge
sub
mov
jbe
imul
or
inc
xchg
aad
sub
test
dec
jne
out
mov
cmpsl
dec
fbld
int3
mov
mov
lahf
pop
lcall
jge
lods
faddl
push
cmpsb
arpl
fbld
adc
cmp
mov
inc
inc
ret
mov
fcoms
inc
xchg
je
nop
lret
push
shrb
out
mov
and
mov
test
cs
dec
idivb
pushf
jne
pop
cltd
ret
fstl
mov
push
cmpsb
loop
popa
pop
flds
mov
fisttps
pop
insb
lock
xchg
mov
iret
lahf
fstpt
jnp
sti
add
lret
add
stc
pop
dec
push
mov
xor
cmp
popf
push
outsb
int
sti
lcall
cmp
jmp
in
adc
loopne
cmpsl
test
pusha
stc
jns
movsb
inc
les
xor
fwait
addb
shll
imul
cwtl
es
xchg
insb
add
xchg
mov
fmull
or
ffree
test
sbb
pop
mov
arpl
cmpl
mov
xor
push
or
daa
popf
pop
pop
fs
mov
pop
test
and
mov
stos
cmp
push
fidivl
dec
inc
inc
cmpsl
jle
mov
or
mov
inc
les
fstpl
or
nop
push
sub
sub
pop
mov
sti
xor
pop
jge
sbb
sub
xchg
incb
rorl
mov
iret
data16
sbb
ret
jle
icebp
mov
movsl
jecxz
or
sub
push
pop
pop
iret
repz
add
mov
mov
mov
inc
aas
mov
xchg
mov
sarb
lahf
into
imul
cmp
cltd
cmp
movsb
xchg
adc
mov
mov
aam
outsl
jns
in
aam
dec
insb
loope
in
xor
popf
mov
leave
mov
dec
mov
cmc
fs
cmp
add
sub
sub
and
outsb
inc
rorb
dec
push
and
xchg
xorl
xchg
das
sbb
rcll
xor
loope
xor
mov
lahf
sub
aad
ja
shlb
mov
push
mov
popa
dec
loop
dec
cmc
lock
or
pop
sub
daa
add
xor
jl
cmp
inc
sahf
pop
lahf
fnstenv
dec
mov
test
mov
mov
pop
or
adc
dec
pop
adc
jae
mov
stos
push
xor
or
inc
add
or
bound
cmp
cli
mov
xor
dec
rolb
dec
push
fbstp
enter
in
xchg
push
lahf
bnd
aaa
pop
dec
iret
daa
dec
xor
mov
jmp
jns
dec
mov
pop
pop
cmp
xchg
into
ds
jmp
scas
sub
xorl
icebp
dec
call
mov
pop
dec
inc
fisttpll
arpl
cmp
out
mov
xor
hlt
pop
outsl
pop
dec
pop
ljmp
push
mulb
loope
lcall
mov
mov
loope
inc
dec
or
jae
mov
aam
clc
aad
cs
xor
ljmp
jbe
ljmp
or
test
shrl
ret
add
sahf
mov
pop
aam
in
xchg
aas
arpl
test
push
jmp
pop
push
mov
mov
xchg
pop
push
test
ret
test
mov
into
sahf
lret
mov
sarl
pop
inc
jg
imul
or
xlat
xchg
mov
adc
xorb
jp
repz
imul
mov
in
pop
xchg
inc
aas
cs
cs
mov
jo
dec
les
mov
pop
ja
das
sahf
decb
xchg
push
bound
xor
jp
and
jbe
test
xor
lret
sub
cmp
sahf
mov
movsl
shrb
pop
sbb
inc
notb
ret
cltd
cmp
dec
imul
cmp
dec
jmp
push
inc
jns
dec
cmpsl
lahf
mov
cs
ljmp
xchg
lret
add
add
arpl
xchg
xchg
ds
mov
sbb
dec
stos
or
sti
push
out
les
rcrl
jbe
adc
imulb
xchg
fs
test
loope
call
push
inc
popf
lret
roll
test
dec
ljmp
jnp
mov
fldenv
les
push
xlat
ret
sbb
jns
int
and
mov
cs
xor
shlb
roll
insl
les
dec
xchg
decb
pop
push
fistps
push
jae
aas
xchg
call
shll
push
ds
outsl
pop
jge
xor
inc
hlt
leave
sub
test
mov
pop
fisttpll
mov
aaa
outsb
push
jnp
outsl
jle
cmp
mov
xlat
dec
ret
sub
sbb
orl
pop
and
leave
scas
lds
in
mov
xchg
fidivrs
fiaddl
rcl
and
push
push
jmp
jge
shrb
test
and
mov
pop
fimull
ret
les
mov
ficompl
mov
push
push
nop
sub
push
sub
lret
movsb
dec
cmp
cmp
aam
fildl
xor
mov
imul
gs
fsubrl
adc
jl
shr
leave
stos
gs
adc
jo
ds
mov
jo
dec
push
xchg
or
lcall
ficompl
dec
lea
add
insl
testb
in
lret
fidivl
lods
and
notb
add
xchg
sbb
sub
pop
push
jmp
fisttpll
test
and
daa
jne
jl
adc
sub
or
out
mov
mov
repnz
jp
cmp
jb
lret
pop
sbb
cld
and
jnp
push
push
add
and
gs
adc
sub
mov
cmp
lods
loop
les
jp
fildll
stos
int3
push
ljmp
push
int3
icebp
or
fisubl
inc
stc
mov
jo
fdivrs
mov
cmp
jns
test
xchg
fmul
nop
jae
pop
xor
test
mov
scas
fdivl
add
aad
pop
jne
mov
adc
daa
lret
mov
push
push
inc
sarl
lret
sub
mov
mov
dec
dec
cmp
imul
popa
cmp
pop
insb
test
mov
xchg
and
mov
out
je
adc
imul
mov
popf
leave
sbb
pop
aas
add
push
add
xchg
movsb
and
lds
int3
sbb
mov
jae,pn
in
loope
bound
nop
incb
xchg
pop
hlt
and
mov
out
ljmp
rcl
push
push
cmp
add
aam
inc
jecxz
lock
mov
fcomps
testb
jne
fsub
je
pop
fisubrs
fsub
lahf
and
outsl
mov
inc
shrl
movsl
shl
aam
imul
sbb
xchg
cmp
jnp
fbld
ja
mov
or
push
stos
sti
lcall
adc
mov
or
cmp
pusha
jne
jmp
jnp
shlb
stos
inc
jbe
inc
fidivs
mov
cltd
sbb
jb
clc
inc
mov
bound
ss
mov
mov
cltd
mov
xor
in
inc
inc
scas
icebp
sbb
inc
xchg
mov
jnp
or
lods
pop
mov
cld
xor
fists
cmp
cmp
xchg
mov
lock
es
int3
fs
jo
xchg
roll
sub
cmp
push
adc
lods
jge
xor
ret
jmp
daa
mov
lock
sar
jae
xchg
in
xchg
fisubl
or
inc
jne
mov
pop
cmpsb
rcl
lret
mov
sarl
shr
mov
les
push
cs
push
paddb
mov
scas
scas
loopne
push
mov
mull
pop
sub
pusha
pop
cmp
inc
dec
xor
and
jl
xor
xchg
jl
jo
insl
cmp
sbb
push
shrl
lea
push
xchg
jb
lock
sub
pop
push
cs
jnp
push
xor
sub
cmp
push
mov
scas
jbe
gs
arpl
pop
jo
mov
insl
mov
adc
lret
fcmovnb
pop
stc
push
je
shr
xchg
stos
mov
push
in
or
mov
les
mov
sub
push
mov
mov
pushf
pop
push
ljmp
mov
cmp
mov
out
icebp
fwait
loope
arpl
xor
jle
mov
dec
dec
add
adc
pop
xchg
and
inc
shlb
pop
mov
cmpsb
mov
xor
lret
lcall
pop
enter
push
gs
push
mov
aas
push
inc
fisubl
mov
push
mov
mov
in
xor
roll
inc
cmpsl
adc
xor
sbb
cmp
cwtl
xor
aad
pop
les
lret
int
push
scas
sub
cld
sub
sbb
xchg
gs
jns
bound
ss
xchg
adc
nop
scas
dec
arpl
dec
pusha
fs
pop
js
cmpsb
daa
lea
mov
xor
les
pop
pop
mov
dec
scas
fldcw
cwtl
subl
pop
jne
pop
push
xor
and
push
pushf
cld
mov
xchg
pop
dec
cmp
push
mov
fs
aad
call
sbb
dec
xchg
nop
mov
dec
push
imul
mov
popf
es
mov
sbb
into
fucomp
movsl
sub
lock
leave
and
mov
inc
push
outsb
aad
scas
rol
mov
push
mov
sbb
inc
and
cmc
cmp
mov
out
rclb
ds
jmp
mov
bound
push
and
mov
pop
mov
into
xlat
mov
sti
js
sahf
push
push
cld
and
sub
mov
addr16
sub
and
jmp
or
test
inc
lahf
mull
jge
mov
inc
ret
sbb
ret
and
jl
fidivrl
mov
dec
or
lea
mov
xor
sti
pushf
mov
movsb
and
cmp
dec
fimuls
enter
inc
mov
test
push
inc
in
pop
pushl
cwtl
xchg
nop
xchg
inc
pop
pop
subl
cmp
mov
inc
mov
lods
jp
mov
xchg
and
dec
insb
inc
push
repz
adc
enter
ds
xchg
ja
sub
mov
mov
cmp
push
lret
jbe
sub
mov
pop
jp
ret
testb
scas
stc
xchg
mov
movsl
push
or
stc
fnstcw
inc
xchg
int3
sub
mov
dec
sbb
dec
push
mov
sbb
dec
imul
xchg
and
jae
out
pushf
xchg
int
pop
mov
mov
cwtl
or
les
add
flds
test
mov
iret
fdivrs
and
xchg
inc
cld
int3
movsb
push
xchg
inc
enter
mov
pop
fldcw
pop
adcl
filds
mov
aad
pop
xchg
dec
cmp
xchg
or
out
add
add
jnp
cs
mov
xor
xlat
and
int
sarl
pop
ret
mov
sub
mov
je
and
cli
xor
pop
daa
xchg
xor
pop
scas
das
sub
mov
aas
jecxz
dec
movsl
jne
pop
mov
mov
push
sub
adc
pop
pop
fdivs
or
pusha
pop
inc
pop
xchg
or
xor
enter
mov
cmc
dec
mov
lods
jae
lcall
xchg
adc
pop
xor
push
xchg
inc
mov
lods
cmp
cld
sbb
out
sbb
xchg
and
add
and
pop
out
icebp
mov
xchg
scas
xchg
out
mov
outsl
cmc
pop
inc
xchg
add
xchg
jbe
mov
pop
cmp
outsl
adc
mov
dec
inc
push
adc
xor
mov
cmp
dec
fisttpll
stos
cwtl
adc
cld
fisttps
dec
fidivrs
push
sub
outsl
aas
inc
mov
mov
lret
mov
mov
cs
xor
pop
or
mov
push
and
aam
ds
loope
je
inc
pop
jbe
arpl
decl
int3
mov
sub
mov
inc
ljmp
js
sub
push
jae
or
das
adc
lods
lock
cmc
xchg
cmpsl
aas
dec
or
cmpsl
adc
lea
xorl
xchg
jns
iret
arpl
mov
mov
sub
or
and
xor
int3
fwait
mov
push
mov
rorl
pop
lcall
adc
inc
xchg
and
cmc
clc
xor
mov
mov
or
or
fnstsw
and
loopne
dec
mov
and
cmp
mov
int
imul
loope
nop
loopne
ret
mov
or
pop
shr
std
push
popa
aam
adc
and
add
out
adc
call
imul
pop
sar
incb
push
test
call
xor
dec
dec
sub
lret
push
add
fcompl
ss
adc
xor
sbb
lods
popa
push
pop
xlat
leave
cmp
lret
fstl
sub
xchg
or
dec
or
xor
sbb
test
push
js
xchg
lahf
stos
lret
mov
inc
xchg
add
dec
mov
xor
mov
call
lahf
push
sub
lea
inc
ret
dec
cmp
je
dec
pop
sub
into
sahf
cwtl
dec
mov
jmp
push
add
pop
add
in
int3
fbstp
mov
fwait
xor
cs
mov
das
or
xor
xchg
lods
dec
data16
popa
add
sbb
or
pop
lods
fisttpll
add
push
nop
add
prefetch
inc
push
out
sub
or
inc
jmp
fs
xchg
dec
inc
fsubrs
call
in
sub
mov
popa
fdivr
xchg
add
xor
popf
fmul
cmp
cmpsl
mov
popf
add
clc
mov
stc
xchg
xchg
and
adc
ja,pt
mov
add
popf
loopne
stos
lret
outsb
aas
shlb
mov
mov
add
xchg
jl
in
mov
repnz
inc
rcrl
stos
mov
cmc
push
adc
iret
mov
or
or
mov
test
loopne
shl
icebp
xor
imul
xor
fcmove
mov
pusha
jp
xor
sub
jne
cli
fst
add
lret
push
lock
sub
lret
cmp
addr16
dec
xchg
mov
inc
push
mov
shrl
or
rclb
insb
jmp
sub
dec
std
mov
jno
mov
jns
sbbl
jb
add
xchg
push
mov
mov
test
push
sub
push
out
hlt
mov
loop
mov
cmp
sahf
or
leave
push
loopne
int
mov
adc
ret
movsl
leave
lock
dec
and
jnp
out
subl
sub
xlat
cmpsl
into
pop
lds
loop
sbb
mov
addr16
pop
inc
movsb
jle
mov
or
das
jae
and
insl
and
adc
add
sub
jge
cld
xchg
push
outsb
cwtl
in
fwait
mov
loope
cmp
sub
pusha
repnz
aaa
xor
mov
jp
icebp
push
pop
mov
subl
mov
stc
push
jmp
roll
inc
in
push
inc
pop
sub
dec
pop
mov
push
inc
xchg
mov
jmp
les
or
mov
xchg
insl
adc
sbb
mov
mov
hlt
test
mov
jne
ds
subps
inc
subb
and
mov
lret
pop
sub
movsl
arpl
lock
fwait
fwait
xchg
cmp
and
pop
cwtl
int3
clc
lods
sub
in
andl
adc
pop
aam
inc
pusha
xor
pop
lahf
std
push
inc
jl
addl
sbb
mov
loop
xor
outsl
inc
or
sahf
btc
mov
mov
shl
leave
mov
push
xchg
imul
inc
or
fwait
push
ds
mov
not
pushf
jne
and
xchg
jo
into
cli
leave
and
aam
out
test
pop
sub
lret
nop
mov
filds
std
daa
in
lret
imul
subb
fdivl
xor
andl
outsl
push
xor
test
mov
mov
addl
ljmp
stc
outsb
arpl
idiv
xor
cmp
iret
in
push
shlb
jno
sahf
xchg
fwait
mov
adc
xchg
std
push
sub
jne
ficompl
mov
jecxz
xchg
das
loopne
testb
dec
or
jbe
push
xchg
fsub
call
es
inc
xchg
rolb
hlt
aam
adc
int
jmp
mov
lds
fimuls
dec
cmp
mov
int
mov
and
push
add
and
popf
pop
xor
addl
jae
dec
dec
sbb
lret
clc
stc
fsubl
arpl
add
xorb
dec
dec
test
pop
jle
movsl
mov
lret
rcll
int
sbb
adc
mulb
push
mov
push
clc
ja
fldenv
lds
xor
ss
jnp
inc
movsl
and
mov
lds
xchg
loope
leave
jbe
sub
clc
in
xchg
add
fcomps
jmp
cmp
inc
cmp
data16
and
cmp
adc
addr16
cmpsl
mov
xchg
fiadds
push
cmpsb
fmull
hlt
sub
addr16
cmpsl
cli
mov
fldenv
sub
lret
loope
adc
std
dec
and
test
jbe
stos
xchg
lret
popf
stos
shlb
push
dec
mov
cmp
scas
imul
nop
jle
inc
test
popa
sbb
shr
cmp
push
lret
dec
xor
in
popa
push
add
leave
inc
dec
cmc
xor
popa
arpl
sbb
fimuls
xchg
call
hlt
cmp
leave
xor
push
popf
mov
and
add
xor
dec
pop
sbb
jecxz
push
fwait
mov
pop
and
lret
pop
push
movsb
mov
ror
scas
rorl
stos
jbe
lea
jae
aam
mov
dec
cmp
dec
outsl
dec
cmp
out
loop
inc
add
inc
cmp
mov
icebp
inc
adc
setbe
movsl
jno
or
cltd
cmp
fwait
add
xor
in
sub
jg
aaa
adc
fistps
and
pop
xchg
sbb
les
jmp
subl
std
lods
subl
mov
mov
adc
lret
in
push
test
pop
test
sub
sbb
jge
cmpl
xor
pop
jp
ret
call
adcl
loop
mov
mov
and
push
jl
sbb
jp
in
jg
push
bound
inc
lods
mov
mov
sarb
sbb
insl
mov
push
mov
out
cwtl
aam
push
pop
jno
out
fnstsw
jp
jb
popa
fmuls
inc
pop
xchg
test
jbe
jge
mov
pop
addl
dec
xor
ds
push
mov
montmul
cmpsb
push
dec
mov
outsb
xchg
outsl
stos
inc
cld
jno
lret
call
mov
test
push
push
and
inc
push
cmp
movsl
rcrl
mov
mov
xor
dec
int
aas
sarb
pop
pop
inc
and
call
pop
fmulp
sti
not
cmp
iret
xchg
scas
pop
test
jl
mov
jmp
cltd
add
int
pop
iret
enter
sbb
sub
cmc
icebp
jge
movsb
push
add
jecxz
daa
cs
cmp
mov
mov
out
mov
cmpsl
inc
ljmp
js
lahf
xor
adc
mov
or
repz
xor
inc
mov
outsl
outsl
cmp
or
mov
or
push
xlat
fisubl
pop
loop
dec
stos
pop
xor
test
push
cwtl
shll
gs
mov
sbb
push
dec
push
pop
in
mov
and
stc
mov
lods
inc
and
dec
daa
movsl
imul
adc
add
push
cmc
pop
mov
pop
cmp
icebp
dec
jmp
int
adc
pop
adc
shrl
imul
xchg
sub
das
fsubrs
mov
inc
jp
les
cmp
sub
lods
int
cmpsl
adc
add
jmp
inc
mov
add
movsb
add
fwait
mov
jle
mov
lds
add
cmpsl
and
sub
fdivs
add
jge
pop
pop
dec
inc
icebp
mov
out
or
iret
stos
jg
mov
imul
nop
xlat
movsl
sub
sub
imulb
shr
inc
sti
mov
jne
das
and
xor
and
outsb
icebp
cli
jle
cmp
test
mov
pop
sub
add
hlt
add
mov
mov
push
rcrl
xor
pop
lcall
out
inc
mov
addr16
or
push
mov
pop
push
adc
inc
aad
out
int
nop
jbe
fs
imul
bound
fcmovne
dec
xchg
loope
or
sbb
mov
mov
arpl
inc
in
stos
cmp
movsl
mov
add
lret
sbbl
sub
or
xchg
and
jo
push
mull
repz
mov
adc
leave
mov
lock
out
int
jecxz
or
adc
mov
add
lods
push
sub
popf
or
mov
mov
cltd
imul
cmp
scas
pop
les
dec
das
mov
push
xchg
jns
inc
mov
fldcw
stos
or
and
icebp
cli
push
push
pushf
push
sub
xlat
inc
mov
fisubs
add
jl
imul
pop
mov
dec
jecxz
cmp
xchg
mov
int3
fsubl
add
jmp
sub
test
add
hlt
mov
rolb
les
imul
in
adc
add
xchg
xchg
enter
in
shll
mov
cld
dec
push
push
lea
ror
test
dec
xor
lcall
iret
lea
jl
sahf
nop
addr16
sbb
sarl
add
jbe
fcomps
js
jl
pop
cmp
ret
mov
fsubs
jp
mov
mov
xchg
pop
sbb
insl
movsl
ret
mov
and
mov
mov
sahf
js
sbb
es
pop
cmpsb
sahf
mov
mov
jg
mov
sub
adc
dec
aam
jecxz
daa
jg
mov
iret
xor
sub
sbb
mov
push
inc
jecxz
sub
imull
inc
pop
xchg
adc
cmpsl
and
gs
fldt
push
shll
test
inc
sub
ficomps
or
popf
jl
inc
movsb
xchg
cmpps
push
add
lods
enter
mov
dec
ss
push
popf
gs
sbb
push
and
sbb
mov
aaa
inc
cmp
xchg
ss
or
adc
in
dec
sub
adc
add
cmpsb
addr16
popf
loop
push
jmp
ljmp
mov
mov
lahf
cmp
cmc
sbb
das
jae
aas
adc
push
addr16
or
inc
lea
pop
jmp
cltd
leave
mov
iret
cmp
xor
idivb
push
inc
scas
pop
cmpsl
sbb
out
cmp
mov
mov
pop
dec
add
aam
out
xor
out
cmp
push
repnz
xchg
out
movsb
xchg
ss
test
lret
mov
je
jb
and
lahf
mov
mov
fnstsw
rep
popf
pop
jno
push
stc
add
push
adc
adc
mov
mov
xchg
jnp
pop
jnp
xor
iret
adc
add
imul
and
dec
cmpsb
push
decb
push
js
iret
lret
lret
xchg
jns
fldcw
sarl
addb
lock
test
push
dec
lret
push
mov
push
lods
cwtl
jmp
mov
and
shrl
jecxz
cmp
inc
mov
daa
sub
rol
push
or
cwtl
sbb
imul
pop
cli
adc
arpl
pop
mov
arpl
mov
sub
sub
call
fcoml
imul
adc
cmpsb
jecxz
push
ja
jno
or
jmp
stos
movsb
dec
icebp
loopne
dec
popf
sti
into
and
mov
add
jmp
addr16
jbe
and
dec
cmpsb
mov
xchg
repnz
pop
or
callw
cmp
test
pop
shrb
jo
adc
or
add
dec
push
rolb
pop
in
adc
cmp
xor
mov
mov
rorb
mov
movsl
dec
xchg
mov
cmp
xor
div
inc
not
sti
mov
pop
dec
push
fldcw
lock
loopne
pusha
das
movsb
jp
dec
push
pop
inc
or
adc
jne
push
mov
inc
add
mov
sbb
or
adc
inc
bound
ja
fs
idivb
xchg
mov
pop
dec
ja
out
and
jecxz
sub
enter
adc
daa
cmpsl
nop
idivb
jg
icebp
mov
iret
mov
sub
sbbl
add
andl
dec
lret
clc
inc
lods
mov
aas
aaa
jb
dec
xor
int
bound
ret
out
mov
pop
les
pop
or
mov
std
lcall
cmp
sbb
mov
pusha
movsb
jns
adc
adc
mov
test
call
imul
lret
dec
out
and
pop
add
cmpb
scas
outsl
andb
les
mov
adc
xchg
sbb
filds
hlt
lret
inc
loopne
movsb
int
popl
fs
inc
std
jmp
push
fidivrl
add
and
mov
frstor
or
cmpsl
out
out
and
clc
fcmovu
pop
js
xor
fwait
xchg
dec
nop
aas
sbb
xchg
xchg
xchg
jg
int3
or
mov
pop
fldcw
and
lret
jbe
mov
push
xchg
sub
ret
enter
mov
dec
movsb
cmp
pushf
inc
lock
and
and
adc
lods
sub
cmp
add
pop
push
ret
dec
in
mov
or
shrb
pushf
mov
push
ret
popa
push
sbb
aaa
jmp
inc
int
cmpb
cli
outsl
idivb
mov
movsl
out
or
sub
test
cmp
xchg
aam
fistps
or
jae
jb
pop
inc
sub
lret
nop
pop
sbb
arpl
pop
mov
mov
gs
dec
mul
mov
xor
bound
popa
pop
cmpb
cmp
mov
add
sbb
push
scas
fwait
push
leave
loope
mov
rcrb
mov
int3
and
fimull
dec
ja
loopne
xor
add
repnz
shrb
out
sahf
mov
and
xor
jecxz
add
out
add
xchg
mov
pop
cmp
adc
pop
sub
ds
xor
test
dec
xchg
mov
scas
jno
ljmp
adc
rclb
push
stc
mov
xchg
dec
sub
inc
ss
xchg
repnz
in
ja
loopne
mov
out
out
enter
and
jno
jb
sahf
xchg
repz
jae
mov
mov
outsb
cmp
test
rorl
mov
inc
pushf
imul
fstpl
mov
repnz
lret
stos
mov
mov
shrl
rcrl
pusha
mov
sub
into
enter
loope
fistl
lahf
pop
test
mov
cmc
int3
sub
xor
sti
cltd
repz
mov
in
xorb
fnstenv
in
sub
sub
jb
test
adc
cmp
jbe
dec
push
ret
or
xor
andb
sub
mov
inc
sub
out
xor
outsb
mov
pusha
pop
loopne
push
ds
lea
sti
popf
pop
nop
jns
and
out
stc
sti
push
mov
or
leave
push
cmp
and
adc
sub
dec
jge
test
inc
mov
rolb
jle
pusha
dec
fstps
sub
mov
ljmp
imul
xchg
sbb
and
sbb
jp
ret
mov
dec
sub
mov
push
scas
and
cmp
jl
jg
inc
sub
lds
mov
mov
cmp
call
and
call
lock
or
je
out
jb
lahf
xchg
scas
inc
mov
les
ss
popa
sub
push
jle
mov
jecxz
and
mov
jg
popa
inc
sub
inc
ret
mov
and
pop
xor
inc
in
cmpsl
int3
popf
xchg
jb
dec
push
mov
scas
push
jecxz
pop
movsl
add
daa
sub
push
rcrb
lret
fwait
adc
add
rol
aam
cmp
fiadds
outsl
jmp
xchg
mov
dec
imul
inc
scas
daa
push
pushf
or
mov
sub
jge
out
push
pop
mov
in
test
stos
sbb
mov
mov
sbb
xchg
mov
dec
sti
push
or
or
aam
mov
mov
rcrl
pushf
jns
push
cmpsb
cmp
push
xlat
cmp
xlat
jl
dec
inc
push
dec
cmp
popa
mov
and
mov
xchg
cmp
sub
inc
inc
dec
push
ret
and
push
inc
adc
sahf
inc
and
in
repnz
fisttps
insl
jge
inc
mov
add
xchg
dec
add
sub
or
in
aad
sub
sub
push
divps
lods
sub
clc
ficompl
lret
leave
addr16
and
cwtl
mov
dec
call
inc
jmp
ficoms
jle
push
fxch
jl
dec
pop
nop
sub
xor
mov
dec
sbb
or
out
cli
ret
flds
loopne
jle
lods
xchg
popa
and
out
out
add
jb
stos
xchg
mov
test
inc
mov
xor
jp
dec
js
add
adcb
cs
sub
in
jle
add
jg
repnz
adc
pop
clc
rclb
and
sbb
lods
pop
je
cltd
cld
arpl
pop
jno
xchg
hlt
sub
xor
pop
add
int3
lds
fcomp
stc
in
inc
lods
mov
mov
test
fistps
int
cmc
loop
xchg
dec
add
fmul
push
test
xchg
sub
jecxz
mov
inc
std
push
gs
dec
aaa
xor
out
ja
sbb
mov
aam
sub
push
add
push
test
data16
decl
mov
lret
test
dec
dec
push
es
insl
pop
inc
ss
xor
lods
movsb
std
icebp
push
jecxz
gs
popa
ds
out
adc
adc
hlt
inc
jb
adc
or
sti
jecxz
xor
enter
out
js
mov
sub
mov
inc
fdivp
ret
pop
dec
lods
mov
pop
push
lock
cld
mov
dec
jl
hlt
or
loope
xor
gs
sub
push
pop
xchg
int3
outsb
push
sti
sub
jb
das
cmp
or
data16
leave
pop
scas
inc
insb
sub
lock
scas
jle
inc
mov
xchg
cli
fsts
inc
shrb
inc
dec
or
add
out
xchg
jns
fwait
xor
jg
sub
fadd
cld
mov
loop
scas
lret
cmp
lock
inc
call
or
add
in
sbb
mov
push
ret
outsl
xor
pop
xor
pop
call
stos
push
repnz
cmp
jecxz
dec
dec
bound
popa
pop
leave
mov
jl
es
insl
jp
push
inc
push
popf
cmp
fdivrl
aas
in
insb
lahf
inc
dec
and
outsb
sbb
loop
sbbl
aas
popf
mov
jno
adc
jg
cltd
je
mov
xor
mov
dec
repz
imul
scas
adc
sti
ds
lea
rcll
add
xchg
sahf
sti
and
pop
add
or
inc
hlt
pop
and
js
pop
insl
push
xlat
clc
inc
and
mov
js
and
mull
int3
push
mov
adc
cmp
adc
cmp
nop
pushf
sbb
pop
cmpl
add
data16
inc
shl
pop
je
testb
enter
inc
sub
ret
shrl
es
sar
sbb
lcall
imul
inc
mov
pushf
out
jns
aam
mov
push
shl
jnp
or
aaa
jl
xchg
dec
dec
inc
dec
and
sarb
xchg
imul
mov
cmpxchg
insb
shrb
push
dec
cmp
mov
je
jns
fldt
xchg
dec
xchg
mov
inc
into
int
ficompl
mov
sbb
pusha
inc
stc
cltd
sub
mov
sbb
dec
ja,pn
dec
add
sub
popa
into
xor
mov
lock
dec
cmp
or
in
or
cmp
mov
cmp
std
test
jo
jo
test
jle
cmp
filds
push
in
dec
cmc
mov
test
std
xchg
mov
mov
and
leave
rcrl
rcrb
jnp
mov
cltd
mov
ret
or
jmp
sahf
xchg
pop
iret
and
hlt
add
xchg
faddl
mov
out
fldcw
bound
pushf
push
inc
and
rcrb
jg
or
xlat
nop
fists
leave
and
mov
mov
dec
decb
push
push
jno
jno
inc
sub
or
adc
sbb
insb
cs
cld
ds
jp
pop
repz
lea
in
cmp
sbb
jmp
xchg
pop
insl
or
inc
cli
pushf
sbb
cld
add
mov
ret
test
ss
out
icebp
popf
mov
mov
lret
sbb
ret
mov
inc
jp
and
aad
push
call
test
inc
mov
mov
mov
outsl
jne
mov
faddp
out
adc
inc
repz
mulb
add
out
decl
out
enter
add
call
dec
cld
out
iret
out
push
ret
cs
xcrypt-ecb
push
jmp
aam
or
daa
cmp
jns
mov
inc
shlb
incb
or
xlat
push
dec
fldt
data16
xlat
xchg
hlt
repnz
cmp
pop
cmpb
inc
ret
mov
push
lret
nop
jae
outsb
int3
fdivl
push
aad
icebp
shl
or
pop
pop
inc
leave
int3
pop
push
mov
dec
ljmp
pop
scas
xchg
sub
js
push
mov
add
dec
mov
ljmp
dec
loopne
pop
dec
sbb
pop
pop
add
push
addr16
fsubl
push
mov
bound
pop
inc
push
mov
mov
cld
clc
test
mov
out
rcr
xchg
test
jo
clc
cwtl
inc
cmpsb
mov
ds
mov
cltd
xchg
xchg
test
into
cld
enter
in
nop
cmpl
mov
outsl
sarl
mov
jne
inc
not
cmp
sti
jnp
aaa
jnp
mov
movsl
mov
mov
jecxz
push
aas
mov
xor
test
lods
inc
xchg
pushf
dec
xchg
mov
push
repz
int3
or
scas
cmp
bound
stos
cmp
xchg
lds
sub
xlat
xchg
lods
mov
pop
xchg
cmp
sub
sub
aas
mov
pop
cmp
mov
into
dec
stos
sub
pop
aas
sbb
pop
jne
mov
jae
aas
pusha
pop
je
aad
loope
push
pop
cmp
test
xchg
xorb
push
sub
add
test
loop
ret
sar
push
jge
mov
sub
test
cmp
in
dec
repnz
inc
xchg
or
cmc
stc
mov
push
cmpsl
testl
imul
sbb
push
mov
adc
bound
push
mov
add
push
sbb
or
mov
mov
sbb
ret
in
pop
pop
jbe
vexp2ps
jno,pn
jl
arpl
pusha
jbe
test
cmp
cmp
xor
scas
das
ss
es
sti
out
and
stos
imul
fdiv
fldcw
xor
jae
out
inc
js
add
movsl
cmc
cmc
sahf
fsubp
or
daa
jle
loop
cmp
fs
out
dec
lret
loope
ds
sub
sub
adc
hlt
pop
imul
inc
orb
jns
pop
cmpsb
or
mov
xchg
cmpsb
dec
aaa
int3
mov
push
add
stc
cmpsb
cld
or
arpl
xlat
pusha
pop
out
pop
mov
fldenv
repnz
mov
bound
xchg
cli
out
jl
adc
xlat
andl
mov
int
shll
pop
add
mov
jge
outsb
add
add
icebp
loope
dec
cmp
and
push
sub
sbb
jns
dec
or
loop
lods
loope
std
adc
or
incb
insb
loopne
jge
dec
scas
sub
fwait
mov
sub
add
mov
stos
movb
jmp
fcmovb
fisttpll
inc
lods
pop
sbb
mov
cmpsl
orb
mov
rcrb
icebp
dec
cmpl
enter
bound
adc
adc
loope
movsl
inc
movsl
push
xchg
jge
mov
mov
push
je
lds
sub
push
lret
cmp
mov
jp
pop
sbb
inc
ds
scas
mov
test
and
pop
in
dec
je
lret
pushf
cmp
into
mov
adc
and
sbb
in
stos
mov
fucom
jbe
addr16
jle
jb
arpl
pop
jb
xor
test
sub
xchg
push
in
hlt
mov
popf
inc
icebp
xchg
mov
rcrb
test
mov
addr16
popf
and
sub
fisubrs
arpl
push
mov
push
scas
xchg
cmp
or
adc
sub
je
jb
fmulp
push
mov
cmp
inc
cmp
xorl
sub
add
addr16
iret
push
and
push
cmc
jnp
movl
mov
aaa
stos
imul
fsubrs
xor
lock
or
lret
out
aad
push
or
push
or
stos
dec
fistps
pop
mov
setne
sub
inc
nop
sub
cmp
leave
mov
mov
fsts
inc
fld
ficompl
mov
gs
sub
addr16
shlb
inc
lret
sahf
fstpl
fnstsw
repz
dec
add
dec
sbb
outsl
clc
nop
pop
inc
rcrb
push
push
ja
fmul
push
clc
andb
and
gs
mov
outsl
test
pop
in
jne
hlt
lods
mov
sbb
shrl
decb
push
ja
push
sbb
sub
gs
inc
stos
mov
lret
shll
xor
jb
mov
sub
jp
das
mov
inc
inc
xchg
inc
addr16
adc
inc
leave
sbb
adc
mov
mov
outsl
mov
faddl
fisubrs
hlt
adc
aas
lock
into
mov
lods
xor
jnp
neg
pop
cmp
out
rcl
dec
loop
jbe
cmpb
xchg
test
pop
sbb
sbb
mov
lea
xchg
mov
push
and
std
add
mov
cmp
mov
pop
inc
and
mov
xor
fldcw
sbbl
sbb
mov
push
das
in
cltd
ss
xor
cs
mov
movb
rorb
nop
pop
stos
fsubrs
popf
mov
data16
and
dec
fidivrl
xor
mov
lock
mov
movsb
mov
imul
jge
xor
xchg
fbld
dec
or
dec
scas
jno
mov
cmpb
xchg
fdivrs
mov
in
cmp
loop
stos
stos
lods
mov
scas
enter
insb
add
jae
xorl
sbb
sub
inc
leave
sbb
sub
stos
cwtl
sbb
into
movsb
cwtl
and
fistpl
and
clc
lret
mov
ror
mov
pop
xor
mov
imul
cmp
and
jge
inc
jo
bound
pop
mov
adc
and
add
add
mov
push
jmp
lea
push
test
scas
mov
xor
lods
push
xchg
movsl
inc
xchg
in
enter
xor
push
nop
dec
mov
out
mov
or
xchg
icebp
mov
test
mov
gs
sbb
movsb
jge
push
xchg
mov
sbb
xchg
mov
into
scas
std
xchg
xchg
lret
adc
scas
mov
jmp
in
shlb
jle
sub
js
nop
iret
add
sbb
xchg
fwait
add
push
fimull
fiaddl
adc
pop
js
dec
inc
pop
ret
or
mov
sub
fisttps
loop
lret
pop
scas
inc
pusha
push
loope
imul
push
jmp
fimull
divb
out
stos
iret
or
test
es
pop
cmp
mov
adc
ja
adc
test
mov
pop
out
xchg
movsl
lret
fisttps
xor
xchg
push
ds
data16
xchg
sub
enter
xchg
testb
inc
sar
sti
pop
lods
mov
push
cmp
dec
xor
fisubl
inc
sti
andb
or
cs
dec
sbb
ds
repnz
mov
push
mov
push
sub
dec
arpl
sub
test
hlt
shll
cmp
push
push
mov
mov
mov
jbe
adc
aas
mov
lods
int
out
aaa
adcb
pop
xor
and
add
repnz
and
andb
leave
and
call
rcr
ljmp
jle
fcmovnu
xor
rcrl
scas
imul
fldcw
shll
and
fistpl
push
dec
jbe
clc
push
cmp
jb
imulb
push
insb
mov
dec
push
mov
stos
stos
sbb
pusha
xchg
out
sub
inc
pop
mov
fwait
ds
jmp
xchg
call
aaa
sbb
sub
scas
sub
and
sub
out
mov
jl
outsl
pushl
repnz
fisubrs
jge
add
cmp
sbb
and
movsl
xor
hlt
hlt
lret
jbe
push
lock
cs
inc
enter
cmc
xor
mov
or
aad
jg
mov
jo
dec
jns
push
dec
push
subl
mov
negl
mov
cltd
fidivrl
sbb
sbb
add
mov
mov
and
out
ret
jecxz
insb
xchg
inc
aaa
inc
mov
enter
loopne
rorb
lret
cmp
pmullw
stc
jge
mov
lret
jl
jbe
push
dec
js
jp
mov
xchg
inc
push
add
xchg
lods
les
cmpsb
mov
add
adc
jo
mov
inc
stc
jno
je
lret
push
int
inc
sbb
pop
add
fucomi
enter
aam
sti
push
sahf
lods
mov
or
or
fisttpll
and
imul
call
mov
sti
rorb
pop
cmp
sbb
or
and
inc
sbb
jb
ficoms
repnz
nop
cmpsl
pop
push
dec
test
mov
dec
scas
movsl
ds
dec
pusha
push
iret
fisubrs
fsubr
cld
cmovns
shrl
dec
sahf
enter
bound
mov
sbb
div
jb
in
stc
xor
dec
rorb
inc
mov
addr16
pop
mov
jnp
push
pop
into
mov
test
loop
je
stc
int
in
in
aas
dec
xor
pop
movsl
push
repz
push
dec
xchg
pop
fsub
or
ror
mov
dec
movsl
sbb
cmp
sti
jns
xor
outsl
inc
aas
sbb
into
sti
fs
ds
bound
into
in
fistpl
push
stos
push
pop
push
mov
xor
lock
aaa
mov
loop
sbb
in
pop
cld
xchg
lret
lods
data16
bound
rolb
daa
in
in
xchg
mov
jae
pop
hlt
cwtl
xchg
repz
push
mov
mov
ds
sbbb
mov
jmp
add
fadd
lods
test
jae
cmp
mov
ljmp
cltd
mov
push
outsb
jae
adc
adc
adc
inc
push
push
inc
mov
shrl
dec
call
imul
mov
shlb
pop
pop
fidivl
inc
sbb
mov
imul
or
loope
pop
daa
fnstcw
and
dec
daa
loop
mov
call
sbb
jns
cmpsb
rcr
pop
sub
sub
or
push
jg
enter
dec
les
fidivs
xor
addr16
call
cmp
inc
mov
mov
mov
adc
jae
push
mov
testb
mov
and
aaa
push
sbb
test
sub
and
push
aam
cmp
fimull
xchg
ret
mov
cltd
mov
push
jp
or
jbe
ret
mov
jmp
pop
imul
and
add
lret
movsb
sti
lret
xchg
popf
into
je
mov
or
into
jmp
inc
test
scas
aam
loopne
inc
lret
std
in
mov
fnstcw
dec
pop
xor
fidivl
adcb
and
imul
add
push
ss
pop
stc
cwtl
xchg
dec
mov
jns
lret
push
add
cmp
shrl
lds
xor
repz
arpl
lret
mov
jge
cmp
rcrl
aas
sbb
ds
sbb
stc
push
fadds
inc
add
lea
pop
xor
xor
leave
sbb
jnp
add
mov
xchg
sub
mov
loope
in
sahf
into
and
inc
dec
sbb
js
sar
sub
sbb
fistpl
out
xor
lahf
mov
mov
dec
out
inc
rolb
mov
in
or
jecxz
and
fisttps
cld
and
pop
add
or
fs
push
or
xchg
xchg
leave
mov
sub
pop
inc
jg
sti
cmp
mov
or
aas
xchg
pop
push
add
pop
jle
mov
jb
cs
aas
add
popa
or
loop
jb
stos
xor
ret
lock
sbb
and
adc
rcll
std
add
pusha
dec
jg
or
dec
inc
or
rcll
cwtl
mov
loop
dec
lods
lret
arpl
enter
ficoml
gs
push
mov
jo
xor
in
inc
xchg
sarl
imul
push
push
jbe
icebp
cmovne
scas
into
pop
fisttpl
loop
pop
jmp
fnstsw
sti
fldenv
cmc
insb
jns
aaa
pusha
fcmovu
inc
ret
test
rolb
cld
mov
xchg
inc
mov
ret
xchg
or
out
jo
xchg
fwait
mov
and
outsb
rcll
pop
int3
in
mov
fcoms
and
rol
rorb
lods
jae
sub
lds
xor
cmp
mov
jge
loope
pop
fwait
shlb
ss
pop
jge
loope
pop
xchg
nop
mov
dec
ret
ljmp
add
in
insl
lds
xlat
xchg
fucomi
movsb
xchg
insb
sahf
iret
mov
mov
xor
xor
xor
outsl
inc
dec
dec
sub
mov
rcr
cmpsl
or
in
fs
mov
and
shrb
dec
pop
stos
dec
xor
stos
jecxz
pop
mov
cmp
pop
pop
sbb
movsl
mov
ret
add
je
add
sbb
sbb
jge
jns
sarb
subl
mov
jecxz
xor
mov
pop
adcb
sub
xchg
fcmovnu
pushl
pop
jmp
cmp
jmp
mov
sbb
ds
lret
xchg
aas
mov
shlb
inc
dec
inc
push
pop
lods
cmp
push
shrl
insl
pusha
xlat
scas
pop
negb
out
xchg
inc
add
jnp
js
sahf
bswap
or
adc
stos
cmc
roll
notb
push
dec
rcrb
inc
into
or
xlat
xchg
incl
cmc
mov
xor
jp
and
mov
dec
sahf
outsb
repz
mov
push
xchg
in
add
add
mov
ss
rolb
cmc
add
mov
lods
mov
mov
add
repnz
xor
test
mov
pop
loop
mov
jmp
rcll
stos
mov
mov
sbb
jno
mov
mov
add
mov
fidivl
xchg
or
pop
loopne
sbb
in
jle
xchg
push
pop
popf
mov
mov
inc
fisttps
out
out
and
imul
in
psraw
test
into
cmp
ss
loope
fs
sbb
dec
inc
imul
int3
pusha
es
mov
cwtl
mov
push
dec
hlt
jae
add
in
int3
mov
push
push
gs
and
mov
sub
dec
rorb
mov
enter
hlt
and
push
inc
jns
pushf
es
mov
fisubl
mov
xchg
in
arpl
mov
pop
xchg
push
test
sbb
dec
arpl
loope
and
sub
popa
and
leave
add
and
xor
jbe
pop
lret
adc
sub
dec
ret
jbe
outsb
cmpsb
fidivrs
xchg
dec
dec
mov
fcomp
mov
or
and
in
dec
mov
fwait
inc
jo
adc
jecxz
call
shlb
adc
adc
cs
mov
imul
mov
sbb
in
inc
cmpsb
xor
mov
or
into
mov
push
ret
nop
movsb
loope
clc
xor
mov
pop
push
sub
add
adc
sbb
mov
fnstsw
adc
cmp
xor
push
enter
pop
call
jb
rcrl
cmp
cmp
mov
push
xor
mov
cmp
pinsrw
dec
shll
pop
sbb
fdivrl
in
mov
xchg
add
xor
or
mov
sub
lret
gs
sahf
pop
fsubl
mov
test
ljmp
outsl
in
loopne
xchg
cltd
stos
sbb
sub
leave
and
out
pop
lahf
cmp
test
cmp
and
imul
lret
inc
mov
mov
aam
xor
ljmp
shlb
pop
in
outsl
cwtl
xor
cmp
shll
out
cltd
cs
jae
and
mov
pop
addb
or
inc
mov
mov
in
push
jp
in
clc
cmpsl
cs
jne
mov
dec
and
call
mov
sub
filds
mov
mov
add
mov
fs
cmpsl
pop
or
test
xchg
jns
mov
or
rclb
xchg
pmaxub
rcrb
pop
or
popf
push
int3
jae
data16
repnz
test
ljmp
outsb
int3
or
pushw
jae
enter
lret
add
fnstsw
adc
push
add
clc
jnp
xor
jl
sbb
das
ja
ret
test
shl
lods
inc
jo
sti
add
aam
test
stos
push
leave
pushf
pop
pusha
iret
mov
lret
pop
mov
push
add
add
sbb
mov
pop
sarb
xchg
shll
das
fucomi
dec
lret
outsl
sub
loope
scas
cmp
pop
sbb
out
movsb
repnz
mull
fisubrs
shll
adc
adc
loopne
enter
sbb
or
lret
add
repz
sub
fldt
push
outsl
mov
mov
repnz
lret
or
jnp
out
dec
and
aam
fdivrl
shrl
fsubrs
inc
xor
shlb
mov
pop
dec
push
cmp
dec
push
mov
popf
cmp
mov
and
lds
xor
pop
xlat
nop
mov
addr16
dec
ficoms
sub
aaa
aam
add
xorb
aas
mov
in
fwait
mov
ret
push
loope
pop
les
jns
pop
in
xchg
in
scas
jnp
dec
push
iret
ret
pop
or
pop
xor
inc
aas
dec
fbstp
fsts
out
repnz
or
xchg
lods
call
mov
or
mov
sti
xchg
push
adc
push
lahf
and
shlb
push
add
adc
mov
rol
and
push
pop
jb
into
mov
pop
fs
leave
dec
adc
inc
cli
pop
adc
add
test
and
std
dec
and
adc
mov
dec
nop
inc
mov
scas
adc
xchg
push
dec
fs
cli
jmp
xchg
ljmp
inc
lcall
and
push
lret
add
pop
gs
rcrb
add
or
inc
push
mov
xchg
mov
lcall
gs
push
add
dec
js
fwait
movlps
hlt
sbb
jle
mov
mov
fildll
adc
lds
cwtl
fcomip
mov
pushf
push
push
jg
rcl
iret
insl
les
je
mov
xchg
add
xor
cwtl
pop
xor
fdivl
pusha
pushf
cli
divl
scas
mov
mov
xchg
outsl
test
ret
lods
mov
inc
dec
push
and
aam
aad
or
pop
imul
cwtl
sub
pop
mov
jbe
outsl
pop
jns
ret
cmp
adc
sub
mov
popf
pop
adc
test
mov
fistps
mov
imul
clc
adc
orb
into
pop
pop
cmpsl
fsub
sbb
fdivrl
leave
or
sarb
dec
stc
sbb
pop
cmpb
pop
and
pop
xor
mov
inc
hlt
fnstcw
sti
add
mov
or
aam
sub
dec
mov
adc
xchg
or
jg
ret
aam
insl
jge
js
cmc
stos
dec
cwtl
sub
ror
pop
push
stos
test
xor
ss
push
fs
int
rcll
mov
faddl
jns
scas
sub
mov
mov
dec
call
mov
and
pop
fwait
or
dec
loopne
in
ret
mov
data16
adc
cmp
aaa
shr
ret
jne
imul
dec
sub
jnp
je
rcll
cmc
sbb
lods
xchg
ret
cmp
cmp
adc
imul
xchg
fcom
ss
leave
xchg
add
lret
std
pop
shlb
dec
push
pop
addl
dec
push
or
mov
xor
push
pop
movsb
and
push
or
mov
sub
cmpsl
fsubl
pop
adc
outsb
fstpt
jb
bound
in
hlt
mov
mov
sbb
pop
cmp
push
roll
fiaddl
les
xchg
imul
mov
xor
rol
mulb
es
repnz
jle
mov
or
inc
leave
and
imul
je
add
loope
mov
push
inc
xchg
aam
or
add
nop
cmp
xchg
dec
or
jnp,pn
rcrl
out
cmp
call
lds
gs
adc
inc
rcrl
cmp
mov
xchg
jmp
roll
fldenv
pop
xor
iret
test
in
push
or
dec
rcr
push
jno
cmc
sbb
divl
jg
addl
cld
jno
imul
xor
imul
xchg
add
pop
xchg
jl
shl
cmp
jo
mov
jnp
sub
mov
dec
sub
aas
testl
insl
inc
repz
insb
int3
lods
aam
negb
xor
data16
imulb
jb
push
imul
xchg
movsl
jge
push
nop
cmp
xorl
jbe
pop
pop
adc
into
mov
xlat
call
adc
add
std
int3
gs
aas
mov
or
add
jmp
xchg
outsl
sbb
add
dec
add
pusha
pop
mov
test
sub
imul
jne
leave
adc
adc
xchg
addr16
jge
mov
lahf
lods
xor
and
pop
fs
es
rorb
pusha
xchg
in
inc
pop
mov
imul
pop
cmp
push
insl
cmp
adc
pushf
push
cmpsl
mov
loope
lret
xchg
andl
jge
mov
adc
dec
and
outsl
cltd
sub
xchg
mov
push
inc
mov
jnp
aas
mov
sti
jne
adc
mov
outsl
rorb
jae
in
fsubrs
cmp
jnp
mov
mov
sbb
test
and
xchg
insl
and
arpl
shll
cld
jo
pop
lcall
scas
leave
cmpsb
clc
dec
dec
repz
pop
jle
pusha
jns
dec
leave
shlb
lods
mov
je
js
movsl
or
jns
push
aam
fisubrl
daa
repnz
out
mov
mov
xchg
pop
mov
sub
xor
aam
sbb
mov
jne
dec
imul
call
xor
adc
push
inc
jp
fmull
lret
jo
pop
and
insl
jl
testl
inc
xchg
push
loopne
into
adc
daa
sbb
sarl
fcmovnu
outsl
and
jmp
cmpsw
jmp
aaa
movzbl
orl
std
pop
pop
add
test
inc
inc
inc
push
push
jp
jl
ds
into
pop
dec
jecxz
je
dec
dec
test
lock
push
test
or
sub
or
imul
nop
xor
std
fbld
adc
jp
add
xor
daa
cli
sub
dec
xchg
lret
jg
pop
mov
sbb
xchg
data16
movsl
out
and
dec
sub
sti
mov
aam
loop
das
mov
cmp
mov
push
enter
add
test
sbbl
push
aas
lds
fstpt
or
and
mov
fwait
pusha
mov
sub
inc
pop
lret
mov
push
call
mov
sbb
fs
ja
sbb
push
testb
sub
rcl
cwtl
cwtl
cmp
pop
cmp
dec
push
mov
sub
test
aad
mov
push
push
xor
mov
jae
aad
les
inc
push
add
pop
stos
dec
xchg
lret
lcall
adc
out
or
sti
lds
push
add
aad
cmp
lods
sti
cmp
pop
ret
pop
dec
jno
mov
push
hlt
clc
xchg
jo
inc
nop
cmp
test
sub
sub
filds
pop
jnp
sti
mov
push
or
sbb
icebp
push
jne
sub
inc
lea
mov
xor
js
mov
test
dec
std
cmovnp
fsubrl
mov
adc
mov
arpl
fnsave
hlt
adc
jae
subb
inc
imul
push
dec
ret
repnz
xor
insl
pop
mov
fwait
lock
mov
xchg
inc
in
mov
repnz
push
cmp
pop
push
mov
pop
imul
push
ficompl
rcrl
xchg
negb
and
out
mov
jns
mov
dec
in
inc
test
mov
stos
jns
imulb
dec
sub
push
adc
out
lods
jle
icebp
xchg
testb
mov
in
mov
out
mov
push
jo
leave
gs
or
inc
jns
cmp
inc
inc
mov
mov
insb
sahf
lret
push
les
hlt
popa
pop
push
jnp
gs
shl
lret
les
sub
lods
stos
pushf
cwtl
rcrb
lret
adc
jbe
xchg
stos
xor
cmpsb
int3
inc
setne
dec
in
add
outsb
mov
jmp
inc
out
jmp
mov
pop
imul
out
inc
enter
and
push
or
add
lods
outsb
inc
mov
pop
aas
and
push
sub
cmpsb
dec
jg
aam
outsl
out
fsubrs
imul
pop
adc
subb
lret
je
add
push
test
push
xchg
pop
fbstp
stc
or
jns
inc
and
hlt
xchg
push
mov
inc
push
sbb
enter
adc
xor
cmp
mov
inc
and
stos
and
or
loopne
clc
lods
push
in
ficoms
mov
icebp
and
gs
sub
les
subb
leave
pop
mov
in
lret
mov
and
aaa
mov
mov
fistpll
test
adc
xor
out
mov
xlat
loopne
fs
and
jno
jnp
movsl
loop
or
rcr
and
fstp
add
fbstp
mov
push
jbe
jb
cmp
mov
ds
mov
inc
dec
mov
ljmp
mov
ds
jne
cmc
ret
and
jge
xor
mov
enter
add
lcall
dec
xor
jmp
sbb
test
clc
sbb
xorl
fwait
scas
or
stos
cmp
loop
in
jmp
adc
cmova
pop
or
xchg
xchg
pop
enter
stc
shrl
inc
scas
dec
popf
inc
mov
outsl
pop
add
mov
es
mov
sub
inc
lock
jo
adcb
jg
xor
pop
inc
jecxz
sti
push
mov
dec
inc
fsubr
or
xor
icebp
xor
das
inc
stc
dec
and
dec
push
enter
jmp
ss
out
inc
lods
jmp
mov
adcb
jno
jb
pushf
adcb
push
jne
xor
sub
in
shl
lock
push
mov
das
loop
fnstsw
push
stc
fnstcw
mov
test
data16
andb
std
incl
jo
cmp
xchg
mov
pop
xchg
push
inc
lcall
imul
mov
rcr
mov
mov
xor
fs
ret
sub
ja
test
add
lcall
lret
cmp
and
int3
lods
lock
and
mov
push
outsb
aam
popa
jg
adc
pop
je
pop
pop
enter
fwait
mov
push
testl
inc
inc
hlt
lret
cmpsl
cmpsb
out
sub
lret
jp
jge
test
loop
mov
pop
dec
jge
mov
les
pop
xor
inc
popa
dec
mov
or
xor
popa
sub
xchg
inc
push
sbbb
fsubrl
ja
jecxz
insb
lods
or
addb
push
std
or
mov
insb
movsb
xchg
sbb
push
in
push
fstl
call
mov
adc
or
mov
mov
repz
shlb
sub
mov
jbe
pop
fistps
cltd
shll
addl
jb
test
cmpb
xchg
enter
sbb
xor
jge
and
jnp
xchg
bound
dec
inc
ja
xchg
dec
and
sbb
mov
pusha
fimull
sub
addb
adc
adc
and
aas
pop
mov
incl
cs
addb
add
outsl
or
imul
jle
fstpl
dec
adc
hlt
sbb
pop
mov
rcll
mov
enter
jno
sbb
mov
sub
mov
mov
lock
out
jge
pop
add
out
es
mov
cli
ficoml
clc
xor
std
cmp
adc
cmp
fisubrl
enter
push
jle
aaa
mov
out
add
dec
imul
subb
enter
lcall
pop
jne
in
jp
roll
adc
cmp
repnz
pusha
dec
dec
push
arpl
mov
and
jo
sub
mov
hlt
add
icebp
xchg
imul
negl
mov
and
add
fldenv
sarl
arpl
inc
sbb
pop
out
sub
insb
lock
scas
mov
pop
repz
sub
nop
in
push
imul
pop
sbb
imul
inc
fwait
stos
fs
es
push
sahf
mov
fwait
adc
or
out
lods
and
ret
mov
insb
cmp
add
scas
mov
xchg
xchg
int3
inc
std
and
pop
mov
add
mov
hlt
sti
push
mov
popf
cmp
push
pop
pop
test
fistpl
aas
mov
dec
push
adc
pop
and
mov
jnp
sbb
fisttpll
xchg
daa
movl
fidivrs
mov
leave
push
cmc
push
mov
xorl
cmp
pop
pop
add
and
rcr
lock
fistpl
in
pop
xor
mov
or
mov
or
pop
mov
cld
cmp
mov
inc
es
in
cmp
dec
add
in
mov
pushf
lods
inc
jno
dec
rcrl
pop
mov
aad
outsl
sti
test
jmp
add
movsb
stos
add
adc
xor
or
out
push
pop
leave
aaa
js
cmpsl
das
mov
push
sti
jmp
add
es
ja
mov
xchg
out
mov
dec
mov
jno
jno
dec
cmp
test
cwtl
shll
jae
pop
jne
add
pusha
subb
shrb
psrlq
jb
andl
push
cld
lods
push
repnz
xchg
pop
ljmp
push
push
cmpsb
in
xchg
sbb
cmpsl
pop
mov
icebp
jmp
mov
mov
dec
inc
lret
xor
loop
leave
pop
sub
cmp
sbb
pop
enter
fistpl
loop
js
std
pop
sbb
pusha
adc
test
adc
movsl
fdivrs
pop
mov
xchg
lea
ret
arpl
xor
cwtl
mov
orl
dec
in
lret
or
jb
adcl
inc
decl
push
push
jbe
call
aam
pop
xchg
jae
xor
iret
pop
ret
movsb
faddl
pop
fmuls
adc
fsubl
inc
lret
adc
mov
inc
push
pop
sub
call
jae
test
cmc
inc
inc
xchg
dec
xchg
jb
or
js
sub
xorb
mov
int3
jo
and
imul
push
inc
clc
sub
xor
mov
xor
icebp
cmp
inc
sub
repz
aad
and
mov
movsb
pop
inc
cwtl
cmp
sub
dec
mov
inc
xor
sahf
movb
adc
sahf
jb
sub
mov
jge
subl
insl
mov
sub
call
ljmp
adc
imul
xchg
fmuls
jmp
lods
dec
insb
nop
das
cmpsb
add
jbe
push
and
test
pop
pushf
fidivl
xchg
cmp
out
ret
out
add
int3
sbb
mov
lds
fisttps
jns
ficoms
mov
out
inc
pop
cmpsl
jg
ljmpw
pop
inc
adc
cmp
mov
lea
cmp
sahf
or
and
shrb
mov
pop
stos
jl
add
add
xor
pop
repz
jecxz
cmp
push
js
sarl
push
mov
dec
inc
call
sub
sub
negl
jae
jl
mov
sbb
dec
sti
aad
cmp
mov
enter
push
psubsb
iret
or
imul
fisubs
push
pop
inc
test
mov
stos
adc
movsb
xor
xchg
lock
ljmp
xchg
lock
mov
xchg
inc
add
in
hlt
shlb
in
ret
dec
add
or
dec
sub
sub
loop
aas
mov
adc
cmp
xchg
mov
ret
mov
test
mov
leave
insb
fbstp
outsb
push
fstps
and
mov
aam
bound
pop
push
sub
xor
and
popa
push
mov
dec
lock
adc
in
imul
mov
shl
mov
cltd
int
pushf
testb
push
adc
push
fnstsw
jb
outsb
loop
insl
stos
sub
loopne
cmp
mov
lret
xchg
push
out
add
loope
pop
repz
and
repz
in
jb
jl
sbb
loopne
movsl
jno
loop
stc
rolb
cmp
js
in
pop
decb
mov
or
psubd
repz
xor
js
or
inc
int3
cmpsb
inc
jl
scas
mov
mov
xchg
cmovp
pop
pop
and
adc
lds
mov
outsb
or
imul
rolb
sahf
cmp
mov
scas
add
icebp
in
cmp
ja
arpl
adc
rcrb
mov
fstpl
or
rcrl
les
fidivrl
rcll
shl
cmp
movsb
jo
push
pop
cmp
iret
bound
mov
xor
lock
xchg
mov
push
sbb
cmp
out
jae
push
sbb
inc
repnz
and
pop
sbb
sbb
mov
xlat
xor
adc
inc
and
jae
enter
fmul
test
lret
popa
fisubs
add
int
fldl
dec
and
mov
xchg
leave
push
daa
jnp
dec
jb
jmp
adc
mov
xor
cwtl
jb
pop
mov
jns
cmpsb
or
adc
rolb
sbb
push
imul
mov
lea
movsb
pop
dec
add
push
negb
fwait
and
punpckldq
pop
cli
pop
sub
pop
dec
mov
and
fmuls
xchg
lock
clc
ljmp
cmpsb
mov
in
add
leave
lds
mov
sub
inc
pop
aam
ss
rcll
push
sub
out
add
int
dec
mov
scas
dec
aas
xchg
push
leave
push
push
je
cmc
or
cmp
mov
lcall
mov
cmpsb
mov
mov
sub
xchg
jmp
in
cwtl
daa
sub
cltd
repnz
notl
xor
fldpi
xchg
mov
in
int
sub
mov
sub
sub
xchg
adc
nop
jecxz
int3
shrl
nop
inc
enter
mov
stos
jno
dec
jno
ret
lcall
enter
test
je
cli
addl
movsb
div
je
mov
leave
and
pop
pushf
rcl
pop
fstpl
adc
xor
jns
aad
movl
mov
push
add
andb
cmp
setb
push
xchg
xchg
pop
mov
sbb
xlat
dec
push
orl
xchg
test
in
mov
mov
pop
ret
pop
pop
push
dec
mov
shlb
shll
sbb
pop
int3
inc
ja
jns
sbb
std
adc
out
call
xchg
inc
cmp
add
and
push
aad
jns
enter
out
lret
inc
add
jecxz
cltd
movsb
ja
dec
xchg
pop
xchg
es
shrl
sub
call
jno
lods
mov
shrb
out
mov
insb
orl
popa
jb
and
xor
arpl
sahf
mov
lcall
xor
add
push
mov
cmpsb
sti
int
cmpsl
ret
mov
jae
xor
scas
mov
shlb
cld
xchg
xchg
les
sub
mov
ja
iret
dec
ljmp
adc
test
pop
scas
pop
push
lods
movsb
lds
adc
xchg
add
rolb
je
js
mov
stc
nop
sub
mov
adc
lock
push
jnp
mov
iret
sar
xor
imul
pop
mov
aam
mov
xchg
mov
mov
loop
dec
int
fsin
pop
in
add
pop
stos
pusha
leave
inc
jmp
jnp
pop
jo
sbb
xchg
and
imul
movsl
cli
lock
movsb
nop
push
orb
xor
mov
insb
lea
fdivrp
mov
scas
addr16
test
dec
nop
loope
inc
mov
and
pop
dec
inc
loope
icebp
push
in
gs
xchg
bound
or
xchg
cmp
jg
ljmp
inc
mov
cld
pop
adc
mov
add
stos
jmp
mov
hlt
xchg
int3
dec
push
and
mov
dec
or
push
dec
ss
mov
imul
fdivs
cmc
push
mov
mov
test
sbb
jb
xor
lods
mov
adc
inc
cli
mov
sbb
mov
or
and
inc
add
ds
push
dec
scas
sahf
cmp
sbb
rcrl
not
inc
cltd
popf
jbe
mov
icebp
cmp
cld
jnp
roll
inc
cld
push
and
inc
test
iret
hlt
and
adc
into
pusha
call
int3
lea
std
es
fimull
jge
in
clc
xchg
les
loopne
mov
aam
cmc
jecxz
lea
outsl
data16
popa
cmpsb
cwtl
pop
int3
dec
cmp
arpl
mov
lahf
mov
or
jle
pop
push
iret
aam
adc
clc
popf
xor
push
lret
orl
shlb
stos
fmulp
push
add
test
sub
adc
or
clc
test
inc
push
pusha
shll
cmpl
sbb
pop
shll
mov
bound
not
jecxz
push
cmp
lods
lret
xchg
add
sarl
outsb
ret
push
cmp
mov
inc
push
xchg
out
lods
popf
popa
andb
in
push
das
push
imul
mov
push
fsubp
rorl
xchg
test
fs
leave
mov
cmp
aam
mov
cwtl
hlt
sbb
imul
xor
imul
push
scas
xchg
xchg
loopne
and
pop
cmp
xchg
stc
and
mov
xchg
dec
mov
push
cmc
cmp
jno
or
sbb
push
jle
ret
mov
js
jb
adc
cmc
xor
sbb
movsb
shll
adc
or
push
cli
cli
mov
push
push
icebp
fs
adc
cli
or
adc
js
sbb
pmovmskb
movsb
jne
lret
xor
imul
incl
lret
lock
mov
addr16
arpl
adc
xchg
push
das
sahf
add
and
ffreep
jp
cmpsb
mov
mov
stos
adc
pop
inc
dec
cmp
push
or
xor
loopne
lock
mov
push
cmp
mov
dec
shrl
stos
xor
mov
add
lret
addr16
cs
stc
inc
push
pop
xor
lea
into
jno
mov
xor
lcall
sub
lods
pop
mov
mov
ljmp
test
adc
cmp
inc
lds
jle
cld
int3
push
xlat
out
sub
xchg
xchg
std
dec
push
dec
sbb
fsubl
mov
jp
fstps
cs
cmpsb
push
mov
push
mov
mov
pop
inc
fdivrs
mov
enter
inc
push
stos
fs
jae
in
xchg
dec
jns
jns
repz
dec
pop
aad
mov
loop
pop
in
decl
dec
mov
cmp
push
icebp
sbb
sti
and
inc
xchg
mull
adc
je
fstpl
cmp
dec
into
push
inc
loopne
adcl
fcmovb
sbbl
xor
pusha
mov
fiaddl
stos
mov
mov
mov
jg
ret
jmp
popa
stos
dec
es
adc
inc
and
cli
and
scas
mov
mov
mov
mov
icebp
mov
ds
jecxz
orb
frstor
cmpsl
add
jbe
add
xchg
fildl
ret
gs
mov
int3
jecxz
andl
fists
adc
jns
outsl
stos
sbb
iret
mov
push
mov
shlb
push
and
rep
mov
mov
mov
push
rorl
test
pop
mov
imul
mov
and
std
fisubrs
test
dec
pushf
sbb
in
aam
je
mov
sbb
and
mov
mov
mov
arpl
mov
stos
out
cmp
mov
fistps
decl
or
or
push
fmull
jbe
lea
xchg
scas
movsl
mov
das
imulb
inc
fcompl
test
jae
mov
adc
lcall
sub
sbb
js
sub
pshufw
add
pop
int3
sub
hlt
rolb
cmp
dec
push
cwtl
aam
sbb
ljmp
cmp
mov
add
les
cwtl
xchg
fsubs
push
ret
pop
push
out
in
add
xlat
rcll
push
add
daa
push
add
dec
cli
jg
adc
jp
pop
jns
stos
aas
cs
dec
aad
add
xor
out
push
mov
xchg
inc
jo
adc
mov
mov
cmp
push
cli
addr16
mov
das
insb
jge
xchg
xchg
aad
dec
andb
cmp
aam
imul
pop
sbb
dec
pop
add
fsts
mov
fstps
fwait
pop
dec
and
int
xchg
cs
or
mov
sub
inc
push
xchg
ret
scas
outsl
jmp
movsl
mov
cmpsb
dec
sbb
jo
test
leave
or
loopne
loope
bound
test
push
test
mov
bound
fldl
lods
inc
orl
push
cmp
cli
es
sbb
das
xchg
movsl
add
stc
mov
fs
call
shll
inc
imul
dec
gs
fisubrs
xor
into
int
fnsave
pop
adc
push
lods
cs
add
enter
stos
and
push
xor
or
jnp
cmp
mov
data16
mov
add
stos
cmpsb
jb
imull
pop
push
subb
cs
pushf
mov
insl
jnp
xchg
inc
jne
jne
fcmovne
or
xchg
aaa
sar
lcall
xchg
adc
or
cmc
inc
push
loop
jl
mov
cmpsb
or
push
cmp
pmaxsw
adc
push
icebp
or
push
cmp
sub
jo
push
xchg
or
jnp
pusha
pop
xchg
clc
dec
je
adc
pop
sbb
int
call
cmp
lcall
int3
sti
push
xchg
push
pop
sub
enter
int3
add
xor
cltd
fisubrl
dec
mov
movsl
pusha
cld
jmp
stc
jle
xor
pusha
add
int
xchg
lods
mov
in
mov
popf
loop
sbbl
ficoms
out
jp
xchg
or
mov
es
stos
dec
mov
test
mov
sub
mov
jbe
cmp
cmpsb
scas
fmuls
pop
insb
xchg
inc
and
sub
or
add
fidivs
cmp
jmp
dec
sub
jne
out
cld
mov
mov
dec
in
xchg
add
push
adc
add
and
push
out
int3
popa
into
enter
jecxz
fidivs
adc
ds
lahf
mov
mov
or
xor
stos
lcall
adc
mov
pop
int3
mov
jno
cmp
cmp
cmp
sub
sahf
fucomp
jl
mov
pusha
jae
sub
std
stos
scas
adcl
sbbb
adc
fnstenv
mov
inc
xchg
jb
sbb
lods
mov
arpl
adc
in
xchg
call
xchg
stc
fs
jecxz
imul
add
ficoms
dec
pop
jl
ret
mov
hlt
xchg
sub
xor
xlat
iret
inc
mov
lods
xor
mov
xor
cmp
mov
fucomi
js
bound
lea
les
jae
add
and
lcall
enter
imul
dec
xchg
lods
push
push
js
imulb
pusha
pop
sbb
js
pop
mov
not
fmul
test
adc
ss
mov
adc
jae
sub
fists
iret
sub
sub
dec
xchg
cmp
les
sub
inc
ret
nop
aaa
rclb
xor
cmpsl
sub
testl
jp
push
out
test
push
stc
push
es
orb
test
leave
pop
xor
int
push
pop
jo
cmpsb
xchg
mov
int
mov
pop
ret
sub
aam
or
sbb
cmp
aam
fwait
jae
nop
js
repz
xor
mov
jp
mov
into
xor
imul
inc
add
dec
and
mov
pop
push
mov
push
push
jle
icebp
js
jae
test
jmp
icebp
cld
inc
pop
add
loope
out
inc
mov
jg
jecxz
mov
adc
pop
loop
and
faddl
sbb
push
xchg
leave
dec
dec
aas
test
or
pop
cmc
test
les
xchg
xchg
inc
cmp
sti
lret
cmp
mov
sbb
mov
jbe
fwait
outsl
xchg
sbb
in
jnp
xchg
mov
dec
add
fcmove
out
push
repnz
aam
xchg
fcomi
jns
add
or
pop
mull
decl
and
scas
movsl
push
mov
fcmove
outsl
movsb
or
icebp
sub
mov
ret
inc
jno
sti
push
in
dec
inc
loop
es
outsb
gs
imul
roll
dec
addl
sbb
inc
in
pop
push
movsb
sahf
jg
test
pop
pop
push
dec
imul
sub
outsb
push
fdivrp
add
data16
sub
mov
lret
jne
add
add
mov
mov
sbb
mov
xchg
lock
mov
aad
subl
out
lret
insl
stos
scas
push
ss
loope
lahf
cmp
stc
dec
jo
sbb
sbbb
pop
dec
cli
push
daa
mov
adc
mov
int
lods
in
dec
sub
pop
dec
xor
cmp
or
lret
in
lcall
pop
lea
push
jg
sbb
mov
ds
loope
xchg
outsl
sti
or
imul
lahf
sbb
mov
mov
notb
jae
sbb
add
push
sahf
mov
repnz
outsb
bound
das
popa
daa
icebp
xchg
into
subl
lcall
pop
ret
ds
insb
push
test
aam
dec
mov
inc
sbb
sub
shlb
std
or
scas
and
cmp
decl
int
icebp
clc
roll
xor
mov
xor
jle
sbb
mov
mov
push
xlat
cmp
data16
mov
shlb
out
sbb
sbb
xor
sarl
inc
sbb
mov
addr16
push
data16
pop
mov
pop
ficompl
xchg
sub
mov
jge
fildl
cmp
stos
inc
mov
cmp
mov
addb
or
outsb
or
jnp
jns,pn
mov
jo
and
das
push
or
cmpsb
ret
dec
jnp
popf
add
mov
nop
or
or
scas
pop
xor
sub
mov
ret
lock
movsb
sub
pop
in
sbb
push
mov
roll
jge
pop
dec
jns
jb
out
jo
arpl
sub
fimull
bound
js
mov
and
dec
pop
cmpl
mov
dec
and
imul
sub
hlt
pop
orb
mov
xor
loopne
aas
das
adc
pop
outsb
dec
fs
stos
nop
xor
movsl
xor
or
lcall
sub
sub
mov
jmp
sub
ds
adc
jp
mov
daa
mov
adc
xor
sub
jb
pop
stos
xchg
or
je
xchg
int3
cmp
pop
pop
add
data16
ss
mov
inc
sti
cs
and
dec
mov
xchg
mov
sub
rorl
test
outsb
add
xchg
mov
mov
mov
xchg
xchg
jb
aas
jns
pop
and
lods
das
inc
xchg
int
mov
cld
repnz
test
cmp
push
pushf
xor
mov
sbb
mov
mov
shld
fistl
add
test
ret
dec
fs
pop
push
lret
call
lcall
lods
xchg
mov
or
xchg
push
cwtl
add
push
jg
xchg
addb
sub
lods
sub
push
test
sahf
loope
push
sub
jnp
xchg
adc
mov
pop
cld
ja
int3
repnz
jl
push
inc
push
ficoms
dec
loopne
out
hlt
stc
mov
es
dec
in
in
mov
mov
repnz
xor
int3
insb
test
icebp
repz
xor
push
leave
inc
aaa
xchg
mov
pushf
addr16
sub
mov
mov
pop
adc
scas
pop
inc
test
pop
bound
iret
inc
pop
lcall
cmp
aas
leave
imul
ja
xchg
push
mov
fsubrs
xor
aas
sahf
orb
sub
mov
inc
pop
push
push
and
sahf
out
xchg
or
pop
push
fsubr
lods
jle
push
mov
les
cltd
and
push
incb
mov
mov
cmp
push
repz
ss
add
std
loopne
loop
cld
out
test
cmc
adc
sbb
dec
je
cmpsb
pop
int
fnstsw
mov
punpckhbw
sub
aad
mov
mov
std
popa
cs
push
dec
sub
mov
xchg
adc
adc
stc
dec
inc
addr16
or
and
xor
ret
gs
dec
xchg
ret
inc
sub
cli
or
push
clc
imul
sub
mov
stos
jge
add
mov
div
ss
insl
xchg
mov
fildl
sbb
jnp
in
loopne
xor
pop
pushf
mov
popa
push
lock
mov
mov
pop
add
icebp
andl
lret
add
lods
lahf
cli
insl
leave
cltd
xchg
test
sub
ret
push
or
imul
fiaddl
inc
idiv
popa
mov
sub
jg
loope
ja
es
and
lock
movsl
inc
pop
and
or
cmc
imul
pop
mov
cmc
ret
pop
arpl
mov
adc
sti
jl
jg
cs
das
imul
mov
mov
push
adc
or
and
cli
dec
jb
or
adc
mov
cmp
xor
and
lcall
dec
cmpsb
inc
ror
fcmovnu
jne
or
aas
mov
inc
and
ret
ret
int3
test
dec
test
test
pop
daa
lahf
push
cmp
inc
stc
jae
rcl
jns
add
or
cld
stos
push
mov
insl
jmp
mov
cld
sti
bound
gs
in
jnp
dec
int3
sbbl
dec
call
jae
push
icebp
shrb
stc
cmp
mov
js
xchg
cltd
aas
cmp
cmpsl
test
icebp
adc
decl
lret
push
sarb
push
pop
cmp
outsl
inc
sti
pop
fsts
jmp
xor
imul
sbb
or
or
xchg
mov
adc
dec
insl
rcl
in
inc
pop
fimuls
mov
adc
jecxz
sbb
cmc
mov
addb
adc
loope
lods
adc
jb
cmp
in
fs
jne
lods
ret
cmpsl
xchg
decb
mov
dec
gs
pop
imul
sti
fs
xchg
mov
xchg
and
lods
popf
out
jb
jae
scas
sub
shl
inc
or
or
jle
lods
push
xor
pop
cmp
dec
lcall
add
stos
outsb
push
int3
jl
fidivrs
xchg
pop
cmpsb
mov
int3
sti
mov
jae
pop
xor
enter
icebp
cmp
ret
test
leave
mov
ret
bound
xor
xor
and
xor
paddq
jl
pop
lret
pop
mov
and
in
es
jae
insl
add
sahf
push
push
mov
mov
jl
xor
inc
out
mov
dec
fiaddl
shlb
mov
out
sub
mov
mov
stc
test
lock
cmp
int
outsl
adc
ja
and
and
cmp
sarl
adc
pop
hlt
pop
or
into
jbe
inc
dec
cmp
mov
xchg
inc
leave
dec
dec
cmp
pop
cwtl
inc
sub
cmp
dec
xor
popf
test
in
jnp
sub
jnp
nop
rclb
loopne
jp
stos
mov
dec
lret
lods
cmp
insb
in
out
pop
dec
pop
leave
push
mov
fs
mov
pop
insb
out
pop
scas
movzbl
cmp
xor
and
fbld
hlt
push
movsb
pop
in
aam
and
iret
sub
repz
int3
cmp
add
lahf
iret
push
cmp
inc
rorb
inc
dec
jg
adc
pop
pop
iret
cld
dec
lds
imulb
bound
fcoml
cmp
mov
jnp
xchg
jle,pn
mov
xchg
fistl
sarb
cmpsb
ljmp
ficompl
cmp
sub
dec
mov
andl
dec
cmp
push
xor
jmp
stos
jp
in
loopne
lods
call
sbb
or
adc
inc
mov
add
add
xchg
cmp
rcrb
ljmp
dec
push
lds
inc
dec
sub
lods
sbb
pop
dec
test
imul
mov
loop
ret
sub
inc
or
loop
lcall
add
imul
or
jle
movsb
fadds
or
hlt
ss
lret
ret
mov
jo
sub
icebp
inc
push
fnstsw
fcomps
mov
xlat
shll
add
inc
and
sub
call
out
or
jge
pop
xchg
pop
dec
adc
push
int3
test
adc
sbb
icebp
sub
add
inc
push
icebp
mov
or
and
push
jae
pop
mov
mov
into
loopne
stos
in
pusha
dec
movsb
sbb
or
mov
daa
ljmp
in
or
pop
mov
or
call
ret
enter
ficomps
add
into
cltd
leave
loope
pushf
loopne
jg
lret
or
jge
cld
xchg
sbb
pop
test
pop
dec
add
dec
sub
push
mov
adc
add
dec
iret
leave
cwtl
fs
pop
sub
add
subb
pop
ret
push
mov
ret
cmpsb
mov
movsb
testb
das
cmp
jg
leave
imul
cmp
test
mov
xorb
scas
loop
arpl
cmc
mov
lret
scas
cli
or
push
push
inc
js
nop
or
lret
shlb
mov
push
stos
pop
dec
adc
stc
bswap
mov
call
fcmovb
repz
push
or
mov
adc
cmp
stos
sbb
cmp
adc
mov
mov
or
pop
push
add
pusha
sub
cmp
inc
push
fdivrl
cmc
mov
and
mov
jp
mov
or
in
pop
mov
inc
push
imul
rcl
aam
xchg
mov
cs
cmp
mov
cld
sahf
pand
or
pop
xchg
dec
sbb
je
push
ret
jno
int3
inc
scas
leave
push
add
lret
dec
sub
subl
ljmp
test
push
pop
pop
mov
dec
in
sbb
shl
mov
out
push
pop
xor
lret
sub
enter
jle
adc
rclb
push
xchg
mov
test
jge
leave
pushl
test
test
dec
fldcw
lea
lcall
fstps
cs
outsb
adc
sub
sub
int
in
inc
fwait
pop
ret
js
xchg
in
jo
movsl
popf
push
adc
xchg
cmpsl
popa
int
push
push
aas
push
or
xchg
dec
cwtl
dec
pop
xor
sti
push
add
xor
aad
dec
mov
cld
mov
mov
enter
fisubs
je
dec
mov
dec
imull
rcrb
mov
pop
je
adc
iret
jnp
stos
pop
and
stos
test
dec
jb
int3
inc
cmpsl
dec
inc
ss
inc
ljmp
mov
cmp
adc
xor
xchg
jno
cmpsl
mov
pop
push
pop
mov
mov
jne
aad
fidivl
int
shl
fistpl
mov
push
dec
add
and
push
pop
stos
out
adc
imul
adc
imull
into
add
movsl
dec
sub
cmpsb
or
sbb
jp
sub
outsl
mov
seto
sarl
xor
sub
lds
loope
xlat
cwtl
out
push
mov
inc
inc
mov
fdivl
outsb
sub
add
sbb
hlt
mov
mov
or
push
jae
aas
cmp
adc
pop
add
push
mov
sbb
xor
sub
dec
adc
xchg
lods
jno
adc
rcll
test
cmp
xorl
imul
xor
in
push
mov
mov
pop
int3
cmp
push
arpl
xchg
cmp
xchg
test
lock
sahf
mov
xchg
jns
mov
mov
lahf
cwtl
push
and
jecxz
xchg
lret
aas
aas
push
lods
mov
mov
push
inc
pop
stc
add
push
mov
into
aam
mov
xor
adc
cmp
dec
xorb
lahf
push
mov
pop
in
cmp
aaa
pusha
sbb
xor
fwait
push
gs
jle
movsl
aas
inc
test
into
jmp
imul
adc
testl
cmpsl
sar
popf
jns
jge
push
movsl
ret
loop
aas
adc
repnz
pop
push
loopne
repz
adc
jne
inc
jae
cmc
loop
xchg
xchg
inc
dec
push
pop
add
imul
and
inc
fidivrl
int
jmp
je
sub
pop
mov
xor
mov
shrl
mov
int3
jmp
mov
jl
ret
push
mov
popf
or
adc
and
xor
or
sbb
je
jbe
imul
pop
xor
push
sub
xchg
xor
call
fabs
repnz
faddl
cmc
and
inc
xor
cmc
push
ds
mov
sbb
sub
mov
stc
mov
pusha
sub
mov
sub
push
call
sub
jl
mov
cmp
sub
and
cmp
push
and
jo
or
mov
enter
pop
popf
pop
mov
rcr
jge
sbb
add
lret
xchg
jl
xchg
adc
call
bound
cmp
mov
xor
mov
cmp
fsubl
push
push
and
scas
leave
rcl
jl
mul
lret
int
xchg
lds
cmpsb
insl
jp,pt
fcmove
cmc
ret
das
mov
push
mov
int
pusha
fwait
ret
bound
std
ss
pushf
inc
iret
sarl
xchg
repnz
iret
pusha
cmp
push
fstpl
lods
mov
cmc
lods
xchg
lahf
lea
push
stos
std
cltd
fwait
dec
aaa
inc
jp
scas
rclb
or
push
test
pushf
loope
das
xor
push
push
lret
sub
mov
in
pop
int
into
lds
cmpsb
hlt
addr16
dec
fiaddl
int
nop
lods
sahf
scas
cmpsb
imulb
pop
addl
xchg
inc
lea
cs
cmpsb
sub
ss
and
xchg
lods
cmp
jbe
sti
js
sub
in
pop
jnp
jno
aas
or
lock
mov
mov
cmp
icebp
mov
scas
sbb
fidivl
jg
or
mov
or
jle
int
sbb
sub
jg
nop
adc
inc
xor
cld
xor
mov
fcomip
shll
stc
jae
pop
loop
cmp
out
cmc
jmp
mov
adc
in
xor
add
xchg
insl
cltd
jg
sub
lcall
push
rolb
adc
inc
or
fisubs
jge
enter
jl
inc
lahf
inc
fs
mov
xor
mov
int
stc
or
or
sub
aad
xchg
mov
jp
push
insl
xor
es
pop
mov
lcall
mov
outsl
cli
test
jo
es
fstps
scas
and
aaa
leave
in
lret
aas
rol
andl
jp
or
pop
sbb
jns
lret
sbb
cmp
insl
ret
andl
daa
fsubrs
mov
in
in
mov
nop
jne
shrl
fbstp
aas
adc
outsb
jmp
jns
pop
or
scas
pop
mov
push
or
stos
sub
cld
xchg
aam
imul
or
xor
add
bound
mov
idiv
stos
call
rolb
mov
cmpsl
cmp
imul
xchg
xorl
xor
mov
into
and
fisubl
xchg
jns
dec
idivl
repz
cmp
scas
fadds
pop
lcall
enter
sarb
pop
cmp
pop
popa
sbb
es
mov
add
and
jb
dec
cmp
nop
or
roll
cmp
mov
add
jnp
es
push
aam
sbb
movsb
mov
xor
popf
shll
data16
outsl
fldl
mov
mov
and
ret
and
gs
or
pop
cs
cmp
mov
sbb
jp
imul
les
xchg
mov
mov
dec
sub
addr16
inc
or
stos
xor
or
pop
or
or
mov
bound
and
xchg
sbb
add
adc
push
jbe
jns
test
filds
jg
xorl
mov
test
lcall
push
push
repnz
push
lahf
push
jno
fsts
mov
sti
hlt
fucomi
addb
push
push
popa
or
jb
shlb
pop
mov
mov
pop
pop
test
cmpsl
in
pop
clc
sub
add
fisttps
fsub
cmp
fldenv
sub
sti
cmp
sub
mov
sbb
outsb
stc
or
data16
movsl
mov
arpl
sbb
std
add
inc
add
sbb
mov
sub
add
aad
sarl
mov
repz
xchg
inc
adc
outsl
lcall
data16
sbb
and
out
xor
icebp
and
sub
mov
loopw
xchg
or
insl
and
push
jo
stos
inc
notb
mov
dec
sub
mov
or
and
mov
inc
leave
sub
repnz
or
mov
outsl
pushf
sar
imul
imul
cmp
push
cmc
and
jns
pop
iret
mov
inc
int3
test
and
daa
iret
mov
aas
les
insb
nop
fs
bound
lcall
lahf
mov
pop
push
pop
adc
scas
negb
mov
xor
pop
or
in
sbb
push
mov
fwait
add
xorb
sub
outsb
mov
mov
jle
pop
push
movb
nop
xchg
je
fiadds
dec
dec
ret
std
mov
mov
mov
xor
int
mov
filds
mov
adc
pop
daa
shlb
icebp
or
mov
or
gs
mov
add
pop
imul
out
mov
movsb
insl
sub
mov
sub
pop
mov
push
inc
adc
pop
andl
mov
dec
add
add
sbb
fbld
inc
rolb
sti
leave
scas
add
cmpsl
imul
inc
scas
in
xchg
out
jo
repz
clc
xchg
in
test
lds
int3
in
cli
inc
mov
cmp
dec
sahf
subl
sub
negl
fdivrs
pop
and
in
xor
push
and
add
xchg
dec
cltd
in
sub
push
ljmp
add
dec
dec
arpl
subb
sub
mov
pop
imul
and
pop
imul
ftst
xor
jge
mov
xchg
dec
fwait
ljmp
or
xor
push
test
orb
cmp
insb
lret
call
pop
xor
sub
jl
sub
dec
fwait
into
scas
imul
pop
cs
repnz
jno
jl
movups
cmp
rol
ret
movsb
cmp
adc
push
mov
mov
sbb
adcl
xchg
insl
repz
xor
shrb
test
sti
ss
dec
imul
icebp
imul
pop
or
sahf
and
lea
and
pop
pop
add
add
pop
call
jmp
cmp
jno
shlb
or
stc
mov
push
add
jp
mov
int3
inc
adc
hlt
sbb
mov
pusha
in
sbb
push
cmp
xchg
lds
inc
push
pop
xchg
mov
xor
mov
or
mov
maxps
popf
iret
sub
inc
out
or
mov
dec
dec
add
and
scas
xor
outsb
test
rcrb
fwait
mov
inc
nop
sbb
mov
outsl
pop
mov
jb
xchg
leave
cld
xchg
sbb
out
rcr
in
shll
xchg
aas
mov
mov
loope
mov
or
inc
mov
adc
adc
enter
xchg
cli
xchg
ficoms
fdivr
loopne
mov
mov
out
adc
or
roll
pop
or
clc
mov
rol
dec
lods
roll
imul
cs
xor
in
pushf
fwait
cmp
sub
add
sbb
mov
rol
lcall
aad
fsts
cld
cmp
fisubs
das
sbb
rorb
hlt
repnz
mov
subl
cli
shl
arpl
mov
sahf
xor
sbb
sbb
jge
scas
lock
loope
xor
test
ret
cwtl
loope
imul
inc
mov
push
in
sbb
xor
fwait
inc
jb
test
sti
or
clc
stc
int3
fsubl
scas
lcall
push
inc
loopne
sub
mov
pop
aaa
xor
xlat
sub
rcrb
ret
divl
stos
and
xor
insb
mov
dec
jecxz
dec
ds
es
mov
xorl
mov
into
dec
mov
leave
inc
adc
and
imul
dec
cmp
loope
lret
xchg
pop
in
inc
iret
xchg
jl
pusha
or
inc
ja
fistps
ret
lds
mov
inc
jge
jno
dec
xchg
lret
dec
sub
rcll
cmp
and
adc
or
jg
cmpsb
mov
pop
mov
mov
cli
adc
aad
jnp
or
jl
shrl
fists
fstl
pop
addr16
mov
hlt
add
dec
clc
sub
and
mov
sub
adc
add
pop
and
or
xchg
sub
andb
cmp
cmc
rcr
cmp
imul
sub
xchg
andl
jecxz
decl
je
out
pop
and
jae
mov
dec
insl
cli
lock
or
addr16
mov
fbstp
hlt
icebp
nop
fisttps
sub
daa
and
test
xchg
js
pop
or
sbb
push
mov
addl
inc
pop
imul
sub
dec
and
cli
inc
pop
xchg
cmc
bnd
les
es
inc
fists
in
in
add
mov
or
mov
mov
sbb
fstpl
movsl
arpl
fsubrs
adc
xchg
les
mov
pop
xchg
add
mov
and
mov
test
pop
mov
js
fsubrp
mov
repnz
xchg
popf
pop
leave
imul
std
rorl
and
pop
inc
bound
cmp
adc
pop
bound
addr16
popf
pop
dec
shll
into
dec
fcomps
adc
movsl
rorb
xor
and
mov
or
icebp
pop
dec
out
daa
jns
dec
sti
sbb
jg
add
jae
sbb
inc
pop
pop
movsl
pop
push
in
cmp
mov
dec
or
dec
addb
xor
sbb
int3
inc
and
lods
xor
jmp
xor
jae
inc
mov
sub
xchg
sbb
mov
jae
daa
sahf
mov
ja
out
dec
push
jb
shrb
xchg
dec
sbb
xchg
in
and
cmpsl
clc
and
mov
leave
sub
cmc
fcompl
dec
test
or
xor
jge
jp
scas
mov
add
mov
ja
jno
pop
loope
and
add
test
ss
fildll
add
sahf
repnz
rolb
ret
push
or
scas
test
in
xchg
fsubs
lods
sub
xchg
xlat
push
loop
leave
int
push
out
pop
in
fstp
push
xchg
xorb
cmp
dec
jmp
out
push
and
dec
sti
cmpsb
or
jns
pop
nop
sbb
lret
xchg
inc
repnz
mov
push
mov
scas
cmp
pop
mov
add
dec
movsl
mov
cmp
fcmove
and
add
lret
iret
mov
in
lods
into
dec
sub
sbb
fldcw
ret
mov
addb
lret
sbb
and
pushf
scas
pusha
ror
or
and
in
mov
rcrb
mov
loope
add
jb
mov
xchg
nop
loop
ret
sti
movsb
sub
icebp
pop
pop
iret
mov
dec
mov
dec
cltd
cltd
mov
mov
mov
xchg
dec
pop
js
xor
popa
add
and
add
mov
pop
rol
imul
rolb
adc
sub
adc
popl
pop
ficoms
jae
dec
pop
jnp
lds
enter
es
movsb
daa
mov
dec
inc
xchg
sub
dec
loopne
int3
jae
sbb
push
xchg
cmp
das
rcrl
jns
insl
cmc
or
lahf
scas
je
in
or
add
xor
stos
das
add
popa
jno
stos
pop
mov
push
xchg
pop
ret
push
fcmovnb
sbb
lds
dec
xchg
js
or
out
loop
inc
dec
pop
push
pop
mov
xchg
inc
sbb
mov
pop
icebp
jge
jecxz
pusha
jo
test
inc
push
arpl
sahf
out
fsubrp
xor
rclb
sbb
inc
mov
xor
push
ss
add
aad
push
push
adc
testb
in
lods
fsubrs
adc
sub
sub
ss
filds
dec
or
xor
popa
cwtl
push
ja
inc
loopne
nop
pusha
mov
lret
mov
or
sub
dec
shrl
jae
xor
scas
pop
xor
or
jp
pop
mov
xlat
hlt
js
scas
cmpsb
cmp
jle
ja
flds
xor
and
cli
cmp
dec
mov
test
repnz
popa
lock
cmp
aas
or
div
or
jg
int3
jp
cmp
fucomp
fdivrs
test
and
cmpsl
push
int
dec
or
int
fisttpl
hlt
and
pop
loop
dec
xor
cwtl
cmp
aas
add
jae
dec
es
inc
pop
pop
mov
pop
dec
mov
fcoml
sarb
push
stos
xchg
mov
lods
add
pop
in
in
jmp
mov
jae
out
jle
jmp
sti
cmp
xchg
jle
lret
inc
repz
adc
bound
dec
mov
js
call
sbb
mov
icebp
roll
int3
push
pop
jae
add
insb
push
jmp
or
pop
or
inc
mov
das
and
cmp
addr16
ss
fists
mov
int
fisubs
dec
mov
xchg
in
sar
ljmp
and
pmaxub
cmp
cmp
xchg
mov
push
aam
decb
add
sub
mov
and
inc
adc
cli
pop
leave
sbb
loop
in
lea
jecxz
idiv
push
dec
push
lcall
mov
stos
push
fcmovu
sbb
mov
sbbl
in
pusha
cltd
nop
jp
mov
das
stos
aam
dec
xchg
jbe
push
jmp
pop
ds
out
dec
or
jne
push
mov
dec
shlb
movsb
clc
stc
sahf
mov
fcomi
out
sub
daa
xor
pushf
and
scas
rcll
xchg
mov
inc
mov
cmp
cld
popf
xacquire
loopne
add
add
dec
xlat
sbb
gs
and
mov
sub
push
jb
mov
test
aam
into
in
int
mov
sti
je
lret
scas
test
mov
xchg
repz
pop
adc
mov
lret
xchg
data16
push
jne
shr
inc
aam
push
xchg
ficoms
imul
xor
stc
sbb
sub
into
xorb
mov
xchg
ret
mov
imul
popf
jg
xor
jns
ror
cltd
sbbb
jo
sub
add
add
inc
mov
mov
sub
sub
fsubrs
adc
mov
cmc
les
cwtl
dec
cs
push
lods
mov
xor
mov
shrb
insb
xchg
dec
rclb
xor
mov
cmp
pop
pop
dec
jb
cmpsl
ret
mov
pop
fcoms
rorb
lods
clc
push
rorl
jns
or
xchg
cs
repnz
mov
and
imul
sti
mov
inc
pop
push
pushf
sbb
sarb
push
lret
xchg
in
lods
mov
xchg
insb
mov
pop
pop
ss
add
test
stos
je
cld
cli
mov
fstpt
mov
jb
lds
or
rcrb
stos
push
jns
xchg
pop
roll
sub
mov
dec
add
mov
adcl
frstor
xor
das
and
adc
data16
insl
pop
das
cmc
lods
cmp
mov
gs
repz
xchg
mov
jle
mov
subl
mov
add
clc
cmp
xchg
mov
pop
inc
mov
int
adcb
test
mov
loopne
push
enter
test
dec
and
or
popf
jmp
lods
inc
mov
hlt
fldt
lods
xor
into
push
es
mov
or
imul
clc
sbb
jge
iret
add
and
mov
pop
or
pop
sub
or
cmc
or
arpl
mov
push
frstor
cltd
cmp
xor
fidivs
andb
frstor
push
rcll
push
stc
inc
pop
add
icebp
dec
cmp
repz
jae
lock
lahf
fistpl
fstps
cwtl
arpl
pop
fs
popf
sub
add
mov
dec
push
sbb
enter
sub
push
leave
cmp
fcoms
mov
js
xchg
fists
pop
xor
imul
push
cmp
sahf
push
cld
pop
pop
adcb
add
leave
jecxz
stc
outsb
and
dec
in
adcl
int3
aas
test
jns
popa
or
aas
jns
sub
rcrl
inc
sbb
adc
out
and
ret
enter
std
cmp
lret
xor
mov
cmp
nop
aam
push
xor
jns
roll
sub
dec
sub
dec
add
xor
cmp
and
sbb
or
dec
rcrb
test
mov
stc
pop
mov
adc
es
in
mov
leave
pop
xor
pop
mov
inc
test
rcrl
movsl
jns
stos
or
jb
das
mov
xor
and
or
mov
lock
iret
jle
cmpsb
fnstcw
pop
and
or
rorb
jg
out
or
adc
mov
movsb
inc
sub
sub
mov
xor
ljmp
add
fdivr
mov
xchg
sub
and
pop
repnz
mov
pushf
cltd
out
jae
sarl
xchg
fimull
pop
mov
inc
rcrl
fs
xor
movsw
push
xchg
xor
loopne
cmp
jg
fisubrl
movsl
pop
fbld
cmpsl
cmp
dec
ljmp
pop
divb
or
dec
and
into
sub
sub
daa
jle
in
rorb
fdivrs
int3
push
and
ret
xchg
leave
mov
push
cmp
or
fsubrs
mov
sub
cmp
popf
and
aas
inc
xchg
push
lds
rcrb
lahf
es
test
and
pop
popf
imul
sbb
enter
add
in
rorl
movsl
imul
in
jb
inc
pop
add
sub
shlb
jge
notl
lock
cmc
jle
xor
out
aas
jg
adc
movsl
mov
push
cmpsl
mov
or
cwtl
mov
dec
data16
ret
push
fidivs
mov
dec
jecxz
pop
arpl
jae
pop
xchg
or
pop
xchg
insb
in
cmp
dec
aas
cli
imul
int
repnz
movsl
sub
fildll
add
lret
inc
testb
and
fsts
cmc
pushf
cmp
cwtl
fwait
adc
xchg
outsb
data16
lds
push
mov
push
cmp
bound
push
pushf
ljmp
fnsave
xchg
adc
fwait
hlt
int3
add
cltd
loop
mov
out
test
push
xor
add
faddl
cmp
js
lods
mov
cmpsl
mov
inc
mov
lretw
push
gs
or
jecxz
sbb
push
push
jg
lods
add
sarl
test
imul
aaa
out
mov
and
add
inc
and
test
jo
mov
inc
fisubs
mov
xchg
dec
jne
sahf
cltd
outsb
mov
xor
mov
fdivs
push
cmp
frstor
aam
in
leave
hlt
dec
sti
lcall
cmpb
push
or
sub
and
bound
notb
sbb
andl
and
push
out
inc
pop
adc
jnp
pop
cmp
jp
test
sbb
jo
mov
or
dec
and
jo
das
jecxz
xchg
jle
fstps
dec
inc
sti
fildll
pop
scas
cmpsb
int3
dec
lahf
inc
out
sub
je
sbb
dec
and
cmpsl
jne
sbbl
xchg
xor
mov
test
jb
xchg
dec
sub
insb
loopne
xor
dec
push
fcmovnb
rol
xchg
xorl
repnz
movsl
fstl
sub
pushl
xor
int
mov
jne
stos
jno
xchg
push
shrl
rorl
adc
nop
sbbb
jae
fisubl
xchg
sub
mov
cmp
pop
add
ss
js
cs
sbb
or
and
dec
and
mov
sbb
or
in
mov
inc
pop
push
mov
mov
cmp
ret
dec
mov
cmp
jo
jge
shrl
jl
cmp
out
inc
jl
int
cltd
movsb
scas
cmpb
jns
sti
mov
ds
xchg
cmpsb
ret
cmp
popf
jp
leave
xor
sarl
add
dec
cmp
sub
adc
imul
mov
pop
rclb
out
cmp
sbb
jecxz
rcrb
nop
cmc
loop
push
stos
sub
cmp
jecxz
repz
xchg
insb
roll
lds
lret
lods
repnz
sub
pop
cwtl
xchg
shll
insb
lds
lock
sub
push
sbb
jnp
push
pop
inc
sahf
mov
ret
leave
jae
inc
jmp
jl
inc
pop
imul
mov
insl
add
inc
mov
add
jmp
dec
loop
mov
mov
inc
test
xlat
mov
fstpl
jg
push
bound
mov
adc
pop
mov
adc
arpl
ficoml
stos
mov
js
pop
xchg
lcall
pop
sti
xlat
fnstcw
mov
or
nop
loopne
sbb
aas
cmpsb
cmpsb
inc
pop
jl
lret
mov
mov
dec
push
fcmovbe
mov
cli
mov
inc
leave
test
insb
into
cmp
xchg
sub
xchg
sahf
mov
hlt
pop
int3
push
insl
je
int3
adc
loope
bound
dec
loope
jne
or
outsl
jns
leave
push
rcrb
lcall
shlb
pop
mov
sub
pop
je
movsb
mov
xchg
push
inc
sub
in
pusha
xor
loope
je
test
push
mov
xchg
sbb
mov
xor
jbe
pop
xchg
daa
pop
jle
adc
adc
cmp
aam
rcll
pop
leave
inc
loop
dec
inc
nop
xchg
cmp
sbb
test
lahf
sbb
aas
orb
les
sbb
andl
jmp
dec
and
mov
mov
push
dec
inc
cld
sub
push
iret
jecxz
jns
mov
jnp
add
in
dec
aad
and
jnp
outsb
js
mov
xlat
sub
mov
cs
xchg
sub
out
repz
jl
arpl
jmp
adc
jb
lret
nop
cmp
xlat
clc
xchg
fs
mov
or
sbb
xchg
stos
add
mov
pusha
dec
xchg
jge
adc
nop
pop
pop
je
xchg
insb
pop
test
imul
fidivl
clc
data16
mov
and
mov
inc
hlt
sbb
jmp
mov
sbb
cmc
inc
mov
xchg
mov
cltd
leave
xchg
ss
cmp
jle
xlat
nop
lods
loope
jecxz
testl
pop
xor
cmpsl
lahf
add
arpl
mov
push
push
repnz
or
fsubr
mov
ljmp
fistps
xchg
inc
dec
enter
ficoms
cld
jno
lret
roll
jae
jnp
xorl
scas
ss
add
stc
in
jecxz
add
push
and
nop
aad
rol
rcr
xchg
lds
cmp
push
popa
imul
pushf
mov
mov
mov
jae
bound
nop
lods
add
testl
std
add
fiaddl
sub
xchg
mov
js
pop
mov
test
xlat
adc
push
mov
ret
dec
push
mov
jb
push
repz
and
lret
cmp
mov
mov
jl
loop
lods
add
sti
mov
jp
push
cld
dec
mov
stos
adc
ret
pminsw
and
xor
inc
inc
fisubs
mov
mov
popa
mov
cmp
imul
stos
push
mov
push
sbb
sub
xchg
pop
int
pop
fdivrl
stc
bswap
cwtl
pop
call
xchg
pop
repz
es
sbb
cmp
mov
sbb
jp
test
je
scas
scas
cmp
sahf
ret
mov
push
das
enter
jb
dec
jmp
rcrb
mov
pop
jbe
pop
sub
fidivl
mov
and
mov
jnp
out
aam
pop
jl
lahf
push
ret
addr16
jp
pop
imul
jns
cld
stc
das
adc
xchg
stc
mov
mov
lret
sbb
loopne
rcrl
loopne
mov
fcoml
enter
mov
das
pusha
jne
mov
cs
cmp
enter
sub
sahf
and
lock
loope
xor
sub
pop
clc
fwait
xor
xchg
mov
sbb
dec
mov
sub
imul
outsb
dec
sbbl
mov
int3
pushf
and
inc
in
jl
repz
xchg
hlt
sarl
stc
nop
test
xchg
stc
adc
lea
andl
sbb
out
call
cld
sub
aas
pushf
js
cmp
sub
fistpl
aas
dec
and
mov
mov
pop
cwtl
ss
xor
push
mov
and
jg
repnz
imul
fldt
cld
sub
scas
sub
hlt
call
jge
cwtl
sbb
lcall
mov
clc
sub
lret
jle
fwait
pop
xchg
sbb
sbb
inc
aad
and
pop
cmp
cmpsb
mull
je
js
repnz
lds
jmp
inc
cmpsl
movsb
jmp
and
imul
and
pop
mov
cmpsl
add
decl
jmp
imul
push
jg
dec
pop
pop
ret
jnp
sub
jmp
adc
cmp
les
data16
addr16
iret
add
rcr
imul
mov
mov
adc
iret
js
xchg
xchg
sbb
inc
dec
ljmp
mov
dec
mov
xchg
cli
push
sti
mov
push
mov
fdivrp
jge
mov
push
mov
imul
push
cli
cmc
sbb
dec
add
pop
and
sbb
dec
mov
xchg
in
and
dec
pop
mov
push
mov
mov
and
adc
loope
in
dec
insb
cltd
out
and
jnp
ljmp
mov
push
sbb
daa
jl
adc
xchg
js
sub
orb
add
mov
jl,pt
sti
loope
add
fldcw
data16
mov
pushf
inc
adc
bound
mov
scas
int3
leave
or
shll
dec
sbbl
call
add
mov
xor
cmp
lret
mov
das
xor
in
pop
lcall
mov
cwtl
pop
stos
inc
sbb
jno
mov
adcb
mov
fadds
push
dec
sbbl
mov
sbb
inc
jg
inc
mov
dec
cs
inc
and
sub
mov
std
and
inc
inc
lcall
lods
fsubrl
and
pop
fisubrs
nop
stc
cmpsb
cmp
shrb
test
add
imul
in
xor
mov
sub
xchg
mov
jnp
dec
mov
cmp
sbb
ljmp
stos
icebp
pusha
sub
xchg
dec
push
mov
stos
call
xchg
inc
pop
dec
sub
lahf
stos
sbb
pop
push
xchg
inc
mov
aas
clc
mov
popa
sti
cltd
inc
lods
cmp
xor
mov
out
and
cltd
jmp
insl
orb
test
pop
sbb
push
inc
fisubs
xor
xor
decl
ljmp
fwait
mov
mov
je
add
jl
sub
subb
lods
cmp
aad
gs
sub
out
inc
jae
sbb
push
jo
sub
jle
adc
or
dec
pop
icebp
jne
push
ret
adc
es
push
in
dec
mov
or
aas
jns
mov
insl
push
jno
fnstsw
sti
jmp
jns
dec
cmpsl
mov
call
fwait
mov
dec
mov
sahf
sti
dec
pushl
lock
jo
stc
mov
push
ret
cld
loope
stc
sub
pushf
bound
aas
stos
xorl
addr16
cmp
pop
dec
insb
sub
pop
mov
xchg
lea
hlt
jb
adc
push
rep
cmp
jle
orb
xlat
cmp
fs
xchg
outsb
cmovp
mov
js
push
mov
jge
mov
in
iret
pop
cs
pop
push
xorb
jmp
dec
mov
sahf
sti
dec
pushl
icebp
flds
pop
jmp
loop
stc
jmp
pop
mov
dec
jae
aas
stos
outsb
jb
aaa
jp
cmp
addr16
orl
sub
mov
lock
scas
or
rclb
mov
inc
stos
out
push
push
sub
inc
mov
jb
mov
scas
inc
xchg
pushf
mov
or
lea
cli
das
lock
in
xchg
push
lock
lcall
in
sub
jle
xchg
cwtl
jns
cmp
ljmp
jae
movsb
add
mov
jle
inc
in
adc
aaa
adc
imul
jg
dec
rcr
popa
inc
mov
data16
push
aam
je
mov
movsb
stc
aad
jp
and
push
push
xor
fwait
jge
jecxz
loopne
cmpsl
pushf
mov
mov
jnp
out
xchg
call
sub
inc
out
je
sbb
lea
and
filds
pop
subl
jp
xchg
cmp
sti
out
data16
aad
leave
adc
js
jl
add
lea
negl
lods
jo
dec
out
repnz
dec
ficoms
pop
xor
xchg
pop
sub
cmp
int3
sbb
mov
add
rolb
hlt
mov
stos
pop
icebp
and
push
or
roll
jne
xor
cmp
dec
maskmovq
divl
cmp
pop
lret
out
mov
lods
out
xchg
or
push
adc
hlt
rcrl
aam
gs
ja
stos
sub
cs
add
pop
push
add
push
or
push
xchg
jge
sbb
dec
pop
dec
cvtdq2ps
cmp
dec
push
jnp
lret
cmp
add
jle
shrb
sub
cld
and
mov
mov
shlb
mov
in
les
out
mov
testb
call
dec
out
or
movsb
jno
ds
mov
and
adc
fdiv
jle
arpl
ret
jbe
pop
mov
into
cltd
mov
sbb
xorb
inc
or
and
dec
adcb
cmpsl
or
inc
ret
lds
mov
push
inc
jle
shr
xchg
enter
hlt
iret
ss
pop
loopne
inc
inc
xchg
aaa
sbb
mov
lock
sub
ret
lods
jae
and
int
cmp
inc
xor
mov
xor
mov
dec
out
rcrb
xchg
nop
shl
les
gs
int
mov
jo
cltd
sub
jle
sub
add
ja
adc
mov
dec
jno
movq
mov
les
dec
test
cmp
lret
inc
mov
mov
test
jle
es
rcr
jnp
pop
inc
in
mov
cmp
jae
inc
popa
xlat
jl
pop
in
jb
lea
jmp
jmp
pop
shrb
outsb
and
xchg
movsb
sub
mov
dec
cmpsl
inc
pop
js
scas
ret
les
dec
mov
xor
les
add
std
ret
cmp
mov
les
std
sbb
inc
cmp
mov
das
nop
xchg
pop
mov
popf
lcall
xor
add
ftst
or
mov
dec
push
out
fdivrl
int3
cmp
mov
adc
fisttpl
sbb
jbe
leave
dec
lret
xorb
adc
mov
adc
sub
insl
jg
jno
pushf
push
inc
jl
clc
xchg
xchg
mov
add
mov
cltd
lea
ss
aad
dec
ret
pop
and
xchg
mov
sbb
xchg
cltd
inc
mov
or
movsl
aam
scas
fsubrl
lahf
sbb
jl
scas
xchg
ret
shlb
adc
add
aas
rcll
push
incl
stos
ds
aas
sub
jge
push
add
xorb
cmp
popf
popf
test
insl
leave
rclb
mov
stos
in
pop
shlb
stos
ljmp
clc
test
xor
je
pop
lret
ja
mov
std
cmp
mov
xchg
pop
push
popf
and
cwtl
test
ret
stc
aas
addw
pusha
mov
out
and
sbb
jne
stos
and
in
les
aam
fimull
inc
sti
xor
test
cwtl
cmp
imul
cmp
sbb
insl
jnp
and
fdivl
std
pop
jmp
leave
popa
jecxz
ret
mov
adc
xor
mov
mov
and
and
int3
mov
cmp
ror
mov
daa
lods
xchg
jne
lods
cmp
sub
or
lret
sub
or
mov
jmp
mov
fwait
mov
or
or
sti
and
mov
or
sub
or
push
std
ds
lret
aad
dec
cmovp
insl
dec
pushf
push
jno
dec
inc
pop
sbb
or
sahf
ror
sub
jae
sahf
test
filds
cmp
hlt
mov
pushf
cli
subb
dec
mov
aaa
push
les
call
pop
fisubrs
daa
out
scas
sub
not
lods
int
adc
pop
mov
and
pop
pusha
or
mov
imul
icebp
ret
xor
push
mov
xchg
inc
in
xchg
nop
pop
sbb
jge
cmp
cmc
mov
cmp
and
jnp
pop
cwtl
int3
sbb
lods
xchg
jns
sar
adc
aas
lahf
in
add
movsb
das
or
inc
sub
cmp
pop
pop
inc
fucomi
dec
mov
in
dec
inc
roll
fiaddl
cmp
sbb
cmpsb
mov
or
cmpsl
aad
ret
xor
sahf
push
cmp
movsb
jns
or
dec
pop
scas
int
subb
lcall
mov
mov
mov
std
adc
cltd
and
add
cmp
mov
jo
fistpl
in
jge
es
push
dec
jecxz
cli
faddp
or
inc
test
filds
mov
adc
lea
and
pop
cs
hlt
cltd
sub
gs
jle
lods
mov
out
sbb
lods
movsb
dec
lahf
pop
jmp
mov
out
shlb
push
xor
js
lods
repz
jge
shrl
int
cmp
jle
and
cmp
jecxz
loope
fiaddl
pop
xor
mov
inc
mov
fnstcw
mov
stos
pop
cmp
enter
scas
std
cmp
fildll
pushf
add
and
sti
push
fs
insb
and
dec
lods
mov
push
inc
or
and
jb
or
lahf
nop
cwtl
and
mov
or
xchg
lret
shrb
add
sbb
dec
mov
adc
inc
sti
sti
hlt
mov
arpl
mov
fimull
xor
outsl
cld
rorl
or
addr16
cmpl
insl
sub
aad
pop
in
add
mov
push
dec
push
cmp
cmp
pop
test
or
sahf
sub
aaa
sub
outsb
push
cmpsb
mov
xchg
aaa
aas
mov
subb
adc
push
popl
pop
mov
cmp
cmc
dec
dec
mov
aas
ds
mov
es
pushf
xchg
insl
lods
into
or
inc
dec
add
les
inc
lods
sbb
xchg
hlt
adc
pusha
and
and
dec
cmp
jnp
aas
xchg
cs
push
xchg
ret
jno
push
xor
xor
and
lahf
mov
insb
lret
xor
sbb
push
mov
adc
loop
repnz
and
pop
add
inc
pop
cld
enter
pushf
cmpsb
pop
test
sbb
sbb
cmp
dec
sub
pop
xchg
xchg
loop
les
and
add
aad
pop
leave
ret
mov
sbb
mov
dec
int3
mov
mov
neg
ss
sbb
inc
inc
inc
jb
mov
rorl
mov
adc
pusha
nop
jecxz
mov
xchg
xor
inc
add
es
or
mov
in
aad
pop
jb
in
mov
sti
popa
outsb
mov
fmuls
mov
push
repz
cmpsb
fcmove
mov
sti
imul
test
sarb
fwait
fwait
loope
pop
sbb
sub
outsb
adcb
adcb
or
inc
mov
pop
scas
in
in
adc
mov
loopne
addr16
and
mov
pop
cmp
push
mov
andb
enter
sub
jl
rcrb
jge
inc
aaa
sbb
out
imul
lock
iret
xchg
sub
xorb
add
aas
loopne
call
jne
add
or
dec
stc
cmp
sub
jle
adc
das
mov
fmul
adc
mov
pop
loop
andl
sti
pop
pop
leave
lcall
dec
lods
lea
insl
pusha
lods
out
shrl
or
call
test
inc
cmp
add
and
sub
dec
inc
scas
mov
dec
lds
xchg
sahf
pop
add
loopne
rolb
cmp
jnp
nop
fwait
xchg
jmp
xchg
jle
mov
stc
lahf
inc
jmp
add
mov
add
adc
pop
push
pop
hlt
pop
enter
hlt
stos
jl
stc
push
mov
adc
lds
frstor
test
mov
sub
or
push
cmp
ds
pop
xor
push
mov
sbbb
adc
cmp
mov
push
mov
xor
mov
adc
mov
xchg
orl
push
les
cltd
fisubrs
cmp
shlb
mov
imul
add
loopne
hlt
add
jge
push
mov
adc
jecxz
mov
and
push
std
std
pop
ret
leave
stos
pop
sub
mov
mov
sbb
xchg
rclb
sub
pop
sbb
mov
inc
and
adc
sbb
cld
sbb
xor
push
nop
ficoml
stc
mov
pop
xor
mov
mov
jmp
push
mov
dec
inc
pop
dec
fcomp
imul
and
add
push
push
jnp
aad
negl
je
and
and
or
iret
ror
stos
and
insl
pop
and
sbb
mov
xor
enter
push
les
mull
ljmp
shr
inc
mov
xor
cmpsb
mov
cwtl
jae
mov
les
and
xchg
fisubrl
mov
xlat
sub
enter
cmp
sbb
aad
mov
and
into
ja
imul
mov
mov
clc
sub
lea
sbb
xchg
inc
xchg
nop
inc
movsb
cmp
sbb
in
mov
ljmp
cmp
movsl
je
in
cmp
pop
and
inc
jnp
adc
fidivrl
imul
pop
jmp
add
int3
in
mov
mov
pop
pushf
imul
fsubl
push
sbb
mov
inc
jg
or
push
clc
sahf
out
cmp
int3
jb
es
inc
insb
push
mov
mov
clc
movsl
inc
nop
in
push
cmpb
repz
push
add
pop
sbb
mov
scas
inc
imul
flds
clc
jae
lods
or
cmp
jns
dec
in
enter
adc
xchg
ffreep
add
mov
rcll
es
push
cmc
xchg
inc
cwtl
mov
push
jle
lock
xchg
rorb
or
jns
iret
mov
mov
mov
xchg
mov
mov
pushf
leave
add
xor
roll
xchg
cmpsl
push
dec
aad
decb
mov
cmp
nop
aad
mov
lret
mov
imul
mov
xor
push
pop
mov
jp
rcl
add
inc
sub
decl
lods
sub
mov
mov
inc
out
dec
or
inc
jb
rorb
pop
push
cltd
jmp
cmp
imul
mov
leave
and
or
mov
dec
into
mov
jge
shll
mov
inc
pop
pop
fisttpll
pop
jl
fldl
cltd
sbb
sbb
out
cld
dec
jo
and
int3
adc
lods
or
sub
or
add
es
jns
test
sbb
push
fiaddl
mov
adc
mov
dec
mov
hlt
xchg
sub
pop
loopne
mov
mov
addr16
adc
icebp
fwait
or
mov
rorl
mov
xchg
leave
mov
mov
xchg
xchg
adc
mov
test
cmpsl
mov
fs
cmp
shr
ss
xchg
cmp
out
pop
aam
inc
adc
add
xchg
adc
punpcklbw
pop
mov
stc
pusha
inc
scas
loopne
mov
mov
adc
pop
fildl
sbb
je
xchg
mov
xor
cmpsl
inc
pop
nop
test
fwait
out
sub
sti
andb
lods
insb
rcrb
pushf
jno
dec
cmp
or
mov
xchg
cmp
lcall
jle
or
jg
out
or
aaa
stos
loopne
push
js
jp
add
jns
iret
jg
cmp
or
sub
rclb
jbe
and
jle
bound
insl
movsl
les
fcmove
addb
dec
loope
cmp
and
dec
test
lret
test
mov
mov
add
rorb
mov
jnp
bnd
jge
mul
aam
mov
cmp
pop
outsl
jae
test
dec
inc
cmp
sti
xor
add
mov
inc
in
lret
cld
sti
cmpsb
jo
cmp
cmp
sub
mov
sub
add
repnz
adc
jnp
arpl
ficoms
inc
push
xor
ds
sbb
xor
fnstcw
fsubrl
cmp
inc
push
call
jb
sahf
jns
fdivl
mov
sub
sub
in
push
xchg
jae
push
nop
pop
int3
jbe
jg
int3
and
div
data16
bound
mov
push
pusha
hlt
lods
pop
mov
xchg
push
push
lcall
mov
xchg
movsl
xor
inc
mov
cmp
lock
and
dec
lret
mov
test
jbe
mov
mov
iret
sbb
std
ja
add
fidivrl
leave
shr
insl
hlt
sar
dec
dec
adc
call
in
test
inc
int
mov
cmp
rorl
pop
in
adc
pop
add
int3
outsb
out
jne
ret
mov
mov
orb
and
sbb
in
adc
nop
int3
or
test
mov
lods
or
arpl
cmp
or
imul
shrl
dec
mov
fiaddl
into
adc
lret
mov
mov
mov
pusha
lcall
pushf
fmul
aaa
lods
cmp
in
jo
jecxz
adc
cmp
ret
pop
rclb
imul
icebp
push
adc
ror
mov
mov
sub
jno
imul
ss
push
xor
out
cmpsb
mov
in
pop
mov
dec
adc
ljmp
das
push
pop
pop
test
insl
pop
inc
and
ja
les
cmp
shrl
fists
jne
inc
xor
psrad
imul
push
xchg
nop
enter
cs
jl
fcoms
nop
and
pop
scas
dec
push
or
call
push
dec
xlat
add
xchg
or
add
fstpt
jg
mov
sub
inc
daa
aas
xchg
arpl
fidivl
or
imul
jle
jp
lahf
dec
add
loope
jmp
mov
xchg
fimull
pop
add
and
shlb
dec
mov
dec
xchg
jecxz
cmp
pop
clc
imul
fs
sti
cmp
data16
call
push
mov
jo
adc
cmc
enter
push
mov
sbb
ret
hlt
or
lea
dec
mov
and
xor
xor
out
insb
mov
fistl
cmc
sub
jo
in
jno
es
leave
adc
xchg
gs
inc
repnz
push
jae
rcr
adc
sti
lret
outsl
outsl
adc
sub
and
xchg
mov
idiv
out
and
sbb
xchg
loopne
movsb
sti
mov
leave
mov
loop
xorb
adc
adc
lds
dec
and
lods
ret
push
pop
loope
fdivrs
movsl
jae
sub
sarb
mov
jl
bound
pop
lahf
sbb
or
jecxz
negl
pop
pop
fs
inc
mov
dec
mov
aam
pop
mov
fldcw
pop
movl
icebp
xlat
mov
and
inc
repnz
xchg
pusha
sub
dec
or
test
out
ror
mov
stc
enter
les
jecxz
cmp
insl
shll
das
ret
mov
mov
and
iret
std
mov
pop
ljmp
pushf
pushf
mov
mov
and
aas
cmpl
adc
test
ret
sbb
dec
shll
adc
test
test
dec
cmp
push
jl
in
mov
sbb
cmp
int3
xor
pushf
or
mov
in
sub
mov
cmp
inc
jno
pop
adc
aam
mov
loopne
sbb
xchg
sub
in
or
into
rcr
jmp
addr16
movsb
jl
shlb
cmp
in
inc
xor
cmp
push
pop
sar
inc
xor
push
in
jnp
mov
mov
adc
aaa
adc
xchg
in
mov
push
mov
stos
test
and
xchg
jno
test
lcall
sub
rorb
sub
repz
mov
imul
aam
pop
inc
mov
lods
ret
dec
stos
aad
imul
or
loop
push
in
fldl
mov
xchg
jne
jne
fistpll
mov
xchg
fldl
aad
addr16
inc
shll
nop
mov
xchg
inc
aad
mov
movsb
mov
jmp
inc
push
les
xor
dec
and
shrb
inc
out
sbb
mov
mov
stos
scas
cltd
push
ljmp
xchg
adc
ss
out
iret
mov
neg
push
out
int3
fs
imul
sub
xchg
dec
mov
add
cmpsb
and
jo
add
push
mov
roll
push
stos
hlt
lret
cs
test
outsb
mov
int3
loopne
and
or
push
jl
fcompl
cltd
aad
shl
inc
mov
adc
cmp
repnz
orl
aad
ror
neg
icebp
rcrb
clc
adc
icebp
nop
mov
mov
cli
es
outsl
xchg
cltd
inc
ret
and
xor
mov
mov
pusha
mov
in
ja
lcall
jmp
mov
sub
cmp
mov
stos
and
or
dec
call
repz
xchg
int3
jo
andl
jecxz
xchg
push
insb
and
sbb
cmp
into
sbb
pushf
and
imul
mov
out
push
fistpl
aad
push
jae
outsb
outsb
mov
pop
pushf
in
rolb
pop
pop
repz
dec
or
push
movsb
add
inc
dec
test
jno
jbe
daa
push
push
or
inc
daa
or
jns
ss
push
jl
in
std
cmp
mov
leave
and
fdivrs
lahf
es
xchg
rcr
sbb
cmp
push
sub
jnp
aaa
jl
pop
or
out
add
leave
mov
pop
faddp
cltd
push
sub
lods
xor
dec
call
mov
dec
std
leave
imul
les
cmpsl
cmpsb
jle
and
les
rol
push
fstpl
mov
test
lds
lea
dec
inc
inc
push
es
xor
stos
xor
dec
and
inc
mov
gs
mov
lcall
hlt
into
adc
push
out
cmp
fldcw
push
sub
repz
sbb
cltd
ljmp
and
mov
push
xchg
addr16
movsb
jbe
adc
test
inc
xchg
mov
idivl
mov
xor
shlb
in
dec
inc
push
es
loope
sbb
sbb
cmc
fwait
xchg
push
xchg
or
adc
sub
mov
lret
shlb
fwait
and
out
cmp
inc
push
dec
mov
adcb
add
add
xchg
mov
int3
sub
push
mov
or
pop
mov
sbbb
cmp
jb
sub
mov
and
or
jge
fidivrl
imul
popa
and
pop
mov
cmp
in
push
gs
pop
into
ja
sbb
xchg
jl
aas
dec
mov
push
nop
mov
mov
mov
xchg
jge
sbb
test
mov
arpl
dec
or
cmp
aam
cmpsb
int3
outsb
int
pop
pop
popa
jecxz
loop
or
mov
mov
out
cmp
test
shrl
inc
sub
sub
hlt
andl
into
sbb
int3
cli
test
and
mov
cld
jne
adc
nop
sub
cli
xchg
in
mov
or
leave
mov
cmp
mov
jge
testl
cmpl
div
cmp
dec
xchg
fldl
xlat
mov
jg
loope
lods
fisubs
shrb
add
in
mov
sub
add
dec
dec
stos
out
mov
add
aas
push
dec
pusha
or
mov
adc
loopne
cmp
inc
outsl
mov
push
scas
mov
stc
lods
pop
add
insb
cmc
push
fcmovbe
fcom
mov
mov
mov
xor
xor
add
mov
int3
mov
fmuls
cmpsl
mov
loope
pusha
rolb
ljmp
inc
cmpsb
mov
dec
xchg
insb
xor
fisttpl
adc
popf
xor
push
jle
int
lea
mov
push
or
fisttps
push
sbb
inc
shlb
or
das
sub
test
and
sub
adc
lods
dec
les
stos
fstl
ja
ret
shrb
mov
test
leave
scas
mov
lret
xor
mov
into
test
add
lret
sub
inc
loope
cmc
out
lods
pop
push
cmp
inc
fdivrs
and
add
pop
outsb
aas
rorb
negl
add
data16
divb
jp
nop
ss
pop
insb
dec
bound
addb
fistpl
sbb
pop
xlat
push
aas
mov
mov
test
xchg
imul
pushf
shlb
repz
or
fimuls
inc
lahf
sub
popa
or
xor
ret
sbb
bound
xchg
jb
mov
out
rorl
inc
cmp
fdivrl
popl
cld
cmpsl
lret
and
leave
lea
test
push
mov
loopne
mov
cltd
jbe
add
mov
pop
loop
popf
inc
xchg
test
jmp
sub
inc
add
scas
mov
or
mov
xchg
push
xchg
stos
mov
enter
imul
xor
fcmovnb
jo
les
dec
sub
pop
jecxz
mov
rclb
sbb
andb
enter
lret
xchg
mov
jle
test
popf
jns
fwait
push
loope
mov
lods
aaa
dec
subb
mov
or
xor
and
pop
cmp
xor
in
flds
js
incl
jp
push
sbb
mov
sbb
lahf
shrb
cmp
sbb
stos
repnz
push
loop
mov
mov
nop
aas
out
arpl
sub
test
sub
pop
jmp
out
call
fldcw
shrb
lret
sub
daa
cmp
add
fisttpl
xchg
arpl
dec
push
sub
mov
sub
pusha
mov
push
int3
clc
pop
lea
mov
inc
test
cltd
jecxz
xor
lods
mov
arpl
xchg
mov
out
mov
data16
mov
imul
xor
lds
pop
jo
test
mov
jno
push
adc
mov
push
cmp
scas
xchg
cmp
push
sbbb
je
mov
pushf
test
bound
fcmove
loope
aas
cli
xchg
xor
stos
xchg
or
pop
test
or
lret
mov
dec
outsl
xor
xchg
fistl
pop
add
xor
cs
add
je
jmp
mov
in
push
mov
mov
or
jle
hlt
addr16
inc
pop
roll
aas
nop
test
pop
iret
pop
fdivrl
inc
sub
cmpl
rorb
cs
lods
arpl
xchg
adc
fistps
movsl
mov
cmp
sbb
jle
fisttpll
lahf
pop
int3
aas
jns
lea
adc
inc
enter
daa
daa
xchg
in
scas
xchg
xchg
push
sbb
mov
xchg
cwtl
push
pushf
dec
push
and
daa
sti
add
out
rcr
cwtl
ficoml
gs
adc
mov
jne
push
add
and
fs
pop
xor
mov
mov
adc
pop
in
pop
mov
outsb
daa
ds
pop
sarb
imul
jmp
mov
and
cmp
pop
aas
jp
jl
xor
xchg
xchg
cmc
xor
icebp
jmp
push
fwait
cld
int3
call
xchg
xchg
inc
mov
and
cs
push
fsubl
hlt
sbb
les
and
xchg
repnz
or
mov
inc
out
iret
cmpsb
lods
dec
inc
outsl
mov
dec
outsb
cli
dec
jl
stos
mov
mov
dec
js
jmp
push
xor
testb
shrl
cmpsl
adc
inc
sahf
lods
scas
lods
test
push
addb
scas
mov
dec
xchg
dec
pop
fcompl
xchg
adc
outsb
sbb
xor
fcmovbe
fmulp
sub
ljmp
insb
enter
push
roll
lret
cmp
lods
push
pop
lret
jb
dec
mov
fcoml
inc
inc
in
repz
lret
loope
adcl
dec
bound
iret
lahf
cmp
mov
lods
mov
fidivrl
xchg
or
adc
lcall
mov
ficomps
dec
xor
or
or
xchg
add
adc
xor
insb
in
mov
jl
test
pop
xchg
lret
movsl
adc
int3
add
cmp
mov
xlat
mov
mov
in
push
sti
pop
push
xchg
xor
push
adc
bnd
sub
shr
lods
or
mov
mov
sahf
inc
xchg
or
call
scas
enter
jp
or
mov
jae
lret
mov
iret
jmp
je
insb
sbb
pop
inc
dec
pop
ss
popf
cmpb
add
pop
push
pop
sub
mov
pop
adc
push
loopne
into
jmp
into
movsl
into
shl
sti
imul
mov
cmc
fldcw
pop
incl
pop
test
xchg
lods
scas
mov
mov
dec
jl
sbb
mov
test
and
or
sbb
or
sbb
scas
bound
mov
in
aad
adc
mov
fdivr
leave
mov
adc
and
ret
stos
daa
dec
aad
jb
and
lods
mov
rcr
sbb
fxch
mov
adc
jo
cli
inc
testb
push
lds
int3
and
fistpll
rcrb
adc
lret
xor
gs
add
inc
dec
rorb
insb
std
jae
popf
dec
gs
and
jbe
xlat
pop
inc
test
enter
lahf
rclb
push
shrl
shll
fwait
aam
inc
lock
cmp
dec
push
loope
imul
sbbl
jg
fwait
cmp
cmp
cmpb
fwait
jmp
lret
pop
push
mov
sub
mov
add
inc
nop
jns
sub
nop
jmp
ljmp
cmp
mov
les
xchg
lahf
ja
lahf
ja
enter
leave
mov
insb
or
test
icebp
adc
xor
pop
dec
loope,pt
or
inc
add
shll
lcall
shrl
inc
inc
pop
push
leave
scas
or
mov
notl
jno
mov
inc
and
mov
mov
inc
cmpb
cmp
sti
sbb
pop
mov
inc
lea
cmpsl
imul
add
fidivs
or
roll
mov
es
cmp
xchg
cmp
out
mov
aaa
jl
mov
sub
mov
pop
outsl
pushf
enter
cmpsb
xchg
adc
in
and
inc
mov
jae
jbe
dec
sahf
test
addb
mov
jp
fimull
sbb
sahf
lahf
cmp
pop
inc
mov
mov
fcoms
push
popf
fdiv
add
fbld
dec
mov
push
jo
xchg
push
sub
cmp
lret
test
mov
inc
rcl
repz
pusha
arpl
popf
jge
fidivs
add
fcmovnb
movsl
adc
xchg
mov
adc
faddp
enter
movsb
push
fcoml
xor
mov
inc
cmp
inc
lock
out
imul
sarb
ds
out
cld
daa
negb
rep
xchg
or
or
sar
dec
stc
lds
scas
fadd
loopne
or
push
xor
or
mov
test
jle
xchg
push
popf
incl
adc
mov
lret
aas
cltd
enter
cmp
loopne
dec
jmp
and
mov
mov
lods
ret
cwtl
jp
sub
inc
decl
fnstenv
repz
jnp
push
mov
pop
dec
push
call
add
jno
inc
ret
add
sub
nop
mov
mov
adc
jg
sub
int
lock
iret
xchg
movsb
or
inc
rcrl
fsubs
out
sub
mov
push
xor
jecxz
and
dec
shll
fwait
sub
mov
mov
inc
jmp
popa
push
rcrb
fsts
mov
aad
fimull
jecxz
das
fs
repnz
sti
loope
xor
mov
xchg
adc
sbb
nop
pusha
add
mov
and
lock
lods
out
sbb
add
xchg
inc
dec
loop
and
inc
sbb
in
adc
subl
or
xchg
cmpsl
sbb
test
cwtl
and
sub
cmpsb
mov
or
push
cmpsb
xchg
mov
xchg
mov
pusha
mov
mov
jno
pop
pop
sub
jnp
inc
or
cmp
sarb
dec
fisubrl
ja
inc
xchg
repnz
popf
fmull
sub
clc
cmpsb
mov
orb
sbb
outsb
test
jnp
call
je
cmp
cld
mov
repz
dec
loopne
sahf
adc
mov
and
mov
fldt
rcll
int3
xor
inc
sub
jmp
xchg
sbb
stos
mov
lea
xchg
loopne
mov
stos
mov
hlt
dec
fldcw
aas
xor
or
loope
fwait
sub
cwtl
in
cmc
and
or
dec
mov
outsw
xor
jnp
mov
adc
stos
enter
add
in
push
cmp
pushf
pop
cmc
jl
mov
shll
xor
lods
or
add
ret
dec
jo
inc
je
xor
pop
in
mov
mov
dec
inc
jg
in
push
sbb
push
scas
xchg
pop
movsl
shrl
bound
mov
xchg
mov
rcrl
cmp
enter
cmc
push
addr16
sub
cmp
fxch
push
pop
dec
sub
repnz
adc
les
faddl
mov
mov
fimull
pop
fwait
por
inc
cs
pushf
push
subl
sbb
pop
fnstcw
mov
inc
bound
pop
pop
lret
pushl
ficomps
enter
jl
rorb
in
inc
inc
jmp
hlt
sahf
lea
push
sub
mov
cmpsl
outsl
lods
icebp
xchg
sub
xor
push
push
movsl
orb
or
les
push
sub
mov
cmp
cmp
fdivl
xchg
pop
cmp
cmp
push
push
shlb
cmp
or
or
cld
pop
ja
frstor
ss
jne
pop
lods
bound
pusha
cmp
repz
jb
adc
jecxz
fwait
scas
loope
lods
mov
mov
out
addr16
lret
scas
fucom
scas
xchg
mov
test
mov
xchg
movsb
scas
nop
cmp
pop
push
cmp
dec
push
mov
mov
sub
in
push
dec
inc
xchg
test
stos
fiaddl
scas
jmp
xchg
mov
fisubrl
mov
leave
cwtl
aam
dec
out
and
or
push
sti
and
aad
pop
xchg
add
mov
sbb
pop
mov
sbb
lods
adc
cmp
and
sub
or
cmpl
jo
ficoms
push
or
mov
lret
sub
adcl
lret
insb
jns
in
lret
lods
imul
js
jae
sub
jmp
pusha
mov
sbb
jnp
sub
in
daa
jns
dec
imul
jmp
sti
gs
xchg
mov
jne
sahf
pop
mov
add
sti
sbb
outsb
sbb
fisttpl
clc
or
cmpsb
aas
gs
jge
push
mov
xor
cmp
mov
dec
inc
jle
jg
fucomp
lods
xor
int3
testb
arpl
and
pop
pop
loope
test
fcoml
mov
lds
xchg
jge
xor
in
pop
add
pushf
inc
mov
push
cs
jnp
adc
stos
jmp
jnp
test
xchg
addr16
or
xor
sbb
sbb
sbb
inc
and
mov
mov
inc
incb
sahf
add
and
sub
cmpsl
mov
cwtl
sub
cmp
add
les
cmpsl
imul
mov
les
jne
out
mov
add
push
mov
das
das
filds
cmp
inc
test
and
fwait
pushf
ret
cltd
jmp
pushf
clc
cmpsb
add
bound
push
mov
dec
inc
aas
fwait
pop
shl
clc
fisttpll
adc
jnp
inc
sti
xchg
jnp
sahf
mov
mov
mov
and
push
add
fstps
jae
inc
test
add
js
out
popw
dec
add
cmp
push
fwait
mov
or
daa
jecxz
cmpsl
outsl
imul
sahf
cs
lock
mov
cmpl
mov
jb
movups
jne
mov
sub
lods
aam
cli
test
push
insb
cwtl
cmc
hlt
cmc
enter
mov
lcall
ss
rclb
jno
sbb
mov
jnp
mov
sbb
sub
enter
js
je
mov
imul
xchg
sub
cmp
mov
inc
mov
push
cmc
jl
mov
sbb
jle
cmc
sahf
dec
pop
mov
lret
sub
adc
dec
cs
aad
mov
repz
dec
inc
addr16
push
add
cmpsl
xor
fwait
mull
loope
lcall
or
and
enter
cltd
dec
bound
pushf
cmpsb
pop
inc
adc
mov
movsb
not
dec
test
lret
dec
repnz
fucomp
push
iret
fcomp
stos
inc
jg
mov
lods
scas
dec
dec
ret
mov
pop
jg
adc
jge
loope
call
xchg
jg
or
mov
mov
neg
sti
or
dec
inc
xchg
mov
cmc
xchg
xor
push
inc
scas
and
pop
lods
inc
adc
lock
mov
pushf
sti
mov
jge
jg
adc
cmc
andb
ds
enter
jbe
pop
push
outsb
push
ret
adc
cltd
dec
addr16
xor
mov
inc
cvtps2pd
mov
pop
ret
push
into
pop
xchg
dec
test
ret
add
xor
sbb
in
dec
repnz
pop
jnp
or
xchg
mov
sbb
fldt
test
pop
jno
mov
push
pop
fldcw
pusha
test
or
push
jmp
out
adc
cmp
dec
xchg
shrl
fildll
rcrl
rcrb
call
push
jp
inc
ljmp
movl
push
xchg
add
xchg
je
clc
bound
add
push
push
xlat
iret
mov
pop
ss
fucom
cmp
sarl
push
loopne
mov
mov
jns
and
mov
enter
lock
push
cmpsl
sbb
and
add
mov
std
add
andl
adcl
sbb
subb
outsl
xor
test
lods
pop
cmp
movb
nop
jle
sub
jl
fbstp
rclb
adc
or
push
cmpsl
js
add
inc
js
test
mov
mov
pop
inc
ljmp
imul
adc
mov
sbb
dec
ss
sarb
nop
push
push
push
lock
push
and
xor
lods
cmp
movsb
fstpt
and
jo
or
mov
aad
jl
dec
dec
nop
hlt
cs
cwtl
call
sub
ds
stos
add
icebp
daa
imul
pusha
test
jnp
dec
cmp
sbb
mov
fmull
jmp
mov
mov
mov
clc
mov
add
inc
mov
or
sub
push
addr16
loopne
leave
pop
pusha
dec
mov
xchg
dec
dec
ret
movsb
sahf
rorb
or
cld
and
jbe
pop
cwtl
and
lods
movsb
lods
mov
pop
fimuls
xor
shrb
das
andl
ljmp
lods
sbbl
cmp
cmpl
dec
out
aam
mov
xchg
dec
adc
cmc
mov
cs
fistpl
pop
or
out
pop
jns
adc
loop
inc
sbb
add
xchg
inc
inc
test
cmp
mov
stos
leave
filds
stc
loopne
or
icebp
sbb
addl
into
jns
popa
bound
cmp
sub
or
psrad
jmp
dec
sub
cwtl
dec
movsl
xchg
xor
ret
mov
push
in
push
jle
adcl
adc
aas
add
hlt
inc
inc
add
ret
mov
jae
iret
and
sbb
cmp
sub
cltd
jnp
cmp
lret
dec
nop
mov
dec
or
stos
fisttpll
insb
in
lahf
and
mov
sub
jge
outsl
mov
aam
outsb
test
and
outsb
icebp
or
pop
cmp
jecxz
outsb
rorl
xor
dec
inc
js
imul
test
das
or
mov
gs
dec
aas
shll
xchg
jg
cwtl
fmuls
in
jnp
jmp
insb
sar
mov
sub
daa
jbe
rorb
ret
insl
mov
pop
pop
enter
inc
lock
in
xor
test
test
mov
addr16
jecxz
enter
or
int3
mov
call
subb
push
mov
mov
jg
scas
pop
stos
call
jge
das
int3
fsubrl
mov
lods
test
fs
xchg
add
dec
mov
daa
cmp
push
lods
sahf
jg
adc
jg
jmp
jle
dec
sarl
aaa
mov
fcomps
mov
mov
mov
inc
xchg
sub
mov
dec
sub
rcrb
pop
fbstp
dec
lds
jp
loope
and
xchg
and
icebp
jg
test
sti
movsl
sbb
loop
sub
adc
and
repnz
jge
and
stos
inc
xchg
inc
stos
sarl
ljmp
mov
pop
aad
sub
mov
sbb
cmpsl
inc
xchg
repz
dec
mov
ds
cli
nop
add
insl
gs
loope
push
push
int3
jns
push
jmp
into
cmp
mov
dec
mov
mov
sbb
in
add
lods
adc
mov
scas
add
fdivrs
xlat
mov
mov
mov
jae
loopne
das
icebp
inc
aad
jae
mov
add
add
sbb
cltd
leave
insl
push
test
xchg
inc
nop
cli
mov
and
cmpl
sbb
inc
fs
test
lea
aas
jge
or
inc
cmp
pop
inc
dec
and
jmp
xchg
ss
stos
sbb
daa
ffreep
sahf
xlat
add
mov
mov
loopne
pop
js
inc
jbe
cmc
push
shlb
or
pop
call
or
shl
adc
pop
popa
sub
mov
sarl
and
cltd
adc
pop
pop
xchg
in
pop
js
sbb
mov
xor
mov
cmp
in
dec
hlt
ret
and
jnp
data16
xchg
push
nop
mov
lret
mov
in
sub
add
icebp
fstpt
lods
scas
fs
mov
leave
sbb
dec
loop
jo
scas
sbb
test
pusha
scas
loope
enterw
or
out
jae
push
inc
inc
dec
int
jg
ja
gs
fwait
sub
cmpl
mov
dec
mov
add
rcll
inc
lret
lock
adc
idivb
dec
ret
inc
scas
cmp
mov
aas
sbb
add
sbb
cmp
xchg
cmp
das
sbb
out
xchg
pop
cmp
and
add
cmp
mov
pop
mov
sti
imul
das
mov
mov
mov
mov
xchg
fistpl
imul
lea
in
dec
or
into
jecxz
inc
jmp
and
pop
mov
dec
dec
test
sti
xchg
leave
pop
ja
push
inc
mov
mov
in
adc
ds
leave
sbbb
fistpl
popa
jge
inc
pop
jb
test
int3
mov
sbbb
and
push
mov
test
cld
lret
pop
mov
dec
inc
cmp
sbbl
sub
aas
jae
std
icebp
sub
adc
pop
rolb
sub
lret
je
es
adc
add
nop
mov
mov
push
mov
sub
stos
shll
xchg
pushf
repnz
movsb
xchg
movsb
xchg
xchg
fisubrs
sbb
loope
sub
dec
or
mov
inc
push
int3
push
cmp
rcrb
mov
inc
inc
daa
and
cltd
and
aaa
jge,pt
mov
cmpsl
inc
and
hlt
push
and
mov
dec
sbb
clc
pop
sbb
cwtl
pop
push
mov
dec
inc
mov
mov
or
les
mov
mov
sub
or
or
in
add
inc
mov
dec
cmp
stos
mov
rcll
push
dec
loope
jns
test
sti
divl
leave
pop
out
inc
loop
jno
imul
push
leave
dec
shrb
xor
js
adc
jl
test
repnz
mov
sarl
push
shl
out
jo
js
movsb
out
and
repz
out
cmp
sahf
jo
ficoml
jbe
fsub
cmp
mov
push
pop
rclb
das
jg
mov
cmp
lcall
mov
sbb
fnstsw
sbb
or
push
filds
sub
inc
imul
movsl
aas
roll
cli
add
inc
and
xchg
push
sbb
push
int
inc
xor
pop
pop
insl
mov
jno
enter
lret
lahf
loopne
jmp
insl
add
jle
pushf
in
insl
mov
push
jl
push
pop
popf
push
jle
fcomip
outsl
fwait
pop
push
shlb
inc
jle
andl
sahf
pop
pop
push
cmp
pushf
stos
cltd
jbe
xor
cli
dec
enter
lea
inc
dec
iret
mov
inc
pop
in
lea
mov
hlt
mov
pop
sbb
sub
adc
inc
mov
or
cmp
dec
in
jne
into
pop
scas
jmp
mov
pop
or
leave
loopne
pop
xor
sarl
jg
lret
fmull
cmp
frstor
xchg
mov
xor
out
mov
pop
leave
sarl
into
push
outsb
push
int3
cmp
pushf
pop
repz
jg
movsl
bound
pusha
mov
xchg
xchg
push
sysexit
stc
mov
out
adc
xor
mov
sub
rclb
les
and
test
negl
sarb
jns
sarb
pop
sub
sub
mov
jnp
inc
mov
mov
cmp
test
cli
js
mov
jg
sub
jp
out
mov
aas
cmp
sbb
sub
inc
shll
lock
imul
cld
push
mov
jne
rcll
xor
jle
mov
xchg
sbb
sar
add
sbb
dec
movsl
sub
jl
jno
icebp
call
cwtl
popa
push
inc
imul
popf
inc
rolb
nop
notl
loop
xor
pop
xchg
movsl
add
leave
adc
in
or
sub
dec
cs
clc
inc
jmp
xlat
mov
loop
enter
inc
sub
add
pop
hlt
jae
xchg
mov
enter
mov
add
dec
jae
push
and
and
mov
jl
pusha
arpl
sub
pop
ficoms
jmp
pushf
pop
inc
push
stos
shl
andb
mov
sub
imul
out
in
pshufw
stos
sti
popa
push
rorb
fstpl
stos
jnp
shrl
test
sbb
xor
insb
sub
dec
test
xchg
sub
cli
jae
fstpt
dec
je
mov
mov
cmp
or
mov
cmp
xchg
adc
mov
cmp
nop
enter
push
or
movsb
push
sbb
loop
cmpl
je
into
pushf
into
ljmp
jge
cmpb
ljmp
out
cwtl
sbb
adc
mov
dec
or
es
or
mov
hlt
fsubs
aam
push
dec
jns
addb
mov
fimull
hlt
push
test
sbb
push
cmp
mov
cmp
push
ficoms
mov
shl
out
push
fs
mov
mov
filds
mov
jne
inc
decl
dec
scas
adc
cmp
sahf
jo
loop
icebp
push
jge
dec
sarb
add
pop
adc
cmp
xchg
idivb
mov
adc
xchg
xor
dec
xchg
push
mov
ret
cli
push
push
insb
inc
jbe
mov
mov
out
sub
push
jg
out
add
pop
rolb
sahf
fptan
sbb
cmp
jg
sar
int3
and
mov
enter
rcrl
xchg
shlb
fimuls
loop
and
inc
lret
xchg
in
and
nop
inc
jle
mov
stc
js
xchg
inc
pushf
cwtl
pop
inc
dec
mov
sub
ror
cmp
dec
cmp
add
cli
mov
adc
inc
ret
addr16
mov
and
xor
adc
mov
inc
ljmp
xchg
pushf
sub
test
xchg
pop
leave
sub
jecxz
jmp
nop
cmp
push
mov
adc
leave
mov
mov
and
test
mov
lcall
lret
fwait
mov
inc
hlt
ret
pop
fiadds
stc
aam
push
rcrb
scas
inc
sbb
xor
inc
std
shrb
mov
es
ret
lcall
sbb
ficomps
fldl2e
mov
inc
sbb
movsl
aas
xchg
addr16
rcr
push
enter
pop
lods
adc
mov
mov
inc
dec
push
mov
inc
jno
xor
xchg
adc
dec
and
xchg
push
jmp
invd
fidivs
cmp
std
and
mov
jb
aam
dec
stos
inc
in
enter
popa
stc
shll
mov
lret
call
add
mov
mov
xor
lahf
adc
insl
shll
mov
mov
cmpsl
sarl
cmp
in
inc
push
outsl
xchg
dec
std
fistps
sbb
xchg
pop
mov
cltd
les
mov
xchg
cmpsl
fdivrs
nop
sbbl
fists
pushf
jge
frstor
mov
movsb
jge
push
lods
icebp
or
pop
or
jle
pusha
jno
xor
in
jl
xor
xor
call
push
jle
jle
xor
loopne
enter
ficoms
xorl
mov
sbb
sbb
add
fadds
dec
inc
mov
jecxz
cmpsl
cltd
xchg
mov
jb
fwait
mov
inc
mov
pop
push
push
out
fistl
sbb
lea
or
cmp
mov
imul
lods
addb
testb
ja
or
cmp
lock
jno
aaa
ss
jge
cmp
cmp
pop
adcl
inc
inc
add
cltd
add
leave
xchg
jbe
scas
lahf
and
pusha
enter
and
stos
mov
or
jge
es
mov
or
bound
inc
je
fmul
pop
lahf
movsb
mov
lods
mov
mov
imul
mov
fildl
jbe
lods
mov
loope
inc
mov
adc
test
push
cmp
fldenv
sahf
gs
std
iret
pop
leave
movsl
pop
pop
cmpsl
dec
xchg
or
push
adc
pop
jp
jp
aaa
popf
leave
call
cmp
xor
xor
aas
loope
sbb
cmp
or
and
cld
test
and
mov
test
mov
adc
lcall
jb
xchg
in
dec
pop
into
rol
adc
popf
xchg
mov
push
jl
shrl
cmpsb
std
add
aam
adc
int3
sub
and
ret
jle
je
and
inc
movsb
xchg
add
ds
cmp
adc
imul
clc
je
mov
inc
xor
enter
mov
cli
sahf
repz
imul
lcall
aas
mov
sbb
jne
or
sbb
mov
in
in
mull
or
popf
fistpll
and
fsubrl
pop
and
sub
adcb
add
mov
push
ss
cmp
push
aad
sub
xchg
popa
call
jne
das
aaa
jns
lret
rcrl
push
aad
data16
sarl
dec
and
in
sbb
add
sbb
jno
jbe
fisttpll
mov
add
dec
add
jle
in
mov
jno
subb
mov
in
sub
mov
sbb
xlat
mov
and
push
push
fldt
cmpb
aaa
test
mov
inc
cltd
jg
lahf
mov
popf
lret
fimull
outsb
add
sbb
aam
das
enter
push
mov
mov
mov
pop
jns
inc
or
scas
out
sbb
xor
cmp
xchg
inc
mov
test
in
add
jl
or
add
jecxz
rorl
mov
mov
dec
mov
pop
mov
nop
add
dec
xchg
test
movsl
cmp
adc
in
jns
loop
mov
lcall
inc
add
push
pop
jo
ret
or
sbb
incl
xchg
imul
shll
xor
mov
loope
xor
and
dec
mov
insb
pop
movsb
mov
cmc
and
call
stos
fs
mov
outsb
bound
nop
pop
rolb
cs
pop
jge
push
mov
push
add
rclb
jmp
jns
fildll
mov
push
cld
push
dec
mov
mov
stc
add
lea
cmp
xchg
int3
sub
inc
pushf
cmp
cmp
push
or
mov
aam
cmp
test
pop
dec
inc
mov
jae
cmp
out
inc
jne
clc
mov
lods
movsb
sbb
xchg
or
into
loopne
ret
sub
jmp
lods
test
jnp
add
mov
mov
sahf
scas
ss
or
in
fsubs
mov
cmp
mov
mov
sbb
xor
repz
pop
add
inc
jle
and
arpl
cmp
jl
jg
or
mov
push
push
ror
sub
cld
sbb
mov
inc
pushf
pop
sub
mov
pusha
or
loop
and
cmp
mov
sbb
or
jae
bound
out
lcall
push
mov
sub
or
in
inc
xchg
xchg
dec
mov
lea
repz
je
lahf
inc
aas
lods
push
sti
add
les
imul
in
rcll
cmp
popa
test
jne,pn
sub
dec
lret
adc
enter
fs
mov
enter
std
mov
push
aaa
mov
xchg
xor
mov
jae
lods
mov
sub
and
or
loope
add
hlt
es
add
fnsave
pushf
arpl
push
xchg
enter
jbe
js
mov
inc
push
jge
dec
cwtl
dec
iret
rcrb
enter
int
aas
xchg
ficoms
pushf
xchg
hlt
pop
aas
ret
pop
or
inc
lcall
cld
and
repz
jno
push
lahf
mov
or
mov
push
mov
nop
sub
cli
pop
add
jne
aaa
jns
leave
aad
gs
inc
inc
in
dec
xchg
ret
aas
flds
inc
jl
cmp
into
popf
fcoml
imul
call
inc
inc
or
popf
xlat
push
lret
add
repnz
xchg
ret
cwtl
push
add
sarl
fadds
int3
call
inc
xchg
lea
xchg
jnp
or
xchg
cmc
add
adc
out
mov
pop
pop
imul
in
out
xchg
dec
cmpsl
add
xchg
mov
insl
pushf
mov
pop
ret
sbb
mov
add
push
jae
pop
mov
sarb
xchg
fwait
mov
out
add
xchg
nopl
scas
pop
cld
xlat
pop
aaa
pop
popf
mov
out
push
js
xlat
flds
jg
dec
xorl
jle
cmp
cs
and
pop
and
outsl
in
movsl
imul
xchg
cmpsb
pop
adc
addb
shlb
in
sub
jl
mov
gs
or
inc
push
ja
mov
push
test
dec
adc
insl
or
in
aas
push
jne
pop
insb
and
dec
pop
cmc
push
mov
pop
or
stc
dec
xchg
je
stc
pop
adc
daa
fidivrl
iret
xor
xor
mov
xchg
test
mov
lds
mov
mov
xchg
movsb
cmp
mov
nop
pop
push
pop
sub
push
xchg
cmp
jg
xor
insl
mov
loopne
mov
in
orb
mov
fstl
stos
hlt
push
hlt
int3
pand
add
cmp
push
int
loopne
add
mov
mov
xchg
fildl
jae
dec
mov
les
lret
pusha
push
and
jns
mov
mov
add
mov
clc
lock
push
bound
pop
ret
repz
mov
push
add
inc
and
jecxz
fcomip
mov
psubsb
xchg
in
int3
fwait
add
test
int3
pop
fnstenv
ret
aad
pop
js
pop
sub
cmp
pushl
or
pop
adc
push
loopne
and
cld
gs
push
hlt
pop
push
push
dec
fisubrl
in
pop
inc
mov
push
and
je
jae
ret
addr16
mov
jo
add
scas
leave
pop
push
fmull
pop
outsl
movsb
lods
add
imul
insl
pop
or
dec
dec
xchg
or
mov
pop
add
call
enter
push
cli
mov
fwait
inc
hlt
sbb
pop
mov
and
mov
sub
or
inc
push
cmp
push
mov
fs
pop
mov
repnz
pop
icebp
jmp
cs
in
adc
sbb
mov
mov
mov
mov
nop
push
js
iret
mov
dec
lret
xor
push
cmp
cmp
stos
stos
filds
aam
sub
sub
push
pusha
push
cmpsl
int3
dec
ficompl
pop
push
rcrl
adc
cmp
xchg
sbb
lcall
jle
sbb
inc
jp
mov
inc
push
and
loope
add
mov
mov
xor
fidivrl
xor
inc
lret
mov
sbb
xchg
ja
add
lret
mov
arpl
cmp
add
push
or
adcb
dec
je
mov
int3
daa
pusha
cld
cmc
adcl
xchg
ja
fcomps
mov
xchg
outsl
jmp
daa
xor
and
mov
imul
add
int3
out
sti
lahf
inc
mov
sub
mov
xchg
mov
popf
cwtl
aaa
mov
fcoml
lods
gs
into
imul
add
sbb
pop
call
pop
mov
push
fistps
enter
xorl
in
jbe
outsl
shlb
aad
pop
xchg
pop
scas
xchg
daa
jmp
aam
mov
dec
std
ja
cwtl
cmp
sti
test
or
adc
mov
adc
lahf
cmpsl
mov
add
stos
and
mov
xor
lret
push
lret
xor
cltd
cmp
inc
stos
in
pop
push
lret
push
ljmp
jg
adc
cmpsl
pop
stos
push
test
sub
jno
pop
test
ds
outsl
dec
jno
xor
push
stos
jl
sub
lods
pop
push
push
jecxz
test
adc
popf
std
sub
lret
or
and
test
popa
imul
aam
mov
xchg
jo
or
push
repnz
xor
aaa
repz
movq
adc
jb
dec
adc
inc
or
aaa
sti
cmp
jmp
pop
cmp
push
and
rol
cwtl
leave
jnp
sarb
int
popa
add
lea
dec
jle
icebp
jns
ret
mov
mov
lret
jb
imul
xor
xchg
fcmove
mov
xchg
repnz
inc
loopne
int
loop
insl
or
xlat
mov
pop
rorl
cld
mov
xchg
add
mov
xchg
inc
cmp
push
das
cmp
movsl
jp
add
cmp
inc
lret
aaa
idivb
pop
push
adc
cmpsb
fistpl
inc
out
mov
ret
popf
inc
mov
mov
leave
ror
ret
mov
sahf
bnd
scas
xor
aas
repz
or
fsubl
scas
sbb
push
adc
push
xchg
andl
cmp
cmp
add
push
pop
in
inc
jnp
fidivs
lahf
fisubl
orb
fldl
mov
or
loopne
push
ljmp
outsb
call
add
aad
lcall
rol
cmp
pusha
mov
jo
scas
xchg
sbb
xchg
pop
adc
mov
clc
push
dec
pop
mov
testl
cld
sbb
es
mov
sbb
mov
outsb
lahf
movsl
or
int3
call
mulb
nop
mov
fwait
push
leave
pushf
repnz
and
test
pusha
movsl
mov
or
negl
push
fwait
xchg
inc
arpl
and
ror
bsr
pop
dec
in
mov
and
sub
out
cmc
and
push
fisubrs
push
test
movsl
jmp
mov
fsubs
addr16
dec
push
sub
mov
fsubrs
addr16
dec
call
ljmp
stos
cld
cmp
nop
int3
cmp
jp
push
aam
fldcw
fisttpl
xor
aas
cmp
icebp
fildll
nop
jg
lret
mov
mov
sar
pop
dec
movsb
and
add
rorb
sti
out
and
push
pop
jmp
clc
push
sub
jbe
mov
xchg
pop
push
test
lcall
jns
and
cmp
or
add
xor
sbb
loope
push
sarl
cmp
scas
icebp
hlt
xor
cmp
sub
adc
stc
and
add
pop
jl
sbb
ret
mov
loop
dec
mov
sub
add
cmp
push
sbb
lahf
dec
jge
mov
or
xchg
test
cmp
loope
jbe
loopne
arpl
rorb
jge
es
not
xchg
or
xor
aas
mov
rcr
xchg
jl
orb
mov
addr16
mov
push
mov
mov
outsl
jge
cmpsl
dec
xchg
jb
pop
add
and
imulb
mov
mov
test
push
cmpsb
jle
aam
dec
pop
pop
and
cmc
xor
cwtl
push
negl
rorl
retw
ret
add
fwait
cmpsl
and
call
fs
cltd
mov
lahf
xchg
mov
pusha
jae
sti
sub
cmp
jecxz
jmp
fdivp
jns
aaa
or
push
cmp
movsb
repz
cmp
push
jae
dec
sbb
sbb
cmpsl
cltd
out
out
in
mov
mov
cmp
and
push
mov
dec
pushf
dec
jmp
call
in
dec
cmp
pop
int3
mov
pop
sub
sub
sti
stc
in
rcll
outsb
int
pop
add
pop
lea
sbb
or
fidivrl
loopne
mov
push
mov
jae
dec
in
push
ss
cld
pop
dec
aas
data16
movsb
cli
cmp
ja
and
sub
aam
mov
es
xchg
xor
rcl
call
rcl
je
shl
adc
cmp
test
mov
cmp
sbb
cmp
imul
xor
call
sarl
push
mov
inc
int
or
dec
or
push
icebp
mov
sahf
mov
pushf
and
imul
shlb
fists
mov
shll
pop
int
xor
dec
nop
xor
aad
and
sub
xor
enter
fsts
or
fwait
jle
push
ja
out
aad
subb
ja
sbb
xor
pop
or
xor
cmp
and
xchg
jns
frstor
clc
loope
dec
inc
insl
xchg
subl
xchg
fdivs
std
fsubrl
xchg
shll
inc
mov
xchg
mov
lret
mov
adc
imul
pop
pop
mov
sub
js
cmp
orl
bound
int3
pop
pop
js
push
addr16
mull
inc
dec
ss
ret
or
outsb
push
pop
or
stos
cmp
fs
and
fcmovnu
sbb
sahf
mov
lret
into
and
stos
mov
int
jbe
adc
ret
into
or
push
aam
dec
push
jle
adc
jg
cld
mov
mov
out
ja
in
xlat
inc
sub
js
and
paddusw
popa
sub
add
test
ret
jle
adc
xor
pop
cmp
mov
inc
lock
cmpsl
setno
and
mov
or
pop
test
in
icebp
jae
stc
lock
mov
gs
mov
cmp
push
lea
fildl
mov
cli
xchg
xor
incb
sahf
lods
xchg
mov
jns
push
subl
sbb
dec
jecxz
mov
and
iret
test
cmc
pop
adcl
roll
xlat
bound
or
or
pop
xchg
xchg
cmp
fcmove
bound
aam
mov
in
dec
cmpsl
cmpb
mov
pop
pop
enter
rcrb
jo
cltd
je
mov
pop
adc
xchg
mov
jnp
jmp
imul
mov
mov
testl
scas
movsb
rclb
lret
push
mov
cmp
test
jmp
push
test
inc
dec
mov
sbb
mov
and
jno
sbb
pushf
fnstcw
inc
gs
fistps
lret
pop
outsb
leave
jb
dec
popl
sub
cmpsl
inc
jae
add
fbld
jge
negl
movsl
dec
pop
xchg
push
mov
xchg
loop
jge
leave
cmp
enter
push
mov
loope
orb
orl
push
lret
jg
ds
insb
aas
add
mov
mov
dec
push
stos
xor
loope
add
push
es
add
in
dec
pop
out
dec
xchg
cmp
add
inc
mov
and
jbe
fidivrs
ja
mov
jo
insb
mov
xor
mov
pop
iret
xchg
mov
sub
jg
mov
lret
and
frndint
dec
inc
dec
mov
mov
lods
inc
sarl
sbb
mov
add
fcmovnbe
fcoml
cmp
fiaddl
test
jle
in
pop
sbb
mov
pop
push
mov
lcall
ljmp
dec
test
sbb
loope
sbb
test
leave
sbb
and
cmp
push
and
in
mov
inc
push
sbb
jbe
xchg
cmp
repnz
lea
scas
repz
test
test
insb
test
idivb
sub
pop
aam
push
jmp
sbb
sti
lret
lods
cmp
or
sub
lock
adc
and
dec
out
out
paddb
stc
sbb
ss
sarl
jg
clc
js
aas
cmc
scas
icebp
sub
addr16
jno
cmp
mov
adc
adc
mov
fistpll
sbb
xor
jo
hlt
push
jl
push
les
mov
aaa
lahf
incb
mov
js
cmpsl
sub
testb
fldenv
pop
lahf
pop
xorl
lret
jnp
mov
push
iret
fst
stos
push
and
or
aaa
or
add
fsubr
jnp
dec
lcall
jg
jnp
or
mov
mov
outsb
or
gs
fisubrs
out
inc
sarl
push
mov
inc
cmp
or
scas
aas
inc
jge
add
call
xchg
mov
inc
loop
or
push
adc
adc
popa
hlt
popa
test
filds
les
push
ret
and
sub
outsb
testl
inc
jg
subb
push
lds
xchg
or
inc
std
ds
inc
test
pop
arpl
push
xchg
das
mov
test
jle
dec
scas
dec
nop
pushf
and
adcl
inc
sbb
cmpsb
test
imul
jp
iret
out
ret
cltd
add
leave
dec
inc
dec
and
mov
cmp
movsb
cwtl
push
stos
call
add
inc
mov
clc
sub
cmpsl
xchg
ret
jge
cmp
nop
adc
decl
or
or
push
cltd
and
adc
sub
xchg
xchg
repnz
dec
sbbb
sub
lcall
aaa
mov
shlb
sti
inc
push
test
adc
rorb
pop
nop
cmc
jo,pt
xchg
fnstenv
inc
lret
dec
adc
out
xchg
test
mov
cmp
push
cmp
mov
ror
std
mov
jno
add
and
repz
loope
mov
pop
clc
adcb
cwtl
jno
aad
sub
cmp
dec
mov
dec
loop
hlt
sbb
inc
lret
les
cli
addl
xor
fistl
add
aad
xchg
xchg
clc
testl
xor
adc
or
mov
inc
mov
mov
dec
cmp
add
out
addl
rcl
xor
and
cmp
ficompl
out
das
loope
sub
int
fidivrs
ja
rolb
dec
jge
mov
xchg
sub
fisubrl
sbb
sbb
loop
out
xor
fcomp
pop
inc
xor
mov
in
mov
imul
jecxz
sub
movsl
int3
pop
and
enter
fimull
cmpsb
ret
mov
mov
dec
push
fwait
xchg
mov
fimuls
out
cmpsl
inc
jns
fldcw
or
push
cmp
adc
push
jp
cld
cmp
jg
cmp
lret
fs
fists
mov
sti
sub
pop
ret
xor
pushf
push
pop
and
jecxz
movsl
mov
add
leave
inc
fistpll
or
mov
xor
lods
or
loopne
mov
mov
inc
leave
xor
add
or
mov
sub
adc
or
mov
pop
outsl
cwtl
leave
std
jns
mov
hlt
test
mov
adc
mov
in
pop
jnp
and
cltd
ret
aad
rcr
ud1
leave
pop
daa
push
loopne
or
dec
add
sahf
mov
roll
lods
lcall
arpl
mov
insb
jge
cmp
mov
pop
add
pop
and
fcomps
fsubl
fwait
mov
xor
out
aam
push
loope
fisttpll
out
mov
cmpsb
pushf
inc
mov
mov
dec
fidivrs
pop
fucomip
add
pop
mov
push
aas
lds
add
int
push
fcoms
imul
pusha
or
jmp
ret
icebp
pop
mov
inc
cmp
stos
jle
fldcw
jno
insb
pop
ds
nop
inc
test
cmp
test
adc
mov
lock
and
inc
xchg
sti
cmp
xchg
push
lods
and
sbb
shlb
inc
out
iret
cmp
ljmp
mov
pop
cwtl
sub
popa
aaa
int
lahf
inc
inc
and
out
lcall
int
mov
pop
add
fcoms
cld
jbe
inc
in
fcoml
pop
cltd
test
jecxz
js
inc
popa
push
mov
xor
push
mov
inc
inc
mov
pushf
mov
xor
sub
add
mov
lcall
nop
fistl
loope
push
imul
push
insl
xchg
or
jmp
mov
jns
xchg
mov
jns
mov
push
sub
insl
pop
pop
dec
mov
jl
mov
mov
dec
jle
xchg
insl
rcr
subb
xor
xor
sub
mov
mov
test
lret
mov
loope
cmp
pop
xchg
mov
imul
mov
repz
mov
jg
mov
push
jae
ss
nop
add
xor
jb
cmp
das
lock
cwtl
clc
inc
out
and
inc
lock
pop
mov
ret
dec
nop
mov
fs
inc
mov
into
mov
inc
pop
mov
dec
imul
aad
loope
lret
mov
mov
xchg
ret
xor
ss
call
cmp
dec
addr16
and
xor
adc
xchg
xlat
mov
js
push
lods
ds
pusha
shll
sub
fldt
push
test
std
push
ret
xchg
pop
daa
and
das
rolb
fsubrs
mov
fcoms
sarl
imul
test
mov
ss
jns
fld
jmp
icebp
jmp
and
lret
adc
adc
ldmxcsr
inc
stc
xor
lcall
push
adc
push
inc
data16
insb
mov
cld
pop
insl
lcall
pop
ret
pop
xor
and
dec
std
ret
movb
mov
dec
sub
add
inc
and
aam
inc
mov
mov
xchg
shlb
in
sahf
ss
sar
jmp
pop
jmp
mov
pop
shll
push
push
loope
pop
or
xor
enter
lcall
inc
mov
std
jno
lcall
jecxz
jmp
insb
mov
rcrb
pusha
mov
push
mov
xor
je
mov
inc
adc
dec
push
mov
mov
mov
pop
mov
jno
fsubrl
xchg
xor
ret
negb
fistpl
mov
lock
repz
dec
les
mov
mov
roll
inc
mov
sbb
aam
jp
sahf
and
es
insb
push
pop
loope
insl
push
inc
mov
cwtl
or
int
enter
add
ret
std
jp
mov
in
or
add
jge
sub
popf
adcl
loope
fcomi
cltd
inc
sqrtps
pop
cmpsl
pop
cmp
push
in
insl
ja
mov
mov
in
imul
jmp
fs
arpl
bound
mov
cli
leave
out
les
push
movsl
add
mov
jge
adc
enter
dec
push
fcmove
test
sub
out
pop
mov
inc
call
ljmp
cmp
rcll
stos
mov
pop
fptan
imul
das
lret
push
jge
ds
ret
loope
mov
call
imulb
dec
outsl
stos
mov
push
insl
xor
and
sub
in
pop
outsl
data16
inc
sarb
push
hlt
mov
add
pusha
sub
les
sub
leave
lods
jne
in
stos
xor
jmp
rcl
mov
dec
in
and
jle
notl
or
dec
mov
pop
adc
xchg
pushf
lret
adc
mov
mov
inc
lahf
mov
fcomp
int
mov
outsb
or
sub
fcompl
mov
sti
mov
dec
and
addl
std
insb
sbb
pushf
or
or
and
fldenv
inc
les
aaa
mov
dec
imul
jp
jecxz
jg
out
andl
icebp
sub
aaa
clc
xor
cmp
jg
add
int
addr16
or
or
jae
fists
insl
push
push
add
mov
pusha
iret
or
bound
jne
shlb
push
xchg
mov
sarb
inc
aaa
mov
pushf
out
xchg
inc
lock
rol
xor
outsl
adc
addl
rcl
rcr
cli
movsl
jge
mov
mov
out
cmp
sbb
rol
pop
fildll
and
aas
xchg
or
inc
ficoml
scas
adc
pop
test
adc
push
fnsave
adc
out
test
mov
sub
push
in
aaa
jae
dec
sti
sbb
inc
jns
repnz
stos
cmp
in
ja,pt
add
test
enter
leave
jl
ljmp
cmp
ret
test
cmpl
in
push
cmp
repz
or
mov
inc
mov
shll
dec
add
in
lds
push
add
mov
cld
imulb
or
cmc
mov
dec
popf
push
cmp
dec
lds
decb
and
jg
mov
pop
and
dec
sbb
mov
sahf
mov
stos
xor
lret
repnz
mov
add
enter
loop
das
xchg
jns
std
adc
inc
mov
in
jecxz
sub
fwait
and
jnp
lods
popa
dec
mov
sub
jp
pop
dec
sub
add
ret
sub
fnstcw
dec
ret
mov
xchg
cli
jmp
jbe
adc
fmul
push
lret
mov
lods
sub
sub
xchg
inc
jle
cmc
pop
push
xchg
dec
pop
ret
cmp
nop
xchg
mov
add
fistl
rcrl
int
and
faddl
xchg
xabort
xchg
or
aas
mov
scas
sub
sbb
mov
jno
flds
mov
xchg
cmp
loope
push
sub
das
xorl
xor
lahf
loopne
not
sbb
jns
xchg
cmp
movsb
iret
movsl
xchg
xchg
jg
test
daa
xchg
movsl
stos
out
sbb
aad
xchg
in
dec
xchg
aad
lods
out
and
stos
in
inc
mov
lret
mov
faddl
dec
stos
stc
jo
sub
int3
cwtl
popa
repz
xchg
stos
cltd
jo
popa
sti
jp
ret
dec
xchg
cld
xor
and
andl
xchg
sub
std
cmpsb
out
sub
pop
cmp
and
outsb
mov
and
pop
repnz
into
adc
jmp
lods
lods
and
repz
aam
jmp
mov
inc
loope
into
jge
in
loop
fsubr
cmp
jo
punpcklbw
rdmsr
ljmp
call
xchg
movl
sub
sbb
das
mov
and
dec
jns
test
mov
lret
pop
jl
in
orl
and
loop
jo
mov
or
xchg
subb
adc
xchg
in
pop
push
stos
adc
cmpsb
cmp
repz
sub
popa
negl
mov
push
and
jmp
xchg
add
jl
sahf
in
mov
rcr
xchg
fwait
in
aam
mov
addb
mov
sahf
and
adc
xor
repz
jp
xor
in
in
sub
ret
fcoml
xchg
in
daa
nop
push
dec
loopne
jbe
dec
popa
mov
fucomp
pushf
sbb
dec
inc
jns
stos
jge
aam
decb
loopne
cs
out
and
mov
loopne
in
enter
dec
and
into
xor
add
in
cmp
sbb
sbb
add
pop
fwait
les
add
into
xor
cmpsb
popf
cmp
and
repz
aad
cmp
mov
fwait
out
mov
int3
repz
push
int3
add
xchg
xchg
mov
and
cmc
push
mov
mov
lahf
sbb
repz
push
rolb
pop
jge
cltd
jbe
adc
add
mov
fmul
push
call
subl
sbb
adc
pop
sub
lock
insl
xor
add
in
xor
inc
bound
shlb
jl
cmp
adc
dec
repz
cmpb
adc
repz
ficompl
xor
mov
imul
push
add
mov
lods
xor
ljmp
inc
lcall
fnstcw
stos
jecxz
cmp
in
pop
xor
lds
or
mov
mov
mov
mov
fisttps
ds
jns
rcr
cwtl
mov
fistps
fstps
sub
mov
xchg
sub
dec
addb
loopne
sbb
hlt
les
jne
jnp
ret
cmp
or
les
nop
repnz
mov
daa
pop
jecxz
push
xchg
cli
mov
scas
pop
lahf
cld
iret
test
mov
lds
hlt
inc
mov
call
repz
sub
mov
ljmp
push
bound
pop
test
sahf
inc
filds
mov
mov
in
push
mov
and
pop
cmp
int3
push
pmaddwd
xlat
xchg
jnp
int
dec
push
sub
fs
or
push
mov
jnp
and
dec
aad
xchg
repnz
or
jbe
lret
gs
leave
push
xchg
scas
mov
and
inc
std
adc
mov
xor
scas
mov
jmp
popf
lahf
jnp
xchg
pop
cwtl
lods
nop
rcrb
inc
lds
sub
xor
mov
push
jno
aaa
lock
ja
movsb
mov
cli
mov
sub
and
pop
push
loop
dec
inc
or
inc
stos
rclb
fildll
adc
stos
lds
add
xor
or
add
adc
ljmp
lcall
mov
jnp
cmpsb
mov
xchg
pop
les
push
js
loop
mov
jg
inc
mov
ss
test
sarl
mov
fiaddl
enter
icebp
sar
inc
cltd
shrl
mov
pushf
stos
xlat
pop
rcl
les
aas
add
imul
cld
xchg
mov
jb
inc
sbb
cmc
push
and
fcomi
in
mov
fsubrs
cmp
add
xchg
xor
pop
and
mov
xchg
das
add
mov
inc
jg
xchg
push
xor
dec
enter
cmc
mov
xor
inc
icebp
lret
jnp
testb
es
or
inc
repz
sahf
mov
xchg
popl
add
xchg
mov
mov
inc
ret
sbb
fcmovne
jl
testl
enter
sub
icebp
fisubrl
loope
push
ret
mov
mov
pop
mov
test
leave
shll
inc
mov
cs
pushf
add
repz
fdivrl
cmc
push
add
inc
jmp
cmp
inc
bound
js
ljmp
cmp
sbb
xor
lods
push
cmpsl
adc
inc
dec
add
int3
es
pusha
and
pop
leave
pop
addr16
frstor
xor
pusha
test
pop
push
nop
xchg
fwait
mov
ja
dec
xchg
cmp
test
les
sahf
popf
hlt
jl
insl
cmp
sub
pushf
pusha
cs
add
icebp
in
jb
int
jle
test
sbb
das
test
ret
adc
inc
xchg
push
mov
scas
repz
dec
or
sbb
mov
xchg
push
mov
pop
inc
std
ja
orl
sbb
mov
push
push
rolb
fcoml
arpl
iret
cs
int3
loopne
aam
cmp
mov
cmpsb
popa
jns
jb
mov
repnz
or
inc
sub
mov
mov
rorl
loop
mov
addr16
test
push
mov
imul
mov
repz
stos
loope
jg
push
jb
jle
test
mov
sti
cmp
add
mov
fnsave
cmp
push
pop
inc
sub
lods
jg
leave
cmp
mov
push
xchg
xchg
iret
sbb
ds
scas
mov
in
push
inc
xor
sub
push
iret
aam
pop
sub
mov
fcoml
xor
sbb
les
inc
orb
outsb
cld
outsl
lret
add
daa
lret
pop
ja
jo
stos
xor
add
sbb
sbb
push
mov
into
xchg
test
in
shll
test
add
mov
sub
mov
cmc
pop
push
cmpsl
mov
push
cmp
leave
cltd
xchg
mov
push
xchg
sub
add
lods
pop
jo
repnz
ljmp
push
dec
push
xor
sbb
sub
jbe
in
xchg
adc
sarl
pop
dec
jno
popl
mov
mov
movb
cmp
cmc
or
push
int
xorl
pop
inc
cmp
inc
dec
ret
loope
push
ret
leave
in
loopne
inc
jnp
pusha
jno
dec
filds
mov
mov
sarb
mov
push
aas
cmc
int3
sub
xor
pushf
mov
lods
hlt
sbb
in
scas
cmp
test
jo
adc
pop
in
shlb
clc
fdivr
pop
xchg
xchg
cli
out
nop
inc
scas
xchg
pop
stos
daa
repz
fnsave
sub
pop
lods
inc
and
test
shrb
loopne
insl
aas
add
push
dec
std
mov
push
mov
dec
pop
mov
rcl
mov
and
jb
mov
call
mov
notl
sub
movsl
mov
cwtl
cmp
popa
repnz
sbb
mov
mov
cmp
pop
inc
mov
and
or
ljmp
int
rcll
in
mov
dec
mov
push
jp
mov
fiaddl
jns
xor
stc
fwait
movsb
cmp
add
iret
or
push
sub
cmpl
xor
pusha
mov
aad
inc
add
add
loopne
cld
rcl
ret
dec
cld
sub
sbb
enter
lds
sbb
loope
enter
lods
hlt
int
push
lcall
inc
cmpsb
roll
arpl
inc
out
pop
stos
jbe
mov
pop
lods
mov
mov
movsl
in
lods
ret
and
mov
ds
or
mov
test
dec
push
push
cmc
fiaddl
and
fisubrl
xor
mov
insb
in
test
push
mov
push
lods
or
push
imul
inc
rolb
xchg
pushf
mov
and
nop
mov
out
hlt
xchg
mov
and
or
adc
dec
ds
sbb
mov
pop
push
jo
push
xchg
sbb
push
jecxz
inc
iret
sbb
dec
sub
sarl
inc
lods
sub
xchg
inc
in
and
mov
cmpsl
arpl
add
out
loopne
inc
stos
imul
cltd
cmp
cmp
push
in
xor
sti
js
std
cmp
mov
jae
or
mov
shrb
dec
cmc
mov
mov
xchg
mov
xor
and
mov
std
lcall
stc
fnstenv
push
hlt
add
shrb
xor
add
lahf
jecxz
or
xor
enter
das
stos
into
gs
lret
push
test
les
das
in
or
adc
inc
mov
iret
inc
incl
and
and
jge
pop
xchg
fildl
adc
mov
fsubr
fxtract
jne
sub
push
mov
or
pop
shll
rol
leave
jmp
out
mov
jmp
jle,pn
mov
push
mov
inc
sub
aam
cmp
add
push
add
or
or
xor
mov
clc
fwait
and
mov
sub
push
ret
mov
es
popf
mov
lret
ja
dec
cltd
xchg
enter
hlt
sbb
or
sub
jg
rol
jbe
add
lods
pop
idivl
sub
hlt
ja
xchg
lret
lods
repnz
adc
fwait
shll
and
mov
jo
cmp
mov
inc
scas
testb
stos
dec
push
push
pop
dec
lea
subl
mov
dec
mov
popf
cli
mov
xor
pushf
test
and
inc
outsl
xor
test
push
or
int3
inc
jle
pop
mov
pop
push
les
bound
mov
mov
jns
jne
jl
add
cmc
stc
sti
push
stos
addr16
stc
andl
lods
sub
sti
loope
in
push
sub
lods
sub
fwait
cmp
push
sub
test
push
push
ljmp
add
cli
pop
fmull
or
dec
push
pop
imul
mov
int
es
popf
add
pushf
dec
add
sarl
mov
addr16
add
mov
ljmp
pop
lcall
mov
and
and
int
and
adc
push
ret
lret
sbb
push
adc
gs
mov
repz
mov
push
or
cld
cmc
mov
aam
mov
dec
sub
aad
push
cmp
mov
add
pop
loop
enter
loop
icebp
loopne
lods
xor
lods
jae
cmp
mov
sbb
cmp
cmp
sbb
jns
repz
xor
test
aad
loop
adc
add
inc
inc
mov
loop
mov
sbb
test
inc
enter
test
mov
cli
pop
cld
mov
push
adc
pop
es
lret
mov
mov
xchg
jg
push
imulb
jl
sahf
sub
cli
lret
dec
negl
adc
adc
xor
pop
xchg
pop
movsl
or
pop
or
sub
lods
je
cltd
fdivs
push
adc
popa
adc
add
mov
lods
xor
mov
pop
cmc
jge
mov
pop
stos
ror
pop
dec
cmp
or
cwtl
or
pop
test
notl
pop
xor
cmp
into
mov
fcomps
xor
inc
imul
cwtl
cltd
mov
fsubl
dec
inc
aas
stos
sbb
fdiv
dec
or
xlat
pop
add
je
sub
push
lret
mov
fnstcw
insl
or
jbe
mov
mov
pop
es
pop
adcl
fwait
sbb
sbb
data16
fldt
call
sub
dec
or
cmp
inc
das
dec
sti
lds
std
xchg
subb
lret
inc
cmp
xor
or
cltd
scas
insb
in
inc
sbb
adc
mov
jg
pop
push
push
or
sbb
cmp
loopne
xchg
add
ds
adc
shll
rolb
lahf
and
rcr
and
cs
cmp
jp
pop
repnz
dec
push
cmovge
nop
inc
sub
fcoms
mov
mov
dec
cs
inc
cli
and
mov
popf
stc
sbbl
push
in
jecxz
stos
xor
fcomps
clc
aas
xor
test
push
cmp
adc
cwtl
std
cwtl
lods
sub
iret
iret
xchg
inc
mov
outsb
in
add
dec
cmc
cwtl
insb
push
mov
mov
dec
fwait
pop
or
jmp
out
push
xchg
xchg
add
adc
lods
es
or
flds
add
jge
incl
lds
cmp
jle
cmp
ss
sbb
pop
outsb
jg
clc
stos
leave
xchg
ljmp
adcb
lds
adc
aas
inc
push
in
cmp
addl
cmp
jle
cmpsl
lock
adcb
xchg
jg
dec
mov
ljmp
and
pop
sarb
adc
popa
ds
push
jb
cmp
mov
jmp
outsb
lret
iret
sbbl
dec
inc
movsb
xchg
push
cwtl
add
stc
push
fs
push
sbb
and
or
xor
stos
add
dec
ret
fdivrl
cltd
jno
pusha
into
stc
dec
cmp
adc
adc
cltd
fsubrl
test
lds
mov
fldt
fs
cwtl
fnstsw
cmp
enter
inc
dec
arpl
clc
rcll
fcoml
test
aaa
pop
mov
pop
cwtl
dec
push
and
cmp
shrb
sti
inc
dec
imul
popa
stos
jmp
and
cltd
sahf
jno
call
and
cmpsb
popf
pop
cmp
inc
and
loope
das
mov
aam
mov
in
jb
push
push
push
cmp
push
push
mov
pop
adc
jp
dec
pop
pop
mov
mov
cmp
cmp
pusha
mov
sbb
test
loopne
js
mov
fcmovu
mov
out
dec
fmulp
fidivrs
mov
add
leave
mov
mov
test
popf
pusha
imul
sbb
mov
in
clc
lods
inc
loop
adc
mov
into
cld
and
movsl
or
cmp
arpl
leave
fucom
cmp
rcrl
lods
cs
orb
xchg
clc
sbb
xor
cwtl
mov
xchg
cmc
push
pop
inc
mov
idivl
inc
cmc
sub
ret
inc
mov
mov
popa
inc
pop
push
sti
jb
adc
push
aas
xchg
mov
hlt
xchg
jns
lods
xchg
or
out
jle
pop
pop
inc
or
xor
sar
lods
ror
and
cmp
pop
pop
lret
pop
xchg
shlb
fimull
jmp
js
dec
nop
jb
push
adc
jmp
xchg
pop
sti
push
sti
xor
ficoms
in
lods
and
lock
in
jmp
test
fiadds
in
stos
mov
jp
nop
mov
sahf
pop
dec
mov
subl
sarb
adc
loope
les
pop
aad
push
popa
repz
mov
pop
loopne
sahf
int3
imul
inc
rolb
inc
and
roll
fadds
mov
inc
or
lods
pop
mov
sbb
sbb
fisttpl
arpl
test
cmp
cmc
sahf
mov
mov
xchg
sbb
lret
lds
sbb
call
es
rcll
sub
and
and
xchg
in
movsl
mov
xor
in
int
xchg
sub
or
jbe
cltd
or
xchg
mov
cmp
das
jbe
cmpsb
mov
sub
movsb
inc
jmp
sti
int3
aad
repz
cmp
dec
cmp
lahf
jno
flds
repnz
lds
pop
nop
into
mov
mov
enter
js
cltd
jno
lods
arpl
sub
aad
mov
in
lret
scas
mov
pop
pop
repz
xchg
sub
pop
loope
ret
dec
mov
ljmp
aas
loopne
add
lds
ret
stos
test
in
xchg
fisubs
fdiv
inc
call
cmp
pop
mov
enter
and
es
and
stos
js
mov
mov
dec
push
push
or
adc
leave
mov
repnz
aas
cwtl
mov
insl
dec
ret
repnz
push
add
cli
xor
and
lcall
popa
scas
mov
je
frstor
loopne
adc
sahf
es
les
popf
aas
jle
imul
shrb
dec
jmp
xor
dec
cmp
fcmovnbe
jbe
cmpsl
sub
int
out
lods
mov
imul
fistpl
mov
repnz
aas
inc
mov
rcrl
inc
movsb
pusha
std
cltd
sub
lea
inc
mov
push
and
adc
mov
or
dec
cmp
push
aam
lret
je
sub
cmp
sbb
ret
sti
pop
scas
mov
jnp
ja
call
pop
cmpl
jnp
ds
daa
cli
inc
addl
cs
push
int
jmp
sbb
sub
stos
push
out
fmuls
push
adc
cmp
stos
jle
push
dec
lret
cmp
adc
jmp
pop
shrl
ja
int
jg
stos
loopne
pop
pop
cmp
jp
cwtl
dec
repz
push
dec
inc
xchg
inc
push
xorb
pop
popa
fwait
std
sbb
sbb
imul
sub
push
sub
jns
adc
aaa
sarl
inc
jnp
aaa
inc
jle
std
inc
and
add
mov
or
in
or
icebp
mulps
clc
push
hlt
gs
imul
out
dec
icebp
xchg
test
test
adc
sub
jmp
inc
push
lea
cmp
out
cmc
jnp
push
imulb
es
adc
je
mov
sysret
test
xor
cmp
call
push
sub
lahf
xor
mov
sbb
mov
sbb
jnp
jmp
loopne
jg
push
jmp
and
lods
adc
les
xchg
pop
mov
lods
jle
stc
stos
jb
enter
shll
mov
mov
daa
outsl
lcall
inc
out
mov
movsb
enter
or
push
mov
mov
out
neg
sbb
mov
lods
mov
das
dec
jno
jmp
sbb
or
ficompl
cwtl
mov
psrad
pop
insl
dec
ret
repz
dec
hlt
test
cmp
andl
jmp
inc
sub
jle
jmp
stos
test
and
mov
int3
sbbl
cmp
pop
or
popf
jp
arpl
loopne
mov
sbb
aaa
divl
fdivp
jg
shll
push
addr16
aad
mov
enter
cmpsb
jmp
imul
scas
test
pusha
pop
add
push
ret
aas
add
fdivr
xchg
mov
nop
stos
inc
inc
push
mov
cmc
test
int3
data16
movsl
aad
and
insb
test
cmp
xor
out
xchg
add
addl
cmp
push
faddl
mov
scas
and
push
fildll
mov
jmp
das
adc
mov
lods
adc
adc
push
or
push
sbb
stos
jnp
aad
mov
in
mov
pop
dec
mov
and
cltd
out
sub
cmpsl
xor
mov
xor
mov
inc
sbb
fiadds
xchg
nop
push
in
dec
and
out
cld
mov
imul
sbbl
jge
xor
mov
pop
negb
and
mov
std
das
lods
lea
stos
pop
pop
out
pop
add
movsb
int
lret
push
leave
sbbb
fdivl
mov
add
push
mov
pop
add
fwait
sub
je
loop
js
sar
sarl
rcll
fildl
pop
and
adc
xor
and
ljmp
fldt
loope
jmp
cmc
add
mov
sub
incb
xchg
xchg
add
and
mov
sub
popa
add
jb
jo
ficompl
adc
sbb
inc
cmc
int3
cmp
into
stos
test
aas
dec
jp
cmp
jns
lcall
pop
sahf
call
dec
das
rol
imul
adc
lods
ror
loop
and
aas
lret
cmp
mov
add
jmp
sbb
inc
push
xchg
or
arpl
lret
mov
adc
sub
in
pushf
mov
xor
pop
testl
cmp
movsl
xor
sbb
ja
cmpsb
pop
cmp
sub
aas
lcall
inc
mov
imul
sbb
cmpsl
jb
aad
stos
into
pushf
jno
dec
adc
xor
inc
and
enter
paddusb
stc
aam
shl
jne
jg
pushf
dec
mov
xor
test
stos
iret
pop
rorb
leave
add
das
mov
dec
mov
jmp
pop
pop
loop
or
ds
sti
fdivr
push
cmp
mov
sbb
inc
test
mov
mov
test
jnp
icebp
mov
test
int3
loopne
xchg
and
pop
mov
dec
es
lahf
mov
pop
aaa
imul
sbb
mov
test
add
and
mov
ret
dec
push
scas
outsl
loopne
xchg
insb
dec
test
fwait
mov
mov
pop
inc
pusha
cmp
or
xchg
dec
dec
pop
insb
xlat
inc
and
idivb
enter
loop
dec
jns
jp
and
sarb
dec
mov
stc
add
insb
rcl
enter
inc
mov
stc
pop
arpl
mov
add
and
or
inc
mov
xchg
inc
cmp
stos
negb
mov
jge
xor
mov
roll
jae
shlb
mov
fcomi
pop
aas
lock
dec
das
pop
sub
gs
stos
sahf
add
pop
push
mov
dec
mov
push
orl
sub
jg
mov
imul
pop
out
push
cld
sbb
jg
cmp
je
xor
mov
enter
inc
dec
mov
add
mov
sub
add
in
inc
cmpsb
sbb
addb
mov
loope
and
das
inc
hlt
shlb
sahf
sarb
mov
push
lahf
sub
mov
ret
adc
dec
mov
push
popa
push
cmc
xchg
jo
cwtl
or
inc
and
scas
sub
xor
lcall
ja
mov
sub
or
cltd
cmpl
mov
fidivs
test
lods
leave
mov
lock
dec
pop
xlat
cs
bound
insl
cmp
push
pop
orl
lock
or
insl
bound
cmp
mov
in
mov
arpl
lods
bound
test
sbb
ds
push
cltd
enter
in
mov
pop
and
push
xchg
pop
sub
xchg
dec
add
icebp
imul
mov
lods
popf
bound
fstpt
aaa
pop
push
stos
mov
ror
adc
push
insb
push
data16
inc
xor
xor
xchg
mov
xor
out
lods
scas
or
and
sub
nop
es
add
enter
insb
sbb
and
rcll
daa
aas
or
inc
mov
and
outsl
loope
stos
ret
mov
pop
inc
xchg
nop
mov
mov
dec
scas
sub
cmp
jae
push
sub
movsb
mov
sti
lock
mov
sbb
aam
bound
push
enter
cmc
insb
cltd
test
lcall
sbb
dec
outsb
inc
pop
push
mov
scas
loopne
int
inc
pushf
iret
pop
stos
pop
cmp
rolb
pop
xor
stos
shll
daa
sbb
iret
jmp
scas
push
fwait
std
and
js
fdivrl
xor
cmp
mov
div
test
push
popf
hlt
in
jo
jle
adc
pop
lret
outsb
xchg
bound
xchg
pop
mov
repnz
mov
cmpsl
jg
add
push
fisubrl
movq
ror
xchg
sub
stos
push
xchg
in
sbbl
les
notb
and
bound
in
cmpsb
shll
push
pop
add
mov
cmp
orl
add
leave
sub
or
out
test
xchg
iret
dec
sahf
adc
push
std
or
or
lcall
je
subb
inc
sbb
adc
or
push
std
test
shrb
pop
imul
mov
adc
shll
sarl
mov
fcos
out
imul
shlb
enter
cmp
dec
in
stos
xorb
xchg
sbb
xor
clc
stos
cmc
jb
xor
add
lcall
clc
mov
arpl
cmp
aas
dec
stc
cld
cmp
mov
cmc
adc
xchg
incl
and
mov
cmp
es
jle
imul
add
inc
inc
je
adc
adc
and
inc
leave
loop
pushf
rcrb
xor
sub
fistpl
mov
lret
adc
add
outsb
in
add
mov
jmp
vpmadcsswd
jmp
xchg
hlt
push
and
pop
test
add
hlt
dec
add
or
icebp
push
and
mov
cmp
hlt
add
mov
gs
addr16
idivb
cltd
into
mov
pop
mov
or
aam
fmull
inc
ret
mov
in
outsb
push
sbb
adc
loope
inc
cmp
loopne
inc
sub
in
mov
push
mov
push
fistps
out
xor
adc
jp
cwtl
or
mov
adc
sbb
test
lds
sub
inc
ret
dec
lret
lret
mov
inc
pop
dec
mov
jb
xorl
and
aam
sbb
mov
sub
les
popf
rcrb
loop
pop
cld
push
in
pop
jg
push
sub
loope,pn
cmpsb
or
add
add
pop
mov
aad
mov
cmp
cmp
or
ret
jae
scas
in
test
push
in
bound
push
pop
mov
sub
dec
ljmp
cmpsb
jge
mov
mov
sub
xchg
stos
insl
adc
bound
cmp
dec
das
loope
movsl
adc
pushf
inc
dec
pop
jmp
sbb
subb
repz
jae
mov
call
aam
xor
je
call
callw
jle
push
mov
in
or
mov
xchg
xchg
dec
pop
dec
inc
les
pop
rdpmc
xorl
mov
loop
or
out
stos
es
cmp
add
xor
popa
ss
hlt
jne
ret
inc
cmc
cmp
add
push
xor
or
lods
adc
ficompl
stos
test
jnp
mov
pop
jg
sub
clc
pop
call
test
and
arpl
popf
hlt
sub
bound
sub
xchg
fwait
jno
nop
fwait
pop
cmp
in
fildll
sti
xor
inc
add
cmp
push
mov
xor
push
gs
push
es
stos
movsb
jle
das
call
leave
mov
leave
ljmp
jl
add
sbb
mov
push
lock
sbb
les
aaa
int
out
pop
dec
fcomp
cmc
mov
xchg
inc
dec
push
imul
inc
stos
push
jg
or
add
pushf
rol
mov
jp
mov
add
sbb
testl
test
sub
sub
mov
dec
les
inc
xchg
sub
adc
lret
test
int
enter
mov
ds
cmp
mov
mov
and
add
mov
cmp
aas
mov
nop
cmpsb
jle
enter
mov
shrb
jbe
xorb
sub
es
adc
pusha
cmc
cltd
and
dec
adc
subl
jne
stc
mov
scas
ficomps
mov
dec
out
mov
or
pop
stos
stos
xchg
andb
ljmp
call
int
and
add
pushf
outsl
icebp
clc
xor
rcr
sbb
and
mov
jmp
pop
jno
or
xlat
add
int
lock
mov
lret
movsb
mov
pop
lret
push
sahf
repz
repnz
cmp
pop
rol
je
mov
cmp
int3
xor
sti
mov
mov
imul
clc
xor
cmp
mov
jp
sub
pusha
scas
orl
sub
dec
sbb
jmp
or
push
mov
movsb
push
push
mov
roll
gs
das
xchg
mov
shrb
loopne
pop
imul
or
pop
xlat
xor
dec
fwait
mov
mov
add
xchg
mov
sub
mov
fmuls
rclb
ficoms
mov
arpl
mov
lret
pop
pushf
orb
dec
pop
pop
pop
hlt
jo
rcrl
mov
cli
sub
cmp
pop
mov
sub
out
andb
cmp
dec
jae
ror
into
ds
sti
scas
and
add
iret
nop
cmp
aaa
sub
sti
xor
xor
insb
js
out
cwtl
jecxz
pop
sti
jb
in
notl
shr
cwtl
xorl
fidivs
mov
pop
mov
push
ds
shl
daa
mov
adc
xchg
inc
push
jbe
cmp
ss
out
pop
jnp
fsubp
dec
add
daa
lcall
push
inc
or
cmc
push
fdivp
mov
sub
ja
scas
and
cmp
cli
sarb
mov
loope
scas
mov
divb
inc
into
mov
into
call
nop
cmp
int
push
add
sti
mov
mov
inc
add
sub
mov
lods
clc
les
add
sti
inc
ljmp
lock
pop
mov
inc
sub
push
js
mov
xchg
adc
test
imul
imul
insl
pop
shll
js
mov
push
mov
push
sbb
lock
in
test
jle
fstpt
inc
lret
cld
roll
pop
xchg
jmp
mov
dec
ds
addr16
test
and
ja
mov
fimuls
mov
xor
pop
adc
mov
cmp
aaa
mov
insl
fwait
clc
or
cwtl
sbb
cli
dec
or
sub
repnz
pop
dec
mov
aam
aam
jns
repz
ret
mov
mov
rolb
cld
push
out
xchg
iret
in
sub
jae
cs
mov
aam
js
jle
dec
adc
out
into
cmc
inc
xor
test
mov
stos
test
imul
test
test
or
adcb
pop
xchg
shll
jnp
cmp
xchg
mov
test
cmp
mov
test
mov
push
xchg
arpl
or
out
xchg
mov
ljmp
cmp
sub
push
inc
aad
xor
std
shl
add
xchg
xor
or
pop
nop
adc
dec
sub
lds
ljmp
xor
fldl
clc
mov
lds
sbb
aaa
lock
test
jg
pminsw
and
sub
xchg
adc
dec
and
xchg
xor
cmpsl
push
mov
popf
push
or
inc
mov
and
ret
mov
mov
xchg
add
inc
div
jae
jne
jns
ja
mov
mov
daa
sbb
inc
inc
dec
ficomps
stos
push
test
sbb
jge
sti
adc
out
shrl
pop
jbe
pop
insb
fadd
jle
and
call
dec
push
test
pop
fdivs
ret
leave
pop
adc
pop
hlt
and
jg
push
incl
mov
mov
xchg
lahf
sub
xchg
sti
sbbb
movsb
leave
loope
js
pop
lds
ret
adc
rorl
ficoms
pop
je
sbb
xchg
ret
jbe
dec
jae
sub
add
sbb
lock
inc
rclb
add
jae
pop
mov
xlat
sub
dec
inc
xlat
xchg
xchg
xchg
xchg
add
xchg
int3
mov
out
mov
pop
mov
pop
sbb
aas
mov
add
xchg
in
sbb
or
dec
rorl
imul
inc
cltd
mov
and
inc
out
cmp
hlt
arpl
xchg
jecxz
ljmp
sbb
imul
fs
icebp
sub
push
sahf
das
test
and
dec
inc
stc
into
and
jo
test
pop
mov
sti
mov
scas
xor
rcrb
push
push
push
lock
xor
ret
and
stos
and
add
push
pop
loope
push
popa
jnp
dec
xchg
xor
dec
mov
sbb
je
je
rcr
sub
sbb
rorl
pop
lock
movsl
cs
sub
mov
xlat
outsl
addr16
fwait
xchg
or
push
je
jmp
push
xchg
rclb
or
shlb
or
jnp
sti
sub
mov
stc
cmp
out
pusha
jmp
fadds
loop
sbb
mov
inc
mov
hlt
rorl
call
mov
scas
adc
in
xchg
inc
icebp
adc
xor
sub
jge
add
rcr
dec
sbb
mov
negb
sbb
pop
out
jbe
dec
lcall
and
xchg
pop
sbb
out
cmpsb
xchg
mov
shll
sahf
xchg
xor
dec
icebp
mov
xor
fidivrs
push
push
out
movsl
sub
fimull
nop
lret
mov
xchg
dec
ss
into
pop
outsb
adc
or
rol
cmp
and
cltd
or
inc
pop
fbstp
ret
sti
loop
sub
mov
sub
mov
nop
lret
fsubrs
popf
and
jnp
push
jecxz
ds
cli
test
jp
cmp
insl
mov
aas
pop
sbbb
jg
ljmp
imulb
cld
pop
arpl
fwait
mov
mov
fisttpll
imull
jg
rcrb
pop
cld
push
cmp
xorb
andw
mov
sbb
shrl
push
cs
shl
jnp
lea
adcl
dec
stos
lret
xchg
incb
cmp
dec
sub
or
sbb
mov
sarl
or
lcall
sbb
rcrb
ret
mov
aas
fisubrl
mov
jmp
sarl
mov
dec
ret
test
fwait
enter
call
mov
dec
sub
mov
pop
and
das
pusha
lods
push
andl
shl
xor
cwtl
movsl
test
rolb
ror
cmp
lret
cmpsb
out
cmp
js
mov
in
inc
scas
std
cmpsl
adc
mov
call
xor
call
sarl
mov
add
sub
andl
lods
pop
call
fisttpll
lret
ud2
outsl
xor
enter
aaa
out
out
push
jb
jns
add
loopne
sbb
ja
add
mov
movsl
lret
fsubrl
sub
sbb
scas
enter
sarb
sbbl
jb
xor
or
push
mov
sbb
mov
jp
cmp
or
scas
fisttps
test
xchg
leave
dec
aas
stos
mov
ja
int3
rorb
jae
sahf
leave
rcrl
fcoml
dec
mov
enter
sti
je
xchg
scas
shrb
sub
js
outsl
das
xchg
sti
pop
sbb
adc
xor
jne
sub
jle
fidivs
add
xorl
xchg
icebp
stc
mov
or
inc
inc
sub
sbb
sbb
addb
add
inc
add
lds
xlat
int3
and
in
jne
imul
pop
shlb
mov
add
loop
mov
cmp
faddl
leave
fnsave
sbb
mov
mov
xchg
jmp
inc
push
sbb
sub
popf
lret
arpl
inc
shll
fstp
and
stos
mov
sub
je
in
mov
ret
sub
xor
xchg
fnstcw
loope
and
cmp
xor
mov
std
test
icebp
or
insl
inc
loope
orb
ror
push
nop
dec
addl
and
ret
pop
xchg
filds
adc
ret
arpl
add
dec
xor
mov
sub
cltd
mov
push
pop
inc
imul
dec
outsl
ret
and
loopne
add
pusha
lret
inc
sub
aas
jns
or
dec
jnp
dec
insb
nop
xor
mov
out
testl
aam
mov
add
clc
push
test
daa
mov
or
insb
ds
daa
jmp
cltd
push
test
jo
movsb
dec
ja
or
jmp
push
mov
lahf
fs
inc
arpl
daa
insb
push
xlat
xor
enter
bound
test
push
mov
sarb
jbe
andl
daa
js
outsl
sbb
or
inc
dec
push
push
inc
mov
in
testl
xchg
lea
inc
data16
pusha
add
adc
jo
sti
inc
in
cwtl
jb
push
pop
inc
push
fsubrp
pop
add
push
cmc
lea
mov
mov
lock
shll
dec
cmp
ret
js
enter
mov
es
xchg
dec
or
adc
sbb
pop
pop
sub
pop
dec
xor
push
mov
in
pop
fisubrs
mov
inc
out
dec
fiaddl
cmp
push
xor
cli
push
lods
inc
dec
aas
jmp
mov
sbb
arpl
sbbb
jae
xchg
fdivrl
sbb
sbb
lods
inc
ds
mov
xchg
roll
jbe
rorb
stos
pop
xchg
stos
inc
dec
mov
adc
ja
inc
mov
jg
decb
and
jg
dec
jl
dec
pop
and
daa
loope
stos
mov
xor
cmpb
lea
jmp
ret
cwtl
mov
push
rcrb
and
xchg
loop
fcomps
mov
insb
shlb
xchg
mov
movsb
das
or
inc
repnz
in
popf
stos
inc
movsb
lods
rcrb
dec
mov
jns
pop
aaa
aas
icebp
pop
jae
xchg
jo
mov
stos
inc
cltd
jns
dec
data16
into
sbb
in
cmp
aam
dec
dec
jne
cmp
fstpt
sahf
mov
jnp
stos
xchg
jg
dec
cs
jb
notb
cmp
andb
add
xchg
loopne
pop
mov
jmp
dec
xlat
es
xchg
xchg
stos
sbb
push
dec
aaa
lods
inc
out
in
jl
add
subl
xchg
fmul
es
pcmpeqb
mov
movsb
lods
push
pusha
add
inc
adc
xor
sbb
decl
fnstcw
pop
lds
mov
fbstp
add
cld
lods
mov
faddl
scas
dec
inc
add
mov
cmpsl
push
in
cmp
std
cli
and
icebp
ss
fistpll
out
lahf
out
fs
lcall
or
mov
xor
add
xor
jge
inc
sbb
sub
aas
ljmp
icebp
xor
pop
mov
ffreep
adc
jg
int3
mull
das
mov
mov
cmpsw
lret
xchg
pop
mov
fwait
mulb
pop
jo
andl
push
xchg
fdivs
pop
adc
jmp
lcall
jns
ljmp
inc
push
adc
jp
mov
xchg
aas
lcall
dec
pusha
push
adc
xor
cmp
roll
push
test
adc
data16
xchg
or
add
sub
sbb
push
sbb
mov
loope
imul
adc
sbb
mov
data16
orl
lahf
or
sbb
mov
sbb
mov
add
jns
clc
inc
add
out
mov
push
hlt
shlb
fsubl
notl
insb
dec
fwait
and
sub
adc
cmp
nop
fbld
std
jl
scas
testl
sahf
mov
jg
in
ret
cmp
jl
test
or
inc
popf
mov
push
inc
push
stos
movsb
fadd
fstl
dec
and
sub
lds
and
xor
cmpl
lock
mov
imul
andb
jmp
jmp
mov
adc
mov
or
popa
sti
add
fistpll
mov
xor
std
sub
cs
mov
mov
scas
fldl
sar
aad
pop
push
icebp
adc
cmp
xchg
lods
push
mov
adc
adc
popa
scas
adc
inc
aas
cltd
sarb
dec
mov
lds
cmp
cmp
add
inc
fmul
push
mov
fcoms
and
push
scas
xor
mov
sbb
aas
call
imul
dec
jge
or
mov
adc
lret
sub
or
add
add
leave
lds
test
inc
in
enter
call
imul
or
xchg
in
dec
pop
mov
xor
ja
mov
aaa
dec
ret
mov
xor
mov
nop
cli
mov
mov
and
mov
sbb
pop
cmpsb
jb
stc
pop
outsl
lods
lret
bsr
sub
dec
cmpsl
pop
nop
das
hlt
fnstenv
or
ds
jbe
jg
adc
movsb
pop
dec
sbb
mov
loop
std
in
mov
aaa
paddusb
mov
fwait
xor
movsb
add
xadd
xlat
fisttpl
add
sti
std
inc
aad
adc
scas
add
mov
pop
lds
stos
mov
sbb
in
xlat
into
push
jns
sbb
and
in
aam
add
inc
iret
loopne
mov
rcr
xchg
cli
aad
mov
sbb
daa
push
push
sub
pushf
bound
dec
pop
sub
push
sti
dec
push
mov
js
and
gs
adc
and
cmc
push
lds
jge
or
mov
jg
mov
mov
cs
and
add
stc
ret
repz
movsl
sub
shlb
push
jmp
aad
jae
shrb
enter
or
mov
and
xor
movsl
push
dec
xor
xor
sarb
jg
adc
xor
enter
shrb
stos
xor
xchg
sub
push
ficoms
fisubs
subl
in
inc
jle
dec
ds
dec
lret
sub
cmp
in
inc
inc
loopne
mov
sub
sub
shrb
in
test
imul
or
in
ja
xchg
jnp
inc
inc
aad
cmp
ljmp
adc
ret
cmp
fisubl
pop
gs
inc
cmp
jmp
inc
adc
call
sub
or
push
mov
push
gs
ljmp
dec
sbb
mov
cli
mov
in
fdivrp
xor
sbb
sub
fnsave
loop
mov
nop
test
aam
cmpsb
jbe
js
cld
lds
add
xchg
inc
ficompl
loope
sar
lahf
inc
push
sub
mov
pop
mov
cld
jmp
sbb
fwait
jno
push
sub
mov
cmp
xor
mov
jo
lds
mov
flds
pop
xchg
and
in
sbb
call
test
lahf
dec
mov
jle
and
cmp
and
mov
cld
sub
cmp
or
enter
fildl
sub
stos
negl
subl
call
pop
sahf
cltd
adc
pop
mov
cltd
dec
loopne
popa
ja
sub
xchg
fwait
mov
mov
adc
inc
ret
clc
cmp
mov
mov
clc
dec
stos
mov
cld
dec
cmp
sti
inc
mov
sbb
push
pop
add
popf
pop
fs
hlt
decl
std
adc
mov
enter
stos
mov
adc
dec
push
push
aas
pop
iret
mov
push
pop
mov
push
jle
mov
pop
sahf
jle
fstps
sub
sbb
aad
mov
adc
loope
les
mov
adc
aas
xor
ljmp
jne
sti
xchg
call
cmp
mov
nop
pop
push
aaa
mov
cmpsl
icebp
shll
aaa
mov
js
pop
adc
inc
sbb
xchg
negb
out
mov
cmpsb
out
push
sub
lds
int3
std
push
sbb
sub
push
fldl
les
andl
mov
loope
inc
shrl
cmpsb
lods
inc
mov
xchg
xor
and
fisubrs
aam
pop
ss
push
push
pop
pushf
lahf
mov
sub
and
or
loope
lds
mov
mov
icebp
xor
int3
pop
imul
jle
push
adc
jge
adc
inc
fstpt
cmpsb
add
and
and
mov
loope
dec
push
cmp
roll
into
mov
loop
mov
adc
xchg
xor
adcl
shr
dec
imul
mov
cmp
sub
jmp
and
int3
lds
ret
movsb
or
adc
in
mov
stos
push
pop
jns
hlt
shll
lods
and
sub
pop
push
out
popa
jge
cli
pop
sahf
add
test
xor
adc
cmpsl
jge
lods
pusha
mov
outsl
or
pop
int3
insb
jbe
in
sti
imul
add
sbb
sbb
sub
lret
clc
mov
js
sub
mov
and
lahf
testb
rol
cmovne
in
inc
testl
mov
sbb
stos
xchg
call
push
jno
add
and
pop
adc
dec
sahf
outsb
ficoml
mov
cs
test
cmpsl
pop
or
pop
call
cmp
scas
jns
jge
in
imul
sub
enter
push
aam
jle
push
pop
xor
stos
inc
mov
jecxz
rcl
lret
in
mov
and
js
clc
rcrb
jecxz
insl
xor
subl
pushf
pop
scas
dec
lds
andl
or
cli
ret
sbb
addr16
sub
mov
pop
loope
jmp
pusha
mov
leave
push
push
in
jmp
inc
ret
scas
test
and
cli
mov
xchg
enter
add
jg
mov
roll
hlt
ss
jno
inc
mov
rcrl
outsl
inc
and
jecxz
scas
in
push
addr16
out
jns
xchg
nop
or
aam
jo
outsl
mov
lret
ret
aad
xchg
lock
out
rcr
jnp
or
sub
es
shll
cmp
cmpl
int
int3
hlt
loopne
es
sti
pop
sub
mov
mov
popf
xchg
jle
movsl
sbb
mov
in
ljmp
inc
push
mov
sub
lcall
xchg
cmp
loope
xor
lret
in
pop
out
dec
push
enterw
and
push
insl
cmpsb
xchg
add
enter
aas
xchg
fldl
addr16
test
xchg
dec
cs
pop
cmp
pop
sub
bound
mov
sbb
dec
push
insb
and
aad
xor
in
adc
cmc
cmp
mov
mov
mov
fistps
add
jle
mov
or
mov
jae
pusha
add
scas
xor
mov
mov
push
jno
inc
stos
xor
jg
mov
mov
push
jbe
push
or
std
daa
pop
and
inc
rcll
cmc
push
add
pushf
xor
xchg
addb
shl
mov
xchg
nop
pop
mov
cmp
mov
adc
movsb
shrb
mov
ja
mov
add
dec
push
push
fistps
push
arpl
cmp
jmp
cmpsl
mov
fs
sahf
jne
xor
sbb
adc
arpl
cmpsl
pushf
lods
dec
ds
sbb
leave
les
pop
mov
dec
jno
adc
mov
xor
pop
sbb
or
adc
sub
xchg
test
push
int3
into
clc
int3
pop
push
sbb
rcr
enter
xchg
sub
sbb
adc
jo
in
pop
sbb
loop
pop
add
dec
add
int3
jno
and
inc
out
add
add
sbb
inc
mov
sbb
add
adc
mov
rcrl
mov
sub
xorl
jnp
jl
jae
dec
pop
gs
int3
lods
outsl
aam
pop
or
push
cld
jge
or
cmp
notl
test
stos
and
popa
ror
mov
xchg
enter
and
pop
xor
add
sbb
sahf
pop
fbld
cli
pop
call
repz
push
mov
imul
pop
pop
push
mov
lock
into
fmull
rcll
or
or
push
and
frstor
cmc
xchg
js
mov
mov
lock
pop
push
je
lods
add
or
int
pop
leave
add
cli
ljmp
cmp
pop
cmp
rcrl
adcb
inc
lret
and
das
subl
mov
pop
or
aas
and
jae
icebp
xor
adc
pusha
and
fstl
cmp
lds
mov
cmpsb
mov
sbb
mov
jp
ficompl
shrl
cmp
icebp
leave
pop
je
cmpsl
ret
shr
pop
lds
cmp
fstps
mov
in
jle
mov
inc
or
movsb
aas
inc
lea
push
dec
mov
and
mov
mov
mov
xchg
dec
mov
mov
rcrb
xor
movntps
xchg
pushf
int
je
in
jo
rcrb
std
mov
sbb
cmp
les
repnz
enter
jnp
andb
pop
fstp
jg
dec
pop
xor
rcl
or
cmp
les
sub
popa
pop
and
push
enter
aad
jnp
repnz
cld
pop
lods
mov
add
cmp
and
js
pusha
mov
mov
or
in
push
adc
std
mov
push
or
les
push
ret
call
pop
inc
das
aad
add
pop
dec
fsubrl
mov
in
inc
add
and
stc
shrl
lret
inc
cmp
push
subl
rcr
xor
loopne
movsl
data16
mov
jo
cmpsb
cwtl
icebp
daa
gs
out
rorl
or
mov
mov
inc
and
jmp
pop
pop
inc
fbstp
movsl
pop
int
mov
popf
mov
mov
enter
filds
mov
dec
pushl
mov
inc
mov
movsb
shl
in
dec
jbe
inc
aaa
enter
dec
lahf
mov
sbb
int3
ljmp
popa
adc
mov
loop
jecxz
and
ret
xchg
jns
mov
das
ds
inc
dec
jbe
in
mov
inc
push
pushf
jle
in
ds
mov
cmp
sarb
movsl
mov
jae
xchg
outsb
fsubl
mov
jae
pusha
loopne
stc
test
cmp
jne
das
lock
aas
add
and
xor
cmp
andb
movsl
out
xchg
lret
aam
int3
xchg
mov
push
repnz
dec
fwait
cmp
mov
xchg
and
std
sub
and
popf
mov
stos
or
mov
imul
lcall
xor
push
dec
dec
xor
mov
mov
dec
popa
add
sub
jae
pop
mov
stos
hlt
dec
sbb
loopne
pop
mov
scas
pop
outsb
cmp
mov
test
iret
test
pop
mov
in
pop
jnp
push
cld
insb
frstor
into
cmp
mov
adc
dec
mov
movsl
push
mov
or
lcall
sahf
push
test
xchg
mov
jmp
xchg
dec
fadds
dec
mov
sbb
mov
jne
test
mov
and
add
lahf
sub
rorl
jg
dec
mov
mov
sub
fwait
jp
in
add
mov
push
sub
jp
mov
aam
imul
dec
sub
mov
or
sub
enter
xchg
fistps
imul
sarl
and
sbb
ss
scas
cmp
xor
rol
das
sub
push
fnstenv
fcmovbe
mull
orb
pop
xchg
mov
sub
test
xorl
push
mov
jge
mov
and
mov
leave
loope
nop
xchg
sub
dec
fimull
jnp
push
sub
popf
dec
and
mov
cmp
inc
js
cld
xor
imul
mov
ret
nop
jne
lods
cmp
int
push
fiadds
fdivrp
pop
sbb
mov
fistpl
and
pop
and
add
in
mov
inc
sti
mov
sarl
jp
ret
fs
cs
mov
fcmove
jecxz
call
scas
mov
sbb
les
insl
mov
add
or
idiv
push
cli
mov
pop
jns
or
xchg
mov
mov
call
iret
jecxz
cmpsb
and
mov
iret
fwait
and
fwait
inc
ffreep
mov
add
add
repnz
jno
inc
jmp
push
sti
push
mov
jns
jno
ss
ret
sarl
cld
sub
inc
andb
cmp
lock
mov
daa
nop
adc
clc
das
mov
jb
jmp
push
in
aad
push
std
les
rcr
bound
mov
mov
dec
daa
sub
lahf
pop
jne
dec
insb
test
popf
cmp
cmp
and
or
es
and
outsb
or
stos
inc
int
scas
dec
jg
push
xor
cli
das
mov
add
dec
xchg
mov
xchg
mov
mov
mov
lahf
and
mov
cmp
mov
cmpb
cmp
or
sbb
push
add
repnz
mov
insb
fistpl
pop
cmc
mov
das
sub
mov
ficomps
fistpl
push
adc
std
push
add
xchg
ja
inc
add
and
std
jmp
jecxz
scas
rolb
in
dec
mov
sub
add
add
fistps
bound
test
movsb
outsb
movsb
or
dec
leave
sti
outsl
out
inc
or
jnp
aas
ss
mov
sbb
inc
jb
loop
mov
aam
cltd
out
cmp
into
scas
sub
jp
addb
lret
and
cmp
loop
push
loopne
cli
movsl
push
fstpt
in
mov
lods
cmpsl
xor
xor
cld
cmpsl
push
push
cmp
mov
fcompl
or
xchg
cmp
or
mov
daa
sbb
cltd
jmp
dec
ret
push
loopne,pn
dec
lods
hlt
xor
push
pushl
mov
loopne
inc
cltd
in
cmp
ds
addr16
pop
or
jle
loop
xor
xor
frndint
ljmp
adc
jno
ds
xor
scas
jno
dec
ror
ret
pop
xlat
insl
and
cli
inc
cmp
imul
jmp
mov
test
cwtl
cmp
jge
fldenv
ret
les
lods
push
inc
stos
push
cmp
fstp
fsubrs
js
adc
adc
jae
dec
pop
stos
bnd
or
les
mov
adc
inc
add
pusha
dec
push
sbb
movsl
dec
and
pusha
out
pop
stos
jmp
popa
jle
loop
xor
cwtl
push
int
inc
inc
rcrb
dec
rcr
mov
adc
jl
cltd
cwtl
and
dec
jbe
mov
cmp
pop
out
mov
cmp
aam
incb
add
notb
cltd
pop
or
std
push
inc
sbb
push
cwtl
rolb
daa
adc
mov
das
cltd
loopne
xor
incl
ret
addr16
mov
dec
outsl
mov
and
inc
jbe
pop
push
rcrl
and
cli
and
add
and
insl
jl
pop
sub
ret
in
out
in
inc
dec
imul
push
jns
fidivl
and
jo
or
inc
aas
stos
add
ss
dec
dec
mov
xor
aad
sub
xor
outsb
inc
mov
shlb
fldenv
stos
ret
add
in
imul
mov
sub
inc
mov
inc
ja
pop
cmp
lods
push
and
dec
add
sbb
mov
xor
jae
movsb
lock
aaa
add
in
and
pop
stos
sub
mov
cli
cmp
inc
jae
ret
pushw
aaa
push
daa
movsl
cmc
mov
jl
or
cmp
ror
cmp
lods
stos
in
pop
cld
jp
add
sub
ret
dec
dec
mov
sub
aaa
inc
movsb
jo
xlat
ret
pop
push
sbb
xor
sub
xchg
pop
out
xlat
jo
pusha
cmp
jle
les
ret
inc
dec
lods
dec
mov
inc
jle
daa
aas
xchg
inc
les
dec
cli
add
fadd
fnstsw
dec
sbb
dec
xchg
cs
inc
pusha
loop
in
sub
gs
test
ja
cltd
mov
jmp
mov
popf
xchg
test
push
in
pop
inc
mov
inc
cmp
mov
lret
push
adc
jge
cltd
jle
xchg
cmp
jecxz
jl
shll
xchg
fcoms
sub
inc
inc
pop
mov
add
mov
and
xchg
inc
push
nop
mov
leave
mov
out
out
cmp
pop
movsl
mov
in
jg
int3
mov
test
xor
mov
push
mov
lods
push
in
cli
mov
sbb
rcll
xchg
mov
mov
pop
ror
mov
jns
cmpsl
fldenv
add
daa
test
or
mov
mov
jecxz
xchg
xchg
and
lock
movsb
sahf
test
stos
push
std
or
fisubrl
daa
mov
pop
xor
mov
cmpsb
ja
inc
adc
and
xchg
inc
imul
push
pop
and
enter
jle
sbb
mov
scas
mov
ds
xchg
adc
in
cmp
call
sbb
push
and
mov
popa
push
addl
push
cmpl
fimull
add
orb
cmc
stos
lods
stos
js
addb
and
shlb
sbb
pop
cmp
sbb
add
in
pop
jg
jne
fs
popa
cmp
mov
adc
xchg
ds
notl
rcll
cld
xchg
mov
inc
mov
jmp
jmp
push
or
or
imul
or
jb
xchg
push
ds
xchg
daa
mov
jb
nop
xchg
push
lods
mov
stc
dec
add
xchg
inc
ret
mov
test
xchg
cmp
psrlq
repnz
add
loopne
popf
sub
adc
and
cmp
and
in
inc
and
push
cld
xor
addr16
pop
aaa
sub
int
stos
inc
push
stos
and
shlb
cmpsl
outsb
lods
subl
fistl
sar
pop
add
out
sbb
nop
lods
sbb
xor
pusha
sub
cwtl
mov
jnp
dec
jbe
add
inc
xchg
repz
add
aas
movsb
cmp
insl
sahf
dec
hlt
lds
into
push
leave
pop
shlb
pop
ret
xchg
incl
dec
push
dec
mov
test
xlat
push
push
pop
xor
push
imul
shl
mov
mov
lds
mov
sbb
pop
fs
aam
imul
stc
je
sub
lea
jge
mov
in
pop
stc
mov
adc
out
lcall
mov
mov
pop
inc
imul
imul
test
dec
mov
in
les
mov
scas
into
xchg
inc
test
cld
pop
rol
rcll
ss
mov
lret
xchg
lcall
imul
dec
xchg
xor
mov
cmpl
popf
aas
repnz
xor
and
inc
imul
enter
add
cmp
inc
mov
inc
pop
sub
sub
xchg
pop
pop
stos
add
xchg
jns
arpl
pop
push
test
imul
pushf
and
cmc
out
add
jl
sbb
push
jge
jle
dec
add
flds
add
lea
sbb
testb
and
pop
arpl
or
mov
sub
repnz
sub
jne
mov
xor
inc
cmc
lret
xor
cwtl
sub
aaa
in
pop
cmp
and
and
add
jo
addr16
fcmovb
in
jns
xchg
and
pop
mov
in
sahf
leave
int
inc
movl
adc
sub
push
outsl
push
test
in
loopne
jnp
imul
lock
les
std
pop
xor
imul
and
xchg
push
fwait
cld
leave
and
dec
push
jmp
adc
inc
dec
xor
mov
inc
mov
push
pop
jl
loop
pop
or
mov
adc
add
js
test
inc
test
push
xchg
lahf
idivb
xor
pop
xchg
subw
leave
sbb
jmp
cmp
movsl
das
xchg
inc
mov
in
dec
scas
aaa
mov
mov
lea
inc
inc
mov
xor
xlat
js
aad
sahf
cwtl
jne
xchg
mov
add
jg
in
in
sbb
rol
js
ret
xchg
fists
push
dec
sar
cmp
xchg
aas
int3
jg
push
fcmovnbe
pushf
movsb
pop
fsubp
push
jmp
cmpsl
jp
mov
stos
les
cmp
or
sub
pop
ret
push
inc
mov
movsl
gs
lea
pop
pop
iret
stc
xor
push
or
insb
int
mov
fcomps
jb
xor
mov
aam
mov
and
push
adc
push
and
stc
adc
lcall
movsb
bound
nop
xchg
sub
addr16
mov
fisubrs
rorl
je
insl
sbb
or
insl
aas
and
outsl
cmc
jo
mov
mov
nop
gs
jo
mov
fidivl
sbb
mov
mov
mov
ja
and
lock
clc
je
xchg
rcrl
mov
repz
fsubs
add
and
or
int
dec
fidivrs
cmp
sbb
in
jbe
outsb
xchg
out
sarb
pop
ret
sub
jno
sub
adc
adc
fsubrs
in
jns
nop
ss
fcoms
adc
outsb
push
int3
or
seto
mov
inc
dec
repnz
fwait
out
cmp
std
fs
xchg
ss
ds
adc
pop
imul
xchg
cmpsl
or
sbb
sbb
dec
jb
out
jnp
les
enter
inc
into
daa
mov
add
xchg
xlat
enter
inc
fwait
mov
xchg
test
add
cmpsb
sahf
and
pop
lcall
pop
fs
movsb
xchg
or
jnp
jne
adc
jb
pusha
test
xchg
pop
into
nop
inc
inc
push
mov
dec
mov
mov
mov
cmp
ret
mov
inc
dec
inc
fucom
jg
dec
pop
fs
add
sub
and
jnp
fsubl
mov
cld
add
in
push
push
les
jb
loopne
sbbl
rcll
insb
stos
out
mov
inc
ljmp
dec
or
mov
push
mov
sbbl
mov
cmp
shll
inc
ror
lea
add
push
fdivrl
sarl
into
pop
jl
mov
shlb
aad
inc
add
enter
cmp
adc
sti
mov
xor
rorb
nop
sarl
dec
fdivl
push
sub
std
jg
dec
push
push
hlt
mov
sub
push
add
outsb
lods
aad
stos
inc
sbb
mov
out
insb
ds
mov
clc
cmp
and
std
mov
dec
pop
pop
fdivr
test
movsb
dec
iret
adc
xlat
movsb
or
mov
cltd
int3
cmp
mov
dec
mov
pop
in
sub
rcr
rorb
xor
pop
pop
aam
jbe
in
movsl
jnp
push
mov
add
mov
cmp
cld
xor
movsb
clc
popa
jg
add
faddl
idivb
sahf
fistpl
repnz
or
aam
dec
repnz
xorb
sub
add
mov
sub
add
stos
mov
add
fmull
imul
add
test
add
loopne
or
shrb
shr
push
pop
dec
and
int3
sub
pop
pop
loop
pushf
hlt
jg
dec
jl
dec
insl
hlt
xor
fbstp
test
jno
xchg
pop
push
lods
jmp
mov
imulb
movsl
imull
xor
jb
sub
testl
scas
clc
adcb
xchg
add
mov
movsl
sub
mov
mov
jae
sbb
push
mov
inc
hlt
popf
scas
mov
loopne
sub
xor
fistpll
jo
jg
cltd
push
js
adc
clc
or
push
add
pop
out
insb
push
jns
jo
mov
hlt
sub
pop
add
or
ds
pop
or
jo
or
addr16
insl
lods
push
sub
mov
pop
lret
mov
pop
aas
rorb
pop
sub
movsl
xlat
add
sbb
cltd
and
jno
adc
addr16
popf
imul
xor
hlt
xchg
mov
arpl
ret
hlt
sub
xor
enter
aam
mov
mov
xorl
pop
fsubr
pop
lock
les
addr16
insb
mov
adc
cmc
inc
adc
addr16
cmpl
decb
jp
inc
and
mov
stc
jg
push
lahf
cltd
mov
xor
loope
jno
inc
out
xchg
sbb
aas
mov
mov
xor
lahf
test
popf
dec
mov
inc
xchg
shlb
mov
dec
sub
pop
inc
iret
push
xor
arpl
jecxz
stos
xor
arpl
sti
inc
or
jns
test
xor
or
jmp
dec
cld
cwtl
int
inc
mov
push
aas
dec
or
dec
shr
mov
lea
ljmp
loopne
outsl
out
mov
and
push
lret
xlat
xchg
jae
or
enter
xchg
mov
and
mov
inc
mov
sub
add
cmc
in
cld
outsl
mov
lcall
js
pop
xchg
das
cmp
xchg
cmpsl
pop
jl
push
cmp
sub
cmp
fisubl
xor
stos
cmp
fistpll
and
dec
pop
scas
mov
dec
rolb
jb
in
loope
and
in
cltd
call
fnstsw
push
mov
sub
sbb
insl
fwait
cwtl
js
dec
in
mov
mov
cmp
fidivrs
sahf
call
aaa
lret
mov
xor
push
jmp
push
leave
pusha
lods
jmp
leave
pusha
jae
add
addl
sti
ja
mov
sub
es
lds
dec
iret
rdtsc
stos
sbb
iret
xor
repz
sbb
mov
xchg
jg
jmp
shrb
sub
mov
pop
dec
or
movsb
scas
js
mov
jge
loop
dec
jns
stos
addr16
scas
cmc
jge
imul
xor
mov
call
dec
lods
xchg
jecxz
and
lea
in
fldenv
or
adc
inc
outsl
lods
je
sub
aad
mov
psraw
lret
daa
iret
iret
and
xchg
and
loope
dec
add
imul
inc
xchg
leave
jg
push
inc
mov
sub
xchg
add
stc
xchg
xor
sbb
xchg
dec
or
cwtl
mov
mov
sub
scas
fmuls
jbe
in
aad
xchg
cmp
and
push
data16
imull
xchg
push
cmpsl
jg
pop
or
imul
cs
push
data16
test
insb
add
add
xor
js
inc
jbe
daa
cmp
mov
sub
mov
jne
daa
scas
rcr
add
sbb
arpl
mov
sarl
push
es
je
jne
in
dec
inc
and
adc
jns
mov
xchg
mov
addr16
cmpsb
or
xlat
fdivr
sbb
loope
cmp
push
jmp
push
inc
jge
or
mov
call
fs
cmp
aas
inc
push
adc
sbb
jo
hlt
add
sbb
aad
cmp
inc
cmp
je
xchg
and
std
lods
pop
mov
mov
or
call
xor
mov
cmc
cltd
movsb
inc
xchg
or
cltd
sub
add
iret
nop
cltd
xchg
sbb
jb
jl
cmp
pop
lods
sbb
std
popa
in
outsb
push
mov
mov
and
push
or
dec
xchg
xchg
push
mov
mov
les
stos
ret
test
scas
pop
sbb
repz
xor
scas
inc
pop
jp
lock
mov
rorl
mov
pop
pop
and
test
and
mov
cmc
aad
mov
test
and
das
xchg
cmpb
mov
rorb
inc
cli
stos
or
stos
inc
js
lahf
out
mov
in
fsub
std
das
xor
xlat
inc
adc
adc
push
shrl
mov
mov
adc
cmp
outsb
pop
loope
lods
out
add
jecxz
xor
mov
push
jb
inc
jno
enter
adc
les
test
pop
dec
addl
in
jo
adc
mov
aad
cmp
lea
jae,pn
push
enter
std
ja
jnp
stos
sbbb
movsb
sbb
cmp
scas
sbb
pop
jne
mov
test
pop
mov
loope
testl
jbe
into
cltd
in
das
xchg
mov
mov
std
and
lock
sub
sbb
inc
lods
fsubs
enter
xchg
lret
dec
dec
jb
jae
push
aad
int
cld
dec
outsl
aad
in
pop
inc
jnp
and
aas
shll
ljmp
frstor
inc
setbe
jp
cli
outsb
pop
test
jb
enter
sub
in
adc
xorl
jae
add
xchg
lock
pop
mov
scas
xchg
or
imul
cmp
cmpsb
mov
jnp
dec
fs
jge
int
testl
xlat
lahf
xchg
pop
sub
cwtl
push
xor
xchg
lahf
fdivp
aam
or
shrl
test
in
addr16
sahf
add
lcall
lds
popf
push
inc
mov
mov
inc
dec
sub
loop
and
sbb
popf
cwtl
inc
jl
jecxz
imul
jae
sub
sti
outsb
repnz
rcr
xor
icebp
imul
ss
js
gs
xor
dec
out
push
lret
mov
dec
shrb
jp
shrb
daa
imul
adcb
loop
test
imul
mov
fistpll
pushf
lods
icebp
and
es
add
mov
out
push
cld
icebp
insb
push
mov
mov
seto
inc
stc
dec
loope
mov
add
xor
andl
pop
pusha
rorl
push
or
mov
insb
mov
dec
inc
sub
mov
mov
mov
ret
fs
jae
psubsw
sbb
adc
jbe
loopne
nop
mov
das
mov
fcoml
mov
inc
test
mov
fcomip
inc
jne
cltd
arpl
push
les
inc
pop
les
pop
inc
sub
adc
arpl
hlt
pop
lds
or
stc
int3
outsb
sbb
fimull
das
xor
sbb
mov
push
das
pushf
fcompl
imul
aam
into
cmp
mov
ret
sub
subl
push
andb
mov
mov
fimull
add
pop
push
xor
lahf
push
and
pop
stc
jp
xor
ret
mov
and
or
mov
popl
sub
dec
inc
enter
fwait
mov
lea
aam
xchg
and
int3
mov
vxorpd
cld
dec
xlat
call
jle
jo
mov
int3
adc
rol
leave
lea
lock
out
cmp
mov
ror
dec
mov
aam
cltd
xor
sahf
cld
sbb
sub
xchg
dec
ffree
push
mov
pop
push
dec
dec
mov
cmp
mov
inc
mov
loope
fs
dec
ss
xor
lahf
fdivs
cwtl
clc
fnstsw
enter
sbb
mov
or
sub
sub
mov
jecxz
insb
aaa
cmpsl
fcmovne
add
movsb
leave
test
out
dec
test
push
or
jmp
movsb
shrb
pusha
pusha
add
add
xor
mov
lds
mov
out
push
in
mov
daa
lret
ljmp
push
add
fldt
inc
orl
jge
inc
push
pushf
je
inc
inc
mov
sub
jl
xchg
jae
pop
testb
hlt
fs
ljmp
mov
and
sbb
outsl
mov
jbe
in
dec
and
sub
push
pop
and
adc
repz
cli
jle
fsts
aas
add
dec
and
add
imul
sub
xchg
fistpll
lods
sub
int
cli
jne
mov
fmul
arpl
sti
inc
cld
and
les
pop
rorl
fnstenv
pushl
mov
in
inc
pop
sub
cmp
jmp
inc
cwtl
int3
add
mov
loopne
inc
lods
cmpsl
xlat
sub
add
outsb
jle
sbb
sub
push
aaa
inc
push
sub
sub
lcall
lods
cmp
daa
jb
outsb
fdivr
or
sti
xlat
sbb
push
jmp
movsb
mov
push
and
add
fildll
lcall
or
xchg
sbb
cmp
cmpsl
inc
pop
pop
loopne
js
fcompl
or
fnstsw
test
or
pop
mov
sahf
cld
push
bound
bound
ret
dec
testb
mov
cmc
icebp
sub
cmc
inc
daa
sub
pushf
pop
pushf
testb
rcrb
mov
add
cld
pop
test
stc
test
imul
rclb
mov
cmp
mov
enter
fsubl
test
lret
ror
and
sbb
fisubrl
test
rolb
shlb
js
popa
cwtl
lods
push
in
jne
jb
cmp
add
sub
sub
xchg
inc
pop
dec
mov
sbb
lock
test
pop
test
mov
sbb
lods
jne
shlb
nop
or
cmp
or
int3
lret
mov
jae
cmp
inc
movsb
call
dec
dec
clc
enter
outsb
jns
sahf
nop
lods
mov
cmove
stos
sub
or
fwait
int3
pop
jo
jge
pop
call
cwtl
aad
dec
fcomps
incl
aaa
inc
jns
andl
pop
inc
pop
inc
rcl
pop
push
xor
leave
movsb
inc
mov
stos
adc
les
pop
nop
leave
lret
dec
pop
cmp
fcompl
jge
lea
xor
fs
ret
rorb
push
mov
mov
test
sub
mov
lods
sub
xorl
mov
adcl
cwtl
jno
sahf
pop
or
adc
cmp
data16
subl
pop
adc
test
mov
mov
xchg
add
clc
adc
mov
rcll
sub
cmp
push
inc
sbbl
mov
mov
rol
mov
and
mov
cli
add
out
mov
lcall
scas
insb
sbb
sub
mov
popf
inc
imul
sbb
imul
add
test
dec
divb
mov
ss
mov
xchg
pop
push
jecxz
movsb
mov
aam
lds
imul
and
subl
nop
arpl
jbe
cwtl
dec
cltd
lret
pusha
pop
mov
jne
add
mov
ucomiss
pop
push
dec
mov
cmp
and
jle
dec
mov
cmpsb
insb
cmp
cld
in
arpl
push
dec
stos
push
inc
mov
push
fimull
push
xchg
xchg
or
loop
mov
add
adc
push
cmp
jl
repnz
insb
movsl
xchg
cs
cmp
ss
jecxz
daa
je
sbb
stos
adcl
jnp
cs
lahf
push
sarb
fcomps
mov
push
mov
ficompl
jl
inc
add
sub
jo
lcall
jnp
sti
mov
sbb
ljmp
cmp
mov
out
and
sub
add
enter
hlt
mov
fmull
lods
or
or
cmpsl
cmp
arpl
or
push
or
mov
jle
jmp
sbb
repnz
shl
cli
jecxz
fsts
inc
jne
sarl
pop
adc
aaa
push
pusha
add
bnd
test
cmp
pusha
push
xchg
push
mov
inc
jno
aam
jnp
loope
cmp
xchg
inc
stos
and
sub
pop
xor
add
add
cltd
and
mov
loope
stc
or
jl
jb
out
and
or
sub
jns
mov
sbb
cmpb
cmp
imul
or
das
dec
mov
cmp
push
pop
push
daa
jle
jo
movsb
scas
fistpl
lods
cs
je
test
repnz
mov
iret
jbe
sub
adc
mov
sbb
sub
add
mov
xchg
pop
adc
aam
cmc
fldcw
repnz
lret
xchg
mov
push
ret
stos
mov
les
adc
pop
shll
stos
repnz
enter
add
pusha
or
pop
inc
mov
dec
inc
push
add
push
sti
xchg
push
js
sbbb
lahf
pop
push
pushf
mov
in
es
adc
jg
xchg
mov
cltd
pushf
ja
mov
lds
cmp
add
lret
cmp
inc
ja
test
fs
and
mov
loop
and
mulb
in
mov
inc
imul
enter
fimull
hlt
dec
pop
mov
and
mov
add
fildll
lret
inc
xlat
fwait
ja
adc
out
shrb
lahf
mov
cs
pop
mov
lds
ljmp
jns,pn
es
dec
lret
and
daa
or
addr16
into
popa
push
push
sbb
arpl
dec
dec
push
cld
stc
rcrl
mov
test
push
sub
sbb
sbb
lods
rcr
test
sbb
lret
imul
jb
imul
inc
sbb
jl
and
movsl
pop
mov
mov
inc
jg
loope
pushf
popf
mov
fmull
lcall
shr
lret
outsl
push
xor
mov
stos
cmc
pusha
sub
or
lcall
ljmp
pop
outsb
sub
and
cmp
jb
pushf
aad
inc
xchg
ds
jge
inc
fwait
mov
mov
leave
sub
dec
push
xchg
pop
divl
out
inc
nop
xchg
xor
les
sub
push
lcall
mov
std
cwtl
hlt
mov
rorl
movsb
pop
rcrb
hlt
dec
cmp
addb
xchg
cmp
gs
pop
dec
jl
ljmp
pop
xor
cli
and
sub
fidivl
push
je
les
adc
nop
push
sahf
sbb
fisttpl
ljmp
ljmp
test
pop
dec
fisttpll
sti
inc
je
xchg
int
or
and
sbb
pop
mov
mov
adc
rcrb
mov
out
push
int
cmp
imul
iret
mov
iret
mov
sbbb
pop
add
ret
xor
les
mov
xchg
mov
and
xchg
int
dec
xor
adc
xchg
ret
jnp
sub
pushf
mov
popa
ret
pop
ret
enter
je
lods
ret
dec
adc
cltd
js
fadd
fsubrs
mov
pop
xor
mov
cmp
aad
aaa
mov
or
movsl
je
icebp
dec
mov
scas
push
cld
insb
lods
lcall
pop
mov
out
inc
and
sbb
stos
enter
ret
cmp
leave
inc
jo
bound
dec
fnstcw
inc
das
in
movsl
cli
nop
mov
iret
jb
dec
enter
jno
sub
lret
add
add
std
js
icebp
bswap
adc
sbb
jecxz
jb
cmp
in
cmp
das
cltd
or
mov
and
movl
mov
adc
adc
dec
jl
ds
add
fcomps
fmuls
stos
dec
add
xor
icebp
inc
test
adc
mov
mov
jo
sbb
xchg
jae
add
lret
fidivrl
mov
out
xchg
cmp
mov
clc
inc
xchg
mov
lahf
adc
pusha
lahf
adc
cmp
pop
repz
filds
push
dec
stos
in
lahf
test
ret
popa
fidivrl
rep
sub
and
fdivr
push
pop
xorl
cmp
pushf
dec
insb
shrb
inc
hlt
scas
les
lods
cmp
mov
or
and
jnp
xor
xchg
pop
mov
dec
push
inc
or
test
xlat
mov
movsl
nop
cmp
mov
leave
notb
lock
fldcw
jecxz
imul
sub
pop
pinsrw
pusha
and
frstor
jb
ss
lea
cs
dec
push
push
clc
adc
jns
subl
fidivrs
daa
add
jl
add
mov
sbb
ds
into
dec
pop
mov
sub
mov
ret
push
sub
lahf
sarl
pushf
and
scas
cli
xchg
insl
xchg
inc
add
fidivrs
sub
xor
cmp
jl
jp
cmp
xor
inc
inc
popl
cmp
cmpsl
sbb
cmp
adc
fistpl
rol
mov
notb
rcl
outsl
fsubrl
sub
nop
data16
cmp
pop
inc
inc
iret
or
sub
push
and
inc
adc
lahf
das
shll
sbb
lds
jge
daa
in
dec
mov
cltd
mov
mov
in
jg
pop
movsb
loop
testl
pop
cmp
shrb
fnstenv
cltd
mov
test
adc
jmp
sar
push
test
into
dec
nop
rorb
js
pusha
mov
nop
jle
stos
push
jp
loop
jg
fidivl
out
mov
push
ss
sbb
aas
mov
data16
and
pop
and
adc
push
mov
data16
lods
push
into
movsl
push
cmpl
in
inc
cmp
add
xor
sbb
daa
jmp
lea
scas
pop
repnz
hlt
adc
loop
push
lods
lods
mov
hlt
mov
stos
jecxz
dec
std
inc
mov
test
iret
or
push
jns
or
dec
cmpsl
punpckhdq
ds
hlt
in
jo
das
mov
cli
xchg
jno
pop
push
jnp
jle
or
mov
rcrl
xchg
fisubl
int
pop
fcmovbe
stos
repz
movsl
cmp
ss
inc
xor
xorb
repz
jmp
inc
add
inc
mov
pop
bound
movsl
push
enter
adc
cmp
sbb
add
leave
dec
rol
int
mov
mov
push
jl
movsb
sub
mov
mov
pop
add
cmp
xor
jno
sbb
aam
ficompl
mov
mov
mov
dec
jbe
dec
mov
decl
out
xchg
xor
mov
fsubs
mov
sub
sti
inc
adc
mov
jno
or
mov
push
mov
mov
fimuls
adc
cmc
sub
sahf
imul
loopne
push
movsb
cs
nop
test
fdivs
and
shll
sti
cmc
test
xor
cmp
mov
repnz
jb
bound
and
aam
ljmp
mov
daa
clc
lods
add
inc
adc
cmpsb
stc
and
add
testb
inc
sarl
mov
inc
jbe
jg
and
inc
dec
jl
add
cmp
adc
xor
daa
cmp
jbe
imul
sbb
mov
xchg
shl
xor
lock
fcomi
rol
dec
jecxz
adc
lret
movl
push
mov
pop
rcrb
adc
insb
loopne
sarb
int
push
rcrb
jp
repnz
push
adcb
fadds
and
and
adc
sbb
adc
ss
hlt
mov
dec
dec
in
adc
cltd
or
push
jb
out
jmp
dec
add
stos
test
andb
xchg
jge
sbb
adc
or
rcrl
data16
test
push
repz
or
cmp
rclb
and
cwtl
mov
sar
sub
mov
inc
jns
rcll
orl
push
inc
push
mov
pusha
movsl
pop
cmp
cwtl
jge
or
push
xlat
imul
adc
and
lret
pop
push
insb
mov
repz
inc
popf
movsb
add
mov
aaa
fcoms
xor
xrelease
cli
inc
pop
xchg
pushf
and
mov
adc
sub
cmp
jo
dec
mov
ds
popf
mov
mov
dec
mov
mov
test
sahf
and
pop
lahf
sbb
pop
sbb
sub
add
xchg
sub
sub
lret
add
cmpsb
dec
fwait
outsl
scas
and
lar
xor
lahf
inc
xchg
jge
je
pop
mul
sbb
inc
mov
adc
and
cmp
loope
mov
jbe
xchg
dec
jbe
adc
outsb
fistl
push
shrb
xchg
pop
stc
insl
inc
add
inc
cltd
jecxz
jno
sub
lahf
mov
outsl
es
adc
mov
jns
and
adc
mov
pop
sbb
jmp
jnp
test
push
pop
rcll
packuswb
into
lea
xor
loope
xchg
dec
sub
push
fs
jae
in
xchg
fs
xchg
shrb
fs
jp
mov
sbb
and
clc
clc
push
mov
and
das
or
out
dec
imul
insb
mov
mov
xchg
adc
mov
hlt
pop
jl
call
aas
aas
xor
sub
xchg
js
popf
lahf
xchg
dec
dec
xchg
mov
dec
mov
out
hlt
pop
sar
add
outsl
icebp
and
push
sti
inc
sbb
sahf
adc
inc
cltd
rol
mov
sbb
icebp
lcall
lods
sub
lahf
insl
fs
and
cld
int
lods
inc
dec
in
xchg
enter
test
or
cmp
in
add
dec
pop
sbb
push
or
push
inc
cmp
loopne
mov
xchg
jo
fldcw
repnz
lock
cs
mov
mov
sub
fsubrl
je
pop
cmp
dec
lods
push
insb
jge
xor
imul
loopne
nop
shlb
dec
adc
pop
dec
leave
adcb
dec
sbb
inc
adc
imul
lock
dec
test
or
ja
inc
sub
loope
cltd
out
in
stos
movsb
aas
sub
cli
dec
adc
mov
fildll
xchg
bswap
pushf
add
jbe
addr16
das
or
pop
ret
mov
and
es
data16
fsubr
pop
xor
jl,pn
pop
aam
mov
and
push
shrb
pop
sub
mov
stos
add
lret
or
jg
cwtl
push
inc
stc
pop
pusha
push
jmp
push
sbb
aad
aad
add
jmp
pop
mov
xchg
cmp
cli
jb
fldenv
ja
push
outsb
push
and
je
cmp
fucomi
jnp
dec
xchg
cmp
dec
xchg
test
in
out
mov
cmpsb
int3
mov
mov
mov
mov
sub
push
xor
lcall
fwait
mov
js
sub
lret
push
push
jmp
ret
push
pop
filds
sbb
cmp
dec
leave
cmpsb
jge
fucomi
push
xchg
loope
aas
hlt
inc
aas
adc
xor
fcomps
sbb
std
push
stc
fsubrl
or
stos
imul
xor
das
fistl
pop
rorb
mov
mov
sti
mov
mov
inc
mov
ss
and
roll
xor
enter
add
push
cmp
xlat
out
repnz
loopne
inc
ret
mov
mov
dec
pcmpeqd
rorb
mov
int3
out
addr16
icebp
std
in
je
lret
gs
xlat
xchg
sbb
cli
mov
sar
xchg
and
sub
out
push
push
dec
fbstp
filds
mov
imul
pop
icebp
mov
imul
ja
push
lods
push
adc
or
mov
mov
into
xor
out
mov
shrb
cmpsb
sub
rolb
repnz
sub
xlat
mov
lea
scas
push
into
ja
in
adc
cmp
inc
iret
mov
adc
mov
sub
fs
jae
je
ljmp
xor
mov
cmp
cmp
fiaddl
ret
and
stos
pop
dec
loope
enter
icebp
sbb
inc
popa
mov
jo
rclb
pop
test
aam
test
sarb
mov
sub
nop
fimull
adc
fld
cmp
outsb
cmpsb
cmp
pop
leave
push
add
add
or
or
cmp
aaa
cmp
shll
repz
and
sti
cmpsl
xlat
push
pop
adc
add
and
into
insb
sbb
mov
mov
jle
pop
into
cltd
rcrl
lcall
mov
sbb
lret
stos
mov
enter
fcoml
outsb
cmpb
mov
and
cmp
mov
cmp
inc
dec
dec
push
mov
push
xor
mov
add
sbb
jmp
aas
mov
cmp
mov
xchg
outsl
fisttpl
imul
sub
push
in
adc
mov
leave
push
pop
dec
test
mov
repnz
or
rol
inc
mov
popa
pop
cli
sbb
pop
cmp
jo
jp
imul
cli
and
sbb
in
cmp
mov
pop
mov
add
lret
jb
jecxz
clc
js
mov
xor
add
fildll
and
sub
lret
xor
icebp
jle
addb
sub
dec
arpl
fmull
or
inc
sub
pop
push
mov
mov
jmp
aad
jl
jno
es
xchg
out
mov
inc
fisubrl
cmp
enter
in
cmp
adc
out
repz
cmp
pop
addr16
xor
arpl
pop
rol
jmp
rol
stos
xchg
clc
or
pop
pusha
inc
js
into
sbb
adc
mov
mov
xor
mov
mov
push
fsub
cli
out
jge
jno
jns
xchg
pop
jo
mov
inc
push
popa
cltd
dec
cmp
dec
fldcw
xchg
repnz
nop
gs
inc
fmull
insl
repnz
lods
adc
cmp
sbb
xchg
and
dec
cmp
ljmp
lea
sbb
pop
mov
in
dec
dec
jle
inc
or
pop
dec
mov
outsl
push
rolb
mov
adc
in
in
fs
pop
out
or
lods
dec
adc
push
xlat
and
outsb
adc
mov
fdiv
and
inc
cmp
mov
lods
inc
cmpsl
jge
out
xchg
scas
bound
leave
mov
lods
into
movsb
jb
in
or
std
mov
out
rorb
repnz
out
iret
pop
mov
pop
lods
pop
outsb
cmp
sbb
movsb
les
sub
adcb
mov
cmp
mov
std
jl
adc
jae
gs
pop
stos
jbe
push
xor
lods
arpl
mov
leave
les
xlat
lret
adc
lods
rolb
testl
fdivrl
ret
fisttpl
aas
mov
mov
test
faddl
cld
subb
inc
pop
inc
inc
mov
add
mov
or
push
dec
cmpsb
jle
fcompl
daa
sbb
pop
or
and
or
and
daa
rcl
lock
adc
cltd
jb
in
es
popa
cmpsl
cmc
in
sbb
dec
mov
pop
popf
nop
int3
fsts
dec
sub
jns
cld
add
mov
rcrl
mov
lret
sbb
jp
lcall
mov
push
mov
sbb
dec
addl
test
xor
sub
shrb
cs
int3
mov
xchg
dec
and
cmp
ret
fsubr
arpl
cmp
sbb
cmp
sub
push
cltd
fcmovu
dec
outsl
mov
cmp
add
data16
fsubs
mov
es
daa
dec
jmp
sbb
pop
popa
pop
sbb
push
bound
lret
fbstp
imul
jo
mov
cmpsb
lds
pop
mov
adcb
mov
ficomps
outsb
dec
movsb
xchg
or
xlat
rcrl
add
and
mov
push
xchg
pop
arpl
test
mov
shll
or
in
in
cmp
lahf
sbb
push
xchg
inc
mov
mov
scas
shl
pop
addr16
push
xchg
inc
cmp
shrl
jae
inc
enter
push
sbb
or
inc
nop
xor
sub
out
aaa
and
cmp
xlat
pop
aas
mov
pop
dec
mov
add
sub
jle
out
orl
sbb
cmp
mov
lds
cmpb
push
xchg
mov
jmp
into
push
cmp
cmp
pop
push
sbb
aas
stos
sbbl
fcmovbe
stos
je
lea
in
xor
xchg
push
fisubs
addb
xor
mov
pop
mov
stos
pop
or
aas
lock
push
cmpb
xchg
push
push
mov
dec
inc
adc
divb
inc
pop
hlt
add
fxch
xchg
ret
cld
jp
repz
div
call
pusha
jl
cmp
cwtl
subl
cltd
inc
scas
mov
pop
shrb
incl
into
sti
test
test
xlat
iret
adc
test
and
and
gs
enter
repz
sbb
push
jg
add
push
mov
rcrl
push
and
mov
lods
pop
sbb
mov
sub
call
mov
filds
pop
sub
inc
sub
sbb
leave
mov
pop
rorl
push
into
orl
int
adc
mov
mov
push
xor
icebp
mov
sub
sub
cmp
cmp
repnz
imul
cs
scas
pop
add
cmp
xchg
enter
jle
lock
sbb
pop
cltd
leave
sub
xchg
jmp
arpl
rcrb
fwait
nop
sbb
xor
js
lods
lret
cmp
idivb
inc
leave
in
or
sub
scas
xor
sbb
sbb
dec
out
es
jmp
in
dec
ror
adc
dec
jmp
mov
add
ds
pop
ss
mov
cmpl
jp
inc
mov
lcall
adc
aam
push
je
pop
jl
outsb
mov
repz
dec
lods
mov
mov
jg
gs
jp
daa
idivl
ja
add
sub
or
bound
sbb
call
cmovb
xchg
xor
mov
lock
add
aas
add
pop
sbb
sub
fbstp
mov
cltd
mov
pop
push
stos
rcrl
xchg
int3
imul
in
pop
dec
sti
int3
cmp
mov
inc
sbb
loope
lods
push
int
xchg
mov
imul
shrl
mov
es
shll
imul
je
mov
loopne
mov
lock
mov
jle
movsb
std
add
mov
int
enter
pop
mov
jg
imul
fldt
or
cmp
sub
mov
add
dec
sub
jp
leave
push
mov
dec
dec
mov
dec
mov
jl,pt
bound
das
mov
ja
pop
scas
adc
into
ljmp
xor
out
mov
dec
pop
dec
jno
loop
cmp
lret
jge
mov
cmp
jo
inc
push
pop
jecxz
add
leave
rcr
mov
and
hlt
ds
xchg
and
or
dec
in
xor
mov
mov
mov
xor
psrld
inc
outsb
cmpb
mov
xor
ret
das
push
das
jmp
and
dec
fmull
lea
and
aad
xchg
sub
dec
stos
jl
fs
mov
lods
sti
les
fdivrs
mov
mov
test
cld
and
mov
jle
clc
in
out
cmp
xor
sti
adc
and
hlt
cld
pop
and
mov
loopne
mov
imul
sbb
push
out
inc
mov
pop
je
sub
cmp
loope
stos
add
xchg
testb
test
out
arpl
sub
rclb
push
cmp
inc
fistpl
dec
dec
iret
adc
mov
les
push
and
inc
cmp
sub
mov
popf
mov
add
mov
out
pushf
fldl
xchg
sub
sti
push
cmp
mov
out
fiadds
pop
push
cmp
leave
ret
outsb
into
popf
push
nop
xor
jns
nop
xor
mov
sub
jnp
dec
mov
xchg
gs
jo
mov
add
sub
pop
cmc
mov
pop
iret
roll
outsb
mov
hlt
adcb
insl
fbld
mov
sub
adc
stc
mov
fldt
xor
stos
push
data16
mov
rorb
addb
cmpsl
jecxz
nop
jnp
adc
xchg
sbb
imul
aas
loope
xchg
cmp
inc
fldt
sbb
or
sub
mov
aad
or
xchg
mov
pop
push
aad
adc
jmp
sub
jge
fldcw
ss
jo
insl
das
xchg
mov
mov
jg
add
aaa
pushf
sub
je
loope
push
data16
push
rorb
repz
mov
add
loopne
sbb
test
flds
xorb
inc
dec
jnp
inc
lds
mov
cmp
mov
stos
stos
or
push
addr16
les
add
mov
inc
jle
rclb
outsb
daa
or
dec
push
cwtl
mov
pop
scas
pop
or
or
adc
imul
adc
mov
mov
or
cmpb
jnp
ret
mov
aas
ret
jb
dec
repz
int
sbb
lods
lds
jae
adc
icebp
lods
and
scas
out
or
lds
ss
sub
mov
pop
xor
pusha
fimuls
cld
les
imul
sub
sub
outsl
into
lret
jmp
jae
ja
leave
lods
mov
or
mov
pop
push
sbb
inc
xchg
cmp
loop
pusha
inc
in
mov
iret
daa
orb
mov
jno
fsubl
pushf
imul
gs
cmp
mov
adc
outsb
aas
sti
push
dec
sbb
jnp
call
test
inc
xchg
idiv
xchg
sub
lret
les
inc
sub
jnp
pop
sti
ficomps
mov
lcall
les
imul
mov
mov
in
sub
jo
xchg
adc
aad
jne
faddp
mov
mov
xchg
mov
popa
push
mov
sub
dec
jnp
ficoml
aas
inc
push
inc
fcompl
jg
or
sub
xor
mov
or
shrl
push
push
insb
cs
fisubrl
cwtl
push
enter
scas
mull
movsl
mov
sti
fs
imul
pop
outsl
pusha
jns
dec
push
xor
fmull
xor
jmp
lods
shll
scas
mov
enter
test
fidivrl
sbb
stos
sub
jle
and
mov
mov
add
inc
orl
pop
arpl
jge
or
xchg
mov
pop
mov
shrb
xchg
pop
dec
imul
dec
xchg
call
ja
movb
dec
incl
xchg
mov
ss
and
inc
js
aad
into
or
ficoml
test
dec
dec
stc
jle
mov
mov
stc
test
mov
mov
les
dec
jl
inc
icebp
fildl
add
out
sbbl
outsl
sbb
imul
les
sub
outsb
sub
push
pop
push
imul
cmpsb
adc
test
jmp
adc
sbb
into
mov
addr16
jp
movsb
ret
or
std
mov
or
mov
es
insl
int3
xor
lea
pop
sbbb
fcompl
mov
or
push
xor
mov
cmc
pop
xchg
adc
jg
adc
pop
mov
stc
aaa
mov
push
cmpl
out
push
pop
mov
arpl
or
repz
cmc
pop
subb
in
sbb
daa
xor
mov
pop
je
in
int
and
ret
inc
pop
loopne
dec
mov
adc
test
rorl
sti
xchg
mov
call
loopne
mov
sti
imul
push
push
sarl
leave
push
push
add
ja
into
loop
repnz
std
aas
dec
int
gs
xorl
jb
shrb
add
add
mov
cmpb
leave
imul
push
pop
imul
mov
cs
jb
int3
lret
mov
hlt
int3
test
test
or
fst
iret
mov
ss
pusha
mov
cld
mov
lds
scas
sbbl
mov
int3
pop
stos
inc
in
mov
inc
pusha
sub
sub
cltd
bnd
adc
ds
inc
mov
sarl
bound
daa
std
jmp
dec
pop
pop
or
fldenv
into
inc
loopne
sti
test
imulb
mov
dec
leave
push
mov
lahf
or
jl
in
lahf
arpl
scas
sub
adc
add
insb
jmp
hlt
leave
adc
outsb
pop
push
dec
jns
mov
sbb
sbbb
rcll
inc
cmp
dec
std
cmpsl
jae
mov
test
jl
dec
xor
mov
adc
mov
inc
pop
lods
adc
mov
ret
jnp
fists
in
mov
and
mov
xchg
psrad
aas
mov
imul
pusha
test
pop
jmp
enter
sti
sbb
sub
es
decl
push
xchg
pop
mov
push
rcl
out
leave
cmp
and
arpl
movsl
push
imul
pop
and
aam
scas
fsubrl
push
jns
roll
cwtl
int
decb
jg
add
in
xor
jae
outsb
pop
jmp
rcr
fstpl
mov
adc
cmpsb
shrb
insb
enter
push
lret
int
inc
mov
jmp
or
push
cmp
mov
les
mov
les
test
cmpl
xor
jge
pop
int3
shrb
decl
dec
xor
jle
loopne
jmp
rcll
sti
and
mov
xchg
fs
je
sbb
adc
or
and
mov
jno
mov
int
pop
add
xchg
xchg
xchg
ss
push
loop
adc
faddl
pop
stos
mov
cmp
inc
dec
pop
cmp
iret
sbb
push
cmp
jmp
cmp
dec
push
cmp
jmp
into
repnz
jmp
inc
mov
push
xchg
in
mov
out
std
loopne
and
adcl
fldl
mov
ds
adc
fisubs
mov
mov
enter
addb
jo
les
test
mov
jb
xchg
imul
cmp
fstl
ret
nop
sub
inc
dec
mul
adc
mov
xor
mov
sbb
push
xlat
lret
dec
inc
adc
nop
lahf
or
and
insl
adc
and
jle
lahf
es
push
stos
jbe
jmp
jae
adc
mov
jnp
pop
inc
cltd
sub
adc
test
mov
lahf
jbe
mov
add
lds
xor
into
lcall
outsl
ja
push
add
push
mov
cmp
jg
int3
in
into
jb
or
cld
xor
enter
xchg
insl
ret
ds
mov
pushf
xchg
mov
mov
roll
jnp
lock
or
mov
je
imul
imul
inc
fwait
xchg
jne
push
icebp
push
out
test
push
loope
cmpsl
and
xchg
addr16
ret
mov
inc
jae
dec
movsl
push
jp
ds
arpl
push
fstpl
fldt
fldl
mov
jb
aaa
xchg
inc
pop
in
aad
fs
lods
faddp
mov
mov
inc
xchg
imul
sub
add
push
inc
ffree
mov
in
fistpl
loope
ds
sbb
bswap
int3
sarl
insb
shrl
sarl
sarb
lret
add
movsb
stos
inc
cmp
ret
mov
sub
pop
and
call
jo
xor
mov
ja
lea
dec
jg
mov
lahf
fnstenv
cld
test
add
xor
pusha
test
inc
mov
out
lret
xchg
ss
loopne
jmp
popa
test
add
jb
rorb
cmp
fimull
xchg
ja
dec
xor
test
add
repz
mov
sbb
or
mov
xchg
mov
in
andnps
mov
lods
pop
insl
ljmp
mov
lahf
pushf
mov
xchg
pop
inc
mov
and
jne
xchg
dec
lods
or
cmc
repnz
orb
and
cld
popf
inc
sub
out
cld
cmp
in
inc
icebp
xchg
mov
sahf
imul
xchg
rorl
mov
nop
mov
ror
sub
stos
mov
ret
jmp
test
pop
repz
fcompl
mov
sbb
neg
jnp
imul
push
out
or
push
mov
pop
xor
div
mov
rolb
std
dec
cli
cmp
cld
push
imul
sub
loopne
fwait
movsb
sarl
pushf
push
xor
and
add
jg
daa
shrb
or
pusha
sub
std
hlt
cmp
dec
sub
ret
jno
push
lods
mov
pop
sub
cmp
mov
orb
pusha
lock
add
insl
sub
push
add
js
mov
mov
mov
dec
cmp
loopne
dec
data16
shll
push
js
inc
mov
jo
and
sub
mov
inc
pusha
lret
sbb
dec
xor
inc
bound
in
mov
xchg
je
or
sbb
aas
int
and
mov
loop
mov
fstl
push
popf
popf
aam
call
lret
add
sub
test
lods
cmp
jne
stos
out
int
leave
mov
sub
jecxz
idivb
insl
pushf
hlt
inc
xchg
mov
push
cwtl
mov
or
addb
ljmp
add
mov
push
icebp
mov
jno
push
adc
data16
xor
call
jle
loope
movsb
jmp
mov
stc
jns
add
mov
push
adc
cwtl
adc
das
fstps
aam
push
xor
cmpsb
aam
xlat
lds
dec
sub
test
lods
inc
sbb
mov
cmp
push
cmp
mov
bound
ja
xchg
pop
out
push
or
push
popa
dec
cltd
add
add
push
xchg
and
hlt
cmp
push
pushf
test
cli
jb
in
in
mov
xchg
dec
mov
js
mov
mov
fbstp
mov
fistl
stos
jmp
ds
shll
clc
bound
test
mov
mov
xchg
jne
shl
and
mov
addb
or
in
imul
lods
enter
push
xchg
xor
pop
jl
cmp
in
pop
cltd
aad
int
adc
cmp
gs
loopne
insb
insb
ljmp
sub
loopne
in
dec
popf
cld
xchg
sbb
cltd
es
push
dec
jecxz
jns
xchg
cltd
pop
cmp
nop
inc
imul
sub
in
outsl
mov
lret
ds
cmp
xlat
mov
cmc
int3
movsb
je
les
jbe
lret
stos
scas
js
xor
add
adc
pop
mov
pop
pop
loope
call
xchg
push
xor
or
jmp
scas
mov
jne
addl
outsl
js
pushf
sti
mov
dec
cltd
aas
mov
mov
in
nop
loop
andb
lret
sub
push
mov
out
or
jecxz
out
icebp
nop
nop
jp
xchg
sub
adc
into
sbb
push
mov
rcrl
pop
sti
push
and
shlb
ret
aaa
enter
and
adc
pop
push
das
jg
push
in
cmp
and
out
shr
xchg
popf
cld
cmp
pop
cltd
lret
jecxz
and
aam
xor
add
loope
and
and
cmp
mov
cmp
fcomps
pop
movb
mov
in
jnp
push
sub
mov
cld
sarl
sarl
lods
dec
jle
rorb
in
xchg
int
mov
add
or
rorl
scas
mov
stos
push
xchg
fsubrl
cwtl
dec
inc
inc
or
xor
cmp
mov
or
add
cmp
fcomip
and
mov
mov
add
data16
jbe
cmp
test
or
js
aas
pop
mov
mov
lea
add
sub
pushf
or
enter
push
stos
xchg
in
pop
push
mov
cmp
aas
push
mov
xor
arpl
cmp
mov
cli
mov
shll
add
push
add
xchg
and
roll
or
add
test
and
pop
inc
jns
test
mov
lds
jo
push
xchg
mov
mov
sub
cltd
out
jp
mov
cmp
pop
push
mov
mov
repz
ljmp
out
xor
mov
mov
add
fldpi
jge
daa
pop
mov
mov
push
enter
fstp
xor
lret
or
jmp
cld
into
ds
int
enter
stos
mov
mov
loope
mov
addr16
sbbl
push
dec
fimull
into
cmpsb
mov
xor
pop
stos
sbb
jne
iret
pop
cmc
jp
mov
push
int
add
push
and
out
mov
sahf
mov
incl
jne
enter
fnstcw
das
mov
int
xchg
or
lret
cwtl
pop
sbb
xor
mov
testl
add
popa
mov
lea
push
mov
pop
pop
jp
jmp
mov
sbb
loop
cs
fisttpl
aam
mov
stos
mov
xchg
jecxz
stos
xchg
push
bound
mov
scas
arpl
or
pop
ds
dec
lcall
jle
jae
sbb
and
movsb
insb
mov
rcll
out
mov
mov
or
mov
jo
mov
pop
testb
jl
mov
jge
fadds
test
in
popa
mov
test
mov
ljmp
in
insb
in
fiaddl
sub
xchg
cwtl
push
sahf
cwtl
cmp
pop
scas
mov
fildll
push
cmp
mov
add
xchg
sub
adc
test
std
and
pop
fdivs
sub
sbb
insb
cmp
cwtl
adc
in
jnp
jle
cmp
pop
dec
pop
arpl
jne
into
jno
pop
sub
fnstsw
fcomi
mov
mov
insb
push
lret
or
push
cmc
fdivrp
pop
in
pop
mov
into
js
in
orl
jmp
addr16
hlt
and
xchg
lfs
daa
inc
stos
outsb
jnp
jnp
push
sub
decl
inc
pop
jg
jae
push
sub
pop
dec
enter
inc
dec
jnp
add
xchg
cmp
xor
fsubl
fwait
jne
je
inc
mov
mov
jns
gs
push
add
insb
jmp
and
cmp
xchg
or
sti
xor
mov
dec
repnz
inc
dec
push
mov
inc
insb
enter
mov
fidivrl
xor
nop
arpl
mov
ds
cmpsl
sti
xchg
inc
cmc
shlb
push
dec
popf
jge
ja
aas
stos
cwtl
in
sbb
jle
imul
pop
dec
sarl
cmpsb
or
pop
pushf
lret
roll
fisubrs
xor
fsubs
lods
sbb
mov
xchg
idivb
orl
cmpsb
jg
mov
xchg
inc
ljmp
pop
xchg
and
lret
test
cli
jmp
subl
fsubrs
lds
jle
fimuls
enter
shlb
xchg
pop
or
in
add
sub
pop
test
pushf
movsl
jae
add
jl
imul
mov
mov
lret
add
cwtl
das
dec
divl
push
fstp
push
insl
aam
enter
sbb
pop
cmp
xor
js
adc
dec
call
in
das
pusha
lods
lds
mov
dec
int
cmp
fmuls
pop
test
xor
add
push
cmp
rorl
jnp
dec
and
or
shlb
pushf
jae
pop
pop
loop
sub
test
ds
pop
xchg
insb
ja
push
je
in
sahf
fcomps
call
or
sub
clc
lcall
push
ficoms
lods
in
cltd
shlb
sbb
sbb
call
sub
das
bound
pop
bound
test
push
mov
imul
sbb
aaa
push
enter
xchg
inc
sbb
decb
cli
pop
cltd
or
pop
mov
and
aaa
sub
sti
lret
xor
out
sub
jne
jle
push
shll
adc
iret
fcmove
mov
mov
and
into
adc
insb
orl
inc
stos
mov
xor
nop
sbb
outsb
jmp
dec
mov
and
xor
test
xchg
out
mov
mov
xor
xchg
dec
dec
or
mov
mov
adc
jno
ret
push
mov
movsb
mov
out
xor
or
and
outsb
cld
in
xchg
rclb
inc
xchg
sbb
xchg
popf
aas
and
add
jnp
mov
ss
fistl
jnp
pop
ljmp
sbb
add
into
sub
lods
outsl
stos
jne
xor
mov
ljmp
mul
sbb
movsl
pop
mov
loop
adc
scas
pushf
dec
adc
pop
and
add
movsb
xchg
jne
repz
sub
or
sbb
shlb
out
lods
fprem1
inc
scas
pop
scas
or
lds
mov
add
mul
lahf
cld
lcall
loop
sbb
les
dec
dec
cld
cmp
lock
sbb
inc
push
jge
jmp
sub
out
add
mov
es
mov
sbbl
in
cmp
add
in
xchg
pop
cbtw
pop
and
outsl
das
imul
or
cld
push
cld
enter
outsb
lock
mov
fcmovne
push
inc
jae
int3
movsl
mov
add
push
outsl
pop
lds
add
ret
addl
xor
and
mov
pop
jno
or
cwtl
sar
insb
lret
xor
jbe
and
mov
pushf
lahf
pusha
and
je
cs
aad
mov
sub
fcmovnu
je
fcmovnb
cmp
aam
lods
jnp
sbb
or
mov
mov
test
xchg
outsb
pop
ror
mov
clc
mov
test
xlat
mov
call
sbbb
mov
fisttpl
mov
lcall
cli
sub
js
cwtl
daa
sbb
incb
dec
mov
test
mov
shlb
jmp
add
adc
xchg
nop
add
adc
xor
mov
shl
xchg
pop
mov
sub
jns
xor
add
loopne
fnstcw
mov
sbb
adc
mov
test
into
inc
jno
pop
popa
push
out
pushf
andb
repnz
and
pop
cmpl
pop
push
stos
xor
test
lea
cwtl
sub
scas
and
fwait
adc
cmp
lods
insb
pop
mov
jb
jae
addl
lods
std
xchg
popa
xchg
in
adc
hlt
mov
test
in
xchg
mov
xchg
loopne
dec
dec
pop
subl
sbb
clc
mov
aam
fisubl
xchg
mov
xchg
jne
mov
fidivrs
jl
ret
and
mov
cmp
mov
mov
arpl
jo
add
or
pop
cmpl
gs
and
mov
push
xchg
push
test
andb
xor
js
jmp
cmp
decl
shrb
pop
movsl
call
jmp
pop
lret
mov
jg
jbe
call
fldcw
jmp
add
pushf
xor
les
xor
mov
sti
xchg
insb
loope,pt
sub
or
es
movsb
fsubs
dec
cmp
pusha
sbb
enter
pusha
es
mov
cmpb
cmp
aam
inc
add
and
testl
dec
imul
cmp
push
jne
das
cmc
mov
rcrb
mov
add
adc
jno
pop
dec
adc
cs
mov
push
andl
cmp
push
mov
cmp
push
ret
mov
push
icebp
sbb
nop
sub
xchg
pop
fwait
add
inc
stc
loope
sarb
adc
sti
cmpsb
jae
mov
xchg
es
or
mov
push
add
cwtl
imul
adc
mov
leave
iret
jge
push
outsl
std
test
push
mov
fcoml
into
daa
das
and
mov
fsubr
out
lret
sbb
rorl
in
mov
sub
fimuls
mov
clc
push
in
mov
sub
ffree
dec
cltd
mov
popf
inc
or
repz
scas
icebp
out
or
or
xor
test
push
push
xor
pop
add
in
sbb
inc
cmp
arpl
cmpsl
std
xlat
pop
mov
sub
mull
dec
mov
lcall
adc
fldenv
pushf
inc
pop
pop
std
lcall
ret
aas
mov
std
adc
push
ja
jge
cs
inc
xchg
bound
shlb
xchg
add
test
jo
loop
sub
sbb
enter
insb
fwait
cli
pop
jo
push
insb
dec
lods
jl
pushf
fisubs
cltd
pop
daa
push
xchg
enter
stos
in
adc
inc
fists
lods
stos
popf
in
xor
jl
lods
rcr
int3
push
imul
sub
inc
push
mov
icebp
xchg
jp
jge
push
or
sub
in
mov
fidivrs
leave
fcom
or
cmpsl
test
aaa
clc
xchg
mov
mov
xlat
dec
pop
lods
cmp
xchg
push
mov
lret
in
push
mov
inc
mov
jmp
cs
lcall
hlt
push
movups
push
pop
cli
mov
xchg
inc
mov
dec
sar
add
shrl
mov
popf
lahf
in
fstps
aaa
repnz
cli
pushl
mov
and
or
repnz
inc
sbb
mov
repnz
add
jo
pop
sahf
ret
shrb
mov
arpl
idivl
adc
arpl
ja
xor
cmp
pop
movsb
daa
aam
and
xorb
jl
jp
adc
fs
pop
dec
adc
push
jg
mov
stc
pop
pop
sbb
sub
lret
inc
jns
and
bound
aad
pop
mov
xchg
add
aas
insl
pushf
or
inc
icebp
lret
sub
into
test
outsl
shll
lods
sub
fcomps
cltd
in
lods
filds
adc
add
fildll
push
mov
sub
sbb
and
cmpsl
mov
xlat
cs
mov
pop
hlt
sbb
jl
push
pusha
pop
mov
stc
mov
mov
pop
inc
mov
rol
cs
pop
out
lea
call
jl
pop
shr
sub
addr16
push
jns
jge
lods
mov
adc
sbb
jb
jns
lock
imul
pop
adc
cmpsl
rclb
aaa
insb
ljmp
aad
cmpsb
divl
or
push
sbb
jmp
arpl
insb
dec
mov
in
jge
add
mov
ror
mov
sbb
mov
lods
mov
ds
fisubrl
mov
sub
ss
jg
mov
cmp
mov
push
pusha
aam
pop
cmp
push
rcr
aas
std
jle
sub
and
push
call
pop
cltd
stc
mov
pop
js
ret
lcall
stos
pop
jb
ljmp
sub
ret
sti
or
out
ret
xchg
jl
js
in
dec
enter
xchg
sub
xchg
shl
dec
rcr
push
aas
cmc
repz
jge
mov
inc
add
or
aam
mov
inc
cmp
test
push
filds
add
jl
add
cmp
shl
or
daa
xorl
xchg
movsl
push
ljmp
dec
jle
stos
mov
js
aas
loop
testb
sbbb
faddl
xchg
cltd
mov
out
cmp
jmp
mov
cmpsb
mov
add
es
cmp
xor
lods
mov
mov
sbb
cmp
adc
or
xchg
xor
dec
sub
sbb
out
mov
ret
mov
xlat
sub
cmp
mov
rol
popa
add
fstl
mov
sub
neg
ja
fadd
sbb
popl
mov
fstpt
scas
xor
jo
xor
jbe
mov
or
xor
js
dec
cmp
rol
sub
sub
test
test
sbb
dec
popa
add
push
cld
xchg
xchg
fs
mov
pushf
gs
mov
sbb
pop
push
sahf
js
dec
popa
popa
adc
sub
sub
pop
xchg
or
dec
jecxz
sbb
pushf
xchg
std
cmp
mov
inc
stos
dec
dec
jo
pushf
lea
mov
mov
and
push
aas
icebp
outsb
push
push
rorb
ret
push
add
aad
fdiv
test
or
dec
out
cltd
js
push
cwtl
mov
lahf
lret
or
adc
mov
add
xor
leave
gs
xchg
dec
ds
aam
dec
sub
xor
xor
rclb
xor
dec
shlb
nop
js
ror
mov
insl
xchg
cmp
movsl
mov
push
loop
cmp
push
sbb
sbb
and
or
stos
cwtl
mov
adc
test
and
pop
mov
addr16
arpl
jle
movsb
lock
pop
imul
cmp
out
cwtl
leave
mov
lea
mov
cwtl
loopne
cli
in
xor
xchg
test
mov
xchg
rolb
push
add
ljmp
adcb
mov
movsb
jle
mov
stc
fwait
decl
pop
das
out
jo
dec
hlt
sbb
les
popa
jecxz
cwtl
hlt
fdiv
xchg
insb
mov
mov
jae
pop
cld
mov
es
sub
and
test
stos
mov
ljmp
dec
mov
jp
jae
pushf
stos
inc
loopne
or
ss
in
inc
cwtl
fidivl
cwtl
int3
mov
dec
test
clc
loop
push
jae
jo
pop
push
add
hlt
push
and
sub
icebp
mov
fucomp
paddsb
clc
addr16
insb
mov
cmp
cli
ds
push
jp
or
rcr
test
jae
push
je
cli
fmuls
and
and
mov
jbe
push
rcrb
inc
xor
clc
loope
test
leave
inc
mov
stc
and
call
push
cmpsl
mov
pushf
mov
imul
mov
push
cli
pop
cltd
xor
divb
cli
fwait
shll
jg
cmp
fistpl
push
mov
push
push
xchg
inc
fsubrl
jmp
mov
bound
outsl
jo
aad
insl
lea
sbb
sbb
test
xchg
sub
mov
cld
mov
cmpsb
loope
mov
cmp
mov
pushf
outsl
xchg
mov
test
inc
sbb
and
test
xchg
rcrb
std
les
pop
push
mov
or
imul
in
mov
ds
and
rcl
nop
jns
and
cmp
rol
inc
pop
sbb
mov
xor
inc
mov
or
scas
scas
jle
pop
dec
xchg
or
aad
inc
cli
pop
in
mov
jbe
cmp
fldl
and
sub
xchg
add
mov
add
frstor
jmp
int
mov
test
cmpsb
mov
dec
popa
pushf
xor
push
mov
fidivrl
cltd
or
jae
std
into
dec
sub
fsubs
and
cmc
shrl
inc
call
push
clc
jg
arpl
movsl
jecxz
add
mov
inc
test
dec
fcomps
sub
fistpll
fnstenv
ja
mov
inc
iret
dec
cmp
cmp
mov
xor
or
inc
push
sub
rep
jns
mov
in
mov
iret
push
lods
add
xorl
lds
xor
xchg
push
dec
cmp
loopne
test
daa
shrl
loop
mov
add
mov
xchg
xchg
mov
data16
in
push
std
mov
fcmovnb
icebp
stos
jno
stos
das
and
fiaddl
xor
addl
mov
popf
lock
fimuls
jns
outsl
icebp
sub
pop
sub
xor
sbb
dec
stos
xchg
sub
or
xor
mov
mov
js
daa
mov
pop
sub
pop
stos
addr16
lcall
dec
imul
movsl
cld
or
adc
cwtl
js
pop
adcl
push
pop
pop
pop
pushf
int3
lock
jns
ja
icebp
jle
and
xor
xchg
std
cmp
cmp
jmp
mov
fcoms
pop
mov
subb
inc
sub
mov
mov
hlt
add
sbb
cmp
inc
ss
pop
lods
das
sbb
repnz
dec
mov
scas
sub
pop
pop
iret
lret
inc
xchg
sbb
sub
or
jnp
mov
imul
das
sahf
cwtl
icebp
add
dec
ja
fld
inc
push
sub
loop
lahf
dec
mov
bound
std
or
and
xchg
or
cmpsl
fs
push
nop
sub
mov
dec
bound
ss
cmpsb
je
scas
cmp
xor
adc
push
and
jp
outsb
mov
imul
inc
cmp
int
or
sub
rorb
push
mov
sub
icebp
int
xor
popf
dec
or
lods
aam
insb
xchg
rorl
inc
repz
mov
sbb
js
loop
repnz
pop
or
mov
and
and
push
pop
les
subb
out
lret
sbb
or
mov
mov
faddl
lret
inc
loope,pn
in
jecxz
shl
jno
sbb
insl
xor
jp
popl
insl
daa
push
mov
add
aas
arpl
shll
loopne
dec
mov
push
ffreep
push
or
adc
dec
jecxz
lret
push
movsb
daa
cmp
mov
mov
lods
clc
sub
inc
packsswb
enter
cmp
lds
dec
int
adc
xor
push
mov
scas
cmp
insl
jnp
fs
int
push
jb
pop
pop
xor
mov
jno
push
lret
ja
daa
movsl
xor
sub
mov
pusha
mov
mov
into
cmp
inc
cmpsl
incb
sbb
mov
fstl
mov
repz
cmp
sbb
hlt
adc
cmpsb
roll
lods
adc
xor
scas
mov
outsb
iret
pop
pop
test
rcrl
mov
mov
in
jecxz
mov
push
fwait
ror
xor
pop
mov
ss
movsl
pop
add
fdivrs
in
into
inc
cmp
push
mov
jl
stc
mov
ja
xchg
jno
fisubl
mov
pop
enter
test
push
rorb
into
sahf
test
xor
test
fildll
cmc
xlat
lahf
and
push
xchg
ror
movsb
push
or
mov
cmp
cmp
sbb
enter
pop
popf
ret
sub
lret
pop
ret
sbb
xor
inc
mov
scas
xor
shl
add
icebp
jno
add
pop
xor
cmp
cltd
rclb
inc
test
mov
ret
dec
lahf
cmpsb
in
fstpl
dec
aaa
orb
mov
and
cmp
rcll
xchg
iret
jecxz
adc
dec
aas
mov
push
sti
ficomps
lea
jne
pop
or
xchg
xchg
daa
andl
sub
xchg
out
decl
pushf
fldl
shrb
out
pushf
mov
inc
xchg
mov
test
leave
jl
add
sub
cmpb
daa
sbbb
test
or
cli
mov
int3
pop
ret
xchg
sahf
mov
adc
jnp
mov
sahf
or
sub
mov
or
pop
stc
xchg
sahf
aad
xor
addb
cmp
or
xor
jno
inc
lds
cmp
lods
out
jae
pusha
cli
dec
add
push
fwait
pop
jge,pn
idivl
rorl
lea
std
cmp
loop
adc
ja
xchg
cmp
mov
mov
mov
pop
push
lods
sbb
outsb
ret
shrl
push
jne
inc
dec
lock
cwtl
enter
xchg
pop
push
enter
mov
dec
pop
lahf
cmc
mov
cmp
mov
mov
or
icebp
jne
adc
pop
mov
movsl
sub
or
insb
mov
shrl
mov
jecxz
cmp
mov
xor
or
push
adc
sub
hlt
cmp
add
or
cmp
cmpsb
lods
negb
test
pop
inc
xlat
loopne
xchg
push
int
xchg
dec
es
loopne
push
cwtl
jns
pop
imul
xor
call
sbb
xor
sbb
xchg
cmp
xchg
push
pop
testb
test
frstor
xchg
insl
movsb
ficompl
inc
mov
pop
ret
adc
xchg
pop
int3
mov
push
mov
int3
insl
and
fcmovb
aaa
or
mov
sub
mov
loope
xchg
ret
mov
movsb
sbb
jo
jb
stos
dec
test
lds
adc
jb
sbb
je
or
adc
enter
in
jae
or
outsl
mov
in
cmp
inc
cwtl
xor
cmp
lds
dec
scas
mov
repz
ja
push
shrb
adc
imul
adc
cwtl
shl
jae
insb
mov
addr16
aas
inc
or
fistpll
shr
incb
or
xlat
outsl
insb
std
in
js
ret
scas
sub
int
fs
jp
mov
loope
jo
in
nop
sub
int3
jnp
test
inc
stos
mov
jg
jg
int
cmp
test
fucomp
adc
mov
inc
cltd
inc
dec
xchg
iret
or
mov
sub
cmc
lock
loope
int3
push
fwait
outsb
enter
sbb
pop
pop
repz
fld
jl
inc
mov
sbb
inc
fwait
cmp
insl
mov
mov
aas
pushf
sbb
cmp
xor
je
dec
decl
cs
add
loopne
stos
mov
inc
pop
xchg
cmp
in
and
pop
xchg
pushf
test
push
cli
int
jmp
push
lret
sbb
sub
dec
sbb
inc
sbb
mov
out
mov
aad
hlt
pop
lret
rorb
sbb
xchg
cmp
loop
mov
inc
mov
shrb
adc
lods
out
subl
lds
cmp
mov
pop
int3
lds
cmp
dec
ret
icebp
dec
and
movsb
xor
jmp
lahf
and
xor
movsl
fnstcw
pop
sbb
int
inc
iret
es
insl
ds
mov
mov
scas
ret
cmp
mov
bound
mov
push
out
pop
push
sahf
xchg
call
jb
movsb
adc
sbbl
test
daa
mov
rol
cmpsl
inc
or
and
repz
jmp
push
mov
fld1
pushf
and
jmp
push
pusha
mov
jns
inc
push
adc
and
and
cmc
mov
sub
inc
mov
test
jnp
cmp
dec
movsl
pushf
jo
in
pop
xchg
enter
and
dec
test
loope
pushf
or
imul
inc
cmp
lret
push
mov
inc
jecxz
cmpsb
mov
xchg
stos
aam
je
cmp
mov
inc
int3
fsubrs
pop
ljmp
lds
orl
mov
pop
ss
xor
clc
inc
shrb
cmp
mov
rcl
mov
test
add
dec
shll
xchg
and
ds
jo
mov
mov
call
fcmovnb
popf
inc
rcrl
and
add
loop
insl
and
pop
push
push
fwait
mov
popl
int
jb
push
fisttpl
mov
pop
fldcw
sti
stos
int3
push
daa
std
popf
movsl
mov
push
negl
rcr
xchg
dec
outsl
pop
aas
adc
loop
fcmove
outsb
movsl
mov
xchg
pop
xchg
mov
jl
stos
pop
mov
mov
sub
mov
and
lods
call
addr16
fstps
ds
or
and
add
adc
xor
mov
jp
into
dec
iret
push
lret
cmp
push
lcall
pop
shrl
cmp
loop
shrl
pushf
pop
movsl
scas
int3
mov
out
dec
aas
push
hlt
add
in
push
pop
mov
or
xchg
mov
or
frstor
cmp
cmp
sahf
pop
dec
push
cmp
cmp
imul
bnd
outsl
cmp
in
movsl
scas
divl
test
or
pop
aas
leave
mov
and
loopne
mov
adc
and
mov
jecxz
inc
pop
sbb
cbtw
std
add
jg
sarb
cmp
sub
test
and
movsb
out
pop
stos
aad
mov
andb
cmp
mov
sti
sbb
pop
ljmp
jae
adc
rcl
fcmovnb
sub
push
ret
in
cld
sub
dec
insl
xlat
sub
cmp
cltd
in
aam
sahf
leave
ret
test
dec
add
enter
daa
movb
push
stos
gs
mov
dec
imul
ja
out
sti
fisubl
mov
add
dec
fists
jecxz
bound
rcll
test
rol
cmp
xchg
in
jp
rcl
ja
in
dec
addr16
jo
cmp
loope
or
dec
inc
adc
pop
icebp
add
sbb
rol
sbb
cld
int
jb
xchg
in
imul
mov
cmp
movsb
sbb
push
mov
rorb
sbb
pushf
leave
jnp
mov
push
out
or
in
fisttps
loope
cmp
mov
pop
inc
or
mov
sar
fs
adc
cmp
in
inc
cmc
fidivs
in
decb
add
outsl
pop
fisttps
mov
sahf
mov
aas
mov
pop
jl
rol
pop
nop
fwait
mov
orl
or
gs
rcrb
lods
movsb
inc
ja
lcall
xor
mov
pop
add
js
decl
data16
dec
std
push
jb
pop
jg
add
mov
lret
jl
xcrypt-ofb
cmpsl
stos
movsb
les
in
mov
popa
dec
pop
enter
sub
fcompl
jne
mov
ret
popa
xor
les
cmp
push
lock
leave
adc
jge
push
bound
popa
push
cmpsl
cmp
push
jnp
or
sti
inc
fdivl
stos
dec
adc
arpl
cmpsb
sub
jnp
adc
enter
xchg
movsl
notb
adc
hlt
pop
cld
rolb
lret
cmpsb
sarb
sbb
pop
ds
jns
hlt
adc
or
mov
pop
insb
ss
push
roll
push
jle
movsb
cmp
fidivs
rorb
hlt
bound
or
xchg
jp
push
pop
inc
int3
cmp
xchg
icebp
fsubrl
loopne
dec
or
xchg
rcrb
push
test
imull
fldl
mov
lret
and
lahf
xchg
xchg
lcall
or
lods
adc
sbb
dec
aas
aam
iret
cmc
repnz
leave
fucomp
lahf
jnp
aad
addr16
cmpsb
inc
push
aaa
sahf
shlb
mov
insb
adc
cmc
mov
add
loope
aad
leave
test
cmp
jns
subl
popa
aas
mov
push
outsb
inc
or
pusha
adc
out
cmp
xor
insl
add
fisubrl
and
in
cmp
jle
les
and
dec
mov
fs
imul
cmp
int
pop
push
or
jle
add
jecxz
mov
aas
lods
inc
loope
in
mov
jnp
mov
roll
addb
sbb
int3
adcl
mov
push
stc
sub
es
inc
pop
add
pop
mov
mov
lea
mov
sahf
xor
adc
or
into
mov
mov
inc
movsb
shl
xchg
rcrb
pop
jno
sti
int3
cli
adc
push
dec
cmp
dec
les
cmp
insb
aad
xchg
mov
fwait
lahf
xor
popf
lds
aam
add
sbb
jns
nop
sub
movsb
mov
adc
stos
mov
add
pop
clc
lock
ja
ret
popa
or
xchg
adc
and
lret
mov
mov
push
xchg
cmp
icebp
out
adc
push
push
lret
and
jbe
xor
jecxz
add
push
lock
add
sub
imul
mov
push
sbb
stos
pop
fidivrs
stos
jl
adc
leave
mov
lods
xchg
enter
aas
sub
fiadds
add
mov
sbb
movsl
inc
mov
push
in
incl
orb
mov
xor
push
or
inc
paddsw
and
and
dec
movsb
fisttpll
fsubrs
sub
into
js
mov
xor
add
shl
cmp
jno
mov
add
adc
adc
sub
call
jmp
shll
mov
jbe
std
mov
adc
hlt
clc
add
fdivr
mov
call
mov
push
movsl
enter
bound
lcall
mov
inc
xchg
mov
mov
cwtl
imul
inc
pop
negb
xor
inc
add
jge
test
cmp
pop
push
mov
inc
xchg
fnsave
leave
sub
mov
addr16
and
dec
xchg
cld
addr16
mov
lahf
shl
cmp
sbb
pop
or
push
lds
jle
mov
xchg
pop
xor
pmullw
mov
jae
aaa
xchg
mov
cmp
idivb
and
fstps
lret
fcomps
xchg
push
jle
rol
dec
bound
pop
and
mov
scas
cmp
xorb
xor
scas
lcall
scas
push
adc
xlat
pop
das
ficoml
cmp
loop
fstpl
inc
das
cmc
or
icebp
out
mov
stos
ret
push
mov
pusha
inc
pop
fs
jne
insb
cmp
dec
movb
xor
jno
sub
scas
int
rorl
or
inc
mov
dec
inc
xor
mov
popf
mov
out
rcrl
dec
dec
mov
dec
dec
xchg
je
arpl
arpl
add
testb
lcall
mov
aam
and
ja
mov
gs
test
mulb
xorl
add
rclb
inc
and
mov
stos
fdivrs
jae
jno
cs
fistps
dec
pop
push
dec
leave
or
fildl
pop
sti
jmp
pop
ljmp
iret
dec
xor
mov
mov
outsl
adc
addb
dec
sub
hlt
push
addl
add
pop
add
cmc
test
xor
xchg
mov
pop
and
add
jnp
hlt
pop
xchg
cmpsb
jl
lds
sti
mov
clc
jmp
dec
cmp
loopne
lock
mov
mov
and
inc
pop
clc
xor
dec
imul
es
fstps
call
add
cld
cmp
mov
call
inc
dec
or
xchg
dec
daa
xchg
cmp
add
mov
call
mov
test
xorl
mov
pcmpeqb
adc
ret
lret
push
xchg
jle
daa
nop
stos
pop
dec
xchg
adc
pop
out
test
and
and
aas
std
mov
jge
or
jae
sub
lahf
xchg
inc
dec
lcall
pop
sahf
xchg
repnz
call
and
mov
test
inc
arpl
xor
movsl
inc
aaa
jmp
inc
ljmp
scas
popa
lret
lods
insb
mov
orl
mov
cmp
rolb
jnp
outsl
cmp
arpl
mov
add
addr16
ret
push
out
lods
and
jns
and
out
stc
or
cmpl
cmc
lret
jmp
mov
mov
orb
add
xchg
pop
cmpb
lret
push
dec
sbb
pop
add
pop
push
inc
movsl
and
bound
test
push
fiadds
sbb
enter
stos
mov
sbb
add
xchg
add
adc
int
push
add
popa
xor
adcb
lcall
push
mov
mov
lret
cmovns
das
xchg
flds
sahf
les
decb
rcrb
lret
add
jns
cwtl
pop
aam
out
add
and
dec
inc
mov
cwtl
fmul
inc
fwait
dec
cmp
or
inc
dec
cs
push
xor
lock
pushf
movsb
in
sub
dec
mov
push
mov
and
out
and
mov
stos
and
rcrl
pop
and
cmp
cmp
jns
jno
push
or
imul
and
sub
inc
int3
cmp
pop
jnp
loopne
sbb
cs
leave
movsl
sbb
xchg
cli
andl
mov
stos
mov
scas
js
int3
pop
bound
call
fstp
jg
dec
rcll
ds
mov
adc
or
inc
xlat
dec
and
push
mov
sarl
mov
or
jne
cmc
add
mov
jecxz
mov
mov
lods
das
xlat
xor
xorl
inc
daa
out
sbb
imul
lcall
add
sub
inc
stos
flds
jl
and
ficoml
push
pop
cmpb
sbb
xor
mov
xor
sbb
xchg
add
inc
push
test
jge
or
mov
out
fildl
scas
cmp
dec
mov
icebp
pusha
mov
pop
dec
xor
je
in
lods
sti
movsb
call
and
outsl
adc
pop
push
call
jecxz
and
sbb
fcmovnu
js
nop
mov
stos
lahf
push
stc
arpl
mov
out
adc
adc
sub
add
mov
jg
enter
lock
inc
enter
clc
fildl
stos
les
jge
rcrb
pop
fisubrs
push
xor
mov
mov
stc
shll
jb
fisttpll
mov
lods
lods
jne
subb
ss
jmp
pop
adcb
pop
add
add
call
shll
jbe
jns
sarb
sub
rorb
push
lcall
movsb
popf
shll
jae
mov
mov
roll
ficomps
push
lahf
push
fsubr
add
enter
xor
xchg
pushl
add
push
lods
fwait
sbb
pushf
hlt
ja
punpckhbw
in
jno
cmp
test
xor
adc
cmp
in
jnp
jnp
xchg
ljmp
sbb
sbb
std
pop
pop
mov
cmp
and
xchg
mov
mov
loope
adc
and
jg
or
fisubrs
in
jnp
je
jl
scas
movl
into
idivb
shlb
jbe
nop
cld
mov
and
and
push
repnz
and
je
aas
mov
push
cltd
int3
sbb
outsb
cmpsb
lock
pop
jns
repnz
iret
jns
jae
mov
pop
repz
movsl
dec
mov
xor
sbb
icebp
in
inc
jle
pop
mov
dec
in
jl
repz
movsl
enter
sahf
in
lods
adcb
repz
mov
jge
mov
enter
jmp
jmp
out
push
push
or
outsb
sbb
add
xor
mov
cmp
sbb
push
movsl
pop
loop
mov
mov
inc
icebp
insb
in
dec
nop
popf
push
fs
push
cmc
enter
insb
repnz
movsl
mov
add
adc
arpl
pushf
mov
lea
dec
cmp
jge
jle
xchg
mov
movsl
adc
xchg
in
pop
call
int3
or
lcall
subl
rorb
dec
sarb
mov
cld
jne
loop
cmp
mov
test
and
xor
add
inc
arpl
or
xlat
dec
add
int3
clc
aas
ja
out
loope
movsl
shlb
test
add
dec
inc
iret
les
cwtl
mov
adc
mov
mov
nop
add
roll
int
mov
adc
push
test
popa
jns
cmpsb
in
repz
cli
call
rclb
jp
adc
sbb
and
adc
dec
jp
ficomps
jmp
sub
test
inc
and
cmp
test
loopne
pop
negb
int
dec
and
add
fistpll
inc
add
sub
adc
mov
mov
lret
stos
std
cmpsb
test
in
mov
fiadds
pop
int3
cmp
in
cwtl
rol
imul
push
xor
mov
add
dec
xchg
or
ljmp
mov
xchg
das
jns
rorb
in
jae
fadds
ja
xlat
aam
jns
jge
addb
jns
dec
sub
mov
and
std
lahf
mov
ds
inc
loop
jmp
movsl
cmpsl
mov
pop
push
pop
cmp
bound
cmp
pop
pop
pop
xor
int3
fs
out
push
inc
or
jg
stos
jl
jp
pop
aad
mov
subl
sub
orl
arpl
jo
or
mov
test
add
sub
push
mov
mov
ljmp
insl
inc
jae
mov
and
mov
push
add
out
mov
and
push
fbld
and
jae
imul
popa
dec
push
inc
popf
mov
sahf
dec
ret
mov
lcall
enter
mov
in
mov
adc
stc
outsb
jle
in
cmp
test
xchg
movsb
pop
push
mov
enter
cwtl
outsl
stos
lods
add
int3
arpl
pop
rcrb
ret
xchg
scas
out
inc
jle
xchg
idivl
push
or
inc
sub
mov
and
stos
dec
pop
cmp
xchg
or
xchg
in
mov
out
loope
mov
jecxz
inc
movsb
repz
in
pop
fcomps
xchg
fisubrl
and
test
xchg
lock
inc
push
or
out
dec
inc
jmp
iret
movsb
pop
dec
lret
dec
aaa
rorl
jb
and
enter
mov
adc
add
and
mov
xchg
popf
sub
in
or
int3
in
mov
pop
subb
or
leave
sub
dec
popf
mov
push
pop
fmul
mov
sbb
adc
arpl
nop
mov
mov
test
cmpsb
mov
outsl
mov
ret
int3
roll
out
xor
sub
lcall
xorb
push
dec
int3
fdivp
hlt
lahf
cmp
inc
mov
cmp
adc
dec
lea
fcoms
cwtl
or
sub
sarl
inc
inc
aas
push
fst
roll
sub
in
push
push
loopne
stc
dec
xchg
adc
xor
loope
lock
cs
add
xchg
fcomp
mov
xor
mov
aas
das
adc
push
sub
xchg
repz
jmp
mov
dec
xchg
test
and
arpl
inc
dec
or
stos
xor
sti
inc
pop
xchg
add
cmp
push
jg
sar
lods
int3
xchg
sbb
pop
insb
dec
hlt
mov
daa
xchg
int3
popf
xor
inc
cmpb
xor
pushf
mov
dec
mov
sub
mov
cwtl
inc
cmp
pusha
push
add
cmpsb
dec
push
insl
je
push
roll
pop
inc
fidivrl
xor
adc
push
enter
jnp
adc
sti
cmpsl
inc
jnp
mov
sub
mov
rol
xor
lods
fiaddl
cld
xor
inc
jo
pop
dec
dec
fmull
fistps
push
push
inc
lret
xor
lods
cmp
daa
orl
test
xchg
jp
add
pop
je
add
out
xchg
xorb
sbb
lods
mov
jnp
pushf
lds
enter
nop
sbb
loop,pt
sahf
in
xor
xchg
nop
out
ror
pop
daa
shl
lods
pushf
cmp
push
fnop
push
xchg
je
xor
push
push
movsl
mov
dec
cltd
xchg
mov
dec
mov
xor
pusha
repnz
fcoms
loope
add
pop
enter
dec
cmp
push
hlt
or
push
adcb
test
and
pop
or
popa
vphaddwd
mov
jno
movb
jp
adc
test
sub
jg
sbb
cmpsl
and
mov
lods
aas
push
cld
std
and
lods
mov
mov
cmp
sub
fildll
sub
jecxz
pop
or
sub
jne
fstpl
add
or
jecxz
lods
push
sub
inc
mov
ds
ds
mov
inc
icebp
and
mov
mov
js
sahf
adc
and
mov
sbb
in
pop
mov
dec
mov
mov
xchg
movsb
scas
movsb
adc
jae
jae
or
out
and
jecxz
adc
mov
pushf
insb
xor
addr16
push
mov
cmpl
leave
inc
lret
aas
rcr
cmp
cs
lods
out
test
xchg
push
aad
insb
aam
jns
mov
out
movsb
inc
or
xor
in
lea
mov
movsb
pushf
inc
xchg
subb
aaa
ret
and
inc
ficompl
cmc
stos
in
pop
push
xlat
xor
dec
cmp
push
and
inc
lret
enter
push
mov
mov
enter
add
sub
mov
orb
aam
mov
ja
mov
jmp
jns
fwait
jmp
sub
jb
dec
mov
mov
inc
lahf
loopne
jo
xchg
lock
into
clc
rcrl
cmp
jb
lods
dec
dec
arpl
aaa
xchg
cmp
or
mov
jnp
jl
rcll
divb
pushf
jae
xchg
mov
cmp
cwtl
orl
mulb
push
cli
adc
imul
xor
mov
cmp
mov
mov
mov
sub
mov
dec
pop
mov
cmp
xor
stc
sub
push
loopne
ss
repz
add
sbb
xchg
enter
fnstcw
dec
mov
cmp
test
cmp
rol
stc
pop
push
repnz
lea
idivl
xor
lret
data16
aad
divb
xchg
lcall
repz
jg
mov
mov
ret
adc
scas
ja
popa
add
or
or
sbb
stos
lock
test
pop
push
icebp
fs
rorb
mov
sbb
adc
dec
sbb
mov
outsb
push
nop
int3
fimull
xlat
sub
testb
add
add
cmc
rclb
jno
xor
fs
sub
out
mov
adc
sub
divb
or
mov
xor
jae
ds
jne
sub
fs
jmp
pusha
mov
sub
pushf
sbb
dec
mov
dec
aam
outsb
stos
call
xor
insl
bswap
mov
jmp
shl
sub
incb
cwtl
jl
or
loop
out
cs
popf
in
imul
aad
es
mov
enter
fstl
lret
and
fbld
arpl
sub
push
test
add
push
lret
fildl
mov
sub
leave
or
cs
in
mov
pop
stos
xchg
mov
test
dec
divl
in
mov
mov
in
daa
lods
fwait
sub
and
jne
add
jno
jbe
and
iret
sub
cmp
addb
in
fildl
add
aam
jo
pop
dec
arpl
mov
dec
out
rcl
lds
xor
jns
into
lahf
mov
mov
mov
and
mov
fstl
ffree
cs
inc
or
pop
lock
xor
sbb
mov
add
pop
add
adc
sbb
fisttpl
shlb
mov
sub
dec
mov
int
bts
or
arpl
dec
dec
dec
or
dec
adc
jo
and
and
fsubrs
cmp
pusha
popf
push
test
sub
stos
jl
test
dec
jne
pop
pop
pop
jno
push
es
jns
sub
cmp
aaa
das
jae
repz
xchg
loope
inc
or
outsb
stos
imul
or
fs
outsb
adc
cltd
pop
loop
nop
in
lret
inc
xchg
dec
js
xchg
pop
mov
or
jecxz
int
adc
push
lods
fs
movsb
pop
sahf
sub
enter
fdivrs
aad
out
shl
push
movsb
and
aaa
inc
xchg
push
adc
idivb
jp
sub
push
add
movsb
sub
pop
inc
jle
and
xchg
jl
sub
cmp
fdivr
sbb
insb
fistps
jle
loop
xchg
adc
mov
imulb
xor
mov
push
inc
jbe
mov
jge
mov
outsb
lea
or
je
rorl
mov
push
pop
std
in
aad
cs
movsb
lods
mov
lret
call
dec
dec
fldenv
sub
pop
movsl
cmpsb
pop
cld
cltd
ror
push
sub
fiadds
jg
or
dec
lret
mov
in
and
push
loop
dec
xor
fldt
jg
cmp
jne
popf
dec
ljmp
inc
mov
lret
cmp
aas
xchg
andb
pop
xchg
lods
add
pop
or
pop
jl
push
int3
repnz
inc
out
add
call
movsb
mov
cmp
cmp
push
xchg
scas
dec
nop
ja
sub
dec
mov
adc
mov
fldt
stos
rorl
sub
adcl
pop
mov
sti
and
shr
es
or
ret
test
outsl
jg
gs
das
or
movsl
pop
dec
les
adc
push
mov
add
repnz
popf
mov
aaa
movsl
xchg
cli
aad
ret
push
movb
ds
out
add
mov
lds
jno
hlt
inc
pop
out
add
xchg
jno
mov
scas
ficompl
cltd
add
pop
popf
cmc
sub
aas
inc
mov
sub
mov
fldl
sbb
mov
flds
mov
lods
cmp
mov
mov
jno
xlat
sub
inc
add
pop
ret
push
enter
sbb
cmp
out
mov
cmp
jno
mov
in
outsb
lds
mov
movsl
dec
xor
lds
xchg
and
dec
jle
add
in
daa
push
sub
js
and
mov
dec
fisubl
dec
rcr
sub
jge
fisttps
mov
inc
ss
and
lret
fnstcw
inc
les
xor
pop
inc
and
in
xor
aad
and
in
cmc
insb
into
in
add
add
ljmp
lahf
xor
popa
push
and
jns
push
fcompl
shrb
and
mov
mov
imul
mov
lock
iret
pop
iret
insb
xlat
adc
and
in
jnp
or
xor
mov
std
jge
cmp
cmp
mov
arpl
cmp
and
ds
cmp
scas
push
pop
mov
and
or
stc
neg
dec
js
lcall
in
push
or
in
dec
dec
int
adc
imul
dec
ret
push
sbb
and
jno
pop
cmp
rcl
pushf
jne
data16
add
sti
xchg
popf
sub
push
les
pop
hlt
iret
insb
mov
push
lret
sti
sub
ss
dec
inc
rorl
xchg
sub
dec
insb
jge
inc
push
jnp
imul
out
mov
push
movsl
fsubl
ja
lret
adc
push
pop
xchg
stos
lret
int
mov
in
mov
mov
sahf
add
xlat
inc
add
popf
es
testb
call
jae
mov
repz
in
and
clc
call
inc
sub
daa
mov
ret
imul
mov
iret
out
adc
iret
mov
int
out
push
sbb
add
inc
aaa
adc
insb
dec
adc
mov
movsb
cmp
fwait
push
rorl
popf
lret
inc
dec
mov
lods
mov
cltd
xlat
cmp
pop
add
int3
cmp
dec
aaa
mov
add
addl
rolb
fsubr
mov
mov
push
cmp
lds
dec
scas
das
inc
in
pop
and
int3
mov
lock
std
mov
mov
es
clc
ja
loopne
cmp
and
loope
lret
xchg
pop
mov
leave
mov
nop
inc
add
in
icebp
push
test
mov
fcom
push
stos
icebp
and
pop
adc
sbb
or
mov
leave
jnp
sub
xor
sbb
adc
loopne
bnd
inc
repz
mov
es
xchg
lds
imul
pop
lahf
inc
gs
mov
lret
pop
mov
add
mov
mov
push
pop
out
cmp
push
mov
mov
add
xor
cmc
xlat
adc
incb
pop
addr16
mov
shrb
mov
rcl
in
mov
mov
aam
popa
jmp
cmp
imul
pop
and
mov
test
repz
rolb
nop
aas
cs
filds
mov
mov
or
insb
push
jae
and
call
ljmp
pop
mov
pop
inc
mov
lret
push
add
lea
inc
mov
push
or
outsb
popl
ret
mov
mov
sub
nop
pushf
test
pop
cmp
popf
inc
pop
mov
xchg
pop
xchg
hlt
mov
jle
cmp
xor
xlat
add
sub
das
stos
mov
mov
sub
and
inc
pop
or
incl
ss
mov
xchg
test
mov
ret
mov
cld
mov
lret
mov
sub
xor
cmp
imul
clc
jecxz
pop
xchg
mov
sbb
repnz
imul
dec
lock
nop
clc
push
push
mov
push
dec
arpl
mov
repnz
loop
inc
frstor
and
dec
out
push
shll
cmp
fildl
dec
fs
jge
jmp
xchg
fwait
jecxz
jmp
lods
inc
ss
pop
dec
adc
sub
cmp
cmp
inc
sub
sbb
or
xor
adc
pop
pop
dec
inc
arpl
into
sub
dec
test
push
jl
jmp
dec
ja
std
jg
lret
and
cmc
inc
jecxz
test
cmp
test
sbb
lods
add
cmp
pushf
ja
mov
movsl
rol
pushf
fwait
nop
int3
adc
jge
ror
add
jp
xchg
pusha
adc
cltd
cwtl
cwtl
cmp
lds
inc
lds
popa
sub
sti
les
mov
test
inc
mov
sub
daa
adc
les
imul
jns
and
imul
sahf
bnd
gs
and
aam
lds
js
and
into
test
mov
add
push
xchg
pop
pusha
mov
or
rcrl
and
aam
xchg
xchg
adc
dec
std
scas
fmuls
addr16
inc
ja
cltd
hlt
daa
adc
andl
cmp
lahf
mov
sbb
cli
lock
pop
fmulp
mov
jne
movl
mov
inc
pop
mov
insl
xchg
mov
push
xor
inc
pop
add
xchg
fisttps
out
ljmp
inc
scas
hlt
inc
cmpsl
ret
inc
lea
sbb
mov
inc
ss
inc
xchg
jb
pop
int3
cmc
rol
fnstsw
push
xor
sarb
ficoms
or
inc
adc
js
mov
cld
sub
adc
test
cmp
sbb
aad
cmp
call
sbb
push
enter
roll
repnz
cmpsb
daa
lds
sahf
shll
popf
xchg
pop
aas
mov
xlat
jp
std
pop
mov
mov
add
sub
dec
and
mov
mov
mov
es
add
movsb
icebp
imul
orl
xor
data16
in
dec
pop
push
sbb
adc
loop
xchg
addb
loope
hlt
outsb
push
push
sbbb
mov
scas
orb
cmp
movsl
fs
jl
leave
mov
or
das
mov
into
out
into
bound
daa
xor
cwtl
fists
jmp
xchg
mov
dec
or
loope
xor
push
arpl
xchg
ret
test
and
pop
push
ja
cmc
jnp
cmpb
rcll
scas
or
pop
pop
shlb
clc
add
mov
jp
sbb
daa
dec
shlb
jg
adc
int3
cmp
inc
mov
bound
ror
test
inc
mov
out
ljmp
mov
and
push
fidivl
adc
inc
jecxz
shl
vmwrite
idivl
ret
aam
cwtl
mov
call
insb
inc
sub
es
test
in
jge
es
cmpsl
and
in
mov
and
push
mov
lea
fimuls
and
cmp
xor
jl
cwtl
shll
js
or
xchg
xchg
xor
jp
std
jle
push
movsl
adc
into
sub
mov
test
jle
in
xchg
scas
iret
iret
xchg
mov
cmp
std
dec
adc
and
mov
and
hlt
movsl
out
in
aas
adcb
cs
mov
sbb
adc
mov
inc
in
rcrl
popf
lds
xor
xor
inc
fs
add
aam
push
lcall
push
pop
xchg
dec
xor
ja
xlat
ret
mov
insb
inc
mov
push
mov
and
stc
loope
or
pop
divb
push
dec
clc
ret
xchg
fidivrs
inc
dec
addl
gs
aas
and
push
in
pop
adc
inc
orl
ljmp
movsl
jg
sub
ss
mov
or
add
divb
adc
aas
jno
mov
in
mov
xchg
cwtl
add
dec
jne
mov
arpl
pop
in
cmc
jp
push
xchg
enter
rorb
cli
bound
bound
lea
mov
ds
int3
add
mov
iret
inc
mov
xchg
xor
je
mov
aaa
and
mov
push
add
mov
dec
add
cmp
mov
add
cmp
fs
fstl
pop
mov
mov
test
dec
mov
dec
adc
push
sub
and
adcb
pop
es
cmc
jp
andl
test
adc
add
cmp
ret
ss
pushf
sub
js
lds
and
mov
pop
or
aam
fnstcw
lea
xchg
fildl
jbe
aad
jecxz
push
and
cmp
out
adc
je
ret
jbe
pop
rcrl
sub
shld
les
daa
mov
sbb
sub
mov
cli
lcall
cs
fwait
jb
push
lret
sub
xor
movsb
icebp
pop
jb
lcall
jbe
setbe
mov
pop
push
push
add
mov
lahf
cltd
std
add
cmp
jne
aad
fidivrs
fprem
push
dec
jns
sub
pop
and
stos
push
imul
insl
xlat
mov
cwtl
jbe
sti
imul
fsubrs
inc
mov
fstpt
jbe
dec
ret
loope
mov
loop
and
sub
xchg
test
adc
aam
ret
mov
sub
into
inc
xor
mov
dec
jmp
addr16
xchg
lds
mov
enter
xor
inc
faddl
dec
mov
fsubl
sub
mull
sbb
cmp
jmp
popa
dec
sbb
xchg
int3
fs
idivb
sub
xlat
ds
push
daa
ficoms
push
sbb
out
push
cs
inc
cmp
rorb
shll
lds
mov
insl
and
add
movsl
adc
out
xor
pop
dec
dec
or
pop
xchg
mov
outsl
mov
sub
xlat
dec
mov
imul
xor
sti
fsubrl
bound
pop
mov
inc
pushf
xchg
ja
aaa
add
inc
dec
adc
jl
cmp
lcall
into
jno
fdivr
loopne
cmp
leave
sbb
jp
call
or
rcll
xorl
xlat
cmp
or
and
lods
pushf
test
jns
test
test
pop
adc
aas
cli
sbb
jle
mov
std
leave
arpl
push
aad
mov
cmpsl
mov
pusha
fists
cmc
jmp
jnp
dec
cmp
mov
imul
xchg
jno
add
xor
mov
pop
and
int3
add
cmpsb
std
and
lods
lods
mov
scas
and
or
mov
cs
movsb
fsubrl
test
xorb
jbe
imul
lcall
push
and
sbb
cmp
xchg
cwtl
scas
mov
sbb
aad
rcll
cmpl
jbe
lcall
mov
mov
adc
pop
sti
mov
mov
mov
push
pop
popa
orl
andb
inc
movsl
or
jno
and
ficoml
push
out
inc
push
lcall
or
jle
sbb
jl
fisubrs
push
clc
and
aam
pop
sub
lods
push
arpl
test
lcall
mov
out
ljmp
test
loop
mov
les
pusha
insb
aad
xor
pop
sbbl
sub
cwtl
or
pusha
enter
jg
cmp
push
cwtl
sti
fistps
pop
pop
pop
je
aas
outsb
imul
daa
arpl
lahf
lods
xor
stc
in
scas
jp
push
daa
aas
mov
dec
ja
ror
fldl
lds
filds
mov
cs
js
fs
enter
es
test
and
cltd
mov
pop
xchg
inc
test
mov
ljmp
sbb
xor
inc
cmp
adc
data16
call
sti
xor
adc
sbb
push
adc
mov
or
scas
or
scas
mov
pop
push
or
pop
cmp
mov
popf
pop
pop
dec
ret
test
sub
jns
mov
jle
repz
mull
bound
fmull
enter
xchg
or
gs
cmp
aas
sub
ja
fistpll
xchg
icebp
shll
xor
cmc
push
rcr
stos
test
outsb
pop
into
mov
pop
test
in
or
xor
loope
dec
adc
lock
imul
ds
sbb
mov
sbb
into
test
push
int
xchg
lret
and
adc
push
and
dec
adc
mov
arpl
enter
enter
out
arpl
in
sahf
mov
outsl
cmp
in
cmp
jns
pop
pop
fsts
add
or
mov
sub
jae
rclb
cmp
mulb
aas
cld
pop
mov
jne
mov
test
jnp
mov
cmc
faddp
mov
dec
and
in
add
dec
fiaddl
sbb
stos
mov
outsb
push
je
jns
test
mov
sub
iret
jne
sbb
loope
stos
push
jl
and
inc
mov
sbb
inc
enter
in
or
outsb
xor
xchg
xchg
nopl
adc
pusha
sub
mov
pop
jns
cs
sahf
dec
lds
adc
pop
mov
idivb
scas
fimuls
mov
xlat
mov
dec
ja
mov
or
xchg
filds
clc
sbb
lcall
mov
int
addr16
sbb
mov
andl
sub
sti
or
repz
sub
mov
mov
scas
or
mov
imul
mov
fists
or
mov
push
mov
mov
outsb
sti
push
fdivs
daa
xchg
jnp
les
cmp
scas
xchg
shrb
mov
repz
dec
xlat
or
int3
aam
or
cmp
push
in
dec
popa
hlt
jmp
sbb
and
mov
lcall
xor
mov
movntps
aam
sbb
inc
dec
popa
push
aam
loop
inc
faddp
adc
imul
loope
lret
push
pushf
inc
roll
mov
loopne
xchg
adc
mov
mov
int3
lock
xchg
cmp
mov
out
adcl
bound
sbb
ret
mov
jmp
lea
rclb
fs
cmp
mov
clc
bound
jae
add
jmp
dec
adc
push
orb
aas
clc
mov
in
pusha
loope
pushf
sbb
or
sub
sub
popa
mov
mov
push
in
leave
pusha
add
add
cmp
repz
movsb
push
iret
lret
or
incb
fdivr
inc
add
mov
mov
lea
xchg
aad
data16
xchg
rol
jge
mov
dec
adc
test
popa
jl
int
movsl
or
adc
and
push
xor
mov
jmp
sub
pop
mov
jle
cmpl
cmp
pop
cmp
icebp
repz
roll
jp
into
jno
inc
nop
mov
cltd
insl
xor
mov
or
dec
imul
shr
js
mov
lea
mov
sub
arpl
aam
filds
imul
sahf
daa
pop
sbb
aam
jmp
mov
add
mov
sbb
push
mov
arpl
and
and
inc
push
test
dec
fmul
pop
ret
dec
and
dec
insl
pusha
scas
pusha
popa
dec
rcll
cli
fsubrl
mov
iret
loopne
dec
in
cwtl
sub
xor
xchg
add
and
adc
loope
scas
push
pop
ror
jl
jle
ret
adc
ljmp
jne
adc
mov
cmpsl
test
sub
jmp
sbb
sbbb
inc
insl
pop
cmp
scas
sub
mov
xor
mov
insl
mov
sti
sti
add
pop
rol
ds
bound
cmp
out
jmp
outsl
arpl
sbb
pop
jnp
jne
dec
mov
ss
xchg
ret
fiadds
jl
push
push
mov
fdivrp
out
icebp
aad
fstpl
mov
push
cs
andb
push
and
addl
nop
mov
push
nop
test
aas
mov
sub
or
out
and
or
jp
fildll
or
xchg
sbb
outsl
sbb
into
xchg
adc
fldenv
adc
int
pop
and
and
lret
sub
lods
in
imul
fldt
or
fbld
dec
rcr
dec
imul
lods
leave
sub
push
cmp
mov
dec
pop
push
iret
callw
cmp
lods
xchg
inc
xchg
sti
and
pop
outsb
inc
icebp
out
fwait
data16
xchg
addr16
sbb
mov
out
popa
mov
jb
adc
mov
sub
pop
sub
push
aam
out
and
in
ds
xchg
push
push
adc
xchg
fmuls
adc
stos
inc
loop
inc
xchg
or
dec
mov
ja
imul
adc
sbb
les
xchg
add
jmp
mov
lds
push
mov
mov
mov
mov
cmp
push
or
mov
cmp
aad
sub
xchg
daa
fwait
movsl
es
sbb
lods
xchg
pop
loop
sub
and
imul
sbbb
sub
nop
loope
xor
jae
cmp
fisubrs
mov
or
faddl
cmp
repnz
xlat
icebp
xor
xorl
and
cmp
sbb
icebp
test
sbb
out
sub
hlt
mov
pushf
pop
push
pop
cld
add
lods
or
xor
loopne
call
or
add
stos
xchg
sbb
insl
adc
movsb
xabort
movb
push
dec
in
mov
leave
out
push
fxam
bound
add
mov
enter
stc
jecxz
dec
int
fs
sbb
cmp
xchg
lret
cmp
insl
fwait
jns
pop
aad
lds
adc
lret
loopne
adc
dec
cmpsl
add
push
scas
jmp
xchg
mov
mov
adc
das
jne
inc
scas
jp
push
in
lds
jns
or
xchg
jae
clc
pop
sahf
inc
int3
add
push
pop
aam
gs
std
int
sub
and
push
mov
in
out
mov
mov
mov
jmp
ss
je
stos
ret
mov
inc
mov
fbld
jbe
cltd
dec
movsb
and
adc
cli
or
jb
mov
fldt
in
pop
mov
mov
cmp
insb
or
nop
cmp
mov
push
fs
cmp
jb
lahf
lret
inc
pop
lea
aad
out
add
or
fs
cwtl
inc
and
dec
add
fisubrl
aas
add
cli
xor
lods
int3
jno
imul
ds
inc
dec
adc
dec
mov
or
ds
imul
test
cmp
pop
popa
cmp
dec
xor
outsl
jle
mov
and
out
movsl
dec
jp
xor
sti
mov
and
sub
pop
lret
push
fisttpl
leave
adc
mov
and
in
popf
dec
push
mov
shr
jo
sti
cmp
int3
jp
xor
mov
in
sub
xchg
push
sbb
das
mov
jl
aas
adc
mov
dec
push
lret
lock
sbb
mov
push
dec
push
pop
mov
inc
push
pop
aas
adc
pop
aad
mov
imul
nop
mov
jge
aad
sub
inc
push
sub
cmp
push
or
jg
rcrl
mov
movsb
add
adc
xchg
dec
popf
pop
adc
cltd
ret
int3
sbbb
pop
pop
aas
shlb
mov
outsl
jb
cmp
cmp
push
rorl
insl
popf
les
xchg
lods
xor
shl
or
push
dec
mov
xchg
in
repz
mov
testl
jp
loopne
and
xor
fsubrl
dec
mov
imul
lcall
aam
dec
jbe
xor
cmpsb
push
movsb
mov
dec
js
mov
call
inc
fmuls
add
or
les
sbb
pop
push
jmp
push
dec
and
push
shlb
sub
dec
aaa
xchg
or
mov
mov
test
dec
xchg
pop
out
adc
ja
and
jns
hlt
jle
mov
stos
pusha
js
pop
mov
or
and
cmpl
or
mov
fimuls
mov
push
or
push
popa
push
fstp
insb
nop
xchg
fcompl
mov
push
cmp
call
mov
cmpsl
jle
dec
push
sub
pusha
ja
ja
imul
andl
movsl
xor
fsub
cmp
inc
fiaddl
ja
inc
mov
mov
negb
push
stc
pop
jle
add
mov
inc
js
push
lcall
pushf
dec
in
dec
inc
lahf
and
inc
push
fisubrl
das
cmp
mov
push
out
add
popa
or
aad
cmpsl
pushf
xor
adc
iret
mov
or
xchg
sbb
adc
xchg
add
lds
mov
jno
or
xor
add
adc
nop
popa
in
outsl
mov
dec
dec
mov
aad
test
ljmpw
mov
scas
clc
clc
or
ret
hlt
subl
idivb
cmp
push
xchg
jno
cltd
mov
mov
jmp
imul
or
pop
cmc
sbbl
lock
xor
sub
and
inc
lds
les
push
dec
push
mov
jl
dec
imul
daa
mov
and
bound
sub
addb
lods
xor
and
xchg
jnp
inc
aas
nop
jbe
sbb
fimull
das
into
ret
cmp
adc
or
call
xor
es
ljmp
cmpl
test
pop
fs
lea
push
aad
notb
fcoml
stos
or
mov
mov
sti
lahf
lahf
aas
pop
jne
notb
movsb
jmp
iret
jnp
nop
and
xchg
jg
nop
sbb
fldl
inc
movsb
pop
push
fisttps
xlat
mov
imul
xchg
pop
xor
dec
adc
sub
xor
xchg
std
xchg
mov
cltd
into
cltd
enter
lods
sub
scas
aam
sub
aam
pusha
call
imul
iret
mov
lret
jg
sbb
ja
cmp
sub
cs
mov
add
sbb
dec
or
push
mov
mov
aaa
xchg
mov
int3
and
mov
or
sub
fiadds
adc
adc
sarb
fsts
add
add
outsb
mov
ficomps
add
dec
and
fstpl
sub
jp
push
rcrl
cmp
sub
inc
lahf
scas
lret
or
sahf
das
push
test
pop
ss
fsubrl
pop
iret
inc
std
rcl
sbb
ljmp
pushf
ds
jl
jle
aad
mov
scas
in
stos
xor
jo
adc
jmp
cmp
fcomps
lahf
adc
leave
sub
cmp
xchg
mov
enter
pusha
xlat
xchg
arpl
push
pop
or
js
push
mov
test
das
mov
jge
sbbl
sub
ret
xor
iret
sub
push
cmp
fwait
in
inc
mov
sarb
mov
inc
xchg
xchg
add
sbb
mov
inc
sbb
movsl
cmpsl
cmpsl
mov
jg
mov
inc
das
call
jp
lcall
and
test
jns
mov
sbb
push
or
stos
xor
imul
js
mov
sahf
clc
dec
jmp
mov
sub
aam
jge
cmp
pop
hlt
shlb
mov
into
cmp
add
xchg
out
push
pop
sub
push
aam
sub
mov
or
dec
and
int
push
jne
add
or
std
or
adc
decb
jns
pusha
dec
rcr
je
jl
sub
push
dec
push
daa
dec
inc
add
hlt
out
pop
xlat
enter
jnp
sub
test
sbb
imul
test
sbb
pusha
jbe
imul
test
xchg
cmpsl
push
or
push
sahf
pop
jl
xor
lods
out
pop
adc
or
pop
es
push
lods
pushf
inc
cmp
cwtl
and
inc
lods
sub
ja
rcr
pop
fcoms
push
cmp
jnp
push
out
in
mov
or
stos
sbb
test
or
lret
xor
inc
xor
xor
mov
movsl
pop
test
xchg
jecxz
and
sub
cmp
sub
xchg
mov
popf
sub
aas
nop
adc
fildll
shll
inc
add
sub
mov
cli
or
popf
sti
roll
dec
dec
shl
ret
rcrb
cmp
pop
dec
add
icebp
lods
mov
add
jnp
xor
and
loopne
xchg
dec
push
xchg
mov
add
out
mov
loope
lods
push
loope
pushf
cmp
or
das
adcb
adcl
mov
add
cmpsb
pop
sbb
mov
jnp
mov
lret
pusha
and
mov
mov
pop
rcrb
dec
inc
xchg
decb
mov
movsl
mov
inc
dec
dec
test
pusha
pop
test
bound
fld
dec
mov
push
mov
shll
jnp
in
jp
push
gs
xor
pop
and
jne
fs
shrl
xchg
jmp
pop
stos
bound
lea
mov
in
mov
pop
in
cmpsb
dec
add
cmp
loopne
pop
and
xchg
inc
inc
insb
lcall
call
inc
sub
in
cmp
les
add
test
jg
clc
loopne
sub
inc
je
test
dec
xor
ljmp
add
lret
adc
jno
adc
js
pop
stos
insb
mov
subl
xor
push
and
jns
clc
cmpl
cltd
sbb
mov
fdivrl
enter
dec
das
pusha
ds
jns
popa
clc
and
cwtl
mov
out
sarl
cltd
mov
subb
mov
mov
and
jmp
mov
inc
push
or
dec
rorb
sti
xor
push
bound
lret
lahf
ss
add
imul
inc
jp
ss
pop
int3
jmp
popf
imul
into
fidivs
pop
jo
jno
popl
data16
jle
lret
aam
inc
push
inc
push
lret
sarl
xchg
arpl
jle
inc
push
inc
cmp
es
xchg
movsb
cli
jle
sub
in
ret
js
std
cmp
movsb
adc
mov
inc
in
sub
mov
or
mov
and
xlat
fsub
out
xchg
rol
mov
rcrb
call
xor
bsf
stos
xchg
mov
mov
pop
out
mov
sub
dec
dec
pop
or
pop
test
cli
lea
mov
jo
mov
test
sub
dec
push
int3
or
xlat
cmpl
adc
incl
cs
sub
clc
jg
ljmp
mov
inc
cmp
mov
stos
movsb
sbb
fdiv
jl
xchg
or
pop
xor
shr
cwtl
xchg
mov
mov
add
jne
loope
andl
or
insl
call
mov
enter
subl
mov
mov
hlt
push
js
mov
sub
xchg
pop
iret
hlt
push
fdivrl
push
mov
and
cmp
into
ret
lea
fidivrs
inc
mov
in
pop
push
pop
orb
in
dec
out
nop
aas
addr16
push
adc
or
stc
int
dec
and
in
pushf
dec
inc
scas
push
jo
and
repz
xchg
test
mov
mov
insl
fsubs
or
pop
inc
fdivrp
cmp
gs
sub
push
bound
rorb
inc
cltd
ret
mov
xchg
inc
jns
pop
mov
adc
add
aad
pushl
aas
repz
and
adc
shrl
mov
add
lds
rorb
pop
mov
test
stc
std
xchg
push
outsl
xchg
xchg
testb
in
je
dec
cmp
dec
ret
fcompl
jne
das
popa
and
pop
cwtl
pushf
int
imul
cli
xchg
and
inc
and
xorl
iret
insb
ja
in
repnz
sub
movsl
sub
and
xlat
adc
shrb
cmpsb
jb
out
repz
insl
je
iret
push
xor
push
in
lea
inc
xor
sbb
dec
call
inc
das
call
or
sub
jo
rcrb
subb
push
add
gs
sub
xor
stos
iret
shl
ljmp
imul
sbb
lahf
sbb
hlt
dec
test
lret
sub
daa
inc
dec
sub
imul
sub
cmp
arpl
subb
or
jl
es
push
ret
pshufw
sub
test
mov
pop
xor
jns
imul
ljmp
jge
jg
not
fimull
lds
inc
pusha
push
and
mov
sub
cmp
mov
adc
popf
sbb
mov
jle
cmp
add
xor
dec
fisttpll
insl
sub
mul
lock
push
jmp
xchg
add
aad
fabs
sub
cvttps2pi
ds
mov
ds
notb
movsl
popa
push
jmp
pop
or
icebp
xchg
loope
dec
nop
testl
sti
inc
mov
aam
jmp
push
xchg
add
inc
jecxz
cmp
insl
cmpsl
lods
aaa
sbb
nop
push
mov
xor
insl
les
rcl
or
outsb
xor
sarb
jno
filds
xchg
nop
cwtl
add
or
jle
in
sub
inc
xchg
mov
add
ret
jne
pop
lods
sbb
int3
out
jmp
mov
sahf
lret
in
inc
sub
inc
lret
dec
and
jbe
push
test
das
push
push
iret
mov
xchg
inc
add
pop
ja
xor
mov
in
in
adc
mov
loop
lods
addr16
add
jnp
sbb
mov
data16
enter
inc
lahf
cmp
adc
out
add
clc
andl
sub
sub
jbe
mov
add
cmp
push
pop
nop
pop
sub
and
ds
out
mov
movsl
in
sub
mov
sar
outsb
decb
jmp
repz
mov
pop
insl
test
fmuls
aas
dec
in
mov
adc
sub
mov
sbb
clc
mov
or
lock
jle
mov
sub
sahf
mov
pop
push
std
push
xor
iret
mov
subb
pop
or
sub
lea
iret
cmp
cwtl
in
outsl
jbe
mov
xor
sub
inc
stos
dec
into
dec
cli
xor
xor
sub
lret
mov
push
jns
pop
movsb
cli
in
in
test
ss
lock
loop
fcomps
stos
fidivrl
cmp
xchg
aam
add
ret
dec
or
nop
or
repnz
sbb
mov
mov
push
push
js
repz
jno
mov
enter
fidivl
es
rolb
inc
adc
pop
lea
jp
add
push
ja
rol
inc
mov
cmpsb
out
jmp
sub
jno
in
shrb
mov
mov
imul
sbb
rclb
stos
push
lret
and
jbe
ds
dec
les
into
js
mov
cmp
and
xlat
nop
and
pop
cmp
xorb
test
fisubs
mov
lcall
loopne
mov
stos
mov
call
dec
clc
adcl
iret
sbbl
xchg
push
ja
push
repz
rorl
mov
bound
xchg
xor
sub
inc
loope
scas
pop
es
push
push
sbb
pop
sub
jne
fildl
cli
xchg
int
shrb
mov
xor
data16
xchg
test
mov
or
loope
xchg
cmc
xchg
enter
cmp
push
pop
mov
outsb
xorb
and
xor
cmp
aaa
js
jle
mov
shrl
xor
mov
jmp
sub
push
jg
rcl
ret
push
sub
add
insb
loop
fidivs
imul
pop
leave
add
pop
mov
clc
push
iret
pop
mov
add
and
jl
out
mov
shrl
add
inc
mov
std
das
aad
int
dec
nop
pop
sub
data16
ja
xor
cmp
xchg
test
add
andl
mov
sub
xchg
mov
cwtl
add
add
enter
xchg
ror
repnz
or
ret
leave
mov
fcmovnb
pusha
lret
iret
jno
mov
test
xlat
inc
push
scas
cwtl
xor
cmpsb
lock
jge
add
jo
add
pop
dec
idiv
xor
mov
rcrb
ret
mov
inc
xchg
sbb
jno
mov
dec
jno
ret
fcmovnbe
push
xor
mov
jb
mov
dec
jnp
mov
add
pop
jb
nop
pusha
add
lret
xlat
mov
flds
sbb
jp
xchg
imul
shll
out
leave
shl
add
mov
test
pop
sbb
inc
test
xchg
pushl
cmp
icebp
mov
and
fnstsw
aaa
out
fadds
daa
popf
sbb
jae
push
push
stos
inc
sub
xchg
mov
inc
iret
inc
in
jno
add
mov
or
out
mov
sbb
lock
leave
sbbb
mov
test
xor
add
fcoms
jg
pop
or
sti
stc
or
pop
lahf
cmove
std
inc
xor
subb
xlat
mov
mov
mov
or
stos
fisubrs
inc
rclb
xchg
cmp
mov
jns
mov
rcrl
cli
enter
cltd
jns
and
xor
pop
or
cltd
dec
cmp
sbb
mov
or
push
add
daa
outsl
jmp
stos
inc
rcr
jno
lock
mov
jl
cli
sti
frstor
adc
mov
cmp
inc
hlt
and
lods
xor
adc
pop
push
lcall
mov
jecxz
push
repz
mov
js
adc
out
push
jmp
loope
jmp
fisttpll
jmp
jmp
adc
xchg
jmp
out
adc
xchg
pusha
ds
movsb
mov
pop
cmp
adc
rolb
pop
jl
sub
sti
into
dec
imul
push
inc
mov
mov
enter
xchg
cmp
fdivrp
mov
or
mov
decl
push
dec
cltd
in
insl
shl
adcb
ret
jo
jno
test
out
jns
inc
mov
loop
pop
push
sub
xchg
int
mov
add
lahf
xor
push
cmp
int3
clc
mov
inc
inc
add
jg
repz
xchg
mov
enter
lahf
loop
cmp
nop
push
push
push
stos
ror
mov
inc
lret
movsl
sub
sahf
pop
lahf
xor
pusha
dec
lods
pop
out
jle
sbb
js
jmp
mov
pop
out
cmp
test
das
push
mov
lea
add
adc
and
imul
dec
mov
lock
pop
in
shl
popl
call
push
cwtl
cmp
daa
inc
stos
sub
test
in
sub
int
dec
mov
mov
test
cwtl
clc
xchg
mov
cld
mov
mov
pop
lret
mov
jae
test
push
mov
ret
cmp
in
and
xchg
stos
push
stos
mov
jns
add
js
mov
mov
adcl
dec
mov
adc
test
sti
sbbb
cmp
in
pop
ret
icebp
pop
arpl
or
push
xor
rcr
add
xchg
out
fisubl
inc
mov
mull
stos
add
or
sti
push
sbb
adc
xor
bswap
mov
jne
scas
das
mov
fdivrl
pop
sub
hlt
sbb
test
push
out
aam
mov
ss
or
movsb
ret
lds
sub
mov
popa
adc
popf
mov
sub
jb
dec
pop
sbb
mov
scas
xchg
and
pusha
and
mov
mov
ret
xor
mov
xchg
push
push
loopne
xorb
and
pop
outsl
ret
je
pop
repz
and
leave
inc
fwait
jmp
inc
push
lret
mov
ja
mov
pop
mov
ficoms
mov
mov
sti
dec
loop
popf
push
mov
stos
or
repnz
add
aam
or
imul
jbe
stos
inc
pop
rolb
cmp
or
add
push
fs
cmp
ficompl
movsl
data16
add
das
mov
jns
fsubs
cmp
and
sub
cmc
mov
inc
aad
jno
imul
outsl
ds
or
cmc
push
ljmp
in
or
test
test
outsb
rclb
sbb
pushf
loope
mov
push
xchg
inc
ljmp
xacquire
mov
xchg
fwait
pop
inc
push
loopne
jl
imulb
and
das
pop
dec
jge
nop
sbb
iret
inc
xor
imul
cmp
icebp
adcb
mov
ljmp
inc
or
cmc
sbb
push
mov
sub
jp
cmp
out
cmp
mov
popa
das
mov
pushf
cmp
dec
sbb
or
ror
lahf
out
cld
dec
divb
stos
fadd
xchg
inc
and
inc
frstor
jecxz
push
xchg
push
push
jne
cmp
fisubrl
movb
xor
dec
imul
dec
cmp
xchg
adc
subb
jecxz
lret
mov
cmp
lea
lock
sarl
inc
sbb
idivl
iret
xor
loope
lods
test
mov
scas
ret
xchg
mov
push
adcl
xchg
and
inc
mov
push
xchg
loop
mov
inc
movl
adc
cmp
mov
push
les
inc
pushf
hlt
sub
lods
push
push
pop
dec
shrl
rclb
sarl
mov
inc
stos
pop
push
xchg
mov
push
push
test
fs
aas
mov
clc
push
cmp
jnp
push
dec
jns
jb
dec
sub
int3
aaa
xor
lods
sbb
mov
scas
mov
into
call
loopne
adcl
push
dec
repz
jge
stc
test
std
lret
leave
sbb
inc
jp
das
jb
cmp
jo
repnz
jno
mov
fmull
jp
dec
mov
loop
push
fbld
or
cmp
stos
scas
cmp
pop
xchg
jne
sti
mov
dec
push
pop
push
cs
stc
les
jl
adc
aad
jnp
inc
lock
sub
and
shrb
cmpsb
mov
movsb
push
pop
pop
inc
jb
loopne
xchg
cmp
sub
and
sub
push
subl
std
out
scas
cltd
mov
inc
pop
loopne
nop
outsl
inc
and
lods
dec
and
movsb
adc
cmp
mov
push
aas
rcr
and
insl
movsl
stc
and
adc
jge
repnz
adc
sbb
repnz
insb
dec
mov
fnsave
pop
add
mulb
jno
adc
movsb
or
cmp
dec
push
jg
cmpsl
stc
cmp
daa
mov
jle
pop
pushf
push
pusha
add
jno
jp
in
stc
fcoml
js
loope
and
mov
addr16
adc
jns
mov
dec
jbe
mov
pop
cltd
mov
in
inc
stos
je
rorl
cmp
cmp
inc
cmp
mov
cmp
sbb
or
xchg
ret
rcll
rol
pop
jge
je
ret
je
jo
xor
jno
push
loopne
mov
mov
inc
aad
mov
sub
xchg
fdivrs
xor
fisttpl
lods
cmp
add
xor
rol
inc
or
test
mov
stc
mov
lcall
dec
mov
mov
popf
pop
jge
mov
in
add
test
pushf
jl
dec
testb
cwtl
insb
pop
int
subl
dec
adc
dec
or
sub
mov
test
sub
pushf
inc
cmp
or
in
jecxz
pushf
scas
ficomps
mov
out
mov
push
and
mov
cmc
inc
push
aam
pop
dec
sbb
xchg
dec
hlt
ljmp
aam
ljmp
popa
mov
ja
xlat
adc
sti
imul
sub
add
imul
outsl
jmp
mov
add
lcall
lcall
popa
leave
and
push
mov
push
push
xor
adc
pop
lcall
cs
testl
jmp
sbb
push
insb
ficoms
mov
xchg
dec
or
dec
inc
mov
cmpb
cmovns
dec
dec
mov
test
xchg
cld
sub
out
outsb
mov
mov
adc
xor
nop
jne
pop
imul
int
cmc
lret
jb
mov
aad
insb
ffreep
call
loopne
cmp
test
xor
sti
dec
mov
mov
push
bound
out
mov
adc
mov
popf
cld
movsb
push
add
pop
scas
adc
shlb
lock
negb
cmp
push
push
mov
out
push
mov
mov
xor
orb
int
inc
js
hlt
fldcw
xchg
or
mov
stos
aas
sub
xlat
test
das
pop
and
mov
cmp
push
test
jg
idiv
ret
rorb
sub
jle
leave
xchg
push
jle
jo
add
imul
out
subb
int3
cmp
cltd
dec
pop
stos
lods
insb
mov
int
sub
push
sub
pop
daa
nop
and
sub
dec
out
aaa
mov
jnp
or
dec
lret
dec
lock
jno
push
cmp
xor
mov
sub
sub
mov
fstpl
je
fcmovbe
dec
cmpsl
sub
xchg
pop
xchg
incb
xchg
inc
int3
je
cmpb
mov
scas
jg
xchg
call
lret
ja
in
scas
shl
sbb
or
mov
sub
push
imul
or
movsb
das
mov
cmp
pop
test
daa
call
arpl
cmc
popf
pop
xchg
int
int
push
incl
push
das
int
fs
leave
cmp
push
mov
adc
xchg
shll
inc
mov
popf
mov
mov
dec
sub
ret
cli
sub
xchg
dec
fdivrs
jp
leave
lods
jae
mov
xchg
xchg
xor
push
xor
xchg
xor
push
cwtl
adc
vxorpd
out
pop
out
push
aas
mov
mov
insb
inc
jp
mov
je
pop
or
jnp
mov
ja
and
jae
push
cld
fwait
dec
pop
int3
roll
cmp
adc
pop
jg
mov
dec
and
and
insl
lret
lods
cmp
pop
jnp
pop
pop
push
loope
shrl
or
adc
dec
pop
popa
iret
pop
inc
std
add
cmp
fmuls
dec
mov
into
xor
rorl
out
sub
push
rolb
add
mov
mov
js
dec
shrl
imul
lret
movsl
repz
dec
mov
cmp
insl
clc
daa
stc
and
push
xchg
cmp
imul
outsl
push
loope
push
mov
orb
fcomps
adc
and
shrb
ljmp
stos
push
or
test
lret
or
push
and
pop
popf
leave
mov
lret
and
or
sub
daa
sti
out
jno
adc
jg
pop
lock
shlb
jnp
popl
loopne
enter
inc
loope
mov
shrl
and
addr16
in
ds
loopne
add
clc
sti
and
cwtl
cmp
pop
cmpsl
jg
sbb
push
pop
inc
and
leave
push
icebp
popf
pop
sbb
push
add
cld
cltd
mov
cmpsl
jnp
or
fdivrs
jne
xchg
add
dec
sub
insl
push
mov
push
icebp
stc
scas
and
add
pop
jo
jne
lahf
mov
sub
add
adc
mov
push
jne
inc
test
cltd
mov
lds
xchg
pop
dec
add
clc
imul
push
out
popf
sarl
lret
jmp
je
fcoms
or
and
mov
xchg
xchg
xchg
jl
cli
cmp
push
call
xor
rcr
inc
fmulp
fcoms
fwait
lds
mov
sbb
inc
ja
pop
sbb
out
inc
sti
or
cmp
cmc
fdivrp
sub
cs
mov
push
jbe
cmp
cmp
inc
loope
in
mov
xchg
cmp
add
push
cmp
push
mov
cli
cs
fwait
mov
ret
popa
push
je
aas
aad
ret
mov
jae
xchg
lret
iret
std
fldl
or
and
xchg
fistpl
add
dec
aas
mov
cmp
mov
and
pop
shrl
push
arpl
cmp
push
lcall
adc
cmp
cmp
flds
pop
mov
dec
cmp
mov
cmp
and
aad
mov
ret
fmuls
aad
scas
pop
mov
in
mov
mov
fmul
and
push
pop
daa
loop
addr16
in
cmp
mov
fsubl
jo
sbb
mov
add
add
jecxz
jns
lods
pop
push
scas
and
stos
inc
or
fmull
ljmp
and
dec
fsubr
push
lds
faddp
xchg
pop
lret
mov
add
pop
jg
scas
cmpb
bound
cli
cmp
mov
pop
ja
pop
jno
bound
add
dec
mov
push
inc
dec
outsb
pop
push
shl
cld
mov
mov
mov
cmpsb
fs
pushf
test
pushf
aam
movw
xchg
pop
push
pop
neg
dec
xchg
push
fldenv
lret
mov
mov
and
xor
inc
outsl
add
fxch
gs
mov
imul
push
scas
xchg
lods
mov
pop
cltd
adc
testl
cmp
mov
pop
add
fldt
push
rcrl
sub
xchg
shll
add
xchg
pop
int
es
js
fwait
repnz
ljmp
xor
cmp
ja
std
jg
sub
push
sub
mov
inc
push
xchg
icebp
pop
fucomip
xor
inc
or
or
xor
mov
and
jnp
sarl
mov
out
ret
xor
in
ja
loope
loope
into
into
addb
ds
cmpsl
lret
push
sbbb
jns
dec
xor
or
add
mov
pop
mov
testb
iret
cmp
push
pop
les
nop
iret
push
adc
xor
bound
movsl
cwtl
ret
lock
out
lods
push
mov
sar
cmpl
addr16
addr16
inc
jbe
enter
adc
hlt
inc
sub
xor
shll
jns
pop
or
insl
mov
push
js
lds
push
pop
fcoms
andb
xlat
or
sbb
xchg
stc
ja
dec
sbb
js
notb
leave
adc
pushf
mov
divb
mov
out
pop
sti
sbb
inc
push
outsb
ljmp
or
nop
add
mov
movsb
cmp
sub
lock
rcll
mov
clc
mov
jge
ret
push
adc
dec
sbb
stos
mov
subl
int
inc
hlt
xchg
inc
or
jo
lea
mov
rcrb
jne
pusha
sbb
repz
icebp
cmp
push
adc
xor
adc
dec
lods
sub
nop
insl
inc
inc
add
mov
jle
mov
push
sbb
pop
rcr
pop
out
add
aas
dec
scas
shrb
xchg
pop
addr16
gs
rolb
mov
inc
mov
adc
lcall
enter
lret
imul
test
mov
scas
les
add
inc
out
jnp
sbb
shl
dec
pushf
push
inc
insb
pusha
mov
mov
dec
or
inc
mov
pop
mov
mov
loope
test
sub
ret
dec
jl
sub
and
stos
inc
cmp
rorl
add
sub
stos
shl
mov
mov
jp
jmp
cmpb
cmp
jnp
loopne
int
out
pop
imul
mov
sti
and
mov
push
jns
dec
xchg
mov
adcb
mov
sbbb
stos
sbb
mov
jecxz
and
cwtl
pop
in
sub
dec
ror
inc
xchg
ds
push
insb
xchg
mov
xchg
and
inc
cltd
bound
imull
clc
ret
roll
push
loopne
sbb
fistpl
sahf
movsb
enter
dec
push
xchg
cmp
adc
iret
add
mov
sbb
lods
mov
mull
pop
cltd
adc
movsl
cmp
sahf
mov
inc
outsb
add
in
sahf
scas
popf
scas
test
fisttps
cmp
mov
push
dec
mov
pop
insb
cmpsb
fstpl
cmp
mov
aas
es
lret
xchg
dec
xor
and
mov
int
dec
scas
mov
pop
fadd
adc
xchg
xchg
cmp
dec
pop
sub
jmp
lds
popf
cmp
dec
aas
pop
iret
ds
adc
das
out
stos
adc
imul
sub
orl
popf
stos
add
rorl
or
dec
loopne
pop
scas
int3
into
aaa
rolb
int
mov
fld
inc
xor
pop
std
and
sub
stos
inc
jg
or
sti
rcrb
cmp
inc
cmp
sbb
xchg
mov
add
adc
ja
lods
in
dec
add
adc
rcr
jns
xor
cltd
adc
sub
mov
xor
fwait
movsl
repz
jbe
mov
daa
lods
clc
cmp
ret
jg
fdivs
mov
inc
test
cmp
es
mov
adc
nop
sahf
in
mov
cli
bound
lret
push
loop
sub
out
lcall
dec
adc
insb
js
in
movsb
iret
leave
sti
fmull
aad
cmpsb
aam
push
xlat
out
pushf
adc
aas
or
add
inc
lock
pop
mov
daa
arpl
aaa
dec
jbe
lahf
daa
xchg
fs
insb
daa
pop
lock
ljmp
dec
bound
mov
mov
adc
cmp
loopne
popa
sahf
loop
mov
xchg
cmp
addr16
push
dec
xchg
push
lahf
ja
sub
iret
sub
push
mov
xchg
inc
xor
in
shl
sub
mov
inc
movsl
rclb
lods
fidivrl
jmp
loopne
icebp
add
aam
pop
scas
dec
mov
or
push
mov
mov
push
inc
fildl
sbb
pop
xchg
xlat
cmp
cmc
roll
aas
xchg
cmp
enter
jae
inc
mov
push
or
decl
inc
jo
adc
ret
jne
mov
aaa
out
jle
sbb
in
pop
mov
push
fildll
fnsetpm(287
dec
enter
lods
cld
hlt
sbb
fisttpl
cwtl
dec
frstor
sub
and
adc
pop
iret
mov
cmpsb
cmp
or
cmpb
xchg
lret
jp
stos
push
mov
lcall
pop
mov
cmp
mov
shll
pusha
lret
pop
add
testl
jb
or
mov
jl
mov
mov
jbe
mov
xor
xchg
fidivrl
add
cmp
mov
mov
jnp
or
and
les
or
adcb
rolb
inc
push
xchg
ret
imul
push
push
inc
mov
jae
sbb
push
aad
mov
cmp
nop
cli
pop
add
popa
push
pop
int3
xchg
lods
adcl
loope
jnp
xchg
adc
scas
mov
dec
mov
adc
xlat
add
push
adc
nop
ret
adc
dec
sbb
and
inc
and
ja
ret
xor
das
scas
sti
pushf
outsb
inc
mov
stos
and
les
xchg
fstl
fnstenv
dec
test
push
stos
xor
lret
std
shll
cmp
jmp
mov
fdivs
fdecstp
lret
mov
adc
mov
test
or
test
pop
push
xor
adc
ret
leave
pop
pop
rorl
adc
enter
adc
rcll
bound
sbb
mov
push
ret
sbb
in
imul
int
mov
push
clc
cmp
cmp
lret
dec
sbb
adc
movsl
push
push
call
jg
arpl
icebp
ja
inc
mov
xchg
jg
add
cmp
mov
cmp
leave
fs
or
les
mov
xchg
adc
aas
loop
or
inc
icebp
lret
mov
or
sub
notb
add
mov
mov
js
mov
hlt
loope
mov
rol
jg
adc
sti
xchg
push
sub
movsl
dec
popf
cli
es
inc
dec
sub
pushf
cld
in
add
xchg
xchg
sahf
mov
mov
stos
loop
cltd
subb
lret
jg
inc
imul
mov
cmp
push
inc
aaa
mov
mov
or
lcall
inc
data16
mov
iret
pop
mov
insl
clc
out
sbb
add
push
xchg
xchg
jmp
xchg
push
test
imul
rorb
pop
adcl
pushf
bnd
mov
xchg
dec
mov
dec
push
ss
mov
mov
or
mov
lea
xchg
or
addr16
in
neg
adc
xchg
push
mov
dec
les
lcall
lods
pop
lock
adc
out
sub
add
enter
insb
mov
jb
cmp
ja
xor
mov
jge
imul
jno
test
pop
mov
inc
js
dec
out
int
popf
add
mov
xlat
mov
cld
inc
or
mov
add
ror
pop
enter
fwait
xchg
lret
dec
pop
cmp
sub
jecxz
jg
push
dec
sub
lahf
pop
jae
negb
sbb
dec
xchg
int3
sbb
maskmovq
imull
clc
into
lcall
xor
arpl
xchg
cmp
jl
or
mov
mov
jns
cmp
fsts
bound
in
cltd
inc
jl
pop
rorb
ss
adc
adcl
mov
xchg
sar
fs
xchg
mov
mov
insl
mov
lods
pushf
and
test
and
scas
mov
mov
or
adc
dec
jl
mov
adc
adc
cwtl
dec
mov
or
ja
inc
addr16
ror
cmp
jns
repnz
sbb
add
pop
adc
loop
jp
cmp
imul
or
sbb
test
mov
aas
pop
add
rcrl
mov
cwtl
stc
clc
and
cltd
scas
fstl
mov
jl
mov
imul
or
push
loop
inc
add
push
in
ret
icebp
push
repz
mov
aam
sbb
insb
inc
dec
mov
cld
pushf
jo
fldln2
scas
inc
pop
mov
inc
or
fcompl
flds
sub
fs
sbb
leave
in
and
pop
sti
lcall
pop
lds
mov
sub
in
sbb
mov
mov
add
push
mov
cmp
jo
sub
jbe,pt
add
inc
pop
sbb
mov
or
ret
pop
pop
mov
sti
pop
jmp
push
or
fdiv
push
mov
ret
loope
sti
pop
pop
cmpsl
ret
dec
idivl
shl
jp
adc
daa
jl
rorl
dec
mov
test
fstl
xchg
adc
dec
add
ficomps
mov
aam
push
mov
inc
jns
xchg
idivb
inc
jl
push
dec
ss
jg
out
std
jne
ret
sar
scas
push
mov
jns
mov
cmpsl
nop
cmp
aaa
fnstcw
push
jl
insb
push
data16
sub
cs
dec
shll
pushf
jns
sub
sbb
mov
outsb
mov
mov
cld
enter
add
jnp
sub
inc
and
xchg
out
sbb
inc
mov
mov
xchg
les
and
mov
popa
or
dec
xchg
cmp
movsb
xchg
test
sahf
adc
mov
fisubrl
dec
inc
lds
fsubp
cmp
jne
sub
mov
jmp
mov
cld
neg
xor
hlt
pop
pushf
xor
mov
repz
inc
and
mov
mov
loopne
adc
cmp
or
nop
mov
outsl
and
test
dec
lea
scas
ja
orl
pop
idivb
add
add
push
movsb
mov
movsb
jns
dec
dec
pop
xchg
pop
repz
movsl
adc
push
sub
jb
or
lret
sub
adc
xchg
cmp
pop
psubw
cmp
jl
mov
adc
dec
adc
in
dec
sarb
popa
push
inc
cmp
test
and
or
aam
jbe
pop
push
loopne
lret
jp
cmp
adc
jp
ds
sbbl
pop
lods
enter
rcrb
pushf
ret
xchg
mov
lds
and
cmc
loop
xor
daa
js
icebp
xchg
je
cld
data16
aaa
fldenv
dec
and
int
int3
aam
pop
sub
jb
stc
loope
sbb
or
fnstcw
popa
adc
pop
imul
inc
jl
imul
arpl
test
stos
fists
mov
inc
insb
lea
cmp
inc
hlt
into
aaa
inc
ror
fisttpll
ret
outsl
imul
repnz
sub
loopne
push
mov
lea
cmp
out
popa
jb
push
aam
or
pop
aas
adc
js
les
push
pop
ja
lods
lahf
dec
xor
xor
inc
push
mov
imul
cs
or
sub
sahf
scas
orb
xchg
scas
enter
and
adc
jle
jle
fidivrl
mov
gs
scas
dec
outsl
xchg
outsb
xchg
jmp
std
push
adc
inc
popa
jne
cmp
std
xor
inc
mov
fnstenv
stos
decb
xor
or
lret
cmp
aas
xor
in
jo
mov
fstl
push
iret
das
dec
jg
push
or
in
lret
stos
nop
jnp
inc
jge
sub
pop
add
mov
lret
decb
shrl
sub
mov
mov
jbe
test
cmpsl
push
sub
adc
xorb
push
subb
pusha
push
fimuls
daa
mov
les
pushf
add
rcl
jmp
push
lret
je
fsubrl
pop
mov
pop
xchg
and
movsl
jp
outsb
and
fiaddl
int
in
and
push
xchg
jno
pop
out
cmc
ss
xchg
call
pop
and
xor
stos
mov
xchg
lods
jle
mov
je
cltd
hlt
dec
icebp
out
pop
ja
xchg
jb
xchg
fs
adc
push
ds
sti
data16
mov
sub
fucomi
sub
aas
fsub
pop
mov
push
xchg
rol
ret
mov
xchg
pushf
stos
cli
add
ss
test
lods
dec
mov
add
sub
add
sbb
sbb
test
pop
pop
or
outsl
andb
push
lret
dec
fsubl
bound
adc
sahf
or
mov
cli
xor
sub
movsl
je
fistl
rclb
mov
add
insl
xchg
in
cmc
sbb
fldpi
rol
xchg
mov
cmpsl
std
movsb
ds
stos
fs
jo
test
pop
mov
sahf
enter
dec
leave
xchg
sbb
sbb
jo
jg
lcall
mov
outsl
sbb
cwtl
stc
lods
pop
sbb
insb
xchg
cwtl
xchg
xchg
jnp
std
shlb
arpl
shlb
jecxz
sub
enter
cmc
shll
sbb
stos
mov
cmp
out
jne
addl
idiv
xlat
sahf
add
inc
cld
inc
lds
aaa
mov
adcl
int
inc
xor
int3
ret
stos
fcmove
push
ljmp
fs
pushf
scas
pop
lds
ja
lock
in
andb
jle
xor
into
and
dec
out
push
aas
out
and
jo
jmp
jmp
cmp
test
mov
fmuls
adc
pop
jne
ret
pushf
loope
fcomps
aas
cmp
jae
mov
or
inc
mov
popf
rcrl
add
mov
ja
sbb
sbb
mov
add
in
pushf
push
fs
and
imul
jbe
testb
mov
dec
out
cmp
test
fldenv
xchg
jl
aam
dec
xchg
ljmp
add
sbb
movsl
aam
jns
add
sbb
mov
cmpsl
cmp
and
mov
dec
jno
push
pusha
xchg
icebp
dec
clc
frstor
xor
test
and
inc
mov
mov
mov
popf
out
std
cwtl
pop
sbb
jnp
dec
nop
mov
mov
jae
pop
inc
hlt
jecxz
out
lds
sbb
and
aam
fisubrs
incl
mov
add
jb
cmp
xchg
push
std
adc
popf
cmp
outsl
fstpt
std
pop
aam
cmc
push
xchg
pop
leave
lock
loopne
lock
and
aad
mov
cmc
rol
pop
ja
aam
pop
pop
shlb
fs
out
jno
lds
xchg
fidivl
loope
cmpsb
jo
jnp
cmp
xchg
fiadds
and
mov
arpl
test
jp
xchg
mov
jle
adc
pop
inc
push
fldt
inc
scas
mov
movsl
pushf
xor
mov
pop
ljmp
out
mov
fbld
and
enter
xlat
xor
ror
test
xchg
pusha
add
scas
jo
in
mov
pop
cmpsl
sbb
mov
call
sub
adc
stos
neg
xor
xlat
lcall
lods
inc
sbb
jg
mov
cs
ds
dec
cld
fwait
pop
sbb
enter
out
int3
jmp
mov
jo
xchg
int3
jecxz
add
sbb
fs
notb
test
leave
push
jg
push
aad
lret
pop
adc
cmp
out
mov
mov
mov
pop
clc
xor
into
xor
addr16
call
and
loopne
repnz
aaa
stos
sahf
ss
inc
lcall
subb
mov
fwait
jne
jnp
shl
lods
push
mov
adc
jb
lock
les
dec
inc
lret
cwtl
cld
inc
sbb
fidivs
neg
mov
imul
dec
out
adc
jns
popl
in
mov
ss
inc
jge
popa
incl
push
fldcw
cmp
and
or
lds
into
fisttps
jge
inc
loop
jbe
jl
mov
mov
push
insl
imul
int3
nop
stos
push
adc
xchg
push
or
mov
pop
pusha
adc
lea
pop
sbb
movsl
or
xor
xchg
mov
xor
dec
jle
int
lret
cmpsb
mov
mov
mov
call
mov
icebp
jle
pop
sub
ja
loope
add
andb
sbb
filds
dec
mov
ret
cmc
lds
jnp
mov
fcmovnb
and
std
and
adcb
cmp
mov
cwtl
cltd
and
test
cmp
jo
and
mov
popa
test
cmpsl
add
and
add
sbb
insb
push
inc
xor
add
push
push
or
cmpsb
mov
mov
dec
stos
aas
push
xor
jb
sub
js
push
call
xchg
cmp
dec
adc
xor
lods
lret
xor
jb
ficoml
pop
pusha
push
movsl
pop
cmp
add
insl
dec
jp
mov
or
push
rol
ret
sbb
jns
fs
adc
push
add
shrb
jne
les
pop
repnz
jne
inc
int3
cmp
lock
bound
cmp
inc
loop
mov
lahf
and
imul
test
adc
stos
xchg
cmp
inc
mov
sub
psllw
pop
punpcklbw
icebp
push
pop
popf
mov
xchg
roll
mov
ss
scas
fstpt
dec
mov
sbb
cli
adc
inc
ds
jl
call
int
mov
dec
testl
push
cmp
xor
out
pop
push
mov
jl
mov
pop
cmpsl
scas
dec
scas
add
add
cmp
or
dec
in
and
dec
xchg
sub
insb
dec
rcrb
dec
ds
subb
cltd
aad
inc
cmp
push
loopne
and
mov
xor
mov
nop
addl
jns
jp
mov
xchg
push
mov
cs
mov
adc
repnz
inc
popa
sti
popf
cmp
es
daa
test
pop
push
mov
pop
push
jmp
dec
mov
in
lea
cwtl
jmp
mov
sbb
add
pop
cmp
popl
shl
lods
push
movsb
cmp
jne
iret
imul
in
push
stc
sahf
sti
inc
shrd
cwtl
imul
imul
and
imul
xchg
jno
sti
dec
pop
adc
fwait
ret
xchg
sbb
mov
scas
in
scas
sar
rclb
stos
hlt
sbb
in
jno
loop,pn
and
mov
jns
jle
mov
mov
in
stc
std
push
mov
mov
sub
mov
pop
mov
add
or
xor
xor
in
pop
and
jmp
dec
repnz
and
pop
xor
or
mov
cltd
mov
bound
into
jmp
pop
pop
jecxz
aaa
imul
lods
sub
lods
mov
test
or
add
icebp
pop
sub
jae
ss
adc
jp
push
ss
mov
or
and
mov
mov
popaw
adc
insb
xor
ficoml
jmp
or
les
adc
push
pusha
push
dec
fsubr
dec
gs
mov
je
pop
mov
pop
ret
push
cltd
fucomi
popf
jl
dec
jg
push
xchg
mov
sbb
mov
in
sahf
sub
lods
dec
and
fisttpll
call
jo
xchg
add
ret
jle
sub
inc
in
and
jbe
mov
mov
ret
or
jl
dec
out
or
int3
xchg
add
sbbb
rorl
pop
sub
mov
sbb
pop
mov
fstps
adc
add
icebp
dec
notb
and
fadd
lods
xor
xor
mov
rcl
insl
test
and
movsb
mov
rclb
fbld
out
loope
mov
loopne
ds
pop
mov
sub
inc
sub
push
lret
mov
dec
js
mov
icebp
movhps
stos
bound
sub
inc
std
pop
adcb
and
push
mov
dec
jns
dec
inc
xor
lods
mov
and
fstpl
repz
mov
pop
test
mov
mov
inc
pop
xchg
leave
jge
mov
ljmp
int3
xor
cmp
imul
dec
fildl
dec
and
aad
cmpsl
data16
pop
sbb
add
sub
or
repz
hlt
imull
xchg
addl
mov
xchg
cmpsb
addr16
push
outsl
imul
movsb
lods
les
ds
xor
and
mov
pop
imul
sub
adc
roll
int3
imul
lods
and
xchg
pushf
xor
stc
push
mov
dec
scas
icebp
mov
push
and
xor
sub
mov
sub
jge
sub
mov
dec
push
xchg
std
push
or
int3
inc
xlat
test
inc
dec
jae
les
ja
loope
cmc
add
sarb
cli
es
adc
enter
mov
sahf
adc
mov
jp
sub
or
in
stos
adc
popf
int
adc
pushf
aad
cld
ja
adc
jge
in
xor
mov
movsb
sahf
and
lods
sbb
sbb
cmp
cltd
cs
lahf
cwtl
and
sub
test
hlt
jae
push
cmp
scas
pop
push
xchg
test
lcall
and
pop
pop
sbb
fs
test
mov
xlat
lret
xor
popa
push
dec
lahf
mov
movb
shrl
hlt
pop
outsl
jge
outsb
nop
lret
shll
cmpsb
pop
mov
ret
adc
inc
shrb
push
mov
mov
aad
stos
jbe
adc
in
jae
mov
loope
jb
xlat
popf
rolb
leave
jge
cmpsb
push
pop
insl
das
movsl
int3
call
icebp
sub
xlat
test
dec
out
or
in
dec
xchg
enter
imul
xchg
mov
jp
inc
sub
movsb
fidivrs
sbb
call
mov
jecxz
lods
adc
push
js
js
push
xchg
scas
adcb
lods
fwait
push
sbb
sub
dec
leave
int
rcr
cmp
dec
jno
push
pop
and
xor
cmp
icebp
daa
cmp
rclb
into
add
daa
rorl
lods
or
sub
addl
mov
jne
orl
mov
pop
cmpsl
in
cmp
or
loopne
inc
add
repnz
push
and
sub
push
mov
scas
scas
jg
sub
cltd
fildl
dec
adc
lods
xor
mov
stos
ljmp
sbb
test
repz
mov
add
aad
mov
test
inc
xchg
mov
push
inc
mov
sub
int
out
cmp
pop
mov
fxch
das
xchg
icebp
in
cmp
jno
xor
mov
jmp
push
ret
add
cvtps2pi
jno
or
pop
orb
je
loope
lcall
xchg
imul
icebp
pop
movsb
into
ljmp
mov
lds
aaa
jo
mov
mov
mov
shrb
pop
jg
push
js
mov
inc
je
imul
dec
cwtl
mov
jecxz
das
aad
adc
scas
inc
inc
xchg
rolb
test
scas
sub
sbb
and
xor
fsubrl
mov
inc
pushf
rclb
inc
fistpll
ljmp
sbb
mov
push
pop
sbb
and
lods
stos
ja
dec
ror
xorl
sbb
lock
test
test
fisubrl
out
xchg
and
stc
pop
push
or
daa
xor
adc
popa
cmpsb
jmp
fs
aas
pop
pop
mov
adc
xor
dec
dec
mov
mov
pop
mov
fs
add
push
out
sbb
aas
lea
sub
add
mov
push
mov
xchg
test
add
shlb
adc
adc
add
bound
stc
and
dec
fs
leave
mov
xchg
mov
or
aad
pop
es
inc
fwait
adc
or
testb
dec
inc
fisttpl
lea
jns
nop
test
inc
cltd
shrl
mov
sbb
sbb
mull
aam
popa
pop
loope
jmp
andl
fdivl
dec
sarb
insb
scas
cwtl
lock
subl
adc
roll
lds
cmp
ds
cmp
movsb
adc
dec
or
push
xchg
cli
sbb
insb
fnop
loop
ficoml
cwtl
pop
stc
dec
mov
xchg
push
ljmp
scas
add
fcmovnu
mov
add
dec
daa
mov
mov
jecxz
fildll
xor
xlat
cmpsb
fcomps
or
jno
faddl
or
clc
into
xchg
xchg
cmp
popf
adc
dec
xchg
outsb
cmp
dec
out
mov
dec
jg
sbbb
xchg
jp
cmp
or
xchg
repz
xor
mov
leave
hlt
pop
fiadds
push
jl
xor
sahf
in
cli
or
pop
inc
xchg
sub
sbb
int
insb
jg
test
scas
push
stc
pop
pushf
lret
in
insb
adc
add
cmp
gs
push
mov
sarb
inc
push
fwait
sbb
mov
inc
ret
push
pop
and
mov
adc
hlt
ret
leave
ret
inc
xor
test
mov
insl
xor
adcl
jmp
std
clc
rorl
mov
xchg
and
mov
repz
cmp
gs
jl
jle
pop
ds
add
fsubrs
test
cmp
in
or
fildl
push
sbb
ret
inc
xlat
fcoml
divb
loope
or
and
add
es
jp
cmc
rep
cmp
testb
adc
in
jnp
cmp
sub
mov
test
outsl
mov
je
ja
mov
nop
popf
faddl
xchg
adc
into
add
test
cld
or
push
or
push
mov
dec
sub
xor
mov
movsl
or
filds
test
cs
out
ficoml
out
cltd
push
inc
dec
in
cmp
add
inc
in
adc
adc
inc
lds
cli
jae
std
xchg
mov
xchg
pop
hlt
push
fwait
mov
dec
shl
dec
mov
cld
xlat
push
iret
xchg
in
loop
inc
push
popa
iret
hlt
jno
sti
mov
hlt
shrb
dec
ret
dec
repz
cmpb
inc
mov
inc
jle
movsb
popa
inc
add
mov
push
pop
sub
lret
inc
adc
mov
mov
int3
addr16
repz
mov
xor
xchg
xor
cmp
icebp
sarl
add
and
or
mov
and
ret
add
into
movsl
jg
sbb
incb
inc
and
xchg
dec
je
add
adc
shrb
jle
aas
mov
push
enter
xor
in
les
and
xchg
sub
test
bound
or
sub
sbb
test
xchg
ja
lods
test
lods
jmp
inc
mov
xor
and
rcl
insb
mov
mov
adc
lock
add
mov
out
jnp
mov
test
jne
pushf
out
push
shrb
jle
push
call
enter
sti
and
cld
frstor
sti
shrl
cld
pop
cmp
fists
mov
mov
test
jp
adc
shrb
hlt
or
sar
subl
xor
xor
aaa
push
cmp
in
jo
inc
inc
jecxz,pt
inc
leave
stc
insl
lds
cmpsl
mov
daa
movsb
jns
imul
pop
mov
jb
xor
aad
aaa
push
pusha
and
insb
pop
ret
stos
roll
lahf
and
or
das
decb
or
mov
dec
adc
in
pop
mov
and
out
sti
cltd
dec
cmp
test
cmp
add
jo
scas
leave
shll
adc
mov
push
xchg
jne
daa
jnp
mov
or
movsb
stos
ja
ret
pop
mov
sar
xchg
mov
les
ret
fwait
enter
dec
lods
int
ror
mov
pop
test
arpl
enter
fists
movsl
jle
add
and
sahf
sub
and
popa
shlb
addr16
dec
or
push
in
movl
push
dec
mov
insl
jnp
dec
jle
jo
lret
add
rcrl
mov
xchg
jne
stc
mov
fwait
lds
dec
inc
fwait
jg
inc
jle
cmpsl
fdivrl
jle
jne
or
push
out
xor
mov
and
mov
stos
lahf
aas
sub
jg
sbb
xor
sub
ds
rcrl
movsl
ret
jg
sbb
bound
sti
add
lds
inc
push
enter
rolb
ja
in
fs
and
add
cmp
clc
xchg
cmpsb
call
mov
pop
lret
ss
sub
push
jecxz
jbe
jnp
sbb
push
shlb
fidivrl
cmpsb
in
outsl
orl
aam
ja
sbb
and
andl
xchg
jge
add
stos
in
dec
cs
pop
dec
mov
and
push
or
push
and
pop
xor
cmp
mov
add
and
and
inc
and
pop
popf
pop
daa
out
push
fcomps
fdivrs
je
addr16
mov
mov
mov
arpl
fbld
repnz
cmp
inc
daa
popf
aaa
fcompp
sbb
pushf
movsb
int
cmp
mov
dec
movsb
dec
es
dec
jmp
and
dec
mov
fistps
cmp
pop
fildl
jl
call
or
test
push
mov
out
dec
or
subb
xchg
xchg
shlb
ja
adc
lcall
add
jae
sub
mov
mov
ss
mov
adc
scas
out
sub
xchg
dec
push
dec
sub
mov
aad
add
jg
outsb
inc
sub
mov
sti
mov
adc
ffreep
xchg
add
sbb
inc
pop
aad
xchg
in
mov
testb
inc
inc
push
jge
mov
bound
or
fs
idivb
ja
lods
lret
or
jmp
sub
jp
mov
stos
adcb
enter
shl
lods
pop
stos
jle
mov
add
cmp
cmp
imul
insl
lods
repnz
xchg
mov
push
aas
or
push
inc
inc
loope
push
sub
hlt
les
rclb
frstor
les
in
bound
adc
push
or
pop
test
sbb
lret
jno
hlt
cmp
push
xchg
outsl
imul
mov
enter
and
popa
jg
push
inc
pop
into
pop
jae
cmc
scas
sti
dec
int
stos
mov
cmc
fs
sub
fprem
mov
sub
xor
cmp
xor
popa
pushf
dec
bound
inc
xchg
stos
ret
mov
int
cmp
xor
fwait
dec
fcmovb
mov
mov
sub
push
popf
cmp
push
and
xchg
inc
pushf
lods
lret
jecxz
fmuls
iret
shlb
nop
inc
pop
cmp
ret
push
mov
fimull
sti
mov
or
fwait
dec
lds
mov
lret
mov
fistpll
fcmovnbe
dec
adc
lret
roll
out
sbb
inc
das
pop
push
xor
pop
mov
xchg
add
scas
sti
clc
gs
cmp
and
aaa
test
inc
cmp
fs
xlat
sbb
fwait
pop
jg
push
stos
imul
cwtl
mov
cmp
lods
push
add
mov
push
sub
push
sti
repnz
add
inc
push
dec
or
inc
cmp
pop
outsb
mov
inc
lahf
inc
mov
sub
cmpsb
xchg
adc
mov
repnz
mov
push
pop
mov
cmp
pop
lret
repnz
sahf
jle
lret
dec
imull
cmp
or
dec
cmp
pop
ja
push
pop
pushf
dec
lahf
inc
roll
or
jae
xor
std
dec
loope
xor
cli
xor
sbb
jns
mov
adc
mov
inc
mov
and
and
cmp
xchg
xchg
inc
push
lds
int3
and
and
jnp
stc
pusha
test
or
aad
insl
push
gs
test
sub
inc
xchg
arpl
dec
aaa
pop
push
xchg
mov
popa
mov
cld
inc
mov
and
mov
xchg
mov
mov
mov
inc
es
loope
leave
adc
stc
int3
inc
icebp
movsb
jl
sbb
lods
push
dec
int3
aas
cmp
mov
sub
pop
loop
dec
testl
sti
cli
enter
push
cmp
lock
repnz
outsb
mov
sub
jp
xchg
push
insb
fs
rcr
add
cwtl
or
mov
test
test
mov
fmuls
inc
fimuls
xor
ret
cmp
mov
inc
or
pop
fucomi
fcompl
jne
push
daa
sbbl
out
and
dec
loop
jmp
sub
mov
jle
ficompl
inc
cmp
mov
jae
mull
jl
jle
inc
dec
push
std
cmp
inc
fsubp
mov
xchg
je
in
js
scas
in
sbb
rcrl
cwtl
icebp
sbb
mov
pop
lea
cmpb
pop
push
pop
movsb
aas
push
jle
scas
jp
inc
addr16
ret
or
ret
xor
pop
cli
cmpsb
arpl
insb
sub
in
and
scas
shll
ss
mov
cld
jmp
loopne
dec
call
sbb
rcrb
mov
mov
or
lret
mov
cmp
test
sbb
cmp
xor
insl
jo
nop
mov
mov
pushf
fs
sbb
mov
imul
dec
lahf
loope
or
les
clc
push
rorl
adc
mov
rcrl
ret
scas
pop
inc
xchg
jmp
inc
jecxz
stos
leave
ret
arpl
xchg
sub
pop
jl
and
inc
mov
das
ret
cmp
pop
mov
mov
fcoms
mov
rcll
mov
pop
sbb
fwait
out
iret
xor
ss
add
ljmp
pop
inc
aam
jg
ret
adc
pushl
inc
adc
lea
sbb
inc
ja
jae
jmp
sbb
subl
fs
sub
ror
mov
arpl
or
mov
arpl
scas
mov
idiv
or
into
xchg
fisttpll
inc
and
scas
subl
fs
pushf
lock
push
sub
jbe
dec
pusha
add
flds
nop
fsubr
xor
xor
shrb
addr16
je
lahf
mov
aam
rol
mov
inc
mov
lahf
movsb
sub
scas
adc
test
lret
xor
cmp
iret
fmuls
mov
pop
cmpsb
leave
mov
adc
call
mov
enter
es
test
test
rcl
and
mov
bnd
sar
add
roll
popa
pusha
repz
and
pop
ret
les
cmpsb
lret
inc
test
hlt
sbb
test
subl
push
js
enter
in
scas
sub
push
rorl
je
cmp
rorb
fcompl
jbe
std
dec
sti
mov
add
sti
enter
iret
test
jle
jbe
adc
add
dec
hlt
jg
mov
sbb
pop
adc
cmp
and
mov
in
add
or
sub
test
pusha
ret
out
test
jg
inc
push
jl
jge
inc
or
in
adc
sub
fsubl
repz
adc
stos
jbe
shll
inc
xorl
mov
sbb
pop
les
lret
sub
xchg
mov
in
arpl
mov
das
xor
push
cmp
out
jp
jae
xchg
insb
lahf
inc
mov
movsl
jae
fs
dec
sbb
in
cmpb
shlb
cld
test
outsl
fisubrl
sub
fwait
xor
fisttpll
jae
mov
sbb
adc
add
push
inc
xor
fmull
cmp
mov
mov
fwait
mov
insb
xchg
mov
pop
push
inc
or
mov
mov
imul
rclb
pusha
push
es
xchg
pop
lods
clc
push
test
rcr
je
sbb
jbe
outsl
test
fsubrs
adc
in
sahf
pushf
ret
mov
add
add
pop
lret
mov
push
gs
cmpsl
add
in
add
repz
fdiv
add
in
dec
test
mov
push
xlat
jmp
push
cwtl
and
nop
mov
and
fisubl
jae
mov
rclb
imul
cmp
punpcklwd
cmc
push
bound
mov
xchg
inc
sbb
ret
or
lods
sbb
xlat
les
ret
cmp
pop
ljmp
enter
fwait
sbb
fcos
shll
imul
inc
xchg
movsb
push
mov
insl
lret
cld
mov
inc
sbb
ret
jg
jne
add
ret
dec
jnp
lds
lahf
xchg
mov
push
jb
lock
loopne
mov
inc
adc
mov
aas
je
adc
xor
jmp
pop
cwtl
sti
loope
jne
fidivrs
cltd
sbb
xchg
mov
les
shl
and
add
push
jb
dec
pop
int3
add
mov
mov
stc
out
add
and
cld
cmp
mov
decl
mov
and
or
hlt
test
xorl
push
jl
and
ja
add
ds
mov
fwait
xchg
outsl
push
sbb
pop
jmp
cmp
xchg
insb
movsb
scas
pop
sbb
jnp
pusha
inc
pop
shrl
loop
mov
sbb
or
rclb
xchg
lds
scas
flds
scas
je
or
cld
push
adc
mov
inc
insl
mov
xchg
pop
cli
xor
adc
or
into
test
ret
js
xor
movsb
mov
adc
and
push
jbe
scas
inc
sbb
jno
mov
pop
add
sbb
incb
outsl
push
pop
cli
out
jns
adc
sub
cmp
xor
and
movsl
cld
js
and
incb
push
ret
xor
or
add
js
outsb
scas
scas
sub
jb
inc
push
fimuls
idiv
push
mov
xor
test
adcl
jp
ret
adc
fadds
leave
mov
aaa
mov
xor
insl
sbb
fwait
enter
bound
dec
stc
mov
sbb
cmp
jp
sbb
out
adc
jae
push
fbstp
pop
cmpsb
call
pop
aad
or
lret
movl
shl
xlat
mov
ja
pushf
push
sub
mov
lds
enter
in
test
pop
cmpsl
mov
lret
jge
cs
inc
push
sub
dec
cmpsl
adc
add
daa
fistl
xor
cmp
fwait
pusha
adc
and
scas
dec
xchg
sub
pop
mov
lods
lahf
test
adc
frstor
mov
adc
dec
adc
mov
and
sahf
sbb
scas
xchg
xor
aam
cmp
in
xor
js
sub
sbb
and
rol
mov
ror
shr
aad
je
insl
dec
mov
stos
lods
pushf
mov
loop
pop
inc
mov
xchg
dec
and
ljmp
movsb
add
lret
or
sbb
in
jae
adc
rcrb
fistpl
inc
sbb
je
mov
lcall
push
push
dec
lock
shrl
pushf
pushf
push
pop
jb
sbb
or
cmp
cmp
inc
xchg
pop
outsb
bound
imul
test
dec
mov
sub
xor
test
sbb
test
popa
xchg
pop
fnstenv
rclb
sub
pusha
and
mov
rcrb
dec
sub
mov
mov
ja
fs
cmpsb
test
addr16
addr16
lcall
fistl
inc
adc
mov
cmp
pmuludq
fistl
cmpsl
inc
xor
scas
aad
shll
mov
in
psadbw
push
repz
sti
fidivrs
mov
mov
cld
aam
jp
dec
cmp
cs
sub
xchg
push
mov
pop
mov
mov
jmp
fisttps
stos
xchg
mov
and
fwait
or
lds
cmpb
mov
jmp
push
cs
arpl
add
imul
pop
jmp
dec
popl
pusha
add
mov
out
mov
mov
sub
aad
cmp
scas
fadd
push
jne
incl
jo
push
fdivs
push
fidivs
jmp
jne
outsb
add
jle
bound
fldcw
inc
pop
ds
dec
xor
icebp
lcall
mov
rol
xchg
push
outsb
mov
pop
rcll
scas
jne
loopne,pt
mov
mov
mov
cmpsb
out
and
cmp
cli
into
mov
lret
and
mov
push
bswap
scas
jp
cs
or
jae
or
xchg
decl
jbe
xor
sbb
out
cs
jae
aaa
inc
aaa
mov
dec
test
es
test
lret
stos
xchg
pop
popa
xor
hlt
mov
jmp
jp
and
jl
leave
jno
iret
enter
mov
cld
pop
sub
out
dec
fcmovbe
cmpsl
and
imul
mov
or
js
sahf
sar
mov
jl
addr16
pop
imul
jle
fwait
and
or
cmp
int
dec
sub
or
clc
xchg
out
je
cmp
test
sbb
xlat
std
and
and
xchg
ja
push
insl
sbb
aad
testb
dec
out
mov
popa
in
dec
popa
fwait
lds
test
sbb
jl
mov
dec
outsb
xor
jns
cltd
mov
xchg
pusha
add
adc
pop
xchg
call
mov
insb
lahf
dec
popf
pop
test
jmp
mov
addr16
fsubrl
xchg
je
loope
mov
shll
jecxz
sub
popf
repz
jns
addr16
or
mov
lahf
push
push
adc
popf
and
jb
sbb
mov
in
test
cs
dec
sub
in
sub
xchg
and
ret
mov
mov
iret
repnz
sbb
xchg
jnp
sbb
in
pop
pop
scas
mov
and
sub
in
or
mov
js
scas
add
jmp
inc
stc
test
loopne
dec
cltd
jbe
pop
jg
lea
xlat
add
dec
lahf
dec
pop
in
pop
cmp
fldenv
mov
push
es
imul
addb
cmpsb
or
rolb
test
inc
adcl
xchg
mov
push
or
rcl
cmp
push
dec
pop
ror
mov
jb
gs
mov
scas
sub
sahf
std
pop
jno
pop
lods
filds
cmp
stc
out
and
movsb
xor
xorb
pushw
les
xor
fwait
addr16
or
jae
add
fcompl
jo
repz
insl
jmp
ds
fimull
out
rolb
outsb
ss
shr
pop
jo
fldcw
xor
push
jp
sbb
adc
fcomps
jmp
in
insb
mov
cmp
icebp
fstpt
rorl
cmp
cld
dec
inc
roll
scas
lret
cmp
je
fsubrl
je
xor
fmul
insl
int3
and
mov
sub
xchg
inc
pop
xchg
out
testl
ss
mov
jl
pop
ficoms
dec
or
fsubl
cmp
xchg
mov
add
cwtl
add
adc
fnstcw
cli
push
mov
fwait
inc
imul
bound
jb
int
bound
jnp
fisubrl
lds
lock
icebp
cmc
mov
test
out
dec
inc
or
icebp
inc
mov
jae
mov
js
aas
lea
aad
ficompl
mov
sub
js
or
mov
aas
cmp
popa
imul
nop
add
jb
aam
push
nop
push
loop
dec
rolb
xor
xchg
mov
xor
cs
pop
test
xorl
jg
movsl
popa
pop
push
inc
mov
lcall
push
leave
ror
xchg
leave
jl
fisubrs
push
push
ret
add
sbb
add
movsl
fistpl
fsts
mov
xchg
pop
pop
sbb
test
int
incl
or
jmp
mov
sbb
testb
mov
and
lods
push
fstl
cmpsb
mov
dec
cs
pop
out
aas
lods
add
div
cmpsb
xchg
rcrb
xchg
adc
mov
test
mov
loope
fidivrs
jb
mov
test
rcll
insl
cwtl
cs
cltd
mov
xlat
jnp
pushf
xlat
inc
sub
and
imul
iret
pushf
jnp
stc
inc
cmpsl
loop
mov
push
sub
mov
movsl
add
loopw
or
cmp
pop
pop
jne
dec
aam
lods
mov
jne
jae
addl
addr16
out
fs
cs
jle
dec
or
mov
leave
pop
shrb
decl
mov
xlat
xchg
sub
stos
sub
pop
pop
enter
pop
jno
pop
push
sbb
mov
ss
xchg
xchg
mov
filds
mov
pop
ror
int3
adc
push
popa
cmp
push
mov
cmc
jae
sub
outsl
cld
mov
stos
subb
in
mov
sub
iret
cli
mov
mov
cltd
and
pop
fsubrs
test
sbb
dec
sahf
out
cmpb
sti
cmc
bound
and
mov
cmp
push
bound
imul
xchg
inc
mov
pop
xchg
shr
add
pop
dec
int3
or
rclb
pop
xchg
push
ret
mov
js
jecxz
push
test
cld
pop
mov
dec
loop
enter
xor
or
push
push
incl
dec
jmp
ret
dec
mov
cmpsb
sbb
and
sbb
mov
imul
pop
clc
mov
xor
inc
cwtl
mov
push
and
enter
scas
mov
add
add
sti
scas
xchg
push
inc
fldt
or
test
cmp
jo
xchg
imul
mov
add
adc
push
adc
pushf
xchg
jmp
test
pop
addb
jle
shr
rcll
xor
push
imulb
or
mov
cld
cmp
cmp
and
adcl
movsb
jp
inc
xor
or
clc
mov
sub
pop
mov
xor
out
cwtl
sub
lods
ror
or
imul
loop
pop
adc
lock
mov
sub
mov
js
pop
outsb
jne
int
ret
mov
pop
push
rcl
dec
add
xchg
or
flds
adc
push
xchg
scas
xchg
jns
insb
fldenv
les
loope
lcall
sbb
or
lods
xor
std
fsubrs
dec
inc
push
imul
dec
jecxz
or
and
pusha
jg
push
mov
sub
mov
shlb
imul
cmp
jbe
or
mov
xor
jno
movsb
fcomip
push
jb
out
jb
stos
jns
jecxz
push
imul
or
xor
mov
dec
fldenv
fdivrs
ds
xor
ja
jl
aad
sbb
mov
cltd
pop
out
mov
mov
repz
lods
call
mov
lods
dec
jo
cltd
xlat
add
pop
mov
sbb
and
mov
mull
adc
ljmp
pop
incb
pusha
jns
lods
pop
push
xchg
mov
dec
or
mov
sbb
mov
sbb
add
pushf
rep
jo
and
push
sbb
mov
push
lods
inc
or
adc
mov
ljmp
add
clc
dec
movsl
dec
stos
inc
in
inc
add
jnp
mov
arpl
inc
imul
in
add
mov
hlt
aad
shlb
push
sbb
sbb
insl
inc
dec
mov
bound
cmpsl
pop
jge
mov
sti
lods
ljmp
xchg
adc
mov
stos
inc
ret
mov
cmc
inc
or
data16
imul
or
pop
inc
mov
adc
out
lahf
into
jmp
or
jg
jo
dec
lcall
push
movsl
outsl
int
sbb
jge
and
push
sbb
and
push
cld
jo
imull
adc
inc
or
imul
enter
xor
call
mov
dec
in
sbb
adc
stc
push
mov
jle
call
pusha
outsb
add
es
loop
sub
jp
xchg
ja
mov
dec
daa
jns
push
shrl
adc
and
icebp
xor
popa
pop
mov
test
add
mov
fsubrs
inc
ds
hlt
fnstenv
in
js
test
popf
push
lret
cwtl
mov
xchg
fstl
call
lock
ja
mov
or
outsl
aas
in
lods
or
xor
push
jmp
mov
leave
mov
xchg
sub
test
fwait
push
dec
and
call
lcall
mov
push
inc
flds
xchg
stc
lret
cmc
push
jmp
push
and
in
adc
push
mov
mov
rol
pop
mov
in
ret
test
jmp
stos
mov
lea
mov
mov
sbb
out
mov
cmpsl
mov
test
push
mov
add
insb
pop
xchg
and
rcl
pop
mov
mov
scas
lods
syscall
inc
insb
mov
aaa
mov
jns
add
xor
in
fnstsw
pop
xor
jmp
ret
sub
push
pop
scas
push
mov
push
out
imul
call
or
lea
or
ljmp
add
jae
mov
mov
jne
adc
mov
or
jle
fdivs
movsb
sbb
xor
mov
pushl
inc
pusha
pop
adc
test
xor
sbb
inc
mov
jge
lods
xchg
add
imul
aaa
jb
iret
cli
or
cmp
sbb
or
sub
dec
mov
pop
iret
int3
pop
xchg
xchg
cmp
ds
out
loopne
lret
mov
test
xor
inc
in
xchg
sti
or
sti
int3
rorl
mov
mov
sub
pop
pop
dec
idivb
xor
jbe
mov
mov
push
xor
and
xchg
iret
insl
sahf
mov
daa
mov
ret
lods
jmp
test
pushf
in
int3
jge
mov
add
lds
jg
insl
add
enter
popf
lock
enter
pop
jb
in
ds
fwait
test
and
push
jg
data16
push
push
jns
ret
xchg
push
or
cmp
mov
cmpsl
int
nop
cltd
push
iret
add
fmuls
xchg
jmp
mov
mov
mov
addr16
outsl
cs
xor
pop
repz
into
lret
out
inc
insb
int
or
xchg
out
mov
testb
stos
xchg
adc
inc
mov
xor
push
sbb
je
lret
fistl
dec
adc
and
sbbl
addr16
incb
xor
outsl
mov
mov
xorl
jmp
jl
pop
jle
stc
push
cmpsb
int
xchg
mov
mov
mov
sub
xor
adcb
jnp
aas
xchg
lahf
mov
movsl
cmp
sub
movsb
dec
pop
fldl
and
jnp
cmp
fmulp
insb
stos
clc
mov
mov
or
out
popa
or
andl
adc
mov
rcrl
add
pop
jbe
mov
fisttpl
jne
jp
fisttpl
mov
jnp
decl
xchg
outsl
jmp
popa
mov
enter
mov
movhps
inc
cmp
xchg
cmp
test
popa
lds
pop
or
jge
aas
lea
mov
and
dec
xor
stc
leave
sbb
ficoms
shlb
mov
or
lds
aas
cltd
dec
pop
jle
lds
cmp
sub
mov
mov
lea
and
cmp
dec
xor
lds
leave
jmp
dec
add
nop
pop
test
jle
ret
cmpl
xchg
stos
push
inc
cmp
rcll
jno
mov
pop
cmp
sub
and
jo
lea
popf
cmpl
daa
adc
adc
dec
nop
std
mov
jns
and
movsl
xlat
in
xchg
mov
dec
cmp
mov
lahf
jg
sub
aaa
in
push
in
pop
pop
inc
add
sbb
lcall
ret
push
in
scas
inc
push
and
aaa
std
cmp
punpckhwd
cmp
xor
js
adcl
or
iret
xor
jg
pop
adc
fidivs
pop
out
pop
sbb
pop
arpl
xchg
xchg
iret
out
aam
adc
in
daa
mov
faddl
fldenv
push
test
pop
adc
pop
cmp
int
cmp
fnstenv
dec
ljmp
sti
sub
adc
adc
outsl
aaa
cmp
pop
mov
jge
inc
jns
jae
jle
lahf
sbb
add
ljmp
in
cmp
xor
mov
push
xchg
dec
adc
mov
sahf
push
scas
es
xchg
or
sub
pop
rclb
mov
lret
or
and
in
fdivrs
jg
icebp
and
lock
cs
dec
xchg
lea
sub
imul
out
pop
dec
push
inc
cmpl
outsl
xchg
addb
icebp
and
insb
xor
jmp
lret
fsubl
and
imul
loope
dec
or
cmp
mov
lret
mov
shll
xchg
inc
add
and
xchg
out
int3
les
jne
mov
and
fchs
dec
and
std
or
flds
sti
mov
scas
dec
mov
inc
les
add
jp
pop
xor
movsl
fwait
push
mov
lods
dec
mov
fadds
into
mov
lret
xchg
decl
lea
imul
cmc
dec
shrl
jo
test
movd
lahf
psraw
lahf
add
lret
outsl
mov
jmp
in
jns
jne
adc
pop
sub
fistpl
jbe
jns
popa
cld
mov
imul
xor
push
and
mov
pusha
sub
stos
in
popa
in
sbb
cmp
lahf
dec
pop
outsb
imul
shll
les
sbb
fs
add
xchg
mov
pop
push
lds
lods
stc
fsts
dec
arpl
shrl
adc
in
jle
add
and
add
test
outsb
inc
sbb
mov
dec
insl
push
pop
sub
cwtl
or
ja
or
jg
fmul
sub
jle
test
fcmovne
cmp
fsubs
jbe
popa
cmp
sahf
ljmp
xor
js
dec
xlat
mov
mov
mov
scas
sbb
jbe
or
andb
inc
inc
push
mov
dec
pop
mov
inc
sub
fisubrl
dec
mov
rorl
icebp
xorl
sbb
add
push
xchg
loop
pop
in
xor
sbbl
fld
out
mov
in
inc
inc
push
xor
std
aas
shrl
sbb
or
sub
or
roll
cld
insl
mov
mov
or
push
notb
mov
dec
nop
test
ljmp
pop
jnp
rolb
sub
push
xor
dec
jg
lods
test
sar
pop
mov
xchg
add
mov
mov
sub
mov
dec
shrl
pop
mov
addr16
leave
fstpl
xor
mov
sbbb
xor
xor
repz
pop
jge
adcl
sub
mul
in
das
in
rcrl
mov
xor
sbb
rcll
enter
pop
mov
cmp
mov
mov
adc
mov
fildl
leave
popa
push
mov
inc
shrl
loopne
lods
cmp
rcl
outsl
jne
sbb
cmp
sub
imul
add
jne
mov
imul
pop
cmp
jge
testl
frstor
mov
inc
mov
int3
sti
sbb
jl
jae
cmp
pop
sti
into
arpl
das
test
cmp
xchg
inc
dec
loop
mov
les
xor
iret
sbb
xchg
jae
shlb
push
or
daa
shrb
in
shlb
mov
ret
clc
js
adc
jns
or
xor
imul
add
fiaddl
mov
addb
inc
lret
in
inc
xor
hlt
addr16
inc
lea
scas
imul
mov
push
xchg
push
jmp
sbb
mov
std
mov
push
out
repz
fidivs
iret
sub
fistps
sub
faddl
jo
lcall
popa
xchg
dec
inc
arpl
sbb
iret
jp
stos
dec
nop
int3
out
jecxz
sbb
shll
nop
xchg
pmulhuw
xor
mov
mov
sbb
sub
add
not
jp
inc
int
sbb
pop
dec
or
pop
jns
std
and
or
mov
pop
test
lahf
xor
cmpsl
or
popf
ds
pop
in
mov
int
cmpsb
idivb
adc
stos
mov
and
lret
sar
or
repz
aam
ds
mov
aam
cld
or
jmp
ja
pop
pop
inc
fcompl
lods
cmpsl
nop
fwait
mov
mov
cmp
gs
jb
js
gs
inc
xor
dec
mov
xor
mov
shrl
outsb
fsubrl
in
ja
xchg
xchg
inc
jb
cmpsb
cmp
or
mov
daa
sub
lahf
into
in
inc
mov
or
ss
sbb
rcr
sti
lea
testb
lock
in
lods
mov
pop
mov
mov
pop
loope
adc
mov
xchg
lea
mov
icebp
decb
jne
jge
mov
out
inc
cmp
mov
outsb
or
or
clc
andb
sub
das
xchg
lea
enter
dec
add
imul
loopne
mov
mov
push
add
ret
cmp
testb
lock
xor
fidivrs
iret
push
insb
xor
xchg
xlat
arpl
and
andl
das
das
repnz
xor
or
test
dec
popa
int
in
or
or
shl
ja
dec
jmp
jg
mull
mov
mov
inc
shlb
mov
add
push
rorl
pop
mov
int
sub
inc
push
mov
lcall
add
mov
jl
add
mov
jnp
aaa
movsl
sbb
inc
and
xchg
inc
push
xchg
out
rolb
jl
aad
out
add
and
in
jp
mov
popf
cmp
add
mov
cmp
sti
loope
test
mov
popf
insl
pusha
push
ret
popa
push
mov
into
jp
dec
bound
and
push
adcb
fs
inc
add
inc
ja
rclb
cmp
hlt
out
out
add
fnstcw
add
adc
sahf
repz
shrb
loopne
sub
stos
mov
mov
pop
loop
inc
xchg
cmp
adc
movsb
sub
push
setns
jo
lret
pop
std
cli
insl
pushf
stos
aad
mov
aam
stos
loope
into
dec
mov
lret
ja
push
add
pop
adcl
cmp
push
sub
ror
stc
sub
cwtl
sub
out
fmul
mov
push
jnp
aas
sbbl
cmp
pop
in
aaa
and
addb
lea
sbb
punpckhdq
xchg
outsb
lret
jg
add
mov
push
mov
sahf
pop
cmp
pusha
imul
sti
sti
add
sbb
cmp
out
decb
imul
rcll
fbstp
cmp
lcall
push
das
or
rorb
cmp
ss
cltd
cmpsl
cmpsb
imul
cmc
movsb
adc
push
push
mov
test
pop
call
repz
dec
out
rol
seta
xor
adc
adc
out
adc
leave
push
cmp
ss
add
call
adc
push
lcall
xorl
clc
mov
push
testb
pop
mov
jl
xor
leave
or
aad
jmp
pop
dec
loop
inc
and
jmp
xchg
adc
fstl
les
neg
or
es
push
std
xor
pop
sti
sub
dec
lods
mov
jmp
imul
test
ffreep
push
rcrl
mov
push
sti
les
and
adc
mov
cmp
filds
and
push
std
cmp
cmp
inc
cmpb
pop
cltd
xor
flds
insb
ret
jnp
fstps
lret
paddusb
mov
cmp
rolb
and
fsts
dec
xchg
mov
mov
jne
aas
nop
cld
sbb
sub
mov
sbb
ret
ret
xchg
sub
inc
push
ja
sbb
popa
daa
or
adc
pop
cmp
inc
xor
rcl
dec
xor
dec
jg
ret
xchg
cmp
gs
repnz
add
mov
test
cli
imul
pop
push
or
cwtl
addr16
dec
cmp
or
popf
mov
rcr
xchg
sbb
mov
or
jmp
sub
shll
aas
js
jl
cmp
inc
movl
xchg
jae
bound
pushf
cmp
or
push
cmp
lret
mov
sbb
icebp
pop
and
ds
inc
loope
jle
mov
std
out
or
push
or
hlt
ss
add
adc
push
mov
sbb
pop
pop
pusha
pop
das
jge
clc
add
add
push
in
inc
jp
mov
leave
pop
andb
mov
pop
jno
dec
data16
cli
mov
fxch
inc
sti
adc
inc
lock
or
cld
lea
sub
shll
gs
scas
inc
pushf
les
stos
xchg
dec
add
enter
xchg
push
xor
test
arpl
add
orb
mov
movsl
mov
or
rcr
std
xchg
loopne
inc
and
rcrb
and
jg
jg
out
push
cmp
testb
push
loope
cli
mov
push
pop
out
lds
ljmp
mov
push
addr16
cmp
push
cwtl
test
mov
adc
lahf
std
xlat
outsb
test
ss
lahf
and
adc
andb
ds
pop
and
stos
lret
mov
jg
xchg
push
ljmp
sarl
test
into
cmp
jnp
add
cmp
dec
imul
push
ret
je
rcrb
and
lods
loope
hlt
add
lea
fsubs
xor
mov
mov
test
mov
add
lahf
sub
mov
in
dec
sbb
sbb
add
inc
add
xor
std
cmp
cltd
cmp
mov
scas
push
mov
imul
push
xchg
mov
daa
test
ja
fsub
push
pop
jecxz
mov
lahf
cmc
add
xchg
cld
pop
jns
sbb
sbb
pushf
jae
add
xor
test
arpl
mov
aad
cwtl
xchg
and
out
mov
mov
lds
lahf
jno
insb
jg
mov
mov
add
aam
fs
xchg
jno
pushf
inc
arpl
mov
mov
add
and
or
mov
adc
test
arpl
icebp
mov
push
xor
fisubs
or
orb
cwtl
outsl
cs
sub
test
jno
push
imul
lcall
mov
jmp
mov
test
adc
adc
jbe
jp
das
xlat
push
pushf
inc
je
mov
cmp
roll
cmpsb
jg
ja
scas
lcall
adc
fld
push
sbb
add
mov
jne
push
mov
jmp
cmp
ljmp
fistpll
pop
test
icebp
dec
je
xchg
sub
cmpsb
mov
sub
fs
xor
push
lea
cltd
cwtl
sahf
push
dec
mov
or
les
mov
adc
mov
js,pt
push
mov
pop
or
pop
cmp
shrl
or
sti
and
iret
out
jl
mov
cmpsb
cld
xor
mov
dec
mov
mov
sub
mov
jg
clc
mov
js
in
sub
out
dec
out
arpl
enter
mov
jno
dec
push
out
lds
sbb
mov
clc
mov
inc
iret
mov
lock
ret
sbb
aas
jmp
fistl
test
inc
mov
add
imul
and
jns
lods
mov
inc
cmp
rcll
call
xchg
mov
mov
sbb
add
pop
xor
cltd
clc
xchg
bnd
add
loope
jb
and
insl
int3
xorb
cld
add
andb
mov
fsubrp
jne
repnz
fdivrp
mov
je
inc
mov
movsb
js
xlat
test
adc
shlb
rcr
mov
out
pushf
mov
in
sub
inc
popl
xor
in
mov
push
mov
lods
scas
int3
mov
xor
test
iret
and
popf
jmp
add
cmpsb
push
arpl
lahf
xchg
dec
jae
adc
pop
jno
cmp
sbb
dec
jecxz,pt
xchg
mov
idivb
aad
mov
fbld
out
xlat
sahf
mov
test
jecxz
in
enter
xchg
jo
sub
int
jns
mov
dec
inc
movsl
dec
out
je
pop
push
jg
pop
adc
jle
and
jb
mov
xor
push
std
mov
push
sub
std
movsb
jne
inc
lea
call
adc
lds
mov
shlb
or
adc
or
rol
shlb
add
loopne
pop
pop
inc
add
test
push
dec
jae
negb
cltd
mov
sub
jge
dec
into
push
jmp
inc
aam
inc
jmp
sub
mov
mov
js
cmp
sub
cld
or
out
movsb
pop
in
push
jmp
mov
aad
sbb
ret
xorb
ja
mov
aad
pop
leave
fistpll
mov
adc
clc
sub
and
add
mov
cltd
rcrl
ud0
daa
cld
in
mov
nop
add
ret
out
scas
or
mov
jl
push
inc
add
adc
popa
loopne
jl
cmp
out
adc
imul
rorl
pushf
imul
cmpsl
mov
decb
adc
push
mov
sbb
xor
inc
push
cmp
fs
andb
out
and
pushf
cld
les
fisttpll
subl
push
inc
pop
movsl
imul
jns
mov
jge
in
xor
loop
faddp
xchg
xchg
push
les
adc
add
clc
int3
jnp
jl
out
fstl
mov
push
fldt
jle
ret
mov
sub
out
lret
pop
pop
or
inc
insl
leave
dec
lcall
sbb
aam
add
and
icebp
popa
pop
fildll
nop
test
loop
add
loop
xchg
jns
mov
jb
pop
rorl
push
test
cs
cmpsl
into
mov
pushf
in
push
jnp
dec
or
sub
jecxz
pop
inc
sub
int
or
jo
mov
sarb
test
fs
lock
xlat
pop
lahf
or
mov
push
aad
jl
mov
and
xchg
repz
mov
xchg
cmp
les
test
mov
aaa
cltd
cmp
pop
cs
mov
mov
cwtl
aaa
inc
insb
test
lods
hlt
push
jecxz
les
mov
out
js
dec
or
out
inc
mov
dec
mov
mov
cld
cmc
testb
dec
push
xor
mov
test
xchg
out
sub
aaa
cmp
jl
mov
rol
cmp
mov
pop
into
cli
pop
adc
repz
adc
mov
rclb
sarl
loop
scas
ss
addb
push
sub
loop
mov
stos
insb
dec
std
pop
pop
cmc
xor
pop
shll
adc
mov
lods
cltd
aas
cmp
hlt
loopne
or
pop
mov
popa
out
lret
in
fistps
inc
or
mov
push
dec
int
imul
dec
imul
mov
hlt
outsb
or
loope
scas
jns
insb
pop
fldt
notl
inc
jns
loop
lahf
test
jnp
dec
cmp
xchg
push
pop
bound
sub
xchg
mov
jno
addr16
sub
jle
jg
sub
push
adc
add
mov
daa
push
mov
in
mov
pop
adc
loope
nop
mov
xor
push
fcoms
call
mov
xor
xchg
getsec
test
dec
cmpl
sub
bound
ror
mov
jl
shrb
pop
ret
add
cmp
mov
mov
lcall
jg
and
imull
jb
aaa
fsub
xor
push
push
or
xchg
mov
dec
das
mov
movb
cmp
add
loope
push
dec
lret
push
iret
xchg
or
fs
cltd
shlb
loope
pop
nop
ljmp
scas
xlat
xchg
jle
push
pusha
pusha
mov
cltd
repz
jmp
pop
ret
sub
les
cmp
xchg
cmp
fldenv
or
pop
push
stos
xor
fdivrs
sbb
dec
popf
lcall
ret
pushf
idivw
aam
out
push
inc
out
stc
lea
add
jns
shlb
and
cmpsb
xchg
leave
xchg
negb
popa
daa
aas
adc
mov
sub
inc
adc
arpl
mov
daa
xorb
push
lret
popf
add
inc
popl
sbbl
dec
pop
aad
push
daa
push
into
pop
cltd
movb
mov
je
stc
stos
add
in
mov
adc
or
inc
jae
ret
lds
jmp
push
pop
push
mov
loope
gs
ror
pop
aaa
jle
test
jp
cmpsl
int
into
pop
sahf
xchg
popa
sarl
test
fldcw
fwait
cmp
xor
mov
jge
cmpsl
pop
frstpm(287
mov
mov
or
push
iret
pop
jno
mov
lds
inc
xor
or
pusha
push
in
push
cmpsl
xor
test
cltd
bound
and
lret
sub
lcall
ds
mov
subb
out
insl
ljmp
repz
add
shrb
xor
mov
nop
ret
push
gs
pand
pop
fisttpl
fists
adc
pusha
or
cs
inc
fst
mov
inc
jns
and
mov
sahf
jns
mov
mov
bound
icebp
ja,pt
mov
call
in
inc
mov
pop
stos
fcmovnb
or
mov
fsincos
std
test
add
adc
adc
mov
sbb
fisubs
repnz
popf
mov
inc
mov
push
inc
cmpsl
aad
shld
push
xchg
mov
loop
test
push
call
cld
mov
cmp
scas
jns
adc
in
xchg
add
jno
sbb
scas
repz
inc
mov
dec
xchg
push
test
scas
mov
fistl
push
xchg
fnstenv
mov
sbb
lret
sbb
dec
push
push
inc
fdivl
jmp
jne
cmpsb
ljmp
testl
lret
pusha
roll
or
inc
stos
imul
and
movl
leave
xchg
add
mov
ja
lock
pushl
cmp
jmp
ja
cmp
testb
incb
ret
xchg
inc
pusha
inc
and
popf
in
mov
dec
or
inc
mov
xchg
xchg
icebp
lods
mov
push
in
icebp
mov
and
adc
cwtl
and
jnp
jg
mov
je
push
daa
test
and
inc
mov
stos
ret
mov
aaa
xor
push
inc
rsm
test
inc
fs
cmp
cmc
shl
std
adc
dec
call
gs
jg
fiadds
mov
pop
push
cld
add
dec
jle
lahf
add
xchg
push
mov
in
stos
cmp
mov
inc
mov
movsl
sti
dec
lock
loop
or
shl
fldt
fldl
jne
pop
jb
repz
arpl
repz
mov
pushf
jecxz
adc
or
imul
cmp
push
add
or
inc
push
lret
test
cmpsl
or
js
xchg
push
stos
jne
loop
adc
jge
mov
insb
ds
mov
jecxz
add
enter
mov
adc
mov
aaa
stos
inc
and
push
and
jmp
lods
adc
bound
cmp
and
scas
cltd
dec
pop
xor
jne
aaa
adc
shrd
mov
in
lds
arpl
inc
into
iret
fmuls
roll
out
xchg
ror
popa
inc
out
lock
fbstp
push
in
pop
sub
and
fs
imul
dec
jmp
loope
lret
sub
cmp
adc
mov
loope
xchg
add
popa
xor
test
sub
bnd
sbb
or
and
mov
cmp
pop
pop
ret
jnp
and
and
cmp
int3
sub
add
loope
jle
fwait
dec
ljmp
mov
cmp
mov
push
inc
cld
into
jmp
mov
bound
arpl
aad
mov
push
mov
lds
je
xchg
iret
adc
xchg
ret
movsl
paddq
dec
ds
mov
xor
jge
out
fildl
pop
hlt
rolb
addb
lret
fnstcw
gs
in
inc
das
rcr
cmp
out
add
adc
fisttpll
jg
cwtl
inc
sarb
push
jmp
enter
icebp
adc
cmc
add
and
sbb
sarl
push
sub
push
and
push
or
mov
imull
jecxz
je
enter
pop
mov
add
sub
pop
inc
sub
inc
imul
pop
imul
test
idivb
lret
cmp
push
fisttpl
leave
mov
push
and
push
mov
aad
test
adc
pop
icebp
pop
pop
sub
mov
push
scas
push
scas
mov
sbbl
ret
and
and
jns
sub
sbb
fmuls
or
sub
lret
xchg
and
sbb
jge
clc
sahf
sti
ret
cwtl
mov
add
sub
xchg
cmpb
jo
inc
pop
jns
in
inc
ss
add
pop
inc
mov
add
lret
arpl
pop
cmpsb
jge
les
push
adc
jl
cmpsb
mov
cmp
mov
rolb
negl
or
in
mov
test
mov
outsl
pusha
sbb
and
mov
push
cld
xchg
lret
mov
jle
or
sub
or
sbb
mov
aas
fisubrs
fildl
fstpl
adc
dec
inc
stos
cmp
mov
or
pusha
in
jecxz
jp
sbb
lea
lds
arpl
shrb
dec
mov
push
and
fmuls
mov
dec
clc
push
movsl
pop
roll
or
dec
sti
cmp
push
lods
pusha
pusha
fistl
fbld
mov
mov
movsb
negl
jmp
ds
rolb
mov
pop
sahf
xchg
mov
mov
mov
imul
mov
mov
or
sbb
mov
test
je
add
mov
mov
sub
mov
dec
push
xchg
ret
push
jns
cmp
es
adc
add
push
or
add
rcll
enter
setns
mov
add
pop
leave
adc
mov
int
sbb
mov
aaa
pop
cld
rclb
sub
ret
lods
js
xchg
jb
cs
mov
or
add
mov
repz
test
aas
push
daa
ljmp
aad
inc
incb
stos
hlt
dec
lcall
imul
sub
and
cmp
out
push
adc
in
pop
movsl
sbb
sub
xchg
imul
lahf
lret
clc
sbb
repz
add
andl
dec
aam
je
push
fisttps
push
cld
mov
pop
cld
xchg
xlat
jge
mov
dec
or
dec
sub
and
lock
jge
cmp
jle
inc
jno
adc
mov
pop
jnp
or
pop
pop
mov
mov
xor
mov
ret
or
add
cmp
icebp
adc
dec
push
mov
push
cli
jne
enter
jecxz
mov
xchg
rorl
add
mov
pushf
mov
je
or
cmp
fnsave
imul
aam
lods
pcmpgtw
cmc
mov
push
aad
call
in
jmp
cmp
ja
outsl
int
jge
add
jecxz
jb
jle
ret
mov
test
sub
mov
pop
mov
adcb
mov
lret
sub
inc
pop
mov
mov
notl
aad
or
aaa
and
das
incb
push
inc
test
sbb
xchg
mov
aas
js
inc
bound
pushf
push
mov
xchg
cmp
xchg
inc
sbb
add
hlt
rcll
or
out
mov
adc
and
add
stos
mov
mov
mov
sbb
cld
xor
xchg
cld
movsb
add
loop
fistl
and
jb
mov
or
pop
aaa
cltd
adc
add
sub
bound
add
pop
adc
fucom
add
mov
rcl
cli
cmp
dec
lea
cltd
lods
mov
shlb
xchg
mov
jne
lahf
addr16
ljmp
xchg
ss
sub
jns
pop
int3
inc
leave
das
ret
dec
or
push
cmp
popl
hlt
mov
jmp
arpl
fs
mov
push
mov
mov
add
movsb
pop
dec
mov
enter
stos
lret
cmc
jo
fnsave
or
es
int
jns
jge
or
xchg
or
inc
addr16
int3
pushf
push
cwtl
into
dec
lahf
dec
sbb
mov
or
into
sti
jge
dec
aaa
ss
stc
inc
lret
cmpsl
pop
dec
sub
arpl
dec
lock
dec
cmc
fsubl
inc
push
inc
mov
fists
es
enter
lods
push
ljmp
jecxz
in
sbb
enter
nop
cmp
lods
add
dec
out
push
push
iret
loop
rorl
bound
xor
addl
pop
scas
adc
and
ret
lock
inc
dec
mov
sbb
inc
pop
leave
sbb
pop
std
add
inc
les
push
aaa
mov
fcoms
test
dec
jno
xor
add
addb
mov
leave
inc
add
mov
push
push
cs
mov
out
fmuls
les
mov
push
push
inc
cltd
mov
push
int3
fdiv
or
lcall
shrl
insb
or
dec
mov
test
and
cmp
ret
in
ja
mov
push
xchg
or
je
roll
xchg
ds
ja
push
jno
int3
fcoms
inc
pop
add
fsts
pusha
or
push
std
es
mov
mov
lock
loop
sub
lret
or
xchg
and
jno
jbe
pop
scas
lods
add
push
cmc
mov
test
fmull
cmp
iret
ja
mov
jno
test
xchg
and
sti
adc
or
add
sbb
icebp
hlt
daa
leave
mov
mov
pushf
sar
push
idiv
and
inc
rol
cmpsb
das
icebp
aaa
icebp
sbbl
xchg
push
arpl
je
int3
and
cli
lret
xchg
inc
arpl
fxch
xor
or
shr
popa
xchg
shl
xchg
test
aam
in
ljmp
adc
out
and
popl
and
sub
push
push
leave
jecxz
xor
inc
jge
inc
adc
dec
lds
jle
stc
ljmp
inc
dec
xchg
or
mov
js
jl
jmp
loop
inc
stos
xlat
in
pop
inc
mov
mov
fwait
lods
pop
ret
mov
xchg
das
imul
popa
xor
cwtl
jecxz
mov
push
jns
jmp
imul
les
outsb
pushf
adc
jne
or
or
jmp
mov
inc
test
outsb
in
xchg
lret
inc
mov
sbb
scas
daa
sbb
xchg
push
mov
mov
loope
xor
out
sub
movsb
dec
mov
inc
xor
pop
mov
push
cmp
add
subb
inc
mov
or
iret
mov
movsb
imulb
int
push
out
inc
inc
and
iret
jmp
imul
rol
jbe
rolb
jns
cmp
leave
fmull
and
inc
jae
fdivrl
popf
add
fildll
popa
ja
aaa
fistpll
int3
shll
mov
or
fiaddl
fsub
jl
into
mov
test
and
stc
sti
xor
mov
adc
into
push
push
test
lret
outsl
push
test
sub
cmp
jns
test
inc
jns
ret
mov
xchg
add
push
faddl
or
inc
cwtl
pop
mov
subl
bound
adc
in
subb
lock
and
test
lea
shll
mov
enter
ret
ret
shrb
lret
cmp
pop
adc
outsl
popf
lcall
imul
imul
aad
mov
loop
sbb
add
sub
jmp
add
sbb
leave
decl
mov
imul
ds
or
adc
add
jecxz
pop
arpl
push
lret
orl
xchg
mov
jns
jmp
sahf
inc
int3
pop
bnd
test
or
pop
nop
inc
lcall
lds
std
outsl
flds
pop
jg
dec
pop
pushf
sbb
subb
rorl
or
aaa
mov
lds
cmp
cwtl
push
jnp
jno
mov
and
mov
cmc
les
mov
or
es
fsubr
xor
sbb
unpcklps
movsb
in
nop
mov
mov
rclb
mov
or
clc
fwait
xchg
addr16
mov
and
fwait
xchg
aas
sti
inc
cmp
leave
mov
or
jle
pop
xchg
dec
jo
pop
stc
nop
test
cwtl
lods
sbb
sbbb
pop
rdmsr
xor
mov
jo
mov
jge
frstor
outsl
add
pop
es
mov
lods
bound
jge
xor
fldenv
test
cmp
ds
mov
in
or
jp
in
pop
aaa
je
xchg
dec
inc
jbe
shlb
aam
cmp
movsb
xchg
arpl
adc
fs
arpl
aaa
fst
dec
pop
imul
sarb
mov
cmpsl
or
dec
pop
notl
mov
mov
repnz
sub
and
js
xor
aaa
pop
fisubrs
inc
fmul
gs
xor
add
sub
clc
pop
jmp
pushf
iret
icebp
divb
pop
sti
rcrb
dec
jne
pusha
ret
mov
xchg
jg
mov
call
add
outsl
or
dec
cld
add
pop
and
nop
push
pop
dec
mov
lcall
rcl
sub
xchg
xchg
inc
jo
jmp
fscale
sbb
pop
mov
faddl
outsl
push
dec
in
je
and
jecxz
mov
fisubs
sub
cmp
clc
int3
sub
cmp
ja
loope
ret
jecxz
cltd
pop
cmp
adc
pushf
loopne
and
mov
xor
jmp
jecxz
fcoms
lahf
cmc
std
pop
jno
cli
pop
jmp
push
les
mov
lods
es
fidivl
cmp
cmpsl
mov
ret
jne
repnz
cmp
setne
pop
push
andl
jg
sti
dec
ds
adc
sbb
mov
ret
clc
sub
mov
repnz
cwtl
jns
call
dec
je
rcrl
jp
aam
push
lret
cmc
or
imul
popf
shl
push
lret
hlt
cmpsb
sub
movsl
and
add
in
addr16
mov
push
cmp
ret
cs
enter
movsl
mov
cmp
out
mov
stos
jno
mov
lods
dec
push
out
xchg
lahf
inc
push
pop
pusha
inc
xor
jbe
aad
sub
adc
das
adc
icebp
out
rcrl
pop
mov
jae
mov
movsl
xor
sub
fcmovu
into
shll
daa
mov
cmp
test
and
loope
mov
fbld
call
les
jg
push
sub
adc
jmp
inc
sub
cmp
mov
and
mov
dec
pop
dec
add
xchg
popa
incb
int
faddl
rorl
xchg
testl
mov
jg
lret
sub
movsb
fs
mov
cwtl
cmc
inc
dec
mov
pop
getsec
lods
dec
xchg
cmpsl
dec
jnp
rorb
sub
mov
outsl
xor
and
sub
rcr
fwait
xor
mov
test
dec
mov
mov
dec
xchg
pushf
xchg
data16
popa
cli
push
sbbl
loopne
jle
or
dec
dec
mov
outsb
lahf
sub
jno
mov
pop
dec
icebp
dec
lods
or
jl
inc
fwait
sbb
movsb
loope
es
mov
push
and
pushf
push
out
and
sti
adc
adc
pop
icebp
pushf
add
clc
fldcw
mov
int3
xor
call
and
sub
mov
std
inc
into
rcrb
or
cmp
in
inc
loopne,pn
bound
js
cmp
mov
add
outsb
sbb
mov
repz
xchg
jo
mov
popa
xor
lods
test
loope
inc
inc
int
push
cmpsb
lds
jge
imul
push
adc
aam
aaa
movsb
imul
stos
sbb
sub
rolb
mov
or
fisubrs
fldenv
mov
xlat
sub
pop
mov
mov
mov
or
add
sub
mov
repnz
jle
pop
shrl
aas
and
daa
jp
in
pop
in
mov
decl
fs
rcrb
add
mov
cwtl
mov
and
cltd
add
mov
shrb
les
cmc
xlat
sbb
fsubrs
shrb
xchg
mov
loop
ret
movsl
jo
cmp
cmc
loope
or
mov
mov
lcall
enter
cmpsb
adc
test
or
cli
fwait
jl
sub
jmp
add
pop
pop
testb
pinsrw
out
les
cmpsl
out
xchg
shlb
xor
mov
push
add
dec
or
lods
mov
cmp
leave
mov
cmp
js
push
sub
jnp
pop
mov
mov
aaa
jbe
es
push
cmp
enter
pop
inc
dec
xchg
clc
cwtl
mov
mov
in
jne
into
jno
insb
mov
dec
subb
or
iret
lahf
fnclex
popa
cmp
filds
mov
imul
sbb
push
and
ret
adc
cmp
jns
pop
outsb
lret
and
ror
mov
mov
or
pusha
cmp
cli
hlt
in
inc
fnstcw
jno
gs
sbb
ret
ret
imul
out
in
adc
and
dec
aad
pushf
mov
iret
pop
sub
pop
and
ret
sub
add
push
add
pusha
jmp
or
cmp
fiaddl
das
add
push
aaa
xchg
and
sub
pop
test
addr16
mov
xchg
js
mov
sub
lret
sahf
sbb
adc
dec
fdiv
xchg
inc
mov
mov
xchg
bound
inc
fwait
cmp
jp
lahf
xchg
adc
xchg
jno
mov
cld
sub
mov
jge
lea
std
xchg
out
jmp
or
add
sarb
lret
mov
cli
imul
pop
test
cmpl
mov
mov
jne
inc
dec
pop
cmpb
mov
rcl
lods
pop
adc
int3
dec
add
addr16
add
orl
les
mov
pushf
pop
orb
and
and
arpl
fs
mov
hlt
fwait
push
pop
notl
loopne
imul
xchg
sub
rcrl
cmp
jno
cltd
pop
add
mov
mov
pop
loop
jle
and
add
leave
xor
xor
or
pusha
adcb
mov
mov
xchg
push
push
push
and
or
xchg
dec
jg
std
mov
fcomps
and
or
pop
dec
rcrl
add
insl
jo
das
sbb
jne
pop
imul
mov
movsb
pop
rclb
mov
mov
or
push
or
and
sbb
jmp
fistpl
and
leave
push
jl
lds
imul
jb
xor
and
or
adc
mov
push
das
nop
push
ds
cli
lods
cmp
add
and
popa
pop
add
inc
xor
jb
dec
cmpsb
adc
rcr
xchg
sbb
push
cmp
bound
leave
cld
rcrb
insb
mov
mov
fs
les
insl
int
bound
in
mov
loop
pop
jp
imul
imull
pop
icebp
xor
or
adc
insl
mov
xor
dec
leave
xor
dec
rcr
add
cmp
jnp
pop
pop
je
jb
push
movsb
lret
sti
data16
ja
roll
lret
sbb
dec
fdiv
pop
in
hlt
dec
or
cmp
xor
inc
les
hlt
lock
icebp
in
pop
addl
imul
loop
pop
repnz
in
jmp
aam
xlat
rolb
sbb
sub
sub
fsubrl
push
jmp
pop
pop
shrl
lds
sub
scas
pop
cmp
sti
js
insb
dec
mov
and
in
sub
jmp
pop
dec
cmp
dec
jl
inc
stos
aam
loop
das
adc
scas
cmpsl
shl
mov
lcall
fwait
add
xor
pop
pop
aas
ret
add
outsl
dec
or
pop
daa
inc
and
sarb
push
mov
cmp
inc
adc
add
or
cli
cmp
enter
jge
rolb
mov
cwtl
jmp
std
inc
mov
fisttpll
js
mov
out
aas
push
mov
mov
aam
or
xchg
cmpsb
scas
pop
mov
dec
ss
sub
shrl
pop
ja
out
nop
xor
jnp
fsubrs
call
imul
xor
push
sub
mov
dec
pop
or
sbb
pop
lods
scas
push
xchg
mov
cmp
mov
out
lock
sub
fnsave
sub
cmpb
jle
inc
sbb
mov
das
jb
inc
xchg
cmp
dec
push
mov
and
jnp
mov
test
les
xor
lahf
cmp
out
xchg
dec
sti
push
push
shrb
inc
out
jp
or
mov
adc
mov
imul
xor
xorb
enter
les
into
xchg
lock
shl
lcall
cmpsl
aam
lret
inc
and
inc
mov
cmp
or
push
and
decl
leave
divb
dec
call
imul
mov
xor
cs
jp
push
jo
mov
and
cmp
add
xor
fbstp
loop
out
sti
movsl
imul
fisubrs
push
jno
sub
mov
sub
jb
loop
dec
fstpl
mov
push
aam
xchg
dec
insb
js
pop
dec
push
mov
fadds
inc
mov
xchg
xchg
xchg
outsl
and
inc
mov
lods
cld
js
nop
lret
add
xor
jmp
js
mov
pusha
cmc
add
testl
fstpt
and
pop
sub
push
lods
gs
sarb
pop
xor
push
popa
imul
mov
dec
xor
mov
movsl
jp
inc
insb
lea
sub
cmpsl
pop
ret
push
imul
jecxz
mov
pop
aam
outsb
movsb
imul
in
stc
nop
jns
add
stc
cli
ret
pop
pop
lods
push
pushf
addr16
inc
js
push
pop
ds
cmpsb
test
mov
int
into
jb
jbe,pt
aam
in
leave
xor
cltd
inc
cmp
stos
cltd
cmp
adc
ljmp
and
test
add
inc
sbb
or
pop
push
and
push
test
xchg
imul
cmp
adc
imul
lods
and
jle
incl
les
cmc
dec
ret
std
or
xchg
cmp
scas
mov
jp
pop
sub
out
dec
jnp
inc
sbb
sar
or
jmp
out
lds
add
leave
fcoml
dec
ljmp
inc
cmp
data16
sub
andl
clc
pop
mov
repnz
sbb
adc
or
loope
sbb
jmp
add
mov
or
shrb
sbb
jb
imul
hlt
enter
fs
scas
xchg
mov
leave
pushf
sbb
dec
jo
add
ljmp
loopne
pop
push
jg
loop
stc
stos
inc
dec
adc
inc
icebp
sub
inc
bound
test
fisubs
adc
adc
aas
jp
dec
aas
aam
mov
into
pop
cmp
mov
outsl
dec
mov
mov
filds
cmc
cmp
ljmp
xor
outsl
fst
fwait
nop
flds
push
add
fldl
cs
push
pop
adc
or
mov
mov
roll
scas
pop
or
jg
loop
hlt
cmp
les
cmp
pop
fwait
inc
or
mov
addr16
push
xor
cmp
mov
xchg
jae
popl
and
fs
hlt
in
push
adc
orl
aam
test
adc
mov
xor
push
jmp
xchg
mov
cmp
or
std
in
ja
aad
imul
jle
aas
gs
push
mov
je
fdivrs
repnz
lcall
sarl
sbb
dec
or
adcl
add
rcll
imul
adc
int3
les
fnstenv
mov
inc
sarl
sub
enter
call
lea
dec
push
test
pushf
idivl
fisttpll
add
jb
add
ds
xor
xor
int3
mov
push
cmp
cmp
xor
imul
sub
mov
add
sti
push
ret
scas
cld
lods
mov
mov
inc
add
pop
push
leave
int3
jb
dec
sbbb
pop
mov
sub
test
mov
cmpsb
mov
fwait
cmp
pop
push
inc
dec
push
cmp
sub
jecxz
je
es
sub
dec
mov
das
mov
popf
fs
and
adc
xchg
das
scas
pusha
popa
adc
dec
cmpsl
movsb
cwtl
cltd
call
mov
mov
cmpsb
mov
out
mov
out
pop
inc
push
or
js
mov
add
test
inc
push
out
sbb
daa
lcall
lahf
enter
push
push
inc
mov
sub
dec
cli
les
je
data16
adc
ds
push
and
or
jmp
jl
invd
movsl
cmp
enter
pop
sbb
call
add
cli
xor
fs
aas
in
jnp
sbb
jns
and
xchg
mov
popf
mov
pop
dec
mov
push
dec
aad
sbbl
int
inc
lea
scas
js
outsl
push
nop
inc
push
jns
inc
push
push
das
mov
push
mov
imul
in
es
pop
pop
les
mov
mov
xor
hlt
sub
sub
add
inc
ds
add
call
dec
or
hlt
xor
imul
out
lods
scas
add
inc
xchg
iret
dec
mov
push
xchg
iret
jmp
mov
mov
pop
loope
mov
mov
xor
mov
xor
dec
pusha
add
push
adc
pop
push
es
dec
and
in
pusha
cmp
jae
push
mov
mov
cli
lods
pop
neg
cli
loope
lcall
push
and
xor
push
add
xchg
mov
lcall
add
sub
pop
cmpsl
xor
fldcw
xor
or
stos
std
lock
mov
test
pop
test
pop
and
arpl
stos
pop
pusha
imul
enter
and
rorl
push
cli
pop
xchg
push
aam
jae
int
xor
pusha
cmp
daa
lcall
mov
movsb
cwtl
sbb
cmp
dec
xchg
scas
mov
dec
inc
movsl
fdivs
popa
test
adc
push
push
push
pop
in
fidivl
js
inc
pop
jbe
out
add
and
xor
ja
jp
out
int3
dec
pop
fists
out
pop
pop
lret
mov
xor
adc
adc
cmp
and
rcr
cmc
cmpsb
fcmovnbe
int3
mov
mov
stos
mov
sahf
cmp
stc
add
scas
xchg
test
popf
je
arpl
loope
clc
cs
jbe
mov
sti
pop
adc
push
or
sbb
cmpsl
frstor
inc
adc
inc
ret
jns
xor
jne
push
or
stos
mov
xor
out
sub
mov
cmp
or
cld
and
jne
sub
sub
pop
push
into
loop
fwait
sub
je
divb
mov
mov
inc
mov
cld
aad
stc
orb
cmp
movsl
loopne
lret
cmp
imul
jo
mov
dec
sub
cmp
sbb
out
mov
add
push
aad
mov
or
inc
jns
fldt
out
in
jno
xor
ret
aad
push
pop
rcl
jp
mov
cmp
das
in
out
js
jns
insb
pop
in
lret
out
in
cmp
push
scas
sbb
add
cmp
aaa
mov
repnz
lods
insb
mov
shrl
xchg
test
hlt
fnstsw
aam
pusha
cwtl
or
dec
mov
adc
jno
or
stos
rcrb
jle
fadds
test
cmpsb
inc
mov
mov
cmpsl
fsubr
mov
mov
pop
dec
lods
test
lea
sti
dec
jge
clc
gs
iret
nop
mov
int3
push
addb
jnp
pop
int3
add
js
je
mov
enter
lds
cmp
and
std
es
and
add
scas
cmp
sub
repnz
pop
add
loop
outsb
ficoml
dec
inc
addr16
mov
mov
mov
fidivl
lahf
mov
in
sbb
test
mov
mov
mov
xchg
das
pop
fs
xchg
popa
adc
mov
pop
movsl
jle
adc
mov
mov
push
add
aam
outsl
call
pushf
jno
fsub
test
jmp
sbb
mov
or
rcl
nop
push
addr16
pop
mov
rcr
ja
add
inc
cwtl
sub
add
rcrl
sbb
xor
push
push
pusha
adc
push
stos
call
jns
jmp
dec
mov
insb
testl
xchg
loop
gs
pusha
inc
hlt
xor
xlat
inc
add
int3
cmp
jo
xchg
dec
int3
frstor
stos
xchg
aas
inc
loopne
rorb
pop
push
cmp
or
inc
pop
loope
dec
js
adc
cmp
mov
dec
push
out
cmp
scas
dec
loope
and
clc
add
push
pop
or
test
in
imul
push
stos
jb
pop
stos
ficomps
mov
repz
mov
mov
loopne
popf
jno
icebp
pop
andl
bound
xchg
push
insl
lahf
xchg
loope
cmp
adc
xchg
pop
fsubrs
xchg
sbb
pop
sbb
popl
ret
xchg
ljmp
ret
sbb
push
mov
xor
adc
ret
nop
push
ret
insl
int3
es
xchg
iret
loop
add
dec
xchg
mov
outsl
sbb
ret
in
pop
out
adc
call
inc
push
pop
test
or
ret
push
mov
outsl
pop
xchg
pop
and
cmp
ss
das
mov
call
imul
ljmp
popa
in
out
push
sti
inc
xor
adc
adc
shrb
ja
jae
cli
adc
jns
imul
mov
out
jne
mov
fimull
jmp
aam
out
cmp
adc
and
mov
aaa
push
sub
mov
in
mov
in
sbbb
outsb
testb
std
mov
jle
stos
iret
les
cltd
aad
sub
mov
inc
inc
test
loop
inc
cmpsl
sub
inc
add
xor
jg
popa
outsl
and
push
push
addb
inc
inc
mov
and
les
add
pop
and
mov
in
and
xor
out
inc
in
inc
jge
mov
roll
orb
ss
push
pop
enter
test
pop
flds
addb
arpl
jns
enter
xchg
dec
adc
incb
frstor
jo
in
cmp
cmp
sahf
adc
shlb
jg
pushf
cmp
xor
fwait
or
insb
pop
orb
or
test
ficoms
jo
xor
xchg
pop
sbb
xchg
mov
xorl
push
shr
push
shr
dec
add
push
scas
outsl
push
mov
and
mov
jmp
mov
jne
jmp
dec
xchg
pushf
fstps
and
jp
xor
mov
cld
xchg
outsb
repz
pop
out
mov
mov
adc
lret
into
xchg
addl
jmp
jge
imul
mov
das
jmp
xchg
jo
or
in
xchg
xor
int
pop
push
aad
jne
inc
push
jg
fistps
jge
inc
cmpl
stos
lret
cmp
mov
push
aas
pop
sub
jmp
jnp
sbb
pop
cmpsl
in
daa
sub
push
dec
or
mov
iret
nop
in
sbb
popf
push
arpl
shlb
nop
push
rcr
je
adc
pop
in
popf
and
xor
xchg
xchg
movsb
cmpsb
jmp
aam
rcrb
ljmp
and
adc
mov
loopne
jbe
xchg
pop
data16
fnstsw
sahf
inc
jecxz
in
pop
xchg
imul
xor
aad
push
inc
outsl
xchg
jne
rclb
inc
push
ret
inc
rcl
pushf
repz
mov
lods
nop
test
aad
bound
out
neg
outsb
rcll
pop
shlb
xlat
mov
cwtl
rol
paddsb
fstpt
inc
movb
adc
mov
stc
dec
leave
popa
add
xor
lods
mov
into
push
push
ljmp
mov
invd
sahf
dec
js
arpl
jge
cmp
inc
push
and
and
dec
mov
lret
out
mov
mov
cmp
in
and
adc
rol
cmpl
nop
fwait
dec
dec
jo
push
pop
dec
add
mov
repnz
jg
fnstenv
mov
dec
lock
rclb
and
repnz
out
stos
pop
ss
cmp
scas
mov
adc
dec
sbb
pop
and
push
in
push
int
push
pop
out
mov
adc
fwait
mov
sahf
xchg
clc
sahf
sbb
ret
enter
lds
aas
mov
xchg
in
adc
cmp
lds
sub
roll
mov
mov
sub
test
mov
and
jg
sub
and
xchg
xchg
mov
negb
dec
push
aas
add
push
mov
pop
inc
mov
int
pminsw
orb
xor
mov
adc
cmp
mov
das
pop
gs
jecxz
xchg
imul
rcll
mov
outsl
inc
dec
lret
xchg
jb
repnz
mov
lcall
scas
lods
pop
inc
inc
sbb
xchg
xchg
push
mov
data16
in
dec
pop
sub
and
cmc
sub
iret
mov
and
imul
cmpsl
sbb
pop
sub
mov
sbb
dec
inc
inc
test
cmp
lret
cmp
jle
pop
aas
outsl
leave
mov
jmp
mov
cmc
or
adc
or
mov
movsb
cld
xor
mov
jne
mov
lods
cwtl
jg
mov
mov
mov
mov
js
or
movsb
mov
out
mov
mov
pop
xor
jg
push
dec
adc
jle
mov
adc
jbe
jle
jp
xlat
loopne
mov
mov
or
mov
dec
es
pop
pop
xchg
flds
or
mov
jecxz
xor
add
cmpsl
fcmovnbe
push
inc
daa
xor
in
mov
push
fnclex
hlt
in
push
xor
pop
pop
mov
or
bound
or
cmp
pop
out
pop
xchg
push
insb
clc
push
pop
aas
inc
aas
clc
lea
and
ljmp
sub
loopne
mov
aad
ret
dec
insb
add
jae
clc
das
jns
sarb
ja
lret
bound
arpl
ret
test
sbb
cmp
aam
lea
cmpsl
sahf
xchg
leave
or
add
std
movsl
add
and
cmp
pop
pop
sarb
daa
and
out
rorb
xchg
or
iret
es
sbb
das
or
mov
or
in
js
in
ds
test
loop
jns
fnstcw
test
or
push
jns
mov
push
dec
mov
scas
je
mov
pop
xchg
sbb
cld
xchg
cmovns
xchg
push
loop
lods
test
push
stos
xchg
jbe
loop
inc
lret
mov
shrl
out
les
add
je
mov
pusha
xor
mov
pop
add
dec
imul
or
cmc
sub
ljmp
fs
cltd
test
adc
aam
cltd
rorb
scas
je
jbe
stos
lret
jno
pop
sti
push
into
sarl
inc
sbb
into
adc
arpl
out
imul
fs
gs
dec
in
mov
dec
nop
xchg
inc
xchg
lock
adc
test
or
dec
and
es
movsl
mov
daa
jg
pop
sub
fucomi
ffree
into
push
xchg
popa
aas
sarl
or
push
addr16
test
frstor
lret
sub
mov
jnp
xchg
les
pop
in
xchg
lret
or
xchg
movsl
in
and
in
nop
sub
add
into
icebp
dec
dec
xchg
sub
xor
mov
aaa
nop
aad
out
cmp
or
or
sub
xlat
push
dec
pop
jge
cmp
mov
adc
daa
mov
dec
popf
int
mov
pop
mov
int3
int3
movsl
lret
cwtl
xorl
add
xchg
cmp
mov
scas
push
inc
insl
rorb
lods
cmpsb
mov
ljmp
cmc
test
xor
jae
repz
repz
pop
test
jne
nop
xchg
es
mov
sub
das
and
out
xor
int
push
lret
in
pop
pusha
std
lea
mov
inc
bound
or
inc
add
jecxz
rcl
and
push
xlat
shll
subb
sbb
sub
mov
xchg
sub
lret
repnz
shll
dec
cmpsb
pop
xchg
call
jge
mov
pop
sti
jae
mov
sahf
jecxz
mov
push
shrl
mov
xchg
sub
test
hlt
leave
xor
repz
jbe
mov
xchg
sub
icebp
pop
sbb
or
mov
aad
js
lods
lret
leave
pop
add
and
xor
faddp
int
jle
sub
xchg
mov
into
mov
inc
sbb
sti
mov
inc
cli
dec
int
mov
inc
lds
fisttps
movb
jmp
lods
scas
aam
loop
stc
nop
or
or
insb
ret
clc
movsb
test
out
sbb
jl
mov
idiv
outsl
mov
fdivrs
pop
sahf
cmp
push
sbb
shr
adc
mov
xor
in
int
out
mov
sub
lret
jb
inc
lea
pop
mov
mov
mov
out
jl
jbe
jecxz
out
or
enter
inc
dec
adc
arpl
sbbb
pop
jo
jno
cmp
incb
inc
or
ja
mov
mov
adc
xor
rdtsc
sub
or
cli
rorb
jp
sub
pcmpgtb
add
js
leave
pop
nop
mov
and
add
inc
inc
mov
pop
mov
int
inc
jmp
pop
pop
push
or
aaa
cmpsl
movsb
and
sbb
shlb
jbe
int3
sbb
outsb
sti
test
and
push
cld
fadds
xchg
mov
int
sub
xchg
mov
mov
test
pop
test
scas
int
cmp
push
adc
or
mov
adc
or
mov
or
into
lahf
mov
stos
je
das
mov
mov
sub
add
xchg
mov
and
pop
push
fisubrl
mov
lea
les
jg
lret
inc
je
and
jmp
imul
shl
xor
mov
cmp
sti
adc
jns
jl
fstps
je
and
lods
icebp
pop
dec
out
xchg
sbb
inc
jno
jge
test
cmp
lret
inc
mov
cltd
mov
leave
movmskps
or
addb
nop
jecxz
shrb
push
sahf
lahf
scas
pop
sbb
push
and
pusha
xchg
sub
xchg
js
dec
movsl
leave
dec
test
mov
in
and
enter
mov
add
inc
js
sub
mov
pop
inc
mov
shll
arpl
sbb
lcall
popf
daa
mov
out
mov
sbb
mov
push
cmc
pop
xchg
mov
in
rolb
push
shrl
xlat
cmc
repz
push
dec
fbld
clc
and
add
lds
jg
in
pop
fcoml
rol
cs
lahf
pop
into
sub
add
inc
xor
pop
adc
mov
xchg
pop
cs
cmp
mov
sbb
rorb
lods
cmp
pop
xlat
and
hlt
pushf
push
mov
int3
pop
mov
adc
dec
out
es
aad
daa
jbe
loop
fadds
mov
mov
jae
push
mov
fmulp
push
popa
mov
push
xchg
jo
xlat
lahf
mov
mov
inc
jb
add
dec
fwait
mov
jl
enter
mov
pop
daa
andb
mov
dec
dec
or
in
mov
mov
idiv
mov
sbb
mov
push
adc
cmc
cli
xchg
scas
xor
pop
dec
xor
std
jle
pusha
pop
js
push
ja
and
and
inc
mov
mov
or
loop
lods
and
test
lods
and
cli
add
mov
dec
sub
dec
dec
mov
bound
pusha
cmpsl
std
loope
xchg
mov
jecxz
mov
test
fmull
ret
mov
inc
int
lock
pop
fsubrs
xlat
clc
mov
mov
and
push
fwait
jp
mov
dec
mov
or
test
push
pcmpeqd
aas
pusha
inc
mov
enter
shll
fadds
jg
adc
dec
xor
cli
lods
out
inc
xlat
add
in
movsl
loope
push
mov
or
sarl
mov
mov
sbb
jl
inc
push
mov
and
or
or
and
jne
inc
in
push
loop
addr16
lcall
add
or
xor
movsl
ud0
cpuid
jne
sub
dec
sahf
cltd
and
lods
std
pop
add
stc
xchg
adc
out
pop
pusha
imul
pop
aaa
sub
shlb
mov
lret
scas
popf
call
xchg
mov
lock
imul
mov
mov
scas
leave
sub
stc
xorl
out
add
je
js
mov
loopne
mov
xchg
pusha
insb
int
or
adc
ja
xchg
les
roll
bound
pop
mov
cmc
inc
xor
mov
rol
int
addr16
into
push
jno
bound
ja
jae
rcl
dec
adc
and
adc
scas
sub
sub
xchg
xchg
das
mov
jmp
adc
scas
subl
jo
mov
jbe
leave
sahf
inc
push
jno
adc
pop
in
add
and
sbb
fs
lret
inc
mov
cmp
jmp
jnp
adc
fmul
ljmp
bts
push
mov
xchg
sub
xchg
dec
loopne
and
out
stos
lods
test
inc
sbb
shrb
pop
push
mov
movsl
js
xchg
push
push
cmp
sub
adc
mov
pop
cltd
mov
and
or
movsl
mov
pop
sub
mov
cs
clc
pop
inc
rcl
and
or
and
popa
and
add
out
cmpsl
mov
sbb
sub
dec
pop
inc
lods
xor
rcrb
jo
idivb
les
clc
mov
and
scas
mov
inc
xor
shlb
popa
mov
es
cmp
data16
and
aam
test
inc
test
mov
divb
cmp
push
or
jns
in
fdivl
subl
cmpsl
inc
enter
mov
lret
fists
pop
stos
rol
jns
imul
lods
gs
mov
int3
in
push
dec
dec
test
stc
sbb
mov
inc
popa
push
ret
push
or
xor
jecxz
push
mov
xor
repnz
lods
cmp
adc
sub
jns
bnd
cmp
icebp
sbb
call
dec
ficoms
lahf
sbb
mov
lock
and
lods
and
lods
lods
rcrb
xchg
mov
and
dec
xchg
je
mov
sbb
ljmp
stos
mov
pop
jl
enter
cmp
fmul
mov
aam
mov
lcall
out
xchg
jl
add
sti
std
or
data16
sbb
jmp
and
aas
call
sbb
jb
mov
xchg
inc
leave
sub
add
push
les
testl
sarl
sarl
pushf
popa
mov
jnp
repnz
push
or
jge
rclb
sti
adc
outsb
rcr
in
cli
test
xor
bound
rcr
cmc
inc
mov
shll
mov
sub
add
sbb
lret
jbe
and
sahf
or
jecxz
or
ret
addr16
mov
pop
inc
mov
ss
movsl
cwtl
mov
pusha
nop
in
push
dec
mov
sub
movsl
cmpl
or
loop
sub
dec
inc
mov
inc
pop
pop
aam
shrb
push
xchg
xor
mov
sqrtps
arpl
insb
inc
out
hlt
adc
nopl
outsl
es
cli
mov
xchg
pushf
xchg
repz
xchg
xor
das
xor
nop
mov
int3
bound
wbinvd
and
sar
stc
aas
xor
inc
into
movsb
mov
enter
orl
test
das
adcl
loop
mov
stos
sub
xor
clc
dec
std
push
xchg
sahf
sbb
ds
adc
xchg
push
sub
cmp
cmp
cmp
shll
pop
lret
sarb
test
pop
jp
adc
mov
push
pop
fisubrs
rclb
mov
cmc
cmpsb
outsb
rorl
ds
sahf
xchg
loop
stos
or
roll
sbb
je
mov
mov
pop
inc
jge
mov
addl
pop
xchg
dec
movsl
test
dec
dec
ficompl
or
cmp
pushf
jmp
cld
mov
jge
dec
rcrl
jo
adc
fwait
je
jge
mov
ret
cltd
sarl
test
roll
out
aas
adc
clc
outsl
insb
js
or
adc
adc
adc
fisttpl
mov
mov
shl
jns
lret
jno
vmwrite
add
cmp
iret
arpl
jmp
dec
pop
not
ja
je
repz
lods
repz
jl
fucom
dec
sbb
or
push
mov
shll
adc
jnp
jmp
and
in
test
dec
mov
push
xor
adc
sbb
pop
jns
mov
scas
or
hlt
std
inc
cmp
mov
icebp
add
sub
mov
outsb
push
loopne
sub
outsb
test
sahf
jb
nop
pop
and
aas
dec
ret
addr16
stos
jp
or
dec
inc
and
ds
jg
mov
pop
cmp
mov
popf
jp
cs
jns
fnstenv
int
mov
ss
cmp
pushl
outsb
push
push
iret
icebp
mov
inc
xor
or
push
push
imul
cmp
ljmp
mov
pop
pop
test
iret
leave
dec
fisubrl
iret
push
adc
not
std
push
sbbb
adc
leave
fucomp
cmp
jne
mov
add
shrb
aad
add
sub
mov
or
pop
es
mov
xchg
ret
push
xlat
shlb
push
mov
out
popf
or
popl
repnz
mov
xor
fildll
out
pop
jmp
push
lar
mov
xchg
or
jnp
mov
push
call
and
enter
xor
and
xor
in
pop
into
sub
jbe
lret
push
jnp
pushf
fimull
iret
pop
scas
mov
ss
push
adc
add
cmpsl
lret
aam
stc
mov
mov
push
int3
out
jl
dec
or
mov
pop
insl
pop
arpl
sub
mov
inc
aam
repz
pop
mov
lea
jp
sbbb
cld
push
push
ftst
sub
or
and
loope
mov
cmp
cmp
cmp
push
jl
cmp
xor
nop
dec
inc
das
and
xlat
jl
inc
cmpsl
aas
cmp
lods
fdivrs
mov
notb
pop
jmp
jnp
je
test
sub
jnp
mov
je
lds
jg
mov
inc
dec
stos
add
jg
xlat
sub
mov
lock
push
jnp
inc
lds
int3
mov
popw
pop
add
les
enter
mov
scas
mov
faddp
adc
add
xchg
dec
aas
add
cmp
add
push
subl
shrl
mov
rol
pop
pop
and
mov
mov
in
aam
in
mov
xchg
test
test
fisubl
add
pop
hlt
mov
inc
dec
lahf
gs
mov
inc
dec
nop
outsl
fisubrs
add
loop
inc
mov
adc
push
dec
inc
lret
ljmp
sbb
push
jmp
test
jns
and
popa
cwtl
jecxz
inc
rcrb
loopne
push
jne
pusha
fld
movsl
bound
push
pop
lret
mov
push
push
dec
dec
scas
les
ds
pop
scas
lds
mov
mov
test
das
std
sbb
inc
pop
adc
push
lret
aas
repz
or
lds
sbb
fnstcw
hlt
ret
outsb
out
repz
adc
in
mov
stc
insb
leave
popf
xchg
lods
iret
xor
xchg
pusha
fimull
xchg
jg,pn
sub
sub
test
fwait
and
add
insl
add
cli
xor
enter
clc
sti
loop
cmp
fldl
testl
pop
lret
mov
popa
notb
adc
jle
dec
and
fsubrs
push
cmp
lods
cmpsb
pushf
inc
sub
xchg
fs
mov
lahf
push
push
push
mov
jae
sar
mov
imul
or
out
aaa
push
fbstp
add
les
or
cmp
push
rsm
orb
xchg
lret
pop
pop
cmp
and
pop
int3
sbb
sarl
cmp
das
shl
das
addl
addr16
inc
insl
dec
jne
cmp
jecxz
hlt
fildll
push
xchg
pop
dec
mov
inc
mov
das
out
addb
jle
sub
sub
ficoml
fsubs
pusha
sahf
mov
dec
pop
lock
leave
dec
or
outsl
aam
movsl
jno
loop
xor
add
sahf
mov
mov
add
jne
mov
xchg
insl
dec
clc
faddl
rcr
mov
cli
dec
ljmp
rorl
add
sub
fstpt
sub
in
sahf
add
es
pop
call
fs
dec
sbb
inc
cmc
or
mov
imul
leave
jmp
es
cmp
fsts
push
rcrb
and
xchg
mov
fmuls
xchg
or
cmp
cmpsl
jecxz
mov
add
rol
fwait
loope
test
xchg
add
jg
dec
cmp
ss
inc
arpl
xor
or
dec
xchg
hlt
pop
pop
pop
dec
cmp
add
pop
add
jno
sbb
dec
test
cmc
ss
inc
push
fldenv
imul
sub
add
dec
or
ss
out
xchg
mov
pop
ficoms
ja
popf
imul
sub
mov
jg
sub
pop
outsb
repz
and
ds
std
or
cmpsb
scas
insb
mov
adc
mov
add
lcall
in
xchg
pop
cmp
adc
test
jp
pop
mov
lahf
lret
fldt
std
mov
push
sub
xlat
jg
mov
shlb
ds
adc
bound
pop
lods
into
repnz
xor
sbb
cli
fcoml
call
out
loope
cld
dec
or
or
movsl
test
xor
mov
fwait
cmp
mov
fildll
aad
sbb
cmp
shlb
xor
jp
add
lods
jae
test
jnp
sahf
ret
adc
sbb
xchg
scas
hlt
mov
pop
out
scas
push
enter
pop
xor
das
pop
jmp
mov
inc
sbb
inc
add
push
sti
in
xlat
mov
and
out
loopne
mov
pop
dec
mov
dec
xchg
and
repz
mov
js
in
test
stc
inc
push
and
popf
xchg
push
cmp
pop
xor
push
pop
mov
inc
loop
icebp
test
and
into
mov
movsl
cli
jl
enter
pushf
cs
xor
outsl
xlat
shr
fadd
in
test
lret
divb
mov
adc
mov
sub
jnp
mov
push
mov
shlb
sub
and
inc
movb
or
divl
into
loope
repz
or
ds
cltd
xchg
add
add
mov
ss
xchg
out
mov
mov
rorl
mov
repnz
icebp
pop
sub
ljmp
ret
inc
pop
cmp
dec
aas
sub
push
lcall
adc
mov
stc
incb
stc
xlat
and
iret
sub
adc
enter
jmp
dec
xor
and
rorl
sti
push
test
iret
lock
and
hlt
xchg
push
jbe
ret
aaa
jbe
leave
ds
add
sbb
xchg
icebp
sarb
stos
call
dec
push
mov
pop
popl
lret
and
adc
movsb
pop
cwtl
xor
xchg
push
ja
aaa
jmp
cs
and
adc
mov
pop
imul
jns
repz
xchg
or
rorl
xor
push
leave
std
xorb
dec
jnp
xchg
jecxz
lret
sbb
mov
orl
aas
in
scas
or
mov
lret
add
in
sub
pushf
push
inc
cmpsb
dec
fmull
bound
aas
xchg
ret
lea
sub
icebp
inc
xor
lock
pop
lret
mov
adc
or
or
inc
xor
pop
das
orl
movsb
je
inc
xchg
dec
adc
mov
cmp
mov
mov
cld
cmp
dec
lret
in
ja
add
je
or
xchg
inc
pop
pop
mov
addl
adc
xchg
outsb
inc
mov
push
and
rorb
sub
out
insl
stc
aam
adc
mulb
fstpt
lret
jmp
lods
and
mov
shll
outsb
mov
and
jnp
push
mov
mov
pop
push
mov
fdivrs
cmpsl
movsb
mov
push
fsubrl
xor
jno
jno
aad
and
pop
adc
jge
xor
sbb
cmp
mov
inc
push
push
xor
dec
imul
and
push
cmp
stos
inc
lods
or
xor
aas
rorl
mov
xchg
ja
xchg
fadd
push
cli
mov
fwait
std
mov
add
test
hlt
divl
arpl
cwtl
jnp
jp
scas
dec
push
xchg
nop
sub
xchg
push
jl
inc
das
mov
std
mov
push
cmpl
add
fsubrs
and
mov
pushf
mov
popf
xchg
or
sbb
std
mov
xchg
mov
aam
xchg
cmp
xor
cs
and
jnp
subl
pop
and
adcl
mov
les
dec
mov
push
or
adc
mov
adc
aaa
rol
arpl
les
sub
jecxz
inc
or
stos
jo
popa
mov
out
shrl
fidivrs
mov
cltd
push
xor
sbb
push
sub
fcompl
adc
loop
inc
push
pusha
mov
pop
mov
or
sub
push
je
sahf
mov
inc
sbb
sub
stos
push
mov
jnp
loop
aam
pop
pop
pop
je
pop
imul
adc
dec
mov
iret
cmp
xchg
shll
mov
xorb
xchg
pushf
es
mov
daa
sbb
dec
enter
iret
or
push
ljmp
sbb
int3
andb
push
inc
or
loope
or
lcall
aam
addb
push
inc
mov
das
dec
cwtl
push
out
movb
mov
xor
mov
and
mov
andl
loop
or
enter
push
popa
daa
bound
mov
rcrl
jns
or
cltd
outsl
or
dec
mov
inc
add
lods
movsl
lret
imul
test
lock
xor
push
lods
inc
pop
in
test
fisubl
xor
xor
inc
and
pop
pop
jno
pop
movsl
test
mov
aas
jnp
movsb
push
inc
dec
std
mov
mov
inc
mov
fimuls
lret
push
jge
ds
dec
addr16
fbld
xchg
nop
sub
cmc
mov
inc
xchg
push
mov
push
or
xchg
inc
loope
mov
mov
ljmp
ss
mov
testl
ljmp
adc
cmpsb
add
pop
mov
insl
sub
sub
and
inc
push
or
xchg
sub
mov
sub
xchg
ljmp
mov
call
scas
in
xor
stos
push
mov
mov
in
mov
es
aam
leave
arpl
icebp
mov
sub
ret
mov
outsl
dec
je
vpaddd
sbb
leave
cmp
pop
je
pushf
lret
cmp
pop
pop
fadds
inc
push
cmp
cmp
stc
push
into
ficomps
lret
jnp
daa
into
fstps
es
inc
push
outsl
cwtl
mov
pop
addr16
mov
mov
jnp
dec
cwtl
inc
pop
sbb
loopne
cmc
or
xor
add
jo
xor
int3
clc
adc
int
or
lahf
repnz
call
sbb
pop
lds
das
cmp
jne
inc
mov
sub
out
pop
mov
rorl
out
mov
fmull
mov
add
repz
popa
pop
mov
pop
jb
jo
and
aas
xchg
ret
push
into
mov
je
sub
popf
lea
test
mov
ljmp
lods
dec
push
jb
inc
or
xchg
pushf
xchg
add
aaa
and
inc
pop
lods
mov
es
jl
rcl
dec
add
adc
xchg
push
jns
fistpl
jno
mov
into
mov
dec
cmpsb
fcomps
push
subb
cld
sub
ret
out
out
ret
inc
sahf
andb
pop
dec
aam
mov
pop
xchg
pop
pop
pop
test
popa
sahf
les
and
ret
cmc
or
enter
inc
dec
push
lds
jp
lret
mov
int
jle,pn
outsl
stos
iret
std
mov
and
mov
sti
xor
inc
imul
insl
adc
or
stc
inc
lahf
sti
pop
sub
inc
inc
mov
or
inc
jbe
loop
lret
cli
sub
ret
push
sbb
inc
jns
jle
and
or
pop
mov
pop
fst
and
xor
scas
push
lods
inc
add
out
add
hlt
pop
mulb
lret
dec
leave
cmp
mov
xor
dec
and
imul
jl
cmp
mov
or
adc
pop
imul
xchg
ja
sbb
inc
mov
xor
out
lds
test
jno
ja
xchg
jne
xor
ss
mov
dec
xchg
and
inc
mov
and
repnz
jnp
cli
mov
insl
and
call
movsl
dec
test
mov
pusha
adc
and
loop
rorl
or
and
sub
movsl
mov
fs
sarb
fsubrl
or
jno
cmc
push
mov
xchg
xlat
mov
cmp
hlt
pusha
mov
movsl
and
les
call
mov
pop
out
sub
js
pop
ret
add
push
into
jl
inc
mov
lea
lcall
insb
ss
mov
inc
mov
push
xlat
push
stc
cmp
xor
cwtl
push
add
mov
ror
outsb
mov
imul
jecxz
shlb
cmp
add
fcoml
imul
adc
popf
push
fmuls
fucomp
fnstsw
fs
dec
stos
xchg
xchg
rcrl
movl
in
dec
add
das
shrb
addr16
outsl
bound
add
mov
or
jno
sbb
mov
lods
add
iret
mov
pop
and
mov
es
lcall
mov
inc
push
imul
adc
sbb
imul
mov
inc
in
mov
and
mov
xor
push
cmp
mov
insb
xchg
mov
jns
or
pop
or
call
dec
rol
push
notl
orl
mov
jl
orb
dec
std
pop
movsb
or
stos
or
test
jb
cmpb
mov
or
les
xchg
repz
dec
xchg
sahf
mov
jmp
xchg
cmp
lds
jbe
xor
mov
mov
jecxz
hlt
and
mov
dec
cmp
aaa
jnp
push
ret
sbb
negb
cmp
or
pop
cmp
sbb
jnp
mov
add
xchg
and
repz
stc
inc
jno
loope
xor
into
clc
sbb
mov
or
mov
daa
leave
insb
jnp
sbb
sub
fwait
in
rorl
rcr
push
or
fs
movswl
cmc
out
lea
push
xchg
adc
sub
mov
cmp
push
mov
stc
and
jne
les
jl
movsb
dec
mov
aaa
pop
sub
movsb
or
es
mov
cmp
shlb
cmp
lret
je
mov
cwtl
test
lret
adc
cmp
fimuls
sbb
inc
ret
mov
fisttpll
ret
mov
sub
mov
xchg
in
add
mov
sar
mov
jns
pushl
repz
mov
les
push
cmpsb
repnz
sbb
mov
or
nop
cmp
push
gs
sbb
mov
xchg
insl
test
add
out
sub
add
mov
sbb
mov
stos
sub
ret
mov
and
jae
cs
fwait
aas
xchg
lret
add
dec
aas
test
xor
shlb
add
xchg
or
jp
xchg
or
xor
mov
sbb
loope
sub
cmpsb
dec
movsb
cmp
les
shl
rcr
or
clc
pop
lods
and
pop
fldt
adc
aaa
dec
pop
jns
and
sub
xchg
jbe
sbb
pop
cmp
lock
jl
cmp
enter
mov
mov
push
test
mov
sbb
in
in
cmpl
insb
inc
and
lds
sbb
enter
clc
imul
les
ja
fs
cmp
mov
cld
dec
inc
cmp
popl
imul
ret
mov
stos
gs
out
mov
gs
xchg
pop
xor
and
xor
and
cli
fs
xchg
cmpb
push
sbb
jnp
mov
or
dec
pop
xor
dec
or
les
and
test
push
fimuls
imul
outsb
and
pop
and
repnz
inc
jle
mov
jl
sub
push
dec
cmp
or
idivb
push
cmpsl
pop
jl
scas
sub
std
mov
enter
ss
pop
mov
mov
mov
sub
lods
adc
or
fsubs
cmp
fwait
mov
nop
in
push
dec
or
lret
stos
inc
ljmp
popf
jnp
mov
cmpw
mov
leave
sarl
mov
cmp
stc
loope
aas
push
sub
jnp
test
and
add
test
popf
lds
adc
aas
bound
pop
pop
lcall
mov
scas
lock
mov
call
pop
and
mov
dec
cmpl
cmp
in
popf
aas
stc
inc
pushf
dec
cmp
dec
mov
adc
test
inc
sbbb
xor
mov
push
pop
repnz
or
jl
aaa
sub
test
scas
adc
add
popf
mov
insb
push
pop
bound
mov
mov
xchg
add
xchg
sub
mov
addr16
dec
or
cmp
jg
add
imul
dec
mov
aas
lods
mov
inc
test
pop
stos
lahf
mov
mov
xor
xor
and
inc
stc
stos
mov
fcomip
loope
add
leave
mov
out
pop
pop
imul
scas
push
inc
pop
data16
adc
sub
sbb
cmp
aad
js
push
scas
cmp
xor
aas
pop
mov
jnp
or
pop
jg
mov
les
cmc
mov
push
int3
lahf
sub
inc
loopne
in
mov
std
fwait
sbb
imul
pop
cmp
pop
pop
fimull
mov
mov
pop
push
jl
push
cmp
jno
sbb
add
cmp
pop
dec
pop
repz
cmp
shll
sahf
mov
fwait
cmc
ss
mov
and
push
ficomps
inc
fcmovbe
fistl
xor
aad
ds
repnz
cmpsb
jge
fnstcw
cmp
lret
jmp
pop
fcmovne
mov
cld
dec
lret
out
leave
stc
add
loopne
testl
or
or
and
int
dec
ror
fdivrs
jl
xor
loope
and
xchg
gs
pop
lds
mov
xchg
jno
loope
lea
ja
jg
jl
lock
xor
outsb
fadd
cli
rcll
adc
xorl
mov
inc
jae
aaa
jno
push
imul
jp
cmp
stos
inc
jo
ja
imul
test
and
jbe
filds
jp
gs
test
mov
xchg
xor
fnsave
fldenv
add
rclb
add
mov
dec
pop
stc
mov
sarl
jg
cmpsl
jb
mov
dec
sarb
jne
or
dec
sub
lahf
push
cmp
leave
and
fistpll
scas
pop
jno
jge
cmc
inc
mov
xchg
jnp
imul
fcoml
rcr
out
sub
ss
mov
cltd
xor
jns
test
xchg
xor
sahf
repz
lahf
mov
mov
das
sub
cmp
sub
mov
and
imul
cltd
sub
mov
ss
stos
fdivs
mov
xchg
xlat
test
leave
mov
cmp
dec
aam
inc
stc
rsqrtps
sub
into
xchg
inc
dec
mov
dec
imul
pushl
fcoml
sti
popa
jb
jbe
cmp
sbb
inc
cld
maxps
mulb
push
or
fistl
cli
es
mov
bound
adcl
sub
es
and
mov
cwtl
leave
sbb
ljmp
int3
mov
imul
mov
outsl
adc
test
cmp
or
in
mov
repnz
pop
push
out
call
dec
cld
enter
cmp
outsl
sahf
int
adc
mov
les
cmpsl
xor
lret
jns
jo
faddl
test
mov
fwait
inc
hlt
sub
sub
xchg
sub
xor
out
ljmp
repnz
repnz
int3
xor
pop
sub
cmp
mov
shrb
pop
push
dec
popa
ds
jns
inc
aas
sub
xor
inc
enter
ret
or
lock
adc
or
xchg
scas
sub
ljmp
pop
into
sub
adc
ljmp
int3
loope
clc
inc
lea
repz
mov
dec
xchg
sarb
jns
das
fwait
xchg
mov
dec
idivb
xorb
push
cmp
dec
popa
repz
dec
shlb
int
xchg
ja
xchg
add
int3
daa
or
mov
cmp
test
mov
or
cs
ret
mov
cwtl
nop
stos
addr16
xor
into
sub
cmp
xchg
inc
pop
jns
aas
dec
jb
les
cmp
fadds
test
ret
testl
repz
into
or
jae
push
xor
dec
jle
dec
and
jae
ds
int3
insb
fwait
orl
xchg
sbb
addb
pushf
lea
jge
jbe
jnp
mov
insb
sub
and
jl
mov
and
push
add
jmp
sub
movsb
jbe
or
pand
mov
dec
jecxz,pt
jle
pop
mov
dec
mov
and
jmp
popa
mov
addb
mov
scas
push
ljmp
inc
dec
dec
xchg
sbb
push
xchg
shl
dec
int3
imul
push
push
push
xchg
loopne
jg
pushf
test
jns
fs
in
nop
aas
popa
lcall
xchg
sbb
aaa
lea
sti
insb
mov
mov
enter
cmp
sub
insb
pop
stos
cmp
xor
insb
xchg
xor
add
push
mov
xchg
cmp
pop
test
mov
inc
mov
add
pop
lods
dec
mov
jbe
inc
sub
nop
sub
mov
loope
out
call
add
hlt
outsl
jnp
enter
mov
hlt
add
mov
inc
jnp
lea
out
mov
inc
scas
enter
jp
leave
lods
enter
es
pop
hlt
imulb
push
sarl
mov
test
or
inc
cmp
mov
cmp
jecxz
pop
scas
fcomip
test
fisubl
mov
fildll
push
jne
inc
inc
outsb
and
cmp
push
ljmp
adc
push
insb
jle
sbb
repz
lcall
les
mov
nop
pop
fidivrs
bound
sarb
pop
enter
mov
mov
test
mov
iret
fsubr
adc
gs
call
or
inc
das
dec
push
sahf
aad
ffree
xchg
ds
popf
inc
push
insb
imul
xor
add
jge
mov
mov
pop
hlt
xor
pop
inc
mov
xor
lock
push
ljmp
push
add
dec
push
mov
aad
or
push
pop
rcl
adc
mov
inc
push
push
jnp
sub
test
dec
push
ljmp
adc
sub
push
add
xor
daa
jmp
lcall
rcrb
sbb
add
repnz
cmpb
imul
cli
lods
repz
push
pop
adc
dec
nop
test
sti
je
aas
jmp
jmp
pop
pushf
xchg
xor
ljmp
sub
jb
push
pop
inc
mov
push
or
mov
pop
push
push
je
lret
and
or
mov
addr16
lret
mov
mov
mov
cmp
mov
cld
inc
xlat
pop
test
insb
fsubs
xor
pop
mov
int3
sub
stc
cmpsl
sub
lret
aas
fxch
icebp
mov
aam
jl
xchg
cmc
mov
ret
in
push
mov
int3
mov
jns
pop
es
xcrypt-cfb
cmpsl
in
push
sub
adc
sub
mov
cmp
leave
psraw
shll
es
dec
xchg
insb
lcall
rorb
or
repz
int3
or
aad
mov
mov
lods
jns
sub
cmp
out
xchg
jle
or
inc
js
push
sarb
pop
call
adc
fcoml
mov
shrb
addb
loope
popa
mov
add
std
repz
in
jmp
enter
mov
arpl
ss
int
loope
out
inc
xor
nop
clc
aad
or
jmp
mov
iret
out
out
cmp
mov
mov
aad
imul
add
ljmp
cmp
rorl
int
jl
mov
sub
lds
dec
xchg
mov
imul
rorl
sub
rcll
pop
add
loopne
iret
cmp
mov
fisubl
ror
jge
xchg
mov
fadd
roll
adc
movsb
shll
xchg
mov
lcall
inc
pop
popf
js
push
adc
shrb
mov
inc
or
and
jge
loope
adc
mov
add
and
icebp
sub
data16
pop
xchg
mov
ss
xor
xor
pop
popa
popa
and
arpl
outsb
inc
mov
outsb
les
dec
test
inc
xchg
xchg
jo
out
inc
xorl
mov
insb
nop
ror
arpl
dec
pop
or
mov
cwtl
gs
push
mov
icebp
or
test
adc
sarl
scas
loopne
sub
lret
sub
cltd
mov
push
jb
dec
lret
inc
mov
rolb
mov
mov
out
inc
ds
xchg
hlt
gs
mov
aad
stos
fsubp
pop
inc
rcr
inc
push
popa
rorl
cmp
sub
or
popf
pop
push
in
shrl
inc
add
sti
mov
xor
add
or
aas
hlt
in
or
cmp
mov
in
repnz
shlb
and
iret
push
imul
loope
xchg
pop
orb
scas
test
es
adc
or
clc
jle
lods
jnp
ret
push
xor
loope
xchg
jmp
xchg
xor
or
sub
ret
sub
dec
lret
fmulp
movsl
in
xor
dec
xchg
inc
cmc
cld
dec
inc
jbe
jns
aas
das
fxtract
jns
std
lods
adc
loopne
push
push
and
gs
pusha
pop
sub
cli
cld
adc
ljmp
shlb
scas
cmpsl
mov
mov
je
dec
sub
dec
sub
jmp
sub
aad
dec
les
mov
leave
pusha
cld
sbb
movsl
jge
repnz
cld
cmp
testb
fninit
xchg
mov
imul
cmovl
outsb
cmp
push
and
xor
mov
mov
shr
mov
pop
mov
sahf
out
and
mov
xchg
cmpsl
and
ljmp
adc
push
cmp
ss
cmc
popf
mov
in
insl
outsb
inc
enter
cmp
es
insl
cli
xchg
push
cld
jb
cwtl
add
sar
andb
adc
push
sbb
xchg
leave
push
inc
iret
jmp
pop
sti
adc
push
pop
mov
loopne
or
insl
inc
and
mov
adc
test
inc
addr16
xor
xor
mov
dec
fldt
xchg
int3
ljmp
mov
mov
int
popf
enter
insb
bound
repnz
pop
sbb
fstl
sbb
xor
inc
iret
rorb
mov
cmp
loop
cmp
into
les
sub
imul
push
repnz
cmc
lds
mov
testb
icebp
xor
mov
push
lahf
repz
mov
sbb
aas
adc
cmc
pop
sub
pop
out
mov
scas
xchg
lods
scas
inc
inc
lcall
inc
xchg
sarb
jg
sub
sub
popa
movsb
cmp
out
jg
stos
push
fucomi
mov
mov
pushf
push
pop
inc
popa
jb
mov
fidivl
dec
pushf
xchg
xor
xor
xor
addr16
sahf
stos
dec
into
jl
int3
pushf
sub
in
fldcw
clc
lea
jmp
loope
leave
psubsb
sbb
push
ja
push
inc
insb
push
insl
xor
mov
and
jle
insb
pop
lahf
mov
xchg
mov
clc
inc
stos
test
mov
cld
loopne
lds
imul
inc
add
xor
rclb
mov
stos
inc
loope
mov
je
ret
ds
mov
lahf
mov
inc
idivb
stc
xor
add
out
adc
or
imul
xor
sub
mov
mov
pop
mov
jmp
jecxz
sub
pop
sub
jmp
dec
pop
xchg
enter
mov
xor
enter
mov
mov
mov
enter
xor
orb
and
outsl
xlat
test
fimull
add
imul
xor
es
call
shl
sbb
sub
fwait
or
fmuls
rclb
push
cmc
cmpsl
movsl
mov
mov
lret
notl
adc
pop
pop
lahf
test
xor
xchg
jbe
imul
aam
jne
pop
or
fisubl
mov
xor
sub
and
jb
push
mov
shrl
cmc
add
je
daa
clc
xchg
sub
cmp
cld
js
int3
jge
lret
shl
test
dec
lret
jge
jo
mov
gs
addr16
add
xor
adc
mov
lcall
cmpsb
aad
adc
and
addl
push
jmp
mov
lcall
dec
loop
jmp
pop
pop
in
and
dec
pop
mov
fistpl
jo
enter
into
dec
hlt
pop
sub
pop
xchg
movsl
xlat
outsl
lods
loop
adc
inc
loope
mov
cltd
es
cwtl
inc
loop
or
sub
icebp
andl
and
inc
arpl
push
outsb
ds
out
ret
std
lds
sbb
loopne
mov
mov
js
and
sub
mov
add
cmp
movsb
sbb
lea
fwait
sarb
cmc
sbb
imul
dec
les
sbb
das
sti
inc
push
or
sbb
pop
cltd
loope
or
xchg
push
stos
xchg
jg
cwtl
sub
inc
mov
lret
les
mov
cli
daa
sti
test
inc
xchg
fs
iret
or
lds
flds
ret
mov
shlb
out
mov
add
xor
jg
int3
adc
xchg
xor
mov
ds
sbb
jge
inc
scas
xchg
lret
mov
mov
out
add
mov
ljmp
xlat
and
test
xchg
sub
jno
fsubrl
mov
jl
cmp
bound
mov
dec
fldl
adc
pop
lret
xchg
push
push
cmc
pushl
stc
xchg
or
pop
or
les
gs
pop
fcoms
add
pop
cld
or
xor
mov
mov
iret
sahf
push
mov
or
cmp
cmc
or
or
mov
rorl
or
xchg
mov
sbb
add
shll
outsb
inc
xorb
pop
nop
repz
fstl
push
push
fldt
xor
cmp
add
mov
cmp
pop
dec
sahf
test
sub
iret
incb
and
cmp
test
in
pop
cs
js
sub
or
xlat
and
adc
inc
iret
dec
mov
jp
xorl
nop
pushf
adc
enter
sbb
sub
rcl
and
dec
pop
inc
pushf
popa
test
lret
andb
pop
and
movsb
repz
ljmp
mov
pop
xchg
mov
sbb
jle
add
adc
mov
mov
jmp
jae
and
movsb
inc
pusha
aad
daa
icebp
mov
adc
aad
push
or
test
xchg
dec
into
pop
loopne
push
pop
or
enter
lret
les
popa
lahf
inc
and
xor
repnz
and
push
cltd
mov
mov
aam
pushf
mov
pop
shrl
fcoms
push
xchg
dec
fldl
pop
ret
or
popf
sbb
sub
add
fsubrl
jnp
sub
cmp
push
sub
mov
pop
jl
loope
dec
sti
mov
mov
pop
aam
cmp
pop
adc
push
and
push
fs
cmpsl
mov
add
cmp
std
test
xchg
clc
cmp
jmp
out
or
cmp
inc
leave
inc
mov
jle
mov
mov
push
int
jl
cmpsl
test
insl
or
jno
icebp
sub
inc
dec
xchg
xchg
pop
insb
arpl
repnz
cmp
mov
fwait
out
jo
out
pop
mov
jmp
mulps
jnp
mov
cs
add
shl
mov
jns
lret
mov
sar
cmc
dec
jae
pop
jnp
lret
cmpsl
cmp
sarb
jmp
add
pop
mov
pop
aaa
in
dec
or
jbe
fcmovnb
sub
vdivps
mov
xchg
sbb
hlt
sbb
xchg
mov
popf
fxch
inc
dec
repnz
mov
scas
clc
dec
addl
in
into
or
mov
fnstsw
dec
or
mov
aad
incb
fcoms
out
inc
cltd
leave
inc
stos
dec
pushf
mov
mov
ret
test
pop
cmp
pop
dec
clc
push
leave
imul
lret
stos
fwait
out
cmpsb
pop
pop
xlat
stc
mov
mov
mov
jmp
lods
nop
fcomps
aaa
xchg
popf
mov
mov
scas
rcl
and
push
sub
ret
fisttpll
lret
push
sub
adc
xor
jecxz
ficoml
mov
cltd
mov
mov
push
in
incb
mov
test
pop
repz
andb
jns
mov
sbb
lods
mov
daa
inc
repz
jnp
or
fmul
call
xchg
fdiv
mov
xchg
clc
and
or
in
and
sub
push
roll
mov
daa
cmp
lret
cs
leave
cmp
adc
arpl
push
pushf
iret
and
jo
shll
xor
in
pop
addr16
xor
sbb
into
mov
mov
test
push
sub
xchg
pop
sub
sbb
pop
cmp
xchg
popf
xor
loope
sbb
dec
adc
dec
add
push
xor
fs
int3
adc
xchg
sti
rcrb
cwtl
add
ljmp
or
cmc
fdivrs
pop
xchg
mov
xor
dec
jns
sub
scas
je
mov
mov
loope
jp
mov
fdivrs
cmp
inc
sub
and
sbb
jmp
fstpt
ret
lds
xlat
add
faddp
adc
push
sub
je
inc
inc
pop
push
addr16
xchg
xor
je
fadds
inc
cmp
jns,pt
sub
and
jp
sti
mov
xor
lret
dec
mov
mov
imul
int3
cmpsl
push
mov
leave
icebp
xchg
xor
dec
sbb
xor
or
loop
das
push
mov
mov
test
sbb
and
and
inc
outsb
or
inc
inc
xlat
sbb
test
adc
addr16
aaa
insb
ds
xchg
add
je
jmp
cmp
es
and
push
out
lock
adc
int3
ss
pushf
bnd
mov
les
mull
fcoml
enter
push
mov
fcmovne
mov
roll
pop
add
xchg
cmp
adc
stos
scas
sti
imul
lea
xor
mov
add
mov
jne,pt
out
addl
jge
inc
sub
adc
mov
ja
fwait
sbb
jo
jnp
jno
sub
stos
incb
lret
and
loop
pop
mov
aam
push
scas
arpl
push
adc
pop
sbb
mov
sbb
adcl
push
fcmovb
pop
cli
mov
pushl
jge,pt
push
das
test
xchg
js
lock
pop
mov
dec
dec
pop
inc
loopne
mov
and
jg
xor
dec
scas
mov
stos
outsb
bound
mov
mov
pop
stc
shrb
cmp
sub
sbb
add
pop
jne
cmp
xor
mov
popa
pushf
jp
fwait
ss
mov
and
xchg
adc
pop
add
sub
loopne
cmp
dec
xchg
xorl
pop
aam
cmp
jno
popa
dec
icebp
inc
and
jle
mov
push
in
cmp
or
jo
xor
mov
xchg
lret
inc
add
fnstenv
cmp
stc
jne
adc
bound
sarb
or
je
pinsrw
or
repz
rorb
scas
or
in
ret
jecxz
pop
dec
ljmp
js
cmp
inc
icebp
fnsave
pop
fs
xchg
lods
add
mov
cld
test
nop
lds
cmp
rcrl
adc
aam
clc
and
hlt
mov
xchg
push
cmp
stos
pusha
cmp
fdivrs
or
fs
jb
inc
fisubs
scas
xor
ret
and
inc
dec
cmc
cmc
sbb
dec
ds
ret
sarl
fdivl
stos
jne
and
out
imul
and
cmpsb
clc
adc
inc
sarl
sub
add
inc
jmp
pusha
push
sbb
xchg
and
cmp
jp
and
fdivl
mov
loopne
xchg
negl
cmp
sbb
mov
xor
jne
lret
inc
cmp
sub
lods
stos
pop
ss
and
mov
jmp
sub
lea
jecxz
push
mov
sbb
jns
sub
jnp
stos
rcrb
roll
popf
push
cwtl
mov
fistpll
add
ret
int3
push
jge
xlat
add
jb
incl
mov
or
xchg
inc
les
pushf
loopne
cmp
pop
jo
stc
in
mov
out
push
leave
mov
jo
cli
add
adc
pop
rorb
ret
sub
aad
rcll
cs
pop
ds
xchg
pusha
jmp
test
movsb
or
lret
xor
enter
xor
sar
inc
dec
cmpl
outsl
lahf
popa
mov
xor
jne
lods
sub
cmc
mov
adc
test
dec
dec
adc
in
push
lock
cmp
or
fistpll
xchg
sbb
in
mov
push
jg
mov
insl
out
pop
xor
lcall
mov
and
jo
pop
push
push
daa
xchg
ret
and
imul
or
rorl
mov
lock
aaa
test
adc
push
sub
dec
push
sti
add
xchg
cmp
daa
scas
inc
stc
daa
aam
push
add
and
sbb
cld
or
xchg
lcall
mov
sub
or
sub
sbb
out
and
add
pop
add
mov
inc
andb
sarb
into
popa
int
in
xor
sarl
iret
dec
ljmp
fdivrl
adc
inc
inc
lahf
jae
pop
fs
push
int3
jae
and
xor
sti
cmp
and
inc
fcomps
in
stos
mov
mov
rcrl
loope
cmp
mov
dec
lret
clc
inc
std
call
inc
sbb
jns
int3
inc
cltd
and
push
add
mov
push
xor
shlb
lds
jae
dec
sbb
test
inc
xchg
clc
mov
xchg
cld
into
mov
cmp
addr16
mov
cmp
jp
push
dec
inc
add
pop
push
xlat
sti
add
mov
popa
pop
mov
ret
or
clc
stos
push
outsb
lret
add
jle
repnz
jnp
fldt
xor
push
jge
pop
ja
push
xchg
and
inc
test
enter
adc
data16
cmp
cmpl
dec
popa
les
js
inc
cltd
xchg
mov
inc
stos
sub
inc
lods
int3
sub
jecxz
sbb
mov
repnz
adc
push
dec
push
xchg
xchg
adc
cmp
aaa
lret
hlt
cmpsb
jl
cmp
cltd
arpl
dec
int
jne
imul
adc
cmpsb
cmp
mov
pushf
je
adc
cmp
mov
test
xchg
or
pop
xor
or
xchg
ret
dec
pop
add
inc
push
xlat
popf
lcall
cmp
cwtl
inc
dec
movsl
xor
call
in
or
sub
sahf
shlb
pop
push
cltd
icebp
xor
sub
int
cmp
lret
mov
sub
aad
imul
mov
sub
nop
cmp
std
add
cltd
mov
ret
or
arpl
adc
push
mulb
lods
inc
xchg
sub
mov
add
adc
stc
jge
sub
and
pusha
sbb
xchg
repz
fcmovne
std
xchg
push
inc
jb
imul
lcall
mov
add
nop
push
sbb
cmp
or
adc
and
pop
mov
pushf
cmp
fisubl
push
rcrb
div
pop
fxtract
jns
sti
stos
mulb
push
xchg
dec
jp
dec
push
sub
stos
stos
repz
dec
lods
xchg
mov
dec
insb
sbb
out
scas
cli
cli
cmp
jp
loop
push
mov
mov
xchg
mov
or
imul
push
sub
leave
out
sti
std
inc
sti
or
mov
mov
or
sub
xor
es
xlat
les
ds
cmp
dec
sub
or
or
add
loop
enter
dec
ret
rorl
inc
cmp
sbb
pop
pop
fmul
shl
and
sti
shl
loope
pop
dec
lcall
loopne
sarl
adc
int
sub
adc
lock
push
idivb
xchg
dec
inc
and
inc
ljmp
lret
sub
insb
jo
sbb
dec
jle
rolb
sbb
push
aas
push
mov
inc
decb
enter
mov
clc
ds
jp
repz
xchg
add
ja
cmp
add
mov
mov
lods
inc
imul
jnp
in
add
add
iret
out
pop
out
mov
ret
jge
inc
pop
movsb
sub
jo
insb
fwait
test
dec
ret
dec
mov
cmc
push
xchg
in
loope
mov
popa
nop
xor
sbb
pop
iret
stc
data16
sub
mov
or
lahf
mov
push
sub
mov
stos
add
insb
pop
fadds
mov
incl
cmp
std
mov
insb
mov
xchg
xor
nop
mov
ja
add
and
stos
into
mov
pop
bound
inc
adc
leave
mov
or
test
popa
jle
out
cmp
or
xlat
ret
push
add
cmp
jl
stos
mov
lods
in
fnstcw
dec
adc
mov
std
jns
sbb
xor
dec
jae
push
adc
pop
fwait
int3
data16
xchg
rclb
shrb
outsl
push
nop
and
push
push
cmp
sbb
sbb
inc
shl
sub
jp
stos
loope
jns
rep
sub
or
sarb
test
and
into
rcrl
jb
dec
sbb
pop
jns
gs
mov
add
out
adc
lret
test
add
mov
dec
pushl
icebp
dec
push
mov
popa
outsl
mov
hlt
std
jae
cmc
push
jne
mull
pop
adc
loope
fisttpll
pop
push
add
test
pushf
inc
test
scas
inc
popa
inc
mov
int3
std
dec
repnz
dec
pushf
iret
cmpsl
jle
enter
sbb
cmp
popa
aad
cmp
adc
mov
mov
add
mov
decl
lock
jb
or
stos
jbe
adc
popa
xor
mov
sub
ss
push
sbb
std
enter
sbb
or
pop
pop
jge
data16
lahf
or
fs
lea
aad
scas
mov
dec
dec
aad
aad
mov
lret
test
shrb
insl
les
dec
cwtl
div
xlat
shrl
cmp
pop
or
cltd
gs
scas
xchg
add
ds
shll
scas
or
cmpsl
jno
push
imul
std
or
mov
into
xor
jb
dec
and
ljmp
or
xacquire
loopne
je
inc
stc
add
ja
or
and
xchg
jp
in
inc
popa
gs
mov
out
jp
popa
inc
inc
pop
inc
rorb
cmp
mov
sarl
add
adc
leave
push
out
dec
adc
inc
popa
dec
shl
mov
pop
jle
pop
and
lock
adc
sub
and
mov
test
pushf
jmp
test
and
mov
mov
repnz
or
inc
mov
das
sub
cli
cmpsb
cmp
movsl
inc
pop
flds
xlat
pop
jns
cmp
xlat
inc
mov
jne
cltd
push
pop
negl
push
or
mov
idiv
or
pop
or
insl
insl
mov
dec
pop
mov
adc
inc
fwait
xchg
cmp
cmp
test
and
enter
or
in
push
cwtl
pop
and
and
mov
xor
andb
mov
cmp
pop
ja
es
rorl
mov
out
fimull
dec
pop
sub
mov
loop
adc
pop
leave
fildl
push
pushf
mov
movsl
jno
sub
jbe
ss
push
jae
dec
or
clc
in
cmp
xchg
xchg
push
imul
adc
std
sbb
cmp
mov
lcall
cltd
int
push
les
mov
aaa
jg
lds
pop
in
mov
jl
dec
or
mov
xorl
dec
ret
in
loop
pusha
push
sub
aas
mov
mov
xchg
fldcw
cld
scas
sub
sbb
lret
jnp
test
mov
pusha
inc
jecxz
ret
cmp
cmc
pop
dec
cmc
shrl
insb
pop
xor
aas
sahf
pushf
pop
pusha
mov
inc
mov
loop
xchg
test
sub
cmp
mov
mov
sub
test
mov
cld
jns
rcll
fcmovnb
test
iret
bound
iret
jne
lret
test
insb
and
jle
xchg
and
sbb
cmp
sub
push
into
inc
stos
mov
mov
inc
aas
stc
in
cli
imul
jae
test
jge
pop
idivl
scas
adc
cmp
mov
push
imul
adc
jns
mov
push
and
ret
xchg
cmp
sbb
push
cld
or
sti
or
pop
cmp
pusha
or
in
arpl
fwait
ja
and
xchg
pop
inc
ror
sbb
cmp
sub
andl
push
mov
cmpsl
mov
dec
adc
inc
sti
nop
sbb
pop
ror
jp
loop
arpl
out
push
push
les
mov
imul
pusha
or
or
inc
ret
pop
popa
std
fwait
dec
inc
mov
int
inc
leave
dec
imul
fisubl
movsb
cmc
ds
and
mov
xchg
mov
push
pop
cmp
jmp
sbb
adc
sahf
or
mov
cli
addr16
ljmp
cmpsl
xor
xor
enter
cmp
into
sbb
pushf
jle
push
mov
sarb
pop
fldl
cwtl
xor
into
test
dec
xchg
mov
push
push
cmp
test
pushf
andb
int
jle
mov
or
or
pop
clc
subl
mov
pop
lods
inc
shrb
sub
cltd
lods
les
loopne
mov
adc
adc
push
lods
and
push
and
lods
lea
inc
das
xchg
dec
push
push
dec
maskmovq
mull
jg
jl
mov
adc
mov
push
xchg
xor
jg
pushf
int3
cltd
mov
ret
shl
lahf
inc
in
pop
jae
les
cmp
aam
add
mov
ds
sbb
sub
rclb
and
or
loopne
hlt
dec
or
pop
clc
push
cmp
cltd
mov
xchg
fimull
cld
mov
stc
inc
mov
xor
inc
sub
loop
insb
sub
lods
sbb
mov
jo
pop
aas
mov
cmp
jbe
ja
xor
inc
lds
inc
lcall
in
dec
test
add
inc
adc
pop
jp
lahf
mov
fistps
test
ret
arpl
mov
and
dec
stos
flds
mov
stos
arpl
push
movsb
sub
fidivs
arpl
dec
bound
and
pop
imul
outsl
jno
fs
test
push
cs
xor
push
cltd
in
jo
push
and
sbbb
fnstsw
xor
inc
aas
iret
jl
adc
jp
pop
je
inc
cs
and
sbb
rolb
rep
lahf
dec
adc
cmp
and
cmp
aas
in
aas
adc
dec
rolb
cmp
xor
enter
ret
jno
jne
mov
mov
repz
dec
fdivl
or
call
mov
jns
xor
outsl
mov
inc
sbb
leave
cmp
xor
dec
lods
adc
iret
jg
push
jle
icebp
test
pop
outsb
pop
js
mov
or
shrb
sbb
lretw
sbb
out
es
mov
int
jmp
sarb
loope
hlt
xchg
or
sbb
mov
dec
xchg
adc
mov
xor
adc
mov
mov
mov
inc
aam
adc
adc
out
push
shll
and
add
loop
mov
mov
mov
in
lret
fldt
out
cmp
mov
push
js
ljmp
cli
xchg
and
xor
ds
inc
push
mov
mov
or
sub
aad
das
loope
arpl
mov
pop
adc
addr16
imul
xchg
movsl
loope
outsl
pusha
cltd
cmp
pop
outsb
addb
repnz
outsl
add
mov
mov
xor
cmp
mov
or
and
cmp
sbb
xor
xlat
cmp
dec
mov
test
cmp
out
sub
outsb
mov
sahf
nop
sbb
fldcw
sub
push
jbe
fisubs
and
inc
jae
imull
notb
xor
fdivs
fidivl
pusha
adc
popa
pop
or
pop
cmp
or
sbb
inc
out
adc
rorb
cmpsl
mov
enter
pop
mov
jp
shlb
lret
mov
repz
mov
in
jbe
or
add
ret
lods
loope
lds
ss
enter
pushf
xor
fidivrl
sbb
loop
out
insl
push
push
push
jb
add
jae
and
cmp
mov
pop
push
and
lahf
stos
rep
inc
shr
dec
inc
andl
hlt
mov
mov
les
sbb
movsl
and
repz
lock
sbb
inc
lds
adc
push
rol
les
lods
inc
mov
sub
add
mov
popf
mov
clc
dec
loop
xchg
int3
cltd
rorl
inc
push
sub
add
repnz
loope
mov
lods
sbb
mov
aam
fwait
mov
fists
xchg
xchg
pop
add
sub
pop
add
rcll
pop
movsl
xor
adc
lret
add
inc
ret
ret
into
cmpsb
addr16
xchg
or
aas
pop
xchg
dec
inc
insl
clc
les
add
das
test
int3
in
mov
and
orb
leave
add
ja
inc
pop
sub
inc
negl
sub
rcrb
xorl
dec
loopne
das
lods
add
sub
xlat
dec
xchg
mov
adc
pop
scas
aam
adc
loop
jmp
lret
cmpsl
mov
or
inc
adc
mov
and
sub
popa
push
lcall
out
pop
in
xchg
jo
xchg
sub
cli
inc
sbb
add
hlt
pop
pop
lret
rol
cmpsb
popa
add
xchg
adc
fs
push
lret
push
daa
bound
mov
decb
ret
jge
or
xchg
scas
aaa
js
mov
adc
jno
in
clc
fistpll
loop
cmp
cmp
int3
out
cmpsb
sbb
xor
cwtl
xchg
ret
or
jl
xchg
dec
pushf
int3
dec
or
insb
push
sbb
push
jmp
out
aaa
dec
ja
cld
repz
sub
in
and
rolb
loopne
cltd
dec
mov
fwait
pusha
repz
mov
mov
cmpsb
mov
sti
pop
cmp
xchg
rclb
mov
push
cmpsl
mov
stc
mov
cmp
xor
cmpsb
sbb
arpl
mov
mov
cmpsb
lret
push
neg
push
mov
dec
inc
jmp
fcomps
js
jmp
jns
cmpsl
sub
mov
mov
dec
or
mov
inc
mov
lock
cmp
sbb
out
sub
push
sti
in
cmp
loop
sub
fidivrs
shlb
dec
arpl
out
in
into
jle
aam
lods
out
push
and
xor
sub
lock
inc
lcall
jmp
jl
or
xor
cmp
pop
push
jecxz
or
int3
sub
lahf
jnp
daa
jp
jns
adc
dec
test
mov
pop
ficompl
imul
jae
frstor
xor
cs
inc
ss
pushf
fstl
pop
pop
xlat
xor
pop
xor
imul
cltd
add
jns
test
adc
mov
ret
jmp
cwtl
jae
mov
inc
rcll
sub
add
lock
movsl
jecxz
jns
sbb
repz
pop
adc
mov
inc
xor
cmp
test
fldcw
in
mov
add
addr16
add
js
sub
jmp
mov
inc
gs
aaa
mov
je
iret
imul
xor
xor
push
or
push
mov
dec
int3
lret
dec
adc
out
in
lret
add
adc
mov
nop
pop
mov
sbb
sub
mov
xor
icebp
popf
ss
and
sbb
ror
pop
ds
js
mov
dec
lods
roll
fs
jg
push
push
insb
in
dec
inc
mulb
cli
adc
int3
inc
xchg
jo
fwait
dec
jg
sbb
sub
das
or
mov
and
imul
cld
loope
out
push
add
inc
pop
add
lret
out
adc
outsl
loopne
popa
add
mov
movsb
and
dec
pushf
mov
cltd
iret
pop
sub
in
xor
out
fdivrs
lds
cmpsb
shll
fs
add
aam
push
dec
loopne
mov
push
and
push
enter
je
je
push
ret
loopne
mov
jmp
mov
xchg
xchg
mov
data16
stos
jg
mov
lods
int3
jmp
and
adc
fdivrs
out
nop
jecxz
ja
sarb
push
mov
inc
xchg
xchg
rorl
aam
mov
fs
sub
fwait
xor
sahf
pop
xchg
hlt
mov
pop
stos
add
add
icebp
inc
sbb
les
or
inc
and
inc
pop
adc
mov
push
loopne
sub
mov
and
ret
xchg
dec
mov
sbb
test
xor
pop
mov
jae
and
mov
clc
sub
mov
les
inc
lock
mov
je
daa
cmp
insb
imul
mov
pop
loopne
dec
insb
mov
hlt
outsl
push
std
aaa
lretw
push
out
ret
mov
xchg
addr16
and
les
and
mov
inc
mov
push
jbe
je
jl
mov
and
mov
addr16
inc
jnp
add
stc
pushf
or
cld
cli
enter
push
inc
mov
stc
xor
inc
push
cmpsb
cmp
movsb
ja
xor
movsb
adc
mov
js
mov
pop
mov
aam
test
xchg
pop
inc
xchg
ret
mov
jg
add
pop
jns
into
addl
clc
adc
pop
mov
stc
and
cli
cmpsl
add
loope
inc
xchg
mov
cmc
imul
das
outsl
ficoml
inc
mov
sub
sbb
sar
add
pop
jb
ljmp
repnz
out
inc
inc
mov
out
pop
lods
push
mov
fistpll
insl
inc
pop
std
pusha
rorl
xchg
scas
or
adc
lret
ds
xchg
in
jbe
xlat
cmpsl
mov
xor
loope
xor
subl
inc
es
push
or
mov
add
mov
mov
repz
aad
loop
lds
inc
ljmp
sub
dec
enter
ja
leave
pop
pop
aas
adcb
clc
stos
xor
sub
adc
sbb
add
sbb
pop
cmp
mov
scas
cmp
repz
addb
or
add
js
aas
lock
push
pop
cmp
test
jecxz
inc
iret
cmp
sub
je
repnz
push
push
mov
xchg
test
lcall
lret
arpl
test
arpl
stos
xor
sti
xor
dec
jmp
and
push
dec
push
sbb
ret
outsb
pop
cltd
jmp
inc
mov
dec
jo
les
mov
sti
xor
enter
mov
cmpsb
addr16
scas
pop
and
fsubs
std
and
cmpsl
jecxz
or
mov
jge
sub
loopne
mov
push
fwait
mov
adcb
test
inc
jl
lret
push
movsl
mov
aam
sbb
stc
and
sub
jb
insl
ret
xchg
xor
fwait
cmpb
push
mov
mov
fbstp
sbb
push
mov
jg
pop
cmove
cmp
js
bound
lret
fnsave
imul
cli
sub
out
jne
shrl
imul
nop
pop
mov
stos
jbe
mov
or
test
cmp
pop
mov
aas
dec
lret
sarb
jg
and
out
dec
gs
int3
or
pop
insl
mov
orl
in
adc
cmpsl
and
xchg
mov
arpl
xor
pop
dec
pop
push
fldt
mov
lds
aaa
cli
imul
arpl
lods
scas
jl
call
loope
adc
and
pop
rcrl
mov
mov
dec
lret
adc
dec
dec
addl
aaa
enter
icebp
sub
xor
push
pop
mov
pop
ljmp
xor
cmpsb
and
mov
rcr
xchg
fistpll
lods
push
cmpsl
adc
lret
cmp
mov
mov
ss
sbb
sahf
mov
jg
push
pop
or
aaa
push
jg
repz
pop
scas
in
lret
xor
in
xchg
jmp
sub
pop
adc
adc
jle
inc
xchg
pop
jb
push
movups
add
jne
inc
push
movsb
cmp
sahf
lahf
dec
pushf
adc
imul
int3
pop
jmp
inc
dec
and
cmp
lcall
hlt
into
or
ficoml
test
jle
into
sarb
adc
lods
xchg
mov
pop
mov
add
hlt
xchg
add
mov
push
mov
lods
cwtl
je
sub
cltd
in
enter
mov
sub
aaa
sub
insb
cmp
sub
dec
faddl
dec
fwait
dec
cli
add
in
mov
pop
movsl
out
or
cli
sub
adc
loopne
cmp
pop
mov
sbb
dec
out
mov
lcall
pushf
aaa
pop
inc
xchg
fisubl
std
mov
cmp
ja
xor
rorl
xor
test
or
push
add
or
ds
dec
ljmp
enter
cs
fdivrl
stos
and
icebp
sbb
sbb
hlt
ret
push
dec
ljmp
shrb
and
stos
mov
cmp
enter
inc
add
test
cmc
ss
dec
or
cmp
lcall
inc
inc
inc
insl
imul
das
xchg
mov
cwtl
je
push
mov
jg
adc
out
jmp
cmp
mov
bound
sbb
dec
out
stc
adc
sub
add
jle
dec
cmp
sarb
push
repz
lret
cmc
and
pop
aaa
daa
mov
ja
repz
xor
leave
bsr
lahf
mov
dec
jle
push
rorl
cmp
nop
inc
or
jp
cmp
jecxz
cmp
xchg
mulb
mov
fs
mov
in
test
inc
jp
pop
sub
xchg
add
out
mov
sarl
nop
shlb
push
fcompl
mov
sub
jnp
cwtl
inc
sbb
xchg
sub
test
test
rorl
test
dec
cmc
adc
ja,pt
shlb
es
pop
cmc
and
leave
dec
fistps
jmp
push
add
mov
cmc
mov
outsl
push
incl
lcall
ret
mov
push
dec
ss
xor
jnp
test
int3
push
push
push
call
sbb
je
aam
rcll
push
dec
ret
icebp
pop
cld
inc
insb
stos
cld
sub
stos
sub
adc
cmp
jp
out
cmc
xchg
out
dec
push
cmp
xor
dec
sub
mov
add
xchg
xchg
fisttpll
add
pop
rcll
mov
jns
inc
add
repz
mov
mov
xchg
add
inc
jne
sub
sub
mov
jle
and
mov
ret
and
lock
lods
pusha
xor
mov
sub
sub
mov
jb
rolb
jl
pop
js
mov
jl
sbbl
mov
int
jmp
adc
es
vmread
xor
pop
lods
scas
and
mov
cmp
push
fst
fdiv
jl
mov
mov
push
lcall
jo
push
mov
add
in
loop
test
push
in
cmp
mov
or
mov
mov
shlb
divb
std
push
out
cmpl
jmp
push
test
pop
cltd
pushl
pop
mov
xor
test
sarl
inc
mov
xor
enter
lret
mov
mov
xor
sar
inc
loope
sahf
xor
cmp
ljmp
jns
and
fists
dec
gs
jnp
mov
adc
pop
iret
shlb
push
xchg
jmp
subl
or
dec
enter
imul
imul
mov
rolb
fldcw
popf
add
dec
push
jmp
addr16
pop
dec
outsl
cmc
dec
or
and
adc
adc
inc
add
fistps
mov
addr16
test
xor
aad
mov
fadds
inc
fs
sahf
shl
jo
mov
test
jg
jo
lret
mov
cmp
mov
push
push
inc
mov
das
xchg
movb
mov
mov
sbb
mov
popl
movsb
int3
add
or
pop
mov
cmp
mov
dec
cmp
cmp
aaa
in
cmp
mov
and
jns
mov
int
mov
testb
lcall
out
mov
jns
les
sub
test
ret
pusha
je
repz
daa
daa
xlat
icebp
int3
pop
or
cmc
sbb
xchg
push
sbb
lret
cmp
inc
and
mov
shr
arpl
adc
cwtl
cmp
sub
int3
mov
aad
out
add
sahf
push
adc
dec
or
outsb
int3
fdivrl
mov
inc
loop
cmp
or
imul
push
push
movsl
inc
push
push
std
scas
pop
outsb
sti
mov
sbb
jl
mov
leave
fstl
cltd
idivb
imul
jo
test
inc
push
xchg
dec
pushw
testl
movsb
sbb
push
add
movsb
cmp
es
push
add
pop
push
dec
lock
repnz
pop
inc
popa
adc
cwtl
div
jns
stc
pushf
jnp
jle
enter
sbb
jecxz
dec
aad
cmp
push
imul
xor
popf
shrb
add
dec
mov
fisttps
or
or
hlt
mov
imul
flds
sub
sub
stos
sub
lcall
mov
sub
push
movsb
cmpsl
dec
cld
and
outsb
insb
movsl
scas
add
jne
mov
neg
roll
mov
sub
fildl
stos
xor
sbb
jl
inc
adcl
push
inc
cmp
mull
and
incl
int3
ljmp
jl
aad
cmp
sbb
loope
pop
into
test
xor
cmp
in
jmp
dec
mov
xlat
popa
cmpsb
sub
pop
inc
mov
xor
faddl
push
jmp
sbb
addr16
push
stos
add
and
lcall
cmp
das
jo
cwtl
ss
jg
dec
mov
lcall
add
aas
ss
sub
ffreep
rorb
popa
std
or
adc
lahf
adc
dec
pop
xchg
pop
cltd
orl
in
icebp
test
dec
inc
cwtl
loope
dec
xchg
push
adc
add
mov
xchg
mov
test
push
pop
inc
int
lea
call
xchg
sbb
stos
cmp
sbb
jp
xorb
ljmp
ret
insb
jg
test
add
push
xchg
int3
sub
sub
inc
adc
sbb
or
rolb
xchg
push
cmpsb
dec
or
pop
dec
push
sbb
pusha
test
rol
add
sub
adc
mov
insb
inc
imul
mov
mov
aad
jecxz
stc
shrl
imul
push
sarl
aam
sub
movsl
xorb
ja
sub
sbb
cmpsl
mov
lret
js
lods
dec
mov
sub
daa
mov
sub
jbe
adc
scas
cmp
lds
rorb
or
xchg
iret
pop
addb
enter
push
mov
jp
out
mov
stc
shll
adc
push
pop
inc
inc
mov
fs
jp
jle
clc
mov
xor
sbb
sbb
push
cltd
call
mov
dec
ret
add
sbb
pop
dec
dec
addr16
or
jno
adc
hlt
test
mov
mov
cli
sbb
cmp
addr16
adc
popa
xor
jl
sti
fcmovbe
sarl
xor
or
xchg
dec
mov
repz
and
jmp
sbb
scas
out
jne
testb
test
or
cmp
xor
in
sub
arpl
or
xor
cwtl
and
xchg
add
sbb
sub
enter
cld
sti
xor
lods
jecxz
jnp
popf
fisubl
fwait
add
sub
loopne
xlat
mov
pop
das
out
mov
push
dec
notl
daa
mov
sbb
fucom
mov
jp
outsb
aas
mov
sahf
shlb
xor
adc
lods
dec
fidivrl
jge
mov
nop
lahf
pop
call
clc
mov
cli
xchg
push
mov
push
push
or
divb
repnz
daa
inc
rcll
loope
push
aam
rcrb
ret
in
cmp
sub
mov
lock
mov
mov
subb
mov
loope
adc
mov
in
and
dec
pop
popf
inc
inc
jle
fadd
ds
mov
mov
stc
mov
sub
daa
pop
cmp
inc
ret
add
jne
dec
mov
xlat
rorb
dec
add
sub
xlat
or
out
sbb
int3
jge
xor
je
hlt
push
inc
xchg
shl
mov
lret
ja
shll
cmp
arpl
jmp
hlt
icebp
mov
or
sbb
nop
mov
lret
pop
mov
pop
clc
shr
xchg
out
push
rolb
sub
iret
lea
jno
gs
mov
xor
jg
test
or
xchg
and
push
mov
xor
dec
fldt
in
fisttpl
xchg
and
fs
xchg
jl
inc
stos
jmp
leave
xor
cmp
cld
ret
inc
xlat
dec
pop
pushf
mov
add
push
enter
cltd
sub
cmc
cmp
ret
enter
add
dec
das
shrl
cmp
lods
cmpsb
enter
jmp
jo
leave
and
enter
insb
cmp
cld
cmc
shll
in
aam
dec
pusha
ret
and
adc
sbb
adc
cmp
out
pop
pop
mov
outsb
rclb
pop
or
add
icebp
pop
out
scas
sti
aas
mov
sub
xchg
movsl
push
cmp
das
push
test
pop
pop
jns
fiaddl
inc
loope
in
inc
fcompl
sbb
cmpsb
movsb
xor
sbb
mov
dec
repnz
cmp
sbb
mov
insl
imul
and
adc
pop
fcomp
sub
inc
stc
je
rclb
push
int
daa
and
movl
fwait
mov
pusha
test
clc
daa
enter
add
adc
mov
ror
xchg
scas
dec
iret
xor
popf
dec
leave
mov
sub
dec
ret
arpl
clc
xchg
pop
dec
lret
xchg
lahf
inc
jmp
mov
xchg
cmp
cmp
out
dec
xchg
out
cmp
mov
mov
cmp
clc
cmp
inc
test
pop
cmpsb
jecxz
jge
les
jp
cli
aas
aad
or
jae
cwtl
pop
movl
insl
or
popa
and
mov
leave
xor
xorb
test
shrl
repz
imul
pop
decl
pop
cmp
cmp
subl
adc
orb
imul
testl
jae
jnp
jge
dec
jmp
fiaddl
imul
xor
mov
sbb
mov
dec
xchg
pop
inc
and
add
popa
xchg
push
jne
adc
cmpsb
ja
andl
cli
lret
pop
push
mov
sub
es
arpl
popa
sahf
rcrb
inc
inc
sbb
lods
movsl
mov
mov
aas
inc
cli
fistl
fsubs
sbb
subb
or
inc
mov
cld
sub
jl
jecxz
pushf
shll
pop
fsubrs
cmp
jl
loop
shrb
adc
pop
xchg
sbb
cmp
jnp
add
fidivl
push
out
ja
push
rcrl
test
pop
inc
xor
imul
mov
pop
cmpsb
out
sub
xchg
in
jnp
fstps
inc
movsb
scas
pop
into
mov
das
cltd
loop
push
dec
xchg
nop
cmp
lea
out
lock
out
mov
jno
outsl
add
aad
xor
leave
jmp
jge
and
loop
inc
add
and
orb
scas
ljmp
sub
cmp
mov
sbb
pop
dec
inc
inc
and
pop
dec
pusha
in
leave
insl
imul
ret
sub
bound
pop
lret
adc
testl
push
jno
adc
mov
lds
cltd
insb
and
inc
cltd
dec
cmp
push
mov
sub
in
popf
movsl
gs
sarl
scas
xlat
mov
into
pop
cmpl
mov
shll
in
cwtl
xchg
and
jmp
inc
lcall
test
fcoml
mov
cs
popf
lret
mov
cmp
and
inc
lahf
lods
inc
sub
in
dec
jge
inc
push
or
les
cmc
lret
lret
fmuls
pop
xchg
call
mov
adc
and
inc
and
add
mov
push
cmp
xchg
mov
mov
cmp
fsubrl
dec
xchg
cld
mov
in
jae
call
mov
les
stos
dec
mov
sub
lock
jl
or
les
sub
test
fidivrl
inc
push
mov
and
add
and
inc
js
cli
test
push
cltd
dec
cltd
jmp
shlb
inc
lock
xchg
push
xlat
enter
mov
inc
cli
dec
fldl
subb
je
adc
fstpt
push
lods
inc
fsts
dec
out
lret
push
test
mov
jg
xor
dec
insl
jne
jp
sub
cltd
fistpl
inc
adc
bound
into
xor
xchg
or
das
test
push
xchg
stc
sbb
and
lret
cmp
push
dec
push
gs
inc
mov
shlb
pushf
add
test
mov
stos
pop
cs
outsb
mov
std
fwait
cli
pop
xchg
int
rcrl
clc
xchg
vpmacsdql
pop
sub
movsb
mov
jnp
stc
loope
and
pop
xor
int
shrb
rcl
jne
in
out
int3
xor
cpuid
movsb
cmp
cld
push
sti
or
jns
add
mov
in
xor
inc
faddl
mov
add
cmpsb
dec
xchg
or
sub
sub
jl
idivb
mov
add
add
mull
insb
leave
loope
adc
and
sahf
or
xchg
iret
mov
cmp
stc
or
lahf
dec
cli
insl
push
shr
in
fadd
xchg
add
sub
xor
rorl
fnstcw
push
cmp
sub
cmp
add
mov
jo
mov
lods
rorl
fcompl
in
sbbb
push
shr
adc
cs
shlb
lea
mov
shll
push
dec
add
cmpb
push
cmp
xchg
xchg
repz
adc
jno
in
ret
adc
lcall
push
mov
jge
push
jne
adcb
imul
or
dec
cmp
gs
inc
pop
xchg
mov
pop
test
test
pop
inc
cmpsb
gs
js
scas
jbe
xlat
rcr
call
push
call
roll
mov
dec
jns
leave
sub
mov
es
dec
mov
lcall
xchg
jmp
popl
stos
mov
mov
inc
mov
shlb
inc
scas
sarl
push
pop
xchg
enter
sbb
mov
aam
fwait
jb
test
adc
push
mov
imul
lahf
dec
sbb
or
leave
add
push
jb
decb
adc
jmp
adc
pop
dec
loopne
mov
inc
sbb
mov
jecxz
stc
adc
push
mov
jmp
ror
sbb
in
js
mov
outsl
lock
mov
inc
roll
mov
in
adc
hlt
and
push
dec
out
and
aad
mov
pushf
pop
lcall
shll
in
dec
mov
insb
ljmp
pop
jl
mov
lock
pop
push
fwait
enter
mov
mov
verr
mov
insb
leave
sbb
inc
aam
stos
mov
lret
sub
std
pop
mov
push
ja
dec
xor
inc
ret
mov
dec
ret
movsb
clc
jge
rcrb
fwait
jmp
and
mov
stos
mov
cld
adc
sub
push
push
or
jbe
dec
leave
lea
inc
scas
sbb
dec
and
xchg
mov
push
mov
nop
add
imul
rcrl
pop
out
andl
punpckhwd
inc
in
xor
adc
sub
sub
popf
push
movsb
sub
mov
cld
mov
call
sbb
pusha
lock
mov
out
inc
ret
test
jmp
jmp
add
in
mov
push
dec
jae
ret
xchg
dec
cmp
les
mov
sbb
and
pop
loop
sub
fucomi
fsubs
ret
sbb
jnp
daa
ljmp
sub
mov
insb
stos
out
nop
cmp
cmpsl
in
bound
inc
sbb
lds
push
loop
js
sahf
in
pop
leave
shlb
dec
enter
dec
xor
mov
test
cmp
fisttpl
bswap
xchg
cmpsb
daa
xor
inc
and
or
movsl
push
fdivs
xchg
loopne
out
les
rcrl
inc
lock
jno
int3
inc
and
sbb
push
fwait
aas
cmp
or
dec
mov
mov
loopne
jns
inc
inc
in
std
pop
push
scas
add
ftst
add
xchg
jl
lret
fmul
loope
cmp
mov
mov
sbb
push
ror
inc
pop
fucomi
sub
cmp
sub
ljmp
stos
sub
test
jnp
rcrl
inc
xchg
add
xchg
mov
sbb
pause
subb
mov
cmp
pop
or
inc
pop
and
and
and
loopne
pop
imul
or
xlat
pop
fidivl
iret
ss
sbb
call
mov
daa
xor
rolb
insl
dec
pop
pop
int3
jge
into
inc
cmc
add
gs
sub
cmpsl
jecxz
cld
in
bound
outsb
ret
dec
mov
imul
jl
mov
cmp
push
out
loopne
aam
cmpl
sbb
jge
test
mov
push
loop
mov
cmp
fsubs
mov
popf
mov
mov
stos
jnp
lcall
movsl
xor
test
push
pop
cmp
repz
jae
stc
loope
test
and
es
out
mov
out
stos
jl
fsts
cltd
dec
cmp
add
aas
mov
sbb
cmp
ret
aam
pushf
je
js
mov
cmp
stos
dec
test
arpl
push
fwait
sbb
lods
fidivl
add
or
cmpsl
xchg
adc
call
pop
and
xchg
mov
jmp
mov
push
sbb
lea
lock
jmp
xchg
out
and
loope
sbb
mov
lret
add
mov
mov
and
sbb
cmpsl
hlt
cwtl
sbb
and
dec
cmp
xor
inc
push
jle
jmp
jnp
orl
rolb
jns
out
rcr
sub
hlt
and
jo
inc
iret
je
mov
xchg
dec
icebp
dec
cmp
pop
out
cmp
adc
subl
leave
mov
ret
xchg
mov
pop
mov
cmp
jne
sub
fsubrs
pop
pop
dec
movsl
inc
sub
or
fidivs
mov
dec
add
push
hlt
iret
mov
inc
js
adc
lds
aas
js
mov
sub
outsl
or
outsb
and
fistps
pop
in
sub
dec
push
ja
leave
or
pop
adc
fcoml
sbb
aam
inc
scas
pop
xor
add
shll
dec
test
jg
mov
ljmp
add
insl
jmp
xor
inc
es
or
xchg
enter
inc
ljmp
adc
push
nop
das
outsl
test
into
cmc
leave
xchg
inc
xchg
sub
fidivs
jnp
scas
pusha
cmp
fiaddl
repnz
jmp
leave
mov
adc
add
sarl
sbb
lock
out
hlt
mov
in
hlt
repz
dec
push
xchg
xor
movsb
lods
popa
adc
aaa
mov
push
jl
fmull
sti
hlt
loop
mov
pop
adc
lods
inc
jae
flds
mov
leave
pushf
je
in
lods
xor
repz
adc
xor
cmp
mov
cli
and
std
add
call
jge
push
adc
in
pop
lods
mov
mov
xlat
dec
stos
lods
ss
inc
pop
testb
jns
add
mov
imul
nop
fstpt
cmp
xor
dec
cltd
mov
pop
mov
ds
mov
adc
sti
mov
sbb
call
movsl
mov
add
cltd
or
sub
frstor
fsubs
stc
or
mov
adc
add
stc
sti
cli
mov
mov
mov
jbe
push
inc
sti
xor
std
sbb
ror
mov
loopne
add
add
loopne
in
loope
ljmp
push
inc
add
negb
jge
daa
in
fldcw
in
hlt
insl
mov
popa
imul
sub
fwait
lahf
mov
ror
std
popa
pop
call
cmp
dec
into
sub
int
sbb
clc
pop
jb
sub
call
dec
ret
xchg
pop
jb
cli
inc
mov
je
fs
pop
cmp
mov
mov
cmc
fmulp
lods
stos
std
dec
sbb
cmp
and
jae
icebp
test
rorl
into
rcr
mov
xchg
xchg
outsb
das
and
xor
mov
xchg
jecxz
dec
adc
shl
lods
jp
jl
push
sub
aaa
mov
adcb
pop
lods
xchg
or
xor
push
xor
mov
test
pop
fsqrt
mov
pop
ret
or
sarb
int
mov
pop
bound
and
cmovbe
int
clc
or
cmpsb
notl
outsb
andb
cmp
dec
mov
inc
insl
aad
stc
sub
cmp
xor
addl
or
stos
ret
dec
cltd
iret
insl
iret
dec
ljmp
shll
sub
inc
cmp
pop
pop
dec
jge
pop
out
mov
pusha
lea
enter
shl
push
add
dec
dec
inc
inc
jnp
bound
mov
add
mov
cmp
xor
sbb
pop
jmp
add
popl
sarl
stos
pop
sbb
js
call
jno
and
sub
push
jbe
push
xchg
push
loope
xchg
jnp
dec
fsubs
inc
mov
jae
daa
mov
popf
icebp
lcall
cmp
aad
cli
xorl
mov
inc
outsl
xor
jge
push
or
jne
sbb
test
inc
inc
stc
sub
xchg
cmp
sarb
xchg
jg
pop
scas
cmp
pop
cmpsb
fmull
rcrl
mov
scas
xchg
sub
pushf
push
dec
or
je
add
or
gs
sub
orb
cmp
pop
mov
mov
movsl
enter
enter
enter
scas
test
jmp
add
addb
dec
mov
cmp
mov
cs
decl
lods
les
sahf
in
inc
pop
mov
inc
sti
inc
rcl
cmp
ds
dec
cmpsl
je
adc
sbb
ja
jae
push
cwtl
sar
mov
and
push
sti
xor
dec
sbb
ret
mov
fcompl
arpl
adc
jl
jmp
ja
js
cmp
adc
and
std
aaa
sbb
rorl
dec
jge
lock
pop
xor
pop
dec
pop
movsl
adc
push
nop
inc
mov
rclb
and
lods
xor
inc
mov
repnz
fnstcw
push
push
sub
adc
cmp
inc
cwtl
scas
scas
and
scas
in
lods
bound
xor
xchg
mov
pop
arpl
js
cmp
or
mov
sub
add
hlt
cs
ds
xchg
lcall
cmp
je
adc
add
ja
xchg
daa
jnp
jne
xchg
int3
lock
movsb
icebp
pop
fistpl
and
add
or
xor
mov
lock
pushf
je
mov
sub
inc
cmp
dec
cmp
and
insb
jg
sbbl
pop
popf
add
dec
inc
xor
aad
sub
sbb
pop
mov
sbb
push
mov
std
cmp
lret
lds
add
mov
repz
sub
and
ror
in
unpcklps
stos
adc
mov
loopne
mov
int
mov
inc
fdivrs
lret
mov
cld
ds
mov
inc
push
dec
outsl
jmp
test
jmp
shll
xor
mov
ds
in
and
lock
inc
push
aas
leave
pop
sarl
inc
inc
aas
or
inc
sbb
pop
mov
push
mov
outsl
mov
inc
jno
out
mov
out
push
mov
mov
mov
arpl
in
pop
push
push
loop
addr16
repz
mov
add
jne
aas
ret
loopne
call
shr
sub
sub
popf
ret
cs
gs
inc
test
add
add
pop
dec
or
jecxz
mov
and
in
inc
and
pusha
jno
in
sbb
test
dec
pop
je
fdivp
or
cmp
mov
mov
pop
cmp
out
pop
jns
mov
mov
imul
fmulp
mov
or
mov
or
sub
fsubrl
jb
push
sbb
xchg
rcr
mov
mov
dec
xor
jnp
insl
movsb
mov
xor
ja
movsl
sbb
pop
push
inc
lods
inc
mov
lods
scas
pop
addb
pop
popa
or
cwtl
inc
out
xchg
rcrb
in
filds
pop
push
push
xor
shl
or
lcall
cltd
js
mov
dec
fnstsw
std
loopne
pop
loop
xchg
sahf
and
pop
cltd
aam
mov
jecxz
xor
add
dec
int
xchg
xchg
mov
and
push
dec
mov
dec
mov
mov
dec
add
aad
adc
push
addr16
jg
stos
add
sub
std
jbe
js
scas
xchg
xorl
xchg
sub
inc
fwait
push
xor
ljmp
jns
mov
sub
mov
pop
inc
mov
and
xor
sub
inc
jns
xor
sbbb
pop
pop
leave
jne
mov
stos
stos
loop
int3
loopne
incb
push
jp
xor
dec
nop
push
sub
imulb
xor
mov
jmp
testl
dec
add
aad
dec
test
jg
fs
test
push
js
popf
dec
ljmp
cwtl
or
mov
dec
ss
sar
sub
xorl
xchg
out
xchg
cwtl
lods
sarb
int3
scas
inc
daa
cmpb
loope
leave
xor
daa
push
outsb
mov
dec
stos
xchg
js
mov
pusha
loop
in
ret
mov
mov
push
subb
inc
xchg
insl
pop
cmpsb
mov
pop
pop
pushf
cmp
jge
aaa
popa
rorb
adc
xlat
stos
inc
movsb
shrl
adc
mov
sub
mov
sub
addr16
adc
stos
add
xchg
dec
in
and
ficoml
das
cmpsl
in
ret
and
int
aaa
inc
add
ja
lock
jmp
dec
cltd
inc
fnstcw
jbe
jge
push
mov
fldcw
dec
or
jne
sahf
jno
das
loop,pt
sbb
cmc
mov
loop
pop
push
sti
das
push
idiv
int
push
jno
loopne
clc
xchg
cmp
aas
test
pop
in
stc
mov
adc
or
push
or
int3
mov
bound
or
or
pop
hlt
pushf
mov
enter
cmp
scas
ss
das
cmp
outsb
roll
add
loopne
mov
mov
xchg
inc
and
pop
add
xchg
pop
fwait
sub
sub
int
sbb
test
sub
je
stos
test
mov
je
add
fdivrl
pop
pop
push
lods
andb
xchg
stos
data16
scas
mov
xlat
xchg
inc
mov
in
sbb
inc
pop
lret
adc
in
outsb
dec
ds
and
and
aas
mov
cld
add
cmp
inc
and
jo
cmpsb
push
add
insl
or
mov
or
jmp
repnz
inc
xchg
gs
add
sub
into
aaa
add
ror
sub
cltd
mov
pop
in
cmp
mov
and
mov
jb
lahf
xor
idivb
add
popa
cltd
xor
cltd
stos
mov
cwtl
fdivl
out
sbb
or
pushf
mov
leave
cmpl
cmp
testl
arpl
add
insl
cmp
fbstp
add
mov
or
and
jmp
in
lret
push
imul
xchg
and
adc
pusha
xchg
cld
add
ret
sahf
inc
bound
adc
popa
lea
inc
sub
jb
dec
int
mov
cmc
lods
les
cmp
mov
and
mull
out
push
cmp
pop
test
outsb
inc
aaa
das
xchg
movsb
into
xor
shll
jb
dec
push
in
mov
mov
jo
sub
cmp
mov
mov
xchg
jle
dec
cmpsl
xor
ljmp
repz
sarl
push
stos
mov
enter
pushf
shlb
inc
cli
jg
fs
or
out
ret
loop
dec
cmp
clc
sbb
jp
outsl
nop
dec
push
arpl
jp
xchg
ljmp
jns
std
mov
test
mov
mov
fisttps
sub
negb
lret
and
xchg
clc
push
insl
ja
mov
addr16
pusha
mov
sti
enter
loop
mov
movsl
stos
scas
int
push
cltd
or
lods
lods
sbbb
inc
jns
xor
in
and
xchg
dec
call
call
jp
mulb
fmuls
int
dec
loopne
stc
out
or
mov
jmp
stos
push
push
ret
push
ret
dec
sbb
add
inc
stc
or
sub
insl
test
fwait
call
and
pop
cmpsl
xlat
nop
and
outsb
dec
int
aad
lret
mov
and
sbb
in
cmpsl
mov
call
push
aad
mov
test
popf
jmp
sub
decl
mov
xchg
stos
cmpsl
adc
adc
cmp
cmp
pushf
je
insl
lods
jne
jl
dec
imul
adc
dec
ficoml
cmpsl
pop
divb
jo
sbb
adc
hlt
jo
dec
mov
cmp
test
out
sub
stos
adc
das
and
cli
lcall
inc
sbb
inc
inc
mov
sub
mov
cmc
ret
mov
lock
fiadds
imul
test
cmpb
es
dec
imulb
sti
xor
push
shlb
add
dec
ljmp
push
loope
pop
adc
aam
ficoml
cmp
push
sub
jmp
push
push
sbb
aaa
inc
cmpsl
aam
bound
mov
ret
frstor
mov
push
fs
jns
cmp
jg
xor
push
cli
sub
cmp
sbb
shlb
push
jp
xor
xchg
pop
push
pop
nop
mov
pop
mov
push
loopne
add
cmp
mov
xchg
imul
jp
lock
mov
mov
sti
push
movsb
repnz
stos
cwtl
loope
xchg
data16
mov
jne
sbb
push
or
and
sub
fwait
sub
add
stc
xor
lock
sar
icebp
add
add
cmp
or
sub
lcall
push
jmp
adc
push
xor
movsb
and
mov
inc
mov
pop
dec
imul
ret
jg
cmpsl
xchg
out
mov
jmp
xor
mov
jg
dec
sub
xchg
sub
sub
xchg
lret
adc
mov
sarb
xor
mov
ret
xchg
mov
aas
in
cltd
xchg
js
pushf
xchg
mov
adc
rorb
inc
push
clc
nop
lahf
push
dec
or
jb
cmp
adc
roll
mov
mov
and
test
out
pop
and
popa
inc
jg
insl
repz
push
into
adc
cli
jmp
repz
iret
jl
stos
icebp
or
or
testl
mov
jmp
dec
push
inc
xor
add
fsubrp
xchg
fiaddl
xorl
add
sarl
adc
inc
outsl
mov
jns
ret
push
xor
and
sub
fiaddl
outsb
pop
mov
or
lods
in
xchg
repz
fwait
mov
rcll
xor
dec
aam
or
popa
aas
movsl
xchg
mov
subb
ds
aas
jmp
push
and
aad
xchg
sarl
jg
xchg
out
cmp
fs
pop
ret
test
int
stos
mov
fstpl
jl
mov
les
or
pop
les
pop
test
scas
xchg
into
or
jo
pushf
or
test
push
adc
mov
int
pop
jge
and
nop
fisubrl
aaa
ficoml
popa
adc
cmp
dec
out
stos
push
add
repz
or
rorb
mov
ret
mov
dec
add
xchg
enter
or
lret
imul
mov
pop
stos
jle
popf
jno
in
mov
dec
inc
sbb
cmp
and
push
xor
mov
push
cmpl
mov
and
pop
insl
fs
fimuls
or
mov
jbe
insb
in
inc
mov
mov
movsb
dec
mov
jnp
pusha
ret
mov
cmp
shlb
hlt
adc
int3
adc
inc
lds
xor
scas
fdivl
call
ret
push
decb
inc
xchg
xor
dec
cmc
repnz
xchg
jle
mov
push
mov
ret
les
lea
sub
or
pop
test
fs
xor
sbb
jmp
fs
mov
aas
lods
dec
push
adc
cmc
fstpl
sub
decb
pushf
mov
leave
test
repz
pmaddwd
mov
xor
sarb
les
mov
test
hlt
push
and
stos
pop
push
popl
adc
arpl
into
or
js
xor
mov
adc
or
data16
sub
icebp
outsb
mov
jecxz
inc
and
lret
or
cmpsl
cld
mov
inc
fstp
pop
out
add
mov
mov
outsb
jle
sub
sbb
rcr
in
ret
cmpl
jmp
mov
cs
mov
popa
sbb
test
sbb
fiadds
insb
and
cs
fsqrt
sub
cmpsl
mov
mov
sarl
ja
mov
divl
adc
mov
add
add
insl
fnsave
leave
xor
mov
inc
push
mov
pop
push
jge
out
mov
mov
or
out
add
pop
adc
add
xlat
stc
test
cli
xor
sub
mov
adcl
test
flds
aad
mov
das
xchg
and
pop
cmp
pop
arpl
xchg
leave
sbb
into
lock
mov
cmp
outsl
mov
pop
cmp
stc
ds
in
inc
andl
dec
cmp
inc
lret
int
cmp
mov
sbb
int3
das
mov
mov
add
mov
pop
xor
cmpsb
outsl
sub
push
mov
xchg
dec
xor
lods
popa
xor
int
dec
add
mov
mov
mov
lds
sti
aam
mov
cmp
mov
cmp
imul
mov
mov
sbb
add
repnz
lcall
and
imul
lea
push
and
pusha
add
iret
mov
jg
loope
cmc
add
fisttpl
xchg
fstpt
jl
data16
mov
fistps
jle
imulb
pop
jp
out
push
les
std
stc
clc
test
dec
adc
dec
cmp
cmpsl
inc
xchg
pop
mov
int
sbb
aad
sub
xchg
rclb
xchg
jp
cld
pushf
pop
bound
mov
jge
sbb
inc
add
mov
jns
in
fsubrs
push
cmp
ror
fwait
pop
lds
cmp
push
jb
push
add
scas
lock
mov
mov
jno
jmp
and
push
mov
das
push
enter
cld
das
push
lods
inc
int
dec
shll
jb
icebp
dec
adc
push
lret
lods
outsl
rorb
dec
cmp
int3
clc
rcr
fmull
cmp
in
dec
scas
dec
push
aad
push
and
cld
lds
pop
xchg
inc
cmpsb
lahf
adc
lret
xchg
outsl
pop
pop
pop
enter
cs
add
pop
pop
test
jno
push
pop
cmp
sub
sub
repz
pop
mov
cmp
daa
es
jb
movsb
mov
mov
enter
pop
mov
pop
aam
jns
ret
dec
insb
aad
mov
test
push
in
mov
test
dec
shrb
gs
mov
mov
jb
mov
fistps
jb
pushf
xor
xchg
dec
sub
addb
dec
dec
or
fbld
repnz
cs
sub
mov
bound
cld
fcmovb
fistps
push
inc
push
add
out
cld
xor
cmp
lock
mov
scas
lock
out
shll
push
and
and
out
pop
hlt
pop
cmp
push
cmp
sarl
sbb
arpl
inc
xor
nop
movsb
add
adc
andl
das
dec
shll
add
into
out
and
push
fwait
cmpb
cwtl
sahf
cmp
shrb
push
scas
lods
sub
lods
inc
mov
xchg
xchg
nop
js
jl
sbb
adcb
out
mov
cmp
cmc
xlat
add
inc
and
fsubl
lahf
dec
aas
jnp
mov
outsl
dec
push
inc
cmp
dec
adc
mov
cmp
test
testb
pop
popf
cwtl
add
movswl
cmp
xor
cltd
add
imul
test
sub
xchg
mov
fstpt
rcll
outsl
pop
mov
xor
fwait
sub
jbe
fsubrl
cmp
push
mov
sahf
in
loopne
jo
lahf
imul
dec
lret
mov
pop
add
shlb
jg
pop
and
lock
addr16
push
pushf
mov
push
push
cmc
cmp
lods
test
jb
mov
into
or
fcmovb
stos
and
xor
pop
push
call
lret
and
sbb
add
fiaddl
lahf
imul
dec
jle
jnp
mov
scas
imul
pushl
rcl
cmc
stos
jmp
dec
in
or
jge
aaa
push
imul
sti
jo
sub
sbb
dec
adc
ret
xor
aam
adc
ljmp
mov
xchg
je
test
shll
pop
lods
mov
movsl
push
dec
ffree
inc
adc
pushf
mov
outsb
lea
or
dec
shll
pop
movsl
fsubl
sbbl
mov
pop
in
xchg
sub
sbb
sti
fiadds
pop
int
jnp
popf
sub
xor
dec
and
cmpsb
int3
pushf
cwtl
cld
mov
aad
dec
lea
jb
pop
mov
repnz
jno
pop
fsubl
mov
orl
mov
pop
pop
fs
imul
divl
jno
or
mov
lret
ja
sub
ja
add
aas
mov
flds
sbb
insb
xlat
push
je
add
sbb
sti
sti
and
jmp
cli
or
mov
movsb
sbb
lods
es
bound
lahf
jne
loope
jns
mov
mov
imul
inc
std
test
pop
stc
jnp
lret
addr16
sub
jns
mov
fdivl
mov
pushf
shrb
fsubp
mov
lock
ja
sub
aas
fimuls
fwait
cmpsl
cld
mov
add
cli
cld
xor
in
test
aas
lret
ljmp
clc
xchg
rorl
jmp
int3
push
ret
leave
cmp
int3
xlat
sbb
dec
add
cmp
in
out
cmp
ja
lret
inc
roll
in
xchg
stos
fldcw
jae
jnp
sub
jns
inc
ds
xor
int
push
inc
adc
orl
aaa
inc
cmp
push
arpl
nop
outsl
pop
jne
cmp
aam
cs
andl
jp
jl
in
xchg
and
bound
decb
cmp
popa
add
mov
ret
mov
les
loope
pop
into
add
mov
inc
sub
xor
push
data16
out
call
nop
xchg
push
shrb
jbe
mov
dec
fiaddl
ret
dec
mov
mov
popa
cmpl
pop
pop
adc
xchg
cmp
pop
cmc
loop
jp
ljmp
add
fsqrt
xchg
cmp
int3
ret
into
mov
mov
inc
cmpsl
mov
ret
ret
or
movsl
notl
out
jb
sub
cmpb
mov
jne
mov
cmp
or
pop
inc
rclb
xchg
cmc
mov
mov
and
repnz
adc
call
push
mov
iret
mov
jmp
xlat
mov
pop
push
sbbb
pop
lods
aad
mov
jmp
imul
xor
cmp
nop
inc
imul
stos
jae
mov
jbe
pusha
ficoms
aaa
and
sbb
jp
pushf
pop
xor
dec
aam
inc
addr16
mov
or
mov
mov
pop
cltd
rorl
jne
and
xchg
test
leave
xor
inc
addr16
ss
shll
cmpsb
mov
test
pop
xchg
pop
push
push
or
push
add
jae
cli
mov
cmp
movsb
pop
scas
jge
int
out
add
mov
out
lret
dec
sarl
stos
out
pop
movsl
xor
mov
sub
mov
and
movsl
lods
pop
test
rcrl
cmp
rclb
icebp
je
lcall
dec
rcll
jmp
ret
pop
jmp
dec
add
lcall
add
lcall
or
sub
pop
sub
enter
xor
rorb
mov
cmp
mov
in
inc
jnp
mov
iret
out
fmull
jno
add
mov
adc
cmc
adcl
mov
sub
out
jmp
and
leave
repnz
mov
lahf
in
jno
das
inc
mov
inc
and
ret
scas
jge
cmpsb
nop
cmpsb
sarl
push
mov
inc
cmp
cmp
sub
jb
aas
mov
jle
add
xor
hlt
jb
roll
popa
fistpl
cli
imul
xchg
inc
adc
dec
fwait
xor
fisttpll
jae
mov
adc
scas
sbb
negl
test
outsb
and
dec
push
xor
out
push
je
cmc
xchg
cli
test
jmp
sub
mov
nop
pop
pop
dec
xchg
dec
stos
mov
push
sbb
xchg
repz
dec
movsb
sbb
jnp
dec
mov
cli
les
mov
enter
insl
stc
enter
push
ss
add
sbb
mov
divb
push
pop
aad
pop
sti
test
shrb
xchg
fidivs
pop
add
add
popl
push
sbbl
sub
sbb
pop
adc
sbb
rcrl
mov
bound
push
daa
mov
lcall
dec
fbld
ror
aam
mov
cltd
jo
inc
and
cmp
cmp
xchg
adc
dec
push
lret
xchg
cmp
mov
adc
scas
cwtl
popf
sbb
inc
xchg
mov
mov
and
cmpsb
sub
xor
xchg
scas
ja
outsl
jmp
add
jne
cmp
idivl
dec
jns
and
int
adc
pop
pop
cmp
cmpb
xor
mov
inc
mov
xor
arpl
add
dec
jmp
add
push
les
cs
lods
mov
std
pushf
inc
ja
dec
jmp
dec
add
ret
add
fucomp
inc
loop
xlat
inc
pop
ss
dec
scas
js
mov
mov
add
mov
add
add
mov
mov
incl
inc
stos
pop
orb
test
in
rclb
add
popa
or
and
or
out
cs
or
aaa
in
insb
mov
popl
xchg
rcrb
int
mov
xchg
bound
inc
pop
mov
lods
adc
movsl
dec
pop
stos
sbb
lds
pop
dec
hlt
and
mov
inc
jg
push
je
js
mov
sbb
int3
rclb
xchg
loop
ds
cmp
out
jo
inc
lret
rorl
jae
fnstenv
lods
les
dec
inc
push
mov
sub
pop
or
jl
jmp
and
and
mov
inc
dec
iret
jnp
test
shlb
jnp
add
xor
pusha
pop
popa
and
inc
enter
out
fs
dec
test
inc
gs
push
mov
mov
outsl
jg
cmp
xchg
sahf
xlat
push
jbe
sub
xchg
mov
cmp
mov
icebp
mov
lar
cli
xor
mov
pushf
pop
dec
sub
test
adc
sbb
cmp
and
cmp
movsl
lcall
sbb
iret
pop
and
dec
movsb
lret
mov
jg
je
jg
push
popf
or
bound
mov
jle
enter
aaa
push
push
lods
xlat
enter
pop
lret
jae
les
sub
bswap
jg
mov
xchg
movsl
jl
inc
xchg
xchg
lret
cld
add
sbb
ret
or
or
adc
arpl
adc
shlb
sub
repz
inc
in
adc
push
fsub
fwait
popf
add
sub
or
pusha
test
imul
add
lret
push
xchg
lcall
mov
ds
xchg
xor
jns
adc
push
mov
fsubl
sti
pop
enter
loope
push
notl
push
xor
add
shrl
or
lar
scas
cmp
push
ret
shlb
pop
testl
mov
dec
scas
xchg
je
cmc
sbb
fcom
pop
aas
cmc
fsubs
or
aas
or
decl
jmp
xchg
mov
cmp
push
leave
nop
aam
xchg
lea
flds
outsb
add
mov
add
push
jmp
cmpsb
sub
mov
cmp
or
js
aad
jno
movsl
inc
adc
pop
hlt
scas
daa
andl
cwtl
stc
xchg
lret
daa
rol
lret
enter
jne
xchg
cwtl
mov
call
dec
xchg
lret
jo
mov
pop
cmpsb
inc
lahf
mov
mov
dec
rol
es
adc
jne
leave
xor
es
loop
dec
mov
imul
add
cld
je
sub
xor
mov
mov
jge
dec
mov
aam
dec
test
adc
dec
test
sbb
adc
int3
mov
imul
test
in
cltd
pop
inc
stos
cmp
sbb
cmp
push
mov
add
icebp
dec
adc
adc
pop
inc
jecxz
pusha
dec
xor
sub
pop
add
popa
jno
ds
shlb
dec
stos
inc
outsb
mov
sub
mov
mov
cld
xor
sar
cwtl
test
jns
mov
mov
mov
jae
aam
pop
add
mov
movsb
mov
js
mov
std
xor
jnp
ficompl
das
inc
pop
xchg
sbb
fistps
gs
xchg
inc
stos
xchg
xor
cmp
mov
das
push
jg
jbe
aaa
cmp
adc
cmp
push
pop
pop
hlt
sbb
shl
stos
mov
mov
sti
and
test
ja
adc
or
and
add
cmp
jecxz
ret
and
or
adc
lret
mov
sbb
in
cmp
in
xchg
pop
jle
les
sub
leave
shrl
int
mov
loope
jg
movsb
mulb
nop
pop
xor
fsubl
popf
and
je
dec
fstpt
jmp
add
add
shrb
fdivrs
sbb
push
push
rol
decl
lret
dec
imul
or
or
cmp
cwtl
mov
cmp
or
in
sti
mov
sbb
mov
cli
stc
jno
js
mov
pop
pusha
loope
sti
cmp
je
mov
inc
lret
rorb
xorb
cmp
mov
out
sub
lret
pop
stos
add
enter
rcl
inc
or
mov
sub
jbe
rorl
aad
leave
cmp
lret
jbe
test
xor
inc
mov
inc
test
int
insl
sub
mov
adc
mov
movsl
mov
inc
jne
daa
adc
and
faddl
fsubrl
sahf
addr16
fcmovne
dec
jo
cmc
addr16
insb
lahf
jo
dec
sbb
inc
push
dec
adcb
add
cmp
adc
dec
push
insl
ficoml
xchg
pop
ret
sub
xchg
rcrb
into
enter
in
fisttps
sub
lret
in
addb
inc
and
mov
cmp
arpl
jno
in
inc
cltd
adc
repz
or
xor
or
lahf
cmpsl
or
jl
movsb
mov
inc
sub
subl
sbbl
fnstsw
into
xlat
cmp
gs
std
insb
xor
leave
cmpsb
cltd
test
int3
jo
xlat
test
stos
in
test
adc
and
in
jns
mov
out
inc
mov
mov
out
jne
movsb
arpl
negl
push
mov
push
mov
jbe
fidivrs
es
icebp
das
lahf
sti
inc
je
mov
inc
fs
je
leave
lods
adc
lock
ja
cmp
jne
les
sbb
add
mov
sub
and
movsl
in
sbb
in
sub
cmpl
sbb
sub
in
rcrb
pop
adc
enter
fnstsw
test
mov
mov
pop
and
xchg
jne
sub
mov
std
mov
dec
cltd
xchg
push
out
loope
dec
mov
lret
push
dec
test
leave
test
or
imul
pop
test
cmpsb
bound
mov
sbb
adc
cmp
mov
mov
inc
push
and
sbb
ja
aam
xchg
mov
fisttpl
sub
gs
mov
pavgb
cld
push
add
fcompl
dec
lea
sub
imul
sub
xor
mov
dec
xchg
jle
lods
cltd
addb
mov
shl
cli
push
mov
fstps
dec
xchg
mov
cmp
loopne
lock
jae
add
ficoms
cmpsl
arpl
add
pop
mov
cmp
mov
xor
bound
or
lret
imul
push
shlb
push
sbb
add
push
push
mov
or
ja
repz
mov
les
xor
sti
jg
inc
mov
cwtl
nop
jecxz
cmp
clc
sub
fldcw
lcall
out
imul
push
push
jae
mov
push
dec
jecxz
xchg
jmp
in
pop
stos
inc
sbb
jnp
mov
pop
arpl
xchg
les
or
xchg
cmp
dec
sub
cltd
into
jge
inc
clc
mov
out
cltd
lods
inc
sbb
xor
std
or
or
jb
mov
and
adc
mov
sbb
out
pop
xorb
neg
aas
dec
mov
add
mov
pop
inc
xor
inc
imul
cltd
test
cmp
mov
dec
rcrb
das
insl
aam
xchg
into
enter
dec
inc
push
sbb
add
mov
cmp
pop
lods
xchg
ret
call
sbb
or
outsl
incb
push
pop
sbb
insl
popa
dec
cmp
adcb
mov
pop
sti
push
mov
enter
imul
shlb
je
aas
in
pop
mov
push
add
leave
mov
inc
and
adc
mov
pop
lret
sub
pop
pop
loop
cmp
popa
cmpl
adc
mov
imul
add
rorl
jmp
adc
adc
push
fiaddl
leave
lods
sub
and
mov
popa
mov
arpl
pop
xor
dec
push
add
les
push
leave
lea
mov
sti
mov
imul
int3
test
cmp
idivb
xchg
adc
dec
dec
test
bound
test
jp
std
and
or
lods
xchg
enter
xor
cltd
add
shlb
ret
mov
inc
jnp
outsb
sub
shrl
sub
sbb
cmpl
inc
fiaddl
mov
jmp
adc
lock
stos
mov
enter
inc
sbb
sbb
cli
xlat
pop
add
iret
in
loope
movsl
dec
andl
xchg
or
and
xlat
xchg
adc
adc
mov
mov
and
mov
fdivr
add
pop
push
mov
movsb
dec
or
fistps
pop
push
xor
xchg
shl
cmp
mov
insl
aas
test
mov
insl
pop
insb
mov
test
mov
lahf
dec
fistpll
mov
mov
xor
mov
or
dec
sti
xor
jg
sub
in
mov
rcrl
out
ja
int
in
rclb
adc
movsl
adc
int
lcall
sarl
jle
out
lret
mov
or
push
fisubs
and
push
pop
ffree
mov
outsl
adc
lods
iret
int3
sahf
das
jp
nop
daa
push
ret
rcr
ljmp
inc
and
dec
mov
mov
aad
inc
stos
popa
push
inc
xor
or
ret
or
sarl
pop
adc
xchg
rol
inc
testb
movsb
sub
add
stc
sahf
or
test
imul
push
lods
add
fcompl
arpl
cmp
andl
mov
pop
mov
sbb
mov
jl
out
sti
sub
es
popf
push
cwtl
or
cmpsl
rep
pushf
mov
fsubrs
pop
arpl
inc
aaa
jle
mov
loop
fsts
fcomps
sub
outsl
mov
pusha
and
rol
mov
push
jg
jg
fisttps
test
les
mov
cmp
int
xchg
inc
rcrl
mov
mov
adc
es
push
mov
lock
jne
pop
nop
xor
aas
adc
mov
rol
inc
cld
pop
je
sbb
shr
int
aas
jg
push
popf
icebp
add
dec
xor
arpl
popf
mov
in
and
mov
clc
fcmovu
inc
ljmp
cmp
xor
je
rcrl
xchg
sbb
ss
cmc
mov
mov
stos
cltd
enter
pop
xchg
outsl
bound
aas
and
xlat
outsl
sar
sbb
xor
sub
xor
lds
sbb
xor
sbb
fisubl
sahf
xor
pop
cmp
mov
jge
inc
sbb
add
popf
jecxz
lahf
add
mulb
adc
dec
sbbl
jge
mov
cmp
xor
push
cmc
dec
mov
pop
jl
mov
adc
rorl
jne
jb
sub
out
push
rcll
std
jns
xchg
inc
pop
adc
sbb
jmp
sbb
pop
mov
fnstsw
scas
dec
in
loope
arpl
ret
cmp
inc
int
push
cli
stc
xchg
mov
pop
push
jb
dec
rcll
arpl
or
or
xchg
bound
or
jecxz
push
into
sub
sub
fstpl
lret
jmp
dec
movsl
dec
es
loope
push
inc
lcall
jbe
adc
test
jg
movsb
inc
cmp
mov
cmp
in
movsb
or
jns
and
out
mov
cmp
mov
sub
loop
inc
mov
lret
fcom
out
das
xor
test
dec
push
clc
ds
cwtl
cmp
and
jmp
pop
dec
addr16
cwtl
mov
pop
push
mov
pop
icebp
inc
xchg
or
mov
mov
jle
jl
cmp
stos
push
jo
orl
jecxz
outsl
in
push
cmp
mov
jns
push
lcall
xorl
js
mov
xchg
inc
movsl
iret
std
cld
lret
xchg
test
test
jp
inc
and
hlt
xchg
les
lea
push
icebp
and
xchg
subb
data16
lret
jbe
sub
rcl
adc
aaa
dec
ror
aas
test
dec
sub
daa
pusha
fldt
std
test
jp
sbbb
dec
jmp
xchg
or
cmp
pushf
dec
inc
repz
test
mov
sub
pop
sbbb
fisubs
aaa
std
test
mov
loope
fisubs
pop
pop
mov
cmovle
and
mov
dec
jns
xor
cmp
cmp
addr16
sub
fs
push
jo
add
sbb
aas
and
jge
mov
cmp
icebp
je
inc
mov
leave
sahf
enter
test
aam
jnp
pop
xor
test
popa
cmp
pushf
or
in
mov
sbb
fdivrl
jp
stos
in
dec
cmp
jg
xor
xor
sub
pop
leave
cmpsb
sub
and
pop
mov
mov
clc
les
add
jns
aam
pop
sti
js
inc
and
cmp
addr16
jle
mov
inc
cmp
xchg
or
inc
fdivrs
sub
sbb
cmp
adc
lret
inc
jl
jmp
adc
lods
scas
ficoml
adc
stos
insb
push
cmp
bnd
xchg
inc
and
lret
add
movsb
dec
int3
jmp
ret
push
mov
mov
loope
dec
mov
in
mov
xchg
in
inc
test
jnp
and
cmp
push
jp
inc
lcall
cmp
xchg
fs
das
aad
push
ret
xchg
and
and
lcall
pop
leave
add
xor
push
mov
cmpsb
pop
stc
dec
mov
jmp
mov
addl
jge
mov
add
sarl
push
or
insb
aas
test
ret
iret
and
jmp
dec
xor
cld
sub
imul
cli
lock
or
cmc
dec
leave
inc
adc
out
dec
stos
enter
mov
fcmovb
adc
popa
push
jmp
inc
addb
adc
clc
jmp
pop
cmovb
inc
popa
pushl
out
pop
jne
dec
sti
test
mov
cmpsl
lret
mov
cmp
jae
dec
push
repnz
adc
gs
pop
pop
into
push
stos
xchg
xchg
ds
add
fmul
sbb
movsb
fwait
idiv
adc
mov
in
adc
mov
nop
jge
cmp
mov
cmpsb
shll
dec
ret
xchg
mov
repz
push
stc
cmp
sub
and
mov
rcrb
cmpsb
mov
or
pop
sub
push
cmpsl
sahf
mov
test
mov
popf
stc
xchg
fadds
push
add
in
xor
push
push
sub
adc
cmp
ret
and
dec
jg
inc
aas
addb
pop
cmc
mov
stc
sub
js
dec
mov
out
push
mov
push
sbb
mov
sub
shrl
xor
bound
adc
sub
push
or
mov
xor
pop
aas
hlt
and
cmp
or
shrl
dec
add
mov
mov
imul
aad
int
add
pop
mov
in
sbb
int
cmp
mov
cmpps
lods
add
mov
ljmp
cmp
enter
sbb
pop
fcmovb
mov
push
xchg
cli
cmp
mov
jo
and
imul
pushf
bound
add
stos
and
cmp
loopne
push
push
std
nop
jo
xor
lock
xchg
push
mov
sti
lods
mov
lods
das
jecxz
scas
mov
inc
test
ret
ds
insl
aad
inc
add
sub
test
cmp
loop
out
push
jns
lock
inc
mov
sbb
cmp
push
push
xchg
orl
cs
mov
xor
inc
pop
clc
pop
xorb
test
dec
aam
mov
mov
sbb
pop
mov
cli
and
and
sar
cmp
add
les
les
clc
mov
dec
mov
mov
xchg
shl
stc
dec
cmp
pushf
and
xchg
ret
adc
sbb
or
arpl
orb
push
shl
imul
mov
push
and
addr16
mov
sub
loop
movsb
sbb
pushf
mov
push
sbb
or
addl
xor
mov
push
inc
mov
outsl
out
mov
ret
pop
stos
orb
pushf
test
or
out
push
cltd
dec
rorb
test
les
aas
jb
js
gs
or
adc
xor
ret
popa
mov
mov
xor
cmpsb
xor
adc
shll
in
jbe
loopne
arpl
es
into
stos
fldenv
cmp
mov
aam
aam
filds
fld
pusha
cwtl
jg
push
outsl
xor
jecxz
icebp
pop
pop
adc
mov
mov
mov
xchg
sti
inc
add
jo
mov
ljmp
sbb
and
jmp
jge
sbb
or
push
loope
out
xchg
dec
xchg
stc
fs
adc
inc
adc
and
loopne
mov
xor
leave
rorb
mov
fstps
adc
ret
cmp
cmc
cmp
adc
ficomps
lods
movsb
mov
cmc
cmpsb
pop
xor
inc
dec
rorb
xchg
int3
in
adc
push
shll
leave
leave
ja
jns
hlt
sbb
cmp
stc
jmp
pop
addb
push
jb
xor
dec
cli
je
lods
sbb
out
loopne
enter
aas
out
or
mov
daa
sub
aaa
push
inc
stos
jg
adc
dec
outsb
add
shlb
xchg
and
xor
jb
fwait
pop
jmp
sbb
cmpsl
bound
fs
xor
call
enter
ret
pop
in
pushf
xchg
mov
std
add
jl
in
in
and
pop
mov
daa
andb
sbb
mov
xlat
fstpt
shr
sub
lods
sub
adc
lods
lock
cmpsb
fdiv
add
push
xchg
jle
xchg
and
mov
add
popf
data16
fs
sub
mov
fwait
sub
aad
pushf
outsl
pushf
orb
or
dec
adc
xchg
cwtl
cmp
cld
add
jae
lret
or
imul
xor
pop
lret
pusha
adc
mov
jmp
mov
cmp
mov
and
inc
and
inc
insl
pusha
adc
jle
mov
xor
pop
push
push
pop
nop
lret
pop
inc
pop
adc
pop
and
jl
in
jl
jle
sbb
push
into
inc
xchg
inc
mov
mov
dec
fdivl
push
sbb
punpckhbw
adc
mov
xchg
push
push
ja
shlb
mov
loop
push
cltd
loopne
sub
roll
pop
cmp
lahf
sahf
inc
cmp
fmuls
bound
insb
push
push
pop
push
cmp
cwtl
fisubrs
jne,pt
cltd
das
prefetch
or
test
push
or
mov
sbb
outsl
ja
out
jns
mov
dec
inc
hlt
push
pop
inc
fdivrl
outsl
data16
jne
mov
leave
push
pop
inc
std
pop
jnp
and
adc
push
stos
pusha
sbb
loopne
sub
xor
fcmovnbe
shll
inc
in
jle
fildl
addr16
dec
lret
ds
daa
sub
insb
cld
cmc
xor
cmpsl
aas
push
or
fadds
push
or
leave
mov
jbe
js
mov
jno
rcl
addr16
xchg
imul
dec
add
es
rcr
or
xchg
cmpsb
les
jl
or
imul
shll
sti
mov
ret
les
pop
jns
push
adc
inc
and
test
pop
mov
iret
sub
das
lret
pop
fiaddl
pop
loope
lods
pop
aad
test
aad
adc
rcr
push
jp
add
mov
push
jbe
mov
pop
adc
mov
aad
cmp
cs
sarb
or
into
push
and
outsl
cmpsl
jl
dec
lods
je
inc
pop
pop
into
mov
in
push
lods
inc
sub
imul
lcall
add
movsb
test
ljmp
dec
push
stc
shlb
pop
sahf
adc
call
push
std
rcll
into
imul
fst
mov
outsl
push
jmp
mov
call
xchg
inc
dec
mov
scas
clc
cmc
outsb
fidivl
mov
push
sub
repnz
push
inc
sub
inc
scas
and
repnz
jg
rcr
aam
out
sbb
lods
les
adc
popf
into
adc
jp
clc
ss
shrl
inc
sbb
jae
dec
repz
xor
iret
and
ret
mov
mov
movsb
sub
in
gs
aad
das
dec
xor
xchg
inc
hlt
sub
cwtl
fsubl
mov
loopne
jmp
mov
xor
mov
paddd
fdivrp
mov
xchg
xchg
push
cmp
add
adc
mov
pop
or
ja
mov
hlt
inc
out
add
mov
mov
test
es
or
mov
push
adcl
mov
add
ret
stos
dec
lock
aam
jg
mov
insb
mov
mov
test
shl
loopne
out
jecxz
mov
adc
adc
dec
sahf
mov
jb
mov
fs
jge
xor
sarb
lcall
and
or
mov
rorl
jg
sbb
call
iret
dec
and
mov
dec
sub
jb
inc
push
mov
jnp
pushf
mov
outsb
xchg
outsl
xchg
fs
inc
call
les
add
fcomip
nop
xor
mov
mov
and
mov
cmp
mov
cmp
outsl
sbb
cmp
push
mov
cli
fcomps
adc
and
inc
test
out
adc
popa
loopne
pop
test
pop
mov
mulb
adc
pop
pop
rolb
int
jns
or
jbe
inc
cmp
xorl
push
dec
int
and
adc
and
sub
inc
mov
std
imul
push
mov
cmp
lahf
mov
test
loop
setp
push
cli
ret
dec
and
jbe
xor
ds
cmp
jmp
jns
leave
adc
gs
jle
dec
lret
add
dec
int3
xor
gs
arpl
inc
lahf
add
cmp
movsb
xor
sub
movsl
mov
cltd
lods
cmp
push
imul
lcall
roll
jns
icebp
xchg
loop
adc
into
xchg
jmp
mov
cmpsl
push
pop
std
mov
jo
iret
inc
inc
std
pop
fldcw
std
scas
stc
mov
pop
movsb
mov
fwait
scas
xchg
or
iret
xor
xchg
xchg
dec
cmp
or
xchg
loopne
rcll
or
sub
outsl
mov
add
xchg
enter
sub
ret
pushf
mov
push
int3
call
xor
push
in
int
add
mov
jl
hlt
loopne
push
enter
pusha
out
jae
ficoms
pop
inc
pop
lods
mov
jge
dec
xchg
push
out
shl
adc
sar
mov
mov
mov
call
push
aas
dec
or
out
test
fcomps
bound
repnz
and
and
out
cmpsl
lods
jl
dec
or
and
stc
pusha
movsb
enter
or
out
sub
mov
sbb
push
adc
jns
fcoml
adc
mov
test
jno
inc
and
and
mov
fs
andl
jecxz
adc
adc
enter
sub
push
pop
pushf
pop
mov
mov
pop
mov
dec
rol
shl
clc
pusha
ljmp
push
movsb
stos
fsubr
mov
jnp
std
outsl
xchg
dec
out
mov
adc
push
in
push
repnz
or
and
adcb
dec
dec
mov
outsb
loopne
sbb
mov
fwait
popa
cmp
movsl
in
idivb
xor
fistpll
push
jo
pandn
push
leave
sub
jo
outsl
fists
push
fiadds
mov
shlb
outsb
adc
cmp
push
out
jne
shll
std
add
nop
stc
push
popa
fildl
in
pop
outsl
mov
pop
inc
mov
mov
repnz
lret
mov
dec
iret
jne
sbbl
rorb
dec
lret
orl
popf
mov
or
pop
pop
jns
popf
add
addl
add
mov
mov
clc
fs
sbb
in
cltd
jl
leave
sub
iret
pop
adc
pushf
fstpt
mov
push
inc
into
mov
mov
inc
sahf
mov
mov
dec
jo
std
iret
lret
dec
xchg
xor
nop
mov
movsb
jae
sti
cmp
push
jo
enter
cmpsl
and
repnz
lock
sti
add
sbbl
jle
adc
mov
add
cmp
inc
call
sub
idiv
icebp
daa
call
mov
cld
mov
cmp
dec
xchg
nop
mov
push
push
adc
cmp
aad
mov
push
cmpsl
mov
cwtl
popa
es
jb
mov
adc
pop
jae
shll
cmp
push
adcl
andl
add
inc
rcll
out
cmp
dec
xchg
jno
mov
or
mov
popf
pusha
clc
popa
sub
data16
repz
cmp
jno
and
mov
inc
shrl
cli
test
lret
call
clc
and
into
paddq
xchg
sarb
cmc
pop
push
xchg
shll
mov
jmp
cmc
jmp
imul
ljmp
ret
dec
inc
fsub
mov
inc
jb
mov
push
inc
hlt
lret
mov
mov
or
add
jbe
pop
lcall
aas
cmc
pop
and
sahf
lods
dec
popf
dec
dec
imul
jb
cmpsl
xchg
mov
fdivrs
dec
push
sbb
cmp
sahf
adc
into
addl
hlt
lods
xchg
out
gs
jl
imul
or
xchg
sbb
mov
lcall
aas
adc
pushf
sub
and
dec
sbb
subb
jg
test
xchg
out
sub
mov
clc
mov
add
jmp
je
pop
push
stos
fildll
inc
in
dec
je
xchg
or
stos
out
std
xchg
cmp
lea
std
and
pop
inc
xor
insl
inc
mov
xor
in
cli
enter
clc
out
lret
sbb
imul
pop
sub
cs
mov
inc
jb
cmc
inc
xchg
push
movsbl
out
scas
xor
repnz
sahf
aaa
lret
lahf
dec
daa
call
into
mov
aam
daa
adcl
roll
mov
push
xchg
or
inc
nop
mov
jnp
jecxz
sub
jbe
and
mov
mov
pop
jbe
mov
mov
pop
pushf
bound
dec
jmp
adc
xor
sbb
push
lock
cs
daa
stos
sbb
jmp
add
idiv
mov
push
leave
or
fs
jnp
in
add
dec
lods
ret
push
into
cld
outsl
iret
lcall
jnp
inc
jb
sbb
loope
or
insb
pop
leave
mov
rclb
hlt
adc
test
rcll
inc
xchg
mov
and
outsb
mov
xchg
cmp
pop
out
jo
add
movsb
inc
jle
cltd
or
das
addb
shrl
fisubs
jg
lods
fisubs
loopne
imul
inc
jl
gs
jb
mov
sub
test
or
sub
pop
sbb
xor
loopne
cmp
mov
or
pop
ror
mov
std
add
mov
dec
dec
or
mov
lahf
mov
jnp
mov
dec
popf
mov
ja,pt
sub
mov
int
push
mov
sub
fcmovnb
cmp
imulb
movsl
js
mov
pop
pop
mov
mov
icebp
lcall
cmp
push
andb
aaa
pop
jp
inc
loop
out
addr16
dec
or
jae
imul
add
jbe
imul
cmp
inc
pusha
cmp
stc
xchg
xor
lcall
xchg
mov
sahf
adc
test
xchg
xor
loopw
jle
dec
cmp
mov
or
ja
jp
jb
mov
ret
lds
sbb
and
sbbl
jecxz
in
imul
das
int
bound
mov
insl
js
adc
adc
adc
jmp
out
jo
mov
aam
inc
bound
gs
sub
stc
in
cmp
pop
ja
xchg
sbb
mov
mov
xor
pop
sarl
lea
insl
push
mov
daa
mov
imul
pusha
adc
mov
std
mov
or
mov
add
pop
or
and
jae
loopne
popf
adc
xchg
or
in
jl
test
sub
sarb
inc
pop
scas
outsb
fs
mov
push
cmp
cmp
sbb
inc
push
sub
xchg
and
aaa
lods
les
dec
fsubs
mov
mov
dec
adc
adc
fstpt
cmp
int3
hlt
aam
push
xor
ret
fiadds
fldcw
and
das
or
shl
jecxz
mov
inc
add
cmpsl
lcall
add
pop
xor
adc
push
sub
gs
adc
jle
adc
and
mov
test
cld
push
adc
add
popf
inc
and
insl
add
mov
rcr
jp
push
mov
jmp
push
push
and
and
mov
inc
and
cmp
ja
xor
pop
lahf
xchg
fwait
xlat
movd
sub
mov
pop
fld
mov
jl
popf
popf
cmc
adc
inc
pop
mov
add
and
mov
mov
test
imul
xor
fcomip
int3
fbstp
dec
or
insl
cmp
jle
inc
out
jbe
les
enter
cmp
push
stc
adcb
dec
sub
arpl
add
push
mov
mov
ret
cmpsb
add
mov
lea
nop
xor
inc
xchg
xchg
movsb
lret
repnz
sub
or
and
sbb
jp
pop
sbb
cmp
xchg
mov
mov
inc
bound
inc
jb
push
stos
hlt
out
ret
das
push
push
cmpsl
sbb
mov
pop
mov
test
in
push
push
dec
andl
xor
lret
push
idiv
add
aam
xchg
into
dec
fwait
mov
inc
std
add
scas
dec
sbb
push
lret
mov
adc
pop
push
cmpsl
add
sahf
call
push
xor
prefetcht1
add
jge
stos
cli
cld
movsl
adc
push
xor
movsl
and
push
lock
clc
dec
aaa
push
xchg
mov
add
cmp
into
push
int
add
pop
sbb
xchg
icebp
dec
adc
dec
fpatan
rorb
loope
pop
and
pop
mov
or
int3
adc
scas
aam
fstp
hlt
in
sbb
mov
add
add
loop
sub
ret
or
and
aaa
aaa
adc
fstps
aad
lock
ds
into
ss
jae
mov
pusha
stos
jle
push
nop
push
xchg
push
pop
xor
sbb
into
or
or
sbb
out
aad
stos
push
sbb
cmp
add
jl
mov
jae
add
or
test
sti
stos
or
xlat
test
out
xchg
inc
data16
push
cmp
std
pop
xchg
nop
stos
add
add
pop
cmp
or
or
xor
fnstsw
jae
shl
jle
add
pusha
aas
or
and
xchg
out
inc
js
jbe
stc
pop
xchg
lahf
xlat
dec
fsts
push
cmp
add
adc
add
cltd
xlat
mov
es
mov
or
mov
je
lods
sahf
nop
xchg
xchg
outsb
jbe
sbb
pop
sti
cmc
rcr
mov
bsf
lret
mov
sbb
test
orl
imul
sbb
mov
pushf
cmp
sub
mov
mov
fnstcw
pushf
out
cmp
bswap
mov
push
in
notl
push
fistpl
or
mov
aam
or
sub
dec
rcrb
cmp
fnsave
leave
ret
testb
aam
and
inc
pop
pop
pop
adc
push
or
mov
stc
mov
sbb
jge
jno
pop
outsb
xor
mov
inc
lcall
jo
leave
or
pusha
dec
inc
jp
push
adc
stos
leave
xor
in
ret
inc
push
xchg
mov
fs
icebp
sarb
test
lds
push
or
adc
dec
and
ss
orl
aam
jb
push
cmp
jno
mov
xorb
fsubl
fstl
imul
push
sbb
sbb
adc
cmp
sub
out
ja
outsl
pop
out
cmpxchg
mov
sbb
cmp
outsl
mov
add
xchg
cmp
imul
lods
pop
in
cs
pushf
add
out
popl
jae
mov
push
sahf
pop
int3
jns
call
lea
lods
mov
xor
into
mov
and
adc
inc
adc
test
xchg
bound
dec
and
test
hlt
mov
repnz
mov
cmp
xchg
jns
stos
xor
orl
insb
and
and
mov
and
add
sbb
bound
test
imul
dec
inc
push
jge
jo
dec
sarl
dec
mov
inc
or
stos
sarl
pop
imul
inc
fldenv
xchg
xor
jns
ja
mov
xor
aam
jecxz
push
dec
cmp
shrl
rcrl
sub
mov
push
mov
and
ljmp
nop
sub
shl
cmpl
pop
mov
mov
push
lods
jmp
xchg
loopne
mov
lahf
and
pop
and
imul
and
loop
mov
adc
xchg
xchg
out
fidivs
push
jbe
push
fdivrl
xchg
push
fsubrp
xchg
xor
sbb
mov
pop
test
xlat
mov
mov
lock
in
fdivrs
mov
inc
out
jno
push
int3
scas
out
das
xchg
stc
mov
loopne
and
jno
sub
or
les
push
rol
cmp
mov
sub
cmp
pop
mov
incb
pop
cmpsb
pop
ret
cli
cltd
inc
push
pop
push
and
lods
mov
daa
hlt
fwait
add
push
xchg
sub
add
stos
cltd
cmp
cli
add
icebp
test
test
test
and
in
xchg
aaa
mov
or
fs
stos
lcall
pushf
cmp
fwait
adc
pushf
xor
int
dec
nop
jge
sbb
jecxz
xor
roll
jp
rol
dec
xchg
mov
and
mov
xchg
dec
mov
sbb
inc
jg
mov
pusha
jae
mov
pop
add
sub
daa
test
pop
aaa
pop
sub
mov
pop
jb
aad
push
out
or
xchg
popf
pop
leave
pop
and
adcb
repnz
cwtl
outsb
lret
xchg
nop
call
dec
addr16
and
mov
or
rorl
mov
popa
xchg
rclb
pop
or
xchg
cmp
movsl
lahf
stos
mov
gs
in
fwait
cmc
mov
in
and
mov
lret
mov
xlat
adc
scas
adc
jno
pushf
pop
xchg
dec
mov
jl
xor
iret
scas
push
rolb
inc
mov
fsts
jg
adcl
fildll
cltd
add
or
pusha
adc
xchg
ret
popf
cltd
and
xchg
call
mov
pushf
mov
mov
mov
mov
ljmp
icebp
mov
and
es
movsb
sub
imul
xor
leave
orl
fildl
mov
arpl
inc
mov
cmp
xchg
mov
daa
push
out
sub
and
or
enter
cmp
mov
add
adc
mov
mov
sub
sbbb
jns
jl
and
push
sbb
call
and
mov
adc
aam
lret
mov
or
jb
dec
push
inc
add
into
outsb
pop
lods
mov
mov
xor
jg
fldlg2
mov
ror
inc
dec
lahf
leave
push
nop
mov
cmp
sub
inc
rol
dec
adc
rclb
sub
in
stc
inc
imul
push
xor
xchg
mov
mov
int3
xlat
sahf
sti
jno
hlt
movb
mov
sbb
dec
outsl
lret
jge
push
pop
and
outsb
int3
cmpsl
test
outsl
les
lret
sub
mov
cmpb
popf
fnstenv
daa
mov
push
fcmovnbe
dec
repz
iret
mov
imul
loop
mov
xor
rcrb
jg
outsl
cmpsl
mov
into
ja
adc
mov
pop
fdivrl
cmp
mov
fstps
or
jae
andb
jge
cmp
rcrb
out
add
inc
xor
cmp
mov
add
pop
add
nop
call
xor
mov
or
pop
ds
inc
adc
or
cmp
das
add
xor
xchg
les
push
pop
call
add
xor
xor
repnz
fisttps
cld
xchg
popa
in
leave
add
clc
cmp
aad
arpl
push
and
inc
lret
scas
push
fsubs
inc
rcrb
fcomps
pop
xor
mov
xchg
ficoml
lcall
fmuls
cmp
mov
loope
hlt
cmp
mov
mov
pusha
fidivrs
je
shlb
setnp
cld
fnsave
or
iret
sbb
shr
adc
jecxz
bound
daa
push
jg
scas
jge
and
dec
insl
and
pop
adc
daa
sti
cmp
jb
int3
adc
pop
sub
sbbb
pop
addb
inc
out
fldt
les
xchg
push
and
int
stc
cmp
xor
add
inc
addr16
gs
inc
pop
test
add
shll
lea
fidivs
xlat
lret
push
out
cmp
and
jno
xchg
jle
movsl
or
out
movsb
pop
loope
cmpsb
test
jb
loope
fs
mov
std
repnz
ror
incb
dec
insl
pop
xchg
inc
or
cmp
scas
pusha
dec
mov
repz
fwait
ss
mov
ret
inc
adc
loopne
fisubl
sbb
lcallw
jg
xor
ficoml
pop
push
push
push
sti
mov
call
call
mov
lahf
dec
mov
rorb
ret
hlt
xchg
push
in
push
fnstenv
dec
or
sub
out
enter
pop
push
mov
pop
lahf
pop
push
lret
rorb
cmp
xchg
test
jg
fs
hlt
int3
shll
push
test
es
add
inc
xchg
enter
cmp
dec
lcall
or
arpl
gs
mov
pop
mov
fisubrl
fs
cmp
or
cwtl
and
ficoms
sub
mov
pop
fisttps
sub
jnp
pushf
inc
stos
jbe
shlb
dec
and
or
push
imul
arpl
cs
dec
mov
adc
arpl
iret
test
jne
mov
repz
jbe
xchg
push
pop
add
clc
adc
mov
sahf
int
ret
jae
push
xchg
mov
outsl
xlat
rcll
inc
cmpsl
pop
fistpl
add
sbb
or
inc
shrl
or
aas
sbb
enter
sub
mov
inc
jle
sub
notl
clc
jb
in
cmp
daa
xchg
or
test
cmp
orl
mov
sbb
pushf
outsl
xor
mov
mov
iret
ret
popf
stos
fidivrl
imul
mov
dec
insl
and
mov
mov
lock
adc
stos
lods
and
push
mov
popa
fnsetpm(287
cwtl
mov
fsubrl
andl
arpl
xchg
loopne
xchg
in
nop
ss
jp
sub
mov
loop
push
hlt
pushf
add
fnstcw
pop
ret
cmp
push
xlat
shrb
mov
test
mov
push
push
and
scas
aas
xchg
sar
sbb
cmpb
cmp
pop
ret
testl
mov
xor
rorl
add
cmc
and
rclb
jae
pop
outsl
lret
pushf
inc
mov
notb
loopne
out
jb
test
js
cmc
movsl
adc
mov
and
cwtl
add
adc
push
fdivrl
rol
mov
enter
out
aas
and
fdivrs
add
pop
int3
dec
aad
pop
xchg
mov
and
pop
xor
sbb
add
lret
rcll
clc
loop
mov
mov
or
or
dec
enter
fmull
inc
not
imul
sub
lret
push
popf
mov
aam
test
or
mull
jne
push
jno
outsb
xchg
cmpsb
test
adc
inc
jne
outsl
adc
insl
and
jp
xor
insl
mov
push
fs
movsb
dec
aam
insb
mov
xlat
sti
cmpsl
pop
and
cmc
adc
xlat
xchg
jg
mov
sub
pop
ja
jo
pop
jne
xor
mov
arpl
push
bound
push
sbb
cmp
mov
push
bswap
test
push
or
lret
dec
mov
inc
jne
push
sahf
inc
mov
mov
into
gs
cmp
cmp
iret
nop
lret
cmp
out
mov
pop
and
mov
pop
mov
jl
jbe
sub
cltd
inc
fildll
jecxz
xchg
ret
and
sub
fdivl
fimuls
jmp
cli
aad
inc
cmpsl
fisttps
sub
sub
sub
mov
dec
add
mov
data16
mov
mov
shl
xchg
outsb
in
xchg
movsb
loopne
sahf
push
and
ss
inc
mov
scas
orb
pop
inc
sahf
xor
xchg
pop
mov
popa
fs
mov
cmp
sbb
ror
xchg
mov
es
imul
dec
clc
fldt
or
flds
pop
sub
negl
pop
xor
and
test
movl
test
pop
cmp
je
loop
fldt
rcr
bound
mov
jne
fisttpll
sbb
mov
sbbb
or
xor
lods
negb
jnp
pop
mov
xlat
inc
dec
je
add
xchg
cld
sbb
mov
outsl
sub
ljmp
sbb
gs
add
xlat
sti
adc
aas
sar
inc
jg
inc
aam
sahf
negb
mov
push
ffreep
fisubrl
jo
aam
push
aad
adc
faddl
xchg
push
mov
test
das
insb
mov
xchg
lods
aad
popf
movsb
mov
jnp
repz
out
inc
lret
data16
or
add
mov
iret
mov
add
dec
xor
mov
xchg
mov
dec
jp
inc
cmp
xchg
leave
mov
add
int
push
and
cmpsl
cld
pop
pop
clc
stc
inc
jg
jl
pop
cmp
je
mov
dec
dec
mov
lsl
pop
rolb
add
mov
popf
pop
jl
jg
mov
testb
out
sbb
scas
in
mov
inc
add
icebp
iret
push
jae
ss
dec
xchg
inc
fisttps
scas
pusha
dec
inc
pop
test
mov
rcrl
iret
in
and
add
xor
adc
inc
dec
mov
dec
xor
nop
mov
mov
mov
scas
paddq
loopne
out
in
movsb
mov
sub
add
stos
cld
scas
cmp
fldcw
fsubs
mov
mov
movsb
inc
cld
inc
shl
push
subb
dec
push
enter
jg
sar
mov
gs
sub
cmp
mov
sahf
movb
jge
loop
xor
scas
or
test
jmp
sbb
add
ljmp
das
iret
adc
sub
ret
cmp
rcl
pop
xor
stc
cli
ror
cmpsl
imul
cmpsl
xlat
mov
mov
xchg
push
outsl
fdivl
nop
scas
push
dec
mov
cmp
stos
mov
dec
gs
and
imul
mov
imul
or
cmc
fs
and
icebp
fcmove
test
cmpsb
mov
fists
xchg
lea
and
push
dec
push
mov
outsb
push
mov
cld
inc
or
sarl
movsl
mov
mov
cmp
jnp
jo
adc
jp
xchg
fldt
das
inc
les
dec
daa
out
shlb
faddl
nop
xor
test
mov
add
pushf
pusha
fsubl
cld
push
loope
push
mov
fidivrs
push
stc
fstpl
ja
push
test
cld
mov
jge
fbstp
mov
lods
adc
lods
mov
fwait
inc
mov
jo
pushf
mov
push
mov
jecxz
add
stos
xchg
cmp
and
fucomp
mov
jecxz
movsb
gs
inc
xchg
call
js
cmpsl
or
dec
arpl
inc
lahf
dec
dec
rorb
push
mov
and
loopne
mov
fists
les
mov
lret
sbb
sub
inc
std
aam
dec
inc
inc
lods
mov
outsl
out
jbe
cli
lahf
scas
jg
nop
loope
fists
mov
lcall
clc
pusha
push
lock
test
and
sarb
pop
push
xorb
lret
jge
stos
jl
push
data16
aad
dec
jo
xchg
and
imul
sahf
ret
add
add
push
inc
xchg
push
inc
push
pop
sbb
sub
icebp
mov
cmpsl
dec
or
and
loope
mov
enter
inc
add
in
stos
hlt
xchg
mov
cmp
fs
xchg
xchg
push
cmp
xor
cmpsb
add
push
mov
imul
fs
xchg
pop
movsb
testb
ja
push
int
mov
les
scas
dec
mov
les
lahf
jl
sub
gs
fcomps
mov
xchg
jb
in
fidivrs
push
pop
les
lret
adc
outsb
add
scas
xlat
xor
mov
adc
sbb
ja
sbb
inc
pop
mov
xor
sarl
shrl
daa
cmp
daa
stos
movb
push
sbb
out
xchg
lods
and
mov
cld
in
pop
sbb
dec
hlt
push
orl
or
je
aad
bound
adc
pusha
xlat
push
push
or
lock
shlb
push
jp
sub
ficoml
push
pusha
daa
fstpl
adc
scas
fildl
mov
mov
xchg
sub
adc
adc
sbb
sbb
js
movsl
adc
ds
jl
sub
dec
sahf
cwtl
shl
cmp
ds
and
sub
xchg
sub
sub
mov
sub
add
ret
ds
mov
xor
push
pop
cmp
or
dec
inc
mov
inc
adc
add
std
shll
mov
ds
into
std
rol
cld
clc
pusha
lret
dec
and
ficoml
or
mov
inc
adc
leave
cmpsl
dec
inc
loope
jl
cltd
lcall
xor
fstp
imul
dec
call
adcl
pop
dec
stos
testb
fistl
ficoml
mov
jmp
push
inc
jnp
or
stc
pop
cmpsl
add
cltd
les
loopne
repnz
inc
or
rclb
mov
sub
mov
mov
daa
mov
jne
inc
dec
sbb
sahf
mov
gs
aaa
jno
repz
repz
push
push
ficomps
xor
push
add
sub
xchg
add
fcoms
push
push
jecxz
cmp
xchg
cmp
add
jmp
push
sub
rcr
jnp
pop
mov
xchg
dec
mov
shrb
jns
aam
ja
cmpsl
xor
mov
or
xchg
sarb
aam
aad
dec
js
call
xchg
push
or
lock
lea
scas
test
aas
mov
fwait
mov
arpl
mov
sbb
xor
sub
or
xchg
pushf
aam
xchg
pop
sbb
push
fs
jno
mov
shll
adc
loope
shl
leave
or
dec
imul
xchg
fmul
loopne,pn
test
js
or
sub
or
inc
mov
push
mov
push
stos
outsb
lcall
xor
mov
arpl
add
cmp
lret
stos
pop
test
mov
repnz
adcl
add
ret
and
out
das
into
jg
outsl
dec
or
xor
and
cld
lods
mov
jb
test
mov
push
addl
fdivs
mov
inc
fnsave
and
push
test
cmp
out
push
in
adc
int
insb
or
lods
cld
adc
stc
leave
inc
xchg
push
xor
cmp
pop
pop
xchg
fistl
insb
mov
scas
loop
cltd
mov
pop
dec
add
in
cli
add
in
bound
push
movsb
je
hlt
adc
and
inc
jb
mov
pop
sarl
fists
stos
xor
mov
inc
mov
sub
xor
imul
dec
mov
int
mov
stos
jecxz
in
xor
sbb
add
jle
xor
cs
stc
repz
clc
shrb
push
ja
iret
or
mov
lahf
pushf
test
addr16
cmpsl
scas
cmp
sar
outsb
imull
imul
push
adcl
mov
inc
inc
shrb
movhps
mov
mov
and
xchg
jge
adcb
repz
xchg
and
pop
mov
pop
cmpb
jg
inc
popl
pop
inc
out
and
adc
inc
cmp
inc
push
in
cmp
cmp
in
add
sbb
and
cwtl
jl
inc
scas
jns
fstpt
push
jnp
addl
mov
repz
lahf
jecxz
add
inc
int
cs
xchg
pop
int
lds
pushf
rcrb
ds
movb
xor
pop
mov
pop
faddl
rclb
fisttps
cmp
xchg
mov
pushf
jg
enter
int3
or
xorb
out
sub
jge
out
in
sahf
ja
cmpsb
shl
adc
fs
cmp
mov
sbb
je
dec
cmp
adc
fimuls
cmp
push
inc
test
les
pushf
aam
orb
mov
mov
inc
cmp
jle
add
lret
add
fxch
leave
push
inc
or
sbb
cmp
jl
add
filds
jno
mov
and
jecxz
pop
push
cs
dec
leave
mov
inc
cmp
dec
sbb
pop
sub
stos
cmp
rorb
aas
sarb
jecxz
mov
pop
hlt
inc
lcall
jge
push
addr16
mov
sub
xchg
mov
int
dec
ds
xchg
movsb
mov
push
and
mov
push
icebp
xlat
dec
and
pop
std
sarb
cmp
dec
mov
pop
fimuls
mov
movsb
loop
test
jl
or
andb
call
mov
pop
movsb
clc
add
inc
jb
mov
ret
ret
leave
shll
adc
mov
mov
cli
gs
and
or
push
dec
roll
andl
shl
pop
das
inc
fcomps
movsb
xor
ds
int
fdivrs
dec
inc
mov
sub
add
xchg
fcoms
mov
clc
push
sub
test
inc
js
das
mov
loop
cwtl
out
cs
mov
inc
inc
cmpb
inc
test
imul
scas
repz
mov
jnp
adc
push
rcll
in
out
mov
fiaddl
lods
xchg
pop
andl
lcall
lods
repnz
mov
pusha
ljmp
jl
pop
icebp
cmpsb
cmpsb
mov
call
mov
ret
push
test
jl
pop
jmp
out
cmp
jg
sub
shlb
adc
adc
daa
or
call
mov
daa
lahf
shl
repnz
adc
arpl
sub
stc
lcall
repz
sbb
sbb
or
and
in
pop
adc
movsl
dec
dec
jo
sub
cmpl
pop
inc
outsl
shrb
ret
jg
or
xor
loop
test
and
pusha
jp
sub
ds
ret
inc
shrb
dec
inc
sub
adc
mov
fcmove
xchg
int
pusha
insl
jg
xor
test
movsb
repnz
dec
mov
add
ficoml
aam
pop
fwait
mov
pushf
dec
sub
inc
jb
movsb
adc
enter
out
shll
dec
call
std
push
popa
mov
pop
rorl
mov
push
cwtl
repnz
jno
mov
arpl
sub
pop
push
std
mov
loope
jb
sarl
imul
xor
adc
mov
data16
inc
lea
in
mov
dec
or
mov
subl
outsb
repnz
or
es
or
idivb
loope
andl
popa
ds
cli
inc
and
orb
les
dec
movsl
sahf
ret
cmp
mov
lcall
adc
jbe
rcrl
pop
mov
cld
imul
in
aam
mov
cmp
sub
xor
out
std
xchg
jns
and
rcll
cmp
mov
iret
jg
rcrb
movsb
fcoml
cmp
in
cmc
and
or
and
ret
arpl
pop
mov
test
fisubrl
scas
cmp
add
ds
insb
mov
ljmp
sub
mov
fbld
xchg
sub
inc
fadds
pushf
ljmp
xor
sub
mov
outsl
mov
shlb
adc
or
sub
adc
js
notb
push
jae
loopne
and
xchg
pop
pop
fidivl
fbld
jnp
sarl
scas
enter
sub
sbb
movsb
ljmp
pop
fstpl
xorl
test
std
inc
iret
xor
mov
jmp
je
test
aam
rcrl
test
mov
push
push
int
mov
add
lcallw
adc
jmp
test
insb
mov
dec
in
test
or
imul
or
in
adc
scas
fwait
pop
cld
lret
fninit
shll
movsb
mov
arpl
sub
xchg
xchg
rcl
jge
mov
bound
mov
and
cltd
jmp
dec
sub
mov
and
pop
inc
cs
stos
out
fdivrl
mov
movsl
data16
adc
out
mov
ds
xchg
cltd
call
stos
pop
aam
sub
dec
ljmp
repz
movsb
dec
mov
mov
inc
insb
mov
push
sti
push
dec
or
gs
sti
cmp
sbb
sub
mov
fldl
test
jno
dec
out
xlat
pop
aas
aad
xchg
cmp
cli
mov
mov
aas
xchg
xor
sbb
cmp
cmp
mov
jecxz
test
out
enter
sarl
mov
movsb
stc
aas
cmpl
jp
sub
sbb
cld
sahf
push
jmp
cmp
jno
cli
cld
adc
rep
test
dec
out
test
lahf
lock
pop
xchg
xchg
mov
pop
hlt
mov
sahf
lret
sbb
cmp
jae
fwait
inc
cltd
or
repz
pop
subb
sub
jmp
xor
jne
dec
enter
les
mov
push
cmp
aas
jb
jecxz
rcll
mov
dec
dec
pop
int
dec
enter
or
inc
mov
lds
push
dec
sbb
aam
and
repnz
mov
ret
pop
fsubl
jne
test
test
xor
pop
clc
and
pop
stc
pop
jecxz
or
cli
push
mov
or
sbb
repnz
lods
scas
mov
dec
push
fnsave
fistl
sbb
adc
es
fsubrp
sbb
aaa
add
mov
xchg
pusha
shl
jno
jnp
or
lret
jae
cli
lods
xchg
fdivrs
inc
cld
fldl
or
xchg
fadds
std
popa
pop
or
sub
aaa
push
mov
push
mov
cmc
jge
mov
dec
les
mov
jae
push
test
subb
cmpsl
and
das
push
fnstcw
mov
aam
pop
sbb
testl
sbb
insb
cltd
aad
enter
int3
add
push
call
xor
mov
addl
add
arpl
and
movsb
push
popf
loopne
mov
in
es
sub
movsb
lret
test
lock
imulb
das
or
roll
dec
int
and
push
jg
xchg
popa
stos
scas
popf
push
and
jp
or
mov
or
mov
test
or
pop
dec
iret
cmp
or
ljmp
cmpl
test
dec
mov
xchg
insb
les
xchg
arpl
imul
mov
mov
mov
adc
cltd
jo
stos
insl
mov
cmc
mov
fs
jo
in
dec
dec
cltd
movsl
dec
adc
inc
nop
ficompl
lods
jae
imul
jle
mov
test
mov
adc
insb
mov
test
mov
lret
cmp
insl
sub
loope
pop
pop
lret
test
imul
and
shlb
outsl
mov
in
subb
or
and
imul
add
nop
xchg
mov
push
sub
repz
or
lods
fnstcw
push
inc
repz
pop
push
in
movsb
dec
or
xchg
mov
xchg
xchg
pop
je
popa
aad
mov
fdivs
mov
add
mov
lret
or
ret
adc
lea
xor
fcomps
in
addr16
fsts
adc
ficompl
rcll
sbb
xchg
out
cltd
sbb
mov
mov
lret
jb
hlt
fnstcw
mov
imul
xchg
sbb
mov
jg
dec
ret
jmp
addr16
clc
mov
push
stos
stos
test
push
add
popf
mov
jne
and
int3
push
stos
aad
xor
insb
add
xor
xchg
popf
test
ret
mov
xor
sub
lcall
loop
push
arpl
sbb
jl
or
push
lock
xchg
rolb
fists
adc
std
mov
imul
mov
pop
cmpsl
sti
pop
scas
les
ljmp
cmp
mov
lret
int3
sti
dec
stos
xchg
pusha
repnz
gs
jbe
out
mov
lods
aad
cltd
enter
xchg
inc
popa
mov
outsb
sbb
xchg
movsl
cmp
push
rorb
cs
pop
sub
jl
clc
divb
inc
push
sbb
lret
xchg
adc
or
jae
sbb
adc
lea
xor
arpl
cmp
add
das
or
mov
call
cwtl
xchg
lds
inc
xchg
insl
clc
icebp
test
inc
cmpsl
jb
adc
or
and
loopne
xor
lcall
mov
jae,pt
std
sbb
and
cltd
add
fistps
mov
lea
sahf
mov
aaa
data16
adc
pop
mov
fcomp
add
xlat
pop
adc
mov
lock
leave
sbb
and
mov
xor
loope
mul
jge
sbb
dec
jae
lret
mov
je
iret
pop
xchg
aam
xor
inc
js
mov
jp,pn
in
scas
inc
lea
sbb
in
je
cmp
clc
xchg
dec
call
push
xor
and
push
cwtl
sbb
mov
jmp
lahf
mov
lcall
aaa
fstl
movsb
addl
xlat
enter
jge
shl
mov
adc
test
mov
aas
repz
movsl
mov
add
fdivrl
lock
mov
dec
lret
pop
xor
add
cld
dec
imul
adc
out
fsubl
sub
pusha
inc
insb
mov
fstpt
push
fmuls
mov
aam
jmp
mov
lods
fsubrp
cmp
cwtl
iret
test
outsl
pop
cmp
push
stc
pop
mov
imul
xor
push
cwtl
push
xchg
pushf
sbb
hlt
jmp
sbb
daa
jo
stos
sahf
popa
mov
sub
rcll
pop
jp
adc
inc
push
mov
js
mov
loopne
xchg
fstl
aas
inc
mov
movsl
jecxz
or
shll
jp
cli
enter
fidivl
out
sarl
push
adc
call
xor
aam
xor
inc
inc
outsl
nop
es
aam
fisubrs
mov
fildl
dec
sbb
dec
mov
pushf
pusha
jmp
mov
pop
push
insl
cmpb
es
jo
mov
les
insl
inc
mov
cmp
mov
std
sbb
dec
pushf
nop
loope
outsl
shll
or
mov
outsb
pop
outsl
push
ljmp
mov
into
or
lcall
xchg
or
loopne
dec
inc
mov
mov
xchg
sub
push
add
cmp
mov
and
lahf
add
cmp
dec
jmp
shll
lods
enter
mov
enter
jecxz
jmp
aam
sar
dec
out
xor
inc
filds
data16
decb
in
dec
xlat
mov
inc
repnz
insl
adc
stc
insb
enter
or
mov
mov
ret
mov
cmp
mov
adc
mov
cmp
hlt
jbe
pop
aas
xchg
lret
fcoms
sub
xchg
ds
add
enter
mov
outsl
in
sub
cltd
loopne
jg
leave
jge
js
ret
out
insb
push
jae
lods
ss
aas
arpl
and
inc
inc
rolb
sub
iret
dec
sub
xor
push
fdivrl
mov
and
jno
sbb
xor
cltd
mov
adc
std
jo
dec
push
std
jo
sub
dec
shl
inc
rorb
mov
stos
xor
or
or
mov
inc
nop
or
insl
shl
or
int3
sbb
cmp
test
mov
dec
mov
xchg
rcrl
ja
and
fisttps
fisttpl
and
fld
inc
add
sti
cwtl
in
cmp
cltd
pushl
test
mov
cmpsl
mov
sub
xchg
out
into
scas
dec
push
daa
or
in
dec
sub
jge
aam
pop
mov
xchg
bound
mov
aad
sbb
out
or
xchg
or
lcall
lds
and
adc
jne
jno
scas
xor
adc
xor
or
cli
stc
int
or
sbb
xchg
je
mov
popa
pushf
jo
sub
addr16
out
dec
xor
dec
cmp
mov
add
jb
imul
push
cmpb
lret
fidivrl
sbb
mov
sti
jp
cli
xchg
mov
arpl
adc
shlb
lret
and
mov
or
jbe
mov
cld
dec
pusha
inc
push
test
adc
enter
pop
loopne
into
cmp
add
or
or
in
push
call
int
shl
push
mov
out
jp
clc
popa
stos
jns
fisubrl
push
nop
leave
add
xor
daa
inc
mov
cmp
pop
mov
adc
sub
pop
lea
ljmp
add
adc
and
lds
idivb
loopne
rol
jno
aas
jl
call
add
faddl
aaa
mov
jge
mov
inc
jecxz
push
pop
mov
popa
inc
pop
pop
lea
test
cli
add
iret
cltd
xor
lcall
sti
sahf
popa
test
sub
xlat
jo
sbb
pop
cld
adc
cwtl
sahf
loopne
cmpsb
push
sar
setg
add
push
notl
xlat
jns
sub
leave
adc
adc
std
pop
bound
jnp
mov
popf
in
xor
jb
ja
dec
pop
icebp
jno
cmc
dec
mov
test
or
outsl
adc
ret
sbb
adc
jecxz
and
out
fs
mov
test
sbb
cld
cmp
ret
fmull
in
nop
or
mov
movsb
mov
xor
fwait
aad
xor
sbb
mov
cmpsl
popf
cli
in
dec
push
inc
les
or
into
bound
jo
ds
push
and
lret
lds
sbb
jle
idivl
dec
imul
xchg
repnz
in
rclb
popa
lret
dec
dec
lret
cwtl
fmulp
jl
lds
and
adcb
repnz
fucomi
fsubs
cld
lcall
cld
pop
jg
pop
mov
loop
xchg
add
push
adc
insb
loopne
jns
add
cld
scas
push
sbb
leave
xor
mov
dec
paddw
jne
push
sub
out
stos
insl
scas
lock
and
leave
rclb
lods
push
push
xor
pop
mov
pop
jmp
fldenv
or
das
stos
push
cmpb
icebp
andl
lock
jae
mov
cmp
aad
fldt
es
js
movsl
adc
repnz
js
and
sbb
cmp
mov
ds
out
mov
adc
mov
std
jne
popf
sbb
add
in
or
xor
or
in
mov
xor
shl
sub
arpl
js
pusha
jg
test
dec
add
aaa
or
push
mov
xor
pop
cmp
pop
adc
int
test
and
sbb
sti
jnp
jae
inc
mov
sub
dec
jg
jg
js
cmpl
ljmp
ja
mov
je
sub
imul
xor
mov
test
pop
bound
stos
lea
aaa
add
dec
sahf
fwait
shr
hlt
inc
push
dec
ret
clc
or
sbb
dec
mov
test
int
les
sarl
into
pop
cmpl
cltd
or
dec
push
adc
cmp
into
push
je
xchg
inc
pop
and
repz
and
jnp
mov
sub
and
and
int
push
fnsave
int3
std
mov
adc
mov
pop
and
jecxz
mov
int3
mov
inc
cli
outsl
shrb
push
pop
daa
or
gs
sbb
into
iret
sar
rcrl
out
mov
test
ficoms
ret
lock
les
cld
nop
xchg
and
dec
imul
mov
sub
mov
push
cmp
or
push
sbb
adc
sub
push
jl
nop
mov
pushf
data16
fmuls
sub
push
mov
fldenv
mov
xchg
or
stos
pop
iret
mov
aam
addb
mov
jo
loopne
sbb
loop
sti
lahf
jl
dec
sbb
dec
pop
filds
fucomip
mov
or
int3
fimuls
pop
mov
sbb
dec
add
mov
jp
jl
daa
push
imul
test
cmpsb
sub
je
jmp
ja
pop
hlt
mov
je
sarb
sub
adc
mov
scas
mov
in
dec
pop
js
push
enter
xchg
xchg
rol
movsl
xchg
or
mov
lea
cld
fwait
inc
mov
fwait
pusha
sbb
xor
add
dec
icebp
jmp
fs
enter
repnz
or
test
and
nop
push
push
cmp
mov
jge
aad
movups
pop
pop
imul
xchg
inc
andl
add
andb
inc
mov
or
inc
lcall
mov
jl
add
stos
cwtl
jo
push
gs
inc
xchg
mov
andl
pop
ret
lahf
mov
xor
shlb
pop
movsl
rcrb
stos
pop
push
icebp
rcrl
mov
sbb
mov
pop
out
lret
out
fwait
push
enter
call
or
adc
cmp
sbb
in
sarb
lcall
out
cmp
fwait
pop
adc
insb
aas
or
add
dec
sbb
shrl
ja
in
lahf
mov
inc
pop
popl
ja
mov
ljmp
sbb
dec
sub
andb
sahf
scas
adc
inc
fldl
xor
sub
outsl
push
and
mov
enter
sub
daa
mov
mov
les
cmp
jg
push
cwtl
inc
insb
mov
inc
rclb
dec
pop
sub
loop
fcmovbe
fistl
mov
fisubrl
dec
subb
cmp
add
shrl
lds
insl
arpl
pop
xor
xchg
ss
mov
push
adc
hlt
mov
shl
inc
outsl
loop
add
les
sub
mov
cmp
add
std
xchg
dec
push
add
or
jle
iret
mov
xchg
push
mov
loop
arpl
pop
cmp
aam
das
lret
adc
outsl
aas
and
mov
xor
fnstenv
add
sbb
popf
fstps
iret
or
insl
dec
repz
shrb
iret
mov
dec
or
int3
cwtl
or
dec
mov
add
pop
mov
sub
push
mov
es
hlt
mov
jmp
add
or
adc
add
or
jne
xchg
mulb
sbb
ficomps
mov
sub
jno
sbb
pop
leave
adc
sub
paddw
movsb
negl
mov
mov
pop
jne
data16
sub
xchg
iret
repz
loope
dec
adc
ror
out
je
rcl
mov
mov
sub
mov
fs
mov
hlt
ja
int3
js
xor
pop
xor
cmc
les
shl
cli
gs
push
pop
xchg
jnp
xchg
lods
cmpsl
enter
ds
in
pop
fcomps
xchg
jecxz
outsb
mov
or
subb
mov
jns
add
shl
inc
xchg
mov
daa
outsl
jmp
xchg
adcl
jle
loopne
and
jp
jge
out
shll
test
std
xor
adc
push
hlt
sbb
xor
out
daa
push
stc
pop
inc
add
leave
ret
bound
imul
push
test
and
hlt
cli
movsb
xchg
xchg
push
dec
sti
test
je
inc
mov
mov
repnz
outsl
hlt
lds
js
call
jae
push
adcl
inc
fisubl
mov
mov
add
cmp
icebp
enter
cmp
add
aas
repz
pop
mov
pop
pushf
and
aas
cmp
in
dec
addb
mov
mov
mov
xor
mov
orb
nop
adc
lods
push
sub
mov
test
and
sbb
mov
les
sbb
jp,pn
fistpl
mov
jg
inc
movsb
and
scas
lea
jne
xor
aam
xchg
test
movsb
jb
xchg
adc
aas
outsl
cmc
cli
fnstcw
leave
inc
lret
mov
scas
xor
mov
lahf
xchg
xor
loop
cmp
pop
fildl
mov
insl
add
sbb
add
shll
push
or
jb
or
push
imul
pop
adc
push
jp
inc
inc
xor
aad
mov
lods
and
xor
dec
xchg
xor
int3
scas
sub
and
push
repz
aam
push
pop
push
out
sbb
addr16
mov
lahf
cwtl
shlb
and
ret
mov
or
js
jo
mov
dec
and
sbb
add
add
lea
mov
ja
frstor
sahf
dec
inc
sub
repnz
fcoms
pop
pusha
les
cmp
dec
dec
adc
cwtl
clc
jle
stc
cmp
sbb
mov
lcall
xor
test
lahf
adc
push
pop
xlat
or
mov
ds
aas
je
cmpsb
mov
and
xor
cmp
sbb
mov
and
cwtl
and
popa
and
ficoms
test
cmp
mov
not
mov
in
mov
leave
test
lods
ret
fadds
cmp
push
ss
inc
add
and
cwtl
lods
test
mov
out
aaa
subl
pop
sti
loopne
push
dec
nop
sub
sub
enter
lcall
push
fisubrl
and
data16
pop
stos
imul
sbb
mov
fisubrl
cmp
dec
jae
scas
push
or
aam
and
mov
and
xor
mov
shll
adc
rcrl
xor
arpl
rclb
pop
cmc
movsb
sub
shufps
or
mov
aaa
outsb
bt
mov
pop
pop
daa
loope
call
sahf
fnstsw
stos
or
mov
cmp
leave
js
imul
fdivrs
dec
mov
int3
push
dec
adc
aas
mov
inc
icebp
cmp
push
xchg
xorb
js
notl
insl
sub
pop
popf
or
imul
or
inc
ljmp
mov
aaa
dec
sarl
inc
push
movsb
imul
lods
insl
loope
pop
push
jg
cs
fstpt
inc
and
js
daa
ss
adc
add
push
bnd
gs
mov
sub
mov
and
ljmp
or
and
and
enter
dec
stos
testl
push
sub
xor
jmp
push
xor
xchg
cli
xorb
nop
fs
imul
xor
cs
test
adc
mov
dec
rorb
xchg
cmpb
jmp
jg
cmp
stc
add
jmp
orb
leave
xor
daa
add
imul
xchg
addr16
xor
mov
insl
mov
aam
mov
or
push
push
or
and
mov
jecxz
cltd
lcall
jp
fwait
stc
mov
adcl
mov
inc
jecxz
mov
testb
cmp
inc
cmp
pop
dec
inc
decb
int3
lock
jno
adc
dec
cmp
and
arpl
dec
push
adc
xor
push
mov
sbb
add
arpl
cmp
imul
jnp
in
in
loop
ss
mov
mov
movsl
orl
lret
jns
xor
inc
inc
fmulp
jle
or
iret
sub
stos
dec
xor
mov
loope
or
push
sub
xchg
add
popf
cmp
and
adc
sbb
inc
ds
sarl
roll
inc
and
insl
jp
mov
rclb
xchg
and
mov
fs
scas
hlt
dec
loop
ljmp
aas
outsb
aas
popf
jp
data16
dec
ret
clc
andb
mov
add
aad
out
pushf
mov
movsb
mov
pop
mov
ret
jge
inc
pop
pushl
sbb
inc
sbb
nop
aas
loopne
fildl
mov
popa
insb
or
lcall
add
xchg
bound
xchg
mov
lea
jo
jnp
fwait
scas
imul
in
into
pusha
dec
lcall
fcomps
xchg
mov
xorb
push
outsb
or
lods
pop
jne
dec
mov
dec
mov
mov
mov
jo
fxch
adc
mov
jno
push
jle
mov
push
seta
int
xor
jge
inc
stc
and
lret
add
and
sbb
and
lcall
fwait
loope
in
stos
nop
mov
mov
cmpsb
sub
fdivrs
add
into
and
daa
scas
mov
sbb
popa
pop
inc
rcll
sar
movsb
popf
inc
aam
idivl
mov
outsl
mov
sbb
mov
stc
sbb
dec
push
jnp
stc
cmp
sbb
lret
jle
lea
and
push
call
in
mov
bound
addb
sbb
or
jmp
jmp
pop
mov
dec
mov
sbb
dec
fdivp
enter
pop
lds
decl
pop
popf
daa
mov
mov
lahf
cmp
dec
or
adc
add
push
aas
mov
ljmp
icebp
out
aas
fdiv
or
xorb
repz
leave
call
lret
lock
mov
or
mov
mov
dec
mov
mov
sub
adc
mov
movsb
mov
jb
or
xchg
mull
imul
jne
adc
pop
sbb
bound
adc
test
add
xchg
popa
in
cs
add
das
cmpsb
sbb
pop
mov
push
xchg
sbb
push
dec
loope
cs
popa
add
pop
stc
pop
jns
xor
in
into
adc
push
push
mov
xlat
sub
mov
push
sbb
xchg
mull
outsl
xchg
int
sub
loope
adc
int
mov
mov
lea
mov
pop
sub
sub
lret
stos
lock
push
pop
push
mov
pop
ss
and
lock
xlat
xor
shll
jns
adc
push
add
xchg
bound
push
cwtl
pop
pushf
stc
fnsave
mov
test
push
or
fmul
bswap
or
icebp
pop
cmp
xor
jg
sti
push
cmp
hlt
cld
insl
add
push
dec
pop
add
mov
cmp
roll
ror
mov
ljmp
mov
testb
data16
mov
bound
push
add
cli
jae
inc
pusha
test
js
mov
sbb
repnz
mov
out
jo
add
jg
shll
mov
vandnps
adc
out
aaa
fwait
loop
test
mov
jecxz
xor
in
out
dec
rcr
pop
dec
xchg
leave
popf
das
nop
sbb
fistpl
mov
mov
mov
gs
test
dec
call
mov
out
push
fisubrs
push
lret
xchg
adc
inc
push
ret
loope
adc
rolb
lcall
jb
push
lea
popf
rcll
push
or
insb
push
sbb
pushf
xlat
bound
popf
cmp
mov
ret
js
sbb
add
lock
out
xor
leave
hlt
sbbl
pusha
or
push
mov
fldl2t
imul
mov
pop
leave
push
data16
push
xor
fistpll
cmp
cltd
inc
and
sbb
or
das
xchg
fcoms
or
ret
dec
cvtpi2ps
loop
mov
pushf
sub
mov
sub
xchg
mov
ret
insl
fistpl
add
push
fs
pop
divb
pop
jb
sbb
clc
in
jle
inc
mov
xor
stos
dec
xchg
mov
pushf
fsub
cmp
movsl
inc
rclb
daa
in
pop
and
cld
loope
adc
jg
in
cmp
in
pop
outsl
push
cmp
sahf
lock
push
mov
lret
dec
or
test
int
and
sti
cmp
aam
fimuls
jb
pop
mov
outsb
das
shll
mov
add
lcall
adc
or
adc
andb
jmp
iret
mov
ret
jle
sbb
xor
lods
icebp
pop
stc
mov
sti
dec
fidivl
pop
ret
scas
push
ss
push
test
add
inc
rclb
movsl
add
jecxz
dec
mov
adc
push
jl
mov
xchg
inc
sub
cmp
xchg
cltd
inc
into
cld
mov
in
loopne
dec
or
lods
adc
rcll
cwtl
add
lods
add
test
aad
inc
test
lock
imul
pop
jg
or
shrb
pushf
xchg
mov
daa
int
push
push
mov
inc
mov
decb
inc
into
or
push
jne
outsl
popl
add
das
inc
jg
lods
or
inc
and
icebp
xchg
popa
cmp
sbbl
mov
adc
cmp
xor
inc
dec
lds
jbe
ret
mov
mov
mov
dec
iret
lock
push
pop
adc
adc
pop
cmp
xor
je
repnz
ss
fnsave
xchg
in
inc
sbb
inc
adc
in
repz
mov
fs
fmul
arpl
mov
mov
jb
xchg
fnsave
jle
push
mov
pop
xadd
bound
inc
repnz
jb
bound
inc
stc
push
andl
outsl
push
js
lret
jno
xchg
dec
cwtl
inc
cwtl
xor
bound
leave
rcr
dec
fdivr
movl
ret
xor
and
xor
jecxz
inc
insb
xor
xor
mov
inc
cmpsl
popl
mov
mov
out
fimull
add
xorl
rcrl
or
stc
insb
cli
cmp
ficoms
mov
mov
pushf
out
cld
pushf
aam
adc
leave
adc
xor
cld
icebp
pop
cld
cltd
and
cwtl
xlat
adc
js
adcb
adc
popf
mov
subb
lods
hlt
and
fsubrl
inc
jge
and
push
imul
mov
fistpll
lret
dec
in
dec
cwtl
jle
inc
xor
icebp
cltd
lcall
in
push
xor
jns
or
inc
negl
pop
hlt
jle
insb
jnp,pn
mov
cmpsl
movaps
push
pop
jb
mov
xchg
cmpsb
sub
adc
enter
jno
and
fdivrs
fsubp
daa
das
add
jge
fsub
mov
in
xchg
cwtl
mov
fcoml
idivl
add
rorb
idivl
mov
hlt
jne
ljmp
inc
pop
cs
lods
arpl
ja
mov
mov
and
xchg
out
lds
out
mov
ds
mov
roll
mov
scas
aas
xor
mov
pushl
or
ret
mov
sahf
inc
pop
push
fnstenv
push
testl
cmp
popl
in
dec
fisubs
add
orb
pushf
dec
add
and
jb
inc
test
faddl
dec
iret
fisubrs
cmp
pop
cltd
mov
pop
sbb
or
cmpsl
cmp
and
pusha
lods
push
fdivrl
mov
fcoms
mov
push
js,pn
daa
or
inc
mov
mov
jle
lret
cmp
push
call
or
dec
jns
movsb
das
test
out
push
mov
stos
sbb
mov
mov
call
inc
mov
push
or
test
pop
cltd
test
imul
dec
xor
or
mov
addl
push
sbb
or
cltd
popf
stos
push
add
pop
mov
add
adc
mov
pop
test
inc
xor
ds
aad
mov
int
mov
fdivrp
aaa
std
sbb
gs
test
sbb
mov
test
inc
mov
or
adc
push
imul
inc
sub
enter
mov
adc
inc
ret
dec
jbe
in
or
dec
jg
fs
mov
test
inc
pop
inc
loop
mov
push
ds
sub
xor
push
sti
addb
mov
push
outsb
cwtl
adc
inc
mov
lcall
inc
mov
mov
push
sub
inc
cmp
cmp
pop
ss
push
sub
cld
adc
and
iret
mulb
jae
std
mov
bound
and
xlat
push
les
inc
pop
pop
shl
and
sti
push
adc
fs
insb
orl
popf
cmp
mov
dec
inc
sbb
xor
test
ret
negl
fs
mov
inc
fs
cmp
mov
add
mov
or
dec
fldt
mov
sub
and
push
sti
mov
lcall
inc
mov
lds
in
lods
imul
sti
rclb
cld
cmp
mov
gs
pop
add
jns
dec
es
mov
rorl
sub
jne
dec
bound
arpl
sar
or
sbb
in
aas
jmp
mov
cld
push
fndisi(8087
test
sub
cwtl
mov
mov
adc
enter
inc
andb
mov
pop
scas
mov
out
cmp
xchg
mov
out
xor
inc
test
and
mov
push
jbe
push
xchg
add
inc
and
cli
call
pop
lods
aam
mov
jo
jb
xchg
mov
outsb
arpl
aam
leave
lahf
orb
mov
jo
stc
scas
push
mov
sub
pop
lods
xchg
mov
sar
push
mov
or
stc
cmp
outsb
sub
test
xchg
gs
roll
out
xchg
pusha
cmc
inc
sahf
ds
pop
test
aaa
imul
jae
cwtl
jo
add
jl
pop
test
cmp
ret
mov
push
roll
mov
arpl
js
sub
js
add
push
push
lret
sarl
je
push
icebp
lods
out
jae
mov
xor
roll
fidivl
pop
scas
mov
push
push
inc
push
aas
icebp
jno
xor
leave
pop
jb
fucomp
fstps
inc
push
pushf
fcoms
popa
loop
jnp
lcall
mov
push
mov
xchg
into
shlb
pop
sub
jecxz
out
lahf
loop
sub
mov
xchg
ss
adc
incl
dec
jns
sub
lods
fldenv
lret
push
fcmovnu
pusha
sahf
mov
or
jbe
ja
lret
lea
ficompl
sahf
adc
repz
in
pop
inc
inc
lret
cmpsb
push
cwtl
pop
pusha
push
nop
fisttps
push
lcall
pop
pop
inc
mov
outsb
adc
xor
cmpsb
lods
rorb
pop
je
cmp
pushf
popf
and
lret
or
pop
mov
xchg
mov
sti
dec
mov
ljmp
scas
dec
xchg
sub
jg
or
out
jg
dec
fisubl
sub
xor
cmpb
mov
pop
ret
push
push
in
cmp
jle
jecxz
lods
xchg
sahf
cmp
adcb
ljmp
or
mov
or
xchg
divb
in
xor
mov
bound
pushf
mov
mov
lahf
and
mov
pop
jb
sbb
xlat
repz
aas
insb
sub
lahf
cmp
mov
sbb
out
cwtl
imul
mov
push
dec
fwait
jo
jns
icebp
push
ja
add
inc
fdivl
addr16
lret
mov
loope
push
mov
cmc
inc
test
mov
nop
push
in
inc
xchg
mov
inc
jno
cmp
pop
test
mov
cmp
shlb
clc
clc
dec
ret
mov
jmp
lcall
adc
add
or
clc
fistpll
icebp
mov
mov
negb
dec
mov
xor
pop
mov
outsl
xor
cld
cld
pop
push
mov
sahf
jg
mov
dec
ret
or
stos
push
or
push
adc
rcr
sahf
sarb
cwtl
imul
dec
or
push
lcall
cltd
push
mov
or
movsb
clc
inc
jnp
push
or
push
jnp
rclb
push
cs
xchg
cmp
and
mov
and
mov
pop
int
or
ja
adc
sub
mov
add
mov
xchg
adc
push
mov
inc
mov
pop
mov
push
add
xor
sub
jae
pop
cwtl
rclb
adc
ret
scas
inc
inc
popf
idivl
out
xchg
adc
mov
shrl
andl
xor
mov
cld
inc
or
aaa
icebp
inc
inc
stc
ficompl
xor
xor
loope
xchg
roll
pop
cmp
jno
aaa
jae
dec
push
mov
stos
push
imul
leave
popa
inc
mov
sub
and
scas
add
sbb
adc
mov
scas
xor
xor
aas
popf
mov
ror
xor
or
add
xchg
push
out
jl
shr
cmp
inc
bound
lds
xchg
xchg
mov
or
sub
push
push
insb
cmp
lods
dec
cmp
mov
and
and
mov
mov
inc
mov
aas
and
xor
mov
mov
add
add
jns
dec
bound
mov
mov
push
fdivrs
adc
movsb
mov
repz
pop
jg
les
int3
rcrb
stc
cmp
and
fsubs
sbb
test
pusha
or
sbb
shlb
or
out
xchg
cmp
frstor
outsb
lret
or
js
xchg
jge
leave
sub
add
test
mov
jmp
fs
mov
inc
sbb
cmp
adc
lret
mov
push
mov
cmc
stos
fdivrs
mov
addr16
loopne
popa
aas
jl
scas
mov
mov
test
mov
fs
mov
std
jne
hlt
sub
lds
jbe
xor
dec
mov
jge
mov
inc
push
inc
sahf
dec
push
repnz
imul
int3
enter
in
sahf
outsl
mov
jge
es
adcl
outsb
xchg
inc
pop
filds
loope
xchg
and
lods
mov
or
or
into
enter
icebp
test
pop
mov
inc
les
test
fsubrs
cmpsl
fs
sti
push
idiv
test
xor
jmp
mov
fidivrl
repz
stc
movsl
cmp
pop
lds
in
sub
movsb
dec
push
mov
pop
jl
inc
idivl
mov
jl
mov
stc
sbb
mov
or
ljmp
in
pop
cmc
mov
jae
das
roll
and
dec
and
sub
lahf
leave
leave
sbb
cmpsl
repnz
mov
imul
data16
jmp
inc
add
adc
punpcklwd
test
adc
sti
call
xor
jge
stos
xchg
mov
mov
insl
pop
pop
cmp
xchg
add
cmp
add
jg
sub
cmp
cmp
outsb
mov
and
pushf
jmp
ljmp
pushf
pop
inc
leave
xchg
inc
lret
push
xchg
jmp
popf
jns
cmp
mov
adcb
push
dec
stos
sbb
inc
cmp
xor
loop
inc
bound
xor
sub
int3
push
fldenv
lret
lret
in
insb
mov
cmp
mov
ret
in
rcr
sbb
rorl
xchg
adc
and
adc
lock
or
fsubrl
cs
scas
mov
sbb
insb
add
add
filds
icebp
xchg
outsl
fimuls
mov
les
cld
mov
aam
jle
dec
cs
mov
xor
in
outsb
push
cmc
push
nop
lods
ja
fisttps
push
loopne
mov
aas
push
pop
lret
mov
jmp
aas
push
movsl
subb
inc
xor
jmp
cmpsb
leave
imul
jne
mov
es
inc
cmp
mov
cmp
loope
dec
or
add
imul
jae
dec
cmc
mov
mov
imul
xchg
rolb
sbb
stos
jno
clc
jae
jo
and
js
or
shrb
fcmove
call
das
mov
pop
jne
dec
sub
sbb
sub
iret
push
xchg
lds
sbb
notb
cs
imull
add
push
mov
pushf
repnz
fildll
jge
dec
pop
mov
fsubs
xor
stos
xor
pop
arpl
loope
mov
xor
sahf
shlb
xchg
fildll
or
std
sub
mov
iret
jl
xor
pushf
insb
xchg
rcr
jo
jg,pt
rorl
adc
sbb
mov
cmpb
orl
std
gs
pop
idivb
leave
sbb
xor
inc
xchg
pop
insl
insb
push
fldcw
pop
push
icebp
stos
icebp
cmp
ljmp
mov
sub
or
jb
ss
imul
cmp
xchg
add
xchg
hlt
popf
xchg
jge
push
inc
shll
mov
pusha
popf
outsl
dec
add
bound
sub
inc
push
rorl
pop
adc
cmp
xor
in
inc
aam
add
add
adc
xor
pushf
fcmovb
in
xor
fxch
mov
jae
mov
jl
movsl
dec
popl
xor
andb
cli
movsb
stos
dec
pushf
les
lahf
pop
sub
mov
xchg
subb
mov
dec
rorb
jge
fstl
jecxz
lahf
out
mov
ja
enter
jge
ds
stos
pop
shlb
lods
xor
in
inc
cmpsb
jmp
push
sbb
std
jbe
or
insb
popf
add
shl
add
pop
sbb
or
sub
cmp
stos
pop
cmp
scas
sub
push
pop
aam
mov
xlat
pop
push
std
jge
push
or
mov
int3
int3
or
clc
sub
mov
mov
mov
out
cwtl
ds
cs
cmp
imul
outsb
pop
xchg
cs
std
repnz
jg
rcrb
inc
push
cmp
mov
add
and
into
fisttpll
mov
aas
data16
sti
or
adc
in
sub
mov
inc
test
arpl
inc
xchg
or
stos
rclb
cs
shlb
mov
sti
xor
test
jge
jb
push
out
pushf
inc
dec
scas
mov
dec
pop
push
sahf
add
es
test
fldenvs
jne
test
pop
test
and
push
shlb
adcb
adc
dec
subb
jl
fisubl
fs
cmp
xchg
fwait
aam
rorb
or
rcll
mov
fstl
outsb
xchg
pushf
mov
mov
adc
add
int
es
dec
hlt
push
mov
inc
inc
xchg
fisttps
mov
xchg
gs
int3
sbb
sub
or
lret
sahf
jge
or
test
lea
popf
sbb
cmp
enter
mov
inc
rolb
scas
push
rclb
add
hlt
xor
xchg
loop
hlt
leave
icebp
push
aad
hlt
lds
jno
clc
jns
das
insl
shrl
cmp
ja
or
and
and
jmp
lcall
mov
hlt
dec
push
imul
mov
aam
mov
and
daa
cmpsl
sub
lret
pop
loope
cwtl
mov
mov
arpl
pop
pop
inc
inc
inc
add
adc
mov
cmp
cs
dec
dec
popa
jp
repnz
daa
lahf
ja
rcrl
ds
xchg
std
cmp
ja
cltd
and
sub
add
add
pop
stos
mov
jmp
or
xchg
leave
pop
mov
sub
mov
cmp
xchg
stos
sub
push
jns
inc
and
add
das
cmp
mov
mov
jmp
cmp
scas
mov
rcrb
js
push
ret
or
mov
and
repnz
sar
test
pushf
mov
je
in
add
ret
loopne
push
adc
rcll
loopne
inc
or
shrb
pop
filds
jle,pt
loopne
xchg
movsl
jae
sbb
lods
stos
cmp
sbb
gs
in
aam
xor
mov
pop
jmp
xchg
adc
fidivrl
mov
add
fildll
cwtl
push
movsb
xchg
arpl
pop
insb
mov
test
stos
add
pop
inc
cmc
mov
gs
push
mov
cmp
or
nop
xor
and
xchg
mov
addr16
cmpsl
mov
xor
pop
mov
aaa
xchg
add
cmp
shl
int
cs
mov
fs
test
cmp
sub
enter
test
jbe
roll
adcb
aaa
fistpl
enter
mov
popa
xchg
mov
jecxz
dec
sbb
dec
arpl
cli
mov
into
mov
mov
xchg
rcpps
cli
hlt
adc
cltd
push
test
mov
mov
std
mov
cmp
cmpsb
xchg
push
test
out
imul
or
pop
cmp
ficompl
mov
pop
popa
mov
dec
push
int3
vmovntps
leave
int3
mov
mov
bound
sahf
xchg
lahf
je
stc
outsl
in
subl
add
or
fcomps
xchg
or
jmp
les
pop
xor
dec
repz
dec
inc
cmc
sarl
in
hlt
adc
pop
xchg
and
mov
inc
lcall
nop
push
mov
cld
push
loop
mov
pop
xchg
dec
clc
rclb
rol
outsl
popa
mov
into
mov
dec
pop
pop
add
ss
test
mov
repnz
ljmp
push
sbb
or
and
scas
or
mov
ja
in
mov
pop
or
mov
loopne
xchg
fstp
cltd
outsl
xchg
sub
add
adc
fcomip
aas
cli
adc
jb
mov
ljmp
shll
mov
shll
clc
jae
or
dec
mov
fildll
insl
jns
jge
sub
jp
rcrl
xor
or
jle
stos
push
add
jle
aas
mov
lret
pop
adc
sub
or
pop
lea
mov
stos
push
mov
loopne
mov
repz
shrl
mov
cmp
ficoms
test
pop
mov
xor
jle
arpl
int
pop
jmp
mov
into
sub
pop
push
lds
lret
inc
nop
jns
lret
cmp
repnz
and
pop
inc
mov
lcall
pop
dec
and
inc
sbb
ja
or
inc
into
mov
int
ja
pop
adc
ds
call
ret
push
es
xchg
pop
int3
push
xchg
jmp
shrl
out
insb
jecxz
lods
icebp
test
lods
push
fbstp
test
mov
mov
xchg
repnz
icebp
and
mov
aad
mov
dec
scas
outsb
or
dec
lods
lea
ljmp
mov
add
out
sbb
aad
cmp
sbb
fadds
push
test
movsb
lahf
or
jo
pop
rcl
pop
lahf
jp
or
sub
out
test
inc
rolb
push
and
add
daa
mov
adc
and
and
add
xor
shl
xor
xor
out
loope
enter
inc
lods
lretw
aaa
dec
outsb
fcomps
movsb
and
sub
pop
rcrl
sub
push
cli
mov
mov
ja
inc
sub
mov
fmuls
mov
pop
mov
pusha
std
in
popa
fwait
push
in
sub
ret
hlt
js
imul
movsb
std
jecxz
jne
insl
stc
movsb
xchg
adc
sub
adc
mov
dec
pop
je,pn
outsl
add
pop
xchg
dec
call
aas
mov
leave
sub
mov
pop
add
daa
sbb
sbb
out
inc
jl
cmp
icebp
inc
arpl
dec
cld
inc
lods
push
xor
ja
div
insw
fistpl
lock
push
mov
bound
jb
mov
scas
fldl
and
addr16
fstl
cli
imulb
in
das
mov
sbb
repz
lds
lea
insb
fldenv
ss
adc
mov
ja
mov
cmp
leave
adc
push
cwtl
enter
loop
ss
rolb
stos
sbb
jl
sub
push
fsubl
pop
lods
mov
and
push
ret
sti
sti
mov
fs
imul
jp
fs
or
insb
xlat
test
cltd
fistps
fcoms
rcl
mov
xchg
in
inc
into
out
push
mov
test
mov
imul
cld
int
mov
pusha
nop
cmp
mov
mov
mov
movsl
cmp
xchg
fcmove
outsb
stos
pop
cmpsl
mov
frstor
nop
add
outsb
lds
call
test
fcompl
dec
out
lahf
mov
adc
add
lret
mov
mov
sub
popa
inc
cmp
dec
lahf
lret
sahf
sbb
arpl
mov
push
jp
jmp
test
pop
mov
lret
jmp
test
pop
imul
cwtl
pop
dec
les
cmp
clc
mov
jb
add
shrb
jp
add
loope
stc
je
int
jp
dec
jbe
insb
sbb
mov
sahf
cmpsb
fcomps
dec
xor
push
mov
int3
in
jl
and
icebp
add
jle
inc
mov
imul
fcoml
jge
popf
mov
inc
dec
addr16
lods
bound
dec
divb
xchg
sub
dec
bound
repz
je
fnstsw
gs
loop
add
clc
fcmovnbe
pushf
mov
inc
cld
ja
mov
outsb
enter
adcl
push
clc
sbb
push
xchg
lods
jle
cmpsl
xor
mov
std
iret
cmpsl
inc
cmc
movsl
movsl
add
daa
sahf
icebp
fisttpl
mov
mov
lock
iret
sub
cmp
out
mov
lods
jnp
mov
clc
rorb
pop
dec
xor
and
xchg
xchg
bound
sub
push
pop
test
sub
orl
push
fisubrs
mov
and
mov
pusha
mov
dec
es
cmp
and
daa
negl
or
inc
and
push
and
mov
jl
cmp
bound
jg
leave
int3
and
test
xchg
mov
je
cmpsl
mov
mov
and
adc
push
daa
and
inc
sbb
in
test
dec
mov
cmp
mov
pop
inc
movsb
cmp
test
je
sbb
jl
pop
cmp
pop
hlt
xchg
dec
dec
push
pop
fwait
mov
push
adc
add
mov
push
xchg
insb
push
fldl2t
movsb
rcrb
test
mov
cmp
stos
mov
mov
or
xchg
and
call
push
add
jge
push
mov
xchg
fcmovu
or
push
push
fcmove
pusha
pusha
fsubl
imul
popa
xchg
and
test
gs
fidivrl
stc
scas
and
in
icebp
mov
outsb
add
cmp
mov
inc
dec
fcmovb
inc
adc
in
es
xchg
or
mov
mov
push
push
movsl
fisubrl
jbe
lahf
rcrl
aas
aas
push
ret
dec
fcoms
arpl
jg
xor
push
xor
outsl
decb
xchg
jo
cld
cmpsb
outsb
loope
mov
mov
pop
das
les
lret
call
stos
cwtl
cmp
jae
orb
add
or
adc
test
bound
sbb
mov
pop
mov
aas
ret
andl
insl
push
jbe
mov
or
and
aaa
pop
cmp
arpl
cmp
cmp
sub
aas
lods
hlt
fs
mov
into
mov
and
inc
int
or
cmc
test
test
dec
outsb
push
jne
fisubrs
je
aam
int3
aad
xchg
mov
inc
into
push
roll
dec
add
or
pop
les
test
sub
push
and
xchg
adcb
or
mov
dec
or
movsb
pop
mov
xchg
imul
ds
xlat
mov
adc
xor
xor
and
gs
imul
mov
into
adcb
ss
int3
hlt
sub
loopne
mov
cltd
shrb
rclb
pop
and
es
pop
push
cmpsl
dec
fwait
shlb
mov
add
or
add
add
or
out
pop
jae
inc
add
mov
or
cmp
ljmp
and
shlb
cmp
movsb
push
popf
cmp
testl
xchg
push
aad
inc
lds
jg
cmp
lret
lods
test
stos
int
std
cmp
sub
addr16
lret
add
pushl
iret
ficompl
sbb
fnstcw
pop
cmpsl
fiaddl
push
addl
out
leave
push
jnp
mov
rolb
xchg
outsl
adcl
ja
es
sbb
pop
pop
hlt
ja
mov
xchg
jnp
xchg
sar
sbbb
das
xchg
repnz
add
sub
or
mov
clc
jl
mov
mov
mov
out
xor
adc
sti
fsubp
dec
mov
nop
test
popl
xchg
je
outsb
iret
jp
and
outsb
pop
sbb
pusha
data16
push
insl
add
mov
pop
mov
mov
dec
and
ret
add
lea
mov
mov
mov
jle
insl
fdivr
inc
lock
daa
imul
divl
ficompl
sti
adc
mov
movsl
jo
lds
sbb
ss
pop
shll
data16
mov
pusha
stos
jb
js
mov
aam
mov
leave
cmp
ficoml
js
repnz
push
dec
and
jg
fisubs
xor
cld
jnp
xor
dec
cmp
jns
mov
cltd
fstpl
ret
movsl
pop
or
or
subl
and
ja
inc
cmp
popf
lods
loope
test
outsl
mov
fstpt
inc
and
les
push
mov
sub
xchg
int3
jns
dec
adc
testl
gs
pop
data16
dec
sahf
cli
push
pop
nop
xchg
test
mov
outsl
mov
stos
popa
setge
jg
mov
sti
dec
sbb
gs
mov
pop
fwait
cld
inc
lcall
dec
mov
jmp
jno
sti
movsb
andb
mov
fcmovnbe
add
inc
enter
mov
inc
ds
mov
gs
dec
mov
daa
rclb
pop
mov
and
fs
dec
and
loop
jo
mov
xchg
cmp
mov
sarb
ror
cmp
fstps
add
enter
jl
jp
cmp
dec
out
pop
std
add
rclb
mov
insb
ljmp
lahf
dec
ret
or
stc
insl
test
inc
les
xchg
mov
fldln2
scas
add
jno
add
inc
inc
dec
inc
jno
lret
imul
jmp
jo
fdivrp
cmp
in
jle
stos
fdivrl
push
in
js
xor
inc
lock
xor
cmp
pop
pop
inc
push
rorb
mov
sbb
jmp
daa
mov
mov
fimull
jp
je
rorb
subl
dec
cli
shrl
cmp
scas
xchg
shrb
bound
cmp
ret
dec
xorb
pop
stos
sahf
iret
pop
dec
sbb
cmpsb
repnz
or
bnd
sub
into
push
jg
push
pop
aam
lahf
cltd
mov
les
fcomp
xchg
cmp
js
push
js
stos
inc
jmp
dec
pop
add
xorb
xlat
fwait
adc
outsl
das
inc
cmp
dec
js
lods
lock
jg
js
xchg
fsubr
in
xor
test
jno
mov
xchg
push
inc
push
adc
mov
jle
xor
jns
sbb
jle
jo
fnstsw
repz
push
mov
jb
mov
fisttps
sbb
mov
pop
adc
sub
and
add
inc
lcall
ret
sbb
iret
enter
xor
inc
ja
adc
daa
jl
fstl
out
dec
push
or
enter
or
sbb
add
push
idivb
pop
mov
lret
mov
fnstenv
popf
je
xor
mov
hlt
sbb
in
push
push
add
sbb
dec
ret
ror
inc
jmp
or
jno
mov
pusha
mov
cli
les
dec
add
cld
xchg
push
ljmp
jo
sbb
add
and
aad
cs
cmp
add
and
ja
sti
sub
and
mov
and
stc
pop
lret
jecxz
jmp
fucomp
movsb
mov
leave
sub
popf
hlt
adc
sub
adc
lea
ret
sub
or
ljmp
jo
adc
test
jg
push
jne
ret
push
and
sti
ljmp
int3
int
and
cld
and
xchg
andl
or
les
rorb
aas
xchg
jl
aas
pop
push
lods
sar
jb
push
mov
in
imul
xchg
out
push
fisubs
in
daa
cmpsb
dec
movsb
sbbb
mov
mov
and
jns
test
sbb
lock
lock
in
mov
aaa
mov
pop
insb
pop
add
fimuls
pop
adc
mov
ret
pop
xchg
sahf
jns
lds
mov
and
mov
fistpll
out
mov
lahf
testl
cmp
dec
nop
xchg
sub
test
pop
icebp
out
sub
mov
int3
mov
pop
pop
repz
or
jg
lea
dec
lods
das
lds
js
or
iret
and
fsts
and
xchg
idivl
dec
sub
jbe
push
in
dec
hlt
int3
or
push
fwait
rol
cmp
repz
pop
push
and
test
in
lahf
in
stos
push
jl
leave
inc
dec
repz
sub
or
pop
test
test
push
pop
shll
lret
dec
pop
sub
iret
adc
scas
or
arpl
push
pop
xchg
pop
inc
jns
mov
and
out
popa
or
inc
pop
jnp
cmp
mov
stos
shlb
and
add
dec
mov
or
stos
dec
pusha
movsb
leave
std
cmpsb
testl
lods
jne
rcr
shll
cmpsb
cwtl
mov
mov
cmp
data16
sbb
loop
push
fcmove
loope
push
adc
cmpsb
push
clc
out
xchg
jecxz,pn
xchg
jecxz
int3
cmp
sub
inc
lcall
imul
jle
add
out
sbbl
sti
cmp
gs
mov
dec
adc
lahf
push
js
and
xchg
sub
push
jb
fisttpll
lret
repnz
rcr
dec
scas
ret
mov
decl
repnz
mov
shrb
push
cmp
mov
nop
pop
ds
lods
add
and
aad
inc
sub
daa
cmp
pop
les
cwtl
loopne
inc
xchg
aam
xchg
inc
les
bnd
sbb
dec
fdivrs
aas
xchg
rcrb
add
cmc
push
mov
sub
and
and
cmp
pop
mov
ret
icebp
call
mov
fld
mov
jne
lcall
andb
shrb
je
mov
call
push
mov
stos
lock
or
fcoml
fldln2
rcll
cmp
xchg
dec
push
not
jge
test
push
rol
push
insb
fwait
mov
push
mov
fadds
repnz
inc
sbb
inc
out
lcall
pop
je
stos
jg
rol
push
mov
sbb
sar
inc
dec
aas
fwait
cmpl
cmpsl
imul
sbb
lds
cltd
mov
mov
int
stc
push
sbb
sbb
adc
popa
scas
or
adc
jl
sub
mov
mov
aaa
jns
test
rolb
and
jecxz
add
xchg
repz
mov
add
xchg
xor
pop
rol
ffree
mov
jle
pusha
aam
daa
repz
pop
fstl
mov
je
fistpl
js
mulb
xor
jnp
add
jl
sub
ret
stos
adc
loopne
int3
and
lock
push
repnz
sbb
out
cmp
test
movsl
inc
xchg
notl
jl
mov
cmp
mov
dec
push
and
stc
xchg
stos
mov
xor
icebp
mov
pushf
cmp
push
stc
pop
ror
or
rorb
xchg
ja
outsb
fidivs
and
push
inc
push
lret
and
sbb
bound
mov
fbstp
pop
add
test
shlb
dec
cmp
out
push
mov
inc
aas
adc
sbb
mov
inc
cmp
sbb
inc
cld
add
mov
mov
popf
mov
gs
or
push
es
sub
iret
repz
fs
jmp
mov
jmp
add
pop
pushf
out
jnp
cli
loop
pop
int3
dec
js
pushf
jmp
adcb
dec
pop
fildl
inc
mov
nop
sub
imul
icebp
adc
sbb
repz
push
out
arpl
jp
outsb
xor
js
std
pop
daa
mov
dec
and
pop
shlb
arpl
flds
cmp
rol
pop
out
sbb
enter
test
jns
push
cli
outsb
cmpsl
in
out
push
pop
rorl
and
pop
dec
jl
push
ja
dec
xor
sub
adc
data16
dec
jmp
add
mov
rclb
testl
xchg
lahf
mov
ror
shll
inc
xorb
fyl2xp1
adc
loope
in
cmp
cmp
push
mov
jge
xchg
into
adc
fcmovnu
sbb
fistl
leave
fcoms
adc
sbb
ja
jo
rcl
xor
dec
sub
mov
clc
icebp
jg
fiaddl
jns
and
jbe
pop
and
hlt
int3
insb
lcall
dec
and
cmp
dec
push
inc
dec
fisubs
inc
xorl
das
ret
xchg
and
sub
cmp
je
leave
push
aas
dec
repz
dec
add
mov
sub
movsb
cmp
mov
xor
jae
sbb
or
cmp
popf
sbb
mov
dec
mov
pop
mov
test
js
fwait
xor
pop
push
or
popa
jne
and
push
aad
jl
and
es
imul
popf
mov
lock
and
xchg
iret
scas
scas
sbb
mov
pop
outsl
sub
add
jl
cmp
rcll
push
lret
or
or
inc
fistps
push
pop
fnsave
les
nop
fdivs
in
xchg
cli
xchg
aam
sub
sahf
jnp
andl
push
pop
ficompl
stc
adcl
lret
sbb
ljmp
mov
shr
cmp
sub
jmp
dec
pop
subl
pop
repnz
mov
and
fadds
pop
mov
in
inc
test
aas
out
nop
mov
pusha
repz
lods
imul
sbb
jno
mov
pop
in
pop
mov
leave
ja
fiaddl
mov
xchg
mov
inc
fldt
inc
push
adc
andb
mov
rorl
ret
jge
adc
pop
dec
lods
dec
gs
ja
sarb
jbe
pop
imul
int
jl
repnz
sbb
sub
or
xchg
jne
js
cld
daa
stos
lock
sub
or
sub
loope
adc
mov
cmp
jb
mov
sub
adc
inc
sbb
bound
mov
iret
imul
sahf
sbb
pop
adc
jecxz
nop
dec
shlb
rcr
nop
lcall
sbb
cwtl
ja
fsubs
int3
inc
dec
or
stos
dec
jg
pop
ret
imul
add
jecxz
fwait
sbb
push
xchg
rorb
add
loopne
fisubl
pop
popa
std
stc
jp
out
imul
mov
and
or
sbb
push
cmp
or
std
fistpll
sbb
pop
jns
imul
push
shrb
push
or
pop
seto
push
xchg
mov
cmp
or
xchg
pop
pusha
std
std
cmp
ss
jge
add
mov
push
nop
aaa
pop
push
mov
fst
jg
dec
adc
cmp
repz
lcall
dec
pop
jnp
shl
pusha
fildl
jl
or
aam
sahf
dec
and
inc
add
xor
cli
push
sbb
cmpsb
enter
jnp
in
mov
in
movsl
jg
dec
ficompl
dec
mov
mov
movsb
call
xchg
and
xor
push
je
pop
das
movsb
clc
cmpsl
or
lods
sub
cmp
imul
mov
std
mov
or
lret
movsb
push
jns
push
sbb
jmp
mov
inc
or
push
int3
push
repz
pop
cmpsb
pop
ret
xchg
and
adc
push
mov
inc
js
xorb
and
test
dec
and
mov
fistpl
rorl
or
addr16
out
push
xchg
push
inc
ret
mov
outsl
jbe
and
insl
pop
mov
clc
outsb
stos
or
sub
movsb
lods
pop
dec
rol
cmp
fsts
divps
inc
inc
xchg
add
sub
call
mov
fwait
push
lret
push
mov
add
test
fisubl
dec
in
nop
inc
inc
les
fwait
sbb
mov
and
icebp
mov
in
and
adc
cmp
pusha
fnstenv
lds
mov
add
or
inc
xchg
mov
and
inc
lret
iret
xlat
lods
dec
inc
lods
iret
xchg
sahf
jecxz
jbe
xor
cli
sub
nop
cltd
sub
cmp
xor
sbb
lret
ret
cmpb
dec
mov
inc
gs
mov
pop
push
sbb
pop
xor
ja
fdivrs
repz
cmp
xor
and
inc
cltd
sbb
ds
xchg
fldt
sub
push
or
mov
cmp
add
and
mov
sub
enter
dec
adc
mov
jl
cmp
popl
mov
adc
int3
lds
into
jno
dec
dec
sahf
adc
loope
and
xchg
daa
pop
xchg
fadds
mov
or
sarb
mov
and
xchg
lret
in
arpl
mov
adc
fs
ffreep
sub
jg
add
pop
mov
adc
xchg
adc
push
ret
mov
cmp
fucomp
pop
notb
add
or
mov
mov
int
jmp
ds
cld
movsb
inc
test
push
sub
fdivrs
stos
into
daa
inc
out
lods
adc
pextrw
dec
and
add
mov
sub
and
dec
mov
pop
mov
pushf
jb
lods
sub
aad
ret
scas
jl
xchg
dec
insl
mov
xchg
in
cmc
lret
cs
pop
and
mov
leave
cs
dec
subl
mov
imul
ret
push
mov
cmp
rcrb
sub
jmp
arpl
xor
scas
lock
inc
mov
mov
mov
sub
mov
push
push
stc
push
cli
jmp
push
cwtl
aas
repz
enter
aas
cmp
lret
inc
imul
sub
cmp
adc
sahf
loopne
and
nop
sbb
jae
mov
add
sbb
mov
dec
clc
andb
nop
pushf
aas
pop
push
xchg
fcoms
pop
std
lds
fisubrs
jmp
jmp
adc
push
jo
pusha
xor
out
inc
jge
mov
stc
scas
data16
mov
mov
mov
imul
repnz
int
push
sub
cwtl
push
dec
cmp
insl
adc
in
insb
aaa
pop
add
or
push
inc
mov
ret
shrb
arpl
enter
mov
dec
into
repz
xlat
and
pop
xchg
mov
out
ja
push
lods
subb
dec
sti
pop
cwtl
xor
xchg
das
sbb
int
cmp
sbb
shlb
pop
or
pop
sub
xchg
jb
rorb
pop
addb
mov
xchg
aas
ljmp
mov
cmp
add
cmpsb
cmp
rol
and
rcrl
fistpll
dec
sbb
iret
sahf
orl
out
sbb
in
inc
test
sub
xor
inc
icebp
pop
iret
arpl
call
fstl
lcall
je
cmp
and
leave
push
and
mov
neg
mov
aas
and
dec
cmpsb
or
xor
sbb
stos
jl
mov
jne
enter
dec
out
pop
add
fadd
push
add
jmp
aam
xor
mov
les
or
add
mov
nop
aad
int
mov
inc
xor
inc
in
insl
add
mov
fimull
add
dec
enter
xchg
jbe
add
and
loope
mov
lcall
sbb
mov
pop
xor
pop
dec
and
push
sub
mov
mov
in
adc
lahf
jb
shrb
out
inc
popl
bsr
push
pop
cmp
in
cmp
mov
dec
mov
aaa
mov
cwtl
xlat
mov
rol
stos
pop
test
adc
jl
push
mov
mov
cmp
mov
add
inc
push
dec
cmc
les
imul
dec
jnp
imul
loop
add
cmpl
daa
fiaddl
cmp
stos
fsts
cwtl
xlat
aad
push
mov
ficoms
or
and
fdivl
ljmp
or
hlt
xor
mov
cltd
mov
ret
mov
sub
cmc
jge
lret
adc
and
add
jo
sahf
aas
pusha
mov
enter
lock
movsl
int3
gs
jbe
cld
js
shrl
inc
push
xor
js
fwait
test
aad
shll
fs
cmp
loope
leave
sub
pop
or
jmp
aad
pushf
lds
pop
loop
ret
push
xchg
cmc
out
icebp
rorl
repz
dec
dec
out
lds
jne
and
jmp
das
mov
mov
pusha
add
inc
decb
cmp
dec
int
add
add
stos
sbb
fwait
pop
call
mov
or
pop
dec
add
insb
mov
bound
cmpsb
call
pop
imull
js
mov
cmp
xchg
adcb
mov
cld
push
jge
xchg
xchg
sbb
arpl
push
mov
gs
daa
sbb
pop
mov
sbb
shl
inc
dec
mov
inc
std
pop
push
rdtsc
sbb
rorb
or
xchg
popa
mov
push
lret
jb
outsl
inc
lds
cmp
pop
mov
inc
inc
js
fucomi
sbb
mov
fstp
jne
push
jle
mov
es
enter
mov
js
adc
jae
xchg
rcrb
scas
xchg
jns
or
push
mov
or
cltd
xchg
push
fisubrs
mov
leave
int3
roll
xor
aam
push
in
xor
fcompl
sub
and
rcrl
xchg
int3
aad
lds
dec
daa
int
cs
and
xor
out
inc
and
cmp
scas
and
movsl
push
and
les
mov
clc
ja
lcall
int3
push
lds
xchg
cltd
loop
shll
cmc
mov
jmp
pop
shr
jbe
mov
repnz
mov
rclb
in
or
lahf
loopne
mov
push
push
test
loope
lahf
sti
aas
shrb
jg,pn
enter
cmp
stos
mov
xor
inc
dec
hlt
inc
pop
or
jbe
addr16
sub
xlat
cmpsb
into
int3
jg
cmp
in
or
mov
lods
cmp
mov
inc
or
dec
repnz
negl
stos
aaa
das
dec
jno
aaa
iret
ror
cmp
stos
gs
in
out
iret
repz
xchg
mov
mov
push
jge
add
nop
dec
inc
ror
mov
mov
movsb
lcall
loope
mov
stos
push
inc
cld
dec
or
fisttps
stc
andb
pop
ret
scas
pop
mov
and
xchg
cmp
inc
adc
iret
into
mov
mov
inc
lods
add
movb
shrb
je
or
dec
cwtl
sarb
pop
jae
loopne
add
sub
mov
mov
push
mov
in
popf
sub
sub
lret
push
cmc
mov
xchg
or
stos
test
shlb
lret
mov
adc
lret
mov
sbb
dec
in
mov
repnz
fcmovnu
and
inc
xchg
xchg
movsb
into
cmp
repnz
lods
pop
jae
imul
cld
hlt
lds
adc
ljmp
pop
ljmp
jle
fbstp
leave
fldt
or
mov
test
push
sbb
cmp
ret
xor
jmp
jno
mov
adc
pop
mov
ret
pop
out
inc
and
xor
inc
pop
sub
cmp
jmp
xlat
inc
icebp
mov
push
mov
mov
push
pop
jbe
jg
orl
subb
mov
and
or
sti
cmp
inc
pop
pop
mov
mov
dec
nop
dec
adc
ljmp
es
sub
ror
push
xlat
mov
int
adc
inc
dec
mov
iret
out
push
or
insb
iret
popf
or
or
pop
mov
out
inc
mov
adc
dec
lret
jnp
adc
lret
test
and
fwait
xor
xchg
data16
bound
sub
mov
add
lods
mov
pop
inc
js
jb
and
dec
or
push
addr16
outsl
jne
cmpsl
push
pop
sahf
cld
stos
inc
lds
pop
cmpsb
pop
imul
adc
arpl
and
mov
aam
ljmp
mov
pop
ds
xor
leave
cmp
add
cmc
push
cmp
inc
sub
or
loope
mov
mov
mov
add
int3
pop
fidivs
inc
mov
subb
xchg
inc
jb
aam
sub
and
mov
xor
or
scas
xchg
add
push
add
lods
mov
inc
sbb
xor
rolb
pop
dec
jp
loop
into
dec
cmc
fs
lods
cmc
int
mov
mov
int3
in
pop
cld
pop
pop
inc
aaa
add
sbb
jae
and
cmc
cld
movsb
pushf
mov
add
movsb
dec
sbb
int
mov
sahf
push
mov
pop
ret
mov
mov
rorb
sub
cld
dec
push
add
cmp
stos
mov
mov
adc
stos
cmp
sbb
lahf
aad
sub
aas
mov
jecxz
adc
xor
mov
pop
inc
mov
pop
movl
enter
test
add
dec
sbb
faddl
jg
test
loope
xchg
lret
inc
xor
mov
inc
sbb
cmp
sbb
pop
pop
pop
lcall
leave
push
es
pop
mov
sbb
call
cmpsl
cmp
inc
cwtl
pop
ror
mov
nop
aad
push
jo
in
bound
int3
jg
add
into
adc
jnp
sbbl
cmpsl
dec
test
add
fistpll
inc
insl
in
les
out
jmp
roll
pop
movsl
aas
leave
outsl
and
pop
movsl
test
sbb
cmp
jecxz
loop
in
xor
push
fnstsw
cmp
xchg
dec
pop
mov
cmpsb
jbe
enter
loopne
inc
sub
jmp
flds
push
fwait
cwtl
movsb
and
cmp
das
loope
pop
cmpsb
aad
loope
add
inc
repnz
jns
jg
nop
xchg
dec
sti
add
mov
pop
inc
push
enter
add
dec
lcall
loope
loopne
jbe
cwtl
addb
jecxz
clc
sahf
inc
fwait
mov
mov
nop
sub
jl
lods
adc
inc
pop
setns
orl
inc
negb
jle
adc
fdivp
leave
and
lret
cmpsl
outsl
inc
mov
inc
inc
push
cs
call
pop
or
pop
fiaddl
xchg
mov
lods
cmp
xchg
fs
adc
inc
xchg
sub
xor
ljmp
dec
mov
repz
andb
les
loope
loop
and
jb
insl
and
xchg
stos
ret
inc
negb
sub
outsb
push
lods
add
xchg
dec
roll
mov
je
test
inc
add
push
mov
cmp
mov
push
popa
mov
bsr
cmp
and
cld
mov
xchg
imul
cmp
mov
cltd
xchg
jns
mov
int
inc
xchg
imul
dec
movsb
ja
fmull
mov
jb
push
xchg
cmp
imul
mov
jo
fcmovnbe
cmp
fwait
cmp
mov
ret
je
inc
in
notb
jb
mov
ja
mov
lret
lret
xchg
jnp
arpl
jno
jne
pop
test
jno
lea
subl
xor
jbe
add
lods
dec
std
jb
jb
dec
ret
pop
pop
mov
sbb
repz
push
jmp
add
shr
inc
xchg
call
sbb
enter
in
leave
and
dec
dec
inc
or
add
outsl
mov
shlb
sub
popa
mov
sub
in
sbbl
add
mov
inc
gs
push
imul
hlt
mov
inc
pop
sbb
sub
add
testl
jb
jl
addr16
mov
and
or
push
push
pop
ret
loope
sub
mov
jae
insl
xchg
or
leave
xor
inc
push
mov
mov
push
scas
jmp
xor
mov
out
rolb
pop
rcrl
ret
dec
jl
cmpb
cmp
mov
cli
outsb
icebp
mov
cmpsl
sar
jns
add
bound
insb
push
mov
jecxz
in
mov
xor
adcb
sub
cli
push
xchg
int3
cmp
and
inc
lods
cld
fwait
scas
fdivrp
repz
das
cmp
out
popa
push
iret
add
int
add
jle
dec
insl
fstpl
pushf
mov
imul
test
pop
push
jns
loope
push
lret
jns
into
scas
inc
adc
xchg
iret
sub
and
sub
fildll
enter
mov
repnz
add
outsl
lahf
sti
cmp
aaa
mov
rcr
xlat
or
jp
cmp
push
ds
test
idivb
addl
push
adc
outsl
xor
bnd
nop
push
xchg
shrb
xlat
pop
mov
imul
adc
pusha
add
into
mov
mov
cmp
jns
add
mov
jle
imul
stos
push
stos
inc
sub
sub
stos
cmpsb
cmp
xchg
fidivrs
pop
pop
and
daa
add
xchg
arpl
xchg
lods
adc
inc
mov
movsb
insb
inc
leave
dec
lds
cmp
inc
dec
jo
add
lahf
xor
lods
jmp
out
sbb
jb
mov
mov
mov
or
mov
lret
sahf
enter
cmp
jg
add
inc
inc
xor
nop
cmc
inc
out
into
lds
scas
fcomps
test
dec
or
push
adc
push
adc
push
into
ds
pop
xchg
fcmove
xchg
stos
push
sti
mov
or
jns
pop
dec
pop
mov
jg
scas
ds
ror
jmp
into
mov
imulb
mov
sbb
dec
clc
jg
adc
mov
mov
or
lret
ja
sub
push
pop
push
test
add
push
loopne
and
cmp
push
fwait
call
inc
push
dec
push
pop
movsl
cmpsb
sub
push
in
rclb
fimuls
adc
push
push
add
mov
fcomi
add
push
test
testl
es
and
hlt
mov
repz
in
stos
roll
inc
nop
dec
add
lds
lcall
fadds
add
stos
mov
lahf
or
dec
cs
mov
das
mov
sbb
mov
and
inc
test
fisttpl
ss
aaa
iret
mov
mov
cmp
sbb
ret
dec
mov
sub
cmp
dec
or
loop
or
sub
int
ret
add
mov
sub
pop
xor
imul
cmp
mov
xchg
shlb
or
pop
jb
in
add
mov
push
xor
cmp
ficompl
lcall
call
out
imulb
jnp
adc
push
popa
mov
lret
xor
aad
sub
test
add
lods
outsl
icebp
mov
inc
out
sub
sbb
cmc
dec
cmp
mov
and
lods
mov
mov
mov
out
in
xor
test
xor
aas
movsb
jb
sub
or
out
test
les
and
frstor
sbb
incl
mov
and
push
pusha
xor
inc
mov
lods
ret
and
clc
adc
pop
hlt
sbb
nop
inc
arpl
repz
phsubw
in
and
pop
out
imul
fs
or
jns
mov
into
xchg
push
dec
cli
xlat
sahf
mov
arpl
mov
int3
cmp
lea
andb
xchg
inc
dec
mov
dec
pop
fbstp
push
xorl
and
lcall
adc
jno
lods
mov
mov
add
lds
icebp
push
xor
or
sub
filds
loope
stos
inc
adc
cmp
rcl
mov
dec
or
mov
mov
scas
shlb
mov
mov
lods
into
and
sub
aas
cmpsb
adc
enter
rcr
adcb
inc
sbb
stos
mov
icebp
incl
call
xor
insl
sbb
push
push
lods
addr16
add
imul
inc
stc
sub
fisttpll
or
popa
popw
cmp
out
jb
sub
pop
cmpsb
clc
shll
xchg
push
daa
cmp
push
out
int3
jmp
into
xor
test
xchg
adcb
xor
lahf
dec
rol
xor
sbb
xor
add
mov
xchg
pop
cmp
mov
imul
outsb
mov
aad
cli
fst
push
das
xor
sub
mov
insb
not
fs
push
dec
bound
andl
adc
mov
pop
scas
mov
xor
cmpsl
cmp
dec
popa
xor
sbb
pop
aam
xchg
and
out
nop
inc
cmp
repz
ja
and
mov
inc
jo
push
jecxz
in
add
stos
add
jecxz
dec
mov
ficoml
jl
ficompl
mov
pushf
std
pop
jbe
ret
addb
shl
js
enter
insl
pusha
inc
mov
lret
mov
ret
leave
mov
int3
add
push
mov
scas
test
push
xchg
orb
jge
jno
shlb
cmp
dec
and
and
es
mov
lods
fwait
les
fidivrl
cmp
or
cmp
xchg
je
adcb
add
fisubrl
inc
arpl
mov
mov
lahf
cmpb
pop
inc
push
lret
aam
call
sbbb
inc
mov
ficoms
test
dec
mov
lock
int
pushf
inc
out
fsubr
inc
pop
rcrb
rorb
int3
data16
push
pop
xchg
fmul
fsub
daa
cld
daa
inc
sbb
sbb
add
imul
je
out
rcrl
cs
or
cmp
jmp
loopne
cmp
out
in
or
movsl
push
dec
movb
mov
mov
scas
fnstsw
adc
xor
clc
cmp
and
xchg
and
test
or
jnp
out
pop
pop
enter
scas
jl
movl
mov
add
and
mov
mov
mov
or
ds
out
pop
pop
sub
in
sub
scas
push
and
dec
mov
adc
or
jne
adc
pushf
sahf
loopne
daa
inc
cs
lret
cmp
sub
mov
pop
pop
lds
jae
loope
push
lret
xchg
mov
dec
aam
ret
icebp
adc
ret
add
test
and
cmp
mov
das
and
and
adcb
imul
mov
rorl
mov
sbb
xor
leave
jmp
or
ja
sbb
data16
cmpb
dec
into
cs
stos
jno
and
and
push
push
adc
inc
mov
fs
fwait
mov
xchg
loop
shlb
pop
mov
mov
inc
int
dec
inc
mov
sbb
push
jns
dec
inc
cmp
js
sub
adcl
in
lock
adc
jp
jle
bound
les
idivl
or
pop
dec
mov
mov
push
sbb
stc
lock
jmp
rorl
xor
cmc
shl
jbe
push
jmp
fisttpll
jo
jecxz
aad
pushf
cld
mov
outsl
dec
cmc
pop
cmc
nop
sub
jle
inc
sbbl
stos
xlat
xchg
mov
into
sub
inc
pop
and
out
movsb
lds
ret
fs
adc
inc
pusha
jns
je
adc
jnp
pushf
ja
pop
sbb
lock
mov
lea
or
cld
push
inc
ja
sub
mov
lret
lods
xchg
inc
mov
sar
push
les
cmp
pop
add
int3
stos
xchg
loopne
das
mov
cltd
adc
mov
mov
mov
mov
mov
mov
rclb
mov
jo
xorb
add
imul
and
test
push
stos
jb
call
mov
add
loopne
or
jns
outsl
mov
pop
les
cltd
jmp
xor
xchg
jp
mov
daa
out
scas
roll
and
cmp
sub
clc
mov
shlb
or
add
or
dec
push
mov
or
cld
fstps
aam
cmp
add
pop
xchg
sbb
rcr
xor
sti
mov
mov
dec
or
leave
lcall
mov
add
jnp
in
lea
lock
pop
or
loopne
out
jl
scas
in
js
aas
dec
xchg
jg
xchg
lds
aad
inc
sbb
arpl
cld
jp
ja
mov
loop
aas
rcr
dec
lea
adc
mov
xchg
xor
fstpl
add
dec
mov
shlb
inc
popf
mov
mov
pop
lret
or
and
jo
sbb
fldt
cltd
cwtl
dec
fwait
cmp
gs
mov
pusha
xor
sbbb
xchg
jmp
clc
in
push
mov
fs
cltd
imul
pop
mov
xchg
mov
xchg
dec
gs
pop
inc
in
scas
jbe
inc
out
int3
repz
clc
ss
ret
in
cmp
xchg
lret
pop
fisubl
ss
jmp
adc
lods
imul
stos
int3
lea
inc
add
or
int
aad
sbb
mov
inc
xlat
push
enter
inc
adc
je
sub
mov
xchg
repnz
and
push
in
pop
and
push
mov
shrl
and
imul
fldcw
or
popa
orb
call
cmp
cs
andl
shrl
sti
inc
repnz
lock
imul
scas
pop
mov
js
cwtl
stos
popf
add
push
xchg
shll
jp
dec
ss
scas
loope
int
ret
in
pop
lea
jp
sub
cmpps
xchg
inc
mov
fsts
mov
add
jmp
leave
aaa
xchg
lock
test
dec
push
in
int
push
ja
in
jb
aas
loope
push
rolb
or
mov
add
add
jbe
mov
pop
inc
hlt
shlb
loope
jmp
push
test
pop
mov
jmp
leave
and
loope
dec
enter
into
in
cmp
and
pop
sub
dec
mov
les
ret
xor
aam
in
js
lds
into
sub
and
dec
sub
stc
shrb
gs
shr
push
lock
pushf
cld
mov
inc
int
push
enter
clc
int3
mov
mov
rol
scas
and
inc
stos
and
xchg
jecxz
mov
inc
data16
lock
add
cmp
std
adc
pop
mov
ret
xor
mov
imul
movsl
fstpt
lods
cs
xor
add
mov
pop
cmp
in
pusha
xor
out
dec
popf
push
test
push
mov
add
cmc
and
loope
push
in
mov
or
pop
test
and
mov
sbb
lods
inc
inc
pop
aam
or
sub
loop
aas
sti
arpl
pop
xor
aad
ret
dec
mov
cmp
rcrb
inc
lahf
adc
inc
leave
adc
mov
jg
jp
bnd
inc
add
je
fiaddl
int3
subl
or
pusha
push
xchg
sub
lock
ret
fldenv
add
xchg
sub
sbb
cmp
and
push
cld
std
pop
test
lahf
jo
push
push
fwait
ds
hlt
sbb
ret
mov
fisubs
mov
pop
dec
cmp
sbb
sahf
lcall
pop
cmpsb
pop
sub
sub
inc
test
dec
jmp
cmp
mov
add
dec
mov
and
movsb
dec
sub
cmp
xchg
scas
pop
dec
jecxz
arpl
push
or
and
sbb
addr16
xor
dec
test
push
lods
mov
push
inc
sub
sub
push
pop
call
cmp
xchg
shll
add
scas
int3
xlat
push
fwait
nop
xchg
enter
gs
cmpsl
jmp
outsl
sar
push
test
sub
inc
addr16
or
inc
in
out
mov
jns
mov
inc
push
push
pop
cmp
push
cmp
inc
popf
ja
aad
out
fdivl
movsb
push
shll
xor
imul
xchg
pushf
sti
mov
sti
sub
lds
addl
or
fsubs
pusha
adc
sub
and
fs
jecxz
add
icebp
int3
iret
mov
into
pusha
dec
sbb
inc
es
xchg
inc
mov
inc
adc
rcll
dec
add
aaa
xchg
jecxz
dec
xor
mov
lcall
mov
mov
mov
adc
cmp
fildll
cmc
scas
imul
mov
xor
mov
data16
pop
dec
mov
jmp
xor
pop
std
stos
mov
ja
mov
lods
test
test
gs
adc
das
jb
lds
and
jp
dec
or
test
insl
adc
adc
sarb
cld
inc
imul
xchg
cltd
sub
aad
pop
pop
pushf
ja
lret
sub
jns
jmp
mov
or
pop
out
sbb
ss
das
xchg
add
or
xchg
and
adc
imul
lods
sub
sub
push
dec
cmp
test
sbb
pop
mov
movsl
fsts
fwait
mov
xchg
xchg
iret
std
mov
inc
xchg
aas
lret
outsl
out
mov
ljmp
cmp
cmp
js
mov
adc
mov
inc
push
stos
cwtl
addr16
into
ljmp
add
test
lock
adc
mov
call
inc
les
aas
imul
push
roll
xchg
jnp
sbb
dec
je
test
sub
icebp
mov
jmp
imul
adc
stos
aad
push
jns
movsb
jle
aad
dec
cmp
lea
fldenv
add
rclb
inc
aas
stc
rorb
adc
rorl
lods
sbb
fdivrs
ljmp
fld
stos
arpl
or
lahf
inc
lret
adc
pop
movsl
push
int3
inc
test
xor
jmp
popf
push
cmc
inc
mov
scas
mov
les
dec
sub
rcr
push
cmp
test
ret
pushf
lret
jg
rolb
dec
addr16
add
sbb
sti
leave
mov
mov
xchg
jle
outsb
sub
mov
cwtl
repz
cmc
shl
jl
mov
push
push
xor
sbbl
sbb
scas
jp
jg
and
mov
mov
aam
int3
loope
ss
enter
and
inc
pop
ret
incb
filds
aas
insb
push
mov
jb
inc
lods
loope,pn
or
cmp
sub
adc
lret
inc
aaa
repz
inc
xor
enter
lock
cmp
aad
iret
mov
pop
dec
xor
dec
dec
out
stc
ljmp
scas
dec
aas
enter
cs
pop
push
and
in
mulb
sti
stc
mov
xchg
aaa
nop
mov
sahf
outsl
cwtl
push
repnz
ljmp
lret
cmpsb
subl
mov
outsb
push
outsb
push
sub
scas
add
push
or
sti
sub
mov
and
imul
jl
dec
xor
nop
inc
sub
jl
int3
out
mov
inc
orb
sub
cmp
mov
xchg
gs
shr
fldt
sub
jecxz
cmp
outsb
add
inc
rcrl
mov
out
ds
xchg
lds
push
inc
enter
adc
fsubl
iret
inc
push
add
pop
test
mov
push
je
push
mov
stos
xorb
cmp
jecxz
aad
jae
fwait
jnp
sti
push
pop
mov
cmpl
into
inc
mov
lods
pop
adc
and
rcll
fs
into
inc
jecxz
adc
sbb
hlt
orb
cltd
ss
adc
loopne
sbb
adc
pop
jb
je
fxch
pop
clc
mov
or
ret
sub
cmpsl
jp
cmc
pop
push
jecxz
lcall
pop
pop
shll
je
mov
arpl
stos
adc
test
pop
mov
out
scas
shl
fs
dec
imul
out
fnstenv
mov
jle
push
pop
shl
push
cwtl
lock
hlt
aam
subl
outsl
sbb
adc
pushf
mov
inc
cmovae
adcb
iret
popa
xor
mov
mov
add
and
adc
cmc
popf
loop
and
loope
add
adc
aad
dec
punpckhdq
cmp
jp
stos
out
cmp
inc
adc
push
pop
inc
cmp
add
sbb
lods
xchg
pop
rorl
bound
push
stos
pop
fs
or
xlat
inc
dec
lret
bound
push
fwait
lret
sbb
add
mov
lods
cltd
stos
add
pusha
fisubrl
pop
cltd
add
mov
sti
dec
ljmp
fwait
jae
push
add
or
cmp
xor
adc
push
pusha
mov
lods
cmp
lahf
rolb
add
gs
push
push
adcb
std
mov
pop
sub
andb
cmpsb
sub
leave
mov
dec
jmp
pop
inc
cmp
lret
xor
test
mov
enter
iret
pop
xlat
lret
ror
mov
clc
xor
clc
or
xchg
je
mov
and
scas
jbe
sub
outsl
xchg
inc
and
fstps
aas
mov
shrl
movsb
push
enter
sbb
xchg
and
dec
mov
cld
icebp
sahf
rolb
in
pop
js
mov
adc
mov
mov
mov
aaa
mov
cmp
gs
loop
out
sti
jo
lcall
je
pop
ja
repz
daa
sbb
pop
ret
adc
clc
shll
sahf
lock
mov
aam
push
add
dec
out
inc
in
mov
repz
leave
mov
bnd
ror
or
stos
inc
push
enter
inc
test
and
xchg
mov
test
pop
test
cmpsb
push
rclb
mov
pusha
mov
push
clc
fs
adc
fabs
addb
pop
sahf
push
jle
sahf
cltd
stos
jge
rolb
movsb
sub
shll
jo
cltd
inc
lahf
mov
push
inc
cmp
ret
hlt
les
xchg
inc
ss
add
imul
lds
dec
adc
ljmp
mov
sbb
dec
push
jg
cmp
pop
ljmp
cmp
repnz
xchg
push
daa
jno
pop
lret
lea
pop
mov
frstor
and
lret
das
lcall
rcr
pop
inc
pop
sub
fildl
je
mov
xor
mov
xor
dec
pusha
dec
mov
loopne
cmpl
cmp
mov
pop
jg
xchg
cli
mov
xor
outsl
dec
mov
bound
jge
outsb
push
jnp
mov
out
inc
aad
mov
push
les
xlat
imul
fwait
pop
test
sub
cmpl
mov
mov
jne
xchg
fnstsw
decb
add
test
jl
dec
sahf
xor
mov
mov
bound
cld
imull
mov
inc
xchg
lret
add
and
mov
xor
push
push
and
lret
sub
out
imul
push
mov
xchg
aaa
mov
dec
xor
pop
jnp
sbb
xlat
and
pop
dec
clc
xchg
mov
dec
loope
pop
sbb
pop
inc
movl
in
arpl
sub
sbb
icebp
in
inc
out
or
jge
xchg
pushf
cmp
and
mov
add
fcoms
bound
lret
mov
enter
xchg
lods
stc
adc
adc
pop
lock
mov
add
or
loopne
push
ss
xchg
dec
add
adc
or
cltd
fstpl
les
cmp
jmp
mov
jbe
cld
add
fistpll
add
cmc
sti
iret
jp
add
mov
sub
mov
jg
movsl
daa
xlat
pusha
test
jnp
imul
adc
mov
or
shll
ss
shll
aad
mov
sub
ss
adc
out
cmc
arpl
push
inc
rorb
movsl
out
icebp
mov
clc
nop
sub
movsl
xor
dec
ret
mov
pop
mov
jge
pop
ret
mov
sbb
or
push
idivb
mov
inc
imul
and
lods
in
jo
xchg
xchg
adc
xor
dec
mov
push
popa
push
sbb
adcb
xor
movsb
std
cmp
lret
fbstp
adc
enter
mov
mov
xchg
adc
and
lods
ss
push
cmc
repz
dec
loopne
out
out
imul
dec
rcll
decb
cmpsl
xor
lea
data16
stos
roll
sbb
lods
decl
mov
out
add
mov
push
push
or
fstp
in
lret
adc
movsl
mov
decb
and
leave
dec
xor
into
cs
aad
movsl
mov
enter
dec
test
xchg
push
std
dec
mov
mov
mov
shlb
shr
jge
roll
rolb
je
jbe
ret
popa
pop
mov
cmp
mov
sbb
jle
ja
adc
fwait
pop
loop
push
adc
xlat
add
rorb
adc
test
rolb
lret
xchg
into
call
xchg
inc
mov
dec
sbb
sti
push
ret
cs
jbe
into
push
rorl
sbb
sub
jge
xor
jl
adc
lods
fwait
or
adc
add
fs
mov
xchg
xor
icebp
adc
mov
jb
cmpsb
adc
aad
mov
dec
pushf
cmc
dec
cmc
sbb
push
in
fistl
std
mov
pop
adc
pop
sub
lds
pop
insl
inc
loopne
mov
cmp
jg
push
adc
xchg
adcb
sub
adc
rorb
mov
inc
pop
xchg
mov
leave
jmp
push
or
sbb
in
arpl
mov
lret
lods
fwait
mov
push
cwtl
push
aad
insl
jmp
inc
jae
shr
fisubs
bound
inc
outsl
pop
xor
pusha
shl
inc
rorl
shl
xlat
jg
mov
xchg
xchg
div
je
dec
out
mov
mov
clc
mov
mov
mov
loop
ret
pusha
sbb
in
inc
ja
and
int
leave
mov
fcomps
dec
cwtl
push
mov
sbb
insb
push
int
lods
mov
adc
daa
ja
mov
sub
sbb
mov
inc
stos
popa
xchg
or
or
and
scas
sub
leave
push
sub
jne
pop
dec
lcall
loope
scas
mov
jo
dec
hlt
sbb
add
lock
scas
cmpsl
fistpl
aaa
arpl
sub
add
aad
push
fstl
xchg
xchg
add
xchg
mov
and
daa
or
loop
movsb
and
jmp
cltd
add
xor
cmp
stos
cmp
mov
fldt
out
insl
cs
rclb
sbb
sar
cmp
ljmp
adcl
pop
ficoms
and
ljmp
xor
out
rcl
jle
xchg
fmul
rcrb
jg
sbb
fnstenv
sbb
imul
xchg
mov
popa
mov
gs
cmp
fbstp
shr
xchg
das
xor
popl
cmpsb
repz
cli
sub
cltd
into
out
subl
jne
imul
sbb
adc
inc
ret
aad
imul
or
loopne
pop
daa
cmpsb
nop
and
adc
or
mov
ret
je
inc
add
and
cmp
dec
push
das
cmp
punpckldq
cli
pushf
ss
stos
sub
mov
xchg
std
xchg
dec
rorl
popa
loopne
or
fildll
ret
hlt
jbe
sub
daa
mov
jg
lods
repnz
jl
out
cmpsl
leave
std
mov
cmp
fwait
cld
cmc
cmp
sahf
lea
dec
or
push
xchg
pushf
jl
scas
lds
sub
sahf
leave
xchg
stc
incb
data16
adcl
push
fmul
sub
fwait
cs
mov
jge
pop
xchg
lret
popa
or
mov
cs
mov
xchg
add
cmp
dec
test
testb
ljmp
cli
xor
adc
ljmp
roll
adc
sub
mov
and
xchg
stc
loopne
test
jno
xchg
mov
inc
xor
andl
or
repnz
mov
sub
xchg
push
test
pop
daa
jno
xor
lods
xorl
fmull
pop
stos
sub
loopne
adc
push
dec
adc
mov
jae
dec
jle
sti
insl
xor
inc
jns
sbb
mov
setns
je
and
xchg
lds
enter
cmpl
cmp
pusha
pop
mov
fs
sub
inc
add
pushf
pop
sub
xchg
stos
imul
mov
adc
mov
cmc
mov
into
inc
and
add
adc
add
add
scas
fs
insb
icebp
pop
sub
xchg
dec
sub
push
push
push
mov
and
sbb
inc
test
sbb
jne
sbb
xchg
sbb
adc
xchg
cmp
jecxz
jae
sub
jae
add
stc
mov
jle
lret
repnz
outsl
nop
add
add
sbb
push
insl
arpl
loopne
pop
das
leave
rolb
scas
sbb
or
mov
popl
cmpsb
sub
jae
les
lods
rorb
inc
psrlw
jno
lret
push
fidivrl
dec
test
xchg
rorl
inc
nop
xchg
sub
jmp
mov
in
enter
sbb
lods
fwait
inc
fdivrl
popf
push
ret
cmp
push
movsl
pop
stc
push
sub
or
int3
nop
stos
ficompl
pop
xchg
popa
pop
mov
inc
outsl
mov
mov
xchg
add
clc
cmp
rorl
fwait
dec
mov
test
mov
sub
shrb
mov
pop
dec
cmp
jle
in
lea
bswap
or
push
rol
loopne
inc
scas
daa
pop
push
icebp
fadds
lret
movups
cld
into
test
cmp
sub
movb
loope
pop
add
push
lgs
mov
push
lods
sbb
movsb
lahf
popa
dec
inc
or
and
push
dec
mov
stc
push
mov
push
popf
loope
test
sub
mov
pop
pop
orl
push
mov
xchg
pop
mov
aaa
jne
cmp
inc
movsl
pop
inc
xchg
popa
sub
inc
sub
add
inc
add
push
dec
add
enter
pop
adc
cmp
jp
cmp
cmp
and
mov
sub
mov
in
and
pusha
push
xor
incl
jg
cmpsb
clc
dec
shrb
and
adc
loopne
add
sub
and
aad
mov
pop
push
push
arpl
and
cltd
jb
aaa
mov
ret
push
movsb
lahf
lret
les
std
jno
out
dec
fldt
jae
mov
mov
or
fucomi
rorb
mov
cltd
xor
ret
mov
shl
dec
add
and
lods
or
adc
and
sahf
lret
or
mov
cmp
jno
dec
mull
dec
pop
mov
pusha
push
lods
add
stos
test
xor
cwtl
dec
into
fcomp
add
mov
loop
neg
ret
inc
ret
xchg
adc
cmp
mov
jbe
inc
xchg
imul
pusha
cmp
and
push
shrl
and
jg
outsb
or
sbb
pop
iret
enter
push
jns
sub
adc
fimull
or
out
xchg
jnp
lahf
or
cmp
shlb
ret
ret
imul
outsl
sub
ret
cmp
into
inc
cmp
fldl
scas
lret
adc
jg
fstp
movsw
sar
lock
jo
jl
ss
std
cs
xchg
and
rol
add
mov
adc
pop
xchg
es
inc
cmp
cs
in
jl,pt
ror
loop
sub
jb
stos
stos
ss
ds
sbb
and
sahf
push
and
xchg
xorb
mov
adc
movsl
ljmp
stos
xor
xor
lea
sbb
dec
add
loope
mov
xor
lret
mov
shll
push
test
adc
and
js
mov
jae
cmp
gs
pop
sub
xor
imul
push
inc
xor
jne
sub
xchg
shrb
mov
sub
add
jle
push
sbb
or
push
daa
cli
adc
or
push
push
popl
pop
aad
sub
loopne
sbb
fidivrl
sbb
stc
dec
mov
aam
mov
push
xlat
cmp
test
enter
push
mov
xor
pop
sub
and
hlt
imulb
sbb
add
sbb
pop
mov
outsl
sub
cmpl
and
fdivp
push
jmp
adc
stos
xor
sahf
imul
mov
mov
out
aaa
jnp
or
gs
xlat
fistpl
pop
mov
hlt
xchg
sbb
testb
iret
mov
mov
mov
add
mov
stc
add
dec
cmpl
mov
push
cltd
push
xor
mov
rcll
or
cmp
das
repz
jge
lock
add
inc
mov
pop
xchg
and
sti
cmp
xchg
les
xchg
pushf
das
xchg
daa
cld
push
add
fincstp
in
shll
out
daa
jge
in
push
push
xchg
sbb
dec
es
jecxz
sbb
in
xchg
dec
xor
mov
aad
adc
pop
ja
adc
in
xchg
jnp
pop
xchg
popa
jae
xchg
inc
inc
cs
sbb
movsl
push
mov
in
movsl
repz
cmp
ret
das
adc
pshufw
add
sbb
and
pusha
jle
pop
push
sbb
pop
adc
adc
into
cmp
xchg
jp
arpl
out
bound
stos
mov
outsl
sti
enter
scas
sbb
sub
cmp
push
and
jl
dec
imul
or
push
out
pop
sarb
or
cmc
push
aad
cli
add
jb
sbbl
sub
mov
dec
mov
inc
mov
ds
notb
leave
shll
jl
aad
shlb
pop
dec
into
jbe
imul
nop
cld
sub
out
pop
pusha
pop
lret
xchg
ret
and
mov
jl
mov
lds
jns
test
and
xor
push
mov
xor
int3
imul
or
fcomps
aas
cmc
subb
mov
pop
or
pop
int3
adc
cmc
sbb
fmull
lea
sub
xor
dec
cmpsb
mov
sub
or
sub
add
clc
lods
jge
in
cmc
daa
xchg
xor
je
sbb
push
xchg
ffreep
ds
jns
push
and
adc
xchg
and
sti
lret
adc
lcall
leave
lea
icebp
imul
ljmp
pop
cmp
ret
jae
mov
sbb
idiv
or
or
les
and
jle
adc
std
inc
mov
fists
mov
pop
xchg
mov
and
scas
mov
jnp
xchg
rclb
nop
xchg
shlb
int3
les
ret
add
leave
push
jmp
jmp
jb
sub
decb
lret
call
imul
mov
shll
ljmp
lock
cmpsl
movsl
xlat
inc
sub
jg
mov
fdivrl
cmp
stc
lar
sbb
ret
mov
repnz
add
inc
jns
fsts
dec
mov
cltd
ds
dec
mov
inc
mov
shll
cmpsb
lahf
mov
pop
add
inc
rcll
das
push
int
jg
mov
int3
jnp
mov
and
and
mov
adcl
sub
cli
push
sbb
and
into
inc
and
lret
push
mov
cmp
sub
sbb
lret
cmp
loope
and
fisubs
sbb
cmp
lret
jl
js
jne
incl
out
adc
movsl
dec
pop
and
pop
ret
pop
imul
dec
or
xchg
ja
mov
mov
xchg
imul
push
fidivrs
bound
add
or
pop
divl
gs
and
loopne
aas
jo
je
out
jb
xchg
fists
pop
cmpsl
adc
sub
dec
bound
insl
cltd
adc
xchg
shl
dec
shl
adc
jnp
or
sub
add
xchg
leave
push
inc
inc
iret
or
enter
repnz
pop
pop
sub
and
push
add
sub
rclb
inc
cmpsb
sub
bound
shlb
sarl
push
dec
shlb
mov
loop
add
and
clc
inc
cmp
cmpsb
mov
out
and
dec
aad
jle
das
sti
daa
adc
and
sarb
stc
hlt
xchg
and
insb
outsl
or
mov
insl
cmp
push
repz
scas
mov
pushf
jl
mov
pop
push
scas
push
mov
jmp
cmpsb
adc
bound
lods
bound
and
sahf
repnz
rolb
or
mov
xchg
jo
movsb
std
push
push
js
xor
xor
and
iret
cltd
decl
mov
dec
mov
adc
add
jp
ss
sub
out
dec
pop
inc
popa
test
mov
mov
xor
jnp
pop
sub
add
push
dec
into
jo
adc
pop
and
pop
mov
push
xor
jns
xchg
lret
lock
mov
imul
add
push
ret
int3
scas
pop
push
mov
cmp
and
or
mov
je
xchg
clc
push
insl
icebp
sbb
dec
mov
mov
fcmovbe
jbe
adc
xor
dec
and
xor
inc
sbb
mov
mov
dec
xor
mov
in
mov
jbe
imul
and
out
nop
pop
ja
sub
mov
add
and
dec
test
push
adc
outsl
icebp
fisttps
jo
inc
stos
jge
je
gs
test
add
scas
mov
dec
mov
mov
iret
jnp
mov
sbb
mov
rorb
and
adc
xchg
popa
mov
xchg
stos
mov
inc
dec
cmp
xlat
sub
mov
nop
add
fbld
ror
lods
xorb
mov
add
jns
xor
data16
repnz
dec
inc
out
std
cwtl
frstor
jle
sbb
loop
mov
mov
mov
fucomp
jno
dec
mov
in
mov
aam
or
stos
imul
sbb
test
fcoms
xor
mov
fadds
mov
or
push
insl
jbe
dec
outsb
add
int
popa
or
dec
and
mov
mov
cli
scas
sub
ja
xor
into
in
ljmp
call
test
push
mov
sbb
data16
lds
lods
xlat
rcr
push
dec
movsl
int3
repnz
push
in
push
cs
sbb
jb
je
dec
adc
daa
test
movsb
mov
xor
outsl
popf
mov
adc
ret
mov
xor
or
push
out
iret
cmpsb
sbb
sub
push
ret
xchg
dec
mov
mov
enter
ds
mov
iret
inc
repz
addl
cmp
sti
ja
and
jae
out
and
repnz
clc
sbb
lret
lahf
mov
cmp
lret
add
nop
add
xor
fwait
aaa
fwait
sarl
imul
ret
cs
aaa
and
adcl
fs
movsb
lret
loope
lds
mov
lods
fucomip
test
out
mov
out
fdivp
enter
pop
movsb
push
enter
and
mov
mov
cmpsl
rol
xor
sub
shlb
clc
into
push
push
imul
imul
loop
out
add
call
mov
fmul
cmp
sarb
push
adc
dec
jnp
les
or
jg
cmp
aad
mov
stos
inc
push
mov
int3
and
nop
xorb
fdivrl
arpl
jns
dec
gs
cwtl
cmp
mov
inc
mov
inc
jle
nop
rorl
insl
add
jmp
xchg
mov
or
jbe
add
jecxz
outsb
or
push
ss
clc
xor
dec
mov
ss
add
xchg
add
cmc
out
fidivrl
mov
push
inc
cli
dec
in
push
lret
mov
aas
fistl
sbb
lret
cmp
in
outsl
add
sbb
cmp
jecxz
stos
push
add
add
lods
ret
scas
dec
clc
push
jp
shl
inc
cmpl
inc
pop
adc
sbb
movaps
cmc
popf
int3
jp
jns
xlat
test
das
xchg
or
sub
and
mov
jae
inc
add
pop
mov
mov
cmc
push
pop
mov
jl
out
daa
and
xor
ret
in
and
xor
xchg
jnp
jl
xor
int3
jns
dec
sbbl
xchg
icebp
cli
mov
cmp
subb
and
fdiv
ds
mov
adc
sub
or
enter
mov
push
loope
mov
jae
push
enter
xor
cmp
hlt
sbb
out
xchg
jns
leave
dec
xor
dec
jne
mov
sbb
cld
pop
pop
clc
clc
add
lcall
xchg
pop
jns
jg
mov
in
jb
scas
dec
cld
inc
xchg
lret
xor
or
and
rcl
js
jno
jecxz
insl
add
dec
add
rcr
jg
sbb
jg
subl
fwait
and
sbb
push
fld1
jmp
std
lock
lods
in
scas
fdivrp
out
xor
and
mov
add
bound
fcomp
arpl
cmp
fcomps
inc
ret
aam
add
xor
ret
aas
and
xchg
push
adc
aad
dec
cmpsl
cmc
xor
mov
idiv
add
or
aaa
fdivrp
mov
icebp
mov
push
push
pop
ret
or
es
int3
and
out
xlat
out
inc
std
icebp
lock
inc
lds
test
dec
jb
sbb
and
out
in
add
jecxz
sub
jae
popf
pop
mov
stc
fstl
dec
mov
add
scas
mov
dec
adc
xor
mov
pop
jge
sbb
jg
pushf
test
test
insl
test
dec
or
and
and
mull
mov
jnp
jnp
in
fisubrs
into
cmc
fidivrl
dec
outsb
or
jns
stos
imul
and
stc
mov
ss
outsb
ja
aam
mov
adc
addr16
jns
lea
fpatan
cmpb
std
and
pop
lock
mov
mov
xchg
pop
aam
insb
adc
xchg
sub
push
add
jnp
push
sbb
cmp
cmpsl
adc
cmp
adc
movsb
jb
dec
push
xor
frstor
fisttpl
lock
movsl
icebp
test
jno
push
inc
push
jae
fisubrl
gs
je
mov
pop
pop
outsl
loop
gs
popa
fidivs
jne
test
inc
dec
mov
pusha
lods
imul
ljmp
fucomi
xchg
inc
test
and
gs
xchg
jmp
jno
sbb
mov
shll
sub
push
mov
fstps
cmp
pop
push
int
sub
add
or
sbb
add
push
fs
jg
cmpsb
cmp
cmpsb
jno
inc
scas
stc
or
push
xchg
std
sbb
cltd
shll
ss
add
insb
divb
lds
xchg
data16
fidivrs
in
xchg
adc
out
ljmp
jnp
lret
pop
and
pop
inc
xchg
pop
sbb
cmp
dec
jne
sti
xor
and
jl
pop
push
mov
mov
mov
xchg
dec
mov
int
out
out
adc
jge
popa
mov
cmp
pusha
xorl
cmp
fldcw
arpl
shll
decl
mov
sub
stos
cmp
daa
lds
push
add
pop
jge
mov
cltd
push
arpl
bound
pop
inc
aas
xorl
fisttpll
adc
pop
mov
push
add
and
je
jmp
jae
aas
sub
pop
repnz
push
leave
loope
inc
fucomip
imul
ljmp
jmp
in
ss
or
out
push
fbld
out
push
mov
mov
nop
lods
out
jl
aad
and
and
int
das
add
jne
cmp
mov
into
cmp
popa
ja,pt
pop
test
adc
fs
add
sub
cmp
sbb
xchg
movsl
fdivs
add
dec
stc
addr16
daa
xchg
shll
adc
xchg
xor
aad
add
mov
add
mov
xchg
popa
sub
repz
pop
mov
in
lds
cmp
stos
insb
sbb
and
cmp
lods
sbb
and
sub
mov
or
repnz
ud2
out
movsb
xor
pop
push
aad
dec
mov
and
sbb
dec
es
repz
out
mov
jle
or
pusha
fisubrs
es
xor
xor
fwait
leave
inc
push
pop
fdivl
inc
ds
andl
push
or
sub
out
jnp
add
cmp
imul
cmpsb
test
gs
mov
xchg
data16
aaa
rolb
das
sti
adc
sub
jl
mov
mov
ret
pop
popf
js
les
mov
cmpl
jmp
sub
mov
sub
dec
jl
js
iret
and
or
push
dec
imul
lods
cmc
jae
or
outsb
ror
es
mov
mov
sarl
bound
adc
xor
in
jnp
mov
inc
add
lock
sbb
fildl
adc
cmp
add
pop
test
adc
or
cmc
mov
xchg
push
xchg
dec
or
push
mov
xorb
sbb
or
push
push
call
rorb
ret
inc
arpl
imul
into
std
dec
testl
mov
icebp
pop
jp
in
ffreep
cmp
and
fildll
or
jae
and
out
mov
inc
outsl
cmp
fdiv
add
or
cltd
lret
sbb
cmc
and
stos
loop
sub
adc
mov
mov
cmpsl
jbe
repnz
pop
movsl
inc
popa
xchg
enter
rcrb
jge
cs
xor
pop
sub
lret
stos
mov
scas
or
lret
jecxz
jp
cld
subb
jne
inc
dec
mov
dec
lcall
jg
xchg
adc
in
fimuls
mov
rcl
popf
inc
and
fucomip
xchg
shrb
call
fcoms
es
adc
xchg
pop
lods
add
cmpb
hlt
lods
xchg
and
push
and
jge
mov
rorl
mov
and
xor
leave
push
sahf
or
mov
mov
dec
cmpsl
test
outsl
jle
mov
pop
and
sbb
lock
sub
xchg
enter
leave
dec
and
cs
mov
mov
in
in
sub
pop
jmp
pushf
mov
push
test
inc
sub
lods
insb
sub
pop
cwtl
int3
jae
and
xlat
dec
dec
cmc
sbb
addb
mov
mov
add
int3
or
inc
ljmp
jecxz
jecxz
mov
cmp
popa
cmp
daa
loopne
insb
les
jo
or
int3
fadds
jb
fsubs
mov
dec
rorb
inc
pop
mov
add
mov
imul
jl
mov
mov
jmp
add
mov
xor
pop
outsl
mov
pop
aaa
xor
dec
mov
jae
mov
push
sahf
cmp
inc
dec
ja
xchg
push
sub
and
jno
je
push
sbb
xor
jmp
cltd
adc
cmp
aad
outsl
repz
mov
test
lea
ss
inc
or
or
ja
lock
mov
cmc
lret
ds
test
dec
sub
ss
or
sub
int
loop
ficomps
add
xor
mov
push
mov
aaa
arpl
iret
roll
rorb
push
jge
xorl
int
and
fidivs
dec
mov
clc
iret
sub
mov
xchg
mov
mov
xor
dec
shll
call
insb
lret
adcb
pop
dec
sbb
jp
or
jle
fisubl
fistps
and
cs
clc
pop
xchg
incw
dec
inc
sarb
inc
pop
cmpb
pop
push
out
jno
pop
scas
push
inc
das
or
pop
jns
dec
dec
andl
or
mov
inc
mov
aam
cmc
popa
pop
xor
shl
roll
or
cmp
mov
xor
sub
sbbb
xchg
jmp
dec
push
cmp
xchg
inc
movhps
pop
cmp
ret
stos
aaa
adc
add
xchg
dec
rol
lea
fnstcw
scas
add
mov
shrl
loopne
mov
test
xchg
pop
mov
lods
push
and
jne
mov
pop
call
iret
bound
mov
mov
lds
jbe
mov
cs
push
inc
leave
adc
inc
xchg
nop
arpl
add
mov
mov
cmpsl
mov
insl
cltd
pop
mov
and
sub
int
cmp
push
pop
testb
clc
icebp
enter
iret
adc
cmc
ret
test
fistpll
shl
scas
cs
push
pushf
pop
hlt
or
mov
mov
lahf
fbld
inc
loopne
dec
cmc
jecxz
lret
mov
lahf
pop
sub
in
xchg
out
push
out
int3
sub
inc
add
mov
cmp
push
orb
lahf
test
cmp
sbb
shl
loop
mov
push
test
xchg
imul
cmp
dec
testb
sub
cmpsl
dec
stos
adc
sbb
loopne
mov
sbb
push
pop
fwait
in
lret
aam
addr16
sub
ja
pushl
fistpl
pop
xor
mov
int3
pop
movsl
and
inc
adc
mov
mov
add
mov
loop
adc
ficompl
jno
mov
divl
aad
add
dec
f2xm1
xor
cmpsb
xorb
sbb
enter
mov
lret
ljmp
cs
stc
aaa
xor
or
dec
adc
add
xchg
dec
pop
sbb
sbb
add
testb
fbld
rorb
and
in
or
inc
mov
sar
loopne
inc
jp
adc
mov
pop
lea
in
cmp
push
sub
pop
mov
stc
pop
xchg
insl
push
and
jo
inc
mov
xor
cmpsl
mov
push
mov
pop
les
adc
pop
ds
xchg
ficoms
imul
add
xchg
cmp
xor
jge
clc
int
mov
or
mov
or
dec
hlt
jp
sub
or
pop
mov
jns
or
xchg
adc
xchg
mov
enter
pop
int3
push
jp
movsb
fadd
inc
push
fsubl
in
movsb
rorb
lods
out
jmp
leave
or
inc
mov
dec
pop
popa
loopne
xor
int3
iret
sbb
rol
mov
orl
push
loope
call
push
xor
mov
xchg
and
stos
shrl
and
fldl
xchg
outsb
cmpsl
cmp
xlat
insb
mov
dec
mov
inc
and
or
push
pop
jecxz,pn
insl
in
mov
sbb
sub
and
popa
lock
fstp
data16
fcmovbe
pop
mov
faddl
and
inc
pop
and
out
jbe
adc
push
pop
call
adc
push
and
popf
jo
xor
test
je
inc
xchg
and
dec
and
in
js
dec
fucomip
jae
sub
cli
rorb
hlt
aam
pop
shlb
nop
mov
int
add
dec
lds
lret
and
loopne
mov
pop
pusha
inc
idivl
insl
sbb
lahf
insb
mov
add
pusha
jne
jp
lds
scas
jge
fstps
mov
mov
stos
fs
mov
in
xlat
and
loopne
and
xlat
and
or
sbb
outsb
insl
enter
test
mov
inc
pop
and
pusha
int3
dec
sahf
pop
inc
pop
pop
pop
lds
lods
scas
cld
pop
jo
add
adc
push
dec
jg
or
shll
and
hlt
mov
mov
inc
sub
mov
sbb
outsl
fildll
push
in
setb
imul
lea
jne
fsubrp
jae
mov
add
pop
sub
out
mov
leave
aad
imulb
in
lods
and
jne
cmpsb
mov
std
push
mov
mov
xchg
iret
cmc
inc
adc
cmc
std
jmp
push
jle
dec
roll
lods
push
sbb
mov
lret
push
push
out
ret
scas
repnz
mov
cmc
test
ds
nop
pop
pop
cmpsb
es
out
mov
dec
mov
jo
adc
test
mov
rclb
mov
jnp
jle
and
dec
ds
inc
into
adc
adc
jb
movsb
jae
inc
lret
mov
cmp
leave
sbb
hlt
rol
dec
sub
push
mov
sub
jmp
lods
mov
pusha
or
cmp
std
dec
xor
fisubs
je
rcl
fwait
dec
enter
dec
adc
cmpsl
dec
idivl
std
in
ss
cmpb
xor
insb
inc
out
push
repz
jns
dec
adc
int3
jle
imul
enter
mov
and
fldt
push
mov
int3
dec
mov
dec
sub
mov
dec
ss
ja
mov
pop
arpl
cwtl
imul
xor
xchg
and
sub
push
popl
pop
loop
mov
cmp
xchg
inc
jb
cs
mov
push
fsubrs
sbb
mov
fidivl
pop
add
cmp
push
loopne
mov
fwait
cld
in
fcomip
push
mov
dec
or
xor
add
int3
stos
test
cmp
cs
test
mov
xchg
add
xchg
ja
jg
mov
dec
inc
jbe
jo
dec
or
adc
inc
sub
and
pop
mov
jge
ss
incl
stos
cmp
rol
mov
fsubrs
out
jno
cmp
pop
sahf
push
mov
stos
aas
mov
gs
and
push
xorl
lret
and
dec
out
ficoms
stc
adc
fisubrl
mov
cmpsb
out
dec
dec
mov
dec
ret
xor
subb
fwait
xor
frstor
ds
mov
jmp
add
in
pop
sbb
adcb
and
cmp
push
iret
and
movsb
dec
jl
aad
jnp
push
rcrl
mov
lret
mov
stos
lcall
scas
or
jnp
mov
lcall
int3
cmp
arpl
in
aad
jae
xchg
push
inc
or
cmpsb
mov
jno
das
dec
cli
fadd
das
push
mov
mov
gs
jmp
dec
loopne
mov
sbb
fxch
ret
dec
fstpl
lods
insb
push
mov
mov
rcl
rorl
rcrl
or
and
jle
mov
push
push
xchg
push
outsb
xor
popa
hlt
xor
inc
inc
out
lret
shll
and
lret
dec
ret
pop
ss
jae
imul
ja
xchg
incb
in
dec
dec
cli
dec
stc
pop
adc
sti
dec
shll
in
xchg
xchg
fdivrs
inc
outsb
mov
pop
fistl
jnp
in
stos
inc
ret
sub
int
int3
pop
cmp
sub
ja
iret
add
push
jbe
push
mov
xchg
pop
mov
jnp
mull
in
rol
xor
mov
or
mov
lods
adc
aas
dec
push
stc
cli
pop
mov
mov
andb
testb
scas
popa
addr16
push
or
xchg
mov
mov
push
fwait
test
cwtl
and
les
es
sub
loop
decl
add
pop
add
sahf
loopne
outsl
push
stc
mov
mov
outsl
adc
imul
pop
stos
jno
jg
into
leave
sub
sti
inc
add
loopne
add
aas
inc
iret
add
cmc
pop
daa
cmp
xor
testl
int3
inc
cmp
cmpsl
and
and
push
in
ja
jo
mov
ds
adc
ret
adcb
aas
push
dec
ss
les
cmpsb
js
in
out
pop
jae
xor
mov
mov
dec
fiadds
lods
fst
fcmovb
jp
gs
fisttpl
jecxz
sahf
and
mov
xlat
stos
popf
and
incl
jns
rcll
loope
ficomps
inc
scas
cmp
jno
lret
lahf
stos
test
inc
out
rol
aam
dec
inc
pop
jge
lods
scas
clts
sbb
loopne
aaa
adc
sub
sub
lds
mov
dec
repz
testb
ficompl
cmp
lods
sahf
sbb
sub
test
jo
or
je
and
lds
ds
lret
imul
mov
cs
in
sub
dec
mov
inc
dec
inc
imul
outsl
xchg
int3
bound
movb
lds
icebp
pusha
pusha
sub
je
insl
inc
xlat
jbe
fildll
push
pop
js
out
lahf
pusha
add
ret
add
push
cmp
cmp
pop
dec
lods
hlt
cmp
add
mov
gs
arpl
repz
xchg
mov
pop
and
mov
dec
aam
mov
cltd
imul
xchg
pop
cmp
dec
imul
push
popf
inc
cwtl
inc
push
fisttpll
sub
mov
push
xchg
filds
mov
andb
shl
mov
cli
enter
repnz
jb
jnp
sbb
xor
mov
or
mov
test
imul
inc
mov
scas
sub
jle
jne
ja
jb
out
sbb
icebp
ret
outsl
add
jmp
dec
cli
mov
sub
test
jle
mov
lcall
mov
fidivs
decl
pop
cmp
xchg
mov
scas
lds
push
push
inc
pusha
xchg
movsb
loope
add
xor
test
inc
mov
xorb
or
dec
adc
fcomp
adc
into
sub
imul
inc
jmp
push
xlat
jns
add
es
mov
push
stos
xchg
iret
lock
add
pop
dec
ss
cmp
push
test
mov
push
ret
sub
and
push
push
call
dec
xor
aas
in
cmp
or
stos
js
ljmp
mov
lea
jno
lods
dec
inc
lds
gs
cmp
cmpsl
es
enter
pop
push
dec
stos
xchg
xchg
xor
out
xchg
mov
inc
xchg
cmp
pop
outsl
inc
iret
jge
and
outsl
push
fcmovnbe
jp
lods
cli
movsl
or
add
arpl
outsb
push
lret
or
jne
in
leave
xchg
adc
cmc
lret
sub
fwait
addl
pop
mov
jne
add
lea
lods
loopne
enter
and
lods
inc
xor
rcll
sahf
xchg
jge
and
cmp
dec
ror
pop
jo
sbb
or
pop
out
mov
xchg
jg
out
pop
cmp
pop
movsb
pop
xor
jp
out
enter
in
int3
out
and
inc
adc
mov
insb
xchg
insb
mov
lods
adc
pop
dec
mov
pop
cmp
lcall
sub
dec
mov
lahf
aaa
adc
mov
inc
mov
xor
cmp
fildl
jmp
xor
ds
lcall
mov
sti
sbb
sti
test
mov
mov
data16
out
pop
adc
fbstp
xchg
pushf
jl
in
sbb
push
mov
in
xor
mov
imul
inc
jecxz
out
jnp
cli
int
fs
das
lods
mov
adc
loop
mov
loope
mov
test
add
insl
test
xchg
ds
adc
inc
xor
push
ds
xlat
jb
daa
sub
jle
ret
mov
jg
jl
dec
lahf
test
lea
inc
stc
dec
adc
into
xchg
jns
fucom
and
xor
mov
sbb
adc
or
mulb
je
mov
mov
jno
inc
add
push
rorl
xchg
cs
bound
mov
inc
mov
test
mov
ja
aam
pop
testl
add
fstpt
xor
push
ror
mov
adc
adc
mov
test
pop
dec
inc
lds
add
sti
enter
jmp
mov
add
adc
icebp
cmpsb
sub
movsl
cmp
add
jno
pop
adc
nop
fmuls
jp
in
pop
ret
push
xchg
dec
sahf
repz
imul
mov
mov
leave
push
xchg
and
fisubrl
xchg
ja
stos
add
jecxz
dec
xor
or
push
dec
sbb
adc
push
into
hlt
mov
pop
pop
lods
xlat
fisttps
add
jle
sar
dec
cs
cmp
in
bound
adc
out
mov
stc
add
lods
or
jnp
mov
int3
jne
rcll
push
and
adc
add
jl
dec
cmp
push
jns
mov
jecxz
test
sub
xchg
xor
push
lods
dec
ret
dec
adc
ds
cltd
aaa
arpl
popf
lds
pop
or
sub
push
cwtl
or
shll
mov
shl
add
fists
movl
std
sbb
or
xchg
push
mov
cltd
xlat
mov
enter
adc
js
cmc
inc
insl
xchg
mov
sbb
add
fadd
lret
inc
pop
mov
int3
faddl
orl
mov
pop
jl
sbb
mov
mov
inc
movsl
mov
xor
mov
gs
cmpsl
std
rcl
popf
dec
dec
xchg
lods
mov
jnp
orb
jae
adc
cmp
jb
dec
sub
out
sbb
or
out
push
mov
inc
dec
test
pop
imul
repz
je
pop
cmp
mov
arpl
sub
jno
mov
push
dec
test
mov
cmpl
push
mov
mov
lcall
in
pop
mov
test
jg
loop
mov
inc
fcom
shlb
test
addr16
jmp
loop
sahf
testb
mov
ss
test
and
enter
pop
js
sbb
mov
fcoms
jae
add
movl
xchg
and
je
test
popa
mov
and
lods
ds
stc
mov
push
mov
lahf
les
jmp
js
ja
cmp
std
cli
dec
xor
sbbl
scas
xchg
jle
in
push
inc
cli
out
outsb
xchg
mov
fistps
cmp
add
clc
sub
pop
pushf
fimuls
and
mov
pop
jecxz
movsb
push
jmp
or
mov
fidivrs
js
testl
mov
cmp
fbstp
pop
cld
cmp
out
mov
add
pop
add
jmp
and
or
je
or
push
lcall
xchg
mov
insb
hlt
imul
int3
pop
mov
rcrb
sbb
enter
loopne
jle
push
or
mov
bound
jae
and
jnp
lret
push
xchg
mov
addr16
mov
scas
xchg
loope
xor
scas
xor
call
enter
mov
jecxz
mov
inc
icebp
shll
mov
mov
xor
cltd
scas
dec
jbe
jg
pusha
pop
xchg
rcl
and
push
and
lods
xlat
xor
dec
and
xor
out
cmpl
les
movsb
pop
push
add
mov
push
or
mov
mov
hlt
mov
push
and
cmp
sub
cmp
dec
xlat
lea
and
add
xchg
and
ds
inc
jo
cmc
fdivs
mov
mov
and
aas
hlt
popf
xor
fbld
aad
mov
xor
ljmp
jge,pn
pop
mov
inc
xchg
iret
and
add
jle
xchg
add
inc
xor
fsubs
gs
dec
mov
add
or
pop
add
les
and
inc
inc
insl
lods
mov
inc
in
lds
or
insl
aas
aad
out
adc
mov
jmp
out
test
mov
jns
fimuls
lret
das
test
imul
and
push
hlt
pop
fadds
rolb
jne
push
fbstp
sbb
push
pop
and
dec
cmp
subb
and
cld
std
xchg
clc
pop
sahf
xchg
aaa
lcall
pushf
mov
neg
pop
mov
push
jge
add
cli
adc
mov
inc
popa
or
jns
fndisi(8087
push
xchg
pushf
lods
into
mov
sub
pop
rol
xchg
xchg
mov
addl
hlt
fstpl
test
jle
jp
push
or
xor
les
insl
fistl
cltd
sbbl
inc
sahf
mov
xchg
mov
dec
pop
js
jge
xchg
seta
popf
pop
lahf
mov
mov
jb
mov
lahf
and
jg
push
sub
pop
sbb
mov
xchg
pop
jp
push
loope
jge
add
dec
rcl
cmovns
repz
mov
in
clc
cwtl
add
enter
cld
rorl
dec
arpl
iret
mov
pop
and
push
test
push
inc
clc
in
sub
and
push
sbb
int
mov
enter
incl
mov
xlat
add
pusha
cmpsb
xlat
pushf
pusha
pop
insl
mov
mov
or
or
mov
push
adc
sub
push
imul
mov
and
pop
pop
push
je
pop
jo
pop
pop
je
pop
pop
js
pop
pop
jl
pop
cmpsl
ret
and
mov
lahf
and
les
and
int3
lahf
and
rcrb
mov
mov
jp
fidivrl
mov
aad
cmp
and
inc
outsb
ljmp
imul
outsl
pop
pop
stos
jae
pop
stos
ja
pop
stos
jnp
pop
stos
jg
pop
stos
sbbl
xchg
stos
mov
stos
pop
pop
stos
xchg
pop
pop
stos
xchg
pop
pop
stos
fwait
pop
pop
stos
lahf
pop
pop
stos
mov
pop
pop
stos
stos
pop
pop
mov
aam
mov
dec
xlat
cmp
xchg
jle
and
ja
imul
test
les
xor
jle
popf
adc
mov
pop
fcompl
loopne
inc
jp
lods
aas
ffree
mov
dec
ja
test
cmp
out
mov
cmp
xchg
jle
inc
int3
inc
pop
lds
pop
xchg
inc
movsb
push
sbb
jne
mov
cmpsl
fs
pop
pop
jo
inc
adc
pop
test
dec
pushf
aas
lds
addr16
adc
rcr
out
and
push
insb
rolb
enter
or
aaa
pop
lret
daa
cmc
add
into
scas
icebp
push
fdivl
adc
and
jmp
jle
fnsave
pop
stc
std
cmp
add
jmp
sub
add
leave
pop
dec
gs
iret
fcmovnbe
cmp
lret
icebp
pop
dec
or
mov
fs
call
inc
lea
push
stos
or
inc
pop
xchg
lret
adc
jl
js
orb
or
inc
orl
ja
pop
adc
xchg
cld
rcrb
mov
addr16
xlat
test
lret
shrb
ja
in
pop
ret
adcb
popf
or
loope
jg
ljmp
mov
popa
mov
aas
pop
les
xlat
mov
orb
xchg
mov
movsb
aad
vunpcklpd
pop
and
inc
cmp
adcl
mov
ds
scas
lock
add
cmp
btr
jg
cltd
jle
xchg
or
jp
jp
and
das
stos
add
push
sbb
inc
repz
push
inc
and
leave
flds
jle
dec
repz
xchg
pusha
mov
adc
mov
sbb
sarb
mov
sbb
mov
inc
addr16
jp
mov
clc
adc
sbb
pusha
push
aad
cmp
pop
aaa
xor
addb
enter
cmp
pop
xor
push
lcall
and
xor
jle
ljmp
mov
scas
jle
test
mov
cmp
pop
fistpll
inc
add
in
lods
lods
mov
jns
movsl
enter
and
mov
mov
testb
or
sub
imul
addr16
addb
leave
mov
lahf
jns
jg
mov
cmp
xor
popf
in
call
dec
std
jg
mov
int3
sub
jne
imulb
adc
cmpsb
fwait
je
daa
cmp
add
dec
mov
jp
and
sub
mov
add
cmp
test
dec
jp
inc
movsl
mov
push
push
cmc
xor
fimuls
sbb
dec
addr16
clc
lret
adc
out
mov
ror
jb
push
out
or
dec
int3
outsl
jo
mov
mov
dec
loopne
mov
adc
decl
adc
jle
jno
push
lds
push
lods
inc
mov
sti
hlt
loop
xlat
hlt
mov
jns
xor
mov
add
jb
mov
xchg
xlat
cmp
rcrb
sahf
fmul
dec
pop
mov
ret
int3
lods
push
mov
xchg
aam
or
lahf
jne
mov
je
push
scas
xor
loop
mov
repz
adc
xlat
sbb
xor
shlb
sbb
adc
fcmovne
lods
mov
xchg
pop
jno
ret
mov
or
and
adc
dec
js
jp
int3
in
xchg
or
and
and
rorl
or
mov
movsb
dec
cld
or
jb
xor
je
pop
inc
mov
and
popf
mov
cwtl
loopne
dec
arpl
lcall
cli
push
mov
cmp
and
in
pop
fsubrl
cld
mov
pop
mov
cld
mov
pop
aas
aad
sti
loop
popa
repnz
mov
scas
pop
sub
xor
out
scas
inc
rolb
rcll
ljmp
mov
loope
add
and
cltd
test
sbb
insb
ret
xchg
mov
fs
add
inc
mov
pop
xchg
sbb
sbb
push
out
adc
xor
ds
iret
add
dec
nop
add
cwtl
pusha
pop
clc
das
pop
sub
outsl
movsl
inc
adc
sarl
iret
scas
xor
dec
orl
leave
arpl
jne
xchg
aaa
adc
ja
xor
punpckhbw
sbb
mov
mov
in
push
clc
adc
lods
loope
gs
push
mov
lock
test
mov
std
mov
mov
mov
mov
mov
nop
cld
inc
mov
ljmp
out
idivb
dec
jo
or
shrl
sub
movsl
test
jge
mov
jbe
fmull
pop
cmc
bound
sub
inc
ret
lock
das
add
movsl
xchg
es
push
cwtl
popa
inc
enter
mov
sub
inc
mov
incl
aas
fisubl
sahf
mov
je
lcall
aam
xor
lds
lds
mov
lods
or
int3
adc
ret
inc
ficomps
cmpsl
aaa
sub
testb
mov
mov
sbb
sbb
xchg
pop
xchg
push
cltd
mov
inc
popa
andb
cld
clc
jmp
fcomps
hlt
dec
pop
jl
pop
fiaddl
popa
mov
lea
xchg
sub
jl
fstps
int
xor
mov
out
xlat
xorl
lods
in
mov
jge
and
dec
ret
jno
mov
pushf
inc
rolb
movsb
push
mov
fs
lret
xor
popa
sbb
sbb
mov
rolb
cmp
or
inc
loop
dec
pop
xchg
cltd
ljmp
adc
in
mov
and
mov
dec
std
mov
enter
jmp
cmove
aam
xor
decl
cmpb
test
es
pop
mov
scas
mov
lret
mov
jno
mov
adc
jns
jae
hlt
xchg
imul
std
sub
je
cmpb
aaa
fs
data16
insb
xor
test
into
mov
or
lods
out
push
adc
lds
leave
movsb
stc
out
testl
mov
das
cmp
mov
mov
js
add
cld
repnz
lods
int3
sbb
fstpt
jnp
decl
cmp
adc
mov
dec
into
shr
fs
mov
nop
xchg
sbb
pop
push
aam
das
sub
out
pop
or
mov
jno
mov
sbb
pop
jp
movaps
cmp
les
rcrb
stc
je
jge
repz
in
je
add
push
test
into
pop
adc
fmul
dec
inc
outsl
repnz
stos
out
data16
mov
push
push
mov
loop
aam
pop
incw
pop
stc
ds
out
mov
shlb
cmc
std
push
addr16
dec
sbb
enter
hlt
cwtl
dec
movsb
orl
imul
iret
out
mov
sub
cmp
and
or
nop
and
mov
sub
pop
or
xchg
inc
fs
loop
or
push
adc
xor
cmp
jl
and
ret
xor
add
xchg
lcall
cmp
lcall
cld
mov
pushf
cmp
mov
add
lea
pop
lcall
mov
mov
jmp
sbb
sub
mov
and
hlt
mov
lock
dec
push
lea
sahf
enter
cmp
imul
jb
sub
fldcw
mov
mov
mov
enter
and
add
xchg
push
jp
rcll
dec
and
sub
push
push
cltd
sub
add
popa
inc
pusha
mov
out
in
ficompl
rcrl
cmpsl
xor
scas
push
js
je
mov
jmp
xor
xchg
cwtl
cmp
data16
arpl
iret
popa
pop
fdivr
iret
addr16
jle
insb
pop
les
xor
into
and
aad
ret
push
dec
push
push
xchg
mov
sahf
mov
lods
popf
fs
cmc
ljmp
int
and
dec
xor
dec
inc
inc
cmc
test
cs
fbstp
mov
xor
addr16
int
mov
mov
push
push
pop
enter
loop
xchg
xchg
in
rorl
mov
bound
push
out
jo
mov
sub
inc
sbb
sub
jp
ljmp
popa
cmp
sbb
jle
fisubrl
fwait
inc
fldcw
ljmp
out
and
and
and
lds
out
add
pop
or
js
mov
xchg
adc
push
ret
outsl
clc
rolb
inc
or
cmp
adc
fcmovnu
sti
dec
adc
xor
mov
addr16
sub
cmp
into
mov
jne
mov
xor
push
aas
popf
mov
cmp
gs
jge
mov
cmp
push
bound
aam
addr16
rcrl
mov
ret
in
jae
gs
jle
inc
ja
int
sbb
test
lods
popa
fdivr
lcall
xor
scas
xlat
adc
rcrl
push
cmp
lea
imul
xchg
cltd
int
lret
and
jo
movl
iret
imul
std
push
xchg
or
pop
rclb
clc
lds
jnp
scas
idivb
and
repnz
sub
cmpsb
mov
jae
sub
mov
push
sub
xchg
cmp
xchg
add
ficompl
jle
mov
or
xchg
add
push
or
mov
mov
xchg
test
push
xchg
and
ja
das
xchg
pop
das
xor
setle
lock
pusha
or
pop
mov
fsubp
repnz
lods
adc
xor
xchg
int3
sub
dec
pop
cmpsb
arpl
arpl
xchg
or
scas
push
imul
jae
pop
adc
aaa
movsl
test
mov
out
mov
jne
pop
push
mov
sbb
jmp
adc
enter
add
imul
jns
lret
dec
push
cwtl
cmp
sti
push
push
hlt
das
xor
mov
popa
and
xchg
andb
adc
imul
dec
mov
test
bound
arpl
xorb
std
loope
int
fwait
adcb
push
pop
mov
mov
jmp
mov
cwtl
fcomps
arpl
and
pop
push
dec
push
xor
enter
int
cmpb
imul
int3
sti
ja
dec
shl
mov
add
addr16
lret
sbb
loope
cmp
jmp
leave
jbe
mov
popa
out
mov
sbb
mov
stos
mov
ljmp
jge
into
test
jno
mov
mov
cld
pushf
data16
lret
inc
xor
jno
lods
out
inc
inc
adc
add
jg
or
pop
test
pop
pop
andl
mov
out
mov
jle
adc
pop
fists
mov
and
adc
lahf
mov
or
mov
mov
test
loope
ds
xchg
ja
loope
imul
and
mov
mov
pop
lret
test
mov
push
dec
adc
lods
pop
jmp
fstps
fimuls
out
repnz
popf
adc
clc
mov
mov
adc
or
fs
subl
jnp
pop
sub
xor
jnp
push
leave
sub
outsb
dec
ljmp
xchg
cld
add
cltd
push
jmp
jno
lahf
push
das
scas
shlb
inc
jns
pop
push
inc
dec
call
js
sti
ljmp
cmp
xchg
adc
mov
push
ficoml
xchg
lds
clc
in
test
test
nop
outsb
add
das
dec
inc
cwtl
dec
push
fldl
mov
loop
sbb
dec
lret
pop
xchg
sti
xor
and
shrb
xor
lods
sub
inc
mov
xchg
mov
jns
inc
rclb
jo
mov
pop
pop
push
push
mov
sahf
jns
leave
sti
lcall
fnsave
push
or
lret
pop
les
pop
out
push
jmp
int3
and
inc
stos
sbb
out
fwait
dec
stc
imul
xor
push
push
adc
add
jmp
pop
lds
in
push
test
ret
lods
dec
push
lock
xchg
pop
mov
js
dec
loopne
bound
mov
cmp
inc
cmp
bound
push
mov
cltd
fcmovnu
cli
int
inc
inc
movsl
or
aad
popa
add
adc
movsb
or
fistpll
icebp
dec
jmp
fisubl
lret
jns
or
adc
xor
jle
fldt
test
or
or
and
gs
inc
imulb
fs
mov
push
pop
imul
sub
data16
in
or
cmpsl
jb
push
enter
rcl
das
outsl
push
or
repnz
sahf
lods
sub
mov
lret
mov
jle
shlb
inc
add
arpl
push
aaa
cmpsl
sub
mov
scas
pushf
jne
xor
cmp
mov
adc
les
xor
jecxz
mov
daa
and
mov
lea
cmp
test
int3
add
push
outsb
push
fcoml
aam
incl
imul
ficoml
sub
mov
ja
lret
pop
test
out
sub
ffree
int
push
xor
imul
cmp
cmp
push
test
pushl
pop
insl
out
push
mov
insl
repnz
in
cmc
xor
sbb
mov
subl
inc
xor
sbb
mov
decb
leave
stos
cmp
sub
out
and
xchg
lret
xlat
in
movsl
inc
call
add
mov
test
sahf
or
rcrb
mov
adc
push
lods
lret
mov
xchg
repz
jg
fnstenv
scas
sarl
je
clc
pop
push
cs
pushf
out
dec
psubusw
cltd
mov
sbb
push
stc
test
inc
scas
test
inc
fmuls
pop
cmp
std
add
adc
pop
test
sub
sub
fisttpll
imul
mov
add
mov
xor
xor
sub
aas
jb
inc
mov
jge
cmp
shll
xor
pop
cmp
lcall
cmp
jle
arpl
dec
mov
jge
orl
cmc
sahf
call
and
inc
inc
or
xor
outsl
imul
jb
dec
adc
pop
push
sub
fcoms
sbb
push
xchg
das
sbb
outsl
xchg
push
fsubrl
negl
dec
leave
xorl
sbb
sahf
mov
mov
sar
push
andl
mov
js
stc
paddusb
aad
aas
sub
out
add
in
testb
and
xchg
dec
xchg
loopne
imul
ja
cmpsl
or
fucom
adc
loopne
sub
dec
jecxz
or
add
lahf
leave
test
pop
xlat
mov
mov
mov
mov
lock
cli
sbb
xor
and
rcrb
mov
icebp
xchg
scas
xchg
push
rorb
sbb
jg
stos
shrb
cmpsl
lods
push
das
leave
in
mov
shr
ja
mov
andl
fwait
cmp
stos
repz
std
test
ret
add
pop
idiv
xchg
mov
mov
pop
push
push
push
dec
sub
mov
repz
push
dec
dec
pop
ljmp
sbb
icebp
push
andb
test
or
cmp
mov
add
sar
fidivs
adcl
gs
int
cltd
adc
sub
lea
push
stc
lods
ss
adc
scas
pop
ss
and
or
int3
inc
popf
adc
out
sub
pusha
movsl
lods
in
mov
or
movsl
int3
jl
repnz
cmpl
xchg
dec
sub
cld
mov
cmpsl
cmp
pop
out
insl
and
inc
int3
dec
add
xchg
cmp
imul
into
ljmp
stc
addl
pushf
sub
std
loope
mov
sarl
lock
xchg
push
and
adc
test
dec
pop
mov
test
jbe
jl
mov
mov
mov
cmc
pop
push
hlt
mov
sahf
int
fisttpll
dec
jno
loop
fldl
es
inc
pop
mov
lock
subl
xorb
aaa
jne
push
subl
hlt
inc
loop
push
stos
mov
pop
push
jmp
orl
add
jmp
mov
xchg
outsl
xchg
repz
lods
cmp
add
das
insb
dec
stos
imul
fisubrs
stc
shlb
scas
ja
add
mov
push
lods
fildll
imul
orl
lahf
add
inc
mov
js
scas
jne
cltd
mov
or
popa
jecxz
mov
idivb
loopne
ja
xor
jae
das
je
push
out
adc
mov
mov
lds
repnz
subl
or
lods
jl
lock
imul
mov
lock
xchg
mov
adc
jge
and
les
xor
pop
lods
xchg
lds
mov
rclb
xchg
lret
sti
jp
dec
sarl
and
lods
lock
push
or
je
mov
addr16
dec
sub
push
sbb
or
lret
sub
and
cmp
pop
mov
jae
xchg
ret
leave
add
jmp
or
test
sbb
sbbl
int
add
js
andl
mov
cli
int3
jmp
cmpb
mov
and
push
push
mov
addl
das
dec
popf
push
lret
jae
dec
xor
pop
xchg
push
or
pop
jge
xchg
inc
add
xlat
jo
cltd
mov
fidivs
hlt
add
js
cmpsb
xlat
fmul
cmp
ds
jmp
cwtl
push
scas
in
aas
jae
out
out
xor
or
sbb
call
dec
mov
test
adcb
loopne
jg
jb
push
cmpsb
xchg
adc
ret
mov
inc
inc
sbb
mov
es
jmp
or
jge
jl
dec
inc
call
and
lret
daa
das
xchg
imul
mov
dec
inc
mov
dec
jl
jl
test
in
jl
dec
sub
les
sbb
mov
test
push
xchg
scas
bnd
in
test
fpatan
and
std
mov
xor
push
jl
pop
repz
sbb
push
jo
sub
jo
push
cmp
lret
jge
jecxz
push
stos
cmpsb
dec
sub
mov
push
adc
push
dec
cmp
mov
sahf
xor
in
aas
push
mov
adc
xor
iret
sub
and
leave
add
sbb
popa
test
fdivr
in
jne
addr16
mov
lret
xchg
jns
adc
xor
push
adc
nop
and
xor
push
mov
sbb
adc
xlat
lea
in
mov
mov
xchg
cmp
mov
pop
lahf
mov
in
and
xor
mov
cs
outsb
or
test
dec
sub
jle
xor
adc
pop
gs
xor
dec
add
push
test
jmp
mov
pop
test
into
pushf
xorb
lret
lock
icebp
adc
jae
cmpsb
mov
pop
push
mov
sbb
ret
in
lret
das
and
mov
mulb
sahf
jp
pop
fdivp
inc
xchg
lret
add
pop
orb
or
inc
jp
pop
les
mov
divl
pusha
jle
mov
fimull
xor
or
and
test
jg
popf
fisubs
sahf
adc
ss
hlt
push
scas
ret
jo
sahf
mov
push
pop
or
imul
gs
lods
xor
cwtl
int
icebp
out
fs
out
fld
adc
jb
or
mov
mov
push
or
cmp
in
sarl
mov
or
lock
cmp
lret
xor
repz
xchg
jb
jmp
orb
popf
and
xor
pop
pop
mov
push
jg
dec
xchg
jle
inc
lea
lret
mov
adcl
inc
rorl
subb
push
into
fsubrs
and
add
dec
ds
pop
fiadds
into
dec
mov
pop
add
in
cmpl
fiadds
and
and
xchg
ss
and
int
dec
ljmp
int
fildll
mov
sub
fdiv
and
mov
call
mov
das
scas
enter
pop
xchg
out
mov
mov
movsl
sub
xchg
cmp
lret
push
aam
pop
xor
mov
ja
mov
test
movsl
pop
add
mov
cmp
push
and
je
inc
and
sahf
push
dec
adcl
rol
push
jo
iret
rorb
cld
loopne
mov
loop
lods
testb
mulb
repnz
lcall
dec
or
out
jle
xor
adc
cltd
std
in
pop
cltd
adc
sbb
test
fimuls
int
pop
sbb
xor
xchg
jge
out
add
ret
out
lret
inc
aas
or
pushf
hlt
pop
sub
fildll
cmc
hlt
mov
call
add
xchg
negb
mov
aaa
fbld
add
aas
and
clc
dec
push
adc
and
add
jae
xor
jns
test
jno
test
xor
in
fs
mov
add
push
push
mov
repnz
jmp
or
in
push
imul
jp
mov
iret
cmpsb
into
and
enter
add
addl
push
add
jg
ficomps
in
addr16
xor
mov
repz
pop
cmp
xchg
mov
sub
sub
ja
jns
sub
jl
stos
rclb
es
repnz
cmp
dec
fistps
xchg
pop
xchg
pop
dec
aas
dec
cmpsb
dec
fldenv
in
repz
jp
mov
std
or
orl
xor
pop
mov
cs
mulb
test
push
add
fs
popa
lcall
int
inc
xchg
ret
std
cmp
xor
cmp
add
jnp
out
jle
nop
pop
lcall
dec
into
lods
mov
rcrl
fsubs
add
push
cmp
imul
jmp
sub
push
scas
lcall
clc
push
rorb
fidivl
push
ret
mov
add
cmp
inc
neg
idivl
aad
dec
xor
addr16
and
xchg
repnz
and
lret
cwtl
leave
xor
push
add
mov
xor
cmc
cmpsb
jp
js
xlat
std
push
cmp
pop
fmul
rsqrtps
stos
inc
or
sub
outsb
decb
loop
and
mov
and
iret
fcomps
pop
push
inc
out
rcrb
in
addl
add
xchg
mov
jmp
insb
stos
mov
xor
mov
pop
pop
push
cwtl
mov
subb
fstpt
inc
adc
jecxz
mov
int
and
rol
push
nop
aam
dec
push
cmp
xchg
or
popf
movsb
ds
push
mov
ficoms
or
jo
sbb
fwait
test
inc
addb
sub
mov
pop
repz
aas
xchg
fistpll
out
add
lea
in
mov
in
mov
enter
and
dec
fidivl
xchg
cltd
adc
adc
les
adc
cld
sbbl
arpl
ret
mov
loopne
loope
push
mov
fcmovu
jae
dec
rolb
lcall
sti
fists
mov
xchg
in
lahf
imul
dec
hlt
test
and
add
clc
adc
sub
jecxz
mov
std
ficompl
xor
movl
add
push
or
lcall
scas
test
fsubr
out
fs
jmp
ljmp
in
xor
insb
and
fdivs
add
add
test
inc
insl
jle
dec
in
add
mov
out
testb
pop
addr16
fisttps
test
orl
mov
xlat
mov
inc
repz
mov
addr16
xchg
inc
mov
hlt
cs
enter
repnz
ret
scas
jno
jmp
pop
ds
nop
inc
lret
adcl
imul
push
stos
call
mov
andb
pop
mov
stos
push
gs
jl
jp
adc
insl
aaa
leave
fsubrl
or
ficomps
push
xchg
xor
or
dec
lods
mov
add
pop
addl
mov
sub
sbb
cmp
ja
leave
lahf
mov
fcompl
cmpsl
mov
jl
out
int3
add
outsb
shrl
mov
popl
js
cmp
cmp
and
mov
cs
lds
mov
iret
sahf
loope
mov
mov
clc
std
xor
ja
sbb
push
cmp
mov
pop
lret
add
push
xchg
push
lods
dec
movsb
jne
cmp
in
in
insb
movsl
js
ja
mov
xchg
rolb
or
mov
mov
add
insb
adc
inc
mov
loope
push
cs
cmpl
mov
or
jno
fwait
aad
lcall
cmp
xchg
arpl
fisttps
cmp
idivb
and
mov
mov
adc
cmp
xor
sub
dec
in
pusha
or
or
dec
pop
lcall
lods
sbb
xchg
scas
stc
push
inc
ja
rcrl
and
sahf
dec
enter
jge
imul
mov
mov
pop
mov
pop
push
outsb
xor
mov
test
outsl
mov
xor
loopne
cmp
loop
loopne
xor
cld
shlb
outsb
test
aas
push
ljmp
test
or
push
outsb
sub
shlb
push
lcall
mov
cmc
lret
mov
jmp
adc
cmc
sbb
dec
ljmp
pop
inc
cmp
setne
mov
xchg
ret
sub
fisttpll
sarl
cmp
flds
sbb
add
pop
fucomp
inc
out
or
dec
outsb
sub
dec
dec
pusha
mov
dec
dec
fcomps
push
mov
dec
leave
hlt
outsb
and
push
mov
push
cs
adc
cmp
shr
xor
xlat
sub
jbe
add
shll
loopne
lret
jns
xchg
push
mov
aaa
xchg
imul
mov
mov
mov
out
and
ud2
into
aas
dec
add
into
mov
ret
in
popa
cs
inc
or
xor
fadd
push
mov
mov
mov
clc
inc
and
lret
mul
mov
pop
xor
jns
jmp
mov
outsb
push
in
cmp
push
enter
pop
outsb
mov
sub
push
xorb
hlt
dec
inc
mov
gs
inc
jns
sbb
lahf
cld
pop
adc
sti
je
mov
leave
push
ja
lods
pop
cmpb
ds
or
or
and
and
mov
xchg
pop
call
test
int3
ret
push
sbb
and
xlat
and
rol
testl
loope
js
cld
xor
scas
xor
adc
mov
lock
out
and
pop
mov
mov
scas
adcb
leave
mov
pop
call
cwtl
mov
sbb
sub
lret
cmp
int
pop
movsb
add
mov
push
loop
or
inc
scas
sub
mov
pop
fisubs
mov
sub
xchg
sahf
iret
popf
or
mov
xor
mov
cltd
pop
dec
mov
stc
add
aam
shlb
mov
and
call
and
and
shlb
fisubl
pop
test
mov
cmp
add
mov
rclb
cmp
test
cmpsb
mov
jl
bnd
loopne
xchg
out
sbbl
sbb
xor
cmp
xchg
arpl
push
xchg
add
mov
push
jge
push
push
adc
mov
cmove
pop
jo
cwtl
mov
and
xlat
mov
out
int
xlat
jnp
loopne
adc
test
testl
sub
lcall
ret
xchg
sbb
or
mov
mov
add
cmp
lret
das
iret
dec
sbb
add
outsl
xchg
jo
fisttps
movsl
into
xchg
or
jb
iret
mov
pop
leave
sbb
or
ret
sbb
nop
idiv
xchg
sub
into
adc
cli
hlt
lea
sub
cmpsl
inc
add
sbb
pusha
mov
push
pop
movsl
roll
pushf
das
ss
jnp
jge
nop
push
pop
cwtl
and
add
jp
xchg
imul
mov
mov
adc
sti
sub
test
mov
divps
dec
dec
jmp
xor
sub
sbb
jle
push
adc
insb
pop
mov
push
xor
lcall
mov
dec
mov
push
testl
test
pop
rol
mov
fidivl
ss
mov
pop
lods
jae
pop
lahf
aad
mov
mov
pop
mov
adc
js
loop
aam
test
leave
xchg
mov
mov
shrb
add
pusha
mov
sub
dec
sbb
fsubrl
jecxz
flds
xlat
mov
jl
adc
mov
sysenter
loope
sbb
inc
jg
and
inc
out
or
pop
imul
inc
add
ja
dec
pop
lret
xchg
pop
and
add
mov
arpl
or
jmp
test
dec
jbe
cmpsb
hlt
cltd
sub
or
push
xchg
pop
iret
fists
add
in
or
fildl
dec
mov
mov
rolb
and
cmp
repz
jl
jg
mov
jnp
mov
cmp
mov
pushf
stc
mov
xchg
repz
adc
movsb
ljmp
push
inc
inc
fimuls
sub
mov
adc
xor
or
movsb
mov
movsl
movsb
jne
les
jo
mov
mov
mov
cmp
and
push
out
jp
mov
sub
and
adc
and
lds
sub
data16
jnp
mov
rep
push
add
fistpll
imul
xchg
movsb
push
pop
inc
test
cmp
nop
pop
cmp
pusha
and
imul
dec
or
cmp
fldlg2
sarb
xor
rcrb
push
subb
pop
stc
fdivr
lds
jge
or
gs
jb
movsb
cmp
lcall
xor
fstpt
mov
arpl
xchg
or
idivb
mov
into
loope
lds
lret
mov
ret
into
int3
jb
inc
mov
xchg
data16
inc
js
pusha
cmc
ss
mov
mov
cmpl
sub
mov
xchg
gs
fs
inc
movb
fistpl
outsl
rcr
pop
xor
xchg
jmp
sbb
insb
inc
in
mov
jge
pusha
add
and
cld
inc
adc
and
jg
fwait
out
dec
mov
lock
lods
pop
pusha
mov
jle
repnz
sbb
lods
dec
jmp
cmp
jg
xchg
mov
mov
and
ja
xor
sub
call
sti
cmc
add
add
mov
and
mov
inc
stc
sub
mull
xlat
insb
lret
mov
jae
jno
jle
and
je
push
shrb
cld
adc
aam
fldl2t
inc
aad
cs
mov
jns
adc
int3
movsb
mov
test
lds
inc
dec
shl
call
pop
pop
inc
stos
pop
cld
shlb
data16
jo
jp
or
sub
adc
and
or
leave
mov
sub
dec
add
xor
jbe
lds
inc
mov
xchg
mov
dec
sahf
filds
popf
add
xor
hlt
int3
add
rcrl
jo
push
ret
int
aad
inc
notl
xchg
lea
hlt
aas
loopne
mov
sub
jp
stos
jns
xor
inc
jg
sbb
decl
push
aas
mov
fcmovnu
cld
mov
mov
adc
push
jae
lods
les
divb
test
push
imull
imul
sub
inc
test
adc
call
cmpsb
enter
je
std
cmp
push
lcall
adc
lods
je
cmpsl
or
push
test
xchg
cmp
mov
jae
push
rclb
mov
sahf
sub
sahf
xor
mov
pop
aam
pop
repnz
sbb
mov
out
mov
lret
pop
mov
jg
ss
lock
mov
and
nop
add
iret
jl
jecxz
ficoml
xchg
mov
dec
or
aam
in
daa
repz
jmp
jle
and
pop
cld
lret
mov
dec
push
jo
jb
or
lcall
or
push
add
pop
mov
enter
scas
test
xor
sbb
jno
fcom
push
and
add
xor
insl
loopne
sub
int3
mov
daa
jne
pop
and
gs
xchg
mov
cwtl
pop
xchg
cmp
push
and
fistpl
pop
je
cmp
pop
addr16
add
pop
sbb
enter
inc
movsb
imul
dec
insl
dec
pop
insl
cmpsb
mov
cmp
int3
jp
jne
pop
inc
or
push
add
sub
jo
leave
cmp
sbb
notl
mov
jmp
test
mov
je
pop
es
out
nop
loop
xor
into
dec
shll
hlt
cmp
add
call
adc
std
or
cmp
cmpsb
cltd
adc
xor
jae
insl
rclb
fsubrl
pushf
fcomps
xor
imul
jecxz
sub
cmc
lock
loopne
push
ret
loop
rcl
xor
or
mov
scas
adc
fildl
jb
jmp
mov
aas
inc
xchg
and
stos
mov
fildll
ljmp
ja
daa
push
cmp
fbstp
aad
jno
mov
popf
orl
cwtl
add
loopne
pop
das
pop
dec
add
shlb
mov
lods
pop
pop
in
push
pop
or
bswap
rolb
adc
fistl
aaa
imul
inc
xchg
jb
cli
mov
fisttpl
int3
inc
mov
movsb
popa
mov
xchg
cmp
cs
call
mov
insb
xchg
mov
stos
inc
sahf
and
push
or
mov
repz
sub
sbbl
adc
jge
and
sar
sub
in
pop
dec
mov
out
arpl
mov
cmp
mov
and
mov
call
jnp
mov
or
das
repz
add
dec
sub
mov
sbb
mov
inc
push
mov
ss
rolb
sbb
xchg
dec
xchg
shlb
inc
jmp
stos
sbb
xor
test
jecxz
push
aam
push
adc
cmp
pop
add
fdivs
mov
fs
ja
push
xchg
scas
mov
fidivrs
je
aam
mov
jae
mov
movsb
mov
test
ds
fnstcw
inc
dec
out
mov
in
cltd
clc
mov
cltd
mov
std
lods
fnstcw
and
leave
mov
add
outsb
ret
dec
jp
iret
xor
dec
repnz
push
pop
jns
sub
data16
and
pop
add
ds
lahf
movsb
fmul
leave
mov
cmpsl
sub
xchg
sbb
ss
sub
dec
loopne
mov
out
mov
pop
jg
out
inc
jb
inc
inc
outsl
mov
push
pop
ss
push
dec
sub
add
pop
mov
dec
fisubl
jno
mov
bswap
in
ret
adcl
inc
jno
ja
inc
add
inc
push
inc
push
testl
movl
sbb
add
and
in
jecxz
and
sub
mov
mov
cmp
push
mov
rorb
inc
push
mov
mov
aaa
push
stos
pusha
inc
rclb
sbb
mov
mov
dec
dec
lcall
jno
xor
insb
sub
ror
or
fisubrl
and
orb
fsubrl
fistps
jecxz
fcmove
fmull
lret
sahf
scas
inc
sti
sbbb
mov
pop
dec
cmc
and
mov
and
dec
cmp
aas
je
pop
rcr
sub
fsubrl
jge
pop
pop
stos
fisubrs
repz
jb
sbb
es
add
ljmp
jmp
idivl
fstl
adc
fcoms
or
inc
xor
sarl
cs
xor
mov
lods
cmpsl
push
mov
into
dec
fisttpl
test
cltd
stos
xlat
dec
das
nop
adc
pop
cs
fwait
push
dec
mov
data16
je
fcom
xchg
mov
in
popa
ja
jns
lods
push
push
std
dec
popa
mov
sub
pop
das
fbld
or
mov
mov
sbb
and
dec
push
rcrb
out
pop
es
fdivl
xchg
jl
push
je
mov
pop
or
test
xor
xchg
sub
cmp
outsl
push
int
and
or
sbb
je
add
mov
push
cld
xchg
mov
mov
sbb
jb
adc
inc
sbb
movsl
jl
shl
inc
loopne
cwtl
fidivrs
or
xchg
insb
mov
cmpsb
ret
xchg
or
push
imul
movsl
xor
jge
adc
in
and
insb
mov
movsb
jge
fidivrs
int
jmp
mov
sbb
rcl
pop
lret
and
shlb
sub
rorl
int
mov
adc
out
or
lea
mov
sbb
push
jecxz
scas
xchg
call
popf
and
adc
repnz
dec
popf
and
push
mov
and
popf
das
pop
xchg
repz
out
popf
leave
fcmovbe
xchg
shrb
das
add
les
aam
subl
into
jge,pt
notb
pop
inc
adc
es
arpl
into
gs
rcrl
and
cli
dec
shrl
lods
push
lahf
cmp
dec
imul
xchg
xor
mov
shrb
inc
or
int3
ss
movsl
int3
sub
xchg
dec
add
cmp
cmp
lea
js
sub
arpl
xchg
xchg
push
mov
ret
cwtl
ja
jecxz
pop
inc
jne
lahf
pop
add
call
clc
lret
and
push
cmp
imul
out
push
enter
sub
cmp
divb
sti
push
mov
and
sub
push
dec
and
aam
xor
cmp
and
or
jo
std
inc
fisubl
push
mov
iret
and
bound
in
sub
rolb
ret
enter
outsb
loop
popa
lret
test
ffree
lods
jle
or
insb
fst
into
pop
out
mov
ret
or
imul
or
pop
push
adc
in
add
xlat
or
pop
xchg
addl
sub
or
mov
jbe
clc
pop
shlb
daa
mov
mov
hlt
sbb
and
cltd
add
mov
mov
ljmp
mov
inc
cs
fcmove
sbb
mov
fidivl
sub
inc
inc
push
mov
cmp
loopne
mov
sbb
xor
bound
fldt
cmp
pop
xchg
mov
sub
pop
xchg
js
int
call
stc
jge
lock
dec
xlat
mov
cltd
loopne
xlat
fwait
nop
and
push
in
movsb
inc
les
adc
sub
mov
push
lcall
inc
fadds
iret
jae
mov
jp
leave
subb
and
or
jne
mov
cld
addb
jbe
in
jnp
jbe
das
mov
fs
pop
xor
xchg
jmp
push
dec
push
mov
pop
pop
inc
push
shr
mov
adc
jnp
rolb
push
sbb
cli
aas
adc
ficomps
popa
lods
add
jo
iret
push
loopne
hlt
incl
xchg
sahf
mov
cmpsl
bound
ror
adc
scas
pop
mov
xchg
or
popa
test
xchg
outsb
add
rcll
xchg
mov
add
pop
pop
sub
push
scas
adc
orb
push
loop
lea
nop
pop
adc
roll
hlt
movsl
lods
dec
add
push
ds
jl
fdivr
push
das
pop
pop
rcll
sbb
xor
pop
cmc
sbb
pop
lock
in
jo
outsl
outsb
add
inc
mov
inc
out
flds
xor
xchg
data16
dec
or
push
dec
fsubs
inc
mov
mov
sub
adc
subb
lods
and
rcrb
repz
enter
mov
loopne
inc
pusha
ja
mov
and
cmp
repz
jg
add
sub
or
push
int
pop
or
ret
addr16
into
mov
fnstenv
in
mov
mov
xchg
sbb
pushf
xlat
cmp
fdivl
movsb
repz
or
sub
int
mov
xorb
jmp
test
or
xor
cmp
dec
rcl
lea
lret
or
jl
mov
cmp
dec
inc
rclb
mov
pop
and
lods
fs
push
sub
xchg
fldpi
shl
sub
gs
pushf
out
mov
sub
inc
loope
test
shlb
bound
mov
mov
add
aam
js
in
mov
sbb
xchg
leave
test
fisubrl
fwait
repnz
pop
and
gs
jge
jne
or
fisttpll
je
jge
push
adc
mov
data16
add
inc
mov
mov
lods
ret
or
xlat
push
cmpsb
aam
inc
enter
stos
jno
mov
lret
sub
jo
xchg
mov
mov
aam
inc
ds
push
or
stos
lret
sub
neg
jmp
fldt
dec
mov
mov
sub
aad
xchg
xor
sub
mov
cmp
daa
pop
mov
pop
out
and
sbb
in
int3
cltd
jle
je
not
mov
mov
bound
dec
mov
xchg
out
dec
pop
shrb
enter
cmp
dec
xchg
lea
cmp
int3
pop
movsb
pushf
mov
lcall
xlat
add
ja
in
ja
or
or
mov
dec
push
std
pop
push
ret
inc
inc
dec
and
rorb
and
xor
mov
sahf
aas
jl
adc
jmp
lods
ds
sub
aas
sub
pop
ljmp
scas
inc
aas
fs
xchg
out
lret
cld
pop
iret
push
xor
xor
and
mov
hlt
adc
lahf
out
xor
in
and
sarb
adc
adc
or
mov
xor
mov
mov
out
dec
insl
inc
adc
das
rolb
cmp
fwait
div
lret
mov
mov
adc
jl
out
pop
loop
inc
and
cmp
psubusw
mov
ljmp
xor
dec
xchg
push
bound
mov
sbb
cmc
lcall
fidivrs
inc
xchg
jne
cld
mov
pop
mov
cmp
in
xchg
mov
cld
jl
adc
lret
mov
lret
pop
and
jge
inc
and
enter
xor
mov
add
cltd
arpl
xchg
dec
xor
loop
xor
loope
movsl
mov
mov
pushf
movsb
into
cld
data16
dec
inc
inc
das
aad
imul
fldl
inc
mov
jns
sub
movsb
dec
mov
xchg
push
cmp
shrb
xchg
xor
fs
rorl
and
in
clc
pop
mov
sti
lods
popf
fcompl
roll
adc
stc
mov
jbe
jle
push
sub
sahf
divb
push
addr16
xchg
mov
ret
cmpsl
aas
pop
outsb
pop
cltd
adc
add
iret
sbb
outsb
xor
ret
mov
inc
jg
frstor
ret
cmpsb
leave
mov
lahf
mov
jo
addr16
cli
stc
pop
xor
sub
roll
lods
xor
cmpsl
pop
mov
mov
mov
lcall
int
or
mov
sbb
fcompl
jno
jle
cltd
rcl
lcall
into
sbb
test
mov
jmp
test
orl
icebp
sub
addr16
pop
addr16
push
xchg
scas
sbb
adc
xchg
fisubrl
push
or
cltd
pop
dec
sbb
imul
out
enter
mov
xor
add
jle
jo
scas
mov
aam
mov
lahf
rcr
or
mov
ja
jl
shrb
les
dec
stos
jmp
dec
int3
js
movsl
cmp
lea
arpl
lahf
adc
lods
mov
std
adc
jno
out
push
int
fcoms
rclb
push
or
and
cld
pop
xor
andl
inc
xchg
mov
and
push
dec
xor
orl
cli
xor
fcoml
mov
addr16
mov
or
cli
lret
adc
mov
jle
cmp
xchg
addr16
sbbb
xchg
arpl
add
dec
in
movsb
std
popa
dec
test
insl
nop
test
inc
pop
jb
dec
loopne
xor
sarl
pop
mov
pop
ret
fwait
or
jno
sbb
int
cmp
lcall
fcompl
mov
call
pop
scas
adc
dec
arpl
ficoms
dec
loope
dec
jo
and
roll
mov
pop
fwait
pop
roll
test
imul
dec
ret
lea
into
push
dec
and
and
and
pushf
dec
mov
iret
jno
stos
xor
pop
pop
pushf
xchg
push
xor
aad
xchg
pop
mov
dec
cwtl
mov
cmpsb
sub
clc
in
xor
add
pop
xchg
sub
in
mov
das
cmp
jns
in
test
jae
sub
movsb
faddl
outsb
lret
dec
les
cld
mov
or
in
xchg
jo
stc
leave
test
bound
jb
add
nop
mov
lods
push
jecxz
cli
and
leave
test
sbb
sarl
sbb
lds
xlat
jp
fiadds
mov
daa
push
fnstcw
xchg
rcrb
pop
leave
clc
sbb
mov
sbb
hlt
pop
imul
xor
cmp
push
es
shrb
ret
jmp
je
arpl
enter
rolb
mov
sub
xchg
push
cmp
xchg
sar
cmp
es
ret
or
fistl
add
mov
mov
aas
jnp
fcompl
pop
inc
adc
ds
sbb
jb
cmp
dec
pop
cmp
mov
cmpsl
popa
int
shlb
and
lock
jnp
xchg
and
dec
pop
dec
loop
shl
fnstenv
dec
adcb
mov
cmp
mov
xor
jle
xchg
movb
jp
imul
loop
xchg
std
xorb
dec
cmp
jp
dec
jae
sarl
outsl
gs
fnstenv
mov
xchg
pop
test
bound
insl
lods
enter
outsb
cmpsb
sbb
rcrb
aas
mov
js
and
clc
xor
xchg
in
and
rol
xchg
xchg
frstor
ret
pop
pop
movsb
mov
fcmovne
cwtl
int3
fsubp
dec
test
xor
dec
push
fisttpl
cmpsl
ret
cmp
es
mov
mov
iret
popf
pop
xchg
leave
pop
ja
push
fisubrl
nop
inc
push
enter
movsb
cmp
fbld
mov
inc
mov
sbb
aas
je
aad
inc
lcall
movsb
or
xchg
icebp
push
loope
inc
adc
lods
inc
push
addr16
in
push
sub
aam
addr16
push
inc
ds
mov
mov
add
sbb
or
mov
dec
jle
mov
xor
pop
lds
jl
pmullw
pop
cmpsl
inc
or
insl
test
mov
pop
xor
test
fimuls
jo
add
out
sub
andl
xlat
lcall
sub
mov
jle
test
addr16
add
jmp
mov
mov
loope
lds
in
jne
mov
jecxz
shlb
inc
mov
xor
int
sbb
addr16
adc
mov
pusha
xchg
xchg
sub
arpl
push
pop
ficoms
mov
mov
es
leave
test
addr16
fldcw
cmp
loope
into
add
gs
xlat
dec
sti
cmc
call
rorb
iret
inc
jmp
sbb
ret
sub
repnz
sti
jnp
test
cmp
lret
aad
inc
lcall
nop
repz
insl
dec
xchg
into
cmp
mov
lea
ficomps
xchg
push
rol
cwtl
jle
cmp
pop
push
dec
out
sahf
xchg
sub
out
roll
pop
mov
cmpsl
je
cli
add
pop
ficomps
pop
pushf
jle
inc
lret
jle
xor
pop
loope
sbb
out
aad
or
xchg
fidivrl
pop
lahf
xchg
ss
shrb
rorb
sahf
adc
mov
xor
mov
mov
xor
push
mov
pusha
cmp
sbb
pop
aam
es
mov
int3
sub
pushf
emms
push
out
out
add
icebp
inc
ljmp
mov
push
add
and
xchg
xor
daa
shll
mov
into
cmpsl
movsl
stos
push
les
or
aaa
jbe
mov
xchg
cmp
mov
ds
jno
or
ljmp
push
cmc
repz
clc
aas
js
mov
mov
mov
jmp
nop
enter
fidivrl
jp
dec
fstps
dec
xchg
xor
enter
mov
bound
cld
jle
mov
dec
ret
loope
std
or
and
pop
cwtl
lods
in
push
divb
dec
cmp
js
inc
fisubl
aad
sahf
in
add
jle
mov
cmp
popa
aam
push
jg
cli
lret
je
mov
xor
adc
enter
fadds
mov
inc
sahf
xchg
mov
xor
int
jae
push
out
and
inc
xchg
subb
nop
imul
loop
and
mov
popa
mov
fldenv
mov
sbb
xor
movsb
js
add
int
repnz
push
sub
cld
add
popf
cwtl
mov
dec
adc
mov
and
xor
popf
pop
mov
inc
add
test
mov
movsl
xchg
xchg
jle
inc
stos
jecxz
xchg
adcl
mov
xor
mov
iret
jp
mov
cli
movsl
xchg
xchg
add
lahf
sar
sar
mov
shlb
movsb
xchg
mov
jecxz
dec
ret
add
clc
test
pop
mov
add
roll
leave
fcomps
mov
or
xlat
shll
jle
int3
mov
mov
sbb
cmp
inc
push
sub
xchg
inc
lret
rolb
mov
mov
push
push
ss
xor
sbb
jbe
adc
les
mov
mov
insl
mov
ss
ss
pop
mov
jp
jo
test
lods
lahf
push
cmpb
daa
xchg
out
mov
mov
mov
dec
mov
mov
push
loope
sub
mov
call
popa
xchg
jne
pop
iret
jno
test
jecxz
or
idiv
inc
outsb
cmp
jecxz
dec
xchg
xchg
xchg
insl
dec
jle
cwtl
xchg
xchg
mov
clc
xchg
mov
fsubrs
lcall
je
or
push
mov
pop
add
test
xchg
loop
inc
std
or
ja
stos
mov
xor
jns
in
scas
adc
sbb
mov
mov
aad
jne
aas
arpl
xchg
add
cmp
aas
hlt
mov
fs
insl
jno
or
or
xchg
mov
test
in
shl
mov
push
jecxz
mov
aam
imul
loop
xchg
push
or
orl
push
dec
mov
pop
or
movsb
out
add
das
pop
cltd
cmp
mov
push
outsb
into
xchg
enter
cmpsb
insb
pop
stos
push
sbb
rclb
pop
rclb
stos
test
xor
add
add
in
stos
jb
fwait
and
xchg
mov
push
in
rolb
movsl
sahf
mov
mov
push
sbb
in
inc
cmpb
ds
and
repnz
cmpsb
cmp
lds
xchg
push
mov
sub
shll
adc
cmp
out
push
rol
gs
std
xchg
and
or
xchg
push
mov
hlt
pop
xor
sub
inc
pop
shrb
adc
fsts
xor
or
shlb
mov
fmull
jg
pop
imul
cmp
mov
testb
and
pop
ja
push
pop
cmpsl
mov
inc
push
xlat
call
push
xchg
jno
or
fdivs
cmp
inc
sub
push
dec
fwait
aas
cmp
pop
ror
cwtl
or
xchg
pop
add
mov
cmp
jecxz
inc
outsl
lcall
xor
pop
insb
aaa
inc
sub
mov
out
inc
mov
dec
ds
jns
add
jnp
add
dec
mov
jns
shrb
push
dec
fxch
pop
movsb
inc
mov
or
jg
cli
cs
jne
decl
jecxz
push
ja
scas
outsl
jns
pop
or
sbb
lods
fistps
or
sub
in
dec
inc
cwtl
mov
cmpsl
mov
das
xlat
jmp
mov
rsqrtps
or
xchg
push
insb
addr16
aaa
popf
fldcw
mov
in
lcall
addl
inc
cwtl
leave
adc
mov
ds
jns
fsubl
je
xlat
inc
mov
fwait
out
roll
xor
mov
and
mov
push
ficoml
push
lds
dec
mov
inc
inc
adc
jge
xchg
aam
jnp
sbb
inc
shlb
ds
frstor
jo
push
cmp
call
and
add
or
mov
test
or
int3
inc
push
xchg
fbstp
xchg
hlt
sbb
scas
mov
add
mov
dec
ja
push
outsl
cmp
iret
xchg
in
lret
call
lea
aam
dec
imul
xchg
jl
filds
or
cmpb
pop
cmp
les
push
cmp
xchg
pop
jbe
addr16
ja
hlt
shll
pop
mov
shr
dec
sti
mov
pop
stc
xor
xor
mov
pop
ds
outsl
fchs
ss
enter
stc
and
or
leave
sub
mov
bound
lret
lahf
fstps
dec
adc
cmp
and
mov
imul
mov
out
repnz
out
xchg
push
mov
div
ret
fistpll
movsl
sbb
push
lock
sbb
cmc
pop
sbb
sahf
fiadds
mov
lea
mov
and
lds
pop
add
push
xlat
jmp
mov
xchg
jo
inc
pushw
clc
lret
push
sbb
mov
mov
icebp
das
and
dec
and
mov
pop
aam
mov
add
cltd
and
cmp
xor
inc
push
inc
xchg
sarb
add
push
ret
cli
jg
xor
lods
mov
sub
and
cli
cmp
or
stos
sarl
fdivr
fwait
mov
xor
mov
pop
fsubs
lea
mov
stos
sub
push
insl
sub
and
pusha
mov
add
push
shrb
popa
jnp
jge
jg
nop
shll
vmovntps
inc
jb
std
shlb
lods
jl
adc
aas
shrl
paddw
iret
bound
dec
mov
jnp,pn
adc
rorl
pop
mov
push
cmc
repnz
shr
dec
scas
ror
cmp
push
aam
inc
jnp
add
ret
and
mov
lcall
mov
aaa
add
mov
add
addr16
dec
add
sti
add
inc
pop
lret
cmp
nop
push
sbb
fdivrs
test
jg
loopne
or
dec
push
mov
fidivrl
mov
rcr
push
push
pop
and
out
mov
test
test
inc
or
out
adc
repz
rorb
std
or
cmc
popa
or
cld
cltd
jecxz
dec
jae
test
mov
sub
pop
xchg
mov
mov
cmpsb
orl
mov
mov
ljmp
and
pop
add
pop
pop
jp
dec
fisubl
mov
shlb
data16
jl,pt
or
leave
in
inc
sti
inc
mov
icebp
jl
pop
dec
mull
jne
jge
jne
adc
dec
inc
xchg
jno
loopne
jle
mov
cmp
xchg
outsl
xchg
inc
lea
aaa
xchg
inc
data16
divb
mov
hlt
push
inc
daa
leave
test
sbbl
outsb
repnz
xor
cli
push
call
lods
jb
push
add
add
pop
pop
cs
push
mov
push
push
or
jp
in
cmp
jb
mov
icebp
fs
add
mov
mov
pop
fwait
adc
add
test
inc
in
scas
fwait
xchg
add
add
mov
add
pop
ss
insl
notl
or
dec
inc
add
jg
int
or
jo
jmp
dec
stos
inc
xchg
dec
mov
mov
dec
and
add
lret
mov
lock
fisubrs
je
sti
jno
enter
call
ljmp
mov
aas
dec
and
mov
nop
leave
pop
ror
pop
jne
mov
fldcw
xchg
dec
addb
add
jl
xchg
pop
lea
mov
xor
cs
xchg
sub
fs
lea
cmp
jmp
pop
xchg
lock
imul
outsl
cmpl
adc
out
lret
jbe
or
dec
mov
add
mov
adc
cs
cli
xor
jg
mov
adc
lods
xchg
pop
sub
fsubrs
mov
or
xchg
xlat
cltd
adc
clc
sti
add
aaa
cmp
sub
add
into
iret
add
pop
lret
jg
push
movsl
lcall
inc
jo
pop
rolb
jne
es
stos
mov
xchg
inc
pop
xor
dec
lods
add
or
push
pop
or
fdivrs
mov
inc
adc
xlat
xchg
pop
sub
xchg
and
aaa
pop
jns
adc
loop
add
add
cld
aaa
inc
pop
cmp
pop
mov
pusha
sub
out
jmp
int
out
cld
mov
mov
push
adc
jo
push
push
or
xor
mov
adc
fnstenv
or
pop
push
xor
push
mov
jge
test
inc
dec
leave
xchg
push
adc
sub
cmc
out
pushf
inc
aad
data16
je
test
rol
xchg
jmp
psrlw
nop
fyl2xp1
in
and
jg
mov
daa
sub
rorl
dec
dec
add
cld
lods
aad
shll
dec
repz
imul
jecxz
loope
ljmp
lds
or
ja
sub
pop
icebp
lods
inc
loope
jl
sub
and
subb
mov
adc
add
or
js
fisttpll
sub
and
imul
std
mov
cmp
cmp
fcomps
imul
mov
mov
leave
mov
or
fbstp
xor
mov
cltd
cmp
cmc
xchg
push
das
outsl
hlt
lahf
xor
pop
das
pushf
sbb
adc
cli
aas
test
iret
jns
jl
mov
imul
sub
repz
test
rcrb
push
push
xor
iret
add
pop
jns
data16
sbb
test
aam
adcl
mov
mov
mov
out
outsl
or
or
xor
and
pusha
mov
pop
pop
aas
stc
sub
xchg
cmp
sbb
jae
xor
fsubrs
sbb
mov
sbb
scas
xor
test
iret
sbb
jns
jne
cld
and
push
xlat
pusha
jge
pop
dec
std
sbb
mov
add
pop
pop
test
sti
push
inc
scas
sti
enter
movsb
xor
subb
dec
outsb
and
xchg
loopne
sbb
pushf
test
test
mov
or
das
enter
arpl
js
pushl
lods
cs
xchg
or
inc
cmp
add
mov
cmpsb
aas
popa
push
fildll
dec
inc
adc
sarl
mov
sub
and
push
hlt
lret
jbe
cwtl
xor
cltd
sar
mov
pop
js
hlt
sbb
sub
hlt
lds
inc
and
mov
rcr
cmp
and
xchg
sti
std
mov
les
cmp
aam
hlt
rolb
arpl
dec
and
mov
arpl
mov
into
lods
mov
stc
aad
int3
test
mov
cmpsb
movsb
pop
test
sub
out
adc
das
jl
icebp
jns
test
add
xchg
jne
out
arpl
mov
add
pop
popa
mov
cwtl
sbb
fwait
xor
jl
sbb
mov
nop
cmp
add
mov
xor
or
inc
fadd
pop
mov
push
outsb
imul
mov
adc
cmp
add
or
or
cli
sub
add
jno
jmp
dec
and
je
lahf
dec
roll
loope
cmpl
stos
xor
sub
xchg
cmp
sbbl
xchg
stos
mov
pop
aas
sbbl
xchg
sub
in
leave
lret
sub
mulps
int
push
inc
cmp
imul
arpl
mov
in
pop
xchg
leave
sbb
pop
push
sub
jp
mov
adc
or
pop
andl
cmovnp
fistps
sub
imul
and
pusha
dec
in
imul
outsl
jecxz
lahf
jae
and
add
test
add
fsubl
enter
dec
les
loopne
rcr
sub
xchg
mov
mov
fistpl
xchg
ljmp
nop
adc
pop
js
call
sbb
jo
movsb
out
jle
dec
out
mov
into
mov
push
fisubl
jb
sub
add
or
lods
xchg
ja
adc
add
dec
rorl
jno
test
daa
lret
mov
imul
dec
jle
movsb
movsl
popf
xchg
xor
sahf
int
or
mov
addl
enter
outsl
decb
pop
push
jmp
aaa
fs
js
in
das
xchg
int3
imul
testb
imul
and
mov
jbe
push
rclb
enter
fstpl
imul
lds
and
sbb
cmp
mov
push
pop
rclb
sbbl
aad
bswap
mov
repz
mov
sbb
xchg
lods
jb
aaa
xchg
mov
cmc
ret
scas
jg
mov
test
aas
cmp
pop
fdivp
mov
or
aam
es
sub
in
mov
dec
jg
jp
and
sbb
adc
adc
ja
dec
jmp
jbe
jne
fcmovbe
hlt
lock
or
nop
enter
pop
lret
leave
and
xor
cmc
pushf
fs
je
pop
mov
insl
dec
and
jle
and
scas
push
dec
clc
pushf
icebp
nop
daa
nop
cs
stc
loopne
in
mov
cltd
mov
jp
mov
outsl
push
adc
lds
dec
cwtl
gs
xchg
insl
ret
pop
sub
jp
lds
inc
mov
popa
sub
inc
fwait
sub
fimuls
sbb
neg
sub
mov
jg
ljmp
das
fwait
movsb
xchg
pop
fisubrl
fnstsw
in
mov
sub
lods
dec
pop
cld
inc
xchg
push
inc
scas
enter
xor
sarb
push
add
test
jmp
fdiv
movsl
rcl
mov
push
dec
mov
xchg
dec
ret
or
mov
es
cs
das
push
cmp
xchg
or
pushf
dec
mov
aaa
outsb
add
repz
mov
es
sbb
dec
push
mov
sub
cmp
and
js
dec
flds
sub
rcr
stos
sbb
sti
loop
stos
repz
repz
push
in
shll
in
repnz
jne
lret
mov
repz
hlt
inc
xchg
stos
dec
inc
dec
aam
loop
lret
xchg
cmpb
pop
mov
std
ss
push
xlat
iret
pop
add
sahf
cmp
sub
mov
mov
hlt
std
cmp
stos
rorl
stos
dec
inc
dec
add
addb
mov
out
dec
lods
lea
push
add
jo
clc
xorb
adc
aad
leave
jae
dec
cmp
out
ret
pushf
lcall
add
add
into
adc
add
lds
mov
jmp
roll
lods
std
cmpsb
xor
push
dec
jmp
xor
stos
rcr
cmp
hlt
fnstcw
hlt
sarl
xor
leave
or
add
mov
sahf
push
ss
imul
incb
sbb
push
xor
sbb
sub
nop
xchg
shrl
jg
inc
shlb
imul
dec
outsb
mov
addb
dec
add
pop
add
cmp
push
dec
xor
xor
cltd
mov
xor
pop
ja
jno
rcll
cmp
cs
inc
pop
inc
sbb
dec
loopne
aad
je
xor
mov
dec
hlt
idiv
cld
adc
or
adc
dec
enter
insl
out
jae
mov
loope
mov
mov
or
movsl
andl
add
ret
ret
clc
fistpl
jmp
pop
imul
call
mov
mov
or
js
fucom
roll
jno
mov
idivl
scas
mov
scas
fwait
mov
pop
sub
mov
jno
cmp
pop
inc
aad
dec
xchg
andb
xchg
hlt
mov
cltd
pop
cmp
xchg
jb
js
and
pop
mov
xchg
or
push
push
roll
and
mov
xor
and
sarb
or
jo
add
movsl
cmp
xor
hlt
in
rclb
orl
jnp
dec
loopne
fadds
bound
leave
jg
push
adc
mov
popf
dec
flds
sub
xchg
mov
xlat
fldl
cld
jnp
xchg
loop
ja
and
lret
ja
xchg
mov
movsl
fyl2xp1
push
jne
mov
jge
push
sbb
adc
cmp
dec
mov
mov
jmp
bound
xor
push
mov
dec
add
in
in
iret
ja
push
mov
call
xchg
daa
cli
fildll
mov
xchg
lcall
inc
push
mov
ja
xor
insb
pop
push
testb
lcall
outsb
lods
stos
jb
pop
decb
push
push
jl
cmpsl
std
add
and
ljmp
rcrl
imul
dec
cmp
inc
bound
loop
pop
int3
push
or
imul
inc
arpl
test
dec
mov
mov
pop
xor
pop
mov
cmp
jp
outsl
inc
scas
cmp
pop
shll
mov
adc
and
dec
cli
pop
in
lods
sbb
push
xchg
xchg
cld
ds
push
or
mov
stc
js
mov
movl
aas
xchg
sub
movsl
inc
push
cmp
jbe
call
adc
add
mov
loop
stos
jge
or
into
fsubrl
rcr
sub
dec
jnp
cmp
add
cmp
mov
sbb
mov
sti
mov
fsubl
push
cmp
dec
ret
push
jmp
test
js
sbb
cmc
pop
lea
add
or
rcrl
jle
insl
push
push
aad
fisubrl
rcrl
out
notl
lcall
push
out
ret
pop
rclb
rorl
fs
mov
sub
inc
dec
aas
add
fisttpl
sub
xor
daa
stc
test
lods
or
rclb
jmp
call
push
cmp
rolb
ja
mov
movsl
push
xor
lret
mov
pop
push
or
lods
or
mov
inc
xor
ret
jge
das
pop
fwait
imul
cltd
loope
mov
adc
pop
enter
pop
xchg
push
or
inc
mov
xchg
in
aaa
mov
pop
hlt
inc
mov
xchg
sti
mov
cmpb
aas
pop
push
pop
sub
insl
or
insb
dec
pop
sti
dec
fptan
fisttps
das
push
lds
les
mov
jl
mov
sub
jecxz
push
inc
sbb
dec
dec
add
lea
hlt
mov
push
imul
mov
fisubrl
jmp
mov
jle
jg
dec
enter
pop
push
fildl
loope
jne
push
push
fs
arpl
cwtl
xor
adc
cmp
xchg
mov
push
jg,pt
cmc
mov
fisubrl
enter
adc
imul
dec
call
xchg
mov
or
test
xchg
mov
ds
lods
fs
bound
outsb
imul
les
jle
pop
lret
icebp
iret
push
mov
cmp
mov
and
pop
xor
dec
scas
leave
cmp
enter
sbb
xor
add
jg
sub
fadds
aaa
stc
sti
pop
pushf
mov
sub
push
or
cmp
push
and
jae
jnp
pop
dec
dec
scas
inc
ret
pop
mov
dec
cld
pop
cmc
xor
std
adc
cmpsl
in
aas
fstpl
adc
into
jg
fwait
pop
xor
sub
sti
aaa
pop
scas
or
sub
pop
xor
pop
outsl
xor
push
dec
adc
xchg
or
mov
sahf
mov
mov
xchg
orl
cmpb
pop
jae
mov
jne
mov
add
lods
rcr
cltd
pop
push
cltd
scas
popa
shrl
xchg
sbb
mov
adc
adc
sbbb
xor
or
decb
or
add
or
pop
add
in
ror
incb
sti
lea
sbb
cmp
add
mov
ret
test
pop
mov
shll
mov
add
push
test
inc
mov
sbb
sub
jne
push
pop
aas
push
and
sti
cmp
sbbb
in
cld
leave
shrb
pop
and
sbb
rclb
lds
in
push
jmp
mov
and
in
mov
mov
cmp
out
ja
xor
js
push
enter
dec
add
and
mov
inc
cs
fwait
enter
cld
stos
inc
gs
fldl
dec
movsb
push
jg
inc
icebp
lds
mov
mov
push
imul
jns
dec
mov
sbb
pop
outsl
nop
mov
and
jo
ficoml
pop
int3
xorl
xchg
cmp
ss
and
stos
adc
pop
scas
dec
pop
into
nop
loop
push
rorb
outsb
inc
xchg
xchg
xor
adc
adc
cld
add
loop
xchg
into
adc
lcall
pop
nop
dec
mov
inc
jno
push
dec
in
insl
push
testb
les
popa
adc
scas
mov
aam
mov
nop
fsub
js
pop
pop
test
mov
stos
push
loopne
insl
jne
arpl
sahf
sbb
mov
mov
fdivl
inc
bound
test
dec
mov
pop
cli
push
nop
add
scas
leave
les
loop
stc
add
pop
sbb
push
jp
and
shll
daa
jbe
sub
mov
dec
jmp
mov
adc
cld
xor
mov
std
push
xchg
mov
ret
and
or
xchg
out
pusha
push
shrb
imul
dec
mov
mov
pop
int3
enter
rclb
insb
and
arpl
repnz
pop
sti
test
sbb
pmullw
push
cmp
jle
adc
jb
or
xchg
and
push
test
dec
xlat
or
add
fstpl
cwtl
cmovnp
and
jmp
les
jl
bound
repz
lock
fisubrl
pusha
dec
and
dec
data16
fmuls
aaa
mov
lods
xchg
mov
leave
add
mov
in
add
push
ja,pn
test
sarb
ljmp
insl
sub
pop
and
cmpsl
hlt
ljmp
mov
cmp
xchg
sub
jg
rcll
and
add
addr16
sbb
lret
fsubrl
xchg
inc
jmp
add
test
test
and
xorb
jb
iret
and
push
enter
nop
outsb
xor
inc
inc
out
sbb
aad
imulb
daa
hlt
ret
push
or
mov
into
or
int
pop
inc
flds
xor
xchg
add
lret
iret
imull
add
incl
adc
addr16
pop
xchg
jmp
lcall
cwtl
jb
addl
mov
add
push
mov
jmp
inc
add
jge
inc
repz
outsl
mov
enter
jg
dec
fcomps
mov
or
out
xchg
fcomip
cmp
loope
add
add
je
push
fistpl
aaa
stc
popf
cmp
push
push
and
pop
sub
sub
mov
ljmp
mov
sbb
cmc
int
mov
mov
jo
loopne
adc
mov
or
adc
jo
aad
ss
sub
je
cmp
arpl
push
addb
inc
pop
ret
xchg
mov
imul
ficompl
cmp
and
leave
inc
mov
fmul
fildll
ds
or
sub
add
sahf
and
sbb
mov
pop
clc
inc
xor
mov
imul
rcrb
inc
and
jo
pop
les
mov
cli
or
lret
cmp
or
ror
mov
sti
imul
outsb
pop
cmpl
push
xlat
daa
nop
lret
fidivs
mov
xor
dec
pushl
sbb
jle
or
cmp
push
and
bound
push
mov
mov
lock
rclb
adc
pop
aaa
out
call
fldt
sbb
push
push
cmpsl
lods
adc
xchg
sbb
shl
fiadds
xor
ficoml
fwait
jns
decb
mov
jge
lods
lea
sahf
leave
push
push
loopne
adc
mov
es
cmc
pop
pop
jb
mov
push
mov
jmp
dec
mov
fstl
in
mov
lods
dec
outsl
cmpsl
cmp
xchg
pop
cmp
mov
sbb
or
int3
mov
fcoms
push
dec
xor
cmp
pop
scas
cmp
lcall
xchg
shrb
mov
leave
sbb
xor
pop
xchg
add
adc
cld
insb
xor
enter
mov
lret
std
xchg
les
mov
and
fcomi
mov
lret
push
mov
sbb
xor
test
mov
mov
setb
push
pop
aad
jl
and
mov
ja
rcrb
imul
or
jbe
repz
mov
ljmp
shll
mov
cmp
jl
pop
dec
leave
dec
sbb
ret
insb
test
pop
and
movsb
inc
and
sarl
xor
mov
and
arpl
xchg
pop
sbb
test
push
jne
adc
sub
fisubl
jg
pop
pop
mov
xchg
aam
pop
dec
or
loope
inc
mov
dec
lret
je
push
sbb
das
sti
je
pop
inc
flds
dec
rol
mov
jae
jmp
loop
test
sub
jl
xchg
in
lret
mov
outsl
push
pop
mov
dec
xor
and
stc
data16
cmpb
js
int3
push
jp
sub
mov
push
mov
push
push
push
mov
popl
dec
fidivrs
add
arpl
mov
push
or
pop
adc
pop
jae
movsb
mov
jne
lods
popf
sub
pop
fldt
or
fsts
das
mov
mov
addr16
mov
dec
icebp
mov
aam
iret
sub
scas
mov
adcl
jl
arpl
ret
cmc
stos
inc
mov
outsb
push
out
leave
mov
insl
cmp
ficomps
out
out
enter
popl
pop
or
mov
mov
test
stos
mov
mov
icebp
jg
mov
aad
mov
popa
bound
xor
adc
xor
mov
pop
inc
cmc
mov
xlat
adc
mov
pop
pop
dec
adc
daa
ret
fistl
mov
xchg
call
loope
imul
test
inc
xchg
mov
jl,pt
mov
jo
and
std
push
and
movsl
push
push
jb
dec
adc
stos
or
sub
inc
mov
inc
cmp
sbb
and
mov
int3
aad
lea
lds
or
or
cpuid
mov
inc
mov
xchg
enter
nop
pushf
mov
jecxz
and
out
lret
aas
xchg
or
jl
loope
dec
jno
add
sbb
scas
sub
sub
push
test
cli
je
dec
loope
jns
sub
movsl
andl
repnz
push
sub
add
cmp
imul
dec
pop
femms
cwtl
add
pop
mov
in
scas
fbstp
pop
pop
cmp
pop
mov
mov
lret
in
bound
jg
fcoms
xchg
sahf
sbb
mov
lret
test
mov
push
mov
dec
mov
inc
xchg
int
adc
lods
lret
add
in
mov
mov
addb
out
ljmp
bnd
jge
push
push
leave
and
add
push
pop
ficoms
loop
pop
ret
fnstsw
adc
sbb
dec
ss
popa
fldl2t
scas
fcoms
fndisi(8087
jb
pop
icebp
sbb
fmull
lds
jmp
pop
inc
out
xor
sbb
inc
pmulhw
dec
movb
les
xchg
fstpt
fstpl
and
push
mov
mov
cmp
mov
les
loop
bound
stos
fs
inc
and
mov
outsb
dec
jb
cli
lret
cli
inc
or
stos
push
ja
xchg
inc
push
cwtl
add
xlat
inc
fisubl
cmp
insl
sbb
mov
or
mov
pushf
imull
mov
mov
or
or
ja
pop
stos
fs
xor
sahf
pop
cltd
inc
mov
mov
pop
mov
shrl
or
js
mov
and
adc
lods
cmp
mov
cmp
sub
loop
out
xchg
xchg
call
and
mov
in
mov
xchg
aam
fdivrs
mov
sub
hlt
stos
sarl
out
imul
xlat
subb
pop
add
rol
mov
fwait
xchg
jecxz
mov
cmp
lock
ja
stos
in
pop
sbb
sbb
fcompl
and
adc
dec
cmp
test
adc
popa
in
cmp
shll
mov
cmp
into
sbbl
xor
inc
pop
dec
cmc
pop
das
xchg
mov
fdivrs
dec
out
lods
and
cmpl
fsubrl
repnz
push
xor
mov
xchg
xor
xor
jo
or
mov
in
xchg
adc
lds
adc
xchg
inc
lock
xchg
shlb
mov
add
mov
xchg
inc
inc
jle
mov
inc
cmp
sub
and
arpl
ficompl
xchg
xlat
jle
leave
add
test
sahf
pop
jo
je
lods
cmp
xchg
sub
add
sub
adc
pop
adc
decl
mov
stos
imul
mov
ret
xchg
fldcw
pop
movsb
xlat
adc
arpl
jae
dec
push
iret
mov
scas
nop
xchg
cltd
movsb
mov
ret
adc
mov
lret
ret
push
xchg
daa
je
lret
sbb
lret
cli
lret
mov
loopne
jg
cli
rclb
cmpsb
cmp
push
decb
jbe
add
mov
pushf
add
test
cltd
int3
fistl
cmp
scas
or
aaa
pop
cltd
jae
sti
pop
dec
mov
js
cli
fcomp
push
aam
pop
pop
dec
jo
xor
cld
popa
movsb
insb
xlat
into
mov
dec
in
jle
int3
xor
insb
push
cltd
stos
dec
clc
jle
mov
or
sub
imul
repz
inc
testl
sbb
cmp
xlat
jecxz
sbbl
imul
mov
fbstp
xchg
or
ret
iret
das
and
iret
icebp
adc
inc
enter
aam
in
sub
cmpsl
test
leave
mov
dec
repnz
rorb
jno
mov
xchg
sti
mov
mov
mov
hlt
and
mov
xchg
mov
pop
mov
not
cmpsb
mov
cwtl
adc
cmp
and
add
xor
or
roll
adc
mov
aad
mov
pop
jns
xchg
lcall
mov
inc
sub
insl
in
add
into
jle
jno
testl
shrb
xlat
dec
push
je
nop
mov
dec
jp
xchg
jle,pn
es
mov
shll
cmpsb
jae
pop
mov
xchg
xchg
or
xchg
jmp
mov
pushf
outsb
sbb
xchg
test
mov
movsb
jmp
cmpsb
mov
push
cmp
cmp
scas
sbb
scas
test
pop
arpl
fimuls
jp
std
inc
sub
xor
int3
pop
push
xchg
scas
inc
mov
fnstsw
arpl
inc
fsts
andl
and
push
cld
stos
dec
scas
out
inc
cs
ljmp
mov
inc
insb
or
xor
mov
andl
je
test
add
ror
mov
cmp
push
jns
lock
xchg
xor
fsts
fdivrs
mov
mov
movsl
ret
je
mov
push
lahf
add
movsl
sbb
xchg
test
std
arpl
add
add
adc
das
fwait
aad
sbb
or
int
fs
mov
jnp
scas
lret
mov
xor
scas
jle
test
or
test
in
push
dec
pop
test
outsb
pop
loop
sbb
sbb
hlt
push
int
mov
push
icebp
imul
stos
mov
data16
mov
and
or
jp
xchg
jae
adc
inc
adc
pushf
pop
xor
pop
inc
lcall
mov
add
fldenv
inc
jne
adc
push
nop
sub
mov
dec
pushf
adc
add
or
add
pop
sbb
int3
shrb
das
cmp
sbb
std
ret
sub
jnp
push
mov
mov
and
test
push
test
sub
dec
roll
testl
enter
dec
sub
ret
popa
push
imul
mov
fwait
ret
popa
cmc
mov
and
aaa
lods
inc
adc
fiadds
inc
stos
ret
popa
popa
mov
xchg
jo
scas
call
push
dec
notb
sub
mov
enter
out
inc
or
jp
repz
test
rorb
loope
sub
dec
xor
sub
and
outsl
bound
sbb
imul
push
sbb
pop
push
mov
jle
jp
cmpl
lret
jle
and
cmpsl
movsb
je
pop
insb
sbb
call
push
push
jg
gs
loope
inc
fstl
je
pop
rorl
xchg
cmp
test
shlb
fs
xchg
mov
inc
mov
pusha
loope
repz
jl
shl
cmc
push
test
cmp
jno
out
int3
enterw
cli
into
or
sti
test
cs
xchg
mov
rorl
fildll
xor
pop
push
pop
orl
push
fiaddl
add
lods
jnp
in
sbb
sub
dec
cli
adc
icebp
lcall
leave
pop
outsl
ljmp
ljmp
sub
out
fcompl
mov
push
add
add
in
js
in
push
pop
or
mov
ret
cmp
push
push
pop
pop
ss
inc
adc
imul
sbb
mov
pop
mov
out
mov
add
pop
insl
fdiv
cmp
gs
mov
insl
ficomps
push
inc
jge
xor
cwtl
into
mov
pop
fmul
rolw
dec
movsb
push
fnstenv
push
xchg
adc
xor
insl
popa
mov
mov
aad
test
fisubl
aad
mov
mov
repnz
fisttpl
movsb
sbb
and
stc
les
mov
mov
test
scas
aas
imul
rolb
push
cmc
mov
lods
mul
pop
leave
popf
push
hlt
fstpt
xor
fs
jle
std
fmull
sbb
sbb
mov
iret
pushf
sub
jecxz
cmp
outsb
inc
sub
repz
xchg
jl
jb
int
adc
cmc
rcrb
fidivrs
inc
dec
adc
fidivrl
pushf
sub
into
mov
sub
sahf
and
mov
jns
leave
in
mov
and
dec
pusha
bound
stc
dec
jae
loop
pusha
xor
sub
add
sub
repz
add
mov
mov
cwtl
inc
lods
push
sbb
and
adc
sbb
jle
xlat
mov
cmp
sub
aas
jb
pop
and
test
dec
adc
xchg
mov
fstp
dec
in
mov
jp
pop
lcall
sub
xchg
es
int3
pop
imul
sbb
and
adc
and
cmpsb
adc
lcall
cmp
enter
stos
test
dec
xchg
inc
lods
in
xchg
xchg
mov
in
stos
dec
bound
aad
testb
arpl
insl
sahf
cmp
inc
dec
xchg
and
mov
add
rorb
jnp
fbstp
or
mov
fisubrs
jns
cmp
pop
inc
dec
jle
rcll
ja
mov
repz
addr16
ds
fcomps
pop
popf
lds
mov
inc
mov
cmp
je
jnp
dec
bound
dec
or
clc
sti
pop
mov
aad
dec
movsl
jne
sub
or
les
jp
mov
inc
push
pop
xlat
test
push
mov
add
btr
outsl
stos
pushf
dec
inc
aam
inc
push
push
in
js
insl
in
loop
cmc
and
add
enter
push
pop
imull
cmp
mov
jl
lret
fbstp
xchg
xor
jmp
mov
mov
jns
in
mov
jae
aad
repz
ret
mov
xchg
mov
movsl
aam
xchg
mov
loop
mov
mov
mov
xor
cmp
sbb
sub
xchg
pop
arpl
je
or
sub
adc
jb
shlb
das
aas
adc
pop
pop
loope
inc
push
lret
inc
mov
push
pop
xchg
mov
cmp
ljmp
or
mov
cli
lods
dec
push
pop
adc
insl
rol
xor
xlat
ss
call
or
add
addb
cmp
ds
dec
addl
push
int
pop
and
shlb
pop
mov
in
dec
loope
mov
add
mov
inc
dec
xor
clc
movsl
jp,pt
in
fadd
add
pop
push
sub
sub
addr16
rcrl
sub
js
xchg
pushf
cwtl
pop
xchg
dec
sahf
pop
in
jnp
dec
add
dec
inc
es
mov
xchg
das
jg
pop
cld
jp
lret
cltd
or
ss
pop
or
iret
orl
jmp
mov
mov
iret
mov
adc
sbb
inc
ljmp
in
adc
bound
pushf
xchg
pop
fcom
cmpsl
xchg
out
or
inc
loop
xor
fisubs
and
inc
add
push
sub
out
pop
dec
ffreep
dec
inc
dec
sbb
mov
push
pop
pminub
addl
mov
ss
out
cmp
add
loop
push
das
sub
xchg
lods
outsb
adc
or
jmp
aam
pop
add
sub
pop
jns
adc
pop
jmp
jp
test
pop
and
xchg
test
xor
push
push
into
jo
xchg
lock
popf
lock
lret
add
stos
mov
or
ret
adc
mov
stc
push
lods
xchg
sub
cld
sub
movsl
cwtl
clc
mov
movsl
lods
rcl
sub
fwait
repnz
jge
cld
shll
mov
jbe
xor
or
adc
push
jecxz
mov
lods
mov
aad
pop
sbb
insl
inc
mov
repnz
add
dec
dec
inc
cltd
dec
push
mov
dec
ret
push
nop
inc
inc
mov
inc
cld
push
lods
mov
or
lds
xchg
sarl
and
xchg
in
mov
shll
sub
push
or
into
jg
add
xor
or
push
adc
jb
add
inc
xchg
nop
inc
adc
ficompl
or
mov
repnz
and
enter
fs
aaa
test
lret
inc
mov
sbb
ljmp
add
jae
ja,pn
jg
rclb
xchg
jno
inc
mov
imul
pop
xchg
sbb
inc
cmp
adc
inc
sbb
xor
pop
cmp
and
push
fcoml
movsb
pushf
cmp
subb
ret
pop
push
test
cmp
roll
int3
fldcw
mov
ds
xchg
sub
xchg
push
pop
fwait
mov
leave
lahf
dec
fwait
sbb
cs
daa
das
lahf
out
jp
filds
xlat
mov
mov
dec
pop
pop
jne
jmp
outsl
rcrl
mov
pop
push
clc
ja
jle
mov
dec
stc
rcll
or
and
sub
xor
aaa
pop
lods
inc
add
adc
fisttpl
mov
pop
wbinvd
or
pop
xchg
leave
fs
aad
add
ss
insl
inc
xchg
int3
push
xor
and
sub
ret
adc
mov
inc
mov
mov
hlt
adc
push
arpl
pushf
inc
pop
pop
cmp
test
dec
enter
je
cwtl
mov
dec
and
mov
js
pop
movsb
sub
cmpsl
test
push
lds
add
push
cmpsl
xchg
jae
jbe
mov
cs
popf
loope
gs
sub
cwtl
int
outsb
mov
fiaddl
and
pop
leave
pusha
lea
aad
add
mov
cwtl
popa
xchg
loope
lret
js
movsl
out
inc
out
int3
in
pop
imul
xchg
arpl
or
pop
orb
cmpl
in
xlat
lds
pop
sbb
jae
arpl
daa
loopne
shll
add
lea
sub
pop
test
inc
lahf
fsub
jnp
out
and
xor
fcmovb
in
lret
adc
jne
repnz
ret
dec
daa
movsb
adc
inc
push
popa
in
pop
cmc
xchg
sub
xchg
adc
push
mov
sub
mov
scas
add
xor
jl
jecxz
sbb
rorl
pop
pop
add
cmp
lret
or
sub
xchg
pop
push
aad
test
mov
jne
insl
mov
test
jns
clc
jbe
nop
add
jo
mov
sub
loop
mov
std
hlt
into
sbb
mov
cltd
adc
stc
sbb
subl
jo
xor
xchg
scas
xor
jno
mov
dec
jle
push
or
mov
lock
cmpsb
mov
stc
push
ret
xchg
jle
leave
mov
ret
divl
repz
fsubr
scas
or
mov
add
andb
mov
mov
pop
clc
sbb
mov
data16
fistl
cmp
or
pop
or
shrl
adc
sub
rclb
jne
jno
mov
pop
mov
shlb
outsb
add
movsb
mov
adc
outsl
mov
data16
call
mov
jecxz
fwait
xchg
pop
ja
xor
test
push
mov
and
push
out
aas
sbb
inc
mov
dec
mov
add
and
mov
stc
out
adc
shl
or
add
and
add
mov
cmpb
test
loope
mov
mov
leave
stos
xchg
aad
xchg
push
ljmp
mov
mov
jmp
dec
or
inc
scas
dec
jb
fwait
adc
dec
decl
std
fwait
push
jb
std
pusha
cmp
lods
lret
jg
xor
cmp
or
and
ja
stos
cmp
mov
imul
and
outsb
cmp
adc
mov
cmp
std
add
jmp
fmuls
lock
dec
stos
jne
enter
pop
hlt
fildll
cli
cwtl
push
int3
aam
cmp
test
movsl
lods
leave
push
inc
test
sub
je
jg
xchg
dec
mov
and
repnz
dec
cmc
loop
add
in
inc
adc
aad
adc
push
add
jbe
add
mov
adc
or
sti
dec
int
jle
loope
nop
or
call
xchg
xorb
mov
mov
ss
rorb
pop
mov
out
add
hlt
aaa
js
inc
lcall
inc
sub
xchg
ljmp
xchg
in
mov
fnstsw
loope
mov
inc
pop
nop
mov
insb
out
cmpb
insb
and
xor
fcompl
int
or
ljmp
xchg
test
push
hlt
into
lea
mov
or
pop
fimuls
mov
int
pop
pushf
mov
add
mov
aad
dec
and
push
ds
icebp
xchg
mov
out
push
or
int
xor
inc
or
test
imul
dec
fadds
dec
ja
sbb
in
inc
iretw
in
or
nop
lods
xor
bound
rcll
jnp
out
and
xchg
jb
mov
lods
xchg
push
mov
jl
sbb
cmp
test
stos
mov
les
inc
and
xchg
pop
mov
nop
fbld
inc
add
dec
imull
and
je
jae
or
loopne
xchg
xor
push
xchg
test
jmp
ljmp
and
jnp
daa
cmp
insb
inc
jae
dec
sub
scas
out
dec
inc
daa
fdivs
rol
and
or
movsl
sub
or
cmp
mov
cmpsl
imul
xchg
and
cmp
mov
das
pop
enter
imul
pop
dec
test
push
repnz
pop
push
push
mov
sub
movsb
repz
int
or
cmp
lret
adc
test
mov
mov
pop
test
and
cmpsl
push
inc
ja
push
push
scas
mov
pop
mov
jmp
pop
out
xchg
je
xor
mov
stos
test
lret
js
pop
bound
jb
shll
arpl
icebp
sbb
imul
je
and
imul
mov
mov
mov
add
add
mov
adc
ret
int3
push
dec
mov
mov
iret
popf
pusha
nop
icebp
test
xchg
in
subps
dec
xchg
mov
in
push
mov
sub
and
pushf
loope
hlt
xchg
mov
das
push
aas
push
ds
sub
xchg
insb
ret
enter
js
or
std
mov
mov
mov
mov
enter
add
aad
adc
lret
std
mov
es
cmp
pop
pop
or
imul
mov
clc
or
adc
sarl
jo
xor
ss
daa
xor
push
pop
mov
mov
add
shl
sbb
pop
cmp
roll
sbb
in
add
or
dec
enter
pop
scas
arpl
ret
fsubrs
adc
mov
rcr
ret
xchg
out
dec
int3
fwait
test
and
or
movsb
mov
push
ljmp
push
or
into
dec
out
orl
daa
push
mov
fisubrs
nop
shl
in
xor
shlb
pushl
pop
or
fisubs
push
or
push
scas
sahf
idivb
mov
or
xor
sub
movsl
lahf
jnp
inc
dec
lods
add
pushf
repnz
or
dec
fnstcw
inc
sub
inc
test
inc
push
cs
insl
insb
mov
outsb
mov
fcos
mov
popf
mov
out
push
push
xchg
adc
sub
sub
adc
scas
test
je
call
test
int3
out
out
movsl
adc
call
inc
xchg
mov
or
js
mov
xchg
sbb
inc
xchg
xchg
jns
gs
mov
cs
xchg
lahf
pushf
addb
lods
pop
add
mov
dec
inc
mov
repz
mov
bound
outsl
int3
mov
imul
fsubrl
imul
jmp
faddl
popf
jb
fists
scas
mov
push
lods
push
pop
arpl
inc
xchg
xor
dec
lock
in
xchg
cld
adc
xor
xchg
and
pop
filds
push
idiv
pop
push
in
push
jb
mov
mov
sarl
rcrl
jne
sbb
xchg
loope
pop
mov
add
push
sub
cmpsl
fnstenv
fisubs
xchg
xor
xrelease
xorb
mov
bound
sahf
adc
mov
and
jno
scas
push
cld
mov
lret
jg
xchg
mov
lods
scas
xor
sbb
outsl
call
jg
mov
or
xbegin
ret
push
call
push
movsb
or
jge
imul
ss
leave
and
cmpsb
and
clc
bound
hlt
shlb
cli
cmpsb
jle
pop
outsb
adc
xchg
stc
or
push
sti
inc
sub
push
lcall
or
jb
jae
cmp
sbb
sub
mov
lret
lea
mov
pop
fwait
push
aas
fdivrl
insb
cmp
and
mov
mov
fnstsw
popf
lods
pop
insl
lods
and
ds
push
dec
fists
aam
jp
bound
push
mov
dec
mov
out
xchg
push
jo
xor
std
into
or
add
add
mov
jb
ret
rcrb
xor
out
cmp
mov
repz
xor
rcll
jne
lods
loop
and
rorb
xchg
rcrl
lods
or
sbb
sub
mov
scas
xor
xor
xor
jbe
mov
hlt
repnz
nop
mov
cltd
cltd
incl
test
push
cli
or
push
pusha
dec
sub
cmc
sbb
xchg
pop
dec
fbstp
jg
push
in
cmpsl
pop
sbb
jbe
jg
xchg
popl
mov
adc
pop
xchg
inc
stos
and
call
lcall
mov
rorl
mov
movsl
jnp
ret
lret
movsl
mov
sbb
adcl
and
lods
pop
cmpl
sub
aad
sub
fimuls
dec
add
mov
mov
hlt
lret
push
arpl
cwtl
addr16
pop
dec
js
daa
imul
sbb
mov
dec
call
mov
popa
or
loope
lret
push
fiaddl
mov
xor
cmpsl
xchg
xchg
mov
sub
push
inc
loopne
jge
js
loopne
jb
xchg
xorl
out
cmp
aaa
andb
jp
hlt
test
cld
lock
push
das
sub
movsl
es
pop
sti
push
xchg
cmp
jne
cmp
pop
ret
fwait
xchg
in
aas
mov
pop
fmuls
outsb
and
fisttpl
sub
xchg
cmp
mov
hlt
nop
fs
inc
iret
mov
and
cmp
sub
nop
add
push
lcall
mov
inc
mov
mov
int3
xor
and
cmp
pop
dec
push
sbb
or
bound
pop
or
mov
ret
orl
loope
xchg
xchg
arpl
insl
xchg
adc
das
jecxz
add
or
dec
cmc
fisubs
fwait
nop
aas
iret
mov
dec
lret
pop
cmp
adc
fldenv
cmp
lea
add
inc
les
and
lcall
loopne
inc
int3
xor
adcl
mov
inc
das
mov
rol
xchg
in
lret
mov
in
inc
fcomps
mov
fistpl
dec
cmp
test
imulb
jge
enter
out
add
sub
sub
dec
lock
ja
or
mov
movsb
ficomps
inc
mov
inc
xchg
mov
loop
out
xchg
jo
fstpl
outsl
mov
in
rcrl
pop
subb
fwait
add
adc
inc
sbb
xchg
jmp
cmpsl
mov
movsb
mov
out
test
lock
jno
mov
hlt
xor
push
cmp
incl
mov
lret
pop
sahf
sbb
shll
xlat
dec
sbb
pop
gs
cmp
daa
dec
dec
lds
mov
pop
sbb
xor
jl
mov
stos
cmp
gs
adc
lock
aad
sarb
jl
pop
sub
mov
popf
xor
leave
gs
movsb
stc
imul
mov
jmp
push
xor
xor
test
pushf
add
jge,pn
xor
pop
push
pop
and
sub
mov
dec
mov
pushf
fidivrs
enter
adc
mov
insl
xchg
or
add
cmp
xor
cwtl
add
popf
jecxz
int
std
jns
or
mov
mov
nop
fwait
cmpsl
xlat
push
jle
cmpsl
jmp
andl
pop
xor
pop
je
push
shrl
decb
sarb
orb
inc
jle
mov
out
vcmpsd
push
movsb
fs
jbe
inc
inc
sti
out
inc
ja
ds
mov
dec
stos
mov
pusha
inc
inc
mov
push
jo
scas
ds
xor
jle
or
xchg
dec
movsb
orl
xchg
push
add
mov
mov
and
sub
sub
xchg
push
inc
out
insl
and
cmp
cmpsb
xor
sbb
repz
xchg
inc
or
imul
mov
gs
cs
adc
mov
mov
mov
cmc
mov
rcrb
push
mov
pop
das
and
insb
mov
ljmp
jge
popf
fcomps
cmc
int3
in
and
dec
push
je
int3
outsl
or
or
scas
jmp
cmp
mov
subb
cmp
fists
and
xor
lret
inc
mov
js
and
clc
jge
cmp
ret
jne
movsb
or
out
add
jmp
inc
fs
and
jo
mov
xchg
add
xlat
rep
xchg
push
cli
fidivrl
rcr
sub
arpl
push
in
rorl
mov
inc
dec
lods
sbb
pop
adc
lret
outsl
popa
or
sub
push
jge
jg
pop
push
loope
icebp
sub
pop
xchg
mov
push
lods
fcoml
aad
sbb
dec
ret
movsl
xchg
mulb
cmpsl
jmp
inc
ljmp
sbb
fwait
add
adc
and
sub
adc
sbb
xor
loope
stos
xchg
shll
pop
sub
mov
jae
enter
inc
cmp
ljmp
cmp
aas
jae
test
mov
lret
mov
stos
icebp
lret
fistps
sbb
pusha
bound
cmpsl
mov
sahf
mov
push
idivb
enter
out
push
inc
jbe
cmp
fildl
push
ret
and
lret
stos
popf
aas
pop
lods
add
mov
fchs
xchg
out
loopne
jo
in
popa
mov
jno
negl
das
inc
push
jb
test
push
pusha
dec
push
shrb
aaa
lods
pop
pop
mov
cmp
xlat
sbb
adc
mov
ret
xchg
std
ljmp
scas
pop
scas
or
push
xchg
arpl
shrl
lret
push
xchg
insl
sbb
dec
movsl
jle
ja
leave
jge
pop
cmpsb
jle
mov
pop
ja
and
ret
cmc
cmp
fldcw
cmpsb
jns
pop
push
xor
lcall
pushf
test
ret
jne
mov
ret
and
adc
lret
xor
xchg
sbb
mov
push
jbe
fdivl
outsl
int
mov
pop
push
insb
stos
rcl
push
and
mov
xlat
mov
insb
lahf
test
arpl
test
ljmp
jne
out
negl
mov
jae
ljmp
aas
pusha
arpl
bound
in
xchg
cmp
mov
mov
cmp
in
add
imul
int
jge
cmp
ds
push
enter
inc
data16
aam
pop
lods
push
in
push
loope
adc
mov
jns
mov
adc
dec
vpsubd
das
xchg
sub
jns
aad
dec
xchg
ret
ret
int
dec
aam
fistps
dec
pop
testb
push
sbb
insb
add
add
aam
push
push
sti
jp
mov
outsb
sub
addr16
orl
jo
fistpl
dec
mov
shl
cmp
adc
hlt
xor
outsb
lretw
cmp
push
rclb
scas
cmc
push
aam
mov
and
pop
mov
or
clc
fidivrl
loop
inc
sub
pop
mov
and
mov
insb
sahf
je
bts
test
stos
aas
out
mov
cmp
hlt
movsl
mov
and
push
mov
mov
rcl
mov
mov
sub
jbe
add
xor
ja
xchg
movsl
and
decb
sbb
adc
ja
out
or
std
pop
cwtl
xor
add
imul
mul
and
pop
xchg
sub
mov
pop
push
jp
mov
mov
je,pt
push
int
aas
mov
cltd
pop
movsb
or
sub
pop
push
in
mov
dec
dec
lods
stos
setnp
les
ret
xor
jecxz
nop
cmp
or
push
cmp
mov
xor
repz
xlat
push
or
mov
icebp
mov
adc
into
dec
bound
xor
xor
mov
sbb
add
mov
stc
push
xchg
inc
mov
subb
pusha
insb
inc
mov
jmp
fists
sar
inc
int
out
outsl
sbb
imul
popf
lahf
sub
jmp
push
adc
mov
mov
sub
cld
or
rcrb
shlb
cmc
pop
or
inc
int
adc
cmp
faddl
adc
inc
push
bound
xchg
mov
or
jbe
push
rol
les
fwait
aas
add
and
push
iret
nop
insb
and
jl
cmpsb
pushf
test
sti
pop
jb
dec
popa
out
lret
je
mov
dec
sub
pop
loope
cwtl
aas
push
aas
xchg
iret
push
loop
in
test
cwtl
sahf
xor
adc
popl
pop
pushf
or
push
das
add
add
push
lahf
outsl
adc
dec
daa
xchg
loop
sub
daa
mov
jne
jns
jae
push
sub
adc
out
sbb
cwtl
fnsave
push
stos
gs
lds
leave
mov
adc
divl
test
pushf
mov
lds
arpl
sub
fsubrs
inc
fbld
push
test
pop
dec
shl
icebp
or
leave
sub
jo
jnp
in
and
mov
enter
movsl
repnz
gs
jns
mov
mov
sub
mov
dec
add
fs
jecxz
int
into
pushf
repnz
mov
push
std
lods
xchg
mov
imul
cs
movsb
test
push
adcl
aas
jmp
add
hlt
pop
out
fsubl
adc
fwait
add
pop
pop
or
adc
popa
cli
or
xor
lret
fwait
pop
xchg
pop
pop
mov
mov
movl
xchg
pop
push
xorb
aad
mov
loopne
test
inc
dec
rcr
sub
sbb
push
lods
lock
and
or
scas
repz
ljmp
jns
and
ja
flds
cmp
repz
pusha
add
mov
add
pop
mov
leave
imul
int3
inc
xchg
clc
adc
sar
push
add
test
xchg
movsl
jge
and
push
push
repnz
les
add
and
cmpsb
inc
inc
mov
rorb
pop
aas
jmp
iret
in
cmpsl
test
and
push
out
roll
pushf
jmp
int3
orb
dec
lret
cmc
test
test
xlat
mov
push
enter
test
enter
adc
dec
add
in
insl
rorl
xlat
jl
adc
fwait
lret
dec
add
push
mov
cmp
outsl
repnz
hlt
inc
dec
dec
jle
enter
xor
lret
lods
rep
mov
mov
ja
out
mov
sub
insl
mov
fsubrl
std
or
aas
sbb
clc
adc
mov
mov
fucom
test
dec
cld
mov
lret
jb
jp
stc
pop
ret
lret
int3
call
or
sbb
test
std
stos
adc
cwtl
sub
cmpsl
jg
leave
cltd
ja
hlt
and
sarb
divb
or
repz
inc
mov
cli
dec
dec
mov
adc
dec
aaa
jnp
rclb
xchg
pusha
adc
jecxz
adcl
cmc
add
jecxz
std
and
out
mov
push
clc
cld
jmp
adc
ret
flds
sub
mov
adc
movsl
in
in
cmp
aaa
push
sbb
in
or
mov
pop
xchg
lock
adc
cmp
xchg
insl
adc
ret
inc
sub
push
and
jno
lods
sbb
mov
add
stos
data16
push
cmp
mov
lods
cmp
xor
xchg
sbb
jmp
xlat
sub
dec
movsb
push
sub
imul
aas
aad
sub
or
fldenv
mov
or
mulb
lret
test
xor
jg
or
fisubrs
cmp
xchg
dec
nop
scas
push
fcmovne
xor
rclb
pop
ret
jl
shlb
inc
aad
bound
out
jg
adc
mov
cmp
mov
or
les
jle
ror
sub
mov
das
gs
push
and
shrb
mov
add
mov
test
pop
fcoml
dec
mov
jecxz
hlt
fcoms
test
xor
add
xchg
jge
lret
pop
lods
stos
push
in
push
fsubrs
outsl
push
pop
outsb
adc
xor
or
out
dec
mov
test
movsl
fnsave
xchg
repz
mov
lret
lods
mov
fnsave
jmp
cmpsl
jbe
test
add
lcall
mov
sub
clc
adc
dec
mov
outsl
cmpsl
pushl
fs
jmp
in
repz
push
push
sub
dec
bound
jae
pop
cmp
inc
out
sub
lret
xchg
lods
sbb
bound
sub
add
pushf
out
out
pop
popa
lea
scas
jbe
in
inc
sub
or
pop
arpl
push
psrlq
pop
mov
cli
xchg
imul
insb
xchg
divl
mov
mov
mov
dec
cmc
sbbl
cmp
fdivs
aad
vmulsd
out
fs
mov
mov
add
pop
sub
ljmp
popf
leave
test
adc
lret
stos
int3
dec
dec
dec
repnz
push
rcrb
js
xchg
nop
andb
sahf
ret
test
xchg
mov
xchg
and
sbb
nop
inc
adc
test
cmpsl
jle
cmp
lds
js
dec
dec
stos
cmp
xor
and
and
mov
fsubrs
adc
movsb
mov
push
je
sbb
sub
jl
sbb
subb
and
jns
or
test
jmp
adc
cld
and
xchg
sub
ret
pop
bound
mov
lcall
add
and
cmp
adc
or
js
aam
gs
aam
adc
jg
cmp
jnp
jmp
cmpb
sbb
lcall
sarb
ja
out
insl
mov
and
push
jb
push
xchg
rorb
mov
mov
jnp
jp
sub
jl
lret
les
rcrb
inc
movsb
sbb
sti
xchg
xor
mov
mov
imul
ljmp
clc
push
pop
es
hlt
iret
push
push
mov
jl
mov
sbb
push
pop
cld
out
push
shrl
mov
faddl
std
gs
int
ficompl
pop
dec
lods
sti
je
clc
mov
inc
adc
adc
dec
pop
cs
loope
out
pop
outsb
inc
inc
jmp
movsl
cmp
xor
or
mov
mov
and
xchg
cltd
xchg
jnp
pop
mov
add
mov
cld
sub
jne
add
xchg
adc
cmp
les
shlb
pop
cmp
in
pop
jnp
mov
aaa
shrb
testb
and
ret
stos
pop
xor
sub
inc
mov
push
pop
inc
mov
mov
xchg
stos
mov
ror
ret
imul
test
mov
hlt
cmp
sbb
dec
sub
xchg
or
mov
cmp
push
ret
dec
rclb
jl
add
lret
adc
sbb
sub
jmp
jl
pop
adc
mov
pop
dec
or
stos
jbe
aas
cmp
stos
out
lds
stos
pushf
dec
lahf
aas
sub
mov
clc
int3
pop
fcomi
cmp
jbe
mov
and
int3
adc
dec
test
cmp
or
mov
in
enter
movsl
mov
cmpsb
lock
pop
mov
mov
adc
es
dec
jb
cmc
rcll
mov
inc
cwtl
and
add
enter
adc
push
mov
fwait
daa
imul
inc
add
mov
or
sbb
imul
in
xorl
stos
xchg
in
loopne
sbb
inc
fs
aaa
mov
in
jns
or
jg
sub
mov
sub
and
ret
sbb
inc
mov
lret
and
lret
fs
aad
incb
sbb
jae
jbe
frstor
jge
nop
push
mov
jp
ljmp
cltd
xor
mov
cs
lods
mov
imul
add
jb
cmp
mov
jl
and
inc
loopne
xchg
and
xchg
pop
fildl
sbb
and
dec
aam
mov
shlb
jle
dec
out
xchg
sti
add
mov
add
cmpsb
cmc
add
dec
push
ljmp
sbbl
scas
stos
into
xor
ds
or
lods
jge
ja
iret
cmp
mov
xor
push
inc
mov
mov
fdiv
jl
mov
in
dec
push
xor
mov
stc
mov
mov
lods
sar
imul
fistpl
sahf
push
std
es
mov
lods
adc
mov
adc
lahf
cmp
mov
adc
pusha
pop
sahf
nop
dec
stc
sbb
shlb
lds
pop
and
cmp
sub
jmp
cmc
and
cmpsl
and
xchg
int
out
repz
shr
push
jl
int3
pop
dec
mov
or
mov
add
aas
imulb
bound
lret
jmp
jg
sahf
rcrb
hlt
xlat
dec
movsl
push
or
lret
shll
xlat
add
lahf
lods
and
jle
stos
inc
nop
arpl
es
pushf
repnz
xchg
ja
mov
jne
popa
cmp
int3
cmp
popa
push
or
jg
js
mov
mov
and
cmpsb
fs
scas
mov
mov
lret
mov
sub
pushl
popf
aad
aas
repnz
push
mov
jl
test
roll
lcall
mov
cmp
repnz
push
negb
and
mov
hlt
xor
pop
insl
inc
nop
loope
aas
adc
loope
lods
mov
lock
jnp
fcompl
cmp
sbb
xlat
mov
bound
inc
out
adc
cmp
mov
mov
cmp
loop
push
dec
repz
popa
std
add
or
mov
call
adc
sti
shrb
pop
jns
sbb
adc
cmp
loope
sarb
imul
fidivrl
xchg
sub
mov
cmp
shlb
inc
ret
dec
xor
sub
lds
or
call
cmp
or
clc
cmpsl
or
add
dec
push
sbb
rcrl
loop
mov
sbb
jg
scas
mov
mov
es
aam
and
insb
int
addr16
dec
adc
cmpsb
out
fistps
jns
neg
sar
rol
ret
shll
jl
mov
cwtl
pop
stos
dec
fldl
fisttpl
pop
es
test
and
pop
in
in
inc
inc
lahf
hlt
ljmp
sbb
cmpsl
in
jno
dec
mov
add
xorl
pop
int
inc
nop
xchg
call
enter
pop
xchg
stc
lahf
lds
and
pop
or
mov
clc
cmp
hlt
cwtl
push
dec
inc
mov
popa
stos
adc
lcall
jns
lds
popf
mov
sbb
inc
jo
pop
jg
add
lods
sbb
dec
pushf
negl
cld
mov
lret
lock
jnp
push
xchg
cs
mov
cmp
mov
fbstp
int3
ret
push
jo
cmp
cmp
adc
and
sbb
aas
hlt
inc
sub
jmp
stos
aas
adc
aad
pushf
enter
in
loope
xchg
pop
data16
add
dec
dec
jno
inc
ret
add
sub
and
cltd
jae
inc
sub
in
and
in
or
adc
mov
out
add
push
fs
mov
gs
out
and
aad
mov
dec
pop
lret
dec
cmp
add
mov
sbbb
sub
aas
in
popa
fsubp
nop
sub
les
xor
cmp
inc
cli
mov
jns
or
pop
cmpl
dec
xor
stos
call
imul
aad
push
mov
xor
int3
xor
mov
xor
or
test
ljmp
into
cmp
mov
mov
std
inc
imul
sub
movsb
pushf
jo
std
rclb
frstor
pop
popa
push
rcrb
inc
adc
in
shlb
ja
std
in
xchg
in
push
aam
or
add
xchg
aam
popa
mov
movsl
dec
xor
or
sub
mov
in
mov
out
call
xchg
aaa
adc
sub
mov
adc
shll
inc
icebp
nop
shll
cmpsb
cmc
les
pop
je
or
hlt
clc
test
sub
mov
sti
pop
cmpsl
or
add
insb
gs
lea
mov
imul
push
shll
sub
mov
and
int
xchg
and
subl
or
mov
cmp
sbb
jecxz
enter
jp
mov
stos
icebp
fbstp
fmul
sub
cmp
adc
sub
cmp
rcrb
stos
cmp
fisttps
jae
jbe
sbb
push
and
mov
lahf
pop
mov
xchg
in
xchg
mov
sub
and
jl
add
mov
add
popf
sbb
fistpll
jmp
inc
cmp
inc
cmp
loopne
ret
fs
lahf
sarb
dec
dec
ret
jns
call
int3
psubusw
mov
xchg
out
loopne
mov
mov
stos
inc
xchg
imul
mov
dec
mov
mov
push
aam
pop
arpl
adcb
popl
sbb
xchg
idiv
pop
mov
je
xchg
cltd
ret
pop
jp
lods
pop
jmp
adc
test
js
aas
push
push
mov
repnz
rcrb
dec
jle
ret
aam
pop
push
mov
mov
cmpsl
inc
jae
xchg
lods
das
ficomps
test
xchg
jnp
cld
shlb
jecxz
mov
and
sbb
mov
pop
adc
insl
push
sti
inc
dec
mov
pop
fcomps
insl
jmp
pusha
pop
into
cld
je
or
sub
movsb
cmp
cmp
les
sarb
loopne
dec
add
enter
jl
mov
sub
repnz
dec
xchg
mov
mov
sub
scas
lods
mov
rorl
xchg
es
inc
xor
decl
lret
mov
in
jne
or
and
les
inc
movsl
pop
cld
in
test
mov
imul
add
sub
xor
xor
xchg
add
jo
mov
fmull
cmpsl
dec
dec
leave
lret
jecxz
mov
or
push
cmp
out
fimuls
pop
cwtl
mov
sbb
xchg
ficoms
sbb
fwait
sbb
xchg
lcall
nop
push
les
add
and
aad
cmc
add
stc
jo
rclb
movsl
fld
add
neg
cmp
inc
shll
and
mov
push
pusha
xchg
jmp
adc
inc
cltd
fidivl
jmp
outsb
fs
mov
ret
in
fistpl
loop
cltd
lock
test
mov
mov
push
lea
mov
push
fwait
lcall
fsubr
xor
mov
mov
lock
xchg
xchg
roll
dec
in
sbb
aas
mov
pop
mov
sub
or
sub
cmp
pop
jne
xchg
imul
aam
inc
jp
adc
cmp
loopne
mov
mov
dec
cmp
out
pop
pop
mov
outsb
sar
mov
mov
icebp
inc
push
hlt
adc
push
mov
fcmovnu
push
std
mov
das
scas
or
sbb
fsubs
push
test
pusha
and
inc
aam
jl
rcrb
cmp
mov
cwtl
iret
sub
inc
mov
cltd
mov
jl
fnstcw
inc
jg
test
bound
in
stos
push
add
pop
aaa
fadd
out
rorb
test
mov
rcr
subb
jns
mov
popf
pop
pop
outsl
in
jo
xor
xor
mov
cmp
pop
dec
inc
jl
je
testb
xor
clc
mov
cli
inc
inc
xor
nop
out
cmp
lret
mov
mov
pushf
lret
inc
shlb
lret
mov
popf
push
out
and
cltd
fdivs
in
sub
cltd
shlb
jmp
ret
cwtl
add
scas
push
subl
dec
dec
ljmp
nop
shll
cld
test
sti
xchg
insb
out
js
cmc
mov
rclb
xor
cmpsl
cmp
pop
sbb
push
add
std
adc
shl
shll
gs
inc
std
add
sbb
mov
sbb
lret
jb
push
sbb
mov
and
jne
lds
in
pusha
mov
or
and
cmp
xchg
lret
inc
mov
leave
pop
inc
js
add
call
xor
and
pusha
inc
mov
repnz
fstpl
shl
dec
stos
repnz
int
push
mov
xchg
andl
jge
add
mov
xorl
popa
repnz
ret
cmc
push
xchg
or
jmp
fnsave
dec
lock
mov
xchg
lret
ss
shlb
ret
and
imul
in
push
pop
jle
mov
lds
ret
popf
mov
pop
mov
xchg
rol
ret
loop
aam
mov
and
pop
jno
add
call
loop
leave
sarb
cmpsb
add
les
cmp
into
sbb
cmpsl
dec
ret
sbb
es
enter
leave
loop
repz
or
xchg
sahf
mov
sbb
push
xorl
push
scas
push
ffreep
repnz
cmpsb
adc
jns
dec
mov
push
xlat
add
rorb
fisubs
fcmovne
je
iret
mov
ret
lret
cmpsl
notb
fwait
test
fdivrl
mov
sar
pop
pop
cmpl
arpl
cmp
push
je
mov
sbb
push
mov
and
lods
fstpt
push
cltd
add
rorb
hlt
cmp
pop
or
dec
xchg
cs
pop
lcall
xchg
jae
test
sti
mov
int3
cmpsb
mov
adc
xchg
ret
cs
push
sub
test
rcrb
or
fs
sub
out
inc
movsb
scas
push
mov
fs
out
pop
cmp
xor
sbb
jmp
sub
pop
push
sub
jnp
or
sub
xchg
lock
outsl
cmp
adc
es
pop
push
popf
mov
push
cmp
roll
push
fxch
mov
adc
loopne
jb
sub
mov
stc
and
pop
jnp
push
or
cwtl
add
imul
and
dec
and
and
cmpsl
leave
data16
mov
mov
sbb
mov
neg
jmp
push
cwtl
and
nop
mov
insl
js
xchg
mov
mov
cvtps2pd
and
sub
pop
fs
lods
add
cltd
and
addr16
or
pop
rolb
roll
setno
popa
or
in
movsl
pop
aam
pop
sub
cmp
xchg
cmp
loope
sub
movsb
movsb
pop
cmp
shlb
nop
loop
out
sub
mov
rcrl
lds
lret
test
scas
pop
mov
and
nop
jmp
adcl
lock
loope
imul
and
lcall
dec
jbe
fcompl
insl
adc
stos
inc
les
shlb
filds
dec
xor
sbb
inc
les
add
ret
cltd
hlt
and
add
sub
inc
or
push
and
jnp
pop
and
in
mov
ljmp
and
fadds
insl
pop
mov
inc
enter
rcrb
push
push
mov
adc
xchg
sub
xor
mov
loopne
lods
cmp
push
mov
xchg
xor
rcr
cwtl
je
inc
sbb
fwait
ja
mov
inc
mov
and
push
mov
mov
fcmovnbe
imul
insb
les
in
sub
sub
fcompl
inc
jo
dec
call
nop
int3
lret
push
lock
mov
sub
inc
pusha
add
add
insl
adc
loope
cs
fsubrs
inc
les
mov
movsb
or
add
jb
lcall
cmp
ret
cltd
rorl
jl
aas
cmp
and
and
mov
cli
addb
mov
push
inc
adcb
pushf
and
cmp
pop
insl
cmp
dec
add
shll
cmp
inc
mov
lret
fadds
dec
nop
lret
sbb
or
pop
dec
pushf
inc
into
dec
inc
fildl
test
bound
mov
hlt
ss
mov
outsb
lock
stos
addr16
je
inc
mov
jns
jb
add
mov
cmp
jge
jecxz
and
sbb
dec
xor
mov
dec
lret
enter
dec
mov
mov
adc
sub
push
inc
int3
cmp
es
pop
aad
jae
stos
icebp
mov
dec
lret
pop
ret
push
in
adc
lret
js
push
pop
push
movsb
adc
ror
enter
jbe
dec
repnz
repz
inc
fistps
je
pop
sbb
lock
adcl
lcall
jl
in
cmp
int3
nop
cmc
inc
nop
xchg
xchg
xchg
pop
mov
jnp
jmp
cmc
xchg
icebp
int
push
loope
insb
jle
and
leave
les
push
mov
shlb
test
leave
sbbb
xchg
fdivrs
cwtl
lret
dec
jle
xchg
push
pusha
xchg
or
inc
scas
aaa
iret
mov
mov
ds
arpl
sarb
cltd
in
sbb
sahf
cmp
xor
pop
adc
push
int
sub
aaa
mov
incb
and
mov
enter
mov
fisttps
rcll
add
sub
lret
add
sub
test
cmpsl
popf
mov
pop
int
add
pop
mov
mov
mov
out
fs
jecxz
sub
aas
pushf
fnstsw
mov
mov
mov
pop
test
cmp
add
xor
es
xchg
mov
loopne
cmp
sub
sar
push
cmp
cmpsb
in
jmp
pushf
xchg
push
mov
lock
fxch
sub
pop
cmp
jmp
jle
dec
sbb
stos
dec
dec
std
jge
lods
in
mov
testl
mov
lahf
xor
inc
mov
je
cmp
inc
mov
push
pop
push
std
fldcw
in
and
jmp
xor
outsl
mov
std
outsl
daa
push
pop
leave
mov
test
jbe
seta
sahf
dec
xchg
pop
sub
shll
or
bound
dec
faddl
aas
jmp
dec
scas
xor
movsb
idivl
add
insb
pop
mov
pop
cmp
and
pop
cwtl
jb
ljmp
fcmovnu
and
jg
push
dec
idivb
cmp
mov
out
btc
or
xor
push
divl
cmp
imul
mov
mov
cmp
imul
pushf
mov
adc
outsl
les
dec
out
pop
dec
ret
mov
sub
push
cmpsb
in
js
cmpsb
pop
repz
or
add
int3
fdivrl
jns
cmp
and
cmp
imul
mov
hlt
scas
or
mov
jns
fcmove
inc
pop
shll
jmp
jb
add
push
mov
ret
ret
push
out
ds
pop
jno
xor
xor
sub
and
dec
clc
ja
mov
cmpsb
inc
dec
sub
pop
pop
sub
sub
jmp
push
dec
jg
pusha
cs
imul
adc
sbb
inc
divb
pushf
jb
aaa
inc
call
test
aam
testb
aad
scas
jb
notl
aam
ret
fs
or
out
pop
and
jnp
sbb
cmp
mov
lods
push
cmp
and
push
jbe
inc
aas
rorb
mov
out
lahf
sub
test
jbe
sub
adc
les
cmp
imul
in
testl
push
sahf
inc
setbe
add
je
push
cmc
mov
popa
pop
sub
lret
loope
imul
stos
sub
cmc
cmc
gs
cld
xchg
daa
jmp
fisubl
push
cmp
xor
pop
mov
cld
fcomps
cmpsb
test
jmp
pop
lahf
mov
xor
cmp
movl
pushl
adc
inc
and
push
mov
addr16
and
clc
mov
cmp
ret
or
cmpsl
jg
xchg
shrb
fldenv
ja
inc
xchg
cmp
jne
jge
mov
sub
ror
lock
cmp
pop
mov
push
or
and
sub
in
movsl
jge
fistl
lods
dec
icebp
aad
add
xor
ret
aas
cmp
int
aam
and
mov
jo
les
sub
cmp
jle
lods
stos
sub
push
sbb
push
xlat
and
inc
imul
loop
inc
add
lret
sar
xchg
cmp
push
ret
xchg
sub
dec
mov
repnz
cmp
sub
mov
cmpsb
in
dec
inc
int
inc
nop
and
mov
jmp
mov
xchg
dec
arpl
inc
xor
pusha
lock
inc
sar
inc
xor
push
or
jns
hlt
xchg
adc
rcrl
les
xchg
scas
in
xchg
outsl
scas
sub
mov
js
enter
imul
clc
int3
cs
test
lock
push
lret
xchg
push
sbb
shrl
int3
test
inc
enter
stos
fwait
and
enter
imul
jnp
xchg
inc
in
xchg
mov
daa
mov
inc
cmpl
sahf
imul
add
pop
fsubs
xchg
cmp
xchg
fsubr
loop
sbb
adc
fs
lret
add
insl
loop
ret
xor
into
lret
mov
frstor
fisubl
xor
push
dec
xor
and
sub
mov
dec
bound
dec
xor
add
test
insl
cwtl
xchg
or
inc
jecxz
inc
adc
lret
repz
imul
pop
aaa
cmp
xor
cmp
push
sub
mov
sarb
xor
rcrl
mov
xlat
scas
adc
pop
gs
xadd
dec
mov
rol
sub
jg
imul
icebp
clc
xchg
mov
imul
popa
fs
sbb
add
adc
inc
sbb
fdecstp
fstpl
mov
rcrl
out
lcall
test
push
fistps
or
pop
cmp
fbstp
xchg
add
test
sub
mov
sti
shrl
stc
push
mov
jmp
pushl
lret
sub
push
xchg
inc
mov
mov
mulb
cmp
xor
cmp
les
shlb
cmp
data16
mov
fisttps
sub
adcb
scas
cltd
push
add
les
jns
std
icebp
and
and
repz
aam
mov
sar
sub
jb
sbb
inc
cmp
xlat
lcall
adc
xchg
in
in
push
add
pop
cs
lock
repnz
jmp
cmp
cmp
mov
enter
add
mov
bound
lret
js
pop
rclb
pop
repz
pusha
mov
dec
loop
out
sub
inc
inc
push
shl
testl
add
fs
pop
xor
daa
pop
inc
adc
nop
cmpsl
sub
mov
sbb
mov
shlb
xchg
lods
ljmp
inc
cmp
sbb
sbb
jl
jae
lock
fldenv
xchg
pop
mov
push
fbld
daa
les
jns
into
imul
mov
aaa
pop
sbb
mov
push
xor
es
nop
push
mov
xchg
xor
daa
mov
outsb
mov
mov
jl
xchg
lahf
mov
cmpsl
arpl
repnz
fldz
imul
xchg
pop
jbe
push
int
push
inc
mov
ret
sub
xchg
mov
adc
lods
xchg
sbb
icebp
insb
cs
push
fcomps
btc
fidivrl
push
call
das
sub
out
lods
mov
movsb
or
cwtl
xchg
mov
cld
jge
cmp
jge
dec
jmp
inc
jno
push
ret
in
mov
std
rcr
push
outsb
xchg
mov
cmp
iret
outsb
sub
stos
cmp
negl
sub
es
jae
add
xor
popf
dec
xchg
arpl
cmpb
lea
les
inc
icebp
xor
xchg
fiaddl
mov
pop
fcomps
xchg
addr16
sahf
dec
inc
cmp
aas
imul
cmp
mov
mov
sub
out
xchg
sbb
or
xchg
dec
dec
enter
jns
and
andps
xor
out
cmp
and
or
pusha
mov
imul
loop
dec
xchg
ret
lods
in
dec
dec
loop
and
cmpsl
lcall
aad
xor
cmp
cmp
leave
push
xor
xor
leave
mov
push
or
push
ja
loop
sub
pop
pop
les
push
out
fistps
lret
notb
xor
lods
push
fcmovne
push
adc
and
mov
lods
ret
out
pop
inc
shll
es
das
and
xor
xchg
or
jp
decl
aad
jmp
ljmp
imul
scas
inc
mov
or
les
lock
mov
cld
adc
dec
shrl
inc
dec
int
adc
int
icebp
or
loopne
fadds
stc
lock
scas
and
pushf
add
mov
cmp
shrl
dec
movsb
enter
push
xor
les
in
inc
or
mov
shr
push
or
pushf
push
rclb
and
enter
mov
push
arpl
mov
pop
pop
fldt
lahf
xchg
xchg
mov
mov
jae
ret
adc
xchg
add
andl
jp
sar
inc
dec
jp
jge
adc
mov
xchg
lea
inc
rcr
jb
dec
lea
bound
orb
or
int
push
fidivrl
lods
pop
in
into
xor
inc
push
add
mov
imul
dec
lret
mov
ja
das
inc
popa
xor
dec
add
in
popa
push
loop
fwait
and
or
mov
mov
orl
call
adc
repz
push
dec
in
bound
jnp
lock
stos
roll
cmp
push
dec
mov
test
fidivs
out
and
pop
mov
xor
inc
das
lods
jae
jecxz
sbb
jno
leave
or
int
arpl
scas
push
push
xor
xor
outsl
test
shlb
jns
inc
inc
pop
cltd
cli
push
nop
insb
lcall
jl
sarl
inc
pusha
les
jae
stos
or
pop
dec
into
mov
ds
xlat
in
jl
fsts
and
and
cmp
cmp
repz
xchg
xor
and
pop
addl
push
jle
lds
sahf
and
mov
sbbl
loopne
outsl
jnp
test
mov
mov
aas
mov
call
loopne
idivb
xor
xor
xchg
out
adc
xchg
and
add
xchg
xor
sub
jno
pop
pop
or
loop
fs
int3
mov
sahf
das
adc
imul
mov
xlat
mov
out
loope
mov
pop
dec
cltd
pusha
push
call
dec
jg
stc
lret
cmp
fs
int
aas
stos
ret
shr
stos
pop
lret
and
mov
jo
mov
jecxz
int3
jl
loopne
adc
std
adc
in
sbb
arpl
jns
cld
movsb
test
bound
push
pop
sbb
es
sti
dec
call
fwait
push
or
popf
add
jb
clc
ss
cmp
hlt
push
cltd
mov
or
scas
dec
and
mov
dec
cmp
jns
pop
fisttps
cwtl
adc
fiaddl
outsb
imul
fwait
pop
cmp
lods
sarl
and
movsb
adc
jecxz
adc
inc
arpl
push
jp
add
movsb
mov
inc
mov
cld
setae
ss
cmc
cmpl
ret
test
dec
aad
adc
push
cmp
mov
jno
clc
fcomi
leave
cmpb
inc
sbb
cld
fs
pop
fstps
xchg
sbb
pusha
xchg
shl
cmp
cmp
mov
mov
daa
test
cmc
mov
mov
addr16
enter
stos
sbb
jns
pop
pop
sub
fildll
push
inc
insl
pop
into
xchg
mov
jnp
mov
jne
sub
mov
aad
add
sub
xchg
aas
inc
movsl
inc
test
int3
stos
jg
fstp
xor
subl
idiv
push
mov
mov
scas
jge
mov
aam
dec
fsts
roll
aad
loope
ret
andb
cmovp
out
mov
sub
sbb
pop
push
notl
sbb
stos
das
fldenv
nop
cli
mov
and
out
lock
push
stc
push
cmp
imul
cmpl
daa
ds
add
mov
shr
lahf
mov
rorb
nop
les
dec
pusha
inc
cmp
out
xchg
std
dec
jg
sub
nop
inc
mov
mov
cltd
jl
mov
jnp
jecxz
icebp
gs
or
or
pusha
push
movsl
pop
pop
iret
leave
jecxz
cld
aas
cltd
mov
scas
add
cmc
sbb
push
inc
xor
sti
cli
stos
mov
cmc
cmp
mov
push
je
mov
mov
rorb
movsb
adc
sbb
sti
pop
pop
aas
cmp
adc
jmp
mov
add
xchg
cwtl
insl
mov
xor
lahf
xlat
push
fimull
or
pop
xchg
clc
and
push
sub
push
jns
lds
pop
or
adc
pop
jb
push
xchg
aam
test
ds
inc
pushf
arpl
cmp
cmp
pop
and
mov
adc
pop
push
pop
shlb
xchg
pop
lods
daa
sbb
push
movsl
rcl
dec
int
or
add
push
adc
xlat
iret
adc
fcomi
mov
int3
pushf
cmc
popf
inc
pop
dec
cwtl
lret
mov
ljmp
push
or
dec
adc
xor
and
xchg
loop
daa
ja
xlat
lods
je
mov
adc
das
and
xor
cmp
popa
mov
mov
icebp
inc
leave
push
sbb
or
lahf
add
lahf
jno
fidivrl
push
sub
sub
dec
loop
and
in
mov
test
cli
test
repz
outsl
and
xor
dec
add
test
test
inc
outsb
sti
jnp
mov
dec
inc
js
sahf
ret
inc
mov
repz
into
imull
adc
jae
push
int
dec
bound
ja
adcl
or
movsb
cmp
int3
cmp
es
leave
cmp
push
punpckldq
dec
cmp
test
xchg
out
cmp
mov
xor
xor
pusha
xchg
cmpsb
sub
or
xrelease
repnz
je
xchg
mov
or
mov
jbe
in
dec
les
sbbb
sbb
fld
sbb
add
adc
dec
cwtl
mov
mov
cmp
jo
mov
imul
dec
cs
inc
ret
cld
sbb
sbb
xlat
in
add
lock
mov
cmc
or
xor
mov
xchg
mov
mov
fnsetpm(287
hlt
pop
add
dec
push
call
add
sbb
sti
fidivs
and
dec
dec
mov
loope
push
xlat
shlb
movsl
mov
rorb
in
adc
add
push
dec
mov
xchg
aam
xor
adc
popf
outsl
je
fcmovne
fidivs
mov
aaa
dec
movsb
std
cld
in
nop
fsubl
stos
leave
adc
notb
dec
aam
add
imul
fsubrs
sub
cli
jbe
and
mov
rorl
loopne
xor
imul
jbe
dec
mov
adc
popa
jle
ds
mov
and
or
divb
add
rcrb
mov
xlat
lahf
fisubrs
add
push
icebp
mov
icebp
shll
jbe
mov
scas
xchg
push
enter
sbb
push
add
jmp
push
jmp
cmp
pop
push
jmp
ret
dec
and
sub
clc
cwtl
jo
adc
cltd
test
add
repz
out
add
sbb
push
jae
jg
loop
sub
xchg
out
xchg
push
pop
adc
xor
mov
and
jo
std
add
jnp
push
movl
out
gs
pop
repz
addr16
inc
js
popf
outsl
test
pop
sub
rorl
test
add
pusha
lods
push
lock
fwait
aas
lahf
addr16
js
sub
fwait
inc
adc
inc
cmp
scas
mov
adc
aas
int
sbbb
ds
mov
sbb
or
dec
pop
mov
mov
xor
jecxz
mov
dec
sbb
stos
sahf
dec
sbb
add
sub
sub
cwtl
inc
bound
orb
mov
or
xor
adc
cmp
stos
sub
push
pop
dec
inc
and
stc
jns
pop
push
js
or
fldenv
add
sbb
faddl
jno
jg
sti
addr16
rcrb
outsl
push
push
shll
fisttpll
push
pop
aam
dec
sub
xlat
scas
push
or
stc
pop
sub
mov
dec
dec
inc
inc
cmp
push
stos
push
xorl
cltd
xlat
iret
xor
in
popf
push
mov
dec
push
push
or
sbb
stos
jecxz
loopne
out
dec
xchg
add
inc
push
sbb
mov
adcb
mov
sub
cmc
lcall
pusha
popf
pop
jo
xor
repnz
divb
cmp
in
hlt
movsl
adc
push
stos
jmp
outsb
inc
add
ja
mov
dec
fwait
and
aas
jg
jmp
movsl
cmp
xchg
inc
daa
sub
ret
enter
xchg
mov
xlat
gs
repz
push
dec
or
mov
dec
sti
pop
or
aam
push
or
lods
pop
test
add
push
or
iret
xorb
jle
jns
mov
add
lock
inc
js
sub
and
movsl
mov
pop
daa
fnstenv
cmp
mov
int3
jne
xor
shrb
pop
add
mov
test
cmp
lret
lahf
or
mov
int
inc
mov
mov
sbbl
or
push
inc
outsl
jns
aad
cmp
and
xor
push
sbb
adc
fdivs
xchg
fistpll
js
or
push
inc
or
lods
lcall
mov
jg
idivl
inc
stc
and
xor
add
mov
xor
ds
sbb
inc
inc
xchg
nop
jle
push
cltd
inc
push
adc
ret
add
xor
cltd
or
mov
outsb
lahf
lcall
in
test
test
xchg
or
mov
cwtl
loop
push
movsl
mov
xor
popa
sti
dec
mov
xlat
mov
jmp
fs
out
decl
es
jg
or
jmp
fdivp
fcompl
mov
sub
inc
loop
js
sbb
bound
jns
loop
in
lret
adc
inc
dec
sarb
mov
cmc
adc
jnp
pop
xor
jg
pusha
xchg
jne
les
inc
inc
hlt
dec
xchg
or
les
xlat
pushf
sub
sbb
rcll
jno
jb
jae
shrl
sub
je
jmp
xlat
ss
stos
adc
jb
push
ds
inc
loope
test
inc
or
movsl
mov
xchg
call
jns
les
cs
ja
mov
out
mov
pop
clc
or
mov
cmp
cmpsb
mov
dec
test
cld
jmp
mov
cmp
jns
or
fcoml
loop
out
stc
xor
jle
fisubs
xlat
xor
inc
hlt
add
xor
cmp
mov
sub
add
cmp
pop
push
rol
and
xchg
je
jo
loopne
jl
enter
or
mov
fs
sub
mov
sarl
cld
andl
in
pop
js
jmp
rolb
lahf
stos
pop
xlat
lds
sti
adc
dec
inc
call
movsl
push
adc
cmpl
outsb
pop
add
dec
gs
pop
cmp
leave
movsb
inc
hlt
mull
fwait
jbe
cmpsb
jg
sbbb
imul
add
out
add
push
jp
xor
insl
and
cmp
test
jnp
rolb
mov
jg
test
dec
mov
xlat
pop
sbb
leave
xor
data16
push
xorl
addr16
aaa
cmp
mov
in
ret
pop
bound
mov
jle
jae
mov
shll
and
dec
mov
imul
cmpsl
lret
inc
stos
adc
xchg
jp
sahf
jle
jge
cmp
test
cld
hlt
sti
dec
adc
dec
mov
std
rolb
xchg
cmp
or
adc
push
out
jmp
cli
stos
pop
std
push
mov
int3
jg
push
mov
xchg
lods
insl
shl
aas
out
into
loop
insb
sub
cmp
jecxz
repnz
ss
int3
mov
pop
adc
dec
dec
push
push
lods
lock
adc
jne
fildl
mov
loopne
jno
es
out
ds
jg
push
ret
xchg
dec
and
mov
or
pop
enter
dec
cmp
ss
fldenv
jg
or
fcomps
or
inc
sarb
inc
scas
xchg
aaa
jb
sub
cmp
xlat
cmpsb
xorl
mov
xor
cmp
mov
push
std
and
popa
cmp
mov
movaps
lock
repnz
pushw
and
cmpsb
cmpsb
mov
jg
shl
push
outsb
popf
ficompl
out
sbb
call
outsl
fildl
xchg
xor
popa
orl
ss
ret
jae
mov
push
cmp
inc
mov
pop
rclb
mov
add
dec
mov
lea
push
shl
bound
hlt
push
orl
mov
int
arpl
jo
shrl
inc
andl
scas
mov
jp
cs
outsb
push
adc
ret
add
pop
lods
pop
inc
ja
or
mul
jle
push
lahf
pop
mov
xchg
mov
cmp
jl
inc
ds
inc
dec
testl
aam
frstor
enter
sbb
in
jbe
mov
lods
inc
outsl
dec
xor
ja
pop
xor
aaa
jecxz
mov
sbb
xchg
fmulp
push
pop
lahf
out
pushf
jne
aad
mov
rolb
fildll
movl
idiv
lret
mov
xlat
je
jle
add
xor
in
and
or
inc
dec
nop
push
push
out
imul
je
mov
mov
xchg
xchg
int3
push
das
std
sbb
pop
mov
xchg
pusha
test
dec
ret
call
cmp
lea
jns
inc
cs
cld
fadds
iret
dec
ret
push
or
jmp
sbb
fbld
push
xor
ret
mov
mov
jnp
xchg
movsb
test
or
lds
into
mov
movsb
mov
and
push
pop
sub
sub
aas
xlat
dec
nop
add
outsl
xchg
push
xchg
push
xor
stos
ret
out
cmp
push
xchg
loop
bound
or
push
adc
add
movsl
shlb
pop
mov
add
call
loopne
mov
mov
popf
repnz
add
mov
xchg
mov
testl
fistps
outsl
mov
aam
xchg
mov
cld
leave
jo
imul
insb
mov
int3
ds
mov
mov
fistl
jge
loope
sbbl
push
outsb
xor
pop
cmp
pop
bound
aaa
call
pop
out
cwtl
test
push
rorl
popf
clc
aad
shrb
push
dec
push
add
enter
insl
jnp
divb
inc
xchg
mov
aam
xor
imulb
pop
jle
popa
add
mov
fs
push
in
sub
xor
fistps
mov
stos
imul
cmp
pushf
fsubl
or
stos
inc
xchg
dec
rcrb
cli
pushf
sbb
hlt
cmp
pushf
dec
mov
mov
mov
or
ljmp
das
xchg
mov
fcomi
fsubrs
fcmovnb
push
cmc
push
repnz
clc
loop
stos
mov
add
and
add
lret
inc
jecxz
loopne
and
sbb
loop
jno
and
ja
and
adc
mov
cmp
push
mov
mov
sbb
cld
xlat
mov
cltd
mov
js
add
push
sub
lret
mov
dec
cmpsl
and
pop
add
cs
mov
cmp
mov
adc
movsb
mov
cmp
add
sti
xor
movl
mov
push
cmp
add
scas
and
mov
sub
cmpsb
mov
dec
mov
xchg
dec
lret
aas
or
imul
loop
movl
adc
pop
or
jno
xor
lret
cmp
les
imul
mulb
shl
add
pop
mov
stos
mov
shrb
and
xor
lds
out
out
mov
xchg
test
lock
xchg
inc
hlt
fstl
dec
insb
mov
and
adc
xchg
jg
inc
andl
dec
mov
sub
nop
mov
insb
push
or
push
icebp
inc
dec
mov
and
xchg
in
popf
adc
pushf
or
pop
sub
sub
mov
adc
inc
sub
stos
xchg
lea
loope
test
lret
aam
loopne
push
test
pop
ljmp
push
loop
xchg
sub
inc
push
movsb
jecxz
xchg
mov
inc
rcl
or
clc
xchg
adc
adc
inc
mov
mov
nop
inc
cmpl
fbstp
adc
cld
movsb
mov
and
xor
cmp
jecxz
mov
adc
dec
add
jnp
mov
jg
out
push
mov
dec
add
jne
sub
lods
push
add
jo
adc
add
adc
sub
les
cmpsl
mov
lock
sahf
and
idivl
ss
add
rol
enter
add
popa
pop
es
mov
mov
stos
loopne
jle
push
popf
mov
loopne
and
and
jle
fldt
mov
daa
push
outsl
or
pop
cld
in
mov
adc
test
arpl
ret
mov
lret
add
fldt
push
cmpsb
addr16
insb
mov
pop
push
gs
or
xor
nop
iret
out
jnp
mov
popf
mov
inc
sahf
mov
xor
cld
cmp
jno
adc
loopne
cld
adc
sub
add
je
das
xor
mov
loope
inc
out
mov
mov
push
movsl
jg
jg
in
adc
dec
sti
imul
xor
stos
xchg
dec
sti
xor
cmp
jp
pop
push
pop
pop
insb
add
loopne
cvtps2pd
pop
add
mov
ds
cmpsl
jno
inc
das
outsl
andnps
mov
push
ret
fildl
xlat
sub
test
xchg
cmp
inc
lea
dec
lods
sub
or
scas
bound
jbe
cld
rolb
sbb
ret
movsb
mov
or
int
into
add
hlt
add
adc
fwait
jmp
ja
sub
enter
test
test
testb
gs
leave
jnp
mov
movsb
pop
fs
xor
orl
cmc
xchg
cmp
in
es
or
sbb
cld
add
push
adc
shlb
xor
fadds
xchg
in
ja
sbb
lret
or
lds
mov
aam
mov
out
inc
and
dec
fldl2e
xor
stos
sti
dec
push
pop
test
out
sbb
or
nop
cmp
cmp
xor
ret
jnp
in
sbb
mov
loopne
jp
les
mov
cmp
push
adc
repnz
sub
cmpsb
inc
add
shrl
xor
faddl
imul
call
aam
sub
loope
cmpsl
adc
add
addr16
cs
sub
jno
mov
push
mov
and
pop
mov
jle
js
adc
ss
jno
sub
ds
icebp
outsl
xchg
push
jg
pop
cmp
mov
mov
mov
daa
fistpl
dec
cs
into
jae
outsl
jle
xor
push
inc
repz
int3
mov
or
mull
iret
addb
outsb
push
cmc
sub
and
ljmp
aam
out
aam
scas
sahf
idivl
roll
add
pop
dec
scas
out
enter
lds
xor
jl
xchg
or
mov
cwtl
cmp
aad
xor
adc
lock
push
je
push
xchg
jge
imull
add
pop
in
adc
filds
xchg
or
stos
loop
leave
iret
test
xchg
sbb
sar
scas
scas
jb
js
mov
adc
testb
dec
jbe
in
push
pop
ror
movsl
dec
sti
xor
push
scas
dec
adc
add
popa
jmp
stc
bound
cmp
cmp
sti
push
test
sbb
mov
shll
in
testb
mov
sub
out
sub
pop
pop
jne
hlt
or
pop
cmp
add
sub
test
cmp
shll
adc
xchg
arpl
pop
orl
bound
ficomps
mov
mov
jnp
mov
dec
mov
je
cmp
ret
pop
arpl
and
cmpsl
out
sti
or
data16
inc
sbb
data16
fs
fcoml
aam
hlt
fistpll
adc
push
sub
add
mov
popa
scas
outsb
jno
jbe
mov
int3
adc
inc
dec
mov
inc
and
test
mov
push
mov
xchg
pop
inc
dec
push
mov
mov
outsl
jl
in
jl
outsl
daa
or
mov
mov
push
dec
mov
dec
cmovo
dec
jg
inc
xchg
push
push
loopne
in
dec
jl
cmp
popa
add
cmp
jmp
or
faddl
pop
lcall
shlb
sub
cli
stc
pop
mov
mov
mov
inc
loopne
ss
mov
push
inc
xchg
or
fs
jo
fs
mov
iret
xchg
xor
jp
and
cmp
lods
jns
xchg
add
jae
sahf
int3
movsl
xchg
jmp
push
movsb
mov
sub
mov
and
add
subb
xchg
inc
cmp
sbb
xchg
outsb
test
lods
cmp
mov
sbb
out
mov
dec
or
dec
pushf
inc
add
test
je
sarl
in
outsl
repz
push
push
pop
sub
inc
fildll
sub
xor
int
into
dec
jno
bound
mov
out
add
rolb
stos
sbb
cmp
and
jle
xchg
js
repnz
mov
cmc
lods
fsubrl
loope
outsl
jge
ss
mov
dec
pop
leave
lods
ljmp
shl
or
mov
and
xchg
sub
or
adc
aas
inc
sub
add
ret
popf
xor
mov
fs
faddl
lret
inc
dec
es
push
sub
leave
rorb
add
rol
lcall
mov
jle
adc
aam
scas
loop
adc
or
ret
or
stos
mov
inc
popa
mov
lcall
mov
leave
lret
les
ret
cmpsl
adcl
mov
adc
pop
mov
jns
shlb
pop
dec
sti
cmp
lcall
jg
pop
mov
sub
imul
xchg
mov
or
jne
inc
jae
jns
cmpl
jl
ss
rorl
cmp
je
xor
sbbl
clc
mov
test
add
bound
movsb
test
push
mov
dec
popf
xor
cld
pop
dec
nop
sbb
cmp
dec
xchg
push
daa
fsts
ficoml
nop
xchg
scas
test
cmp
stos
mov
test
cmp
pop
cwtl
add
stos
cmp
add
push
ficompl
mov
movsl
dec
outsb
mov
lods
xor
and
cmp
adc
shl
xchg
xor
xor
pop
and
js
jl
rorb
add
das
movsb
mov
scas
add
pop
fmulp
leave
and
sti
cmp
lock
pusha
ja
dec
ret
inc
xor
popf
popa
xor
lock
jecxz
jns
jmp
or
inc
lds
mov
sbb
add
fildl
loop
cmc
mov
les
push
jbe
inc
pop
and
subb
xchg
push
cmpsl
hlt
sbb
out
repz
pop
pop
mov
or
pop
dec
mov
fs
fisubs
adc
mull
dec
test
inc
jno
movsb
add
fldt
aaa
std
dec
dec
mov
pop
sar
push
mov
push
dec
dec
dec
scas
fimull
jne
sub
dec
out
into
push
add
mov
scas
add
cmc
jge
mov
mov
pusha
ljmp
roll
xchg
mov
or
addl
ljmp
ret
or
nop
xchg
pop
push
jecxz
xorl
dec
jae
stos
sarb
iret
sbb
ss
sub
pop
add
ret
inc
inc
mov
mov
lods
fwait
xchg
lret
mov
jo
jo
inc
cli
mov
insb
cmp
sub
shl
clc
ret
xchg
inc
mov
pop
test
xchg
data16
or
in
arpl
jns
push
xchg
dec
sbbb
out
mov
push
inc
pop
xor
divb
mov
mov
fucomip
or
call
fisttpll
outsl
das
outsb
fimuls
test
das
ret
mov
stos
dec
inc
out
inc
mov
dec
ljmp
and
sub
pop
xlat
push
data16
mov
stos
xor
outsl
and
js
xchg
dec
fimuls
push
pop
cmp
xor
sti
jl
shl
rcrb
sbb
cmp
sub
scas
jnp
sbb
sahf
sub
and
dec
data16
push
test
ljmp
add
mov
lea
fcom
add
shll
inc
lret
insl
jp
pop
lret
mov
cli
iret
push
pushf
jns
pop
and
mov
lock
and
lods
push
dec
and
cmp
cmp
mov
cmp
inc
push
into
enter
mov
or
clc
daa
jge
fcmovnb
ja
arpl
in
xchg
mov
dec
mov
xor
inc
aad
jp
fsub
out
mov
leave
mov
jnp
in
fisttps
push
sub
scas
xor
push
scas
in
adc
in
adc
sub
stos
xchg
stos
in
pop
dec
push
mov
sbbl
in
ret
popa
aad
pushl
push
pushf
pop
mov
xchg
push
outsl
ja
mov
xchg
ljmp
test
cmp
xchg
inc
rol
leave
jns
adc
cmp
cmp
lret
insb
insb
push
aad
dec
adc
mov
mov
cltd
bound
sbb
ficompl
add
pusha
pop
xor
fwait
arpl
shll
and
or
sub
popa
adc
adc
mov
xchg
hlt
inc
add
fwait
dec
xor
lret
cmpsl
xchg
sub
xor
mov
sbb
jmp
loope
fwait
scas
mov
jge
cltd
pop
shlb
inc
je
inc
inc
add
and
jne
loop
in
ret
xchg
in
scas
shr
std
pop
inc
dec
xchg
inc
mov
ss
out
fcmovb
mov
loop
sbb
push
out
xchg
jne
mov
jp
das
sar
scas
repnz
mov
jb
xchg
add
fdivl
xchg
ja
mov
dec
lods
imul
movsl
sti
inc
aam
scas
push
mov
sbb
xchg
and
ljmp
out
sti
popf
enter
sbb
push
pop
scas
adc
inc
jnp
cmp
jno
pop
and
add
out
xor
aad
pushf
pop
inc
xchg
das
and
inc
testb
sub
mull
sub
xor
out
sbbl
push
fldt
xchg
add
mov
cwtl
mov
fmuls
shrb
stos
cmc
cmpsb
lea
lret
jle
rolb
xlat
xchg
dec
testl
or
out
movsl
aas
cmp
pop
push
ret
repz
lcall
or
xchg
stos
iret
or
out
leave
mov
popf
mov
jmp
repnz
sub
dec
push
hlt
xchg
loopne
out
xor
dec
jne
les
dec
jne
or
xchg
mov
push
jge
fildll
lret
insb
cmp
shlb
ja
stos
and
insb
jge
adc
xchg
mov
push
notl
pop
inc
and
sub
enter
fbstp
leave
outsl
int3
mov
or
cmp
mov
add
pop
cmp
jnp
popf
xchg
mov
addl
pop
ret
xchg
ljmp
sti
icebp
adcb
lret
inc
bound
sub
sub
iret
imul
xlat
mov
push
pop
cltd
jnp
sub
imul
sub
adc
loop
mov
shrb
lret
jl,pt
mov
jg
ds
sub
pop
jl,pn
xchg
outsb
add
rcll
lahf
lret
iret
jl
test
jmp
jae
fdivl
fdivrs
stos
cwtd
mov
jnp
xchg
ret
jp
dec
mov
and
fadds
or
out
leave
fstpl
or
xor
hlt
sub
loopne
out
bound
pusha
adc
fwait
pop
aas
nop
rorb
lahf
insb
lret
sub
inc
je
mov
imul
or
pop
jmp
mov
push
imul
and
int3
int
adc
jp
hlt
cmp
neg
dec
mov
dec
dec
mov
loope
jb
dec
loop
and
int
jo
add
cmpsb
lret
out
int3
lea
mov
out
push
sbb
scas
dec
sbb
sbb
xchg
and
mov
in
test
fcompl
adc
xor
das
subl
sub
push
cmc
dec
or
daa
dec
jo
xor
test
leave
mov
xor
test
xchg
test
fdivr
dec
pop
dec
out
inc
fwait
inc
popa
insb
ret
mov
mov
and
push
push
sbb
pop
mov
je
ja
ret
jmp
push
rcrl
lea
dec
xchg
outsb
xor
or
negb
pop
push
scas
jge
dec
ss
test
dec
or
pusha
std
cmp
cwtl
sbb
xlat
int
das
repz
popa
mov
push
cmp
mov
mov
pop
lock
jmp
inc
adc
pop
adc
and
ror
jbe
cmp
nop
push
jnp
pop
icebp
mov
xchg
rcl
inc
push
out
push
pop
clc
lcall
addr16
mov
jge
or
xor
cmp
dec
mov
mov
jmp
icebp
cld
xor
xchg
sub
xchg
dec
mov
push
adc
mov
imull
in
stos
cs
addb
push
adc
jg
xchg
in
inc
ja
pop
jne
jb
sbb
adc
js
rcrb
mov
sub
push
and
sub
push
push
sub
sbb
or
fs
push
jp
in
push
repz
add
iret
dec
lock
cmp
mov
aad
and
gs
xor
and
xchg
xor
add
push
cld
mov
cmp
xchg
in
cmp
mov
jg
mov
xchg
les
das
mov
pop
hlt
xor
test
lahf
fistps
xchg
mov
mov
fmull
in
xor
js
pop
push
push
push
mov
cmp
pop
add
mov
in
ja
out
and
sti
cmp
mov
andl
adc
pop
jns
sbb
xchg
jae
jbe
push
add
rcll
arpl
pop
std
lds
or
push
or
pop
dec
mov
cmp
jno
add
or
adc
add
or
pop
and
movd
adc
in
or
mov
push
dec
and
in
ss
aam
pop
fs
out
add
or
add
or
pop
adc
mov
js
cmc
lcall
rcll
xlat
pusha
ret
dec
dec
fistps
push
xchg
fidivs
jecxz
push
lods
test
pop
mov
int
mov
dec
push
loope
vpmacsdd
insl
cld
push
inc
cmp
jl
arpl
mov
ficoms
sbb
insb
dec
sbb
sub
cld
stos
notl
dec
sahf
lret
xchg
imul
sbb
adc
test
sbb
in
jl
icebp
gs
dec
and
test
mov
mov
pop
sub
cli
sub
jecxz
mov
inc
pop
or
cmp
scas
mov
jge
push
int3
lret
and
xchg
inc
cmp
pop
scas
ret
insl
popf
sub
inc
and
ljmp
pop
mov
bound
and
cltd
outsl
insl
scas
fcmovu
into
sub
sbb
lret
pop
and
inc
insb
outsl
cmp
outsb
into
sbb
scas
inc
test
and
and
ja
mov
rcrl
sbb
inc
mov
stos
rorl
and
mov
adc
sbb
xchg
inc
xchg
sti
aad
rol
das
iret
sub
out
sub
xor
xor
mov
enter
ss
fwait
imul
shrb
adc
ret
mov
fsts
cltd
cld
call
int3
aam
dec
lods
inc
test
or
inc
jno
in
xor
dec
sub
stc
mov
lahf
imull
jecxz
test
out
cld
iret
lahf
adc
arpl
pop
inc
sub
pop
icebp
push
cs
mov
push
push
lret
pop
and
xor
arpl
inc
rcl
add
xchg
xor
rcrl
adc
cmpsl
andl
nop
mov
and
imul
aam
dec
push
or
in
mov
xor
mov
mov
mov
cmp
out
jb
fadds
loopne
popa
inc
pop
mov
out
cmpsb
inc
aas
dec
bound
inc
mov
ror
mov
popf
popa
pop
add
adc
jle
mov
mov
pop
cmp
leave
fsts
cli
mov
jecxz
jp
outsb
mov
test
int
lret
std
shrl
insb
pop
or
sbb
cltd
lds
aam
mov
inc
adc
rcrl
stc
jno
pop
pushf
stos
fwait
inc
ret
aas
out
inc
mov
mov
stos
loope
fiaddl
inc
mov
pop
popf
out
cmp
js
pop
mov
cmp
jb
in
jmp
mov
js
sbb
sbb
xor
std
add
les
xor
lret
xor
or
cmpsb
dec
add
cmp
fbld
scas
mov
in
cli
div
inc
fidivs
xchg
fldt
add
xor
mov
lods
jns
dec
jno
sub
ret
sbb
push
push
lret
insb
push
lea
or
ss
cld
rorl
mov
xadd
pop
aad
rorb
push
and
pop
cli
test
in
lods
sbb
mov
mov
fiaddl
xchg
popf
insl
int
xchg
dec
mov
sbb
push
ret
iret
lock
fisubs
popf
in
sub
je
inc
lret
lret
insb
cmp
popf
ds
add
mov
test
push
fisubrs
inc
push
adc
add
mov
push
pop
shr
repz
mov
cmp
popf
pop
arpl
cwtl
test
test
ss
out
aaa
int
data16
imul
aas
pop
shlb
cs
outsb
sub
in
leave
into
lea
adc
outsl
lods
or
fwait
jl
cwtl
js
in
jmp
jo
push
or
push
dec
cmp
int3
dec
lods
and
iret
lods
cmp
xchg
inc
js
lret
and
pop
aad
cwtl
push
out
jmp
fcmovu
add
jo
cltd
inc
loop
xor
jl
pop
scas
cmp
xor
jg
cmp
test
leave
pop
jns
fwait
jmp
daa
mov
addr16
lahf
sbb
test
inc
hlt
ror
dec
movsl
leave
or
pushl
cmpsl
loopne
pop
push
cld
cmpsl
xchg
jecxz
mov
imul
pop
and
bound
cmpsl
xchg
dec
lret
xlat
push
mov
sbbb
popf
lods
leave
xchg
cmp
fisttpll
insb
pop
or
sahf
hlt
mov
inc
lds
sbb
pop
adcb
and
nop
mov
sahf
mov
inc
cmp
es
stos
xchg
stc
pusha
adc
adc
or
inc
loopne
mov
stos
test
cmp
xchg
cmp
jg
push
or
mov
xchg
jle
outsl
das
inc
lret
add
adc
sub
or
push
inc
dec
cmp
repz
pop
nop
jo
mov
xchg
lret
sbb
ja
inc
lret
sub
xchg
sub
cmc
and
push
call
sarl
cltd
lcall
sub
outsl
mov
and
sub
or
dec
adc
pop
mov
call
inc
mov
xchg
rorb
push
dec
sub
daa
sbb
sbb
dec
add
push
test
xchg
insb
inc
sub
in
pop
mov
mov
adc
movsl
js
imul
repnz
leave
mov
pop
test
cmc
dec
dec
mov
in
stc
mov
scas
cmp
jb
cmp
xchg
pop
imul
push
adc
loop,pn
cmpsl
cmp
cmp
iret
sub
cwtl
jb
cmc
roll
arpl
ret
lret
xor
xor
bound
pop
xlat
xchg
push
sbbl
cmp
jnp
jb
out
mov
inc
xchg
out
xchg
pushl
mov
mov
pop
xlat
jl
mov
jmp
inc
add
add
pop
dec
les
jb
lahf
lret
movsb
mov
lea
push
dec
std
lods
sbb
js
iret
inc
mov
jnp
imul
jo
jle
and
lods
xor
scas
sub
loop
or
inc
in
push
ret
xchg
jns
test
xchg
mov
add
push
dec
lahf
mov
in
push
popf
and
cmp
stos
testl
sbb
push
push
push
aam
mov
sbb
icebp
cli
or
mov
push
repnz
dec
adc
cld
cmp
mov
lret
jno
mov
push
fistpll
aaa
mov
jg
and
push
shrl
subb
cs
cld
pop
inc
shr
jmp
sbb
xchg
mov
pushf
loopne
scas
subb
push
lea
mov
sbb
movsb
dec
xor
lret
ljmp
dec
cli
ljmp
pop
mov
pop
insl
ret
ror
mov
xor
into
mov
mov
les
test
xchg
inc
scas
sbbb
cmc
or
lret
xchg
sub
addr16
mov
adc
xor
outsb
int3
arpl
roll
popl
dec
sub
dec
xor
loop
loope
fwait
aaa
or
dec
sub
push
cmp
sbb
dec
ja
jmp
ja
mov
sbb
inc
pop
out
add
fstl
shl
popa
or
pop
sub
not
retw
jmp
stos
scas
loop
or
test
test
and
mov
mov
inc
outsl
rolb
sti
xor
ret
mov
in
in
dec
xchg
incl
push
or
into
mov
push
cmp
inc
mov
xor
inc
fs
sbb
daa
mov
scas
mov
or
adc
sbb
adc
or
popa
mov
push
and
mov
mov
lods
outsb
adc
fstpt
out
sbb
test
adc
daa
inc
adc
ret
jbe
pushf
mov
adc
or
add
dec
push
lret
jno
test
sub
push
nop
shll
inc
ret
sub
imul
sti
inc
xor
lret
mov
cmp
shll
mov
enter
es
mov
push
pop
insb
mov
cs
es
push
lods
notb
stos
jl
fcmove
mov
loopne
pop
out
lcall
mov
leave
jbe
xchg
roll
fstpt
je
jb
lods
insb
cwtl
or
cs
or
out
mov
push
enter
aas
adc
xchg
test
lea
jmp
jp
es
jecxz
dec
lcall
dec
out
cmpsl
aam
divl
lcall
push
addb
jl
inc
add
pop
insb
loopne
cs
mov
sub
lea
push
repz
mov
pop
fdivs
shl
imul
fsubrl
sub
fs
pusha
sahf
scas
iret
add
adc
aas
mov
push
sub
mov
mov
jno
fidivrl
mov
stos
in
cltd
adc
jbe
shrb
push
mov
or
into
jne
push
fists
push
pop
add
pushf
adc
test
lcall
jl
cmp
inc
fstpt
rorl
mov
lea
sbb
imul
xor
mov
mov
es
adc
xchg
cmp
jno
movsl
std
add
push
push
sub
movsl
cmp
in
fisubrl
arpl
fs
outsl
js
hlt
insl
inc
adc
pop
daa
and
insb
ljmp
xchg
nop
adc
mov
jle
test
push
cmp
and
test
inc
cmp
out
iret
xchg
int
loop
pop
lea
iret
mov
xor
and
pcmpgtb
xlat
add
int3
mov
inc
mov
xor
push
pop
inc
lret
adc
jp
aam
inc
mov
inc
push
cs
mov
mov
jl
xor
pushf
movsb
sub
jge
mov
cmp
test
std
mov
imull
adc
xor
out
jns
jbe
outsl
jle
xor
cltd
sbb
sbb
cmp
das
xchg
fidivl
push
adc
jmp
repnz
jno
sbb
orb
lret
sarl
jle
outsl
fcoml
orl
shl
add
dec
xchg
sahf
jns
push
jmp
mov
fwait
push
popa
add
xchg
and
xor
xor
sub
daa
movsl
jbe
sub
sarb
movsb
xchg
rcl
rep
leave
pop
imul
loop
cmp
loope
jae
js
adc
arpl
stos
frstor
lea
mov
and
jl
or
insl
mov
aaa
mov
xor
add
lock
push
call
cmp
std
fadd
call
out
sbb
push
popa
in
stc
or
lods
clc
or
shrl
in
pop
add
iret
push
out
cltd
xchg
stos
addr16
cmp
pop
mov
mov
push
jb
fdivrp
imul
outsl
push
sub
lea
mov
push
cmp
sbb
xchg
xchg
push
cmp
enter
mov
pop
std
and
mov
lock
xlat
sub
shll
clc
xor
and
or
push
jmp
inc
sbb
xor
ljmp
dec
add
mov
sub
pop
and
jecxz
lods
sub
ja
repz
add
mov
iret
sti
aad
xchg
les
sbb
sub
push
xchg
popa
push
or
cltd
ds
push
mov
adc
jae
rolb
les
hlt
mov
pop
add
insl
bound
dec
inc
iret
add
stos
sbb
sbb
in
mov
outsb
test
rcll
ss
xor
dec
adc
xchg
adc
mov
pop
xchg
loopne
pop
pop
test
xchg
loopne
add
aad
fs
hlt
dec
add
lods
mov
and
add
mov
and
in
pop
pop
mov
ljmp
hlt
inc
stos
ja
mov
nop
fisubs
cmp
jle
cld
jae
jns
pop
dec
cmc
jmp
push
adc
fcompl
push
shll
andl
xor
mov
divl
and
stos
test
pop
sub
adc
jb
pop
jg
mov
push
sub
fs
in
sahf
and
loop
push
push
jns
cmovae
mov
loopne
cli
mov
or
int
int
jmp
stc
aaa
mov
shll
rcll
ja
push
insb
loopne
icebp
xchg
pop
addr16
xchg
nop
jnp
xchg
aad
stc
pop
popa
and
xchg
push
aas
xchg
fidivrl
dec
xor
scas
inc
pop
test
dec
mov
add
add
stos
cli
adc
fisubrs
mov
jl
add
pop
in
mov
fcoms
inc
imull
pop
sbb
lret
orb
stos
leave
das
jg
daa
jno
fcompl
pop
je
rcl
jmp
jbe
sub
jnp
ret
cmp
push
stos
or
enter
mov
popa
jge
jecxz
loope
or
ficompl
rcl
ss
and
xor
xchg
sub
inc
cmp
sbb
inc
lods
ficoml
fmuls
or
jnp
std
aam
mov
mov
lea
mov
inc
shlb
sbb
aaa
fisubs
into
mov
pop
nop
cld
and
and
cmp
fisttpll
cmp
xchg
and
cmpl
pop
adc
cmp
jp
xchg
dec
mov
jns
aad
out
sub
fmuls
lret
nop
test
xchg
mov
and
inc
call
cmpsl
pop
dec
xchg
rcl
nop
push
xchg
dec
dec
stos
push
icebp
xor
arpl
and
rcrb
ja
dec
hlt
lds
scas
into
loopne
out
add
inc
repnz
push
adc
add
sbb
pop
cmp
jmp
subb
mov
insb
bound
and
or
and
pop
xor
test
sub
lods
sub
sub
das
idivb
shl
xor
add
popa
sti
rorb
imul
inc
pusha
test
jb
push
nop
xor
test
in
mov
push
lcall
icebp
stc
dec
loopne
mov
jno
inc
into
cmp
push
loopne
loopne
mov
out
mov
push
dec
inc
out
push
pop
jg
pushf
mov
adc
xor
lret
cmp
es
mov
adc
enter
xor
pop
cmp
das
dec
mov
out
aas
mov
into
les
test
cmp
hlt
add
or
imul
sarl
mov
pop
sub
ja
or
dec
insl
std
shlb
mov
nop
jbe
or
or
pop
jge
test
mov
shl
pop
push
cmp
inc
xor
inc
push
lods
enter
scas
pop
daa
and
rclb
mov
sub
jb
lods
push
pusha
lret
mov
clc
ljmp
popa
dec
mov
scas
dec
loop
cmp
and
sti
pop
ret
cld
pop
or
mov
fwait
pop
fists
lret
adc
pop
inc
stos
adc
mov
push
dec
push
mov
jge
dec
mov
jle
sbb
add
jg
nop
cld
das
mov
scas
sbb
in
cmp
rcrl
stos
icebp
popf
enter
leave
iret
mov
xchg
and
pop
mov
push
sbbb
outsl
mov
movsb
bound
mov
push
mov
movsb
pop
pop
and
lret
or
jecxz
pop
sub
mov
sbb
or
inc
popf
mov
leave
ljmp
mov
add
lds
push
or
into
lahf
cmpsb
dec
enter
lcall
movsl
insb
xor
pop
xchg
aas
lods
dec
cmpsb
jnp
inc
adc
cwtl
enter
sub
loop
push
fidivs
fs
loop
call
enter
xchg
out
inc
aaa
jo
jecxz
ret
leave
enter
ljmp
cmp
sub
mov
sub
in
fiadds
ds
into
and
popf
ds
es
ror
outsb
and
inc
cld
push
fisttps
or
outsb
into
pusha
and
loop
jbe
cmp
enter
sbb
mov
and
lock
jno
bnd
add
jmp
push
jb
sub
add
popl
popf
dec
dec
mov
jo
add
push
lret
add
push
jmp
cmc
stos
in
ds
inc
and
int
insb
mov
imul
test
pop
test
cmp
sbb
vcmpps
xchg
aas
jnp
push
sbbb
and
inc
xor
and
imul
mov
pop
stos
or
call
inc
and
hlt
fildl
dec
out
mov
xchg
call
outsl
aad
outsl
pop
mov
push
pop
sarb
jno
mov
frstor
addr16
inc
enter
lea
jbe
push
and
cltd
nop
in
push
or
shll
cmp
push
cmp
loope
lods
sahf
mov
lret
mov
xchg
dec
sub
mov
xchg
cmpsl
sub
insb
xchg
repz
cmc
lds
push
int
fistl
insl
in
mov
xchg
ds
xor
pop
dec
insb
dec
loope
mov
add
push
jne,pn
sub
xor
pop
jno
inc
jb
pusha
aad
mov
pop
jne
mov
inc
ret
mov
jp
cld
es
loop
adc
adc
dec
fistpll
sub
jae
mov
stc
into
imul
xor
mov
and
ja
and
pop
jne
subb
insl
fnstenv
daa
push
ds
jp
mov
lea
popa
add
push
daa
cs
pop
xor
xchg
fs
mov
mov
cld
movsb
xchg
inc
stos
fstps
push
mov
inc
push
inc
add
sbb
pop
adc
ret
and
add
or
mov
pop
mov
adc
mov
push
inc
cmp
les
lods
and
pop
push
pop
mov
mov
sahf
shlb
mov
minps
lods
xor
notl
jg
gs
mov
jo
mov
stos
popf
lret
jb
cmpsb
mov
mov
mov
jns
mov
std
lret
out
xor
test
or
pop
addr16
addl
xlat
xchg
push
mov
mov
shrb
fwait
jle
push
jecxz
jmp
js
shrb
lods
xchg
add
xor
jo
jnp
jns
pop
int3
lock
or
push
inc
add
insl
dec
mov
push
inc
cmp
sti
insb
mov
xorb
mov
xor
repnz
rorl
rcr
nop
lret
clc
movsl
mov
insb
xchg
mov
mov
adc
push
out
ret
dec
cmc
pop
idivl
ss
jge
push
lret
add
repnz
movsl
cmp
jg
in
adc
xchg
dec
sti
lods
or
sub
jl
mov
or
sbb
sub
sub
push
cltd
mov
into
inc
adc
test
test
and
test
test
pop
aaa
jne
or
mov
mov
ret
sahf
stos
add
shrd
rcrb
pop
sar
cmp
mov
dec
jb
loop
dec
mov
pop
push
ret
out
sahf
and
stc
fs
xor
loope
mov
das
inc
cltd
cmovns
inc
mov
push
sub
dec
dec
mov
dec
data16
popf
mov
xchg
loopne
addb
ror
insl
dec
enter
mov
sbb
or
mov
inc
dec
jae
loopne
leave
packsswb
sbb
push
xor
add
in
mov
inc
pop
je
mov
rolb
rcrl
inc
mov
jns
movsb
pusha
xor
cmp
movsb
cmpl
mov
xor
repnz
mov
outsl
rcll
leave
hlt
icebp
mov
mov
fistpll
lahf
sarb
pop
jns
sub
cmovno
rcrb
adc
cmp
addr16
jmp
cwtl
ret
and
cmp
fimuls
xor
ret
stos
loope
add
ret
std
mov
xor
mov
outsl
mov
xlat
fdivl
fcoms
add
or
mov
clc
cmpsl
or
xchg
aaa
sti
xchg
repnz
scas
mov
inc
scas
adc
cmpl
or
xor
xorl
push
repnz
pop
dec
imull
jl
mov
incl
out
je
cmp
jp
jmp
in
mov
shrl
pop
sbb
and
xor
adc
mov
cli
sti
lods
adc
jge
daa
dec
data16
stos
test
gs
jle
lret
repz
or
lods
mov
lahf
xor
lods
sarb
mov
out
inc
cbtw
add
dec
add
and
cld
cmc
sub
mov
xlat
stc
ret
icebp
mov
imul
cmp
test
and
or
cmp
push
push
ljmp
movsb
add
dec
sub
hlt
jae
movsl
jl
adc
jns
adc
or
clc
fldt
ljmp
dec
sub
mull
cmp
and
ret
add
imul
hlt
lock
jb
xor
lret
mov
push
fcmovbe
mov
bound
mov
jno
cld
mov
add
xor
mov
pop
movsb
imul
aas
push
jmp
xchg
decb
loope
dec
lgs
imul
shrl
pop
mov
inc
pop
mov
mov
inc
enter
push
pusha
hlt
into
cmp
jno
or
stos
in
sbb
and
mov
inc
fidivrl
mov
mov
dec
stos
cli
jo
jecxz
and
cmp
jb
xlat
paddb
mov
lret
sub
sub
ja
push
pop
out
aad
jmp
rcrb
add
sahf
cmc
jnp
pushf
add
das
mov
pop
sarl
adcl
lret
jl
imul
lcall
shlb
xor
roll
mov
cmpsl
into
aas
dec
test
and
loopne
in
inc
sarl
sub
pop
and
mov
loop
aam
stos
data16
cmpsb
xor
pop
pop
out
addl
mov
or
sbb
dec
imul
push
mov
inc
mov
fldenv
inc
mov
aad
add
aad
fs
daa
jl
insl
int
cli
cltd
hlt
push
int3
lds
aas
flds
bound
push
in
lret
stos
or
fs
mov
popf
rolb
jl
xchg
aas
dec
mov
clc
dec
mov
xchg
sbb
mov
lret
pop
rcrl
lret
lock
in
inc
call
sub
pop
aas
xchg
inc
sub
or
repz
mov
mov
lret
pop
xor
push
das
fisttpl
adc
outsl
scas
ds
in
mov
loopne
jg
test
movsl
jns
dec
or
sbb
sub
xchg
test
das
pop
mov
test
push
xor
mov
mov
aad
mov
cmp
push
mov
popa
iret
adc
xchg
adc
les
mov
test
je
xor
out
popa
pop
cmp
xchg
sub
mov
ret
daa
jo
mov
push
int
cmc
push
fwait
or
mov
fldcw
ja
jmp
sbb
cmp
inc
lret
or
cmpb
hlt
push
xlat
pop
mov
out
mov
pop
int
jle
leave
insl
push
xchg
lock
ss
mov
movsb
stos
out
or
cmp
mov
pop
pop
fs
and
ljmp
or
jmp
js
mov
push
in
andl
popa
pop
xor
lds
dec
jmp
out
xchg
mov
pop
mov
ret
push
pop
lds
pop
lret
ds
clc
popa
imull
test
cmp
or
dec
fs
hlt
mov
mov
pop
xchg
mov
cmp
scas
mov
mov
xor
and
mov
js
mov
insb
daa
int3
fisubs
lahf
lods
jnp
repz
in
mov
into
and
jns,pn
je
cli
call
push
fstps
jne
dec
jmp
pop
vpcmpgtw
lods
inc
adc
test
sub
pop
adc
cmp
adc
scas
push
or
mov
ror
adc
cmp
cmp
jg
dec
into
repz
mov
movsl
push
icebp
int3
mov
scas
sbb
rcll
push
pop
adc
rcll
or
pop
shl
and
or
inc
arpl
rolb
sub
dec
cmpsl
or
cmp
mov
sarl
pop
xlat
mov
imul
or
inc
xlat
adcl
dec
dec
pushf
mov
sbb
push
pushf
insl
adc
mov
xchg
xor
lret
sub
pushf
dec
dec
xchg
lds
lret
add
push
sbb
mov
fmuls
fwait
mov
mov
jb
bound
jg
push
pop
test
inc
outsl
mov
push
leave
xor
call
push
xlat
jge
mov
push
xor
mov
push
jmp
aam
movsb
pop
dec
stos
flds
and
mov
sbb
cmp
and
ficompl
push
sbb
xchg
int3
and
mov
mov
mov
sub
add
fiaddl
mov
add
add
fwait
jno
cltd
mov
sbb
push
sub
cli
dec
jge
movsb
or
mov
or
mov
pop
mov
lods
shll
loope
cmp
mov
call
loope,pt
add
and
mov
sbb
les
push
mov
pop
xor
cmpsb
lahf
cmp
outsb
mov
xor
pop
pop
adc
out
jecxz
fcom
mov
xor
data16
and
loopne
xor
es
in
int3
pop
sub
lods
mov
push
std
inc
test
cltd
mov
mov
dec
call
fs
test
mov
cwtl
pop
cld
and
inc
sub
pop
sbb
testl
inc
outsb
fimull
jbe
movb
mov
test
dec
in
and
sbb
pop
dec
xchg
jnp
aam
hlt
fsubl
les
fdivs
imul
add
and
cmp
and
ret
sbb
stos
int3
aam
dec
mov
lock
mov
mov
fucomp
out
pop
inc
inc
fistpl
out
cli
or
jge
fstpt
lods
mov
scas
xlat
jnp
je
ds
sub
std
test
jl
lock
inc
imul
gs
sub
mov
sbb
or
shr
lods
lret
cltd
mov
cmc
psubw
popa
pusha
rclb
and
cmpsb
jl
test
mov
loopne
jle
testl
leave
hlt
dec
mov
inc
dec
das
sbb
je
jb
adc
inc
js
adc
stc
mov
addl
sub
xchg
pop
jb
add
add
int
cmpsl
xchg
push
sub
jo
fnop
mov
jae
divb
and
aas
shlb
lock
ljmp
out
sub
jp
lcall
gs
pushf
out
in
cmpsl
repnz
notb
addl
mov
fiadds
inc
hlt
loopne
pop
xchg
push
push
adc
sub
and
imul
mov
mov
stos
xlat
ret
call
out
out
cmp
aad
or
jl
imul
daa
jae
xor
inc
fwait
je
jge
or
sub
add
pop
and
jl
in
dec
ficomps
add
cwtl
ds
mov
or
sbb
lahf
lods
stos
shrb
das
and
enter
mov
mov
and
and
mov
sub
jno
jl
dec
daa
sbb
adc
and
jnp
icebp
jmp
mov
mov
sbb
in
dec
xchg
pop
mov
shll
fstl
sarb
or
arpl
lock
stc
xor
negb
loop
push
repnz
scas
fld
fadd
and
lret
inc
hlt
in
gs
test
sub
inc
jmp
lahf
mov
repz
lahf
das
push
dec
nop
in
pop
cwtl
add
pop
outsb
in
mov
hlt
loope
inc
in
pop
mov
cmp
mov
push
adc
cmp
inc
out
hlt
add
call
inc
inc
sbb
ja
sub
inc
xor
jg
stos
insl
sbb
repnz
int3
in
nop
in
sbb
mov
push
mov
inc
mov
sub
mov
out
adcl
repz
outsl
push
sbb
sub
mov
mov
xchg
mov
sub
and
cld
sbb
jge
loope
ss
mov
cld
data16
popf
adc
push
fsubl
jl
push
loopne
popa
fwait
adc
sbbl
ret
xchg
inc
adc
dec
idivb
xchg
or
or
mov
pushf
and
jge
inc
adc
in
mov
lods
sub
cmp
fnstcw
dec
out
pop
cwtl
lock
jo
dec
mov
movsb
mov
inc
xchg
lea
fs
pop
sbb
push
outsl
sub
mov
ljmp
mov
repnz
or
adc
incb
iret
xchg
shlb
fsubrs
rcr
hlt
jge
inc
xor
jl
int
mov
push
jmp
mov
pop
cltd
xor
addr16
pusha
imul
bound
shll
sti
sbb
iret
fsubl
sbbb
inc
cltd
jno
in
and
enter
push
or
inc
gs
dec
cld
outsb
enter
repz
xor
cmp
adc
sub
mov
fnstsw
inc
mov
push
cmpsl
add
add
sbb
imul
shrl
cmpsb
xchg
daa
into
push
dec
add
add
outsb
sbb
xor
das
clc
xchg
call
fsts
adc
movsl
into
fcoml
mov
loopne
mov
sbb
fwait
sbb
aaa
sub
mov
add
sbb
test
xchg
jecxz
mov
inc
push
jp
jae
push
pop
imul
jns
lret
inc
push
sub
xor
sti
inc
push
add
or
sub
xchg
sub
inc
jnp
pop
xor
xor
in
out
inc
sahf
sbb
movl
nop
jl
inc
xor
mov
ja
std
fdecstp
insb
adc
jle
adc
scas
jmp
out
pop
imul
and
mov
dec
scas
das
movsl
xchg
fnsave
stos
pushf
mov
xor
add
pop
ficoms
inc
push
sti
int
addl
sbb
int3
cmpsl
inc
js
repz
mov
out
add
daa
jno
jno
jmp
pushf
xor
mov
je
jbe
xchg
lcall
lcall
jns
into
roll
sub
je
bound
lds
sub
cmp
std
lcall
loope
push
add
and
aam
push
aas
rcll
loope
mov
lahf
out
scas
xor
lahf
test
mov
pushf
push
mov
out
push
fidivl
sbb
inc
jle
bound
and
pop
inc
lcall
jg
xor
lock
cmp
mov
subl
les
loopne
stos
pop
and
rorl
mov
mov
lcall
dec
dec
fstpl
inc
pop
jp
rclb
xchg
arpl
push
xor
enter
enter
add
inc
xor
mov
repnz
xlat
xlat
mov
movsb
lret
xor
das
ja
lahf
mov
inc
popf
cmp
xchg
fyl2x
mov
mov
cmp
pop
adc
jmp
fisubrl
inc
scas
adc
mov
ds
mov
cmp
movsb
xchg
cmpsb
xor
test
leave
jae
and
and
ret
push
leave
dec
mov
fnstcw
and
add
outsl
pop
ret
push
pop
fst
sub
mov
std
dec
xor
mov
movl
std
push
fs
inc
test
cltd
gs
cmpsb
nop
aad
repnz
or
cs
push
cmp
pop
movsl
stos
mov
or
or
push
iret
dec
cli
add
subl
dec
adc
in
stos
xchg
js
repz
lret
movsb
xchg
pop
jnp,pt
lahf
pop
xor
cwtl
pop
cmp
or
jg
fstl
std
rolb
jno
jmp
outsb
or
lods
pop
call
mov
int
pop
xchg
push
addr16
and
das
and
xor
add
adc
mov
pop
repnz
adc
jo
mov
xor
cltd
ret
xchg
cmp
adc
pop
cs
outsl
fnstenv
cmp
xchg
push
hlt
sub
mov
mov
adc
cld
loopne
popa
enter
jmp
orl
lods
add
fucomi
mov
gs
jl
xor
shr
xchg
xchg
xor
jg
xchg
or
add
fs
sub
nop
fiaddl
adc
stos
jecxz
shlb
iret
imul
lea
push
into
or
xlat
push
les
test
and
into
pushf
mov
dec
fwait
inc
mov
and
out
sbb
push
push
and
nop
xlat
test
mov
scas
call
adc
fs
sbb
xchg
push
xchg
mov
fdivrp
add
add
out
sbb
mov
pop
and
mov
mov
test
push
pushf
jle
sahf
and
movsb
adc
jg
out
mov
movsb
data16
and
leave
sub
pop
cmpl
insl
and
loope
adc
sub
ja
push
cld
dec
pop
outsl
add
outsb
sub
add
push
add
pop
fnstcw
xor
xchg
popa
jno
or
push
inc
fmull
subps
test
out
shrl
scas
and
cltd
cmpsl
push
push
sbb
add
push
out
popa
rorl
test
stc
in
insb
pop
out
jp
mov
notb
mov
jp
out
sbb
inc
mov
cmp
stos
xor
push
xchg
xchg
jno
jmp
and
clc
sbb
jmp
sahf
mov
xchg
sub
mov
push
xor
enter
dec
orl
lret
cli
cmp
daa
pop
cmp
daa
cs
push
in
stos
icebp
test
sbb
xchg
mov
mov
inc
ret
outsb
inc
mov
dec
movsb
mov
xor
cwtl
or
inc
pop
xchg
push
mov
pop
fisubl
imul
adc
push
hlt
add
and
popa
pop
sbb
xor
xchg
jmp
inc
mov
and
push
fcomps
test
std
or
cmp
int3
xchg
cmpsl
pop
ret
xor
sub
div
add
dec
cmp
xchg
pop
inc
inc
adc
pop
mov
cmp
dec
jecxz
pop
mov
dec
into
in
xchg
jno
les
fcomi
repz
cs
push
and
add
inc
sub
das
push
loop
sub
or
int3
cmp
ret
mov
push
in
adc
dec
jne
sbb
iret
inc
cs
xchg
pushl
inc
xlat
int3
js
and
pop
aas
dec
jno
out
das
cmp
mov
mov
jae
push
js
mov
mov
push
mov
popa
incb
or
cmpsb
outsl
xchg
mov
test
into
enter
ljmp
arpl
xchg
insb
sbb
and
pop
sub
cli
enter
cmp
gs
popa
orl
daa
int3
in
xor
dec
insl
cmp
arpl
sbb
jg
add
jg
mov
int3
add
fs
add
std
push
stos
jp
lods
dec
push
mov
lods
cwtl
xor
jb
lret
mov
cmp
jnp
lea
roll
xchg
push
xlat
or
stos
xchg
push
popf
add
ljmp
fmuls
adc
ljmp
sub
imul
cmp
pusha
dec
int3
pop
fnsave
leave
lods
mov
or
add
inc
daa
dec
aad
and
or
inc
mov
dec
lret
push
lcall
int
jns
std
sub
adc
push
test
aad
mov
jo
pop
jnp
mov
xchg
and
sbb
mov
stos
mov
jne
jg
stc
inc
xchg
outsl
and
xor
stos
jns
cmp
xor
mov
jp
pop
dec
mov
adcb
mov
push
ss
pushf
cld
dec
decl
filds
fsub
mov
cmc
sti
xor
mov
insb
and
mov
outsl
nop
call
inc
jl
ret
mov
add
incl
lds
dec
add
repnz
dec
imul
jge
insb
cmpl
aad
mov
sahf
popa
mov
push
adc
dec
and
xchg
mov
int
popa
sahf
int
xor
outsl
jl
fldcw
pop
es
movsb
pop
and
roll
xor
cwtl
cld
or
push
dec
iret
mov
pushf
lcall
mov
xor
cs
or
leave
imul
popf
out
jl
test
sbb
and
inc
mov
jns
pop
fidivl
mov
dec
cmpsl
mov
fisubrl
lock
xor
sub
fcoml
cld
pushf
popa
call
sub
add
fs
mov
push
pop
cmp
mov
and
out
xor
pop
xor
mov
enter
shll
push
ret
loop
add
push
scas
pop
sbb
or
xchg
or
push
add
ljmp
mov
in
jns
dec
outsb
jmp
jge
les
in
shrl
dec
aas
fwait
pop
mov
fwait
add
std
ficompl
int
and
out
mov
mov
inc
addl
rorb
sbb
push
das
in
enter
lcall
add
loope
popa
inc
sub
sqrtps
mov
mov
cld
jb
aaa
imul
adc
push
imull
aas
icebp
andb
mov
inc
das
mov
cmp
sbb
jae
jb
pop
rcrl
sub
data16
je
xchg
jl
pop
popf
shl
andl
scas
scas
mov
pop
fs
pop
xor
lock
push
iret
arpl
xlat
int3
dec
sub
push
add
mov
sbb
addr16
mov
inc
aaa
mov
inc
fdivrl
dec
jo
sahf
xor
lcall
adc
add
ret
popa
xchg
jns
aas
enter
mov
mov
aas
or
sbb
inc
jecxz
std
xor
mov
in
mov
mov
mov
in
adc
aad
roll
inc
mov
scas
jbe
mov
or
dec
jne
sbb
cld
shr
push
cmp
test
push
xchg
test
jo
jmp
dec
repnz
inc
add
or
and
loop
jl
jmp
movb
mov
xchg
sub
in
lcall
jns
or
pop
loope
and
mov
scas
idiv
cwtl
sbb
xchg
aaa
push
or
sbb
push
scas
mov
or
pop
jne
cmp
adc
push
mov
je
adc
sbb
cmp
lds
bound
mov
lds
sti
icebp
mov
ss
and
lods
mov
or
lret
aam
push
push
sbb
add
lds
ja
push
push
jae
push
shrl
jp
push
and
jecxz
add
cli
daa
sub
mov
and
sbb
nop
sub
imul
sub
cmc
es
sub
and
xchg
loopne
bound
mov
cmp
jecxz
xor
scas
cmp
sub
movsb
xor
cltd
shll
mov
adc
into
jge
imul
mov
jg
push
pop
pop
xchg
fcmovnu
dec
fildll
or
lcall
jmp
mov
enter
adc
pop
mov
frstor
jo
neg
mov
xchg
pop
icebp
mov
jl
rorb
sti
mov
enter
fiaddl
dec
lods
push
mov
loop
or
rcll
sysexit
insl
enter
jb
inc
lods
cld
and
push
filds
cs
popf
fs
sbb
cmpsb
cld
ss
push
out
inc
inc
jmp
orl
mov
mov
lahf
xor
mov
add
push
int
adc
mov
cmp
jo
or
sub
push
sbb
cwtl
test
lods
cmp
leave
dec
iret
xchg
jns
jge
sub
sbb
jnp
mov
jno
in
addl
cli
and
out
sbb
call
cli
push
cmp
loopne
mov
xchg
mov
pop
xor
push
sbbl
jb
adc
addr16
mov
mov
add
jne
fcoml
xor
mov
sub
xor
sub
fs
mov
mov
xor
adc
nop
pop
popa
cli
outsl
insl
mov
sar
jmp
xchg
pop
jbe
jb
out
and
jl
mov
xchg
xchg
mov
inc
dec
add
xchg
mov
ror
xchg
clc
push
xchg
sbb
std
sub
loope
outsl
rcl
and
scas
mov
fistl
out
popa
mov
das
mov
inc
xchg
lahf
lds
cltd
adc
pop
push
nop
xor
lahf
mov
insl
jnp
cmpsl
mov
or
negb
fnstenv
pop
adc
loopne
cwtl
xchg
dec
nop
ficompl
nop
imul
push
jmp
cmp
out
sbb
or
aas
inc
dec
xor
inc
cmp
jl
mov
sub
loope
jp
sbb
movsb
push
adc
xor
xchg
jle
mov
shll
cmp
mov
ja
xchg
addr16
xchg
repz
or
sub
in
sub
nop
repz
lea
push
loopne
aas
cmpsb
inc
jb
std
jno
ja
outsl
dec
sbb
test
setg
xchg
pop
aad
icebp
jo
int3
or
das
test
lods
mov
mov
dec
sbb
pop
cltd
and
mov
fisttpll
adc
jge
shlb
pop
call
shll
clc
mov
stos
test
leave
sbb
cld
inc
and
pop
movsl
cmpsl
cmpsl
aad
and
stos
sti
mov
imull
movsb
or
mov
pop
faddl
subb
xchg
es
mov
ret
iret
and
or
sub
fcmovb
and
add
daa
mov
or
xchg
cmc
fcoml
sub
mov
shll
inc
mov
popf
enter
lret
jo
lret
xchg
popa
fistps
repnz
adc
mov
movsl
dec
aad
mov
jne
popf
inc
push
repnz
rcr
loop
outsl
dec
push
aad
sub
adc
and
mov
sbbl
lret
ret
push
popa
loope
repz
fstpt
mov
and
pop
lock
js
in
inc
pop
add
adc
ljmp
mov
fsubs
inc
std
jg
clc
das
nop
es
sub
push
stc
push
cmp
add
jecxz
dec
rol
dec
add
iret
inc
sub
add
sarl
xor
mov
into
dec
leave
inc
xchg
addl
push
sti
ffree
push
jmp
mov
lret
sub
pop
cmp
pop
mov
push
loope
das
enter
adc
aaa
jns
sbb
cmp
jo
ja
mov
or
xchg
prefetcht1
mov
enter
cmp
cld
jmp
stc
inc
mov
pop
jns
mov
je
andl
jge
mov
ret
hlt
clc
xchg
js
cmp
into
outsl
mov
mov
lods
jno
popa
sbb
addr16
lods
or
cmp
inc
insl
inc
imul
cwtl
mov
xchg
sub
sbb
mov
addr16
xor
ret
pop
and
jecxz
ret
stos
fs
fld
mov
sarb
rclb
push
sarb
pop
mov
add
jb
mov
out
push
mov
sbb
test
mov
mov
xor
cld
cli
js
jl
in
or
arpl
lods
jle
jl
cld
outsb
insl
pop
adc
mov
xorl
cmpsl
dec
and
jae
cmpb
or
mov
test
nop
loope
imul
add
xor
jl
sarb
repz
fildll
add
sub
mov
mov
xchg
adc
lea
dec
fs
nop
sahf
mov
pop
mov
jnp
pop
pop
mov
subb
movsl
adc
mov
imul
push
jmp
addr16
inc
ret
rcll
insb
icebp
stc
pop
pop
inc
jecxz
je
movsl
sub
push
adc
inc
adc
lahf
jnp
pop
and
push
out
ret
or
sbb
push
and
popf
sahf
subb
lods
arpl
dec
and
push
sahf
pop
jge
mov
jmp
xchg
mov
cmc
mov
addr16
icebp
shrb
add
sbb
insb
xchg
push
roll
cmpsl
and
push
dec
push
stos
subb
movsb
sub
lds
das
lods
or
fs
inc
and
pusha
pop
xor
dec
fisttpl
add
sub
adc
dec
and
mov
jae
push
repz
imul
in
adc
sbb
xor
adc
xlat
jb
into
pop
movsb
cmp
dec
out
mov
lea
andb
sbb
jg
cmp
add
jne
mov
cmp
or
lods
das
mov
jecxz
adc
pop
lcall
fnsave
and
fwait
add
cwtl
adc
jnp
insl
mov
lods
mov
mov
lods
out
inc
daa
adc
xchg
adc
lcall
adc
add
int
faddl
jbe
ror
imul
mov
add
push
stos
xchg
pop
cmp
pop
cmpsb
daa
sub
jne
sbb
mov
jmp
mov
rorb
enter
fdivl
xor
mov
cmp
adc
inc
les
ja
jne
sub
fdivl
clc
mov
xor
cmpsb
fcmovnb
into
rol
lods
cld
ret
lea
and
arpl
imul
test
inc
ss
fcmovu
dec
cmp
gs
pop
movl
or
ja
rol
xchg
add
sub
xchg
loope
xchg
mov
jo
pop
sbb
in
xchg
mov
mov
stos
mov
sub
mov
mov
pop
inc
cs
xchg
ss
mov
add
xchg
pop
mov
pop
adc
and
out
mov
xor
fistl
push
xor
add
inc
dec
out
enter
mov
es
cmp
mov
xor
jbe
add
aad
aam
sub
mov
pop
mov
fldpi
and
imul
sub
or
dec
sarl
scas
mov
push
and
add
cmpb
bound
sbbb
push
es
ret
out
sub
enter
addl
fbld
pop
lret
pop
lods
jl
imul
mov
jg
pop
adc
cmp
pop
sbb
push
sbb
push
push
movups
sti
imul
or
xchg
or
lds
jnp
sbb
lods
pop
test
bound
shr
les
mov
jo
inc
pop
out
loop
adc
movsl
addr16
popf
xor
fldt
jnp
dec
mov
lret
mov
adc
sarl
jmp
and
mov
mov
and
sti
lea
mov
adc
sbb
jecxz
les
jne
cld
movb
mov
insl
fsubp
aas
les
dec
loop
jp
lods
cmp
pop
and
arpl
xchg
call
ss
pop
iret
mov
push
inc
cmp
jp
dec
scas
sahf
jp
mov
add
pop
into
mov
sbb
pushf
pusha
repz
fwait
leave
or
stos
pop
push
jge
and
outsl
inc
popf
push
cmpsl
push
push
sarl
sub
movsb
js
or
mov
test
pause
imul
cmp
push
add
pop
pop
pop
mov
or
out
fildll
mov
lods
or
pushf
jns
test
sub
cmp
add
mov
pop
push
xchg
icebp
andl
xchg
fwait
addr16
test
iret
cld
dec
aas
jle
and
and
xor
imul
les
clc
push
div
pop
lods
popa
adc
scas
cwtl
sub
add
mov
cmpsb
movsb
shlb
xchg
jmp
out
into
pop
add
loopne
lret
test
fs
fcoml
push
xor
in
dec
jo
inc
stos
nop
mov
ss
fwait
pop
sahf
orl
mov
les
and
xchg
add
leave
or
gs
sub
push
andb
call
es
bound
or
int3
lea
push
xor
stos
fsubrs
or
in
and
xor
mov
push
add
jno
ljmp
in
and
out
ljmp
add
lahf
dec
in
int3
jne
mov
push
inc
jmp
dec
sub
out
shrb
sub
add
sub
mov
or
mov
mov
lods
aam
or
add
mov
mov
mov
push
mov
ret
dec
std
xor
mov
bound
pop
jb
sahf
xor
mov
xor
nop
xor
mov
add
mov
loop
out
xor
cmpsl
icebp
xchg
sub
leave
imul
jnp
movsb
jbe
lcall
and
sarl
sub
pop
rcr
andl
cld
xor
mov
in
cli
xchg
loope
inc
test
test
ss
or
xchg
cwtl
push
movsb
pushf
push
inc
fstps
sbbb
cwtl
icebp
stos
add
sti
xchg
hlt
inc
push
loop
repz
outsb
shrb
push
dec
loope
loop
push
and
iret
sub
inc
inc
add
push
xor
cmp
adc
xchg
inc
add
dec
lock
mov
lcall
xchg
mov
mov
mov
out
icebp
and
repnz
jmp
inc
je
push
ret
and
add
rorl
xor
sub
fcmovbe
adcb
xchg
adc
xchg
dec
add
out
pop
sub
notb
mov
or
pusha
fdivr
mov
ret
sbb
and
stos
cli
inc
inc
ja
push
inc
rcl
imul
dec
ret
cmp
pop
test
xchg
jns
xor
pop
add
jns
fimuls
aam
lock
loop
insl
cmpsb
test
pusha
sbb
or
pusha
icebp
out
movsl
in
pushf
inc
ss
icebp
dec
mov
fwait
and
cmp
jmp
or
cmpsb
mov
shll
and
sbb
push
pop
jl
imul
mov
lahf
ljmp
movsl
mov
inc
les
leave
stc
scas
or
bound
mov
in
jns
enter
mov
pushf
data16
inc
nop
dec
pop
add
sahf
sub
xchg
jge
das
sub
sbb
add
sub
jg
mov
lods
loopne
cwtl
sbb
xchg
and
negb
cmp
stos
pop
cmpsb
cmp
jp
cwtl
sbb
gs
cmp
sbb
mov
adc
mov
jecxz
andl
scas
inc
pusha
sti
mov
push
inc
sbb
cmp
sti
cmp
mov
or
jmp
dec
sbb
pop
xchg
jno
cmc
jmp
push
sub
fdivrl
xchg
pop
imulb
int3
rcll
mov
cltd
push
mov
mov
and
outsl
andl
imul
dec
jnp
test
adc
sbb
pop
xor
ds
arpl
mov
jl
xor
pop
es
xlat
loopne
xchg
hlt
and
add
add
and
outsb
sub
sbb
shr
aas
aam
pop
addr16
out
jecxz
cmovp
sub
jne
enter
inc
les
cmp
pop
ds
mov
stos
fbld
add
cmp
inc
cmpsl
add
es
add
mov
mov
and
add
pop
stos
insl
or
mov
in
inc
lods
aam
fdivp
xchg
sbb
mov
push
aas
pop
mov
dec
pop
repz
dec
test
fdiv
xor
mov
fadds
pop
sarb
inc
movsb
pop
lcall
sti
es
xlat
in
dec
adc
les
rcrb
and
popa
sub
pop
fwait
cmc
jecxz
aaa
call
mov
sbb
test
cs
push
add
loope
pop
stos
dec
jbe
stc
shll
pop
inc
out
sbb
repnz
loope
scas
mov
mov
pushl
loopne
inc
lahf
jg
sbb
jnp
mov
push
cmp
push
inc
in
sub
mov
push
mov
int3
outsl
xchg
loop
nop
adc
test
mov
sbb
and
pop
mov
or
add
daa
adc
popa
xchg
pushf
inc
push
add
in
shll
int3
dec
out
int
je
aas
adc
xchg
dec
sar
lahf
iret
mov
leave
dec
imul
bound
out
and
test
mov
test
adc
jge
dec
mov
clc
or
or
pop
jns
mov
pop
pop
jnp
lock
mov
dec
into
je
add
cld
imul
mov
push
mov
loopne
lret
mov
mov
in
sbb
jae
shlb
sbb
xor
or
fldenv
ret
idivl
cmp
into
pusha
lret
nop
cmpsb
add
mov
loop
in
fimuls
into
aad
inc
in
in
jp
and
push
cld
lds
repnz
fisubrl
or
mov
cld
xor
insb
out
sar
prefetch
mov
inc
jbe
mov
jno
aaa
sub
mov
lcall
rcrb
mov
jnp
inc
xchg
sub
outsb
repz
adc
push
push
add
sbb
mov
lea
mov
inc
xchg
lods
fstps
xor
test
lock
lock
into
dec
cmp
lds
stc
or
addl
mov
pop
out
and
mov
sub
pop
jge
imul
aam
add
cmp
les
mov
ret
int
sti
xchg
fisubrs
and
sbb
jl
dec
jge
pop
pop
pop
out
popf
std
pop
xor
push
cli
or
and
push
sub
fwait
mov
icebp
imul
add
cli
xor
out
jbe
scas
jge
inc
sahf
mov
mov
cld
mov
pop
into
sbb
mov
jmp
repz
imul
pop
dec
imul
pop
fmul
push
jecxz
jns
jp
and
roll
stc
lcall
ss
scas
out
sbb
jl
xchg
scas
cwtl
xchg
sbb
rclb
sbb
in
inc
dec
shlb
or
sub
adc
push
ja
pop
or
fiaddl
push
fdivs
call
out
mov
orl
xor
push
std
dec
add
enter
pop
int
mov
repnz
scas
jmp
jecxz
arpl
mov
pushf
sub
or
xor
add
xor
cltd
into
jge
mov
cltd
push
mov
adc
cmpsl
into
leave
push
mull
in
cs
das
icebp
inc
das
mov
in
lds
hlt
sbb
shll
mov
dec
cmp
cli
stc
add
xorl
sti
ret
cwtl
dec
insl
add
imull
aam
inc
pop
add
sub
fnsave
sub
sbb
adcb
clc
push
pop
jbe
xor
mov
ljmp
les
hlt
cmp
imul
mov
push
nop
mov
mov
fcmovnbe
subl
sub
mov
fwait
inc
pusha
ret
je
add
cmp
das
cmp
ret
cld
mov
or
inc
out
fdivl
lahf
sbb
mov
test
mov
jbe
aad
inc
adc
mov
xchg
pop
sub
in
imul
test
pop
cmp
cmp
fiaddl
in
fdivr
mov
mov
mov
mov
pop
dec
mov
dec
sub
cmpsb
ds
test
pop
adc
cmp
rcrb
inc
cmp
sti
inc
ss
out
mov
ja
jns
jmp
and
inc
mov
test
adc
xor
adc
lahf
mov
int3
jb
in
ja
adc
test
cld
call
push
push
jp
push
inc
icebp
cli
negb
inc
adc
adc
mov
repz
add
dec
aad
pop
adc
loope
stc
dec
es
push
sti
mov
xor
xor
mov
test
mov
xor
and
push
imul
jmp
std
rcll
pop
mov
mov
adc
or
inc
push
add
aad
xor
fsubs
push
add
sbb
sub
xor
pusha
push
les
pushf
add
pop
in
mov
inc
inc
xor
cli
aas
add
lret
and
popf
test
add
push
lahf
add
inc
cmp
jecxz
mov
repz
sub
inc
repnz
inc
push
test
cmp
and
mov
leave
pop
add
arpl
mov
ret
mov
stos
inc
jb
aaa
jp
mov
mov
ja
adc
push
pop
dec
cmp
dec
mov
mov
push
ret
jmp
xchg
cld
mov
pop
fimull
pop
out
js
push
lods
out
push
add
ljmp
lret
gs
xor
mov
push
dec
push
xchg
gs
cmc
pusha
dec
mov
add
jmp
pop
test
push
mov
or
in
fcompl
sarb
cs
pop
sub
jnp
dec
incb
mov
pusha
sti
jge
sbb
out
fsts
aaa
cmp
rcr
pop
mov
sbb
pop
mov
sub
dec
xchg
pusha
dec
cmpsl
fildll
sub
mov
or
dec
jecxz
or
mov
fisttps
xchg
popa
or
and
les
daa
jne
inc
mov
shlb
mov
fldenv
fsubs
outsb
pop
popa
outsb
pop
repnz
loopne
inc
out
arpl
and
fisttpl
in
int3
add
jb
pop
inc
outsl
add
sbb
mov
scas
leave
int
adc
pop
out
pop
leave
pop
cmp
insl
jl
pop
inc
call
dec
mov
mov
xchg
sub
inc
dec
mov
ljmp
pop
popa
dec
cmp
mov
sbb
nop
ret
sti
cmp
ret
dec
icebp
outsb
shrl
push
cwtl
fs
xor
jo
and
push
add
xchg
xchg
frstpm(287
call
mov
int
sahf
fimull
add
sbb
cmp
xchg
adc
lcall
ja
xor
jne
fisttps
imul
cmp
jno
fbstp
das
sbb
xlat
push
lods
xchg
mov
mov
lods
hlt
mov
xchg
mov
adc
mov
loop
adc
fld
cmp
loope
dec
test
add
clc
inc
pop
nop
push
int
shrb
dec
lcall
cli
xchg
and
cmc
aas
fsqrt
loopne
push
stc
cmp
add
fisubs
aas
jle
adc
iret
jnp
and
fmuls
mov
cwtl
imul
mov
inc
jno
cmc
and
xlat
int3
leave
pop
mov
movsl
aas
sbb
pop
imul
mov
adc
add
or
jecxz
or
outsb
jg
jo
pop
pop
mov
mov
mov
scas
xchg
mov
add
lahf
xor
cmp
mov
flds
pop
or
lcall
xchg
mov
xchg
mul
daa
movsl
in
mov
mov
jne
cmp
rclb
sti
lds
mov
fwait
data16
and
stos
clc
add
xchg
pop
inc
xor
sti
shrb
and
lahf
in
mov
add
stc
pop
add
cmp
mov
sbb
out
sbb
jb
mov
imul
add
add
or
cmc
cmc
sbb
bound
xor
xchg
jae
rclb
push
ds
push
add
xchg
cmp
pop
sbb
cmp
jle
loop
pusha
dec
mov
sub
in
dec
call
push
les
add
pop
sbb
xlat
jge
jnp
icebp
push
sub
gs
sub
and
sbb
sub
cmp
mov
outsl
pop
add
push
jg
loop
lahf
dec
xor
jecxz
ret
sbb
stos
lcall
mov
push
xorl
pop
pop
aad
cwtl
xchg
cmp
lods
fbld
xor
xchg
imul
dec
mov
push
flds
stos
mov
ret
cltd
jo
js
and
mov
and
add
push
add
inc
push
das
cmp
fbstp
jo
enter
mov
push
das
or
sbb
inc
dec
sub
imull
and
mov
out
push
fdivl
jne
js
cmp
arpl
cmp
sub
popf
mov
lods
mov
sub
cmp
xchg
stos
sbb
pop
aad
imul
push
repnz
out
aas
out
ss
jns
dec
aad
clc
daa
pop
mov
xor
and
or
inc
pop
cmpsl
jp
lea
shlb
cld
inc
shrb
lahf
test
mov
jnp
mov
sbb
scas
aas
sbb
call
xor
push
mov
add
cmpsl
push
cmpsb
lcall
add
cmp
test
dec
in
and
xlat
add
lods
mov
xchg
vcvtdq2ps
lds
jnp
movsb
fnstenv
inc
ja
imul
in
sub
xlat
mov
leave
xchg
add
insb
sbb
xchg
xor
test
ljmp
lret
fisttpl
sarl
mov
cld
cmpsl
sarl
hlt
mov
incl
mov
mov
ds
pop
cld
adc
popf
lret
orb
push
sub
mov
call
pop
xor
or
add
mov
ret
jmp
jmp
mov
lods
dec
ss
inc
jl
mov
stos
inc
sub
shlb
jnp
xchg
add
fwait
sbb
cmpsl
adc
add
fidivs
pushf
mov
in
jns
inc
xor
sti
adc
repz
add
inc
jnp
push
inc
int3
mov
dec
add
lds
icebp
and
push
inc
mov
dec
mov
call
test
push
pop
cmc
mov
mov
or
jg
and
cmc
mov
sub
outsb
inc
jp
add
clc
and
fs
insb
pop
xor
insl
add
and
aaa
insb
pop
enter
dec
adc
dec
in
jae
add
shlb
push
jge
cli
mov
out
scas
push
jno
push
popa
ret
jo
mov
jnp
cmp
jle
mov
and
ret
mov
popf
sti
jnp
ret
cmp
scas
mov
jl
sti
or
dec
leave
sarl
mov
and
out
divb
sub
adc
adc
pop
stos
rcr
aas
mov
mov
pop
loop
inc
mov
mov
push
mov
cmp
loop
jle
or
add
shlb
insl
outsb
push
fiaddl
dec
mov
or
push
jno
into
jnp
jp
test
lods
lret
ss
iret
call
sub
sub
sub
and
jg
insl
xchg
adc
or
imul
cmc
sti
jnp
lds
lods
bound
inc
push
test
scas
testb
nop
sarl
ljmp
mov
push
push
shl
mov
sbb
inc
jbe
test
jns
xchg
pop
pop
jno
add
test
sbb
jnp
push
pop
jmp
pop
cmp
adc
dec
stc
int3
cmp
iret
iret
clc
cld
inc
in
add
idivl
leave
enter
inc
push
push
pop
mov
lock
and
mov
and
lds
incb
insl
or
pop
xchg
adcb
roll
mov
mov
loopne
cltd
enter
jl
jp
cmp
fwait
rcrl
addr16
popa
and
mov
pop
popa
or
cmp
xlat
sub
imulb
pusha
sbb
pop
mov
cmp
in
dec
push
notl
inc
xor
stos
xchg
dec
int
pop
lahf
dec
inc
jb
in
cmp
das
int3
push
cwtl
mov
mov
inc
mov
pop
aaa
iret
pop
pop
test
add
iret
aas
loopne
or
xor
mov
xor
or
xlat
xor
xchg
mov
xor
test
inc
fisubl
addr16
pop
popf
mov
jmp
push
mov
es
sbb
and
adc
sar
mov
inc
inc
cld
sbb
xor
cmc
and
mov
cmpsb
dec
push
mov
dec
mov
dec
fidivrl
mov
daa
cmp
jle
and
jno
mov
pop
sbb
loope
fnstenv
and
xor
and
shl
xchg
sub
icebp
cmp
push
push
bound
xor
lret
in
mov
popf
add
or
popf
jb
jo
cmp
iret
xor
mov
mov
fwait
mov
ljmp
in
lds
add
jg
dec
mov
add
imul
lcall
push
xchg
int
push
xor
inc
push
dec
jg
jmp
rcl
push
loope
nop
fadds
inc
mov
aas
push
and
mov
mov
lret
arpl
mov
ret
cltd
in
dec
dec
out
cmp
cmp
and
mov
push
cs
mov
inc
inc
mov
mov
sarb
mov
jno
push
or
jo
or
inc
push
mov
pcmpgtd
cwtl
or
in
cmc
xlat
jmp
cmpsb
mov
push
popa
mov
outsl
insl
push
icebp
cmp
xor
ljmp
movsb
sahf
lret
adc
mov
shlb
and
ss
jp
scas
rcrl
aas
mov
pushf
les
jle
jmp
mov
adc
in
inc
es
shr
and
lret
push
and
push
sub
adc
and
inc
rcll
mov
cmpsb
jmp
sub
dec
movd
aam
les
roll
in
pop
mov
mov
adc
scas
in
add
and
out
lcall
lret
mov
fsubrl
lahf
adc
xchg
lahf
cld
pop
out
push
pop
mov
push
xor
lods
pop
sub
and
les
jmp
lock
inc
fsubrs
sti
mov
jb
cmp
mov
inc
xchg
pop
faddl
enter
sub
cmp
inc
push
add
fs
shll
test
inc
adc
push
jnp
cmp
stos
dec
sub
sbb
test
sbb
inc
and
and
dec
int
xchg
push
and
sbb
lret
mov
in
dec
push
push
mov
in
scas
sbb
pop
jl
dec
cwtl
and
cltd
dec
xchg
xchg
dec
jmp
outsl
push
fcmovnb
pusha
rorb
jecxz
sbb
inc
dec
mov
test
fldcw
push
loop
and
pop
mov
xor
inc
stos
xor
dec
jb
fildll
pop
and
shlb
sbb
pop
les
and
pop
mov
fwait
xlat
bound
xor
jno
xor
xor
xchg
mov
aad
pop
dec
das
mov
mov
in
pop
test
dec
fstps
xchg
lret
call
lret
adc
xlat
lret
push
pop
leave
das
mov
outsl
cmp
mov
rcpps
in
push
dec
call
imul
in
cs
out
or
ljmp
insl
mov
or
or
mov
mov
cmpsl
sbb
jle
lret
shl
inc
pop
mov
inc
and
fs
cmp
dec
stos
sub
pushf
jle
movsb
mov
push
rcll
fldenv
pusha
ret
push
lret
xchg
push
xor
cli
xchg
mov
sbb
scas
arpl
fs
add
mov
fs
push
mov
xchg
addb
xchg
adcb
sub
sbb
push
sub
jo
pushf
mov
imul
and
popa
sub
cld
fsubl
aad
fistps
push
icebp
pushf
pusha
xor
or
mov
pop
jg
add
fwait
mov
in
cs
jns
cmc
xchg
rcrl
mov
cmp
sbb
pusha
fsubl
sbbb
inc
ret
stos
and
pop
mov
ror
in
mov
and
and
cmp
orl
inc
inc
pop
push
sub
sbb
ja
ljmp
nop
or
sbb
lretw
cmp
mov
ds
iret
std
mov
aad
aaa
mov
shlb
mov
mov
and
xchg
xlat
add
iret
add
xor
sub
lcall
mov
ret
push
push
rolb
xchg
xor
and
jae
mov
arpl
pop
or
xor
imul
test
das
int3
jg
repnz
xchg
jae
dec
hlt
sti
xor
cltd
aas
mov
inc
push
lret
mov
shr
add
add
xor
pop
popf
ss
push
js
sahf
test
ret
cmp
scas
pop
fsubs
dec
add
fcompl
inc
sub
jle
scas
bound
mov
fs
mov
mov
pop
imul
xor
insl
insb
lock
sti
mov
sarb
jo
cs
repz
cmp
imul
dec
adc
test
jle
mov
mov
in
push
sti
fisttpll
and
push
es
push
or
test
jle
xor
xor
or
imul
push
pop
and
jge
lret
ds
inc
lret
xchg
popa
or
repz
xor
fldl
push
popf
gs
sub
push
cmp
inc
pop
shrb
pop
pop
out
sub
cmp
fistps
or
sbb
divl
cwtl
daa
mov
sbb
push
popf
fwait
das
push
cmp
addr16
ja
fucom
mov
aaa
push
clc
pop
aas
test
popa
shrb
pop
mov
das
scas
test
xlat
xchg
xchg
insb
push
push
xor
pop
add
inc
insb
push
les
ljmp
int
test
imul
xor
stos
cmp
xchg
sbb
mov
mov
inc
push
sub
mov
xchg
pop
xlat
pop
xor
daa
pop
lods
sahf
enter
mov
pop
mov
aas
pop
mov
iret
aam
adc
jne
sub
enter
aad
rorb
movsb
adc
inc
fbstp
pop
leave
and
inc
fisubs
and
pop
push
ljmp
fwait
mov
cli
and
mov
xor
xchg
ja
out
repnz
fcos
xlat
cwtl
pop
push
fs
jp
fnstsw
add
cmp
inc
push
mov
loopne
inc
roll
xor
outsl
fs
jp
pop
rolb
std
aas
nop
or
add
imul
dec
jle
or
dec
xor
sbb
push
sub
push
or
pusha
dec
add
pop
pop
pop
lret
or
loop
mov
out
pop
pop
or
and
mov
shrb
pushf
out
nop
mov
inc
inc
jp
inc
jle
mov
inc
int
xor
jecxz
lret
or
pushf
clc
mov
pop
inc
in
in
xchg
rorl
jno
in
xchg
pop
fstpl
lods
fdivrl
xor
pop
mov
lahf
insb
jb
sub
xor
pop
inc
icebp
sbb
cmp
out
pop
pop
lods
add
cld
dec
or
repz
inc
xchg
add
dec
nop
into
mov
xor
and
into
jle
jecxz
and
sub
jns
pop
insb
andps
ja
imul
jns
adc
dec
jno
pop
leave
pop
roll
lods
pop
jle
lret
leave
int
lods
fistps
xchg
inc
jl
and
test
std
pop
xor
pextrw
in
mov
cmp
shrl
loop
notl
adc
xchg
movsl
mov
js
or
nop
nop
mov
dec
dec
imul
push
xor
subb
cmpsl
in
push
test
xchg
stos
cltd
stc
xor
inc
cmc
mov
mov
inc
sti
xchg
insl
inc
pop
lods
push
push
fs
pusha
test
inc
lea
mov
sub
fucomp
pop
and
lea
inc
xlat
into
iret
mov
aam
ss
orb
pop
jmp
cltd
mov
bound
out
sarl
and
mov
mov
dec
adc
sbb
jle
sub
xchg
push
push
push
or
mov
fdivr
aaa
add
dec
xor
dec
dec
and
pop
sbb
lcall
and
jo
adc
pop
mov
inc
pop
xchg
jle
addr16
int
dec
push
mov
inc
jnp
aad
pop
dec
mov
movsb
push
xchg
inc
push
adc
xchg
and
das
jl
popa
movsl
mov
fstpl
add
shl
xor
and
inc
pop
popa
jae
in
and
int
mov
out
hlt
insl
mov
enter
jp
insl
mov
fcoms
pop
jecxz
mov
in
mov
test
fsubp
mov
cmp
push
mov
enter
dec
xchg
mov
addb
fnstenv
jle
mov
fs
scas
or
lahf
jp
dec
inc
pop
pop
aad
in
enter
push
mov
stos
fbstp
sub
lret
cmp
xchg
or
cmpsb
sbb
mov
push
ss
mov
cmp
and
adc
inc
aad
cmp
hlt
fdivl
inc
mov
out
jae
mov
fstps
cmp
fimull
out
repnz
or
orl
or
les
pusha
cld
shlb
jge
adc
bound
mov
mov
cmpsl
jns
sahf
pop
imul
aas
outsl
add
mov
js
jg
fdivl
xchg
jae
xchg
scas
stos
inc
popf
test
popl
enter
ret
lahf
adc
lods
adc
inc
adc
sahf
cmp
sbb
mov
dec
mov
popa
and
mov
dec
enter
inc
nop
or
roll
pop
das
pop
cwtl
in
dec
insb
rolb
test
jb
xor
aam
pop
sahf
xchg
mov
outsb
xchg
pop
cmc
xchg
cmpsl
xchg
sarb
fcoml
nop
fimull
lock
jecxz
ljmp
cltd
or
subl
lods
adc
stos
cli
jg
xchg
rcrl
and
sbb
xor
in
or
add
movsl
adc
rcrb
jae
xchg
daa
add
pop
movsb
in
jle
inc
sbb
adc
pop
fwait
ljmp
mov
sub
leave
adc
inc
jnp
or
lods
les
push
test
cmp
int
nop
xchg
inc
lret
or
fld
stos
mov
stos
roll
popf
or
pushf
and
pop
mov
leave
or
test
add
pop
sarl
push
cmp
cwtl
cmpsl
xchg
test
inc
daa
enter
mov
into
insb
jo
lret
dec
sbb
lret
cli
xor
mov
add
jle
or
pushf
cmp
push
mov
or
arpl
cmc
xor
mov
dec
addr16
movsb
or
inc
fldcw
adc
fs
cmp
inc
repnz
and
adc
inc
mov
add
dec
mov
mov
repz
addb
aad
int
pop
call
jge
imul
test
cmpsl
pop
fldl
jp
mov
add
add
jmp
clc
or
or
into
xchg
mov
cld
sbb
imul
sub
push
imul
sub
adc
inc
mov
push
cmp
lcall
push
mov
and
dec
stc
cltd
xor
call
push
int
int
rcr
loop
adc
cmc
jnp
xlat
loope
jecxz
or
in
push
and
ljmp
inc
bound
stos
ljmp
pop
mov
push
sbb
dec
scas
or
jge
nop
lea
sbb
mov
mov
and
negl
mov
das
fldt
sbb
pop
or
lcall
jmp
xlat
dec
fistpll
flds
loope
leave
outsb
cmp
jp
jle
hlt
js
adc
adc
fnstenv
ds
mov
pop
or
xchg
xor
add
mov
fildl
push
lret
mov
push
add
test
fsubr
dec
adc
fstl
inc
dec
fcmovnbe
popa
sbb
test
mov
jb
and
aas
arpl
mov
scas
es
ljmp
sub
sbb
add
ds
call
test
sub
mov
fiadds
test
mov
lret
fistl
mov
sub
test
mov
lods
cmpsl
lret
int
jae
add
out
js
lret
mov
std
xchg
push
outsl
push
sti
ja
movsl
ja
fdivs
adc
xor
jb
jne
ljmp
push
push
stos
cwtl
ljmp
jg
mov
sbb
lahf
sti
sub
pusha
into
mov
outsb
dec
push
repnz
sub
lcall
sbb
shrl
jl
jnp
fsub
inc
fimuls
mov
push
jae
out
jge
dec
int3
cld
add
mov
sbb
in
mov
inc
or
pop
sub
sti
mov
in
outsb
ds
test
loopne
push
pop
or
lods
push
ljmp
lcall
and
mov
xor
adc
aas
and
pop
adc
pop
add
fisubl
push
imul
std
lods
mov
scas
pushf
inc
divb
mov
fdiv
out
jnp
loop
insb
ret
fmuls
lahf
stc
enter
ret
xor
jle
xor
cld
test
and
mov
sbb
ss
sub
cmpsl
pop
sub
stos
pop
aam
rcl
adc
arpl
or
leave
dec
je
pop
popa
xchg
push
nop
aam
test
pop
je
fsubs
test
movsb
test
dec
sub
imul
shrl
push
jae
int3
push
test
pop
push
aad
cwtl
leave
xchg
cmp
cmovnp
ss
mov
mov
adc
call
popa
jp
pop
mov
inc
pop
repnz
xchg
adc
scas
jne,pn
jge
loop
shll
or
xor
rol
xchg
rorl
int3
loopne
mov
adc
mov
mov
insl
and
adcb
pusha
pushf
sar
jg
push
inc
rcll
pop
jg
andl
jnp
js
daa
out
stos
sub
loopne
mov
aaa
jae
fs
lret
cmpsb
cli
insl
popf
or
push
inc
and
in
adc
sub
shrl
mov
lret
xchg
mov
test
sti
rorb
or
aam
sahf
dec
lock
mov
filds
mov
mov
jp
xor
jne
scas
jbe
jg
sub
test
inc
jnp
ret
sti
mov
pop
dec
je
pop
xchg
xchg
xchg
xchg
xorl
cs
push
mov
xor
inc
jb
mov
pusha
data16
fnstcw
add
ja
mov
pop
ljmp
je
push
mov
adc
cmp
stos
dec
xor
call
icebp
jns
fsubrp
sbb
inc
data16
test
mov
dec
xor
and
inc
jle
pop
xchg
mov
mov
nop
daa
loopne
xor
sub
add
lods
test
lret
inc
cmp
sub
sub
sub
mov
lret
add
mov
rcl
lahf
bound
pushf
dec
dec
adc
out
in
pop
stos
jmp
nop
jno
push
outsl
insb
or
mov
sbb
xor
lahf
mov
call
jno
pop
push
adc
pop
pop
pop
pop
test
nop
and
mov
outsl
hlt
or
dec
ljmp
inc
cmp
and
xor
add
pop
icebp
arpl
jb
sub
jl
mov
inc
cmc
das
sub
and
inc
mov
pop
and
pop
cwtl
sbbb
add
xor
rorl
fldcw
sbb
cmpsb
aad
cld
push
mov
cmc
dec
daa
not
sub
addr16
pushf
scas
lods
fsubr
roll
add
or
cmp
xor
out
imul
jno
rcl
gs
push
pop
push
jp
pop
lret
pop
sbbl
jmp
popa
inc
jge
jle
ds
fidivl
out
and
dec
adc
xchg
mov
jno
mov
cmp
or
push
xor
int3
fcmovnbe
pop
and
out
mov
or
mov
leave
inc
jg
shll
dec
push
adc
mov
ficoms
sahf
clc
mov
jle
adc
jp
fcmove
mov
xor
loop
mov
mov
lret
subl
inc
push
xor
inc
dec
ret
dec
insl
sbb
push
cmp
inc
mov
mov
or
bound
sbb
movsl
or
mov
loope
push
mov
pop
incl
jb,pt
xchg
out
pop
lods
or
push
sub
pop
cmpps
adc
cmpsb
ja
or
push
mov
in
scas
sti
adc
rolb
jo
dec
push
in
mov
int3
inc
sbbb
or
mov
mov
sbb
std
cmc
shrb
pop
xchg
cmp
imul
or
ja
mov
jl
xor
iret
rclb
int3
xchg
cmpsl
jnp
fsubl
mov
inc
push
dec
sbb
int3
aad
push
stos
add
popa
je
mov
scas
mov
pop
dec
cmp
aas
lods
mov
sbb
mov
nop
adc
mov
xchg
adc
jmp
repz
xor
mov
dec
xor
pop
ja
loopne
lret
adc
push
add
mov
xlat
dec
imul
dec
pop
fidivrl
sbb
popl
xor
popa
sub
aaa
std
ret
pop
outsb
ret
outsl
movsb
xorl
dec
mov
ljmp
shlb
sete
jg
cwtl
adc
ret
leave
add
mov
inc
push
or
sbb
je
adc
sbb
loopne
xchg
mov
sahf
shl
jg
shrb
inc
sbb
push
and
inc
sbb
icebp
sbb
sti
ret
dec
mov
sub
mov
aam
mov
in
jbe
or
inc
loope
push
or
insb
int
lahf
mov
mov
pop
jecxz
dec
or
mov
pushf
jl
add
cmpsl
lods
cmp
or
je
push
or
inc
xchg
clc
insb
sub
pop
mov
push
mov
jg
xchg
mov
popf
sbbl
pop
or
pop
aaa
mov
clc
cld
and
pop
sbb
insb
or
test
dec
jp
cmp
and
lds
iret
inc
sar
xor
aad
jno
sub
jb
test
arpl
dec
xchg
pusha
or
push
repz
in
fisubs
aas
mov
scas
add
and
push
out
inc
sub
ficomps
mov
sbbb
xchg
jae
sti
xchg
push
pushl
add
pop
mov
shll
xor
cltd
add
daa
cmp
mov
outsb
fbstp
add
cli
out
je
cmc
xchg
cli
mov
sub
clc
ja
jp
jno
movsl
xor
mov
jg
popf
int3
xor
fsubrl
inc
jb
inc
stc
xor
les
xchg
or
push
push
mov
push
or
sub
xor
xor
mov
shl
xor
xchg
popa
sti
subl
jno
push
decl
mov
dec
cld
aas
stos
push
jo
xchg
xchg
movsb
clc
xchg
mov
mov
scas
add
repnz
push
xchg
daa
or
pushf
sbb
sahf
pushf
mov
dec
loope
cld
adc
xor
clc
and
jae
test
mov
out
xor
mov
pop
loop
pushf
addr16
mov
xor
xor
stc
ss
push
mov
push
adcl
adc
pushf
ljmp
push
ds
cltd
pushf
callw
jp
cmp
pop
loop
dec
cmp
cmp
mov
sbb
jnp
mov
adc
addr16
adc
daa
and
sub
sub
push
dec
mov
sub
and
je
pop
push
mov
push
xchg
or
xor
or
push
push
push
std
push
xor
dec
testb
movsl
lret
out
inc
pop
mov
pop
incb
push
sbb
lods
dec
sbb
or
or
sub
pop
imul
jbe
rolb
test
loope
fdivp
mov
call
xor
out
pusha
push
fldt
in
push
das
insl
je
outsl
xchg
iret
lcall
push
or
sbb
push
imul
sbb
mov
dec
xchg
mov
sub
jmp
insl
xor
cmp
sub
mov
loop
dec
add
je
das
loop
imul
in
loop
les
into
mov
fs
or
arpl
jo
sahf
pop
mov
or
mov
das
mov
pop
rorb
sbb
inc
mov
xchg
repz
ret
or
cmp
enter
data16
sbb
push
fwait
jecxz
repz
sarl
and
adc
pusha
and
mov
mov
arpl
pop
into
dec
popf
in
int
stos
fwait
cmp
jmp
inc
out
enter
and
inc
jmp
into
mov
inc
pop
xlat
sbb
jge
out
mov
into
adc
jb
jns
mov
lcall
and
cmp
data16
orl
jnp
jb
ret
call
xchg
xchg
inc
es
ficompl
imul
mov
bound
call
mov
mov
lret
xchg
adc
dec
jae
inc
mov
js
and
xchg
or
gs
push
pop
jge
add
jns
test
incb
repnz
jae
call
test
xchg
pop
orb
mov
popl
sti
es
mov
sbb
imul
int
xchg
bound
lret
ljmp
arpl
xchg
adc
push
lret
dec
add
in
mov
cltd
rclb
imul
cmp
inc
iret
jle
adc
mov
bound
stc
push
stos
sar
push
xor
inc
mov
jne
cmpl
into
daa
imul
lcall
in
ds
add
sub
mov
fldenv
fs
jae
jbe
ss
cli
outsb
shrl
jl
outsb
clc
lret
cmp
in
add
pop
jno
mov
mov
ror
pop
cwtl
ret
nop
lret
inc
cmpb
rorl
divl
push
and
fnstsw
cmpsb
xchg
cmpb
insl
insb
inc
and
mov
dec
loope
repz
pop
inc
sti
xchg
out
les
popa
imul
sub
push
push
fs
xchg
mov
add
and
gs
das
enter
xchg
mov
mov
add
sub
mov
aam
les
movsb
push
rcll
xchg
and
dec
adc
add
lds
jnp
in
xchg
inc
inc
lahf
popa
popf
xchg
jge
lahf
cmpl
jnp
nop
dec
xchg
ret
pusha
das
mov
shrb
loope
jns
pusha
or
pop
ds
nop
clc
xchg
and
xchg
ud0
mov
xchg
push
inc
and
mov
mov
out
pop
inc
add
xchg
shlb
testl
add
mov
sbb
mov
sbb
push
jmp
inc
mov
pop
insl
add
aad
or
fstpt
iret
sub
sub
or
jae
mov
pop
mov
lret
push
inc
push
inc
jecxz
sahf
mov
fsubrl
test
cmp
pop
cmp
loopne
cmp
mov
pushf
mov
lret
loope
in
jnp
jne
dec
out
mov
cwtl
sahf
andl
mov
xchg
and
sbb
pop
stos
jo
lods
sbb
gs
aaa
mov
add
sub
shrb
fisttps
xchg
jmp
mov
push
mov
cld
fnstsw
sbb
stos
mov
pop
movsb
fs
jp
sub
sahf
and
insb
jl
dec
mov
cmp
lret
sbb
mov
inc
divps
lds
adc
insl
add
cmpsb
pop
fdiv
lock
inc
push
stos
int3
orb
or
jl
or
pop
sbb
adc
loope
sbb
jno
cmp
subl
mov
and
and
jae
cmp
stos
xor
sub
cmp
insl
scas
popf
out
ljmp
pop
cwtl
int3
cmc
push
fstpt
and
xchg
lock
sti
bswap
movsl
fldt
sub
pop
mov
out
mov
rolb
pop
lds
add
lcall
cli
mov
fiadds
or
test
je
mov
push
pushf
outsb
and
fldl
xchg
and
cmc
enter
ficompl
jmp
out
xor
scas
fldenv
aam
ljmp
ljmp
lods
leave
inc
aam
fldcw
mov
sbb
and
cli
imul
push
out
adc
inc
subb
xor
mov
pop
syscall
or
adc
rcr
ljmp
std
jge
inc
aad
and
iret
int
jmp
cmp
pop
sbb
mov
ja
popf
mov
addb
sub
sub
loopne
stos
xchg
mov
test
lock
sarl
lret
sub
push
mov
cmp
enter
ljmp
lods
inc
mov
sub
and
dec
xchg
in
jecxz
and
cs
and
dec
add
cli
pop
push
out
imul
les
sub
or
aas
mov
das
inc
xor
xor
call
xchg
mov
rcr
lods
pop
push
es
cwtl
or
cmpsb
add
add
or
in
pop
sbb
ret
mov
fiadds
adcb
cmp
adc
mov
xor
xchg
ds
stos
mov
and
inc
fisttpl
pop
loop
cli
push
xchg
mov
pop
cmp
or
xchg
flds
ret
ret
mov
inc
push
mov
sbbl
dec
mov
push
inc
sbb
mov
dec
loop
cltd
scas
push
stos
or
lret
movsl
lods
xchg
jae
lds
push
xchg
mov
sarb
clc
loop
add
mov
mov
pop
into
scas
inc
aad
dec
jns
sahf
push
std
xlat
pop
sub
popf
xlat
pusha
push
and
lahf
pusha
popf
dec
in
pop
fs
jbe
or
xor
rorl
mov
ret
inc
xchg
cmp
mov
je
jns
pop
push
sti
sbb
arpl
shll
leave
and
jne
mov
push
and
inc
cmc
jmp
imul
ret
dec
dec
or
cld
imull
inc
into
outsb
ds
or
jmp
mov
add
push
out
xor
sub
push
adc
int
dec
cmpsl
test
jmp
pop
xor
mov
iret
roll
lret
inc
cmp
in
ret
inc
sbb
sbbl
inc
addb
adc
pop
subb
mov
test
fcomp
push
daa
insl
es
mov
jmp
clc
sti
addr16
pop
jnp
jecxz
adc
stos
mov
cs
ret
out
stos
mov
jle
add
jmp
test
movsl
mov
adc
xchg
jg
jns
sbb
mov
xchg
js
lret
mov
jbe
sbb
rcl
jo
outsb
and
xchg
movsl
pop
das
or
mov
lcall
in
inc
test
xor
fwait
or
pop
nop
mov
insl
jg
ljmp
stos
jp
jge
rcr
mov
popf
and
jmp
jno
mov
not
push
push
mov
pusha
lret
popf
int3
jnp
jp
jecxz
or
dec
add
inc
push
test
sbb
les
fnstsw
sahf
mov
lods
xor
sbb
adc
xchg
addr16
jne
sbb
mov
jb
bound
jecxz
dec
add
in
lahf
adc
jmp
and
xchg
mov
dec
inc
inc
mov
pop
lea
cmp
ret
xchg
push
inc
mov
jmp
sahf
or
adc
xor
rcrb
jecxz
mov
das
mov
push
xor
mov
and
add
xor
adc
jns
shl
pop
mov
xor
cmp
cmp
add
and
fildll
movb
xchg
jb
dec
mov
aas
xchg
pop
xchg
push
in
xchg
mov
movsl
and
pop
lea
mov
inc
sbb
stc
xchg
push
jnp
scas
int3
jo
or
pop
jl
int
mov
jl
xorl
sbb
xor
in
faddl
les
fcoms
dec
add
mov
insl
imul
ret
adc
ja
pop
bound
or
xlat
ds
mov
test
das
bound
push
lahf
add
pop
cwtl
xor
xchg
sbb
push
pop
adc
xor
das
mov
push
int
shrl
out
inc
xor
xchg
xor
push
jnp
xchg
jle
popa
rcr
fildl
es
dec
xchg
jle
loop
xor
in
adc
fsubrl
adc
and
pop
negb
dec
ret
in
push
mov
inc
lahf
mov
push
jg
mov
ds
adc
out
xchg
fidivs
add
lds
out
jnp
lock
lcall
mov
xor
dec
add
popl
xchg
addr16
sub
jl
mov
cmpb
lea
call
gs
add
xchg
mov
push
dec
mov
add
push
add
adcl
fstpt
das
jno
fstps
inc
les
aad
or
and
mov
mov
xor
ret
and
cmpsb
mov
mov
mov
pop
mov
jae
pop
push
jle
add
mov
sub
ret
mov
cmp
push
push
push
movsb
push
cmpsb
xor
jl
fistl
sub
push
int3
xor
imul
in
cmp
cmc
jns
stos
ja
decl
fstl
xor
xor
and
ficompl
jae
loopne
mov
pop
add
and
mov
fiadds
push
mov
jno
call
hlt
pop
lahf
push
add
cmp
std
jle
lret
jecxz
mov
adc
popf
out
inc
mov
mov
sbb
pop
push
sbb
cmp
gs
adc
xchg
jnp
cmpsb
push
jns
add
insl
or
enter
push
in
add
xchg
mov
mov
pop
cmp
in
lcall
jno
pop
adcl
sub
xor
jmp
mov
lea
pop
dec
dec
jl
inc
les
pop
scas
jp
pop
add
mov
call
or
sti
inc
test
or
es
adc
sbb
cmp
or
mov
dec
sbb
sub
xchg
jnp
inc
shl
lods
ret
subl
lods
sbb
and
dec
mov
out
and
xchg
test
cs
in
aam
cmp
inc
lret
mov
mov
test
and
push
or
jbe
cmp
popa
or
inc
incl
xchg
jp
jno
repnz
xchg
insb
bnd
mov
adc
lds
push
jmp
mov
cmp
dec
add
add
loope
mov
dec
or
movsl
push
mov
pop
mov
jnp
lds
je
xor
mull
les
gs
rclb
and
lea
dec
pop
fnstsw
xchg
insb
pop
lret
mov
mov
fst
push
mov
scas
notl
inc
dec
arpl
lahf
adc
enter
ljmp
je
add
fsubs
call
iret
cmp
lahf
out
lret
sub
mov
cmp
cmc
adc
mov
mov
mov
pop
hlt
sbb
inc
test
ds
cmp
aam
pop
out
or
pop
cmc
pop
mov
jnp
jmp
xchg
ds
mov
adc
cltd
test
pop
out
test
and
push
mov
es
arpl
and
sbb
pop
mov
iret
jns
gs
lss
adc
cmp
movsb
xchg
mov
ret
mov
popf
xor
sar
push
push
or
int3
in
mov
mov
mov
cmp
lcall
mov
mov
lods
mov
fidivl
pop
out
fwait
gs
jnp
pop
lods
insb
scas
mov
scas
inc
push
mov
test
push
or
xchg
fstps
insb
out
out
pop
inc
hlt
sbb
ret
ret
ret
cmp
subl
mov
bound
shl
cltd
in
aas
xor
sbb
cltd
shrl
push
xor
in
test
mov
ffree
xchg
lret
jno
xor
dec
pusha
lods
andb
idivl
test
dec
and
mov
xchg
push
jp
ds
fwait
mov
xchg
sbb
loope
daa
inc
sahf
inc
aad
cmp
lcall
sub
push
addb
mov
sub
pushf
cwtl
mov
push
pop
scas
aad
lret
cmp
fdivrl
inc
cmp
out
cmp
ffree
xor
add
jle
mov
mov
shl
push
add
scas
sub
mov
jnp
shrb
daa
imul
std
jae
cmp
sarl
push
xchg
dec
stos
cld
push
mov
xchg
lret
mov
imul
popa
test
shlb
nop
std
aaa
movsl
mov
cmp
inc
push
aad
mov
vunpcklps
stos
push
sub
pop
fadd
push
xor
lds
test
jp
mov
cmp
jne
add
mov
movsl
push
movsb
bound
popf
mov
sub
bound
enter
int
sahf
mov
or
shrb
and
inc
cltd
test
popf
cmp
in
sahf
into
ja
mov
out
insb
enter
mov
and
lret
dec
mov
gs
loopne
out
enter
leave
icebp
pop
dec
xchg
cmp
pop
lret
pop
pusha
inc
ds
testl
int
pop
outsb
sub
daa
cmp
and
sbb
push
xor
pop
sub
je
mov
cmp
imul
xchg
dec
sub
int
inc
jl
dec
xchg
pop
lret
stos
fidivrl
rcl
shlb
lods
add
lods
and
das
xchg
pop
push
or
cmp
cmp
mov
arpl
mov
inc
bound
sub
dec
daa
sub
incl
cmpsb
inc
imulb
stc
lds
sbb
sub
xchg
or
iret
xor
sbb
adc
sbb
dec
push
jmp
arpl
cli
inc
call
pop
lcall
jnp
fadds
imul
push
das
sbb
lgdtl
mov
jle
xor
insb
shrb
xchg
cli
iret
mov
out
and
jb
cmp
out
and
lahf
movsb
adc
adc
andps
add
in
loop
jae
ds
xchg
fsubs
sbb
sub
pop
cs
xchg
fistpl
adc
sbb
pop
and
mov
lret
ds
push
inc
mov
div
fadds
dec
xchg
adc
ljmp
push
and
lock
dec
mov
sti
ss
xor
cmc
clc
fsts
cs
mov
xchg
dec
add
iret
clc
mov
push
pop
push
xor
pop
jecxz
cmp
test
jecxz
jp
aad
and
mov
inc
hlt
sti
pop
icebp
shlb
cld
pop
sbb
cmpsb
repz
pop
inc
loope
fsubrp
fldt
popa
mov
push
or
or
push
clc
ss
cmp
mov
push
adc
or
cld
cmp
cmp
leave
decl
das
loope
fcoms
add
loope
lret
mov
push
ljmp
je
jg
movsb
js
push
orb
movsb
mov
outsl
mov
std
shrb
xchg
dec
add
rolb
add
cmp
jmp
pop
pop
and
mov
mov
sbbb
mov
adc
cmp
outsb
mov
in
pop
cmp
shl
push
pop
pushf
cmpsl
sub
jne
mov
sub
aad
cld
ds
jp
les
or
movsb
cmp
sub
int
xor
add
jl
into
js
lret
jecxz
loop
or
int
hlt
pop
pop
into
add
fimull
pop
adc
push
popa
and
mov
lahf
pop
test
pusha
aas
ss
mov
cli
cmp
jbe
pusha
mov
mov
mov
adc
in
jne
test
sahf
je
fldcw
lds
pop
or
pop
dec
xchg
push
aas
add
xor
push
lods
rolb
push
loopne
lock
sbb
xchg
scas
sub
add
xor
je
mov
xchg
pop
gs
insl
dec
cmp
cltd
add
enter
jns
pop
xlat
mov
adc
inc
sti
outsb
out
fstps
pop
pop
ret
mov
dec
dec
jl
popa
mov
shrl
mov
cwtl
sub
shll
jnp
dec
sbb
dec
cmp
fwait
and
dec
mov
fstps
dec
cmp
repnz
cmc
shll
inc
ja
dec
std
sub
imul
sbb
dec
fdivrs
xchg
mov
fnstsw
nop
mov
loopne
pop
cmp
xor
dec
lds
cmp
jecxz
and
xchg
lea
pushf
insb
leave
arpl
inc
rcll
outsb
inc
rclb
lds
shll
arpl
pop
lret
adc
call
dec
sub
je
enter
add
rcrl
cli
pushf
idivl
mov
jle
xchg
stos
and
mov
sahf
dec
inc
pop
sbb
fsub
xor
add
lret
cmpsb
int3
popa
push
push
sub
push
sti
pop
lods
jle
arpl
rcrb
xchg
adc
sub
popa
pop
and
cmp
push
mov
sbb
pop
push
cmp
std
dec
les
inc
std
xchg
or
dec
push
fwait
je
hlt
arpl
mov
cmp
cmpsl
daa
cmpsl
fsubr
xchg
push
hlt
ret
or
cmpl
ret
call
inc
lahf
pop
xchg
inc
push
and
int
xor
insl
rclb
movd
cmpsl
sub
mov
add
xchg
inc
es
imul
in
sub
loop
pop
ret
inc
fsubr
adc
jge
enter
loop
fisubs
in
fwait
scas
mov
imulb
xchg
sub
jb
xchg
jle
pop
pusha
lods
jb
push
pop
sti
mov
pushf
or
adc
imul
jp
adc
arpl
aad
adc
mov
cmp
cmp
jno
push
add
in
pop
fistpl
add
adc
cltd
inc
cmp
in
out
bound
jnp
popf
outsl
pop
stos
or
ja
dec
xchg
cld
popa
dec
cmp
mov
dec
cwtl
add
or
pop
sahf
pop
ja
arpl
mov
rcrl
xchg
mov
movsl
scas
sbb
fdivrs
mov
into
sbb
xchg
adcb
filds
mov
sbb
imul
fs
out
sahf
add
sbb
push
mov
outsl
out
call
iret
adcl
lahf
jmp
cwtl
imul
test
and
dec
insb
cli
dec
test
fstps
dec
adc
outsl
ss
aad
ret
and
sbb
fcoms
subl
xchg
xchg
inc
pop
cmp
and
push
mov
add
jle
mov
sbb
testb
cmp
sbb
xor
push
mov
xor
mov
dec
pop
orb
mov
cmp
mov
sbb
aas
inc
lea
or
inc
pop
xor
inc
dec
stos
ror
orb
or
push
cmp
pop
shl
mov
push
repz
jmp
in
shr
test
lret
mov
sub
mov
mov
sbb
push
mov
fsub
mov
sti
dec
adc
xchg
test
inc
cmp
lods
aam
pop
and
ja
mov
pusha
andb
gs
dec
std
xor
cmp
or
ficoms
cltd
out
add
mov
dec
and
pop
mov
mov
pop
inc
mov
push
dec
mov
jg
push
ljmp
sbb
cwtl
notl
jns
adc
and
shll
or
sbb
ds
sub
das
stc
cli
and
sbb
add
les
dec
test
imul
cmpsl
int3
mov
xor
adc
and
jp
mov
test
in
add
stos
adcl
test
jg
lods
repnz
mov
sbb
sbbl
sub
cmp
inc
sbb
hlt
stc
pop
pop
je
cmpsb
xchg
inc
mov
sub
and
lcall
and
enter
shll
jl
add
cltd
sub
mov
in
sbbb
imul
jne
sub
sti
roll
test
adc
test
mov
ljmp
pushl
outsl
outsl
ficompl
scas
mov
lods
pusha
push
sbb
shrl
aad
add
mov
sub
add
and
push
test
jb
jecxz
adc
test
dec
jmp
mov
pop
jmp
and
inc
and
rorb
jge
outsl
jns
lock
mov
or
cmp
scas
int
and
push
mov
cmp
test
dec
dec
cmp
xor
xor
dec
xor
lods
insl
mov
jmp
adc
aas
or
add
lcall
imul
cmp
rcll
inc
cld
lret
xchg
and
dec
mov
test
out
fs
hlt
sbbb
stc
xchg
xchg
jae
and
mov
loopne
pop
les
negl
xor
and
fst
pop
or
dec
inc
xchg
xchg
enter
shll
sahf
outsb
xchg
inc
pop
int3
and
nop
mov
loopne
popa
imul
jp
hlt
push
scas
movups
ret
push
lret
setg
and
stos
cmc
inc
and
mov
enter
mov
outsb
add
pop
scas
or
and
shr
cli
push
sti
pop
push
fwait
add
nop
mov
lods
aam
lret
jp
rcll
aas
test
loop
leave
mov
aas
mov
ret
les
jl
xor
xor
pusha
jg
out
shlb
dec
shrl
sti
mov
pop
test
or
stc
jb
xchg
cmp
adc
aas
mov
mov
fldcw
insb
jae
fs
lahf
jns
popf
sbb
dec
or
ret
or
jg
cli
add
add
and
aam
pop
lea
pop
sub
mov
xchg
dec
jecxz
adc
bound
jge
enter
sti
push
mov
test
push
sahf
std
xchg
cmp
push
cmp
push
aas
cmp
nop
shll
lods
and
out
pop
or
jge
mov
or
and
aad
rclb
jl
jg
cld
mov
loop
rol
sub
jge
mov
cli
jmp
or
or
inc
jmp
test
mull
add
cltd
fcmovb
les
push
pusha
push
loope
lds
aaa
adc
push
mov
in
xor
mov
lret
inc
pushf
ljmp
or
lcall
ret
mov
dec
mov
or
pop
fwait
sub
test
sub
aas
in
popa
fidivs
rcll
fs
outsl
xor
xchg
fisubrs
leave
sub
xor
sub
lcall
adc
imul
fidivl
inc
fs
mov
jecxz
lods
xchg
imul
shr
adc
outsl
out
aas
jo
fnstsw
mov
or
push
inc
adc
icebp
inc
add
mov
cld
ds
mov
leave
jno
sub
shll
adc
adcb
adc
inc
jo
add
movsl
lea
scas
sub
mov
enter
push
dec
cltd
pop
fisubl
pop
or
or
xchg
mov
xor
cmp
adc
jne
les
adc
pop
int3
loopne
mov
or
mov
push
mov
arpl
rolb
sbb
mov
mov
repnz
cli
push
xchg
sar
push
cwtl
sar
push
cwtl
in
mov
shll
aas
and
scas
mov
jmp
lds
mov
cmp
mov
xchg
fwait
mov
push
int
aam
out
in
xchg
lods
inc
dec
icebp
testb
mov
inc
mov
and
sahf
xorb
xor
int3
jo
lea
int3
test
test
enter
mov
leave
cmpb
xor
in
pop
pop
inc
and
jl
push
sbb
into
lods
inc
out
xor
adc
cmp
sbb
mov
inc
shr
popf
jmp
addps
test
loop
jmp
pop
rol
mov
in
mov
mov
sbb
xchg
sub
push
inc
fsubp
push
mov
mov
sahf
sub
xor
mov
adc
jmp
inc
cmp
push
dec
sbb
push
cmp
enter
and
pop
and
xchg
js
fmuls
sbb
mov
scas
shlb
jge
pop
or
mov
repz
arpl
popf
je
pop
xchg
test
dec
pop
lds
dec
cwtl
mov
lret
mov
scas
and
outsl
repnz
lock
mov
inc
push
aaa
iret
mov
or
and
loopne
lea
test
xchg
scas
dec
shrl
inc
push
jns
inc
ljmp
ja
int3
mov
and
inc
push
and
ret
nop
fcomp
aas
movsb
clc
loopne
sub
shlb
xor
shlb
repnz
inc
movsb
sbbl
and
inc
ds
mov
push
adc
mov
push
dec
sbb
and
sti
pop
outsl
aas
adc
or
outsl
jecxz
fcmovb
jnp
xor
mov
rcl
mov
and
mov
push
cmp
rol
test
nop
mov
ret
popf
or
adc
arpl
lock
lds
push
frstor
mov
loope
outsb
nop
sub
or
sub
cmp
mov
mov
stc
inc
jp
adc
cmp
loopne
mov
mov
dec
cmp
out
and
sar
mov
push
xchg
nop
sub
icebp
dec
decl
ret
in
or
pop
or
aam
xor
popa
arpl
mov
xchg
xlat
and
ficompl
ret
clc
cld
or
adc
lock
mov
cld
pop
xchg
mov
xchg
add
aam
sti
mov
cld
mull
dec
xchg
sarb
adc
lcall
enter
test
xchg
pop
lods
ljmp
add
pop
movsb
jecxz
mov
jecxz
bound
les
push
pop
cmp
ret
cmp
into
movsl
and
hlt
mov
mov
and
cmpsl
call
dec
mov
inc
mov
mov
mov
ret
mov
sbb
lahf
imul
arpl
daa
xchg
dec
mov
cmp
mov
and
xchg
sbb
das
push
push
das
fists
cmpsl
pop
mov
sbb
xchg
jecxz
inc
mov
imul
mov
mov
jge
stos
subb
xchg
insl
out
aas
jnp
sub
or
cli
loopne
lods
out
cmp
mov
fimuls
xchg
mov
loope
mov
mov
outsb
test
sub
inc
push
and
and
aad
lock
sbb
or
push
mov
jno
into
push
movsl
add
dec
fdivr
xor
cltd
cmp
std
stc
das
leave
shll
test
popf
sub
pop
lods
in
xchg
inc
imul
push
push
dec
aad
mov
add
sahf
and
mov
fstl
xchg
shrb
and
leave
loope
push
mov
inc
push
arpl
xlat
outsb
mov
test
ss
mov
pop
xchg
push
inc
adc
xchg
cld
xchg
andb
add
lds
dec
inc
outsb
rclb
xor
adc
rclb
jo
movsl
push
add
or
pusha
cwtl
dec
sbb
xchg
xchg
popa
cmp
adc
mov
inc
sbb
shl
sbbb
pop
mov
xor
push
popl
iret
pop
int3
mov
sub
daa
jge
scas
mov
inc
mov
mov
into
cmp
popf
and
jo
jo
inc
and
std
inc
lret
inc
mov
lock
les
mov
mov
mov
bound
sbb
in
adc
enter
sub
sbb
mov
adcl
cs
push
mov
xor
inc
cltd
cmpsl
nop
outsb
cmpsl
push
xchg
ret
int3
pushw
fcmovne
ds
lret
shlb
repnz
mov
lods
leave
adc
inc
mov
shrb
int3
push
mov
xor
hlt
sbb
es
push
jo
leave
adc
inc
lcall
aaa
sbb
movsb
arpl
movsl
add
fbld
cs
mov
cli
cmp
movsb
cmp
inc
movb
cmp
adc
adc
and
xor
out
arpl
leave
inc
sub
imul
shlb
cmp
sahf
nop
mov
mov
gs
outsb
mov
cmp
cli
push
das
mov
add
data16
aad
out
push
andps
scas
xchg
sub
xchg
jl
sti
lods
outsb
push
imul
push
jns
sbb
jl
fistps
and
jmp
cmpsb
or
or
insl
test
mov
insb
sub
mov
pusha
jnp
cmpsb
in
scas
fdivl
or
pop
mov
bound
fists
adc
push
and
jo
lret
outsb
std
ret
fildl
shlb
push
lret
outsb
lret
or
sub
dec
inc
fisubrs
inc
pop
mov
shrl
adc
push
fwait
sbb
popa
sahf
sbb
movsb
jl
or
adc
stos
xchg
loope
bound
adc
mov
in
jecxz
out
adc
shrl
inc
popl
inc
mov
repnz
lahf
inc
lods
inc
sub
jmp
scas
push
lds
dec
ret
int3
sahf
test
arpl
push
stos
das
lods
icebp
push
jbe
xchg
dec
ret
shlb
aas
sbb
inc
test
shll
or
pop
incb
cmpsl
and
rcrl
jns
cmc
ja
movsl
inc
pop
sub
insb
or
fdivl
pop
movsl
sub
cmpsb
cld
cmp
fwait
adc
shlb
sub
sub
jns
dec
and
mov
loopne
and
sti
insl
adc
lret
xchg
sub
leave
in
xlat
mov
cld
adc
ret
mov
dec
scas
inc
push
jns
cmp
stos
cmp
outsl
fidivs
dec
sahf
push
aas
stos
ljmp
lods
adc
out
pop
mov
mov
cmpsl
mov
xchg
fisttpl
inc
test
out
xor
mov
data16
xchg
cmp
pop
out
aas
cmp
in
out
popa
or
loop
inc
inc
cmp
xor
shr
leave
xchg
enter
adc
mov
dec
stos
pop
push
shrb
inc
or
jge
lea
nop
js
xchg
adc
jno
dec
jae
inc
jbe
inc
andl
cli
jl
orb
jb
mov
cltd
inc
movsb
idivb
lret
jecxz
jns
incb
mov
mov
into
lret
cmp
ret
mov
and
sub
xchg
cmp
shl
add
cltd
repnz
cmp
int
popf
xchg
or
lret
dec
push
mov
lret
out
ds
and
cmp
or
dec
xor
inc
pop
push
or
popa
mov
fsubrs
jge
ficoml
insb
lods
arpl
jae
xchg
scas
sti
jecxz
dec
xor
sub
xor
loope
add
and
and
movsl
xor
cmp
cmp
outsb
lea
push
and
movl
call
icebp
jae
lret
out
shrl
sub
js
inc
cs
dec
dec
xchg
or
div
loop
cmc
fscale
ljmp
xor
or
mov
rolb
inc
lcall
adc
aad
cmp
fnstcw
dec
sbb
jnp
xor
movsb
jp
cmp
mov
mov
arpl
jo
int
sub
enter
and
mov
and
mov
pop
aad
fstpt
mov
insb
aas
lret
outsb
stos
sti
cmp
stos
andb
lahf
repz
fidivl
cmovs
fstpl
shrb
push
and
insb
ss
pop
and
sub
int3
icebp
mov
js
fnstsw
cmp
mov
rcll
sbb
outsl
jg
mov
mov
sbb
je
lds
repz
out
and
jle
adc
repz
mov
mov
mov
sbb
testb
stos
leave
stc
lea
xor
fs
dec
inc
shl
and
and
cmp
and
mov
clc
or
add
test
xchg
inc
loop
fs
push
push
adc
jo
pop
mov
jecxz
andl
cmp
add
cmc
jl
xor
adc
inc
pushf
out
lds
add
stos
pop
enter
imul
sar
push
adc
dec
clc
and
push
arpl
ja
daa
add
pop
inc
sahf
xorl
sarb
add
cli
cli
data16
and
cmp
call
push
loop
cmpl
lock
mov
sbb
or
shrl
mov
leave
sub
push
aas
push
test
popa
gs
in
add
dec
jmp
xchg
in
inc
movsl
lods
mov
xor
cmc
shrb
xchg
push
punpcklbw
daa
or
mov
push
mov
mov
shrl
decb
sub
fsubr
gs
rol
cs
or
inc
movsb
jp
divl
dec
pusha
cmp
aam
inc
lret
jmp
mov
je
dec
sarl
ljmp
rorl
mov
movsb
inc
test
jp
dec
stc
pusha
fldcw
cltd
dec
push
add
mov
test
push
inc
add
fidivrs
add
jecxz
dec
loop
push
inc
imul
xor
push
mov
stos
in
in
and
jge
ret
xor
mov
sbb
shrl
cmp
and
jge
mov
mov
shl
adc
cltd
push
inc
mov
xorl
pop
mov
mov
inc
or
xchg
jns
inc
add
mov
jmp
cli
xchg
ret
shrl
pop
arpl
sbb
icebp
xchg
std
sub
les
mov
inc
xor
fbld
pop
sbb
loope
icebp
sbb
adc
pusha
mov
mov
jno
scas
mov
pop
cmp
jl
lret
or
int3
mov
mov
jl
mov
adc
rcll
sub
mov
iret
jb
or
xchg
cmpsl
cmp
and
sbb
lea
pop
ret
orl
sub
sub
shl
push
mov
addr16
mov
xchg
arpl
out
lods
mov
push
lahf
pop
xor
adcb
dec
mov
ret
movsb
fildll
inc
fucomip
mov
xchg
add
std
mov
lock
add
leave
mov
mov
aam
rorb
adc
aaa
in
mov
pop
push
jnp
andb
in
jge
popf
xchg
mov
inc
test
and
cwtl
mov
push
ret
xchg
mov
dec
test
lahf
flds
lret
inc
and
lret
cmp
jae
sub
jl
fistpl
jnp,pt
sub
mov
lods
notl
sub
loop
push
mov
cmp
pushf
in
pop
cld
fwait
mov
push
dec
dec
jle
and
cmp
stos
mov
sub
and
ret
mov
icebp
mov
stos
jp
push
std
adc
popf
fs
les
arpl
sub
aas
mov
ret
dec
jne
mov
mov
test
mov
ret
out
mov
popf
pop
cmp
push
pop
xor
mov
mov
mov
dec
lahf
lcall
cmp
xchg
leave
mov
sbb
push
xchg
jbe
xchg
cmpl
sahf
sub
pop
inc
and
test
out
rol
xchg
mov
jl
enter
inc
cli
and
jnp
call
je
pop
mov
test
pop
roll
jl
or
jne
ds
mov
ljmp
not
imul
daa
push
pushf
inc
adc
xchg
cmpsl
mov
sub
daa
in
cmp
shl
xor
mov
mov
push
mov
cmp
cmp
in
test
sub
aam
jb
sbb
or
inc
popa
inc
out
lahf
sub
cmp
xor
pop
fidivrl
sbb
test
sti
and
pop
inc
add
js
jns
jl
stos
cmp
scas
mov
out
dec
add
aad
push
or
dec
add
mov
jge
or
dec
imul
xor
lods
push
push
and
push
aad
sub
xchg
rclb
mov
ds
sbb
and
pop
bound
xchg
dec
mov
mov
lock
sbb
sbb
loop
dec
js
stos
cmp
sub
xchg
xchg
mov
mov
push
mov
ret
jmp
mov
jmp
push
xlat
and
mov
or
std
insl
inc
imul
aas
lret
jnp
or
loope
cmc
lock
fldenv
push
dec
std
data16
cmp
loop
les
addl
inc
outsb
jne
lret
pop
clc
pushf
inc
xorb
sbb
adc
movsb
test
cltd
jg
add
pusha
out
jg
insb
aas
enter
in
std
pushf
lcall
add
scas
mov
lods
ret
aam
or
into
xchg
cli
cmp
outsb
mov
push
movsl
xchg
fcoml
data16
mov
jg
sbb
iret
sub
repz
enter
cmp
jns
fisttpl
xor
dec
fcmovnu
pop
inc
out
stos
pushf
decb
push
loope
fistpll
inc
xor
add
mov
outsl
fsubs
cmp
mov
mov
push
xor
addb
push
sahf
out
fsubs
cmp
jo
ret
mov
push
xor
cs
cmp
pop
repnz
cmp
ds
mov
enter
mov
push
mov
mov
arpl
xor
mov
pop
rcrb
aam
dec
sub
in
ja
or
jecxz
ficompl
mov
shr
cmc
xor
mov
adc
loope
outsl
nop
sbb
lahf
hlt
mov
add
dec
add
jecxz
cmp
jge
std
loope
test
fs
sbb
and
lods
repz
loope
and
test
dec
movsb
rsqrtps
mov
xchg
loope
inc
pushf
sbb
push
cwtl
dec
mov
mov
push
jnp
lret
xlat
push
jne
jmp
aad
leave
jle
adc
stos
add
cld
fldl
mov
inc
popf
push
inc
in
mov
fisttps
je
inc
lods
call
inc
dec
sub
das
mov
test
test
cmp
jle
and
mov
mov
cmpsb
test
pop
adc
dec
xlat
or
and
cmpl
add
push
fs
or
leave
inc
jno
int3
pop
int
fisubrs
in
xchg
jb
decb
xor
sbb
leave
mov
repz
pop
lcall
movsl
cmpsb
out
ss
roll
fists
sbb
mov
in
xchg
scas
adc
movsl
out
pop
imul
xor
push
ret
xchg
xor
mov
test
push
jg
xor
sarl
push
xchg
scas
seto
mov
push
loopne
fsubp
push
movsb
lret
jp
dec
add
inc
push
xchg
loop
cs
mov
pushf
mov
aaa
sahf
fildl
add
inc
push
ret
xor
jo
mov
dec
jge
inc
push
cli
adc
loope
lahf
movsb
lods
inc
lret
addr16
push
cmp
std
add
pop
xor
lea
xor
push
ficoms
or
ds
mov
mov
test
sub
sub
test
ds
enter
jbe
mov
outsb
lret
or
ret
test
cmpsb
jp
mov
gs
sub
adc
aam
stos
pushf
rcrb
mov
mov
dec
iret
lock
fsubrs
and
xchg
add
and
mov
sub
and
pop
lods
dec
and
mov
pop
or
jnp
jecxz
pop
das
iret
sub
cmp
stc
mov
and
jle
ja
mov
repz
mov
pop
dec
xchg
inc
inc
lret
push
sub
or
cmpsb
insl
cwtl
jns
sti
mov
sbb
xor
cmp
push
add
pop
mov
xchg
int3
mov
xor
repnz
and
stos
mov
inc
pusha
shll
popa
mov
loopne
xchg
pusha
out
clc
cli
fdivrs
mov
push
rol
xchg
imul
lods
lret
rcl
dec
xchg
mov
scas
loop
scas
mov
jmp
fmull
js
xchg
or
fwait
add
mov
bound
mov
lret
cltd
push
leave
sub
ds
rclb
pop
sti
add
adc
lret
sbb
les
cmpsl
into
push
mov
aaa
or
adc
and
xorl
dec
mov
mov
mov
call
dec
add
dec
sbb
cmpsl
dec
sub
fstpl
pop
xchg
dec
aas
addr16
icebp
stos
pop
js
loopne
mov
mov
mov
push
mov
imul
adc
jns
mov
ljmp
xlat
add
in
xor
jb
aaa
cwtl
into
sbb
enter
and
jnp
xchg
leave
cwtl
pop
fmul
sbb
add
pop
mov
cmc
cmpsl
sarb
jg
mov
inc
add
lea
cs
jb
cmp
xor
ljmp
fdiv
xorb
sbb
je
or
popf
sbb
stos
mov
or
cmp
or
sub
pop
push
pop
sub
pushf
lret
or
mov
dec
loop
test
sbb
and
push
fs
stc
lea
fildl
mov
cs
push
dec
pop
pop
fcomi
pop
mov
sarb
sub
insb
cmp
shrb
repz
mov
sub
pop
mov
sahf
sub
stos
pop
fcoml
ljmp
inc
push
or
rcr
movsb
repz
decl
mov
sahf
lcall
and
ror
mov
ss
insb
jb
es
pop
out
and
xchg
xor
push
ljmp
sahf
popa
adc
test
aaa
sbb
test
cmp
fisttps
out
push
inc
sub
shrl
xchg
fwait
add
ds
push
jecxz
pop
loope
pop
xor
mov
pop
inc
dec
lret
lock
dec
into
xchg
insl
int3
rorb
pop
jns
jnp
sub
mov
mov
push
or
add
sbb
mov
and
sbbl
loope
pop
xor
popl
cltd
adc
and
jno
xchg
pusha
outsb
gs
push
jnp
adc
push
nop
lahf
mov
xchg
pop
stos
mov
inc
mov
stos
add
pop
xor
sbb
mov
mov
imul
and
mov
push
lahf
lock
xlat
sbbl
aas
or
dec
das
xor
bound
mov
pop
xor
aad
cmp
jecxz
inc
xor
sbb
and
cmpsb
cmp
clc
pop
jl
fidivrs
ret
sbbb
dec
les
adc
mov
xchg
adc
pop
sub
sar
cmp
aam
inc
lret
aad
xlat
cmp
stos
int3
pushf
jl
sbb
icebp
mov
daa
jmp
popf
mov
js
dec
cmpsb
imul
ja
xor
jecxz
cwtl
push
pusha
jo
push
xchg
cmp
sbb
lcall
sbb
dec
xchg
push
push
pushf
or
idivb
and
hlt
cmp
mov
shlb
imul
pushf
add
mov
lods
clc
mov
fisubs
mov
das
jns
pop
jge
add
add
std
or
mov
sub
xor
aaa
push
in
mov
pop
dec
mov
cld
push
cwtl
sub
fcoms
shll
cwtl
dec
mov
jno
gs
adc
rclb
fstl
addr16
mov
pop
xor
cwtl
fistpl
icebp
jbe
cs
sub
mov
mov
dec
adc
dec
out
mov
mov
sbb
aad
mov
mov
ret
xchg
sti
inc
inc
stos
scas
jne
test
jecxz
pop
jmp
pop
dec
xchg
xor
and
cmc
stc
bound
sub
andb
lret
addr16
addr16
lds
mov
or
leave
mov
stos
inc
and
or
pop
inc
mov
mov
dec
test
das
fwait
out
out
int
mov
shll
mov
ds
push
jno
fs
outsb
in
push
add
or
sbb
adc
fcomp
xor
mov
cld
cmpsb
mov
aam
cli
adc
lea
idivb
mov
xor
mov
sub
inc
data16
pop
pop
test
cmp
dec
cmp
sbb
rolb
inc
mov
mull
out
call
test
mov
push
imul
inc
inc
orl
push
cmc
push
in
bound
mov
mov
sbb
cmp
fisubrs
aas
sbb
or
insl
jno
scas
add
out
leave
mov
ret
stos
adc
int3
cmp
mov
mov
outsl
subl
sub
xlat
add
cmp
scas
lahf
ret
mov
cmp
adc
les
cmp
xchg
xor
cmp
mov
test
cmp
inc
pop
test
or
adc
lret
cs
pop
adc
inc
mov
or
mov
xchg
pop
cmp
and
lock
or
or
jnp
test
call
push
addb
adc
popf
lret
daa
mov
call
xchg
cmpsl
xlat
jmp
pop
pop
xlat
push
sub
int
and
test
in
dec
in
mov
out
and
iret
sbb
std
xchg
jnp
adc
xchg
insl
dec
jbe
jo
out
bound
inc
pop
mov
movsb
jmp
add
movsb
or
push
mov
ss
sbb
js
sbb
fists
or
xchg
ret
add
sbb
ret
cmp
iret
mov
inc
movsl
pop
js
cld
cmp
xor
mov
test
je
inc
imul
pop
jb
add
mov
push
xchg
add
popa
mov
pop
lahf
mov
inc
lcall
lods
push
loopne
add
cmpsl
sti
out
jmp
push
sub
aas
mov
add
or
sahf
les
xchg
mov
jmp
and
into
scas
jle
xchg
inc
inc
jne
mov
mov
add
mov
pop
mov
int
mov
or
and
xchg
mov
push
jp
sbb
scas
xlat
dec
jne
sbb
ror
adc
xor
outsb
jge
adc
sub
jnp
pop
push
stos
into
mov
out
out
pop
or
mov
xchg
fwait
into
ja
mov
mov
xchg
fsts
dec
jo
push
add
int3
call
or
mov
call
jbe
imul
push
andb
aam
and
fimuls
lods
ret
scas
pop
int3
mov
icebp
test
das
rcll
push
jmp
les
mov
pop
add
sbb
lock
lock
mov
push
add
lret
lret
pop
out
loope
pop
mov
mov
pushf
int
mov
loope
ljmp
jmp
sub
pushf
aad
dec
in
lret
xor
test
mov
xchg
andb
adc
and
or
inc
lcall
dec
mov
add
mov
mov
xor
mov
popf
icebp
stc
sub
pop
inc
dec
jl
push
pop
mov
mov
movsl
call
popf
and
sub
test
loopne
cmp
lods
pop
lahf
enter
jg
enter
roll
jmp
inc
test
lahf
mov
sti
mov
push
pop
inc
aad
push
pushf
inc
enter
and
add
inc
jno
sbb
icebp
or
rolb
mov
loopne
cs
jle
cmp
pop
and
arpl
ja
pop
mov
aam
lcall
aas
inc
frndint
ja
dec
and
icebp
inc
fildl
pushf
mov
inc
popa
push
xlat
and
jmp
xchg
into
pop
mov
push
and
pusha
mov
mov
and
outsb
mov
dec
bound
inc
dec
cmp
out
mov
cmp
inc
push
lea
sub
std
aas
or
fstpl
std
fsub
xor
pop
pop
ret
shrb
dec
fsubrl
popa
shll
fs
inc
dec
fmuls
xchg
test
xor
add
push
das
add
pop
movsl
das
idiv
cmp
jae
test
xchg
dec
sbb
test
ss
jmp
lret
sub
inc
sub
jecxz
cmp
in
mov
popf
test
or
push
loope
mov
test
lds
aam
and
stc
aas
fbld
ds
mov
push
push
push
adc
mov
mov
dec
stos
sbb
ljmp
mov
nop
mov
push
adc
aas
xchg
pop
push
jle
int
stos
sbb
fisubs
xor
or
into
push
ret
inc
jns
cld
lahf
inc
inc
mov
dec
xor
push
mov
sub
push
inc
inc
pop
jle
sub
repz
lods
andb
dec
xchg
std
push
orl
fbld
lock
pop
pop
xchg
inc
mov
lods
movsl
test
pop
or
and
or
sbb
jae
mov
out
nop
sub
add
lret
mov
call
mov
jns
inc
mov
cmpsl
xchg
dec
lret
add
bound
push
lcall
test
mov
aam
rcrb
popa
sbb
add
aaa
mov
push
sti
icebp
mov
lret
aam
ficompl
mov
scas
jl
inc
xchg
and
dec
mov
mov
cs
mov
scas
dec
lea
adc
adc
lods
sarl
adc
ljmp
out
xor
ja
and
enter
xor
mov
mov
dec
cmpsb
sub
xor
cmp
mov
lcall
dec
cmpb
jmp
rorb
push
xlat
adc
das
and
add
in
or
lods
stos
inc
add
xor
mov
jo
clc
cs
in
mov
addr16
mov
repz
jmp
mov
mov
fwait
loop
sbb
popf
rolb
cltd
shll
enter
push
popf
addb
movsb
aam
ret
inc
enter
arpl
xor
mov
jae
dec
aaa
imul
insb
xchg
or
xchg
inc
in
push
inc
lea
push
mov
jecxz
loope
movl
jmp
or
and
fnstenv
ret
fnstenv
fcomps
push
out
xchg
ds
and
jo
and
icebp
stos
dec
lcall
cli
outsl
xchg
mov
jecxz
mov
sub
enter
sbb
call
testb
jnp,pn
lcall
rcrl
dec
or
jg
inc
les
fstps
rolb
push
jne
mov
mov
ds
cmp
je
push
adc
mov
scas
stos
push
and
pop
mov
pop
mov
mov
or
jle
test
add
pop
lcall
jnp
enter
adc
mov
push
insb
or
inc
fs
jbe
cmp
pop
jmp
and
in
or
lahf
leave
pop
cmp
stos
rorb
call
or
jmp
adc
pop
fiaddl
popa
ret
andb
dec
es
nop
jecxz
ljmp
xor
rolb
cmp
repnz
stos
xchg
and
mov
arpl
dec
stos
jg
rorl
dec
outsb
mov
or
and
adc
push
pop
xchg
aas
lock
shll
inc
xor
adc
rcr
pop
mov
sub
test
lahf
lods
inc
or
aam
lds
jge
test
daa
cmp
shlb
fildll
pop
mov
call
test
adc
mov
pop
dec
mov
addr16
aam
in
or
xchg
iret
jno
scas
cmp
cmp
mov
fdivr
xchg
inc
mov
xchg
enter
imul
addr16
push
jns
sbb
fisttpll
pop
or
sub
ss
imul
mov
aaa
jl
out
push
sub
or
push
cmp
imul
pusha
mov
xchg
xor
mov
jmp
insb
adc
cmpb
jbe
cmp
xor
or
or
mov
push
cmpsb
movsb
mov
or
and
sub
and
inc
inc
mov
and
add
aam
dec
or
aas
xchg
push
inc
pop
cmp
sbb
xchg
cmp
div
cmp
shr
sub
push
pop
push
scas
popa
cs
les
push
xchg
push
mov
daa
orl
sbb
int
jnp
lret
mov
fisttpl
or
sbb
xor
pop
out
rclb
data16
xchg
sbb
out
xor
xchg
mov
mov
hlt
jecxz
test
mov
stos
rcr
pushf
mov
test
cmpsl
mov
outsl
lods
dec
int3
ja
sub
es
or
fisttpl
jmp
fistl
enter
roll
je
jb
push
shll
add
cmp
dec
sarl
movsb
ficompl
dec
int3
lods
mov
add
sbb
push
dec
dec
xchg
loope
jno
hlt
mov
in
in
leave
inc
subl
mov
mov
dec
xor
hlt
dec
mov
adc
cmp
dec
scas
jmp
adc
mov
icebp
mov
jge
daa
out
add
and
movsb
mov
xor
into
lea
icebp
mov
test
mov
xchg
leave
sbb
lret
pushf
push
push
out
cmp
pop
ror
adc
lods
bound
jmp
dec
aad
and
decb
inc
push
les
faddp
test
pusha
cli
jo
push
push
xor
pop
add
inc
jbe
cmp
stos
js
lahf
xorb
ss
pop
fs
dec
or
xchg
shrb
add
mov
lods
pop
rolb
ret
sbb
ds
out
orb
pop
sub
mov
adc
imul
bound
sub
sbb
insl
sub
sub
jg
mov
jl
aam
test
push
int3
sahf
sub
fistps
adc
jae
cmp
cli
stos
and
adc
adc
push
xchg
xchg
aad
push
mov
cmp
xor
popf
fnsave
mov
jns
mov
mov
fisttpl
jo
inc
repnz
mov
adc
outsl
xor
xlat
dec
pop
mov
subb
xchg
lods
adc
stos
cmp
sbb
xchg
addr16
cmp
cltd
inc
xchg
out
hlt
push
test
dec
push
stos
aas
into
sub
hlt
add
mov
lods
push
mov
imul
sub
in
out
xor
imul
adc
sti
fwait
jg
fsincos
push
push
jo
xchg
loop
mov
xor
mov
inc
adc
cmpsb
gs
lods
lahf
cmp
jp
jmp
and
mov
xchg
fsubrs
in
icebp
movsb
sti
mov
stos
and
jp
add
into
push
ja
addl
adcl
dec
subb
sub
repnz
cmp
cmpsb
movsb
lahf
aam
imull
sub
pushf
out
xchg
aam
cwtl
ficoml
or
xor
std
test
xor
outsl
cmpsl
cmp
out
sub
mov
cwtl
fs
xchg
add
imul
or
les
sbb
mov
sbb
cmp
and
leave
fs
adc
xchg
or
push
jg
int
jbe
lcall
and
popa
rcll
movsl
dec
mov
jmp
and
cmp
sahf
les
cmc
cmp
jmp
arpl
ret
fcmovnu
les
mov
jb
xor
ss
jmp
cltd
popf
pop
lret
jns
mov
adc
divl
setno
push
inc
test
jbe
push
pusha
into
jle
in
push
sub
mov
inc
movsb
mov
nop
push
shl
enter
int3
ret
mov
stos
dec
xchg
out
bound
add
mov
ds
leave
sahf
loope
jle
xor
mov
hlt
fists
in
loope
dec
aas
js
data16
sub
gs
xor
dec
mov
cwtl
dec
fldenv
mov
dec
enter
pop
cmp
inc
xchg
clc
test
mov
popa
jp
xor
dec
arpl
mov
mov
dec
sub
push
shrb
popa
outsl
xchg
aad
hlt
xor
push
sbb
fnstcw
inc
pusha
jno
dec
fs
mov
jno
dec
pop
test
lods
or
aaa
inc
xchg
inc
cmp
add
xchg
loopne
ss
adc
xchg
lret
int3
inc
nop
shl
les
jg
addr16
or
mov
aad
xchg
in
loop
insb
pop
adc
push
adc
add
or
rep
pushf
vsubps
lods
inc
sub
xchg
dec
xchg
into
movsl
icebp
xchg
adc
mov
dec
add
add
dec
add
adc
push
lods
or
inc
or
xor
jl
xchg
sub
fstps
sub
out
mov
xorb
inc
dec
mov
fldt
in
and
adc
inc
stos
mov
pop
jmp
stos
in
iret
in
lea
cs
adc
pop
imul
pop
cmpsl
mov
in
cmp
mov
sarl
stos
into
cmp
movsl
mov
jge
arpl
push
mov
into
jl
pop
jae
in
movsb
fldt
cmp
das
inc
add
mov
mov
push
push
sti
push
push
je
mov
or
dec
int
bound
push
xchg
push
insb
lods
lods
add
int
pop
imul
cmp
sbb
xchg
test
jp
outsl
jecxz
pop
in
sub
inc
negl
shl
jb
aas
mov
sub
test
inc
dec
jnp
cwtl
rorb
dec
add
or
iret
daa
pop
je
decb
ret
push
pop
stos
mov
or
inc
in
popf
adc
clc
loop
sbb
pop
dec
loop
push
mov
lret
imul
add
out
movsb
iret
dec
aam
stc
in
les
sbb
repnz
adc
and
insb
lds
rcl
mov
mov
lock
pop
int
xor
dec
fcoml
data16
dec
push
push
testl
lods
dec
mov
dec
cltd
dec
aas
xchg
mov
lds
pushf
movsl
sub
sbb
push
push
into
jnp
popf
cmp
das
pop
ret
rolb
mov
xchg
fistpl
nop
push
cmp
int3
sub
aam
mov
movsb
les
adc
rol
lds
sbb
push
cmp
pop
xchg
pop
dec
push
jmp
jmp
sub
ds
mov
in
xchg
adc
addr16
jg
cmc
sub
in
mov
mov
fdiv
testl
js
cs
pop
mov
fldt
ret
in
daa
adc
loop
lds
or
add
pop
int3
push
dec
inc
mov
ja
repnz
mov
les
xor
ds
out
loop
shlb
scas
lcall
inc
and
lds
ror
lret
pushf
mov
sarl
adc
out
mov
add
jg
pop
stos
pop
stos
xor
out
gs
cmp
pop
pop
mov
or
jmp
dec
mov
add
cmpl
dec
add
fcomps
int3
aam
jne
cmp
jle
adc
jns
push
or
xor
pop
in
fildll
pop
cmp
add
imul
sub
sub
inc
aas
hlt
or
dec
cwtl
in
mov
push
push
movsl
sub
insl
cmp
rcr
push
jp
fidivs
js
and
stos
test
popa
mov
fucom
iret
inc
in
in
icebp
add
sub
movsb
sub
movsl
clc
pop
orl
adc
adc
subb
lret
pop
pushf
jo
xlat
mov
mov
daa
mov
out
lds
add
adc
adc
inc
pop
cmp
and
icebp
mov
inc
xchg
xor
shr
cmp
test
cli
out
dec
jne
nop
inc
jp
jo
pop
xchg
jns
xor
ret
stc
cmp
lock
sbb
adc
insb
int
cmp
mov
fmull
das
xchg
mov
adc
pop
in
stos
adc
aam
lock
aam
out
loop
adc
xor
mov
fsubl
sti
into
add
fstpl
and
jo
sub
lahf
dec
sti
sbb
mov
and
mov
call
add
jbe
hlt
push
gs
xchg
mov
loope
xchg
jecxz
shlb
cmp
and
js
push
sbb
pop
lds
aam
add
insb
cmp
and
je
sbb
rol
adc
push
add
enter
loope
ficomps
or
lret
fwait
cmp
pop
xchg
movsb
sub
cmpsl
ljmp
shll
pop
and
push
popa
scas
mov
mov
push
shlb
aam
in
adc
lods
fnstenv
xchg
mov
sub
lret
dec
in
jecxz
inc
insl
cmpsl
add
jl
insl
lahf
jns
stc
movsb
cmp
dec
pop
test
mov
in
shrl
mov
call
dec
add
inc
movsb
adc
popa
rcr
mov
adc
jmp
mov
jnp
or
inc
jp
pop
push
sti
jo
int
mov
insb
push
movsb
cmpsl
shl
inc
pop
mov
js
inc
add
or
arpl
inc
inc
mov
mov
mov
in
pushf
adc
fcmovnb
or
pop
inc
rcl
mov
mov
pop
push
in
popa
imul
dec
aam
push
rolb
mov
nop
imul
inc
daa
and
mov
or
std
ds
mov
xchg
fbld
scas
aad
xlat
test
cld
ficoml
jp
cmpsb
in
lcall
ja
push
clc
outsl
or
ja
add
dec
mov
jbe
cmp
icebp
dec
xchg
push
repnz
add
add
add
xchg
jno
fldt
jle
mov
jecxz
std
mov
push
loope
test
popf
xchg
es
aas
pusha
dec
mov
flds
push
sub
lret
popf
sbb
fnstsw
dec
adc
data16
aad
xchg
outsl
loope
cmpsl
push
movsb
icebp
sub
iret
jbe
xor
push
nop
mov
sbb
cmpb
int3
into
into
jp
stc
jle
scas
sub
jnp
fs
mov
ljmp
enter
cmp
cmp
mov
xlat
popf
fsubs
lea
push
dec
pop
in
paddusw
aam
add
fiaddl
mov
xchg
jg
jb
xchg
mov
or
cmp
xchg
cmp
push
dec
sarl
test
add
push
pop
xchg
mov
and
nop
mov
inc
loopne
daa
shrb
push
mov
sub
mov
adc
push
pop
push
mov
mov
mov
or
sub
or
xor
insl
adc
js
jae
lcall
push
cmp
cmp
lahf
xchg
fldl2e
aad
sbb
mov
xlat
xor
dec
xor
stos
clc
or
test
cmc
sbb
and
movsl
and
inc
jge
and
nop
xchg
jb
sub
les
scas
push
add
cmp
js
pop
pop
cmp
cmp
lds
sbb
xchg
inc
inc
jmp
xor
out
scas
call
cmp
shr
js
mov
mov
cltd
xlat
sub
sti
movsl
not
xchg
mov
ljmp
imul
mov
in
dec
inc
insb
mov
push
sbb
out
pop
je
fidivs
add
in
and
vmwrite
nop
add
sub
iret
or
lds
push
scas
je
mov
repz
das
andps
mov
jne
mov
pop
int
jp
xchg
push
stos
cltd
daa
movsb
sub
fistpll
or
icebp
mov
mov
add
dec
bswap
sub
fisubrs
inc
imul
push
in
mov
inc
mov
xor
adc
mov
jnp
daa
imul
dec
lods
rcll
fadd
test
add
aas
jo
aam
daa
ret
push
imul
fidivrs
mov
fldt
pusha
mov
cmp
ret
adc
outsb
cltd
aaa
mov
popa
push
fwait
inc
jb
dec
mov
xchg
push
das
notb
out
ret
mov
mov
iret
imul
or
sub
ret
lahf
gs
cmp
mov
mov
xor
test
mov
dec
sub
adc
cmp
mov
sarb
rcrl
or
sub
mov
and
adc
mov
ljmp
sub
outsb
jl
es
mov
fsubr
fisubs
xchg
jl
out
or
lock
and
lret
dec
nop
bound
jae
dec
icebp
or
xchg
adc
enter
subb
sbb
mov
cmp
sbb
pusha
or
mov
negb
shrb
rcll
and
add
lret
pop
test
mov
repnz
jmp
mov
inc
or
mov
lcall
rcrb
push
mov
ret
mov
enter
mov
lret
das
inc
pop
xor
xchg
bound
sub
mov
jns
jns
jnp
sbb
push
and
in
jle
aas
std
jo
xchg
test
mov
push
out
push
lret
or
popa
in
stos
push
repnz
lods
ss
cltd
pop
sub
adc
inc
insb
mov
enter
xchg
inc
jae
and
addl
push
les
lods
sub
shll
sbb
fmull
pop
jl
jo
cmp
rolb
jne
rcrb
popa
xor
cwtl
fs
pop
jecxz
outsb
xchg
scas
mov
call
loope
pop
mov
jle
jno
add
ljmp
int3
jmp
xchg
call
sarl
lea
ds
push
ret
aaa
stos
push
mov
inc
push
sub
xchg
mov
icebp
pop
nop
test
in
pop
aas
pop
sbb
popa
jnp
lods
or
scas
in
ds
ja
ss
or
test
adc
inc
xchg
mov
cmp
pusha
out
in
aad
push
outsb
mov
testl
fdivl
cs
stc
stos
mov
scas
xor
xchg
inc
fistps
xchg
aaa
mov
dec
out
or
rcr
popa
loope
xchg
sub
sub
and
int
mov
lcall
test
sub
inc
dec
aas
scas
mov
int3
sub
cwtl
aas
and
leave
ret
outsb
jg
add
add
and
lods
cmc
push
lret
push
mov
xchg
and
push
iret
cs
xchg
adc
loop
fisttpll
push
pop
push
out
fucompp
push
lock
movsb
mov
jo
addr16
pop
pop
mov
repz
mov
into
and
idiv
mov
addr16
outsl
cmp
stos
mov
les
repz
mov
leave
jp
jo
or
cmpsl
adc
cltd
cmp
inc
mov
lahf
and
xor
into
inc
cmpsl
pop
jnp
out
adc
lret
mov
cmp
cmp
dec
mov
dec
mov
mov
test
mov
arpl
mov
mov
lea
lock
push
xchg
pop
adc
in
and
sbb
and
in
sbb
ret
push
adc
in
mov
pop
js
push
sbb
fidivs
icebp
sub
test
or
jmp
pop
sbb
jle
mov
sub
mov
pop
cmc
xor
scas
popa
and
daa
das
stos
jle
inc
insb
mov
inc
shll
xchg
les
fadds
stos
dec
stc
adc
leave
adc
lods
sbb
mov
adc
and
adc
sbb
sahf
fistps
mov
sub
out
in
cwtl
adc
mov
loopne
mov
lods
push
or
mov
or
mov
cmp
or
enter
pop
push
push
out
shl
mov
ljmp
cmp
and
cmp
sub
pop
lds
popa
xchg
fldenv
xchg
insb
lea
mov
xor
or
mov
adc
lret
into
push
adc
mov
dec
ja
stos
and
lea
jl
std
std
mov
lock
pushf
popf
cmpsl
cld
shrb
xor
xchg
in
ljmp
sar
rorl
pop
aas
cmp
repz
mov
pop
mov
cmp
jb
xor
fwait
jns
int
jne
dec
jne
sahf
pop
sub
dec
and
lret
stos
adc
jbe
mov
orl
pop
dec
or
xor
jge
mov
adc
arpl
cld
xchg
shlb
push
cmp
dec
shll
lock
in
ret
add
or
nop
xor
icebp
mov
mov
shll
mov
cs
rorb
sub
dec
mov
sbb
xor
mov
mov
pusha
aas
int3
into
pop
pop
into
stos
sbbb
imul
cmpl
cmp
pusha
push
mov
aas
insb
mov
call
add
bound
pop
mov
shrb
daa
mov
inc
and
ds
outsb
add
fdivrp
rcrb
sub
pop
ret
fcomps
jo
xchg
popa
jecxz
aas
mov
add
insb
sbb
and
in
std
roll
and
aaa
jle
jmp
dec
mov
sbb
mov
stos
aad
fiadds
inc
xlat
mov
test
sub
scas
es
pusha
ret
fldcw
xor
sbb
xorl
mov
xchg
cmpsl
or
cld
mov
adc
cs
mov
jns
out
repz
cmp
stos
ret
dec
jge
sahf
leave
test
ds
mov
add
pop
jne,pn
push
adc
test
ljmp
iret
lcall
cli
sbb
lock
inc
test
pop
sbb
jmp
scas
lods
push
pop
xor
mov
mov
dec
test
enter
add
jno
subb
lcall
fadds
jmp
roll
dec
bound
cltd
xchg
movsb
bound
mov
nop
add
loop
lret
adc
lock
or
shll
stos
shll
movsl
jo
enter
loopne
cmp
and
jge
test
lcall
insb
lds
ret
movsl
push
int3
pop
jg
ljmp
push
cmp
push
int
pop
scas
std
cmc
or
jp
in
mov
nop
jmp
sbb
mov
loop
stc
js
scas
or
pop
dec
add
in
dec
adc
jo
test
inc
gs
fistpl
mov
mov
dec
dec
push
push
jnp
idivl
mov
fbstp
pop
xor
test
pop
adc
cmp
mov
dec
mov
imul
push
inc
stos
in
sbb
imul
pop
cwtl
cmpsl
into
test
aam
ss
pop
xor
aas
rorb
add
cld
push
mov
out
cmpsb
inc
js
pop
out
inc
xchg
inc
inc
loopne
inc
rcll
mov
and
mov
mov
out
insb
mov
shrl
in
sbb
loop
push
xor
aas
jbe
stos
dec
test
pop
es
add
lods
pop
jg
insb
push
ror
cmp
mov
in
mov
outsl
pop
cmp
mov
inc
push
and
jbe
daa
lahf
xorl
mov
in
shlb
movsl
stos
inc
pop
gs
and
in
scas
or
js
loop
dec
fadd
adc
push
pop
or
xchg
sbb
add
mov
icebp
jb
cmpb
sub
dec
dec
or
ret
push
mov
lods
pop
fisttps
lret
scas
test
nop
xchg
jae
xchg
jb
ljmp
jge
imul
movsb
pusha
lock
pop
and
jmp
add
cmp
push
scas
enter
sarl
sub
adc
dec
lods
out
int3
jl
fstl
mov
sub
clc
push
jne
loop
cwtl
je
iret
aaa
inc
mov
or
scas
or
fidivrl
int
and
aas
inc
imul
bound
pop
jae
insb
jecxz
leave
aaa
adc
in
cs
pop
lods
scas
sbb
push
cmp
sbb
xor
mov
rcrb
cltd
add
cmpsl
adc
outsb
xchg
fdivrl
jp
mov
sbb
xor
push
adc
jmp
inc
jl
cmp
jmp
add
dec
out
sbb
mov
mov
dec
push
rol
and
aas
xchg
test
add
or
dec
loope,pt
test
push
push
add
cli
popf
ficompl
dec
mov
shll
inc
lret
clc
aaa
int3
arpl
push
mov
jle
les
fs
push
cmpsb
shlb
jmp
xchg
cmp
adc
dec
int3
cltd
xor
inc
sbbb
and
iret
shll
imul
push
arpl
repz
or
scas
lret
sub
mov
negl
icebp
fisttpl
dec
dec
lret
outsl
out
mov
add
test
pushf
ljmp
jnp
fcomps
test
popf
or
cmpsl
aad
jne
dec
idivl
pop
inc
andl
subb
lock
lahf
pushf
adc
pop
dec
or
lea
shl
sbb
mov
ljmp
sub
xlat
push
jb
cwtl
out
cmp
leave
clc
add
faddp
inc
cli
fildll
mov
es
push
rol
xor
rcr
int3
mov
js
orl
add
fs
add
cld
cmp
test
mov
mov
movsl
popf
adc
xchg
fadds
daa
nop
mov
cwtl
add
sub
xchg
imul
rcl
insb
arpl
lods
push
dec
xchg
enter
mov
mov
lock
push
iret
pop
pop
fsubs
cmpsb
or
nop
sbb
ds
cmp
pop
call
push
push
stc
fildll
je
sbbb
cwtl
imul
adc
inc
iret
push
inc
pop
fdivs
add
movsl
jmp
out
mov
mov
idivl
fstps
xor
mov
movsb
and
loop
adc
sbb
sub
push
pop
lds
fimuls
iret
cli
sarb
js
out
lret
xchg
je
mov
test
imul
dec
dec
push
inc
cmpsl
cmp
nop
adc
aaa
sub
dec
pop
dec
xor
popa
pop
pop
mov
imul
das
inc
loop
sbb
jmp
and
out
pop
loop
mov
repz
les
push
aas
in
jno
loop
cmp
jecxz
sub
mov
cld
mov
pop
xor
sub
or
lods
popa
jle
mov
mov
popa
mov
neg
fstp
outsl
jnp
cli
push
dec
push
cmpsl
popa
dec
adc
or
cmpl
mov
fyl2x
dec
add
divl
add
mov
es
and
dec
jge
in
cmpl
lock
movsb
jp
loop
mov
xchg
jbe
jbe
add
andb
test
add
and
test
dec
mov
cmc
xchg
es
mov
push
data16
cmp
sub
fsubrl
mov
sbb
faddl
mov
push
in
ss
js
aad
mov
mov
adc
je
je
mov
shll
mov
adc
mov
outsl
cmc
xchg
xchg
adc
cmp
xchg
cmpsb
xor
cs
cmc
loope
fcoml
sub
inc
mov
push
loop
adc
or
xor
inc
xchg
je
push
daa
fildll
sbb
stos
adc
push
inc
dec
in
jnp
push
jl
inc
aaa
mov
lret
xchg
vmulpd
dec
jl
stc
mov
insl
jl
mov
xchg
mov
and
jns
jl
pushf
jg
cmp
repz
lds
jnp
inc
ja
insb
pop
lods
fists
jmp
xchg
sbb
testl
imul
fiadds
pop
xor
cwtl
sub
test
mov
dec
lret
cmp
dec
pop
and
push
sub
inc
adc
adc
dec
jb
xchg
mov
lret
cmp
enter
inc
mov
in
test
daa
aad
cli
fisubrs
add
pusha
mov
inc
popf
orl
pop
mov
pop
lahf
mov
mov
pushf
bound
mov
push
test
rorb
sub
dec
mov
add
mov
fdivs
push
xchg
inc
dec
and
mulb
add
out
add
mov
mov
stos
leave
inc
add
mov
cmpsb
dec
add
and
arpl
mov
ret
mov
gs
insb
test
scas
ret
add
push
mov
popa
popa
movl
ret
addb
xlat
sub
mov
push
pop
adc
jo
add
arpl
or
bound
test
fdivrs
jmp
xchg
and
shlb
test
das
and
mov
lock
pop
sub
dec
mov
enter
sbb
std
mov
loopne
mov
or
push
in
adc
xchg
enter
push
movsb
cmp
jmp
arpl
sbb
hlt
sarl
push
imul
push
jae
xchg
fs
and
out
dec
xchg
push
and
push
cmp
aas
fmul
jo
sub
int3
pop
cmp
and
fs
jne
or
cmp
xchg
mov
push
cltd
ljmp
fstps
jns
aas
roll
sub
pop
inc
cwtl
fsts
std
mov
jle
shrb
push
xor
cmp
cmp
dec
push
inc
pushf
xchg
test
sub
mov
cmp
mov
dec
mov
add
mov
shll
js
mov
cmp
cmp
stos
daa
nop
mov
add
add
mov
outsb
jg
orl
fwait
les
xlat
cwtl
imul
sbb
xchg
and
xorb
cwtl
jp
aaa
lret
mov
or
cmp
sub
xchg
pusha
int3
and
mov
fsub
fisttpl
push
cmpsb
sub
mov
mov
sbb
shrl
ret
jp
adc
popa
mov
mov
insb
add
outsl
mov
xor
jnp
jnp
add
test
xor
cmp
push
mov
push
es
cld
shll
pop
rcr
adc
pop
and
adcl
xorb
mov
xchg
sbb
mov
daa
out
dec
sub
clc
stos
je
hlt
lods
mov
sbb
sti
mov
out
sub
cmp
jo
jle
scas
and
movsb
movl
movsl
fwait
fwait
xchg
or
cmp
fsubrl
shll
popa
dec
fmuls
mov
push
add
shr
shr
stos
les
out
add
testl
loope
push
fsubl
add
popa
xor
sarb
loop
stc
dec
add
negl
addl
jae
xor
dec
jnp
push
addr16
inc
gs
lret
mov
loop
sarl
push
push
adc
lds
mov
fldcw
test
mov
and
jmp
popl
mov
scas
mov
test
mov
cwtl
push
mov
roll
cmp
jp
iret
movsl
pushf
in
mov
lahf
jnp
enter
sub
pop
ljmp
int3
mov
and
xchg
push
sub
or
push
push
pop
pop
fs
push
hlt
arpl
mov
jecxz
jmp
inc
push
add
xor
lods
jb
xor
pop
mov
jb
imul
dec
scas
dec
insb
and
mov
outsl
and
bound
mov
or
aad
into
adc
mov
pop
xor
push
out
mov
out
lret
call
test
inc
and
pop
sbb
xor
push
je
cwtl
in
or
adc
jno
ret
inc
cmpsb
jno
push
fs
imul
in
mov
xchg
dec
sbb
mov
int3
fsubrs
scas
xchg
ficoms
fdivr
ljmp
repnz
rorb
and
xor
pop
and
arpl
mov
sub
les
cwtl
sub
inc
mov
insb
pop
jb
rorl
ljmp
mov
or
jb
mov
add
rcrl
inc
dec
iret
dec
icebp
out
xchg
cwtl
jns
fs
mov
loopne
jo
dec
mulb
inc
scas
insb
scas
jae
inc
inc
jae
cmpsb
push
adc
push
pusha
push
loopne
xchg
aam
cmp
lret
jp
jbe
aas
xchg
and
and
jo
push
int3
jge
sti
imul
subl
pushf
inc
ljmp
fcomps
test
jnp
clc
mov
in
add
sbb
pop
bound
repz
sbb
jnp
mov
mov
mov
mov
xor
rol
xlat
dec
or
inc
loopne
jge
cmc
lea
rcl
mov
cmpsl
fdiv
mov
repnz
mov
dec
and
rorb
ljmp
or
jle
pop
div
add
push
jb
mov
push
dec
cmp
std
sub
cmp
enter
xlat
add
pop
sbb
sbbb
push
dec
fdivp
jns
push
enter
test
inc
loop
lods
pop
ret
aam
cltd
int
hlt
jns
loope
push
lods
cmpsl
cmpsl
repz
xchg
aas
or
xchg
push
cltd
daa
push
cld
xor
sub
sbb
sbb
std
jg
mov
pop
mov
aas
je
or
inc
ss
lahf
mov
push
gs
roll
cmpsl
mov
fldl
mov
test
or
xrelease
enter
dec
xor
mov
jp
mov
jo
int3
loopne
js
repz
shr
xchg
mov
xchg
pop
aam
add
in
out
dec
pop
push
outsl
cs
inc
push
iret
mov
andl
and
jl
out
gs
xchg
xchg
rcr
int3
xchg
and
roll
daa
adc
cld
rcr
push
xor
mov
mov
lahf
loop
test
lods
push
cmp
xchg
enter
pop
in
incl
xchg
es
push
dec
mov
popf
cmp
xor
add
cmpsl
fdivl
mov
test
pop
pop
or
lods
lods
negl
xor
mov
dec
ror
out
mov
icebp
icebp
sub
cmp
mov
shr
xchg
inc
ret
shl
dec
inc
sub
outsb
or
pop
xor
leave
dec
mov
and
dec
or
and
push
sub
mov
cli
sbb
inc
push
adc
pop
psrlq
rcl
and
xor
push
sbb
mov
repz
ret
jle
sarb
or
xor
sbb
mov
ljmp
and
sahf
add
sbb
or
lods
repz
sbb
jbe
sub
shlb
test
mov
add
xchg
add
push
xor
inc
jp
sub
test
arpl
hlt
mov
call
ljmp
imul
ja
iret
sahf
xchg
mov
or
and
add
addr16
popf
arpl
ss
pop
popf
aaa
jb
lds
stos
cmc
call
in
xchg
call
and
sub
mov
or
adc
fstpl
push
cltd
mov
ret
outsl
pop
cmp
add
lcall
xor
hlt
mov
or
cwtl
rcrb
arpl
pop
and
sub
mov
dec
inc
mov
dec
sub
or
jno
jecxz
inc
mov
mov
pop
sbb
out
mov
loopne
fmuls
jo
stos
cmp
daa
test
xchg
sbb
lret
popf
icebp
sarb
daa
add
ret
mov
lret
cwtl
movsb
sub
inc
mov
jp
leave
jle
aad
add
in
jns
pop
aad
jp
sub
rcl
add
push
inc
repz
int3
out
movsl
imul
add
aas
add
pop
pop
dec
or
push
clc
loopne
mov
and
ffreep
adc
and
lcall
into
jp
mov
ret
and
lret
jnp
adc
sub
cld
in
mov
and
rcll
pop
sub
int3
repz
sub
stc
mov
popf
xlat
outsb
cmovae
icebp
mov
popa
cmpsl
or
cwtl
dec
pop
mov
sub
popf
shlb
mov
ljmp
jnp
mov
push
adc
xor
repz
fcmovnu
test
test
aaa
shlb
lock
jp
jnp
push
fbstp
cmpsb
inc
push
pop
cmp
popl
stos
push
adc
pop
incb
mov
leave
xor
xchg
mov
iret
lods
cmp
int3
add
repz
or
das
addr16
fistps
mov
mov
popf
rorl
shl
dec
mov
or
xchg
aam
add
lods
jnp
fisubs
nop
stos
imul
int
pop
add
jge
push
movsb
loope,pt
leave
inc
dec
xchg
mov
jecxz
jae
lret
push
xor
push
push
inc
dec
push
mov
jge
cmp
enter
lock
nop
and
inc
pop
mov
hlt
imul
xchg
ljmp
jmp
push
cmpsl
adc
jno
sbb
xchg
mov
out
movsb
andb
jle
lods
decl
es
jae
push
ljmp
jle
mov
dec
daa
sub
sub
ja
xchg
adc
cmp
mov
and
sahf
mul
pop
jo
push
clc
sti
sub
imul
xor
xor
fbld
mov
pop
es
into
xor
pop
divl
push
pop
ret
push
pop
repnz
cmpsl
mov
mov
repnz
mov
xchg
nop
mov
out
leave
add
subb
or
push
test
mov
les
shlb
hlt
mov
cltd
addb
xor
sbb
cli
mov
push
adc
sbb
add
add
xor
repz
inc
xchg
fisttps
dec
sub
ss
inc
mov
dec
outsl
or
push
loop
dec
add
and
imul
sbb
push
int3
mov
lcall
dec
inc
shll
inc
mov
mov
mov
push
enter
shrb
test
dec
xchg
fs
outsl
sbb
xchg
and
leave
scas
xlat
mov
sbb
sbb
and
fists
inc
jne
into
mov
jge
test
or
jecxz
mov
mov
push
cmp
pop
push
jo
mov
sub
fnstcw
jecxz
pop
addl
inc
iret
out
fcomps
cmp
or
mov
jg
loopne
scas
arpl
mov
jne
arpl
mov
shr
adc
popa
pop
sbb
js
mov
movsb
and
aad
dec
xchg
jle
enter
adcb
stc
xchg
aaa
mov
sbb
cmp
cmc
enter
ficomps
inc
test
int3
popa
add
stc
dec
sub
or
loope
rcrl
in
pop
stc
add
leave
pop
scas
into
stos
mov
pop
and
aad
ret
add
cltd
jbe
inc
js
arpl
test
add
xchg
les
and
test
subl
push
nop
push
test
push
leave
xor
sub
adcl
jnp
sub
inc
inc
xchg
pop
sbbl
cmc
jge
in
lods
enter
push
ja
sbbb
aas
out
jne
and
int3
mov
mov
jg
pop
sub
jle
mov
insl
jbe
out
insl
or
lcall
scas
xor
xorb
ja
cmc
pop
push
mov
pop
int3
loopne
dec
shll
scas
shll
lcall
test
jge
pop
popf
mov
jnp
std
std
pop
xchg
sbbb
rclb
adc
out
sub
push
sbb
mov
mov
inc
add
lds
add
enter
int3
leave
adc
or
pushf
mov
movsb
pop
xchg
adc
daa
out
mov
lock
mov
dec
mov
inc
lahf
dec
adc
test
outsb
mulb
and
nop
fdivrs
pop
aaa
mov
or
mov
pop
xor
push
mov
jmp
aaa
mov
aad
xor
mov
ror
or
and
dec
lds
loope
dec
jmp
push
and
fsubs
fidivs
movaps
sbb
sbbl
inc
leave
add
in
mov
out
sub
fbld
jo
mov
xchg
lds
xor
bound
mov
shlb
and
pop
cli
in
inc
and
jo
pop
jne
incb
lea
test
inc
arpl
dec
jl
or
and
arpl
fimull
out
test
jl
fidivl
inc
dec
xchg
mov
mov
xlat
fs
stos
fidivrl
xchg
pop
call
into
sbbl
cltd
jnp
xchg
jl
jbe
inc
mov
jecxz
icebp
rcrb
popf
jnp
stos
sti
int
xor
adc
xchg
aad
cmpsl
in
cmc
xchg
cmpsl
push
add
xchg
out
xchg
fwait
into
pop
add
pop
sbb
mov
cmp
jecxz
mov
xchg
or
push
sarb
jnp
movsb
inc
or
sbb
sub
cmp
push
fcmovne
sub
mov
test
add
cwtl
sti
loope
fidivl
push
imul
cmp
push
sti
cmp
inc
shlb
aad
jg
fsts
inc
dec
outsb
popa
test
pop
sub
test
sub
ja
or
lods
or
sub
pop
xlat
mov
xchg
gs
ja
cmp
jle
sub
add
or
les
ljmp
mov
popf
sub
aam
jp
sub
ret
aas
push
data16
adc
es
add
sub
pop
push
mov
arpl
push
xchg
flds
rcl
js
dec
cmpsl
mov
lods
inc
test
cmp
popf
and
xchg
dec
cwtl
jmp
fisttps
and
stos
lods
enter
add
rcrl
mov
popf
imul
adc
mov
aas
outsb
imulb
sarb
mov
push
inc
and
adcb
cld
jno
and
push
dec
dec
push
jnp
lret
mov
les
mov
jle
jnp
push
repnz
inc
sbb
mov
insl
ret
shlb
cmp
adc
jb
sbb
jae
jp
inc
call
enter
loopne
mov
push
es
cmp
lea
aad
rorb
sub
mov
cmp
or
fstpt
lret
andl
ja
popa
sahf
pusha
ficompl
dec
icebp
xchg
push
or
mov
test
dec
pop
imul
int3
scas
push
fmul
pop
cmp
fisubrl
push
xchg
jmp
xchg
aas
inc
imul
stos
mov
sub
mov
cmpsl
push
push
cmp
xchg
sbb
push
aaa
pop
jl
ds
rolb
into
aas
push
push
jns
aam
xor
sbb
lea
std
cmp
and
lret
test
daa
mov
push
jp
push
xchg
mov
in
shll
sub
nop
mov
inc
test
push
push
xchg
or
lods
pop
cmp
push
cmp
lea
aas
daa
repnz
bound
jb
jns
cmp
imul
jbe
xor
stos
mov
xor
and
jmp
mov
stos
sbb
ss
pushf
cmp
cmp
xchg
jnp
adc
cmp
in
mov
mov
fldenv
or
cwtl
pop
jne
sbb
ss
add
les
push
fildll
nop
jl
bound
inc
inc
sub
lea
jbe
push
xor
imul
pmuludq
jmp
xchg
xchg
jcxz
or
mov
ret
bound
movsl
pop
and
mov
xor
stc
xchg
adc
and
or
roll
jle
insb
decb
xor
movsb
ds
pop
out
fstps
clc
and
jecxz
xorb
fcmovnb
push
inc
dec
jae
movl
mov
mov
jmp
cld
sbb
xor
rcl
inc
lar
fidivrl
call
test
outsb
sub
lret
scas
loope
out
jnp
sbb
mov
insb
aaa
in
into
sub
xchg
mov
loop
dec
stos
adc
push
and
enter
inc
sub
xchg
ja
add
dec
sub
lcall
sbb
int
mov
and
and
scas
in
mov
pop
adcb
lahf
and
fisttpll
cmpb
test
rcr
add
rcl
jmp
aad
mov
xchg
aad
icebp
std
jge
mov
call
fdivrl
sbb
cmpl
les
push
and
sub
dec
cmp
mov
pop
xor
push
mov
xchg
and
in
cmp
movl
inc
data16
dec
xor
and
popa
sub
sbb
arpl
xchg
imul
add
mov
outsb
ds
mov
cwtl
xchg
loopne
test
sarb
mov
push
pop
mov
add
aam
imul
es
cmp
je
dec
dec
fistl
fistpl
fidivrl
lea
hlt
jns
aad
pop
movsb
pop
inc
enter
into
sarl
mov
mov
sub
rol
xchg
or
add
shrb
fmul
test
add
pop
mov
cmpb
jmp
stos
dec
js
lret
fildll
add
jle
pop
std
jns
push
mov
adcl
loopne
sub
ja
mov
mov
push
push
or
or
add
stos
pop
cmpsb
sub
mov
pusha
js
lock
jno
lea
jecxz
sub
mov
insl
enter
hlt
sub
in
add
addr16
mov
shrl
pop
cs
jecxz
xor
mov
fwait
pusha
call
test
nop
outsl
fdivrs
push
aad
ss
stos
jg
ret
inc
orl
sbb
mov
or
mov
in
cmp
pushl
sbb
into
es
std
dec
dec
shrb
and
sub
cmp
add
xchg
mov
adc
stos
stc
imul
dec
popa
dec
in
fcomps
jae
inc
mov
ljmp
nop
xchg
or
insb
das
pop
dec
push
sub
xchg
call
ficoms
std
out
add
sarb
fdivrs
xchg
mov
ds
out
int
fwait
arpl
xchg
lock
outsb
imul
push
jl
call
mov
xchg
mov
dec
fcmove
push
inc
hlt
in
mov
inc
adc
xchg
fnstenv
stc
and
cltd
sbb
add
int3
and
jg
xchg
sbb
xor
cmp
or
or
pusha
ret
dec
add
popf
lret
sbb
push
add
test
jbe
sbb
ds
mov
or
sub
cmp
test
std
loop
adc
inc
jp
es
cmp
ss
sbb
xchg
je
mov
stos
xchg
jmp
push
add
or
lahf
mov
nop
jp
ss
push
lret
je
add
into
pop
in
pop
cmp
sbb
arpl
pop
push
inc
scas
mov
mov
fistl
inc
sti
inc
lods
inc
inc
mov
movsb
hlt
sub
fimull
in
std
xor
cwtl
xchg
adc
das
sbb
insb
cmp
inc
jbe
pop
inc
jg
mov
and
ds
rorl
lret
bound
in
push
xor
punpckhbw
mov
andb
cmp
cmp
pop
hlt
fsubl
cmp
bound
les
fwait
shrl
outsb
fbld
shl
outsl
ja
push
add
loope
ljmp
out
inc
or
cmp
inc
out
test
or
pushf
int
nop
ret
push
aad
dec
dec
lcall
and
sbb
lea
mov
repz
adc
ja
cmp
into
cmp
shlb
sub
mov
pop
mov
rolb
sbb
xor
mov
or
mov
and
ds
and
jmp
mov
xchg
in
imul
insl
inc
sbb
jg
or
ret
inc
leavew
pop
mov
cmp
pop
add
es
hlt
push
aas
mov
stos
dec
shrl
add
loopne
mov
orl
xlat
in
or
sbb
jmp
inc
or
xor
addr16
xor
xorl
fldcw
ret
add
sbbl
clc
gs
adc
pushf
scas
inc
and
inc
mov
std
add
ret
fstps
ret
cli
mov
adc
outsl
pop
int3
mov
das
mov
out
arpl
outsb
js
cmc
xor
rorl
incb
nop
int3
das
adc
das
inc
mov
dec
cmp
jecxz
ret
adc
repz
cli
fimull
mov
into
push
sub
out
sbb
call
lock
jne
add
xchg
or
fnsetpm(287
pop
mov
mov
jle
push
ret
lcall
ja
lahf
xor
jns
xchg
mov
orb
dec
inc
mov
or
sbb
ja
les
inc
int
mov
sbb
lea
push
cmp
or
and
pop
bound
or
outsl
sub
inc
cmp
inc
fdivrs
fcomps
imul
xchg
adc
push
and
or
gs
jle
fistpll
push
and
outsl
mov
lahf
add
fwait
and
push
pop
das
push
dec
jl
or
movsb
push
sahf
js
in
call
shll
inc
pop
mov
sbb
imul
sub
aaa
add
sbb
fwait
adc
pop
inc
xchg
mov
sbb
adc
mov
loopne
out
fnstenv
push
in
js
adc
repz
pop
mov
sarb
pop
jnp
or
roll
adc
mov
xor
daa
imul
movsl
ds
popf
mov
sub
call
mov
adc
outsb
outsl
scas
sbb
stos
xchg
jmp
iret
loop
not
xchg
into
mov
leave
lret
xor
mov
scas
or
fidivrs
xchg
ret
nop
sub
int3
jno
xor
js
pop
aas
or
jecxz
test
js
add
xor
aam
pop
out
cmpsb
inc
out
cld
fs
test
cmpsb
iret
sub
cmp
je
dec
pop
xchg
or
iret
cltd
rcll
mov
fisttpll
outsb
test
fucom
cli
jb
xchg
mov
out
pushf
dec
cmp
repz
ljmp
shll
push
mov
inc
push
imul
sti
mov
and
out
out
das
sqrtps
addr16
ret
lret
jl
mov
adc
gs
pop
leave
lret
jmp
cwtl
mov
xor
sub
mov
movsb
adc
sbb
inc
adc
inc
cmp
cmp
pop
aam
mov
mov
mov
cmp
mov
or
mov
in
out
arpl
sbb
or
ds
pushf
inc
and
cmp
mov
mov
sbb
jns
mov
fsubrl
enter
mov
enter
inc
and
inc
push
push
mov
mov
jno
lret
lea
add
xchg
lds
ret
pop
decb
xchg
xor
mov
add
iret
add
jnp
test
fcmovnb
mov
mov
sahf
sahf
out
icebp
test
push
daa
push
lea
enter
das
sbb
movsl
je
inc
notb
cmp
ficoml
test
push
leave
add
int
mov
pop
rcr
xor
cmp
mov
sbb
pop
pop
xor
enter
sbb
adc
xchg
outsb
push
mov
aaa
imul
popf
fs
es
int
dec
stc
int
push
sub
ds
sarl
out
scas
add
inc
inc
pop
and
mov
and
mov
pop
mov
leave
sti
lcall
jmp
mov
mov
mov
js
xchg
call
ret
movsb
xlat
cwtl
pop
movb
xchg
or
icebp
mov
xorb
push
je
mulb
or
je
cmc
adc
pop
hlt
add
subb
ja
fs
adc
mov
or
lcall
mov
jae
sub
loop
sub
leave
adc
mov
lock
movb
pop
outsb
sub
mov
mov
dec
shl
je
and
sbbb
popl
mov
jmp
sahf
push
lods
sti
mov
push
stos
imul
aaa
leave
lea
mov
jg
mov
add
lock
pop
ret
and
cli
cmp
mov
imul
sbb
push
das
cltd
nop
fadds
inc
dec
pop
aaa
mov
sub
rorb
cmpsb
mov
nop
jecxz
jle
mov
xchg
mov
xchg
mov
inc
sub
loope
nop
fistpl
mov
cmp
inc
xor
mov
inc
ret
mov
rcrb
adc
das
aam
inc
or
call
pop
jmp
scas
xchg
mov
outsl
cmp
out
or
pop
xlat
mov
leave
stos
loopne
jne
fstps
cmpsb
inc
and
dec
inc
fs
mov
inc
mov
int3
repz
into
fwait
mov
iret
inc
lea
scas
clc
test
hlt
dec
and
add
filds
fsts
mov
out
add
in
pop
and
push
js
xor
cmp
xor
nop
xor
mov
mov
std
ljmp
sub
int
push
lahf
fbld
dec
cwtl
cli
push
push
add
inc
cld
lods
cmp
add
inc
clc
mov
jle
xchg
enter
clc
std
dec
push
int
in
pop
stos
push
mov
ds
fs
test
movsb
mov
daa
jg
or
push
add
inc
pop
pusha
pop
dec
jp
mov
jo
cmp
mov
sti
cld
mov
jnp
mov
cmp
xchg
sbbl
push
xor
loope
add
and
pushf
divb
in
ss
mov
mov
mov
adc
sbb
rol
fdivr
addb
fidivl
lret
in
and
ds
es
movsb
pop
jl
cmp
lret
cmp
cmp
sub
push
mov
clc
cmp
cmp
xchg
sbb
cld
add
bound
inc
adc
add
flds
mov
pop
pop
push
stc
pop
hlt
cmpsl
cld
add
or
and
push
cmp
mov
xor
push
jp
arpl
in
cmpl
sahf
sub
stos
roll
scas
shrb
pop
cmp
leave
push
jp
incb
push
or
add
in
jo
or
rolb
cmp
test
push
mov
or
cmp
mov
imul
jae
cmpsl
or
int3
dec
mov
push
xchg
jmp
push
jg
inc
sub
jge
add
jmp
mov
pop
or
or
xor
mov
or
nop
lret
sbbl
das
imul
mov
sahf
stos
jo
mov
pop
call
cmp
and
mov
fdiv
ja
cmp
sbb
cltd
xor
dec
and
test
inc
pushl
scas
jb
jle
adc
je
or
mov
pop
test
or
xchg
mov
or
sbb
mov
mov
add
sarb
test
aad
push
pop
sbb
sahf
jg
jg
test
cld
jno
in
loop
mov
or
mov
push
aas
push
add
sbb
inc
or
pop
push
rorl
jno
mov
fwait
jp
idivl
jecxz
fsub
dec
push
cvttps2pi
ss
or
mov
incb
adc
fcompl
test
add
sar
mov
or
into
out
outsl
adc
mov
cmc
out
push
inc
cmp
or
or
sbb
cmc
out
out
jb
out
add
jecxz
ret
mov
dec
mov
xor
adc
jp
sarl
stc
test
sbb
gs
ja
call
subl
shlb
cmp
daa
scas
jle
fsubrp
and
movsl
and
mov
mov
inc
lahf
mov
bound
out
add
xlat
shlb
inc
mov
jl
test
xchg
gs
loop
arpl
iret
sbb
inc
mov
cli
jns
mov
in
fwait
pop
movsb
pop
int3
pop
testb
push
das
cmpb
mov
fmuls
data16
pop
xor
or
loope
std
stos
stos
sbb
adc
mov
das
dec
xchg
mov
add
cs
xchg
cwtl
out
loopne
jo
pop
scas
cmc
jmp
sbb
pushf
sbbb
cmp
dec
dec
mov
mov
mov
xchg
push
roll
dec
lods
cmc
ret
mov
test
bound
int
pop
daa
inc
and
scas
sub
mov
mov
dec
fisubrl
xor
insl
outsl
mov
js
sbb
sbb
shl
stos
cmpl
lods
nop
mov
cmp
adc
in
stc
push
scas
sbb
inc
or
add
mov
mov
mov
cmpsl
mov
and
dec
lret
pop
cmp
sbb
je
cli
rorl
mov
inc
cmc
push
cmp
inc
sub
push
push
cmp
jmp
cmp
push
mulb
xchg
inc
dec
mov
in
mov
xchg
cld
lods
mov
pop
and
iret
pop
sub
rclb
and
mov
xchg
xchg
dec
test
jns
sbb
jne
stc
push
push
pusha
pop
xlat
iret
popa
jb
std
inc
jp
push
and
dec
cld
or
rclb
or
bound
data16
repz
rcr
cmc
pushf
scas
shlb
cmp
lods
inc
add
test
std
rclb
lahf
mov
stc
sub
imul
mov
fsubrs
mov
enter
lock
push
mov
lods
sub
js
fld
dec
ficomps
pop
inc
repz
mov
pushf
cmpsl
dec
mov
mov
lahf
jbe
mov
mov
popa
push
adc
into
xchg
hlt
lahf
popa
adc
mov
js
mov
xchg
adc
jne
inc
lds
cwtl
sub
push
repz
xchg
lea
mov
scas
mov
fdivrs
jecxz
push
mov
mov
fildll
adc
fcoms
cmpsl
arpl
dec
scas
popa
push
loope
and
loop
push
jle
cmpsb
or
ds
loop
jbe
adc
out
inc
inc
sub
inc
dec
outsb
pop
imul
cwtl
das
aaa
ror
hlt
stos
movsb
jle
cmp
mov
into
inc
sbbl
aaa
cs
movsb
cmp
cmp
jo
inc
repz
push
test
xchg
mov
cmp
stc
sbb
and
sahf
xchg
aas
sar
xor
mov
popa
cmp
fldt
stos
rorl
pop
les
leave
fdiv
into
in
dec
insb
jb
test
nop
jle
rcll
sar
fdivp
sbb
leave
jns
mov
aaa
das
test
sbbl
sbb
js
sbb
out
ss
ja
mov
xchg
cmpsl
out
mov
jo
dec
and
idivb
add
lcall
rol
inc
fnstenv
fidivrl
mov
jns
dec
subb
aam
push
cld
mov
add
jns
aam
cmp
inc
add
repnz
js
lods
lods
jo
loop
jno
and
out
push
je
fsubs
sub
fdiv
incl
test
push
add
lea
and
xchg
lock
dec
sarl
xchg
pop
sbb
mov
mov
inc
in
pusha
sti
fsubs
mov
jle
dec
lahf
jns
push
fimuls
div
lea
sbb
sub
pop
pop
dec
movsb
repz
or
sti
cmp
mov
mov
out
cmp
push
dec
loop
cs
loop
and
xchg
cmp
and
cli
jbe
dec
ret
mov
push
dec
add
int3
sub
inc
testl
out
fdivrl
jl
dec
xchg
aaa
aam
scas
jnp
xchg
adc
add
mov
scas
loope
test
inc
sbb
int3
jle
orb
movb
mov
imul
mov
cmp
mov
sti
jno
mov
dec
imul
inc
cwtl
mulb
movsb
aam
stc
add
pop
dec
in
fcompl
movsl
dec
daa
sti
loopne
lahf
xchg
mov
mov
popl
push
jge
shlb
aas
out
push
cmc
jmp
test
dec
pop
mov
ja
ret
subl
jbe
dec
imul
call
lcall
fxch
int
fiadds
int
mov
push
stos
cli
andb
cmp
outsl
push
pusha
push
ret
add
or
cwtl
sub
aad
pop
jo
insb
jae
lods
rolb
int3
lds
xor
inc
cmp
cmp
push
cltd
movb
mov
dec
pop
adc
movsl
fldenv
cmp
jp
shlb
cmp
push
cmp
push
mov
push
mov
lods
xchg
cli
lahf
push
movzbl
sbbl
test
enter
sbb
pop
test
shlb
rolb
and
in
add
ljmp
movsb
adc
pop
addl
xlat
add
dec
push
push
repz
sub
xchg
out
std
xor
inc
ds
ret
pop
test
stos
pop
mov
jns
xchg
adc
xlat
ds
std
sub
push
push
mov
pop
jg
mov
dec
adcl
imul
inc
jbe
loopne
add
jns
jmp
test
ds
add
push
fwait
repz
andb
xchg
iret
cmc
cltd
xor
or
lea
mov
inc
xor
in
icebp
lahf
sub
dec
popl
jnp
sti
dec
dec
mov
dec
pushw
insl
sbb
and
enter
sub
cmp
inc
divl
mov
leave
and
mov
inc
out
cmp
rol
push
sbb
leave
mov
cmp
stos
repz
rol
xor
test
rclb
repnz
mov
subb
stos
jbe
add
pushf
inc
std
nop
add
xchg
sti
xchg
cmp
mov
fsubr
in
test
enter
jnp
cs
imul
jl
inc
add
mov
jb
mov
inc
loope
ret
dec
jae
inc
lret
mov
or
cld
lcall
imul
test
add
sbb
pushf
sub
bound
jl
frstor
lcall
enter
or
xor
in
repnz
aad
ljmp
jecxz
mov
push
clc
dec
mov
adc
pop
inc
outsb
adc
testb
jecxz
cmp
subl
inc
adcb
dec
lds
ret
xor
push
xchg
dec
dec
lods
subl
lock
test
or
pushf
lahf
inc
pusha
inc
pop
cmpsb
sti
aas
cmc
test
scas
pop
xor
push
inc
sbbb
repnz
orb
push
mov
test
jno
mov
mov
jnp
and
inc
les
dec
sbb
mov
dec
pop
clc
lret
insb
or
into
test
cmpsb
sbb
add
daa
mov
inc
dec
and
xor
mov
mov
loop
pop
or
or
inc
jo
push
stos
jmp
pop
cmp
mov
dec
or
inc
jle
clc
mov
ret
xchg
mov
cmp
push
mov
sub
js
aas
push
sub
add
hlt
lahf
pop
jbe
or
xchg
mov
popa
loop
xchg
jo
mov
mov
sub
daa
lods
adc
xchg
mov
js
mov
mov
stos
cs
or
clc
popa
adc
cmpsl
push
into
pop
ss
test
in
push
stos
mov
movsb
xor
mov
jne
clc
jnp
mov
imul
cltd
sbb
mov
cmp
enter
xor
sub
fcoms
les
sub
cmpb
mov
cmp
jg
and
pop
pop
je
dec
fstpl
mov
inc
or
sub
test
ds
loop
xor
xor
inc
in
fsubrl
int3
mov
add
sarb
add
nop
jo
add
popf
ss
rcll
lods
in
scas
jl
shll
pop
push
pop
out
lret
ds
fcompl
sti
int
cmpsb
enter
adc
dec
test
push
and
push
sbb
sti
adc
pop
aam
popa
jmp
or
addb
aas
fs
jmp
mov
adc
xchg
rcrb
cwtl
cmp
in
fadds
pop
bound
ds
insb
test
or
sbb
push
cli
xchg
push
int3
mov
out
xchg
dec
mov
popf
pop
hlt
pusha
insb
fcmovnbe
cmpsl
scas
sbb
mov
dec
fists
js
dec
mull
sub
ja
imul
inc
imul
add
or
jecxz
pop
dec
or
sub
pop
lods
mov
aas
outsb
rcl
inc
pop
mov
pop
jl
int3
or
or
lret
int3
lea
or
push
mov
dec
cmc
pop
out
int3
jnp
cmp
mov
dec
xchg
lods
xchg
cmp
daa
and
mov
mov
xor
xchg
dec
or
sbb
mov
mov
sub
sahf
sti
movsl
cmpsl
push
aad
add
loop
stc
sbb
sub
sahf
in
jle
roll
les
pusha
mov
lret
mov
repz
imul
imul
push
popf
ja
outsb
sbbl
lock
cmp
insl
insb
enter
movsl
ror
mov
sub
jae
mov
adc
nop
sbb
xor
dec
xor
push
xor
cmp
adc
inc
mov
dec
inc
add
jno
imul
jo
in
fimuls
adc
push
mov
xor
mov
inc
lahf
cwtl
decb
jge
inc
inc
dec
orb
cmp
pop
lods
js
pop
sub
aam
pop
int
xchg
dec
dec
fstps
pop
in
inc
jl
addr16
bound
cli
xor
test
int3
mov
mov
pusha
pop
test
pop
cmc
int
sbb
and
dec
movsb
mov
bound
aad
cmp
das
cs
das
std
pop
adc
adc
xchg
jge
int
loope
mov
jns
je
fstl
push
in
sahf
mov
mov
mov
in
rcr
jl
into
js
lahf
mov
lods
dec
fwait
cld
pusha
and
rolb
rcrl
pop
test
int
jg
inc
push
xchg
add
cmpsl
jae
and
into
xor
push
clc
sbb
cmp
adcl
push
cmp
inc
and
in
lret
stc
movb
loop
adc
lock
imul
dec
jb
mov
mov
pop
inc
or
mov
lcall
jb
outsb
dec
mov
push
pusha
mov
mov
cmc
outsl
xchg
sub
jge
mov
stos
cmpsb
fidivrs
inc
je
push
mov
mov
and
push
sub
xor
mov
cs
idivb
insl
inc
mov
out
rclb
inc
mov
inc
adc
and
xor
dec
enter
mov
xor
mov
test
pop
dec
test
movl
lret
cmpb
or
stc
pop
jg
add
ja
inc
shrb
jbe
sub
icebp
sub
outsb
add
and
insl
scas
add
cmp
mov
jne
xchg
pop
and
adc
out
dec
mov
lret
dec
mov
pop
fstl
repnz
jnp
aas
hlt
sarb
lret
inc
and
aaa
jns
out
arpl
fs
xor
add
push
sbb
pushf
nop
xor
add
sbb
rol
sub
ds
jae
xchg
or
clc
imul
out
xchg
les
mov
push
je
mull
or
and
add
mov
pop
mov
out
les
pusha
movsb
shr
in
ficompl
in
mov
das
pop
sub
scas
jns
pusha
out
fidivrl
inc
mov
adc
push
incl
and
inc
pop
ljmp
test
dec
int3
inc
mov
xchg
xor
pop
lds
add
cmp
aam
adc
enter
int3
ja
inc
xchg
xchg
pop
jno
mov
mov
fmul
dec
popf
add
dec
std
rcl
jns
push
lret
push
mov
xchg
repz
pop
jae
or
je
clc
xor
mov
adc
mov
incb
mov
call
adc
cmp
pop
cmp
icebp
dec
pop
dec
loop
push
dec
sub
ret
addr16
movsl
outsb
fiaddl
push
dec
stos
sbb
dec
or
add
or
fldcw
loope
mov
fcomi
rcrl
push
repz
dec
adc
lahf
mov
mov
mov
cli
inc
mov
sub
add
icebp
movsl
cwtl
cmp
enter
push
lea
mov
lods
adc
rcll
sub
inc
or
jo
lods
jns
ret
fimull
mov
dec
or
leave
add
and
inc
push
cmc
push
nop
adcl
ret
cmp
xchg
cmc
ljmp
add
dec
xlat
call
les
mov
testb
mov
outsl
xor
dec
daa
addl
mov
adc
test
mov
jno
xchg
inc
cmp
mov
stos
mov
jns
mov
sbb
mov
pushf
aad
pusha
enter
xor
pop
add
xor
and
nop
push
das
adc
cmpsl
add
cmp
and
fsubrs
loop
push
sarl
lahf
jns
jbe
push
lea
arpl
insb
or
shrl
popf
inc
lods
mov
fimuls
xor
popf
nop
jb
push
faddl
mov
lahf
sub
add
leave
xchg
push
fmull
mov
imul
dec
shl
iret
scas
push
inc
jno
scas
cltd
mov
push
sti
into
imul
nop
pushf
cmp
or
inc
mov
jle
mov
mov
xor
dec
jbe
popa
daa
mov
or
xchg
lea
cmp
mov
mov
cmpsl
das
push
leave
jae
cs
movsb
jle
popa
roll
cmp
mov
imul
ljmp
pop
lcall
movsl
lahf
fldl
sub
out
div
rclb
bound
loopne
dec
mov
jge
jne
mov
mov
out
cmpsb
je
xlat
scas
rorl
sub
rcrl
mov
cmp
jne
lock
movsb
adc
call
cmp
xor
pop
sarl
push
push
ficompl
scas
xlat
inc
mov
cltd
add
insl
leave
aaa
cmp
push
cs
sub
int
lcall
mov
loope
xchg
push
enter
and
stos
subb
pop
ds
enter
loope
sbb
push
fs
shrb
hlt
ss
testb
push
popa
pop
or
mov
cld
add
pop
add
xlat
pop
dec
push
cmp
inc
cld
out
imul
movsl
cmp
cmp
call
into
sub
push
insl
es
or
loop
dec
imul
xchg
sbb
addr16
adc
inc
test
icebp
or
enter
test
stos
cmp
and
dec
cmp
jg
loop
fcompl
sub
stos
or
orb
push
sbb
ss
imul
into
mov
inc
enter
sbb
sbb
adc
lock
xchg
je
mov
loope
imul
add
add
mov
fdivl
or
bound
add
sub
or
lret
lret
xchg
lret
push
loope
add
iret
mov
add
mov
push
or
lret
jle
stos
xchg
insb
pop
test
ss
sub
mov
mov
lds
inc
test
xor
int3
iret
rorl
jne
cmp
ret
test
inc
fbld
xchg
rcr
mov
cmpl
jbe
and
lea
sub
push
inc
movsb
mov
lret
push
pop
dec
rcll
jo
jecxz
dec
arpl
or
xor
cmp
aaa
sub
sbb
insl
mov
xchg
movsb
fmuls
jno
lds
cmp
test
mov
sub
jne
fsubrs
mov
ficompl
add
scas
scas
lea
or
aam
pop
pop
push
js
xchg
sub
stc
mov
and
test
xchg
add
aas
cmp
in
icebp
test
incl
add
add
aam
vunpckhps
push
or
mov
ljmp
clc
iret
sbb
inc
mov
adc
sub
or
xchg
jl
bound
cwtl
push
mov
push
outsl
lcall
adc
dec
int
dec
icebp
fldcw
daa
lea
and
lret
jno
add
sbb
xor
pop
lods
pop
pop
es
xor
in
sub
lea
and
int3
add
fwait
out
scas
adcl
ja
lret
xor
xchg
sub
pop
xor
lahf
enter
fists
pop
add
roll
mov
repnz
add
add
das
aas
test
cmp
fiadds
test
std
xchg
fisubrl
imul
mov
pop
jle
out
xchg
movsb
jle
push
inc
sbb
ret
push
in
setp
inc
mov
xchg
ss
xlat
cmp
lods
xorb
or
hlt
leave
cli
mov
push
shlb
cmp
mov
sbb
mov
jl
adc
shll
scas
ret
stc
hlt
xor
enter
aas
into
les
xchg
mov
jge
and
jg
cmp
fs
jle
mov
cmpb
cmp
sbb
xchg
dec
dec
jl
scas
into
in
popa
aad
popf
pop
in
jnp
cmc
xchg
fwait
lret
mov
jge
sub
cmp
and
dec
xchg
dec
adcb
hlt
hlt
arpl
or
cwtl
add
adc
inc
mov
call
sub
jg
je,pn
jbe
jge
mov
push
pop
dec
cmpl
xchg
xchg
rorb
je
fisttpll
pop
sub
cltd
sub
cmp
xor
dec
cmpsl
fwait
cltd
push
sub
cs
mov
jo
jno
add
xor
cmp
xor
mov
xor
mov
lock
sbb
les
mov
rcrb
push
add
les
dec
enter
addl
dec
and
ret
jb
sahf
lret
dec
xor
or
subb
lret
lahf
dec
mov
movb
dec
rol
cmc
divb
in
or
mov
cltd
ss
sub
push
mov
cmp
outsb
mov
xchg
out
outsl
inc
jns
pop
pop
inc
es
scas
mov
fucom
stos
rcrl
pop
dec
and
mov
cwtl
ja
add
add
sub
sub
mov
loope
sbb
sub
inc
fldl
mov
mov
push
sbb
adc
inc
mov
lcall
aas
fs
mov
lds
ficoml
push
loope
movsl
leave
mov
clc
stc
push
xlat
lret
rolb
out
popf
scas
push
rorb
inc
ffreep
and
inc
call
fists
push
xor
dec
addl
outsl
lret
cltd
push
sub
lret
adc
jmp
mov
and
repz
imul
ktestw
jnp
hlt
push
inc
insb
adc
loop
sbb
adcl
fistps
inc
sub
adcl
rcl
xor
pusha
pushf
std
dec
pop
mov
push
adc
jb
jns
dec
mov
inc
and
lahf
mov
mov
test
hlt
or
cli
jae
fwait
mov
enter
cwtl
lea
dec
adc
jae
loopne
mov
cmp
xchg
scas
add
mov
stos
jo
mov
xchg
divl
pop
aas
cmp
cwtl
in
xchg
repz
ret
push
or
movsl
sbb
inc
test
loop
jg
jne
pop
cmp
in
cmp
jecxz
dec
or
dec
enter
push
jbe
sub
movsl
repnz
sbb
jo
outsb
lods
fld
mov
ljmp
or
pop
xor
lock
jmp
mov
dec
or
push
xor
pop
sub
sbb
loopne
xor
xchg
aam
push
mov
cmp
arpl
or
sbb
jmp
pop
ljmp
mov
mov
mov
les
xor
pop
and
and
les
adc
inc
enter
gs
movsb
inc
dec
mov
sbb
shll
test
imul
sahf
jmp
in
sub
divl
int3
sbb
cld
clc
add
mov
or
jl
xchg
pop
push
or
and
mov
dec
mov
or
jnp
inc
xchg
mov
lea
test
loopne
cmp
int3
pop
mov
dec
dec
cmpsl
nop
nop
daa
das
or
sti
push
inc
in
sbb
ss
imul
addr16
test
mov
int3
and
ror
mov
lret
mov
push
jp
std
jmp
inc
hlt
dec
int3
add
and
jecxz
lods
pop
cmc
addr16
and
lret
lret
cmpsb
test
xchg
aaa
or
sarb
int
rcrb
xchg
jecxz
sub
mov
push
inc
pop
dec
adc
das
inc
out
jne
dec
or
lods
mov
mov
std
sti
mov
add
test
sub
push
adc
push
xorl
push
stos
stos
push
popa
adc
cmp
andl
lret
xchg
inc
sahf
and
addr16
sbb
push
adc
fldl
sbb
or
nop
leave
fstps
rcrb
mov
cltd
aam
int3
mov
cmp
cmp
cwtl
roll
or
jb
mov
push
dec
dec
mov
fcoml
inc
push
into
fsubrs
xchg
and
mov
jg
cmp
sti
int3
adc
inc
ret
add
mov
mov
ds
loop
fldenv
mov
lcall
popa
sbb
add
int3
mov
jmp
popf
dec
jno
mov
xor
ror
sbb
xor
sbb
adc
add
add
pop
scas
or
int3
test
call
add
std
cmp
lcall
test
pop
pop
pop
mov
sub
mov
sbb
int
dec
dec
out
pop
jmp
and
stos
in
dec
fstl
xchg
gs
xor
data16
mov
iret
xchg
jecxz
dec
test
iret
repz
pushf
or
lea
jl
repnz
inc
das
mov
cwtl
adc
enter
rcrb
hlt
sub
aam
pop
adc
rclb
and
pop
inc
push
sub
mov
push
jp
dec
jg
test
jb
jne
jnp
shr
dec
leave
mov
popa
push
dec
dec
andl
dec
fdivrs
mov
jns
bswap
popa
jmp
rorl
js
addl
mov
push
stos
cwtl
pusha
sahf
push
movsb
fwait
enter
imul
mov
mov
jg
sub
jne
inc
xor
and
inc
test
mov
movsl
ja
push
push
sets
ss
hlt
sti
fnstenv
xchg
nop
out
bnd
add
js
out
ss
jae
adc
fprem1
cmpsl
cmp
dec
mov
sbb
imul
or
paddusw
aad
push
popa
leave
shl
dec
hlt
mov
mov
vpsrad
dec
lods
fisubrl
jp
xchg
inc
mov
aam
push
out
stos
pop
roll
xor
pop
jg
mov
cmpl
xor
or
ret
and
out
cmpsl
sub
xchg
loop
add
fildll
dec
leave
ret
xchg
test
mov
nop
push
mov
jle
jge
mov
cli
fwait
xorl
add
popf
aad
pop
jnp
cmp
sbb
pop
clc
loopne
jns
jge
cmp
pop
mov
dec
les
dec
outsl
jecxz
inc
cmpsl
add
sbb
js
pop
int3
fisubrl
dec
mov
in
stos
shlb
xor
lods
push
pop
pop
test
and
lret
cld
out
aas
inc
adc
xchg
lahf
adc
in
jns
mov
mov
ds
popf
add
mov
insb
xlat
push
ret
jle
xor
into
pop
insl
idiv
xchg
fildl
cmp
mov
ror
popl
loope
xor
inc
mov
call
leave
lea
add
sbb
fsubl
mov
push
ret
add
add
enter
cmp
inc
hlt
add
inc
dec
xor
jno
adc
outsb
mov
outsl
and
push
mov
jl
add
add
dec
addb
inc
loope
push
stos
push
hlt
lret
jg
mov
or
xchg
pop
daa
sub
mov
mov
iret
fdivs
sarl
jne
xchg
sub
subl
call
test
iret
sbb
push
push
arpl
setns
aaa
jecxz
test
push
adc
mov
xchg
pop
push
bound
lock
mov
mov
cmp
jmp
or
popf
js
xchg
xor
lds
leave
add
dec
cmp
push
in
popf
in
popa
das
test
adc
pop
jns
mov
mov
jns
cmp
in
in
fisubs
bound
inc
mov
jl
mov
mov
sbb
leave
lds
mov
mov
pop
incb
rcr
lret
or
and
jecxz
dec
sbb
inc
lcall
out
test
mov
push
xor
call
clc
cmc
lahf
inc
xor
aas
and
mov
out
out
lods
fwait
or
aad
cvttps2pi
test
out
xchg
fists
shrb
inc
bound
mov
stos
sbb
xchg
jb
stos
jle
andb
mov
inc
data16
mov
xchg
jecxz
sahf
dec
into
nop
mov
cmpsb
testb
mov
cwtl
call
enter
imul
out
jno
ror
jp,pn
push
xor
push
cmpsb
cmp
adc
and
xor
sbb
inc
pop
xor
mov
ret
clc
mov
and
xchg
lret
jmp
mov
pop
dec
shrb
mov
push
lods
pop
daa
setl
inc
leave
push
dec
insb
xor
mov
rolb
mov
xchg
xchg
insb
cmp
pop
adc
jae
in
add
into
mov
pop
cmpsb
mov
je
lret
jmp
mov
dec
dec
cltd
jno
jne
dec
mov
ret
or
and
jbe
je
movsb
mov
add
popl
rolb
stos
cmp
addr16
popa
cmp
movsl
and
jo
filds
mov
out
pop
sub
ds
stc
inc
jmp
cmp
sub
pop
pusha
sti
clc
inc
nop
ss
cmp
std
add
pusha
pop
lea
pop
rcrb
push
jae
fs
test
dec
scas
int3
movsb
loop
and
mov
pop
sub
cmpsl
movsl
add
inc
cmp
dec
adcl
or
cmp
pop
mov
addb
jno
sahf
js
cmp
ljmp
movsl
dec
sar
lods
stos
movsb
aas
sbb
ffree
lret
scas
int
loope
inc
inc
sub
jge
mov
jl
fwait
lahf
push
in
mov
repnz
push
cmp
sbb
mov
lods
cmp
pop
fimull
push
aam
sub
fcompl
and
iret
mov
fnstcw
adc
lods
lock
stos
nop
bound
sbb
ret
dec
cmp
sarl
test
mov
dec
or
pop
mov
or
mov
and
pop
loopne
pop
sub
add
push
movsb
inc
mov
push
pusha
push
pusha
jecxz
js
jge
fcomi
sbb
or
leave
dec
lret
std
cmp
sbb
call
push
adc
das
into
ss
lahf
dec
push
dec
cltd
cld
mov
add
or
add
jb
or
dec
divl
xchg
sub
inc
adc
add
and
scas
fwait
and
fbld
jecxz
cmp
cmp
fsubrs
fsubs
les
xchg
shrl
aas
mov
imul
cmpsb
subl
movsb
pop
incb
imul
and
xchg
sub
push
sub
or
jmp
jno
inc
stos
dec
and
decl
data16
inc
xor
dec
push
cld
xor
out
pop
test
les
adc
adc
xchg
mov
mov
cmp
push
jmp
clc
jl
push
pop
pop
lret
inc
popf
cmp
popl
xchg
orl
in
mov
xor
pop
cmp
push
pop
test
imul
and
adc
sar
leave
jbe
or
leave
test
hlt
dec
pop
pushl
stc
cmp
dec
cld
pop
mov
inc
shrl
jbe
push
and
lds
js
dec
mov
rolb
out
lret
pop
aas
xchg
ja
xchg
adc
xlat
jmp
push
aas
sbb
fldl
mov
mov
rclb
insb
popa
mov
jp
addb
cmpsb
push
fists
xor
les
inc
movsb
jae
cmpsl
shr
xchg
mov
loope
bound
sarl
leave
arpl
sbb
out
mov
mov
inc
adcb
pop
loop
xor
rcrl
pop
int
in
fwait
push
mov
icebp
sub
in
inc
cltd
in
push
int3
mov
lret
jo
and
sbbl
repz
push
mov
mov
adc
testb
xchg
in
lock
jne
ret
push
and
pop
mov
mov
popf
gs
bound
bound
lea
sub
shl
sahf
mov
insl
push
lret
inc
pop
dec
stos
adc
mov
inc
pushf
imul
jg
inc
sti
cmp
jp
cltd
popa
stc
pop
sbb
in
add
inc
sbb
repz
dec
push
cld
jb
xor
pop
mov
js
fs
cmp
pop
jle
add
testl
add
pushf
or
push
clc
cmp
sahf
aas
jg
xchg
in
inc
test
inc
mov
int
dec
cmc
lds
ljmp
inc
pop
sub
adcl
sbb
lods
cwtl
jno
sbb
sti
dec
mov
cmpsb
xchg
cmpl
dec
add
or
test
cmpsl
decb
rcl
lret
mov
dec
pushl
iret
mov
mov
stc
cmpsl
xchg
cmpsb
dec
xlat
mov
lock
mov
scas
add
test
jb
xor
int3
sahf
sbb
add
pushl
mov
in
out
lcall
enter
adc
mov
int
pop
scas
add
imulb
shll
push
movsb
inc
pop
pop
rorb
fbld
sbb
and
movsl
or
test
stos
pop
fnsave
and
pop
sbb
mov
neg
inc
mov
ljmp
out
addl
pushw
xchg
fs
fcom
faddl
jb
xor
lods
repz
xor
inc
mov
in
out
lcall
dec
dec
movsl
nop
clc
push
adc
lea
xchg
add
iret
mov
insb
jns
jge
outsb
mov
jae
mov
test
cs
imul
subb
repz
fisubl
xrelease
test
sbb
movsl
and
lea
test
subl
fcmove
inc
dec
push
push
imul
popf
addb
mov
shl
and
add
mov
fsubr
inc
fcmovnbe
scas
cli
test
adc
fidivrl
dec
orb
jno
jg
xor
sub
imul
stos
mov
pop
and
mov
xor
jo
xor
or
jmp
into
dec
dec
push
mov
icebp
clc
jle
sahf
ljmp
cltd
sbb
mov
push
mov
jae
inc
je
xchg
fwait
es
cltd
jmp
cmp
lods
mov
xchg
sbbl
jg
mov
test
mov
lea
mov
roll
incl
in
sub
mov
adc
stos
pop
cmpsl
push
enter
icebp
mov
dec
mov
mov
mov
push
cs
pop
adc
jle
mov
and
push
pusha
ss
loope
outsb
das
cmpl
ret
mov
jnp
mov
jnp
into
movsl
lret
xchg
inc
lret
addl
addr16
push
insl
ja
mov
mov
push
ja
sub
imul
pop
cmp
dec
jg
jle
mov
call
and
enter
xor
test
dec
jle
inc
sbb
subl
sub
cs
shr
mov
adc
push
inc
jnp
lock
push
jmp
push
xor
dec
dec
aam
cmp
inc
push
xlat
ja
mov
sbb
shll
jbe
test
daa
cmp
mov
xchg
fidivs
mov
jmp
cmp
xor
enter
aam
xchg
sub
cwtl
jmp
xlat
jae
add
cltd
mov
and
in
call
dec
test
inc
int3
sbb
les
jo
lock
mov
jp
cmp
fcomi
movb
lods
inc
mov
push
clc
push
jnp
test
fbstp
cmp
xchg
stc
dec
mov
fs
dec
fisubs
mov
add
dec
and
mov
sub
inc
jae
push
dec
pop
mov
cmovno
jg
sti
enter
lods
inc
xchg
pop
push
es
lret
enter
int
jbe
outsb
xchg
adc
inc
fucomip
filds
adc
jge
pop
dec
sbb
ss
cld
mov
mov
in
xchg
jle
sbb
xor
mov
or
push
scas
insl
mov
pop
stc
push
jns
inc
das
dec
pop
das
sbb
xor
mov
push
imul
or
test
mov
sub
adc
pop
adc
xor
ljmp
dec
fs
dec
mov
ljmp
jbe
scas
pop
push
dec
add
mov
cwtl
add
ja
mov
xchg
lods
pop
popa
jo
dec
cmp
test
jp
inc
mov
sub
stos
imul
lods
push
sub
es
pop
and
aam
leave
enter
jae
pushf
jb
mov
or
sub
pusha
jge
sub
jp
xchg
int3
sub
xchg
cltd
pop
sbb
icebp
mov
pop
add
mov
arpl
les
in
cmp
lods
mov
push
out
lret
ja
sub
popf
cmp
push
stos
pop
adc
dec
pop
cli
push
adcl
ret
push
popf
repnz
add
andl
jecxz
iret
mov
xor
jb
jmp
and
aam
mov
xor
je
xor
xor
outsl
lock
or
mov
dec
cmp
cltd
sub
sub
push
stos
test
test
cmpsl
mov
lea
push
jmp
lea
in
lds
sub
mov
inc
shrl
repz
cmp
adc
imul
pop
bound
xchg
inc
test
jl
mov
call
xchg
adc
lahf
xchg
imul
pop
adc
dec
cmp
in
ja
fs
shl
dec
xor
sbb
jae
add
push
cld
imul
les
mov
lret
shrb
push
sbb
in
and
pop
cmp
shrl
mov
cli
xor
jecxz
repz
mov
stc
mov
imul
adc
pop
outsb
and
shlb
inc
lods
mulb
jbe
jge
pushf
mov
fs
inc
pop
out
jno
adc
xor
xchg
fisubrl
jecxz
cmp
mov
enter
addr16
mov
xchg
sub
addb
xor
push
sub
mov
scas
test
and
je
or
gs
stos
sbb
inc
enter
in
jmp
aas
out
pop
int3
or
and
xor
mov
fists
cmp
mov
jne
mov
push
popf
mov
dec
push
fdivrl
mov
mov
pop
leave
lods
out
ret
xor
lods
mov
sub
push
inc
or
pop
mov
insb
or
sub
stc
cmp
add
add
cmc
cmp
add
mov
nop
add
cmp
sbb
imul
jmp
movsb
repz
js
mov
shll
or
leave
ret
mov
inc
cmp
lret
mov
imul
std
sbb
ficoml
pop
outsb
push
pop
mov
push
inc
inc
xchg
aam
adc
push
add
popf
in
lock
pop
mov
pop
push
xor
adc
sbb
mov
pop
lods
jne
cwtl
xor
arpl
or
adc
in
enter
jbe
push
lods
rcrb
scas
pop
inc
jo
lcall
add
cltd
xchg
ja
or
jnp
fimuls
pop
and
push
cwtl
dec
mov
and
sub
aas
arpl
stos
pop
dec
lret
nop
nop
test
lret
mov
imul
aas
sbb
jl
inc
add
fisubs
inc
and
insb
jo
and
jb
rcr
movsb
jae
add
xchg
clc
or
cmpsb
mov
xor
stc
xor
mov
and
pop
test
xor
enter
arpl
scas
mov
xchg
rolb
or
lret
xchg
into
insb
or
jmp
mov
shll
cmp
add
loop
iret
pop
cmp
add
add
outsl
rolb
shll
enter
mov
xor
inc
push
add
jno
cmpsl
pop
scas
add
or
enter
sti
cmc
xchg
cmp
mov
out
aam
mov
xchg
add
ret
loope
sub
cmp
sub
sbb
jle
inc
xor
aam
scas
push
cmp
sti
lods
pop
adc
jb
add
add
test
or
mov
jnp
mov
lcall
mov
mov
dec
rcrl
nop
or
cmc
sub
dec
xchg
or
sub
jecxz
sahf
in
cs
mov
add
xchg
lret
mov
dec
adc
push
xor
cmp
xchg
rcrb
addb
adc
xor
adc
push
cmpsl
mov
push
jecxz
mov
cltd
testl
adc
daa
jb
cltd
mov
lret
sbb
add
cmp
decl
pop
jp,pn
cmp
mov
js
les
stos
ss
sbb
jle
fcmovnbe
bound
rclb
sti
inc
stos
js
inc
movb
iret
fadds
std
sbb
jp
cwtl
jbe
cltd
enter
movsb
sub
cmp
mov
cs
ret
cmp
cli
add
dec
sub
outsl
jns
iret
push
lahf
mov
add
outsb
xor
ror
xor
dec
testl
aam
inc
jmp
shll
or
xlat
or
jnp
inc
xchg
jns
aaa
xchg
out
inc
mov
aas
inc
push
push
or
int
loopne
test
movsl
dec
sub
insl
push
xchg
mov
clc
cmp
push
testl
push
pushf
int3
xchg
lret
test
das
ror
aad
mov
inc
rorl
int
das
fmul
jo
mov
mov
xchg
push
dec
incl
lods
push
data16
mov
lds
pop
push
pop
aas
popl
int3
mov
cmp
pusha
mov
dec
pop
adc
dec
leave
cmp
push
or
mov
shlw
lock
xlat
nop
int3
inc
lea
arpl
lods
mov
cmp
and
inc
test
add
mov
stos
aas
cli
xlat
pusha
cwtl
ds
or
inc
or
les
sbb
je
adc
loop
sbb
nop
adc
pop
test
inc
insb
xor
rcrl
enter
pop
pop
cltd
or
fs
pop
dec
in
xchg
bound
data16
inc
data16
cmc
rorl
cs
or
leave
cmc
xchg
cmpsb
es
popf
push
jecxz
call
lret
in
inc
push
push
imul
cld
pop
pop
add
and
enter
loopne
into
adc
lret
mov
sub
mov
je
mov
enter
enter
mov
lret
pop
add
mov
daa
cltd
fscale
pop
popf
clc
mov
mov
hlt
inc
adc
push
adc
adc
jmp
dec
mov
push
cmp
ljmp
sahf
jl
inc
sub
mov
insl
inc
nop
das
sbb
in
ljmp
adc
adc
dec
xchg
or
add
push
leave
enter
or
sbb
inc
cmp
mov
fstpt
mov
sub
add
sar
cmp
cmpsb
add
call
cmp
ja
lock
test
repz
push
mov
popf
cwtl
pop
jmp
sbb
movsb
testb
jns
pop
jge
mov
mov
sbb
icebp
in
sbb
movsb
rcrl
xchg
lret
or
scas
xchg
push
sbb
fxch
or
xchg
mov
inc
mov
es
or
jg
jnp
pop
and
cld
or
cmp
mov
xchg
push
es
push
push
in
in
das
lods
or
rorl
xchg
and
int
cmp
adc
fs
xchg
fbld
mov
jl
mov
jbe
neg
jno
or
bound
lret
or
sahf
rorl
mov
push
sbb
jg
dec
scas
add
add
jo
xchg
inc
aas
sahf
int
pop
pop
ret
cmp
xor
and
push
int
mov
jmp
jae
int3
repz
mov
mov
lea
test
xor
fstl
xorl
push
mov
mov
dec
xchg
push
outsl
sub
and
xor
mov
pop
jmp
cmp
push
xlat
pop
cli
sbb
adcb
cli
cmp
mov
pop
jbe
movsl
negb
stos
jge
or
cltd
push
mov
loope
outsb
movsb
xchg
or
sbb
inc
fsubrp
flds
insb
cmp
push
jne
add
jg
pop
fcmovb
lods
es
pop
mov
sub
mov
mov
jmp
in
mov
add
mov
ds
and
test
pop
out
jp
inc
xchg
inc
mov
jae
fsubrp
xchg
xchg
sbb
bound
cmc
fldl
out
mov
sysret
jp
cmp
mov
lock
or
jg
sub
jl
and
xchg
out
or
mov
jns
lret
dec
aam
js
push
mov
xchg
xchg
mov
enter
into
stc
pop
repz
cmp
int3
sbbb
pop
fildll
and
js
cmpl
aas
mov
xchg
fildll
jmp
add
pushf
jg
outsb
sbb
sarb
sahf
jecxz
incb
mov
insl
mov
jl
dec
mov
mov
sub
jbe
sbb
sbb
inc
jbe
xor
xchg
lahf
dec
xor
addr16
int3
cwtl
jbe
cmp
inc
rcr
pop
xchg
inc
push
cwtl
xchg
fiaddl
fwait
dec
cmp
cmp
dec
movsb
pusha
imul
testb
push
mov
cld
sbb
jns
sub
mov
sti
xor
mov
xor
arpl
add
pusha
ss
jge
and
test
cld
adc
mov
test
xchg
fwait
mov
and
ret
mov
pop
insl
inc
dec
cld
cmp
fwait
imul
popf
dec
cmc
mov
cld
stos
dec
dec
jne
or
push
imul
fs
mov
es
mov
imul
mov
data16
fildl
jl
push
pop
mov
push
push
inc
and
jl
mov
loope
xor
rcll
mov
jno
mov
sahf
dec
mov
mov
daa
mov
aam
and
pop
sbb
enter
or
mov
pushaw
mov
enter
sbb
dec
mov
and
xlat
add
and
inc
mov
jg
xchg
jmp
fcoml
shl
jno
mov
sahf
lea
mov
ja
decb
mov
sub
dec
mov
mov
mov
into
test
sbb
shl
lret
add
jo
aam
jl
jl
cmc
xor
cmpsl
ja
loopne
cmp
leave
daa
xor
lock
lock
push
pop
es
push
or
fnsave
and
int
push
gs
inc
cmc
int3
fwait
cmp
add
stos
lods
xchg
test
ss
push
xchg
mov
cwtl
clc
sub
movsb
pop
mov
mov
mov
movsl
rclb
leave
ds
clc
xor
mov
inc
in
push
xor
int3
add
stos
loopne
xor
cs
xchg
inc
mov
fs
int3
hlt
stos
in
push
jl
popa
xchg
popa
cs
and
imul
daa
js
sbb
int
and
xor
push
test
jo
mov
add
jo
xchg
shl
lahf
jge
cmpsl
sub
insb
or
std
dec
pop
dec
fsubr
xchg
arpl
mov
cwtl
jp
fistl
js
je
call
stos
xchg
jp
xor
sbb
jns
cmpsb
mov
sbb
mov
and
movhps
aad
jns
xchg
cmp
lahf
fsubr
and
int
hlt
ret
pop
and
mov
mov
or
mov
cld
inc
mov
inc
sar
lock
inc
out
in
ljmp
xchg
lahf
ret
ds
mov
pop
nop
push
out
pop
adc
in
sbb
subl
sbb
inc
and
loopne
push
mov
jo
loop
xor
enter
jne
lret
sahf
int3
xor
jnp
in
or
push
push
jnp
dec
adc
sbb
dec
inc
dec
in
aad
inc
cmp
pop
divb
cmp
das
mov
mov
xchg
pop
xor
bound
imul
iret
rclb
nop
add
sbb
xor
push
fdiv
push
pop
pushf
xchg
out
xor
inc
mov
test
dec
dec
jnp
inc
sub
push
sub
lds
stc
cmpsb
jl
mov
push
inc
jmp
mov
int3
pop
flds
mov
rorb
rorb
pop
loope
cwtl
test
aam
push
mov
mov
in
sbb
subb
imul
insl
ret
ss
mov
mov
push
sbb
jae
gs
cmp
jno
stos
in
cwtl
rclb
sahf
push
push
xor
fcom
or
leave
popa
xchg
enter
inc
test
mov
jns
mov
pushl
int3
fcmovne
cmpsb
inc
fcmovnb
sub
mov
sbb
mov
mov
xchg
jge
ss
les
vcvtsd2ss
lock
inc
movsl
add
sti
addl
int
xchg
adc
imul
aaa
aad
fucom
fbld
mov
stc
cmpsb
mov
mov
and
ja
gs
mov
mov
and
mov
mov
inc
ja
repnz
mov
aaa
push
addl
addr16
inc
out
stos
or
mov
inc
pop
jo
pop
and
lds
je
inc
stc
lret
enter
mov
dec
scas
mov
push
xchg
adc
mov
movl
loope
repz
shrl
sub
push
pop
bound
adc
dec
pop
bound
addl
fistpll
ret
stos
add
test
or
add
dec
xchg
out
pop
dec
stos
cmp
jnp
add
dec
call
dec
int
call
pop
add
loop
and
and
into
dec
cmpsb
movsb
and
cmp
cmp
xor
push
adc
lahf
mov
sbb
enter
pop
sub
cmp
aaa
fwait
inc
mov
movsb
call
or
je
outsl
add
cmp
addr16
mov
pop
mov
or
pop
inc
scas
mov
push
aad
adc
xchg
mov
cmp
test
xor
sbb
push
inc
fidivrl
cmp
stos
aas
cli
add
dec
ss
ret
and
pop
rorb
xor
in
out
jge
fwait
jns
stos
xor
cmpsl
dec
adc
pop
mov
in
adc
jl
mov
mov
mov
xchg
ud1
cmp
and
ret
shrl
popf
mov
rcr
aas
sbb
fsubp
inc
imulb
fimull
pop
sbb
sub
cmpsb
cmp
int3
adc
inc
int
pop
adc
jp
sbb
test
xchg
shrb
push
dec
div
adc
mov
inc
std
push
xchg
dec
mov
jno
xor
dec
test
popf
jle
and
push
mov
or
and
xor
test
push
lods
cli
ja
jnp
scas
jg
movsl
add
cmp
inc
or
roll
and
sub
fld
test
rorl
sub
mov
stc
xlat
bound
enter
rcrl
test
sub
push
stos
cmp
mov
movsb
push
pop
cmp
and
stos
bound
loop
out
stc
pop
mov
out
lret
or
pop
incl
fidivl
jae
sub
jge
inc
in
enter
sbb
push
push
pop
ss
mov
inc
cmp
faddl
lret
in
push
inc
fdivrs
cmp
push
popf
loope
lret
fmull
in
adc
pop
loop
inc
pop
das
out
incl
jge
mov
add
mov
mov
mov
mov
clc
mov
sub
mov
sbb
lea
sub
imul
shufps
xchg
cmp
das
mov
rclb
imul
fucomp
jmp
int3
jmp
or
mov
xor
sti
fmul
and
dec
xchg
loop
aam
icebp
add
cmp
mov
adc
pop
add
or
xlat
testb
mov
jnp
andb
add
mov
inc
out
push
aad
adc
stos
mov
stc
mov
mov
jb
sub
sbb
lahf
add
pop
cli
xor
jbe
xchg
cmc
popa
pop
or
dec
iret
push
cmc
js
fisubrs
or
mov
cmpsl
inc
imul
gs
cli
test
loop
sub
in
dec
inc
add
push
pusha
aad
dec
pop
jmp
push
adcl
push
cmp
jmp
es
inc
xor
cli
inc
xchg
aas
xchg
xor
mov
sub
pop
inc
fs
push
cmpsl
cmpsb
xchg
xchg
or
adc
jo
adc
shrl
add
cmp
scas
lret
inc
adc
icebp
sbb
and
inc
inc
dec
or
fs
push
inc
sub
test
push
popa
mov
push
jl
lret
out
ja
mov
cmpsl
push
loope
sub
jno
xchg
inc
jb
aam
jle
xor
or
mov
add
cld
xchg
jne
dec
jne
mov
add
in
roll
in
pop
fwait
inc
loop
push
lret
pop
push
outsb
sbb
jb
stos
push
dec
retw
rcrb
cmp
aaa
jb
and
pusha
and
rolb
cmc
mov
leave
pop
and
outsb
and
js
and
mov
loope
rorb
mov
xlat
mov
aad
iret
pop
mov
sub
loope
push
lret
lcall
xlat
mov
test
mov
sub
les
jbe
dec
jb
xor
lahf
push
cmp
add
or
mov
repz
xorl
test
mov
jae
scas
add
mov
rorb
push
gs
cld
or
add
gs
shlb
icebp
lock
lret
lods
loope
loope
jl
sub
mov
movsb
mov
mov
pop
push
add
pop
dec
dec
adc
insb
add
shrb
out
pop
scas
enter
fwait
icebp
movl
mov
push
add
jp
mov
arpl
pop
clc
out
dec
sub
hlt
dec
inc
test
mov
cmpb
mov
test
iret
mov
pop
faddp
popf
es
or
lahf
orl
in
iret
sub
aas
rcrl
ss
mov
sti
subb
and
dec
xchg
cld
mov
lods
jae
xchg
inc
aas
mov
and
jl
icebp
mov
xchg
xor
into
mov
sub
mov
bswap
and
ja,pt
xchg
cmpsl
stos
jae
aam
rolb
push
xor
pushf
xchg
arpl
incl
lock
shll
inc
sub
sbb
sbb
xor
call
stos
sub
lods
xlat
test
dec
lcall
pusha
sub
fisttpl
mov
jno
inc
aad
mov
mov
jp
lret
mov
pop
ss
aam
inc
out
in
jae
jbe
mov
cld
pusha
in
jle
sub
cwtl
mov
inc
inc
je
cmp
or
mov
mov
inc
xchg
int3
add
adc
xor
push
sbb
mov
das
pushf
mov
hlt
mov
pop
xchg
xor
xor
lods
jbe
push
mov
cmp
test
repz
sbb
or
or
push
aam
or
shll
inc
je
dec
std
sbb
jmp
cmp
imul
push
dec
push
mov
hlt
in
icebp
scas
stc
mov
cmpsl
les
enter
cwtl
pop
cmp
in
adc
cs
and
fildl
mov
dec
inc
ja
insl
jae
mov
mov
pop
push
cwtl
jno
stos
sbbl
push
mov
pop
xchg
dec
pushl
sbb
jb
mov
mov
sub
lods
mov
add
sbbl
mov
mov
cmpsb
js
std
pop
js
jg
jp
xor
fwait
outsl
xor
inc
push
pop
dec
les
test
stos
arpl
pop
shlb
pop
icebp
dec
sub
xchg
rolb
sub
imull
inc
xchg
js
mov
stos
add
lods
icebp
mov
pop
rcr
jnp
ret
jns
mov
testb
addr16
mov
cmpsl
enter
mov
xchg
xchg
cmp
pop
popf
adc
cli
adc
nop
dec
push
mov
int3
dec
sbb
jle
mov
jp
ja
movsl
jp
or
pop
mov
rorb
dec
or
push
lret
out
xchg
imul
dec
jb
sub
or
aam
aad
into
cld
test
mov
push
or
mov
sbb
lods
jb
jnp
fisttpl
dec
cmp
popa
xor
sbb
dec
rol
int3
pop
lods
out
jo
mov
mov
adc
mov
rorb
test
lds
es
adc
push
mov
ljmp
les
aas
xor
aaa
mov
sbb
insl
cmp
push
and
inc
addl
lea
and
cmp
imul
fucom
adc
bound
fdivp
push
inc
mov
push
mov
xchg
sarl
test
cmp
ror
mov
push
aad
and
sbb
scas
das
add
sub
mov
xor
cmp
stos
scas
sbb
xchg
jg
out
push
cmp
mov
fadd
jp
leave
cli
ret
xlat
dec
cmp
or
sarb
cmpsl
jle
lahf
add
outsb
jmp
dec
inc
ds
push
mov
mov
cwtl
mov
cmp
sbb
sbb
add
cli
nop
push
jge
xor
loopne
rcrb
cwtl
sahf
cwtl
inc
sbb
popf
nop
add
push
mov
imul
cmp
imul
cmpb
mov
dec
inc
xor
and
stos
sub
decl
pop
mov
inc
dec
lea
inc
es
pushl
inc
cmp
std
mov
inc
cmp
js
jg
sarl
cmp
mov
daa
inc
inc
shrl
dec
cmp
fsubl
sbb
ficomps
pop
popl
mov
lods
inc
stos
fwait
push
and
cmp
mov
pusha
xchg
push
adcb
rcrb
cmc
aad
mov
bound
inc
outsb
or
dec
mov
out
dec
loope
lods
mov
cmpsl
jno
push
outsl
imul
es
mov
pop
cmc
iret
mov
fwait
or
push
fildl
add
fildl
add
sbb
pop
data16
mov
jle
out
mov
std
dec
andl
push
mov
dec
mov
dec
lcall
jecxz
add
imul
adc
rcrb
jno
mov
mov
es
ss
mov
push
jle
loope
cvtpi2ps
enter
mov
sbb
mov
aam
call
aas
jmp
push
test
lods
or
jecxz
fwait
or
outsb
push
push
mov
in
repz
cmp
rcl
push
cwtl
mov
jl
fildl
inc
stos
loop
out
leave
mov
outsb
dec
cmc
insb
movsb
xor
adc
add
loop
insl
repnz
cmp
mov
pusha
fldcw
andl
in
sti
pop
sub
mov
mov
subb
repnz
sbb
xlat
fsubs
sbb
pop
lds
xchg
sub
push
pusha
sbb
inc
dec
je
sti
shlb
hlt
dec
xor
cmpsb
add
stos
jg
int3
push
jmp
loop
notl
cwtl
xchg
and
dec
int
sti
ret
and
push
insl
rcll
js
and
shlb
insb
ss
and
mov
jle
mov
les
leave
dec
mov
insb
fildl
mov
nop
add
and
in
cmpsl
sarl
inc
xor
jbe
add
or
mov
dec
imul
push
repz
shrb
cmpsb
jg
mov
fcompl
loopne
es
jo
xor
pushf
repz
add
xchg
sbb
adc
mov
mov
jnp
push
or
dec
ret
movsb
fs
arpl
mov
andb
or
push
push
add
mov
push
std
mov
iret
data16
testb
add
add
push
loop
push
imul
pop
inc
jge
in
std
rorb
je
into
xlat
sub
and
and
aaa
xchg
leave
test
dec
imul
push
mov
scas
ja
inc
mov
mov
and
les
sub
inc
cmp
pusha
xchg
mov
or
in
mov
and
lahf
push
adc
or
xor
xchg
loope
sbb
push
bnd
out
stc
stc
fisubrs
mov
xchg
xchg
sub
ret
add
in
sbb
pusha
xchg
and
bound
out
lods
mov
aaa
adc
or
inc
xor
mov
std
add
es
inc
roll
lods
or
aam
sbb
popa
scas
xchg
inc
inc
int3
push
mulb
loop
mov
sub
mov
adc
and
mov
aas
popf
add
in
mov
xor
push
mov
shrb
negl
push
fsubrs
rcrl
xor
ret
mov
and
or
mov
aam
sub
sbb
mov
fildl
imul
fadd
sub
jmp
dec
mov
sbb
jle
inc
dec
sub
cmpsl
das
imul
xchg
sub
mov
cltd
imul
jae
loope
scas
cld
push
hlt
lret
adc
jb
xor
mov
push
jecxz
ret
cld
lret
dec
sub
jne
imul
cltd
pop
mov
add
cltd
arpl
ret
fwait
bound
in
pop
shl
sub
popf
aaa
and
or
mov
lds
mov
jno
fsubs
arpl
lret
fistps
push
orb
in
mov
cmp
mov
outsl
cwtl
out
pop
push
inc
push
xchg
push
or
push
nop
add
test
dec
pusha
sub
lret
jbe
lret
mov
and
in
xor
pop
fs
cmp
out
dec
ror
dec
jo
inc
jnp
pop
sbb
cmpsl
sbb
outsl
or
mov
xor
sbb
leave
add
cmp
add
rol
mov
call
mov
mov
or
inc
repnz
and
outsl
pop
in
sbb
dec
and
lret
cmpsb
mov
sub
mov
ss
adc
imul
in
pop
enter
pop
mov
arpl
call
arpl
and
jbe
add
or
jmp
enter
addr16
ja
xchg
clc
dec
and
cmpsb
pushf
jg
add
mov
inc
inc
sub
mov
dec
mov
push
push
inc
mov
add
aas
cmp
add
xchg
sbb
adc
pop
repz
gs
cmpsl
movsb
push
jnp
mov
pop
jo
add
test
aam
fcompl
mov
test
lods
inc
jne
shl
leave
pop
mov
dec
in
addr16
scas
stos
mov
inc
dec
ds
mov
ljmp
fsub
mov
push
leave
iret
adc
push
gs
adc
push
stc
cld
add
xchg
cmp
bound
lock
mov
and
aad
ret
leave
aas
and
lret
movsb
call
sbb
dec
pop
and
les
sarb
jle
mov
pop
ret
test
in
subb
ja
jbe
dec
fsubrs
lea
inc
mov
arpl
aam
xor
out
repz
sub
mov
mov
lds
mov
mov
roll
int
push
fmuls
sbb
scas
loop
cmp
push
inc
mov
mov
outsl
shlb
pop
xchg
lret
adc
subl
dec
push
push
xchg
xchg
cmp
sahf
cmpsb
adc
jae
fisttpl
test
xchg
mov
mov
push
jno
cld
mov
push
test
pop
adc
movsb
repnz
cmp
call
xor
pop
cltd
dec
data16
in
sbb
pop
push
into
and
mov
das
xchg
inc
lock
stos
add
xchg
adc
inc
and
push
inc
add
dec
xor
insb
loop
fldt
idivb
mov
pop
inc
les
data16
mov
add
cmpb
mov
xchg
push
mov
test
dec
cmc
pop
jle
lret
cwtl
aam
clc
test
jmp
jecxz
add
mov
mov
std
rcrl
mov
loopne
xor
xor
pop
add
out
scas
iret
test
rcll
shlb
mov
aaa
push
stos
cmpsl
fstp
lahf
enter
sti
fldcw
dec
cmp
ljmp
mov
jns
inc
imul
mov
inc
sub
sbb
fwait
adc
pusha
cmp
dec
fidivrs
push
push
xchg
and
cmp
andl
pop
insl
sub
jne
or
out
les
push
bound
fstpl
fstps
in
sub
outsb
or
xchg
leave
cltd
xor
decl
push
pop
aad
and
mov
clc
imul
shll
repz
mov
xchg
lret
xchg
xor
jecxz
shrb
mov
pop
or
dec
inc
es
sbb
imul
imul
nop
into
sarl
xchg
mov
dec
mov
jecxz
bound
push
popa
int3
inc
push
pop
xor
test
dec
into
outsl
int3
or
jg
mov
dec
das
out
out
nop
cwtl
or
and
inc
and
cmp
sub
lock
in
and
inc
ja
stos
push
addl
pop
ja
and
inc
push
insl
ret
and
adc
filds
pop
insb
cs
xor
repz
aad
mov
and
pop
jle
arpl
mov
and
mov
inc
sti
mov
sub
push
sub
bound
repz
scas
adc
mov
push
fbstp
pop
jo
add
add
or
and
das
xchg
jg
rcrb
ficoml
add
hlt
dec
mov
subb
mov
std
push
adc
fisttpl
jmp
jge
scas
sbb
dec
stos
mov
xchg
clc
push
adc
mov
xchg
xlat
inc
inc
pop
inc
ljmp
dec
and
pop
sub
sbb
jno
rcr
fwait
jb
and
sub
cmp
sahf
pop
mov
xchg
les
pop
loopne
sub
or
clc
lock
xchg
jb
mov
inc
lea
push
and
push
lods
subl
jle
inc
dec
mov
mov
mov
cmp
dec
dec
mov
test
int3
mov
mov
outsl
repz
in
enter
and
push
adcb
lret
int3
sub
lcall
cmp
pop
or
fimuls
popf
jno
xor
in
dec
mov
xchg
fwait
cli
pusha
shl
hlt
lock
or
lahf
jne
mov
cld
inc
icebp
and
stc
std
jecxz
jp
inc
mov
jp
sbb
cmpsb
push
add
rcll
pop
rolb
sbb
arpl
cli
hlt
adc
call
mov
and
mov
or
cmpsl
xor
add
xor
fldt
jmp
int3
stos
xchg
cli
push
addb
sbb
das
mov
in
cmp
add
ret
mov
jno
sti
inc
push
cmp
inc
xchg
arpl
in
xchg
dec
xchg
addr16
clc
inc
js
sub
push
cs
loop
loopne
outsl
sbb
dec
cs
pop
hlt
sub
iret
testb
or
jbe
xchg
or
inc
scas
pushf
inc
xor
pusha
mov
jne
push
in
mov
xor
decb
mov
aad
addr16
dec
leave
cmp
and
jb
out
xchg
cmp
mov
roll
sub
push
sbb
nop
push
jecxz
dec
enter
mov
ja
stc
test
outsl
mov
movsl
iret
inc
loopne
and
gs
sub
call
sub
nop
jbe
inc
outsb
inc
cmpsl
enter
cmpsb
cmpsl
inc
sub
and
test
cmp
cmp
rcll
and
cmp
dec
std
xor
nop
jne
rcll
adc
xor
mov
fimull
inc
cmc
lods
xor
and
and
push
ljmp
cmp
or
data16
sub
xchg
mov
pop
cmp
shlb
jmp
nop
test
mov
xchg
insb
stc
imul
lods
push
xchg
or
add
rcrb
arpl
cli
jns
mov
repz
stos
lods
aad
cmp
adc
lcall
lret
cs
aad
jae
das
daa
mov
push
rcl
dec
mov
xchg
stos
hlt
adc
xor
sti
or
jne
mov
test
orb
lods
mov
outsl
cmp
pop
jecxz
mov
xlat
daa
inc
mov
ss
xchg
sbb
ljmp
jb
mov
dec
shlb
and
mov
xchg
pushf
mov
inc
or
call
add
xchg
movsb
lods
dec
or
lcall
insb
call
inc
sub
mov
test
mov
into
cmc
out
iret
js,pt
aad
sbb
ret
rorl
js
in
fimuls
ja
xchg
ficompl
adc
xor
inc
inc
movsl
mov
in
mov
sub
dec
jb
insb
rclb
in
pop
imul
pop
xlat
push
movsl
in
lret
rcrl
and
cmp
sub
popa
xor
inc
and
mov
adc
push
jge
add
mov
dec
imul
inc
mov
xchg
dec
push
add
push
in
mov
sbb
addr16
jo
and
mov
add
sahf
mov
jge
imulb
scas
ret
out
clc
ja,pt
std
sahf
push
mov
push
or
mov
popa
sahf
xor
xor
ftst
inc
cli
test
popf
sub
leave
push
popf
sbb
popl
pop
int3
xor
mov
cmp
mov
pop
and
push
inc
rcl
cld
jmp
nop
inc
je
arpl
adc
insl
xor
adc
xchg
and
cmp
arpl
call
cmpsl
testb
inc
dec
cmp
aas
xor
je
arpl
push
stc
push
mov
test
dec
mov
and
push
repz
mov
xor
jmp
push
fs
cmp
dec
fs
mov
pushf
mov
cltd
aaa
sub
mov
aas
imul
inc
jnp
xor
mov
dec
jnp
cmp
jne
cmc
jecxz
ficomps
addb
in
jmp
sbb
push
mov
insl
jnp
aas
mov
testl
lds
sub
cltd
subb
sbb
push
jbe
in
cmc
out
dec
xchg
mov
xor
pop
iret
sbb
ss
mov
cmpsl
std
into
pop
inc
imul
in
sub
out
jns
mov
imul
cmpsl
push
sbb
mov
cmpsb
xor
aaa
mov
sbb
scas
xor
add
inc
lret
ret
jo
mov
dec
or
ret
cmpsb
aam
lret
cmp
shld
cmc
xor
fwait
in
pop
aas
in
push
fdivrp
jns
or
sbb
pop
cmp
outsb
pop
push
fstps
sarl
push
loopne
add
out
test
jl
icebp
mov
push
scas
in
and
scas
jl
pop
push
mov
xlat
aad
dec
mov
dec
je
jns
inc
clc
or
xor
lcall
mov
inc
push
ret
dec
es
inc
fildll
std
sahf
adc
push
dec
jl
pop
pushf
cmp
pop
or
and
test
inc
fstps
dec
loopne
add
rcrl
pusha
aas
pop
mul
pushf
xchg
pop
mov
in
loope
insb
inc
inc
ret
mov
je
sahf
xchg
sbb
jle
mov
iret
push
cmp
pusha
test
int
jle
adc
loope
aam
insb
mov
add
sub
cs
dec
xchg
or
mov
push
lret
nop
push
mov
xchg
mov
push
fimull
mov
push
push
out
popa
or
lcall
divb
andl
cld
hlt
std
inc
mov
mov
mov
jne
sbb
or
sti
jge
cwtl
inc
xchg
aad
sbb
push
in
test
ss
lret
jl
dec
mov
aas
xchg
popa
xorl
fnstcw
mov
into
mov
movsb
inc
sub
inc
pop
and
repz
sbb
lahf
mov
pop
sbb
insl
mov
pop
push
push
inc
ja
lahf
lret
inc
mov
push
addr16
mov
dec
jl
pushf
cmp
sahf
std
leave
mov
adc
dec
gs
xor
cli
in
ret
je
jnp
mov
bound
shrl
push
aad
inc
add
xchg
test
jmp
xchg
xor
outsb
lds
outsb
fs
sub
mov
stos
xchg
mov
outsl
and
lock
push
dec
mov
mov
cmp
stos
push
ja
mov
push
cmp
mov
out
add
push
sub
fcompl
mov
arpl
xchg
inc
ja
sahf
jb
sbb
push
cmp
cltd
sti
cwtl
and
in
dec
jp
xor
mov
push
bound
cmpsb
push
mov
jp
loopne
call
mov
xchg
pop
je
addb
in
xchg
shrb
fstpt
ljmp
jo
xchg
and
pop
test
xor
les
inc
fisubs
push
cld
mov
lret
aam
mov
sbb
mov
jmp
lret
adc
push
or
jmp
sub
loopne
xchg
pop
pop
dec
mov
and
mov
add
mov
adc
arpl
pop
jmp
push
xchg
jecxz
iret
inc
arpl
ja
lret
sbb
aad
ret
addl
xor
dec
enter
xchg
sti
repz
stos
xor
into
mov
dec
dec
xchg
xor
and
arpl
xor
shrb
mov
shlb
xor
int3
pop
jae
cmp
pushf
ret
pop
int3
push
mov
cltd
cmp
inc
or
std
and
mov
pop
cmp
imul
movhps
xor
cmp
mov
inc
or
fsubrl
inc
xchg
or
pop
int
cmp
aam
mov
mov
xor
dec
loop
or
fwait
push
dec
xchg
jecxz
xchg
xchg
mov
scas
xchg
into
dec
enter
mov
dec
sbb
inc
in
xor
xchg
mov
out
inc
cltd
frstor
mov
fmull
imul
sub
sti
xlat
add
jbe
pop
pop
fisttpll
divl
addl
add
lcall
lahf
dec
lahf
sarb
inc
idivb
in
popf
fmul
cmp
push
fcomps
mov
dec
dec
sarb
push
lock
jl
lret
mov
movl
ja
jbe
pop
ja
sbb
cmp
arpl
mov
test
stos
xchg
xor
xchg
inc
int
nop
movsb
pushf
sub
xlat
mov
cmpsb
inc
xchg
mov
and
aaa
mov
mov
jg
cmp
mov
cmp
pop
mov
dec
jl
pop
dec
sbb
mov
inc
mov
mov
std
rcrl
ss
leave
movsl
ja
mov
adc
or
dec
or
dec
gs
sub
sahf
dec
insb
xor
mov
push
mov
or
pop
pushf
outsl
addl
and
into
inc
dec
je
adcb
stos
pop
lds
cmp
nop
das
das
je
call
and
lds
mov
js
jecxz
add
xor
in
sub
jl
leave
fs
or
jne
adc
movhps
or
jo
cmpsb
stos
push
out
pop
or
mov
test
sahf
add
xchg
pop
inc
sub
imul
mov
flds
jle
sti
in
push
mov
and
adc
or
adc
int3
fidivl
out
pop
xor
jp
or
loope
fsubrs
inc
push
push
mov
push
shll
add
xchg
dec
adc
ja
or
xor
fdivl
and
pop
mov
pop
test
dec
xchg
imul
fstl
gs
pop
mov
push
cmp
lret
xor
out
mov
pop
popf
insb
loop
xchg
add
lret
pusha
out
mov
or
out
xchg
dec
adc
and
lret
sbb
jecxz
xlat
insl
jne
push
sarb
mov
mov
jbe
popf
sub
dec
cmp
mov
mov
push
xchg
and
imul
add
inc
ljmp
add
sbb
nop
lock
pushf
std
fbstp
sub
mov
and
adc
stos
cmp
xchg
loopne
pop
outsl
push
mov
cmp
pop
mov
and
push
clc
test
cmp
les
inc
inc
test
xchg
rcl
adc
pop
loopne
mov
das
pushf
pop
jge
inc
out
imul
sbb
repnz
adc
jmp
inc
jbe
jecxz
aam
inc
or
insb
test
sub
xchg
jae
and
mov
pop
mov
repnz
leave
popa
lds
sub
push
stc
pop
lret
xchg
in
push
mov
nop
mov
ror
fcoml
adc
lret
ds
jb
adc
stc
and
je
mov
je
aam
push
cmp
or
xchg
aam
mov
mov
adc
ffreep
add
pop
lds
ror
inc
mov
push
jns
pop
adc
cld
cmpsb
cltd
inc
xor
cs
inc
pop
pop
stc
das
and
lods
lds
inc
fistpll
popf
add
push
or
test
jge
pop
inc
mov
cmp
aaa
sbbl
daa
les
loope
dec
cmp
test
pop
add
lods
sbbb
subb
adc
lods
mov
jnp
mov
dec
pop
xor
push
mov
push
clc
rcrl
in
xor
jno
mov
or
les
sbb
pusha
aam
jmp
push
mov
outsl
data16
push
adc
xor
cld
add
mov
mov
lods
cmpsb
and
in
cmp
add
loop
std
insb
cmpsl
addr16
and
mov
nop
cmp
sub
cmp
popf
xchg
mov
aaa
mulb
mov
push
sub
inc
xchg
push
popf
sti
arpl
cmpb
sar
or
xchg
sbb
sbbb
js
fs
imul
xor
lea
int
mov
outsl
xor
jp
cli
sbb
mov
std
and
ja
mov
insb
adcb
addr16
add
es
in
add
add
mov
sub
mov
ljmp
inc
push
stc
xchg
lcall
sub
outsb
add
jns
inc
out
testb
or
cld
gs
cmpsl
out
sahf
pop
movl
inc
repnz
mov
cmpsl
mov
ss
xchg
std
addb
lret
imul
cli
sbb
adc
push
cmp
cmp
sub
cmp
lret
fs
scas
adc
pop
hlt
lahf
jo
inc
pop
lea
scas
pop
sub
pusha
gs
mov
or
mov
ja
jg
enter
test
stos
add
mov
mov
ds
pop
and
loopne
sub
jle
ja
add
xor
mov
addr16
cmpsb
add
leave
inc
fs
mov
mov
sub
push
pop
inc
inc
sub
jge
sahf
js
cld
lea
add
leave
les
xchg
scas
inc
adc
mov
popf
in
fs
ss
push
cmpsb
push
sub
mov
out
ret
aas
shlb
mov
cmpsb
das
data16
icebp
popf
jb
out
pop
xchg
and
or
cld
push
lods
jle
jne
cmpsl
xchg
rcrb
push
inc
mov
or
push
cli
ds
test
leave
dec
sub
ss
mov
jbe
testb
sbb
sti
pushf
arpl
mov
sub
repz
arpl
repz
cmc
pop
push
sarb
mov
xlat
dec
or
and
mov
jecxz
nop
sbb
lahf
pop
xor
add
mov
mov
sbb
int3
or
ja
jmp
cmp
sub
test
lret
sub
push
ds
pushf
shlb
sahf
enter
enter
int3
xor
xor
stos
int3
clc
mov
cmp
imul
jnp
loopne
lds
xlat
dec
aam
cwtl
orl
sbb
push
xchg
clc
xor
std
add
lahf
sti
push
mov
das
dec
or
push
mov
mov
xchg
std
mov
dec
pusha
pop
rorl
or
mov
or
jbe
jae
or
jle
shrb
dec
adc
sbb
out
daa
ljmp
xchg
cmp
in
xor
xor
scas
loope
in
mov
pop
sbb
add
popa
mov
sbb
orb
dec
sbb
dec
dec
xor
shrl
dec
fisttps
push
test
das
xor
repnz
mov
outsb
mov
cmp
mov
and
fwait
add
pop
bound
imul
mov
imull
fisttpll
lods
ret
jo
jo
imul
and
fwait
lahf
movsb
loop
sbb
cmp
mov
leave
in
and
lret
pop
adc
fmuls
xor
cmc
shlb
ss
jnp
cs
movsl
inc
cmp
inc
inc
repz
push
enter
and
insb
add
sub
pop
loop
inc
repz
dec
cmp
pop
pop
sti
xorb
cli
fxch
or
repz
andb
aam
pop
xchg
pop
sbb
arpl
sub
cli
popf
rcrl
xchg
ss
dec
pushf
or
cltd
push
int
pop
out
pushf
ret
iret
loopne
testl
movl
rorb
inc
and
lret
mov
add
dec
aaa
cmp
mov
and
fsubs
mov
pushl
ljmp
push
hlt
cmpsl
or
xchg
xchg
stos
leave
push
out
pop
shl
adc
inc
cmp
or
push
add
mov
inc
clc
pop
call
fs
sub
fsubrp
into
movsb
cmpsl
cmp
outsb
mov
add
cli
mov
mov
adc
bound
je
imul
mov
inc
clc
fs
out
sbb
pop
cld
clc
xlat
outsl
scas
insb
add
pusha
cmp
aam
add
and
fwait
lahf
shl
cltd
jb
mov
mov
push
jle
int
cltd
addb
xorb
test
out
cmp
push
roll
jp
jp
inc
andps
add
jge
popf
mov
lret
mov
and
imul
dec
inc
ret
jg
and
inc
lcall
add
jge
sub
ret
push
imul
xor
imul
xchg
xchg
loope
jb
lods
xor
pop
hlt
dec
cmp
fldl
aam
cs
aas
jge
xchg
loope
inc
into
mov
daa
stos
xlat
fstpl
in
and
lea
icebp
sub
mov
cmp
sbb
enter
push
and
cmp
or
xor
or
push
addb
les
pop
sub
fcoms
mov
mov
push
mov
inc
mov
stos
mov
sub
mov
and
mov
lcall
jae
repnz
adc
mov
rcll
int
mov
test
adc
add
mov
enter
mov
mov
pop
and
cmp
sub
fnstsw
sahf
test
loope
jl
in
jns
fcoml
dec
ret
inc
ret
ret
hlt
mov
arpl
inc
adc
lods
data16
pop
pop
jbe
clc
or
les
pop
pop
push
mov
out
adc
xchg
clc
in
int3
dec
fcom
sub
push
push
mov
out
xchg
mov
sbb
ja
and
and
pop
inc
lret
shll
lds
lock
sbb
repz
cmp
je
sti
sbb
adc
ret
out
sahf
or
dec
stos
and
mov
and
imul
pop
roll
or
lret
xor
or
add
xchg
dec
fldcw
push
cli
insl
jb
cmpsl
jb
push
mov
mov
sbb
les
popf
push
dec
jno
or
add
loop
loop
xor
loop
test
stos
iret
or
or
sbb
repnz
pop
cmc
or
xchg
add
std
adc
or
jle
leave
call
imul
jae
lret
push
test
imul
clc
das
inc
int
jnp
fwait
push
mov
movsb
fs
loopne
fsubl
aam
es
aas
faddl
jle
mov
into
ret
push
dec
lds
xchg
das
cmp
xor
pop
or
inc
inc
fwait
xlat
filds
sar
imul
movsb
jg
jo
es
in
sub
loopne
xor
xchg
imul
cmp
and
lret
lcall
movsb
inc
jbe
shll
sahf
ljmp
ja
int
xchg
and
cmp
mov
xchg
jecxz
addr16
or
mov
repnz
mov
xchg
adc
fs
pop
push
lret
test
pop
inc
cmpsl
sub
push
pop
add
orl
shll
mov
sbb
inc
add
cmp
nop
pop
into
sbb
adc
adc
lods
cltd
lods
pop
sub
dec
jge
das
lret
bound
add
dec
lcall
xchg
stos
fwait
jle
orl
pop
das
xchg
mov
jne
inc
jg
mov
clc
or
push
add
or
inc
push
neg
jmp
xchg
jb
push
scas
pop
xchg
pop
data16
xchg
push
lea
jmp
xor
or
pop
ret
or
mov
sarb
arpl
push
sub
sbb
and
sub
cs
mov
loope
das
gs
into
cmp
dec
mov
adc
jp
sub
add
jno,pn
cmpsl
andb
adc
into
sbb
jne
sub
xchg
sub
pusha
and
imul
aas
lahf
incl
lods
push
or
sbb
jns
xchg
jae
jnp
add
popf
jmp
mov
mov
lcall
push
insl
fiadds
lahf
push
jnp
mov
cmp
xor
xchg
cmp
xor
mov
int3
popa
sbb
call
inc
cmpsl
andl
or
sbb
mov
or
inc
test
mov
jnp
imul
xchg
or
cmp
jecxz
sub
dec
rclb
js
jnp
sub
jmp
movsl
addb
mov
loop
push
and
inc
add
sub
add
pop
in
cli
add
jp
sub
cmp
movsb
dec
mov
out
mov
es
xchg
jae
and
add
dec
daa
pop
or
sub
call
in
sub
cmc
pop
daa
lret
add
push
nop
enter
stos
sub
stos
bt
push
mov
into
movsb
cmp
pop
mov
mov
loop
lahf
mov
iret
cmc
mov
test
arpl
inc
pop
out
mov
jge
loope
push
adc
mov
in
xor
stos
sbb
xor
xchg
sbb
and
mov
inc
ret
aas
jecxz
in
or
js
das
adc
scas
pushf
jne
test
inc
mov
jae
decl
pop
add
lods
fists
movsb
mov
loopne
cli
lds
test
or
add
jae
or
fisttpll
pop
mov
lods
popf
add
into
jne
cmp
and
pop
and
enter
mov
cmp
mul
xor
shl
jb
jecxz
xchg
loop
cmp
lret
jb
clc
or
imul
mov
icebp
push
mov
dec
xor
xchg
test
je
fstpt
lods
dec
jb
cmc
pop
pop
push
dec
mov
cwtl
xchg
mov
jno
lahf
mov
js
mov
ja
std
mov
xchg
fwait
mov
lock
adc
or
xor
sub
clc
sti
scas
std
sub
cmc
ljmp
pand
into
addb
lret
test
cli
iret
sub
push
xchg
sub
sbb
scas
push
sbb
inc
inc
mov
sbb
xchg
jns
push
mov
rclb
shrb
mov
and
mov
into
fistl
mov
add
shl
ret
test
mov
mov
mov
mov
xor
push
test
and
cmp
xor
cmpsb
loopne
mov
mov
pop
int3
push
sub
inc
cld
movsb
pop
dec
mov
adc
cld
and
rorl
je
add
mov
sub
jbe
ljmp
fwait
leave
mov
and
jno
xor
cmpsb
and
lds
lcall
frstor
xorb
push
fdiv
sub
aas
jns
rcrl
shlb
jne
jae
frstor
or
loop
inc
or
xor
sbb
jg
gs
adc
lret
or
arpl
pop
hlt
push
add
movsl
js
decl
outsl
or
loop
and
inc
pop
push
ja
adc
dec
mov
imul
ljmp
aad
into
scas
push
xor
pop
jbe
xchg
mov
cmpsb
xchg
pop
push
iret
xchg
jns
ds
fstpt
inc
jg
xchg
inc
push
mov
xchg
stos
mov
lea
cmp
popa
sub
cmp
insb
add
sub
mov
fstpl
pop
inc
adc
loope
push
ror
ret
int3
jp
cmp
mov
sar
popf
push
sbb
sub
insl
and
leave
xor
js
mov
call
popa
fs
mov
popf
dec
add
fists
sub
jp
dec
dec
pop
insl
inc
lret
lahf
and
xor
and
inc
scas
scas
ret
cmpsb
or
scas
stc
mov
int3
addr16
mov
insl
and
pop
cs
into
arpl
sti
sub
repnz
pop
mov
cmpb
js
fwait
loopne
jp
nop
cld
rol
sub
xchg
sub
cltd
enter
cs
sbb
imul
or
repnz
xchg
mov
dec
faddp
xchg
add
or
je
fsubs
fmuls
sti
popf
call
aaa
pop
enter
xor
orb
xchg
fisubrl
lret
xchg
into
fs
cmp
adc
add
fimuls
push
cmp
fstl
and
enter
mov
push
call
jnp
loope
cltd
movsl
or
xchg
orl
sahf
fstpt
dec
movsb
and
sar
in
ss
jecxz
push
call
ja
pop
mov
cs
xlat
or
mov
mov
mov
test
sti
loopne
inc
cmpsl
jle
fldcw
jns
test
ljmp
mov
sbb
pop
shrl
push
decb
ror
pop
sbbl
xchg
mov
xchg
ret
addl
cmpsl
xor
arpl
inc
xchg
out
leave
mov
stos
cld
xor
fcoml
jp
add
fnstsw
mov
rclb
push
pop
pop
lock
cltd
sub
mov
jo
push
fst
addb
shl
gs
mov
nop
cli
fmull
in
lock
sahf
xchg
stos
sti
add
xchg
insb
repnz
and
inc
pop
es
loopne
ret
pushl
into
dec
inc
pop
xor
dec
inc
loopne
push
iret
add
push
pop
and
stos
ss
gs
push
aas
mov
pop
push
js
jae
sub
test
nop
clc
and
cmp
mov
and
enter
add
ret
fmul
ficoml
inc
pop
test
cmp
test
xor
jo
mov
cli
mov
mov
pop
cmpl
sub
or
hlt
mov
mov
adc
sti
loopne
insl
cs
mov
loope
lods
leave
jg
mov
inc
fwait
out
mov
mov
push
shlb
arpl
mov
mov
aam
xchg
xchg
or
ljmp
sbb
mov
sbb
fists
or
movl
sarb
in
jns
sub
lds
jmp
mov
xor
lret
xchg
push
int3
sub
push
dec
jl
or
test
lret
pop
test
pop
test
bound
fdivrs
gs
jno
popa
rorl
mov
mov
cmp
inc
ja
fbstp
outsb
mov
stc
xchg
mov
movsl
pop
mov
in
cmp
inc
inc
add
rclb
xor
mov
jae
dec
outsl
scas
xlat
sub
out
test
idivb
movsl
and
mov
xor
cmp
das
loopne
int3
adc
in
cmp
mov
xchg
cwtl
imul
sub
sub
jae
mov
test
mov
jno
mov
pushl
xchg
addr16
in
push
scas
subl
push
test
aas
pop
add
mov
mov
mov
mov
and
cmp
xchg
cmp
cmp
push
sub
les
inc
inc
mov
ss
mov
sbb
add
inc
pop
or
jnp
pop
dec
ds
scas
xchg
lock
push
dec
movsb
xor
sbb
lods
aam
aad
dec
test
pop
inc
mov
lret
pop
and
jb
inc
mov
cmpsl
sub
mov
daa
inc
add
add
sbb
jle
jnp
jle
sbb
sbb
mov
cmp
mov
lods
jnp
push
jl
jo
dec
and
test
pusha
cmp
into
sub
popa
or
lret
pop
sbbl
hlt
cltd
stos
xor
cmp
add
and
lret
jge
lds
pop
lahf
pop
sub
inc
dec
cmovns
sub
or
xchg
pop
arpl
add
and
in
sub
xchg
adc
pop
adc
xchg
icebp
or
je
add
xor
cmpsl
out
and
pop
loop
popf
inc
jae
insl
push
pop
sub
lcall
push
je
and
push
xchg
cmp
int
sbb
jecxz
mov
addr16
ret
jo
aad
and
xor
adc
ss
pop
add
push
pop
ljmp
xchg
add
ljmp
adc
xor
insl
mov
or
outsl
ret
and
lods
out
hlt
cmp
test
movsl
aas
push
stc
inc
pop
cmp
out
and
mov
push
cmpsl
push
ljmp
fimull
leavew
pop
fs
sub
sub
sub
jmp
jg
rcr
stc
or
mov
ljmp
add
leave
pop
cli
jo
or
jbe
cwtl
rcrb
lock
dec
sub
pop
adc
xchg
cmp
pop
lods
call
pop
add
popl
rcr
out
adc
fiadds
mov
stos
xrelease
imul
jb
test
sub
inc
gs
pop
filds
sahf
jl
cwtl
into
sub
dec
bnd
jmp
loop
inc
ret
push
lds
daa
cld
cmc
loop
rorb
aam
pushf
aaa
cmc
lret
lahf
iret
outsl
push
mov
es
inc
add
out
sbb
gs
inc
pusha
cld
add
mov
mov
jge
cli
pushf
jl
jg
cmp
movsl
jns
jmp
loop
test
jae
xor
bound
mov
in
mov
push
out
jno
jg
push
mov
imul
loope
sub
inc
in
pop
dec
frstor
into
loope
nop
int3
shrb
fxch
pop
test
mov
mov
subb
pop
xor
inc
sub
aad
adc
repnz
mov
or
popa
hlt
aad
je
shl
popa
add
dec
cmp
pushf
out
jo
push
mov
popf
daa
push
push
and
pop
out
fisubs
insb
jbe
in
mov
and
cltd
clc
jp
lcall
and
pushf
or
inc
mov
jp
add
and
jnp
outsl
push
adc
sub
mov
ficoml
inc
pop
fwait
fwait
mov
sbbb
push
adc
hlt
inc
push
scas
and
sbb
mov
test
das
popa
xchg
or
mov
jp
sbb
mov
test
jp
xchg
call
or
lea
inc
mov
fsubl
jo
jg
stc
mov
pop
mov
xor
inc
movsl
scas
shll
shll
std
xchg
es
push
cmp
inc
ret
inc
aam
add
aas
in
and
inc
sahf
jge
jmp
aad
mov
inc
sub
jg
outsl
dec
mov
imul
pop
or
push
out
enter
jp
loopne
jbe
mov
ja
cmp
push
dec
lret
inc
fcoml
jge
push
jmpw
cli
pop
insl
shlb
lea
and
mov
sarl
jbe
jne
ror
adc
ficompl
movsb
mov
and
jg
dec
cmpsl
mov
pusha
push
mov
aad
mov
xchg
jmp
dec
repz
add
jae
cmp
push
push
mov
scas
adc
test
xor
add
mov
hlt
push
push
js
leave
xchg
mov
lock
push
cli
and
lods
fistl
push
movsl
outsb
rcrb
pop
sub
fisttpl
je
pop
xchg
dec
stos
push
cmc
rcl
adc
jne
pop
xchg
int3
sub
cs
mov
mov
push
pusha
xchg
pop
pop
jb
arpl
mov
imul
outsb
jae
inc
pusha
fwait
shr
or
std
xor
lock
dec
test
icebp
pusha
pop
mov
inc
nop
adc
cmp
lods
adc
mov
jecxz
inc
or
scas
sbb
cs
outsb
mov
or
jl
loope
xchg
aad
ret
xchg
insb
pop
add
jae
test
dec
cmp
inc
inc
mov
ret
jl
pop
in
pop
aas
out
inc
pop
insb
mov
push
fists
jp
icebp
push
jb
mov
hlt
pushf
and
and
dec
pushf
push
pop
sbb
mov
xchg
repnz
fisttps
mov
imulb
or
flds
cmp
shrb
xor
or
aam
out
mov
int3
test
orb
mov
pop
insl
add
pop
pop
jb
jnp
mov
dec
leave
movsb
mov
fmull
adc
enter
add
fisubrs
lds
pop
adc
repnz
pop
jnp
pusha
aad
out
aaa
push
add
testl
add
ds
xchg
lret
sbb
es
shr
roll
mov
xor
add
stc
or
sbb
inc
jge,pt
lret
mov
leave
sti
fisubrl
inc
or
push
mov
lret
test
adc
inc
xor
dec
mov
scas
dec
lea
adc
es
dec
pop
ljmp
dec
popf
std
pushw
xorl
icebp
les
imul
xchg
adc
adc
dec
pop
push
out
pop
mov
jg
pop
cmp
and
les
pop
add
jl
insb
movsb
jns
imul
xchg
ret
mov
xor
inc
push
xchg
shrb
pop
inc
jb
mov
mov
jl
int
pop
shl
mov
pop
or
mov
icebp
mov
icebp
jns
add
dec
test
ss
loopne
sub
test
rcl
xchg
jge
lods
xchg
mov
push
cmp
mov
xchg
adc
nop
jg
iret
mov
test
push
out
and
sarb
mov
cmp
sbb
add
pop
dec
add
aad
sub
outsl
inc
and
push
lcall
test
mov
sub
sbb
shr
sub
mov
xor
shr
lcall
lahf
mov
inc
lcall
and
inc
arpl
pusha
sbb
mov
ror
mov
mov
cmp
jge
sub
or
fldt
call
push
lcall
mov
call
lds
inc
ljmp
aam
lcall
add
mov
jbe
enter
test
or
mov
test
add
xchg
sub
jnp
mov
movsb
cwtl
add
dec
mov
or
cmp
into
ret
xlat
mov
pushf
divl
in
and
mov
and
mov
add
mov
aaa
ljmp
xor
inc
adc
aad
push
push
lea
lahf
cmp
js
inc
stos
pop
adc
sub
xchg
sarb
rcll
mov
pop
insl
or
and
cld
add
rsm
push
arpl
ljmp
sahf
ret
inc
add
sbb
mov
adc
ret
sbb
mov
cmpsb
mov
mov
mov
dec
cmp
jnp
ss
ss
xchg
push
cmp
sbb
mov
cmp
into
sub
stos
popf
les
test
cmpsb
popa
jp
adc
jno
xchg
jle
sbb
push
outsb
hlt
stc
mov
or
les
outsb
popa
lret
sub
adc
add
mov
ror
fldenv
les
jecxz
mov
dec
pushf
in
inc
cmpsb
inc
outsl
stos
or
jbe
mull
testb
jb
and
mov
dec
repz
sarb
add
xchg
test
ret
xor
pop
int3
loop
and
adc
sbb
out
inc
rorb
and
and
push
fisttpll
fstps
int3
lock
mov
xor
in
pop
sub
mov
jge
das
pop
imul
sbb
add
sbb
test
adc
test
lds
jns
push
cmpb
pushf
cld
pop
repnz
cld
cltd
movsl
insb
ret
adc
mov
and
les
loope
imul
cmp
mov
dec
insb
add
pop
sub
in
xchg
dec
lcall
mov
push
jp
ss
imul
xchg
and
mov
repz
jo
imul
xorl
sbb
xorl
and
inc
pop
aas
mov
add
lds
jp
inc
or
or
add
push
sbb
cmp
xor
imul
adc
es
enter
jbe
in
aad
xchg
aas
sub
sub
test
out
xor
lds
loop
xor
jo
pusha
fwait
push
xorl
fwait
or
out
xchg
sub
dec
ljmp
or
lret
lret
out
popa
inc
les
cli
jo
iret
daa
xchg
mov
fdivrs
sbb
or
repnz
jle
mov
out
mov
popa
or
xor
add
push
mov
pop
or
popa
stos
aas
xchg
add
mov
pop
dec
mov
jno
adc
push
adc
ljmp
sub
xchg
xchg
cmpsl
cwtl
repnz
jo
push
daa
in
xchg
shlb
ss
rol
cmc
mov
into
jp
sbb
sarb
pop
pop
dec
out
dec
mov
aas
ds
lods
inc
das
sbb
addr16
mov
gs
add
dec
cwtl
mov
pop
adcb
cmpsl
into
xchg
lret
mov
fs
inc
xchg
scas
es
hlt
dec
lret
sbb
mov
imul
divps
rcl
inc
imul
jp
sbb
ss
inc
push
hlt
cmp
push
movsl
mov
mov
xor
mov
mov
cmp
bound
stc
cli
mov
cmpb
jg
mov
shrl
fnstcw
test
mov
rcrb
ret
aas
jmp
repnz
dec
imul
insb
inc
xor
pop
xlat
xchg
inc
inc
xor
inc
test
aam
push
push
call
std
ror
push
pop
js
cmc
in
mov
test
cmp
imul
push
cli
sbb
push
imul
and
push
testl
or
sub
mov
mov
and
out
mov
aas
lods
leave
and
sarl
out
inc
xor
aaa
mov
cmp
or
leave
fdivl
sub
fst
sbb
movsb
ret
pop
iret
sub
mov
and
addr16
lret
shl
push
mov
sbb
fsubs
sbb
xchg
mull
enter
fldenv
xchg
dec
pop
adc
aaa
ds
inc
or
mov
loopne
add
in
lea
imul
pop
mov
outsb
push
inc
add
addr16
dec
dec
mov
cmc
xlat
mov
in
stc
cltd
fnsave
mov
and
xlat
call
add
xchg
stos
aaa
inc
in
xchg
push
loop,pt
jno
test
inc
ljmp
and
int3
inc
test
in
xchg
pop
in
pop
sub
dec
aas
cmp
fdivl
xor
dec
in
mov
push
into
jecxz
nop
repnz
in
cmpb
arpl
inc
mov
es
cmp
bound
mov
dec
jl
daa
mov
sbb
or
xlat
test
rorb
fsts
mov
mov
loop
mov
inc
shrb
mov
push
aaa
inc
push
cmc
fdivl
stos
ds
call
les
imul
push
outsb
mov
xor
mov
enter
and
arpl
add
orl
loope
inc
in
test
pop
and
jmp
data16
int3
enter
rcl
or
inc
pop
cs
mov
cs
sub
sub
cmpl
pop
repz
dec
push
notl
and
pop
inc
loopne
data16
out
aas
and
mov
cs
add
leave
push
jl
mov
aad
mov
jle
pop
and
sub
or
mov
dec
lret
mov
cmp
or
push
cli
sbb
pop
jmp
inc
and
hlt
scas
push
outsb
nop
sub
imul
addb
push
in
pop
mov
ss
loop
fdivr
enter
daa
mov
stc
test
arpl
insl
mov
xchg
pop
imul
fbstp
lahf
loopne
jno
fdivrs
xchg
insb
add
mov
movsl
out
jl
mov
clc
mov
or
cmc
daa
mov
push
or
js
mov
push
xor
xchg
xchg
scas
pop
push
scas
fisubs
jb
sti
lahf
jl
xor
adc
inc
das
lods
outsl
pop
dec
mov
inc
mov
and
nop
push
jp
aam
pop
repnz
push
mov
jmp
pop
in
sti
les
xorl
jnp
nop
mov
je
fnstenv
test
pop
leave
or
sub
sub
aam
cmpsb
adc
cmp
mov
cwtl
shll
or
dec
dec
add
inc
xlat
jle
inc
mov
mov
push
jns
fadd
mov
cmpl
adc
push
mov
popa
repnz
sarl
jg
adc
jne
sbb
inc
sub
fcomi
stos
jg
add
fsubp
dec
shlb
pop
iret
inc
sub
mov
mov
xlat
fiaddl
iret
enter
inc
fidivl
sbb
gs
pushf
mov
xor
inc
jbe
sub
shl
cmpsb
add
pop
xchg
ds
pop
insb
lcall
dec
lods
fnstsw
mov
mov
or
gs
pop
outsb
or
test
addr16
push
push
mov
das
iret
call
add
xor
imul
std
and
imul
nop
clc
add
push
and
jmp
dec
popf
dec
add
mov
mov
sbb
add
or
jecxz
outsl
aad
push
cmp
mov
push
js
ret
mov
int3
xor
mov
add
fsts
cltd
ljmp
xchg
sbb
scas
test
or
pushw
xor
stc
pushf
mov
clc
mov
leave
mov
sbb
pushf
cmp
jg
xor
dec
xchg
ds
mov
xlat
in
jmp
in
sub
inc
in
lcall
test
mov
int
js
add
js
mov
mov
mov
stc
js
int3
imul
push
push
stc
pop
sahf
inc
add
inc
mov
movsb
push
in
dec
pop
cli
sub
pop
sub
dec
movsl
or
stc
xchg
jno
sbbb
divl
lds
xor
and
push
xchg
ss
jle
loopne
sub
xlat
je
mov
cmp
arpl
pop
xchg
jge
mov
pop
loopne
lahf
adc
jnp
stc
fsubs
mov
ds
xor
pop
cli
inc
push
sub
out
data16
xor
sbb
jl
ss
aas
out
into
mov
cmp
adc
inc
adc
xor
or
gs
rcll
out
aad
in
das
scas
cmp
or
in
add
pop
sub
lret
loopne
pop
iret
mov
repz
cmc
lock
mov
push
dec
repz
sub
popf
jl
inc
xor
mov
or
xchg
loopne
outsb
jno
xchg
dec
and
xor
xlat
adc
lods
pushf
sub
cmpsb
inc
std
pop
adc
js
popa
aad
mov
lret
jb
cmpsb
pusha
aam
aas
inc
mov
movsb
fisttpl
add
ss
mov
fbstp
cmp
mov
sub
in
xchg
lock
out
mov
out
xlat
mov
cmp
inc
dec
jl
push
xchg
mov
in
sub
mov
or
fidivl
adc
lds
stos
mov
arpl
stos
adc
mov
out
shll
aad
and
push
and
fildl
jle
pop
sarl
push
test
mov
xchg
in
mov
xlat
dec
repz
bound
cmp
inc
pop
or
pop
mov
lret
or
js
test
shlb
push
pop
into
stos
lcall
jae
cmc
clc
rorb
in
js
lds
inc
add
enter
outsb
inc
or
jg
fcomip
lahf
addr16
rcr
adc
clc
mov
sub
sbb
outsb
jge
movsb
or
inc
cmp
xor
fsubrs
mov
inc
mov
int3
mov
add
mov
icebp
sub
mov
imul
push
or
inc
and
cmpb
orl
add
sub
mov
push
aaa
gs
xchg
ret
int
dec
cs
aam
jge
jl
mov
xor
popf
adc
mov
clc
jb
push
insl
mov
mov
cmp
aam
cmp
jge
adc
pop
mov
cmp
lea
dec
jmp
dec
scas
aad
cmpsb
idivb
jns
int3
out
inc
sbb
les
xchg
lds
jle
pop
mov
int3
and
adc
xor
pushf
ficomps
or
adc
sub
cmpsb
xchg
cmc
sub
cmc
test
mov
lcall
and
stos
icebp
mov
xor
data16
dec
adc
sbb
leave
fidivl
cwtl
out
mov
cwtl
push
jne
std
shlb
push
cmp
into
daa
jle
sti
and
insl
lea
repnz
dec
or
sbb
mov
pop
sub
in
fnstcw
call
push
insb
lds
sub
cmpsb
popf
cmp
push
fsub
cs
ret
add
mov
cld
std
cltd
adc
cmp
outsb
inc
mov
inc
ret
pop
inc
mov
dec
xor
mov
pushf
scas
mov
stos
ja
sub
scas
aas
add
add
lret
adc
inc
stos
rorb
or
xchg
or
dec
leave
or
cwtl
xchg
push
mov
ret
and
fiadds
stc
lcall
push
test
or
repnz
mov
xchg
loop
and
push
into
adc
icebp
and
mov
inc
pop
and
cs
cs
shlb
inc
ljmp
xchg
xchg
rolb
adc
test
fsubs
fimuls
cli
mov
xchg
adc
pushf
movsb
popf
adc
xchg
insb
pop
push
sti
imul
mov
pop
adc
decb
enter
mov
leave
xchg
das
fwait
push
loopne
xchg
pop
add
les
cmc
mov
test
push
sbb
outsl
or
and
dec
js
mov
sub
clc
jl
lcall
hlt
cmc
cs
cld
add
xor
pop
jl
adc
or
jns
repnz
xorl
xchg
jle
add
xchg
add
mov
lret
mov
in
xor
inc
xchg
stos
jbe
pushf
scas
lahf
test
jnp
jno
rorl
push
hlt
cwtl
pop
pushf
push
mov
or
mov
aas
pop
lret
add
stos
inc
cmp
or
add
sahf
dec
jno
sbb
enter
adc
xor
cmp
pushf
or
lods
inc
push
pusha
sbbl
add
outsb
aad
dec
xor
rorb
mov
inc
add
popf
sub
pop
test
push
mov
test
ja
lock
sub
sub
adc
xchg
adc
adc
fs
test
push
push
jmp
cmp
mov
ds
lods
or
ss
sub
into
cwtl
mov
stc
xor
xor
out
jp
shlb
test
out
dec
in
xchg
out
fsubp
inc
scas
mov
or
dec
stc
and
or
cmc
in
fildll
lea
jp
dec
mov
sbb
in
lret
loop
cld
push
xchg
cmpsl
inc
mov
out
mov
mov
mov
sbb
push
inc
leave
dec
mov
mov
mov
mov
sbb
js
xchg
mov
add
sub
dec
jle
mov
inc
es
notb
aam
daa
pop
fisttpl
mov
leave
aam
das
xchg
mov
test
jl
pop
out
dec
movsb
xchg
lods
push
out
popf
mov
cmp
pop
icebp
icebp
push
sbb
xchg
stos
rorb
jbe
std
fists
inc
shrb
lea
repnz
mov
dec
cmovle
pop
cli
cltd
xor
jnp
pop
pop
adc
sbb
push
mov
cmp
pop
push
int3
pop
push
xchg
or
ljmpw
push
mov
jae
hlt
dec
das
mov
inc
rdtsc
aad
cltd
mov
jno
pop
mov
and
sbb
pop
push
sub
test
in
push
inc
cld
popf
jecxz
rclb
cmc
dec
stos
mov
insl
scas
mov
dec
out
or
cwtl
popa
out
inc
bound
pop
mov
dec
cmpb
bsf
mov
sti
nop
dec
aas
jbe
adc
stos
popf
mov
scas
xchg
xchg
pusha
jo
or
pop
aas
cli
sub
adc
jb
fwait
xlat
popl
fsubrl
pushl
xchg
int3
add
cmp
popf
sar
les
and
fidivrl
sub
aad
mov
fsubl
repz
inc
push
mov
les
jbe
outsb
sub
cmp
sub
fsubl
rorl
pop
test
mov
mov
sub
hlt
mov
lods
or
xchg
xchg
and
jecxz
cmp
shrb
js
les
lock
jb
push
adc
pushf
push
and
or
mov
outsl
push
ret
cmpsb
test
pop
shrl
adc
xchg
pop
or
jl
mov
mov
insb
and
mov
es
mov
pusha
inc
dec
and
testl
out
push
xor
fdivrs
jo
pop
xchg
stos
das
sub
aas
dec
cltd
test
xchg
add
sbb
cmp
cmp
and
lock
imul
scas
lahf
mov
sub
cltd
mov
gs
nop
jg
mov
jo
movsl
ljmp
xor
pusha
repz
shlb
jle
jnp
fwait
or
or
inc
dec
mov
pusha
outsb
leave
cmp
xchg
mov
fsubs
mov
mov
popa
add
jp
sub
aad
pop
fstps
out
int3
inc
jecxz
jno
test
xor
mov
mov
dec
test
pop
imul
das
or
ret
push
aaa
iret
lods
cmp
popf
loope
mov
ret
pop
and
rcrl
mov
and
mov
push
icebp
dec
mov
mov
repz
adc
xchg
add
push
xor
leave
jge
push
insl
sub
and
xor
pop
pop
cmp
orb
jne
sub
loope
les
cmc
inc
push
lods
push
jl
pop
ja
test
outsb
xor
mov
lods
push
jb
dec
mov
xor
in
inc
mov
mov
out
loopne
xchg
mov
fnstcw
jno
and
sarb
imul
js
inc
je
jo
dec
xchg
repz
into
loopne
cld
mov
test
movsb
mov
loop
xor
mov
mov
fwait
rcrb
and
lock
or
test
jno
xchg
cmp
xor
add
movsb
in
inc
sub
sbb
inc
in
jg
dec
and
xor
adc
js
adc
test
cwtl
leave
jge,pn
fbstp
lea
dec
shlb
into
fisttpl
bound
ret
arpl
gs
xchg
mov
ret
xor
repnz
nop
js
inc
mov
nop
xor
stc
mov
movsl
add
mov
int3
int3
jge
xchg
adc
shll
push
xor
fstpt
push
mov
xor
jbe
sub
movsl
jmp
sub
das
cli
mov
rol
inc
aas
repz
cwtl
push
mov
mov
ret
push
iret
xchg
jge
mov
mov
icebp
add
xlat
sbb
cmp
push
dec
cs
cwtl
inc
sbb
out
add
cmpsb
inc
xor
inc
iret
shl
mov
cmp
les
push
into
xchg
lock
adc
fdiv
xlat
and
lea
push
popf
inc
push
jg
xchg
inc
push
movb
ret
cld
mov
and
and
out
das
leave
test
and
repnz
lods
out
jle
lcall
retw
cli
pop
mov
testl
insb
fs
xchg
in
dec
adc
jmp
mov
xlat
fdiv
mov
cltd
jl
cmp
xor
cmpsl
int3
sahf
imull
gs
loope
mov
mov
rclb
mov
cmp
das
inc
lea
or
dec
push
or
add
push
leave
jl
mov
pop
pop
das
out
xor
sbb
push
mov
btc
lret
add
nop
dec
and
pushf
mov
dec
sub
dec
cmp
lret
jmp
pop
inc
mov
test
or
call
fs
add
ret
fstpt
dec
cmc
adc
cltd
xrelease
out
outsb
shr
mov
xchg
xchg
mov
aam
in
scas
add
or
add
inc
fsubl
pusha
into
insb
in
pushf
mov
out
sub
mov
mov
jecxz
hlt
push
pop
push
das
xchg
mov
add
dec
or
into
ja
mov
push
in
aas
or
sbb
add
inc
ljmp
in
inc
mov
outsb
adc
fstpl
xorl
xchg
mov
data16
pop
aas
add
add
lahf
fnstcw
jge
mov
bnd
pop
ret
cli
sub
filds
adc
mov
push
sbbb
xor
adc
jle
aas
icebp
sbb
enter
mov
dec
repz
stos
mov
push
dec
mov
scas
dec
mov
mov
pop
fs
fmuls
int
stc
cmp
add
sarl
jp
xchg
or
xchg
sbb
dec
rorb
lcall
inc
je
or
aad
dec
or
orl
shrl
mov
inc
mov
mov
test
cmp
aaa
adc
fisttpl
imul
mov
mov
cmpb
in
sub
xchg
add
inc
sbb
call
cld
movsb
mov
or
aaa
ljmp
outsl
sbb
xor
mov
ret
pop
lret
add
jge
jecxz
fidivrl
mov
jno
add
repnz
popa
lods
jnp
cmc
dec
stos
xchg
jns
xchg
shl
ss
insl
jp
movsl
ja
pop
dec
andl
arpl
add
test
xor
sub
mov
mov
fwait
scas
addr16
push
decb
push
pop
lret
int3
out
fcompl
and
add
xchg
xor
sbb
aad
mov
insl
mov
lret
mov
sbb
dec
mov
cmp
mov
pushl
jg
ret
test
fstpt
lds
fidivrs
mov
pop
aam
rorl
test
ret
or
pop
cmp
pop
adc
pop
push
test
xchg
xchg
pop
fists
mov
scas
imul
mov
aaa
lcall
cs
rcrl
ljmp
jnp
dec
xor
das
and
pop
addr16
mov
insl
ja
mov
mov
imull
adc
inc
data16
mov
xor
cmpsl
and
test
or
lock
lret
jge
insb
dec
mov
xorl
and
test
das
pop
addb
stos
daa
mov
andl
pop
xor
mov
and
int3
and
std
dec
xor
dec
push
xchg
loopne
lea
fdivr
or
sub
hlt
lcall
xchg
mov
push
ss
sbb
or
sbb
das
cmp
pushf
sub
inc
iret
movsl
into
test
sub
push
mov
sbb
dec
jne
ljmp
cs
mov
xor
ret
js
xor
mov
mov
imul
mov
ret
mov
ss
stos
es
cmp
fldcw
xchg
push
insb
push
pop
std
and
test
pop
fstpt
frstor
je
xchg
scas
sbb
pop
sbb
pop
subb
push
mov
mov
mov
xchg
mov
adc
adc
arpl
fs
sbbl
push
xor
xor
imul
mov
insl
pop
cmc
lret
mov
fisubs
inc
add
leave
sub
jecxz
bound
inc
dec
rclb
aas
sbb
cmp
mov
xchg
dec
ja
stc
je
mov
inc
jmp
and
nop
push
mov
jge
shll
mov
rclb
fs
jno
leave
loope
mov
or
pop
dec
scas
aaa
sub
cmp
std
ljmp
inc
mov
nop
mov
cltd
cli
addl
pop
dec
lahf
mov
or
test
xchg
test
xor
fwait
adc
loop
push
pop
xor
imul
or
addb
push
fsub
cmp
dec
xor
jp
cwtl
pop
lcall
mov
mov
and
clc
sbb
loopne
mov
insl
mov
movsl
mov
in
fcompl
in
dec
pop
inc
adc
adc
loope
mov
ficoml
jne
jle
int
xlat
push
push
jnp
dec
std
xor
pop
inc
add
dec
mov
int3
aas
mov
pop
mov
dec
jmp
inc
adc
imulb
in
subb
mov
out
xchg
mov
les
icebp
mov
add
movb
dec
mov
mov
leave
ret
jmp
pop
cwtl
out
and
test
mov
xchg
leave
xchg
mov
pop
ror
cmp
test
lret
jno
cmp
ret
sub
jae
sub
nop
in
cltd
or
sub
movsb
out
mov
in
push
pusha
dec
push
popa
lret
mov
imul
and
orl
call
rclb
cmpsb
add
cs
add
popa
jnp
arpl
pop
into
or
les
adc
xor
xor
jmp
stc
sub
dec
add
repnz
je
sbb
mov
aas
adc
orb
cmp
and
pop
cmpb
stos
int
push
fistpll
fcoml
dec
push
sub
and
mov
push
jbe
push
ljmp
inc
shll
out
test
sub
mov
movsb
jl
pop
fsubrs
mov
cmp
push
jb
dec
mov
inc
adc
aam
add
jbe
mov
or
pop
inc
popf
add
xchg
jg
aas
fmuls
jae
xor
sbb
call
or
popf
pop
push
mov
mov
jmp
clc
sub
rorl
mov
fsubs
mov
mov
sub
dec
mov
jne
push
mov
hlt
lea
rorb
adc
or
in
insl
xchg
dec
ss
mov
lret
xchg
inc
stos
cmpsl
out
aas
xchg
iret
aaa
lea
xor
cmpsb
cli
xchg
sub
or
jo
and
insl
lahf
xchg
int3
inc
adc
mov
pop
es
jo
int3
lea
icebp
std
out
jne
sub
pop
bound
lcall
pop
inc
inc
fstpt
adc
iret
cmp
addr16
xchg
inc
adc
std
stos
rorb
sbb
mov
ret
adc
inc
add
cld
int3
xor
and
add
jae
in
sub
test
dec
inc
mov
les
sub
push
jg
add
fdivrs
fs
daa
aaa
fs
loope
roll
xchg
mov
imul
lea
bound
fdivr
cmp
shlb
fldt
jae
mov
or
dec
or
sbb
fcoms
push
sti
test
call
jnp
repnz
and
ret
imul
xchg
test
cltd
iret
mov
int3
inc
sub
jae
inc
loop
out
aas
push
xor
pop
in
inc
cmpsb
xchg
dec
aas
or
inc
test
ret
mov
sub
testl
les
or
ret
shlb
nop
dec
inc
dec
in
and
push
cwtl
pop
jnp
adc
sbb
gs
rcrb
inc
xchg
nop
data16
scas
aas
ja
int3
movsl
jle
out
push
movsb
pop
aaa
outsl
enter
cltd
or
fwait
in
ja
mov
inc
xchg
xchg
ret
pop
fwait
mov
hlt
inc
cmp
insb
cmp
mov
cmp
fsub
xor
mov
fiaddl
cmp
mov
in
mov
fsts
int
xchg
mov
dec
inc
ret
jno
dec
mov
aad
mov
mov
popa
inc
int3
sub
stos
push
test
fcomps
sbb
add
mov
push
popf
or
dec
outsl
cmp
or
ret
fldcw
and
popa
ficoml
sbb
sub
xchg
cmpsb
lock
shll
and
cmp
xchg
inc
nop
mov
lret
inc
adc
push
mov
outsl
xchg
jp
xlat
mov
mov
mov
cs
or
testl
aam
pop
push
dec
cld
pushf
call
adc
jne
dec
jbe
cltd
sarl
scas
aam
jae
push
icebp
push
or
or
and
push
add
inc
jmp
pop
jecxz
sbb
inc
adc
je
shlb
fmull
sbb
pop
sbb
add
xor
mov
stos
pop
mov
pop
fwait
sbb
outsl
nop
push
iret
or
and
inc
les
mov
cmp
xchg
push
mov
push
fsubs
inc
psubusw
call
iret
mov
mov
mov
les
aaa
or
cld
aad
test
mov
jno
fsts
mov
push
inc
mov
ja
sub
push
cmc
add
xchg
add
cmpb
js
jmp
imul
jge
sub
cmpsl
sub
sub
jle
cs
fidivrl
xor
sar
add
or
pop
leave
daa
andps
fstpt
cmp
mov
in
sbb
pushf
cmpsl
ret
scas
int3
movsb
ds
out
inc
stos
sbb
or
or
outsl
or
adc
inc
pop
test
out
lds
push
or
test
push
pop
mulb
imul
ret
in
lods
enter
mov
test
addl
mov
pop
aad
sub
xchg
clc
mov
movsb
lods
in
addr16
sbb
mov
iret
mov
xchg
les
inc
cmpsl
stos
cld
push
jmp
mov
ja
fimull
mov
adc
popa
cmpsl
ret
mov
adc
xchg
push
shl
daa
jmp
xlat
lcall
sbb
and
pop
push
pop
iret
pop
loope
clc
dec
ret
mov
jae
je
sbbl
push
arpl
call
pop
sub
mov
push
push
loope
pop
insb
jns
jae
lret
sub
movsb
addr16
cmp
mov
add
push
jmp
or
jns
lods
idivl
inc
pop
fisttpl
pop
out
jecxz
dec
fnstsw
push
fs
js
rolb
mov
mov
inc
or
add
stos
into
push
imul
or
dec
or
shll
scas
sbb
divl
pusha
test
push
lret
push
lds
pop
ss
aas
xchg
in
shll
pop
cmpsl
dec
push
lret
ret
mov
push
cmpsl
ret
ficoml
mov
pop
jo
mov
and
int3
cmpsl
add
sti
cs
mov
dec
cmpsb
xchg
jecxz
cmp
lea
lcall
push
cmp
pushf
popf
xlat
or
test
lret
mov
int3
jno
xor
mov
icebp
mov
xchg
xchg
cmpsl
mov
imul
mov
repnz
mov
rclb
mov
sub
and
repz
lret
add
mov
xor
xlat
shlb
jl
jb
jne
shrl
mov
xchg
aas
cmp
stos
ret
ret
xchg
fdivr
fsubl
jl
fcmove
cmp
loop,pt
clc
sub
iret
inc
je
loopne
push
ret
sarb
adc
inc
inc
sarl
push
lret
fiaddl
fsubl
sti
push
mov
fsubrs
xchg
mov
scas
xor
js
xor
xchg
aas
or
lods
fsubr
add
cwtl
in
dec
xor
dec
mov
cmp
mov
jmp
mov
ret
mov
sub
pop
test
dec
mov
or
lods
jbe
add
out
sub
arpl
dec
sub
xchg
jb
mov
es
add
insb
dec
xlat
outsb
mov
mov
outsl
out
ss
sarl
mov
pop
mov
or
cmpsl
arpl
addr16
fiadds
leave
push
or
movsb
imul
insl
and
mov
xor
aas
cld
pop
add
mov
bound
inc
es
into
jo
ret
and
into
pop
cwtl
scas
pushf
mov
into
es
and
sub
mov
dec
shlb
push
jne
or
bound
cmp
fnsave
add
in
jg
mov
movsb
sbbb
test
sbbb
call
mov
mov
je
testl
or
mov
jp
xorl
add
xor
and
dec
sbb
pushf
popf
push
cs
or
pop
and
or
inc
fldenv
or
out
lods
inc
cmp
shrl
pop
cmp
test
hlt
out
in
lahf
stc
pushf
pop
js
and
mov
and
mov
pop
jl
sbb
pop
pop
cmp
leave
je
in
add
xchg
mov
pop
test
test
jg
scas
push
xor
pop
xchg
mov
jnp
lds
sbb
ja
out
mov
push
fidivl
loope
mov
add
push
pop
add
test
cmpsl
adc
mov
dec
or
out
push
cmpsl
mov
push
arpl
adc
xor
lock
or
lock
push
sub
mov
add
out
xor
lret
xchg
push
pop
lret
add
mov
sbb
clc
push
cmp
je
popa
test
mov
xchg
test
push
push
jno
clc
cmp
mov
pop
mov
xchg
popa
sub
dec
pop
sub
cmp
fmull
adc
sub
add
mov
sbb
in
jae
push
das
outsl
adc
decb
mov
sbb
add
add
add
sub
loop
add
inc
sub
sub
movsb
adc
lret
fcmovnu
negb
das
sti
sbb
repnz
sub
fiaddl
xchg
cld
inc
mov
lcall
out
cmp
pop
mov
dec
push
into
aad
pop
xchg
mov
add
ja
mov
mov
test
dec
aam
xor
int
jecxz
dec
vxorps
and
ficompl
adc
js
dec
dec
fimull
push
xor
pop
mov
nop
mov
outsb
sbb
add
fs
outsl
shlb
inc
orb
or
mov
inc
mov
stc
cmp
mov
lret
subl
push
mov
push
mov
mov
adc
fsubs
cli
mov
inc
scas
dec
push
aad
pop
pop
xorl
ja
aas
ds
dec
push
xor
mov
pop
sub
xchg
dec
xlat
jo
cmp
in
repz
inc
cs
dec
out
xor
jge
insb
repz
in
dec
insl
cmp
outsb
sbb
icebp
ja
sbb
and
jp
rorl
sbb
xor
push
scas
inc
jnp
mov
add
sarl
xchg
xchg
dec
cmp
mov
enter
and
xor
cld
rcrb
push
mov
mov
xchg
subb
add
cmp
and
in
lods
mov
mov
rcrb
lods
mov
mov
jbe
and
mov
pop
movsl
cmp
xchg
outsl
jne
mov
sub
shrl
dec
out
dec
in
addb
mov
popf
ss
jo
jl
mov
dec
and
js
push
test
inc
mov
in
push
xchg
add
dec
pop
mov
enter
cld
jge
mov
cmp
sub
or
sub
jle
bound
pop
cmp
and
scas
dec
out
mov
inc
lret
mov
cmp
inc
sub
sub
or
pop
mov
push
addl
inc
or
mov
call
sahf
jns
fstps
clc
inc
pop
test
inc
xchg
jnp
fidivrl
dec
add
lea
nop
dec
mov
jecxz
lods
pop
rorl
mov
nop
cwtl
mov
das
xchg
jg
iret
add
sub
shll
nop
pop
mov
fistl
pusha
and
sub
test
pop
and
ja
xor
pop
repz
nop
sub
jne
daa
cmpsl
add
mov
leave
fnstsw
movsb
cmp
dec
mov
mov
pop
sub
fucomp
pop
hlt
leave
aas
push
cmp
sub
or
jmp
jno
jns
cs
jns
jae
fidivl
mov
jmp
sub
je
mov
push
cmp
inc
push
mov
mov
cltd
pop
imul
rcrb
cmp
dec
mov
mov
jns
jbe
stos
dec
or
sub
mov
flds
inc
mov
icebp
mov
dec
lds
sbb
cmp
les
aaa
pop
arpl
call
sahf
jns
fldln2
inc
roll
jnp
fistpl
mov
jmp
jns
movsb
inc
pop
jnp
fisubrl
dec
enter
ret
adcl
push
and
cld
aas
aam
xchg
cmp
pop
sub
fidivl
pushf
out
test
ja
sub
sbb
inc
test
in
fidivl
mov
hlt
shl
ret
scas
mov
fsts
jl
or
mov
xchg
adc
push
test
enter
cmp
imul
sub
jae
ds
fbstp
pop
mov
sbbb
sub
cmp
jmp
lcall
pop
test
mov
jp
ja
bound
aas
mov
sahf
sub
cmpsb
mull
push
addr16
jns
movsl
in
mov
mov
sbb
xor
in
mov
xor
mov
lret
inc
jp
sbb
shll
xchg
imul
stos
inc
into
push
mov
sub
rol
lret
pop
ret
cmp
fcompl
adc
sub
sub
shll
pop
insb
aas
movsl
aam
dec
into
cmp
push
xchg
pop
in
pushf
mov
jmp
cmc
pusha
mov
bound
jl
loop
mov
stos
aad
inc
stc
and
push
dec
aam
jle
inc
mov
movsl
in
xor
and
lea
daa
dec
inc
cwtl
sub
imul
outsb
sub
mov
jecxz
add
insb
bound
add
mov
lea
sub
xor
add
push
pop
mov
cwtl
mov
mov
dec
or
scas
pop
lahf
je
xor
in
inc
repz
cmpsl
mov
sbb
call
and
xchg
jg
inc
bnd
ret
cli
push
jp
jno
mov
lock
fwait
in
arpl
imul
arpl
cmp
push
sbb
sbb
jle
push
aaa
das
orb
int3
enter
and
dec
cmp
mov
shll
cmp
mov
jmp
pop
lods
shrl
jg
cwtl
int
fildl
jo
add
test
mov
aad
fcmovnbe
loopne
int3
fs
ret
push
dec
rolb
jg
jbe
sub
or
cli
mov
enter
and
push
inc
lret
mov
xchg
cs
sarb
adc
pop
mov
loope
push
cld
pop
jmp
dec
mov
call
xchg
jnp
repz
in
fptan
jns
mov
ret
inc
inc
push
adc
repnz
mov
xor
cmpsl
aam
outsl
xlat
push
fmull
aam
stos
pop
lret
fisubrs
or
fwait
adc
in
lea
sahf
insb
sbb
xchg
mov
outsl
cmc
cmp
jne
in
test
jge
jbe
or
ret
mov
mov
dec
repz
sub
movsl
in
jmp
test
fcomps
jle
mov
sbbb
call
sbb
jns
and
dec
jge
lods
cmp
iret
aas
push
pop
jae
lcall
sti
shl
gs
int3
jmp
sahf
push
xor
rclb
push
lcall
jo
xchg
cmp
loop
jl
add
sub
and
mov
cmovbe
fldenv
jge
fldcw
jg
test
rcrb
mov
cwtl
in
lret
fcmovu
les
mov
push
cmp
jg
add
and
mov
enter
mov
or
pop
daa
inc
inc
cmp
fists
inc
popl
int3
add
cwtl
mov
cmpsb
or
push
and
dec
inc
mov
mov
and
lea
cmpsb
cmp
outsb
add
jb
add
js
push
fcmove
dec
outsb
jb
mov
adc
inc
mov
movsl
jmp
or
fstpl
sub
pop
fwait
cmp
repz
insb
xchg
flds
jno
les
call
xor
bound
imul
adcl
frstor
dec
pop
loope
xchg
cld
and
ds
lods
ret
mov
idiv
mov
mov
sbb
mov
inc
fists
mov
lods
xchg
cmpsl
cld
adc
or
mov
and
out
decb
dec
or
xor
mov
inc
inc
mov
jno
mov
xchg
dec
stc
pushf
push
popa
mov
or
test
cs
imul
or
xchg
lock
sti
fldenv
dec
sub
imul
sub
imul
pop
leave
inc
push
mov
mov
les
clc
inc
pop
xor
fistpll
cmp
adc
lock
adcb
test
ds
es
cmp
ds
jg
loopne
imul
rcll
adc
jmp
xor
mov
cmpsl
xchg
add
addr16
lods
xor
cmp
add
jo
xchg
cltd
ficomps
aaa
jne
cmpsb
and
jmp
xchg
pop
fs
insb
fs
sbb
adc
shrb
mov
dec
jg
jb
in
inc
sarb
dec
jge
data16
and
lds
mov
add
movsb
mov
xchg
xchg
mov
sub
or
mov
and
loope
and
or
insl
jns
jno
xchg
mov
lret
adc
adc
jg
insl
push
xor
adc
add
mov
sahf
hlt
cmp
fdivrs
cwtl
mov
and
jne
leave
sub
call
xor
test
lds
roll
imul
ret
cwtl
cld
int
or
or
xchg
cmp
pop
mov
movsb
mov
mov
cmpb
mov
pop
or
stos
push
mov
gs
or
cmc
orl
loop
dec
dec
lcall
fbstp
adc
adc
scas
jl
jmp
fildl
mov
pop
mov
push
xor
loopne
imul
es
add
and
and
leave
mov
test
mov
jge
rorb
ljmp
js
add
mov
cmpsb
loope
cmpb
leave
aam
test
cmp
repz
inc
pop
sub
mov
pop
pop
add
fidivrl
mov
jp
clc
sarl
dec
sbb
lcall
sub
mov
sub
push
jno
imul
inc
jnp
pop
pop
jge
xlat
lock
or
lahf
and
inc
aad
mov
or
int
or
adc
fnsave
mov
xor
sbb
and
js
mov
and
inc
or
fwait
inc
or
cmp
test
lds
mov
fcomip
ja
int3
jg
add
add
sub
mov
pop
mov
mov
mov
mov
adc
rcr
cld
or
mov
cltd
cmp
xchg
xchg
and
in
pop
xor
mov
and
xchg
push
push
push
jo
scas
sub
push
lret
bound
cmp
iret
popf
pop
ja
arpl
adc
add
sub
xor
and
pop
mov
mov
in
jle
mov
inc
orl
stos
xchg
mov
dec
das
ljmp
aas
mov
adc
dec
into
fs
sarl
dec
imul
std
push
mov
mov
dec
leave
shll
adc
adc
imul
cld
out
xor
pop
js
out
and
sbb
ja
clc
mov
and
push
decb
ret
sahf
ljmp
xor
ret
pop
mov
push
div
sbb
test
out
hlt
in
subl
pop
andb
fmuls
push
leave
mov
xchg
xchg
imul
mov
add
inc
mov
dec
pop
inc
jmp
stc
or
test
call
lods
inc
jp
in
push
stos
push
in
pusha
xchg
fisubl
dec
mov
aas
mov
stc
ja
mov
mov
pop
lea
mov
iret
sbb
std
xchg
jle
pop
sahf
jl
mov
xor
leave
dec
imul
loope
mov
fistpll
ret
fwait
mov
std
dec
cmp
test
in
cmpsl
push
outsb
dec
jge
sub
mov
jno
call
pop
lods
pop
aam
aaa
enter
in
fs
dec
cmp
nop
xchg
sub
fwait
into
cmp
jo
xlat
enter
jo
and
jno
push
into
push
shl
int
xlat
add
sbb
jne
invlpga
mov
jmp
inc
scas
add
pusha
andb
adc
mov
out
add
dec
subl
cli
lock
movsb
nop
pop
or
fldcw
fidivs
aad
and
add
movsl
push
or
adc
imul
add
jp
lret
fadd
leave
xor
xor
or
gs
shll
mov
sub
cmpb
pop
push
xlat
jnp
in
nop
leave
pop
jmp
mov
jo
push
dec
dec
cmc
xchg
pushf
std
sbb
outsb
cs
rorb
push
pop
js
add
mov
popf
dec
jmp
cld
pop
mov
mov
pop
push
lods
add
jge
xchg
dec
and
test
out
xor
data16
es
sub
push
push
repz
pop
sbb
cmpsl
aaa
lea
aas
sub
jae
lods
jle
cmp
sub
ljmp
jb
fmuls
pop
or
ja
adc
hlt
xchg
loopne
aas
mov
cltd
jecxz
cmp
out
inc
push
and
pop
fisubrs
cltd
push
cmp
push
push
call
mov
fdiv
jne
sbb
rcl
and
test
pop
push
test
les
or
mov
fwait
js
mov
push
not
rorb
fstpl
shl
lret
mov
mov
ljmp
sbb
dec
cmp
xor
cmp
mov
adc
je
pop
lock
mov
repz
jl
mov
xor
pop
hlt
cwtl
fisttps
inc
sahf
adc
xchg
jno
das
xchg
or
icebp
and
xor
fcomps
add
aaa
cmpsb
or
bound
push
ja
inc
dec
cmp
cmc
dec
rolb
inc
lcall
mov
lahf
push
xlat
hlt
dec
in
push
mov
cltd
mov
mov
int
cli
push
loop
dec
xor
jle
and
push
lcall
cltd
or
je
pop
int
orl
lret
dec
adc
jbe
fwait
mov
sub
movsb
and
adc
repnz
push
fistps
dec
sbb
jle
shrb
sub
inc
fwait
or
push
inc
and
xchg
cmp
repnz
jge
pop
adc
mov
inc
mov
mov
or
push
sub
xor
test
or
fisubs
mov
sub
popf
shrl
loop
and
add
cmp
mov
mov
mov
pop
mov
ljmp
dec
mov
repnz
xor
mov
add
ljmp
leave
pop
lret
xchg
push
es
mov
cmp
mov
leave
int3
mov
pushf
es
popa
sub
lcall
pop
sub
insb
leave
insl
cmp
xor
lock
add
cmc
sub
movsb
sbbl
pop
mov
cwtl
mov
sub
mov
add
mov
iret
xor
xchg
xor
ret
add
sbb
cltd
shlb
rolb
dec
pusha
test
add
bound
int3
out
jge
and
stos
mov
aaa
nop
mov
ja
lret
sahf
pop
int3
sbb
arpl
cli
mov
aam
or
inc
dec
in
xchg
sbb
popa
jne
sbb
subl
inc
lods
xchg
movsl
jg
gs
sarl
stos
mov
inc
xchg
xor
cmp
mov
sahf
test
dec
cmp
test
and
cld
fldl
rolb
adc
loop
mov
push
in
add
jb
dec
jle
add
xor
subb
aas
mov
sub
mov
pop
pop
pop
mov
mov
ja
cmp
dec
sbb
and
or
pop
pusha
ret
addb
cld
in
and
ja
push
outsb
rcrb
dec
and
xchg
nop
cmp
mov
jae
fcmovnbe
and
xchg
out
push
mov
test
into
inc
les
mov
inc
add
in
cltd
loopne
xchg
pusha
pop
popf
stc
loope
in
inc
mov
movsl
ficoms
sbb
jae
inc
movsb
jp
mov
jo
adc
xor
int3
jmp
sub
fmuls
mov
fldz
and
or
pop
xchg
add
or
sub
nop
xor
add
insl
sbb
ficoml
sti
fld
xor
jo
lods
jmp
out
lods
loope
pop
push
stc
mov
inc
add
mov
or
cltd
ljmp
rorl
sub
and
xor
jp
and
mov
jmp
pop
push
cmp
shll
dec
mov
inc
lods
daa
mov
mov
xchg
ds
fisubs
fs
mov
adc
or
popa
ds
cli
push
mov
dec
mov
stc
addr16
decb
outsb
inc
adc
mov
mov
aaa
inc
test
jge
hlt
out
pusha
sbbl
mov
sbb
jno
inc
or
dec
pop
sbb
imul
jecxz
nop
jmp
sahf
hlt
jo
inc
out
mov
dec
std
mov
scas
scas
cmp
add
push
xchg
rcll
mov
and
mov
ljmp
sbb
sub
inc
sbb
xor
inc
shlb
mov
cmp
inc
and
leave
das
or
xchg
adc
shll
leave
jge
mov
mul
filds
and
adc
dec
xchg
in
scas
sub
and
mov
cli
jg
mov
ficoml
jae
lcall
mov
mov
fimuls
fcompl
lret
sbb
loope
adc
outsl
mov
push
ja
cmpsl
je
loop
adc
xchg
push
and
push
movsb
shrb
jno
jne
mov
push
xchg
mov
stos
add
aas
test
jmp
stos
jge
int3
in
mov
in
shr
dec
cmp
in
jo
in
sub
sbb
lret
and
adc
outsb
imul
and
sti
jle
adc
sti
rcl
jp
lahf
inc
or
and
stc
out
inc
jno
pop
xchg
addb
loop
dec
inc
pop
push
dec
sub
cmpsl
or
mov
js
mov
cwtl
fs
jmp
stos
sub
jp
fstpt
movsb
lds
sbb
mov
xchg
mov
bound
mov
or
mov
jno
sahf
fcomps
sub
or
call
cmc
std
int
or
push
inc
inc
mov
pusha
sbb
or
fs
rorl
xchg
add
mov
js
gs
imul
pop
in
imul
mov
push
hlt
stc
es
adcl
pop
and
jge
test
call
jle
xchg
mov
popa
jl
pop
call
gs
push
sbb
or
jp
or
pop
adc
std
out
test
jmp
sarb
ret
jae
std
push
arpl
dec
dec
sbb
imul
enter
add
push
mov
imul
xor
cmp
and
jmp
adc
pop
dec
lret
loopne
push
sbb
sbb
cltd
enter
or
cmp
mov
test
push
out
sub
in
xchg
jmp
shr
js
mov
mov
push
roll
mov
jmp
adc
hlt
sub
push
xor
and
aad
mov
pushf
clc
mov
lcall
jecxz
add
ljmp
pop
lret
dec
mov
lock
pop
sbb
movsb
inc
mov
cmp
cmc
mov
lds
popa
pop
cwtl
pop
jg
inc
push
cltd
xchg
sarb
aam
stos
mov
lret
sub
dec
mov
sbb
mov
sarl
addr16
enter
fidivrs
mov
jmp
and
cwtl
mov
ds
leave
adc
cmp
pop
and
enter
sbb
inc
scas
sbb
push
cmp
les
enter
imul
out
rol
dec
inc
fst
andl
push
inc
cmp
imul
bound
pushf
shrb
and
pop
sahf
dec
insb
jmp
mov
insl
sbb
mov
enter
mov
pusha
rclb
mov
and
fmuls
clc
call
ror
jmp
or
push
je
mov
pop
jecxz
sarl
or
mov
push
lcall
lret
sbbb
pop
and
fnsetpm(287
jo
repz
push
mov
inc
mov
rcll
cmp
enter
sub
into
enter
cmpsl
cmp
ret
sub
and
mov
out
inc
lret
js
test
xchg
int3
jge
mov
bound
mov
sub
jmp
inc
add
lret
jo
dec
jo
adc
adcl
inc
or
dec
fdivs
xchg
movsb
sbb
or
rcll
lret
cld
fisubl
mov
inc
stos
rolb
cmp
sub
cmp
dec
mov
mov
dec
ret
mov
inc
std
sarl
out
inc
sbb
adc
jl
and
adc
inc
loopne
jnp
addr16
sbb
adc
in
xor
lods
inc
xor
aas
in
mov
std
push
insb
xor
stos
test
and
enter
push
cmp
ret
std
outsl
sbb
fmul
ljmp
jge
xchg
jle
xchg
scas
fs
arpl
inc
inc
sbb
or
mov
les
fisttpl
jp
test
pop
mov
mov
jp
or
sbb
stos
xor
xchg
push
jge
sub
push
inc
mov
shrb
arpl
sub
mov
call
in
mov
ret
mov
test
imul
mov
dec
test
movsl
lods
adc
mov
pop
jnp
out
pop
lods
pop
xchg
jns
jp
movsl
nop
int
pop
lret
jnp
fwait
cmp
dec
jge
inc
jp
mov
andl
jbe
ret
lds
out
ja
sbb
sbb
cltd
fiaddl
sahf
iret
shrb
sti
cmpsl
push
loopne
dec
push
mov
sub
daa
pop
lret
add
adc
shr
movsb
lods
aas
aad
push
mov
push
leave
sbb
add
stc
rcr
inc
clc
inc
mov
mov
sub
xor
dec
cld
mov
mov
push
add
sarb
adc
push
add
xor
test
mov
cmp
inc
add
inc
fisttps
jge
pop
mov
add
push
dec
shll
mov
or
cmpl
stos
cmp
cmp
xchg
sub
mov
xor
jmp
jnp
inc
cmp
sbb
shrb
xchg
mov
jnp
fldcw
pop
imul
mov
std
icebp
test
sbb
add
push
jle
fistpll
fucomi
outsb
and
mov
das
xorl
add
sub
daa
hlt
jns
in
jg,pt
mov
imul
cmp
xchg
and
xchg
stos
sbb
std
adc
iret
fdivrl
dec
imul
xchg
inc
or
sbb
ja
andb
or
pop
lds
das
add
js
mov
das
push
inc
add
dec
pop
adcb
gs
jnp
xchg
mov
add
dec
enter
mov
cmp
push
dec
arpl
xchg
add
push
cltd
sub
les
fisubrs
insb
pop
iret
jbe
mov
pop
sub
and
adc
add
rorl
sub
dec
dec
sbb
fstpt
mov
mov
daa
movsl
jns
aas
ret
and
jl
jnp
sti
inc
mov
mov
decb
sub
cltd
push
mov
or
inc
fistps
fldenv
dec
jecxz
loopne
fbstp
scas
in
push
adcb
shrl
loopne
mov
shrb
or
xchg
gs
imul
and
in
repz
sbb
int
cwtl
cwtl
fistpll
cmp
jbe
pop
movsb
jg
and
and
fs
sbb
subl
pop
jmp
lret
xor
subl
insl
daa
and
lret
jl
pop
inc
mov
lods
adc
shl
in
popf
sbb
and
insb
and
and
add
nop
push
sub
push
mov
dec
test
mov
fisttpl
or
mov
popf
mov
ffree
loopne
push
gs
mov
ss
bound
adc
iret
jbe
inc
ret
add
adc
push
popa
jmp
das
pop
mov
movsl
fs
xchg
cmc
cwtl
es
repnz
adc
rorb
mov
xchg
js
rcll
mov
add
or
dec
xor
adc
mov
fiaddl
sub
lahf
push
imul
fs
pop
adc
sahf
adc
loopne
cmp
push
add
mov
sahf
mov
bound
lret
icebp
scas
xor
fisubrs
std
dec
ljmp
cmp
inc
cld
adc
scas
iret
mov
or
inc
cmpsb
add
push
add
int
nop
shlb
icebp
imul
inc
cmp
subl
cli
out
mov
add
jb
dec
pop
imul
inc
or
lahf
lcall
lods
fcoms
push
fidivs
lret
in
dec
add
jno
popl
movsb
data16
inc
das
xchg
or
xchg
cmp
pushf
lods
pop
pusha
mov
ja
int3
icebp
test
inc
repz
cwtl
cmpsb
xchg
add
lcall
imul
xchg
bound
inc
xchg
pop
mov
rcrl
add
add
mov
xchg
mov
cmp
sahf
cmc
add
iret
je
lret
fadds
enter
xchg
dec
add
enter
lds
sbb
dec
adc
inc
pop
clc
push
movsl
je
cmpsb
rcl
inc
or
pop
arpl
adc
mov
call
dec
xor
mov
xor
insb
gs
inc
xor
mov
jle
fcoml
push
cmp
addb
cld
adc
dec
mov
cmp
fwait
mov
mov
test
js
leave
xor
sbb
insb
and
mov
push
sub
add
mov
and
or
jp
dec
push
xor
test
mov
jmp
or
or
mov
rorl
jnp
insl
lahf
add
cmpsl
es
std
inc
xchg
in
add
sbb
xchg
jno
dec
xor
mov
ds
add
push
lahf
rolb
push
inc
orl
dec
sub
sub
movsb
mov
adc
adc
dec
mov
out
jb
inc
adc
stos
sub
push
mov
lds
mov
pop
sti
and
push
adc
frstor
fwait
push
add
xchg
push
xchg
mov
push
fistpll
insb
dec
sbb
push
mov
mov
and
call
and
xchg
das
stos
xchg
inc
sub
or
shll
and
jle
outsb
aas
into
fdivl
popa
imul
adc
mov
xchg
jns
inc
fcmovnb
je
mov
xorb
dec
lret
lret
jl
verw
xchg
pop
repnz
sub
mov
repz
xchg
inc
dec
jnp
scas
and
out
add
mov
lahf
mov
mov
test
adc
pushf
mov
inc
fs
mov
clc
cmp
jmp
jecxz
roll
add
push
mov
hlt
mov
das
push
cmp
xor
icebp
mov
push
or
sub
mov
jl
ds
rol
test
sbbb
pop
push
lret
xchg
or
pop
cmp
ljmp
jmp
jb
sbb
cmp
mov
push
dec
inc
mov
pop
sub
and
stc
mov
pusha
cmp
out
jecxz
pop
pop
pusha
xor
scas
movsb
pushf
fcmovne
int3
jmp
cmp
adc
jae
fidivl
mov
cmp
aam
mov
and
jnp
lock
gs
pop
pop
xchg
popa
daa
xor
sub
adc
cmpsb
or
outsl
ret
jl
es
clc
mov
lods
mov
dec
in
roll
aam
jp
dec
lea
jmp
sbb
mov
cmp
cld
xor
fldcw
std
mov
nop
xor
stos
mov
popa
enter
loop
add
jg
cmp
mov
or
push
lret
sub
xor
push
aad
insb
pop
inc
mov
dec
mov
outsl
or
add
fadds
xchg
ret
dec
mov
cmc
dec
fdivs
sub
inc
into
insb
ss
xchg
jge
leave
cli
adc
xor
and
lea
sbb
test
push
xlat
or
ret
mov
lret
mov
cmpsb
pop
push
jae
call
mov
imul
dec
sti
xchg
or
adc
push
sub
nop
cmp
cwtl
dec
movsb
jne
les
fldt
mov
cli
push
ficoml
xlat
or
cmp
sarb
rcll
or
das
lahf
mov
sahf
mov
ljmp
enter
mov
add
leave
adc
and
lds
fbld
xlat
mov
dec
xchg
fldenv
xchg
adc
fwait
cmp
lods
fcmovnu
mov
cmp
shrl
pop
cli
xor
pop
int
inc
mov
mov
call
sti
mov
xor
pop
add
jno
xchg
mov
inc
iret
sub
pop
inc
dec
jge
inc
xchg
insb
imul
dec
cmp
mov
loope
pop
lret
cli
mov
cmpb
mov
pop
fmull
pop
sahf
pop
xchg
clc
fmulp
and
loopne
sbb
hlt
vmread
push
loop
add
add
test
ret
rorb
ror
and
out
and
lret
push
cmpsl
scas
movsb
or
mov
mov
ret
mov
add
pop
push
inc
leave
lods
cmpsb
rcrl
pop
loopne
pusha
icebp
subl
inc
mov
imul
or
cmp
cmp
ja
or
mov
ret
push
movsb
imul
pop
imul
and
fidivrl
pop
mov
and
pop
loopne
dec
add
sbb
inc
sub
fwait
movsb
and
fs
mov
test
pop
insb
inc
pop
outsl
std
cmp
inc
insb
loope
xor
sti
sub
push
ret
push
pop
add
sub
nop
sub
shll
fisubrs
mov
mov
inc
cmpsl
icebp
in
adc
int3
dec
xor
enter
in
pusha
mov
lods
ja
inc
sub
xchg
sub
push
inc
inc
clc
dec
outsb
fwait
rorb
mov
addr16
xchg
inc
sbb
mov
aad
dec
loopw
xor
fbld
sbb
sbb
jnp
inc
lods
loop
aaa
pop
insl
xchg
in
insl
addb
mov
dec
cmp
and
sbb
dec
aas
movsb
pushf
jae
int3
cli
cmp
push
xor
fnstenv
in
push
adc
movsl
repnz
aas
mov
xchg
sub
pop
pop
rcrl
pop
mov
mov
iret
xor
pop
mov
loopne
mov
ret
and
mov
in
pop
pop
rcrb
rcrb
jge
lret
push
jo
cmp
cmpsl
push
shrb
ja
pop
stc
adc
aaa
pop
push
lahf
mov
xor
roll
leave
mov
pusha
inc
mov
and
in
mov
cmp
test
les
enter
pushf
lods
cltd
mov
xlat
aas
test
mov
cmp
fsubl
fstps
mov
clc
sub
sbb
xor
sub
jae
cmp
mov
fildll
adc
dec
addb
dec
add
sbb
sub
pusha
dec
sarb
fists
adc
dec
lds
add
gs
andl
popa
dec
jo
loope
inc
xchg
and
lock
xchg
adcb
dec
add
inc
jo
lods
lret
jnp
lcall
mov
lods
xchg
xchg
xor
movsl
aam
sbbb
cwtl
xchg
dec
cmpsb
sbb
xor
cmp
jl
in
cmp
cmp
push
jmp
outsb
inc
outsl
push
or
pop
xor
leave
jae
push
lret
data16
lahf
sub
and
call
adcb
inc
add
cltd
fistl
inc
sub
les
insb
int3
clc
lcall
dec
xchg
in
dec
jne
adc
xchg
jbe
or
ljmp
xchg
imul
rcrb
cmp
or
mov
sahf
cli
ss
mov
or
jmp
cmp
lahf
sbbb
orb
cmpsb
ds
sub
es
imul
ret
xchg
loopne
in
int3
cld
pop
pop
jl
cmp
pop
hlt
inc
aad
imul
ss
dec
cltd
cs
pop
rcll
imul
mov
cmp
sub
dec
pop
ss
xchg
inc
add
loopne
mov
xor
jp
enter
les
mov
addr16
sbb
xchg
add
outsb
xor
jno
outsb
nop
pushf
mov
xor
dec
imul
jbe
test
fdivs
add
inc
stos
jae
and
ret
out
stc
mov
dec
xchg
cmp
and
fnstsw
iret
xor
enter
arpl
movsb
mov
jg
or
pop
and
xor
sbb
sbb
sub
dec
push
mov
cmp
aam
sub
or
dec
fadds
mov
pop
cmpsl
jg
add
fistpl
cs
cmp
insb
mov
mov
jbe
xchg
pop
sbb
xchg
or
loope
mov
std
mov
mov
cld
fisubs
mov
pop
outsb
mov
jecxz
test
pop
sarb
dec
stos
test
adc
cltd
in
and
inc
cwtl
ds
push
packssdw
pop
ja
clc
andl
mov
stos
or
adc
mov
or
xchg
mov
and
inc
stos
xchg
add
fsubrl
daa
aad
sbb
pop
test
mov
cmpsb
ret
int3
rclb
cmpl
nop
xchg
call
int3
push
pop
iret
lock
push
cmp
or
subb
push
mov
lcall
roll
inc
movsb
cmp
rorl
fwait
cmp
dec
add
shl
push
and
jle
neg
pushf
imul
mov
lret
push
popa
je
jbe
mov
outsl
cltd
mov
ljmp
mov
cmp
inc
pop
inc
add
mov
adcl
pop
push
pop
lods
cld
dec
out
ret
nop
xchg
lret
rolb
adc
dec
xor
repz
sti
sbb
das
mov
mov
jge
lahf
xchg
cmp
mov
push
iret
xor
mov
ja
clc
xchg
mov
and
loop
dec
in
lcall
test
out
or
sub
xchg
into
sbb
testl
ljmp
adc
insb
stos
lea
cmp
jg
repz
inc
add
lods
shlw
nop
movsl
outsb
jne
lahf
in
or
int3
cld
bound
or
lahf
les
cwtl
mov
cs
icebp
or
dec
scas
cmc
xchg
sub
les
hlt
mov
add
inc
cmp
inc
pop
mov
dec
push
push
fnstsw
dec
mov
rcl
jae
stos
adc
pop
ret
fstpt
cmp
lcall
test
and
mov
cmp
adc
inc
scas
cmp
lret
mov
sub
xlat
lods
mov
adc
test
iret
sar
jg
movsl
xlat
inc
mov
sub
les
mov
scas
jbe
aam
movsl
jp
fldt
push
mov
vpaddusb
dec
inc
pusha
mov
outsl
hlt
adc
sbb
mov
add
out
jg
lret
test
mov
scas
or
dec
and
sti
cmp
dec
xchg
jns
push
add
jg
shlb
jp
test
int
push
push
test
cmpsb
cmpl
add
pop
xchg
out
dec
mov
jne
into
add
mov
mov
loop
fcoml
cltd
bnd
dec
inc
inc
xchg
push
test
mov
inc
mov
add
xchg
fimuls
decb
xchg
jno
adc
push
bound
ret
mov
xchg
pop
mov
adc
fcoms
fbstp
xchg
push
lcall
dec
push
imul
or
mov
scas
data16
cmp
push
adc
mov
ljmp
or
push
lcall
mov
mov
inc
popa
rorb
jl
xor
push
mov
imul
cmp
les
cmp
in
jnp
dec
loop
outsb
fdivr
mov
dec
or
pop
stos
dec
sub
push
aad
movsb
add
lds
daa
cmp
lret
stos
fwait
jo
push
mov
xor
dec
mov
jnp
pop
cld
fisttpl
sahf
lods
das
inc
mov
sahf
and
push
gs
or
hlt
sbb
cmpsb
fimuls
int3
mov
push
jo
add
sbb
or
int3
adc
jb
jo
cmp
das
xchg
and
cmp
leave
mov
push
mov
sub
xor
cld
mov
cmpl
repz
or
ret
js
lahf
add
rclb
js
add
ds
dec
mov
mov
sbb
add
pusha
mov
leave
lods
test
aam
push
in
out
mov
pop
jo
ds
stos
addr16
iret
jno
lcall
mov
jle
int
nop
sbb
cmp
xchg
ds
pusha
mov
popa
movsl
cmp
inc
ret
dec
pop
out
inc
movsl
iret
nop
outsb
inc
jbe
pop
idivl
lret
add
dec
fildl
ja
pop
int3
jnp
lods
flds
adc
xchg
ret
pop
or
push
ret
test
add
mov
pop
sub
mov
sub
and
fs
int
aas
negb
or
fwait
mov
insl
mov
add
add
ss
adc
call
adc
inc
lock
inc
inc
mov
nop
test
stos
imul
pop
call
rcrl
fwait
sub
push
xlat
popf
ja
mov
inc
xchg
or
aaa
mov
jne
in
sbb
int
sub
jmp
inc
test
jbe
mov
sub
jp
std
pop
aas
add
mov
call
aad
push
or
mov
cmp
inc
lds
dec
mov
std
nop
pop
fyl2xp1
loope
cld
inc
sahf
sub
cmp
movsl
inc
jae
stos
notb
sbb
sub
rorb
pop
outsb
aaa
mov
jo
in
aas
pusha
leave
icebp
sbb
pop
pop
dec
add
xor
and
dec
sbb
jno
fldenv
sbb
and
push
add
or
mov
or
jno
popf
mov
mov
es
cmpsl
or
jo
dec
push
mov
popf
leave
adc
fadds
fisttpl
inc
push
and
mov
loop
lods
push
inc
sub
ffree
lahf
cwtl
add
pcmpgtd
xchg
stc
mov
mov
cmp
and
cmc
push
mov
sbb
dec
jl
les
lea
push
mov
sub
adc
xchg
loopne
decb
pop
xor
pop
push
cmp
push
scas
aam
cmpsb
cmp
push
lret
sbb
add
movsb
clc
cmc
call
dec
dec
sbb
adc
lret
stc
jp
sti
inc
subl
loop
and
lock
cmp
push
sbb
adc
adc
push
pop
test
adc
push
shll
mov
test
ss
push
mov
jno
icebp
roll
aas
mov
jecxz
cmp
adc
sbb
inc
pusha
inc
xchg
mov
dec
push
sub
fistps
data16
or
mov
mov
mov
pop
mov
stc
xor
lods
dec
nop
fndisi(8087
xor
lds
lea
sbb
mov
sub
pop
rcll
ror
loop
pop
inc
test
dec
xor
sbb
ficompl
mov
test
int3
insb
jns
pop
cmp
aad
sub
call
mov
fdivp
jae
lods
add
rolb
shrl
int3
and
pop
jnp
lds
adc
dec
mov
pusha
stc
inc
js
nop
mov
adc
pop
vmwrite
mov
enter
mov
push
inc
dec
xchg
dec
stos
jae
inc
rol
mov
xor
stos
call
dec
rorl
or
xchg
sbb
lea
sub
movsb
mov
dec
pop
sbb
stos
xor
inc
jecxz
jnp
mov
lods
inc
pop
sbb
dec
pop
push
sub
jge
sbb
mov
fmull
leave
mov
pop
cmpsb
aaa
push
push
lock
inc
mov
nop
and
dec
or
jb
add
es
jge
xchg
scas
jge
lret
sub
jp
clc
into
push
pop
dec
sub
test
bound
mov
lcall
xor
adc
push
cmpsl
mov
dec
ds
xor
inc
imul
aam
pop
in
push
or
mov
push
mov
pop
adc
mov
push
into
dec
or
lret
cmp
outsl
subb
mov
inc
mov
lahf
jne
sarb
enter
jne
cwtl
sbb
cmp
pusha
mov
pusha
or
cmp
cmp
cld
cmp
jl
out
movsl
js
fstpl
push
shlb
scas
lret
in
or
adc
mov
xlat
sbb
jae
xchg
es
std
mov
cli
push
mov
xlat
pop
push
mov
xor
xchg
adc
dec
mov
dec
cmpsb
xchg
sahf
push
mov
orb
sahf
mov
cmp
inc
mov
cs
adc
xor
cmp
add
mov
add
cmp
jns
add
int
repz
call
aaa
movnti
sub
add
rorb
dec
push
and
cmpsl
jae
fmuls
repz
jne
in
mov
xor
pop
sbb
aad
in
or
sub
cmc
ficoml
inc
pop
dec
adc
mov
popa
je
ja
add
jle
adc
jg
test
imul
loopne
and
faddl
mov
xor
int
jo
rorb
and
stos
jle
push
movsl
fwait
add
jmp
dec
pop
inc
fdivrl
pop
nop
repnz
fimull
js
push
scas
repz
push
and
pop
mov
ret
add
sub
inc
mov
mov
fistpl
mov
dec
ret
mov
xchg
cli
aad
shlb
inc
ret
or
pop
int
pop
test
add
js
das
jns
mov
dec
insb
inc
xor
dec
jno
push
push
or
mov
xchg
andps
push
imul
mov
mov
arpl
movsb
mov
mov
or
fcmove
call
and
or
mov
orb
pop
leave
sbb
fs
xchg
dec
jbe
das
mov
shl
orb
aam
push
nop
mov
je
addr16
inc
rclb
loop
push
leave
insl
xchg
stos
pop
pop
jp
mov
clc
lret
fdivs
push
mov
int3
cmp
mov
rolb
and
fwait
popf
bswap
fwait
push
or
push
push
jb
les
push
sahf
dec
push
loop
cmp
popa
lods
xchg
call
imul
ret
pusha
mov
test
adc
int
sub
jb
lods
cmp
cmp
filds
and
je
mov
mov
mov
inc
xchg
xor
shlb
push
xchg
lds
dec
bound
sti
shll
sub
outsl
jnp
out
jl
test
out
sbb
mov
dec
xor
mov
rcrl
push
push
adc
lahf
xchg
xor
testb
mov
shll
movsb
das
mov
add
or
or
ret
loopne
push
loope
ret
push
jge
call
test
leave
jecxz
int
rclb
popf
lods
repnz
scas
and
push
leave
sub
cmc
or
jne
cmp
add
dec
or
leave
outsl
cmp
lret
and
test
mov
sub
mov
or
dec
and
pop
inc
sub
vmread
dec
out
mov
adc
push
test
or
stos
xchg
data16
stc
mov
fcomps
scas
aam
push
sub
xor
mov
cli
inc
movsl
sbb
xchg
jl
xor
cwtl
lds
lret
xor
dec
cli
sub
pusha
or
cmp
xlat
xchg
insb
xor
mov
mov
ljmp
repnz
jmp
int
sbb
adc
lret
or
imul
or
push
fwait
daa
imul
pop
mov
leave
mov
xor
lret
mov
add
dec
scas
pop
sbb
leave
out
dec
jb
daa
adc
xchg
loopne
and
cmpsl
mov
dec
mov
dec
pop
dec
sub
inc
in
repnz
dec
or
test
dec
stos
xor
lods
mov
add
inc
xchg
dec
mov
xchg
pushf
inc
stc
rorl
push
ret
xlat
std
pop
iret
mov
int
mov
dec
add
pop
test
and
movsl
sub
mov
outsl
mov
mov
arpl
pop
bound
fs
mov
jno
je
sbbb
push
mov
aas
jmp
lahf
push
imul
sbbl
cmp
push
lds
dec
mov
inc
jnp
mov
divb
adc
leave
pop
les
push
adc
mov
add
addb
sahf
hlt
or
sub
push
pop
cmp
pop
test
jge
notb
fisubl
stc
xor
pop
push
js
add
stos
outsl
in
stc
mov
jge
dec
and
enter
add
es
cli
push
fisubs
push
sub
cmpb
out
add
and
jnp
mov
pushf
rcrl
push
mov
inc
sub
hlt
cmp
subb
sbbb
pusha
xchg
lret
inc
adc
bound
rorl
dec
popf
mov
mov
shrb
sbb
mov
lds
shrb
clc
and
mov
inc
out
xor
mov
popl
mov
pop
sub
cmp
fsubrs
xor
pop
fdivs
stos
cmp
mov
jno
mov
and
adc
add
loop
in
sub
mov
pop
dec
imul
test
outsb
loope
insl
lods
inc
sbb
outsl
lret
xor
or
mov
cltd
xrelease
or
arpl
and
cld
sti
cltd
rcrl
inc
jo
dec
call
sub
int
pusha
add
sub
aam
and
xlat
pop
adc
insl
loope
insb
push
lcall
cmp
ret
or
dec
push
movsl
or
sbb
mov
xor
ret
xor
add
lea
ds
xor
inc
loope
bswap
fistpll
outsb
shr
cmp
or
mov
daa
inc
test
aas
aam
mov
dec
cld
inc
lret
fucomi
dec
test
xor
arpl
fcoml
ja
lds
test
test
testl
add
das
test
clc
aad
jno
pusha
ret
cmp
mull
ds
dec
cmp
test
lret
push
sti
daa
pop
xlat
dec
sbb
dec
cld
cmp
jb
inc
jns,pt
xchg
movb
xchg
in
dec
inc
sub
and
jbe
xchg
cmp
das
push
adc
popf
cmp
xor
addr16
pop
and
dec
xchg
rcrb
push
mov
pop
mov
nop
or
cmp
iret
cmp
decb
mov
aam
out
ret
loope
clc
mov
pop
push
cmc
pop
push
adc
cmp
les
or
fs
jno
adc
cmpb
adc
xlat
pop
mov
fidivrl
ret
pop
pop
or
and
xor
out
xlat
dec
inc
out
in
jns
fs
mov
ret
push
xor
dec
mov
imul
out
mov
pop
ret
adc
sub
ds
push
outsb
cmp
sahf
adc
mov
pop
cmp
pop
lcall
inc
test
test
shll
out
add
mov
int
loopne
psubsw
mov
pop
mov
rorl
insb
mov
and
push
add
sti
pushf
cltd
scas
dec
popf
mov
adc
add
pop
arpl
add
jbe
jg
sbb
jne
iret
stos
push
dec
fdivr
pop
repnz
push
jle
add
sbb
repz
pop
jmp
mov
repz
mov
push
pop
inc
cmp
aas
inc
shlb
jno
inc
int3
enter
jmp
fcmovnbe
mov
push
add
inc
and
inc
mov
cltd
xchg
pop
andl
pop
out
stc
pusha
fstl
and
les
mov
cltd
lret
test
ficompl
leave
or
cmp
mov
xor
cld
inc
push
movsb
add
adc
cmp
les
mov
stc
lret
or
stos
enter
jnp
push
lock
jns
add
mov
and
adc
pop
sahf
inc
mov
sub
out
pop
mov
clc
inc
xchg
mov
decb
adc
daa
mov
test
addb
cmpsb
popa
cmp
int3
mov
addr16
push
or
push
subb
bound
idiv
cmpsl
or
sbb
mov
lret
sub
xor
xchg
adc
mov
insl
loope
dec
ret
outsl
jo
xchg
loope
push
xchg
enter
outsl
push
xlat
scas
pop
xchg
call
and
test
es
enter
test
push
cs
jmp
cmp
repz
ret
pushf
cmp
insl
fsubrl
test
sub
mov
inc
dec
test
dec
fstpt
js
scas
jbe
xlat
icebp
and
cs
pusha
jle
add
cmpsb
jns
mov
cmp
push
mov
mov
push
sbb
dec
es
ja
cmp
dec
loopne
mov
mov
mov
pusha
outsl
pusha
inc
fidivl
dec
outsl
leave
mov
lds
pop
pop
ret
sar
xchg
outsl
ret
test
sti
mov
loop
add
sbb
enter
scas
sbb
cmp
cmpsl
inc
mov
jl
pop
icebp
xchg
cltd
inc
sbb
or
adc
push
cwtl
inc
mov
xchg
mov
jl
add
insb
in
cltd
in
lret
aam
sub
jno
scas
outsl
push
cmp
mov
cld
repz
cmc
pop
cmp
sub
in
jle
fbld
clc
rorb
lret
mov
fwait
int3
cmp
inc
sbb
pop
mov
mov
and
shll
cwtl
pop
mov
sub
enter
jge
clc
jne
adc
pop
jmp
mov
test
out
xchg
enter
jo
push
dec
std
pop
outsl
rorb
mov
push
inc
cmp
xchg
or
sub
aas
sbb
inc
mov
mov
inc
jo
and
dec
inc
inc
add
insl
sub
mov
cmp
daa
fmul
cmp
mov
cmp
test
in
pop
shll
aad
xchg
add
test
inc
mov
lds
or
xor
mov
aad
movsl
in
push
mov
mov
xor
xchg
xor
or
outsl
dec
pop
adc
pushf
cli
and
dec
mov
mull
loope
arpl
mov
js
jb
lock
cli
jns
addr16
adc
add
fldcw
in
adc
popa
add
adc
lret
push
je
arpl
push
mov
sbb
adcb
pop
push
clc
xchg
push
cli
pusha
add
dec
rorb
fildl
leave
push
mov
cmp
test
mov
pop
or
xor
dec
int3
pop
scas
addr16
sub
push
testb
mov
mov
jno
xor
fiadds
fstpl
pop
hlt
clc
mov
mov
mov
mov
into
jg
aam
sbb
add
daa
push
mov
jecxz
and
loope
dec
push
jp
sub
daa
jb
and
nop
cmovl
out
jo
fdivr
fmul
cli
lods
pop
repnz
xor
popf
movsl
rcrb
lcall
adc
jl
call
mov
xor
fs
mov
dec
or
sahf
lods
rolb
dec
mov
push
lea
mov
pop
es
ret
mov
fidivl
add
pop
in
mov
sbb
cmp
iret
out
mov
std
daa
mov
adc
dec
fidivs
xchg
xor
push
adc
dec
pop
mov
xorl
divl
dec
mov
testb
movsl
jne
shlb
fstps
pop
cmp
data16
xchg
sub
pop
pop
lods
xchg
arpl
or
sbb
lock
addr16
inc
dec
or
js
xchg
out
in
lea
ret
or
adc
jge
lea
clc
sbb
mov
adc
cltd
add
pop
adcl
jne,pn
pop
dec
and
movntq
out
jae
std
shrl
mov
shlb
call
out
cld
dec
lock
pushf
stos
fcmovb
enter
jno
inc
hlt
ss
ss
mov
in
andb
imul
out
pop
dec
and
pop
daa
pop
adc
mov
mov
dec
push
xchg
test
pop
pop
jmp
xchg
fsub
incl
ret
push
jg
sub
fimuls
test
push
loopne
dec
or
imul
xor
call
cmp
pop
dec
cmp
xchg
imull
xor
iret
pop
movsl
dec
mov
test
xchg
addr16
cwtl
leave
test
sub
xchg
jno
inc
push
enter
cltd
mov
pop
pop
pop
nop
imul
pop
cmp
shrl
mov
insb
test
sysexit
bound
gs
lock
adc
popf
pop
imul
jb
stc
lea
pop
mov
mov
mov
adc
jg
mov
rcrl
xchg
sbb
in
add
stos
jb
into
xor
xlat
sbb
dec
xchg
out
mov
pop
sub
push
icebp
rcr
imul
stc
adc
aam
popf
in
jl
push
stos
jno
cld
push
sbbl
or
sbb
ret
sub
imul
inc
lret
inc
out
dec
std
pop
stc
mov
ficoms
push
stos
addb
movsb
clc
cmp
into
push
xchg
repz
fbstp
or
inc
loop
pop
inc
xor
mov
cmc
shlb
lods
adc
jb
pop
mov
mov
repnz
pop
fsubr
sarl
mov
sub
ficoml
mov
and
mov
cmpsl
inc
inc
inc
push
pop
inc
scas
push
mov
dec
mov
jg
inc
test
repnz
xchg
data16
in
aaa
mov
aas
or
cmp
stos
dec
outsb
cmp
mov
inc
lret
ret
fildll
jns
inc
insb
adc
pop
dec
sbb
mov
ficompl
dec
jo
adc
je
in
add
inc
stos
pushf
xor
push
xchg
int3
sbb
popf
dec
jecxz
cltd
ret
xor
mov
testb
jecxz
js
and
in
cmp
push
hlt
roll
arpl
xchg
in
in
cmp
inc
outsl
inc
in
loop
xchg
pop
jno
je
movsl
addl
adc
insl
shrl
sub
out
mov
adc
dec
aaa
push
dec
mov
jp
inc
test
cs
sub
call
adc
push
out
in
jmp
adc
mov
push
je
out
jge
mov
out
sbb
fisttpll
mov
mov
scas
lret
mov
xlat
add
addb
pop
inc
js
testb
aad
in
sub
adc
pusha
in
mov
adc
ds
mulb
sbbl
push
mov
js
filds
aaa
es
scas
lret
adcl
and
into
mov
mov
js,pt
iret
inc
adc
mov
testl
adc
cmc
xlat
sahf
push
js
inc
arpl
in
mov
lock
mov
iret
cmc
es
lods
movl
pop
sbb
loope
shld
pop
mov
pop
dec
seto
push
xor
xchg
pop
dec
insl
and
mov
cltd
bound
jns
mov
add
jnp
mov
push
cmp
sbb
pushf
lods
outsl
subb
into
xchg
jge
push
frstor
fadds
and
inc
dec
fs
cmp
xor
cltd
sub
fidivrs
lahf
or
xlat
xor
jp
jmp
repz
dec
mov
inc
repnz
inc
out
pop
or
lahf
cmp
js
sub
push
mov
sub
mov
int3
sbb
cmpsb
dec
bound
lret
jp
and
lret
jle
and
movsl
add
sbb
loopne
fimull
loopne
lret
jmp
pop
fcomps
xchg
pop
sar
leave
aam
pop
lret
mov
mov
sahf
jo
mov
cwtl
push
mov
hlt
xlat
push
addr16
sti
mov
idiv
insb
outsl
mov
mov
mov
pop
js
ljmp
or
rolb
sub
xchg
into
mov
mov
or
je
mov
movsb
pop
push
and
lods
repnz
push
ret
hlt
rorl
sbb
std
js
test
push
pop
fs
in
xchg
loop
fcoml
xor
dec
or
lds
inc
sbb
add
mov
mov
int
ja
jg
mov
inc
data16
push
dec
fcomp
nop
pop
fs
cmpsl
xchg
movsl
cmp
adc
mov
push
lea
les
sahf
addr16
add
mov
pusha
mov
cmp
mov
fsubl
and
mov
add
sti
cmp
test
cmp
or
push
pushf
xchg
pop
mov
ret
ret
repnz
mov
cmp
rep
in
jno
fidivl
out
mov
cmp
push
push
xor
dec
sbb
xchg
mov
and
fs
daa
loope
dec
mov
jmp
dec
pusha
xchg
mov
movsb
movsb
cmp
jp
aas
dec
add
mov
pop
ja
dec
out
or
or
push
int
fst
sti
iret
fldcw
dec
leave
inc
mov
inc
insl
pop
scas
jnp
pop
fnstcw
cmp
sarl
lcall
leave
xor
dec
jae
daa
add
sbb
xor
mov
aaa
jb
sbb
xor
ja
cmp
insl
xor
clc
sbb
add
and
movsb
mov
loope
imul
pop
lock
je
les
dec
add
dec
xchg
or
rcr
cmp
sti
sbb
push
sahf
fisttpl
fldl
orl
xor
and
adc
push
mov
bound
sti
and
aas
or
sub
xor
xchg
pop
popf
ret
mull
xor
test
mov
fcomps
sbb
mov
and
add
sub
cmp
adc
cmp
subb
sub
xchg
xchg
in
pop
jb
aaa
add
push
adc
movsb
pop
outsb
shlb
xchg
jne
test
es
push
or
roll
or
ret
push
pop
rcrb
inc
push
push
int3
popf
or
mov
repnz
lret
fidivrs
sarb
mul
das
ret
adc
jl
pusha
lcall
xor
pop
lock
xchg
mov
lods
xchg
cmp
nop
xchg
sub
imul
repnz
push
dec
imul
xchg
pop
dec
daa
push
cmp
das
das
inc
inc
dec
inc
ljmp
pop
cmp
push
iret
and
adc
cwtl
sub
lods
stos
cmp
out
lret
cmp
add
mov
mul
fcoml
jo
sahf
lds
ljmp
mov
sbb
add
pusha
push
ffree
push
or
push
ljmp
dec
dec
icebp
mov
mov
fmul
shll
ret
jg
mov
ljmp
inc
in
arpl
mov
and
push
iret
jnp
or
pop
dec
push
mov
js
fucomip
xchg
or
outsb
orb
push
imul
out
ret
lea
mov
insb
pop
nop
and
jnp
mov
stos
cltd
adc
repnz
dec
fnstenv
jo
lods
enter
ret
shll
lock
and
call
mulb
out
es
jg
icebp
add
and
lock
or
xchg
push
cmp
ja
sbb
lods
mov
leave
addr16
lds
and
sub
inc
sarb
mov
xchg
inc
insb
cmp
sahf
xacquire
fadds
les
imul
psubd
lcall
or
rcrb
adcl
mov
inc
stos
nop
xchg
aas
out
mov
mov
std
add
adc
mov
push
xor
push
jl
jl
and
ss
movsb
jmp
movsb
inc
mov
fsubs
jae
mov
dec
leave
xor
jecxz
mov
ss
outsl
inc
inc
cmp
ds
inc
insl
inc
mov
mov
push
dec
std
popf
jle
inc
pop
xchg
lahf
jnp
add
pop
xor
imul
ret
imul
jno
gs
pop
call
inc
cmpsl
ss
push
rolb
push
lret
add
dec
test
push
frstor
xchg
shl
cmpsb
mov
std
mov
dec
inc
sti
imul
dec
cmp
pop
arpl
into
cmp
shrl
sahf
cld
aaa
mov
inc
std
rol
dec
and
dec
lcall
dec
out
mov
pusha
xlat
rclb
push
stc
fxch
sti
xchg
lods
jnp
sbb
push
xchg
inc
pushf
cmc
test
ljmp
pop
lret
adcl
mov
shlb
mov
sti
and
sahf
pop
mov
push
andb
jge
pop
xlat
xchg
enter
cmp
jae
mov
mov
or
fldcw
mov
ret
mov
aam
mov
int3
addb
xorl
jbe
and
pop
dec
movsl
dec
out
sub
or
shlb
fmuls
cltd
adc
or
call
mov
inc
xchg
xchg
mov
adc
mov
fdivs
add
mov
popa
pop
jg
add
clc
imul
mov
cli
movsl
out
mov
pop
arpl
std
nop
ja
rclb
sbb
cmp
loopne
mov
shll
loopne
dec
frstor
aam
pop
pop
pop
push
mov
and
inc
mov
dec
sbb
inc
adc
sahf
add
jae
rolb
push
in
popf
xor
mov
cmp
sbb
pushf
enter
adc
mov
push
dec
sub
aad
push
dec
stos
fsubrp
out
and
cwtl
dec
adc
lock
dec
push
aad
lds
push
inc
das
pop
int
in
mov
data16
xchg
xchg
xchg
out
sub
dec
dec
pop
data16
dec
mov
sbb
clc
ja
add
fadds
jg
cmp
stc
mov
mov
test
and
shl
dec
mov
mov
rcrb
and
pop
lret
enter
push
push
sub
je
stos
scas
leave
jl
lret
cmpb
test
push
enter
adc
inc
inc
fbstp
jo
sub
std
mov
jo
std
cmc
sbb
repnz
dec
mov
inc
push
out
xchg
loop
push
xchg
xchg
dec
test
fdivl
inc
orl
cmp
ja
lods
mov
and
jnp
scas
lret
imul
testl
jg
test
lahf
pushf
test
jbe
add
pop
incl
ret
divl
leave
imul
pop
mov
cmp
leave
ja
and
inc
cmp
xchg
mov
mov
inc
data16
jo
mov
aad
mov
icebp
pop
mov
jae
sbb
mov
or
clc
or
cmc
xchg
hlt
inc
mov
sbb
loop
mov
scas
add
dec
into
push
cmp
mov
ret
push
test
leave
cwtl
je
notl
cmc
jp
xchg
push
xchg
lods
dec
jb
jbe
jle
cmpleps
add
jnp
repnz
mov
out
dec
mov
and
sub
dec
adc
and
inc
fbld
in
inc
aas
loop
push
xor
jns
xor
mov
call
rclb
les
jno
fwait
mov
cmp
push
out
lods
mov
pushf
lods
jp
jns
pop
je
dec
xchg
xlat
cmc
iret
pusha
sti
arpl
and
les
out
imul
aas
out
add
xor
fisubs
icebp
lds
xor
add
pop
popa
lcall
add
aad
xor
cmp
cmpsl
jl
dec
scas
pop
adc
adcb
adc
pushf
sbb
jne
mov
inc
inc
pop
ss
movsl
push
imul
fs
iret
test
das
xchg
mov
add
xchg
jge
out
aaa
fldt
lret
imul
push
mov
mov
dec
xchg
inc
lcall
rorl
ss
sub
sbb
stos
sub
scas
stc
push
xchg
movsb
in
pop
shl
push
imul
hlt
mov
inc
inc
and
cltd
ror
movb
aas
lret
roll
enter
in
adc
imul
xor
pop
jle
orl
add
mov
inc
sub
xchg
mov
sub
out
rcll
xchg
pusha
out
adc
rorb
ljmp
pop
divl
add
pop
int3
call
and
addr16
enter
pop
cmpsl
imul
inc
xchg
mov
adc
mov
jnp
adc
sub
xchg
fadds
rorl
push
aas
cmpsl
test
jns
pop
in
ja
cmp
sbb
pop
movsl
pop
mov
sub
lahf
mov
and
stos
add
out
add
mov
mov
pusha
jp
sbb
clc
arpl
pop
sarb
mov
inc
sub
push
push
dec
test
insb
imul
add
add
in
mov
inc
imul
ret
nop
dec
push
jne
and
or
jnp
rorl
sub
mov
cmp
std
xor
cmp
fdivrs
test
in
add
or
in
icebp
mov
cltd
mov
mov
sbb
pop
dec
xchg
dec
lcall
scas
arpl
xchg
pop
or
cmc
cld
pop
repz
iret
mov
test
rolb
mov
adc
das
aas
jp
xor
nop
test
pop
imul
loop
xor
aaa
mov
lahf
cs
push
mov
out
rol
bound
jle
lret
push
ret
js
enter
andl
adc
repnz
xchg
dec
dec
mov
jb
enter
xchg
mov
push
rol
xchg
pop
ss
sub
xchg
mov
fcmove
in
roll
jmp
imul
mov
fcompl
imul
push
in
int3
cmpsl
pop
scas
sub
sbb
movsl
mov
jmp
xchg
pop
cmp
dec
repz
mov
lods
movsl
inc
leave
roll
and
shl
ficoml
cmp
pop
clc
stc
jp
mov
arpl
cld
cmp
rclb
fsubs
test
or
aaa
movsl
mov
cmp
aam
ds
out
xchg
fwait
sbb
push
jmp
and
xor
insl
xchg
fidivl
or
outsb
cmpsb
cmpsb
jmp
mov
fsubrl
in
andl
jle
mov
inc
mov
das
fsts
int
mov
add
jnp
xchg
enter
mov
mov
imul
xor
jb
rcrl
jnp
push
sub
mov
mov
imul
nop
and
and
mov
xchg
or
lods
and
dec
popl
call
cwtl
in
fsubr
mov
and
mov
js
mov
out
je
and
fs
pop
movsl
mov
jmp
mov
mov
enter
stc
ret
sub
in
mov
outsb
test
sub
jb
push
inc
out
stc
sbb
sub
jle
lret
push
mov
mov
ret
jo
jns
pop
sub
dec
lahf
repnz
into
xchg
lds
push
pop
ficoms
mov
xchg
inc
push
and
dec
out
or
xchg
and
pop
stos
push
filds
pushl
daa
cmp
ret
or
xlat
cli
das
mov
pushf
sahf
mov
dec
outsb
jp
xchg
add
push
fs
push
xchg
outsb
xchg
pop
test
mov
je
cmp
or
out
inc
jg
in
jae
scas
inc
add
cmp
aaa
add
sbb
or
jmp
jno
and
inc
jbe
iret
xor
push
dec
fwait
sub
hlt
mov
outsl
call
adcb
pop
dec
mov
pop
cmp
ja
and
xor
xchg
ret
hlt
or
add
aam
test
add
aam
lret
push
xchg
ljmp
cltd
jecxz
lret
cmpsl
mov
sbb
aas
lret
mov
xrelease
push
fidivrs
test
sub
push
cli
shll
movsb
lea
inc
scas
ret
dec
add
push
dec
in
sbb
mov
sbb
xor
jecxz
sub
inc
xchg
sbb
aas
inc
shlb
out
es
aas
aam
pop
testb
mov
mov
cmpsl
mov
lret
pop
sarb
jmp
scas
inc
pop
data16
in
and
fidivrs
mov
sub
cmp
outsb
ret
pop
pop
repnz
leave
mov
aas
cmpsl
test
add
mov
fwait
ret
and
shrl
roll
rcll
mov
test
mov
add
incb
mov
aaa
push
adc
fldcw
and
add
xlat
inc
mov
dec
pop
je
out
push
pop
repz
xor
insb
mov
sbb
add
adc
call
sub
xor
popf
dec
pop
pop
shll
clc
lods
push
or
data16
sub
xor
imul
xchg
dec
add
xchg
lret
setg
xchg
enter
shlb
cmp
or
shr
inc
inc
leave
mov
dec
imul
mov
xor
in
dec
imul
ja
push
xor
sahf
xor
mov
iret
jg
jno
jmp
inc
aas
or
inc
pop
and
adc
iret
adc
mov
sbb
sub
inc
mov
fimuls
cwtl
mov
je
and
scas
jmp
jge
popf
inc
add
cmc
scas
movsb
push
testl
push
dec
sbb
push
loop
add
push
hlt
pop
lds
ret
inc
push
cmpl
fdivrs
inc
shll
movsl
xor
std
fstpl
sbb
push
jae
mov
lret
daa
push
test
orl
cwtl
cs
jo
mov
mov
xchg
rsm
cmpb
push
in
jp
adc
nopl
mov
and
fwait
inc
repnz
cmpsl
in
sbb
ds
adcb
dec
js
out
mov
scas
dec
or
gs
mov
adc
inc
sbb
add
pusha
in
jge
dec
jge
mov
jmp
pushf
mov
pop
xor
sti
in
adc
sbb
fscale
inc
mov
into
sti
pop
cmp
cs
jne
leave
mov
lods
out
adcl
mov
add
mov
mov
stc
dec
cmp
in
ljmp
pop
mov
mov
mov
add
cs
xchg
ljmp
pushf
jp
and
movq
mov
cmpsl
ds
mov
dec
mulb
cmp
xor
into
and
cmpsb
pop
xchg
loopne
ss
adc
out
sahf
enter
mov
insl
xchg
loopne
xor
lahf
xchg
mov
sbbl
jb
addr16
pop
push
cmp
cld
pusha
cmp
sbb
loop
push
mov
or
fdivl
js
pushf
cmp
aas
sbb
cmpsl
popf
and
jle
cli
fmuls
stc
add
jecxz
sahf
sahf
mov
dec
sbb
stos
cmp
push
jo
dec
fnstenv
pop
and
rorb
mov
and
add
mov
fdivs
add
mov
fdivl
mov
dec
repz
mov
inc
lock
fbstp
and
leave
outsb
jecxz
aas
pushf
jb
inc
lods
dec
mov
sbb
dec
jo
mov
xlat
adc
adc
mov
xchg
rorl
lea
inc
sahf
push
cmovs
enter
jecxz
or
and
roll
ljmp
mov
insb
add
out
hlt
cmp
xor
insl
addb
inc
push
or
pop
sub
rclb
mov
xor
mov
aad
or
ficoml
or
stos
mov
mov
stos
jb
movsl
adc
stos
aam
mov
arpl
sub
inc
jo
mov
and
ja
and
jg
xor
stos
mov
shrl
scas
outsl
mov
push
push
adc
jae
stos
mov
fwait
in
dec
xchg
xchg
jl
mov
hlt
push
xchg
movsl
stos
pop
or
cmpsb
pop
pushf
cmp
and
mov
sti
lahf
adc
inc
mov
cmpsl
loop
push
sub
and
ret
cmp
icebp
pop
stos
aas
fdivr
lods
repz
mov
rclb
sar
xchg
add
cmp
cmp
aas
sbb
ficomps
inc
push
lahf
cmp
xchg
inc
jo
fimuls
loope
xchg
cmp
dec
cmpsl
adc
sub
inc
xor
mov
stos
inc
stos
iret
jo
nop
pop
loop
push
shlb
popa
repz
pop
xchg
lods
push
dec
and
cld
dec
outsl
movsb
cmp
out
aas
sahf
mov
arpl
std
xlat
mov
in
xchg
movsl
incb
scas
int3
sub
add
in
push
pop
push
subb
cli
jle
lock
int3
xor
sub
sub
aaa
mov
pop
cltd
movsl
cmp
jbe
mov
into
cld
orb
faddp
mov
xor
iret
sub
xor
inc
scas
stos
dec
sub
addb
loope
pop
stos
sub
bound
test
jle
push
mov
jg
sbb
loope
fs
test
fistpll
mov
push
sbb
hlt
mov
mov
mov
push
imul
repnz
or
stos
aad
clc
lods
movl
jns
outsl
dec
sbb
shlb
fwait
push
aas
xor
pusha
clc
lods
pop
xchg
cmp
mov
push
mov
or
fs
cwtl
fmuls
int
cmp
pop
and
jae
mov
pop
inc
ljmp
call
aas
dec
arpl
jo
cmp
mov
jmp
xchg
dec
ror
xchg
jp
push
cmpsl
and
pushf
pop
enter
insl
mov
sbb
stc
add
jo
and
adc
inc
repz
jge
nop
push
enter
inc
je
mov
mov
test
cwtl
adc
int3
mov
xchg
mov
push
cmp
jmp
inc
fstps
jnp
mov
mov
je
dec
in
loopne
and
and
pop
jbe
scas
les
fcmove
stos
mov
lods
sbb
cmp
pop
roll
jne
in
or
ficomps
mov
pop
fiadds
pop
daa
cmpsl
nop
adc
into
ror
clc
pop
mov
pop
les
adcl
repnz
mov
mov
jne
mov
in
and
addr16
int3
mov
call
mov
dec
mov
sub
inc
xchg
nop
jbe
leave
lea
push
or
dec
xchg
mov
cmp
in
lods
adc
lods
adc
push
imul
lea
dec
jp
fcmove
bnd
pop
test
lret
ja
pusha
push
aam
add
leave
loop
addl
roll
dec
xor
mov
lock
mov
sub
xor
sub
pop
push
out
les
and
add
pop
bound
lds
pop
cmp
movsb
add
pop
push
cltd
rorb
nop
dec
stos
nop
pop
sbb
xlat
add
mov
mov
cmpsb
xor
fisttps
pushf
cmp
fisubrs
jp
fisubrl
mov
aas
mov
int3
out
dec
stos
xchg
aad
xor
mov
call
loopne,pt
ficomps
push
mov
xchg
shlb
ret
dec
aas
xchg
clc
push
clc
jne
and
imul
mov
or
insl
fs
pushf
divl
inc
sub
add
scas
mov
xor
aad
jno
jmp
push
les
xor
inc
xchg
addb
cs
dec
xor
inc
cmpsb
xchg
pop
jb
aad
mov
dec
movsl
mov
adc
sbb
sub
cli
adc
rol
push
mov
daa
cli
mov
aam
mov
sub
ljmp
jno
xorb
xor
jge
pop
mov
jg
stos
jmp
push
into
ja
movsl
test
mov
sahf
decb
cmpsl
cmpb
lock
jge
mov
jg
cs
les
in
xor
lret
add
xchg
adc
ja
sti
flds
mov
das
inc
aas
cmp
loopne
cmp
cmp
mov
cmpl
fsub
test
fsubrs
xchg
mov
std
or
data16
add
int
mov
fldt
imul
cs
or
mov
inc
dec
sub
lret
enter
cs
fdivs
out
dec
add
rclb
mov
leave
adc
shlb
mul
jb
cmpsb
sub
pop
adc
push
lea
aam
into
fldenv
sub
test
pop
jmp
xor
or
cwtl
cmp
xchg
into
insl
add
frstor
shll
mov
cmp
push
into
gs
aaa
push
addb
arpl
ret
mov
inc
jbe
aad
arpl
pop
add
adc
stc
ldmxcsr
adc
adcl
xchg
fistps
push
cld
mov
dec
mov
jbe
sti
adc
xor
movsb
xchg
incb
test
sub
popf
jo
shll
pop
aam
enter
fistpl
call
xchg
adc
push
inc
push
or
lahf
ljmp
movsl
aas
out
sti
testb
sub
pop
outsl
xchg
mov
ja
or
shl
popf
les
push
sbb
stos
bound
test
xchg
add
lahf
into
test
jecxz
and
add
or
add
test
xchg
mov
cmp
fsubs
push
mov
stos
cmp
mov
das
pop
jns
push
lcall
mov
sub
imul
mov
mov
and
test
jno
mov
push
mov
cmc
dec
mov
and
out
mov
rcrb
mov
push
shll
pop
jns
push
mov
iret
stos
icebp
or
mov
mov
cmp
inc
stos
faddp
pop
adc
sub
stos
jge
mov
subb
stos
jnp
test
cli
sbb
sarb
add
and
mov
and
nop
xor
daa
lret
das
mov
xchg
cli
mov
lea
xchg
imul
gs
out
ja
or
jg
mov
inc
sahf
inc
ljmp
cmpsl
or
aaa
movsl
popf
int3
mov
or
and
and
push
pop
xchg
sub
mov
cmp
mov
dec
sub
add
xchg
loope
add
mov
sbbl
rcrl
cmp
dec
push
jne
dec
mov
out
mov
cmp
cmp
pop
imul
cld
out
daa
es
ljmp
push
jns
daa
dec
or
jnp
jns
fsubs
mov
nop
jl
int
cmp
shlb
aam
mov
jae
cmp
dec
xor
xor
enter
pop
mov
stc
xchg
jb
inc
xchg
adc
mov
test
pop
shlb
andl
pop
repnz
lds
ss
xorb
mov
mov
jae
mov
sub
loop
push
push
cmc
cwtl
pop
or
and
call
adc
jne
adc
pusha
pop
sbb
push
shlb
fsubs
push
and
sbb
icebp
int3
jnp
jbe
shlb
fdivp
mov
mov
daa
scas
mov
aas
push
mov
mov
cltd
cmp
daa
leave
adc
popf
test
xchg
cmp
push
push
repnz
mov
xchg
test
es
cmp
and
push
shll
lret
sub
push
fdivl
inc
mov
loop
and
sbbl
fstps
dec
jp
int3
inc
scas
roll
jmp
movsl
iret
in
sub
pop
dec
in
or
imul
cmp
imul
scas
cmp
ss
mov
push
aad
nop
cmp
iret
in
inc
sbb
sub
data16
fsubl
ret
mov
push
cli
ds
inc
adc
pop
arpl
jecxz
test
es
ja
das
push
icebp
fs
sub
sahf
fstpt
jo
jmp
jb
ja
xchg
in
xor
inc
hlt
mov
cli
dec
and
add
movups
sbbl
cmp
jmp
lock
jne
cmc
push
aam
test
add
push
jmp
cmp
pop
cmp
mov
cld
test
shll
ret
pop
inc
add
rclb
lods
sub
xor
icebp
add
ret
fisttpl
stos
arpl
sbb
push
mov
dec
and
js
fildll
test
push
int3
shlb
push
int
sub
jns
les
jo
xor
jl
push
notb
rorl
add
mov
loopne
cmp
je
add
ss
or
sti
adcb
mov
xor
xor
repz
push
fsubrl
mov
ret
mov
adc
fdivrs
fsubr
xor
fmuls
push
mov
dec
nop
xchg
popf
das
mov
and
idiv
ljmp
push
das
roll
outsb
and
cmp
jno
int3
decl
pop
pop
stos
std
push
popf
pop
pop
aaa
lahf
repnz
les
and
hlt
mov
jecxz
in
loopne
push
dec
mov
mov
adc
nop
pop
xor
mov
movsb
mov
and
aaa
test
cmpsb
jmp
push
mov
inc
sti
mov
jae
mov
or
cmp
push
negl
and
aas
jb
int3
fbstp
mov
xchg
cmpsb
scas
fs
lea
xchg
jle
icebp
out
clc
xor
jmp
push
dec
mov
push
mov
shll
leave
std
jae
sub
mov
imul
mov
imul
icebp
inc
movsl
sbb
lds
ror
lret
insl
dec
loopne
xor
arpl
pop
dec
sub
mov
push
adc
cmp
cmp
mov
imul
or
bswap
loope
rcll
mov
pusha
mov
mov
sub
mov
lcall
push
test
push
jno
sub
imul
pop
xchg
ret
test
or
icebp
mov
mov
das
hlt
leave
fstpl
add
adc
cmp
gs
loopne
mov
and
mov
into
add
inc
pop
lea
scas
sbb
xchg
push
test
imul
sub
into
mul
pop
cmp
insl
mov
icebp
pop
add
xchg
cli
sub
es
pop
and
adc
subl
adc
or
cmp
cld
pop
inc
xchg
jmp
lahf
jae
push
adc
fisttps
fst
and
adc
add
mov
xchg
push
add
cmp
cmp
mov
stc
xchg
fistl
inc
lret
loopne
shlb
mov
sub
adc
hlt
jmp
sub
lods
sbb
dec
push
frstor
mov
dec
push
jg
add
in
cmp
sub
js
mov
push
addl
pop
sahf
arpl
mov
out
xchg
push
jge
dec
mov
add
sar
loop
shlb
int
add
lcall
jl
insb
ja
or
mov
lret
mov
pop
fcoms
imul
dec
cmp
fsubp
xlat
and
fucomp
icebp
adc
pop
loopne
dec
adc
pop
pop
mov
add
mov
fsubrl
pop
stos
out
and
popf
inc
mov
xchg
cld
dec
cmp
daa
mov
leave
cmp
push
or
push
or
inc
pop
inc
inc
mov
jbe
mov
mov
xorl
push
cs
dec
cmc
lods
dec
mov
nop
or
in
shll
push
push
lret
mov
cwtl
dec
insl
je
imul
lock
jg
mov
inc
ljmp
push
vminpd
mov
mov
rorl
jo
in
rorl
cmp
jnp
xor
xchg
lcall
dec
adc
les
xchg
sbb
icebp
xor
out
cmp
jne
enter
popf
push
lret
inc
scas
test
push
sbbb
push
loop
cmp
call
fs
and
pop
xchg
out
inc
icebp
inc
out
ja
add
mov
jle
sbb
cwtl
fisubrs
aam
pop
mov
jae
hlt
ja
outsb
mov
fisttps
ss
jp
or
sbb
sbb
and
pushf
or
daa
das
stos
into
adc
xchg
mov
inc
jp
or
sub
mov
es
cmp
es
mov
out
enter
inc
push
in
mov
xchg
roll
out
flds
cmp
xchg
sub
jae
mov
sbb
pop
daa
xchg
cs
push
push
adc
pop
mov
aad
adc
inc
popa
pop
cs
jo
xor
int
aas
pop
xchg
js
mov
sbb
pop
and
mov
popa
les
push
inc
nop
cwtl
aas
mov
mov
in
sub
mov
aad
pop
xor
jbe
mov
inc
aas
jb
jno
mov
aam
xchg
jle
mov
sub
mov
xchg
mov
jmp
push
fstpl
mov
fnstsw
push
sub
add
popa
xchg
or
jnp
loop
or
and
mov
jle
dec
les
pop
and
add
or
inc
imul
decl
mov
or
inc
jae
xor
pop
stos
loopne
bound
test
or
inc
pop
adc
add
jmp
outsl
pop
jmp
mov
xchg
xor
js
push
adc
leave
or
cwtl
nop
cmpsl
jae
mov
inc
cmp
popf
cmpsl
arpl
push
dec
xchg
les
sub
movsb
lods
xor
notb
xor
push
movsb
or
jb
adc
sub
or
loop
int3
and
roll
test
arpl
pop
sbb
push
cmp
popa
sarl
mov
jnp
push
aas
fwait
mov
xor
sub
pop
popa
int
insl
movsl
fld1
enter
fwait
cmc
sub
dec
add
inc
xchg
ds
mov
add
adc
icebp
xchg
inc
adc
sbb
inc
fdivrp
int3
aaa
bound
roll
repz
mov
mov
fnstcw
out
in
pop
daa
jbe
cmp
xchg
pop
jno
outsb
dec
fwait
mov
data16
ja
lret
int3
outsb
lret
xchg
cwtl
rcrl
jmp
pop
push
sti
and
scas
mov
shll
push
aaa
ret
jmp
xor
aam
jo
add
sti
add
push
push
in
loop
or
test
test
cli
in
ret
call
pop
insb
test
cltd
mov
sub
mov
addb
ret
lahf
enter
ss
push
xchg
mov
xlat
and
push
into
lods
mov
mov
into
lea
dec
mov
sbb
sti
in
xchg
fdivrl
in
cli
cmovnp
mov
sbb
lahf
inc
testb
dec
fstp
loope
or
mov
push
movq
int3
roll
iretw
insb
jns
xor
mov
cld
insl
movsb
mov
sti
pop
sti
add
sbb
mov
test
fldt
pop
and
sarl
ret
dec
or
sahf
or
repnz
cmpsb
cmpsb
into
shrb
add
addb
int
pusha
sahf
cmp
xchg
fldl
addr16
scas
stos
fsincos
mov
adc
iret
dec
pop
lods
inc
inc
sbb
mov
jae
jp
enterw
cs
xchg
in
sub
xchg
arpl
sbb
jne
das
jecxz
inc
mov
and
inc
push
lods
stos
inc
loope
mov
mov
mov
popf
insl
sub
cmp
add
pop
adc
cmp
or
cld
daa
cmp
arpl
sbb
push
test
mov
cmpsl
inc
popf
inc
push
into
insl
inc
lods
mov
mov
shlb
scas
and
int
xlat
or
xor
or
repz
cwtl
cmp
aaa
icebp
jmp
pop
pushf
jae
adc
push
enter
pop
cmp
fsubl
imul
xchg
mov
in
lods
cmp
sbb
mov
sbb
and
jmp
cmp
push
dec
push
out
jmp
pop
sbb
jg
ljmp
aas
mov
dec
test
js
lcall
jmp
or
and
negw
jnp
inc
mov
imul
sti
mov
sub
into
ror
stos
imul
mov
mov
push
js
add
mov
inc
xchg
xchg
mov
test
outsb
rcll
rcl
out
push
mov
mov
ljmp
or
fadd
lods
addb
outsb
inc
shufps
inc
jb
fistps
dec
stos
iret
ljmp
in
mov
push
fdivrl
in
rcl
movl
pop
pop
nop
mov
nop
push
stos
das
inc
lahf
cmp
and
sub
push
pushf
sbb
jbe
dec
and
push
in
cmp
pop
xchg
add
pop
inc
lret
jmp
sub
inc
or
shrb
or
fs
or
in
std
mov
mov
cmpsl
mov
push
loop
rcr
add
jns
or
iret
or
jnp
cld
push
es
ljmp
adcb
and
rcrl
ljmp
and
and
pop
jbe
adc
sub
imul
adc
loop
mov
jo
add
add
xchg
aad
shrl
sub
lahf
mov
cld
ss
cmp
dec
xor
lret
sbb
pop
ret
aad
stos
lods
mov
aas
in
cltd
push
fdivl
jecxz
adc
mov
js
dec
pop
xchg
cmc
loope
pop
sbb
cmp
loope
lock
imul
testl
movsl
mov
or
mov
icebp
lock
mov
jne
jns
fisubl
dec
lret
outsb
rcl
data16
or
sti
pop
or
mov
xchg
mov
push
out
orl
scas
jle
sub
cmp
mov
adc
lcall
arpl
sbb
ret
dec
pop
inc
or
jnp
or
stc
mov
nop
adc
cmpsl
inc
mov
les
jnp
bound
mov
clc
and
dec
movsl
mov
lret
enter
lret
dec
pop
js
sbb
mov
adc
imul
sub
adc
jno
sbbb
cltd
jno
jge
repz
jbe
push
leave
pop
mov
xchg
sbb
jnp
xchg
or
dec
adcl
lds
repz
jle
je
mov
clc
dec
pop
in
adc
ror
pop
xor
push
gs
imul
jecxz
sbb
cmpsl
jae
popf
inc
insb
mov
popa
pop
aaa
xchg
in
push
repnz
repnz
mov
call
or
cs
add
cld
iret
movsb
xchg
xchg
or
sub
jg
sbb
icebp
int3
xchg
jne
push
in
cmp
imull
xor
cld
mov
pop
dec
sub
insl
jae
sahf
fldenv
inc
dec
imul
mov
lcall
sbb
xchg
sbb
lods
rcll
dec
mov
add
iret
fiaddl
scas
fs
fadd
add
jns
test
outsl
jae,pn
adc
adc
test
sahf
imul
adc
in
cmp
and
stos
push
mov
pop
pushf
sub
mov
test
fisubs
out
stc
xchg
and
add
push
fidivrl
das
insb
dec
mov
mov
int3
icebp
mov
inc
into
jp
sub
test
sub
inc
jbe
ret
dec
mov
aas
addr16
enter
leave
sbb
dec
dec
outsl
cmc
dec
cmc
mov
xor
mov
movsb
mov
pushf
fisubrs
mov
pop
nop
mov
lea
pusha
mov
std
mov
pop
push
js
cltd
outsb
push
aaa
mov
pop
jbe
aaa
out
mov
call
inc
nop
mov
or
iret
aad
and
push
push
xor
sub
movsl
fsts
les
aad
leave
adc
lods
inc
mov
nop
das
popa
ret
dec
jo
add
scas
stos
pop
adc
subb
sarl
xor
dec
adc
sub
jo
inc
pop
mov
rclb
test
std
fwait
aas
add
in
mov
and
leave
cld
mov
mov
test
inc
xchg
sti
clc
and
lret
xchg
mov
insb
andl
lret
pop
popa
and
xchg
adc
mov
jp
xchg
or
inc
packuswb
adc
pop
inc
push
test
mov
rcll
adc
jno
movsb
dec
sub
daa
dec
in
test
dec
decb
push
ret
and
stos
inc
xchg
inc
gs
ret
and
push
dec
inc
push
test
xlat
xor
mov
dec
push
scas
sub
xlat
scas
arpl
jge
adc
push
or
xchg
dec
mov
pop
and
inc
add
pop
mov
movsl
bound
lods
cmp
nop
int3
enter
inc
addl
jle
inc
xor
negl
fwait
mov
and
ja
jg
and
mov
cmpb
mov
mov
imul
les
insl
xor
xorl
and
cmp
fisubrl
push
nop
jl
mov
mov
andl
cmp
xchg
xchg
lret
xchg
loope
inc
adc
js
out
stc
mov
movsl
imul
or
sub
and
test
aas
add
and
mov
dec
mov
dec
fldenv
adc
cmp
jl
mov
stc
or
test
xchg
aaa
pop
adc
and
sub
mov
mov
lea
mov
imul
dec
xorb
pop
jno
repz
jb
nop
movsl
outsb
stc
in
mov
xchg
movsb
jmp
arpl
shrl
jns
mov
fisttpll
ret
cmp
xchg
arpl
pop
add
or
xchg
rclb
adc
pop
mov
xor
repz
adc
mov
mov
int3
xor
leave
mov
xchg
scas
pop
pop
inc
add
mov
out
lock
pop
sub
sub
shlb
cwtl
aad
push
mov
pop
in
jne
adc
xor
in
sub
xor
lcall
fidivrl
xchg
ret
pop
mov
mov
xor
add
test
nop
cmpsb
ret
fs
cmpsb
pop
addr16
aad
ds
mov
jl
mov
cld
mov
ds
cs
insl
ljmp
mov
inc
test
mov
sti
inc
or
loope
out
and
mov
repz
xchg
mov
mov
insl
pop
mov
jle
imul
pop
mov
jb
dec
cs
xor
dec
subl
dec
pop
out
je,pt
cmp
fs
mov
xchg
sub
jge
repnz
nop
xor
mov
cltd
xor
das
inc
pop
mov
or
jo
js
inc
adc
mov
jb
fyl2x
fsts
and
ja
sbb
jne
mov
hlt
pop
test
lds
hlt
mov
inc
dec
outsl
stos
xchg
sahf
dec
add
jb
imul
jp
cmp
inc
mov
jns
push
fcom
testl
sti
mov
sub
inc
jg
jge
lock
dec
ffreep
xchg
or
mov
mov
bound
mov
mov
push
jo
arpl
sti
ss
mov
pop
jmp
and
mov
fisubrs
pop
jecxz
loopne
fwait
ds
lahf
mov
jo
rclb
push
ja
shlb
jnp
sub
out
decb
nop
and
mov
lea
push
xor
mov
xchg
cmp
es
xchg
rcrl
lea
inc
jmp
jge
dec
mov
xchg
pop
jecxz
mov
imul
clc
add
icebp
mov
pop
and
fstl
mov
cmpsl
repnz
jbe
in
negl
and
jmp
xor
or
add
pop
xor
lcall
jl
or
xchg
cwtl
xchg
nop
xor
nop
add
push
xchg
jb
or
fs
sahf
mov
or
xor
push
sub
cmp
test
cmp
insb
imul
pop
imul
pop
dec
popf
cmp
pop
inc
les
shlb
sbb
stos
enter
mov
inc
adc
and
mov
push
fidivrl
movsb
shrl
aaa
xchg
push
pop
loop
and
mov
xchg
in
pop
xchg
fildl
xor
shl
pop
push
nop
sbb
push
mov
push
daa
xchg
mov
mov
push
test
xor
push
fisubs
push
push
mov
mov
ljmp
push
sbb
loop
push
push
out
movsb
int
jl
or
fstpl
add
rolb
pop
push
fadd
pop
mov
or
or
jmp
push
mov
test
fldt
pushf
pusha
mov
pop
pushf
cwtl
mov
xor
mov
js
into
ljmp
mov
or
shll
clc
jp
or
aaa
push
test
int
test
rcll
inc
dec
aas
cmp
adc
mov
pop
xor
lcall
jae
cld
cmp
sub
dec
cmp
add
test
sbb
pusha
rcl
test
lret
sbb
mov
or
xchg
jecxz
fildl
push
push
mov
enter
push
fcomi
pop
sbb
or
es
jns
bound
inc
or
add
mov
mov
jo
in
mov
ljmp
jae
push
dec
les
cmp
add
adc
push
scas
xchg
add
pop
add
inc
pop
cmp
cmp
loopne
xchg
out
insl
fs
xchg
repnz
dec
dec
out
pop
outsb
or
addb
mov
ret
std
jg
jg
or
add
aas
xlat
jmp
rcl
pop
or
mov
cmpsl
loopne
and
dec
sbb
add
adc
cmpsb
add
xchg
paddsw
dec
xlat
enter
sbb
lret
ror
imul
mov
popa
dec
das
cld
xor
les
xchg
xor
add
jae
out
inc
aam
cwtl
push
push
pushl
pushf
inc
jae
push
outsb
aam
cmc
sbb
testb
and
cmp
jno
fcomps
vpsrld
imul
push
dec
sbb
out
dec
jae
sub
dec
dec
ss
rol
cs
mov
movsl
mov
imul
add
pusha
into
std
ret
inc
xor
mov
leave
inc
pop
test
stc
cmpsl
xchg
popa
cmp
jnp
leave
cmp
dec
push
mov
scas
push
lods
cld
inc
imul
inc
push
fsts
jns
mov
shl
add
push
ret
fcomp
or
cwtl
xchg
cmpb
stc
or
mov
in
sbb
mov
cmp
shll
pop
dec
ja
xchg
pop
mov
xchg
jo
ds
mov
pop
pop
and
adc
stc
sar
lret
add
push
cmp
cmpsb
nop
lods
pop
pop
dec
cmc
inc
mov
xchg
cltd
xor
rcrb
push
xchg
jge
xor
lcall
shlb
push
movsl
dec
into
fcomip
inc
sub
pushf
iret
jge
scas
inc
cmp
mov
pusha
mov
fs
pop
js
stos
sti
mov
stc
adc
iret
ret
sbb
lods
lahf
dec
js
sahf
xor
jl
xor
test
movsb
sarb
pop
movsl
ret
jbe
pop
push
rol
popa
pop
inc
dec
in
inc
xchg
dec
and
arpl
enter
out
int3
jo
dec
bound
jo
mov
cmp
cli
dec
repz
jmp
mov
dec
in
dec
mov
cmp
push
xchg
ret
je
inc
jb
sti
sub
mov
or
outsl
cs
xchg
adc
sarb
shll
mov
xor
out
cltd
into
inc
leave
cmp
repnz
test
inc
iret
bound
in
sub
movsb
cmp
mov
or
mov
les
ss
or
popf
mov
lret
test
jb
subb
inc
in
mov
inc
push
sub
sub
mov
dec
sub
dec
inc
loop
add
or
mov
lods
push
clc
add
nop
xchg
sar
fstps
and
ljmp
fwait
addr16
jno
jne
in
aam
dec
cmp
add
aad
scas
add
adc
adc
push
shll
adc
fnstsw
or
jle
enter
jecxz
dec
fsts
dec
es
cmpsb
test
sub
js
push
jle
xchg
jo
mov
inc
pop
mov
xlat
xor
xchg
mov
add
je
dec
cmp
addb
jne
and
sub
or
sbb
ret
and
cmp
sbb
sub
ficompl
cli
imul
mov
pusha
pushf
mov
scas
cltd
mov
lea
fs
add
sub
jle
push
jl
stc
jne
rcrl
outsb
mov
pop
imul
and
jg
cmpsl
lds
inc
mov
push
ljmp
pop
popf
xorb
call
mov
inc
xlat
jns
xlat
inc
sub
enter
fs
cmp
lret
mov
ds
sub
cmp
xor
mov
mov
jae
sub
push
cmp
pop
mov
push
insb
mov
outsl
daa
pop
xchg
out
cmp
popa
aaa
in
popf
push
mov
dec
pop
outsl
out
xchg
mov
jnp
lret
push
ds
lret
test
std
stc
or
jbe
addl
add
push
and
ret
insb
shll
test
xchg
dec
mov
cwtl
inc
pop
lret
mov
cmpb
je
and
nop
cmpsb
popf
push
arpl
jg
nop
or
mov
sub
hlt
dec
lods
test
and
push
rcrl
adc
pop
mov
add
or
pop
dec
in
dec
out
loopne
daa
jbe
add
cmp
adc
mov
push
outsl
ret
aas
jp
push
push
enter
jbe
or
sarl
mov
sarl
mov
or
push
call
shrb
or
data16
insl
scas
cld
int
xchg
les
stos
mov
pop
popa
pop
ljmp
push
popf
jge
in
jbe
dec
mov
inc
sbb
out
jb
jg
lret
shl
jg
ja
std
int3
sbb
add
inc
ljmp
cmc
jmp
dec
nop
or
loop
xchg
or
pop
pop
mov
cmp
lcall
xchg
stc
mov
arpl
lret
mov
or
mov
cmpb
jl
scas
aaa
sarb
cmp
das
jne
add
xor
pop
sbb
and
sbb
std
adc
xchg
mov
popf
inc
rorb
call
xchg
pop
or
insl
xchg
or
mov
mov
xchg
pop
mov
or
pop
loopne
mov
stc
in
sbb
fucomi
pop
pop
test
ds
je
jb
test
and
stos
bound
rcrb
sbbb
xchg
ds
add
repz
xor
pop
pop
push
or
jo
ss
xchg
out
push
push
ficompl
mov
or
stc
les
pop
mov
mov
addl
in
mov
and
movq
icebp
mov
inc
pop
in
pop
leave
lcall
dec
jge
dec
pop
push
lret
dec
dec
jle
pop
sbb
int3
xchg
out
xchg
xchg
shrb
inc
add
cli
jp
cmp
adc
pop
pop
cs
xchg
ja
cmp
stc
jae
sub
fdivrs
scas
shlb
lods
out
pop
dec
lret
add
jle
cmp
shr
test
sbb
ret
in
mov
sub
xchg
xchg
ret
hlt
push
jle
fnstsw
mov
ja
loopne
es
pop
cmp
cmp
mov
pop
lods
test
jo
je
movsb
cmp
dec
and
mov
fldt
fdivrl
jmp
inc
fidivrs
and
in
xor
mov
aad
ror
xor
stc
adc
push
sbb
rcr
jl
fldenv
mov
lcall
mov
inc
cmc
sub
int
push
test
dec
insb
mov
sbb
cmc
roll
jp
ljmp
adc
nop
adc
jg
mov
inc
mov
in
jno
cld
push
test
repz
push
push
mov
xchg
or
fsts
inc
rcll
jo
jmp
inc
std
aas
outsl
mov
add
mov
sub
popa
mov
insb
gs
decl
mov
jge
into
loopne
lret
push
and
xor
pop
xchg
inc
loope
pushf
inc
lock
jp
inc
pop
cmpps
in
cmp
mov
aam
or
enter
dec
xchg
mov
outsl
and
or
mov
addr16
lret
xor
inc
out
mov
out
cmp
cmp
dec
loop
fisttpll
pop
and
mov
inc
mov
pop
push
xchg
xchg
mov
fwait
rcrl
mov
lahf
xchg
or
and
rclb
sti
mov
fstpl
fwait
rol
fldcw
push
adc
outsb
jl
xchg
jb
mov
xchg
pop
ds
js
jg
sub
and
std
pop
jl
in
adc
mov
in
pop
lcall
inc
add
les
test
pop
push
xor
xchg
popf
mov
rcrb
incb
mov
lods
and
sub
adc
cmp
shr
je
ret
pop
arpl
adc
or
repz
insb
imulb
outsb
pop
mov
mov
ljmp
mov
repz
mov
data16
lods
sub
xchg
enter
jp
pop
call
jp
insb
in
add
rcrb
pop
sti
incl
push
adc
sub
cmc
jae
xchg
jae
or
xchg
jns
jae
in
pop
push
hlt
enter
movsb
jne
lahf
cmovnp
imul
sti
push
js
testl
mov
add
xor
jb
mov
data16
xor
push
sub
dec
adc
xchg
loopne
jecxz
cld
add
or
leave
xchg
pushf
xor
ret
daa
xorl
addr16
dec
movb
mov
mov
bound
cmp
daa
int
leave
add
mov
xchg
inc
out
rolb
stos
adc
cld
mov
and
repz
pop
lahf
xchg
lahf
imul
jo
rorl
lds
mov
out
mov
cmp
mov
push
xchg
push
mov
adc
imul
sbb
jg
arpl
xchg
gs
fists
rolb
push
vcvtps2udq
xor
mov
dec
lret
lretw
push
mov
int3
xor
or
cmp
jmp
clc
xchg
lock
dec
in
clc
push
pop
lret
outsb
pop
push
mov
cmp
arpl
mov
bnd
das
sub
jge
daa
aas
lock
cmp
lret
mov
int
test
lret
fs
pop
mov
or
jecxz
imul
mov
test
push
xchg
pop
dec
rcl
fsubp
inc
int
adc
ret
cltd
or
add
sub
rol
sub
adc
cmp
jbe
mov
add
les
js
jmp
clc
stos
push
cmp
xchg
xchg
sbb
jmp
ja
std
stos
rcr
push
jb
ss
sahf
inc
pushf
insl
scas
sti
icebp
pop
je
or
pop
sbb
or
pusha
sbb
rcll
les
add
cli
mov
mov
jb
jne
xchg
les
gs
mov
bnd
dec
in
and
inc
lods
jmp
fsubrl
scas
dec
push
shll
popa
jnp
movl
add
out
cmc
or
outsl
imul
jb
xchg
inc
out
scas
fisttpll
or
cmp
imul
adc
imul
inc
lret
cli
pop
rcr
mov
push
push
cs
out
icebp
mov
xchg
xchg
jne
in
sbb
incb
xchg
or
pop
add
push
dec
in
inc
xor
dec
xchg
int
test
lret
ret
adc
out
pop
mov
cmp
into
mulb
and
dec
or
sbb
add
in
mov
icebp
mov
int3
sbb
mov
ret
sub
aaa
xchg
fcompl
jl
mov
mov
push
popf
in
fwait
or
or
fadd
ljmp
inc
lods
push
aad
and
mov
cmpl
test
fwait
jle
mov
test
push
push
frstor
ss
test
fsts
pop
and
lea
outsl
rcrl
dec
test
jo
cmp
sbb
cmp
jo
mov
ret
pop
mov
adc
push
mov
jg
nop
out
push
dec
lret
mov
jl
xchg
aad
adc
out
fs
pop
xchg
pop
stos
push
aam
pop
rcll
shl
cmc
sbb
rol
xchg
sub
lods
test
jg
xchg
negb
ja
addr16
arpl
push
or
pop
outsl
xor
paddsb
ds
subb
out
sbb
mov
ss
push
jmp
push
pusha
and
add
out
arpl
pop
movsb
jg
inc
and
push
xchg
lods
cltd
push
gs
mov
push
cmpsb
out
movsl
xchg
es
ljmp
pusha
xchg
lds
std
dec
jmp
ret
jnp
insb
call
das
and
sti
inc
shlb
xchg
addr16
imul
cs
cs
xchg
sub
jmp
scas
fwait
mov
cmpsb
jle
xor
mov
call
lods
dec
sub
ljmp
cltd
scas
mov
leave
inc
push
push
xor
jp
iret
mov
stos
aaa
xchg
xchg
stc
ret
daa
jns
insb
lret
data16
adc
movsl
xchg
shrb
dec
xchg
stos
movq
popa
shlb
jg
cwtl
decl
cmp
outsb
inc
decb
mov
and
jmp
test
sub
mov
stos
mov
mov
cmp
fstps
xlat
xor
mov
and
aam
xchg
jle
mov
jnp
lock
das
je
ret
adc
inc
ss
mov
js
or
in
mov
mov
sub
mov
inc
sti
cld
fildl
sub
ret
sbb
pop
icebp
and
and
inc
cmpsl
mov
pushl
imull
mov
ror
mov
insl
sub
pushl
cmpsl
pop
jge
lahf
adc
dec
push
and
sub
aas
stc
cld
aad
pop
test
pop
lods
cmpsl
and
sbb
imul
imul
add
xchg
push
sub
lcall
mov
add
cmc
push
dec
pop
rol
inc
and
psubq
mov
shlb
jo
add
adc
stc
ljmp
scas
test
xchg
js
test
add
mov
mov
fimull
mov
fmull
fdivrs
shll
arpl
jae
inc
push
lret
sub
mov
pop
lahf
mov
inc
outsw
jmp
and
xchg
xor
mov
sbb
mov
sub
jecxz
nop
sub
nop
push
lea
pop
jno
sbb
mov
xor
cmp
add
mov
fiaddl
cltd
adc
jae
pushl
inc
inc
mov
cmp
testl
xchg
fwait
inc
push
scas
cmp
cmp
das
cld
ret
test
in
push
dec
cmp
cmp
loopne
daa
adc
mov
enter
xor
adc
push
xor
mov
js
push
cmc
cmp
sarl
add
icebp
dec
push
mov
sahf
jle
movsl
fsubrl
or
add
mov
sbb
std
test
call
out
dec
cmc
sub
cmpsb
cmpsb
ret
dec
addr16
jo
imul
cmp
push
sub
aas
cmc
rol
sub
jnp
mov
incb
outsb
mov
icebp
lods
cmp
dec
lcall
js
enter
mov
imul
loop
arpl
je
daa
pop
movsl
dec
orl
or
sarb
jno
add
cmp
jle
inc
push
inc
inc
jne
sti
mov
les
mov
mov
movsl
push
into
pop
in
std
inc
jno
cwtl
ror
push
les
pushf
cmp
das
cmp
adc
mov
nop
rcr
push
bound
shll
inc
and
sti
in
push
cmc
movsl
mov
aam
ds
jg
push
test
dec
and
repnz
push
in
push
movsb
add
shlb
jno
add
es
jp
cmpsl
jb
popa
cmp
push
cmp
mov
loopne
inc
pop
shll
dec
mov
add
xchg
rcrb
outsl
inc
imul
add
or
daa
cmp
cmc
mov
or
ret
test
ds
shl
sahf
xchg
enter
jp
lds
sub
mov
int3
insb
addr16
ret
mov
pop
xchg
dec
fadds
loop
ja
sbb
pusha
pop
bound
push
out
or
fiaddl
ficomps
idivl
addl
iret
or
add
inc
fistpl
sub
pop
add
jb
cmp
inc
add
add
xor
add
add
cmc
or
sub
or
add
jne
sub
in
inc
and
fsub
jge
mov
repnz
push
add
mov
cmp
pop
sbb
psubusw
adc
icebp
lods
inc
std
pop
pushf
scas
cmp
rcll
lds
add
adc
jl
inc
lods
jmp
mov
push
cs
shlb
lret
dec
fwait
dec
xorl
lret
iret
scas
push
mov
addl
fmuls
mov
cmc
push
sub
leave
or
loopne
pop
pop
pop
mov
in
push
sbb
cmc
shll
scas
jnp
add
xor
loop
add
aad
popf
add
sub
adc
pop
negl
dec
pop
out
xlat
movsb
insl
and
mov
add
inc
dec
lods
cmpsb
or
add
push
add
pop
clc
pusha
xchg
rcll
or
insb
pop
pop
pop
sub
stos
mov
mov
pop
pushf
xchg
inc
push
loop
push
cli
xor
imul
xlat
insl
int3
movsl
lds
std
add
jl
push
hlt
mov
xor
clc
add
bound
ds
dec
gs
sbb
push
sub
xchg
dec
add
sub
inc
inc
xlat
mov
roll
pop
test
filds
icebp
xlat
pop
xor
sub
repnz
cld
nop
movsl
push
add
es
das
sbb
dec
adc
pushf
jl
mov
cmp
xor
mov
test
test
pop
loop
xchg
cmp
xor
cmp
shlb
cmp
in
inc
or
mov
mov
fwait
adc
and
xchg
stos
mov
jmp
xor
inc
xor
cwtl
xchg
pop
xor
mov
es
leave
and
push
xchg
shrb
test
mov
sarb
cmp
ud0
fdiv
std
sahf
fcoml
inc
inc
adc
and
and
add
pop
mov
mov
nop
add
adc
out
push
rcr
push
push
das
mov
jb
pusha
sub
cwtl
jmp
pop
mov
push
jo
mov
and
inc
lret
sbb
lret
pop
jle
aas
mov
add
icebp
xor
jae
pushf
test
dec
fs
mov
inc
or
jnp
daa
lahf
shl
cmp
insl
repnz
je
das
ret
inc
push
and
cwtl
xor
cmpsb
lods
xchg
push
mov
loop
ffree
call
stos
mov
ret
insl
adc
shll
cli
mull
mov
push
cmp
scas
add
jp
push
and
test
sbb
mov
push
cmp
es
pop
cmpsl
movsl
push
cmp
adc
lcall
loope
sub
push
xchg
std
in
sarb
fistps
into
scas
mov
out
or
pop
or
xchg
adcb
mov
stos
pusha
mov
imul
sub
ret
incl
in
cmpsl
xchg
dec
jmp
notb
add
push
out
es
and
shrl
add
mov
out
mov
rcr
arpl
fstpl
out
arpl
jmp
ljmp
adc
dec
outsl
into
add
cld
push
add
mov
mov
mov
mov
mov
add
loope
mov
insl
repz
cltd
stc
in
mov
mov
mov
int3
sbb
or
aam
push
or
mov
xchg
jle
adc
shrb
fs
mov
and
mov
cmpsl
mov
scas
mov
sbbb
lds
xchg
sub
adc
jne
sub
xchg
push
clc
pusha
cwtl
hlt
sbb
add
stos
jmp
cli
xor
mov
and
pop
imul
arpl
inc
fisubl
dec
jo
ja
mov
lock
push
movsb
inc
mov
xor
sub
mov
test
pop
jge
xor
arpl
mov
popl
pop
sub
pop
les
arpl
ss
jae
mov
pop
cmpsb
in
adc
and
data16
and
mov
dec
fsubp
sub
sarl
out
jle
fs
pop
jb
imul
addb
imul
aam
push
bound
dec
dec
pop
adc
xlat
fcompl
inc
mov
push
in
xchg
cmp
sub
xchg
xchg
pushf
daa
xchg
js
jl
aad
or
sbb
lods
mov
mov
dec
in
add
jb
popf
jp
xchg
add
push
mov
sti
or
mov
lcall
jp
ljmp
pusha
and
lahf
pop
mull
or
dec
cmp
enter
push
adc
xchg
pop
call
outsl
hlt
scas
dec
imul
mov
sub
aas
xor
push
shr
push
cmc
in
popa
mov
pop
sub
pusha
mov
lods
mov
mov
int
sar
xor
push
xlat
inc
jno
inc
ret
sbb
pushf
cmp
push
rcl
ficompl
aas
lods
pop
mov
ljmp
imull
xor
push
imul
into
js
mov
call
aam
rcrb
push
loop
dec
ds
sub
test
jmp
loope
fistpl
pop
cmp
sub
jb
adc
cmp
int3
ret
sub
lcall
jo
mov
inc
sub
mov
movsb
sbb
nop
pop
sahf
sbb
enter
adc
lods
loop
add
dec
push
test
mov
or
aas
aam
fldcw
pop
mov
sbb
popa
enter
mov
mov
sbb
vmovddup
sub
loope
xlat
neg
mov
pop
imul
loop
fwait
pop
jb
mov
add
pop
sbb
pop
and
dec
cmp
leave
dec
mov
movsb
cmp
jmp
mov
xor
popa
shlb
or
les
xchg
lods
sti
adc
jno
and
sub
xor
pusha
mov
shrl
jbe
fstps
rcrl
cmp
mov
pop
xchg
ret
lahf
mov
and
shrl
ja
cmpsl
mov
or
jne
dec
ficoml
add
ret
loop
popf
ss
add
dec
jne
push
bound
lahf
jnp
jno
mov
js
aam
add
movsb
xor
dec
cmc
adc
adc
push
add
sbb
mov
ret
pop
lret
ret
repz
loopne
add
jo
pop
mov
ljmp
jp
fnstcw
or
pop
ret
adc
fstpl
sub
mov
inc
popf
js
or
push
xchg
out
mov
in
jmp
rol
cli
dec
mov
fld
iret
jge
xchg
lea
icebp
sbb
rolb
jecxz
scas
orl
pop
xchg
adc
cmp
xchg
fs
int
lds
xchg
imull
and
ficompl
mov
fucomi
shl
int
xchg
dec
nop
sub
hlt
pop
ss
dec
stos
ret
mov
sub
mov
pushf
and
cmp
cwtl
lahf
mov
loopne
mov
xchg
and
pop
icebp
int3
fmuls
call
mov
ret
ds
push
inc
fadds
les
push
mov
fisubs
sbb
pop
leave
arpl
add
push
stc
inc
push
xor
aad
inc
cmpsl
add
or
cmp
mov
mov
jecxz
push
lret
ret
pop
inc
fisubrl
or
dec
sub
ja
pop
add
sbb
pop
pop
pop
dec
divl
sub
fwait
mov
psraw
pop
mov
lods
aas
pop
nop
pop
ljmp
inc
fbld
aaa
mov
in
sti
aad
mov
divb
loop
lods
pop
pop
cmp
mov
rcr
lods
sub
dec
mov
stc
mov
sarb
int
daa
sub
loop
daa
or
dec
popa
pop
or
pop
inc
and
mov
pop
xor
mov
xor
and
mov
xchg
mov
fsubs
mov
mov
inc
js
cmp
mov
sub
cmp
daa
ja
shrb
cmpsl
push
leave
xorl
sub
pusha
sbb
mov
pusha
cmp
add
sti
mov
mov
cltd
repz
push
leave
cmp
mov
movsl
aam
mov
or
dec
add
jns
popf
xlat
mov
hlt
xchg
push
das
add
jmp
fsubrl
gs
or
cltd
std
push
int
pushf
dec
lcall
repnz
out
sbb
icebp
icebp
pusha
daa
pop
divl
mov
popa
popa
push
sbb
xor
inc
adc
xor
sub
mov
int
out
add
addr16
iret
loope
cmp
adc
cmp
cmpsl
jmp
popa
inc
mov
lds
xor
and
stos
dec
and
movsl
inc
mov
sbb
imulb
shrb
outsl
movsl
sub
call
lcall
jle
xor
lea
push
add
lahf
fcomi
mov
add
rcrb
gs
test
inc
cmp
out
jl
xchg
sub
jnp
xor
fisttpl
sub
fs
adc
adc
test
inc
xchg
sub
lods
iret
mov
movsb
mov
lea
out
js
add
cmp
inc
stos
xchg
jg
adc
lods
ds
js
inc
int3
popa
push
in
jl
stos
jno
pop
js
in
mov
mov
inc
dec
jb
cli
rol
imulb
sbb
and
inc
xor
shlb
push
rcrl
xchg
inc
or
cmp
and
pop
mov
in
cwtl
dec
or
aam
mov
stos
loope
inc
in
scas
inc
in
adc
rcll
int3
adc
pushf
rol
push
int3
and
int
popf
out
pushf
adc
out
jo
fs
cmp
das
push
mov
inc
pop
mov
fsts
fwait
pusha
cmc
mov
loope
fisubrl
xchg
add
idivl
mov
pop
clc
nop
in
inc
jno
cmp
lds
std
scas
cli
test
rcll
dec
fdivrs
out
cs
mov
jno
das
lds
faddl
jl,pt
sub
xchg
stos
add
push
daa
and
in
push
bound
out
or
push
sub
nop
movsl
mov
xchg
mov
mov
ficoms
push
stos
mov
inc
cwtl
aas
mov
push
mov
dec
fs
pop
push
push
xchg
sub
and
lods
out
test
push
leave
xchg
jmp
xor
pop
cmovp
je
add
xchg
pop
mov
mov
cmp
aad
and
shrl
icebp
stc
sbb
pop
dec
movsb
lock
mov
xorb
dec
inc
dec
adc
out
push
scas
icebp
ror
adc
lods
enter
fiaddl
mov
daa
into
inc
mov
sub
js
or
mov
adc
fidivl
and
pop
clc
mov
call
icebp
stos
in
xor
cmpsb
fsubrs
jnp
inc
jne
or
cs
xor
jg
jp
aaa
xchg
les
mov
dec
mov
xor
mov
adc
xor
shlb
or
add
das
sub
sahf
mov
jl
cld
dec
stc
aad
or
sub
lods
and
or
and
mov
cld
leave
imul
lods
lds
das
addr16
xchg
dec
mov
test
cli
cmpsl
or
fimuls
cld
add
cmp
loop
push
enter
rcl
add
popf
sbb
popa
mov
push
lret
lcall
iret
xchg
cmp
pop
pusha
call
sub
or
add
faddl
int3
int3
imul
inc
addr16
fmulp
mov
jne
dec
test
push
pop
lea
xchg
pop
aaa
dec
mov
enter
ds
scas
pop
push
int
cmp
and
movsb
lret
push
sub
fadd
icebp
repz
movsl
bound
mov
fisubl
clc
or
hlt
imul
lcall
cmpsb
sub
popf
sbb
add
enter
mov
mov
dec
scas
ret
mov
cli
mov
out
es
imul
shl
sub
sub
cltd
add
insl
js
sub
jle
push
out
mov
mov
xchg
jns
push
ds
aad
or
test
sbb
fidivs
bound
cmc
ret
adc
jge
adc
push
stos
sbb
jg
inc
pop
xchg
jge
int3
xchg
lods
add
cmp
pop
sub
dec
xor
cwtl
mov
cmp
cmp
mov
xor
pop
add
lret
imul
mov
dec
daa
cli
lea
in
mov
jno
mov
cmp
adc
movsb
cld
cli
pop
imul
push
inc
push
scas
cmc
mov
scas
orl
jg
cltd
pop
negb
jmp
cmpsl
in
lock
rclb
aad
inc
jg
mov
pop
pop
scas
ret
push
and
movsb
jnp
scas
dec
mov
xchg
jl
sbb
push
insb
cs
push
mov
sets
xchg
pop
lahf
fistpl
inc
and
imul
lds
movsb
out
movsb
mov
stc
mov
or
insb
adc
popf
pop
das
pop
inc
int3
cli
push
and
repz
jecxz
sbb
les
pop
pop
test
xor
jle
imul
scas
mov
lahf
sarb
push
int
outsb
jbe
dec
add
jp
mov
jnp
sbb
sahf
add
cmpsl
sti
movsb
and
xchg
js
fcomps
jl
xor
cwtl
cmpsb
or
xor
pop
and
or
movsb
add
xchg
loop
and
dec
lock
out
int
push
dec
add
sbb
xchg
sub
jnp
or
shrb
jo
ret
cmp
aad
add
loope
outsb
pop
mov
shll
cmp
ja
hlt
xor
addr16
hlt
jl
stos
outsl
sub
mov
popf
int
xchg
xor
and
pop
and
sub
into
rolb
or
xchg
fwait
push
mov
lret
inc
insb
or
lcall
xchg
std
and
fcomip
data16
jb
lods
mov
inc
sbb
cltd
mov
add
push
ja
stc
xchg
pop
outsl
push
scas
cli
jl
and
mov
fwait
pop
dec
mov
fstl
lcall
sub
mov
pop
pop
iret
fisubrs
pusha
add
push
call
in
lods
mov
or
xchg
xchg
sbb
iret
xchg
add
std
inc
mov
inc
dec
shlb
in
jmp
cltd
add
int3
int3
sahf
dec
rcrl
insl
mov
jo
cli
mov
pop
jb
sub
movsb
mov
xchg
int
xchg
aas
adc
xor
imul
adc
or
rclb
inc
out
test
sub
mov
je
cmp
fsubrs
fisttps
sbbl
adc
movsb
leave
bound
cmp
ds
xor
sub
lea
sbb
adc
insl
hlt
sahf
leave
push
mov
jp
and
mov
cmp
cmp
or
fdivp
int3
push
fs
das
flds
jp
es
lret
sbb
or
sbb
jb
mov
pop
repz
not
pop
adc
pop
jae
mov
dec
add
sarb
cmpsl
call
cmp
push
subl
mov
sbb
inc
out
inc
test
jae
or
jle
fildl
or
xchg
pop
jle
xor
ret
adc
insl
xchg
cld
adc
negl
psubw
xchg
stos
xlat
mov
outsb
mov
cmpsb
in
mov
push
mov
insl
mov
xchg
push
je
jmp
or
in
shll
pusha
out
cmc
add
mov
dec
jne
sub
jbe
or
insb
mov
loope
jp
pop
pushl
imulb
fs
out
mov
stos
mov
sbb
sub
push
jg
mov
jnp
movb
in
push
sub
pop
stc
ret
imul
push
sub
xchg
push
notb
and
aad
mov
faddl
mov
into
repnz
inc
daa
mov
push
pop
dec
sbb
and
call
pusha
mov
mov
and
fstpl
data16
mov
xchg
dec
pop
int
sbb
and
xor
add
inc
and
sub
fcomp
jl
scas
lret
pop
stos
daa
jge
repnz
inc
lcall
inc
js
ljmp
sbb
jne
push
pop
ret
mov
xor
cmp
xchg
push
mov
inc
orl
adc
inc
movl
scas
inc
xchg
mov
rorl
cmp
pop
lret
je
and
bound
fsubrp
enter
add
mov
shl
mov
leave
push
std
dec
or
sti
or
outsb
add
in
xorl
inc
adc
and
jne
jbe
adc
xchg
fsubl
jb
nop
les
cmp
jmp
push
scas
loope
mov
int3
fmull
mov
fcmovu
ficoms
jo
rolb
lods
addb
xchg
mov
mov
dec
cmp
stos
fnstcw
cwtl
je
xlat
les
adc
cmp
das
adc
jl
test
push
mov
and
vaddsubps
adc
loope
fs
arpl
add
mov
pushf
bound
aam
jno
faddl
xchg
mov
and
push
scas
pushf
xor
adcb
or
cmp
jp
inc
cmpsb
stos
fs
lods
mov
pushf
sti
mov
inc
mov
insb
mov
push
ret
js
sti
icebp
subb
dec
jge
outsl
push
inc
sub
bound
test
cmp
inc
test
adc
fsubrs
pushf
cmp
sub
inc
mov
shlb
push
ret
fsubl
pop
mov
dec
outsl
mov
stc
xor
test
cmp
pop
leave
jne
loopne
pop
fwait
or
mov
hlt
lock
mov
pushf
sti
popf
mov
cld
aas
sub
bound
jp
inc
mov
filds
out
leave
int
cmp
pop
repz
sti
mov
loope
dec
icebp
jmp
setl
cmc
mov
mov
test
inc
je
adc
mov
sbbb
mov
cmp
leave
push
dec
pop
leave
xor
pushf
aam
push
or
mov
flds
mov
dec
cs
jle
adc
es
mov
add
pop
lods
and
ret
decl
ljmp
loope
push
sbb
push
or
add
dec
rclb
cld
pop
movsl
mov
pusha
lahf
sub
mov
or
cmp
jb
mov
ret
sti
and
int
pop
pop
dec
push
xlat
cwtl
and
mov
call
cmp
lahf
je
cmp
push
inc
ds
mov
sbb
xor
inc
mov
adcl
and
sbb
and
lock
mov
int3
xor
xchg
stc
mov
and
lahf
adc
pusha
and
sbb
dec
sub
int3
cli
mov
fistl
cmp
popf
je,pn
and
decl
jb
ret
mov
in
rclb
pop
mov
test
stos
bound
sbb
mov
call
adc
ret
cmp
arpl
sub
and
clc
and
jg
jecxz
dec
dec
mov
pop
lods
shl
mov
stc
imul
leave
stc
sub
int
ret
mov
dec
sahf
pop
mov
pushf
test
sahf
jp
andb
sarl
xchg
call
mov
xor
dec
mov
inc
mov
subb
cmp
dec
adc
cmp
les
sahf
cli
xchg
mov
loope
sub
or
flds
stos
inc
dec
ret
das
fs
inc
incl
sub
jo
roll
cwtl
mov
pop
inc
std
in
pop
fcom
pop
loop
xchg
pop
cmpsl
mov
inc
sahf
mov
ret
nop
pop
or
xchg
cli
std
pop
inc
popf
pop
pusha
push
in
inc
mov
mov
inc
mov
or
invd
repnz
sub
inc
sub
and
fiaddl
daa
ret
mov
add
jnp
hlt
mov
mov
add
cltd
mov
inc
stos
pop
and
sub
fldenv
cwtl
fcmovu
push
mov
inc
repnz
ret
cmp
test
cmc
xchg
cli
cmp
ficoml
mov
ja
sub
mov
mov
dec
clc
cmp
lock
sahf
cli
cmp
xchg
cld
and
repnz
aas
push
inc
stos
or
add
and
fstps
xchg
inc
ss
ret
cmp
xchg
cli
jno
rcrb
dec
lock
mov
popf
pop
jle
cld
cmp
les
cmp
sahf
fildl
add
stc
xchg
lock
int
stos
mov
xor
mov
shl
adc
mov
test
xor
mov
sub
inc
mov
mov
pop
pop
dec
sahf
imul
lock
dec
cmp
les
sahf
cli
mov
and
jge
std
cmp
xchg
lcall
arpl
fs
fs
aad
xchg
or
inc
jbe
cmp
dec
dec
sarb
mov
subb
inc
leave
sbb
jns
fisubrl
mov
roll
fsts
push
inc
idivl
xchg
bound
stos
sub
xchg
cmp
pusha
shll
xchg
insb
sub
inc
popf
ret
pop
insb
cmp
imul
pushf
mov
dec
js
cmp
inc
cmp
test
push
stc
fbld
cmpsl
les
sar
clc
push
sub
cmpl
adc
nop
leave
xchg
inc
mov
dec
cmp
mov
xor
stos
mov
aam
sti
adc
add
icebp
mov
xlat
pop
pop
or
pop
sub
sub
popa
test
push
mov
pop
inc
dec
mov
mov
lods
or
shlb
nop
cli
sub
xchg
dec
and
cwtl
ficoml
aas
mov
cld
cmp
add
std
inc
jg
or
cmp
pop
sub
mov
dec
imul
imul
jnp,pn
and
jnp
add
dec
add
aam
dec
dec
les
inc
mov
les
jns
les
cmp
and
sub
aam
shrb
cmpsl
ret
stos
adc
mov
out
pop
pop
mov
je
fldcw
mov
lea
dec
xor
les
mov
mov
sub
or
push
cwtl
int3
sahf
dec
sub
mov
or
inc
fs
into
push
ret
repz
insl
inc
testl
scas
pop
dec
inc
std
inc
mov
mov
mov
in
inc
aam
repnz
nop
in
mov
pop
fs
sub
inc
mov
pushf
or
mov
jl
push
cwtl
insb
lahf
outsl
mov
inc
fmulp
test
movsl
sbb
pop
sub
ret
nop
or
dec
mov
and
enter
jmp
pop
dec
or
call
sub
pushf
pop
imul
jge,pn
jnp
sbb
dec
xabort
fcmovnb
cld
jnp
xchg
popa
test
lret
hlt
or
in
sub
loop
sub
jnp
sbb
dec
sbb
dec
les
jl
xchg
incb
cmpsl
inc
popf
inc
stos
or
in
mov
add
jmp
pop
sub
and
dec
lret
mov
mov
sti
hlt
loopne
ret
ret
lret
inc
or
pop
mov
and
pop
or
dec
test
cmpsb
jns
inc
je
out
pushf
jge,pn
loopne
push
sbb
loop
inc
or
dec
xor
sub
or
sti
cwtl
dec
lahf
dec
dec
push
jnp
dec
sbb
fwait
les
pop
cld
cmc
cltd
mov
pop
pop
mov
int3
sub
jnp
sbb
mov
mov
or
imul
inc
addb
mov
les
stos
clc
push
push
jl
and
jp
fnstcw
cwtl
subb
ljmp
ret
fdivrl
addr16
loope
in
dec
dec
cltd
call
dec
test
iret
fildll
int3
push
aas
cmp
fisubs
iret
or
push
test
arpl
lret
fistl
repz
sub
mov
bsf
jp
icebp
push
subl
cmp
divb
jmp
daa
lret
es
in
xchg
fsubrs
out
xchg
pop
int3
push
jnp
in
je
test
xchg
popa
pop
lret
pop
inc
cmpsl
int
sub
mov
lea
cltd
sub
sub
ds
push
pushf
in
gs
hlt
adc
and
pop
cs
push
mov
ret
dec
ret
sbb
jp
cld
frstor
hlt
in
inc
xchg
xchg
aaa
lea
mov
push
dec
jle
sahf
ret
inc
aam
xor
sahf
mov
add
sbb
pop
cwtl
add
inc
cwtl
out
push
outsl
mov
out
loopne
jp
jecxz
dec
lds
scas
lret
sub
in
inc
cmpsb
fcomi
mov
pop
in
push
sub
int
mov
out
rclb
sbb
mov
repz
push
int3
shll
push
movsb
push
push
or
inc
xchg
mov
test
daa
inc
jae
leave
dec
icebp
and
hlt
cmpb
xchg
cmp
cmp
sbb
repnz
ss
sub
inc
imul
xlat
inc
cmp
sbb
int3
inc
xor
outsl
mov
cmp
cmp
and
sub
jbe
sahf
push
mov
imulb
iret
mov
clc
push
es
xor
js
mov
stos
into
mov
lcall
jge
inc
outsb
pushf
in
mov
mov
iret
mov
ror
sub
addl
loopne
adcb
ds
jb
and
and
push
rorb
jae
test
jo
test
sbb
pop
and
mov
sub
pushf
insb
cli
sarl
mov
daa
sbb
lahf
dec
leave
int3
lock
cwtl
cs
ret
or
push
inc
xor
ret
stos
sbb
dec
xchg
out
xor
mov
pop
mov
and
es
pop
xor
dec
mov
add
divb
push
loopne
in
jmp
sub
fsubrs
jl
rclb
ret
rcrb
out
arpl
jmp
or
lds
lret
movsb
xchg
jbe
daa
lock
lret
test
leave
pop
es
inc
push
sub
into
in
inc
fcompl
xor
enter
xchg
xor
jge
inc
dec
push
jae
leave
mov
adc
out
pop
xchg
adc
lahf
inc
cs
push
cwtl
dec
dec
ja
mov
sub
data16
loopne
je
outsl
cmp
sub
push
stc
adc
sub
jne
lahf
mov
mov
xor
jmp
les
or
inc
jl
hlt
and
inc
pop
sarl
xchg
and
sub
mov
cmp
inc
jle
cmp
stos
int3
stc
and
jp
icebp
add
in
loop
jg
add
pop
lret
push
int
movsb
jg
loop
push
push
push
dec
gs
jge
cli
dec
pop
cwtl
scas
outsl
in
pop
pop
dec
testl
sub
cmpsb
and
testb
insl
sbb
rorl
cwtl
mov
push
or
add
flds
ljmp
scas
ret
or
xchg
sbb
inc
mov
loopne
and
std
xor
ds
add
jmp
cmpsb
dec
dec
mov
mov
lods
xor
insl
or
lret
or
popl
add
pop
xchg
mov
inc
icebp
icebp
les
jle
mov
ret
out
int
mov
inc
shll
adc
xchg
pop
rcr
rcrl
xor
xor
je
mov
push
sbb
inc
mov
ret
sarb
inc
adc
mov
lea
mov
dec
jp
pusha
jge
xor
fdivl
data16
rolb
pop
mov
movsl
xchg
xorb
push
push
push
out
loope
mov
cmp
add
mov
mov
pop
inc
movsl
add
jge
pop
scas
dec
xlat
insb
jp
xor
incb
je
mov
dec
xor
lods
adc
lcall
mov
inc
repnz
lcall
and
or
leave
xchg
jns
add
out
nop
rolb
aaa
les
insl
imul
dec
addr16
sub
aad
jmp
dec
inc
test
dec
imul
nopl
add
mov
pop
es
or
ljmp
adc
pop
repz
insb
or
pop
insb
add
outsb
mov
pop
xchg
std
add
aam
mov
pop
loope
and
mov
dec
aas
push
dec
push
sbb
mov
and
pop
mov
rcrl
das
inc
es
pop
mov
cmp
mov
and
stos
fldcw
and
xor
add
cld
in
movsl
jl
add
pop
or
mov
icebp
adc
xchg
orb
fimuls
in
or
adc
bound
and
fwait
mov
sub
enter
add
push
in
jns
dec
insb
push
daa
mov
fsubrl
ja
adc
cmp
sbb
iret
cmpsl
fmuls
push
push
fmuls
mov
fnstcw
jecxz
fdivs
mov
dec
out
xchg
cmp
mov
pop
mov
or
jnp
dec
cmpsb
add
pop
cmp
loopne
pop
push
cli
repnz
cli
pop
out
enter
mov
and
xchg
and
mov
or
cmpsb
and
das
pusha
je
cwtl
cmp
sub
scas
fsubrs
and
leave
or
ds
test
pop
mov
div
push
or
pusha
lods
fidivrl
mov
fdivr
push
xchg
shl
jle
mov
sbb
xchg
loopne
into
test
pop
fs
xor
cmp
cmp
lret
rol
out
push
popa
dec
hlt
add
push
nop
clc
imul
cmc
mov
pop
decl
test
push
jmp
pop
mov
int3
enter
clc
stos
movsb
repz
out
mov
dec
sbb
add
fwait
ret
jae
ret
je
loope
jmp
les
fbld
dec
xchg
ds
push
mov
mov
js
push
push
and
sbb
mov
xchg
mov
push
mov
xchg
jo
mov
lock
xor
in
out
jge
fnstsw
roll
insb
out
xchg
xchg
xor
push
movsl
cli
test
aam
scas
in
mov
mov
into
dec
mov
mov
and
jge
jmp
iret
inc
rolb
out
loop
mov
test
and
mov
ret
cmpsb
fistps
andb
addl
std
cs
notl
stc
and
cmp
dec
add
xor
mov
stc
popl
inc
inc
xchg
lahf
xchg
sbb
scas
insb
insl
dec
xor
xorb
jne
dec
icebp
lahf
gs
lcall
cmp
add
cmp
aaa
icebp
and
cmp
movsl
stc
les
lock
mov
shlb
das
adc
mov
sbb
jge
fsubrl
cmp
ds
fsubrl
pop
popl
jne
mov
and
pushf
out
in
cmpsb
pusha
push
push
addl
jle
adc
fs
repz
xchg
push
cmp
addr16
jp
push
mov
xor
or
add
fcoml
inc
hlt
push
daa
in
out
iret
scas
jl
jecxz
imul
dec
sbb
sahf
aas
pop
push
cwtl
dec
scas
pop
mov
lret
into
jb
das
or
jge
hlt
fs
lcall
xlat
pushf
jae
nop
mov
fcmovbe
xchg
inc
mov
mov
mov
mov
add
imul
fimull
cwtl
stc
add
mov
xor
dec
pop
movsb
add
mov
push
pop
mov
and
je
jecxz
rep
insb
aad
dec
xlat
and
mov
subl
pushf
add
cmc
push
test
pop
pop
sti
cmpsb
andb
jp
out
cli
add
mov
cmp
add
rorb
cwtl
lods
insb
sub
int3
push
stos
dec
out
and
fs
inc
mov
add
sahf
mulb
pop
call
sbb
cs
and
xchg
or
inc
fbld
stos
cwtl
in
push
jae
enter
or
dec
test
gs
mov
jne
out
mov
and
nop
in
int
sar
bound
and
bound
mov
in
fcoml
dec
jmp
xchg
rcll
loopne
inc
fimuls
lahf
jb
cwtl
or
js
mov
js
test
stos
nop
insl
push
mov
inc
addr16
mov
incl
lret
aam
stos
lods
cwtl
mov
jae
inc
pop
test
add
outsb
jb
lcall
xchg
lahf
enter
je
push
ljmp
sarb
lahf
mov
cld
and
xor
mov
inc
ja
cmpsb
jg
test
fstps
fists
or
xchg
jno
scas
loopne
cmp
or
ret
push
sti
ret
inc
andb
test
or
jle
dec
dec
adc
repnz
pushf
das
xchg
inc
mov
mov
dec
rorl
std
incb
add
xchg
pop
pop
rcll
mov
add
lea
inc
mov
xchg
sub
aas
jnp
movsb
out
mov
xor
aad
inc
mov
adc
and
pop
stos
xlat
mov
or
fmuls
add
xchg
jnp
push
push
jno
lods
mov
cmpsb
pop
stos
pushf
mov
add
mov
les
ja
sub
inc
xchg
dec
pop
lods
lahf
sbb
int3
dec
mov
icebp
ja
mov
jne
cld
sbb
push
sti
mov
sbb
sbb
iret
clc
fadds
rcr
jnp
ficoml
inc
adc
movb
cmc
cli
lds
xor
imul
inc
fdivr
adc
mov
add
sbb
lcall
mov
lcall
pop
pop
mov
jg
daa
xchg
cld
dec
out
xor
xchg
inc
inc
jbe
or
sbb
je
pushf
cmp
ljmp
enter
inc
xor
pop
inc
pushl
mov
push
imul
jbe
mov
adc
mov
cmp
mov
xor
repnz
mov
popa
scas
xchg
inc
hlt
pop
mov
pop
test
movzwl
mov
movsl
adcl
int
lret
cltd
stos
mov
mov
int3
xchg
push
rcrl
in
xchg
push
insb
fcoms
rcrl
nop
mov
xchg
mov
mov
sub
lds
popa
pop
sti
loopne
mov
mov
xchg
dec
push
sbb
pop
pop
jg
push
mov
xchg
lock
arpl
testb
in
jnp
aad
push
xchg
add
add
sub
clc
jnp
test
and
pop
xchg
sbb
insl
pop
pusha
data16
fcoml
pop
cmp
outsl
fnstenv
cmp
mov
pop
stos
sub
repnz
pop
dec
stc
stc
mov
or
mov
loop
mov
fcomp
sti
xchg
ss
mov
jno
or
test
cmp
xorl
xor
leave
rcr
and
negl
xor
daa
cmp
xchg
jg
sub
shll
xor
mov
mov
jbe
pop
xor
dec
lods
add
mov
arpl
sbb
push
and
dec
xlat
cwtl
add
jp
xor
cmpsl
in
stos
add
fnstcw
loopne
jb
or
jg
mov
std
pop
out
and
shrb
mov
notl
cs
sbb
dec
adc
jl
icebp
test
mov
fadd
inc
jno
or
call
popl
push
mov
mov
out
cs
jle
mov
push
roll
sub
idivl
int3
and
add
int3
ret
int3
dec
movsl
add
fnstsw
add
jmp
xor
and
dec
push
mov
pop
stos
shrl
xchg
xor
adc
inc
mov
adc
ja
add
xchg
adc
mov
fiaddl
jno
pop
lock
adc
push
mov
pop
jp
popf
popa
arpl
pop
jns
ficoms
mov
enter
mov
shll
lret
adc
mov
mov
cld
jp
fld1
dec
fmuls
ja
jg
fs
push
inc
js
clc
mov
mov
cmpsb
aad
pop
lods
sub
xor
jno
imul
imul
les
fdivs
cmp
push
adc
in
add
xchg
jmp
lods
and
mov
lret
xchg
jb
or
cmc
cmpsl
push
aad
pop
pop
inc
sub
xor
orb
jg
leave
scas
xor
xor
jp
fldenv
dec
sbb
push
sub
pop
pop
gs
jp
jmp
xor
dec
sahf
ret
pusha
lahf
inc
mov
loopne
sbb
dec
mov
sbb
hlt
dec
int
fwait
dec
xchg
cwtl
pusha
adc
sbbb
leave
dec
call
adc
stos
sub
jge
mov
loopne
mov
cmp
movsl
mov
sahf
iret
pop
ja
mov
cs
mov
ficomps
ss
adc
fadds
xlat
push
mov
mov
fstps
inc
cmp
sahf
out
push
in
mov
dec
jmp
pop
movsb
in
pushf
cmpsb
lahf
insb
inc
sub
pop
jle
push
sub
lods
pushf
push
pop
scas
mov
xchg
int
dec
mov
jb,pt
ds
aas
and
inc
shl
shll
xchg
fnsave
push
sbb
pop
addr16
pop
xchg
or
ret
xchg
adc
pushf
movsb
movsl
imul
shrb
popl
lahf
mov
in
clc
sti
add
push
rcrb
out
cmp
mov
int3
xchg
pop
mulb
dec
aas
xchg
std
sub
aas
jg
data16
pop
sti
pop
arpl
test
jns
pop
xchg
gs
repz
inc
fists
pushf
mov
nop
inc
pop
mov
cltd
repnz
iret
jecxz
and
mov
push
pushf
fcomps
or
cs
nop
cmp
cmpsl
aas
cmpsl
pushf
je
xlat
cmp
lods
xor
sti
mov
add
arpl
int
outsb
rcrl
fs
lcall
add
xchg
stos
aad
das
xor
loop
pop
data16
aam
lds
ja
stos
sbb
shlb
rcr
jae
adc
push
leave
popf
sub
test
xor
jg
and
cmp
inc
or
push
stos
sub
nopl
in
add
mov
pushf
push
lds
cmc
push
adc
scas
shrb
ret
or
pusha
push
xchg
inc
xchg
cmp
inc
or
pusha
dec
pop
or
cmp
and
dec
daa
rcrl
movsb
andb
or
pop
dec
sbbb
mov
loope
rcrb
repz
fsubrp
jne
add
push
xchg
cmp
cmp
lcall
fdivrs
jnp
cld
cmp
xchg
mov
add
inc
push
mov
push
mov
pop
sub
cmpsb
pop
sub
iretw
cmp
js
pop
push
mov
cmp
roll
das
stc
leave
or
out
xchg
mov
push
les
icebp
je
rorb
or
jge
cmp
jnp
test
push
pop
or
imul
pusha
push
and
cmp
sub
add
inc
dec
push
dec
or
xlat
mov
add
sub
xchg
mov
fwait
popf
outsl
subl
xchg
ljmp
pop
inc
sub
test
imul
movsb
mov
shrl
and
test
lcall
fisubrl
outsl
cmp
mov
push
jbe
jge
dec
stc
and
xor
cmp
lret
ljmp
ficomps
sbb
sbb
rcrl
aam
add
cwtl
cmp
sbb
mov
dec
ds
lods
cmpsb
xchg
subl
cli
pop
xchg
fstpt
mov
push
psrlw
loopne
sbb
mov
pusha
pop
adc
lock
pusha
jle
sbb
mov
ds
mov
pop
or
inc
dec
stos
cmp
lret
mov
ret
test
lahf
stos
scas
or
or
repz
aad
sti
imul
or
test
jmp
mov
lods
fdivl
dec
cmp
cld
sub
inc
ss
sub
pop
leave
sub
mov
mov
and
pushf
loop
jge
mov
add
sub
mov
adc
dec
fldcw
inc
loop
fs
or
adc
movsb
sub
pop
inc
aaa
std
ds
test
fsubrp
int
out
jg
mov
inc
stos
mov
pop
das
imul
mov
inc
loop
imul
ja
fwait
jp
mov
sbb
addb
lret
sub
cmp
cmp
fimuls
cld
jnp
pop
nop
fwait
cmp
test
sbb
mov
lods
dec
jle
add
fisttpl
cmp
js
movsl
adc
jecxz
aaa
fwait
bound
jns
add
cmpsl
lcall
daa
cmc
inc
and
fs
test
movsb
lret
cld
sti
rolb
xor
sbb
mov
bound
jmp
sub
movsl
pop
and
decb
mov
xor
adc
scas
mov
enter
sahf
and
lea
and
xchg
xchg
pop
adcl
mov
int
push
or
pop
mov
jo
das
inc
mov
push
dec
fimull
jmp
jg
test
mov
clc
inc
dec
add
inc
adc
pop
jns
packssdw
dec
daa
sbb
sub
mov
sbb
repnz
cs
pushf
xchg
insl
movsl
arpl
ljmp
lcall
ret
xchg
xchg
mov
or
jns
jge
pop
sbb
xchg
test
inc
decb
imul
es
loopne
sub
shll
outsl
outsb
cmpsl
xchg
xor
push
jge
jmp
mov
add
jb
mov
ret
or
aam
inc
sbb
xchg
cmp
mov
gs
pop
adc
mov
hlt
sub
test
pop
mov
out
pop
push
xchg
arpl
insl
cs
push
mov
cmc
push
neg
and
enter
xchg
paddusw
pop
lcall
xchg
daa
imul
inc
jecxz
push
imul
test
and
iret
in
pop
cld
stos
sbb
ret
sbb
outsb
lock
xlat
mov
mov
sbb
rcrl
and
fnstsw
sub
idivb
or
lahf
jns
sbb
pop
add
xlat
sub
cmp
fstpl
movsb
loop
lods
ja
mov
sbb
mov
cmp
xor
cmp
inc
cmp
incl
cmp
decb
adc
rcll
mov
fstps
push
mov
xchg
loope
or
test
sahf
mov
cld
pop
or
mov
loopne
adc
jb
clc
sbb
xchg
pusha
or
std
cmp
dec
sub
mov
inc
vphsubdq
xchg
xchg
xchg
lea
or
xchg
sub
push
mov
pop
pop
or
mov
scas
push
addl
lock
outsb
imul
addr16
inc
add
repnz
mov
stos
lock
aam
ret
sti
add
mov
imul
loopne
cltd
cmp
jae
out
cmp
sbb
call
sub
pop
xchg
xchg
pushf
mov
sub
jp
sbb
or
xor
adc
fyl2x
mov
xchg
mov
dec
mov
xor
xor
js
pop
sub
rclb
cli
rcrb
lea
notb
xchg
dec
inc
fildl
mov
pop
daa
mov
mov
out
cmpsb
add
stos
inc
out
lea
cli
add
pop
testb
lock
dec
cmpl
inc
imul
test
adc
movsl
decb
cltd
lods
cmp
rcrl
adc
ficompl
ja
cmp
adc
mov
adc
sar
jb
jg
push
test
lds
imul
mov
pop
sbb
adc
les
sub
push
ds
mov
into
sbb
adcl
push
and
loop
pusha
xchg
stos
divl
or
fs
bnd
jbe
inc
dec
adc
jl
sub
mov
adc
pop
lock
out
inc
adc
maskmovq
divl
test
xor
cltd
push
scas
ret
aam
fsubrl
in
mov
jns
mov
inc
in
inc
sub
mov
fwait
or
aam
jne
mov
scas
nop
subl
bound
test
inc
popf
push
pop
iret
movsb
jg
clc
pop
adc
jns
stos
div
outsl
stc
pusha
sbb
inc
xorl
cld
shrl
dec
jns
sar
mov
xor
mov
inc
inc
movsl
inc
jae
xor
rclb
stos
loopne
xor
ror
repnz
out
mov
xor
cmp
sti
inc
or
sbb
repz
mov
lcall
add
cltd
mov
pop
jnp
sub
outsb
out
inc
and
add
mov
jb
cld
xchg
jnp
in
inc
mov
clc
mov
inc
ds
clc
pop
shll
loopne
inc
test
inc
mov
jo
adc
mov
lock
jecxz
or
cmp
inc
out
pop
sbb
xchg
push
repnz
imulb
ret
push
mov
mov
icebp
inc
inc
xchg
repz
mov
pop
cmp
dec
pop
cmp
leave
xor
sbb
sub
nop
ja
mov
inc
jg
sbb
sbb
rcll
push
mov
xchg
shrl
inc
mov
xchg
sbb
cmp
or
sub
shll
movsb
leave
cmpsb
mov
pop
decl
outsb
mov
imul
sub
dec
jo
mov
popa
mov
in
test
insb
inc
jmp
ficoml
out
mov
sbb
inc
adc
lret
sbb
enter
lahf
mov
jle
or
jmp
add
mov
adc
sbb
shrl
push
inc
cmp
dec
lret
jge
les
push
out
call
dec
and
dec
inc
inc
sbb
dec
int
mov
cwtl
pop
sahf
divb
inc
mov
pop
dec
xorb
push
xchg
and
push
les
xchg
pop
dec
xchg
pushf
sbb
stos
mov
cltd
pop
les
js
aad
popf
dec
jne
aam
mov
test
xchg
popf
and
lret
stc
push
dec
scas
inc
loop
loope
dec
cmp
into
mov
inc
test
scas
jg
lock
ficompl
add
stos
add
lret
and
inc
push
clc
roll
lahf
cmp
jle
aad
ds
outsl
lods
sahf
jmp
shll
mov
pusha
aas
pop
repz
add
xlat
pop
adc
xor
orl
mov
jnp
ja
or
push
loop
outsb
push
ret
fstpt
mov
outsb
inc
inc
out
mov
fldt
in
fs
pusha
push
movl
xor
dec
mov
xlat
iret
pop
jle
jno
cmp
arpl
inc
mov
dec
push
adc
add
fstpt
sarb
xchg
imul
jae
xchg
jp
ror
xchg
cmpb
dec
fbld
mov
or
not
and
inc
sub
rol
mov
fwait
inc
ret
addr16
cs
push
movsl
xchg
into
pop
sub
mov
push
and
cmp
nop
pop
and
inc
inc
push
xchg
addl
std
out
mov
in
insb
dec
jp
pop
insb
mov
xor
add
jb
mov
sbb
loopne
aam
sub
cmp
jle
out
lock
rcrl
sbb
cwtl
bound
shlb
lcall
jle
dec
loopne
add
imul
addr16
aad
pop
or
out
dec
lods
jo
mov
add
daa
testb
push
dec
ja
sub
cmp
push
js
xchg
dec
lea
push
xchg
imul
jb
dec
sub
lret
inc
cmp
jl
in
out
mov
sahf
mov
rolb
movsb
cmc
and
popa
les
icebp
cmp
mov
fdivl
aad
add
push
xor
pop
sub
sbb
add
sbb
outsl
mov
or
rcl
cmp
mov
or
cmp
inc
or
fcompp
je
mov
inc
fs
xchg
sub
push
xchg
lea
push
das
outsb
lods
fimuls
push
xchg
pop
add
mulb
nop
cmp
cmp
adc
aad
imul
clc
cmp
push
pop
icebp
jecxz
lahf
pop
cwtl
aaa
sahf
jnp
jb
repz
xor
jle
mov
lcall
and
pop
dec
push
cltd
push
sbb
js
xchg
add
pop
push
lods
lcall
sbb
add
je
sbb
cmpsb
fwait
shlb
xchg
bound
imul
pop
stos
fucom
and
addr16
push
mov
fldenv
out
les
push
fyl2xp1
cs
adc
int3
or
aad
lods
xor
jo
ss
push
add
dec
or
and
data16
push
and
push
cmpsb
mov
in
add
pop
std
leave
push
aaa
pushf
lret
shl
arpl
or
enter
cmp
mov
fucomi
pop
mov
pop
fsubl
sti
ret
shlb
imul
es
cmp
in
cmp
outsb
inc
dec
add
jp
hlt
shl
test
dec
adc
and
repnz
out
jno
sets
add
mov
mov
lea
add
pushf
cli
test
sub
and
fistps
cmc
xchg
sbb
inc
xor
loope
inc
lock
stc
jl
xor
inc
inc
roll
shlb
test
popa
jecxz,pt
dec
int
les
xor
cmp
pushf
movsl
lret
ljmp
in
aaa
xor
in
cwtl
and
jl
notl
mov
add
add
dec
fs
jl
clc
inc
cmpsb
sub
lcall
mov
jge
xor
cmp
movsb
int
lret
les
pop
lock
mov
mov
mov
test
pop
scas
jle
addl
sub
es
aas
fs
dec
lcall
dec
inc
sub
mov
pop
ja
mov
stos
sbb
xlat
leave
sti
sahf
call
rcrb
cmp
cmpl
clc
movsb
fcomps
sub
loopne
mov
repz
xorl
das
lss
add
leave
fistpl
enter
dec
int
sahf
fadds
test
or
insb
jns
pop
jle
lds
enter
xchg
mov
jg
loope
dec
push
ret
out
dec
and
xchg
aam
mov
sub
mov
ljmp
cli
imul
mov
pop
and
ds
cmp
sti
pusha
mov
bound
jge
test
jno
cmp
repz
add
add
lods
and
dec
out
shll
scas
cld
jmp
ljmp
xchg
insl
sbb
pop
ja
int
add
mov
sar
cld
jne
pop
insb
jle
mov
jnp
pop
insb
mov
pop
push
mov
ret
push
add
notb
aaa
mov
cmovl
sub
mov
idivl
sti
cmovbe
in
xor
xor
fiaddl
add
int
adc
xchg
fisubrs
mov
cmp
loop
movsb
into
dec
je
repz
cmp
inc
cli
mov
bound
adc
mov
mov
dec
adc
loope
jno
fidivrl
rorb
or
pop
rclb
inc
iret
aad
jnp
std
add
arpl
icebp
mov
mov
pop
pop
add
ret
insl
mov
cmp
jmp
js
sub
pop
ds
jae
nop
fildll
cld
repnz
ret
hlt
frstor
icebp
test
inc
jp
lret
sahf
cltd
fisubl
sbb
mov
fwait
or
adc
rolb
test
jp
repnz
mov
cwtl
inc
push
push
call
or
dec
add
in
mov
inc
sub
jg
ror
das
mov
add
xchg
mov
nop
dec
push
cmp
sub
xchg
add
mov
loope
inc
inc
scas
mov
ret
in
adc
pop
mov
inc
jp
mov
and
dec
and
inc
subb
in
sbb
sub
push
lret
mov
xor
adc
int
ds
movsb
frstor
mov
sarl
jb
sub
aas
lret
cmp
call
mov
decl
int3
dec
addr16
jb
inc
adc
push
loop
add
add
ret
es
flds
xor
mov
ret
lret
loope
inc
out
dec
ret
fmull
in
cmp
xchg
cwtl
stos
jecxz
pushf
inc
pop
jg
dec
cmp
and
loopne
fld
push
cmp
mov
sub
aad
jecxz
nop
daa
inc
std
adc
pop
add
pop
mov
sbb
mov
and
or
adc
mov
movsl
sbb
lock
inc
xchg
push
movsl
pop
ja
aad
mov
xor
sbb
jmp
mov
and
pop
pop
jbe
or
or
dec
lds
inc
pop
mov
dec
lods
add
int3
nop
dec
stos
mov
jecxz
lret
testl
pop
cld
add
into
pop
mov
call
mov
pusha
mov
pop
inc
lahf
or
loope
imul
in
fimull
insl
out
popf
jno
xchg
mov
cltd
and
sahf
jmp
pop
add
out
lods
cmp
decl
jl
dec
or
js
inc
and
jae
xchg
mov
mov
inc
jnp
leave
cmp
fs
bound
in
movsb
mov
lret
js
push
push
add
pop
sub
push
cwtl
dec
push
out
cmp
jp
test
mov
inc
mov
dec
push
pop
pusha
lods
add
adc
bound
loop
sub
movsl
in
pop
mov
cmp
sub
out
int3
push
sub
gs
add
int
pop
bound
in
mov
leave
inc
and
mov
lods
jb
cmp
dec
bound
add
addr16
movsl
dec
sub
pusha
cwtl
xchg
mov
xchg
stc
mov
jle
sbb
rcll
imul
jecxz
and
test
test
add
mov
lea
icebp
rdmsr
imul
xorl
push
xor
test
pusha
rcrb
xchg
dec
or
loope
test
out
pop
pop
pop
xchg
sub
jne
xchg
out
dec
enter
mov
jo
xor
mov
int3
call
push
repz
mov
mov
lds
pop
les
dec
jbe
or
mov
xchg
pop
dec
imul
nop
jle
xor
ret
dec
fs
pop
sti
mov
pop
mov
xchg
ja
fwait
inc
sbb
pop
leave
adc
mov
xchg
aam
outsb
int3
push
repz
add
or
in
hlt
cmp
scas
jno
dec
push
and
dec
inc
push
fs
mov
sbb
cmp
hlt
xor
pop
repz
add
cld
or
mov
and
sbb
into
aaa
es
fs
inc
mov
and
sub
or
orl
jo
jnp
mov
sub
lret
test
cmpsb
mov
cmp
nop
fdivr
add
hlt
dec
inc
or
adc
out
cmp
daa
nop
push
push
mov
sub
notl
dec
cwtl
jge
cltd
push
jg
fldt
fsts
mov
xchg
sti
cld
dec
bound
dec
leave
repz
ds
or
sbb
mov
add
pop
push
cmp
flds
pop
add
pop
mov
mov
aam
in
add
cld
xorb
out
pop
cld
push
mov
mov
jp
jl
insb
mov
xor
xchg
mov
das
sbb
add
inc
ret
and
invd
mov
pop
push
inc
iret
xchg
add
aaa
mov
andl
pop
cmp
iret
xchg
mov
jecxz
stos
in
mov
stos
cmp
test
insb
inc
push
int
cld
xor
imul
pop
inc
jns
sub
ficoml
mov
dec
iret
pop
mov
into
insl
jmp
pushf
sbb
jns
xor
test
popf
dec
movsl
inc
popa
stos
mov
push
mov
mov
dec
movsb
scas
jmp
mov
and
jge
mov
das
and
mov
push
inc
loope
outsl
cmc
cld
loope
ret
jecxz
cs
sub
mov
test
xor
sahf
int
in
sub
bound
inc
push
add
pop
addr16
jle
mov
lds
push
ja
push
sub
pminub
fldt
scas
jg
push
sti
push
inc
lret
andl
dec
ret
pop
xchg
aas
out
mov
cmp
in
jnp
test
mov
inc
imul
pop
mov
mov
sbb
pop
imul
jmp
bound
rorl
fyl2xp1
movsb
sbb
mov
nop
or
push
rolb
rorl
xlat
mov
push
test
lcall
push
mov
mov
or
inc
jb
hlt
subl
mov
sbb
cwtl
dec
push
ds
popa
ret
add
and
test
in
pop
dec
mov
xor
pop
adc
mov
pop
or
jge
sbb
das
testb
or
pop
stc
inc
fdivrl
scas
mov
jl
sti
sti
xchg
fistps
and
in
cmpsl
inc
dec
cmp
or
cld
add
cmp
stos
ljmp
ret
xor
sbb
stos
imul
inc
or
mov
cmp
xor
adc
hlt
xor
push
int
int3
out
popa
mov
sarb
and
sub
xor
dec
loop
aam
cmp
pusha
cmp
repz
inc
mov
icebp
cmp
xchg
xchg
mov
dec
inc
jl
ljmp
lea
jns
andb
loope
add
ret
call
in
sub
pop
sub
or
and
int
push
mov
add
int3
repnz
xor
pop
cmp
cmp
or
dec
inc
mov
mov
shll
into
nop
je
int3
adc
loope
iret
shll
aam
leave
pop
mov
lahf
inc
shr
shlb
push
inc
or
jge
jns
pop
jmp
inc
mov
in
scas
out
or
ret
pushf
imul
mov
or
jp
imul
jo
jno
dec
mov
cmp
shlb
insb
std
outsb
aas
roll
xorl
mov
in
pop
mov
mov
daa
imul
fsts
sbb
xchg
sub
imul
jge
mov
or
out
or
fdivrl
in
push
inc
fs
aam
aaa
sbb
daa
es
jle
popf
cmpsb
jl
or
leave
inc
pusha
inc
cmp
lods
inc
sub
jmp
dec
inc
and
inc
sub
and
cmp
pop
sti
mov
sahf
add
pop
or
push
fstpt
rolb
mov
js
mov
pop
or
dec
call
jp
in
out
or
das
lret
mov
lods
dec
push
loope
cld
ret
nop
sub
mov
pop
sbb
fxch
cmp
pop
mov
ficoml
or
push
mov
outsb
mov
add
and
aas
bound
enter
imull
push
fwait
orl
sub
add
fdivrs
fisubl
jae
scas
lock
jle
jno
sub
repz
jb
push
leave
jl
inc
imul
mov
in
mov
adc
daa
jne
or
nop
cmp
outsl
mov
movsb
lcall
stos
jae
cltd
mov
fildl
dec
das
xor
sub
cld
test
pop
pop
add
jnp
fcomps
fstp
or
cmpsb
shl
lahf
push
aas
pushf
mov
mov
fcoms
push
xchg
jns
pushf
into
shrl
icebp
xchg
in
inc
mov
vpbroadcastq
je
sub
pop
pop
push
or
aaa
adc
mov
add
outsb
aam
mov
fdivrl
fldcw
mov
mov
jno
or
add
jge
in
push
nop
xor
adc
mov
pop
pop
sbb
lret
mov
or
mov
push
movsb
shll
sbb
sbb
fs
pushf
inc
repnz
cmc
add
lods
or
hlt
jg
scas
stos
outsl
pop
xor
mov
cmc
pop
or
add
jnp
enter
mov
movsl
jno
in
lea
mov
arpl
add
int3
aam
mov
pop
pop
pusha
lret
or
sub
xor
lcall
adc
mov
xchg
and
lea
dec
fisttpl
arpl
push
inc
fstps
xor
mov
mov
enter
cwtl
push
ret
fcoms
jp
sbb
retw
int
xor
enter
push
aaa
inc
push
jbe
inc
mov
insl
pop
add
sbb
pop
xchg
loop
xchg
sar
call
sbb
sbb
or
xchg
sbb
push
add
lret
jno
out
rorl
or
leave
out
mov
outsl
cmp
cltd
xlat
mov
push
add
xchg
push
popa
stc
xor
orl
cmc
dec
lock
ja
sahf
cmpsb
cmp
rcl
mov
add
push
int
jl
es
int
push
shrl
in
push
aad
dec
or
sbb
and
pop
inc
outsb
cmp
cwtl
pop
xchg
fidivl
mov
imul
pop
lahf
sbb
adc
jmp
fcmove
cs
flds
adc
jmp
mov
fldt
fsubrs
divl
or
ret
mov
add
cmpsl
sti
nop
popf
test
add
ret
sub
scas
adc
dec
mov
ja
testl
mov
cli
push
cmp
push
pop
cmp
pop
test
pop
arpl
adc
push
bound
mov
adc
xchg
add
es
arpl
ret
shl
scas
adc
aad
add
push
bound
in
call
sti
repz
and
add
inc
jge
les
adc
push
mov
das
rclb
cmp
lods
mov
inc
addr16
xchg
xor
test
dec
mov
mov
stos
bnd
lea
fs
call
in
dec
ret
jns
xchg
add
test
fs
stos
push
cltd
pop
in
cmpb
add
test
imul
cmp
inc
incl
ficoml
xor
arpl
pop
jb
sub
and
popf
mov
cli
sub
xor
jne
loop
jbe
mov
jo
pop
aam
and
pop
enter
or
sub
xchg
stos
mov
cmpsb
sub
or
iret
fadds
xor
mov
push
enter
adc
cmp
dec
jb
mov
ret
mov
push
insb
mov
cmp
sbb
push
jns
sti
jo
pushf
mov
lea
insb
push
lods
dec
lds
lea
addr16
mov
adc
popa
cmc
sbb
shll
inc
js
insb
jp
es
add
lahf
dec
adc
gs
xor
sub
adc
mov
adc
in
icebp
sub
xor
mov
rclb
fimuls
icebp
std
pushf
fmull
movsl
adc
rcrl
dec
mov
dec
dec
pop
outsb
lret
and
imul
lret
mov
push
popl
push
dec
dec
or
sub
push
sbb
jmp
push
or
mov
fwait
test
in
movsb
xchg
jb
push
pop
inc
xor
jg
adc
and
pop
repnz
and
leave
sbb
mov
or
lods
sub
add
dec
cltd
ret
and
scas
nop
jno
inc
popl
xor
xchg
dec
fbstp
pop
les
mov
xor
dec
pop
sub
mov
push
lret
out
es
iret
imul
movsl
pushf
bswap
and
ja
jge
cmp
sub
mov
mov
ljmp
test
insb
pop
push
shlb
insb
xchg
inc
aam
loop
pop
loopne
rol
jmp
mov
ret
inc
repnz
mov
aas
mov
ja,pn
add
inc
inc
xor
stos
jecxz
cmpsb
adcl
test
inc
lcall
movsb
and
js
addl
and
push
mov
xor
lods
sub
mov
popa
xchg
andl
lds
inc
in
inc
pop
fsub
sbb
mov
imul
mov
loop
lcall
xchg
xlat
dec
test
sbb
sub
mov
ss
mov
ret
ud1
cli
sbb
cld
in
repnz
cmp
adc
xor
sub
or
out
cmp
mov
lret
dec
mov
cmc
adc
add
xorb
out
push
icebp
dec
stos
addr16
xor
xchg
xor
or
sbb
inc
sbb
aad
call
xor
mov
movsb
movsb
in
int
es
pop
mov
and
dec
mov
ret
movsl
push
aad
or
mov
fcompl
cmp
sub
das
pop
mov
leave
lcall
cmp
mov
cmc
popf
pushf
subb
xchg
int
lret
inc
test
cmp
xor
jge,pt
cli
idivb
and
push
lock
xchg
xor
xrelease
cwtl
mov
and
addr16
add
sarb
lret
jg
mov
pop
mov
jle
add
jno
and
mov
dec
push
push
xchg
xchg
imul
je
inc
mov
inc
mov
out
add
fisttps
jae
jle
les
jp
adc
icebp
cli
movsb
sub
mov
lret
pop
sub
or
and
fdivp
lods
clc
popa
dec
out
cwtl
ds
jnp
call
aaa
fiaddl
das
xchg
jp
add
add
sbb
lock
in
and
cmpsl
test
mov
mov
inc
cli
imul
push
mov
xor
jecxz
std
int3
inc
fcompl
stos
mov
loop
dec
mov
arpl
fimull
bound
mov
shrb
aas
add
ficoms
cmpsl
test
fstl
cmp
fdivrp
es
or
bound
in
push
dec
jnp
loop
xor
roll
fs
aas
push
cmpsl
mov
repz
jecxz
loop
pop
and
cmp
sub
push
mov
dec
notl
jecxz
pop
cmp
jnp
movsl
mov
ret
movsl
sarb
nop
stc
loope
lds
pushf
pusha
adc
xorb
dec
mov
movsb
xor
enter
fimuls
lods
ficomps
cmp
jno
std
lcall
sbb
std
out
imul
sub
les
xchg
mov
pop
jp
adc
out
jl
fisubrl
inc
aad
pop
iret
ret
adc
cmc
outsl
loope
push
fsubl
push
rcll
mov
in
jnp
fs
xchg
ljmp
add
scas
mov
in
xor
mov
dec
jno
mov
clc
les
icebp
pop
sub
mov
inc
int
mov
mov
mov
call
pop
fisttps
xor
sbb
fchs
sub
push
mov
sar
scas
shll
xor
fs
lret
lret
scas
pop
loop
in
mov
pop
aad
xchg
pusha
mov
and
call
ljmp
adc
mov
clc
cmp
xor
pop
jge
lcall
stos
or
push
shlb
and
sub
cltd
sbb
mov
mov
repnz
xor
inc
fidivrl
fidivrl
cltd
jo
loopne
mov
pop
cmp
xchg
pop
inc
test
inc
movsb
ret
mov
cs
pop
jl
pop
dec
mov
out
insl
push
ret
inc
mov
or
pushf
xorl
inc
dec
nop
mov
xor
jns
ret
fsubr
mov
insl
inc
xchg
clc
pop
mov
mov
or
or
adcb
aam
pop
imul
xor
sbb
loopne
xor
stos
lds
test
aas
pop
nop
add
in
and
inc
int
pop
or
mov
inc
lret
or
cmp
sub
fucomi
scas
fldt
iret
mov
das
pop
push
ds
adc
pop
sub
daa
xchg
iret
jns
inc
pusha
out
out
lods
ret
ret
cmpsb
aaa
adc
pop
or
dec
mov
ret
aam
data16
push
mov
push
sub
inc
add
and
fsts
mov
jbe
dec
les
and
xor
outsl
or
xchg
mov
dec
andl
jmp
xchg
sbb
cmpsb
enter
xor
pop
and
ficoms
xor
repz
insl
ss
adc
xor
stos
ds
pop
repz
add
jp
sbb
push
inc
fstpt
mov
cs
xlat
cmc
mov
ret
dec
mov
aam
je
nop
mov
adcl
adc
ret
ja
adc
cmp
sahf
add
mov
sbb
popa
stos
inc
dec
fmull
push
fistps
sub
lds
leave
push
std
xor
cmp
repz
in
jp
mov
movsb
or
dec
adc
imul
stos
jne
sub
adc
cli
adc
dec
notb
adc
xchg
movsl
mov
cmp
lods
in
jge
pop
mov
test
sbb
stos
stos
push
xor
ljmp
cld
lods
xor
jnp
stc
and
lcallw
cld
sub
mov
sbb
mov
mov
cwtl
hlt
push
sahf
mov
cmp
fldt
imul
sbb
add
dec
or
loopne,pt
mov
cmp
fwait
add
decl
mov
xor
add
fwait
sub
push
ret
inc
sub
repz
mov
cmp
clc
bound
mov
jne
and
xor
cs
ror
clc
mov
aam
andb
adc
out
pop
jnp
aaa
sub
lret
pop
pusha
dec
mov
cmpb
dec
and
aad
add
iret
mov
push
roll
pop
ds
frstor
in
lsl
fcoml
test
and
ljmp
add
fimull
cwtl
movsb
xchg
push
jnp
cwtl
xchg
fcomp
adc
xchg
repz
pusha
pop
pop
xor
fwait
xchg
pop
ljmp
imul
push
les
dec
inc
divl
fisttpl
fs
es
jmp
insl
outsb
jae
mov
in
es
push
push
inc
mov
xchg
mov
inc
out
pop
out
outsb
fdiv
daa
aaa
mov
sarb
pop
test
aaa
add
push
push
cs
into
std
and
aas
xchg
sbb
movsb
xor
mov
inc
popf
repz
sarb
jnp
fldl
lret
pusha
mov
adcb
xor
inc
add
add
pop
test
sub
aam
or
inc
fwait
rcll
adc
pop
fs
adc
add
push
pop
iret
inc
sti
stos
clc
pop
ss
mov
mov
lcall
mov
inc
or
bound
mov
mov
xchg
pop
and
sub
sahf
push
mov
mov
shll
adc
stos
icebp
sbbl
sub
adc
shlb
scas
call
jnp
jnp
popa
adc
stc
leave
xor
outsb
stos
cld
mov
imul
into
inc
adc
sub
cmp
subl
pusha
sbb
jb
mov
out
imul
je
popf
inc
jbe
mov
cmp
insl
into
add
imul
mov
nop
push
and
imul
cmp
push
add
dec
nop
int3
push
data16
arpl
adc
lahf
mov
add
push
or
inc
lods
pusha
sbb
push
jecxz
dec
adc
rorl
and
sbb
ret
test
inc
jo
inc
xor
arpl
repz
or
dec
push
dec
aad
hlt
mov
adc
movsb
mov
and
sbb
clc
mull
xchg
mov
sbb
mov
cld
aaa
inc
or
push
xlat
adc
and
mov
aas
ss
fistpll
fiaddl
mov
cmpb
dec
jg
into
and
movsl
add
jge
cmp
sub
dec
xor
test
sub
lods
xchg
mov
ja
adc
lea
push
aad
jb
add
cmp
jnp
dec
imul
sar
add
les
jecxz
rorb
cmp
lds
cmp
inc
jne
push
sub
pop
cmp
xor
adc
mov
mov
or
orl
mov
outsl
mov
je
push
into
jp
loope
popa
in
negb
es
outsl
pop
negb
shlb
xor
mov
jp
test
stos
pop
xchg
scas
std
adc
jnp
test
dec
fsubrs
test
xchg
mov
cmpsb
in
xor
mov
subl
xchg
inc
mov
xchg
xor
shlb
rcll
xchg
or
and
mov
adc
cmc
lock
sbb
call
push
and
add
sub
xchg
loopne
mov
push
mov
xchg
jnp
loopne
dec
sahf
push
sub
sbb
xchg
or
and
lret
xor
lret
lcall
mov
add
adc
gs
xchg
pop
int
add
outsl
in
std
xorl
insl
test
mov
adc
insb
pop
stc
sub
lret
push
pop
pop
xor
dec
imull
sub
lods
mov
mov
bound
push
xchg
dec
aaa
test
in
aas
lret
jnp
inc
mov
lret
lea
ficoml
ret
inc
int
xchg
xchg
mov
imul
mov
popf
arpl
ficomps
push
cltd
das
sbb
and
mov
pop
fs
movsb
movsl
aas
cmp
imul
into
mov
cmp
popf
pop
inc
leave
mov
inc
iret
jo
inc
cmpsl
sub
sarl
jl
out
inc
cwtl
mov
dec
aaa
fcmovne
jb
push
push
movsl
xor
add
and
js
pop
cmp
jae
outsl
mov
xchg
xor
pushf
aaa
js
or
add
mov
and
nop
add
bound
xchg
jp
out
arpl
mov
js
sbb
enter
jge
push
test
aaa
ja
movsl
mov
inc
mov
sti
mov
mov
fwait
into
mov
cmpsb
dec
xor
jae
in
pop
jg
loope
mov
jge
cltd
jbe
mov
ficomps
aas
test
and
out
mov
cmp
in
inc
lods
aad
leave
adc
psubsb
mov
xchg
lock
int3
lods
mov
bound
pop
das
call
sarl
imul
and
inc
in
dec
jno
cli
add
sub
sbb
test
push
int
inc
stos
outsb
enter
inc
cmpl
sbb
or
cmpb
movl
shl
cmpb
insb
mov
sub
jne
fists
imul
jne
push
lods
bound
push
push
ds
add
jle
lret
and
lods
inc
ret
jge
cwtl
into
movsl
xchg
xchg
jns
shrl
dec
sub
push
rol
xor
and
inc
jp
fsts
mov
leave
pop
cmp
int
cli
imul
ljmp
arpl
lds
leave
mov
push
pop
outsb
lods
es
inc
nop
xor
popf
pop
ss
add
cld
dec
cmp
int3
mov
js
cs
jae
inc
or
in
in
cmovne
test
mov
aas
cld
push
lods
aas
enter
xchg
cmp
inc
aad
push
std
lock
mov
nop
sub
movsb
lock
jl
xor
aas
sub
jge
ret
frstor
push
cmc
sub
inc
dec
pop
stos
inc
mov
ficoms
in
jnp
dec
fisubs
xchg
insl
jns
fnsave
std
shll
mov
xchg
inc
add
xor
sbb
mov
xor
sbb
sbb
pop
adc
cmp
aas
imul
adc
push
inc
rcll
stc
and
sbb
xor
lock
and
pushf
iret
adc
mov
inc
cmp
out
test
rcrb
lock
lret
icebp
sbb
mov
and
outsl
fdivrs
cmp
rorl
ljmp
add
dec
mov
cltd
les
js
jne
pop
in
xorb
pop
popa
lods
mov
in
loopne
test
cmp
sarb
push
aas
xchg
or
mov
cmp
jmp
mov
push
jmp
inc
mov
aam
jg
je
sub
outsl
inc
int
sbb
inc
rolb
push
test
sbb
ljmp
xchg
sub
filds
pop
aas
rol
jnp,pn
sbb
cmp
mov
pushl
fimuls
cmp
mov
add
and
out
pop
popa
aas
mov
andb
sbb
sarb
popf
call
and
lret
dec
sub
pushf
mov
pop
lahf
cmp
sbb
mov
jnp
hlt
cmp
mov
and
test
dec
aas
cmpsb
push
andl
sbb
arpl
mov
nop
repnz
test
int3
pop
repnz
mov
xor
jmp
add
imul
sbb
leave
lods
sub
cli
jo
repnz
pop
stos
mov
pop
jmp
pop
cmp
sub
gs
flds
out
jecxz
stos
mov
ja
sbb
inc
fwait
cli
jle
pop
pop
inc
pop
stos
arpl
int3
addb
and
cmc
sbb
sub
and
or
inc
add
repz
stc
and
loope
divl
mov
or
mov
cltd
je
addr16
cmp
sti
dec
mov
or
stc
mov
roll
xor
sub
sbbb
or
popa
mov
inc
sbb
push
popa
das
rorl
lods
test
pop
push
cmc
inc
add
dec
add
xchg
jae
xchg
clc
jb
div
sbb
mov
repz
shrl
fidivrl
add
sub
arpl
in
fcomip
inc
stos
dec
shrl
xor
pop
pushf
in
xorb
rcl
lret
adc
inc
sub
sub
lret
ljmp
cmp
std
xchg
cmpsl
and
inc
enter
add
xor
js
mov
xchg
jnp
xchg
sahf
stos
jae
into
mov
add
insb
ljmp
push
in
push
int
and
xchg
cmpb
imul
rol
scas
mov
jecxz
mov
xchg
out
shll
jnp
xchg
ja
ret
pop
aam
shrl
int3
aam
inc
cmpsl
push
les
fcmovb
and
mov
xor
mov
mov
fisubrs
stc
push
inc
rol
icebp
pop
dec
loope
mov
jl
mov
jns
in
sub
out
xlat
xchg
icebp
arpl
push
sub
fldcw
test
sbb
lret
and
enter
jnp
pop
dec
inc
pusha
inc
repnz
or
xchg
pop
mov
or
adc
push
inc
popf
sbb
inc
inc
sub
aam
sub
mov
push
pop
aad
push
jg
imul
inc
testb
dec
add
xchg
xchg
ret
add
pop
lret
jae
jmp
mov
cmpl
push
inc
fcmovbe
into
push
inc
addr16
jge
inc
fistps
test
rorb
mov
add
cli
cltd
icebp
cltd
rorb
push
sti
js
and
xchg
jle
mov
xchg
ret
insb
pop
pop
mov
dec
cmp
push
mov
pop
adc
push
push
jecxz
adc
mov
mov
mov
sbb
cmp
enter
xchg
in
cmpsl
sbb
and
mov
and
leave
ja
scas
mov
movsb
enter
mov
sub
mov
adc
mov
jne
int
mov
sbb
pop
ljmp
add
jmp
pop
mov
mov
mov
xchg
mov
pop
mov
cwtl
mov
aaa
mov
std
inc
loopne
loope
push
mov
or
icebp
mov
cmp
pop
mov
stc
cmp
adc
cmp
repz
stos
mov
cmpsb
fs
aam
popa
pop
loopne
sub
adc
sub
xchg
xor
mov
mov
cld
cmp
and
adc
ret
push
sub
int
mov
outsb
mov
gs
inc
pop
clc
xchg
or
or
add
dec
and
cld
mov
sbb
test
mov
add
lea
mov
ds
inc
ret
in
and
movsl
jmp
int3
cmp
cwtl
xor
adc
lods
in
mov
inc
mov
aam
pop
sub
dec
stc
loopne
push
ss
ret
jp
shrl
fidivrs
into
leave
cmp
pop
jnp
sbb
clc
push
push
leave
out
dec
inc
in
sti
jp
xchg
jnp
dec
icebp
dec
push
negl
loopne
ds
stc
pop
xchg
pop
dec
push
test
addr16
idiv
iret
test
sysexit
mov
inc
inc
mov
in
adc
mov
mov
lods
mov
add
cmc
dec
cld
rcrb
push
inc
pop
jae
stos
lahf
xor
cmp
imul
gs
sub
pusha
add
xorl
cmp
ljmp
rorl
scas
arpl
jo
push
je
adc
rcrb
cmpsb
or
stos
mov
pushf
hlt
pushf
ret
xlat
popf
lock
xchg
aad
fdivr
rclb
rcll
cld
sbb
out
jno
lea
test
cmp
dec
or
jge
fistpl
mov
push
mov
ds
cmp
add
dec
mov
sti
inc
movsl
mov
jmp
nop
hlt
nop
lea
pop
inc
xchg
mov
push
mov
cmp
ret
push
xchg
dec
mov
in
and
cli
xchg
loopne
stos
pop
and
jnp
pop
repz
leave
jno
or
loope
dec
inc
xor
cld
pop
imul
mov
inc
insb
fs
ds
imul
sbb
pushf
pop
fsub
andb
cli
daa
sub
add
movsl
aas
scas
cmp
fbstp
call
push
pop
mov
ljmp
mov
lea
insb
xor
ret
xor
mov
cmp
mov
and
add
xchg
out
stc
pop
jb,pt
push
lahf
jb
inc
and
push
mov
ja
in
iret
popf
push
jmp
mov
lods
mov
mov
add
cmc
mov
pop
jae
jl
daa
lcall
shl
jge
cmp
jle
cwtl
add
adcb
jb
cmc
fisttpl
dec
push
and
insl
adc
bound
stos
adc
dec
sahf
xchg
pop
jmp
notb
cmp
mov
xor
xor
push
mov
or
cltd
pop
cmp
dec
cmp
sbbb
arpl
imul
and
pop
pop
mov
in
mov
loop
pop
gs
clc
and
fdivr
pop
push
movl
add
xlat
sub
popf
loopne
add
popa
push
mov
les
mov
pop
loope
adc
mov
cmp
pushf
and
inc
insb
pop
or
dec
dec
arpl
mov
je
ljmp
cmp
insb
lret
clc
mov
test
int
scas
mov
imul
orl
in
bound
adc
mov
in
lret
fdivl
or
sar
pop
mov
adc
xchg
pop
ror
inc
pop
repz
lea
or
rclb
les
js
jl
or
fiaddl
add
jo
cs
scas
xchg
mov
ja
pushf
in
xchg
ss
pusha
push
mov
add
dec
in
popf
jmp
pop
mov
sbb
cmpsl
cmpb
push
lods
mov
adc
jmp
sbb
push
sbb
jmp
test
mov
insb
mov
lods
push
lret
push
jo
pusha
sub
adc
mov
and
sub
iret
lds
cmpsl
mov
leave
lea
jb
test
xor
cmpsl
sub
cwtl
sub
cmpsl
cmpb
xor
ljmp
lds
or
fidivl
insb
push
std
lock
dec
mov
mov
inc
enter
cld
inc
pop
xchg
and
jle
mov
leave
or
add
cltd
ja
cmc
mov
outsb
cmpsl
sbb
sub
mov
es
fisubrl
xorl
sbb
or
stos
fs
lods
and
fidivs
lock
cmp
mov
and
inc
cmp
sbb
jecxz
mov
pop
fwait
loopne
inc
xchg
xor
clc
loopne
andl
rolb
mov
mov
std
sbb
pop
insl
xor
shlb
pusha
ljmp
pop
xor
es
shl
stos
jmp
nop
inc
int3
neg
lods
ret
mov
mov
mov
add
hlt
jne
fcomp
jecxz
xchg
and
repz
inc
test
aaa
sbb
cmp
ds
dec
scas
pop
push
nop
sub
stos
and
pop
das
das
mov
lea
and
outsl
arpl
into
lahf
adc
adc
jecxz
loop
or
dec
fs
mov
ret
mov
jae
adc
or
cmp
xchg
push
mov
mov
jbe
xchg
mov
ja
enter
mulb
addb
pop
inc
jge
xlat
push
mov
push
fsts
data16
int
fisttpll
dec
je
shrb
jmp
lret
daa
mov
imul
sub
cmp
push
sub
or
sub
jb
out
aas
rcr
inc
fcomp
or
daa
hlt
cmp
daa
jge
dec
repz
jge
sub
gs
subl
das
mov
mov
or
mov
aad
movb
mov
jge
mov
rcl
sub
enter
and
sbb
dec
adc
lret
push
int
lods
xchg
lret
ds
sub
movsb
adc
sub
cmc
mov
aas
movsl
int
pop
xor
lods
jmp
sarl
ret
sbb
pop
hlt
inc
sbb
or
outsl
lock
lods
jp
mov
add
mov
mov
mov
pop
or
inc
and
jl
pop
loop
pop
inc
sub
xlat
mov
jecxz
push
push
mov
loopne
mov
repnz
and
jecxz
xchg
pop
cld
das
mov
in
xchg
int3
inc
lahf
jnp
sbb
jae
add
xchg
rcrb
lahf
and
mov
cmpsl
out
in
pushf
fstps
shll
lret
jbe
add
sbb
insb
cmp
ficoml
std
in
outsb
test
jecxz
push
adc
push
mov
xor
push
dec
mov
inc
fdivl
xor
cmp
jnp
cli
mov
lock
cs
std
sahf
ss
out
lcall
inc
sub
addl
popf
inc
push
iret
dec
mov
int3
inc
lea
in
shl
mov
mov
in
dec
call
and
pushl
xor
push
cmp
mov
mov
out
outsl
hlt
jl
sub
inc
jne
jnp
lea
jg
push
sbb
dec
push
int
pop
stc
std
or
shlb
cli
popa
add
inc
xchg
mov
add
cltd
mov
mov
xchg
inc
sbb
mov
jnp
sbb
pop
mov
movl
cmp
jp
inc
push
jnp
or
add
cmp
std
sub
hlt
mov
sahf
das
out
mov
mov
fcoml
lea
lea
mov
ret
js
arpl
xlat
pop
orl
fnop
fwait
dec
ds
imul
bound
mov
and
repz
mov
enter
stos
sbb
inc
mov
stos
mov
bnd
inc
mov
push
mov
add
lret
lret
aad
inc
fidivl
test
sub
cmp
or
imul
xor
inc
addr16
leave
les
stc
lds
mov
fwait
push
mov
cmc
ja
add
popf
idivl
push
push
jmp
xor
inc
aaa
cmp
add
mov
cmp
inc
add
mov
mov
stc
in
ss
in
and
xchg
jle
mov
rol
or
sbb
push
cmc
adc
dec
pop
mov
add
xlat
aad
xchg
mov
xlat
push
xchg
sub
cmp
sub
or
in
mov
movsl
repnz
loopne
orl
sbb
and
leave
dec
xor
hlt
add
xor
shll
lcall
ss
in
dec
xor
daa
cmp
push
mov
je
jl
addr16
sub
sbbl
inc
imul
stc
mov
fdivrl
outsl
test
dec
pop
call
ficompl
filds
fadds
movsb
dec
jmp
mov
cmp
out
sbb
jl
imul
cmp
push
loopne
shll
gs
or
roll
test
fldl
int3
call
aam
cli
pop
mov
popf
jp
mov
dec
mov
test
bound
sahf
add
sti
add
jb
stc
mov
cmp
sub
pushf
or
add
pop
xor
push
mov
roll
or
or
or
xor
scas
jbe
sub
pusha
fldcw
mov
cmp
and
enter
xchg
sub
pop
jge
pop
cmp
jbe
lret
in
pop
xchg
mov
shrl
add
pop
loopne
mov
idiv
and
or
and
jp
ss
push
mov
jnp
jb
fsubrs
jne
sahf
cld
mov
bound
xor
mov
pusha
jmp
dec
dec
push
push
jecxz
xor
xchg
daa
sbb
cmpl
mov
shll
jo
scas
add
call
pop
adc
orl
pusha
insb
dec
cmp
stc
cmpsb
roll
sar
adc
xor
jl
fimull
fwait
dec
jmp
data16
pop
or
subb
lods
lret
add
in
fdivrl
cltd
jle
movsb
mov
in
ret
or
mov
add
mov
test
add
insb
add
pop
push
sarb
lahf
add
add
les
and
rcrb
les
inc
adc
jecxz
lret
daa
sub
cli
mov
mov
dec
mov
fisttpl
mov
pop
mov
push
inc
int3
movsb
sti
dec
sti
pop
push
push
sub
pushf
xchg
sbb
nop
sbb
cmp
push
xchg
popa
push
pop
out
xchg
gs
mov
or
sub
ss
cmpsb
mov
or
xchg
test
rorl
cmp
loop
cmp
mov
cmp
or
cld
xchg
fsubs
xchg
stos
mov
aad
test
lcall
push
std
out
icebp
sub
in
shll
and
add
test
inc
xchg
push
and
cltd
leave
je
cs
fistpl
pop
jle
arpl
mov
stos
pop
iret
push
jmp
push
test
cmp
cmp
and
nop
push
test
scas
mov
bound
mov
push
or
pop
mov
ret
and
cmpl
lods
fnstenv
ret
cmpsl
mov
inc
stc
inc
gs
pushf
and
or
adc
and
mov
cmp
pop
in
arpl
xchg
xor
int
or
pop
adc
loop
xchg
adc
jae
repnz
push
sub
gs
sub
mov
lcall
imul
loope
sti
and
insb
pop
arpl
sahf
sub
fsubl
jle
push
pop
pop
not
insl
cmc
int3
pop
outsl
test
sti
fcoml
lahf
aas
cmp
loop
popa
and
dec
cmpsb
mov
addr16
mov
pop
jno
xchg
js
jae
lock
sbb
sbb
pusha
mov
add
xor
xorb
stos
adc
or
stos
xchg
mov
clc
std
xor
inc
movsb
fldt
pop
aam
pushf
inc
push
jnp
xor
sbb
scas
jne
cwtl
outsl
mov
les
xchg
xchg
mov
ds
fidivrs
sti
subl
dec
fmul
and
cmpsl
cmpsl
or
aam
dec
scas
in
out
insl
sub
inc
scas
jg
jae
mov
popa
and
pop
inc
sahf
pop
jbe
cmp
sbb
lea
sub
mov
pop
or
xchg
ret
or
das
scas
lods
data16
and
and
push
sbb
fcoml
lea
inc
or
out
or
rorl
ljmp
add
call
subl
cwtl
add
inc
push
mov
inc
mov
fstpl
push
into
jg
inc
fnsave
pop
loopne
dec
mov
clc
adcb
lods
or
and
sbb
inc
scas
cmp
inc
cmpsl
xchg
sahf
sub
or
rcr
cltd
repz
lods
jg
sub
enter
jae
and
cltd
push
aaa
les
mov
mov
inc
xchg
hlt
lcall
ret
mov
enter
mov
call
push
filds
shl
mov
iret
xchg
test
lock
mov
mov
and
add
fwait
inc
xor
stc
test
rol
and
outsb
daa
addb
lods
mov
loop
mov
aaa
jns
mov
cmp
loopne
hlt
inc
addr16
inc
lods
adc
xchg
jnp
cmp
mov
lret
rcl
pop
ret
cmp
cld
xchg
mov
lahf
dec
xor
cwtl
lretw
mov
addb
cltd
cmp
imul
adc
insb
pop
and
in
pop
or
pushf
stos
arpl
daa
in
fimull
ljmp
push
push
ja
cmp
cwtl
call
imul
lahf
popf
mov
pop
or
fstl
shlb
inc
outsl
aad
pop
mov
out
mov
push
fadds
loopne
repz
fistps
jmp
and
inc
sahf
insl
adcb
mul
jle
jl
imul
inc
cwtl
mov
in
mov
repnz
cmc
sbb
leave
js
invd
cmp
gs
mov
or
mov
aad
cmp
pop
sub
xchg
fwait
mov
shl
xlat
add
sbb
inc
cld
sbb
hlt
in
sbb
mov
addr16
shlb
gs
jb
add
and
inc
stc
mov
or
push
or
out
scas
addl
es
mov
fnstsw
or
sub
daa
jbe
adc
dec
jno
fbld
cmc
sbb
add
dec
test
mov
js
jmp
mov
dec
sbb
sub
mov
insb
inc
clc
pop
sub
imul
pop
push
sub
hlt
pop
dec
test
fildl
mov
dec
add
out
ss
les
adc
jb
aad
cmp
enter
lcall
es
iret
pop
mov
adc
inc
imul
push
lret
inc
inc
mov
call
mov
popf
pop
pop
clc
pusha
mov
sub
sahf
stos
enter
ret
or
xchg
clc
add
testb
mov
mov
lcall
clc
jl
sbb
add
cld
sbb
mov
cmc
add
jno
and
lcall
gs
pop
cmp
adc
fldcw
aas
dec
pop
fidivrs
cmp
leave
add
sub
dec
cmp
xchg
insb
cmp
cmpsl
mov
sbb
push
int
mov
fldcw
or
pushf
lods
mov
mov
xchg
clc
shlb
es
scas
iret
push
inc
pop
jb
inc
xchg
enter
and
test
push
pop
sub
mov
pop
jp
or
pop
mov
pop
fcomi
pop
cltd
outsl
and
mov
add
lahf
dec
ja
sbb
daa
cmp
adc
push
test
popl
aas
pop
pop
jno
push
pop
addr16
pop
sub
shl
push
movsl
bound
pushf
imul
int3
fisttpl
mov
cmc
movsl
xchg
mov
mov
cltd
stos
rcll
lret
cmc
fldl
lods
xchg
loop
dec
andl
arpl
out
pop
mov
cmp
imul
and
xlat
mov
sar
sti
fldt
mov
mov
push
es
inc
mov
lret
sbb
stos
nop
clc
aaa
pop
mov
sub
aaa
stos
mov
lahf
out
movsb
xchg
into
loop
xlat
sub
and
lock
mov
inc
call
outsb
xor
jb
scas
cmpl
cmp
rcl
gs
cmp
imul
inc
daa
xchg
scas
mov
les
dec
add
ret
imul
cmp
add
push
jb
sub
or
sbb
and
dec
popa
test
cmpsl
lock
mov
jbe
push
push
lods
lret
imul
lods
test
mov
push
les
cmpsl
test
cs
loop
and
xor
pop
or
test
push
movsb
push
fsubrl
mov
test
mov
mov
mov
mov
mov
movsb
inc
push
repz
push
testb
sahf
adc
add
outsb
xchg
aaa
or
mov
and
loop
outsl
sbb
pop
jp
mov
jecxz
sub
adc
inc
adc
and
xor
jmp
sub
shll
mov
leave
pop
shrb
loopne
inc
sub
cmp
icebp
mov
outsl
loop
dec
pop
dec
cmp
and
jg
decb
pop
dec
inc
cmpsb
inc
cwtl
pop
mov
mov
push
insb
mov
mov
fildll
ret
test
nop
and
and
lea
inc
xor
jne,pt
inc
test
popw
inc
jne
shrl
gs
cltd
xor
or
or
fmulp
and
pop
mov
int
lods
sub
lret
or
adc
test
pop
aam
loopne
xchg
imul
rolb
push
sub
clc
test
aam
fwait
add
scas
iret
icebp
pop
les
clc
imul
sti
adc
xchg
adc
arpl
adc
inc
mov
or
lcall
push
mov
das
or
adc
cmpsl
inc
int
ret
mov
xchg
out
mov
cltd
cmp
push
fcompl
fadd
mov
dec
rorl
test
push
bnd
cmp
mov
inc
push
dec
xchg
test
movsl
jo
inc
push
inc
adc
or
cmp
orps
inc
push
pop
sahf
mov
jle
add
hlt
mov
sbb
mov
insb
pop
cmp
xor
mov
mov
faddl
das
mov
popf
and
xor
push
aad
or
shl
loope
les
xor
and
mov
filds
adc
inc
mov
or
sub
xchg
inc
mov
in
xor
mov
decl
dec
xlat
test
push
inc
fadds
mov
jbe
or
stos
mov
jo
dec
sub
iret
pop
rorb
jp
mov
push
mov
idivl
jns
int3
push
sar
jne
repz
sub
mov
push
mov
dec
sti
and
sahf
cmp
leave
dec
and
movsl
mov
push
add
add
inc
movsl
cmp
or
fistps
push
dec
mov
cmp
sbb
xor
popa
mov
add
cwtl
leave
lock
mov
int
cltd
movsb
and
push
add
cmpsl
mov
jnp
cltd
es
neg
inc
stos
pop
add
mov
add
ret
in
insl
je
insl
loope
cmc
aam
lds
xor
dec
xchg
adc
sub
nop
fldenv
cli
hlt
cs
out
mov
ljmp
arpl
jg
inc
repz
test
mov
xchg
test
pop
daa
rcll
adc
ljmp
in
dec
mov
or
leave
add
rclb
enter
daa
out
push
jmp
popa
sub
inc
std
push
jae
mov
mov
sub
fcoms
int3
mov
xchg
fdivs
jnp
sbb
jo
xor
cli
mov
xchg
mov
daa
mov
mov
xor
and
jecxz
out
pop
jnp
push
jns
enter
push
into
mov
mov
mov
leave
lds
mov
icebp
sti
mov
mov
or
mov
push
or
jl
inc
xor
and
out
mov
mulb
sub
dec
dec
inc
sbb
inc
push
inc
inc
jno
in
movsb
push
adc
jmp
jo
shlb
pop
push
fisttpl
insb
dec
sbb
push
inc
test
in
ret
sub
mov
mov
jle
dec
aad
jnp
aad
xchg
push
push
inc
enter
or
pop
pop
std
adc
inc
faddl
dec
sbb
aad
pop
dec
push
bound
pop
lfs
rolb
ret
or
inc
pusha
fcomps
fldt
lea
loopne
sub
xchg
add
dec
add
pop
andl
sbb
add
decl
cmp
mov
inc
mov
inc
cmp
push
dec
mov
adcl
add
and
jecxz
sti
xchg
pop
in
xor
adc
sbb
xchg
lock
push
and
mov
loope
rclb
jo
dec
loope
sub
or
and
cltd
enter
or
js
xchg
pop
imul
cmp
jecxz
sti
pop
or
out
stc
mov
mov
dec
leave
out
push
mov
pusha
jp
add
inc
pop
rcr
add
pushf
dec
dec
adc
addb
adc
adc
ds
jno
or
add
xchg
subb
push
jo
popa
int
or
mov
sub
jbe
daa
pop
out
insb
scas
or
jno
rorl
cmpl
leave
negl
popa
sbb
popa
xor
sub
sub
ja
cltd
scas
sar
lret
adc
movsb
sbb
mov
mov
in
pushf
add
pop
scas
add
fimull
incl
or
outsl
mov
cmp
stos
ret
ret
inc
jo
cld
inc
ja
sbb
clc
sbbl
jp
cmp
cmp
popa
mov
or
andl
aad
mov
mov
leave
add
sub
push
jo
hlt
and
adc
xlat
jge
decb
or
cmp
mov
add
addr16
or
sbb
dec
jl
cltd
repnz
popa
push
xlat
lret
and
pop
stos
outsb
insl
movsb
mov
pop
cmp
jle
mov
into
ret
fnstcw
push
push
dec
dec
inc
cld
jge
fcmovu
push
mov
int3
gs
xor
dec
xchg
xor
daa
xchg
icebp
mov
out
hlt
aaa
test
lcall
scas
mov
mov
cmp
cmp
pop
orb
mov
cmp
cmp
aad
rol
nop
inc
les
mov
loop
and
mov
xchg
or
cwtl
cmpsb
icebp
xor
dec
arpl
adc
aas
adc
out
std
mov
cltd
dec
and
fldz
das
shll
mov
shrb
mov
push
add
xor
lahf
cmpsl
insl
lods
jo
cmpsb
or
movsb
fcmovne
inc
pop
sbb
pushf
testb
stc
pop
push
sbb
cmp
dec
into
inc
int
mov
iret
or
mov
fistps
push
les
addr16
jecxz
xor
xor
pop
pop
scas
popa
mov
insb
xlat
fldcw
xchg
sbb
pop
cmp
mov
dec
adc
mov
arpl
sub
xor
aas
mov
inc
add
jnp
in
std
pop
ret
popa
and
cltd
adc
push
xchg
push
cwtl
mov
xor
pop
fs
push
ficompl
cli
popf
dec
cmc
incl
xchg
sub
inc
jecxz
out
ss
jg
mov
loop
xor
add
mov
leave
mov
adc
mov
xchg
jp
rcrl
mov
movsl
loopne
dec
pop
cltd
mov
mov
adc
sub
int
outsb
mov
mov
movsl
rolb
jbe
sahf
mov
and
dec
pop
sub
nop
rcr
ja
ss
lea
inc
orb
adc
xchg
inc
jecxz
add
popa
leave
push
jp
outsl
sbbb
xchg
movsb
push
ret
mov
pusha
jg
inc
mov
sbb
adc
push
inc
in
push
pop
lcall
xchg
mov
jnp
xor
into
dec
add
lahf
cmp
repnz
cmpsl
fwait
inc
repz
mov
inc
xor
mov
jp
push
les
loop
jae
mov
xchg
movsl
icebp
loope
adc
push
and
sbb
sbb
pop
inc
test
cltd
xchg
hlt
jg
cmpsl
sub
pop
jmp
xchg
jg
inc
je
add
shlb
popa
lcall
push
orb
cltd
pop
push
adc
pop
xchg
das
ret
dec
adc
dec
mov
mov
hlt
mov
jg
inc
and
mov
fs
arpl
xchg
popf
loopne
pop
lock
insl
sub
mov
pusha
jg
xchg
sahf
lahf
adc
sbb
in
pop
push
out
js
inc
push
mov
push
icebp
jmp
sahf
pop
mov
xor
sbb
mov
cmpsb
das
ret
das
pop
adc
stos
pop
insb
inc
test
cltd
shlb
mov
mov
push
ror
xchg
add
andl
fs
cmp
movsb
adc
iret
pop
push
mov
mov
stos
mov
cmp
leave
in
ror
adc
sahf
sti
mov
movsb
cmp
cltd
faddp
leave
inc
adc
mov
mov
cmp
lret
hlt
or
rcl
rorl
insb
call
js
push
add
mov
imul
int3
stos
fprem1
mov
les
add
aas
cmp
cmp
movsb
and
or
pop
mov
inc
je
adc
dec
xchg
and
lods
xchg
jb
iret
ljmp
in
test
push
pop
movsb
or
js
push
push
and
enter
cld
and
dec
mov
ficomps
xchg
lret
dec
and
inc
in
movsb
lret
add
sarb
mov
lock
push
adc
jns
mov
pop
test
inc
cmp
or
sbb
stos
dec
xorb
adc
xchg
jmp
js
and
imul
cmp
dec
subl
popa
imul
lods
mov
push
dec
popf
leave
cmp
lret
xchg
movsl
xor
popa
push
std
in
pop
dec
mov
cmp
mov
in
fstp
and
push
js
xor
loopne
daa
cmpl
sub
fdivrl
and
jmp
pop
cmpsl
popa
and
into
cli
shrb
stos
repz
cmp
add
insb
or
jmp
xchg
sub
pop
xorl
sbb
or
sub
cmc
mov
sbb
dec
call
pop
in
iret
aas
int
fisubs
mov
data16
cwtl
outsb
mov
sub
lahf
cmp
mov
pop
mov
nop
jg
popf
sarl
dec
cld
jp
jecxz
fimull
dec
mov
xor
std
test
out
lea
mov
pop
dec
jl
aas
and
sub
cmp
sbb
clc
xchg
push
xor
push
loopne
test
clc
sbb
shlb
icebp
lret
into
sub
mov
add
jo
lock
inc
xlat
stos
mov
mov
push
cmp
xchg
fnstsw
add
add
jge
sub
dec
jmp
out
xchg
js
lret
shll
add
hlt
jp
mov
cwtl
jmp
adcl
xchg
repz
movsb
inc
xchg
dec
fwait
ljmp
das
inc
lret
dec
add
mov
lods
sahf
insb
jl
fstps
outsb
or
pop
aas
push
in
inc
mov
dec
inc
rep
in
pop
cmp
jnp
sti
sub
xor
icebp
push
jnp
push
es
adc
fistps
or
lahf
data16
lods
cmp
xchg
outsb
mov
xchg
mov
mov
mov
ret
mov
jmp
pop
lds
add
xchg
les
add
lock
das
shrl
sub
dec
inc
pop
push
fdivrl
aam
mov
lods
mov
js
insb
je
lcall
push
cmc
xchg
out
sub
sahf
sub
in
pop
je
popa
fwait
scas
int3
jae
inc
into
imul
in
out
jge
cmp
xor
mov
dec
adc
xchg
jecxz
adc
ds
cmp
dec
mov
movsb
mov
mov
out
push
jno
push
test
dec
imul
or
mov
test
cmp
addl
in
sbb
push
mov
jmp
sub
mov
in
out
sub
mov
add
xor
or
ds
dec
mov
mov
and
leave
jmp
xor
nop
testb
mov
es
movsb
push
ret
sub
es
mov
mov
out
sbb
cmp
push
xor
cmp
pop
adc
add
jns
notb
rcl
lock
ror
pop
ds
clc
mov
sub
stc
or
or
clc
sbb
popa
inc
lods
cmp
notl
inc
or
adc
mov
jbe
jnp
mov
aas
add
push
jbe
dec
xlat
mov
shll
aas
and
jb
pop
xor
dec
popf
pop
xorb
adc
out
cmpsb
icebp
dec
lahf
mov
js
jae
pusha
sbb
js
mov
or
iret
mov
push
pop
in
nop
fcmovbe
cmp
rorb
jnp
push
pop
in
fdivs
and
es
xchg
jno
mov
sbb
int
aad
scas
ret
adc
cltd
mov
leave
dec
in
add
enter
mov
and
daa
xchg
jg
sub
std
in
rcrl
pop
mov
call
adc
mov
sbb
xchg
ljmp
mov
shl
cmp
sarl
loope
and
jb
xor
inc
mov
stos
std
pop
out
mov
movsb
xor
push
mov
inc
js
loopne
xlat
cmpb
jmp
js
inc
sti
inc
ljmp
dec
cli
int
mov
shrb
das
push
sub
fstps
lock
push
add
pop
in
shl
popl
call
push
cwtl
cmp
daa
inc
stos
sub
test
in
sub
int
dec
mov
mov
cmp
lret
mov
add
cwtl
mov
cmp
dec
outsl
test
sub
faddl
sarl
es
dec
cmp
aas
pop
lods
dec
jno
aas
andl
sub
xchg
out
imul
or
inc
mov
pop
repnz
sub
xchg
dec
push
imul
pop
rcll
scas
sub
sbb
aam
cmp
rcrb
sbb
push
divb
cmp
jns
jb
xor
xchg
arpl
and
lea
aam
and
test
lret
in
inc
test
lret
leave
in
insl
xchg
mov
cld
mov
pop
cmp
cltd
aad
out
and
push
mov
push
sarl
es
cmp
ja
lds
aad
lret
adc
imul
js,pt
das
enter
loopne
fcoms
lret
mov
xor
dec
inc
pop
mov
jno
mov
push
xchg
adc
sbbl
dec
shr
insb
imul
inc
ds
fwait
push
sub
into
xchg
les
xchg
sti
or
sti
rcr
mov
cmp
loopne
push
dec
fisttpl
lock
inc
pop
xor
rorl
mov
cmp
stos
repz
sarb
adc
mov
in
cmp
dec
pop
mov
sti
push
aas
nop
xor
mov
or
ds
mov
loope
sbb
cmpsl
enter
stos
outsb
fmulp
dec
jle
loope
inc
dec
fcmovu
in
sub
mov
dec
fbld
sbb
xchg
jns
pop
stos
add
fiadds
jae
lret
mov
cmp
mov
jle
jae
bound
into
je
jl
push
push
xor
sbb
and
xor
pusha
xor
add
xchg
dec
push
test
lret
mov
sbb
and
adc
jno
jo
insl
jge
aas
fs
mov
jle
test
inc
push
stos
out
xor
loope
notb
in
into
sub
xchg
fabs
sahf
dec
stos
ss
adc
roll
xor
inc
aas
sbb
xlat
push
jbe
ret
popf
add
das
pop
inc
jbe
daa
sub
inc
arpl
leave
test
mov
int3
std
jmp
push
dec
lret
outsl
sahf
aad
mov
sub
jl
mov
test
add
std
lock
xor
sub
sub
or
movq
enter
incl
dec
fdivr
stos
fdivr
add
add
cmp
pop
mov
dec
ljmp
inc
xor
sti
imul
pop
rcl
mov
hlt
inc
cmp
xchg
inc
dec
jecxz
dec
jl
fnstenv
dec
cmpsl
lods
push
jns
fcmovu
jmp
cmpsl
pop
lahf
xor
jne
insb
loope
jmp
pushf
decb
and
stos
cmpsb
je
cmp
repz
fidivl
sbbb
mov
push
dec
fadd
loop
sti
mov
pop
or
sub
repz
add
ret
lret
lea
lcall
arpl
mov
adc
enter
fsub
ljmp
orb
aad
jae
fildl
push
fstpl
mov
rclb
xchg
pop
push
movsb
jg
adc
mov
loopne
pop
sahf
fsubr
in
jecxz
in
mov
lret
shl
fs
jns
pop
ja
jbe
jl
inc
cmp
push
jle
sarb
and
cmc
pop
jns
aam
pop
pop
and
push
fs
in
cmp
mov
lcall
iret
ss
or
js
push
and
ret
and
mov
and
mov
out
sbb
popa
jae
fs
aas
sub
mov
js
lahf
add
repnz
cmpsb
pop
xor
decl
stos
popa
lret
push
adc
jns
stos
adc
sarb
adc
loope
jp
fists
cmp
enter
out
mov
pop
or
test
cltd
push
pop
dec
xchg
xchg
movsb
xor
adc
jecxz
jb
cmp
sarl
jnp
ja
push
dec
sub
ret
mov
mov
or
fcomps
jo
nop
rorb
pop
cld
imul
adc
popa
mov
test
push
pop
std
xchg
jnp
lock
lahf
inc
adc
sarl
pop
add
aas
jns
sahf
add
inc
stos
out
popf
mov
aas
enter
xchg
pmullw
popa
push
fidivrl
mov
jge
mov
mov
add
add
movsb
jg
clc
inc
mov
addr16
sahf
addr16
mull
inc
dec
mov
mov
pushf
lcall
cmp
mov
push
push
cmpsl
xchg
outsb
mov
stc
fdiv
inc
sbb
inc
sbb
sub
out
in
and
enter
out
add
xchg
adc
inc
push
pop
addr16
std
idivb
cmp
jle
mov
in
xchg
iret
cld
inc
mov
add
hlt
inc
sub
mov
fstl
dec
xor
pop
ss
mov
imul
bound
sbb
stos
xchg
dec
dec
stc
xor
loop
mov
xchg
xchg
mov
pusha
xor
popf
xchg
mov
jb
cwtl
push
inc
stc
jmp
nop
insl
cmp
and
push
or
rorl
cmp
sub
into
mov
loope
dec
mov
scas
je
or
and
addr16
mov
xor
je
in
cltd
mov
nop
mov
mov
mov
add
push
stos
or
mov
rcr
sbb
lahf
jge
cmp
cmp
push
cmpsb
dec
popa
jae
stos
push
mov
mov
xchg
adc
or
sbb
out
stos
add
dec
nop
shrl
push
pop
arpl
xchg
and
std
xchg
sbb
fs
das
aam
mov
adc
pop
cs
lods
gs
fcmovb
adc
or
ljmp
std
cmpsl
xor
xchg
sti
sub
cmp
mov
insl
mov
jno
pop
inc
imul
xchg
inc
pop
cwtl
pop
mov
test
out
and
mov
imul
pop
in
mov
push
push
jae
movsb
dec
cmp
sub
loop,pn
xchg
jae,pn
outsb
mov
xor
fiadds
inc
add
lods
push
ds
inc
repz
test
push
rolb
jno
xchg
lea
xchg
stos
mov
imul
or
or
xor
mov
ret
jp
das
push
rcr
mov
jo
mov
daa
mov
mov
stc
xor
mov
fucom
loop
dec
ja
sbb
xchg
sub
shl
movsl
dec
in
fisttpll
scas
xchg
sbb
sti
add
pop
xchg
ss
cmp
out
jge
inc
add
mov
adc
sti
in
jb
clc
mov
pop
sahf
pop
mov
sub
imul
test
pop
or
pop
dec
cld
movsb
sub
pop
sahf
aam
pop
mov
jge
jge
mov
cmp
mov
ret
xchg
cli
cmp
jne
sbb
mov
std
mov
pop
shlb
sub
mov
test
in
in
mov
sbb
lahf
dec
popf
cmp
dec
imul
and
xor
ljmp
xor
int
repnz
in
cli
and
xlat
rorl
stc
imul
stos
pop
push
mov
ret
cmpb
pop
test
aam
cmp
sub
ja
mov
mov
mov
xor
fbld
test
inc
sub
ret
pusha
pop
js
aad
pop
adc
jle
push
dec
frstor
lods
xchg
bound
lds
and
test
cmp
push
sbb
mov
pusha
pop
and
sbb
lahf
notb
dec
dec
cmp
sbb
mov
mov
cmpsl
adc
in
push
enter
or
and
shl
dec
cmp
fcmovbe
imul
jno
mov
jnp
aad
xchg
out
sub
stos
pop
mov
add
pop
push
imul
rcrl
adc
adc
aas
pop
mov
or
clc
pop
scas
mov
cli
jb
gs
mov
movsb
sub
test
xchg
mov
sub
adc
inc
add
push
xchg
aam
js
lret
sbb
outsl
orl
add
popa
inc
aaa
adc
aas
repz
loope
add
jp
dec
les
out
jl
jns
enter
cmpl
jno
fisubl
mov
inc
inc
icebp
pushf
loop
leave
shll
pushf
pop
adc
inc
and
fwait
sbb
arpl
sahf
dec
in
addr16
jne
jg
int
pop
bound
nop
inc
push
and
in
mov
inc
ja
xor
in
sbb
mov
pop
lcall
leave
fisubrl
pop
mov
stc
inc
inc
add
sub
test
pusha
dec
push
add
jl
imul
sti
add
repz
ljmp
or
push
ficompl
jecxz
and
xchg
push
loope
decl
and
xor
fnstsw
xor
imul
imulb
movsb
clc
sub
and
jl
jno
fidivrl
and
lcallw
push
mov
ja
xlat
cmp
dec
sarl
mov
push
ljmp
cli
sarb
int
adc
pop
dec
adc
int
cmp
or
out
iret
or
push
les
je
sub
mov
or
jge
pop
ss
pushf
cltd
push
insl
cmp
scas
cmp
dec
in
lcall
pop
cld
nop
cmc
xchg
inc
pushf
add
mov
ficoms
dec
push
and
in
enter
jbe
add
push
cltd
sbb
and
push
lods
arpl
orl
cmp
and
cmp
and
pop
cmp
xchg
adc
jb
and
jnp
sub
cmp
add
xchg
sub
stos
xor
push
xchg
cmove
pop
lods
cld
out
cmp
cmp
mov
push
ss
pop
jle
or
or
inc
fistpll
sahf
in
jb
mov
in
icebp
mov
shll
iret
sbb
js
sub
sub
mov
sbb
insl
add
cmp
dec
dec
and
cmp
cmpsb
icebp
loopne
xor
aas
imul
aaa
cmp
in
test
pop
pop
js
inc
icebp
adc
sub
inc
cs
and
sub
sub
pop
jmp
cmp
imul
jge
fiaddl
xchg
lea
cmp
jb
push
cmp
dec
cmp
les
pushf
jp
pop
inc
xor
dec
aam
js
ficompl
adc
orb
outsl
movsl
je
insb
jg
or
mov
sbb
mov
cmp
fstps
dec
les
push
xor
or
lret
test
sbb
jl
xchg
bound
xchg
adc
dec
into
jo
cs
nop
test
mov
dec
mov
xchg
push
sahf
loopne
int3
adc
test
ja
sub
hlt
dec
push
orb
gs
fisubs
lret
in
mov
push
adc
shrl
test
idivb
imul
lcall
push
mov
jb
mov
push
push
repnz
test
mov
inc
std
insb
mov
mov
cld
pop
das
push
cwtl
jmp
icebp
inc
cmp
xor
aad
call
add
iret
cwtl
cmp
into
inc
addr16
aad
pop
gs
scas
call
loop
push
push
in
push
jo
imul
xchg
sbb
pop
in
mov
sub
add
fcoml
ss
sbb
pop
mov
test
jae
bound
add
call
arpl
leave
or
push
mov
insl
imul
fstpl
jp
mov
ja
imull
loop
mov
fdiv
hlt
or
pop
mov
mov
popa
sub
push
leave
scas
mov
jae
sahf
std
data16
mov
fwait
push
stc
popf
mov
sub
add
sub
enter
stc
mov
cmp
addr16
cmc
lret
das
stc
dec
jo
clc
icebp
ljmp
stc
ljmp
inc
sbb
push
imul
and
mov
add
add
repnz
iret
push
enter
xor
in
mov
or
jns
cmp
or
loop
sbbl
ja
icebp
and
mov
aam
xor
loop
adc
int3
fists
inc
cmp
bound
adc
orb
xor
and
cmpb
leave
cs
pop
bswap
sub
nop
rorl
mov
scas
mov
mov
nop
mov
fs
xor
add
insb
add
add
adc
push
icebp
mov
xchg
dec
les
sbb
or
inc
in
pop
or
es
shld
mov
inc
dec
insb
pop
mov
lcall
xchg
bound
add
mov
jle
in
and
dec
add
test
movsb
mov
lahf
push
sti
enter
or
mov
push
xchg
dec
add
bound
cld
insl
mov
out
ja
xor
mov
pop
and
mov
push
adc
pop
test
xchg
pop
ret
hlt
inc
js
push
or
or
lods
repnz
or
xchg
jb
into
sub
dec
cmp
js
hlt
lret
xchg
out
dec
mov
inc
sahf
mov
push
cld
stc
pop
or
jns
xchg
neg
lock
fwait
push
iret
addr16
push
cmp
ljmp
inc
je
jno
stc
mov
sbb
lock
or
and
lcall
inc
cmp
shrl
mov
flds
lods
or
dec
mov
jnp
mov
sbb
lret
and
or
pop
ret
mov
pusha
or
cmc
jne
jo
cltd
or
push
push
icebp
xor
cmp
pushf
or
jns
neg
sar
jnp
jnp
out
pop
jge
jge
movntps
inc
cli
sub
mov
leave
jp
popa
cs
loopne
push
cwtl
ljmpw
out
sbb
inc
cmp
fstpl
mov
loopne
xor
test
push
jl
mov
lret
stos
pop
jp
xchg
inc
add
cwtl
pop
repnz
mov
leave
lahf
movsl
pop
leave
sbb
aas
pop
cwtl
sub
aam
cs
mov
loopne
test
xlat
int3
or
das
aad
sti
sub
in
popa
cmp
jecxz
push
shlb
jns
loop
and
xchg
das
sbb
mov
sar
iret
pop
jle
mov
xchg
sbb
xchg
xlat
jg
mov
fld
sub
mov
pop
mov
jle
aaa
imulb
movsb
mov
inc
popf
fldl
lret
jno
add
add
dec
in
and
enter
nop
mov
jmp
sbb
jl
mov
xchg
popa
jbe
incl
std
pop
aas
lods
inc
xor
mov
and
cli
pcmpgtw
add
xchg
fstps
jbe
mov
mov
and
push
aaa
lret
mov
and
dec
addr16
hlt
ja
loopne
rcrl
sub
icebp
lds
xchg
cmp
int3
add
push
or
ds
cmc
pop
pusha
bound
call
into
adc
pop
loopne
std
repz
jge
pushf
push
push
lretw
cmp
and
icebp
push
cmc
icebp
mov
test
popf
inc
ljmp
cmp
flds
nop
cs
stos
pop
pop
ljmp
std
imul
les
ret
popf
scas
adc
insb
mov
dec
iret
mov
cmp
inc
xchg
in
scas
in
js
inc
adc
dec
lods
push
add
imul
sbb
int
ljmp
push
and
dec
addb
sub
pop
pop
outsl
pop
rcrl
stc
cmc
incl
out
mov
dec
sarb
sub
rcl
push
fs
cmp
and
jg
ret
sub
insb
mov
mov
push
mov
out
dec
jb
dec
or
push
and
or
push
inc
lods
cli
aaa
cmp
mov
leave
stos
mov
adc
es
sub
int
adc
ffree
mov
and
mov
add
popf
lret
inc
les
mov
xor
sub
mov
int3
mov
test
leave
fldenv
lret
push
pop
xor
iret
sub
aam
or
or
add
mov
xchg
cmp
mov
outsl
dec
sti
push
loope
or
call
ljmp
loopne
sar
or
andl
mov
lods
and
push
mov
push
or
adc
sub
leave
ds
popa
adc
push
cld
jl
fwait
cs
mov
cmp
sub
add
push
je
mov
jecxz
mov
pop
or
jns
mov
jmp
test
and
pop
and
add
dec
adc
dec
pop
sarb
mov
mov
jb
adc
pusha
aam
jae
movsb
test
je
push
sar
aad
xchg
add
ret
int
insl
jp
in
inc
cli
push
and
inc
and
sbb
loope
fs
pop
push
or
cltd
stos
xlat
neg
mov
popf
xor
inc
mov
popa
outsb
call
daa
lods
xorb
imul
ficoml
pushf
ret
sub
sbb
jecxz
mov
outsl
xor
shlb
or
or
cmpsb
imul
jb
cltd
jae
xor
mul
inc
and
xchg
ficoms
add
add
jl
ret
add
cld
arpl
inc
mov
rclb
add
sub
std
add
out
or
cmp
mov
in
lock
xchg
stc
jbe
nop
fwait
jle
add
or
xor
and
outsl
xchg
or
enter
mov
test
adc
jmp
push
sub
push
xor
push
or
inc
mov
xchg
sbbb
test
pop
xchg
sub
jge
push
les
rcrb
std
dec
adc
std
cmpl
repz
insb
fwait
xlat
leave
mov
xchg
pusha
popa
jns
iret
sub
shll
dec
sarb
xchg
cmp
sti
or
dec
stos
xchg
sub
sub
lods
xor
xor
push
icebp
pop
ret
lock
xchg
outsb
xchg
add
mov
shlb
std
aam
xchg
add
sbb
cld
jle
mov
mov
arpl
push
or
cmp
sub
jl
lcall
pop
fcoms
dec
orb
loope
lret
cs
push
add
out
mov
imul
sbbl
rclb
push
out
insl
sbb
inc
pop
sub
loop
pop
shll
dec
outsb
bound
popa
pop
and
ficoms
bnd
jle
or
aas
ds
mov
bound
stc
test
scas
hlt
out
test
or
clc
push
dec
inc
inc
mov
bound
repnz
dec
pop
nop
jg
cmpl
push
inc
dec
mov
mov
dec
xchg
les
xor
xchg
xchg
pop
cmp
add
sbb
sbb
sti
inc
sahf
inc
jne
dec
dec
sub
mov
push
dec
sub
ret
loope
neg
mov
inc
in
inc
rcrl
mov
mov
ds
cmpl
mov
pop
push
in
loopne
into
ret
dec
xor
xor
mov
cli
mov
mov
dec
rcrb
into
mov
shrl
and
and
cwtl
cmp
pop
iret
cmc
lahf
clc
fmull
dec
mov
incb
xchg
pop
test
fdivrl
sbb
sbb
push
jg
xchg
dec
ja
leave
dec
lcall
test
lcall
shl
pop
out
sub
jp
inc
iret
add
outsl
inc
sbb
aaa
shl
jge
js
test
dec
std
push
mov
call
xor
mov
fstpl
jno
scas
ss
mov
and
iret
add
push
xor
jnp
leave
inc
test
fwait
and
lods
das
dec
pop
push
inc
pop
fsubrl
inc
dec
clc
push
cmpsb
dec
mov
into
out
dec
ret
hlt
sahf
lahf
jecxz
and
mov
mov
sahf
arpl
inc
popf
ret
dec
fucomi
push
or
stos
mov
mov
cmpsb
aaa
mov
add
xchg
jp
push
cmp
dec
stc
fiaddl
es
inc
sub
insb
repnz
mov
cmp
cmpsb
mov
sub
aas
test
pop
call
jno
mov
dec
das
nop
mov
popa
add
int3
push
inc
pop
inc
inc
or
xchg
data16
cmp
aas
fldt
jg
mov
sub
pop
or
pop
sub
shr
xor
pop
jnp
mov
cltd
sbb
pop
inc
jmp
adc
or
dec
mov
jae
cli
jge
pop
ret
loope
mov
and
imul
or
loop
mov
mov
shl
dec
out
push
xchg
stc
sbb
mov
mov
fisubs
out
mov
andl
fidivs
jbe
pusha
das
stos
mov
push
push
inc
add
lret
add
push
out
sub
inc
push
inc
xchg
enter
and
dec
fdivrl
test
mov
cmpsb
xor
xor
addr16
or
nop
pop
push
mov
std
pusha
into
shrb
into
jae
sub
or
movsl
xor
sbb
roll
mov
loop
cli
inc
outsb
shl
ss
stos
push
adcb
cmp
mov
jmp
push
nop
jns
mov
pushf
imul
loop
repnz
adc
inc
insl
lcall
fwait
popa
lods
jle
adc
aas
scas
aaa
fs
mov
and
rclb
in
pushf
dec
in
mov
jnp
dec
adc
push
sahf
xlat
int
filds
xchg
call
mov
mov
mov
add
insb
subl
xor
roll
xlat
fsubs
inc
dec
insb
mov
or
or
mov
out
pusha
or
pop
xchg
xchg
leave
cmp
xchg
insb
shrb
int
cmpsl
xlat
test
aam
lods
and
mov
call
test
jno
dec
scas
add
jg
pop
pop
add
dec
call
push
xchg
push
sbb
aam
sub
pop
and
test
aas
mov
mov
scas
add
pushl
pop
fcoms
scas
mov
mov
inc
jmp
ret
push
push
lret
jg
sahf
sub
cmc
xchg
adc
jecxz
std
cmc
push
jnp
nop
dec
mov
jne
sbb
inc
das
mov
test
popa
mov
mov
ss
fdivl
jns
push
mov
cld
xor
push
jae
ja
fwait
jp
pop
adc
xor
loop
sbb
mov
xor
arpl
mov
inc
sub
push
or
in
aas
loop
bound
jo
loopne
int3
mov
cmpb
cmp
test
xor
pusha
mov
and
cmp
inc
sbb
into
dec
mov
mov
ss
xchg
cli
pop
pop
sbb
dec
xchg
call
xchg
sti
sbb
aam
cmp
adc
lret
pop
add
pop
pop
jg
rcrb
dec
faddl
mov
push
xchg
lock
test
xor
ret
les
sahf
sub
cmp
shll
lcall
or
push
mov
ret
fmuls
dec
divl
daa
shll
mov
pop
lods
push
mov
out
clc
sub
xchg
sbb
sub
adc
adc
push
int3
dec
pop
cmp
push
movsl
push
outsl
inc
sub
mov
fucomi
dec
xchg
rol
add
push
mov
mov
js
and
inc
nop
jns
mov
les
xchg
xchg
fsubr
pop
jge
inc
sbb
xor
mov
popa
pop
add
mov
push
add
push
pushf
mov
cmc
inc
popa
lods
mov
xor
mov
xor
pushf
xor
cwtl
enter
sbb
sub
in
jle
push
cmp
mov
adc
mov
push
add
dec
outsb
call
pushf
jo
xlat
icebp
jno
flds
xchg
mov
push
xchg
repnz
push
ja
stc
cmpsl
jle
fistpl
sbbb
sub
enter
movl
loop
fs
mov
push
add
dec
dec
pushl
icebp
push
push
mov
rep
jae
idiv
jne
notl
pushf
fldenv
enter
sbb
aam
cmp
adc
loope
fs
mov
dec
push
add
xchg
dec
call
icebp
xor
inc
popa
push
mov
std
push
repnz
push
mov
pushf
mov
push
leave
xchg
pop
mov
adc
nop
cli
insb
mov
je
xchg
pop
jmp
aaa
push
inc
lds
jge
cmp
jne
stos
sbb
icebp
je
and
test
adc
xor
sub
mov
inc
xor
cld
cmp
pop
pop
icebp
int
fbstp
test
jl
or
cld
push
pusha
push
lret
stos
fs
mov
xchg
jno
push
int
xor
inc
pop
testb
pop
xchg
les
inc
mov
pushl
jg
add
pop
pop
fs
xchg
outsl
movsb
mov
int
sbb
dec
pop
mov
pop
movsl
data16
or
pushf
dec
pop
lcall
mov
lret
jne
jae
and
outsb
mov
pusha
cld
rorb
int3
scas
xor
nop
in
adc
add
inc
mov
imul
or
jp
adc
fwait
pusha
mov
push
aas
sub
popa
mov
jbe
rolb
mov
fisubrl
mov
sarb
sub
xor
cmc
das
xchg
idivl
sbb
lods
rolb
rcrl
xchg
and
dec
cmp
andl
dec
jne
decb
ss
mov
cs
jg
mov
push
scas
fisttpll
aas
dec
les
fadds
push
out
xchg
push
sbb
cmpsb
stc
sub
aad
xchg
andl
or
lds
xchg
add
icebp
repnz
mov
jmp
ret
decb
daa
fwait
js
popf
sub
sub
lds
jno
cs
shll
xchg
sub
test
popa
jnp
sbb
divl
push
dec
push
int
pop
sbb
xlat
cmp
js
scas
test
rorb
or
cmp
adc
or
lcall
int3
stc
test
pop
jns
push
ror
and
mov
sbb
fstl
or
adc
add
addr16
cmpsl
inc
push
add
push
add
loop
shrl
jp
sti
test
sahf
dec
lahf
xor
xchg
cs
shl
in
mov
mov
aad
mov
mov
sbb
mov
add
jecxz
rolb
cltd
pop
test
adc
aad
mov
adc
cmc
pushf
rorb
adc
mov
cmp
xor
xchg
les
enter
jmp
mov
add
mov
inc
push
pop
imul
dec
jne
adc
push
or
js
stc
movsl
and
cmp
mov
mov
sub
jns
dec
mov
xchg
jb
jo
imul
jmp
dec
ret
pop
fidivl
lret
add
lret
cld
add
imul
pop
push
mov
sub
add
or
scas
mov
fldenv
cltd
lods
cmpsl
mov
nop
xchg
and
dec
pushf
mull
pop
pop
and
fwait
inc
inc
adc
rolb
or
sbb
bnd
pmaddwd
fwait
cltd
add
stos
aam
inc
pop
add
xchg
push
aas
xchg
mov
inc
aam
sub
xor
addr16
aam
sahf
jle
sub
lods
mov
cmp
test
ret
stos
mov
cli
xor
mov
lds
add
mov
pop
cmp
mov
push
push
rcrl
inc
mov
pop
out
add
sbb
imul
cli
test
leave
pushf
pop
pop
cmp
inc
cltd
mov
addl
add
adc
fnstcw
insl
clc
aaa
adc
fnstsw
jl
cmp
xchg
leave
sbb
pusha
clc
bound
fldt
repz
hlt
lock
push
scas
push
dec
insl
call
mov
push
push
and
fsubs
sahf
or
mov
jns
lahf
pop
aaa
fldenv
ret
mov
jge
sbb
mov
sub
out
sub
mov
cmc
rorb
mov
jo
lcall
iret
loope
sub
xchg
in
inc
fisubs
pop
and
das
pop
idiv
push
mov
stc
jmp
aad
lock
jo
mov
sub
jmp
bound
dec
dec
add
outsl
imul
das
pop
lcall
or
popa
gs
xchg
hlt
shll
push
jnp
jmp
mov
rcrb
add
stos
ja
dec
sbb
jo
jbe
nop
inc
ret
hlt
mov
xchg
cwtl
inc
xor
les
add
sub
aam
mov
add
stos
xchg
pop
loopne
bnd
pop
pushf
xchg
jo
pop
adc
cmp
or
test
lcall
cltd
push
cmp
dec
les
adc
pop
push
es
or
test
cmpsb
stos
inc
iret
sub
pop
sub
or
sub
cmp
in
mov
shl
mov
pusha
ja,pt
mov
jg
pop
repnz
inc
in
xchg
test
js
jp
test
jo
push
and
lock
cmpsl
dec
cmp
push
cmp
cmp
adc
push
testl
ja
sub
push
mov
jnp
bnd
lds
mov
jne
cld
pop
fsubr
notb
ds
xor
mov
or
push
sub
jbe
cs
pop
xor
push
fnstcw
mov
test
mov
or
popa
dec
inc
jb
stc
jmp
push
inc
mov
cmp
cli
xchg
mov
sbb
decl
rsm
mov
mov
popf
push
ret
mov
sbb
inc
lds
inc
jg
jae
cwtl
jne
adc
aaa
test
cmpb
insb
bound
mov
sbb
mov
mov
dec
mov
or
sub
mov
pop
dec
imul
mov
test
fcmovu
jge
lahf
cld
ljmp
push
sti
mov
push
cld
jge
sub
jl
jp
int
sarl
mov
or
pop
pop
repnz
stos
mov
xchg
outsl
incb
mov
mov
jg
std
cmp
mov
pop
or
jp
ret
cmpsl
cmp
mov
push
sahf
adcb
stos
mov
rcrb
mov
add
jae
data16
push
mov
mov
lahf
scas
sub
shll
adc
pushf
add
insl
movsl
add
stos
jge
or
ret
sub
xchg
mov
sbb
inc
fwait
jne
jle
jle
jns
int
xor
enter
fsub
mov
rorl
mov
cwtl
addr16
testb
adc
aad
paddsw
loope
sub
mov
outsb
adc
aas
cmc
insb
pop
xchg
cld
bound
sub
add
jb
aaa
jge
dec
mov
mov
adc
mov
shrl
or
mov
cmp
mov
pushf
roll
pop
daa
inc
xchg
cmp
cmp
mov
rcrl
mov
jmp
add
cmpsl
enter
pushf
das
pop
cmp
jne
dec
lret
hlt
inc
cmp
cmc
cli
fstpl
dec
stc
dec
mov
xchg
mov
mov
inc
push
inc
cli
sbb
fcomi
shll
std
mov
in
pop
cwtl
mov
or
add
and
lods
pop
sub
stos
dec
enter
je
jne
cmp
adc
cmp
jb
add
movsl
cmc
and
sub
int3
push
jmp
inc
cltd
inc
cli
scas
dec
mov
std
xchg
fs
in
mov
fdivrp
shrl
or
stos
mov
xor
pop
lret
and
into
sub
in
mov
sub
arpl
mov
inc
orb
mov
mov
fs
mov
pop
addr16
mov
aam
movsb
pushf
lods
addb
fnstenv
fcomp
ss
repz
sbb
adc
add
mov
fldt
sbb
into
lret
bound
addr16
popa
outsb
jle
fwait
cmp
mov
or
mov
cmp
jl
push
adc
enter
pop
sar
stc
xchg
std
repnz
loope
ja
mov
sti
or
add
inc
mov
xchg
xchg
or
adc
leave
mov
cltd
mov
lret
xorl
bound
or
jae
mov
cmc
lret
mov
std
sbb
gs
inc
test
mov
imul
inc
outsl
push
outsl
mov
jecxz
out
xchg
push
test
or
xchg
mov
push
mov
push
pop
es
mov
dec
mov
decl
in
dec
les
lret
test
pop
add
mov
push
and
aas
sar
loopne
cwtl
xchg
dec
fidivl
mov
mov
fisttpll
mov
jmp
jge
fidivl
arpl
repnz
idivb
ss
pop
xchg
cmp
dec
and
mov
sbb
mov
jnp
loope
cld
pushf
pop
add
lret
adc
sub
outsl
lea
nop
invd
mov
inc
pmuludq
imul
jp
packssdw
lods
push
add
ss
mov
insb
and
add
repnz
shll
mov
push
or
xchg
roll
xchg
jle
nop
imul
lea
xchg
cmp
mov
imul
and
pusha
inc
mov
in
xchg
or
inc
cs
jb
cmp
inc
pop
pop
andl
push
out
movsb
daa
dec
pop
lds
fldenv
jle
clc
pop
cmp
or
lds
rcrb
pusha
gs
test
cwtl
dec
mov
push
sbb
repz
xor
outsb
dec
incb
subl
jecxz
cs
pop
sahf
or
add
pusha
hlt
out
sti
fcmovu
xor
jns
bound
cmp
mov
pop
mov
sarl
dec
rorl
repz
pop
fiadds
daa
out
stos
mov
add
add
stc
frstor
inc
enter
cmp
jg
add
in
sub
pushf
rcrb
or
in
out
pop
sub
xchg
xlat
iret
testl
daa
popf
or
pop
pushf
subb
mov
or
and
bound
fldl
jne
sub
cmc
push
dec
xchg
loop
aaa
in
inc
inc
mov
sti
jge
mov
xor
ffreep
in
and
sbb
push
stos
fdivs
shrb
leave
mov
xor
jno
mov
pop
into
aad
xor
lret
bound
and
sti
sbb
inc
cmpsb
cmpl
mov
es
and
data16
adc
adc
pop
sbb
jge
pop
mov
mov
mov
jbe
cs
insb
inc
jo
les
pop
loop
fisttpl
push
mov
stos
or
shll
in
or
xchg
and
out
inc
inc
jg
into
mov
add
jge
fwait
in
push
ss
scas
xchg
das
inc
testb
lods
icebp
mov
xor
std
scas
insb
fildll
std
ljmp
cmp
inc
add
mov
dec
xor
sarb
inc
mov
ljmp
add
sbb
dec
push
icebp
dec
xor
mov
mov
je
lcall
in
pop
aad
add
imul
dec
mov
inc
mov
adc
fs
aam
dec
fs
test
jns
jmp
lahf
jecxz
ficoml
jbe
mov
call
es
jmp
add
rcrl
and
jp
mov
fiaddl
test
or
sbb
pop
loop
test
jge
push
aaa
sub
insb
inc
rorb
jp
sub
inc
ja
test
cmpsl
cmc
xchg
push
jmp
sahf
cmp
add
mov
xchg
sahf
dec
jg
mov
push
adc
cmpsb
mov
je
mov
mov
mov
xchg
clc
dec
pop
jecxz
add
xor
add
push
je
shlb
lret
mov
mov
or
movsb
insb
inc
mov
mov
lods
call
out
mov
leave
add
xchg
mov
pop
mov
mov
sub
adc
and
add
fiadds
pop
std
inc
je
fcomps
dec
and
inc
arpl
mov
ret
mov
mov
jp
dec
fcmovnb
add
in
pop
adc
testb
cli
cwtl
mov
cli
dec
insb
or
cmp
stos
adcl
pop
inc
jns
fistps
xchg
cmpsl
pop
mov
les
je
or
cmp
xlat
sub
mov
jb
cmp
mov
mov
xchg
sub
or
dec
inc
cmpsl
ret
sub
xchg
loop
xor
or
fs
xchg
mov
add
lret
andl
dec
jne
cmp
pop
push
xchg
jne
inc
mov
cmp
adc
les
dec
dec
dec
fldenv
jne
and
push
cmpl
sar
push
repnz
dec
mov
imul
test
jnp
stos
xchg
rcrb
in
dec
arpl
add
mov
cmp
aaa
rcr
adc
dec
scas
ret
outsb
loop
shlb
cmp
or
arpl
das
lret
jb
roll
das
xlat
ljmp
fwait
pop
loopne
sub
jno
gs
ret
pop
stc
int
push
sbb
push
add
call
mov
pop
fdivrl
nop
fs
dec
xor
mov
movsl
mov
jmp
xchg
push
das
jl
mov
fdivs
in
mov
clc
xor
pop
inc
je
loope
movsb
jb
and
fidivrs
leavew
pmulhuw
lock
push
pop
cmp
xchg
pushf
popf
int3
sub
push
cmp
sub
mov
subl
cmc
and
stc
pop
xchg
sbb
add
loop
shrb
int3
stc
cmpsb
jnp
mov
pop
loope
mov
dec
sub
adc
pushf
pop
lret
fldenv
xor
xor
stos
mov
sub
mov
shlb
popf
out
and
outsb
xchg
test
das
xor
imul
fwait
js
mov
inc
aas
push
stc
imul
mov
addr16
and
das
ja
repnz
nop
test
mull
in
nop
xor
or
xchg
push
fisubs
cltd
push
inc
mov
jmp
aad
jns
fsts
cwtl
or
mov
jge
roll
icebp
hlt
loop
adc
sahf
inc
mov
xorb
pushf
fildll
push
push
jno
sahf
clc
adc
mov
or
add
movsb
mov
loope
xchg
lret
or
pop
add
pop
add
sbb
jmp
sti
jo
inc
jg
cld
mov
hlt
lods
sbb
cmp
push
push
xchg
aas
dec
pop
scas
cmp
les
push
xor
sub
imul
inc
dec
out
mov
sti
mov
sahf
pop
insl
inc
or
jl
mov
ljmp
jb
add
jmp
scas
cmp
cmp
jmp
mov
add
in
inc
lods
add
xor
or
add
in
lock
test
sub
mov
testb
adc
dec
adc
sarl
js
cvtps2pd
jnp
dec
lods
mov
jmp
cmp
inc
mov
pop
aam
popa
push
cmp
push
push
sarl
shll
push
cmc
sahf
mov
jp
testb
sub
add
sub
bnd
xor
jmp
int
jecxz
nop
push
cmp
jnp
lahf
xchg
push
daa
cmc
add
inc
cmp
and
pop
or
sbb
mov
push
jb,pn
in
dec
test
sub
rcr
mov
and
inc
mov
mov
call
out
sahf
dec
adcb
cmc
ljmp
adc
add
mov
mov
mov
jg
imul
fcomps
add
les
xchg
and
loope
popa
adc
gs
inc
push
add
xor
mov
lds
daa
xchg
mov
cwtl
into
jle
mov
into
shlb
fcmove
sbb
mov
add
pop
cmp
fcompl
sub
mov
mov
pop
mov
adc
push
ss
mov
sti
sbb
sub
das
and
and
pop
cld
and
jb
sub
dec
dec
lret
sbb
mov
xchg
fimull
hlt
sbb
pop
mov
adcl
hlt
sbb
mov
pop
stc
lcall
es
cmp
add
ret
lods
mov
mov
fistpll
add
enter
leave
jle
or
insl
imul
sbb
mov
sub
nop
fdivl
sub
sub
push
fidivrl
pop
xchg
gs
jmp
mov
cld
in
fucom
inc
gs
bound
mov
aam
inc
in
xor
sarl
sbb
inc
pop
xorb
push
in
dec
xchg
mov
inc
je
bound
fdivr
rol
jmp
mov
xor
mov
in
xchg
aas
dec
xlat
jmp
iret
fwait
push
dec
int3
aas
lds
hlt
fsts
mov
test
dec
pusha
sbb
xchg
les
mov
mov
jp
inc
mov
and
dec
test
cmp
popa
lods
cmp
add
sbb
je
jmp
aas
push
or
sbb
add
lds
mov
pop
sti
repz
or
xchg
lret
sbbb
jg
add
pop
test
fdivrl
cmc
cmp
and
jnp
pop
sbb
jae
mov
sbb
cs
xchg
mov
scas
movsb
xor
push
sub
pop
fistl
inc
push
or
adc
movl
rclb
mov
scas
xchg
imul
je
cmp
arpl
fwait
inc
and
fisttpl
add
outsb
and
outsb
jg
xchg
arpl
test
dec
mov
mov
data16
pusha
mov
jo
push
sarl
push
pop
and
cmp
jnp
jb
ret
adc
sahf
es
push
pop
jl
xlat
loope
les
pop
out
nop
mov
arpl
or
or
mov
rcll
fsubs
test
mov
adc
jnp
inc
cmpsl
pop
mov
dec
bound
lea
adc
ss
inc
lret
insb
mov
ljmp
lcall
xor
push
jne
mov
stos
xchg
adc
inc
sub
lods
les
add
inc
fldcw
pop
sbb
dec
mov
mov
or
dec
mov
or
mov
mov
ret
sub
dec
mov
lds
and
in
jge
imul
xchg
int3
mov
xor
fisttpl
dec
mov
mov
push
dec
sti
pop
outsl
std
push
inc
dec
repnz
mov
dec
xchg
xchg
insb
dec
fs
loopne
pop
push
add
test
inc
or
dec
add
cmp
ret
pop
pop
loope
jnp
inc
lahf
dec
je
cmp
mov
lret
int3
push
mov
ficoml
mov
xor
dec
pop
sti
or
daa
mov
lahf
and
int3
bound
in
jge
lret
or
fdivl
ss
enter
mov
dec
fisubs
or
gs
shrl
jg
lock
das
shlb
int
push
fisttpl
mov
imul
scas
arpl
loope
add
lods
mov
in
das
fstp
adc
sti
sbb
scas
repz
in
jmp
loop
call
mov
lea
adc
es
hlt
jge
fdivs
and
pop
mov
mov
bound
jo
aas
in
bound
mov
jecxz,pn
xchg
inc
pop
push
es
jns
in
lcall
or
add
mov
sub
in
nop
mov
push
out
daa
mov
test
xor
je
inc
cmpsl
dec
push
or
out
mov
mov
shlb
outsl
pop
inc
sub
push
sub
mov
sbbb
push
rcrl
aam
cmp
fistpl
sbb
push
push
pop
ss
mov
and
push
mov
ret
push
add
sbb
or
cmp
jle
in
shll
add
les
jmp
mov
or
xor
xchg
inc
mov
push
and
sahf
test
in
inc
mov
add
out
mov
mov
sbb
or
repnz
bnd
cmc
mov
pop
pop
pop
rorl
or
jb
je
add
xchg
adc
mov
test
mov
js
push
adc
repnz
sbb
fsubrs
push
xchg
mov
in
out
sub
movsl
rolb
inc
jecxz
shrl
sub
mov
mov
movsb
sbb
cld
mov
xchg
inc
push
inc
je
push
jns
leave
adc
sub
leave
loop
test
cld
or
push
inc
in
push
pop
xchg
int3
or
jmp
xlat
mov
gs
xor
int
add
cmp
in
shl
adc
icebp
inc
mov
leave
cmp
int3
and
mov
dec
mov
mov
and
xchg
dec
outsl
iret
int3
cmc
mov
lock
fsubrl
sarb
cmp
test
sarb
sahf
push
mov
push
popl
mov
mov
lret
xor
jecxz
xchg
and
cmc
fiadds
cmp
in
decl
pop
mov
sub
inc
les
pop
lods
or
repnz
movsl
mov
jo
xchg
fidivrl
inc
ds
xchg
les
cmc
xchg
inc
loope
nop
mov
aas
cmp
sub
leave
test
xchg
ljmp
jo
ja
sbbl
pop
xchg
out
ljmp
mov
imul
leave
ret
push
push
add
mov
loope
dec
adc
mov
mov
fcoms
push
push
aad
push
stc
xchg
mov
xor
aaa
dec
mov
add
fisubl
jecxz
xchg
es
pop
pop
cmp
fcmovnu
sarl
dec
test
fdivs
push
push
in
pop
inc
pop
ret
sarb
add
push
rcrb
inc
test
add
mov
sbb
mov
insb
adc
inc
les
rolb
scas
xchg
xor
ljmp
xchg
xchg
das
daa
xchg
lock
mov
adc
imul
ficompl
nop
in
inc
mov
leave
aaa
pop
jg
ss
dec
imul
cmpsb
jl
mov
inc
add
push
push
iret
rcrl
je
inc
mov
and
dec
pop
push
mov
inc
arpl
add
pop
add
and
and
mov
ficompl
jge
aas
inc
or
jg
shlb
imul
mov
subb
xchg
add
add
xor
and
aas
lret
mov
out
or
pop
decb
sahf
push
out
add
es
xchg
pushf
mov
inc
out
in
retw
xor
int
xchg
mov
sbb
sub
xor
mov
adc
rorl
mov
in
cld
jne
aaa
leave
or
push
inc
imul
clc
xor
sti
repnz
cwtl
out
lock
sbb
pop
rorb
sub
test
aas
scas
aas
push
jle
lock
and
int
lahf
test
fimuls
movsl
and
adc
xor
bound
push
mov
addr16
enter
mov
nop
ret
push
in
in
sbb
jae
inc
movsl
push
nop
in
mov
ds
pop
test
popa
imul
arpl
inc
ffree
flds
inc
rolb
mov
sahf
iret
xchg
cwtl
stos
xchg
into
add
fistps
sub
sti
and
jl
mov
push
iret
adc
xchg
xor
xorl
cmp
das
push
and
orl
psrad
fxch
arpl
insl
pop
jnp,pn
sub
inc
fwait
xor
shll
mov
mov
adc
pushw
sahf
idivb
repnz
mov
in
inc
mov
hlt
pop
inc
movsb
mov
ja
xchg
mov
nop
add
inc
mov
push
repz
add
push
push
jo
cmp
jbe
sub
fstpt
jp
mov
into
setb
or
cmp
mov
sbb
mov
sbb
test
push
lret
subl
lods
out
xchg
mov
outsb
lret
inc
push
stos
fwait
or
sub
cltd
jae
cmp
jno
leave
jle
fidivl
fmuls
mov
sbb
test
call
aam
scas
btc
rcrl
fsts
idivl
push
lahf
jl
mov
push
xor
outsb
dec
xchg
movsb
mov
js
mov
arpl
add
jecxz
bnd
out
and
adc
xchg
jmp
test
xchg
sbb
inc
arpl
in
mov
push
andl
clc
hlt
push
popa
fimuls
outsb
pusha
js
movsb
ljmp
or
insl
inc
fs
sub
cmpsb
sbb
mov
sub
add
ret
and
and
inc
cwtl
mov
mov
movsb
jge
xchg
pusha
or
sahf
sub
xlat
outsl
mov
lea
inc
repz
jecxz
and
push
cmp
mov
fnsave
bound
subl
mov
inc
jp
in
scas
test
add
popa
sbb
aam
mov
add
decb
je
int
pop
pop
or
scas
xchg
int3
and
loop
jmp
xor
nop
test
or
add
xchg
fidivrl
movsb
pusha
enter
or
inc
add
add
add
mov
mov
sbb
mov
inc
mov
mov
leave
dec
ja
rcl
pop
outsb
or
incl
xchg
jae
inc
pop
jecxz
push
adc
sub
pushf
and
enter
add
jno
push
mov
jg
sahf
dec
sub
sbb
fldenv
mov
fwait
mov
loopne
cmp
add
xchg
mov
sahf
sarl
xchg
push
inc
les
jae
nop
std
cmpl
push
mov
add
mov
rcrb
xchg
mov
inc
mov
mov
rolb
jo
das
jne
mov
xchg
popf
aas
cld
push
std
mov
adc
stos
in
js
push
outsl
popf
scas
in
fisubrl
sar
inc
pop
cmpsl
push
aas
push
popf
pop
mov
ja
pop
mov
loopne
pop
add
mov
adc
sbb
je
in
dec
lods
pop
rolb
jp
mov
push
sbb
int3
dec
cmp
or
cmp
xchg
mov
lcall
pop
cltd
insb
cwtl
sub
mov
push
xor
repnz
add
repnz
fistpll
dec
test
or
pushf
dec
add
sahf
mov
outsl
pop
mov
push
pop
into
dec
imul
and
mov
push
mov
sbb
aaa
hlt
and
mov
cmp
mov
cmc
cmp
rol
or
dec
loopne
dec
push
jno
stos
aas
stos
cmp
mov
lock
mov
mov
and
mov
sti
andl
jl
mov
dec
add
sub
mov
test
push
leave
and
mov
sahf
les
sub
mov
or
mov
push
xor
adcb
adc
mov
cld
loope
sub
mov
lcall
stc
cmp
scas
sbb
aam
sub
xlat
jl
mov
xor
lods
and
push
cwtl
mov
push
mov
int3
sub
mov
adc
push
mov
mov
xor
cli
sub
shlb
or
mov
mov
jno
jmp
dec
outsb
test
or
outsl
mov
iret
dec
ja
dec
and
pop
adc
inc
and
sub
inc
aam
cmpsl
sti
int3
pushf
stc
pop
les
js
push
cmc
into
fcmove
jo
and
inc
push
inc
orl
push
aas
mull
test
mov
jl
das
push
add
add
mov
mov
sub
add
and
leave
push
out
push
cltd
push
xchg
test
sbb
ret
cmp
repz
rcll
popf
out
loopne
movsb
enter
imul
add
pop
inc
popl
and
or
mov
inc
fdivrp
addr16
imul
or
and
inc
test
sbb
add
inc
mov
ss
enter
int
cmp
add
mov
mov
cmp
adc
cmp
sub
xlat
cmp
or
sub
or
inc
sub
mov
inc
cmc
test
es
ja
or
stos
aad
add
pop
cld
shlb
repnz
pop
fcmovnb
mov
push
push
mov
cmp
stos
dec
fstpt
sbb
add
pop
dec
lret
push
mov
pop
push
mov
mov
fs
dec
mov
cld
pop
std
js
mov
inc
jne
roll
xor
and
jg
ja
rcr
jmp
pop
rcrb
sub
push
and
ret
inc
jns
les
mov
mov
xchg
and
pop
mov
decb
iret
mov
in
in
inc
dec
rcrl
push
pushf
mov
sub
and
hlt
les
pushf
sub
mov
nop
jo
mov
mov
sub
sub
cmp
orl
je
cmp
loopne
push
ds
lea
jp
dec
adc
mov
pusha
jae
call
pop
lahf
das
cld
xor
fdivl
xchg
arpl
in
and
cmp
adc
push
jg
test
addr16
leave
in
flds
pusha
addb
dec
cmp
andl
popf
cld
sti
cmp
xor
lods
insl
push
in
push
mov
scas
cld
scas
lds
into
mov
clc
mov
jecxz
mov
imul
mov
bound
inc
mov
pushf
pop
ffreep
mov
add
jl
icebp
int
aam
mov
mov
rcrl
inc
cmp
aaa
dec
jno
mov
nop
mov
seto
adc
or
fsts
pop
xor
lds
inc
mov
stos
mov
aas
das
test
nop
cli
adc
add
pop
mov
fwait
pop
scas
loopne
mov
mov
adc
cmp
lds
push
xor
or
xchg
ret
lea
mov
add
or
mov
rolb
pop
jnp
xor
fildl
xchg
testb
test
ds
mov
mov
movsl
xor
mov
mov
xchg
ss
mov
xchg
mov
and
add
shrl
cmp
inc
shlb
out
add
xchg
imulb
xchg
mov
pusha
loop
mov
mov
jno
mov
mov
mov
and
lea
imul
mov
lahf
mov
stos
or
mov
jbe
loopne
or
imul
rolb
jb
sbb
and
adc
fmuls
jmp
and
pop
daa
pop
call
cmp
jg
neg
adc
or
outsb
popf
xchg
lahf
cmp
rcr
dec
fisubl
inc
push
jnp
bound
inc
adc
orl
and
les
insb
int
lock
cli
mov
cltd
fidivrl
adc
loop
rcrb
add
pop
lock
mov
and
push
cs
mov
add
aad
test
mov
ror
pop
stos
loop
arpl
rolb
mov
loop
ret
dec
cmp
adc
loop
ret
mov
dec
inc
inc
pop
sub
push
sub
ror
pop
cmp
add
je
mov
mov
out
imul
cld
xor
cmp
pushf
jo
add
call
js
jnp
and
mov
or
aam
pushf
jecxz
in
mov
add
ja
pop
flds
xor
inc
inc
lret
test
and
or
lods
dec
push
leave
add
mov
pusha
pop
loope
out
fdivr
cltd
mov
xchg
cmp
aas
fdivs
cld
mov
mov
cmpsb
push
adc
dec
js
and
mov
lret
loop
sub
or
sarl
dec
mov
pop
add
jnp
call
leave
mov
mov
in
icebp
shlb
or
dec
mov
lcall
leave
sub
fndisi(8087
popf
sub
into
dec
push
and
clc
or
pop
xabort
stos
lds
sub
shrl
popa
xchg
in
stc
popf
mov
loopne
loope
int
dec
mov
sbbl
leave
push
pop
inc
filds
aas
adc
mov
sub
dec
in
pop
stos
int3
call
cmpsl
cmp
add
sbb
sub
test
fs
lcall
xchg
lret
aad
xchg
add
sub
sbb
test
jmp
sbb
popf
test
jo
dec
std
rcr
inc
sub
packsswb
add
inc
cmp
inc
jmp
adc
leave
sub
int3
push
mov
fnstenv
cwtl
cmpsb
push
or
pusha
push
adc
sub
dec
cmp
inc
mov
and
xor
mov
scas
cmp
lret
xchg
pop
dec
lret
test
jns
shr
add
ror
mov
cltd
push
mov
mov
dec
push
inc
xchg
enter
outsb
aad
sarl
xor
fcompl
pusha
movsb
or
dec
aam
adc
sbb
pop
dec
mov
sub
int3
insl
adc
pop
pop
arpl
dec
push
sub
dec
pop
push
into
popa
push
xor
fisubrl
fmul
push
fisttpl
insb
and
pusha
mov
jns
mov
enter
psrlw
sbb
repnz
xchg
test
fld
sub
xchg
int
les
shrl
iret
jns
cld
stos
mov
adc
iret
test
aam
lock
xor
mov
push
xchg
fnsave
mov
mov
ret
hlt
in
jns
test
pop
fnsave
inc
or
sbb
inc
scas
jae
inc
sub
xchg
lods
nop
cmpsl
int3
daa
mov
inc
mov
shlb
iret
shrb
jg
lret
jg
rol
cltd
scas
mov
sub
inc
pop
outsl
cmp
sub
pop
fmull
and
adc
fstps
xlat
xor
push
cmp
aas
or
insb
cmp
nop
lods
push
mov
cmp
cmc
xchg
push
or
into
fisubl
cmpsb
push
pushl
mov
or
in
inc
adc
jnp
or
loop
xchg
and
lahf
in
and
or
loop
add
data16
jnp
add
leave
add
call
ret
pop
in
dec
push
pop
outsb
repnz
jne
aad
jp
sbb
and
js
cmpb
dec
and
mov
or
or
es
mov
mov
jmp
add
jl
and
pop
sub
xchg
sbb
xor
lock
pop
xor
mov
xchg
sub
fmull
mov
cwtl
insl
rorl
insb
cmp
xchg
jo
stos
std
pop
dec
mov
dec
xchg
xchg
daa
and
mov
sbb
or
and
jno
out
int
out
into
and
data16
mov
xor
int3
push
imul
aaa
inc
stos
popa
aam
stos
jle
sub
aas
leave
mov
pop
les
test
sub
ret
xlat
inc
or
into
pop
adc
test
sbb
orl
xorb
push
int
popf
insl
in
push
jl
in
pop
inc
sub
and
pop
xchg
lea
mov
pop
adc
mov
inc
icebp
insl
hlt
hlt
inc
insb
mov
add
cmpsb
jp
add
add
nop
cmp
stc
xor
cwtl
sbbl
cli
mov
insb
fsubrs
adc
int
adc
jb
cltd
ljmp
push
mov
fnsave
jmp
dec
fnstcw
mov
jmp
xchg
movups
adc
cmp
add
mov
sbb
mov
loope
fmull
inc
sbb
adc
test
imul
out
aad
mull
bound
add
mov
subb
and
mov
int
inc
add
pop
push
imul
cmp
sub
ss
int
clc
jl
int3
sub
and
subl
lcall
nop
xor
add
xchg
pop
mov
jmp
aas
shr
fmull
inc
test
stos
sub
mov
jp
push
ret
int3
mov
repz
mov
xor
and
xor
into
outsl
cmp
push
loop
jmp
aad
mov
pop
int
adc
iret
ret
ret
aad
mov
xorb
mov
push
nop
mov
or
or
ret
dec
mov
mov
fnstcw
inc
loopne
fisubrs
xchg
es
loopne
jae
mov
mov
add
jecxz
cmp
mov
jns
jo
sub
lods
rorl
push
xor
fistps
adc
jmp
mov
outsl
or
mov
cmpsb
pop
add
clc
inc
nop
mov
lcall
cmp
cli
pop
cs
ret
lea
pop
fsubr
ja
cmp
jo
clc
jge
push
js
pop
ret
inc
enter
insl
jnp
pop
or
les
mov
sbb
lock
in
push
in
cmp
or
mov
leave
cli
jmp
push
mov
sahf
punpckhdq
aad
mov
jp
fwait
jmp
mov
lods
cmp
dec
push
movsb
cmpsl
imul
cmp
dec
or
lahf
aas
popf
xchg
and
jb
adc
cmc
mov
add
sti
aam
push
xorb
and
mov
jle
xchg
or
int3
add
cltd
cmp
orb
es
dec
gs
ljmp
repz
rcll
lahf
inc
fldenv
pusha
sub
sbbl
bound
or
popf
push
push
insl
cmp
xchg
in
xchg
mov
cmc
add
mov
sub
outsl
dec
in
out
add
in
lcall
dec
int
xor
push
jnp
andl
add
aam
mov
jo
jmp
pushf
jge
push
mov
leave
lret
mov
sahf
jp
xchg
xchg
mov
or
into
stos
pop
les
adc
pop
into
imul
fs
and
movsl
sub
out
bound
xor
loope
test
jle
xchg
pop
not
dec
add
mov
and
lahf
insl
push
push
mov
adc
inc
inc
imul
je
xchg
xchg
adc
movsl
mov
mov
jp
ficoml
xor
dec
es
dec
mov
jl
jae
xchg
inc
dec
push
out
les
and
mov
movsb
rolb
aas
sub
push
push
inc
adcb
add
stos
sbb
sbb
xor
bound
mov
mov
gs
cmpsb
jp
les
cmp
mov
mov
mov
xchg
adc
jg
in
mov
jge
adc
adc
ljmp
mov
mov
popf
inc
sarl
dec
and
aaa
mov
xlat
pop
fnstsw
std
sub
ja
cli
adc
dec
jge
xchg
jb
aad
xchg
cmpsl
mov
jns
push
lds
into
lea
xlat
fs
xchg
test
push
jge
movsl
fsubl
adc
fistl
aaa
pop
imul
push
mov
mov
cmc
mov
sti
push
mov
aaa
imul
sbb
mov
adc
cmp
testb
adc
xlat
dec
mov
adc
sbb
scas
lods
dec
xlat
sbb
sub
out
mov
stos
xchg
inc
and
push
ja
js
dec
out
xchg
shll
cmp
ja
stos
sbb
xchg
or
jmp
ja
cmp
loopne
xchg
and
xchg
js
mov
ja
iret
sub
dec
adc
nop
dec
push
mov
dec
test
je
clc
fsub
std
aaa
or
xor
test
add
data16
es
xchg
mov
sbb
scas
stos
cmp
mov
or
jl
dec
scas
sbb
cmpsb
cmp
insb
cwtl
stos
iret
jo
cli
mov
add
jns
mov
in
add
lods
call
pop
mov
xchg
imul
sub
enter
jae
jnp
hlt
fisubrl
in
mov
pop
lret
pop
push
add
push
jns
cmpsl
es
imul
leave
push
pop
inc
mov
xor
outsb
dec
mov
sub
or
call
mov
sbb
pushf
pushf
out
add
test
shlb
xchg
jmp
sbb
shlb
cltd
inc
int3
inc
jns
in
sub
or
pop
out
mov
adc
arpl
sbb
int3
setns
jecxz
stos
mov
cld
adc
inc
ds
out
xor
jge
sbbb
mov
ljmp
sti
or
dec
pushfw
mov
sub
in
test
cmpsb
test
jb
jbe
mov
pop
loope
or
xchg
xlat
cs
xchg
sub
cmpsl
lods
jb
mov
cmpl
mov
mov
sbb
lcall
inc
fisttpl
fisttpll
sub
pop
ret
adc
mov
iret
int
xor
sub
mov
jecxz
and
push
add
movsl
test
ds
mov
inc
fiadds
clc
pop
sub
sbb
cmp
sbb
xor
cli
jmp
mov
hlt
and
inc
jp
cmp
mov
pop
insl
xchg
cmp
add
cli
pop
cmp
inc
enter
add
movsb
fcomi
in
or
and
xor
cltd
jne
icebp
pusha
add
shrl
pop
loop
outsb
cwtl
fs
jo
sub
insb
xchg
jnp
xor
inc
movsl
cli
cli
sub
xchg
fistl
push
and
mov
stc
cmp
lcall
cmp
repz
jnp
mov
pop
push
test
leave
not
sbb
jge
jl
fisttpll
mov
sub
lahf
fildll
jecxz
bound
sub
dec
loop
and
rcll
cltd
jb
sub
decb
cwtl
and
and
and
outsl
mov
int3
rorl
ljmp
testb
mov
test
inc
outsb
loopne
jnp
lea
mov
icebp
loope
inc
sarb
jle
cltd
mov
jbe
leave
mov
imul
fwait
jge
jecxz
ja
shl
stos
sbb
or
outsb
inc
cmp
push
stos
pop
stc
xor
sub
mov
mov
push
sbb
add
or
enter
or
sub
pop
dec
jecxz
xchg
enter
pusha
and
mov
or
cmpb
mov
add
sub
dec
fldl
xor
cmpl
mov
hlt
mov
stos
dec
nop
pop
sbb
jo
mov
inc
inc
and
inc
sub
pop
mov
inc
push
in
call
aas
fwait
popa
fadd
add
mov
xchg
and
adc
sbb
aam
in
push
sti
or
ret
dec
adc
mov
out
mull
aaa
leave
jb
sub
fcompl
push
ljmp
popf
sbbl
xchg
xchg
rclb
icebp
xchg
shll
scas
daa
cmp
mov
mov
sti
insb
bound
cld
sub
inc
push
ret
fxch
lock
cmp
lcall
and
pushf
sti
jge
mov
loope
inc
dec
sub
mov
xchg
cmp
jnp
sub
ja
or
push
adc
jle
mov
scas
pusha
rcl
les
jmp
xchg
jp
stos
xchg
pop
sbb
sub
mov
jecxz
adc
mov
sub
and
dec
sbb
adc
jmp
fsubrs
mov
stos
or
subl
fincstp
mov
rorl
pop
addl
cmc
cltd
testl
cmp
dec
cmp
out
push
lods
js
sub
shrl
xchg
ftst
and
imul
sbb
cld
fldl
adc
in
mov
jmp
sub
pop
mov
xchg
mov
fdivrs
adc
cltd
pop
shll
xchg
jno
pop
cwtl
cmp
and
das
add
aaa
lret
mov
xchg
push
mov
xchg
and
and
test
xchg
pop
loop
jno
int3
jp
adc
jg
addr16
pop
cltd
les
xchg
sub
jns
sti
pop
cmp
ds
jnp
jo
xchg
mov
pusha
mov
outsl
repz
or
add
mov
push
sub
mov
into
xchg
jno
xchg
pop
add
add
jle
mov
out
rcll
mov
gs
add
dec
leave
pusha
jle
and
inc
pop
scas
mov
lret
pushf
cs
imul
add
push
loope
jno
jb
sbb
mov
out
aas
dec
adc
rclb
adc
ljmp
dec
leave
or
lods
les
xchg
jno
daa
xchg
xchg
mov
and
and
cmp
sub
nop
xchg
int3
jge
jb
cmp
sub
xchg
lcall
test
clc
lahf
sub
jl
pop
aaa
arpl
shr
scas
xchg
inc
incb
nop
cwtl
ret
int
pusha
arpl
std
in
pop
aaa
and
imul
repnz
push
or
call
sbb
repz
popa
xorb
pop
and
clc
clc
xchg
and
loopne
scas
ljmp
nop
sub
pop
xchg
daa
gs
push
in
and
mov
cmp
lret
or
mov
dec
imul
jg
orl
sbb
into
mov
xor
dec
cmc
out
repz
push
int3
jge
mov
push
in
inc
cli
sub
aad
jne
leave
pop
ljmp
xor
and
mov
movb
mov
lods
mov
push
and
test
das
xchg
cmp
std
das
cld
xorl
mov
xor
mov
sub
sarb
xlat
pop
jb
shrl
dec
movsb
pop
xor
mov
fimull
call
cmp
sub
cmp
adc
and
xor
mov
mov
fwait
inc
and
push
adc
in
mov
enter
add
ret
fdiv
cmp
nop
mov
jmp
jge
mov
rcrb
pop
loop
mov
adc
pop
iret
bound
xchg
xchg
jp
xchg
mov
ja
cmp
add
and
push
add
gs
cld
cmp
or
out
in
mov
loopne
sahf
dec
mov
adc
and
sub
cmpl
sbb
mov
inc
adc
adc
rol
roll
dec
xchg
jns
jmp
outsb
fwait
add
fdivl
pop
loopne
cli
std
mov
xor
into
sbb
dec
cltd
mov
scas
hlt
fiadds
icebp
lods
mov
popa
pop
and
dec
sbb
cmpsb
sub
pop
sti
aam
mov
in
test
lock
adc
cmp
sub
xchg
sub
fdivrp
add
add
xchg
push
dec
sahf
adc
or
mov
inc
xor
mov
stos
stc
inc
rclb
es
cmp
lods
mov
mov
mov
mov
loope
xor
xor
mov
out
cmp
inc
inc
dec
mov
inc
xchg
mov
xchg
js
xchg
std
adc
xor
insb
adc
inc
scas
jnp
rorl
fistpll
xchg
les
push
jnp
mov
sub
jnp
fmuls
hlt
mov
or
cmp
cmp
pop
popf
je
xor
notb
les
pushf
repz
pop
xor
test
bound
push
fs
dec
mov
xor
int3
xchg
inc
or
in
jno
addr16
pop
push
or
cmp
dec
push
jo
sbb
push
js
fmull
mov
push
aas
popa
and
jle
mov
ljmp
insl
or
push
jb
push
cmp
dec
xor
jae
cs
loopne
pop
movsb
sub
pop
jmp
sbb
jle
mov
loopne
xchg
sub
cmpsb
lds
mov
push
xchg
sub
inc
cmp
mov
daa
mov
std
enter
gs
inc
inc
les
mov
xor
sbb
pop
and
insl
cmovp
xchg
sbb
push
kmovw
jbe
mov
xor
in
mov
imul
aaa
pushf
subb
lcall
xor
sbb
in
mov
fadds
imull
push
loopne
push
addr16
cli
inc
and
mov
mov
or
mov
mov
shr
xchg
into
jnp
je
leave
cmp
repz
sub
xchg
lods
xchg
push
scas
inc
xchg
cmc
mov
mov
or
hlt
lods
push
pop
inc
add
pusha
sub
dec
fs
xor
sbb
xor
icebp
xchg
or
mov
mov
or
or
cmc
or
mov
mulb
popa
add
sahf
int
add
mov
imul
int
mov
add
pop
sub
cmpb
clc
popa
inc
add
cmp
add
movb
add
clc
xor
orb
bound
cld
mov
pop
xor
daa
mov
adc
bound
push
push
movsb
cmp
fidivs
and
pop
in
xchg
fsubl
add
mov
cmp
out
cli
fildl
jl
js
in
cmp
daa
mov
loop
or
jecxz
cmp
jecxz
push
aaa
or
adcb
mov
insb
add
rcrl
pop
insl
cmp
popl
test
xchg
add
xor
aaa
aas
lods
lock
inc
ljmp
ds
add
lcall
imul
mov
rol
roll
enter
xor
mov
fadds
xor
lcall
xchg
cmpsb
push
mov
into
cmp
inc
pop
fs
or
pop
dec
xchg
in
fdivrl
and
lret
cs
icebp
icebp
test
xor
cmp
sbb
fcompl
push
sub
hlt
ljmp
dec
je
jae
xor
orb
sub
lea
insb
cs
push
xchg
adc
mov
pop
dec
pop
rclb
fdivrp
ret
adc
ret
adc
js
push
fdivs
fists
pop
sub
cmp
aas
cmp
jno
aam
outsb
outsb
daa
jbe
in
dec
ror
jno
cmpsb
aad
mov
or
js
push
xor
push
sahf
and
jmp
nop
movb
push
mov
and
sub
inc
fstl
fs
das
xchg
insb
rcl
scas
and
cmc
leave
lret
test
scas
punpckhdq
add
xor
add
out
mov
lds
or
out
sbb
scas
xor
fcoms
out
cmp
xor
scas
xor
xchg
push
add
movsl
adc
jecxz
cli
push
lods
xchg
cmp
es
or
inc
jnp
lods
repnz
add
mov
loopne
pop
and
lods
lods
adc
rol
sarb
mov
sbb
ret
push
push
in
push
sbb
add
jnp
cmp
jl
sub
cltd
cmp
mov
popa
fs
ljmp
aas
sub
aad
aas
sahf
pop
push
enter
push
hlt
mov
push
hlt
mov
pop
or
enter
pop
hlt
dec
std
ljmp
mov
addb
sbb
mov
repnz
push
inc
pushf
test
xor
lods
sub
lods
push
sub
js
adc
jp
adc
sbb
sub
jno
aad
cmp
sbb
lahf
mov
mov
add
imul
insl
popf
or
push
inc
popa
or
mov
or
pushf
xchg
test
pop
fdiv
enter
sbb
stc
jo
aad
cmp
cld
fs
mov
add
pop
dec
dec
out
dec
popf
call
push
xor
jmp
dec
outsb
in
repnz
inc
outsl
cmp
xchg
mov
cli
rcl
dec
inc
bound
lea
pushf
out
mov
pop
inc
dec
fsubrl
mov
aam
xchg
jl
ret
dec
xor
add
inc
movsl
out
push
sahf
pop
pushf
decl
ljmp
shll
xor
lods
repnz
and
cmp
xchg
in
insb
stos
jmp
push
push
test
jg
push
std
and
icebp
adc
lahf
push
mov
and
mov
lahf
repz
inc
cli
mov
and
dec
cmp
int3
test
sbb
adc
cli
sbb
cs
xor
pushf
sbbb
and
int
pop
ret
mov
das
mov
stc
ret
and
mov
xchg
push
mov
adc
pushf
cmp
in
andl
push
dec
push
mov
movl
in
push
or
aad
pop
jns
mov
mov
ret
mov
push
jl
sub
fistl
lcall
add
dec
sbb
popf
arpl
and
in
xor
in
int
int3
or
in
out
add
movsl
mov
sub
inc
movsl
mov
and
stos
in
fiaddl
insb
mov
and
adc
mov
rcrl
data16
test
stos
shlb
fdiv
dec
jle
sarb
std
pushf
lds
shl
popa
add
xchg
and
inc
pop
cwtl
ljmp
sahf
scas
sub
pop
popa
xor
xchg
or
jp
adc
icebp
cwtl
iret
shrb
adc
inc
xchg
ret
fldt
les
stos
aam
xchg
stos
pushf
mov
mov
pop
or
xchg
add
sar
push
lock
enterw
pop
mov
mov
xlat
aad
mov
in
aam
jg
cmp
xchg
pop
xchg
enter
or
bound
shll
jnp
ret
pushf
in
pop
mov
loope
xchg
sbb
mov
pop
or
mov
xor
mov
jmp
in
es
lods
das
pop
ret
rcll
jge
nop
adc
push
mov
and
jg
sub
jg
xchg
lods
daa
lret
stos
and
mov
jne
inc
sub
nop
sub
inc
cmp
add
push
mov
fbstp
inc
mov
out
add
cmpsl
js
div
std
fwait
mov
adc
imul
xchg
test
cmp
mov
or
pop
mov
nop
push
mov
mov
loope
jge
mov
gs
mov
dec
repnz
lret
adcb
dec
sub
fldcw
dec
mov
fistps
cwtl
dec
test
adc
scas
add
mov
mov
xor
add
mov
inc
and
pop
in
sti
dec
int3
js
inc
or
shrb
dec
ret
sub
cwtl
mov
mov
pusha
ljmp
adc
push
pop
inc
pop
jle
cmp
jge
mov
ret
and
mov
xchg
xor
lds
xor
mov
movsb
subb
dec
sub
mov
cltd
sbb
jbe
push
pop
pop
inc
or
dec
xor
das
lock
xor
insb
dec
sub
or
stc
dec
hlt
pop
repnz
subb
loope
and
push
mov
shrb
lcall
inc
cmp
sbb
subb
dec
xchg
cmpsb
mov
shlb
sub
icebp
and
mov
dec
pop
icebp
fdivrs
inc
sar
jg
shl
and
push
sub
mov
sete
roll
push
xor
jno
cli
jmp
adc
fisttps
dec
out
adc
pop
fwait
mov
push
or
inc
repz
cld
test
xchg
mov
icebp
jae
push
mov
push
imul
dec
push
jle
repnz
cmp
jbe
les
clc
pop
inc
popf
jl
cmp
xchg
pop
bound
mov
lcall
and
add
and
stos
into
sub
movsl
cwtl
mov
or
mov
and
pusha
pop
addb
push
jg
xchg
mov
add
mov
sub
fwait
cld
mov
xchg
mov
mov
mov
dec
push
dec
pusha
mov
fmuls
out
xchg
push
push
jge
sub
mov
mov
iret
pop
in
nop
mov
push
mov
cmp
jecxz
mov
sub
orl
rcrb
sub
ja
push
add
pop
lcall
idivl
mov
cmc
xchg
jg
inc
stos
xchg
je
ljmp
or
mov
gs
cmp
or
cmp
and
sub
and
mov
int
add
stos
cmp
dec
dec
sub
repz
push
rcrb
aas
jo
cs
lds
xchg
test
jle
divb
mov
xor
and
ss
add
inc
repz
insb
xchg
jne
sbb
rep
nop
jecxz
and
push
push
xchg
sbb
call
loop
cmc
lods
add
jp
inc
outsb
lahf
shlb
pop
sub
adc
pop
bound
out
sbb
lea
sbb
and
pop
mov
cmp
jns
fcoml
call
xchg
inc
fmul
cmp
mov
rcr
mov
daa
sti
lret
cmp
sbb
gs
mov
mov
sub
sti
fsubl
fsubrs
ds
stos
or
pushf
cmp
cwtl
iret
xlat
mov
in
loope
mov
lods
clc
leave
sbb
push
cld
rcll
lods
pop
inc
and
jne
les
mov
push
cmp
fdivrs
xor
inc
rcr
cmp
roll
hlt
inc
sbb
shl
loope
or
aas
sbb
mov
leave
jp
xorl
add
lods
fwait
les
sub
adc
push
push
mov
cwtl
andb
popf
std
xlat
push
inc
adc
fcompl
enter
add
aad
adc
add
fistpl
mov
int
lods
addr16
push
loope
mov
and
dec
or
xor
pop
popa
or
push
cmp
adc
shlb
std
popf
cmp
dec
outsb
mov
into
js
out
pop
movsb
cs
xor
mov
lret
mov
aas
inc
icebp
fstps
pop
hlt
push
lods
outsb
jbe
xor
vpcmpeqd
pushf
add
into
movsl
stos
pop
fidivl
pop
outsl
shl
mov
pushl
inc
inc
das
dec
push
insl
dec
mov
ret
pop
jb
rcr
aam
nop
int3
push
leave
data16
dec
xchg
mov
or
cmp
jne
mov
push
mov
or
sbb
pop
lret
test
pop
enter
imull
daa
mov
pop
jg
add
sub
lahf
dec
sub
data16
loop
add
test
inc
xor
jns
sbbb
ret
std
xchg
loop
xchg
push
xor
rcll
icebp
leave
cs
jb
or
int3
xlat
jecxz
mov
loop
adc
aam
xchg
jne
jmp
iret
jae
pushf
popa
mov
xchg
shlb
lahf
popf
cld
sbb
cmp
add
clc
mov
sbb
inc
sub
repz
popf
fiaddl
ds
loopne
icebp
mov
inc
cmc
sub
test
in
cld
cmp
rcll
adcb
call
sarl
aaa
fcompl
or
xchg
inc
xor
mov
add
sahf
pop
pop
insl
or
cli
cmp
mov
aad
xorb
ja
mov
cld
daa
jnp
rcll
fwait
dec
adc
cmpl
fbstp
lds
ljmp
int3
xchg
aas
mov
in
test
ret
fs
and
js
mov
lea
shl
pop
mov
add
movsb
inc
adc
push
xchg
mov
in
pop
mov
mov
sbb
into
daa
lahf
test
pop
mov
aad
inc
insl
lods
push
jl
mov
dec
push
push
outsl
shll
dec
or
jb
mov
inc
add
lock
mov
lea
jl
xor
xchg
inc
js
in
in
into
out
adc
das
cli
pop
mov
inc
xchg
mov
push
ucomiss
mul
adc
repz
scas
push
mov
jmp
subb
sbb
pop
ja
leave
into
mulb
stos
jae
mov
jl
jno
mov
in
jmp
adc
jnp
jp
or
add
scas
and
jno
and
mov
into
or
push
cmc
outsb
adc
fcompl
fs
ljmp
movsl
xchg
pusha
sbb
sub
adc
mov
mov
iret
adc
pushf
stos
inc
scas
fldl
out
mov
cmp
mov
cmpl
shrb
int3
ficoms
jl
outsl
fsubl
bound
adcb
scas
neg
loope
inc
add
outsl
rorb
xor
imul
sbbl
push
stc
dec
jmp
sbb
xchg
or
xchg
movb
cli
fsubrl
icebp
dec
lods
push
xchg
xchg
int
xor
stos
in
enter
mov
add
or
sti
adc
jb
movsb
cmp
cmpsb
sahf
push
es
cmp
shl
inc
xor
fwait
push
out
add
or
nop
add
icebp
jle
std
pop
ret
rorb
sbb
inc
sub
lret
ja
sbb
dec
and
loopne
arpl
push
sbb
or
pop
mov
adc
dec
lret
lock
dec
mov
daa
add
cmp
pop
dec
data16
mov
and
sub
les
mov
stc
mov
rol
sti
sbb
xchg
popf
cli
adc
mov
push
test
pop
inc
imul
adc
and
pop
ret
and
jg
hlt
push
or
dec
or
sub
or
lds
adc
and
dec
adc
pop
xor
mov
push
and
fistl
lret
mov
push
pop
jmp
in
stos
inc
int3
fidivrl
nop
mov
enter
repnz
aad
je
mov
cmp
pop
lahf
in
lret
push
inc
stos
shll
lods
pusha
mov
mov
rcll
xchg
jbe
adc
mov
aas
scas
loope
jg
pop
push
nop
bound
sbb
test
add
cmp
xlat
xor
and
adc
mov
xchg
adc
adc
add
lods
clc
sarl
shlb
icebp
cld
shrl
ljmp
enter
add
es
cmp
lret
push
sbb
xchg
test
test
out
repnz
loop
sub
jle
xchg
iret
push
es
lret
mov
sub
sub
ja
mov
lods
mov
ret
pop
rolb
xor
mov
xchg
mov
ret
leave
arpl
pop
inc
sbb
cld
out
aam
mov
out
inc
jae
mov
inc
pop
xchg
cmc
into
subl
jae
and
shrb
rcll
adc
sti
aaa
das
jle
mov
fcomps
push
and
pop
int3
add
add
adc
xchg
cwtl
movb
loopne
cmpsl
mov
popf
xor
ret
mov
ja
xchg
or
incb
dec
dec
hlt
cli
aam
in
or
jnp
rolb
sti
cmp
mov
loop
icebp
leave
sub
dec
mov
negb
add
cmp
int3
nop
sbb
and
pushf
sbb
jmp
test
in
push
rclb
test
ror
ja
jno
jmp
mov
sub
mov
cmc
sub
sarl
jns
std
and
add
push
int3
cli
popa
mov
lods
sbb
xchg
test
leave
pop
fimuls
jp
push
mov
mov
push
sbb
sbb
push
mov
mov
xchg
or
notl
jbe
aad
fistpl
mov
nop
mov
push
adc
push
pop
int3
cld
js
or
sbb
shrb
in
adc
push
scas
jl
in
imul
mov
cmc
add
jns
inc
ss
mov
xchg
xlat
mov
scas
loop
call
mov
pop
inc
sbb
or
mov
addr16
leave
rcrb
dec
outsb
push
rcl
pop
mov
sub
hlt
fiaddl
xlat
xor
sbb
cmpsb
mov
or
fisubrl
ror
daa
sbb
insb
mov
xor
xchg
push
fwait
mov
ret
jno
or
xor
push
sub
mov
gs
test
insb
add
xor
addl
je
push
enter
jecxz
dec
outsb
inc
inc
fldl
push
sub
jg
sbb
dec
enter
inc
add
sbb
push
lea
and
adc
sbb
inc
and
fdivs
fisttpl
scas
xor
mov
mov
dec
sahf
jne
pop
loope
nop
mov
std
rclb
stos
das
cmp
inc
xchg
and
mov
inc
arpl
popf
jb
add
push
leave
addr16
sbb
pop
cmp
inc
inc
les
and
cld
fstpl
in
inc
shrb
xor
jbe
jp
stos
dec
icebp
cmp
movsb
jp
cmp
scas
inc
push
mov
sti
dec
push
cmp
sbb
insl
js
and
xor
push
and
pusha
clc
xor
cwtl
push
cmp
or
mov
and
and
lods
inc
add
insl
or
and
not
sahf
mov
jmp
lods
dec
xchg
leave
push
sub
ret
jmp
push
repnz
adc
pop
add
out
shll
push
pop
mov
orb
pop
mov
leave
mov
int
ljmp
enter
sub
mov
add
inc
test
nop
add
push
mov
mov
in
cmpl
sbb
rorb
rorl
fcmovu
cmp
mov
xchg
movsl
add
mov
cmp
pop
arpl
je
jmp
fcomps
cmp
test
rcrl
stos
sti
pop
mov
arpl
nop
dec
mov
sbb
xor
int
sbb
addr16
sbb
jmp
pushf
jle
mov
jne
mov
movsl
add
out
push
xor
xor
push
sbb
mov
fcoml
mov
jnp
lods
das
insl
cmp
mov
nop
incb
aas
repz
incl
push
or
inc
pushf
sub
inc
imul
addl
rol
orl
sbb
pop
mov
sub
into
jnp
mov
sahf
out
sbb
divl
pop
inc
inc
add
call
lret
cmp
pusha
mov
out
lock
xchg
sub
mov
enter
add
mov
dec
sub
mov
cld
mov
fdivs
add
daa
and
and
jp
mov
fcompl
and
jle
int3
and
push
mov
inc
daa
mov
adc
mov
test
call
sub
jecxz
xchg
popa
xrelease
xor
sbb
lds
lret
fidivrs
fisubrs
insb
fwait
add
pop
sub
test
and
jnp
mov
jl
adc
push
cmpsl
popf
lret
mov
sahf
inc
xchg
sti
call
mov
and
int
xchg
loop
or
test
mov
jl
popa
sarl
in
clc
lods
mov
call
cwtl
pop
add
enter
pop
dec
pop
cmpsl
mov
sbb
xchg
or
sub
xlat
sbb
jae
xchg
repz
sub
push
inc
pop
pop
mov
cltd
jne
jb
clc
mov
imul
test
add
push
sub
mov
icebp
mov
and
repnz
pop
incb
movsb
add
pop
xor
sbb
adc
fnstcw
sub
cmp
int3
loopne
nop
jl
jnp
sbb
dec
inc
cmp
lcall
push
pop
std
fadds
cwtl
inc
popf
arpl
mov
mov
popa
inc
in
scas
add
loope
cld
pop
cmp
shlb
cld
jge
lret
inc
outsb
in
xchg
mov
popa
popa
jg
pop
mov
and
aad
mov
js
and
loop
lea
cltd
cwtl
jge
adc
push
in
add
pop
dec
inc
add
sub
push
or
lret
adc
cmp
rorl
clts
pusha
ja
divb
outsb
and
lahf
sbbb
fnsave
imul
adc
mov
arpl
arpl
sub
inc
push
fiaddl
repz
movsl
ucomiss
cmp
mov
sub
sub
ret
or
cmp
mov
cmp
push
lods
hlt
sbb
jo
sbb
popa
lret
mov
lds
xlat
aam
gs
shrb
jb
jnp
jb
cmp
cltd
adc
adc
out
mov
shl
loop
bound
pop
scas
ret
jecxz
mov
das
cmpsl
and
bound
cmpsb
bound
insb
mov
sbb
push
mov
push
loope
lock
shlb
pop
loope
mov
mov
cmpsb
out
pop
xacquire
ds
xchg
push
xchg
pop
cmp
popf
pop
push
cmp
movhps
imul
cmp
cli
inc
out
mov
ds
xor
mov
sub
adc
mov
lock
jns
fcoml
inc
popa
pop
outsl
and
clc
stos
imul
dec
mov
sbb
xor
push
sarb
mov
jecxz
je
bound
lret
scas
push
add
mov
jne
inc
ds
cmp
sub
aam
je
out
movsl
push
movsb
xchg
xchg
inc
insl
cli
adc
cmc
mov
push
ja
lds
dec
push
cmc
dec
dec
push
icebp
popa
jns
sub
dec
shl
loopne
push
in
xchg
scas
xor
outsb
inc
movsb
into
xor
add
add
mov
adc
movsbl
adc
pop
leave
call
cmp
jg
sub
add
and
jecxz
inc
xchg
sub
daa
mov
jp
aam
xor
sub
inc
and
dec
mov
adc
insl
adc
dec
add
pop
je
popa
cmp
push
fstl
cmp
ss
inc
xchg
sbb
mov
mov
leave
mov
outsl
adc
movsb
mull
pop
rorl
cld
dec
mov
rolb
pop
fisttpll
lods
cli
fdivr
imul
lea
negb
pop
lahf
cwtl
add
test
ret
sbb
cs
add
arpl
into
mov
pop
mov
xchg
cld
add
dec
mov
mov
jnp
inc
add
movl
jg,pt
cwtl
lcall
sbb
in
test
cli
test
or
mov
cltd
pop
popa
jne
shr
and
cmpsl
sub
add
mov
pop
lret
in
iret
push
push
mov
inc
es
shlb
push
loop
dec
sbb
stos
cmpsl
adc
fimuls
inc
sbbl
jb
adc
fists
lret
in
stc
iret
mov
insb
in
dec
in
fadd
pop
mov
leavew
shrl
pop
out
stos
mov
mov
shrb
pop
jb
adc
mov
xchg
sar
pop
fdivs
ret
cmpsl
ja
insl
aam
lods
pushf
add
cmp
jbe
pop
in
cmp
mov
loopne
fmuls
pop
push
cmpsl
xchg
lcall
test
and
dec
jp
data16
or
orl
sub
lret
in
nop
xor
in
sarl
repnz
dec
insb
mov
arpl
dec
out
ljmp
xchg
dec
popf
xchg
rcrl
pop
xchg
mov
lahf
adc
pop
xor
ret
imulb
sub
pop
xchg
mov
adcl
and
cltd
and
sbb
pop
mov
pop
or
data16
das
ret
mov
adc
dec
shlb
stc
cmp
pop
push
pop
pushf
jo
pop
movsl
mov
lahf
cmp
sbb
cmp
out
mov
les
fs
stos
iret
fisttpll
cmp
or
data16
pop
pop
mov
xor
fbstp
adc
push
inc
lret
ljmp
sarb
enter
fidivrs
mov
lahf
or
adc
inc
je
shll
adc
cs
add
leave
stc
xor
mov
sbb
rolb
movsl
leave
jb
sub
dec
js
sub
das
mov
jns
mov
dec
mov
js
cld
imul
jb
push
pop
and
loope
cwtl
loopne
lcall
ret
xchg
sahf
or
lds
into
xchg
sbb
gs
stc
shll
lret
dec
ds
cltd
xchg
xchg
cmp
push
mov
add
mov
dec
in
mov
adc
movsb
stos
jnp
or
add
mov
shrb
dec
imul
mov
mov
test
in
fs
es
bound
jns
sub
sbb
adc
jg
and
clc
loop
push
sub
mov
inc
and
ja
and
and
lods
sub
jae
dec
jge
aas
mov
stos
insl
ds
dec
stos
inc
fs
dec
test
popa
ficomps
mov
mov
mov
fcomps
hlt
inc
loope
cmc
and
in
shl
xor
cltd
xchg
xchg
shrb
mov
jecxz
xor
lds
dec
jecxz
dec
sahf
jge
leave
sub
adc
inc
dec
mov
pop
pop
icebp
call
jle
cmp
enter
add
mov
pop
pop
ret
loope
mov
out
imul
scas
xchg
or
daa
shrb
rolb
xor
pop
mov
add
cmp
mov
jne
mov
and
or
jp
fst
pop
lret
xor
mov
pop
call
popl
repnz
mov
inc
or
mov
or
dec
jno
bound
mov
dec
mov
and
bound
int
or
pop
add
hlt
sahf
adc
sbb
inc
lock
fdivrp
xor
sar
pop
jge
or
mov
add
ds
xchg
inc
popa
xchg
test
sbb
sub
add
pop
cmp
adc
test
pop
adc
iret
pop
xor
mov
cmp
icebp
fimuls
movb
out
lock
rcl
pop
xchg
jb
ss
sub
loop
sar
aad
lret
fdivrp
xor
xchg
add
and
cs
adc
push
mov
test
sub
cmp
xchg
pushf
adc
push
lods
pop
adc
ja
adc
mov
roll
stc
aaa
mov
add
sti
dec
in
cmp
ret
xchg
in
pop
mov
and
hlt
nop
xchg
shll
fcoml
out
dec
lcall
shrb
packssdw
pop
movsl
out
jbe
fdivrl
mov
cmpl
dec
cmp
shld
iret
sti
sub
ficoms
lods
hlt
sub
jns
lds
add
cmpsl
std
cwtl
cmpsb
lds
xchg
sub
in
cmpb
sub
test
dec
jecxz
adc
sbb
out
inc
aas
dec
mov
push
add
in
lret
and
enter
dec
or
and
fmuls
mov
jp
mov
add
inc
xchg
inc
or
cmp
fidivrl
out
cld
sbb
mov
jge
popa
add
sub
mov
or
les
add
adc
insl
sub
cltd
outsb
inc
out
in
mov
mov
fwait
push
pop
sub
sbb
or
jmp
mov
loope
jg
dec
mov
dec
sti
mov
cs
mov
inc
arpl
enter
out
out
mov
daa
lock
and
clc
dec
mov
les
arpl
aam
jno
mov
xchg
mov
lock
push
js
jge
and
or
dec
add
out
idivl
sahf
sti
add
popf
adc
call
das
mov
movlps
xor
pop
or
enter
fs
cmp
rolb
or
mov
push
pop
sub
lcall
add
or
mov
push
out
lcall
lret
and
lock
rclb
icebp
shlb
inc
int3
push
pop
cmp
push
sub
lods
sub
dec
loope
cmp
pusha
mov
lret
in
nop
dec
adc
cmp
mov
push
inc
fs
add
lock
cwtl
jge
subb
or
or
push
stos
sar
jbe
jge
inc
movsl
sub
mov
pop
cmp
mov
push
mov
xchg
mov
dec
ljmp
sti
xchg
stos
pop
and
or
in
sbb
shrl
mov
mov
test
dec
lret
add
inc
ja
dec
int3
mov
lgs
add
aas
lret
mov
push
jo
add
adcl
out
mov
rcl
mov
das
je
xchg
pop
fs
scas
iret
xchg
fisttps
inc
cmpsl
cmp
cmp
lret
adc
test
xor
imul
inc
and
sbb
es
lds
dec
and
negb
xlat
rcll
jne
cld
rcrl
pop
ljmp
pop
aaa
and
and
jne
pop
cld
nop
sub
inc
pop
dec
xlat
mov
aam
cltd
sub
or
sahf
xor
jo
mov
sub
cmc
dec
dec
inc
mov
or
ja
rcrl
xchg
and
and
or
push
cwtl
mov
xor
push
jae
data16
push
mov
aas
cmp
int3
lea
loopne
mov
rorl
imul
jecxz,pn
or
pop
dec
imul
fs
cmp
xor
mov
cmpsl
xor
jns
jo
jns
das
sub
mov
idiv
test
or
jg
cmp
sub
push
dec
xchg
imul
subb
das
stc
dec
sbb
inc
in
mov
sbb
test
cmp
lods
jno
or
lcall
cmp
mov
dec
xchg
idiv
dec
and
mov
sub
inc
nop
pop
lock
mov
imulb
movsl
lahf
aam
pop
pop
mov
int
loopne
sar
ja
loope
dec
cmp
mov
push
lret
add
int3
xchg
mov
and
lahf
es
js
mov
loopne
xchg
push
push
push
add
pop
jns
ja
scas
and
jb
mov
mov
jne
mov
adcb
mov
mov
cmpsl
xlat
rcrl
cmp
mov
push
push
jge
sub
ret
mov
test
cmp
mov
aas
stos
push
mov
mov
mov
lods
gs
bound
ret
sar
bound
cmp
and
fucomp
jns
cli
int3
cmp
add
pusha
pop
mov
sahf
fbld
fldenv
mov
dec
push
sub
mov
add
into
pop
inc
mov
mov
push
aas
aas
jae
and
and
imul
pop
rol
cld
jecxz
pusha
xor
push
mov
lods
mov
pusha
es
loop
add
xlat
mov
mov
out
gs
inc
lods
push
mov
shrl
ret
aas
out
add
push
or
jne
xchg
sti
in
dec
fsubl
testb
sahf
imul
out
jmp
sub
lret
test
dec
xor
les
std
push
stc
loop
xor
xchg
insb
mov
pushf
or
dec
mov
or
movsb
pop
mov
call
inc
mov
ret
hlt
cmp
int3
fimuls
cmp
mov
lret
cmp
ret
rcr
fcompl
je
adc
add
lahf
sbb
inc
das
pop
insl
lods
sub
outsl
frstor
rcll
aam
adc
dec
inc
xchg
or
addr16
ds
daa
nop
dec
popa
or
xchg
sti
icebp
pop
pop
push
xor
aam
push
ror
cmp
imul
dec
arpl
sbb
bound
ret
nop
addb
push
call
inc
or
push
or
xor
sub
icebp
cmpsb
push
mov
imul
xchg
fcos
lock
cmp
das
dec
popa
repnz
add
cld
mov
xchg
mov
lods
or
negb
mov
fbld
outsb
cmp
ja
pop
dec
mov
pusha
cwtl
jno
ds
add
sub
push
inc
loop
and
pusha
les
or
jnp
in
add
add
mov
xchg
cmp
cmp
enter
push
clc
mov
inc
pop
jno
mov
gs
scas
xchg
call
pop
test
inc
pop
js
lock
shl
jl
adc
sbb
lahf
and
push
sub
lahf
shll
xchg
xor
loope
add
mov
and
test
mov
in
dec
mov
ret
jne
mov
and
adc
mov
jno
aam
in
xchg
out
xchg
subb
jo
jno
mov
lahf
xchg
jo
inc
fiaddl
cmpsb
pop
stos
jp
inc
test
and
sbbl
das
mov
dec
stc
inc
daa
bound
sub
cmpb
shrb
sbb
test
ret
movb
pusha
mov
push
inc
mov
inc
inc
scas
sbb
dec
mov
mov
cltd
lret
daa
enter
das
loop
push
pop
and
sbb
ljmp
cmp
push
popf
insb
sub
aaa
stos
inc
fstpl
loop
push
mov
or
mov
fdivp
inc
sarb
xchg
sbb
leave
sbbl
jnp
add
cli
sbb
jmp
cmp
fbld
add
cmp
pop
jge
cld
jecxz
sahf
pop
scas
aam
pop
cld
cmp
sub
sahf
arpl
mov
cs
popf
inc
insl
scas
ret
dec
test
mov
pushf
cmp
ss
imul
imul
cmp
mov
das
sbb
cmp
mov
les
pop
add
shll
xchg
dec
insb
xchg
incb
adc
jb
fisttpll
scas
and
pop
orl
mov
bnd
bound
out
pusha
leave
sub
push
aaa
xorl
cmp
sub
inc
loop
cmp
pop
loope
or
loopne
mov
xlat
mov
into
cmc
or
lock
pushf
xor
pop
popa
shrl
pop
mov
fistpl
dec
insl
sub
or
fistps
in
mov
dec
ret
orl
or
movsl
inc
mov
inc
mov
inc
cmp
leave
rorb
mov
out
aam
cltd
fisttps
popf
sub
mov
aas
cmpsl
cltd
sbb
inc
push
add
mov
jae
dec
pop
xchg
into
aam
pop
clc
movsl
imul
inc
stos
pextrw
mov
ss
fldt
xor
int
cwtl
dec
data16
or
pop
and
or
lock
xor
in
pop
sub
enter
mov
test
and
test
sarb
mov
or
fdivl
jg
add
pop
in
test
stos
ds
hlt
mov
dec
test
mov
and
popf
pusha
sbb
mov
enter
leave
ljmp
mov
push
sar
fistpl
fnstcw
jge
in
dec
dec
les
jae
add
daa
test
push
cmc
outsl
pop
popa
jmp
jl
sarl
or
std
jno
xor
sbb
jo
pusha
push
call
push
or
aas
mov
fnsave
mov
pop
loop
or
dec
pop
fnstenv
mov
shlb
and
jle
enter
pop
lcall
pop
ret
cmp
fcmovne
andl
out
adc
imul
jo
pop
cmp
mov
into
or
inc
dec
and
sub
adc
and
xlat
les
xor
add
pusha
outsb
out
mov
add
shrb
mov
dec
movsb
jg
js
fstpl
fidivl
mov
xorl
je
iret
jp
lret
jmp
gs
scas
es
mov
mov
jg
fldcw
cmp
and
mov
jnp,pn
jl
pusha
aad
mov
xlat
movsl
or
cs
cmc
cmp
push
mov
loopne
mov
adc
sub
fbstp
sub
cs
js
cmc
popf
sahf
or
or
mov
dec
cmpsb
mov
out
xor
mov
ds
push
mov
xchg
fucomip
adc
fisttpll
xlat
std
ret
popa
iret
cmp
mov
and
add
bound
ja
sub
fimuls
jbe
subb
into
test
testb
leave
insl
push
push
mov
xchg
fistps
mov
adc
roll
fsubr
pop
int3
or
sub
and
jmp
movsl
cmpsb
add
in
mov
mov
xor
pop
sub
mov
pop
loope
stos
xor
mov
inc
inc
jg
les
fistpl
sub
fadds
sub
nop
xor
das
sbb
int
mov
imul
cmpsb
clc
insb
or
jl
xor
stc
stos
xchg
std
jnp
in
mov
add
xor
addr16
mov
movsb
xor
jns
adc
jae
rorl
test
in
mov
inc
test
and
jnp
mov
inc
mov
sbb
or
aam
adc
mov
and
inc
out
and
mov
pop
jmp
loop
imul
xchg
xor
push
fst
daa
mov
mov
jae
dec
cmp
push
mov
jo
dec
jle
push
ljmp
fcmovu
mov
push
loopne
sub
mov
mov
sbb
push
cmp
loop
xor
mov
sarb
or
adc
fs
loope
adc
iret
jmp
pop
pop
jmp
rcl
mov
shrb
ss
inc
mov
aam
mov
cmp
addr16
pop
cmp
stos
lods
xor
cltd
in
add
mov
pop
dec
push
adc
or
inc
jnp
add
sub
mov
xor
test
mov
jge
pop
mov
clc
call
push
les
test
int
add
pop
aam
cs
xchg
inc
sbb
add
fstpl
cmp
rcrb
pusha
fcompl
imul
xor
loopne
jo
lock
xor
pushf
dec
inc
int
or
xor
pusha
test
mov
jp
lods
ret
stos
std
fstpt
mov
daa
jle
lds
stos
xor
inc
dec
adc
adc
xchg
sbb
out
into
std
loop
stos
inc
xchg
fsubl
bnd
adc
stos
xchg
mov
int
mov
dec
repz
inc
in
push
fisttps
inc
movsb
cli
in
inc
xchg
sub
xchg
mov
mov
adc
cli
mov
xlat
push
sub
and
and
push
inc
ret
mov
xchg
xchg
insb
push
push
inc
inc
sbb
xchg
jecxz
push
fsub
mov
cmpsl
mov
and
xchg
orl
xchg
into
mov
xchg
nop
inc
fs
into
insl
jb
sub
je
cld
mov
dec
sub
jl
xor
imul
mov
cmpsb
inc
in
adc
lods
call
sbb
and
cmc
mov
insb
sbbl
add
xor
push
mov
jecxz
fisubl
pusha
test
pushf
jb
jnp
pushf
jle
jb
int3
sti
mov
cmpsb
and
inc
cmc
mov
inc
cld
mov
das
fs
xor
or
push
jge
xor
cwtl
add
add
andb
ficompl
nop
sub
mov
xchg
into
inc
cld
pushf
pop
inc
movsb
push
mov
retw
sub
sub
pop
int
mov
imul
mov
mov
enter
xchg
pop
jp
repz
sub
lret
cmovbe
cmp
push
and
xchg
sbbb
popl
roll
add
adc
xchg
adc
xlat
add
cmp
vandnpd
and
sub
sbb
lods
leave
and
mov
xchg
popa
fstpt
or
enter
xchg
push
clc
add
sub
pop
mov
jl
cs
bound
popf
and
cmc
mov
ret
in
js
into
in
pop
dec
pop
add
cli
push
ja
mov
pushf
mov
jne
fwait
sub
or
inc
sbb
imul
mov
enter
fptan
into
pop
jns
inc
mov
cmp
decb
xchg
insl
hlt
andl
in
mov
ret
out
in
jle
and
icebp
popf
clc
pushf
cmpsl
out
stos
shlb
push
dec
sbb
bound
daa
jns
sbb
pushf
stc
stos
inc
xchg
cmp
sbb
sahf
jne
jns
fwait
int3
inc
mov
jecxz
lds
mov
lea
mov
or
sub
test
fs
xchg
inc
nop
iret
bound
hlt
mov
add
cmp
mov
mov
adc
dec
inc
leave
jne
xor
jne
loope
dec
xchg
mov
push
aad
mov
xchg
lret
or
mov
lods
imulb
add
int3
jne
bswap
sub
add
cmp
dec
fsubr
jge
jb
movsl
out
or
fwait
dec
sub
cld
push
push
inc
mov
aam
leave
inc
mov
fcoml
mov
roll
or
daa
cmp
mov
popf
cmpsb
shlb
test
outsl
test
cmp
lahf
mov
andl
jnp
inc
adc
pop
xchg
test
shll
ds
shll
dec
jp
xchg
out
loop
dec
pusha
stc
sub
xor
lods
push
mov
subb
in
sub
inc
sub
sub
shl
mov
cmp
adc
mov
pop
mov
jmp
ja
lahf
inc
push
mov
mov
pop
mov
sub
sub
test
sbb
dec
mov
mov
xchg
mov
xor
push
loop
int3
ss
mov
negb
pop
mov
aaa
mov
repz
lods
mov
lods
cld
cli
repnz
clc
gs
sub
lret
in
sub
cltd
push
and
push
fadds
and
repz
mov
cli
pop
sahf
dec
pop
pop
fmull
pop
call
jle
aad
pop
mov
pop
insl
test
aad
enter
adc
mov
dec
and
andb
push
push
icebp
cmpsb
mov
aas
xchg
cwtl
fidivrl
call
pop
mov
mov
jbe
push
fistpll
das
imul
push
sub
jns
mov
daa
mov
call
pop
xchg
lock
add
fwait
mov
les
dec
mov
subb
movsb
leave
lds
jmp
pop
hlt
inc
lods
dec
cs
mov
subb
xchg
add
dec
flds
insb
mov
int
inc
movsl
add
mov
jns
subb
xchg
mov
call
pusha
inc
imul
out
ja
dec
xor
fadds
xor
adc
pusha
fidivrs
pop
sbbl
cwtl
dec
enter
stos
lds
scas
daa
sbb
adcl
xor
pop
shll
inc
jmp
xor
xor
and
in
mov
push
loop
repz
lds
or
and
cmp
mov
out
and
call
outsl
stos
idivb
jle
mov
or
dec
sub
mov
cmp
pusha
shlb
jne
mov
ja
dec
adc
cld
add
jmp
push
sbb
mov
or
jg
dec
add
nop
bound
test
loop
dec
push
ljmp
pushf
hlt
inc
ror
decl
shrb
mov
sbb
stos
test
push
push
push
cmp
scas
fs
cmp
mull
jl
out
jns
loope
stc
movsb
out
aad
ret
xor
push
sub
loopne
js
out
add
push
pop
lahf
or
pop
mov
cld
jne
jecxz
pop
sbb
shrl
mov
int
enter
mov
fidivrl
xlat
push
dec
aad
dec
lea
xor
adc
rcr
adc
lods
addr16
push
push
push
mov
inc
jge
ss
pusha
fimuls
adc
adc
and
bound
xchg
dec
mov
andb
inc
pusha
es
fs
lock
sbb
jl
jecxz
xorl
insb
fmuls
xorb
mov
jne
jmp
dec
pusha
sub
mov
pop
pop
lret
lock
pop
or
push
push
lods
add
andb
mov
out
int3
jp
imul
lds
jae
in
jne
in
cmp
mov
add
test
add
sti
lret
stos
das
movb
stos
ljmp
inc
mov
cld
arpl
testl
sbb
dec
aam
in
repnz
in
jecxz
fwait
pop
andl
imul
push
mov
jae
sub
test
jne
hlt
push
or
lret
mov
and
jmp
mov
push
cmpsb
mov
lock
in
add
rcll
or
fsts
mov
repz
daa
shr
pop
loop
inc
mov
mov
mov
pusha
les
addr16
inc
in
test
sti
bound
jge
bound
outsl
aam
push
push
dec
scas
pop
movsl
divl
push
xchg
inc
data16
or
in
or
shll
inc
push
push
mov
jl
inc
outsb
fs
push
inc
mov
cmc
and
ret
in
or
test
rdmsr
cmp
cmpsl
lahf
dec
or
shll
cmp
dec
adc
aad
push
roll
sub
or
or
outsb
sub
sbb
jle
cmp
xchg
pop
xchg
cltd
lock
mov
sbb
mov
jno
sub
popa
dec
in
dec
in
mov
mov
adc
mov
inc
push
enter
sub
xchg
ss
fidivs
popa
dec
jmp
push
aad
xchg
lret
xlat
mov
rolb
inc
and
inc
and
jecxz
repz
push
push
cld
sub
fs
cmpsb
dec
filds
inc
sub
xchg
dec
adc
lcall
xor
xchg
mov
pop
xor
ret
xchg
jl
and
jne
jne
jg
sbb
int
insl
mov
in
cld
inc
out
adc
mov
enter
es
dec
inc
adc
adc
pop
xchg
shrb
rcrl
fidivl
xor
arpl
fs
mov
int3
mov
in
sar
or
xor
subb
pop
cmpsb
fwait
outsb
test
adc
cmp
pop
mov
or
add
je
cmpsl
jae
mov
adc
xorl
lcall
jge
sbb
hlt
repz
mov
leave
cmp
push
sbb
add
pop
adc
and
sub
xchg
test
es
add
mov
fisttpl
sbb
xchg
sbb
ja
mov
icebp
cmpsl
and
gs
ss
mov
push
and
adc
pop
lods
stos
lcall
inc
leave
ds
cmp
lods
mov
pop
pop
add
push
jmp
addl
mov
push
jl
push
xor
inc
jge
jmp
push
arpl
add
or
cmp
or
icebp
jns
insb
dec
jecxz
movlps
push
cmc
shll
outsb
sub
lds
push
test
mov
push
nop
addr16
aas
cmp
cs
mov
xchg
leave
mov
cmpsl
or
out
test
push
pop
mov
in
sbb
lods
dec
gs
push
cmp
dec
or
jmp
lods
fdivrs
mov
mov
jle
pop
cli
jns
and
pop
pushf
inc
fisttps
out
jnp
adc
mov
pop
push
rcrb
insl
sbb
lret
aad
push
stc
nop
mov
cmpsl
xchg
out
sbb
add
jge
shrb
xchg
bound
push
sbb
pop
sbb
pop
inc
adc
inc
into
jmp
push
push
imul
test
addb
enter
lahf
or
xchg
xchg
fadds
mov
sti
sbb
sti
push
pop
imull
and
loopne
in
test
fistpll
popa
jg
decb
mov
ljmp
and
cmp
sub
repnz
std
mov
inc
es
mov
sub
inc
repz
out
stos
popa
jb
loopne
in
mov
jb
js
jo
cmp
cmpsb
jne
or
mov
push
push
or
pop
pushl
data16
cli
dec
aad
cmp
jecxz
or
ljmp
pop
loop
cmp
cltd
push
lods
loopne
das
xchg
es
es
arpl
arpl
push
mov
mov
js
lods
sahf
pmaddwd
call
js
adc
adc
dec
sbb
lcall
cmp
vblendmpd
mov
scas
xor
xchg
cmp
fwait
cmpsl
ljmp
das
scas
sbb
xorb
jns
adc
or
sbb
popf
and
sbb
push
inc
sub
imul
pop
cmpsb
xor
inc
adc
jmp
sbbl
add
mov
out
in
sbb
mov
aam
mov
add
dec
sar
orb
xchg
pop
adc
xor
push
sub
xor
imul
adc
das
ror
cmc
jl
mov
pop
mov
push
popf
or
lret
stos
mov
decl
or
jle
mov
outsb
orl
and
add
inc
bound
xor
arpl
call
inc
mov
mov
loop
sahf
or
pop
mov
pop
rcll
and
popf
bound
inc
hlt
mov
std
leave
sbb
pop
pop
lcall
addr16
jne
inc
pusha
dec
fldl
sub
sub
mov
cmp
subl
pop
lret
rcrl
adc
inc
jb
xlat
test
mov
test
xor
pop
push
jnp
ds
jmp
fnsave
add
or
xchg
cmpsb
rcrb
pushf
sub
push
inc
xor
les
pop
fidivrl
push
push
or
mov
adcb
or
inc
push
jo
rorl
jno
hlt
mov
jmp
das
push
fstpt
sbb
pop
jl,pt
sub
push
mov
js
mov
in
add
cmp
dec
pop
mov
call
inc
das
leave
in
jmp
push
sarb
xor
add
insl
adc
pop
cld
in
int
dec
cmp
push
stos
xchg
cmpsb
cld
icebp
nop
int3
insl
fwait
jmp
repnz
movsb
mov
nop
fldcw
jno
mov
cs
add
jns
mov
push
xchg
aad
or
push
sub
xor
rol
ficomps
enter
test
rcr
jno
repz
push
xor
mov
xorl
sbb
daa
aas
mov
lret
mov
sbb
cmp
cmp
xchg
cmp
rolb
les
add
add
dec
jp
add
fldt
mov
bound
int3
pushf
aaa
gs
dec
test
cli
push
lahf
mov
push
lock
outsl
mov
sub
mov
sarl
adc
into
cltd
mov
ret
dec
js
mov
inc
mov
push
lock
stc
rorb
mov
cs
inc
jb
push
dec
xchg
push
ljmp
jmp
xchg
sub
inc
dec
popf
test
int
mov
ret
pop
sbb
stos
xchg
add
adc
jle
mov
mov
nop
mov
dec
push
loopne
ljmp
cs
mov
bound
mov
jns
pop
dec
sahf
jno
mov
inc
lods
sub
mov
aad
or
mov
mov
jmp
stos
enter
test
inc
push
shrb
shrb
inc
xchg
mov
push
leave
or
mov
xor
repnz
xor
mov
andl
iret
iret
fildll
fiadds
in
hlt
aam
cmp
sub
jl
addb
push
mov
inc
dec
rorl
fadds
or
push
fnstenv
or
jp
jns
repnz
mov
outsl
xor
jbe
xchg
adc
mov
jle
daa
lea
add
lds
int3
cmp
push
mov
pop
or
sar
shll
push
push
clc
mov
repz
or
jnp
dec
and
xchg
dec
jo
in
stos
imul
mov
xlat
or
ret
imul
incl
fstpt
jns
dec
sub
test
jecxz
push
call
imul
sub
add
mov
in
jge
xchg
in
cmpps
mov
jl
insb
mov
add
out
xor
mov
xchg
mov
lret
fisubrs
fmull
fidivs
ror
or
mov
jg
ret
push
negb
dec
scas
popa
dec
mov
gs
out
std
cmp
iret
push
ss
pop
dec
dec
push
lea
outsb
lock
cmp
repnz
aad
movsb
sbb
jp
cmp
lods
sbb
or
lea
push
or
mov
and
jp
popa
mov
in
adc
popf
xchg
add
fcmovb
cmp
cmc
pop
xor
shll
std
adc
inc
mov
sar
and
xchg
mov
lahf
jl
mov
jbe
out
aas
cmp
lret
mov
sub
scas
xor
mov
fnsave
shlb
shlb
pop
cltd
dec
insl
mov
xchg
lret
mov
inc
out
cmc
sti
test
mov
push
dec
mov
push
and
out
inc
push
mov
push
xchg
scas
sub
popf
out
jle
aam
sbb
add
fildll
sub
or
fsubl
int
out
jge
push
xchg
pop
jl
pop
or
divb
test
ds
je
adc
xchg
and
mov
mov
ja
gs
loopne
scas
stos
das
cmpsb
adc
push
add
push
clc
repz
push
fistps
hlt
cmc
icebp
sub
fmull
pushf
xor
cmp
js
sbb
popa
xor
pop
fwait
js
popa
or
sub
push
mov
rdmsr
or
lds
jge
rcll
mov
insb
inc
add
aas
stos
add
push
mov
pop
dec
aam
mov
loope
sbb
cmp
call
pop
mov
inc
fxtract
addl
inc
dec
mov
mov
bound
mov
mov
lods
xor
xor
jl
sarl
mov
andb
push
adc
or
hlt
rcrb
add
inc
loop
or
imul
iret
cmp
fdiv
ja
ljmp
inc
mov
lret
or
test
test
into
xchg
and
pop
pop
dec
icebp
enter
inc
and
push
xchg
dec
les
fst
ss
dec
lret
cmp
mov
and
pop
xor
popa
ja
cld
pop
jg
fdivr
mov
adc
or
cli
push
test
xchg
test
mov
lret
or
mov
inc
add
ret
pop
push
aam
mov
xchg
pop
dec
push
lret
addb
movsl
xchg
mov
dec
rcl
mov
and
sar
lcall
jns
dec
pop
fcoms
aad
add
scas
sbb
sarl
lret
fmull
cmp
cmp
push
call
mov
loopne
dec
or
cmp
pop
mov
add
and
push
sbb
aad
movntps
sbb
stc
and
pusha
mov
sub
lahf
pushf
fstpt
leave
or
inc
xchg
int
push
add
and
jl
sub
and
out
xor
sub
pushf
stos
outsl
lods
scas
andb
pop
cwtl
xchg
jb
add
mov
sub
dec
push
jae
xor
ds
movsl
add
fiaddl
aam
vunpckhpd
jp
ret
sub
adc
adc
push
pop
jecxz
and
std
clc
test
outsb
sti
das
jg
inc
pop
jo
inc
xlat
sbb
jp
push
shlb
cmp
mov
mov
aam
sub
cld
mov
loope
sub
dec
sub
and
shrl
jl
push
fs
mov
andl
cmp
mov
xor
divl
or
push
dec
dec
movsb
dec
aas
or
arpl
popa
jg
xchg
aas
and
or
xor
mov
sbb
aas
dec
adc
cmpsb
dec
fwait
arpl
scas
xchg
inc
in
mov
aad
sbb
push
bnd
cmp
xchg
jne
mov
cs
pop
dec
push
iret
outsb
add
imul
stc
ljmp
jge
mov
xchg
mov
mov
sbb
ret
dec
inc
xchg
shlb
int3
pop
pop
or
js
xchg
add
addr16
add
and
mov
loope
call
xor
loope
xchg
lods
int
adc
adc
ret
dec
fincstp
adc
pushf
or
add
out
test
shl
out
icebp
add
jb
loop
nop
adc
xchg
ret
mov
push
and
gs
or
xchg
mov
outsb
mov
inc
dec
aad
jecxz
mov
mov
movsb
push
adc
lods
loope
popa
rcrb
test
inc
mov
enter
sbb
fcomi
inc
pop
fists
testb
test
ss
fisttps
packuswb
sbb
int3
lret
stos
cmc
mov
mov
inc
in
add
cltd
mov
pop
xchg
js
rol
jnp
cmc
mov
aad
leave
xchg
enter
std
dec
mov
or
and
jnp
cwtl
stos
jmp
imul
push
sbb
popf
rclb
xchg
dec
frstor
push
cmp
lret
mov
sahf
xlat
xchg
clc
stc
and
daa
and
xlat
dec
mov
imul
inc
pop
inc
lods
in
dec
pop
sub
xor
dec
jo
or
mov
cmp
into
idivb
sub
ret
pop
lahf
adc
or
adc
imul
xor
jmp
add
inc
lods
mov
mov
call
pop
sub
pop
xor
or
out
dec
lods
sbb
add
or
cli
std
and
add
cmp
jecxz
data16
adc
enter
pop
roll
loope
rcll
lret
roll
push
and
lret
adc
jae
xchg
push
outsl
inc
lds
rolb
sahf
rolb
btsl
mov
shrb
push
data16
ljmp
into
lds
cmpsl
cs
dec
hlt
xlat
xchg
stc
push
into
pop
aas
rol
dec
mov
rol
jne
push
mov
pop
push
movsb
sbb
jg
fisubs
les
std
jp
jnp
adc
js
test
adc
adc
pop
cmpsb
cmc
inc
insb
push
les
test
mov
mov
aad
call
aas
jns
and
int3
xor
adc
fs
pusha
imul
dec
pop
xchg
push
push
mov
or
shlb
clc
fwait
dec
mov
cld
pop
into
pop
leave
push
jo
enter
loope
ss
xor
shll
in
xor
push
or
out
add
inc
and
mov
addl
in
add
and
insl
cmp
lahf
push
nop
inc
out
jae
sub
dec
scas
pop
sub
iret
jl
sti
lret
xchg
daa
fs
sbb
jb
iret
push
and
subl
ja
ret
mov
add
jp
and
push
iret
sub
inc
addr16
xor
mov
inc
mov
hlt
in
jle
adc
xchg
push
xchg
dec
or
mov
push
jns
jns
imul
mov
jns
jne
add
mov
les
daa
lahf
push
cmc
mov
rol
pop
push
push
popl
mov
daa
mov
push
aas
test
neg
cld
out
lock
mov
les
push
cmp
hlt
cmp
adc
test
inc
jp
fmulp
cltd
jmp
loope
mov
cwtl
fdivp
jmp
inc
xchg
lret
xor
fs
xor
fiadds
cwtl
cmp
and
iret
mov
fimuls
mov
and
jne
inc
dec
and
leave
cli
adc
fs
add
ret
insl
and
xor
dec
pop
inc
iret
lods
std
call
ss
sbb
jle
or
push
or
das
add
mov
pop
jnp
in
loop
mov
inc
pop
and
test
mov
cli
jle
xchg
lock
fistpll
and
inc
movsl
or
push
jmp
sub
ss
jno
push
movsb
test
push
scas
rorl
sbbb
aaa
aas
adc
loop
cmp
mov
pushf
cld
and
cmp
pop
jp
jo
lret
inc
mov
jmp
or
adcl
ret
test
dec
push
popf
cmpsl
notl
xor
xchg
out
dec
mov
pop
loopne
push
sub
add
fwait
jecxz
popf
orl
jg
leave
jnp
mov
popa
mov
xchg
inc
sub
out
test
nop
les
orb
push
ljmp
pusha
inc
cwtl
xor
in
lcall
rolb
ret
mov
or
test
pop
mov
xchg
nop
adc
sbb
stos
lahf
pop
stc
fs
outsb
pop
cmpsb
mov
push
std
or
add
sub
inc
mov
xchg
sub
lods
lret
sbb
nop
lock
inc
aas
jg
add
push
ret
lcall
adc
adc
xchg
orl
cmpsb
sbb
push
stc
in
pop
xchg
aaa
je
adc
imul
mov
push
lret
fmull
sub
mov
bound
mov
fwait
push
add
aam
adc
es
mov
testb
test
sbb
mov
bound
mov
fwait
xchg
mov
into
dec
adc
mov
leave
mov
pop
jecxz
xor
ror
xlat
out
dec
repz
cmpsb
iret
stc
fistl
insb
rcl
pop
jp
loope
dec
nop
lods
fs
sbb
xor
call
mov
and
dec
arpl
stos
adc
xlat
sbb
pop
je
xchg
adc
test
push
cmpsl
xlat
dec
movsb
fs
push
sahf
xchg
mov
je
lods
push
jmp
fsubrl
fcomip
pop
inc
jnp
dec
xchg
jecxz
das
lds
dec
flds
je
shlb
mov
rolb
jbe
clc
xorb
jns
sub
mov
test
cli
mov
ror
fisttpl
mov
aad
popa
or
mov
gs
pop
fidivrl
sub
xchg
push
sub
rolb
es
and
mov
icebp
int
ljmp
mov
test
push
jg
in
add
mov
aad
pop
jbe
xchg
gs
mov
or
pop
rcll
adc
incb
xchg
fistps
jmp
jp
mov
adc
jge
addr16
gs
and
push
icebp
dec
dec
outsl
pop
stos
aam
scas
inc
mov
clc
mov
sbb
test
and
xor
cmp
jg
push
aam
ss
movsl
aam
sbb
xchg
xor
dec
mov
push
mov
mov
push
not
hlt
jle
sbb
adcl
outsb
mov
test
mov
out
out
pop
push
push
inc
insl
xchg
fstpl
jmp
xor
jb
mov
mov
jle
int3
in
repnz
mov
inc
adc
out
xchg
shlb
push
andl
repnz
enter
pop
xchg
or
popf
dec
jp
and
add
int
inc
repnz
sbb
push
ja
and
out
lcall
mov
movsb
ja
jno
pushf
jbe
inc
inc
test
jo
dec
mov
mov
ret
test
dec
lcall
shll
add
arpl
xchg
in
sbb
add
cmp
fistpl
mov
aad
sbb
std
movl
bnd
jnp
push
pushf
cmpsl
sub
cmpsl
mov
test
xchg
daa
out
dec
sarb
lahf
int
orl
addb
fwait
jmp
js
fnstenv
add
arpl
in
dec
fnstcw
test
ficompl
movsb
push
jne
notb
lcall
cwtl
sbb
cwtl
test
add
movsb
mov
jae
cmc
shll
cwtl
cwtl
adc
test
dec
and
sub
or
and
jecxz
add
xor
dec
subps
dec
adc
jns
in
pop
pop
ficompl
dec
mov
cmp
ja
cmp
int3
jle
add
das
fistl
loopne
add
loopne
jmp
daa
sub
mov
and
rolb
push
std
dec
sbb
xchg
add
cmp
inc
imul
and
inc
stc
xchg
dec
xor
data16
imull
mov
fsubp
leave
sub
dec
lcall
sbb
out
pop
cli
ret
inc
dec
pop
punpcklbw
and
ror
jae
sbb
add
outsb
outsl
mov
ss
subb
pop
test
jb
inc
dec
cmpsl
sbb
or
in
mov
loopne
cmpsb
cmp
sbb
mov
mov
jbe
push
pop
outsl
mov
xchg
pop
push
mov
cmp
jmp
pop
mov
push
push
cmp
rclb
aad
mov
iret
or
movsl
add
insl
jl
mov
inc
push
pop
xor
fstpt
xor
cmp
sar
and
lock
cmc
cwtl
in
add
out
xchg
xor
lds
adc
cmp
fists
sti
or
sbb
cmp
scas
mov
les
jns
cmp
sbb
jnp
mov
mov
outsb
sbb
fidivrl
cmp
jnp
in
jge
xor
inc
lret
mulb
hlt
pop
push
fsqrt
idivb
cmc
cmc
mov
int3
add
lds
cli
dec
inc
outsl
xor
mov
test
popa
lret
test
incl
sbb
xchg
mov
xchg
mov
sbb
dec
fucomp
mov
mov
add
fldcw
orl
mov
xor
out
cs
fnstcw
fimull
cmpsb
push
inc
sbb
inc
rolb
pusha
mov
filds
nop
out
pop
add
repnz
jl
push
rorl
push
inc
notb
fwait
and
das
rcll
push
daa
or
add
sahf
mov
stos
aaa
adc
sbb
cmp
into
xchg
xchg
pop
and
pop
add
dec
sbb
and
loop
jno
and
dec
idiv
cmp
cmp
cmp
or
jo
rorb
push
mov
es
rcrb
mov
xchg
dec
mov
jmp
or
mov
cwtl
sbb
popw
shlb
sbb
add
loop
and
and
int
pop
shl
push
pop
jge
stc
inc
and
hlt
push
out
add
testl
mov
stos
dec
pop
or
jp
adc
xor
ret
jmp
in
push
nop
addb
fdivs
movsl
cmpsl
nop
dec
cs
addr16
inc
mov
xchg
mov
adc
sub
in
sbb
cmp
lahf
add
js
jmp
add
cmp
cli
imul
test
inc
sbb
dec
cmp
jp
mov
sbb
add
fdivs
jecxz
and
and
pop
popa
mov
dec
cli
cmp
push
js
adc
cmp
sbb
or
adc
xor
add
inc
psrld
xchg
pop
out
cmpsb
xchg
inc
cs
cmp
jg
enter
cld
sbb
fnstcw
arpl
inc
inc
sbb
push
int
notw
mov
mov
xor
pushf
inc
movsl
clc
adc
insl
cmp
inc
pop
push
mov
inc
cltd
cmp
lock
mov
sub
xor
cs
mov
sub
dec
lock
or
sub
push
add
test
push
mov
insb
fwait
xchg
pusha
inc
push
xchg
xor
jo
cmp
sub
pop
inc
add
sub
lods
xor
adc
cmpb
insb
cltd
pop
pop
cmp
rcll
xchg
push
jmp
fyl2xp1
fisttps
fcomps
ror
ret
pop
jb
sub
pop
xor
movl
add
repnz
fistl
push
jae
bound
js
mov
test
push
out
fsubrl
cmp
push
cmpsb
cmp
fistl
sbb
adc
mov
imul
repz
fldt
ret
hlt
imul
mov
mov
mov
mov
imul
xor
outsl
or
sbb
cmp
sub
fs
rcl
stos
mov
lret
cmp
mov
jnp
test
dec
jo
insl
imul
push
ficompl
aam
push
aaa
out
inc
sbb
xor
jg
neg
inc
add
cmp
mov
fcomps
cmc
gs
xlat
fadds
jle
scas
mov
push
sub
mov
rorl
btc
xor
and
mov
mov
or
subl
push
in
out
cmpsb
push
pop
nop
ficoml
xorl
sti
sbb
adc
cmpl
cwtl
dec
push
xchg
ja
lcall
aam
pop
inc
les
testl
or
mov
test
adc
rorb
push
jae
cmp
jae
ret
jb
push
lret
dec
sti
dec
fwait
out
lea
cmc
icebp
add
mov
xor
dec
mulb
sub
mov
orb
inc
ret
jmp
pop
ds
in
dec
pop
lds
je
xchg
push
fisttpll
or
adcb
push
jg
pop
popf
inc
rorl
inc
clc
pop
or
leave
fbld
dec
pop
xchg
pop
ss
jle
stos
into
ret
dec
sahf
add
fistps
stos
mov
add
cmpsl
rcrl
or
xchg
insl
or
add
or
stos
movl
fldenvs
push
pop
mov
scas
jbe
int3
dec
xor
cmp
dec
les
fcoml
insl
xchg
xchg
xor
in
scas
lret
daa
ss
gs
cs
mov
xchg
inc
xor
dec
mov
lcall
mov
and
clc
sti
ja
int3
inc
pushf
adc
cli
xchg
mov
daa
out
shlb
dec
movsb
and
push
mov
adc
faddl
push
lods
pop
pop
push
cmp
icebp
cli
mov
ret
in
shll
jnp
push
mov
iret
inc
jmp
xlat
or
cmp
push
test
jne
sbb
mov
cmpsl
adc
imul
leave
addr16
inc
push
shrb
lds
in
jae
cmpsl
adc
pop
adc
mov
stos
xor
lods
push
push
sub
mov
xor
push
push
orl
lock
cmp
adc
inc
mov
xor
push
or
mov
xchg
sbb
insl
push
inc
test
cs
xchg
stos
pop
xorl
in
mov
imul
push
test
jl
cmp
jge
pop
test
das
inc
rcll
inc
mov
pop
sarl
sbb
and
adc
jmp
pop
sub
cmp
mov
sbb
dec
shr
nop
lds
or
xor
into
mov
cmp
sahf
sub
mov
pop
sar
mov
push
sbb
stos
xor
cmp
push
or
mov
movsb
push
out
mov
xchg
gs
and
cmp
aaa
dec
divb
push
jecxz
mov
inc
xor
add
jae
mov
jb,pn
mov
mov
mov
xor
cmc
sbb
xchg
jl
push
or
push
push
and
sbb
roll
dec
ja
lock
lea
push
loopne
push
movsl
scas
mov
xchg
repnz
fiadds
cmc
roll
sub
mov
pop
and
cmp
push
jno
leave
scas
dec
add
xchg
adcl
gs
pop
cmp
mov
ds
aas
sahf
dec
sbb
rclb
std
in
jg
xchg
dec
mov
out
adc
add
in
inc
pop
push
xlat
orb
jo
cmp
xchg
fstps
push
xor
sub
repz
push
jge,pn
ret
jecxz
lods
int3
repz
jbe
out
xor
adc
mov
jbe
inc
pop
outsl
jmp
popf
in
cld
jge
lret
xchg
xor
xor
push
mov
js
faddl
inc
cwtl
scas
les
jns
pop
cmp
rol
bound
mov
mov
movl
in
adc
outsl
cmp
and
mov
pop
mov
cmpsl
mov
test
jns
jecxz
inc
jg
lds
adc
movsb
sbb
mov
insb
dec
lea
cmc
xchg
mov
inc
in
add
pop
adc
sub
jle
sbb
outsl
icebp
call
push
xor
push
sbb
sarl
cmp
aam
fsubrl
adc
lods
and
xchg
pop
mov
negb
cmpsb
xor
jb
arpl
or
popa
dec
daa
lret
iret
aam
decl
shl
jbe
stos
mov
stos
mov
jg
scas
rcl
xor
pop
rorb
xchg
les
push
pushf
in
mov
push
dec
adc
sub
dec
cmp
lds
inc
xor
mov
cltd
xchg
jmp
leave
cmp
lea
outsb
fsts
add
lret
mov
fbld
adc
mov
mov
add
mov
xchg
std
cmp
incb
pop
cwtl
out
xor
or
aas
xchg
enter
call
or
loop
xchg
stc
pop
and
cltd
repnz
push
lcall
sbb
scas
push
out
movsb
cltd
cmp
push
int3
cmp
cltd
cmp
lea
repnz
ret
test
in
rolb
fucomi
inc
xchg
out
sbb
call
ret
jo
dec
and
jl
data16
and
sbb
mov
adc
shlb
rcrl
sub
push
or
test
sbb
xor
test
xchg
inc
dec
pop
andl
js
test
idivb
shll
out
add
loope
stos
sbb
add
dec
sti
cmp
bnd
clc
xchg
lods
rcll
into
daa
mov
and
mov
stc
inc
xchg
dec
add
enter
nop
pop
in
dec
adc
roll
mov
push
enter
ds
aam
test
xlat
add
jae
stos
fisubrl
inc
clc
cmp
sub
sub
cli
popa
insl
stc
push
std
mov
inc
ret
mov
inc
idiv
js
inc
cmc
mov
aam
adc
mov
push
mov
imul
lcall
inc
ljmp
sbb
pop
aas
sti
dec
mov
fcmovbe
stos
rcl
and
ret
inc
mov
dec
mov
pop
lcall
filds
jge
pop
inc
xor
mov
jae
mov
and
xchg
dec
aas
xchg
mov
into
inc
mov
or
and
in
ret
mov
mov
loop
imul
xchg
sarl
inc
push
aas
repnz
xor
add
decl
or
dec
pop
sbb
pop
pop
in
lock
and
stos
call
and
add
ss
fidivrl
dec
fisttpl
fsubrs
cmp
jecxz
movsl
aas
out
sbb
in
jge
xor
outsl
icebp
or
movsl
imul
pop
bound
mov
imul
fmull
add
in
cmp
rcrl
and
hlt
dec
outsb
and
or
jae
and
inc
and
insb
sbb
icebp
mov
negb
repz
inc
les
mov
mov
push
inc
pop
out
fs
inc
in
push
xchg
pop
push
cli
adc
mov
sarl
les
adc
nop
loope
dec
imul
xor
adc
fstps
and
sub
xor
or
add
mov
rcrb
and
stos
hlt
testb
push
dec
scas
leave
inc
mov
lock
inc
mov
stos
push
stc
int
push
rclb
aas
jb
jae
push
jo
xchg
std
dec
lods
int3
faddp
add
ret
pushf
add
int
jp
inc
cltd
fisubl
iret
cli
pop
js
cmpsl
lahf
dec
mov
jmp
cmp
add
jbe
aas
enter
inc
inc
pop
inc
jge
mov
ret
shll
push
mov
dec
fsubrl
je
and
jns
lahf
out
jge
imul
lods
dec
clc
test
pop
sub
std
out
pop
fisubrs
sahf
jmp
push
or
imul
fs
decl
dec
rolb
xchg
inc
sbb
cmp
int
xor
js
filds
rcll
dec
iret
jne
cli
jnp
pop
imul
stos
movsb
inc
xor
lds
mov
lea
repz
daa
jg
mov
sbb
arpl
push
cmpb
xchg
mov
dec
lret
mov
mov
fidivl
mov
ret
mov
leave
jb
js,pn
mov
lds
ljmp
and
test
mov
pop
cmpb
push
mov
push
daa
xchg
subw
dec
imul
outsb
inc
cmp
jl
cmc
sub
pop
sub
das
sar
xor
xor
inc
xchg
or
inc
mov
add
add
mov
cmp
sbb
clc
jl
inc
lods
ss
insl
cmp
pop
testl
mov
mov
into
jle
lret
and
jo
jmp
int
fldl
out
push
pop
testl
mov
ja
xor
or
fdiv
sbb
cmp
or
mov
fistpl
cli
push
adc
into
adcl
xchg
adcb
sub
xchg
cmp
sbb
fs
jmp
cmpsb
dec
and
xchg
ret
aad
cmp
mov
mov
icebp
and
and
xchg
push
inc
push
push
jnp
mov
and
jp
cmp
sub
cmp
sbb
nop
mov
imul
fsubp
hlt
adc
xor
dec
pop
and
call
mov
mov
scas
or
lret
repnz
outsb
and
mov
cmpsl
pop
sub
pop
adc
imul
test
and
repz
mov
dec
pop
mov
ljmp
in
call
mov
push
frstor
das
jmp
ljmp
rorl
lret
test
xor
mov
out
push
lods
cmp
stc
dec
jno
movsb
xor
pop
scas
inc
decb
fldt
add
std
add
mov
rcrb
mov
aas
in
push
pop
stos
fsubs
sbb
cli
test
fmul
cmpsb
pop
sbb
mov
add
add
push
mov
cmp
inc
mov
std
jg
aaa
jo
push
and
fxtract
jo
push
test
cld
jmp
aam
lds
lock
ret
js
sub
jle
dec
mov
es
pusha
jo
mov
pop
data16
stc
hlt
pop
outsb
dec
movsl
push
sub
jg
lock
xchg
push
mov
mov
push
ja
shll
sub
add
mov
imul
sbb
xchg
sub
pop
or
clc
lret
dec
inc
xchg
jno
or
dec
jp
ja
imul
in
test
mov
xlat
xor
les
fwait
mov
dec
sub
call
imul
pusha
nop
jmp
daa
les
cmp
je
daa
mov
xchg
icebp
xor
sub
fwait
loope
test
push
cld
cmp
or
scas
sbb
enter
mov
sub
adc
movsb
and
jbe
and
adc
std
or
in
xchg
arpl
push
or
dec
ficoml
ret
hlt
fmuls
sbb
inc
sub
jg
mov
mov
fisttpl
mov
loopne
leave
out
and
or
nop
aad
into
lds
jae
addr16
lret
and
cmc
adc
daa
addl
jg
sahf
rcl
add
fdivp
neg
jne
leave
xchg
and
ret
int
jge
jmp
fs
dec
pop
pop
mov
mov
xchg
cmp
mov
iret
jae
js
or
jo
cli
mov
sbb
into
repz
cli
and
stc
or
mov
aaa
leave
jge
mov
jp
out
xor
data16
filds
dec
adc
nop
pop
push
add
movntps
xchg
mov
cld
mov
push
cmp
adc
std
cmp
mov
es
ja
dec
jg
inc
adc
pushf
jno
movsl
sbb
mov
popa
sti
push
pop
js
xor
imul
inc
int
push
inc
jbe
mov
loop
xchg
repnz
fcoms
cltd
fsubrl
scas
xchg
jg
mov
pop
xchg
xor
leave
out
push
cmp
lea
cmpsl
push
xchg
mov
and
mov
cmp
sbb
int3
push
in
lea
or
std
dec
mov
and
mov
ret
mov
fcmovnu
rorb
or
shll
data16
insb
sub
hlt
push
mov
lea
sub
add
iret
xchg
push
xor
loopne
pushf
sub
fwait
sub
pop
mov
ja
scas
clc
dec
rolb
ror
mov
orl
mov
out
adc
leave
add
roll
and
adc
lcall
push
jne
inc
int3
cmp
out
pop
xchg
stc
dec
mov
xchg
or
scas
fistpl
jmp
pop
adcb
jmp
mov
int
fidivs
dec
push
into
in
mov
push
popf
and
aam
cmp
outsb
sbb
cmp
jb
dec
pop
arpl
lods
sbb
stc
int
xorl
push
rolb
sub
into
pop
std
shlb
cmp
iret
cmp
cmp
xor
arpl
jl
lods
mov
xor
sbb
jbe
dec
jb
insb
sbb
push
xchg
iret
shlb
add
cmp
popa
jns
dec
mov
mov
test
xchg
popf
pop
sub
movsl
bound
push
fldl
movsb
add
scas
pop
xchg
push
mov
add
mov
fdivrp
or
mov
js
neg
cli
sbb
subl
out
popf
add
scas
aam
add
dec
adc
fwait
adc
xchg
addr16
movsb
inc
ds
ficoml
test
repz
mov
fldl
inc
sub
adc
push
orl
arpl
sahf
ljmp
xor
mov
ret
jbe
mov
jnp
adc
movb
je
fstpt
or
cmp
cmc
sub
rolb
mov
incl
les
divl
in
mov
adc
fwait
jg
push
mov
push
repnz
sbb
mov
mov
xchg
cmp
lods
cmpsl
hlt
pop
mov
int3
lock
or
xlat
and
stos
out
int3
dec
ret
mov
or
push
mov
push
dec
or
testb
iret
jmp
das
push
jnp
jl
out
sbb
insb
sub
pop
jb
pop
mov
or
mov
incb
pop
addr16
rcrl
push
jb
xchg
repz
xor
insb
add
clc
adc
rorb
jmp
nop
xchg
mov
sbb
mov
inc
push
mov
jmp
imul
imul
leave
cmpsb
testb
sarb
insb
push
es
aad
sub
adc
sti
dec
test
aad
stos
mov
xor
repz
sub
and
add
mov
rorb
sub
xorb
cwtl
lock
mov
mul
mov
add
test
mov
ret
lock
mov
sbb
loope
hlt
and
mull
sar
and
dec
in
cmpsl
into
push
pop
mov
or
mov
mov
mov
adc
cmpsl
stc
stos
subb
dec
fsubrp
push
jg
loop
jns
sbb
and
mov
push
inc
stos
sbbl
cmpsl
dec
xchg
adcl
bound
cs
sub
addb
rcrl
in
into
mov
push
jns
pop
or
out
sub
adc
xchg
mov
dec
les
gs
cltd
sub
xchg
aad
lods
mov
repnz
lret
dec
pop
dec
inc
sub
xlat
jl
xchg
xchg
adc
lods
dec
cmp
mov
movsb
xchg
dec
imul
xor
sub
xor
aam
xor
pusha
push
add
mov
mov
inc
sbb
or
andb
xchg
stc
push
mov
pop
adc
ja
mov
xchg
cs
sti
mov
push
inc
xor
fs
pusha
ljmp
xor
add
fcomip
mov
iret
mulb
jne
imulb
sahf
xchg
push
je
aad
jle
mov
mov
mov
inc
push
loopne
rcrb
insl
and
lock
lahf
xor
popf
dec
dec
mov
stos
inc
ja
aaa
enter
or
dec
clc
pop
ljmp
dec
nop
std
and
xchg
or
mov
addr16
fcoml
sub
xchg
out
jo
mov
mov
push
lret
in
roll
int
inc
push
inc
mull
dec
sti
lahf
ficoml
call
mov
jp
or
pop
mov
loope
aad
clc
inc
flds
mov
cmp
xchg
cs
mov
sbb
add
push
cmp
cmp
inc
hlt
add
loop
mov
fcompl
sub
std
imul
xchg
test
mov
jnp
les
icebp
fwait
pop
pshufw
push
or
jnp
fnsave
sub
mov
pop
idivb
sahf
dec
enter
mov
stos
pop
and
mov
rcrl
xor
popa
dec
icebp
repz
gs
xchg
popf
jnp
mov
pop
movsl
pop
mov
xchg
jp
fiadds
pop
mov
iret
add
jecxz
pop
andl
xlat
dec
imul
pop
sbb
jp
ljmp
pusha
inc
dec
push
xor
fwait
pop
imul
cmp
icebp
scas
clc
xchg
gs
shlb
sbb
jp
add
xor
bound
lea
data16
fnsave
fs
decl
je
mov
test
mov
sbb
pusha
daa
test
fstpt
dec
xor
icebp
rolb
inc
insb
mov
cltd
xchg
aad
cmpsl
es
lret
jae
gs
or
mov
push
push
add
sub
cli
push
mov
mov
adc
lods
add
jecxz
ss
dec
stos
insl
scas
outsl
push
cmp
cmpsl
shl
mov
push
sub
shll
dec
jl
stos
or
and
cs
push
push
adc
insb
mov
mov
ss
imul
lret
xchg
pop
inc
inc
push
or
or
xor
pushf
lods
arpl
jno
std
xchg
or
ss
push
insb
movsl
ljmp
shr
mov
sbb
push
cmpsb
mov
outsl
adc
fnstenv
sub
jp
les
sahf
and
std
sbb
std
cwtl
lods
add
dec
scas
insl
xchg
insl
test
adc
inc
lret
and
lods
in
into
mov
es
adc
lret
cmp
cmp
lret
adc
dec
push
pop
add
arpl
jge
mov
inc
cmpsl
mov
xchg
push
xchg
ret
enter
inc
inc
les
lret
pop
ja
scas
push
lret
lea
pop
push
or
lret
ret
jge
cmpsl
mov
inc
sub
pop
inc
cmp
movsl
lods
int3
imul
cmp
inc
gs
fimuls
adc
std
outsl
xchg
lods
imul
lods
adc
xchg
sbb
xchg
xchg
lods
xchg
test
cld
jb
mov
pop
jmp
cmp
outsl
pusha
test
add
aam
pushf
cmp
fimull
shlb
inc
jnp
pop
mov
inc
xchg
xchg
cs
mov
leave
adc
daa
and
daa
cld
pop
and
xlat
adc
adc
xor
faddl
loop
pop
fildl
sbb
les
mov
out
in
or
or
les
cmp
push
movsl
xorl
dec
push
adc
dec
stc
dec
push
outsb
lcall
lcall
sub
mov
or
push
push
lret
movsb
fcos
in
push
jns
test
mov
add
or
mov
repnz
shll
inc
jno
push
mov
add
mov
jnp
jns
mov
adc
inc
mov
sar
add
dec
inc
loopne
jl
sahf
out
jne
sbb
test
jb
inc
sahf
cmpsb
dec
xchg
xor
add
out
or
cwtl
sar
pop
or
ja
addr16
push
and
xor
lret
mov
int3
orl
fwait
pop
pop
out
les
scas
add
lahf
popf
shll
ss
mov
cli
mov
cmp
ss
xchg
dec
adc
in
xor
and
test
and
adc
rorb
cmp
fucomip
in
pop
orl
cmp
xlat
and
sti
adc
cmp
jmp
loopne
mov
add
or
dec
jmp
jb
hlt
mov
push
xchg
fs
ret
dec
das
cwtl
sbb
push
aam
nop
rcrb
aaa
rcll
mov
mov
int3
in
scas
test
add
mov
rcrb
fbld
xor
push
sbb
out
outsl
orb
mov
sbb
sahf
push
insb
pushf
push
mov
adc
sub
scas
inc
repz
mov
mov
dec
nop
push
js
mov
adc
les
loope
jo
jmp
cmc
pop
js
in
inc
xorl
cli
xor
xor
aam
push
jmp
lret
add
test
loopne
ret
jo
mov
pushl
das
pop
mov
cmp
cmpsl
outsl
icebp
cld
rolb
and
lcall
jg
and
inc
and
add
cmp
pop
pop
sbb
inc
cwtl
sub
adc
cmp
ja
sbb
push
enter
mov
inc
ja
in
mov
dec
mov
fisttpl
push
cmc
movsb
andl
xchg
fs
sarl
adc
scas
loop
mov
jbe
lahf
int
jno
sahf
lahf
cmpl
popa
pop
ljmp
cltd
inc
mov
inc
fdivrl
cmp
push
xor
mov
push
push
adc
movsl
bound
dec
int3
mov
std
rcll
js
sbb
idivl
mov
sbb
cwtl
mov
xor
inc
loop
push
fwait
test
cmp
and
adc
jge
clc
inc
mov
out
fld
adc
in
fcmovbe
insl
lods
and
xchg
jmp
sub
pop
std
mov
xchg
xor
aam
push
and
cmpsl
jge
movsb
dec
mov
and
mov
mov
mov
cs
inc
xlat
popa
mov
add
sub
jl
pushf
xor
xchg
adcb
pop
out
fwait
outsl
mov
mov
shlb
push
je
sub
jo
ss
fadd
pop
ja
dec
ficomps
xor
cmpsl
shrb
dec
js
sar
adc
fwait
jl
leave
jge
sub
mov
mov
sub
cli
mov
push
mov
xor
xchg
sbb
dec
int3
cltd
mov
sbb
pop
iret
loop
and
gs
jnp
enter
ret
xchg
enter
fwait
sub
fs
loope
in
mov
cmc
sbb
roll
sbb
and
inc
dec
jecxz
pop
and
shll
test
mov
int3
loope
icebp
xchg
cld
popf
rorb
and
in
inc
les
dec
int3
fsubrl
aam
jb
or
sub
movsb
and
adc
sahf
sarb
stc
pop
rolb
ds
enter
stos
call
jge
adc
ljmp
ret
out
std
mov
mov
leave
jmp
dec
leave
and
movsl
add
jp
aad
fdivl
jle
cmp
xchg
clc
enter
mov
nop
movl
or
loope
pextrw
pop
adc
shrl
rep
lods
mov
adc
cmp
dec
dec
cmp
and
jmp
adc
pop
dec
shll
xorl
xchg
pop
es
xlat
enter
shrl
sbb
pop
pop
loope
in
mov
pushf
pop
xor
push
and
ja
xor
shrl
outsl
mov
jg
pop
push
inc
xor
sbb
mov
lods
xchg
sub
ret
xchg
ja
je
fcmovnbe
jmp
out
cwtl
lods
add
or
clc
inc
out
fwait
add
sbb
inc
sub
push
rcr
and
mov
xchg
cld
jge
or
push
xchg
mov
and
or
aas
sub
push
sti
pusha
inc
push
dec
test
sbb
movsb
enter
push
lcall
pushf
mov
popf
adc
lods
inc
mov
lret
loop
dec
pop
in
mov
adcl
jmp
and
adc
cmp
mov
shll
nop
sub
inc
shlb
and
mov
in
enter
cmp
ret
dec
inc
add
shlb
dec
loopne
mov
sbb
adc
inc
imul
mov
add
ret
mov
push
roll
mov
mov
add
xor
cwtl
xor
and
jg
push
mov
or
push
mov
jle
in
cmpsl
inc
in
push
sti
les
lods
jg
sbb
or
push
sub
sub
ret
loopne
lcall
roll
lea
or
and
lods
test
lret
inc
pop
ss
inc
or
jo
xor
popa
jne
aas
xor
data16
repnz
mov
jecxz
or
pop
pop
xchg
loope
outsl
jb
lods
call
xchg
clc
lret
cmpsl
dec
ret
dec
ljmp
mov
cmp
bound
xchg
xchg
sub
outsb
sub
jecxz
daa
mov
rcr
mov
or
jns
cmp
inc
fcomps
rcrl
xor
dec
mov
shl
inc
call
in
xor
popf
cmp
mov
daa
je
popa
ss
subl
lahf
sbb
mov
adc
in
push
adc
lock
pop
test
ret
mov
outsb
mov
add
shrl
fcmove
push
nop
lret
pop
mov
dec
ds
xor
sbb
lock
jnp,pn
insb
mov
dec
nop
fcoml
jmp
leave
xchg
push
cld
xor
nop
rcll
fmuls
add
popa
push
stc
lret
push
inc
inc
clc
outsb
addps
enter
cmp
scas
inc
fs
pop
pop
sbb
inc
cmp
dec
sbb
mov
adc
and
leave
ljmp
imul
ds
shrl
pop
popf
sbb
jns
in
nop
adc
dec
ret
arpl
aas
hlt
ficomps
es
stos
ljmp
repz
push
mov
mov
test
aas
and
mov
adc
jp
lods
mov
stos
sbb
clc
add
jecxz
sub
add
adc
push
ret
mov
clc
leave
rclb
jmp
aas
mov
mov
xchg
mov
mov
xchg
pop
popa
add
jle
outsb
sub
mov
jg
sbb
hlt
leave
fistps
int3
mov
pop
dec
mov
and
mov
dec
fists
rcl
gs
arpl
xchg
aad
xchg
data16
pop
in
test
jb
cld
rorl
mov
push
mov
sub
sbb
pop
pop
lds
add
fcmovnu
adcb
cli
jge
push
jg
and
jne
jg
adc
shll
jmp
lret
inc
ret
outsl
movsb
cld
sub
inc
or
jle
add
loopne
fs
adc
or
mov
mov
int3
fists
pop
divb
cmp
es
mov
je
jae
jg
cwtl
add
sbb
loope
std
or
mov
mov
hlt
xor
jns
int3
xchg
cmp
test
inc
cmc
aam
addl
mov
lahf
dec
cmc
movsl
rolb
jle
int3
dec
or
scas
lret
sub
ds
js
mov
subb
cs
mov
in
push
adc
sar
sbb
in
inc
xor
xor
adc
js
add
push
inc
mov
xor
sub
rcrl
push
test
mov
lahf
pop
test
dec
dec
pop
and
idivb
lret
sahf
mov
add
add
pop
mov
popa
pop
cwtl
inc
in
stos
hlt
mov
shr
or
pop
adc
enter
add
mov
ret
and
sbb
pop
into
fcoms
cli
sub
xor
mov
imul
sub
or
lds
sahf
jns
ljmp
daa
cmp
jl
pop
pop
jne
mov
inc
dec
and
rcrb
dec
pop
adc
add
out
cmp
and
or
movsb
push
pop
ja
dec
fdivrl
test
pop
pushf
subb
stos
in
jge
lcall
scas
and
mov
pop
sbb
cwtl
arpl
mov
pop
stos
mov
and
pop
loope
cmp
hlt
mov
jmp
inc
or
stos
inc
xchg
push
mov
hlt
pop
pop
mov
xor
or
les
bound
adc
sub
test
jne
pusha
rolb
outsb
jnp
ljmp
orl
mov
dec
sub
adc
mov
cmp
int3
cmp
rorb
mov
xor
xorb
int
dec
add
lea
dec
outsl
xchg
jns
xor
fcompl
pop
sub
movsb
cld
aad
xchg
call
jl
lcall
movsb
mov
je
lcall
les
xor
cmp
insb
cmp
in
and
dec
jnp
adc
xchg
cmp
pop
mov
ficoms
sub
xlat
imul
insl
fwait
sarb
test
out
out
xchg
cs
mov
cmp
aad
shll
jmp
ja
xchg
lret
aaa
inc
ret
cmp
cmp
add
lcall
jle
add
dec
xchg
insb
cmpsl
mov
push
mov
dec
outsb
cmpsb
sbb
pop
push
sti
mov
jle
add
add
hlt
sbb
xchg
cmp
inc
cs
dec
pop
dec
ret
out
fdivrs
enter
cltd
aad
shrl
aas
push
sub
add
rcll
movsb
in
cmp
jecxz
push
adc
and
cld
mov
fs
int3
mov
inc
gs
std
lret
out
pushf
imul
jge
fstl
inc
cmp
sub
and
xor
imul
mov
jbe
imul
test
scas
inc
loope
xor
std
xor
mov
js
int3
pop
push
mov
push
lret
jnp
iret
lea
nop
jo
rcl
aam
fdivrl
in
and
int3
test
lcall
and
fdivrl
pop
test
or
scas
ljmp
cmp
mov
loope
jle
jg
sbbb
push
pcmpgtd
pop
jmp
lock
push
push
mov
cmp
jg
push
je
xchg
push
inc
xor
test
inc
dec
pop
adc
and
mov
push
xchg
cltd
xchg
xor
pop
arpl
pop
js
mov
dec
push
lock
xor
out
xor
fisubrl
cmp
shl
leave
pop
fcmovnb
pop
xchg
aas
cmp
mov
mov
xor
out
out
add
imul
adc
jg
aas
inc
mov
int3
mov
mov
icebp
adc
outsb
jns
and
sbb
mov
or
add
ljmp
mov
rclb
aam
xchg
pop
sub
xchg
das
ljmp
insb
xchg
adc
les
mov
cltd
gs
xor
jl
loope
rclb
add
mov
cmp
inc
push
add
push
xor
mov
mov
or
push
pusha
idivb
mov
inc
loopne
jmp
cmc
hlt
mov
int3
shl
xor
adc
test
push
jno
pop
js
add
out
scas
adc
jb
cmp
jl
js
ret
out
stos
mov
add
cmp
outsl
sbb
mov
add
loop
pop
push
inc
mov
pop
jnp
dec
lds
outsb
xor
jne
insb
lock
pushf
rcrl
mov
dec
popf
push
daa
mov
push
and
in
cmp
cmp
sbb
leave
pop
cmp
adc
test
xchg
movl
loope
lods
cmp
lret
mov
push
adc
dec
stos
inc
adc
imul
inc
mov
mov
cmp
std
mov
and
movsb
call
dec
jp
dec
cmp
js
or
mov
push
aaa
or
ficompl
cmc
sbb
pop
lods
adc
mov
cmp
jmp
rcr
cmp
sahf
xchg
sarb
ret
jle
ss
cwtl
jns
pop
in
stos
movsl
adc
lahf
shll
mov
add
inc
ret
jns
movups
pop
xchg
out
jp
ds
popf
dec
lods
mov
adc
sbb
dec
mov
lret
pop
sub
xor
and
xchg
gs
ljmp
push
inc
jne
cmp
fldl
or
push
aaa
jecxz
fidivrs
pop
enter
mov
fisubl
movsl
pop
cli
or
insl
dec
xor
mov
xchg
mov
and
ret
jmp
test
sub
lret
jnp
push
shrb
inc
pop
jb
addb
jo
push
out
adc
sbb
nop
cmpsb
add
or
lds
add
in
mov
add
pop
xlat
in
inc
int3
incb
out
hlt
mov
je
jbe
add
xchg
jbe
jbe
jb
aad
in
push
xchg
lahf
std
fwait
mov
hlt
sub
in
scas
es
or
loopne
fs
ret
inc
pop
loopne
repnz
or
pop
test
stc
adc
aam
and
test
xor
je
mov
jne
jb
cs
lret
push
push
dec
inc
push
sbb
sub
cwtl
aam
sub
inc
pop
sbb
mov
fisttpll
lods
or
test
lea
sbb
pop
jb
fwait
pop
mov
je
es
jge
mov
push
lret
mov
out
sbb
and
test
cs
lcall
shl
mov
xchg
mov
or
out
pop
xor
ret
xchg
inc
jns
or
out
and
cmp
jbe
xchg
mov
ss
insl
shlb
ja
mov
test
lods
ret
neg
data16
rorb
mov
dec
leave
mov
lods
sub
inc
lods
pop
or
nop
mov
cmp
ljmp
jle
lcall
rorb
sti
mov
aas
aas
mov
lds
popf
andb
dec
inc
mov
and
cmp
insb
sarl
xchg
jge
dec
cmp
fildl
mov
sahf
push
mov
andl
xor
fsubrl
cld
dec
add
cmpsl
into
sbb
mov
lahf
flds
sub
outsl
out
popa
aas
mov
in
push
lods
inc
pop
addr16
mov
cwtl
addr16
loop
insb
pop
adc
jno
shrl
repnz
dec
xor
pop
aas
add
xor
aaa
push
sbb
arpl
sub
aas
rol
aad
gs
cmc
pop
pushf
lcall
mov
ljmp
mov
mov
hlt
mov
inc
sbb
stos
cltd
jb
xchg
dec
pop
push
mov
daa
jae
inc
add
xchg
xchg
add
nop
add
dec
cs
shll
mov
test
jae
add
push
add
cmp
xor
pop
insb
pop
sub
repnz
cltd
add
and
mov
xchg
mov
adc
add
sub
lea
mov
shrb
leave
rcll
test
xlat
dec
ret
fistps
sub
jnp
shlb
xchg
sbb
adc
flds
pusha
jge
int3
icebp
jl
addr16
push
in
add
dec
lret
sub
test
icebp
leave
idiv
pop
dec
xchg
dec
fbstp
ljmp
call
mov
sbb
cld
xchg
mov
sbb
nop
add
ret
mov
mov
loop
push
add
sbb
int
mov
pop
fiadds
sbb
jp
jecxz
mov
sub
gs
sarb
mov
mov
stos
xchg
movsl
jns
icebp
mov
es
or
xchg
movsb
in
popf
sub
push
mov
jl
mov
std
sbb
call
add
mov
lcall
outsl
inc
adc
aaa
xlat
fsubs
mov
fsubs
stos
movsb
inc
dec
add
sub
loop
ljmp
dec
push
xchg
adc
sub
mov
inc
sbb
in
push
test
testl
mov
in
cmp
push
xchg
or
mov
jnp
cli
cmp
arpl
inc
ret
pop
scas
sti
xor
sub
rcrl
mov
add
sub
popf
and
lock
stos
inc
jmp
lret
pusha
cwtl
and
movsbl
fadd
sub
mov
movzbl
mov
imul
or
std
mov
jle
neg
mov
rcrb
jno
adc
aas
pop
cmpsl
jnp
dec
jmp
stos
xor
cwtl
call
mov
inc
mov
sub
je
push
xor
orl
sub
mov
scas
jge
and
push
mov
cmp
cli
or
jno
dec
cmp
call
jae
shlb
and
int3
addr16
test
mov
adc
sub
scas
mov
push
cmpsb
mov
gs
mov
clc
cli
ret
sbb
es
xchg
and
pop
aas
mov
in
das
mov
lret
add
inc
push
add
movsb
movsb
cmp
imul
or
adc
mov
cwtl
cwtl
fsubs
ror
mov
cwtl
fdivl
mov
sub
dec
mov
mov
dec
xchg
insl
xchg
out
inc
sub
ja
xchg
popa
and
add
subl
jp
adc
jl
mov
pop
and
pop
xchg
hlt
dec
repnz
xlat
mov
shll
cmpsl
xchg
in
mov
mov
inc
sbb
lret
stos
and
sub
adc
mov
xor
cld
addr16
mov
lea
gs
sub
mov
test
lret
mov
mov
test
mov
mov
cltd
cmc
pop
addr16
dec
inc
xchg
and
lds
decl
adc
ficoml
rolb
insl
jecxz
ja
loope
sub
inc
add
nop
dec
aaa
dec
jg
std
cmp
cmp
pop
sub
jbe
jp
xchg
popa
mov
lahf
mov
xchg
enter
pop
mov
cmp
loopne
add
mov
movsb
fsts
lcall
inc
add
dec
dec
inc
int
push
les
inc
mov
mov
fdivr
xor
leave
xor
inc
ljmp
inc
daa
in
cmp
sbb
testl
shll
cmp
iret
add
xchg
adc
ret
mov
sub
jnp
fsubrl
jecxz
and
push
pop
rcr
inc
jmp
pop
dec
lahf
adc
cwtl
mov
subl
xor
inc
leave
mov
dec
lods
add
jecxz
pop
loop
imul
add
ret
in
cmp
jo
psubd
sub
jecxz
paddusw
out
stos
jns
pushf
dec
ret
sub
pop
cmp
or
or
push
cmpsl
sub
idiv
mov
jg
dec
outsb
fs
fwait
xchg
lea
orb
pusha
pop
and
jnp
xchg
imul
adc
sub
popf
inc
fadds
mov
cwtl
lret
shlb
clc
dec
adc
nop
mov
gs
loop
dec
xchg
xchg
shr
xchg
and
addb
push
lds
pop
mov
and
into
movsb
mov
cmp
lahf
mov
lret
fwait
pop
and
sub
sahf
fwait
pop
add
lea
pop
pop
imul
xchg
sti
jns
jo
pop
pop
mov
test
shll
adc
imul
add
jmp
xorl
dec
dec
lret
or
or
jge
jnp
inc
jl
mov
lret
cwtl
insb
mov
shlb
lahf
ret
sbb
rcrl
jl
pop
xchg
pop
fisttpll
mov
dec
scas
or
shlb
fdivrs
jno
fdivs
inc
and
pop
out
cld
ss
addr16
push
xchg
inc
ljmp
into
xchg
pop
sub
aad
mov
xchg
dec
lods
cli
stos
jmp
xchg
sub
cli
mov
cltd
jle
inc
adc
pop
pop
cltd
pop
add
jl
mov
sub
js
pop
or
mov
pop
hlt
inc
and
sub
jbe
sub
in
mov
cmp
mov
in
lret
aam
fldl
insb
stos
lcall
pop
adc
popa
outsb
sub
cmp
push
adc
pop
xchg
clc
push
jp
mov
stos
cmp
and
sar
and
stc
xlat
mov
ss
out
jb
cmc
in
je
not
jbe
clc
aam
dec
frstor
pop
and
shr
add
and
rolb
fcoml
lcall
xor
stos
push
xchg
mov
das
aas
popf
mov
dec
xorl
popf
bnd
cmpsb
inc
add
xor
or
mov
add
es
in
and
push
cmp
mov
shl
lahf
ds
sti
inc
inc
outsb
rorb
mov
sbb
jge
into
dec
pop
aas
shrl
mov
icebp
fcmovnb
sar
mov
xchg
mov
test
mov
nop
sbb
jg
cmp
cmpsb
aam
shrb
and
mov
push
imul
and
adc
stc
add
insl
and
xchg
cmc
jnp
aad
cmpsl
jb
mov
repz
sbb
and
in
inc
test
lcall
lahf
sti
add
pop
movsb
mov
inc
fidivs
in
mov
fisubl
imul
xor
dec
pop
jnp
jecxz
cmp
fwait
add
into
or
in
adc
scas
push
jmp
cld
sub
cmp
jl
cwtl
cwtl
fimuls
in
repz
dec
orl
xchg
fldt
jo
pop
jae
push
push
insb
pushf
cmp
hlt
test
or
imul
rcrb
cmp
xchg
pusha
xor
inc
rol
add
xchg
nop
fiaddl
mov
inc
inc
jl
inc
std
xchg
mov
jns
push
xchg
fcmovbe
iret
xchg
nop
das
leave
rorb
sbb
es
mov
mov
in
sbb
sub
les
cmp
aas
scas
push
iret
cwtl
pop
into
notb
imul
inc
sbb
mov
mov
mov
leave
inc
stc
fsubrl
xchg
jo
cld
cmpsl
cmpsl
pop
mov
outsl
mov
and
in
sbb
jle
xor
js
sar
leave
jg
lds
jg
add
leave
test
mov
rclb
lea
cld
andl
repz
movsb
mov
push
jecxz
and
mov
outsb
push
inc
dec
stos
movsb
add
pop
fnstsw
pop
out
cld
jmp
into
jl
loopne
lds
icebp
jnp
mull
mov
enter
je
and
mov
fadds
mov
mov
push
cmp
and
add
mov
add
and
incl
cmp
mov
mov
jo
add
jg
ljmp
mov
xor
ljmp
jae
es
rol
push
enter
or
xchg
out
std
and
lock
fcoml
dec
sub
leave
xor
add
in
cmp
aaa
jns
out
jge
js
call
and
xchg
cmp
in
aas
ds
jge
mov
mov
xchg
jle
aas
lea
cmp
sbb
les
ret
push
out
shrb
imul
dec
adc
pop
cmp
adc
sub
fidivrl
dec
jp
sbb
mov
mov
inc
pop
adc
pop
and
ljmp
push
jnp
fmul
jbe
les
dec
int3
rcl
push
shll
sub
inc
addr16
pusha
lahf
nop
or
call
xor
inc
aas
test
jbe
or
pop
jbe
cmp
cwtl
movsb
cmp
dec
jo
pop
mov
jns
sub
les
iret
xchg
iret
jns
jns
pop
aas
cmp
nop
lock
dec
jns
pop
pop
mov
sub
test
inc
jl
shll
push
fstpl
pop
test
imul
or
jle
inc
push
sub
popa
xchg
lods
push
movsl
sbb
mov
cmp
fnstenv
and
mov
cmpsl
add
add
fstps
mov
ds
dec
cmp
jae
or
mov
leave
pop
jae
scas
jl
sub
mov
movsl
jecxz
mov
cmpl
jl
push
adc
xorl
gs
call
adc
sbb
xlat
es
and
mov
out
sub
test
pusha
out
cli
add
icebp
cwtl
and
flds
jp
sahf
ret
sub
insl
in
test
or
cmpsl
mov
cmp
je
jge
andb
in
jge
fs
adc
arpl
int3
and
fwait
inc
jno
bound
or
mov
cwtl
fdivrs
xchg
pop
fadds
or
in
cltd
rcll
mov
addr16
jo
std
pop
rcrb
jg
and
adc
sahf
pushf
mov
mov
and
popa
or
fsubs
rcll
mov
ret
mov
or
xchg
into
test
mov
andl
mov
movsl
fdivrl
mov
sbbl
pop
fcmovnb
jge
jno
test
mov
or
xor
int3
push
mov
jo
pop
mov
cmpl
sbb
pop
inc
xor
push
jg
ficoms
arpl
ss
sbb
addr16
add
xchg
mov
scas
lret
fwait
and
sbbl
mov
int
push
inc
inc
data16
push
das
pop
pop
clc
push
in
lahf
jle
lret
pop
cmp
jg
mov
dec
sbb
enter
push
scas
cltd
stos
inc
iret
and
in
fbld
fnsave
shll
sbbl
in
shrl
mov
leave
jge
xchg
mov
movsb
jmp
shll
mov
pop
mov
lds
leave
xor
in
out
sti
int3
jg
inc
xor
sub
or
and
ss
mov
mov
cmpsb
push
movsl
or
pop
xor
jg
mov
push
clc
adc
cmp
fdivs
gs
adc
push
mov
js
fcmovnb
cli
cwtl
adc
push
jnp
cmp
push
repnz
jnp
xchg
scas
jmp
xor
mov
in
fisttpl
sbb
mov
scas
icebp
xor
jg
loop
mov
lds
cmp
push
ficoms
jmp
mov
sbb
shrb
lea
dec
daa
cld
sbb
out
andl
xchg
mov
jmp
jmp
dec
push
lret
xchg
stos
sbb
out
loope
pop
enter
sub
pop
cmp
pop
or
inc
aas
cmp
push
sub
cltd
jo
cwtd
je
cmp
cld
fistps
std
pushf
ret
lds
add
loop
lea
sub
les
sbb
test
ljmp
mov
iret
pop
and
ret
ret
sbb
mov
stos
ds
rol
fistpl
add
rolb
lods
bound
mov
sti
inc
fcoml
sub
mov
in
fistpll
test
xor
pop
inc
ja
js
out
icebp
mov
pop
sub
les
and
add
mov
cmp
push
test
pop
imul
lods
dec
inc
iret
mov
jae
cmpsl
mov
test
dec
testb
loop
in
loop
mov
out
and
insb
sub
cld
in
xchg
pop
pusha
std
sahf
push
mov
jecxz
cmp
stos
in
mov
test
in
add
cmp
pushf
jno
scas
insl
mov
movl
xor
pop
dec
inc
hlt
cmc
je
js
mov
fs
pop
inc
fidivs
sarb
das
sbb
ret
xchg
dec
dec
fsubl
fucomip
or
shll
pop
sub
cmp
jmp
jb
outsb
pop
inc
mull
mov
xor
xor
and
loopne
inc
sbb
mov
mov
adcl
push
mov
aaa
pusha
cmc
ret
rol
rorb
xchg
lea
in
add
scas
cmp
stc
mov
inc
shrb
sbb
or
or
repnz
les
cli
mov
cmp
sbb
mov
sub
ds
dec
mov
xchg
dec
mov
adc
sbb
je
pop
aas
clc
cmp
cmp
jg,pn
lods
hlt
lods
xchg
pop
cltd
clc
cmp
or
jnp
pop
sbb
fildll
aad
xor
lock
hlt
les
adc
les
push
out
inc
and
aad
mov
add
loop
inc
push
insl
fwait
sti
inc
inc
test
pop
cmp
pop
sbb
leave
jge
and
jle
push
lcall
int
add
xchg
mov
mov
loope
and
or
cmp
and
les
mov
push
xor
sbb
lcall
mov
sbbl
nop
mov
cmpsb
pusha
ljmp
hlt
ret
jae
orb
sub
mov
sbb
and
sbb
call
mov
lods
mov
jp
aam
iret
mov
into
and
arpl
dec
and
cs
add
scas
pop
jp
mov
push
bnd
mov
call
nop
sbb
call
in
aam
ds
and
mov
jge
cmpsb
inc
inc
mov
in
jne
js
jb
divb
imul
addr16
sub
adc
jns
cmp
int
pushf
pop
frstor
out
xor
push
pop
aas
out
lds
jg
sub
xchg
xlat
pushf
jecxz
pusha
cmp
add
orl
pop
jp
enter
int3
cmp
shll
adc
imul
sbb
fldt
pop
adc
pop
cmp
mov
pop
shll
or
and
add
xchg
gs
repnz
dec
push
inc
nop
cmp
mov
inc
loopne
jmp
push
inc
jns
pop
or
cmp
stc
or
ja
out
dec
mov
repnz
mov
fnsave
ja
arpl
xchg
sbb
movsb
dec
or
dec
out
add
arpl
stos
cmp
inc
insb
dec
xchg
fsubl
sti
mov
sbb
rcl
es
or
cmc
mov
push
out
lods
packssdw
imul
push
fsubs
jno
cwtl
lret
sub
icebp
pop
es
sbbl
pop
sub
mov
sbb
pop
jecxz
leave
mov
movsb
scas
mov
or
fistpl
mov
stos
ja
mov
pop
loop
imull
cmp
lret
sub
js
sub
dec
xchg
pop
aad
cltd
cmp
lock
jle
mov
lret
push
xchg
iret
push
add
lds
inc
nop
loopne
jne
add
std
std
add
and
inc
test
push
int
xchg
inc
fmuls
outsb
pop
mov
aam
rclb
cmp
inc
aad
mov
xor
pop
rcr
pop
or
loopne
add
adc
xlat
or
sub
mov
adc
sbb
addr16
push
lds
pop
cld
lds
test
cld
outsb
xor
ficoms
jg
inc
das
in
adc
cwtl
rorl
dec
adc
rcrl
and
mov
inc
sub
xor
or
cmp
add
sub
lock
mov
test
inc
add
adc
pop
xchg
sbb
sub
bswap
mov
cmp
icebp
jmp
inc
add
sbb
hlt
and
popf
and
inc
fmuls
pop
inc
xchg
lds
add
stos
fisttpll
xor
mov
push
pop
cmp
add
push
test
dec
and
pusha
dec
mov
xchg
sbb
mov
rorb
lds
xorl
test
shrl
push
push
imul
in
fisubrs
popa
push
push
pop
mov
sbb
movl
push
stc
mov
or
jnp
lahf
jge
popa
cmpsl
bound
ficompl
cmp
mov
pop
inc
push
mov
faddl
or
lods
pushf
fdivrp
dec
pop
pop
or
and
clc
or
test
inc
pushf
pop
pop
in
lret
pop
jo
cmp
pop
lock
cwtl
pusha
icebp
adc
lock
push
loop
adc
push
neg
jo
imul
and
jp
leave
xchg
cmp
or
ret
mov
int3
out
push
enter
sub
dec
mov
push
icebp
loope
inc
mov
and
dec
test
sub
ret
sbbl
scas
add
enter
push
pop
movsl
adc
enter
pusha
stc
cwtl
mov
movsb
and
pushf
leave
xor
test
fwait
pop
and
or
push
outsb
ljmp
cltd
mov
flds
fwait
insl
inc
xor
and
and
pop
cmp
or
dec
mov
pop
add
inc
dec
jno
mov
dec
mov
std
pop
enter
cwtl
out
sub
insl
or
xchg
aam
xor
mov
adc
icebp
adc
push
cmp
ret
adcl
add
sub
mov
adc
lea
xlat
mov
and
push
jg
mov
fs
push
fs
into
push
xor
pop
pop
rcr
dec
adc
mov
inc
xchg
cmp
jno
in
lahf
mov
mov
pop
loopne
jp
jo
dec
test
adc
adc
lods
pop
mov
mov
inc
cmpsb
in
js
or
aad
xlat
sahf
incb
imull
cmp
shl
into
aam
data16
popa
insb
cmp
les
mov
popf
out
enter
shrb
push
or
jmp
mov
ret
push
mov
in
rol
ret
mov
dec
jb
loopne
push
cmovl
xchg
or
xor
cmp
xor
add
mov
xchg
jg
or
rclb
xchg
ds
xchg
dec
pop
xlat
push
lret
inc
insl
stos
mov
cmpsb
repz
xchg
push
dec
push
add
jmp
cld
pop
inc
int3
mov
sbbl
fisttps
jg
dec
les
lea
inc
fs
nop
jle
cli
push
cmpsl
mov
add
pop
cmpsl
add
cwtl
dec
xor
and
aam
int
cli
adc
mov
jo
out
fnstcw
ljmp
mov
inc
int3
and
cmp
or
fiaddl
fnstcw
or
xor
pushf
mov
cmpsb
jmp
jmp
xor
push
loop
nop
jb
jg
cmp
lods
out
inc
scas
in
inc
cld
dec
mov
in
fwait
push
in
push
call
int3
fwait
mov
or
leave
xor
mov
stos
std
mov
sub
stos
xor
sub
mov
mov
mov
inc
and
stos
xlat
cmpb
add
lea
and
inc
cs
mov
fs
jmp
lds
aaa
xchg
dec
cli
xor
loope
xchg
enter
clc
xor
xor
fwait
adc
sub
pop
mov
lea
cmpsl
xchg
push
loop
dec
xchg
add
mov
sbb
int
ss
mov
and
cld
mov
or
add
add
jle
xor
sbb
and
or
push
test
out
adc
int
inc
adc
ret
aad
gs
ficompl
or
pop
insl
and
hlt
mov
mov
subl
ds
pop
cwtl
shll
es
xchg
sub
inc
lods
rcrb
movsb
ds
add
xor
inc
add
xchg
stos
idiv
test
gs
mov
sub
pop
jp
xchg
dec
addr16
inc
xchg
mov
sti
out
pop
xor
shl
cmpsb
pop
xor
push
shll
inc
jnp
mov
xor
mov
movsl
push
aaa
fwait
xor
push
fstpt
cmp
ret
cmp
sbb
nop
adc
or
in
cwtl
mov
adc
mov
adc
cmc
test
hlt
out
das
add
and
push
insb
movsb
mov
sub
mov
loop
mov
call
mov
aas
adc
outsb
cs
cmpb
movsb
arpl
pop
loop
or
loope
mov
test
cmpsb
ds
jge
in
sbb
jns
leave
add
and
ficomps
lods
xchg
loope
mov
ss
cld
rorb
in
push
jge
imul
add
push
sbb
cmp
dec
out
rorl
adc
fimull
xchg
push
les
xor
ret
sahf
mov
push
xor
fwait
push
push
arpl
xchg
or
sbb
imul
mov
cmc
cs
outsl
push
mov
lea
int
pop
into
lcall
js
cs
jp
dec
sbb
xlat
xchg
fs
cli
arpl
cmp
insl
rcr
sub
mov
mov
sbb
mov
mov
jo
add
inc
js
fwait
inc
mov
and
cmp
sbb
xorl
imul
sarl
test
push
jnp
aaa
aad
or
pop
js
inc
nop
or
aaa
ja
pushf
xchg
push
xchg
cmp
ljmp
and
xchg
mov
cmc
enter
inc
inc
jmp
sahf
cmc
cltd
pusha
xchg
sub
xor
add
lock
lahf
popf
or
mov
clc
add
mov
lods
push
dec
cld
and
or
mov
jb
lret
aas
cwtl
test
and
pusha
cmc
mov
adc
in
sub
mov
mov
push
incl
rcll
sbb
jmp
xorl
movsl
push
and
movsl
test
out
cmp
loopnew
and
cmp
mov
test
pop
and
pop
sahf
cmp
enter
stc
popa
pop
clc
sub
dec
mov
movsb
push
jl
pop
jmp
dec
bound
iret
pop
add
lret
dec
loop
testl
pop
jg
imul
aad
test
pop
add
int3
bound
inc
pop
adc
pop
mov
lds
addl
jp
pop
pop
cltd
mov
fnstsw
jns
cmpl
adc
rorl
pop
ss
mov
ljmp
repz
cs
cmp
in
test
add
push
cmp
inc
and
in
pop
arpl
orl
inc
jne,pn
jns
ret
dec
loopne
mov
shll
addb
loop
push
lret
jno
mov
xchg
imul
imul
in
inc
sub
mov
scas
in
stos
mov
roll
cmp
popa
push
or
adc
mov
pop
or
and
jg
add
mov
mov
push
int3
add
std
loopne
inc
add
dec
jge
ljmp
into
aas
das
jnp
loope
fidivl
jns
xchg
outsl
mov
mov
ljmp
xchg
movsl
aam
mov
inc
je
clc
sub
ret
mov
dec
jmp
dec
inc
xchg
movsb
dec
rcrl
lret
notl
cwtl
les
pushf
sbbb
cmc
loope
loopne
jge
mov
orl
int3
faddl
mov
pushf
mov
ss
adc
mov
fistpll
xchg
add
or
rorl
sti
lahf
cmp
out
js
pop
mov
mov
stc
add
cld
bound
mov
fiaddl
jge
pop
and
jnp
cmp
inc
fcmovnb
nop
int
rolb
not
sbb
inc
das
rsqrtps
add
or
and
jl
mov
adc
ss
addl
icebp
xor
dec
add
mov
inc
es
daa
or
cmc
mov
fdivrl
push
stos
cmpsl
dec
jne
enter
subb
xchg
mov
and
mov
leave
jae
cmp
pop
fstpt
movl
cmp
jmp
cmp
push
sti
stos
ss
xchg
cmp
scas
aam
lahf
push
xchg
and
sahf
pop
movsl
enter
stc
mov
jecxz
lret
fiadds
adc
sti
inc
subb
js
cwtl
push
hlt
das
xchg
pushw
inc
or
sub
push
mov
mov
mov
gs
mov
add
mov
pop
xor
sub
ret
mov
js
jle
mov
shlb
les
aam
cltd
mov
xor
loope
or
push
adc
jbe
and
push
stc
mov
adc
mov
jecxz
cmp
fimuls
out
or
pop
int3
jl
mov
cmpsb
cmp
movsb
dec
repz
sub
adc
ss
mov
iret
out
dec
dec
stos
jmp
std
or
lds
bound
fwait
xchg
fsubp
xor
pop
cmc
inc
inc
xchg
xor
jmp
insb
lret
inc
xchg
sbb
cwtl
jle
sbb
pop
xor
mov
enter
add
lea
and
shrb
xor
cs
and
decb
inc
inc
pop
xchg
fildl
lret
out
test
mov
mov
mov
fnstsw
fnstcw
je
stos
in
nop
jp
jne
sbb
popa
xchg
mov
pushf
jae
adc
xor
lret
pop
es
push
cmp
mov
jmp
jp
push
out
mov
movsb
sbb
cmp
in
lret
mov
outsb
dec
outsb
iret
adc
and
or
inc
imul
pop
or
pop
inc
sub
int
dec
mov
mov
sub
sbb
daa
xchg
outsb
dec
sub
xchg
jecxz
adc
push
das
fimuls
call
and
xchg
mov
inc
sub
and
push
aad
jnp
pop
stos
push
pop
mull
insl
mov
out
pusha
xchg
ret
lcall
xchg
dec
xchg
adc
jecxz
and
repnz
jmp
xor
sub
hlt
inc
pop
adc
xorb
fistpll
test
or
and
xchg
or
mov
mov
dec
or
mov
sarb
mov
pop
xchg
in
cli
icebp
imul
cwtl
int
int3
mov
add
jl
push
push
out
pop
mov
lret
je
lea
cmp
sbb
jmp
popf
mov
xor
xor
and
or
daa
das
and
int3
cmp
xor
cmpsb
cltd
enter
add
jne
jno
jmp
dec
dec
mov
dec
repz
cmc
lock
pop
int3
xlat
push
pushf
loope
dec
mov
pop
xchg
push
ja
sahf
in
fisubrl
inc
dec
mov
cs
cmc
xor
cmp
gs
sub
jl
adc
xchg
sbb
push
in
fsubrs
test
mulb
mov
movl
mov
xchg
mov
mov
cmp
addr16
dec
aad
dec
iret
mov
iret
xor
dec
lods
lods
inc
pop
pop
jl
pop
inc
cmp
arpl
rcr
sbb
shlb
jbe
sub
lret
mov
je
clc
pop
lahf
xor
mov
stos
bound
iret
ljmp
jmp
sub
inc
adc
rcrl
or
sub
addr16
add
xchg
mov
add
cmp
movsl
inc
pop
mov
inc
mov
ret
roll
push
enter
push
cmc
ja
cmpsl
lods
test
xchg
add
lods
jmp
popl
mov
pop
push
cmp
jnp
rorb
sarl
orl
fisttpl
lods
aaa
mov
push
push
push
out
leave
fidivs
sub
dec
jns
jne
enter
std
mov
push
sbb
or
cmp
xchg
xorl
mov
pop
mov
mov
lods
push
pusha
loop
rorl
js
xlat
cmp
and
daa
xchg
sub
xchg
pop
jne
cmpsb
test
xor
xor
shl
inc
jne
decl
sub
fildl
push
jl
or
idivl
lret
les
fst
push
mov
pop
hlt
sarl
xchg
push
bound
cltd
nop
mov
dec
fbstp
aad
fimull
aas
std
dec
das
cmp
or
outsl
popl
aas
js
mov
mov
leave
pop
push
mov
push
cld
lock
adc
or
xchg
push
mov
push
mov
ss
push
xchg
in
das
cs
lahf
add
sub
popa
jp
dec
mov
sub
loop
bound
mov
hlt
cmc
negl
pop
push
repnz
sub
inc
xchg
dec
mov
testb
mov
push
push
mov
cli
ljmp
cmpl
leave
inc
mov
lods
add
jnp
jge
mov
mov
adc
arpl
fldl
fistps
and
sahf
scas
ss
out
mov
sbb
xor
je
add
out
mov
jbe
inc
inc
test
xor
loope
mov
data16
adc
stos
pop
ret
fnstcw
lods
mov
inc
mov
sbb
outsb
jmp
lea
fisubrl
clc
mov
inc
xor
sbb
fdivrl
adc
adcb
mov
shrb
sub
xchg
jg
sbb
and
sub
mov
inc
pop
xor
outsb
lahf
add
jge
loop
fwait
sub
pop
inc
andl
xor
mov
sahf
aam
out
cmp
xchg
xchg
pop
clc
xchg
jp
ret
mov
push
or
mov
stc
lea
scas
pusha
add
jnp
push
ror
test
cmc
jno
add
imul
inc
jge
js
adc
push
xor
sahf
mov
lcall
jg
xchg
adc
cmp
mov
xor
aaa
push
ret
subb
mov
jecxz
jp
cmc
xor
pop
jns
mov
mov
int3
rorb
or
shl
das
mov
int
loop
shlb
adc
and
pop
stc
push
test
and
pop
xlat
xchg
xchg
cmp
lods
je
push
cmp
hlt
sbb
inc
lods
sub
movsb
dec
popf
pop
push
inc
push
loopne
dec
push
lret
cwtl
jae
lods
ja
adc
scas
jo
add
mov
push
add
mov
adc
int3
dec
jle
aad
pop
aad
iret
popa
into
imul
ret
out
xchg
enter
fidivs
stc
mov
mov
iret
dec
add
mov
jg
mov
sub
leave
fmulp
inc
pop
mov
ds
mov
lea
cmpb
cmp
ret
mov
sub
mov
hlt
adc
push
xor
dec
adc
fstl
or
pop
fidivrs
cmp
std
mov
ds
fisttps
imul
lcall
cmp
std
jne
test
push
inc
aam
jl
lcall
sbb
popf
cld
data16
inc
rolb
sbb
cmp
jbe
cld
lock
xchg
jno
xorb
int
in
std
sbb
add
dec
lea
lock
xchg
outsb
inc
fwait
xchg
add
aaa
leave
mov
dec
mov
xchg
aad
push
add
xor
dec
pop
jmp
icebp
adc
mov
lds
add
push
cmpsl
sbb
daa
and
cmp
sub
out
mov
out
mov
pop
out
ss
cmp
mov
cmpsb
xor
aaa
jbe
and
cmc
sbb
or
dec
push
and
push
sarl
xchg
mov
gs
mov
loope
ret
std
push
fs
jmp
cwtl
push
or
jmp
lods
dec
mov
fstpt
je
outsl
loopne
sti
pop
sbb
mov
jl
loop
mov
ret
pop
imul
sarl
mov
cmp
out
sbb
xchg
nop
pop
rclb
mov
or
loopne
jl
mov
lods
adcl
add
mov
call
arpl
dec
aad
dec
xchg
mov
jae
xor
sahf
or
sub
mov
or
adc
mov
dec
out
rorl
into
add
dec
jp
lea
mov
sahf
add
inc
inc
mov
cmp
add
xor
loop
adc
repz
std
jae
cmp
push
fnop
loopne
rorb
lods
lcall
mov
nop
sub
mov
xor
adcl
mov
repz
aas
mov
mov
cmp
repz
mov
fwait
mov
pop
sbbb
shrl
pop
lea
push
dec
int
fcmove
push
js
jecxz
shr
push
scas
scas
push
jmp
mov
cmp
pop
mov
cwtl
xor
mov
rorl
or
ja
pusha
push
inc
lock
push
cmp
negb
jmp
clc
push
cmp
scas
dec
lahf
je
in
loope
adc
inc
push
jl
shrl
insb
mov
lods
inc
out
mov
mov
push
jb
sti
pop
jge
pop
mov
dec
inc
push
sub
cmc
lods
jbe
clc
mov
daa
test
movl
orb
cltd
jns
xchg
and
sbb
or
shll
cld
call
lcall
ljmp
or
mov
push
ss
addl
jl
mov
bndstx
fdivrs
out
or
and
fcmovnb
pop
xchg
mov
pop
xchg
xchg
inc
xor
and
and
sbb
inc
sub
jmp
pushf
in
into
js
adc
ds
jno
dec
dec
fisttpl
push
and
dec
and
sub
dec
cli
stos
pop
push
or
and
jl
loopne
and
enter
and
pop
mov
add
xchg
adc
jp
push
pushf
add
inc
fisubrs
or
gs
lock
dec
dec
sbb
inc
ret
xor
arpl
and
fldt
stos
adcb
ss
pop
sti
mov
ficompl
xchg
sbb
push
mov
xor
cld
aas
rcr
in
in
les
xchg
lock
mov
inc
pop
or
or
inc
out
outsb
push
inc
mov
and
mov
add
aas
cwtl
in
jle
sbb
pop
cmp
mov
push
lods
mov
loopne
pop
xchg
outsb
jle
inc
sbb
dec
cmpsl
push
movsb
loop
cmp
ja
nop
clc
dec
sub
lds
sub
loop
lock
ret
mov
nop
mov
add
push
mov
nop
mov
cmp
adc
sub
mov
fsub
inc
in
je
or
arpl
test
cmp
and
pop
aam
enter
pushf
push
mov
pop
dec
lea
in
popf
mov
or
sbb
ret
std
mov
pushf
stos
pop
gs
inc
xlat
cmp
cmp
sbb
and
lret
adcb
cs
pop
sbb
outsl
cmp
mov
xchg
mov
xchg
sahf
jg
push
out
clc
mov
lcall
ss
and
arpl
fnsave
stc
push
movsl
add
or
int
lret
std
sbb
shl
mov
lcall
addr16
pop
cmp
jbe
fnstsw
sahf
mov
mov
xor
lds
xchg
mov
mov
jo
gs
mov
ds
bound
scas
xchg
mov
cs
in
addr16
sub
jne
add
and
jecxz
in
dec
test
je
xor
push
jne
nop
inc
cs
lods
dec
fstl
sub
xchg
insb
sbb
or
add
fnsave
mov
gs
sti
loope
pushf
test
aaa
lcall
mov
push
out
pop
pop
dec
fstpt
mov
jl
dec
or
rcrb
popa
stc
test
push
dec
lods
les
fidivs
je
dec
mov
pop
sub
xor
addr16
lahf
or
xorl
in
cltd
andb
cmp
shll
out
jno
in
adcl
iret
or
dec
enter
or
xchg
in
and
xorps
sbb
mov
les
cmp
fwait
aas
pusha
mov
dec
repz
std
es
adc
add
pop
clc
int
jmp
sbb
jp
xor
call
outsb
ss
mov
addr16
or
movsl
mov
ljmp
pop
or
divb
cmpsb
sub
inc
sahf
pop
movsb
adc
or
loope
cmp
cmp
int
xchg
cwtl
cmp
rcr
repz
mov
sub
add
in
fwait
idiv
fcomp
jbe
pop
mov
cmp
pop
fucom
cmp
movsl
test
mov
in
push
jle
cmc
aam
mov
sub
dec
adc
push
cs
xchg
lcall
mov
inc
ljmp
imul
arpl
mov
cmpsl
rol
add
mov
rcrl
or
push
pop
imul
into
push
movsb
cld
mov
pop
les
inc
xchg
jge
adcb
inc
sbb
push
jo
pop
or
ret
std
loop
jo
in
leave
lds
or
out
sti
mov
or
mov
jb
ja
arpl
out
in
stos
jb
xchg
aam
mov
mov
inc
into
jo
xor
cmp
xor
push
xchg
rclb
cmc
dec
xchg
xor
jb
push
add
js
sahf
jbe
push
fdivr
cmp
xchg
clc
sub
mov
popa
daa
adc
in
repnz
sti
cmp
pop
movsl
push
pop
pop
push
push
outsl
jp
pusha
inc
mov
stos
iret
pop
arpl
out
pop
scas
or
addr16
sahf
or
cmp
push
add
dec
mov
mov
pop
int3
cmpl
jb
xor
pop
add
mov
and
xor
enter
mov
add
int
in
pop
and
mov
cmp
fimuls
xlat
mov
adc
push
cli
lahf
filds
cmpsb
sub
cs
rol
cmpsl
push
push
test
add
cmp
adc
mov
lock
in
sub
mov
sub
xchg
sbb
ja
mov
ljmp
add
cmp
push
jge
cwtl
or
add
pop
sub
int
cmp
rorl
sti
dec
jp
pop
repnz
xchg
addr16
push
cmp
push
adc
loop
lahf
add
jp
iret
add
add
stos
fcmovb
mov
data16
mov
push
xchg
aad
add
push
pushl
ljmp
outsl
pop
pop
mov
test
sub
inc
jg
test
rol
popf
push
les
mov
and
dec
sub
dec
movsl
sub
dec
test
lret
enter
sub
movntps
imul
fdivl
mov
aaa
faddl
and
adc
jmp
scas
mov
cmp
inc
pop
mov
mov
testl
aas
xchg
mov
sub
ficompl
lea
xor
jbe
fsub
movsb
lret
jns
adc
pop
sahf
xlat
jmp
inc
mov
into
in
dec
rcr
push
or
insb
mov
add
adc
or
je
in
jl
jl
pop
jl
lock
sub
fildll
cwtl
ret
mov
and
and
test
add
mov
inc
add
cmpsb
sub
dec
push
cmpsl
adc
mov
push
xor
std
mov
lods
repnz
adc
push
add
cmp
mov
fisttpl
jo
pop
pop
sti
cmp
cmpsl
loop
mov
xlat
daa
inc
dec
push
xor
punpckldq
dec
xor
lods
ret
mov
in
xor
adc
and
shr
push
les
mov
pusha
cmc
inc
movsb
and
pop
mov
negl
loop
xor
mov
ja
les
ja
jecxz
in
loop
mov
cltd
mov
lea
dec
xor
add
xchg
push
push
inc
add
add
jmp
mov
sub
xlat
test
pop
adc
cmp
push
cli
movsl
and
lahf
and
jecxz
jae
cld
scas
mov
mov
hlt
pop
out
repnz
mov
cmp
pop
lods
out
inc
in
es
adc
sub
mov
sbb
test
lock
dec
mov
inc
inc
nop
inc
aad
xor
clc
push
movsl
mov
or
add
sub
push
outsb
dec
dec
jnp
jle
fiaddl
pop
cwtl
mov
test
jb
sub
dec
subl
inc
fldenv
hlt
es
add
in
icebp
and
loop
jns
fnstenv
fwait
or
cs
wrmsr
mov
in
and
inc
cmp
icebp
insl
cmp
or
enter
popf
dec
adc
push
cli
and
pusha
scas
in
jbe
jns
sbb
inc
sbb
clc
pop
jp
cmp
roll
popf
mov
ret
pop
jp
inc
or
testl
sti
mov
cmp
add
jmp
adc
shrb
shlb
fwait
cmpsl
test
inc
xorl
push
rcll
popf
sbb
mov
inc
ss
xchg
pop
fwait
int
lret
push
cmp
push
in
call
fs
jo
xchg
ja
in
inc
loope
pushw
pop
clc
ljmp
mov
add
pusha
test
orl
mov
mov
xchg
fidivl
jg
ss
add
lods
ffreep
pop
push
stc
rcrl
xorb
lret
push
loopne
aam
rcll
or
pop
jl
mov
imul
enter
fnsave
mov
cmp
loop
ret
loop
movsb
jns
das
test
inc
xor
or
pop
cmpl
ja
dec
dec
cs
ljmp
popa
scas
leave
and
movsl
mov
test
inc
xchg
cld
pop
aas
xchg
cmp
dec
aad
ficompl
lods
ljmp
scas
mov
mov
xchg
pop
lods
into
fldenv
mov
adc
out
movsl
add
jmp
das
or
fdiv
mov
fdivrs
mov
xlat
pop
and
aad
xor
ret
mov
lret
lret
sarl
call
inc
outsl
dec
push
jmp
push
cmp
cmp
mov
mov
inc
cs
cpuid
fwait
push
xchg
push
sbb
xor
cmc
rclb
in
leave
lret
mov
dec
aam
mov
mov
push
les
jnp
and
icebp
sub
inc
xor
or
test
mov
push
hlt
fistpl
movsb
mov
nop
lcall
jns
dec
iret
xchg
jns
je
xchg
ret
hlt
or
add
sti
lahf
and
mov
inc
test
outsl
fsubrs
in
fimuls
stos
int3
dec
adc
jbe
test
xor
pop
mov
xor
stc
cwtl
or
sahf
push
aam
or
sbb
jns,pn
mov
push
arpl
ret
push
pop
xchg
jp
add
push
xor
xor
add
imul
rol
pop
jmp
je
or
or
dec
aad
sub
and
jecxz
cmp
xchg
cmp
mov
rolb
lds
inc
jp
es
sbb
imul
jae
std
xchg
jo
or
mov
mov
mov
sarl
mov
sub
push
imul
jp
mov
and
mov
cmc
push
fs
add
cmp
addl
cmc
push
push
mov
cmp
js
sbb
dec
mov
cmp
lods
rclb
or
sti
mov
ret
jno
jmp
sub
pop
int3
cld
cwtl
inc
imul
orl
imul
jbe
loope
push
xchg
test
jmp
cs
jl
pushf
lcall
mov
call
out
and
or
loope
dec
orb
or
mov
test
sub
cmp
ret
add
call
ljmp
xor
pusha
mov
dec
fwait
mov
icebp
push
lcall
and
nop
mov
popf
jne
inc
mov
mov
ret
addr16
xchg
mov
out
dec
pop
fistps
push
xchg
inc
cmp
adc
dec
pushf
mov
ds
xchg
lcall
loope
cmpsl
push
int
cmpsb
mov
aas
pusha
dec
lret
sub
jne
and
jle
sbb
push
sbb
mov
pop
or
add
scas
dec
rorl
add
sbb
loope
xor
pop
xchg
xor
mov
sahf
test
addr16
pusha
push
pop
adc
mov
jp
rcr
popf
dec
add
pop
mov
cld
add
push
dec
push
fs
xchg
mov
pop
inc
xchg
lcall
xor
ljmp
shrl
movb
push
cmpsl
leave
je
jmp
lahf
cs
fwait
dec
test
pop
xchg
pusha
cmp
popa
pop
sbb
test
push
or
xor
ret
xchg
push
aam
sub
je
mov
sti
sub
nop
movsl
xchg
stos
into
jne
mov
popf
pop
in
mov
and
inc
sahf
dec
cmp
inc
mov
cs
jl
popa
testb
jmp
movsb
adc
movsl
loop
or
leave
mov
push
xchg
cmp
shrl
sub
test
imul
std
adc
mov
loope
push
pop
mov
mov
xchg
mov
mov
mov
add
pop
imull
cmp
incl
xor
adc
icebp
cltd
in
xor
pusha
mov
add
cmp
fwait
iret
outsl
jnp
stc
mov
data16
cmpsb
inc
sbb
stc
in
stos
mov
lea
std
pop
movsb
imul
cmp
pop
inc
push
adc
xlat
or
jo
mov
insl
adc
call
push
sub
gs
dec
cmp
lret
dec
orl
mov
sbb
cmp
jae
pop
pop
bound
test
cmp
push
jnp
or
test
repz
lahf
mov
xchg
cmc
aam
jp
lock
ja
loope
push
cmp
ja
push
sbb
dec
aad
lcall
push
push
movsl
push
lock
adc
xchg
ret
sub
movsl
dec
jns
pop
inc
xor
add
xor
jmp
fisubrl
in
leave
stc
inc
push
testb
test
aas
or
inc
andl
jmp
mov
stos
loop
mov
cmc
bound
cmpsl
mov
movsb
lea
into
and
les
mov
jo
sbb
xchg
adc
mov
mov
imul
xchg
clc
sbb
loop
gs
or
idivl
mov
adc
sub
dec
mov
pop
dec
leave
fldl
adc
xor
sbb
push
aam
and
adcb
sub
jl
ja
jne
add
outsl
sub
mov
into
frstor
enter
bound
mov
cld
scas
or
xchg
movsl
cmovno
lcall
cmp
sub
push
inc
dec
js
out
aam
mov
and
sub
shll
mov
dec
mov
add
xchg
cmp
jbe
stc
popf
jnp
ljmp
jle
or
add
das
xchg
fldenv
repz
lret
or
sbb
arpl
rclb
mov
push
call
mov
and
lods
xchg
inc
and
pop
lds
lret
hlt
dec
sbb
in
push
loope,pn
add
sahf
cltd
dec
xor
inc
xlat
adc
aam
xchg
movsb
mov
mov
int
dec
rol
ss
leave
iret
or
mov
mov
adcl
push
lahf
in
push
mov
dec
aam
pusha
test
mov
push
mov
push
test
inc
push
cli
jo
and
jne
push
add
test
repnz
cmp
mov
add
xchg
xchg
lds
cmp
push
push
fbld
lcall
std
add
xor
sahf
gs
or
sub
js
movsb
and
xchg
mov
in
cmp
mov
add
mov
ret
icebp
pop
pop
inc
aas
inc
mov
test
inc
outsl
sub
jnp
push
cmp
push
fs
shrb
addb
addr16
inc
mov
cmc
hlt
mov
xor
imul
nop
push
cmc
sub
test
sti
mov
mov
gs
pop
and
push
mov
adc
add
or
inc
cmp
movsb
pop
pop
pop
outsb
xchg
pop
les
out
fcomps
loopne
jns
les
aam
or
pusha
push
sub
or
testb
mov
sbb
aas
xor
dec
mov
xchg
lret
fsubrs
add
popl
rcrl
in
sub
adcl
rorl
push
std
cmp
mov
and
lret
insb
xor
or
test
mov
pop
movsb
pusha
inc
lret
mov
jmp
pop
or
outsl
aad
cmp
ffree
int
loop
fs
push
or
cmp
lcall
sarb
jp
cmp
inc
mov
stos
xchg
cmpsb
inc
shll
jl
pusha
xchg
dec
cmp
and
fisttpl
hlt
jmp
pop
jle
stc
push
repz
sti
mov
jg
out
repnz
dec
xor
lock
add
adc
insl
imul
fisubs
adc
popa
scas
push
roll
add
ds
push
fstps
in
lret
inc
aas
mov
int3
cmp
and
mov
xor
mov
aas
test
xchg
push
mov
sti
lcall
sbb
xor
dec
shl
jne
lea
lcall
add
cmp
stc
cltd
imulb
fcompl
push
sti
scas
faddp
fwait
test
xor
sub
push
mov
leave
push
mov
loope
add
call
xor
xor
std
pushf
cmp
pop
aam
pop
and
lret
std
mov
mov
sbb
adc
shll
ds
shll
push
cmc
or
and
stos
insl
mov
xchg
inc
icebp
cmp
jbe
sbb
jne
loop
mov
lcall
add
leave
popf
rcr
mov
sbb
sub
adc
add
inc
in
adc
mov
sub
mov
jae
rorb
mov
aaa
cld
and
int
adc
jnp
mov
test
fstpl
mov
pushf
push
in
roll
push
pushf
push
ret
lret
ljmp
pop
cmp
outsb
or
lret
or
lret
mov
sbb
add
mov
sbb
test
sbb
es
scas
xchg
push
push
pop
gs
fstl
lods
dec
mov
sbb
nop
and
sahf
shl
pop
add
jbe
call
pop
imul
insb
add
mov
xor
fnstcw
das
and
aas
lret
and
in
loop
inc
inc
xchg
rolb
sub
jo
mov
shl
pop
xchg
mov
pop
push
mov
fs
xchg
xchg
sbb
into
pop
cwtl
lret
mov
fcompl
sbb
stos
dec
lods
pop
mov
pop
leave
bound
in
or
cmp
sbb
mov
das
mov
push
mov
movsl
sub
and
aam
xchg
xor
or
dec
movsb
inc
sbb
dec
pop
sub
imul
in
nop
xor
mov
leave
push
mov
in
push
cmp
sub
pop
test
cli
push
subl
mulw
mov
lods
stos
sub
and
mov
xchg
out
fnstenv
dec
adc
lods
stos
cmp
dec
xchg
add
inc
adc
clc
mov
stos
cltd
jb
mov
int
dec
mov
out
or
jmp
es
sahf
pop
sub
or
xor
arpl
inc
sub
adc
add
mov
cmc
test
rclb
insl
insb
rcll
call
add
popa
popl
xor
push
js
daa
sub
lahf
lret
adc
inc
sbb
aaa
inc
rcrb
inc
addb
jp
insl
xor
test
cmpsb
dec
push
xchg
sub
sbb
mov
lods
lret
push
int3
test
mov
popf
aas
lcall
pop
fwait
popa
popf
int
dec
mov
loopne
insl
sarl
cld
pop
leave
sarl
negb
mov
lods
or
nop
mov
xchg
addr16
xor
lret
into
mov
mov
mov
repnz
arpl
inc
dec
lods
pop
scas
adc
push
lock
stos
lea
insb
aam
or
sbb
xchg
sub
rcrb
cmp
push
mov
push
out
stc
jb
push
sbb
lcall
cmp
or
mov
mov
or
dec
incl
fists
mov
lock
mov
repnz
repz
inc
stc
add
inc
sbb
loopne
mov
stc
test
inc
pop
push
mov
or
aas
sbb
mov
ljmp
mov
repz
stc
pop
mov
insb
stos
scas
push
sub
pop
dec
dec
sbb
lock
lret
sub
mov
outsb
lret
mov
fld
adc
stos
pop
pop
movsb
push
jp
into
xchg
scas
mov
or
bound
out
shrl
popf
mov
pop
xlat
mov
fwait
pop
cmp
xor
jp
and
adc
popa
outsl
sbb
mov
inc
stc
or
ret
mov
cmp
and
test
sub
mov
in
adc
notb
sbb
inc
dec
mov
xor
or
pop
mov
cmp
or
mov
loope
lret
mov
out
pop
imull
outsb
test
mov
rcll
fcmovnu
enter
mul
jo
adc
or
cmp
add
mov
stos
call
and
push
leave
sub
xchg
lret
pop
aad
int
js
idivl
movsl
jne
ret
cmp
or
fwait
insl
imul
stc
addr16
test
lods
aas
and
xchg
mov
inc
sbb
das
pushf
cwtl
das
nop
repnz
fadds
aaa
popa
or
xor
outsl
dec
fiadds
dec
lods
movsb
xor
xchg
cmp
jp
mov
sub
jns
xchg
or
xor
test
pop
lods
jl
dec
cwtl
or
fcom
mulb
add
test
sar
xorl
mulb
add
dec
mov
jmp
xchg
xlat
mov
test
std
hlt
shlb
cltd
ljmp
dec
out
cltd
loopne
push
aad
jo
mov
adc
shll
mov
dec
mov
and
mov
jns
dec
ret
inc
movsl
stc
mov
jne
iret
pushl
sub
pusha
int3
pop
loop
dec
lods
xor
xchg
adc
push
adc
pop
flds
dec
aas
push
cld
cmc
push
mov
pop
test
pop
push
jnp
ss
popa
mov
aaa
mov
orl
pop
mov
dec
push
std
mov
stc
pop
jmp
test
jge
mov
decb
addr16
lcall
mov
add
sbb
aad
sti
roll
int
sbb
lcall
add
adc
ret
or
and
xchg
in
add
pop
pop
movsb
ficoml
clc
movsl
mov
leave
cmp
push
popl
scas
ds
mov
enter
inc
jb
jl
roll
push
lods
adc
in
mov
loope
lret
jmp
push
sbb
lods
inc
test
ret
in
outsl
adc
lds
jo
jo
push
and
sbb
in
jg
push
in
xchg
dec
aam
inc
add
xor
push
mov
fmul
cmp
cld
dec
xchg
sbb
inc
bound
xchg
imul
adc
sarl
dec
ret
and
jbe
add
ficomps
mov
or
jl
ljmp
pop
inc
jl
ficoml
add
cmp
cs
popf
out
lods
lcall
pop
faddl
rolb
jno
or
into
mov
or
cli
xchg
jnp
mov
mov
push
movsl
dec
lods
push
loopne
pshufw
cwtl
enter
xor
adc
mov
mov
xchg
mov
ljmp
aaa
cmp
jnp
jmp
cmp
fistpll
aam
aaa
fisttps
xchg
cwtl
jg
cmp
mull
push
jnp
lcall
mov
fbld
xor
lods
mov
sub
imul
stos
xchg
imul
and
mov
mov
ror
shl
and
push
clc
popf
adc
js
out
or
mov
push
and
xlat
dec
test
in
rcll
push
les
lods
mov
inc
ficoms
inc
imul
xchg
inc
pop
mov
stos
push
mov
iret
or
jbe
out
leave
gs
xchg
lret
cs
pop
fistps
adc
in
das
or
and
cltd
movsl
popf
xchg
sub
lahf
mov
sbb
jecxz
les
or
sti
in
test
jmp
mov
cmp
div
add
je
xchg
mov
adcl
add
ret
mov
cltd
aaa
ror
xchg
mov
dec
jo
loop
mov
shlb
and
loope
adc
sbb
movsb
jp
mov
pop
ss
fsubl
stos
scas
and
add
in
out
add
dec
fstps
adc
inc
mov
js
shr
test
cmp
jp
dec
mov
jmp
ret
aas
dec
out
mov
or
subl
pop
dec
inc
pop
xor
sti
daa
aaa
dec
cmp
call
sbb
push
sbb
movsl
xchg
rcl
jge
out
mov
clc
popw
pop
jecxz
xor
rol
les
addr16
jne
and
imul
or
leave
or
loopne
popf
insl
inc
dec
pop
xor
out
cmpsb
fistps
cmp
push
dec
xor
inc
fwait
mov
fstps
pop
repnz
mov
pop
xor
call
mov
push
lahf
lods
jge
push
xor
int3
out
dec
shrb
lcall
daa
mov
inc
pop
fdivr
clc
xor
xor
popa
cmp
mov
jg
pushf
leave
nop
inc
push
push
outsb
mov
dec
imul
loopne
popf
lods
pop
insl
dec
lcall
cmpsl
sub
and
cmp
movsb
add
out
ja
in
dec
cmpsb
sub
in
rorb
mulb
sub
loopne
std
xchg
mov
imul
sub
ss
inc
or
iret
jle
nop
leave
or
add
sbb
sbb
adc
nop
dec
xchg
pusha
icebp
cltd
push
loopne
adc
stos
jmp
sbb
xchg
addb
inc
je
mov
inc
into
ja
xor
std
in
test
cmc
loope
pop
inc
mov
shlb
mov
dec
pop
inc
repnz
push
pop
aad
pop
pop
jmp
psllw
pop
jmp
xor
into
es
icebp
fidivrl
pop
mov
stc
scas
cmp
mov
shrb
cmp
push
cmpsl
aas
imulb
sbb
inc
mov
aas
dec
cmp
inc
add
adc
cmp
shll
adc
stc
into
push
cmp
cmp
mov
mov
loopne
sbb
mov
or
jnp
shlb
sbb
stos
lret
aas
xor
mov
adc
add
lret
inc
daa
cmpl
ljmp
adc
sub
cs
jns
iret
lock
adc
lcall
mov
movsl
sbb
sti
inc
cwtl
iret
addb
jb
iret
pusha
push
and
and
ret
ret
inc
or
ret
push
test
mov
leave
lahf
adc
cmp
mov
aaa
xor
dec
mov
mov
std
add
es
sbb
lds
sbb
das
add
sub
adc
cmpl
sahf
in
dec
mov
fsts
xor
andl
rep
fadds
cmp
lcall
pop
out
rorb
stos
add
inc
jo
adc
push
repz
je
imul
sub
jo
setbe
rcll
mov
pop
cmp
cmp
pusha
pop
cmpsb
shrb
je
out
shl
lock
dec
push
lods
add
das
adc
pop
das
add
dec
pop
push
push
mov
xor
mov
adc
test
addr16
movsl
js
adc
inc
dec
pop
cmp
sbbb
push
pop
jbe
add
adc
jl
mov
jno
nop
sbb
repnz
lret
mov
fwait
sbb
mov
mov
fsubrl
lcall
jmp
and
mov
imul
test
mov
sbb
cmp
inc
hlt
dec
mov
mov
inc
fldcw
imul
and
xchg
push
mov
and
gs
mov
pop
je
jnp
or
add
aaa
xor
cmc
enter
scas
mov
mov
adc
aaa
aas
xchg
push
or
cmc
enter
pop
or
iret
loop
outsb
or
mov
mov
pop
cmp
into
adc
es
adc
fstl
fisubrs
dec
add
pop
shl
mov
clc
xor
lahf
cld
and
out
icebp
mov
sub
cld
mov
inc
fnop
push
jns
ss
lods
adc
int3
add
push
xorb
sbb
shl
rcl
in
cmc
mov
mov
jnp
cld
xorb
and
mov
addr16
jge
or
ret
inc
mov
sbb
movsl
cwtl
add
stos
pushf
aaa
insl
pop
movsl
xor
dec
or
repz
push
mov
push
mov
mov
xor
ret
andl
and
in
sub
jnp
dec
lods
loop
pop
adc
sub
stos
cmpsb
cmp
shlb
bound
adc
xchg
push
dec
sti
jp
dec
aad
loope
sbb
js
push
sbb
pushf
sbb
push
mov
push
mov
cmp
sbb
dec
pop
mov
add
dec
cwtl
inc
add
mov
jge
loopne
sub
lret
sub
pop
jl
pop
outsl
pop
sbb
xchg
mov
pop
sbb
push
inc
insb
push
cwtl
aas
add
mov
push
std
pop
sti
add
ficomps
jecxz
mov
and
lret
pop
scas
xor
dec
cmc
fsubrl
ret
mov
xor
mov
lret
sub
sbb
mov
cmp
pop
mov
inc
fcoms
mov
dec
bnd
or
adcb
inc
shll
mov
cltd
leave
add
adc
push
mov
jle
or
and
or
add
pusha
enter
mov
push
mov
pop
andb
shl
mov
cmp
mov
fisubl
mov
push
movsl
sub
js
lret
int3
popf
lret
dec
jmp
mov
popa
mov
mov
aaa
loopne
xor
jo
xchg
sti
inc
ljmp
inc
int
scas
mov
add
sub
lods
pushf
mov
icebp
push
into
xchg
fmulp
fbld
sub
dec
in
mov
daa
repnz
mov
adc
test
xor
xchg
push
push
xor
sbb
jle
ret
pop
insb
jg
jo
and
sahf
or
inc
push
xor
ret
sbb
xchg
push
movsb
loopne
jns
fisubl
aad
add
aad
hlt
pop
test
imulb
stc
add
sub
shll
stos
ljmp
sub
adc
or
dec
and
mov
add
loopne
pop
push
and
dec
mov
mov
movsb
neg
add
pop
cmp
mov
push
mov
es
and
add
out
lods
pop
ja
into
mov
hlt
sub
fcomip
mov
xorb
movsl
shlb
fisubrl
shl
or
pop
lods
mov
push
mov
into
adc
pop
sbb
jbe
sbb
xchg
fwait
mov
leave
imul
jg
out
mov
xchg
inc
ja
popf
stos
into
fisttpl
inc
push
hlt
pop
mov
xorl
dec
stc
mov
cmp
incb
jmpw
and
mov
cmp
sahf
add
sub
xlat
scas
rol
adc
ja
or
jbe
mov
das
pop
mov
hlt
cmp
cmp
xor
adc
mov
sbb
jns
inc
sbb
enter
sahf
out
mov
mov
mov
jge
adc
nop
adc
xchg
cmp
sub
xor
sahf
jecxz
fxch
push
mov
add
pushf
and
test
cmp
scas
stos
xchg
mov
int
inc
dec
arpl
fdecstp
and
stos
scas
mov
mov
gs
mov
lock
cld
and
or
mov
mov
aam
mov
and
jmp
mov
in
adc
outsb
push
pop
fs
imul
ret
jmp
dec
stos
push
pop
dec
test
adc
in
jl
add
lret
sub
stc
jnp
stos
sahf
jl
in
jnp
sub
sub
xchg
xchg
das
and
adc
mov
or
add
xor
adc
pop
mov
movsl
aaa
loop
jl
or
push
adc
imul
pop
cmp
or
xorb
cmp
rcll
loop
jb
std
fimull
rol
je
mov
aas
add
mov
shrl
aad
xor
out
mov
mov
dec
push
jo
sbb
shll
inc
mov
jmp
push
outsl
mov
into
mov
cli
jbe
rep
loop
dec
mov
or
cwtl
addr16
ret
lret
loopne
dec
leave
xchg
shlb
outsb
adc
rorl
ds
xchg
or
mov
lods
mov
and
jae
jmp
dec
fs
jb
xchg
mov
aaa
popf
ds
dec
push
add
sar
outsl
lret
sbb
stos
lret
and
fistl
push
lret
movsb
pusha
pop
aas
xor
and
pop
clc
insb
add
insl
sbb
mov
std
jne
test
addr16
test
add
fdivrs
out
fwait
sbb
sbbl
sbb
loope
test
mov
and
xchg
je
push
pop
fidivl
les
test
in
jl
lea
or
pop
mov
lea
iret
int3
and
mov
ljmp
test
mov
pop
mov
mov
lea
xor
nop
add
mov
scas
jno
scas
jo
adcb
les
jb
popf
jge
andl
jnp
or
test
push
repnz
xchg
lods
xor
cmp
inc
cli
mov
fmul
push
adc
rcll
mov
enter
xchg
mov
sub
sahf
call
fsubl
iret
aas
or
and
push
adcl
dec
ret
aam
movsl
mov
mov
xchg
mov
push
pop
mov
repnz
repnz
loope
fnstenv
std
xor
fisttps
loop
shrl
mov
add
pop
ja
into
pusha
sub
les
clc
mov
mov
outsl
adc
jne
mov
add
push
ret
cmp
inc
xchg
and
int3
push
sarb
cmp
pop
hlt
mov
or
in
xor
rolb
xor
ss
jbe
xchg
jge
inc
stos
mov
dec
imulb
or
lret
push
mov
mov
lahf
std
mov
or
sbb
and
aas
dec
and
clc
test
ja
nop
in
js
sbb
jns
bound
sbb
test
shll
hlt
pop
fwait
sbb
jle
call
lret
add
sarb
leave
lret
subb
shl
daa
or
movb
jb
dec
repnz
imul
mov
test
mov
and
imul
lods
mov
pop
cmp
sbb
fldcw
xchg
iret
into
add
lods
ret
push
pop
or
xchg
dec
dec
sbbl
addr16
daa
lods
push
nop
aam
pop
popf
mov
inc
jb
xor
mov
sarl
nop
fisubs
xlat
xorb
jae
cmp
dec
fnsave
movsl
cmp
cli
inc
in
mov
imulb
mov
sti
mov
mov
out
icebp
aam
sub
inc
fadds
xchg
inc
pop
cmp
sahf
popf
jle
or
movsb
and
mov
adc
add
jl
cmpsb
mov
dec
push
sahf
jne
addr16
je
sbb
test
sbb
dec
mov
addr16
xchg
push
adc
dec
mov
add
enter
bound
inc
xor
stos
pop
xchg
pop
fdivs
fisttpll
jle
test
lods
or
sbb
sarb
ds
scas
test
jae
add
dec
mov
mov
scas
loope
mov
shlb
gs
mov
shll
fs
mov
mov
pop
pusha
mov
and
lods
jae,pt
lods
insb
lds
mov
je
pop
or
adc
test
jg
dec
fstl
ds
je
ljmp
popa
xchg
into
arpl
sbb
push
and
and
pop
adc
das
rorl
push
adc
jge
pop
sub
adc
push
inc
shlb
fisttps
push
scas
mov
sub
pop
jl
add
movsl
xchg
add
aaa
dec
add
pop
sub
imul
sub
mov
or
pop
and
mov
xchg
pop
hlt
sahf
popf
cmpsb
mov
and
jle
mov
lcall
lret
dec
push
mov
fnstsw
push
loop
or
and
adc
pop
add
jmp
std
js
pop
int
out
sbb
sbb
inc
jle
aas
mov
and
cmp
adcl
cs
push
scas
dec
or
stos
inc
aad
inc
mov
rol
dec
mov
stos
out
cli
lretw
mov
imul
sub
cmp
mov
daa
ret
loopne
pop
imul
daa
add
call
arpl
pop
xor
addr16
pop
data16
or
xor
sbb
pusha
cmpsl
std
test
sbb
dec
lret
xchg
inc
scas
mov
xchg
mov
adc
bound
lahf
cwtl
lds
lret
test
fsubr
dec
xor
sbb
add
mov
xchg
pop
cld
out
enter
mov
or
fxch
test
push
mov
mov
enter
js
push
dec
shl
dec
mov
cmp
mov
mov
scas
dec
dec
mov
lods
xchg
mov
add
inc
fbld
icebp
mov
adc
cmpsb
push
adc
jb
cmp
imul
arpl
xor
sbb
subb
imul
sub
push
adc
cmp
aaa
das
xor
loop
jae
int3
fbstp
dec
or
icebp
mov
clc
cmp
adc
lds
or
pop
xchg
cwtl
sub
pop
ret
push
stos
mov
ret
xchg
lret
push
mov
std
adc
pop
push
xchg
push
cmp
stc
incl
inc
mov
inc
aaa
dec
mov
repnz
add
sbb
mov
cmp
loope
stc
test
xor
pushf
test
subb
stos
les
aad
sbb
cmp
ret
push
addr16
test
jecxz
xor
stos
pop
dec
mov
sub
sub
mov
mov
dec
test
mov
dec
negl
shl
xchg
sub
out
lahf
sbb
out
scas
das
addr16
into
mov
inc
sahf
mov
jp
jae
add
xor
add
icebp
mov
adc
popf
fwait
pop
push
mov
sbb
xor
dec
and
xchg
and
jne
push
cmp
lcall
roll
cmp
sub
addr16
in
in
inc
fsub
jecxz
rclb
icebp
xchg
add
inc
xchg
into
subl
add
ss
jnp
das
cltd
stos
mov
and
mov
cld
cmp
out
out
fs
popa
xor
push
shll
fidivs
jb
jno
gs
or
dec
test
or
cwtl
pop
movsb
xchg
adc
cs
pop
jl
mov
frstor
and
int
pop
cltd
js
or
aas
cli
mov
leave
jp
dec
cmp
xor
mov
adc
nop
daa
inc
cmc
cmp
pusha
sbb
hlt
cmp
add
js
test
and
scas
pusha
sbb
jp
jo
subl
cmp
xor
jp
jbe
imul
addr16
mov
mov
aad
outsl
and
inc
or
push
cmp
or
jbe
lods
outsl
push
mov
lahf
jl
pop
xchg
adc
push
in
pop
imul
and
shl
jle
push
jl
sahf
out
notl
sbb
mov
add
iret
imul
inc
js
mov
inc
push
jno
rcl
sub
xchg
aad
mov
mov
or
daa
or
pushf
hlt
jae,pn
mov
ds
dec
pop
and
xor
push
cmpsl
cld
popa
into
mov
cmp
arpl
push
or
repz
in
cmp
sbb
cmc
sub
jle
ror
add
jne
divl
jne
mov
push
inc
nop
xchg
cmpb
popf
inc
icebp
insl
insl
std
cmp
das
sahf
jb
repz
push
sbb
sub
lret
insb
push
ret
ret
jo
push
aaa
and
data16
inc
sub
mov
inc
scas
or
decb
dec
sbb
and
das
xchg
sub
sbb
mov
test
xor
dec
pop
stos
push
insb
dec
adc
insb
stos
sbb
lcall
push
lret
mov
cmpsl
jp
fistl
sbb
callw
push
fisubs
or
xchg
and
fdivs
cmp
sub
push
and
or
cmpsb
std
xlat
orb
mov
dec
adc
fimuls
sarl
sti
jae
inc
stos
shll
icebp
sbb
mov
sub
sbbb
test
and
xor
jecxz
adc
xchg
and
push
call
fcomp
xchg
and
lods
inc
out
sbb
shll
dec
out
sbb
mov
or
popa
fldl
subl
adc
leave
leave
aas
xchg
mov
loopne
lcall
inc
icebp
xchg
call
mov
xchg
lock
sub
mov
push
sbb
cmp
xchg
clc
ficompl
fwait
lea
push
in
inc
stos
scas
in
jo
lea
push
mov
pop
adc
inc
and
call
cmp
mov
add
dec
cmp
adc
lahf
xor
mov
mov
mov
pop
roll
lahf
sub
cmp
lods
cld
xor
mov
rcr
js
and
sub
jbe
imul
lods
cmp
mull
sahf
jg
xchg
cmp
xchg
mov
lcall
in
rcrb
mov
adc
or
hlt
in
ja
popa
xchg
ss
or
sbb
stos
test
rolb
sub
mov
inc
rol
pop
pop
add
add
push
lea
ficoml
or
mov
lret
lods
fstps
and
pop
ljmp
sti
pop
jb
mov
rcl
mov
fs
rolb
test
mov
mov
pop
mov
lods
ja
ret
cmp
arpl
sbb
xchg
mov
sti
xchg
ficoml
outsb
dec
mov
dec
cmpsb
or
fstps
mov
mov
gs
mov
inc
xor
imul
orl
push
inc
jecxz
frstor
push
scas
inc
sbb
in
int
shrl
dec
movsl
sti
xor
lods
and
push
call
or
jle
dec
dec
sbb
inc
jae
sbb
ljmp
xor
and
jge
int3
std
int
data16
inc
mov
ret
test
sub
mov
cld
mov
mov
sub
mov
aam
sub
jmp
cmpsl
mov
test
mov
in
and
cwtl
inc
roll
sbb
fnstcw
out
jnp
mov
mov
bound
sahf
push
rorl
or
inc
xchg
jno
out
pushf
dec
repz
scas
xchg
mov
add
jbe
sub
cmc
push
push
out
mov
xchg
mov
inc
and
outsb
shll
loopne
pop
adc
call
out
aam
inc
push
cmp
cmp
jg
or
or
sub
pop
mov
or
sub
fidivrs
arpl
adc
add
jnp
xchg
scas
jno
test
pop
cli
adc
fsubrl
int3
mov
or
mov
add
int
aad
cld
dec
loop
ja
or
hlt
imul
jo
dec
mov
xchg
inc
adc
push
hlt
fisubrl
mov
dec
lahf
hlt
insl
jl
push
push
mov
loopw
leave
and
mov
pop
test
push
mov
add
in
cmp
mov
jne
jmp
jae
bound
jmp
adc
inc
xor
jmp
cmp
mov
cmp
mov
jno
inc
mov
or
push
xchg
out
lea
inc
and
pop
insl
xchg
mov
fnsave
inc
jo,pt
inc
daa
or
jmp
or
adc
mov
out
pop
cmpsl
les
xchg
ss
sahf
mov
inc
in
jo
pop
stos
in
sub
or
enter
sbb
mov
lret
xchg
divb
mov
add
mulb
xor
test
stos
pop
pusha
pop
jge
pop
xchg
dec
dec
fdiv
mov
xchg
lds
inc
mov
inc
and
stos
fists
push
add
mov
mov
cld
xlat
lds
mov
push
repnz
mov
mov
das
jno
sbb
inc
outsl
inc
adc
push
cmp
lcall
adc
jmp
sbb
cmp
pop
xor
mov
xchg
pop
stos
and
stos
mov
int3
sub
jns
scas
xchg
movsb
imul
int3
xor
shrb
test
divb
push
in
aas
fsts
sbb
hlt
outsl
les
icebp
xor
adc
adc
dec
pusha
mov
ja
stos
jnp
bound
loope
ds
insl
cmp
cmp
stc
lahf
pop
xchg
sbb
pop
push
jns
sbb
and
inc
cltd
mov
sbb
stos
mov
inc
stc
insl
repz
in
fcoms
mov
sbbl
in
or
or
ret
test
mov
cmp
in
sub
sub
loopne
xchg
sub
add
dec
or
mov
cmp
xor
into
cli
fwait
push
aam
xchg
pop
pop
pushf
aaa
sahf
fs
adc
xor
sub
js
outsb
orps
jl
imul
into
fs
sbb
push
dec
cmp
std
jns
mov
lret
sub
sbb
xchg
call
cmp
mov
lds
sbb
icebp
sub
and
pop
add
outsl
movsl
push
test
in
sub
mov
icebp
jmp
sub
aam
inc
add
xchg
inc
enter
cmpb
sbb
cli
fimuls
call
and
push
movsl
inc
jecxz
mov
popf
push
pusha
ss
push
imul
hlt
fdivs
inc
dec
inc
push
lcall
jmp
inc
repz
adc
jne
out
sub
jno
adc
sahf
push
push
int
sub
lds
imul
inc
and
push
lcall
shll
or
mov
and
or
cmpsb
or
cmp
jo
fcomip
cld
jge
in
cmp
sub
movsl
mov
jns
mov
xor
jns
pop
js
popf
jl
stc
in
or
mov
lret
bound
in
cs
sub
sbb
and
ds
mov
pop
popf
loopne
inc
mov
mov
sub
xor
into
ja
mov
std
cli
imul
cmp
iret
mov
cmp
xlat
sahf
fbld
push
push
mov
xor
dec
push
rol
popa
jg
push
insb
pusha
cwtl
addr16
sti
dec
jl
jg
push
cli
cli
inc
cmp
ss
xchg
bound
cmp
xor
jns
stos
std
pop
and
mov
dec
dec
scas
mov
xor
dec
xchg
jbe
ret
mov
dec
in
pop
dec
xchg
ja
es
ret
or
rorb
add
popf
fstpl
sub
arpl
loope
adc
cld
lret
sbbb
pusha
sbb
xor
lea
fadd
leave
cmp
psadbw
loop
aam
adc
in
aas
stos
fmuls
adcb
arpl
imul
fimuls
mov
pop
jae
or
sub
negl
pop
fimuls
std
cmp
data16
repz
sbb
in
sbb
add
jne
fwait
sbb
sub
inc
imul
mov
std
add
jae
sbb
add
mov
xor
cmp
out
les
imul
mov
rcrb
cmc
lods
cli
xor
jbe
mov
loope
imul
in
lret
rorb
enter
lock
adc
dec
inc
or
ror
inc
shl
lret
lods
jle
stc
jbe
fcoml
int3
sti
adc
mov
inc
dec
sti
hlt
add
aaa
dec
pushf
mov
jl
lds
enter
movsb
dec
inc
sti
sbb
pop
int
push
imul
mov
jb
jp
push
mov
sub
mov
addr16
ret
xchg
add
mov
aad
mov
pop
mov
nop
mov
int3
mov
psubsb
and
in
adc
adc
sbb
jmp
iret
push
xor
jne
cmpsl
cwtl
add
daa
rorb
test
dec
lods
imul
lds
dec
es
and
xor
cltd
mov
and
fisttps
push
push
icebp
pop
hlt
das
push
and
mov
dec
lahf
sti
xchg
push
vpcmpeqb
push
fwait
stos
pop
inc
push
xchg
lret
xor
mov
mov
mov
pop
rcll
lock
push
adc
lret
and
maxps
les
xchg
inc
fwait
lahf
sahf
fwait
cmc
in
sub
cmp
lcall
stos
mov
dec
test
cli
xchg
test
ja
inc
sbb
sub
rcrl
pop
cmp
outsl
xlat
in
addr16
mov
lcall
xchg
addr16
ds
dec
insl
jge
cmpsb
test
mov
inc
imulb
xor
and
mov
sub
dec
pop
jmp
les
sub
pop
movsl
cmp
dec
imul
repz
mov
into
and
aas
jp
adc
mov
std
cmp
push
add
outsb
mov
bound
sbb
les
pop
xchg
out
out
mov
ucomiss
les
mov
jo
mov
sahf
jbe
xorl
xchg
pop
adc
jg
fadds
insb
lods
adc
mov
inc
pop
idiv
xchg
adc
insl
xchg
inc
loopne
cmp
je
add
aas
pop
push
sti
addr16
dec
dec
ljmp
rcll
push
mov
pop
aam
test
jo
jbe
inc
in
cwtl
je
add
mov
sbb
pop
bound
adc
jge
or
cmp
and
movsl
in
mov
mov
dec
add
and
out
pop
dec
xchg
push
mov
fdivs
pop
dec
xchg
pop
test
movsb
push
pop
push
add
push
mov
test
mov
xor
cwtl
stos
addr16
mov
addr16
out
or
dec
aas
jecxz
pop
inc
movsb
mov
lret
and
dec
cmpsl
nop
cld
cmp
mov
adc
mov
dec
jle
sub
cmp
sbb
adc
xor
inc
and
lahf
imul
add
call
or
out
inc
lahf
or
mov
fidivrs
cmp
pusha
sbb
xchg
push
adc
fdivs
inc
adc
pop
mov
dec
inc
xchg
bnd
test
sbb
lea
xor
mov
jne
jp
inc
jle
incb
dec
iret
iret
aaa
add
cmp
cmp
fstl
jnp
ja
outsl
out
mov
sbb
push
es
cwtl
les
mov
pop
xchg
cmp
cli
test
mov
pop
or
xchg
cmp
pushf
push
ror
mov
pop
cmp
fisubl
repz
lahf
lret
pushfw
sub
sbb
fidivrs
je
and
jle
pop
rcrl
cli
mov
das
xchg
push
sbbb
sti
or
or
sti
xchg
mov
rcl
sbb
js
xchg
add
jmp
cmpsb
xchg
cmp
mov
dec
inc
dec
add
roll
in
cmpb
std
shll
sahf
je
mov
aaa
pop
cmp
testb
scas
sub
and
push
stos
ret
sub
filds
mov
mov
flds
insl
cmc
and
je
pop
aas
push
push
push
inc
push
out
in
inc
repz
leave
cwtl
outsb
push
jl
sti
adc
je
inc
add
movsl
mov
movsb
cltd
and
or
cld
push
mov
add
mov
ret
cmc
out
and
fnstenv
in
mov
mov
xchg
call
lcall
int3
fiadds
jle
out
or
push
lret
stc
pop
mov
mov
test
ret
negl
loop
push
lods
outsl
popf
and
imull
mov
cltd
bound
lfs
inc
mov
inc
icebp
cltd
dec
fwait
push
aas
js
or
pop
dec
stos
mov
sbb
lods
sub
xchg
inc
xchg
adc
cmp
or
sti
push
mov
inc
and
adc
mov
xor
sbb
add
lods
pop
inc
mov
mov
dec
push
lock
and
aaa
sub
int3
pop
pop
mov
mov
lret
adc
cmp
lods
rorb
xchg
or
jge
aas
and
cwtl
es
fwait
pop
pop
lret
xor
cmc
and
sarl
addr16
pop
mov
je
mov
loope
dec
mov
sbb
test
dec
xchg
nop
sbb
das
adc
rcrl
pop
cmc
and
xchg
mov
jmp
cld
add
and
mov
xchg
rorl
imul
sbb
clc
sub
cli
dec
fdivs
into
inc
lock
idiv
inc
xchg
cmc
nop
sahf
ja
mov
movsb
pop
xchg
mov
pushf
or
jg
push
dec
push
sahf
ret
jo
dec
mov
or
adc
dec
fldcw
mov
mov
decl
mov
dec
jmp
icebp
push
addb
insl
cmp
iret
or
mov
imul
and
push
shll
arpl
fidivl
xchg
imul
push
shrl
cmpl
out
push
int
mov
and
jle
mov
mov
std
dec
mov
hlt
ja
lea
add
fwait
sbb
inc
shll
inc
and
call
jge
mov
bound
jmp
cld
sbb
outsl
inc
shlb
push
popf
pop
test
test
nop
push
scas
gs
dec
test
adc
iret
in
gs
cmp
scas
sbb
loop
out
fs
int3
pop
adc
and
int
sub
xlat
mov
scas
movsl
lock
push
pop
push
jge
fidivl
arpl
pop
cmp
aas
das
stos
sub
xchg
add
arpl
icebp
or
fwait
pop
sub
add
mov
cmp
mov
xor
dec
jle
lcall
int3
lock
adc
inc
push
jecxz
cmpsb
add
mov
jb
jns
xlat
sbb
movsb
loop
cmp
jmp
pusha
orl
sub
cwtl
out
aas
jb
sbb
cmp
mov
push
xchg
sbb
lahf
adc
add
lret
mov
xchg
outsl
dec
xlat
pop
test
push
xchg
jp
lods
xlat
jno
ljmp
mov
or
jno
and
pusha
inc
push
sub
pop
sub
and
and
push
jb
jnp
pop
imul
sub
and
lret
jge
mov
fisubrs
push
lock
sub
test
push
shrb
and
push
mov
aam
or
sub
jl
and
fldl
sti
lahf
or
sub
shrl
mov
int
sbb
xor
mov
cmc
cld
fcoml
jae
enter
jbe
dec
jne
int
outsb
icebp
adc
inc
fsubp
pop
mov
test
inc
ficoms
int3
sub
mov
rcrb
cltd
jge
lock
aas
ret
cmp
sbb
inc
rcrb
std
fdivrl
fcmovnu
ja
pop
arpl
sbb
shrl
movsb
mov
data16
sbb
cmp
popf
cs
pusha
js
cmp
jnp
jo
mov
lret
imul
cmp
and
movsb
ja
xchg
mov
cs
gs
or
movsl
rcll
dec
cmc
and
out
or
sbb
dec
sub
xchg
mov
mov
int
fsts
mov
popf
in
pop
push
jnp
dec
or
cltd
int
push
jle
mov
push
in
adc
sahf
cmp
cld
sahf
jae
push
hlt
sti
cmp
mov
into
adcl
stos
fwait
mov
xor
lcall
jle
frstor
scas
adc
les
mov
out
or
dec
jmp
stc
call
push
imul
jecxz
insb
dec
loop
out
adc
dec
popf
push
gs
bnd
mov
push
negl
push
mov
in
mov
lahf
jbe
cld
fldenv
xchg
sbb
mov
repnz
cwtl
inc
mov
pop
add
clc
cmp
ja
lret
mov
xorb
cmc
in
adc
imul
in
dec
hlt
sarl
jne
lods
je
inc
imul
out
test
stos
adc
mov
or
xchg
add
rcr
xchg
fisttps
add
mov
jae
loope
pop
or
sbb
subl
nop
dec
xorl
shll
adc
lahf
lret
dec
mov
add
mov
lret
mov
pushf
add
mov
stc
addl
pop
mulb
lds
inc
cs
xor
add
and
icebp
rclb
js
pop
iret
mov
cmp
pop
or
pop
adc
ja
mov
aas
pop
jo
pop
mov
cmpl
push
or
pop
loopne
mov
jnp
ds
pop
rorl
nop
push
sub
fwait
ret
bnd
cli
cmc
arpl
lcall
sbb
jmp
jecxz
ret
test
addr16
xor
and
sub
cld
idivb
pop
xor
cmp
fadds
ret
sbb
test
push
repnz
xchg
xor
fucomip
xchg
cmp
fistpl
or
es
outsb
cmp
push
and
gs
inc
fxch
mov
cld
dec
test
imul
push
add
inc
pop
iret
pop
ss
enter
mov
mov
sub
out
pop
gs
sub
and
push
in
xor
es
mov
cmpsl
and
sbb
xchg
and
das
stos
adc
enter
nop
outsb
xor
and
hlt
mov
mov
mov
ret
mov
push
push
push
jg
jmp
push
pop
cs
sarl
xor
pushf
loop
mov
xchg
insb
dec
popa
inc
repz
sub
pop
mov
pusha
addr16
mov
arpl
cmc
pusha
lods
nop
jnp
lahf
add
push
std
lret
loope
push
xchg
fmulp
pop
xor
pushw
sbb
or
int
arpl
data16
sub
adc
pop
inc
shll
shll
sub
inc
push
mov
inc
scas
mov
jp
xchg
xchg
lcall
pusha
sbb
jl
xchg
in
clc
js
or
cmp
stos
loopne
inc
das
les
or
mov
jae
rol
ret
in
sbb
nop
sti
mov
push
jmp
jno
pop
or
add
push
jg
fildl
test
jmp
divb
fcompp
shrl
jle
mov
test
repnz
fsubrs
adc
aad
pop
sub
jns
ret
and
pop
andl
sbb
loopne
jp
or
faddl
jecxz
cmp
xchg
push
xchg
cmp
jb
cmp
jg
pop
cmp
rol
loope
shll
xorb
xchg
cltd
jmp
sbb
mov
outsl
les
inc
popa
cmp
fcompl
fdivl
in
dec
sbb
cmp
jl
mov
mov
mov
gs
insb
sti
cmp
dec
aam
push
cmp
insb
jg
mov
mov
mov
cltd
add
das
scas
mov
stos
jp
lock
pop
dec
pushl
and
ljmp
cli
arpl
hlt
jno
sub
popa
lret
into
int
inc
add
popf
repnz
lcall
cmpl
xchg
cmp
gs
sbb
pop
mov
cmc
pop
cmp
mov
sub
je
ret
mov
std
push
hlt
ret
iret
mov
jp
dec
and
push
jno
subb
jb
leave
jecxz
lods
mov
cmp
mov
daa
mov
call
outsb
mov
out
inc
out
push
add
pop
and
xchg
mov
sahf
orl
jmp
stos
sbb
jge
fs
pop
sbb
in
jbe
sti
sbb
dec
sub
leave
jp
or
push
insb
fcompl
lods
stos
cmp
popa
mov
cmc
xchg
mov
loopne
mov
push
icebp
xor
sub
mov
cld
push
and
mov
stc
in
xor
inc
imul
xor
mov
push
ljmp
inc
sub
jg
push
mov
in
rcr
scas
sub
push
mov
ss
mov
sbb
sbb
mov
adc
push
stos
inc
and
pop
imul
inc
and
nop
sub
xchg
imul
add
jno
stos
dec
enter
and
push
loope
mov
test
cmp
scas
arpl
mov
or
jge
sub
fwait
sbb
xlat
leave
lods
mov
adc
mov
sub
scas
cmp
sub
inc
cmp
out
jge
push
mov
jmp
mov
sahf
xor
inc
cmp
mov
loop
hlt
ss
sbb
dec
xchg
jns
cmc
cmp
mov
push
fstpt
adc
addr16
testl
push
das
mov
scas
xor
jne
add
xchg
test
xchg
inc
adc
inc
ret
push
inc
push
adc
outsl
lret
rcrb
mov
adc
sbb
and
cmp
daa
cld
loope
in
cmp
and
push
xor
jbe
test
fsubrs
dec
in
cmp
out
xchg
loopne
lret
cltd
mov
arpl
add
jle
push
or
sarl
nop
les
inc
xchg
sbb
pop
adc
adc
jnp
shlb
fistps
mov
stos
stc
lock
cmp
add
sub
push
cmp
sub
sti
or
fwait
hlt
testl
imul
push
ds
add
add
lret
xchg
add
gs
inc
andb
pop
inc
pop
xor
xlat
pop
arpl
sub
enter
and
push
out
les
xchg
add
loop
xchg
lds
push
les
and
cli
inc
inc
sahf
sbb
jp
jle
mov
xor
push
or
jg
xchg
inc
ret
xor
dec
rorb
js
je
push
mov
mov
add
sbb
or
cmc
add
sahf
push
js
cmpsl
je
lcall
lock
mov
dec
lods
fs
fcoml
sbb
cmp
mov
in
and
stc
arpl
dec
push
dec
jp
jg
mov
scas
addr16
mov
and
sahf
cmp
lods
cmpsl
in
pop
sahf
xchg
push
push
sub
bound
fimull
mov
sarl
jl
sub
fcmovne
in
in
push
cmp
lock
dec
inc
scas
pop
or
add
idiv
add
outsb
push
and
cmp
es
adcl
ljmp
js
fsubrs
pop
xchg
adc
sbb
cmp
push
inc
inc
mov
cmp
mov
nop
sub
in
xor
xor
pop
inc
push
in
pop
cli
je
ja
enter
movsb
sbb
and
xchg
jb
sub
xor
inc
mov
push
xor
xchg
popf
mov
xor
mov
jecxz
ds
fiaddl
push
cwtl
dec
test
in
mov
jns
pop
das
fisubrs
jnp
xor
push
ret
inc
ds
or
pop
mov
loop
xchg
inc
out
enter
leave
inc
add
dec
push
int
push
movsl
push
mov
sub
in
mov
xlat
leave
jbe
sub
ds
jecxz
push
ja
jae
jp
cmp
pushf
pop
cmpb
mov
push
adc
fnstenv
jno
bound
cs
inc
or
shl
xor
xor
andl
bound
cli
xor
lods
stc
xor
mov
repz
mov
jae
and
or
jo
sbb
in
jno
popa
push
inc
enter
ss
leave
inc
dec
dec
stos
xor
jns
jmp
adc
jae
ret
dec
clc
pop
push
pop
stos
mov
loopne
jns
push
nop
es
rcr
or
xor
cmp
inc
cmpsb
dec
rorb
mov
pop
mov
bound
jae
xchg
mov
bound
and
lahf
ret
cmp
dec
test
cs
test
fs
pop
roll
sbb
stos
lds
movsb
loopne
subl
fstpl
and
sbb
inc
mov
lods
ret
add
jle
mov
pop
les
in
xchg
fstps
aad
add
mov
jo
int
pop
sub
ss
inc
pop
rolb
sbb
or
lret
pushf
mov
jmp
in
std
sarb
stc
int
cmc
gs
mov
gs
push
outsl
jns
pop
outsl
push
cmp
xchg
lret
xor
jl
sub
test
inc
dec
cmp
inc
adc
adc
fildl
bnd
int3
pusha
mov
cmp
cli
dec
or
jl
and
mov
or
outsb
test
fidivrl
xor
aas
cmp
or
mov
inc
in
mov
fisubrl
in
rcrb
adc
and
sub
push
cmp
cmc
test
insb
xchg
ret
out
notl
fs
xchg
icebp
testb
sbb
cmp
sbb
lds
mov
fxch
inc
ja
xor
push
movsl
rcll
leave
cwtl
scas
int
imul
mov
loope
jmp
hlt
lods
pop
xchg
adcl
pop
xchg
dec
sbb
lret
aas
cmpsb
push
loop
fcmove
mov
inc
scas
enter
jno
sub
imul
fidivrl
pusha
add
nop
lret
xor
pushf
bound
add
insb
add
xor
mov
leave
imul
les
jns
les
repnz
mov
lea
lcall
ja
mov
daa
aad
push
cltd
pop
ret
add
idivb
cld
fsubl
mov
or
jnp
jnp
jg
inc
cli
sbb
mov
xor
clc
rorb
mov
xor
stos
roll
xchg
inc
inc
inc
add
in
test
jl
repnz
mov
out
sahf
mov
ds
cmp
fucomip
repnz
mov
sub
pushf
mov
test
push
lock
dec
pop
mov
in
pop
pop
outsl
xchg
or
test
push
mull
fimull
mov
sbb
cmp
adc
imul
dec
out
xor
cli
in
movzbl
xchg
test
test
jbe
fnstcw
data16
inc
fidivrl
xchg
mov
xor
add
mov
js
mov
mov
sub
insl
out
les
sbb
ss
push
sub
adc
and
push
cwtl
dec
mov
dec
push
test
mov
fstl
push
loopne
imul
imul
sub
into
xchg
mov
lretw
mov
inc
pop
ret
fimuls
xor
lcall
popl
gs
adc
and
or
lds
int
jmp
dec
inc
cmpsb
jnp
lock
cli
ss
inc
jge
sti
and
scas
loop
fwait
loop
cmp
sbb
movsb
shll
leave
xor
faddl
inc
sbb
push
fnstcw
jmp
pop
ret
icebp
into
scas
mov
out
pop
test
xor
lods
jmp
jmp
ret
fcomps
push
xor
xor
aad
dec
jno
push
out
fbstp
mov
enter
cmc
push
mov
lods
popa
pop
cmp
popf
enter
mov
add
mov
or
xchg
loop
test
lahf
mov
add
int
push
xchg
sbb
add
idiv
sub
mov
out
aad
inc
imul
addr16
pop
sub
cld
mov
popa
mov
and
xlat
ss
repz
xchg
xchg
daa
lock
adc
js
das
outsb
mov
add
lock
loope
add
popf
stos
movsb
adc
mov
mov
nop
push
repnz
inc
jecxz
sti
cmp
iret
cmpsb
pushf
data16
xchg
enter
jns
mov
xor
jo
nop
push
jg
gs
jp
popl
dec
cmp
rorb
sub
call
leave
add
ret
inc
repnz
dec
popa
xchg
daa
lods
jp
mov
andl
pop
sub
inc
dec
sti
popa
adc
fsubl
and
cmpsl
inc
sbb
cld
adc
mov
mov
scas
fists
gs
pop
inc
mov
mov
or
cmp
addr16
aas
sub
ror
leave
sub
imul
lret
test
js
or
and
jmp
orl
fisttpll
shl
push
lcall
mov
push
adc
out
adc
mov
aad
iret
test
dec
push
lock
jnp
cld
cmp
arpl
mov
leave
imul
lahf
lahf
mov
ja
mov
push
adc
push
movsl
or
loope
add
aam
paddq
push
cmpsb
scas
or
pop
inc
leave
and
ficomps
sub
scas
out
jle
sbb
xchg
inc
movsl
mov
repnz
rorl
inc
and
mov
jmp
mov
add
or
into
cmp
or
xor
mov
aas
adc
xchg
pop
test
test
lahf
ucomiss
adc
leave
or
cmpb
mov
jp
pop
inc
jae
xchg
rcrb
js
xchg
jg
xchg
lock
xchg
cs
mov
ss
movsl
mov
jl
mov
mov
pop
add
jle
decl
or
mov
mov
sub
iret
sub
push
xchg
mov
inc
das
pop
outsb
out
es
fldcw
xchg
repz
push
mov
sub
mov
dec
dec
dec
ficomps
data16
or
mov
data16
aas
xor
dec
inc
cmp
inc
in
cltd
cmp
cld
add
lds
das
jg
popa
test
pop
xor
dec
popa
sbb
scas
mov
jns
shrl
push
out
fbld
xor
dec
cmp
jmp
adc
inc
aaa
add
xchg
xor
nop
and
cltd
loopne
sti
pop
adc
push
cmpsl
pop
jmp
je
scas
pop
adc
pop
imul
xchg
mov
push
mov
jmp
popf
xchg
jp
inc
dec
int
popa
cmp
xchg
addl
mov
xor
jmp
testl
or
pop
mov
mov
fcompl
into
mov
pop
imul
jb
push
pop
inc
sti
push
fsts
imul
adc
stos
ja
mov
cld
dec
or
es
incl
call
mov
inc
dec
sub
mov
push
push
jbe
inc
jb
push
jne
or
jb
cmpsl
pop
cmp
pop
std
mov
mov
xchg
pushf
xchg
mulb
mov
xor
push
cmp
rcr
jmp
pop
fmul
sbb
int
push
mov
jns
das
mov
fcompl
mov
pop
lods
mul
pop
je
fwait
and
xchg
pop
pusha
mov
std
jbe
pop
cld
ret
dec
xor
mov
add
jns
lock
adc
adc
test
call
mov
test
sarb
and
jle
popa
sbb
cmp
repnz
orl
jb
add
int
pop
cmp
dec
dec
xchg
adc
jl
mov
xchg
sub
test
aam
mov
enter
inc
jae
cmp
filds
rolb
test
sub
enter
pushf
sbb
pop
push
and
sub
arpl
xchg
jae
outsb
push
jns
sbb
loop
movsl
lods
stos
out
xchg
addl
push
push
dec
mov
push
mov
imul
gs
arpl
ficoml
aam
cli
int3
xor
adc
pop
scas
pop
int
insb
pop
pop
outsl
sbb
into
repnz
mov
fwait
aaa
dec
iret
cltd
icebp
push
rcrl
pop
aam
clc
lret
aad
dec
pop
fnstcw
sub
loop
mov
movsb
addr16
mov
call
cld
icebp
jg
and
adc
fisubrs
sbb
adc
out
sbb
data16
inc
xor
fcoml
adc
sti
dec
push
and
sarl
and
jecxz
push
pop
dec
mov
sti
sbb
pop
ljmp
add
mov
dec
add
lods
aas
jle
inc
dec
mov
decb
out
mov
sbb
push
and
cli
add
inc
bound
mov
jo
push
cmp
daa
xchg
jo
movsb
or
xchg
es
addl
enter
jge
jmp
push
mov
jmp
jge
cmp
aas
push
jno
nop/reserved
mov
push
and
daa
in
pusha
mov
jb
mov
xchg
xor
pop
test
testb
addr16
sbb
pop
xor
inc
scas
fistpl
adc
iret
sbb
inc
jp
cmp
xor
sbb
sub
dec
imul
xor
mov
xchg
adc
int
mov
daa
lea
aas
fistpll
sar
sti
add
js
pop
loopne
pop
rcrb
adc
inc
jmp
and
mov
rorl
popl
lcall
cmc
inc
mov
cs
sarb
fnstsw
imul
movsb
inc
loopne
popa
lods
sbb
sar
movsl
xchg
mov
lods
mov
fwait
xchg
mov
xor
adc
sahf
stos
cmc
pop
sub
jle
mov
xor
dec
dec
fildl
in
or
lods
loope
and
jnp
cs
testb
xor
push
hlt
scas
sbb
repz
stos
cmp
jnp
nop
imul
cmc
inc
xor
or
mov
xor
or
clc
int
adcb
xchg
lds
mov
cmp
cmp
and
dec
or
jb
mov
push
lds
gs
inc
inc
stc
daa
xchg
or
fsubrl
hlt
lds
std
mov
push
bound
fisttps
dec
xchg
xlat
mov
mov
nop
mov
imul
push
xor
or
loop
pop
in
mov
inc
insb
xchg
scas
scas
inc
or
cmp
sbbl
test
dec
mov
daa
push
jb
dec
push
movsb
arpl
loop
adc
insl
adc
test
dec
sbb
mov
xchg
mov
inc
pop
lock
stos
push
adc
lret
mov
out
mov
push
aad
jae
test
popf
inc
and
inc
fimuls
mov
xchg
xor
dec
out
fiadds
adc
out
jmp
mov
adc
ret
bound
mov
cmc
adc
xchg
fcompl
push
lret
or
cmp
xchg
inc
dec
push
aad
push
and
scas
inc
and
lcall
mov
mov
decl
imul
inc
ljmp
xor
mov
icebp
stos
pushf
stos
add
inc
cmp
mov
mov
nop
mov
sti
adc
bound
jno
cmp
lds
jns
clc
pop
or
scas
ja
jp
lea
loopne
popa
mov
dec
repz
mov
lods
and
xor
add
sub
sub
sbb
std
xchg
jp
xchg
sub
xchg
repz
lahf
repz
ljmp
pop
xor
int3
and
aaa
inc
mov
mov
mov
imul
outsl
scas
fsubrp
popa
mov
or
add
xlat
std
adc
inc
push
sbb
std
xor
movsb
dec
test
dec
insl
sbb
int
cltd
adc
mov
pop
or
pop
std
and
adc
mov
push
nop
mov
imul
xchg
fldcw
sbb
xchg
hlt
in
cmp
cmpsl
pop
lret
lds
shr
movsb
test
int
push
push
or
out
lret
leave
outsb
xchg
ss
les
icebp
mov
mov
dec
loope
xorl
outsl
cmpsb
push
inc
fwait
bound
or
aas
lea
fwait
lods
dec
jge
cmp
pop
cmp
xor
mov
inc
cltd
ja
and
sahf
pop
xchg
sbb
or
cmp
ret
or
or
mov
mov
lea
lcall
daa
int3
mov
inc
aaa
cvtps2pd
jmp
outsb
shr
sub
or
xor
or
call
push
out
ss
xor
jnp
xorl
or
add
lods
out
adcl
dec
or
mov
cmp
or
and
sarb
cmc
jno
sbb
imul
push
pop
fimuls
mov
cmpsb
push
push
adc
xlat
clc
icebp
push
jl
stos
push
popa
adc
sti
pop
cld
xlat
sub
test
mov
pop
mov
jns
add
cmc
filds
popa
jecxz
push
outsb
les
inc
gs
mov
sbb
shll
sbb
xor
inc
aam
es
adc
jp
mov
aad
imul
aaa
mov
mov
cwtl
jns
mov
dec
pop
xchg
ret
and
inc
cmpl
mov
outsl
lods
popl
clc
jae
loop
push
mov
and
xorl
les
sbb
adc
sbb
pop
data16
nop
or
push
mov
cmp
pop
popf
call
repnz
jl
int
stc
sub
mov
aas
push
fs
cmpl
faddl
push
rorb
dec
and
int
add
sub
dec
loopne
cmpsb
pushf
dec
jmp
or
arpl
pushf
inc
aas
dec
clc
push
shll
pop
xchg
inc
mov
addr16
cmpsl
sub
push
add
pop
sub
dec
mov
push
lds
mov
push
pop
jg
aam
mov
scas
sbb
pop
fdivrs
shl
inc
lret
in
dec
mov
mov
hlt
lret
inc
loop
mov
mov
dec
js
daa
bound
mov
pop
add
rol
aad
jno
pop
sahf
fcomps
sahf
mov
and
and
test
loope
jbe
mov
stos
sahf
inc
addr16
sahf
scas
mov
xor
in
cld
pusha
gs
sbb
add
lret
dec
push
push
cmp
in
lock
push
lock
stc
and
dec
lods
jnp
jns
mov
scas
fnstenv
push
cwtl
inc
aas
add
test
pop
push
push
addl
hlt
les
dec
ret
imul
shll
fnstenv
cmp
lret
rclb
pop
adc
xor
sbb
sbb
cmp
sub
rorb
cs
sbb
sti
fistpll
rolb
add
mov
imul
test
inc
nop
mov
and
fistpl
stos
mov
xor
call
incl
jecxz
addl
xor
xchg
inc
add
dec
add
xchg
jae
ret
jge
mov
xchg
sbb
sub
or
mov
ret
test
sbb
adc
lret
pop
jae
cmpsl
push
and
fmuls
ja
sbb
ljmp
outsb
test
cmp
aaa
push
mov
bound
add
cli
inc
add
outsb
push
jns
fimuls
inc
push
out
add
fs
mov
sub
cltd
pop
or
repnz
xchg
mov
or
adc
jl
out
mov
data16
imul
cmp
ret
das
inc
lahf
mov
cmp
cmp
andb
inc
xchg
and
std
ret
xchg
daa
movsb
xor
jecxz
notb
inc
inc
arpl
cmpsl
mov
inc
lret
sti
loop
adc
cmp
mov
nop
lahf
xor
pop
gs
enter
adcb
jb
hlt
xchg
lret
lods
push
cs
std
mov
lds
aad
std
push
scas
sbb
icebp
mov
cmc
pop
adc
pop
pop
mov
decl
inc
mov
inc
pushf
aam
xchg
sbbb
mov
hlt
mov
adc
inc
or
loopne
nop
and
ds
popa
pop
lcall
mov
jne
iret
mov
push
outsb
dec
dec
add
jecxz
sub
test
fisubs
ret
cmpb
sub
rol
roll
gs
mov
hlt
bound
cld
popa
outsb
mov
xchg
lahf
out
fcomps
jns
popf
popl
shll
adc
and
enter
add
sti
or
cmp
ds
adc
mov
rorl
and
andl
mov
push
rol
and
leave
shrl
xchg
scas
in
inc
nop
cld
inc
popf
insl
cmp
pop
push
pop
aaa
mov
sub
lcall
push
push
stos
ljmp
leave
lahf
mov
call
xor
inc
mov
cmp
pushf
push
xchg
hlt
add
fwait
icebp
jnp
pop
pop
cld
gs
movsl
pushf
mov
dec
stc
xchg
rorl
xchg
xchg
mov
shlb
ja
adc
jnp
fmull
push
lds
enter
in
lock
and
mov
pop
dec
fildll
mov
push
lods
or
in
push
xchg
xchg
jne
jg
pop
lcall
lock
scas
stc
popf
jle
push
or
mov
cmpb
addb
cwtl
js
jmp
es
jp
mov
mov
sbb
jl
mov
test
rol
inc
mov
xchg
ja
cmpl
cli
pop
sub
rol
jns
clc
insb
dec
mov
or
dec
xor
or
por
daa
nop
icebp
movsl
shr
enter
push
into
pop
lret
es
leave
test
shll
pop
pop
gs
dec
nop
cmp
rorw
xor
pop
iret
adc
sub
rclb
adc
rcll
push
and
push
dec
adc
jmp
js
add
dec
popa
cmp
mov
pusha
push
add
jb
lds
pop
iret
stos
push
xor
and
add
xchg
sub
pop
mov
sti
stos
sbb
cmp
daa
dec
and
or
add
pusha
xor
mov
js
mov
jmp
call
mov
push
movsb
in
jno
outsl
and
aam
not
leave
pop
jp
dec
clc
or
inc
mov
ds
mov
sti
sub
sbb
jge
je
rcrb
jbe
mov
push
pushf
xlat
test
and
jmp
ret
mov
loopne
or
jb
fisubrs
ret
pop
hlt
decl
adc
jle
adc
mov
out
jbe
addl
inc
or
and
push
and
and
cmp
jmp
mov
fadds
sarl
dec
dec
aam
push
jb
inc
pop
pop
out
sub
icebp
sbb
enter
fcmovbe
out
jno
sahf
inc
in
sbb
inc
xchg
shrl
lahf
ret
pop
mov
cmp
add
sub
jge
ficomps
popf
jle
inc
mov
xchg
fs
icebp
jno
std
add
pusha
add
push
xchg
inc
cs
loop
insb
jne
mov
cmp
add
iret
enter
movb
shlb
push
inc
insb
pop
push
bound
mov
cmp
lcall
sahf
mov
cmc
in
js
fmul
scas
add
sub
insl
add
or
hlt
js
add
jmp
icebp
add
jp
cmp
add
xchg
andl
xor
xchg
test
mov
nop
adc
lret
push
or
mov
stos
sub
add
mov
sub
icebp
xchg
fsts
dec
movsl
ja
je
jns
fdivl
push
outsb
repnz
rcrl
loop
pop
cmp
add
fisttpl
xchg
and
add
leave
fidivs
mov
xor
push
add
loope
or
cmp
inc
test
iret
dec
push
int3
inc
arpl
xor
sub
enter
fstpl
cmpsb
jecxz
stc
or
sbb
aas
push
mov
pop
or
mov
jnp
or
ret
sahf
repnz
mov
imulb
mov
sub
and
xor
xchg
jbe
add
jecxz
inc
in
dec
repz
andl
ret
roll
cmpsl
cwtl
mov
jle
icebp
xor
dec
or
xor
xchg
nop
dec
mov
test
aad
or
orb
cmp
inc
cmp
push
mov
out
mov
mov
mov
jl
pop
shl
cmpsb
add
lea
dec
mov
std
mov
inc
jnp
mov
fimuls
sbb
cli
cmp
mov
scas
lods
pop
or
je
fiaddl
push
xchg
nop
cltd
pop
sub
xchg
test
push
mov
cmp
dec
cmp
add
mov
hlt
mov
xchg
unpcklps
test
orb
or
push
decl
arpl
inc
add
lahf
mov
les
leave
sub
out
cmp
adc
hlt
arpl
loopne
sub
pop
adc
or
pop
adc
mov
add
push
xchg
lods
daa
je
test
add
std
sub
push
xor
into
inc
and
mov
mov
jmp
sub
add
xchg
mov
sbb
push
or
cmp
cmp
aad
fisttps
mov
rcr
xchg
stos
pushf
sti
and
mov
mov
dec
cmp
push
mov
mov
subl
into
popf
jle
fisttps
cmp
mov
pop
leave
pop
jle
mov
or
adc
pop
jmp
xchg
test
hlt
xchg
jge
cmp
fcomp
inc
fldt
fld
rcrb
adc
mov
xor
test
popf
and
clc
cmp
push
arpl
pop
mov
lret
pop
xchg
loopne
push
fldt
fs
fldl
cld
dec
dec
mov
scas
scas
inc
outsl
and
cmp
sub
int
lret
repz
data16
fists
inc
xchg
aad
dec
adc
cmp
adc
shl
pop
jl
mov
dec
or
xchg
mov
enter
aad
ret
jge
push
jb
test
add
fstpl
lea
leave
cld
jecxz
fcomps
mov
popl
mov
xchg
push
shlb
in
iret
mov
pop
gs
hlt
imul
aam
pop
jno
sbb
sub
mov
and
inc
pop
push
dec
xchg
jb
iret
pop
push
dec
std
fwait
dec
ret
outsl
neg
fdivr
fstps
or
xor
dec
mov
std
int3
sbb
pushf
repz
and
cmp
jo
iret
pop
sub
xor
sysenter
ret
cmp
insb
jecxz
sub
aas
mov
mov
js
cmp
icebp
lods
aas
mov
clc
stos
xor
cmp
push
and
adcl
xchg
bound
lods
jge
aas
movb
dec
js
sbb
sub
adc
pop
jmp
add
dec
sub
xchg
mov
stos
mov
xlat
fdivr
and
inc
push
pop
sbb
push
inc
push
jno
or
fimuls
pop
divb
xor
pop
out
cmpsb
cwtl
fdivs
push
xlat
pop
mov
adc
lea
adc
fists
iret
mov
movb
xchg
cmp
cmp
shlb
mov
inc
xor
xor
pusha
pop
add
xchg
ljmp
sub
pop
mov
icebp
mov
sbb
jmp
mov
rorb
sub
mov
or
inc
adc
dec
xchg
mov
in
mov
push
add
pop
fs
jae
test
imul
mov
cs
mov
add
add
xchg
filds
mov
sbb
fldenv
std
fisttpll
je
std
jp
gs
lret
dec
cmc
andl
mov
int
adc
mov
je
mov
aam
mov
in
enter
cmp
sbb
xor
lahf
push
xor
addr16
jp
ficoml
sarl
adc
lods
push
lods
and
mov
dec
test
xchg
push
ret
fisttps
cs
mov
cmp
adc
or
xchg
add
xor
test
pop
dec
pop
dec
inc
push
sbb
push
aam
aam
dec
adc
xchg
shrl
pop
in
imul
pop
stos
pop
jl
or
outsb
and
inc
call
dec
adc
pop
ret
sbb
loopne
mov
xchg
lods
dec
lods
lret
iret
ds
sub
jp
popf
xor
xor
dec
mov
jns
adc
pop
xor
ret
sbb
cmc
testl
sbb
push
hlt
fisubrl
stos
mov
xchg
jnp
and
add
cmp
ret
mov
bswap
mov
int
inc
pop
xchg
icebp
push
loop
sub
push
inc
divb
mov
inc
push
cmp
dec
mov
stos
popf
jno
and
hlt
sbb
xchg
leave
subl
mov
adc
jns
aad
dec
jp
cld
stos
mov
ror
mov
push
movsl
dec
fdivr
leave
inc
cs
mov
lret
sub
int
push
and
push
jbe
repz
lods
mov
add
loopne
xlat
cmp
sbb
sub
loop
outsb
inc
cli
decl
push
imul
sbb
enter
bswap
mov
aaa
mov
popa
push
cltd
sbb
cmp
loopne
into
stc
pop
push
pop
popa
sarb
lock
or
add
sub
add
cmp
and
inc
mov
daa
xor
or
adc
push
dec
aaa
xchg
mov
or
pusha
jno
pop
add
add
sub
dec
push
mov
fnstcw
inc
outsb
ljmp
mov
in
inc
inc
adc
inc
inc
or
pop
pusha
cwtl
cmp
into
js
jns
mov
popf
pushf
bound
push
hlt
out
or
sbbl
mov
fisttps
test
mov
add
mov
idivl
sahf
jmp
negl
in
aas
mov
jns
sub
pop
rcrb
cmpxchg
pop
iret
inc
hlt
push
sub
dec
sub
inc
jl
and
push
inc
std
mov
inc
into
cmc
popa
gs
xchg
stos
in
adc
ds
pushf
andb
cmp
scas
scas
or
pop
adc
jae
pop
sbb
flds
lock
mov
mov
ret
adc
pop
out
mov
loope
fdivrs
sti
cmp
cmc
aas
push
sarl
test
pushf
aas
sbb
cmpb
jmp
jno
xchg
movsl
adc
add
fstl
cmp
or
repnz
push
push
dec
pop
fwait
cmp
lea
es
jnp
inc
mov
fidivl
pop
or
jns
lods
jnp
dec
push
dec
ss
pop
int
sub
add
andb
in
lcall
popf
mov
push
dec
inc
cwtl
stos
inc
adc
fistpll
mov
pop
add
ficompl
xchg
push
mov
xor
call
jae,pn
outsb
xchg
cmp
cmp
data16
cmp
stos
sti
test
int3
test
stos
insl
jno
shl
das
mov
mov
add
stos
push
mov
cli
mov
stos
orb
aaa
sar
xor
in
add
jecxz
lods
je
push
sbb
fsubrl
lcall
push
xchg
xor
jl
ficomps
addr16
xor
stos
scas
ffree
sub
push
test
or
popf
movsb
mov
mov
sub
nop
cmp
xor
push
nop
sbb
ret
mov
aam
pop
pop
dec
sbb
jbe
aad
out
dec
pop
aam
sub
sub
mov
bound
push
in
mov
and
dec
dec
mov
push
mov
add
mov
pop
sub
inc
xor
ret
xlat
rol
and
movsb
imul
loopne
mov
inc
mov
xchg
ret
lcall
sub
orl
mov
test
int3
xchg
daa
and
sbb
xchg
decb
jb
and
sub
fdivl
fistl
adc
adc
mov
iret
push
cmpsl
pusha
mov
and
loop
cmp
nop
js
cmp
sahf
sub
jno
mov
and
jb
sbbl
mov
sbbb
in
aam
loopne
and
mov
dec
mov
mov
jg
inc
loope
filds
dec
std
pop
or
scas
rcll
dec
push
mov
cmc
and
xchg
or
jge
out
lods
xchg
adc
jmp
aam
and
scas
pop
shlb
sbb
mov
movsl
push
das
cmp
mov
push
or
pushf
mov
and
mov
test
jnp
mov
or
jle
inc
loopne
jmp
jne
pop
int3
enter
sub
loopne
push
call
adc
hlt
call
ret
pop
push
mov
jecxz
inc
add
push
and
lret
movsb
pop
xchg
mov
xchg
nop
cli
roll
and
sbb
inc
daa
xor
push
notl
or
nop
cmp
popa
push
pop
sub
fld
das
daa
jg
fdivl
jle
xchg
inc
icebp
xor
pop
outsb
dec
ret
sbb
fmuls
xchg
or
sahf
fwait
add
test
sbbb
popf
adc
in
sbb
push
xchg
addl
pop
in
fwait
loopne
add
dec
or
jecxz
mov
cwtl
sbb
sub
mov
push
mov
jnp
xchg
loope
imul
lahf
lods
or
pop
pop
shll
add
mov
aam
test
arpl
mov
xchg
cwtl
sub
sub
outsb
hlt
popa
xchg
sahf
inc
jle
movsl
inc
mov
cmp
test
aad
ficoms
rcll
les
in
inc
or
dec
movsl
es
inc
dec
sub
dec
cmp
jne
in
ficoml
and
mov
sarl
and
mov
mov
xchg
addr16
imul
add
lahf
dec
mov
aad
cltd
xchg
in
sub
shll
jl
enter
lret
popa
add
loop
cmp
imul
cmc
cmp
mov
mov
repnz
test
jecxz
js
sub
inc
stos
mov
mov
lock
mov
mov
mov
pop
js
outsb
add
fsts
fdivs
cmpsl
cmp
out
lcall
mov
xlat
push
jmp
mov
sbb
adc
ja
daa
ret
addb
ret
cmp
push
mov
pop
or
jne
data16
dec
enter
aaa
loop
mov
lcall
mov
fidivrs
sbb
xlat
lods
add
inc
cmp
sbb
xor
add
add
push
pop
subl
addr16
adc
aam
int3
pop
xorb
jp
xchg
lcall
loop
test
or
lahf
cld
or
stos
cltd
xchg
sub
and
cmp
iret
pop
aas
cmpsb
add
lods
mov
stc
sub
jle
dec
pop
lock
mov
xor
or
jge
repz
inc
mov
mov
stos
mov
xor
imul
js
imul
xchg
jp
into
adc
or
int
pop
or
and
push
mov
inc
into
xchg
push
call
xchg
imul
sub
mov
cmpsl
mov
sbb
xchg
dec
repnz
dec
or
jl
dec
and
pop
jns
pop
outsl
ljmp
clc
mov
test
xlat
call
shlb
xchg
pop
cmp
out
fisttpl
leave
repz
and
pop
decb
add
ja
sbb
pop
aaa
inc
dec
and
lods
shrb
cwtl
pop
pop
lods
jge
lret
sahf
stos
pop
je
nop
daa
xor
hlt
jbe
xor
push
sbb
jbe
sbb
jb
loope
mov
daa
out
inc
cli
cmp
xchg
dec
ds
adc
lods
add
push
js
cmp
mov
imul
call
sbb
sub
iret
jmp
in
sub
cmpsb
dec
loop
sbb
cmp
xchg
nop
lods
xchg
xor
mov
mov
fs
dec
or
cmc
xchg
sbb
imul
insb
or
repnz
cmc
shl
dec
xor
jg
adcb
jge
subl
movsb
add
fmull
stos
ret
stc
dec
cmp
outsl
dec
dec
cwtl
stos
lods
pop
pop
xchg
mov
inc
fistpll
enter
repnz
gs
into
addr16
and
aam
call
mov
push
adc
cs
adc
insl
shrl
fstps
cmp
rclb
pop
mov
dec
pop
stos
out
icebp
mov
iret
stos
popa
mov
lods
jle
das
mov
dec
js
mov
mov
mov
sti
sbb
out
scas
sub
cmc
mov
mov
inc
shrl
cld
xchg
cmp
out
inc
cmp
adc
fstpt
pop
inc
divl
jo
orb
je
mov
pusha
sar
aad
jbe
gs
js
aam
jno
js
add
stc
add
fimuls
add
daa
mov
push
mov
mov
xchg
test
sti
mov
sar
cmp
xor
cmp
icebp
shrl
sub
add
movsl
loopne
jbe
ja
gs
push
clc
pop
xchg
add
pop
cmp
pop
xchg
fmuls
adc
lods
mov
rorb
push
inc
jge
or
pop
mov
gs
fcoms
cs
pop
mov
ljmp
cld
adc
mov
dec
sahf
mov
inc
shrb
xor
loop
shlb
popa
pop
sbb
divb
sbb
sub
adc
aad
or
cmp
push
xor
cmp
repnz
push
sbb
inc
fimuls
or
jecxz
nop
jae
or
icebp
push
xchg
xlat
mov
sbb
or
sahf
pop
imul
fcompl
inc
push
xlat
mov
imul
scas
mov
adc
mov
loope
inc
rcr
sbb
mov
inc
push
adc
mov
ja
sbb
ljmp
or
jb
inc
inc
add
enter
sub
jnp
mov
xor
icebp
iret
rclb
xchg
sub
inc
lods
add
mov
movsl
idivl
mov
cmp
arpl
jbe
sarl
lret
mov
dec
xor
sub
add
mov
mov
xchg
data16
rorb
add
mov
hlt
push
jg
mov
mov
and
lret
adcl
fwait
jl
inc
xchg
loopne
repz
jge
and
fstpl
jle
jecxz
repnz
add
int
fs
insb
inc
rclb
imul
fwait
mov
jecxz
sub
cwtl
lret
vpcmov
mov
sbb
mov
cmp
dec
xchg
stos
std
or
or
hlt
int3
loopne
xchg
in
dec
mov
loop
cli
dec
jnp
loope
dec
das
pop
nop
hlt
stc
pop
adc
loopne
std
leave
adc
ja
jno
sbb
pop
jg
jno
adc
imul
cmp
test
sar
ret
movsb
rorl
mov
push
call
jo
pop
into
xchg
xchg
repnz
jle
push
arpl
ftst
or
pop
mull
test
jp
cmp
jp
into
pop
mov
dec
sub
mov
adc
test
or
imul
hlt
inc
push
rcl
sub
vpsrad
lret
inc
fsub
stos
movsb
fnsave
je
insl
call
jmp
pop
push
push
mov
faddl
popf
sbb
cmc
cld
in
and
xchg
dec
mov
sub
fidivs
movsb
xchg
movsb
xor
mov
pop
adc
cmc
test
sbb
cmp
jo
sahf
scas
leave
fwait
ja
inc
out
insb
mov
jmp
sbb
in
inc
out
int
sbb
push
xchg
in
pop
pop
xchg
repz
inc
mov
push
je
lods
test
push
lret
cwtl
sahf
inc
add
mov
lret
or
loopne
aas
mov
popa
pop
mov
and
or
aas
call
imul
inc
xor
fists
xor
insb
imul
and
sbb
dec
imul
adc
movsb
jg
or
mov
imul
push
xorb
mov
xchg
dec
mov
cmp
movsb
pusha
ret
out
dec
hlt
in
jle
rorl
pop
sarb
cmp
in
idivl
sbb
movsb
enter
lds
int3
cmp
cltd
out
daa
paddq
cmp
adcl
rorl
lahf
push
rolb
out
sarb
cmpb
adc
cmp
mov
mov
movsb
loopne
ss
xchg
jl
sbb
pop
not
push
sub
aas
lahf
sbb
xchg
fstpl
js
enter
jne
push
jp
mov
iret
mov
mov
jns
std
cmc
mov
rcll
pop
xlat
jge
aas
inc
cmp
sub
lea
xchg
mov
push
les
mov
pop
adc
fwait
sub
out
jbe
fcompl
sub
jne
loopne
jne
push
cmp
icebp
pusha
nop
inc
mov
xchg
scas
xchg
stos
mov
shrl
pop
inc
sbb
jnp
mov
addr16
jns
push
pop
addb
cmp
es
flds
hlt
cmpsl
xorl
lahf
in
addr16
and
dec
jge
or
cmp
mov
div
xchg
ffree
es
iret
hlt
mov
inc
and
pop
jmp
jne
lahf
sarb
in
jns
dec
xchg
fcmovnbe
inc
push
pop
pushf
daa
mov
insl
jmp
xchg
xor
or
mov
add
pop
lds
push
std
mov
pop
lods
enter
dec
fadds
fnstcw
cmpl
pop
lock
call
inc
aas
outsl
lods
mov
inc
push
inc
add
jbe
mov
sbb
movsl
mov
dec
inc
add
imul
and
or
xor
sub
add
and
sbb
andl
cld
sub
ret
movsb
push
fcmove
jo
inc
cmp
push
mov
inc
push
lret
inc
dec
dec
jg
setno
popa
sbb
adc
dec
scas
jne
fnstenv
xchg
pop
sahf
xchg
mov
mov
leave
dec
ljmp
xchg
jbe
insl
xchg
aas
fs
ja
enter
imul
pop
aaa
xchg
add
jnp
pop
pop
ret
std
adc
mov
push
in
ds
sbb
dec
and
into
cmp
add
clc
jo
dec
dec
xor
mov
add
out
dec
fsqrt
sub
fs
lods
scas
sub
pusha
cltd
js
icebp
and
mov
adc
ljmp
xor
lods
out
cmp
mov
push
push
sub
push
imul
inc
lcall
jecxz
int3
std
xor
cmc
cmp
adc
adc
lea
imul
pop
out
push
sbb
addl
sbb
lods
cmpsl
pop
mov
xchg
push
mov
mov
jo
lods
inc
rolb
push
inc
int3
loope
fnsave
stos
inc
shlb
sbb
push
jge
fdivrl
fsubs
sub
fsubrl
bound
mov
jl
inc
clc
add
sbb
mov
scas
mov
and
push
mov
cmp
ret
fwait
inc
pushf
rorl
shlb
ret
jbe
xor
push
addl
cmp
sub
lods
repz
sar
xchg
fbld
mov
mov
or
pop
fs
dec
sub
cld
sbb
or
mov
cmp
test
cmp
mov
ljmp
pop
mov
adc
inc
push
jae
sub
sub
jae
add
inc
sahf
mov
ss
les
pop
rorb
lds
add
cmp
repnz
cmp
dec
sbb
roll
into
lods
dec
fldl
adc
push
mov
sub
inc
bound
mov
dec
mov
push
lret
sti
inc
ljmp
loop
cmp
addr16
lds
lods
mov
enter
cwtl
mov
bound
aad
scas
leave
cmp
loop
mov
fistpll
jno
clc
or
orb
mov
inc
mov
lods
aad
push
push
pop
jle
push
mov
mov
test
popl
shlb
xor
ss
and
mov
mov
std
nop
inc
push
jge
lret
data16
add
sbb
dec
pop
sbb
cmp
xlat
dec
push
cmp
je
sub
add
dec
dec
rcr
jnp
xor
jp
mov
movsb
pop
dec
mov
hlt
jge
test
pop
jle
shlb
ljmp
adc
movsb
call
outsl
sub
leave
add
mov
and
dec
imul
stos
jl
sbbb
shlb
pop
and
clc
mov
pop
cs
jbe
cmp
lock
jmp
dec
mov
xchg
lahf
sub
inc
push
sbb
pop
loop
lahf
jne
shrl
test
ja
mov
fldenv
mov
adc
inc
loope
and
and
inc
leave
shll
pop
cmp
lret
jge
cmc
sbb
mov
lahf
les
jecxz
movb
movsl
loope
lock
mov
pop
jge
mov
and
xchg
jmp
das
sub
outsl
mov
push
shr
fs
je
imul
lods
jl
and
mov
cld
insb
pop
repnz
subb
mov
pop
sub
sub
and
test
sbb
xchg
jns
and
sub
lahf
loop
movsl
pop
es
push
sbb
jle
outsb
cmpsb
mov
shl
jae
xchg
push
arpl
inc
adc
mov
pop
jle
movsl
xchg
ret
xor
pop
sub
cli
pop
or
sbb
xor
add
cmpsl
add
adc
or
xchg
pop
lods
inc
inc
mov
xor
addl
imul
shr
imul
lods
push
movsl
xchg
loop
mov
sub
pop
xchg
aas
xor
xchg
push
fidivl
or
pop
inc
and
push
fsubl
cmc
or
sub
lds
sub
js
in
cmp
lods
mov
sub
or
xor
jle
subb
xor
stos
lea
inc
sub
int
pop
and
lods
shl
inc
add
in
ss
ds
push
pop
cmc
jno
testl
sbb
jg
stc
adc
adc
pop
jecxz
ret
cmp
fisttpl
iret
pop
add
mov
mov
inc
popa
mov
mov
inc
push
cld
das
xchg
pop
test
xchg
lods
aas
and
sbb
sbbb
movsb
push
inc
es
push
decb
ja
mov
test
pop
sbb
hlt
push
dec
and
cld
push
sub
xchg
je
nop
stc
cmp
mov
out
sti
mov
sbbl
push
jns
cld
shlb
fiaddl
into
daa
jecxz
leave
rcll
fsts
pop
cld
dec
outsb
dec
push
shlb
clc
mov
fldt
sti
sbb
gs
insl
aaa
leave
lea
loope
and
mov
fisubrs
push
enter
push
add
dec
xchg
ss
cltd
jnp
sbb
xchg
out
push
sub
fstpl
jl
or
stc
shlb
rcrl
std
movsb
fs
mov
lds
adc
imulb
xchg
rcrb
adc
mov
push
jb
sti
int
push
add
ret
ficompl
jb
xor
bound
mov
pop
rorl
dec
shrl
lea
xchg
mov
inc
inc
int
popa
mov
jns
lds
or
xchg
dec
out
loopne
mov
int
xchg
push
xchg
repnz
cmp
jbe
or
loopne
jo
pop
mov
loope
lahf
ffreep
aad
or
cltd
out
push
repnz
leave
cmc
outsb
push
fsts
mov
popa
call
jo
sbb
mov
sbb
mov
mov
mov
push
cli
mov
aad
mov
stos
inc
adc
mov
sbb
test
sub
pop
popa
fscale
mov
jge
ret
jno
sbb
and
dec
std
sub
loopne
or
call
cld
xor
lahf
mov
mov
or
insl
int3
pop
aam
scas
cmpsb
clc
push
cs
and
push
xlat
and
imul
mov
pop
mov
pop
mov
push
and
pop
aad
negb
adc
ja
add
std
sti
mov
mov
pop
cli
insl
fdivs
mov
xchg
sub
lret
dec
test
cmp
push
orb
and
cmc
cmp
popa
lahf
leave
jl
pop
jg
or
mov
pop
je
cmpsl
adc
jg
add
adc
mov
les
pushf
std
lcall
push
xchg
sub
roll
enter
adc
adc
mov
mov
add
mov
mov
add
ficoml
cmc
and
aas
jne
hlt
push
aad
mov
dec
inc
and
insb
xor
sar
das
cmpsl
push
mov
push
xlat
adc
movsl
movsl
xor
dec
jnp
mov
test
movb
movsl
fdivrs
fs
lret
mov
mov
sarl
cmp
daa
inc
mov
mov
cld
add
fldenv
mov
ds
jp
clc
mov
aas
leave
inc
xchg
dec
test
cmpsl
jns
xlat
xor
stos
and
push
xlat
cmp
mov
fs
push
jns
inc
jecxz
adc
aaa
xchg
push
sbb
xor
repz
add
and
les
sbb
jl
scas
inc
sbb
lret
xchg
sbb
add
add
mov
popa
or
mov
mov
lcall
fistpl
addr16
and
inc
or
and
dec
xor
dec
dec
or
cmp
xchg
dec
pop
add
rcrb
loope,pt
popa
in
and
cmpxchg
inc
xor
stos
dec
pop
xchg
dec
inc
mov
xchg
push
cmpb
mov
fisubl
mov
loop
mov
or
sbb
arpl
inc
mov
or
jl
pop
lea
mov
data16
and
push
lea
add
and
dec
loop
jae
inc
mov
sub
mov
sub
mov
enter
cmpsb
subl
dec
pop
mov
stos
push
fistpl
xchg
arpl
sub
mov
loope
mov
cmp
repnz
pop
outsl
cld
xchg
mov
sahf
test
mov
mov
nop
inc
mov
and
and
dec
les
aam
xchg
pop
add
fwait
leave
jno
push
ljmp
or
or
unpckhps
mov
dec
and
and
sbb
shrb
out
xor
iret
jne
sub
jmp
inc
inc
dec
dec
xchg
popf
sbb
dec
fstl
mov
jae
shll
mov
addr16
in
ja
sbb
jae
push
insl
dec
mov
mov
cs
push
subb
and
mov
shrl
ss
mov
xor
inc
fistl
fcmovb
mov
scas
jno
sub
idivl
cmpsl
mov
jge
jae
shlb
sub
pop
insl
sub
mov
push
das
or
icebp
jecxz
or
out
pushf
insb
mov
adc
xchg
sub
fisubrl
add
call
sti
xchg
jecxz
dec
xlat
dec
xor
mov
mov
ret
adc
aad
pop
popf
mov
dec
in
vpavgb
jno
add
int3
adc
ficoml
jp
mov
mov
movsl
xlat
pop
bswap
fs
dec
inc
ss
and
iret
xor
pop
pop
movsl
xchg
cmp
and
sti
arpl
out
scas
jb
addr16
cli
dec
and
add
add
jmp
repnz
dec
jno
mov
stos
xchg
xor
cmc
js
fldenv
aam
add
inc
mov
inc
pop
dec
and
dec
and
pop
xor
xchg
push
sub
mov
sub
nop
push
push
push
inc
add
push
in
xorb
pop
fisubs
pop
adc
ja
mov
or
arpl
test
loopne
lret
push
mov
cld
cmp
jbe
enter
pop
sbb
sub
xor
pop
or
sub
mov
fadd
add
test
sbb
push
ja
rep
popf
das
pop
shll
outsb
jno
pop
add
out
or
rorl
fsubrl
imul
bswap
inc
inc
inc
cmpb
loopne
flds
sbb
mov
aas
cwtl
pop
dec
add
jmp
subb
or
cmp
jns
cmp
cmp
inc
sub
and
hlt
mov
dec
xor
es
and
sbb
push
mov
cltd
out
mov
ss
mov
cs
pop
cltd
jb
inc
fists
sbb
les
insl
in
pop
iret
into
inc
les
mov
cmp
std
xor
pushf
int
add
push
cmp
outsl
lock
or
sti
addr16
cmc
or
stos
push
aam
mov
and
adc
aaa
fwait
pop
movsb
jecxz
inc
loope
test
pop
lcall
xchg
data16
xchg
in
sahf
inc
repz
stc
pushf
pop
std
mov
cmp
test
mov
jecxz
push
mov
cmp
sahf
xchg
rcrb
je
ds
dec
dec
mov
int3
jge
out
into
sar
pop
inc
fidivrs
dec
iret
jg
adc
int3
out
push
dec
jno
xchg
test
stc
les
mov
dec
mov
mov
jae
push
imul
into
mov
push
cwtl
testl
inc
mov
mov
aad
int
idivb
dec
adc
jbe
sub
je
sahf
mov
adc
push
push
clc
cmp
rol
fstl
fisubrl
sti
loopne
sbb
and
xchg
shl
scas
ja
adc
and
fdiv
mov
add
mov
lret
dec
xchg
mov
adc
dec
xor
push
ret
inc
out
mov
sub
aas
inc
sbb
xchg
cmp
inc
lea
jbe
cmpsb
mov
data16
js
mov
mov
cmpsl
jp
cmpsl
mov
cmovns
fldcw
test
shr
push
sbb
stos
inc
inc
xor
outsb
sub
scas
shll
pop
in
repz
imul
pop
sbb
dec
rcll
std
test
jl
xor
les
add
enter
dec
in
pop
or
add
sahf
imul
add
and
sub
imul
fsub
adc
fwait
mov
sbb
lret
ret
popa
jbe
insl
push
lahf
cmp
jo
ret
std
push
fldl
add
dec
mov
lods
jbe
cli
fmull
ret
push
sbb
mov
pop
and
xlat
adc
stc
std
les
dec
or
loop
mov
data16
insl
mov
xor
outsb
push
out
mov
and
push
mov
mov
divl
sbb
sub
or
scas
mov
stc
aas
lret
lcall
add
andl
xchg
rclb
les
push
cwtl
ss
cltd
imul
mov
xchg
and
jg
dec
mov
xchg
sub
fistpl
repz
in
rcrb
xchg
mov
sub
dec
mov
addr16
cmp
xchg
insb
jne
mov
or
add
inc
inc
arpl
das
jg
and
jl
stos
enter
addl
iret
pop
lcall
pop
dec
xchg
pushf
fcomps
xchg
ss
push
into
pusha
pop
cld
test
inc
pop
mov
add
xor
push
inc
lods
sub
mov
test
dec
mov
fwait
ret
mov
cmp
test
jge
xchg
jae
add
out
push
adc
push
pop
jae
mov
mov
add
insb
mov
mov
jl
mov
pop
pop
ficomps
out
xor
scas
lock
lods
fs
je
loop
das
dec
std
push
mov
fmuls
cmp
xor
rorl
cld
adc
test
sbb
cmp
fidivrs
cmp
es
enter
jo
xchg
js
mov
sbb
xchg
stc
cwtl
pop
mov
xchg
lods
lret
mov
cmp
xchg
mov
das
stc
mov
adc
sahf
pop
fisubrl
nop
cs
push
pop
std
mov
bound
sbb
push
sahf
and
lea
mov
mov
dec
sub
seta
cs
addr16
int
mov
cld
jecxz
cmp
aad
inc
sub
jae
sahf
mov
add
xchg
aam
add
repnz
dec
xchg
jle
xor
dec
xchg
cmpsl
scas
or
mov
popa
xchg
popf
add
roll
mov
rcl
mov
clc
ret
mov
xor
xchg
mov
jns
jns
sub
jmp
mov
cld
sbb
and
loopne
aad
cmp
pop
xchg
mov
fisubs
das
add
shll
mov
jmp
add
lahf
mov
es
pusha
test
xlat
xchg
addl
or
mov
insl
ss
aaa
mov
int3
inc
pop
imul
cmp
cltd
dec
xor
jo
les
jns
cmp
or
test
test
lret
lods
fisttpl
aam
stos
sub
mov
xchg
jno
or
outsl
or
stos
dec
daa
scas
pop
xchg
lret
bound
sub
jl
mov
inc
leave
mov
dec
cmc
xor
sbb
mov
movsb
mov
jle
imul
test
pop
add
and
and
push
jns
xlat
xor
sti
ficomps
mov
incl
leave
insl
or
cwtl
shr
push
push
jb
fistpl
fs
or
cmp
es
or
add
mov
lea
cs
and
mov
aam
fs
out
scas
dec
lcall
frstor
shll
mov
xchg
out
movsl
mov
sub
push
fwait
pushl
pop
sbb
sbb
aad
inc
add
push
lcall
sub
data16
or
fiaddl
jnp
mov
adc
daa
fwait
xchg
shrb
pop
cmp
into
push
inc
in
shl
push
ja
fisttpl
xchg
and
cmp
lret
es
cmpsl
add
outsb
pop
ja
sub
daa
pop
bound
int3
adc
pusha
jae
pop
fistpl
pusha
stos
sub
xchg
push
movsl
sbb
fstl
in
fstps
mov
into
sti
fildl
hlt
les
lods
pop
sbb
push
popf
test
pop
ret
addb
pop
cs
xchg
mov
dec
aas
cmp
pop
pusha
or
icebp
sbb
add
jb
pop
dec
enter
or
aam
in
push
popa
sbb
loop
stos
fistps
out
xchg
mov
rol
sbb
xor
or
add
pushf
jecxz
mov
xchg
cwtl
inc
sub
icebp
cmpsl
adcl
jne
loop
cmp
roll
sub
mov
pop
rorb
or
pusha
mov
shll
aaa
popf
fs
and
hlt
xchg
sub
ja
rclb
xchg
das
cmp
adc
into
imul
popa
or
jle
fadds
sarb
sub
mov
enter
inc
stos
lea
mov
mov
jae
ret
mov
push
jo
les
add
fistpl
or
cmp
pop
xchg
std
iret
mov
pop
and
pop
bound
scas
dec
in
stos
loopne
or
inc
adc
sub
in
mov
mov
sub
cmp
gs
xor
and
sub
imul
cmp
call
push
pop
shlb
push
and
test
loope
or
fistps
cmc
test
stc
test
loop
ret
int
cmp
out
mov
sti
fnstcw
fwait
cmp
out
es
rolb
loopne
xchg
lds
aad
add
mov
add
adc
and
out
int3
push
stos
fildl
ror
adc
daa
mov
sarl
or
xchg
cmpsb
push
cmpsb
or
jo
xchg
jmp
sub
outsl
or
adc
adc
stos
push
inc
les
mov
cli
mov
sbbl
out
sub
cmp
jbe
aam
rcll
fisubl
mov
sub
mov
xchg
sub
scas
enter
mov
inc
mov
pause
fildll
or
mov
jmp
inc
ror
mov
xchg
sub
mov
dec
jmp
dec
xchg
sbb
xor
cltd
and
fs
sub
test
stc
xchg
dec
sbb
pop
inc
or
xor
cmp
cltd
push
in
pop
ljmp
and
jo
xchg
stos
leave
leave
nop
arpl
and
add
jl
outsb
fimuls
jge
lock
cmp
addr16
push
jp
mov
dec
vpperm
int3
mov
ljmp
into
mov
or
testb
fnstcw
test
cld
pop
xchg
sbb
enter
mov
jl
orl
out
jmp
bound
xor
int
push
scas
xorb
popf
lcall
fcomp
fstl
inc
cmp
sbb
aaa
add
aaa
fcomps
ss
pop
js
sahf
test
mov
pushf
jmp
fstl
aam
jbe
pop
stos
mov
sbb
in
ljmp
inc
stos
ret
addr16
jmp
sbb
enter
out
jle
cmp
in
sbb
cmpsb
push
lret
leave
pop
aad
fstps
xor
fistps
vpcomb
cmp
cs
fdivrs
pop
jno
sub
add
xchg
movb
stos
js
jge
pushf
lcall
sti
cmp
int3
cltd
repnz
fistl
lods
xchg
and
pusha
imul
jb
dec
push
js
add
dec
sbb
and
jno
in
mov
repnz
xchg
mov
fidivrl
cs
lret
popf
loope
enter
out
pop
mov
adc
cmpsl
and
inc
mov
add
pusha
pop
adcb
fsubs
sti
jp
inc
pop
push
jl
jne
sahf
sti
mov
outsb
sbb
lods
jno
pop
hlt
mov
dec
push
rclb
add
mov
std
aam
jno
enter
cltd
mov
cmp
cltd
jns
enter
jnp
hlt
sub
in
pusha
fsub
mov
add
push
pop
fmull
shlb
les
in
loopne
or
mov
imul
call
js
orl
mov
clc
sub
push
lea
rolb
aad
sub
and
push
pop
jae
sbb
movsb
dec
xor
jae
mov
int
dec
and
loop
or
mov
mov
inc
sbb
mov
sti
sub
mov
adc
xlat
dec
lcall
iret
test
cmc
sti
rcr
cmp
sub
mov
jl
leave
pop
push
fistps
orb
out
cmpsb
test
dec
js
push
popf
add
movsl
fsubrs
mov
negl
mov
fsubrl
xor
faddl
jmp
xchg
mov
ljmp
cmp
jbe
mov
je
dec
sub
or
sub
add
cmp
add
out
lret
inc
js
inc
jne
addl
int3
icebp
adc
mov
jmp
xchg
xchg
ret
popa
shl
mov
cmc
push
mov
mov
in
mov
call
mov
jg
inc
aad
call
loop
lea
mov
pusha
xchg
inc
outsl
xchg
pushf
leave
fisubrl
popa
int3
sub
and
xor
push
push
ret
mov
outsb
std
test
hlt
lret
xchg
mov
mov
fdivl
mov
inc
fstpt
pop
es
icebp
in
out
enter
fstpt
cmp
inc
pop
les
cmpsb
aad
cwtl
and
xor
sbb
cmp
rolb
mov
pop
dec
mov
push
call
or
int3
mov
rcl
pop
mov
cmpl
fistps
xchg
jmp
loopne
dec
mov
xor
add
in
cmpl
xlat
push
jo
mov
dec
or
scas
cwtl
in
ret
orl
pop
and
mov
inc
sbb
lea
pop
xchg
test
jno
in
push
and
xlat
add
jl
sbb
xchg
outsb
jmp
or
xor
movsl
or
scas
push
fmul
inc
addr16
repnz
sub
call
pop
jb
hlt
sub
lods
mov
sarb
fdivs
sbb
pop
es
mov
pushl
pusha
push
dec
cli
js
cmp
push
mov
sbb
jnp
sub
fs
sub
cmp
dec
push
fisttps
testb
popf
cmp
int
testl
dec
in
mov
mov
stc
aas
mov
mov
pop
shl
push
adc
pushf
divl
cmp
jecxz
ss
gs
or
test
lea
in
fsubrl
pushf
ss
clc
jl
mov
and
cmp
dec
pop
xor
or
roll
push
dec
outsl
xchg
je
repz
test
lods
push
pusha
sub
jl
add
fcmovu
push
adc
sub
jge
mov
out
or
enter
gs
out
inc
pop
sub
and
mov
fidivs
jecxz
mull
add
lods
inc
je
xchg
aad
jb,pt
mov
scas
add
or
bnd
or
test
fmuls
dec
adc
out
jno
sti
jae
leave
mov
aas
ds
fsubrs
mov
fwait
sub
lahf
mov
pop
pushf
mov
stc
shrb
xchg
cmp
jl
jl
mov
jnp
fildl
inc
xchg
movsb
lods
lcall
mov
dec
mov
cmp
test
popf
add
movsb
mov
stc
mov
dec
cmp
mov
mov
add
cmp
lret
rcl
and
loope
jg
pop
mov
adc
stos
ret
lds
cs
dec
dec
push
cmp
sbb
pop
xor
jne
mov
lea
sub
and
pop
mov
inc
dec
mov
add
hlt
sbb
scas
cmp
mov
xchg
inc
orl
cmp
sbb
xorl
xchg
dec
out
xchg
clc
add
movsl
xor
aam
inc
push
dec
jbe
pushf
shll
add
lods
push
mov
rorl
je
pop
mov
push
hlt
cmp
mov
cmp
jl
sub
insl
add
jp
ljmp
iret
mov
pop
pop
or
bound
cmp
mov
sahf
fisttps
lea
mov
fimull
mov
lahf
nop
mov
jl
or
inc
lock
or
and
jecxz
fs
lock
scas
and
dec
jmp
or
adc
adc
ja
and
popa
das
nop
mov
jae
fmull
and
dec
sub
aas
fs
mov
mov
movb
lcall
in
xor
jl
pop
xchg
arpl
jl
xorl
xor
inc
arpl
lods
mov
repz
push
mov
fsubrl
cmc
pushf
loopne
notl
mov
add
leave
clc
mov
fsub
dec
jl
inc
ret
rorl
adc
xchg
frstor
and
popf
adc
or
jmp
jnp
sub
cwtl
enter
xor
mov
fisttps
sbb
ret
jo
stc
mov
cmp
add
int
add
call
cwtl
and
inc
rcrb
test
push
push
mov
aas
lret
jmp
pop
test
xor
incl
add
stos
addl
mov
call
sbb
xlat
mov
jb
mov
rcr
fsts
mov
jbe
xchg
push
xor
mov
movsl
or
insb
out
fs
fwait
or
sub
mov
push
and
and
sbb
inc
xor
sar
dec
add
icebp
pop
lods
jmp
push
sub
ret
pop
shlb
imul
cwtl
or
ja
test
mov
mov
cwtl
jne
insl
inc
jle
scas
cli
dec
inc
sbb
sbb
dec
movsb
sbb
sub
inc
fldt
push
adc
xchg
or
icebp
dec
cmp
cmpsb
ret
push
add
xor
mov
sub
repnz
jno
sti
cmp
in
cmp
mov
and
fisubl
push
push
cmc
pop
jae
xor
jg
inc
shl
xor
addr16
mov
xchg
test
xchg
sub
test
add
mov
dec
loop
cwtl
int3
test
xchg
mov
mov
iret
inc
rcl
cmp
in
sub
adcl
cmpsl
mov
or
ss
sub
pop
bound
cmc
jbe
jne
mov
leave
jmp
sarb
sub
fsubs
jg
mov
push
pop
shrl
ret
cmp
fucomp
sbb
movsb
movsb
dec
insb
push
mov
cmc
and
stos
stc
mov
in
push
xchg
inc
xchg
in
test
sti
nop
pop
fs
mov
and
add
pop
pop
mov
cmp
mov
pushw
jl
lcall
adc
imul
mov
pop
into
sub
or
xchg
andl
in
leave
and
pop
mov
inc
and
adc
hlt
fldl
jne
jecxz
xchg
arpl
pop
daa
cmp
daa
int
xchg
cltd
dec
pop
mov
lahf
jb
scas
mov
mov
mov
push
and
adc
cmp
and
lahf
pxor
leave
add
das
pop
out
pushf
fcompl
and
fwait
jp
aad
dec
mov
xchg
jnp
nop
mov
xor
dec
pop
xchg
sub
movsb
shl
lahf
data16
adc
imul
jg
ficoml
dec
mov
sbb
ret
jo
mov
push
fldenv
sarb
add
sbb
decl
popa
mov
fisubrs
dec
fwait
xchg
push
movl
aam
popf
push
pusha
push
add
test
hlt
jge
cmpsb
call
mov
lock
je
in
mov
jo
jo
mov
imul
loop
stos
imul
je
dec
int3
dec
js
mov
pop
cmp
jecxz
call
or
rorb
fwait
shrb
adc
pop
xorb
and
inc
and
mov
inc
mov
shrl
nop
test
xchg
aam
mov
xor
ja,pn
lods
mov
push
and
nop
add
lds
dec
cmp
xchg
jecxz
sti
and
fdiv
mov
outsl
stos
jb
imul
mov
sub
arpl
enter
xchg
push
shlb
push
xchg
jmp
xor
push
xor
pushf
cmp
gs
fwait
inc
movsb
mov
xlat
rol
pushf
jae
push
hlt
sti
aaa
fistps
fdivrs
hlt
and
pop
cld
outsl
enter
mov
movsl
int
pop
outsb
imul
adc
and
cli
adc
add
inc
inc
push
and
dec
dec
mov
xchg
push
adc
pop
or
adc
inc
into
scas
imul
aas
sub
xchg
or
mov
mov
and
xor
xchg
ret
lods
jecxz
test
mov
jb
call
addr16
mov
test
imul
add
aas
inc
ret
out
testb
je
push
loop
es
loop
jge
sahf
out
push
ds
dec
dec
mov
data16
adc
and
mul
cmp
aam
nop
lods
jp
mov
out
xor
adc
inc
scas
test
ret
sbb
insb
popf
sub
shlb
not
and
mov
rclb
out
mov
pop
xchg
in
inc
mov
mov
xlat
popa
inc
cmpsl
mov
cs
ljmp
mov
fisubs
mov
int
aas
dec
in
movb
jmp
hlt
les
stos
sub
and
xchg
jg
std
mov
mov
xor
test
or
lcall
mov
ds
popa
and
push
add
xor
faddp
mov
nop
mov
dec
and
cmp
mov
pop
sbb
mov
arpl
ret
push
xor
dec
stos
rclb
push
repz
jns
je
mov
push
or
pop
push
lock
jl
mov
add
loop
sub
fists
lods
out
and
cmp
ljmp
inc
or
pushf
js
aad
adc
cmp
jmp
xchg
fwait
pop
sarl
ja
mov
lahf
dec
das
xchg
mov
test
mov
add
pop
cmp
or
xor
sub
loopne
pop
fs
and
dec
add
xor
divb
push
es
mov
xchg
imul
cltd
ja
cmp
mov
mov
sbb
scas
bound
rdmsr
mov
movb
dec
repz
push
inc
dec
pop
mov
js
fs
cmpsb
jae
cmp
pop
movsl
inc
dec
xor
sbbl
cmp
and
pop
repz
loope
pop
xchg
leave
test
mov
mov
popl
fwait
lods
xchg
fwait
ret
push
paddsw
lods
lock
push
movsb
or
loopne
fsubrl
scas
push
aaa
inc
adc
lahf
ja
adc
nop
lods
jnp
rcrb
fsub
mov
mov
enter
icebp
in
les
cmp
ss
movsl
imul
mov
fmuls
js
cmpsb
cli
cltd
test
xacquire
mov
xchg
pusha
iret
repnz
mov
adc
repnz
andb
xchg
out
popa
push
jge
in
xchg
mov
ljmp
sbb
in
outsl
pop
sarb
cltd
dec
mov
fimull
cmpsl
push
push
adc
or
pop
add
gs
mov
or
sbb
mov
mov
cmpsl
mov
loopne
loopne
dec
sub
mov
mov
or
mov
ja
nop
push
idivb
adc
adc
or
xchg
call
aas
push
test
in
pop
add
jle
add
adc
shl
lcall
and
push
mulb
ss
cmp
mov
je
jmp
mov
xchg
aad
pop
add
shll
dec
inc
xchg
jle
and
mov
inc
lcall
pusha
fildl
out
je
add
dec
hlt
in
xor
addl
rcr
push
mov
xchg
mov
fnstenv
xchg
mov
inc
stos
aad
cmp
jbe
insb
add
nop
shr
mov
sarb
mov
push
std
cs
cmp
cltd
inc
das
ret
or
jb
dec
scas
and
push
popa
mov
into
xor
mov
addl
add
or
xchg
loop
test
xchg
lea
dec
jp
cwtl
popl
or
inc
sbb
cmp
fucom
fbstp
adc
shlb
pop
loope
fidivl
sbb
negb
in
mov
lock
inc
mov
sbb
ror
movsb
minps
neg
cmp
scas
stos
jnp
sbb
xchg
pop
and
push
paddw
push
or
pop
loope
es
test
dec
lods
and
fwait
lds
pop
loope
add
pushf
and
xchg
mov
mov
mov
push
push
in
lret
mov
inc
xor
and
arpl
aam
mov
cwtl
push
pop
lea
mov
lcall
mov
or
push
xchg
jge
outsl
sahf
out
aam
in
adc
or
xchg
pop
das
cmp
inc
mov
mov
cli
mov
dec
cli
scas
mov
sahf
aas
les
roll
addr16
stos
inc
mov
scas
mov
mov
fldt
lret
outsl
clc
sbb
mov
fwait
xchg
filds
dec
lret
adc
mov
popf
orb
jno
pop
dec
inc
or
and
sbb
dec
push
shr
push
cmp
outsl
mov
jno
adc
in
lock
mov
cmp
lods
cmp
jae
movsb
add
pop
movsb
enter
lods
add
je
cmpb
pushf
test
aam
imul
mov
xchg
cwtl
mov
xchg
in
nop
jecxz
and
cwtl
fstps
into
cs
idivb
ret
addl
hlt
adcb
std
dec
jg
push
xchg
jb
stos
and
pop
test
pop
ds
aas
xchg
loopne
push
ret
pop
mov
mov
pop
ret
mov
push
add
xchg
ljmp
js
enter
pop
push
fdivrs
mov
lods
ds
inc
mov
out
pop
outsl
or
or
xchg
aas
pop
orl
fildl
add
subb
mov
cmp
daa
fistl
call
jno
icebp
xchg
arpl
stos
mov
lock
pop
call
push
jbe
push
pusha
lods
cld
pop
inc
jnp
icebp
dec
test
mov
bound
dec
lods
sahf
jmp
xor
or
dec
mov
mov
dec
insb
push
xor
or
or
cmpsb
xor
sbb
jne
sarl
fisubrl
cmpsl
fistl
cmp
push
dec
sarl
fisubs
add
sub
js
sahf
xchg
sub
rorb
pop
and
sub
lods
inc
pushf
fs
add
pop
cwtl
aaa
icebp
mov
js,pn
out
dec
sbb
inc
mov
jl
jmp
loopne
mov
lock
je
arpl
lods
pop
cltd
jns
push
mov
icebp
aas
mov
divb
pop
mov
int3
pop
ljmp
jnp
arpl
dec
inc
mov
fimull
add
in
jb
js
inc
call
in
stos
cli
fisttpl
mov
sub
mov
mov
inc
subl
jbe
inc
push
and
enter
and
ja
adc
gs
adc
idiv
shll
into
js
jo
std
mov
xchg
or
fnsave
test
into
cmp
sbb
push
fmulp
mov
cmc
pop
mov
pushf
out
lds
mov
scas
mov
jge
in
inc
xor
and
xchg
lods
dec
or
push
mov
mov
xchg
fcompl
pop
add
xchg
or
and
roll
inc
icebp
in
jp
jae
idivb
fisubrs
mov
ret
dec
or
push
testb
pop
mov
outsb
rorl
cmp
gs
pusha
sarb
cmp
ffreep
inc
fstps
dec
adc
scas
jmp
dec
mov
popa
js
jne
push
sbb
int3
mov
push
es
stos
add
stos
mov
push
aas
mov
data16
loope
add
sub
fistpl
stos
jne
je
or
repnz
adc
push
lea
mov
mov
or
xor
stos
jb
mov
mov
push
mov
mov
mov
call
into
sub
ljmp
jno
pop
push
adc
push
and
notl
xchg
sub
aas
xchg
unpckhps
add
jno
test
cmp
popa
fsts
cmc
in
push
aas
xor
cmp
inc
sbb
and
mov
jo
popa
int
cmp
loop
add
test
inc
shl
adc
mov
mov
leave
xor
jle
and
or
mov
fstpt
fnstcw
clc
push
push
aam
test
cltd
pop
cmp
cltd
enter
and
cltd
jae
adc
xor
push
or
dec
ja
pop
mov
shlb
adc
movsb
jo
movsb
popf
jge
sub
fcomps
repnz
xchg
pop
pop
inc
pop
pop
test
xchg
push
pop
inc
mov
lods
stos
jle
ret
cmp
sub
inc
mov
jbe
sbb
clc
mov
les
fimull
add
inc
ss
rol
stc
mov
decb
pop
pop
dec
adc
lcall
js
int
daa
push
xchg
push
sahf
dec
inc
and
std
xchg
insl
jmp
daa
cs
sbb
int
stos
mov
add
push
push
push
fbstp
sbb
rol
cmp
incb
mov
or
xlat
inc
dec
xchg
addl
cli
int
add
mov
fcomps
fcmovnb
xchg
leave
xchg
jb
pushf
lock
adc
jo
xor
adc
adc
lods
sbb
mov
fcmovnu
call
add
insb
inc
enter
test
push
test
cmpsb
mov
jp
leave
pushf
repnz
mov
lahf
jg
sbb
add
adc
in
out
or
mov
jle
cmp
add
add
mov
xchg
dec
outsl
add
les
and
ja
pop
sbb
dec
sahf
pushf
mov
fiaddl
jmp
cmpsl
xchg
ficoms
psrad
arpl
pop
inc
mov
shlb
adc
cli
outsl
cmpps
jo
fninit
pop
ljmp
cmpsl
adcb
and
out
stc
sbb
sti
loope
cmp
out
subl
dec
out
push
dec
pop
dec
push
cmp
inc
push
xchg
or
inc
shlb
cmpsl
pop
mov
fiaddl
push
ret
xchg
int
dec
data16
adc
push
jns
and
orl
pop
xor
push
or
loop
dec
icebp
push
push
sbb
dec
dec
popa
insl
jbe
pop
xchg
mov
rorb
call
lds
mov
loop
cmp
addl
cmp
sbb
pop
fidivl
push
test
mov
jns
sbb
mov
insl
ret
icebp
scas
or
pop
xchg
imul
jg
stos
dec
adc
in
inc
imul
outsb
lcall
outsb
ljmp
adc
rolb
jecxz
enter
mov
dec
push
repnz
dec
in
enter
jo
push
mov
imul
sarb
ret
mov
dec
in
std
xchg
cs
mov
xchg
fdivrs
dec
ret
lret
cld
pop
dec
lret
adc
leave
dec
dec
and
lret
mov
sbb
popa
loop
je
enter
xor
jmp
jmp
iret
lock
xor
lret
call
dec
jp
cmp
adc
sbb
push
mov
in
icebp
or
add
mov
cmp
dec
stos
inc
adc
cmp
lds
or
int3
inc
add
das
dec
cmpsb
stos
in
mov
inc
or
out
cwtl
pop
pop
sbb
mov
pop
jne
push
idivb
lds
sub
xchg
fsts
mov
lret
fwait
mov
pop
pop
dec
sbb
daa
les
enter
pop
lret
push
dec
mov
sbb
imul
or
lret
data16
xchg
int
mov
repnz
call
gs
leave
in
sub
pop
leave
dec
add
xchg
cmp
jg
push
pop
das
in
test
in
and
push
or
mov
test
sub
or
adc
inc
add
cwtl
pop
pop
mov
leave
in
shrb
jmp
or
mov
rclb
dec
test
loope
rorb
lock
sbb
and
inc
ljmp
fwait
scas
sub
mov
xlat
jmp
xor
sti
push
or
repz
insl
mov
fmull
test
sbb
int3
cltd
lods
xor
mov
pop
push
cmp
test
xchg
nop
xor
jns
leave
call
mov
fidivl
adc
add
jge
enter
and
mov
add
nop
and
cmpsl
xor
dec
aas
das
cmp
rorb
jle
cli
scas
mov
lods
push
fldenv
cmp
lods
push
sub
shlb
inc
xor
mov
andb
fs
sti
or
je
mov
xchg
sbb
sti
mov
push
int3
addr16
mov
mov
mov
imul
pop
leave
pop
loop
mov
push
add
sub
aad
pop
in
xor
inc
in
js
jnp
mov
clc
aas
nop
in
popf
stos
mov
ljmp
mov
push
cmp
push
sti
scas
sbb
loope
mov
mov
loop
shlb
scas
aad
fnsave
xor
loope
std
popa
jge
pop
jbe
imul
pop
andl
sub
sub
cmpl
pop
aad
mov
test
stc
inc
inc
mov
in
xor
pop
jnp
ljmp
xchg
add
movsb
andb
test
xor
ja
sarb
or
arpl
xor
and
in
das
sub
in
in
inc
add
sbbl
jno
jne
jmp
out
adc
pop
enter
mov
dec
adc
mov
imul
push
mov
jge
mov
scas
or
xor
inc
push
push
sbb
jnp
arpl
int
jle
ret
cs
cwtl
mov
pop
xchg
push
pop
dec
cmp
sahf
xor
lahf
orb
mov
int3
sub
mov
icebp
jmp
push
ficompl
inc
and
dec
pop
fbld
add
mov
mov
mov
nop
fcompl
imul
jne
cmp
es
jo
das
lcall
mov
out
mov
int
cmpsl
movsl
js
shll
cld
xor
sahf
cmp
cmp
inc
xor
push
push
mov
push
xor
xchg
ss
sub
loope
leave
xchg
call
lahf
js
mov
adc
mov
negb
fdivrl
hlt
lret
add
icebp
mov
ja
fs
loopne
xor
xchg
pop
fldt
pop
pusha
in
test
adc
cmp
clc
cld
stos
cmc
jo
mov
loopne
test
mov
cmc
dec
iret
push
test
das
jle
lods
addl
in
nop
lods
shrb
push
and
test
pushl
pop
jb
xor
sub
and
scas
cs
pusha
movl
incb
outsl
rclb
hlt
xor
inc
dec
fmul
xchg
out
push
out
outsb
pop
push
leave
scas
jne
jne
arpl
and
lahf
xchg
add
insb
ds
call
mov
or
add
jecxz
inc
stc
leave
mov
sarb
lret
leave
jno
or
aas
mov
psubusw
shrl
xor
adc
lahf
clc
cwtl
fdivr
pop
int3
sti
stos
out
inc
out
in
jns
je
mov
mov
std
imul
cmp
into
dec
std
insb
add
mov
jb
xchg
and
insl
add
iret
test
sub
push
mov
cmp
jno
pop
cltd
cld
cmpsb
mov
lods
jns
leave
popa
and
mov
and
sbb
xor
cmp
pusha
dec
push
mov
xchg
pop
lcall
repnz
mov
mov
push
xor
jecxz
adc
mov
mov
aaa
rcrl
dec
das
in
stc
push
jecxz
inc
jp
mov
jae
xor
pop
lret
jne
repnz
mov
xor
aad
dec
fimull
jmp
inc
hlt
pushf
mov
repz
mov
sub
scas
mov
aam
leave
or
or
jle
mov
and
xlat
push
fs
mov
pop
add
jge
test
testl
jge
dec
sbb
lahf
push
jns
pop
dec
loopne
mov
xor
js
push
int
mov
insl
lret
vmovaps
jnp
xor
push
jle
mov
in
lret
stos
aad
or
xorb
dec
push
mov
xor
repz
sub
sarb
pop
jle
adc
xor
nop
mov
das
and
jae
pop
cld
out
jg
sbb
inc
sub
mov
adc
add
adc
jge
stos
cmp
stos
popf
xchg
daa
mov
into
mov
icebp
mov
xorl
sub
mov
sub
mov
pop
aad
cli
movl
mov
lret
push
xchg
movsb
ss
and
aam
hlt
lods
jle
xchg
xchg
mov
ret
sub
xor
lcall
mov
xor
stos
into
aad
ror
cmp
movsb
dec
add
mov
aaa
jmp
push
jo
rcrb
mov
push
or
icebp
push
mov
divb
mov
shlb
adc
jb
nop
sti
outsl
pop
and
pop
push
or
ret
insl
jmp
mov
cmpsl
cmc
fidivrl
jle
xor
fcmove
cld
mov
ret
dec
nop
sti
lods
insl
aas
cmp
mov
aas
out
lds
cs
sti
add
mov
fisttps
repnz
ds
inc
ja
sbb
lret
push
out
fidivrs
nop
adcb
repnz
cmp
dec
xchg
outsb
push
inc
iret
int3
xchg
cmpsl
or
bound
popf
popf
add
and
into
stos
add
and
imul
mov
pop
js
ret
fildll
lret
inc
int
leave
rclb
push
mov
or
pop
mov
ja
mov
mov
xchg
lds
pop
pop
push
aaa
add
sbbl
lods
scas
fnsave
fwait
xorb
ret
push
lcall
cli
xor
add
dec
dec
jns
jmp
push
pop
into
sub
cld
nop
hlt
scas
adc
int3
mov
out
inc
mov
and
or
pop
out
add
dec
fsubrs
sarl
adc
xchg
pushf
rcrl
mov
or
sbb
arpl
js
pop
xor
mov
sub
pop
sbb
jecxz
mov
cltd
jl
xchg
xchg
dec
les
rol
sti
add
or
es
xchg
cli
daa
or
adc
aas
cmpsl
or
pop
into
movsb
dec
lea
dec
aas
lea
inc
orb
sub
cli
ljmp
scas
mov
sub
dec
pop
rcl
push
xor
adc
pop
call
pop
jp
clc
xor
sub
dec
inc
pop
add
leave
inc
push
aam
in
sbb
cmp
ljmp
fadds
inc
xchg
xlat
cmc
cmp
jo
icebp
jne
push
rorb
test
push
sbb
mov
and
pop
push
jmp
mov
or
xchg
fs
inc
in
bound
add
sbb
test
cmpsb
pop
sub
and
cmc
xchg
fwait
cwtl
shrb
cmp
inc
adc
les
ja
cmp
or
out
adc
mov
push
inc
inc
push
push
dec
adc
js
adc
mov
cmp
rcrl
dec
and
fisubrl
xor
or
movsb
adc
daa
jle
pop
inc
adc
jns
inc
lcall
sub
and
in
inc
xor
lods
bound
and
mov
aas
cmp
and
pusha
loop
xor
mov
mov
cmc
add
mov
std
cmp
and
call
test
push
xor
lods
das
pop
mov
jne
jecxz
cmc
nop
cld
dec
jg
inc
testb
xchg
sub
in
lods
sub
cli
fwait
loope
mov
cmp
fdivrl
cld
mov
pushf
dec
fildl
jb
cld
mov
pop
sub
dec
jp
das
push
dec
lret
int3
xor
fimuls
ljmp
cmp
test
and
lret
fstps
sub
cmp
iret
pop
mov
sbb
mov
lea
ja
lods
xor
or
xchg
xor
jbe
add
js
mov
movsb
mov
cli
loopne
lret
cs
sarb
fwait
push
sahf
jecxz
xchg
insb
enter
mov
push
call
inc
cmpsl
adc
pop
inc
imul
inc
pop
push
cmp
imul
push
shr
rorl
decl
pop
pop
pop
loop
test
sub
aaa
push
dec
sub
mov
push
xlat
movsl
mov
add
pop
jge
fcoml
and
negl
dec
fisubl
lods
adc
mov
mov
and
nop
fisubl
xchg
fidivl
repz
cmp
frstor
clc
cmp
cmpsl
inc
adc
xchg
mov
dec
jo
rcrb
add
lea
lahf
sarb
inc
and
adc
loopne
jnp
rcrb
mov
lret
in
xchg
mov
int3
cmp
inc
dec
aas
mov
pop
popf
and
dec
shll
nop
pop
dec
pop
ret
cmp
test
js
stos
js
sahf
movsb
lods
pop
jge
xor
fdivp
leave
repz
test
xchg
jnp
fldcw
ficoms
imulb
fs
leave
pop
inc
add
dec
sti
mov
int3
pop
mov
mov
xchg
enter
test
dec
adc
wbinvd
loopne
and
xchg
fstpt
mov
or
mov
outsb
pusha
arpl
inc
rcr
xchg
inc
loopw
das
inc
lret
cmp
add
mov
add
in
sbb
and
adc
xchg
xor
xchg
dec
adc
sub
stos
movsb
pop
cmp
push
and
mov
lds
xor
xchg
mov
imul
stos
movsl
jp
pop
aas
fidivrl
and
cli
mov
cmpsl
leave
cs
loopne
ds
iret
jno
add
cs
scas
jle
push
jg
adc
subb
and
flds
add
jmp
push
mov
xchg
cmp
mov
clc
fisttpl
jns
lds
mov
sbb
lahf
lods
mov
enter
shl
fimuls
and
lock
pop
xor
dec
sub
add
mov
sbb
mov
inc
push
add
insb
jge
sbb
xchg
inc
fidivs
loope
mov
adc
inc
and
mov
rcr
int3
and
cmp
mov
shll
inc
jp
sbb
mov
adc
div
scas
fstl
jno
shr
cmpsb
sub
enter
xchg
pop
xchg
jl
adc
sbb
mov
push
mov
cltd
mov
enter
clc
xchg
stc
pop
mov
and
les
inc
mov
inc
push
mov
stos
jno
lods
sahf
cwtl
testl
pop
mov
xor
jns
sub
pushf
fsubrl
inc
rorl
icebp
ret
xchg
mov
pusha
shll
inc
push
orb
cmp
inc
lret
jg
les
push
add
mov
cmpsl
mov
mov
pop
dec
xchg
or
xlat
mov
rclb
pop
mov
leave
aad
mov
stos
adc
sbb
xchg
cmp
in
aad
cmp
scas
testl
scas
loope
push
enter
add
adcb
sbb
jns
ds
jle
cmc
sahf
lods
cld
cmp
stos
inc
leave
fldcw
mov
imul
mov
sbb
loope
aas
or
inc
and
or
gs
and
pop
xchg
rorb
test
inc
aam
xchg
xchg
fnop
lret
pop
cmpsl
xor
aaa
mov
dec
imul
mov
cmc
shrl
dec
push
sbbl
lret
sub
add
jg
dec
mov
enter
mov
pop
cmp
xlat
pop
mov
ret
es
jo
aad
fs
adc
nop
scas
and
sbb
lret
adc
aas
push
mov
jne
or
icebp
insl
sub
inc
lds
lret
mov
ret
mov
bound
fnsave
add
jmp
loopnew
cmp
jecxz
sti
insb
mov
sti
and
jb
inc
fldt
adc
pop
daa
call
cld
xchg
fistps
inc
xchg
loopne
fdivl
ja
xchg
les
andl
std
sub
cmpsl
inc
daa
jge
mov
xchg
cmc
imul
popf
adc
push
test
call
push
pop
fadds
or
fwait
das
or
sub
inc
xor
mov
inc
into
mov
push
stos
cmp
icebp
push
jge
rclb
xor
es
js
sub
adc
mul
jno
mov
into
mov
add
mov
or
jl
popa
inc
lret
pop
inc
lcall
sub
sbb
inc
loop
clc
aas
or
mulps
mov
cmp
sarl
lock
icebp
inc
pop
inc
push
push
jg
adc
inc
addr16
frstor
lods
push
pop
imul
cmpl
mov
mov
and
sub
ja
jno
roll
mov
xor
jge
jmp
pop
iret
pop
jne
addl
mov
push
int3
inc
xchg
cli
addr16
mov
in
in
cmp
stc
nop
adc
pop
repnz
div
out
jl
popa
insl
xchg
mov
pop
fcmovnb
pop
and
or
out
stos
cmp
mov
xor
add
in
adc
loop
lret
mov
cmpsl
mov
pop
add
cmp
mov
mov
cmp
pop
inc
enter
sbb
push
mov
popa
jge
enter
mov
icebp
mov
pop
scas
sbb
mov
das
lea
push
data16
or
jg
or
fisttps
cltd
mov
mov
idivl
scas
fdivr
cmp
sahf
dec
cld
pop
test
adc
fcmovnb
pusha
ljmp
xchg
inc
mov
mov
shll
cmp
into
mov
adcb
xchg
xchg
cmp
insl
sbb
cmp
and
leave
aaa
mov
std
ljmp
mov
arpl
imul
pop
out
into
pop
jle
subb
cmpsb
rcr
mov
mov
push
dec
xor
lcall
and
sub
add
pushf
outsl
ds
jne
add
push
xor
into
adcb
or
cmpsl
std
dec
dec
outsb
pop
push
pusha
leave
lcall
sub
int3
enter
in
sbb
stos
in
mov
push
add
sbb
sub
test
shr
data16
dec
sahf
adc
sarl
out
cmp
addr16
jmp
das
cs
mov
push
inc
mov
pop
or
inc
imul
aas
mov
mov
mov
adc
popa
pop
cmpsb
pop
xchg
js
imul
aam
stos
mov
jnp
clc
inc
push
pop
jns
out
sbb
insl
xor
loopne
cmp
jmp
mov
push
lea
ss
mov
pop
push
in
push
test
addl
pop
call
dec
lret
out
int
adc
iret
xor
inc
add
pop
movsb
push
inc
aam
ret
aaa
cs
sbb
pushf
jp
les
mov
cmp
inc
insl
mov
out
cmp
shrb
xor
faddl
jnp
adc
mov
pop
sub
inc
fs
pop
pop
ljmp
aam
xor
scas
sbb
in
mov
ss
aam
lcall
test
jp
clc
add
or
mov
pushf
outsl
push
cwtl
or
rcrb
icebp
dec
lcall
dec
cmp
pop
ds
cmp
and
aam
clc
sysret
jns
adc
pushf
scas
mov
xchg
mov
and
mov
mov
dec
ds
aam
in
cld
pop
cltd
popf
xor
pop
mov
dec
lcall
adc
sbb
cwtl
pop
movsl
ds
sub
inc
jmp
into
in
add
and
pop
mov
cmp
sub
repz
ljmp
sub
xchg
pop
inc
adc
push
dec
cmp
adc
lahf
or
out
cmp
arpl
fwait
push
lods
outsl
adc
loop
add
mov
dec
ret
xchg
xchg
insb
ss
jbe
call
loopne
test
stos
or
and
pop
inc
insl
push
ret
into
mov
cmp
leave
test
ljmp
pop
jbe
popf
cmp
mov
cltd
jb
sti
daa
shll
mov
loopne
jo
mov
int3
test
sbb
mov
cmpsl
xchg
and
fwait
bound
xchg
subb
xor
adc
inc
xchg
es
xchg
or
mov
pusha
ficompl
fnsave
rcll
add
and
lds
pop
std
jge
int
pop
addl
sbb
jge
test
sbb
lds
pop
add
xlat
cmp
lea
cltd
imul
mov
cmp
nop
jmp
push
dec
mov
inc
mov
inc
imul
inc
les
sbb
pop
and
push
inc
xchg
enter
jge
add
mov
dec
outsb
cmp
adc
hlt
inc
or
xchg
hlt
sbb
dec
xor
jo
pop
movl
repz
test
mov
cmp
flds
jecxz
xchg
cmp
fidivrl
sub
jae
mov
jg
mov
popf
icebp
dec
xchg
leave
and
jo
mov
fidivs
fwait
push
mov
insb
cmp
fdiv
or
sbb
inc
movsb
xchg
or
scas
std
subb
test
push
inc
and
push
add
mov
cmp
jne
fdivl
les
incb
mov
scas
jmp
jae
pop
pop
mov
movsb
in
sahf
sbb
sbb
sub
jb
jle
xchg
and
jb
out
cmp
aam
or
cmc
jp
mov
pop
mov
sub
loopne
loopne
mov
add
and
xchg
mov
inc
fdiv
dec
andl
imul
mov
ret
dec
and
sbb
adc
xlat
jg
fldl
les
aas
bound
cmp
pop
adc
in
shlb
or
push
mov
fnstenv
outsb
add
jo
imul
add
xor
and
pop
mov
lret
mov
inc
sub
sbb
push
ds
mov
mov
scas
mov
mov
data16
nop
aas
pop
xchg
mov
rcl
call
and
lret
pop
dec
dec
jg
jle
cld
xchg
xchg
jne
cld
sbb
bound
pop
stos
pushf
mov
addb
test
nop
xor
cmpsl
leave
lods
xor
inc
rcll
les
cmp
cwtl
mov
hlt
or
jb
fildl
sbb
movsb
jle
in
cmp
pop
mov
gs
and
inc
loope
fdivrl
xor
ds
in
outsl
insl
sub
data16
cmp
add
fsub
aas
popf
add
adc
mov
fiaddl
ror
mov
adc
inc
cwtl
or
push
xchg
ret
out
std
mov
add
pop
xchg
fimull
push
cmp
pushf
cmp
or
add
xor
sahf
mov
push
aaa
and
loope
leave
aas
pop
pop
push
adc
cmpsb
adc
js
push
mov
xchg
pop
lcall
inc
inc
icebp
fsubrl
sbb
shrb
mov
sahf
xor
push
or
mov
jbe
add
loope
rcrl
mov
enter
inc
jno
xor
mov
test
rcrb
mov
sub
pushf
mov
lock
rolb
jge
je
mov
fiaddl
iret
iret
lret
les
ja
lock
iret
xchg
cvtpi2ps
pop
or
nop
xor
cwtl
jmp
fmul
fld
cvtps2pi
inc
dec
xchg
sbb
iret
cld
fiaddl
cmp
shrb
sub
dec
xchg
shrb
xor
mov
pop
clc
cmovae
ljmp
mov
pop
sbb
sub
movsb
sub
addr16
inc
cmp
push
xchg
inc
pusha
lret
and
and
psubsw
int3
dec
mov
aad
daa
subl
cmpsb
pop
outsb
mov
cld
mov
dec
movsl
dec
lods
mov
cmp
and
jle
dec
icebp
sbb
sbb
orb
pop
dec
dec
add
test
les
sub
insb
mov
lods
icebp
mov
jmp
dec
xor
inc
and
fcoml
ds
inc
call
xchg
pop
xchg
pop
rorl
movsb
lock
outsl
lret
add
dec
or
sub
xchg
fsubl
adc
add
test
jns
xchg
cmp
fisubl
je
or
xchg
push
push
mov
dec
sti
aaa
xchg
cmpsb
stos
mov
xchg
pushf
fpatan
rorl
mov
mov
add
out
pop
into
imulb
xor
or
jg
mov
mov
cmp
sti
mov
nop
test
mov
lcall
cmp
pop
pop
loopne
test
in
mov
xor
stos
xchg
add
xor
mov
idiv
mov
out
dec
xchg
rolb
mov
insb
fisubs
aas
inc
lcall
aaa
imul
inc
lcall
sub
jg
lret
mov
sbb
mov
cwtl
adc
mov
fwait
add
pusha
mov
cmpsl
add
xchg
dec
aas
subl
xchg
cmp
cmc
test
movsl
popa
jle
inc
rcrb
push
xlat
push
mov
lds
cld
ds
add
adc
sahf
out
mov
jge
jb
push
repnz
or
cmpsb
jp
pushf
add
dec
ss
sbb
cmpsl
lods
pusha
scas
aas
or
or
mov
das
adc
mov
cli
mov
or
in
mov
imul
jg
xor
enter
cmp
sub
dec
sub
in
mov
rclb
outsb
or
in
bound
das
in
add
jle
mov
pop
adc
and
daa
andl
sbb
wbinvd
sub
fists
shrb
stos
shlb
xchg
sub
fwait
and
xor
filds
clc
and
jmp
add
mov
push
jae
ret
push
ss
sub
jecxz
push
sub
add
pop
mov
and
subl
add
daa
cmp
idiv
cmp
mov
call
shrb
jb
dec
mov
dec
frstor
xchg
inc
movsb
push
mov
push
outsl
data16
std
jnp
addr16
push
shrl
pop
shll
mov
arpl
lods
stos
repnz
test
xchg
movsb
dec
or
test
and
imul
dec
jns
jae
fsubl
inc
and
enter
shlb
mov
jne
mov
jg
cmpsl
rorl
loopne
faddp
lcall
xchg
scas
fcoml
sub
dec
mov
sbb
and
cltd
lods
cmp
jmp
aas
or
popl
cmp
jecxz
aam
fsts
mov
lret
pop
icebp
dec
jno
and
mov
xchg
fisttpll
fsubrl
into
xor
dec
lcall
or
xchg
shll
aaa
push
mov
lcall
mov
push
cmp
xchg
mov
sarl
adc
mov
xlat
cli
mov
stos
jg
addb
mov
pop
mov
and
fnsave
or
mov
js
adc
movsb
repz
xor
mov
aaa
pop
pop
stos
test
dec
adc
jecxz
dec
pop
test
pushf
movsl
fisubl
daa
rolb
jb
daa
call
cmc
inc
inc
clc
ja
push
pop
mov
pop
cmp
ds
fs
mov
inc
arpl
adc
sbb
cmp
mov
stos
pop
loop
sub
addr16
call
jbe
inc
lret
mov
shlb
dec
jmp
fdivr
pop
mov
mov
test
fldz
xor
outsl
mov
daa
lds
pop
imul
push
repz
jb
xchg
inc
ds
gs
xor
dec
test
fadd
xchg
and
sahf
adc
cmp
mov
dec
fldenv
xor
mov
mov
fidivs
sbb
jl
sbb
sbb
lock
into
jo
add
mov
sbb
inc
stos
shlb
subb
xchg
pushf
mov
fdivs
jae
jecxz
fwait
pushf
clc
sub
and
lret
sub
sti
stc
aad
mov
test
jno
rcr
insl
jle
mov
push
or
pop
fs
stos
lods
rorb
ljmp
movsl
inc
loopne
xor
cmc
mov
mov
dec
sbb
pop
adc
and
push
xchg
fstl
popa
push
out
sbb
out
nop
mov
pop
inc
dec
enter
leave
sub
dec
xor
xchg
sbb
lret
fsubrs
js
sti
outsb
mov
out
call
aaa
adc
sbb
gs
nop
mov
xchg
fdivr
aam
mov
jg
mov
imul
out
sub
add
enter
push
mov
cltd
testl
nop
ss
pop
or
call
push
cmp
std
hlt
xchg
jb
xlat
xor
int3
push
inc
jns
out
cld
lret
mov
inc
outsl
add
cmc
jmp
lcall
pop
lcall
inc
lahf
mov
mov
jle
dec
stc
pop
ja
lahf
scas
popf
lock
fmull
rcl
stc
inc
mov
inc
add
add
mov
out
into
sbb
addr16
pop
add
aad
sub
in
cmp
push
test
xchg
je
rorb
int
mov
lret
add
add
sub
mov
loop
xor
repnz
stos
cmp
andl
xor
fstpl
and
mov
test
mov
in
xchg
add
push
lret
adcb
fidivrs
fisttpl
arpl
xchg
arpl
dec
xchg
mov
mov
push
mov
inc
cmpsb
mov
add
and
inc
call
mov
enter
ds
aas
mov
dec
lret
shlb
pop
jle
mov
cltd
xchg
fmulp
ljmp
push
adc
xchg
enter
mov
mov
scas
bound
hlt
aam
mov
rcrl
leave
push
lds
stc
adc
sbb
adc
mov
mov
add
inc
xchg
adc
xlat
or
add
jae
jae
sbb
cmp
adc
lods
out
mov
ret
inc
push
xor
or
fisubs
dec
outsl
stos
fs
jge
mov
push
push
arpl
mov
mov
fstpt
fistps
mov
loop
in
mov
push
push
or
icebp
rcl
fwait
add
and
ret
or
cmp
ficompl
pop
xor
push
stos
mov
pop
sarl
add
jne
int
fcomp
or
pop
std
push
add
sub
adc
adc
and
test
cld
push
sub
sbb
mov
jne
ja
inc
imul
movsb
mov
int3
pop
push
adc
sarl
mov
mov
push
addr16
popa
dec
sahf
push
test
inc
mov
pop
dec
pop
lods
out
mov
and
out
stos
cmpsl
dec
cmp
rclb
push
out
mov
outsl
xlat
pop
xchg
test
test
xchg
scas
or
repnz
inc
subl
fldl
mov
test
out
sub
je
inc
jns
sti
mov
pop
or
xor
pop
add
movsl
outsl
lods
dec
lods
mov
sbb
mov
lods
lret
daa
sub
mov
inc
sub
lcall
pop
mov
add
sarl
adc
or
mov
mov
into
jae
call
cmpsl
lret
orb
sub
cli
sahf
mov
sbb
ds
mov
addl
data16
mov
jp
pushf
push
sbbb
cmp
orl
rorl
mov
nop
jae
lret
mov
loopne
loopne
push
sbb
adcb
cwtl
jl
mov
pop
lods
test
pop
inc
enter
dec
inc
and
je
jb
or
sub
ror
dec
push
cmc
cmp
adc
adc
sbb
leave
add
cmp
mov
test
pushf
or
mulb
sbb
insl
int
jnp
and
mov
shl
mov
mov
inc
sbb
dec
or
outsl
cld
imul
outsl
pop
jns
pop
adc
popf
cwtl
out
inc
ljmp
xor
jns
push
daa
sbb
and
dec
aad
popa
mov
lds
sbbl
xchg
enter
add
cs
pusha
inc
jno
add
adc
cmpsb
ds
sbb
jbe
xor
jo
movb
clc
mov
jmp
sbb
loop
out
stos
mov
inc
dec
ret
loope
insb
test
xor
popf
cmp
call
sub
pop
cmp
cs
sbb
jp
cmp
xchg
popa
int
pop
jae
add
jp
inc
les
arpl
icebp
jle
in
jne
xchg
and
je
insb
xor
sub
mov
jae
lcall
popa
test
loop
pop
inc
icebp
inc
and
mov
cld
adc
test
xor
sbb
lret
sub
push
adcb
push
jge
idivb
fwait
out
cli
xor
inc
ja
add
decl
imul
xchg
repz
push
mov
ret
int
push
cmpsl
dec
jg
inc
sbbb
and
stos
mov
mov
inc
or
push
add
xor
sahf
mov
push
int3
iret
loopne
pushl
test
fisttps
fmuls
push
fisubs
mov
ret
lret
jo
je
ds
lahf
cmp
pop
jmp
pusha
pop
loopne
mov
popf
daa
mov
ss
xor
add
int3
aam
sbb
sub
subl
ja
aad
or
sbb
fwait
pop
test
jno
jo
mov
dec
adc
or
pop
xchg
mov
adc
xor
sub
adcb
and
jle
insb
and
cmp
fs
dec
dec
lahf
jae
es
and
sbb
cmp
fnstcw
cmpsl
mov
faddl
xchg
sub
inc
gs
or
jecxz
or
mov
add
stos
mov
mov
mov
dec
and
insl
and
push
xchg
pop
fldcw
les
dec
or
pop
xchg
and
je
xchg
frstor
call
leave
inc
dec
mov
das
pop
push
inc
jg
jbe
mov
mov
push
dec
pushf
mov
popf
rcll
sahf
dec
mov
mov
cmp
fcoms
ret
test
sbb
repz
and
jle
dec
xchg
pop
pop
ds
rcr
mov
in
aam
adc
cmp
test
int3
jp
push
xor
or
mov
hlt
test
push
daa
mov
xchg
stos
negl
mov
or
push
fisubl
xor
inc
mov
mov
jns
add
insb
enter
sub
mov
add
outsl
sbb
std
scas
pop
jge
adc
stos
pop
call
das
add
scas
cltd
mov
ds
jle
sbb
mov
shl
rolb
mov
inc
jl
push
and
adc
push
nop
mov
movsb
push
push
push
shl
add
sbb
mov
fnstenv
or
mov
push
mov
cmp
sub
cmp
shl
adc
icebp
pop
add
mov
mov
push
jns
bound
xchg
popf
clc
inc
and
mov
loop
popf
mov
fsubrs
jg
mov
imul
sub
and
jne
xor
in
loope
sbb
push
fbld
sbb
jne
bnd
dec
sub
sbb
lret
test
out
pop
push
test
push
push
ss
sbb
ret
aam
fstpt
add
jne
stos
aaa
adc
ljmp
addr16
loop
into
sub
mov
mov
mov
ret
push
or
sbb
pop
mov
mov
push
mov
add
xchg
inc
mov
lret
dec
and
xor
ja
sbb
dec
xchg
mov
push
stc
pushl
pop
inc
stos
mov
addl
jg
repz
pop
cmpb
test
lock
fdivrl
jb
andl
sbb
pop
js
shl
es
out
inc
lret
cld
cmp
add
fdivl
pop
push
stos
shll
int
mov
arpl
push
jl
ss
mov
mov
adc
mov
cmp
insl
aaa
cmp
add
inc
in
xchg
lret
mov
dec
xchg
pop
or
sbb
int3
out
and
fs
jns
aam
lods
es
sbb
in
xchg
in
enter
inc
dec
mov
insl
icebp
in
sub
in
popf
mov
fwait
mov
ss
inc
out
pop
out
mov
pushf
pusha
adcb
ret
lcall
lock
rorb
dec
jnp
sbb
push
and
xchg
gs
bound
push
mov
adc
lret
push
push
jns
cmpsl
pop
sub
jno
cld
insl
aam
test
sub
lahf
push
iret
out
push
out
aas
adc
sahf
pop
ret
cmp
fisubrs
aad
fiadds
sbb
out
rcr
inc
daa
hlt
fstpt
data16
push
ljmp
sub
cmp
aad
mov
jno
or
notb
in
cltd
adc
xchg
imulb
sbb
mov
dec
cmpsb
push
ds
mov
sarl
xchg
mov
call
push
xchg
aad
adcl
jle
aas
in
imul
rcrb
cld
fstpt
in
mov
mov
mov
dec
mov
nop
pushf
dec
pop
movsb
lock
and
mov
fildl
inc
rorb
cmp
dec
push
mov
fiaddl
cmc
scas
push
lret
aam
mov
mov
cmp
xchg
je
jmp
add
sahf
sbb
cwtl
cltd
lods
push
ss
adc
popa
pop
out
add
and
pushf
and
inc
aaa
dec
pop
imul
les
pop
mov
sub
and
mov
sahf
jns
repz
mov
bswap
xchg
cmp
inc
outsl
xor
mov
test
decb
mov
out
pop
jbe
xor
inc
jbe
sub
loope
sbb
sbbb
cmp
lods
rcll
mov
ljmp
pop
lahf
das
std
xchg
dec
incl
mov
adc
pop
push
jl
mov
jmp
xor
push
and
movsb
in
lods
repz
pop
xor
jge
jo
add
pusha
lcall
rorl
mov
outsl
sub
adc
mov
rcr
orb
sbb
inc
out
insl
nop
clc
lds
enter
bound
fldt
in
test
inc
jnp
sbb
rol
cmp
dec
lods
mov
imul
outsb
pop
adc
int3
movsl
ja
ds
nop
push
orl
int
jbe
movsb
pop
aam
pop
stos
test
or
and
jge
mov
je
mov
xor
sbb
insb
sbb
fnstsw
pop
in
or
or
leave
cmp
movsb
pop
xor
pop
sub
cmpsl
adc
xchg
or
push
addl
cld
insb
imul
jle
ret
inc
or
push
and
popa
or
shlb
insl
mov
push
in
lods
push
sub
or
jl
js
mov
pop
jno
fisttps
jg
lahf
mov
es
outsl
pop
cltd
daa
repnz
or
push
iret
testb
pop
add
mov
sbb
push
mov
dec
cmp
pusha
or
pop
push
addl
mov
cli
dec
or
popf
xchg
add
inc
xorb
cs
mov
dec
sbb
fimull
imul
fists
and
sahf
push
mov
add
int
mov
add
or
mov
push
dec
inc
add
push
mov
pop
dec
rcr
inc
jg
dec
xchg
pop
add
mov
adc
mov
mov
fcoml
pop
scas
xor
mov
or
jbe
popf
aas
fwait
and
popa
stos
add
stc
xchg
int
shlb
mov
jns
mov
outsb
inc
add
cmp
inc
add
push
iret
mov
push
pop
and
mov
sahf
shll
loopne
or
jnp,pn
or
shrb
pop
ret
pop
int
or
sub
mov
sub
lret
xor
mov
xchg
jb
pop
insl
mov
push
xchg
fisubrl
push
and
in
mov
aam
inc
push
imul
rcrl
jne
bts
hlt
in
cmp
inc
lods
cmpsb
mov
cmp
pop
outsb
cmpsb
mov
adc
push
pop
loopne
xchg
lret
or
xor
add
or
push
pop
mov
inc
mov
aam
mov
or
insl
mov
leave
and
mov
mov
mov
dec
mov
push
test
cmc
outsl
and
xor
pop
lock
test
dec
or
mov
aaa
cmp
es
in
xchg
call
test
xchg
mov
in
daa
xchg
mov
sbb
sahf
insl
mov
bound
rorl
test
lock
xchg
fsubl
enter
test
popl
shll
pop
add
sar
mov
mov
adc
jmp
out
mov
xor
cmp
push
mov
das
mov
xor
and
xchg
dec
cmp
pop
test
mov
jle
push
cmp
xchg
rcl
jbe
lds
in
js
dec
out
pop
xchg
insb
sarl
insl
fists
jae
push
sbb
aas
dec
mov
rcl
test
lock
pop
cwtl
ret
cltd
sub
lret
fs
dec
mov
push
jnp
jno
xchg
xchg
cmp
outsb
fcomip
push
loopne
push
add
xchg
cmp
adcl
jnp
push
sub
test
insl
ret
mov
dec
in
mov
loope
mov
sbb
dec
add
add
cmp
inc
push
leave
inc
mov
sbb
jg
cli
fsts
enter
repz
lahf
and
movsl
test
dec
lret
lds
std
dec
ficompl
cmp
dec
ljmp
mov
cwtl
loopne
xchg
mov
pop
pop
daa
dec
push
dec
jns
pop
shrd
push
push
mov
in
jno
es
push
push
mov
jo
inc
repz
shrl
add
push
inc
out
add
xlat
mov
cli
clc
mov
push
orb
fldcw
cmp
imul
dec
in
add
and
push
or
mov
inc
mov
pop
add
jns
jmp
jge
loopne
sbb
adc
ja
in
loopne
mov
or
mov
test
mov
sbb
and
sbb
mov
loop
cmp
inc
fdivl
inc
lds
cmp
xor
mov
or
xchg
or
sbb
shr
pop
jb
xchg
jns
mov
sub
sbb
xor
push
dec
scas
jnp
repnz
inc
test
jecxz
inc
dec
adc
in
fldt
fmull
sahf
into
mov
dec
aam
add
shll
add
fnsave
stc
xor
rcrl
add
gs
push
scas
cmp
aad
js
mov
add
add
test
or
pop
fcoms
dec
mov
jbe
mov
jne
inc
popa
or
js
cmp
xchg
sahf
pop
rcll
bsr
ljmp
imul
adc
cltd
mov
xchg
and
inc
clc
jb
sub
test
pop
jecxz
ret
movsb
cld
lcall
dec
ret
nop
mov
push
flds
subb
mov
fcmovu
lods
add
and
or
pop
lods
xor
nop
rol
push
pop
and
fistps
pop
xchg
sub
mov
pop
pop
xor
mov
cld
popa
xchg
lcall
cwtl
xor
inc
cmp
mov
mov
repz
pop
pop
mov
mov
xchg
mov
imul
idivb
lds
jle
adc
ficoml
sti
aas
andl
clc
add
sub
leave
xchg
pop
sub
jmp
adc
lcall
clc
or
popf
cwtl
sbb
addr16
push
ret
in
and
cmp
cmp
jl
hlt
add
jno
mov
aam
jae
mov
inc
sub
outsl
movsb
push
movl
frstor
aam
ds
test
into
mov
je
push
xchg
enter
sub
adc
ss
je
jl
mov
cmp
rclb
or
sub
sub
lret
and
out
lret
add
xor
mov
dec
in
xor
inc
and
push
pusha
enter
push
cld
lea
sahf
mov
inc
and
cs
cltd
jecxz
push
fimull
out
xor
push
xchg
out
fidivrs
and
dec
fsubrs
mov
inc
push
cmpsb
popa
inc
data16
jns
mov
sub
out
in
mov
sti
cli
stos
outsb
mov
ret
or
mov
hlt
fidivs
movsb
cmp
inc
xchg
adc
xlat
pop
test
push
mov
call
push
in
sub
cmp
bound
out
mov
adc
xchg
cld
dec
gs
jo
mov
cmp
cli
dec
jecxz
cmp
pop
insb
insb
out
cmpsb
aad
adc
ficoms
mov
pop
inc
in
aas
fldenv
mov
pop
sub
jmp
inc
sbb
and
repnz
mov
dec
jp
add
lahf
rorb
pop
lcall
addr16
pop
jmp
ficoms
dec
mov
xor
mov
sbb
iret
pop
xchg
mov
fildl
mov
lret
push
jns
or
add
out
pop
push
int3
sub
lock
xchg
stc
outsl
cmp
mov
dec
pop
cmp
in
hlt
sbb
sub
xor
jle
movsl
shl
and
lods
mov
or
push
cmp
out
std
sahf
pop
test
stos
and
mov
les
add
xchg
loopne
mov
call
or
insb
and
inc
nop
and
or
lods
repz
stc
dec
loope
aam
icebp
dec
jmp
hlt
out
xchg
cmp
and
and
test
nop
movb
sbb
dec
stc
cltd
out
mov
xor
insb
pop
je
cmp
pmulhuw
js
mov
xor
popf
add
xor
xchg
pop
xchg
xchg
js
bound
jns
adc
cmp
cld
add
push
sbb
dec
stc
rolb
dec
cli
cld
hlt
hlt
and
test
popa
sbb
xor
loope
addw
pop
movb
sub
stos
scas
ljmp
mov
enter
rclb
lcall
cmpl
xor
push
loopne
mov
dec
imul
sub
test
les
jbe
sbb
jae
mov
pop
or
xchg
repz
xchg
or
pushf
lds
loop
cmc
lret
sbb
cs
pop
cmp
aas
lods
loope
sbb
xchg
xor
mov
mov
or
pop
xchg
into
jle
sub
dec
sub
pop
cmp
aam
inc
in
lods
mov
sbb
out
fnstsw
fxch
clc
mov
mov
mov
xchg
lret
adc
cs
mov
sub
leave
xchg
ret
cmc
enter
test
das
scas
mov
stc
out
incl
shlb
insl
imul
loope
inc
xor
dec
lret
mov
mov
into
pop
push
repz
out
mov
pop
xchg
pop
mov
iret
jo
cmp
call
xchg
insl
fs
std
and
xchg
movsb
cmpsb
push
outsb
add
lods
dec
sub
pop
mov
xor
inc
jo
jp
pop
fcompl
xor
insl
inc
xchg
xchg
xchg
imull
ret
adc
into
push
out
jne
mov
test
mov
negb
pop
aaa
fwait
sub
cmpsl
mov
aas
lods
mov
and
pop
push
in
mov
mov
jmp
rcll
sbb
leave
loope
rclb
xchg
daa
add
cs
sti
int
jge
adc
add
loop
test
jle
cli
fildl
jns
mov
int3
mov
cmp
adc
jge
mov
push
cmp
add
insb
insb
xchg
mov
cmp
sbb
and
xchg
neg
push
mov
cs
test
add
mov
punpcklbw
hlt
add
inc
inc
fwait
adc
sbb
fistl
test
repnz
xchg
std
data16
stc
pushf
mov
push
xchg
push
dec
ss
pop
or
jp
adc
stc
push
sarl
dec
push
in
ret
inc
push
mov
and
xor
push
cmp
mov
mov
xchg
xor
sbb
push
inc
shrl
and
outsb
sbb
shrb
icebp
pop
je
jb,pt
notl
mov
shrl
or
bound
pop
inc
ja
xor
push
sbb
test
insb
mov
daa
repz
sbb
popa
pop
mov
pop
cmp
iret
addr16
mov
in
les
ds
loop
daa
rol
mov
jl
ret
sbb
lret
insb
inc
lahf
fwait
mov
mov
pop
mov
sbb
adc
jo
lock
mov
outsb
pop
jp
mov
test
ljmp
xor
rorb
hlt
ds
bound
mov
adc
or
xchg
cmp
dec
cmp
nop
cmpsl
lods
jp
addr16
movsl
xchg
mov
dec
aad
negb
dec
test
cmc
mov
jns
jecxz,pn
int
das
fs
sub
movsb
mov
jne
push
inc
ss
pop
inc
inc
icebp
push
mov
jg
xchg
movsl
jge
pop
outsb
fcoml
jno
pop
test
and
jno
sub
lcall
or
out
cwtl
mov
fstl
add
mov
insb
mov
dec
nop
aad
dec
add
or
sbb
xchg
insl
bound
jmp
mov
mov
mov
fiadds
test
pop
addr16
clc
lahf
int
xchg
mov
inc
in
xchg
imul
insl
mov
fcomi
mov
clc
clc
dec
dec
jno
lret
stos
arpl
ds
aad
sbb
loopnew
fiadds
xchg
jmp
mov
enter
dec
mov
cmp
sub
es
outsl
and
js
push
int3
lods
mov
dec
imul
or
mov
cmp
les
jl
and
dec
mov
mov
mov
mov
mov
pop
push
daa
xchg
push
add
push
jnp
test
push
and
shll
mov
dec
push
mov
int3
sbb
mov
movb
pop
scas
xor
xchg
les
repz
pop
mov
loopne
mov
sub
cmp
mov
and
mov
xchg
jecxz
cmp
xchg
imul
sub
jg
es
pop
aaa
popa
pusha
out
mov
enter
push
lret
mov
cs
jae
mov
aad
mov
sbb
xchg
enter
and
rorl
lea
shlb
outsl
scas
pop
gs
pop
jecxz
mov
dec
lcall
mov
xchg
or
lds
xchg
movsl
iret
pushfw
lret
mov
push
lret
and
or
sbb
movsb
mov
push
mov
cs
xchg
xlat
popf
dec
inc
sarl
push
lods
xor
cmp
cmc
mov
or
lock
data16
dec
imul
loope
mov
mov
inc
test
sub
std
test
sbb
insb
mov
ds
add
stos
mov
sti
daa
jae
dec
sbb
add
lods
mov
in
mov
dec
mov
hlt
les
movsb
inc
cmp
sbb
bound
insl
jbe
xor
jne
sbb
imul
or
scas
dec
xor
orl
sbb
nop
imul
xchg
and
stc
enter
or
stc
jp
sahf
pop
xor
sti
cmpsl
lret
dec
xlat
shrb
push
sahf
fisubl
mov
ret
mov
push
inc
cmp
fcmovbe
subb
pop
mov
js
sti
mov
dec
mov
loopne
mov
and
adc
sbb
dec
push
lcall
repnz
aad
ss
test
push
push
xor
lods
xor
mov
lock
add
jle
in
inc
jns
dec
scas
pop
push
roll
into
dec
xor
ret
orl
sbb
push
out
rcrb
dec
ficomps
push
scas
mov
mov
mov
fisttpll
mov
repz
testb
ret
out
into
sub
xor
imull
mov
mov
jo
loop
mov
inc
or
inc
mov
pop
cmp
outsb
lahf
pop
and
hlt
into
jg
jle
out
je
test
xchg
or
xor
daa
arpl
sarl
outsb
adc
test
dec
test
mov
jp
mul
ret
push
into
out
ss
or
fildll
pop
inc
xchg
stos
pop
dec
sbb
sbb
adc
ds
jle
int
fists
gs
pushf
mov
orb
popa
lock
mov
push
mov
add
dec
int3
xor
mov
pop
pop
mov
aad
and
sahf
push
mov
jg
mov
mov
jmp
push
js
out
jge
mov
in
js
xchg
inc
jo
pushf
fiaddl
aaa
iret
leave
movsb
mov
icebp
sbb
dec
pop
sbb
sub
fsubs
test
mov
jae
jbe
and
cwtl
popa
dec
push
imul
or
mov
pop
pop
dec
dec
xchg
arpl
add
imul
cmp
aas
cmp
xor
ds
cmp
hlt
pop
xchg
enter
and
adc
js
pop
mov
jns
sbb
jecxz
inc
movsb
pop
cmp
xchg
or
fidivrs
adc
adc
fdivrs
xor
int3
lods
mov
fdivrl
mov
call
inc
pop
std
xchg
inc
add
and
fcompp
inc
mov
call
adcb
mov
or
pop
dec
enter
adc
dec
mov
mov
add
and
aad
fs
add
pop
or
push
inc
adc
stos
pop
inc
lds
lret
fsubrs
inc
mov
shl
ret
xchg
or
icebp
dec
cltd
jo
fcomip
lods
ljmp
inc
xchg
test
mov
js
or
jb
int
in
pop
flds
mov
mov
sub
cmp
pop
sub
pusha
mov
pusha
movsl
xchg
xchg
dec
push
test
fsubrs
gs
ret
rcrl
lock
sub
sbb
int3
mov
mov
mov
lret
or
inc
cmp
xchg
aaa
push
test
stc
dec
pop
cmp
jp
mov
stc
cwtl
movsl
mov
pop
sarb
ja
or
clc
inc
dec
mov
inc
aaa
cmp
add
inc
mov
sub
push
add
add
jno
jae
push
lock
pop
cmpsl
ss
les
outsb
pop
push
movsb
xchg
mov
xchg
insl
or
mov
xor
lret
add
and
inc
out
outsb
mov
cmp
dec
push
mov
xchg
pop
fisttpll
sti
add
cmp
pop
in
jg
pop
das
or
xchg
sub
cwtl
gs
inc
int
sub
xor
push
jg
pop
inc
movsl
sti
into
test
mov
cwtl
mov
and
das
mov
movsb
mov
adc
jle
rol
push
mov
jb
xchg
xchg
mov
or
xchg
outsb
movsb
cmp
aas
not
inc
lea
inc
jmp
mov
data16
ss
test
add
dec
xchg
sub
mov
inc
imul
icebp
lds
fisubs
mov
aam
push
lods
push
xchg
or
jmp
movsb
xor
jno
sahf
pushf
out
out
push
xchg
adc
sarb
inc
test
scas
xor
mov
movb
xchg
pop
dec
dec
addl
jb
ds
inc
pop
fcoms
push
adc
loope
pop
fcompl
inc
fcoml
inc
or
mov
repnz
cmp
push
hlt
cwtl
je
lret
sub
or
sbb
push
xchg
imul
and
int
ret
dec
mov
lahf
jge
jns
rorb
pop
cwtl
adc
pop
xchg
mov
jge
and
xlat
mov
sbbl
lret
mov
inc
pop
subb
out
sub
int3
in
clc
sbb
es
mov
std
lods
cmp
xchg
clc
test
rorl
loopne
cmpl
inc
out
stos
mov
in
sub
mov
inc
pushf
cmp
popf
mov
dec
lcall
cmp
sarb
and
inc
inc
push
inc
add
mov
lahf
fstpl
pop
mov
push
mov
xor
pushf
push
xchg
push
paddd
cmp
fimull
add
adc
popf
xchg
jge
inc
scas
aam
insb
xchg
iretw
inc
and
jae
scas
shl
daa
cmp
sub
int3
outsb
mov
je
push
and
adc
pushf
aam
int
dec
aam
cli
push
mov
mov
aas
scas
pop
enter
jecxz
and
adc
notb
int3
cmp
lret
jnp
js
jp
inc
sbbl
pop
and
daa
push
sbbl
adc
mov
rclb
cmp
add
push
or
mov
xor
lock
and
movsl
cld
sub
dec
bound
push
test
fiaddl
adc
xor
iret
sbb
and
mov
int3
iret
arpl
les
mov
add
sbb
negb
xor
out
push
iret
scas
cmpl
mov
mov
nop
sbb
data16
daa
and
inc
pop
mov
adc
roll
rclb
aam
cld
andl
or
and
cwtl
cmp
ja
sub
jmp
cmp
push
pop
add
add
xchg
inc
jae
int
in
xchg
mov
mov
pop
aam
hlt
xor
adc
sub
cmp
in
in
fbstp
cmp
dec
sbb
andb
cld
and
push
cmpsb
jge
cli
mov
sbb
pop
sub
std
cmp
fisubrs
sbb
mov
test
stos
loopne
rcrb
lea
dec
add
pop
mov
sub
mov
div
sbbl
mov
dec
xchg
inc
ja
sbb
sbb
pop
lcall
sbb
gs
nop
ret
shlb
stos
pop
mov
dec
aam
sbb
cli
mov
fs
inc
mov
mov
fs
cmp
fdivrl
dec
xchg
xchg
movsl
std
cmpl
or
sbb
jb
ficoms
rorb
xor
enter
adc
into
and
dec
aaa
fdiv
lret
in
lock
std
sub
xchg
iret
pop
push
pop
sbb
cmp
pop
and
jg
aam
rcr
mov
push
rol
jns
dec
push
imul
sub
pop
test
arpl
cmp
rcl
fs
popf
and
jl
push
add
or
and
or
ds
mov
popl
sub
int
xchg
push
mov
js
rorl
jno
subb
mov
aam
cld
sub
jns
pop
inc
test
push
in
mov
push
iret
or
mov
adc
mov
mov
cli
sub
mov
mov
xchg
mov
or
popf
push
dec
sub
push
add
std
mov
int3
adc
lods
push
ss
jl
stos
in
xchg
mov
adc
ficoms
ret
push
xchg
cmp
sbbl
or
das
sub
pop
shrl
hlt
ret
pushf
test
mov
out
adc
cmp
jne
sbb
sbb
inc
cmp
imul
xor
xor
inc
xchg
out
sub
iret
shlb
and
sub
movsl
sbb
std
mov
lret
or
inc
xor
cli
cld
cmc
enter
ret
sub
adc
aam
lret
cli
cmp
mov
outsl
imul
imul
movsb
mov
mov
leave
add
mov
cld
sbb
push
mov
pusha
and
test
mov
lds
aas
cmc
fnstenv
pop
sbb
or
push
data16
mov
cmp
in
jge
mov
cmpb
dec
ret
div
mov
jge
enter
cmp
fimuls
les
cmp
test
lea
push
loope
cmp
mov
mov
adc
push
pusha
incl
ret
mov
and
mov
or
push
imul
adc
ds
jecxz
cmp
test
cmp
mov
add
push
popa
sbb
dec
add
jmp
daa
xorl
add
int
mov
inc
enter
repz
aam
imul
jl
cmp
and
pop
mov
ret
xor
push
mov
push
subb
pop
jns
mov
push
mov
jmp
nop
pop
sbb
adc
jns
ret
or
jo
in
ss
sbb
pop
xchg
mov
aaa
jmp
xor
rorl
inc
leave
adc
ficoms
data16
add
jge
cmp
js
ret
hlt
rorl
jmp
movsl
les
cmpsl
adc
js
popa
dec
outsb
mov
xchg
push
daa
in
cmp
or
or
mov
bound
dec
sub
pop
test
mov
inc
pop
imul
dec
cmp
test
lods
pop
cltd
and
and
hlt
loope
outsb
mov
aas
pop
adc
aam
das
mov
imul
pop
fnstcw
sub
add
out
add
and
push
xchg
pop
push
jg
push
adcl
pop
shrl
mov
repnz
fsubl
ret
adc
cli
xor
shll
push
adc
fimuls
add
push
inc
cmp
adc
sub
lock
push
loopne
xchg
xchg
fmuls
les
inc
push
pusha
loope
test
ds
jbe
in
push
loope
imul
icebp
das
lods
jp
lods
cltd
xchg
cmp
jl
fdivrl
sbb
in
xor
jp
inc
jbe
or
arpl
lret
adc
jno
fdivrs
inc
inc
inc
test
ja
in
xor
clc
sub
dec
cmp
jns
sahf
fwait
xor
or
lods
ficomps
movsb
jmp
hlt
mov
shlb
pop
push
pushw
insl
dec
mov
and
add
das
hlt
insb
xlat
int3
fsubl
test
dec
aas
int
xchg
dec
lds
jmp
lret
lcall
xchg
push
lret
add
xchg
inc
jnp
das
sbb
cltd
mov
test
cli
xor
or
mov
pop
outsl
cmpsl
push
jle
les
rclb
cmp
xor
mov
xchg
or
cmpsb
roll
cwtl
push
adc
inc
leave
cmp
sahf
mov
xor
or
les
inc
or
pop
rcrl
xchg
imul
pop
xchg
mov
inc
mov
sub
lahf
fsubrs
mov
pop
arpl
jno
movsb
jo
fwait
mov
mov
inc
mov
into
cmp
mov
jmp
pop
int
push
xor
or
lret
pusha
fstpl
add
notb
jo
arpl
cmp
or
cli
xor
or
cmc
lods
inc
aaa
jg
pop
jne
jl
dec
aaa
dec
mov
iret
pop
out
insb
movsb
idivl
inc
dec
fadds
lahf
xchg
lret
pop
xchg
negb
cmpsb
jmp
lahf
shr
leave
xchg
scas
arpl
mov
sub
sbb
mov
les
xor
enter
aas
outsl
jns
cwtl
lcall
add
cs
xchg
imul
push
xchg
mov
pop
mov
push
cmp
call
or
jmp
xchg
adc
sub
lahf
pop
cmp
std
sbb
mov
push
enter
hlt
arpl
mov
aas
mov
shl
sti
mov
sbb
iret
dec
cmp
orb
inc
mov
lret
adc
sar
mov
jmp
mov
leave
jp
nop
pushf
xchg
clc
push
scas
icebp
adc
insb
jg
nop
pop
fcomps
and
mov
pop
fstps
pop
mov
push
sbbl
mov
push
jnp
stc
inc
inc
shr
jge
mov
fwait
adc
je
sbb
insb
pop
scas
add
cmp
rcrb
popf
pop
and
adc
jmp
xchg
xchg
in
dec
fwait
les
mov
xchg
je
test
mov
inc
scas
fadd
shll
push
testb
rclb
add
mov
fnsave
xchg
lcall
stos
fmull
xlat
mov
into
fbld
rclb
cmp
pop
lods
loop
iret
je
fdivs
jecxz
test
mov
dec
xchg
shrl
loop
std
stos
mulb
pushf
sahf
xchg
sub
jp
add
push
test
ffreep
enter
pop
mov
imul
pop
shll
mov
aas
mov
dec
dec
push
les
mov
xor
fnsave
or
lret
ret
adc
mov
rclb
adc
cmp
sbb
push
sahf
or
mov
js
movsb
in
sti
dec
cmp
arpl
xchg
lahf
dec
mov
xor
xor
cmc
clc
stc
nop
fsts
or
test
outsl
cli
jns
mov
fcomp
mov
add
dec
dec
cmovs
inc
push
mov
sbb
mov
sbb
jl
push
mov
xchg
loope
cmpsl
adc
jl
inc
call
lods
std
xchg
sbb
ret
xchg
fsub
mov
aam
insl
sbb
inc
fidivrl
scas
jl
xchg
int
dec
loope
testl
jb
mov
mov
leave
popa
imul
popa
xchg
fisubrl
jmp
and
stc
popa
dec
aas
jno
xor
js
pusha
loope
nop
xchg
popf
sti
cmp
cs
mov
outsb
popf
lahf
out
pop
inc
nop
dec
adc
push
sahf
into
xor
mov
and
pusha
adc
int3
inc
or
and
scas
xlat
mov
add
pop
jg
outsb
xchg
cmp
or
pop
jns
inc
fwait
xor
push
cltd
push
push
hlt
xor
out
jns
sti
or
int3
shl
jle
test
adc
out
pop
icebp
or
repz
outsl
mov
fsub
test
or
pushf
orb
inc
push
push
push
and
inc
int3
sub
enter
ljmp
addb
outsb
adc
out
pop
lret
xchg
push
mov
add
jbe
inc
add
orb
fsubrs
mov
iret
xchg
add
mov
imul
xor
fiaddl
add
mov
mov
inc
push
sbb
pop
jecxz
xchg
jne
push
loope
pop
mov
jnp
cmp
sbb
test
xchg
lock
addb
enter
jb
int3
sbb
ret
lods
stos
fadd
rclb
xchg
insb
mov
scas
fnstcw
mov
sub
mov
mov
mov
scas
jg
cltd
shlb
out
fidivl
jle
addl
std
xchg
sti
sub
add
test
out
xchg
dec
insl
bound
ds
or
stos
and
nop
adc
scas
mov
mov
mov
insl
xchg
sbb
sbb
or
dec
ret
test
or
std
cmpsl
push
lock
sub
frstor
jl
test
xchg
test
mov
in
jns
pop
sub
inc
out
lret
or
jae
push
push
fwait
cwtl
fnstcw
jnp
rcl
test
inc
fbstp
jg
mov
test
push
cmp
mov
jo
pop
xchg
enter
fiaddl
or
cmp
enter
pop
clc
and
sbb
and
movsb
fadd
add
inc
bound
mov
push
lods
jmp
shr
and
shlb
rcll
xor
dec
add
ret
mov
loopne
ret
mov
push
mov
ja
mov
rcrl
test
pop
sbb
add
es
aas
sbb
and
mov
sarl
xchg
sbb
stos
mov
movsl
dec
cmp
sub
jge
push
xchg
scas
lods
lods
popa
aas
ret
mov
cmp
and
cli
sti
inc
cwtl
repz
das
jns
jns
xchg
add
and
cmp
mov
sub
ret
cltd
rorb
adc
inc
cld
inc
lods
xchg
clc
cmp
mov
xchg
call
in
and
mov
xor
enter
rol
pop
push
push
test
sub
aas
cmp
mov
add
jp
xor
xchg
cmpsl
orb
testb
push
fnstsw
roll
adc
ds
cwtl
ret
shll
jle
fdivs
dec
sub
int3
push
push
add
call
cld
xchg
sbb
pop
stc
adc
inc
pop
cmp
aaa
movsb
and
enter
mov
loope
mov
or
js
xchg
ss
lods
sbb
ds
test
mov
or
inc
lock
xor
daa
repnz
sbb
ds
dec
cmp
test
ret
arpl
jmp
pushf
mov
lods
sbb
dec
faddl
sbb
mov
call
fidivl
xchg
pop
mov
add
mov
dec
test
add
data16
out
iret
jb
call
cmp
sahf
mov
ret
std
xchg
cmpsl
sub
cld
dec
popa
dec
in
jbe
mov
cmp
dec
and
ss
outsl
push
je
inc
movsl
icebp
nop
cld
pop
adc
pop
push
dec
xor
push
int
or
jl
hlt
fistl
inc
aas
pusha
ds
cmpsb
xchg
cli
push
xchg
test
xor
cmp
jne
test
mov
js
inc
decl
jmp
jns
test
inc
les
push
aam
out
cmp
sti
sbb
xlat
jb
xor
push
jl
cli
cmp
mov
push
jmp
mov
arpl
cwtl
inc
pop
and
push
sahf
adc
sbb
mov
mov
add
xor
xchg
scas
mov
addr16
dec
sarl
lahf
sbb
jbe
fs
pop
int3
push
in
lock
jmp
repz
cwtl
into
cmp
inc
lds
sub
out
push
in
push
sub
jge
fmuls
call
mov
movsl
or
pop
pop
xchg
mov
pop
or
pop
fldlg2
inc
pop
jmp
inc
lods
cmp
jmp
sub
test
xchg
daa
inc
pop
mov
add
scas
adc
push
xchg
jo
orl
lods
mov
dec
scas
sub
xlat
push
dec
cmc
lds
fidivs
adcl
dec
or
pop
jnp
sahf
dec
pop
mov
add
outsl
lahf
ret
xor
jns
mov
add
hlt
mov
imul
push
add
sub
push
mov
leave
je
sub
jp
dec
cs
insb
add
push
xor
xlat
xchg
mov
loop
pop
imul
lods
nop
inc
push
push
jo
enter
dec
pop
and
pop
xlat
shlb
fildll
cmp
pushf
push
mov
rcl
jno
fcompl
xchg
lds
xor
imul
cmp
adc
push
dec
jns
cmp
pop
daa
rcll
inc
sahf
sahf
sahf
imul
mov
pop
fdivrl
inc
dec
aas
push
push
or
xor
and
repnz
push
fsubr
cmp
dec
mov
insl
and
rol
stos
faddl
fnstsw
jecxz
inc
adc
mov
pop
mov
stos
lret
subb
jb
cmp
sbb
mov
or
adc
imul
jne
and
and
je
or
cltd
xor
mov
pop
xchg
cmp
xchg
dec
cld
xor
mov
add
push
mov
push
push
data16
cmpsb
stos
and
test
mov
ja
sahf
outsl
push
fdivl
or
icebp
rorl
fisubrl
lcall
test
arpl
lret
nop
mov
push
sub
add
pop
inc
flds
pop
mov
jl
inc
or
data16
aas
dec
sbb
pop
cmpsb
add
sbbb
loopne
xchg
rcr
in
cli
jp
mov
in
jl
or
cmpsb
xor
cwtl
push
pop
aaa
mov
jb
jmp
xor
pop
xchg
aas
mov
mov
outsb
test
test
in
jmp
fs
repnz
clc
arpl
mov
or
xchg
mov
cli
dec
lret
lds
xchg
adc
inc
mov
mov
push
adc
pop
loop
fistl
repnz
bound
pop
call
dec
clc
shr
mov
das
cmp
xor
mov
sbb
pop
cwtl
das
dec
sbb
out
outsl
loopne
nop
lock
sub
jns
enter
push
mov
inc
or
push
xchg
in
and
inc
lock
jge
fisubs
xorl
les
aad
ja
call
mov
cmp
cmp
lods
sub
into
outsl
or
into
push
ds
test
lods
and
fmuls
xchg
xchg
fmul
rcrb
pop
imul
sub
pop
call
call
imul
lcall
andb
hlt
stos
push
ret
adc
sbb
xor
shlb
fcmovne
push
push
sub
pop
mov
insb
jp
or
sbb
scas
mov
sub
cmc
jmp
ficompl
mov
enter
cmp
push
jge
aam
lds
pop
shrl
in
pop
mov
adc
inc
ret
pop
dec
mov
and
sub
rcl
and
sbb
xchg
inc
lret
mov
inc
jmp
cld
andb
aam
mov
pop
outsb
popa
mov
xchg
repnz
push
xchg
xor
cmc
or
xor
pop
sub
fs
data16
scas
inc
adc
sbb
push
dec
or
pop
xor
stc
or
pushf
jg
dec
loop
push
es
mov
imul
fbld
push
jg
mov
inc
das
push
push
mov
mov
les
fstps
jmp
int
mov
movsl
inc
mov
mov
and
ss
xlat
mov
mov
ret
out
stc
add
mov
mov
xor
lret
outsl
nop
nop
stos
subb
xor
sbb
ret
dec
push
int3
fdivrs
and
cmpsl
js
cmp
arpl
mov
nop
inc
pushf
imul
cmp
shll
xchg
ja
or
aas
lahf
repz
mov
pop
pop
sbb
repz
loop
xchg
mov
pop
mov
in
sub
test
insb
mov
jbe
cmp
mov
lods
repnz
inc
push
test
cmp
sbb
mov
mov
pop
cmp
push
push
lcall
jne
lret
pusha
test
jg
cmp
js
adc
cli
lret
sti
mov
out
test
pushf
in
jns
pop
sub
cmc
mov
and
outsb
push
mov
mov
addr16
mov
xchg
out
cwtl
fistps
push
xlat
repz
dec
sub
dec
jmp
fisubrl
adc
inc
inc
push
adc
pop
mov
cmp
adc
sub
dec
out
adc
loopne
adc
push
push
sahf
cld
ror
lret
push
xchg
sti
and
es
mov
push
cmp
cmp
mov
pop
inc
cmc
xchg
aas
xchg
mov
test
mov
xor
nop
push
xlat
stos
pop
rcrb
movsl
add
sub
stos
clc
mov
cli
popa
aad
inc
add
inc
jb
jmp
lret
pop
xor
sbb
lds
cmpsb
into
rorl
out
jae
imul
mov
jno
xchg
or
aaa
sbb
lahf
les
fisubrs
insl
hlt
hlt
fs
test
sbb
cmp
or
xlat
rolb
aad
dec
loope
add
clc
loope
dec
aaa
mov
bound
loop
mov
into
pop
fs
out
sub
imul
inc
add
cmp
push
int3
dec
pop
out
mov
call
adc
into
push
dec
mov
mov
add
es
dec
insl
xchg
inc
jge
dec
sbb
fwait
ljmp
cmpsb
push
es
jp
mov
cmp
scas
mov
lahf
or
mulb
push
cld
ficompl
andb
and
js
fnstsw
xchg
or
adc
lret
inc
push
pop
pop
fdivl
lods
sbb
outsl
je
cltd
mov
mov
incb
push
mov
add
daa
sub
dec
in
xchg
sub
adc
inc
sarl
xor
mov
xchg
shll
mov
ficomps
ljmp
mov
jecxz
mov
int
shl
push
inc
lods
sub
ss
lods
and
dec
sbb
iret
insl
lock
push
or
pop
push
shrb
push
ja
insb
push
ret
ds
push
jnp
lods
inc
repnz
movl
mov
pop
mov
jbe
mov
cmp
jae
das
nop
and
sub
les
pushf
cmp
sub
call
mov
and
test
ffreep
rcl
lret
ds
jge
lods
mov
jle
xchg
mov
out
adc
cltd
add
xlat
out
inc
addr16
ret
inc
fldenv
mov
out
xor
jl
out
cmp
jle
mov
jmp
xchg
inc
inc
lret
ret
sub
inc
and
xchg
je
pop
popf
jle
xlat
int3
xchg
orl
movq
lahf
mov
xchg
add
sub
arpl
mov
inc
push
int3
jns
dec
inc
push
stos
repz
sbb
aad
push
pop
mov
xor
mov
rolb
loopne
std
sub
call
cmpsb
fiadds
pop
pop
enter
mov
fnstcw
jo
add
arpl
xchg
mov
lods
push
adcl
repz
shll
cmp
sub
lock
clc
std
pusha
push
out
xchg
inc
mov
sbb
or
mov
mov
pusha
push
add
mov
ss
rorb
test
test
add
fidivrl
jno
pop
mov
les
mov
adc
les
dec
add
in
xor
cwtl
bound
adc
imul
sbb
cld
xor
fs
imul
adc
data16
out
or
xchg
jg
roll
filds
sbb
xchg
aam
je
cmpsl
mov
push
or
rorb
stos
lcall
shlb
mov
stos
xchg
jecxz
loop
push
pop
popf
pop
cld
xor
jp
cmp
pop
cld
push
pop
fstpt
es
pop
add
mov
inc
xchg
jecxz
add
push
add
int
test
lret
enter
ds
stc
cmp
inc
push
jb
inc
jmp
mov
fld
push
add
insb
arpl
out
xchg
cltd
ret
sbb
pop
xchg
popf
icebp
pop
sbb
pop
xchg
or
and
test
and
push
cmp
cmpsl
cld
adc
insb
repz
cmp
add
lods
push
in
sub
pop
cltd
aaa
out
dec
pop
int
scas
jecxz
popa
xchg
adc
xlat
add
lahf
adc
sub
add
fcoms
into
mov
pop
dec
sbb
lahf
kxnorw
jne
push
inc
nop
pop
mov
sub
add
scas
jo
adc
pop
xchg
sub
cmp
enter
mov
stos
push
sbb
loopne
adcb
cmpsb
or
xor
fldl
out
subl
mov
jp
cwtl
or
or
push
mov
jle
xchg
std
mov
cmp
lods
mov
pop
mov
popf
ja
jne
sbb
sbb
jecxz
lds
dec
aas
jne
bound
sbb
fnstsw
add
repz
mov
enter
mov
dec
mov
add
xchg
shll
outsb
clc
inc
add
xchg
mov
sarl
sub
pop
mov
in
rcrb
xor
mov
aad
xchg
pusha
mov
adc
or
mov
ss
mov
inc
cmp
add
dec
sarb
into
mov
cmp
sub
jle
pop
clc
rcrl
out
decb
mov
xchg
inc
and
xchg
mov
jns
mov
sub
add
dec
nop
sbb
outsl
in
rcrl
loope
mov
and
pop
cmp
dec
mov
xchg
and
out
in
rorb
cmpl
xor
xlat
and
stc
ds
fiadds
test
xchg
int
imul
cmp
add
cmp
cmp
pop
jl
lcall
call
or
dec
testl
pop
push
sbb
adc
adc
add
lcall
or
jae
jae
test
loopne
jbe
adc
sub
lcall
jne
add
enter
rolb
fs
and
icebp
adc
les
pop
enter
jnp
or
xchg
mov
pop
lahf
lock
mov
fcompl
dec
or
dec
js
inc
adc
test
sti
movsb
dec
stos
inc
cmp
dec
fnsetpm(287
adc
fwait
leave
pop
inc
cmpsl
inc
ret
psubusw
mov
mov
icebp
clc
movsb
lret
dec
ret
sbb
mov
jmp
add
mov
sbbb
dec
mov
loopne
jnp
xchg
outsl
ret
aas
cmpsb
dec
cltd
aam
inc
jg
cmpsb
fsts
fcomps
jmp
push
sub
mov
insb
or
xchg
push
jns
and
bound
iret
sbb
ret
jl
cmp
fists
fisubrl
jns
xor
mov
data16
stos
fdivrl
sbb
jnp
dec
ret
pop
ds
fldl
movl
mov
mov
ja
imulb
in
pop
pop
jle
inc
hlt
daa
or
call
outsb
sbb
movsl
lock
and
outsb
or
fadds
pop
in
cwtl
adc
sbb
or
mov
rol
in
pop
jmp
outsl
bound
xlat
test
outsb
inc
pop
stc
movsl
insl
or
push
inc
push
push
cmp
inc
roll
imul
das
add
lods
fcmove
into
out
je
cld
out
shrl
xlat
and
mov
mov
add
cmp
addb
or
inc
jns
sbbl
add
jg
pop
aaa
push
push
and
xor
jge
push
cli
mov
mov
jecxz
sar
xor
outsl
sbb
jb
roll
cmp
movsl
leave
xchg
mov
addl
out
fwait
inc
adc
pusha
jae
rclb
jmp
out
push
xor
xlat
pop
adc
in
fistpl
inc
dec
cmpsb
or
loopne
rcr
repnz
arpl
gs
jp
dec
sbb
fdivrs
dec
xor
dec
pop
xlat
xor
add
dec
mov
push
xchg
sarb
pop
fldcw
ret
repz
push
dec
inc
mov
lret
push
add
rolb
pop
or
lret
lds
dec
mov
ret
add
adc
and
fmull
mov
outsb
jnp
jmp
xchg
adc
push
rclb
add
int3
xlat
nop
cld
hlt
lds
std
lret
test
inc
push
or
out
jno
repnz
cmp
aam
push
and
clc
sbb
mov
in
loope
mov
les
mov
dec
mov
aaa
lcall
inc
pop
pop
add
mov
movsl
cmp
mov
sti
ss
xor
xchg
mov
icebp
mov
pop
inc
xor
ret
ljmp
stos
ret
ret
mov
repnz
dec
sub
inc
sarl
test
dec
cmpsb
inc
sarl
adc
cmpsl
mov
fs
fs
sahf
in
xor
loope
xor
cmp
pop
test
dec
sub
push
jp
or
jecxz
es
mov
adc
lock
cwtl
mov
dec
subb
push
push
fdiv
rcrb
dec
call
add
jns
pop
shll
fst
xor
jp
clc
pusha
loopne
adc
pop
jno
call
xor
jmp
sub
pop
xchg
loop
fcmove
cs
into
test
push
or
clc
jecxz
clc
push
sti
int3
pop
fsubrs
aas
add
cli
subb
push
jae
js
push
push
sbb
les
mov
xor
test
and
add
push
push
push
pop
mov
and
hlt
pop
in
or
fs
pop
or
jo
call
data16
shrl
and
xchg
xchg
cmp
inc
mov
pop
test
pop
dec
data16
insb
into
pop
mov
sbb
shll
test
in
les
adc
sub
or
sub
ret
pop
push
idivl
lret
ljmp
sbb
fstps
bound
pop
js
cmp
aad
into
dec
imul
jmp
arpl
rclb
xchg
mov
sub
fdivl
lods
fidivl
js
gs
shrb
pop
cmp
stos
sub
filds
and
sub
rcrb
scas
shrl
inc
jb
push
gs
int3
cmp
adc
frstor
and
into
inc
sub
int3
mov
pushf
xlat
mov
fadd
test
cld
mov
xor
pusha
sbb
pop
fsubr
sbb
movsl
outsb
xchg
call
mov
test
pop
aaa
nop
enter
sbb
inc
fadd
add
lea
scas
pop
mov
ss
sub
add
enter
mov
push
or
stos
inc
cld
je
fisubs
popf
clc
mov
rolb
test
pop
outsl
rcrb
pop
lods
push
mov
insb
aas
test
sub
ss
es
mov
ljmp
push
adc
std
cmp
xchg
sub
jo
scas
adc
cmp
mov
push
adc
aad
stc
notb
sbb
push
in
pop
mov
mov
inc
fcomi
adc
sbb
sub
xchg
ror
pop
cmp
mov
pop
mov
push
and
mov
leave
or
out
or
or
push
lret
jmp
mov
push
aaa
cmpsb
xor
dec
jg
pop
xchg
mov
lcall
inc
pop
push
xchg
cltd
test
and
cmpb
outsb
inc
add
lds
mov
mov
mov
in
mov
and
cmpsl
lret
jnp
jbe
mov
adc
sbb
push
xor
sti
inc
out
cmp
insb
adc
fbstp
lret
mov
shll
push
xchg
fcmove
lret
mov
aas
fmuls
pushf
xchg
in
xchg
sbb
lahf
call
subb
cmp
pop
test
mov
sub
pushf
leave
sahf
enter
and
iret
test
pop
cmp
aam
gs
int3
int
sub
xchg
or
jge
int3
mov
xor
roll
mov
dec
sbb
sahf
or
mov
push
cmpsb
sahf
add
push
inc
add
popa
mov
jae
adc
push
test
cld
xchg
and
aad
into
sub
shll
mov
mov
jae
aam
in
jge
cmp
mov
fsubrs
sub
movmskps
jbe
xor
mov
scas
test
xor
shr
jns
fildll
mov
aad
or
push
dec
shlb
dec
dec
pop
pop
in
push
mov
sbb
or
repz
xor
imul
lret
mov
or
mov
dec
popa
mov
es
jb
call
lret
gs
mov
iret
pop
data16
out
mov
iret
cmp
dec
ljmp
subps
les
lahf
out
adc
pusha
push
dec
repnz
jp
hlt
and
rclb
jg
mov
add
or
out
sbb
lods
cmp
dec
inc
jae
mov
call
fimuls
jo
pop
jne
gs
and
sbb
xorb
jl
and
sub
les
scas
mov
sbb
out
es
imul
add
push
push
pop
xor
jb
dec
rorb
pop
nop
jne
arpl
nop
pop
pop
adc
in
out
loope
popf
mov
fimuls
sub
push
lret
fwait
mov
pop
mov
je
mov
pop
push
pop
pop
add
andl
add
int3
in
das
and
pushf
out
sbb
cmp
lret
mov
jae
lods
mov
lcall
inc
jne
cs
rorb
xchg
daa
push
adc
jns
fisubrs
dec
inc
jge
dec
jne
js
adc
adc
in
lods
push
dec
fisttpll
sbb
mov
cmp
outsl
cmp
aas
pop
aad
inc
push
sub
dec
ja
call
adc
xchg
xchg
lock
mov
jg
mov
shll
jb
mov
in
rol
adc
addb
lcall
jno
sub
lahf
shll
mov
sarb
movb
pop
jbe
repnz
insl
loopne
ja
int
into
vpbroadcastmb2q
pop
jle
mov
jecxz
mov
mov
jns
shlb
mov
or
popa
jnp
pop
test
mov
stos
add
cmp
test
xor
mov
stc
sbb
jns
aam
fst
pop
or
or
out
jne
ret
mov
adc
push
push
and
jnp
mov
int
movsl
push
imul
adc
sub
and
push
xchg
sti
mov
cmc
notb
fisubl
xchg
xchg
or
outsb
dec
loopne
sbb
or
inc
cmc
test
push
mov
sub
sub
data16
xor
ret
or
pop
loop
scas
adc
adc
repz
or
adc
dec
jl
clc
mov
xor
cmc
out
jl,pn
add
outsb
cmp
push
jbe
cli
fstpt
shrb
movsl
xor
imul
ficompl
sub
mov
mov
daa
lds
adc
pop
sbb
jmp
inc
outsb
loope
movsl
mov
je
push
sub
in
jg
cld
out
dec
stos
mov
mov
data16
pop
add
push
or
repz
fmull
fistl
xchg
pop
repz
mov
jl
sbb
adc
call
mov
or
ds
movsb
pop
les
dec
lea
adc
ret
pop
sbb
sbb
lcall
mov
mov
cmp
mov
jbe
mov
push
sbb
sub
inc
in
dec
jo
push
xchg
add
mov
and
or
test
xor
push
cli
jmp
filds
sub
and
std
cmp
daa
jno
mov
ss
ret
sbb
aam
fistpl
inc
fnstcw
jnp
dec
aas
shlb
fcomps
cld
lods
adc
push
xor
mov
test
mov
dec
std
cltd
adc
addr16
hlt
ds
cmp
fmuls
addr16
loope
xchg
cmp
pop
cltd
xchg
in
not
sbb
sub
repnz
add
xor
mov
xchg
mov
imul
dec
cmp
pushf
push
push
cmp
push
jno
add
sbb
jbe
jecxz
nop
cld
dec
mov
inc
cmpl
mov
aaa
fidivrl
add
iret
imul
adc
sbb
in
dec
bound
outsl
test
pop
adcl
cmp
add
adc
pop
xchg
pop
stos
dec
and
add
mov
cmp
xchg
xor
icebp
dec
and
ja
adc
push
inc
cmpsb
add
insb
pop
movsb
iret
nop
xchg
xchg
dec
ljmp
mov
lds
push
jo
mov
bound
aas
pop
stos
arpl
pop
xchg
cwtl
dec
xchg
add
jl
adc
fbld
adc
cld
test
les
dec
xchg
cmp
jecxz
mov
out
xchg
and
xchg
and
ficoml
xchg
or
aas
xor
or
lcall
pop
add
lret
mov
loope
sub
in
mov
insl
lds
leave
inc
and
aas
das
add
adc
dec
or
fbld
in
pusha
jg
cmp
sub
or
xchg
push
mov
mov
jmp
and
pushf
pop
inc
dec
ficomps
popf
xlat
daa
xor
jle
cmp
mov
dec
daa
loop
lds
fs
and
repz
or
adcb
adc
pusha
sahf
dec
sub
adc
addr16
push
sub
sub
pop
adc
lret
mov
loopne
leave
dec
loope
vandnps
int3
xchg
add
fidivl
fisubl
xlat
test
ds
mov
faddp
pop
xlat
popf
insb
pop
cs
shlb
fnstenv
dec
fadd
and
cltd
cltd
shlb
scas
xor
dec
pop
lds
pop
add
push
jecxz
and
inc
adc
js
nop
pop
int
cld
mov
pop
ror
mov
or
loop
rol
xor
ss
sub
and
fistpl
jmp
stos
sbb
and
cmp
int3
xchg
stc
test
adc
cs
mov
push
lea
loope
das
outsb
xor
flds
mov
sbb
and
cmp
int3
xchg
sbb
adc
int3
or
push
jl
sub
or
push
dec
aam
int3
mov
mov
push
in
push
sub
pop
jae
andb
dec
jp
xor
or
nop
std
mov
ljmp
dec
jns
in
pop
jno
das
mov
jmp
jnp
cli
or
fcmovnbe
out
and
mov
and
enter
repz
fistpll
push
jae
cmp
sub
cwtl
test
add
jno
int3
add
movsb
jl
mov
or
push
ds
aam
in
cltd
inc
push
dec
cs
mov
fsubrl
repz
mov
push
pop
and
sti
adc
and
movsb
jecxz
out
mov
mov
cmp
fsubrp
ja
sarl
ds
and
lahf
adc
in
cmp
ja
fwait
bound
cmpsl
push
loope
scas
movsb
dec
mov
ds
add
xchg
cld
cwtl
mov
popa
mov
mov
clc
addr16
das
imul
ret
pusha
mov
inc
ljmp
adc
lock
cmc
in
js
roll
jb
rcl
in
les
mov
dec
xchg
jmp
fstp
push
call
inc
cmp
lea
pop
cmp
loope
mov
inc
popa
into
mov
es
push
ret
sub
mov
pop
lret
insb
cld
adc
lret
insb
and
sbb
int
lods
fstl
fs
inc
or
int
mov
jo
fistpl
rcl
imul
aas
inc
lcall
and
mov
fmull
pop
cmp
mov
jnp
jnp
filds
sar
cld
popa
sub
pusha
pop
les
mov
add
aas
jo
std
in
lods
fldt
cs
xchg
push
lods
icebp
add
out
sbb
and
arpl
sarb
or
mov
inc
sub
adc
add
outsl
stos
or
mov
mov
mov
sub
pop
aas
lahf
xor
push
dec
sbb
mov
mov
inc
mov
aaa
mov
out
jge
jns
mov
and
dec
add
ljmp
push
jp
mov
stos
fsubr
subl
jle
inc
mov
push
inc
leave
jecxz
pushf
sub
mov
outsb
pop
push
shl
mov
jmp
or
addr16
rcrb
cs
lret
dec
subb
dec
jno
shrl
jnp
jno
setae
in
and
cs
dec
shll
aad
test
xor
or
inc
fcoml
clc
push
mov
sbb
insl
pop
daa
cmp
mov
loop
push
mov
or
xchg
int
imul
mov
cmp
jmp
xorl
xor
int
loopne
mov
jo
imul
les
pop
cmc
aam
add
lea
leave
rorl
xchg
outsb
push
loope
pop
hlt
xchg
jp
jecxz
shrl
leave
xlat
mov
std
lea
in
imulb
je
cmp
push
mov
movsb
mov
test
push
shll
xchg
cmp
fdivs
lret
cmp
push
in
mov
dec
cli
jnp
inc
negb
lods
in
jl
jl
pusha
data16
stos
pop
push
popa
mov
cmp
push
mov
inc
jns
push
jnp
int3
or
mov
sbb
mov
jnp
mov
enter
rolb
pop
sub
dec
push
jb
add
mov
jmp
inc
dec
enter
popa
mov
cmp
or
cmp
push
lea
mov
test
sub
mov
push
cwtl
inc
incb
orb
dec
out
mov
shrl
jb
fnstsw
js
push
iret
pop
mov
sbb
das
mov
push
fisubrl
leave
inc
cmp
in
dec
pop
imul
pop
cmc
hlt
in
and
dec
sub
pop
in
sub
xchg
test
js,pt
sar
pop
lods
shlb
inc
jo
ds
mov
inc
std
daa
mov
cmp
roll
add
or
or
sub
loopne
push
add
out
lods
es
ljmp
pusha
fstl
pop
fsubrs
imul
cmc
push
add
and
scas
popa
jmp
pop
adc
stos
mov
sbb
jbe
lods
or
jbe
push
sub
int3
aam
movb
mov
pop
add
out
inc
add
iret
cwtl
adc
std
imul
pop
mov
into
cmpsb
push
mov
out
mov
lea
dec
std
mov
add
fsub
mov
and
pop
rorb
or
loopne
ljmp
mov
inc
mov
mov
inc
inc
lock
inc
mov
repz
pop
xrelease
pop
and
xchg
jb
xchg
mov
mov
repz
add
dec
xor
or
outsl
sub
fldt
std
cld
add
test
es
cmp
cmpsb
outsl
std
cmp
jno
sti
pushf
fs
fcomps
and
lret
xchg
fdivrs
ss
xor
cmp
repnz
push
and
mov
rclb
mov
cmp
je
int3
rol
lret
sti
pusha
cld
js
pop
or
pop
xor
adc
sub
sbb
shlb
mov
push
cmp
pop
cmpsb
arpl
and
es
jecxz
or
pop
inc
out
outsl
mov
fsubl
inc
xchg
movsb
pop
cmpsl
add
or
mov
mov
xlat
shl
jnp
aas
lahf
jg
repz
add
pop
xchg
arpl
xchg
int3
imul
or
loopne
aaa
sub
sub
add
xor
xchg
test
mov
jecxz
inc
fnstsw
out
stos
inc
or
lods
loopne
outsl
jne
fdivrl
or
insb
push
push
jl
fdivrl
push
mov
jne
nop
inc
mov
andb
xchg
or
inc
testb
and
subl
out
pop
or
ret
cmpsb
push
pop
lods
mov
lods
lds
aas
mov
daa
cmp
mov
cwtl
or
movsl
div
in
stc
clc
pusha
icebp
pop
adc
jle
shrl
mov
stos
shrb
adc
pop
cltd
rcrb
mov
sub
mov
ljmp
scas
mov
and
adc
lds
xor
or
mov
and
std
sar
fs
sbb
jnp
inc
sahf
dec
and
fnstsw
inc
sub
les
mov
cmp
icebp
pop
js
jno
icebp
andb
adc
popl
fistl
lret
xchg
ds
shrb
pop
sarb
push
mov
cmp
xlat
loopne
lahf
mov
cld
push
xor
mov
cmp
fstpl
aas
push
jg
adc
out
inc
decb
inc
sbb
movsb
fcompl
or
ret
movsl
inc
inc
ret
mov
sub
mov
in
pop
je
jns
les
mov
xchg
inc
ds
sbb
aas
lock
cmpsb
pop
adc
lods
out
xchg
sub
int
test
adc
adc
jnp
or
out
mov
ljmp
xchg
std
repnz
mov
pop
aas
in
dec
testb
cmp
push
andb
add
stc
dec
mov
add
mov
fistl
rorl
les
cmp
rclb
test
dec
mov
inc
xor
int
test
outsl
aas
hlt
dec
xchg
pop
jo
or
sarb
pop
mov
adc
pop
enter
mov
pop
iret
jno
lret
call
or
movsb
jmp
mov
or
cwtl
and
xchg
fistl
pop
nop
daa
pop
andl
jmp
sub
test
or
sti
inc
pusha
test
roll
enter
inc
test
xlat
addr16
mov
and
pushf
in
sub
ds
fldenv
push
cltd
ret
rcrl
insl
inc
movsl
push
cmp
xchg
mov
arpl
fsub
aad
sbb
imul
mov
cmp
in
mov
push
daa
xchg
push
inc
sub
ljmp
mov
sub
inc
ljmp
fldcw
movsb
roll
aam
ficomps
arpl
mov
lret
pop
shll
or
in
xor
cmovs
jg
adc
inc
xor
rcr
xchg
cmpsl
sbb
jp
cmp
jo
icebp
pusha
cld
arpl
inc
js
pushf
cwtl
jge
xchg
cwtl
xchg
out
xor
notl
leave
fcomps
or
std
js
jecxz
clc
dec
rcrb
adc
jb
xchg
xor
mov
mov
adc
leave
push
sbb
inc
ds
lods
ficomps
in
and
mov
gs
fdivrs
jge
mov
add
addr16
out
fwait
stos
sbb
xchg
sub
test
inc
hlt
stc
sub
ret
lods
cvtps2pd
loope
xchg
mov
push
outsl
lret
or
fisubs
mov
repz
stos
stos
mov
inc
mov
and
mov
pop
push
std
icebp
pop
or
imul
mov
inc
jl
or
popf
int3
das
mov
dec
xchg
dec
fsin
mov
and
hlt
pop
in
lods
pop
pop
mov
fildll
sbb
or
popa
sub
mov
and
lret
ljmp
mov
loop
test
lahf
hlt
inc
test
mov
std
inc
jae
loope
ljmp
jmp
pop
dec
xlat
aam
test
or
cmp
add
mov
push
jbe
rorb
pop
or
xor
mov
insl
mov
bound
les
and
lret
dec
mov
rcl
and
enter
shll
sarl
out
pop
mov
xchg
fisubrs
iret
cmc
adc
cmp
cmp
and
add
pushf
test
sub
sbb
push
mov
or
inc
sbb
sub
fwait
pop
dec
push
stos
mov
rcrb
xadd
mov
out
xchg
inc
mov
inc
sub
loopne
sub
ljmp
fldt
pop
jle
and
push
dec
mov
call
xor
xchg
ficoms
cwtl
mov
push
mov
les
mov
daa
push
xor
jl
stos
rol
lret
mov
sub
mov
insb
xor
xchg
aaa
pop
ss
add
cmpsb
es
adc
in
stc
iret
inc
fdivl
mov
dec
test
xchg
fsubrl
lds
call
dec
mov
and
sub
aaa
mov
mov
and
andl
fldt
pop
mov
jo
pop
stos
add
push
lods
rorb
pop
mov
aam
mov
push
mov
inc
dec
push
fs
mov
push
mov
test
enter
fnstcw
cmpb
sti
std
adc
scas
jae
pop
mov
jae
mov
mov
mov
dec
xchg
mov
jmp
and
xor
cmp
sti
jecxz
cmp
sbb
pop
stos
sub
iret
jl
iret
inc
dec
jmp
stos
aaa
ret
mov
add
xchg
jbe
negl
sti
jnp
mov
movsb
or
psubusb
pop
dec
dec
push
call
mov
push
xchg
out
loop
lock
push
xchg
cltd
push
in
addr16
mov
xchg
sub
xorb
and
mov
mov
mov
push
dec
call
mov
mov
ret
je
cmp
adc
and
mov
aas
cld
dec
loop
js
cmp
in
shr
movsl
pop
pop
add
repnz
mov
mov
xchg
out
cbtw
loop
bound
xchg
mov
in
mov
xchg
mov
inc
into
cmpsb
ds
dec
xorl
and
fwait
subl
xor
push
outsb
ss
mov
iret
inc
or
ss
mov
adc
lods
adc
daa
sbb
inc
inc
inc
mov
mov
test
ljmp
shlb
fcomps
jns
or
pop
loop
je
push
das
add
in
fdivl
add
dec
xor
sbb
xor
arpl
or
jmp
fstpl
scas
movsb
jge
and
push
and
mov
dec
adc
mov
fisttpl
leave
outsl
and
sub
dec
shr
pop
push
data16
inc
or
add
es
loope
flds
lcall
and
or
cmpsb
xor
mov
js
xor
inc
xor
aad
ret
es
hlt
imul
fs
mov
lock
sub
int
cltd
or
mov
mov
mov
shll
mov
xchg
jge
inc
test
bsf
dec
mov
leave
repnz
push
mov
mov
int3
clc
xchg
xor
mov
xchg
fisubrl
inc
jecxz
push
pop
xchg
jecxz
add
outsb
bound
sbb
mov
fidivrl
test
pop
and
pop
shll
xor
pop
or
lcall
faddl
and
scas
loop
loop
add
aad
jl
pop
mov
mov
jge
adc
xor
out
jl
cmpsb
addr16
int
sbb
decb
xchg
push
mov
mov
dec
and
sbb
push
mov
pop
data16
xor
into
mov
add
pop
mov
movsb
mov
outsb
aad
lret
pop
dec
in
or
or
divb
push
cmpsb
test
push
fs
mov
test
and
jecxz
repz
loope
push
sarb
js
cwtl
push
icebp
lret
test
rcrl
aam
mov
and
andb
dec
iret
sub
jo
pop
lret
inc
jns
push
imul
mov
fsubs
pop
mov
xchg
popa
mov
movsb
xor
lret
mov
pop
fs
jg
mov
enter
adc
test
loop
and
sbb
pop
inc
and
cmp
pop
pop
or
test
lea
ja
push
icebp
loop
push
cmp
les
xchg
mov
mov
cmpb
lcall
sub
and
inc
test
dec
mov
sti
inc
mov
xchg
jmp
adc
rcrb
enter
inc
xchg
hlt
cmp
dec
js
xchg
scas
mov
sub
scas
ljmp
or
loope
imul
mov
push
mov
das
ja
les
into
insb
fwait
inc
push
and
ret
xchg
add
pop
dec
das
mov
mov
xchg
bound
pushaw
or
and
xchg
fisubl
xor
dec
cmp
mov
or
repz
out
push
sub
push
cmp
sbb
push
movsb
pop
ds
push
or
dec
cmp
sarb
andb
sarl
mov
fistpll
add
adc
test
ret
push
pop
pusha
sbb
loop
mov
aam
arpl
and
lods
push
mov
xchg
rol
lret
test
add
int
jg
movsb
cli
xor
ret
mov
test
ja
jae
inc
pop
or
stos
pop
sar
xor
cmpsl
insl
inc
call
inc
xchg
scas
and
pop
mov
or
lcall
mov
andl
mov
cmp
push
fdivs
pop
ror
icebp
mov
xor
insl
out
fsts
mov
aad
adc
mov
pop
insl
sbb
inc
popa
inc
in
xchg
aas
test
loope
push
ret
pop
xlat
inc
cmp
ficompl
dec
subl
lret
or
or
test
shrb
jnp
loop
jns
repnz
mov
loop
inc
cmpsl
and
jns
jge
mov
mov
and
cmc
in
sub
ss
ret
stos
pop
xor
cwtl
rol
adc
inc
dec
rcrl
mov
push
xor
mov
notb
shlb
cmp
cli
lret
pushf
neg
mov
and
call
jmp
fisttps
aam
aas
iret
xchg
into
popf
mov
inc
test
mov
ds
idivb
je,pn
adc
or
mov
enter
scas
fmuls
sbbl
cmp
push
dec
dec
mov
in
inc
mov
jne
and
mov
sub
inc
dec
ljmp
sub
aam
clc
add
adc
adcl
xor
ja
movsl
sub
lret
add
test
or
jnp
push
jle
sbb
xor
push
leave
cmpb
clc
or
mov
sbb
sbb
nop
cmp
and
sbb
insb
aas
xchg
sub
fwait
stos
cmpsb
adc
push
fs
enter
andb
aam
xor
push
dec
cmp
sub
mov
adc
fucomp
adc
mov
repnz
es
add
pop
fcomp
sbbl
xor
sub
sub
adc
das
pop
aas
lea
aad
xlat
and
dec
sahf
mov
paddq
add
mov
sbb
rep
push
push
adc
lea
lret
add
sub
xchg
fdivrl
push
data16
inc
and
jmp
xchg
dec
arpl
jnp
mov
leave
add
stc
std
pop
pop
mov
cltd
jge
addr16
cmpsl
int3
inc
jmp
aam
das
cmp
enter
xor
pop
icebp
mov
pop
pop
cmp
mov
xchg
xchg
cmp
shl
jnp
jg
fdivs
imul
daa
adc
cmp
gs
mov
mov
dec
mov
pop
sbbl
cmp
cld
push
nop
pusha
pop
fwait
mov
lods
xchg
xchg
sbb
mov
and
jmp
add
cmpsl
and
stos
and
repz
pop
inc
cmc
push
and
xchg
push
pop
mov
mov
lahf
pop
adc
mov
jne
jnp
rorl
mov
mov
push
orl
or
lret
call
adc
or
inc
pushf
movsl
mov
punpcklbw
stos
rclb
inc
push
scas
mov
sbb
inc
out
and
popf
push
sub
dec
pop
bound
clc
scas
xchg
or
ss
xchg
sub
inc
outsb
imul
push
add
leave
push
mov
jae
dec
das
mov
or
and
in
arpl
in
add
mov
inc
out
scas
aaa
cs
std
mov
cmp
pop
dec
inc
dec
imul
in
inc
pop
cmpsb
ljmp
inc
mov
mov
fildll
sbb
push
aaa
add
lods
sub
adc
enter
hlt
decl
or
jg
popf
enter
jp
in
jge
sub
dec
mov
sbb
stos
iret
xor
add
das
outsl
jmp
xchg
out
jae
ret
bound
scas
mov
adc
xor
call
fnsave
dec
inc
jno
and
mov
mov
fneni(8087
pop
push
cmc
cli
lods
aam
ss
ds
sbb
mov
out
push
add
pop
jecxz
test
faddl
sbb
jg
loope
shlb
lods
cmc
mov
pop
cmp
gs
es
cmpsb
push
sub
fcompl
lret
cs
mull
push
pop
bound
rcll
icebp
pop
sbb
out
jg
mov
rcrb
leave
sbb
xor
xchg
add
jae
and
fwait
push
jne
xchg
fnstsw
mov
pop
ss
pop
xchg
xchg
out
cs
inc
fcomip
enter
mov
icebp
cmp
movsb
dec
cmp
imul
inc
pop
jle
mov
jp
mov
fnsave
and
mov
movsb
xchg
scas
push
dec
sub
cmp
xchg
xor
and
std
cmpsb
in
jmp
stos
mov
ja
cmp
daa
data16
fsts
cmp
inc
rcrb
je
rclb
mov
cmp
push
mov
push
int3
repnz
popa
test
cmp
pushf
pop
lret
xor
call
xchg
jns
cmpsb
xchg
les
out
mov
dec
add
mov
xchg
fidivs
and
sbbl
das
fmul
fmul
cltd
mov
xchg
outsb
fldenv
xchg
aas
inc
loopne
xor
mov
imul
mov
jge
dec
sbb
xchg
incl
test
rorb
loope
stos
imul
push
sbb
push
and
mov
mov
xchg
arpl
cmc
adc
mov
jns
jnp
xchg
sbb
lahf
cld
sbb
sub
pop
shr
push
push
rorl
mov
clc
imul
mov
out
out
sub
adc
push
jbe
lret
pop
fstl
jae
cmp
int
add
mov
movsl
imul
ret
aas
mov
fcomps
add
dec
adc
int3
xor
pop
cmp
aas
test
inc
pop
shl
xor
mov
dec
rolb
repz
inc
call
gs
nop
call
inc
das
popa
ficoms
int3
dec
dec
pop
test
jnp
test
mov
mov
push
lods
sahf
add
lods
mov
fst
shrb
stos
aas
mov
bswap
fcmovne
inc
xor
ljmp
push
push
dec
xlat
es
test
subb
xchg
jle
aad
cmp
jb
jp
jl
xchg
push
sbb
test
hlt
repnz
mov
xchg
mov
mov
sbb
inc
sar
mov
cli
lods
pop
mov
sub
lret
in
xlat
xchg
xchg
aad
sbb
outsb
dec
cmp
mov
jmp
pop
push
data16
cmp
les
out
xor
or
mov
jnp
lret
nop
nop
subl
popl
ficoml
xchg
jb
cmc
pop
lcall
and
jae
cld
sub
jle,pn
sub
mov
cltd
movsb
mov
lods
push
jns,pt
jmp
test
xor
xchg
dec
lods
or
push
cmc
xchg
movsb
mov
sbb
add
ja
loope
add
stos
mov
cmp
xlat
sti
ret
lret
jno
add
xchg
sub
aaa
scas
or
mov
adc
das
or
loop
into
or
iret
fmuls
mov
ret
rcr
insl
je
pop
xchg
stos
jae
xor
mov
xchg
or
add
mov
xor
mov
sarl
xchg
testb
cli
loope
cmp
jmp
jp
push
enter
cmpsl
jno
add
xor
inc
ficomps
cmp
mov
stc
adc
xor
sbb
jg
or
dec
stos
pop
or
jb
insl
mov
mov
movsl
dec
push
ljmp
scas
sub
dec
bsr
sti
add
push
add
add
pop
leave
pmaddwd
or
and
inc
mov
jecxz
and
or
ret
pop
mov
inc
mov
mov
or
cmp
cmp
idiv
or
sub
add
fcmovbe
call
ss
shlb
shrl
addr16
sbb
jmp
lea
pop
sti
into
lea
and
pop
xor
cmp
je
pop
pop
test
mov
rcll
jle
push
and
jle
mov
shrl
inc
fcompl
push
dec
adc
cld
mov
and
fldt
pop
jmp
imul
mov
inc
adc
outsb
mov
mov
cmc
test
daa
test
imul
rol
shrb
in
in
cmp
sbb
add
xchg
pop
dec
ja
sbb
jb
mov
fsubrl
lods
fwait
lcall
cmpsl
add
loopne
pushf
and
lods
sub
decl
cli
add
jp
mov
sbb
rcr
cld
dec
pusha
arpl
add
fdivrl
in
sarb
mov
inc
and
add
xor
enter
inc
cmp
xor
ljmp
xchg
mov
sub
inc
or
adc
add
add
call
sbb
js
addl
mov
leave
mov
cmp
hlt
mov
xchg
adc
and
and
cwtl
and
inc
fwait
aam
xor
inc
adc
push
pop
push
shlb
mov
xor
jmp
div
popa
shll
push
hlt
pop
out
xchg
cmp
loopne
pushf
dec
adc
pop
sub
mov
ret
and
imul
sub
dec
movsl
cmp
ss
cmp
mov
jg
aam
imul
mov
daa
sub
and
pop
jae
fs
add
dec
mov
pop
into
sahf
inc
adc
mov
pushl
test
leave
jle
xor
pusha
dec
pop
subb
xchg
idivb
mov
or
cmp
cwtl
jbe
shlb
mov
cltd
xchg
pop
push
push
aas
pop
inc
popa
xor
stc
ret
test
xor
sti
pop
cwtl
inc
dec
mov
insl
call
push
iret
lcall
mov
mull
mov
push
jmp
std
in
mov
jno
xchg
in
inc
mov
pop
outsl
stos
pop
sti
add
negl
in
int3
dec
loop
aad
jl
and
add
lods
cwtl
cmp
or
pop
cmc
pop
and
xchg
scas
popa
iret
mov
into
cmp
fistps
sbb
clc
es
adc
in
pop
adc
popf
mov
aas
or
push
pop
int3
xlat
push
mov
sar
stc
dec
scas
cmp
fisttps
xchg
push
das
adcl
or
cmp
mov
and
leave
and
into
inc
cmp
rclb
fnsave
and
idivl
dec
test
test
and
imul
stc
test
rcrb
or
add
inc
or
adc
and
lret
stc
loopne
cmp
sarb
and
push
push
or
out
sbb
xchg
dec
aas
xchg
jle
cmp
inc
inc
idivl
pop
popf
mov
lret
in
sub
add
push
mov
out
into
int
js
fs
test
lret
sbb
pop
inc
dec
mov
pop
lods
shll
inc
inc
nop
push
and
and
xchg
fldenv
pop
rcr
dec
xchg
movsb
les
ds
ja
pusha
pop
push
or
inc
sbb
rcrl
sub
ret
inc
cmp
mov
xor
loopne
inc
jmp
xchg
inc
mov
pop
fldenv
stos
ror
ds
pushf
scas
cwtl
shl
mov
stos
loope
add
jmp
loop
jecxz
pop
add
and
inc
mov
inc
and
fs
lods
ds
xchg
mov
lods
out
rclb
je
inc
mov
fwait
jb
aas
xchg
test
popf
xchg
cltd
sbb
sub
inc
shll
xor
or
test
mov
in
mov
lock
iret
cli
stc
flds
dec
shll
xlat
int3
fld
stc
dec
jbe
adc
addb
sub
mov
add
dec
imul
mov
call
sbb
xchg
pop
loopne
lcall
fs
pop
add
sbb
fsubrs
dec
leave
push
xchg
pop
das
imul
mov
xchg
jns
imul
or
out
cld
mov
icebp
into
fisttpll
lods
push
arpl
nop
jl
mov
adcb
mov
or
idivb
repnz
sub
call
push
cs
mov
jl
idiv
stos
fsubrl
dec
cmp
inc
lock
xchg
in
xchg
adc
mov
fmuls
int3
mov
pop
clc
cmp
lcall
and
xor
fnstsw
and
jne
mov
or
jno
sub
scas
jle
ds
cld
sbb
aas
push
test
xchg
movb
js
cwtl
push
xlat
lods
inc
scas
sbb
jg
add
sub
dec
xor
xor
aad
stos
and
in
pop
cmc
adc
enter
cmp
mov
and
xchg
pop
js
add
adc
movsb
mov
cmp
jge
arpl
jmp
pop
insl
push
inc
loop
ror
inc
add
scas
cld
mov
mov
mov
scas
sbb
adc
mov
cmpsb
jo
dec
fstpl
inc
mov
xchg
add
mov
and
pop
jns
fcompl
xchg
and
xchg
mov
aaa
outsb
shrb
adc
imul
xor
xor
loopne
adcl
inc
mov
xor
test
cmp
in
stos
ja
cs
xchg
adc
jg
mov
fidivl
jecxz
inc
adcl
cmp
jae
jecxz
jns
xor
mov
fs
fcompl
or
lods
jne
lret
test
lock
inc
fnstenv
mov
icebp
mov
cs
inc
jmp
cmp
aad
loope
movsb
adc
xor
push
enter
add
mov
xor
movsb
xchg
pop
aam
and
stc
dec
rcll
sub
fmul
mov
mov
fstpt
add
lods
daa
sbb
sub
dec
sbb
xchg
pop
cmp
call
adc
lock
mov
enter
jnp
dec
movsl
dec
adc
rolb
fisubrl
int3
add
inc
push
mov
ror
pop
pop
jmp
mov
inc
mov
cli
les
add
in
push
push
int
jae
lods
xchg
add
les
jmp
mov
cmp
sahf
jns
ljmp
loop
dec
into
push
in
cmpsl
lret
sub
mov
pop
aas
sub
stc
in
mov
daa
or
in
add
push
cmpsb
or
cmpsl
xor
lahf
popa
inc
addr16
std
shrl
adc
push
dec
xchg
les
adc
or
dec
or
push
dec
and
mov
sbb
add
push
mov
mov
sbb
add
inc
add
fcoms
test
cli
jle
dec
fsubrl
adc
fnstcw
addr16
pusha
adc
mov
ja
ss
mov
gs
int
outsl
inc
mov
js
pop
jae
or
pushf
arpl
jb
mov
add
imul
imul
nop
sbb
jne
mov
leave
mov
push
iret
mov
mov
test
pop
jle
shrl
adc
or
fs
xchg
in
xchg
xor
in
and
adc
je
add
jge
mov
sub
test
and
shrb
mov
or
ret
pop
cmp
adc
sub
push
rcrb
xchg
sbb
fiaddl
in
repz
mov
test
fs
loop
nop
lds
inc
jle
sub
fucom
push
dec
cmpl
mov
mov
add
sbb
ret
add
aad
loope
or
pop
or
movsl
test
and
sub
add
loop
mov
mov
lahf
mov
sub
lock
stc
movsb
xchg
adc
lcall
call
sub
xlat
popf
cltd
fmul
pop
movsb
pop
bound
pop
adc
stos
loop
mov
ror
jecxz
inc
dec
testb
inc
addr16
hlt
shlb
pusha
in
fimuls
mov
jo
imul
stc
sub
insl
in
jg
xor
stos
pop
pop
inc
mov
lds
popf
cmp
adc
sub
push
imul
pop
jno
mov
inc
mov
add
mov
shl
loopne
mov
idivl
cmp
jecxz
cwtl
push
sub
gs
pop
hlt
mov
mov
pusha
add
adc
push
adc
inc
data16
lret
jae
mov
and
pushf
jne
xor
xor
in
fimull
pop
outsb
iret
push
xchg
xlat
cmp
rolb
xchg
jb
aaa
push
cs
adc
push
inc
bound
fwait
cld
bound
fwait
xor
jg
cmp
lock
adc
mov
push
mov
addb
bound
inc
sti
hlt
inc
push
xor
aas
outsl
stc
inc
and
lods
pop
stos
out
or
dec
jg
pusha
mov
mov
and
sub
dec
mov
pop
loope
push
mov
aas
sub
sbb
dec
add
stos
or
or
cs
jmp
jecxz
cmp
pop
pop
das
jo
xchg
sbb
push
or
push
or
lahf
jl
mov
sub
cmpsl
fwait
push
jecxz
lea
sbb
push
pop
jno
cmp
mov
mul
jno
popf
test
out
mov
mov
mov
popf
push
stc
push
call
push
adc
add
clc
add
imul
or
push
frstor
add
mov
leave
xlat
adc
cmp
enter
shlb
push
cld
aas
stos
jl
sub
jl
insb
lret
cltd
and
jp
repz
enter
jecxz
cmp
mov
pop
mov
sub
cli
mov
push
push
dec
movsb
xchg
popf
sbb
xchg
xchg
daa
mov
sbb
inc
popl
adc
lods
je
xor
in
dec
lock
iret
xchg
or
cmpl
jb
je
pop
in
inc
cltd
mov
int
mov
jb
loop,pn
jno
outsl
loope
push
aas
pop
daa
xchg
std
bound
pop
and
lods
adc
lret
addb
dec
loopne
in
pop
pushf
mov
shll
dec
cmp
cmp
xchg
jge
push
lods
out
and
sub
test
lcall
xor
rcl
lahf
mov
jo
or
lea
mov
pop
sti
bound
and
into
jl
mov
mov
imul
aam
out
jo
out
sti
cwtl
mov
push
rorl
pushl
sub
and
fstp
ljmp
int
sti
dec
aad
lret
inc
gs
cmpsb
dec
in
mov
dec
ds
pusha
xchg
inc
enter
mov
mov
inc
mov
jle
fs
andl
xor
test
repnz
cmp
dec
push
rcll
adc
stc
lcall
cmp
out
mov
out
jmp
cmp
inc
fbstp
mov
clc
cwtl
fisttps
clc
push
jl
mov
xchg
jmp
pusha
cmp
jp
xorl
orl
mov
jnp
cli
mov
add
sahf
pop
adc
and
or
sub
ret
test
add
aas
and
loop
arpl
shrl
test
xchg
adc
fs
adc
dec
mov
pusha
outsl
mul
lret
pop
test
loope
cmp
enter
cmpsl
int
mov
je
mov
or
insb
int3
inc
sub
and
shll
out
jle
loopne
push
mov
faddl
xor
rorb
mov
in
push
or
and
push
cmp
mov
fadds
js
movsb
es
add
push
stos
and
stc
aaa
call
je
out
loop
fnsave
or
xor
jmp
and
cmovbe
adc
or
mov
push
push
mov
addr16
imul
pop
push
lods
xor
push
mov
pop
je
pop
fs
out
rcrl
mov
mov
cmp
clc
lret
fnsave
orb
addr16
pop
imul
pop
adc
pusha
ficomps
sub
sbbl
cmp
adc
mov
orb
imul
aas
pushf
cmp
push
adc
ret
dec
cmpsl
jl
sbb
pop
sbb
cld
xor
loopne
shrb
mov
js
xor
int3
in
loopne
cmp
add
push
jle
fwait
inc
xor
jbe
jge
cmp
out
mov
or
sbb
fwait
mov
daa
mov
mov
sub
adc
sbb
aas
jl
inc
jmp
in
rclb
dec
cmp
cmp
jecxz
lods
ret
les
psrad
sbb
xor
inc
sub
inc
jle
mov
fnstenv
lret
ds
xchg
mov
mov
jp
mov
inc
ret
les
xor
lret
xlat
lret
xor
or
xchg
in
mov
gs
inc
je
cmp
outsb
jmp
cld
sub
dec
nop
xlat
sub
mov
mov
outsb
adc
insb
push
and
rol
add
cwtl
ja
and
addr16
inc
jno
xlat
push
mov
adc
or
mov
int3
stos
decl
sbb
fwait
repz
addl
mov
js
out
mov
push
xchg
sarl
in
sub
mov
ret
inc
jmp
mov
pop
mov
jle
stos
push
or
sub
xor
pop
and
sbb
scas
dec
and
fists
and
sarb
pop
xchg
mov
pop
loopne
shlb
mov
pushl
cmpsl
leave
out
out
clc
popf
and
loopne
ss
insb
ret
pop
xchg
into
sti
push
add
mov
sub
aad
ret
pop
mov
arpl
push
nop
push
pop
loopne
cmpsl
ret
mov
xor
and
mov
fiaddl
inc
rorl
mov
mov
mov
and
jmp
mov
test
cmp
hlt
cmove
int
fsubrs
loope
sub
les
sti
rcll
pop
mov
movsb
pop
in
lahf
bound
dec
push
dec
bound
clc
xor
fistpl
je
jl
inc
jbe
pop
and
int
cmpsl
mull
sub
mov
adcb
insb
jge,pt
mulb
mov
and
pop
iret
mov
add
inc
mov
mov
inc
lods
push
mull
mov
mov
add
pushf
adc
arpl
bsr
mov
test
cs
and
inc
pop
mov
dec
and
hlt
arpl
test
pop
insb
inc
das
sbb
mov
clc
test
pop
cmp
movsb
mov
push
out
mov
aas
aam
jns
pop
jae
mov
sbb
and
xchg
inc
lret
das
aam
push
fstps
pop
xchg
mov
mov
test
or
fxch
mov
cmpsb
push
les
mov
pop
mov
jbe
xchg
or
mov
mov
push
push
xor
sarl
aas
mov
and
sbbl
sti
ss
mov
xor
mov
das
ficompl
push
add
mov
dec
stos
addr16
imul
xchg
pop
lret
push
mov
push
cmp
scas
adc
jmp
fisubs
pop
adc
add
icebp
jmp
enter
xchg
mov
push
lods
repz
out
nop
sub
push
jge
sub
push
rep
cli
cmp
loope
dec
jmp
fld
jno
popa
cmp
push
mov
popa
das
rclb
ficomps
jnp
inc
add
mov
cld
cmp
or
and
je
insl
div
adc
stc
adc
and
scas
push
iret
cmp
dec
cltd
pop
les
mov
jo
cltd
test
sbb
js
xchg
inc
or
xchg
and
mov
int
cwtl
js
outsl
es
scas
pop
inc
shrl
push
addr16
mov
pop
mov
or
lock
jnp
rcrl
dec
fnstcw
cmp
sub
pusha
out
or
cmp
in
sarb
xchg
outsb
bound
sub
cmpxchg
les
adc
into
push
jg
cli
lret
je
mov
mov
leave
inc
fcomp
inc
xor
or
xchg
mov
and
inc
push
fiaddl
mov
icebp
mov
pop
mov
pop
fidivl
inc
nop
add
xchg
inc
xchg
jle
cmp
adc
adc
mov
jmp
insl
fcmovne
push
and
sub
dec
cld
push
or
in
and
or
cmp
push
pusha
mov
fisttps
xlat
jns
mov
ds
test
jae
repnz
adcb
ljmp
movsl
sbb
cld
out
insl
mov
mov
jo
aas
repnz
jp
enter
push
in
aaa
sbb
and
mov
cmp
push
dec
dec
ret
add
mov
pop
mov
leave
gs
insb
push
in
aaa
mov
dec
or
call
pop
xorb
or
loope
xlat
ror
xchg
insl
insb
lods
jns
es
cwtl
pop
jmp
bound
in
int
pop
jnp
inc
xor
addr16
in
inc
sbb
jns
ror
mov
pop
cmpsl
std
cmp
aam
iret
xchg
jo
sti
outsl
pushf
sbb
dec
sbb
ret
push
mov
movsb
and
stos
mov
jns
std
pop
fcoml
les
dec
and
add
fcom
jns
nop
fdivs
xchg
xor
mov
and
jmp
xor
cmpsb
ret
or
push
and
in
fcomi
stc
movl
gs
add
mov
adc
xchg
fsubrs
inc
and
cmp
arpl
pusha
xchg
mov
stos
adc
mov
dec
in
bound
neg
je
daa
nop
sbb
jg
pop
cld
out
fistpll
xchg
dec
ret
data16
cs
jo
add
shrb
or
pop
out
leave
out
mov
mov
es
out
sbb
xlat
adc
aaa
dec
cmp
cld
rcrl
test
jno
stc
pop
add
pop
xchg
inc
lods
cmp
xchg
neg
pop
ret
fwait
sub
icebp
cmp
xor
sub
cmp
xor
cmpsl
mov
sub
enter
pop
int3
dec
and
mov
inc
mov
mov
jg
jmp
hlt
movsb
cmpsl
orb
call
imul
les
push
iret
gs
cmp
popa
rcll
cmp
popf
mov
xor
outsb
and
mov
cs
aad
js
movsl
aaa
mov
movsl
dec
adc
dec
adcb
sti
dec
pop
stos
mov
cmp
mov
out
push
cmp
adc
jae
xchg
or
inc
clc
gs
xchg
jmp
call
cmp
imulb
scas
xlat
adc
insl
sub
mov
mul
fsubrp
clc
push
and
add
imul
lret
inc
cmpsl
ja
jo
push
int3
push
movsl
clc
inc
repnz
cmp
mov
xcrypt-ecb
cmpsl
mov
mov
addr16
sahf
addl
sbb
test
xor
push
push
inc
cmpsl
int3
lcall
mov
push
add
ss
in
pop
cmp
and
mov
jl
push
mov
call
sti
xor
sbb
fcom
out
xchg
inc
in
mov
movsl
nop
cld
mov
dec
aaa
push
decl
fidivs
and
pop
out
dec
je
lds
lahf
pusha
fldl2t
dec
sti
in
popa
sbb
cmp
pop
cmpl
movsb
sbb
fsubl
out
imul
push
lds
dec
jle
and
lret
andb
xchg
lds
mov
ret
dec
cmp
movnti
lods
add
rclb
cmpsl
add
sti
into
jae
jae
je
add
dec
push
xlat
dec
adc
lds
mov
stos
push
push
insl
insl
sub
xor
cmp
add
jecxz
out
lock
lock
pop
jne
icebp
jge
adc
movl
ror
into
or
dec
hlt
and
and
faddl
fsubrs
lds
sub
xchg
cltd
or
das
xchg
fstpt
adc
fdiv
push
inc
push
mov
nop
push
cmp
iret
popf
jl
cli
insb
fisubs
jecxz
and
inc
dec
push
push
or
hlt
fidivl
jns
fidivrs
lods
cmp
ja
lret
scas
popa
dec
ficoms
fidivrs
stos
sbb
repnz
xchg
outsl
sbb
lcall
or
ret
adc
fldcw
call
push
out
pop
inc
mov
pusha
pop
mov
xchg
cmp
mov
add
add
fists
mov
push
vpaddsw
rcr
bound
insl
dec
loop
pop
mov
enter
pop
dec
mov
jp
movhps
push
int
in
sarb
cmp
add
inc
pop
sahf
fisttpll
push
push
mov
jle
rolb
add
inc
push
loope
sub
cld
xor
mov
pop
scas
test
xchg
cmp
movsb
pop
mov
lea
sbb
adc
jle
xchg
std
lcall
inc
dec
aas
sar
dec
jg
add
or
orl
mov
adc
imul
lea
mov
dec
or
mul
cmpsb
nop
mov
rclb
dec
xor
jl
movsl
lods
jle
xlat
data16
mov
lds
push
rcl
shll
loop
xchg
add
fwait
pop
popf
add
dec
flds
movsb
cld
clc
pop
or
js
into
pop
cmp
imul
or
jg
rcr
inc
adc
stos
push
into
jne
pop
adc
jp
nop
cs
sub
xor
xor
push
addr16
in
add
scas
addr16
xchg
push
inc
pusha
cwtl
loopne
psubb
mov
jle
inc
and
pop
or
jl
fidivl
xchg
mov
enter
scas
or
loopne
sub
test
mov
repz
sub
sbb
pop
xor
pop
js
push
outsb
stc
js
jns
jnp
test
stos
mov
idivl
imul
add
and
cmpsl
enter
mov
mov
mov
sbb
ror
je
pop
sbb
popf
mov
js
push
js
or
adc
cmp
lds
fstpl
add
in
sbb
xchg
and
pop
ds
fldenv
push
aad
shl
loop
dec
loop,pn
push
cmpsl
inc
inc
setne
cmc
bound
sub
mov
aad
rcrl
decl
pop
insb
jle
pop
in
xchg
mov
shll
out
add
xor
ret
ret
cmpsb
dec
loop
aas
jne
test
int3
xchg
cmpsl
call
sub
in
and
mov
shll
call
test
les
pop
mov
push
push
stos
lcall
xchg
stc
or
mov
lea
add
aaa
seto
stos
xchg
jmp
inc
xchg
in
repz
inc
pop
enter
call
inc
fdivp
sub
frstor
sub
push
push
in
xchg
loop
adc
sub
inc
insb
aas
repz
sarl
test
sbb
adc
adc
or
into
mov
or
data16
iret
es
push
jge
mov
mov
bound
xchg
pop
xorb
push
lds
pop
shr
std
cmp
js
pop
push
lret
pop
cmp
int3
sbb
xor
arpl
jle
scas
inc
inc
add
movl
mov
addr16
mov
jecxz
mov
sub
or
insb
je
jg
insl
popa
in
cmc
push
shll
adc
ficoml
sub
rcll
push
cmpsl
pop
dec
xor
ficomps
adc
cmpsb
jecxz
mov
scas
mov
iret
out
or
btsl
fldl
arpl
fsubrp
push
mov
cmp
cmp
push
add
aad
stos
clc
push
iret
and
pop
cmp
inc
dec
jl
iret
insb
inc
shlb
insl
lahf
stos
testb
call
fwait
shrb
dec
cmp
or
imul
sub
fs
or
xor
xor
push
sbb
xchg
cmp
lcall
lea
inc
es
sub
gs
or
jg
and
test
dec
adcl
pop
sub
adc
sbb
cmp
sub
bsf
mov
fwait
xor
or
clc
pop
movsb
mov
rclb
xchg
shl
ds
mov
sub
pushf
pop
clc
or
sub
inc
clc
xchg
mov
dec
xchg
push
jecxz
lods
ret
add
mov
xchg
jle
jo
jmp
loopne
dec
iret
addr16
lock
ds
jne
lock
adc
aas
scas
add
sub
hlt
leave
dec
cmp
mov
cs
cmp
dec
xor
mov
aaa
int
movsl
dec
mov
adc
dec
btr
sub
add
ljmp
xchg
sub
aas
xor
inc
fcmovnbe
ds
inc
mov
mov
daa
push
lcall
cs
int
mov
sub
xor
add
aad
jnp
cmc
orl
jo
cmp
xchg
push
or
je
and
int
les
js
xchg
cs
xchg
lcall
ret
arpl
out
jnp
loop
addr16
cwtl
xchg
and
mov
inc
test
imulb
shrb
xlat
scas
into
mov
test
mov
inc
mov
mov
mov
subb
addr16
add
movsl
mov
or
enter
xchg
pop
arpl
pop
lret
cmp
out
addb
xchg
imul
ret
or
adc
fisubs
leave
movsl
xchg
jle
xchg
mov
daa
add
sub
fisubrs
pop
in
mov
loopne
xor
scas
shrl
jmp
mov
mov
arpl
or
arpl
sub
cwtl
sbb
loopne
sbb
das
sbb
bound
lret
test
or
dec
jmp
js
into
pop
stos
in
push
arpl
mov
jecxz
xchg
adc
inc
pop
push
ret
outsb
mov
enter
leave
sub
sbbb
inc
mov
fldcw
mov
aas
nop
sti
and
mov
test
mov
loop
loopne
popa
push
sub
mov
sub
aam
dec
sbb
call
jg
dec
repnz
pushf
fs
dec
push
jp
mov
stos
push
jge
or
insb
cmp
push
stc
mov
or
addr16
xor
ss
repz
rorb
push
add
mov
mov
push
rcrl
cwtl
inc
stos
pop
sahf
icebp
jb
xchg
mov
mov
loop
mov
movsb
cmp
adc
cmp
adc
cmp
xor
jl
loope
jns
cmc
rcrb
cmpsb
lods
mov
aas
cs
popa
sti
aas
sbb
insb
lret
mov
adc
in
xlat
incl
hlt
inc
lret
shrl
test
mov
dec
ljmp
mov
fdivrl
mov
add
push
fcmovbe
pop
or
push
dec
mov
imul
shll
dec
pop
inc
imul
in
xlat
pop
lods
mov
in
sahf
cld
imul
in
aad
dec
add
and
insb
inc
sub
pop
mov
outsl
fistps
into
pushf
ljmp
adc
add
sbb
test
int3
rcrl
mov
mov
adc
cmc
call
fistpl
sbb
inc
or
push
aam
push
jmp
sbb
sti
into
add
mov
xchg
or
outsl
cmp
pop
add
push
jne
in
jnp
popa
cmp
fabs
jmp
repz
test
add
add
inc
fcomps
push
cmp
iret
incl
fwait
loope
sbb
cmpsb
inc
mov
lods
push
sbb
jmp
xchg
pop
ret
sti
jns
jle
popf
dec
test
repnz
add
dec
lahf
jecxz
pop
mov
lret
scas
jnp
aas
cmpb
ret
data16
aad
pusha
inc
mov
sub
sub
outsb
test
mov
and
incb
xchg
cmp
cmp
jo
aad
test
inc
mov
push
add
pop
mov
cli
sub
loope
xchg
inc
test
adc
nop
xor
mov
pop
mov
or
daa
or
imul
push
or
mov
outsl
pushw
or
push
dec
stc
mov
push
xor
test
xor
int
pop
push
gs
sarl
pusha
mov
sub
lods
cmpsl
inc
popf
jl
sbb
ret
dec
lret
push
pop
jl
movsb
leave
cltd
mov
push
lret
leave
xchg
jecxz
arpl
push
fldcw
ret
arpl
into
push
je
divb
sbb
pop
lds
pop
push
and
mov
jb
cmp
mov
gs
sbb
or
mov
mov
popa
in
fstps
cmpsl
push
shll
fistpll
imul
sub
lock
mov
pop
lcall
jno
es
inc
jecxz
pop
adc
add
pusha
pusha
movsl
jl
mov
pushf
xor
out
daa
or
push
std
ds
gs
lcall
ljmp
push
scas
popa
testl
sbb
sub
ja
jmp
fs
test
shr
mov
xchg
mov
xchg
xor
sti
sbb
sbb
jle
loopne
lret
ficompl
mov
adc
adc
xor
addl
push
pop
movsl
cld
rorl
and
jno
test
adc
test
jl
leave
imul
jmp
popa
push
aam
loope
inc
push
cwtl
xor
ds
repz
jg
jle
dec
adc
js
in
mov
in
gs
inc
and
shlb
testb
pop
outsl
adc
insb
test
rcrb
jmp
int
mov
rcrl
xlat
fisttps
scas
nop
or
cmp
nop
clc
adc
add
cmp
jnp
cwtl
test
inc
rorl
add
push
pop
test
adc
and
in
mov
aas
inc
mov
mov
lods
inc
pop
push
ja
loope
inc
fdivr
cmp
xor
xor
jnp
xchg
orb
aad
mov
mov
in
ret
stc
jg
mov
cmpsb
popa
bound
inc
xor
inc
adc
aam
movsb
cmp
loopne
mov
jns
jb
push
aad
outsb
lret
push
jnp
adc
jae
rorb
mov
stc
nop
popa
pop
cmp
mov
rcr
enter
imul
cld
out
lods
push
outsb
inc
rorb
ljmp
scas
mov
mov
mov
sub
and
mov
jmp
shll
sar
and
and
lret
test
xchg
add
test
fsubrs
pop
add
mov
pop
inc
mov
xchg
addr16
pop
xor
loopne
jg
mov
sbb
loope
cwtl
mov
insl
mov
insb
ds
mov
sbb
jnp
int3
andb
sahf
cmpsb
mull
cmpb
cs
mov
pop
ss
and
js
sub
jo
jmp
les
xorl
test
ret
inc
push
test
insb
jle
enter
shl
push
or
mov
bextr
or
jp
cld
repz
push
mov
jb
push
lret
cmpb
xchg
pop
test
jbe
mov
jp
fwait
ret
ja
add
push
push
les
jns
adc
mov
int3
cmp
mov
fmull
xor
add
jnp
loope
lret
jb
movb
dec
enter
jns
mov
jmp
pop
push
dec
nop
xchg
sti
in
cli
cmp
jge
mov
pusha
test
mov
and
mull
int
notl
sub
cmp
inc
arpl
and
sub
dec
mov
shrl
xlat
xchg
jmp
jmp
fucomi
cltd
add
pop
adc
ret
sbb
jmp
lds
loopne
in
xchg
mov
and
dec
jne
pop
mov
lret
int3
mov
fucomp
orb
daa
cmp
mov
jnp
adc
test
dec
lretw
xor
push
sbb
dec
enter
in
lods
clc
dec
adc
enter
loop
popf
mov
outsb
stos
sub
jnp
jnp
mov
enter
mov
inc
movsb
jl
cld
cmp
sbb
dec
ret
js
jns
sub
xchg
inc
sub
adc
movsb
out
xchg
cmpsb
push
icebp
jb
or
scas
out
xchg
or
add
arpl
mov
jge
andb
add
mov
mov
and
stos
call
pop
addr16
sub
cmp
bound
pop
mov
add
fwait
sbb
and
fs
lcall
mov
stc
mov
pop
mov
xchg
addb
aam
fstps
rcr
push
xchg
test
in
rorl
int3
jecxz
jo
push
mov
xchg
int3
fstp
into
pop
lret
inc
pop
cli
sub
mov
movsb
pop
xchg
adc
jmp
int3
sarl
xor
in
fucomp
pop
call
add
mov
pop
mov
sahf
shrb
mov
push
ja
loopne
shll
push
xor
test
cli
das
jg
int3
cld
xchg
sub
iret
or
xor
sub
jns
iret
gs
jp
cltd
icebp
inc
loop
aaa
fucomip
stos
hlt
xor
inc
fidivrs
xor
inc
andb
daa
push
mov
dec
xchg
push
jg
popa
jge
and
push
bound
shrl
mov
xchg
into
fwait
test
mov
mov
mov
mov
xchg
xor
lahf
int3
jo
or
loop
jo
sub
xchg
mov
xchg
add
or
jns
mov
pop
dec
mov
dec
int3
insl
jmp
xor
outsl
inc
test
sahf
pusha
leave
and
enter
aas
stc
shll
popa
or
adc
mov
mov
and
push
shll
fld
mov
xor
xchg
dec
push
mov
incl
enter
ds
popf
gs
sbb
jb
cmp
movsb
fnstcw
xor
dec
fsub
mov
jmp
test
shlb
xor
sub
fisttpll
mov
mov
int3
pop
lods
push
sub
outsl
ljmp
dec
sbb
mov
mov
jecxz,pn
jp
popa
daa
pop
mov
ljmp
or
dec
mov
in
sbb
enter
sbb
push
cmc
test
fisttps
mov
lret
push
fisttps
pop
inc
gs
dec
dec
sbb
shlb
call
ja
imul
mov
fbstp
loope
lods
inc
push
sub
mov
movsl
lods
mov
or
pop
in
sahf
and
rcl
cmp
dec
pop
loope
shr
xchg
mov
test
mov
cmpl
dec
dec
cmp
xor
inc
jge
mov
outsl
push
enter
loopne
and
xor
adc
test
cmc
pusha
xor
enter
mov
mov
mov
mov
and
mov
mov
xchg
lret
jl
add
pop
ds
mov
addr16
push
and
movsb
or
jmp
mov
adc
sahf
stc
xchg
enter
call
push
leave
pop
lods
push
loopne
sbb
popa
int3
add
loopne
lock
lock
cmp
add
out
xchg
and
sysret
sbb
std
test
and
sti
dec
push
xchg
ds
lret
pop
push
xchg
or
flds
xchg
cmp
jns
outsl
push
rolb
push
push
mov
adc
xor
out
icebp
enter
jbe
adc
xchg
cmc
xorb
xor
adc
lods
xor
adc
jg
and
add
sub
and
dec
dec
add
int3
mov
and
lahf
cmp
cmc
dec
insl
fidivl
adc
push
inc
popf
add
imul
add
fstpt
push
xor
lock
imul
jne
push
ficoml
push
aaa
mov
xor
int3
adc
pop
loope
imul
xchg
nop
movsb
pop
daa
imul
in
sarb
arpl
mov
icebp
mov
mov
xor
xchg
cmp
adc
sbb
pop
imull
sub
or
xor
pop
fimuls
jae
or
sbb
mov
into
in
lods
into
xchg
jp
push
ss
iret
iret
cli
cs
ja
aam
clc
scas
jne
insb
outsb
mov
jo
adc
mov
outsb
xor
fcoms
mov
xor
or
push
mov
jo
mov
jno
ret
popa
not
xchg
or
pop
cmpsb
mov
jecxz
int
call
mov
xor
or
pushf
stos
aad
cwtl
mov
stc
add
mov
sbb
push
pop
mov
or
in
mov
dec
adc
xchg
or
sbb
nop
nop
jmp
add
std
and
push
mov
into
sub
movsb
repz
scas
pop
sti
test
insl
push
call
sub
popf
sbb
shlb
xchg
imul
stc
jle
or
cld
cmp
push
test
mov
mov
test
pushf
out
pop
jae
and
cmp
cmp
leave
loopne
mov
dec
and
mov
cmp
mov
inc
negl
fs
andl
imul
or
mov
and
sub
test
clc
sbb
fcoms
popa
cmp
add
lds
out
aam
imul
mov
jb
repnz
je
jle
enter
sbb
sub
pushf
pop
mov
pop
cmp
lret
jmp
ja
inc
ffree
call
inc
push
push
lahf
loop
repz
xor
cwtl
adc
cmpsb
sub
inc
je
push
leave
adcb
pop
add
pop
cs
or
pushf
pop
aas
inc
hlt
js
or
mov
mov
cmp
cmp
sti
xchg
cs
icebp
sbb
xor
mov
in
test
pusha
cmp
xchg
lahf
stc
push
or
jae
inc
aad
add
sbb
sahf
sbb
fistpl
inc
cmp
iret
sbb
stos
rcll
cmp
mov
rorl
and
add
fxch
iret
xor
sbb
loop
jns
lds
xchg
testl
and
aas
imul
cmpsl
imul
int
fstpl
icebp
pop
fst
add
movl
cmpl
cs
xor
mov
mov
pop
sub
mov
push
xlat
sbb
sbbb
cld
shlb
shrl
mov
xchg
jmp
inc
cmpsl
add
pop
mov
sbb
out
cmp
and
push
xor
test
test
sbb
cmp
pop
dec
loopne
cmp
jmp
sbb
aad
hlt
out
or
pop
and
add
gs
cli
dec
test
mov
add
push
std
ficoms
cmp
mov
jle
xor
jnp
fwait
add
scas
sahf
adc
mov
push
test
rol
xor
ret
aas
cld
mov
stos
pop
lcall
add
daa
xchg
jmp
and
and
jl
fisubs
add
stc
mov
adcb
sahf
pop
std
inc
sbb
mov
pop
sbb
jle
pop
dec
lret
clc
and
xor
push
mov
pop
jbe
lock
test
sbbb
or
sbb
add
sarb
cmp
loope
push
push
sbb
pop
mov
xchg
sub
xor
lret
sbb
pop
mov
and
mov
jecxz
dec
cmp
fldl
test
aad
push
lock
inc
aam
sub
inc
ret
xchg
in
push
lret
lret
vorps
call
and
inc
xchg
shll
push
sub
xchg
push
daa
adc
fwait
mov
sbb
mov
pop
arpl
dec
mov
cmp
sub
sub
and
or
bound
or
ret
call
dec
mov
dec
cmpsb
inc
das
sbb
mov
aas
rorb
inc
pop
cmpsl
jnp
insb
in
movsl
es
push
cmp
dec
in
fldl
mov
xor
test
lret
cmp
dec
add
and
push
jl
dec
out
xchg
movsb
cmp
cmp
push
push
mov
fisubl
mov
or
sahf
dec
dec
int3
in
mov
inc
jnp
sarl
in
cltd
inc
shrb
cmpl
mov
and
xchg
cmp
pop
std
add
test
dec
sbb
mov
call
sbb
inc
jg
adc
jnp
mov
fcomps
adc
repz
push
fiadds
pop
mul
dec
ljmp
dec
fbstp
clc
hlt
adc
cmp
subb
add
and
dec
lret
insb
icebp
hlt
sub
repnz
sbb
imul
xor
jl
dec
mov
imul
mov
add
xor
add
jge
xchg
mov
adc
ret
dec
mov
dec
jl
in
jmp
loop
mov
adc
push
bound
shll
test
stos
mov
dec
push
xchg
mov
dec
dec
arpl
mov
into
int3
movsb
cmp
shll
mov
dec
shll
jae
sub
sub
call
and
push
jo
mov
or
insb
test
int3
dec
mov
and
dec
insb
jecxz
mov
fsubrs
mov
jle
cmp
mov
cwtl
add
and
fcoms
push
push
jbe
inc
orb
test
xor
dec
pop
js
cmpsl
push
mov
mov
mov
jg
pop
add
ret
pusha
lcall
lods
lret
mov
and
xchg
or
push
pop
dec
inc
aas
shrl
push
mov
lahf
inc
jge
imul
xchg
scas
jl
fldcw
imul
pop
pop
jbe
push
mov
and
dec
int3
or
imul
adc
movsl
test
sbb
hlt
jae
lods
jo
push
cltd
loopne
lcall
xor
cmp
sub
inc
and
lods
push
sub
scas
pop
loop
push
test
sbb
pop
jmp
movsb
outsb
add
insb
adc
popa
and
xchg
pop
pop
jge
inc
imul
enter
and
dec
andl
daa
xchg
mov
mov
cmp
push
cwtl
adc
inc
pusha
aam
cs
and
mov
mov
inc
mov
test
imul
pop
and
ss
push
mov
pop
push
pop
stc
ja
aas
fs
jmp
mul
lahf
lahf
fprem
cwtl
lock
sbb
sub
and
int
pop
sub
mov
sbb
xchg
movsb
and
or
xchg
pushf
cwtl
xchg
sbb
sub
outsb
mov
mov
sub
dec
insb
xor
cmpb
xchg
sub
orb
cld
mov
repnz
fadd
aas
mov
pop
jnp
sbb
inc
lock
test
mov
cwtl
mov
push
jnp
ss
lcall
push
adc
cmp
xor
and
insl
jecxz
sub
mov
shlb
xor
cmp
pop
lret
pop
dec
test
lds
aad
adc
pop
mov
repz
xlat
push
mov
jmp
adc
lds
in
mov
mov
cld
lahf
mov
add
out
sbb
stos
jmp
ja
pminsw
shrl
loope
leave
dec
push
xchg
pop
adc
lcall
decl
mov
andl
lds
repnz
rolb
mov
sbb
sbb
push
adc
cmp
push
mov
mov
mov
mov
loope
inc
stos
repz
pop
stos
hlt
leave
fwait
psubw
cmpsl
cltd
sbb
js
sub
ficoml
push
pop
roll
jl
sub
xor
out
inc
xlat
sbb
bound
out
pop
mov
movb
jnp
mov
push
add
out
mov
cli
push
scas
hlt
mov
into
enter
fcmovne
mov
jnp
cmp
sub
leave
adc
je
call
push
push
lret
pop
aad
push
sub
bound
cmp
push
jecxz
sub
cmc
dec
xchg
add
in
ss
negb
ja
test
mov
push
mov
rolb
pushf
into
add
dec
leave
aam
fildl
aaa
cmp
enter
push
repnz
or
xor
dec
cltd
and
cmpxchg
mov
fildl
int3
xchg
pop
pushf
jp
jp
lret
pop
bound
push
inc
rcll
fldt
xor
clc
lods
mov
dec
dec
mov
sbb
loopne
and
dec
shr
daa
in
aaa
das
addl
jb
clc
push
add
cld
jb
jp
jnp
jg
fwait
out
nop
arpl
jnp
pop
adc
mov
leave
sub
sbb
mov
push
nop
or
sub
jno
and
pop
jns
sbb
push
shll
xchg
mov
lcall
pusha
lret
cmp
add
sub
and
adc
push
push
inc
shl
aas
sub
movsl
xor
mov
dec
test
cld
les
repz
js
test
loope
rclb
sub
mov
mov
pushf
add
jbe
add
jns
cmp
in
mov
das
inc
mov
add
lahf
pop
sbb
enter
sbb
cmpb
pop
js
fstpt
repz
ret
js
cli
pop
mov
xor
sub
xor
lcall
and
adc
mov
pop
xlat
les
pop
bound
sbbl
pusha
andl
mov
test
xor
xchg
mov
insl
sub
and
pop
lcall
imul
in
icebp
inc
adc
shll
jg
push
mov
enter
lret
sbb
arpl
cmp
cmp
movsb
lret
out
aas
adc
mov
pusha
addr16
mov
pop
or
sub
add
jmp
sbb
into
hlt
insl
test
xor
shr
and
push
jns
lret
xor
and
lcall
imul
inc
lret
jg
rolb
mov
mov
aad
popa
jne
fimuls
xchg
ret
imul
repz
sti
xchg
test
lods
clc
je
leave
lahf
call
cld
imul
dec
iret
dec
loopne
dec
or
push
and
xchg
and
movsl
pop
push
mov
or
dec
and
xor
jo
and
lds
mov
scas
lret
lea
fidivl
push
cmp
ss
and
aad
cmp
sbb
daa
xchg
jbe
cmpsl
cmp
aam
sub
sbb
subl
mov
cwtl
sub
aam
jecxz
nop
mov
mov
add
jle
mov
imul
mov
ffree
int
mov
dec
push
test
pop
out
jle
lods
add
call
inc
stos
xchg
xchg
add
ret
nop
lock
shll
sar
jbe
inc
xor
adc
out
aaa
scas
loopne
int3
and
dec
add
push
pop
mov
in
jbe
loop
cmpb
bound
jle
das
jge
in
in
int3
push
gs
fs
mov
xor
push
add
out
mov
fisttps
and
and
loope
loope
das
cmp
sbb
cmc
xchg
jnp
pusha
not
pop
fmuls
clc
push
in
pop
mov
das
push
stos
enter
xchg
out
negl
ret
lahf
push
lret
sub
arpl
jmp
xor
pop
and
popf
aas
fs
adcb
jecxz
push
stos
inc
xchg
ds
jle
pop
pop
xchg
lds
inc
jno
cli
rcl
into
sub
movsb
pusha
in
add
pop
push
les
jb
lret
jl
sbb
mov
popa
insb
xchg
mov
cwtl
cmpsb
jns
iret
ret
ficompl
mov
or
fstpl
cltd
cmpsb
ret
stc
pop
movl
iret
and
or
cmp
sbbb
pushf
sub
or
sub
xchg
mov
pop
aam
sti
loop
pop
test
movsl
xchg
pop
shlb
enter
imull
nop
lock
push
xchg
or
test
push
inc
xlat
icebp
cmp
add
into
imul
xchg
sbb
ret
enter
fimull
pop
mov
scas
sti
cmp
dec
mov
push
sbb
in
mov
sahf
sub
add
insb
gs
cmp
jnp
ficomps
std
lcall
mov
into
adc
and
cmp
adc
ljmp
cmp
dec
push
jo
xchg
ret
pop
adc
pop
lds
sub
mov
sub
sbb
inc
or
inc
test
jno
mov
mov
jle
pop
add
adc
mov
inc
mov
xchg
ljmp
add
imul
cmc
and
push
add
stos
stc
or
mov
loopne
pop
aas
outsl
pop
cwtl
lahf
mov
pushf
mov
or
pushf
js
push
jne
movsb
inc
mov
orb
pop
into
cltd
repz
imul
into
add
repnz
ljmp
sti
mov
cmp
lret
adc
dec
mov
loopne
xchg
xchg
dec
psrlq
xchg
xchg
stos
add
gs
movsb
jge
or
lret
inc
insb
dec
inc
pop
clc
mov
dec
adc
jmp
lea
xor
fdivrl
xchg
push
xor
test
add
pop
add
jl,pt
mov
pop
pop
push
mov
enter
cwtl
push
sub
cmp
inc
testb
shl
dec
loope
imul
out
inc
pop
test
mov
stos
mov
sbb
dec
js
pop
pop
fdivs
dec
mov
cmp
jmp
sbb
push
cmp
rcll
dec
rolb
or
cmp
or
xor
pop
lods
dec
jbe
mov
jp
mov
jge
test
scas
lods
les
or
add
shl
push
jecxz
aad
dec
or
out
decb
pop
sarl
and
cmc
xlat
in
inc
jecxz
xchg
lods
pushf
in
push
mov
cmpsl
shlb
add
fidivrs
jno
pop
out
or
shlb
cmpb
jae
or
scas
repnz
mov
mov
dec
aas
inc
jge
push
mov
lock
inc
dec
insl
nop
pop
inc
lods
lods
scas
out
xchg
fbstp
mov
mov
ret
mov
bound
shll
jmp
sub
lret
add
cmc
push
fmul
xchg
andb
in
xor
jl
test
xlat
xchg
pop
push
sahf
xchg
shll
inc
push
enter
dec
adc
cmp
pop
sbb
das
insl
add
in
cmp
mov
iret
popa
test
inc
jae
gs
fdivr
lahf
nop
cmpsl
jae
mov
icebp
lret
dec
in
push
scas
sub
jecxz
mov
jp
pop
imul
dec
and
xor
add
jg
add
lfs
in
test
or
mov
lods
add
xchg
lret
mov
xor
cmp
and
fcmovnb
pop
inc
aas
scas
cli
mov
ja
into
sub
push
mov
push
cmp
mov
outsl
lods
leave
outsb
push
movsb
adcl
push
and
dec
and
hlt
dec
outsb
lret
mov
add
mov
cld
lret
sbb
mov
adc
adc
lods
pop
and
mov
mov
sbb
mov
lock
jge
fildl
lods
mov
jmp
inc
mov
mov
mov
mov
jg
imul
mov
or
mov
lret
inc
or
fidivs
xchg
cmp
pop
pop
dec
aas
andl
jns
adcb
and
cld
sbb
cltd
pop
push
rcl
lret
sbb
das
mov
imull
lds
in
out
scas
push
outsb
pop
icebp
cmp
jo
push
add
je
in
and
mov
or
inc
sub
mov
into
test
push
fcompl
fldcw
inc
add
fld
mov
cmp
fsubs
push
stc
out
fmuls
push
sbb
pop
cmpsb
sbb
das
fnstcw
xchg
inc
jecxz
push
pop
xchg
mov
lods
xor
hlt
inc
andl
dec
arpl
fdiv
mov
les
pop
jb
or
cli
test
sub
andb
mov
test
cmp
sbb
push
jl
ljmp
jnp
aaa
xchg
pusha
or
jb
mov
adc
inc
inc
inc
popl
add
cmp
dec
mov
aam
xchg
stos
dec
pop
stos
pop
shll
inc
sti
mov
push
pop
cmc
pop
cmpsl
fadds
rcrb
inc
nop
std
or
cmpl
inc
add
aad
push
mov
add
mov
or
data16
and
notb
push
movsb
add
push
cmp
aaa
rcl
out
inc
xchg
mov
pop
jecxz
pop
jp
inc
push
int3
in
or
in
mov
or
push
repz
sbb
filds
les
pop
insb
movsb
stos
lods
xor
push
stos
fdivl
dec
aam
jge
sarb
dec
jp
mov
adc
int3
rolb
sub
push
or
int
fnstsw
mov
test
call
movl
mov
jns
ret
scas
inc
adc
mov
xchg
mov
in
cmp
pop
adc
testb
sbb
xor
ficomps
cld
pop
sub
or
jns
and
push
dec
cmp
mov
rcrb
or
inc
jb
in
mov
mov
pop
cmpsb
push
mov
dec
jo
cmc
je
scas
imul
mov
sahf
sti
adc
ja
jle
shll
dec
mov
enter
adc
or
xchg
xor
sub
xor
dec
xchg
or
mov
repz
lods
jb
dec
shlb
pop
pop
fs
aaa
sbb
sti
lahf
mov
lock
add
dec
mov
faddp
cmp
sub
pop
rolb
jns
addr16
xor
roll
daa
cmp
cmp
xor
add
jmp
mov
dec
dec
push
in
mov
mov
std
inc
mov
sub
movsl
and
cld
or
ja
nop
pop
les
out
add
pop
paddsw
and
fnop
dec
xchg
mov
xor
and
mov
mov
inc
pop
or
pushf
imul
subb
and
fs
pop
mov
mov
cmp
add
add
mov
fldt
dec
sub
pop
dec
mov
pushf
mov
out
or
sbb
inc
ret
ror
jle
ret
ret
in
jge
mov
repz
inc
fcoml
stos
int
stos
xchg
add
sub
jp
outsb
shrl
jns
fidivrs
xor
loope
sti
pushf
es
mov
push
adc
sbb
xchg
xchg
jo
stos
xor
pop
push
rcl
rol
iret
and
aam
jnp
rol
mov
xchg
jbe
xchg
adc
test
cmp
push
push
fists
xor
lods
dec
or
imul
lret
loopne
mov
rolb
or
inc
out
fwait
push
cld
test
enter
ftst
push
inc
scas
pop
outsb
mov
cmc
arpl
xor
test
mov
das
aam
daa
inc
cmp
pop
xchg
fwait
nop
pusha
into
jne
data16
push
dec
movsb
pushf
jecxz
mov
mov
inc
push
push
mov
mov
sbb
mov
mov
push
hlt
xchg
fs
mov
pop
mov
jmp
mov
add
sahf
arpl
cmp
ret
and
mov
xor
sub
xor
movb
sahf
dec
pop
cmp
in
jno,pn
mov
push
push
lcall
jp
add
pop
aaa
rclb
dec
add
ret
in
inc
hlt
into
push
dec
test
sbb
adc
inc
and
pop
and
fwait
idivb
call
sti
sbb
faddl
lcall
clc
dec
fwait
add
sbb
inc
and
les
je
cmp
cmc
in
js
sub
mov
cmp
push
adc
push
bnd
pop
jle
outsb
jbe
mov
ficompl
dec
adc
call
jns
cmp
test
push
push
pop
outsl
inc
and
rcrl
cs
or
jmp
mov
or
jmp
push
leave
add
mov
xor
mov
add
cmpsb
mov
ficompl
sbb
leave
jns
stc
inc
test
fnstsw
adc
arpl
sti
inc
lcall
outsb
cmp
sbb
enter
mov
aam
push
inc
lds
push
sti
mov
imul
mov
pop
sahf
clc
fdivs
ds
pop
sub
sub
inc
mov
pop
xchg
fs
push
mov
scas
add
rolb
daa
adc
xor
and
out
xor
pop
mov
int3
outsb
xor
in
xchg
jne
cmpsb
sub
xchg
pop
subl
leave
dec
ljmp
inc
inc
fwait
sbb
cmpb
push
shl
xchg
inc
adc
nop
cmp
pop
xchg
mov
lahf
jle
cmp
ret
push
sbb
movsb
pop
add
jecxz
mov
mov
add
sub
xor
add
call
ret
clc
ret
jg
and
cmpsl
jbe
sbbb
mov
mov
push
xor
imull
mov
pop
jmp
test
inc
clc
pop
js
cli
xor
add
loop
js
dec
mov
mov
sbb
dec
into
into
lret
fsts
mov
mov
or
jnp
out
adc
push
add
jg
mov
push
lods
shlb
cmp
dec
pop
fadd
scas
mov
scas
cmpsb
les
rclb
enter
push
inc
outsl
pop
sti
jle
dec
add
xchg
das
jae
outsb
add
pushf
jbe
push
sbb
or
jae
movsl
out
stos
or
dec
push
add
cmp
aam
pusha
jmp
sahf
xchg
pop
adc
push
jp
ficompl
stos
xchg
dec
ljmp
ret
push
and
bound
adc
imul
ja
xchg
mov
jo
clc
fnstenv
imul
dec
push
pop
sbb
insl
sub
or
inc
pusha
inc
pop
shlb
mov
movsb
nop
int3
cmc
in
push
pop
mov
imul
sbb
lcall
mov
adc
xorb
xchg
jge
mov
cmp
stos
rcr
aam
fdivrl
enter
inc
xor
mov
cltd
repz
es
mov
xchg
jecxz
addr16
addr16
add
test
pop
fsubl
sub
adc
dec
push
inc
mov
jbe
mov
test
mov
cmp
ror
xor
loopne
lds
jae
cmpsb
cld
push
mov
pushf
mov
jmp
incl
push
jge
pop
ljmp
ror
enter
sbb
mov
xchg
enter
movsl
push
enter
jnp
mov
push
or
pop
adc
jb
das
pop
sbb
add
fistpl
jo
shrl
sbb
jns
jmp
push
out
pop
push
mov
fidivl
inc
icebp
jg
xchg
cmp
push
jg
inc
adc
scas
mov
adc
test
les
outsb
mov
imul
or
clc
pop
xor
sub
popf
sbb
lret
rolb
hlt
add
icebp
xorb
aaa
in
pop
cmp
cmp
inc
sub
leave
arpl
pop
and
pop
xor
cmc
pop
ret
seta
jo
pushf
mov
ret
nop
leave
fstpt
les
enter
cmc
loope
sub
mov
xchg
mov
lds
in
cmc
mov
mov
sbb
mov
mov
pop
jg
mov
in
jmp
ja
sub
xchg
insb
and
loope
hlt
jmp
inc
movsl
int3
ja
adc
fwait
jnp
mov
mov
stos
and
jp
inc
pop
push
nop
inc
add
popf
es
rcr
xor
xchg
fldcw
scas
mov
add
pop
push
iret
hlt
popf
stos
mov
pop
cmp
or
mov
fcomip
sbb
data16
aas
jno
add
inc
or
enter
ret
fistl
or
cmp
inc
or
into
aad
call
lods
fisubs
push
cli
sub
push
mov
imul
cmp
orb
rolb
es
vcvtudq2pd
jnp
int
rorl
dec
cmp
xchg
mov
lea
cmpsl
test
in
ljmp
mov
test
es
mov
pop
push
dec
shlb
xor
gs
repnz
insl
jl
fstpt
sbbl
push
add
prefetcht1
jle
js
cs
fists
push
nop
add
lahf
push
push
adc
cs
xor
dec
idiv
jns
outsb
xorl
bound
cmp
int3
hlt
pop
sbb
inc
jg
fnstsw
mov
jbe
mov
dec
call
or
jp
dec
lret
cld
imul
out
iret
mov
pop
cld
jle
xchg
punpckldq
adc
inc
nop
mov
xchg
xchg
test
and
cmc
adc
inc
mov
popa
cmp
scas
insl
pop
out
insb
xor
mov
jl
in
je
push
mov
cmp
mov
jl
mov
cs
dec
fisubrl
xchg
stc
push
mov
cmp
sub
in
cmc
fldcw
out
pop
pop
cld
int
cmp
jns
push
gs
dec
rclb
jp
hlt
inc
addb
pop
xor
jg
dec
jb
mov
mov
orl
xor
sarb
pop
xchg
sbb
scas
jnp
pop
fistps
mov
pop
call
jp
fldt
add
add
pop
pop
jmp
jmp
rcr
ret
gs
jge
and
and
into
mov
cmp
sbb
pop
xchg
mov
lahf
out
lds
push
xchg
add
mov
inc
mov
mov
add
hlt
jno
push
bound
sbbl
push
dec
mov
pop
push
into
cmp
bound
or
shll
dec
daa
negb
std
add
pop
rorl
sbb
cld
test
imul
xor
nop
push
int3
loope
jp
jae
adc
mov
sub
dec
jb
add
xor
cmp
jp
cmpsl
insl
cld
shl
in
cmpb
push
les
leave
cs
cmp
pop
push
je
dec
xchg
jb
cmp
add
push
xor
xchg
filds
mov
xlat
mov
cmp
add
ret
out
dec
ljmp
das
popw
cmp
leave
and
ljmp
insb
gs
gs
xchg
rcll
lcall
addr16
mov
push
enter
mov
out
shrl
add
xor
jne
cld
popa
outsb
push
pop
cli
fs
imul
int
dec
pop
adc
mov
scas
xchg
sarb
ficomps
xchg
inc
pushf
lret
dec
mov
lods
outsb
push
cmp
lods
dec
rorb
mov
adc
inc
gs
pop
jbe
sti
push
stos
cmpsl
movl
add
in
fiaddl
cmp
mov
add
cmp
lret
jmp
and
lret
in
test
pusha
sbb
mov
lods
mov
pop
stos
adc
jns
mov
das
sbb
loop
push
cmc
jmp
popf
xor
dec
sahf
cwtl
stos
aaa
xor
ss
js
cmc
xchg
lret
xor
test
loop
mov
sarb
pusha
push
lcall
sbb
pusha
pusha
pop
lret
int
out
test
jbe
subb
xor
fsubp
pop
mov
cmp
or
test
ds
pop
sahf
pop
repz
sbbl
mov
adc
xchg
xchg
cmp
pop
mov
mov
iret
filds
dec
hlt
push
pop
cmp
jb
movsl
fdivs
jno
mov
pop
xchg
sti
adc
jbe
std
jne
xor
imul
enter
sbb
push
add
mov
movsl
pop
filds
jno
sub
mov
pop
test
sub
dec
sub
and
adc
jae
mov
mov
aas
xchg
push
pop
outsl
inc
adc
gs
leave
xchg
pop
jge
inc
nop
fiaddl
aas
shl
push
pop
lahf
cmp
outsl
dec
jae
sub
pop
sub
mov
pop
cmc
jnp
int
fdiv
add
cmc
movb
lds
sti
or
sub
fistps
push
sub
pop
add
pop
add
dec
stos
fisubrs
jbe
dec
jge
mov
push
sbb
xchg
leave
sbb
xchg
hlt
inc
fldt
jp
cmp
std
rorb
cli
cmp
mov
test
insl
dec
inc
popa
iret
testl
jnp
adc
fs
sub
ret
stos
pop
inc
pop
lret
fldt
cmpb
dec
xchg
pop
fcompl
in
movsb
jo
sub
xchg
pusha
roll
mov
and
inc
cmp
or
mov
mov
fs
or
pop
add
jne
into
ficoms
jnp
mov
test
push
push
scas
das
sub
call
enter
popa
or
push
out
mov
pop
ret
mov
and
xchg
xorb
push
adc
push
in
int
inc
int
jg
in
inc
mov
cmp
cmc
in
add
gs
dec
and
stos
lcall
xor
lahf
adc
push
shl
jg
subb
int3
dec
lock
inc
xor
testl
mov
roll
adc
cld
lret
push
int3
add
mov
lods
mov
mov
or
fsts
push
inc
imul
cmovo
sbb
sti
loope
shr
inc
sbb
pop
rcll
fistl
into
inc
inc
movsl
fdivrl
leave
sahf
cmpsl
test
cltd
cwtl
enter
and
loop
fidivs
push
pop
sbb
cmc
lret
fs
shr
pop
cmc
ret
sti
xchg
dec
or
pushf
cltd
movsb
outsl
int
mov
fidivrl
xlat
sub
pop
jae
scas
dec
mov
cmp
lret
push
xor
xchg
or
xchg
jl
xor
in
shl
mov
mov
shll
adc
mov
cmp
mov
xor
insb
sub
mov
mov
imul
cmp
cmp
push
fbstp
repz
cmp
push
repnz
loopne
int
rorl
lret
jp
dec
xor
inc
int
mov
jp
push
xchg
mov
pop
xchg
sub
ljmp
adc
and
mov
lret
cmp
xor
pushf
and
out
push
push
push
jmp
test
pop
or
aaa
xor
push
push
push
dec
push
not
add
insb
adc
pop
add
add
outsb
arpl
mov
dec
adc
dec
or
mov
sbb
sub
adc
xor
adc
sbb
push
jnp
das
leave
push
mov
or
add
jnp
iret
testl
lret
mov
in
je
test
sub
aam
test
mov
add
in
data16
scas
aaa
cmp
loop
mov
aaa
mov
mov
and
sbbl
pop
push
stos
orb
int3
sti
xlat
push
mov
test
push
and
mov
shrl
pop
mov
lock
and
sub
loop
popa
pop
and
mov
sub
mov
je
add
and
jnp
mov
imul
mov
ds
mov
xchg
mov
andl
mov
cltd
push
jl
jno
dec
inc
pop
jge
adc
sub
leave
jmp
pop
loop
int
mov
mov
leave
inc
mov
xor
mov
scas
adcb
inc
aas
xor
mov
pop
les
loop
and
lock
cs
pop
fisttpl
push
rorb
dec
les
xor
pop
iret
dec
iret
push
icebp
cmpsl
cmpb
jae
push
cmp
dec
or
aam
xchg
fnstenv
add
movsl
sub
jl
nop
add
in
push
mov
fs
cli
or
pop
cmp
xchg
add
std
cltd
es
test
arpl
scas
or
es
mov
mov
pop
cmp
cld
lret
cmp
scas
xor
ds
push
nop
mov
mov
arpl
jnp
pusha
mov
pusha
and
lahf
in
aam
jle
aam
shrb
pop
jmp
inc
mov
popf
inc
popa
aas
repz
inc
aaa
psrld
aad
cld
push
into
fwait
add
das
or
push
clc
cmp
sbb
outsb
out
jns
xchg
mov
dec
les
loopne
cmp
rorb
cmp
inc
adc
ficoml
ja
jb
jne
xchg
mov
xor
add
mov
pop
sbb
in
sbb
sub
and
fwait
stc
push
popf
aam
mov
mov
icebp
jae
ljmp
pop
mov
mov
inc
sub
fwait
push
xchg
mov
lds
fcoms
cli
adc
ret
jecxz
cmp
cmc
aad
rol
jbe
add
and
push
xor
mov
ret
fs
xchg
inc
or
imul
jae
mov
xchg
mov
xor
push
hlt
es
gs
lcall
fistl
popf
push
xchg
out
push
nop
cmp
or
add
cmp
pop
ret
shrb
rorl
stos
roll
sbb
sbb
or
mov
xchg
push
pop
jb
mov
add
cmp
push
ss
hlt
lds
or
test
imul
mov
jle
and
inc
cmp
ds
out
pop
or
mov
pushf
fmuls
mov
mov
ret
divb
fistps
jns
div
push
add
cltd
xor
test
js
jb
ljmp
test
out
push
movsl
mov
ljmp
or
cmpsl
inc
mov
dec
fcompl
dec
mov
nop
xor
xlat
push
sti
ret
enter
lret
xchg
pop
inc
xlat
rcll
push
push
pop
ss
lret
shlb
adc
mov
lods
je
jnp
jp
push
sbbl
aad
ja
mov
fcoml
pop
popf
xor
mov
das
push
sbb
mov
mov
dec
orl
lcall
lret
negb
test
jg
sbb
sub
je
xor
inc
sbb
inc
int
out
orb
jp
dec
inc
adc
pop
roll
xor
hlt
in
sarb
cld
cmpl
mov
mov
add
ret
add
fcomp
mov
sahf
inc
shll
sbb
jecxz
or
mov
into
or
dec
adc
lret
mov
and
jb
pop
icebp
inc
sbb
add
pop
shl
repz
add
cmp
cltd
rorl
add
fmull
inc
sbb
sub
sar
pop
pop
sub
je
pop
movsb
movsb
dec
xchg
xchg
inc
dec
stc
jns
lock
ret
ss
sbb
stc
fistl
dec
jb
add
ds
cmp
cmpsl
lock
test
inc
ret
loopne
test
jns
push
shl
xor
ja
fists
sbb
xorb
in
push
add
cmp
loop
jnp
mov
or
out
hlt
xchg
iret
das
ds
mov
cmpsl
pushf
lock
sbb
rcl
pop
cmpsl
xor
mov
jo
and
dec
lret
scas
pop
adc
pop
imul
rolb
jmp
rol
call
out
mov
test
mov
mov
in
fmull
jmp
sbb
int3
arpl
jp
xor
sti
je
mov
lea
push
xchg
sub
cmpsl
cmpsb
test
xor
jl
pop
ss
jns
loopne
ret
sbb
icebp
ficompl
mov
sbb
mov
jl
mov
cwtl
jge
inc
fldcw
push
pop
pop
shll
pushl
shll
mov
xchg
add
xchg
pop
test
lea
cmc
addr16
outsb
loop
xchg
xorb
ss
push
xchg
add
hlt
jp
xor
push
inc
push
aad
jp
mov
leave
sub
and
dec
xchg
mov
loopne
add
pop
jne
popf
mov
or
jmp
sti
das
js
xor
push
cwtl
xor
bound
sbb
negl
inc
testl
fldcw
dec
pop
icebp
out
dec
in
push
mov
fldl2t
imul
cmp
mov
sarl
subl
mov
pop
sub
pop
test
clc
jo
dec
insb
in
sbb
mov
arpl
adc
dec
in
pop
pushf
mov
imul
jb
xchg
jae
std
dec
test
or
mov
xor
leave
lea
dec
jp
fidivl
cmpb
arpl
push
aas
or
nop
xrelease
pop
or
pop
iret
cmp
adc
cmpsb
rcll
cmp
sahf
xor
sub
sub
cltd
int
test
scas
push
push
pop
xlat
test
daa
fldl2e
xor
fdivrl
or
imul
xor
lret
jo
jmp
jbe
adc
aam
sub
jns
cli
cwtl
ret
mov
sbb
push
dec
cli
mov
popf
sbb
fwait
test
cltd
outsb
pop
leave
or
add
and
pop
ret
enter
ja
mov
or
or
cmp
sti
mov
xor
add
in
xchg
pop
out
ret
jg
or
cmpsl
out
inc
sub
adc
mov
cmpsb
arpl
mov
push
or
adc
and
sbb
icebp
leave
test
pop
ret
add
hlt
je
loopne
mov
dec
or
je
push
insl
mov
dec
rorl
mov
adc
je
dec
pop
dec
stos
ljmp
adc
cmc
cmp
test
movsl
or
sbb
cwtl
clc
insb
add
jne
int3
jp
cmp
rcrb
ljmp
mov
adc
mov
fmull
loope
inc
and
push
push
dec
rcl
dec
xchg
dec
sub
cwtl
push
inc
sub
lea
std
jle
fdivp
daa
mov
shll
aam
adc
dec
push
mov
xor
jae
in
mull
adcl
dec
ret
cmpsl
pop
or
inc
dec
dec
inc
push
xchg
enter
loop
jno
insl
test
test
pop
mov
outsl
push
movsl
enter
mov
out
data16
push
scas
add
or
shl
xor
jb
addr16
pop
and
pusha
ror
aas
loope
dec
nop
hlt
inc
test
jno
iret
cltd
ds
mov
add
dec
add
or
jg
jno
mov
sti
add
mov
inc
push
xor
and
js
adc
mov
push
sbb
or
xchg
inc
cmp
mov
lods
inc
mov
sub
in
and
in
dec
fcmovnu
xchg
leave
fmull
gs
popl
xchg
xor
mov
push
call
push
fnstcw
out
mov
imul
xchg
orl
pusha
cmpsb
xchg
dec
sar
dec
testb
ja
mov
test
or
dec
xlat
cmp
lcall
cld
or
mov
lods
or
in
adc
pushf
jnp
mov
movsb
movsb
mov
dec
pop
jecxz
pop
inc
outsb
jp
lock
call
and
fwait
dec
push
ret
xchg
add
or
test
xor
fisubl
mov
mov
or
testb
test
test
ljmp
lcall
push
or
loope
cli
push
dec
stos
loop
sbb
das
add
sub
repnz
mov
mov
jo
roll
pop
pop
mov
dec
push
pop
jg
xchg
cmp
push
insb
iret
scas
shll
out
pop
xchg
jmp
sub
add
and
popa
cmp
imul
pop
adc
push
movl
xchg
add
enter
stos
xor
xor
mov
sub
movsl
sbb
cld
push
ljmp
xor
jno
dec
jg
and
test
cmpsb
mov
mov
insl
test
sub
push
fists
and
int3
or
dec
dec
lods
int
mov
ds
outsl
cwtl
dec
mov
jae
adc
mov
lock
xchg
sarl
addr16
inc
cli
ss
xor
lods
dec
cmp
in
mov
xchg
inc
arpl
push
int
addl
push
or
inc
inc
movswl
ror
xor
xchg
jae
pop
fs
in
and
ret
mov
mov
addl
imul
mov
dec
test
jo
jne
jo
lods
scas
stc
jecxz
mov
push
sub
mov
aad
scas
add
mov
pop
cmp
cs
push
lods
adc
inc
es
rcll
mov
adc
div
inc
cwtl
sbb
mov
in
cs
xchg
jno
cs
pop
add
dec
add
add
les
dec
mov
stc
mov
test
push
daa
mov
or
sbb
enter
xor
cmc
mov
xchg
test
sub
add
dec
jecxz
mov
xor
xchg
ja
ret
nop
cwtl
scas
and
sub
shlb
pop
enter
div
xchg
cwtl
xor
test
and
fdivrp
sarl
mov
test
sub
mov
or
lret
loop
pushf
stc
and
add
or
rcll
sbb
jnp
lods
xor
pop
mov
mull
or
pop
imul
or
movsl
mov
lret
int3
or
dec
cmp
cmpsl
cmpsl
addr16
or
push
mov
xchg
shll
push
and
cmp
daa
mov
ficoms
xchg
jno
add
sbb
sbb
stos
add
shrl
pop
mov
mov
and
imul
sub
imul
es
inc
mov
add
arpl
ljmp
jp
fimull
sahf
cmpl
jle
gs
inc
ret
push
loop
in
sub
mov
dec
ret
loop
fistl
cmp
push
outsl
mov
pushf
fisubl
xchg
ret
adc
add
daa
or
add
lret
pop
or
pop
lock
mov
and
pop
iret
sbb
add
push
sbb
mov
fdivl
pop
imul
sub
inc
mov
sub
jecxz
sahf
mov
inc
mov
mov
lock
fabs
insl
jle
push
imul
sarb
and
aaa
or
mov
mov
cmp
push
mov
insl
mov
xor
rcrb
add
sub
mov
pop
mov
sbb
and
mov
jne
mov
xchg
sub
sub
lret
mov
cwtl
hlt
in
push
pop
sti
sbb
dec
shrb
push
test
push
mov
or
jl
or
pop
les
push
push
sub
les
push
jmp
test
test
les
cmp
jecxz
mov
mov
call
les
leave
sbbl
sahf
and
sbb
mov
cltd
or
sbb
mov
inc
inc
iret
inc
mov
jg
or
pop
jg
ret
and
cmp
jle
xlat
enter
mov
imul
xchg
test
jns
fists
cmp
outsb
jnp
jae
and
or
dec
clc
cmp
sbb
das
xor
sbb
aaa
loop
inc
adc
not
or
cmpb
mov
in
std
fidivl
clc
mov
gs
aam
sub
xchg
ret
add
mov
mov
push
sub
in
push
imul
cltd
pop
add
loop
xchg
call
jmp
leave
jb
cmpb
sub
enter
int3
or
pop
push
std
and
fldt
cwtl
fnstenv
ja
adc
cld
add
mov
in
xor
xchg
jge
fsubrs
nop
push
mov
in
jo
orb
mov
popl
add
fwait
sahf
movsb
inc
mov
push
call
xchg
stc
adc
hlt
pop
adc
and
cmp
mov
test
shl
rorl
outsl
cwtl
pop
daa
sub
loop
and
outsl
aad
cwtl
sub
clc
lds
lock
inc
jmp
and
pop
sub
push
into
jns
and
mov
mov
bnd
enter
mov
mov
imul
mov
test
lcall
xor
mov
pushf
dec
sub
pop
sub
rorb
mov
dec
andb
mov
sarl
cmpsb
adc
or
into
loop
jne
nop
cmpsl
popf
lahf
popa
dec
push
in
fldt
mov
hlt
push
mov
sbb
push
cmp
mov
bound
inc
cwtl
adcl
insl
push
cmpsl
pop
pusha
xor
mov
adc
cmp
in
in
das
mov
push
inc
andl
pushf
cmp
sbb
aad
sbb
or
movsl
ret
cmp
jecxz
lods
bound
lret
and
xchg
mov
dec
rol
imul
sub
aad
or
mov
fstpl
je
addl
mov
lods
and
dec
xchg
shlb
nop
aas
push
inc
mov
nop
jnp
shlb
ss
ret
push
sub
mov
mov
imul
push
sti
scas
push
pop
lahf
xchg
xor
mov
sub
enter
lahf
inc
cs
jp
arpl
jp
inc
jge
fucomi
fwait
cmp
inc
mov
xor
cmpsl
sbb
sub
dec
mov
mov
push
dec
loope
ret
fdivl
shll
jl
adc
xchg
mov
pop
mov
int3
jae
cmp
in
lret
jns
cmpsl
and
pushf
push
mov
pop
jnp
lds
push
mov
jno
jb
mov
or
scas
push
mov
cltd
jmp
push
mov
addr16
xchg
fdivs
and
data16
aas
cld
fcomps
jecxz
pop
jo
sbb
mov
lods
push
sbb
bound
outsl
xchg
into
cltd
pop
xchg
pop
mov
in
jns
mov
ret
imul
bound
aad
sahf
fildl
arpl
mov
mov
cmpl
mov
jae
pop
xor
lds
fcomps
gs
jne
pop
test
push
cmpsl
lods
adc
jmp
jmp
jge
mov
cmp
das
orb
pop
dec
repz
insb
cmp
aaa
xchg
sbb
sub
test
and
into
xor
xchg
sbb
dec
int
into
cmpsl
xor
mov
adc
into
mov
cltd
sahf
mull
mov
pusha
push
outsb
pop
fnstsw
push
bound
push
pushf
lret
xor
cld
jp
pop
jne
adc
xchg
cltd
repz
cli
outsb
hlt
add
sub
inc
sub
mov
in
adc
add
push
fiaddl
xorl
jno
out
lds
inc
sarl
sub
jo
dec
pop
dec
int3
ss
jb
ds
rorl
es
fldcw
cltd
mov
jnp
ret
cmp
cmpsb
jmp
repz
int3
push
int
xor
addr16
mov
rorl
sub
ror
lcall
mov
testb
das
mov
add
sti
jno
fsts
add
adc
dec
cld
fidivrs
fistpll
adc
scas
jg
pop
jno
or
jnp
sbb
push
imul
sub
dec
data16
dec
jo
xchg
xorb
imul
dec
or
inc
mov
arpl
fnstcw
xchg
les
test
jo
arpl
mov
adc
mov
stos
xchg
dec
aas
push
loopne
repz
mov
xchg
mov
sbb
mov
pop
sbb
sub
sub
int
mov
sub
dec
jb
int3
mov
fbstp
xchg
mov
addl
jo,pn
pop
pop
pushf
cmp
sub
inc
or
xchg
mov
or
pop
or
push
mov
stos
cmpsb
sub
cmp
dec
leave
rcrl
push
fisubl
aas
mov
inc
or
mov
ja
je
sbb
cs
mov
mov
sti
js
sbb
push
scas
in
movsb
xchg
pop
xchg
repz
xor
cmpsb
pop
mov
xlat
pop
or
movsb
cmp
scas
cltd
pop
movsl
pop
inc
dec
pop
xor
enter
enter
pop
jae
pusha
pop
and
mov
or
int
push
sbb
lret
out
lcall
je
out
sahf
mov
cmp
cwtl
pop
sub
inc
and
pop
push
xor
jae
mov
fcomip
std
lock
mov
ds
out
pop
push
mov
jo
cmp
sti
xor
jge
sti
sahf
rclb
xchg
or
mov
jmp
push
inc
xchg
inc
jle
orl
enter
xor
fmuls
jo
fsts
xchg
sbb
xor
sub
out
loopne
std
pusha
sub
fisttpll
rcl
fwait
push
mov
adc
stos
sbb
adc
mov
inc
mov
ljmp
mov
addr16
pop
inc
out
loope
push
pop
pop
dec
mov
popa
add
mov
pop
lock
ret
ret
push
pusha
das
loope
fnstcw
xor
mov
sub
mov
add
shl
sbbl
dec
push
and
loope
dec
std
mov
pop
push
popf
sahf
lock
decl
add
ret
mov
xchg
adc
je
les
enter
loopne
xor
or
jle
dec
dec
int3
je
out
test
pop
jmp
scas
pushf
scas
test
jae
lahf
divps
dec
test
rcr
les
jp
push
jl
mov
inc
cmp
lods
inc
xchg
adc
xor
in
je
jecxz
xor
mov
cmp
adc
cmp
jmp
mov
xchg
bound
mov
ss
jl
inc
shll
stos
jmp
pop
push
xchg
movsb
pop
pop
in
lcall
xchg
fwait
scas
mov
stos
jg
mov
add
push
cmpsb
imul
sahf
hlt
pop
cmp
stos
xchg
test
das
sbb
xchg
sbb
aad
loop
pop
or
and
lea
int3
pop
jle
mov
pushf
add
idiv
imul
add
scas
sub
test
enter
inc
stc
mov
lock
mov
push
push
aad
aas
je
xlat
rcll
mov
test
xchg
inc
xor
mov
sbb
jns
in
mov
neg
xor
fwait
pop
and
push
in
rcl
add
sbb
cmp
add
nop
fdiv
cmc
mov
movsb
ss
push
inc
or
mov
dec
pop
mov
rcll
jo
jl
jge
xor
mov
cmp
mov
pop
xchg
daa
stos
mov
movntq
out
add
dec
movsl
sub
push
loopne
jo
pushf
loope
lock
loope
lock
stc
sarl
sub
jmp
adc
and
mov
add
jnp
inc
lods
sub
icebp
lds
lock
popa
cmp
decb
repz
stos
sub
cmp
ret
shll
add
imul
or
enter
lods
mov
pop
dec
pop
cs
sbb
int
and
lods
jnp
xchg
sti
repnz
pop
fidivrs
insb
in
repz
cwtl
popl
sub
and
movsb
out
dec
push
jo
add
ret
xor
jg
loop
mov
add
sbb
stos
test
aam
mov
lods
sub
inc
push
pop
fcmovu
lret
lahf
fbstp
inc
push
jp
or
adc
mov
fstps
inc
sub
sub
outsb
or
jp
jno
sbb
lods
cld
lret
mov
add
dec
iret
loope
cld
rcrl
adc
negl
cltd
add
jle
jl
shll
test
mov
inc
aas
xchg
inc
adc
call
mov
mov
and
add
add
sub
hlt
dec
mov
aas
call
dec
push
pop
popa
lods
or
in
std
and
mov
out
dec
xchg
push
pop
cwtl
xor
and
fsubrp
sub
call
iret
add
xor
xchg
fisubs
dec
outsb
rcrb
iret
and
sub
scas
push
fdivl
cltd
mov
push
cmp
pop
mov
int
sbb
and
mov
sbb
inc
and
cli
adc
xchg
arpl
jecxz
xchg
repz
fs
mov
push
lahf
arpl
cld
sub
sub
mov
lods
or
jne
inc
xor
bound
dec
adc
cltd
outsl
mov
adc
inc
and
imul
mov
cld
test
lea
xor
jmp
aas
mov
cmp
jb
aaa
mov
pop
cli
leave
fcmovnbe
mov
js
cmc
imul
xchg
clc
das
mov
nop
mov
add
mov
sub
sarl
sub
sub
js
lods
add
mov
call
insb
shll
adc
and
fldcw
xlat
test
std
sbb
jbe
cmp
pop
push
sub
lcall
add
push
dec
sarb
daa
dec
mov
es
fs
repnz
xchg
cmp
loop
adc
jl
push
inc
xor
xchg
mov
cmp
jle
jp
sbb
testl
lret
xchg
les
test
pop
dec
mov
and
jo
rcrb
in
jle
push
sbb
fs
mov
xor
mov
sbb
or
adc
push
jae
dec
in
shll
fisubrs
adc
in
push
sub
insl
xchg
inc
mov
sahf
call
mov
xor
pop
mov
jno
outsb
out
jmp
outsl
xorl
inc
ljmp
inc
cwtl
inc
sbb
lods
push
loop
and
shrb
loopne
mov
mov
sbb
fmul
rcll
mov
cmp
psllw
mov
out
cmp
sbb
sbb
xchg
or
out
leave
sti
movsl
test
mov
add
dec
xchg
mov
cmp
insl
es
fldcw
and
xor
push
and
nop
out
dec
cmp
cmpsl
cmpsb
sbb
insl
lret
adc
and
push
or
aam
cmp
shlb
rolb
xchg
add
mov
add
ret
popa
lret
sbb
aam
add
sti
dec
inc
sarb
pop
stos
mov
mov
mov
mov
sub
pushl
rorb
inc
adc
inc
dec
loop
or
lock
or
and
add
lea
mov
mov
insb
mov
lds
rol
mov
pop
std
aas
sbb
testb
decl
adc
addr16
popa
cmp
xor
mov
inc
mov
push
dec
xchg
xchg
pop
mov
test
int3
rorb
dec
iret
xor
rorl
movsl
mov
mov
and
imul
inc
mov
push
leave
mov
mov
or
cmp
or
inc
rorl
arpl
int
ret
push
sbb
test
sub
iret
shlb
ss
push
das
push
rolb
jns
adc
rorb
or
push
add
insl
add
dec
push
add
and
and
sub
lds
int3
scas
inc
add
leave
pop
xor
lock
mov
cmpsb
mov
popa
cmpsb
data16
adc
xor
inc
hlt
xor
lods
inc
iret
add
loope
jmp
cmp
pop
pop
subb
or
inc
mov
mov
sbb
and
insl
push
sbb
jge
adc
js
inc
mov
jmp
roll
mov
sahf
mov
loop
xchg
xchg
shll
xchg
cwtl
nop
fs
into
pop
dec
mov
out
mov
dec
sbb
in
mov
les
sbb
mov
stc
adcl
jge
adc
sub
pop
pop
rolb
jno
pop
lds
shl
rcll
mov
sbb
jp
cli
inc
leave
roll
in
rcll
xor
xlat
mov
lahf
popa
jle
repz
rol
jb
aas
pop
push
and
cmp
xchg
icebp
pop
pop
mov
cmp
movsb
call
jp
int3
fnsave
sbb
sub
add
movb
lods
ljmp
adc
leave
lahf
mov
in
add
mov
enter
mov
add
aas
adc
and
in
push
out
xchg
pushf
mov
xchg
fs
imul
shlb
or
cmpsl
mov
cmp
fstp
enter
stc
or
xor
or
push
cmpsl
fcoms
dec
cwtl
pop
xlat
insb
sub
xchg
xor
cmp
cmp
insb
stos
adc
pop
lds
pop
call
jl
pop
icebp
loop
stc
fistpll
sub
xchg
adc
dec
dec
pop
pop
jp
inc
inc
in
cmpb
jg
movsl
jb
push
insl
mov
pop
fwait
push
bound
jnp
sti
cwtl
add
inc
hlt
sub
outsb
pop
jmp
in
xor
arpl
sbb
jecxz
sbb
es
cwtl
rcrb
xchg
mov
inc
xchg
sar
cmp
lret
xchg
mov
xchg
pop
call
fnstcw
cmp
out
push
in
lea
mov
in
sub
add
push
mov
in
dec
and
aaa
xlat
adcb
iret
jle
xor
mov
clc
enter
inc
outsl
idivl
mov
push
bound
outsb
sbb
fisttps
shlb
dec
dec
xchg
ret
pop
scas
fsts
test
mov
shl
lret
jmp
xchg
shr
adc
das
icebp
mov
fistpll
sbb
fists
gs
fcoms
mov
fwait
and
loope
in
repnz
xchg
push
stos
mov
jns
pop
ret
mov
sahf
scas
sub
mov
cld
lret
movsl
cmc
sarl
jg
iret
cmp
cltd
dec
aam
popf
les
mov
add
hlt
add
pop
sbb
jae
xor
add
mov
pop
les
cmp
cmc
and
test
sahf
xchg
cmp
fidivrs
inc
inc
push
pop
rcr
fwait
mov
lret
mov
add
fnstcw
adc
addr16
jns
inc
inc
jno
das
data16
movsb
je
scas
fs
scas
scas
cmp
sbb
gs
test
xchg
ds
jno
push
add
jecxz
dec
int3
call
mov
jne
adc
icebp
sub
fcompl
bound
mov
mov
push
pop
mov
mov
push
push
adc
jp
fwait
push
lock
je
mov
inc
addr16
sbb
icebp
inc
cs
shlb
xchg
add
fists
xor
or
stc
sub
lods
dec
push
out
fimuls
test
add
repnz
sub
lea
insb
jo
scas
lea
sub
lea
pop
sahf
mov
faddl
push
add
or
ret
push
test
andl
lahf
xor
push
push
insb
xor
in
sahf
inc
cs
iret
cmc
call
mov
inc
xchg
jb
int
inc
lret
push
xor
or
notl
and
test
jns
push
mov
and
dec
lahf
cs
push
lods
les
sub
push
cmp
int
push
inc
out
sbb
out
into
out
loope
movsl
sbb
lcall
add
jo
lcall
jae
mov
jne
xchg
cs
add
mov
bound
lea
ljmp
sarb
stos
lds
sub
pop
or
and
add
addr16
or
pop
mov
lds
fcoms
lcall
or
sbb
or
inc
add
repnz
enter
mov
adc
jns
es
rcrb
add
mov
mov
std
mov
subl
bound
mov
inc
in
xchg
push
inc
sbb
cmpsb
movsb
mov
jae
movsl
mov
jge
lret
mov
imul
push
fnstsw
add
fwait
pop
notb
xor
test
jp
in
dec
and
push
jl
adc
inc
insl
xchg
jno
xorl
mov
inc
ljmp
std
adc
dec
pop
mov
je
ficoml
push
sub
mov
sub
iret
jae
jo
out
pop
xor
out
cmpsl
pusha
push
inc
cmc
jnp
dec
mov
sub
and
js
xchg
test
mov
mov
inc
add
xor
inc
ss
mov
pop
testb
jmp
icebp
jp
in
aas
imul
cmp
or
repz
or
nop
in
push
mov
push
pusha
push
es
jg
mov
mov
push
lcall
or
or
lahf
pop
or
mov
push
in
bound
loopne
pop
daa
lret
dec
jmp
lods
or
dec
sub
xlat
xchg
mov
ds
cmc
mov
pusha
cmp
mov
cmp
xchg
xor
outsb
fildl
fdivrp
mov
inc
dec
and
xor
cmp
jb
mov
jns
scas
and
push
xchg
mov
divb
faddl
jo
mov
pop
jmp
push
inc
js
sbb
popf
andb
les
dec
mov
shll
mov
push
xchg
add
dec
jl
adc
xor
mov
inc
iret
in
dec
lods
mov
dec
pop
into
neg
jl
lods
arpl
fiadds
fnstsw
insl
repnz
fidivl
dec
out
mov
add
cmp
xor
xchg
mov
sub
les
push
cwtl
or
jb
sbb
mov
push
cwtl
rcll
push
cpuid
pushf
pop
fidivs
sub
testb
mov
sub
sub
fwait
dec
push
nop
push
inc
js
cmpsl
and
mov
jecxz
arpl
adc
femms
lret
aad
sarl
cmpsb
sub
cmp
icebp
push
dec
pop
cltd
rcrl
rcr
cmp
jno
xchg
jae
mulb
stc
aas
mov
insb
ljmp
xchg
mov
ret
xor
rcl
sti
or
pop
mov
pop
js
fists
imul
mov
rcrb
and
add
fimull
mov
lds
sub
pop
inc
enter
jne
out
aas
xchg
iret
into
push
pop
xchg
adc
sti
fldcw
pusha
rclb
jb
sub
xchg
pop
xor
nop
bound
rclb
sub
inc
popf
out
xorb
jno
or
jmp
fdivr
adc
das
ja
dec
mov
ss
int3
ja
test
push
jl
mov
cwtl
mov
sub
push
aam
pop
movsb
mov
adc
outsb
lods
addr16
adc
in
mov
sbbb
add
sub
in
and
lds
inc
adc
loope
mov
int3
pop
push
mov
and
pop
bound
repnz
mov
push
or
aam
dec
fcmovbe
inc
sub
mov
dec
inc
pop
cmp
cwtl
pop
cmp
inc
bound
sti
sbb
xor
sub
adc
out
leave
cmp
mov
or
mov
xchg
je
mov
inc
jnp
inc
jecxz
xchg
mov
cmp
cmp
mov
addr16
mov
sbb
test
push
sahf
rcrl
ja
test
jo
add
push
push
add
imul
loop
imul
into
push
mov
fisttpll
pop
mov
insl
dec
popa
aaa
mov
xchg
sti
xadd
inc
sbb
pop
inc
pop
je
popa
pop
inc
std
jo
clc
fs
pop
add
adc
loopne
bound
imul
xchg
push
adc
mov
mov
clc
or
dec
ret
out
lods
push
add
or
imul
xchg
lods
add
lea
adc
inc
sbb
aam
orl
int3
mov
les
int3
sub
cmp
ss
roll
sbb
fiadds
jl
push
or
jl
cld
pop
mov
icebp
shrl
loope
rcll
adc
loope
sahf
fsubrp
xchg
lock
dec
cltd
test
mov
mov
fadd
dec
imul
je
jp
or
lahf
fs
add
lods
mov
test
stos
xchg
into
sub
dec
cltd
dec
lahf
js
fidivrl
sarb
ljmp
mov
sahf
test
jae
jo
sbb
mov
dec
pop
inc
sbb
shll
pop
and
add
das
orb
fs
out
add
sub
ret
jne
iret
lcall
insl
add
adc
mov
stc
jecxz
test
or
pop
jnp
xor
dec
stos
cli
xor
cli
mov
mov
xchg
gs
pop
cld
sub
pop
jns
into
roll
mov
dec
jne
xchg
dec
movsl
xchg
imul
jno
call
loop
jle
jge
mov
and
mov
lcall
pusha
mov
fcmovnb
gs
dec
mov
xchg
cs
jno
jmp
hlt
add
leave
enter
mov
xchg
or
lret
pop
sahf
xorl
dec
mov
shrl
and
addr16
sub
or
das
movsl
leave
mov
mov
adc
cmp
adc
pushf
dec
push
xchg
sbb
aam
sbb
dec
insb
or
or
and
cli
or
inc
repz
jle
xor
pop
nop
fdivrs
sub
and
scas
add
imul
push
xchg
sub
mov
enter
in
popa
push
cli
out
push
cmpsb
mov
dec
mov
and
cmp
jp
ja
push
cmc
sbb
mov
rcrl
adc
out
mov
les
adc
sbb
cmp
lret
xchg
or
and
mov
push
repnz
ss
int
test
push
adc
int3
or
lds
icebp
in
in
fldcw
rorl
pop
mov
int
dec
xor
sub
jnp
add
inc
pop
pop
pop
mov
aas
in
arpl
pushf
pop
push
loope
lods
adc
enter
push
lahf
in
pop
mov
mov
inc
cmp
sbb
scas
inc
cmp
in
sbb
pop
lea
mov
add
sahf
cmp
out
popf
inc
xor
sbb
mov
outsb
stos
dec
clc
adc
imul
sbb
pushf
lds
lea
jp
lods
and
data16
loop
ja
push
inc
mov
xchg
inc
or
lret
cmp
in
addr16
ja
lock
inc
pop
pop
push
ficoms
inc
push
push
add
sbb
cmp
mov
subb
in
pop
adc
outsb
fld
jecxz
cld
lods
dec
pop
jl
sbb
mov
imul
ss
ss
out
xchg
push
xchg
ret
cmp
add
enter
andb
sub
jae
das
push
pushf
idivl
pop
jl
arpl
sysret
cs
mov
cs
in
cmpsb
enter
adc
sbb
inc
syscall
mov
mov
fnstenv
xor
jmp
jg
xor
clc
ficoms
mov
shrl
bound
sarb
or
das
inc
into
inc
in
rcrb
sahf
inc
pop
sub
mov
stc
jmp
fisttpll
xchg
insb
sbb
cmp
lods
xor
enter
into
nopl
adc
insl
cmp
fisttps
mov
mov
rcr
and
pop
pushf
mov
jmp
bound
test
sar
jg
and
and
in
in
and
stos
push
sbb
and
pop
or
outsl
imul
mov
jno
add
inc
mov
test
or
mov
cwtl
lret
push
cmp
pushf
shr
mov
orl
sub
gs
shrb
lcall
insl
int
jbe
loope
add
enter
fisttps
sub
push
repnz
dec
lods
rcrl
movb
cmp
ret
fdivp
sub
xchg
pop
inc
push
hlt
dec
pop
dec
xor
xchg
jae
push
sahf
adc
adc
clc
subb
inc
ljmp
movsb
cmp
mov
and
or
xlat
push
push
ret
sbbb
daa
or
dec
xor
mov
rclb
bound
call
shlb
shl
stos
and
test
in
inc
adc
pop
inc
ret
popa
mov
inc
adc
cmp
ja
jecxz
add
and
popa
xchg
pop
test
shlb
pcmpeqd
cs
sbb
push
cmp
movsb
or
fisttpll
or
sub
or
aam
push
jno
sub
imul
pop
les
in
je
jo
push
adc
push
push
test
pushf
or
push
call
cld
mov
sub
cli
mov
outsb
aam
and
scas
mov
int
pop
xchg
stos
je
outsb
fnsave
xchg
xor
push
sub
rcrl
movsb
rcrl
ds
rorl
fidivl
xchg
shll
mov
sbbb
lock
sub
jg
pop
or
sbb
fists
fsubs
jae
add
mov
cmpsb
pop
mov
lcall
mov
out
movsl
cwtl
outsb
xor
inc
mov
dec
stos
mov
add
xor
test
xchg
mov
inc
outsb
mov
pop
rolb
into
xchg
iret
mov
sahf
xor
inc
imul
popa
negb
mov
xlat
xor
jg
push
mov
mov
lods
movsl
pop
sti
lods
pop
jg
xchg
mov
int3
cmp
lret
ja
lahf
push
fistpll
cmp
icebp
mov
in
jnp
add
dec
sbb
push
insl
sbb
xchg
lret
add
xor
xchg
lret
xchg
cmpsb
xlat
dec
or
rcl
lea
lret
imul
mov
sub
icebp
pop
loope
add
loopne
inc
cli
imul
out
push
sti
inc
sub
add
faddp
hlt
sarb
mov
jo
jno
mov
mov
push
adc
dec
or
lcall
aas
push
jb
cmp
test
data16
out
outsb
mov
shll
fnstsw
outsl
and
cmp
dec
push
mov
ja
mov
adc
mov
pop
lods
sbb
lcall
mov
shll
test
cs
out
and
xchg
jl
mov
addl
and
fs
jns
sbbb
in
loope
les
arpl
lahf
jns
fldt
cmpsl
aam
cs
sahf
mov
mov
dec
out
dec
mov
or
lock
xchg
inc
xchg
xchg
jo
repz
push
ficoms
xchg
inc
cwtl
rcrb
sahf
enter
xor
pop
lea
scas
sbbb
inc
jo
cwtl
dec
xchg
push
push
subb
cs
outsb
fistl
lea
mov
pop
lock
cmpsb
outsb
rcrl
popl
cmpsl
cld
in
xchg
sub
fdivr
xchg
test
xor
or
lds
mov
ret
or
test
insb
out
inc
pop
call
popa
xchg
fs
mov
aad
imul
cld
inc
pop
sbb
arpl
cmp
jmp
or
jge
ret
pushf
fadds
sub
in
push
jmp
cmpsb
mov
fs
and
test
jo
loopne
and
cmp
subl
gs
sbb
sub
mov
test
aas
mov
enter
mov
cmp
push
mov
xchg
out
xor
movsl
outsl
imul
ret
data16
adc
adc
outsl
xchg
jg
dec
popa
jo
aaa
fs
lret
sub
and
pop
in
inc
pop
and
jae
push
xchg
iret
notl
or
movsb
dec
bound
imul
subps
dec
push
cmp
fistl
rorb
mov
xchg
stos
sbbb
cwtl
mov
cltd
scas
mov
fsubrl
xchg
sub
cmc
mov
mov
shrb
xor
pop
or
scas
or
iret
psubsw
mov
inc
jnp
fmull
cmpl
cs
jae
inc
push
sub
clc
fwait
sti
mov
inc
int
mov
adc
mov
lock
shl
cli
push
mov
sub
pop
inc
neg
aaa
inc
mov
clc
subl
jp
jns
sti
dec
mov
test
sbb
mov
adc
scas
cmpsb
cltd
add
pushf
fstps
sbb
jbe
and
inc
cmpsl
sbb
pop
ljmp
ret
xor
adc
mov
rcll
inc
mov
lret
addb
outsb
dec
inc
repz
inc
sub
xchg
add
pop
leave
and
pushf
cmp
je
adc
adc
imul
inc
insb
jecxz
xchg
repnz
insb
bound
mov
mov
mov
mov
sub
add
mov
xor
sbb
xchg
sbb
nop
sub
or
add
mov
mov
int3
je
or
mov
frstor
mov
xor
jge
les
and
lcall
sub
test
mov
fsubrs
jmp
lods
mov
inc
and
xchg
int3
inc
mov
push
nop
sub
lods
jo
into
pop
add
xchg
fisttpl
clc
sub
cld
jbe
orl
fildl
sub
pop
push
add
std
mov
out
std
pushf
adc
enter
aad
movsl
inc
es
xchg
add
loope
add
incl
int3
mov
pop
daa
rorb
in
xchg
jbe
stc
std
cltd
mov
sub
out
lcall
cmp
daa
das
pop
xor
test
lcall
outsb
mov
in
pop
jne
sub
iret
shll
or
clc
hlt
inc
into
lret
lock
mov
fnsave
imul
mov
outsb
popf
push
ret
rolb
push
jmp
call
aam
pop
in
sahf
icebp
sub
jmp
out
arpl
mov
f2xm1
pop
inc
and
and
pop
sub
dec
int3
jmp
aam
mov
add
in
fstl
adc
cmp
lock
test
jb
jmp
pop
mov
fisubs
imul
cmpsl
push
testb
and
sub
xchg
mov
lea
dec
push
push
outsb
rol
lock
mov
xor
sub
fadd
push
and
cli
pop
data16
sti
lret
inc
popf
mov
adc
adc
mov
fadd
aad
xor
xchg
fistpll
pop
insl
xchg
das
rorb
es
dec
push
out
push
je
mov
mov
inc
mov
inc
inc
mov
mull
imul
sbb
or
sub
inc
sub
xchg
pop
mov
lods
pusha
pop
lret
add
mov
inc
notl
dec
inc
push
lahf
pop
xchg
fs
sub
in
mov
repz
xchg
int
jmp
lds
cmp
out
mov
pop
adc
dec
push
mov
sarb
xchg
xchg
ljmp
jnp
inc
mov
js
mov
or
cwtl
pop
out
pop
adc
test
pop
into
insb
and
jge
sbb
addr16
or
idivl
insl
inc
xor
mov
lods
popa
loope
mov
lret
xor
mov
negb
push
cmp
jno
arpl
pop
in
inc
in
imul
pop
pop
or
dec
stos
flds
push
pop
enter
mov
mov
add
enter
lret
jmp
jnp
push
sub
mov
jle
les
jecxz
adc
mov
jns
imul
pushf
xchg
sbb
test
cmpsl
in
ret
push
inc
mov
mov
mov
pop
scas
push
inc
mov
sbb
andl
fnstsw
mov
out
or
fbstp
mov
test
push
push
jmp
push
adc
je
rcll
and
pop
and
pop
roll
dec
sbb
pop
pop
cmc
and
xor
into
add
cmp
sbb
pop
dec
xor
and
dec
dec
imul
lcall
and
mov
jo
mov
jb
and
loopne
xchg
adc
movsb
into
ret
ja
fmull
push
popa
ret
jg
imul
mov
lcall
adc
nop
aam
ret
shlb
les
dec
outsl
xchg
mov
sbb
and
ror
pop
cmp
test
les
lock
les
insb
sahf
std
mov
leave
into
mov
ds
fidivs
sub
sti
xor
fistpll
mov
or
adc
mov
ljmp
pushf
cwtl
lret
mov
aad
jmp
sbb
pop
pop
movsb
xchg
inc
xor
shll
dec
iret
mov
shlb
or
ds
fcmove
movsb
pop
pop
inc
fs
in
push
push
or
movsb
mov
scas
xchg
mov
cmp
sub
sub
jnp
push
pop
xchg
and
imul
jp
push
xchg
mov
sbb
xchg
cmp
jle
loopne
fwait
addl
inc
fcompl
sub
sbb
mov
ss
sarb
aam
add
enter
fisubl
cmp
test
dec
xchg
add
es
push
dec
adc
inc
fwait
xchg
or
xorl
lret
xor
mov
fcomps
sub
or
xor
add
fwait
dec
sbb
ror
push
sub
lea
mov
std
imul
jo
jae
hlt
lods
adc
lahf
and
push
xchg
or
nop
pop
mov
imul
adc
adc
in
rolb
dec
xor
mov
and
mov
cmp
push
mov
mov
sarb
inc
fneni(8087
stos
movsb
sbb
ret
int3
pop
xor
aad
pop
or
push
test
mov
sbb
addr16
in
ja
pop
lock
movsb
into
fbstp
mov
lret
mov
call
sbb
cmp
mov
pusha
inc
pop
jb
imulb
call
adc
popa
push
xor
xlat
std
add
test
icebp
data16
ja
faddl
jns
mov
aad
sub
data16
data16
in
loop
in
push
and
push
push
add
mov
add
xchg
fisttpll
out
mulb
add
repnz
inc
jo
out
mov
xchg
lcall
xor
icebp
insl
stos
jno
in
jl
sarl
sub
mov
mov
iret
ja
lds
pop
pop
cwtl
ret
xchg
and
sbb
ret
fldl
lcall
add
repz
stc
mov
mov
and
inc
or
mov
or
ds
mov
sbb
pop
and
movsb
lea
xorb
stos
inc
movsl
inc
fadds
sbb
mov
inc
sub
pushf
mov
loopne
ja
dec
cmpsb
rorb
lea
and
push
xchg
add
in
out
lds
out
test
add
add
pop
ljmp
add
and
mov
icebp
dec
js
mov
int
jb
orb
rorb
nop
loopne
mov
jmp
pop
test
adc
lods
add
popf
popa
jmp
add
cltd
add
mov
movsl
mov
notl
int3
cmp
jae
mov
and
call
xor
ficompl
or
sti
leave
dec
loop
addr16
xchg
test
mov
xor
cmp
fnstsw
jb
pop
adc
fisttps
inc
pop
sbb
iret
jmp
jge
mov
lods
inc
and
les
inc
sub
adc
cmp
inc
shrl
and
sbb
cmpb
pop
push
and
call
mov
xor
and
ret
cli
pop
pushf
pop
js
pusha
add
mov
bnd
repnz
lahf
dec
cmp
inc
popa
ret
sub
jg
sahf
test
inc
nop
sbb
jmp
inc
jge
aam
les
fsubrl
ret
fstpl
sbb
mov
shll
sub
nop
inc
mov
nop
sbb
repz
std
mov
dec
xlat
mov
js
or
xor
test
mov
sub
aas
cmp
outsb
pop
dec
xchg
std
jb
push
cs
stc
lods
mov
jle
fistl
aad
pop
xor
fwait
adc
and
xlat
or
mov
into
inc
stos
imul
aad
jge
divb
scas
inc
xchg
adc
mov
xchg
push
nop
enterw
mov
inc
jmp
in
jmp
popa
pop
pop
push
cmpl
inc
pop
cmp
cmp
arpl
cmp
cmpsb
jge
in
rclb
pop
sub
loopne
cmp
sbb
cmp
scas
cmp
mov
paddd
add
scas
sbb
insl
les
adc
sbb
cmp
push
mov
mov
out
xchg
sbb
cmp
stos
cmp
dec
loop
and
jns
in
js
in
or
int3
shl
jle
and
xchg
dec
fadds
pop
in
out
stos
loopne
leave
iret
dec
pop
xchg
adc
mov
push
pop
iret
jns
pop
inc
testb
sbb
mov
stos
ds
sbb
xor
movsb
cmpsl
fstpt
hlt
int
sbb
lods
jo
mov
dec
rcll
mov
dec
shr
dec
mov
sbb
dec
pop
imul
mov
xor
push
fistps
jge
jnp
dec
repz
adc
idivb
or
jo
loop
jp
in
sahf
fstpt
and
das
adc
inc
mov
fisttpll
jbe
mov
jae
jo
jnp
flds
push
inc
ds
test
jge
and
jns
sbb
out
jb
das
push
cwtl
dec
call
pop
xor
jne
cld
cmp
and
add
daa
push
cmp
js
push
fsubrl
std
mov
mov
cmpsb
dec
push
popf
sbb
faddp
add
loopne
and
sar
repz
test
dec
adc
aam
leave
mov
xor
scas
jp
xchg
push
sub
incb
jno
rorb
cli
mov
in
pop
outsb
repnz
aas
sub
cmp
cmpsl
nop
inc
xor
cmp
test
or
loop
adc
jb
repz
lret
xlat
jp
add
subb
mov
or
into
aam
mov
fwait
mov
fld
jp
push
add
add
into
xchg
adc
mov
stos
rorb
sub
cld
ret
mov
mov
or
add
pop
test
cmp
jl
mov
sarl
out
lret
adc
lods
pop
leave
add
subl
call
loop
add
fiaddl
dec
lret
ftst
sbb
sbb
repz
mov
iret
aam
cmp
ret
jl
inc
fmul
jge
push
push
push
decb
pop
mov
sbb
cltd
lcall
enter
add
pop
add
adc
adcl
cmc
mov
mov
add
or
mov
xchg
mov
lahf
xchg
loope
cmp
or
sub
push
movsb
ljmp
and
sbb
xor
xchg
sub
lods
lahf
aas
sbb
into
movsb
mov
addr16
fstp
test
pop
arpl
cli
xor
jl
rorb
testb
mov
add
out
inc
xchg
js
dec
ret
hlt
inc
pop
nopl
jbe
jno
adc
sub
pop
inc
sub
xchg
cld
lods
jp
xor
lock
lcall
inc
add
mov
cli
int
mov
xor
and
mov
dec
arpl
adc
aaa
jmp
jnp
jno
xchg
add
imul
xchg
imul
orl
notb
xor
mov
sub
fnstsw
enter
mov
pop
inc
dec
ret
dec
fld
and
sbbb
push
cmc
sahf
mov
and
bound
imul
inc
push
mov
aas
or
and
cmp
push
out
leave
fsub
shl
mov
push
inc
lea
mov
sbb
pop
adc
int
add
outsb
xor
leave
stc
inc
daa
rolb
fmuls
scas
call
xor
adc
lcall
rcrl
popf
outsl
clc
xor
stos
mov
pop
push
xchg
xchg
sub
sub
lcall
or
adc
cmp
xchg
xchg
push
shlb
cli
xchg
mov
xor
pop
scas
sub
lock
push
das
repz
cltd
sbb
repz
sub
jecxz
cmpsb
lahf
stc
aas
lods
cmp
sahf
shr
cmp
out
into
mov
xor
bnd
and
add
pop
pop
lods
imul
gs
mov
inc
jecxz
addr16
pusha
out
scas
and
dec
cmp
xor
ss
gs
xor
jle
cs
dec
fabs
mov
adc
arpl
push
sbb
sbb
jo
adc
cltd
notl
repnz
movl
aad
jo
xor
cmp
push
mov
cmp
dec
mov
cmpsb
pop
adc
rcrb
repz
movsb
mov
cmp
popf
mov
jae
rcll
in
pusha
cmp
int3
je
xor
ljmp
inc
pop
daa
in
jmp
dec
or
pop
inc
and
jg
mov
in
jns
cmpsb
sbb
push
xchg
jge
adc
lods
mov
rolb
xor
je
mov
inc
push
insb
ret
or
lret
and
pop
or
cwtl
add
clc
arpl
jl,pt
mov
and
mov
push
or
fwait
sub
lcall
lea
xchg
in
mov
push
cltd
ret
aam
pushf
adc
sbb
and
cwtl
loop
gs
das
call
loope
and
mov
cs
xchg
add
lahf
push
mov
mov
mov
popf
lea
and
imul
cli
in
and
in
push
leave
insl
push
pop
mov
xchg
in
imul
mov
out
jnp
inc
push
fistpl
xchg
xchg
mov
cli
sub
cmp
ja
dec
test
sbb
mov
stos
sti
mov
inc
aad
insl
inc
out
inc
hlt
inc
cmp
cmp
inc
push
lds
and
js
mov
inc
sub
lret
leave
mov
cmp
add
mov
xchg
mov
xor
movsl
jmp
sub
or
clc
pop
cmp
mov
shrl
cmp
sarb
les
jbe
leave
std
pushf
mov
and
shrl
cwtl
mov
dec
dec
mov
jns
ret
adc
leave
pop
pop
jg
mov
popf
xchg
imul
shll
rclb
mov
pop
insl
push
incb
insl
lret
inc
xor
jns
sbb
pop
jle
sbb
aas
xor
mov
xchg
cltd
ljmp
push
mov
faddl
mov
xchg
push
nop
add
jns
jl
xchg
xchg
or
inc
clc
add
mov
dec
test
xor
mov
mov
int3
cmc
popa
mov
mov
call
inc
lea
sub
add
sarb
cli
sbb
adc
lret
sub
jecxz
sub
insl
mov
loop
add
mov
je
rolb
dec
inc
xor
imul
daa
fstl
mov
fcoms
int
pop
xchg
and
fsubrs
mov
adc
cmp
push
mov
inc
les
cltd
test
das
ss
push
pop
lods
pop
mov
push
imul
pop
dec
pop
fldt
mov
ss
ret
scas
jo
mov
daa
mov
mov
push
loopne
iret
and
or
mov
cwtl
out
pop
mov
mov
mov
mov
repnz
sub
into
add
cmpsb
mov
mov
push
add
dec
scas
dec
lds
sub
mov
dec
cltd
dec
dec
xchg
mov
or
mov
es
shll
pop
jne
cmp
sub
in
fldl
add
adc
cmp
test
mov
push
adc
pop
test
or
subb
int3
leave
mov
cmp
xchg
sub
mov
mov
push
fsubp
out
ficoms
cli
cmc
jge
sarl
cwtl
cmp
xchg
rorb
or
mov
sub
mov
leave
popf
push
mov
aad
or
sbb
sahf
fisubl
or
mov
mov
dec
cltd
rolb
sub
mov
cltd
rcrb
leave
dec
inc
lcall
push
dec
fyl2x
repnz
in
mov
pop
dec
shrl
pushf
mov
mov
pusha
clc
outsl
inc
ret
and
rolb
call
xor
call
cmp
mov
xor
cmc
cli
sbb
cmpsb
jecxz
test
pop
dec
scas
mov
jecxz
andl
adc
je
sbb
jne
iret
outsl
jp
pusha
pop
jle
jl
and
inc
mov
sub
and
jmp
into
mov
cli
je
fnsave
shlb
arpl
mov
and
fcoml
xchg
mov
add
aas
pusha
jb
push
cmp
xor
xchg
hlt
cld
sbbl
adc
fsts
jbe
push
xor
mov
test
lea
mov
shlb
mov
addb
fwait
in
inc
inc
pop
test
pop
mov
lods
iret
xlat
fbstp
mov
lret
pop
sub
sbb
xchg
cs
test
fs
test
push
out
loope
push
insl
xor
cld
or
mov
push
xor
and
inc
add
test
adc
or
add
lea
add
jb
sbb
loop
negl
aaa
add
stc
jge
dec
mov
lcall
stos
movsl
adc
rcrb
jp
mov
aad
out
cmp
fcmovne
add
data16
xor
mov
xor
cwtl
pop
scas
sub
sbb
addr16
mov
out
in
fistpl
lcall
and
xor
mov
jne
subb
pushf
roll
inc
stos
pop
cli
push
xor
pop
out
cmp
pop
cld
pop
ljmp
in
pop
add
aam
push
pop
mov
int3
dec
inc
ret
int3
cwtl
lods
loope
int
inc
mov
or
aad
push
or
jecxz
or
shr
inc
and
xchg
js
daa
cmp
pop
dec
ret
call
test
push
int3
inc
rolb
pop
xlat
js
mov
push
shrb
clc
enter
leave
in
jmp
mov
xchg
scas
frstor
or
xor
popf
mov
inc
dec
mov
and
loopne
xlat
fstpl
cwtd
mov
pop
adc
clc
sub
popa
sub
adc
mov
adc
jp
or
out
cwtl
std
sbb
seta
lds
inc
insl
mov
push
xchg
sub
mov
in
adc
lret
cmpb
jo
dec
in
push
jge
mulb
dec
or
fdivs
jge
mov
sbb
sti
mov
dec
bound
push
mov
and
in
and
int3
insb
incl
dec
ret
sbb
and
sbb
inc
movsb
pop
sub
cmp
data16
mov
fs
addr16
xchg
lret
popa
push
add
and
adc
cs
and
je
mov
aaa
ss
dec
adc
jle
fstps
sbb
dec
aas
push
jl
sub
xor
in
sbb
jmp
jle
jg
sub
jo
cmp
sub
cmp
adc
cmp
and
sub
cmp
lcall
cltd
pop
leave
sub
sbb
jge
xchg
out
bound
mov
pushf
sbb
mov
adc
inc
cmp
gs
call
add
jae
fwait
cmp
mov
std
insb
cmp
pop
es
cmpsl
cld
ret
and
sbb
xor
movl
mov
data16
push
push
pop
sub
push
add
cld
sub
mov
pop
inc
fisttps
je
mov
and
lds
xchg
repz
test
push
fadd
adc
push
xchg
pop
or
inc
xchg
pushf
xchg
and
movsb
fcoms
mov
and
cbtw
clc
sahf
cmp
lods
mov
inc
jg
fildl
loope
andb
into
push
xchg
andb
mov
jbe
aam
cmpsb
mov
mov
inc
jmp
adc
fisubrl
pop
mov
pop
xchg
xchg
adc
sub
test
fcompl
mov
dec
pusha
pop
mov
sub
xlat
sbb
pop
test
lea
and
data16
and
mov
mov
je
pop
add
jne
or
rorb
fnstenv
push
pop
lods
sarb
adc
or
aam
or
cld
popa
or
adc
loopne
aam
ror
jmp
pop
lret
xchg
outsl
fldln2
mov
addl
or
out
shlb
lods
mov
inc
out
mov
cld
or
mov
mov
add
jg
push
ds
addr16
push
xor
pop
xchg
ljmp
add
cmp
or
out
mov
push
roll
xchg
stos
rcrl
xchg
pop
ficoms
pop
shll
fldenv
out
pop
mov
pop
outsb
sub
cmpsb
inc
enter
or
jo
fdivrp
repz
dec
iret
xor
adc
int3
cmpsl
into
pop
mov
mov
sub
lret
dec
mov
pop
andl
jmp
xchg
pop
mov
mov
out
hlt
stc
pop
sbb
sub
xchg
and
dec
and
add
sub
repz
xor
push
ud0
sti
push
shrb
adc
and
shrl
cmpsl
les
gs
ja
rclb
sahf
adc
ret
lret
jle
or
stc
scas
jbe
and
insl
mov
das
adc
ljmp
xchg
fs
push
test
jp
repnz
gs
pop
rcll
pop
sbb
mov
sbb
dec
cmpsb
mov
fsts
xorb
adc
mov
cli
mov
sbb
mov
negl
aas
test
jnp
mov
aad
cltd
add
jae
test
imul
aam
jg
fmuls
inc
xlat
imul
mov
ror
or
mov
sbb
das
lcall
add
cmp
or
mull
add
mov
cmc
dec
cmp
push
pop
call
inc
dec
and
dec
add
pop
jne
in
cmc
and
test
stos
add
test
je
ret
rcl
jle
sub
stos
daa
jbe
into
stos
sub
inc
lahf
mov
or
xor
pop
cmp
pop
mov
xchg
jo
fists
inc
xchg
xchg
inc
mov
fcmovnu
hlt
in
test
out
mov
mov
inc
fisttpl
test
pop
xchg
cs
dec
push
insb
mov
shll
fisubs
rorb
cmp
rcrl
adc
add
leave
adc
jecxz
scas
mov
pop
cmpsl
fwait
or
ja
add
mov
jae
or
cli
xor
push
lcall
jge
dec
jmp
mov
mov
fstp
ficomps
fldln2
test
movsb
or
xchg
sbb
gs
loopne
mov
inc
inc
rcr
loop
pop
xchg
jmp
cmp
mov
xlat
enter
shrl
mov
in
cs
inc
les
ljmp
cmp
loop
ficompl
push
push
int
fldt
pop
les
inc
cmp
test
out
inc
xlat
enter
lret
xchg
jo
mov
xchg
imull
dec
fidivl
xchg
ret
push
add
aad
jnp
cmc
sbb
fdivl
sahf
mov
pop
lret
test
add
fisttpl
mov
leave
test
cmpsl
incl
pop
cmp
lret
lock
adc
or
insb
add
out
inc
mov
cmp
push
std
in
dec
pop
fists
pop
jo
inc
daa
xchg
scas
mov
jno
sti
push
fistpll
inc
mov
cmp
pop
stos
ret
jns
xchg
pop
inc
jb
cs
loop
jge
enter
add
mov
loopne,pn
pushf
sub
addr16
xor
xor
mov
mov
pushf
aam
fdivs
ds
cmp
mov
inc
fsubrs
ja
add
mov
add
imull
int3
ja
fmull
test
je
lods
mov
ror
fs
out
or
pushf
enter
push
mov
jbe,pt
sbb
test
and
xor
iret
cld
dec
imul
push
mov
lods
stos
popa
gs
push
push
or
mov
mov
xchg
jg
stc
test
sub
push
pop
test
add
fdivrl
bound
push
jp
cli
test
faddl
push
sub
shlb
mov
mov
cmp
cmp
iret
pop
adc
push
cmp
sbbl
mov
lea
das
stos
cwtl
btc
or
orb
xchg
cwtl
sahf
popf
adc
sub
cli
arpl
pushf
cmp
clc
popa
dec
xor
dec
gs
jne
mov
out
mov
dec
and
std
jg
mov
xchg
addr16
ja
sbb
leave
xor
dec
mov
jns
aas
push
fnstcw
jle
cmc
pop
jno
sub
xor
fadds
cmp
mov
shrl
mov
je
sub
xorb
jp
shl
mov
xchg
leave
sbb
mov
mov
sub
out
pop
push
subl
xchg
ja
cmp
pop
mov
push
inc
push
or
mov
fs
jp
rolb
leave
mov
inc
insb
jle
fadds
cltd
dec
aas
pusha
mov
ljmp
xchg
les
jg
jle
mov
mov
mov
ret
push
sub
inc
in
add
push
pusha
lds
rclb
push
sub
or
rorl
les
jb
sbb
mov
adc
mov
push
mov
dec
sbb
sbb
inc
and
mov
jno
cld
dec
mov
hlt
hlt
push
xor
and
push
jp
insl
jecxz
cmp
add
sub
lahf
add
loope
push
shlb
sub
jl
and
mov
aas
and
mov
mov
mov
jno
fxch
or
sub
mov
insb
xor
jo
incl
mov
cs
xlat
mov
inc
adc
sub
jp
xlat
lret
add
ljmp
inc
mov
mov
addr16
int
cmpsb
test
sbb
cwtl
repnz
adc
out
add
hlt
pop
iret
adc
xor
inc
icebp
sahf
inc
xchg
aas
scas
jle
std
mov
adc
pop
loope
ret
cmc
pop
in
imul
dec
bound
xchg
imul
lret
or
jns
mov
mov
cwtl
imul
cs
adc
dec
and
inc
jl
std
cli
ss
mov
aas
sub
dec
xchg
ret
test
sbb
push
pop
push
mov
aaa
mov
xchg
add
xchg
repnz
mov
mov
js
xchg
ds
out
sub
cmp
hlt
add
add
popf
mov
push
rol
push
jge
ret
adc
inc
inc
inc
dec
fldcw
mov
sbb
out
xlat
rolb
into
insl
pop
lret
ja
gs
mov
movsb
fldcw
pop
mov
inc
inc
or
pusha
jns
sahf
dec
hlt
lds
lahf
out
shr
dec
lock
shll
in
xor
cmp
fucom
or
jns
dec
gs
in
fisttpl
shrb
rcll
xor
inc
pop
inc
shld
mov
popa
xchg
sbb
popf
pop
adc
jno
fmul
or
sbb
xchg
pop
push
push
fadd
fdivrl
xchg
cmp
and
gs
lret
mov
mov
js
or
xor
jbe
enter
gs
fnstenv
cmp
mov
inc
mov
fsub
mov
inc
dec
orl
mov
mov
dec
stos
nop
and
cmp
mov
mov
dec
stos
mov
dec
add
push
rol
fisubl
jae
mov
push
mov
ljmp
mov
or
push
sti
test
data16
or
pop
add
sub
insl
xchg
mov
mov
cld
gs
enter
into
rcrl
pusha
inc
sbb
xchg
adc
cmc
mov
incb
add
push
adc
adc
scas
in
or
inc
adc
fwait
jae
aaa
insl
dec
xchg
mov
test
in
das
pop
jle
jns
repz
incb
jge
add
mov
addl
sub
mov
lret
push
jbe
mov
cmc
popa
movsl
aaa
sub
mov
es
adc
test
lock
jnp
xchg
in
jns
and
pop
push
push
mov
lea
ss
shrb
insb
sub
add
daa
add
in
call
add
or
jne
ljmp
aad
push
scas
call
daa
xorb
shrl
cld
xor
pop
in
sarb
xchg
cwtl
lods
stos
fstpl
sbb
insb
mov
loopne
sub
dec
sahf
pop
or
xchg
sub
add
dec
mov
movsb
pusha
inc
das
lods
sbb
and
loopne
cwtl
mov
sbb
pop
xor
mov
fs
sub
mov
pop
aad
lea
lret
add
in
pop
lcall
inc
popa
jp
movsl
sub
jmp
or
xchg
inc
stos
add
push
dec
in
iret
mov
ljmp
cvtps2pd
dec
outsb
sub
or
ret
fisubrs
mov
jg
mov
clc
inc
cmpsl
lods
mov
or
adc
lds
in
inc
inc
or
or
movsb
or
test
jno
in
ret
jecxz
pop
or
das
aad
pop
mov
mov
call
mov
faddp
xor
enter
mov
das
cmpsl
js
sub
shll
cs
sub
outsb
mov
lret
aaa
subl
mov
jae
jle
rcrl
int3
mov
pop
scas
stos
inc
sbb
fldl
lods
xlat
xchg
scas
stos
lcall
push
insl
adc
popa
xchg
loope
pop
push
push
jg
sub
je
loop
cmc
cmp
mov
fdivs
sti
mov
sub
inc
sbb
daa
pusha
push
dec
sbb
and
xchg
ret
ljmp
mov
adc
xchg
sbb
imul
mov
ret
test
push
imul
insb
jl
dec
int3
jno
pop
imul
mov
and
call
adc
fmull
cmp
cmpsl
js
jnp
dec
inc
ret
mov
in
mov
in
xor
pop
jnp
add
sahf
cmc
subl
xchg
fbld
xchg
mov
add
int3
fwait
aam
add
jnp
sbb
lds
jg
xchg
mov
js
imul
cli
sub
ljmp
mov
imul
aad
sub
cmp
pusha
pop
sbb
mov
mov
mov
mov
inc
xor
sbb
dec
fisttps
lods
mov
lea
outsl
imul
jnp
test
outsb
and
push
fidivs
add
lea
or
test
mov
fisttpl
imul
or
pop
iret
sub
mov
add
enter
mov
lods
push
js
jle
outsl
push
jb
aaa
mov
lret
jae
xor
mov
lods
repz
mov
xchg
jl
or
rcr
dec
push
lcall
dec
adc
jmp
scas
and
daa
mov
push
test
or
xchg
inc
xchg
shrl
in
mov
mov
leave
mov
mov
jmp
jnp
rcr
enter
ljmp
dec
fldcw
dec
inc
ret
enter
pusha
stos
fnstenv
scas
imul
jl
js
and
pop
addr16
mov
mov
dec
test
enter
push
and
xchg
fsubrs
and
orb
push
aas
movsl
or
mov
xchg
sahf
push
into
repz
cmp
ds
cmpsl
jo
icebp
cmpsl
xchg
mov
inc
push
imul
pop
cmp
pop
fcmovnu
mov
insl
mov
dec
aas
sub
pop
add
jge
push
or
xchg
ja
inc
push
jge
hlt
mov
fwait
int3
push
addl
pop
lock
mov
fcoml
je
test
in
jge
int3
mov
cmp
pop
mov
cltd
fsub
sub
or
dec
fidivs
dec
dec
je
insl
mov
insl
cwtl
jp
jge
sub
cltd
ja
sub
sub
popf
inc
lock
inc
lods
jno
rol
sbb
inc
jo
dec
mov
jns
lods
dec
mov
and
jecxz
mov
or
push
mov
adc
sbb
or
adc
or
cmpsl
lods
lcall
out
imul
or
sub
adc
mov
iret
mov
sti
fisttpl
mov
jbe
fdivr
paddusb
adc
loope
dec
dec
mov
mov
xchg
adc
push
dec
or
pop
dec
insl
je
push
pop
out
cmp
add
icebp
mov
add
es
ficomps
ret
jge
mov
or
movsl
sbb
jp
adc
arpl
mov
cmc
xchg
mov
lcall
dec
test
in
mov
sub
or
mov
dec
mov
dec
js
into
cmp
push
or
cmp
push
jmp
push
jmp
stos
sub
push
dec
out
mov
int3
sbb
push
push
mov
jb
shll
push
xlat
addr16
pop
mov
fldl
xor
inc
mov
xchg
sbb
inc
daa
mov
rorb
mov
in
clc
lret
sub
sub
and
test
lock
mov
xor
cmp
out
out
shll
or
loope
pop
pop
pop
js
mov
xchg
insb
enter
cmp
mov
daa
mov
inc
or
nop
int
insl
push
aam
cmp
cmp
jmp
bound
or
jnp
movsb
shlb
mov
jg
in
jb
int
cmp
mov
cwtl
sub
rorl
mov
mov
or
sbb
orl
xor
xchg
lret
bound
mov
sub
cmp
enter
mov
cmp
and
push
pop
and
xchg
in
cmpsb
mov
xor
out
cmp
push
pop
cmp
mov
add
cltd
fcoml
scas
adc
ret
lahf
mov
push
inc
ror
mov
cltd
loopne
inc
addl
add
adc
dec
xor
icebp
pop
jnp
mov
lcall
mov
cmp
xor
push
out
nop
loop
sub
mov
pop
lcall
lock
fs
data16
xchg
fmulp
pop
loopne
jmp
adc
push
popa
push
sub
jns
cmc
repz
jnp
xchg
dec
enter
cs
cltd
daa
js
adc
xchg
or
cmp
mov
into
outsl
stos
jno
pop
mov
sub
cli
in
inc
pop
movsl
mov
stos
inc
mov
push
sub
cmp
and
insb
jnp
sbbl
xor
scas
mov
add
xchg
stc
mov
movsb
and
rol
pop
xor
dec
cmc
imul
fldt
jge
sti
loop
mov
fdivrs
invd
cmp
mov
cld
sahf
mov
flds
add
or
mov
rolb
pusha
rcl
bound
dec
enter
inc
jg
test
mov
repz
out
pop
imul
cld
dec
push
jle
sbb
insb
test
mov
and
je
xchg
push
fimull
enter
mov
sti
xchg
sbb
mov
je
aad
jnp
mov
jge
sub
aaa
add
mov
sbb
adc
push
jno
xchg
sar
in
and
mov
jecxz
push
or
pop
sbb
adc
add
in
insl
jne
psllw
xchg
cltd
inc
movsb
jb
fwait
jb
xor
cmp
push
sub
in
cltd
dec
and
fcmovne
repz
setae
inc
lods
leave
imul
sbb
insb
mov
xchg
adc
sbb
adc
subb
cmp
mov
pop
push
adc
and
pop
adc
sbb
push
mov
and
scas
out
pop
inc
xchg
fs
and
repz
or
pop
into
xchg
mov
sub
cmp
dec
bswap
jno
push
mov
mov
cmp
cmpsl
xchg
cmp
cli
in
hlt
fadd
sbb
mov
mov
pop
subl
es
pop
or
mov
sub
test
pop
sbb
and
or
add
dec
outsl
jbe
xor
pop
icebp
test
rcl
fistpll
xor
repnz
mov
dec
dec
jmp
mov
out
push
std
xor
push
enter
std
sub
xor
mov
push
dec
push
push
cmp
push
movsb
ds
cmc
subl
fstpl
jns
mov
jnp
pop
pop
mov
stc
xor
xor
cs
sbb
inc
adc
fdivp
push
dec
push
jmp
dec
test
imul
clc
or
push
mov
or
mov
dec
jge
lods
sbb
ja
xchg
das
mov
xor
push
nop
or
bound
cmpsb
cmp
sbbb
push
mov
in
cmpsl
jl
pop
loope
nop
sti
fmul
mov
dec
mov
sti
sbb
repnz
imul
add
mov
cmp
rorl
jb
inc
inc
xchg
out
movsl
mov
dec
je
lret
repnz
ret
daa
std
lds
add
push
xchg
rcrb
popa
and
adc
jns
mov
call
jecxz
and
jge
insl
mov
loope
xor
jne
imul
xor
inc
jbe
nop
inc
lds
aas
clc
pusha
gs
test
push
cmp
jp
hlt
cmp
push
ficomps
adc
mov
xchg
scas
das
out
pcmpgtb
icebp
or
add
mov
dec
xchg
dec
fwait
jns
scas
addr16
cmpsl
fidivrl
pop
je
pushf
adc
push
sbb
xchg
clc
add
and
xchg
icebp
les
xchg
cmpsb
mov
dec
xor
inc
xor
push
decl
xchg
mov
push
in
and
sar
pop
into
mov
loop
data16
rcl
jge
jno
repz
mov
cmp
mov
frstor
xchg
or
js
cmp
adc
adc
daa
cmp
push
xor
xchg
cmp
mov
ret
mov
popf
insl
adc
fldcw
pop
pop
inc
adc
stc
sti
mov
push
ret
gs
in
popw
mov
xchg
int
pop
jns
cmp
xor
sub
pop
int3
and
and
inc
mov
push
inc
out
les
in
mov
out
dec
bts
xorl
cwtl
push
mov
sub
enter
jge
fcoms
mov
sti
out
mov
jo
push
in
jp
pop
inc
cld
or
jbe
popf
inc
xchg
sub
je
add
xchg
xor
cmp
inc
dec
xchg
adc
sub
out
lahf
or
add
xchg
jge
jg
loopne
add
inc
lds
sub
mov
daa
out
lret
xchg
adc
hlt
mov
out
adc
cs
lahf
mov
iret
rol
cmc
mov
xchg
inc
mov
loope
jno
sub
cmp
pop
repnz
jae
cs
cltd
iret
or
imul
jb
sti
jle
pushf
test
dec
in
mov
inc
cmp
mov
jbe
adc
stos
pop
bound
sub
push
pushf
aaa
fadd
movsb
add
xor
stos
in
mov
mov
xchg
sbb
add
enter
sub
insb
mov
cld
mov
out
mov
fnsave
cltd
mov
into
pop
rclb
aad
iret
fcoml
mov
fbstp
jmp
nop
arpl
or
xchg
popl
aad
in
jl
loope
xchg
xchg
push
push
mov
dec
rol
sarl
adc
negl
mov
jle
xor
add
or
mov
jle
add
push
inc
stos
mov
insl
mov
cmp
adc
mov
jmp
leave
dec
dec
nop
lods
inc
orl
jnp
adc
lods
mov
pusha
addb
mov
xor
and
flds
sahf
mov
inc
movsb
fwait
mov
dec
push
jb
outsl
ret
jnp
gs
lcall
imul
movsb
mov
xchg
mov
movsb
rcr
inc
jb
cli
mov
or
cmp
leave
lea
mov
mov
jmp
lods
sbb
mov
push
and
loopne
pusha
pop
dec
mov
sub
mov
loopne
sub
jns
std
sub
movsl
cmp
lds
dec
js
sbb
jle
cmp
push
sbb
cld
loopne
int
pop
inc
lcall
mov
inc
sti
adc
xor
pop
jb
fwait
cwtl
dec
push
stos
sbb
mov
mov
jo
jmp
cmp
ds
mov
arpl
add
lock
cmp
hlt
mov
jbe
inc
shlb
cltd
cmc
insb
fs
adc
or
jnp
mov
scas
add
dec
mov
xchg
in
mov
push
enter
adc
nop
sbb
hlt
out
lods
push
mov
xchg
popaw
dec
inc
xchg
or
cmp
jnp
sbbb
jp
aas
pusha
push
lods
enter
sarl
test
popa
push
push
loop
inc
in
rcl
mov
jle
aas
jmp
mov
mov
mov
les
mov
ss
in
fcompl
aas
push
dec
pop
decl
inc
add
subl
popa
cltd
ret
mov
iret
dec
ret
xchg
mov
xchg
test
add
mov
inc
sub
xor
fnstcw
insb
pop
aas
xor
cli
pop
xor
cmp
ret
add
out
pop
jno
fnsave
or
mov
ret
movsl
add
pop
inc
inc
jo
aas
mov
jno
dec
aad
cwtl
xchg
cld
add
fstpl
or
in
jg
mov
rorb
push
ja
out
mov
and
and
push
mov
inc
push
and
fsubrs
dec
cmp
loop
int
sbb
sub
cmp
push
jp
dec
cmc
jle
jp
movsb
inc
js
fwait
cmp
inc
int
mov
pop
test
out
adc
dec
test
cwtl
stos
int3
inc
dec
adc
sbb
insl
cmp
mov
xor
sbb
int
andb
push
jge
imul
cwtl
test
inc
xor
out
dec
popf
jbe
adc
fisubl
scas
mov
into
cltd
pop
pop
pushf
mov
pop
xchg
lret
xchg
int3
cmp
add
sar
int
cmp
mul
ficoml
loop
xchg
inc
mov
mov
fs
add
in
dec
insb
sbb
iret
aaa
sbb
xchg
inc
mov
dec
imul
ret
jns
rcrb
fs
cmp
mov
jo
ret
sub
sub
clc
add
pop
ss
in
or
divb
mov
mov
ret
dec
and
ret
leave
cmp
xchg
xchg
lds
xchg
adcb
daa
xchg
inc
aam
adcb
push
lods
adc
fidivl
repnz
aas
pop
xchg
mov
test
lar
dec
pushf
inc
dec
and
pop
push
imul
mov
fcomps
lds
adc
mov
mov
frstpm(287
or
fs
aas
mov
loop
bound
sub
lea
call
sbbb
mov
test
aam
cmp
fwait
or
add
pop
dec
push
sub
sub
shll
sahf
pusha
loope
addl
fadds
jns
lcall
aas
xchg
rolb
jae
mov
and
jmp
in
loopne
stos
clc
jp
push
ret
push
call
cmp
test
imul
jae
dec
inc
xor
jo
xchg
insl
rorl
in
pop
sti
inc
sbb
rcrl
xor
cmp
adc
cmc
add
jmp
or
int
pop
push
jae
push
test
ret
aas
std
in
inc
sbb
xor
push
xor
sub
xchg
add
ret
push
add
js
sub
mov
cmc
out
lea
test
xchg
push
add
xchg
inc
cmpsb
je
add
and
mov
push
or
jge
xchg
xchg
dec
and
ret
enter
ret
lret
add
andb
inc
das
add
mov
or
daa
cmc
stos
int
push
push
cs
jg
jns
dec
add
addr16
mov
inc
cmp
add
fcomps
pop
es
cmpsb
sub
mov
push
repz
fiadds
sti
pop
popf
sub
adc
jne
cmp
inc
gs
dec
lss
into
dec
sahf
into
mov
xorb
cmp
rcrb
sub
fldt
enter
enter
push
jg
scas
mov
notl
adc
test
dec
jb
pop
stc
adc
fs
add
and
mov
cli
mov
cmp
cmpsl
or
add
mov
dec
cmp
cmp
sub
cmc
mov
cmp
xchg
pop
fisubrl
mov
inc
push
loope
adc
xchg
jmp
jbe
stc
jno
mov
xchg
lds
jg
and
push
pop
cmp
cmp
mov
rcrl
sub
ret
aaa
cmpsl
test
sbb
mov
lock
jg
ss
sbb
rorb
jae
sbbl
aad
call
dec
iret
lods
sbbb
cmp
cli
loop
adc
ret
mov
pop
mov
xor
enter
movsb
mov
inc
pop
adc
stos
gs
out
mov
std
adc
jge
jmp
mov
ret
pop
sbb
popa
cwtl
jns
dec
sti
mov
js
pop
popf
shlb
mov
xchg
push
jmp
sahf
les
popa
rep
femms
popf
movsl
arpl
stos
pop
pop
fucom
ret
pop
fmull
push
sbb
mov
jmp
xchg
fwait
pop
push
decb
push
popf
xlat
inc
push
rorl
cltd
or
inc
add
add
incb
cmp
cmpl
mov
xlat
mov
popa
push
movsb
out
xor
mov
fs
lods
popa
int
in
cmpsb
xchg
arpl
mov
and
pushf
dec
jmp
fstps
xor
pop
or
outsl
cmc
into
fucomi
daa
jbe
aas
fcom
push
addr16
or
lock
fcomp
xchg
mov
inc
push
xadd
cmp
pop
and
dec
xor
jle
call
pop
cmp
or
push
daa
popf
cmc
loop
je
stos
jg
and
mov
pushf
pushf
cmp
inc
mov
xchg
inc
mov
int3
sbb
mov
repnz
add
mov
pop
mov
movsl
call
nop
adc
lcall
inc
mov
out
jge
push
cmp
pop
inc
nop
inc
mov
js
xor
push
xor
ja
std
inc
mov
lock
cmpsl
pop
and
inc
and
test
xor
enter
cli
cmp
lea
lea
sub
mov
xor
orb
fnstcw
pop
ret
mov
lds
notb
and
dec
insb
dec
test
int3
pop
call
and
inc
test
add
outsb
jnp
test
inc
movsb
cmp
in
into
into
add
xlat
insb
js
xor
or
inc
lret
sbb
cmpl
pop
mov
fwait
xchg
sti
std
mov
roll
push
repz
cmp
in
push
pop
daa
push
shll
ret
xchg
xor
fsubl
inc
lods
scas
mov
cwtl
and
jle
adc
inc
insl
repnz
dec
jl
cmp
lds
cli
fnstcw
imul
xor
mov
test
shl
jb
xchg
adc
sbb
xor
rol
ret
bound
jo
and
xor
fildll
adc
stc
inc
mov
fwait
pop
out
and
clc
mov
daa
and
and
out
in
nop
mov
fsubrp
lods
fmul
xorb
fsubr
insb
mov
fcmovnbe
movsb
mov
enter
push
sbb
or
shlb
cmp
xchg
cmc
cwtl
inc
ss
mov
add
je
xor
iret
and
push
or
cmc
outsb
stos
mov
inc
sbb
lahf
lods
xchg
mov
inc
cmp
sahf
rcr
xor
xchg
bound
cmp
sub
iret
mov
js
dec
int
inc
mov
int
sbb
clc
icebp
movsb
movsb
pop
pop
cmp
cmp
xchg
mov
cmc
cs
repz
call
lods
dec
xor
das
cmp
and
jge
pop
dec
jmp
sub
jl
adc
and
adc
pusha
mov
jns
mov
xor
push
scas
mov
ret
ret
adc
ret
pop
bound
popa
loopne
adc
testl
pop
mov
sub
adc
mov
imul
addr16
rol
orl
nop
movsb
lret
mov
loope
or
fs
rclb
cmp
xlat
or
test
lret
cmpb
rol
mov
mov
dec
xchg
mov
or
pop
cmp
enter
inc
insb
ret
int
add
dec
mov
add
pop
inc
push
arpl
or
dec
adc
popl
sbb
out
rcl
negl
or
jnp
lahf
mov
iret
daa
popf
mov
stos
data16
mov
rorl
cmp
sub
add
pop
sbb
test
je
mov
push
xlat
movsb
sbb
push
pop
sub
dec
outsl
adc
sub
stc
sbb
xchg
jle
cmp
xchg
inc
xor
stos
cwtl
pop
add
js
leave
movsl
mov
stos
or
popf
and
dec
push
cmp
lods
ljmp
mov
mov
jo
jo
addr16
icebp
pop
jp
fildl
insb
adc
lret
aad
cli
cli
jae
popa
adc
push
push
mov
xlat
push
arpl
das
out
push
test
xchg
out
outsb
loop
into
lret
jbe
jp
aad
mov
jne
outsl
movsl
out
xchg
arpl
lods
addr16
ss
out
pushf
or
xchg
mov
xchg
inc
inc
pusha
outsl
or
in
or
or
jbe
mov
jo
mov
int3
outsl
lds
mov
mov
jbe
or
fists
in
push
mov
dec
enter
lcall
lods
cltd
xor
out
pop
adc
cmp
push
shrl
ret
outsb
jno
sbb
adc
mov
jnp
adc
add
jecxz
xchg
jnp
xchg
pop
cmp
jmp
adc
sbb
imul
adc
sub
cmpsb
sub
xor
xchg
and
add
add
add
jle
inc
orl
push
cld
inc
cltd
outsl
stos
inc
pushf
xchg
pushf
loop
pop
jg
shlb
fisttpll
scas
aam
xchg
or
cmp
sti
pushf
push
push
add
rep
aas
outsl
data16
repnz
pop
sub
lret
jbe
cmpl
mov
inc
arpl
sub
pop
loopne
mov
das
test
hlt
push
movsb
xor
pop
xor
sub
pop
lods
mov
aam
mov
xor
push
es
or
add
push
push
rol
sub
mov
pushf
xchg
xor
lods
les
inc
pop
inc
rol
lret
mov
ror
imul
inc
push
pop
scas
loope
dec
imul
adc
cltd
add
lea
test
add
mov
cmpsl
pop
pop
mov
or
das
out
sbb
ss
imul
cli
notb
push
xchg
pop
fsts
push
ljmp
ss
iret
fsubs
jg
sti
mov
push
sbb
sbb
jge
divb
and
dec
mov
packuswb
xchg
addb
rcll
dec
cmp
mov
lods
push
mov
es
inc
clc
dec
into
mov
cmpl
bound
inc
dec
fildll
jge
inc
xchg
add
and
push
dec
mov
je
je
fcoml
jns
addr16
xchg
inc
mov
into
push
mov
lcall
sub
cmp
faddl
pop
and
mov
pop
mov
in
dec
cmpl
cmpsb
sub
jl
jle
lods
rol
cmp
or
dec
push
jg
or
test
or
adc
aaa
hlt
inc
xlat
jecxz
rcr
adcb
pop
test
and
hlt
add
repz
jmp
sub
push
mov
out
movsl
stos
mov
mov
mov
cli
loopne
lds
add
push
fstpt
push
in
and
loop
fsubs
scas
lahf
lcall
push
pushf
mov
call
jge
jmp
xchg
mov
mov
icebp
dec
cmp
adc
push
dec
jb
inc
push
push
mov
cmpb
sub
add
cltd
lret
in
mov
dec
imul
pushf
and
add
int3
negl
arpl
sbb
mov
sub
sbb
push
pushf
sub
into
dec
add
cmp
aam
sub
int
xchg
cmc
dec
fdivs
call
shrb
inc
and
mov
sti
inc
hlt
int3
hlt
adc
xchg
inc
or
lods
and
leave
addr16
hlt
or
cmp
hlt
fistpll
or
lock
xlat
and
xchg
aas
jl
inc
mov
mov
int3
cwtl
test
sbb
mov
loope
rcl
dec
gs
and
jge
lods
pop
mov
jmp
das
mov
ss
cltd
mov
test
aam
sub
sbb
loopne
mov
scas
repnz
and
aas
push
mov
jbe
sbb
sbb
xor
ds
inc
adc
mov
pop
fcmovb
pop
sub
push
std
mov
mulb
mov
xor
mov
cmp
arpl
aad
fimull
cmpsl
ljmp
mov
push
xchg
repnz
lds
mov
inc
popa
mov
das
jecxz
pop
enter
incb
pop
sub
fists
add
sub
fpatan
xor
cmp
lods
adc
push
icebp
mov
sub
inc
enter
add
lea
popf
cmp
addr16
insl
mov
pop
mov
dec
nop
adc
or
aad
test
jns
fmul
adc
scas
popa
insl
xorl
mov
sub
push
inc
push
outsb
mov
aad
mov
push
sub
jl
jae
cmp
dec
test
add
mov
adc
jbe
adc
push
lds
fstpl
inc
mov
jnp
fidivl
mov
loop
adc
aaa
jns
pop
std
add
shlb
mov
or
fdivl
negl
test
and
clc
shlb
push
mov
cmp
lret
leave
inc
repz
dec
xchg
and
shl
xor
movsb
or
outsb
popa
enter
fstps
enter
ja
repz
mov
movsl
or
leave
add
aam
sbb
lea
or
jb
mov
mov
test
mov
inc
push
add
adc
push
movsb
mov
ret
jne
jbe
fwait
jle
loopne
or
rcrb
mov
mov
nop
xor
hlt
icebp
lret
mov
jae
movsl
aad
stos
cmp
jge
add
in
shrl
fsubrl
or
pop
mov
sbb
cmp
jp
aad
js
adc
xchg
mov
mov
inc
xchg
das
out
mov
leave
mov
stc
adc
popf
mov
ja
xor
arpl
xchg
mov
sar
aaa
ss
mov
mov
mov
sbb
cmp
push
std
sub
loopne
dec
mov
lods
adc
cmpsl
pop
test
std
mov
out
test
xor
jle
sbb
lock
std
mov
ja
adc
aam
mov
fwait
fwait
dec
xchg
cmc
movsl
inc
adc
xchg
pop
int3
addr16
pushf
xchg
pop
fiadds
or
cmp
cwtl
jle
mov
mov
mov
imul
dec
sub
ljmp
rolb
insb
int
mov
leave
add
scas
push
ret
imul
mov
hlt
cmp
xor
imul
push
stos
xchg
aad
mov
cli
frstor
out
cs
cmp
out
add
cmp
sbb
cld
add
in
daa
pop
stc
pop
cmp
sbb
add
push
in
cmpsb
mov
push
mov
mov
into
pop
mov
nop
shl
imul
pop
jge
sub
inc
xor
rolb
mov
adc
xchg
test
test
ret
mov
pushf
adc
xchg
xchg
add
jnp
nop
inc
das
pushf
jns
fcoml
sub
dec
sub
or
ficompl
leave
in
cwtl
inc
jle
into
add
pextrw
test
add
jo
dec
xchg
repz
scas
inc
das
lea
add
sbb
mov
arpl
add
stos
xchg
int3
jnp
nop
jmp
rcl
movsl
das
ja
fstpt
pop
mov
in
pusha
pop
repz
jns
mov
dec
inc
mov
call
shl
out
daa
push
xor
mov
pop
and
sar
mov
xchg
test
testb
lods
rolb
mov
sub
push
xchg
adc
sub
lods
ja
xchg
sub
lds
out
daa
fiaddl
enter
rol
inc
adc
and
jge
mov
ficomps
mov
pop
fwait
xchg
cs
cmp
aas
test
mov
pop
cld
jmp
mov
sbb
jl
sti
cltd
mov
andl
or
aam
dec
rorb
movsb
into
lcall
cmpsl
icebp
push
loop
xchg
pop
nop
addr16
hlt
pop
inc
sub
cmc
out
imul
or
aas
adc
sbb
loope,pn
jmp
jbe
repz
in
js
ret
scas
ljmp
ror
fwait
xlat
test
in
aas
hlt
cmp
dec
popa
pusha
xor
arpl
pop
mov
pusha
dec
dec
addr16
fdivrl
mov
cmp
adc
mov
in
jl
add
xchg
mov
cmp
sbb
stos
cmc
or
mov
cwtl
mov
mov
cwtl
cmpsl
xchg
xchg
pop
rolb
and
cmp
das
mov
jno
lock
arpl
jp
jge
jmp
inc
and
cs
repz
fpatan
jge
cmp
stos
fwait
rcr
adc
xor
xchg
jg
pushf
jae
sub
dec
insb
cli
adc
mov
scas
xchg
fwait
sti
adc
pop
div
in
jge
leave
ja
jae
push
pop
out
xor
test
out
ja
mov
sti
dec
xor
ja
les
and
daa
rol
jno
ss
jle
mov
daa
mov
or
jne
movsl
mov
or
imul
pop
sub
stos
mov
loope
adcb
fstpt
mov
push
cmp
sti
cmp
jmp
mov
loop
fildl
push
cmc
inc
xor
xchg
sub
flds
mov
push
inc
cmp
inc
gs
nop
and
push
mov
mov
mov
nop
xor
out
test
fists
cli
adc
xchg
int
xlat
adc
or
cmp
lret
sbb
push
add
cmpsb
jae
inc
dec
inc
test
aas
xchg
sub
leave
pop
jle
les
rorl
sahf
insb
xchg
sbb
mov
adc
mov
es
inc
dec
cmpb
jb
or
inc
stos
cld
push
das
push
int3
out
sbbb
popa
cltd
xchg
and
sarb
mov
ds
inc
jge
xchg
icebp
xchg
mov
xchg
nop
addl
cmp
mov
cltd
hlt
pop
xor
aam
add
pop
push
out
jns
pop
or
jp
mov
icebp
roll
jg
jne
outsl
out
xor
xchg
mov
push
mov
mov
sbb
jge
rcll
jmp
lods
sub
pop
stos
into
xchg
out
add
dec
loopne
or
andl
lret
testb
out
xchg
hlt
pop
mov
and
pop
or
sub
movsl
mov
pop
sbb
loop
call
addb
cltd
push
movsb
fistps
xchg
in
insb
into
nop
notb
fadds
jno
test
jo
lcall
push
das
stc
mov
xchg
outsl
call
shlb
dec
rorb
push
test
arpl
test
push
les
or
bound
or
jg
xlat
pop
pop
fdivs
test
mov
xchg
adc
les
aad
inc
add
xchg
pusha
dec
lods
in
inc
push
loop
mov
cli
push
mov
xor
mov
mov
and
inc
adc
or
ss
movsb
pop
pop
ret
lock
loope
inc
arpl
les
sub
popf
mov
xchg
jge
cmp
mov
sub
lret
mov
jno
aaa
mov
mov
add
js
ljmp
inc
inc
dec
mov
adc
pop
mov
sti
xchg
mov
cld
das
jg
les
sti
mov
dec
fs
decb
stos
inc
sub
fdivrl
int
mov
jns
lahf
add
push
adc
add
loope
test
sti
test
cmpsb
fs
fiaddl
pop
jg
int
sar
and
clc
ja
imul
pop
cmp
dec
in
sub
mov
lcall
pop
jle
pop
insb
roll
fildll
sub
das
sub
ficoms
and
xchg
daa
cmpsl
pusha
into
inc
sbb
fwait
ja
fildll
push
dec
rolb
fucomp
test
loope
pop
leave
shrl
add
mov
xor
cmp
sub
dec
jo
mov
mov
loop
pop
hlt
or
mov
or
or
mov
push
cs
loope
sbb
push
pop
mov
push
aaa
outsb
test
xchg
scas
xchg
movsb
hlt
into
insb
shlb
fnstsw
and
mov
xor
les
lcall
mov
movsb
loope
sbb
pop
xchg
xchg
int
sbb
nop
sub
add
jno
ret
dec
ds
int3
push
insl
and
fsubl
cld
or
int
rclb
cmp
test
cmp
inc
inc
or
stos
out
ret
jg
mov
sbb
mov
add
out
ret
inc
and
mov
loopne
cmpsl
fiaddl
hlt
mov
dec
repnz
repz
stos
inc
xchg
push
enter
push
cmp
out
mov
jecxz
pop
or
icebp
xchg
in
cmp
rolb
xor
adc
test
jbe
jae
repz
jg
rclb
pop
xor
lds
mov
test
sbb
lcall
mov
mov
negb
xor
sti
fs
pushf
rcrb
repz
call
cmpsl
loope
movsb
call
sbbl
add
negb
icebp
xchg
cmp
push
or
jle
lret
dec
into
xchg
std
lret
sbb
and
add
ret
sub
jl
xlat
jle
inc
mov
dec
sub
xchg
popa
push
xchg
cld
xor
jno
or
mov
push
andl
int3
or
rep
pop
pop
add
jmp
and
or
lcall
cmpsb
jo
test
jp
or
arpl
inc
jg
add
cld
mov
jns
jb
rcrl
mov
bound
or
mov
lret
push
sbb
sti
outsb
inc
mov
sub
pop
popf
mov
xchg
dec
add
mov
mov
sbb
add
mov
sbb
dec
rdpmc
fisttps
sub
je
or
jle
sbb
pop
iret
mov
aaa
mov
dec
mov
sub
mov
ja
push
push
xor
test
addb
inc
add
inc
std
daa
outsb
jo
push
jg
stos
dec
xchg
repnz
jg
sti
cwtl
push
cmp
outsl
mov
jnp
push
pop
xlat
clc
orb
pop
jno
lods
lods
test
bound
pop
int3
in
cmp
hlt
pop
mov
and
mov
stos
imul
fidivs
test
fmuls
push
sub
test
mov
sub
orl
sti
mov
or
int3
jae
mov
push
xor
pop
mov
fsubl
enter
testb
jns
cmp
jg
mov
sub
aad
jecxz
int3
inc
fisubs
cmp
rolb
or
insl
adc
outsb
push
mov
ljmp
inc
inc
out
mov
cmp
sub
imul
pop
lods
imul
lods
mov
dec
inc
push
imul
pop
jno
lods
nop
add
xor
or
cmp
lahf
leave
out
sub
pop
idivb
cmp
fsubs
xor
mov
aas
mov
fisttpll
xor
mov
lds
aas
fmuls
test
mov
sbb
fisubrl
mov
sahf
dec
aad
imul
push
cmpsl
cmp
lret
subb
cmp
ljmp
cmp
mov
lret
ret
call
in
leave
mov
adc
inc
popa
jl
test
adcl
push
fbld
or
dec
jmp
test
addl
loop
pop
sbb
ret
into
ret
push
pop
les
sbb
push
shl
jne
fs
clc
mov
in
or
jnp
fwait
sti
iret
repnz
dec
push
popf
cmp
sub
sbb
movsb
push
xchg
aaa
icebp
lods
adc
fbld
xchg
or
adc
popf
xchg
jb
cs
xlat
and
mov
loop
cmp
sub
mov
mov
and
push
push
ret
sti
sbb
lea
pop
sahf
push
xor
ja
in
or
push
sbb
lods
inc
stc
fcmovu
cmp
cmp
and
cmp
loopne
jl
push
jmp
mov
push
subb
iret
jo
add
iret
cmp
mov
inc
sbb
cli
fs
jns
lock
lods
pop
push
orl
sub
cwtl
mov
mov
fbld
mov
mov
cmp
cs
mov
sahf
dec
into
stos
stos
div
shlb
dec
int
sub
int
push
out
jb
subb
stos
mov
pop
push
loop
jo
push
adc
iret
sbb
push
int
xor
add
test
pop
or
ret
je
movsb
out
call
movsl
jecxz
les
mov
push
xchg
add
sbb
bound
cmpsb
in
inc
add
addr16
cmp
popa
add
pop
dec
mov
les
adc
pushf
shll
ss
xchg
and
test
movsl
mov
dec
push
push
cwtl
imul
dec
sub
les
je
pop
popa
mov
mov
jnp
mov
or
test
out
or
pop
and
cld
pop
or
outsl
cmp
mov
cmp
add
sbb
int
out
into
lret
das
sti
sbb
imul
andb
sbb
or
or
pop
cld
inc
inc
notb
cmp
jno
ret
pop
out
mov
lods
dec
mov
orl
das
push
jle
add
cvtps2pd
push
mov
jmp
daa
leave
imul
inc
and
xor
dec
mov
push
sti
or
inc
mov
fs
fsts
cmpb
dec
imul
rorl
fildll
xor
pop
xlat
xchg
fists
mov
dec
xor
sub
mov
mov
mov
ficoms
fdivl
sbb
xlat
jne
lods
stc
in
bound
jne
mov
mov
pop
imul
aas
les
lahf
xor
jo
fsts
sarl
sub
dec
cmpsl
cld
jmp
push
sub
sbb
sub
jns
sub
pop
lods
or
mov
pop
inc
fsubrl
shll
repnz
shll
outsb
es
xor
mov
xor
dec
push
insl
cmp
push
imul
cli
inc
lret
out
mov
addb
mov
jge
fsts
icebp
and
ss
rcr
sub
popf
adc
dec
rcrb
xor
lcall
sbb
xor
das
stos
loope
mov
sbb
aaa
jg
add
mov
push
xor
mov
xchg
inc
bound
pop
adc
cmp
xchg
adc
cwtl
cltd
adc
cld
cmc
lods
add
out
adc
jno
cltd
outsl
xlat
cs
push
adc
mov
cld
into
and
shlb
test
lock
aam
ficomps
mov
sub
int3
jmp
or
das
test
loope
push
cld
fstpt
sar
pusha
mov
adc
push
cmc
call
add
pop
cmpl
mov
or
pusha
dec
aam
sbb
addr16
inc
lods
or
mov
cs
xor
sub
push
pop
pop
dec
ficoml
sbbl
cs
xchg
or
orl
sub
and
adc
jmp
and
repnz
pop
ss
mov
rcrb
sub
push
stc
add
mov
push
inc
sbb
fcoml
pop
sub
pop
cmpsb
icebp
adc
dec
push
bound
divps
ja
sub
and
fstpl
sbb
popf
jns
enter
mov
ds
xor
jns
and
cli
dec
cmpsl
pop
sbb
ss
jge
dec
inc
pop
add
roll
pop
and
movsb
sub
repz
je
arpl
mov
cmc
js
cli
pop
aas
test
jmp
mov
sahf
subb
fucom
dec
popa
adc
mov
adc
aaa
jl
rcll
ret
rcr
inc
fstpt
inc
and
or
xor
movsl
push
push
sbb
sahf
pop
mov
enter
push
sbb
pop
lods
iret
mov
fxch
repnz
push
mov
add
push
pop
xor
shll
call
add
pusha
imul
mov
fdivrl
push
push
push
lods
dec
and
arpl
clc
jl
addr16
pop
sub
pushf
or
sbb
mov
pop
mov
shrb
mov
sub
clc
dec
mov
das
dec
bound
bnd
xor
xor
mov
mov
and
mov
mov
daa
cmpsl
int
inc
xchg
inc
imul
fwait
adc
lock
lcall
mov
and
lret
jo
jle
jmp
cmp
mov
fistpl
cmc
rcrl
lret
adc
cmp
inc
nop
cltd
fistl
rorl
cmp
lret
push
or
xchg
add
adc
push
push
fwait
cmpsl
dec
jp
loop
pusha
mov
aad
dec
sub
in
roll
dec
in
cmp
pop
testl
cmc
leave
mov
cmc
fdivs
lahf
inc
in
adc
push
xorl
inc
std
imul
pop
push
clc
testb
mov
xorb
mov
stos
inc
jb
dec
dec
adc
ror
inc
pushfw
xchg
xor
xchg
sahf
gs
mov
sub
test
nop
add
loop
xchg
and
lret
or
movsb
or
lock
pop
cmp
jb
shr
in
mov
enter
imul
aas
pushf
mov
mov
xchg
lcall
in
dec
xor
pushf
mov
xchg
jecxz
data16
xchg
mov
ficomps
ret
imul
sbb
dec
mov
dec
dec
cwtl
dec
cmpsb
jl
daa
cmc
sti
cmpsl
test
push
movsb
adc
push
or
fisttpl
push
es
dec
call
std
cld
push
sti
add
out
lcall
adc
in
push
lahf
in
aas
pusha
or
xchg
imul
aad
mov
popa
int
aas
dec
loope
subl
push
dec
pavgb
jns
cld
ret
cmpsb
jp
or
das
add
sbb
out
xchg
mov
push
aas
repz
ret
ljmp
or
movsl
sub
sub
push
nop
sbb
rcrb
xchg
cld
jb
jecxz
jg
out
xchg
not
adc
dec
pop
dec
sub
add
neg
scas
dec
test
or
dec
sub
or
mov
pop
cmc
ret
rorb
inc
mov
icebp
pop
cmpsl
pushf
test
and
arpl
mov
pushl
cmp
into
cwtl
cmp
pop
sti
inc
mov
adc
mov
icebp
call
cmp
sarl
imul
imul
and
mov
imul
sub
popa
dec
mov
enter
dec
testl
mov
ret
aad
clc
mov
ficompl
std
movsl
xchg
dec
ret
push
mov
cli
movsb
std
fnsave
decb
sub
jmp
or
dec
mov
or
pusha
and
in
xchg
or
sub
pop
data16
dec
pop
jne
dec
push
push
fbstp
ds
xchg
std
sbb
leave
jmp
and
push
dec
cmp
cmp
cmp
push
shll
jg
cmpsb
inc
out
mov
in
xchg
jl
jg
test
and
push
push
bound
enter
pop
fldt
mov
stos
pop
in
lret
stos
or
mov
xor
push
fs
sbb
xchg
xchg
in
bound
stos
leave
mov
jl
cmp
out
sti
lcall
xchg
jno
xor
mov
rolb
xchg
imul
cld
push
lock
or
jge
rcrl
rolb
push
aad
ret
mov
jae
push
sbb
mov
fcomp
fistpll
subb
pop
xor
cld
outsl
and
int
loope
push
or
mov
lock
lods
mov
orb
scas
mov
mov
mov
and
psubb
fstps
aam
rcrb
lret
pushf
or
or
jmp
repz
jns
mov
mov
ficoms
dec
sub
out
imul
enter
cmpsb
or
add
mov
jecxz
fwait
sub
dec
es
ds
hlt
add
dec
mov
pop
mov
cli
lods
cmp
xor
inc
sarb
orb
filds
adc
dec
lods
push
adc
sbb
adc
movsl
pushf
xor
rclb
or
jno
das
inc
stos
add
insb
push
ret
cltd
ja
mov
xchg
cmp
aad
pop
mov
jnp
xchg
xchg
aam
fmuls
mulb
inc
out
mov
push
cmp
sarb
sbb
xchg
sbb
inc
in
mov
test
les
mov
cmpsl
lret
inc
aam
sbb
push
into
in
scas
jg
mov
push
push
fimull
lock
mov
outsb
js
stc
sub
fidivl
data16
sub
jle
xor
fstp
gs
int
insl
push
scas
in
or
cmpsl
sub
adc
out
sbbb
add
sub
adc
cmp
dec
pushf
jp
fcompl
js
sti
das
pop
pop
and
cmp
pop
and
cmp
and
mov
ficoms
lods
add
inc
push
inc
add
cmp
ja
pop
inc
ror
dec
loope
pop
jp
ret
imul
faddl
mov
pusha
decl
jb
repz
pop
inc
cmp
jnp
clc
inc
mov
jns
cltd
jne
inc
sub
incb
nop
iret
inc
bound
cmpb
aas
into
sub
inc
dec
and
fadd
andb
xchg
movsb
and
xchg
lea
stc
repnz
das
insb
outsl
adc
ss
mov
out
aas
lret
and
xchg
into
and
or
mov
cli
jne
pop
jae
sub
adc
mov
lods
lods
adc
pop
pop
pop
int3
jno
pusha
push
movsb
fnstenv
mov
sbb
and
jbe
outsl
dec
cwtl
cwtl
pusha
sub
scas
ja
es
or
cmpsl
pop
int
cltd
aad
jo
push
movsl
xchg
arpl
push
push
push
xlat
xchg
test
mov
in
ficoml
cmp
dec
pop
repnz
inc
inc
dec
push
mov
xchg
mov
test
nop
arpl
rolb
xchg
mov
mov
dec
lods
pop
sub
loop
inc
xlat
std
xor
xchg
stos
nop
fstps
loop
cltd
mov
cmp
movups
int3
dec
sti
mov
inc
repz
bound
cmp
loope
push
ficoms
mov
les
cmp
int3
dec
and
jecxz
loopne
shlb
stos
lret
addl
cmc
push
sub
xor
imul
cmp
or
pushf
ror
ret
sub
mov
fstl
popa
aam
pop
jp
ret
jge
sub
sahf
xchg
mov
push
cli
inc
and
mov
add
fisubl
sti
insb
cs
fdivrl
push
loop
fs
add
sbb
aad
mov
rclb
xchg
orl
cmp
dec
scas
fmuls
cmp
push
push
push
push
mov
jmp
adc
leave
sbb
cmp
adc
ret
cmc
pop
jno
inc
dec
inc
push
pop
loope
lea
xor
cmpsb
sub
mov
orl
xchg
pusha
aad
dec
cmc
mov
mov
cli
ds
enter
xor
push
mov
and
adc
add
repz
mov
dec
mov
sub
xchg
inc
insb
popf
inc
push
out
pop
xchg
enter
into
adc
sbb
xchg
nop
lret
movsl
stos
stc
cmp
mov
cmc
cli
popf
push
lahf
mov
jbe
loope
jp
adc
or
xor
pop
fiadds
jg
inc
push
pop
sbb
clc
iret
dec
sub
sub
pop
shlb
imulb
jmp
push
imul
es
push
in
and
in
cmp
sub
mov
fstp
or
int3
addl
aad
pop
lea
icebp
shrb
mov
cmp
lea
push
push
pop
xchg
cmp
in
aad
jb
sbb
add
xor
push
mov
mov
jle
xor
xchg
sbb
pop
andb
push
sbb
push
pop
sbb
movsl
add
mov
or
mov
pop
inc
jl
cmpsl
dec
sbb
dec
jecxz
ds
and
movsl
xchg
lds
cmpsl
sbb
stos
int
nop
mov
cs
cmpsb
cli
dec
rorb
insb
dec
cltd
cmp
mov
lea
mov
lret
jbe
fwait
stos
jp
imul
fiadds
jg
out
pop
inc
inc
sub
xchg
addb
mov
push
jg
add
sahf
nop
push
sbb
popa
sbb
scas
push
sahf
mov
lock
cmc
dec
aas
push
int3
pop
andb
xchg
pop
add
xchg
or
mov
jmp
mov
pop
mov
rcrl
lahf
mov
jle
push
dec
or
int3
js
bound
add
cmpsb
sub
add
aam
pop
lret
fucomip
fsubp
hlt
xor
mov
rorb
out
jnp
cmc
loop
outsb
lods
mov
les
call
dec
add
sahf
iret
enter
ljmp
xor
pushf
cmp
nop
adc
jo
xchg
pop
jge
mov
lret
add
dec
pop
imul
loope
ret
dec
mov
inc
stos
xchg
lea
sti
cmc
inc
add
cmc
pop
cmc
or
lret
dec
int
stos
mov
jb
pop
rorl
loope
add
loopne
ljmp
jmp
pushf
pop
lock
aas
shlb
pop
or
dec
mov
and
pop
xor
jno
sar
in
sti
or
loop
stc
cmc
xor
and
inc
stos
test
pop
ja
incl
dec
dec
lods
add
mov
add
mov
mov
cmc
lods
lret
mov
xchg
pusha
ret
lock
sti
and
adcb
or
mul
shl
inc
jg
add
bound
pop
pop
out
mov
and
les
cli
call
testb
pop
inc
js
stos
js
and
mov
inc
mov
and
mov
mov
cmpsl
je
and
push
cmp
leave
out
adc
js
xchg
jns
sbb
xor
mov
xchg
xchg
test
mov
xchg
mov
sbb
out
push
cmp
ja
cmp
inc
xor
lret
ss
add
fldl
or
imul
aad
jmp
jbe
movsb
xchg
ss
pop
dec
test
cmp
inc
jp
movsl
add
xor
push
ss
decl
adc
mov
xor
sbb
xchg
sbb
in
mov
bound
cmp
pop
test
inc
jecxz
mov
jp
jl
xchg
cmp
scas
xchg
test
mov
sub
data16
insb
dec
test
andl
or
or
cmpl
shlb
mov
jb
enter
cmp
shrb
jecxz
int
stos
sub
sti
movsb
outsl
dec
push
lods
clc
add
cli
stos
in
leave
sarb
cmc
ret
push
into
pop
stos
xchg
jge
repnz
mov
sbb
xchg
test
popf
or
je
or
ja
bound
add
cmpsl
test
pop
mov
mov
sub
jmp
inc
int3
mov
sub
imulb
mov
sbb
mov
adc
sub
jae
inc
xor
les
inc
adc
xor
pop
pop
inc
add
adc
mov
sbb
adcl
out
je
mov
add
fwait
dec
and
int3
push
pop
and
xchg
sub
add
cmp
inc
ficoms
cmp
cmp
inc
test
sub
loope
xchg
sub
inc
and
stc
enter
sub
jae
jnp
subl
jge
movsb
loope
lods
nop
adc
sbb
mov
xchg
lret
cmp
out
jp
jge
pop
cmc
lret
and
fcmove
cmpsb
loop
incb
je
aam
jecxz
mov
stos
xorl
movsl
outsl
sbb
test
jb
mov
jg
jg
shll
jne
add
sub
sub
jno
out
xlat
mov
sahf
in
add
fdiv
fcoms
and
aas
mov
push
mov
hlt
jg
decl
loope
ds
sti
sub
push
ret
jecxz
bound
test
mov
ds
scas
insb
inc
jo
mov
pop
pop
jnp
and
push
adc
jne
mov
sub
stc
stos
imulb
das
mov
jnp
inc
mov
test
jnp
icebp
filds
xchg
into
ja
pop
inc
xchg
add
icebp
mov
mov
xchg
mov
cwtl
enter
dec
mov
xchg
sbb
mov
adc
inc
or
xor
vprotq
cltd
es
int
sub
test
xor
jg
pop
int
and
add
jl
notb
fistpl
outsl
adc
sub
clc
lock
mov
sub
pushf
mov
lahf
cmp
jmp
and
das
mov
mov
adc
sbb
popa
xor
cmpsl
insl
push
add
enter
nop
inc
mov
push
push
imul
mov
add
mov
int
cmp
les
mov
mov
or
fsubl
jg
mov
push
rorl
push
cwtl
or
mov
adc
xchg
pop
cmp
mov
in
jo
popa
stos
inc
rol
lcall
clc
popa
mov
out
mov
cmp
lret
jno
xor
inc
mov
cltd
xchg
xor
mov
inc
jge
pusha
repnz
and
enter
popf
in
mov
add
lret
imul
scas
cs
mov
or
popa
dec
in
mov
jnp
mov
fcomp
push
orl
jae
mov
lock
jg
push
scas
mov
inc
addr16
xchg
aas
mov
loope
xchg
movsb
xchg
push
cmp
cmp
ret
pop
enter
cmpl
mov
pop
sti
inc
je
js
add
nop
incb
in
add
negb
or
push
shrb
and
mov
ret
push
cmp
jge
mov
push
out
bound
jge
imul
mov
dec
faddl
sub
cmc
sti
cld
loopne
jno
mov
pop
out
daa
cmp
cs
mov
test
cs
shll
xlat
pop
test
icebp
mov
add
jg
sub
push
push
mov
sub
movsl
cmpsl
sbb
sti
jbe
fstps
fstps
sahf
xchg
loope
push
xor
lods
mov
mov
mov
mov
jne
sbb
in
xor
es
xlat
push
pushf
rorl
mov
out
loop
repz
lret
int3
lret
adc
call
inc
sub
f2xm1
push
push
popf
cmpsb
add
dec
inc
les
in
scas
sub
popa
rorl
es
cmp
xchg
xor
pushf
jp
inc
pusha
iret
or
sti
mov
fdivl
sbb
orb
les
jno
repz
sub
in
cld
adc
aad
inc
inc
dec
ficompl
jge
sub
andb
and
mov
inc
jb
sbb
loop
sbb
pop
mov
cld
scas
dec
jo
sub
imul
imulb
lock
or
inc
jbe
push
fs
dec
inc
lret
icebp
mov
ljmp
mov
jns
dec
cs
fisubs
cmp
dec
xchg
adc
punpcklbw
imul
pop
dec
cmp
xchg
sub
inc
mov
lret
enter
or
bound
or
es
lcall
cwtl
inc
push
imul
and
push
pop
adc
pop
add
movsb
les
mov
es
adc
push
cltd
inc
enter
add
xchg
les
out
mov
inc
xor
cmp
push
sbbb
movsl
inc
ret
lahf
lock
data16
add
xor
shl
ret
hlt
movsl
fisubrl
imul
sub
jne
lcall
scas
xor
scas
mov
adc
fsubl
mov
xor
ja
adc
push
sub
dec
jmp
leave
adc
pop
out
arpl
jbe
loop
mov
mov
test
ja
pop
lea
mov
addb
or
push
dec
inc
xor
pusha
push
or
imul
es
mov
test
test
divb
inc
sub
popf
not
jae
sti
adc
into
inc
loope
adc
fisttps
lock
mov
test
sub
or
or
popf
xchg
and
mov
lods
mov
ret
popa
xor
and
pop
sub
inc
add
lret
xor
rclb
lods
fisubl
mov
jecxz
mov
or
rolb
std
xor
jb
push
test
adcl
iret
add
cmp
lods
lcall
jno
ret
and
fmuls
arpl
mov
push
xchg
mov
js
xchg
cli
xor
xchg
push
push
xchg
popl
std
out
mov
sub
imul
loopne
mov
int
lret
mov
scas
cmp
inc
sbb
pushf
jbe
loop
and
std
pandn
adc
popf
lds
dec
or
movsb
iret
sbb
fcmovne
jne
push
fs
test
jno
fcompl
pop
int
xor
stc
xor
cltd
or
add
add
mov
or
cmp
lods
xchg
in
dec
ret
test
lods
shlb
outsb
pop
shl
jo
jp
xchg
mov
pushw
aas
cmp
lods
stos
popf
adc
shlb
lods
mov
cmp
rol
daa
dec
iret
mov
jo
mov
push
xchg
int3
pop
jmp
xor
addr16
scas
out
adc
xor
xor
bnd
ja
loop
cmp
in
push
les
std
jbe
mov
fsubl
dec
scas
test
in
fadds
pop
std
je
or
scas
add
mov
ret
sub
cltd
or
inc
shll
scas
xchg
iret
and
xchg
pop
xchg
push
cmpsb
out
repnz
sub
xchg
sbb
lods
mov
notb
mov
out
repnz
jns
js
and
xor
loopne
sub
xor
rcll
adc
enter
dec
mov
push
jmp
out
push
add
in
loope
pop
push
or
mov
lcall
cmp
ja
inc
shrl
in
lea
inc
jo
mov
cmp
push
std
lock
aaa
xchg
daa
adc
imul
cld
add
xor
xchg
lods
test
outsl
or
scas
call
stc
das
mov
pop
enter
pop
mov
lret
add
push
xor
and
pop
les
mov
les
inc
aaa
iret
insb
push
fldl
xchg
lret
leave
fistpl
mov
add
sub
adc
ljmp
test
sbb
test
das
lcall
insl
ja
lahf
aas
stos
in
sub
movsb
iret
cmp
pusha
call
and
xchg
ljmp
mov
into
int
sbb
push
data16
je
cmp
xchg
xor
imul
xor
cmpsb
insb
rorl
add
dec
stos
loop
cmpl
push
xchg
js
jo
popa
xor
rolb
adcl
adc
push
xchg
inc
inc
ja
push
push
in
mov
test
int3
sbb
push
and
ja
cmp
sbb
mov
jo
cld
fcomps
sub
in
popf
xchg
scas
sbb
lahf
sbb
scas
push
movsb
stos
scas
arpl
sbb
std
adc
aas
insb
cld
xor
test
add
inc
mov
subl
or
inc
lahf
xor
gs
adc
pop
pop
or
sbb
adc
repnz
dec
pop
cmc
push
push
push
mov
nop
sbb
cmc
rcrl
aad
fwait
add
cwtl
test
fdivl
sub
rorb
scas
les
jg
hlt
rcll
sbb
or
lret
out
fistps
mov
popf
sub
fwait
inc
inc
adc
jae
rcll
bound
rcrl
fidivs
pop
dec
in
xchg
mov
fisubrl
mov
js
pop
and
sbb
mov
cmc
jo
cwtl
ret
sbb
mov
push
and
xor
pop
jo
pusha
inc
mov
outsb
push
xchg
add
pop
iret
pop
push
add
scas
dec
js
mov
inc
test
gs
movq
ret
push
mov
mov
pop
sahf
ret
jb
pop
negb
sbb
imul
jae
mov
inc
outsb
ss
push
pop
pop
or
or
inc
mov
jo
fcoml
mov
rcrb
stos
into
cli
bound
sub
pop
cmp
mov
add
jb
fwait
outsb
pop
lahf
xor
bnd
pushf
jne
cmp
xor
adc
lret
movsb
jg
jns
leave
dec
xchg
pop
push
adc
cmp
mov
insb
movsl
call
or
sbb
mov
pop
loopne
mov
mov
jge
cmc
insl
push
sub
sar
xor
dec
cmp
xchg
add
data16
in
or
mov
or
mov
dec
inc
in
mov
fdivp
dec
out
lea
arpl
sti
scas
mov
stos
mov
add
cli
cmp
push
jmp
mov
fadds
roll
xor
inc
pop
xor
adc
in
mov
mov
xchg
test
mov
cs
mov
mov
inc
jb
rcrl
leave
sub
add
xchg
leave
pusha
outsl
mov
sahf
hlt
mov
js
rorl
sbb
loop
ret
xor
scas
sub
xor
or
and
pop
mov
adc
sbb
hlt
sbb
or
mov
jns
cmp
and
dec
stc
in
mov
xchg
pusha
and
jl
mov
inc
rcl
inc
insl
xor
and
sbb
repz
or
enter
mov
int
lret
mov
mov
pop
push
xorl
fnsave
fdivrs
push
idivb
das
or
dec
mov
jge
loope
adc
pop
sub
out
ficoml
push
adc
sbb
push
enter
push
add
inc
push
insb
jnp
xor
and
aad
mov
cmp
cli
xchg
out
lahf
xchg
pop
xchg
and
pop
movsl
enter
mov
inc
mov
inc
pop
push
adc
into
in
pop
enter
cmp
aaa
and
enter
pop
movsl
xchg
mov
fsubs
mov
lods
lock
xchg
cld
insl
mov
mov
mov
lds
cld
sti
fdivr
sbb
dec
movsb
insl
cltd
mov
loope
jne
add
aam
xchg
sbb
lret
stos
sub
lods
popl
imul
add
cltd
adc
push
sbb
fimull
mov
push
xor
js
arpl
gs
fs
and
mov
cwtl
dec
adc
idivb
cmpsb
push
out
movsb
and
mov
push
and
bound
inc
mov
fs
inc
jb
dec
fimuls
outsl
and
cld
xchg
mov
mov
hlt
lcall
adc
dec
push
dec
std
in
mov
pop
xchg
xorl
xchg
cmp
ret
inc
pop
jns
scas
sarb
movsl
pop
testl
mov
cmc
jge
mov
dec
stc
cld
cmp
int3
cmp
fcomps
mov
xchg
pop
push
shll
jns
jg
dec
cli
push
pop
nop
aam
enter
pop
xchg
or
dec
aas
jbe
testl
mov
mov
cmp
out
push
adc
push
leave
or
sub
repz
test
cmpl
lret
mov
push
mov
push
push
mov
fistpl
ret
cmpsb
sbb
popf
push
adc
and
ds
cltd
imul
repnz
push
data16
test
jg
out
ror
lret
bound
sahf
insb
mov
loope
rorl
lahf
pop
sub
or
dec
or
pop
sbb
test
test
popf
or
js
inc
mov
mov
lcall
cmp
mov
mov
xlat
rclb
jbe
out
arpl
sub
leave
mov
xchg
add
jae
bound
pop
aaa
pop
or
sub
lds
dec
sub
in
or
and
jbe
dec
leave
cwtl
xchg
and
cmp
js
jb
repnz
xor
jbe
mov
loop
pop
adc
push
jge
stc
add
int3
pop
dec
push
jb
lock
xor
push
lea
mov
bound
int3
add
fs
stc
je
jae
mov
jno
cmpsb
add
lahf
out
sbb
movsb
inc
sbb
jg
pop
pop
ds
fimuls
pop
lret
dec
cmpsb
pop
mov
test
fwait
push
into
lea
shrl
cli
adc
test
sub
mov
pop
mov
rcrb
adc
decb
movsl
stos
ret
jmp
xchg
mov
mov
jns
push
pop
xchg
mov
xchg
ljmp
or
adc
xor
cmpsb
mov
mov
dec
inc
lcall
xor
cmp
into
add
push
adc
xor
inc
lret
dec
cli
js
sub
fistpll
jb
scas
jb
dec
iret
xchg
sbb
mov
fistpll
add
stc
iret
inc
js
les
les
addl
rcll
jae
out
pop
dec
cltd
aaa
punpckldq
push
lret
pop
mov
xlat
mov
or
out
gs
adc
xchg
ds
rcrl
xchg
or
mov
pop
pusha
cmc
sbb
testb
jae
adc
arpl
mov
sbb
mov
outsb
sbb
inc
fnsave
pop
sub
adc
out
or
jecxz
push
lret
pushf
addr16
mov
pop
cmp
filds
pushf
jo
scas
cli
test
inc
inc
rcr
adc
fnstenv
cmp
cld
aas
adc
fstps
fsubr
and
sbb
insl
push
or
sub
mov
mov
rorb
mov
xchg
pop
adc
mov
and
cmc
insb
stos
movsb
or
jb
out
je
test
mov
pushf
lock
xor
dec
nop
popa
xor
mov
xchg
cmp
pop
in
jge
xchg
ss
add
jg
sbb
out
fdivrp
or
add
pusha
daa
mov
inc
dec
mov
cmp
sub
ss
lcall
scas
jge,pt
or
imul
bound
push
xchg
inc
dec
sub
dec
inc
popa
pop
inc
sbb
es
xor
push
cltd
ljmp
mov
adc
sub
mov
addb
clc
add
mov
and
dec
int
jmp
stos
cs
fcmove
dec
sub
and
xlat
xor
cmp
add
dec
xor
rorb
bound
inc
dec
les
inc
mov
pop
fnstsw
pop
repnz
dec
xchg
mov
xchg
mov
jae
adc
jbe
movsl
pop
imul
cmp
mov
loopne
mov
movsb
jl
stos
test
mov
cmp
mov
ja
jns
xor
push
xchg
sbb
cmp
shll
sbb
ficoms
and
mov
pop
cmpsl
mov
adc
push
inc
test
scas
mov
cmp
in
jae
pushf
shlb
dec
fsubs
sti
jp
jecxz
test
inc
sub
pop
fucomip
push
cmp
lea
shr
xor
mov
xchg
mov
pop
pop
mov
mov
xor
mov
fwait
rcll
imul
idiv
sbb
mov
lods
aad
cwtl
xchg
lds
mov
fisubl
iret
sarl
pop
mov
aas
test
es
bound
cmpsb
cmp
loope
cltd
int3
int3
stos
int
into
lds
jp
push
pop
leave
sub
ds
insb
jns
adc
sahf
icebp
clc
in
jns
push
push
fcomp
mov
cmp
mov
repnz
cli
jle
inc
adc
pop
mov
shr
pop
jg
test
fnstcw
cli
stc
sub
cmpsb
sbb
test
les
xchg
mov
pop
movsl
inc
jo
out
fidivrl
xchg
xchg
mov
je
dec
cmc
xor
jb
and
inc
pop
push
xchg
inc
mov
out
daa
popa
sbb
das
sbb
sbb
repz
fsts
addr16
inc
lods
mulb
jns
inc
mov
adc
pop
lret
xchg
cs
mov
sub
repz
not
mov
lea
scas
aaa
adc
insb
pop
pop
xchg
dec
push
in
in
jno
mov
jno
inc
dec
scas
fcmove
daa
xor
pushl
jg
jb
cmc
cli
jns
or
addr16
jns
mov
jns
push
dec
cltd
mov
jecxz
xchg
and
adc
out
jg
pop
pop
jne
xchg
cvtpi2ps
js
push
push
fisttpl
scas
jbe
das
sbb
inc
mov
outsb
loopw
test
dec
std
push
dec
fcoml
cmp
mov
aad
lcall
scas
inc
and
add
and
inc
arpl
gs
adc
fidivrs
mov
shll
decb
mov
cmp
ror
jb
sbb
lcall
and
out
dec
and
les
aad
mov
push
and
dec
adc
stos
dec
mov
push
leave
push
dec
inc
sbb
movsb
ljmp
shrb
add
and
cltd
mov
add
cwtl
loope
shr
or
test
dec
cmpl
mov
ret
jle
sbb
mov
popf
pop
mov
stc
xor
fidivrs
sub
xchg
dec
mov
sub
mov
mov
add
add
rorl
push
cmp
int3
test
mov
jg,pt
pusha
bound
movsl
cmc
jge
enter
sbb
pop
ss
xchg
pop
jmp
aas
fcom
push
pop
adc
ret
pop
lea
mov
fs
mov
mov
xorl
cwtl
add
imul
xor
sbb
or
int
xor
aas
inc
int3
fs
aam
sbb
sub
repz
insl
gs
add
jmp
sarl
cwtl
mov
stos
dec
xor
int
arpl
jo
inc
xchg
fisubl
aam
sub
in
sub
aad
jecxz
stos
sbb
cld
push
rcl
iret
mov
sbb
das
pop
nop
mov
xchg
dec
mov
xchg
mov
mov
clc
sbb
int3
sub
cli
mov
jg
imul
mov
mov
fwait
dec
xchg
push
cmp
dec
lods
sub
insb
pop
push
sbb
jb
cld
pop
pop
test
and
dec
xchg
xor
mov
repz
cmpsl
cmp
movsb
dec
int
dec
sub
inc
mov
inc
popa
dec
aad
jl
icebp
dec
cltd
pop
or
jo
cld
stos
add
fdivs
lret
fldl
push
and
pop
fnstsw
push
js
je
shlb
mov
fcomps
or
dec
xor
inc
and
fsubrl
xchg
xchg
ljmp
inc
xchg
cmpsl
xchg
insl
sub
dec
pop
popa
jns
xchg
mov
fnop
bound
pushf
cli
push
xchg
cmp
jnp
shll
mov
ds
push
jg
ja
jbe
into
xor
push
test
rorb
inc
shrl
pop
mov
cmc
fs
insb
mov
aas
inc
movsl
dec
sub
les
xchg
test
int3
out
fyl2x
insl
sub
les
inc
push
push
cwtl
stc
out
xor
pop
shll
add
es
nop
mov
testb
push
push
mov
out
adc
inc
inc
loopne
int
and
mov
aad
popa
cmp
dec
mov
jb
xchg
push
push
xchg
outsb
nop
shlb
sbbb
aam
and
and
aad
rcl
clc
lea
cwtl
push
inc
es
stos
mov
mov
ss
gs
jnp
jge
sbb
xchg
addl
dec
fcoms
fidivs
stos
ss
mov
fidivrl
jp
push
stc
leave
xchg
das
cwtl
popa
and
movsb
lcall
test
xor
lds
shlb
es
mov
push
adc
aas
xchg
ret
inc
mov
leave
xor
leave
in
frstor
xchg
pop
leave
xchg
lret
nop
sub
ljmp
xlat
outsl
mov
sahf
mov
scas
mov
sub
addr16
daa
cmp
sub
inc
or
and
pusha
int3
xor
push
dec
and
push
lret
cmp
add
movsb
cmp
pop
sub
cld
shll
fs
inc
ja
cmc
mov
sbb
mov
fsts
inc
movsl
inc
lret
mov
inc
mov
cmp
mov
xchg
mov
inc
dec
add
xchg
or
in
add
lea
gs
jecxz
in
loop
pop
mov
mov
xor
inc
adc
ret
pop
add
mov
into
sbb
mov
call
mov
leave
jge
imul
mov
sub
in
push
mov
push
shrl
sbb
scas
divl
outsl
aas
sbb
imul
cmp
push
movsl
outsb
cmpsl
push
out
js
mov
adc
movsb
xchg
inc
and
outsb
sbb
cmp
cwtl
in
push
and
sub
rcrb
adc
add
mov
sahf
je
adc
lcall
andb
cmp
into
and
push
out
repz
jmp
push
sbb
adc
or
es
or
les
jg
scas
jnp,pn
out
push
outsl
pop
inc
jns
and
or
out
arpl
cmpsl
push
iret
les
and
data16
sbb
loope
insl
push
adc
mov
push
insl
cmp
adc
mov
xchg
jnp
mov
and
lahf
jne
dec
imul
popa
dec
pusha
insb
lea
sbb
loopne
nop
andl
mov
pop
pushf
jb
mov
sub
and
aad
ret
fwait
cmp
enter
jno
out
ds
sub
push
or
leave
ljmp
jae
mov
leave
lcall
and
or
mov
insl
jl
or
fists
cmpsb
mov
pop
pop
cld
out
jle
push
stos
fcmovnu
add
xor
fadds
js
pop
and
cmc
ret
mov
xchg
cs
add
cmp
cmp
testl
ret
adc
aad
push
and
imul
lods
xor
stc
fs
sahf
fs
mov
test
rep
pop
in
dec
shrb
pop
inc
or
jnp
inc
inc
loopne
mov
mov
cmp
inc
enter
mov
mov
idivb
fdivp
cli
in
adc
sti
mov
ds
push
push
dec
xchg
jns
cmp
mov
jns
movsb
shrb
add
pushf
or
mov
fucomip
jecxz
lods
jns
testl
dec
fwait
xchg
xchg
jp
inc
pop
fnstsw
jge
fstpl
mov
ds
lret
mov
bswap
xchg
jl
and
je
sbb
std
pop
add
mov
adc
adcb
pop
hlt
out
dec
adc
sbbl
dec
cmpsb
enter
imul
xchg
les
jno
xchg
into
adc
cmp
xchg
ret
mov
push
jnp
je
jmp
aas
aaa
insl
test
add
lahf
mov
push
pop
or
nop
out
nop
xor
stos
mov
mov
pop
inc
push
rcl
iret
popf
loope
and
or
daa
or
test
pop
testl
xchg
push
pop
mov
enter
repnz
repz
jge
push
pop
xchg
cmp
or
fnsetpm(287
hlt
bound
cmc
movswl
xchg
and
cmpsl
jp
test
pop
mov
add
ror
repz
movsb
mov
scas
xchg
mov
dec
and
cwtl
outsb
in
movzwl
mov
and
adc
ds
insl
jge
incl
jg
test
arpl
cwtl
add
xor
xchg
icebp
mov
xor
xchg
int
cmc
shlb
outsl
or
mov
pop
pop
std
clc
shr
js
mov
inc
inc
leave
dec
sbb
out
mov
fcmovb
xor
mov
sbb
stos
repz
mov
cmc
mov
or
dec
cli
repz
xchg
sub
mov
and
mov
and
cwtl
inc
mov
std
in
aam
pop
cwtl
int
xchg
push
adc
mov
int3
clc
divb
lea
xchg
push
sbb
mov
xchg
and
lret
jg
lods
cwtl
or
into
cmp
ja
fs
dec
pmulhw
sub
push
icebp
fs
add
mov
xchg
call
loop
dec
xchg
fwait
enter
xchg
add
jmp
mov
push
jno
dec
jge
jb
fidivrl
pushf
pop
gs
jae
cmp
nop
push
test
cmp
mov
mov
repz
lods
inc
in
aas
testl
add
dec
mov
mov
or
addb
xor
inc
cmp
or
and
sub
ficoml
cmpl
pop
xor
fsubs
out
cwtl
dec
pop
loop
sub
jae
pop
out
add
cmp
sti
sbb
js
roll
fcoms
sbb
out
jns
add
stc
mov
push
lcall
push
pushf
daa
pop
js
decl
add
mov
add
add
das
iret
mov
ja
xor
stos
jle
lock
cli
rcll
push
lcall
mov
mov
hlt
mov
mov
pop
cmp
fmull
jne
xchg
test
in
or
push
pop
nop
sbb
adc
sti
pop
pop
pop
lret
sbb
pop
sti
rcrb
popf
jp
push
and
popa
addr16
inc
cmc
push
cmp
inc
jne
push
je
pop
in
push
ds
test
xor
pop
popf
inc
je
adc
jecxz
xchg
mov
ja
repnz
cld
cmpsl
jge
sbb
xor
xchg
fdivrp
ss
push
adc
or
pop
rorl
iret
inc
mov
popf
mov
mull
jmp
jmp
lock
sub
or
mov
fidivs
mov
inc
mov
bound
aas
mov
sub
aam
jb
fdiv
and
sti
lods
and
jns
mov
fwait
pop
jns
sub
data16
mov
and
sti
repnz
sbb
lods
pmaxub
call
cld
test
loopne
in
movsl
add
mov
rclb
add
pop
lods
loopne
jge
xchg
icebp
xchg
mov
addr16
sub
and
push
leave
jnp
lds
std
aaa
mov
arpl
cmp
outsl
leave
adc
dec
nop
add
testl
pop
xor
xorb
out
mov
xor
imul
stos
fs
push
inc
adc
outsl
xchg
sarl
pusha
xchg
sahf
pop
rcl
mov
add
and
negb
mov
cmp
decl
cmp
or
mov
push
insb
fimull
and
push
mov
shlb
lods
ds
clc
inc
hlt
mov
mov
mov
cmp
and
stos
loop
inc
pop
outsl
jo
xchg
out
lock
sbb
cli
pusha
into
sub
movsl
xor
dec
subl
leave
sub
outsl
mov
test
mov
jns
fs
test
arpl
jg
xor
or
loop
inc
push
push
push
add
xchg
cli
std
jno
das
fisttps
mov
outsl
push
dec
push
mov
inc
mov
lea
aam
sub
xor
or
mov
test
push
or
sub
imul
or
lret
mov
repz
sahf
or
rorl
es
add
adc
pop
mov
pop
add
fidivrl
in
sti
aad
iret
xchg
mov
sarl
cwtl
neg
inc
jmp
orl
xor
push
gs
das
jp
jne
and
daa
pop
mov
add
sbb
loope
dec
push
aad
adc
fsubs
pop
mov
bnd
hlt
add
dec
mov
not
push
aaa
or
les
mov
jp
jmp
cwtl
lock
addr16
xchg
push
dec
mov
xchg
insl
call
mov
mov
aam
fs
and
inc
js
jno
push
iret
sti
xor
pop
shrl
pop
lock
scas
idivl
ljmp
arpl
out
adc
sbb
add
ljmp
lods
movsl
jns
pop
data16
dec
push
add
aaa
out
push
test
in
faddp
add
xchg
cmc
ds
movsb
dec
pop
adc
cmp
pop
pop
loop
and
push
mov
cmp
scas
leave
jle,pt
fists
or
arpl
cltd
cmp
addr16
sub
mov
fildll
lret
pop
xchg
lret
cmp
into
xchg
ret
push
fwait
cmp
and
sub
bound
ss
add
xor
hlt
daa
or
xor
inc
int3
sbb
scas
xor
lret
pop
sahf
cld
or
or
mov
xchg
rorl
pop
jbe
and
or
sbb
fisubrl
xchg
mov
ljmp
adc
jecxz
cmp
add
ror
mov
mov
pop
xor
popf
lret
push
pop
mov
fldt
or
movsl
imul
xor
das
mov
ror
ret
lods
pushf
xchg
cmp
lret
shrb
xbegin
add
fdiv
loop
push
stos
push
mov
push
mov
aaa
aam
pop
repnz
sbb
jge
lods
mov
outsb
aas
adcb
rorl
cmp
dec
movd
in
scas
push
rcrl
in
pop
aas
les
mov
test
xor
mov
shl
inc
mov
add
jl
hlt
js,pn
or
cs
rclb
sbb
mov
or
int
sub
std
dec
iret
xlat
aad
sbb
push
icebp
cmc
pop
shlb
fwait
xchg
ret
xchg
push
js
mov
jnp
sub
jge
out
xchg
pop
loop
and
pop
push
add
sbb
aas
cwtl
sbb
scas
loopne
and
or
sub
xor
mov
out
aam
mov
std
loope
test
jno
push
cmp
add
dec
jp
ljmp
fisubs
xlat
jno
arpl
pop
fsubl
sbb
dec
test
stos
pop
das
inc
or
shrb
mov
pop
and
fcom
test
in
add
or
scas
pop
sahf
cmpsb
dec
xor
int3
call
inc
stos
sbb
dec
outsl
jmp
cmp
cmp
mov
inc
sub
dec
std
and
enter
cmc
sub
mov
les
movl
out
mov
xchg
jecxz
in
xor
mov
pushf
int3
mov
mov
dec
inc
ds
jno
test
mov
fnstcw
dec
loop
lret
imul
pop
add
or
xchg
test
add
stos
xchg
adc
or
mov
xchg
mov
or
cmpsl
mov
pop
fldl
mov
lret
leave
dec
mov
adc
fsubrs
stc
fisubrs
push
stc
mov
in
mov
push
insb
pop
or
test
outsl
push
push
adc
cld
mov
or
cld
movsb
mov
and
or
shll
lods
into
cmp
cltd
dec
addr16
je
mov
aaa
mov
testb
test
mov
jg
sbb
nop
andb
sub
ret
pop
inc
jo
cwtl
cmp
leave
call
clc
sbb
decl
jbe
mov
iret
mov
and
ret
jno
ret
push
popf
loop
xchg
ja
mov
mov
inc
adc
pxor
pop
jnp
cmp
rcrb
test
sub
jmp
jnp
add
mov
es
sbb
cwtl
stos
and
popa
sub
aam
cmp
add
push
mov
sbbl
mov
jae
or
int3
in
xchg
mov
aaa
mov
mov
movsb
aas
sbb
or
rcll
cltd
inc
xchg
or
xor
inc
shlb
ds
jb
mov
aam
and
rorb
or
cmp
enter
rcr
push
mov
nop
xor
xchg
inc
xor
or
aad
cmpsb
cmc
movsb
in
leave
xchg
jge
xor
sbb
dec
add
jecxz
push
cmc
xchg
sti
add
push
stos
mov
fwait
pop
pop
jl
push
cs
in
jnp
mov
push
mov
xor
inc
mov
jb
cli
mov
inc
loop
xchg
pusha
mov
rclb
mov
jno
arpl
dec
pop
rclb
mov
cmp
sub
popf
fildll
loope
dec
push
enter
push
je
push
call
push
test
leave
jg
and
ja
sub
mov
cmpsl
cltd
mov
push
lds
xchg
in
mov
lret
int
lods
xor
iret
sub
push
lret
bound
and
pop
xchg
pop
addl
mov
into
fiaddl
hlt
mov
mov
pop
lcall
aas
push
add
fadd
jg
sbb
cmp
push
addr16
sub
inc
mov
jb
fwait
rclb
xchg
mov
sbb
fldenv
bound
add
scas
mov
sbb
mov
lds
addr16
out
or
lea
pusha
testb
jle
and
int3
push
push
cmp
push
aas
push
icebp
jecxz
mov
inc
mov
in
leave
fldt
mov
sub
xchg
repz
cmp
lods
xchg
mov
popf
aas
imul
ficoms
cwtl
jp
das
and
cmp
inc
test
aam
repz
dec
mov
std
mov
fdivl
repz
or
and
and
out
add
cld
cli
cmp
mov
jmp
pusha
or
pop
loop
insb
sbb
aas
in
icebp
scas
and
rorl
sbbl
or
mov
xor
sub
jns
jb
sbb
in
insb
out
sub
dec
sahf
int
js
lahf
rorb
sub
and
mov
hlt
inc
mov
nop
mov
int
jmp
fwait
mov
loope
cli
lods
imul
out
sbb
inc
hlt
jmp
xchg
nop
aaa
mov
inc
pop
int3
sub
xchg
push
sbb
in
sbb
sbb
mov
adc
xor
aam
repz
insb
add
lods
fidivl
jl
lods
add
pop
pop
inc
ja
push
jge
sti
adc
imul
mov
cmpsl
notl
xchg
pusha
repz
shrl
inc
fadd
lods
cld
mov
xor
iret
ror
sub
or
js
movsl
or
cmp
popf
stos
outsb
jo
add
sbb
push
cmp
mov
mov
sub
jg
and
outsl
pop
cld
loope
in
subl
pop
pop
rorl
xlat
mov
mov
sbb
push
sahf
inc
sub
adc
sar
movsl
nop
cltd
inc
pop
ficomps
iret
out
dec
outsl
push
lret
es
mov
in
mov
xor
push
cld
rcll
lods
test
or
lcall
les
jb
lds
or
add
sub
push
loopne
mov
aaa
dec
sbb
mov
jge
movsl
or
arpl
subl
jnp
in
mov
adc
fs
dec
imul
pop
sbb
push
add
xchg
sub
xchg
cmp
out
test
jmp
data16
mov
mov
testb
sub
mov
inc
sbb
and
outsb
test
and
mov
fists
notl
jecxz
in
das
or
or
test
fwait
call
sub
mov
fimull
stc
ljmp
jge
movsb
mov
inc
cwtl
lret
adc
or
push
fimull
jb
loop
arpl
sahf
sbbb
fs
icebp
cltd
ja
push
fsubr
std
sub
jge
lcall
push
push
setge
gs
pop
jge
jge
and
fwait
ljmp
neg
jne
aaa
push
out
jle
inc
cmp
jbe
xchg
cmp
jg
push
mov
loope
lods
mov
mov
insb
mov
cmp
mov
cmp
mov
push
leave
sbbl
movsl
mov
pop
fs
adc
mov
popa
pushf
or
bswap
dec
sub
and
rcrl
mov
fs
ljmp
adc
data16
adc
xor
int
in
sbb
clc
ja
sub
pusha
push
lcall
test
rcll
loope
mov
jl
shl
sub
sbb
adc
test
push
out
sahf
add
inc
xchg
sbb
dec
sbb
push
pop
mov
mov
movsb
add
mov
sub
bound
std
jbe
outsb
pop
arpl
xchg
pavgw
inc
imul
mov
les
jl
mov
sbb
xchg
addr16
mov
js
pop
lods
fidivrs
idiv
sbb
pop
mov
push
aam
mov
js
mov
arpl
cmp
xor
js
cmp
mov
pop
dec
mov
into
add
fistpll
sarb
cmp
mov
icebp
dec
jae
pop
testb
dec
js
scas
inc
ljmp
and
pusha
add
std
push
fimuls
call
les
mov
and
sub
xor
dec
mov
adcl
push
push
mov
testb
jmp
ds
fwait
repz
mov
lahf
movsb
xchg
inc
push
fidivl
push
add
add
xor
imul
xchg
push
arpl
mov
and
jp
xor
push
adc
sbb
mov
stos
cmp
insl
mov
mov
xchg
mov
in
shlb
popa
imul
adc
ja
ds
fsubp
mov
call
stc
mulb
cmp
inc
out
addb
pop
or
test
cmpsl
scas
xchg
mov
xchg
pop
inc
rorb
cmpsb
jle
add
and
jo
or
mov
dec
mov
out
scas
mov
aas
or
xchg
ss
add
xchg
and
rol
mov
mov
into
mov
adc
cld
jnp
mov
stos
mov
mov
inc
stc
test
and
dec
sbb
ljmp
xor
push
adc
mov
xchg
xor
mov
add
pop
test
sahf
dec
adc
ss
xor
xchg
or
mov
das
add
ret
pop
xchg
lcall
sarl
dec
adc
dec
incb
les
adc
clc
xor
xchg
clc
dec
dec
sub
xorl
mov
sub
movsl
jmp
sub
cltd
fwait
sti
loopne
mov
xlat
fidivl
cmp
sub
in
mov
and
cwtl
movsb
ficomps
jno
adc
dec
push
lcall
adc
stc
les
xor
push
or
xor
jp
push
xor
hlt
xchg
add
rolb
ret
nop
stos
imul
cwtl
cltd
repnz
or
int3
aad
pop
fwait
push
jb
imul
notb
scas
sbb
ja
fdivrl
cmpsb
and
jb
pop
inc
add
lret
and
cmp
aad
and
aam
mov
sarl
inc
mov
bound
ror
and
lock
enter
in
imul
pop
inc
aam
inc
add
icebp
gs
xorb
in
cmp
add
mov
ret
repnz
test
popf
xchg
adcb
mov
xor
xchg
cld
inc
pop
adc
loope
push
idivl
into
adc
push
fmull
or
fld
ja
insl
mov
xchg
xor
gs
es
lods
les
mov
loopne
stc
cmpsl
fwait
dec
addb
fsubrs
popl
sbb
js
add
cltd
add
push
sbb
or
sbb
cwtl
icebp
cld
mov
xchg
inc
mov
stc
jne
jnp
popf
negl
test
dec
cmpsb
xor
adcl
jae
pop
mov
and
fistpl
lods
not
fwait
pop
addl
lea
fcomip
mov
jae
jp
mov
aad
ret
icebp
fs
xchg
int
fadds
jmp
cli
xor
push
popa
inc
jp
stos
xchg
lret
loopne
arpl
std
imul
xchg
jl
cmp
jbe
stos
sub
out
rorb
movsb
repnz
push
mov
xchg
xor
adc
jns
sti
divl
add
lret
rorl
fcmovnbe
cmp
test
nop
cmp
int
adc
mov
or
adc
cmpsb
pop
push
pop
xor
cmpsb
xchg
push
push
pusha
leave
mov
mov
andl
mov
or
pop
pop
cmc
dec
stc
push
inc
ret
pop
mov
xor
add
pop
fiadds
inc
leave
rcrb
inc
sbb
mov
sub
je
xorb
jmp
push
jl
add
sub
dec
enter
adc
xchg
mov
sub
xchg
loope
xor
leave
sbb
xchg
sbb
mov
mov
std
mov
aam
sbb
pop
into
inc
jle
mov
mov
test
hlt
outsl
mov
dec
ret
mov
push
es
push
mov
and
jecxz
push
sub
push
adc
inc
pop
xchg
mov
movsb
fwait
inc
pop
call
mov
push
pop
add
lods
jno
or
test
xchg
lock
sti
int
shl
loopne
adc
inc
xchg
mov
add
and
lods
pop
pop
mov
cli
int
xchg
mov
pop
pop
push
popl
ljmp
fs
sub
sub
inc
repz
dec
push
jg
ret
sub
adc
fdivs
jns
cmp
inc
cmp
testl
aas
mov
jmp
test
pushw
les
pop
arpl
int3
mov
jg
pushf
pusha
scas
mov
jne
and
push
push
dec
sti
sbb
mov
out
fiaddl
hlt
sbbb
pop
lret
shlb
addr16
cmp
push
mov
or
push
in
icebp
fisubrl
ds
jb
adc
std
scas
test
and
xchg
xchg
movsl
int
xchg
loop
xchg
test
and
test
mov
cmp
inc
cmp
cmpsb
add
daa
mov
mov
pop
jnp
lahf
sbb
push
mov
cltd
in
cmp
mov
mov
adc
lret
std
repnz
gs
lods
outsb
adc
xor
imul
insl
adc
sbb
push
mov
dec
cmp
loope
jecxz
repz
adc
aam
jecxz
pop
inc
lods
adc
test
inc
mov
pushf
shll
scas
or
dec
shll
out
int3
clc
fldcw
dec
mov
mov
and
or
add
loopne
cmpsb
mov
enter
lds
mov
push
mov
mov
sub
mov
lods
or
mov
dec
jb
cmp
adc
and
and
repnz
jno
test
mov
dec
or
jb
mov
loopne
nop
add
mov
sbb
cmpsl
jo
sub
ret
pop
xor
repnz
icebp
in
mov
dec
leave
imul
push
test
mov
dec
ja
ret
mov
movsb
dec
stc
xchg
out
adc
add
cmp
cmpsl
push
imul
inc
cmp
ja
jecxz
mov
mov
jge
shl
push
inc
mov
in
xchg
add
loopne
jae
jno
ds
sub
add
shl
pop
ret
mov
nop
insl
aaa
jnp
sub
ret
push
daa
xlat
xchg
inc
call
scas
inc
shl
xchg
xchg
dec
imul
xor
sub
mov
xor
and
cld
cld
ja
les
jae
sbb
push
ja
add
cmp
inc
das
ficomps
lret
icebp
test
imul
cmpl
xor
add
jno
pop
vaddsubps
mov
std
sbb
mov
pushf
fistl
mov
dec
pusha
stos
cwtl
sub
rcr
mov
dec
mov
std
cmp
or
aaa
pop
movsl
mov
mov
and
adc
mov
sti
jl
mov
scas
fsubs
jl
inc
push
cs
add
adc
sub
or
push
sub
jecxz
jle
add
push
lahf
loop
cmovl
xor
call
jbe
jmp
push
cwtl
add
jmp
call
jg
or
pop
nop
mov
nop
mov
enter
jecxz
ret
ficoms
shll
xchg
sub
sbb
add
sbb
push
add
add
inc
mov
pop
mov
ds
test
xchg
xchg
ret
pop
and
cltd
dec
inc
outsl
je
pop
and
push
mov
jns
dec
in
ret
lock
aam
push
sbb
cmp
and
retw
sarl
loopne
mov
jge
adc
adc
cmp
sti
in
sub
addb
pop
pop
sub
pushf
xchg
dec
stos
out
xchg
jl
and
jl
sbb
fstps
dec
andl
mov
mov
push
repz
sub
in
inc
or
xor
out
sbb
jmp
hlt
pushf
mov
out
sbb
in
loop
pusha
inc
push
jnp
push
lcall
mov
jl
gs
aad
ret
enter
dec
jne
or
les
jle
arpl
lret
fstp
scas
mov
xchg
orl
ret
sar
push
xor
sahf
xor
xlat
sub
mov
ja
nop
inc
divb
imul
lock
icebp
mov
pop
pop
jae
sahf
inc
xor
pop
aam
lcall
test
jmp
aam
addr16
mov
cmp
cmp
or
inc
mov
lcall
dec
int
jp
inc
pop
mov
mov
sub
jge
inc
or
adc
dec
dec
lds
loop
inc
xchg
dec
cltd
adc
xor
pop
or
xor
les
sbb
inc
lret
aas
imul
jmp
jns
adc
iret
cli
in
mov
repnz
pusha
call
ss
jo
pop
adc
adc
cmpxchg
pop
das
int
sti
mov
push
jle
mov
sub
sbbb
or
fldenv
sub
insb
mov
fidivrl
jl
mov
mov
lcall
mov
mov
into
cwtl
push
or
stc
mov
mov
xorl
xchg
dec
pop
mov
fimull
or
inc
in
cmp
mov
fisttpl
mov
sub
test
jno
cli
jl
mov
or
imul
and
xabort
inc
lret
pop
fimull
fsubs
lods
adc
adc
push
fidivrl
inc
int
fsub
insb
sub
push
sbbl
hlt
int
lahf
lcall
push
shrl
push
fidivl
jmp
js
xor
and
dec
xchg
cli
jecxz
push
sub
rclb
in
inc
dec
aas
lret
mov
jns
adc
sbb
int
sub
jmp
cmpsl
push
inc
pop
xchg
nop
scas
pop
mov
adc
outsb
inc
pop
and
mov
cltd
jmp
mov
rolb
cli
pop
and
sbb
je
add
cmp
mov
mov
adc
mov
adc
xor
inc
fists
add
or
pushf
pushf
lcall
sub
fwait
pop
daa
test
mov
enter
in
sbb
fildll
cmpl
int3
add
adc
xlat
push
cli
dec
inc
out
mov
and
xchg
adc
mov
inc
cwtl
aas
insb
je
jp
xchg
sub
dec
aas
pushf
mov
push
add
mov
test
and
insb
xchg
and
and
jns
xchg
jl
int
mov
xlat
pusha
incl
rcl
cmc
test
or
out
xchg
enter
out
ret
inc
dec
mov
lods
or
out
adc
add
rol
js
ss
or
call
movsb
push
std
mull
mov
pop
xchg
xchg
out
push
fsts
sub
mov
fildll
xor
sbb
shlb
enter
js
dec
xor
jle
push
sbb
push
mov
filds
insb
fimull
add
adc
stos
test
adc
addr16
shl
popl
add
mov
inc
xchg
jg
sbb
or
mov
and
push
cmc
add
lods
sbb
pop
push
nop
mov
or
cmpsb
mov
insb
cmp
xor
adc
das
mov
xchg
les
lahf
call
mov
and
pop
gs
pop
fistpll
cwtl
add
cmpsb
fs
pop
je
std
and
or
cmp
lahf
cmp
pop
mov
pop
sub
scas
mov
cmpsb
mov
jp
imul
or
fisubs
xor
jmpw
jge
ss
ds
pop
int3
xor
outsl
jnp
orl
inc
xchg
mov
stos
mov
repz
jns
push
mov
fsubr
jne
pop
adc
push
sarb
cs
test
push
sbb
lods
cld
add
and
jno
pop
inc
jo
jge
loopne
sbb
out
fcmovb
cmp
les
mov
repz
cltd
dec
cmp
xchg
les
subl
jb
xabort
icebp
les
je
test
and
mov
sbb
movsb
pusha
mov
enter
mov
lret
and
cmpsl
les
cmp
dec
xchg
loopnew
add
ds
or
into
jl
cmp
sahf
out
pop
mov
movsl
sub
pop
daa
pop
mov
aad
nop
jg
neg
push
pop
dec
pop
sar
pop
cmpb
ss
sbb
bound
or
mov
lods
inc
add
dec
push
stos
or
movsb
lods
movsl
repnz
sbb
pop
fmuls
mov
nop
movsb
andb
je
inc
add
dec
cmp
cmp
jae
jmp
or
mov
mov
jbe
pushf
mov
push
add
cmpsb
sbbb
ret
enter
test
dec
aaa
popa
negb
fimull
call
lcall
pop
cmp
mov
mov
aam
mov
fisttpll
js
rorl
dec
sbb
mov
mov
lret
popf
jne
mov
aaa
mov
cwtl
dec
hlt
cli
into
mov
fs
iret
inc
jg
out
out
push
sbb
aam
fimuls
imul
pop
das
in
iret
jge
popf
dec
inc
fadd
lds
jbe
mov
test
and
scas
clc
add
dec
fmull
addr16
imul
xlat
pop
mov
xchg
data16
aaa
je
roll
mov
mov
iret
pop
imul
jl
lahf
or
inc
xchg
fbld
pop
outsb
sbb
or
xchg
ds
ljmp
clc
lahf
mov
lds
ret
xchg
js
rcll
into
pop
jl
popa
or
sub
mov
pushw
or
loop
test
fisttps
inc
outsb
outsb
mov
scas
or
cli
ja
ds
cmp
mov
incl
mov
imul
inc
lret
xor
or
add
sub
lock
jae
sub
sub
inc
mov
inc
ret
mov
loopne
xchg
pop
shrb
aaa
fisubl
push
xchg
push
inc
addl
std
xchg
pushf
mov
add
cmp
dec
jp
cltd
es
xchg
stos
push
mov
int3
scas
adc
inc
notl
mov
imul
sti
shll
xchg
addr16
dec
lods
mov
mov
data16
dec
push
insb
xor
inc
shll
int
mov
inc
out
add
jge
push
sub
sub
imul
add
fistps
test
test
xor
repz
dec
add
xchg
js
or
scas
cmc
lods
cmp
or
mov
and
pusha
popf
or
pop
xchg
stc
sbb
shrb
jle
sbb
repz
decb
push
dec
movsb
inc
xchg
fwait
mov
dec
test
pop
movsb
xorb
dec
ja
mov
dec
outsb
lods
inc
notb
push
cmp
sub
push
imul
jne
call
loope
sbb
leave
incl
xchg
jne
sbb
out
xchg
mov
pop
xor
out
aas
or
jae
cltd
mov
push
aam
dec
cwtl
lret
ret
mov
add
sub
dec
js
cmp
jle
mov
pop
pop
dec
sub
ljmp
jo
add
fstpt
mov
xor
movsb
jmp
push
xchg
js
sub
in
inc
push
rcr
mov
mov
add
roll
push
push
mov
repnz
pop
stos
int3
or
orb
lahf
into
sub
dec
sub
jle
addr16
jb
sub
in
fimull
jb
lods
mov
int3
call
inc
adc
ds
loop
scas
stos
xchg
mov
or
mov
loopne
mov
cmp
daa
mov
push
jle
int3
mov
xor
fiadds
dec
mov
add
ds
repnz
or
cmp
lret
into
xor
sbb
rolb
rorb
lds
aad
jb
jbe
inc
stc
xor
outsb
add
fwait
cmpb
xor
imul
pop
push
lret
pushf
fsts
push
sub
int
les
roll
movsb
test
mov
mov
jae
mov
je
inc
xor
xchg
fwait
mov
add
cmp
aas
lock
outsb
pushf
call
mov
inc
shll
xchg
cltd
clc
dec
mov
fimuls
mov
inc
mov
push
mov
addps
push
jle
hlt
shlb
dec
add
repz
xchg
rcr
or
sbb
mov
bound
data16
hlt
outsl
push
in
imul
add
scas
inc
and
stc
fsubrs
add
inc
xor
in
popl
imul
pop
or
in
dec
rcrb
or
cmp
enter
daa
mov
sub
mov
fnstenv
sahf
std
cli
cmp
mov
inc
pop
mov
inc
das
dec
sarb
jle
inc
shll
mov
ret
pop
andl
test
test
sarb
dec
xchg
mov
insb
xor
cmp
or
cmp
ljmp
fldcw
add
int3
jle
mov
push
jl
movsb
cmp
pusha
fs
cmp
stos
movsb
sub
mov
push
xchg
fsubl
adc
mov
imul
push
xor
int
pop
xchg
sub
mov
cmpsl
rolb
stos
ret
lea
xlat
cmpsl
or
xor
outsb
push
mov
nop
add
lods
adc
inc
js
sbb
fs
fstpt
xchg
pop
fisubrs
push
fiaddl
sbb
out
out
xchg
dec
adc
jle
ret
sub
dec
and
imul
or
fadds
pop
dec
shrb
test
inc
or
cs
nop
leave
imul
push
jns
push
jg
sub
das
out
pushf
gs
ja
mov
sub
lret
je
aad
and
les
sbb
push
push
pop
in
add
iret
test
into
bound
fidivrl
mov
jo
cmp
dec
mov
lock
scas
cmp
movsb
hlt
icebp
mov
cmp
dec
repz
pop
or
and
das
adc
jmp
jle
loopne
js
ror
arpl
mov
pop
stos
js
shr
sub
adc
insl
movsl
shrl
jne
fbstp
cmp
mov
or
adc
outsl
sub
push
cmp
fildll
xchg
inc
das
scas
fimuls
jge
rorl
fmuls
lea
addl
jns
shll
loopne
cmpsl
in
ds
sub
cmp
in
ds
sub
jb
fsubl
stos
mov
out
dec
or
adc
jne
adc
iret
popa
mov
rclb
add
nop
imul
insl
stos
testl
jg
dec
cmp
outsl
xchg
enter
xchg
subl
jae
jb
out
pop
lea
pop
adc
pop
pop
fcompl
and
insl
loop
mov
mov
xor
xor
mov
jp
hlt
std
stos
lds
mov
jne
pop
cltd
ficompl
xchg
mov
cli
dec
outsb
lahf
sbb
sub
push
dec
repnz
mov
mov
mov
fisubs
nop
adc
lret
scas
mov
mov
fs
xchg
and
inc
inc
dec
xor
cmp
xchg
lret
push
or
ret
inc
into
adcl
sub
sub
mov
in
xchg
mov
lea
mov
xchg
mov
cmpsl
dec
out
push
aas
lret
lahf
sti
repnz
xchg
sub
cwtl
mov
push
sbb
fstps
push
cwtl
leave
out
or
add
getsec
cs
test
dec
lret
xchg
imul
push
sbb
mov
cmp
adc
lahf
jge
adc
mov
fidivs
sbb
or
add
sbb
fstpl
dec
sbb
add
inc
xchg
ljmp
inc
insl
jns
cmp
mov
jg
into
mov
push
je
insl
imul
cmp
divl
lret
pop
xchg
fidivl
in
mov
mov
and
pop
inc
jl
mov
ret
push
mov
loope
faddp
or
xchg
inc
loop
fimull
mov
lahf
test
mov
lods
mov
movsl
push
test
ret
xor
stos
cltd
cmc
loopne
adc
or
pop
movsl
cmp
fwait
lret
xchg
mov
iret
xchg
pushf
xor
imul
inc
and
mov
lcall
in
xchg
xchg
mov
mov
inc
xlat
dec
dec
jb
mov
sub
jmp
add
lods
scas
fs
sub
shlb
adc
rolb
push
push
movsl
mov
cmp
push
cmp
cmp
dec
xorl
sub
jbe
pop
icebp
in
icebp
dec
scas
cmp
insb
repnz
push
jmp
out
add
lret
xlat
push
dec
or
lods
xor
jmp
outsb
fldl
sub
cmp
hlt
adc
jg,pn
add
into
push
imul
lret
clc
xchg
icebp
cmp
sub
xor
fs
fxch
jo
dec
lds
cmp
xchg
xor
in
sub
imul
imul
in
cmpsb
mov
or
and
xor
xor
xchg
inc
xchg
adc
andb
fstpl
mov
push
and
adc
mov
les
in
je
inc
jl
stos
cwtl
iret
cli
popa
lret
lods
cmpsl
iret
into
insb
cmp
mov
sub
rorb
sbb
jns
in
and
enter
mov
out
and
xchg
lock
int3
subl
cmp
xlat
ret
cmp
cmp
push
icebp
mov
arpl
rolb
add
cmp
adc
lahf
and
shrb
cli
dec
xchg
nop
mov
int
or
pop
sub
test
pop
add
fnsave
in
sbb
roll
js
sbb
adc
stc
adc
push
and
lret
jecxz
xchg
test
out
and
xchg
inc
cmpsl
and
out
dec
fmull
adc
popf
insl
dec
sbbb
rclb
xor
das
ss
aas
sub
hlt
jbe
dec
jecxz
cmpsb
sbb
mov
add
jmp
sbb
in
lods
nop
and
ss
clc
adc
lods
js
cmp
xchg
xchg
xor
push
mov
adc
add
js
cmpsb
insb
jns,pt
pop
aad
call
or
repnz
add
and
xchg
add
jae
mov
fildll
lahf
mov
shlb
jl
push
jne
fistpl
or
lcall
and
outsl
gs
mov
mov
popf
push
inc
xchg
in
out
mov
push
add
cli
addr16
lods
lods
xchg
aas
jle
in
jmp
in
fistl
call
dec
repz
arpl
repz
and
lcall
sub
gs
cmc
into
hlt
je
pop
push
mov
out
nop
call
inc
popa
aas
push
sbb
pop
test
dec
aas
nop
add
fs
xchg
add
test
popf
shlb
xlat
rclb
sub
xor
xor
cmp
push
add
aam
out
xlat
clc
aad
mov
cmp
ja
cmp
pop
inc
or
out
repz
sub
or
or
sbb
push
add
sub
sub
pop
xchg
es
shll
dec
lcall
leave
lcall
or
xchg
jbe
xor
das
dec
repz
push
push
loop
in
push
rcrb
test
cltd
mov
shr
add
popf
push
jg
xchg
stos
sbbl
jnp
xor
pop
lods
faddl
sub
cmc
aas
push
inc
jnp
xchg
mov
int3
push
push
pop
inc
dec
imul
ret
popf
fidivrl
mov
jp
xchg
jl
xor
inc
sub
push
mov
and
cmp
mov
dec
fistps
cmp
lds
es
dec
xor
ljmp
lds
scas
or
hlt
jno
xor
mov
out
fdivr
dec
enter
mov
bswap
inc
aad
movsb
in
call
jge
fildl
andb
dec
lret
pop
dec
xchg
sbb
repnz
lahf
mov
pop
js
inc
add
ss
lods
sbbb
sub
pop
jbe
cmpsl
mov
loope
mov
pop
je
addr16
mov
nop
into
rol
pop
rcr
lahf
call
xor
rorl
or
add
inc
cmpsb
mov
es
xchg
add
movsl
mov
adc
movsb
addr16
movsl
sub
dec
test
pop
push
in
int3
out
dec
mov
mov
cmp
xchg
leave
and
in
push
xor
mov
mov
cmp
cmp
cmp
scas
sbb
add
into
add
or
movsb
mov
nop
xlat
push
lods
int3
jnp
dec
scas
pop
imul
sbb
mov
loop
mov
ljmp
in
loop
adc
jle
sar
xchg
inc
cmp
lsl
cmp
fiadds
cld
add
mov
leave
ljmp
push
test
mov
arpl
dec
arpl
cmpsl
cmp
dec
xchg
lcall
pop
pop
fs
popf
lods
fistps
les
je
decl
jg
dec
scas
mov
jg
mov
dec
fs
imulb
fnstsw
movsl
cmp
mov
jg
mov
mov
push
jl
mov
mov
fists
movsb
cmp
jnp
clc
sub
sub
outsl
push
cmp
push
and
dec
ret
stos
call
or
cmp
lods
dec
cmc
or
and
movsb
pop
stos
mov
or
cmpsb
mov
sub
test
pushf
fists
cli
jbe
push
mov
test
pop
lock
icebp
lahf
data16
stc
inc
mov
lcall
movsb
inc
mov
jo
mov
addr16
mov
inc
inc
popf
dec
movsl
sub
xchg
ljmp
inc
test
in
ret
lds
int
pop
push
jb
arpl
outsb
sub
sbb
jns
dec
adc
add
add
aad
arpl
add
popa
movsl
sub
fimuls
or
mov
inc
adc
enter
movsl
add
or
icebp
dec
jbe
cmpl
or
hlt
es
xchg
aaa
loopne
notl
xchg
jbe
cmp
adc
in
add
or
ja
dec
push
loopne
stc
mov
mov
cmc
mov
dec
mov
sbb
and
mov
stos
cmp
ds
mov
mov
mov
or
fsubs
pop
and
and
loope
dec
mov
in
loope
push
xor
jle
fmull
nop
xlat
cltd
repnz
sarb
jg
jae
jg
aad
pop
iret
add
movsl
pop
xor
mov
stos
test
cmp
out
or
fidivs
and
sub
adc
inc
fdivl
je
mov
jbe
mov
add
cld
cld
jo
cmp
xchg
xlat
rolb
pop
fisttps
sti
cmp
dec
pop
jb
fwait
hlt
pop
in
jno
enter
rcrb
mov
outsl
jne
cmp
daa
push
dec
sub
inc
lcall
add
jge
jne
into
xor
sahf
lret
pop
rcrb
mov
es
adc
out
es
bswap
clc
out
inc
lods
push
push
call
aas
sbb
mov
enter
jns
mov
push
inc
insl
nop
inc
dec
les
xlat
pop
and
out
push
lret
xchg
stos
test
pop
add
xchg
lds
adc
jno
or
adc
xchg
pop
mov
test
fisubrs
insl
mov
test
leave
add
cli
sbb
xor
push
rolb
repz
test
nop
jmp
xchg
push
lret
lret
or
jge
jb
sub
push
mov
pop
lret
fnstsw
xchg
push
xchg
arpl
adc
push
mov
jl
xor
lods
cmp
pop
imul
jae
popa
mov
bound
push
into
cmpl
adc
jno
lret
faddl
pop
pushf
nop
sbb
lcall
adc
pop
lds
xor
xchg
stos
xchg
mov
adc
test
dec
lcall
mov
popf
fstps
or
mov
scas
and
scas
retw
cld
inc
sqrtps
sti
mov
dec
cmpsb
xor
jp
aad
jg
lahf
add
js
lret
popa
push
ret
inc
rcrl
cli
jns
push
dec
push
test
pop
pop
inc
xchg
lods
mov
dec
cmp
mov
into
fs
sub
and
xchg
mov
pushf
scas
ret
ds
sarl
mov
cwtl
push
xchg
sbb
das
test
sbb
lds
adc
loopne
mov
jg
pusha
pop
aad
mov
popa
cmpsl
movsb
or
jns
push
pop
cmp
bswap
jecxz
imul
sub
sbb
icebp
jnp
cs
add
mov
add
lds
adc
lcall
xor
das
stos
fstl
add
sub
add
mov
xchg
scas
mov
data16
pop
xchg
jge
hlt
sarb
sub
or
inc
loop
int3
call
mov
and
adc
dec
or
mov
mov
loopne
scas
cmp
adc
das
stos
cmp
push
movq
xor
sub
ljmp
rcl
xchg
stos
mov
add
in
and
enter
jb
dec
sarb
test
fwait
inc
mov
cmp
inc
loopne
imul
jns
enter
inc
mov
aas
mov
mov
pop
mov
ds
mov
testb
lods
push
push
xchg
lea
and
mov
andb
pop
into
stc
aaa
imul
incl
in
int3
js
je
cmc
and
jp
inc
sahf
inc
das
data16
sbb
mov
mov
aas
adc
movsl
imul
push
out
imul
rol
mov
and
clc
sub
jae
or
pop
ja
and
add
out
stos
stos
jae
sub
inc
sub
outsl
xchg
ffree
cmc
adc
or
pop
out
loope
faddl
cmp
pop
dec
cmc
jmp
rol
rcll
inc
repz
mov
pop
dec
fisubs
push
and
loop
add
mov
pop
mov
jae
jns
cwtl
out
hlt
xor
mov
lret
arpl
ldmxcsr
pop
lret
leave
bswap
outsl
jl
jecxz
mov
push
ret
inc
pop
mov
jo
mov
dec
push
sbb
add
sbb
lea
add
mov
repnz
xchg
dec
xchg
mov
or
push
cwtl
imul
mov
and
bnd
repz
bnd
mov
imul
sub
cmp
in
icebp
jnp
lods
or
mov
lret
cmp
cwtl
insl
fisubs
lret
xor
ret
add
push
test
adc
or
test
push
lds
lret
mov
inc
sub
mov
in
cmp
or
out
loopne
sti
aas
int
xor
jl
andl
fmuls
inc
add
cld
cmpxchg
cmp
inc
mov
movsl
in
xchg
inc
shlb
mov
xchg
mov
aam
stc
in
push
xor
out
sbb
in
int
mov
sbb
xor
aaa
orl
js
lahf
ljmp
cmc
jns
pop
in
mov
jecxz
sahf
ror
and
test
sub
sub
lret
xchg
and
sbb
es
mov
add
addr16
fsubs
jbe
cmpsl
pushf
incb
movsl
rclb
mov
loope
sub
mov
nop
movsb
add
cld
not
ret
and
movsl
adc
cwtl
fildl
enter
data16
adc
xlat
pop
arpl
sbb
add
pop
subl
sub
imul
jne
div
xor
inc
dec
fcmovnb
xchg
inc
mov
mov
xlat
outsb
bound
lahf
out
cli
cmp
pop
add
cmp
mov
mov
lret
lods
mov
out
mov
push
clc
aas
lret
aad
cwtl
mov
adc
dec
jl
call
cmp
adc
rol
in
lret
test
adc
sbb
sub
push
xor
mov
frstor
inc
fists
fistps
xor
dec
std
fstl
stos
lret
mov
xor
push
rorb
stc
fnstsw
jae
adc
fmuls
inc
ljmp
mov
cmpsl
cmp
pop
lods
insb
add
mov
adc
mov
pushf
in
shll
or
fsubr
push
insl
addr16
pop
sahf
xor
fbstp
ljmp
mov
pop
sbbl
xor
pop
mov
fsubs
inc
cltd
loop
movsb
pop
sbb
add
inc
testl
dec
jne
xlat
mov
dec
lds
xchg
push
mov
adc
cmp
adc
lcall
push
xchg
mov
ds
mov
mov
mov
and
push
ljmp
and
fst
ret
xchg
cwtl
push
adc
xor
mov
adc
push
rcr
add
ret
push
pop
fsubs
jmp
and
out
sub
push
xchg
movsl
dec
cmp
in
cmp
dec
shll
push
fdivl
jns
fisubrl
pop
mov
popf
xchg
je
jnp
mov
sahf
out
inc
insl
jg
pop
sbb
xor
add
cmp
mov
push
movsl
test
inc
mov
jb
jnp
lods
mov
lahf
xchg
add
stos
adc
dec
les
jae,pt
fwait
mov
das
adc
jmp
xor
loop
test
sub
xor
out
js
xor
inc
mov
test
fnstcw
push
sub
mov
adc
push
pop
dec
imul
mov
xor
aas
nop
inc
nop
lret
movsl
sahf
pop
ret
sub
sub
stos
mov
lahf
add
fs
add
jl
mov
xchg
lcall
sub
je
or
or
dec
fs
cmp
fs
push
movsl
push
xchg
lea
mov
gs
mov
shrb
adc
or
mov
cmp
popl
dec
xor
mov
decb
ret
test
jge
rcll
out
mov
mov
jb
leave
pop
pop
hlt
mov
jge
call
test
mov
hlt
cmp
and
push
fdiv
cmp
push
cmc
stos
incb
flds
rorb
dec
subl
les
lock
sbb
push
in
negb
pop
aad
pop
inc
dec
cli
pop
test
stos
cmp
cmc
lock
test
jne
fiaddl
push
imul
aad
xor
xchg
mov
aad
push
adc
stos
cmp
repnz
repz
outsl
std
imul
inc
imul
cmp
pop
loop
ficompl
mov
aaa
cld
push
jb
dec
push
lahf
fistl
mov
into
stc
divl
ficomps
inc
movsl
pop
and
lods
fidivrs
outsb
inc
lods
and
stc
sub
shrb
pop
popf
aam
cmp
xor
fs
cmp
sbb
mov
lods
fs
fldcw
scas
xor
notb
jo
mov
movaps
fidivl
pushl
inc
cmp
dec
lret
fidivrl
jge
mov
je
loope
fs
fsubrs
inc
stos
mov
pop
mov
fs
aam
mov
lods
pushl
dec
jae
imul
adc
outsb
movb
bound
sti
imul
and
or
inc
ds
inc
or
fsubrs
xchg
add
jg
pusha
pop
filds
jge
push
mov
call
lock
jg
dec
jp
movsl
pop
js
rcll
jne
mov
inc
mov
jne
push
adc
mov
add
scas
add
mov
dec
icebp
ja
cmp
xor
push
cld
pop
arpl
and
fsubrs
sub
rol
adc
aam
cs
mov
dec
cmp
sbb
sbb
sub
jge
stc
pop
or
iret
enter
insb
push
iret
inc
enter
push
fld
mov
leave
das
icebp
movsl
dec
sub
fdivr
and
mov
cwtl
mov
les
scas
imul
cmp
fistpll
mov
jo
mov
cmpsb
ret
mov
or
cmp
loope
sbb
lcall
in
jae
lods
xchg
add
or
dec
jno
xor
or
sbb
out
js
dec
sbb
mov
ret
int3
into
clc
pushf
and
sbb
add
dec
roll
xchg
loopne
rcr
adc
lret
rol
mov
in
aad
dec
jmp
jl
js
daa
test
lret
js
push
repnz
call
add
pusha
cmp
mov
cmp
and
cwtl
pop
outsb
sti
and
pop
dec
sbbb
jl
push
add
jp
loop
lea
out
and
in
fsubrs
cmp
push
test
out
pop
pop
inc
int
cmp
test
mov
enter
icebp
add
cmp
push
cmp
fstpt
sti
nop
arpl
and
cmpsb
sbb
xor
mov
jo
pop
aad
mov
pusha
and
cmp
mov
mov
fistl
sub
test
adc
xchg
lcall
scas
inc
mov
dec
insl
cmp
movsb
ja
es
loopne
cmp
mov
les
pop
pop
jge
ret
lret
test
add
out
adc
dec
mov
mov
jp
jecxz
fistps
vprotq
filds
pop
xchg
add
icebp
pop
and
xchg
xchg
sbbb
jns
leave
test
ds
sbb
enter
dec
fstps
cltd
gs
je
xchg
fchs
xchg
rolb
mov
cwtl
pop
mov
add
enter
mov
mov
dec
jno
push
jae
stc
lcall
or
arpl
mov
sub
adc
dec
rcrb
pop
pop
ret
pop
cmp
dec
ret
push
int3
test
mov
mov
push
add
mov
test
push
das
sub
fsubrs
cmp
xor
jne
jge
adc
dec
andl
shlb
arpl
pop
mov
js
pop
push
inc
lock
cltd
mov
or
testb
pop
inc
call
xor
lods
test
mov
ficoml
addb
shr
push
adcl
insb
dec
mov
adc
xor
or
insb
add
test
popf
cmc
pop
fnsave
sahf
push
fsubrs
insb
loope
adc
insl
xchg
je
jle
je
cltd
test
push
jecxz
add
mov
fistpll
ds
sub
cmp
ja
sub
or
and
out
adc
mov
jmp
lds
or
jbe
xchg
cmc
sub
std
ja
in
pop
inc
add
pop
sub
mov
rcr
das
xchg
ja
test
stc
dec
xor
mov
ret
add
lock
or
mov
add
int3
xchg
jne
lock
inc
outsl
lret
cltd
mov
adc
adc
xchg
and
dec
imul
xchg
jno
or
cmpsl
cmp
dec
lods
fidivl
into
dec
mov
aad
inc
inc
cmp
cmp
mov
idivb
xchg
push
sahf
mov
sub
push
cmp
fists
stc
pusha
add
push
jns
xchg
mov
jmp
xchg
push
dec
stos
cmpsl
test
fistpll
int3
mov
scas
add
imul
jb
xlat
inc
xor
or
adc
pop
xchg
loope
nop
dec
dec
pusha
add
pusha
fisttps
enter
sahf
repz
or
je
movsl
sbb
pop
cmp
rcrb
and
inc
and
cmp
paddusb
fimuls
data16
dec
lret
cmp
or
mov
xchg
inc
mov
or
xor
divl
xor
xchg
add
stc
ret
pusha
repnz
jecxz
xchg
pop
lret
call
add
xor
mov
lods
aam
rol
lret
pushf
mov
stc
in
mov
jecxz
dec
add
in
jno
aaa
and
outsb
mov
xchg
mov
decl
push
mov
push
fimuls
iret
mov
dec
push
push
mov
sub
cmc
lods
add
les
mov
ja
jo
std
and
xorb
in
fs
cld
jecxz
push
mov
stos
subb
inc
negl
push
adc
les
jecxz
mov
xchg
jl
lret
leave
mov
insb
mov
mov
lds
rcrb
aas
sbb
frstor
movsl
clc
xor
or
scas
stos
ss
push
pop
scas
mov
sbb
xor
faddp
mov
add
jle
cld
pop
fildl
sti
cmp
sbb
arpl
leave
lock
sbb
insb
jbe
mov
push
pop
sub
fcomps
add
sbbl
bound
mov
arpl
loope
pusha
xchg
add
sub
fiaddl
jp
dec
ret
ja
mov
push
les
outsb
mov
mov
ja
xchg
and
inc
pop
and
sbb
inc
push
push
adc
into
into
pop
loop
sbb
mov
fnstcw
dec
incl
mov
sub
mov
xor
fstp
pop
sub
mov
fsubs
sbb
dec
xchg
mov
sbb
ficompl
inc
movsb
fidivl
xchg
icebp
lea
jle
movsl
rol
sarb
ja
les
xchg
and
ss
pop
pusha
enter
pop
leave
cmp
out
gs
cmpsb
push
pop
test
roll
mov
add
adc
out
mov
inc
xchg
int3
pop
fucomi
jecxz
adc
jmp
imul
repz
or
cmp
insl
stos
pop
scas
sub
mov
and
mov
push
push
add
mulb
lret
loop
jl
aas
xchg
stc
test
cmc
pop
lods
shll
lcall
sti
jb
add
pop
adc
lret
jg
jle
pop
mov
test
leave
dec
push
addr16
jle
das
fidivl
stos
movsb
jecxz
ds
lahf
dec
push
jp
push
mov
xor
xchg
push
ficoms
xchg
test
orb
pop
jmp
xor
mov
inc
cmp
arpl
push
rorb
mov
mov
or
imull
in
inc
pusha
daa
sub
add
mov
mov
in
jb
xchg
jp
mov
lea
mov
add
stos
xchg
rcl
jg
subb
pop
jae
roll
dec
sbb
aas
lods
jns
fldenv
loopne
aam
push
dec
out
test
or
cmp
fsubl
sbb
mov
in
movsb
mov
mov
mov
rolb
rorb
adc
jne
mov
or
bnd
mov
in
pop
fidivrs
lcall
mov
mov
lahf
add
add
push
stc
cmc
ret
or
push
insb
ret
rorb
in
repz
mov
mov
jnp
mov
lea
nop
inc
iret
mov
aaa
outsb
jns
and
add
cmp
mov
in
mov
add
mov
fyl2xp1
dec
cs
iret
mov
pop
cmp
jp
dec
fnstenv
ljmp
in
push
lock
cmp
mov
fs
add
ficoml
xor
xchg
mov
lret
pop
int
fs
xchg
ret
sbb
pop
lea
lea
mov
sti
cmp
pop
shll
clc
xor
jne
stc
es
loop
or
fnstcw
pusha
enter
mov
lret
cmc
xor
sub
lds
mov
cwtl
outsb
xchg
je
jne
out
dec
pop
movsl
inc
cmp
shr
xor
je
add
push
xorb
aaa
sub
ja
sub
callw
leave
and
xorl
inc
adc
mov
sti
int
sub
rclb
xchg
push
xor
ffreep
loopne
and
inc
add
repz
inc
loop
test
inc
push
mov
fs
int3
add
mov
xchg
mov
xor
movsb
les
divb
lcall
mov
adc
mov
mov
aaa
pop
add
roll
call
pop
mov
sti
fsubs
mov
pop
fistpll
shrb
scas
into
add
mov
mov
lcall
add
popa
dec
mov
in
lret
mov
and
ss
mov
sbb
repz
cmp
cmp
dec
jb
pop
stc
icebp
test
mov
testb
nop
push
adc
dec
inc
push
jns
lock
sbb
inc
jp
adc
aam
iret
gs
xor
mov
xchg
test
leave
add
js
inc
add
sub
pop
mov
adc
inc
test
orb
push
push
stc
inc
insl
in
sub
mov
pop
xchg
cmpsl
jmp
pop
lahf
in
test
out
shlb
sbb
sti
xor
cmp
cli
jle
out
sub
push
stc
xchg
stos
jg
sub
std
cmp
aas
xchg
pop
jbe
jmp
popf
sbb
imul
das
add
nop
in
loopne
inc
lret
loop
jo
inc
roll
scas
pushf
cs
mov
or
cmp
sahf
push
xor
inc
pop
repz
mov
xlat
xor
pusha
push
push
dec
sbb
mov
sub
jmp
and
adc
dec
lock
dec
xchg
orb
sar
jmp
addl
scas
mov
mov
mov
dec
push
add
mov
mov
cmp
cmp
scas
repz
jmp
sti
hlt
pushf
or
pop
and
loope
sbb
loop
lds
rclb
xchg
scas
rcrl
mov
cltd
push
insb
pop
fistpl
mov
sahf
xchg
mov
mov
jge
loopne
sbb
insb
mov
push
add
loopne
idivb
mov
mov
aam
jle
lret
mov
jne
aad
jo
or
stos
dec
cmp
negl
dec
mov
in
mov
stos
cmpl
xchg
sbb
add
subl
psllq
cmp
les
scas
rcrb
mov
sub
mov
dec
sub
movsl
ret
gs
mov
inc
add
jge
jne
pop
hlt
mov
pop
mov
popf
rcll
cmp
fiaddl
nop
mov
lcall
daa
mov
adc
rcrl
fdivrs
inc
out
and
flds
cs
push
and
cli
ret
popa
and
sti
imul
dec
add
lock
jnp
mov
mov
xor
icebp
cli
test
aam
adc
push
push
inc
jns
sarl
mov
xor
jmp
or
repnz
push
into
mov
out
movb
adc
push
imul
orb
mov
sub
imul
mov
adc
add
imul
dec
out
in
inc
loopne
pop
and
jmp
loope
subl
add
aad
and
push
fstpl
je
push
dec
shrb
aas
aam
adc
outsb
test
or
stos
push
mov
xchg
mov
aad
fs
adc
int3
add
scas
xchg
sbb
in
mov
jae
or
push
push
cmp
jb
dec
adc
sarl
mov
mov
iret
mov
jo
mov
cmc
mov
mov
pushf
xor
xacquire
pusha
fs
and
fldt
daa
leave
dec
or
shr
mov
je
inc
or
stos
xlat
nop
and
dec
fmuls
add
cmp
aas
adc
jno
jnp
add
sbb
sbb
or
mov
lcall
jge
enter
imul
or
inc
and
pop
lret
mov
les
pop
sub
sti
mov
enter
lds
sub
ret
mov
inc
xchg
out
test
loop
es
sbb
add
xchg
adc
lea
or
call
data16
or
sbb
imul
jg
dec
pop
js
jge
and
dec
xlat
cmpl
imul
pop
push
orl
les
jnp
pop
cmp
inc
sbb
ret
jl
lcall
subl
mov
jne
sti
mov
in
inc
loopne
cmpsl
ja
sar
call
lock
add
push
dec
je
lods
data16
rcrb
inc
mov
jge
cltd
lods
sbb
sub
ret
call
es
mov
lret
in
push
pop
or
jge
repnz
daa
dec
mov
mov
out
call
mov
jne
sub
in
ret
jecxz
push
sbb
les
xchg
dec
cmp
cmp
ja
jg
sbb
fs
nop
je
or
fs
scas
push
sahf
je
jo
add
fdivl
pop
nop
adc
push
das
stos
ret
inc
cmp
sub
in
outsl
sub
test
and
movsb
nop
fwait
xchg
cmp
js
sbb
popa
cmp
mov
pushf
push
mov
push
out
sub
push
repz
je
push
ljmp
xchg
push
fcmove
in
sub
jns
jns
cs
pushf
and
xchg
int
cmp
cmp
mov
mov
test
rolb
stos
and
fwait
inc
shrl
inc
and
fsubr
pop
cli
mov
pop
test
stos
scas
in
scas
inc
xor
mov
mov
test
cmp
mov
incl
mov
in
pop
je
imul
movsb
push
add
mov
pop
push
mov
push
pop
sub
and
incl
inc
jae
lahf
add
mov
aas
out
mov
and
pop
xchg
mov
dec
jbe
pop
fisubrl
into
xor
out
jle
cmpb
sub
out
xchg
dec
adc
adc
iret
adc
repnz
jne
fnstcw
popa
js
leave
pop
cmpsb
sub
pop
sub
test
push
cmp
adc
and
test
sbb
out
dec
pop
std
mov
popa
xchg
jae
sbb
negl
adc
repz
in
repnz
xchg
and
nop
filds
cmp
adc
inc
dec
cmpsb
data16
inc
fcmovb
test
cmp
hlt
mov
or
scas
stc
cmp
movsb
cwtl
xchg
data16
lea
push
movsb
movsb
xchg
cmp
jecxz
adc
loopne
ret
mov
push
out
insb
lds
add
dec
jbe
shlb
xor
lcall
or
fldt
mov
jl
dec
and
cld
insl
xchg
adc
adc
lcall
sub
stos
push
jne
call
outsl
sub
push
inc
and
dec
je
adc
push
enter
imul
add
dec
cmpsl
xchg
mov
pop
lock
pop
dec
lret
in
out
adc
adc
jb
adc
nop
int3
sbb
mov
ret
jp
sbbb
std
lret
dec
jl
fstp
cmp
inc
test
cwtl
cwtl
repz
leave
push
or
xchg
adc
aad
leave
push
pop
subl
and
cmp
nop
inc
mov
decb
leave
push
sahf
xchg
shlb
or
fsubl
sahf
mov
sbb
xor
call
xchg
pop
leave
push
test
call
into
inc
inc
xchg
nop
inc
sub
stc
in
xor
jp
dec
stc
sub
clc
dec
pop
xor
cmpsb
jle
negl
lods
mov
pop
inc
inc
add
ss
js
mov
mov
lods
mov
jno
ret
push
ss
adc
loope
repz
pushf
mov
push
movsb
js
fcomp
sbb
call
leave
push
adc
lock
pop
mov
imull
stos
test
dec
fidivrl
inc
hlt
out
and
push
loop
jb
leave
mov
or
cmp
fidivs
pop
cmp
test
cmp
imulb
xlat
cmp
aad
out
das
leave
lret
pop
les
insl
pop
repz
xchg
cwtl
sub
mov
dec
inc
mov
and
inc
movb
int
repz
in
or
lret
jne
addb
and
nop
push
xchg
in
xchg
fstpt
mov
nop
outsl
inc
leave
addl
push
imul
adc
in
pop
lret
mov
cmp
xchg
xlat
adc
test
xchg
mov
xchg
push
push
out
inc
fsubrl
addr16
push
jge
cmpsb
xor
ja
mov
mov
in
pop
inc
jnp
mov
jge
mov
mov
or
mov
fisttpll
pop
or
out
int
dec
out
imul
pop
cmp
mov
xchg
lea
addr16
push
xor
xlat
cs
inc
push
int3
adc
ret
xchg
jecxz
mov
or
pop
stos
jnp
mull
push
push
xor
loop
dec
leave
mov
loopne
jp
mov
push
hlt
and
dec
jge
gs
bound
scas
mov
inc
pop
xchg
fiadds
sbb
push
imul
gs
icebp
js
aaa
inc
subl
xor
ret
cmp
mov
fldenv
sti
cs
mov
pop
inc
inc
mov
adc
lea
adc
movsl
xchg
mov
into
inc
in
xor
outsb
xchg
pop
push
adc
bound
mov
aas
mov
std
stos
or
xor
inc
mov
add
ret
clc
xor
sub
dec
inc
lea
xor
xor
loopne
rcll
test
sbb
pop
sub
ja
imul
insb
cmp
sbb
adc
ret
mov
movsb
ja
mov
ljmp
pop
jecxz
cmpl
fs
dec
mov
cmp
loope
test
mov
adc
jne
and
cld
mov
ja
mov
in
pop
jnp
pop
push
sbb
cmpsb
xchg
movsl
lcall
inc
shr
sarb
push
hlt
xor
pop
in
xchg
cmpsb
xchg
sub
push
ficoml
mov
cmp
test
inc
mov
fnstenv
add
das
lods
sbb
clc
dec
pop
mov
mov
mov
sub
pop
fs
sub
ret
add
xor
andl
and
mov
xchg
xchg
clc
adc
lret
js
iret
push
inc
nop
divl
rcll
xor
cld
sbb
xorb
sbb
insb
and
dec
fsubl
mov
call
test
xchg
popf
cld
pop
xor
sub
mov
enter
lahf
dec
jnp
or
xchg
mov
nop
xor
and
adc
pop
push
sub
scas
scas
push
mov
mov
push
call
shlb
adc
and
fldl
iret
cmp
or
mov
xor
roll
divl
jns
pcmpeqw
dec
pop
add
mov
xor
dec
push
movsl
pushf
ss
shrl
sub
pop
popa
and
cmp
sarl
push
std
xor
mov
movsb
rcrb
or
test
cmp
stos
inc
out
addb
aam
out
ja
hlt
imul
pop
rol
xor
mov
jp
jbe
lock
or
sub
xor
out
in
cmp
jns
es
mov
popa
adc
lods
fsts
jp
shrd
mov
mov
pop
mov
pop
or
mov
testl
adc
push
mov
pop
outsl
pop
repnz
dec
push
sbb
icebp
inc
loop
xor
push
inc
adc
out
adc
enter
flds
ret
cmp
ds
xor
fucomp
stos
xchg
imull
dec
repnz
lds
mov
jge
repnz
pop
pop
push
repnz
push
mov
bound
pop
addl
jp
or
stos
pusha
xchg
insb
dec
movb
shll
sub
fsubr
gs
addb
hlt
mov
add
dec
testl
mov
lcall
rcr
nop
js
xchg
cmp
iret
mov
add
cmpsb
inc
pushl
cmp
leave
push
inc
xor
cwtl
std
repnz
int3
cli
xor
call
dec
and
enter
push
dec
cmp
mov
and
inc
cmpb
push
ljmp
push
pop
js
jae
mov
int
scas
sub
mov
jnp
popf
cltd
das
mov
insl
mov
jmp
sar
mov
mov
adc
sbb
fcmovne
rcl
lret
gs
clc
cmp
loop
xchg
rdmsr
test
cmp
repnz
call
out
dec
aaa
iret
data16
insb
and
mov
inc
lea
pop
test
cmp
xchg
std
push
mov
xchg
rolb
jecxz
push
jecxz
inc
scas
dec
in
cwtl
xor
in
or
rolb
call
daa
rorl
fistpl
adc
jle
cld
dec
call
jnp
and
ss
inc
sbb
cmp
or
test
inc
mov
adc
and
aad
call
dec
loop
push
add
or
mov
dec
adc
xor
insl
fsubrs
fstps
loopne
out
outsb
or
test
mov
sub
clc
push
xor
rcll
out
push
cmp
xchg
cld
add
xchg
and
repz
out
fnstsw
jmp
int3
pop
push
mov
ret
pop
xor
lahf
je
call
push
hlt
ret
push
out
popa
cmp
sarw
sahf
aam
loop
sub
cmpsl
mov
sbb
dec
mov
inc
cwtl
fistpl
into
mov
jb
sbb
dec
mov
push
hlt
push
insb
in
cwtl
and
loopne
push
call
ja
mov
fsubl
push
or
call
push
or
fiaddl
aas
std
ret
loop
jmp
jle
xchg
pop
mov
stos
mov
mov
in
insl
aas
mov
sbb
push
jb
leave
sub
jle
mov
sbb
lea
xchg
push
or
test
lods
clc
push
test
dec
mov
sti
inc
xchg
xor
mov
stos
jmp
cmp
xchg
addr16
xchg
out
push
int
lcall
fcmovnbe
cmc
dec
push
mov
subl
xor
and
mov
enter
loopne
lea
push
daa
addl
loop
sbb
mov
push
shrl
repnz
orb
aad
dec
sub
mov
scas
test
dec
or
scas
sahf
lret
mov
fistps
outsl
and
pop
inc
and
loope
lcall
stos
adc
fwait
adc
std
insb
int3
jge
popa
cmc
jecxz
ret
jp
push
dec
mov
stos
popf
sbb
fcmovne
lcall
das
inc
outsl
lahf
mov
push
das
sbb
or
sbb
cmp
jl
jle
or
fdivl
xchg
cmp
xchg
dec
jmp
xchg
sub
pop
fiaddl
lret
pop
loope
pop
nop
adcb
rol
addr16
lods
lock
pusha
dec
fstpt
push
inc
push
adc
iret
adc
daa
and
or
inc
mov
add
arpl
adc
or
sub
xchg
es
sub
or
sub
scas
mov
and
and
dec
pop
test
pop
mov
mov
ret
inc
sub
fs
or
mov
pop
out
inc
lea
popf
cmpsb
cli
adc
mov
xchg
dec
mov
lds
popf
mov
cmp
shrb
ja
bound
test
dec
out
lcall
in
dec
push
stos
push
jns
daa
xchg
pop
mov
jmp
rol
mov
and
mov
lret
pop
jecxz
inc
push
sahf
jmp
xor
rcl
adc
jb
add
lret
in
adc
sub
test
lahf
jns
fs
sti
pop
outsb
mov
dec
sbb
jl
inc
pop
xchg
subb
adc
std
adc
sub
daa
mov
mov
adc
and
jae
into
push
mov
mov
std
into
sbb
add
ficomps
sahf
and
mov
add
sbb
js
imul
lcall
repz
xor
lea
jg
cmp
mov
out
jle
pusha
pop
push
dec
lods
inc
andps
rorb
fisubl
xchg
inc
mov
fidivl
test
jg
in
das
repnz
push
inc
cli
sub
and
int3
mov
decl
lods
xchg
or
adc
pop
leave
mov
sarl
pop
xchg
mov
push
inc
scas
mov
iret
and
xlat
lahf
aam
xor
mov
mov
jbe
pop
out
inc
pop
add
mov
shll
lods
loop
ljmp
xchg
fbld
add
add
std
loopne
dec
push
sub
hlt
in
cmpb
jmp
loop
frstor
into
out
leave
insb
pop
mov
imull
push
sbb
push
xor
lret
cmp
in
test
mov
je
lods
movlps
ja
daa
cmpsb
outsb
inc
data16
mov
imul
aas
xchg
out
inc
loop
xchg
cmp
adc
mov
iret
arpl
divb
mov
ss
xor
add
mov
inc
mov
adc
sbb
cmp
hlt
lods
imul
cmp
arpl
or
outsl
test
inc
mov
fwait
inc
test
jo
jb
dec
inc
mov
adc
push
ja
mov
pop
cwtl
sbb
inc
mov
jmp
sahf
push
xchg
jge
mov
jb
lods
pop
sti
mov
into
stos
pusha
ljmp
enter
cmpl
mov
imul
hlt
cmp
aam
xchg
aaa
inc
pusha
jnp
and
mov
fiaddl
sub
push
loope
dec
mov
inc
rcll
movsb
nop
pushf
ljmp
dec
xor
nop
and
mov
lret
psrld
push
xchg
pop
outsb
mov
sub
shlb
inc
xor
iret
lock
addr16
hlt
xchg
cmpb
xor
jecxz
xor
sbbl
aam
xchg
rcrb
adc
push
inc
jae
mov
adc
jge
adc
mov
push
psllq
in
imul
mov
xchg
sti
xor
pushf
fcompl
mov
sbb
mov
or
ret
flds
mov
imul
push
pop
sub
lcall
shlb
mov
inc
jbe
ja
loop
sbb
daa
or
and
in
popf
dec
inc
test
push
lahf
jno
adc
orl
sub
sti
xchg
sarl
pop
or
lods
cltd
stos
inc
mov
push
jg
add
inc
test
sbb
idivb
loope
ja
lods
xor
idivb
leave
test
pop
loopne
ret
rcl
jecxz
shll
pop
mov
jno
pop
ja
dec
sub
and
mov
add
mov
xchg
outsb
push
outsb
mov
jl
push
movsl
mov
jge
mov
ljmp
ret
pop
sysexit
push
test
mov
xchg
rcrl
fildl
inc
shlb
clc
add
inc
and
nop
insb
pop
dec
popf
icebp
jge
enter
gs
and
nop
inc
mov
jb
test
mull
xchg
movsl
dec
pop
push
pop
or
pop
test
repnz
cmpsb
mov
cld
push
add
test
jbe
imul
ja
js
outsl
ret
inc
popa
mov
rclb
outsb
nop
mov
xchg
mov
ss
daa
imul
or
jmp
adc
fldt
mov
xlat
movsl
or
jecxz
pop
pop
mov
fildll
les
aas
add
push
fldenv
add
add
enter
pusha
xchg
push
and
pop
leave
pusha
mov
jge
cmc
into
jae
sub
shrb
add
fnstsw
or
xchg
dec
xchg
sbb
pop
loopne
inc
push
cmc
pushf
popf
jl
imul
mov
imul
or
popa
cmpsl
in
mov
loopne
mov
mov
inc
insb
xchg
push
inc
bound
ret
test
or
or
lds
addb
push
dec
and
push
pause
stos
mov
mov
mov
dec
mov
jecxz
cmp
cmp
xchg
inc
dec
inc
mov
add
call
pop
loope
lods
sarb
pop
das
sbb
or
loope
cmp
jecxz
inc
pop
fldt
call
rcr
int
inc
or
push
adc
minps
xchg
pop
dec
adc
sbb
sahf
in
mov
cmpsb
jnp
stos
es
movsb
cwtl
mov
les
test
aad
adc
adc
jns
roll
pushf
pop
les
out
inc
xchg
jo
mov
sub
movsb
loop
mov
negl
enter
mov
add
lret
xor
into
insb
mov
mov
mov
test
rcrb
pop
cld
or
jg
test
shrb
mov
icebp
imul
jb
mov
pusha
lahf
test
roll
pop
cmpsl
stc
testb
test
mov
or
loope
lods
enter
mov
cmc
and
bound
push
add
jecxz
inc
mov
mov
pushf
negl
and
mov
cs
xchg
pop
cmc
mov
lcall
rcr
add
sub
aas
test
cs
mov
pop
jge
adc
int
xchg
sbb
push
push
mov
jno
ret
jbe
andb
mov
push
jl
les
xor
in
push
adc
dec
jle
das
into
sub
add
push
loop
in
push
and
les
insb
mov
push
gs
cli
rorb
ja
push
fwait
push
xor
push
aad
lods
fadds
sar
mov
xchg
inc
popa
xchg
test
ret
fcoml
mov
sbb
fisttpl
cltd
sbb
cs
stos
repnz
insb
pop
pop
xchg
mov
jg
out
mov
cmp
enter
or
add
sbb
adc
mov
xchg
dec
aaa
adcl
mov
cwtl
in
add
inc
jne
add
out
cmp
popa
pop
push
test
les
lahf
sahf
rclb
leave
cmp
test
js
push
cmc
sbb
xchg
inc
outsl
pop
ret
into
add
fldcw
dec
mov
jo
idiv
imulb
sub
stos
mov
or
lods
inc
pop
cld
mov
gs
pushl
cmc
dec
ud1
jne
imul
movsl
jae
fs
cmp
arpl
xchg
mov
mov
in
xchg
sarl
xchg
call
cmp
fdivl
mov
loopne
ret
fprem
xlat
hlt
or
xchg
ret
rclb
pop
pop
dec
cwtl
jge
fcmovnbe
cld
daa
daa
nop
scas
push
xor
icebp
push
lods
out
mov
cltd
aad
sbb
mov
mov
js
nop
nop
pop
dec
sub
ds
mov
dec
pushf
std
push
lock
inc
sub
pop
xorb
dec
mov
aaa
jle
xor
test
cwtl
call
daa
jle
jle
mov
or
jnp
adc
mov
sbbb
sub
ds
jecxz
add
mov
add
ficoml
in
hlt
mov
xor
xchg
pop
cmc
std
cmc
mov
pusha
pop
sbb
mov
jbe
and
jnp
cmp
mov
cs
jo
fimuls
dec
add
out
int
cld
stc
cmp
inc
and
inc
jmp
mov
sbb
mov
int3
xchg
and
fistpl
stos
pusha
cld
rcl
cld
enter
push
lods
hlt
jmp
cmpl
mov
fcmovnu
sub
fnstcw
pop
mov
dec
pushf
cmp
in
leave
shrb
clc
mov
imul
pop
xlat
ljmp
inc
sub
lds
pop
sbb
mov
or
and
add
adc
add
nop
dec
cmp
mov
xchg
scas
jle
pop
fsub
lret
ss
push
mov
ja
scas
mov
xor
add
outsb
mov
and
jecxz
or
ret
mov
int
jl
inc
call
lea
or
out
in
nop
movsb
add
pop
test
cmp
xchg
dec
sahf
mov
je,pt
xchg
add
jo
mov
lods
or
dec
das
mov
jmp
stc
sub
push
mov
cmpsl
mov
jns
lea
mov
sar
shlb
sbb
dec
aad
mov
shlb
imul
mov
mov
xor
mov
push
xor
cli
ffreep
call
jecxz
cltd
dec
sub
or
jmp
cmp
sahf
or
jmp
add
movsl
push
cld
es
or
loopne
cmp
pusha
dec
cmpsl
xchg
mov
std
scas
dec
shlb
jae
rolb
push
inc
cmp
cmp
insl
push
mov
inc
int3
mov
xchg
pusha
jns
push
fimuls
lods
out
dec
pop
arpl
bound
and
add
lret
lds
push
mov
sbb
jl
jg
cmc
sub
mov
push
notb
push
shlb
movsl
int
adc
sbb
subl
sub
fnstsw
dec
dec
push
loope
jle
inc
popa
setnp
shlb
rcrb
int
mov
jno
les
les
cmpb
stc
mov
jns
into
inc
jo
loop
jb
xchg
fisubs
mov
out
and
inc
mov
mov
inc
inc
hlt
inc
adc
adc
xor
add
inc
imull
or
stos
inc
dec
cmp
fsubrl
sub
cmp
hlt
loope
dec
test
int3
stc
jmp
ret
dec
and
cmp
mov
xchg
neg
adc
sub
repz
push
dec
push
clc
cltd
cmp
movsb
lds
mov
cmpsl
pop
ret
push
pusha
push
mov
out
dec
adc
push
xchg
pusha
test
push
or
arpl
inc
mov
jae
or
adc
ret
pushf
push
loop
dec
jns
adc
ror
jbe
cli
adc
fsubrl
insb
lcall
in
leave
push
out
pop
neg
pushf
dec
and
inc
ss
mov
or
sub
xchg
inc
repnz
popf
inc
or
push
cmp
lahf
fldt
movsb
add
and
xchg
mov
cmpsl
ds
inc
sub
nop
sbb
jnp
lcall
movb
outsl
or
xchg
orb
sub
cmpsb
imul
mov
mov
xchg
popa
in
jno
and
mov
andb
pop
mov
push
mov
int3
je
push
aad
xor
outsb
pop
push
pop
pop
in
cmp
and
pushf
jns
sbb
sbb
jne
cmp
jg
out
add
data16
push
inc
aas
inc
xchg
sti
push
push
sti
inc
dec
xchg
inc
and
in
dec
pop
mov
sub
jmp
jo
adcl
xchg
loopne
or
sub
xor
and
cld
and
dec
pop
ja
inc
in
dec
addr16
sub
loopne
rorl
lods
cmpb
pop
test
add
mov
into
rcrl
jp
jnp
inc
xchg
leave
popf
fmuls
sahf
clc
cmp
outsb
sbb
enter
cmp
es
mov
loope
and
fwait
aam
push
mov
ret
dec
mov
xor
popf
sub
es
mov
sub
in
outsb
das
mov
mov
dec
jecxz
testb
rcll
jne
add
bound
inc
mov
cmp
les
push
sub
inc
push
pop
cmp
cmpsb
sbb
lods
decb
xlat
stos
insb
push
and
cmp
push
add
adc
out
mov
inc
sub
aas
adc
jl
es
mov
movsb
jmp
cmpl
mov
cmp
call
fidivrl
jge
push
outsl
stos
sbb
insl
sub
es
sarb
sub
lds
jno
and
shrl
xor
ljmp
xlat
ljmp
push
mov
xor
imul
push
das
adc
xor
rorb
out
sub
sbb
fstpt
and
jo
or
mov
aad
jl
dec
dec
nop
hlt
cs
cwtl
call
shl
leave
and
sahf
enter
fdivrs
clc
shrb
cmp
ja
xchg
insb
mov
dec
xor
imul
pusha
and
lahf
cmp
fnstsw
mov
aam
mov
in
push
inc
nop
inc
adc
ret
cwtl
sbb
add
out
xchg
jnp
jge
stc
xchg
cltd
xchg
and
lret
or
sahf
adc
and
jl
mov
adc
pop
cmp
imul
xchg
or
stos
cs
mov
inc
cwtl
stos
add
or
lcall
inc
jp
cltd
xor
dec
push
xchg
test
pop
or
push
sbb
in
inc
inc
jp
push
ja
fidivs
xchg
je
pop
lods
in
les
enter
stos
enter
inc
pop
pusha
mov
data16
sub
mov
push
or
enter
std
add
cmp
mov
add
jp
xchg
fisttps
mov
js
sbb
int3
xchg
std
mov
inc
loope
or
inc
and
out
gs
in
ljmp
movq
dec
stos
outsb
repz
mov
stos
sbb
sub
aas
subb
pop
scas
das
and
pop
enter
fstl
lcall
fldcw
jb
xchg
dec
cs
sbb
std
push
mov
out
sub
mov
push
fstpt
inc
cmp
pop
adc
inc
arpl
loop
repz
imull
xchg
mov
das
loop
jg
subl
inc
push
push
leave
jge,pn
fnstcw
inc
dec
mov
cli
fildll
fnstenv
inc
int3
xor
lea
cmp
add
mov
mov
in
jnp
cmp
mov
loop
movsl
cmp
imul
jle
mov
ret
imul
in
cmp
add
shrl
dec
jmp
cmp
add
out
daa
or
notb
bound
outsb
cmp
mov
lock
nop
dec
sar
push
je
ja
fcompl
enter
cmc
mov
cs
jecxz
mov
jg
dec
push
ret
xor
mov
sbb
push
fdivs
and
adc
lret
aaa
aaa
fdivrl
sub
and
push
xor
inc
inc
fstpl
rorb
sub
sub
and
les
sarb
adc
fcmovnb
or
in
cli
dec
inc
adc
or
cmp
popf
stos
jge
inc
inc
mulb
lds
inc
sub
ret
lcall
ret
test
popa
roll
sub
pop
lcall
dec
mov
out
sti
stos
out
sti
push
mov
mov
aas
pop
add
jle
cmp
je
ret
xor
or
mov
mov
lea
lods
mov
mov
dec
xchg
divb
xor
mov
stos
or
test
adc
dec
enter
rol
mov
lea
mov
push
or
mov
lods
sub
mov
dec
lret
int3
les
repz
dec
enter
mov
rcl
add
xchg
inc
jp
pop
xor
imul
and
sub
sub
mov
mov
mov
std
lods
pop
std
add
dec
enter
cmp
scas
lods
pop
mov
pusha
aaa
movsb
dec
ss
adc
inc
fldenv
scas
cmc
push
or
cmc
mov
jecxz
mov
pop
cmp
sub
or
mov
xor
ljmp
pusha
int3
dec
sub
mov
rclb
jae
out
imul
outsb
pusha
cmp
adc
ror
inc
cmpsb
or
cmp
cmpsl
loop
ss
pop
shrl
aad
loop
adc
inc
data16
movsl
xchg
lret
mov
sbb
cmp
testb
sarb
adc
cmp
mov
mov
or
cmp
sti
dec
mov
mov
push
mov
jo
adc
jno
sub
cmp
push
test
aas
clc
ss
loopne
xor
push
jmp
insl
mov
repz
dec
cmp
cmp
repnz
ret
push
cmpsb
cmpb
test
shrl
push
fnstcw
aaa
ds
mov
lods
repnz
icebp
mov
jecxz
outsl
xchg
add
pop
roll
cltd
sbb
cmpsl
mov
fcompl
cmp
shlb
lcall
cmp
xchg
jne
leave
fisubrs
cli
cmp
jge
lret
sub
mov
rcrb
lahf
xchg
loope
xchg
lahf
cmpsb
add
lret
mov
imul
adc
mov
insb
mov
pop
fiadds
loopne
adc
orb
jne
popf
lock
cmpxchg
mov
and
in
add
pop
push
lods
fwait
sbb
subl
lret
xor
popa
jl
mov
push
test
mov
pop
add
inc
cmp
mov
lods
pop
pusha
jne
movsb
dec
mov
pop
push
cwtl
cmpsb
inc
aad
mov
addr16
push
into
jl
pop
pop
mov
repnz
out
push
pop
cmp
sub
cltd
mov
out
and
xor
ret
pushl
inc
mov
or
xor
shll
and
jg
daa
lret
cld
dec
imul
bound
test
repz
push
out
ret
movsl
xchg
fldenv
mov
mov
mov
and
jp
jmp
push
and
mov
cmp
or
insl
jnp
or
ja
adc
repz
or
lods
adc
mov
outsl
mov
shrb
shrb
mov
pop
scas
push
xor
sbb
pusha
fucomip
das
and
mov
cltd
mov
add
mov
iret
aas
inc
ret
ja
push
jle
jmp
jmp
std
rol
sarb
fldenv
negl
adcb
mov
jg
pop
or
lods
xor
test
cmp
inc
int3
adc
push
inc
enter
jbe
jb
ljmp
test
ss
jb
sub
inc
pop
cmpsl
aas
stos
xchg
cmp
clc
cmp
inc
jo
mov
lods
aam
loop
jne
fiaddl
stos
inc
mov
leave
add
pop
scas
xchg
cmp
sbb
push
mov
mov
lret
and
adc
mov
xor
aad
or
mov
movsl
mov
mov
xor
jnp
xchg
mov
mov
fdivrl
sub
fstpl
xor
mov
sbb
push
inc
push
cmp
fwait
imul
aas
xchg
sbb
mov
aam
pop
add
sub
dec
test
cmp
jae
xchg
pop
mov
and
mov
cltd
les
mov
lcall
inc
inc
lds
pusha
xchg
cmp
lock
popa
hlt
sti
in
pusha
outsl
lcall
add
ja
shlb
pop
mov
and
push
movsb
mov
add
jne
mov
je
movsb
and
jg
sub
adc
jnp
fiaddl
mov
adc
loop
ljmp
cli
imul
shll
out
pop
xchg
gs
aas
or
cltd
arpl
imul
lods
iret
enter
or
cmp
gs
mov
js
jb
and
repnz
mov
xchg
out
jl
fnsave
pop
push
mov
add
mov
dec
mov
mov
sti
addr16
lret
sbb
jae
lods
inc
gs
test
xor
popf
cmpsl
icebp
rol
mov
lods
or
mov
pusha
push
sbb
jns
cmpb
daa
lret
fildl
sahf
push
fistpl
pop
insb
enter
in
pop
xchg
cld
cmp
ds
mov
dec
mov
stc
and
adc
xchg
data16
mov
ss
xor
and
dec
push
sbb
scas
xor
lahf
cmpsl
and
daa
or
std
movsb
or
mov
test
xchg
jmp
xlat
mov
mul
sbb
adc
cmpsb
imul
leave
sub
and
dec
cmpsl
cmp
pop
mov
fbld
ja
pusha
andb
and
sbb
add
sub
cmp
push
sbb
idiv
cmp
xchg
sbb
add
and
cltd
cmpsl
sbb
mov
es
mov
push
inc
rcl
sub
and
mov
les
mov
mov
xchg
loope
nop
push
xchg
sbb
xchg
and
int3
sbb
clc
push
pop
pop
popa
lds
jg
cmc
sub
dec
movsb
inc
js
pop
pop
dec
adc
xor
or
loope
dec
inc
bound
enter
loopne
xchg
out
popa
dec
mov
jb
jle
jae
addr16
mov
mov
jbe
loope
xchg
mov
das
mov
in
cmp
lock
mov
cmpsl
dec
das
jns
outsl
sub
pop
push
and
lret
adc
out
xchg
loopne
mov
insb
add
xchg
lret
mov
cs
mov
negb
stos
adc
rcrb
lods
movsl
lret
add
jnp
mov
and
cmp
jg
push
minps
xor
mov
sbb
lret
sbbb
lcall
out
jae
add
shl
fsubl
les
aaa
and
sub
sbb
lea
stc
scas
jl
dec
shlb
scas
inc
cmp
or
inc
enter
dec
cs
ss
test
pop
push
ja
adc
aad
sub
shlb
adc
sub
rol
push
fmull
in
jmp
les
push
lds
ja
adc
rcrb
and
ret
aas
inc
iret
cld
cmp
add
stc
movsl
cmp
or
mov
mov
push
out
xchg
imul
dec
aam
int3
xlat
mov
adc
sub
movsl
or
jmp
ret
mov
pop
pop
cwtl
ds
mov
jo
push
jnp
iret
lahf
xor
fcmovbe
arpl
insb
pushf
popa
mov
and
and
mov
dec
cmp
sbb
stc
sub
lret
insb
lret
inc
je
jmp
and
mov
and
cwtl
lds
pop
in
int3
movsb
mov
jge
fwait
sar
lock
subb
jo
popa
xor
test
aam
incl
rcrl
mov
outsb
pop
in
insb
push
sub
push
pop
xor
arpl
fsubr
xchg
fnstenv
subb
push
mov
pushf
fmuls
cli
arpl
push
aas
movsb
js
jae
dec
data16
lahf
dec
mov
and
jbe
jle
fldenv
mov
inc
aam
sti
inc
lods
cmpsl
jb
fstps
fwait
and
jnp
sbb
jne
sub
popa
or
dec
dec
adc
mov
outsb
sub
fnstenv
aas
pop
push
mov
jbe
jecxz
mov
loopne
cpuid
and
loop
xchg
enter
dec
dec
pop
or
pop
pop
jmp
mov
sub
scas
sub
andb
pop
adc
xor
push
and
popf
hlt
mov
cmc
cmp
and
sub
fs
adc
inc
fst
out
scas
push
imul
shlb
in
and
test
fcompl
adc
sbb
stos
push
mov
mov
and
or
sbb
or
std
xlat
aam
stc
js
dec
inc
ljmp
popf
mov
xchg
out
mov
fwait
pop
mov
js
ror
mov
pop
int
dec
addr16
sti
sub
test
negl
mov
fwait
enter
sahf
and
jge
iret
sub
xor
inc
addr16
pop
pop
lcall
jno
mov
jge
sbb
jge
mov
sbb
sbb
aam
rorl
popf
sbb
jge
addb
dec
jns
into
xor
push
dec
cli
xor
mov
stos
mov
nop
and
xchg
push
add
repz
mov
xor
enter
jnp
cli
rcr
xor
fistl
lds
or
sti
jno
in
popf
sub
sub
pusha
je
je
sub
mov
mov
mov
repz
push
lret
cmp
loopne
pop
sub
shll
add
push
adc
sarl
pushf
aad
fucomp
sbb
movsl
push
mov
xchg
xchg
cld
aam
cltd
aaa
jns
lret
or
sub
push
rcrl
fs
repz
push
popf
test
je
lcall
cwtl
mov
jp
fdivrs
push
cltd
jecxz
rcrl
test
xor
mov
cmp
cmp
aad
sarb
and
or
ja
dec
cmp
mov
add
mov
iret
scas
int3
sub
xchg
bound
ret
cwtl
jne
add
jbe
js
fisubl
fwait
les
loope
jecxz
mov
leave
cmp
push
enter
test
xchg
fistl
stc
adc
sbb
jp
jb
inc
fs
jnp,pn
aad
inc
enter
clc
std
popf
cmp
ret
xor
sub
jg
les
or
xor
repnz
pop
lret
test
cmc
dec
pushf
inc
lcall
scas
mov
adc
mov
or
mov
lds
lcall
cmpsl
mov
hlt
jmp
xchg
sub
sbbl
fcompl
popf
jb
hlt
bound
cltd
repnz
enter
or
imul
pusha
popa
sbb
repnz
push
js
pcmpgtb
inc
inc
aam
mov
push
stc
movsl
out
mov
out
cli
movsb
mov
cmpsb
loop
or
sub
sbb
addr16
enter
sbb
jg
push
inc
dec
pushl
shrb
mov
orb
push
lock
sahf
js
xor
fwait
aam
or
add
clc
shlb
rcr
enter
or
cwtl
fsubl
lods
sub
push
ret
movsb
dec
and
ljmp
or
movsl
iret
es
pop
repz
adc
add
and
adc
pop
cltd
lock
mov
sub
inc
loopne
lret
into
mov
dec
adc
sub
and
mov
dec
nop
clc
jnp
ret
pop
or
stos
push
jne
mov
push
popf
and
shl
fwait
pop
and
ljmp
sbb
movsb
or
loopne
and
enter
xor
fists
shr
cmp
mov
leave
push
and
rdpmc
dec
push
dec
test
jmp
hlt
iret
call
push
xchg
icebp
ljmp
cld
push
fs
inc
mov
pop
and
stos
dec
les
add
pop
push
icebp
ljmp
jbe
push
leave
pop
or
pop
aam
and
adc
xchg
rcrb
lcall
jno
out
test
nop
cltd
mov
mov
in
rcll
out
xchg
inc
mov
add
adc
movsb
stos
push
into
out
inc
test
xchg
xchg
sbb
fwait
sti
clc
repz
jge
sbb
icebp
mov
push
jbe
movsb
adc
mov
aam
cmp
imul
ds
mov
push
scas
add
sahf
shll
add
ljmp
pop
out
cs
movsb
hlt
cltd
sti
mov
adc
inc
cmp
mov
test
or
fstl
mov
popf
xor
xlat
hlt
iret
je
mov
daa
cmp
xchg
fsts
xor
push
mov
dec
outsl
movsl
and
xchg
xor
cltd
test
sub
mov
sahf
cmp
or
into
xor
fwait
shl
imul
aad
cwtl
inc
cmpl
or
jg
in
xor
lds
int
mov
adc
add
mov
stos
ret
pop
subb
mov
jns
test
push
sub
xchg
les
mov
mov
xor
and
lret
insb
mov
mov
mov
add
ss
dec
mov
addr16
mov
xchg
imul
xor
dec
fnstenv
sbb
and
xchg
mov
int
add
fists
ror
ds
call
xor
jl
jecxz
and
xor
aaa
mov
adc
push
and
jns
sub
and
push
mov
add
mov
cmpsb
push
mov
cmp
add
ss
cmpsb
out
jp
adc
push
mov
pop
mov
insl
mov
and
fsubl
fsubrl
cmpsl
pop
orl
mov
int3
ficomps
xchg
dec
pop
lock
push
test
movsb
daa
or
mov
xchg
std
jl
leavew
pcmpeqd
mov
pop
aas
mov
pop
bnd
jg
dec
arpl
pop
mov
cld
int
ja
aad
out
outsb
gs
jae
out
cmp
jl
mov
add
mov
xor
out
cwtl
xor
and
push
std
rorb
mov
ficomps
jg
jge
clc
inc
adc
sti
std
ja
sti
xor
hlt
repnz
fistpll
xchg
mov
movsl
xchg
clc
mov
insb
sbb
mov
cmp
aaa
dec
loop
movsb
and
jle
das
negb
add
sbb
out
insb
fcompl
cli
aam
push
adc
test
inc
cltd
jle
mov
ds
mov
xchg
daa
mov
lea
je
into
sti
adc
pop
add
pop
lcall
test
jne
and
rcrb
sbb
out
ljmp
cmp
js
mov
ficoml
cmp
dec
aaa
sbb
push
call
aad
fidivs
push
sbb
mov
xchg
fldenv
lods
mov
sti
and
pop
push
ss
inc
dec
xor
mov
cs
movb
mov
or
or
adc
mov
sbb
jne
mov
cmp
mov
dec
mov
cmpsl
loop
out
ds
pop
div
push
xchg
arpl
mov
scas
lcall
rclb
loop
sub
in
dec
sti
inc
inc
cs
pushf
insl
xchg
sub
add
pop
pop
or
dec
arpl
es
stc
into
popf
or
aam
or
or
xor
pop
mov
popa
bound
cli
and
adc
pop
lret
iret
xchg
rcr
jno
mov
addr16
lea
sub
lcall
aaa
popa
mov
xchg
jnp
mov
mov
jns
loope
rorl
ja
sbb
mov
cld
mov
imul
xchg
xchg
movl
dec
mov
les
stos
and
pop
inc
pop
jg
xchg
or
xchg
mov
ljmp
repz
ret
aaa
push
jae
in
lret
cmpsl
mov
sbbb
push
cmc
fwait
push
and
push
xchg
dec
int3
nop
fsub
aas
aad
sbb
shlb
sub
clc
pop
daa
xchg
scas
mov
mov
mov
fidivs
icebp
dec
addr16
aas
pop
std
mov
fwait
inc
cmp
and
dec
int
cmp
mov
sbb
sbb
stc
das
xchg
mov
add
jecxz
pop
es
rcrl
int
pop
pop
inc
test
push
into
sbb
lock
mov
cmp
mov
mov
xchg
in
sarb
jg
mov
rcr
sub
mov
testl
mov
cmp
and
mov
xchg
mov
cmp
mov
jle
pop
test
sub
xchg
mov
stos
jmp
dec
ljmp
inc
inc
dec
ret
test
lret
mov
sbbb
mov
jbe
sbb
test
into
mov
dec
das
cmpl
fimuls
xchg
pusha
jp
mov
inc
mov
dec
ret
xchg
ret
xor
decl
popa
andb
fwait
dec
loopne
inc
xor
adc
leave
jb
ret
inc
mov
addr16
ficoms
jp
std
shl
aad
and
mov
push
loopne
int3
and
or
cmpps
push
mov
push
ja
lret
notl
jb
in
repnz
or
cmp
pushf
incb
jg
xchg
into
test
into
in
inc
dec
push
testl
icebp
into
mov
jnp
jns
fxch
inc
xchg
cwtl
scas
mov
sbb
jg
push
sub
push
movsb
mov
repz
out
fnstenv
adc
test
cmp
ja
or
push
inc
dec
cli
popl
aad
das
xor
lret
andl
scas
dec
pop
sub
mov
xor
ja
shrl
pop
int3
sbb
mov
mov
dec
dec
xchg
int
mov
adc
cwtl
mov
xor
insb
cmp
test
push
lea
dec
insl
jmp
pop
mov
or
pusha
mov
shlb
fldl
stc
movsb
mov
push
lcall
jo
stc
push
jge
mov
inc
sbb
ret
push
fisttps
inc
mov
das
fbld
aam
lock
mov
cmp
pusha
test
rol
or
mov
mov
mov
jns
es
hlt
pop
inc
sti
mov
lea
scas
inc
and
inc
dec
push
gs
jl
push
mov
repnz
in
mov
mov
fisttpl
in
mov
fistpll
xchg
or
adc
push
sahf
loope
dec
mov
jmp
push
dec
push
dec
into
inc
pop
and
or
mov
mov
clc
mov
nop
jae
andb
xor
lcall
cld
pop
lea
fiadds
in
pop
sub
inc
mov
shr
inc
and
xor
dec
jb
ret
mov
sbb
pop
cmp
xor
inc
xchg
or
dec
push
jno
leave
jp
cli
shl
stos
cwtl
lock
or
cmp
lods
mov
add
cmp
hlt
sub
es
cs
push
repz
enter
inc
ret
pushf
jge
icebp
sahf
pop
fisubrs
dec
pop
fidivl
aam
inc
ss
jae
mov
xchg
cmp
mov
ss
sbb
mov
xorb
sub
adc
pushf
sub
ret
push
cmp
ja
push
mov
fdivrp
xor
inc
rcrb
dec
pop
jle
or
add
cwtl
xchg
sbb
mov
xor
cltd
rcr
jge
xorl
add
ds
fdivrs
dec
inc
dec
push
inc
and
dec
incl
xor
jae
sub
dec
mov
repnz
inc
repz
dec
out
jns
lret
loop
cmpsb
inc
jo
lret
lea
mov
pop
or
mov
sbb
loop
or
sbb
mov
cmp
add
loop
add
lret
call
and
in
in
sbb
and
jg
es
cmpsl
and
jb
ds
xchg
xor
adcl
into
cwtl
push
fimull
ret
out
pop
xchg
push
std
incb
cld
rcrb
cmpsl
out
into
lea
push
int3
bound
xlat
mov
cmp
test
dec
sbb
aam
cmp
fdivs
lcall
pop
in
mov
push
aad
insl
test
fadds
dec
std
mov
scas
jbe
sub
cld
pop
repnz
cld
mov
dec
adc
jo
dec
rolb
push
js
push
les
mov
mov
cli
std
fisubs
mov
repnz
icebp
nop
sahf
mov
jle
adcb
imul
cmc
xor
mov
adc
sbb
add
js,pn
into
push
shl
andb
sbb
out
mov
mov
jp
test
sub
mov
daa
jns
pop
xchg
jne
lcall
xchg
push
outsl
lock
lds
and
add
add
lcall
dec
and
xchg
lods
and
mov
dec
add
inc
sti
pop
fs
lcall
jge
jbe
testb
movsl
lahf
lds
and
mov
sbb
sub
jo
aad
cmp
out
dec
mov
mov
add
call
popf
mov
sbb
mov
sbb
shll
pop
mov
cmp
pushf
cmp
enter
loop
inc
mov
icebp
hlt
xor
or
mov
les
xor
xor
jle
pusha
in
jle
shlb
push
mov
add
push
pop
movsb
sub
add
xchg
mov
shl
popf
or
adc
xor
sbbb
xor
cltd
jbe
mov
cmpsb
insl
adc
rcl
faddl
repz
xlat
mov
mov
jns
ret
lcall
mov
or
in
ljmp
ss
push
std
dec
stos
outsb
add
adc
jne
mov
movsb
jae
jecxz
dec
xchg
cld
call
sub
and
xor
or
sti
mov
daa
mov
mov
lret
mov
sbb
sti
mov
pop
pop
xor
adc
xor
and
sbb
jle
cltd
int3
mov
enter
aad
popf
xchg
aad
dec
cmpsl
adc
mov
and
fwait
fs
mov
fdivs
sbb
pop
and
push
sahf
ja
xor
in
dec
pop
xchg
int
inc
shll
and
cli
imul
or
dec
int
xor
lock
xchg
push
xlat
enter
mov
inc
cli
dec
fldl
subb
mov
sub
mov
xor
xchg
data16
das
dec
lods
cmpsb
jae
push
ret
movsl
xor
xor
pop
inc
lret
jno
lret
repz
in
hlt
out
push
les
mov
mov
xor
cli
and
xchg
das
inc
mov
push
adc
imulb
mov
test
popf
inc
jbe
mov
dec
ret
sbb
and
rcrb
arpl
cmp
sub
or
jb
cmp
cmc
add
cmp
fisttpll
mov
pop
cld
jnp
and
cmp
pop
and
enter
mov
inc
push
dec
imul
mov
iret
dec
jmp
fiaddl
sahf
pop
push
xor
cmp
sbbl
pop
into
icebp
rorb
xlat
inc
inc
fiaddl
or
fdivl
test
mov
mov
jnp
sub
xchg
hlt
test
and
idiv
icebp
inc
shrb
popf
je
rorl
mov
inc
pop
rol
mov
cmp
jecxz
cmp
dec
fistpl
jnp
sbb
faddp
fs
adc
jae
xor
vmread
mov
sub
cmpsl
xchg
je
popl
mov
cmpsb
pop
adc
pop
mov
out
sub
mov
or
inc
fisubrl
roll
pop
mov
cld
out
mov
sbb
movsl
push
xor
out
mov
std
popa
ret
movsb
push
xor
inc
movsb
ljmp
or
sub
rclb
lods
cmpsl
jnp
fstpl
push
inc
push
dec
loopne
sbb
movsb
je
cmp
mov
inc
dec
jl
in
push
cmpsl
enter
int3
inc
scas
dec
xor
lods
scas
mov
ret
mov
ret
test
sbb
ror
jo
pop
shll
les
xchg
scas
out
lods
rcrl
rolb
sbb
cwtl
push
and
js
xorb
and
cmpsb
pusha
arpl
add
mov
fisttpl
lds
mov
movsl
fdivs
push
lret
add
or
mov
mov
cmp
mov
jmp
shrl
and
xchg
scas
xchg
cwtl
dec
clc
je
xor
movsb
js
mov
dec
jae
or
movl
cmp
push
pop
mov
ret
pop
push
lahf
out
push
push
sbb
cmpsb
rol
mov
out
imul
jmp
movsb
icebp
es
mov
dec
inc
rclb
icebp
mov
les
pop
or
mov
nop
mov
push
cmp
aad
fwait
sbb
stc
loopne
into
push
jae
dec
out
or
pop
ror
sub
or
push
andb
movsb
jmp
mov
bound
pop
in
aam
dec
xchg
imul
pushf
cld
in
sti
pop
fnstsw
mov
and
cmp
push
js
arpl
mov
int3
xlat
fistpl
mov
xchg
mov
xchg
mov
xchg
mov
std
ja
mov
mov
imul
mov
ja
int
mov
xor
test
sahf
in
sbb
loope
inc
and
push
ret
cmp
stc
inc
sub
popf
fsts
sbb
loop
call
xchg
pop
mov
stc
fiaddl
and
sbb
ss
inc
enter
pop
scas
dec
subl
ja
dec
or
mov
dec
adc
xchg
jae
sub
xchg
pop
std
popa
xchg
mov
and
fdivs
adc
mov
call
dec
add
andl
lret
fsubrs
pop
xor
add
jecxz
les
ja
gs
cmp
mov
push
enter
push
cs
pop
push
xchg
push
mov
stos
das
enter
xchg
or
jns
pop
mov
js
hlt
gs
jne
inc
or
pop
neg
push
fstps
mov
lahf
clc
fcompl
fwait
mov
sbb
sub
push
mov
sbb
sbb
data16
dec
ljmp
cmpsb
stos
pusha
pushf
rcll
jmp
dec
jb
nop
test
lahf
test
or
xor
xlat
sar
loope
dec
pop
js
ret
js
pop
jmp
ret
dec
mov
inc
and
sub
sbb
iret
mov
std
cwtl
test
aas
lds
and
and
lock
xchg
inc
lds
ret
stos
psubq
xchg
aaa
pop
xor
sub
adc
and
rcrb
lds
outsb
mov
sub
aas
cmp
push
pop
push
sbb
cmp
lret
std
inc
in
cwtl
or
leave
movsl
scas
xchg
xor
inc
xchg
lods
mov
mov
sub
mov
movsl
add
test
push
dec
pop
aas
add
cs
add
jle
sbb
adc
xor
shll
xchg
call
rcrl
shrl
mov
lds
imul
mov
sub
ret
clc
cwtl
sub
xchg
leave
loop
inc
mov
sub
cld
movsb
fidivrs
lods
shll
mov
sbb
adc
stc
jle
or
repnz
imul
jae
mov
mov
cmp
mov
sub
stos
dec
pop
lea
push
add
jg
or
sub
movsb
cmp
pop
xlat
cmp
repz
mov
sbb
loope
sti
lock
and
xchg
mov
int
pop
add
push
push
add
xorb
stos
pushl
xor
cmp
cmp
pop
cmp
cmp
mov
push
cld
adc
cli
into
sbb
xorl
test
test
cmp
das
push
pop
jns
dec
jne
out
mov
repz
mov
push
fsts
ja
hlt
subb
popa
dec
mov
pop
sbb
mov
mov
xchg
pop
cmp
mov
cmp
cmp
in
hlt
cmp
enter
jbe
jne
pop
inc
cld
add
xchg
pop
sbb
add
scas
test
cmpsl
aad
and
fsubs
insl
mov
mov
and
jb
jnp,pn
stc
sub
xchg
nop
out
imul
out
mov
lret
pop
fdivrl
pop
rorb
jae
sub
and
and
les
jmp
pop
dec
xor
xorb
xor
clc
pop
sbb
ret
out
and
imul
clc
mov
mov
daa
stos
ja
or
sbb
mov
and
aas
pop
inc
neg
jb
cwtl
shll
bound
xchg
pop
mov
xchg
push
aas
xlat
movsl
aad
push
lea
xchg
imul
sub
shrb
movsb
sub
xchg
mov
jns
adc
adc
scas
dec
cmp
enter
or
cli
xor
cmp
and
enter
sahf
cld
sbb
pop
movsb
in
ja
cmp
mov
inc
mov
pop
sarb
mov
rolb
sub
loope
mov
lret
mov
add
ficomps
aam
into
ds
ss
adc
std
inc
jno
jne
mov
out
pushf
iret
mov
push
popa
jl
xor
pop
mov
push
mov
push
sub
movsb
dec
inc
decl
shlb
xchg
movsb
sub
test
cmp
arpl
inc
fwait
hlt
dec
inc
ja
lret
adc
mov
mov
xchg
mov
cwtl
imul
jo
aad
stos
and
and
push
pushf
jno
sarl
or
pop
popf
push
call
push
dec
rcr
jnp
add
js
ret
xor
aad
nop
push
repnz
pusha
ret
jo
ss
add
sahf
add
loopne
nop
pop
push
pop
mov
xchg
icebp
pop
mov
mov
inc
dec
add
cmp
mov
into
xchg
xchg
pop
mov
das
and
pop
xchg
imulb
fdivr
inc
or
in
and
out
fiaddl
mov
movsl
movntq
out
add
fidivl
xchg
xor
jne
sub
sub
icebp
in
push
daa
test
mov
insb
pop
std
add
bound
out
and
pop
adc
xchg
cmp
mov
pop
daa
cmp
imul
in
and
jno
pop
add
fcomi
mov
jl
mov
dec
pop
pop
pop
orb
adc
sbb
push
ja
cmp
js
mov
mov
ror
jmp
xorb
cmc
hlt
inc
psadbw
pop
out
enter
jne
lods
out
fcomps
js
test
and
pushf
scas
jns
cmp
adc
dec
pusha
mov
aas
lods
push
ret
mov
dec
mov
sub
movsb
leave
cmp
fmull
cmpb
dec
jg
jl
or
inc
mov
cmpl
mov
mov
mov
sbb
inc
test
stc
pushf
mov
inc
xor
repnz
jle
mov
popf
mov
push
xchg
mov
gs
mov
nop
sub
ljmp
jb
adc
fildll
mov
dec
push
shlb
ficompl
inc
loop
hlt
mov
add
dec
mov
aas
xor
aas
adc
jge
pop
jmp
push
xor
mov
lods
push
and
mov
xor
aas
or
xor
lock
cmp
mov
popf
xor
rolb
nop
adc
cwtl
mov
mov
je
or
movsb
scas
addr16
lret
inc
adc
mov
fdivs
mov
lock
popf
insb
mov
xor
jg
inc
es
xchg
cwtl
mov
dec
stos
push
inc
add
dec
xchg
sbb
or
and
clc
fcmove
jecxz
stos
mov
mov
call
add
mov
or
mov
mov
inc
sub
pusha
jo
clc
push
ja
sbbb
movsb
std
mov
enter
mov
sub
hlt
cmp
add
pop
addr16
xor
pop
inc
lahf
je
pop
enter
movsb
or
lock
mov
jp
and
imul
ret
jge
dec
hlt
loope
jecxz
ret
and
aas
enter
mov
setl
mov
sti
ljmp
mov
fisubl
mov
sub
fcoms
mov
loopne
shr
aas
adc
pusha
lcall
mov
mov
stos
sbb
push
lret
add
sbbl
data16
lods
dec
pop
xor
cltd
xchg
cmp
ja
dec
mov
xor
mov
outsl
cmp
pop
cmp
je
jno
or
aad
pop
inc
and
lret
dec
xchg
adc
push
sbb
fisttps
lods
adc
ret
cmp
cmove
jg
js
ret
inc
dec
adc
sub
push
mov
xor
mov
int3
inc
fimull
pop
rorl
pop
mov
and
xor
dec
inc
mov
dec
jg
sbb
adc
push
orl
jmp
inc
lock
test
ret
inc
jnp
cld
cmpsl
add
xchg
mov
inc
out
cmp
mov
test
mov
inc
ret
cwtl
fsubrs
in
sub
enter
mov
sub
or
repz
or
seto
test
adc
mov
rorb
loopne
filds
and
dec
mov
mov
add
leave
dec
ret
movsl
imul
jg
into
push
sahf
xor
adc
cmp
repz
rolb
arpl
shll
pop
insb
adc
movsb
mov
mov
mov
roll
mov
frstor
clc
add
stos
xchg
shl
push
lret
adc
mov
roll
mov
ficompl
jg
cmp
mov
call
mov
dec
leave
jno
cltd
movsb
xchg
mov
mov
pop
inc
shlb
loopne
pop
mov
and
adcl
lods
inc
test
and
stc
mov
rorl
outsl
loop
in
mov
inc
add
mov
sub
adc
fildl
sti
fsin
pop
inc
clc
arpl
xor
inc
dec
add
inc
jo
xchg
aam
jmp
enter
mov
clc
mov
mov
add
jb
mov
jb
test
xchg
addr16
sub
mov
pop
or
test
daa
cld
push
jle
in
xchg
push
jns
orl
popf
rorl
sbb
into
icebp
mov
cld
jge
cli
push
mov
sar
sub
mull
sbb
lock
dec
push
xor
add
adcb
dec
inc
fsubl
xor
mov
outsl
pop
fwait
aaa
out
and
outsl
inc
add
jbe
lds
aam
push
jle
cwtl
sahf
dec
push
sbb
dec
inc
add
xor
nop
pushf
call
mov
jns
movsl
rcll
or
inc
push
ljmp
sub
icebp
cmpsb
sahf
and
int3
cmp
push
push
ret
inc
shlb
mov
and
xor
ret
cmp
imul
repnz
adc
inc
push
pop
or
test
dec
mov
push
lock
pop
test
test
cmpsl
loop
test
in
mov
dec
das
xchg
jl
cli
fisttpl
pop
into
dec
mov
fsubrs
add
fs
sti
andb
cmp
push
and
fldenv
inc
sbb
insb
and
pop
outsb
sbb
sbb
push
test
dec
sub
stc
pop
je
cmpl
loopne
xchg
dec
push
jmp
jbe
or
dec
lock
or
jne
je
dec
je
push
add
ret
add
sub
xchg
inc
and
movsb
push
bound
or
push
dec
add
test
aas
sub
sub
mov
test
mov
mov
out
enter
loope
push
fwait
test
in
dec
cmp
inc
add
add
leave
jl
inc
jno
jmp
ja
icebp
dec
dec
mov
leave
popf
jb
je
pop
fs
add
fstl
jl
hlt
and
sbb
mov
lret
fmull
ja
andb
adc
jecxz
jo
mov
or
push
enter
dec
or
pop
insl
add
or
xchg
xchg
sub
iret
enter
lods
clc
pop
inc
rolb
ja
mov
inc
jl
mov
jns
pop
add
and
les
mov
xchg
pop
ds
push
pop
cmp
pusha
sti
xor
ret
pop
jns
mov
lds
add
je
leave
popa
sbb
pop
ret
inc
mov
ljmp
ret
shll
jns
leave
push
sub
stos
ljmp
jo
dec
pop
cs
cmp
xchg
leave
jmp
int
xor
aam
sub
xchg
sub
add
sbb
sub
pop
bswap
mov
sbb
fwait
js
mov
push
lret
dec
dec
ss
mov
ret
es
fsubrl
pop
dec
xor
push
adc
dec
sarl
cltd
sbb
mov
inc
push
xor
push
xor
ret
or
sub
adc
dec
pop
loop
pusha
inc
addr16
test
les
mov
mov
push
sti
out
sub
in
inc
lds
jno
mov
lods
rcrb
call
cs
loop
jbe
adc
loopne
sub
hlt
xchg
pop
and
movsb
inc
scas
pop
jo
fcompl
push
leave
ror
fstpt
test
es
mov
inc
inc
out
mov
lea
pop
test
stos
les
push
sbb
push
out
aad
add
and
inc
lds
xor
jge
movsb
xor
jg
sbb
lds
cmp
dec
dec
sbb
mov
daa
push
xor
inc
pop
in
lret
mov
sub
cmp
in
sub
xor
mov
xchg
push
ret
insl
lret
xorl
cmp
mov
mov
mov
xor
das
adc
int
inc
mov
dec
xchg
out
enter
gs
loopne
js
push
xor
das
xadd
xor
into
fwait
setno
ljmp
jecxz
cwtl
mov
and
lret
push
mov
jg
cmp
or
push
int
outsb
das
mov
xor
fwait
mov
lods
mull
rolb
cmpsb
or
outsl
cmp
jge
mov
fcompl
fwait
pop
inc
push
cmc
popf
clc
push
jns
pop
fcomps
inc
ret
mov
mov
mov
sub
cmp
pop
lret
test
aas
fdivrs
mov
outsb
stc
pop
jge
imul
jg
or
iret
inc
stos
xor
arpl
aas
pusha
jp
cltd
xchg
jae
cltd
adc
lcall
ret
xchg
cwtl
xor
inc
fs
fdivrs
pop
cmp
ret
adc
lret
xchg
pop
mov
xor
fldl
insl
es
into
into
dec
pop
mov
in
gs
dec
mov
or
popf
sti
es
test
mov
aas
cmpl
shl
aam
push
nop
cmp
add
sbb
outsl
dec
ficoms
sbb
imul
ds
adcl
ja
xchg
and
xchg
cwtl
ds
lret
shlb
fsubrl
mov
and
clc
leave
jle
mov
gs
mov
lds
mov
pop
mov
jo
ror
push
repnz
dec
cmp
pop
add
pop
push
mov
fmull
inc
lods
mov
les
rolb
or
fisubl
xlat
aam
loop
dec
lret
pop
inc
or
stc
sub
push
lock
in
jae
shll
insb
lcall
clc
insb
icebp
mov
insl
jl
js
sar
cmp
mov
mov
or
sbb
mov
enter
std
les
xlat
mov
pop
mov
xor
hlt
add
daa
dec
mov
add
mov
movsl
cli
adc
cltd
push
aas
push
pusha
movsb
jnp
aas
gs
sub
int3
xchg
mov
xchg
or
and
cli
test
jge
dec
mov
lcall
sub
shll
lret
pop
cmpsb
push
stc
ret
cmpsb
sub
cmpsb
mov
jg,pn
dec
inc
pop
mov
push
jle
mov
gs
mov
fs
iret
inc
cmp
adc
or
test
lds
arpl
dec
hlt
aad
pop
adc
jmp
test
xchg
jle
jecxz
dec
and
and
int3
push
data16
mov
ljmp
cwtl
in
notb
ret
cltd
pushf
and
cmp
adc
aam
cmp
fwait
push
stc
mov
shll
jnp
sarl
xchg
lock
pop
inc
inc
mov
orb
dec
jae
dec
ret
mov
stos
shll
std
inc
or
popf
inc
lret
les
and
lods
bound
arpl
xor
inc
adc
dec
ljmp
xchg
adc
xchg
cltd
dec
gs
push
push
cli
sub
rcrl
mov
jno
sub
push
scas
or
xor
je
cmp
mov
mov
cmpsb
ror
xchg
sti
mov
mov
cmp
dec
adc
sti
bound
rolb
loopne
rcr
outsb
sbb
mov
ficomps
fmuls
xchg
dec
leave
fwait
or
lea
test
mov
jle
pop
mov
adc
jle
in
sarb
push
iret
rol
subb
jle
inc
mov
or
mov
test
out
leave
add
xchg
jnp
sub
add
pop
pusha
xor
les
xchg
mov
jns
sub
cmp
pushf
sub
inc
dec
xor
ds
cmc
inc
push
sbb
cltd
aad
cmpsb
jb
sbbl
fstpl
stos
add
jg
inc
pop
in
xchg
inc
ljmp
lds
cmc
pop
std
outsl
rcr
rolb
jge
mov
inc
rcr
shlb
xchg
lcall
testb
insb
adc
jle
adc
inc
jl
cmp
nop
push
pusha
lea
out
xor
add
jg
stos
sbb
mov
loope
loope
sbb
inc
ss
rcr
leave
fiadds
pop
in
enter
leave
push
xchg
mov
mov
mov
mov
cmp
sbb
movsb
and
pop
repnz
dec
jo
out
call
mov
push
movsb
and
add
repz
jb
insb
adc
aas
movsb
mov
call
js
and
jbe
ret
addr16
js
jns
hlt
inc
rol
rcr
xor
jae
fucomp
clc
mov
mov
iret
xor
sbb
xor
inc
add
rclb
jg
xchg
jg
cltd
pop
and
sub
and
movsl
mov
adc
sbbb
sbbl
repnz
pop
pop
movsb
push
dec
leave
dec
fdiv
sbb
xchg
add
mov
pop
ret
fs
inc
repnz
cmc
pop
out
jge
cs
mov
and
scas
pop
int
mov
cmp
pop
mov
xchg
add
mov
leave
test
stc
mov
jae
insb
sbb
xchg
out
int
cmp
push
loopne
fmull
enter
xchg
mov
stos
mov
insl
inc
int
sbb
inc
popl
mov
jge
inc
inc
jle
rclb
cmc
bound
inc
pop
roll
jge
hlt
and
push
adc
xor
mov
sti
ja
in
jge
xor
nop
xor
jmp
jp
das
push
cmp
sbb
inc
adc
cmpsl
lcall
int3
out
movsl
and
push
mov
mov
movsb
dec
in
xchg
fdivs
mov
test
cld
jmp
ja
leave
lds
repz
inc
mov
inc
mov
iret
inc
cmp
std
test
xchg
popa
cld
xor
sub
mov
addr16
mov
imul
jge
inc
inc
or
and
lcall
rclb
jg
call
popf
bound
mov
inc
jle
stc
insb
cmp
add
dec
sbb
ret
insb
inc
push
inc
jae
mov
push
pop
push
cli
test
or
cmp
push
xchg
xor
mov
sbb
int3
dec
sub
inc
jp
jo
rolb
in
cwtl
pop
or
xor
aad
popf
pop
imul
mov
pop
pop
jle
mov
jb
ja
enter
clc
hlt
test
inc
add
std
movsb
jne
pop
mov
shrb
pop
adc
test
cmp
cs
mov
push
test
stc
rorl
jge
ret
jns
xor
xchg
iret
stos
inc
cmpsb
fimull
xchg
xchg
and
cs
and
fldl
push
scas
or
fcoms
ljmp
cmpsl
push
inc
cmp
lds
push
sbb
mov
dec
repnz
and
jbe
mov
std
repz
jne
mov
jnp
lock
cmp
sub
mov
cmp
jle
cld
in
jg
cli
lds
mov
lods
sub
xchg
and
enter
jp
lea
cld
popf
ret
or
and
mov
and
cltd
mov
pop
xchg
lods
inc
arpl
xor
out
insl
cmp
pusha
mov
cs
mov
test
pop
fldenv
rclb
pushf
mov
push
pop
movsb
cld
push
ja
or
movsb
cmp
adc
sub
mov
adc
jl
mov
xor
and
mov
add
enter
sub
cli
dec
mov
adc
test
dec
lock
cmp
cmp
xchg
fdivrs
aaa
cmpsb
repnz
mov
mov
or
inc
std
mov
in
cmp
les
lahf
xchg
pop
outsl
int
cs
push
cmp
pushf
ss
mov
sbb
jl
sub
movsl
shlb
inc
imul
call
mov
xor
pop
sbb
mov
push
cmpsl
xchg
and
jg
mov
mov
leave
in
loopne
into
outsl
ds
and
test
and
pop
sbb
add
gs
push
insb
pushf
lock
lea
fs
in
push
lock
or
faddp
ret
lods
dec
js
pop
arpl
arpl
stos
iret
es
andb
mov
push
inc
and
adc
mov
in
ficoms
cmp
insl
stos
sub
pusha
or
mov
cmovbe
sub
test
dec
or
nop
aad
inc
dec
imul
cmp
lods
adc
inc
mov
cmp
sub
sbb
push
lods
cmp
loop
pusha
dec
push
sub
stos
cltd
xor
incl
ss
aam
fs
cvttps2pi
test
andl
dec
std
loop
add
jb
cmpsl
inc
sbb
test
jle
jl
mov
or
in
insb
frstor
add
jl
shll
test
shrl
push
iret
or
repnz
sub
xor
cltd
rolb
mov
inc
aas
fs
pop
or
fcmovne
cmp
rclb
sbbb
stc
mov
orb
into
xchg
add
test
fmull
pop
and
mov
scas
xlat
pop
movsl
xlat
dec
sti
mov
adc
jge
mov
mov
mov
mov
xchg
imul
ljmp
ds
cmp
outsb
and
or
popf
lcall
movsb
test
addr16
mov
push
sarb
ja
fidivrs
addr16
in
ja
fisubrl
in
int
add
xor
and
add
pop
lods
push
xchg
push
repnz
xorl
inc
and
pop
push
dec
inc
mov
cmp
fisubs
and
insl
jg
xchg
dec
pop
push
or
cmpb
fwait
mov
das
xorb
int3
cmpsb
fists
or
add
cld
cs
leave
mov
adc
popf
fdivp
cmp
lods
xor
xchg
dec
mov
jne
xchg
or
fldt
push
test
lret
inc
dec
push
aaa
inc
inc
mov
inc
or
xchg
mov
mov
pop
dec
out
outsb
push
lods
insb
mulb
imul
shl
repnz
ja
imul
push
nop
ljmp
xchg
fldt
cmpsl
cmp
loopne
bound
rolb
call
cmp
adc
lcall
pop
add
xlat
push
add
sbb
jg
out
out
pmaxub
loop
data16
movsl
mov
rcr
ss
into
push
jge
call
loopne
shlb
xchg
shrb
faddl
dec
ds
addb
fmull
pop
dec
int3
mov
pop
lcall
and
iret
mov
and
inc
ss
mov
cmc
mov
push
sahf
leave
dec
jmp
cmp
jl
sub
jb
push
xchg
inc
and
jns
outsl
push
mov
push
repnz
mov
shl
data16
cmp
es
jne
shll
cmpsb
jl
push
dec
inc
jg
lods
fisttpl
sbb
clc
leave
fdivl
dec
movsl
scas
cmp
popf
sub
addl
xor
inc
jl
xor
push
ret
sbb
mov
orl
push
mov
cmp
insl
in
ret
mov
push
sar
ret
lods
fs
into
aam
movsb
and
mov
mov
lret
xchg
imul
push
mov
scas
pop
adc
ja
jne
and
and
xorb
and
mov
adc
call
inc
lahf
nop
sbb
jg
inc
and
popf
call
mov
lea
ret
repnz
sub
fcompl
test
repz
push
std
xor
fcomp
pop
fists
int
or
cld
mov
jbe
dec
fldcw
pop
mov
clc
iret
cmpsl
stc
dec
int3
mov
das
mov
out
sub
mov
scas
pop
insb
fmull
mov
mov
add
pop
push
sti
hlt
inc
pop
or
and
or
aam
add
and
mov
sbb
gs
int
jo
sarl
pop
adc
or
add
sub
jns
cmp
loope
mov
mov
pop
arpl
or
outsl
mov
xor
aad
dec
hlt
out
loop
ret
stos
fadd
mov
cwtl
sub
pushf
shlb
dec
imul
mov
inc
movsl
lods
je
mov
arpl
mov
sbb
js
loopne
ds
movsb
mov
push
movsl
inc
iret
pop
xchg
mov
cmp
out
adc
fisttpll
fldt
aam
orl
jmp
repnz
test
adc
loope
and
jp
mov
arpl
call
fs
jmp
dec
inc
lds
aam
mov
adc
enter
pusha
xor
in
jmp
mov
stos
test
sbb
mov
adc
xor
jo
and
test
das
mov
fdivl
roll
cmp
xor
cmp
xchg
popf
inc
adc
and
pop
insb
loopne
cmp
shlb
push
add
xchg
fistl
jl
aas
fs
fdivs
push
popa
jecxz,pn
dec
and
out
mov
jmp
into
adc
roll
pop
divb
ja
dec
arpl
xor
xchg
inc
ss
insb
add
scas
test
sahf
test
or
iret
mov
inc
rorb
ljmp
jecxz
iret
roll
add
sarb
adc
int
loop
mov
add
jecxz
jno
int
xchg
pop
jnp
jmp
out
es
mov
mov
arpl
sub
lock
xchg
or
dec
xchg
hlt
mov
xor
sarl
das
inc
fdiv
add
into
in
dec
arpl
sub
dec
cwtl
xlat
cltd
pusha
arpl
inc
pop
aad
dec
fisubrl
ret
roll
push
scas
inc
out
call
scas
ficompl
ret
add
xchg
inc
int
push
js
or
stos
mov
repnz
push
or
sub
sbb
sub
xchg
jb
and
xchg
imul
cld
fildl
or
sub
pop
in
or
mov
inc
out
adc
idivb
je
and
xor
mov
adc
mov
and
mov
xchg
in
and
cmp
stos
popf
out
popl
add
mov
add
cwtl
or
inc
test
insb
dec
cmp
jecxz
ficoml
sbbl
lods
fmull
bound
pop
push
popa
lcall
inc
mov
push
ret
test
cmpsb
sub
mov
in
in
scas
and
mov
lahf
mov
jne
repz
inc
inc
cltd
loop
cmpsb
xor
lret
mov
dec
xor
ret
lock
flds
or
fmuls
out
adc
xchg
xor
jmp
mov
shr
nop
cld
lods
outsl
or
stc
into
addr16
jb
scas
cli
jle
dec
out
mov
mov
mov
sub
or
std
insl
call
inc
movsl
xor
add
out
aas
aas
jecxz
xchg
jmp
bound
cmp
push
push
pop
int3
mov
inc
xchg
fwait
js
mov
lds
or
lret
and
fcmovnu
cmp
mov
inc
aas
dec
dec
or
xor
xor
cmpsb
xchg
xchg
xor
cmp
int
push
lret
lcall
xor
mov
fdivs
mov
dec
shll
sarl
pop
mov
js
jecxz
fnstenv
leave
lods
fdivs
cmc
repz
lds
mulb
adc
inc
sub
jbe
aad
mov
rcll
mov
xor
dec
repz
call
ret
mov
jae
adc
jbe
fs
jp
hlt
gs
push
scas
inc
aam
js
ret
aas
rcll
push
cmc
movsb
mov
pop
sbb
inc
cli
lods
repz
mov
push
fbstp
push
push
adc
movl
into
sti
mov
xchg
cltd
lods
jne
bound
xchg
pop
cli
mov
scas
pop
negb
dec
sbbl
jbe
adc
fbstp
or
cltd
adc
push
jo
pop
add
add
in
adc
inc
addr16
test
jb
movl
sti
icebp
pop
lahf
sub
stos
sbb
jl
pop
or
mov
divl
out
into
shll
sub
std
adc
xchg
mov
aas
xchg
mov
sbb
cmp
dec
nop
stc
arpl
divl
insl
ret
and
mov
ss
decl
cmc
dec
cmp
arpl
rcr
mov
cld
shrb
adc
and
movsb
cwtl
push
inc
pop
xor
push
shrb
iret
xchg
adc
mov
pop
pop
push
popa
xchg
sub
cmp
mov
add
pop
push
add
xchg
jb
mov
sbb
jo
adc
and
fstl
mov
or
mov
lods
repz
bound
into
pushf
xlat
and
popa
pop
mov
fs
stc
mov
xchg
xor
xchg
inc
xlat
dec
xor
and
les
in
mov
cmpsl
xor
push
mov
enter
into
pop
jle
mov
pusha
jbe
jo
sahf
jecxz
inc
cmp
jb
scas
sub
js
ret
fcoml
imul
push
fwait
push
mov
adc
lea
jl
imul
ret
mov
dec
mov
lahf
jg
push
dec
lret
adc
sbb
push
sbb
cmp
les
sar
mov
enter
jnp
add
flds
dec
outsb
in
cmp
mov
das
pop
mov
ficoml
cmp
in
fistps
adc
imul
repz
or
jle
les
stos
fs
arpl
jge
or
add
adc
sbb
xor
dec
pushf
jp
push
inc
aam
cmpb
cmp
fdivs
imul
jmp
mov
cmpb
aas
sub
xorb
sbb
add
sub
je
sub
shlb
lahf
test
fs
ret
add
mov
nop
imul
jns
fdivl
ret
out
rorb
push
shrl
and
xchg
jge
hlt
sarl
repz
cmp
xor
push
xlat
imul
call
dec
aas
or
mov
mov
adc
mov
and
in
pop
dec
pop
insb
std
or
inc
pusha
push
je
out
add
mov
in
pop
test
jle
ret
into
and
inc
mov
and
adc
cmp
mov
inc
test
add
and
jbe
fidivrs
and
lods
and
mov
inc
ret
pusha
lret
and
outsl
enter
mov
cld
cmp
or
lea
mov
jle
mov
adc
and
sub
fistl
jmp
mov
js,pt
mov
cmp
and
inc
xor
dec
inc
fucomp
jnp
daa
and
sbb
and
jl
sbb
dec
push
xchg
stos
mov
and
push
cmp
sahf
xchg
jo
out
adc
xchg
bound
and
jg
dec
stos
mov
int
aam
pop
std
xor
mov
mov
gs
arpl
and
mov
out
adc
ss
sbb
repz
mov
testl
push
mov
jg
mov
or
and
mov
cld
xor
inc
or
inc
mov
dec
fisttpll
mov
in
jno
cld
push
or
stos
cmpsb
negl
add
fdivrs
pop
inc
test
test
cmp
cmp
lock
pop
clc
dec
imul
loope
in
fsubl
psrlw
cltd
pop
out
cmpsl
pusha
mov
jae
loopne
push
or
pop
inc
inc
push
mov
dec
aas
mov
fiadds
dec
movsl
pop
cmpsl
mov
pusha
jecxz
je
mov
fnstsw
pop
xchg
jo
cmc
aam
rcrl
dec
js
fs
loop
xor
sub
dec
pop
mov
sar
fists
adc
iret
and
call
rcr
lcall
sarb
fmul
sbb
cwtl
inc
ret
push
sbb
nop
mov
arpl
daa
iret
sub
dec
loopne
aas
cmpsl
mov
sub
insb
inc
mov
xchg
cltd
add
push
call
xorb
xor
and
imul
ret
filds
outsb
lods
push
scas
add
das
lret
adc
xor
imul
dec
fsts
mov
popa
and
les
cmp
or
xchg
mov
sub
lcall
inc
jne
pop
loop
and
rcr
xchg
in
cmp
and
repnz
jbe
dec
or
sub
or
xor
mov
push
adc
testl
xor
movsw
dec
addr16
mov
xor
and
stc
mov
in
pushf
sbb
cmp
int
xchg
mov
jbe
mov
jl
enter
lds
jae
ja
in
or
push
push
fsubrl
xor
sbb
pop
subb
mov
iret
jge
inc
shlb
jnp
cmc
int3
movsl
xchg
push
add
mov
jmp
out
add
pop
add
push
inc
sub
out
ret
clc
jmp
outsl
test
jp
or
mov
xchg
aam
push
rolw
pop
out
out
xchg
outsb
jl
lods
mov
int3
sub
or
jg
nop
or
enter
stos
push
xchg
ror
jecxz
or
sub
mov
cmp
cli
mov
testl
inc
mov
out
lds
sahf
aas
mov
push
fdiv
or
sbb
dec
adcb
xor
or
scas
mov
sub
test
lahf
sbb
jl
lahf
mov
jge
jo
pusha
push
and
imul
push
movsb
mov
mov
xchg
push
pushf
andnps
mov
sub
xchg
dec
push
scas
cmc
lock
loope
cmpsb
mov
in
lds
std
out
jl
stos
push
pop
fdivrl
aad
mov
leave
mov
aam
pop
cmpsl
mov
fcomps
jnp
int
pop
push
or
dec
cwtl
repnz
outsl
stc
mov
push
pusha
lret
stos
xor
ret
xchg
or
xchg
sbb
std
subl
inc
shlb
ret
stc
out
and
jmp
aam
or
dec
add
adc
pop
pop
ss
push
or
cmp
test
or
sub
sbb
mov
xor
faddl
sbb
push
mov
push
shrl
das
cmp
fcomip
pop
adc
stos
insl
mov
lock
adc
adc
fildl
push
cli
sbb
or
pusha
mov
push
adc
pop
outsb
pop
add
and
popf
cltd
sahf
into
imul
ss
add
add
cmp
movsl
sub
xchg
cmp
inc
adc
std
adc
aad
inc
mov
hlt
ljmp
push
lods
ja
into
push
clc
daa
jl
repnz
cld
rcrb
cs
jge
mov
imull
imul
enter
movsl
into
rorb
mov
jbe
pushf
jl
mov
cld
inc
popf
ds
cmpsl
lods
int
push
das
cmp
cmp
mov
push
lock
inc
sub
rcrl
sub
xchg
in
sbb
into
inc
jae
lock
cmp
dec
rorb
mov
add
dec
mov
sbb
sbb
pop
test
clc
xlat
xchg
lea
xor
pop
adc
push
and
leave
les
mov
pop
call
push
inc
and
inc
pop
or
iret
adc
add
xchg
mov
data16
lea
inc
pusha
in
push
ret
jno
jl
jne
xchg
and
jg
cld
fcmovbe
mov
popf
jl
inc
popf
enter
sub
movsb
jecxz
and
or
inc
mov
call
sub
inc
in
rorl
dec
push
jp
adc
cli
cltd
mov
fisubrl
sbb
adc
fcomps
aad
dec
mov
nop
xor
arpl
sbb
pop
ror
xlat
enter
push
cmpsl
cs
rcll
popf
or
imul
call
imulb
add
icebp
jbe
iret
dec
mulb
xorb
lcall
inc
mov
lret
aad
jp
mov
mov
int
loop
es
icebp
ss
je
add
cmp
push
adc
cmp
fs
mov
cmp
push
xchg
fcmove
jae
jecxz
stos
icebp
inc
lods
ds
in
pusha
inc
fldcw
jl
lea
into
mov
dec
aam
inc
loope
dec
rolb
rcl
mov
push
adc
dec
adc
inc
bound
std
mov
arpl
mov
pushf
mov
xchg
lods
ss
jmp
mov
pop
adc
xchg
inc
ret
movsb
mov
test
jg
sub
pusha
aad
jg
jp
sub
xchg
rolb
pop
mov
pushf
xlat
inc
call
jnp
mov
pop
xlat
push
insl
leave
hlt
pop
jbe
add
or
jmp
sbb
fisubs
lds
fsubs
das
xchg
mov
push
mov
mov
arpl
hlt
loope
ds
es
aas
xor
lods
daa
jle
mov
adc
push
data16
fsubrl
adc
outsb
mov
add
sub
mov
add
cwtl
dec
inc
inc
sub
xor
mov
xor
cmp
das
push
jb
mov
imul
in
popa
xchg
test
sti
xchg
and
in
jge
sti
add
movsb
mov
push
adc
fstl
sbb
mov
mov
mov
add
push
jne
ds
std
push
or
jecxz
rcrl
pushf
lock
lods
je
and
out
andb
int
movsb
mov
mov
pop
movsb
shl
xor
sarl
cmp
mov
sbb
jmp
jp
sbb
mov
lods
in
pop
push
cmpsl
outsb
mov
adc
push
xor
xor
pop
adc
mov
lods
cmp
sbb
sub
das
cmc
outsl
adc
imul
mov
mov
cmc
mov
sbb
lock
int
pusha
mov
nop
xlat
arpl
cld
imul
add
js
add
inc
and
mov
xor
movsb
cmp
sarb
and
repnz
js
ss
outsl
and
or
clc
out
loopne
and
add
mov
sub
fcoml
ret
pop
stc
pop
adc
lods
jp
xor
daa
mov
push
pop
mov
fdivl
pop
cmp
sub
lcall
xchg
or
pop
add
ds
cmp
popf
adc
fists
cltd
fsubs
pop
mov
pop
sar
ds
cmp
mov
clc
adc
sahf
enter
and
cld
cltd
mov
cmp
jbe
nop
pop
mov
lcall
dec
test
scas
cwtl
in
xlat
mov
stc
test
sub
mov
cld
cs
fdivrl
adc
add
nop
add
dec
enter
jle
in
mov
cld
sub
fisubrl
dec
xchg
shlb
mov
movsb
or
cmp
enter
repnz
shll
dec
or
jge
stc
mov
sti
fildl
and
inc
cmpsl
addl
fwait
cltd
fwait
or
sub
mov
sbb
pushf
andb
pop
adc
aas
bound
add
sub
mov
test
rclb
aad
cwtl
inc
push
pushf
cmp
push
out
add
mov
inc
cmp
dec
lahf
rcll
push
sub
sub
fcmovnb
nop
mov
fcmovnb
dec
cmp
mov
cmpb
add
adc
fadd
cmp
mov
insb
jno
cmc
pop
mov
mov
pop
rorl
in
leave
cmp
ds
mov
ret
pop
or
push
call
shrb
mov
aam
lods
mov
ret
xchg
fstps
imul
sahf
sub
mov
pop
cmpsb
xor
ds
in
mov
pop
cwtl
sbb
clc
mov
jmp
push
push
xor
fists
in
enter
cld
fsubrl
lret
adc
sub
pop
pop
into
mov
sub
jo
jp
fcmovbe
jbe
fldcw
add
and
pop
cmpsl
cmpb
or
mov
js
sahf
mov
and
es
cmp
lret
loope
les
addr16
mov
mov
adc
mov
fwait
cltd
adc
or
sti
jne
into
dec
xchg
mov
popa
mov
cmp
lock
cwtl
sbb
sti
cld
pop
sub
mov
jge
add
imul
mov
xchg
aas
fsubs
movaps
adc
fisubrs
adc
and
inc
sbb
pushf
bnd
or
sbb
daa
ret
out
push
icebp
repnz
jo
out
mov
fmuls
or
insb
sbb
lock
cltd
xlat
pop
clts
sar
xchg
in
jae
mov
popf
aam
mov
imul
fs
sbb
push
leave
mov
dec
or
push
call
pushf
push
xor
add
adc
lods
cmpb
mov
sub
sarb
push
mov
xor
gs
inc
mov
pop
inc
imul
insl
jns
sub
xor
mov
test
mov
cmp
mov
and
repnz
mov
sbb
ss
cld
add
mov
jp
mov
scas
pop
cs
mov
dec
mov
sbb
xchg
sbb
sbb
insb
cmp
mov
inc
iret
cs
roll
pop
std
inc
jge
ror
imul
fbstp
mov
inc
push
lea
dec
and
push
bound
int3
cmpsb
xchg
jg
and
popw
mov
mov
mov
add
cmc
and
popa
mov
jmp
jns
aas
insl
and
adc
nop
in
add
in
addr16
or
or
mov
and
loopne
xchg
inc
pushw
in
push
sbb
in
push
pop
sti
mov
jge
jecxz
pop
add
mov
roll
push
dec
mov
push
cmp
sub
mov
jbe
adc
mov
push
or
pop
js
jb
cmpsl
xchg
mov
add
jg
jecxz
stos
fwait
add
lret
fisttps
xchg
in
sub
sbb
mov
fildl
dec
pop
or
sub
push
mov
cmp
fisubrs
and
mul
dec
and
loop
xchg
icebp
cltd
mov
mov
xor
inc
jge
jnp
popl
fmuls
or
mov
sub
xor
pop
or
push
mov
or
jmpw
jne
xor
rcll
sarb
aas
enter
stos
mov
mov
cltd
in
cmp
outsb
jb
int
inc
movsl
dec
add
enter
in
nop
inc
popa
je
in
add
or
jnp
jbe
std
jne
fyl2xp1
enter
push
repz
dec
cld
sahf
xchg
xor
add
lret
gs
or
or
mov
adcb
ffreep
lret
jno
pop
mov
pop
and
push
jns
jno
jp
or
out
ja
scas
and
mov
dec
rclb
xchg
add
jmp
mov
jge
add
or
xor
enter
sub
fs
psubb
mov
or
cs
lahf
pop
xchg
outsb
ret
out
imul
pop
add
jns
hlt
out
test
xor
scas
or
xchg
shlb
mov
adc
add
mov
mov
and
clc
push
stos
movsb
or
jg
insb
es
movsb
pop
add
repz
fdiv
and
pop
xchg
jecxz
pop
rcll
mov
inc
fldenv
add
das
mov
xchg
sti
xor
push
sar
incb
test
pop
push
aam
push
jge
xor
mov
and
push
pmuludq
pop
or
add
outsl
inc
inc
add
into
push
adc
pop
bound
and
mov
dec
mov
xchg
push
leave
mov
push
xchg
aas
add
push
pop
loop
int
fldcw
xorl
fstpt
imul
xchg
aam
shlb
push
fbld
jecxz
fisubl
fwait
inc
cmp
rorb
ret
cwtl
push
push
mov
scas
jg
and
push
jg
loope
or
hlt
inc
mov
jle
pop
pop
je
and
inc
jb
mov
lock
jns
xor
insl
pop
inc
inc
pop
lock
xchg
jb
xchg
stos
in
leave
insl
mov
cmp
xchg
lahf
movl
mov
pushf
adc
xchg
fld
shll
pop
or
call
adc
insl
inc
dec
out
shlb
pop
or
repz
push
push
pop
rcrl
inc
xchg
in
jno
adc
mov
mov
sbb
cs
push
sbb
pop
hlt
int3
xchg
mov
sub
pusha
mov
mov
scas
aaa
mov
push
mov
lahf
scas
nop
push
test
mov
and
mov
or
push
cmp
jo
cmp
mov
push
mov
inc
loop
popf
outsl
jno
outsl
dec
addl
sbb
push
loop
xor
cli
cmc
cs
mov
jecxz
mov
je
je
addr16
xor
or
and
push
add
imul
dec
bnd
enter
loope
and
inc
xor
pop
pop
dec
mov
adc
and
shrb
bound
aad
test
stos
arpl
fcmovnb
stos
or
inc
jnp
mov
pop
add
xor
dec
fnsave
sbb
pop
add
push
arpl
aam
pop
cmc
int3
cld
and
cmpsb
inc
imulb
fnsave
sub
or
pop
int
ret
xchg
out
jl
aad
into
mov
ror
and
lahf
cmp
stc
insl
dec
stos
add
inc
mov
arpl
or
xchg
push
inc
push
sub
xchg
jmp
or
sbb
inc
jbe
jl
inc
and
jo
dec
lods
pop
std
push
adc
and
in
xchg
mov
mov
cmp
repnz
pop
lods
cli
pop
add
sbb
popf
cmpsb
cli
fidivrl
cld
in
push
sbb
mov
rcll
push
aas
aad
sbb
adc
pop
leave
xor
sbb
add
imul
xchg
adc
nop
shl
xchg
stos
dec
adc
pop
into
mov
rcll
repz
repnz
fidivl
or
js
xchg
faddl
mov
clc
jo
adc
rclb
psubusw
inc
xchg
dec
fnstenv
imul
adcb
pop
and
sbb
repz
or
sbb
mov
lock
mov
sbb
mov
push
push
mov
mov
popa
xor
mov
pop
imul
mov
pop
cwtl
push
mov
lods
jecxz
add
mov
mov
pop
popa
pop
xchg
and
push
inc
lret
div
in
mov
pop
mov
mov
dec
rcrb
enter
aas
push
ja
mov
push
addl
or
mov
mov
in
xchg
in
popa
outsb
into
aad
jge
fdivl
or
push
mov
dec
add
mov
cmp
adc
pop
jne
mov
out
scas
pop
push
push
xchg
dec
icebp
orl
push
mov
test
adc
cmpsl
mov
lds
shr
stc
sub
popa
add
sti
xlat
mov
aaa
mov
mov
ss
shll
addl
gs
mov
adc
pop
mov
iret
add
sbb
mov
repnz
xor
enter
xchg
sub
or
mov
cwtl
and
sbb
and
test
and
and
xor
nop
or
sbb
cld
jb
mov
inc
movsl
sbb
std
mov
enter
int3
aad
xor
stc
lret
stos
and
aas
inc
mov
jb
jb
mov
in
lea
mov
xorb
mov
add
cwtl
xor
mov
jns
xchg
adc
nop
aas
sub
xchg
cli
aad
sub
lcall
pop
addl
inc
sahf
bound
data16
ficomps
icebp
cwtl
add
sbb
push
sub
lea
or
ret
sahf
ss
inc
popa
mov
pop
add
adc
adc
out
ja
and
mov
mov
test
mov
in
sti
aas
test
jl
ja
and
inc
lret
sub
ret
je
std
push
add
cmpsb
mov
sti
iret
ror
cmp
inc
in
aas
int
mov
je
inc
add
sub
xor
insl
mov
xlat
mov
lret
sub
sbb
or
test
ret
mov
push
and
pop
push
xchg
jl
dec
repnz
xor
push
scas
adc
cli
into
out
sahf
inc
lock
je
jp
fucompp
xchg
ret
repnz
sub
rcr
stos
xchg
cmc
shl
outsl
sub
sbb
jne
hlt
int3
mov
addl
shr
sub
xchg
mov
cmpsl
adc
loope
shll
push
jns
popf
in
inc
int
stos
push
loopne
clc
ss
icebp
inc
loopne
clc
leave
inc
or
mov
mov
out
fsts
jno
add
sbb
mov
pop
sbb
addr16
mov
cmp
mov
pop
insl
lret
jg
jno
lcall
mov
xor
into
pop
jns
adc
fs
shlb
sub
cmp
in
cmp
inc
gs
data16
push
xchg
cmp
cmp
mov
pop
sti
lret
gs
cmp
scas
pop
cmpsb
lret
cmpsl
cwtl
jae
and
add
les
push
cld
sub
pop
fdivl
insb
jae
iret
outsl
push
pusha
mov
fcoml
lock
inc
dec
mov
enter
and
mov
mov
out
icebp
jp
icebp
rol
or
dec
mov
jl
sbb
into
lds
test
int
out
lret
xor
inc
sbb
loop
dec
jmp
and
and
adc
jae
cmpsl
mov
mov
mov
inc
pop
into
jne
jecxz
inc
bnd
mov
ja
cwtl
jge
sub
je
rclb
popf
xor
pop
sub
push
mov
mov
add
inc
and
or
mov
inc
inc
xchg
xchg
jle
xor
mov
ja
or
in
push
out
xor
push
inc
es
aam
xor
inc
les
mov
or
xor
nop
jae
pop
loop
cltd
test
pop
fwait
stc
inc
mov
pop
loop
cmp
pop
push
ljmp
xchg
les
sub
sub
lret
inc
jmp
jecxz
dec
mov
lea
push
adc
mov
and
fcoml
enter
xchg
imul
int3
shlb
lock
jb
aam
or
cmc
inc
cmp
mov
jmp
sbb
cs
xlat
int3
jns
jp
rorb
sub
push
sbb
div
mov
mov
fidivrl
jl
fsubrp
pop
xchg
std
dec
jecxz
sbbb
dec
test
mov
sub
inc
jnp
inc
dec
cld
rcl
enter
and
dec
hlt
adc
ss
out
scas
stos
mov
lds
xchg
xchg
mov
cmp
sbb
xchg
inc
add
insl
fimull
lahf
lret
or
xchg
add
test
cmp
repz
add
xchg
xchg
mov
pop
mov
mov
mov
cmpsl
adc
mov
sbb
aas
mov
nop
sti
cmpsb
push
or
aaa
lea
sarl
push
jle
movb
xor
fiaddl
test
fimull
and
jb
es
inc
movsb
es
mov
mov
inc
test
cltd
mov
out
int3
inc
std
mov
pop
hlt
mov
sahf
scas
stos
sub
lea
stos
fisttps
mov
sub
xor
sbbb
call
mov
inc
fucomp
fdivs
mov
cmp
in
int3
cli
iret
xor
cld
jge
xchg
sti
outsl
inc
sbb
jb
mov
dec
pusha
push
ret
fsubs
pop
cmc
call
cmp
fwait
repnz
push
jnp
add
lds
mov
ret
add
xor
sbb
in
ret
fldt
jnp
mov
test
dec
adc
push
sbb
or
or
and
or
pop
add
xor
push
cmpsl
call
in
mov
add
outsb
fs
dec
shll
xchg
add
bound
leave
popa
jmp
cmpsb
out
outsl
and
xchg
sub
stos
push
ret
mov
mov
loope
and
fdivl
push
ljmp
loopne
scas
xor
mov
dec
mov
je
mov
in
jmp
decb
add
dec
hlt
push
jp
in
add
push
pop
mov
mov
dec
sbbb
jne
sub
sub
aad
mov
imul
aam
pop
push
loop
add
popf
add
dec
stos
mov
jo
xchg
mov
jge
push
pusha
mov
dec
mov
or
inc
xchg
lods
xchg
es
rcrl
leave
scas
in
and
adc
adc
push
test
pop
xor
or
enter
out
inc
xchg
popa
add
inc
lods
ljmp
loopne
and
and
inc
mov
inc
mov
call
cmp
mov
sbb
dec
adc
pop
ret
mov
scas
in
xchg
xor
sub
push
xor
lds
je
scas
jmp
xchg
sti
enter
shl
push
jg
sub
sbb
mov
cmc
iret
sub
adc
push
dec
js
push
test
test
adc
mov
scas
jbe
dec
jp
hlt
adc
push
int3
jo
xor
push
mov
xchg
or
lret
adc
into
sub
fdivs
jl
inc
dec
popf
xlat
fs
aas
mov
adc
jb
ss
rcrb
mov
mov
pop
idivl
outsl
leave
push
das
je
testb
xchg
adc
cs
mov
mov
cmp
sub
imul
xchg
fwait
incl
add
xor
in
imul
cld
mov
orl
xchg
or
ds
add
cmp
mov
xor
pop
cmp
and
int
jae
add
insl
cmpb
fsubl
xor
or
leave
push
into
inc
or
sub
mov
rcrl
aam
add
jbe
or
sbb
call
xchg
loop
mov
ffree
mov
dec
dec
and
mov
ds
push
subl
loope
pop
test
cmp
jge
in
jp
in
xchg
push
test
mov
mov
mov
mulb
adc
popa
pop
mov
mov
insb
mov
sbb
xor
rcr
cs
sub
cmp
jecxz
sub
scas
mov
out
lods
xor
lahf
and
xor
jl
inc
or
sub
add
out
dec
out
jl
orb
insb
sub
int
out
mov
sub
and
fimuls
out
roll
or
cmp
inc
or
mov
mov
add
pop
xchg
sub
xor
iret
sub
pop
or
dec
push
or
out
mov
pop
fwait
cmp
mov
insl
mov
les
pop
jbe
rorb
and
je
xchg
jl
lods
dec
aam
test
add
cmp
loop
push
cld
cli
into
andb
inc
mov
adc
lret
pop
mov
stos
outsl
pop
mov
mov
loop
cmp
inc
rolb
add
or
add
mov
into
xor
sbb
or
cwtl
dec
or
das
and
pushf
leave
add
out
dec
dec
lret
and
lds
pop
out
out
aaa
or
sub
test
test
push
test
leave
cltd
mov
fcmovu
pop
mov
dec
test
adc
jle
or
rcl
add
xchg
movsl
mov
sarb
mov
cmc
inc
jnp
lret
ret
movsl
loopne
int3
inc
dec
adc
cs
pop
inc
movsl
pusha
mov
inc
or
or
int3
jo
jno
fsubrl
ret
add
adc
test
ret
dec
cmp
xchg
inc
xchg
testb
or
int3
in
pop
jns
out
inc
lods
daa
add
mov
xlat
dec
push
out
mov
pop
loopne
test
outsb
add
insb
fisubl
jge
jbe
pop
add
inc
mov
mov
xchg
outsl
jl
out
adc
hlt
jbe
fcmovnb
test
jae
sbb
and
cmp
bound
mov
sbb
loop
out
out
mov
mov
sbb
neg
push
fcompl
add
or
daa
add
ds
gs
jl
lea
mov
add
cli
lds
addr16
dec
ja
xor
lea
mov
sbb
and
cmp
dec
lahf
cmpsl
testb
sub
pushf
xchg
insl
xchg
lret
push
push
movsl
decl
and
or
fiaddl
jp
mov
addr16
mov
insb
inc
adc
fstl
pop
mov
sti
ss
es
pop
pop
mov
push
ret
sub
imul
nop
push
or
push
mov
roll
leave
jne
pop
out
xor
std
mov
jns
add
movsl
in
cltd
enter
scas
or
mov
ds
jb
fwait
dec
and
push
or
sbb
aaa
pop
mov
aaa
cmpsl
mov
xchg
sbb
fsubl
sub
cmpsb
ja
dec
imul
dec
mov
add
jns
gs
xchg
mov
jae
cld
ja
inc
repnz
xchg
testl
inc
or
ss
je
jno
pop
imul
cltd
sub
cmp
add
lret
loopne
jp
rclb
andb
pushf
rcl
stos
js
push
dec
cs
shl
sub
pop
out
xchg
push
inc
out
and
sub
push
ret
bound
mov
push
test
popa
ja
ss
xchg
repnz
xchg
fists
fs
xchg
xorb
mov
pop
pop
dec
adc
sub
xchg
fwait
jo
das
les
das
sub
test
inc
push
inc
lea
cmp
push
jns
mov
push
adc
jbe
and
pop
jo
mov
into
outsl
mov
lret
in
inc
jg
push
and
xchg
adc
dec
pop
daa
ljmp
sahf
movsl
stos
pop
push
xor
jnp
mov
jmp
xchg
lds
sub
xor
mov
out
imul
push
mov
repz
int
dec
fsts
rclb
cld
xchg
les
mov
pop
inc
ja
cmp
mov
dec
mov
in
clc
inc
add
and
cmpsl
jle
mov
push
sub
jg
pop
mov
in
or
pop
xor
mov
xchg
fsub
xchg
mov
inc
test
test
add
mov
dec
jp
xor
aas
sbb
pop
xchg
or
and
lret
xor
sub
push
aas
mov
xchg
pop
and
out
dec
je
dec
or
sbb
xchg
cmp
outsl
mov
popa
fcmovne
jge
dec
in
int3
sub
jecxz
nop
dec
adc
push
lods
ret
cld
mov
dec
sarb
dec
mov
mov
lods
imul
sbb
or
pop
dec
lods
icebp
test
imul
stos
out
das
pop
push
xor
shrb
jg
cmpsl
dec
mov
out
jmp
inc
jo
pusha
pop
mov
inc
decl
or
dec
jae,pt
insl
sub
cmc
pop
movsb
sahf
test
test
mov
mov
jns
call
aaa
lret
add
outsl
push
out
xchg
push
test
das
mov
add
in
lods
inc
int
adc
loop
sbb
dec
cli
pop
xlat
and
call
cmp
dec
test
rorb
mov
pop
sub
xlat
mov
jmp
jp
mov
rclb
mov
sbbl
inc
xlat
adc
cmpsl
jmp
xor
loop
das
dec
jge
scas
mov
fiadds
add
movsl
and
mov
pop
mov
lock
cmc
mov
rorb
int
loopne
inc
xchg
mov
sbb
popf
and
scas
clc
repnz
jns
addl
jnp
push
jmp
cmpsl
cmp
aam
mov
mov
add
fiaddl
or
mov
cmpb
dec
cmc
push
adc
lret
cmp
cltd
das
adc
outsl
cwtl
xchg
lods
add
mov
iret
jnp
xor
scas
cmpsl
les
dec
mov
out
loop
sti
pop
leave
and
ljmp
pop
imul
jns
mov
jne
sbb
mov
cmc
mov
cmpsl
insl
lds
mov
sbb
lret
xlat
fcoms
fmul
pop
xchg
dec
jecxz
outsb
aas
lea
xchg
ficomps
loope
stos
sbb
push
into
adc
out
mov
aad
adc
sbb
xlat
mov
xorb
pop
add
jno
pusha
lret
add
aam
jbe
sbb
fs
jb
push
inc
mov
cltd
shl
mov
lds
jne
jp
jmp
in
sub
test
mov
movsl
stos
imul
test
repnz
out
lahf
pop
insb
jl
inc
sti
xlat
imul
imul
lods
pop
int3
pop
repnz
stos
xchg
mov
mov
adc
mov
lds
imul
pop
lods
pop
into
or
inc
insb
jl
subl
or
popf
mov
insl
sub
std
sub
pop
xchg
aam
xlat
push
pop
sti
stos
push
or
push
add
imul
xchg
adc
push
xor
add
cmc
movsl
push
mov
scas
adcl
fwait
shr
cmpsl
sbb
stos
scas
xor
mov
adc
cmp
adc
repnz
and
int3
ds
xchg
fwait
add
xor
sbb
arpl
ficompl
iret
fbld
push
pop
ret
addr16
pop
mov
pop
leave
cmp
mov
dec
mov
dec
fsubr
pop
cmp
scas
mov
xchg
scas
cltd
cmp
pop
mov
and
lcall
stos
cwtl
testl
mov
xchg
mov
in
jne
lret
imul
fucom
xor
in
cmpl
mov
cmpsb
sub
stos
mov
lcall
fadds
push
or
inc
dec
and
xchg
pop
mov
mov
or
jae
js
and
das
push
pop
mov
clc
das
dec
ret
dec
cmc
stos
repnz
sarb
andl
cmp
inc
push
pop
js
xchg
fidivrl
movsl
lea
mov
pop
popa
or
std
sub
fsubrs
pop
repz
scas
pop
inc
js
push
or
pusha
mov
out
cmp
aad
shrl
mov
and
mov
push
jp
cltd
ljmp
lods
cwtl
xchg
add
and
jl
imul
jge
cltd
xchg
mov
mov
cmp
jp
and
fldenv
cmp
out
inc
rclb
in
mov
mov
test
ja
scas
add
mov
leave
leave
andl
push
cmpb
or
push
imul
adc
movsl
sub
insb
jp
jb
in
mov
xchg
sbb
inc
es
mov
mov
fs
sub
fcompl
push
add
or
jg
add
sub
dec
adc
add
mov
mov
add
sbbb
insb
adc
cmp
js
inc
gs
mov
sub
stc
add
cmpsl
sahf
sub
or
jp
dec
cwtl
mov
in
inc
xor
std
cwtl
lods
popf
xor
add
and
out
mov
sub
scas
in
cmp
push
lods
sbb
inc
cli
jbe
out
or
cltd
insl
xor
jo
sbb
inc
push
ret
jmp
and
add
lock
push
xor
jle
add
imul
loop
dec
pop
push
mov
mov
fsubs
mov
mov
fcmovnbe
inc
arpl
sbb
push
xchg
loope
jae
sbbb
movsb
in
test
or
mov
fimuls
pushl
loopne
mov
sub
repz
adc
call
pop
je
out
mov
sbb
pop
dec
mov
sub
nop
inc
imul
xor
xchg
fs
imul
mov
jmp
sbb
and
add
mov
into
fnstenv
pop
jge
sbb
fnstsw
sub
ret
les
mov
mov
fwait
or
xchg
in
sbbb
sbb
or
adc
ja
xor
xchg
pop
cs
cmp
push
fcomps
sub
std
punpcklbw
mov
cmp
nop
add
xchg
push
or
sbb
push
jg
loope
lahf
push
cli
ds
mov
pop
or
ja
cmpsl
shll
mov
mov
dec
sub
cmp
jp
aam
jae
and
cvtps2pi
add
xchg
imul
ret
out
inc
or
sarl
mov
mov
xorb
ret
iret
cmp
out
sub
jle
push
out
push
push
mov
push
test
xor
add
pop
push
push
or
jbe
popa
stc
pusha
mov
and
jne
fwait
push
fisubs
push
push
sbb
addr16
jo
nop
sbb
scas
xor
push
fimuls
pop
jle
cli
imull
out
js
int
leave
ljmp
addr16
mov
ja
cwtl
leave
dec
jge
mov
jo
mov
leave
push
or
and
std
mov
jl
loopne
int3
cmp
mov
sub
pop
test
xor
shrb
jne
sbb
push
mov
jl
out
notb
rclb
mov
xchg
mov
shll
setnp
ljmp
inc
subb
lcall
sarb
inc
mov
dec
dec
aaa
daa
aam
lret
movsb
popa
jae
push
push
jo
pop
lret
adc
aaa
inc
imul
lods
divb
imul
ljmp
flds
movb
sub
iret
andb
jl
mov
stos
ret
xor
dec
mov
pop
mov
inc
rcr
ds
aas
inc
scas
xchg
inc
sbb
imul
outsb
xorb
mov
movsl
sub
pop
pop
stc
adc
push
inc
xor
mov
cmpsl
inc
xchg
aam
imul
mov
jb
lahf
mov
adc
push
mov
mov
mov
pop
mov
and
inc
add
lahf
in
cmp
dec
jecxz
std
cmp
nop
pusha
test
dec
roll
ds
shl
mov
pusha
imul
jnp
out
mov
lds
pop
lret
adc
mov
adc
pop
cli
out
or
les
pusha
daa
pop
lods
add
pop
scas
sbb
mov
in
push
clc
js
xor
mov
and
push
dec
push
dec
add
mov
faddl
cmc
fisubl
mov
shlb
popf
lock
mov
repz
pop
mov
mov
jg
pop
subl
sbb
addl
cmpsb
mov
mov
or
fldcw
mov
mov
call
adc
adc
pop
inc
imulb
mov
pop
mov
dec
jl,pn
test
inc
inc
fidivs
xor
filds
inc
mov
mov
inc
scas
std
scas
mov
fnsave
nop
outsl
pop
sahf
pop
ret
jl
pop
in
pop
outsb
push
push
xchg
mov
mov
shlb
and
lret
scas
iret
les
mov
dec
fisttpl
rcrb
dec
sbb
adc
fisubs
mov
lods
int
fidivl
pop
mov
sahf
push
jp
jl
mov
cli
insb
pop
bound
mov
add
dec
rcl
fwait
scas
scas
inc
pop
in
inc
call
mov
push
and
and
pop
adc
xchg
loop
jo
lock
mov
bound
and
aas
imul
xor
jne
mov
cmpb
popf
or
enter
mov
mov
rolb
int3
ja
xchg
pop
or
ret
lret
mov
mov
ljmp
sub
pop
imul
push
je
or
clc
mov
dec
test
sub
dec
repnz
mov
mov
nop
int3
ret
lret
aam
add
fwait
repnz
fnstenv
bswap
mov
lock
or
sbb
andl
lret
out
fsubp
dec
push
loop
es
cmp
test
imul
scas
scas
repnz
dec
test
cmp
shlb
pushf
mov
rorb
and
pop
ror
lods
mov
je
sti
repz
je
pop
scas
sub
mov
gs
sahf
push
push
ljmp
push
cs
pop
enter
sub
nopl
mov
adc
lahf
cmp
pop
lds
jno
cmpsl
into
pop
sbb
out
sub
sub
and
pop
ss
push
push
or
jp
into
pusha
jg
jge
addr16
and
sub
sbb
push
test
test
mov
jl
fsub
dec
xor
xor
shlb
push
mov
sbb
mov
and
leave
jae
mov
push
enter
test
loop
add
mov
adc
sub
push
push
xor
stos
mov
arpl
in
loopne
mov
cmp
test
sub
add
sub
sbb
mov
fdivrs
pop
push
aaa
hlt
cltd
mov
sbb
xorl
bound
add
cmp
andb
jb
aaa
xchg
cmp
mov
pop
xor
inc
fmul
stos
mov
inc
mov
add
inc
fldenv
dec
push
mov
fchs
fsub
xchg
rorl
les
into
dec
dec
mov
mov
pop
mov
push
sbb
fwait
mov
dec
inc
pop
nop
insb
xor
cmpsb
mov
sub
aaa
mov
jg
xor
push
jno
cwtl
xchg
std
rcrb
rolb
lahf
pop
fnstcw
push
xchg
cs
pusha
mov
cmpl
aam
shlb
lahf
xchg
add
sbb
sti
inc
cmp
cld
out
xlat
cmp
add
hlt
lcall
sbb
aam
adc
out
push
inc
mov
inc
and
mov
mov
add
in
js
dec
les
inc
test
jns
fmul
jnp
dec
in
sub
push
js
nop
pop
lahf
mov
cwtl
lds
sbbl
outsl
lret
adc
xchg
cmc
out
test
inc
add
fcomip
test
sub
add
int3
pop
jbe
sbb
or
imul
pop
stos
cmp
sti
xchg
paddsb
pushf
push
leave
jl
out
and
test
rcrb
jecxz
scas
lods
fnstsw
das
pop
adc
sbb
lods
push
pop
and
push
xchg
or
stc
jns
jle
push
cmp
adc
adcl
sub
rcrb
sar
adc
xor
mov
dec
dec
pop
fiaddl
jecxz
inc
mov
cmp
push
outsb
cmp
gs
or
popf
fs
enter
or
clc
mov
sahf
lods
and
xchg
daa
inc
inc
stc
ret
loope
addl
outsb
or
pop
jno
adc
mov
into
mov
and
adc
mov
jo
ss
cltd
and
shlb
push
jl
dec
cmpsl
mov
sub
aaa
inc
cs
mov
sub
and
loop
push
ror
jle
andb
push
sub
movsl
imul
lret
mov
push
sub
xchg
outsb
fisttpll
mov
jle
jne
shll
xchg
popa
sub
dec
je
jmp
push
jp
shll
inc
jp
cmp
jecxz
or
dec
mov
and
inc
es
adc
push
jmp
xlat
popf
fwait
xlat
mov
or
je
inc
jne
popa
addl
pop
lods
mov
loop
fs
and
sub
repz
fcmovne
or
mov
clc
and
rcl
stc
pusha
and
int3
mov
or
int3
enter
stos
aas
out
insb
sub
mov
lret
ja
xchg
cltd
loop
movsb
mov
psubusb
pop
lock
fs
xchg
mov
or
sbb
sbb
lds
iret
scas
xchg
lret
cmp
mov
mov
push
dec
dec
shlb
arpl
xor
mov
push
in
in
add
testl
mov
gs
cmpsb
cmpsb
mov
rorb
into
jb
stos
fdivs
or
aas
or
cmp
pop
add
and
pop
fsubr
aaa
imul
mov
sub
sahf
dec
lret
lret
sub
cld
scas
mov
outsb
mov
in
adc
cmp
xor
push
jp
icebp
imul
cmc
scas
dec
loope
dec
aam
int
test
inc
arpl
mov
into
or
mov
insl
sbb
inc
jl
addr16
push
xor
ffree
enter
ret
pop
mov
sub
pop
popf
pushf
lea
mov
lods
inc
mov
jbe
enter
mov
jnp
pop
enter
jno
in
sbb
pusha
sbb
stc
add
ljmp
mov
lcall
daa
push
xor
pop
rol
jge
mov
xchg
test
and
fdiv
out
shlb
xchg
aas
out
pop
push
sub
mov
lahf
cmp
jge
add
or
and
inc
lods
inc
aam
movsl
out
sbb
sbb
inc
ffreep
cmc
lret
dec
nop
fisubrl
scas
cwtl
xchg
jge
cld
data16
push
test
xchg
push
add
addl
shlb
cs
int
testb
and
mov
xor
add
cwtl
ljmp
cmc
inc
sarb
inc
mov
add
pop
aas
lods
in
call
mov
push
mov
jns
xor
mov
adc
test
dec
enter
mov
mov
or
aam
call
pop
jle
push
push
mov
cmc
jecxz
lods
enter
mov
xchg
jecxz
bound
nop
iret
mov
shll
movsb
push
xchg
inc
push
cmpsl
lods
cmp
jne
std
and
mov
clc
mov
add
cmp
cmp
mov
test
shrb
lock
sub
jns
lea
in
fbstp
gs
insb
jno
mov
shl
movsl
popw
add
xchg
enter
jns
dec
mov
mov
jns
imul
jb
pop
cltd
mov
dec
fs
ja
mov
cld
sbbl
adc
inc
push
pop
add
or
mov
fmull
into
adc
inc
loope
jae
or
inc
loope
loope
add
jge
fists
lret
shlb
mov
sub
test
dec
jne
or
or
lock
mov
adc
les
pop
fnstcw
xchg
insl
dec
push
fs
je
sub
aam
dec
pop
out
cmp
adc
cmp
jns
cs
mov
pop
loope
and
fwait
push
mov
rorb
push
negb
lret
cmc
out
movsl
orl
sub
jmp
movsb
push
xor
inc
and
cmp
sti
mov
adc
lock
popa
mov
dec
lock
push
in
mulb
adc
push
xchg
mov
mov
rcll
mov
aam
movb
movsb
jnp
sub
scas
ja
aaa
mov
leave
hlt
cmpps
sub
xor
jp
lret
or
cmp
push
pop
cmp
pop
cmp
rclb
cmp
adc
cmp
jbe
push
imul
ja
mov
imul
xlat
jns
inc
add
popa
mov
sub
inc
cmp
stos
not
pushf
shrl
pop
mov
nopl
push
cmp
xor
dec
inc
in
xchg
scas
fdivr
xchg
xchg
sti
sbb
jmp
and
push
into
fcomi
sbb
arpl
insl
mov
das
imull
xchg
lahf
xor
cmp
loop
jo
xchg
cmp
mov
insl
jl
daa
xchg
adc
mov
out
jae
sbb
jno
adc
push
das
xor
fidivs
jmp
cmp
push
into
loopne
xchg
jl
out
push
mov
jecxz
stos
inc
or
xor
leave
je
aaa
mov
inc
xchg
mov
pusha
lcall
lret
mov
adc
hlt
enter
or
jne
in
loop
add
sti
push
jae
fmul
pushf
js
outsl
jmp
out
ret
leave
mov
cmc
out
outsl
mov
inc
adc
and
lock
loop
data16
sbb
iret
xchg
loopne
shr
jge
daa
cmp
pop
cmp
mov
lods
cmp
aad
inc
mov
adc
pop
mov
fldenv
xchg
les
ret
mov
jno
in
lock
pushf
rorb
cmp
addb
jae
cmp
ret
jb
loopne
xchg
mov
test
pop
lret
jnp
push
add
adc
sahf
fnstenv
inc
leave
sbb
test
cmc
in
or
imul
es
mov
jmp
or
push
in
outsl
xor
in
mov
push
movsb
dec
icebp
les
push
pop
mov
mov
dec
xor
repnz
dec
xchg
xorb
pushf
lcall
aad
lahf
sahf
cmp
insl
lret
arpl
cmc
test
ret
add
sbb
xor
outsl
mov
mov
dec
push
and
ficoms
rorb
scas
inc
out
inc
pop
std
jle
xlat
call
fs
in
scas
in
sub
nop
out
dec
sbb
inc
push
aas
mov
jb
add
jns
imul
adc
add
aas
fsubrs
int
or
or
aaa
cs
mov
lret
inc
repz
fcomps
inc
mov
xor
lock
pushf
lea
lcall
cmpsb
push
shlb
fmul
sub
xorl
sub
mul
and
push
dec
lret
loope
mov
in
and
test
enter
push
lahf
bnd
sub
scas
or
ret
adc
dec
imull
out
jae
out
mov
cwtl
nop
inc
stos
aas
stc
enter
xchg
sub
dec
pop
sbb
mov
xchg
xchg
add
pop
jno
jbe
jb
adc
adcl
into
fisubrl
ret
xchg
mov
mov
shll
ret
inc
mov
decl
shll
fdivr
popf
jl
sub
mov
sbb
ljmp
mov
jne
cmp
mov
mov
fsub
mov
inc
stos
fwait
cmpsl
inc
imul
loop
enter
imul
jmp
stc
add
int
sti
pop
mov
sub
fadds
add
dec
mov
outsl
mov
xor
int
pusha
cmp
mov
pop
daa
std
push
mov
xor
lods
mov
push
arpl
mov
push
jp
jecxz
pusha
cmp
cwtl
mov
popf
pop
aam
pop
and
je
push
xchg
cli
pop
xlat
les
push
mov
mov
ss
shrl
pop
xor
popf
mov
jge
sub
push
cmp
aad
mov
sub
lods
dec
sub
test
fcompl
enter
movsl
mov
pop
arpl
cmp
adc
mov
pop
inc
mov
xchg
mov
cmpsl
and
fwait
jge
repz
shlb
dec
xor
dec
adc
movsl
inc
adcl
imul
iret
imul
cli
fld
loop
mov
icebp
pusha
cmp
xchg
mov
daa
mov
xor
mov
pop
inc
add
jae
inc
xchg
mov
lret
int3
and
test
adc
inc
or
fcompl
loop
dec
mov
adc
dec
inc
cmp
mov
mov
dec
mov
cmpsl
fidivs
jae
aas
add
adc
dec
xorb
sub
jae
aad
rorl
inc
leave
xchg
xchg
inc
push
xor
aad
pusha
jnp
mov
and
push
sahf
mov
rcrl
pushf
nop
pop
xchg
pop
sbb
xchg
adc
xchg
mov
and
dec
dec
fistpll
in
dec
pusha
sub
inc
decb
adc
dec
daa
inc
push
sahf
loopne
mov
jle
adc
mov
ss
pop
pop
stos
cwtl
xchg
mov
jae
or
inc
mov
jmp
into
pushf
jle
dec
test
or
ret
pop
jl
push
in
popf
fisttps
add
aad
add
mov
or
cmpl
mov
insb
inc
jne
mov
outsb
int
cli
xor
loope
mov
sbb
mov
xchg
stos
test
cltd
vpmuludq
add
xchg
mov
push
xor
add
dec
xchg
sub
stc
in
or
pop
out
cmc
xchg
jecxz
xchg
xchg
add
or
stos
push
xorl
mov
cmpsl
inc
das
es
and
andb
rorl
cli
leave
inc
inc
xchg
dec
pop
or
cmp
adc
pop
fmuls
push
popa
jnp
fistpl
pop
call
in
xchg
arpl
sub
out
ret
or
test
dec
mov
sub
inc
adc
sti
lahf
outsl
mov
insl
lods
pop
sbb
les
jl
and
scas
lcall
fildl
shrl
pop
pop
cmp
sbb
inc
test
pop
jne
subb
xchg
pop
test
push
sbb
push
mov
neg
push
fcomp
sbb
sub
xchg
add
xor
daa
mov
push
jmp
sub
outsb
dec
inc
jb
sar
sbb
cmp
dec
xor
sahf
mov
rcrb
iret
push
jb
outsl
lock
mov
nop
sub
inc
loope
pop
fstl
lahf
or
ss
loop
inc
movsb
jns
inc
cltd
mov
out
fs
mov
lods
cmp
push
mov
movsb
lcall
or
push
ja
dec
jg
inc
mov
inc
addl
pop
dec
mov
jns
jbe
imul
test
test
fidivs
inc
mov
xchg
push
mov
je
out
add
lea
out
inc
fmull
xchg
lret
inc
cs
pop
aas
rcrl
insl
mov
addb
gs
ds
std
shlb
xor
arpl
dec
mov
int3
fnsave
mov
jmp
cli
mov
push
cmp
sub
hlt
mov
call
popa
lock
and
jle
sub
cmp
add
sub
mov
push
push
lret
and
jne
push
mov
pop
jmp
mov
scas
cs
stos
adc
mov
das
dec
stc
push
pop
mov
fidivrl
cs
push
or
jmp
cmc
sarl
xor
dec
xchg
add
loopne
test
adc
pop
popf
enter
pop
add
fisttpll
fwait
push
out
repnz
add
out
aam
xlat
jle,pt
or
pop
test
cmpl
bnd
adcb
pusha
push
sti
jno
in
pop
outsl
jo
pop
mov
jp
ds
mov
xor
xor
mov
or
fbld
das
jb
push
test
fwait
dec
fnstenv
loopne
dec
call
pop
shll
jo
xchg
gs
pop
test
mov
push
std
pop
pop
je
add
cmp
mov
cmp
xchg
ljmp
rol
xor
adc
xor
test
roll
xchg
ret
and
add
mov
mov
add
cmp
add
les
push
dec
fdivrs
repz
lahf
mov
lods
mov
cltd
sub
pop
dec
xchg
inc
repnz
ret
popa
jb
mov
xchg
insl
ret
pusha
sub
sub
popa
inc
mov
mov
out
in
mov
int3
pop
int
adc
lret
mov
into
test
mov
sar
pop
add
push
mov
pushf
xor
mov
mov
hlt
loopne
imul
adc
out
cmp
outsb
jle
mov
add
pop
and
push
mov
scas
rcl
add
inc
sahf
cmp
mov
xor
or
jb
sbb
je
sub
xor
fisubl
cmpsl
in
into
push
push
jl
cmp
cld
imul
inc
cwtl
lret
fs
and
xor
ljmp
xchg
enter
xchg
data16
xor
sbb
jbe
sub
mov
out
and
ljmp
mov
lahf
fsts
xchg
jnp
das
adc
mov
mov
jg
mov
add
mov
xlat
test
push
jne
cmc
xor
mov
mov
sbb
std
push
cmp
jbe
and
aad
xor
mov
into
cltd
outsl
cmpsb
sbb
bound
xchg
std
mov
sbb
loop
outsb
jecxz
xor
sahf
mov
test
dec
mov
pop
inc
lds
lods
push
insl
pop
cmc
test
hlt
push
pop
cld
jno
mov
pop
or
mov
int3
sbb
xchg
std
mov
int
pop
xchg
push
movsl
push
xchg
jns
ds
sti
pop
lock
lret
jl
lock
xchg
mov
addr16
fcoml
mov
mov
scas
add
xor
xor
pop
dec
or
int3
mov
push
ficoml
or
or
cmp
inc
mov
cmp
rclb
cmp
jo
jmp
fildll
mov
lods
shl
decb
cs
cmc
jmp
cmp
add
sbb
pop
sahf
mov
ljmp
aad
das
inc
stos
xor
push
ret
movsb
lret
ret
mov
mov
xor
loope
fadd
dec
dec
iret
arpl
lds
push
mov
and
sahf
jae
or
into
faddp
push
cli
leave
mov
imul
jp
pop
dec
dec
loopne
loope
mov
dec
xchg
pmulhuw
cmpsb
jmp
mov
jp
stos
mov
dec
add
stos
xchg
aaa
bound
pop
test
jnp
cmc
mov
mov
mov
notl
mov
lods
cli
mov
pop
add
dec
mov
data16
mov
sbb
sub
inc
mov
dec
push
test
xchg
call
xchg
mov
or
in
and
mov
in
shr
pop
fisttps
xor
mov
pushl
inc
mov
sahf
jmp
and
mov
mov
sbbl
pop
xor
loop
mov
mov
je
jl
mov
fstl
and
clc
repnz
add
ret
rcrl
push
inc
shrl
ror
ret
lret
adc
mov
fs
mov
lock
stos
repnz
jne
pusha
outsl
cmp
jmp
aaa
cmpl
or
daa
jmp
or
cmp
and
xchg
clc
jge
lret
jge
add
cld
cli
inc
jmp
inc
jb
int
aam
or
adc
stc
sub
adc
sub
stos
aaa
frstor
mov
mov
mov
push
int
les
xor
xchg
std
shlb
mov
fs
xchg
mov
jmp
push
cwtl
and
das
lock
mov
insl
in
sbb
ret
cmc
imul
bound
imul
outsl
mov
shrb
jmp
stc
outsl
mov
inc
loopne
sahf
pop
push
dec
lahf
inc
or
imulb
sub
xchg
call
add
push
in
call
mov
xchg
outsl
repnz
mov
sbb
test
inc
jg
iret
shr
dec
cmp
les
add
pop
mov
das
cmp
loop
jbe
fldcw
and
out
jae
mov
mov
inc
mov
cmp
adc
pop
mov
add
bound
dec
sahf
mov
and
int
sbb
xlat
loopne
mov
inc
stos
mull
mov
sub
dec
cwtl
push
mov
jecxz
lret
sbb
cmpsb
mov
ds
lea
cld
rcrl
std
mov
test
es
sbb
add
and
jle
outsl
popf
in
loope
les
test
mov
aam
es
inc
ss
and
shrb
xor
icebp
cmp
gs
push
or
dec
or
shrl
gs
fcoms
push
add
fists
mov
mov
loop
ds
loop
sub
fsts
je
js
sbb
hlt
and
call
inc
dec
xor
pop
mov
mov
cs
sbb
pop
jg
push
outsl
std
push
jbe
mov
es
mov
or
test
push
cmp
out
fists
mov
test
push
jo
roll
sub
push
lret
and
inc
cmp
inc
push
mov
shr
mov
add
testl
push
popf
sbb
cltd
sar
nop
out
sub
xchg
in
sbb
bound
hlt
sbb
dec
pop
add
xchg
orl
dec
dec
add
xchg
mov
daa
dec
cmp
shl
adc
insb
shlb
mov
or
bound
loopne
and
cmc
std
push
movsl
fs
enter
int
fsubs
pop
xchg
in
and
or
cmp
cmp
inc
mov
dec
adc
lods
jnp
cmp
imul
jne
lcall
loop
jp
scas
cltd
in
jb
push
pushf
xlat
mov
and
inc
pop
push
xchg
pusha
pop
mov
test
push
dec
push
mov
add
scas
stc
mov
sti
pcmpeqb
dec
jae
xor
inc
loopne
pop
fstps
das
sub
xchg
shrl
mov
mov
jnp
sti
aam
push
enter
sub
lods
filds
in
mov
in
mov
outsl
cmp
mov
inc
aad
xchg
or
jecxz
fsubrs
inc
mov
xlat
imul
add
stos
mov
sub
imul
sti
lcall
in
das
sub
jns
mov
scas
ljmp
pop
outsl
jmp
inc
xor
test
fs
and
mov
cmp
andl
lea
ljmp
int
fstps
fs
loope
mov
jle
leave
xor
sub
mov
ja
sbb
or
adc
insb
push
mov
pop
pop
jb
cmp
popa
mov
dec
mov
jle
or
mov
lds
xchg
iret
sahf
cltd
clc
or
rol
dec
mov
mov
mov
push
and
add
aam
jge
rorl
and
push
mov
stos
sub
js
xor
mov
repz
fisubs
rcrl
mov
stos
mov
push
sbb
aad
call
mov
xchg
dec
add
sbb
ret
dec
loop
cltd
enter
fnstcw
out
sarb
cmp
jb
adc
movsb
dec
into
sti
imul
sub
in
adcl
push
mov
stos
test
daa
pop
dec
fcmovnbe
mov
aam
das
xchg
inc
cmp
nop
int
pop
mov
es
push
decb
inc
cmc
fsubl
pop
push
cmpsb
out
adc
dec
outsl
std
xchg
std
insl
pop
test
sahf
pop
fcoml
adc
cmp
inc
inc
xor
imul
pop
mov
repnz
push
xchg
inc
xor
add
movsb
push
and
hlt
xchg
sti
in
lods
inc
pop
dec
pop
cmp
dec
lods
lods
fsub
ret
xchg
xor
or
mov
inc
adc
fdivrl
in
and
sub
jecxz
jl
ret
mov
add
cmp
and
xor
adc
lahf
repz
lahf
pop
arpl
cs
and
dec
ffree
movsb
or
sahf
lods
nop
hlt
nop
mov
roll
mov
mov
sub
dec
jp
out
push
test
fisubrl
bound
pop
push
cmp
das
fsubrl
cs
mov
mov
in
jg
and
push
cltd
popf
pushf
lret
fucom
dec
cltd
js
popa
xchg
es
sbb
gs
mov
or
rclb
and
jge
ja
scas
into
movsl
pusha
add
imul
mov
dec
into
ss
cmp
out
dec
daa
int3
inc
mov
dec
push
fadd
xor
sbb
push
je
ljmp
mov
ljmp
jp
out
or
out
xor
adc
inc
or
xchg
jae
cltd
add
out
add
mulb
mov
inc
add
icebp
movsb
ret
daa
push
leave
out
pop
and
sahf
insb
fcompl
jge
lret
sub
jle
cs
fs
inc
aas
sahf
out
ljmp
aad
xchg
jne
jbe
lahf
cmp
mov
loope
mov
lret
lret
jns
xor
arpl
data16
jae
rcr
sbb
les
pusha
loop
xchg
inc
lret
mov
jl
sub
push
je
movsl
inc
sub
stos
aad
lahf
cld
add
and
flds
mov
jle
pop
mov
or
loop
lods
push
sti
push
fisttpl
aaa
mov
xlat
add
xchg
fldenv
mov
xchg
int3
imul
rolb
lret
inc
adc
cmp
push
iret
test
jg
into
test
stc
inc
test
dec
pop
mov
out
out
sbb
imull
into
push
push
dec
or
or
xor
mov
pop
jo
sub
int
mov
jecxz
ljmp
dec
cs
cwtl
jge
adc
mov
push
inc
dec
xchg
cs
das
mov
adc
sbb
ret
jo
pop
dec
adc
jl
test
clc
mov
fiadds
clc
mov
rcl
cmp
mov
sbb
inc
or
stc
and
andb
sbb
mov
nop
jmp
cwtl
add
xchg
hlt
outsb
ret
xchg
cmp
fisttpl
test
xor
mov
mov
and
mov
mov
test
pop
pushf
cmp
jmp
aad
inc
and
aas
fsubrl
cmp
push
pop
or
aas
int
cmp
add
fisubrs
lea
aas
add
pop
mov
test
loope
dec
xor
fsubrs
sub
xchg
push
imul
adc
sbb
ret
xor
push
mov
daa
inc
mov
imul
inc
gs
push
test
je
orb
in
or
cmpsb
iret
cmp
loop
xchg
add
dec
sbb
cmp
mov
mov
push
testl
out
fwait
pop
and
fwait
adc
pop
bound
aad
divb
mov
mov
call
js
add
dec
out
popf
mov
movups
mov
scas
xchg
sbb
sbb
push
mov
push
dec
dec
ja
mov
movsb
pop
inc
mov
js
movsl
xchg
or
out
xchg
xorb
add
jecxz
sbb
movsb
imul
stos
pop
insb
gs
mov
cmp
sbb
loop
xlat
test
pop
cld
lods
or
xor
clc
mov
fisubs
sbb
sbb
xor
push
mov
sahf
stos
mov
sub
pop
sti
aas
jb
pop
mov
lret
cmp
xchg
int3
dec
insb
mov
push
nop
ja
jge
loope
adc
repz
lcall
dec
imul
xor
mov
cmpsl
sarl
roll
pop
cmp
mov
dec
lods
int3
mov
in
dec
sub
xchg
cmp
cmp
jo
gs
movsb
in
or
or
out
xor
jge
jle
insl
jae
ss
and
lods
lret
adc
add
xchg
or
fsubrs
mov
enter
sub
dec
pop
pop
push
insb
push
movsl
mov
pop
pop
mov
imul
push
push
sti
test
jl
mov
mov
and
push
lods
mov
add
push
add
xor
cmp
test
out
cmp
xchg
pushl
inc
ret
mov
nop
push
movsl
and
stc
sbb
sahf
cmp
outsb
shlb
ss
or
dec
cmp
and
orl
repnz
lock
sti
mov
out
scas
sub
lcall
pop
sahf
repnz
shll
or
sub
lahf
push
mov
call
bound
mov
popf
insl
mov
mov
icebp
shll
mov
mov
or
in
cmpb
inc
subb
mov
das
sahf
ficompl
or
xchg
stc
pop
cmp
mov
add
pop
and
jo,pn
fiadds
pushf
add
test
test
sbb
jl
pop
push
and
mov
pop
js
pop
ljmp
repz
ss
int
push
pusha
and
cmp
jnp
push
jg
cmp
lods
and
and
jnp
enter
mov
icebp
outsl
mov
pop
fimull
shlb
dec
fwait
mov
inc
orl
jecxz
dec
outsl
in
mov
out
lea
lahf
xor
fldcw
int3
lea
or
and
cwtl
jne
mov
nop
sub
cmp
push
es
lcall
ss
cli
jl
jne
mov
adc
sub
jno
jg,pn
sbbl
leave
inc
inc
in
loop
or
or
das
sub
mov
mov
push
xchg
or
movsl
cmpl
add
adc
lock
gs
push
dec
pop
lret
push
cmpsl
sbb
or
imul
loop
jno
repz
jmp
pop
xor
push
pop
cld
sub
inc
cmp
addr16
shll
out
sti
loop
std
inc
cld
loop
dec
ja
mov
stos
lock
or
mov
add
loop
xor
pop
or
push
lods
push
cld
nop
dec
cmp
lea
sub
jp
sub
or
mov
add
xchg
subl
ret
or
lds
inc
jne
cmp
xchg
pop
lea
jns
mov
aam
mov
pop
sub
faddl
orb
sbb
dec
pop
cmpsl
cltd
gs
mov
mov
aas
xor
incb
orb
push
adc
xchg
adc
popa
sub
inc
es
mov
std
push
xor
xchg
roll
dec
shrb
jle
add
dec
bound
movsb
leave
enter
jg
testl
fcmovu
movsb
dec
jo
out
sub
inc
stc
and
xor
cmp
inc
xchg
lret
xchg
or
mov
jbe
in
in
iret
jbe
orl
and
push
adc
and
cli
jg
call
lods
cli
xchg
cmp
pop
out
cmp
xchg
mov
enter
rcr
repz
pop
addr16
lret
add
shll
push
mov
jl
or
sub
add
subb
test
jno
dec
movsb
dec
mov
daa
iret
inc
negb
mov
and
push
ljmp
cmp
jge
fsubrs
jae
fdivrl
stos
jb
dec
sbb
pop
jle
push
test
mov
and
pop
dec
pop
stos
pop
add
lods
ret
jns
cmp
mov
pusha
jae
loop
mov
cmpsl
and
and
in
mov
sub
jp
inc
inc
sub
aad
inc
pop
es
cmc
mov
sub
cmc
fiaddl
dec
lret
mov
xlat
sarl
popf
mov
fs
fcomp
les
mov
cmp
cmp
inc
or
add
adc
or
sub
out
push
lods
sub
mov
and
mov
xchg
sbb
into
bound
cmpsl
or
push
paddw
add
push
js
mov
pop
es
cmp
cmp
mov
jge
jp
loope
movsl
cmpsl
jns
out
ja
test
inc
stos
add
mov
test
fnstsw
imul
es
xchg
push
lahf
dec
cmp
and
mov
mov
sbb
add
mov
jg
mov
pop
mov
in
cmp
jbe
jmp
pop
orl
mov
rolb
or
dec
adc
adc
xor
cwtl
fisubl
add
aas
das
sub
cmc
fdiv
mov
scas
int3
cmpsb
test
or
or
or
and
insl
push
mov
inc
mov
rolb
inc
or
out
push
fildll
movsl
pop
lds
and
sub
out
and
xchg
fwait
sbb
daa
inc
les
inc
addr16
aas
je
nop
mov
cmp
imul
jg
test
xor
nop
pop
in
inc
in
add
and
push
inc
sbb
pop
cmp
mov
mov
out
in
adc
and
addr16
push
repnz
add
mov
add
std
lea
shll
fbld
xchg
or
add
orb
push
ret
ljmp
stos
mov
mov
loopne
mov
sub
nop
int3
shlb
pop
xor
imul
pop
lods
jmp
sbb
and
or
sbb
mov
mov
cmpsb
mov
ret
inc
ret
iret
dec
add
loope
cltd
or
pop
js
and
sbb
stos
sub
xlat
fidivrs
imul
aad
add
jbe
fmuls
es
xchg
shlb
aad
emms
movsb
mov
jg
mov
int
mov
imul
jp,pn
dec
test
cmp
movsl
arpl
add
and
mov
sbbb
or
mov
cmpsl
pop
dec
insb
xchg
dec
push
mov
add
cwtl
in
test
ss
cmp
xchg
jno
sub
xor
mov
dec
mov
add
add
jmp
arpl
adc
popf
push
pop
fsubs
add
cltd
mov
jg
ret
or
mov
or
mov
pop
andb
cld
pop
ss
xchg
and
inc
bound
sarl
push
and
or
andb
pop
hlt
push
cmp
and
idivb
jae
jg
xchg
mov
pop
cli
data16
xor
pop
xor
inc
mov
pop
fwait
jg
loopne
sub
popf
xchg
imul
sub
sti
lods
rcl
or
ficoms
daa
and
xchg
push
sti
dec
pop
mov
stos
jns
jne
jecxz
push
mov
gs
mov
ucomiss
fs
push
sbb
jecxz
inc
je
scas
test
les
pop
sbb
xchg
popf
js
adc
sub
fcompl
cmpsl
add
and
sbb
fcoml
ret
sub
xor
jbe
jno
pop
nop
shrb
or
jl
popf
in
push
add
adc
loop
insb
and
jno
adc
imul
rcl
jns
add
ror
mov
out
mov
mov
fildl
lret
cmp
std
sti
push
fcomp
cmp
shll
mov
pop
fisttpl
call
int3
inc
dec
shrb
xchg
sbb
enter
popf
out
repnz
inc
push
cmp
test
push
jle
mov
pop
test
adc
scas
xor
pop
into
int3
fmull
fcoml
or
jno
and
ljmp
addb
loop
sbb
xor
jne
scas
sarl
dec
xchg
add
or
xor
dec
loope
mov
push
dec
adc
push
and
adc
test
lret
dec
sbb
insl
or
clc
xchg
cmpsl
sub
mov
int
pop
and
js
fdivrs
adc
jmp
adc
shll
mov
xlat
push
pop
xchg
aaa
daa
jne
fmul
xchg
in
inc
xchg
scas
mov
std
push
fimull
out
mov
popa
sub
mov
push
fs
ljmp
and
das
and
test
cli
outsb
xor
sub
out
cmpsl
pop
outsb
ret
shr
fwait
rorl
jnp
aaa
les
js
fwait
imul
jns
jnp
and
add
addr16
sti
xchg
and
andl
mov
pusha
jg
in
jns
jle
lods
in
sub
ret
ja
jo
shrb
cwtl
push
dec
add
cmp
lock
sbb
test
cmp
xor
jl
inc
push
mov
add
mov
mov
lcall
xor
jp
mov
jl
inc
imul
cld
pushf
add
push
mov
xor
xorb
inc
iret
arpl
movsb
loopne
jmp
scas
or
xor
nop
mov
or
outsl
push
rcr
stos
imul
inc
sbb
aas
imul
or
enter
rclb
pushf
inc
lret
sbb
fstl
aad
sbb
jbe
and
ss
jl
leave
push
ficoml
pop
and
xchg
or
lea
dec
mov
cmovns
inc
rol
xor
les
mov
stc
mov
push
pusha
mov
inc
sub
push
nop
and
mov
sbb
sbb
call
je
addl
xchg
imul
dec
mov
out
push
adc
sbb
sti
dec
sbb
out
or
add
dec
jb
shll
cmpb
dec
adc
scas
loopne
repnz
mov
push
mov
adc
dec
jl
and
or
inc
jnp
ds
inc
in
sub
push
adc
or
iret
out
add
cmp
popa
pop
das
adc
mov
mov
lods
or
adc
repnz
push
mov
cmp
cmp
stos
push
mov
mov
jmp
mov
orb
sbb
sahf
cmc
or
addr16
fistl
mov
mov
decl
lret
call
lret
mov
or
ds
mov
bound
loopne
leave
mov
stc
pusha
push
lret
leave
adc
inc
std
fwait
gs
mov
outsl
jne
mov
andb
in
push
inc
movsbl
jo
adc
inc
jecxz
es
add
mov
sub
lds
adc
cltd
insb
fidivl
inc
ffree
xchg
mov
mov
inc
in
into
into
mov
cli
dec
sbb
inc
add
cmp
outsl
into
jl
loope
push
jns
jmp
insb
lcall
push
movsl
xchg
cmp
iret
jecxz
popf
sbb
int
pop
ja
sub
push
fstl
pop
fdivl
out
cmp
fsubs
add
lret
ja
push
mov
jae
cmp
lea
dec
repnz
stos
cmp
xor
push
iret
jecxz
sub
cld
or
and
mov
cmp
sahf
jo
inc
push
test
mov
in
jnp
aad
mov
xchg
push
pop
sbbb
dec
out
repz
add
out
pop
out
mov
pop
mov
icebp
rep
pop
jae
inc
fistl
nop
xor
push
mov
out
push
add
jbe
stos
aad
sbb
loopne
and
sbb
mov
push
pop
in
pop
push
sub
adc
test
test
insb
std
test
fcomps
loope
outsl
sub
popa
ljmp
out
mov
fidivl
les
push
push
lock
fwait
lcall
mov
and
iret
inc
rolb
mov
pop
call
xchg
fisttpl
xchg
in
decl
test
pop
inc
cld
lea
cmp
add
inc
stc
cmc
add
xor
rcrb
xchg
lods
mov
lahf
mov
out
lret
jnp
fwait
cmp
jo
ret
out
gs
mov
nop
js
dec
adcb
mov
add
adc
lods
inc
popa
or
pop
adc
pop
cld
mov
ficompl
xchg
or
scas
xchg
mov
outsb
dec
pop
je
xchg
pop
test
leave
rorb
add
pusha
and
dec
inc
pop
xchg
loopne
dec
mov
push
mov
mov
imul
enter
sub
mov
sub
pop
ficoml
mov
cmp
es
enter
fists
jp
xchg
and
and
adc
fwait
xor
xchg
cmpsl
hlt
ljmp
lcall
mov
int3
adc
frstor
stos
cwtl
fs
popa
sbb
clc
adc
cld
and
rcll
ds
dec
jl
enter
xor
inc
sub
movsb
ja
ret
add
or
mov
imul
xor
mov
cs
fucomi
enter
sbb
adc
loope
jl
sub
pop
push
push
leave
lret
pop
pusha
jp
jne
insb
call
xchg
test
pop
xor
jbe
sti
push
test
inc
mov
add
fisubs
insl
dec
les
sub
and
lods
repnz
lret
add
lods
jno
pushf
repz
loopne
je
in
mov
and
cmp
sub
mov
mov
jg
or
mov
in
mov
cmp
enter
loopne
movsl
adc
push
add
add
jecxz
stos
mov
adc
popa
cmpl
push
lods
inc
mov
shrl
push
into
or
xor
mov
xor
into
and
push
pop
inc
or
adc
ret
mov
xchg
sahf
jge
cmpsl
and
adc
cmp
scas
std
flds
xor
sub
fistpl
push
ret
pushf
iret
add
dec
popa
jl
and
pop
pop
xchg
lret
into
imul
dec
cli
sti
pop
mov
inc
xchg
mov
cmp
ss
cld
nop
xchg
mov
rcr
aam
insb
arpl
sbb
mov
jnp
outsl
mov
rorl
pop
aas
mov
cmp
cmpsl
jae
fs
stc
leave
mov
sub
xchg
aas
pop
add
cmp
xchg
fdivrl
push
add
adc
fimuls
jb
fisubs
pop
mov
adc
mov
aam
inc
pop
lret
jle
aam
fsub
pop
dec
pop
sbb
hlt
pop
sbb
adc
and
mov
mov
mov
cli
pushf
out
inc
mov
adcb
mov
icebp
nop
into
cwtl
testb
and
push
mov
in
fs
or
push
pushf
cld
cltd
or
shll
pop
sbb
movsl
add
inc
cmp
fsubr
dec
ljmp
inc
mov
sub
ret
out
inc
xor
mov
or
dec
jecxz
xor
dec
push
ret
push
add
lret
test
jecxz
or
lds
ret
push
pop
frstor
xchg
sub
pop
rep
push
sbb
aam
fmul
ss
cmp
cmpsb
mov
add
test
push
in
dec
lret
mov
xor
aam
mov
stc
xchg
dec
add
mov
mov
push
adc
push
rorb
push
pop
lods
push
stc
insb
jnp
ret
mov
arpl
mov
cmp
adc
notl
test
sbb
pop
pop
jb
sbb
in
dec
lock
mov
jmp
ficompl
jge
sarl
dec
out
pop
pop
bound
add
lea
cmp
mov
call
or
pop
addr16
sub
jp
rclb
dec
subb
dec
xchg
mov
push
xchg
or
mov
mov
clc
pop
inc
mov
xor
pop
push
xor
inc
add
sarb
pop
pop
pop
int3
into
test
test
pop
shlb
push
jle
mov
loopne
pusha
mov
imul
mov
movb
xor
jne
hlt
push
sahf
lds
aas
jmp
ja
mov
inc
xchg
or
pusha
mov
inc
mov
and
dec
fisubl
in
xchg
jbe
mov
cmpsl
dec
fcmovu
or
mov
mov
adc
jge
out
testb
cmp
lods
imul
push
nop
mov
or
mov
std
subl
out
in
faddl
scas
in
call
sbbl
xchg
pop
sub
and
mov
add
lea
mov
pop
fdivrp
es
mov
mov
dec
arpl
sbb
movsb
sub
aas
mov
pop
test
shll
out
imul
mov
mov
in
jnp
xchg
pop
mov
jae
fsts
jecxz
cmp
cmp
ret
mov
sbb
daa
or
inc
inc
jb
sarb
stos
pushf
or
fcoml
dec
lock
dec
xorb
jg
fsubrl
and
push
pop
push
sbb
sub
inc
push
das
fdivr
call
sahf
pop
cld
inc
fcompl
fidivl
add
cli
jbe
xchg
push
pop
lret
cmp
mov
pusha
push
push
and
sub
jo
pmaxsw
lret
faddl
add
add
std
mov
stos
sbb
mov
mov
andl
jecxz
sarl
ss
push
add
sub
loope
mov
mov
andl
sbb
into
shrb
ret
aaa
lods
lock
xor
mov
cmp
les
daa
mov
mov
xchg
jl
pop
adc
pop
pop
sahf
or
lret
mov
jo
xor
std
push
add
push
es
sti
sub
xor
sbb
fwait
scas
mov
bnd
mov
shrb
adcb
out
lods
xchg
sub
xchg
pushf
mov
mov
dec
out
mov
cmpsl
pop
inc
pop
dec
xor
jae
es
iret
or
adc
fists
dec
out
sub
inc
xor
jge
pop
push
lret
ljmp
movb
pop
sahf
or
pop
shrl
and
sti
dec
shlb
cmp
orl
cmp
jle
jp
push
ds
and
int3
pop
movsl
and
ja
mov
push
push
mov
xchg
mov
in
xchg
sub
adc
je
sahf
aad
push
loop
xchg
ret
lcall
in
sub
in
idivl
in
mov
sub
popf
or
push
or
mov
mov
mov
cmp
mov
push
sbb
sbb
inc
out
fcmovbe
cltd
adc
jecxz
push
cmp
sti
and
dec
cmp
mul
inc
mov
stos
mov
add
loope
adc
fisttpll
fmulp
mov
xor
shll
xor
arpl
shlb
cmp
hlt
jae
in
jo
jnp
sub
divb
jle
sub
fimull
add
xchg
sub
inc
stos
inc
ljmp
dec
or
int3
dec
cmp
imul
punpckhbw
out
imul
sti
inc
rcll
jno
ja
push
js
stc
rorl
int
mov
inc
ljmp
nop
cmp
push
pop
jl
mov
inc
fstl
fwait
rcr
xor
cmpsb
push
mov
dec
mov
roll
pusha
test
andl
lahf
xor
pop
cmpb
sub
rcl
dec
lret
gs
sub
cmc
push
ljmp
imul
xchg
jbe
out
shl
mov
pop
adc
cmc
fnsave
scas
inc
hlt
int3
andl
shrl
js
fcoml
pop
mov
dec
movsl
jl
mov
sbb
push
fincstp
push
call
int3
lret
adc
arpl
in
push
jbe
sahf
pop
pushf
fs
pop
mov
push
fwait
insl
cli
jb
mov
and
imul
inc
dec
and
pop
add
shlb
pop
xchg
mov
imul
push
loopne
xor
push
lcall
out
and
jb
xchg
mov
adc
xor
lret
or
push
outsb
lods
xor
mov
lods
enter
dec
pop
dec
jae
pop
fs
and
inc
and
jne
insl
aad
imul
movsb
xchg
nop
scas
push
test
sbb
aas
mov
add
jg
out
fidivrs
mov
cwtl
loopne
xchg
fucomi
adc
xchg
mov
ds
jo
mov
cwtl
inc
add
xor
adc
mov
pop
push
loop
jnp
lods
push
jmp
decb
enter
xchg
rorl
sub
aad
jns
xchg
shlb
mov
push
or
cld
ret
add
inc
das
dec
and
inc
xor
frstor
xor
xor
push
xor
mov
mov
push
xor
add
xchg
jo
sub
dec
dec
arpl
lds
add
das
loop
and
sub
cmpsl
in
imul
out
sub
stos
pop
jecxz
mov
mov
cwtl
or
xor
std
jnp
dec
adc
and
cmpsb
inc
hlt
mov
fxch
dec
dec
jmp
rol
xor
xchg
xor
inc
dec
adc
xchg
jg
clc
fsts
mov
stc
mov
pop
mov
jns
mov
fsts
aaa
insb
jg
icebp
adc
or
mov
sub
and
xor
sbb
mov
push
inc
pop
sahf
dec
movsb
pop
push
inc
pushf
fdivl
inc
cwtl
inc
adc
cltd
mov
cmp
jae
push
xlat
and
mov
dec
push
cmp
dec
and
cmp
xchg
inc
xlat
orl
cmp
sahf
mov
imul
dec
adc
mov
xchg
push
int
leave
xchg
xor
fcmove
adc
imul
js
or
call
scas
int3
les
ds
xchg
xor
int3
mov
sti
xchg
fstpl
dec
insb
ss
inc
sub
or
stc
pop
test
sub
je
cwtl
cwtl
jnp
mov
push
scas
call
jne
or
adc
xor
push
add
adc
sub
push
mov
lds
inc
rclb
xorl
add
leave
or
jge
iret
xchg
out
mul
das
mov
out
cmp
cwtl
jl
add
add
adc
je
mov
mov
scas
cmp
nop
pushf
jecxz
addr16
adc
cmpsb
xchg
and
scas
mov
shlb
das
pop
mov
push
nop
cli
loop
inc
cmp
xor
xchg
arpl
mov
popa
mov
or
mov
lock
cli
mov
clts
orb
mov
nop
jle
jmp
mov
xor
dec
push
pop
cmpsb
jno
iret
jo
sbb
lods
fnstcw
mov
pop
dec
pop
or
jnp
jnp
jo
stos
push
int3
pushl
jno
mov
clc
add
movsb
imul
sbbb
push
clc
cmp
push
loop
inc
mov
and
add
ss
ss
inc
inc
mov
es
sahf
cltd
les
daa
or
lahf
xlat
mov
push
dec
and
insl
sub
nop
push
pusha
xor
push
add
jae
je
in
pop
jp
stos
outsb
outsl
jle
std
jle
popa
pop
mov
imul
clc
aaa
fst
cwtl
or
orl
loop
mov
pushf
sahf
fs
stc
pop
ljmp
movsl
xor
adc
and
ja
ja
test
cmp
stos
add
mov
sub
in
xchg
jns
mov
sbb
mov
inc
test
and
sti
sbb
insb
mov
jecxz
pop
mov
add
pop
in
mov
out
mov
std
mov
mov
cli
in
inc
push
leave
jno
push
popl
sahf
nop
xchg
stc
mov
int3
mulb
add
mov
mov
add
movsl
scas
outsb
shlb
xchg
daa
and
mov
push
insl
loop
cmp
enter
and
xchg
jp
cwtl
push
mov
aas
sbb
movsl
jns
jno
adc
mov
sarl
adc
roll
sbbl
mov
aam
inc
mov
dec
fucomp
pop
adc
mov
lret
addl
lcall
testl
fdivl
aas
or
add
fists
mov
cmpsl
clc
inc
xor
stos
jb
sar
and
mov
test
out
inc
iret
loop
push
in
sarb
sub
dec
jo
loope
xor
fs
inc
push
pop
or
cld
xchg
adc
repz
pop
js
lret
cmp
inc
popf
dec
sbb
call
fs
or
insl
push
ljmp
dec
cmp
cmp
pop
in
inc
or
inc
or
popf
push
pop
pop
call
scas
jno
movsl
xor
adc
sub
in
sub
je
pop
xchg
and
arpl
inc
cwtl
jg
pushf
test
hlt
pop
inc
mov
push
test
xor
js
std
out
insl
mov
sbb
jmp
rcll
push
stc
hlt
inc
les
les
mov
stos
ret
adc
js
jmp
test
stos
sbb
shll
cmpsb
push
cmpsl
iret
jo
fcoms
pop
fdivl
fildll
aaa
mov
mov
dec
sbb
ss
jae
inc
jae
jnp
hlt
sub
sbb
mov
cmp
rcr
sub
adc
push
pop
cmp
loop
in
xchg
mov
cltd
mov
nop
and
mov
mov
pusha
mov
fisubrs
or
mov
xchg
xor
adc
pop
and
push
xor
dec
leave
les
lods
or
test
xchg
icebp
shr
lods
stos
inc
movsb
arpl
insl
int
add
fwait
imul
inc
cmc
out
xchg
or
xchg
das
push
data16
dec
jae
cld
gs
rcl
mov
mov
xchg
pusha
or
xchg
adc
cld
inc
lret
mov
dec
out
es
push
pop
hlt
mulb
pop
cmp
inc
mov
sbb
ja
scas
and
fdivs
adc
and
and
jmp
xchg
jp
pop
loop
stc
mov
sbb
popf
cltd
cmp
push
fldcw
out
xchg
pop
sub
and
cmp
jae
add
in
pop
cmp
movsl
arpl
adc
mov
test
repnz
mov
icebp
std
test
push
out
inc
or
pop
push
mov
sar
mov
in
popa
repnz
rclb
inc
ret
mov
push
out
mov
pop
mov
int3
cmp
mov
cmpsl
fs
xchg
cltd
cltd
sub
sti
clc
sbb
jne
movsb
cltd
lahf
mov
adcl
mov
in
push
pop
cmc
fstpl
aam
sub
adc
xor
shll
negb
push
popf
negb
scas
movswl
shll
cmc
xor
adcb
fiadds
std
movsb
add
inc
pop
jnp
hlt
and
jnp
sbb
xchg
ret
or
xchg
push
push
lret
hlt
mov
test
push
les
repz
loope
xchg
sbb
add
and
push
aad
add
cmp
cmpsl
sub
lret
aaa
cld
in
add
enter
inc
pop
bound
fistl
mov
imul
arpl
std
mov
xor
test
inc
sub
add
cmpsl
pushf
cmc
loopne
lock
cwtl
mov
dec
rolb
andb
or
jnp
rol
sub
mov
stos
rorl
mov
ss
lods
mov
les
and
jl
sbb
sti
mov
and
cmp
pop
ret
pop
sbb
popa
dec
or
lea
mov
cmp
sbb
or
xchg
adc
pushf
in
outsl
mov
push
jno
mov
mov
inc
into
push
sar
outsl
loopne
and
insb
and
add
add
das
movl
inc
lret
cmpsl
inc
jb
and
adc
or
addr16
xchg
sub
mov
idivl
call
andb
inc
scas
aas
sbb
ja
mov
test
mov
jb
aas
das
cmp
pop
call
sbb
andl
cwtl
ffree
sbb
mov
cltd
insb
push
or
sbb
std
idivl
mov
jmp
jne
xor
icebp
xchg
scas
shrl
cmp
jle
mov
push
sub
sbb
out
lods
adcb
or
in
cmovl
es
loop
inc
xchg
mov
daa
mov
mov
pop
loopne
jbe
fdivl
add
test
fldt
lret
jp
lods
rorl
bound
add
loope
sub
enter
mov
mov
pop
test
rcrl
pushf
cmp
add
inc
cmp
ret
cmp
dec
imul
popa
pop
jae
shr
sub
add
xlat
lods
fsubs
pop
inc
inc
das
mov
xchg
loopne
jge
fldt
cltd
or
aas
xchg
jno
rcll
es
fdivs
adc
add
mov
push
addr16
in
pop
mov
lock
cmp
lahf
push
mov
mov
lret
and
out
mov
pop
mul
pop
js
add
mov
pop
lret
cs
sub
ss
cmp
cmp
loopne
stc
xchg
outsb
add
xchg
movsl
mov
cltd
rorb
pop
mov
add
inc
addl
mov
cld
add
leave
inc
mov
cld
fcoml
mov
loop
xchg
mov
jne
dec
adc
add
mov
cmp
or
mov
imul
je
push
ror
mov
js
cmp
imul
xchg
pop
lods
fimull
xor
out
dec
jmp
xchg
int3
sbb
push
xchg
ljmp
lods
push
dec
xor
cmp
pop
mov
or
sbb
fstps
arpl
loope
outsb
xor
rcrl
mov
shrl
stos
mov
in
push
lods
mov
into
mov
cmp
stos
ret
xchg
jns
sub
and
lods
test
out
pop
inc
sti
cmp
les
adc
mov
lahf
xor
mov
xchg
aam
pop
repz
push
cld
inc
mov
loope
push
imul
mov
sahf
mov
push
pop
test
jg
add
shlb
pop
sbb
iret
mov
fldt
shll
gs
inc
xor
dec
or
es
or
mov
int3
ja
dec
cmp
add
lods
jle
add
cmpsb
fcomip
ret
or
jg
vpshufhw
xor
mov
jo
and
jge
icebp
and
push
or
faddl
cltd
mov
adc
sbb
imul
jbe
int
rep
loope
xchg
xchg
std
mov
mov
ror
push
imul
loope
or
frstor
dec
xor
in
xor
mov
leave
dec
fisttpll
xchg
or
std
insl
pushl
and
xor
dec
clc
push
js
sub
mov
push
frstor
mov
iret
cmp
lods
mul
mov
mov
in
or
int3
xchg
jno
int3
lcall
jb
cld
pop
sub
and
dec
inc
xchg
push
popl
movsb
or
add
adc
adcl
push
movsl
gs
les
mov
mov
jne
sti
add
das
xchg
cmp
or
inc
std
std
js
cli
fs
es
pop
lods
test
pusha
in
lds
xchg
cmp
mov
mov
or
jmp
das
out
mov
test
in
push
pop
divb
lds
mov
mov
jmp
xchg
leave
outsb
call
dec
jb
or
test
std
push
int3
cmp
jmp
cmpsl
mov
imul
add
repnz
jecxz
cli
lret
pushf
xchg
lahf
repz
sub
and
mov
mov
pop
call
sbb
aaa
sub
lods
mov
xor
push
add
adc
inc
lea
push
sub
sbb
pop
xchg
outsl
es
pushf
xchg
mov
dec
push
call
or
push
and
and
jmp
shl
sub
mov
rol
int3
test
cmpsb
mov
mov
les
push
dec
or
mov
sub
mov
xor
adc
ficoml
test
lds
in
mov
lret
lea
pusha
cmp
and
xor
int
adc
sbb
sub
dec
in
xchg
dec
les
sub
ljmp
insb
adc
and
add
js
dec
pop
pop
mov
jl
xchg
push
and
cwtl
hlt
ret
sub
fs
fisubrl
cmc
mov
scas
jb
idiv
mov
jecxz
lock
inc
fisttpll
test
sub
scas
popf
and
mov
add
mov
cmp
jg
add
iret
sbb
gs
lcall
iret
mov
pop
pop
and
icebp
in
icebp
lahf
add
cmpsb
jmp
cmpl
bound
adc
in
mov
fildll
in
jae
stos
jp
inc
dec
aam
iret
rcrb
cmp
ljmp
out
leave
inc
cmpsb
in
mov
jb
mov
ja
scas
push
jg
in
inc
popa
test
addr16
push
adc
mov
inc
pop
jns
xchg
lahf
mov
pusha
adc
pop
dec
ret
or
fsubs
xor
or
mov
test
sbb
pop
sti
mov
jle
lret
sub
call
pop
push
fsubrl
sti
imul
fst
xchg
aaa
rorl
leave
nop
dec
popf
sub
es
rolb
inc
pop
cmp
lods
cmpsl
mov
dec
push
push
add
je
pop
adc
adcl
jmp
fucomp
jge
inc
ret
jg
cld
frstor
leave
push
jg
jno
and
cmp
call
xchg
jge
mov
mov
jno
jno
les
or
stc
out
cmpsl
in
outsl
push
dec
dec
and
and
dec
pop
mov
cmp
add
in
dec
cld
push
sarb
adc
insb
cmp
cwtl
jle
mov
xor
mov
js
in
push
mov
jns
cmp
jo
loopne
jne
xchg
sub
cmc
decb
in
mov
jg
inc
or
adc
sahf
jecxz
xchg
enter
push
add
jmp
mov
shl
xchg
pop
aas
int3
fists
jl
movsl
imul
xor
dec
fidivrs
imul
xlat
sub
dec
in
aad
imul
adc
or
pop
cltd
xchg
pop
daa
xor
imul
pop
mov
and
dec
aaa
ret
stos
dec
adc
ret
mov
mov
stc
aas
cmc
push
push
imul
cwtl
add
scas
xor
loopne
cld
lahf
pop
fidivs
aas
and
xor
fnsave
cli
push
cmp
das
imul
aam
test
imul
movsl
mov
cmp
and
les
iret
mov
ja
cmp
mov
fwait
adcb
push
subl
jge
xchg
movsl
pop
push
mov
sbb
nop
insb
leave
cmc
cmp
pop
add
push
stos
adc
addl
std
cmp
mov
mov
xor
sub
jnp
jns
sub
push
je
enter
stos
xchg
xchg
push
ret
jo
jg
pop
and
jle
lods
or
aas
mov
jbe
imul
lahf
dec
ret
daa
lea
xor
dec
cwtl
push
es
mov
in
add
xchg
ss
loopne
popf
or
cmp
int
psrad
fst
pop
fidivrl
or
cld
insb
xchg
and
rcr
adc
mov
sbb
pop
scas
mov
popa
or
xchg
mov
fldt
insb
push
je
mov
pop
cmp
xor
sub
notb
ss
adc
mov
or
push
jp
ss
jl
sbb
or
out
lea
jg
bound
mov
aam
fwait
shl
cwtl
icebp
jb
mov
adc
in
and
pop
jno
sbb
push
cwtl
cld
push
xchg
pop
scas
ficoms
outsb
fistpl
xor
outsl
aad
test
into
pushf
jbe
in
add
out
faddp
fisubl
adc
adc
sub
and
xor
sub
gs
stos
popf
mov
ja
out
fs
loopne
add
ret
scas
xlat
sub
out
xor
or
and
mov
xchg
cli
sbb
xchg
fistpl
and
mov
add
mov
pop
ja
jo
mov
cld
lds
test
push
jp
inc
gs
lret
cmpsb
xchg
jecxz
mov
push
into
test
rolb
ror
jne
js
movsl
mov
adc
mov
out
into
stc
xor
jno
imul
xchg
popf
cmpl
mov
fwait
or
popa
mov
gs
repnz
test
sbbl
pop
mov
test
jns
jl
lret
dec
icebp
ret
sub
jmp
int3
push
add
or
adc
xchg
popa
jmp
shl
inc
cmp
aam
clc
lds
cmp
lods
jmp
iret
cltd
mov
test
adc
pop
ret
clc
repnz
xorl
adc
mov
inc
cmc
push
xchg
rcl
ret
pop
and
lea
mov
jmp
pop
and
adc
into
or
and
xchg
dec
push
mov
fisttpll
decl
jl
add
imul
fs
jo
nop
lods
xlat
jge
lds
add
push
lds
push
fmuls
xor
and
bound
fiadds
push
fbld
mov
inc
in
sbb
roll
ljmp
mov
popf
test
loopne
test
sbbb
test
adc
cli
int3
mov
ja
cmpsb
and
push
fistpl
pop
cmc
rclb
ljmp
fsubrl
cmp
mov
daa
rcrb
push
sub
or
adc
cmpsb
sub
sahf
dec
mov
xor
loop
and
xor
sahf
add
xchg
xchg
jbe
sub
scas
push
leave
push
sti
xor
imul
pop
mov
mov
dec
fisubs
jecxz
aas
or
int
idivb
leave
lret
inc
jg
and
push
mov
add
xchg
add
add
adc
loope
add
pop
inc
pop
aad
mov
lods
hlt
dec
xlat
test
std
lahf
stos
adc
int
mov
loop
push
xchg
int3
dec
pop
jge
jg
mov
fidivrs
pop
jnp
xchg
jecxz
aas
mov
repz
es
pop
cwtl
pop
mov
repz
sub
inc
rcl
into
push
imul
mov
lret
mov
push
fcmovb
mov
mov
call
sub
push
std
sub
ss
out
arpl
pop
rorl
xlat
shlb
pop
mov
add
enter
lods
mov
popf
fs
dec
add
xor
test
pop
mov
pop
pop
mov
mov
push
dec
in
clc
lret
add
mov
clc
test
mov
imul
decl
outsb
jb
or
mov
test
mov
add
lods
adc
gs
push
xchg
inc
jbe
sub
add
rclb
jno
xor
mov
xor
daa
stos
cmp
xchg
stos
add
loopne
sbb
pop
call
dec
jp
shr
pop
push
xor
lods
and
push
cwtl
fbld
pop
xor
movsl
push
aad
adc
jle
fs
cmpsb
scas
xor
cmp
sbb
daa
jle
cld
push
cmp
sub
iret
xor
jge
inc
andb
cmp
mov
jmp
dec
sub
mov
jl
mov
fwait
dec
add
xchg
mov
sbb
mov
pop
dec
mov
int
cli
fwait
test
lock
or
nop
push
in
rcll
xchg
das
and
jb
cmc
inc
mov
sahf
inc
mov
adc
push
xchg
stos
xchg
sub
loope
mov
jae
push
fdiv
inc
push
mov
and
xchg
aam
or
lods
cltd
sbb
enter
js
push
repz
cli
cmp
mov
mov
dec
pop
xlat
or
adc
xchg
mov
orl
insl
mov
pop
mov
fildll
jns
xchg
jecxz
loop
jl
dec
add
stos
ja
clc
or
lret
mov
das
data16
mov
sub
pop
jg
adc
mov
in
stos
mov
stc
xchg
imul
scas
rcrl
adc
mov
loopne
rol
aad
pop
pop
test
int
mov
xchg
and
and
xor
aas
sahf
fdivrp
test
xchg
adc
sar
out
fisttpll
mov
push
xchg
inc
sub
call
adc
sbb
and
push
fists
divb
lahf
mov
or
mov
fs
int3
jo
and
aaa
xchg
mov
loop
mov
jmp
imul
dec
movsl
mov
mov
sbb
orl
inc
mov
dec
mov
sub
dec
sub
cld
sub
adc
pop
outsl
jle
add
xlat
gs
mov
push
nop
push
das
push
lahf
std
fs
test
dec
or
mov
arpl
or
fs
hlt
inc
push
fildll
mov
repz
xchg
and
xor
cmp
xchg
mov
inc
outsl
sbb
subb
xor
or
push
jnp
mov
sub
inc
push
and
leave
lea
aaa
ss
dec
inc
cmp
jmp
push
mov
call
push
adc
stos
sub
dec
cli
dec
sbb
lret
lret
sub
int3
cmp
jecxz
call
mov
or
jbe
pop
mov
add
and
ss
cmp
adc
adc
push
icebp
xor
and
mov
dec
dec
mov
call
test
jle
subb
adc
inc
pop
pop
lret
enter
test
dec
pop
jns
dec
xchg
das
or
int
pop
adcb
enter
enter
cs
and
jecxz
push
sbb
inc
push
ja
leave
mov
lods
push
mov
pop
mov
iret
cmp
add
insb
dec
xor
add
inc
stc
add
or
or
faddl
int3
cmp
push
and
xchg
pop
insb
lcall
mov
add
test
das
adc
stos
mov
scas
xchg
loope
sbb
dec
popa
xor
xchg
adc
add
push
push
fcomip
xor
jge
movsl
dec
mov
fs
jg
xchg
jmp
lret
data16
fmuls
mov
dec
fiaddl
jns
clc
mov
fistl
mov
inc
jnp
mov
popa
sbb
fs
lds
inc
mov
pop
adcl
mov
mov
call
shll
cs
and
in
insb
sub
lret
fsubrs
adc
mov
mov
stc
and
mov
jno
jl
fistpll
fdiv
xor
sahf
subw
and
push
lock
dec
xchg
out
mov
pop
mov
inc
dec
bound
sbb
mov
mov
adc
into
arpl
mov
sub
xor
popf
adc
add
lret
loopne
mov
jae
mov
les
scas
and
jbe
in
out
icebp
sbb
jge
push
and
int3
loopne
rolb
xlat
repnz
adc
or
lea
aaa
aam
pop
in
cmpb
mov
sbb
ja
arpl
xor
fsubr
lea
in
and
std
sub
sti
mov
or
adc
into
inc
fldenv
sahf
les
mov
fiadds
xchg
xchg
mov
cmp
mov
rcrb
ja
xlat
pop
dec
xchg
cmp
out
lods
pop
scas
xchg
iret
pushf
jne
lods
and
in
aas
mov
ljmp
loop
push
test
and
cld
cmp
jl
int
out
adc
mov
jb
or
loope
insl
cltd
cmp
sub
add
in
jmp
xchg
jle
xchg
sbb
lods
xor
cs
in
insb
dec
jae
outsl
or
pop
jle
aam
popf
gs
ffree
ret
sub
sbb
and
movsb
jl
cmovp
sub
xor
xchg
xchg
mov
sbb
adc
pop
jae
popa
push
pop
xlat
int
dec
or
add
ret
scas
xor
mov
insl
cmp
rcr
aam
icebp
push
xlat
lods
pop
mov
xor
and
out
pop
loopne
enter
xor
push
insb
inc
cmp
ret
and
subl
arpl
sbb
shll
adc
cmp
xchg
aaa
aaa
or
mov
dec
mov
popf
lock
adc
pop
push
push
stc
test
xorl
sarb
pop
sbb
ret
jnp
pop
stos
loope
scas
outsl
pushf
mov
cmp
mov
cmp
dec
cmpl
mov
mov
in
in
sbb
int
cmpb
hlt
into
mov
jp
repnz
jg
lods
sbb
xor
sbb
adc
cmp
pushf
mov
gs
test
cwtl
cmpsl
aaa
push
pop
dec
mov
pop
js
pop
aam
xlat
enter
loope
sbb
ja
xchg
cmp
js
icebp
mov
int3
jl
push
pusha
nop
iret
mov
dec
mov
inc
mov
sbb
mov
add
sub
sub
push
shrl
nop
mov
cs
fidivs
lea
pop
pop
pop
add
fucomi
cmpsb
push
pop
out
insb
xchg
nop
rcrl
rcll
pusha
fs
pop
pop
in
mov
subb
in
call
mov
das
pop
pop
pop
xor
push
pop
jle
mov
push
popa
dec
out
sub
mov
xor
je
pop
insl
xchg
fcom
pop
rcr
and
and
lret
dec
call
lods
dec
loope
cmovno
int3
lret
add
lea
pop
out
pushf
xchg
shrb
dec
and
enter
test
mov
mov
fadd
icebp
pop
test
scas
nop
subb
sbb
nop
inc
ret
or
pop
in
loope
cmp
add
fcoms
imul
sbb
or
mov
leave
movsl
dec
int3
dec
and
xor
sub
icebp
inc
out
mov
and
mov
rorl
ret
push
mov
add
xchg
popa
add
mov
out
bound
dec
sbb
dec
imul
push
mov
lods
cmp
aam
cli
jns
sub
repz
adc
gs
jae
pop
add
pusha
or
stos
push
and
shr
shlb
xor
orl
test
push
scas
add
out
cmpsl
ret
outsl
xorl
inc
cwtl
call
call
inc
adc
mov
rol
push
jg
push
rorl
das
fwait
je
dec
cmp
xchg
dec
push
mov
int
adc
outsl
das
lret
mov
shll
mov
gs
int3
adc
jae
inc
jo
rclb
sub
adc
jnp
jp
jns
sub
xchg
mov
adc
aam
mov
frndint
mov
xchg
clc
push
lds
mov
enter
fcmovu
jge
jbe
jne
mov
fidivrs
pop
add
fs
xchg
fbstp
jle
into
and
in
sbb
test
push
pop
cmpsb
adc
test
add
enter
loop
mov
out
sti
je
mov
xchg
std
mov
mov
adc
jge
in
rcll
shll
dec
sub
or
jp
add
push
je
lods
and
pusha
and
rorl
je
xor
mov
insb
icebp
mov
enter
in
bound
inc
arpl
rcrl
mov
inc
fsin
xchg
or
cmc
fldenv
sbb
add
mov
dec
sub
ss
push
es
ds
pop
jno
mov
xor
pop
mov
cmc
dec
lahf
jne
aas
shlb
push
scas
cmp
rcr
pop
ret
sub
inc
mov
adc
cmp
cmp
xor
or
sbb
mov
in
fnstenv
outsb
sbb
and
cmp
mov
mov
shlb
pop
mov
and
fisttps
es
nop
dec
and
push
mov
or
mov
mov
sub
ret
ja
add
or
sub
mov
sub
lods
jmp
xchg
movsl
cli
sub
inc
bound
xchg
cmp
js
mov
add
add
adc
ss
mov
mov
mov
rclb
mov
xor
push
dec
fcoml
andl
pop
lds
je
dec
dec
xchg
iret
test
pop
and
aad
jbe
sub
sub
xor
add
xchg
leave
dec
mov
push
sbb
jnp
ret
mov
jg
iret
or
jae
call
loope
shll
dec
cmp
popw
fiadds
imul
cmpsl
sub
das
pop
aam
dec
mov
or
adc
movsb
negl
bound
mov
aad
adc
jmp
ja
jp
insl
jae
sub
pop
xchg
sub
enter
jg
and
pop
mov
mov
mov
mov
test
xchg
movsb
pushf
push
imul
ret
mov
lahf
aas
insl
in
std
fbld
ljmp
or
pusha
push
dec
aad
dec
stos
mov
int3
xchg
rcll
xchg
dec
and
notb
xchg
mov
xchg
enter
cmp
adc
add
in
fdivl
mov
rol
mov
mov
jo
cmpsb
mov
imul
adc
int3
gs
mov
mov
sbb
daa
cmp
je
xor
xor
fimull
je
xchg
lret
ljmp
sub
daa
in
fwait
arpl
aas
push
js
mov
inc
push
aad
cmp
aam
cli
push
int
aam
rol
int
pop
icebp
cmpsb
mov
pop
mov
mov
fwait
push
fmul
hlt
lods
xchg
xchg
xor
inc
jl
cli
cmc
nop
add
scas
mov
ljmp
mov
int
pop
stos
inc
dec
test
into
mull
lods
call
jg
xchg
leave
jmp
jno
repz
jge,pn
dec
push
sub
inc
adc
imull
into
jbe
add
pop
add
add
add
outsb
out
xor
dec
pop
inc
jl
call
inc
je
movsb
dec
push
test
push
mov
cmp
loope
sub
cld
and
aaa
push
cwtl
or
scas
xor
test
xchg
fistps
xor
inc
dec
mov
mov
nop
dec
ds
popl
mov
fadd
jo
mov
les
mov
aas
lods
jmp
adc
or
test
arpl
andl
in
jp
in
cmp
push
inc
adc
fcomp
gs
add
icebp
stos
fwait
dec
adc
leave
mov
scas
in
sbb
loopne
cmc
jecxz
dec
dec
push
jge
push
and
arpl
push
pop
mov
pop
dec
cltd
mov
inc
leave
mov
cmp
pop
leave
cld
aad
sbb
pushf
pop
mov
sbbl
cli
bound
and
jecxz
stc
jb
shlb
and
pop
dec
jg
and
and
xchg
test
or
mov
cmp
sar
popf
adc
fdivp
arpl
cmp
dec
decb
int
sub
cli
sbb
cmp
pop
cmovae
sbbb
scas
or
jge
xor
lock
fdivrs
sbb
fsubp
cltd
jno
test
push
push
mov
inc
cmp
fcmovbe
fistl
cld
out
fs
push
jns
rcrb
dec
into
dec
sub
cli
fdivs
popa
arpl
es
das
in
repz
ret
push
das
mov
mov
or
jno
stc
cltd
in
insl
mov
cmp
push
stos
xor
jne
xchg
sub
jno
dec
sti
cmpl
mov
xor
push
mov
and
lea
test
jl
pop
mov
enter
xor
xor
push
mov
sbb
jae
cltd
js
mov
ja,pn
rorb
mov
push
repnz
dec
push
icebp
sahf
push
imul
push
movl
decb
lret
jl
ljmp
cmp
jmp
scas
fstps
mov
mov
mov
jo
xchg
pop
adc
stc
imul
test
call
lahf
push
lcall
insl
cmp
dec
xor
loopne
dec
push
ds
repnz
jp
gs
push
cs
ret
ljmp
fisttpl
mov
inc
mov
cltd
add
aas
xlat
mov
dec
fwait
pop
lds
add
pop
xchg
decb
dec
mov
push
jecxz
les
mov
test
jb
or
cmc
or
push
call
pop
lret
mov
jns
sub
popl
cmpsb
js
int
push
xchg
mov
movsl
mov
pop
ret
jbe
psubsw
jb
ss
inc
adc
insb
daa
ret
mov
in
insb
sub
push
rcrb
cld
pop
mov
xchg
imul
cwtl
shl
cli
and
push
mov
jbe
aas
les
xor
xchg
rorb
pop
xchg
int3
sub
cld
cmp
les
loope
adc
push
sti
push
jle
outsl
sahf
movsl
xchg
fsubr
xor
loope
movsl
and
pop
fs
sbb
inc
sub
fistpl
test
adc
mov
hlt
jmp
ljmp
or
pushf
adcl
dec
inc
jb
jge
xchg
xchg
inc
push
xchg
in
test
push
add
js
cltd
hlt
arpl
mov
iret
lods
mov
inc
packssdw
test
xchg
sbb
addr16
cmp
sbb
stos
out
cltd
jne
jno
aaa
lods
ss
mov
mov
cltd
testb
lods
mov
lahf
jbe
jb
orl
mov
stos
dec
imul
pop
xchg
cmp
movsl
fbld
mov
movsb
jle
shlb
and
mov
xchg
xorb
sbb
movsl
int3
je
mov
aad
add
insb
mov
test
sbb
dec
es
or
jns
fs
jnp
lds
mov
sbb
out
popf
fsubrl
sbb
inc
jg
mov
or
jb
dec
loop
cmpsb
add
lods
cmpsl
out
mov
aaa
dec
xchg
pop
push
xchg
clc
or
in
leave
dec
dec
cwtl
mov
xchg
pop
or
mov
cmpsl
cmp
les
fs
movsb
jae
lcall
leave
dec
fldl
shrl
test
rorb
and
adcl
and
pushf
shll
repz
mov
xor
fmuls
xchg
push
cld
arpl
pop
leave
bswap
les
pop
popa
dec
outsl
jno
andb
jge
sbb
pusha
in
sbb
add
add
push
cld
push
push
subb
call
and
sti
dec
dec
dec
cmpsb
mov
je
add
imul
and
push
xchg
pop
adc
jp
aam
subb
les
cltd
pop
fmull
idiv
int3
sbb
test
xor
sti
cli
and
or
mov
add
inc
push
adc
cmp
cwtl
sbb
pushf
inc
into
orl
scas
hlt
ljmp
bound
test
mov
pushf
testl
hlt
cli
das
inc
jns
loope
sbb
xchg
cmp
mov
pop
mov
jg
insl
arpl
pusha
or
addr16
sub
mov
mov
inc
mov
inc
ss
push
lahf
cmp
imul
sub
sbb
scas
or
roll
loope
cwtl
xchg
push
cmpsl
aam
adc
or
enter
and
inc
add
cli
incl
sub
mov
xor
mov
insl
xchg
sub
xchg
adc
cmpsb
cmp
sbb
loope
mov
and
stc
sbbb
inc
sbb
jmp
sbb
dec
out
adc
xchg
push
js
jns
int3
mov
sbbb
xlat
popa
add
xchg
addr16
cmp
insl
ficoms
fsqrt
into
pop
ss
movsb
and
sub
decb
mov
adc
ds
stc
add
dec
or
int
aas
in
mov
sub
into
pop
push
jp
mov
icebp
jb
popl
xchg
add
divl
int3
mov
insb
dec
cmp
pop
adc
stos
dec
inc
pop
jo
scas
add
adc
ret
adc
mov
xchg
pop
lret
dec
js
xchg
add
adc
cmp
xchg
push
mov
jb
sbbb
cmp
push
repnz
lret
rcr
sub
sub
push
mov
inc
jne
pushf
sub
scas
sahf
hlt
or
push
mov
outsl
loope
imul
outsb
push
mov
xchg
cmovbe
cmpb
sub
mov
fnsave
js
inc
mov
test
rcll
push
test
sti
push
cmp
cltd
dec
xor
push
xor
dec
loop
std
push
pusha
and
pop
shll
sbb
loop
dec
aam
push
pushf
push
pop
push
ffreep
orb
jo
int
mov
mov
sbb
xchg
loop
in
and
lds
pop
mov
ds
inc
adc
push
pop
sub
cmp
fcmovnbe
cmp
xor
jb
cmp
jge
cmp
push
push
lock
test
mov
sub
inc
dec
gs
lcall
loope
pop
push
lcall
mov
push
lret
and
clc
sarb
inc
mov
cmp
push
lret
in
aad
cmp
fdivr
sub
mov
movsb
pop
ficoml
add
pop
mov
cmp
adc
add
jnp
pushf
cmp
cmpsl
lret
mov
ljmp
ret
ret
sarl
mov
sbb
cld
lea
stos
sub
std
fdivrs
pop
fsubl
pop
aaa
xchg
test
ret
inc
pop
fmull
test
movsb
cmp
push
lahf
inc
loop
jns
out
out
fwait
imul
adc
ret
adc
inc
inc
pop
std
mov
pushf
jle
mov
dec
mov
pop
inc
pop
push
mov
repz
mov
fimuls
cwtl
sub
jp
fcoml
dec
adc
cmp
sbb
in
xchg
ds
inc
icebp
ds
push
mov
std
cmp
dec
push
xor
mov
test
xor
push
dec
dec
out
sti
ficoms
fists
inc
xchg
xor
jl
ljmp
insb
addb
mov
imul
pop
hlt
hlt
jmp
andb
jmp
sub
inc
imul
jae
pop
dec
lret
mov
jmp
mov
in
pop
pop
cmpsl
mov
lods
or
xchg
scas
add
jecxz
stos
lahf
mov
cld
cmp
addr16
rcrb
dec
bound
mov
pushl
or
pop
lahf
sahf
lods
adc
sahf
outsb
sahf
insb
ret
lret
xor
out
sub
xchg
cwtl
lea
lret
out
or
sti
je
and
jnp
mov
and
pop
rep
jno
jnp
or
mov
loop
movsl
xchg
jp
mov
jmp
lret
std
mov
xchg
fidivl
sar
in
push
fidivrl
mov
imul
jne
xchg
sbb
in
lds
pop
pop
cmc
jne
into
imul
sub
mov
mov
shll
mov
test
shll
jle
mov
mov
movsb
imul
mov
mov
andb
push
fdivrl
xchg
testl
paddusb
mov
leave
das
xor
int3
aam
movsl
xor
imul
or
mov
dec
mov
cmpsb
iret
inc
sub
es
mov
xor
mov
fs
mov
mov
xor
dec
leave
sub
cmp
cmp
pop
pop
mov
pop
push
sub
sbb
jns
cmpsl
lods
xchg
sahf
pop
mov
inc
inc
sti
mov
iret
loop
inc
int3
and
ret
test
xor
and
inc
xorl
and
scas
aas
ret
stc
cmpsl
jge
jno
pop
xchg
loope
outsl
insb
out
mov
shll
loop
lods
nop
sub
pop
xchg
loope
lock
clc
in
jno
ror
push
xchg
inc
iret
movsl
push
out
xchg
fwait
inc
adc
test
xor
loop
and
jns
stc
xchg
fs
scas
push
sbb
or
sarl
in
je
pop
fidivl
popa
arpl
cs
int3
insb
and
icebp
pop
pushf
mov
flds
sub
xor
inc
jae
cmp
inc
lret
fists
lea
add
stos
shll
and
sub
and
roll
in
xor
xchg
mov
dec
mov
fcoml
ret
mov
ret
ljmp
or
ret
dec
and
add
ds
xchg
push
add
inc
popa
cmp
dec
lret
mov
loop
jns
push
dec
pushl
lock
jo
lret
nop
aas
dec
push
xchg
cli
ficompl
movsb
mov
push
sub
adc
rcl
cmp
outsb
inc
inc
lods
gs
fadds
notl
inc
mov
orb
ljmp
int3
inc
and
aad
movsl
xchg
popa
jp
mov
push
dec
test
or
add
imul
pop
jp
sbb
jae
addr16
pop
mov
sarl
gs
pop
mov
stc
pop
fsubp
sbb
and
mov
and
push
and
and
sub
push
jl
repz
sbb
in
jmp
pop
sbb
in
xchg
add
sti
jecxz
jle,pn
imul
psraw
int3
icebp
enter
ljmp
in
mov
jle
test
inc
ret
mov
or
push
sub
sub
mov
popa
inc
xchg
jne
pop
out
sub
pop
shll
jge
sub
js
leave
sbb
xlat
jmp
jo
sub
mov
mov
dec
subb
inc
sbb
movsl
cmpsl
sbb
xor
fists
lock
dec
ss
cmp
stos
sbb
mov
push
fwait
lea
ljmp
sub
adc
pop
xchg
push
paddusw
cmpsl
jne
enter
lock
add
cmp
aas
mov
mov
incb
jbe
in
adc
adc
push
stc
sahf
mov
int
jne
repz
rol
stos
inc
ds
sub
clc
xchg
sub
pop
jbe
leave
les
jb
or
push
aas
stos
jp
pop
and
mov
jp
push
jp
insl
das
jbe
orl
fstl
pusha
into
loope
out
xchg
push
cli
pop
lcall
bound
sbb
jb
and
lds
adc
loopne
popa
jb
mov
stos
out
or
inc
rclb
mov
xchg
jno
dec
adc
outsb
mov
xor
clc
ret
mov
fisubs
inc
adc
push
inc
inc
ljmp
inc
popf
es
pop
push
loope
push
adc
pop
cmp
adc
fnsave
into
inc
xchg
test
test
shr
pop
and
out
or
aas
xor
mov
aas
or
sub
ljmp
push
ja
fiaddl
xchg
aad
adc
loopne
pop
lret
setae
lock
cmc
fadds
inc
sti
inc
jmp
nop
dec
jle
popf
jl
pushf
lret
lahf
jo
popf
and
sub
loopne
cmovns
mov
pusha
jne
jp
jl
outsl
or
and
pushf
xor
push
out
fucomi
arpl
xchg
sbb
aam
push
enter
dec
pop
mov
ret
push
inc
pop
dec
dec
push
add
inc
out
and
cli
lock
stos
jge
or
popf
fldl
jl
sbb
mov
push
xor
or
scas
sub
cmp
addb
dec
xor
or
in
xchg
mov
push
loop
int3
in
ret
mov
and
adc
pop
xor
imul
imul
mov
pop
aam
push
loope
mov
jle
push
jle
sub
mov
lret
aad
adc
pop
xchg
ja
loope
andb
nop
iret
adc
sbb
test
out
jecxz
rcll
in
stos
fdivrs
les
cmp
cmp
mov
sub
sbb
xchg
add
mov
pop
mov
mov
cld
dec
in
push
mov
leave
and
sbb
inc
cltd
xchg
pop
and
dec
cmpsl
lods
mov
push
jbe
xchg
gs
dec
mov
jbe
sub
outsl
mov
or
cli
push
vpmacsdqh
mov
rcrl
jmp
jmp
adc
jle
roll
lock
dec
pop
insl
les
or
jg
inc
jmp
lret
jecxz
in
cmp
js
in
add
scas
scas
push
mov
mov
jb
imulb
mov
jle
mov
push
into
mov
adc
loope
daa
ss
out
popa
hlt
movsb
adc
ljmp
inc
fisttps
rcrb
mov
xchg
in
pop
imul
aas
mov
cli
adc
inc
add
xlat
dec
cs
fiadds
mov
push
clc
and
cltd
xlat
loope
or
pop
stc
push
fidivrs
and
pushf
xchg
jnp
inc
push
mov
rcr
mov
inc
add
popf
stos
rcrb
fbstp
fs
adc
bound
pop
xchg
mov
pop
xchg
mov
test
shrb
cmp
adc
sbb
push
push
mov
rorl
shrb
jne
mov
in
jb
fs
push
fcmovnb
rolb
les
and
cs
iret
scas
ficoml
xchg
out
out
fs
sbb
xchg
xor
jns
imul
xchg
push
out
loopne
xor
clc
out
sbb
call
enter
shrl
repnz
mov
pop
xchg
and
aaa
pop
adc
sub
pop
push
ja
adc
faddl
cmpsw
fwait
nop
into
imul
inc
lret
bnd
xlat
fldl
jnp
aas
movsl
fidivrl
test
out
jg
repnz
or
sbb
mov
mov
jns
sub
jnp
movsl
fbstp
cmpsb
shr
ret
int
adc
add
lea
loopne
push
fidivl
stos
shl
test
mov
addr16
cmpsl
jmp
das
cs
mov
dec
frstpm(287
loop
adc
jo
push
mov
fimuls
jo
shl
pop
jmp
imul
cmpsb
leave
lret
shlb
sbb
add
sub
lods
and
and
jnp
fbstp
pop
mov
inc
adc
fwait
aam
or
addr16
cwtl
fcompl
daa
pop
fs
aam
and
adc
fisubl
mov
sbb
mov
movsl
int3
aas
xchg
inc
jecxz
cmpsl
bswap
mov
fwait
cmpl
mov
outsb
mov
ja
mov
mov
sub
mov
ret
mov
loopne
cmpsl
rorl
mov
pop
push
sahf
out
gs
fisubs
dec
dec
or
push
cmp
push
xchg
xor
cmpl
iret
addr16
push
push
xchg
ss
hlt
pop
jmp
mov
lret
sbb
outsb
xor
fnsave
in
or
mov
lock
push
push
clc
pop
pop
mov
scas
pop
in
mov
dec
xor
es
subl
inc
lret
iret
adc
fwait
xor
inc
push
leave
mov
inc
scas
mov
pop
xor
jmp
jmp
pop
xchg
cmpl
outsl
xchg
cs
lret
dec
xor
dec
repz
dec
mov
int3
xor
mov
mov
fidivs
lret
add
int
dec
dec
xor
cmpsl
mov
or
jno
sub
jmp
cmp
mov
test
sahf
scas
push
dec
ret
mov
dec
mov
mov
in
shlb
call
lret
pop
sbb
sub
adc
cli
rol
cmp
pop
sub
imul
dec
mov
std
gs
in
dec
mov
fs
and
mov
or
insb
sti
mov
lods
jle
pop
inc
imul
sub
and
sbb
pop
or
sub
mov
mov
sub
lret
push
xlat
adc
sub
popa
push
cmpl
popf
in
pop
sahf
popf
cwtl
hlt
adc
fmul
cmp
mov
dec
out
push
xor
enter
lock
xor
cwtl
mov
xlat
rclb
lods
cld
push
adc
adc
stc
daa
or
mov
sbb
fcomps
sti
cmp
mov
pop
sbb
mov
jno
sub
sbb
repnz
pmaxub
lahf
pop
mov
fisubl
dec
fwait
sub
pop
xchg
mov
in
jnp
int
cmpsl
xchg
xor
lock
add
cltd
lahf
rcr
shll
sahf
adc
inc
pop
mov
cmp
lea
add
mov
outsl
inc
push
mov
xor
popf
mov
jge
int3
fwait
lods
gs
repz
adc
xchg
jl
dec
scas
enter
shll
xor
dec
xchg
rolb
notb
cwtl
lret
jno
out
mull
lds
adc
shll
sbb
jns
adc
jns
xchg
mov
int
and
aas
xor
cmp
out
pop
mov
xchg
fnsave
pop
outsl
mov
and
xchg
sbb
movsb
and
jnp
lret
sub
pop
jmp
add
sbb
cmc
fucomip
xchg
push
roll
mov
dec
jns
inc
inc
pop
imul
inc
mov
imul
jmp
enter
sarb
mov
mov
fldenv
xor
insb
push
sub
jbe
repnz
xchg
dec
pop
cmp
adcl
lods
mov
scas
xchg
jp
push
test
dec
mov
repz
sbb
jmp
mov
cmp
fmuls
mov
xchg
insb
leave
and
sbb
cld
cwtl
nop
popf
sub
push
arpl
ret
push
mov
sub
stos
testb
sub
shrb
inc
nop
iret
sbb
js
fs
out
jns
loopne
dec
mov
mov
cmp
xchg
mov
mov
int3
mov
jl
xchg
mov
xor
loope
pop
pop
out
xchg
inc
ret
push
ficoml
pop
xchg
fwait
pop
push
cmpsl
nop
mov
ficomps
in
pop
sub
mov
or
clc
dec
sti
sbb
fisubs
push
fsts
jmp
push
popa
jg
add
enter
decl
inc
cwtl
negb
pop
outsb
sub
or
xchg
scas
pop
inc
sbb
iret
in
dec
cmpsl
jl
push
push
leave
jb
out
jno
dec
aas
je
add
in
push
add
out
out
sub
sar
mov
js
add
mov
insb
insl
js
mov
gs
sub
stos
inc
jl
les
cmp
mov
loop
ficomps
repnz
mov
jp
fwait
jl
enter
xchg
lods
arpl
mov
arpl
push
icebp
imul
mov
jl
fimuls
sub
adc
stos
mov
add
out
xchg
loopne
mov
mov
popf
and
lcall
cmp
fstl
jnp
push
inc
ret
pop
dec
cmp
xor
in
jae
inc
loopne
and
insl
je
cmp
mov
lret
adc
dec
loope
pop
aad
dec
repnz
xor
jmp
pop
jecxz
xor
xor
ljmp
in
shl
mov
xchg
les
sti
mov
adc
fwait
cs
test
cmp
jecxz
cmp
jge
ja
add
fwait
mov
mov
mov
out
outsl
cmp
in
dec
and
aad
outsb
pop
jb
add
mov
loopne
fsts
gs
ss
mov
in
and
sbb
jle
cs
sbb
inc
adc
mov
repnz
push
lcall
lock
inc
pop
jecxz
jp
dec
sub
cmpl
push
mov
pop
mov
enter
mov
ljmp
add
les
pop
outsb
push
out
mov
loopne
ljmp
sub
adc
inc
sub
cwtl
imul
les
cmp
pop
sarl
nop
or
or
jge
lcall
fwait
ss
dec
sbb
out
jns
pop
cmpsl
test
mov
les
sti
mov
out
js
mov
cmp
jns
jne
pop
in
js
test
fdivrp
jns
dec
jge
cwtl
mov
insl
mov
fadd
mov
icebp
push
and
cmc
cltd
cmc
out
pop
pop
pop
pop
pop
sbb
add
fwait
ss
dec
insb
inc
aaa
adc
xchg
mov
shlb
lds
sti
mov
pop
mov
loope
pop
ror
xor
lahf
dec
imul
lret
pop
pop
inc
or
stc
mov
fisttpl
pop
jno
inc
popf
xor
icebp
jae
sahf
push
pushf
das
xorb
hlt
lds
mov
les
cmp
jno
mov
cmp
cltd
jle
icebp
in
aas
mov
adc
mov
fcoms
dec
dec
data16
pop
xchg
mov
fcom
repz
nop
nop
and
pop
mov
mov
cmpsl
scas
sub
shlb
je
lret
outsb
or
cli
push
cmpsb
xlat
daa
in
in
mov
scas
fcmovu
dec
aad
fisubrs
xchg
ret
cmp
shll
jle
add
movd
mov
cmp
cld
add
sub
and
lret
sub
int3
xchg
push
jns
fsts
inc
jb
ret
pop
mov
fildll
xor
jl
xchg
add
sub
mov
mov
lret
mov
enter
mov
outsb
cld
movsl
out
aad
ja
lahf
test
xor
mov
imul
pop
mov
dec
imull
or
in
adc
sub
in
outsl
mov
sti
dec
fs
sar
lea
or
flds
in
mov
loope
mov
test
mov
jbe
add
cmp
imul
or
ret
mov
ret
pmullw
xor
hlt
dec
jmp
mov
mov
inc
sbb
xor
leave
and
out
inc
lods
push
add
sub
pop
das
cld
cmp
cltd
add
nop
xchg
and
stos
fisubs
pushf
cmp
std
inc
xor
adc
je
add
sub
push
in
mov
sub
loopne
lret
icebp
push
adc
stos
add
push
lock
cli
repnz
xchg
cld
sub
test
aam
xchg
fnstenv
xor
pusha
mov
mov
cmc
sub
push
xor
stos
push
enter
push
pop
adc
dec
nop
xchg
into
inc
outsb
clc
bound
leave
sti
mov
out
cmpsl
add
jnp
sbb
icebp
dec
stos
add
pushf
repnz
and
jae
push
sbb
add
ja
and
jae
pop
pop
popf
cli
mov
mov
mov
scas
pushf
std
mov
lret
rorb
jns
jg
add
call
sbb
jge
pop
push
out
or
mov
jmp
sub
or
xchg
jns
out
adc
sub
rcrb
xchg
les
or
mov
inc
cwtl
out
pop
push
leave
stos
loopne
dec
aam
shlb
idivl
or
and
das
mov
aam
ja
loopne,pn
inc
dec
js
das
repnz
sarb
stos
mov
out
fldt
fisttpll
mov
mov
lods
inc
aas
pushf
mov
mov
stos
inc
add
adc
or
inc
out
clc
dec
ror
mov
pop
mov
fisubrs
fistpll
mov
aam
int
inc
and
fmull
sub
jne
roll
push
lock
inc
add
addr16
xor
dec
push
dec
pushl
pusha
push
ljmp
pop
shrl
enter
push
repnz
push
insb
sahf
inc
shl
xor
int
or
fistps
pusha
lea
push
mov
jo
aas
xchg
push
roll
sub
inc
fimull
and
adc
clc
inc
dec
nop
sbb
xchg
out
leave
cmpsl
jge
jbe
idivl
inc
fadd
into
ja
cmp
cmp
lret
in
ds
stc
cs
lret
leave
aad
jne
lret
add
mov
aas
pop
push
cld
pop
inc
cmpsb
xor
mov
mov
pop
and
scas
jp
movsb
jp
popa
int
push
jnp
rcrb
jae
push
out
sbb
push
xchg
rol
mov
outsl
mov
enter
mov
xchg
sbb
xchg
lods
adc
mov
xor
sbb
mov
pop
and
subl
sbb
out
jecxz
popa
bound
push
nop
bound
shl
scas
ljmp
push
jle
rcl
int
int
movsl
jecxz
imul
mov
cmova
out
and
push
jmp
aas
inc
dec
subl
sarb
add
ret
ds
in
mov
and
cmp
jb
mov
mov
push
or
jns
push
inc
mov
adc
repnz
adc
and
cli
jae
xchg
inc
aam
aam
enter
inc
add
inc
xchg
sub
lods
or
out
and
inc
add
mov
xor
mov
add
nop
popf
sub
adc
mov
lea
mov
mov
std
xlat
mov
or
in
pop
mov
scas
cmpsb
adc
pop
cmp
pop
inc
fisubl
dec
cmp
stos
out
adc
sti
add
enter
jmp
repz
aam
jg
cmc
push
lods
or
stos
fstl
xchg
jecxz
mov
push
and
in
lcall
pushf
std
xor
pop
jnp
sbb
sub
fidivrl
add
pop
add
enter
test
fwait
roll
pop
mov
lods
jl
testb
mov
xor
test
hlt
stos
dec
sahf
aas
inc
xor
inc
pop
or
ret
mov
mov
mov
shll
data16
dec
cltd
adc
rol
mov
sbb
pop
push
sti
in
cwtl
ret
loope
mov
je
jp
push
icebp
pop
sbb
lods
and
outsl
and
scas
orb
out
mov
stc
sti
fstpl
push
jg
inc
cmp
movsb
xchg
pop
xchg
mov
or
es
dec
adc
cmpsb
xor
push
push
in
addr16
cmc
or
mov
inc
out
and
push
sbb
cmc
cmp
adcl
pop
xchg
inc
adc
xchg
xchg
fidivrl
jbe
xchg
mov
push
cmp
push
cmp
insl
inc
mov
pushf
int3
out
push
aas
stos
in
movsl
scas
fldt
test
mov
adc
les
xor
loop
jnp
or
and
fs
pop
add
and
out
push
and
cmc
push
sub
in
nop
and
push
push
xor
cmp
pop
test
js
out
out
sbb
mov
pusha
sub
or
mov
sub
je
jmp
mov
pop
inc
stc
add
sahf
movb
jl
in
mov
test
jns
push
leave
data16
scas
or
repnz
fsts
test
mov
or
iret
jmp
sub
xor
in
imul
daa
adc
stc
pop
popf
mov
lea
pushf
inc
push
cmp
push
scas
xchg
lret
cmp
xor
bound
sub
add
lcall
les
enter
mov
in
push
or
in
xchg
mov
mov
xchg
cmpsb
cld
out
adc
dec
vmwrite
lea
sbb
inc
cs
sub
or
aad
in
or
pop
fs
mov
pop
es
jmp
test
jl
inc
jne
addr16
inc
shl
and
adc
pushf
dec
adcb
push
push
pop
shl
cmp
aam
cwtl
ja
jns
lret
push
cmpsb
shl
stos
fdivrs
fsubs
stos
lcall
sbbb
mov
stc
int3
test
mov
cmp
or
sbb
and
and
nop
movsl
lcall
or
jmp
bound
test
jg
hlt
push
jmp
mov
pop
and
mov
scas
pop
mov
mov
add
lods
mov
or
mov
mov
out
ret
or
dec
std
mov
xor
sahf
adcl
ret
sub
popa
fdivrl
outsl
jo
cld
daa
add
negb
sti
sub
insl
pop
inc
ds
mov
inc
jp
lods
sub
and
sub
fimull
pop
and
push
test
xchg
mov
xchg
mov
and
lea
xchg
jecxz
frstor
jl
jp
inc
xchg
data16
cli
gs
ja
addr16
mov
mov
js
pop
xor
mov
cltd
inc
icebp
xchg
pop
enter
cltd
pop
cmc
add
push
xlat
lock
cmpsl
aaa
mov
mov
or
jle
mov
mov
lcall
mov
jmp
xor
shrb
jno
mov
rcrl
les
icebp
daa
sbb
sti
aas
shlb
inc
loopne
pop
xor
mov
push
test
dec
les
or
out
sbb
xchg
lods
ljmp
cmp
and
fwait
pusha
in
jge
lret
cmp
mov
cs
test
mov
jno
stos
xchg
fdivrs
les
int3
in
adcb
cmp
stos
push
rorb
push
adc
cmpb
out
roll
jl
popf
cmp
sub
loope
dec
adc
ljmp
sub
fnstcw
push
sbb
pushf
pushf
xlat
pop
push
mov
cmc
cmp
cld
pop
dec
lds
jnp
inc
dec
iret
adc
inc
lret
pop
cmpsl
or
decl
or
out
mov
and
outsb
ficomps
or
or
jb
dec
xor
jnp
lcall
xor
lret
cmp
sbb
clc
stc
sub
ljmp
subb
movsb
cmp
pop
mov
sub
mov
adc
inc
push
imul
or
pop
outsl
test
popa
lcall
mov
fs
inc
fwait
push
add
frndint
test
icebp
mov
mov
adc
mov
test
sbb
fwait
add
dec
ret
inc
cmp
lret
cltd
dec
ss
add
iret
sub
and
xlat
popf
lods
push
sub
popa
fbld
xor
bound
ficompl
inc
jmp
jo
ret
adc
es
push
sti
cwtl
mov
adc
or
pop
loopne
movsl
jle
bnd
jp
fmull
enter
cmpsb
mov
jl
lcall
movsb
shlb
icebp
mov
xchg
jne
or
rol
fwait
jbe
fsubr
jno
dec
dec
or
cltd
dec
xor
stc
ja
movsb
lret
and
scas
fadds
sbb
fildll
iret
repz
xor
int3
or
mov
mov
push
and
outsl
dec
cmp
cmp
inc
sarb
xchg
fstps
push
pop
cwtl
inc
sbb
fnstsw
outsb
add
testl
dec
adc
xchg
sbb
rclb
ds
push
scas
mov
cmp
popf
outsl
arpl
sbb
cmp
fbld
shrd
fwait
xchg
xchg
loop
jae
jle,pn
mov
out
arpl
and
inc
test
pop
mov
mov
addr16
cmpsb
inc
cmp
push
inc
sub
lds
stos
outsl
dec
add
fstl
mov
testl
imul
xor
xchg
pop
pop
mov
aad
pusha
adc
add
test
cmpsl
lret
xchg
adc
sbb
mov
cmp
mov
stos
dec
jmp
pop
stos
cs
add
xchg
xchg
inc
jmp
mov
orb
popf
and
adc
fsubrs
and
mov
jmp
subb
mov
shlb
lret
filds
sahf
outsl
jb
fs
pop
out
stos
lret
jne
lods
push
inc
xchg
cmp
cmp
adc
int
sub
or
stc
cmpsl
fldcw
mov
cmp
push
stos
mov
insl
pop
xchg
and
pop
roll
pop
outsl
shl
adc
fs
aad
add
pop
ficomps
cwtl
sub
push
mov
imul
xchg
push
pusha
mov
into
sub
jl
insl
xor
fdivs
push
sahf
jmp
adc
data16
daa
pop
cld
imul
pop
add
xchg
cmp
sub
lods
lcall
icebp
pop
jle
lcall
lods
hlt
mov
or
mov
push
mov
or
xchg
adc
out
adc
mov
leave
loope
les
xchg
dec
or
mov
mov
fldt
fldenv
adc
cvtpi2ps
negl
push
add
push
pop
mov
fnclex
les
jae
adc
or
push
icebp
xor
and
pop
jl
adc
lds
inc
js
fndisi(8087
jae
shlb
shrl
popl
sub
pop
xchg
mov
and
insb
push
dec
fs
jo
mov
or
jp
cltd
fldcw
paddb
ja
push
nop
pop
decl
xchg
mov
sbb
rorb
clc
jnp
mov
jne
adc
vrcp14sd
repnz
in
mov
mov
movsb
daa
adc
iret
adc
loope
loopne
push
push
adc
lcall
lods
nop
decb
mov
push
mov
jne
enter
and
hlt
jns
les
mov
xor
lods
inc
sbbl
shl
sub
rolb
adc
or
addr16
pop
inc
mov
lods
cmpsl
xchg
ds
or
mov
movsl
nop
inc
stos
fsts
jnp
and
pushf
sub
mov
fsubrl
mov
pop
pop
push
sbb
xchg
dec
xchg
stos
jnp
and
nop
fdivl
add
cli
pop
pusha
cs
and
jne,pn
mov
push
fidivrs
mov
adc
icebp
mov
lods
clc
insb
jb
mov
inc
and
addl
rcrl
push
idivb
xchg
jg
mov
inc
pop
add
fisttpl
sbb
mov
mov
push
pop
outsl
shl
inc
shll
in
push
dec
ficoml
insb
repz
leave
imul
enter
mov
inc
or
cmpsb
adc
xchg
movq
adcl
jb
xor
out
sub
clc
pusha
cltd
mov
int3
jmp
mov
cmpsl
mov
imul
movsb
aad
sub
sbb
push
mov
push
into
mov
xchg
imul
gs
lods
sub
cltd
sbb
fst
sub
inc
pop
nop
pop
loop
jnp
imul
adc
push
sbbb
stos
shl
mov
xchg
cmpsb
scas
mov
pushl
jns
xchg
bnd
out
fiadds
fadds
dec
cs
sbb
pop
arpl
push
inc
orb
push
ret
cmp
jno
sub
andb
outsb
jo
stc
loop
jbe
adcl
aad
aam
jmp
adc
stc
loope
dec
ror
cmpb
mov
cmp
dec
lds
xor
dec
iret
sub
adc
inc
cmp
stos
jp
enter
fnstsw
filds
add
sahf
inc
movsl
push
xchg
sbb
xchg
mov
mov
push
or
mov
adc
in
aam
dec
push
ljmp
jmp
aaa
sub
lret
loope
mov
cmpsl
mov
mov
dec
rcrb
fmul
mov
icebp
xchg
insl
in
shrl
sub
nop
ret
negl
sti
mov
ja
jge
or
dec
xor
mov
xchg
jns
jnp
scas
mov
cmp
or
ror
les
add
cmp
or
or
cmp
shl
dec
inc
cmp
es
add
inc
mov
subl
aaa
xchg
mov
pop
nop
xor
pushf
jl
adc
or
dec
pop
lods
cmp
scas
insl
in
jmp
fxch
fdivrp
jo
adcb
mov
add
xchg
xchg
addr16
jae
cmp
jmp
pop
xor
inc
jmp
inc
mov
inc
inc
movsb
jns
or
jnp
hlt
fdiv
sahf
adc
push
or
add
jp
or
es
repz
push
loopne
add
and
xchg
dec
popa
repz
ljmp
mov
cmpsl
sti
jne
les
xchg
mov
and
inc
lea
jmp
cmp
sub
ret
cli
in
lock
mov
lods
lods
mov
dec
cltd
rclb
cltd
movsb
pminsw
aaa
or
negl
loope
pop
daa
lock
jl
or
ljmp
cmpsl
sti
push
sbb
int
arpl
add
int
xchg
jo
and
push
arpl
cli
dec
mov
mov
and
aas
mov
arpl
mov
ljmp
mov
fistps
mov
outsb
xchg
xchg
cltd
push
sub
je
cmp
push
and
inc
icebp
mov
out
jno
inc
and
xchg
mov
add
xchg
movsb
pop
jle
jecxz
dec
bound
jle
and
iret
adc
imul
lret
rcl
adc
cs
pop
sbb
mov
mov
lcall
repz
mov
xchg
cmpsl
aas
sbb
test
jl
je
mulb
into
fildll
xchg
xchg
mov
popa
loope,pn
adc
mov
into
repz
arpl
bound
cmp
pop
xchg
or
cmp
outsl
stc
xor
clc
or
or
mov
std
das
pop
or
popa
xchg
imul
aad
pusha
test
mov
push
das
or
pop
stos
inc
mov
stos
pop
push
les
pop
or
movsb
jle
aas
movsl
push
jmp
mov
sub
in
pop
iret
enter
repz
sbbb
cmpsb
hlt
mov
jnp
add
rorb
or
leave
push
rclb
insb
call
inc
jmp
movl
inc
stos
push
adc
in
ds
pop
jne
popa
xchg
jns
and
sti
mov
test
sub
sub
nop
sarl
lret
mov
cmc
out
mov
ret
iret
dec
lods
dec
fidivrs
or
jne
xor
push
jp
fistl
jge
cmpw
mov
in
lds
les
adc
sub
mov
iret
sub
pushf
sti
mov
inc
imul
sbbb
mov
xchg
inc
clc
dec
xchg
aad
cmp
mov
mov
pop
add
sbb
or
mov
scas
sub
mov
cmpsl
or
pop
dec
push
xor
jl
pop
inc
leave
sub
ret
stos
into
into
lods
jns
inc
push
je
push
fisubrs
incb
inc
shlb
jb,pn
push
xchg
repz
xchg
xchg
fldenv
out
or
push
mov
es
sarb
dec
cltd
push
sub
icebp
daa
add
jle
and
leave
jecxz
mov
outsb
xor
jg
jmp
shll
sti
sbb
mov
jle
mov
mov
push
push
add
push
dec
bound
pop
in
shl
ret
nop
mov
jb
adc
je
or
mov
xor
add
fisttps
or
aam
adc
les
stc
rcrl
scas
pop
ret
inc
clc
inc
je
and
cwtl
clc
pop
clc
xchg
cmp
mov
dec
rcll
sti
dec
sbb
dec
rcrl
or
aaa
ret
add
mov
xchg
in
in
shr
add
and
loope
jg
cli
dec
shll
pusha
mov
fsubl
jns
mov
lret
xor
repz
in
mov
mov
popf
and
add
pop
xchg
xchg
jge
add
xchg
sahf
pop
fsts
mov
adc
pop
mov
ja
sbb
daa
xor
cmpsl
repnz
rorl
movsb
pop
inc
mov
movsl
out
mov
lahf
sub
fwait
jne
jae
jbe
and
adc
fisubrs
inc
repnz
fsubrl
xchg
mov
xor
dec
xchg
insb
popa
lahf
inc
lcall
lea
inc
lock
or
hlt
xor
xchg
or
or
jne
adc
popf
shlb
enter
xchg
mov
mov
lods
mov
lret
pop
dec
or
xor
and
adcl
push
ss
mov
loopne
mov
pushf
enter
stos
ret
or
sar
jle
aad
and
mov
int
or
out
lret
mov
adc
dec
ror
mov
repnz
lods
sbb
dec
adc
divl
inc
mov
outsl
call
cmpsl
and
shll
dec
sbb
insl
lahf
insl
jo
inc
icebp
sub
scas
add
shlb
popa
inc
xchg
data16
sbb
stos
js
in
mov
push
add
into
pop
idiv
in
neg
outsl
and
outsb
cwtl
aam
add
jge
cld
ret
aaa
int
xor
out
fcmovnb
inc
ret
movsl
mov
out
call
scas
inc
xor
movsb
inc
lds
leave
mov
test
lods
clc
sbb
xchg
cmc
jo
leave
pop
out
add
pop
pop
mov
test
adc
dec
ficoms
lret
lods
cli
cmp
fsubr
into
jmp
add
sub
inc
push
xor
out
cltd
xlat
fcom
adc
jnp
cli
push
pop
enter
mov
sahf
push
subl
sbb
rcrl
or
push
in
push
add
mov
cwtl
and
xor
lahf
jno
mov
ret
stos
push
in
test
iret
dec
push
inc
mov
repz
fdiv
stos
inc
faddl
mov
in
mov
cmp
pop
jl
cltd
lret
rcll
and
xchg
mov
inc
ja
cld
loope
add
pushf
loopne
xor
inc
push
xor
cmp
sub
mov
out
sub
pushf
movsl
out
outsb
test
xor
addr16
cmp
jge
inc
icebp
push
add
out
xchg
adc
add
dec
push
cmp
xor
fldenv
cs
inc
jg
jecxz
push
inc
call
cld
mov
roll
push
bound
cs
fsubrs
or
leave
pop
dec
test
sub
mov
add
ds
add
add
jecxz
lahf
pop
test
sbb
jl
nop
inc
leave
jge
out
mov
xchg
iret
in
push
les
ja
cld
mov
pop
mov
push
stos
or
mov
gs
mov
inc
dec
sti
dec
daa
cli
jp
iret
inc
xchg
movsl
leave
sti
jg
aam
jl
and
popf
inc
bnd
mov
xor
sub
sub
sub
or
inc
and
bswap
dec
pop
mov
shll
arpl
or
lret
xchg
adc
cwtl
lret
pop
adc
mov
pop
mov
sbb
fcomip
jge
lods
call
leave
std
outsb
lock
mov
adc
dec
jcxz
sbb
fdivrl
scas
sub
orb
pop
or
and
sbb
xor
mov
mov
lret
push
inc
and
adc
xchg
jg
push
ds
cmp
testl
cmc
push
ja
ret
call
mov
push
add
fdivp
loopne
call
stos
push
or
movsl
cmpsb
sbb
adc
les
addr16
in
ficompl
addr16
push
and
cmp
rclb
lahf
adc
inc
out
mov
fnstsw
shll
mov
fcmovb
inc
loope
lret
pop
leave
ror
daa
pop
int3
stos
nop
cwtl
shrl
nop
dec
cmp
fadd
popa
sub
push
fiadds
gs
pop
mov
cmp
pop
push
sahf
in
or
inc
repz
ret
andl
cmp
xlat
mov
and
aam
std
xchg
pushf
fcoml
cmp
ss
cmp
cltd
cmp
iret
cwtl
sub
xor
test
cmp
ret
bound
ret
fwait
das
ljmp
jg
inc
or
or
sub
jge
dec
sub
imul
add
ss
adc
les
mov
xor
push
int3
xchg
inc
push
mov
js
sar
out
gs
mov
sub
rclb
sub
mov
imul
xchg
adc
or
mov
arpl
push
jecxz
xor
test
jns
pop
stc
adc
pop
mov
push
aas
add
addb
pop
popf
xor
add
loope
test
mov
inc
leave
cmp
mov
cltd
dec
es
fmul
jge
ror
adc
adc
cmp
xchg
mov
mov
add
or
sbb
ficomps
jle
rcl
or
add
xor
bound
test
imul
mov
push
push
cmc
pop
cmpsb
in
jg
cmp
incl
or
aam
out
sub
mov
les
cmp
sahf
push
jnp
icebp
pop
mov
insb
pop
xchg
setle
inc
sar
fwait
data16
add
mov
popf
dec
push
inc
pushf
xchg
test
sub
leave
divl
push
cmp
mov
fidivrl
xor
jo
pop
arpl
sub
pop
and
rolb
mov
loopne
or
ss
rcrl
push
mov
mov
jns
mov
ficompl
andl
pop
les
pop
inc
mov
sub
out
outsl
sub
pop
mov
jmp
pop
in
fiaddl
es
arpl
cmp
orb
add
push
and
mov
jo
aam
fwait
les
xchg
push
cmp
mov
fs
ret
sti
jmp
lahf
mov
and
push
xor
or
xchg
xchg
loope
inc
pop
gs
or
mov
xchg
pop
sub
pop
jb
sub
int3
cmpsl
mov
in
dec
les
out
dec
shll
sbbl
xlat
enter
shrl
sbb
fnstcw
pop
push
out
pop
pushf
faddl
ret
stc
int
mov
out
in
jg
mov
cmp
test
push
and
cltd
and
out
sbb
aad
and
fimuls
pop
push
lret
dec
mov
mov
sbb
mov
or
aas
adc
sub
mov
js
rorb
pop
or
leave
sub
cmc
jns
push
shl
mov
and
repnz
xchg
and
aas
insb
inc
push
cltd
jns
and
xor
pushf
test
fists
sbb
add
ret
sbb
mov
fwait
mov
and
mov
loope
imul
and
ret
sti
mov
gs
cmpsl
clc
inc
xchg
dec
add
movsl
jg
dec
inc
sbb
adc
sbb
cmp
lds
pusha
jmp
or
jmp
adc
fiadds
mov
and
movsb
test
imul
sub
lret
pop
add
and
cmp
stc
rorl
ret
mov
fcmove
popa
lret
ss
fwait
pop
js
and
jns
mov
mov
mov
jno
repnz
ss
or
sbb
insl
sub
icebp
push
js
cmp
adc
sbb
lea
fwait
insb
mov
mov
inc
fistpl
xor
nop
lods
sub
mov
pop
mov
fnstcw
pop
cmp
sbb
dec
mov
mov
adc
pop
inc
mov
lahf
jl
push
push
lcall
sub
movsl
add
fwait
pop
pop
push
dec
nop
fstp
xchg
sub
arpl
sub
pop
pop
lret
orl
pop
xchg
andl
loopne
xlat
mov
sub
iret
fildll
xlat
dec
insl
arpl
popa
add
loope
sub
jge
or
xchg
fidivrs
mov
push
sub
and
or
ror
dec
add
cli
test
adc
out
jne
daa
dec
les
jp
ret
cmp
push
in
aas
in
stos
fisttpl
das
push
pop
mov
adc
sbb
rcr
test
sbb
push
shrl
jmp
shr
cltd
sti
rcrb
out
sbb
sbb
dec
lahf
or
jg
mov
add
fldt
stc
jb
in
push
jp
shrl
loope
xchg
movsl
out
adc
shll
dec
popa
xchg
scas
ss
or
imul
push
aad
enter
pop
fimull
push
or
push
xlat
mov
mov
xlat
out
std
pop
jnp
push
xchg
mov
rcl
in
xorl
scas
add
mov
ret
pop
pushf
clc
push
dec
lret
into
mov
push
inc
cmp
mov
inc
jbe
jle
repz
add
push
negl
sbb
movsb
scas
aas
hlt
xchg
stos
adc
pop
mov
les
jge
ret
adc
addr16
cli
jmp
movsb
or
adc
fsubrl
icebp
movl
cmp
jno
pop
fadd
push
insb
cli
xor
test
pop
jle
push
sub
sub
and
int3
movb
inc
test
lret
les
aas
shll
test
mov
cmp
arpl
or
movsl
js
pop
lods
dec
jge
inc
sbb
jmp
push
or
mov
push
jnp
leave
dec
pusha
xchg
daa
fbld
sbb
mulb
stos
add
xchg
outsl
stc
or
lret
fsub
mov
stc
sbb
xor
adc
mov
xor
or
adc
daa
adc
int
mov
xlat
xchg
clc
jns
imul
rorl
js,pt
loopne
stos
pop
add
pushf
addl
mov
dec
popf
or
add
pop
int
call
push
or
adc
mov
cmp
jb
rolb
push
and
nop
cmpsb
cmp
mov
test
xor
sbb
nop
stc
cli
sbb
push
jecxz
les
jge
sub
inc
lret
ds
in
shl
pusha
sub
xchg
inc
add
and
insl
mov
adc
fmulp
add
sbb
call
sbb
es
test
les
divl
sub
inc
pushf
repnz
inc
ret
lock
and
fwait
cmp
ret
pop
xor
pusha
cmc
mov
push
xlat
lods
rorb
neg
fwait
mov
daa
scas
jb
dec
pop
insb
pop
mov
rcr
aaa
ret
push
pusha
sub
cmp
test
fwait
les
push
in
or
clc
jae
hlt
push
fbstp
lea
jbe
dec
rclb
sub
adc
add
add
in
repnz
inc
aas
leave
mov
jb
into
std
sahf
jmp
push
dec
sahf
adc
sub
add
mov
mov
inc
mov
xor
inc
pop
lret
in
push
decl
inc
arpl
add
jo
mov
cmc
fldt
pop
in
cmp
nop
lock
inc
int3
lods
sub
in
sbb
inc
and
dec
lea
mov
xchg
rolb
ja
mov
rcrl
jmp
and
inc
cwtl
dec
xchg
cmc
mov
test
mov
stc
fsubs
xchg
xchg
add
pusha
lahf
js
xchg
adc
out
rcrl
iret
scas
push
sbb
mov
mov
sbb
sub
mov
xor
or
mov
orb
into
mov
mov
repnz
fisttps
pop
sbb
dec
das
fidivl
repz
jbe
pop
insb
dec
test
jp
jg
mov
push
jge
dec
pusha
loopne
cmp
xchg
push
fsubl
cli
clc
mov
xchg
fldt
push
xchg
add
fst
and
sbb
push
sub
mov
inc
test
out
sbb
in
jecxz
inc
mov
dec
ds
mov
int3
dec
and
sbb
mov
mov
xor
add
xchg
mov
push
clc
inc
aad
jae
push
cmpsb
stc
mov
mov
sub
push
orl
lds
shrl
pusha
test
xchg
sub
xchg
mov
sbb
out
je
arpl
test
das
mov
lds
jl
notb
xchg
jno
clc
test
jp
adc
inc
mov
cltd
fsubr
lcall
mov
orb
sarl
cmpsl
cli
pop
pop
mov
imul
mov
jnp
and
or
jmp
ja
out
jp
mov
mov
dec
insb
xor
mov
lret
xchg
xor
add
add
mov
bound
push
push
mov
cmpsl
mov
lret
cli
xchg
cmp
pop
mov
add
sub
add
xchg
std
adc
test
xchg
dec
je
cmpsb
jp
ret
sbb
insl
in
stos
jne
push
flds
jecxz
mov
add
cli
push
pop
arpl
fsubl
sbb
and
jo
mov
push
xchg
and
in
in
gs
leave
xor
flds
push
push
jae
fadd
repz
into
pop
data16
inc
pop
sahf
adc
mov
mov
notl
dec
pushl
ljmp
sub
adc
xchg
fmuls
fsubs
popa
and
loope
cmp
loopne
lcall
out
pop
push
std
sti
les
add
sarl
scas
adc
lcall
lcall
nop
mov
imul
lods
add
sbb
pop
adc
sbb
cwtl
inc
dec
shll
scas
pop
xchg
rcrb
imul
lcall
dec
in
mov
pop
or
sub
xchg
xchg
fs
insl
add
es
jl
or
mov
imul
mov
jne
popa
and
mov
aaa
mov
cmp
push
jns
and
aas
jle
shrl
add
pusha
rolb
punpckhwd
ds
xor
hlt
xor
cs
cmp
xor
inc
adc
mov
sbb
mov
sti
add
cltd
filds
outsl
js
and
imul
loop
push
ret
bound
xchg
sub
inc
scas
add
in
fiadds
mov
cmp
jecxz
mov
rorb
arpl
push
lret
out
roll
jge
mov
fwait
adc
push
jb
popa
mov
sbb
add
pop
cmpsb
test
add
mov
int3
pop
mov
jl
xchg
ret
jbe
std
xchg
mov
xchg
inc
jb
hlt
sbb
mov
sbb
shll
inc
call
enter
outsb
js
fsubs
into
gs
mov
imul
sbb
sbb
rorl
negb
dec
gs
inc
push
mov
push
data16
sti
lret
in
mov
idivb
xor
push
mov
adc
xor
into
iret
ret
or
push
jns
loopne
repnz
int3
fcompl
jmp
cld
mov
xchg
in
aam
shll
pop
insb
movsl
mov
mov
inc
and
pushf
loopne
inc
push
int3
mov
flds
mov
das
xchg
cmpsl
inc
xor
cwtl
jle
push
icebp
lahf
lahf
stos
jmp
xor
inc
call
adc
js
jmp
adcl
cmp
hlt
sub
jno
jle
sahf
cwtl
inc
inc
pop
imulb
das
popf
mov
arpl
fmull
sar
inc
inc
cmovo
testb
repz
mov
mov
in
cld
mov
xchg
adc
aaa
ror
add
mov
icebp
and
push
bound
mov
enter
push
ficoms
and
fmuls
xor
jae
testl
out
sub
xchg
adc
sub
popa
and
jge
xlat
mov
jl
es
or
add
loope
xchg
ss
or
mov
bound
into
mov
sbb
hlt
xchg
fsubrs
inc
lods
mov
mov
in
jg
gs
cmp
loop
xlat
aas
xor
mov
add
sbb
dec
push
lea
rcl
or
jecxz
out
out
cwtl
pop
sbb
data16
xchg
lret
jbe
adc
inc
bsr
xor
test
mov
dec
add
rorb
jno
adc
addb
inc
xchg
cmp
jae
fdivrl
and
push
jne
gs
cmp
cmpsl
or
leave
sbb
add
lods
shlb
hlt
mov
mov
je
pop
cmc
push
outsl
ss
cltd
nop
into
mov
or
dec
dec
pop
push
adc
mov
sbb
movsb
push
mov
test
mov
dec
std
popa
dec
lahf
mov
test
jb
aas
out
adc
and
rorb
push
orl
aas
stos
fs
cli
aad
sub
pop
ret
dec
mov
jns
int3
lock
sub
pop
fisttps
es
push
cmp
lret
push
cmp
cmp
inc
aas
inc
nop
dec
adc
call
ficoms
xor
mov
jb
mov
rorl
add
stos
shlb
cmp
jb
test
in
test
pop
or
and
roll
pop
push
jmp
iret
and
int
cli
xor
roll
into
mov
mov
sub
loopne
add
fs
or
sbb
outsl
int
in
pop
sti
std
arpl
push
scas
ret
jb
in
add
dec
push
popf
cmp
xchg
mov
fs
cmc
incb
xor
inc
xorb
roll
jl
insb
or
test
xchg
das
js
mov
icebp
mov
out
xor
jae
inc
shl
inc
mov
cltd
shll
push
cmovnp
pop
or
cwtl
sub
fs
push
fisttps
int
mov
loopne
aam
pop
add
mov
xor
mov
dec
push
xlat
inc
les
inc
add
mov
pop
fsubs
mov
les
rcll
mov
mov
pop
jns
dec
and
cmove
mul
xlat
add
fstl
push
mov
mov
jns
adc
frstor
mov
fidivs
adc
jbe
aam
es
mov
mov
nop
dec
xor
int3
shl
jle
loop,pn
movsl
xor
mov
push
or
xchg
cmp
and
push
push
mov
scas
lock
ret
flds
add
pop
and
shl
dec
xchg
in
cmp
jno
ficoml
mov
imul
xchg
test
cmpsl
notl
bound
dec
or
cmp
cwtl
je
jbe
dec
and
leave
push
lods
pop
and
and
shl
rorl
sub
jae
insb
fdecstp
stos
shlb
out
je
adc
adc
xlat
shll
shrl
sti
popf
out
push
adc
mov
dec
ror
dec
gs
jns
inc
push
test
xchg
in
and
dec
int
shlb
dec
test
ror
pop
std
lret
adc
sti
stc
jg
sbb
xchg
mov
icebp
cmp
cmp
or
xchg
fwait
jbe
cltd
cmp
mov
cmp
sbb
or
xor
cli
sub
mov
pop
int3
add
dec
loope
daa
sahf
dec
out
pop
test
mov
dec
inc
cli
imul
inc
fnstsw
pop
jg
loope
movsl
or
stc
and
mov
xlat
jg
and
movsb
mov
inc
cmp
test
test
add
mov
scas
in
jnp
mov
xchg
cmp
popa
call
jge
fisubrl
sub
loopne
mov
xor
jo
xchg
mov
fdivrs
stc
cli
daa
pop
lods
pushf
cmpsb
gs
pop
mov
jne
add
xchg
aad
cwtl
in
push
xor
out
mov
inc
dec
sbb
sub
pop
repnz
xchg
out
push
dec
stos
cmp
pop
lcall
fidivs
and
fwait
sti
cwtl
hlt
gs
push
icebp
mov
pop
jns
stos
sub
ret
loopne
repz
lea
xor
fmuls
ror
inc
sub
adc
cmpsb
pop
inc
pop
mov
pop
call
pop
jmp
and
lods
mov
adc
outsb
scas
sbb
inc
frstor
ljmp
xor
imul
cmpsb
mov
pop
jl
icebp
daa
sbb
fwait
mov
adc
fcoms
lret
mulb
hlt
in
cmp
je
and
xchg
ja
inc
adc
lret
push
add
les
inc
out
cmc
mov
jnp
cs
aad
mov
jge
movb
add
inc
mov
mov
cmp
sub
and
pop
daa
xchg
in
ror
mov
test
sub
xchg
xor
mov
sbb
jbe
sub
or
mov
stos
scas
lods
mov
dec
fsub
rorb
jmp
fsubrs
jno
je
pop
out
lret
mov
std
pop
mov
push
sub
retw
cwtl
sub
je
cvttps2pi
gs
icebp
jne
mov
cwtl
rolb
jge
push
xor
dec
addr16
push
mov
dec
repnz
push
loopne
xchg
and
jns
dec
sub
jbe
xchg
fsubrl
push
lock
cmp
pop
divl
outsb
sbb
sti
mov
rcll
inc
pushf
cmp
bound
xchg
add
out
clc
pop
enter
aad
inc
jns
inc
gs
xlat
adc
in
push
push
dec
repz
sub
jb
mov
rcr
loope
ss
lock
xchg
add
or
push
and
or
lret
xchg
lock
sub
inc
push
movsb
notb
lcall
adc
pop
mov
lahf
leave
sti
mov
pop
mov
mov
add
lods
into
notb
mov
les
cmp
jg
fadd
mov
dec
sub
repnz
or
pop
push
mov
mov
push
pop
cmp
xchg
lcall
push
movsb
adc
xor
jno
mov
add
pop
sub
jle
pop
cli
test
push
dec
rcll
xchg
arpl
int
cmp
or
pop
add
mov
push
cmp
cbtw
mov
cmp
mov
in
insl
imul
dec
imul
loopne
insl
sbb
insb
jp
mov
inc
sbb
cld
push
mov
add
xchg
xlat
sub
mov
inc
negb
scas
lods
sbb
dec
addr16
cltd
int3
data16
cmc
inc
movsl
add
fmuls
mov
in
in
pop
cmpsl
stc
into
pusha
cs
pop
leave
lret
xchg
pop
mov
cli
pop
sarb
cwtl
imul
pop
subl
pusha
lret
out
fcoms
flds
out
xchg
aas
mov
mov
push
sub
mov
jp
jge
cmp
sti
pop
rcrl
sbb
adc
mov
stc
loope
ds
inc
pop
mov
push
xor
rcll
xlat
push
xchg
ret
lret
call
or
aas
sbb
push
jns
call
idivl
scas
sti
push
aas
cmpl
sub
fnsave
mov
mov
and
push
mov
inc
add
hlt
repz
dec
stos
mov
cld
rsqrtps
push
bound
mov
ret
in
xchg
mov
dec
or
or
inc
loop
cmp
ss
dec
pop
imul
sar
and
dec
ret
test
aam
stos
jl
pop
leave
jmp
inc
les
lret
mov
push
mov
jns
fidivrl
fwait
xor
mov
ret
or
or
mov
push
pop
adc
roll
adc
inc
loope
jns
test
bound
dec
into
bound
pop
lcall
je
lods
or
jecxz
insl
sub
inc
aas
out
nop
pop
aad
and
push
sbb
pop
xchg
repz
mov
pop
mov
pop
dec
cmc
or
data16
or
xor
jno
loope
loope
add
out
xlat
inc
mov
mov
push
cmpsl
mov
inc
lods
adcb
cld
cmp
xchg
movsb
js
mov
cwtl
xchg
jl
es
jg
push
fsubp
jp
mov
pop
lods
mov
js
xor
dec
xchg
xor
movsb
fwait
sub
and
imul
stc
or
mov
push
pop
js
mov
into
outsb
js
out
mov
sbb
jp
pop
jecxz
and
push
jb
int3
xchg
shlb
sub
shll
pusha
ss
leave
pop
fwait
shlb
and
dec
cmp
sahf
mov
jmp
mov
xchg
fsub
xchg
mov
mov
pusha
pop
rorl
scas
adc
cmpsb
data16
inc
mov
std
sub
or
lods
or
cwtl
fdivrp
dec
xor
nop
pop
arpl
and
cmpb
cmc
add
xor
xor
fchs
lods
push
and
and
add
mov
or
lea
pop
mov
jmp
xchg
adc
aaa
in
rcr
sub
lcall
adc
das
rol
inc
incl
push
dec
push
stos
in
lods
dec
xor
push
fucomp
pop
std
pop
pop
dec
adc
stos
insb
or
aaa
stc
inc
fmuls
es
test
movsb
stc
pop
cs
ficompl
and
sbb
mov
lds
xchg
not
pusha
jl
fmull
rorb
sar
test
adc
shrl
enter
clc
popa
int
or
inc
enter
inc
lret
fmul
mov
inc
jge
imul
mov
pop
outsl
dec
mov
repnz
jg
dec
ss
sub
ljmp
roll
xor
popa
sbb
push
pop
xor
shrl
mov
negb
insl
mov
or
inc
jmp
sub
es
xor
fisttps
insb
mov
repz
iret
sarb
ret
add
mov
inc
push
xor
insb
call
xchg
nop
lret
repnz
pushf
into
cli
in
cmc
rep
xorb
jnp
clc
adc
jg
inc
add
out
add
adc
rcll
pop
es
cmpb
in
jno
aas
sub
mov
push
ret
mov
scas
push
jne
or
loopne
shll
push
cmp
shrl
mov
sub
pop
mov
out
bswap
mov
sub
fcomip
stc
cmp
push
lahf
pop
xor
sbb
lret
jo,pn
or
rcll
push
faddl
adc
dec
cmp
inc
stos
xlat
rcll
mov
cmp
aas
mov
xorb
out
push
lods
std
cmp
popa
pop
xchg
mov
mov
icebp
adc
add
pop
jle
mov
mov
cltd
jl
outsb
or
fistpll
nop
cmp
pop
ljmp
mov
inc
js
bound
cmp
xor
mov
push
pop
or
mov
in
xor
inc
inc
stc
cmp
push
mov
jp
iretw
mov
pop
push
cmp
inc
aas
ljmp
cmp
mov
pop
clc
xchg
pop
sahf
xchg
mov
sub
xor
xor
cmp
negl
add
enter
dec
pop
in
es
out
xor
pop
sub
jle
add
adc
cmp
scas
mov
sub
icebp
testb
sti
sbb
shrb
push
lret
loopne
dec
and
leave
dec
inc
lds
adc
mov
mov
xchg
push
mov
adc
stos
lret
cmp
ds
push
push
jl
imul
movsl
stc
sub
popa
jge
inc
push
fcomi
int3
rep
jecxz
pop
sarl
and
fcmovnu
js
sub
lock
push
ret
incb
adc
int
in
ljmp
pop
mov
pop
push
insl
push
pop
adc
mov
mov
xor
loopne
sbbb
dec
sbb
shll
xchg
addr16
mulb
lret
imul
jne
mov
add
stos
inc
jb
push
xchg
jnp
push
sbb
outsb
xchg
dec
scas
insb
clc
test
stos
mov
in
mov
and
jg
loope
subb
clc
xchg
lret
mov
mov
mov
call
push
fdivr
faddp
mov
and
cmp
dec
xchg
inc
addr16
nop
jmp
ljmp
cli
inc
mov
aam
xor
ret
enter
cmp
ret
push
adc
test
add
rcr
jnp
and
xchg
pop
mov
xchg
sub
ljmp
das
lods
jo
call
jl
add
jno
mov
and
or
mov
add
or
jo
cmp
insb
pause
jmp
dec
pusha
leave
and
lock
inc
pop
cltd
gs
int
cmp
out
pop
icebp
testl
aam
sub
leave
mov
inc
insl
mov
aas
dec
or
mov
test
sub
stos
cmp
lcall
lods
lcall
xchg
dec
in
adc
cld
setg
push
gs
pop
push
icebp
mov
xor
xchg
std
ljmp
mov
add
daa
cmp
mov
adcl
ljmp
scas
out
loopne
jle
je
scas
ret
call
cli
add
pop
push
das
xor
nop
mov
inc
mov
lods
inc
sub
push
or
pop
faddl
pusha
mov
mov
in
add
add
sbb
and
pop
shlb
jo
add
stos
jle
in
xchg
pusha
mov
repz
xor
subb
pusha
cmp
mov
or
mov
mov
loope
ljmp
and
psubusw
and
in
jae
scas
jle
or
out
rorb
jle
cmp
lds
lahf
pusha
jnp
push
cltd
pop
jge
lods
cmc
cmp
or
cmpsb
fimuls
cmp
testl
adcl
xchg
inc
cmp
pop
add
xor
cld
movsl
push
xchg
add
ret
xor
sarl
mov
fwait
imul
or
mov
add
inc
fcmovnbe
dec
insb
gs
push
insl
dec
es
cld
mov
call
movsb
mov
adc
mov
push
add
and
iret
and
and
fwait
test
cltd
mov
into
outsl
mov
pop
mov
in
inc
and
add
push
popa
dec
ja
jge
rolb
dec
cwtl
jns
push
nop
lock
mov
int
cmp
dec
push
jne
lahf
insl
loopne
jnp
mov
sti
dec
xor
insl
movaps
and
hlt
or
mov
je
mov
shrb
and
das
push
sub
lcall
xor
nop
in
lock
adc
and
pop
jecxz
dec
dec
cwtl
movsb
repz
rcrb
xorb
dec
inc
mov
call
gs
ret
add
and
jns
cmpb
adc
insl
mov
adc
lcall
jmp
stc
js
add
leave
fdivrs
iret
bound
xchg
pop
xchg
mov
cmpb
lahf
mov
pusha
fisttpl
and
enter
or
mul
les
inc
inc
pop
pusha
nop
cld
aaa
jg
inc
mov
test
mov
pop
aad
scas
je
das
sub
inc
icebp
adc
ds
cmp
fidivl
nop
mov
call
cmpl
cmpsb
cwtl
adc
mov
jmp
add
pop
add
jo
inc
pop
fistl
pop
cwtl
mov
mov
inc
out
dec
insb
loop
lahf
mov
inc
scas
sbb
movsb
push
pop
jl
insl
fsubr
jl
fwait
jnp
mov
mov
iret
add
mov
mov
rorl
dec
aam
xor
ds
add
xchg
sub
mov
dec
lea
mov
subb
dec
jb
mov
xchg
xchg
inc
xor
scas
mov
mov
fsubrs
xchg
xchg
nop
aam
popf
jnp
orl
dec
mov
lea
out
jl
xchg
mov
xor
mov
mov
jge
jl
inc
ja
call
cmpsl
xor
cmp
inc
repnz
outsb
xchg
mov
enter
ds
sarb
dec
movsl
outsl
les
or
cld
aam
adc
xchg
push
sbb
repz
pop
sbb
pop
test
data16
aas
pusha
sbb
xor
daa
dec
cmp
add
add
movsb
jnp
inc
ret
shlb
mov
movsl
and
xchg
loop
jb
lahf
ret
enter
sti
pop
inc
out
sub
push
dec
jo
sbb
out
xchg
dec
ret
rcr
lds
fcomip
cmp
cmp
aaa
pop
sbb
int
or
dec
sub
push
push
popf
add
sbb
outsb
in
cmp
sti
cld
jmp
call
adc
popf
pop
and
mov
daa
movsb
lods
bound
adc
mov
stos
enter
mov
fldl
add
movsb
sbbb
shlb
test
mov
xorb
xor
cmp
les
mov
mov
sub
hlt
popa
ja
add
les
mov
addb
enter
mov
cld
mov
int3
insl
push
sub
or
ficomps
outsl
sub
cwtl
sbb
mov
jae
test
sbb
test
cli
fwait
jnp
inc
jp
mov
mov
int
jge
out
repz
sub
mov
mov
pop
add
iret
push
or
sbbb
movaps
mov
adc
push
test
imul
stos
jg
and
jl
pop
push
add
pop
jecxz
shl
insb
aam
push
and
xor
xchg
subl
stos
dec
cmp
add
dec
testl
rol
sub
imulb
xor
add
xchg
fmull
outsb
adc
pop
and
ret
sbb
or
test
push
je
ret
cmpsb
stc
int
idivl
mov
add
enter
int3
loope
or
cmp
adcb
stos
incl
xor
test
stos
lcall
sbb
repz
shrl
jg
punpckhwd
sub
jg
xor
stos
out
ret
jbe
jo
mov
ret
mov
mov
fcomp
pop
and
shrb
movsb
test
mov
jle
mov
push
loopne
scas
rolb
fwait
mov
adc
inc
inc
dec
test
pop
push
mov
aas
mov
test
enter
push
sub
inc
adc
addr16
bnd
frstor
pop
inc
pop
faddp
loopne
addr16
add
addr16
add
lods
add
gs
mov
mov
adc
dec
mov
mov
bound
clc
inc
ret
xor
cmp
dec
cli
pop
mov
mov
pop
xor
loope
addr16
dec
inc
adc
or
xchg
sbb
out
push
jns
fldt
mov
add
insb
push
jecxz
mov
pop
mov
sbb
rorl
lahf
adc
movl
shr
lods
dec
arpl
mov
jnp
shll
mov
jnp
test
and
cltd
cld
stos
inc
rcr
je
mov
mov
rcr
xlat
and
adc
xor
dec
dec
xchg
hlt
push
adc
inc
fs
mov
sbb
xor
pop
cmpsl
repnz
push
out
jl
ds
decb
add
or
jmp
add
inc
pusha
into
and
mov
pop
push
nop
fmul
and
jo
das
cmp
dec
inc
loop
sbb
scas
adc
cmp
les
shrb
insl
cmpb
enter
mov
and
js
jo
das
xchg
mov
inc
std
popa
stos
inc
mov
xor
jo
sti
xchg
insl
or
mov
fsubl
and
pop
inc
cmp
add
test
xor
rorl
hlt
mov
mov
push
dec
pop
push
mov
and
enter
jnp
inc
mov
out
rclb
dec
into
pop
je
adc
jl
ret
sbb
int
or
jecxz
rorl
movsb
clc
sbb
fwait
ror
orb
das
nop
clc
jge
iret
roll
iret
movsl
push
add
fstp
ds
push
movl
psubsb
push
cmpsb
fdivrs
xchg
and
jnp
xor
mov
cltd
pop
and
add
or
shrb
jp
inc
push
xor
adc
lods
inc
les
pop
lret
sbbb
enter
leave
push
aaa
lods
mov
stos
pop
popa
inc
fcmovb
movsb
mov
sub
mov
into
mov
sub
push
add
pop
fadds
negb
xor
mov
xlat
enter
or
sub
orl
lea
add
push
push
sub
dec
cmp
lret
xlat
movsl
and
xchg
add
popf
xchg
cmp
and
andb
mov
cwtl
clc
gs
or
xchg
mov
scas
enter
jnp
int
test
faddl
pop
sub
cltd
sub
and
xchg
int3
push
cmp
xor
cmp
and
out
je
jae
aaa
inc
dec
les
insb
cmp
sub
sbb
lea
sub
ljmp
mov
xchg
jl
mov
dec
xchg
ds
icebp
xchg
das
jo
xchg
adc
cmpsl
inc
adc
jmp
into
sbbb
cmp
stos
inc
lock
dec
fdivrs
adc
fnstsw
and
xchg
dec
cmpsl
adc
jo
cmp
mov
dec
mov
jnp
lea
mov
ret
or
xchg
mov
aas
test
xchg
mov
and
jno
movsl
insb
cmp
inc
pop
ret
mov
enter
sub
cwtl
scas
cmp
rorb
jmp
stos
xchg
pop
push
fmul
add
adc
push
testb
gs
add
dec
ret
xchg
xlat
ds
ja
js
dec
int
in
insl
jmp
shlb
mov
lock
jg
mov
in
mov
out
inc
xchg
sbb
sbb
sub
int
inc
jle
push
or
sarb
inc
or
rcrb
inc
aas
movsb
lods
xchg
pop
mov
enter
mov
mov
test
and
xchg
jg
fdiv
scas
xchg
xchg
leave
add
loopne
or
push
jb
xor
mov
push
inc
push
xor
pop
dec
mov
repnz
or
ljmp
adc
inc
pop
pusha
jne
sub
test
sbb
test
addr16
xchg
mov
or
jle
sub
adc
enter
dec
mov
nop
mov
jo
cmp
xchg
enter
roll
add
or
push
xor
rcrb
add
xchg
jbe
pop
loope
cld
fidivl
pushf
fsts
ret
cli
scas
pushf
sbb
xorb
lea
outsb
out
mov
fildll
and
aam
je
repz
call
push
sub
xor
or
dec
jns
mov
lods
gs
repnz
subl
shrl
in
xor
stc
push
jnp
cmc
mov
push
push
dec
sbb
into
sbb
dec
xchg
test
movsb
xchg
aaa
sbb
adc
bound
xchg
stos
sarl
out
mov
cli
or
ds
stc
adc
pop
lahf
push
enter
sub
adcl
jae
xor
mov
sbb
fcoml
cld
jno
rol
jecxz
sarl
ret
jmp
mov
cld
insl
xor
popa
jae
add
mov
cwtl
cmp
mov
lds
jg
jae
dec
or
pop
mov
inc
mov
jge
daa
sbb
loop
outsb
push
jle
cmc
dec
and
movb
cmp
insb
testl
cmp
cmp
push
add
inc
dec
pop
cmp
cli
ret
je
and
jecxz
push
dec
imul
xor
std
outsl
mov
sbb
stc
jnp
pop
insb
outsb
cmp
repz
leave
adc
stos
ret
fs
xor
arpl
mull
xchg
mov
rcrb
or
jmp
dec
push
data16
jmp
push
xlat
sbb
mov
mov
rol
cld
xchg
jo
in
inc
cwtl
pop
sbb
cmpsb
int3
bound
loopne
jnp
loopne
scas
xchg
cmp
mov
inc
lds
movsb
and
dec
out
jmp
int3
mov
hlt
cmp
ror
leave
jno
mov
fwait
les
shlb
mov
ja
sbb
jnp
and
pop
inc
dec
xchg
lcall
xchg
dec
and
xchg
pop
jecxz,pt
insb
mov
jns
mov
or
rorl
into
mov
lods
sub
stos
int
inc
add
adc
sarl
shlb
jl
sbb
sub
insb
and
pop
cmc
push
int3
push
add
jnp
shll
inc
mov
xchg
repz
ljmp
jne
in
enter
pop
test
xchg
hlt
fistl
jge
addr16
ret
cs
aas
ret
incb
dec
mov
pop
call
shlb
adc
xor
fldl
xor
je
insb
mov
test
dec
pusha
fsubl
enter
sbb
jmp
sbb
fs
lahf
in
mov
sub
adc
sub
jmp
xor
dec
add
mov
repnz
and
dec
mov
shlb
lock
cld
leave
stc
inc
xor
pop
ds
pop
push
fidivl
fstpt
jns
jle
je
lods
lret
lea
pop
bound
int3
in
mov
vpmadcsswd
cmp
and
mov
push
xor
jo
je
xchg
dec
mov
dec
cmpsb
sti
inc
push
inc
pop
xor
jb
cwtl
shlb
nop
scas
mov
ljmp
loopne
aas
mov
fldt
in
fnstsw
sbb
in
sbb
jg
mov
cwtl
cmp
jp
lods
push
cli
sahf
dec
int3
mov
clc
aam
jp
push
add
cwtl
mov
js
mov
cli
js
jle
mov
pop
jle
and
and
mov
imul
xor
imul
jno
mov
lret
add
cmp
popl
sub
jbe
xor
mov
insl
xor
lock
jmp
loopne
test
add
inc
sbb
sub
xchg
xchg
jnp
ret
dec
dec
or
movsb
sbb
sbb
repz
das
arpl
fwait
movsl
insl
mov
mov
pop
adc
jns
cld
dec
add
ret
div
mov
decl
ret
inc
pop
in
sub
bound
int3
jg
fistps
insl
mov
fmuls
out
push
cwtl
cli
fidivs
icebp
push
inc
jecxz
dec
adc
inc
mov
gs
xchg
cmp
hlt
sub
inc
fsubrp
movsb
scas
jg
or
mov
stc
pop
inc
xchg
jmp
and
pop
mov
sbb
arpl
repz
packssdw
aaa
int3
pushl
ret
mov
mov
sub
sub
nop
mov
outsb
testb
xchg
hlt
inc
out
jg
hlt
scas
icebp
xchg
leave
inc
or
js
sbb
adc
repz
fmull
aad
jg,pn
pop
fsubrl
icebp
ret
push
test
dec
mov
mov
lahf
cli
popf
xchg
add
mov
popa
cmp
jnp
cld
sub
cmp
stos
mov
call
sbb
sbb
and
inc
inc
xchg
mov
sbb
mov
les
rclb
aad
sbb
lahf
add
ret
dec
mov
movsl
shrl
std
cmp
or
push
fstl
xchg
inc
lea
lods
mov
add
sbb
rorb
aas
enter
mov
push
inc
dec
add
subl
push
mov
ret
sar
lock
adc
fisubl
mov
aas
rolb
nop
or
inc
daa
jmp
stos
inc
fcoms
mov
ss
hlt
loopne
or
xor
push
test
add
sub
pop
inc
mov
xchg
fiadds
les
gs
cmc
fsubr
cmpsl
out
dec
ljmp
jmp
lods
cli
cltd
hlt
inc
jbe
push
mov
mov
xchg
js
xor
adc
inc
test
or
xor
cmp
mov
test
adc
rolb
fidivl
xlat
and
xchg
outsl
dec
iret
sub
cmpsl
xchg
pop
lock
jg
fsts
std
push
push
bswap
adc
icebp
sub
outsb
dec
sub
movsb
negl
sbb
mov
int3
insb
arpl
popf
gs
cwtl
add
xchg
shrb
inc
inc
stc
notb
aas
xchg
clc
sarb
nop
jno,pn
lret
add
mov
and
sbb
dec
std
cwtl
setp
jo
cltd
and
imul
cmp
enter
add
je,pn
out
inc
hlt
and
sarb
mov
or
jno
jb
add
aad
or
mov
loopne
cmpsb
jecxz
daa
xlat
subb
cmc
cmp
pushf
cmp
loop
lea
lods
jmp
repz
leave
mov
push
add
mov
add
in
inc
nop
movsb
mov
lahf
xacquire
icebp
add
and
inc
push
xchg
in
inc
test
jl
aad
movsl
lret
cs
or
mov
xchg
loope
enter
mov
or
in
rol
dec
sar
pop
inc
jno
sub
pop
or
fst
cmpsl
dec
out
mov
mov
push
loope
push
adc
in
imul
add
cltd
and
movsb
push
or
xchg
inc
xchg
dec
repnz
mov
adc
fldenv
xchg
out
clc
mov
enter
inc
leave
pusha
test
inc
aas
scas
rcl
pop
test
push
insl
popf
jne
movsb
push
inc
jno
cmp
add
and
aas
mov
or
xlat
or
pop
jnp
mov
shlb
cmpsb
cmc
mov
movsl
dec
push
xchg
xchg
or
aad
cmp
sub
pop
pop
cmpb
sahf
pop
int3
addr16
xor
xchg
int3
push
insl
mov
xor
stos
sbb
shrb
in
stc
xchg
lret
cmp
fsts
or
mov
sbb
cmp
jo
das
sub
pop
or
push
push
mov
or
xor
xchg
addr16
lret
mov
out
mov
cs
xlat
push
sub
test
jne
cmp
mov
mov
mov
sbb
leave
push
jle
addl
aaa
pop
stos
push
aam
add
add
or
out
lea
divb
push
jge
sbb
xchg
into
pop
mov
pop
test
adc
loopne
push
dec
push
inc
scas
jle
or
iret
outsb
mov
push
or
ret
jb
xor
xchg
dec
inc
mov
callw
cld
jbe
mov
stos
movsl
inc
mov
mov
mov
push
cmp
cmp
in
or
mov
test
mov
add
notl
sub
shlb
ret
dec
ss
push
mov
lds
movsb
sub
mov
rcrb
fst
pop
test
outsl
xlat
mov
sbb
fnstsw
xchg
rcll
add
sbb
test
mov
push
mull
jnp
in
adcl
incb
andb
xchg
jecxz
inc
ret
xor
lcall
xchg
gs
jp
daa
dec
mov
imul
sbbb
pop
loope
and
icebp
push
jmp
mov
add
inc
lret
roll
mov
lods
add
adc
dec
add
xor
add
sub
xchg
repz
dec
push
int
sub
adc
xchg
xor
push
mov
or
mov
jg
call
pop
sbb
xor
lock
inc
inc
dec
mov
mov
mov
loope
push
jecxz
inc
cmp
push
sub
sbb
xchg
fxam
cld
mov
mov
jmp
xor
imull
dec
rclb
mov
pop
ja
cmp
add
bound
xchg
sbb
pop
lea
or
daa
xor
jmp
xchg
and
pop
mov
pop
shrl
sbb
sti
gs
shrl
loope
fsts
push
clc
inc
rclb
push
stos
push
subb
adc
repz
dec
push
add
sbb
cltd
push
dec
les
pop
pop
sub
cmp
sbb
dec
add
aas
inc
mov
push
andb
stos
adc
sti
sti
fisubl
das
test
inc
stc
xchg
loopne
mov
add
movb
cmp
add
lret
jmp
dec
sub
hlt
xor
push
sbb
arpl
jge
sub
fbld
pop
xor
pop
inc
rsm
dec
mov
mov
inc
in
add
in
sbb
push
sbb
sub
add
leave
int
lahf
cmp
push
add
inc
and
addl
jno
cmc
rolb
xchg
test
cmpsb
jg
xchg
inc
popa
sub
ror
aas
mov
add
jae
fcompl
push
ret
pushf
sbb
popa
pop
mov
pushf
pushf
inc
mov
cld
rorl
es
xchg
inc
xor
rcl
fwait
sub
sbb
js
jle
lea
int3
xchg
and
push
cli
les
mov
aaa
aad
iret
jmp
push
adc
or
in
add
xor
imul
sahf
push
mov
jnp
jp
xlat
inc
das
jmp
popa
andb
xchg
mov
cmp
cmp
push
stc
icebp
cmpsb
daa
add
lods
das
out
dec
insb
loop
sbb
push
stc
add
faddl
lea
inc
imul
mov
dec
xor
pusha
jg
xchg
xor
cmpsl
mov
orb
sahf
lret
sahf
push
in
dec
mov
fisttps
sti
loopne
mov
fdivrs
mov
mov
mov
insb
or
fisttpl
mov
mov
pop
and
repnz
xchg
cli
sub
xchg
cmp
int3
cmp
and
sti
clc
xor
cmp
mov
js
movsb
pop
mov
fcomps
sub
andl
push
jecxz
nop
and
xchg
mov
add
in
push
or
xlat
repz
pusha
add
pusha
sbbb
stos
mov
lret
jnp
or
jno
loopne
inc
stc
jl
orl
iret
iret
pop
iret
mov
int3
repnz
add
std
sub
test
sub
and
sub
shl
fwait
and
pop
subb
scas
jnp
shrl
lods
push
je
inc
or
daa
hlt
test
xchg
xchg
pop
adc
cltd
mov
add
xchg
push
push
ds
sar
inc
mov
push
xchg
jns
mov
pop
into
std
push
mov
pop
dec
dec
int3
aad
inc
mov
lret
jl
mov
insb
and
gs
ret
loope
cmpsl
jo
sbb
pop
jecxz
ficompl
lods
mov
nop
dec
testb
dec
push
and
push
sbb
dec
mov
and
jno
push
test
fadd
pop
push
sbb
xor
in
sub
jmp
movsb
sbb
and
xchg
daa
cmp
xor
inc
mov
aas
iret
hlt
lret
jnp
loope
clc
xor
cmp
push
push
rol
pop
jp
mov
outsb
jl
test
test
inc
xchg
sarl
scas
xchg
add
xor
fldcw
stc
test
or
mov
ja
add
adc
into
xchg
clc
and
sahf
sahf
pop
mov
push
pop
dec
shrl
pop
xor
out
pop
test
push
xchg
mov
loop
int
gs
and
repz
outsl
jnp
lock
mov
dec
shrb
cmp
mov
mov
nop
xor
jns
ljmp
test
mov
adc
cmc
push
xchg
sbb
incb
gs
jle
mov
lret
jne
jns
std
shlb
push
push
cmp
inc
mov
xchg
test
pop
add
rolb
inc
ret
or
cmp
and
push
mov
adc
sbb
aas
out
fs
movsb
xor
mov
daa
or
xchg
inc
and
dec
in
js
lahf
ret
lds
test
jge
fisttpll
fadds
rol
ss
daa
rcl
lods
xor
push
sarl
xchg
repz
mov
adcb
xor
push
push
shrb
cli
mov
inc
inc
dec
clc
outsb
inc
and
push
add
aam
xlat
cmp
adc
adc
mov
mov
inc
mov
inc
test
stc
popa
cmp
in
jmp
sub
fimull
pop
pop
je
mov
inc
notb
lods
mov
jbe
cmp
sub
gs
mov
cmpsb
mov
js
xor
add
pop
orb
repnz
add
add
repz
and
sub
mov
test
jmp
mov
ret
xor
lock
push
test
insb
ljmp
nop
int3
clc
xor
and
orl
mov
mov
imulb
gs
add
pop
push
les
lahf
adc
repz
pusha
inc
and
jg
dec
popf
subb
stc
ror
jnp
stos
jno
jl
mov
mov
std
mov
gs
and
negb
mov
adc
mov
js
xor
or
imul
stc
mov
daa
loope
mov
mov
jl
fmul
adc
jp
pushf
jecxz
add
and
fldln2
push
jg
xor
pusha
jb,pt
out
cmp
push
ds
mov
insl
jge
call
sbbl
inc
mov
and
lods
push
or
lods
inc
je
jmp
or
or
leave
or
pop
ret
cmp
orl
jno
divb
in
inc
loope
aad
cs
sub
adc
int
popf
or
ds
cld
ficomps
mov
out
inc
js
js
stos
in
pop
stos
push
movsb
mov
inc
jnp
dec
popf
dec
or
call
mov
inc
add
cmp
bound
fisttpl
add
lods
jno
push
pop
test
adc
push
mov
negl
insl
xchg
dec
or
xchg
or
movsb
mov
cmc
outsb
xchg
xor
jle
pop
loop
jno
imul
xchg
test
cmp
dec
cmp
aam
pop
aam
mov
fistl
jecxz
cmp
push
mov
add
lods
fisubl
enter
iret
nop
int
dec
into
sub
add
mov
leave
aam
not
adc
fldcw
fstps
push
iret
push
jge
inc
imul
mov
cmc
adc
lret
and
mov
ljmp
addr16
push
popl
sub
jae
cmpsb
mov
mov
stos
pushf
jl
mov
aad
jno
fstl
popa
notb
and
das
js
mov
pop
int3
jo
or
mov
lods
cmp
movsb
in
nop
jae
int
ret
adc
ja
push
ja
xor
test
notb
popl
push
inc
popa
push
int
push
jp
cld
sbb
lret
sub
push
push
pop
cmp
in
test
pop
inc
cmpsl
inc
mov
sub
add
sub
inc
pop
nop
loopne
jb
add
es
lods
mov
mov
adc
mov
jo
mov
cmp
mov
shlb
js
pop
and
or
adc
negl
daa
xchg
pop
dec
adc
ja
xor
fbstp
pushf
xor
or
nop
push
inc
cld
ret
stos
loop
xchg
pusha
or
pop
in
mov
ficompl
or
mov
popa
sahf
push
push
cmova
sub
xchg
lahf
inc
pop
mov
and
out
adc
jno
push
mov
lea
adc
xor
loopne
cli
sub
jo
mov
shlb
jne
loope
aam
push
mov
and
or
mov
pop
nop
in
xchg
push
fiaddl
iret
repnz
lahf
inc
xor
iret
mov
mov
sub
fucomp
mov
mov
imul
loopne
outsl
sbb
into
rcll
adc
mov
mov
loop
stos
aaa
or
int3
push
and
dec
jg
jl
xchg
push
add
adc
in
fwait
pop
je
loopne
inc
lcall
int3
jb
out
lahf
pusha
into
adc
adc
mov
out
lcall
or
in
pop
int
roll
jecxz
add
rcrb
jmp
jle
scas
outsb
cmpsb
lods
xchg
sub
push
clc
sbb
test
mov
mov
js
push
insb
test
mov
pop
hlt
inc
mov
sbb
shlb
push
adc
inc
fiadds
test
add
mov
popf
ret
xor
pop
mov
lcall
jecxz
mov
dec
push
and
movsb
out
imul
xor
pop
jg
in
fidivs
addb
sub
popf
mov
popa
mov
add
mov
test
jg
sub
shlb
bound
jns
adc
ja
sbb
and
idiv
test
mov
mov
fcom
mov
or
mov
aas
ret
cmp
lea
xchg
out
subb
insl
xchg
mov
pop
jecxz
sub
fisubrl
fisttpll
mov
mov
or
xchg
cmpsb
fmul
imul
push
jb
push
cwtl
mov
inc
jbe
sub
xchg
push
loope
adc
cmp
dec
fdivr
dec
dec
shl
xchg
gs
test
jg
mov
cmp
cmpsl
int
scas
inc
enter
jge
fstpt
cmp
xchg
mov
scas
clc
loope
pop
mov
dec
mov
daa
add
cs
sub
dec
std
addr16
inc
imul
mov
loopne
mov
pop
mov
sub
pop
movsb
add
in
pushf
mov
outsb
xchg
insl
daa
popw
insl
imul
scas
sub
adc
adcl
into
jnp
or
push
arpl
pop
jmp
shll
mov
dec
mov
xchg
aas
mov
cmp
data16
movsl
sub
sbb
enter
cmp
adc
mov
xchg
adc
gs
icebp
push
mov
sbb
stos
or
pop
add
out
xor
mov
add
cmp
js
stc
ljmp
dec
std
test
int3
dec
gs
unpckhps
push
xor
cmpsb
insb
sbb
mov
xor
addr16
outsl
xor
icebp
fisubrl
cmpsl
in
push
sbb
js
mov
xchg
inc
jecxz
jl
mov
push
int
add
sub
jmp
movsl
gs
mov
xchg
cld
cmpsb
jae
sub
dec
fsts
mov
or
insb
add
xchg
cli
adcl
pop
inc
jbe
xor
xchg
int
les
es
jmp
sbb
push
enter
popa
orb
test
adc
lahf
sbb
cmp
and
aaa
dec
push
adc
sahf
fnstcw
adc
adc
pop
imul
push
inc
repz
cs
out
jge
push
dec
and
inc
lock
movhlps
push
ret
lods
inc
adc
pop
scas
mov
fnstenv
divb
fsub
inc
cmpsl
add
popa
ja
adc
js
in
and
cmpsl
adc
ds
scas
and
out
xchg
mov
add
xor
cltd
aam
mov
cmc
mov
lret
sbb
dec
shlb
sarl
xchg
out
lods
aaa
mov
xchg
jmp
cmpb
pop
imul
sub
fisubrs
xor
cmp
in
push
mov
outsl
imul
bound
test
daa
or
lods
flds
mov
clc
lret
in
or
mov
das
sbb
pop
out
inc
or
mov
sub
gs
xchg
enter
pop
enter
inc
push
xchg
inc
cmp
mov
mov
fildl
out
jl
jne
sbb
sbb
lea
add
into
xchg
sub
push
loope
rorb
das
and
jl
pop
push
popa
ret
fisubrs
leave
sahf
aad
std
stos
sbb
enter
mov
xchg
bound
mov
pop
enter
fsts
or
push
dec
dec
inc
in
icebp
xor
pop
mov
jecxz
pusha
mov
iret
dec
outsb
jp
mov
or
subl
xor
les
rcll
scas
aam
push
dec
aad
mov
or
mov
add
repnz
mov
lcall
push
into
adc
or
repz
stos
mov
imul
pop
fbstp
mov
stc
sbb
sbb
popa
add
jg
sahf
adc
test
adc
dec
test
shrb
insb
rcrb
mov
mov
je
out
cmp
inc
sarb
mov
popf
lahf
dec
cmpb
into
stos
jg
add
ds
stos
lcall
mov
push
mov
pop
xchg
jnp
pop
push
cs
cmp
mov
les
add
mov
inc
push
dec
mov
cmp
popf
stc
mov
ljmp
or
adc
push
mov
hlt
jns
sub
andl
arpl
in
sbb
sbb
loop
enter
push
pop
jmp
jge
test
imul
ja
adc
adc
fadds
add
lods
scas
pop
sbb
fmul
ret
adc
jae
jmp
sub
enter
adc
and
loop
shrl
in
mov
lret
in
jns
push
and
and
repz
jne
arpl
adc
jnp
loop
push
dec
lcall
fs
jle
or
rcl
insl
mov
adc
xchg
jb
aas
mov
pushf
les
repnz
xchg
add
je
js
jp
jle
add
pop
hlt
mov
mov
or
cltd
inc
adc
into
mov
jbe
adc
fistps
mov
mov
inc
lods
add
adc
pop
cmpsb
or
inc
int3
pusha
cmp
adc
lods
sbbl
or
ror
inc
jns
loope
mov
aas
push
pop
test
jecxz
mov
je
adc
jbe
mov
insb
dec
dec
pop
push
jecxz
mov
test
dec
inc
daa
stos
sar
cmpsl
xchg
negb
sti
aas
arpl
push
mov
loope
push
xor
inc
dec
mov
sbb
nop
xchg
sbb
mov
out
in
jg
ret
shll
add
mov
mov
cmpsl
push
test
sub
inc
push
mov
inc
dec
jle
ss
notb
jp
sbb
insl
mov
roll
mov
test
xchg
add
dec
jno
cmp
mov
fistps
mov
repnz
xor
mov
insl
addb
das
std
outsl
iret
push
sbb
jge
pop
rcll
enter
lods
pop
cmp
aaa
mov
mov
lods
inc
xchg
jg
fsubrs
fists
lcall
dec
jg
jno
adc
pop
push
push
daa
sub
mov
push
xor
ljmp
ret
enter
ja
daa
into
jne
int3
test
lahf
cmpsl
repnz
iret
in
les
jl
pop
cvtps2pd
adc
pop
mov
jbe
mov
xchg
mov
and
out
ret
movsb
pop
inc
les
xor
mov
pop
mov
ficoms
cmpsb
ds
adc
imul
mov
mov
scas
test
add
lods
add
aas
popa
sti
inc
test
xor
iret
or
or
pop
dec
xchg
mov
inc
bound
mov
mov
insb
call
mov
pop
inc
repz
dec
into
mov
jg
cmp
std
inc
mov
adc
mov
addl
or
lods
outsb
shrb
int3
ja
pop
and
out
test
jb
pushf
adc
pop
loop
jg
test
stos
adc
popa
ret
in
xor
adcb
jg
mov
or
cmp
dec
int3
sarb
push
andb
cmpsb
das
push
lcall
sbb
aad
push
stc
xchg
ss
ret
insb
pushw
xorl
dec
push
inc
addr16
inc
mov
jp
sub
sbb
inc
push
mov
sar
and
inc
or
arpl
ss
push
adc
hlt
mov
insl
adc
xor
xchg
aam
arpl
sub
pop
icebp
out
adc
jo
push
ret
pop
stos
lahf
xlat
add
movl
cmp
imul
imul
add
mov
ret
dec
push
fwait
mov
rcl
xchg
loope
push
xor
inc
cwtl
sub
daa
mov
jp
mov
xchg
xchg
in
pop
and
insl
jo
adc
mov
addr16
rcll
pop
repz
les
cmp
cs
xchg
aas
out
fcomip
stos
cmp
mov
into
pop
adc
dec
cwtl
cmp
inc
pop
mov
mov
xchg
loop,pn
fwait
pop
lcall
jge
dec
inc
dec
sahf
adc
jb
dec
lret
in
cmp
bound
inc
in
inc
rorb
xchg
add
lds
and
pop
shl
mov
iret
xchg
movsl
ss
ljmp
shlb
in
aad
ja
pop
mov
lret
jmp
xchg
cmc
or
cwtl
pusha
xchg
adc
add
push
mov
aad
test
and
pop
repz
adc
adc
mov
or
mov
lret
addr16
xchg
or
or
push
sbb
sarb
std
jno
daa
ljmp
pop
testl
addl
adc
out
cmp
inc
xchg
push
xchg
sti
jl
mov
out
movsl
mov
call
sub
ja
mov
inc
aas
jno
dec
pop
inc
out
dec
in
fwait
and
insb
jle
inc
fistpl
dec
lods
xor
xchg
data16
movsl
xor
int
and
fstp
out
scas
jecxz
mov
xchg
shl
add
sbb
dec
add
movsl
fcoml
cmp
call
subl
jnp
inc
outsb
les
lcall
and
aam
clc
clc
pop
stos
clc
inc
and
in
cs
inc
es
push
enter
dec
xlat
xlat
pop
orb
mov
xchg
addr16
fidivs
inc
jo
out
aas
dec
jg
xor
sbb
mov
sbb
mov
adc
out
xchg
dec
and
adc
sbb
fwait
mov
call
mov
outsb
xor
and
in
imul
cmp
mov
into
fs
stc
int
cmpsl
cmpsl
inc
pop
mov
inc
popf
jl
mov
mov
add
out
or
repnz
inc
mov
inc
jl
mov
into
push
ljmp
mov
jbe
sub
call
jge
ret
popa
mov
pop
and
jp,pt
ss
cmp
inc
xor
mov
lcall
popa
dec
sahf
cli
xor
not
mov
jl
mov
lcall
adc
mov
jecxz
int
push
add
call
inc
or
mov
ss
fwait
mov
test
or
mov
or
sub
scas
mov
sub
pop
inc
mov
or
ja
jg
mov
ffree
adc
mov
in
sub
jnp
pop
cmp
cmpsl
in
push
add
jbe
imul
ss
popa
pop
std
popa
nop
arpl
jo
lret
dec
rorl
outsb
xor
inc
mov
enter
adcb
cmp
jne
mov
flds
es
rolb
inc
push
sub
cmp
leave
cmp
pop
addb
mov
int3
add
jp
lock
stos
cwtl
into
mov
sub
mov
xor
xor
xor
xor
daa
out
leave
mov
add
pop
mov
sub
fwait
imul
push
repz
push
dec
popa
sbb
mov
fimuls
xor
push
mov
push
or
jb
push
or
dec
cmpsb
ret
jae
test
sahf
lret
in
out
js
inc
sbb
jl
test
dec
sbb
add
cmpsb
adc
mov
push
xchg
add
pop
push
std
rcrb
xchg
rol
xor
cmc
jns
outsl
xchg
movsb
dec
test
inc
enter
inc
sub
movsb
push
sub
cwtl
ljmp
sub
fidivl
or
xor
dec
in
fisubrs
mov
popf
icebp
inc
jg
cli
push
and
jae
int3
aad
jbe
ljmp
sbb
subb
inc
dec
mov
pop
ficoml
shrb
push
repz
repnz
sti
xlat
rcll
test
jge
xor
add
cmp
xor
movsb
push
pop
rcll
cmp
loope
mov
gs
dec
xlat
dec
xchg
lea
pop
mov
lret
adcl
flds
dec
jmp
inc
mov
pushf
xchg
cli
cltd
out
call
hlt
out
int3
ja,pt
or
sub
cmp
pop
scas
lods
insb
stos
out
mov
mov
lods
xchg
cs
out
push
mov
ret
or
jle
pop
xor
movsb
pusha
jne
or
lock
icebp
hlt
pop
out
sub
loop
shrb
or
outsb
push
lock
addb
loope
jbe
fimull
xor
stos
hlt
in
adc
jl
push
outsl
mov
lock
sbb
insl
popf
mov
mov
std
mov
mov
jecxz
rorl
cmp
cmp
or
sub
push
sbb
arpl
and
clc
and
mov
lds
mov
sub
push
push
mov
add
call
cmp
insl
ss
add
int3
cmpsl
jno
fucom
loope
jns
int
mov
sbb
in
fisubs
xchg
mov
push
lea
pop
shlb
add
and
dec
push
push
aam
scas
ja
bound
pop
fimuls
inc
mov
jb
mov
push
icebp
stos
lret
or
mov
cmp
xchg
popf
mov
push
push
movsl
clc
push
imul
dec
xor
arpl
in
ja
dec
pop
sar
mov
pop
push
jl
cmp
sbb
mov
push
pop
push
jmp
adcb
sub
int3
pop
test
mov
adc
sbb
cmpsb
lret
push
push
mov
rol
sbb
jmp
cmpsb
fnstcw
dec
pop
pop
push
fwait
adc
jecxz
and
push
or
or
jl
and
xlat
ret
add
in
out
cmp
mov
cmpsb
test
cld
mov
mov
fucomi
sub
jmp
aam
or
loop
or
xor
lock
mov
sbb
add
shlb
addr16
dec
add
add
push
pop
test
loop
or
ja
out
adc
cmc
loopne
daa
inc
and
xorl
pop
nop
jnp
cmpsl
pusha
push
or
jmp
add
sbbl
sub
push
push
push
in
sbb
inc
imul
outsb
mov
mov
and
jge
scas
xor
xor
pop
scas
std
push
fadd
aam
lods
xor
mov
mov
jb
xchg
jne
cs
addl
rorl
sub
stos
scas
mov
into
adc
adc
mov
inc
mov
add
stos
push
bound
mov
pop
sbb
int3
push
stc
xchg
inc
adc
popf
sub
aaa
movsb
or
clc
inc
mov
jae
ja
int
imul
pushf
and
and
cmp
cmp
xchg
mov
loop
icebp
pop
xor
pop
imul
mov
xchg
add
retw
xor
add
out
add
xchg
push
loopne
cmp
lcall
dec
pop
mov
fsubs
out
bound
call
stos
ficomps
push
dec
or
fstpl
ds
ja
mov
stos
fistl
sbb
outsl
jl
int3
sub
lahf
data16
push
enter
dec
out
shrb
mov
and
cmp
adc
push
inc
cmpw
push
mov
mov
adc
and
movsl
jge
mov
out
popa
shlb
dec
je
inc
dec
out
ljmp
mov
sbb
sbb
jecxz
mov
pop
fildll
push
xor
roll
addl
call
jne
and
int
sti
jecxz
adc
aas
out
lods
mov
imul
scas
test
push
fsubrl
mov
mov
pop
xor
int3
adc
xlat
jbe
mov
push
adc
fcomps
pop
rolb
scas
rcll
inc
pop
mov
add
sub
mov
ret
and
movsb
stos
add
push
ret
neg
popa
sub
adc
xchg
sti
subl
mov
jg
jb
pop
scas
inc
sub
es
popa
push
sbb
push
lods
adc
jnp
xor
pop
and
out
ret
icebp
pop
es
jb
cmp
rcrb
push
dec
push
mov
jmp
aam
ret
call
xchg
pop
out
dec
push
out
inc
fs
xchg
movsl
mov
add
inc
adc
cmp
cmp
inc
out
lret
pop
mov
ret
adcb
or
je
stos
jmp
jmp
push
adc
int
adc
cmp
cmc
enter
inc
cmp
pusha
or
jge
cmp
push
jmp
dec
std
dec
repnz
xor
sub
scas
cltd
sub
lods
idivb
xchg
adc
push
mov
pusha
mov
xor
sbb
cmp
int
and
xor
arpl
jns
leave
lcall
add
mov
jb
fisubs
sbb
mov
pop
dec
adc
or
ret
sub
jae
lret
push
or
xor
popa
mov
lea
loope
xchg
mov
lahf
nop
dec
cmpsl
adc
stos
pop
sbb
mov
dec
fisttps
fldt
mov
mulb
inc
dec
sub
xchg
pop
mov
stos
in
mov
leave
xor
mov
test
cmp
hlt
or
cmp
add
enter
outsb
or
popf
jns
xor
out
fwait
jo
dec
mov
cltd
into
test
jp
lea
movsl
xor
test
pop
adc
xor
pusha
pushf
mov
sti
movsb
sub
jne
test
cmp
xor
cmc
xchg
lea
dec
mov
cli
std
mov
mov
push
jne
dec
mov
push
dec
ret
xchg
lods
and
orb
je
mov
daa
push
and
outsl
addr16
popf
sahf
cld
push
pushf
inc
pusha
push
or
pop
and
test
clc
jbe
int
scas
mov
sub
mov
cltd
jmp
dec
mov
push
or
scas
mov
dec
sub
pop
cmpb
dec
subl
inc
sbb
jmp
loop
adc
or
push
jae
scas
hlt
add
outsl
mov
pusha
test
es
inc
push
pop
popf
pop
int3
dec
add
mov
pop
das
loopne
xchg
leave
test
dec
inc
repnz
mov
add
mov
or
mov
add
inc
inc
imul
hlt
lds
test
pusha
stc
mov
cmp
xchg
es
in
repnz
xor
int
dec
popa
gs
push
addb
xorb
sub
fnstsw
mov
lret
xchg
ljmp
pop
lret
sbb
repnz
mov
pop
mov
aas
mov
jnp
add
lds
movq
mov
sbb
scas
xchg
sub
mov
leave
aaa
flds
dec
pop
inc
pop
in
sub
mov
daa
inc
sub
test
pop
stc
into
jbe
loope
in
movb
adc
addl
pop
aam
xor
jg
jb
das
pop
in
out
int
movsl
mov
out
test
and
imul
pop
js
icebp
loop
mov
int3
jns
andl
fldenv
xchg
cmp
inc
pop
cmp
xchg
bound
add
mov
cwtl
je
xchg
push
cmp
out
iret
and
push
mov
leave
pop
daa
jp
fisubl
shl
out
ja
int
je
add
mov
xchg
enter
scas
dec
mov
xchg
xor
xchg
add
ja
repnz
mov
std
adc
jl
and
or
cwtl
shll
rcr
mov
mov
mov
leave
ret
shrl
add
cmpsl
or
or
xchg
leave
inc
lods
in
leave
addr16
sub
mov
dec
xor
inc
mov
sbb
out
sub
test
mov
add
pop
test
mov
push
pushf
mov
push
hlt
add
sbb
sub
jb
sbb
ret
mov
mov
movsl
xchg
mov
sub
mov
rolb
dec
cmp
dec
jno
add
cltd
movsb
mov
and
jl
cmpsl
loopne
mov
jg
xor
mov
push
lock
fwait
hlt
pushw
xchg
rolb
adcb
jb
jns
scas
jecxz
inc
xor
lds
addb
data16
gs
or
cli
roll
icebp
jmp
sbbl
mov
out
adc
lods
lcall
pop
movsb
mov
call
pop
in
push
cmp
imul
clc
ficompl
inc
push
in
gs
popa
push
mov
insl
jno
popf
sub
shrb
cmpb
call
mov
cli
lahf
test
pop
cs
aad
lret
sub
cmpsl
clc
mov
dec
into
bound
xchg
lret
ja
add
mov
dec
std
sub
out
js
add
lret
push
cmp
jp
stc
fst
rol
xchg
push
stc
decl
add
lods
dec
mov
lret
cmp
jae
dec
dec
sbb
mov
jmp
movsb
test
js
pop
sbb
fsub
cs
cmp
sub
cmp
adc
fidivs
mov
jae
and
xlat
pusha
fsub
pop
xor
or
cmc
dec
add
mov
ret
lods
push
sbb
xchg
xchg
test
rcrb
flds
testl
cmp
adc
lods
nop
adc
sbb
in
arpl
mov
mov
por
adc
pushf
mov
push
and
cmc
and
jae
inc
imul
mov
jb
xchg
cmpl
sub
mov
or
scas
and
pinsrw
mov
adc
or
repnz
lret
imul
pushf
xchg
nop
adc
mov
mov
ret
aaa
jae
in
pop
rol
xchg
lea
pop
inc
dec
mov
lods
icebp
pop
xor
dec
cs
shll
leave
add
push
fxch
jns
inc
stos
push
pop
inc
push
jle
lahf
cwtl
imul
add
ss
insb
xor
adc
enter
test
inc
push
ror
dec
cmp
dec
jb
call
xor
scas
dec
int
icebp
add
adc
jmp
incb
into
pop
fisubl
dec
mov
add
and
fnstsw
jmp
shlb
fists
xchg
lahf
lret
sahf
xor
jo
sti
cmp
subl
shrb
bnd
pop
adc
inc
addr16
daa
std
data16
into
ret
sbb
inc
icebp
popa
test
push
sub
out
adc
mov
mov
fisttps
mov
inc
sti
arpl
fnsave
jp
pop
mov
adc
push
or
fs
sarb
lea
stos
sbb
test
sbb
js
shrb
pop
sbb
push
adc
or
stos
push
movsl
flds
adc
fistps
popa
bound
lcall
fxch
sbb
mov
mov
and
pop
dec
sub
fldt
stos
xor
sar
mov
sub
adc
mov
insb
mov
jl
int3
xor
jnp
mov
bound
sti
push
lock
mov
add
cli
gs
popa
mov
sub
xchg
mov
imul
inc
cmp
sbb
int
jecxz
dec
mov
push
add
sbb
insl
sbb
inc
jns
aad
inc
jmp
aad
push
cltd
ret
fcmovnb
pop
fstpl
lods
daa
js
push
sbb
sbb
loop
jmp
aam
popa
adc
push
push
ja
int3
bnd
mov
jo
push
push
aas
add
push
ljmp
bound
lcall
outsb
dec
jbe
sub
xchg
fisubs
cld
mov
popa
sti
xchg
sbb
xor
cli
fwait
pop
int
repz
das
movsl
outsl
mov
dec
pop
fistpl
pop
jo
pusha
sub
stos
push
and
stc
mov
push
stc
outsb
push
and
shlb
adc
inc
xchg
int
sbb
call
pop
mov
cmp
out
push
dec
push
sub
rclb
mov
dec
push
test
cltd
mov
and
test
dec
repnz
xor
dec
jmp
lods
mov
in
filds
ss
int3
stos
pextrw
jmp
xchg
lcall
push
lret
clc
loope
mov
test
bndstx
lahf
popa
movl
mov
mov
rcrl
adc
negb
mov
mov
rolb
sub
outsb
mov
daa
push
add
pop
sbb
adc
leave
repz
inc
pop
scas
sahf
or
mov
pop
cmpsl
shrl
ret
js
mov
sbb
stos
fnstsw
je
jle
mov
and
xor
cmpsb
test
clc
dec
data16
daa
cmpsl
mov
pusha
adc
or
mov
cmc
and
mov
imulb
inc
jno
push
inc
jnp
or
mov
faddp
and
xor
sahf
add
sbb
mov
daa
scas
and
mov
movsl
jge
add
jb
push
jns
shll
jo
sbb
lds
imul
ret
je
imul
add
imulb
sub
inc
in
inc
pop
xor
fs
jb
pop
in
into
fadds
xor
add
inc
aam
ds
xchg
sbb
fisubl
test
push
call
mov
sti
cs
or
push
jl
shrb
lret
adc
int3
cmp
and
shlb
popa
in
mov
and
pop
adcl
loop
mov
andl
sarb
xlat
ret
cmp
adc
cmp
cmc
dec
imul
inc
sub
jnp
inc
sbb
cld
outsl
push
mov
mov
outsb
aad
bts
adc
cwtl
leave
dec
sub
pop
or
mov
scas
xchg
ret
lcall
divb
loopne
jno
xchg
xchg
dec
xchg
hlt
repz
adc
sub
jnp
stos
adc
mov
sahf
outsl
cs
sub
cmp
mov
xchg
out
xchg
test
sbb
pop
jle
repz
pushf
iret
int
push
lods
gs
test
mov
mov
cmp
cmpsb
jmp
xchg
roll
ljmp
xchg
loope
add
cli
mov
ljmp
outsb
inc
cmpsl
lret
inc
pop
jno
in
add
pop
ja
jecxz
mov
sbb
cmp
cs
insb
cld
and
and
pushf
movsl
fists
xor
inc
xor
and
test
inc
scas
cmp
js
jl
push
fcomps
imul
mov
cs
jecxz
pop
mov
lods
pop
pop
cmp
out
pop
or
mov
mov
dec
mov
int3
pop
xchg
aam
aas
out
jg
and
inc
pop
mov
fisubrs
popa
push
loopne
int
fildll
pushf
int3
push
mov
inc
cwtl
dec
mov
push
mov
popa
pop
xchg
lret
cmc
or
into
push
into
mov
jns
add
jno
mov
jmp
pop
sbb
lods
mov
pop
pop
stos
lods
adc
shlb
scas
sbb
sub
and
cmp
adc
xor
mov
sbb
adc
adc
cmpsl
or
cmp
mov
push
andl
stos
test
and
cld
pop
or
or
ret
cmc
xchg
loop
push
inc
xor
xor
std
js
ljmp
rorb
inc
rcll
and
inc
sbb
jo
inc
mov
and
jns
push
mov
mov
dec
and
adc
jmp
dec
pop
ret
inc
imul
or
call
mov
push
xor
push
adc
or
pop
and
and
fidivl
add
movsl
stc
add
repz
cmc
or
xor
loopne
fsub
jle
jno
dec
cs
sub
jge,pn
xor
jl
pop
sub
pop
cmpl
fdivr
ret
bnd
and
icebp
jo
orl
scas
add
dec
cmc
rcrb
fcomip
inc
outsl
mov
dec
ds
cmp
lahf
pop
fmuls
and
xchg
xor
les
sbbl
cwtl
xor
xchg
lods
fs
fdivrl
out
iret
xor
xor
sbb
xchg
pop
jo
addl
pop
jo
iret
add
cmpsb
mov
adc
addr16
xor
fucom
mov
and
dec
out
ret
xor
mov
xchg
sbb
pop
cld
or
mov
add
or
mov
pop
inc
jle
js
gs
imul
inc
imul
stc
jp
sub
and
and
sbb
cmc
add
lock
sbb
mov
push
jg
repnz
push
in
and
fs
jmp
cmc
jecxz
sbb
pop
pop
xchg
mov
xor
jg
repnz
xor
cli
pop
lret
test
add
sbb
popf
and
fwait
pushf
push
xchg
add
push
in
in
inc
loop
cmpsl
mov
jmp
xor
bound
ljmp
dec
sbb
push
cmp
push
ljmp
shlb
mov
mov
rorl
xchg
pop
bound
xor
shlb
lahf
xchg
lret
cmp
mov
fdivr
aam
nop
jbe
bound
fsubp
leave
js
cmp
cltd
mov
dec
fcompl
pop
mov
add
add
rcll
adc
rcl
xchg
out
and
cmp
nop
mov
cmp
pop
movsb
inc
cmc
in
fst
push
mov
lahf
inc
inc
xor
ds
jge
adc
gs
test
ret
cmp
push
mov
xchg
add
mov
dec
test
shlb
xchg
or
pop
clc
mov
dec
sub
movsl
clc
xchg
sbb
xor
and
int3
jnp
sub
jmp
xchg
push
ljmp
adc
imul
fsubl
push
push
rcr
jge
and
les
inc
jmp
mov
ret
cld
sbb
pushf
scas
mov
mov
cmp
leave
test
das
sub
lahf
stos
sub
rclb
aas
cmp
xabort
jg
sbb
mov
insb
jge
push
inc
fsubrs
push
push
jo
fsub
and
lret
pop
sbb
or
jg
bound
or
mov
loopne
jno
arpl
mov
sbb
and
mov
add
jmp
std
jge
sbb
push
enter
lock
iret
jmp
out
test
push
and
inc
push
lods
insb
dec
xchg
push
es
loop
popf
addb
mov
dec
enter
sti
aad
popa
inc
popf
lods
repz
imul
push
adc
xchg
adc
xchg
add
pop
dec
jb
fists
pop
inc
mov
lahf
lods
aas
mov
mov
pusha
and
imul
or
sub
add
xor
mov
scas
insb
pop
pop
or
push
daa
movsb
pop
nop
or
call
lods
add
ja
mov
gs
jbe
jae
lret
pop
push
lea
fwait
ss
adc
jb
outsl
mov
mov
jae
pop
xchg
in
add
dec
inc
and
mov
mov
inc
add
enter
icebp
lret
and
gs
iret
filds
dec
or
int
bound
adc
call
shlb
lods
pop
rcrl
dec
pop
jb
imul
leave
in
shrl
in
icebp
aas
xchg
mov
aad
and
mov
movsb
out
jae
sbb
je
cmp
popa
inc
dec
jns
aam
mov
dec
sqrtps
push
rcl
aam
pop
dec
push
test
fsubs
and
outsb
into
pop
aaa
pop
mov
ljmp
mov
xchg
insl
add
or
inc
ja
cli
and
sub
sbb
adc
sub
cmpsl
sub
jmp
insl
inc
ja
andl
iret
icebp
add
adc
stos
inc
mov
in
in
sub
cld
pop
or
and
jo
xor
and
pop
mov
and
xchg
adc
cmpsb
repz
xchg
mov
adc
in
and
xor
jmp
cmp
icebp
and
inc
inc
push
pop
fistpl
add
xlat
ja
dec
bound
inc
sub
enter
test
dec
push
cmp
fistl
sbb
gs
leave
pop
sbb
cmpsb
inc
mov
push
ficomps
in
pusha
jb
scas
pop
cmc
push
mov
xor
inc
orb
cmpsl
push
xchg
into
pop
ljmp
bndstx
fs
mov
mov
lods
push
inc
rorl
sti
and
inc
lds
aad
in
sbb
cmpsl
inc
jns
inc
mov
sbb
imul
push
test
sbb
movsb
int
clc
ret
dec
loop
mov
fdivr
inc
lcall
in
jg
sub
nop
das
mov
in
jmp
jb
xchg
mov
cld
dec
pop
fisttps
add
xor
dec
adc
into
in
lds
pop
pop
and
mov
mov
dec
ret
test
pop
xchg
cmpsl
xor
pop
mov
and
add
insl
jge
fnstenv
aam
add
or
mov
loop
push
adc
cmpsl
mov
lock
pop
pop
mov
pusha
or
jns
sub
enter
adc
xor
shrl
leave
shll
push
xor
sbb
xor
dec
jbe,pt
rol
mov
mov
sbbl
mov
das
leave
int
ss
cmpsb
sub
inc
lods
ret
jl
and
leave
pushf
inc
pop
add
ret
mov
xor
push
lds
jge
daa
mov
mov
inc
cmpsl
xabort
fdivrs
js
mov
aam
aam
pusha
popl
lds
rolb
jecxz
dec
mov
xchg
or
jle
imul
sbb
scas
mov
les
es
xlat
dec
jno
push
arpl
mov
xor
les
rorl
inc
sub
sub
jae
in
arpl
or
sbb
and
test
stos
enter
sbb
mov
jmp
inc
mov
adc
push
popl
push
and
fs
insl
negb
or
sbb
repnz
pop
adc
call
cmp
mov
pop
mov
jl
xchg
dec
data16
sahf
lret
mov
inc
inc
xchg
mov
clc
xchg
ja
iret
xor
add
popa
push
rclb
cmp
jge
or
inc
mov
mov
lds
scas
cmp
repz
sub
mov
shrb
push
jle
inc
jge
mov
cltd
xchg
fiaddl
add
cmc
sub
pop
scas
clc
push
jno
call
loop
lret
push
cwtl
or
mov
xor
mov
out
and
inc
mov
movsl
sbb
negb
pusha
mov
adc
int
sbbl
and
mov
repz
mov
jecxz
push
dec
xchg
pop
scas
shlb
repnz
dec
or
ret
xor
ret
adc
sbb
and
addr16
jb
lods
ffreep
test
add
pop
cmp
sub
jge
ja
ret
cld
test
call
xchg
shrl
jo
ss
fcoml
xchg
cld
repz
aaa
jmp
rcrb
dec
iret
pop
inc
inc
ss
fs
cmc
mov
in
mov
shlb
xlat
mov
test
adcb
enter
mov
stos
dec
ffree
loop
pushl
rclb
push
ficomps
pop
cmp
pop
inc
mov
push
sub
ror
lcall
adc
sbb
std
inc
dec
xor
sub
nop
jp
lock
fnstenv
xor
mov
imul
out
lock
jp
xorb
pushf
pushf
mov
cmp
cmp
repnz
ss
popa
int3
movsb
push
mov
leave
cmp
stos
leave
mov
jnp
mov
inc
mov
mov
mov
cmpsb
pop
push
in
add
xchg
jb
sub
and
hlt
ror
pop
sub
pop
in
jl
add
out
xor
ficomps
push
dec
dec
shlb
mov
jmp
mov
outsl
movsb
add
inc
lods
int3
call
inc
or
and
out
adc
iret
xchg
mov
fcompl
or
inc
in
cli
stc
mov
rcrl
pop
sbb
das
mov
jge
push
hlt
mov
loop
cmp
test
add
iret
and
adcb
jb
mov
fldt
push
shl
xchg
dec
dec
shr
int
jo
jo
cmp
into
add
or
in
dec
rcl
sbb
stc
aam
jge
mov
xor
ljmp
jmp
out
mov
and
cmp
ds
mov
xlat
lods
aas
or
mov
je
outsb
aaa
iret
mov
or
pop
or
lea
repz
leave
jp
xor
loop
les
popa
pop
mov
das
insb
xchg
sar
xchg
fistpl
enter
jle
jge
xor
inc
jns,pn
inc
jge
movl
push
push
lcall
pop
les
sarb
adc
and
push
jle
js
in
inc
outsb
sar
adc
std
sub
dec
lock
mov
push
xor
jno
nop
cmp
sub
popa
cmp
sub
lret
adc
hlt
ja
bound
stc
push
pop
mov
jae
dec
adc
sub
pop
dec
jo
jbe
pop
jne
loopne
mov
insl
adc
shll
push
xchg
pop
lcall
add
addr16
f2xm1
jne
repz
xchg
mov
cmp
stos
hlt
int
pushf
enter
sub
imulb
into
aas
push
ss
loope
pushf
test
lea
in
jle
icebp
in
add
into
je
dec
adc
cs
iret
jl
pop
adc
push
insb
jle
or
inc
or
pop
and
pusha
mov
les
fimuls
xchg
sub
movsl
or
jnp
adc
or
stos
mov
aam
jp
push
lods
push
pop
rcr
xor
loopne
push
adc
aam
xlat
in
mov
popf
stos
sbb
pop
inc
adc
push
stos
fsubs
or
and
and
push
mov
movsl
rorl
sub
test
mov
fidivrl
lcall
repz
push
lcall
lahf
sbb
xor
test
adcb
lahf
lret
lods
leave
fstl
gs
ss
mov
scas
and
scas
iret
lods
ret
orb
leave
push
shrl
mov
push
mov
mov
xchg
fisttps
add
xor
xlat
scas
push
subl
fstl
push
mov
mov
stos
lret
pop
pop
mov
test
inc
jns
jp
fiaddl
push
adc
xor
or
jg
inc
jnp
inc
or
pop
sbb
mov
clc
fbstp
mov
lods
mov
xchg
push
addl
mov
fisubs
mov
mov
fs
pop
insb
stc
inc
xchg
shr
rcl
adc
mov
xor
or
mov
and
outsb
dec
mov
shrl
push
sbb
lea
fisttps
pop
addr16
out
ficompl
pusha
xchg
popa
imul
pop
cmc
mov
mov
hlt
sahf
sub
shl
mov
dec
imul
add
push
out
and
or
jo
enter
add
sub
and
vmread
pop
cld
arpl
xor
xor
xchg
mov
lea
dec
call
and
sbb
arpl
mov
movswl
dec
dec
jbe
inc
xchg
out
mov
movsl
jne
cmp
xchg
dec
and
enter
rcrb
adc
sub
mov
pop
aaa
mov
mov
add
xor
jnp
xchg
inc
adc
std
into
sbb
inc
jb
sbb
add
adc
frstor
data16
movsb
or
rcrl
aad
inc
outsl
push
clc
sahf
and
adc
cmp
pop
mov
clc
push
shl
adc
mov
hlt
mov
dec
mov
push
mov
xchg
xlat
push
jb
push
inc
add
mov
cmp
aaa
inc
inc
mov
push
adcl
and
adc
sub
loopne
mov
out
outsb
leave
dec
mov
lea
enter
mov
fwait
jmp
adc
cwtl
jle
xor
sbb
xor
mov
cmpsb
mov
mov
insl
jg
mov
test
data16
insl
js
jl
and
jno
fistpll
pop
mov
leave
jbe
aad
mov
fsubs
pop
popf
pushf
push
and
xchg
stos
repnz
test
in
test
mov
pop
je
cmp
leave
adc
je
push
pop
adc
add
pop
imul
xor
fbld
fildll
or
orb
mov
les
and
fistpll
jnp
adc
jns
sti
addr16
popa
stos
lret
inc
movsl
fdiv
jle
ret
jns
mov
jnp
test
andb
push
dec
mov
jbe
daa
cwtl
xchg
inc
mov
nop
popa
adc
mov
mov
mov
test
mov
push
das
inc
popa
insb
test
xchg
int
sub
cltd
and
cltd
and
insb
xchg
leave
mov
push
inc
cmpsb
jb
pop
aaa
jns
inc
stos
dec
insl
outsl
dec
nop
sahf
insl
je
insl
push
mov
cmpsb
stc
xorl
and
pop
mov
push
inc
adc
out
ss
dec
cmp
rol
ret
dec
cmp
adc
out
jl
scas
inc
xor
inc
or
jb
lods
sub
ret
dec
or
aaa
stos
out
sti
inc
sub
and
popa
adc
or
sahf
ficoml
jb
sbb
stc
jae
jns
enter
arpl
jecxz
and
movsl
sub
cmpsl
out
cmpsl
pusha
inc
sarl
dec
cltd
je
push
add
adc
ljmp
pop
pop
and
jmp
and
jns
inc
jo
aaa
adc
cmpsl
jge
mov
xor
or
jns
aad
das
pop
xchg
mov
sub
lock
ret
imul
lret
xchg
cmp
lods
inc
in
adcb
mov
lret
pushf
fcmovnb
enter
or
push
or
and
pop
sbbl
dec
hlt
mov
rorb
or
bound
data16
ja
lods
jne
xor
in
xor
and
adc
out
subl
sub
ljmp
repnz
push
dec
fldln2
sarb
ret
add
jmp
add
mov
mov
outsl
inc
xchg
adc
loope
mov
js
imul
or
clc
push
das
xor
loopne
dec
sbb
push
adc
stc
push
fdivrs
enter
and
pop
ret
xor
mov
add
xchg
into
xchg
lret
popa
pop
in
xlat
int3
and
sub
pop
mov
add
sub
call
ss
clc
test
pop
sbb
add
outsb
lret
mov
cli
stos
sbb
adc
inc
rorl
dec
jp
xchg
into
nop
outsb
sti
cmpsb
js
xchg
mulb
repz
xchg
pop
xchg
xor
and
cld
cmc
adc
add
ud0
sbb
scas
push
mov
jnp
daa
jmp
jo
loop
and
xor
cltd
pop
dec
mov
jmp
mov
xchg
popa
arpl
mov
leave
mov
and
mov
out
pop
and
dec
and
dec
testb
lret
cmp
out
inc
leave
push
or
mov
jg
push
test
and
xchg
xlat
leave
pop
data16
data16
test
mov
lods
mov
fidivrl
xchg
sbb
jne
xor
loop
inc
imul
orl
mov
sub
shll
push
test
pop
in
sbb
das
mov
pop
push
ret
adc
push
aam
xchg
testl
xchg
test
sbb
fdivl
fistpl
popl
pop
xor
jb
dec
xchg
sbb
fwait
cmp
into
push
fldenv
lea
xchg
fstl
xchg
or
aas
fwait
xor
mov
jo
sbb
jl
pop
aas
lods
int3
lods
jnp
cltd
mov
lret
mov
in
inc
xchg
inc
lahf
testb
xchg
movsl
ljmp
std
nop
shlb
sti
inc
add
std
lds
test
into
cmp
push
add
lret
push
mov
ljmp
xchg
repnz
js
jp
test
loope
jb
jne
call
push
iret
pop
push
mov
mov
fwait
cmc
sbb
sbb
mov
inc
add
in
fnstcw
bound
mov
pop
leave
mov
mov
aaa
and
push
xchg
test
push
inc
sarb
into
js
pop
xchg
pop
mov
hlt
into
mov
mov
loopne
xchg
in
xor
pop
aam
dec
mov
jo
xchg
shl
mov
ret
pop
fnstsw
out
es
insb
sub
inc
imul
or
mov
inc
mov
jecxz
lret
or
dec
add
or
dec
lret
add
enter
pop
lcall
xchg
push
pop
lcall
fcmovb
add
mov
cld
ja
xchg
ret
in
adc
movsb
add
and
sbb
jb
fiaddl
mov
stc
xchg
gs
cs
cli
jno
icebp
inc
sbb
cli
outsl
pop
sub
outsl
xorb
lock
inc
pop
sbb
out
mov
into
aas
inc
push
pop
xchg
std
pop
push
cltd
jo
subl
lretw
aaa
and
shll
xlat
mov
scas
popa
mov
or
aaa
int3
test
cld
dec
fimuls
sub
mov
cmp
push
pop
rcll
movsl
cwtl
mov
cmc
fwait
mov
and
xchg
iret
sbb
int
sbb
clc
dec
and
mov
pop
cltd
cli
out
lea
fisubl
xor
std
dec
push
gs
stos
mov
addr16
mov
imul
hlt
and
test
cmp
mov
pop
sbb
or
fst
pop
shlb
sbb
outsb
push
outsb
dec
xchg
add
push
in
or
dec
fsts
jecxz
mov
inc
push
mov
lods
cmp
mov
cmp
mov
mov
and
jbe
jmp
les
enter
daa
push
pop
test
mov
push
stos
cmpb
fwait
pop
jns
leave
enter
inc
cmp
aaa
sbb
xchg
jo
fisttpl
mov
mov
cld
mov
dec
into
enter
mov
movsb
test
push
cld
mov
dec
sbb
or
iret
inc
cs
push
hlt
sbb
cs
outsl
rclb
sarl
push
and
mov
cmpsb
and
cmp
addr16
xchg
dec
fmul
jge
enter
dec
cli
sub
fldt
mov
xchg
mov
or
rorl
inc
xlat
int3
aam
outsb
and
inc
cmp
outsb
or
mov
pop
cmpsb
repnz
xchg
sbb
inc
push
sbb
mov
fstpt
loopne
leave
data16
imul
sbb
dec
je
xchg
test
jno
jae
or
push
sub
pop
xchg
movsl
and
cmp
mov
pop
arpl
sbb
push
es
into
sbb
mov
stos
mov
push
inc
and
daa
pop
jb
inc
jae
test
lods
inc
mov
ret
adc
loopne
hlt
and
mov
sub
movl
cmc
movsl
cltd
xor
dec
das
ljmp
xchg
gs
push
cld
or
push
xor
mov
xchg
fisubrl
ds
sahf
insb
xor
sbb
fmull
insl
ss
mov
enter
mov
out
xlat
std
push
or
push
ret
mov
add
xchg
fildl
jl,pt
add
icebp
xor
mov
cwtl
mov
mov
fistps
jae
adc
push
leave
fstpl
push
mov
cmp
pop
jae
mov
movswl
sbb
ret
pop
push
or
mov
jle
mov
cmp
mov
sub
scas
sbb
sarb
xchg
pusha
rolb
loope
imul
mov
adc
fdivr
and
jo
ljmp
xlat
arpl
dec
pop
pop
iret
or
sub
movsl
ljmp
es
adc
push
shrb
adc
mov
ret
in
mov
ret
and
ja
xor
outsl
jg
mov
xchg
add
movsl
clc
ljmp
adc
pusha
sahf
sub
pop
pushw
test
jecxz
mov
mov
nop
pusha
popa
xchg
in
daa
aas
mov
cmc
and
outsl
test
jbe
mov
add
cld
mov
inc
add
das
clc
jecxz
roll
mov
push
nop
mov
mov
dec
imull
mov
push
outsb
push
shl
popa
cmc
push
sub
xor
cld
jb
push
xacquire
lcall
int
push
jns
mov
stos
imul
cmp
icebp
adc
sub
sub
add
xchg
xchg
jle
xchg
mov
mov
dec
jmp
loop
pop
pop
rcl
stc
xor
jg
mov
inc
dec
aas
sub
sbb
pop
cld
fwait
dec
or
pop
xorl
int
lods
lcall
jno
int
or
sbb
xchg
clc
push
outsl
fiaddl
clc
sbb
sub
nop
or
outsl
xchg
jl
mov
mov
pop
std
and
xor
push
xor
pop
data16
sarb
jbe
jno
addr16
adc
int3
inc
loopne
out
push
dec
push
inc
push
pop
xor
ja
fsubs
xlat
inc
mov
and
inc
addr16
loopne
call
ret
popa
fidivs
mov
cld
jb
jne
xchg
cmp
cmpl
mov
sahf
add
xchg
lods
call
jns
jae
inc
rol
pop
jb
popa
out
push
dec
nop
push
inc
add
inc
movsl
sub
mov
iret
sarl
fdivl
inc
sub
pop
in
ret
push
pop
cmpsb
outsl
xor
imul
xchg
inc
mov
idiv
into
jno
adc
adcb
pop
lods
pop
repz
ja
es
jbe
leave
movsb
jnp
mov
sub
inc
lcall
ds
and
and
push
adc
sub
push
mov
dec
fildl
jns
stos
push
inc
imul
pop
repnz
mov
or
clc
add
das
out
mov
pop
and
xchg
jle
rcl
xor
ret
out
out
and
in
leave
stos
xlat
inc
dec
enter
push
jae
mov
sti
loop
imul
mov
cwtl
adc
push
pusha
enter
xchg
clc
jae
out
jecxz
scas
scas
jge
lret
divl
xor
push
sbb
pop
les
add
cmpsb
xchg
push
or
mov
xor
js
mov
sbb
lods
or
shll
lock
frstor
int
or
or
into
mov
jae
jb
adc
sar
not
adc
cmp
jo
lahf
fidivs
xlat
or
pop
in
cmp
inc
mov
imul
cmp
mov
fs
insb
in
and
xchg
cmp
mov
test
push
or
imul
outsl
stos
mov
mov
scas
cmp
or
popf
jg
mov
lea
mov
mov
mov
jmp
push
aaa
cmp
fucom
aam
and
add
in
mov
sub
inc
push
lods
enter
gs
jne
stos
pop
lods
mov
jmp
cli
push
inc
jbe
cmp
psrlw
inc
inc
in
repnz
inc
cld
test
sahf
jecxz
sub
enter
mov
fwait
inc
int3
xchg
sahf
fs
fistl
sub
sahf
xchg
aaa
lods
adc
push
movsb
lods
xchg
xor
pop
and
in
mov
lods
inc
mov
pop
add
popl
out
fnstsw
push
dec
scas
int3
xlat
dec
out
rcr
adc
inc
pop
fiaddl
sub
iret
and
into
jnp
mov
jle
cli
sbb
sbb
nop
fcmovnu
cmp
inc
aas
insb
int
mov
inc
in
dec
mov
fidivl
jns
mov
aas
inc
push
mov
lea
jns
loop
dec
mov
sbb
add
and
into
dec
loop
lock
stc
arpl
pop
mov
and
cwtl
hlt
inc
lret
xchg
sub
push
add
cli
push
jae
sarb
xchg
xor
mov
sar
dec
inc
sahf
sub
movsl
cmp
push
lret
jle
push
adc
pop
pop
sub
pop
or
aad
cli
push
push
and
sub
shl
or
inc
mov
out
xor
cmc
xchg
fwait
xchg
outsl
sub
mov
in
les
inc
xlat
lret
sub
fwait
bound
je
in
ja
inc
mov
cltd
push
dec
inc
jo
sub
bound
ror
and
test
stos
fisubrs
pop
pop
mov
inc
mov
adc
push
push
dec
adc
cmpsb
scas
movsb
add
jbe
xchg
in
pop
sbb
cmp
fdivl
into
and
mov
push
sbb
fdivrl
add
sbb
push
mov
xchg
jl
fdivrs
ret
xchg
xchg
cmpsl
push
js
mov
push
cs
mov
or
stos
jnp
mov
mov
jmp
scas
jns
mov
xchg
jl
xor
mov
mov
or
xchg
push
and
xchg
cmpsl
jnp
imul
inc
xor
roll
callw
mov
sarl
add
push
sub
js
dec
adc
scas
jecxz
xor
loop
xchg
scas
test
cmp
add
cs
in
mov
xchg
aam
popa
pop
cmp
fwait
add
mov
cmpsb
cmpsb
cmpsl
and
fldcw
sbb
test
push
loopne
mov
dec
pusha
call
inc
mov
testl
pop
int3
add
in
jnp
test
mov
dec
hlt
mov
add
shlb
inc
jo
test
lods
inc
ljmp
add
jg
bound
mov
xchg
jnp
cmp
pop
arpl
inc
and
cmp
mov
or
dec
je
sbb
mov
and
cmp
mov
adc
sub
leave
jp
stos
xor
and
inc
lret
test
mov
mov
leave
or
dec
mov
ja
sti
js
sbb
leave
jl
xchg
jo
jg
clc
xor
loop
mov
arpl
xchg
shrl
clc
cmc
cmp
shll
popf
mov
testl
insb
mov
or
xchg
fdivs
add
xchg
dec
adc
pushf
lock
cmp
cltd
rcll
loope
jns
xchg
cwtl
pop
jge
inc
mov
mov
jno,pt
or
stos
inc
fidivrl
enter
enter
push
mov
sub
icebp
lahf
sub
rcrb
adc
rcl
mov
jno
test
dec
lcall
movsb
or
or
test
call
out
lret
push
leave
add
lods
dec
mov
or
and
popa
pop
scas
jbe
je
lods
popf
xchg
dec
adc
inc
dec
lahf
mov
mov
pop
add
jo
daa
in
js
hlt
nop
std
xlat
jb
jns
push
in
fsub
cs
rep
pop
adc
fisubrs
dec
adc
inc
jge
jae
negl
jns
inc
and
jle
dec
mov
mov
es
or
in
jbe
imul
bound
and
test
adc
pop
inc
mov
mov
popl
xor
push
jmp
inc
sub
fldcw
int3
jl
adc
or
cmp
dec
cmpsb
jae
dec
pusha
jecxz
xor
mov
lock
jp
ljmp
mov
arpl
push
es
imul
adc
dec
and
lods
jnp
mov
icebp
imul
dec
inc
ja
scas
addr16
fsubr
fdivrl
shlb
mov
lcall
outsb
cli
aaa
rsqrtps
jnp
cwtl
out
push
mov
mov
mov
test
flds
cmpb
inc
repz
jge
stos
fisttpll
xchg
sub
addr16
add
fcoml
pop
xchg
fs
and
sub
lcall
ficomps
mov
xchg
sbb
inc
repz
fsubrs
addr16
xchg
test
xor
add
std
cmp
sub
ret
test
data16
add
and
jns
add
mov
hlt
cmp
or
das
jge
jecxz
cs
jo
push
xchg
push
stos
inc
test
insl
xchg
adc
cmp
sbb
pop
fwait
cmp
pop
cs
repnz
loopne
jle
pop
cmpl
pop
or
scas
pushf
jno
out
lds
out
add
mov
js
lcall
inc
inc
pop
icebp
rolb
roll
dec
adc
jns
jl
add
sar
in
mov
cmp
and
sub
inc
xchg
mov
and
aas
and
rorb
loope
dec
jmp
pop
clc
pushw
inc
dec
shl
dec
pushf
jns
outsb
mov
clc
in
jg
stc
and
mov
mov
js
andb
xchg
es
cld
jns
scas
dec
stos
xor
pusha
jp
push
and
mov
dec
push
repnz
and
cmp
stc
jnp
jne
pop
adc
cmpsb
dec
stos
cmc
fwait
add
loope
cld
xchg
stos
stos
mov
and
mov
cld
insl
in
mov
leave
orl
hlt
in
dec
cmp
stos
stos
ret
jbe
xchg
mov
sub
popa
add
gs
pop
mov
lret
mov
loope
lahf
push
push
sbbb
add
movsb
jo
mov
aam
jb
fistpl
inc
xor
xor
aad
popl
shr
sbb
or
cwtl
push
arpl
xchg
mov
mov
jecxz
fldpi
popf
push
add
sarb
xlat
adc
sar
test
fiadds
insl
sub
sub
out
mov
stc
pop
lahf
sub
inc
add
pop
jecxz
shl
lock
call
mov
icebp
movsl
push
cld
sbbl
aas
pop
repnz
xchg
and
pushf
dec
out
ljmp
arpl
shr
inc
pop
fistl
push
sub
lret
mov
sti
in
fcompl
dec
lret
pushf
clc
in
or
xor
repnz
inc
ret
sbb
mov
push
mov
mov
loopne
add
shlb
cmp
les
and
sbb
movsb
lods
pusha
inc
jmp
push
test
std
rcrl
lret
pop
sub
fiadds
xchg
cmp
les
rorb
mov
xlat
lret
cmpsl
mov
cmp
loope
jo
scas
and
nop
push
lods
xchg
mov
test
lret
rorb
xchg
adc
daa
cmp
push
cmp
adc
xchg
xchg
outsb
pop
or
add
test
out
aas
lds
and
mov
ret
mov
popa
dec
cltd
lcall
xor
roll
data16
mov
scas
push
aam
popa
out
xor
jge
and
sbb
in
loope
hlt
cwtl
and
insb
cmpb
inc
jle
jle
cwtl
test
jg
mov
rcll
cmp
sub
xchg
sub
dec
xchg
xchg
mov
pop
mov
mov
sub
adc
sub
mov
dec
mov
pop
adc
jg
mov
pop
jns
scas
mov
movsl
pop
es
popa
jo
nop
inc
mov
pop
jl
lcall
fsubr
andl
insl
shl
sarb
mov
jge
rcrl
dec
jae
mov
sub
or
shll
fdiv
sub
mov
idivb
xor
aas
pop
mov
xor
xor
xchg
or
enter
push
push
test
mov
xchg
inc
or
and
mov
xor
dec
mov
pop
repz
xchg
nop
lret
sub
add
dec
push
mov
jl
and
mov
je
fcmovnb
dec
cmp
push
popf
movsb
imul
int
pushf
adc
andl
aam
fnstcw
addr16
mov
and
cli
fsubrs
popa
mov
cmp
xchg
jl
mov
iret
xlat
adc
and
repz
insb
cmpsl
cmp
push
in
add
sub
xchg
and
mov
mov
push
dec
adc
pop
and
adcl
in
and
jg
mov
lcall
and
les
push
mov
adc
jb
jb
stos
and
dec
ret
inc
fimull
data16
mov
es
pop
ds
push
test
das
cwtl
xor
mov
xlat
testb
mov
pop
das
lahf
dec
mov
xor
jmp
jb
push
lcall
int3
movsl
sti
cltd
nop
icebp
aas
cmp
out
test
leave
popf
jno
sbb
pusha
jnp
in
cwtl
mov
mov
hlt
fs
jns
dec
jg
clc
inc
or
lahf
sub
aas
jae
es
cwtl
stos
ss
mov
jne
cli
cld
cmpsl
fwait
loope
sub
mov
je
cmp
dec
fimull
sub
ja
popf
mov
add
inc
mov
add
ret
incb
cmp
fs
inc
dec
xor
imul
jno
push
scas
xchg
aas
pusha
mov
inc
xor
adc
mov
push
popa
xor
in
aas
in
loopne
sbbl
rolb
cmpsl
add
sarb
sub
add
movsb
and
lods
lcall
scas
xor
mov
and
jl
jecxz
aam
dec
cmp
xor
aam
mov
jl
cmp
pop
dec
jb
clc
shll
scas
jp
iretw
mov
cmp
xchg
jl
mov
xor
add
ficompl
movsb
mov
push
add
push
cmp
lock
inc
push
jno
push
pop
xchg
rcrb
push
fisubl
pop
inc
gs
cmp
xchg
pop
test
aas
testb
mov
mov
inc
dec
ficoml
jne
inc
push
and
js
mov
pop
cltd
and
std
xchg
shlb
mov
and
loope
xchg
dec
ret
mov
and
pop
loope
pop
xor
sbb
xchg
lret
jb
cs
sbb
or
popa
fisttpl
mov
inc
imul
mov
pop
das
inc
jge
clc
sub
fidivs
add
jo
sub
bound
ds
or
jl
into
or
imull
mov
out
icebp
cmp
adc
inc
lea
out
xor
mulw
jne
icebp
out
cmp
jp
lods
shrl
and
sbb
pop
cmp
xchg
filds
outsl
dec
cs
fcos
and
push
fwait
pop
ja
call
fwait
daa
sarl
cs
sbb
aad
ljmp
paddd
cs
jne
and
push
xor
mov
cld
aam
sub
shlb
sahf
jno
fisubrl
andb
cmp
test
push
cmc
roll
int
inc
test
out
mov
inc
cmpsl
mov
mov
mov
bound
xor
jecxz
rclb
data16
or
mov
xchg
mov
jg
dec
popf
movl
into
push
test
data16
cmp
notb
das
sbb
jns
mov
push
not
test
dec
mov
xchg
cmpsl
in
mov
in
xchg
ret
mov
in
aas
cmpsl
mov
iret
dec
test
dec
fwait
add
gs
je
rclb
sti
scas
test
mov
mov
ja
and
stos
call
aad
push
dec
je
sbb
dec
sbb
hlt
mov
imul
sub
add
lods
add
mov
into
scas
push
out
imul
mov
and
aam
xor
xchg
cmp
adc
mov
loopne
inc
rclb
pushf
cld
fprem
mov
test
ret
cmp
fcomps
mov
sbb
mov
pusha
ss
test
mov
xchg
push
dec
aad
mov
inc
into
cmpsb
pop
lcall
negb
nop
cld
pop
cmp
lds
dec
add
aas
xchg
inc
inc
imull
nop
lods
movb
sbb
subl
pop
out
or
pushf
push
dec
push
test
rolb
add
das
pop
or
fld
mov
out
mov
xchg
xchg
fnstenv
cmp
mov
mov
push
or
xor
inc
push
idivb
testb
fldenv
xor
mov
scas
xor
mov
std
jb
pop
jne
lods
jmp
add
lock
sub
adc
leave
fdivs
add
jge
andl
xchg
sbb
jmp
xchg
and
add
popa
xchg
cmp
xchg
or
movsb
and
or
mov
inc
popf
jns
mov
xchg
adc
push
mov
mov
arpl
outsb
in
adc
pop
sub
arpl
shlb
push
dec
loopne
adc
inc
stos
iret
inc
cmp
and
dec
or
loope
add
lds
mov
lods
mov
ljmp
into
pop
add
ss
add
inc
add
mov
adc
xchg
mov
cmp
fstpt
ss
call
dec
jne
and
xor
in
xor
dec
lcall
in
cmpsb
inc
lret
loope
fs
movl
test
cmpsb
push
mov
sbb
dec
xlat
mov
cwtl
stc
out
cli
lods
scas
push
mov
mov
repz
fidivl
lock
dec
cmp
pop
pop
sahf
in
test
mov
pop
jne
add
insb
or
imul
adc
dec
es
aam
ja
mov
arpl
scas
xor
mov
and
les
sbb
jnp
ja
inc
test
imul
repnz
bnd
mov
movsl
sub
xlat
sti
or
subb
lods
mov
std
leave
mov
int
add
gs
cs
mov
dec
lods
gs
test
int3
cmp
dec
mul
addr16
push
imul
xor
inc
jle
mov
add
adc
imul
sub
lret
pushf
add
cmp
or
and
jl
stos
xchg
cmpsl
push
out
movsb
lret
lock
aam
push
std
push
dec
xor
inc
add
push
mov
aas
cmpb
mov
stos
sub
hlt
push
mov
or
mov
das
icebp
ret
dec
repz
xor
pop
xchg
or
mov
mov
lods
or
daa
out
fwait
push
sbb
rcrb
push
fsubp
jnp
stos
ja
inc
sub
bswap
jno
inc
and
inc
dec
push
push
or
iret
orl
daa
xchg
fldl2e
pop
cmp
insb
std
out
jb
or
jns
pop
popf
jg
test
dec
mov
bound
inc
xchg
lret
sub
movsb
in
pop
loopne
clc
pop
pushf
jl
inc
lods
stos
leave
insb
mov
out
inc
add
lcall
mov
arpl
hlt
fstpt
mov
cmp
or
and
push
insb
fidivrl
fcmovnu
push
aas
stc
mov
repnz
std
lahf
inc
add
sub
xlat
sbbl
xchg
test
cmc
adc
jmp
roll
mov
andb
push
dec
xchg
pop
mov
jecxz
jge
and
loopne,pt
movsl
or
shll
cmp
xchg
cld
xor
movsb
push
aad
insl
popa
jno
inc
dec
jne
gs
sub
sbb
cld
add
fxtract
mov
inc
xorl
dec
movsl
adc
sbb
fisubs
push
scas
pop
lcall
jb
mov
cmpsl
and
bound
xchg
push
test
mov
adc
mov
test
icebp
subb
sbb
enter
mov
test
popa
js
or
cmp
aad
stos
mov
pop
sbb
xchg
sbb
push
and
fldcw
sbb
ret
sub
ret
sub
mov
dec
or
int3
dec
cmpsl
scas
lret
sub
pop
adc
sbb
sub
shr
inc
inc
pop
sbb
insl
xor
cli
jbe
das
dec
xchg
gs
xchg
jmp
loope
fsubl
push
jge
and
test
xlat
int3
fcomps
scas
sub
int
mov
lods
and
pop
loopne
dec
mov
xor
repz
mov
pop
mov
outsb
xchg
fldt
shlb
leave
sbb
hlt
aad
pop
repz
xchg
jne
faddp
enter
add
jmp
push
mov
xchg
mov
add
and
out
mov
outsb
push
mov
dec
and
xchg
aaa
add
cmp
push
std
rcrb
fbstp
mov
sbb
fwait
lret
inc
enter
adc
inc
jle
daa
imul
inc
cmp
jno
fisubrs
dec
scas
cmp
pushf
xor
outsl
and
ss
addr16
jae
shll
adcb
popa
filds
mov
cwtl
and
ja
fmull
aam
xor
xchg
fmul
adc
inc
ret
xor
push
enter
push
dec
jmp
inc
xor
pop
loopne
add
cmpb
inc
mov
xchg
pop
inc
pushf
add
ja
js
push
scas
lods
pop
xorb
imul
hlt
test
arpl
or
popa
sub
xchg
mov
les
mov
orb
jae
imul
popf
sbb
inc
lret
adc
aas
out
and
lock
out
inc
leave
ljmp
push
movsl
adc
jne
sbb
in
mov
or
data16
mov
adc
push
mov
sub
addb
fstps
dec
or
mov
mov
jge
xor
add
movsb
cld
call
ds
fwait
in
push
dec
mov
adc
scas
negl
fldt
int
flds
ljmp
or
lret
xchg
cmpl
outsb
jbe
shr
jae
nop
inc
popf
fbstp
xor
jnp
fwait
push
pop
stos
in
or
push
shrl
lahf
xor
or
sub
fisttpl
pop
sbb
pop
sub
adc
cs
or
cmovle
test
popf
mov
adc
imul
popf
jecxz
mov
pop
sub
int3
pushl
adc
sbb
dec
pusha
mov
mov
int3
in
inc
fisttpll
push
cmp
add
outsl
sub
add
mov
shrl
or
cmp
lds
jl
xor
sub
pop
mov
lcall
sbb
jle
fisttpll
pushf
and
imul
lret
int
jge
bound
add
adc
fdivrp
pmaddwd
inc
jecxz
addl
lock
ret
and
cmp
pop
jbe
cvtpi2ps
cltd
mov
data16
xlat
shrb
fwait
lcall
jne
jge
cmp
mov
mov
in
in
jmp
cs
add
add
sbb
jmp
test
adc
mov
in
lahf
leave
add
movsl
out
ljmp
arpl
pop
scas
adc
js
inc
xor
xchg
add
in
andb
push
or
add
addb
gs
cmp
push
push
pop
gs
outsb
cmc
cmp
scas
inc
cmp
push
sub
inc
loop
add
lea
cmp
ret
call
cmp
push
lods
imul
or
cmpl
mov
imul
inc
mov
out
mov
lahf
push
stos
cmp
sub
or
stos
mov
add
int3
bnd
jo
aaa
lret
imul
mov
adc
adc
in
cmp
xchg
add
mov
daa
mov
aaa
mov
xchg
ret
popa
sub
lahf
xlat
shll
sti
or
or
outsb
lahf
mov
cmp
insb
mov
cmp
jnp
sarb
sbb
xlat
iret
movsb
in
stos
pop
mov
imul
lret
mov
repz
add
imul
fs
fnsave
mov
mov
mov
add
inc
cs
cmp
inc
cwtl
sbb
pop
gs
mov
add
lods
addr16
enter
pusha
or
in
arpl
fstpt
fisttpll
test
ret
aam
sub
pop
movsb
orb
mov
lods
std
adc
mov
jne
mov
mov
jno
loop
orb
sti
stc
jae
xor
dec
jb
mov
sub
pop
fistps
xor
movsb
push
cli
data16
cs
pop
bound
xchg
push
mov
dec
xor
mov
fisubrs
or
push
xchg
push
and
pop
jg
mov
mov
mov
fsubs
std
sbbl
pop
pusha
add
test
or
mov
jp
sbb
push
cmpsb
fildl
cmp
and
aas
lcall
dec
xchg
sahf
adc
push
aas
cld
pop
pop
mov
jnp
mov
push
in
shr
out
jo
cmc
pop
insb
in
cmp
adc
xor
pop
jge
jmp
gs
pop
fisubrl
xchg
pushf
test
and
addr16
cs
push
lret
add
mov
stos
and
loop
addr16
or
scas
pop
pop
test
dec
int3
hlt
call
jo
sahf
aaa
xchg
cmpsb
and
inc
je
cwtl
mov
repz
cmp
push
lods
decb
xlat
inc
push
lods
fs
ror
es
dec
xchg
lret
or
lea
push
fidivs
adc
mov
enter
push
es
xor
and
fninit
and
das
cmp
stc
push
insl
sbb
and
inc
in
jle
lods
sbb
in
negl
push
mov
ficoms
inc
out
and
xchg
jmp
cmp
jns
dec
int
int
or
lods
stc
in
loopne
add
scas
mov
add
pop
push
lcall
shlb
fnstsw
mov
ja
or
shll
pop
int3
mov
sbb
pop
fistps
or
fwait
test
add
aaa
mov
imul
testb
jae
movsl
pop
shlb
popa
push
mov
mov
test
inc
cwtl
pop
fimull
cmc
adc
jl
and
cmpsb
cmp
lret
arpl
jle
int3
push
sarb
fmull
sarb
aas
int
mov
call
nop
xchg
mov
add
out
push
push
mov
negl
ret
mov
sahf
push
cmp
lahf
das
out
push
movsb
out
or
pusha
mov
mov
jb
sarl
jmp
fiaddl
jnp
and
add
dec
or
aaa
push
mov
xchg
pop
mov
adc
push
addl
sub
mov
cmp
adc
fildll
jecxz
mov
xor
shll
dec
jl
mov
std
xchg
dec
or
inc
repnz
mov
lea
adc
mov
mov
mov
arpl
or
sbb
adc
xchg
push
cmp
xchg
pop
sub
push
and
and
lahf
xorl
mov
shll
jle
dec
or
in
xchg
dec
pusha
add
dec
xacquire
shrl
push
sub
dec
jno
push
dec
or
addr16
scas
sub
pop
test
xor
gs
sub
dec
cli
mov
lret
das
xchg
xchg
cmp
adc
frstor
xor
test
ljmp
addr16
bound
sub
les
pop
inc
dec
push
in
xor
jle
movb
stos
inc
dec
lret
popf
popf
and
and
dec
sub
shr
repnz
mov
or
cltd
mov
jnp
adc
push
rorb
mov
pop
inc
jae
sbb
xor
and
lock
xor
add
cmp
frstpm(287
or
jl
das
fwait
loopne
sub
fsubr
fisubrs
xor
jl
loope
dec
int
mov
xchg
loope
out
stos
insb
sbb
adcb
mov
rclb
push
lods
xchg
or
in
test
inc
hlt
adc
jmp
rorl
sbb
dec
inc
add
pusha
xor
mov
lds
mov
jmp
adc
pop
push
add
and
pusha
pop
jp
lods
ret
add
fsts
jbe
xor
pop
mov
sub
leave
dec
out
adc
cmpsb
ljmp
ds
fdivr
bound
adc
and
test
cs
lods
mov
shll
lret
ror
jns
push
cs
cmp
adc
ja
mov
mov
cld
jge
cld
loopne
pop
lods
pop
int
or
sub
and
pop
pushf
cmp
mov
add
repnz
lret
mov
cmp
insl
push
mov
hlt
ss
sbb
ds
shlb
lahf
in
or
inc
lock
add
jp
mov
adc
cs
int3
pusha
or
in
les
xchg
add
sub
cmp
xlat
sahf
es
cmp
gs
push
movsl
mov
xor
add
push
adc
arpl
ret
jo
xchg
xchg
pop
rcll
mov
xchg
push
sbb
sub
adc
es
pop
outsb
inc
jp
pop
jae
mov
popf
stos
mov
xor
lds
sub
imul
cmp
les
mov
cmp
scas
mov
pop
arpl
movsb
lret
pop
dec
pop
sub
imul
sbb
and
mov
incb
cmc
lds
sub
xchg
rol
or
outsb
sbb
and
js
adc
add
test
mov
or
das
push
fs
xlat
mov
pushf
loope
popa
mov
in
cmc
inc
add
shl
rolb
mov
jnp
xchg
mov
mov
addr16
push
jmp
scas
in
jle
mov
mov
subl
adc
loop
sub
xchg
jne
mov
cmpsl
push
add
ret
mov
sbb
ss
xchg
push
push
and
pop
cli
adc
loope
or
pop
jge
pop
int3
or
pop
xchg
test
add
cmp
mov
push
or
mov
xor
sub
dec
sub
ret
cld
xor
rcrb
cmp
mov
dec
push
add
mov
loopne
or
pushf
add
adc
in
aad
cli
lea
xor
testl
cld
fiadds
mov
xchg
adc
shrb
cwtl
mov
jle
mov
je
ds
mov
cwtl
sahf
pop
cmp
outsl
shll
dec
xchg
popf
ffreep
cmp
push
lahf
xlat
xlat
insl
hlt
sub
and
xor
cmp
and
das
or
jae
and
jge
and
jno
dec
add
rcrl
das
push
adc
lea
inc
xchg
xor
pop
inc
jg
fiadds
paddq
sahf
addr16
add
lret
arpl
pop
jae
pop
xchg
inc
flds
mov
cs
sti
push
lcall
lret
outsl
adc
cmpsb
adc
add
mov
lods
movsl
jecxz
adc
push
jmp
push
pop
xor
mov
mull
mov
mov
adc
mov
popa
mov
test
push
ss
mov
xchg
fwait
nop
push
cmp
add
mov
dec
or
adc
and
incb
mov
xor
cmp
data16
idiv
into
mov
dec
mov
fistps
imul
sub
pop
inc
test
fstps
cmp
gs
sub
mov
push
jae
inc
push
push
push
gs
and
mov
fistps
sbb
and
dec
adc
jb
sbb
cmpsl
sub
cmp
fisttpl
cmp
sub
jl
pop
xchg
nop
and
or
mov
adc
loope
cmp
or
pop
mov
jmp
xchg
jbe
add
repz
push
mov
dec
lods
test
push
test
mov
push
repnz
sar
pop
rorb
cmp
lock
mov
push
mov
fwait
jae
fnstsw
or
test
out
stos
adc
cmc
add
in
into
fimull
mov
test
daa
push
jns
mov
jns
mov
popf
and
inc
jl
cmpsb
dec
push
jnp
xchg
pusha
pop
nop
xor
std
push
loope
adc
fwait
icebp
mov
pop
dec
cmp
sbbb
xchg
stc
push
jmp
or
adc
sbb
mov
push
adc
sbb
in
xchg
mov
pop
push
add
mov
movl
cli
out
and
mov
in
addl
fiaddl
leave
cmp
push
cmp
adc
xchg
sub
and
mov
ja
fcmovb
mov
aaa
pop
mov
out
in
je
rdpmc
cli
mov
lods
ret
inc
ss
push
ljmp
adc
sbb
and
imul
push
fwait
xor
in
pusha
jle
ljmp
mov
adc
fcompl
jg
addl
jmp
mov
sub
mov
push
adcb
sbb
test
lahf
adc
icebp
inc
imul
out
mov
stc
nop
ret
jmp
mov
into
fbstp
or
outsb
xchg
repz
in
cs
mov
popa
cmpl
lock
dec
pusha
and
jae
pop
jnp
dec
or
xchg
loop
push
mov
mov
and
and
ss
movl
das
xchg
movl
bound
mov
inc
mov
iret
shl
test
out
ret
mov
out
scas
outsl
jo
mov
jbe
repz
or
test
adc
and
in
lret
xchg
pop
dec
or
sarb
dec
mov
sbb
mov
sarl
mov
jg
out
mov
push
or
and
icebp
jle
lret
cmpsb
mov
push
jnp
xor
cmp
cs
jae
cmp
stos
inc
xchg
xchg
xchg
out
fs
sbb
add
sbb
push
jnp
test
jnp
fisubrl
cmc
scas
mov
push
stc
push
stos
xchg
test
inc
mov
pop
mulb
push
add
cwtl
insb
or
repnz
mov
pop
repz
fcomps
scas
cli
or
sahf
and
mov
add
aam
cld
into
outsl
dec
out
pop
sub
and
fidivrs
and
pop
jp
jmp
popf
pop
pop
dec
pop
mov
mov
repnz
test
pop
inc
mov
cmp
jecxz
add
and
mov
cmove
sbb
cli
rorb
imul
dec
jle
push
mov
mov
cmpsw
sbb
xor
xor
lret
fldcw
inc
out
push
popf
adc
lods
pushf
xlat
push
mov
jecxz
push
mov
test
in
call
and
xchg
lret
mov
pop
jp
mov
xor
jg
push
pop
loope
pushf
adc
pop
pop
push
mov
xchg
insl
aad
mov
and
mov
push
pop
mov
dec
pop
push
not
cmp
cmp
sbb
int
jg
mov
dec
lock
mov
mov
ficompl
cmpsl
mov
or
imul
lahf
fs
outsl
les
cmp
into
xor
pop
shlb
imul
int3
add
repnz
pop
sahf
in
inc
xor
add
into
push
jne
movsb
insl
or
push
mov
test
repz
adc
out
cmpsb
and
mov
jge
inc
or
push
cmp
pop
into
add
je
shl
xor
es
mov
push
call
push
in
or
mov
xchg
cmovbe
xchg
sbb
or
lahf
mov
or
test
sub
xor
push
cmp
gs
xchg
push
xor
xor
pop
xchg
mov
dec
dec
outsl
mov
mov
mov
lods
and
adcl
les
loopne
out
cmp
js
gs
push
ss
jg
cli
inc
mov
mov
pop
cli
adc
sahf
add
stos
and
mov
or
xchg
adc
movsl
lea
add
stos
dec
dec
cld
sub
in
orb
lret
subl
fsubrp
je
xor
fnsave
popa
adc
fidivs
rorl
cmp
nop
adc
jge
ror
add
fldenv
and
call
xchg
jmp
add
les
cld
out
cld
aam
loopne
cmc
in
call
inc
mov
repnz
js
repnz
jnp
enter
gs
daa
cmpsl
sub
sbb
xchg
icebp
jo
pop
xor
or
jb,pn
frstor
mov
mov
dec
mov
inc
je
push
add
out
stos
inc
in
in
xor
shl
xchg
bound
sbbl
jo
das
push
pop
push
fadds
mov
sbb
jbe
aad
mov
xchg
cs
pop
mov
pop
nop
mov
into
in
dec
iret
ljmp
sbb
cmp
lcall
cmp
adc
push
cmc
cltd
pop
popa
repnz
inc
sbbb
les
adc
inc
daa
arpl
and
xchg
pop
lcall
test
adc
call
stos
daa
push
rol
shlb
out
out
adc
dec
sub
xor
fs
movsl
pop
fs
or
mov
sbb
cmp
xchg
sub
mov
lds
arpl
and
int
rcrl
sub
fidivl
lds
mov
rorl
inc
xor
movsl
jle
xchg
mov
add
and
lcall
jl
sub
jb
leave
cmp
imul
jae
testb
insl
mov
rcll
shrl
pop
stos
sbb
xchg
inc
cmpsb
cld
lret
mov
sub
sub
jno
mov
jge
push
int
fisubrl
inc
or
daa
jns
pop
sub
std
sti
dec
or
mov
imul
leave
pop
pop
sub
lret
sub
xchg
fsts
dec
das
mov
xchg
lods
jge
outsb
cmp
std
dec
jle
add
daa
outsl
add
into
scas
fsubs
xor
in
loop
sarl
xor
mov
or
cld
push
aad
dec
and
mov
sbb
cmpl
jbe
xchg
push
ficoms
cmp
scas
or
stos
ds
fwait
add
or
pop
mov
cmp
inc
pop
mov
xor
pop
pop
shll
test
call
dec
cwtl
mov
push
leave
push
xor
xchg
push
fdivrs
sub
push
int
push
mov
inc
add
pushf
pusha
dec
jecxz
inc
in
test
sub
icebp
ljmp
cmp
sub
adc
push
mov
push
inc
mov
jl
xchg
and
lea
or
sub
push
push
add
stc
xor
xchg
jb
rclb
mov
repz
add
fsts
sub
jp
fsubl
dec
xor
and
arpl
cmpsl
mov
lea
cmp
dec
jae
xchg
xor
adc
out
cmp
xchg
rcrl
hlt
mov
mov
sti
mov
das
pop
pop
dec
shlb
jo
or
dec
sub
sub
jg
gs
pop
std
sbb
inc
in
dec
jg
and
mov
clc
add
add
add
ljmp
mov
adc
adc
enter
cmp
aas
push
fiaddl
pop
sub
mov
lret
insb
sbb
rorb
enter
std
popf
inc
fdivrp
mov
cmp
test
mov
cld
mov
jns
iret
inc
outsl
mov
jecxz
mov
inc
test
inc
xchg
xchg
sti
stos
sub
and
dec
leave
cmp
sbb
pop
pop
clc
mov
mov
mov
or
lods
jp
scas
cld
aad
mov
ja
and
leave
add
sub
adc
mov
fcoml
in
pop
adc
push
sub
in
inc
gs
and
in
xchg
cmp
push
adc
sbb
ds
fwait
push
out
mov
adc
cwtl
in
arpl
int
mov
nop
pop
test
adc
cmpb
fcmovu
jne
mov
imul
icebp
cmp
and
scas
lock
mov
scas
out
dec
xor
jg
adcb
pop
sbb
lret
or
mov
cmp
jo
dec
pop
mov
inc
xor
loop
bound
mov
sbb
xchg
mov
out
std
dec
inc
and
pop
inc
or
ret
mov
jbe
pop
xchg
adc
pushf
xorl
inc
or
rcrb
imul
icebp
ret
inc
aaa
aam
and
stos
xor
sbb
repz
scas
mov
pop
dec
pop
mov
or
mov
out
ja
jne
stc
or
jl
jp
fcmove
nop
jecxz
push
inc
lret
add
mov
mov
and
hlt
pop
out
cld
inc
addl
ds
les
xor
outsb
lods
xchg
icebp
jbe
xor
xchg
adc
sti
shl
mov
das
js
hlt
jl
fwait
inc
mov
ss
es
incb
push
or
aam
or
pop
add
stos
xor
stos
repnz
push
cmp
sub
outsb
cmpsl
andb
sub
cwtl
mull
mov
vmwrite
sbb
aas
xchg
int
adc
xchg
inc
push
fstpt
xchg
add
pushl
int3
pop
inc
jbe
sahf
xchg
jne
inc
mov
xor
cmp
scas
jle
rcl
or
cmpsl
shlb
jp
xor
daa
daa
popl
or
js
dec
push
stos
dec
aas
ret
out
xchg
cmpsl
imul
xchg
lods
jge
les
mov
sub
mov
sbb
in
cltd
dec
movsb
mov
jnp
jp
add
popf
pushf
ret
ret
test
mov
mov
xor
out
shlb
daa
mov
xor
cmp
fisttps
iret
jo
or
out
push
pop
test
cmp
insb
jno
mov
xor
or
scas
pop
das
cmp
lahf
sbb
daa
movsb
stos
mov
jne
jno
lods
js
out
add
fdiv
fisttpll
pop
jnp
pop
pop
cmp
cltd
and
imul
lea
rorb
and
nop
enter
aas
scas
push
hlt
popa
sub
test
mov
test
adc
mov
cmpsl
rcl
ss
sub
lods
out
test
jb
mov
and
mov
pop
jle
mov
imul
insb
jno
jle
or
pop
lret
imul
pusha
mov
sub
mov
popa
mov
sub
daa
mov
xor
sbb
popf
push
sbb
and
cmpsb
fsubs
test
outsb
cmpb
aam
mov
lret
or
movsb
cmp
xor
pop
sub
push
dec
test
and
adc
cmp
faddl
ror
pop
pusha
std
and
mov
pusha
inc
and
pop
pop
cmp
std
sub
cmp
fldenv
jg
push
xlat
adc
andl
mov
aad
insb
mov
and
cmp
xchg
jg
or
in
pop
and
push
es
nop
cmp
inc
loope
and
mov
int3
xchg
xor
aas
nop
movsb
xchg
mov
sar
dec
inc
cmpl
movsb
xor
mov
icebp
xlat
lea
daa
pushf
movsl
pop
int3
les
xchg
xchg
mov
mov
int3
pop
mov
adc
clc
shll
jl
fldl
sub
and
sub
out
fdivl
mov
mov
lods
stc
sub
push
fcomps
xchg
pushf
insl
sti
push
lock
pop
mov
rcll
inc
and
stos
jl
ja
dec
cmp
test
add
xchg
out
dec
add
cs
mov
sub
push
leave
lret
stos
movsb
inc
jo
inc
leave
xchg
jmp
pop
jne,pn
push
mov
rorl
jmp
and
stos
push
lock
dec
lret
enter
ret
sti
xchg
das
pop
enter
and
jns
mov
test
lcall
mov
pop
imul
out
inc
push
xor
cltd
pop
ret
xchg
jl
stos
sahf
push
cmpsb
aam
dec
insb
loopne
cmp
jecxz
pop
stos
andl
inc
push
mov
add
rorb
sti
xchg
mov
mov
xchg
xchg
xchg
cs
pusha
cli
popa
ret
jne
pop
adc
imull
sbb
cmc
push
adc
jge
mov
push
cmp
out
fdivl
push
xor
pop
inc
repz
aam
mov
cmp
jmp
jmp
and
das
push
repnz
out
jg
js
in
push
xor
adc
loopne
inc
pop
lods
push
cmc
cld
cmp
mov
xchg
in
ret
cmp
mov
rorl
mov
sahf
add
leave
sub
js
rcrl
inc
les
ja
dec
jecxz
stc
cld
mov
adc
pushl
cs
inc
inc
xchg
cmpsl
inc
mov
xlat
jno
das
cltd
mov
dec
popf
xor
xchg
bound
mov
mov
jl
imul
lret
add
push
sbb
clc
add
dec
cmp
inc
pop
cwtl
enter
loopne
cmp
cltd
ja
sub
xor
cltd
leave
xor
sahf
push
dec
push
jp
sub
dec
aam
out
outsl
movsl
loopne
or
mov
xchg
xor
cmpl
mov
call
les
xchg
cli
pop
and
loopne
sub
inc
lret
lcall
mov
jmp
bound
repz
dec
fadd
add
sbb
jae
mov
lret
pop
lods
jecxz
int3
sub
lods
pop
sbb
out
sub
mov
loopne
mov
bound
adc
inc
push
and
fmul
adc
leave
mov
fdivrp
in
adc
aaa
je
movsl
outsb
inc
les
push
or
xor
dec
lods
dec
mov
sbb
ret
pop
addr16
inc
jno
add
push
call
mov
pop
in
fmull
inc
mov
add
push
xor
or
call
sub
adcb
mov
arpl
inc
jl
pop
xchg
cld
adc
sbb
inc
pop
enter
pusha
jge
inc
dec
js
pop
dec
shrb
ss
cld
stc
pop
or
mov
add
xchg
div
sbb
inc
sbb
loope
out
cmp
xchg
jmp
push
cwtl
cmp
dec
inc
lret
inc
rol
test
outsl
aas
hlt
jbe
sub
fwait
jno
or
enter
mov
sbb
xchg
adc
sbb
add
cmp
inc
mov
std
cs
pop
stos
jle
fcmove
cmp
mov
mov
scas
push
jmp
stc
lcall
and
orl
imul
pop
adc
add
aam
jmp
pop
movsb
mov
sbb
jmp
or
xchg
sub
mov
xchg
and
mov
insl
ja
lea
popa
fwait
mov
cmpl
aad
xchg
or
push
cld
test
adc
and
pop
add
pop
adc
outsb
dec
outsl
cmpsb
pop
les
fistpl
rol
mov
fstl
inc
lods
xchg
or
ret
mov
and
xchg
push
pushf
pop
sbb
out
dec
ret
pop
test
imul
mov
inc
mov
sub
sub
mov
mov
lahf
out
int
das
fwait
aam
aas
inc
sub
dec
push
fnsave
test
or
in
pop
repz
cmp
sti
xchg
mov
pop
int3
sub
cmpsl
rclb
sub
jne
sbb
insb
ret
sub
and
xor
mov
and
dec
ret
inc
shll
and
xor
cmc
clc
decl
inc
lds
lods
rcrl
and
adcl
lods
inc
or
pop
adc
mov
dec
jl
mov
adc
mov
mov
xchg
mov
dec
pushf
cmpsb
push
decl
les
dec
inc
add
lods
adc
movsl
pcmpgtb
int3
pshufw
int
pop
mov
mov
int3
jbe
call
cwtl
dec
adc
pop
and
aas
push
lods
icebp
subb
outsb
fbld
mov
imul
in
sub
pop
jmp
jle
or
pop
das
jne
jmp
call
lds
jno
aaa
movsl
jne
ss
addr16
and
movsl
mov
loopne
das
clc
push
inc
sti
cs
inc
and
in
cmpsl
push
inc
mov
jae
fisubrs
imul
hlt
push
loop
aaa
jb
add
dec
enter
xchg
je
call
pop
orb
cld
or
test
push
sbb
nop
mov
jns
adc
jo
jae
rolb
mov
iret
outsl
and
movq
cli
xorl
bound
fnstcw
stos
shll
xor
fwait
roll
pop
cmc
std
repnz
mov
add
inc
mov
shll
js
pop
daa
or
fs
ja
or
aas
jge
std
outsl
inc
sbb
push
mov
mov
pop
pop
add
adc
repnz
pop
lods
aaa
cmp
test
lahf
lods
jl
dec
inc
movsb
xor
push
or
sti
xor
outsb
add
cmpsb
sub
jge
push
lret
call
adc
repz
or
jno
stos
data16
call
or
mov
mov
decl
cmp
jnp
jle
shl
mov
imul
lock
push
mov
stc
adc
dec
cmpsl
or
pusha
or
xchg
out
stos
mov
addr16
lahf
test
js
pop
and
cs
leave
sub
test
jo
in
inc
ljmp
adc
xlat
inc
icebp
mov
ret
and
iret
jecxz
mov
mov
cld
sarl
and
ret
roll
mov
pop
inc
sub
lock
fcompl
dec
enter
imul
inc
data16
pop
aaa
mov
lahf
jp
daa
mov
xlat
cmc
popf
scas
sub
cmp
in
ss
or
mov
xlat
rcll
scas
pop
lea
adc
andl
mov
neg
xchg
push
jae
pusha
es
jo
aam
jge
xor
push
xor
add
aad
insb
dec
es
mov
and
or
adc
pop
arpl
subl
xor
sbb
inc
dec
div
rorb
addr16
sbb
mov
mov
push
mov
insl
xchg
mov
rcrl
stc
sbb
mov
ds
rclb
outsl
or
lea
mov
mov
cmp
mov
pop
lahf
jle
inc
stos
pop
scas
lret
ja
sbb
pop
jl
leave
jno
shrl
fcoms
and
and
or
call
test
mov
fmuls
imul
and
xchg
pop
loop
lret
mov
mov
or
dec
cli
sbb
dec
jge
fs
mov
popf
xor
rorl
pop
aaa
stos
jge
sub
ds
popf
push
mov
jne
pop
sarb
xlat
push
mov
je
adc
jno
mov
pop
popa
adc
movsb
xor
mov
pop
stc
aam
pop
aas
hlt
mov
xorl
nop
icebp
sub
ret
std
jge
dec
popa
rcrb
and
xchg
fcompl
dec
outsl
mov
dec
les
testb
inc
cmp
icebp
mov
daa
mov
mov
jge
imul
adc
rcll
push
mov
add
hlt
test
jbe
mov
ja
push
xlat
inc
and
fcoms
inc
mov
ror
sbb
adc
sub
or
or
fxam
xorl
cmp
mov
sub
ret
xchg
in
jnp
sub
push
and
lahf
add
push
cld
dec
in
fadds
sbb
iret
test
arpl
leave
subb
xchg
rcr
and
int
movsl
add
xorl
ret
jmp
mov
inc
lea
ds
je
and
cmp
sub
jl
and
pop
or
fsubrs
int3
shrl
mov
in
movsl
mov
jecxz
lods
mov
jns
jnp
jns
shrb
sti
dec
xchg
sti
lds
shl
lods
aad
add
mov
push
pushl
ret
xchg
scas
nop
aam
pop
cld
fstpl
stos
xchg
and
rcrb
jb
test
jnp
lcall
and
popf
rcr
cmp
pusha
push
js
lea
scas
arpl
clc
ficoml
cmp
imul
dec
xor
jge
fiaddl
arpl
mov
sahf
fadds
xor
mov
push
sub
mov
test
jmp
and
mov
ret
rcl
rclb
lcall
dec
cmp
mov
aam
mov
cld
xor
dec
movsl
stos
add
dec
xor
cmp
nop
popa
mov
xchg
arpl
dec
or
push
push
mov
sbb
enter
hlt
sub
push
xchg
push
mov
mov
xchg
out
inc
and
cmp
fucomi
push
lret
repz
sub
jb
leave
and
popf
fcmovb
push
inc
andb
and
xor
push
stos
sahf
cli
loop
adc
cld
arpl
inc
in
cmp
xchg
fisubs
mov
sub
mov
jg
push
push
cmp
xchg
lahf
stc
pushf
fsubrs
pop
add
cmp
mov
cmp
add
cmp
mov
repz
xor
lcall
jo
push
xchg
pushw
test
and
and
sub
and
fwait
mov
xchg
aas
or
sub
pop
mov
pop
mov
mov
cmp
cmpl
jl
or
jmp
imul
clc
cmp
ljmp
and
fdivr
loope
inc
sar
sbb
xchg
pop
push
pop
or
rcrl
fwait
mov
adc
mov
inc
cltd
popa
jbe
mov
ffreep
mov
push
stc
ljmp
enter
iret
xlat
sahf
cmp
movsb
mov
lahf
std
cmp
gs
push
outsb
push
negl
ret
clc
inc
notb
popa
ja
int
mov
push
sub
hlt
fadds
sarb
inc
mov
decb
xchg
sarl
xor
scas
and
or
cmp
jp
mov
das
mov
ret
aam
pop
mov
jno
xor
arpl
push
dec
jp
aas
cmpsb
or
pop
mov
and
cmpsb
test
jl
lea
sti
dec
out
cmp
dec
das
cmp
dec
lahf
out
addr16
nop
mov
push
out
jmp
pop
jns
ja
pop
pop
lahf
sub
pop
aad
jle
xlat
sub
xchg
movsb
dec
cmc
mov
dec
leave
or
xchg
jae
push
insb
push
mov
repz
push
in
das
psubq
fxtract
lods
repnz
mov
and
pop
ficoms
in
enter
insl
in
inc
adc
inc
push
sub
xor
mov
pop
scas
sarl
jb
repz
xor
xchg
mov
xor
lahf
add
cld
int
sbb
imul
sub
xchg
push
xchg
out
mov
cmpsb
inc
cmpsb
push
ret
sub
push
inc
ret
sbb
bound
aam
jbe
nop
test
or
popa
addl
push
xchg
lock
xor
xchg
add
movsl
inc
movsl
mov
jb
mov
jae
xor
jl
in
sti
inc
sbb
xchg
fs
out
push
cwtl
push
dec
mov
decl
xchg
add
daa
cwtl
ljmp
fbstp
adc
fcompl
adc
sbb
and
iret
test
ret
aam
lea
aam
sarl
adc
popf
fninit
imul
cli
sti
mov
addr16
mov
dec
sub
jp
dec
call
push
rcrl
aaa
mov
aad
mov
clc
shlb
and
jno
les
adc
sbb
test
popa
pop
es
jnp
into
and
sti
in
sbb
pop
xchg
push
mov
or
lcall
mov
out
roll
aam
pop
mov
in
mov
popf
push
mov
dec
out
and
test
pusha
xor
mov
push
mov
pop
or
lods
xor
push
std
imul
sub
and
lock
sti
pop
inc
add
fistpll
ret
les
aas
insb
push
push
lock
xchg
jae
xchg
imull
out
xor
sbb
and
or
fiaddl
pop
sbb
dec
and
mov
mov
shr
mov
gs
mov
insl
mul
add
xchg
add
or
jno
xchg
push
in
sti
pop
and
pop
cltd
or
leave
mov
cmp
movsb
push
stc
xchg
xor
leave
push
bound
push
xor
and
jl
fbld
add
jnp
js
and
lret
adc
out
mov
cmp
mov
repnz
push
mov
push
clc
lock
addl
fdivl
out
push
and
pop
adc
dec
mov
jp
mov
sub
lds
jnp
fsubl
mov
inc
ret
jns
shrl
cmp
ret
jge
sbb
mov
jecxz
pop
sbb
loopne
jnp
sarb
mov
loope
mov
sub
lahf
fmull
loop
adc
add
mov
xchg
roll
out
fcmovne
cmp
aam
data16
sbb
into
aam
adc
jl
sub
gs
sub
fldt
mov
push
and
pop
gs
cmp
xor
cmp
nop
sbb
inc
jg
js
cmp
xchg
aad
adc
add
out
pop
mov
sahf
cmp
inc
mov
test
push
inc
lea
and
sbb
es
lret
pop
lahf
in
sbb
lret
lret
in
add
pop
xchg
fiadds
ficompl
or
int3
xor
lods
or
or
testw
inc
cli
xchg
cmp
and
mov
xor
pop
cld
leave
test
jo
and
and
fs
cmc
pop
adc
outsb
imul
and
and
shll
aas
xchg
aas
loope
vmovlpd
out
shlb
js
mov
ret
mov
jo
mov
shrl
add
mov
and
sbb
cmp
aas
test
stos
lahf
push
sub
in
orb
inc
and
inc
rorl
and
mov
pop
icebp
and
push
inc
adc
cmp
and
pop
pusha
leave
cmp
bound
test
inc
xor
into
sub
mov
fdivr
movsl
or
les
pop
add
mov
movsb
mov
shlb
fcomps
es
sbb
andl
movsl
mov
xlat
stos
lret
int
sub
lea
shlb
xor
inc
daa
pop
xlat
sub
xor
xchg
enter
jo
jns
insl
movsl
dec
inc
sbb
dec
push
pop
xor
push
jg
aad
call
enter
scas
jae
in
pop
mov
cmp
mov
fsts
pmullw
dec
xchg
pop
test
rcl
sbb
das
or
repnz
jecxz
cmp
jae
lods
clc
in
rclb
clc
mov
arpl
movsb
xchg
jge
repnz
mov
sbb
adc
gs
leave
inc
mov
aas
mov
mov
dec
lret
and
jb
leave
imul
sub
inc
cmpsb
frstor
adcl
bound
orl
leave
mov
cmp
pop
push
mov
pop
xchg
mov
mov
pop
movsb
or
ljmp
and
inc
in
pop
xchg
xchg
add
lods
shll
ja
les
mov
es
fsts
lret
and
fstpl
push
adc
lods
jmp
add
jmp
imul
xchg
inc
out
push
ljmp
int
dec
pop
mov
imul
sbb
in
filds
sub
pop
cmc
scas
enter
cmp
inc
shrl
mov
cmpsl
or
daa
int3
lea
push
and
lahf
or
sub
fs
icebp
mov
xchg
jmp
lods
xor
xlat
inc
das
out
mov
and
pop
popf
or
jne
stc
mov
std
sbb
pop
inc
aam
mov
test
and
inc
call
xor
ret
ret
and
and
rorl
insb
psllq
imul
out
pop
cli
int
cmp
leave
pop
imul
out
jl
adc
sub
scas
pusha
sub
mov
xlat
jae
xor
mov
mov
mov
ja
xchg
cmp
sub
shlb
inc
sbb
mov
shlb
jns
add
dec
xor
mov
lea
cwtl
xor
inc
js
pop
movsb
mov
push
xor
je
push
lret
mov
ds
jge
cltd
lods
push
inc
les
shlb
data16
sub
imul
les
imul
test
aam
inc
pop
ret
cltd
fcompl
push
push
lret
shr
and
cltd
cmp
out
xchg
and
sub
fdivr
mov
mov
adc
sub
adc
roll
movsb
in
popa
jg
xor
and
inc
inc
mov
lcall
mov
sub
ret
or
gs
nop
shrl
in
or
jnp
dec
mov
aas
int3
pop
loop
test
mov
sbb
stos
jg
inc
and
push
pop
lods
jne
dec
mov
aaa
ret
cmp
push
cmp
fistl
adc
sub
not
add
adc
xor
jge
mov
pop
sarb
adc
and
cli
mulb
push
mov
mov
push
push
movsl
lret
mov
shll
cmp
iret
mov
sub
sbb
mov
icebp
push
rcrl
sub
in
xor
repz
mov
les
movsl
push
lret
jp
dec
pop
mov
cmp
sbb
adcl
push
pop
xor
cmp
push
xor
imul
test
dec
or
nop
in
sbbb
int3
cmp
sbb
bound
jmp
sahf
sbb
pop
cmp
pop
inc
fs
jo
andl
jecxz
jb
aad
out
fists
inc
test
sub
jno
pushf
pop
pusha
ret
sub
movsl
movntq
mov
fcmovne
stos
cmp
xchg
in
inc
cmp
enter
popa
jge
dec
dec
fdivrs
sarl
jbe
mov
inc
loopne
movsb
lret
jb
jge
sbb
bound
rclb
sub
pop
and
jne
jmp
jmp
push
repnz
jns
cmp
mov
ja
or
and
fs
imul
jno
and
xchg
jb
mul
pusha
lds
lock
lock
jns
fcompl
movsb
rcr
inc
dec
pop
in
out
jecxz
movsl
add
or
and
icebp
andnps
xchg
pop
mov
and
jo
lods
xchg
fnstcw
ret
mov
rorl
les
xor
mov
fimull
or
mov
scas
mov
mov
leave
lret
scas
movsb
rcrb
inc
dec
and
je
imul
call
stos
stos
mov
inc
adc
inc
mov
and
mov
fwait
push
popa
into
xlat
mov
lea
jns
dec
xchg
add
movsl
ret
fimuls
cltd
jl
mov
icebp
push
stos
lahf
sbb
lret
push
mov
pop
cmp
test
sub
push
popa
push
or
jmp
test
inc
jb
stos
pop
mov
xchg
lret
pop
mov
leave
pop
push
mov
lcall
aam
mov
in
popa
push
sbb
test
in
orb
mov
data16
mov
mov
xor
push
push
int
ret
ret
test
fidivs
xchg
aam
out
fcomps
fwait
enter
icebp
imul
fsubrl
jg
mov
jg
cmp
sahf
hlt
dec
inc
pop
test
in
sub
rcrl
bound
push
mov
pop
leave
adc
leave
shll
movsl
jmp
adc
or
cmp
les
xchg
xor
ret
rcl
pusha
pusha
pop
push
test
je
pop
and
jp
dec
dec
mov
and
push
test
pop
jne
icebp
icebp
in
dec
sub
loop
mov
cmp
ljmp
subb
aas
mov
cltd
out
das
sti
das
std
faddl
popf
mov
cmp
imul
pop
mov
fdiv
xchg
jae,pn
inc
insb
mov
int
inc
shrb
jg
incb
repnz
pop
leave
lret
rep
in
pop
dec
pop
add
lock
adcl
jnp
in
and
enter
nop
mov
in
mov
mov
iret
sarl
ljmp
mov
lods
xchg
shll
inc
int3
pop
leave
in
jg
mov
aas
enter
cmp
or
lods
cld
insl
jg
sbb
pop
test
stos
mov
jmp
ja
cmpsl
xchg
movsb
fcomps
mov
les
inc
ret
aaa
mov
sub
xchg
inc
aam
pop
pop
in
add
js
jg
addb
movsl
xchg
sahf
stc
test
call
jecxz
inc
call
pushf
adc
jge
les
addr16
push
inc
adc
not
stc
add
mov
les
test
cld
xor
xchg
fisttps
pop
jecxz
pop
mov
lods
cmp
adc
mov
sbb
cmpsl
fcomp
inc
pop
imul
rolb
xchg
insb
fmuls
fdivrl
mov
push
shlb
cmp
dec
outsl
mov
inc
xchg
dec
lods
pop
jno
outsb
dec
mov
mov
jge
jnp
ret
sub
fs
xchg
in
lret
add
fcomi
inc
inc
pop
push
int3
push
sbb
lret
xchg
inc
jmp
in
loope
and
fwait
jle
sub
or
mov
dec
sub
hlt
fdivl
imul
pushf
add
iret
sahf
pop
jo
sahf
jl
divb
stos
or
jmp
sbb
fsubrl
inc
fadds
dec
les
xchg
lahf
add
leave
dec
mov
mov
push
test
jl
or
dec
xchg
fcoms
adc
icebp
loopne
mov
aam
xor
adc
cs
xchg
add
sarb
das
iret
mov
lret
cmp
outsl
mov
call
ja
cmpl
pushf
push
stc
lret
ret
sti
out
mov
mov
aas
stos
jb
pop
xchg
jb
popa
push
in
inc
xchg
sbb
and
and
cli
jmp
inc
cmp
scas
clc
and
fsubrl
inc
fidivl
bound
cmp
mov
push
cmp
xchg
push
out
repnz
add
mov
rcrb
push
or
mov
add
mov
mov
cli
mov
xor
aam
popa
test
push
cmp
fimuls
ffreep
jg
dec
sbb
movsl
or
mov
bound
loope
mov
pop
movsl
test
push
rolb
xor
mov
insb
gs
mov
mov
xchg
lahf
outsb
in
cmp
sti
ja
je
rolb
in
daa
sub
loop
and
mov
pop
pop
rolb
mov
fdivrl
aaa
rorl
cmpsl
stos
xchg
das
jecxz
xorl
cmp
test
cmpsl
mov
lret
popa
or
push
sbb
ret
gs
jo
mov
into
xor
pop
dec
jno
sub
loopne
ja
sub
xor
rcrl
repz
pop
adc
add
stos
fildl
mov
arpl
pop
andb
jg
mov
imul
stos
inc
sbb
inc
sahf
push
hlt
pop
fmul
adc
sub
cltd
orl
dec
sbb
jp
cmp
mov
dec
push
mov
ret
lret
cltd
push
add
or
push
out
cld
cwtl
cmp
out
cmp
mov
cmp
rorl
mov
cmp
mov
mov
shrb
push
push
sti
jne
lea
push
mov
xchg
daa
outsl
adc
and
jmp
and
mov
out
fiadds
xor
or
or
movsb
add
pop
and
test
pop
mov
cmc
mov
stos
mov
mov
rcrb
push
jp
jmp
jle
mov
dec
jle
mov
mov
cmp
icebp
cmp
fldt
pusha
test
test
bound
xchg
cli
and
push
mov
jo
mov
pushf
dec
enter
inc
lahf
xlat
pop
sub
sbb
imul
sub
push
adc
mov
cltd
lods
push
mov
jmp
push
and
adc
xor
jle
xor
out
pop
adc
hlt
jnp
or
sbb
mov
imul
into
imul
mov
mov
dec
sbb
and
push
add
push
cwtl
ljmp
adc
sub
sub
stos
std
dec
orb
dec
out
imulb
lods
push
jns
adc
call
sahf
data16
cld
loop
jno
loop
xchg
or
push
rcr
fstl
leave
add
xlat
sub
mov
xor
lods
dec
jb
push
mov
dec
mov
dec
add
pop
jg
addr16
int
lock
leave
test
or
out
cmp
mov
dec
lds
int3
sub
cmp
lret
insl
mov
out
dec
and
sbb
leave
pop
pop
mov
data16
loopne
xchg
xchg
pushf
mov
cmp
xor
mov
jmp
rcrl
ds
out
add
lea
pop
xchg
lahf
aas
or
xchg
in
xchg
fldenv
inc
int3
sbb
jmp
dec
sbb
lret
cmp
add
stc
lea
cmp
subb
ret
push
adc
in
and
pusha
pushf
xchg
leave
jo
stos
mov
shll
repnz
xchg
subl
push
adc
jno
xor
dec
out
leave
enter
jae
cld
cmp
mov
out
testl
mov
and
mov
xor
mov
add
inc
and
bndstx
inc
lods
dec
push
xlat
int3
rclb
imul
into
roll
into
repz
push
sahf
nop
xchg
repz
inc
xchg
mov
shrl
fwait
dec
sub
lds
push
scas
ret
enter
loop
jno
xor
es
fnstsw
lret
mov
or
test
adc
loope
shl
cmp
xor
jle
loopne
shlb
and
leave
sub
xchg
mov
stos
mov
lds
mov
inc
add
call
push
lahf
rorl
mov
xchg
bound
inc
cmp
or
mov
inc
test
and
imul
push
dec
sbb
loop
jg
scas
popa
dec
shl
int
std
cmp
cmp
jg
sub
push
xor
inc
in
inc
inc
xchg
add
scas
xor
mov
pop
rolb
dec
ret
data16
nop
cmpsb
imul
dec
jg
sbb
enter
and
movsb
jae
test
lcall
mov
scas
pop
and
incb
adc
pop
xor
xchg
xchg
stos
xchg
mov
mov
jl
and
fistpl
dec
adc
xor
frstpm(287
cld
es
jmp
shrb
dec
imul
xchg
aaa
inc
addl
xor
adc
xchg
dec
rclb
push
xchg
push
xor
cmp
clc
or
sarb
mov
jmp
sbb
mov
mov
or
fs
sbb
int
lret
xchg
inc
movsb
ds
dec
mov
adc
xchg
xchg
inc
add
adc
ret
leave
dec
xchg
cmp
xchg
xor
or
sub
jge
and
inc
xor
mov
loop
in
and
loop
mov
add
xorl
gs
inc
adc
and
sub
bound
or
jecxz
ds
shr
idiv
scas
addb
mov
stos
jmp
pop
jmp
ret
shlb
nop
pusha
mov
std
mov
cmp
xor
leave
hlt
icebp
adc
jo
adc
rcll
icebp
fists
adc
cli
dec
dec
shll
mov
inc
inc
mov
std
inc
dec
adc
sub
xchg
cmp
push
dec
mov
test
add
roll
fistpl
movsb
cmp
enter
push
dec
xchg
popa
ljmp
cmovo
xchg
jnp
adc
fidivrs
push
push
int3
lret
cltd
adc
popf
shll
pop
sub
test
movsb
subb
jp
cs
test
repnz
fildl
jne
test
movsb
iret
pop
sub
pop
and
mov
or
fists
out
mov
fdivrs
cmpsl
fdivr
or
les
dec
roll
mov
loope
and
cli
pop
aam
dec
push
leave
je
stos
mov
sahf
cld
loope
xor
and
cmp
popa
dec
jle
movsl
adcl
push
sub
mov
mov
ja
shl
ret
mov
test
test
mov
cwtl
xor
inc
mov
hlt
and
and
xchg
jmp
fwait
mov
in
cmp
es
fldcw
rclb
dec
lock
sbb
subl
mov
push
pop
jb
mov
dec
jle
test
bound
in
and
enter
jns
movsl
inc
pusha
adc
mov
fmuls
in
and
insb
out
sub
decl
ret
and
mov
push
add
ret
push
adc
xchg
sub
shl
xchg
test
inc
mov
pusha
bound
or
jp
lods
ficoml
fadds
out
xchg
mov
movsl
jge
sbb
mov
mov
aas
out
fildl
lret
inc
add
shlb
pop
fistl
daa
or
sub
or
jmp
xchg
sub
ljmp
rolb
cmp
and
stos
and
loope
mov
mov
mov
xor
jecxz
push
mov
dec
ret
js
inc
fisubl
inc
xor
add
arpl
xchg
xor
cmp
imul
xor
jmp
push
mov
adc
push
dec
xchg
pusha
and
rcrb
mov
lods
xchg
stos
insl
notb
jl
sti
mov
inc
add
fwait
out
mov
in
push
jae
shrl
dec
mov
bound
ds
mov
push
jnp
mov
cmp
jg
cmp
lcall
fadds
shlb
mov
shl
add
lcall
xchg
mov
popf
cmp
addr16
push
inc
jl
sti
scas
add
test
mov
sbb
and
ret
or
les
or
gs
stos
jle
test
jno
inc
cmc
mov
mov
jge
lret
push
xchg
xchg
sahf
push
mov
jns
inc
mov
mov
fwait
lods
loopne
sub
add
jae
mov
ljmp
arpl
mov
dec
dec
pop
mov
lods
push
jp
fstpt
add
dec
jp
test
dec
jg
shlb
mov
lea
fstpl
mov
cli
push
or
mov
or
lret
cld
leave
xchg
mov
outsl
in
imul
add
aam
fcmovne
test
jge
adc
add
outsb
jg
ret
lods
fistpl
xchg
aam
pop
mov
jbe
aas
fcomps
dec
push
add
adc
pushf
cmp
add
int
lods
inc
adc
jae
sbb
mov
sub
fsub
inc
test
out
out
test
xchg
pop
data16
xor
mov
out
dec
sub
add
mov
sub
fcomp
aas
cmp
jle
jb
cmp
mov
mov
push
out
cli
mov
xor
sbb
negb
sbb
clc
mov
movsb
stos
mov
sbb
fsubrs
lret
inc
pop
dec
xor
dec
or
adc
sub
jno
repnz
hlt
add
ds
mov
sbb
scas
inc
pop
daa
into
mov
push
adc
sbb
inc
rorl
and
nop
cld
leave
lods
mov
cmp
inc
push
imul
shlb
stos
repz
jno
cs
lahf
lods
jecxz
fdivrp
adc
in
subb
scas
ljmp
push
jne
imul
and
ss
add
fld1
out
sub
push
les
xchg
cltd
ljmp
dec
or
insb
dec
cmc
dec
popa
mov
sub
loop
in
mov
fnsave
and
rclb
stos
mov
cs
xor
push
xchg
fwait
sub
cli
insb
push
outsb
cmp
adc
jg
add
lock
dec
pop
pop
test
mov
and
pop
enter
and
inc
xor
aam
int3
mov
mov
add
out
cmp
repz
or
xor
pop
pop
daa
jae
xor
cmpsl
pop
jne
mov
inc
sub
push
sub
sub
pop
sarl
repnz
pusha
stos
js
sub
insb
dec
out
ret
cmp
out
test
inc
jp
dec
xlat
push
mov
out
js
test
pop
aam
add
xor
stos
lea
inc
lods
adc
jae
mov
pop
fdivrl
sub
or
leave
push
loop
popl
and
cmp
pushf
insb
xchg
xor
lcall
fmull
push
cli
xchg
mov
add
movsl
sub
or
movsb
push
aas
bound
cs
enter
pop
cltd
out
mov
jb
push
lods
es
sahf
test
add
push
xchg
sub
sub
cmp
sub
es
stc
xchg
add
loop
jp
das
pushf
in
outsb
push
in
data16
adc
test
sbb
cmp
mov
mov
push
movl
inc
fwait
sbbl
inc
adc
loopne
mov
das
shrb
push
xchg
rcr
mov
dec
cmp
dec
sti
mov
popf
jo
push
add
lds
jge
mov
pop
std
ffree
sahf
std
test
mov
xor
add
clc
leave
rcrb
mov
lods
lods
stos
ljmp
or
pop
xchg
enter
jae
cmpsb
mov
sub
mov
cmp
pop
hlt
iret
aam
jecxz
push
ljmp
lret
jmp
add
in
push
adc
out
scas
popf
frstor
dec
aad
pop
pop
push
xor
pop
sub
test
push
jns
ljmp
mov
sub
dec
nopl
gs
enter
movsb
movsb
arpl
jl
jnp
nop
adc
es
out
mov
inc
fcompl
mov
fnstcw
repz
fdivrl
pop
pop
mov
sti
pusha
roll
xchg
inc
push
cld
xlat
jne
jl
mov
fsts
cwtl
dec
lahf
out
cmc
lret
bound
shlb
mov
xlat
lcall
sbb
mov
ljmp
mov
add
dec
divl
cmc
adc
jl
mov
fdivs
andb
inc
leave
enter
cmp
lret
hlt
imul
js
xorl
ja
nop
cs
pop
aas
scas
aas
and
sub
mov
rorl
clc
add
cmp
jecxz
int
pop
into
cmpsb
pop
xchg
scas
sti
loopne
add
pop
fstps
fmuls
and
mov
sub
test
pop
in
std
mov
sub
push
das
mov
es
dec
adc
xchg
sbb
mov
cmpsl
int3
scas
call
aam
imul
fsubrl
lods
ret
in
daa
mov
repz
jnp
aad
ja
pop
mov
mov
shlb
ret
and
mov
cmp
dec
clc
test
imul
movsb
adc
cmc
pop
lea
mov
cmp
inc
loopne
pop
fwait
inc
sbb
fstl
notl
test
pop
xchg
cmc
enter
cmp
pop
jnp
push
pop
ficoms
adc
sbb
dec
jmp
rorl
stc
xor
or
dec
pop
sbb
loop
pop
push
loope
aam
popa
mov
adc
imul
add
xchg
sbb
jo
mov
ret
mov
lods
inc
out
push
out
mov
jne
sub
scas
data16
scas
sarb
leave
and
insb
divl
sti
or
adc
testl
lcall
pop
movsb
xor
sbb
test
cmp
mov
mov
pop
inc
push
lods
iret
das
adc
sbb
cmp
pop
repz
imul
cltd
dec
daa
inc
jno
nop
adc
std
lds
scas
jae
pop
out
or
sub
data16
sub
dec
std
xor
in
mov
and
into
mov
jecxz
lock
dec
dec
xchg
insl
add
mov
jecxz
xchg
xchg
sbb
lods
int
dec
jo
xor
aad
cmp
sub
xchg
es
icebp
std
push
push
cltd
fdivs
in
inc
xor
add
or
mov
mov
adc
scas
test
pushf
pop
pop
mov
loop
mov
test
mov
xor
je
loop
mov
jb
inc
mov
mov
inc
fwait
stos
or
adc
neg
fcmovu
js
repz
fsubl
mov
cmp
lret
pushf
imul
loop
cmp
mov
xchg
and
inc
lock
and
jle
mov
add
pop
icebp
cmp
int3
cmp
pop
nop
scas
fdivrs
lock
and
enter
cmp
loope
cmp
lds
pop
stos
nop
jmp
pop
sbb
pop
loopne
fbstp
bound
jg
or
stc
jns
xor
jno
and
mov
scas
pop
cmp
jl
aas
std
mov
pushf
inc
out
mov
and
jae
addr16
mov
imul
enter
pop
add
sub
lods
hlt
nop
jp
pop
pusha
sahf
fiadds
mov
imul
test
es
cmp
pushf
loop
mov
dec
std
aas
mov
xchg
in
mov
mov
imul
inc
ja
xor
jne
mov
mov
sub
gs
xor
jmp
enter
cmp
lods
mov
pusha
lcall
add
ja
sub
shrb
cmp
or
sarl
test
int3
sahf
repnz
pop
mov
inc
cmpsl
mov
xchg
leave
fistpl
rclb
incb
lods
and
or
cmp
das
nop
mov
mov
xchg
fwait
mov
inc
shrb
adc
xor
movsl
inc
insb
mov
inc
dec
rol
fldt
arpl
mov
movsl
sub
jno
adc
push
movsb
or
roll
loope
push
sarb
arpl
mov
mov
jno
dec
int
test
dec
mov
adc
pop
lea
sqrtps
sub
inc
xchg
stos
xchg
and
xchg
jno
mov
jo
cmp
subl
sbbl
push
ss
xchg
mov
push
lret
sub
frstor
inc
jg
add
and
pop
dec
push
shll
ja
xchg
outsl
sub
mov
pusha
mov
sti
pop
xor
shlb
out
jl
stos
sub
fnstcw
fidivl
out
xchg
dec
adc
ret
push
cmp
add
xchg
cmp
nop
sbb
or
jns
push
sbb
sbb
jl
in
jecxz
mov
mov
xor
mov
cmp
test
mov
xchg
daa
dec
adc
pop
xchg
pop
sub
mov
xor
nop
fcmovne
pop
cmp
mov
jecxz
sub
out
arpl
adc
or
scas
dec
cwtl
in
scas
xchg
add
lods
xchg
addr16
out
adc
or
loopne
xchg
mov
hlt
inc
insl
cwtl
std
push
popa
mov
fiadds
sbb
nop
xchg
dec
sub
xor
pop
add
cltd
xchg
rorb
ss
or
pushf
inc
imul
cmpsb
inc
xor
cltd
or
jmp
pop
jns
cmp
mov
aad
aad
fnstenv
cmpl
inc
pushf
out
add
mov
mov
lret
ret
mov
mov
jp
mov
test
or
inc
icebp
jne
popa
mov
jae
pop
in
cmp
aas
cmp
aad
dec
pop
pop
add
ret
and
fidivl
out
dec
cmpsb
mov
movsb
loop
pop
pop
test
das
dec
inc
mov
jo
xchg
jp
xchg
or
mov
xorl
mov
mov
jle
or
jbe
out
mov
in
leave
jae
inc
mov
dec
rclb
inc
jne
fsubs
call
inc
sbb
ret
popf
or
loopne
and
int
insb
jp
fisttpll
imul
cmp
insb
add
sub
push
popa
cwtl
aam
cmp
xchg
aaa
sahf
popf
push
fcompl
popf
xor
sub
add
ja
shlb
mov
cmpsb
fisttpll
imul
jp
mov
pop
lar
xchg
sub
popl
ja
hlt
cmp
jmp
jg
out
lret
dec
cmc
or
xchg
lods
sbb
inc
and
mov
bswap
mov
and
gs
dec
movsl
xor
mov
lds
clc
ss
rcr
and
jno
pop
adc
dec
mov
xchg
arpl
jnp
pop
fldcw
subl
xchg
xor
subb
and
adc
push
arpl
sti
xchg
sbb
xchg
sbb
xlat
mov
into
sbb
xor
or
mov
sbb
cmpsl
adc
fs
test
int3
pop
push
movsl
cli
and
mov
movsb
fs
xchg
xor
mov
pop
shll
xchg
icebp
lea
hlt
cld
ds
call
cmpsb
sub
lea
fcomp
mov
cmp
pop
shlb
fwait
xlat
ds
mov
or
jb
jge
cmp
push
cmp
js
test
test
ficoms
jmp
sbb
jp
mov
mov
popa
jge
xchg
xchg
bound
inc
loope
cltd
push
xchg
outsb
in
das
pop
cmp
inc
clc
imul
test
pop
mov
add
sbb
int3
mov
jns
pop
fwait
inc
fnstenv
add
adc
xchg
inc
cmp
in
scas
rolb
cwtl
subb
xor
mov
adc
and
xchg
sub
out
or
leave
jp
aas
cltd
clc
lock
imul
daa
ret
out
test
bound
or
mov
cltd
ret
iret
and
idiv
rorl
mov
shrb
mov
and
and
ss
push
das
mov
xchg
test
xchg
out
hlt
outsb
dec
jns
mov
push
imul
pop
mov
or
fmull
les
bnd
outsl
cmp
dec
sbb
xor
movsb
xor
hlt
mov
ret
sub
icebp
ss
jge
push
rol
xlat
and
in
pcmpeqb
inc
pusha
mov
push
add
fildll
jns
int
pop
adc
inc
mov
dec
fisttpll
mov
push
lcall
call
jo
jnp
or
outsl
or
sub
out
rol
rcl
jl
cltd
inc
fnstcw
mov
xchg
mov
mov
sub
push
pop
dec
outsl
lcall
cmp
pop
cltd
jne
lret
pop
jle
cwtl
pop
pop
cmpsl
push
in
stos
sahf
add
jae
pushf
insl
mov
ficomps
mov
sahf
jecxz
loopne
jne
lds
mov
fbstp
rcl
shr
fimuls
jp
mov
adc
mov
iret
cmp
gs
scas
fldenv
push
mov
and
rorl
sub
ret
js
cmpps
test
int3
aaa
nop
lret
lret
shlb
fisubs
clc
cmp
fwait
aas
inc
stc
adc
sti
fs
roll
cmpsl
push
dec
lcall
add
divb
pushf
incl
mov
pop
mov
or
aas
xlat
in
imul
mov
adc
arpl
xor
std
cmp
pop
dec
and
jns
sub
add
movsb
addr16
cmp
adc
mov
mov
into
js
inc
mov
fstpt
mov
loop
jb
ja
inc
sahf
lret
stos
clc
cmc
dec
mov
xchg
sbb
arpl
sub
xchg
sbb
call
loopne
xchg
mov
mov
shr
push
dec
or
int
xor
fs
es
popf
mov
pop
mov
cwtl
mov
gs
and
outsl
lods
pushf
outsb
push
es
rorw
sbb
and
arpl
inc
fdivrl
ret
call
insb
jg
adc
ret
inc
jnp
test
add
fsubs
xor
xchg
dec
xor
ds
cmp
jae
out
mov
xorl
mov
or
mov
pop
fldl
cmpsb
int
jle,pn
or
repz
out
stos
aam
in
fs
push
mov
adc
ficomps
jno
sub
xlat
xor
dec
push
push
fst
lret
inc
sub
nop
push
inc
xchg
lods
xor
cmp
pop
dec
cmp
ret
pop
xchg
dec
jmp
sbb
cwtl
jnp
add
insb
arpl
loopne
pushf
rol
mov
xchg
enter
xor
mov
lods
sbb
add
add
stc
or
push
out
xchg
or
int3
jg
fldl
adcl
mov
clc
sub
rorb
add
dec
push
cmp
jo
stos
and
loope
cwtl
jne
loope
cltd
push
xchg
cs
mov
in
popf
pusha
adc
sub
sub
dec
cld
mov
and
aam
inc
jg
in
jge
leave
push
out
adc
mov
jo
xchg
jb
add
mov
xor
mov
or
or
and
add
out
fimull
ret
int3
cmp
pop
pop
addr16
push
fsubl
fwait
imul
lcall
push
sub
je
mov
xchg
mov
mov
jle
xchg
leave
cmc
mov
jp
scas
pushf
adc
inc
mov
jmp
icebp
pop
mov
and
pop
js
or
push
add
aad
adc
loop
mov
scas
aam
inc
pop
sub
pop
movsl
sub
movsl
imul
sbb
sub
subl
or
mov
xchg
jle
adc
jle
dec
push
jae
fildl
jns
adc
and
out
in
cmp
inc
mov
xchg
ret
sub
lds
add
pop
lret
rclb
push
mov
mov
pop
mov
movsb
jl
sahf
lcall
adc
xchg
push
jle
stc
cltd
mov
xchg
imul
mov
inc
sti
std
lods
icebp
fcmovbe
and
arpl
or
push
xor
inc
mov
xchg
mov
addb
popa
push
lea
ret
mov
mov
push
xor
jns
fisttpl
faddl
xchg
in
mov
adc
sub
in
loope
fisttps
js
add
data16
fsubs
inc
dec
pop
xor
cmpsb
xor
push
mov
test
cmp
sbb
dec
inc
mov
xor
cltd
scas
pop
adc
cmp
xchg
push
and
dec
mov
leave
daa
in
loopne
clc
in
pop
insl
shl
sbb
mov
jae
dec
mov
dec
dec
fidivrs
mov
mov
cs
add
xchg
insl
fldcw
xchg
scas
test
sarb
xchg
stos
mov
mov
jecxz
cltd
mov
push
sti
push
fstpl
xor
and
jle
or
xor
xlat
cld
sbb
xchg
add
shlb
outsb
xchg
xchg
ja
or
cmp
subb
push
cli
test
jp
ja
xchg
roll
nop
sbb
pop
das
or
hlt
and
ss
adc
and
inc
leave
cmp
inc
xor
ljmp
jl
aad
mov
push
xchg
pusha
gs
jl
mov
pop
lods
inc
sub
mov
mov
xchg
mov
sbb
jmp
pop
ja
rolb
sarl
and
mov
addb
loope
ja
sbb
pop
add
cld
cmpsb
add
inc
inc
stos
nop
or
xchg
mov
in
jge
outsl
mov
outsl
mov
cs
pop
pop
cmpsl
or
std
mov
iret
push
rorl
imul
jle
adc
adc
push
insb
pop
int3
ss
scas
and
into
in
out
push
and
xchg
popf
fiaddl
mov
popf
or
mov
and
and
ss
cltd
aas
mov
ret
xorl
mov
and
pop
mov
jo
lods
enter
int3
mov
into
add
xor
sahf
push
sub
or
inc
mov
sub
lcall
mov
popf
ret
xorb
jne
adc
jecxz
push
mov
jae
test
in
cltd
cltd
cmp
scas
mov
adc
adc
jg
out
sub
add
sarb
inc
xor
out
shlb
aaa
das
adc
stos
jb
pop
jl
lock
stos
outsl
cmp
loopne
jnp
lret
and
mov
popf
cwtl
xchg
lods
inc
es
push
sbb
inc
dec
pusha
or
mov
das
ret
les
nop
inc
cs
mov
mov
push
popa
add
insl
sarb
mov
mov
mov
dec
in
dec
movsb
loope
sub
push
dec
adc
imul
insl
dec
aad
push
cmpsl
insl
fsubrl
or
in
lods
mov
mov
jg
xlat
adc
cs
in
lret
fildll
add
push
mov
pop
inc
jnp
aam
std
pop
js
mov
xchg
rcll
cmc
mov
mov
in
out
addr16
jno
xchg
leave
or
data16
push
add
leave
push
add
mov
test
lcall
inc
mov
iret
jns
pop
sbb
jb
cmp
stos
mov
hlt
xlat
jg
les
pop
sub
jns
pop
lret
sbb
xchg
mov
nop
mov
hlt
pusha
xor
pop
pop
in
xchg
mov
add
pop
lock
cmp
loop
mov
mov
mov
xor
jmp
das
ret
jne
mov
jp
cld
dec
leave
repnz
enter
dec
pop
and
int
stos
into
xchg
add
fisubrs
inc
push
xchg
loopne
xlat
add
mov
inc
dec
xor
push
jne
ds
mov
mov
flds
mov
mov
lret
pop
add
mov
aad
sbbl
sahf
int
inc
mov
xor
in
in
nop
sbb
mov
stos
imul
test
mov
aam
js
mov
add
pop
push
inc
enter
insb
in
inc
aam
pop
push
sahf
push
scas
stc
lods
sub
repz
or
pop
nop
mov
and
adc
and
andl
imul
or
inc
fiadds
sub
add
hlt
testl
into
inc
imul
jmp
bound
jge
shll
adc
mov
loop
pop
adc
scas
lods
iret
lock
mov
imul
movsb
push
adc
mov
mov
adcl
inc
rolb
leave
cmp
jo
jl
pop
fwait
les
add
cmp
imul
in
inc
push
push
pop
inc
lods
xchg
movl
xchg
or
sbb
ret
imul
and
sbb
push
popf
xor
loopne
jp
fdivr
cmp
in
adc
or
repz
jb
inc
cmp
dec
cwtl
ss
pusha
and
mov
adc
push
pop
xor
popa
xchg
xor
lahf
mov
ja
js
in
bound
and
or
xor
hlt
adc
push
xor
xchg
push
mov
sbb
xorl
mov
mov
popf
adc
cmpb
rcll
fcmovne
lret
mov
ljmp
dec
push
fimull
xor
fisttpll
jle
fiaddl
mov
cs
mov
cli
xor
cli
sahf
cmpl
push
cmp
mov
sub
loope
cmp
lret
cmpsl
inc
and
pop
adc
add
pop
adc
jbe
and
inc
enter
mov
mov
cmp
movsl
scas
inc
lods
pushf
clc
lds
add
dec
and
fidivs
mov
test
inc
push
les
stc
add
lock
mov
test
sub
pop
bnd
adc
cmp
loop
fnstenv
iret
les
addr16
mov
sbb
cmpsb
inc
push
adc
cmp
and
add
mov
andl
xchg
and
bound
or
lret
xchg
fdivrs
sbb
sbb
sbb
push
lods
mov
out
cs
and
shlb
ja
inc
test
push
lods
imul
sbb
mov
cld
mov
add
cmp
je
add
pop
sbb
jb
sub
ljmp
sub
push
orl
mov
les
cmp
mov
jg
fcmovnbe
shrl
outsb
mov
cmp
cmpsb
loope
insl
xchg
mov
rorl
loop
pop
jb
into
fwait
jns
ja
rcll
fidivl
bound
out
lods
ljmp
jmp
cmp
pop
sub
jo
xor
sbb
loop
aam
mov
push
push
shrl
test
pop
sahf
das
mov
cmpsb
jl
push
sub
cmp
fsubrl
push
mov
fimull
fldenv
add
cld
dec
jo
lret
subb
addr16
xor
nop
or
add
imul
adc
out
xchg
xchg
xchg
int3
xchg
inc
rcr
inc
jl
subb
mov
incl
xchg
add
xor
std
xchg
cmc
stc
sub
pop
jbe
and
mov
mov
clc
pop
mov
mov
mov
mov
imul
jnp
int
sub
push
mov
sarl
push
cmp
push
add
push
xor
lret
cmp
popa
push
in
cs
xchg
cmp
ljmp
loope
push
push
push
test
pop
sub
cmp
dec
popa
or
in
push
xchg
or
sbbb
xor
and
aaa
shll
popf
test
pop
fsubs
cli
imul
notb
enter
xor
in
dec
int3
pop
push
addr16
leave
dec
sbb
mov
cmp
push
pop
out
xchg
pop
and
push
bound
push
dec
mov
mov
pop
sbb
les
in
mov
xor
loopne
gs
sti
sbb
xchg
repz
mov
cmc
xor
pop
jae
inc
add
fmul
adc
aaa
jl
jb
mov
jp
nop
add
into
out
loope
mov
repz
mov
jmp
aaa
xlat
xchg
and
xchg
push
and
pop
outsb
xchg
jnp
xor
sub
arpl
insl
sub
inc
les
sub
push
xchg
dec
fcoms
add
scas
or
pop
jbe
sahf
dec
cli
lcall
sub
bound
loope
call
out
and
inc
or
sahf
pop
lret
jno
ljmp
xchg
jb
add
repz
push
cmp
aas
dec
fcomps
mov
pusha
lods
cmc
pop
mov
stos
fsubs
xchg
jg
jae
adc
andl
sti
add
in
sub
addl
xchg
repnz
mov
js
xor
or
stos
imul
xor
faddp
and
fsubrs
cmp
push
cmp
cvtpi2ps
add
mov
arpl
or
xchg
aam
push
mov
call
sbb
sarl
cld
loope
int
mov
movsb
test
cwtl
pop
adc
or
lahf
mov
scas
out
movsb
js
inc
loop
pop
in
ljmp
popf
mov
cwtl
push
das
popf
jge
mov
push
mov
and
adc
mov
ds
sub
sbb
mov
cmovl
mov
push
dec
sub
jo
add
ljmp
or
dec
test
pop
xchg
mov
fistps
or
pop
ret
mov
in
mov
push
or
sub
cmp
repz
and
dec
mov
xor
mov
je
sbb
aaa
and
je
mov
in
mov
cwtl
adc
push
jno
ret
scas
adcb
int3
mov
mov
test
and
into
mov
aas
mov
sti
mov
push
push
push
loopne
push
mov
sbb
repnz
inc
dec
push
and
aam
dec
pop
jb
inc
stos
jae
mov
add
les
lds
lea
mov
push
jecxz
insb
pop
push
gs
pushf
sub
sbb
arpl
aam
jne
jecxz
adc
popa
cmpxchg
jo
xor
dec
mov
in
cmp
xlat
pop
stos
fsubrs
mov
aad
popa
dec
idivl
dec
dec
not
add
mov
adc
mov
jbe
faddp
mov
shll
addr16
dec
and
hlt
sti
idiv
scas
popa
dec
mov
xor
xchg
out
mov
das
jecxz
push
nop
cmc
cmp
test
push
sub
cld
lea
setl
pop
and
add
jnp
pop
sbb
ficoml
xchg
lods
push
mov
leave
xlat
sub
ret
jo
sbb
inc
push
fisubrl
lahf
inc
pop
cmp
je
mov
mov
dec
cld
mov
xchg
pop
adc
je
inc
push
das
insb
in
aaa
int3
push
lret
in
mov
lock
icebp
aad
lods
int3
sub
sub
mov
aaa
and
loop
mov
xor
ret
sub
mov
jb
add
push
pop
outsb
and
in
or
out
out
push
xchg
fisttpll
lret
push
mov
push
dec
jge
bnd
sahf
xor
into
cld
push
xchg
in
out
ficomps
pop
inc
mov
dec
testb
add
pop
inc
push
into
movb
mov
sbb
jmp
cmp
ficomps
push
cmc
jae
bound
imul
mov
in
in
ljmp
sbb
pop
adc
into
cmp
cmp
test
sub
jge
addr16
fs
jb
cwtl
xchg
jnp
mov
push
out
fldt
jno
lret
push
inc
test
or
movsb
add
or
ficompl
sub
das
ja
add
sti
loopne
push
fcmovne
adc
fsubl
inc
push
jne
cltd
popf
jae
jae
mov
shlb
fwait
imul
xlat
inc
nop
das
enter
xchg
push
pushw
out
es
dec
rcrl
insl
andl
add
outsl
cli
int
enter
mov
push
cld
iret
jmp
and
cwtl
test
cli
inc
add
mov
pop
out
rcr
cmp
or
push
fldl
test
mov
lock
dec
fcmovne
das
jmp
test
out
xchg
cmp
nop
jmp
mov
pop
dec
lcall
mov
shr
push
lds
pop
jg
jno
jmp
or
and
push
mov
mov
mov
lods
ja
stos
mov
push
out
xchg
inc
insb
push
jmp
cmp
arpl
mov
repnz
sahf
dec
out
push
mov
je
jnp
aam
loope
and
xchg
mov
or
imul
add
cmp
shlb
xchg
xor
mov
xchg
dec
add
xor
in
rcrb
jo
fstpl
aad
cld
or
shr
jne
push
pop
subl
mov
lret
mov
add
outsl
xor
cmpl
and
daa
mov
loop
or
xchg
insb
cmc
pop
mov
rorb
xchg
addb
fdiv
dec
je
dec
xor
mov
and
flds
roll
jg
inc
dec
sbb
mov
lcall
sbb
adc
and
or
outsl
dec
push
lret
mov
jns
addl
enter
hlt
into
mov
or
cmpsl
test
push
sbb
mov
ret
adc
out
pop
push
jo
and
loope
sbb
aad
int
test
jo
pusha
inc
mov
and
rclb
enter
lcall
ss
es
outsb
pop
ficoms
add
les
daa
out
int3
mov
shlb
movd
mov
cmp
pusha
loopne
aaa
shrl
jmp
xchg
lret
mov
addb
das
dec
sub
pop
inc
call
dec
pop
pop
or
dec
rclb
dec
inc
aaa
or
repz
rorl
cltd
js
repz
testl
push
test
nop
mov
ljmp
insl
dec
test
jmp
jno
mov
jp
add
mov
cltd
shrb
ds
jmp
jl
ret
fadd
jge
popf
pop
clc
cmp
add
pop
incl
mov
mov
mov
mov
pop
inc
adc
int3
xor
xchg
mov
test
stos
int
enter
fs
rorb
mov
inc
inc
movsl
fiaddl
shr
dec
call
ljmp
push
fisttpl
js
sub
adc
add
nop
mov
push
mov
sbb
sbb
pop
loopne
pop
sti
repz
dec
loope
pop
push
jns
mov
pop
inc
cmp
xchg
pop
xchg
mov
inc
shl
ljmp
push
enter
sti
sub
loope
daa
ds
inc
mov
icebp
mov
push
test
xlat
sbb
test
or
jg
movsb
nop
lods
lret
and
std
mov
sbb
mov
mov
ss
repz
fldenv
inc
sub
jmp
xchg
add
jns
inc
add
xor
push
addl
lods
aad
dec
jle
inc
cmp
dec
fidivrl
push
sub
or
stos
jo
dec
sti
and
pop
pop
adc
mov
arpl
outsb
mov
movb
cmp
push
pop
repz
outsb
adc
pop
cld
jb
mov
add
faddl
loop
pop
ret
dec
fsub
daa
xchg
pop
mov
sub
adc
or
cltd
add
dec
ss
add
inc
mov
popa
insb
push
cmp
fstps
mov
xchg
mov
sub
sbb
loope
jns
mov
hlt
pop
stos
outsl
rolb
pushf
inc
enter
shl
scas
int3
mov
push
push
and
in
xchg
mov
push
or
push
aas
push
inc
jle
pop
inc
loopne
mov
mov
mov
sbb
mov
rolw
mov
mov
js
jg
jnp
inc
sub
lea
dec
in
dec
inc
inc
push
inc
jns
in
data16
int3
jge
fs
cmp
jmp
mov
mov
ret
xchg
jle
jbe
cmp
ljmp
mov
imul
xchg
fstps
lods
xchg
jae
lods
cmc
addr16
push
std
and
xor
xchg
or
jl
ficoml
imul
andl
aad
je
mov
sub
dec
push
or
bound
stc
jno
and
xor
jmp
mov
mov
push
pop
stc
rorl
or
ljmp
xchg
adc
fisttpl
adc
in
mov
cmp
mov
mov
fisubrl
leave
loope
inc
sub
or
push
enter
and
push
mov
sub
lret
shll
lea
and
xchg
addl
inc
test
lods
cli
xlat
mov
mov
ja
pop
or
lret
ljmp
cmpsl
aam
cmp
xor
not
movsl
cmp
and
adc
mov
shlb
test
ss
lea
xor
rcrl
cld
push
xchg
outsl
lcall
or
imul
pop
ljmp
je
fwait
mov
call
mov
push
or
jnp
xchg
bnd
ljmp
int3
ffreep
ret
testb
in
and
xor
mov
adc
xor
maskmovq
idivl
push
inc
mov
and
mov
push
lock
adc
mov
loope
das
das
cmp
ret
orl
inc
popa
dec
push
adc
jmp
out
push
sub
lods
or
push
or
sub
sbb
pop
dec
xchg
sub
xor
dec
dec
ret
fdivs
stos
out
mov
negl
insl
fbld
leave
clc
mov
push
call
add
andl
test
or
jbe
popf
pop
cmp
pop
out
adc
sub
xchg
xor
test
pop
test
inc
push
xchg
fidivs
arpl
dec
jne
xor
scas
inc
sahf
das
jmp
les
repz
push
xor
jl
mov
and
xchg
mov
xlat
pop
es
lea
add
rcrl
int3
enter
adc
insb
adc
jnp
shll
jne
cltd
addr16
jmp
xor
daa
orb
hlt
and
shlb
and
scas
roll
ds
adc
cltd
cmp
mov
jp
enter
add
inc
movsb
push
out
enter
dec
inc
rorb
mov
add
hlt
inc
ficoms
xchg
adc
mov
orl
cmpsb
push
insb
or
fwait
add
addb
addl
stc
add
adc
js
enter
movsb
mov
in
sbb
and
sbb
inc
jb
mov
shld
ds
scas
pop
sub
or
push
adc
scas
or
mov
push
sbbl
dec
out
addr16
pushf
pop
pop
inc
or
test
xor
xor
jb
call
mov
adc
cmpsb
jp
cmp
aam
and
hlt
notl
aaa
dec
movsb
test
fstps
scas
movsl
fs
or
push
sbb
stos
nop
xor
cmp
test
adc
jbe
xchg
cs
scas
inc
out
push
leave
bound
call
fstl
ss
mov
inc
mov
iret
jecxz
notl
pop
nop
adc
adc
bound
lret
stos
mov
sbb
insb
rclb
orl
sti
xor
popl
test
dec
and
repnz
fdiv
ret
xchg
loop
jne
fwait
cmpb
dec
lret
and
mov
out
roll
sub
inc
and
mov
fidivl
xlat
sbb
out
mov
ss
fisttpl
loop
test
inc
sub
outsl
mov
stos
sub
mov
mov
popa
pop
imul
cmp
mov
pop
in
test
test
loopne
jmp
aaa
inc
push
roll
xor
pop
xchg
xchg
add
out
xor
shll
ret
lret
popa
adc
jg
mov
adc
inc
pusha
xchg
or
lea
sub
sub
jecxz
repnz
push
imul
adc
mov
jno,pt
add
sub
loope,pn
into
mov
fldenv
dec
das
popa
out
out
adc
mov
in
inc
rcl
fcmovb
aas
and
outsl
and
fcoms
push
test
xor
pop
and
pop
out
clc
cmp
cmp
ja
mov
xchg
pshufw
and
inc
mov
insb
or
sarb
ret
sub
lret
popa
orb
inc
sbb
nop
mov
das
inc
jno
pop
or
popa
xchg
dec
sbb
std
xor
jg
fnsave
outsl
movsl
pop
call
call
pop
push
xchg
fiaddl
xor
insl
in
imul
lock
sbb
xor
rclb
andl
push
xchg
cmp
mov
xchg
mov
mov
adc
cmp
push
pop
nop
dec
mov
xchg
lock
sbb
fs
rcrl
mov
fsts
aam
nop
dec
ss
fsts
sub
xor
sar
mov
divb
mov
sbb
jo
xchg
int
sbb
repnz
mov
sub
aad
shr
ret
aam
aas
cmc
sbb
push
ljmp
dec
and
outsl
cmp
pushl
pop
xchg
cmp
or
divl
les
sub
xchg
leave
sahf
rorl
popa
xchg
cmpsl
push
add
pop
dec
dec
mov
cli
out
pushl
dec
pushf
enter
das
pop
int
pusha
sti
xor
fimull
lds
mov
adc
xor
and
and
shrl
and
dec
mov
ret
inc
cli
inc
xlat
jmp
shrb
pop
mov
mov
pusha
pop
mov
faddl
mov
and
insl
adc
ds
arpl
jne
scas
mov
fisttpl
decb
shr
jae
cmp
adc
xor
push
divb
jnp
mov
rclb
leave
mov
sarl
int
adc
pop
faddl
out
sti
mov
jo
and
sub
call
js
push
xchg
pop
test
push
sar
or
fistpll
out
inc
inc
test
insl
fdivr
inc
mov
test
daa
pop
sub
sub
push
push
stos
xor
jecxz
enter
xchg
mov
movsb
sub
sti
or
mov
imul
movl
mov
movsl
push
mov
and
or
lret
enter
call
sti
push
mov
out
imull
lret
mov
inc
adc
loope
fisttpll
int3
dec
dec
pop
int
xor
xchg
cmp
pop
popa
js
popa
push
mov
jbe
movsl
adc
mov
stc
xor
jo
int
pop
sub
jge
out
aam
aas
stos
addr16
jmp
dec
nop
imul
pop
or
outsl
sti
xlat
imul
lods
stos
js
and
push
ds
push
fldt
fldl2t
mov
test
cmp
jnp
mov
in
mov
cmc
sbb
push
fcomp
xchg
les
jp
mov
stc
xor
mov
gs
scas
out
sub
sub
insb
sub
ret
jl
out
jecxz
or
or
fisttpll
mov
cltd
es
call
out
bound
mov
xchg
inc
stc
rcrl
add
xchg
out
sub
sbb
bound
inc
sub
push
neg
mov
pop
es
test
lea
pop
fdivs
dec
out
sbb
lods
pop
outsl
push
hlt
jno
aas
ret
or
sub
mov
sti
xor
pop
or
shlb
xchg
jns
bound
pusha
mov
adc
sti
pop
out
stc
jge
sub
daa
rol
add
sarl
mov
pop
lret
mov
mov
es
jno
imul
sub
push
pop
stc
jg
stc
adc
sub
inc
xchg
xchg
mov
cmp
mov
inc
push
sub
arpl
mov
test
ds
out
stos
ja
scas
mov
inc
cmpsb
sar
add
xor
adc
addr16
xor
lds
dec
pop
push
repnz
adc
sub
ja
jge
and
add
iret
pop
pop
mov
sbb
jmp
rcl
mov
sub
lret
mov
fistpll
xlat
imul
testb
dec
ret
dec
jle
adc
cs
scas
pushf
add
into
jo
fdivrs
lret
inc
loope
movsb
inc
xor
xor
or
in
ret
sti
xchg
in
movsl
pop
es
orl
mov
test
push
mov
xor
xlat
je
add
hlt
int3
rorl
jl
loop
mov
xchg
roll
jno
adc
scas
hlt
sub
jl
xor
rclb
adc
imul
icebp
in
pusha
bound
inc
mov
jne
pushf
sub
push
mov
popl
enter
adc
mov
adc
jle
xor
das
pop
loop
rcll
jmp
rcrb
nop
mov
cmpl
or
sbb
outsb
xchg
xchg
addl
sub
xchg
imul
lock
push
dec
imul
add
add
sub
popf
scas
aas
cmc
stc
mov
mov
fwait
sub
mov
mov
cli
jp
rcll
mov
push
mov
sti
xor
pop
or
popa
add
jbe
jns
arpl
test
jmp
sbb
frstor
inc
mov
mov
cmpsb
rclb
stos
push
addb
test
sar
xchg
add
add
fdivs
or
sub
inc
add
mov
xlat
pusha
push
pop
jo
jmp
gs
nop
mov
out
mov
shll
sbbl
lcall
mov
mov
inc
stos
inc
fildl
and
sbb
addr16
pslld
mov
push
or
rclb
mov
hlt
xor
dec
mov
pop
fstpt
shr
shlb
inc
dec
in
cld
insb
mov
gs
cmp
pop
adc
bnd
add
xor
push
pop
sub
xor
in
out
or
inc
hlt
jecxz
fmul
mov
sbb
adc
pop
mov
outsb
cmc
rol
call
dec
mov
ficoml
mov
popa
dec
fstpt
xchg
cmpl
inc
xchg
or
stos
aas
scas
jbe
in
fiaddl
daa
or
fisubrl
pop
jle
and
mov
jecxz
mov
in
dec
loope
push
pop
mov
pop
xor
js
xor
stos
imul
cltd
aam
int3
mov
lret
mov
jo
rolb
mov
fnstcw
in
repz
pushf
fcomps
test
aas
adc
and
lods
mov
sahf
cld
pop
or
out
mov
das
jne
cmp
inc
sbb
sbb
or
daa
xchg
and
ja
int
js
dec
adc
fsubrl
xor
test
loop
addb
cmp
jnp
pop
sbb
push
cwtl
les
mov
sub
fwait
mov
add
iret
ret
cmp
xor
enter
or
aas
mov
cmpsl
call
je
mov
rorb
rol
popl
roll
lret
pop
sbb
das
ficoml
push
fstp
mov
pop
dec
lods
jle
sub
push
push
test
call
sub
mov
sti
inc
inc
test
dec
paddusw
sar
es
fs
mov
jmp
into
sub
cs
xchg
sub
mov
repz
mov
and
std
mov
inc
fcoml
imul
subb
and
es
ds
adcl
jl
pop
dec
xor
sbb
cmpsl
mov
push
fcmovne
shrl
insb
dec
sbb
addb
je
pop
in
out
fistps
fbld
jl
xchg
and
stos
inc
fstl
js
add
sbb
cld
xor
dec
enter
rorb
out
stc
mov
test
xchg
stc
push
popf
ror
pop
out
mov
fld
icebp
loopne
je
lret
sti
sahf
icebp
les
mov
sub
out
xor
mov
scas
dec
dec
and
repz
imul
sub
sub
icebp
pusha
psubq
adc
in
lea
or
enter
push
jns
cmp
mov
ja
push
dec
mov
std
xchg
mov
mov
sti
and
cmp
mov
mov
add
cmp
aam
mov
mov
cs
dec
add
jmp
popa
push
jp
push
dec
push
jns
push
xchg
xchg
fs
or
jl
lods
cmp
nop
leave
popf
ret
mov
or
or
sbb
dec
es
adc
es
js
cltd
and
iret
pop
std
mov
sbb
pusha
sbb
dec
mov
aam
mov
adc
enter
test
cmp
sub
mov
testl
jp
mov
pop
jmp
jmp
cmpsl
cmp
addr16
lea
inc
stc
arpl
stos
xor
dec
add
lcall
dec
cmpsb
mov
loope
fisubrl
fdivrs
pop
cli
inc
mov
jecxz
int3
scas
jecxz
xchg
dec
sbb
lock
pop
cmc
cmp
arpl
mov
jmp
xchg
fiadds
cmp
mov
cltd
xor
aad
dec
das
xor
lods
xchg
adc
pop
loopne
std
dec
or
outsb
xchg
and
dec
mov
mov
into
inc
xchg
sbb
sbb
repnz
insb
fs
push
xchg
push
mov
aad
ja
and
inc
clc
mov
ss
xor
jb
fstl
orl
add
out
or
pop
test
jecxz
out
and
dec
mov
insb
add
dec
mov
mov
jmp
or
ja
call
sti
mov
les
lret
pop
push
rolb
fwait
cwtl
adc
stos
push
ja
pusha
enter
cmp
out
or
adc
xor
out
xor
jbe
loopne
sbb
mov
jne
bound
pop
adc
fstl
lods
xchg
push
inc
lret
jg
cmp
xchg
jnp
mov
enter
rcll
add
jge
mov
pop
rcll
pop
mov
push
push
adc
ljmp
jmp
push
cltd
aam
xor
enter
in
js
adc
jnp
mov
adc
push
xor
pop
js
and
xchg
and
mov
cld
test
push
cltd
sub
mov
stos
and
sub
mov
test
fstp
push
pop
outsl
add
dec
push
mov
aas
mov
mov
es
mov
call
cmp
jge
adc
pop
test
cltd
inc
jb
adc
mov
iret
cltd
scas
lods
jo
pop
xor
inc
push
nop
out
push
in
pop
mov
xor
adc
xchg
ror
push
and
add
cmc
fstl
push
test
pop
push
loope
inc
jecxz
lds
add
sbbb
jo
repz
push
mov
mov
lds
dec
std
scas
add
ret
xchg
imul
movsb
pop
mov
test
int3
inc
arpl
daa
mov
adc
jbe
loop
inc
push
inc
cld
pop
insb
inc
adcl
arpl
imul
loopne
and
push
push
mov
dec
insl
push
xchg
fstl
popf
cwtl
fnstcw
nop
mov
cs
jle
lret
mov
ja
xlat
adc
test
or
mov
push
outsb
cmpsl
jle
cmp
into
jnp
and
outsl
dec
fidivs
adc
leave
fs
aad
dec
adc
ss
das
xchg
sub
pop
mov
jo
dec
mov
push
arpl
push
mov
mov
in
daa
in
add
lock
arpl
or
push
inc
push
jmp
loop
fxch
and
ja
push
mov
xor
mov
mov
leave
scas
xchg
pop
mov
add
adc
xor
mov
mov
sbb
arpl
mov
cs
xchg
sub
add
cmp
or
pop
cmp
pop
cs
shlb
xchg
and
jno
bound
mov
hlt
in
cmp
aad
push
cmpsl
stos
mov
dec
xchg
mov
pop
hlt
mov
or
rcll
dec
das
jg
inc
xchg
xchg
mov
js
or
pop
mov
std
les
lods
mov
dec
ret
pop
into
in
add
mov
and
mov
mov
insb
fisttps
inc
mov
call
mov
ljmp
or
jecxz
or
sbb
jge
jl
xor
psubusb
pushf
push
orb
bound
push
push
sub
adc
mov
dec
pop
inc
mov
adc
jne
inc
sub
inc
sub
ljmp
fisttps
jge
jae
push
xchg
rorb
mov
imulb
push
sub
rorb
sub
ljmp
cmc
pop
adc
mov
push
shll
pop
sub
add
push
add
test
mov
cmp
pusha
out
roll
out
pop
xchg
movsb
fmull
push
sahf
xchg
and
pusha
inc
xlat
mov
aas
call
pop
in
sub
repnz
outsb
inc
jne
enter
nop
lock
dec
lret
sbb
addr16
cmp
push
inc
add
xor
add
inc
test
jb
loope
data16
icebp
sub
mov
push
sub
push
add
add
ret
test
adc
jbe
push
insl
dec
fisubl
or
or
jbe
cld
mov
xchg
arpl
push
mov
andl
sahf
rol
or
fists
dec
inc
jnp
jp
into
loope
scas
jb
xor
mov
jg
subl
push
cmp
int
inc
rorb
cmp
lret
sbb
push
outsb
cmp
push
push
mov
mov
mov
inc
cs
xchg
xchg
mov
cmc
scas
insb
add
les
sub
dec
fwait
mov
mov
adc
dec
mov
pop
mov
inc
or
ss
aam
js
mov
stos
nop
push
leave
popf
sbb
mov
pop
cmp
in
movsl
pop
xor
ljmp
call
cmp
hlt
int3
cs
mov
imul
fstl
fldenv
push
je,pt
cmp
xchg
mov
scas
mov
aad
or
jne
sbb
sub
aam
xchg
gs
mov
arpl
jnp
push
push
hlt
iret
repz
pushf
pop
add
sub
adc
stos
std
ds
pop
stos
aam
idiv
lcall
xchg
sub
fdiv
inc
mov
mov
jmp
xor
xor
push
inc
decb
mov
push
mov
and
push
test
xchg
and
dec
daa
pop
loop
sarl
or
fcompl
repz
mov
sbb
sbb
xchg
fildll
fstl
cmp
cld
rcl
sbb
cmp
xor
jle
shll
sbb
dec
push
icebp
sahf
fsubrs
out
mov
dec
mov
data16
mov
nop
inc
jnp
sbb
mov
inc
in
inc
rclb
pushf
loope
adc
into
add
imul
inc
clc
xor
jmp
enter
js
pop
xchg
dec
cld
adc
jne
movb
fsubs
ret
or
subb
add
scas
enter
cmp
ljmp
add
push
in
int
loop
addr16
add
fwait
icebp
inc
add
mov
pop
lods
cmpb
inc
jno
push
jl
sbb
inc
loope
fwait
lock
ljmp
inc
or
dec
ljmp
jne
push
dec
les
push
xor
cmp
or
cli
pop
out
xchg
xor
icebp
sbb
and
mov
and
fimuls
jmp
out
movsl
int3
adc
jbe
mov
cmp
push
or
outsb
xor
gs
xchg
loopne
dec
adc
mov
xchg
xor
xchg
std
mov
aad
or
or
cmp
lods
enter
int3
mov
xlat
add
iret
mov
jns
nop
dec
outsl
mov
cwtl
cmp
cli
lock
xchg
rol
jmp
cmp
sub
mov
imul
cmc
mov
xor
mov
decl
es
pop
and
push
cmpl
stos
int3
pop
pop
aam
and
push
mov
aas
push
mov
or
ror
xor
fldl
push
test
into
divl
andb
inc
push
stos
mov
pop
addl
out
jg
in
cmc
inc
sub
mov
push
and
jnp
adc
cwtl
mov
shlb
inc
jl
jnp
mov
or
push
xchg
push
mov
dec
add
addl
xchg
pop
lods
cmpsb
pop
sbb
xchg
out
pop
pop
data16
clc
das
clc
or
xorb
test
sbb
inc
jge
adc
mov
cmpsb
push
lods
stc
js
mov
mov
sti
into
inc
or
add
and
movsb
xor
movb
mov
aam
ds
pop
pop
mov
aaa
shrb
filds
invd
lods
mov
xchg
inc
push
fdivs
mov
popf
pop
sarb
mov
adc
pushf
std
or
push
lods
fsubrs
xor
xchg
lret
jle
icebp
jmp
addr16
inc
push
cmp
mov
push
xor
cs
leave
cmp
test
mov
je
insb
movsl
cwtl
push
xchg
sbb
fstpt
mov
inc
cmpsb
add
xor
mov
rcrl
fcompl
push
loope
xor
aad
jno
sub
cwtl
pop
mov
mov
sti
lock
and
fincstp
lret
ret
pop
lea
jl
adc
insb
stos
fs
xchg
int3
jp
inc
mov
adc
sub
les
leave
dec
xlat
cmp
cmp
or
xchg
mov
mov
sub
jle
and
ja
movsl
rcrl
popf
cs
mov
pop
loop
fwait
push
xchg
mov
jmp
stos
jno
mov
out
push
dec
xchg
leave
xchg
push
aam
fidivrl
std
xchg
arpl
mov
mov
xor
xor
push
inc
ds
push
andb
or
pop
scas
adc
test
ror
add
scas
sbb
adc
lret
or
cmp
push
add
sbb
inc
pop
jo
push
cltd
nop
mov
adc
or
ss
sbb
insl
or
outsb
inc
or
jbe
dec
xor
mov
lods
or
adc
pop
gs
lahf
outsb
push
adc
xchg
outsl
pushf
push
push
rorl
gs
negl
lods
pushf
inc
mov
into
inc
lahf
inc
cmp
mov
js
pushl
push
rclb
xchg
sbb
xchg
lcall
pop
sbb
imul
mov
pop
sub
mov
inc
mov
pushf
into
lahf
mov
sbb
pusha
mov
add
adc
adc
in
test
adc
or
imul
hlt
fisubl
std
adc
or
sahf
icebp
xorb
fldl
sub
adc
push
js
cmpsb
jle
xchg
sahf
aam
sbb
add
add
jmp
lods
bound
push
mov
cmpxchg
aad
pop
lahf
dec
cltd
sbb
inc
mov
sahf
cli
adc
test
mov
adc
xchg
sti
test
imul
les
push
cmp
cmp
mov
dec
sahf
mov
add
push
dec
mov
mov
jno
xchg
out
add
pushf
xor
pop
out
sub
dec
push
stos
and
add
dec
jle
imul
mov
xor
pop
ss
push
xchg
aaa
jmp
mov
sbb
lds
movsb
pushf
mov
aaa
dec
cmpsl
sub
inc
cmp
add
mov
into
nop
add
sti
xchg
jo
out
push
jecxz
pop
sub
pop
fstpl
push
xor
add
pop
and
push
adc
push
cld
pop
cmpsb
ljmp
push
xchg
sub
repnz
es
lods
mov
pop
add
push
idivb
push
rcrb
and
imul
stos
push
mov
mov
cli
aam
nop
shlb
mov
int
jns
fbstp
adc
sub
push
cmpsb
ficoml
shl
and
jl
int
inc
adc
fwait
movsb
or
xchg
and
dec
cli
sub
mov
out
cli
data16
adc
sti
inc
aas
cmp
add
cmpsl
loopne
fistps
push
and
loop
fwait
cld
adc
jmp
je
or
dec
xorb
push
inc
push
scas
into
mov
sub
fs
or
ret
stos
jmp
adc
xor
and
out
sub
xor
mov
cld
jae
pushf
dec
into
fsubrl
mov
push
inc
into
xor
inc
mov
mov
repz
orb
dec
and
and
or
ds
leave
adc
test
xor
pop
shlb
pop
sub
mov
push
sarb
jecxz
jl
mov
add
mov
push
mov
push
fnstcw
imul
jle
pop
cmpsl
and
fs
pop
sub
fdiv
dec
shrb
jae
cmp
xchg
out
icebp
sub
dec
cli
and
test
jns
jp
cltd
loope
adc
inc
push
inc
aas
push
or
adc
stc
rcll
stos
js
dec
dec
and
inc
in
xchg
popa
xor
mov
push
nop
cmp
push
addr16
imul
lods
lods
add
mov
push
mov
mov
mov
xchg
push
bound
int3
sbb
xor
int
add
mov
push
mov
arpl
sbb
jnp
and
pop
jl
dec
cwtl
push
mov
in
adc
arpl
in
lock
setge
pop
sbbb
lods
xchg
jle
ds
fs
pop
push
push
sub
stc
jne
mov
sub
int
push
xor
inc
dec
imul
push
sbb
sbb
inc
mov
ret
xor
fisttpl
adc
pushl
jmp
dec
adc
adc
mov
jmp
mov
sbb
fists
fisttpll
adc
loope
rcl
sub
push
lcall
or
mov
xor
jle
dec
cmp
push
inc
jl
and
add
inc
push
movl
mov
dec
scas
dec
int
addr16
int
popa
imul
repz
lock
jae
ficoml
adc
or
daa
cmovno
sub
jp
rcrb
fimuls
mov
rcr
mov
xchg
pop
movb
aas
mov
sbb
adc
ffree
scas
xor
jg
aam
adc
mov
sti
mov
cmpsb
dec
jns
fucomp
sub
sbb
js
or
movl
pop
cmpsb
addr16
nop
jg
cmp
sub
push
stos
push
lret
pop
lahf
adc
test
stos
jns
adc
sahf
aas
ret
add
test
jo
inc
and
and
lods
mov
mov
icebp
xchg
jnp
inc
push
adc
aaa
and
nop
mov
hlt
outsl
aam
fildll
push
loope
sahf
pop
push
adc
sbb
inc
mov
outsl
xorps
pop
mov
arpl
push
xchg
dec
cmp
scas
mov
subb
mov
and
jae
in
add
push
cmp
and
in
xlat
pushf
addl
dec
xor
leave
pop
jns
aad
lock
inc
arpl
lahf
hlt
rclb
shlb
vmovaps
pop
mov
inc
mov
cmpxchg
jae
or
and
xchg
popa
mov
jecxz
and
mov
das
pop
sbb
pushf
mov
subl
mov
je
pop
fidivs
fcmovu
subl
jle
push
enter
pop
sbb
cmpl
pop
dec
lea
in
test
inc
jmp
pop
lds
loop
inc
jge
popw
sbb
fsubl
lods
pop
sub
add
push
sub
repz
pop
mov
sub
out
popf
mov
xchg
fdivrs
arpl
rol
imul
mov
xor
mov
mov
mov
mov
aam
cmp
ds
sub
test
fidivs
ljmp
add
daa
test
fldenv
mov
jle
mov
push
outsl
jne
int3
ljmp
leave
movsl
fnstenv
push
ljmp
push
or
pop
pop
pop
fcoml
testb
mov
add
sub
movsb
iret
jnp
dec
cs
push
dec
call
je
ficomps
push
xchg
lods
cmc
mov
aad
adc
lods
dec
dec
gs
fisttpl
test
out
or
sti
inc
jns
stos
pop
pusha
inc
into
stos
js
into
outsl
dec
adc
cmp
lcall
add
movsb
mov
lahf
or
sub
dec
das
push
imul
xor
or
xlat
jle
ret
into
add
jo
popa
jbe
xchg
sbb
je
mov
mov
mov
lea
cs
jle
nop
repnz
jge
dec
push
lods
mov
out
sbb
pop
dec
mov
mov
sti
test
and
aas
sbb
rcrb
xchg
test
call
ljmp
and
sti
and
in
mov
sti
arpl
cmp
loope
ret
mov
add
mov
sub
and
outsb
test
dec
add
xor
cmpsb
fsubrs
ja
push
fwait
mov
dec
pop
fidivl
test
ret
int3
sub
sub
dec
lods
mov
push
int
sbb
gs
or
mov
jecxz
adc
jo
add
addr16
push
scas
pop
xor
cmc
inc
or
sbb
dec
jle
mov
fcoms
or
cli
outsb
adc
mov
xchg
enter
fisubl
cmp
scas
loop,pn
mov
xchg
xor
inc
push
lds
lock
push
jmp
sub
andb
addr16
mov
xor
xlat
rcrl
repnz
pusha
cwtl
lret
jmp
rol
dec
add
icebp
sub
xchg
pusha
rcrb
fwait
add
add
push
add
test
cmp
and
fiaddl
or
pop
test
push
jl
mov
inc
sub
lret
xchg
les
cld
int
add
push
stos
lods
inc
fwait
xor
data16
sub
lods
mov
pusha
mov
mov
lods
pop
mov
sbb
int
adc
and
mov
pop
pop
mov
lahf
outsb
pop
mov
and
jle
add
mov
sbb
loopne
xchg
adc
dec
dec
repz
push
scas
pop
xchg
ficompl
insl
add
xchg
mov
pushf
push
clc
and
and
fdivrl
sbb
adc
in
repnz
daa
les
hlt
mov
pop
push
xlat
pop
icebp
xchg
and
popf
ds
orb
mov
and
jg
ds
nop
pop
popa
adc
cmp
inc
or
fdivs
mov
rolb
rorl
push
cmp
insw
aam
add
jmp
stos
stc
dec
mov
in
mov
movsl
hlt
mov
loope
fistpll
or
fldl
cld
fs
jp
xchg
push
and
fistps
movsb
test
pop
les
les
jg
mov
and
inc
add
cmp
popa
cmpsl
test
pop
push
add
movsl
shrb
andl
add
adc
movsb
jle
rol
ret
mov
add
je
inc
jmp
dec
xchg
fwait
mov
adc
cwtl
or
mov
mov
inc
push
fidivl
pop
push
jl
orb
icebp
lret
push
jge
push
fcomps
fnstcw
or
movsb
jle
insb
je
xor
xchg
fistpll
push
lret
and
pop
icebp
and
imul
inc
andps
sahf
jmp
dec
sub
lret
scas
lock
insl
jecxz
ror
dec
push
add
sub
rcr
ficoml
rcrb
xchg
jmp
push
sbb
loopne
fmuls
xchg
mov
fisubrs
sub
addl
daa
testb
aaa
inc
pop
jg
mov
fldenv
push
in
loope
cmp
cltd
push
enter
push
push
mov
xor
cmp
repnz
imul
mov
jmp
fstpl
jb
stos
cmp
test
xchg
fmull
mov
and
jbe
fdivr
cmp
adc
mov
imul
das
jnp
push
inc
mov
xlat
dec
push
data16
out
fcmovu
push
test
mov
cmp
mov
xchg
xchg
cmp
aad
pop
stos
inc
js
fsts
inc
test
pop
pop
jno
je
sub
xlat
or
jge
arpl
xchg
adc
icebp
test
mov
cmpsl
nop
and
fmull
sub
orb
loopne
dec
int
xchg
pop
mov
mov
xchg
dec
orl
cmpsb
ljmp
lret
rclb
pop
fisubl
dec
adc
add
outsb
xchg
mov
adc
aaa
xor
dec
inc
xchg
xchg
and
filds
sub
inc
ljmp
lret
mov
push
sahf
bound
into
and
in
xor
cwtl
add
push
push
sbbb
xor
pop
add
pop
push
cmp
xchg
push
popa
rcrl
out
adc
addr16
pushf
mov
xchg
rcrb
stos
aam
fildll
mov
test
inc
dec
dec
imulb
shlb
inc
lock
nop
sub
adc
out
mov
fs
push
pop
pop
and
pop
xchg
sub
mov
cmpsb
out
mov
add
pop
ss
fcmovne
fcompl
add
ret
add
call
enter
jo
mov
cmp
mov
test
fists
aad
sub
ret
sbb
out
push
lret
dec
pop
pop
mov
into
outsb
pop
mov
sbb
xor
popf
mov
jge
popf
cmp
xor
int
test
pop
jno
sahf
jecxz
lahf
inc
das
jg
imul
push
cmp
aad
incb
inc
mov
inc
or
dec
or
add
pop
daa
pop
inc
inc
inc
sbbl
xchg
int3
push
pop
mov
stc
adc
notb
inc
outsl
inc
cmpsb
push
push
sub
call
mov
test
orl
jo
sub
or
adc
pushf
pop
ret
cmp
lret
mov
mov
dec
inc
mov
jg
mov
dec
xchg
call
pop
outsb
bound
orl
push
push
punpcklbw
loope
jb
nop
cmpsl
sub
out
repnz
adc
movsb
faddl
es
test
xchg
int
pop
cmpsl
addl
daa
loopne
xchg
dec
push
xchg
inc
xor
cmpb
sub
je
mov
mov
push
inc
das
popa
scas
mov
cmp
scas
mov
add
xlat
mov
adc
shl
rorl
fistps
lock
adc
lock
jno
scas
int3
jae
lock
je
mov
push
lock
imul
sub
inc
push
jle
fidivl
pop
add
pop
lahf
add
out
lock
dec
xor
jp
movsl
xor
mov
mov
into
sbb
data16
ret
out
xor
sbb
add
rorb
jecxz
jmp
dec
adc
and
and
ror
arpl
cmp
divl
jecxz
icebp
loop
ds
or
cmc
adc
inc
mov
jge
out
adc
nop
mov
mov
pop
mov
ret
movsb
adc
adc
or
ljmp
aas
cli
mov
das
jmp
xor
xor
gs
push
adc
sahf
mov
mov
stos
xorb
popa
outsb
push
or
movsl
arpl
mov
push
cs
test
ror
dec
jge
pop
fistpll
std
cwtl
mov
xchg
les
mov
inc
pop
aam
adc
mov
push
xchg
push
or
and
xor
scas
fwait
sub
inc
push
push
push
pop
insl
or
movsl
iret
imul
sbb
jmp
loop
bound
cli
dec
mov
xchg
add
aaa
xchg
aam
enter
lahf
cmpsl
call
push
adc
mov
xor
cs
push
cmp
cltd
out
loope
push
addr16
dec
sub
das
inc
jg
cs
sahf
push
dec
inc
push
mov
cwtl
pop
mov
dec
sub
test
das
pop
shlb
sbbl
xchg
mov
scas
sbbb
cld
mov
lea
lods
loop
mov
inc
push
mov
fwait
andb
jecxz
pop
out
test
cmpsb
mov
fadds
lahf
inc
cld
push
frstor
sahf
gs
xchg
sbb
sub
lret
jle
popf
mov
xchg
cs
mov
dec
pop
jecxz
imul
inc
jae
imul
hlt
daa
into
sub
lods
pusha
jecxz
fimuls
jl
mov
pushf
mov
or
jmp
push
out
std
jae
cmp
mov
divb
sarl
cmpsb
mov
and
clc
sub
push
mov
mov
outsb
cmp
je
ja
ja
mov
xchg
lret
pop
cmpsb
dec
push
sub
into
mov
push
ficomps
nop
dec
scas
jge
mov
and
adc
push
ror
mov
mov
out
pushf
pxor
cmpsb
inc
pusha
mov
add
push
stos
iret
mov
mov
dec
sbb
ret
mov
xchg
arpl
adc
sbb
scas
jge
fidivrs
das
pop
inc
pusha
imul
ja
or
jae
jo
cmp
or
lret
lret
dec
add
or
add
sarl
popf
outsb
shrb
adc
incl
pextrw
rorl
xchg
inc
stc
cmp
fisubrl
dec
and
fstl
xchg
push
fisubrs
loope
dec
lds
lods
mov
mov
cs
hlt
sub
lret
xchg
dec
and
mov
add
shrl
push
daa
bound
mov
xchg
inc
inc
dec
sub
inc
pop
sub
jne
cmp
push
pop
lds
jbe
and
fwait
push
adc
inc
jnp
lock
push
gs
adcb
sbb
nop
lds
sub
lret
cmp
pop
and
mov
adcl
cmp
addr16
lods
call
sbb
icebp
xchg
les
mov
sbb
sbb
add
loopne
cmpsb
xlat
mov
sub
lods
sub
aam
mov
push
xor
mov
test
stos
movsb
aaa
addb
sub
mov
pop
mov
pop
dec
mov
scas
lret
data16
arpl
cmpsl
xor
mov
adc
aam
mov
jl
cmc
cmp
lock
sub
std
mov
sub
movsl
cmp
dec
mov
aas
gs
int
add
xchg
push
jge
movsl
stos
adc
cmp
aam
xchg
inc
ret
sub
stc
or
inc
inc
add
lret
xchg
push
js
sbb
std
sbb
and
faddl
xchg
sbb
dec
mov
jp
popa
aam
xchg
pop
mov
subb
loop
sbb
mov
stos
lret
ret
pop
inc
ficoml
adc
and
ret
aam
xchg
data16
imul
cs
push
pusha
dec
fsub
jno
sbb
popa
fmulp
shl
lods
mov
out
dec
mov
mov
pop
jo
pushw
xchg
std
push
data16
rcrl
mov
mov
jl
roll
mov
cld
jno
adc
dec
movsl
ret
in
mov
dec
xlat
sub
sarl
mov
psrlq
sub
or
lods
push
lods
and
movsb
dec
sub
cmpxchg
pop
fistl
fsubrl
jno
pushf
imul
adcl
and
fwait
loopne
pop
mov
xchg
js
in
sub
jns
addr16
mov
mov
lods
hlt
scas
pop
sbb
and
int3
incl
ret
pop
push
sub
inc
pop
in
sbb
rolb
sbb
outsb
inc
icebp
inc
daa
leave
pop
sub
jne
cmpsb
arpl
xchg
add
dec
ja
inc
lods
xchg
inc
mov
push
outsb
in
push
call
cwtl
xor
scas
adc
dec
ffree
xchg
pop
adc
sub
loopne
inc
sub
xchg
or
lods
pushf
xor
mov
fwait
repz
out
xor
scas
cltd
push
jno
push
adc
sbbb
adc
cmp
and
mov
enter
cs
xor
gs
cmp
xor
dec
mov
mov
add
and
jne
lret
imul
out
es
jbe
je
sbb
pop
and
mov
jbe
repnz
push
scas
mov
scas
call
mov
ret
dec
xor
loop
add
or
jmp
pushf
in
ljmp
push
scas
outsl
pop
bound
sub
jp
and
add
pop
mov
subl
rolb
sub
and
test
inc
out
dec
xchg
jns
lret
mov
divb
mov
push
lea
xchg
imull
xchg
out
test
add
dec
dec
xlat
arpl
test
lret
pop
aas
mov
push
mov
lret
repz
enter
pop
sub
outsl
fistps
inc
push
cld
jne
int
enter
hlt
test
nop
adc
jbe
popf
bound
int
and
in
cli
xchg
enter
jge
cmc
sbb
cmpsl
xor
in
sbb
sbb
mov
sub
fdivrl
or
pushf
flds
and
cmp
push
and
test
sub
push
ljmp
in
adc
add
lods
mov
shlb
xor
stos
pop
and
jns
mov
inc
inc
test
rcll
push
ret
dec
ja
cli
add
xlat
ret
shll
js
or
popa
in
mov
aam
dec
sub
mov
and
jno
fbld
icebp
and
imul
jl
inc
push
cmp
lea
std
jge
jb
cmp
push
or
jbe
and
lret
pop
push
jns
and
mov
cmp
lock
push
push
pop
test
xchg
fistl
fs
mov
xchg
gs
mov
sbb
lret
imul
mov
bound
inc
mov
xor
jle
lods
pushf
xchg
cmp
sbb
inc
inc
xor
stos
jl
sub
inc
stc
les
popf
popf
adc
fs
or
psubw
out
dec
push
xchg
push
adc
mov
fidivrs
mov
js
mov
pop
mov
xchg
fisubrl
mov
xchg
shl
and
push
or
popf
or
xor
mov
xor
jle,pt
std
outsl
icebp
stos
dec
cmp
pusha
and
jbe
out
xlat
pushf
jp
insl
mov
adc
orl
hlt
xchg
and
mov
aam
je
leavew
mov
pop
stos
test
mov
fisttps
dec
dec
push
fidivl
add
mov
aaa
pop
add
mov
pop
sub
mov
imul
push
and
das
mov
les
fwait
xchg
inc
test
movsl
xor
jns
out
cwtl
jnp
adc
or
pop
nop
pop
fwait
and
inc
fisubrs
mov
and
lret
pushf
sahf
jmp
bound
mov
sub
andl
xor
mov
jns
xor
push
pop
test
jl
mov
sub
outsb
add
call
sar
leave
das
out
mov
dec
mov
test
fwait
sbb
adc
mov
mov
roll
mov
aad
ja
test
jecxz
pop
mov
sbb
cmp
fsubs
sub
in
xchg
push
aam
inc
push
adc
adc
nop
adc
adc
mov
lret
dec
dec
les
dec
lahf
jne
ds
in
dec
cmc
cmp
testb
push
cmpsl
add
imul
push
add
push
test
cmp
popa
fsubl
test
sbb
xor
or
cmp
cmp
popa
jg
ds
sar
and
sti
popf
jecxz
sbb
nop
loopne
mov
xchg
mov
fsubr
mov
scas
popa
jno
mov
or
adc
adc
xchg
mov
xchg
xchg
add
mov
cmp
dec
jl
cli
fistl
xchg
dec
not
test
ret
movsb
clc
push
or
or
in
mov
pop
or
mov
sub
in
dec
jcxz
mov
lret
addr16
dec
mov
adc
xor
jae
xor
mov
or
cs
insl
inc
lock
aas
mov
pop
cmpsl
test
dec
insl
sbb
jne
xchg
jb
fcmovu
leave
inc
sbb
fidivrs
fidivrl
mov
sub
jmp
xchg
xor
ljmp
les
push
shll
jbe
or
js
add
pop
cltd
mov
or
jb
mov
mov
lds
dec
fs
pop
sub
mov
pop
dec
cld
stos
test
out
ljmp
xor
std
mov
gs
jecxz
jo
add
cmp
or
int3
inc
jns
add
movsb
cli
add
push
mov
sub
mov
or
pop
fldl
sbb
adc
jbe
or
xor
inc
out
lea
js
adc
nop
inc
adc
dec
ret
jne
in
xchg
andl
lahf
adc
cwtl
sbb
xor
dec
aad
shld
jns
loopne
push
mov
push
lcall
pop
pusha
jne
out
daa
pushf
xor
sbb
add
cwtl
pop
cmp
xchg
aaa
mov
loop
addr16
loope
cmovns
jno
jl
mov
out
inc
xor
js
mov
mov
fcmovb
add
sarl
sub
sarl
or
sbb
cmp
push
adcl
cmp
sahf
icebp
mov
xor
ret
mov
loop
cltd
push
mov
mov
pop
jne
clc
mov
fwait
icebp
mov
movsb
rdmsr
test
xchg
rorl
push
lds
popa
xchg
jae
fnstenv
cmpsb
sub
sbb
mov
sub
dec
stos
jae
xlat
mov
adc
mov
xlat
mov
popa
loope
lods
nop
adc
stc
ja
jl
push
fwait
mov
nop
das
inc
fnstsw
pop
inc
aaa
shlb
shr
cmp
scas
dec
adc
cmp
loop
lds
sbb
and
daa
shlb
sar
push
cltd
mov
add
addb
sbb
adc
sti
pop
aad
dec
pop
and
xor
ss
stos
fwait
inc
push
pop
jmp
or
cwtl
aaa
adc
add
in
bound
push
cwtl
pop
out
andl
into
mov
mov
mov
aas
movd
add
mov
les
lea
lods
les
movsl
loope
inc
xor
ja
mov
inc
outsb
sbb
test
test
mov
push
add
call
xchg
aas
loop
lahf
push
sbb
ljmp
loope
jnp
mov
std
push
add
leave
gs
add
iret
lcall
pusha
cmp
pop
sbb
jg
xchg
dec
jmp
loope
xor
or
and
xchg
cltd
adc
movsb
cmp
push
insb
xchg
fs
xchg
sarb
mov
inc
shll
test
cs
cmp
out
popa
cld
and
jnp
and
jns
sbbb
fsubs
stos
fs
subb
xchg
lret
out
and
add
ds
repz
xchg
push
xorb
sbb
and
jne
sub
xlat
xlat
loopne
sub
sbb
pusha
ret
rcrb
sbb
jne
out
mov
in
pop
shlb
out
inc
push
sahf
es
and
jg
nop
jb
jecxz
pop
cmp
mov
inc
xchg
dec
jge
sbbl
stos
rcll
mov
movsb
or
mov
add
iret
pop
push
dec
leave
and
add
fisubs
rcrb
ficoms
into
test
push
jge
sahf
mov
std
imul
xor
setp
xor
das
addr16
and
rdpmc
arpl
pop
mov
jge
lret
inc
call
adc
imul
stos
dec
ss
xor
cmp
aam
xor
mov
or
int3
cli
adc
sahf
popa
xlat
cmp
rcrl
in
fnstcw
addr16
mov
push
or
jae
and
cmp
arpl
pop
push
push
push
mul
iret
xchg
enter
test
lods
sbbl
adc
dec
lock
cli
xor
andb
leave
mov
les
fiadds
in
sub
pop
popf
dec
lods
pop
sub
lods
xorl
jp
arpl
cmp
stc
or
sub
mov
xchg
add
sbb
jecxz
inc
je
mov
aaa
lds
daa
popa
iret
aam
mov
or
push
mov
test
lock
mov
inc
cltd
subb
xlat
cmp
xor
sbb
ja
testb
and
mov
outsb
je
push
les
fisubl
pushf
pushf
les
inc
imull
add
pop
stos
frstor
icebp
sub
xchg
inc
lods
rorl
les
or
add
cltd
inc
ds
popa
cld
pop
pop
inc
or
inc
mov
mov
xor
mov
stos
cmc
dec
fistpll
mov
or
cmp
hlt
jno
cwtl
jbe
jge
imul
jg
pop
adc
xchg
outsl
fisubrl
lods
sbb
push
scas
fs
cli
xchg
int3
negb
push
inc
cmpsl
mov
sbb
sti
push
sbb
aas
dec
jae
jle
iret
stos
cmp
jno
std
pop
stos
stos
lret
pop
jmp
pop
push
sarb
mov
hlt
out
in
and
ret
jns
pop
testb
sub
lock
xor
and
adc
pop
or
fildl
jl
popa
mov
call
mov
mov
push
pop
mov
xchg
xchg
jne
loopne
push
inc
mov
ss
dec
in
pusha
mov
aas
sti
mov
push
and
xchg
mov
repnz
mov
fcmove
in
leave
mov
jl
in
adc
cmp
fildl
loopne
out
aad
and
test
fnclex
xchg
and
jp
cmp
test
leave
fs
ljmp
adc
loope
call
cmc
sarl
jo
jmp
sbb
test
jae
xchg
adc
or
outsl
movb
stos
push
out
dec
xchg
mov
add
inc
cmp
icebp
js
lods
pop
setp
gs
inc
in
jl
leave
inc
push
int3
arpl
pop
aas
in
flds
jns
out
adcl
mov
add
mov
xor
fstpt
lcall
es
popf
cmp
ret
pop
cld
andl
cld
das
inc
fsub
adc
mov
jo
xor
or
loopne
cs
fsubrl
outsl
ficomps
dec
push
or
std
add
jns
mov
lods
jae
fidivrl
xor
mov
mov
and
dec
shll
jle
arpl
lret
xor
aaa
sbb
jl
cs
test
cld
mov
scas
xor
lret
cmpsl
fs
outsl
nop
pop
add
aas
push
stos
xchg
shlb
sbb
fcomps
mov
pop
mov
sahf
jle
xchg
mov
sbb
daa
test
cli
into
fwait
idivb
enter
je
mov
loope
push
sbb
pop
mov
iret
pop
mov
cmp
pusha
test
xchg
xchg
in
sbb
aam
xchg
cltd
push
and
aaa
mov
popf
sub
add
cltd
outsl
repnz
stos
divb
iret
xchg
mov
jg
xor
gs
fstl
inc
loop
scas
adc
sbb
mov
subl
int3
mov
ss
out
inc
cltd
fs
int3
and
orb
push
mov
sbb
jecxz
lods
leave
mov
xor
loope
or
std
movsb
fcoml
clc
es
sti
jl
mov
adc
imul
pushf
xchg
xchg
dec
add
push
fisubrs
and
push
pop
pop
mov
push
jge
cmpsb
cmp
inc
sbb
sbb
sub
fisttpl
addb
mov
rorl
push
mov
sub
cld
mov
lock
es
ja
xchg
imul
xor
inc
nop
adc
jae
jnp
mov
or
mov
shrb
adcl
sti
push
bound
imul
insl
shll
hlt
xchg
cmp
add
daa
adc
fs
out
push
xchg
fsubl
orl
repz
sub
jo
adcb
iret
stc
test
sub
enter
popa
test
jb
mov
jne
pushf
out
sub
fbstp
dec
xor
pop
mov
outsb
repz
cmp
addr16
lcall
sbb
pop
call
fisttpll
and
push
lods
cmc
icebp
fs
xchg
push
sub
dec
xchg
inc
mov
movsb
ljmp
adc
sub
dec
daa
cmp
fwait
pop
ds
or
fidivrl
pop
and
pop
mov
iret
dec
push
cld
mov
push
inc
test
ss
sub
fadds
xlat
jo
pop
aad
mov
scas
xor
lret
imul
imul
in
dec
in
into
push
xchg
jnp
pushf
cmovs
fdivrs
lods
je
iret
xchg
add
xchg
dec
adc
repz
pop
sbb
pushf
xchg
jbe
enter
loopne
pop
cmpsl
jl
aas
movsb
mov
clc
gs
int
mov
jg
sbb
popf
pop
icebp
lcall
lock
out
aad
stc
pop
cs
loopne
xchg
enter
in
movsb
inc
outsl
fwait
adc
jo
inc
jmp
sub
cmp
fsubrs
cmp
dec
lret
dec
hlt
nop
shll
or
test
lods
sub
mov
aam
ffreep
jl
imul
add
jbe
adc
aam
and
shlb
fcomps
rclb
les
ret
lea
mov
in
dec
cmpsl
mov
push
mov
xchg
in
cmc
inc
lods
mov
cmc
data16
pop
hlt
mov
lret
subl
mov
outsl
out
adc
hlt
sti
jae
inc
pop
cs
push
jl
pop
jmp
adc
dec
sub
pop
jecxz
inc
jmp
or
jnp
popl
inc
sub
les
adc
dec
mov
pop
adc
test
imul
push
loope
scas
sti
nop
jge
scas
je
mov
or
sbb
addl
mov
out
arpl
jle
xchg
xchg
push
nop
icebp
adc
inc
jbe
aad
ficoms
pop
loope
popl
sbb
ret
xchg
nop
inc
sar
mov
jbe
jle
inc
cmp
ret
push
mov
imul
push
shlb
mov
aad
into
push
and
into
movsb
xchg
mov
dec
aad
clc
jge
adc
xchg
inc
xchg
lods
cs
inc
pop
fnsave
pop
das
in
roll
jl
inc
and
and
shrl
inc
xchg
cmp
xchg
push
insl
ret
lret
xchg
adc
mov
adc
xor
push
in
push
js
int
in
inc
push
push
jmp
adc
movsb
mov
jl
xchg
mov
xor
add
and
negl
sub
mov
test
add
push
js
repnz
mov
xor
dec
or
mov
shll
hlt
fcmovne
mov
aam
mov
mov
lret
jno
out
push
iret
adc
and
and
icebp
in
fnsetpm(287
push
pusha
sbb
in
inc
daa
mov
jle
nop
cmp
adc
ret
test
imul
jb
push
sbb
adc
test
xchg
movsb
pop
add
cmp
mov
mov
icebp
mov
jge
in
fdivrl
imul
das
jg
dec
xor
les
push
sbb
ja
mov
sbb
or
ret
dec
sub
pop
movsl
repnz
jmp
sub
pop
or
movb
adc
stos
fs
lea
mov
pop
xor
mov
sub
insb
sarb
push
or
add
lock
jns
mov
pop
jne
mov
jmp
lret
rclb
pop
xor
mov
pop
push
movsl
cmp
loop
inc
fidivrs
sub
loopne
or
stos
loopne
outsb
aad
push
jecxz
mov
test
push
push
mov
in
pop
mov
push
xchg
das
movsl
jecxz
inc
cmp
jg
ret
js
pushw
cmpsl
bound
into
imul
and
hlt
mov
fmull
sbb
ds
jno
dec
dec
cmp
cmp
jmp
push
cmp
lods
adc
jno,pt
pop
int3
xorl
popa
aam
sub
dec
push
bnd
sub
call
sub
xchg
inc
adc
mov
hlt
push
dec
lret
xor
sbb
mov
jnp
xchg
loope
fistl
inc
int3
aad
mov
lret
cmpsb
loop
pop
mov
dec
ljmp
or
cmp
mov
pop
push
cmc
xor
sub
inc
mov
push
or
gs
sar
add
and
cli
ja
fldt
ret
orb
or
sti
add
call
cmp
inc
arpl
fbstp
loope
adc
xchg
fs
push
cmpsb
out
fwait
mov
in
or
cmp
out
sub
dec
cmp
jp
movsb
and
jbe
or
xchg
sbb
push
ss
push
mov
daa
mov
sbb
pop
ss
push
jl
adc
lds
or
push
dec
lahf
sbb
test
fdivrl
mov
movsl
movsb
mov
mov
add
or
and
mov
xlat
imul
adc
into
lcall
mov
mov
fstpl
clc
or
std
mov
add
iret
and
mov
hlt
push
andl
rclb
aaa
pop
test
or
cmp
pop
mov
ret
lahf
mov
or
fs
push
cmp
lret
push
jne
test
sub
imul
or
leave
mov
outsb
xchg
fs
jb
dec
stos
rol
mov
je
fs
jne
movsb
and
mov
pop
jno
sub
xlat
popa
ret
jg
orl
push
mov
insb
xchg
inc
inc
lds
sub
jl
adc
mov
shr
xchg
mov
inc
fisttpl
mov
popa
lods
xor
sbbl
dec
aam
test
rep
repz
loop
ja
in
mov
mov
push
or
adc
and
and
adc
cli
add
pop
cld
push
push
imul
dec
lods
les
xor
idiv
sti
cmp
into
out
sbb
or
int3
sbb
jns
pop
int
or
es
mov
cmp
aad
xchg
bound
push
adc
mov
rcr
push
mov
stos
adc
push
inc
pusha
in
jo
jb
out
cwtl
fs
cwtl
add
insb
lahf
pushf
pop
stos
out
adc
jmp
sub
pop
cwtl
pusha
cmpsl
inc
or
mov
enter
pusha
fwait
hlt
loope
push
lods
adc
sbb
jmp
mov
dec
test
popa
inc
into
loop
dec
nop
inc
xor
test
or
mov
lods
push
pop
xor
dec
pop
push
and
outsb
hlt
or
mov
jecxz
enter
and
dec
jg
sbb
stos
outsl
stos
lcall
mov
int
pop
je
pop
popa
jp
pop
ja
cli
adc
inc
lds
push
mov
pop
adc
jle
jnp
fidivl
mov
pusha
mov
fadds
mov
xchg
loope
sub
stc
push
pop
enter
mov
shll
mov
out
mov
arpl
jecxz
jne
push
adc
mov
cmc
pop
mov
pop
pop
push
mov
hlt
mov
add
js
push
sub
movsb
sub
jmp
xlat
xchg
daa
shlb
lret
stos
das
pop
mov
fs
repnz
fs
mov
loope
adc
dec
or
push
rol
push
into
in
mov
fadd
enter
adc
xlat
push
mov
test
mov
cmp
inc
loope
mov
mov
xchg
jb
adc
nop
push
xchg
int3
jbe
les
push
or
jne
lods
pusha
xchg
jmp
scas
mov
int3
in
xor
mov
es
sarl
std
loop
inc
mov
pop
cmp
xlat
adc
cmp
xchg
sbb
or
inc
push
lds
xchg
mov
push
mov
cmp
call
ud0
scas
sub
fnstsw
mov
sti
pushf
inc
or
adc
sub
mov
push
add
lret
pop
and
ret
rcll
fs
ja
inc
loop
xor
addl
pause
dec
imul
loop
mov
out
adc
in
mov
outsb
movsl
push
xchg
or
inc
insb
jb
out
mov
insl
sub
ds
js
out
jg
mov
pop
mov
or
mov
fbld
ret
ljmp
push
xchg
mov
scas
inc
dec
push
inc
rclb
cmp
aas
xchg
cmp
xor
rolb
push
popa
aas
stos
stos
push
lret
sub
int3
push
mov
ret
shrb
int
cld
mov
fcom
mov
push
cli
dec
jmp
in
decl
mov
daa
mov
adcb
test
cmp
subps
sbb
rolb
aam
dec
sub
cmpsl
cmp
add
daa
repz
dec
daa
movsl
or
and
in
testl
insl
mov
lret
sbb
das
add
mov
nop
push
jecxz
and
xchg
push
cmp
pop
les
into
mov
inc
sbb
xchg
xchg
mov
sbb
test
add
xchg
sub
movsb
push
sbb
orl
nop
rolb
std
pop
mov
inc
lret
dec
arpl
setb
leave
and
cmp
inc
aaa
cmc
mov
dec
mov
add
cmp
lret
pushf
jmp
push
pushf
mov
popf
test
adc
addr16
adcb
aam
aas
es
mov
add
fldenv
add
or
mov
inc
in
mulb
add
sbb
mov
imul
aas
or
js
hlt
add
and
add
inc
imul
sub
les
bound
lret
pop
arpl
repnz
bound
and
xchg
andl
or
cmp
xor
shll
loope
loop
inc
and
leave
mov
push
iret
mov
fs
jl
xchg
ret
xor
mov
push
add
and
fidivrl
xchg
cmpsb
xor
popf
sahf
jge
fcmovnu
jbe
ftst
dec
popl
push
push
inc
lret
jnp
sbb
dec
nop
rclb
mov
mov
clc
aas
mov
xlat
xchg
lahf
pop
jb
inc
in
jp
rolb
ja
int
xchg
dec
mov
jbe
addr16
add
mov
int
cmc
leave
fwait
dec
or
cmp
xor
jmp
xchg
incb
andl
mov
pop
cwtl
jl
int3
cmp
movsl
lock
mov
xchg
sbb
inc
ss
pop
inc
dec
mov
mov
xchg
push
adc
int3
lods
nop
push
iret
into
mov
mov
sub
adc
pop
mov
and
cmc
subb
jmp
mov
cmpsl
fidivrs
mov
jns
mov
cmp
lret
fxch
mov
dec
rcrl
loopne
push
pcmpeqb
sbb
movsl
xlat
jecxz
lods
xor
pop
pop
cmp
pop
adc
mov
aaa
mov
mov
sahf
int3
fbld
and
fadds
popa
dec
mov
test
xchg
cltd
insl
mov
sbbl
daa
fstpl
cmp
cmp
int3
mov
pop
mov
mov
pop
pushf
mov
mov
rclb
xchg
push
mov
call
cmp
mov
adc
test
outsl
pusha
arpl
in
fcmovbe
inc
cmpsl
and
sbb
ja
mov
sub
dec
push
sti
inc
addr16
ss
pop
or
cs
test
lret
adc
lret
inc
imul
aaa
das
in
sbb
jbe
mov
xchg
js
pop
adc
adc
and
outsb
sub
inc
add
push
mov
in
mov
les
cwtl
fcmovnu
nop
dec
fisttpll
cmovs
test
ret
insb
jmp
stc
fs
sub
loop
jb
data16
push
jnp
mov
lret
nop
imul
in
aad
mov
leave
dec
pop
pop
and
sub
mov
ds
inc
and
or
xchg
push
push
xchg
jno
adc
jle
loopne
pop
inc
xchg
and
mov
shlb
repnz
movl
dec
pop
in
inc
adc
push
repnz
fs
enter
call
ret
push
xchg
pop
out
cmpsl
bound
leave
sbb
dec
stos
cmp
add
add
pop
cli
sub
fbstp
sbb
dec
pop
mov
cmp
pop
test
and
xor
les
cmp
pop
add
loopne
movsb
jp
lcall
xor
mov
aad
pop
std
dec
and
pushf
cwtl
test
pop
roll
and
into
icebp
call
add
stos
inc
sbb
icebp
ss
sub
cmp
mov
jbe
dec
mov
mov
repnz
push
adc
fldl
mov
dec
popa
repz
lods
popa
sbb
and
aas
data16
insb
mov
dec
push
int
into
test
mov
xchg
push
mov
stos
lods
xor
insb
sub
or
or
mov
lods
mov
mov
stos
je
sahf
jae
dec
inc
negl
pop
aam
mov
inc
mov
and
loop
enter
mov
scas
in
inc
mov
call
imul
or
lods
mov
xchg
pop
mov
leave
xor
cmp
pop
cld
mov
mov
mov
inc
imul
filds
sbb
jp
pop
mov
lods
sub
mov
loop
inc
xchg
fs
jns
jno
mov
scas
inc
sahf
xor
cmp
fidivrs
xor
scas
inc
mov
negl
xor
aas
pop
pop
inc
inc
mov
mov
aaa
repz
ljmp
rcrl
cmp
mov
scas
xchg
insb
xchg
and
or
pop
loope
pop
and
jge
inc
das
cwtl
push
cmp
lods
mov
pop
sbb
dec
add
push
int3
lea
add
cmp
shrb
add
or
and
loopne
xchg
add
pop
sarl
lret
gs
sti
xchg
cli
xor
movsb
cmp
mov
jl
fs
cmpsl
push
cmp
loop
aaa
shlb
jbe
ljmp
mov
data16
cmp
or
lock
mov
jmp
mov
and
dec
dec
fisttpl
push
pop
dec
imul
mov
stc
rcrb
sar
xor
or
or
in
stos
xchg
mov
cmpsb
enter
mov
shlb
mov
in
jl
lret
xlat
cmp
pop
mov
ret
rcrl
ldmxcsr
enter
mov
pop
int
or
mov
sbb
cs
mov
inc
pop
repz
nop
dec
xor
push
fcomp
sub
dec
jmp
push
cli
or
dec
xchg
and
sub
jp
enter
rclb
cmp
in
jg
cld
mov
mov
jmp
inc
xor
pop
push
push
movsl
sbb
fwait
push
ret
popa
add
rorl
daa
jbe
insl
shll
ret
and
sti
and
push
std
push
imul
fsubrs
mov
outsl
fs
ret
mov
and
sahf
mov
sub
pop
out
add
jmp
out
mov
ds
sbb
mov
pop
loopne
jmp
and
into
mov
dec
cmp
js
adc
daa
repz
addr16
imul
jb
xor
pop
adc
and
xchg
mov
lcall
fiaddl
and
shrl
pop
mov
jmp
jns
leave
sub
es
arpl
js
arpl
xlat
pop
cmovns
jle
test
cmp
mov
adc
jbe
sahf
aas
out
int3
adc
jbe
fisubs
and
inc
xor
rcrl
sub
xchg
sbb
sti
xor
cli
and
addl
das
stc
push
lds
pop
jbe
xchg
xchg
xchg
test
push
xchg
cmp
out
loope
mov
jbe
xchg
cmp
cmp
test
mov
push
loopne
xchg
sbb
adc
pushf
cmp
or
dec
outsb
rorb
idivb
inc
push
xchg
cmp
ds
push
cmpsl
mov
stos
popl
adc
out
sbb
dec
add
xor
xchg
fstpt
inc
std
addb
sbb
ret
ret
cmp
icebp
mov
ja
cltd
addl
popa
pop
jp
outsb
call
jp
xor
incb
jb
sub
xor
mov
xor
mov
xchg
jl
scas
es
inc
mov
mov
or
lods
jne
adc
xchg
mov
xchg
cltd
mov
dec
fwait
scas
js
mov
lea
inc
mov
xchg
mov
dec
lcall
jcxz
shll
int3
mov
jno
pop
inc
scas
rcrb
sbb
sub
in
dec
lret
jne
and
arpl
aad
xchg
fbstp
bound
adc
cmpsl
insl
jmp
or
pop
in
les
aas
shlb
int3
mov
pop
repz
jb
imul
pop
aad
bound
cmp
sbb
xchg
inc
hlt
or
inc
lret
pop
xchg
fimull
mov
dec
mov
mov
sbb
inc
xchg
call
or
lods
ss
sub
inc
pusha
mov
inc
cmp
add
loope
add
sub
add
test
push
dec
sub
sbb
jb
cmp
inc
pop
scas
lods
sbb
dec
fwait
cmpb
xor
inc
inc
push
stos
aaa
dec
mov
lock
pop
cmp
jb
pop
xlat
fst
add
sbb
data16
cmc
js
mov
xor
push
aas
mov
jbe
or
loope
jle
jp
push
nop
nop
outsl
loop
add
mov
xchg
sub
dec
or
mov
sahf
xchg
and
jle
ja
iret
mov
enter
andb
inc
sub
enter
jecxz
out
inc
xchg
inc
mov
data16
inc
int
cwtl
js
test
mov
lds
lds
add
cmp
ljmp
inc
or
push
in
into
dec
lret
lock
sbb
mov
push
stc
mov
jne
adc
pop
pop
stos
jbe
dec
shrl
ret
andl
stc
jg
pop
loopne
push
xor
sub
rcl
add
jl
mov
sbb
push
pop
ds
clc
mov
ss
loope
mov
popa
in
jb
pop
leave
push
fsubl
or
xchg
cmp
test
pushf
jae
int3
cld
dec
stc
je
movsl
mov
adc
lods
icebp
push
cmp
in
dec
jno
dec
mov
sub
imul
mov
dec
mov
pop
xlat
mov
adc
lods
cmp
inc
outsb
fstpl
insl
out
mov
add
pop
mov
lods
mov
loop
mov
ret
shrb
addr16
sub
xchg
enter
fiaddl
or
cmp
enter
pop
clc
and
in
jl
aas
jmp
lret
inc
or
jo
push
cmp
adc
jbe
std
pushf
test
jnp
in
sub
jecxz
cmp
out
cs
popa
notb
mov
xor
pop
mov
test
out
and
in
sub
data16
fld
cltd
add
mov
in
inc
hlt
add
mov
mov
push
stos
adc
xchg
cmp
cwtl
cmp
pop
inc
nop
call
cs
ret
adc
int3
add
pop
add
lea
dec
mov
pop
push
dec
and
pop
std
or
es
xchg
fdivrl
jg
dec
rcrb
std
jmp
cmpsl
movsb
xor
adc
iret
les
shl
sbb
cmp
iret
dec
jmp
fiaddl
pop
inc
dec
sbb
mov
fisttps
add
adc
repnz
cmp
inc
adc
call
pop
pop
mov
sub
inc
pusha
aam
jb
stos
jle
ja
add
mov
ret
idivb
cmpsb
inc
cld
imul
lods
shll
nop
in
push
push
xor
mov
mov
ret
test
and
std
cmp
inc
lret
std
pop
nop
aaa
push
push
enter
mov
inc
adc
cmp
dec
cmp
jno
add
and
dec
loopne
les
and
insl
mov
sbb
mov
mov
popa
ret
add
sahf
inc
or
or
ds
mov
cmpsb
sub
mov
nop
add
jg
xchg
stos
inc
in
cmp
iret
dec
sub
xchg
aam
add
xor
lret
je
jge
sub
les
lret
mov
cmpsl
push
push
stc
imul
ret
mov
stos
imul
dec
mov
mov
leave
fwait
rorb
or
lds
dec
sub
stos
rorl
push
xchg
inc
push
xchg
mov
fsts
pop
mov
mov
adc
test
daa
sbb
aad
or
cs
sar
outsl
in
shl
push
in
shlb
add
daa
test
cmc
shl
icebp
and
enter
cmp
or
jno
fmul
mov
test
aam
out
mov
out
fstl
pop
and
iret
rorb
sub
cmp
test
dec
mov
nop
lods
clc
sub
outsl
push
xor
jmp
xchg
inc
lods
sub
cwtl
push
jae
mov
mov
hlt
jo
jno
inc
xchg
cmp
jg
call
adc
pop
ds
ret
dec
enter
add
adcb
rcll
or
push
aas
les
mov
cmp
js
sub
mov
sub
ret
add
mov
pop
mov
leave
gs
insb
stos
sbb
into
lahf
mov
test
cltd
fdivrs
mov
stc
sub
iret
or
fildl
flds
mov
aad
rolb
int
dec
lret
insb
rcl
lret
dec
dec
inc
or
cmp
cmp
out
lret
mov
sar
icebp
jae
fcoms
fs
shll
orb
lods
repnz
fstl
fsub
xlat
jno
movsl
lret
lock
cs
xchg
and
in
into
mov
xor
push
cmp
cmp
xchg
je
cmpsl
test
daa
adcb
pop
lods
out
outsb
call
inc
arpl
push
cli
jno
adc
pushf
ret
pop
xchg
push
mov
mov
cld
in
into
dec
dec
mov
jle,pt
xorl
cmp
push
mov
mov
adc
out
fnstsw
cli
add
push
add
or
imul
aas
mov
xchg
add
inc
stos
bound
addr16
mov
stos
sbb
lret
add
jle
les
dec
jp
jb
xchg
add
inc
lret
in
jae
fadds
mov
cwtl
sub
lods
jmp
movsl
iret
dec
inc
ljmp
nop
js
dec
sub
adc
cmp
jl
scas
int3
stc
inc
push
adc
scas
mov
loopne
in
cmp
arpl
sbb
or
es
pop
bound
fiaddl
insb
leave
repnz
punpckhwd
mov
xor
aas
out
roll
push
ret
leave
inc
push
jmp
shl
cwtl
push
in
in
shr
lods
jnp
mov
stc
mov
mov
adc
sbb
sub
int
ret
inc
aam
shlb
adc
and
fidivl
and
hlt
scas
and
call
jae
jg
popa
aaa
mov
insb
test
mov
cmpsl
and
enter
cltd
icebp
jl
nop
jg
xor
jb
iret
mov
cmp
jb
lea
mov
xchg
or
pop
in
stc
insb
push
push
xchg
enter
mov
sti
out
fmuls
add
sbb
cmp
add
jmp
xchg
sub
jecxz
xchg
mov
adc
xor
fildl
jo
fsubrl
test
aad
dec
jecxz
jmp
das
je
insb
leave
std
loop
roll
or
cmc
lock
push
sbb
xor
jl
xchg
movsb
adc
call
arpl
and
cmp
dec
dec
or
lahf
pop
movsl
mov
enter
js
stos
dec
mov
pop
push
subl
fmulp
and
les
insl
andb
inc
jb
xor
push
sub
fcom
in
andb
push
fmul
stos
mov
pop
out
addb
test
les
in
fiaddl
xor
enter
stc
xchg
xchg
xchg
push
cwtl
aas
cmpsb
cmp
iret
or
daa
mov
dec
jp
in
mov
inc
dec
jne
scas
pop
mov
pop
and
mov
add
and
xor
stos
inc
dec
mov
pop
mov
add
xor
mov
aas
pop
mov
inc
xlat
xchg
xor
push
dec
sbb
mov
fcoms
mov
mov
aam
imul
jge
cmc
es
xchg
dec
pop
push
push
daa
dec
arpl
lods
mov
xor
push
inc
imul
popf
ror
xlat
pop
adc
jbe
insb
add
xor
movsb
xor
test
mov
xlat
scas
pop
push
dec
mov
sbb
and
mov
xor
inc
andps
and
pop
ja
and
call
test
cwtl
das
popa
fwait
xchg
and
mov
mov
push
pop
mov
sub
data16
hlt
loope
sti
mov
xchg
insb
pop
daa
shrl
pop
pop
jae
xchg
adc
xor
roll
xorb
jnp
push
pop
out
or
xchg
out
xchg
xor
iret
sbb
ret
lock
jg
add
mov
push
je
sbbb
fsubrs
cmpsb
sahf
xor
int3
pop
mov
ret
aam
jecxz
xchg
lods
in
test
pop
push
aas
mov
test
nop
jae
mov
or
addl
mov
mov
arpl
dec
rcr
in
cwtl
mov
inc
jns
movsb
pop
dec
xchg
mov
adc
shlb
adc
mov
unpcklps
enter
ret
mov
lret
and
or
jns
cmp
inc
sbb
sbb
test
mov
jmp
push
add
inc
stc
add
push
loope
adcb
addl
jno
xbegin
sbb
mov
fidivl
das
dec
add
jb
cmpsb
cmp
push
icebp
push
shl
imul
cli
mov
aad
or
enter
xor
add
dec
in
push
gs
sub
psubq
mov
mov
in
sub
lret
jbe
lods
pop
dec
mov
inc
iret
xorb
ret
cmp
pusha
mov
stc
out
xor
nop
push
cmpsl
inc
pop
repz
addb
xchg
jns
push
sbb
ja
lahf
mov
add
clc
sti
mov
and
mov
and
repz
and
lods
scas
or
sub
mov
cmp
xor
mov
cli
sbb
lea
insb
mov
xchg
sbb
mov
je
jmp
ret
mov
jecxz
pop
mull
cli
mov
cmp
fbstp
xor
ljmp
sti
in
inc
fldenv
dec
fiadds
sarb
pop
add
mov
add
ja
test
push
push
inc
jmp
sub
or
icebp
les
xchg
xor
xchg
test
test
insb
inc
add
jns
inc
xchg
inc
pusha
mov
sbb
mov
call
cli
shll
loop
xorb
test
dec
imul
rolb
loop
roll
or
xor
mov
test
sarl
lods
test
ds
outsl
and
dec
cli
mov
add
popa
xlat
pop
pop
shlb
add
mov
mov
mov
push
lahf
cmpsb
mov
mov
pusha
xchg
jl
add
xor
cmp
mov
xchg
int
int
mov
imul
fdiv
mov
pop
add
mov
inc
xchg
pushf
inc
ret
enter
fdivs
hlt
inc
jne
mov
aaa
stc
xchg
jae
rclb
mov
sarb
pop
mov
adc
pop
and
bound
inc
imul
dec
mov
cld
inc
je
push
add
insb
xor
leave
or
iret
imul
sub
enter
dec
rolb
repz
inc
push
add
roll
in
movl
into
pop
sbb
les
pop
or
enter
dec
cmp
sub
int
dec
and
pop
jecxz
lods
cmpsb
or
add
pop
push
int
rcrl
cmc
jbe
adc
loop
jnp
cs
jl
enter
pop
in
dec
adc
adc
mov
jp
or
cmp
push
shlb
inc
push
lods
push
paddsw
jae
lcall
lods
int3
dec
jo
leave
shrl
shll
xchg
add
add
mov
scas
cmpsl
dec
pop
mov
xchg
jns
pop
inc
xlat
cmpsb
pop
inc
test
outsl
arpl
push
or
xchg
jb
mov
icebp
ds
insl
jle
or
enter
push
shr
shlb
lret
mov
cwtl
adc
insb
and
nop
dec
xlat
push
or
popf
sbb
mov
xchg
lock
repz
cmc
sub
pop
jecxz
pop
sbb
xlat
clc
sub
cwtl
nop
cmp
cmpsl
pop
mov
cli
inc
add
fldt
inc
mov
jno
dec
inc
and
in
ljmp
sbb
out
and
dec
aas
mov
bound
int
jns
inc
mov
inc
or
aas
mov
add
pop
stos
int3
cmp
cld
dec
arpl
js
fisttps
mov
adc
dec
daa
fisttpll
or
dec
test
int3
push
cmp
imul
fcmovnb
lcall
punpckhwd
jbe
cmp
pop
mov
xchg
loopne
mov
rclb
inc
fwait
inc
mov
lods
mov
jmp
je
inc
xor
mov
sti
xor
inc
mov
enter
adc
lods
and
nop
jecxz
pop
in
aam
lods
addr16
mov
loop
xchg
test
mov
cli
adc
sub
out
test
icebp
dec
jmp
inc
out
pop
cld
loope
add
loop
popa
lret
insl
cltd
add
stos
fwait
pop
or
push
xor
sbb
rcl
enter
testl
roll
push
je
addl
push
pushf
lret
pop
cmpsl
aas
adc
sbb
outsb
std
rcrl
out
sbb
xlat
push
fstps
jmp
add
and
inc
sti
js
es
jo
sub
test
call
lret
mov
cltd
add
push
jns
aas
push
dec
inc
ds
push
cmp
cmp
inc
mov
movsb
enter
or
dec
dec
pop
bound
sbb
mov
pop
push
dec
cli
inc
out
mov
lds
shrb
cld
pop
push
mov
rol
mov
push
rcrl
pop
jecxz
cmp
jge
mov
inc
sub
movsb
repz
pop
les
sub
movsl
sbb
loop
pop
sub
dec
adc
mov
and
pop
dec
mov
xor
jl
dec
dec
pop
cmp
je
add
adc
and
lcall
jne
aas
and
in
clc
jp
add
vpcmpeqw
jmp
pop
dec
sti
sub
mov
sbb
loopne
movsl
jo
mov
cmp
mov
call
jmp
xor
sub
cmova
dec
mov
lods
daa
shrb
cmp
and
sbb
sti
sub
pop
mov
cld
push
inc
loop
mov
popf
lock
mov
mov
ss
out
je
pop
push
in
dec
lea
sbb
push
cmpsb
fldcw
sbb
popa
mov
int3
xchg
adc
inc
mov
mov
test
test
mov
pop
cmp
sub
jmp
cs
cmp
idivl
push
push
jle
add
mov
fwait
neg
adc
out
mov
inc
adcb
loopne
cmp
nop
cmp
dec
inc
das
sar
fs
roll
mov
and
outsl
or
mov
mov
pop
mov
add
mov
mov
iret
sub
inc
xchg
mov
test
push
dec
cld
lock
jmp
scas
lods
xchg
or
cmp
ja
mull
add
push
nop
lcall
daa
outsb
mov
lods
dec
jecxz
aam
pop
repz
inc
cmpsl
jbe
sahf
in
jns
sahf
pop
sarb
mov
not
je
xchg
hlt
sub
mov
or
mov
and
ja
clc
mov
push
or
lahf
mov
inc
std
sbb
fistpll
dec
outsl
ret
aas
pusha
shll
ret
mov
dec
lret
aas
sti
lcall
pop
jg
adc
cli
clc
dec
cmp
ret
inc
repnz
xlat
inc
and
inc
cmp
xor
lds
andb
sub
loopne
mov
dec
push
xchg
es
stos
repnz
jle
mov
jno
icebp
mov
inc
arpl
ret
inc
shrb
insb
pop
dec
ljmp
jmp
cmc
test
out
das
fs
hlt
mov
sarl
inc
xor
jb
xchg
pop
imul
fidivrs
mov
js
pop
shll
sbb
insb
sub
or
ret
stos
lds
nop
mov
dec
inc
mov
movl
inc
movsb
das
nop
xchg
cli
dec
test
stos
cmp
cmpsl
xchg
lahf
mov
xchg
pushf
mov
insb
loopne
mov
es
jb
ja
shrl
mov
sbb
and
rcrl
cld
inc
enter
adc
mov
lcall
and
mov
jb
dec
ror
or
aas
or
jnp
mov
cmpb
add
in
fisubrs
fstps
lods
scas
mov
xchg
loope
inc
cld
mov
xor
and
call
sub
cli
sub
mov
insl
mov
jecxz
xor
inc
mov
sbb
test
mov
std
push
test
mov
lock
movsl
mov
and
sub
nop
clc
push
pop
pop
xor
js
loop
inc
fdivr
sub
cmpsl
enter
push
inc
inc
pushf
ljmp
aam
sbb
xchg
nop
and
icebp
jp
jno
push
mov
hlt
jbe
sbb
adc
ljmp
xchg
sar
inc
loopne
mov
inc
xor
inc
xor
mov
cmpsb
faddp
and
loop
rcrl
or
insl
xor
push
add
cltd
dec
cmp
sbb
ja
inc
int3
shlb
jo
cmp
rorb
ja
cwtl
pop
nop
push
jae
fiaddl
inc
dec
mov
push
rclb
push
int
pusha
or
imul
loop
push
pop
dec
sbb
jg
imul
mov
mov
adc
popf
mov
into
mov
mov
pushf
xchg
cmpsl
add
out
mov
mov
dec
shlb
mov
fstps
pop
test
das
mov
test
and
xor
mov
push
sti
cwtl
add
inc
mov
jo
add
andb
or
ljmp
inc
add
lahf
orl
xchg
or
and
shll
stos
dec
add
xor
dec
mov
pop
pop
push
dec
test
push
into
call
sti
mov
lock
push
sub
icebp
cmc
test
shlb
and
jge
mov
movsb
jns
int3
icebp
dec
sub
iret
cwtl
je
and
lds
ret
in
popf
outsb
out
pusha
lcall
mov
dec
test
xchg
sbb
jle
mov
sub
fidivl
push
sub
aaa
add
jge
add
xchg
cmp
mov
repnz
fwait
sbb
push
mov
cwtl
and
les
insb
adc
push
xchg
mov
add
pop
jecxz
inc
mov
xchg
push
jo
pop
stos
jle
stos
sub
rclb
and
lock
jae
int
into
and
cmp
pop
pushf
add
lcall
stos
fadd
mov
push
test
add
mov
inc
js
xor
inc
inc
or
lea
add
test
fmull
test
pop
mov
inc
and
push
and
or
aad
add
lds
sub
loope
jecxz
pop
decb
add
or
int
nop
cmp
inc
dec
cmp
into
popf
jmp
adc
pop
dec
std
popa
xchg
rolb
mov
or
jecxz
stc
adc
push
mov
jmp
ror
mov
in
js
mov
lock
inc
roll
or
push
and
nop
hlt
and
and
aad
mov
imul
sbb
dec
mov
mov
mov
xor
ljmp
pop
sub
mov
lock
pop
and
test
dec
mov
ja
jecxz
nop
ret
xchg
ds
enter
loop
and
or
movl
pusha
mov
cmp
fisubrs
scas
pop
mov
and
mov
cmp
imul
fwait
loope
imul
and
lcall
fdivl
out
sub
in
popf
stos
inc
jb
shlb
xchg
loop
sbb
or
sbb
push
pusha
sub
enter
mov
icebp
and
test
adc
enter
cmp
and
call
and
xor
inc
sbb
popf
iret
cmp
jg
cltd
mov
daa
dec
xchg
mov
cmpsl
dec
cmp
add
in
inc
push
or
sbb
sbb
imul
cmp
push
and
sbb
inc
jbe
xchg
sbb
pop
and
mov
repz
mov
inc
mov
sbb
sub
outsb
pop
sub
int
or
mov
mov
sbb
push
rcll
add
dec
xlat
das
inc
lret
fwait
pop
test
xchg
int3
jge
mov
bound
mov
int3
js
fmuls
rcrb
adc
jno
xor
mov
cmp
jne
loopne
in
les
dec
test
and
adc
aas
cmp
sub
and
mov
es
mov
fcmovnbe
ror
out
sub
enter
sbb
fildl
jge
clc
cltd
ret
sbb
mov
or
fists
dec
or
adc
mov
les
adc
test
adc
testb
push
fdivr
or
mov
int
flds
adc
lcall
gs
popf
inc
inc
mov
in
int3
in
lret
lea
inc
pop
mov
adc
pop
movsl
mov
andb
mov
adc
push
pop
and
jo
into
jg
jno
or
dec
adc
stos
jmp
lret
mov
ljmp
xchg
fstpt
mov
mov
not
inc
mov
and
lea
adc
arpl
pop
xor
cld
cmpb
test
adc
cmp
test
pop
orb
xchg
into
test
leave
in
sub
adc
xchg
dec
cltd
es
leave
mov
andb
xor
out
pushf
cwtl
xlat
int3
out
pop
icebp
fwait
scas
sub
iret
and
jge
inc
scas
adc
out
or
stc
pop
mov
jl
xor
mov
mov
fxch
jns
cmpsb
or
fstpl
outsl
aas
cmpsl
pushf
daa
xchg
leave
pop
bound
pusha
imulb
pop
xor
adc
xor
sbb
cmp
test
jle
xlat
repnz
mov
or
cmp
and
sub
or
or
xchg
mov
add
push
jp
push
ficompl
inc
mov
jno,pn
mov
sbb
rolb
mov
or
cmp
aas
mov
mov
clc
in
sbb
xchg
rcl
xchg
mov
lret
adc
imul
push
pushl
mov
and
lahf
push
inc
inc
adc
repnz
outsl
pop
lods
add
fistps
fildll
aad
shlb
cli
push
loope
inc
mov
mov
scas
mov
test
not
pusha
pop
lcall
or
adc
aas
cltd
push
dec
lret
jg
in
lods
enter
insb
dec
and
lods
mov
xchg
xchg
dec
xchg
add
mov
mov
les
pop
fs
cmp
popa
stc
test
adc
mov
pop
push
add
jne
shll
pxor
bound
imul
mov
pop
leave
mov
stc
ds
lds
fmul
pop
pop
popa
shlb
in
fwait
inc
mov
pusha
loope
cmp
mov
sbb
hlt
inc
sub
pop
pop
insb
mov
mov
leavew
loope
test
adc
push
in
mov
mov
sbb
sub
ja
jecxz
add
outsl
jg
cli
add
insb
push
pushl
inc
mov
lret
mov
mov
dec
das
gs
rolb
push
outsl
jg
ret
push
push
mov
rclb
rol
mov
and
jg
inc
std
xchg
xlat
jge
pop
pop
cmp
lret
and
js
sbb
scas
daa
aaa
sub
xchg
mov
inc
cmp
lea
push
xlat
mov
mov
enter
pop
in
jb
into
and
loopne
pop
or
sarb
mov
pop
mov
or
push
test
xchg
filds
js
mov
dec
adc
xlat
test
push
lahf
jno
adc
dec
jbe
jno
fisttpll
push
mov
test
into
sbb
inc
pushf
inc
mov
ljmp
jno
cmpsl
inc
or
xchg
mov
sub
push
cld
test
int3
dec
dec
xor
push
lahf
pop
or
mov
lds
or
cmpsb
test
inc
inc
or
aad
rol
and
cli
nop
xchg
mov
push
nop
adc
and
jmp
mov
std
sahf
mov
rcrl
jle
rclb
or
mov
and
popa
jecxz
xchg
sbb
sub
xchg
mov
loope
ljmp
nop
mov
in
inc
loopne
jae
push
imull
out
cwtl
and
loope
and
pop
mov
mov
sbb
mov
ds
test
adc
stos
push
pusha
int
fidivs
fadds
pop
pushf
xchg
sahf
jp
inc
bnd
xchg
mov
xor
jns
and
cmpl
sti
addr16
je
notb
in
out
mov
lcall
arpl
int
loopne
subb
pop
pop
mov
mov
sub
mov
push
pop
loop
rclb
shl
jg
dec
in
rcll
ljmp
shl
push
inc
test
xor
or
aam
sahf
psubd
adc
mov
jge
dec
and
movsb
test
lret
xchg
mov
stos
rolb
cs
add
fidivrl
jmp
les
or
cmp
test
mov
inc
inc
aaa
sbb
loopne
mov
adc
or
jns
lret
int
leave
dec
mov
sbb
mov
leave
add
mov
or
das
shl
test
inc
cmpl
fmuls
xor
insb
fninit
clc
movsb
fiaddl
adc
xchg
pop
add
out
sbb
jmp
imul
adc
js
sub
subl
cmp
lods
ja
mov
inc
js
lret
xchg
loop
mov
mov
xchg
mov
cli
pop
cmc
ret
jo
cmp
inc
dec
mov
es
fnsave
xor
xchg
push
pop
mov
cmp
lgs
push
mov
pop
xchg
imul
jecxz
ja
add
mov
jae
movsb
xchg
dec
je
inc
mov
pop
scas
mov
nop
jl
mov
push
cli
rcrl
clc
cli
xor
fadd
sub
sbb
mov
ret
pop
mov
clc
sahf
sti
je
dec
lcall
mov
adc
push
push
gs
popf
jge
mov
push
mov
mov
pop
insb
inc
and
fstps
push
imul
push
and
jmp
aas
decb
and
add
jnp
jecxz
pushf
pushf
data16
testb
shlb
lsl
aas
pop
and
or
ret
add
pop
popf
imul
orb
cmp
ret
jae
leave
jbe
cmp
sub
xor
sbb
pop
dec
out
aam
enter
cmp
mov
pop
nop
outsb
and
test
bound
pushf
jo
lods
lods
jp
pop
addr16
sbb
sub
ja
xchg
pop
add
cmp
cmp
jne
leave
subl
add
jg
fs
push
fstpt
xlat
imull
and
sub
mov
rcr
add
and
cwtl
jns
dec
sahf
push
pop
and
add
jg
push
sub
xchg
add
ret
sub
aas
pushf
pop
sahf
cmp
mov
xchg
les
xchg
sbb
ror
cmp
sarl
out
sbb
dec
push
adc
les
mov
loopne
fadd
nopl
fs
ret
cmc
out
lret
mov
jge
bound
pop
push
push
dec
push
pop
inc
loope
js
imul
push
jp
adc
sub
fnstcw
aas
push
mov
mov
or
les
dec
jnp
and
jo
imul
mov
dec
and
push
sub
sarb
clc
jae
jp
adc
ret
pop
mov
cltd
xor
mov
inc
add
dec
push
cmp
mov
ds
pop
mov
mov
shl
call
clc
rcll
sbb
cli
cmp
inc
in
movsl
aas
xor
sbb
and
test
mov
in
or
mov
cmpl
rcr
addr16
or
ret
fidivs
fcmovnbe
mov
clc
les
lods
mov
inc
rcr
xchg
dec
cmp
clc
scas
cmp
dec
inc
inc
aaa
or
loop
or
out
insl
mov
sbb
dec
popl
loope
mov
ficomps
aad
xchg
lods
jo
insl
nop
mov
inc
mov
mov
cld
pop
add
mov
insl
sub
xlat
rcr
pop
or
mov
push
jge
and
enter
hlt
adc
xor
js
mov
sub
push
jge
push
sub
enter
pop
dec
or
in
test
dec
fnstcw
or
add
dec
outsl
and
jle
add
sbb
push
les
in
loop
subb
fwait
adc
push
inc
xor
out
dec
ret
adc
inc
ret
push
aas
lea
loop
dec
cs
js
add
cmpsb
adc
jmp
jb
int
shll
kunpckwd
icebp
pop
rolb
out
rcl
lds
xchg
mov
pusha
nop
or
test
mov
fwait
stos
or
ret
outsl
aas
ja
jmp
fsqrt
add
fildll
adc
jl
mov
aad
addr16
das
in
xchg
rcrl
adc
jg
ret
push
imul
push
dec
sti
imul
sbbb
ficoml
cwtl
cli
shll
cmpsb
jl
sahf
pop
pop
test
push
or
call
jnp
mov
sti
mov
pop
test
fisubrl
mov
fisttpl
data16
inc
shll
lcall
sahf
mov
addb
aas
gs
xchg
in
dec
xor
outsl
inc
or
rol
dec
or
jg
adc
or
fidivs
dec
adc
sbb
lds
lods
push
push
push
rcrl
jns
fdivrl
ret
jb
add
out
and
push
aaa
icebp
mov
sti
cs
and
dec
inc
stos
jmp
pop
mov
pop
add
fdivrl
and
pop
xor
stos
std
mov
mov
mov
in
outsl
add
mov
cltd
cmpsb
mov
cwtl
out
repz
iret
lock
jo
les
adc
cli
jb
ret
cmc
into
ds
dec
scas
push
mov
in
jb
xchg
and
or
mov
test
pop
or
out
push
inc
pop
mov
das
call
stos
push
jg
inc
dec
jbe
sbbl
clc
ret
xchg
inc
push
test
ret
mov
add
add
mov
xor
xchg
fldl
cwtl
je
jnp
xlat
repnz
jecxz
insl
cs
xor
mov
pop
mov
sub
ret
xchg
stc
push
lea
sahf
push
fcmovne
push
push
mov
shlb
jp
sub
nop
or
dec
cmc
aam
inc
inc
mov
jnp
pop
iret
scas
inc
push
les
popf
rol
cltd
fmull
dec
inc
mov
arpl
ret
call
fimull
pop
or
pop
inc
pop
push
stos
sbb
addr16
mov
sub
aad
mov
xlat
push
mov
lcall
outsb
mov
xchg
mov
out
dec
das
add
inc
inc
jbe
les
imul
ffreep
inc
cmp
sub
lods
add
ret
into
loop
push
stc
cwtl
repz
lret
push
mov
pop
dec
or
mov
andl
les
xlat
lahf
cmpb
jo
aaa
fidivrs
adc
xor
lods
pop
or
mov
stos
push
stos
shl
fsubp
sahf
js
mov
pop
ljmp
mov
into
pop
cltd
shlb
std
ror
test
imul
icebp
fwait
pusha
sbb
fstpt
cld
sbb
dec
mov
fbstp
mov
sub
movsb
add
inc
inc
incb
daa
adc
mov
jno
cmpsb
mov
imul
xor
aam
sbb
cmp
ret
jb
push
ljmp
outsb
add
cmp
xchg
sub
xchg
push
mov
pop
sub
cmp
cmp
fsubl
push
std
stos
ret
push
sahf
and
mov
and
jg
mulb
inc
mov
push
push
pop
out
push
mov
xor
sahf
das
mov
inc
xchg
stos
mov
aam
dec
pop
fwait
and
or
push
mov
mov
movsl
xchg
ret
push
jmp
test
test
jns
gs
ret
ret
stc
mov
adc
jbe
je
sbb
and
mov
cs
lret
and
lds
mov
xlat
add
jo
push
andb
jb
push
or
or
and
sub
js
pop
cli
push
xchg
pop
xor
inc
mov
jno
int3
aad
xchg
inc
mov
sahf
jle
jl
sub
fidivrl
mov
xor
in
mov
cmp
je
subl
xchg
push
rcrb
cmp
xchg
mov
sub
add
in
push
insl
ss
push
movsl
mov
xor
mov
pop
mov
add
into
daa
jmp
hlt
rol
arpl
pushf
movsb
push
mov
out
test
sbbb
sar
push
sub
jno
push
bound
push
adc
adc
pop
mov
jo
outsl
pop
sahf
mov
mov
xchg
xchg
lret
lods
fsubr
leave
aaa
imul
shlb
in
mov
xlat
cmp
jnp
xor
bound
mov
mov
sbb
in
sarl
jns
cmp
mov
or
xor
jae
dec
mov
pop
ret
ds
cmp
enter
cmovbe
mov
mov
and
and
incb
bound
dec
gs
jno
loope
mov
adc
les
cld
and
jmp
fs
mov
pushf
mov
int3
mov
add
daa
xor
je
cmpsl
pop
jo
mov
lea
jge
cmp
rcll
shll
ror
ret
arpl
xchg
jno
adc
loop
roll
cltd
push
xchg
mov
out
addr16
in
dec
cmpsl
and
sahf
inc
jl
sub
adcb
cmp
sub
and
jbe
int3
xlat
push
mov
jae
lcall
mov
ss
sbb
int
mov
cmp
insl
sysexit
mov
or
ret
mov
clc
cmp
mov
and
imul
pop
pop
sub
ret
inc
rorb
jo
xchg
rorl
std
bound
fmuls
jmp
dec
add
movsb
scas
fs
das
mov
xchg
or
jbe
lret
fs
mov
repnz
sub
mov
xor
mov
inc
pop
cmp
cmp
scas
fisttps
inc
decb
mov
fiaddl
pop
stos
mov
adc
mov
sub
mov
lret
push
shll
pop
or
sbb
mov
shrb
fidivs
lea
in
ja
ror
mov
push
adc
mov
mov
mov
les
jbe
jg
rorl
pop
or
adc
mov
lods
rol
int3
rcl
dec
imul
pop
adc
push
ja
mov
cmc
pop
cmp
xchg
das
shr
pop
mov
fdivr
in
pop
mov
xchg
sbb
div
arpl
xchg
rorl
cmp
jmp
rorl
stos
cmpsb
pop
rcll
dec
insb
insl
cli
jge
sbb
rclb
lahf
adc
sbb
lret
mov
incl
test
in
imul
fcomps
test
int
stc
stc
mov
das
xor
fimuls
incl
in
fstps
adc
inc
lods
cwtl
or
adc
and
cmp
mov
data16
lods
cmc
lods
out
mov
jmp
push
or
faddp
int
push
add
mov
pop
add
scas
jge
aam
push
out
into
je
rcll
hlt
cmp
mov
cmp
mov
je
push
xchg
push
fmul
sbb
inc
pop
inc
pop
out
jmp
fwait
ret
jno
push
inc
pushf
or
or
push
clc
pop
fs
xchg
mov
enter
mov
mov
int3
scas
pop
inc
cmpsb
lods
enter
pusha
xchg
mov
jmp
dec
mov
cmc
fsubr
clc
fwait
xor
push
jecxz
out
leave
andl
mov
push
shl
les
dec
idiv
les
and
dec
sahf
aad
out
sarb
sahf
dec
scas
add
ret
test
jp
ret
or
pop
das
imul
xor
xchg
loop
out
or
mov
inc
fbstp
push
shlb
cmp
ret
or
pop
scas
xchg
mov
scas
cmp
cltd
imul
push
sub
dec
call
idivb
mov
pop
add
jge
enter
push
movsl
mov
fnstenv
in
dec
fcompl
loopne
add
ja
cmp
cmp
jmp
jae
cld
mov
dec
mov
push
repz
or
and
fnstenv
addl
inc
mov
shrb
fdivl
and
sbb
sub
pop
lds
icebp
cmp
outsl
and
lock
das
pushf
xchg
push
jbe
sub
sbb
adc
fsubl
aam
aaa
sar
in
pop
test
or
dec
ss
adc
jb
mov
pusha
mov
inc
incl
out
in
addl
fadd
in
jmp
sbb
xchg
push
cld
or
adcb
xchg
xchg
aad
sub
xchg
jo
or
mov
je
and
inc
xor
add
int
ja
in
cwtl
xor
jl
cltd
in
cmp
std
adcl
mov
push
adc
imul
popa
dec
call
cli
cmp
sub
adc
lret
inc
dec
fsubrp
sbb
mov
jno
or
daa
pop
dec
fistps
inc
int3
cmpsb
arpl
or
dec
rcl
jb
sbb
sub
mov
movsl
jbe
pop
cmp
pop
ja
xchg
and
jne
push
fsubr
imul
sub
or
mov
mov
add
push
lea
pop
fbld
sbb
dec
mov
and
mov
xlat
loopne
mov
scas
fwait
pop
and
in
sahf
enter
mov
ret
or
sbb
mov
outsb
int3
add
add
mov
test
jns
jne
mov
mov
sub
push
dec
inc
fisubrl
cmp
cmp
les
fcoms
mov
sub
mov
sbb
jbe
pop
push
mov
ror
sbb
adc
pop
mov
pop
sub
xchg
xor
rcrl
inc
lret
inc
mov
inc
stos
push
cmp
or
xchg
pushl
outsl
cld
pop
push
mov
test
or
pushf
sbb
mov
shl
insl
inc
sub
and
pusha
mov
nop
fsts
jle
jns
movl
push
nop
ret
rcll
xor
sub
cmp
dec
fidivrl
xchg
jmp
sbb
push
fnstcw
inc
mov
leave
push
dec
mov
in
cltd
scas
rolb
loopne,pt
xor
test
sbb
and
push
dec
mov
dec
or
inc
push
pop
movsb
jge
fcmovnb
add
aas
cmpsl
and
out
ljmp
test
mov
xor
sub
cmp
lahf
and
mov
lret
rcrl
xchg
scas
repz
inc
mov
mov
mov
cmc
adc
dec
sub
and
shlb
mov
pop
pop
pushf
or
mov
and
fdivrs
lods
jmp
pop
cmp
add
outsl
pop
cli
push
outsb
lods
xlat
cmc
pop
loop
lea
enter
gs
cmp
push
jb
data16
lock
xor
fstps
std
inc
bound
andb
nop
rep
orb
xor
ret
xchg
dec
mov
adc
pop
fcomps
jnp
stc
adc
mov
jp
xchg
cmp
pop
jge
movsl
dec
mov
fdivrs
or
mov
inc
mov
lret
imul
and
sahf
pop
pushf
pop
hlt
fcmovnu
ds
mov
cmp
mov
xlat
outsl
cmpb
push
xchg
cltd
fistpl
dec
or
or
mov
inc
or
fnstenv
mov
jg
ds
mov
fsubl
ja
add
shlb
loope
xor
das
dec
test
sub
in
stc
popf
sbb
ud0
push
lock
scas
adc
fisubs
mov
hlt
in
xchg
imul
jg
mov
xchg
roll
repnz
aam
lea
imul
mov
rcl
xchg
mov
cmp
push
inc
aaa
out
mov
leave
lods
into
cwtl
inc
out
mov
enter
sbb
js
lea
adc
stc
mov
ds
movsb
insb
lret
sarb
pop
xchg
push
shlb
dec
pusha
popf
aas
sub
aas
xor
ss
outsb
movsb
and
test
cmp
dec
or
inc
jnp
dec
repz
xlat
push
sbb
cmp
jo
stc
pop
fmul
repnz
lret
mov
add
gs
inc
or
sti
fistl
cltd
enter
mov
xchg
mov
and
cli
fsubrp
sub
leave
std
push
es
mov
add
xchg
xorb
loop
bound
std
gs
or
push
stos
mov
cltd
push
and
sbb
imul
jg
mov
mov
mov
or
cltd
into
add
push
out
out
sbb
fs
mov
ljmp
inc
xlat
fincstp
inc
je
mov
jb
adc
inc
adc
push
cmp
add
mov
or
pop
movsb
ljmp
xor
loope
push
les
inc
les
and
pusha
neg
and
loop
jge,pt
pop
pop
jg
fistl
fisttpl
shlb
faddp
int
xor
mov
ljmp
in
sarb
cli
push
inc
sub
std
in
mov
pop
and
call
push
nop
cmc
popf
call
xchg
mov
fstpl
mov
jne
mov
sbb
imul
into
sub
pusha
mov
push
mov
dec
sbb
ret
add
repz
inc
fmuls
fcompl
and
daa
stos
or
mov
mov
cmp
mov
sbbl
lods
and
pop
movsb
mov
inc
test
xor
test
les
dec
add
pop
mov
rclb
pusha
in
cmp
rcr
or
ror
lods
dec
lods
pop
jl
int3
fbld
cmp
fwait
push
es
outsl
sub
sub
mov
push
adc
xchg
and
jne
lret
jmp
dec
in
roll
cld
sbb
andl
lds
sbb
inc
and
aad
addb
pushf
out
aam
or
xor
mov
mov
shlb
add
repnz
jmp
dec
out
mov
mov
cmpsb
fcomi
aam
and
fsub
in
mov
ret
lret
cmpsb
push
cmp
out
mov
dec
ret
shlb
shll
pop
lahf
cmpb
in
mov
popa
sub
sbb
sub
jge
sbbl
dec
clc
test
lea
daa
xor
add
daa
jno
pop
mov
inc
push
sub
inc
inc
sarb
mov
jb
and
inc
loop
dec
imul
lea
insb
inc
push
jle
dec
jle
inc
in
sub
dec
xchg
insb
inc
push
pop
ret
mov
jge
movsl
out
loop
mov
out
dec
inc
jmp
ret
ret
test
push
cmp
cli
sub
pusha
push
outsb
inc
xchg
in
sbb
into
jb
mov
add
insb
popa
pop
fldt
jb
jmp
je
jmp
and
and
mov
cltd
push
jecxz
jge
out
mov
jp
dec
mov
push
bound
lret
bound
add
fcoml
mov
xchg
test
cs
cltd
cmp
lods
js
sub
inc
xchg
aad
cwtl
mov
push
outsl
addr16
jl
jp
dec
fs
pop
mov
sti
cmp
in
cld
cmp
loope
sbb
sarl
imul
pop
jg
inc
shlb
sub
enter
xchg
test
fwait
in
in
xchg
lods
pop
test
push
cmp
mov
popa
inc
pop
bound
stc
push
addb
sbb
push
jb
andl
adc
aas
mov
lahf
dec
inc
popl
daa
shl
aad
fstp
test
cltd
aaa
jl
pop
add
mov
icebp
sub
push
sbb
pop
aam
sbb
jnp
cmpsb
xor
mov
xchg
xor
stos
ljmp
xchg
xor
ljmp
out
pop
lock
popf
cmp
arpl
or
lret
jecxz
inc
nop
pusha
dec
jecxz
cwtl
data16
sbb
sub
mov
ljmp
mov
dec
pop
mov
jno
shl
lea
jl
jmp
mov
insl
repnz
push
lock
cmp
jne
pop
xlat
mov
ficoms
inc
cmp
lcall
pop
mov
cmpsb
mov
dec
dec
ror
rorb
popa
arpl
cs
int3
push
mov
mov
xchg
push
mov
insl
or
data16
sub
xlat
lcall
icebp
pop
inc
xchg
sub
adc
mov
and
cmpsb
fldt
mov
dec
dec
dec
jnp
inc
aam
je
mov
jno
push
or
xchg
pop
cmp
imul
lahf
add
mov
mov
cwtl
fadds
loope
xor
shrl
pop
rorl
dec
stos
xlat
pushf
idivl
mov
pop
dec
mov
pop
inc
call
fcmovnbe
roll
pushl
je
scas
sbb
pop
je
and
idivl
inc
outsb
arpl
xchg
out
xlat
dec
push
dec
aas
pop
mov
sub
fdivrp
in
insb
push
mov
xorl
sbb
and
mov
xchg
rorb
jmp
xor
add
loopne
ds
jmp
push
jmp
cmp
test
push
mov
mov
call
pop
int3
ljmp
nop
and
lahf
xchg
cli
lds
xor
and
jo
push
sub
and
ret
cmpsl
push
cmp
xchg
jmp
adc
mov
sbb
enter
sbb
dec
aam
cs
or
xor
sbb
cli
jae
pop
jp
addl
call
insb
pop
fwait
mov
stos
movsb
dec
ret
sub
lods
shrl
out
dec
out
or
ss
popf
mov
mov
push
xchg
add
inc
sub
dec
adc
lods
sti
aaa
push
lahf
iret
xlat
cmp
or
lods
xchg
jb
idivl
std
insl
daa
lahf
shr
sbb
add
and
dec
add
cltd
lods
xchg
js
xlat
cltd
push
pop
incb
ficoml
xchg
mov
nop
fnstcw
outsb
mov
sub
mov
dec
dec
push
mov
jecxz
mov
es
sahf
sub
push
cs
dec
stc
push
insl
xchg
jns
leave
inc
pop
pop
pop
mov
push
lds
sub
movsb
icebp
adc
pop
push
mov
mov
das
jae
rcrb
cli
lods
pop
pusha
fcompl
fcmovne
mov
negl
mov
lods
inc
cmc
cmp
cmp
scas
sbb
mov
lods
jmp
fstpt
mov
jg
call
enter
movsb
and
push
cmpsb
shrb
jle
out
dec
lahf
push
cs
fwait
lcall
inc
xchg
loope
mov
dec
jb
add
stos
mov
push
pop
cmp
lret
mov
push
mov
pushf
repz
sub
lcall
cmp
xor
fcmovne
outsb
and
mov
jae
leave
add
pop
xor
inc
lods
dec
push
fisttpl
ret
addr16
lea
or
mov
test
pop
xchg
push
sbb
js
das
and
cmc
mov
pcmpeqw
scas
cmp
cwtl
mov
aas
sub
add
sub
cwtl
scas
inc
fdivrl
daa
dec
mov
cmp
mov
inc
mov
push
mov
sti
aam
sbb
sbb
inc
scas
test
mov
inc
fisttpl
or
jb
xlat
cmp
pop
inc
cli
xor
int3
xor
ret
stos
std
sbb
rclb
mov
push
mov
arpl
cli
xchg
insl
xor
arpl
inc
sub
adc
lahf
pop
repz
add
mov
pop
or
jg
or
mov
cmpb
fmuls
mov
nop
mov
jmp
shr
shrb
sub
mov
pop
popf
rolb
fldcw
inc
sbb
push
pop
push
and
stc
fs
dec
add
cld
call
or
cmpsb
inc
jle
cmp
test
adc
jbe
and
ret
stos
cmp
insb
mul
mov
jae
xchg
call
popl
ret
inc
adc
aas
jo
lcall
pop
xchg
dec
sub
or
or
call
cmc
jmp
std
mov
dec
test
cmovp
push
std
xchg
rorb
lret
mov
test
loop
mov
stos
xchg
bound
les
dec
scas
mov
pop
imul
lds
xor
mov
sub
addr16
popf
xor
pop
sub
adc
sahf
fstps
neg
fcomps
sbb
test
enter
ss
or
imul
sti
mov
inc
mov
mov
sub
test
lret
mov
outsb
and
out
mov
cmp
dec
or
or
cmp
cs
das
mov
pop
sub
fnstenv
mov
gs
ret
jne
add
xchg
std
or
fnstsw
adc
fwait
adc
jge
xor
ret
int3
lret
mov
fs
aad
int
xchg
mov
in
jnp
test
dec
leave
imul
rcrb
es
int3
cmpsl
and
loope
int3
mov
cmp
insb
inc
rclb
xor
sbb
mov
pop
jno
ds
inc
inc
xor
clc
mov
in
fiadds
ret
xor
js
lahf
movsl
mov
cmp
cmp
jmp
mov
pop
int
test
loope
mov
outsb
ret
lahf
xchg
sbb
fsubs
rcrb
push
lds
int
pop
inc
ss
enter
pop
es
inc
mov
add
sbb
jnp
cmp
loope
add
push
into
dec
rol
ljmp
stos
in
mov
dec
je
adc
or
lcall
fisubs
or
mov
cmp
sub
pushf
fistps
jbe
dec
jecxz
cmp
and
fimull
aad
popa
test
pop
nop
cltd
ss
pop
dec
pop
loop
imul
adc
xchg
cmp
pop
dec
in
inc
fs
imul
cmp
mov
stos
jno
adc
idivl
add
ror
stos
pop
iret
out
nop
std
or
sbb
lds
sub
test
test
sub
iret
sbb
mov
dec
pop
jno
iret
push
loope
imul
das
mov
add
in
outsl
lret
lcall
dec
pop
mov
jnp
and
loopne
movsl
bound
and
aad
mulb
sbb
sahf
movsl
test
xchg
push
mov
leave
pop
inc
jle
scas
enter
into
and
cltd
sbb
test
shlb
sub
jno
xor
and
repnz
push
mov
xchg
in
inc
cmp
sahf
ss
addr16
dec
jno
scas
sbb
repz
sbb
dec
test
or
lds
or
or
adc
pop
pushl
iret
add
fisttpl
inc
out
push
lret
sbb
fs
cmp
pop
cld
outsb
fs
xchg
mov
push
mulb
or
lahf
in
add
into
call
je
nop
lea
in
int3
mov
daa
rclb
sub
lret
or
pop
inc
pop
ss
pop
notl
mov
adc
cmp
mov
xor
jl
fcmovbe
cld
daa
out
xchg
jno
dec
pause
dec
xor
popf
sbb
pop
into
in
push
mov
ljmp
push
aad
adc
mov
sahf
and
inc
cltd
cmp
mov
loope
shrb
ds
std
or
imul
push
mov
and
icebp
clc
inc
popf
jmp
orb
cli
jnp
int3
std
and
lret
cwtl
and
addr16
adc
xchg
jno
fdivp
xor
mov
dec
cmp
mov
shrl
ret
lods
rorb
inc
mov
cmp
lret
loop
imul
mov
push
dec
push
sbbl
dec
std
pop
loopne
rcll
mov
mov
cmp
ds
push
cmp
int3
lcall
jae
jo
hlt
out
leave
inc
xlat
aas
jno
jo
add
imul
dec
pusha
or
pop
test
loope
dec
outsb
in
loope
ja
ljmp
imul
test
jg
je
adc
cmpsb
scas
out
sub
mov
mov
add
jmp
xchg
mov
mov
mov
jle
mov
fidivl
fdivs
cltd
aaa
pusha
cmc
cmp
sub
popf
and
and
jne
outsl
sub
ror
ljmp
scas
jo
lods
into
mov
repz
flds
sbb
and
mov
jo
mov
xor
xor
sub
sbb
bound
enter
aaa
inc
shlb
je
jl
ficoms
repz
fcomp
pop
mov
jmp
sub
cmp
aas
rcl
or
aaa
push
mov
aaa
aad
subl
out
add
repnz
maskmovq
idivl
and
insb
sub
jb
imul
xchg
inc
dec
inc
gs
fs
divl
lret
cltd
stos
dec
jl
movsl
jno
out
mov
lea
pop
cmpsl
xchg
adc
out
iret
data16
popf
lock
push
push
add
rolb
shr
mov
pushf
out
mov
inc
movsb
loopne
and
mov
divl
pop
inc
inc
xlat
mov
mov
negl
ret
inc
cmpsl
ds
mov
into
push
cmp
cmc
or
je
iret
xchg
aaa
das
imul
stos
rcr
xor
scas
loop
xlat
out
imulb
repz
jmp
cmpsl
test
sub
idivb
or
js
and
xor
add
cmp
dec
aam
fnsave
int
fistpll
push
sbb
out
ljmp
cmp
movsb
sbb
add
movsl
pop
leave
or
xchg
aaa
jnp
pushf
inc
mov
adc
test
push
dec
jb
sbb
pop
jle
andb
enter
push
lret
daa
mov
and
or
shl
pop
pushf
movsl
xor
popf
xchg
repnz
int
or
cs
jecxz
mov
xorb
ss
cmp
lea
inc
mov
sbb
fwait
jecxz
movsb
lods
daa
lret
lods
pop
js
sbb
jmp
pop
int3
pop
xchg
push
dec
inc
mov
fistpll
roll
pop
fildl
push
cmp
cs
das
cmp
popa
loope
ljmp
lock
into
shrl
ret
pop
and
cld
dec
sbb
lds
enter
mov
aas
mov
cmpsb
or
int
dec
sarb
andl
adc
push
push
imul
mov
dec
test
mov
ficoml
and
jnp
insl
mov
mov
fdivs
frstor
jge
inc
in
push
xor
enter
pop
es
pop
and
mov
sbb
outsb
mov
jns
pop
sbb
jecxz
cli
sub
cmp
sti
dec
jbe
push
mov
or
mov
cli
test
inc
mov
push
iret
out
xlat
into
xor
shl
add
or
mov
push
push
nop
das
cwtl
xchg
mov
sub
xor
aam
movsl
mov
call
mov
sbb
insb
mov
push
jmp
cmp
cld
nop
ret
out
dec
push
and
clc
aam
lock
pop
xlat
popf
shrl
cmp
int3
or
fldcw
insl
add
int
xchg
push
lret
mov
xor
jg
mov
mov
cltd
xchg
ja
popf
fwait
in
sub
pop
push
inc
mov
or
pop
xor
push
jl
add
xchg
pop
in
xor
nop
sbb
adc
xor
mov
sub
in
mov
mov
pop
mov
cwtl
aas
jo
pop
mov
jl
faddl
enter
bound
aas
xchg
iret
jmp
xchg
mov
les
sarl
fs
xchg
loopne
in
idivl
xor
mov
test
or
cmpsb
cmp
pop
lret
das
push
mov
loop
jne
mov
fwait
aas
fsubl
or
pop
test
cmp
xchg
jg
pop
jp
jbe
movsb
mov
insb
aad
out
xchg
mov
jg
mov
xor
mov
loopne
push
fsubr
inc
in
repnz
mov
jb
mov
cmp
jl
add
xor
mov
jne
jecxz
lret
and
mov
dec
push
jmp
repnz
inc
mov
xchg
push
inc
inc
into
xor
xor
jne
leave
add
rcrb
aas
aas
dec
imul
jmp
mov
jmp
faddp
ret
pop
mov
jl
mov
sbb
inc
add
jnp
cmc
or
repz
jmp
and
push
or
and
stc
call
inc
cmp
fsubr
xchg
rcll
jae
stos
push
mov
add
cmp
ljmp
push
popf
sub
mov
push
ret
out
loop
and
add
cmc
jo
lds
or
cli
mov
mov
or
pop
xchg
int3
lret
imul
jle
sub
cmpsb
and
sahf
xchg
pusha
mov
daa
xchg
inc
insb
mov
and
inc
or
adc
je
loop
jnp
mov
mov
inc
push
jns
les
jb
test
lock
inc
dec
xor
adc
cmpl
dec
gs
mov
adcl
mov
imul
push
sbb
call
pop
mov
lret
int
cmp
enter
push
push
and
aas
in
cld
and
loope
mov
inc
test
lods
mov
add
inc
mov
movsb
sbbb
or
push
ret
mov
into
jmp
and
stc
sub
leave
stos
and
sub
push
sbb
jnp
les
mov
mov
and
sar
mov
in
and
or
and
cwtl
pop
jg
or
mov
jecxz
inc
jge
cld
mov
and
aaa
inc
cmp
mov
test
into
add
gs
adc
lcall
sbb
xlat
lahf
add
pop
test
mov
mov
hlt
fchs
fisttps
or
push
in
test
lret
mov
sub
add
push
test
lock
or
popa
insb
pop
in
orl
dec
sub
sub
mov
sub
inc
and
iret
or
jmp
ja
hlt
lea
arpl
mov
mov
mov
fimull
push
or
mov
mov
leave
jne
int
mov
cmc
cltd
mov
and
dec
cmp
sub
push
or
push
xchg
add
add
sub
or
adc
insb
scas
stos
cltd
int
mov
add
flds
mov
push
shll
test
mov
sarb
or
cmpsb
movsl
cltd
test
sbb
ret
mov
movsb
sub
jo
pop
mov
fst
popf
lds
jg
cmp
jge
inc
bound
fisubrl
dec
lock
or
and
pushf
ret
jae
ss
sub
inc
fbld
inc
cmp
aam
sub
lea
mov
lds
xor
sbb
pop
loop
cmp
jl
adcl
out
fisttps
xchg
dec
push
mov
inc
ds
mov
out
std
pop
cmp
loop
pop
cltd
and
jne
xchg
sub
xchg
pop
inc
adc
jnp
fnstsw
int
jmp
add
xor
es
call
popa
dec
frstor
cld
mov
jmp
les
xor
loop
arpl
test
lea
loope
adc
scas
cmp
pop
popf
mov
test
dec
xchg
test
popf
icebp
xor
mov
jl
shrb
sbb
adc
mov
repz
xor
stos
stos
push
vcvtss2si
outsb
pusha
or
mov
inc
mov
xor
je
inc
dec
in
sarb
dec
sti
and
sbb
sub
sti
cs
sub
sub
jb
das
inc
outsl
ret
pop
jl
mov
jb
sub
xlat
pop
cld
in
fisubrs
jle
ss
mov
jo
pop
cmp
sbb
xor
ja
mov
mov
cmpsl
popa
and
insb
sub
cmp
pop
std
mov
sub
push
in
ret
or
filds
and
inc
adc
xchg
sub
dec
clc
stc
std
lods
pushf
std
cmp
outsb
scas
mov
push
fstps
add
jle
mov
pop
cmp
and
jne
jg
aaa
stc
jg
adc
stos
or
fistl
mov
pop
sbb
sub
and
jl
aas
mov
roll
or
into
jg
jbe
nop
sarl
inc
mov
push
dec
xchg
rcr
clc
insb
push
imulb
repz
fs
cltd
in
fsubs
pop
jl,pt
out
pop
test
add
push
adc
scas
xor
xchg
js
pusha
orb
jmp
adcb
push
sbb
je
and
loopne
call
mov
push
add
pop
mov
mov
daa
mov
push
ret
dec
mov
mov
and
and
inc
js
adc
push
test
adcl
jne
inc
and
sbb
mov
or
cmp
and
mov
jb
push
fisttpl
push
lret
enter
loop
dec
mov
stos
cmp
pop
xchg
fwait
daa
cmpsl
dec
sub
lret
pop
in
pop
bound
mov
in
mov
gs
adc
es
mov
jo
lock
frstor
cld
test
dec
push
decl
mov
push
jl
mov
lods
jle
or
xchg
push
pop
repnz
mov
cli
aaa
xorl
rorb
adc
push
movups
mov
rcrb
sbb
dec
jns
xor
in
add
pop
sub
gs
roll
fs
adcb
mov
mov
mov
mov
sbb
das
mov
lds
dec
push
mov
shl
mov
and
je
into
enter
lret
add
insl
insb
arpl
ret
xchg
jmp
jle
es
and
mov
testb
shr
ds
test
sbb
aam
aam
pop
lret
stc
bound
aaa
mov
aam
ds
mov
sti
data16
cmc
xlat
sub
mov
les
fisubs
jge
scas
pop
rorb
pop
ret
add
popf
xor
stos
pop
rclb
inc
mov
insl
jno
sbbb
xor
ror
cmp
mov
push
insb
outsl
jb
stos
dec
ljmp
add
out
inc
or
cld
xchg
push
dec
decb
cmpsb
jae
adc
loop
or
or
sti
jp
inc
jp
sbb
dec
aas
push
pop
jb
iret
inc
cmp
out
test
mov
push
out
fwait
iret
fiaddl
xchg
mov
push
xchg
rorb
hlt
push
xor
test
xchg
cld
and
sbb
xor
lea
cmp
or
arpl
xor
and
sub
fcomp
add
or
sbb
add
or
fucomi
push
pop
jb
inc
adc
pop
add
adc
sbb
jg
movsb
mov
mov
jo
fwait
adc
inc
add
ret
cmp
sahf
lock
and
inc
gs
pop
inc
and
loope
xchg
loop
scas
adc
dec
ret
insl
rclb
xchg
inc
int3
std
add
mov
cmp
xchg
imul
push
sahf
leave
je
inc
add
pop
sub
adc
cmpsl
fisttpl
ja
in
add
or
roll
pop
es
rcr
inc
or
pusha
repz
int
mov
and
inc
jl
insb
or
pop
lods
and
repz
ret
mov
and
inc
or
je
cmp
mov
push
lods
inc
clc
je
in
fisttps
call
dec
mov
cli
cmp
or
jmp
rclb
inc
dec
inc
dec
inc
mov
add
xchg
mov
inc
or
arpl
cld
xchg
in
lods
mov
sbb
sbb
out
dec
jl
pushf
dec
outsl
jns
mov
cli
pop
jbe
scas
or
sahf
pop
roll
xchg
fisttps
repnz
jae
xor
flds
cli
lret
in
stc
dec
mov
xchg
adc
lret
shlb
jg
xchg
or
loopne
jnp
dec
movb
cmc
jae
mov
mov
cmc
dec
pop
or
cmpsl
add
movsb
mov
mov
decb
push
xchg
ljmp
push
ljmp
mov
incl
fsts
std
sub
sbb
clc
mov
icebp
mov
jecxz
adc
shl
fbld
mov
push
das
call
jnp
mov
insl
mov
push
dec
popa
jmp
popa
xor
rolb
aad
rcrl
xchg
mov
fbld
sbb
inc
pushf
xchg
xor
mov
test
mov
or
into
les
loopne
jmp
adc
mov
shll
punpcklwd
insl
cli
jno
sub
lds
int3
xchg
loop
xor
jge
xchg
pop
test
cli
cli
add
shr
adc
gs
lea
push
push
add
clc
je
stos
fwait
call
push
out
inc
ds
cmc
dec
lahf
mov
sub
andb
xchg
mov
xchg
or
das
cmpsb
dec
dec
insl
out
fnsave
test
mov
cwtl
sub
pop
clc
and
pop
pop
mov
loop
jnp
adc
addl
push
sbbb
mov
insb
sahf
leave
sbb
xchg
jb
leave
cmpsl
push
pop
pop
fistps
outsb
lret
jb
cs
loope
add
jns
mov
mov
mov
shl
xlat
cltd
and
sbb
sub
xchg
push
xchg
pusha
mov
cmpb
push
clc
fisttps
xlat
jmp
hlt
sbb
dec
lods
in
xor
cmc
mov
xor
add
push
sbb
rorb
mov
fwait
dec
or
sub
mov
or
sub
mov
cmp
adc
jmp
pop
test
bound
stos
dec
in
js
enter
mov
data16
fadds
jbe
mov
outsl
icebp
mov
xor
and
addr16
push
pop
push
mov
mov
push
cs
xor
aas
loopne
sub
mov
movsb
mov
inc
lea
cld
sub
adc
pop
or
add
fidivl
xor
push
xor
xlat
fwait
jnp
rorb
sub
cmovs
lods
loopne
push
inc
xor
fisttpll
addl
cmc
mov
out
add
add
pop
pusha
outsb
inc
fimull
dec
push
fs
xchg
mov
dec
inc
test
push
jb
cmp
mov
fisubs
fstps
test
in
push
enter
fmulp
loope
adc
bound
and
mov
jp
xor
xchg
stos
xchg
stc
int3
test
adc
inc
mov
mov
in
imul
test
cmp
mov
mov
pusha
ficompl
or
cmp
add
movsl
push
adc
out
xlat
xchg
in
iret
cmpsb
mov
jb
aas
and
jb
stos
lds
icebp
pop
je
sbb
cmp
repz
mov
inc
or
mov
std
rorb
push
mov
xor
lds
aam
or
or
mov
aaa
inc
dec
inc
jl
sbb
cwtl
movsl
lahf
pop
add
mov
xchg
cmp
lret
out
mov
or
dec
add
inc
les
in
mov
lcall
fimull
jmp
xchg
cwtl
sub
mov
pop
cmp
jo
je
mov
dec
movsl
cld
inc
pop
in
clc
lret
xchg
jl
lret
mov
xchg
shlb
inc
mov
xchg
pop
fld
mov
push
mov
scas
mov
pop
mov
inc
rcrb
mov
mov
std
pop
arpl
ds
call
or
je
test
xor
call
add
xchg
add
shl
cmp
sub
out
and
mov
mov
js
cmp
push
insl
std
aas
and
xchg
pop
and
jne
fstp
dec
mov
adc
xor
outsb
cmp
mov
call
xor
mov
xor
cld
mov
call
enter
dec
add
ret
imull
mov
inc
jmp
inc
dec
mov
push
push
lods
inc
xchg
dec
sub
sbb
push
add
rcrl
movsl
ljmp
mov
hlt
inc
test
cmp
icebp
sub
fisubs
aaa
jne
insb
xchg
icebp
cltd
push
incb
shll
mov
adc
xorl
xchg
popa
cmp
pushw
lods
in
cmc
push
sub
push
mov
aas
sahf
fs
cmp
push
mov
je
cmp
jo
inc
xchg
jno
ficoms
adc
jmp
repnz
movsl
lods
loope
sub
leave
sbb
fdivl
js
and
pop
aad
xorl
xor
ficoms
xor
shrb
roll
pop
sbb
dec
shlb
cltd
cltd
ret
xchg
jmp
mov
xchg
test
xor
or
iret
push
es
loopne
cs
cld
cwtl
or
add
mov
sub
insl
pop
mov
jne
and
das
pop
enter
sub
shrl
pushf
xor
sub
ljmp
mov
and
pushf
fsubrs
loopne
aas
inc
outsl
sbbb
sbb
push
push
data16
sar
cmp
xor
mov
xchg
mov
sbb
mov
pop
cmp
dec
sub
mov
ret
out
dec
xor
pushf
adc
dec
insb
movsl
pop
dec
mov
push
int
pushf
mov
out
add
add
scas
std
nop
push
and
inc
or
shl
sbb
xor
pop
mov
lods
xchg
jno
cwtl
lret
sbb
fldt
mov
or
into
lret
cmpsl
popf
and
dec
sub
lahf
jno
lahf
fcmove
mov
or
push
or
ret
or
int
or
push
movsb
aas
dec
arpl
scas
and
lods
push
loop
pop
lock
loope
mov
dec
icebp
outsl
sub
sub
insl
aas
orl
sub
loopne
dec
iret
jl
adc
std
dec
rorb
or
sbb
inc
push
sti
pop
xor
sbb
int3
stc
sub
std
cmp
mov
xchg
shrb
pusha
call
mov
jns
xchg
xor
daa
dec
adc
xchg
add
cwtl
lret
push
dec
cli
mov
mov
jns
xchg
sbb
add
mov
lds
dec
mov
pop
movsb
add
loop
dec
mov
pop
dec
sub
aaa
mov
xchg
stos
jns
dec
movsb
ja
mov
xchg
popa
pop
popa
arpl
cli
in
fs
or
add
adc
ljmp
inc
or
out
gs
mov
sbb
xchg
pop
lret
std
aad
notl
jb
push
out
xor
cmc
shll
in
mov
mov
js
jle
mov
lahf
aad
pushf
and
fnstenv
pushf
or
cwtl
mov
aam
cmp
sbb
and
xchg
inc
leave
jo
mov
jle
xchg
mov
mov
push
shl
jnp
mov
mov
jae
mov
inc
test
ret
mov
adc
cmc
imul
jmp
icebp
push
mov
adc
ja
mov
add
mov
xchg
pushf
leave
mov
int3
lock
dec
icebp
lods
testl
je
cli
push
stc
out
add
getsec
mov
lea
mov
iret
xchg
pop
fidivs
pop
add
push
popf
inc
cmp
sub
pushf
mov
or
push
arpl
xlat
pop
out
repz
lods
pop
hlt
enter
xchg
lock
mov
and
jp
in
pop
rcrb
push
andb
cmp
repz
cmovs
or
sahf
mov
push
pop
addr16
add
inc
mov
movd
inc
push
pop
inc
add
mov
sahf
pop
mov
adc
cmp
outsb
xchg
out
into
ret
inc
lahf
sub
add
pop
dec
cwtl
iret
stos
lods
or
jp
nop
xor
out
cmp
cmc
rcrl
cmpsb
out
cmpb
clc
pop
aas
sahf
test
pop
sar
pop
ret
das
nop
jo
sarb
loop
insb
sbb
inc
stc
fucomi
cmp
adc
adcl
je
je
pushl
push
inc
lds
jge
inc
mov
int3
ja
std
out
mov
insl
dec
out
mov
in
mov
int3
or
inc
insl
sbb
orl
dec
xchg
mov
pop
dec
mov
and
xchg
jle
mov
add
cltd
fcomp
int3
mov
loop
pop
mov
inc
dec
add
and
subl
dec
and
sbb
push
sbb
push
insl
or
movsb
outsl
arpl
or
cmp
dec
in
adc
jmp
pop
mov
lahf
xlat
push
cmp
jl
sbb
fcomip
inc
sub
cltd
ljmp
sti
cmp
lcall
jge
mov
mov
clc
mov
std
push
lcall
dec
sub
or
repz
mov
adc
or
sub
add
lea
mov
mov
jg
stos
push
andb
cld
fidivrs
mov
jle
lahf
gs
mov
xor
fiaddl
cld
inc
fdivl
leave
lods
add
jmp
xchg
lods
mov
inc
int
imul
hlt
adc
imul
xor
mov
imul
test
ret
aaa
inc
sub
daa
addl
out
leave
lods
adcb
inc
lahf
sub
rolb
cmp
add
add
mov
addr16
loop
in
and
scas
sub
mov
mov
in
jp
mov
aaa
add
fsubl
sbb
cmpb
add
sahf
jmp
inc
ljmp
aad
lock
mov
xor
dec
je
dec
xchg
mov
and
testb
popf
das
lcall
les
test
cs
mov
and
call
rclb
sub
stos
mov
inc
icebp
dec
fisttpll
subl
stos
bound
fucomip
fsubs
lds
mov
xor
aas
xor
stos
mov
repz
cmp
adc
jle
cmp
sub
leave
loopne
and
inc
pop
fs
mov
jns
leave
sub
cmp
mov
mov
popa
pop
imul
inc
xchg
xchg
mov
enter
and
inc
hlt
dec
sarb
lret
inc
lds
fsts
mov
push
imul
push
mov
aas
inc
sti
and
fcmovnb
mov
movsl
add
add
ljmp
jne
fcoml
int
sbb
mov
dec
enter
ljmp
sbb
lods
xor
out
mov
out
or
inc
lret
mov
movsl
mov
pop
mov
arpl
fiadds
inc
hlt
lcall
in
mov
fwait
or
lods
and
or
mov
js
repnz
mov
add
aad
lcall
mov
sub
loop
add
inc
xchg
jbe
jp
sbb
push
cmp
jmp
cmp
jge
cli
les
out
inc
xor
jecxz
push
jne
inc
in
movsb
in
test
cmp
and
out
outsl
cmc
jnp,pn
xchg
ja
outsb
cmp
sbb
push
or
fucom
inc
in
enter
clc
inc
stos
add
sbb
lahf
lock
sbb
subl
mov
enter
enter
enter
jg
push
fs
sub
add
xorb
sarl
xchg
mov
fadds
add
push
aad
jbe
lock
adc
jg
clc
ret
divb
mov
les
pop
cwtl
mov
adc
lods
and
arpl
mov
cmp
icebp
je
mov
stos
push
divl
xlat
popf
mov
mov
add
in
xor
cld
xchg
shr
daa
imul
jge
test
lret
test
inc
add
dec
ds
add
in
adc
rcr
xor
pop
push
pop
sub
mov
cmp
pop
dec
ret
inc
bound
mov
sbb
jb
lahf
jo
push
imul
xchg
stos
pop
iret
imul
ret
xlat
pop
jnp
push
inc
mov
mov
dec
lods
sub
dec
mov
and
std
xor
add
das
ss
and
aas
repnz
mov
ret
lods
sub
or
orb
sar
jne
jmp
sub
hlt
push
jp
mov
lock
sbb
pushl
pop
int
sbb
lahf
or
data16
dec
mov
mov
cmp
cli
mov
mov
clc
movsb
push
jg
popf
ja
mov
pusha
cli
jo
mov
dec
lds
xlat
inc
push
xchg
xchg
stc
cmpl
xchg
clc
imul
leave
lods
les
or
adc
pop
xor
cld
aas
inc
jb
out
adc
pop
inc
xor
xchg
mov
xorb
jecxz
inc
adc
or
cltd
aam
pop
inc
xchg
or
mov
mov
fs
std
icebp
adc
xor
test
push
or
fildll
cltd
jno
in
fsubrs
icebp
pop
fimuls
les
jns
jp
or
mov
in
sbb
and
inc
sbb
add
pop
je
push
pop
aad
pop
out
xchg
xchg
arpl
lea
call
sbb
jb
adc
add
leave
push
sti
fldcw
jns
add
or
fs
nop
pop
or
lahf
dec
sbb
ficomps
addr16
mov
jmp
fldl2t
inc
mov
add
pop
mov
jnp
inc
cld
lcall
xchg
pop
push
mov
lret
adcb
lret
dec
lret
mov
stos
shlb
scas
aad
cltd
inc
push
sarb
icebp
cwtl
loop
lock
pop
push
or
jg
dec
inc
xchg
sub
repnz
xchg
jae
inc
cmp
dec
cli
jge
dec
divb
mov
cmp
mov
pop
mov
lock
jo
iret
std
sarl
mov
jae
lds
xor
out
lea
pop
lock
mov
add
test
mov
jl
cmp
movsl
cli
rol
mov
jbe
adc
sub
pop
xchg
pop
mov
sarb
pop
rorl
shrb
iret
iret
cwtl
loop
add
insl
and
push
push
popf
pop
push
adc
mov
jmp
rcll
gs
in
xor
adc
mov
jmp
xor
arpl
jge
jo
loop
cli
repz
insl
rcr
iret
imul
arpl
add
sub
jns
add
scas
pop
cmpsb
icebp
adc
loope
ljmp
inc
pop
nop
sub
xchg
inc
xor
lret
mov
in
mov
add
repnz
mov
jnp
rcrb
adc
xlat
pop
inc
ja
std
adc
mov
adc
push
pop
roll
popf
mov
ds
mov
nop
inc
or
repz
jg
xchg
inc
std
insb
jno
shll
inc
inc
sbb
xchg
in
or
ljmp
orb
cmp
pop
or
imul
dec
inc
rol
rcl
mov
pop
xchg
sbb
lret
mov
adc
xor
int3
out
or
jnp
pop
inc
fildll
les
cltd
imul
pusha
sahf
imul
or
icebp
bound
rcrl
test
das
sbb
pop
add
sbb
aam
insb
test
or
pop
push
loop
add
adc
jl
pop
jmp
call
jecxz
scas
nop
add
jle
adc
and
cmp
fadd
lea
fisttpll
aam
push
idivl
out
ret
xchg
mov
or
gs
jne
and
insl
mov
push
enter
jmp
pop
cmc
mov
lahf
mov
fmulp
sub
and
ret
pop
cmp
adc
jecxz
pusha
cmp
mov
mov
aas
mov
push
loop
mov
lahf
or
mov
data16
sub
push
mov
cmp
push
and
add
push
sahf
push
int3
mov
xchg
cmp
add
mov
movsb
jne
inc
cmp
icebp
and
sbbb
add
call
mov
xchg
movsl
outsl
adc
das
fwait
les
fstpt
xchg
mov
and
jmp
jg
into
sub
mov
mov
lods
das
les
loop
mov
mov
add
test
cmp
cmc
lret
pop
adc
lcall
movsb
jmp
or
mov
adc
sub
inc
nop
test
add
inc
sub
daa
loopne
rol
inc
mov
loope
jo
and
cmp
wbinvd
or
mov
mov
stos
jp
or
es
mov
lods
imul
scas
pushf
scas
inc
enter
dec
stos
jb
mov
mov
test
push
mov
or
xlat
test
xor
das
cli
inc
mov
stc
fisttpll
loope
or
stos
dec
pop
fstl
adc
and
push
lods
scas
jge
les
rol
popf
pop
dec
xchg
push
lahf
in
in
xor
cmpsl
inc
mov
xor
imul
inc
jne
xor
aam
push
stos
popf
hlt
je
nop
fidivs
icebp
mov
in
and
jne
add
xchg
dec
xchg
sub
inc
inc
mov
pop
popa
test
push
push
push
aad
test
pop
xlat
les
or
fcompl
xor
out
arpl
cli
xchg
dec
imul
sahf
or
popa
lds
pop
ljmp
out
inc
mov
loope
pop
ret
outsb
jmp
sbb
imul
and
cmpsl
je
daa
mov
ret
lods
mov
lahf
cwtl
cwtl
daa
pop
js
decl
lret
mov
jmp
test
outsl
dec
int
scas
xor
call
gs
mov
inc
les
xchg
add
jecxz
xchg
or
or
push
mov
sbb
int3
lock
fs
mov
adc
mov
sub
and
add
pusha
std
rol
add
gs
outsb
push
pop
repnz
inc
push
cwtl
out
popf
xor
add
and
jb
test
pop
call
stc
pop
xchg
and
icebp
cwtl
rclb
cmpsb
mov
outsb
movsb
jl
movsb
xchg
xchg
sub
insl
pushf
in
mov
stos
iret
and
fldl
hlt
push
mov
mov
lahf
cmp
mov
cli
dec
testb
addr16
les
push
cs
clc
fsubrl
icebp
sbb
cmpb
mov
test
mov
add
xor
sub
mov
xor
xor
add
xor
cltd
mov
or
ljmp
stos
pop
hlt
xchg
rcl
imul
mov
add
data16
dec
xor
jecxz
popf
add
nop
int
fldt
pop
icebp
pop
sbb
push
add
aad
adc
shlb
mov
popf
enter
vpsubusw
add
popf
xchg
jo
push
iret
jmp
shlb
mov
inc
cld
cmp
mov
inc
mov
cmp
repnz
add
pop
add
out
inc
movsl
xor
or
push
pop
test
inc
sbb
mov
les
fstpt
mov
lods
mov
add
xchg
xchg
jns
mov
jnp
push
lods
stc
jg
dec
xchg
fcoml
insb
push
dec
push
idivb
adc
fdivrs
sub
pop
cs
loopne
add
jge
es
or
cmp
sar
dec
mov
int3
inc
shll
out
ljmp
xchg
sbb
cmp
aam
punpcklwd
scas
dec
or
bound
inc
rorl
ret
mov
xor
sbb
lock
ret
fcomi
mov
jmp
jge
xchg
leave
and
js
pushf
stc
enter
jns
sub
inc
mov
push
fidivrl
sti
pop
leave
stos
push
fmull
cmpsl
xchg
je
pop
push
push
xor
arpl
sbb
mov
les
mov
push
mov
lahf
outsl
xchg
pop
and
dec
in
xchg
jo
mov
mov
fisttpl
into
jbe
jle
ret
mov
dec
sub
push
aaa
subb
push
pop
sub
cli
pop
cmpsl
cli
mov
jnp
out
jecxz
xor
xchg
and
dec
int
mov
insl
insb
call
pushf
popf
psraw
and
pop
dec
sub
inc
cmp
and
add
xchg
jmp
inc
lahf
in
popf
pop
repnz
mov
lds
jg
aas
scas
xchg
and
pop
sahf
je
inc
rcl
in
xor
lcall
pop
imul
jecxz
pop
pop
rolb
aas
lods
xor
mov
loop
movsl
jae
shlb
dec
call
xor
cmp
jl
clc
popf
rolb
repnz
or
and
adcb
xchg
shrl
mov
sar
xor
jecxz
fistl
sarb
push
mov
lods
mov
cltd
outsl
pop
push
mov
ljmp
int
enter
cmp
add
push
and
or
adc
cwtl
sbb
mov
add
subb
dec
sub
xor
jge
fimull
jne
pop
stos
mov
push
inc
jno
fstpt
cmc
call
lea
test
stc
mov
jle
push
popf
into
punpcklwd
mov
repz
fstpt
inc
sahf
stos
pop
cltd
ret
sub
mov
or
adc
shr
repz
fidivrl
sub
je
xlat
dec
cwtl
fnstenv
lock
push
sub
push
dec
push
add
lock
jo
inc
pusha
pop
adc
xchg
sub
jae
pop
int
dec
cmp
rclb
pop
xchg
dec
and
mov
sbb
sbb
jnp
rcrl
mov
xchg
enter
lret
nop
fdivrs
jo
mov
nop
mov
push
insl
xchg
push
test
cwtl
xchg
out
jecxz
pop
nop
movsl
sub
xchg
and
xchg
sub
dec
and
movsb
sub
fistl
add
pop
dec
pushf
jmp
sub
dec
pop
mov
js
lret
ficompl
dec
sub
es
pop
inc
aam
cmp
repnz
mov
nop
jmp
std
data16
lret
repz
inc
movsb
das
sub
push
mov
or
fldt
cmp
mov
pop
loopne
sahf
stos
testb
sti
mov
dec
or
ljmp
daa
add
jne
jo
push
cmp
in
aas
or
scas
inc
in
pop
ss
das
adc
cmpsl
dec
push
xchg
push
cmp
arpl
into
out
iret
addl
adc
push
mov
or
enter
mov
sti
cmpsb
inc
xchg
cmc
sub
jb
xchg
sub
mov
nop
mov
pusha
push
rolb
enter
xchg
cld
dec
push
aaa
and
jecxz
mov
push
mov
out
mov
mov
push
or
lds
cmpsl
movsb
dec
pop
pop
mov
shlb
and
pop
fcoms
push
test
jb
mov
xchg
dec
pop
push
inc
push
jo
sub
mov
mov
mov
test
pushf
ljmp
inc
adc
arpl
clc
push
das
or
hlt
xor
mov
cmc
xor
mov
cltd
mov
sbb
xchg
inc
dec
inc
movsl
stos
xlat
mov
cld
pop
sub
cs
pop
xchg
sub
out
mov
pop
sarl
fwait
sbb
mov
add
fwait
xchg
cmp
xchg
mov
xchg
cmc
aas
cmpsb
test
call
mov
xor
pushf
test
push
mov
call
and
in
mov
mov
jns
pop
addr16
mov
inc
add
pop
inc
subl
ret
insl
dec
into
int3
fildl
scas
sub
jo
adc
sbbl
into
sub
dec
xor
sbb
int3
insl
sub
mov
shrb
pop
or
jmp
call
mov
enter
inc
jmp
repnz
mov
fwait
movsb
testl
or
adc
mov
repz
mov
xchg
pop
inc
mov
push
pop
ficoms
lea
mov
push
imul
jnp
pop
cmp
in
lock
loopne
push
adc
xchg
and
push
adc
pop
dec
lods
jle
and
xchg
push
xor
dec
mov
js
lods
push
lock
iret
popa
adc
cmp
push
add
int
mov
xchg
mov
out
fs
mov
xor
xlat
inc
insb
addl
movsb
roll
xchg
jns
inc
cmp
mov
rorb
nop
inc
push
pop
add
call
cwtl
mov
or
xchg
xor
popa
push
lret
cwtl
jg
jnp
mov
into
push
ja
sbbl
sbb
stos
cli
mov
xchg
dec
nop
cmp
mov
mov
insl
push
gs
lods
insl
push
xchg
dec
scas
testl
aaa
mov
xchg
out
fwait
aas
rcl
inc
cmc
push
loop
xor
or
jo
push
jnp
stos
mov
jne
mov
inc
ret
add
aaa
enter
lods
orl
lds
add
iret
lcall
sub
in
jno
dec
mov
js
mov
bound
add
in
mov
mov
inc
add
ret
sbb
cmp
push
xchg
mov
mov
nop
sti
cmc
sub
push
and
sub
jo
adc
flds
lea
cmp
fsubs
add
in
sbb
shrl
cmp
push
repnz
dec
mov
or
xchg
data16
dec
cmp
das
cmpb
negl
sub
call
mov
cli
repnz
ja
jmp
and
jne
mov
insl
or
inc
mov
dec
andl
aas
fdivrs
imul
and
hlt
xchg
cmp
pop
and
loopne
mov
ss
xlat
sbb
dec
sbb
popa
popa
shlb
lock
fs
jb
xchg
xchg
loopne
lret
pop
das
mov
xchg
nop
sub
mov
stos
lea
or
lock
xchg
push
ss
add
js
jg
mov
mov
sub
lea
test
mov
popf
icebp
and
shrb
js
xchg
mov
call
mov
inc
das
loope
cs
cmp
dec
out
dec
cmovns
adc
arpl
or
movsl
in
cmp
clc
push
arpl
std
sbb
addl
xor
adc
movsl
or
ret
mov
subb
sbb
mov
and
push
rolb
xchg
fildll
cmpsb
mov
mov
outsb
jge
adc
jnp
test
pop
lock
pop
ss
push
add
mov
xchg
push
movsb
cmp
in
xor
loope
lahf
rcrl
lret
es
push
inc
fisubrl
adc
mov
ds
dec
inc
and
push
inc
mov
rclb
roll
in
mov
xchg
mov
adcb
cmpsb
mov
popf
pusha
imul
pop
pop
mov
out
pop
cmp
jmp
and
fisttpll
ljmp
mov
jbe
cmp
jecxz
jnp
scas
in
out
cmp
pop
call
rolb
das
lahf
clc
movsb
pop
call
add
adc
adc
adc
popa
mov
je
jae
insb
mov
test
rcll
sbb
xchg
sub
push
xor
mov
aaa
es
icebp
stos
or
nop
xor
nop
imul
idivl
mov
and
js
and
outsl
add
test
jb
dec
dec
jge
roll
dec
mov
inc
or
imul
insb
lea
jle
cwtl
or
bound
xor
mov
cs
ret
ror
imul
leave
adc
xor
leave
dec
orl
inc
mov
lock
push
adc
cld
pop
cmp
dec
push
and
stos
mov
fbld
rorl
push
sbb
adc
jl
aas
daa
dec
or
mov
cwtl
dec
sbb
bound
sub
repnz
lods
inc
popa
xchg
lock
popl
cmp
jb
into
icebp
pop
icebp
adc
sub
xor
or
sbb
pop
adcb
mov
mov
mov
pop
or
dec
in
iret
imul
sahf
xchg
pop
xor
dec
xor
inc
sbb
dec
dec
cmp
test
lret
sti
xchg
push
test
hlt
scas
lods
dec
test
push
sbb
test
insl
stos
jg
ficompl
xor
and
push
jg
jae
pop
fwait
outsl
int
je
mov
xchg
jae
das
inc
mov
incl
dec
push
in
mov
sub
pop
ret
data16
bound
dec
scas
jmp
push
cmpsl
scas
pop
into
arpl
icebp
xor
push
dec
popa
mov
and
jnp
arpl
jb
xchg
clc
xchg
pop
dec
or
rorb
lods
pop
push
mov
xor
ror
xor
mov
or
ret
adcb
sti
and
push
push
test
sbbl
mov
sub
icebp
cld
dec
mov
bound
mov
jecxz
popl
outsl
out
data16
and
mov
jle
les
inc
outsb
gs
or
inc
cli
push
xor
into
pop
xchg
shrb
sub
fistpll
or
add
ficoml
int3
aam
cmp
dec
cmp
or
iret
push
dec
xlat
mov
fcmovb
arpl
and
and
dec
stc
int
addl
std
lret
aas
fiadds
icebp
add
pop
sbb
loopne
ja
and
inc
stos
mov
popl
imul
les
pop
pushf
pop
pop
xor
popf
popf
stos
std
cltd
dec
popf
and
pop
sub
mov
fldln2
xchg
xchg
out
rcrl
outsl
xor
jle
xchg
or
pop
stos
decb
push
les
mov
sub
pop
xchg
mov
add
cmp
insl
rcll
sbb
pop
cmp
inc
push
jns
popa
mov
xor
repz
push
jl
sub
in
mov
cmp
cltd
cs
lahf
faddl
jge
sub
cmp
ret
scas
xchg
and
add
pushf
dec
cmp
and
dec
popa
push
test
xor
jp
push
push
sub
push
faddl
pop
imul
mov
push
shll
je
xor
cwtl
bound
sub
rorb
or
stos
cli
or
and
mov
jg
daa
mov
orb
shr
xchg
dec
ja
lret
cmp
push
movsb
out
xchg
sub
sbb
outsb
or
loopne
and
mov
imull
call
pop
lods
call
inc
sbb
insb
xor
inc
xlat
inc
and
sub
dec
inc
or
jo
fs
jp
xor
test
mov
or
or
xchg
imul
and
lods
jae
inc
orl
stos
xchg
fistpll
enter
or
add
pop
lret
and
sub
add
xor
pop
cmp
call
xorl
in
add
lcall
mov
push
inc
fwait
es
test
push
jle
ds
loopne
add
jg
cld
iret
loope
cli
jnp
inc
cmp
add
push
call
jb
mov
pop
add
fwait
xchg
cmpsl
stc
fwait
mov
popf
jecxz
test
lea
push
mov
sub
ret
int
mov
jle
ds
test
les
icebp
mov
test
dec
jp
or
aas
sbb
imul
mov
jl
imul
leave
mov
frstor
int3
fimull
lret
insb
das
js
es
inc
sub
popa
rcrl
xor
mov
and
ret
push
jle
sub
nop
sub
mov
cmp
lods
in
mov
mov
fcomip
lahf
addr16
jmp
or
push
lock
mov
pop
ds
int
bound
arpl
push
jge
dec
loopne
das
inc
imul
pusha
push
sub
and
adc
pop
sti
cltd
xchg
inc
in
gs
xor
xor
sahf
inc
pusha
lock
aaa
jbe
xlat
mov
mov
mov
cmc
gs
movsl
rorb
jns
mov
mov
fimull
add
adc
jo
push
bound
add
mov
aas
lret
js
test
xor
cmp
aad
cltd
out
pop
cmp
or
sub
pop
fwait
das
fwait
jl
sub
pop
repz
or
orb
mov
jnp
mov
mov
in
and
and
mov
dec
xchg
jmp
cmpsb
loop
andl
loop
xor
or
sub
cs
iret
sbb
xor
fsubrl
and
sbb
pop
xchg
aas
cld
gs
xlat
xlat
dec
jle
sbb
pop
fdivrs
popf
int3
sbb
pusha
xor
test
pop
loopne
push
jp
imul
subl
sbb
jno
hlt
sti
cmp
lods
pop
push
xchg
add
enter
jp
in
cld
ret
cmp
add
dec
xorb
ret
daa
jno
and
jmp
out
leave
push
mov
sub
pop
xchg
adc
out
enter
inc
jo
jmp
pushf
js
dec
xchg
mov
arpl
dec
jle
mov
cmpsl
or
rorb
fcmovb
enter
jnp
ljmp
in
stos
outsl
xor
stos
and
pop
insl
adc
jle
sub
xchg
popf
cmp
jg
mov
xor
out
dec
ret
xor
inc
mov
jo
mov
jne
or
aam
daa
jmp
test
fisttpl
mov
cmpsl
and
mov
les
inc
aaa
mov
mov
icebp
jg
cli
mov
loope,pn
jnp
bnd
lds
popf
or
dec
add
xchg
mov
dec
cld
xchg
sbb
push
push
fidivs
sbb
inc
jne
sbb
inc
insb
pop
sbb
enter
jg
fwait
or
push
add
test
es
fidivrl
fs
mov
ret
in
add
mov
fmulp
lahf
stos
inc
mov
xlat
sub
leave
adc
push
dec
mov
mov
popl
cmpsl
test
inc
clc
and
mov
jno
and
xchg
cmpl
ja
xchg
pop
pop
sub
aas
xor
lret
out
leave
test
sub
sahf
dec
xchg
pop
jnp
mov
or
movsl
outsl
mov
pop
fisubs
imul
mov
cmpsl
cmpsl
sub
jle
pop
pop
mov
cmp
pop
ljmp
jo
and
int
or
and
iret
jecxz
pop
and
ja
sub
push
dec
adc
push
stos
cmp
mov
fdivrl
inc
adc
lcall
mov
into
mov
ficompl
cmc
push
xchg
ja
mov
scas
cmp
fisttpl
sbb
and
or
xchg
aas
outsb
nop
pop
cmp
jno
loop
xchg
xor
loopne
or
mov
xor
int
sahf
and
rcrb
xor
or
fimuls
dec
jge
enter
aam
sub
imul
inc
dec
jle
lret
cmp
pop
repz
insb
xchg
xor
lahf
fprem1
pop
mov
sub
sub
inc
lret
sub
jbe
mov
into
ss
lds
jge
jg
leave
test
sbb
fnsave
push
xchg
fisttpll
xor
adc
movsb
test
call
or
gs
mov
mov
pop
or
mov
mov
imul
mov
idivb
call
inc
push
inc
rorl
dec
call
cmp
sahf
mov
xor
mov
cs
in
xor
push
mov
dec
pop
lds
bound
xchg
aaa
cmp
pop
cmp
daa
sub
and
lock
aad
xlat
inc
inc
rcrl
adc
adc
adc
cmp
inc
mov
sbb
push
jle
testl
cs
xchg
repz
cmp
outsl
xor
mov
shlb
push
cltd
inc
dec
fcompl
xor
mov
leave
or
pop
xor
fisttpl
mov
inc
adc
mov
mov
push
cmpsb
movsb
jb
dec
mov
jae
out
divl
repz
jg
mov
dec
mov
jnp
add
inc
lret
stc
movsb
jae
mov
mov
imul
xor
push
sti
push
jnp
push
or
addb
pop
fistps
dec
xchg
lret
mov
xchg
pop
ja
cwtl
inc
cmc
xchg
adc
and
add
mov
mov
enter
cs
mov
mov
mov
xchg
dec
sbb
pop
iret
repz
mov
enter
enter
or
inc
test
punpcklwd
cmp
add
pushf
ja
daa
pop
in
scas
stos
pop
add
fwait
xchg
and
fwait
and
addl
cmp
ret
cmp
sbb
cmp
insb
fdivrs
inc
in
jle
jmp
xor
sbb
jmp
add
xchg
dec
fdivrl
sub
incl
loopne
test
cli
and
adc
inc
lahf
xchg
or
cltd
cmp
xchg
jne
shl
mov
xor
mov
and
pop
pop
xchg
out
inc
movsl
sub
fidivrl
inc
dec
fisubs
test
sbb
cmp
lods
ljmp
sahf
hlt
cmp
mov
int3
mov
inc
pop
sub
cmp
mov
daa
xor
insb
or
iret
lahf
mov
lret
fs
and
add
bound
out
sarl
iret
addr16
pop
push
mov
div
sbb
mov
incl
in
jl
jns
stc
jmp
sub
mov
rcrb
jl
rcrb
sub
int3
add
dec
imul
clc
jb
enter
mov
push
aaa
psadbw
jmp
mov
into
test
push
sbb
mov
movsl
and
cmp
xchg
fidivl
dec
test
xchg
and
sub
cmp
in
dec
roll
mov
sub
loope
pop
inc
sahf
cwtl
push
pop
ret
fdiv
sub
icebp
cmpsb
and
xor
popf
sub
mov
sub
rolb
les
jp
fisubl
fisubrl
pop
xor
cld
jg
clc
enter
add
shll
testb
stos
sub
inc
and
and
cli
sub
popl
sbb
push
mov
pop
cmp
negl
mov
pop
pop
cltd
nop
iret
adc
rorb
inc
push
mov
sub
and
dec
pusha
bound
in
scas
fnclex
repz
cmp
icebp
and
idivb
rorb
pop
add
and
push
push
xlat
adcb
xor
loope
dec
stos
and
jne
int3
inc
mov
xchg
add
shr
pop
icebp
clc
jae
sbb
sbb
aad
fs
mov
or
xchg
push
push
and
mov
pop
andl
cs
mov
test
nop
les
test
mov
mov
mov
sub
scas
inc
sbb
or
mov
les
enter
bound
into
int3
cmp
add
int
inc
and
pop
in
push
pop
lods
jecxz
dec
or
and
ss
and
stos
lahf
stos
lock
xor
jge
test
andl
es
nop
rol
push
mov
adc
hlt
rorb
stos
sbb
mov
jle
clc
sarb
xchg
fnstsw
repnz
jno
hlt
pop
aas
mov
lods
adc
lret
and
xchg
xor
push
jecxz
push
ret
dec
nop
cmp
test
xorl
inc
push
das
std
outsl
mov
jp
xchg
push
sub
icebp
ret
fstps
mov
leave
popf
mov
mov
fwait
dec
cmp
dec
mov
jno
jg
or
lret
sbb
inc
div
sahf
testb
jecxz
loope
mov
sbb
jne
xor
cmp
data16
adc
sbb
jno
sbb
xor
jns
int3
push
stos
mov
mov
xchg
mov
pop
dec
dec
jle
cmp
pop
aaa
jge
cwtl
push
push
add
ja
cmpsb
pop
fcmovb
mov
frstor
mov
push
fwait
adc
bound
jge
rol
cwtl
aam
jl
out
cld
sbb
xchg
sbb
add
hlt
cmp
mov
xchg
push
movb
filds
insb
adc
aad
jb
into
mov
xchg
sub
xor
stc
repnz
xchg
popf
rcrb
dec
xor
adc
jno
jns
add
lea
lret
add
rcrb
imul
cltd
jl
stos
rorb
sub
mov
incl
insl
decl
addl
into
cmp
mov
pop
sbb
subb
cmp
out
adc
lret
popf
sub
imul
sbb
adc
pop
and
add
out
cmp
loopne
inc
pop
or
orb
jo
test
int
push
dec
test
sbb
nop
out
xor
imul
jae
push
dec
mov
inc
mov
mov
jb
mov
jg
les
fcomps
cmp
aas
aaa
dec
xchg
jbe
mov
movsl
lds
aad
sbb
shll
shrb
dec
lods
mov
pop
mov
movsl
cmp
and
into
repz
test
cmc
or
jae
or
aad
das
int
dec
or
sbb
outsb
jmp
orl
popf
mov
fmulp
enter
jb
pop
fucom
pop
mov
cmp
mov
out
enter
test
push
dec
mov
lods
add
mov
push
mov
movsl
in
add
xchg
adc
mov
jno
jnp
lea
das
sub
es
test
sub
rcrb
adcl
push
cmc
into
aam
jo
add
inc
cmp
add
sbb
sarl
push
icebp
sbb
loopne
stos
adc
in
es
divb
mov
pop
pop
push
or
movsb
and
in
cmpsl
mov
jae
out
nop
sub
mov
inc
cmp
dec
dec
xchg
or
adc
cmp
jle
das
icebp
in
ret
ja
push
inc
fnstcw
adc
mov
mov
sub
add
sbb
inc
xlat
jno
push
lds
sbb
push
imul
inc
popf
or
mov
sbbb
sbb
leave
cmp
fsubrl
add
mov
fbstp
lock
icebp
add
inc
out
inc
fsubl
inc
mov
push
jge
add
or
and
dec
dec
mov
or
mov
inc
ret
pop
mov
popa
jno
cmpsb
pop
mov
cmpsl
pop
and
into
shl
adc
outsb
insb
enter
jb
fs
sub
mov
js
mov
imul
mov
insl
push
or
add
mov
enter
add
lds
sbb
iret
pop
faddl
inc
addr16
sar
addr16
push
push
sbb
mov
repz
out
loopne
daa
add
xchg
imul
repz
xor
rolb
sahf
push
ret
lret
xor
mov
mov
sarl
and
inc
fwait
rol
std
test
jo
pop
or
ds
scas
js
adc
jno
mov
ds
fldl
cmpsl
enter
add
inc
mov
gs
mov
jge
nop
loop
fmull
push
inc
sub
sbb
jbe
es
cs
inc
pop
or
fs
sbb
xor
sub
cmp
mov
add
jne
push
sbb
aad
fcoml
adc
nop
iret
pop
cmp
add
pop
mov
adc
mov
jg
push
xor
mov
jle
and
sub
negl
movsb
cmp
popa
leave
sbb
mov
cmc
idivl
sub
jecxz
mov
loop
insb
sbb
jno
pop
mov
fimull
mov
adc
jl
mov
aas
inc
xor
add
mov
popa
enter
push
inc
cli
cmp
sbb
pop
jno
dec
dec
add
mov
out
cmp
mov
fimuls
lock
dec
stos
push
cmp
vpand
loope
add
mov
adc
jne
and
xor
mov
mov
movsl
paddb
mov
xchg
insb
out
push
movsb
sbb
push
fistpl
inc
cmp
out
test
iret
cmp
inc
lock
inc
jno
inc
in
xor
cmp
fdivl
xor
fsubr
in
adc
mov
sub
rcrb
xor
mov
iret
or
cmp
inc
pop
push
add
pop
cmpl
or
lret
adc
aas
lret
inc
dec
xor
pop
add
test
mov
dec
add
inc
inc
subl
adc
and
test
movsl
rcr
je
cmp
data16
enter
xor
in
mov
push
pop
mov
jo
out
mov
ljmp
lahf
ljmp
std
test
jbe
or
inc
inc
cmp
mov
mov
ds
mov
outsb
ret
mov
rclb
enter
addl
mov
fcoml
push
cvtdq2ps
sti
push
xor
orl
sahf
mov
loopne
xchg
cld
xor
stos
movsb
fsubrl
hlt
popf
leave
fwait
push
adc
jle
jmp
push
in
ds
mov
and
cmc
shlb
mov
shl
jae
push
add
clc
sbb
cmp
ret
lods
jge
das
test
in
repnz
stos
lret
iret
xchg
add
sub
les
aad
mov
add
ret
fcompl
scas
sub
movsb
push
orl
data16
adc
mov
add
lods
cmp
fdiv
stos
push
add
nop
and
cmp
lods
scas
mov
add
pop
nop
push
cmp
fidivrl
out
pop
sbb
or
sub
mov
cmp
aam
add
mov
and
add
out
hlt
scas
pop
jl
fistps
push
test
stos
insb
mov
sti
je
xchg
add
aas
js
in
push
gs
push
fsubr
lods
aam
pusha
push
test
dec
and
jns
push
xor
pop
mov
in
mov
pop
mov
out
push
stc
adc
cbtw
ja
test
ficoms
or
jb
mov
add
imul
jge
pop
or
xchg
addl
adc
mov
push
push
or
or
lea
xor
xchg
lods
scas
jb
sbb
xchg
inc
pop
aas
or
mov
jns
ds
out
scas
sti
inc
aaa
jno
sti
sbb
pop
fs
lret
scas
arpl
loopne
aas
sub
dec
shlb
sub
jmp
and
iret
js
push
mov
sarb
or
das
inc
out
cmp
ret
pop
jb
addr16
push
xor
xchg
add
and
js
cmp
popl
test
xchg
stos
add
xchg
and
pop
lcall
dec
xchg
mov
sub
sub
dec
imul
inc
inc
mov
lods
lret
mov
loop
jnp
sub
jp
stos
mov
sub
inc
and
sbb
or
fildll
jle
mov
shl
jb
push
sbb
jb
imul
inc
adc
cs
jns
arpl
cmpsb
and
mov
in
int3
adc
cmp
mov
es
mov
ret
mov
pop
jle
push
rcrb
lcall
cmp
xor
pop
xlat
sbb
dec
pop
pop
loopne
lods
cli
cmp
pop
add
sbb
je
cmp
inc
pop
pop
mov
lret
sub
mov
movsb
xchg
jne
and
mov
add
mov
out
cltd
jmp
jl
repnz
fdivrs
test
pusha
outsb
cmp
cmp
test
xor
and
cmc
out
loopne
es
hlt
xlat
push
push
cmc
test
push
clc
iret
and
xchg
mov
push
popl
inc
add
mov
dec
cltd
movsl
push
mov
sahf
pop
xchg
xchg
out
jno
in
aaa
mov
test
or
pop
lds
sti
sbb
sub
out
and
add
shrl
int3
repz
clc
lret
stc
inc
adc
lcall
dec
clc
pop
cmpsb
adc
jle
repnz
inc
xchg
clc
mov
fidivl
loope
xchg
mov
leave
mov
cs
mov
and
hlt
movsl
pop
pop
mov
sub
fstpl
clc
or
repz
jns
enter
int3
pop
fiadds
stos
dec
or
paddd
push
mov
xchg
inc
and
add
xor
inc
jp
and
dec
fmuls
xchg
add
sbb
sbb
or
stos
daa
hlt
jecxz
or
movsl
into
ss
add
add
js
push
nop
les
sub
push
mov
daa
movsl
adc
cmp
aaa
cs
rclb
mov
cltd
cmp
enter
add
fs
mov
push
clc
xchg
lcall
push
or
or
adc
inc
mov
mov
dec
xchg
xor
cmc
fdivrs
orl
add
push
lods
xchg
dec
xor
jo
xor
cmpb
xchg
cmp
scas
mov
or
call
popa
inc
outsb
push
push
cmp
ja
pop
lret
sub
push
rolb
sub
cltd
jo
pushf
cmp
sti
xor
dec
cmp
jae
loop
out
xor
mov
fldcw
xor
lods
outsb
scas
outsb
fwait
out
sbb
test
dec
hlt
lret
mov
fadds
mov
test
inc
push
mov
adc
jbe
mov
js
cwtl
fdivrp
cmp
cmp
repz
mov
stos
dec
pop
dec
test
stos
add
cs
dec
incb
xchg
xor
pop
mov
sub
jae
mov
push
inc
cmp
jl
adc
mov
in
mov
xor
stos
mov
sbb
jl
fidivs
or
push
xor
ret
fs
stos
out
mov
xchg
add
pushf
sti
shr
test
lock
lret
cli
fabs
inc
shlb
mov
jae
xchg
mov
loopne
push
in
movb
xchg
xor
negl
pop
or
jmp
ljmp
int
out
loopne
jb
sub
push
insl
mov
mov
lcall
inc
inc
jle
sbb
inc
push
xchg
add
mov
addb
sub
push
add
add
movsl
pop
push
aam
imul
les
push
or
std
shl
lret
das
pop
mov
inc
pop
in
or
pusha
xor
cs
dec
or
pushf
fildll
lret
stc
push
loope
mov
addr16
lods
lret
sahf
sub
mov
test
aam
inc
cmp
ret
inc
popa
cld
add
mov
jns
mov
sub
mov
sahf
pop
rcrb
ja
mov
sbb
ljmp
out
fucom
jp
es
mov
sub
je
or
jo
cmp
mov
xchg
test
sub
jne
rcr
sbb
shll
mov
add
jns
leave
lahf
xor
mov
fcmovnb
mov
and
loope
push
outsb
add
and
mul
aad
in
fdivr
sub
adc
pop
mov
pop
outsl
mov
sahf
sub
notb
dec
inc
xchg
pop
push
mov
inc
xchg
out
ja
inc
dec
pop
and
sub
movsl
fs
mov
daa
fmul
cmpl
or
stos
mov
mov
mov
pushf
loopne
movsb
leave
dec
lea
jle
adc
sbb
sti
test
inc
inc
sbb
jmp
cmpsb
xchg
leave
mov
xchg
sub
jnp
sub
push
push
repz
sbb
mov
dec
lock
jb
clc
data16
xor
pop
pop
xchg
push
in
mov
into
inc
pop
mov
xchg
inc
push
mov
sbb
mov
mov
add
jnp
sbb
cmc
aad
cld
popa
push
iret
inc
sub
xor
and
arpl
int3
mov
xchg
cld
es
je
pop
movsb
outsl
cmp
pop
movsb
lcall
and
mov
cmp
js
inc
mov
xor
push
in
lret
bound
lret
sbb
int3
mulw
fs
push
repz
cmp
sbb
xchg
pop
cmp
mov
cmpsb
jae
fists
jo
push
mov
test
and
in
ds
push
mov
in
call
push
cmp
ret
in
mov
leave
add
mov
fisubrs
xchg
clc
xor
or
stos
mov
pop
and
xchg
not
jae
inc
gs
or
repnz
icebp
pop
imul
je
mov
and
mov
pop
mulb
shrb
xor
mov
lock
sahf
xlat
push
jae
xor
sbb
mov
fnstsw
and
adc
sub
and
imul
cs
pop
insb
or
sub
mov
pop
jae
lds
or
cmpsl
inc
das
out
loope
fmull
cmp
in
add
mov
xor
push
inc
sbb
sbb
rclb
lea
in
and
mov
cmp
cld
stos
push
add
ret
push
mov
dec
imul
adcl
inc
or
adc
or
adc
push
leave
cmp
loop
imul
aad
or
cli
popa
or
and
int3
mov
addb
cmp
jae
sbb
sub
loope
mov
mov
test
popa
loope
lahf
or
shll
inc
xchg
ret
stos
sub
ret
mov
xor
add
dec
and
xor
test
pop
cmpsl
inc
cwtl
inc
xchg
jl
pop
ss
dec
xchg
out
fldl
jo
cmpsb
mov
fistpl
mov
sub
pop
mov
jle
mov
iret
lods
clc
pop
cmovs
adc
fprem
jne
fs
push
and
jo
movsb
divl
xchg
or
xchg
cmp
pusha
inc
xor
clc
jmp
sbb
imul
push
mov
push
and
sbb
pop
les
mov
jne
iret
nop
sub
sub
aaa
xor
lea
cmpl
mov
push
pop
mov
rcrb
cwtl
inc
sbb
movsl
mov
jnp
repnz
cmpsl
xchg
mov
push
decl
mov
dec
jnp
movsl
shrl
or
cmp
pop
add
dec
pushf
sbb
ss
xor
ret
faddp
aas
inc
mov
cmp
inc
pop
or
jnp
pop
dec
dec
xchg
cmp
dec
jmp
mov
dec
loopne
fistpll
and
mov
xchg
sbb
xor
push
ss
es
ret
jb
sbb
mov
dec
add
mov
add
shrl
jmp
icebp
lahf
push
in
aad
xchg
or
pushl
cmpsl
or
dec
pfcmpge
mov
or
int
or
jg
andl
add
sub
scas
fldl
jns
mov
add
int3
rclb
imul
cs
inc
xchg
les
dec
insl
leave
push
fbld
sbb
fidivrs
cmp
xchg
sub
mov
sub
pop
inc
push
sahf
xor
test
push
sub
sub
leave
call
aad
push
xlat
xor
mov
sbb
inc
pop
jle
ret
and
addr16
jo
jp
mov
pusha
decl
outsl
push
mov
sub
push
ja
clc
test
cmp
sub
sub
mov
outsb
xor
sbbb
xorl
sbb
insl
mov
pop
in
xlat
add
pop
add
test
adc
je
stc
and
imul
xchg
outsb
or
pop
pop
xor
push
xchg
ror
lcall
xor
adc
mov
out
cmp
fwait
jmp
mov
lds
fcompl
mov
in
mov
push
fstpt
mov
sub
xor
add
sbb
push
hlt
adc
cmp
xorl
adc
or
add
jmp
mov
mov
sub
sbbl
mov
and
scas
nop
dec
or
pop
int3
xor
pop
imul
sub
adc
lret
int
pop
stos
out
jle
mov
or
cmp
mov
test
fisubrs
pop
rorl
mov
outsl
sti
sbb
dec
imul
mov
push
scas
cmpsb
jnp
pop
mov
dec
lret
sub
loope
stos
xchg
mov
or
jecxz
adc
or
rorb
and
cmpsb
mov
xchg
push
or
cwtl
fdiv
mov
inc
aas
mov
lcall
ss
into
cwtl
adc
stc
add
jbe
sbb
jmp
lea
jl
jbe
cmp
sahf
scas
xchg
and
dec
les
stos
and
jmp
ret
insb
leave
ror
cmpsl
cld
test
jl
adc
test
mov
int3
inc
jae
jle
imul
mov
loop
in
mull
mov
dec
js
sbb
cmpsb
sub
sbb
das
adc
sbb
pop
push
test
insb
rcr
mov
mov
sbb
ret
adc
push
jmp
mov
mov
movsb
push
jl
mov
push
add
insl
scas
adc
sbb
sub
mov
lock
sbb
rorb
mov
sahf
ret
push
cmpb
lcall
popf
jns
iret
sub
jl
pop
cli
xchg
sbb
mov
inc
push
jnp
movsb
add
iret
sbb
test
cld
and
int
inc
inc
dec
pop
jns
loope
loopne
nop
lods
mov
xchg
inc
or
leave
popfw
push
fsubrp
xor
shl
ficoms
mov
cmp
mov
sub
cmp
icebp
aad
sub
and
mov
inc
xchg
add
shll
or
and
dec
fisttpll
jmp
cmp
inc
scas
xchg
or
iret
jbe
xor
sbb
in
lret
push
ret
mov
xchg
push
sti
out
pop
loope
and
dec
aaa
inc
data16
adc
jb
ret
leave
mov
push
and
jns
mov
jns
je
test
xor
js
mov
insl
sub
xor
movsl
repnz
sbb
cmp
jno
mov
mov
ret
int3
mov
xchg
test
repz
in
inc
or
loopne
dec
adc
nop
push
addr16
mov
adcb
sbb
aas
pusha
fisttpl
or
xchg
mov
rclb
jl
mov
dec
adc
pop
ret
cmc
and
push
and
cld
and
rorb
ja
fcomi
scas
in
pop
add
cs
sbb
add
iret
xorl
or
gs
or
mov
jp
enter
ds
jne
or
jns
xor
movsb
loope
xor
aam
fwait
hlt
add
rep
adc
fists
push
loop
outsb
pop
add
push
jo
xor
icebp
jns
jl
and
sbb
inc
inc
inc
and
push
cmpsl
or
dec
dec
sub
lea
mov
pop
imul
push
and
insl
rolb
lods
dec
ret
inc
jmp
and
iret
imul
out
jae
sti
popf
adc
das
jg
pop
add
xchg
mov
lret
or
ret
jns
sub
jecxz
in
fwait
enter
cmp
inc
roll
mov
jl
mov
xor
popa
popf
ja
and
cmpsb
lcall
xchg
xor
loope
lahf
xchg
in
test
dec
pop
push
hlt
pop
in
pop
inc
lods
clc
jbe
clc
mov
aam
std
mov
jae
jbe
adc
cwtl
mov
jp
and
sbb
pop
divb
or
xchg
add
data16
or
dec
call
dec
les
out
adc
insb
sbb
xchg
inc
and
loope
cwtl
divb
sub
sahf
fwait
movsl
sahf
inc
in
aas
addb
add
pop
mov
ljmp
fwait
loop
xchg
int
gs
mov
mov
jle
xor
cmp
lock
aad
imul
pop
push
mov
and
cld
insb
mov
xchg
pop
xor
sbb
jecxz
cmpl
push
xchg
testl
test
xor
mov
mov
sbb
lock
push
cltd
mov
outsb
popa
fxch
repz
jnp
push
movsb
cmp
dec
adc
mov
push
lahf
loop
jb
nop
pop
xchg
mov
mov
lret
cmp
and
and
out
jle
dec
pop
mov
add
mov
outsl
arpl
std
mov
sbb
test
pop
lcall
scas
push
lds
sub
iret
shrb
cmp
pop
push
push
ja
or
mov
sbb
sti
dec
sub
xlat
inc
dec
lret
daa
dec
xchg
dec
cmp
aam
inc
jns
and
adcl
pop
push
pop
mov
pop
in
fisttps
lock
lret
pop
mov
xchg
ret
cmp
adc
dec
dec
loop
pop
cmp
or
mov
xor
pop
rcrl
cwtl
icebp
jb
lock
and
adc
cld
enter
mov
es
lods
repnz
xor
adc
lcall
test
mov
xor
out
bound
jo
dec
nop
outsl
lds
icebp
es
cmp
mov
cmpsl
mov
jle
xchg
hlt
xchg
xor
pop
xchg
call
insb
jnp
xchg
nop
sub
mov
in
push
jle
inc
mov
ljmp
sub
mov
iret
outsl
icebp
into
and
icebp
sub
sarb
mov
dec
mov
push
xchg
int
call
jbe
test
mov
in
imul
pop
imul
in
and
mov
and
insl
pop
xchg
lahf
jle
mov
dec
add
sub
loopne
ds
sub
inc
sti
jge
repz
dec
out
pop
add
inc
icebp
xor
jp
sub
shlb
iret
push
loopne
mov
insb
jg
xchg
pop
lret
jp
fists
in
cli
dec
mov
cmp
adc
mov
lods
add
adc
or
sahf
jmp
jb,pt
mov
xor
add
push
popa
sti
add
mov
mov
adc
sub
std
cwtl
mov
pushl
leave
lcall
jecxz
jnp
mov
je
loopne
xchg
test
cmp
cmpsl
fcompl
mov
mov
sub
jecxz
or
shll
xchg
mov
pop
sub
inc
pop
mov
lahf
test
pop
scas
repnz
stc
insb
and
or
mov
lds
hlt
lcall
mov
imul
clc
stc
mov
push
loop
cmp
mov
mov
int3
and
xchg
jg
sar
in
mov
xor
insl
jo
psrad
in
das
mov
jge
add
popl
sti
jne
adc
enter
dec
xchg
add
imul
incb
sub
push
pop
mov
cld
and
enter
mov
lods
sub
aas
lret
xor
rcrb
inc
loop
xchg
mov
fcoml
push
out
xchg
jp
outsl
pop
jge
dec
daa
jge
scas
pop
mov
cmp
xor
inc
pop
test
pushf
fiadds
jmp
imul
popa
cmpsl
shl
inc
sti
mov
mov
xor
adc
repz
jge
dec
movsl
jns
stos
shl
stc
cmp
frstor
hlt
push
pop
lret
jp
in
nop
cmp
bound
popf
jae
push
aas
or
jae
icebp
or
sub
fnstcw
mov
adcb
scas
pop
push
jg
jecxz
pop
pop
sub
cmp
inc
mov
sub
repz
cmp
js
xchg
arpl
fidivl
mov
test
mov
push
int
dec
es
inc
repnz
test
mov
dec
stos
fbstp
addr16
sahf
repnz
insb
sub
pop
fmull
push
leave
notb
mov
pop
test
jl
sub
test
add
in
mov
pop
mov
inc
stos
mov
pop
add
and
mov
cmp
pop
ss
scas
imul
jl
mov
pop
dec
test
movsb
out
cld
sti
inc
push
mov
and
mov
pop
mov
popa
sbbl
sub
push
cs
mov
test
mov
popa
fiaddl
pop
movntq
mov
leave
int
or
cmpl
ljmp
mov
cmp
adc
inc
cmp
rolb
bound
dec
repz
cmp
xchg
jb
sub
ds
shlb
cli
inc
gs
and
push
cmpl
lea
fld
mov
xor
jg
lods
push
push
pop
cmp
pop
imul
enter
push
jmp
mov
push
imul
mov
cmovno
xchg
adc
push
inc
pop
lret
aas
adc
das
cmpsb
int
test
jp
stos
sub
fs
adc
mov
lret
adc
andb
fiadds
mov
inc
leave
cli
and
ret
sub
lret
notl
mov
jge
mov
mov
xlat
add
scas
aaa
push
cmp
pop
ret
cmp
lea
jno
test
cwtl
into
test
stos
fs
push
test
nop
in
jb
int
dec
lods
push
cmpsl
mov
popa
push
xchg
into
cmp
sbb
cmp
arpl
sti
ljmp
je
leave
jmp
in
and
and
inc
pop
scas
mov
inc
push
cmp
dec
or
mov
sbb
loop
sub
pop
add
cltd
call
loope
inc
ret
out
cmp
add
add
lods
mov
repz
add
jecxz
mov
add
xorl
add
push
push
mov
addr16
cltd
popf
xor
scas
xor
loope
xor
test
js
leave
fbld
mov
xlat
popa
cmc
jae
aam
test
xchg
cmp
insl
jmp
add
and
shrl
nop
mov
ret
stc
mov
xchg
jnp
lods
lahf
sub
imul
jae
pop
mov
inc
enter
push
inc
or
jmp
in
push
and
jbe
nop
inc
mov
sarb
pop
jp
in
sbb
popa
jle
test
cmpsl
adc
mov
add
adc
sub
cmpsl
repnz
add
popa
into
mov
sbb
pusha
pushf
pop
push
call
test
xchg
dec
inc
add
ret
jle
jl
daa
mov
mov
int
loopne
fwait
sbb
loop
xor
sub
jle
pop
or
icebp
inc
stc
loopne
idivb
in
es
movsl
push
mov
inc
push
adcl
jno
jo
sarb
loope
int3
test
subl
push
cmp
imul
fs
xlat
fs
addr16
mov
bound
repnz
xchg
shlb
mov
cwtl
arpl
mov
xor
in
addr16
xchg
sti
dec
scas
xor
mov
leave
clc
movsl
shlb
mov
mov
lds
stos
mov
je
xchg
mov
push
cmp
cltd
js
inc
xlat
cli
mull
add
fwait
les
jns
sahf
mov
ss
fcomi
lods
call
push
ret
stc
not
inc
arpl
pop
les
adcb
mov
ret
into
add
cwtl
les
mov
ljmp
loope
inc
cltd
inc
outsl
pop
jecxz
and
lcall
pop
cs
and
add
js
leave
sub
lock
fnsave
inc
sti
sub
test
pop
mov
loopne
sbb
xlat
clc
mov
scas
sbb
pop
jge
pop
jae
in
test
sbb
sub
xchg
div
insl
adc
loop
lret
sub
pop
mov
add
pushf
adc
shlb
and
cmp
mov
xorl
mov
push
cmp
fwait
sbb
mov
mov
or
mov
nop
inc
sbb
fsubr
inc
sbb
ljmp
les
cld
popf
stos
in
arpl
iret
sbb
or
mov
pop
je
sti
movsl
pop
cmpb
sahf
sub
push
fadd
jg
jmp
inc
lods
test
movsb
arpl
arpl
mov
mov
addl
int
mov
or
ret
in
and
insb
movsb
inc
add
adc
cmc
ret
adcl
add
cmp
cwtl
dec
mov
xlat
push
adcl
pop
xchg
jg
add
sbb
into
outsb
mov
pusha
adc
ljmp
xor
inc
outsb
jmp
mov
cmp
stos
fisttps
mov
test
test
scas
loop
fistl
sub
test
inc
cld
jmp
repnz
dec
dec
out
jmp
outsb
jo
push
lods
sbb
notb
add
loope
jle
push
push
push
dec
in
sbb
pop
xchg
mov
lods
ds
sti
shrl
shlb
cmpb
jle
mov
mov
rcrb
xor
cs
cmp
pop
shrb
add
fisttpll
out
or
and
es
mov
ret
mov
dec
fucomip
sbb
push
out
je
rcr
xor
inc
js
rolb
dec
sbb
or
sub
stc
xor
push
lods
mov
aas
sub
in
into
in
mov
icebp
cli
xchg
push
dec
sub
jb
mov
cld
repnz
push
and
pop
jecxz
rol
js
ljmp
xrelease
xchg
js
incb
jl
inc
std
orb
jb
repz
adc
cmpsl
popf
mov
push
ss
cld
shlb
scas
add
sbb
or
out
fcoml
cmp
pushf
fadds
loope
fnstenv
aaa
pop
or
fildll
je
sub
sbb
fs
or
push
lahf
cmp
sub
into
push
cli
and
pop
mov
daa
inc
cmp
mov
lods
inc
fldcw
int
pop
cwtl
mov
ret
pop
cmpsl
lods
cmp
push
out
shll
pop
dec
push
cs
ror
mov
lock
cmp
cmpsl
test
xchg
ss
ror
enter
enter
fsubrs
jne
lcall
mov
ret
lcall
nop
jno
push
iret
cmp
cmc
lahf
mov
data16
jbe
loope
add
xor
out
pop
xchg
sbb
enter
in
subl
out
enter
popa
mov
or
mov
cwtl
in
js
loop
pop
jno
shll
gs
push
loope
push
lds
lods
xchg
jae
xchg
into
jns
xlat
pop
outsb
adc
jo
push
movsb
imul
lret
cltd
mov
int3
push
mov
add
cs
insb
js
cld
cmpsb
cmp
repz
pop
xlat
pop
sbb
scas
call
sub
push
and
pusha
adc
scas
add
data16
push
lds
imul
icebp
cmp
xchg
jno
shlb
aam
dec
mov
jno
sub
fdivs
add
jno
mov
mov
test
mov
pop
cmp
mov
cmp
and
jge
ret
mov
fcmove
dec
test
insl
js
repz
push
outsl
or
mov
xor
cmp
dec
jns
das
arpl
stos
mov
test
out
cli
subl
mov
sbbb
mov
fldcw
jmp
jo
pop
or
inc
jmp
pushf
dec
ds
enter
sbb
loopne
pop
cmp
xor
movntq
aam
jo
lret
dec
add
or
pop
cmp
ret
and
inc
dec
in
and
leave
fsubrl
mov
jb
push
test
pushf
rorb
outsb
jmp
fbstp
dec
xor
popf
xchg
es
jns
mov
adcb
dec
and
or
pop
jp
and
nop
push
shr
and
push
fbstp
ret
inc
icebp
sub
fcoms
adc
adc
xor
and
mov
sub
rolb
inc
in
and
decl
xor
mov
fsubrl
xchg
mov
and
mov
jmp
lds
push
push
subl
mov
ljmp
inc
leave
sub
aam
jnp
push
in
data16
mov
mov
cwtl
dec
pop
testb
xchg
and
or
push
xchg
cld
test
cmp
fstl
mov
jo
aad
cmp
test
sub
mov
dec
cltd
mov
mov
cmp
daa
je
lcall
mov
insb
dec
int
xchg
adc
ss
shlb
leave
stos
jp
add
xchg
adc
inc
adc
leave
int3
pop
icebp
loopne
xchg
out
std
pop
lds
cmp
xchg
push
outsb
fcmovb
inc
jne
lods
xor
hlt
pusha
test
sbb
or
ret
mov
push
cltd
jg
jmp
subb
loope
cmpl
fnstsw
xchg
pop
jb
sbb
sub
adc
adc
mov
push
rclb
out
mov
test
andl
movb
je
daa
adcb
pop
aaa
sub
fimuls
lds
sarl
daa
sub
pusha
lret
push
stos
je
and
fs
jl
or
scas
mov
jge
cwtl
pop
gs
mov
push
mov
sub
add
sub
das
mov
push
or
lods
pop
call
hlt
cmp
arpl
test
push
xchg
and
hlt
aad
cmp
or
inc
push
mov
mull
pop
frstor
mov
inc
push
jmp
inc
and
lock
jae
in
notb
inc
ret
ret
cmpb
pop
sub
scas
cmpsl
test
dec
mov
rolb
sahf
dec
or
jno
push
and
je
add
or
or
xchg
jle
fcmove
mov
ret
repz
push
dec
jecxz,pt
incl
push
xor
notb
mov
and
jo
sbb
lea
sub
int3
mov
rclb
leave
jl
add
out
idiv
prefetch
or
xchg
shlb
jae
mov
sahf
jl
pop
cmc
clc
and
dec
sbb
out
nop
test
dec
xor
mov
aam
push
mov
sbb
inc
dec
lock
cwtl
aaa
cmp
cs
imul
pushl
xchg
loop
pop
fucomi
lcall
repz
cwtl
xor
xlat
loope
inc
mov
xchg
cmpb
cmp
cmp
pop
mov
or
cwtl
out
pop
push
inc
jle
repnz
inc
pushl
call
test
jae
dec
rcl
xor
lods
in
cld
mov
mov
sub
jg
inc
jle
inc
in
jmp
nop
in
roll
push
sub
mov
jne
repnz
icebp
xor
jne
test
nop
sub
lock
mov
mov
js
add
out
cmp
dec
out
cld
mov
add
adc
adc
mov
mov
test
sahf
dec
subb
lea
popa
push
hlt
cs
mov
and
aad
mov
out
pop
mov
ret
or
and
push
adc
ljmp
jp
addr16
mov
sub
cld
cmp
jb
pop
or
mov
jb
push
or
in
push
enter
jo
pop
test
lods
mov
jne
add
mov
xchg
das
xchg
pop
es
mov
mov
dec
xchg
lock
xor
pop
jbe
rorb
popa
insl
fisubs
and
and
sbb
aam
pop
mov
arpl
cmp
pop
loope
inc
sbb
lock
mov
inc
test
je
push
ret
ret
pop
xchg
dec
pop
and
mull
test
pop
jb
push
and
imull
inc
lock
mov
or
push
push
dec
rcrl
pop
inc
or
push
sub
sub
sub
add
int
repnz
js
or
inc
pop
xchg
jo
into
cwtl
push
repz
fwait
cwtl
rcr
jnp
mov
pop
mov
and
dec
jge
std
js
movsb
cltd
push
loop
mov
rcl
inc
cmp
mov
mov
jp
mov
movsl
jmp
inc
scas
add
loop
loopne
dec
jbe
and
ljmp
push
lock
sub
imul
loop
sub
mov
xor
add
sub
clc
les
cld
rolb
xchg
cmc
inc
inc
mov
ret
or
pushf
pop
test
stos
iret
rorb
mov
int
rcll
pop
stc
dec
or
fwait
sub
adc
fs
shlb
scas
ret
loop
fsubs
pop
out
mov
fnstcw
iret
xchg
pop
inc
sub
jns
sub
icebp
sbb
pop
pop
ret
ret
adc
mov
push
je
popa
rcll
jns
fistpll
cmp
add
pop
rcrl
mov
out
sti
clc
ljmp
add
sarl
sbb
jmp
mov
popf
jp
fstps
outsl
cltd
add
xchg
ret
shrl
cmp
stos
enter
stc
add
jne
add
pop
cli
mov
mov
bound
xchg
popa
ja
bound
lcall
sbb
enter
pop
test
adc
mov
pop
arpl
aad
xchg
mov
shll
movsl
insb
sub
cwtl
cmp
cmpsl
ret
insb
mov
into
or
adc
cmp
inc
aam
pushf
stos
dec
pop
mov
mov
aam
push
sbb
movsb
out
mov
push
fisubl
fwait
adc
and
dec
jb
adc
stos
adc
pop
add
into
out
roll
pop
lahf
push
push
inc
ficompl
pop
xorl
in
jmp
adc
ja
inc
cmp
jno
cmc
inc
in
iret
rorb
pop
popf
adc
gs
or
inc
call
adc
dec
icebp
movsb
cmp
ss
dec
ret
out
mov
cmp
ficompl
jb
cmp
dec
mov
enter
out
aaa
jnp
shll
insb
xor
xchg
cmp
dec
int3
popa
test
mov
xor
push
xor
jae
xor
add
inc
int3
rorl
xchg
inc
xchg
or
shlb
cs
pop
addr16
fadd
cltd
jns
roll
test
aas
xorb
cmp
dec
fsubr
cmp
lods
nop
or
and
in
xorb
mov
shlb
jl
sbb
lods
test
es
and
sub
insl
and
cltd
jne
or
add
loopne
inc
dec
pop
ljmp
and
rolb
pop
leave
xchg
and
mov
cmpsl
rorl
dec
ret
adc
stos
adc
insb
xor
sub
or
jp
mov
push
xchg
add
insl
scas
inc
cs
mov
aaa
loope
and
insb
cmp
in
inc
stos
inc
xchg
cltd
sub
mov
push
mul
jmp
mov
add
jg
jns
mov
xor
test
sarb
mov
cld
jo
add
and
test
and
clc
and
into
adc
aas
mov
cmp
movsl
add
fimull
lcall
incl
or
sbb
add
ljmp
xor
ss
in
les
jl
aam
jmp
and
pop
push
int3
ret
mov
movsl
adc
and
adc
std
push
mov
pop
fdivl
jno
fwait
inc
fildl
nop
out
add
xchg
fcoms
lret
movsl
fldcw
mov
jmp
add
sub
loope
test
inc
addr16
sbb
mov
mov
add
cmp
sbb
pop
rolb
cmp
sbb
push
mov
pop
mov
andb
pop
inc
and
mov
cs
imul
aam
adc
mov
nop
add
cwtl
mov
xchg
xchg
inc
icebp
and
pop
inc
sbb
mov
shlb
sbb
and
lcall
inc
cmp
pop
push
mov
fildll
sub
aam
dec
mov
cmp
out
adc
xchg
sti
int3
insb
cmp
xchg
in
mull
je
sbb
test
hlt
je
cmpb
nop
inc
push
inc
jae
dec
sahf
sub
sarb
push
scas
sub
mov
mov
inc
popa
out
pusha
jg
sub
sub
jae
cltd
lods
addr16
ret
adc
push
mov
cld
cmp
cmp
clc
daa
cltd
cmp
jl
lock
int3
mov
inc
arpl
adc
loop
inc
xor
jno
popf
jbe
cmpsl
jbe
es
subl
and
or
cmp
push
rcrl
pop
mov
mov
sti
cmp
cltd
clc
sub
fwait
movsl
jns
lcall
dec
das
loop
and
int
addr16
inc
lods
push
xchg
test
int3
push
pop
add
push
cmp
dec
out
mov
push
repnz
cmpb
mov
arpl
adc
add
cli
or
inc
fnstsw
fistpl
cmpb
das
cmpsb
jl
push
lds
jne
negl
sbb
sar
mov
ljmp
mov
shrl
jge
cmp
xchg
dec
or
scas
mov
push
mov
stos
or
gs
bound
mov
jne
mov
clc
ja
loopne
inc
or
rcl
enter
shll
data16
mov
and
js
movb
or
ficompl
xchg
cmp
loop
cmp
push
in
imul
sbb
or
pop
int3
push
js
or
in
xchg
ret
sub
dec
repz
or
add
inc
add
lock
jae
mov
fidivrs
fldln2
xor
pop
cmp
mov
inc
js,pt
roll
add
mov
fadd
push
or
lods
mov
fdivr
and
enter
and
lcall
adc
dec
sbb
inc
pusha
or
pop
fwait
and
sub
add
fs
or
cmp
leave
cmp
outsb
in
daa
das
cmpsb
call
in
pop
cmp
cmp
data16
sbb
cmp
sub
int
movsb
sbb
out
pushl
mov
or
cmp
cmp
inc
ds
sahf
insb
jb
xor
adc
stos
pop
jns
jbe
xchg
mov
sbb
pop
pop
mov
clc
sub
and
cwtl
and
pop
adc
mov
sub
leave
xor
enter
insb
pusha
inc
mov
in
jge
icebp
cltd
stos
dec
adc
rcrb
xor
movsl
pop
rolb
int
aas
in
repz
push
movsb
imul
in
icebp
dec
mov
xor
ljmp
fildll
mov
mov
popa
mov
divl
and
pushf
test
or
nop
loope
dec
xchg
xor
pop
cmp
js
imul
loope
insl
push
test
inc
js
sbb
jo
sub
insl
jmp
mov
inc
js
xchg
jmp
shll
cmp
fsubrl
mov
pushf
cltd
add
in
sbb
rcl
loopne
cwtl
pushf
xor
ja
pop
push
into
adcb
aaa
pop
rorb
fdivl
lret
js
xchg
in
inc
loop
jecxz
pop
stos
sti
add
addr16
xchg
pop
xor
pop
popa
iret
xor
js
ret
jb
mov
pop
jmp
ljmp
mov
inc
aad
dec
mov
add
mov
arpl
dec
fsubp
popf
testb
mov
aam
scas
insb
stc
nop
roll
call
jnp
cmp
adc
cwtl
daa
loop
or
xor
mov
sub
pop
cmp
mov
in
fists
test
aas
aam
and
sti
mov
aas
in
inc
push
lcall
inc
mov
pushf
shr
fcmovnu
pop
cmpsl
inc
clc
stc
xor
inc
cmp
push
xor
sar
cmpl
loopne
cmp
loopne
js
test
notl
test
and
xor
aas
jl
pop
add
cltd
mov
int
mov
xchg
aam
inc
sub
sub
xor
mov
rol
outsl
mov
dec
fadds
popf
mov
ret
roll
addr16
mov
push
aas
je
test
mov
dec
add
sbb
mov
iret
mov
nop
dec
inc
push
in
js
jne
mov
add
std
addr16
inc
out
or
jmp
popf
call
xor
jbe
rolb
inc
call
mov
iret
test
and
cmp
add
inc
push
sub
dec
sbb
push
mov
pusha
cmpsb
mov
xchg
mov
iret
orb
add
cmc
jno
cld
sarl
lret
fadds
sbb
sahf
out
xchg
popf
mov
stc
mov
push
lret
jmp
add
mov
ret
mov
inc
xchg
or
test
fwait
adc
cmp
add
cmp
pop
clc
aas
push
jg
fsubs
mov
loopne
loope
sbb
pop
rorl
sub
mov
dec
jo
rcll
xchg
scas
lcall
loope
les
lret
sbb
popf
inc
insb
lret
aad
mov
mov
and
sbb
dec
in
shll
aad
fildll
lret
test
pop
jecxz
bound
lret
imul
jmp
cmp
into
enter
orb
and
dec
sbb
iret
out
ret
out
push
xchg
xorb
ja
inc
and
loopne
cli
addr16
ror
mov
cld
rcll
movsl
or
xchg
inc
arpl
xchg
sub
pushl
fldt
xlat
movsb
rcl
sbb
inc
pop
cmp
push
add
cmp
std
xor
xchg
jne
clc
jae
sbb
rcrl
push
pop
push
sbb
mov
stc
mov
add
adc
pop
clc
lock
push
data16
or
movsl
cmp
das
popf
shlb
mov
or
jns
xchg
call
cwtl
cmp
and
jb
loope
mov
repz
push
test
das
daa
cli
add
fdiv
frstor
inc
inc
call
inc
push
inc
fs
and
xor
dec
mov
les
mov
adc
mov
jnp
xchg
pop
in
sub
lock
sub
or
sti
nop
ror
mov
cld
xchg
iret
test
outsl
pop
inc
ret
mov
movsl
leave
popa
inc
jl
outsl
inc
or
movsl
insl
push
adc
push
add
cmp
enter
out
push
mov
cwtl
jo
inc
pushf
inc
sub
or
xor
ja
dec
mov
scas
mov
xchg
rolb
shrl
push
inc
mov
mov
dec
filds
push
loop
and
and
dec
mov
cld
insl
enter
shrl
test
mov
orb
xor
mov
jo
cmp
fidivl
mov
or
pop
inc
mov
aad
insb
stc
fistps
mov
js
inc
push
mov
mov
push
jl
pop
add
xchg
push
ret
mov
xor
cmp
incb
mov
outsl
js
insb
outsl
fidivrs
fmuls
inc
or
dec
in
enter
mov
cmp
sub
iret
test
and
enter
hlt
cwtl
inc
js
push
iret
out
addb
mov
fdiv
test
sub
sbb
repnz
fsubs
shlb
mov
lcall
fnstcw
mov
cmp
adc
fnstcw
mov
mov
adc
shlb
pop
shll
sti
jmp
pop
cli
cwtl
loopne
test
shlb
out
out
inc
imul
orb
ret
add
jl
mov
imul
call
push
out
roll
cwtl
test
pop
push
int3
popa
lahf
cltd
rcrl
push
jmp
xor
jo
sub
lret
call
pop
jl
mov
mov
xlat
shlb
lods
sbbl
or
shl
mov
cld
push
jecxz
cmp
inc
push
fwait
xchg
inc
fnstcw
mov
fldt
xor
test
mov
inc
adcl
decb
push
rcrb
cltd
pop
mov
mov
sbb
lock
loopne
adc
push
mov
les
mov
push
adcl
jmp
adc
inc
shrb
sub
hlt
cld
lods
add
pop
push
jg
pop
bound
push
push
scas
loope
xor
loop
inc
jbe
adc
mov
cltd
imul
inc
push
mov
rorb
cmpsb
rclb
dec
xor
push
xchg
hlt
adc
idivl
pop
cwtl
cli
sbb
std
sbb
jmp
jbe
shrb
xchg
mov
dec
out
shrl
mov
sbb
push
jo
cli
pop
dec
std
pop
es
repz
or
mov
enter
inc
mov
and
push
stc
enter
lret
mov
sbb
clc
xor
outsl
adc
movsb
aam
dec
push
jl
das
push
push
jmp
divl
push
mov
add
pop
test
inc
popa
in
sbb
and
pop
fbstp
inc
rorb
fucom
jg
dec
repnz
pusha
std
add
or
and
nop
fidivl
jnp
loopne
addr16
lock
or
inc
jp
call
dec
lcall
pop
sub
movsb
push
inc
cmp
aas
dec
mov
push
pushf
pushf
and
pushl
es
dec
dec
cmp
mov
sbb
cltd
xchg
push
jg
inc
insl
and
xor
xor
dec
jnp
pop
rcr
inc
sahf
adc
shlb
les
push
cmpsl
and
push
sti
cmp
in
fldenv
inc
mov
dec
hlt
sbb
add
dec
xor
jb
cmp
mov
cmp
pop
es
push
add
jp
mov
add
mov
add
push
push
ljmp
cmp
inc
orl
mov
and
jnp
cmpb
stos
push
push
mov
sub
lret
test
and
xchg
mov
mov
push
push
xchg
jae
scas
jg
sarl
aas
in
sbb
lods
in
fs
dec
inc
mov
aaa
adc
adc
nop
cmpsb
and
push
lods
or
sbb
jno
cwtl
mov
cwtl
pusha
and
add
ss
lods
fcoml
int3
dec
jp
lock
cltd
lret
or
jmp
jl
or
popf
cmp
mov
fsubl
pop
inc
and
jno
loop
cmpsl
mov
outsl
or
and
and
pusha
shrl
cs
imul
add
xchg
mov
mov
das
outsl
cmpsb
lds
cmp
clc
mov
jle
aaa
push
or
sub
mov
pop
mov
ret
ret
cmp
and
adc
hlt
jno
nop
mov
popf
dec
test
mov
nop
leave
rorl
rcll
mov
cmc
loop
fisubrl
and
js
inc
and
and
nop
xor
mov
clc
dec
dec
ja
cld
mov
push
dec
leave
adcl
xchg
dec
mov
lret
jo
or
xor
adc
sbb
in
mov
stos
daa
mov
std
sbb
enter
int3
popa
adcl
cmp
mov
movsl
arpl
sarl
jnp
aad
mov
mov
dec
movsb
fdivl
jg
dec
and
mov
movsb
shlb
adc
cwtl
rolb
enter
jl
les
xlat
cmp
inc
xlat
jmp
les
xor
push
jnp
mov
shll
or
ror
aas
xchg
jnp
cmp
mov
push
ds
mov
inc
mov
jnp
ja
fsts
jmp
int3
shl
rcrl
add
enter
jnp
cmpsl
mov
adc
inc
pop
or
in
fildll
leave
pushf
inc
mov
es
jmp
inc
fld
inc
pushf
mov
test
push
push
lcall
sarl
mov
push
fmuls
mov
xchg
mov
mov
lods
sbb
mov
push
mov
imul
das
dec
mov
push
push
sub
and
loopne
cmp
scas
les
shlb
pop
inc
add
enter
sahf
mov
push
inc
clc
popa
rcr
jns
call
ficompl
xchg
and
scas
mov
outsl
xchg
dec
pop
mov
push
jp
and
int3
rol
call
outsl
adc
pop
dec
or
cmp
pop
cltd
dec
lret
and
mov
sbb
mov
xor
pop
xchg
dec
sub
xchg
popf
and
icebp
add
inc
mov
daa
jo
aam
cmp
adc
loope
rorb
xchg
shrb
repnz
push
mov
shrb
leave
pop
inc
add
enter
jl
jnp
mov
or
jnp
or
and
pusha
xchg
cli
sti
mov
xor
or
cmp
and
sub
jge
mov
mov
les
rolb
pop
pusha
add
lock
inc
inc
dec
push
cld
mov
movsb
insb
bound
adc
mov
ljmp
xchg
adc
outsb
inc
insl
ret
les
sub
cld
int
cmc
loope
movsl
call
jge
pop
inc
add
int
stc
mov
aam
in
filds
aaa
dec
pop
fistl
enter
mov
add
out
fwait
sub
lahf
pusha
aaa
les
cwtl
out
pop
cmpl
imul
leave
lock
xchg
mov
fcmovne
mov
out
mov
inc
cli
dec
jne
or
insb
les
inc
pop
jno
pop
enter
jnp
and
and
inc
stos
and
inc
add
inc
repnz
dec
mov
or
ja
dec
addb
jmp
enter
addr16
aas
mov
sbb
fldt
pop
mov
cwtl
jbe
dec
cmp
push
adc
mov
faddl
popa
dec
icebp
sarb
sub
dec
xchg
jmp
mov
ds
test
add
sbb
jl
jge
cmp
mov
pop
or
stos
repz
push
leave
test
and
out
outsb
jl
ljmp
mov
loop
mov
jns
cmp
xor
inc
sub
movsb
mov
xor
mov
les
popf
pop
add
lahf
enter
cmp
mov
es
pop
popa
outsl
jl
cmp
addr16
push
sahf
xlat
ss
sub
xchg
pop
aas
or
pop
jae
mov
pop
scas
aad
sbb
stc
xor
dec
movsl
sbbb
or
and
sarl
insl
shl
sbb
lods
mov
and
ret
fsubrs
mov
int3
cmp
mov
iret
cmp
sahf
fcoms
push
movsl
ljmp
pushf
mov
and
inc
out
fwait
mov
shll
or
orl
or
or
push
fstl
rcll
adc
adc
out
je
rcrb
mov
sub
fcompl
les
dec
in
xchg
jg
dec
mov
wbinvd
movsl
sub
mov
add
rcr
jnp
xor
jmp
jp
mov
fistpll
xor
test
jge
or
push
fimuls
lahf
jle
test
icebp
int
jmp
or
mov
jns
push
add
inc
xchg
pop
push
in
loopne
test
and
push
sti
shll
push
pushf
sbb
dec
mov
fldl
loope
sub
nop
dec
leave
pop
and
jge
pop
movsb
xchg
bound
adc
and
loopne
imul
stos
fwait
mov
inc
scas
dec
and
in
and
enter
lahf
fstps
sbb
inc
lret
mov
sub
cmp
cld
imul
sbb
decb
js
cld
pop
mov
push
mov
mov
mov
cltd
rcrl
cmp
loope
or
and
cmp
pause
and
inc
sub
xor
aas
fstpt
cld
jp
mov
cltd
xor
push
dec
mov
out
test
jns
mov
and
jp
mov
enter
bswap
cmp
outsb
stc
fnsave
hlt
fldcw
pop
sti
movsb
sub
frstor
pop
movsb
fbld
adc
cmp
in
shrb
dec
jmp
mov
dec
insb
or
sub
lock
jo
cli
cmp
sti
pop
rol
pop
pop
movl
arpl
add
test
or
mov
inc
outsl
dec
fdivl
fmuls
pop
fisubrl
cwtl
xchg
sbb
lcall
cmp
les
sub
sub
movsb
les
mov
lock
repnz
jnp
das
mov
mov
xor
mov
xlat
mov
mov
les
test
shll
push
jo
jge
mov
popa
push
adc
cmp
lret
jne
in
add
jnp
jno
call
lods
mov
pop
test
push
jg
adc
movsb
sub
adc
lret
les
sarb
fstpl
add
enter
adc
shlb
mov
push
pop
enter
or
adc
ffreep
insb
fcmovb
dec
lret
icebp
pop
add
leave
jl
and
lock
rcr
sbbl
fcmovnb
jnp
andl
dec
mov
inc
imul
xor
adc
cmp
les
xchg
rorb
lods
pop
and
enter
jnp
xchg
mov
sbb
ja
enter
xchg
jno
inc
dec
test
push
mov
mov
cmpsl
sarb
cmp
sub
or
movsl
cmp
lock
jo
daa
sub
cltd
xor
jns
cmpb
add
sbb
xchg
popf
push
loop
dec
out
and
fistpl
push
inc
push
mov
test
stos
clc
adc
ret
adc
mov
dec
stos
push
dec
jg
dec
pop
fdivr
test
movsb
fs
adc
push
shrb
and
les
inc
lret
jmp
rcrb
mov
sub
sahf
test
cmpsb
and
out
sub
nop
leave
mov
gs
inc
mov
testl
fistpl
xchg
and
lret
movsl
sbb
insb
icebp
ret
push
fsubrs
jnp
xor
jp
cmc
pop
mov
cwtl
mov
lods
mov
cli
xor
mov
pop
cli
mov
cmpb
ret
dec
jns
xor
inc
popf
dec
cli
cmp
adc
inc
inc
gs
sbb
mov
jns
add
shr
lea
fiaddl
popa
sbb
push
inc
sub
jo
movsl
adc
pop
sbb
push
into
push
lahf
cmp
xor
gs
repz
faddl
int
push
push
imul
imul
mov
cli
je
clc
mov
pop
adc
adcb
jp
sti
aam
mov
mov
push
mov
mov
mov
sub
lods
movsb
and
ret
packsswb
mov
das
fcmovbe
enter
sbb
or
rcl
sub
dec
cmpsl
dec
cmpxchg
xor
mov
les
sub
mov
icebp
cld
gs
out
ja
stos
adc
cld
sub
repz
ret
and
push
mov
ret
hlt
adc
xor
mov
mov
sub
aaa
cmp
cwtl
out
and
daa
outsb
enter
sub
and
cmp
dec
sub
arpl
cmp
pusha
xor
inc
bound
pop
nop
fcomps
pop
ds
pop
stos
fidivrs
rorl
test
sub
push
push
aad
lods
das
jecxz
and
mov
jae
adc
fnstenv
aam
adc
and
mov
jb
psubsb
clc
jne
hlt
int
xchg
inc
and
int3
int3
sbb
loope
cmp
aad
and
enter
loopne
xchg
pusha
fnstenv
iret
pop
rcrl
repnz
sub
inc
mov
xor
and
jne
xor
iret
int3
dec
push
subb
jne
sbb
mov
push
xor
and
addl
test
daa
js
dec
cli
xchg
mov
lar
dec
push
mov
aad
sbb
cltd
dec
in
ljmp
add
pushf
fidivrs
sbb
sbb
leave
sti
add
xor
dec
or
sti
dec
pop
lret
arpl
dec
pop
jno
fdivrs
lahf
inc
fists
push
cmp
cwtl
iret
jno
sub
jmp
mov
xchg
sub
ror
add
xchg
hlt
stc
lret
or
test
inc
enter
inc
test
sbb
roll
popa
nop
jne
mov
test
sub
int3
mov
ret
rcrb
shlb
fstps
mov
cli
sti
push
push
xchg
inc
out
mov
in
loope
xchg
out
pop
push
daa
sub
xchg
lret
or
loopne
xchg
dec
ficoml
xchg
int3
fmul
mov
sub
xchg
test
jmp
jl
jb
andl
and
fldcw
dec
pop
mov
in
adc
clc
test
adc
test
xchg
lock
mov
xchg
gs
inc
ffree
dec
or
sub
pop
ss
dec
adc
xchg
jo
xchg
xchg
push
lahf
add
jp
cmp
in
lods
cli
dec
cld
sbb
fmuls
xchg
popf
mov
mov
shlb
call
into
jmp
int3
leave
push
outsb
sub
push
xchg
sbb
call
jns
aas
lea
outsl
add
jg
dec
mov
call
scas
or
clts
imul
shll
repnz
dec
add
jg
dec
and
push
daa
mov
enter
adc
popf
in
mov
adcl
or
xchg
dec
mov
and
dec
mov
mov
cmpsb
jl
sub
shlb
mov
dec
pushf
leave
loopne
enter
xchg
shrl
mov
pusha
das
xchg
dec
rcrb
xor
fs
nop
popa
and
loopne
sub
call
in
jmp
bound
clc
inc
fmull
or
fistpll
cmpsl
push
jmp
call
jnp
mov
and
pop
sub
push
lret
outsl
mov
xchg
mov
hlt
and
leave
out
add
loopne
add
sub
loop
lahf
xchg
push
mov
push
adc
dec
ret
inc
test
inc
shll
addr16
jl
pop
repnz
xchg
mov
test
mov
jp
xchg
aam
ret
test
scas
lcall
dec
mov
sub
leave
mov
mov
xchg
sub
addr16
adc
lret
mov
sub
mov
push
mov
pop
mov
jp
shrl
jecxz
and
pop
push
fstpt
outsb
cmp
cmpsl
leave
push
push
xor
mov
push
nop
mov
lahf
jmp
lret
js
sub
daa
xor
adc
inc
sub
nop
xchg
push
mov
hlt
imul
cltd
dec
stos
dec
xchg
fidivrl
inc
xchg
mov
inc
enter
lock
fimull
aad
dec
movsb
in
popa
dec
adc
cmp
les
and
in
iret
and
add
jnp,pn
enter
les
xchg
into
mov
xor
mov
pop
pop
mov
adc
mov
negb
test
mov
push
cmpsb
leave
or
jg
jo
fildl
addl
lock
push
mov
stos
mov
inc
rorb
xchg
dec
sahf
mov
sbb
add
fsubp
fnstsw
add
ja
dec
pop
out
push
aas
mov
fisttpll
loopne
xor
ret
ret
sahf
addb
push
and
cmp
fldenv
lods
pop
xchg
fimuls
imul
xchg
movl
rorb
lahf
lret
xor
xchg
mov
sub
inc
mov
mov
pusha
jae
push
jo
cmc
sbb
mov
aas
mov
adc
dec
jl
sub
sub
sub
test
nop
inc
add
test
sub
jl
inc
subl
and
insb
lock
push
xchg
sbb
jg
xchg
and
cmp
xchg
test
cli
test
shrb
aas
sbb
inc
cmp
jl
xchg
xchg
adc
or
and
leave
aad
aam
cmp
mov
and
daa
jae
in
mov
xchg
cmp
dec
ror
add
cltd
cmp
das
pop
xchg
inc
xor
icebp
cld
xor
leave
rorl
add
cltd
dec
mov
and
rclb
rcll
jmp
dec
fadd
sub
pop
mov
sub
or
cmp
andb
adc
sti
les
dec
dec
sbb
and
jbe
ret
jo
daa
aaa
xchg
int3
cs
mov
xlat
cmp
or
insb
aas
mov
jle
inc
mov
mov
in
ds
sub
into
adc
ja
xchg
loope,pn
dec
in
sarb
shlb
mov
pop
iret
adc
fstl
aas
adc
stos
cmpsl
enter
mov
mov
mov
sbb
ret
sbbl
sub
rcll
pop
or
sbb
or
mov
inc
aad
fldt
addr16
push
popa
ds
rclb
pop
mov
fisttpl
fstpl
pop
jle
adc
pop
pusha
std
fnstenv
jo
sbb
mov
aaa
jae
call
out
sub
jp
mov
cltd
push
pusha
leave
sbb
lods
movsb
adc
call
jp
orb
mov
adc
jns
dec
icebp
sbb
test
mov
loopne
ja
out
xorb
jnp
sub
xchg
mov
push
pushf
or
loopne
dec
push
popa
or
adc
mov
out
jno
inc
jmp
sub
jns
aaa
jno
out
jge
pop
jmp
ds
fwait
js
mov
xchg
pop
lret
sbb
scas
cmpsb
cmp
push
out
push
pop
pop
jl
orb
movsl
push
pop
mov
in
push
ja
dec
repz
xchg
sub
jns
fisubrs
fs
xorb
jge
das
mov
mov
push
sbb
cmpsb
sahf
xor
pop
fdivrp
dec
push
arpl
push
movnti
in
outsl
cmp
insb
sbb
adc
inc
leave
ljmp
mov
sbb
addr16
xor
les
aam
sub
outsl
cltd
inc
dec
in
iret
insl
outsl
or
xchg
nop
fstps
jb
loope
dec
stc
clc
iret
inc
lock
outsl
nop
cmp
mov
stc
inc
test
cmpsb
cmpsl
aam
sub
lret
dec
lds
sub
ljmp
call
addb
mov
mov
jl
jb
lret
ja
fiadds
and
je
sti
xchg
mov
jbe
repnz
outsl
ffreep
mov
mov
andb
fidivs
jb
shlb
dec
inc
scas
lock
les
pop
inc
loope
fwait
or
je
xchg
shll
test
loop
das
pushf
outsl
lret
mov
leave
in
sti
or
pop
mov
inc
xor
inc
aas
mov
leave
dec
pop
mov
in
call
sbb
mull
sti
xor
data16
cmp
shl
sbb
sarl
inc
bound
fsubs
push
push
fmull
cwtl
push
daa
jae
repnz
cmp
sbb
out
xor
das
dec
gs
add
es
pop
xchg
add
jg
imul
sub
repnz
sarb
imul
loope
xchg
int3
lock
cmpsl
scas
pop
data16
leave
popf
pop
cwtl
adc
lcall
xor
add
rcrl
rorb
mov
mov
pop
sarl
fwait
jecxz
cwtl
mov
aaa
fmull
enter
sub
and
dec
mov
call
push
rcrl
and
int3
dec
aaa
add
aas
mov
int
or
dec
cltd
repnz
cmpsb
filds
stos
aaa
mov
mov
add
lret
mov
nop
adcb
fwait
in
sbbl
clc
xor
mov
cmp
mov
lret
adc
push
mov
and
frstor
mov
int
xor
jb
stc
inc
jge
aaa
inc
and
dec
mov
or
xchg
hlt
sbb
cld
sbb
add
imul
adc
mov
or
mov
testl
sbb
xchg
pop
mov
sbb
xchg
cli
mov
pop
mov
or
mov
movsb
in
cli
pusha
movsl
test
into
mov
cmp
and
insb
pop
ljmp
imul
sub
lea
dec
rcrl
addl
adc
in
cmp
aam
cmc
xor
fs
or
mov
adc
ret
je
scas
subl
pop
push
mov
pop
dec
rcr
jns
lock
lcall
jge
or
in
push
in
jnp
adc
movsb
xor
adc
sub
cmp
push
dec
and
call
push
int3
rorb
pop
sbb
aas
dec
jno
cmp
inc
pop
cmp
xor
sbb
sub
pop
and
pusha
ja
or
scas
push
or
push
mov
add
add
mov
inc
push
cmpb
cwtl
std
push
imul
sbb
push
repz
mov
shll
rorb
dec
dec
pushf
jbe
mov
lea
inc
and
and
inc
sbb
rclb
test
sub
fnsave
call
int3
inc
push
dec
loopne
lea
push
inc
jmp
ja
addr16
lea
push
pushf
fldt
aas
in
mov
mov
fxch
push
cmp
or
inc
pop
cwtl
les
stos
je
and
push
fstl
inc
inc
das
bound
sar
aam
popf
dec
dec
push
push
mov
add
int
inc
mov
mov
pop
add
add
scas
in
stc
fiadds
xchg
nop
fstpt
push
push
pop
data16
mov
add
movsb
dec
fists
jno
pop
lds
rcrl
les
mov
jmp
lods
mov
or
cmpl
movsb
inc
bound
pop
cmp
lds
pop
dec
jmp
pop
mov
add
pop
jo
adc
add
sbb
movsl
cmc
addr16
mov
stos
xchg
xor
xchg
sbb
push
bound
lcall
popf
scas
mov
sbb
test
pusha
shrb
fiadds
pop
subb
pop
out
movsb
cmp
test
movsb
cmp
leave
xor
test
mov
cmp
inc
push
ja
int3
pop
insl
lcall
mov
pusha
or
or
add
sarb
inc
rol
mov
pop
mov
ret
sub
outsl
xchg
cld
lods
je
int
jl
repnz
dec
mov
push
andb
jge
repnz
rol
pushl
or
xchg
subl
jp
cld
adc
pop
out
cmp
cs
call
inc
mov
jns
out
cs
jle
test
fnstcw
pop
clc
in
dec
rolb
xchg
mov
test
xchg
xor
addl
fwait
and
mov
sbb
sbb
jle
xchg
push
jmp
add
aas
scas
push
add
insl
inc
dec
xor
sbb
sub
cmp
int3
mov
sub
sahf
dec
pop
mov
es
xor
xchg
cmp
aas
ret
daa
xchg
loopne
cmpsl
loope
xchg
into
jle
in
pop
mov
and
mov
popf
mov
jb
or
out
aas
test
jnp
pushf
sahf
push
mov
inc
dec
subb
cmpsb
in
mov
lahf
sub
shrb
mov
test
hlt
ss
cmpsb
lahf
les
sbb
mov
dec
shll
fcoms
js
inc
out
sbb
fcmovne
cmp
push
cltd
test
sbbl
dec
xor
fwait
popa
imul
adc
jmp
adc
fwait
and
ja
inc
enter
mov
insb
ror
in
xorb
imul
xor
jecxz
pop
cltd
mov
xor
xor
jge
dec
cmp
push
dec
aas
mov
mov
jo
popl
pop
push
jno
call
es
aad
or
pop
fs
push
xchg
jl
cmp
outsl
jl
mov
imull
cmp
sti
sbb
jge
call
push
jg
or
es
cld
xlat
jg
fsubrp
mov
sub
and
lds
jl
mov
repz
fsubrs
inc
dec
mov
push
xchg
jb
push
push
lock
mov
std
movsl
inc
jnp
mov
hlt
mov
imulb
fimuls
aaa
call
pop
aaa
scas
inc
imul
cmp
mov
repnz
cmp
pslld
cmp
aas
add
and
mov
icebp
es
aam
daa
dec
call
popf
sub
popf
sub
popf
sub
cmp
sub
jg
popf
das
jnp
cmp
fmuls
dec
movsb
add
movsb
xor
push
movsb
pop
mov
insb
mov
mov
mov
movsb
fs
adc
push
rolb
popl
mov
lcall
lret
icebp
fidivrl
or
int3
cmpsb
aas
mov
pop
in
cld
movsl
jecxz
aad
push
dec
cmp
mov
mov
aas
adc
and
inc
xor
je
inc
leave
adc
inc
in
daa
lea
aas
test
mov
idiv
or
pop
mov
bound
les
rorb
push
test
jp
lea
sbb
lds
mov
nop
or
jl
lea
test
sub
in
popf
jns
mov
push
jnp
stc
sbb
scas
in
dec
lods
aaa
or
fs
mov
test
mov
dec
scas
xchg
cmc
je
rcl
sbb
pop
test
ja
pop
rcrb
es
xchg
or
xchg
testl
ja
pusha
xchg
int
cld
jo
xchg
cmp
ds
fstl
pop
adc
cmp
or
lods
pop
adc
je
pop
mov
cwtl
dec
sub
ljmp
sarl
xchg
ror
or
shrl
adc
movsb
fidivs
adc
sub
push
roll
call
data16
mov
pop
repnz
ljmp
lds
ret
enter
std
xor
clc
stos
leave
ds
lods
outsl
fcoml
shll
xor
test
hlt
cmpl
mov
xchg
shrl
cmpsl
and
add
shrl
or
jmp
inc
and
and
imul
sbb
sub
jp
or
in
pop
lret
add
orl
inc
xchg
dec
or
mov
sub
pop
push
std
add
or
fs
aam
xchg
add
mov
sub
mov
inc
int3
sub
ret
jno
lock
xlat
xchg
je
adc
test
cmp
leave
sub
mov
sbb
fistl
jno
pop
les
fwait
dec
xchg
loopne
outsl
enter
mov
inc
scas
dec
and
int
inc
dec
out
pop
fs
adc
pop
cmp
mov
pop
pop
aam
jle
hlt
fisubl
notl
mov
inc
shrb
stos
inc
mov
and
mov
dec
jecxz,pt
js
or
clc
push
or
sub
les
rolb
pop
push
or
enter
jg
adc
rolb
lods
pop
and
ror
dec
fcomi
jl
jp
cmp
dec
pop
pop
aam
xorl
adc
xor
xchg
sub
mov
mov
inc
popf
mov
andl
xchg
inc
lret
jg
inc
lea
or
hlt
lret
adc
ret
frstpm(287
jnp
lods
mov
inc
mov
fisttpl
fistl
mov
inc
fsubrs
and
add
scas
mov
inc
fimuls
jg
inc
push
nop
xchg
int3
cmp
lock
rcr
test
add
jnp
xchg
mov
cmp
dec
push
or
sub
movsb
dec
fistl
insl
cmp
les
imull
adc
mov
sub
fstps
add
leave
jl
sub
fadds
dec
add
lods
jg
dec
ficompl
std
std
das
or
jbe
mov
add
in
ficoml
notl
enter
cld
inc
jnp
lods
bound
les
pop
lret
or
pop
push
push
enter
mov
inc
cmpsb
dec
and
sarl
dec
cli
pop
jo
sub
les
outsb
enter
jnp
popa
mov
pop
enter
loope
in
xchg
xor
sbb
rcll
xor
loop
pop
std
add
adc
fndisi(8087
inc
enter
lock
cltd
lret
or
out
movsb
test
adc
mov
or
stos
lahf
mov
inc
dec
inc
fucomp
jg
dec
adc
sbb
push
dec
lret
and
cmc
test
jnp
int
pushf
mov
and
sub
int
hlt
out
mull
mov
mov
xchg
push
aas
jmp
sbb
jo
dec
jns
add
adcb
mov
fsubr
aas
insw
mulb
sbb
popa
aad
loopne
cmp
cmp
jge
cmp
gs
ficoms
insl
inc
mov
xor
lret
pop
imulb
in
sbb
jmp
fbstp
sbb
imul
movsb
and
adc
out
mov
adc
pop
out
inc
or
insb
in
pop
aas
out
jge
icebp
movsl
hlt
rorl
leave
je
or
and
cmp
ret
pop
scas
call
mov
out
dec
jmp
sbb
or
adc
mov
nop
popl
mov
das
mov
xor
push
ds
sbb
into
enter
push
in
fmull
add
dec
test
cs
lds
hlt
insl
inc
cmp
xchg
mov
lds
cmp
je
or
push
xlat
mov
mov
in
movsb
dec
ret
fucomi
or
xchg
xchg
movsb
pushf
add
jb
movsb
in
ljmp
jae
mov
jnp
mov
sbb
xor
sub
loope
cmp
in
dec
mov
xorl
pushf
xor
ds
xor
adc
movb
movsl
mov
mov
xchg
mov
and
inc
push
rorb
and
repz
cwtl
mov
cmp
insl
jbe
call
xor
cmpsl
inc
jns
cmpb
jp
mov
push
lock
jb
scas
insl
test
add
add
pusha
mov
or
and
movsb
cmp
adc
ffreep
jo
rcrb
xor
dec
mov
popa
arpl
in
cmp
add
in
stc
pop
push
adc
out
leave
fxch
mov
push
ja
leave
mov
ja
or
mov
inc
mov
sub
sarl
inc
out
add
cld
sub
xchg
and
mov
mov
lcall
jb
std
sbb
faddl
jg
scas
push
add
mov
cwtl
fucomp
stc
adc
inc
loop
sub
cltd
push
sbb
mov
add
aas
fcomps
xchg
stos
mov
leave
dec
repz
xchg
jno
stos
repz
and
push
cwtl
pop
pop
xchg
sbb
aad
pushf
or
cmpsl
sbb
fdivrs
dec
pop
lcall
mov
and
mov
cwtl
xorl
sbb
lahf
inc
or
jno
test
jmp
xor
pop
and
jp
loop
xchg
jmp
fdivs
out
and
fs
ret
iret
mov
jb
test
mov
stos
pop
push
sbb
stos
iret
or
lret
icebp
ret
frstor
loopne
dec
mov
dec
frstor
dec
loop
and
mov
inc
xor
and
mov
shlb
adc
inc
sub
mov
test
cld
jp
cltd
lcall
jno
bound
or
xchg
dec
mov
jno
insl
daa
call
cltd
fstpt
dec
ret
mov
inc
pushf
inc
pop
cmpsb
mov
push
add
pushf
movsb
pop
and
add
roll
stos
lret
xor
sub
cwtl
jns
repz
aas
xor
mov
std
pop
or
or
bound
pop
out
stos
pop
sub
subb
das
iret
sbb
inc
cwtl
inc
pop
pop
push
xchg
mov
iret
adc
or
sbb
push
daa
mov
mov
lret
sub
inc
pop
test
mov
cmp
dec
fsubs
cltd
fwait
and
pop
xor
gs
mov
xchg
xorl
mov
add
imul
fnstsw
mov
add
mov
int3
add
pop
jmp
sbb
push
pop
out
push
dec
or
scas
inc
push
push
dec
push
icebp
fdivs
outsl
jno
insb
repz
pop
fcmovnu
push
push
inc
push
jb
dec
push
sub
mov
cmpb
add
into
loopne
inc
incl
dec
imul
xchg
fsub
jo
aad
inc
add
pop
mov
ret
lahf
js
dec
pop
movsb
in
lret
clc
add
pusha
sbb
mov
inc
fs
lret
pop
hlt
sub
push
adc
scas
mov
insl
dec
push
les
shl
repz
push
pop
mov
mov
pop
mov
dec
xchg
inc
imulb
sub
in
and
cmpsl
cli
inc
out
mov
jp
movsb
mov
add
stos
lret
aam
scas
fwait
mov
xor
les
mov
or
nop
pop
or
and
cwtl
xchg
int3
rcrb
xchg
sbb
cmp
inc
mov
nop
sbb
mov
inc
dec
cli
std
jb
jmp
push
mov
dec
ror
dec
push
add
jecxz
pop
push
add
xor
fiaddl
push
xchg
int3
mov
xor
push
les
or
adc
loop
and
or
xchg
dec
pop
dec
lock
sbb
movsb
jno
mov
xchg
cmp
mov
std
es
cmp
es
jb
inc
add
jmp
js
aas
sub
ret
push
mov
enter
adc
faddl
and
lds
shrl
jb
data16
jb
lret
aas
test
sub
daa
cmpsb
xchg
bound
or
nop
cltd
daa
dec
add
cwtl
mov
gs
js
add
sti
lea
mov
xchg
dec
push
jo
adcb
xchg
addl
ds
clc
dec
push
int3
mov
lret
jmp
popf
push
loop
imul
loopne
pop
or
ja
or
fs
loopne
rclb
jmp
push
fstpl
dec
jae
pusha
in
xchg
jae
divb
add
ret
mov
popa
jno
and
add
sbb
push
add
pop
add
adcb
mov
dec
xchg
std
fldl
pop
lds
fildll
jne
mov
pop
pusha
push
mov
flds
mov
enter
add
mov
lods
roll
lock
and
aad
push
mov
clc
push
jnp,pn
sbb
lock
popf
mov
or
cmpsw
sbb
adc
imul
popa
xchg
jo
mov
fadd
inc
mov
push
jp
cwtl
dec
sti
in
jecxz
mov
cmp
cmp
int3
jl
shl
lret
jecxz
inc
fisubrs
xchg
add
jecxz
sub
push
sub
repnz
imul
and
lods
stos
leave
add
add
inc
sub
push
leave
fdiv
insb
lock
sub
dec
mov
test
dec
and
mov
jmp
call
lret
cmp
cli
outsb
cmp
ror
les
inc
sbb
cmpb
mov
sbb
lcall
jecxz
in
fwait
xchg
int
es
jmp
call
push
loopne
cmp
xchg
and
sahf
loopne
dec
xor
fldenv
pop
dec
cltd
inc
fdivp
xchg
mov
test
loop
jecxz
push
adc
out
mov
pop
jo
outsb
outsl
add
mov
pushf
loope
xor
leave
dec
mov
push
stc
ret
jg
test
jmp
repnz
mov
dec
test
ret
icebp
pop
sbb
inc
sub
mov
std
stos
cmp
ljmp
jno
fwait
sbb
cli
mov
mov
add
push
jns
arpl
mov
push
cltd
rorb
jno
dec
cld
xchg
or
mov
jge
inc
in
push
adcb
cmp
mov
stc
lea
nop
jmp
mov
rorb
mov
sbb
stc
push
movsb
icebp
jns
int3
stc
addl
sub
mov
mov
insl
lods
inc
and
out
insb
or
icebp
subb
out
sti
outsl
mov
dec
pushl
adc
lcall
xor
popf
icebp
inc
mov
out
mov
mov
jae
popa
mov
lock
negb
xor
pop
decb
movsl
mov
inc
add
cmpsb
dec
dec
inc
mov
cwtl
call
push
sahf
cwtl
nop
out
dec
ret
inc
add
mov
and
nop
pushf
enter
xor
movsb
les
shrb
mov
stos
decl
sbbl
mov
mov
popa
mov
adc
rorl
rorb
adcl
adc
push
stos
lock
popa
push
hlt
sbb
pushl
dec
push
imul
inc
rcrl
icebp
cmp
mov
and
pop
cmp
and
sti
fldl
jmp
dec
cwtl
orb
ret
stc
loopne
sbb
leave
out
add
rcll
dec
and
push
xchg
xchg
insb
jg
fwait
jae
js
dec
jmp
insl
mov
test
sbb
dec
icebp
mov
ja
push
out
and
add
sbb
shrb
and
xorl
pop
xor
jecxz
add
cmp
dec
pop
out
adc
xor
shl
popa
lcall
add
push
jmp
scas
punpcklwd
adc
clc
pop
ret
dec
shl
adc
popa
cmp
xchg
arpl
jno
loopne
loope
dec
adc
mov
in
dec
inc
and
in
and
lock
std
pop
mov
adc
mov
rorl
and
mov
test
and
test
loope
jnp
add
movsl
in
adcl
cmp
leave
pushf
pop
sbb
addl
sbb
shl
or
lock
popl
fbld
dec
push
push
jo
in
mov
or
and
sub
mov
mov
fidivs
pushf
icebp
vpaddb
lcall
mov
pop
cltd
mov
cmpsl
sbb
iret
adc
mov
fisubrs
mov
pop
adc
lret
cmp
int
mov
mov
cmpsl
xor
icebp
or
mov
push
mov
test
fsubrp
rcll
and
cwtl
fiadds
inc
pop
cli
inc
js
jge
test
jo
shrb
sarl
or
into
inc
subb
mov
pop
repnz
imul
dec
mov
dec
jg
adc
nop
or
inc
mov
add
rcrb
xor
jp
pop
push
mov
inc
mov
mov
pop
mov
lret
lods
loopne
inc
nop
jl
ret
pop
add
imul
xor
sbb
sbbb
inc
dec
sbb
ja
fcomps
and
sahf
mov
stos
sbb
adc
or
push
ljmp
adc
mov
aad
ret
adc
add
ficomps
ret
cmpsb
shlb
mov
pushf
dec
cli
xor
adc
nop
dec
and
push
movsl
leave
cmp
popa
inc
sbbl
mov
std
mov
xor
jnp
sub
dec
pop
out
mov
bound
xor
mov
dec
stc
mov
and
xchg
lahf
insb
in
fldl
dec
in
bound
xor
xchg
pop
mov
cltd
dec
rcrb
dec
push
adc
out
enter
mov
pop
daa
xchg
fcoml
rcl
lret
lret
fnstcw
ds
clc
jbe
jmp
mov
bnd
mov
or
or
inc
movsl
inc
mov
icebp
mov
dec
inc
inc
and
int
test
push
mov
in
xchg
inc
dec
inc
js
and
adc
mov
arpl
ret
loope
fdivrp
xchg
sub
shrb
cmp
adc
sub
sub
nop
testl
decb
cmp
xor
lock
jg
sbb
xchg
in
aaa
