out
pop
in
roll
add
add
add
dec
arpl
add
arpl
loop
add
add
cmpsb
in
arpl
cmpsb
add
arpl
add
in
aaa
scas
add
lods
add
out
xlat
in
roll
add
or
add
in
lods
add
fldcw
add
add
cmp
orl
add
sbb
or
sbb
fs
or
adc
adc
fs
fs
add
add
lods
add
add
add
push
add
add
ss
pop
pop
jne
xlat
in
roll
add
aaa
pop
pop
sbb
and
and
sahf
inc
adc
fisttpl
add
sahf
push
adc
dec
xor
add
sub
mov
sub
fstpt
sub
sbb
push
pop
pop
mov
scas
mov
pop
jno
fistl
sub
jb
pop
pop
sub
sub
jb
sub
sbb
add
adc
add
add
sbb
add
and
jo
adc
and
push
and
jo
cmpsb
out
pop
aaa
add
add
sub
sti
sub
sbb
add
mov
sahf
add
jno
and
jne
mov
and
and
and
and
pop
sahf
pop
in
arpl
lods
add
jns
add
add
add
add
pop
arpl
xchg
sbb
sbb
aaa
scas
in
sti
lods
add
add
jb
aaa
add
jb
aaa
aaa
scas
dec
sti
lods
add
add
sti
lods
add
add
lods
add
jb
loopne
cmp
dec
or
or
arpl
jns
add
scas
sti
sti
lods
add
loopne
add
add
in
lods
add
in
lods
add
mov
add
mov
sbb
stos
mov
or
or
push
xor
push
jmp
sti
lods
add
in
lods
add
in
lods
add
insl
add
add
xlat
adc
add
mov
sbb
imul
lahf
or
xchg
imul
lcall
idiv
lods
add
lcall
adc
mov
lret
sbb
in
aam
sbb
push
aaa
scas
mov
lods
add
aaa
sbb
scas
cmpsb
sti
lods
add
sahf
mov
dec
adc
add
mov
sahf
mov
aaa
scas
mov
xor
sti
lods
add
xor
lods
add
add
add
add
add
mov
pop
pop
mov
sti
lods
add
.byte
.byte
sti
lods
rclb
xchg
xor
ficoms
mov
mov
in
ficoms
mov
mov
pop
sub
push
jg
mov
sub
mov
cli
sahf
call
mov
mov
pop
xorb
mov
sub
dec
xlat
push
neg
push
mov
mov
mov
rclb
cmp
sub
xchg
aad
add
mov
sub
mov
dec
xor
cli
jle
jo
xchg
stos
xor
cli
jle
xor
push
sub
stos
mov
mov
xchg
popf
and
add
cmp
mov
xchg
mov
hlt
cmp
outsb
fcomip
mov
mov
mov
xchg
push
and
add
cmp
mov
xchg
xchg
out
gs
cld
shrl
add
or
fcomip
shll
and
pop
lea
fs
inc
push
cli
ljmp
mov
mov
scas
adc
std
lock
xor
xor
xor
and
mov
clc
jmp
adc
insb
mov
sub
sub
mov
test
test
push
mov
xor
sahf
jo
ficoms
xchg
mov
jo
ficoms
xchg
mov
test
test
mov
fisttps
outsb
fbstp
mov
sub
stos
mov
test
mov
mov
sub
stos
mov
test
or
mov
sub
stos
mov
test
xchg
mov
sub
stos
mov
test
and
sbb
mov
mov
add
xor
mov
test
cld
xchg
movsb
hlt
xor
mov
mov
cwtl
test
je
or
mov
test
mov
test
sub
leave
ret
xchg
fbstp
mov
sub
stos
mov
test
int
pusha
fbstp
mov
sub
jle
shll
sub
jnp
test
hlt
xor
mov
mov
and
mov
mov
mov
push
mov
mov
cmpsb
mov
mov
insb
jo
xchg
jnp
inc
and
inc
jo
xchg
mov
inc
cmp
cli
arpl
mov
clc
jmp
sub
cli
mov
or
cli
mov
or
mov
sub
scas
cmpsb
xor
add
mov
mov
cmp
mov
aas
subl
cmp
xlat
mov
out
sub
fbld
xchg
jmp
mov
cmp
jp
mov
xchg
push
or
and
sub
mov
testl
gs
mull
cli
mov
and
adc
insb
jnp
mov
rcr
jl
arpl
ficoms
adc
xor
push
ficoms
adc
xlat
cli
cld
push
jo
push
mov
xor
xor
inc
xor
xor
xor
mov
push
outsl
mov
inc
ficoms
adc
cli
test
movsb
adc
mov
push
mov
cmp
sub
mov
ficoms
adc
xlat
mov
push
and
xlat
cmp
sub
mov
xchg
push
jmp
test
mov
push
sbb
cmp
sub
je
mov
ficoms
adc
xlat
mov
push
mov
add
cmp
sub
je
mov
ficoms
adc
xlat
cli
lcall
mov
push
lds
xchg
mov
inc
call
xchg
mov
cli
lcall
ficoms
xchg
mov
cli
lcall
adc
cli
mov
mov
ficoms
xchg
mov
cli
mov
and
insl
xchg
xchg
mov
cli
mov
mov
ficoms
xchg
mov
cli
mov
and
mov
add
add
xor
xchg
stc
push
inc
call
xchg
mov
call
pop
xchg
mov
and
xor
mov
cli
adc
lcall
mov
mov
imul
and
addr16
mov
push
mov
cmp
sub
je
mov
ficoms
xchg
mov
jo
push
mov
test
out
push
mov
xor
cmp
mov
ficoms
xchg
mov
cli
sub
mov
fidivrs
or
call
cs
mov
mov
jo
ficoms
mov
mov
mov
cli
adc
lcall
mov
mov
insl
fs
mov
ss
imul
ss
adc
lcall
mov
mov
mov
cmpl
xchg
mov
mov
push
cmp
sub
mov
ficoms
mov
mov
mov
xor
ljmp
pop
mov
ljmp
mov
mov
add
cli
das
stc
lcall
mov
call
and
push
cli
mov
cli
adc
lcall
mov
mov
cli
test
jmp
stos
cli
mov
mov
xchg
in
cli
mov
mov
xchg
cli
mov
cli
lcall
mov
mov
mov
push
inc
or
mov
imul
adc
or
mov
mov
cli
mov
lcall
mov
xchg
xchg
sub
aad
hlt
cli
test
arpl
fidivl
mov
and
mov
cli
add
xor
add
and
mov
xor
mov
hlt
lea
cli
adc
and
mov
xlat
cli
jle
mov
xor
hlt
addr16
mov
xor
cli
mov
mov
mov
add
mov
shr
adc
insb
mov
mov
mov
xchg
mov
mov
mov
mov
dec
mov
mov
mov
adc
mov
add
into
mov
xorb
mov
mov
and
xchg
mov
mov
mov
add
sub
inc
iret
mov
mov
hlt
mov
cli
call
pop
sbb
mov
xchg
xor
jl
imul
test
add
pop
cwtl
mov
cli
or
xlat
jle
sub
jno
mov
scas
mov
mov
cli
pop
insb
cli
loopne
adc
jl
add
gs
jl
and
jo
aad
push
mov
cmp
fistpll
cli
mov
mov
mov
mov
fidivrs
ljmp
adc
mov
or
mov
mov
add
mov
arpl
dec
jo
aad
shl
mov
cmp
dec
mov
je
mov
into
mov
xlat
mov
cli
test
in
fidivs
cli
mov
mov
insl
sti
icebp
lcall
cli
dec
jo
push
pushf
clc
shr
cld
sub
neg
icebp
mov
push
xor
cmp
mov
gs
mov
mov
cli
push
xor
mov
mov
xor
mov
sub
insb
xlat
sar
dec
fcomip
cli
imul
add
mov
mov
xchg
mov
mov
push
sahf
mov
inc
adc
mov
imul
mov
fidivs
mov
mov
imul
sahf
cli
mov
jo
ficoms
mov
mov
arpl
xor
out
ficoms
mov
mov
in
xlat
mov
jo
mov
mov
mov
mov
xlat
xor
dec
jo
xchg
cmp
outsl
xlat
cli
push
out
xor
mov
jo
xchg
adc
cli
push
xor
sahf
xor
mov
imul
dec
cli
mov
cli
mov
notl
mov
xchg
ret
mov
cli
lcall
cmp
push
out
mov
xor
dec
add
adc
test
mov
mov
hlt
mov
ficoms
mov
mov
mov
clc
jmp
adc
push
dec
mov
call
jmp
xchg
xor
mov
sar
mov
nop
xor
xor
jmp
hlt
cli
test
xchg
icebp
jmp
xor
dec
pop
pop
cli
adc
cli
lcall
mov
hlt
dec
mov
dec
call
mov
hlt
cmp
adc
call
mov
mov
sarb
mov
hlt
xchg
clc
jmp
cld
sub
insb
sub
dec
rcr
bound
lcall
mov
cmpsb
push
and
mov
fidivs
xchg
mov
rorl
mov
gs
xor
mov
mov
mov
out
stc
sub
mov
ficomps
add
xor
mov
xlat
adc
insb
or
testl
mov
and
mov
add
mov
xlat
jo
xor
add
cmp
divl
mov
ficoms
mov
mov
push
and
fildll
cli
sahf
cli
mov
mov
and
mov
mov
jno
xor
mov
and
mov
pop
jb
push
xlat
mov
jb
mov
cli
mov
imul
xor
cli
push
xor
hlt
cli
cmpsb
push
push
xlat
xor
or
cmp
mov
mov
addr16
stos
cmp
mov
hlt
sub
or
xchg
jecxz
hlt
sub
mov
xchg
add
cli
lcall
xor
sub
mov
rol
or
fcomip
sub
je
mov
gs
xor
xor
jbe
jmp
adc
mov
shll
imull
mov
lock
or
mov
rcr
cli
mov
add
pop
xchg
mov
cli
pop
subb
inc
jo
xchg
push
xchg
es
pop
xchg
cli
jmp
mov
sahf
imul
imul
dec
cli
fisubrs
or
mov
xchg
or
cli
mov
in
in
call
mov
clc
jmp
adc
sahf
mov
push
push
insb
cli
jle
push
add
cli
add
sub
lods
dec
cli
pop
xor
adc
pop
xlat
push
stos
cli
lods
popl
mov
pusha
in
sbb
pusha
mov
push
imul
in
xchg
shrl
xor
xor
and
mov
mov
mov
test
or
mov
mov
sahf
mov
mov
inc
xorb
or
sub
mov
test
pop
mov
and
or
sub
sahf
cli
adc
or
mov
imul
xlat
cli
orb
cli
jbe
pop
dec
xor
xor
jmp
shrl
sub
mov
sub
sub
cli
pop
dec
and
lods
negl
adc
addl
or
mov
pop
mov
push
shr
sub
insb
push
rorb
pop
icebp
cld
xlat
xchg
pop
fcomip
mov
push
test
pop
cli
push
xor
push
mov
cmp
sub
mov
cld
xor
jl
lret
pop
push
mov
cmp
mov
mov
sbb
dec
cli
lcall
insb
cmp
mov
xor
mov
xchg
mov
xchg
dec
mov
gs
clc
fistl
not
adc
mov
fldl
sbb
or
jp
scas
mov
icebp
xor
movb
inc
xchg
add
xor
sub
lahf
imul
push
mov
push
sbb
sbb
fsubl
movsb
shrl
cmpsb
int
jle
mov
add
xchg
out
iret
cmp
cmp
or
rorl
inc
xchg
inc
scas
sbb
mov
je
xor
jp
mov
loop
adc
lock
cmpsl
dec
jge
ds
push
adc
mov
sub
jne
clc
push
rorb
sbb
insb
int3
pop
cmp
les
lret
pop
sub
xor
leave
push
jle
add
push
xchg
call
loope
bnd
loopne
jnp
rorl
push
test
test
mov
mov
cltd
mov
movsb
aam
adc
mov
and
xchg
inc
pop
pop
mov
rorb
outsb
and
les
scas
les
adc
imul
test
mov
nop
inc
insl
dec
jmp
adc
in
loopne
sub
dec
into
mov
fcompl
pop
loope
mov
imul
pusha
inc
dec
push
push
js
lds
int
pushf
aad
out
add
fwait
cmp
pop
or
in
cmp
in
inc
mov
icebp
lods
imul
fs
fsubs
push
ljmp
dec
cmp
daa
movsb
add
test
push
sbb
cmp
mov
sbb
sti
sti
mov
mov
repnz
repz
push
fwait
repz
and
mov
arpl
xorl
add
dec
push
xchg
nop
mov
xchg
hlt
sub
cmp
fistpll
fidivrl
sub
pop
jae
arpl
test
cld
xor
xor
imul
fadds
popl
call
add
inc
mov
cmp
mov
mov
sbb
stos
mov
xor
pminsw
test
repz
pop
pop
into
pop
into
shrl
cmp
xchg
or
mov
pop
lret
mov
jno
cmpsb
fidivrs
and
mov
push
inc
push
fsubl
jae
and
loope
jae
sbb
inc
lcall
mov
inc
mov
dec
and
loope
push
nop
cltd
sti
jno
xchg
xchg
ret
jecxz
mov
movsb
in
push
jno
sbb
int
mov
dec
and
push
xor
mov
mov
insl
iret
rol
daa
xchg
int3
imul
sti
sahf
cmpsb
mov
adc
sub
lock
fdivs
adc
xchg
pop
rcrb
fstpl
dec
sahf
rcll
mov
mov
loopne
int3
stos
scas
jmp
adc
sub
imul
jmp
lcall
shll
cmpsl
sti
shrl
mov
xchg
pop
pop
lea
lods
imul
repnz
in
ficoml
dec
inc
or
or
adc
rcll
dec
inc
inc
jno
leave
mov
push
inc
addr16
aad
mull
shl
data16
je
lahf
pop
dec
adc
repnz
fbld
add
xchg
inc
or
clc
lahf
movmskps
push
pusha
mov
arpl
xchg
repnz
add
out
and
ret
and
push
add
lods
in
xchg
sbb
mov
jle
inc
mov
js
leave
test
mov
push
fs
rolb
lahf
jno
icebp
sub
shl
push
add
aad
pop
outsl
shr
lds
xor
mov
push
xor
jmp
jo
lock
insb
leave
dec
cmp
push
into
push
mov
cmp
xchg
or
adc
mov
adcl
idiv
dec
dec
andb
inc
stos
loopne,pn
inc
and
out
add
daa
scas
dec
popf
outsb
les
mov
xor
fstl
lcall
aaa
arpl
cmc
lods
lret
sbb
inc
std
lret
jmp
fucom
repz
sub
daa
ret
shll
outsl
add
jecxz
sub
ljmp
dec
mov
jmp
add
mov
pop
pusha
inc
push
push
rcrl
fisttps
in
push
and
cmp
push
call
gs
lret
adc
xchg
pop
pusha
fisttpl
int
mov
or
pop
sub
scas
cwtl
mov
sub
mov
outsb
add
gs
adc
pop
and
lods
dec
sub
test
in
mov
xor
out
cwtl
notl
lds
das
jae
and
pop
shl
out
outsl
dec
mov
hlt
jecxz
aam
pushf
filds
xchg
sbb
ret
xor
je
movsl
scas
push
mov
push
mov
fists
mov
and
push
call
or
dec
jl
in
test
dec
fildll
jmp
and
xor
pop
dec
xchg
cld
mov
mov
mov
insl
mov
sti
mov
pop
lods
aam
mov
aam
ret
cmpsl
fistpl
mov
mov
cmp
pushf
and
inc
push
sbb
in
mov
inc
or
and
std
cmp
mov
ss
scas
jne
fcomps
dec
sbb
jl
mov
mov
ror
sbb
ss
lret
ret
or
push
pushf
jle
fwait
cmp
mov
dec
sti
mov
arpl
ja
inc
orb
xchg
popa
shlb
fnstenv
cld
jbe
or
add
mov
jo
mov
xorb
cmp
sbb
xchg
jg
mov
test
mov
sti
loope
jg
in
ja
out
dec
fimuls
sbb
or
clc
adc
mov
roll
out
mov
gs
iret
pavgw
mov
aaa
popf
repz
inc
xchg
aas
jb
je
scas
divl
pop
arpl
pop
inc
lret
lret
jnp
gs
aas
popa
aaa
lret
outsl
outsl
pop
add
inc
sbb
dec
jl
pop
mov
es
lods
xor
and
sub
clc
movsl
mov
stos
jno
mov
mov
mov
mov
inc
sub
dec
out
insl
xlat
sbb
mov
lcall
cld
lea
fcmovnb
jno
mov
jle
inc
enter
fildll
push
mov
jmp
push
mov
cwtl
jne
sarl
bound
stos
xor
iret
stc
addr16
mov
mov
scas
leave
ja
out
and
mov
mov
ja
mov
aas
arpl
pop
push
test
xor
sbb
xor
add
scas
pop
pop
mov
loop
sub
add
cmp
bound
stc
test
testb
pop
jb
and
mov
daa
sub
movsl
in
dec
insl
push
mov
inc
jb
lods
scas
mov
data16
jmp
ja
mov
or
shlb
jecxz
outsl
cmp
or
jne
cmpsb
or
or
or
inc
dec
std
or
adc
dec
xor
mov
roll
movsb
pop
fidivl
and
pushf
loop
lahf
scas
jmp
in
movsb
rcl
and
call
repz
mov
mov
dec
pop
insl
mov
sbb
push
testb
cmp
pop
dec
movsb
leave
xor
lock
rorl
mov
fcoms
sti
xchg
mov
nop
stc
xchg
push
and
fs
pop
outsl
xchg
add
clc
int
outsl
out
xor
or
orl
xor
add
xchg
decb
movsl
stos
inc
loope
inc
dec
jge
xlat
fsubrs
push
repnz
sbb
cmp
daa
fimull
cmp
and
xor
out
repnz
mov
call
lea
jnp
xchg
adc
mov
stc
sbb
repnz
into
roll
insl
pop
fs
adc
fwait
mov
jno
jmp
cltd
jecxz
sbb
push
in
jns
inc
xchg
mov
sbb
mov
or
push
sbb
xchg
mov
lret
loop
loope
idivb
xor
pop
test
inc
daa
sbb
jno
adc
adc
sahf
dec
mov
shr
in
cwtl
fwait
adc
mov
mov
adc
xchg
mov
lea
std
mov
ja
push
shl
ds
jns
sar
scas
ljmp
lret
pop
push
outsb
push
sbb
into
data16
ljmp
inc
fincstp
sub
cmp
xor
fcoml
or
in
stos
mov
inc
ss
pop
lahf
pushf
adc
decb
push
lret
sbb
inc
cli
icebp
add
scas
fbld
test
ljmp
pusha
fdivrl
cmp
sbb
data16
or
xor
pop
fmuls
insl
xchg
jns
pop
out
xchg
dec
je
pop
popf
cld
rolb
decl
pop
pop
pop
mov
pop
test
cmp
inc
push
xor
pop
add
mov
in
mov
pop
movsl
cmp
imul
cmp
out
fldt
cmp
push
push
stc
js
ss
jecxz
xor
adc
icebp
mov
enter
lods
lock
cltd
xchg
divb
jmp
cmpsl
or
pushf
mov
mov
inc
addl
cmpsb
and
xchg
in
inc
push
imul
lret
push
out
mov
call
jg
pop
aaa
lret
adc
mov
adc
dec
fisubl
insl
icebp
and
xor
jp
orl
divl
xor
addr16
xor
adc
fcomp
and
cltd
xchg
scas
mov
dec
jl
sbb
cwtl
jb
push
das
sbb
pop
push
sub
fidivl
cmpsl
xor
pop
aam
ret
mov
jg
fsubrl
xor
lahf
es
in
lahf
aas
jns
push
mov
and
imul
jmp
lds
sbb
mov
push
add
fwait
or
push
int3
xor
insb
sahf
inc
lods
pop
jae
xor
fisubrl
jmp
mov
out
jmp
mov
jl
adc
mov
pop
ret
shl
je
lds
sbb
jo
inc
pushl
jp
sbb
xchg
cmpsb
add
cmpl
mov
fcompl
or
int
push
sub
rcl
sbb
lods
add
mov
rcl
fwait
mov
xchg
hlt
repnz
repnz
xor
xchg
out
aas
xor
adc
add
loop
stc
push
and
ds
sbb
push
cmp
cmc
rcll
xchg
or
in
mov
lcall
mov
roll
mov
cmp
mov
mov
adc
int
pop
divb
std
popf
notb
or
push
pop
dec
ficompl
dec
or
gs
cmp
xor
cmpsl
add
mov
call
inc
xchg
mov
add
lcall
cmp
stos
dec
inc
jp
out
test
xchg
jo
add
data16
mov
inc
scas
cltd
rcrl
mov
or
xlat
fisubs
or
cmp
lret
filds
lds
push
dec
fisubrs
test
push
pop
je
lea
lods
fidivl
into
and
push
sub
sub
dec
fs
mov
push
push
push
mov
mov
in
aaa
loopne
addl
nop
xchg
aad
mov
out
push
and
jb
scas
outsl
push
sbb
xchg
inc
mov
dec
jg
shr
jl
mov
mov
jne
sar
rcrl
mov
adc
pusha
jp
mov
int3
or
dec
and
aas
mov
xor
popf
lock
jl
icebp
addl
and
or
out
frstor
jbe
jle
fildl
out
jae
sbb
scas
stos
mov
pusha
data16
adc
pop
push
push
aas
mov
not
xor
mov
sbb
push
adc
int3
mov
divb
popa
inc
jns
orb
insb
lcall
xor
clc
lcall
outsl
push
dec
insb
fwait
loope
cmove
loop
adc
ss
lahf
stc
cmp
fisubrs
lods
ljmp
sbb
jbe
outsl
ret
xchg
cmp
and
hlt
decb
xor
enter
mov
inc
mov
outsb
dec
ljmp
dec
or
mov
xchg
shrb
xchg
mov
mov
je
push
pop
imul
cld
add
rcrb
mov
inc
clc
dec
fiadds
sub
cmp
cwtl
push
fsubl
mov
repnz
and
mov
xchg
andl
stos
aas
adc
and
imul
mov
and
xchg
int3
data16
push
adc
inc
icebp
xchg
jbe
aas
adc
lock
movsb
dec
inc
sahf
xor
cmpsb
movl
sub
movsb
out
pop
add
ds
imul
mov
push
in
adc
popf
xchg
inc
mov
mov
and
push
outsb
pop
fsubl
cmp
xor
call
inc
sbb
fisubrs
xlat
fst
adc
pop
imul
mov
mov
enter
jb
arpl
fldl
push
xchg
push
je
mov
cmp
cmp
and
xor
jg
add
repnz
leave
pop
jo
mov
push
mov
in
loopne
andl
lcall
adcl
cmpsl
lods
out
dec
out
out
and
jmp
scas
inc
mov
in
ss
or
mov
push
lea
jge
sbb
jmp
jp
es
stos
sbb
andb
dec
popa
push
out
out
mov
sbb
das
adc
mov
and
mov
sub
repnz
mov
mov
iret
and
pop
fnstcw
adc
adc
lods
test
jmp
cmp
xchg
outsb
inc
mov
dec
ret
in
xchg
push
ficomps
sub
xchg
mov
aam
jecxz
push
cmp
pop
int
fldt
jmp
sti
int3
popa
mov
imul
mov
cwtl
sbb
ljmp
out
pop
cmp
pop
xor
dec
push
es
pop
pop
push
inc
push
jae
pop
and
mov
fsubr
push
into
mov
mov
cmpsl
pop
adc
push
cmp
jne
pop
sub
pop
push
dec
lods
rcll
fmull
shl
and
dec
inc
negb
xor
fidivs
lret
je
adc
enter
inc
or
negl
mov
ret
scas
sbb
pop
mov
in
cmp
fmul
mull
pop
mov
add
jecxz
xchg
cmpsb
pop
nop
sub
cmpsl
movb
pop
xor
jge
repz
mov
cmp
repz
fidivs
dec
xchg
data16
lret
dec
stos
lds
xor
mov
fwait
test
push
mov
insb
sbb
jmp
jb
je
adc
mov
adc
and
sbb
xchg
add
rcrb
js
filds
ds
pop
fistpll
add
or
jnp
test
lock
ret
jl
out
je
or
rorb
jge
popf
cmpsb
into
jp
std
push
pop
fs
push
aam
pop
xchg
stc
pop
xor
imul
sahf
sahf
inc
jae
push
sbb
pop
loopne
or
arpl
sub
xor
jnp
and
pop
pop
lds
push
add
xchg
sti
out
or
add
xchg
addr16
push
jg
pop
or
mov
dec
popa
in
subl
data16
dec
adc
lock
fwait
pop
xchg
ja
inc
sub
jp
in
lods
rcrl
repnz
mov
popa
movsl
sbb
add
in
sub
hlt
xor
fs
mov
out
stos
sub
sub
mov
out
outsb
adc
jle
in
popf
xchg
divl
pop
rcrl
pop
push
and
and
push
out
incl
xor
lret
dec
cwtl
jns
or
scas
popa
loope
mov
out
jle
insb
cmp
and
push
out
xor
jnp
cmpsl
xchg
jge
into
arpl
xchg
dec
xchg
or
rcrl
cli
mov
cltd
lret
or
or
in
in
pop
add
add
mov
ret
and
jo
fadds
jbe
dec
inc
mov
add
sbb
xlat
push
call
xor
aas
stos
int
inc
stos
jne
movsl
jmp
mov
idivl
xor
push
inc
xor
dec
dec
in
aas
or
mov
pop
pusha
gs
imul
mov
dec
stos
popf
subl
rcll
scas
lock
jge
pop
mov
cmp
das
dec
inc
xchg
sbb
in
mov
adc
dec
stos
xor
gs
sbb
mov
stc
jbe
mov
test
inc
es
push
sarb
aam
leave
mov
cmp
in
mov
scas
mov
aaa
sahf
cmc
js
aad
lahf
cwtl
xchg
push
and
xor
scas
sbb
xor
or
out
enter
lahf
jne
sub
mov
jle
pop
sbb
lods
fldcw
mov
mov
in
pop
out
movsl
sbbb
xor
test
pop
aam
repz
popf
test
int
imul
mov
mov
dec
movb
mov
lods
xor
subl
aaa
or
pop
xor
inc
sub
xor
ret
addr16
pop
xor
sub
pop
imul
nop
inc
pop
lahf
add
jmp
jp
cmp
push
or
mov
push
lock
cmp
dec
push
cmp
push
adc
sub
pop
out
push
xlat
dec
and
inc
xchg
inc
das
aad
lock
adc
aas
lret
movsb
mov
jns
nop
xchg
mov
adc
test
fcompl
lods
fwait
sub
int3
jl
cld
test
add
xor
xor
icebp
mov
movsl
mov
mov
pusha
std
lret
pop
push
stos
pop
in
out
mov
ret
out
mov
pop
mov
add
jb
std
mov
cmp
push
cmp
fwait
notb
mov
mov
add
xorl
mov
adc
adc
addr16
movsb
ret
xor
in
inc
inc
popf
and
mov
add
movl
inc
jns
into
mov
adc
mov
out
incb
bound
cld
shl
insb
iret
outsl
lret
sbb
push
pop
cmpb
out
bound
inc
mov
ret
xchg
imul
mov
push
icebp
pop
mov
out
and
pop
out
dec
jne
repz
jp
icebp
pop
in
cmp
mov
push
out
je
fildl
pusha
push
mov
in
pop
lds
out
rorb
sub
lock
jne
pop
jae
adc
and
mov
push
adc
popf
push
ja
shll
icebp
and
js
aas
xor
jnp
movsl
pop
sbb
sbb
and
cld
gs
adc
add
sub
loop
loope
and
push
mov
push
sbb
rcr
cmp
add
insl
je
mov
sbb
sub
dec
dec
fsubr
jne
and
imul
in
lds
popa
dec
and
mov
lock
bnd
or
fsubrs
mov
js
sub
adc
je
fs
inc
popa
bound
add
or
pop
fs
or
dec
loop
push
inc
aad
ds
push
add
mov
sbb
xor
xlat
test
gs
xor
push
mov
fistps
pop
xchg
stos
addr16
xor
mov
clc
fmul
xor
sub
jae
out
push
push
dec
xorl
loope
in
ficompl
dec
jne
fsubr
into
sbb
pop
aad
or
fimull
jecxz
jle
inc
ficoms
fidivrl
sbb
stc
out
lea
loop
push
xorb
inc
cld
add
aas
xchg
in
xchg
push
or
cmp
sarl
cmp
out
mov
loopne
iret
cltd
pop
sub
and
daa
lods
je
pop
cmp
sbb
je
bound
jb
pop
rorl
lcall
lock
lahf
or
nop
mov
pop
jbe
dec
test
sarb
mov
or
call
rcrl
dec
test
sbb
adc
jmp
push
data16
and
sub
mov
in
xor
dec
imul
xor
call
add
mov
lea
pop
cld
cmp
imul
and
insl
cmp
add
addb
push
imul
sbb
mov
adcb
icebp
xchg
sub
jecxz
out
lcall
pop
mov
mov
jns
sbb
test
jno
push
jae
jg,pn
push
dec
inc
dec
rorb
shll
jns
xor
out
mov
lahf
mov
mov
mov
pushf
mov
jmp
mov
out
and
ds
sahf
jne
shr
jp
mov
rcll
loop
jbe
jno
cmc
outsb
fidivl
pop
addr16
fdivs
adcb
sbb
mov
arpl
std
test
sbb
pusha
adc
dec
inc
into
test
jge
dec
push
es
ljmp
pop
sub
pop
fsubrp
cli
and
icebp
loop
dec
push
jmp
adcb
pop
sbb
mov
or
fnstenv
scas
lret
clc
dec
mov
add
mul
sbb
push
cmp
fimull
repz
jecxz
loope
dec
mov
push
aaa
mov
test
jno
pop
sahf
addl
xchg
pop
addl
in
mov
frstor
mov
xor
cmp
mov
mov
mov
xor
push
psubsw
dec
pop
cmpsl
repz
data16
inc
pop
loopne
lock
std
repz
cltd
lock
add
xor
mov
popa
stc
js
pop
add
mov
int
loop
hlt
sub
pop
xchg
mov
cmc
imul
mov
xchg
mov
push
ss
mov
and
push
mov
arpl
insl
mov
push
out
jp
setae
cmp
sbb
sub
movsl
xchg
hlt
add
inc
setp
test
sub
out
or
cli
pop
mov
xchg
pusha
mov
xchg
pop
and
in
pop
pop
loopne
mov
les
jge
pop
push
push
or
cmpsb
pop
or
xchg
ljmp
shrb
ds
adc
adc
es
repz
outsl
push
sub
sub
iret
outsb
imul
xchg
je
push
xor
cmp
lea
mov
xor
sub
dec
inc
jnp
mov
shrb
dec
call
mov
pop
sub
mov
xor
pushl
jbe
jnp
movsl
xor
jne
cli
pop
out
aad
pushf
pop
adc
in
ds
jecxz
and
pop
pop
insb
mov
sub
out
xor
sbb
push
loope
adcb
xchg
inc
jnp
jb
fcmovu
and
jns
imul
mov
fidivrs
adc
mov
fs
xlat
pop
js
scas
loop
jg
add
jle
popf
inc
xor
sub
incl
mov
clc
cmp
inc
push
xlat
xor
cmp
fildll
pop
add
ret
sbb
mov
subb
push
jmp
adcl
jecxz
int3
mov
clc
je
add
xchg
xchg
mov
mov
lahf
pop
sub
sarb
call
and
subl
lods
ljmp
fldenv
lea
pop
mov
in
mov
sbb
cwtl
mov
popf
ret
repnz
hlt
loop
mov
jns
sub
adc
add
sbb
and
enter
pop
xchg
scas
lret
fildll
lahf
mov
scas
adc
mov
mov
int3
mov
cmp
cmc
and
mov
or
mov
push
lods
pop
pop
loopne
out
xchg
mov
mov
cmp
leave
setle
lret
addb
jno
mov
dec
es
push
les
cmp
out
push
xchg
test
jns
imul
pushf
imul
subl
ret
sbb
mov
mov
sub
shrb
into
pop
fsub
push
pop
aam
xchg
ds
aam
adc
neg
adc
mov
out
cmc
jb
jge
icebp
xchg
push
movsb
xor
das
cmpsb
imul
lcall
bound
in
aam
cltd
pop
loope
lret
sbb
rcrl
inc
and
cmc
aaa
test
lods
por
cmp
imul
sub
shrb
jp
cmp
ja
xor
inc
mov
add
or
test
mov
std
push
repnz
jmp
add
inc
in
xor
xor
sub
push
sbb
sub
popl
ljmp
popa
fcompl
inc
mov
sub
mov
lret
or
mov
adc
enter
aad
int
in
lock
nop
cs
dec
sbb
xchg
adc
pop
mov
insb
loopne
sbb
and
mov
ljmp
sub
stc
rcr
adc
dec
dec
xor
mov
jb
or
movsb
or
pop
ret
jo
lcall
jecxz
and
into
jns
inc
sbb
aam
push
xchg
mov
add
loope
mov
xchg
dec
cmpsl
addr16
stc
mov
and
adc
pop
imul
mov
test
dec
add
out
leave
mov
add
sbb
pop
fistpl
lahf
ds
xor
repz
xchg
push
in
lds
jno
in
sbb
or
push
fwait
sub
cmp
ljmp
sarb
mov
xlat
outsb
lods
sub
mov
imul
mov
imul
lods
fistpl
sub
outsb
out
pop
faddp
lea
lret
jp
sbb
imul
test
push
mov
sbb
aam
dec
lods
pusha
gs
inc
shlb
fisttpll
stos
imull
pop
fldenv
pop
add
pop
in
inc
and
sub
clc
and
adc
pop
cmpsl
ficomps
repnz
into
loope
cmp
sub
cmp
mov
mov
lret
pop
out
or
mov
cltd
or
cltd
bound
pop
fwait
mov
cltd
lea
daa
ljmp
fnstcw
pop
push
insl
jns
mov
cmp
adc
inc
and
insb
movl
jl
ljmp
jnp
call
fistpll
push
cmp
lods
sub
outsb
xchg
push
pop
mov
sub
cwtl
icebp
jnp
jle
aad
mov
pushf
fisubs
jb
inc
lcall
dec
pop
and
add
and
xlat
mov
jge
mov
stos
xor
pop
mov
mov
mov
inc
push
lods
jl
and
mov
sarl
loop
mov
loop
mov
std
sbb
in
clc
xlat
in
dec
lock
scas
mov
xchg
cmp
lcall
mov
xchg
es
sbbb
adc
stos
les
jnp
stos
psrlq
imul
jle
int
repnz
mov
test
scas
mov
sub
mov
xor
scas
dec
rolb
mov
fs
mov
push
idivl
fwait
pusha
inc
mov
jge
lret
add
mov
mov
mov
mov
sub
push
fmull
jnp
mulb
jo
and
andb
or
mov
cmp
and
fs
fsub
mov
or
dec
xchg
icebp
jmp
into
cmp
push
sti
cmp
cmpsl
imul
aam
std
mov
gs
lods
outsl
xchg
stc
dec
jbe
popf
sub
insb
and
dec
mov
cltd
lea
push
sbb
call
insl
sub
test
mov
add
sar
push
sub
mov
and
or
adc
adc
jge
fidivrs
pop
jmp
inc
stos
lds
insl
ljmp
aaa
push
and
cmp
mov
mov
movsl
xor
jecxz
outsb
cli
cmp
test
mov
aas
testl
mov
adc
and
lret
add
and
dec
jo
ret
gs
das
lret
sbb
xor
fbstp
or
mov
add
into
lock
sbb
inc
or
xlat
stos
rorl
shll
das
jp
arpl
add
mov
add
xchg
jae
cmpb
ja
pop
xchg
mov
xor
aas
jp
jb
mov
xchg
inc
inc
daa
sub
fistl
push
leave
adc
ljmp
add
cld
pop
adc
les
gs
dec
loopne
mov
push
cmp
stc
xor
in
sbb
or
loop
xchg
scas
inc
mov
lret
adc
sub
mov
notb
push
repz
fdiv
sbb
xchg
mov
add
push
leave
les
pusha
xchg
sub
fadd
sbb
xchg
pop
cmpl
outsl
rcrb
or
cmp
or
icebp
out
test
sarl
push
xorb
lods
xchg
sbb
pop
gs
aaa
mov
test
adc
jle
xchg
frstor
pop
sbb
cld
pop
into
fstpl
notl
stos
push
hlt
pop
cmpsb
xlat
imul
mov
sbb
arpl
inc
mov
outsl
popf
popf
dec
dec
mov
jo
xchg
mov
mov
fsts
xor
push
mov
repz
call
fmull
sub
pop
xchg
shll
cltd
into
in
jle
xor
repnz
mov
imul
cltd
mov
in
int
lds
mov
cmp
call
hlt
mov
pop
imulb
inc
cli
mov
clc
xlat
roll
mov
movsb
pop
sbb
jp
mov
adc
add
cmc
movsl
imul
mov
mov
pop
stos
sub
sbb
sbb
stos
arpl
ja
add
int
sub
sub
add
jbe
insb
out
jl
adc
cmc
jo
mov
pop
adc
fisubrl
inc
fmuls
mov
int
cs
mov
cmpsl
js
rcl
cmpsl
mull
std
dec
dec
push
std
mov
rorl
adc
outsl
pop
aam
jno
mov
ljmp
insb
int
mov
add
mov
push
bound
jns
cmpb
into
andnps
push
jo
mov
sbb
popa
ret
or
rorl
mov
push
jge
or
jmp
adc
jl
sbb
scas
cmpsb
loopne
addb
sahf
pop
mov
int3
inc
dec
out
jbe
push
pop
out
mov
sub
fnstcw
ret
incb
fmul
lods
icebp
xchg
sub
add
stc
xchg
cmp
mov
cmpsl
sbb
notb
push
pop
mov
cmpsb
call
es
mov
or
mov
pop
jo
add
xchg
pop
inc
lock
jg
push
sub
pusha
lods
stc
jp
and
jae
cmc
adc
jae
sub
xlat
and
add
cmp
cmp
pushf
adc
sub
xabort
fstpt
std
fsubs
out
jle
scas
dec
push
in
fs
fsts
les
mov
addr16
mov
lret
push
and
fistl
enter
add
rclb
imull
sbb
mov
inc
call
xlat
inc
cli
in
pop
mov
gs
and
adc
mov
in
xor
mov
enter
int
push
xchg
pop
cltd
cmpsb
mov
add
loopne
inc
sbbl
xchg
and
xor
test
mov
push
and
or
lahf
mov
decb
xchg
and
sti
dec
jne
sbb
daa
add
cwtl
lock
dec
outsl
inc
fsts
call
xor
mov
ror
xchg
idiv
xchg
movsb
cwtl
fsubrs
push
imulb
arpl
and
dec
inc
xchg
int3
sbb
mov
std
in
call
lret
jecxz
fcmovbe
scas
es
or
cmc
add
in
sbb
pop
dec
dec
jbe
lea
inc
push
mov
push
fwait
clc
cmp
iret
sbb
mov
jne
sub
rcrb
fstps
inc
cmp
stos
xor
negl
inc
hlt
jp
and
push
mov
sti
lods
fwait
cli
mov
jp
pop
jnp
mov
je
iret
inc
and
insl
clc
push
and
pushw
add
inc
dec
lea
aas
xchg
and
or
cmp
loope
and
enter
in
and
into
cmp
mov
push
add
jno
fistl
pop
xorb
mov
outsb
outsl
jae
pop
lds
fcoml
iret
mov
pmulhuw
pop
fldl
jb
mov
mov
test
cmpsb
lods
cltd
subb
dec
inc
out
sub
add
int
inc
lods
inc
frstor
add
inc
outsb
sub
ja
jle,pn
mov
push
xchg
ljmp
inc
push
or
or
cmpsl
pop
out
jmp
fadds
inc
std
lcall
fisttpll
repz
xlat
test
mov
inc
jno
cmp
mov
js
lods
inc
cs
jle
hlt
push
in
rclb
xchg
idivl
notb
lahf
cmp
pop
mov
call
insb
pop
aas
stc
sub
cmp
lds
mov
sbb
pop
jne
jb
push
cltd
add
pop
add
outsl
dec
in
jns
pop
sahf
cmp
mov
xchg
cs
sbb
fstpl
jmp
fnstcw
jno
push
fmuls
xor
addb
pusha
push
stc
push
mov
je
les
iret
popa
mov
outsl
push
cmp
adc
lock
push
add
fadds
fdivrp
fs
jecxz
out
fldenv
fwait
and
cmp
fstpl
xchg
jp
enter
movsl
shll
mov
ja
aaa
sbbb
add
out
cmpsb
into
or
mov
shlb
je
scas
rorb
xchg
mov
and
clc
mov
movsl
inc
ljmp
ja
dec
adc
es
int
dec
sub
jmp
inc
mov
es
jbe
fincstp
mov
lea
mov
xchg
dec
mov
loope
fidivs
adc
ret
mov
xlat
nop
pusha
or
adc
movl
mov
enter
fwait
loopne
fisttpl
mov
cmpsl
push
sar
push
cmp
mov
adc
ja
stc
mov
pop
and
mov
shl
cmpsl
xor
pop
lods
mov
stos
inc
push
pop
xchg
xor
outsl
in
lcall
and
das
test
cmp
icebp
enter
dec
mov
addr16
mov
inc
fimuls
loopne
and
cmp
cs
ret
push
imul
mov
add
rorb
jo
or
xor
out
mov
or
cmp
test
movsl
push
ret
xor
jmp
dec
std
mov
xchg
mov
mov
bound
outsl
mov
xor
pop
popa
in
push
loop
loop
aad
cltd
xchg
mov
xor
push
jp
lock
popf
mov
mov
aaa
jae
push
popf
lahf
and
jle
cmp
push
call
out
pop
lea
and
jle
sbb
push
inc
mov
sub
cwtl
xor
mov
push
out
add
fwait
popf
pop
lea
shlb
pusha
hlt
test
std
push
inc
andb
pop
movsl
test
adc
jp
ss
pop
xchg
jae
dec
xorb
fadds
out
xor
aad
mov
cmp
mov
pop
lcall
pop
and
mov
dec
fistl
pop
dec
fdivl
mov
fisubs
aam
inc
out
int
adcl
inc
je
mov
or
aaa
sbb
icebp
rcrl
push
jo
mov
add
adc
push
xchg
pop
cli
add
aas
outsb
lds
cmp
out
jno
insl
and
sub
fnstsw
cmp
cs
idivl
clc
inc
mov
mov
es
aam
flds
sbb
loope
push
cmp
lea
push
sets
int3
movsl
movsb
pop
mov
pop
mov
out
sbb
jle
loop
ja
add
popa
mov
add
mov
add
bound
inc
nop
jae
aam
push
or
ret
cmp
pmuludq
mov
sarl
mov
fcmovu
mov
add
movl
or
xor
inc
pop
or
mov
ljmp
sub
lcall
push
xor
imul
out
sbb
test
push
or
aad
lds
in
mov
iret
sub
dec
inc
mov
push
mov
sbb
inc
mov
mov
das
mov
mov
cmp
xchg
push
push
mov
cmpsl
and
inc
xlat
idivb
fadds
aad
mov
pop
lcall
push
push
push
jno
adc
and
dec
jecxz
stc
iret
lods
test
xchg
xchg
es
iret
in
mov
push
mov
ret
sbb
xorl
push
cld
push
jo
adc
pop
push
cmp
cmpb
jmp
leave
push
inc
clc
mov
push
es
loopne
dec
xor
add
cmpsl
xor
mov
xchg
dec
in
push
dec
je
add
scas
outsb
and
adc
into
add
push
push
push
cwtl
pop
fistpl
or
call
push
test
out
cmp
pop
pop
cmc
ret
ss
xor
lods
test
test
cmp
mov
addr16
lcall
or
rorl
sub
out
inc
or
ret
pop
mov
das
cs
lods
ds
addb
int
mov
cmp
lcall
arpl
std
dec
inc
out
and
out
jecxz
push
and
inc
ja
in
rcrl
dec
sub
jge
pop
mov
adc
dec
cwtl
mov
in
dec
hlt
ja
cmpsb
popa
add
int
adc
jge
popa
mov
or
pop
js
mov
movsb
into
mov
mov
push
mov
cwtl
sarb
sbb
mov
or
cltd
decb
and
je
inc
insb
shll
lods
shlb
sub
lahf
test
stos
adc
mov
cld
lds
gs
fidivs
aad
test
mov
pop
push
repnz
sub
idivl
adc
ds
push
enter
adc
xchg
and
js
lcall
orb
insl
dec
fisttpll
or
mov
stc
mov
inc
jecxz
aas
fistpl
or
repnz
jo
push
sbb
sub
dec
dec
jecxz
mov
push
subb
sbb
cld
push
push
loop
xor
lods
dec
dec
mov
sbb
stc
push
test
or
xor
test
outsl
lcall
bound
mov
shl
test
leave
jmp
mov
xor
scas
clc
adc
xchg
cmp
aad
aas
ltr
jge
icebp
xchg
arpl
ret
mov
push
insl
mov
push
adc
inc
mov
and
loope
std
arpl
mov
and
lds
pop
jne
movsb
scas
xor
adc
sub
out
in
movb
cli
loop
push
cmp
cltd
inc
daa
pop
rorb
sub
cmp
adcb
add
ljmp
jb
and
mov
test
push
mov
mov
dec
xor
xor
xchg
subb
loope
pop
and
xchg
xor
mov
mov
insl
cmp
mov
ret
sub
inc
sbb
add
lahf
mov
int
xor
lods
sarl
dec
popa
popa
mov
mov
push
inc
cltd
xor
iret
dec
fs
sub
and
icebp
pop
sbb
nop
test
loope
out
add
add
xor
shl
add
les
mov
adc
mov
jmp
ficompl
aaa
int
iret
aaa
or
dec
pop
rcrl
mulb
nop
jmp
mov
insb
ret
xor
mov
scas
lahf
test
add
mov
jnp
pop
cli
fcmovnb
dec
pop
test
mov
ret
xchg
hlt
lret
dec
jle
adcl
aaa
pop
lods
movsl
push
sub
aaa
dec
loop
push
push
fs
cmp
sub
push
out
fcoml
es
jb
or
ja
cmpsb
mov
sbb
std
scas
mov
aam
mov
jl
inc
sbb
mov
dec
dec
lods
cli
adc
xchg
cwtl
mov
xor
loopne
lock
add
in
hlt
fnstcw
cmp
and
push
push
sbb
fisubs
gs
adc
push
and
enter
mov
pop
inc
aam
jl
mov
dec
fcomps
out
loope
outsb
movsl
adc
mov
adc
xchg
imul
scas
add
mov
add
in
ficomps
push
cmc
int
cmp
sti
scas
out
and
add
aaa
mov
sub
fsubs
nop
or
xor
ljmp
clc
into
push
mov
inc
and
sub
xchg
add
fidivl
stc
icebp
sub
mov
loopne
xlat
jbe
loope
pushf
iret
ret
daa
test
cmp
dec
insb
mov
mov
pop
gs
push
fstps
jle
shld
jb
push
into
mov
and
cmp
lea
dec
push
cltd
push
sbb
outsb
fwait
lret
bound
add
add
xchg
pop
pop
cmp
pop
popa
rcrb
gs
xchg
lock
xchg
adc
push
pop
in
hlt
and
das
xor
pop
ja
iret
lds
addr16
outsl
mov
jo
or
test
xcrypt-cfb
cmpsl
xchg
xchg
in
mov
loope
pop
jmp
cs
or
add
roll
fisttpll
cmp
adc
sub
dec
dec
xor
mov
fnstcw
inc
fcmovnbe
inc
adc
leave
iret
mov
pop
insb
cld
lahf
inc
fisttpll
out
sbb
sub
insl
inc
lahf
xchg
dec
outsl
cmc
push
add
mov
enter
push
jecxz
mov
pop
aaa
cmp
jg
and
shlb
sub
dec
in
mov
scas
cmp
mov
lods
sbb
stos
stc
sbbb
dec
adc
or
das
cmp
ja
ficompl
leave
jns
aad
dec
adc
sbb
test
adc
push
pop
dec
data16
aad
xchg
rcl
lcall
mov
mov
sub
cmp
ja
jne
mov
push
jecxz
outsl
cwtl
nop
rol
rol
loope
pop
dec
sub
add
xor
pop
das
push
sbb
lahf
inc
mov
fsubl
xor
inc
push
sarl
xchg
arpl
xchg
pop
repz
lea
mov
lret
lea
out
sbb
rcr
pop
push
lods
mov
mov
mov
dec
adcb
lret
scas
pop
das
or
inc
sbb
std
int
cmpsb
rorb
insl
xchg
add
dec
stos
push
mov
js
stc
insl
push
bswap
xchg
add
push
push
outsl
push
sub
push
xchg
jg
dec
out
outsl
mov
flds
lds
ja
mov
nop
dec
incl
je
lods
stos
in
and
hlt
push
cmp
int3
pop
insl
faddp
sub
pop
xchg
jl
dec
push
xchg
xor
ds
rclb
roll
cmp
xor
cltd
sarl
mov
mov
lods
out
test
lcall
mov
add
xor
in
aas
xchg
cmp
cmpsb
adc
hlt
lds
pop
pop
xchg
cmpsb
movsl
fists
ror
mov
je
push
mov
xor
rcrl
cmp
fsts
inc
subb
std
cld
add
lea
mov
mov
jns
jmp
lret
xchg
xlat
xchg
add
sbb
sub
movsl
pop
cmp
cwtl
jo
mov
sub
ja
fldt
mov
mov
ret
in
pop
pop
fiaddl
pop
cmc
bnd
aam
mov
adc
or
push
add
xor
sub
and
sub
bound
xor
push
int3
imull
mov
sbb
mov
cmc
or
push
xchg
popa
fisubrs
daa
int3
inc
push
push
dec
mov
and
jae
sub
cmp
stos
inc
out
nop
cmp
xlat
push
mov
outsb
clc
andb
push
out
xor
sbb
movsl
pop
xor
test
push
out
inc
xor
mov
xchg
mov
inc
out
cmpsb
outsb
scas
jno
inc
in
pop
mov
jg
ja
inc
push
je
jg,pt
fidivl
sbb
jnp
bound
add
and
gs
jg
cmp
push
nop
mov
cmpsl
fisttpl
sub
adc
popa
punpcklbw
lea
xchg
push
data16
push
in
mov
push
mov
test
popa
inc
fsubrp
ret
push
scas
stos
and
inc
fstpt
jae
inc
mov
sahf
and
sub
add
test
jne
and
xor
mov
divl
idiv
xchg
mov
insb
and
push
je
cli
insl
sar
clc
dec
aad
pop
pop
push
popf
ja
mov
in
dec
sub
lret
and
data16
jg
imull
stos
addr16
sub
rclb
aas
into
ret
adc
cli
dec
mov
mov
test
pop
push
lret
xchg
shll
ljmp
cs
iret
cs
arpl
xchg
jno
or
cld
lcall
cld
pop
sub
stos
jle
mov
sub
or
rcl
push
rorl
add
dec
mov
jns
or
mov
push
ja
push
repz
dec
pop
dec
leave
push
ds
mov
jo
mov
jae
cli
movsl
movsl
aam
mov
inc
adc
cmp
mov
and
and
mov
outsl
repnz
jbe
sub
scas
push
push
xchg
pop
add
mov
in
add
pop
leave
repz
arpl
xchg
fstpt
pop
push
andb
sbb
repnz
loope
insb
ret
call
lock
xor
pop
mov
mov
xchg
shll
or
cltd
or
pop
sub
out
das
push
adc
sub
addr16
icebp
cwtl
cmp
xor
xchg
lret
jmp
out
mov
xchg
int
xor
and
pushl
mov
test
adc
shlb
imul
sahf
sbb
ficomps
shrl
sti
ds
and
fidivrs
add
in
enter
dec
sub
rorl
adc
lcall
dec
aad
lds
adc
sub
dec
lahf
gs
push
cmc
test
fldcw
lds
sahf
lahf
movsb
outsb
in
lret
mov
and
and
adc
mov
or
mov
inc
fistl
add
es
and
add
mov
jbe
or
sti
adc
or
outsb
insb
mov
xchg
sti
jns
cmp
jg
lahf
mov
mov
fnsave
jp
lret
test
pop
fisttpl
fsubrs
mov
add
cld
mov
negl
xor
loope
dec
clc
sub
fisttpl
jl
mov
std
cmp
fsubr
cs
ret
push
cwtl
fsts
mov
dec
mov
or
sub
ds
call
in
and
inc
sahf
xchg
push
movsl
jae
add
adc
stos
imul
test
adc
sbb
and
push
dec
dec
add
clc
and
stc
lcall
shr
dec
setg
jae
mov
mov
xor
stos
fnsave
and
mov
and
test
jae
addr16
fwait
dec
push
sbb
or
dec
dec
dec
mov
out
mov
inc
lret
push
lret
repnz
inc
into
add
fs
loope
rorl
pop
xor
pop
mov
sub
andl
mov
sbb
or
cmp
pop
dec
cmc
add
hlt
and
fwait
clc
nop
imul
jne
scas
xchg
aam
loop
fistpl
inc
adc
adc
lcall
hlt
daa
in
das
subb
push
inc
inc
hlt
inc
and
insb
add
ja
pop
sub
jbe
aad
cmp
pop
insb
xchg
jmp
shl
or
jl
enter
dec
ret
daa
pushf
cmp
sar
push
push
sub
push
dec
dec
dec
mov
leave
or
rcrb
loopne
arpl
mov
cmp
outsl
test
mov
pop
inc
add
jbe
notb
xorb
push
inc
clc
repz
and
movsl
xchg
xchg
jne
sti
std
add
shrb
movsb
int
in
js
push
cli
movsl
cs
jecxz
inc
addl
cs
jg
out
pop
adc
popl
cmc
je
inc
push
dec
dec
outsl
xor
sbb
cmp
sub
mov
fptan
cmp
sti
popa
sub
scas
andb
js
add
fstl
cmp
xor
insl
dec
lret
jge
jle
clc
imul
cmp
out
mov
adc
xor
mov
insb
and
ljmp
int
test
dec
sub
mov
inc
cltd
shlb
mov
sbb
loop
pop
pop
mov
xor
cmpsl
mov
inc
and
in
xorb
pop
out
adc
rcrb
and
repz
stc
mov
ficoms
push
sbb
bound
mov
inc
lea
cmpsl
adc
cmp
or
pop
stc
ja
xchg
subl
or
popl
popf
inc
test
adc
jnp
push
sbb
ljmp
jp
add
jno
pusha
push
outsl
addb
adcl
xor
ss
fsubrp
cld
push
vpsrlw
ret
push
and
jns
movsb
fcompl
cwtl
stos
gs
xor
shlb
imul
repz
mov
pop
data16
adc
test
adc
jns
jb
mov
mov
mov
adc
dec
in
jns
cwtl
into
add
cmpsb
dec
jno
sahf
pusha
loope
mov
xchg
arpl
fisttpl
sbb
mov
mov
push
inc
int3
ret
dec
add
mov
stos
adc
imul
pushf
cmp
aas
inc
and
sbb
mov
inc
mov
jne
imul
aaa
push
push
jle
inc
cmpsl
add
mov
cmp
jb
adc
add
popf
mov
push
fwait
lcall
dec
mov
ja
cld
pop
mov
xchg
scas
xchg
add
xchg
jnp
fidivs
inc
out
push
pop
mov
in
fnsave
mov
in
push
out
lea
push
scas
and
sahf
or
mov
or
lods
adc
push
cmp
sub
xchg
ja
xchg
xchg
shll
jns
jecxz
ret
xchg
sbb
lcall
inc
movsl
andl
fs
cmp
cmc
sbb
or
repz
add
jbe
in
iret
subb
outsb
scas
js
enter
lods
lock
stc
mov
lahf
loopne
and
pop
mov
xchg
inc
movsl
push
jp
push
addr16
imul
dec
int
fcmovnb
lds
int
fistps
insb
lea
mov
stos
popa
mov
or
inc
jns
add
mov
and
daa
add
cmp
inc
es
sbb
subb
test
xor
lods
mov
mov
arpl
push
sub
xor
fnstsw
mov
dec
push
sbb
lods
and
mov
fsts
out
xchg
pop
std
addb
test
xchg
dec
in
mov
cmp
cwtl
cmpsl
clc
sub
stc
call
push
pop
scas
test
rcr
shll
and
jae
inc
mov
pusha
repnz
and
fwait
cmc
mov
dec
pop
xor
sub
xchg
and
repnz
test
dec
push
push
jecxz
stc
or
push
jne
jbe
inc
cs
mov
cli
not
push
dec
mov
scas
addr16
test
je
pop
push
fiaddl
jns
mov
push
test
repnz
cmc
inc
mov
xor
lock
lods
in
outsl
sbb
in
xchg
das
cmp
aaa
sahf
cmp
sbb
nop
sbb
adc
push
outsb
cmp
cld
into
lcall
into
in
das
subl
idiv
imulb
imul
xchg
cld
inc
aas
dec
xchg
aad
adc
adcl
inc
mov
and
push
loopne
xchg
mov
les
adc
stc
int
pop
cmpb
scas
or
mov
shll
and
shlb
mov
aam
dec
dec
push
fldln2
xchg
sub
mov
dec
dec
mov
outsb
stc
pop
xor
sbb
mov
xor
add
enter
sub
jge
lea
in
jmp
fnstsw
insb
jmp
shl
sub
inc
aaa
hlt
and
push
cmp
in
jnp
sbb
sahf
les
sahf
pop
mov
dec
fwait
mov
ret
out
aam
call
mov
aas
ret
popa
in
add
fdivr
mov
mov
sbb
push
pop
idivl
fcomps
insb
data16
mov
das
adc
cmp
jg
mov
scas
ret
rcrl
es
xchg
jo
push
sub
inc
cmc
test
sub
shll
adcb
dec
jnp
lahf
fisubrl
div
mov
inc
adc
add
popf
or
add
and
inc
and
pop
jbe
mov
push
icebp
sub
dec
ss
mov
lahf
fcmove
inc
pusha
cld
push
cwtl
in
adc
insl
and
ret
cli
xor
fsubrs
in
adc
test
test
loopne
mov
jno
or
subb
jg
push
push
inc
and
mov
ljmp
jp
mov
pop
addb
loopne
imul
mov
mov
and
xchg
push
fmuls
dec
and
adc
pop
mov
mov
push
jecxz
push
test
push
sub
es
out
cmp
push
leave
mov
ljmp
in
mov
dec
sbb
xor
xchg
mov
add
xchg
test
cmpl
ljmp
mov
mov
mov
addr16
dec
test
dec
jno
mov
std
push
xchg
mov
dec
or
xchg
sbb
jl
ja
cmpsb
cld
movsl
jg
test
popa
jle
mov
daa
add
push
aaa
lods
cmp
cmpsl
xor
add
je
mov
inc
or
push
out
pop
jge
push
pop
test
push
xor
popf
mov
das
mov
mov
sbb
ret
inc
lahf
shrl
mov
sub
cmp
xlat
xor
push
into
sub
and
push
movsb
mov
dec
xchg
xor
test
push
add
icebp
adc
adc
pop
fmull
test
xchg
pop
xchg
push
test
xchg
sbb
sbb
add
sub
leave
inc
lds
and
aaa
mov
add
xchg
shrb
stc
fsubs
mov
mov
push
test
cli
mov
lea
jle
and
mov
cli
iret
ss
rcl
push
fadds
pop
add
ss
mov
sbb
js
mov
aas
or
mov
fsubr
push
push
fprem1
imul
push
xor
sub
and
pop
jp
and
mov
int3
es
stos
lods
test
mov
call
lcall
push
les
insb
pop
mov
cltd
jb
sbb
test
push
ds
xchg
jb
imul
dec
lret
push
cmpl
jg
cmp
ss
or
out
test
push
add
pushf
mov
cmp
pop
rolb
dec
dec
adc
dec
mov
pop
insb
lahf
insl
das
xchg
mov
rcrb
add
sub
out
pop
or
cmp
gs
test
into
mov
sbb
jnp
jle
add
jb
mov
clc
ss
mov
movsl
pop
and
bound
sub
fmuls
ret
loope
lret
push
sub
pop
pop
dec
stos
mov
jmp
mov
js
outsl
xchg
mov
xchg
imul
adc
dec
inc
cmc
push
or
mov
mov
outsl
sbb
mov
push
loope
sub
xchg
xchg
out
js
xor
pop
push
adc
mov
sahf
addl
jbe
into
mov
in
mov
out
or
inc
cmc
enter
test
push
popa
xor
gs
stos
mov
pop
lods
mov
pop
xor
mov
es
jmp
pop
add
test
sti
mov
aad
inc
mov
gs
push
cmpb
nop
shl
inc
mov
mov
jae
aaa
js
addb
xor
data16
jp
adc
fwait
enter
int
arpl
sbb
push
xor
ss
jbe
test
hlt
and
in
mov
pop
adc
inc
xchg
mov
mov
repnz
jge
loope
pop
dec
jns
jg
outsb
daa
cld
mov
inc
mov
je
or
repz
and
inc
add
outsl
pop
aad
dec
test
dec
or
cmp
and
xchg
in
push
in
ds
dec
sbb
mov
ljmp
fnstenv
sbb
add
mov
setle
sarl
rorb
mov
add
mov
decl
jecxz
lahf
leave
fadds
xor
mov
sahf
repnz
outsb
jecxz
xor
sarl
stos
js
loope
add
jae
loopne
push
or
je
sub
jno
das
xchg
jecxz
mul
xchg
hlt
xor
push
shlb
and
inc
xchg
push
sub
pop
xchg
xlat
pusha
push
fnstcw
xor
push
cmpsl
out
xor
xor
mov
inc
lock
dec
rcrb
repz
pop
sarl
inc
fstpt
jecxz
and
dec
xchg
push
shll
or
and
adc
mov
adc
jbe
dec
and
cmp
push
sub
xchg
jo
in
into
adc
test
inc
mov
mov
jbe
sbbl
stc
cwtl
movsb
faddl
mov
mov
mov
pop
pop
xor
dec
lcall
mov
out
or
cmp
shr
in
dec
adcb
imull
dec
sbb
sub
pop
int
add
gs
adc
divb
pop
loop
sbb
rorl
inc
mov
xchg
pop
push
xchg
clc
xchg
subb
inc
jl
pop
or
inc
subb
or
cmpsb
mov
fisubl
loopne
icebp
and
mov
inc
pop
mov
lock
mov
cltd
push
pop
hlt
mov
jne
loop
leave
popa
adc
pop
mov
jecxz
sub
pop
out
push
shlb
pop
sub
mov
jb
outsl
aad
sub
bound
data16
scas
iret
popf
jae
cmp
call
add
shl
jmp
lea
pop
inc
dec
push
cmp
test
shll
popf
ss
cmp
and
loope
push
cmp
aaa
add
clc
xor
push
xchg
pushf
je
les
and
aaa
addr16
js
fdivrl
in
adc
jbe
add
stos
shlb
pop
cmc
mov
cmp
cli
add
fcompl
pop
sub
movsb
int3
aas
dec
inc
insl
push
popa
pop
repz
mov
in
cld
fwait
scas
mov
in
hlt
dec
insb
lahf
cwtl
xor
fwait
test
mov
xlat
aaa
gs
rcrb
insb
push
dec
aam
sub
out
call
push
in
std
jbe
xor
xor
push
mov
pop
mov
jnp
out
mov
cmpsb
cmpsl
popf
or
jnp
test
icebp
icebp
mov
push
test
sbb
iret
mov
pop
dec
fstps
sahf
push
jge
in
sbb
aas
xor
ss
lea
shlb
gs
jmp
add
jb
push
or
insl
pop
mov
faddl
dec
ffree
xor
jns
mov
fsub
clc
movsl
inc
lock
xchg
jbe
out
sarl
lods
in
cmpsb
arpl
jl
insl
or
adc
push
add
mov
adc
inc
in
lret
cmp
mov
and
movsb
popf
pop
roll
mul
andl
lret
loop
dec
ficomps
xchg
mov
sbb
cmp
push
cmp
push
sub
ja
stos
push
aam
leave
arpl
insb
pusha
call
out
mov
mov
mov
jmp
pop
ret
arpl
xchg
mov
adc
mov
out
leave
movsb
pop
and
xlat
mov
jle
dec
push
jecxz
daa
mov
mov
adc
mov
inc
scas
pop
inc
mov
out
push
in
movb
push
xchg
addr16
subl
jp
pop
addr16
pop
sahf
add
xchg
push
out
std
mov
filds
shl
xchg
jecxz
rol
pushw
add
mov
cmp
add
cmp
insb
int3
movsl
cmp
cmc
cmp
out
gs
js
lret
enter
cld
sub
pop
mulb
test
test
jno
lea
sbb
ret
push
pop
jp
mov
orb
sub
or
xlat
xchg
lods
aas
ljmp
mov
xorl
test
stos
adc
push
or
repz
push
mov
or
mov
cmc
fidivl
xor
sub
scas
sbb
jo
jecxz
xor
pop
dec
lods
mov
movsb
sub
xor
fstpl
insb
dec
xchg
rcll
test
in
psubq
dec
sub
jo
push
cld
scas
clc
add
arpl
test
std
adc
into
xchg
ds
stc
dec
adc
mov
lea
ljmp
jbe
push
fisubl
int3
xor
std
xchg
inc
adc
loope
mov
lcall
jns
mov
iret
bound
cmpl
divb
and
cmp
scas
mov
mov
jne
jl
cltd
xchg
outsb
pushf
shrb
lods
dec
xchg
inc
jb
jmp
push
xlat
inc
jns
sbb
sub
push
mov
jns
mov
add
push
xor
inc
pushf
gs
push
mov
mov
lods
repz
jmp
mov
sbb
in
daa
data16
sti
out
jge
mov
lret
mov
push
sub
aad
sti
pop
shl
sbb
popa
in
cmpsl
pop
and
sahf
push
inc
adc
loop
cmp
mov
or
shlb
sahf
pop
ja
stos
ljmp
jge
int
xchg
lea
xchg
outsb
bound
mov
ljmp
inc
lods
or
insl
push
repnz
cmp
scas
scas
inc
and
popf
rcrb
mov
icebp
ficoml
adc
jb
pop
imul
iret
stc
sti
fistps
pop
cmpsb
aaa
sahf
test
js
sarl
or
out
aaa
ljmp
ret
sub
mov
jl
je
add
sbb
sbbl
or
pop
jo
out
xchg
push
dec
add
and
dec
xchg
int3
inc
mov
or
jno
icebp
shlb
aas
jns
inc
nop
mov
xchg
in
xor
cwtl
outsl
pusha
pop
lods
xchg
push
jecxz
leave
xor
mov
push
fnstenv
inc
and
aam
mov
mov
adc
pusha
jl
pusha
mov
mov
xor
sbb
rcrb
inc
inc
aaa
das
xchg
fwait
jg
add
add
cld
and
xor
sub
shrb
shll
sub
lret
cwtl
pop
cli
test
xchg
sub
or
jle
je
sub
fimull
and
sbb
in
imul
adcb
mov
je
aam
jecxz
ret
fwait
aaa
xchg
outsb
cmp
pop
jmp
jle
scas
in
subl
adc
sbb
ss
lock
mov
pop
cmpb
sub
cwtl
nop
es
cmpsb
test
sbb
rclb
cmp
mov
add
sbb
xor
es
jae
add
addr16
out
shrb
push
fwait
or
dec
mov
insl
cmp
and
sub
fdivrl
or
xchg
push
push
roll
lods
ja
pop
pop
inc
mov
int3
add
xchg
leave
dec
xlat
xor
jae
enter
sbb
xor
fstl
es
out
mov
gs
out
outsl
cmp
jge
enter
hlt
out
rorb
fistpll
cmpl
out
pop
outsl
mov
mov
or
xlat
ret
pop
sub
sbb
lods
jae
or
repnz
push
enter
dec
mov
inc
out
mov
mov
aad
mov
pop
jnp
rol
adc
movsl
mov
mov
or
movsl
fsubp
ja
dec
xor
scas
mov
leave
outsl
idivl
and
xor
imul
lods
mov
mov
cld
push
jg
sbb
enter
incb
scas
ds
std
jnp
into
mov
xchg
jle
int
inc
sbb
loop
jge
xchg
into
mov
shrl
add
xor
nop
lea
pop
mov
test
xchg
jp
xor
add
movsl
cmpsb
into
js
rclb
movsl
cltd
in
jmp
mov
inc
and
adc
mov
jae
es
in
ds
xor
lahf
and
and
ror
imul
leave
or
xlat
ds
mov
pop
movsb
add
lahf
dec
xchg
mov
jge
sub
mov
subb
inc
mov
dec
rorb
aaa
cmp
inc
fistpl
and
out
or
cwtl
push
in
movsl
pop
aam
lds
movsl
xchg
xchg
fwait
jge
push
jl
adc
lcall
enter
int3
imulb
popf
scas
and
test
jno
xchg
and
adc
jl
imul
adc
dec
push
jge
stos
inc
loope
lahf
jno
mov
movsl
cmpsl
orb
mov
das
jne
dec
mov
sub
mov
xor
ret
cmp
xchg
lret
lock
jecxz
subl
lret
xchg
or
inc
sbb
cmp
js
jg
mov
test
ret
lea
insb
fdiv
cli
repz
enter
lahf
jne
scas
popa
ds
in
adc
dec
mul
fdivl
xchg
cmp
pop
jle
and
in
rorl
fisubrs
dec
imul
dec
or
pop
jle
roll
and
xor
jp
xchg
stos
or
xorl
pop
imul
sbb
xchg
jp
out
pop
dec
or
addr16
je
add
push
and
lods
mov
and
cli
xchg
cmp
cltd
xchg
dec
test
add
negb
in
jmp
mov
lret
xor
mov
inc
test
loopne
mov
lds
adc
icebp
pop
daa
push
push
ds
vpsrlq
pop
add
adc
pop
loop
lret
enter
jbe
inc
test
mov
xor
fadds
rorb
bound
inc
outsb
iret
lds
lods
movlps
pop
sub
nop
inc
and
aad
rcrb
jl
movhps
repnz
xchg
add
sub
cs
call
cmp
pop
mov
adc
mov
fistpl
cmp
or
rolb
xchg
insb
fldcw
push
and
cwtl
mov
add
nop
jmp
inc
push
aad
insl
mov
mov
jle
add
rol
ljmp
xchg
push
ja
scas
nop
jle
lods
cs
aas
mov
insl
and
dec
lahf
push
andb
add
into
fld
add
testl
movsl
es
aaa
ds
and
xor
add
cmp
ds
cld
add
sahf
mov
out
lds
and
mov
sbb
data16
pop
push
push
inc
lret
mov
adc
xchg
lock
xor
pop
js
lock
xorl
adc
in
fstpt
sbb
mov
push
dec
loopne
mov
or
mov
pop
push
popa
loop
mov
das
lods
int
divl
popl
cwtl
ja
aad
xor
mov
mov
ja
pop
xchg
sti
inc
mov
xchg
jmp
out
jo
mov
adc
xlat
jb
jecxz
loopne
or
xor
dec
push
outsb
jo
dec
addr16
push
adc
lods
push
inc
lahf
sbb
xchg
jg
std
mov
pusha
inc
in
cmp
fiaddl
jae
out
loopne
inc
dec
rclb
adc
xor
mov
pop
pusha
adc
lahf
pushf
cmp
out
jp
jb
hlt
cltd
int
out
adc
or
sub
xor
nop
pop
ja
stc
lods
rcr
repnz
outsb
ficompl
outsl
cld
jnp
shrb
pop
dec
fisubs
sbb
and
aas
imul
sbb
in
jbe
ret
call
psllq
les
jae
adc
test
adc
loope
stos
sub
lcall
dec
lods
and
in
mov
fisttpl
mov
jp
xchg
popf
jmp
movsl
cmp
rclb
xor
sahf
jg,pn
loopne
idivb
shll
test
ss
add
sub
add
sbb
or
lods
xor
loopne
and
add
fwait
ss
imul
add
dec
aad
sbb
aam
lret
mov
lret
sbb
mov
flds
lahf
int3
and
in
and
sbb
cli
mov
imul
lret
rorb
mov
es
popf
or
cs
xchg
sbb
sub
jmp
add
mov
jne
bound
adc
stc
xchg
sbb
arpl
iret
mov
or
cmp
orb
and
xor
in
mov
aad
ss
adc
pop
pop
jmp
pop
lods
push
xchg
sbb
xchg
fnsave
aam
adc
not
iret
scas
mov
xor
sub
ds
push
sbb
jb
xchg
cmp
cmp
ljmp
js
push
jae
mov
mov
inc
enter
sub
mov
sub
and
ret
pop
sti
stc
out
mov
inc
rclb
dec
cli
mov
add
push
cmpsl
sbb
sub
adc
stos
leave
clc
or
popf
and
imul
movsl
pusha
stc
dec
test
ja,pn
js
xchg
xorb
cld
rcr
hlt
mov
mov
cmp
push
pop
mov
jmp
xor
loopne
fwait
in
cmp
in
xchg
gs
jb
lret
inc
es
lret
pop
jmp
push
push
pop
or
inc
jns
dec
stc
fchs
pushf
mov
cmpsl
cmp
jo
inc
add
jecxz
adc
sbb
and
mov
idivl
cltd
outsb
mov
xlat
dec
pop
pop
jae
in
out
dec
dec
gs
inc
mov
lods
xlat
lds
lock
cmpl
mov
hlt
aam
out
add
adc
ljmp
sbb
push
movsb
jno
fdivl
inc
js
enter
aaa
cmp
out
jg
xchg
add
dec
jbe
pop
pop
xchg
inc
popa
or
shll
push
repnz
cmp
inc
cmpsl
stos
add
cwtl
sub
mov
lods
aam
xchg
adc
and
fisubrs
xchg
ss
icebp
inc
adc
fdivl
cmp
out
pop
aam
jo,pn
or
push
dec
mov
lods
xor
mulb
and
pop
push
pop
icebp
mov
sbb
aas
or
lods
jl
jp
push
sbb
je
mov
and
push
inc
insl
test
outsb
clc
push
daa
ss
sbb
jnp
stc
ds
lods
mov
leave
dec
mov
lea
mov
mov
dec
out
incl
sbb
cli
push
cmp
cmp
lods
cs
scas
pushf
inc
lcall
icebp
sub
push
mov
dec
push
or
xor
mov
es
mov
mov
into
add
push
fwait
adc
ljmp
into
jle
jmp
or
push
xchg
push
mov
addr16
imul
addr16
inc
jnp
scas
movsl
add
pop
jp
into
cld
sbb
in
sahf
addr16
pop
push
scas
pop
xchg
or
push
pusha
and
and
cmp
jp
outsb
sbb
outsb
jne
cs
or
aam
jb
inc
xchg
fisttpl
pop
shrb
xlat
sti
popf
test
push
imul
push
or
pop
mov
mov
rcrl
xchg
inc
mov
jbe
sub
mov
pop
cwtl
lret
nop
xchg
or
jle
aas
outsb
jecxz
fimull
jb
js
lret
dec
stos
cmp
sbb
push
hlt
push
iret
adc
in
jmp
mov
push
or
xor
pop
loope
shlb
loop
xchg
push
adc
push
lret
push
cmp
js
xor
and
mov
stos
lcall
dec
shll
jecxz
push
fldt
mov
fcomip
fwait
dec
mov
into
mov
add
push
push
test
mov
subl
xor
pop
mov
xor
add
mov
data16
xor
pop
cmp
push
push
out
adc
in
push
jb
dec
push
dec
pushf
add
outsb
inc
mov
out
outsb
mov
xchg
mov
xor
dec
fwait
mov
xlat
cmp
cwtl
insl
pusha
fisttpll
push
int
push
xchg
cmp
cmpsl
rcrb
inc
xchg
mov
adc
push
dec
xchg
or
mov
mov
loop
lcall
add
or
jg
out
in
stos
or
fcmove
pop
das
xlat
out
dec
sahf
andl
shl
shll
in
mov
test
xchg
sbb
cld
or
in
hlt
and
mov
ljmp
in
test
mov
push
jecxz
enter
inc
sahf
sbb
movsb
xor
lea
cmpsl
cltd
dec
and
gs
mov
push
jmp
jae
decb
fs
fwait
mov
xorb
mov
inc
push
pop
aaa
inc
cli
pop
in
jmp
inc
mov
adc
cmp
repnz
xchg
in
fldt
mov
test
sub
lcall
sub
lods
ljmp
push
je
inc
add
inc
mov
andb
cmpsb
negl
xchg
lcall
add
fmuls
xchg
cmc
xor
arpl
push
cld
in
xchg
aad
sub
and
mov
or
and
scas
sub
cwtl
sarl
call
imul
inc
adc
xchg
jnp
ds
push
mov
fsubrs
lock
xor
cmp
push
pop
addb
dec
lods
and
cs
fwait
or
cs
popa
dec
pop
inc
jnp
sub
inc
sarl
int
inc
xchg
xor
sahf
sar
xchg
frstor
nop
les
mov
xchg
call
mov
and
mov
sub
mov
mov
pop
pop
mov
roll
outsb
inc
push
js
sti
sarb
pop
and
gs
mov
loop
lock
cmp
int3
out
push
mov
jbe
and
add
fcmovne
mov
mov
pop
xor
mov
ret
sub
mov
lcall
cli
imul
mov
push
es
daa
fdivp
lds
sahf
sahf
adc
pop
sbb
jnp
in
or
es
sbb
dec
outsl
xor
add
mov
jmp
xor
sub
popf
xor
add
in
cli
push
inc
fldenv
push
lahf
xchg
push
xchg
scas
test
dec
into
mov
cli
fcomps
inc
jl
lea
test
scas
stos
lods
aam
pop
xor
and
test
test
mov
sarl
test
jae
or
ss
iret
push
fwait
dec
aad
jb
sub
pop
mov
inc
loopne
jns
or
xlat
bound
and
lods
mov
mov
adc
mov
pop
inc
int
mov
mov
mov
adc
fimuls
pop
xor
jb
les
lds
jno
repnz
loope
daa
ds
sbb
cmpsl
out
je
sub
int3
scas
out
cmp
jo
adc
xorl
movsw
ja
sbb
dec
mov
clc
xlat
jbe
xor
mov
sbb
movsl
daa
gs
adc
xor
into
outsb
push
and
in
es
lods
outsb
jmp
fcmovnbe
cli
out
push
xor
mulb
jmp
inc
cmp
pop
push
xor
sbbl
fnstcw
dec
dec
sub
sub
sbb
negb
rorl
jb
ret
imul
fdivrs
jle
dec
inc
or
addr16
pop
insb
aad
in
leave
jg
add
cmp
and
mov
push
xchg
mov
test
mov
movsb
rclb
std
loop
mov
ret
test
lret
stos
sub
mov
imul
or
scas
bound
push
adc
cmp
imul
popa
sub
aad
pop
and
add
ret
inc
cmc
loop
mov
repnz
cmc
imul
test
xchg
push
es
stc
loop
into
mov
cs
pop
pop
out
sbb
popa
repnz
je
push
mov
mov
cmp
push
xchg
add
ds
aaa
pop
or
movsl
push
sub
cld
jmp
inc
pop
jo
push
or
mov
das
sbb
pop
pushf
push
fs
es
push
xchg
cmovg
movsl
scas
adc
aad
add
mov
loope
xor
scas
outsl
ljmp
xor
xor
ret
sahf
stos
cld
in
jb
inc
lods
ss
lds
mov
cld
es
or
cltd
or
push
sarl
sbb
cli
or
adc
insb
sub
fdivr
aad
fwait
push
fxch
xor
jnp
pop
add
push
cmp
in
add
je
movsl
push
adc
and
fs
cld
push
xchg
rcll
xchg
sub
and
iret
insb
pop
lea
aaa
pop
dec
jo
std
lock
rol
sete
loop
xchg
loop
xor
sub
je
dec
inc
inc
addr16
jge
rorl
push
push
cmp
jle
cmp
in
outsl
mov
cs
ljmp
rorl
xchg
ss
leave
mov
mov
stos
adc
rcll
div
and
enter
xor
pop
fs
maxss
push
ret
inc
leave
movsl
sbb
sbb
fdivrs
out
push
pop
sti
mov
xchg
mov
test
aam
movsl
mov
popf
push
enter
jae
mov
inc
aaa
push
or
push
call
fs
add
xchg
add
xchg
mov
shlb
fmull
xchg
sbb
out
or
push
lahf
idiv
inc
inc
inc
pop
mov
sahf
bswap
push
lret
jbe
leave
ljmp
mov
arpl
xor
shrl
fisttpl
bound
dec
lds
dec
pop
out
or
retw
xchg
add
shll
lods
mov
mov
pop
sub
sahf
pop
xor
cmpsl
adc
jo
xchg
cli
stc
sarl
hlt
cmp
sar
cmp
xchg
cwtl
jle
hlt
rcl
xor
xor
pop
inc
inc
push
xor
lea
aad
lods
mov
stc
test
bound
or
mulb
or
sub
fidivl
sar
lahf
add
sub
add
fwait
icebp
xor
cmpsl
fwait
mov
inc
insl
jnp
and
je
jg
call
scas
out
test
mov
mov
aad
neg
xorb
dec
cmpsl
pop
cli
xor
lcall
pop
dec
mov
adc
dec
sub
sub
cli
xchg
xchg
pop
stos
sbbb
jge
bound
icebp
imul
hlt
xchg
leave
lret
push
jmp
fwait
das
popf
mov
pushl
inc
cmp
mov
pop
mov
mov
stos
mov
lret
sub
aaa
cmp
fmulp
call
pop
xchg
and
mov
dec
icebp
cmpsb
and
adc
cmovbe
lea
cld
shll
jns
push
push
adc
inc
jnp
cmp
pop
aas
jle
jbe
popa
ret
shrb
jmp
lock
stc
cmpsb
cmp
and
shll
fs
sub
ret
out
add
pop
sbb
jle
push
cmp
cmpsl
mov
out
cs
and
test
popa
das
outsb
push
dec
jbe
mov
adc
sti
or
jae
js
mov
aaa
test
jnp
pop
int3
push
cmp
push
sbb
dec
int3
pop
mov
leave
pop
js
jo
shl
es
cmp
pop
push
test
cmp
pop
push
adc
orb
ror
sub
push
or
aad
ds
mov
out
scas
movsl
mov
xlat
pop
enter
fimuls
cwtl
mov
mov
sub
pop
imul
or
jb
adc
xchg
xchg
xchg
sub
add
inc
flds
fmulp
test
mov
pop
hlt
scas
cwtl
ja
hlt
outsb
js
lret
mull
inc
mov
mov
repnz
aam
fisttpll
scas
mov
pop
sbb
xchg
xchg
ds
lea
icebp
cmp
insl
rcrb
daa
ret
test
mov
test
in
xchg
cld
out
stc
enter
or
int3
icebp
into
adc
mov
sbb
loopne
cmp
inc
cmp
divl
arpl
xor
jno
mov
mov
jns
mov
pusha
pop
out
sub
pop
add
in
and
jb
xchg
or
fwait
sub
popf
pop
out
cmp
or
cmp
sub
out
mov
test
jmp
cmp
xor
fdivrs
arpl
mov
mov
push
push
in
mov
pop
ljmp
jnp
add
sarl
cs
gs
jge
sbb
stc
pop
enter
jl
loopne
inc
adc
out
testb
popf
iret
aam
xlat
cmp
cltd
mov
push
mov
cld
or
out
lahf
xchg
mov
stos
movsl
repz
dec
in
rorb
stos
mov
dec
dec
xchg
sbb
inc
inc
xchg
pop
mov
mov
das
dec
sbb
test
sub
shl
jge
in
sub
or
movsb
shrl
jp
push
das
movsb
aaa
ret
sbb
cmp
lock
lea
into
dec
shll
aad
push
pop
mov
mov
jecxz
push
sub
push
cmp
cli
add
fwait
in
jp
minps
aad
xchg
in
xchg
mov
xchg
pop
fnstcw
push
out
mov
xchg
das
in
leave
mov
mov
cmc
cld
push
cmc
mov
push
jns
movsb
fdivl
jno
out
and
loope
dec
stos
sub
cmc
cwtl
adc
movsb
fnstenv
shll
fimull
loop
inc
push
jnp
loop
hlt
imul
push
mov
bound
ret
xlat
lret
data16
jnp
mov
and
pop
push
mov
mov
pop
sbb
inc
xchg
add
leave
pop
xchg
in
ficompl
pop
sbb
iret
cmp
jge
lahf
sub
sbb
jmp
into
lea
xchg
arpl
aam
sub
mov
cwtl
mov
mov
call
dec
sahf
inc
aas
jmp
pop
cmp
xchg
test
dec
xor
movsl
adc
cmovne
lahf
sbb
or
sarl
inc
push
mov
dec
jg
or
les
jle
mov
cmc
fcoms
sar
jge
mov
nop
loope
shll
fisubrl
dec
cmp
sbb
xor
mov
int
or
mov
mov
outsl
mov
cli
xchg
dec
mov
insb
add
sub
ds
mov
jo
sbb
repnz
mov
add
jmp
fs
dec
inc
xor
movsb
mov
daa
cmpsl
mov
cmp
cmc
mov
mov
fsubl
and
sbb
jnp
jns
cmpb
push
xor
scas
bound
es
adc
cmpsl
rcrl
sti
adc
mov
xor
out
test
push
imul
or
sbb
inc
or
jle
neg
stos
xchg
das
repnz
sbb
ret
xchg
adc
movsl
mov
nop
mov
fsub
xchg
fisubl
pop
test
popa
inc
push
pop
add
mov
out
lock
idiv
mov
sub
sbb
add
cltd
jbe
fs
cli
test
inc
cmpsb
mov
jmp
sbb
dec
sbb
inc
adcl
xchg
jecxz
dec
stos
js
pushf
paddd
ficoml
mov
iret
aaa
mov
out
jne
addr16
mov
dec
or
sub
sbb
in
lods
repnz
sub
and
xor
xchg
fsubs
or
cmpsb
enter
inc
fstpl
mov
sub
daa
outsb
loop
push
gs
dec
sbb
push
push
cli
mov
pop
jbe
test
hlt
gs
lahf
into
and
daa
mov
fnstcw
test
ljmp
es
stos
lods
insb
mov
inc
out
mov
inc
scas
mov
dec
out
out
xor
jg,pn
push
clc
movsl
nop
jns
sub
mov
lock
mov
add
cmp
or
ss
rcrl
jns
mov
mov
loop
pop
inc
cmp
push
stos
outsl
test
stos
sbb
cwtl
sbb
into
movsl
mov
int
jp
sbb
icebp
lcall
push
sub
cmpsl
je
popf
mov
std
xchg
scas
shll
adcl
mov
pop
mov
jge
mov
pop
sub
sti
ss
and
ss
shlb
and
hlt
inc
stc
jb
cmp
cmp
sub
adc
stc
arpl
or
sbb
mov
inc
stos
xchg
insb
negb
mov
xchg
pop
mov
gs
pop
xchg
in
xchg
adc
jmp
int
and
fcomps
je
loope
adc
xchg
pop
push
mov
pusha
inc
xor
jnp
outsl
xchg
dec
xchg
mov
mov
inc
ret
push
inc
inc
push
out
gs
xor
sub
and
inc
stos
adc
mov
dec
cltd
leave
mov
jecxz
test
leave
inc
xchg
and
cmpsl
mov
jge
cmpl
lock
cs
mov
pushf
mov
ror
xor
loopne
sti
movsb
jp
inc
filds
push
pusha
fistpll
out
mov
insb
mov
aas
shl
dec
mov
push
arpl
sbb
sahf
dec
and
out
xor
test
cmpsb
sub
aad
mov
loopne
lahf
sub
fwait
gs
stos
aad
sbb
aam
lods
lock
and
dec
jne
or
and
cmp
mov
jp
adc
outsl
fcmovnu
aaa
mov
test
in
push
cmove
lock
roll
pop
in
insb
das
sub
xor
bound
inc
pushf
test
rclb
lods
cmp
movsb
push
cmc
fwait
and
test
jecxz
jecxz
mov
insl
inc
mov
and
adc
les
mov
sbb
les
cmc
dec
je
cmp
outsl
pop
bound
ret
sar
dec
fisttpll
pop
mov
pop
je
pop
int
mov
sub
jo
js
out
out
xchg
xchg
dec
or
cmp
int3
dec
or
roll
data16
rcrl
mov
push
sub
adc
scas
add
inc
movsl
pop
addr16
repnz
loope
jge
out
cmc
push
xchg
jmp
stos
lret
pop
lret
jb
jno
pop
inc
ds
lock
push
aaa
in
lock
pushf
loopne
ret
push
and
loope
add
mov
js
je
jbe
mov
and
mov
adc
insb
jno
iret
out
lea
outsb
adc
mov
stos
push
add
je
mov
iret
ja
divb
sbb
jne
xchg
ret
add
sar
push
push
jbe
mov
push
inc
sbb
cmpb
jno
mov
lea
push
loop
cmp
test
das
inc
andb
dec
jnp
and
jbe
rcl
sbb
pushf
jle
jae
mov
inc
inc
cmp
xor
mov
call
clc
push
outsl
dec
icebp
int
xor
mov
mov
adc
aas
cmpb
cltd
mov
cmpl
xor
lret
cmp
jmp
test
insl
pop
clc
insl
stc
sbb
pushf
dec
sti
lods
int3
jae
stc
loop
xchg
mov
loop
sub
imul
mov
ja
aas
fwait
jns
aaa
fstpt
loopne
sbb
or
cltd
push
add
out
in
mov
mov
mov
lock
cli
arpl
push
xor
push
fmulp
int
push
arpl
ror
sbb
mov
ret
lret
push
xor
push
ja
rcll
xchg
jp
cmp
imul
xchg
pop
in
stc
ss
push
in
fstpt
xor
jp
ret
dec
js
push
sbb
in
mov
mov
dec
add
in
test
xchg
and
push
jnp
xchg
add
mov
push
sbb
push
cmpsb
xor
lret
push
iret
or
cmp
cltd
enter
scas
jle
adc
lret
and
cmpsl
push
fsub
push
xchg
and
jns
arpl
dec
or
adc
fs
adc
fmul
push
fbstp
push
fwait
mov
add
leave
mov
outsb
jo
lock
les
jb
jne
xor
sbb
jg
aam
mov
inc
and
fnstsw
jmp
bound
push
cmp
xor
adc
jl
jle
add
sbb
push
in
adc
push
xchg
divb
adc
xor
ljmp
lahf
dec
push
sarl
sbb
xor
aaa
ljmp
jmp
sbb
push
mov
inc
cs
shl
and
rorl
jo
clc
jmp
or
mov
fwait
mov
jb
adc
sbb
add
mov
adcb
shll
fs
pop
out
xor
mov
sub
popf
shr
iret
arpl
pop
sysenter
add
aam
xchg
cli
repnz
push
xor
scas
out
sbb
gs
mov
sub
dec
stc
mov
add
jp
outsl
push
inc
jmp
mov
dec
sub
pop
into
daa
insb
pop
add
test
leave
lret
xchg
mov
sbb
out
pop
adc
fadd
stc
push
sbb
test
or
push
cli
js
cs
int
push
push
adc
sub
aad
mov
ljmp
mov
jmp
shrb
shll
cli
ds
xchg
lcall
sub
cmp
arpl
das
lods
cmp
loop
hlt
push
out
call
xchg
jl
mov
or
outsb
dec
pop
aaa
xlat
and
sbb
sbb
test
dec
and
adc
dec
adc
movsb
fmull
lret
outsb
adc
cmp
push
out
sbb
lret
mov
cs
push
sarl
push
pop
adc
decb
mov
aad
dec
and
enter
xchg
fstpl
lods
mov
aad
and
stc
xor
push
inc
push
pushf
push
fsubs
lods
xchg
xor
jecxz
adc
out
jecxz
xor
jmp
lahf
and
add
mov
xor
fdivp
add
leave
jo
fs
sub
cmp
push
testl
decl
mov
dec
dec
or
xchg
add
jmp
aaa
push
data16
rclb
inc
sub
dec
add
ljmp
push
pushf
enter
fists
stos
jbe
sub
mov
imul
test
ljmp
dec
xchg
out
subb
enter
jle
outsb
sbb
mov
lahf
or
cwtl
lcall
push
or
jl
xchg
jo
inc
cmpsb
inc
mov
dec
std
shr
mov
lods
into
mov
inc
inc
inc
gs
push
ficomps
jno
pop
adc
frstor
test
mov
mov
fcomp
mov
fistl
xchg
xchg
inc
repz
loop
xchg
fnsave
mov
jge
mov
in
mov
dec
dec
rcl
idiv
xchg
xchg
scas
lock
loop
pop
jg
xor
pop
imul
imul
mov
jecxz
popf
testl
cmp
mov
iret
xor
cmp
xchg
mov
pop
dec
ja
inc
test
cmpsb
pop
mov
pop
mov
inc
and
cmpsb
and
or
loope
in
pop
lahf
sub
loop
mov
mov
sar
sub
lods
lret
insb
pop
std
inc
xor
mov
div
je
jge
and
andl
push
adc
dec
mov
sahf
rorl
out
test
dec
push
push
lea
andb
ljmp
mov
pop
int
mov
fcompl
rcrb
cmpsl
outsl
and
and
sub
xchg
xor
out
or
out
int
icebp
dec
inc
fldl
sbb
lret
ret
loop
jmp
jae
sbb
and
sbb
scas
mov
fidivs
mov
loope
and
jl
xcrypt-ctr
cmpsl
cwtl
je
mov
fucomi
std
jns
jmp
lods
movsb
mov
sahf
fidivl
aas
and
xchg
cmp
data16
scas
sbb
lret
repz
mov
sbb
adc
in
push
dec
popf
decb
mov
sbb
mov
pop
pop
sub
fiadds
ret
and
mov
jne
lcallw
fs
cmp
xchg
shl
cmp
loopne
xor
xchg
ja
out
aad
jmp
dec
test
jmp
or
movsb
cvtpi2ps
and
aas
rcr
xor
out
outsb
adc
sub
std
sub
adc
mov
inc
adc
loope
lret
inc
int
xchg
mov
icebp
lahf
xor
nop
adc
pop
mov
fisubrl
dec
inc
arpl
xor
rol
push
loop,pt
and
cs
inc
lods
out
adcb
sti
add
jns
aam
dec
repnz
inc
arpl
mov
jmp
xchg
inc
int3
cmp
sahf
or
inc
fsub
jb
and
dec
popa
jecxz
popf
add
nop
repz
in
pop
aaa
out
xchg
add
cltd
inc
fnstcw
outsl
jno
popf
cmp
mov
sub
scas
mov
adc
push
icebp
mov
cltd
xchg
pop
dec
push
mov
cmp
xor
push
pop
cmp
and
fwait
or
imul
repz
sub
mov
and
sub
dec
push
cmpsb
xchg
mov
scas
lcall
or
rorb
push
jno
sbb
je
outsl
and
in
mov
add
or
arpl
mov
loopne
mov
jno
into
push
push
mov
mov
mov
add
ret
xorl
xchg
test
cs
adc
jno
push
inc
xlat
mov
and
pop
fs
jge
scas
fnsave
or
mov
pop
iret
mov
lret
ljmp
adc
mov
cmc
push
sahf
lret
fimuls
inc
xchg
or
scas
enter
aad
js
popa
inc
nop
aam
cmpb
insl
dec
popl
rcrl
add
subb
imul
xchg
aad
test
xchg
cmc
out
mov
in
test
push
push
pop
movsl
dec
xor
jmp
test
mov
rolb
jno
mov
jl
mov
mov
add
jnp
pusha
movsl
mov
call
mov
add
pop
std
push
or
adc
enter
inc
jmp
dec
xor
incb
adc
xchg
test
add
out
ffree
and
mov
xor
xchg
dec
ret
addl
out
movsb
add
mov
stos
mov
jmp
ss
push
loope
adc
or
stc
addl
adc
ss
movl
mov
jb
jl
mov
popf
test
movsb
jno
mov
sbb
pop
pop
mov
scas
arpl
in
or
andb
imul
fs
out
or
stos
mov
sbb
mov
mov
loopne
adc
cwtl
shlb
dec
repz
push
nop
mov
add
sbb
shrl
out
jns
sub
lods
lahf
cmp
mov
mov
test
js
push
and
mov
call
add
call
popf
ss
hlt
inc
push
mov
pop
fsubrs
inc
movsl
popf
xchg
or
push
mov
inc
mull
daa
outsl
jl
in
nop
out
cld
xchg
sbb
js
popa
les
mov
cmp
lcall
pop
dec
mov
stos
mov
push
test
xchg
faddl
ja
pop
mov
cmp
hlt
stc
aam
imulb
test
pop
jne
sarl
lcall
insl
and
push
and
mov
ret
push
fisttpll
mov
lods
data16
js
nop
fs
xchg
fwait
popf
lods
call
in
rcrb
lahf
or
in
pusha
xor
ror
xor
testl
dec
cmpsb
inc
xor
sub
and
add
adc
cmp
test
mov
pop
call
out
movsl
dec
sub
pop
cs
jne
jmp
movsb
xor
push
lret
push
jb
enter
push
or
popf
sub
clc
mov
sub
mov
jg
mov
dec
xor
jmp
leave
rcr
jnp
andb
xchg
test
cli
and
mov
in
cmc
cmp
call
pop
jns
test
insb
xlat
sub
ret
leave
leave
mov
lea
sahf
sbb
jne
ljmp
xchg
pop
lcall
fdivl
inc
xor
jbe
pop
ljmp
test
hlt
addr16
bound
imul
and
add
xor
push
cmp
movsb
mov
jecxz
push
sbb
aaa
adc
cli
mov
das
out
xor
pop
enter
sbbl
sbb
or
cmp
add
jg
jecxz
push
and
popa
leave
fidivl
fsubp
jge
mov
jecxz
pop
adc
or
sbb
pop
lea
inc
add
sbb
jl
xchg
xchg
mov
cmp
and
testb
mov
out
dec
xor
mov
aam
pop
test
lahf
jns
rcrl
cmc
movl
enter
je
mul
cmpsl
pop
inc
and
insl
jge
mov
in
mov
call
aad
xor
jmp
xchg
xchg
arpl
pop
lods
clc
ja
pop
roll
dec
into
mov
inc
sub
xchg
imull
xlat
vphsubwd
xor
dec
loop
pop
mov
cmc
iret
pop
cwtl
jno
out
in
hlt
lret
pop
sub
add
cmpsl
add
or
xlat
xchg
and
mov
sti
add
cmp
pop
jne
pusha
jo
mov
lcall
iret
dec
jl
data16
mov
jbe
cmp
and
dec
sub
enter
int
pop
mov
punpcklwd
es
xchg
jb
mov
sub
test
movsl
adc
ds
push
lret
push
sbb
gs
and
inc
ficompl
jecxz
in
adc
insl
push
dec
pop
jle
out
popa
add
dec
out
sar
push
std
dec
lds
xchg
pushf
mov
mov
test
sub
mov
cmp
clc
stc
or
xchg
ss
lret
pop
movsb
test
aaa
jecxz
stc
lret
pushf
mov
jns
push
pop
pop
into
lret
cli
lret
ror
scas
sub
and
decb
outsb
cmp
and
movb
les
mov
popf
loopne
mov
add
mov
call
test
jb
les
addr16
loop
pop
pop
inc
aam
mov
xchg
sub
cmp
iret
stos
push
aam
lods
into
dec
cltd
nop
push
sub
inc
rcr
mov
ljmp
in
push
add
or
jge
js
mov
inc
mov
mov
sbb
mov
or
or
stos
pause
sbb
loop
mov
sahf
mov
cmp
loopne
cmp
icebp
xchg
dec
cmpsl
add
outsl
push
shlb
out
arpl
mov
jge
ret
mov
sti
fisttps
lock
jp
mov
pop
loope
roll
adc
sti
adc
sahf
sub
or
cmpsb
addb
mov
dec
stc
fcmovnu
sti
inc
orl
xor
aam
loop
pushf
imul
sbb
cmpsb
inc
and
sub
int3
push
cmp
add
sets
lock
cmc
jnp
and
adc
push
data16
and
ljmp
fs
int3
mov
cltd
insl
and
adc
fwait
test
jl
dec
inc
adc
inc
daa
fistl
pop
cs
push
and
loopne
incb
or
test
insb
gs
push
sarb
mov
and
and
mov
rcl
inc
push
das
jno
popa
mov
adc
xor
mov
adc
lods
jae
adcl
sub
inc
xchg
outsl
sbb
jmp
mov
outsb
jg
cltd
xor
mov
dec
mov
cli
ja
xchg
jmp
fstp
das
lret
mov
adc
scas
jae
push
sti
xchg
sub
cmpb
pop
jle
out
add
out
add
inc
sarl
xchg
or
mov
and
loop
inc
in
outsl
fnsave
fsubl
push
into
mov
mov
mov
into
aaa
sahf
lret
sbb
mov
cmpsl
out
jle
mov
int3
pop
and
jnp
adc
pop
std
adc
outsb
dec
push
negl
sbb
into
aad
push
inc
xchg
mov
pop
decb
dec
xor
popaw
jmp
cmp
jge
int3
out
xchg
rcll
dec
mov
call
xchg
pop
xchg
dec
jnp
mov
bnd
shlb
mov
xchg
outsb
dec
push
inc
lahf
ret
push
lds
xlat
adc
or
pushf
lock
push
test
xor
xchg
out
cmp
jbe
addr16
in
jmp
and
adc
mov
jecxz
cmc
dec
dec
sub
data16
je
pop
push
mov
and
mov
mov
loopne
data16
xchg
scas
fsubl
or
out
das
inc
pop
mov
movsl
cmp
jne
aad
mov
mov
cltd
out
mov
aas
cmp
leave
xchg
sub
es
cltd
push
pop
sbb
aad
jge
dec
mov
stos
pop
popa
lret
mov
dec
inc
mov
lahf
jecxz
cmp
sub
adc
fldt
ret
test
lea
or
push
addr16
dec
pop
aad
mov
enter
fisttpl
insb
mov
in
je
pop
dec
sub
outsb
pop
jbe
pop
xchg
fsubl
lock
aas
test
ret
jns,pn
mov
pushf
jbe
pop
div
bnd
ret
int3
ficoml
int
adc
jbe
dec
hlt
dec
mov
call
rcl
adc
xor
stos
mov
xchg
xor
jl
hlt
enter
lock
fldln2
inc
test
fst
mov
ja
test
xor
int
pop
push
pop
shll
popa
gs
xchg
adc
call
fbstp
xor
clc
mov
test
lahf
scas
push
adc
xchg
jecxz
or
cli
sub
scas
push
fidivrl
call
out
sbb
clc
dec
push
push
mov
jns
add
test
xchg
hlt
shrl
dec
hlt
rorb
dec
jbe
shl
lods
jo
mov
in
aam
movsl
popl
jmp
out
stos
outsb
aam
fsubs
stos
pop
cmpsb
rcrl
test
xlat
xor
call
shrl
inc
push
pop
icebp
pushf
xor
mov
pop
mov
cmp
adc
adc
add
repnz
and
das
sub
adc
adc
daa
shl
sub
sbb
jno
lahf
xchg
push
mov
xchg
jp
rolb
movsb
sub
cmp
mov
fnstsw
cmp
or
mov
int
sbb
ljmp
mov
inc
push
aam
aad
sbb
jnp
insb
outsl
xor
in
movsb
fmul
sti
pusha
loope
dec
addb
adc
cs
cmp
or
sbb
mov
add
subl
mov
cli
cmp
mov
push
loopne
enter
mov
iret
es
push
stc
sbb
sar
lea
dec
repnz
mov
or
mov
out
addr16
push
lcall
pop
fnstenv
or
jmp
out
xchg
std
jle
add
sub
and
jae
sti
push
gs
mov
push
dec
jmp
jp
xor
and
dec
push
or
mov
das
lods
jns
inc
rcrl
push
mov
or
push
jb
mov
int
sub
sub
ja
ss
std
cmpsb
sub
cli
imul
or
test
ds
mov
repnz
inc
sahf
jbe
mov
and
mov
mov
ds
xchg
test
out
jae
xchg
cmpsb
adc
rcrb
in
cmp
adc
fucom
jp
call
mov
inc
xor
cmpsl
lret
cmp
mov
bound
sub
adc
jle
out
rcrb
out
and
jecxz
lods
out
push
sub
push
das
pop
push
mov
clc
pop
xor
jmp
xchg
popf
jecxz
stos
add
lds
pop
cmp
mov
push
pusha
or
test
pop
dec
pop
or
cmp
loopne
inc
mov
dec
cmpsl
jb
es
and
out
cmp
mov
in
dec
test
pop
xchg
enter
test
sub
xor
daa
pop
adc
mov
add
pop
cmpb
add
adc
ja
stos
dec
loope
lods
inc
lahf
movsb
jl
and
inc
lods
or
jo
jl
sbb
icebp
push
fnstenv
lcall
mov
and
sub
sub
dec
dec
iret
test
mov
bound
cmc
inc
lds
xor
inc
movsl
dec
es
enter
flds
mov
jno
inc
in
test
out
adc
and
jge
scas
and
sub
mov
invd
inc
inc
push
inc
mov
and
adc
shl
push
ss
stc
add
ja
push
add
loop
dec
pusha
mov
aas
scas
mov
pop
mov
add
push
mov
cli
mov
pusha
sahf
cmpsb
pop
xor
cwtl
jae
inc
and
xorb
or
dec
dec
push
and
js
push
mov
mov
loope
sbb
je
std
or
das
mov
xchg
or
mov
sub
mov
pop
mov
stos
out
cmp
mov
out
jno
scas
sbb
and
ds
pushf
repz
add
shl
pop
adc
stos
add
xor
lea
loopne
cmp
fistpll
bnd
es
movsb
dec
rorb
mov
sahf
movsl
cld
inc
out
loope
fwait
pop
data16
cld
lret
jnp
dec
testl
into
addl
xor
mov
cs
movsl
xchg
ja
inc
pop
push
das
push
movsl
scas
outsl
adc
xchg
xchg
lock
mov
or
inc
sbb
lock
lret
sub
jp
add
mov
jnp
mov
sub
push
loop
inc
stos
or
add
movsl
imul
and
mov
hlt
loopne
out
fidivrl
push
mov
pushl
sbb
out
lea
push
cmp
or
fldl
mov
jle
gs
sar
add
icebp
test
add
push
lea
sub
and
and
ret
stos
outsl
jae
push
and
sub
push
xor
aam
in
mov
pop
sbb
sbb
mov
pop
or
insl
push
sarb
mov
push
lock
test
daa
push
repnz
std
test
aaa
add
ss
adc
bound
aam
jne
and
sbb
dec
leave
movsb
or
iret
mov
call
cmp
lock
pop
pop
inc
mov
mov
int
ja
and
and
inc
pop
pop
cmpsl
adc
inc
cwtl
movsb
out
mov
or
mov
outsb
pop
sub
sub
fwait
dec
pushf
pop
insl
or
cmc
int3
mov
inc
dec
inc
aad
jl
push
push
xlat
jmp
cs
test
mov
call
inc
add
sbb
hlt
pop
pop
xchg
ret
jnp
xchg
lahf
andl
mov
imul
scas
jg
cmp
test
stc
pop
sbb
push
cmc
or
and
push
xor
push
cmp
push
jmp
or
sub
test
test
jns
sbb
xor
pop
test
int
jnp
xchg
push
es
or
sub
add
push
mov
jge
mov
mov
add
cltd
fdivs
icebp
aaa
decl
rorb
cld
add
bound
sbb
imull
dec
mov
adc
mov
stos
jl
sub
jp
adc
dec
jno
pusha
xor
imul
dec
ds
repnz
imul
and
dec
dec
roll
fstpl
push
mov
push
push
adc
mov
cmc
jnp
ss
push
adc
sub
fs
and
pop
cmp
fstpt
pop
stos
xor
mov
pop
lds
out
push
scas
and
mov
mov
mov
imul
arpl
or
gs
push
gs
enter
inc
jb
cmpsl
dec
push
arpl
push
cwtl
sbb
fdivs
std
fidivrl
dec
hlt
pushf
jo
add
adc
fstpl
test
add
jb
loopne
jmp
inc
or
push
mov
push
fldt
jg
mov
sbb
jl
fwait
mov
add
aas
pop
cs
push
adc
daa
push
sub
xchg
lock
scas
les
push
cmp
mov
mov
cli
fsubr
and
cltd
xorl
insb
fildl
rclb
outsl
repnz
mov
jns
jbe
pushf
jbe
pop
mov
int3
faddl
and
mov
jne
xchg
jle
sub
dec
dec
mov
adc
jl
xor
inc
cmpxchg
sbb
loop
add
es
repz
cmpsb
and
sti
xor
imul
cli
dec
sahf
repnz
int3
inc
or
mov
xlat
jg
fdivs
fs
xor
cltd
fadds
ret
pop
fildl
mov
sbb
or
in
xchg
sbb
js
adc
mov
push
clc
dec
jns
aad
cmp
add
adc
rcrl
mov
cmp
ror
daa
sbb
inc
in
and
out
mulb
add
mov
lock
test
jno
movsl
arpl
xor
add
sub
cmp
lret
stos
loop
adc
mov
push
cmp
outsl
mov
fmull
mov
hlt
jmp
iret
sub
aaa
jae
addb
call
jp
and
and
leave
dec
shrl
and
das
add
mov
mov
subb
in
mov
sbb
jle
sub
pop
aas
out
sarl
pop
pop
or
adc
orb
mov
movsb
hlt
mov
mov
mov
mov
jbe
cmp
test
xchg
fxam
push
mov
mov
out
lcall
js
aas
push
xchg
adc
jae
int
cmp
mov
enter
js
loop
rcr
add
aaa
ds
mov
js
stos
jecxz
jne
add
orl
scas
inc
push
faddl
ret
jnp
ljmp
inc
fnsave
cs
arpl
mov
insl
loopne
sub
push
insb
inc
ds
fnsave
xchg
mov
hlt
vandnpd
frstor
iret
addr16
mov
inc
incb
popf
cli
pop
jge
popa
sub
push
int3
inc
std
popa
rorl
push
scas
adc
loope
popa
mov
xchg
mov
in
int3
test
mov
lret
push
adc
call
les
out
test
outsl
stos
hlt
pcmpgtb
pop
xor
push
xor
sbb
addl
in
lods
test
ficoms
xchg
or
lret
inc
push
mov
dec
or
scas
sub
mov
xlat
pop
jns
xor
adc
mov
nop
pop
cld
ljmp
pop
jle
stc
dec
add
xor
rcr
jmp
repz
jle
push
imul
inc
in
ja
pusha
push
lods
add
aad
mov
dec
sahf
sub
push
fidivrs
xchg
sub
sub
movsb
fimull
mov
in
loopne
push
repnz
push
jne
xor
dec
xor
jnp
adc
adc
mov
mov
in
push
call
gs
or
scas
insb
lds
add
push
idivl
cmp
xchg
jmp
push
and
hlt
push
sbb
out
cwtl
daa
push
rol
scas
inc
lock
mov
xchg
xor
cs
mov
fsubrl
mov
fsubs
insl
pop
ja
fs
jb
jb
and
std
mov
js
fs
adc
les
pop
xor
push
loop
mov
push
xchg
and
test
cmpsb
adc
je
test
or
je
push
ss
pusha
aad
jns
mov
leave
adc
add
mov
in
pop
pop
inc
jae
add
stos
aaa
or
aad
cmp
jno
add
cmpsl
mov
cli
loop
mov
lcall
loope
dec
stos
clc
testb
inc
xlat
xchg
cmpl
jno
mov
popa
inc
xchg
loopne
iret
lcall
adc
fstpt
jnp
pushw
dec
in
xchg
jne
dec
arpl
mov
or
iret
dec
hlt
dec
dec
je
movl
aad
xchg
fcoms
cwtl
cmp
mov
mov
mov
jns
shrl
addl
mov
iret
mov
das
test
mov
test
ljmp
or
std
push
pop
clc
shll
popa
repz
push
mov
test
into
test
xlat
loopne
leave
push
mov
das
movb
cmp
mov
je
xchg
and
icebp
dec
xchg
fstp
jge
sbb
into
int3
adcb
add
rorb
pusha
cmp
aam
add
and
cmpsl
mov
in
inc
fucomp
hlt
aad
lar
test
inc
insb
adc
test
mov
lcall
and
xchg
dec
add
js
rclb
xorl
les
pop
xchg
divl
daa
xchg
pop
scas
add
inc
and
test
sbb
push
sbb
cwtl
mov
adc
xor
cmp
cmpsb
add
adc
mov
or
add
pushf
lret
ret
lcall
cltd
das
cmp
and
psllq
sbb
pop
sub
push
and
fwait
jns
out
sbb
dec
mov
test
daa
inc
mov
jbe
cmpsb
pusha
push
jmp
outsb
ret
lods
insb
sub
mov
fisttps
fcmovb
hlt
mov
cwtl
std
jmp
mov
dec
lods
int
pop
jo
pop
pop
std
push
rcrl
ljmp
cmp
push
lea
clc
pop
loop
lea
cmp
test
xchg
inc
pop
test
iret
or
inc
imul
aad
scas
pop
adc
mov
fwait
sub
pop
repz
scas
mov
sbb
and
jmp
push
dec
jae
fcomp
sub
jns
jle
xchg
xchg
mov
adc
lea
loopne
pop
pusha
cmp
repz
aam
pop
stos
inc
outsb
jo
js
push
lds
jbe
in
lcall
add
incl
js
mov
aad
dec
xor
test
xor
divl
shl
xchg
pop
and
std
lret
lcall
push
mov
pop
imul
lret
xchg
jnp
cmp
jl
cmc
fidivrs
push
int
out
jge
pop
lahf
or
loop
add
jo
aam
jbe
or
inc
lods
mov
faddl
int3
lcall
inc
push
les
or
cld
bound
push
mov
fldenv
je
mov
adc
pop
out
lret
jns
cld
loop
xchg
inc
leave
leave
or
mov
in
push
cmp
inc
jno
jae
xor
lcall
jno
push
push
push
sub
pop
xorl
xor
xchg
rolb
es
cs
jae
push
push
mov
xchg
jb
repnz
movsl
fsubs
adc
out
outsb
mov
roll
and
in
nop
insb
sub
js
incb
movb
push
or
mov
jns
fdivrl
ljmp
es
leave
imul
dec
enter
dec
xchg
enter
test
mov
bound
in
and
inc
dec
in
hlt
lret
inc
lahf
push
orl
into
add
fildll
sarb
sahf
push
pop
sub
push
outsb
mov
mov
push
stc
rcrb
adc
add
sahf
dec
dec
pop
sbb
test
rol
sub
inc
mov
cltd
mov
inc
xorl
arpl
out
dec
xorb
mov
xchg
je
or
int3
cmp
jle
mov
cmpsb
or
testb
stos
push
sbb
cmp
dec
mov
dec
call
mov
outsl
fidivs
push
test
xlat
mov
mov
jmp
jp
push
pop
cmpsl
jp
hlt
push
adc
shlb
enter
out
addb
add
adc
stos
inc
and
dec
in
sub
clc
repz
cmp
push
mov
xchg
insl
add
mov
jnp
dec
xlat
ds
sub
mov
arpl
jecxz
xchg
push
adc
ss
jmp
xor
push
test
mov
clc
adc
stos
mov
and
adc
xlat
inc
insl
repz
test
jge
movsl
mov
jmp
inc
dec
loope
mov
xlat
sbb
pushf
inc
pop
ja
out
inc
popa
mov
pop
cmpb
rorb
jge
int
mov
lcall
xchg
aas
mov
adc
cli
lahf
pusha
sub
cmp
lcall
loope
xchg
pop
mov
and
lock
scas
ljmp
xor
pop
pushf
fwait
repnz
push
push
movsl
mov
in
orb
loop
mov
insl
dec
push
fstps
sbb
sub
xchg
rep
xor
sub
clc
lcall
mov
and
and
faddl
sbb
pop
lods
jl
sahf
ficoms
in
mov
dec
adc
std
ja
sahf
pop
mov
loop
adc
push
mov
push
adc
inc
ret
popa
ret
push
arpl
mov
dec
push
mov
adc
jnp
mov
scas
aam
pop
jle
jb
lcall
mov
push
std
or
pop
imul
ds
outsb
lret
push
addr16
leave
xor
xor
pop
lret
push
add
pop
ret
xor
xchg
xchg
in
int
test
in
aad
das
xchg
mov
cmp
pop
iret
add
movsb
pop
out
push
lods
cld
fcoms
cld
popa
insb
jne
jg
ss
pop
pop
pop
mov
imulb
out
ja
scas
pop
ss
ljmp
mov
aaa
inc
pop
cmp
pop
jp
les
icebp
stos
out
cld
mov
insl
aaa
pop
hlt
pop
xchg
pop
push
cmc
movsl
stc
pop
cmpsb
test
push
inc
arpl
cmp
out
add
cmp
lahf
in
sbb
adc
pushf
sahf
in
jnp
movsl
fwait
inc
sub
popa
cwtl
cmpsb
push
cs
push
jo
ljmp
cmpsb
scas
and
cmp
jno
out
xchg
mov
decl
pop
pop
mov
mov
sbb
pop
cmp
shlb
outsb
fimull
cwtl
pop
int
aas
into
push
mov
push
shlb
test
loopne
adc
pop
mov
pop
fs
xor
jb
pop
xor
test
lret
dec
les
stc
ficompl
sbb
jecxz
lock
shll
jo
loope
fildll
pop
int3
sbb
movsl
cmc
jp
push
mov
xor
xor
xchg
sub
ljmp
pop
xor
enter
cli
jmp
push
and
sbb
push
and
mov
inc
daa
nop
ffree
repnz
inc
pushf
test
adc
jl
jb
and
adc
pop
mov
call
mov
push
nop
jae
add
inc
loop
cld
jecxz
push
outsl
roll
push
in
adc
insl
push
ret
pop
add
lea
pusha
fwait
sbb
lcall
rcll
jecxz
mov
xchg
mov
xchg
mov
cmpsl
lcall
pop
add
add
icebp
aam
in
hlt
fdivrl
call
pop
or
data16
pop
mov
xlat
mov
cmp
xchg
xchg
inc
insl
adc
xchg
sar
mov
mov
ficoms
xchg
adc
ds
arpl
xchg
xchg
sub
les
push
popf
xchg
mov
add
cmp
shll
xorl
adc
mov
ljmp
aam
xchg
imul
and
sbb
inc
cmpsl
jo
xlat
push
data16
aad
push
shl
or
fs
sbb
or
sbb
enter
outsb
jge
int3
sti
push
mov
out
mov
cwtl
call
pop
dec
cmp
push
push
xor
adc
xchg
add
iret
aad
mov
pop
loop
push
jbe
aas
pop
xor
xor
push
dec
subl
push
sbb
push
aam
clc
pop
fbstp
jne
push
rcll
mov
daa
movb
jp
stos
ja
clc
mov
xor
test
ljmp
fisubl
nop
sbb
cmp
jne
cmp
inc
subl
sarb
es
gs
jnp
das
xchg
sahf
add
outsl
cmp
adc
clc
or
cmpsl
aaa
jle
lcall
push
add
pushl
xor
test
cld
xor
nop
movsl
jb
bound
fldt
adc
push
xchg
nop
das
mov
mov
sbb
add
and
in
cwtl
and
cwtl
enter
stos
sahf
loopne
fnstenv
dec
mov
jno
add
insl
sbb
pop
mov
imul
or
jg
jl
mov
adc
sub
and
call
mov
icebp
loopne
mov
add
sbbl
push
mov
icebp
mov
mov
push
hlt
mov
push
dec
and
mov
mov
lret
jp
adc
nop
pop
aam
lret
sub
adc
xchg
fs
jp
and
jb
sub
and
in
mov
mov
or
pop
xchg
sub
cli
push
lods
cmpl
lods
xor
adc
test
in
loop
push
xor
mov
lahf
dec
sbb
stos
fwait
push
fcomip
mov
mov
mov
fstpt
mov
or
cmp
push
imul
nopl
push
insl
fldcw
pop
sahf
and
clc
xor
nop
fiaddl
dec
push
nop
add
je
out
sti
mov
pop
and
or
jg
mov
stc
repz
enter
mov
les
sub
xchg
stos
mov
mov
int3
mov
cmpb
repz
int
aaa
call
sub
adc
nop
push
insb
pop
popa
xchg
mov
sbb
out
push
js
xor
iret
jmp
cmp
adc
add
pop
bnd
fsubrl
scas
push
mov
pushf
negl
mov
enter
outsb
stos
test
lret
rcrb
sbb
sbb
or
addl
cld
fwait
in
inc
jno
add
push
inc
or
les
rorl
bound
sbb
pop
mov
mov
jecxz
mov
ret
std
jb
lret
cltd
adc
mov
add
clc
ds
mov
sbb
rol
clc
xchg
cmpsl
hlt
ljmp
add
pop
add
mov
pop
mov
xor
arpl
iret
arpl
push
popf
inc
dec
mov
fmul
sbb
into
dec
sub
mov
and
int
mov
inc
loop
and
pop
and
mov
inc
fidivl
out
push
adc
dec
jecxz
push
jg,pt
adc
mov
cltd
fimull
mov
cli
arpl
inc
push
insb
enter
stos
loopew
bound
pop
scas
sub
icebp
xchg
pop
inc
or
jb
sub
add
mov
cs
leave
push
and
adc
add
lock
and
jecxz
mov
test
fsubl
adc
adc
stc
test
out
inc
ret
mov
dec
cld
bound
imul
movb
push
int
xorl
addb
or
push
jle
aam
mov
push
leave
stos
lods
sbb
sbb
mov
sti
dec
add
xor
xchg
movsl
outsl
lret
xchg
sub
imul
lea
adc
add
push
ds
dec
mov
dec
xchg
add
add
pcmpeqd
cmp
inc
jmp
pop
and
lods
adc
mov
imul
push
je
imul
and
push
into
or
nop
push
mov
pop
jae
outsb
pushf
jl
mov
dec
xchg
daa
sub
pop
leave
inc
jo
xor
jae
leave
sti
cli
movsb
xor
loope
and
cmp
nop
sub
out
and
pop
cmc
push
insb
into
in
or
push
dec
adc
jecxz
dec
lods
pop
sar
dec
fildl
data16
dec
mov
add
xchg
ret
adc
daa
cmp
iret
inc
push
sub
std
and
mov
xchg
fst
outsb
jae
mov
fisubl
push
and
and
push
and
pop
lcall
fs
push
orb
xor
jecxz
mov
fsubrl
shrb
mov
mov
insb
add
mov
sahf
pop
fwait
outsb
aaa
jecxz
mov
dec
cmpsb
into
js
or
cmp
out
mov
push
insb
push
stos
ret
je
add
inc
dec
loop
aad
je
aas
mov
jge
cli
mov
mov
dec
clc
dec
cmp
pop
addb
ret
or
sub
pop
mov
mov
push
leave
sub
dec
test
xchg
dec
sub
push
dec
clc
test
cs
push
adc
es
pop
jmp
jmp
outsb
cmp
xchg
jecxz
mov
jl
outsl
lret
push
lock
stc
jnp
lds
pop
push
int3
sti
push
pusha
testl
xchg
dec
mov
leave
jb
mov
imul
inc
or
push
mov
repnz
hlt
xorl
out
leave
sbb
daa
clc
loopne
push
jmp
dec
stc
test
mov
adc
out
xchg
fisttpl
inc
ret
sbb
ret
insb
inc
sub
or
es
sbb
jmp
das
lret
push
xchg
loop
in
inc
popa
sbb
cmp
testl
sahf
daa
loop
pop
aas
sub
push
jecxz
imul
call
sbb
and
lea
sbb
mov
or
testb
push
nop
add
and
aaa
add
jg
inc
or
dec
sbb
push
add
and
enter
inc
faddp
int
sbb
cmp
out
pop
inc
insl
mov
cmp
shr
ret
cltd
nop
pop
lds
cmp
jns
icebp
xchg
cmp
repnz
in
sub
icebp
mov
pop
pop
ret
mov
mov
stos
outsb
add
std
xchg
imul
xchg
xchg
mov
jnp
pop
and
add
sbb
pop
push
popf
pop
cmp
xor
enter
lret
inc
bound
push
shll
xchg
into
mov
ja
sub
loop
push
fistps
adc
cltd
pop
mov
repz
fisubrl
sub
mov
inc
mov
jae
or
fwait
jae
andl
aam
jmp
jg
enter
pop
mov
and
test
adc
xchg
cltd
and
ficompl
scas
xchg
dec
ljmp
fs
ret
push
sbb
test
lock
mov
adc
sub
jg
inc
fnsave
sub
into
testl
and
loop
dec
iret
test
popf
push
lcall
ljmp
test
nop
test
xchg
mov
xchg
add
push
nop
push
cltd
inc
pop
test
add
or
cmp
push
or
or
adc
xchg
adc
jmp
dec
sub
mov
or
ljmp
add
dec
mov
or
push
into
xchg
xor
xor
adc
inc
and
pop
movsl
les
outsl
adc
pop
pop
sarb
adc
fsubs
cmp
jmp
fs
imul
cmpsl
jnp
xor
sti
cltd
mov
or
lods
cmp
adc
loope
int3
inc
inc
lea
mov
repnz
xchg
lret
inc
stos
les
pop
sub
adc
inc
sbb
int
into
subb
push
lret
enter
pop
jnp
pop
push
mov
fstpt
js
fwait
sarb
push
and
cmpsb
add
xchg
add
imul
scas
dec
iret
outsl
jl
add
inc
push
sub
push
ja
ffree
and
add
rorb
test
pop
shl
push
mov
popa
aad
icebp
adc
shr
push
mov
daa
pop
mov
mov
xchg
cmp
ja
jne
outsl
addr16
loop
dec
xchg
in
mov
jns
frstor
fs
adc
fildll
adc
xchg
or
es
or
fdivrs
or
mov
dec
sub
jbe
in
mov
jno
int3
cmpsl
mov
mov
mov
aaa
enter
pop
push
adcl
fldl
pusha
cmpsb
fildl
push
icebp
pop
xchg
mov
jg
cli
sbb
ss
sub
cmpsl
push
jo
mov
test
imul
lret
xor
cmp
pop
mov
movsb
jp
scas
outsl
lcall
xchg
inc
sbb
pop
fdivrs
mov
les
mov
cmpsl
divb
fnstcw
dec
jns
adc
cmp
mov
sbb
fucom
loop
dec
stc
fs
inc
mov
mov
sbb
movsl
pushf
out
clc
push
out
xorb
pop
mov
lret
jae
jbe
pop
push
xchg
add
sbbb
ljmp
sub
mov
adc
xorl
add
aam
int
cs
and
xchg
mulps
scas
pop
mov
mov
in
xor
sbb
inc
ret
dec
scas
ud0
bound
call
in
sbb
dec
push
mov
sub
popf
mov
or
dec
ret
mov
rorl
jb
movsb
loop
js
pop
scas
je
cmp
add
dec
cmp
xchg
inc
fistpll
sahf
aam
sbb
loopne
test
pop
stc
fstps
mov
dec
sbb
jmp
add
popa
decb
mov
fsubl
out
xlat
popa
pusha
lock
pop
dec
ljmp
movsb
jns
or
leave
xor
sbbl
push
in
in
push
and
adc
jno
pushf
in
aas
dec
cltd
out
pop
mov
cmc
popf
fnstenv
mov
outsl
push
inc
aam
popf
lret
push
repz
mov
xor
fdivrl
push
in
dec
and
pop
jmp
ds
repnz
sbb
fcoml
cmp
adc
push
stos
jbe
mov
incb
fisttps
cmp
pop
add
jmp
sbb
sub
incb
or
pop
fsts
push
mov
push
icebp
mov
aas
scas
mov
xor
jl
in
int
mov
shrb
and
inc
ljmp
nop
jmp
mov
push
rorb
shr
jle
cmp
sbb
rolb
inc
inc
mov
mov
adc
int
insl
xor
mov
clc
jge
ret
mov
addb
sub
mov
imul
add
push
mov
inc
push
or
test
inc
inc
dec
std
lock
out
mov
dec
pusha
test
clc
jmp
mov
divb
in
pusha
sub
out
out
mov
and
jne
inc
imulb
mov
cmp
movsb
adc
sbb
dec
int3
in
xchg
sbbb
and
call
test
scas
imul
ljmp
mov
mov
push
inc
in
cmp
push
dec
andl
xor
out
lahf
movsl
fdiv
into
sub
push
and
stos
mov
sbb
xor
jb
icebp
iret
rolb
rcll
pop
add
ret
ret
cmp
dec
add
inc
pop
xchg
lahf
push
pusha
pop
fdivl
cmp
mov
or
sbb
scas
mov
out
loopne
add
leave
inc
push
xchg
pop
jge
jno
inc
aam
fcoml
test
out
in
outsl
add
dec
jb
mov
sbb
sub
pusha
dec
aam
addl
into
sub
cmpsl
ljmp
insb
outsb
and
cli
push
inc
in
push
xlat
leave
aam
addr16
int3
loopne
xchg
outsl
std
in
aad
dec
sub
cmpsb
mov
mov
push
cmp
lds
cmovl
xor
imul
inc
sarl
mov
std
jmp
ficoms
add
subl
shll
dec
das
ljmp
fadd
sub
push
dec
fnsave
cmp
mov
sbb
fs
xlat
stos
mov
lods
popf
cmp
fidivs
arpl
cmp
push
or
insl
push
xchg
adc
and
pop
dec
fstpt
and
cmp
aam
in
pop
bound
xor
mov
ret
fidivrl
cwtl
mov
movsb
sbb
dec
push
xchg
dec
sbb
pushf
imul
mov
adc
mov
jo
mov
or
shlb
push
jnp
xchg
mov
or
iret
xor
push
in
lahf
adc
cmc
fistpl
jbe
gs
jge
divl
stc
test
adcb
sbb
sub
daa
mov
mov
inc
push
arpl
hlt
daa
xchg
dec
cwtl
mov
cltd
insb
mov
push
fwait
add
fistpl
loop
outsb
cbtw
push
inc
pop
dec
out
test
xchg
inc
or
mov
int3
sub
xchg
out
and
xor
ret
test
or
pop
repz
int3
dec
loop
fildll
test
jmpw
test
fsubrl
xchg
movsb
add
mov
lock
fwait
into
mov
cltd
adcb
mov
into
adc
xor
cwtl
push
aas
jl
stos
pop
jno
sbb
aam
xor
negb
pop
dec
push
lret
int3
mov
dec
rcll
dec
sarl
das
bnd
inc
mov
imul
mov
mov
out
and
ret
enter
rorl
rorb
dec
and
shr
shrl
lret
loop
adc
push
sub
xchg
and
loopne
test
call
pusha
push
xchg
out
sub
push
into
push
jg
jb
pop
mov
sbb
rcr
ds
xchg
ja
adc
lcall
mov
adc
sub
or
rolb
repnz
push
adc
jo
dec
lret
imull
fidivl
loope
push
xor
insl
mov
and
fsubl
shrl
pusha
inc
mov
xchg
imulb
mov
inc
movsl
adc
push
push
cwtl
decl
cmp
add
add
pushf
cwtl
xor
mov
push
cwtl
ljmp
aaa
mov
add
test
int3
pushf
push
iret
pusha
mov
lds
add
push
xchg
xchg
addr16
and
imul
hlt
push
mov
dec
ret
xchg
pushf
or
pop
pop
pushf
nop/reserved
icebp
add
sbb
jne
cwtl
data16
add
mov
fscale
daa
inc
sub
cmpl
push
insl
sbb
shll
pop
arpl
int3
ficoms
xor
js
inc
pop
clc
stos
xor
pusha
insl
js
add
add
push
sti
fldenv
rorb
das
pop
loop
pop
and
sub
loopne
cmp
vsqrtpd
mov
xchg
imulb
mov
stos
clc
jae
scas
mov
inc
popf
cs
pop
adc
movsb
lahf
mov
add
cmp
xchg
inc
inc
stos
lret
in
mov
enter
pop
xchg
cmpsl
xchg
test
cld
aam
mov
jbe
pop
add
fcmovu
test
jecxz
aas
add
les
sbb
or
mov
xor
fcoms
movsl
jne
cli
hlt
ds
sub
setle
pop
mov
pushf
sub
loop
mov
adc
int
mov
mov
adc
stos
das
cmpsb
aas
ret
xor
int3
mov
out
add
popf
jne
add
sti
js
lock
and
cmp
pop
popa
test
out
mov
mov
add
adc
jle
cmp
add
lahf
mov
jge
rol
jns
jecxz
dec
fcomip
and
stos
add
mov
mov
ss
adc
es
js
push
sbbb
lahf
pop
sbbl
mov
mov
fnsave
push
and
jae
jb
imul
leave
jns
test
cmp
imul
scas
xlat
mov
push
rol
arpl
xor
lods
dec
test
sti
and
fsubrl
xchg
pop
pop
cmp
mov
addb
ljmp
enter
popa
or
ss
inc
add
xchg
cmp
or
pop
subl
push
pop
neg
jb
popf
icebp
je
or
fnstenv
in
or
lds
imul
shrl
addr16
dec
push
push
das
rcrl
outsl
and
pop
fs
push
test
cmp
imul
sahf
push
inc
mov
inc
out
mov
punpckldq
mov
jge
int3
mov
adc
call
mov
mov
movsb
enter
sbb
push
push
pop
ret
clc
inc
adc
jbe
add
lret
int
in
popa
add
stos
adc
hlt
cmp
test
sub
or
pop
add
imul
jmp
inc
nop
call
jne
lods
shll
jl
inc
pop
add
mov
mov
or
loopne
xor
cwtl
mov
add
jle
mov
imul
jo
sahf
adcl
ljmp
push
jno
push
or
mov
pop
jbe
mov
shl
jno
xchg
lock
loope
js
es
mov
stc
mov
xchg
movsb
fdivr
js
movsb
es
push
inc
outsb
retw
cld
negl
push
lods
mov
sub
idivl
push
nop
addr16
xchg
mov
movsl
push
xchg
sub
xchg
ret
and
fucom
jge
sbb
dec
insl
loopne
jb
xor
das
out
call
mov
movsb
aas
dec
add
pushf
leave
jmp
jo
sti
pop
add
dec
inc
std
mov
sub
mov
lcall
jl
pop
jle
jb
fsubs
sub
incl
call
sub
scas
and
negl
push
add
push
dec
nop
jp
add
xchg
cltd
lock
shll
sub
xor
out
cmp
mov
cltd
mov
and
push
mov
call
fs
ret
test
popl
push
adc
push
aad
xchg
mov
cmp
xchg
add
add
loope
fisubrl
sbb
out
and
loop
outsb
or
dec
loop
xor
pushf
xchg
and
xor
add
repz
inc
add
xor
mov
ja
fdivrl
ret
mov
mov
mov
fcomp
xor
cli
negl
outsb
imul
sbb
mov
jl
mov
push
and
aam
pop
iret
jno
mov
inc
adc
inc
rorb
sbb
pop
mov
jmp
mov
xchg
cmpsb
cmpb
and
mov
fdiv
fimuls
and
adc
xchg
cmp
test
dec
fistpll
sub
xor
jns
fdivrs
pop
adc
subl
pop
ss
bound
pop
fsubrs
dec
inc
mov
ds
not
pop
inc
movsb
sbb
push
and
jmp
mov
cmp
xor
fistpl
loope
out
push
fidivrs
cmp
and
rorl
mov
xchg
js
inc
in
inc
icebp
inc
add
mov
mov
repnz
imul
mov
ss
adc
cmp
aaa
pop
mov
xorb
pop
sub
es
loope
sub
mov
mov
cmp
fs
dec
movsl
inc
sub
mov
pop
test
out
sub
and
push
lcall
movsl
je
int
mov
icebp
movsl
inc
xchg
fcmovnb
or
negb
test
or
pop
sbb
test
sub
xor
xchg
test
or
cltd
popf
mov
nop
xor
pusha
ss
pop
fildll
mov
push
inc
pop
add
mulb
sub
call
rolb
outsb
add
in
mov
and
in
sub
adc
xor
pop
and
push
adc
sbb
sbb
pop
sbb
xchg
fwait
inc
lods
mov
pop
inc
xchg
scas
sbb
cmpsl
outsl
xchg
lahf
in
mov
adc
inc
lds
rol
out
add
mov
stos
mov
test
loopne
mov
push
sti
or
inc
out
and
inc
or
jns
inc
sbb
xchg
xchg
sbb
dec
out
jne
or
int3
sbb
movsb
jle
xchg
int3
xchg
int3
add
in
arpl
std
and
mov
cld
pop
or
mov
ss
test
dec
movhps
stos
ret
loope
subb
pop
cmp
clc
mov
xor
fldenv
xorb
arpl
fnsave
push
bound
mov
cmc
pop
icebp
add
dec
adc
scas
pushf
stc
push
scas
ror
imul
add
in
mov
or
mov
ds
mov
mov
inc
in
mov
pop
cmp
mov
cmp
lods
adc
shll
int3
xor
inc
or
add
adc
push
pmaxub
push
stos
and
jnp
clc
icebp
into
inc
in
push
repz
sbb
add
pop
andb
and
ret
inc
fldl2e
dec
aad
mov
push
jmp
mov
or
sbb
push
in
inc
dec
jb
mov
or
incb
repnz
out
inc
lods
inc
jbe
sub
adc
lcall
dec
out
sahf
in
cltd
movsb
cmp
and
fsubrl
mov
or
fwait
pop
sub
mov
inc
push
hlt
xchg
pop
mov
xor
mov
and
mov
js
daa
lock
pop
inc
sbb
dec
sub
mov
push
rclb
sarl
pop
addr16
dec
nop
sbb
ljmp
test
mov
sub
xchg
push
dec
cmc
testb
mov
mov
push
fisubs
mov
jns
aas
or
inc
test
je
ret
rorb
xor
pop
mov
outsl
rclb
cmp
or
add
sahf
and
gs
cmp
sti
mov
push
icebp
out
xchg
enter
cwtl
push
cwtl
sarb
outsl
mov
jp
dec
mov
push
inc
std
sbb
adc
dec
and
popa
sarb
mov
sarl
dec
aaa
xchg
cli
fbstp
adc
aas
pop
pop
cs
icebp
frstor
out
adc
dec
xchg
adc
in
push
sbb
shrb
jne
push
jmp
jp
xor
imul
xor
lods
gs
lret
lds
lret
push
cmp
cs
cmp
dec
push
popf
data16
bound
xchg
repz
cs
cli
mov
jmp
cwtl
pop
sub
movsb
or
jp
aas
mov
ror
cmpsb
aas
cwtl
movsl
das
mov
scas
outsl
movsb
push
ss
lods
bound
inc
add
adc
xchg
adc
jne
shl
testb
jne
and
adc
and
dec
rcr
mov
mov
jl
adc
into
out
push
cmp
mov
add
movsl
sub
testb
pop
dec
mov
inc
sarl
sbb
sbb
orb
ret
mov
adc
and
pop
orb
sub
xor
cpuid
je
push
add
mov
mov
mov
lds
lcall
lea
ds
mov
pop
xlat
sub
jmp
adc
sbb
lds
xchg
sbb
adc
sbb
std
lods
pop
sti
mov
pop
rolb
dec
scas
std
pushf
jmp
add
and
mov
lahf
iret
movsl
out
lock
push
cmp
outsl
je
loop
cli
aas
and
outsl
jp
adc
pusha
ljmp
sti
jl
es
das
fisubs
sbb
rcr
pop
adc
inc
mov
loop
shlb
dec
jge
cmp
test
sbb
out
pop
and
and
sbb
pushf
xor
jb
jg
mov
push
mov
jge
jg
jo
sbb
sub
lret
xor
int
dec
incl
mov
pop
adc
jno
andl
pushf
ficoms
into
test
xor
sbb
iret
stos
fildl
out
mov
out
out
mov
mov
dec
or
mov
aad
rcl
aam
das
mov
or
in
and
and
sub
push
or
add
cld
in
shlb
sbb
ret
or
fs
scas
pop
in
sbb
fstl
sbb
dec
add
fistpll
add
les
add
std
lahf
push
adc
mov
mov
cmp
xchg
lcall
cmpb
pop
sbb
fldcw
sub
test
or
sub
add
sarl
loopne
xor
aam
mov
adc
rcrb
pop
cmp
adc
adc
fwait
scas
sahf
mov
rolb
inc
jle
gs
jle
iret
adc
pop
inc
jo
adc
aaa
or
scas
test
sti
arpl
pop
add
cmpsl
mov
adc
jmp
rcll
dec
ds
add
xchg
xchg
dec
push
mov
or
in
nop
sbb
pusha
loopne
mov
stc
sbb
arpl
lcall
imul
inc
cmpsb
cld
ret
ret
imul
call
mov
mov
rcrl
je
jnp
xchg
mov
mov
mov
xchg
dec
out
lret
mov
cmpl
test
push
cmp
dec
mov
ret
cmpsb
ja
testb
cmp
add
inc
xchg
xorb
mov
stos
fildll
sbb
enter
cmpl
lret
and
mov
jl
pop
movsb
loope
out
hlt
movsl
sbb
sbb
jge
mov
cmp
pop
imul
sbb
inc
jge
pop
lods
lret
int3
inc
jae
pop
cmpsb
shl
cwtl
cltd
xor
or
xor
mov
stc
aad
inc
xor
mulb
inc
popa
stos
mov
pop
or
mov
test
or
mov
add
sub
aaa
fcomps
mov
cmpsb
sub
les
mov
scas
fdivrp
pop
call
insl
mov
lock
pop
mov
test
aam
inc
inc
jge
iret
inc
xchg
ret
adc
cli
push
icebp
mov
mov
data16
push
lahf
rorl
xchg
pop
jns
jne
je
sub
mov
scas
mov
push
mov
std
push
adc
pop
inc
shr
pop
xchg
test
decl
sub
sbb
sbbl
pop
pop
jmp
mov
jp
and
outsl
jnp
or
fnstsw
add
lock
sub
jns
xchg
add
push
das
in
mov
cmp
push
out
inc
or
jns
sub
sbb
lcall
sub
aas
es
arpl
dec
push
sbb
push
mov
sub
sti
lcall
mov
shll
mov
and
shlb
int3
dec
sbb
shrb
in
repz
and
imulb
xlat
pop
mov
ja
lcall
mov
dec
jp
fisttpll
inc
jne
out
int
adc
pop
mov
inc
adc
add
and
push
add
vrcpss
mov
mov
sub
or
lret
sub
sbbl
push
pop
mov
in
or
in
cmpsl
pushf
dec
sbb
stc
ret
lds
lods
or
jl
mov
filds
push
divl
push
cmpsb
or
scas
jle
insb
sub
pop
pop
adc
repz
sbbb
jecxz
adc
xor
add
shlb
xchg
lret
es
jmp
sbbl
pop
mov
cmpsl
pusha
fstps
pop
loopne
adc
jl
shl
dec
fs
pop
jl
test
pop
fdecstp
icebp
jg
shlb
jns
mov
and
push
pop
inc
in
adc
mov
dec
call
das
adc
sub
push
lcall
lret
cltd
ret
cmc
xchg
or
lret
xlat
mov
inc
mov
lcall
out
mov
test
push
jae
js
int
pop
sbbl
adc
mov
cmp
cmp
and
arpl
jmp
bnd
push
call
pop
cmp
pop
div
ja
push
adc
and
mov
inc
sub
jge
push
popa
push
push
jae
insl
call
addr16
push
push
mov
mov
fneni(8087
dec
sti
mov
out
cmp
mov
jb
movsl
xchg
imul
sub
aad
arpl
push
mulb
mov
ljmp
cwtl
pop
loop
out
daa
add
hlt
cmp
cmp
pop
in
adc
adc
pushf
dec
repz
aaa
jo
inc
push
cmp
insb
push
pop
pop
das
dec
jns
stc
mov
xchg
add
inc
ret
cmp
mov
mov
push
pop
inc
lcall
std
loopne
cmp
mov
push
dec
cmp
pushf
xchg
push
mov
notl
lahf
pop
mov
sub
mov
pop
mov
mov
sbbl
or
fistpll
lret
sbb
sub
push
outsb
cmpsl
jae
dec
mov
add
loop
popa
sti
xchg
hlt
dec
fldenv
mov
loop
fs
daa
sbb
or
push
sbb
mov
loop
push
orb
rcrb
push
xchg
jp
dec
xor
insb
stc
xchg
in
aam
or
test
cmp
push
mov
cmp
push
scas
xor
xchg
insb
flds
jg
or
push
or
mov
cwtl
and
sub
je
adc
lock
pop
lods
mov
loop
push
or
sbb
dec
stos
push
pop
jmp
pop
or
adc
push
mov
pushf
mov
or
shrb
insl
les
and
inc
dec
inc
out
adc
es
mov
icebp
add
sbbl
cmpb
icebp
stos
into
out
mov
xchg
and
ja
inc
jle
jecxz
and
and
push
jb
in
sub
stos
pusha
daa
jecxz
stos
hlt
push
inc
cmp
push
cmp
adc
pop
clc
rep
xchg
fdivrp
scas
pop
jl
js
cmp
cltd
addr16
push
std
mov
repnz
push
or
mov
push
inc
inc
or
inc
cmp
cmp
add
popa
fstpl
dec
les
xchg
dec
insl
out
pushf
push
or
fstps
loop
mov
cltd
add
xchg
lock
inc
roll
mov
add
mov
movsb
mov
das
jp
loopne
cmc
subb
stos
je
enter
xchg
lret
ss
or
addr16
push
dec
push
aaa
mov
out
out
pop
mov
mov
in
cmp
jle
pop
aaa
mov
jo
loopne
sti
and
js
jae
push
cli
int
inc
int
scas
mov
sbb
or
out
lods
mov
mov
out
or
and
daa
mov
xchg
jmp
je
or
mov
add
les
js
mov
mov
pop
adc
pop
scas
addr16
sbb
loope
mov
cs
mov
xchg
popf
xchg
and
aas
cwtl
push
rcll
fisubrs
mov
jb
mov
xchg
adc
dec
mov
mov
dec
mov
jg
pop
lods
xchg
mov
ja
shr
shrb
lock
and
lret
scas
cmpsb
cmp
movsb
nop
mov
jle
sbb
in
inc
xchg
out
jno
add
push
xor
pop
xchg
icebp
call
push
cwtl
mov
xchg
sbb
add
adc
repz
inc
in
cmp
adc
jecxz
lcall
inc
and
outsb
pop
sub
xchg
add
add
add
and
call
cltd
cmp
decb
lahf
xchg
mov
adc
push
push
and
stos
repnz
inc
xchg
data16
insl
or
xor
fs
mov
inc
push
mov
dec
divl
adc
pop
sbb
ror
in
in
and
ret
lgs
popf
jp
mov
jo
push
xchg
xchg
xchg
mov
adc
popf
xchg
leave
rolb
addr16
addb
enter
sbb
icebp
icebp
dec
push
movsl
cmpsl
jle
test
push
cmpsb
cltd
jmp
shlb
cmp
stos
in
jbe
jbe
mov
inc
cmp
jg,pn
fs
jg
fdivrl
outsb
sub
ljmp
adc
inc
jmp
and
mov
stos
jbe
cmpsl
jae
mov
ret
and
sbb
or
mov
xor
xchg
ret
or
jmp
stos
and
dec
cwtl
mov
mov
sub
dec
or
add
cmpl
out
cwtl
pop
cmpsl
xchg
cmp
sbb
mov
cmp
pushf
pop
xchg
mov
add
pop
push
xchg
dec
aam
add
cmc
xlat
add
lds
inc
in
int
ja
mov
sti
adc
sahf
pop
pop
fisubrs
mov
ret
dec
daa
out
ja
fcoml
jmp
imul
stos
jl
mov
fbstp
mov
inc
sbb
push
mov
adc
mov
add
in
jb
lahf
and
or
lods
mov
int3
cmpsl
push
push
and
xchg
lods
dec
jnp
or
xor
stos
sbb
cmpsl
leave
sbb
inc
pop
into
xchg
cmp
adc
sub
test
test
mov
xchg
or
xchg
adc
jo
sti
sbb
dec
js
push
fcoml
or
sub
ror
add
arpl
inc
fidivs
adc
in
or
bound
sbb
fisubs
out
lea
popa
ret
dec
nop
arpl
inc
std
lods
ds
sbb
pop
jno
test
sbb
push
faddl
and
cmp
scas
icebp
sub
pop
push
iret
std
jo
sbb
call
cwtl
stos
xor
and
xchg
in
sbb
arpl
bound
shl
dec
adc
pop
mov
lds
mov
sti
push
je
into
imul
out
pop
iret
test
push
cltd
xor
movsl
outsl
ffreep
mov
bound
ja
jns
pop
push
aas
loop
je
sbb
int3
and
jge
addb
mov
lds
and
mov
adc
sbb
leave
jge
and
subl
aaa
pop
xchg
mov
out
mov
sti
arpl
or
cmp
mov
push
xor
mov
xchg
bound
scas
add
mov
xchg
push
ss
pop
mov
lods
je
jb
lods
cmp
test
dec
nop
or
je
jge
je
aad
lds
mov
sub
jecxz,pn
addr16
xchg
aad
adc
in
cmpsl
dec
jmp
repz
popl
cmp
hlt
xchg
adc
xchg
ret
inc
gs
mov
mov
ja
je
movsw
out
fildl
imul
inc
inc
cmp
pop
mov
aaa
adc
dec
or
fistpll
mov
shll
pop
sbb
push
test
bound
xchg
ds
xchg
xor
mov
inc
cli
mov
shll
jecxz
popf
aas
mov
sbb
movsl
dec
inc
jne
and
push
pop
ret
pop
lds
sbb
push
sub
and
and
or
sbb
mov
lods
pop
pushf
pop
sahf
hlt
stc
imul
rcll
addb
mov
xchg
cli
sbb
outsl
xchg
repz
cmpsb
daa
push
pop
clc
jg
cmp
mov
mov
dec
and
sbb
and
dec
cmpsl
inc
and
jnp
scas
imul
fstpl
test
jbe
and
enter
stos
stc
adc
cld
mov
adc
mov
dec
scas
add
test
dec
out
mov
lret
pop
fs
mov
cmp
jg
xchg
and
dec
test
call
xlat
mov
dec
shll
mov
mov
mov
insl
in
xchg
xchg
shlb
dec
or
adc
test
out
int
push
jge
sub
cld
xchg
ljmp
sbb
pop
mov
xor
into
in
push
push
rorb
mov
enter
sub
adc
mov
mov
mov
xchg
xor
in
push
fdivl
repnz
mov
das
out
daa
les
lret
mov
cwtl
cmp
mov
push
lcall
aam
mov
sub
je
cmp
xchg
mov
mov
xor
lock
pop
or
sbb
mov
inc
cmc
push
out
pop
movzbl
dec
outsl
popa
ljmp
in
setg
sbb
pop
ret
scas
mov
ja
jnp
lret
xchg
inc
dec
and
sbb
jo
mov
adc
inc
mov
ret
sti
adc
scas
data16
in
sbb
inc
mov
xor
mov
push
and
leave
mov
in
xor
scas
cmp
push
icebp
popf
test
sbb
ja
mov
xor
cwtl
test
mov
repnz
and
pop
mov
xor
and
pop
and
xor
lock
add
arpl
xor
es
or
addl
push
std
add
add
adc
inc
shlb
cltd
icebp
xchg
scas
jecxz
testb
adc
pusha
aas
mov
jnp
out
and
pop
test
stos
sbb
out
movsb
and
mov
sub
addr16
sub
xchg
or
es
rolb
mov
cmpsb
popa
pop
orb
loope
jg
scas
iret
or
xchg
mulb
sbb
aas
lock
out
out
sbb
mov
jne
cmp
jb
add
lahf
out
add
fsubs
sub
pop
xor
rsqrtps
xor
ja
mov
pop
push
fldt
pop
jle
sbb
cmp
mov
cmpl
pop
gs
out
or
mov
ljmp
rol
dec
rclb
dec
cmp
push
aam
fmull
inc
mov
xchg
push
dec
or
inc
imul
in
push
into
rcrl
fsubrl
out
test
std
xchg
lock
out
stc
daa
pop
lds
sbb
push
and
sbb
mov
in
mov
cmp
icebp
mov
nop
test
ja
adc
ja
rcrb
mov
rclb
jl
mov
mov
test
fsubl
pop
pop
fimuls
add
jl
dec
outsb
jl
sub
faddl
inc
jmp
push
ds
and
jmp
dec
iret
dec
push
sti
dec
pop
xchg
add
add
ja
fidivrl
jnp
push
adc
call
xchg
xchg
insl
imull
xor
cmpsl
xchg
ljmp
mov
mov
pop
cli
aaa
jae
xor
mov
incb
cmpsb
sub
je
addr16
xor
add
mov
cmp
jp
popa
stos
mov
test
leave
and
fwait
xor
sub
mov
jns
push
jne
lahf
ljmp
aad
pop
fldt
adc
scas
lock
pushf
dec
xchg
lods
or
jecxz
lock
das
mov
cmpsl
adcl
jge
sbb
xor
pop
push
repnz
lods
inc
test
lods
daa
add
add
aas
imul
jb
cli
hlt
fnstenv
rolb
and
push
push
idivl
push
pop
mov
add
dec
cltd
pushf
gs
cmp
pop
sti
popf
pusha
xor
leave
mov
jmp
mov
push
lcall
rcrb
and
push
or
in
popl
or
mov
shr
gs
mov
pop
pushf
in
scas
add
sub
out
push
insb
and
lret
cwtl
outsb
sbb
stos
inc
xlat
mov
mov
dec
jno
movsl
sub
or
dec
mov
cli
adc
pop
out
lahf
inc
test
fisubrl
out
movd
mov
in
and
aaa
push
sub
mov
jb
and
jae
pop
out
fwait
movsb
sti
and
or
pop
out
sub
aas
rcr
adc
in
int3
inc
test
xor
test
test
clc
arpl
mov
sbb
xchg
ja
push
repz
xchg
inc
repnz
test
repz
sub
lcall
lock
jge
insb
sbb
jg
shrl
pop
sub
ror
ret
or
and
push
ljmp
enter
inc
xchg
push
repnz
dec
and
out
pushf
mov
adc
popf
xchg
push
xchg
fdivr
test
movsl
mov
mov
call
xor
xlat
jbe
out
rolb
cmp
push
cld
mov
pop
push
subb
bound
leave
mov
loopne
sub
inc
lret
leave
aaa
adc
icebp
inc
ficomps
clc
mov
stc
xchg
icebp
mov
popf
dec
sbb
rcrb
subl
or
repnz
aad
push
hlt
mov
push
sbb
sbb
xchg
scas
and
scas
leave
cli
pop
push
push
adc
loope
popa
sbb
stc
imul
mov
test
adc
jle
lret
push
iret
adc
add
jp
fadds
sbb
aaa
xchg
nop
dec
inc
adc
cmpsl
inc
outsl
mov
test
adc
fimull
xchg
xlat
out
cmp
prefetch
fwait
pop
jnp
push
push
mov
popf
ret
and
pop
dec
cmp
xor
push
mov
imul
scas
es
add
xor
jmp
mov
cwtl
daa
lret
comiss
cmp
decl
pop
inc
ret
call
scas
outsl
xchg
and
jbe
add
cmp
sbb
shlb
mov
ja
xchg
idivl
mov
cmp
push
pusha
push
and
dec
je
out
repnz
push
ror
movsb
test
adc
jmp
or
mov
and
fcmovne
popf
in
ds
jno
lds
xchg
cmp
inc
dec
inc
push
push
xor
lret
inc
clc
pop
xor
jnp
xchg
add
dec
and
insb
sbb
push
add
sar
jle
sub
sub
cld
es
nop
fiaddl
jle
orl
fs
mov
push
jnp
add
xlat
cmpsl
cltd
or
movsb
pop
push
jnp
inc
sub
push
jo
mov
int3
add
ljmp
push
xor
sub
fadds
xchg
xor
mov
mov
xor
push
les
jne
xlat
push
cmpsb
call
clc
inc
mov
outsb
out
and
mov
jno
shll
or
std
cmp
lahf
sbb
aaa
xchg
arpl
pop
mov
mov
fnstcw
lahf
inc
or
cmpb
lock
lods
rcr
sbb
shlb
push
push
xor
xchg
int3
out
push
nop
pop
rclb
xchg
cltd
or
mov
inc
pushf
insl
mov
sbb
inc
dec
jecxz
add
popf
outsl
mov
mov
inc
mov
in
iret
roll
repnz
jno
fidivl
mov
fists
pop
ds
dec
addr16
and
dec
push
push
adc
jb
rorb
sbb
ret
into
push
lret
jne
adc
shll
ss
enter
pusha
sahf
hlt
inc
jno
lret
in
or
and
push
addr16
pop
in
mov
jg
xchg
mov
ds
inc
insb
xor
pusha
popf
cmp
jecxz
clc
add
into
pop
add
cmpsl
hlt
pop
and
jne
je
jo
loopne
push
je
fistps
lods
out
xor
inc
cmp
push
sarb
sub
or
dec
mov
loopne
popa
pop
add
sub
sub
add
test
stos
nop
xorb
ja
sahf
flds
xor
mov
leave
idiv
loope
scas
lcall
aam
outsb
lods
xor
pop
pop
dec
mov
mov
inc
or
xchg
xor
fucomi
xor
mov
cwtl
push
scas
adc
pop
std
sub
mov
inc
add
xor
insb
pop
mov
ret
dec
inc
or
call
add
adc
or
aas
fsub
idivl
dec
mov
outsl
sbb
cli
mov
sub
rorb
movsl
jb
adc
repz
ja
out
adc
cmp
inc
mov
faddl
adc
divl
and
add
sub
xor
jle
mov
inc
inc
push
ja
int
dec
push
sub
bound
jge
lret
fwait
outsb
enter
jo
add
adc
sbb
jmp
lods
jne
mov
lcall
mov
int
mov
dec
int
clc
shrl
pop
adc
sbb
jmp
fwait
adc
int3
and
pop
jge
sub
fidivrs
mov
sahf
in
fwait
cs
mov
neg
inc
incl
mov
jmp
and
sub
mov
fmuls
repnz
pop
mull
jmp
jbe
rcll
xor
ret
fadd
aaa
ds
jp
out
adc
ds
mov
cmp
cmp
aas
mov
sub
dec
cmpb
add
mov
mov
pushf
jle
stos
xor
cwtl
jb
xor
jo
jb
mov
shl
xor
les
sbb
push
xor
or
lahf
inc
or
mov
frstor
mov
aas
mov
inc
enter
mov
imul
aam
adc
pop
arpl
lods
std
shlb
das
mov
jne
inc
popa
push
pop
and
push
pop
add
xchg
adc
push
sub
test
mov
inc
push
fisubs
stc
enter
lret
xchg
cmpsb
xchg
fwait
jg
jl
fs
lods
mov
out
sub
add
test
roll
xchg
sbb
push
sahf
lock
push
stos
push
sub
movsl
dec
jl
mov
stos
repz
clc
xchg
sub
inc
xlat
sbb
inc
inc
pop
jle
xor
out
pusha
sub
call
jmp
jo
lret
xor
xor
add
repnz
repz
jl
frstor
and
out
arpl
or
cwtl
and
mov
jecxz
xchg
xlat
push
mov
pop
loop
add
mov
cmp
cmpsl
mov
add
mov
cmp
sub
fdivr
xchg
pop
mov
scas
adc
sti
hlt
push
pop
pop
lret
sbb
insb
sub
jne
hlt
in
rolb
addl
sub
stc
je
mov
pop
adc
inc
dec
repnz
cmp
cmp
push
jnp
xchg
adc
jbe
push
sahf
add
das
and
push
enter
notb
push
xor
insl
test
cwtl
inc
mov
std
adc
rorb
or
movl
fisttpl
pop
cmp
pop
mov
push
aaa
add
xlat
and
xor
in
stos
jo
clc
cmp
sbb
in
cmp
mov
and
fnstsw
cmc
addr16
jbe
and
sti
lret
push
mov
lss
stc
xchg
mov
xchg
xlat
nop
cmp
mov
pushf
shrb
mov
sub
tzcnt
pop
loop
call
adc
inc
rcrb
sub
xor
gs
adc
pop
push
popf
outsl
adc
loop
aad
jge
add
arpl
adc
popa
xor
shll
lds
sub
push
and
outsl
inc
jg
and
ss
mov
fimull
mov
rorb
iret
inc
jno
lds
test
jbe
sbb
call
les
test
shll
sbbb
cltd
cmp
jecxz
or
jg
push
xchg
or
stos
in
xchg
imul
pop
fs
sahf
sub
lods
call
fs
or
rcrb
in
cmpsl
mov
test
mov
push
das
std
into
mov
ficompl
jno
xchg
cld
stos
xchg
jp
xor
cmp
cmp
xorb
add
and
sub
cmpsb
dec
out
jb
stos
push
clc
test
idivb
out
dec
mov
shll
cld
inc
lret
add
sub
out
shrb
inc
aam
jp
push
push
imul
psllq
mov
in
out
mov
adc
adc
cwtl
aad
movb
addr16
or
mov
insb
call
decl
movsl
xor
jns
repz
mov
je
mov
loope
fiadds
mov
out
ja
push
shrl
cmp
fldenv
jge
cmpl
dec
jp
sub
push
les
mov
dec
ret
xchg
iret
stos
fbstp
scas
call
fcoml
daa
cld
jecxz
mov
pushl
and
jge
mov
push
mov
fs
cli
adc
mov
sbb
cmp
mov
shl
rol
mov
popa
mov
ja
jb
jb
or
test
stos
cmp
cs
jns
sub
xchg
xchg
sub
inc
fcoml
notl
jbe
xchg
js
loopne
pop
jmp
out
stos
filds
or
mov
fwait
clc
imul
jl
sub
mov
jb
or
icebp
cmc
ss
ds
std
or
jbe
push
lods
fisubrs
xor
mov
es
push
mov
fistpll
sarl
push
inc
push
pushf
mov
sti
push
clc
mov
cmp
roll
stos
jmp
cmp
dec
mov
or
repz
call
pop
dec
mov
scas
inc
cs
mov
jnp
clc
xorl
ret
push
stos
inc
repnz
jl
in
xor
icebp
xchg
jl
xchg
lods
mov
push
es
mov
inc
sbb
fadds
stos
insl
or
mov
out
aas
jmp
push
sahf
ret
mov
lahf
out
loope
cmpsl
fsubrs
xchg
icebp
inc
inc
mov
cltd
adc
es
outsb
nop
cltd
xchg
aad
idiv
sub
aas
or
imull
adc
adc
insl
mov
ret
add
ficoml
xchg
mov
rcr
inc
pushl
imul
jl
fcmovu
test
dec
or
daa
aaa
movsb
fisubrl
sub
dec
inc
mov
ror
dec
xchg
ss
dec
js
jno
cmp
dec
icebp
xchg
sub
enter
sub
pop
cmpsl
adc
inc
daa
pop
or
daa
pop
mov
fwait
pusha
jae
aaa
cmpsb
jo
stos
mov
xchg
push
shr
cmpsl
rorl
clc
xor
push
cmp
adc
bound
xor
or
sub
mov
leave
in
sarb
or
setle
sbb
dec
xor
push
xchg
cmpsb
add
mov
pop
mov
popa
xchg
and
je
inc
in
adc
or
sbb
lods
int3
cmp
popa
add
ret
je
daa
xor
jmp
push
xchg
icebp
jbe
dec
cwtl
and
ljmp
shlb
icebp
mov
jmp
sbb
jle
ds
fidivl
or
cmpsb
ljmp
add
lahf
xchg
out
xchg
dec
adc
pop
das
pop
sub
xor
in
sbb
pop
mov
addb
icebp
les
out
fstl
lods
add
rorb
imul
pop
repz
ljmp
and
push
sub
popa
push
or
xor
fcoms
xor
rcl
lahf
add
or
shlb
sahf
out
shll
out
ror
rcrl
clc
addb
push
xchg
push
or
enter
test
jl
repz
pop
arpl
data16
cmp
adc
stos
mov
scas
imul
test
inc
scas
mov
arpl
lock
cmpsl
call
lods
test
shlb
negl
or
xor
fwait
jp
inc
dec
repz
idiv
data16
xchg
clc
jo
jp
hlt
dec
sbb
pop
aas
fwait
add
mov
mov
and
idiv
fildll
sub
call
inc
mov
fildl
clc
sbb
push
iret
out
shr
push
xor
inc
mov
sub
xchg
iret
xchg
inc
es
call
mov
or
dec
xor
mov
ret
mov
outsl
mov
add
or
cmp
and
sbb
jle
xor
and
mov
mov
push
aas
mov
hlt
push
fadds
pushf
jns
adc
cmp
cmp
repz
loop
sbb
xor
shll
ljmp
inc
add
jo
jmp
jne
sti
mov
arpl
xor
nop
mov
cli
add
test
sub
je
hlt
and
jge,pt
das
jmp
sub
je
out
push
cmp
popa
add
jecxz
jno
pop
mov
and
cmp
outsb
and
aad
jns
mov
mov
stos
inc
icebp
lea
add
imul
xor
pop
sbb
cmp
sub
sbb
ljmp
add
jb
pop
jbe
sbb
and
xchg
mov
fisubl
push
andl
out
push
jo
sbb
loope
ss
iret
mov
outsb
sbb
mov
ret
inc
mov
cs
mov
mov
ss
cmp
outsl
and
out
jno
dec
std
xor
mov
sub
or
xor
test
cmp
ret
jmp
mov
lods
sub
jbe
cmp
orb
cwtl
mov
add
push
test
scas
loopne
pop
divb
pop
fs
jge
and
sbb
sahf
mov
pop
push
outsb
fildl
adc
rol
cld
add
mov
jle
cmp
cmp
fwait
cmp
clc
test
gs
movsb
fadd
in
flds
in
mov
lret
xchg
push
or
inc
mov
lds
push
mov
std
cs
xor
add
fldcw
mov
nop
pop
test
mov
add
push
icebp
or
jno
dec
add
aad
jp
mov
fisttpll
out
push
jo
fdivrl
rorb
test
mov
and
push
xor
subl
cs
xchg
icebp
fcmovu
insl
sub
mov
pop
add
vmwrite
not
pop
clc
push
sub
mov
in
push
andl
mov
fmul
sbb
shlb
jno
xchg
mov
and
push
std
je
jbe
in
movsb
dec
mov
inc
fdivs
ret
mov
sbb
fucomip
mov
push
mov
test
sbb
dec
jne
or
mov
push
fldt
insb
out
mov
lods
ss
mov
pop
cmp
pop
mov
pop
in
scas
or
ljmp
push
and
aad
jne
xchg
into
popa
sub
sub
mov
sbb
ret
push
xchg
test
cmp
call
mov
into
cmp
ret
mov
lahf
mov
mov
sub
ss
je
leave
sarb
mov
aas
fcoms
or
xor
push
mov
les
pop
stos
and
imul
and
inc
sbb
or
clc
mull
xchg
add
mov
mov
dec
push
insl
je
or
cmpb
mov
dec
push
lcall
xchg
push
cli
mov
sbb
push
insb
inc
test
imul
and
cmp
subl
cmpsb
shlb
test
test
pop
nop
push
fldt
cld
push
mov
aam
cmp
sarl
ja
insb
and
xchg
push
imul
or
es
fwait
pop
or
and
sub
mov
adc
stos
xchg
jb
in
shr
jge
pop
scas
cmp
jge
pop
dec
cwtl
jbe
xchg
jo
inc
popf
scas
xchg
add
sbb
je
int3
scas
insb
daa
and
mov
mov
adc
inc
push
dec
cltd
fldenv
mov
jns
jmp
cli
addb
mov
mov
adc
mov
push
pop
int3
pop
test
jbe
add
xchg
sbb
shrl
in
into
lcall
movsl
xchg
outsl
inc
mov
mov
mov
pop
test
xchg
adc
and
pop
imul
lods
repz
pushf
sbb
mov
js
fisubrs
rorb
fcoms
mov
jbe
out
movb
jmp
mov
push
testb
hlt
xor
jnp
adc
mov
mov
jbe
stos
in
leave
xchg
adc
scas
or
inc
inc
aaa
mov
arpl
cmp
mov
mov
leave
lods
outsl
daa
adc
sub
out
xchg
sbb
in
inc
and
push
dec
hlt
fprem1
out
jge
fs
mov
mov
ja
adc
shlb
or
add
dec
iret
and
add
jbe
jo
add
std
in
sahf
jl
lock
adc
mov
xor
call
jnp
xor
inc
xor
push
mov
jmp
push
fcomps
jns
sub
or
dec
jp
iret
mov
fdiv
mov
bound
jne
lcall
cmpsl
mov
loopne
sti
dec
ja
mov
nop
ds
jmp
scas
push
das
out
mov
adc
movsl
xchg
mov
mov
fs
dec
jp
mov
pop
pop
fistpl
in
push
or
pop
mov
push
insl
push
mov
insl
cmp
mov
ss
add
cmpsl
cwtl
sub
or
mov
shlb
sub
mov
jl
or
cmc
mov
movsl
cmp
int3
lds
pushf
or
out
repnz
movsl
and
mov
xor
fnstenv
shlb
mov
cltd
mov
pop
orl
fiaddl
pop
xchg
or
jge
pop
mov
lods
sti
loopne
push
in
inc
xchg
lock
ret
jae
jb
popf
mov
ds
outsb
outsb
mov
loope
ret
xlat
push
mov
ja
adc
inc
test
mov
inc
sub
and
fldenv
inc
insl
jo
sarb
jmp
xor
jecxz
in
jg
int
mov
or
jmp
call
ljmp
dec
cmp
pop
lods
push
arpl
aas
mov
xor
mov
pop
cmpsl
gs
and
xchg
outsl
pop
add
ret
push
mov
rcrl
fsubrs
dec
inc
shll
cmp
fwait
cmp
mov
testb
cmp
dec
jb
insl
movsl
xor
sub
add
add
add
sbb
add
and
les
in
add
adc
pop
jmp
test
mov
and
cmp
cmp
jmp
push
pop
push
pop
mov
push
pop
mov
jno
mov
mov
ja
mov
jne
push
pop
push
pop
sub
cmp
jg
lea
push
pop
dec
lea
lea
sub
mov
inc
push
mov
add
mov
lea
lea
jae
jbe
jbe
push
pop
lea
inc
sub
cmp
cmp
push
pop
mov
mov
not
mov
mov
je
mov
cmp
push
pop
mov
xor
cmp
cmp
inc
xor
mov
mov
sub
not
sub
jmp
mov
mov
push
pop
inc
add
add
mov
xor
push
pop
xor
push
mov
add
cmp
mov
push
pop
xor
xor
mov
cmp
dec
inc
and
mov
push
push
pop
mov
cmp
push
pop
sub
push
add
cmp
mov
sub
jp
jl
inc
mov
push
jmp
cmp
test
push
pop
not
cmp
push
mov
add
push
pop
mov
lea
cmp
lea
push
pop
xor
pop
cmp
push
pop
add
jl
mov
push
pop
add
add
dec
ror
cmp
cmp
cmp
push
pop
push
pop
jmp
lea
jmp
lea
mov
mov
jl
push
pop
jne
mov
cmp
cmp
xor
jnp
sub
xor
lea
lea
push
push
mov
add
xor
js
push
jmp
and
jp
xor
test
cmp
mov
jmp
push
pop
mov
jae
push
pop
mov
mov
jne
push
pop
xor
and
mov
push
pop
jns
inc
dec
jnp
mov
lea
cmp
xor
push
mov
add
not
push
pop
mov
push
pop
mov
not
jge
jo
push
pop
xor
not
mov
sub
mov
pop
mov
call
cmp
push
pop
pop
test
sub
push
pop
mov
sub
jmp
pop
push
pop
cmp
jb
cmp
and
mov
push
mov
add
js
mov
mov
push
mov
add
mov
je
not
test
add
jmp
xor
sub
sub
ja
push
pop
and
xor
add
lea
cmp
and
cmp
jmp
sub
not
xor
cmp
mov
mov
cmp
sub
xor
cmp
ja
xor
lea
jle
push
pop
add
mov
js
not
jae
not
sub
mov
mov
pop
cmp
jmp
xor
mov
push
pop
not
sub
mov
pop
sub
mov
mov
add
mov
inc
push
pop
push
pop
js
push
pop
not
push
pop
mov
push
pop
mov
push
pop
xor
mov
jae
lea
sub
mov
pop
test
inc
xor
cmp
jb
push
pop
add
push
pop
mov
xor
xor
test
inc
push
pop
mov
mov
js
cmp
push
pop
push
pop
lea
xor
jmp
pop
ret
sub
cmp
sub
adc
and
add
add
in
add
add
and
add
and
orl
mov
aam
cmp
or
xlat
or
add
add
or
lods
mov
shl
ja
push
rcr
andl
aam
add
add
xor
fcompl
sbb
in
std
mov
add
pop
sbb
add
add
incl
mov
xchg
sbb
rolb
icebp
add
sub
add
aam
add
cmp
add
push
adc
cmp
rcrl
add
in
xorl
add
mov
dec
and
icebp
imul
mov
jns
inc
add
bound
jge
daa
jp
or
push
addr16
and
dec
add
and
aaa
lds
push
cmp
mov
in
in
fnstenv
divb
inc
out
fcompl
mov
xchg
mov
mov
lret
jo
sarb
xchg
repnz
sbb
sub
and
repz
or
mov
nop
mov
das
aas
push
out
mov
mov
ret
fcompl
lock
sbbb
sub
or
pop
pushf
addb
rcrl
jae
lods
xchg
lods
pop
ljmp
cmp
cmp
movsl
pop
cmc
stos
jmp
lahf
test
push
dec
sub
fistl
dec
mov
jg
lcall
clc
xchg
xchg
pop
loopne
push
lea
lea
stos
xchg
addl
sbb
add
xchg
movsb
sub
sub
xchg
sbb
lods
xchg
add
add
add
cld
mov
mov
push
or
lods
xor
sbb
bound
jns
jg
add
or
stos
movsb
ja
and
int3
incl
add
inc
jp
cmp
lods
push
subb
fsubrs
add
add
cmc
sbbb
add
add
or
scas
mov
add
add
sti
mov
sbb
rcll
add
xchg
lret
stos
inc
mov
test
ret
in
xor
test
mov
rorb
cmovo
leave
inc
mov
mov
adc
xchg
rorl
lcall
jnp
push
push
jmp
mov
in
mov
mov
dec
ja
add
lods
mov
mov
inc
lds
loopne
sbb
lret
sub
lret
sbb
and
andps
and
xchg
jns
test
lret
sbb
orl
lret
sbb
and
fidivrs
mov
lret
test
sbb
mov
lret
sbb
lods
mov
sub
xchg
lret
sbb
and
mov
lret
test
sbb
cwtl
xchg
lret
sbb
arpl
lret
sub
xchg
lret
sbb
and
and
jnp
lret
test
sbb
call
xor
cmp
lret
sub
xchg
lret
sbb
and
mov
lret
test
push
and
xchg
lret
sbb
scas
add
mov
dec
sbb
and
push
rorl
sbb
pop
xchg
pushf
and
out
pushf
and
add
int3
add
add
rclb
lret
xchg
lret
pop
out
push
ja
rclb
lret
mov
pop
dec
sahf
rol
jge
push
and
xchg
lret
xchg
lret
pop
pop
and
xchg
lret
sbb
and
xchg
lret
andl
xchg
lret
add
add
add
dec
add
mov
mov
add
add
add
add
push
dec
sub
and
xchg
lret
sbb
and
add
and
aas
add
add
stos
call
lret
xchg
lret
pop
lret
sbb
adcl
push
lahf
mov
add
fmull
fs
sti
add
add
add
lahf
stos
adc
and
add
add
add
mov
pop
jo
add
cmp
sbb
roll
add
add
add
add
pop
push
jg
mov
and
or
add
add
add
lahf
mov
es
lret
shll
push
mov
jg
lret
jae
xchg
lret
sbb
sahf
adc
sahf
rcl
aaa
dec
jg
add
mov
roll
sarl
or
lret
mov
add
shll
push
ja
incb
add
mov
mov
add
test
es
lret
mov
add
xchg
clc
das
lret
jae
xchg
lret
sbb
and
mov
lret
rolb
add
cli
mov
lret
add
add
lahf
mov
inc
lret
xor
push
mov
lret
sbb
and
xchg
popa
sbb
and
xchg
lret
sbb
and
xchg
lret
daa
mov
mov
jge
es
lret
add
lret
fldt
es
lret
xchg
neg
test
incl
add
adcb
test
add
mov
lret
add
es
lret
flds
adc
flds
add
add
xchg
clc
xchg
and
sub
test
cmp
ja
jns
add
aas
or
clc
push
jg
add
sub
push
ja
andl
xlat
cld
jns
andl
add
jg
cld
fldt
daa
bound
add
adcl
pop
jae
xchg
lret
sbb
arpl
push
cli
jns
jl
and
xchg
lret
sbb
and
mov
jg
jo
lret
sbb
jae
lret
add
es
lret
flds
adc
flds
sub
xchg
lret
add
lret
sbb
and
xchg
lret
sbb
lods
add
out
jne
push
and
mov
xor
es
lret
xor
or
sub
test
incl
add
adcl
jg
fmuls
sbb
lret
sbb
and
mov
add
push
and
xchg
lret
sbb
add
lret
add
insl
cwtl
push
and
mov
sbb
jmp
mov
jns
ja
jnp
push
into
jnp
push
add
ja
sub
roll
daa
mov
or
roll
sbb
lret
mov
loopne
pop
loopne
mov
and
sub
add
add
lret
jae
xchg
lret
sbb
lret
hlt
sbb
mov
add
sub
mov
add
add
adc
fwait
sub
push
jmp
and
mov
movsb
push
and
xor
lcall
ret
sar
loopne
stos
pushf
lret
xchg
sbb
rcrb
and
or
add
and
orl
or
add
and
xchg
xchg
movsb
es
lret
cmpl
jg
cld
xchg
xor
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
in
sub
jmp
sub
add
popa
add
lcall
add
cltd
add
or
add
incl
cmp
add
add
jg
add
pushl
add
lahf
cmp
add
add
pushl
add
inc
cmp
add
add
lcall
add
jo
add
xchg
cmp
add
decl
cmp
add
jb
gs
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jo
add
xchg
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sbb
add
sub
add
inc
xor
add
add
ja
add
xchg
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
imul
add
add
lea
add
sahf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
jbe
add
xorl
add
xor
add
xor
add
xor
add
xor
add
cmp
xor
add
jle
add
lea
add
test
add
mov
add
xor
add
fbstp
add
or
add
and
add
das
add
ds
dec
add
add
add
xchg
xor
add
add
shll
add
in
add
in
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jo
add
xchg
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sbb
add
sub
add
inc
xor
add
add
ja
add
xchg
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
imul
add
add
lea
add
sahf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
jbe
add
xorl
add
xor
add
xor
add
xor
add
xor
add
cmp
xor
add
jle
add
lea
add
test
add
mov
add
xor
add
fbstp
add
or
add
and
add
das
add
ds
dec
add
add
add
and
gs
outsb
fs
inc
imul
je
imul
gs
jae
push
gs
outsb
push
gs
js
gs
imul
gs
jg
push
imul
jae
jne
arpl
addb
gs
mov
gs
imul
outsl
arpl
jae
xchg
add
insb
jae
insb
insb
outsl
arpl
xchg
add
insb
jae
gs
popa
insb
jne
add
push
gs
popa
insb
jne
add
popa
outsb
fs
gs
js
gs
imul
gs
movsb
add
outsb
insl
popa
jo
imul
insb
add
je
popa
insb
inc
insb
insb
outsl
arpl
mov
je
popa
insb
inc
jb
gs
add
popa
imul
insb
gs
bound
arpl
add
imul
outsl
dec
jne
je
inc
jns
gs
add
jb
je
inc
imul
je
arpl
imul
gs
je
inc
imul
jb
popa
je
inc
imul
outsb
addr16
add
popa
je
inc
imul
jb
popa
je
dec
jne
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
inc
imul
gs
gs
inc
imul
imul
push
dec
imul
popa
insb
insb
jae
jmp
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
outsb
fs
gs
jne
arpl
add
inc
imul
jne
arpl
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
inc
jb
gs
imul
bound
inc
jb
gs
gs
jne
arpl
add
je
inc
push
add
inc
jne
jb
outsb
je
jb
arpl
jae
mov
inc
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jne
jb
outsb
je
push
dec
fs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
imul
out
add
je
imul
js
cmc
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
add
je
popa
jae
inc
jb
outsl
jb
adc
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
gs
jb
arpl
fs
jae
add
inc
gs
jb
arpl
jae
gs
jo
jo
inc
gs
jns
je
insl
dec
outsb
outsw
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
gs
jo
imul
add
push
gs
jo
imul
add
push
gs
jo
popa
je
inc
add
push
imul
je
mov
push
gs
imul
gs
gs
imul
mov
bound
dec
gs
outsl
jb
push
je
je
jae
leave
add
popa
jo
insb
insb
outsl
arpl
lret
add
popa
jo
jb
popa
je
add
add
popa
jo
gs
jb
jns
int
dec
gs
jo
jb
gs
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
ljmp
insb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
repnz
inc
popa
fs
outsl
fs
je
add
add
inc
popa
fs
gs
fs
je
add
add
inc
popa
fs
jb
je
push
je
add
add
inc
inc
inc
push
dec
gs
fs
jns
add
add
push
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
push
add
outsl
jae
dec
popa
outsb
fs
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
fs
imul
add
add
fs
gs
jne
arpl
inc
add
popa
insb
inc
jb
add
dec
outsl
arpl
gs
jne
arpl
push
add
jo
imul
insb
add
outsl
jbe
inc
imul
outsl
jbe
inc
imul
jne
je
inc
jns
gs
outsl
push
imul
test
dec
jne
jo
je
bound
push
je
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
mov
fs
imul
insb
gs
jae
dec
jne
gs
popa
add
insl
jo
jb
push
je
imul
push
je
push
outsb
ja
outsb
add
fs
insb
add
add
loopne
add
clc
add
adc
add
das
aaa
add
dec
aaa
add
arpl
add
jp
add
mov
add
sahf
aaa
add
mov
add
aam
add
clc
aaa
add
add
add
shll
add
loopne
add
clc
add
adc
add
das
aaa
add
dec
aaa
add
arpl
add
jp
add
mov
add
sahf
aaa
add
mov
add
aam
add
clc
aaa
add
add
add
outsb
add
inc
jb
popa
je
inc
imul
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
inc
imul
push
popa
imul
insb
gs
bound
arpl
add
insb
inc
outsb
jae
push
je
imul
imul
jb
outsb
add
add
insb
inc
js
outsb
fs
popa
jb
gs
outsb
je
addr16
imul
add
insb
inc
jb
gs
outsb
jae
push
je
imul
je
inc
jb
gs
outsb
imul
jb
outsb
add
add
insb
inc
push
dec
inc
inc
jb
insl
push
je
imul
je
dec
outsb
imul
add
push
je
dec
outsb
imul
gs
je
imul
je
push
outsb
imul
jb
outsb
addr16
outsl
inc
outsb
jae
push
je
imul
je
push
jo
popa
jae
push
outsb
imul
jb
outsb
addr16
outsl
dec
gs
push
je
imul
je
insb
outsl
jae
add
gs
xor
loope
add
repz
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
push
add
jnp
add
lea
add
cltd
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
push
add
add
add
loope
add
repz
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
push
add
jnp
add
lea
add
cltd
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
push
add
add
add
lahf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
bound
imul
add
fs
imul
add
jne
push
imul
out
inc
imul
outsl
ja
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
je
insb
addr16
je
insl
add
inc
gs
insb
addr16
je
insl
push
gs
push
add
inc
gs
imul
outsb
addr16
add
inc
gs
imul
js
push
add
imul
jae
bound
sub
inc
push
js
push
add
add
fs
je
imul
inc
push
gs
add
add
jae
popa
addr16
outsl
js
add
add
jae
dec
gs
popa
addr16
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
push
outsb
fs
gs
popa
addr16
add
gs
insb
addr16
je
insl
push
gs
push
add
push
gs
outsl
arpl
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
imul
outsb
addr16
add
ja
imul
add
outsb
dec
gs
jo
add
add
jo
imul
fs
jo
xor
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
outsb
push
jb
arpl
jae
outsl
imul
scas
add
outsb
push
push
push
outsl
imul
lret
gs
insb
outsl
jae
dec
gs
jecxz
push
gs
jo
outsb
dec
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
push
gs
push
push
outsl
imul
jae
gs
insb
xor
add
add
add
add
add
add
add
gs
outsl
insb
fs
popa
je
push
add
insl
fs
xor
add
add
add
add
js
add
add
add
or
inc
gs
jo
outsb
inc
imul
add
xor
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
push
popa
jae
dec
gs
inc
jb
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
or
push
jb
jo
popa
jb
popa
outsb
je
insb
gs
jb
or
jo
popa
jb
popa
outsb
je
outsl
jo
add
add
push
dec
inc
inc
jb
insl
push
je
imul
