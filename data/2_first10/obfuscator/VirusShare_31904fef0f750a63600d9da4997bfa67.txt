or
add
add
add
nop
cmpsl
add
add
add
cmpsl
add
add
add
add
add
jo
add
add
add
add
add
add
jo
and
in
mov
cmpsl
add
mov
cmpsl
add
mov
add
loopne
cmpsl
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
das
xchg
mov
jg
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
push
add
adcb
rclb
pop
add
add
pop
into
and
add
outsl
std
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
mov
test
jno
mov
cmp
cmp
out
lea
sahf
scas
lret
loope
adc
mov
add
adc
es
inc
xor
and
push
aas
mov
mov
cmp
mov
in
mov
mov
in
pop
push
test
adc
insl
jns
mov
cmc
std
pop
xchg
dec
mov
in
data16
add
mov
mov
dec
fldl
and
mov
mov
sbb
jge
sub
cmp
fs
lcall
ja
ljmp
jmp
ja
aam
cmp
pop
loopne
and
popf
pop
hlt
pop
xorb
leave
repz
sbb
out
ficompl
addb
aas
xor
mov
mov
or
les
mov
push
jecxz
pop
stos
aas
xchg
sar
adc
fcmovnu
push
pop
clc
push
push
imul
rcll
mov
movsb
mov
aas
les
mov
aam
jge
sbb
mov
add
cmp
jp
add
xchg
lock
das
xchg
mov
cmp
nop
jl
test
jge
cmpsl
loope
idiv
mov
ds
jp
xor
xor
cli
fldenv
hlt
cltd
mov
and
adc
or
mov
dec
sar
lods
sarl
push
lock
jg
bound
push
orb
mov
xor
sbb
sbb
cltd
adc
xchg
orl
std
add
pop
xchg
push
negb
xchg
addr16
sbb
ds
xchg
lods
adc
mov
rcl
adc
jns
jb
sti
leave
push
add
adc
popf
or
fs
into
test
subb
outsl
inc
dec
les
mov
mov
out
jmp
adc
cmp
insl
mov
dec
in
adc
scas
add
xchg
out
sbbb
mov
iret
aas
add
xchg
mov
mov
insb
repnz
mov
push
lret
ljmp
popf
cmpsl
loopne
jle
xor
rcl
test
cwtl
cli
arpl
adc
stos
adc
inc
aas
divl
lahf
outsl
xchg
pop
into
lds
jecxz
mov
lods
add
scas
mov
jnp
pushf
les
pop
leave
lds
push
push
pop
or
call
iret
loope
xor
aaa
fdivs
ffreep
pop
leave
scas
lds
fisubrs
push
and
push
in
add
xacquire
loop
aas
mov
mov
adc
fidivrs
jmp
add
push
imull
sub
js
cmc
xchg
dec
jb
pusha
xor
jp
xchg
shr
arpl
jb
adc
xor
adc
test
jg
and
jo
jbe
push
and
fadds
sahf
sub
arpl
lock
out
xchg
out
push
push
leave
xor
enter
pop
jp
xor
test
jae
mov
test
dec
or
jnp
int3
push
out
pop
daa
dec
adc
mov
add
cld
or
sbb
inc
test
insb
adc
lods
popa
aas
divb
enter
xor
jmp
mov
aas
test
lret
xor
push
xchg
stc
movsb
mov
cmp
push
sub
ficompl
pop
adc
in
mov
mov
sbb
ljmp
dec
add
and
hlt
call
fisubs
xor
fldenv
cwtl
jmp
repnz
shl
adc
xchg
mov
mov
insb
out
test
outsl
mov
and
into
inc
add
nop
dec
jae
mov
ljmp
cmp
mov
cmp
popf
mov
xchg
loope
or
std
ficoms
jae
mov
inc
sbb
mov
insb
cli
mov
mov
xchg
jge
movsb
pop
pop
add
fwait
add
xor
sub
cmovle
push
fldenv
movsl
pop
cmpb
mov
arpl
pop
xchg
pop
fnop
or
dec
aas
nop
lahf
adc
aad
xchg
pop
pop
sub
hlt
in
xor
mov
xchg
scas
or
fstl
inc
out
xchg
fsubrl
or
push
cmc
pusha
roll
aad
pop
adc
and
xchg
add
push
push
cmp
imul
pushf
ljmp
or
or
or
lods
out
sub
jg
sahf
push
xor
push
sub
flds
inc
jg
xchg
mov
jbe
stc
sub
xor
pop
jbe
aad
mov
and
cmp
or
jg
gs
sbb
lods
imul
incl
out
mov
sbb
hlt
lds
xorl
rcrb
or
cmp
mov
mov
mov
mov
lret
adc
inc
inc
mov
inc
push
movsb
cmp
ljmp
pop
mov
and
loope
les
pop
xor
int
pop
xchg
dec
fstl
dec
pop
in
cmp
mov
sahf
push
xchg
adc
int
clc
aad
xlat
xor
pop
or
dec
call
mov
iret
in
dec
out
movsl
fsubl
cmpsb
mov
scas
cmp
push
sbb
das
ja
push
rorl
push
jecxz
pop
test
rcll
dec
or
loop
addr16
pop
stc
xchg
sbb
pop
rcl
mov
sub
and
sahf
mov
jo
dec
aad
jecxz
outsb
ljmp
aad
adc
pop
add
and
addb
repz
ljmp
sub
jne
dec
adc
cmp
fisubs
lcall
sub
mov
pop
popf
js
fadd
xchg
cmp
out
sbb
and
incl
add
sti
lock
dec
gs
pop
xor
inc
dec
js
fcomps
add
sbb
fisubrl
cmpsl
xchg
lcall
loope
fiaddl
push
in
out
insb
lds
dec
xchg
or
loopne
imul
shlb
daa
fcmovbe
pop
jb
fcmovnu
jmp
and
and
pop
adc
xchg
insb
add
mov
xchg
sahf
in
lock
andl
mov
or
lods
mov
repz
and
movsl
dec
sbb
sbb
add
dec
mov
cmp
mov
and
dec
and
jge
scas
dec
ss
mov
xchg
popf
pop
or
mov
jbe
inc
outsb
sti
aas
push
ja
dec
sub
mov
mov
sbb
into
pop
push
jp
lds
push
bound
pop
jmp
dec
negb
or
sbb
pop
shll
aam
sahf
dec
push
sti
jbe
lahf
mov
push
push
add
xor
lods
push
lods
dec
sahf
mov
lds
sbb
cli
scas
adc
cmp
inc
jmp
pop
out
ja
sub
mov
mov
lods
lcall
into
das
push
inc
fiadds
cmc
lods
mov
in
pop
push
mov
lods
xchg
mov
pop
mov
mov
push
lret
sbb
push
push
dec
pop
jg
loopne
clc
out
sub
cmp
and
clc
test
xor
mov
add
dec
adc
inc
imul
gs
ljmp
in
push
push
mov
pop
cmpl
push
xor
shl
in
jmp
jecxz
fsubrl
fwait
iret
sbb
xor
sbb
inc
inc
cmp
push
mov
enter
scas
js
mov
xlat
addb
cmp
push
push
ret
fld1
dec
enter
xchg
idivl
cld
mov
cld
js
dec
push
sub
adc
cmpsl
insb
pop
mov
mov
mov
movsl
inc
sbb
jb
sbb
dec
xchg
addr16
repnz
mov
movsb
jl
sbb
dec
and
xchg
mov
cmp
clc
repnz
mov
adc
mov
push
in
jl
subb
inc
cmp
xchg
outsl
iret
ja
les
lahf
push
jmp
mov
cltd
cmp
mov
and
ljmp
sub
int3
push
aad
sub
inc
pop
xor
sahf
pusha
gs
jb
enter
fisttpll
mov
in
push
jecxz
push
test
push
mov
xchg
rcrl
pop
mov
pop
jecxz
dec
popa
cld
and
aas
incl
inc
adc
jns
sbb
sub
jb
pop
xor
push
les
cli
pop
lods
mov
cmp
add
push
fmull
out
repz
mov
dec
push
dec
cmpsb
repz
dec
or
mov
ds
leave
mov
shlb
fwait
cmp
sub
fwait
cmp
shlb
int3
lock
inc
and
fldt
call
add
out
lock
and
inc
mov
push
jae
lahf
mov
sub
inc
iret
rolb
dec
dec
mov
adc
sti
cld
push
lea
outsl
mov
xchg
test
cmp
sub
mov
sub
jbe
and
sbb
jle
div
push
sahf
mov
inc
jns
lret
xor
push
lret
idivl
and
dec
stos
loop
mov
sahf
out
bound
cmp
stos
out
xor
das
mov
adc
pop
dec
popf
jecxz
sub
jl
sbb
arpl
cmp
cwtl
dec
mov
and
inc
sahf
jg
adc
negl
inc
or
add
mov
lahf
mov
movsl
add
jns
inc
cmc
mov
sbb
scas
adc
lret
push
mov
testl
jmp
hlt
pop
inc
lods
sub
not
pop
sbb
imul
sbb
mov
aad
popa
mov
sbb
enter
add
es
outsb
mov
cs
push
popa
add
inc
int
lds
push
add
mov
sbb
mov
insl
out
push
ret
xlat
mov
fcomps
repz
mov
add
into
jbe
addr16
sub
sbb
hlt
push
mov
xor
lret
or
pusha
jmp
fldenv
enter
or
jb
ficoms
mov
pop
inc
mov
mov
mov
addr16
das
xchg
cmpsb
and
and
jecxz
xchg
loop
sub
jp
mov
adc
mov
fimull
sbb
sbb
cld
ja
outsb
test
pop
pop
jle
xchg
mov
or
test
adc
jo
inc
sub
jecxz
shl
push
int3
cmpsb
stc
in
cmc
sarl
out
pmaxsw
cmp
dec
mov
and
mov
add
sbb
clc
lcall
ja
fisubl
mov
inc
xor
push
jae
mov
lods
cmp
jp
and
sbb
or
loope
mov
and
jmp
fsubl
adc
cli
mov
pusha
cwtl
mov
in
popa
lea
jmp
sub
dec
push
fwait
mov
lcall
and
popa
jl
mov
out
xchg
inc
loope
inc
jg
test
sahf
jae
jle
jno
xchg
icebp
jnp
ret
mov
js
dec
test
xchg
push
inc
jecxz
lret
es
loop
pop
push
sbb
in
jnp
pop
out
stc
xchg
ds
out
daa
inc
sub
iret
mov
add
or
ret
adc
cmp
adc
xor
adc
mov
pop
mov
cli
and
fidivrl
dec
hlt
inc
hlt
shll
nop
add
add
popa
arpl
les
push
ss
pop
mov
add
or
pusha
incb
jno
sbb
xchg
adc
fldt
fdivrs
cmp
add
ss
sub
mov
lret
mov
dec
lret
or
add
outsl
aas
shll
ljmp
ror
std
into
pop
int
jp
lods
es
fs
es
sahf
lret
repz
roll
and
fdivrl
rcll
sbbb
cmp
cmc
mov
mov
xchg
sbb
into
outsb
fwait
dec
popa
inc
cld
aas
test
jl
in
push
push
mov
enter
pusha
cli
test
dec
out
xor
ljmp
shrl
mov
push
adc
outsb
mov
and
push
push
repnz
pop
sar
mov
mov
aad
pop
push
sbb
mov
iret
add
push
test
sbb
jg
xor
xchg
lret
push
jg
push
ret
iret
scas
jl
or
and
fcom
mov
xchg
jg
ljmp
imul
imul
in
jbe
push
jae
add
pop
xor
pushf
cmp
sbb
xchg
ljmp
push
pop
loop
push
mov
cltd
pop
orl
btc
rorl
in
pop
scas
sub
inc
outsl
and
or
icebp
push
fcomp
dec
push
aam
out
jae
pop
push
jbe
icebp
sbb
push
sbb
sbb
push
xor
int
cmpsl
bound
data16
in
cmp
sbb
pop
stc
xchg
push
inc
decl
mov
cmp
repnz
jle
pop
mov
ret
fisubl
push
test
xor
pop
push
sub
mov
add
outsl
jecxz
push
bound
rorb
ss
xchg
jmp
scas
test
cltd
xlat
xchg
imul
pop
mov
push
pop
pusha
push
adc
out
dec
push
pop
in
sbb
inc
roll
std
inc
sbb
lock
mov
imulb
pop
sbb
popa
jecxz
or
dec
mov
mov
sbb
scas
xor
das
pop
cmpsl
ja
jns
lcall
jae
mov
adc
jle
cli
lock
and
fadd
rolb
rorb
sbbb
mov
in
and
mov
mov
fistps
pop
sbb
dec
mov
cmp
cwtl
call
pop
jo
rolb
inc
popf
mov
mov
int3
enter
dec
andb
lock
lahf
ja
aas
sub
movsl
js,pt
inc
subb
icebp
pop
test
shll
ss
fisubs
sub
stos
mov
sub
xchg
add
imul
js
jle
lock
repnz
leave
lock
int
lds
inc
xchg
push
pop
addr16
lret
outsl
aam
xchg
push
xor
insl
insl
aad
lods
cmc
loop
inc
inc
mov
cltd
mov
repnz
fs
sbb
xchg
outsl
mov
push
shlb
test
add
sbb
cmp
test
mov
cmp
push
mov
in
push
mov
es
mov
fisttpl
fisttpll
test
cmc
sbb
adc
jno
test
outsl
loope
loopne
push
sub
ds
sbb
addr16
push
and
add
out
push
push
jne
cmc
adc
jge
fldt
lock
int3
mov
mov
xor
adc
popa
pop
or
call
cmp
mov
jecxz
mov
lods
adc
lds
xchg
sub
scas
sbb
jb
mov
xorb
sub
or
jno
cmc
mov
cmpsl
and
add
sbb
dec
sbb
sub
fmul
push
or
or
push
stos
cwtl
inc
mov
mov
out
enter
mov
xor
lds
hlt
out
pop
icebp
inc
mov
sub
or
das
cmp
movsl
adc
test
mov
imul
fisttps
push
cmp
fadd
pushf
sahf
inc
imul
push
inc
loop
stos
std
jmp
imul
pop
out
push
bound
clc
into
add
dec
fnsave
fmulp
insb
inc
lret
adc
mov
shrl
cmp
imul
ret
push
gs
imul
mov
lds
mov
xchg
mov
out
ret
or
movsb
adc
aaa
xor
mov
shlb
jb
mov
and
std
sub
mov
mov
xchg
adc
inc
dec
push
jae
push
cmp
iret
popa
jecxz
dec
adc
cmp
ret
pop
mov
pushf
pop
and
push
test
lret
sub
repz
xchg
clc
mov
push
pusha
stc
pop
hlt
mov
mov
mov
xchg
or
cmp
nop
outsb
cmp
push
mov
cmp
fcomip
std
and
stos
mov
and
loope,pt
lock
inc
insb
imulb
into
lods
cmp
xchg
xor
pop
in
repz
pop
add
ret
xchg
insb
inc
jns
insb
sti
jne
lcall
jg
lret
popf
popa
cld
adc
or
addr16
jb
mov
mov
ror
and
inc
popf
cmpsb
push
ljmp
aad
xor
push
popf
cltd
dec
sarl
lods
adc
je
xchg
adc
andl
or
daa
sub
mov
and
call
loope
stos
pop
call
fisubrl
fisttpl
jp
or
fldt
loope
or
mov
mov
lcall
stc
ret
mov
popa
sub
xor
dec
out
cli
push
sbb
adc
es
cmp
out
arpl
and
ds
xchg
fwait
mov
pop
push
and
xor
pop
cmp
aaa
mov
out
cltd
pop
ret
bound
test
mov
movsb
xchg
mov
int3
sbb
iret
addr16
lcall
fstps
cmp
add
cmp
add
or
test
rcrl
bswap
aas
js
inc
mov
xchg
loopne
push
fadd
dec
push
es
repz
hlt
mov
xchg
jl
shll
ret
les
adc
mov
aaa
cmp
pop
cld
dec
fucomp
loopne
idiv
xchg
out
scas
dec
mov
xchg
pop
test
cmpb
out
mov
into
or
repnz
loope
xor
ret
jb
sti
out
adc
fdivl
jle
push
dec
pop
and
pusha
mov
das
cmp
insl
jecxz
xchg
or
pop
xchg
inc
add
dec
dec
movsb
jmp
and
jmp
sti
pop
mov
cltd
xor
rcr
movsb
pop
pusha
jl
aas
sbb
test
xchg
add
xchg
mov
les
subb
mov
xor
jg
adc
mov
mov
loope
cld
ficompl
call
mov
push
xor
js
andb
icebp
cli
push
inc
xor
out
fwait
inc
sub
loop
inc
addb
addb
aaa
adc
or
mov
dec
loop
jecxz
pop
jno
xor
pop
add
adc
ss
cmp
clc
fadds
and
jge
add
sbb
add
ret
iret
xor
div
push
adc
cmpl
mov
cmp
notl
sub
sbb
pusha
xor
add
lods
repnz
push
xchg
shlb
aam
fstps
aas
pop
push
inc
or
push
jae
mov
cltd
dec
scas
cmc
daa
cwtl
mov
rorl
jecxz
loop
lret
xor
sub
push
rorl
mov
cmp
mov
scas
aad
repnz
cwtl
and
out
mov
cmp
lea
push
ds
sub
mov
mov
jp
test
push
iret
push
or
sti
ret
cs
test
mov
pop
inc
cmc
pop
nop
aam
dec
cld
xchg
mov
xchg
jle
movsl
repnz
push
je
loope
in
call
xchg
mov
mov
push
and
xchg
add
lods
cmp
mov
xchg
lret
sahf
sub
cwtl
mov
add
adc
push
cmp
pop
ljmp
inc
stos
cmp
push
pushf
pop
mov
cmp
push
mov
pop
rorl
sub
dec
mov
mov
xchg
sbb
cmc
fcomps
cmp
mov
ret
std
gs
inc
stos
mov
xchg
out
sub
xor
mov
shlb
mov
pushf
pushf
push
add
jecxz
sub
mov
adc
xchg
fsubrp
mov
adc
and
cmp
sub
add
shr
ret
push
cld
ficoml
into
inc
inc
loop
jae
vpsubusb
mov
fsubrs
pop
cmpsl
add
mov
inc
pop
mov
jb
addr16
mov
cmp
outsb
inc
or
inc
std
cld
add
ja
xor
cmc
fcoml
pop
dec
lock
push
pusha
mov
fs
loop
test
addr16
jo
or
shrl
mov
pop
iret
jno
mov
sub
pop
test
jmp
ficoml
pop
push
ljmp
out
loopne
in
jg
or
jb
scas
insl
and
pop
int
pop
add
pop
imulb
adc
push
lcall
into
lahf
dec
pop
push
repz
inc
xchg
in
jmp
cmc
mov
loopne
mov
mov
xchg
inc
in
je
rorb
inc
xor
pop
mov
dec
push
xchg
test
pop
xchg
fs
mov
push
adc
pop
scas
or
aaa
leave
insb
pop
mov
or
stos
out
and
or
mov
sbb
dec
push
daa
pop
or
popa
roll
jae
lcall
dec
mov
cmp
xchg
ljmp
outsl
fs
test
lret
inc
pusha
mov
jge
aas
pop
mov
sub
sahf
ds
jecxz
jp
pop
cmp
inc
sub
add
add
sub
xor
std
xchg
imul
add
push
push
cwtl
and
mov
scas
xlat
pop
repnz
mov
cmp
dec
inc
add
in
ss
ret
push
and
lret
dec
pop
dec
fisubrs
dec
pop
jae
xchg
es
in
testl
mov
sub
dec
and
movsl
pop
pushf
lret
out
popf
or
in
add
xchg
xor
fistpll
ret
push
lds
push
lahf
js
inc
mov
popa
jl
mov
mov
ljmp
popa
shrb
mov
movsb
gs
popa
mov
or
cmp
in
outsb
and
inc
inc
insb
popf
imul
jg
push
inc
iret
and
adc
add
dec
lahf
push
xchg
fdivrs
jl
push
pop
test
fstpl
in
les
push
sbb
sti
out
and
pop
into
lcall
xor
mov
xor
pop
int
rcl
test
or
adc
jecxz
xchg
repz
cld
sub
ljmp
test
int3
jmp
inc
push
sbb
jno
xchg
fidivs
ds
clc
inc
and
negb
push
xor
ret
lahf
aad
mov
ljmp
pop
mov
fadd
add
ds
xor
push
test
or
mov
ret
pop
or
ljmp
push
in
add
fwait
iret
mov
es
cmp
xchg
dec
jb
fistpll
dec
pop
xchg
mov
das
scas
and
sub
inc
jle
jbe
cmp
sbb
mov
sbbb
rdmsr
in
sahf
ljmp
loopne
shr
pop
in
jle
sbb
mov
and
and
inc
inc
and
dec
or
test
adc
push
cmp
test
div
jg
gs
out
xchg
jbe
pop
cmp
rcrb
push
outsl
or
xchg
out
hlt
pop
push
add
pop
xor
mov
das
pmulhw
mov
xlat
ljmp
pop
mov
or
jg
sub
out
lahf
jno
aas
repz
insb
orl
ja
cmpsb
stos
mov
dec
dec
or
adc
clc
xor
push
push
mov
dec
ss
mov
xchg
out
movsb
imul
enter
popf
add
in
mov
imul
push
xor
inc
mov
mov
mov
mov
pop
inc
int
sub
aad
push
or
add
notl
dec
divl
outsb
aam
mov
or
lcall
imul
cmc
pop
movsl
insb
mov
bound
and
and
sub
andl
cmpsl
jns
or
dec
sti
jo
xor
push
jno
pop
fnstenv
adc
xor
cs
mov
aad
and
jmp
stos
jno
sbb
jo
xchg
sub
bound
lahf
dec
dec
orl
mov
mov
sti
or
xor
inc
pusha
cmpb
mov
xchg
push
mov
orb
lds
int
cmpsb
add
out
mov
into
pop
inc
out
outsl
out
push
jmp
ja
ljmp
add
fisubrs
loope
outsb
inc
pop
fs
jb
loop
push
pop
ljmp
loop
mov
lcall
adc
sbb
neg
cmpsb
xlat
mov
shll
dec
lods
repnz
sub
sbb
clc
dec
das
sbbb
dec
les
cs
addr16
adc
hlt
es
lds
sar
aaa
aas
negl
sbb
sahf
aam
rcrl
pop
xchg
insl
out
jg
loop
xor
sbb
mov
jl
lahf
pusha
push
mov
mov
dec
cmp
xchg
fdiv
sbb
std
ja
mov
mov
push
pop
xlat
sub
movsb
fiaddl
mov
insl
imul
xchg
add
adc
lea
inc
data16
das
dec
xor
mov
pop
insb
es
subl
or
aaa
sbb
push
xor
push
leave
pop
imull
mov
js
jg
outsb
scas
mov
loope
pop
mov
cmp
pushf
push
rcr
push
lahf
jp
fnsave
fstpt
inc
loopne
xor
jb
fcom
leave
pop
inc
push
and
les
arpl
int
mov
cld
push
pop
popa
jmp
dec
dec
movsb
pop
xchg
push
xor
push
adc
mov
cmp
pop
inc
imul
push
fcmovnu
popf
mov
test
shrl
xlat
je
paddw
add
les
es
loop
mov
mov
inc
movb
outsb
test
xor
sbb
jmp
lods
int
lods
mov
fsts
mov
imul
push
enter
inc
mov
sbb
loopne
xorb
mov
jnp
jo
pop
dec
cwtl
mov
test
xor
cmpsl
ficoms
mov
xchg
mov
push
fsubr
inc
mov
scas
out
popf
jo
adc
and
jnp
jg
pusha
into
or
fcomps
negl
push
pop
mov
push
loopne
sub
ja
or
cmp
jbe
adc
mov
pop
jp
mov
cmp
or
xchg
or
scas
dec
or
jmp
filds
loop
fs
insl
mov
jns
aad
adc
mov
shll
inc
inc
movsl
test
imul
add
fldcw
dec
pusha
pop
addb
mov
add
lock
xchg
jecxz
sub
and
aas
and
mov
clc
cwtl
push
add
sub
lods
xor
subb
les
aam
jns
push
mov
shrl
adc
adc
das
imul
fsubp
mov
cmc
or
xor
imul
dec
mov
inc
pop
push
in
mov
inc
inc
add
mov
sbb
pop
push
bound
xor
xchg
out
aad
sbb
xor
std
pop
fs
aas
movsb
dec
iret
cs
movsl
sbb
sahf
push
bound
lock
jle
sbb
cs
cmp
jo
dec
mov
sub
sub
shlb
lret
test
cmpsl
mov
loope
fsts
mov
mov
gs
insl
lret
add
int
add
out
or
in
mov
push
dec
shl
xchg
sub
xorl
jg
cltd
sub
movsb
iret
cmp
mov
add
push
mov
cmp
outsl
jecxz
test
aaa
ret
out
icebp
jnp
mov
add
xchg
mov
out
lret
sbb
loopne
stc
or
fs
mov
insb
mov
sub
loop
sbb
push
int
pop
jg
icebp
and
mulb
ret
ficoml
and
push
das
sbb
cld
adc
push
imul
push
test
fwait
pop
lret
cli
lahf
xchg
mov
lods
mov
movsl
xor
fistps
insb
clc
pop
sar
cmp
in
pop
mov
repnz
add
movsb
sti
insb
ret
mov
out
cmp
push
gs
ss
dec
cmc
fcompl
adc
inc
clc
cmp
icebp
cs
push
test
lea
in
xchg
movsl
mov
cmp
or
pop
push
lret
push
mov
cmp
and
fisubl
jl
push
lahf
inc
push
fxch
test
int
xchg
dec
xchg
iret
lods
test
jno
sbb
dec
out
out
xchg
jg
pop
inc
push
pop
adc
fstl
dec
lods
cmp
add
adc
sub
sbb
push
add
pmulhuw
jnp
mov
add
jb
not
dec
rclb
sbb
and
dec
cmp
cs
aaa
icebp
push
btc
shr
pop
jnp
stos
mov
jnp
push
adc
adc
outsl
test
or
lret
and
mov
imul
push
cs
lcall
ret
push
jb
jmp
sbb
sbb
in
and
je
pop
or
cmc
imul
movsl
aas
fistl
mov
jne
xor
fdivl
xchg
stc
sub
dec
arpl
inc
mov
adc
int3
jp
std
aas
enter
ret
push
lods
mov
inc
mov
out
and
xchg
cwtl
push
mov
mov
pop
cmp
popf
xchg
push
jge
push
fs
pop
mov
push
inc
mov
popf
fdivrl
jo
cs
add
rorb
imul
in
lods
loopne
je
dec
pop
mov
cld
cmp
fwait
xchg
data16
sahf
xchg
adc
es
jae
and
call
dec
and
shll
in
loope
pop
add
push
dec
movsl
or
cmp
cmp
sbb
mov
mov
jle
cmp
mov
fistpll
pop
pusha
mov
xchg
xchg
dec
jecxz
pop
add
insb
jle
aam
jo
and
cs
out
jb
pop
in
addr16
inc
adc
nop
inc
jl
lock
cs
arpl
cmp
dec
mov
jnp
xchg
dec
arpl
adc
mov
call
mov
mov
sbb
int3
jne
push
or
lock
lock
stc
adc
or
cmp
test
cli
xor
shll
insl
leave
popa
fmul
data16
pop
cmpsb
pop
pop
sub
and
mov
rorl
mov
sub
fsubrl
xchg
xchg
inc
fucom
inc
les
and
jne
jecxz
cwtl
outsb
push
dec
icebp
repz
xor
lea
shll
pop
mov
std
lea
in
xchg
pop
out
lahf
aas
adc
mov
inc
mov
aam
jns
add
shll
repnz
scas
jmp
mov
das
dec
cmp
cmp
pop
push
inc
inc
jno
insb
je
daa
sub
loope
cmpsb
cmp
cmp
fwait
or
sbb
mov
stos
cli
les
mov
mov
mov
adc
jb
enter
ljmp
or
mov
sbb
mov
jl
dec
in
pop
and
pop
lahf
lods
push
dec
sti
xor
loop
movsl
iret
adc
cmp
sbb
lock
sbb
sub
mov
dec
jp
std
xchg
insl
repz
mov
dec
in
mov
pop
ds
pop
enter
fwait
lds
sbbb
jmp
push
stos
into
mov
push
adc
cmpsl
xchg
mov
fisttps
mov
mov
and
stc
je
inc
or
push
pop
int
shll
mov
insb
and
mov
pop
jle
jg
adc
popw
mov
inc
in
mov
dec
jg
clc
dec
adc
sahf
jae
xchg
inc
or
addb
in
loopne
add
xor
stos
mov
xor
sub
mov
jge
xor
xor
jb
outsb
in
inc
sbbb
sahf
stc
pusha
sbb
cmp
xchg
out
movsl
ja
push
repnz
mov
loopne
inc
les
arpl
inc
iret
imul
xchg
mov
test
pop
roll
cmp
push
aad
pushf
ret
pop
lock
sbb
in
in
fnsetpm(287
xchg
js
sub
add
adc
dec
sbb
imul
inc
mov
pop
gs
mov
push
loopne
cmp
outsl
lea
in
adc
cltd
fsub
data16
cs
cmpsb
into
out
icebp
gs
add
and
nop
push
sub
xor
and
or
xchg
or
inc
xor
and
out
xor
mov
repnz
xor
xchg
jecxz
lcall
push
lahf
das
cmp
push
test
jb
jl
or
push
int3
gs
ljmp
addr16
adc
push
sti
popl
jecxz
rcr
push
jbe
jo
and
mov
ja
movl
sbb
clc
lahf
addb
xor
adc
adc
xor
lea
daa
fwait
push
mov
push
bound
mov
pop
pop
das
es
loopne
jle
inc
rcr
sbb
xlat
mov
bnd
out
iret
repz
movsl
fimuls
push
das
jl
mov
lret
adc
mov
push
adc
lcall
dec
fstl
imul
cld
push
pop
aaa
or
out
cmp
and
adc
outsb
inc
mov
inc
adc
sbb
ljmp
fwait
mov
adc
or
push
mov
pop
or
jmp
cld
xor
xor
mov
aad
je
xchg
mov
jne
mov
movsl
jbe
and
xchg
or
std
inc
negl
leave
nop
lods
ret
lock
add
ficomps
cmp
out
loopne
scas
aaa
cmc
jecxz
fadds
lock
popf
pop
out
imul
xchg
dec
xchg
push
sbb
lcall
ja
js
ljmp
loop
jp
dec
fld
ja
clc
xor
cwtl
sub
or
lea
jae
cli
push
imul
les
jle
out
cmpsb
ud0
into
push
cld
xchg
jle
fidivrs
sbb
inc
popf
arpl
mov
jne
movsb
pop
mov
adc
insl
fneni(8087
imul
jb
fs
cld
lds
dec
pop
jb
data16
add
sub
rcrl
testb
fisttpl
js
shlb
imul
ljmp
mov
push
push
and
jno
out
add
add
ja
push
lea
or
mov
cltd
or
dec
rorl
pop
ljmp
mov
test
cmp
mov
movsl
pop
push
test
inc
clc
out
dec
and
push
push
and
dec
out
lcall
ljmp
rcl
push
push
add
pop
xchg
test
lea
push
mov
mov
or
fwait
cmp
test
movsl
aad
sbb
mov
push
pop
jl
xchg
insl
xchg
sbb
push
sbb
mov
jle
std
leave
decb
ds
mov
adc
cmp
or
sub
pusha
loopne
rcrb
adc
cmc
pop
cmp
stc
push
scas
sub
adc
inc
test
sbb
mov
movsb
xchg
popf
mov
add
cmp
and
aas
dec
or
arpl
test
add
into
push
cli
ds
lock
xchg
fldcw
sbb
repz
in
addr16
xchg
fldenv
arpl
sti
pushf
sub
out
fidivs
jle
or
mov
popf
or
sti
imul
jecxz
sub
shlb
shll
imul
add
push
push
push
add
dec
je
mov
cmp
outsb
cmp
or
in
pushf
and
shrl
xchg
mov
sbb
dec
mov
je
aas
lcall
iret
adc
movsl
adc
fisubl
imull
or
int3
orb
hlt
dec
inc
cmp
aaa
xchg
jb
loop
or
inc
mov
dec
mov
lods
push
imull
cmpl
mov
call
push
dec
lea
dec
mov
xchg
mov
loopne
in
and
adc
jae
jno
push
insb
shll
lret
adc
sub
pop
sub
lods
push
arpl
dec
fldenv
cmp
negb
call
addr16
out
cmp
mov
sti
and
hlt
or
pop
xchg
cmp
or
sub
push
cmp
lret
dec
xchg
pop
xchg
mov
adc
popa
mov
movswl
xchg
xchg
cmp
popa
cltd
jb
mov
push
ljmp
cmp
jne
pop
or
ret
jmp
cld
ja
cmp
les
add
mov
fidivrs
add
pop
sbb
sti
lods
push
cmp
movsb
inc
jo
jnp
sub
data16
loop
inc
pop
in
sbb
pop
lods
cmpsl
int
scas
pop
addr16
fucomip
push
sbb
jne
adc
dec
adc
imul
idivb
xor
mov
cmpsb
adc
or
add
imul
push
or
mov
movsl
xchg
xchg
xchg
cmp
sbb
aaa
cmovb
in
ret
jge
xor
jns
push
mov
jl
int
sbb
lcall
out
sub
push
scas
sahf
aas
lods
jl
cltd
cmpsl
push
ja
lods
outsl
push
push
mov
aaa
inc
mov
mov
xor
dec
cmpsl
iret
ret
insb
mov
or
push
daa
xor
ret
out
fnstsw
data16
jecxz
add
out
and
xchg
sbb
sbb
adc
xor
mov
notl
lcall
xchg
add
fistl
pushl
mov
adc
das
mov
jnp
data16
in
loop
mov
sbb
je
sub
cli
fldenv
xchg
sbb
in
aad
xchg
std
sub
out
jns
popa
shlb
shl
fucomip
flds
popa
imul
imul
imul
sbb
daa
insl
out
add
fstpl
mov
xchg
std
mov
mov
jmp
test
sub
xor
imul
adc
mov
push
fsubrl
nop
dec
mov
inc
sub
jg
xchg
xor
andl
cltd
sub
sub
xor
fcoms
in
cmpsl
stos
dec
icebp
xchg
movsb
rclb
ror
int3
nop
add
insl
test
inc
sub
push
lds
or
lret
les
push
jae
push
test
or
lret
mov
sti
push
scas
xor
lret
xchg
inc
ds
or
roll
pop
imul
mov
mov
rorl
mov
mov
arpl
dec
mov
lods
mov
aam
mov
pop
pop
pop
sub
sub
pop
lods
pop
mov
pop
push
dec
aam
xchg
test
mov
or
ss
fsubrl
pop
call
aas
int
add
push
pop
les
push
mov
push
pop
sub
test
inc
sub
fwait
or
sub
sbb
in
fs
outsb
push
fdivp
add
mov
popf
mov
jo
sbb
push
sahf
xchg
jne
shrb
sub
mov
jae
aad
pop
and
cmp
outsb
repz
enter
in
test
cmp
addr16
cmpsl
mov
inc
jmp
cmp
adcb
jg
into
mov
fsubrl
popf
shll
mov
cmc
shlb
fidivrl
rorb
sbb
jg
push
mov
mov
pop
ret
sbb
ret
lods
scas
and
inc
outsl
aas
bound
mov
popa
xchg
sahf
fidivl
xchg
pop
sbb
dec
fwait
insb
pusha
imul
mov
popa
stos
cmp
xor
pusha
jmp
sub
lret
gs
int
ud0
subl
and
add
sub
test
fiaddl
lret
loop
loop
jne
jle
out
popa
adc
push
test
pop
or
in
or
cmp
mov
pop
pmaxub
add
mov
hlt
adc
jno
or
std
lods
das
push
ss
in
add
sbb
mov
lods
cmpsl
fucomi
cmp
into
dec
xor
mov
pusha
test
adc
push
rcl
or
inc
fsubrp
mov
mov
inc
pusha
movsl
jns
subb
rcl
jae
mov
int
jp
aas
push
mov
xor
lcall
pop
cmp
adc
jno
ret
ja
pop
fbstp
out
bound
sub
das
loopne
pop
sub
repnz
xor
inc
sbb
je
lahf
lods
rcrb
push
loope
or
push
cmc
andb
aaa
xor
dec
and
sti
and
into
add
stc
mov
xor
and
mov
xor
adc
mov
jo
and
sub
cmovo
lret
js
or
dec
sahf
add
mov
cs
cmp
push
mov
mov
scas
pop
test
jb
je
push
cwtl
jb
dec
test
clc
or
scas
popa
mov
jo
cmp
cmp
and
loopne
rorl
int3
jge
and
popf
mov
movsb
mov
andb
iret
sbb
mov
daa
je
inc
rcll
lahf
sub
out
lahf
ret
mov
js
mov
mov
push
pop
add
lock
xchg
sub
xchg
iret
les
pop
roll
sub
in
mov
pop
and
repnz
daa
and
adc
fucomi
dec
pusha
lods
sub
out
inc
mov
fnstcw
stos
in
addr16
sub
mov
call
pushf
sbb
inc
scas
xchg
add
add
out
es
out
lret
cmp
mov
rorl
addr16
loope
add
sbb
mov
inc
out
hlt
aam
adc
arpl
adc
dec
stc
mov
imul
pop
int3
outsb
cmp
add
sbb
outsb
subb
add
mov
sub
mov
dec
lea
mov
cli
fdiv
stos
pop
xlat
mov
rsqrtps
call
out
insb
xchg
push
das
or
clc
xorb
cwtl
mov
or
jno
push
ret
push
and
pop
subb
dec
fsubl
icebp
cwtl
insb
imul
pop
sbb
dec
fidivrl
cmp
cmp
das
cmp
std
cltd
jnp
sti
inc
outsl
sub
pop
in
jmp
pushf
push
jbe
xchg
push
jae
sub
jnp
jb
imul
fistps
mov
imul
mov
jecxz
push
add
in
adc
xchg
aad
sub
int3
mov
cwtl
mov
or
mov
sub
mov
ss
ss
xor
or
ss
in
fs
out
inc
test
fldcw
add
lds
fbstp
popa
push
sti
cmp
jns
test
cmp
cmp
lods
mov
and
xor
mov
xor
add
test
adc
adc
insb
dec
in
pop
pop
jmp
dec
add
add
sub
xor
inc
xor
cs
xchg
scas
inc
cld
add
sub
movsl
jo
mov
outsb
jo
mov
and
insl
jle
mov
dec
push
cmpsl
sub
push
sub
call
lcall
je
js
loop
bound
mov
adc
in
call
sub
cmp
mov
das
lret
sbb
mov
cmp
dec
jmp
aas
jge
push
cmp
call
lret
stos
adc
scas
ret
lods
mov
mov
adc
loop
inc
test
or
jl
mov
cli
lcall
int3
sbb
cltd
inc
and
das
cmp
pop
scas
xlat
xchg
xchg
cmp
mov
mov
xchg
sub
fcmovbe
push
sub
decl
cmp
test
or
mov
or
jmp
cmp
lret
lahf
cmp
int
xor
popf
xlat
sub
movsl
inc
push
and
inc
mov
aaa
ja
ljmp
xor
sub
pop
cld
inc
les
hlt
sti
jle
rorl
jbe
xchg
shrb
xchg
insb
and
xor
sub
add
pop
push
xor
jmp
jnp
outsl
pop
sarl
push
xchg
dec
xor
hlt
iret
push
mov
mov
cwtl
iret
mov
push
in
imul
add
cmp
test
cld
nop
pop
lret
cmpps
push
dec
fldt
fnstcw
xchg
jmp
sub
and
inc
cmp
cs
dec
fstps
aas
dec
cmc
cltd
ds
js
jle
adc
mov
leave
cmp
mov
aas
popf
out
jns
sbbl
fwait
scas
xchg
xchg
push
in
stos
add
push
inc
ja
loope
adc
xchg
ljmp
adc
out
lret
xchg
movsl
adc
mov
ffreep
ret
fisttps
or
lds
xchg
dec
cmpl
push
inc
ljmp
mov
jmp
outsb
in
push
test
clc
cwtl
imul
loope
cmc
xchg
leave
stos
loope
in
scas
movsb
subb
loop
jle
mov
jae
push
pop
insb
ljmp
add
pop
mov
xchg
adc
cwtl
pop
test
adc
stc
xchg
ret
dec
adc
mov
mov
dec
scas
lock
ret
jbe
pop
inc
shlb
pushf
and
jle
xchg
lcall
movsb
bound
or
adc
fwait
outsl
imul
dec
aad
lahf
or
outsb
xchg
inc
and
push
cltd
push
stos
jle
shr
sub
dec
imul
jb
cmp
jge
gs
shlb
mov
sbb
sbb
lock
in
test
fnstenv
dec
xchg
dec
in
mov
int3
push
imul
jae
ja
sub
jmp
inc
mov
sbbl
scas
mov
in
dec
or
into
add
call
dec
arpl
mov
push
pop
cmp
sub
push
pop
orb
in
jnp
xchg
mov
cmp
xor
xor
insb
push
jg
fs
icebp
ljmp
mov
add
push
inc
dec
cltd
aam
jbe
leave
xor
pop
cli
mov
xchg
cwtl
pop
adc
jns
fnstcw
mov
xchg
pop
inc
lcall
mov
jne
pushf
fnstcw
repnz
push
and
lret
repz
jge
nop
lock
mov
jp
or
les
ds
push
inc
xor
gs
pop
pop
shlb
arpl
mov
and
jae
mov
mov
xchg
mov
js
jp
sub
sahf
in
mov
jg,pn
cmp
push
or
pop
int
sbb
jb
sbb
push
std
ds
dec
or
xchg
mov
mov
fildll
mov
imul
cmp
mov
add
call
ja
outsb
mov
roll
and
mov
inc
cmp
scas
mov
jo
jle
pop
add
lods
out
and
arpl
xchg
push
pop
test
popa
mov
dec
xlat
sbb
adc
mov
jne
roll
aaa
std
or
clc
fmull
xor
add
lods
divb
ljmp
xchg
sbb
jb
push
pop
pop
clc
mov
aad
add
push
sub
pop
mov
jae
push
dec
inc
btc
lea
out
fisttpl
mov
aam
cmc
dec
js
dec
je
cmpb
leave
fdivp
decl
lret
aam
mov
push
jno
pop
jnp
xor
sbb
in
aaa
fs
ds
xor
push
pusha
call
cmp
sub
cmc
es
scas
inc
icebp
mov
orl
dec
ja
pop
pusha
fwait
mov
inc
pop
shlb
pop
cld
je
mov
adc
mov
das
or
sbb
in
ss
inc
sub
stos
ficompl
imul
int
mov
cmc
mov
loope
stos
aad
test
loop
popf
insl
mov
sub
xchg
ja
mov
rcrl
mov
mov
push
jl
fisttpll
outsl
push
xchg
inc
pop
sub
push
stos
and
dec
sbb
or
or
mov
sbb
inc
jg
roll
xor
pop
addr16
push
sub
sti
inc
ficoml
xlat
sti
mov
mov
xor
cwtl
sbb
mov
in
loope
ja
ret
out
and
sahf
jno
sub
enter
repnz
mov
and
sahf
adc
pusha
into
movsl
lods
lock
mov
or
cltd
inc
xchg
jmp
sub
insl
sub
shll
ds
cmp
and
lods
mov
test
sti
inc
jb
insl
scas
inc
insl
leave
dec
ds
sbb
push
push
mov
push
je
pop
andl
es
in
mov
pushf
adc
inc
pop
jbe
adc
insl
jmp
adc
jnp
mov
ja
daa
cmp
in
adc
insl
sub
pop
or
je
mov
dec
adc
enter
mov
int
ds
fisubrl
add
mov
xchg
ss
and
cmp
stos
pop
pop
aad
repz
pop
xor
mov
jo
jbe,pt
pop
stos
or
gs
sti
push
pop
pop
xchg
push
lret
pop
or
and
stc
call
lds
in
mov
adc
lock
and
cli
lcall
mov
add
sbb
stos
xchg
repnz
fldenv
bound
fld
mov
sbb
add
and
test
dec
decb
sub
popa
clc
nop
cmc
adc
sub
cmp
lahf
add
int3
push
movsb
jge
inc
sbb
aaa
push
jbe
inc
push
or
andb
inc
pop
negb
inc
mov
push
dec
dec
into
and
shll
mov
lods
loope
mov
pop
xor
pop
inc
je
add
xorb
into
cmp
xor
push
int
lods
jle
pop
jb
or
and
mov
andl
movsb
xor
mov
les
je
dec
cmp
push
adcb
jge
out
test
cli
psubd
sbb
mov
mov
test
ljmp
sub
lret
and
shlb
cmp
cwtl
movsl
testl
out
xor
pop
push
fsts
out
rorb
dec
sahf
ror
fidivrl
popa
pop
pop
lret
xchg
or
aam
loop
cmp
insl
mov
cs
sbb
rcll
test
push
xlat
call
adc
inc
out
adc
sbb
fdivrl
jns
xchg
sbb
leave
mov
ja
pushf
outsl
sub
lock
mov
filds
xchg
ss
fcomps
or
stc
jno
inc
or
test
adc
mov
data16
pop
popf
mov
movsl
pushf
testb
mov
je
fcomps
push
push
lahf
add
jno
xchg
adc
dec
out
mov
pop
fnstcw
in
insl
pop
xchg
in
adc
mov
and
andb
mov
sub
mov
out
mov
cwtl
jns
mov
ret
add
cmp
jo
xor
int3
clc
xchg
fistl
pop
mov
pushf
jbe
outsl
je
shll
enter
sub
inc
stos
es
sub
mov
pop
std
dec
push
sbb
rorl
mov
out
xchg
popa
and
inc
mov
stos
jo
lahf
jo
xor
xchg
xchg
outsb
push
loope
js
cmp
dec
xchg
nop
fld
fidivrs
mov
cmc
jmp
sub
pop
int
sti
cmpsl
loope
mov
and
xor
adc
notb
sar
jo
cmp
sbb
mov
hlt
jno
jne
cli
dec
jmp
xor
or
jno
std
jno
paddw
push
fnstsw
cld
or
in
cwtl
int
or
stc
or
pop
sbb
xchg
cld
ror
cmp
addl
clc
aam
xor
push
rolb
jne
fdivrs
sub
je
mov
int3
mov
mov
ja
inc
pop
pop
in
mov
jo
inc
mov
cmpsl
pop
pop
lea
xor
adc
jns
dec
xchg
pop
cmp
jnp
addr16
mov
aaa
into
pop
push
cmp
lahf
inc
lods
jmp
loope
fwait
cs
hlt
pop
sbb
out
push
jns
jg
adc
add
int
adc
push
int
and
pop
jne
repnz
mov
gs
ja
mov
stos
inc
lods
push
and
ret
jmp
js
xor
inc
lcall
lcall
dec
cmp
cmpsb
rclb
and
push
pusha
imul
push
in
loopne
mov
imul
adc
push
ds
ficoml
lods
xor
sbbb
push
es
lods
fnstsw
lea
sbb
outsb
pop
adc
mov
cmc
ja
jge
inc
cltd
xlat
mov
xchg
imul
cld
inc
adc
fs
mov
adc
movsb
pop
scas
enter
sub
jp
push
cmp
mov
iret
les
mov
and
jg
pop
and
iret
ljmp
imul
and
daa
add
xchg
sbbl
jg
scas
jecxz
notl
sub
adc
flds
add
rcrb
lcall
fadds
aas
arpl
fcomps
xchg
mov
mov
jmp
out
xchg
in
mov
adc
mov
jmp
mov
adc
sub
sbb
pop
cld
mov
pop
jo
jl
out
cmc
sbb
lods
sbb
stc
adc
lods
test
jnp
cmc
fcomi
lods
add
inc
int3
mov
or
sbb
adc
add
push
mov
gs
sbb
mov
pop
add
mov
or
sub
xchg
inc
xchg
imul
adc
mov
sbb
mov
dec
repz
popf
pop
insl
stos
fwait
dec
cmp
xchg
movsl
push
lret
push
ljmp
lret
xchg
mov
scas
add
mov
scas
iret
jmp
pop
push
inc
mov
adc
sti
popf
push
pop
and
jb
lock
and
push
jb
jmp
adc
or
adc
xchg
ss
jl
add
ret
xor
or
mov
adc
adc
cli
sub
mov
lock
dec
ljmp
and
fidivrs
mov
stos
mov
das
or
ret
mov
cltd
push
cmp
or
jno
imul
imul
lret
out
lret
jle
sub
push
add
mov
sbb
fmull
mov
sub
call
pop
mov
aaa
notb
out
hlt
pop
or
dec
mov
mov
imul
scas
adc
sbbl
push
std
xor
push
aas
and
cs
jo
scas
and
dec
subb
scas
dec
lea
sbb
movsb
movl
cmp
xchg
aaa
repz
aad
mov
test
test
mov
outsb
ljmp
mov
mov
sbb
arpl
jbe
sbb
sub
push
insl
cmp
pop
int3
mov
into
out
inc
out
inc
popf
fwait
cmp
stos
add
cmp
jp
adc
pop
in
jno
sub
cli
jbe
lcall
dec
out
pop
mov
js
push
xor
popa
push
dec
jnp
fldcw
push
insb
and
es
addb
push
sub
in
jl
shl
pop
pushf
pop
xor
rcrl
int
mov
sbb
leave
int
shrb
sub
pop
dec
stos
xor
jae
das
lock
mov
test
or
cwtl
bound
sahf
mov
gs
jecxz
push
idivb
jmp
add
in
jb
jae
cmpsb
adc
lahf
inc
ljmp
sbbl
push
rorb
clc
sbb
push
pop
inc
sub
ret
icebp
mov
dec
loop
sbbl
or
inc
mov
movsb
xor
mov
repnz
je
or
incb
rolb
sub
imul
mov
lea
out
in
lret
cs
adc
das
jo
lds
pop
outsl
push
mov
hlt
pop
or
flds
adc
and
gs
or
pushf
jmp
xchg
mov
xor
inc
or
in
cmp
push
adc
cmp
jle
cmpsl
push
js
lds
inc
out
enter
rol
sub
push
xchg
int
mov
cwtl
xchg
add
fsubs
mov
out
cmp
mov
shrb
adc
jnp
incb
das
cmp
pusha
call
movsb
or
mov
jno
mov
stos
in
repnz
sub
inc
push
sbb
cmp
push
push
andb
push
xor
xor
mov
mov
call
cmc
sub
test
sub
or
mov
outsb
or
sbb
inc
in
sbb
jl
push
mov
cmp
xchg
mov
dec
cmpsl
mov
mov
pop
lea
inc
push
dec
mov
and
sub
and
cmp
sbbl
pushf
xor
in
das
inc
cmp
mov
in
loop
xchg
sub
nop
js
jg
out
push
dec
mov
cltd
lds
icebp
mulb
pop
pop
lea
out
xor
sbb
xor
dec
ja
adc
mov
stc
xchg
and
lods
jmp
repz
inc
xor
jbe
outsb
sahf
sbb
sbb
pop
std
fistpl
in
decl
add
push
adcl
int3
mov
xor
repnz
hlt
jle
sub
xor
push
push
inc
mov
xor
addr16
cli
lret
dec
pop
in
imul
cmp
mov
pop
clc
jp
mov
lea
loope
outsl
aam
push
sub
cld
ljmp
inc
arpl
xchg
and
test
daa
loope
mov
push
iret
cmc
lock
pop
je
popf
mov
push
clc
ret
call
in
push
sbb
lods
addr16
cli
inc
cs
mov
outsl
loope
sub
xor
ret
lahf
xchg
mov
jp
aaa
cmp
add
inc
mov
bound
push
cmpsb
mov
cmpsl
rcl
push
mov
int
aad
sbb
push
dec
repz
pop
je
xor
xor
mov
jg
cld
pusha
lret
mov
in
add
add
in
or
popa
jge
iret
xchg
adc
in
repz
xor
push
mov
fcomps
shlb
jg
pop
pop
inc
in
mov
cmpsb
inc
cmp
js
in
fwait
loope
fucomip
call
aad
push
ffreep
inc
xchg
imul
fidivrl
outsl
inc
and
decl
xor
sub
mov
test
push
add
push
xchg
and
cmp
in
inc
mov
jnp
aad
test
shlb
mov
push
lods
xchg
lock
outsl
es
jnp
adc
dec
pop
shlb
lds
cmp
popa
dec
xor
int
cli
shr
inc
pop
xchg
fstp
pop
and
cmp
push
cld
push
hlt
inc
xchg
icebp
inc
xchg
je
int3
sti
rcrb
stos
fildll
dec
aas
push
pop
or
push
cmc
sbb
test
aas
daa
daa
cmp
jne
add
lods
xchg
sub
jne
or
daa
add
lret
cmp
orl
pop
add
insl
shlb
push
mov
or
pop
mov
ss
mov
jmp
mov
jno
xchg
and
xchg
in
lret
dec
in
xor
jp
jb
xor
pusha
adc
rcrb
stos
push
sbb
cmp
xlat
dec
cltd
xchg
repnz
lods
lret
adc
sub
add
xor
sub
inc
mov
into
clc
cmpsb
gs
ss
ret
std
cmp
loop
jmp
jbe
push
xchg
xor
cli
push
lret
dec
mov
cld
inc
pushf
mov
out
mov
inc
and
nop
lea
fimuls
xchg
add
cld
popf
push
dec
clc
pop
cmc
imul
jnp
sbb
ret
fmull
xchg
fadds
add
rorl
test
pop
ficomps
inc
sbb
push
aaa
or
in
out
push
or
mov
stos
jg
sbb
scas
push
fidivs
and
push
jp
inc
sub
dec
jle
mov
cmp
and
add
jg
inc
out
sub
jp
js
stos
xor
xchg
cmp
scas
jge
jg
push
pushf
mov
scas
out
xchg
inc
mov
cmp
pop
mov
add
push
add
lret
into
push
setp
xchg
outsb
mov
dec
out
inc
jb
and
scas
mov
loopne
loope
sub
fs
test
jne
call
mov
out
dec
cmc
pushf
and
sub
out
jl
xchg
hlt
cmpsl
add
inc
nop
mov
fs
mov
shl
xor
jg
int3
sub
jp
sub
push
shrb
push
enter
or
fs
adc
popf
cmp
sbb
pop
cli
popf
addl
stos
adc
cmp
rcrb
fcmovu
mov
rcr
pop
and
mov
adc
sti
out
daa
pop
cs
pusha
mov
push
pop
cmp
lcall
or
sub
loop
into
or
stos
xor
test
lahf
sbb
xor
xchg
gs
mov
mov
loopne
movb
pop
into
fadd
lret
sub
fldt
sbb
fimull
jmp
cwtl
xor
adc
push
xchg
std
adc
imul
sbb
nop
movsb
pop
icebp
scas
xlat
bound
lds
jbe
subl
in
mov
std
push
pop
pop
jmp
daa
je
out
fimuls
stc
lods
cmpsb
stos
adc
sub
icebp
mov
push
mov
cmp
inc
mov
rcl
cmp
pusha
addr16
jle
bound
loope
leave
push
jo
lahf
je
adcl
addr16
out
fucomip
cmp
add
add
fsubrl
add
mov
pop
shlb
add
push
mov
lcall
push
mov
aad
adc
js
inc
jnp
aad
cmpsb
mov
bound
jp
mov
fstl
jns
les
gs
and
fimuls
adc
push
dec
adcl
and
fisubrs
xor
cmc
xchg
mov
lcall
mov
dec
out
ja
gs
fstps
jg
mov
push
mov
jno
sbb
sbb
mov
adc
sti
inc
mov
repz
aas
lret
cmpsl
jge
push
mov
cmp
frstor
sub
push
repnz
outsb
mov
call
mov
hlt
pop
sbbb
and
mov
imul
fcmovbe
sub
dec
cmc
inc
stos
sbb
dec
movsb
or
rcl
push
inc
outsb
jb
aas
xchg
cltd
sub
jle
imul
cwtl
lds
pop
pop
out
stos
loop
mov
lock
jmp
mov
sahf
xor
and
bound
dec
dec
jecxz
mov
mov
aas
pop
sti
inc
je
mov
jmp
clc
push
sbb
in
jae
in
not
push
and
pop
lea
cltd
movsl
mov
sub
cmp
xchg
mov
cmpb
mov
repnz
xor
or
arpl
and
divb
cmova
jp
repnz
cmp
fs
mov
jo
add
xor
fs
fs
scas
les
lods
std
cmp
mov
outsl
les
jecxz
aas
stc
and
push
scas
test
fucomip
jne
data16
cmp
push
outsb
jecxz
ljmp
or
in
ja
test
inc
scas
add
push
test
fstpt
pop
test
popa
lods
inc
shl
movsl
fmull
mov
outsl
pushf
sub
lods
or
xchg
xchg
out
push
or
push
ds
mov
mov
dec
sbb
enter
lods
add
sub
shrl
mov
jno
push
arpl
hlt
add
mov
mov
ret
jbe
mov
sub
and
popf
sbb
mov
fscale
scas
repz
and
test
cs
das
jmp
push
stos
adc
pushl
mov
xchg
shlb
sbb
das
test
fwait
pop
and
das
in
lahf
sub
mov
ret
test
fidivl
repnz
mov
mov
ftst
jae
adc
add
mov
ds
jne
daa
cld
and
pushf
insb
push
data16
idivl
movsb
push
shlb
stos
inc
aad
jecxz
sbb
mov
std
data16
dec
fildll
imul
popf
adc
hlt
ss
ja
ljmp
outsl
cmp
pop
nop
mov
mov
pop
or
dec
jmp
pmullw
js
loopne
mov
dec
into
lods
sti
mov
insl
push
adc
nop
or
sub
cli
adc
mov
and
xor
enter
or
fwait
inc
pusha
clc
lea
sub
sub
push
push
push
arpl
aaa
cli
sbb
lahf
mov
fs
fisubrl
scas
das
imul
mov
icebp
adc
in
out
negb
loope
pop
cmp
test
cmp
clc
scas
sbb
popf
push
movsl
cmpb
imul
push
mov
mov
jp
mov
fadd
push
in
or
sub
inc
mov
inc
cltd
movsl
and
hlt
pop
stos
pop
mov
pop
adc
or
xor
mov
push
push
push
test
pop
fnsave
cs
shlb
add
xor
repz
sub
jo
nop
rolb
loop
add
les
inc
pusha
outsb
mov
pop
movsl
imul
add
pop
mulb
addb
lret
repz
inc
add
mov
dec
xor
xchg
rolb
lcall
stos
jmp
mov
mov
jmp
mov
pop
btr
lock
imul
ss
cmp
cli
es
cmc
aaa
and
mov
pop
push
xchg
push
das
jl
sub
fs
insl
jg
inc
push
loope
ret
sub
inc
mov
adc
add
hlt
out
shld
popf
scas
mov
lret
icebp
jmp
cmc
jns
jnp
out
and
add
mov
inc
push
jb
or
mov
gs
mov
test
je
fldl
pop
mov
jae
and
stos
xchg
and
xchg
xor
add
loopne
lcall
pushf
aas
push
mov
dec
data16
xor
pop
and
in
cmp
icebp
push
jge
movsl
popa
int
imul
fsubr
pop
call
mov
pop
in
and
dec
mov
in
xchg
or
in
mov
jno
scas
loope
js
xor
dec
mov
pop
push
add
mov
fildll
xchg
shlb
aam
mov
cmp
test
mov
mov
cmp
arpl
mov
dec
cmpsb
xchg
fstps
add
inc
mov
jp
negb
mov
loopne
jns
ficoms
imul
clc
int3
fdivl
adc
sbb
mov
adc
sub
rcr
mov
ja
loopne
and
sarb
push
pop
repnz
sub
fstp
jne
aad
adc
sub
inc
ds
add
or
mov
into
sbb
outsl
inc
lock
sub
xor
clc
sti
dec
je
adc
push
jnp
sbb
lods
pop
inc
jg
mov
jle
ffree
pop
movb
cld
shll
xchg
xlat
scas
loope
pop
and
or
lea
icebp
mov
mov
jnp
cmc
mov
push
inc
push
or
sti
leave
loope
mov
movsl
insl
ret
dec
or
data16
ficompl
xor
fs
fmuls
aam
pop
pop
aam
pop
mulb
lret
push
push
xor
psrlq
mov
fwait
hlt
push
mov
mulb
popf
in
rcrw
mov
xor
insl
mov
sbb
pop
imul
stos
sub
dec
sub
sahf
daa
pop
out
push
repnz
sub
mov
cmp
mov
adc
sub
dec
iret
repnz
sarl
mov
adc
fucomp
inc
sarl
mov
jp
bound
cld
xlat
push
jmp
mov
cld
icebp
push
shll
adc
addr16
inc
xchg
push
sar
cmp
test
sbb
add
jmp
test
shrl
popl
shrb
sub
jecxz
popl
aad
int
imul
ret
and
and
mov
jbe
nop
icebp
divb
inc
xor
mov
iret
outsb
xlat
iret
ja
test
adc
xor
pushf
shll
mov
test
xor
les
xchg
jp
xor
jne
cmp
pop
xor
lock
sub
mov
enter
clc
and
push
in
sbb
enter
mov
jg
inc
je
scas
sti
or
add
lock
mov
ja
mov
imul
aam
icebp
int3
sub
xchg
mov
mov
hlt
pop
or
loop
cmpsb
jnp
jl
lret
pop
addb
mov
andb
add
cmp
and
iret
sub
adc
icebp
mov
aas
fldl
cmp
inc
and
or
xchg
xchg
cmp
scas
faddp
das
lods
lds
out
je
mov
in
xchg
in
inc
movsl
dec
and
in
sbb
pop
xchg
loop
inc
ret
cmp
lock
es
out
mov
loope
jecxz
shll
nop
inc
xchg
out
out
sub
pop
lahf
cmp
mull
lret
adc
mov
lods
fsts
jecxz
cmp
loope
mov
fldt
xlat
stos
sbb
enter
sbb
rorl
add
cmp
cmp
movsb
xchg
stos
dec
xchg
dec
gs
addb
idiv
adc
shlb
lcall
mov
mov
jne
scas
jmp
lahf
bound
roll
inc
sbb
cmpsb
movsl
cmp
mov
jbe
aaa
fwait
jb
adc
inc
ret
insb
pop
push
or
adc
pop
mov
movsb
sbb
in
jmp
das
pop
frstor
cmp
lock
adc
daa
std
xchg
mov
mov
xchg
mov
jnp
add
stos
enter
rcrb
jmp
fnsetpm(287
mov
push
pop
lock
pushf
xor
dec
mov
popa
dec
cmovo
and
jmp
push
lock
inc
adcl
decb
pop
mull
or
cmc
daa
cmp
stos
repz
jae
outsl
xchg
icebp
and
cmp
rcrb
adc
popf
sbb
cmc
popf
into
pop
mov
xor
out
mov
cmc
lock
jle
mov
pop
jg
lods
dec
sti
fnstcw
sub
lret
add
mov
add
mov
adc
cmp
mov
xchg
aad
insl
and
mov
dec
adc
xor
in
insl
cmp
push
enter
lock
out
cmp
cs
adc
cwtl
out
fldl
mov
sbb
aam
sbb
sahf
into
in
cli
push
shrl
out
lret
xchg
outsl
adc
in
mov
sub
pop
adcl
or
mov
fstpl
mov
xchg
or
push
iret
fisttpll
test
mov
unpckhps
mov
sbbl
inc
cmp
mov
movsb
mov
mov
adc
mov
or
loopne
in
jbe
pop
add
movsb
ret
xchg
dec
mov
or
mov
lods
jecxz
adc
cmp
mov
xchg
sub
negb
or
std
mov
adc
int3
adc
push
cld
arpl
xlat
loope
jbe
mov
pop
jge
lcall
pop
popa
push
lds
in
mov
mov
pop
xchg
insb
push
movsl
pop
enter
jns
ljmp
lea
cmp
add
mov
notl
mov
pushf
mov
sub
sahf
idivl
and
pop
data16
mov
gs
sub
push
inc
jecxz
call
add
cmp
mov
ror
scas
xor
cmp
loope
cmp
sahf
scas
cmp
inc
lods
sub
out
push
cmp
test
rorl
testl
jmp
xchg
in
inc
test
xchg
mov
in
jnp
in
dec
sub
xchg
dec
and
out
popa
push
adcb
cltd
dec
dec
daa
add
lcall
fidivrs
scas
pushf
in
jge
outsl
mov
adc
shll
test
push
in
inc
jecxz
ja
adc
andl
jne
loopne
push
jp
sub
cld
clc
fidivrl
sbb
mov
ret
dec
mov
push
mov
pop
jge
jg
xlat
dec
pushf
mov
sub
pop
cld
mov
pop
lret
or
arpl
push
lock
pop
int
mov
mov
repz
pop
mov
std
jo
cli
sbb
lahf
sub
sub
lea
sbb
or
dec
sbb
fs
cmc
mov
or
out
fistpl
adc
sub
cmp
push
add
ret
sbb
pop
jge
mov
iret
mov
inc
cmp
scas
cmp
xor
lods
cmpl
jne
fs
stos
mov
dec
sub
rolb
fmul
sbb
add
scas
inc
fidivrl
rcrb
std
orl
pop
mov
cs
je
pusha
aas
test
insb
shlb
sahf
mov
movsl
and
addr16
dec
add
ja
dec
or
out
xchg
fmul
lods
mov
decb
jno
mov
mov
pop
repz
mov
mov
enter
adc
xor
adc
jle
subps
mov
adc
xor
pop
adc
adc
mov
movl
push
sub
fisttpl
insl
dec
call
add
xchg
jecxz
ja
std
add
call
data16
xor
sub
and
jns
mov
inc
mov
mov
sti
outsb
stc
xchg
mov
mov
int3
mov
mov
and
out
push
lds
xor
dec
push
xchg
dec
aaa
jmp
call
sbb
out
out
pop
push
clc
pop
sahf
scas
icebp
xor
sub
es
or
dec
int3
push
adc
or
lods
xchg
subb
cltd
sub
enter
jae
inc
inc
xor
xor
inc
lret
lods
sbb
shl
popf
mov
addr16
dec
sbb
dec
lds
les
cmp
mov
out
sahf
js
or
mov
jg
jl
mov
mov
inc
jg
je
pop
mov
xor
add
stos
aaa
ret
cmp
fnsave
jp
outsl
cwtl
fsts
lds
pop
pushf
sub
xor
sbbb
arpl
test
push
and
pop
sub
inc
insb
ljmp
mov
andb
jne
adc
lds
popa
rcll
movsl
push
or
pop
jmp
shll
out
lds
cld
sub
or
lcall
mov
inc
jae
push
sub
dec
or
push
or
loope
mov
mov
xchg
sbb
pop
scas
rclb
out
jb
sub
pop
sbb
push
pop
ret
pop
jle
xlat
xor
jo
mov
add
push
mov
push
mov
or
aas
dec
xchg
test
in
mov
mov
sahf
pop
test
lret
data16
pop
icebp
sti
mov
dec
push
mov
inc
rorl
cwtl
outsb
inc
not
iret
and
stc
lahf
add
mov
add
or
movsl
aas
mov
mov
mov
xchg
xchg
fcomi
jbe
cmp
pop
push
pop
dec
and
push
fcmovnu
movsb
cmp
adc
push
inc
decl
xchg
xbegin
int3
jae
cld
je
mov
cmp
and
push
xchg
cmp
stos
xor
das
sub
icebp
pop
mov
mov
rcrb
inc
bnd
add
movl
push
mov
jecxz
jecxz
movsb
fsubl
xor
jmp
mov
into
int3
mov
out
mov
add
aam
aad
inc
ret
mov
pusha
inc
stc
cmp
dec
ja
xchg
pmuludq
inc
cli
or
mov
lahf
jo
movsl
test
popf
and
mov
adc
fisttpll
ret
bound
cmp
xor
push
je
cld
pushf
fs
jno
dec
dec
mov
dec
mov
out
fdiv
hlt
cmpsl
inc
sub
dec
cmpsb
pop
icebp
sbb
xor
push
mov
mov
xor
jo
xchg
cmpsb
icebp
sarb
cmp
int
and
push
fs
aad
es
mov
mov
mov
xor
jge
cmpsb
add
jb
test
inc
mov
stos
cltd
dec
lret
rol
addr16
sbb
int
mov
subb
loope,pn
ret
pop
mov
push
xchg
rcl
ja
movsl
stos
les
jmp
mov
sbb
arpl
or
jbe
int3
or
fucom
out
mov
jno
push
test
jmp
popa
aad
inc
pop
stos
mov
and
jmp
sahf
shlb
mov
dec
lcall
sub
daa
jae
aaa
jecxz
mov
cwtl
jmp
call
bound
jb
lret
sbb
push
mov
mov
or
ljmp
and
mov
inc
es
in
inc
in
mov
ret
rol
jns
test
inc
pop
insl
std
mov
repz
push
pop
lock
cwtl
iret
lahf
xchg
rclb
push
std
and
jnp
pop
fidivl
push
jmp
rorb
pop
inc
insl
mov
mov
sbb
adc
rcrl
icebp
fdivl
jmp
inc
fisubl
int
push
push
lret
hlt
adc
aam
dec
popl
fcmovb
out
sbb
rcrl
adc
into
push
pop
add
pop
in
add
mov
arpl
add
pop
fadd
lret
daa
leave
cmpsl
test
mov
jnp
inc
data16
mov
jg
sti
push
mov
rolb
push
shrb
mov
mov
sbb
les
mov
add
cld
dec
mov
fidivs
fcomps
lret
out
pop
or
hlt
fstps
lahf
enter
les
cld
pop
sub
jmp
rolb
int
add
cmp
xchg
mov
sbb
inc
sub
testl
mov
jmp
incb
ret
jge
ret
icebp
out
sbb
xorl
sbb
aam
aam
lods
adc
dec
je
jecxz
shlb
arpl
cmp
mov
jo
mov
jbe
push
sub
loop
xchg
cld
cmp
sub
fcoml
sbb
aad
lock
loope
sbb
mov
movsb
push
inc
pop
in
lret
jbe
jne
pop
andl
repnz
pop
or
pop
lahf
mov
loope
sub
out
sub
mov
in
stos
push
rclb
out
sbb
js
sbb
cmpsl
movsl
outsl
cltd
jbe
sahf
repnz
jl
orl
ds
aad
xchg
lds
lcall
jo
cmpb
imul
dec
mov
mov
dec
cmpsb
push
xor
ds
loope
mov
mov
dec
icebp
mov
aad
jg
xchg
jecxz
hlt
jle
pop
sbb
sbb
pushf
mov
jae
push
push
sbb
lock
add
ja
pop
jb
pop
xchg
lods
hlt
mov
cmpsb
inc
fdivrl
adc
fwait
and
sub
loope
rolb
std
imul
pop
outsb
aam
push
lret
testb
cmc
push
into
lcall
sub
out
inc
or
mov
push
jg
leave
cld
out
sbb
scas
cmpsb
hlt
push
ds
pop
xchg
jae
pop
inc
mov
enter
es
clc
lret
arpl
xchg
xor
arpl
xchg
aad
jbe
test
out
test
inc
jge
pop
mov
clc
xchg
test
dec
inc
xor
clc
push
and
or
xor
fstp
mov
test
out
pop
pop
arpl
test
and
adc
xchg
jnp
jl
ljmp
jo
das
pop
dec
xchg
lahf
pop
mov
ret
inc
jae
push
and
lods
out
cmp
enter
push
enter
out
lret
add
js
lahf
xchg
mov
sbb
sti
lods
push
jle
mov
test
mov
add
mov
cmp
bts
adcl
pop
test
sbbb
mov
inc
lock
push
dec
ljmp
mov
imul
pop
adc
sub
push
mov
adc
rcrb
xchg
shlb
cmp
fwait
cld
es
or
loope
inc
mov
insb
mov
xor
sarl
xchg
insl
fiaddl
popa
push
xchg
sbb
mov
mov
xor
cmpsb
movsb
loope
lds
add
aas
jbe
xchg
xor
subb
mov
cwtl
pop
repz
jmp
add
out
and
shlb
mov
movsl
push
stos
and
hlt
ds
arpl
cmc
or
fimuls
sarl
aas
xor
in
jb
rcrl
loope
lods
cmpsl
fmull
scas
ret
pusha
jnp
cmc
push
sub
shll
lea
add
inc
ret
out
inc
sub
mov
cmc
jge
mov
adcl
mov
ljmp
adc
cmp
insb
adc
orl
push
push
out
call
out
cmp
mov
xchg
sub
lea
dec
inc
and
lcall
imulb
or
jge
pop
mov
aas
mov
aam
adc
test
mov
fmull
aaa
fdivrp
adc
movb
jns
push
es
stc
cld
cmp
incl
xchg
cmp
push
stos
xlat
in
sbb
mov
test
sbb
call
add
cld
sub
jbe
sub
inc
xchg
stos
mov
push
cs
xchg
rcll
or
pop
sub
sbb
adc
mov
lods
xor
jae
bound
sub
xchg
or
pop
inc
and
push
fnstcw
fwait
push
mov
adc
hlt
repnz
or
in
ficompl
popf
je
ret
out
jb
cmp
icebp
xchg
mov
adc
mov
pop
jle
hlt
enter
or
mov
sti
jne
jne
mov
or
out
jp
add
rcr
hlt
push
fstpt
jbe
or
call
mov
and
es
add
dec
sub
jecxz
mov
inc
or
mov
xorl
xor
pop
sub
mov
inc
mulb
out
or
sti
pop
or
or
pusha
mov
mov
cmpsl
push
repz
push
mov
add
arpl
mov
cmc
mov
push
mov
inc
movsb
add
push
mov
adc
or
inc
jbe
jne
or
or
cmp
inc
pop
jb
decl
rolb
adc
push
add
enter
jns
mov
push
pop
inc
shlb
lock
ror
or
call
ret
in
push
movsb
xchg
adc
ffreep
or
lea
fcmovnu
or
popa
orb
mulb
xchg
jp
jae
cmp
dec
jp
mov
ja
lret
jmp
pop
jmp
cmc
or
push
aas
inc
test
loop
mov
mov
xor
xor
jne
sbb
or
addb
cld
and
shrl
addr16
sar
das
pop
or
inc
leave
jb
xchg
aas
and
cmp
cwtl
insb
inc
jae
fsts
ret
xchg
sbb
sub
push
jle
push
pop
jbe
xor
adc
out
ffree
enter
addl
add
ror
sarl
mov
inc
into
or
pushf
ret
and
xor
xor
mov
push
lods
fcoml
mov
fstpt
jle
jecxz
dec
in
movsl
arpl
sub
sub
mov
push
push
mov
sub
or
mov
das
dec
test
mov
cmpsb
sbb
adc
mov
repz
inc
jecxz
jle
pop
xchg
inc
lcall
inc
xchg
push
scas
aaa
in
outsl
dec
inc
sub
call
aam
and
mov
cmp
and
mov
cmpsb
rcrb
mov
adc
cmp
xor
cs
xor
cmp
mov
adc
jle
in
bound
movsl
jb
or
mov
adc
jp
dec
roll
pop
stos
lea
aaa
data16
dec
test
jb
push
hlt
and
testl
sbbb
addr16
repnz
push
shrb
cmp
iret
test
iret
jns
xor
xchg
sbb
enter
ret
sub
je
jne
aad
fnstenv
mov
test
mov
push
xor
adc
fwait
and
sbb
mov
jle
xor
xchg
xorl
cmp
xor
mov
fwait
cmpsb
std
iret
mov
pusha
cltd
xlat
sahf
push
imul
mov
mov
sub
mov
xor
pop
fptan
int3
and
iret
jmp
std
movsb
and
add
mov
insl
jle
or
jp
mov
repnz
pop
sub
dec
shlb
cmpsl
pop
pop
fisubrs
and
adc
into
and
dec
xchg
and
shll
sbb
sti
xchg
add
ret
xorl
arpl
mov
xor
adc
je
xchg
repnz
adc
inc
in
int
jb
fisubrl
and
push
jl
jns
pop
sbb
push
mov
xchg
xchg
sub
das
call
leave
test
std
xlat
loope
mov
jecxz
push
call
jo
int
mov
ja
stc
sbb
iret
adc
mov
outsb
jmp
loopne
mov
inc
loope
xor
test
je
pop
insb
or
cmp
pop
lret
mov
add
inc
out
gs
and
push
pop
push
sub
jnp
sbb
mov
xchg
and
lock
pop
cmp
cltd
imul
out
pop
or
cmp
addr16
fldt
cmp
rcll
addr16
icebp
mov
jle
fnsave
jno
sar
push
enter
pop
je
lcall
inc
test
shl
push
inc
addr16
sbb
xorl
cmp
imul
mov
ds
jge
out
inc
ret
xor
inc
pop
dec
push
mov
mov
jmp
sub
push
out
jg
lahf
mov
aaa
mov
cmp
addb
dec
divl
mov
mov
or
outsb
push
push
lahf
fstps
divl
sbb
mov
and
sub
stos
xchg
ret
and
add
fsubrl
sbb
out
mov
mov
popf
ret
lock
xor
mov
lcall
pop
pusha
cmp
xor
in
aad
popf
jmp
mov
out
arpl
mov
push
and
leave
fisttpl
xchg
clc
scas
call
lcall
or
ficomps
fists
mov
movsl
mov
pusha
daa
mov
lret
push
pop
sub
pop
data16
and
mov
mov
shll
shll
outsb
xchg
fistps
stos
outsb
jecxz
xchg
push
adc
xor
jns
mov
popa
or
lock
aaa
mov
mov
addr16
fsubl
ds
clc
insl
test
mov
pop
inc
mov
nop
mov
jae
movsb
popf
scas
jbe
addr16
adc
repnz
inc
add
sub
pop
in
jb
ret
mov
sub
out
dec
inc
inc
mov
mov
pop
mov
inc
inc
sar
xchg
push
mov
cmp
lret
or
sbb
test
xchg
add
sbb
bound
dec
leave
adc
leave
movsb
popa
nop
push
adc
mov
xor
cs
mov
jmp
push
and
mov
sbb
add
inc
push
nop
js
or
adc
dec
mov
pop
adc
ficomps
notb
add
out
les
adc
cmp
pop
and
mov
and
aaa
popf
rorl
dec
popf
insl
pop
aas
mov
xchg
sbb
xchg
cs
ds
arpl
xor
xlat
fs
mov
add
or
adc
je
fisubrs
divl
sub
cltd
or
mov
mov
mov
testb
sbb
ficompl
stc
cmp
loope
loope
jp
lret
sub
inc
cmpb
adc
fsubrs
push
mov
rol
test
imul
mov
iret
mov
mov
cli
mov
mov
shlb
repz
xchg
or
dec
pusha
in
addr16
xor
bound
inc
mov
js
or
adcb
mov
xchg
cwtl
lret
bnd
cmpsl
or
dec
pop
sahf
test
adc
add
adc
fimull
mov
sbb
xchg
lock
scas
lret
jge
stos
imul
scas
lods
mov
xchg
sub
add
mov
xor
or
popa
mov
xlat
popa
mov
inc
jecxz
pop
pop
inc
fs
xchg
dec
dec
pop
lods
aad
fnsave
jae
daa
xchg
pop
mov
cmp
fisubrl
mov
fidivrl
pop
sbb
fucomip
out
sti
dec
shll
fwait
ret
push
mov
out
jl
and
adcl
push
add
repz
dec
call
jo
cli
testb
cld
or
xchg
test
pop
jne
adc
mov
adc
sti
test
mov
fimuls
pop
sahf
clc
xor
imul
xchg
fwait
push
mov
lcall
aad
dec
ss
jno
aad
cmp
imul
inc
pop
sarl
push
dec
imul
push
mov
cltd
push
xor
jb
mov
cmpsb
vcvtps2pd
sub
jl
das
adc
and
les
rorl
or
mov
mov
pop
inc
pop
lahf
and
addb
out
jle
xchg
push
cs
jmp
lret
inc
or
ljmp
orl
sarb
andb
pop
int3
iret
mov
inc
mov
insl
ja
jmp
nop
aad
call
js
sarl
inc
shlb
lahf
in
sbb
decl
push
test
insb
jle
and
cwtl
dec
in
in
cmp
inc
stos
stc
add
clc
sub
sub
daa
sbb
sbb
in
sub
sub
popf
icebp
jmp
dec
jle
add
push
int
dec
pop
jge
mov
add
out
jg
rorl
inc
xor
jecxz
fnstcw
fists
xchg
cmp
xor
jl
jno
stc
xchg
mov
fcomp
es
and
mov
test
into
sub
pop
aaa
pushf
push
add
lds
push
dec
adc
xchg
fcomp
cltd
jl
popa
enter
loope
inc
nop
mov
jl
cmp
fsubrs
xchg
shrl
lret
int
rcl
repz
mov
or
inc
jno
pushf
xor
cmpb
sub
movsb
mov
mov
adc
xchg
cmpsb
test
jg
aad
xchg
inc
pop
lock
mov
mov
test
add
or
pushf
and
mov
jbe
mov
out
inc
lcall
push
lcall
lds
jecxz
mov
push
enter
add
es
out
cmc
test
rcrl
push
adc
je
adc
cmpl
cmp
pop
loopne
jae
push
xor
shrb
jmp
push
sbb
popa
lret
lret
movsb
sub
cwtl
jb
pushf
xor
nop
xchg
inc
lods
push
inc
pushf
cmc
les
xchg
inc
fs
and
jle
cmpsb
pop
ret
imul
xchg
pop
sahf
mov
data16
out
fwait
cltd
ret
adc
mov
sarl
inc
or
hlt
cmc
sub
cwtl
and
or
ret
sbb
clc
test
sub
add
jg
mov
cmpsb
mov
or
and
or
sahf
in
int
jns
movsl
pop
inc
aam
mov
mov
fs
sub
add
sub
into
cltd
adc
sahf
adc
add
sub
dec
js
cmp
mov
or
sbb
or
nop
jno
jecxz
lea
pop
outsl
push
and
pop
cmp
mov
dec
jb
lret
push
and
outsb
jae
pop
in
xchg
jnp
mov
nop
cltd
dec
pop
push
out
lods
ds
mov
xor
fldcw
popf
xor
fisubrs
jb
xchg
sbb
sbb
adc
nop
int
lea
jnp
mov
repz
cmpsl
add
jno
jb
mov
inc
scas
cmp
fstpt
xor
sbb
add
fsubr
fmulp
out
jo
fsubl
cwtl
out
mov
loop
cmp
stos
loopne
dec
idiv
mov
lret
mov
fwait
test
mov
into
lods
jb
stos
adc
lahf
fwait
mov
mov
sbbb
adc
repnz
push
cmp
push
ljmp
out
scas
lock
in
lret
mov
jmp
andb
shlb
out
adc
dec
xor
xor
inc
jecxz
out
mov
cmpsb
cmp
mov
inc
push
or
push
js
jge
pushf
int
nop
dec
ljmp
pop
dec
cmpsl
cs
push
sahf
and
sbb
idivl
dec
mov
arpl
sbb
dec
mov
cld
fisubrl
mov
add
cmp
jle
subl
inc
aad
sbb
pop
and
stos
mov
insb
je
pop
inc
leavew
push
jbe
clc
push
icebp
jp
dec
dec
popa
sub
mov
daa
fs
push
sbb
jns
insl
bound
pushf
fiaddl
mov
jne
cmp
ss
xchg
lcall
cld
cmp
cmpsb
inc
mov
adc
cmp
push
push
repz
out
fwait
mov
jae
jge
pop
mov
cwtl
shlb
ucomiss
fsubl
test
cltd
call
fwait
aaa
jg
xor
mov
cmp
lods
shr
into
imul
loopne
adc
add
xchg
cmp
mov
imull
xchg
imul
aad
bnd
inc
aad
fidivl
shr
enter
push
and
lea
icebp
mov
xor
push
das
rcll
push
pop
test
xchg
add
daa
fwait
gs
aad
xorl
cmp
cmpb
pop
aad
aas
sbb
stos
xchg
xchg
mov
cmp
pop
test
loope
jle
cs
pop
and
mov
lret
inc
mov
js
push
adc
scas
aam
mov
ret
xchg
cmp
sbb
push
nop
sbb
fcoml
fidivl
xchg
ret
push
cmp
sbb
xlat
jl
enter
rol
push
icebp
pop
and
ds
insl
sbb
data16
sub
pusha
call
ss
adc
and
cmp
mov
in
inc
das
pop
popa
scas
addb
aad
das
hlt
mov
inc
pop
lds
cwtl
repnz
cmp
adc
sub
inc
ret
test
std
pop
sar
rorb
addr16
movsb
je
neg
push
bound
and
pop
cld
mov
loopne
ljmp
jnp
call
jno
mov
xor
dec
xchg
add
lret
jmp
dec
add
jmp
and
stos
int3
jo
push
aam
xchg
mov
ljmp
jbe
inc
pop
jno
push
aas
adc
lcall
add
in
cli
adc
cmp
add
cmpb
jb
scas
gs
testb
call
lods
dec
stc
mov
outsl
loopne
xchg
mov
das
in
pop
cmp
mov
js
jbe
scas
pop
jns
or
inc
jb
mov
add
xchg
es
les
and
lcall
mov
jb
mov
lods
repnz
xchg
jl
mov
or
js
out
xchg
cltd
jle
cwtl
outsl
xor
arpl
sub
mov
outsl
push
adc
ljmp
pop
out
pusha
cmp
fiadds
movl
sti
insl
or
pop
fsubr
cmp
inc
nop
jns
repnz
imul
mov
push
rol
sbb
inc
jl
adc
test
xchg
cli
movsl
push
fsubrs
es
pop
or
ljmp
aam
inc
xor
repz
rorb
repz
cmovg
dec
popa
push
sub
cld
xor
jae
stos
mov
mov
fwait
icebp
and
mov
stos
mov
jl
and
stc
ffree
hlt
dec
loopne
pop
lods
sbb
outsb
push
mov
out
loop
movsb
lock
js
cmp
ja
cld
idiv
sbb
insl
cld
mov
mov
imul
insl
pop
jne
cmp
jl
mov
in
cld
inc
or
nop
hlt
das
scas
pop
testb
mov
pop
lret
xor
stos
add
jbe
xchg
les
push
mov
dec
lea
pop
iret
cltd
movsb
mov
shll
xchg
sub
in
bound
cwtl
lods
dec
mov
xlat
cmp
dec
jo
pop
pushf
sar
outsl
loope
pop
mov
dec
or
repz
adc
adc
jns
das
outsb
pop
push
in
mov
sbb
in
pushf
mov
xor
cltd
xchg
pushf
dec
out
push
sub
inc
sbb
dec
xor
xchg
push
jp
inc
sub
stos
push
std
cmc
cld
push
jns
arpl
pop
pop
ljmp
inc
stos
stos
aaa
jecxz
jg
xchg
idivb
aaa
mov
icebp
gs
xchg
add
mov
sub
push
adc
lock
add
push
aad
adc
xor
movsl
add
xor
sbb
pushl
mov
hlt
cwtl
add
mov
xlat
push
mov
sub
mov
lret
in
or
popf
outsl
test
jb
add
mov
fildl
cmp
insl
and
jge
inc
sbb
jge
dec
mov
jnp
or
dec
pop
fcmovnb
hlt
ljmp
int3
das
testw
shrb
xor
sub
push
imul
xchg
adc
imul
and
mov
leave
out
lock
loope
inc
jno
sbb
mov
pop
inc
lahf
aaa
sub
stos
mov
addr16
xchg
stos
dec
xchg
pop
mov
inc
inc
movsl
xchg
lea
enter
and
xchg
mov
imul
jg
mov
es
sub
addr16
or
cmpsl
pop
cmpsb
std
popf
xchg
and
push
adc
xchg
push
inc
sbb
sub
pop
jp
pop
in
fcoml
iret
adcb
mov
lods
sahf
cmp
jecxz
leave
add
cwtl
inc
pop
push
mov
sbb
cli
pusha
mov
adc
dec
push
pop
inc
adc
and
fsubl
shlb
jbe
push
jbe
repz
jae
kmovb
lret
dec
test
sbb
je
in
cld
out
mov
pop
ficomps
insl
sarb
and
repz
cs
int3
xchg
aad
scas
rorb
rol
insb
xor
int
shr
pop
jg
xchg
mov
pushf
jno
and
test
adc
stos
imul
and
rol
mov
inc
das
jo
or
jo
xor
lret
cmp
ljmp
xor
lcall
rorb
and
ror
in
sahf
mov
idivl
imul
xchg
pop
cs
insl
mov
lock
dec
lea
push
pop
cmp
pop
mov
hlt
inc
cli
and
mov
ljmp
cld
xchg
dec
mov
out
and
push
scas
pop
dec
cmp
and
sahf
inc
mov
sahf
stos
arpl
in
sbb
push
sbb
pop
pop
mov
repz
scas
dec
xchg
push
jle
cs
lds
inc
je
pop
shlb
xchg
mov
mov
hlt
sti
pushf
data16
pop
jae
xchg
adc
out
mov
inc
or
push
fsubs
insl
or
push
mov
stos
movsl
decb
cmp
sub
pop
mulb
push
push
sub
jmp
sub
imul
loop
test
in
cs
cmc
je
mov
mov
loopne
inc
inc
xchg
dec
fists
inc
ljmp
mov
push
xor
daa
out
sahf
jl
test
push
stos
out
xchg
add
es
mov
xchg
xorl
push
mov
leave
inc
xchg
mov
add
mov
mov
pop
pop
push
mov
sbb
lods
cld
fwait
xor
enter
rcll
xchg
jp
pcmpgtb
test
adc
jbe
jmp
pusha
daa
push
cmp
jge
mov
es
dec
mov
jnp
add
in
movsl
push
pop
xchg
and
leave
pop
fistps
cmp
mov
ja
push
jmp
sub
adc
std
fsubrs
mov
inc
cmpsl
insb
out
lret
bound
movsl
mov
inc
cwtl
iret
jmp
mov
xchg
jnp
mov
fldcw
and
in
fdivrl
inc
lods
mov
inc
sbb
aas
xchg
dec
lcall
xchg
sbb
popf
cmpsb
push
jns
push
arpl
fabs
ficomps
mov
pop
adc
sub
add
mov
or
scas
addr16
ljmp
push
push
stos
add
nop
int3
mov
cli
sub
les
pop
push
mov
aas
and
cwtl
fs
inc
lods
push
push
pop
int
inc
push
or
mov
dec
mov
add
mov
xchg
js
pop
lret
pop
mov
inc
leave
mov
inc
lahf
adc
mov
lret
lods
loope
and
pop
lahf
notl
push
xchg
cltd
xchg
arpl
fwait
clc
push
es
xlat
adc
sahf
push
dec
xor
ljmp
repz
ds
jns
mov
lods
dec
cmpsl
in
mov
adcb
add
icebp
leave
in
xchg
aam
mov
jns
js
div
mov
loop
pop
data16
ret
andb
cmp
lahf
into
aad
imul
ljmp
mov
add
push
loopne
inc
icebp
stos
and
sbb
xchg
jnp
test
xchg
sub
cmpl
faddl
lods
mov
mov
mov
repnz
test
push
mov
mov
pop
dec
hlt
push
xchg
sbb
bnd
push
cmp
pushf
sub
fnsave
rorl
mov
pop
cmp
cmp
cmp
je
stos
int3
and
inc
inc
sbb
fdivrs
cli
add
rclb
lock
or
jmp
sbb
inc
lahf
mov
inc
icebp
xchg
cmp
pushf
mov
push
and
inc
cmp
aad
pop
mov
mov
test
sbb
loop
lahf
movsl
cmp
adc
push
jecxz
clc
leave
xlat
cmpsl
int
mov
scas
xchg
pop
sub
mov
sub
fldenv
mov
jmp
lea
outsb
arpl
mov
xchg
or
mov
mov
adc
xchg
pop
xor
popa
js
sahf
fsubrs
lods
push
cs
adc
xchg
push
rep
ret
adc
xchg
push
or
shll
push
jne
ficoms
and
mov
cs
cmp
cmp
xor
sahf
xchg
xor
call
and
mov
lods
cmp
roll
jecxz
inc
inc
xor
sub
lret
add
xchg
enter
or
mov
outsb
pop
cwtl
rcrl
sbb
cwtl
testl
clc
in
bound
cmp
xor
adc
sbb
rorl
lods
inc
mov
or
inc
insb
cmp
mov
pusha
div
out
jp
mov
ret
push
popa
jmp
jg
xor
scas
aam
jae
rcrb
daa
cmp
pop
subb
cmp
pop
lret
jge
sahf
xor
xchg
imul
aas
xor
and
adc
mov
xor
lock
aas
stos
adc
clc
mov
mov
jmp
inc
rcrb
mov
popa
popf
or
xchg
mov
aas
test
push
pop
adc
cmpsb
clc
cmp
out
movsl
ss
cmpsl
ljmp
outsl
es
jmp
popf
ret
rcll
in
mov
pop
and
je
leave
cmp
fdivr
push
xor
loop
addr16
jbe
pusha
mov
frstor
aas
clc
add
es
std
les
clc
jecxz
cmpsl
fisubrs
fs
test
icebp
test
jns
sti
push
adc
out
mov
cwtl
dec
ljmp
ss
cmc
and
push
enter
dec
mov
xchg
push
jns
inc
mov
and
int
sbb
adc
pusha
cmpsl
lahf
dec
jl
lret
mov
int
sarb
add
jmp
call
popf
sub
lret
js
push
sub
stos
xchg
dec
movsl
and
outsb
or
movsl
loopne
fnsave
pop
add
outsl
sub
lret
in
sarl
lds
mov
stos
negl
xchg
or
stos
add
je
adc
sbb
clc
ret
lea
rolb
packuswb
out
addl
sbb
xchg
in
push
or
xchg
dec
push
and
insb
cmpsb
fnsave
int
sbb
fwait
push
rorl
mov
jecxz
jle
pop
xchg
fcoml
mov
repz
repz
ret
rorl
jmp
dec
sbb
cmp
sbb
out
je
clc
mov
sub
mov
mov
repnz
xchg
cmpsl
es
jo
imul
add
call
inc
pushf
sub
jp
or
fidivs
cltd
jbe
dec
xor
mov
mov
jne
pop
icebp
pop
into
jl
popf
in
lret
repz
stc
clc
push
sbb
and
aaa
jg
xor
iret
dec
test
sub
rolb
xor
icebp
xlat
ljmp
ljmp
les
push
movsl
insb
pop
inc
setp
rol
push
inc
movsb
push
je
outsl
dec
repz
sub
jge
out
xor
test
fldl
lea
hlt
cmc
sub
daa
in
imul
xchg
mov
imul
lds
lcall
sti
dec
imul
inc
mov
loopne
sub
add
lret
std
push
mov
sub
jl
les
jmp
insb
movsl
clts
mov
movsl
stc
xchg
inc
shl
stos
push
hlt
gs
hlt
aad
pop
pop
imul
arpl
clc
sbb
sub
cmpsl
xor
and
xor
movsl
ret
call
adc
movsb
mov
pop
orl
push
or
mov
jg
into
fidivl
mov
add
push
cltd
push
repz
outsl
mov
outsl
pop
xorb
cli
mov
adc
imul
nop
movsb
lods
push
cltd
cli
xchg
and
xchg
addr16
mov
sub
bound
popf
fsubrl
mov
mov
and
mov
sti
push
jnp
je
popa
stos
adc
dec
repz
add
ret
push
fwait
fwait
cwtl
add
stos
mov
pop
sub
sbb
inc
mov
stos
fidivs
xchg
rcrl
ret
mov
stos
xchg
repz
add
sbb
scas
iret
xchg
push
add
jns
pop
push
or
movsl
sub
movsl
xchg
adc
pop
sbb
fcoml
mov
mov
adc
inc
sbb
orl
dec
es
xor
cmp
pop
popa
pushf
lahf
sbb
cmpsl
ret
in
jns
nop
xor
xchg
aas
mov
xor
mov
insl
xor
fcoml
mov
sahf
ds
xchg
cltd
and
xor
cmp
mov
xor
dec
rcrl
sub
ret
scas
loope
mov
ljmp
jge
je
jle
xor
call
pusha
mov
mov
mov
push
insl
fwait
movsb
cli
lret
jl
les
lret
sti
test
movl
sahf
ret
shll
jnp
dec
mov
int
loop
sub
xor
mov
rcll
push
mov
inc
out
data16
jne
jmp
clc
shrb
icebp
sbb
leave
dec
jae
xor
cs
xchg
inc
sar
add
hlt
lcall
or
xchg
imul
shl
xchg
sbb
shlb
inc
movsl
add
xchg
out
aaa
and
popa
imul
xchg
sbb
test
dec
mov
mov
push
mov
data16
xor
iret
nop
dec
ror
fwait
cmpsl
mov
jns
ret
lret
out
repnz
arpl
push
ja
cltd
clts
jae
std
sbb
xchg
jmp
sub
fisttpl
pop
mov
cmpsb
pop
aad
or
dec
mov
test
mov
repnz
or
and
rcll
ret
sbb
mov
les
popl
aad
gs
aas
jmp
ljmp
push
xor
out
scas
movsl
add
push
in
lcall
icebp
add
fcomip
shl
xchg
enter
dec
jle
call
stos
sub
les
mov
sub
jns
aaa
lock
push
push
and
int
xchg
mov
jmp
mov
sbb
negb
cmpsl
pushl
shll
popa
lea
rcrb
xchg
test
inc
mov
sbb
cmp
add
test
adc
data16
mov
add
and
push
mov
add
mov
cmp
inc
inc
cmp
and
shr
inc
mov
outsb
sub
inc
xchg
cmp
mov
mov
adc
cmp
lahf
mov
cmp
int3
mov
or
dec
or
cli
icebp
mov
pop
cmp
add
push
mov
and
xchg
scas
jg
jle
xchg
sub
imul
fidivs
cmc
mov
outsl
lret
and
sub
scas
xchg
leave
fistps
lods
int3
cmp
cmp
and
dec
shrb
dec
test
or
sub
sti
sbb
mov
dec
push
je
lret
xchg
inc
sbb
pop
xchg
call
pop
pop
xchg
sbb
add
sub
inc
inc
mulb
int3
int3
movsb
xchg
lds
subl
or
dec
push
mov
cmp
gs
push
adc
lods
dec
jbe
xchg
popa
fs
imul
mov
cmc
lcall
jp
cmp
stos
jns
mov
cwtl
testb
outsl
dec
out
cld
jne
mov
push
inc
lcall
mov
in
push
in
icebp
pop
inc
repnz
fisubl
lds
mov
jle
into
lods
inc
in
mov
cwtl
mov
js
fwait
mov
aaa
icebp
mov
adc
adc
ss
inc
mov
or
xchg
jbe
aas
nop
addr16
cld
xlat
jae
gs
out
sub
xchg
test
lock
out
gs
loope
cmp
xor
repz
orl
insb
test
and
jp
mov
lods
je
jg
pop
xor
das
out
jbe
push
std
mov
push
into
xchg
loop
je
addr16
inc
andl
inc
xchg
xor
orl
test
or
lret
xchg
add
div
mov
push
push
push
ret
icebp
addl
sub
sub
jns
and
lods
fistpl
sub
popa
adc
mov
sbb
mov
mov
gs
cmp
and
xchg
xchg
add
outsl
mov
jae
add
xchg
cmp
lret
mov
or
in
mov
pop
enter
test
cmp
pusha
or
xchg
push
push
lea
xchg
sbb
repnz
push
mov
and
and
xchg
dec
ja
cli
pusha
xchg
adc
ja
popf
pop
mov
popa
cwtl
inc
xchg
les
test
fnsave
in
sarb
fmull
rcrb
ret
jecxz
dec
aas
xor
es
sub
mov
sbb
iret
jmp
jecxz
cmp
mov
cmpsb
lods
mov
bound
xor
xor
mov
inc
pop
aaa
fildl
mov
mov
pop
movsb
stc
mov
mov
push
xchg
scas
xchg
xor
int3
mov
sbb
mov
lcall
aam
mov
lods
rcrb
cmp
mov
mov
cmp
add
fimull
aad
ficoms
xlat
mov
inc
frstor
sbb
add
jno
mov
sub
movsb
mov
fsts
lret
xchg
in
cld
mov
cmp
sbb
pusha
js
or
stos
cmp
pop
insl
sti
inc
push
push
lret
cmp
add
ss
scas
or
lahf
sbb
pop
cmpsl
rorb
pmullw
add
lret
jp
test
jae
mov
and
pushf
ret
or
mov
push
jmp
stos
fstpl
ret
or
jae
frstor
loopne
std
push
aam
punpckldq
and
push
adc
gs
sarb
add
call
jp
pop
fnstsw
xchg
mov
outsb
xlat
inc
fisubrl
push
ss
inc
ja
sub
push
inc
mov
cmp
insb
push
cmp
test
pop
add
adc
xchg
sub
jno
adc
aaa
loopne
inc
andb
or
pop
mov
cwtl
stos
scas
daa
jbe
dec
push
sbb
inc
mov
or
outsb
ljmp
cmp
or
push
sbb
out
sahf
sbb
or
cwtl
mov
adc
sbb
lods
lahf
imul
movsb
adc
leave
jp
fwait
pop
cmp
sbb
pop
pop
add
pop
outsb
pop
mov
enter
cwtl
roll
push
std
fcmovnu
mov
lods
inc
pusha
xchg
daa
shlb
cmp
popf
mov
jne
push
adc
jo
push
xchg
fildll
mov
in
push
push
das
mov
and
cwtl
lock
das
outsl
test
sub
sbb
loope
scas
dec
hlt
shrb
out
and
pusha
loopne
repnz
inc
xlat
push
and
and
cmp
lahf
sti
cmpb
sets
xlat
shll
stc
ja
mov
outsl
repz
hlt
mov
and
mov
cmp
fdivs
pop
sub
jp
pop
inc
mov
cmp
out
push
inc
add
imul
mov
xor
ljmp
sub
in
nop
jecxz
arpl
arpl
ja
inc
outsb
pop
sbb
decb
lock
cmp
pop
mov
inc
outsl
pusha
dec
xor
ds
add
sub
data16
and
xchg
popa
mov
rcrb
aas
mov
mov
scas
cmovns
push
jb
inc
leave
cmp
adc
sub
jg
xor
jl
push
mov
cmp
cli
subb
divb
jno
pop
push
leave
xor
xchg
outsl
or
xchg
out
adc
xor
sub
adc
popf
dec
push
cld
mov
xor
xchg
add
repnz
cmp
mov
dec
xchg
daa
or
mov
mov
pop
mov
fcoms
inc
mov
mov
in
test
mov
insb
mov
out
adc
push
cmp
lock
out
movb
cmp
aad
jge
enter
dec
scas
popa
mov
dec
xchg
mov
mov
jge
push
sbb
shll
dec
dec
or
cwtl
mov
repnz
rcrl
fwait
cmp
mov
cmp
int
or
jb
insl
testb
xlat
inc
add
pop
dec
cmpsb
addl
pop
notl
inc
mov
ss
sub
jbe
mov
out
popa
mov
out
pushl
rorl
out
pop
in
mov
push
lock
adc
jmp
push
or
addb
and
outsb
sbb
xor
mov
cmp
dec
or
lret
andl
int
scas
mov
jae
xchg
fadds
cld
rorb
adc
adc
xorb
scas
xor
icebp
in
bnd
jno
fsubl
ljmp
test
fisubl
ja
ret
dec
lret
in
pop
iret
sbb
arpl
mov
mov
push
out
test
lret
mov
lahf
stc
add
adc
stos
test
rcrb
mov
sbb
mov
and
jb
lcall
jne
ss
cmp
mov
outsb
clc
mov
into
stc
push
dec
and
and
aaa
pop
pop
sub
adc
int3
adc
insb
lret
sub
and
stos
sub
mov
or
inc
test
pusha
pushf
call
jg
pop
push
jmp
jbe
push
fidivs
jl
scas
xlat
or
outsl
ficoml
cwtl
repz
xchg
and
mov
jg
out
push
cmpsl
enter
rcrl
sbb
mov
sti
sahf
aaa
daa
or
add
cmpsb
iret
cmpsl
xchg
adc
and
imul
cmp
out
fiadds
nop
mov
imul
sub
sub
movsb
xchg
repz
cmpsl
test
cmp
sub
sbb
roll
enter
stos
inc
sahf
pop
les
inc
adcl
notl
mov
movsl
popa
xchg
arpl
adc
mov
jecxz
aam
cmc
sub
in
out
push
or
xor
repz
das
testl
fs
add
lcall
inc
and
loopne
xchg
lods
pop
enter
ja
sbb
jne
aad
mov
add
movsb
push
xor
push
dec
dec
or
mov
cld
bound
adc
jp
fidivrs
out
sub
sti
rcrl
inc
xchg
fucomi
popf
imul
fsts
popf
imul
flds
cli
repnz
xor
imul
push
push
mov
xchg
dec
fimull
sub
cmp
adc
or
push
imul
hlt
insb
cmp
mov
jg
mov
loop
rep
jle
and
out
fstps
addr16
roll
mov
in
jae
out
lcall
es
mov
ret
mov
push
int3
pushf
nop
mov
or
ljmp
das
inc
cld
dec
cmp
mov
push
mov
xchg
push
loop
cmc
xor
dec
call
pusha
movsl
incb
int3
fisubs
xchg
sbb
popf
aaa
nop
jno
pop
fs
sahf
pop
mov
push
inc
fsubrs
and
ljmp
neg
imul
jecxz
sarb
jnp
pushf
cmpb
dec
fistps
pop
enter
or
adc
xorb
fidivrs
std
push
add
adc
enter
std
insl
jne
iret
adc
inc
cmpb
fsub
jg
sbb
or
fsubl
jo
sub
lcall
jge
and
sbb
mov
or
stos
add
stos
pop
in
sub
fcmove
ds
fs
jae
lcall
push
xor
dec
es
lcall
xchg
jne
inc
and
mov
daa
inc
movsb
fistl
bound
mov
and
lret
xchg
inc
mov
pop
test
pandn
shlb
insl
jp
bnd
add
dec
xor
mov
mov
xor
test
jmp
push
ljmp
cmp
lret
stos
or
jae
insb
arpl
dec
dec
imul
test
imul
flds
jl
loopne
sbb
outsl
jbe
popa
fists
orl
mov
pushf
stc
dec
ljmp
push
movsl
push
push
xchg
inc
idivb
fs
jle
pop
scas
push
out
jecxz
cmpb
jbe
jnp
fcom
enter
add
pop
lds
sub
ret
add
leave
jb
out
orb
mov
jl
ja
iret
add
nop
into
push
pop
dec
fsubs
pop
les
pop
xorb
pop
das
loopne
int3
cmpsb
dec
lcall
mov
and
cltd
pop
inc
jle
lret
mov
insb
dec
pusha
movq
jne
inc
pusha
jmp
xchg
mov
jne
out
lahf
out
cli
jbe
pop
inc
and
fldl
lea
xchg
gs
mov
sbb
repnz
test
jecxz
fs
jne
movsb
mov
mov
das
stos
pop
mov
sbb
dec
in
xchg
fs
outsl
loope
jne
or
xchg
mov
sbbl
sahf
pop
add
xor
adc
mov
mov
sub
jae
cld
ret
pop
mov
test
inc
stc
push
dec
inc
xor
adc
mov
inc
aam
pusha
imul
mov
sbbb
adc
lods
or
sbb
mov
push
aaa
sub
stos
xchg
divb
fsubr
mov
jecxz
int
mov
cmp
xor
addr16
mov
and
and
js
sbb
insl
push
insl
hlt
mov
rorl
push
add
ret
xor
sub
movsl
push
mov
lock
stos
mov
mov
fnstenv
bound
outsl
dec
ljmp
push
mov
and
cs
mov
out
in
mov
cmc
push
loope
push
push
cwtl
cli
add
push
jo
std
xchg
js
sbb
mov
ret
andb
push
sbb
ljmp
inc
add
adc
and
jnp
mov
jae
scas
or
fisttps
and
pop
popl
adc
stos
frstor
cmpsl
fwait
repz
cltd
pop
xchg
cmc
or
xor
xor
aaa
cs
inc
jg
lods
fs
icebp
xlat
popf
and
xchg
ret
out
stos
data16
mov
mov
cmc
xlat
and
out
pop
movsl
popa
inc
jge
sbb
pop
cmc
rsqrtps
lods
jp
cmpsb
scas
and
leave
xchg
orb
mov
lea
jbe
xor
js
cltd
shll
rep
jl
mov
loop
pop
popa
repnz
sbb
loopne
jne
jecxz
push
and
out
sbb
jns
push
testl
nop
int3
pop
xor
cmp
add
inc
hlt
adc
mov
aaa
jmp
fnstcw
sub
xor
pusha
mov
mov
sub
lods
je
xor
stos
pusha
or
dec
cld
ficoml
jae,pn
into
das
aam
leave
aas
or
mov
adc
jle
jecxz
sub
fdivl
lcall
out
xor
lods
repnz
call
pop
cmpsb
mov
adc
shr
jne
std
sbb
out
shufps
jae
rclb
mov
cli
sbb
push
rol
or
jo
inc
and
push
das
jecxz
cmp
sub
xor
outsb
clc
fwait
jmp
push
sub
in
rcl
or
fsubrl
jae
or
and
dec
and
insl
ret
rolb
aam
pop
fwait
les
in
aaa
into
cmp
sbb
add
out
mov
push
xor
outsl
dec
mov
pop
xchg
mov
xlat
outsl
mov
out
shlb
stc
xlat
sbb
dec
mov
mov
outsb
cmp
push
negl
cmp
pop
sti
lods
aaa
testl
jecxz
mov
jb
or
es
add
dec
pop
movl
jg
ret
mov
xlat
pop
inc
push
mov
mov
mov
xchg
in
aam
mov
in
pop
es
and
sbb
mov
scas
sub
nop
imul
mov
adc
fdivl
fstps
fs
cmp
dec
cs
sbb
rcl
movsl
out
pop
lcall
in
outsl
mov
movsl
gs
ret
fimuls
jae
pop
leave
addr16
icebp
out
mov
jl
jl
cmpsl
adc
aas
ret
aaa
shll
fldenv
rcr
add
lcall
pop
insb
mov
and
lods
stos
xchg
mov
notb
cmp
add
mov
lock
dec
xchg
rcl
sti
sub
fadds
out
add
mov
dec
sti
xchg
adcl
movsb
ret
movsl
aaa
sbb
ror
mov
and
fstpt
mov
jg
jbe
mov
mov
lcall
xchg
mov
inc
inc
cmpsw
or
and
test
sarb
xor
dec
jne
sub
bound
lds
and
cwtl
mov
daa
sbb
adc
add
mov
mov
inc
adc
jle
aas
test
ror
sbb
adc
divb
add
push
push
sbb
sub
xor
fucompp
test
cmpsl
sbb
mov
addr16
popf
adc
sbb
inc
aas
cmp
or
mov
push
pop
jae
sbb
out
add
ss
hlt
dec
cmp
cmpsb
pushf
mov
popa
mov
imul
xchg
jae
xchg
cwtd
xor
das
push
adc
push
shlb
push
mov
ret
scas
xor
loop
sarb
jl
pop
ljmp
insb
xchg
jnp
gs
inc
push
ret
test
lds
sbb
scas
mov
cli
or
add
out
pop
inc
call
mov
insl
fldl
pop
mov
orb
fldt
xchg
les
xchg
mov
inc
cmp
inc
dec
cltd
mov
lret
push
mov
mov
xor
mov
lock
cmp
mov
pop
xchg
cmc
or
dec
jg
daa
or
push
imul
xor
ret
xchg
push
and
sbb
idivl
fdivl
in
push
inc
lds
mov
jmp
mov
ss
mov
ljmp
popf
fwait
xor
gs
aam
pop
mov
das
sub
jmp
cmp
aaa
inc
jo
inc
lds
ljmp
cli
inc
mov
mov
mov
lods
mov
daa
add
lods
movsl
rolb
out
dec
shll
sbb
lods
mov
pop
fwait
xchg
test
clc
dec
inc
and
imul
gs
jle
psubusb
inc
mov
daa
fimuls
xorl
clc
in
mov
sbb
aad
dec
push
lods
mov
or
jo
fiaddl
xchg
test
pop
pop
inc
push
ja
xchg
mov
aaa
xchg
push
fidivrl
or
mov
sbb
test
mov
roll
xlat
call
sbbl
mov
in
mov
imul
aas
cmp
inc
push
lds
es
jge
movsb
jle
lds
pop
pop
fildl
addl
xor
fcmovnbe
rorl
lods
out
xor
scas
leave
out
cmp
and
out
ds
testb
cli
xchg
dec
jg
lret
dec
mov
mov
xchg
sti
push
cli
xor
xor
or
jecxz
adc
and
in
or
fsub
xor
andl
cmpsl
leave
es
adc
jno
jbe
pop
andl
inc
push
je
std
add
push
pop
cmpsb
aaa
or
sub
mov
insb
out
cmp
clc
mov
mov
mov
push
repnz
mov
jo
pop
mov
repz
mov
add
sub
outsb
loopew
sub
or
mov
sub
ret
lock
loop
sub
scas
out
push
push
dec
dec
cmp
je
test
outsb
clc
dec
lret
in
gs
cld
rorb
sti
jl
xchg
adc
mov
push
rcr
jbe
out
inc
lods
dec
mov
inc
out
jl
push
pop
loope
or
pop
inc
and
sbb
loop
jl
xor
adc
add
and
or
test
mov
add
loopne
jmp
add
jne
test
fcoms
roll
bound
push
xchg
loop
les
shrl
pop
push
test
mov
cmpsl
sub
dec
mov
je
push
mov
mov
cmp
in
pop
rorl
cmpsb
movsl
pop
xchg
cwtl
xchg
pop
xor
xor
lods
sarl
or
mov
xlat
outsb
add
adc
pop
je
push
or
sti
push
shlb
ss
push
stc
mov
xor
mov
xorb
into
lods
jbe
xor
fldenv
mov
aaa
gs
jecxz
outsl
mov
adc
cmp
les
push
push
test
and
fdivrs
and
outsl
ficompl
xor
inc
xor
lret
mov
test
rcrb
sub
mov
mov
cmpsb
or
aam
cmp
dec
xor
roll
out
xor
lds
icebp
adc
or
push
cmp
in
repnz
mov
mov
stos
data16
jo
xor
or
dec
fdivrl
dec
or
xor
cmc
mov
sub
dec
jl
xor
movsl
xor
int
aam
test
test
pop
les
inc
pushf
xchg
cltd
mov
ds
aad
testb
xor
or
out
dec
shl
in
mov
lcall
adc
jle
fs
sub
out
sbb
js
jge
sbb
stos
push
and
iret
fs
sub
into
in
adc
mov
jo
xchg
jecxz
mov
outsb
movsl
xor
cmp
and
push
rcrl
mov
cmp
add
xchg
or
jno
call
mov
call
shr
ret
jmp
mov
test
outsl
push
mov
sahf
and
call
addr16
sub
cmp
mov
scas
aad
or
lcall
pop
mov
mov
js
ss
xchg
mov
and
stos
cmp
loop
xor
xchg
sub
imul
jmp
pushf
and
repz
scas
push
gs
rcrb
loope
cmc
test
rorl
xchg
inc
mov
xchg
xchg
xchg
mov
das
xchg
sub
aaa
cltd
ss
inc
test
cmpsl
lock
les
inc
movl
add
cmp
lods
sbb
xchg
sbb
sub
xlat
clc
xchg
push
dec
ds
adc
punpckhwd
in
inc
xor
pop
add
mov
arpl
mov
mov
xor
push
notb
lret
push
sub
pop
jle
cli
imul
leave
xchg
dec
push
fwait
pop
stc
sub
popf
sub
fldcw
xchg
mov
mov
daa
mov
adc
mov
sarl
out
daa
notb
dec
out
repnz
insl
das
in
mov
jns
nop
xchg
mov
mov
push
jmp
mov
pop
aam
sbb
mov
cli
push
loop
insb
sti
insl
push
ret
cmpsl
lea
xchg
lcall
pop
xlat
scas
inc
sub
jo
or
xchg
inc
hlt
imul
insb
adc
iret
popa
mull
test
mov
push
and
xlat
and
insb
xor
xrelease
xchg
sub
imul
movsb
cli
popa
fwait
int
and
jmp
into
pop
dec
dec
test
cwtl
jmp
and
push
jge
dec
int
faddl
fwait
push
add
leave
ljmp
lahf
add
xor
rorb
inc
clc
jg
pop
es
lock
test
sarl
push
lahf
push
adc
in
jmp
out
xchg
js
popa
push
sbb
push
daa
mov
mov
dec
sub
push
push
mov
xchg
stos
std
xchg
sbbb
ret
cmp
rolb
sub
call
aas
stos
movsb
push
leave
fsts
pop
add
mov
insb
cltd
lods
cmp
fimull
popa
mov
xchg
xchg
sub
insl
inc
push
out
fsts
and
xor
lret
cmpsb
jp
pop
popf
cmp
mov
les
pop
mov
cmp
xor
jmp
jle
mov
adc
pop
daa
sub
xor
fbld
jo
loop
and
movl
bound
mov
aas
dec
out
out
stc
add
push
lods
or
sahf
mov
and
rolb
jno
jns
add
ja
sti
insl
roll
add
mov
mov
das
sub
jmp
cmp
and
mov
mov
xor
aaa
mov
jno
mov
jne
lods
cmp
mov
addr16
mov
ds
pop
mov
call
lods
dec
imulb
push
cld
push
lods
sub
sub
and
mov
lock
inc
xlat
xchg
test
movsb
xchg
out
std
fdivl
test
sbb
sbb
sub
dec
cwtl
add
and
addb
jnp
fildll
inc
sub
hlt
jno
add
mov
mov
es
mov
or
in
push
jmp
dec
pop
lcall
push
mov
add
jo
lock
jae
cs
sub
hlt
icebp
int3
cmp
out
ror
clc
aam
push
sbb
sbb
jne
or
adc
sarb
ja
test
daa
fcoml
cmc
mov
adc
inc
jmp
jbe
adc
popa
and
mov
or
stc
or
dec
push
dec
out
mov
mov
loopne
inc
jmp
adc
test
fs
cmpl
mov
mov
pop
pop
sub
fmul
add
addb
in
mov
fiadds
pop
in
pop
or
xchg
push
sbb
adc
ja
and
pop
mov
cmp
lahf
adc
push
in
pusha
add
icebp
mov
mov
lcall
inc
inc
fstl
cmpl
or
xchg
mov
push
push
jp
jne
pusha
fucom
addb
jle
mov
popf
repnz
xchg
lret
mov
ret
arpl
ljmp
lret
sbb
push
repz
imul
mov
xchg
xchg
aaa
mov
xchg
rcrl
xor
jb
repz
lea
push
mov
xchg
push
xchg
or
rorl
les
popf
dec
mov
test
mov
jmp
orl
test
dec
ret
jno
lret
adc
push
push
notl
push
cltd
jae,pt
pop
xchg
and
add
xor
test
das
or
dec
mov
lock
icebp
leave
inc
addr16
jmp
jbe
dec
inc
flds
push
adc
pop
add
call
lea
fmull
das
mov
sub
pop
jns
popf
fdivrl
insb
or
jg
xchg
aam
in
sub
loope
mov
out
xchg
icebp
push
sti
lret
and
movsb
sahf
pop
sahf
imul
xchg
dec
or
rcll
mov
cmp
mov
add
ss
mov
fdivr
aad
lea
rcrl
jnp
movsb
mov
adc
xchg
xor
mov
daa
movsb
pop
jns
mov
adc
and
xchg
pop
aam
test
lcall
dec
cmp
pop
ljmp
adc
leave
subb
test
stos
inc
test
fucom
sbb
jge
or
cmp
cmp
icebp
aad
mov
inc
mov
pop
data16
push
or
jns
insl
arpl
ljmp
inc
hlt
pop
dec
mov
push
rorl
imul
lds
pop
xchg
pop
mov
jns
jno
add
scas
push
jp
and
repz
xor
jl
cmp
test
xchg
jmp
je
call
pop
out
mov
sbb
mov
mov
adc
icebp
inc
xor
jmp
push
push
or
sbb
push
add
cmp
push
mov
dec
jecxz
pop
fdivrl
mov
ja
std
int3
dec
stos
fld
js
cmp
fwait
out
or
sub
dec
dec
sbb
inc
orl
push
or
imul
pop
inc
out
jb
dec
cmp
add
lods
stos
repz
mov
pop
jne
sbb
ljmp
push
cmp
cmp
into
push
jb
ss
nop
or
push
dec
inc
pop
insl
cld
mov
xor
inc
push
add
dec
imulb
pop
neg
push
data16
pop
inc
inc
incl
inc
mov
lret
fstps
jp
test
in
cmc
ret
push
ret
leave
mov
sarb
lock
out
repnz
sbbb
cmp
push
inc
divl
cld
xchg
jl
cwtl
into
mov
rorl
xor
mov
push
repnz
sub
jmp
and
inc
push
sbb
push
cmp
dec
test
sbb
test
in
and
jno
int
inc
jb
jne
sarl
inc
fwait
inc
cmpsb
cmc
xchg
dec
sbb
mov
imull
sbbl
in
jge
mov
xor
ret
lods
je
out
cmp
push
push
cmpsl
xor
jmp
and
cmp
sub
scas
xor
insb
xchg
fnsave
dec
fldl
pop
inc
jmp
fwait
mov
and
dec
and
aam
cmc
mov
sti
adc
in
mov
mov
sti
mov
mov
pop
push
inc
test
xor
fwait
cmp
and
add
jns
jmp
inc
sbb
push
xchg
mov
and
jne
out
popa
repz
jge
mov
sub
sub
push
popa
shll
mov
jno
and
sub
dec
inc
adc
cmp
scas
loop
or
and
fstpt
in
dec
sub
inc
and
orb
scas
daa
push
mov
and
add
pop
or
repz
sub
jl
push
add
or
inc
sahf
scas
in
or
lret
and
mov
push
nop
cltd
pop
mov
pusha
outsb
and
lea
movsb
mov
adc
add
xchg
push
icebp
loop
lea
popaw
ret
shll
push
adc
inc
mov
lahf
adc
add
pop
cli
jae
mov
mov
xchg
push
frstor
mov
add
sub
stos
inc
or
es
int3
push
mov
inc
pop
dec
rorl
sub
cld
les
ret
fcmovnb
dec
sarb
jg
push
data16
aam
fldenv
cmp
shll
nop
aas
sub
add
dec
cmp
xlat
sub
adc
ret
cmp
adc
test
jno
icebp
mov
fcmovnbe
push
outsl
push
mov
rcrb
sti
lahf
mov
fistpl
pushf
and
in
in
dec
hlt
xchg
mov
in
repnz
jno
cmp
push
lds
ss
and
into
movsb
out
icebp
lcall
mov
mov
mov
jle
mov
mov
rcll
loopne
adc
repz
mov
cmp
js
mov
jnp
fst
repnz
sbb
or
push
movsb
mov
scas
xor
inc
and
test
add
mov
inc
lcall
pop
popf
inc
and
jl
mov
roll
cmp
dec
add
push
cmpsb
jno
push
fs
dec
pop
fsubr
xor
jecxz
cmp
xor
stc
add
pop
mov
mov
mov
mov
rcrb
xchg
scas
xor
xorl
xchg
stos
mov
je
jmp
sbb
ficoms
cmpsb
shll
sbb
daa
or
mov
pop
lret
cmp
jnp
stos
repnz
mov
cmp
movsb
sti
and
inc
rolb
or
test
cmp
in
outsl
push
xor
ja
leave
jge
popl
dec
pop
pop
mov
aam
dec
les
stos
push
mov
jns
mov
sbb
pop
push
mov
repz
popf
jmp
jbe
sahf
and
loopne
and
mov
clc
sahf
je
push
subl
dec
fisttpll
mov
fsubrl
xchg
rcrl
add
mov
xorl
fs
shrb
jl
push
icebp
ss
pusha
imul
add
ret
push
sbb
scas
int3
into
adc
xchg
jae
adc
push
lahf
shl
pushf
inc
cmp
cmp
aaa
mov
jae
jnp
psrlq
aas
aas
data16
mov
jmp
mov
fwait
out
adc
jae
sarl
mov
xor
je
std
push
test
addr16
lea
rcl
sarb
inc
push
pop
sub
ret
cmp
xlat
xchg
andl
pop
lcall
je
pop
push
daa
ret
adc
inc
and
pop
pop
cmp
adc
sub
push
lods
and
or
loop
jnp
fwait
in
inc
arpl
xor
daa
cmc
outsb
pop
insl
cmp
xchg
mov
fiadds
and
or
xor
mov
dec
int3
add
push
push
mov
push
add
test
scas
loopne
int3
xchg
icebp
aas
push
xor
neg
mov
pop
hlt
js
mov
add
mov
sti
xor
mov
jp
scas
add
sbb
cwtl
xor
jae
ret
out
mov
into
mov
lock
int
enter
adc
cmp
add
out
shll
sub
pop
int
xchg
jecxz
lret
lea
jp
push
ror
les
dec
dec
aam
int3
test
xor
push
jne
into
data16
inc
shl
stos
pop
out
std
out
push
imul
jp
sub
mov
pop
mov
mov
xlat
mov
inc
jecxz
and
add
jae
aad
cmpsl
pushf
ss
and
xchg
movsl
and
mov
lret
xchg
scas
mov
dec
inc
mov
sbb
test
out
mov
ret
dec
dec
ret
inc
mov
push
int
xor
jns
aaa
xchg
mov
insl
xchg
inc
xchg
sbb
lods
mov
aad
mov
idivb
ss
pop
dec
sbb
fwait
bound
movsl
ljmp
mov
xor
mov
out
fnstenv
xor
jge
int3
xor
sbb
cwtl
inc
jge
aas
roll
sbb
scas
pop
mov
mov
and
das
jg
je
fisttpll
adc
nop
aas
cwtl
dec
insb
lahf
out
fwait
or
movsb
cli
aad
inc
mov
pop
faddp
sub
outsl
and
insb
inc
pushf
enter
lock
mov
jbe
icebp
mov
xchg
sti
dec
jbe
xor
sbb
pop
stos
mov
dec
and
adcl
mov
aad
jne
lcall
inc
fcomp
pop
push
daa
in
lahf
pop
xchg
inc
cmp
std
xor
mov
or
push
pushf
add
cmpb
aas
into
ficomps
lret
enter
adc
pushf
adc
cld
ljmp
xor
push
jge
shll
adc
negb
pop
or
pop
out
imul
in
ja
and
lods
jns
int
jg
xor
loopne
xor
adc
js
cmpsb
stos
push
pusha
push
sarl
outsl
cli
sbb
cwtl
xor
lods
and
rorb
sub
mov
fnstcw
pop
movsb
pop
lret
push
add
dec
jb
dec
cld
add
dec
and
pop
xor
xchg
xor
pop
lods
jl
gs
sub
out
test
and
jl
mov
imul
int3
pop
adc
mov
sub
jl
sbb
dec
cmp
pop
mov
dec
mov
mov
sbb
push
jge
push
popa
push
xor
add
div
scas
xor
dec
daa
pop
lock
adc
lds
into
or
repnz
push
mov
cwtl
sub
cmp
rcrb
mov
icebp
jne
jbe
mov
or
add
sbb
sbb
rorb
push
cmpsb
cmpsb
adc
jmp
shrb
in
cmp
lret
int
cmp
sbb
outsl
sub
sbb
stos
imul
dec
mov
lcall
and
pop
fs
cmp
sub
xchg
pop
add
aas
or
push
inc
insl
jb
xchg
mov
jmp
loopne
sbb
jmp
or
mov
popf
rorl
fstps
lea
outsl
cmp
dec
mov
cmpsl
popf
pop
in
pop
daa
sub
leave
out
std
mov
movsb
dec
fucomip
inc
adc
jne
cli
movsb
cmp
xchg
or
add
or
inc
pop
decb
and
add
mov
les
sbb
cmp
clc
adc
sbb
xlat
dec
div
lds
jp
sbb
or
xor
mov
lods
insl
mov
push
xchg
xor
aaa
sti
pop
testl
pop
pop
lds
leave
sub
or
mov
dec
mov
rcr
mov
aas
ret
dec
inc
insb
push
add
rclb
mov
sarb
ficompl
shll
dec
jo
add
cmp
in
inc
imull
pop
testb
mov
imul
pop
in
or
mov
sbb
push
sbb
adc
mov
lea
mov
fldcw
push
test
daa
and
cmp
addl
cmp
jge
push
pop
inc
icebp
lcall
jecxz
xlat
mov
out
mov
popa
scas
xchg
jne
sbbb
cmp
fldt
addl
lea
and
incl
jp
xor
fisttpll
ficompl
xor
js
push
adc
pushf
mov
shrl
clc
add
xlat
jbe
pushf
push
mov
pop
pop
pop
jne
cmp
cmpsb
add
or
inc
xchg
insl
xor
arpl
adcl
in
int
lods
cmpsl
es
add
test
mov
test
jmp
std
call
lea
xor
pop
daa
jmp
clc
jns
xlat
fadd
pop
cltd
pop
jns
mov
sub
mov
xor
pop
scas
push
enter
cs
out
cltd
add
ljmp
jle
sbb
mov
and
clc
xchg
out
dec
mov
push
stc
xchg
lods
ret
ret
gs
movsb
dec
xor
lock
xchg
inc
fidivs
in
cmc
jne
or
mov
movsb
ds
dec
mov
sbb
mov
jo
fiadds
or
loope
push
inc
int
mov
aas
cmp
inc
push
push
sbb
out
mov
inc
addr16
ds
and
out
add
mov
mov
add
lea
fldenv
xchg
ljmp
sbb
gs
adc
or
jns
pop
shll
xor
ss
cmp
and
addl
or
jmp
push
jecxz
sbb
icebp
lea
lods
xchg
xor
cmp
test
inc
cli
incl
inc
and
mov
push
hlt
movsl
lcall
or
leave
imul
sub
les
push
adc
push
faddp
cld
lea
xor
jge
dec
mov
fs
lods
mov
fcmove
data16
dec
lret
sahf
and
cmp
movsb
jnp
lcall
lea
hlt
mov
scas
dec
cld
stc
dec
add
andb
mov
lea
out
jne
dec
sbb
into
or
or
lea
int3
add
ds
xchg
cltd
xchg
lds
dec
popa
or
dec
push
and
pop
xchg
cmp
call
push
mov
dec
mov
ja
enter
mov
sbb
dec
mov
cmc
fistl
int
adc
cmp
adc
das
adc
stos
add
ror
das
xor
dec
ljmp
mov
lcall
dec
test
dec
mov
nop
test
into
ss
push
int
imul
mov
rol
sub
dec
xlat
fildll
lods
push
or
js
je
jmp
ret
xchg
nop
lret
and
xor
je
inc
pop
add
ret
mov
adc
insl
push
mov
ss
mov
jae
cltd
mov
pop
roll
imul
incb
push
mov
push
jnp
ljmp
data16
sbb
cmp
sub
and
out
jecxz
pushf
mov
mov
daa
push
loopne
jge
xchg
icebp
sub
fidivrs
loop
pop
shrl
jle
in
push
stos
mov
adcl
xchg
sar
insl
int
rol
sub
clc
lahf
cmp
add
cmp
sbbl
push
xor
aam
add
bound
pop
lods
add
mov
mov
cmp
iret
shlb
sbbl
jmp
pop
push
mov
aas
jmp
xchg
mov
shlb
xchg
ret
ret
pop
fucomp
fidivrl
xor
mov
sbb
loope
cmp
add
les
ret
jb
or
jp
jmp
or
sbb
sub
xchg
mov
jne
inc
subl
push
add
hlt
sbb
fcoms
jmp
mov
or
pop
push
inc
arpl
in
sub
pop
adcl
cmp
in
cmp
xor
shrb
fistpll
jns
sub
outsl
mov
xor
xchg
ljmp
jg
jl
arpl
or
push
cmp
sbb
mov
xor
inc
fldcw
add
inc
pop
sarl
pop
cmpsl
fsub
leave
popl
push
lcall
movsl
pop
leave
imul
divl
bound
add
pop
xchg
pop
adc
xor
aas
mov
push
sbb
cmpsl
sub
ljmp
adcl
out
test
fwait
add
out
loopne
icebp
out
sbb
fmul
je
or
ret
xchg
fisttpll
sbb
bound
sub
call
xchg
lods
icebp
jb
mov
inc
mov
mov
sub
or
jnp
add
lods
mov
mov
mov
shlb
ss
push
pop
dec
push
fs
int3
ds
pop
mov
mov
subb
lods
adc
out
cltd
mov
sarl
popa
ret
stc
mov
je
repz
pop
sti
cmp
in
lea
and
pop
cmp
jecxz
fcomps
and
stc
popa
cli
or
rolb
add
aam
aam
adc
sbb
mov
test
int3
scas
repnz
mov
lcall
mov
std
out
jle
clc
lds
push
scas
in
cs
inc
jno
sbbb
lret
outsl
inc
and
insl
es
idivb
add
push
push
ret
sub
push
mov
adc
cmp
out
fsubs
xchg
xchg
mov
in
and
jmp
fsubrl
lret
dec
jns
sbb
dec
dec
xchg
inc
sbb
inc
xchg
ljmp
pop
int
pusha
xchg
pushf
out
in
mov
imul
cmp
add
mov
mov
insl
adc
lods
scas
push
scas
fsub
lock
jle
roll
cli
cmp
scas
push
pushf
ja
mov
mov
aas
in
sub
xor
inc
scas
fxch
iret
sbb
popf
stos
in
inc
inc
and
adc
inc
mov
inc
bound
xchg
shll
popf
mov
sarb
mov
xor
mov
loope
lret
mov
xor
push
ds
jecxz
test
lret
insl
push
adc
sbb
dec
xor
dec
jge
mov
dec
sub
loopne
cwtl
xor
imul
jge
out
cli
fisubs
mov
daa
add
sub
into
in
pushf
mov
jb
xchg
dec
mov
repz
les
mov
addr16
lcall
cmpsb
xchg
fisttps
test
or
sub
fidivs
or
movsb
jmp
mov
cmp
fisttps
mov
or
push
mov
insb
je
clc
and
xlat
cmp
or
nop
ret
mov
lahf
sub
xor
aas
xchg
in
sbb
test
pop
jns
in
mulb
sbb
outsb
mov
dec
pop
sub
std
cmp
pop
jb
sbb
push
cli
and
std
mov
nop
mov
lea
cmc
mov
add
rcrl
cmp
dec
imul
cmpsl
es
lods
je
xlat
popf
jno
addl
jl
sti
mov
jmp
jge
pop
sub
stos
mov
and
outsb
sub
test
add
mov
inc
aad
mov
imul
outsb
push
mov
dec
lock
cld
out
sub
adc
negl
ret
xchg
lcall
pop
std
jnp
loop
or
mov
aaa
or
xlat
pushf
dec
fisttpl
jb
dec
js
dec
jge
shlb
or
pop
sbb
das
loop
shr
inc
cmc
or
and
inc
xor
or
decl
cmp
notl
pop
fwait
cmp
add
addr16
in
fwait
repnz
and
sbb
ss
mov
imul
leave
lahf
mov
xor
in
dec
adc
fstps
dec
xor
cmpsl
hlt
cli
sti
cli
scas
int
test
pushf
pushf
xchg
scas
fnstcw
out
mov
cmp
movsl
lods
jne
mov
mov
mov
sbb
adc
stos
daa
cli
or
mov
dec
mov
jge
cmp
add
xchg
mov
mov
add
pop
pushf
ret
mov
imul
push
pop
jl
scas
sarl
popf
sbb
in
and
enter
fdiv
or
jns
in
mov
fld
cwtl
push
loope
mov
lock
fwait
pop
mov
popf
lock
out
out
stos
shl
and
inc
mov
sub
rorl
xchg
add
xor
ss
or
addps
dec
mov
pop
nop
je
cmc
mov
dec
ficompl
hlt
inc
or
gs
mulb
cmpsl
sub
jg
mov
aaa
push
cmp
cmp
lret
push
lock
call
xchg
in
loope
and
aas
jg
inc
cmpsl
mov
xor
icebp
jne
push
jae
das
jae
dec
in
pop
inc
repz
cld
lcall
and
rolb
xor
mov
lock
stos
das
shrl
addr16
repz
lods
or
sub
addr16
or
insb
cwtl
mov
outsl
mov
lods
insl
pop
rcr
mov
fcmove
adc
and
imulb
add
nop
add
and
and
push
pop
and
sub
pop
lock
push
fwait
jmp
scas
fsubs
mov
xchg
dec
xor
mov
ds
fsubrs
fsts
mov
orl
out
lret
mov
out
jne
sbb
jg
pop
test
xchg
movmskps
cmp
adc
jp
out
xchg
lret
fsubrl
clc
inc
fwait
daa
sub
jecxz
adc
push
stc
inc
or
xor
push
xor
icebp
addb
lods
stc
decb
or
jg
dec
lahf
mov
lds
push
and
pop
xor
pop
and
add
loop
fwait
xor
sub
xor
xchg
roll
roll
add
xchg
cld
cmc
xchg
sbb
or
jg
mov
mov
cmp
inc
sub
lcall
sarb
push
xchg
xchg
jbe
mov
mov
pop
fldcw
insl
scas
xor
js
out
popf
scas
push
aad
mov
std
jmp
add
xchg
pop
in
loop
je
add
or
cmpsb
outsb
mov
inc
mov
jbe
fwait
mov
add
sbb
xchg
or
repnz
pusha
or
ja
push
test
sub
push
lret
pop
stc
mov
loope
xchg
mov
fidivl
das
in
mov
mov
jo
leave
sub
or
xchg
mov
push
or
sub
or
cmpsl
mov
int3
dec
imul
cs
jge
sbb
mov
roll
and
push
sub
xchg
lcall
scas
xchg
ret
ret
pushf
sbb
adc
dec
mov
sbb
fstpt
xor
aam
pushf
fs
mov
or
ret
imul
cli
ja
imul
inc
mov
or
out
movsl
xchg
add
imul
orl
xor
lea
xor
push
xchg
test
lret
fildl
in
fcmovnu
xor
out
test
lcall
lds
aas
cmpl
and
in
or
xor
lock
rorl
in
cmp
lcall
mov
cmpsb
push
cwtl
mov
add
punpcklbw
cmp
jmp
jl
out
out
xchg
sbb
ds
lock
cltd
sbb
jmp
bnd
clc
dec
and
mov
xorl
sarb
cmpsb
jnp
jo
insl
xor
sbb
frstor
pushf
jg
scas
and
add
enter
add
or
sub
push
into
daa
jne
into
cli
pop
loop
inc
movsb
sbb
mov
into
loop
adc
push
out
aad
addb
and
mov
in
or
push
icebp
mov
xchg
adc
test
and
mov
or
andb
jnp
out
sub
test
popa
xor
jnp
mov
lock
stos
sbb
mov
test
inc
pop
or
mov
push
popf
push
push
mov
lods
jo
fwait
arpl
mov
pushf
hlt
sbb
add
push
pop
mov
push
jns
into
and
rol
jmp
sbb
xchg
xor
mov
ret
cmp
movsl
notb
mov
sub
pushf
cld
insb
xor
jae
add
inc
stos
aad
repz
push
loope
adc
push
pop
add
jo
lds
aad
loope
xor
sbb
leave
xchg
out
into
mov
mov
outsl
icebp
fsubr
outsl
shrl
xchg
iret
push
faddp
pop
adc
dec
xchg
jb
jne
daa
in
aas
sbb
sub
inc
arpl
shrb
add
cld
outsl
mov
shr
xchg
jnp
xor
clc
sbb
pop
setl
cmp
mov
sti
sbb
mov
add
xchg
pop
and
add
dec
cmpsl
cmp
scas
outsb
and
jnp
popa
adc
mov
sub
sysenter
mov
xchg
mov
sbb
jle
int
mov
lret
fldl
mov
xchg
test
and
ja
mov
outsb
fwait
jg
xchg
mov
andl
mov
je
pop
mov
jbe
int3
dec
or
int
jle
faddp
in
lds
andb
or
or
mov
jns
sub
xchg
aaa
add
add
insb
push
jmp
insl
pop
int3
ss
imul
mov
popa
jge
push
and
test
pusha
push
mov
jp
push
mov
insb
or
jmp
cwtl
push
outsl
das
loop
mov
dec
and
adc
or
sti
mov
dec
add
outsb
scas
loope
mov
dec
lods
push
sar
inc
test
aam
pop
js
xor
inc
mov
cmp
jle
push
push
ss
movsb
lcall
mov
or
xchg
dec
jecxz
add
jle
daa
push
jge
and
and
xor
xchg
pusha
scas
push
sub
sub
fcmovbe
aad
xor
addr16
insb
dec
in
jge
addr16
push
dec
inc
sbb
aaa
dec
outsb
insb
aam
cmp
jl
dec
dec
mov
pop
mov
in
or
ljmp
and
je
cmpsb
dec
push
cmc
int3
and
dec
mov
ss
cmp
and
mov
mov
lcall
cmp
jnp
aad
push
and
push
sahf
in
xlat
xchg
sub
jns
insb
enter
out
dec
push
sub
push
jns
xor
mov
or
out
adc
pop
je
subb
add
dec
icebp
lock
sub
mov
add
inc
xchg
push
xchg
sub
mov
jns
xorb
add
rcll
jge
jae
mov
inc
test
les
push
push
push
aam
sti
mov
loope
into
les
adc
lods
ja
and
dec
data16
sub
leave
add
sub
jae
pop
pop
into
insb
nop
out
pop
jmp
test
or
adc
inc
cmp
add
test
fcmovu
pop
push
mov
jl
push
int3
jge
mov
cmpsl
out
jno
mov
lock
inc
js
in
mov
dec
adcb
and
adc
jmp
jg
sbb
divb
xorl
adcl
cltd
imul
popa
xchg
sbb
sub
mov
lock
mov
lret
xor
xchg
add
jecxz
cmc
js
int
shr
jbe
clc
mov
mov
movsb
push
sbbl
or
movsl
data16
test
fwait
dec
pop
mov
enter
roll
cltd
outsl
call
and
and
jae
cmpsl
mov
dec
lcall
cli
cmp
xchg
jecxz
jns
fdivl
xor
in
sub
push
es
bnd
xchg
mov
sbb
insb
dec
ja
mov
imul
sbb
movsl
lahf
mov
das
fsubrp
push
ds
cmpsb
rorl
jp
mov
jecxz
mov
arpl
sub
sbb
pop
jle
loop
push
adc
scas
push
pop
or
pop
call
aad
rcl
jmp
or
loope
mov
dec
jnp
hlt
adc
in
or
stc
stos
les
rcll
xor
or
fisttpl
jp
xchg
lock
sub
outsl
jmp
inc
cmc
push
scas
fiadds
cmpsb
dec
sbb
into
adc
jb
and
inc
mov
subb
or
mov
jbe
addr16
pop
shrb
incl
xor
lret
sbb
popf
test
jecxz
jb
mov
adc
sub
xor
stos
int3
in
shlb
sahf
sub
lea
sbb
pop
adc
movsb
add
mov
out
mov
xchg
dec
fs
sarl
clc
jbe
out
clc
sbb
sub
out
pop
or
sti
gs
push
repz
lock
mov
cli
mov
xchg
mov
iret
cmp
ret
popf
mov
sub
les
sub
lds
pop
push
sbb
xchg
rorl
lret
sub
jecxz
mov
push
pop
dec
xor
aam
xchg
sub
mov
dec
jne
push
cmp
fldcw
lock
out
or
and
inc
sarb
sbb
cwtl
out
ret
aas
je
sub
clc
mov
pop
or
dec
sahf
cmpsl
les
add
xchg
lock
gs
shll
loope
and
inc
aam
cmp
or
jno
and
adc
cli
in
pop
stos
sub
movsb
push
pusha
sti
dec
addr16
push
cwtl
xor
push
roll
in
out
add
and
mov
insb
jb
int3
mov
movsl
push
in
insb
aas
add
xor
push
push
lret
bound
enter
out
clc
xchg
and
sub
jno
fdivrs
push
loope
and
aaa
mov
sub
xchg
pusha
icebp
scas
xor
pop
mov
xor
scas
mov
xorb
outsl
aad
dec
repz
xchg
xor
fildl
dec
fs
adc
arpl
jmp
add
adc
mov
ficoms
pop
mov
aam
xchg
xlat
imul
fdivrs
test
std
aaa
mov
xchg
pop
inc
mov
mov
and
les
mov
into
cmp
leave
rclb
adc
sbb
add
xchg
dec
das
imul
int3
ja
sar
push
sbb
fucomi
push
push
xchg
inc
in
lcall
sahf
jbe
mov
or
add
adc
mov
bound
popf
mull
sub
mov
inc
mov
je
repnz
fcoms
loope
xor
dec
lcall
orb
arpl
cmp
and
adc
cmp
push
or
push
daa
cmp
push
lahf
loop
les
jne
sbb
pop
rcrl
mov
in
shll
lock
arpl
aad
fisttpll
mov
and
or
add
dec
sbb
into
ljmp
ret
xor
sbb
dec
mov
push
push
pop
lds
fldl
cld
sbb
xchg
mov
dec
push
fcom
or
inc
mov
and
cmc
cmp
xchg
push
or
or
mov
int3
sahf
push
shlb
sbb
add
into
aad
outsl
inc
or
cmc
aas
popf
rcrb
inc
cld
and
xor
idivb
inc
insl
ja
mov
push
inc
sahf
jecxz
mov
movsb
repnz
inc
jecxz
dec
in
or
cmp
sbb
sahf
insb
imul
sub
add
test
lahf
push
xchg
mov
mov
les
fcmovb
rcrb
popa
mov
movsb
sub
jecxz
fwait
testl
sbb
dec
ficoml
mov
lock
push
mov
xchg
ret
ss
lret
cwtl
fldt
cmp
push
mov
adc
sub
sub
inc
icebp
rcrl
dec
mov
jecxz
mov
sbb
rcl
dec
dec
repnz
xchg
mov
mull
xor
jns
out
mov
cmp
cmpsl
pop
sahf
andnps
clc
call
push
lcall
rolb
push
js
cltd
sbb
jg
cs
mov
mov
mov
es
sbb
inc
cwtl
clc
push
testb
popa
push
cmp
or
fimuls
add
insb
mov
mov
dec
mov
xchg
sbb
dec
shlb
lods
fimull
insb
sub
inc
lahf
mov
imul
fcom
push
out
ljmp
xorb
mov
inc
mov
or
add
scas
js
das
cmpsl
dec
lea
lahf
out
mov
pop
xor
mov
imul
push
lods
idivl
pop
cmp
aam
mov
movb
sub
or
lret
mov
fs
lahf
or
fsubr
fs
dec
out
push
mov
icebp
cmp
inc
int3
sbb
mov
out
test
lret
mov
xchg
xlat
ljmp
inc
imulb
push
mov
xchg
cmp
mov
pop
in
dec
insl
in
call
mov
sub
cmp
sub
dec
out
pop
lahf
pop
push
ja
jl
adc
repz
sub
in
dec
enter
addr16
mull
call
stc
sub
sub
lcall
rorb
jmp
js
pop
daa
sbb
dec
or
and
push
dec
xchg
mov
dec
dec
cmp
jnp
and
cmp
rcrb
mov
out
cltd
out
jnp
push
ret
mov
mov
loopne
ret
push
lcall
pushf
jecxz
movsb
es
ja
leave
mov
loop
sub
inc
ss
xchg
mov
std
and
ret
jns
out
repnz
jg
jmp
xlat
lds
dec
jb
mov
xlat
dec
dec
lret
dec
ret
enter
xchg
mov
rolb
es
leave
js
mov
add
or
loopne
fdivrs
popa
out
in
repz
into
pop
and
iret
jb
ret
dec
loopne
xchg
int3
arpl
fs
add
mov
jmp
int
jmp
xor
sub
cmpb
mov
rcl
ss
mov
mov
lods
in
test
xchg
addr16
xor
fs
jl
inc
adc
cmp
div
push
xlat
rcll
sub
sbb
aas
int3
mov
mov
aad
adc
lods
push
nop
jb
jbe
jmp
jno
cmpsb
outsb
dec
push
cld
aad
aad
mov
mov
jg
push
mov
push
or
and
inc
mov
es
xor
sbb
xchg
lret
jb
push
pop
mov
movsb
jbe
lock
mov
mov
mov
das
out
adc
push
inc
mov
leave
fldl
cmp
sbb
mov
mov
ret
adc
and
cmp
xchg
push
jbe
and
mov
or
pop
popf
fisttpll
inc
jae
cmp
sbb
movsb
ljmp
or
cs
addr16
lcall
cmc
push
and
inc
sub
mov
les
sub
dec
cmpsl
dec
xchg
push
dec
mov
pop
adc
add
mov
jge
dec
subl
popf
jbe
mov
pusha
pop
out
jecxz
popa
sub
outsb
cs
xorb
pop
out
dec
or
loopne
cmpsl
arpl
sub
and
iret
push
test
xchg
push
pop
in
push
mov
sub
movsl
xchg
mov
add
push
dec
xor
xchg
test
inc
push
aam
push
jl
xchg
lret
mov
les
imul
icebp
loopne
push
sti
stos
stos
sbbb
xchg
cli
fwait
mov
stos
out
adc
shll
add
xchg
xchg
mov
and
sub
push
test
sbb
jbe
pop
out
imul
dec
sbb
mov
sub
lods
lret
lcall
mov
test
or
subb
iret
mov
sub
pop
rcl
std
mov
inc
insb
lret
pop
add
pop
mov
leave
jo
and
cwtl
sbb
push
push
pop
jge
int
adc
ljmp
es
mov
adcl
dec
xor
ljmp
dec
sbb
mov
ret
iret
ja
popa
lds
fwait
js
sub
mov
outsl
gs
or
rcl
cltd
cli
xor
mov
add
scas
scas
loopne
pop
int
lret
cs
enter
xlat
xchg
ja
xor
jge
sar
out
jne
je
addr16
es
jno
mov
movsl
add
aam
out
ficomps
mov
lods
mov
fldl
xchg
jge
sbb
push
pop
popf
inc
cmp
stos
pop
movsl
lret
stos
clc
mov
mov
push
jge
push
mov
mov
jmp
andl
jb
shr
ret
ljmp
adc
cwtl
int
pop
sti
imul
xor
push
rcr
dec
iret
mov
xchg
mov
pop
icebp
ds
mov
je
mov
inc
fildll
xor
push
xchg
hlt
jbe
cli
xor
inc
ret
shl
mov
popa
fdivr
jb
and
add
cmp
and
mov
inc
call
out
sub
xchg
xor
xor
lods
jb
addb
in
cld
dec
inc
or
jl
lcall
in
test
das
adc
shrl
cmpsl
jo
out
es
popf
jo
adc
inc
movsl
sbb
jg
mov
mov
mov
and
clc
pop
pop
jb
pushf
int3
jg
test
iret
mov
daa
in
gs
add
into
mov
ss
xor
mov
frstor
jo
inc
loop
mov
or
xor
adc
lcall
jp
xchg
push
jne
cmp
sti
out
fisttpl
scas
xor
push
dec
leave
call
test
mov
sub
push
or
push
mov
mov
pop
rcrb
pop
ret
std
pop
mull
cmpb
push
jno
addb
jge
xchg
push
pop
loopne
shlb
dec
push
xor
dec
dec
les
in
in
and
sub
cmpsl
cmp
icebp
ret
add
je
cltd
ret
adc
push
cmp
aad
les
mov
aas
js
cmc
cmp
ficomps
push
mov
fs
cmp
inc
dec
addb
xor
dec
jl
js
sti
mov
fsubl
cmpb
test
call
in
and
cmp
and
stc
dec
xchg
flds
add
pop
int
jns
rcl
dec
mov
mov
add
cli
jle
out
mov
jns
push
inc
pop
adc
jle
outsb
mov
push
add
fcompl
dec
mov
mov
in
push
loopne
inc
push
sbb
or
dec
test
sub
jns
into
lods
std
scas
repnz
scas
aad
fwait
adcl
mov
mov
aad
and
cs
cmpsl
rcrb
push
lods
jns
inc
aad
dec
seta
lods
pop
sbb
sub
mov
xchg
fidivrs
inc
lea
dec
dec
dec
into
jg
ljmp
mov
out
jns
test
outsb
scas
xor
cmp
jg
daa
xor
lea
test
pusha
les
pop
shlb
decb
bound
jge
popf
inc
mov
stc
jg
cs
xlat
fldenv
jecxz
xchg
icebp
push
adc
sti
push
lahf
in
xor
sbb
clc
sub
add
inc
dec
add
mov
xchg
mov
insb
out
jb
or
sub
adc
in
jle
sti
out
out
hlt
insb
arpl
xchg
cmp
setge
add
wrmsr
and
push
or
sub
cwtl
dec
inc
mov
stos
push
loop
sub
in
sarl
mov
push
sar
fisubrl
dec
fadds
shll
subb
icebp
lret
stos
sub
and
push
sbb
fstpl
ss
and
ljmp
stos
loope
and
dec
pop
sbb
mov
push
adc
inc
or
mov
xchg
add
in
push
lds
aad
pop
sub
xchg
icebp
fucomp
mov
xchg
sbb
add
jp
xchg
xor
testl
or
jmp
bound
notl
mov
or
shl
mov
mov
jno
daa
mul
lds
aaa
or
int3
add
bound
lods
inc
cmc
adc
cltd
sahf
pop
shll
dec
repz
cmp
xchg
or
pusha
or
cmc
pop
sti
sub
dec
lret
xlat
int
and
add
add
sahf
insb
xlat
lcall
xchg
jae
int3
fidivrs
mov
cmp
pop
notl
mov
lcall
lods
shl
jecxz
lods
xchg
ret
cmp
lds
ss
xchg
dec
aam
or
dec
pop
push
popa
std
fstps
cmpsb
or
and
pop
mov
mov
push
mov
mov
inc
out
lcall
dec
jns
gs
test
add
mov
lcall
lea
cmc
add
add
ficoml
sub
out
add
mov
pop
inc
inc
pop
cmp
stos
cmpsb
xchg
pop
aam
enter
xor
fst
cmp
outsb
dec
add
xor
les
adcb
fistpl
mov
out
lods
repz
stos
or
and
jmp
ret
int
xor
jl
divl
cmc
cli
jbe
jmp
lods
mov
jo
mov
test
pop
cmpsb
mov
xchg
imul
adc
fdivs
daa
xor
clc
pop
pop
fistpll
and
sbb
cmc
or
fnstenv
clc
std
sbb
mov
xchg
dec
sbb
inc
gs
sbb
xchg
mov
and
cltd
lods
insb
or
sub
push
outsb
and
jae
adc
rorb
pop
push
inc
cmp
insl
inc
sbb
dec
mov
or
int3
sub
sbbl
in
pop
jno
arpl
xchg
fwait
add
inc
mov
mov
popf
aas
ret
out
add
scas
leave
fwait
lret
sbb
mov
out
data16
push
movsl
fwait
cmp
fnstenv
testb
movsb
jl
cmp
sub
je
fcomip
daa
mov
cs
repnz
pop
dec
sub
fst
enter
xor
test
cmp
dec
pop
jno
in
push
or
fwait
stc
pop
imul
in
or
outsl
or
es
add
pop
insb
lods
insb
jg
bsr
daa
stc
pop
inc
xorb
pop
scas
stos
sub
and
mov
sub
lea
sub
movhps
cmpsl
and
adc
fcomip
xchg
lds
rolw
pop
mov
addb
bound
test
sti
es
neg
mov
sbb
pop
sub
fsubrl
adc
pop
test
incl
push
jge
aaa
lahf
and
or
mov
aas
sub
ds
outsb
sbb
jbe
sub
rcrl
pop
cmp
push
jns
lock
and
repz
int
repnz
ficompl
vpand
add
and
xchg
popa
push
xchg
sbb
mov
push
popa
or
and
mov
lss
inc
push
stos
shlb
cwtl
pop
lea
int3
mov
popa
shlb
enter
shll
inc
xchg
ljmp
xor
mov
jno
jecxz
or
aas
add
push
mov
jae
jp
cld
lods
idivl
sti
jne
push
inc
test
jmp
aas
dec
scas
aaa
popl
mov
cmp
fs
mov
cmp
into
mov
mov
add
lea
push
call
enter
lret
push
push
and
sbb
mov
mov
adc
mov
insb
fstpl
adc
inc
pop
and
clc
mov
inc
ret
mov
out
aas
lods
adc
or
push
lods
adc
das
test
cmp
push
pop
mov
lahf
in
mov
inc
inc
pop
fcmovne
push
setp
mov
mov
icebp
out
out
sub
adc
and
or
adc
out
push
or
cmp
mov
jg
js
or
jne
jl
mov
pop
mov
outsb
data16
fwait
xchg
enter
inc
or
out
out
push
out
pop
mov
sbb
mov
inc
sub
je
xchg
xchg
jns
ja
pop
jb
test
mov
sarl
outsb
into
cltd
push
fildl
sub
dec
outsl
mov
xor
aad
push
stc
pop
jnp
hlt
out
xchg
lret
fs
or
mov
push
lea
jl
test
gs
test
sahf
mov
pusha
fstpt
fnstsw
insl
sub
inc
add
lods
and
test
push
xlat
mov
pop
cli
sbb
add
sub
mov
popa
and
xchg
ret
test
int3
mov
adc
push
aad
mov
jno
orb
mov
sbb
cmp
in
outsb
mov
push
mov
or
lods
out
mov
mov
xchg
cmp
jo
das
scas
push
jne
or
pop
jmp
aas
arpl
jb
loopne
mov
mov
addr16
or
call
mov
mov
xor
mov
movsb
jbe
orb
push
nop
inc
xor
fsubs
clc
movsl
cmpsl
adc
push
andl
fstl
mov
sub
sub
mov
inc
jbe
dec
ljmp
mov
adc
mov
orb
mov
mov
adc
loope
jo
iret
pop
clc
loop
roll
aam
lea
or
lock
cld
insb
movsb
dec
jge
and
cltd
jg
enter
pop
ret
ret
and
cmp
xchg
sub
test
xor
pop
sub
in
dec
shl
xor
mulb
xchg
mov
dec
and
dec
dec
pop
inc
subl
adc
mov
ud0
dec
out
insb
lret
fs
movsb
movsb
rorl
and
or
dec
cmp
call
popf
psadbw
dec
pop
sbb
sbb
int
mov
pop
mov
je
dec
fcompl
hlt
and
jne
fcmovbe
xchg
scas
push
pusha
sbb
mov
enter
ds
xchg
jns
fdivs
cmpsl
mov
cmpb
pop
in
mov
int
push
daa
iret
aaa
mov
lret
lret
ss
sahf
fsub
sub
lcall
les
scas
or
inc
mov
jmp
clc
dec
jmp
popa
aad
data16
mov
lea
insl
and
aad
push
leave
mov
cwtl
in
mov
jp
inc
inc
dec
sub
ficoms
mov
push
mov
inc
xor
fstpt
insl
cmp
cmp
lcall
sub
cmp
orb
sub
jnp
dec
imul
mov
arpl
je
inc
sbb
sbb
lea
sarb
xchg
sub
push
mov
push
int
lret
xchg
dec
mov
or
jnp
dec
sub
ss
sbb
ret
insb
in
rcr
or
xor
loop
and
xchg
pop
inc
jae
arpl
testb
in
stos
gs
into
loope
clc
int
dec
jns
mov
icebp
or
adc
pop
scas
dec
jbe
sbb
in
movsb
jne
push
repnz
mov
xor
test
fwait
mov
or
jmp
subl
into
fisttpl
fwait
push
ljmp
lcall
sbb
mov
out
mov
and
gs
add
xor
in
imul
addr16
jp
pop
movsl
jge
repz
sub
xchg
or
dec
push
lcall
loope
pop
movsl
cmp
lods
jbe
pop
inc
stc
cmp
ret
jg
loopne
nop
and
or
lods
mov
dec
movsb
jp
dec
pop
inc
fisubl
xor
add
push
jle
cmpb
loope
xchg
pop
je
aaa
jnp
cli
lds
orb
pop
dec
xchg
add
int
push
out
out
sub
and
lds
data16
cmp
jb
scas
cmpsl
out
adc
mov
mov
sbb
mov
xorl
push
insl
outsl
stc
lret
mov
xor
push
rol
inc
fidivrl
daa
push
subb
mov
mov
pop
lods
xchg
call
cmp
sub
push
push
xor
ds
fmull
push
aam
xlat
scas
loope
jnp
mov
repz
sbb
lods
pause
dec
mov
sub
mov
mov
xor
lret
clc
outsb
sub
ret
mov
mov
pop
ret
xorw
xchg
dec
inc
pop
pop
fbstp
in
adc
push
fsts
pop
xor
mov
fnsave
mov
dec
sbb
xchg
sbb
xor
xlat
cmc
lcall
lods
push
test
cs
lahf
lret
jecxz
notb
sbb
stos
test
sbb
adc
std
xchg
pop
adc
dec
mov
repnz
inc
and
daa
lods
mov
sbb
mov
xchg
pop
mulb
ds
in
jmp
push
sahf
arpl
dec
sbb
sbb
mov
mov
mov
add
fildll
xor
jbe
bound
push
mov
mov
inc
ret
xchg
mov
dec
xchg
push
lock
pop
pop
mov
push
push
popa
loope
mov
dec
push
movsb
lret
add
lods
sti
cmp
jmp
pop
mov
popa
mov
mov
push
jle
or
jno
loopne
cmpsb
test
xor
inc
andb
test
xchg
aam
xchg
mov
mov
nop
fwait
pushf
adc
cli
mov
inc
aad
cli
rcrl
loopne
and
loop
xchg
daa
and
and
inc
icebp
into
sbbb
insb
xlat
ja
xlat
bound
fistpll
dec
cmpsl
mov
jge
jle
leave
js
inc
jge
xlat
hlt
add
rcll
mov
cmpb
les
lock
icebp
shlb
sbb
test
pop
push
inc
ljmp
jl
mov
arpl
clc
lds
jne
stos
mov
xor
popa
push
or
pop
sub
movsb
adc
lds
and
std
outsl
pop
and
or
add
pushf
shll
orl
loope
mov
scas
cmp
add
inc
je
andb
js
mov
push
shlb
fdivr
add
and
daa
cmp
inc
sub
inc
mov
jno
add
jns
ljmp
xor
push
sbbb
mov
xor
xorl
xchg
or
leave
imull
jp
pop
cltd
jp
push
inc
cmc
movsb
jecxz
aam
outsb
loop
lods
jmp
mov
push
jg
loopne
jecxz
test
jnp
cmpsb
cs
lret
ror
add
push
ds
call
mov
ja
add
mov
jge
in
scas
xchg
mov
js
inc
push
add
stos
inc
cmp
push
or
dec
mov
inc
imul
dec
call
sub
loope
mov
in
enter
xor
jecxz
adc
dec
sub
fsubs
and
mov
dec
paddq
cld
sbb
xchg
inc
push
test
loope
push
fs
enter
xchg
popa
clc
cmpsb
mov
push
ja
leave
mov
adc
add
stc
inc
pop
hlt
inc
cmc
xchg
stos
mov
sbb
fdivs
pop
jmp
data16
push
xchg
pop
and
and
push
push
adc
push
xchg
jo
mov
jno
into
add
jmp
popa
stc
rolb
mul
iret
push
es
and
push
mov
push
jno
mov
repnz
out
sub
vcvtdq2ps
int3
xor
adcl
into
mov
sub
mov
ss
cmp
sub
push
lahf
lock
dec
xor
xor
jo
sbb
xchg
inc
lds
orb
cltd
sbb
jle
cli
xlat
imul
mov
lahf
fstps
sub
pop
aas
and
mov
jmp
in
shr
inc
pop
mov
mov
andl
mov
sbb
xchg
es
inc
mov
lret
push
add
fs
popa
jle
ret
sarl
fdivrl
or
xorb
xor
dec
sub
aas
sahf
roll
push
lock
pop
cmp
inc
cmp
push
arpl
push
lcall
cmpsb
xchg
pop
pop
sub
jb
test
pop
loopne
pushf
mov
jmp
sub
in
in
fnstsw
repz
add
dec
adc
mov
pop
rcll
xchg
add
sbb
aas
push
popa
mov
js
ljmp
js
adc
push
nop
inc
xchg
stc
pop
into
mov
jmp
shl
int
pop
dec
outsb
repnz
sub
stos
dec
lea
aas
lds
and
mov
lods
sbb
cmc
xor
leave
adc
ljmp
cmc
mov
nop
repz
inc
mull
dec
out
mov
aaa
cli
into
dec
jg
cmp
out
leave
pop
pop
push
add
stc
mov
mov
fnstsw
enter
test
mov
sub
sahf
sub
in
xchg
mov
jmp
xchg
mov
or
pop
rolb
aaa
add
movsl
gs
cmp
test
adc
cmpb
lcall
xorl
push
add
jmp
shlb
jb
xchg
push
adc
vmovupd
jbe
ds
addb
push
pop
xchg
xor
insl
aam
lret
xor
ds
pop
sub
pushf
repnz
insl
xchg
sub
in
js
test
rolb
mov
xchg
ja
leave
std
or
fs
aam
and
or
ss
mov
cld
and
mov
mov
fidivs
and
repz
add
xor
test
icebp
mov
and
sbbb
push
push
je
push
popa
mov
lods
jmp
je
sarb
add
sbb
pusha
sub
cs
push
call
cmp
mov
fs
cmpsb
xchg
jb
push
lret
mov
decl
test
fdivs
mov
xor
xchg
mov
es
mov
push
or
sub
inc
les
mov
xchg
sti
insb
lods
fcomi
aaa
ds
cmp
cmpsb
mov
outsb
mov
out
sub
push
mov
addr16
ja
push
xchg
addb
xchg
xor
push
addr16
lock
mov
outsl
lods
push
repnz
int3
in
movsl
dec
push
es
in
addl
es
jae
add
jp
cmp
cwtl
and
bound
enter
loope
aam
sbb
sub
mov
cwtl
add
sub
paddusb
dec
es
adc
movb
mov
jb
into
fildl
shll
loopne
jmp
xchg
ss
int
mov
push
jl
imul
jnp
scas
sub
dec
inc
imul
add
ret
ljmp
adc
in
int3
lods
cmpsb
add
aam
outsb
mov
push
movl
lret
jmp
fdivs
sbb
dec
mov
loop
outsb
je
inc
icebp
jg
aaa
xor
dec
test
push
fistpll
cld
add
rcrb
out
ljmp
int3
stos
push
push
push
sbb
fcmovnb
inc
repnz
add
cmc
adc
js
xchg
daa
stc
sbb
aam
or
or
ficompl
hlt
pop
push
clc
and
pop
jns
pop
sub
hlt
mov
ljmp
imul
sbb
imul
cmp
pop
mov
pop
arpl
mov
add
pushf
sub
test
xchg
or
mov
pop
jae
clc
lahf
out
loop
mov
and
or
clc
in
xor
adc
aas
and
mov
in
ret
push
repz
xchg
xchg
mov
or
pop
sbb
ljmp
clc
out
sbb
stos
das
xchg
dec
xchg
mov
jl
leave
mov
ss
shrb
rcl
in
ds
adc
les
add
out
pop
pop
mov
mov
pop
bound
push
jbe
rorb
adc
popa
mov
loope
jne
cmpsl
adc
push
inc
push
das
jge
imul
push
daa
fs
jb
xor
in
idivb
imul
sub
cmp
lcall
lods
pop
dec
mov
xchg
call
inc
adc
mov
add
les
push
in
adc
adc
xorb
sti
adc
sbb
lea
out
xor
nop
out
jle
sub
call
lahf
jbe
les
loop
shl
inc
es
fwait
add
jge
shl
mov
dec
into
lret
add
scas
or
cmp
push
inc
and
push
mov
lds
cmp
jl
push
call
les
mov
hlt
out
xchg
push
push
stos
xor
sbbb
repnz
xchg
sbb
push
in
daa
sbb
cmp
cmpsb
lret
sbb
scas
or
cli
dec
pop
cs
stc
jmp
lret
pop
movsb
push
sbb
hlt
movsl
or
jne
xchg
push
add
mov
sbb
in
cmpsl
push
clc
pop
jne
jmp
arpl
lahf
push
jns
sub
inc
lods
loopne
add
mov
dec
mov
enter
js,pn
dec
fwait
and
popa
cmpb
cmpsl
les
decl
movsl
shrl
xor
sti
loop
mov
outsb
sbb
mov
cmp
fwait
push
sub
popa
cmpsb
dec
ljmp
mov
lods
mov
icebp
sbb
or
pusha
les
or
pop
or
xor
dec
inc
dec
in
sbb
and
add
xchg
adc
sbbb
cmpsb
push
mov
add
xchg
pop
loope
or
sarl
mov
push
lea
mov
or
and
jne
ret
add
jmp
shll
xchg
inc
dec
fstl
mov
lods
jge
cs
push
xchg
mov
idivl
xchg
out
movl
outsl
mov
sbb
or
test
add
xchg
mov
repz
adc
mov
hlt
xor
push
inc
pop
pop
push
push
sub
add
jae
dec
sub
sarl
cmpsl
es
movsb
inc
mov
mov
in
addr16
push
negb
mov
inc
inc
sbb
jg
pop
into
into
cmp
int
mov
cli
jecxz
pop
jnp
leave
xchg
lret
jbe
inc
pop
mov
aaa
add
jne
out
rcrl
cmpsl
mov
pop
hlt
fistl
inc
xlat
and
mov
sub
mov
mov
xchg
lods
outsl
lea
xchg
insl
and
mov
stos
push
jmp
sbb
fisubrl
out
pop
roll
jno
add
inc
hlt
testl
aas
inc
fwait
inc
fmulp
mov
inc
sbb
test
mov
cltd
outsl
mov
es
lock
enter
push
je
and
int3
dec
cmpsb
or
cmp
mov
dec
add
std
and
jbe
xchg
push
popa
jb
and
lods
in
neg
jne
addr16
lcall
stos
icebp
cmpsl
mov
sbb
js
lahf
popa
mov
lahf
cmp
js
push
adc
pop
mulb
xchg
jae
mov
bound
lock
or
sarl
subl
sbb
les
mov
add
and
inc
jb
outsb
movsl
xchg
sub
sub
fnsave
dec
and
and
aam
out
into
cmpb
into
push
rcll
imul
xlat
mov
imul
mov
and
je
fnstenv
fists
shrb
add
sub
cmp
xor
pushf
int3
pop
xchg
fcomps
mov
daa
fisttpll
pop
mov
aas
inc
pusha
xchg
sub
clc
lock
adc
mov
pop
mov
sbb
out
int
push
mov
pop
pusha
inc
lret
push
cmpsl
add
add
scas
mov
test
xchg
mov
inc
sbb
mov
cs
fstl
in
push
incl
xchg
out
or
insw
xor
and
fsubrs
and
nop
mov
pop
aad
lea
cmp
icebp
aaa
out
idiv
cmp
push
mov
mov
std
scas
push
push
mov
jmp
in
mov
inc
cmp
cmpsb
mov
add
iret
lret
mov
fistpl
test
outsl
inc
leave
mov
enter
subb
mov
inc
in
xor
flds
ret
fisttps
mov
shlb
sti
jp
inc
lret
imul
test
sti
popf
lock
clc
addl
sub
push
jae
and
inc
dec
shrl
xchg
inc
mov
jmp
jb
psrad
paddsw
mov
lds
lret
lret
xchg
ret
push
push
mov
or
add
mov
cmp
lea
jecxz
jecxz
dec
es
and
dec
and
les
orl
pop
sub
dec
int
or
aas
cld
scas
adcb
xchg
sub
or
mov
test
mov
jo
lods
shll
cmpsb
xor
adc
cmc
mov
mov
sahf
js
lret
dec
data16
sarb
aad
mov
std
scas
push
aas
add
in
add
in
je
xor
xor
pop
rorb
mov
lahf
mov
outsl
jge
jbe
or
xor
insb
stos
scas
stc
stos
out
pop
imul
jle
and
mov
jnp
mov
pop
pop
jb
dec
outsb
fsubp
sub
lahf
jae
jno
fwait
xchg
mov
aas
xor
pop
jno
pusha
cmp
dec
insb
gs
scas
xchg
pop
cltd
daa
xchg
sbb
add
fsubrs
xor
xchg
outsl
loope
xchg
xchg
mov
xchg
push
movsb
jle
cmpsb
out
adc
or
pop
add
jno
cld
rol
xchg
in
pop
insb
inc
insl
mov
mov
xchg
add
mov
push
or
mov
popa
fidivrs
movlps
dec
dec
lcall
outsl
adc
aas
shll
fidivs
cmpsb
out
filds
in
mov
stc
adc
insl
pop
adc
jmp
inc
and
ja
cmp
xor
iret
sbb
or
xor
scas
lahf
aad
cld
aam
jp
pushf
jno
mov
gs
fnstsw
aam
inc
inc
pusha
int
adc
mov
push
les
sbb
pop
pushf
push
fyl2x
jno
xchg
loopne
or
mov
enter
sbb
lea
das
outsb
pushf
repnz
in
jge
mov
mov
cwtl
rcl
call
das
mov
dec
sbb
loopne
push
sahf
movsb
or
xchg
insb
into
imul
insb
cli
cs
xor
pusha
push
jns
sbb
notl
xor
mov
push
push
out
cmp
fildl
cmc
bound
cwtl
test
aaa
dec
sbb
mov
clc
add
cmpsl
stc
jb
adcl
dec
std
mov
adcl
pop
aaa
xor
push
mov
jg
lahf
rcll
inc
or
rorl
inc
mov
jmp
add
sub
repz
arpl
test
arpl
ret
jbe
cmp
fcmove
mov
sahf
pushf
gs
aaa
negl
or
int
cwtl
cmp
rorl
mov
faddl
sub
fbld
push
sti
mov
int
add
imul
iret
jg
fcompl
jns
jb
fmull
scas
pop
test
js
adc
cmp
out
and
les
mov
push
xor
xor
add
and
lret
push
inc
jb
dec
or
mov
mov
inc
aad
mov
cli
iret
xor
sbb
jns
pop
das
mov
pop
jno
mov
mov
cmp
out
add
js
dec
cli
inc
pop
cli
xchg
pop
push
setp
adc
sub
int3
mov
cmp
xor
popf
xor
lds
out
add
push
adc
out
and
js
sub
cmp
adc
mov
std
ret
insb
imul
mov
rolb
in
xorb
xor
fcoml
adc
js
xor
ret
outsb
push
and
arpl
aam
dec
add
jmp
and
and
fidivrl
in
sub
fs
aaa
push
in
mov
into
mov
js
or
inc
cmpsb
rclb
fmuls
movsb
sbb
fwait
shll
mov
inc
scas
push
outsb
into
inc
xlat
mov
mul
fcompl
inc
mov
lods
cmp
inc
sub
stos
push
filds
arpl
cwtl
pop
divb
mov
xchg
and
pop
add
sti
xchg
test
jecxz
shufps
ss
mov
fdivp
mov
inc
shr
les
dec
movsb
cs
mov
xchg
inc
jno
sub
out
insb
dec
into
cli
repz
das
adc
sub
stos
sarl
adc
dec
and
adc
dec
mov
xchg
xchg
jne
jge
dec
movsl
xor
pop
cld
ljmp
iret
icebp
mov
imul
and
and
push
dec
test
inc
xor
addr16
mov
inc
std
in
adc
inc
inc
lcall
xchg
in
mov
into
loope
and
es
adc
add
cmp
fdivrs
add
xor
rorl
ja
stc
inc
mov
dec
stos
xchg
adc
js
icebp
inc
dec
add
or
sub
pusha
iret
mov
ror
stc
insb
aas
int
scas
repz
cld
jno
cwtl
inc
inc
pop
sub
mov
inc
mov
test
push
iret
cmp
rcrb
adc
ljmp
addb
and
aam
sub
cmc
sbb
sbb
jnp
scas
fisttps
jecxz
je
inc
add
add
out
shlb
and
out
mov
test
cmc
adc
inc
data16
mov
out
das
sub
jae
stos
push
scas
sarb
pop
inc
imull
in
ljmp
daa
loope
push
jle
into
mov
data16
int
movsl
int3
in
add
xchg
cmpsb
mov
add
cmp
add
cmpsb
insb
add
push
cwtl
or
dec
fmuls
jne
in
xor
cmpsb
loope
pop
out
mov
sub
outsl
mov
xor
jb
pop
ss
mov
mov
shr
cmp
pop
sub
lea
xchg
add
mov
lahf
jbe
xor
cs
fmuls
push
jb
mov
jno
cmp
in
lret
stos
shrb
imul
push
je
call
lahf
xchg
int3
dec
push
imul
in
and
dec
bound
add
mov
cmp
aad
int
dec
scas
pop
outsl
ret
pushf
data16
mov
shll
pop
test
cs
adc
lods
hlt
fidivrs
icebp
movsl
xchg
cmc
sub
xchg
aad
mov
in
mov
push
out
dec
mov
mov
xchg
xchg
jg
dec
test
xor
rol
lods
cmp
addr16
sub
ss
negb
inc
mov
fmulp
dec
jecxz
mov
mov
pushf
jmp
es
mov
mov
xchg
push
mov
stos
test
xchg
rorl
or
aad
pushf
mov
pop
add
jge
std
adc
push
lret
mov
in
fstpl
movsl
xor
stos
ficoms
pop
mov
mov
or
std
iretw
daa
jbe
xchg
xlat
adc
out
rolb
xchg
push
xor
xor
es
or
add
iret
jge
xor
dec
inc
idiv
imul
imul
sbb
xor
movd
dec
pusha
xorl
jecxz
std
fiaddl
jns
sbb
dec
out
orl
mov
movsb
fimuls
sub
ja
aam
cmp
pop
jl
fmuls
hlt
out
stos
orb
shll
or
and
loopne
sahf
pop
cld
lahf
jno
out
lcall
mov
aas
xchg
cmpsb
mov
lods
loop
pop
iret
outsb
dec
fwait
ret
fxch
mov
das
adc
mov
mull
lcall
pop
sarl
inc
shlb
cmp
outsb
scas
jnp
les
cmc
adc
mov
sbb
jp
cmp
test
cmp
pop
lds
iret
stos
jecxz
cli
rcrb
les
test
std
repnz
mov
in
pop
mov
loopne
pop
lret
cmp
sub
adc
adc
pop
cs
and
js
add
movsl
icebp
pop
nop
inc
mov
arpl
sub
mov
imul
cvttps2pi
xchg
clc
leave
push
jl
cli
dec
cltd
cmp
cltd
lcall
stc
leave
jg
xlat
push
or
push
pop
xor
in
bound
sti
mov
mov
test
xor
mov
push
dec
lods
sti
pop
xchg
loop
push
mov
stos
enter
les
imul
mov
arpl
mov
aam
test
imul
cmpsl
cmp
mov
arpl
out
dec
or
xchg
mov
dec
iret
outsl
in
loop
ss
xor
negl
push
out
cli
fsubrl
sub
scas
jecxz
push
mov
outsb
sub
xchg
sub
dec
cmp
imul
cmp
adc
push
sbb
inc
popf
es
data16
pop
mov
xor
or
outsb
loopne
mov
xor
inc
and
fistpll
pop
push
fwait
jl
lods
xchg
aad
mov
fldenv
xor
sub
pop
cmp
push
out
dec
fstps
push
jle
sub
aas
jne
pslld
data16
in
stos
mov
stos
xor
aas
mov
test
std
int
xchg
insl
mov
jle
lcall
sub
or
nop
repz
cmpsl
push
popa
push
mov
repz
jge
fldcw
sub
jnp
repnz
pop
push
lock
pop
sbb
in
push
jae
lods
mov
jge
aam
pop
add
fists
cmp
aam
pop
mov
stc
sbbb
lea
adcl
sub
in
fisttpl
shrl
jl
test
xchg
lds
xchg
add
mov
lahf
jae
mov
mov
mov
in
scas
imul
pop
int3
in
xchg
mov
mov
sti
daa
icebp
insl
inc
pop
test
sbb
popf
shlb
xor
sbb
fldenv
sub
outsb
fwait
or
fdivrs
or
jg
js
lcall
int3
xlat
and
mov
or
adcl
addb
mov
sbb
sbb
jo
sub
rorl
adc
mov
cs
xor
xchg
mov
insl
or
nop
lds
rclb
call
std
mov
dec
pop
popa
sbb
xchg
lcall
sbb
jo
mov
pop
inc
mov
cmp
inc
scas
lods
movsb
mov
push
rclb
cmp
and
addb
pop
xchg
mov
in
xor
pop
js
and
jmp
es
cmp
jle
in
pushf
in
ja
or
cmpl
xor
dec
je
mov
leave
xor
jmp
dec
xor
xor
ja
aas
add
inc
xlat
sub
mov
loopne
jae
pop
jecxz
dec
ljmp
or
inc
je
dec
cmpb
mov
movsb
das
inc
xlat
test
push
movsl
cmpsb
mov
adc
insl
popa
sub
fistpl
ja
inc
xchg
pop
mov
cmp
pop
out
jge
je
or
mov
repnz
pushf
and
aas
jge
xchg
popa
mov
aam
pop
inc
scas
dec
faddl
lret
cld
std
jbe
inc
aas
pusha
js
mov
out
movsb
dec
xchg
mov
mov
iret
js
mov
stc
mov
shlb
ja
test
sub
pushf
clc
pop
cmpsl
xchg
cs
nop
test
and
jb
repnz
dec
push
push
orb
test
pop
in
test
jmp
lahf
sub
add
arpl
xor
mov
pop
fdiv
xchg
outsl
aas
clc
scas
test
jecxz
in
ljmp
xchg
out
sbb
jge
mov
lahf
lcall
sbb
adc
lock
push
lds
cmp
sbb
adc
and
test
pop
shlb
cli
mov
jno
push
add
cmp
loope
shll
lods
aam
loop
cmc
xchg
push
mov
bound
sahf
push
add
in
sub
ret
std
out
lods
test
fiadds
lea
es
dec
arpl
push
sbb
insl
lods
iret
jno
jge
negl
push
pop
mov
add
fiadds
jecxz
inc
lret
lds
mov
pop
xor
pusha
adc
sbb
inc
aas
rorl
push
ficomps
adc
setle
pop
inc
test
adc
push
inc
insb
mov
das
xor
movsb
and
push
sbb
pop
jecxz
lods
fnstcw
insb
out
into
les
icebp
pop
xor
stos
push
scas
pop
jl
sbb
neg
adc
xchg
jnp
add
jl
sbb
icebp
clc
je
adc
mov
sbb
pop
in
insl
out
fstps
jae
xchg
fdivrl
popa
cli
dec
add
popf
pushf
and
push
arpl
add
mov
fwait
jg
cmp
jns
xor
fmull
dec
xchg
push
fisttps
outsl
fstpt
in
scas
or
inc
xor
push
jo
pop
stos
jns
sub
lods
jb
mov
cld
nop
loop
cmpsl
inc
xor
leave
push
out
popa
pop
loopne
inc
mov
dec
sbb
f2xm1
xlat
rolb
sbb
xor
sub
add
adc
jne
mov
lahf
add
into
mov
jecxz
imul
ds
pop
sahf
fchs
xchg
and
push
enter
or
leave
lret
mov
add
jg
in
int
rorl
in
adc
scas
xor
cli
pop
xor
or
vpshaw
stos
mov
pop
xchg
es
nop
mov
push
or
push
adc
jae
lods
pop
mov
sub
xchg
repnz
cs
pop
pop
or
add
or
fildll
dec
movsb
push
mov
mov
dec
data16
push
in
shlb
in
arpl
rcll
sysenter
adc
lods
lret
repz
pop
ljmp
dec
addl
fidivrs
fadds
test
mov
mov
testl
mov
es
cmpsl
jmp
dec
out
pop
in
dec
push
mov
fstl
inc
jle
imul
cmp
shlb
push
sbb
pop
outsl
inc
add
pop
daa
inc
pop
lods
test
test
mov
mov
sbb
pushf
dec
test
lret
xchg
cmp
fbld
sbb
stos
mov
jmp
mov
push
rclb
mov
iret
into
push
inc
fimuls
push
daa
js
pushf
dec
jb
and
inc
cmp
ja
mov
in
jge
insl
lret
les
outsb
addr16
mov
xchg
js
or
rcrb
std
in
test
jns
adc
or
or
dec
cs
in
pop
inc
push
or
mov
mov
mov
sarb
xor
enter
lea
inc
or
imul
fidivrs
dec
stos
adc
adc
xchg
xchg
sbb
pop
scas
aad
cmp
nop
dec
mov
jb
adcb
loop
loop
pop
cmp
xor
mov
mov
mov
lret
dec
stos
mov
mov
cmc
cwtl
xchg
jge
pop
and
imul
in
out
mov
mov
fildl
stos
sbb
out
ffree
jne
mov
mov
decl
dec
ljmp
push
sub
fs
out
mov
adc
hlt
push
pop
xor
ss
ja
sub
xchg
mov
push
aad
mov
aad
clc
lock
mov
mov
push
pop
sbb
je
nop
into
lods
mov
sub
mov
lret
addl
jns
jbe
sbb
fidivrl
push
inc
in
hlt
cmp
cltd
or
cwtl
mov
mov
mov
mov
int
mov
pop
dec
test
addr16
je
jae
sbb
sub
mov
add
ljmp
std
scas
jbe
pop
das
out
hlt
sub
mov
jmp
add
push
hlt
lods
mov
ror
sbb
inc
dec
or
xchg
xchg
out
out
inc
adc
sub
push
cmp
mov
orl
repz
mov
lds
out
out
out
popa
dec
gs
xchg
inc
idivb
popf
jae
inc
out
inc
adc
inc
js
ljmp
inc
sti
sti
and
jne
mov
mov
jg
ss
dec
mov
imul
sbb
fcmovu
leave
jle
sub
sbb
mov
cltd
int3
push
rorb
hlt
xchg
xlat
stos
dec
test
cmp
inc
jg
jno
mov
mov
lods
pusha
jb
xor
sub
call
or
loope
cmp
testb
sarl
rolb
adcl
aam
scas
arpl
sub
aam
cmp
fnstenv
mov
jae
mov
pop
xchg
jmp
ja
icebp
pusha
fwait
push
sub
mov
cltd
lods
mov
fwait
lret
inc
sar
enter
test
mov
mov
jmp
adc
loope
idivl
adc
ret
out
jae
pop
pushf
mov
xchg
push
jnp
int
dec
pop
mov
loope
subb
rclb
pop
call
aas
or
clc
push
mov
pop
decl
popf
jmp
inc
mull
add
enter
les
sub
shrl
pop
inc
adc
repz
mov
inc
les
sbb
lahf
arpl
pop
and
into
sbb
add
or
and
sbb
sub
in
loopne
jp
addr16
xchg
mov
in
test
loop
aaa
enter
hlt
nop
movsb
sbb
mov
cltd
imul
or
mov
jmp
lods
cwtl
push
add
mov
clc
sarb
cmp
out
jl
outsl
jo
cmpsb
or
imul
in
push
lret
jns
mov
adc
aaa
ljmp
imul
lahf
in
pop
daa
leave
fidivrl
pop
aam
icebp
sbb
mov
test
jnp
sbb
xchg
dec
test
dec
push
or
jb
dec
insb
jno
cmp
xchg
sbb
pop
xchg
std
lea
jne
mov
mov
mov
mov
bnd
or
loope
fcomip
push
dec
jbe
pop
and
pop
les
mov
test
popa
cmp
lret
popa
pushl
fs
cltd
out
popf
dec
arpl
inc
stc
pop
fisttps
orb
aam
pop
xor
cmp
pop
sbb
cs
cmpsb
ljmp
leave
inc
mov
xlat
inc
movsl
lret
jbe
inc
lret
fldcw
test
push
pop
testl
or
mov
popf
in
cmpsb
pop
ret
pusha
push
stos
jne
sub
add
rorl
imul
imul
xor
jmp
sub
in
jno
jo
dec
fadds
inc
pop
pop
jae
icebp
jo
sbb
dec
std
add
push
cli
mov
inc
xorl
adc
pop
push
iret
rcr
push
loop
push
imul
cld
mov
dec
mov
pushl
repnz
movsl
xor
push
hlt
imul
sub
inc
sbb
inc
add
dec
adc
mov
in
xor
adc
adc
mov
xor
xor
clc
shll
push
mov
mov
mov
push
jle
jbe
in
xor
in
je
mov
mov
xor
mov
pop
mov
sub
ljmp
repnz
fwait
out
inc
xchg
sub
cwtl
js
into
pop
imul
fidivrl
mov
xlat
aaa
test
cmp
jnp
movsb
xchg
dec
add
jbe
out
mov
lods
jecxz
pop
lods
scas
and
mov
cmp
cmpsl
rcr
xlat
ja
loop
mov
repz
push
or
mov
int
adc
push
fistl
dec
jp
shrl
pop
add
sub
sbb
cli
int
jg
sub
inc
in
test
cmc
orb
inc
xor
arpl
out
xor
lret
jg
jne
mov
adc
imull
jno
jb
cmp
inc
fidivrs
outsl
int3
in
mov
hlt
addb
orl
dec
test
mov
sub
int3
stos
cli
push
daa
and
add
aaa
sbb
sbb
mov
je
push
mov
int
mov
sub
mov
js
inc
pop
imul
fstl
pop
sub
mov
xchg
push
ljmp
lea
inc
ja
add
jle
and
add
mov
loop
xchg
aas
or
inc
mov
jg
in
mov
and
insb
sar
push
mov
adc
subb
mov
mov
pop
sbb
lds
mov
mov
ret
mov
and
test
inc
std
imul
int
shll
mov
scas
outsb
push
pop
dec
sub
cmc
lds
lahf
and
hlt
mov
add
push
or
xor
sahf
dec
or
ja
mov
movsb
dec
scas
addr16
inc
adc
inc
out
test
cmpsl
add
push
xor
mov
inc
iret
jns
idivb
into
mov
inc
outsb
out
cwtl
cltd
sbb
push
loope
xor
scas
push
int
xchg
aad
pop
lods
test
push
pushf
ss
mov
dec
sub
jle
and
lahf
sub
jmp
or
mov
xchg
fldl
scas
mov
push
push
stos
jle
xor
or
cli
popf
sbb
ss
aas
inc
call
mov
dec
cmp
adc
cs
mov
loop
and
lods
test
enter
popf
cmpsl
xchg
cmc
cs
sbb
xor
loope
xlat
iret
ficoms
ds
scas
or
cmp
mov
icebp
dec
xor
lds
mov
jno
mov
jnp
test
stos
arpl
nop
aas
clc
std
add
lret
in
mov
mov
stos
mov
imul
stos
rclb
and
mov
bound
jne
cld
cmp
outsl
mov
xchg
lods
bnd
popa
lahf
mov
adc
sbb
or
dec
mov
andl
pop
ret
adc
orb
aaa
mov
xchg
lock
sub
or
and
stc
ficompl
lret
sub
imul
sbb
lret
cld
jp
cld
sub
insb
mov
dec
sbb
xchg
or
das
leave
jnp
in
xchg
mov
sahf
push
cs
and
dec
pop
jnp
and
sbb
mov
or
imul
sub
and
or
lods
in
cld
or
movsb
pop
inc
imul
xchg
cmp
push
cltd
push
push
lods
mov
pop
cmpsb
icebp
into
cmc
jl
repnz
sub
pop
hlt
cmp
dec
adc
movsb
adc
rol
dec
jge
cmp
movsl
sub
movsb
jmp
or
pop
ljmp
inc
mov
gs
push
loopne
sti
or
jp
xchg
mov
outsb
jnp
add
xchg
test
mov
jbe
jg
mov
dec
ja
pop
xchg
iret
pusha
adc
and
mov
pop
cld
insl
mov
push
push
inc
jle
shrb
pop
pop
or
mov
mov
push
pop
sub
ss
jne
xchg
inc
push
inc
fwait
add
ret
cmpb
sarl
pop
dec
leave
faddl
mov
lahf
or
cwtl
outsl
xchg
pop
jecxz
xchg
loopne
or
mov
mov
mov
lcall
fidivl
cmpsb
cmpb
jp
xor
pop
outsl
mov
jg
ret
sbb
cmp
pop
mov
pop
jecxz
popa
clc
ss
adc
int3
pop
push
xchg
xor
xor
xor
icebp
mov
dec
adc
or
fldl
cmp
sub
lret
loopne
xchg
addr16
add
push
cmp
dec
add
out
fs
inc
push
stos
mov
movsl
pop
pop
jp
rclb
inc
add
cmp
lds
xchg
stos
test
mov
xor
lods
sarl
jmp
mov
dec
or
adc
cmp
enter
mov
lods
shrl
push
adc
mov
add
xchg
fildll
dec
psllq
xlat
icebp
out
ds
mov
jge
pop
sarl
psubusw
sbb
mov
das
bswap
outsl
lcall
push
ficompl
add
mov
or
mov
cltd
ret
and
mov
xchg
in
jmp
sti
and
icebp
jg
sub
sbb
xor
les
sbb
xor
push
jle
xor
push
xchg
mov
outsb
ret
pushf
and
mov
test
enter
bound
inc
in
and
xchg
lods
sbb
lret
cwtl
rorl
popa
mov
xor
jnp
pop
sbb
xor
jecxz
xchg
jbe
xchg
jl
sub
cld
divb
inc
icebp
sub
cmp
add
ret
repnz
pop
imul
xchg
cmp
mov
loop
sub
fbld
sbb
dec
mov
jae
jbe
sbb
insb
cmp
push
ret
pop
or
out
add
cmpsl
int
cmp
stos
insl
and
sahf
sub
adc
stos
adc
rolb
xor
daa
je
shll
push
movsl
lds
orb
add
pop
mov
jbe
add
jae
aaa
xor
loope
pop
idivb
test
sub
sub
nop
xchg
dec
pop
in
dec
xor
shll
add
pop
add
movsb
jns
stos
inc
sbb
sbb
leave
sub
add
dec
into
cld
sbb
mov
pop
in
lock
lret
or
iret
sub
inc
cmp
andl
push
hlt
mov
enter
xor
inc
mov
mov
and
insb
js
mov
cmp
in
mov
jg
scas
leave
xchg
or
cwtl
arpl
fs
cmpsb
pop
icebp
repnz
sahf
jg
lahf
stos
outsb
insl
xchg
xchg
stos
icebp
lret
mov
push
jle
shll
adc
push
mov
inc
stos
into
insl
sub
stos
scas
jecxz
movsl
and
cmc
lock
xor
sub
inc
jno
fstps
insl
fnstenv
cmp
mov
sub
inc
push
jg
adc
adc
lds
je
jmp
fdivp
movb
jge
aad
repnz
xchg
lds
jecxz
pop
xchg
je
xchg
sub
xor
or
cmp
xor
imulb
sbb
pop
inc
jle
mov
out
daa
repnz
push
inc
enter
adc
push
mov
aaa
mov
mov
fdivrp
aas
mov
mov
lock
cld
mov
adc
fstl
cld
inc
xchg
xor
inc
and
popf
xchg
mov
jo
subb
addr16
push
xor
les
in
and
adc
into
push
jo
push
lahf
xor
xchg
adc
and
mov
call
repz
out
mov
mov
inc
cmp
sub
lret
stc
repnz
imul
shlb
mov
imul
movsb
out
jp
hlt
push
inc
sub
mov
sbb
cmpxchg
lret
push
loop
xchg
insb
jecxz
mov
gs
jbe
loop
dec
push
jae
mov
lods
dec
test
imul
pop
jp
lret
cwtl
lods
out
jle
push
enter
inc
out
cltd
div
es
dec
or
gs
js
test
movsb
call
mov
xor
repnz
mov
xor
aaa
xchg
mov
inc
xchg
sub
arpl
jmp
push
push
rep
push
pop
in
sbb
xchg
dec
pop
dec
lock
movsl
mov
and
and
movsl
and
cld
pop
xchg
mov
and
fmul
adc
adc
shr
mov
xchg
dec
mov
jne
mov
inc
push
sub
popf
shll
hlt
test
add
and
lods
add
push
mov
pusha
fiadds
mov
jb
xchg
push
dec
fmull
push
aad
push
push
fcoml
pop
cld
mov
xor
inc
cmp
dec
jns
out
push
adc
pop
push
stc
ljmp
scas
mov
sbb
lret
add
call
rol
cmpsb
pushf
pop
bound
fdivl
sahf
pand
jo
dec
mov
adc
dec
jge
sti
cmpsl
mov
push
jle
repz
test
mov
daa
sub
loop
cmp
pop
dec
test
mov
dec
add
nop
stc
push
lret
mov
inc
gs
push
icebp
mov
pop
mov
pop
sub
sub
cmpsl
hlt
adc
xchg
xchg
test
push
cmp
es
jo
in
pop
mov
and
popa
imul
xor
and
xor
nop
gs
jnp
in
jge
stc
test
inc
mov
push
outsl
push
adc
insl
ret
jge
lret
into
stos
mov
pop
popf
out
push
mov
pop
inc
mov
cmpsl
xor
xor
dec
fcomp
into
mov
test
cld
inc
je
mov
push
test
cli
sahf
rcrb
mov
jne,pt
inc
cli
mov
jp
pop
pop
ja
mov
lret
fcmovnu
pop
in
aas
push
add
mov
lea
scas
filds
add
xchg
pop
xchg
enter
mov
xor
jmp
cmp
lret
jg
cli
mov
add
fcoms
jne
inc
pop
inc
mov
shlb
sub
inc
adc
lods
or
mov
enter
rorl
fnsave
cs
daa
sbb
lea
popf
jbe
dec
push
cli
pop
ficoml
sbb
sahf
cld
rolb
adc
mov
push
test
fmull
push
sub
sahf
mov
test
xor
sub
ret
inc
mov
loope
or
xchg
pop
jl
sbb
cwtl
sbb
je
xchg
cmp
sahf
pushf
or
fisttps
jge
mov
jb
in
push
inc
pop
jle
in
or
sbb
pushf
sbb
je
push
ret
mov
and
pop
or
sub
sti
sub
idivl
adc
jbe
gs
ret
inc
push
fimuls
sarl
xchg
test
outsl
ss
jnp
sbb
stos
sub
rolb
into
or
das
fdivl
loope
imul
out
leave
push
fidivrl
pushf
jmp
mov
idivl
rcl
shll
ret
push
mov
or
arpl
mov
into
jmp
imul
in
sbb
mov
es
push
and
ljmp
add
and
push
aam
push
test
incl
adc
loopne
lret
pop
xchg
das
hlt
les
adcl
enter
pop
pushf
add
add
int3
enter
push
push
mov
stos
xchg
xor
sbb
push
les
mov
stos
das
jle
and
xor
jne
pop
rcrl
je
stos
inc
xchg
pop
jae
and
lcall
repnz
ljmp
mov
pop
mov
lods
scas
aad
xor
and
icebp
std
pop
dec
shll
xor
mov
jle
out
push
jo
js
adc
clc
js
inc
pop
dec
sti
add
sbb
imul
mov
mov
xchg
into
notb
mov
pop
push
lret
sbb
and
dec
test
dec
repz
stos
loop
rol
pop
jb
xlat
stos
enter
add
lcall
aas
cmp
jmp
insb
lea
sbbb
jg
mov
sbb
repz
and
jg
es
cmp
sub
call
in
andb
push
push
mull
rorb
daa
enter
push
add
imul
sub
mov
insb
mov
sub
lds
or
sub
pusha
imul
lcall
adc
movsb
cltd
xchg
sti
sti
cmp
arpl
adc
inc
movl
fcoms
cmpsl
inc
pop
xchg
pusha
popf
int
pushf
out
mov
or
and
mov
sub
jae
xchg
mov
mov
aas
imul
das
fwait
jge
mov
clc
add
imulb
and
idiv
repz
xchg
jo
xor
fwait
in
mov
mov
jecxz
dec
ss
insl
dec
or
push
dec
in
or
sbb
es
add
cmpsb
dec
jne
js
pop
xchg
cmp
js
cmp
aad
xchg
test
xchg
lcall
js
mov
scas
scas
sbb
push
lock
movsl
fwait
cwtl
xchg
addr16
fwait
lea
testl
mov
negb
push
mov
ror
ficompl
jmp
push
jnp
adc
std
pop
stc
loop
xor
out
jl
loopne
pop
sbb
lret
out
bound
data16
adc
mov
sbb
sbb
xchg
pop
lret
pop
jae
sub
xor
mov
fimull
push
pop
add
push
fsubrl
inc
mov
outsl
sbb
scas
pop
pop
xor
filds
xor
negl
rorb
test
outsl
hlt
xchg
jl
lret
jecxz
fs
ljmp
jge
popf
stos
mov
jecxz
loopne
add
dec
in
iret
cmp
lcall
cmc
dec
loope
faddp
xor
cli
mov
push
out
insb
movsl
test
mov
add
inc
sbb
ja
inc
ss
cmp
push
cmp
mov
lock
or
mov
mov
adc
xor
mov
lods
cmpsb
nop
repz
loope
mov
hlt
stc
jbe
sbb
cmpsb
call
popa
sbb
mov
pop
setne
xchg
fnstcw
mov
sbb
mov
addr16
mov
pop
popf
ljmp
into
mov
sbb
sbb
aaa
sbb
testb
rolb
ljmp
jg
pusha
popf
sub
movsb
in
scas
stos
sti
jp
repnz
movlps
je
push
pop
les
mov
jns
adc
lcall
adcb
pushf
xchg
xchg
add
arpl
or
bound
add
xchg
cwtl
aad
push
subl
add
mov
movsl
pop
xchg
push
push
inc
je
mov
add
sub
insb
jmp
jae
lods
movsl
arpl
cmpl
push
push
and
cmpsb
add
xor
sub
scas
aam
sbb
and
mov
sbb
aas
leave
inc
test
sub
push
inc
sub
pop
push
call
jge
dec
enter
sbb
shrb
scas
ror
add
push
fwait
call
sarb
ret
call
cmp
outsb
jae
xor
push
inc
inc
test
sub
mov
cmp
aam
mov
outsb
push
sbb
push
adc
imul
cld
pop
ficoms
xor
movsl
out
push
or
cld
dec
xchg
fcompl
imul
leave
mov
loope
cwtl
fcomps
bound
pop
inc
lea
or
aas
in
inc
cmp
pop
pop
lods
jns
cmp
push
dec
xchg
test
adc
out
jg
stc
xor
mov
jbe
std
sub
daa
xor
adc
subb
bound
cld
jb
loop
push
testl
cmpsb
stos
fsubrl
push
dec
fisttpll
xchg
mov
lock
adc
test
fiaddl
pop
cmp
ror
cmp
loop,pn
jo
xlat
bound
enter
ficompl
pop
xchg
es
mov
push
inc
out
fst
xor
je
pop
mov
mov
mov
pop
ds
ds
dec
addl
inc
push
pop
push
ret
ret
shlb
ret
in
or
inc
sub
jp
or
lds
mov
pop
pop
movsb
ds
shlb
push
popa
and
and
add
pop
and
inc
das
je
or
movsl
mov
adc
arpl
aas
and
inc
add
mov
xor
test
pop
xchg
arpl
jne
jle
cmp
popf
cltd
mov
jle
adc
cli
mov
lret
mov
ds
xchg
push
jmp
mov
dec
cmp
pop
clc
adc
dec
ss
pop
popa
dec
or
incl
xor
arpl
mov
ss
fcomip
or
mov
mov
mov
leave
fnstcw
loopne
jne
imul
sbbl
fnstenv
lock
test
xlat
and
movsb
arpl
out
out
popa
es
mov
push
shrb
sahf
mov
and
and
fnstenv
shl
dec
and
outsb
mov
pop
sbb
cmpsb
sbb
loope
or
repnz
mov
xor
aaa
and
and
or
daa
push
sub
andb
mov
out
in
stc
pop
aad
lods
insl
and
jnp
nop
test
imul
out
dec
test
in
popa
jmp
xchg
cld
inc
sub
inc
sub
pop
xchg
add
shll
push
pmulhw
lods
jae
sbb
or
mov
dec
inc
icebp
daa
dec
mov
scas
into
cmc
lods
in
mov
jmp
repz
sti
or
ficompl
sbb
jmp
es
sub
aam
add
adc
mov
and
push
mov
pop
insl
cmc
adc
mov
outsb
stc
mov
push
movsb
stc
test
adc
repnz
cmpsb
sub
adc
add
pop
mov
sti
clc
lods
jbe
pop
push
rorb
mov
push
popf
xor
movsb
outsb
jno
ljmp
xchg
and
ret
sbb
mov
mov
and
test
xor
mov
inc
test
les
mov
pop
fwait
mov
and
mov
jge
fmul
js
xchg
adc
jg
jmp
mov
lret
dec
imul
shll
add
push
sub
jle
movsl
adc
lods
sub
inc
fwait
arpl
adc
jmp
jecxz
insl
add
dec
pop
and
pop
xor
cmpsb
addb
out
ljmp
cld
adc
cmp
out
in
push
shll
testb
dec
mov
das
addr16
outsl
or
fxch
aam
loop
out
cmp
or
sti
mov
cli
lcall
insb
jo
mulb
jno
cli
je
rorl
enter
pop
and
push
ret
cltd
push
rol
xchg
stos
cs
sbb
filds
subl
add
repnz
in
mov
pop
push
push
and
pop
and
or
cmpsl
pop
in
mov
fiaddl
sub
call
jbe
xor
mov
les
test
aam
fsts
iret
xchg
jo
sbb
test
adc
test
bound
into
adc
dec
dec
adcl
movsl
scas
cmpsl
out
xor
jp
scas
jo
sbb
repnz
push
inc
xchg
lret
popa
aam
xor
imul
xlat
orb
xchg
mov
imul
stos
push
fadd
sub
lcall
in
xchg
lods
pop
and
cmp
jmp
mov
mov
test
js
pop
jae
lahf
ja
mov
push
xor
lret
push
push
fcomps
ds
sub
fiaddl
push
pop
mov
push
push
jp
orl
jns
jo
mov
adc
push
xor
mov
jecxz
adc
and
jmp
aad
and
test
jnp
cmc
pusha
mov
mov
xchg
add
lock
fidivrl
shll
cmc
dec
pushf
test
in
insl
popf
inc
mov
jg
out
push
dec
mov
cmp
shrb
cmp
jl
sbb
pop
mov
pop
out
rcll
sub
pop
jae
imul
cmp
mov
mov
inc
popa
adc
in
cmp
fs
pop
and
or
jne
mov
insl
out
cmc
ja
push
jle
imul
lahf
xor
hlt
sbb
mov
xlat
fildl
aaa
and
adc
pop
movsl
idivb
in
jne
mov
jbe
lock
insb
repnz
loope
cwtl
rcl
cmpsl
pop
mov
jns
xchg
int
dec
cmpsl
jns
mov
loopne
ret
mov
push
jns
or
fmull
jne
xchg
or
out
insb
sub
loop
sbb
mov
icebp
std
and
int
push
aam
in
mov
inc
cmp
out
xchg
inc
inc
or
mov
jmp
test
lock
arpl
xor
xchg
mov
mov
imul
jb
sub
lds
bt
adc
xchg
inc
xor
pop
inc
hlt
imul
sbb
addps
cmpsb
dec
sub
ja
mov
pop
add
stc
inc
jae
fnstsw
fadds
ja
jg
enter
xlat
push
jecxz
mov
insb
stos
or
lahf
dec
movsb
sub
leave
cltd
jge
add
leave
out
xorl
jbe
pop
idivb
imul
pop
imul
negl
lods
and
add
subl
jmp
sub
fwait
sub
dec
jp
loopne,pn
mov
addr16
sbb
push
out
sbbb
loopne
jmp
loopne
pop
add
pop
and
adc
dec
sub
push
fs
fldcw
in
xchg
inc
jmp
inc
mov
push
shlb
mov
cli
xorb
vmwrite
enter
push
popf
scas
dec
add
and
sbbb
fisubl
mov
push
jnp
jecxz
cmpsb
mov
dec
mov
sub
out
add
mov
inc
sbb
sub
test
das
jmp
daa
jge
lea
xchg
enter
pop
fsubl
addr16
mov
rclb
push
shll
inc
shr
adcb
loope
jnp
shl
mov
lods
jmp
pop
fmul
imul
xchg
rcl
movsl
repnz
leave
inc
pmulhuw
pusha
test
xor
push
cmp
xor
xor
test
cmp
imul
pop
or
lret
into
inc
push
jmp
xchg
sbb
push
or
movsb
sbb
mov
pop
mov
sub
cmp
push
stos
lea
aas
std
cwtl
inc
xchg
cmp
add
push
fsubrl
dec
popf
jo
mov
fdivrs
mov
stc
insl
popa
mov
pop
fnsetpm(287
fucomi
jns
xchg
cmp
mov
xchg
mov
sbb
daa
push
in
mov
sub
mov
and
push
mov
mov
filds
mov
jge
dec
cmp
mov
out
aam
jno
lcall
fsubs
popa
fcmovnb
mov
pop
incb
aaa
push
dec
mov
lods
add
clc
or
test
xor
arpl
shll
cmpb
inc
out
add
sub
lea
jg
cmp
enter
lods
rorb
sbb
cmc
sub
or
insb
mov
in
mov
mov
ret
jmp
in
pop
es
sbb
stos
mov
stos
or
aam
push
push
sub
mov
pop
cmp
cwtl
fisttps
cmp
adc
pop
mov
pop
jl
ss
sbb
add
ret
lods
out
loopne
daa
ja
pop
idiv
in
mov
jecxz
dec
xchg
mov
xchg
orl
mov
push
addb
out
adc
adc
push
and
push
push
cmc
pop
aam
pop
jecxz
ret
mov
cmp
or
lea
in
or
fisubs
mov
int
into
adc
xor
inc
test
xlat
cmp
aam
push
add
or
fisttpl
push
jnp
lret
dec
sub
adc
ret
in
aad
push
cli
int
stos
hlt
iret
ljmp
cmp
loop
sub
xlat
arpl
lret
jmp
jmp
jl
xchg
push
sub
out
cmp
mov
test
cmp
aas
sub
sbb
mov
loop
icebp
aam
mov
jl
aas
lahf
jmp
or
dec
loope
push
sbb
daa
push
aam
dec
ss
jnp
lea
movsb
sbb
stos
push
xor
outsb
and
pop
mov
test
stos
mov
outsb
push
cltd
dec
mov
push
sti
and
leave
out
ja
xchg
enter
loop
ret
sub
jp
lea
dec
adc
outsb
xor
push
mov
jne
aad
scas
hlt
and
cld
test
push
pop
subb
out
rorl
fisttpl
fcmovne
add
imul
jbe
xor
int
movsb
or
rcr
gs
jg
jno
mov
ljmp
les
shll
mov
push
pushf
sbb
shll
mov
or
sbb
lcall
nop
out
aad
fcmovne
dec
xor
loop
fdivs
or
xor
cmp
test
ss
js
ja
xchg
add
mov
mov
mov
mov
sahf
mov
and
xor
mov
fstps
lret
xchg
out
jns
dec
enter
pop
pushl
mov
stos
rclb
loop
nop
mov
jb
fnstsw
jb
clc
add
pop
mov
pop
aas
xlat
jle
jecxz
dec
test
dec
popa
in
into
xorb
js
mov
rcrl
sub
mov
sbb
pop
dec
and
mov
ss
pop
mov
or
jecxz
push
icebp
jmp
aad
or
push
insl
lahf
adc
or
std
and
pop
sub
in
ficoml
aam
loope
cmp
or
nop
leave
pop
mov
xor
pop
fisubl
and
int
mov
loope
or
sahf
sbb
scas
hlt
lret
ret
sahf
out
inc
cmp
pop
pusha
xchg
rclb
jns
pop
adc
or
push
mov
mov
out
lods
cmc
aaa
inc
icebp
xchg
inc
jecxz
xor
popa
mov
xor
fsubrp
into
iret
js
icebp
aad
shlb
pop
fcmovbe
adc
cld
mov
xor
fmulp
nop
shrl
rorb
hlt
dec
jmp
test
repnz
les
out
mov
hlt
lock
jmp
dec
ja
jo
cltd
les
pop
cmp
mov
test
popa
ret
enter
jmp
loopne
pop
stos
int3
jns
add
mov
outsb
mov
pop
arpl
outsl
call
xor
xlat
mov
fwait
fwait
out
jno
mov
les
aas
inc
xchg
shl
iret
lock
out
lods
pop
aad
pop
lret
push
mov
fwait
xchg
xor
add
ja
push
mov
and
rolb
pusha
scas
outsb
mov
fdivr
sbb
outsl
outsb
int
aaa
ljmp
mov
mov
out
xor
lahf
sti
or
sbb
sbb
out
hlt
xor
add
sbb
add
jae
lods
out
add
inc
push
mov
pusha
sbb
mov
rolb
lods
push
pop
loope
mov
dec
fstps
cwtl
mov
push
fadds
jnp
dec
push
daa
mov
jae
jp
das
icebp
ret
aam
and
xor
sbb
sub
out
jg
adc
shlb
clc
pop
or
out
sub
lret
sbb
mov
data16
pop
cmp
out
or
jecxz
and
pop
add
jge
mov
adc
adc
cmp
fistl
inc
dec
and
aad
repz
add
xor
lock
mov
sbb
negl
lods
sub
dec
adc
or
mov
filds
shrb
ja
inc
fsts
cwtl
mov
fnstcw
into
dec
and
outsl
je
rorl
inc
mov
test
push
movsb
xor
and
inc
sahf
pop
and
in
mov
mov
stc
mov
ret
jbe
fnop
adc
test
movsb
popa
jge
sbbl
int3
pop
jb
mov
mov
push
xchg
cltd
push
ja
jmp
repz
dec
inc
xchg
mov
scas
js
pop
and
ss
daa
fisubl
jns
mov
leave
push
pusha
push
scas
test
clc
iret
add
inc
int
es
lahf
shll
dec
mov
test
jle
push
and
xchg
adc
pop
leave
arpl
scas
adc
mov
sbb
jnp
push
cltd
mov
lea
mov
sub
lret
fadds
jl
aad
jle
cli
pop
pop
cmpsb
setno
cmp
arpl
jbe
clc
in
out
jae
mov
and
cld
je
shlb
sbb
sub
pop
or
repz
sub
hlt
movsb
xchg
add
gs
dec
das
dec
mov
cltd
xchg
push
add
add
aaa
sub
sahf
pop
add
pop
aas
adc
in
leave
je
call
cli
add
adc
push
xor
ret
jnp
fdivs
pop
dec
xor
inc
sub
daa
cmp
test
femms
lods
jmp
mov
sbb
sub
in
mov
push
lcall
mov
cmp
mov
push
inc
jmp
add
mov
imul
lcall
mov
cmpb
stc
ret
inc
push
and
xchg
ret
in
add
push
cwtl
int3
jne
jo
dec
xchg
xchg
inc
addr16
addb
mov
add
fimull
adc
mov
int3
fimull
icebp
xor
stos
inc
cmp
pushf
loope
inc
xor
cmc
aad
and
adc
adc
and
cmp
cltd
stos
mov
mov
lahf
testb
jge
xchg
fwait
xor
jle
jno
push
jge
mov
add
cmc
nop
add
xchg
jecxz
leave
pop
jmp
fistps
pop
push
jo
outsl
push
aas
pop
push
mov
out
aad
imul
cli
test
xor
cmp
movsl
cmpsb
fs
dec
roll
mov
pusha
sub
add
sub
movsl
mov
loopne
pop
movsb
xchg
mov
push
and
inc
xlat
lcall
xchg
sahf
jne
adc
popa
ret
shlb
out
rcll
imul
jle
loope
cmp
sub
xchg
dec
pop
out
sbb
inc
push
sbb
jne
mov
fnstsw
mov
dec
add
xchg
out
inc
fs
mov
dec
add
int3
stos
xor
not
inc
icebp
popa
fmuls
cld
mov
inc
int3
push
outsb
out
inc
loopne
adc
sbb
mov
cmp
or
push
and
jne
stos
imul
jo
sub
leave
aam
mov
mov
add
and
clc
in
inc
stos
add
pushf
test
lock
push
cs
fldl
jge
dec
jge
loop
lahf
add
repnz
adc
dec
ret
pop
std
bound
std
insl
sub
jo
int3
push
data16
add
popa
mov
jg
mov
and
push
jo
fsubl
inc
xchg
dec
jmp
mov
jo
add
push
imull
test
imul
insb
push
xchg
shlb
repz
pop
aad
jge
or
out
popa
ficoml
outsl
int3
test
testb
sahf
cld
cld
lea
push
push
pusha
int
or
sbb
cmc
mov
div
test
push
mov
popa
inc
lahf
roll
cmpsl
xor
adc
popa
leave
fsubs
jns
roll
pop
insl
push
popf
and
dec
cmpsl
stc
idivl
mov
jo
add
and
out
and
xchg
out
cwtl
loope
pusha
cmovbe
jb
lods
mov
adc
add
daa
jbe
bound
or
mov
dec
jo
adc
push
sub
mov
xlat
jecxz
rcl
push
or
sub
sarl
push
mov
out
add
sbb
cltd
or
jp
cmp
repz
test
into
sub
lods
sbb
mov
outsl
test
mov
ror
mov
shl
add
xor
ret
sahf
cltd
daa
test
lret
xor
mov
in
xchg
fmuls
fisubs
dec
fcoms
lods
push
js
lock
bound
shrb
or
imul
jnp
mov
fmuls
jmpw
in
pop
inc
push
das
test
stos
in
mov
dec
push
mov
xchg
fwait
sbb
push
lahf
inc
clc
cmp
loope
pop
int
in
cmpsl
js
mov
add
lret
bound
icebp
dec
or
sub
flds
out
sub
fisttpl
int
xor
sti
enter
mov
sbbb
popa
lock
mov
and
nop
xchg
ja
ret
push
mov
ficomps
cwtl
push
daa
pop
cs
filds
ret
clc
lret
jmp
sarl
out
loope
or
sub
cmp
xor
mov
xlat
mov
rcr
adc
hlt
cwtl
jmp
iret
mov
scas
mov
adc
xor
mov
dec
out
ret
nop
pushf
cltd
ret
or
pop
gs
ret
mov
lods
jg
dec
shll
mov
and
addb
cmp
mov
jmp
rorb
imul
and
cmp
or
icebp
mov
or
pop
sbb
add
in
xchg
shl
pusha
inc
lahf
push
adc
imul
rol
shrl
jmp
nop
jnp
mov
lods
mov
ss
mov
ja
out
inc
push
xchg
mov
pop
inc
push
dec
push
psllw
mov
aam
push
xchg
mov
push
daa
or
stos
int
dec
add
push
sbb
decl
or
push
mov
mov
mov
dec
xor
mov
int3
out
ss
ljmp
fisttpl
mov
adc
sub
movsb
adc
sub
das
loopne
test
and
pusha
xchg
sahf
push
popa
fstps
inc
cltd
bound
movsl
mov
cld
push
push
dec
mov
xchg
js
cmp
adc
daa
or
test
cltd
mov
loope
xchg
in
rep
jg
inc
push
cmc
sub
xor
addb
jae
icebp
fdivr
movsl
adc
dec
adc
cmpsb
out
jl
insb
mov
pop
mov
decl
loope
xchg
ds
add
jmp
ret
mov
fbstp
mov
sti
pop
and
mov
dec
cmp
mov
dec
sub
les
iret
xor
jl
fisttpl
rcrb
test
std
jnp
xchg
cmp
incl
dec
mull
jns,pn
mov
fsubl
xor
clc
jge
dec
fs
push
push
lahf
jns
sbb
into
sbb
jne
arpl
jge
les
mov
cmp
cli
dec
inc
pusha
enter
fs
icebp
cld
ss
push
bnd
jp
sar
push
mov
add
mov
jne
das
addr16
xchg
dec
std
icebp
cmp
or
cmp
or
or
mov
ret
lahf
xlat
cmpsl
xor
out
das
push
gs
pop
inc
mov
sbb
and
mov
sbb
imul
jo
gs
fcoms
in
ret
mov
and
push
jl
jne
adc
cld
adc
pop
xor
sub
fistl
cmp
out
adc
and
mov
shrl
aas
push
adc
mov
sub
hlt
push
push
sbb
sbb
inc
sub
fisubrs
sub
ja
mov
jb
aad
aaa
fcmovnb
jnp
add
mov
adc
addr16
inc
mov
mov
inc
jl
movsb
mov
xlat
push
int
cmp
jle
rol
xor
mov
push
cs
inc
mov
hlt
dec
sub
outsb
push
cmp
sub
or
iret
std
jno
sub
fwait
hlt
int3
or
or
das
fwait
clc
scas
lock
jbe
sbb
out
and
pop
sub
rcll
jge
xor
xor
and
jno
inc
jbe
rep
std
lret
je
or
jecxz
or
mov
adc
inc
push
mov
out
pop
adc
dec
xor
jbe
in
xchg
or
mov
inc
dec
ljmp
inc
jp
les
jnp
inc
push
dec
aaa
bound
sub
movsb
negl
adc
stc
and
jg
cmp
adc
xor
and
negb
fildll
dec
outsl
insb
shrl
mov
mov
add
or
daa
popf
dec
push
jnp
jae
sahf
pusha
repz
push
cmp
pop
xchg
mov
pop
mov
mov
jmp
scas
lock
adc
fwait
imul
and
sub
dec
or
jb
add
dec
jno
lds
shrl
pop
imul
hlt
inc
add
je
lahf
mov
hlt
bound
cmp
mov
sub
scas
std
faddp
rclb
call
adc
or
cld
mov
jl
test
sub
adc
enter
insb
pop
aad
or
movb
dec
fcom
pop
dec
inc
dec
inc
ret
scas
add
sbb
xchg
sahf
xor
sub
ds
icebp
mov
stc
ret
jbe
negl
kxorb
adc
stos
push
cmp
inc
icebp
mov
daa
xchg
pop
and
lret
iret
sbb
roll
test
in
jmp
pop
pop
outsl
pop
lcall
clc
sub
rorl
rclb
in
pop
mov
mov
btc
lret
and
pop
cmp
cmp
aaa
and
decl
jns
fstps
mov
or
push
daa
test
dec
dec
cmpsl
xchg
sarb
sbb
jnp
jecxz
pop
das
push
loopne
hlt
imul
mov
pop
and
xchg
mov
bound
xor
mov
push
push
pushf
nop
pop
mov
push
daa
adc
pop
cmp
adc
xchg
or
sbb
add
fwait
out
repnz
add
divl
sub
ds
loope
ret
test
aaa
push
stc
sub
rcrb
outsb
mov
mov
fwait
mov
sub
cwtl
in
repnz
jbe
bound
lret
pop
adc
push
adc
repnz
ret
and
movsb
test
ljmp
mov
enter
mov
xchg
xor
in
add
popf
pop
int3
idivl
lret
xor
aam
jmp
lret
sub
insl
dec
movsl
dec
jbe
adc
pop
icebp
inc
movsl
clc
add
sub
adc
mov
mov
fcmovnu
nop
sub
insb
push
notb
aas
hlt
gs
out
sub
sbb
insb
lahf
mov
pop
mov
pop
push
jmp
ds
aad
add
test
sub
sti
inc
aas
pop
lahf
add
cmpsl
jg
and
sub
mov
call
pop
cmp
repnz
std
adc
aaa
adc
icebp
imul
mov
into
mov
pop
sub
inc
xchg
shlb
adc
sbb
mov
or
sbb
orb
fistps
fmull
mov
sub
test
mov
icebp
mov
lret
push
loope
movsl
lds
das
andb
inc
jg
or
mov
pop
iret
test
inc
and
ja
and
or
pop
xlat
adc
jae
pop
and
stc
adc
fwait
cltd
insl
sbb
std
neg
xchg
lcall
loopne
ficoms
sbb
inc
lods
std
jnp
lock
shrd
xchg
filds
mov
enter
sahf
sbb
mov
mov
ret
cmpsl
and
pop
cmpsl
out
jo
adc
iret
dec
out
or
movsl
fldl
cmp
leave
jg
sub
sbb
je
test
dec
jnp
or
mov
int3
popa
pop
sahf
ja
or
enter
push
xor
pushf
sbb
fcomps
ja
dec
jmp
xchg
or
movsl
cmpsl
push
jno
notl
ds
incl
add
mov
mov
or
push
pop
test
les
push
mov
inc
jnp
dec
and
mov
xchg
lock
loopne
sub
leave
adc
cmp
je
loope
popa
scas
in
or
fmull
ja
sarb
lods
mov
jle
jge
bound
pusha
fnsave
push
lods
and
mov
decb
imul
aas
xchg
movsb
dec
adc
mov
sub
mov
jae
inc
test
cmpl
fwait
add
in
es
out
fnsave
shll
xchg
clc
dec
adc
sub
pop
mov
clc
insb
fnstenv
into
xchg
push
lock
les
cld
shr
lock
mov
add
cmc
mov
cmc
aad
mov
push
xchg
pusha
sarl
lea
lds
lret
mov
fldenv
ljmp
mov
sbb
push
push
lods
repz
cmpsb
shl
stc
cli
mov
and
nop
push
inc
jmp
stos
in
and
and
clc
test
jge
mov
sub
outsb
test
pop
and
movsl
adc
sti
jbe
push
loopne
push
fs
aam
xchg
and
pop
add
xor
divl
mov
jbe
push
nop
in
mov
loop
or
cmp
inc
pop
out
arpl
mov
push
jl
cmpsb
cmp
pop
push
mull
push
jle
pop
jl
rorl
push
cmp
cltd
and
icebp
jp
loop
or
mov
inc
in
ret
int
leave
pop
jnp
jge
and
aaa
pushf
icebp
push
loop
or
adcb
iret
jne
cmp
mov
or
sbb
cmc
jmp
jg
mov
imul
sub
out
je
mov
int
fiadds
mov
icebp
mov
inc
divl
pop
stc
dec
pop
rcrb
pop
xchg
lea
push
aad
xor
ljmp
scas
mov
mov
xchg
mov
fcoml
cmp
adc
push
jp
pop
scas
arpl
mov
out
xor
cmp
aas
push
gs
je
add
cld
xor
test
pop
xchg
add
xchg
sbb
xchg
gs
lock
fsub
clc
mov
imul
mov
and
add
adc
repnz
add
mov
and
xlat
push
inc
out
aaa
sub
cmp
push
loopne
out
es
gs
sbb
outsl
fwait
lods
ljmp
loop
add
movl
dec
test
es
add
mov
mov
push
sbb
out
mov
dec
push
mov
xchg
xlat
ret
sti
test
arpl
jecxz
dec
insb
adc
sbb
add
mov
cmc
jl
into
xor
lods
mov
push
sti
fs
sbb
negb
frstor
jmp
fneni(8087
jecxz
sbb
pop
xchg
fidivrl
jecxz
jno
or
out
cmp
bound
add
and
loop
cmpsl
dec
jl
cwtl
out
in
jecxz
enter
sub
mov
adc
sub
aam
mov
sti
repz
fisubrs
cmp
ret
and
xchg
sub
addr16
int3
scas
mov
inc
ffreep
loope
movsl
enter
clc
dec
jle
in
leave
into
es
fcoml
rcr
shl
lock
push
adc
arpl
push
push
pop
data16
sbb
sahf
mov
cli
ss
fsts
in
les
cmpsb
lds
cmp
std
pop
lret
adc
sti
mov
iret
or
rcl
movsb
pop
pop
inc
movb
jmp
xchg
add
jb
stos
xchg
pop
mov
lahf
inc
sbb
mov
lods
out
das
pop
mov
push
or
and
sbbb
mov
inc
ljmp
nop
xchg
arpl
pop
mov
negl
imul
push
mov
fs
lods
popa
outsl
dec
fisubl
inc
inc
xchg
aam
dec
push
repz
sub
mov
scas
xlat
out
xchg
imul
sub
jge
sti
cs
add
inc
mov
nop
mov
sarb
mov
outsb
push
lret
adc
xchg
out
clc
add
loope
jle
cli
add
shll
jne
lock
fisttpll
mov
fidivrl
lods
ds
daa
inc
mov
dec
nop
jbe
sub
leave
sub
adc
cmc
jmp
fcoms
mov
mov
cmc
add
mov
loopne
add
lock
pop
popf
out
xchg
inc
in
push
cmp
loope
int3
pop
or
mov
lret
iret
add
and
clc
mov
mov
dec
push
push
sub
stos
mov
add
xchg
add
test
mov
ljmp
and
and
inc
jbe
imul
je
sub
cmpsl
inc
enter
push
ret
cmp
stos
cwtl
adc
push
sub
fadd
sbb
pop
imul
bound
dec
pop
push
mov
lods
dec
xchg
int3
imul
loop
shrb
cmp
shrb
lahf
lahf
adcl
int3
xchg
je
xchg
repz
add
pusha
dec
pop
loope
lods
enter
cmp
fidivrl
jge
in
pop
and
pop
push
iret
mov
into
pushf
mov
mov
adc
cmpsl
mov
je
into
sbb
jne
cmp
cmp
push
push
mov
push
fcoml
or
js
imul
sbb
mov
dec
fisubs
cmp
mov
xchg
mov
inc
clc
inc
je
mov
mov
sbb
out
adc
popa
jbe
into
out
xchg
ret
lret
cwtl
jg
rolb
fbstp
or
test
dec
popa
scas
fisttpl
push
ljmp
pop
mov
and
sar
or
mov
dec
test
inc
arpl
pop
bound
dec
sub
fmuls
stos
insl
sbb
push
sbb
jge
out
lods
loop
cmp
scas
fldl
adc
mov
push
adc
and
push
xchg
es
cli
mov
pop
movsl
xchg
cmpb
out
mov
das
xchg
sbb
pushf
lods
pop
sbb
std
das
test
rorl
mov
cmc
xchg
mov
repnz
fcompl
sbb
shl
cs
fldcw
sub
cmp
scas
dec
add
nop
sbb
or
mov
fsts
dec
setne
hlt
push
inc
lcall
lods
and
inc
mov
jmp
jbe
sub
mov
xchg
leave
push
sub
add
stos
jle
test
sub
jmp
es
cmp
pushf
testb
xchg
adc
outsl
cmpsb
fdiv
cmpsl
push
cmp
mov
mov
test
mov
inc
xchg
pop
xor
mov
clc
dec
es
cwtl
xor
shlb
int3
clc
in
push
out
xchg
xor
lret
inc
mov
outsb
push
outsb
jp
add
adc
dec
push
in
inc
xor
and
mov
cmp
inc
mov
cld
jl
dec
fwait
push
fnstcw
fs
rorl
xor
fstpl
mov
movsb
sub
sbb
dec
test
sub
or
lds
jae
inc
iretw
in
sbbl
clc
mov
dec
xor
sub
out
aaa
movl
cmp
aam
lods
lds
pop
fldenv
out
adc
loop
push
dec
mov
xor
in
jbe
in
ret
add
xchg
movsl
popa
and
cmpsb
dec
popa
mov
xchg
xchg
shrb
mov
sub
xchg
loope
jge
pusha
hlt
mov
mov
jge
loop
or
jmp
fwait
sub
sub
jmp
sub
mov
push
out
sti
iret
popf
mov
out
xorb
mov
loop
push
aaa
jecxz
mov
sahf
mov
sbb
inc
push
test
cmp
sub
mov
inc
adc
lods
inc
sbb
sub
movsl
xchg
inc
push
mov
cmc
in
inc
push
int
or
push
int3
test
std
mov
lea
popf
dec
mov
lods
xor
xchg
mov
clc
inc
gs
lds
pusha
in
data16
jae
mov
fimull
dec
lcall
xchg
sub
and
gs
push
jns
lea
push
movsl
mov
mov
decb
aaa
insl
adc
or
leave
aas
cmp
add
sbb
push
mov
mov
loop
inc
loopne
stos
stc
pushl
jle
fldt
gs
outsl
adc
and
mov
pop
movsb
iretw
jbe
rcrb
pop
dec
and
adc
std
or
rorl
or
cmp
call
sub
add
jg
ja
dec
inc
dec
idiv
xor
mov
push
sbb
icebp
mov
adc
or
xchg
xor
jmp
hlt
lret
cs
mov
out
mov
dec
mov
in
jmp
ret
adc
add
mov
mov
xor
nop
pop
jae
adc
dec
and
pop
pop
je
cmp
jge
xor
popf
jl
mov
jno
iret
nop
test
lret
addr16
jno
addr16
cmp
cmp
adc
loopne
xor
ljmp
dec
mov
jbe
enter
or
pop
adc
stc
jmp
and
pop
cmp
arpl
xchg
push
dec
lea
fisubl
mov
mov
jne
or
bound
bound
into
or
fimuls
fyl2xp1
dec
mov
push
shlb
rorl
mov
and
add
icebp
outsl
or
push
or
xchg
mov
popa
jge
aaa
adc
add
cwtl
pop
jnp
iret
adc
or
fnstsw
into
cli
cld
addb
mov
in
loope
sti
repz
hlt
test
sub
stc
sbb
sub
das
mov
inc
call
in
scas
push
sbb
xchg
lock
mov
lods
lcall
test
es
jnp
inc
addb
adc
and
rorb
in
dec
pushf
xchg
test
push
arpl
add
shlb
movsb
lock
or
sti
xchg
xchg
aad
shll
dec
inc
adc
or
push
add
cwtl
addr16
mov
xchg
aaa
or
das
push
lret
mov
push
imul
push
adc
xorl
jnp
pop
pop
fisttpll
in
lds
insl
jg
lods
lods
cmp
sub
decb
shlb
pop
test
mov
sbb
test
mov
cmp
adcb
push
js
fistpll
sbb
aas
jge
push
mov
cmp
jmp
dec
push
das
sub
fisubrl
icebp
ja
inc
clc
rcrl
shr
mov
lret
lahf
sub
js
and
sbb
pop
mov
jl
jbe
test
stc
mov
fucom
lea
mov
mov
shlb
sti
outsl
inc
or
roll
pop
mov
lcall
ret
sub
sub
stos
jb
filds
jnp
jmp
fwait
mov
jge
pop
out
sub
mov
call
jl
decl
inc
dec
and
stos
mov
in
xor
jno
iret
rcl
lret
imul
inc
sbb
pop
sub
cltd
xchg
call
mov
cmpsb
push
push
ret
mov
rorl
sub
push
dec
lret
xchg
mov
mov
imul
insb
out
test
addr16
xchg
sbb
fldenv
push
ss
ret
je
pop
cmc
and
lock
adc
lds
insb
nop
xor
and
imul
jp
pop
xchg
stos
rorl
jge,pn
andb
shrl
test
cmpb
rcrl
xor
xchg
push
inc
sbb
sub
xor
cmp
xor
mov
shrb
into
sbb
decb
mov
popf
in
push
lcall
xor
push
push
cmp
verw
and
push
jmp
add
mov
pop
sbb
inc
mov
xchg
movsl
cmc
js
loope
mov
inc
push
mov
push
scas
dec
lods
mov
adc
ja
adc
pop
cmp
jg
in
lret
mov
jno
push
mov
aas
sarb
test
out
mov
cwtl
sub
clc
sub
lds
push
stos
adc
pop
cmp
push
out
sbb
xchg
mov
mov
mov
ljmp
dec
dec
sub
jns
mov
and
adc
notl
push
js
xor
int3
insb
or
outsl
mov
jbe
mov
xlat
testb
mov
movsl
push
call
icebp
push
jmp
scas
inc
movsl
cmp
stos
and
adc
cmc
leave
sbb
or
pop
mov
cmovg
lcall
arpl
js
push
jmp
int
fwait
orb
and
mov
push
sub
jmp
ret
outsl
sbb
xor
adc
mov
fwait
cmc
gs
js
loopne
pushw
bound
mov
mov
mov
dec
pushf
dec
jecxz
repz
cwtl
in
inc
mov
je
movsl
stos
mov
xor
or
or
jne
ss
imull
popf
mov
addl
test
mov
lea
adc
inc
cmpl
mov
addr16
mov
jg
sub
popf
js
shlb
in
lods
ds
pop
xchg
jo
push
or
or
arpl
pop
jne
mov
or
mov
dec
adc
mov
push
xchg
arpl
xchg
pop
cmp
cwtl
mov
push
in
scas
insl
xor
daa
xchg
pop
aam
jne
out
pop
dec
lea
int3
or
gs
mov
pop
push
pop
enter
jb
dec
mov
sub
push
add
jno
pusha
adc
enter
jns
leave
imul
iret
adc
jno
or
jb
mov
addr16
repz
movsb
cmc
aam
fcmove
imul
repz
enter
cwtl
inc
pop
fists
cmpsb
in
andl
dec
sub
push
or
ret
mov
xchg
mov
push
xchg
ds
push
sbbl
stc
adc
pop
pusha
popf
cwtl
mov
or
mov
xchg
out
int
mov
and
mov
sbb
push
jg
lods
mov
sbb
lds
int
jecxz
call
lret
ds
jge
push
daa
jmp
push
rcr
or
pop
pcmpgtw
dec
lret
dec
clc
dec
in
lds
cmc
les
dec
scas
lds
add
inc
sub
jg
cmp
or
or
cmp
mov
mov
jge
push
cmp
mov
inc
dec
push
sarb
xor
sbb
aam
adc
mov
pushf
sub
bound
adc
test
jo
add
gs
dec
leave
mov
cmc
mov
mov
mulb
test
xor
imul
ja
ret
rol
xorb
sarl
mov
ljmp
in
fcomi
add
movsb
daa
inc
lcall
fnstsw
mov
rol
fidivrs
push
sarb
ret
mov
push
aaa
jmp
movsl
jg
cmpsl
jg
mov
insb
incl
ljmp
aad
xchg
mov
mov
mov
lret
or
les
cld
mov
cmpsb
add
pop
mov
mov
pop
and
pop
shrl
aaa
cmpl
jno
lods
dec
or
pop
adc
and
pop
jae
add
ret
adc
jg
mov
mull
bound
pop
test
repnz
push
jo
adc
mov
orb
dec
jg
or
add
inc
mov
add
xchg
data16
or
push
xchg
inc
sub
je
cmp
aam
pop
daa
xchg
push
in
sub
fcomps
sub
and
lock
add
in
xor
aad
pop
dec
aas
outsl
jg
pushf
pushf
add
mov
rclb
dec
insl
sbb
xchg
xchg
or
or
subb
cmp
and
loope
fwait
cmp
sbb
lahf
inc
push
popf
pop
leave
cwtl
jecxz
orl
sbb
out
inc
mov
inc
cwtl
repz
xchg
mov
mov
cmc
scas
gs
sub
pusha
push
cmp
lods
mov
jnp
inc
mov
mov
lcall
push
push
aam
lods
lock
mov
arpl
sbb
and
mov
xchg
dec
incb
negb
add
xchg
jmp
mov
lock
mov
pop
aam
ficomps
xchg
outsl
frstor
mov
cmp
dec
stos
aaa
inc
add
arpl
dec
and
mov
mov
insb
jmp
loope,pt
les
jge
xchg
inc
push
leave
pushf
fists
mov
cmp
ret
lds
push
popw
xlat
and
or
inc
xchg
iret
fmull
pop
aam
inc
pusha
xor
pop
enter
pop
push
in
cmpsb
push
sub
test
sub
icebp
mov
dec
mov
pop
adc
jnp
mov
cltd
inc
sbbl
add
dec
sbb
dec
pop
xchg
xorl
test
dec
add
pop
push
add
sub
push
mov
das
popa
pop
jbe
ficoms
mov
cmp
mov
rclb
xchg
jbe
jg
add
sbb
mov
stos
add
mov
ss
es
imul
ja
lock
gs
sarl
sub
inc
lea
fsubrl
out
stos
bsf
mov
fisubrl
adc
or
outsl
fisttpl
xor
mov
movsl
inc
outsl
mov
fxch
pushf
or
sbb
fwait
and
les
xor
cmpsb
pushf
mov
dec
hlt
repnz
repnz
cmp
add
cmp
push
data16
jae
inc
lret
popf
push
addl
mov
xchg
pop
scas
xchg
mov
add
xchg
dec
jecxz
mulb
mov
cmpsl
inc
xchg
ljmp
sub
cmp
lds
cmp
pop
mov
dec
push
pop
dec
jbe
jns
test
fld
xchg
das
sub
popa
mov
xchg
add
push
aam
adc
stos
arpl
faddl
leave
ds
repnz
pop
int3
mov
sbb
sub
lret
add
dec
push
push
and
cltd
loopne
cmpsb
add
xlat
stc
mov
and
call
in
popa
inc
and
mov
test
add
std
repz
push
shll
mov
das
lea
push
shrb
cld
into
cmpsl
or
jno
cmp
aas
ficomps
jecxz
push
pop
inc
xor
adc
xchg
imul
fbld
mov
testb
testl
add
jge
and
in
cmp
orl
out
in
or
adc
leave
push
int3
mov
ret
push
hlt
xor
dec
pop
pop
jg
inc
cmpsl
cwtl
outsb
mov
mov
mov
mov
lods
jmp
lahf
sbb
sbbl
fidivl
mov
add
mov
xchg
dec
sub
pop
add
out
leave
and
adc
pop
cmpb
jg
gs
fimuls
add
fisttpl
lcall
mov
fadd
mov
stos
or
lods
imul
dec
bound
adc
sbb
xor
shlb
in
jne
mov
mov
addr16
in
std
arpl
movsb
dec
lahf
xchg
or
popa
aaa
in
xor
cld
cmp
andl
movb
xor
jae
pop
pop
addb
jg
insb
aaa
cmp
jnp
es
jge
out
leave
mov
mov
xor
das
lret
or
adc
xlat
add
stos
jnp
arpl
adcl
addr16
add
push
inc
in
mov
push
cmpl
pop
inc
jge
mov
mov
jb
out
adc
test
mov
orb
jbe
nop
addr16
fucomip
pop
xchg
divl
fisubl
fnsave
mov
dec
sbb
push
mov
cmp
popa
lods
jns
mov
mov
fnsave
and
or
in
inc
test
and
add
sub
adc
push
sahf
pop
xor
sahf
addl
xchg
mov
mov
ror
aas
and
sbb
insl
inc
fwait
in
fisubl
pop
inc
mov
ret
jmp
xchg
inc
inc
lret
mov
mov
xor
dec
loope
in
pop
mov
fldt
and
and
scas
and
push
fisttps
push
push
jne
push
mov
xchg
and
jns
sbb
lcall
in
in
xchg
ret
xor
loopne
mov
inc
movsb
nop
mov
out
cmc
and
lret
push
push
jl
jns
sahf
ljmp
stc
mov
cmp
dec
fwait
jmp
rolb
cs
test
xor
sbb
addr16
sbbl
mov
scas
lret
mov
test
aad
lods
pop
aam
cs
sbb
iret
mov
cmp
mov
mov
jb
das
pop
repz
test
fistps
popf
fdivrp
cmp
popa
imul
cmp
aaa
cmp
jge
idivl
daa
out
rorl
adc
sub
or
lea
rolb
jmp
push
mov
out
add
sbb
sbbl
cli
ss
push
sub
jb
push
cmc
stos
sarl
push
loop
call
dec
or
inc
js
movsb
mov
lods
movsl
cmc
aad
jns
push
push
or
mov
into
sbb
clc
push
and
xchg
and
pop
xchg
push
sbb
mov
test
int3
push
mov
ror
mov
push
iret
pop
fs
sbb
imul
cld
jns
and
iret
movsb
jp
sti
push
sub
add
ret
pop
or
xchg
jecxz
or
cmp
pop
cmp
fnsave
sub
mov
xorb
cwtl
sub
cmp
loope
sub
push
jmp
pop
lods
in
call
dec
dec
jbe
cli
add
cmp
jmp
push
cvtdq2ps
filds
inc
sub
mov
std
repnz
sahf
insb
mov
mov
pop
out
xchg
push
fstpl
or
xlat
sub
popf
pusha
adc
sub
cld
pop
mov
hlt
or
pop
fimull
dec
push
add
das
inc
push
push
mov
int3
inc
fwait
mov
sahf
shrl
jae
adc
ret
pushf
lcall
mov
int
bnd
mov
aaa
push
fimuls
push
cmp
and
dec
movsl
dec
and
aaa
adc
push
shlb
dec
jecxz
adc
mov
add
fs
mov
cmp
and
jo
jbe
cmp
or
mov
pop
push
mov
push
jle
adc
adc
adc
and
mov
repz
cmp
dec
mov
cwtl
adc
adc
pop
mov
jg
fcoms
fdivs
lods
ret
pop
mov
pop
fimull
jp
in
jmp
jecxz
pop
inc
aas
loop
enter
test
mov
ss
popa
xchg
add
rcrb
daa
filds
enter
push
sbb
cwtl
sub
lret
cmpsb
xor
jno
imul
scas
cmp
or
adc
clc
arpl
add
pop
jo
jo
dec
mov
out
xchg
cmp
ss
jmp
mov
xor
scas
pushf
shrb
lock
sbb
rcrl
imul
xchg
std
ret
and
pop
mov
xchg
add
ret
mov
insb
xor
nopl
insl
imul
dec
mov
mov
xchg
xor
arpl
cwtl
and
sti
insl
inc
or
lea
fs
jno
mov
sub
mov
cmp
fistps
nop
loope
lods
mov
arpl
scas
jo
xor
loop
out
adc
testb
xchg
je
repz
pop
ljmp
sub
inc
and
shll
push
imul
enter
inc
mov
sbb
fimuls
sbb
call
bound
mov
sub
adc
xor
add
test
cmp
xor
arpl
dec
push
xor
lret
xchg
pop
mov
jae
xor
mov
sbb
lret
hlt
sti
cmc
or
sbb
adc
dec
fisttps
divb
into
ss
mov
xchg
int3
enter
sub
cmp
clc
and
xlat
ret
sub
add
icebp
outsb
jne
sub
fcomps
push
sahf
add
aas
aaa
mov
add
ljmp
sub
push
mov
lahf
mov
or
sbb
pop
inc
ljmp
loopne
xchg
fbstp
pop
shlb
mov
mov
xorl
xor
jae
loop
xchg
pop
movsb
mov
loopne
shr
fimuls
int3
mov
das
mov
ss
dec
jbe
add
or
icebp
loopne
mov
pop
clc
sti
mov
orl
int
shll
jbe
icebp
sub
mov
xchg
xchg
xchg
negl
pop
mov
lret
dec
repz
idivl
scas
xchg
adc
mov
mov
stos
cmc
mov
subb
sbb
scas
mov
add
mov
and
adc
call
stos
mov
and
add
mov
int3
mov
mov
push
mov
adc
pop
jle
xchg
jb
or
pusha
ja
mov
inc
sub
add
or
sbb
rorl
cli
push
sub
push
sub
and
fwait
hlt
ljmp
jg
ret
mov
push
sub
add
or
xor
xchg
adc
out
inc
pop
add
dec
mov
clc
push
mov
pusha
jbe
jns
enter
bound
arpl
mov
repnz
leave
jb
fadds
lcall
add
aam
lds
mov
dec
adc
in
mov
sti
leave
sbb
add
rcrl
ljmp
and
loope
enter
push
and
loope
xchg
test
imul
shlb
push
std
dec
dec
jp
adcb
ljmp
and
ret
stc
push
es
mov
cmp
aad
xchg
mov
add
test
mov
sub
dec
ss
pop
xor
sti
add
in
push
mov
aam
xchg
cmc
cmp
cmpsl
xchg
cmp
ret
ret
jne
in
pop
mov
stos
out
into
shll
push
inc
inc
xor
ja
lods
cmpsl
scas
mov
fld
adc
inc
mov
push
lock
push
outsb
aaa
or
xchg
push
loop
icebp
sbb
xor
inc
dec
sbb
fldl
sub
jg
or
or
jg
mov
xchg
inc
jmp
xchg
cmp
xlat
cmp
mov
clc
jbe
mov
cmp
cmp
cwtl
sbb
sbb
adc
and
popa
xlat
repz
xchg
xor
lahf
mov
ja
jl
sub
in
pop
jae
adc
xor
dec
adc
and
sbb
mov
adc
sub
es
loopne
mov
xor
and
mov
lods
shlb
scas
insb
mov
xor
orb
out
lods
push
mov
and
sbb
cmp
push
and
jnp
or
xchg
lahf
fwait
popf
inc
jb
lea
sub
xor
pop
ljmp
ja
addr16
cmpsb
pop
jbe
jg
or
jnp
and
dec
fdivrl
fucompp
xlat
mov
xchg
ret
add
jmp
mov
push
cmp
pop
das
iret
dec
cmpsl
add
scas
into
jge
xlat
cmp
fwait
aad
test
push
pop
lahf
jl
push
adc
sbbb
fdivp
fs
ss
ror
aaa
mov
sarl
shl
test
fsubrs
xchg
sbb
adc
sub
clc
push
sahf
mov
ret
xlat
cmpl
jg
push
fstps
imulb
and
dec
lods
mov
jp
push
cltd
in
sub
xor
sbb
add
jge
mov
sbb
lods
push
imul
rcl
sti
bound
sbb
lea
jg
mov
sbb
push
mov
add
fldln2
sarl
movsl
inc
inc
push
arpl
pop
push
mov
insb
cmpsl
sub
out
outsb
shrb
dec
jbe
lock
aad
cmp
pop
adc
fadds
in
pop
push
and
lcall
into
adc
jge
out
mov
mov
lods
std
je
rolb
daa
addl
add
fst
sbb
add
gs
jbe
dec
mov
or
les
sub
mov
jg
and
mov
xchg
mov
cltd
adc
outsl
jmp
out
insb
iret
into
fistl
inc
outsl
sbbl
addb
icebp
lahf
cmp
fs
addr16
mov
test
pop
mov
js
xchg
icebp
push
incl
xchg
lock
fbld
jnp
xor
ja
pop
sbb
orb
call
inc
lcall
leave
mov
aam
jl
loopne
fldl
inc
add
stc
add
daa
addb
xlat
shlb
pop
shll
jle
clc
push
mov
sub
sarl
mov
test
mov
test
mov
fwait
or
bound
push
dec
lahf
icebp
pop
outsb
mov
mov
pop
je
add
lcall
test
mov
cmp
stc
push
mov
cmp
outsl
adc
test
and
mov
push
adc
adcb
pop
mov
cmp
shl
dec
dec
mov
bound
sahf
mov
dec
mov
push
inc
dec
jg
roll
stos
arpl
mov
push
loope
jmp
stos
out
stos
dec
push
aad
cld
iret
fsub
xor
push
fs
stc
cli
or
mov
test
push
rclb
orb
mov
and
dec
popa
xchg
incb
fdivs
mov
mov
test
jl
dec
in
cld
in
inc
es
mov
pop
in
adc
sbb
ret
push
inc
mov
movsb
jmp
call
jmp
andb
pop
cmp
xor
dec
mov
xchg
jne
lret
inc
jle
pop
clc
push
insl
mov
lock
cmp
ljmp
pop
mov
adc
push
fldt
mov
int3
das
mov
jnp
inc
jg
loope
es
sti
dec
mov
outsl
stc
mov
icebp
inc
jmp
ja
mov
inc
mov
in
in
adc
test
mov
lea
dec
mov
jmp
cmp
and
xor
testb
or
stos
dec
dec
mov
xor
mov
and
dec
outsl
pusha
call
push
adc
push
aaa
adc
movb
jb
pop
subl
mov
dec
pop
fistl
mov
out
into
clc
leave
sarl
pusha
popf
scas
mov
push
out
pushf
xlat
push
sub
adc
or
in
xlat
fisttpl
fldcw
imul
clc
jg
sub
sarb
sbb
mov
push
mov
andl
adc
mov
leave
loope
scas
or
push
mov
lock
in
popf
fcomps
sub
std
fwait
push
mov
iret
cmpsb
and
jae
inc
cmc
rorb
push
sbb
shrb
dec
icebp
xlat
cmp
cmc
sarl
push
sub
aaa
cld
or
popf
and
and
icebp
clc
cld
cmp
lock
shll
cs
les
into
mov
or
sbbb
fsts
adc
inc
lds
push
scas
imul
shl
xchg
loope
ds
jns
xor
ret
andl
jmp
in
movlps
movsl
sbb
push
out
loope
mov
fiadds
ret
cmc
int
rolb
xchg
mov
cmpsb
orb
mov
rcrb
sbbl
xlat
stc
add
cmpsb
mov
mov
xor
jo
fwait
jge
int3
test
pop
cs
ss
fwait
mov
call
leave
sub
push
pusha
mov
fwait
dec
push
pushf
outsb
lret
or
xchg
or
loop
mov
hlt
fstpt
xchg
push
iret
and
lret
pop
add
aam
pshufw
outsl
in
jmp
in
sbb
sub
add
sbb
sbb
aas
cmp
bound
imul
rolb
fmul
inc
scas
inc
sub
repnz
mulb
xchg
lea
xor
cmp
fdivs
out
xchg
lahf
inc
lock
mov
sbb
arpl
test
dec
jne
cmp
out
push
ret
cmp
mov
pop
pop
test
hlt
dec
mov
dec
inc
push
sub
shl
outsl
rorb
xor
fs
cli
push
inc
rep
mov
repnz
pop
mov
lods
xchg
int3
aam
and
cmp
call
sti
sub
pop
xor
lret
xchg
jns
push
ss
pop
adc
cltd
and
mov
imul
inc
sahf
sbb
jecxz
repnz
xor
xchg
aaa
in
outsl
or
testl
jae
stos
jne
jnp
movsl
and
xor
daa
sub
arpl
cmp
and
adc
bound
and
out
mov
push
fxtract
mov
and
add
or
pop
clc
sti
xchg
adc
ret
pop
fstpt
out
addr16
pop
xchg
pushf
enter
movsb
insl
mov
out
mov
dec
fcomps
xchg
daa
in
xchg
sbb
pop
data16
mov
movsb
sub
sbb
fwait
loop
add
repz
shrw
sub
xchg
mov
adc
adc
and
movsl
xchg
jnp
add
pop
add
out
outsl
or
imul
pushf
xor
xchg
or
xrelease
sub
sbb
pop
dec
add
dec
mov
test
or
or
push
and
pushf
xchg
cwtl
in
rclb
jecxz
mov
cld
movsb
sbb
aad
fiaddl
and
lock
dec
ret
je
mov
dec
mov
jne
inc
add
aaa
mov
ret
lods
lea
pop
sub
das
cmc
test
add
pop
push
add
fwait
jmp
mov
mov
shrb
pop
imul
adc
loope
loopne
dec
xor
xor
lret
ret
fs
mov
ljmp
lods
repz
sub
sti
sahf
push
pop
je,pn
push
push
test
stos
xchg
cmpsb
and
rcrb
std
dec
in
adc
pop
loopne
lret
imul
pop
mov
sub
xchg
mov
sbbb
sbb
jp
fldenv
test
add
call
sbb
or
aad
jno
sub
shlb
stc
adc
cmpsb
xor
rclb
movsl
sbb
push
lds
xor
in
mov
es
loop
stc
repnz
inc
ja
xlat
jecxz
mov
dec
add
test
mov
fwait
adc
add
out
mov
int3
lods
and
jae
pop
xchg
aad
mov
pop
sub
pusha
inc
sub
aad
jg
sub
leave
push
pop
pop
and
int3
mov
fistpll
pop
imul
sbb
mov
and
ds
sub
mov
cmp
popa
xchg
jp
shrl
xchg
addr16
jno
call
cli
push
rorl
cmp
push
xor
adc
pushf
push
imul
subb
imull
xchg
pusha
into
rorb
icebp
out
push
cli
ljmp
testl
jle
xor
xor
jg
xchg
inc
dec
in
ffree
jbe
int
imul
add
pusha
sbb
neg
xchg
xor
daa
shll
xchg
xchg
add
pushf
pop
jbe
add
cmp
cmc
dec
fcomps
ficompl
xor
sub
test
mov
ret
mov
mov
loop
xchg
lret
std
addl
pop
jae
js
mov
cwtl
mov
xchg
pop
inc
adc
ljmp
fcoml
mov
fldt
pop
jbe
mov
dec
in
sub
push
mov
inc
enter
scas
pop
pop
cld
and
dec
mov
shrb
and
lods
xchg
pause
ret
adc
in
icebp
sbb
leave
cld
xor
pop
call
xor
push
dec
fdivrl
adc
cmp
arpl
ljmp
pop
test
rcrl
add
mov
ljmp
pop
add
xchg
ret
int3
sbb
mov
ds
ds
mov
adc
cmp
sahf
sahf
mov
je
lock
add
or
cmp
testl
fstps
rolb
sub
aam
popf
repz
mov
xchg
or
pop
and
in
bound
les
lret
jne
addr16
cmpsb
mov
jmp
pop
repz
push
mov
ja
pop
cltd
into
pop
nop
cmp
enter
adc
movsl
push
in
cmp
and
mov
jnp
ficompl
test
push
cmp
imul
push
addr16
lcall
xchg
adc
shr
xchg
cmp
jbe
scas
pop
cld
push
cli
loope
in
std
add
shll
add
dec
jecxz
out
add
lcall
push
ret
push
imul
xor
aas
in
repz
pushf
mov
push
imul
scas
dec
dec
fstps
push
imul
fbstp
mov
push
xchg
ljmp
shrl
pop
mov
or
inc
lret
or
scas
jmp
jne
ljmp
ds
bound
pop
adc
ret
js
sti
xchg
sub
sti
call
xor
and
mov
sub
xor
cmp
out
aam
mov
pop
xchg
ret
lret
out
sarl
cmp
or
cmp
xchg
sub
inc
in
and
mov
popf
cmp
or
fs
push
fwait
jno
ficoms
repnz
jbe
fadd
jb
inc
jns
sti
jge
cwtl
fwait
aam
adc
dec
pop
in
adc
or
stos
popa
jmp
stos
arpl
insl
stos
insl
call
out
dec
adc
dec
and
and
add
enter
rclb
jle
out
mov
inc
int3
decl
fnstcw
xchg
jecxz
push
adc
popl
call
or
das
mov
daa
inc
pop
pushf
cltd
jns
push
int
push
mov
push
or
inc
movsb
mov
pop
jo
add
ja
sub
xchg
inc
rolb
lcall
xor
push
ficomps
test
mov
hlt
push
mov
or
jb
sbb
in
and
adc
xchg
outsb
addb
inc
adc
outsl
mov
scas
pop
inc
jne
lahf
xor
push
add
cmpsl
xchg
ljmp
mov
mov
lock
das
sahf
inc
aam
aam
xlat
pop
push
lahf
mov
adc
pop
adc
mov
sbb
mov
and
pushl
xchg
cmpsb
jne
xor
cmp
nop
std
xor
sbb
mov
fdivrs
inc
mov
sbb
cltd
mov
cmp
jmp
loopne
ds
lods
pushf
push
lds
dec
shlb
hlt
clc
je
mov
cwtl
mov
mov
adc
stc
pop
ja
push
pop
cmp
nop
push
cmpsl
mov
pop
loope
adc
dec
push
mov
pop
ss
xor
xor
or
fnstcw
xchg
dec
mov
test
inc
xor
mov
ficomps
cld
lahf
lcall
outsl
imul
sub
mov
jbe
imull
fildll
rolb
in
sbb
xor
in
ja
sub
cld
ficoml
push
dec
xor
cld
fidivl
push
mov
pop
xchg
stc
dec
divl
cli
scas
fs
inc
fnstsw
aaa
imul
inc
jo
jp
mov
push
cmpsb
iret
sub
in
mov
sbb
out
and
jmp
pop
jnp
call
xor
xor
addr16
or
ret
adc
dec
sub
in
or
xchg
sub
mov
das
decl
and
push
lods
nop
mov
cmp
imul
leave
mov
mov
push
xor
sbbb
sbb
subl
jne
lds
loope
dec
idivb
cld
mov
mov
test
mov
fists
xor
in
lods
out
mov
jae
or
adc
xchg
inc
mov
shrb
pop
int
add
popa
jbe
cmp
imull
push
dec
loop
xchg
push
cmp
mov
ljmp
mov
or
data16
lock
sbb
aas
data16
jne
js
pusha
inc
jb
cmp
imul
inc
lahf
xchg
push
out
nop
mov
repnz
push
orb
push
jne
xchg
repz
ret
loopne
je
dec
push
add
popa
lds
jno
fildl
sbb
testl
mov
or
movsl
sub
xor
push
ret
lcall
ds
or
into
rcr
xor
sub
dec
mov
pop
clc
cwtl
fisubs
adc
push
jb
scas
js
push
mov
dec
js
scas
add
push
xchg
push
sbb
in
movsb
shll
xlat
fsubrl
scas
rclb
xchg
addr16
xor
or
mov
xchg
push
cmp
mov
stc
and
push
cmp
jbe
mov
loopne
dec
in
jno
ret
sbb
cs
adc
dec
xchg
add
sbb
loopne
dec
sbb
hlt
aas
xchg
mov
mov
insb
push
enter
or
xchg
cmp
insl
jle
std
or
or
lods
or
sbbb
pop
mov
push
lahf
mov
movsb
aad
out
and
pop
pushf
das
in
push
cmp
int
outsb
lods
leave
xchg
push
imul
aaa
test
shl
xor
pushf
es
mov
fistpll
out
adc
std
mov
icebp
stos
pop
cmp
add
mov
cmp
ss
xor
cmp
push
mov
jmp
jle
imul
aas
mov
adc
xor
or
repz
dec
rol
inc
and
and
insl
push
push
cs
xchg
push
insb
and
ss
loope
jne
xchg
mov
inc
xchg
and
clc
xor
sbb
rorl
sti
stos
fs
pop
jae
cmp
ss
lock
sbb
cmp
adc
push
pushf
or
pop
dec
jbe
and
rorl
dec
xchg
mov
ljmp
and
jecxz
xor
outsl
mov
pop
ficoms
les
out
inc
cmp
inc
movl
aad
jl
jmp
jo
insl
hlt
xchg
in
and
aad
fs
cmp
mov
mov
call
cld
jb
sbb
dec
pop
inc
mov
ret
mov
test
iret
popa
fiaddl
jne
cmp
xchg
es
inc
inc
mov
mov
roll
aam
xorb
stos
dec
push
jecxz
popf
lds
clc
sbb
stc
das
or
dec
mov
xor
sbb
dec
jp
repz
mov
mov
xor
inc
or
push
mov
flds
movsl
cli
stos
push
xchg
pop
lcall
jl
popf
dec
add
testl
dec
pop
hlt
push
inc
std
out
in
outsb
add
push
loope
dec
sub
push
dec
xchg
imul
jno
stc
inc
mov
jmp
or
xor
sbb
lret
rcll
xchg
dec
xchg
pusha
mov
mov
bound
add
jg
cmp
popf
js
repnz
push
push
sub
fadds
push
xchg
ljmp
mov
dec
push
outsl
ljmp
in
cmc
dec
ss
dec
jge
int
xor
addr16
das
adc
out
int3
lcall
gs
loopne
in
mov
into
inc
fisubl
incb
cld
je
aad
ret
mov
andb
test
and
rcll
xor
insl
adc
adc
mov
loope
jecxz
or
mov
push
addl
into
loop
jmp
int
cmp
xchg
lds
loope
sbb
std
adc
sbb
imul
fistl
pop
push
fistpl
mov
mov
or
jnp
ljmp
push
sub
sbb
cmp
adc
or
pop
xor
mov
or
ret
fnstcw
popf
das
xchg
inc
movl
lret
lock
dec
int3
push
call
popf
sbb
dec
pusha
sti
xor
push
adc
push
xchg
sub
idivl
jg
aam
nop
pushf
or
ds
es
pop
mov
pop
out
pop
aaa
jg
jnp
push
idivb
xor
aad
test
inc
or
add
cmpsb
inc
out
adc
dec
testl
leave
jo
push
iret
jecxz
sub
rcrl
lods
ret
push
or
adc
inc
mov
pop
pop
sub
icebp
fs
xor
mov
sub
imul
fld
pop
in
lods
cltd
rorb
mov
cmp
enter
xor
xchg
push
enter
addr16
xor
cld
mov
xor
mov
mov
lcall
movsl
inc
cmc
mov
mov
push
addb
stc
or
nop
repnz
data16
or
cmc
jg
lea
imul
xlat
push
jge
jae
out
fnstenv
je
pop
popf
test
push
dec
adc
pop
add
lds
lds
xchg
enter
js
repnz
pop
dec
insl
cmpsl
and
pop
cli
or
or
out
stc
popf
lea
pop
aad
push
pop
aas
or
sbb
pusha
xor
inc
add
lock
jmp
ds
inc
mov
test
aas
sub
adcb
outsb
pushf
clc
and
jo
inc
insl
outsb
movsb
jno
pop
rolb
xor
clc
enter
out
out
mov
lcall
mov
push
dec
std
stc
inc
push
mov
into
repz
jnp
mov
pop
ds
je
sar
test
ja
jae
sbb
and
imul
pop
stos
cmp
push
jg
mov
or
push
jle
jecxz
iret
gs
arpl
out
in
xchg
stc
push
ljmp
daa
bound
gs
sahf
decl
into
xor
add
xor
push
cmc
stos
adc
ret
pop
push
lods
in
jne
fwait
jno
scas
xor
push
inc
mov
jne
mov
jl
popa
push
test
inc
pop
pop
xor
imulb
or
cmp
jmp
dec
adc
scas
addr16
sub
fcmove
mov
sbb
push
outsl
pop
jb
adc
inc
push
mov
jle
stos
push
outsl
cwtl
jp
loop
mov
aas
movsl
inc
mov
test
and
inc
xchg
and
inc
add
leave
iret
shl
adc
loopne
sarb
icebp
mov
push
mov
mov
jmp
cmpb
sbb
out
xchg
pushf
or
sub
jecxz
das
push
mov
shrb
xchg
out
incb
sbbb
sarb
and
sub
adcb
mov
fs
xchg
push
mov
pop
lds
adc
cld
mov
sbb
dec
cld
pop
or
sbb
pop
ds
cmp
fwait
mov
bound
push
lock
fdivr
sub
lret
mov
imul
das
mov
jecxz
fwait
or
mov
push
xchg
iret
rorl
push
rcr
add
pop
xchg
push
and
cmc
sub
lods
out
push
sarb
add
aas
inc
aaa
jbe
jo
pop
out
cmp
mov
adc
and
pop
push
and
call
mov
sti
pushf
cmp
cmp
hlt
push
aaa
dec
push
jb
cmc
mov
xchg
push
dec
xor
jg
rcr
xchg
inc
paddusw
sub
pop
pop
movsb
andb
imul
lods
xor
mov
push
xchg
jbe
or
xchg
inc
lcall
mov
inc
sbb
mov
sbb
test
nop
ret
or
imul
movl
mov
sbb
push
pusha
xchg
inc
dec
in
push
fldl
or
push
mov
das
push
icebp
mov
lods
std
mov
aam
mov
pop
dec
cwtl
adc
jno
into
jnp
or
in
adc
or
inc
shlb
jnp
xchg
lock
push
jb
jae
pushf
clc
mov
nop
or
mov
lea
push
gs
stos
mov
dec
les
jl
and
movsl
xchg
repz
sti
js
fs
fs
cltd
lods
sub
sahf
inc
bound
cmp
mov
xchg
leave
jecxz
xor
dec
je
xchg
mov
and
outsl
int
add
inc
arpl
lods
in
push
faddl
bound
mov
ljmp
inc
cmp
adc
mov
subl
imul
stos
mov
mov
push
test
test
sbb
add
int3
pop
inc
into
xor
ret
xchg
mov
stos
lret
sbb
mov
je
lea
push
sub
fwait
mov
cmp
mov
outsw
cmp
adc
or
test
loopw
mov
xlat
aas
jle
dec
mov
pop
push
push
adc
or
ds
lock
jmp
and
and
in
outsb
mov
cld
xor
outsl
loopne
xor
xchg
fists
mov
mov
call
outsb
add
add
jne
cmp
popf
in
or
push
mov
add
or
push
adcl
sub
jge
insl
faddl
aaa
jecxz
repnz
or
mov
mov
sbb
scas
cmp
xchg
ret
push
xchg
shll
and
and
fwait
insb
sub
shl
jecxz
cltd
mov
or
movsb
push
xchg
add
test
leave
pop
xor
addr16
inc
fwait
jb
mov
shr
addr16
sahf
jmp
pop
dec
in
jo
dec
or
xor
negl
lods
xchg
mov
mov
pop
fwait
sub
iret
mov
xchg
jg
add
push
cmp
fsubs
aaa
out
cwtl
add
sbb
lods
int
xchg
mov
faddl
not
testb
push
loop
lock
or
sbb
enter
jl
or
push
sbb
aaa
adc
sub
gs
cmp
in
xchg
or
pop
mov
clc
inc
and
push
mov
pop
mov
sub
sbb
scas
push
xchg
insl
iret
adcb
aas
mov
jl
xor
jae
mov
data16
loope
mov
push
repz
inc
int3
lret
xor
adc
sub
pop
in
stc
iret
ss
cmp
sbb
aas
mov
dec
cmp
push
shrb
push
nop
xchg
outsb
sbb
lock
push
int3
addr16
sub
divb
popa
popf
mov
cmc
test
push
push
loop
shr
lcall
int3
mov
mov
mov
repnz
add
out
js
orb
out
enter
in
mov
push
xor
add
jbe
ret
jg
adc
pop
cmp
push
ret
idivb
pop
pop
or
pop
div
jne
lcall
cmc
mov
mov
xchg
fisubrl
lock
xlat
jp
inc
mul
out
into
out
outsl
stos
jmp
pop
adc
inc
bound
pop
push
shll
push
push
inc
and
int3
mov
hlt
cmp
call
lret
imul
lahf
int3
mov
daa
nop
fcomps
push
adc
sbb
add
mov
test
outsl
outsb
add
cmp
aas
cmp
jnp
cli
int3
sub
lds
loope
sub
pop
es
mov
cmp
out
xchg
test
fs
mov
mov
xor
repnz
jo
dec
fldt
jo
test
dec
test
lahf
and
imul
xor
mov
insl
mov
int
xchg
out
cmc
faddp
xor
aas
dec
test
add
mov
lock
cmpsl
arpl
movsb
cmp
stos
addr16
or
shll
movl
dec
push
das
outsb
int
adc
out
into
mov
hlt
mov
cld
xchg
loopne
xor
movl
and
nop
rcrb
lock
xchg
push
bound
or
test
repz
add
outsb
pop
push
inc
jno
adc
das
xor
sbb
push
xchg
pop
adc
rorl
xchg
cltd
cmp
in
sbb
cmp
mov
xchg
and
sahf
sub
bound
rcr
add
sbb
jno
lret
adc
sub
xor
stc
mov
mov
ret
cmp
popf
push
cmpl
or
mov
sub
xchg
addr16
out
jae
push
lcall
imul
sbb
xlat
mov
inc
aam
jno
pop
int
into
scas
hlt
push
dec
sub
inc
add
test
dec
xchg
aad
movswl
sub
insb
shrl
jl
cmp
add
sub
hlt
jae
subl
mov
addr16
fidivrs
and
xchg
dec
dec
jae
icebp
pop
stos
adc
gs
jle
push
push
lock
xchg
popa
mov
mov
stos
xor
xchg
sub
mov
pop
nop
cld
add
push
aad
loopne
stos
pop
repnz
mov
loopne
ret
std
add
xor
adc
sub
jno
or
xlat
repz
scas
pop
ficomps
adc
xor
push
or
sbb
pop
add
lahf
cmpsl
dec
ret
inc
push
mov
lock
jp
aas
sub
mov
xlat
inc
div
cmp
xor
lds
paddd
jns
insl
ret
imul
xchg
dec
push
adc
xchg
lea
popf
push
rcr
mov
int
jp
into
movb
dec
lcall
dec
sahf
xchg
aam
out
add
xlat
inc
orb
cmp
xlat
test
adc
dec
int3
adc
addr16
mov
out
je
mov
inc
mov
call
bound
aam
fdivrl
mov
dec
sti
fcmovbe
xor
pop
or
or
add
cmc
iret
cli
ret
fisttpll
jge
fidivrs
enter
cmpsb
shll
dec
and
enter
xchg
ret
mov
jns
test
lods
in
push
lds
mov
jg
mov
imul
jle
addr16
pushf
cltd
or
push
in
dec
mov
push
mov
and
ss
cmp
mov
ds
xchg
bound
outsl
mov
jae
jmp
mov
sti
pop
lret
sub
jecxz
dec
mov
pop
cwtl
adc
jae
push
mov
mull
mov
mov
mov
aam
shlb
je
xorl
clc
pop
loopne
outsb
push
mov
outsl
mov
dec
jge
hlt
inc
enter
rclb
mov
xor
aas
dec
xor
addr16
imul
cltd
adc
dec
popf
adc
jnp
int
mov
sub
pop
int
and
fs
cmp
dec
hlt
lea
in
ss
cld
xor
ds
jge
push
scas
lahf
xchg
and
jno
ds
inc
jg
or
pop
cmpsb
adc
xchg
jnp
mov
hlt
mov
inc
or
shrl
or
stos
fldenv
xchg
and
add
xorb
mov
lods
cmp
cmp
aad
xchg
inc
roll
dec
pop
or
iret
xchg
xor
xor
sbb
mov
xor
push
sti
aaa
or
enter
stc
cltd
insb
repnz
fcomip
in
pop
cmp
sub
and
mov
mov
jnp
inc
movsl
notb
pushf
and
inc
int3
adc
xlat
inc
lcall
enter
xor
ds
push
push
fbstp
inc
jmp
xchg
ss
sbb
popa
jae
fidivrs
add
movsl
fwait
and
rolb
sub
idivl
out
and
scas
push
sub
xchg
or
fstps
leave
out
inc
into
je
imul
cmp
push
dec
xor
ficoms
xor
and
movsl
dec
in
xchg
add
orb
ss
push
push
or
jecxz
je
dec
sti
cmc
mov
lods
jb
insb
loop
cmp
stc
cmp
jge
mov
mov
sub
js
stos
inc
shl
xchg
cltd
push
dec
pop
shll
js
pop
rclb
pop
in
gs
jge
inc
dec
pop
movsl
xor
test
sbb
sub
sbb
sub
sbb
push
push
leave
mov
or
test
pop
mov
xchg
cltd
lret
testl
sub
and
adc
mov
mov
xor
mov
pop
dec
pop
pop
enter
sbb
jle
add
out
inc
xor
out
push
cli
lahf
arpl
dec
add
into
mov
xchg
cmpsb
les
mov
pop
sahf
call
push
or
sahf
lods
push
cmp
out
dec
sbb
decl
and
leave
incb
fwait
add
xor
mov
xor
repnz
xor
out
stc
push
adc
shlb
sbb
sbb
int
sub
dec
push
add
lds
add
pop
xchg
cmc
leave
lods
das
stos
scas
addl
loop
fwait
jmp
dec
add
aad
fcoms
or
shrb
jbe
outsb
xor
stos
repnz
mov
mov
xchg
inc
lret
jo
dec
xlat
outsl
adc
sbb
fistpll
or
jmp
dec
imul
jmp
dec
pop
fists
and
xchg
ret
mov
mov
adc
mov
sbb
bound
sub
shrb
scas
mov
aas
pusha
rcl
and
les
mov
inc
cmp
dec
lds
fcoml
xor
scas
sbb
mov
loopne
cmp
sub
xchg
and
cmpsl
add
jp
mov
push
out
cld
sbb
gs
cltd
loop
push
mov
push
push
pop
popa
cmpsl
in
addl
mov
mov
mov
add
mov
dec
jp
cs
bnd
sbb
jno
negl
dec
loop
in
jno
adc
and
andb
mov
inc
ror
mov
mov
add
push
jno
mov
mov
dec
scas
out
repz
popf
scas
ja
adc
jmp
jnp
imul
xor
aam
popa
xchg
mov
fstpt
push
xor
sub
fiadds
fdivs
jle
cmpsb
cmc
mov
push
shll
cmc
inc
mov
sbb
pop
dec
out
jge
inc
mov
adc
jnp
outsl
xchg
aad
xchg
fwait
xorb
mov
push
add
test
sahf
or
mov
jo
dec
and
sti
xchg
and
mov
jbe
xor
test
out
pop
add
data16
lock
inc
lret
dec
clc
lods
fcomps
inc
loopne
xor
sarb
popl
mov
repnz
test
inc
sbb
stc
jne
data16
and
sbb
in
arpl
pop
jne
jbe
lods
stos
das
jae
ficoms
mov
int3
mov
dec
sub
scas
mov
ret
cwtl
mov
lock
les
add
imul
pop
pop
inc
push
inc
push
in
int
sub
sub
and
hlt
sbb
dec
push
lds
data16
xchg
cmc
pop
mov
dec
iret
js
fstpt
into
enter
and
jp
roll
mov
and
repz
xchg
dec
mov
inc
cld
out
push
xor
push
dec
cmp
add
pop
divb
rolb
sti
dec
inc
fmull
fsts
out
inc
mov
mov
mov
sbb
push
dec
lcall
mov
or
fs
dec
imulb
dec
add
adc
test
shlb
fnstsw
movsb
mov
cmp
mov
imul
push
je
inc
mov
mov
or
testl
lock
arpl
scas
cmp
nop
xor
out
dec
fs
lret
subb
or
add
cmp
sbb
ljmp
lea
test
icebp
jbe
push
add
xchg
aam
ljmp
or
jl
push
fstpl
add
cmp
add
mov
jbe
cmpsl
push
inc
pop
cmpsl
adc
xchg
orl
stos
outsl
pop
sub
and
aaa
lcall
cmp
mov
lea
push
or
xor
add
pusha
out
adc
inc
insb
ror
push
pop
push
jge
fwait
movsl
cmp
adc
fadds
call
dec
dec
xor
cli
rcr
xor
or
pop
sbb
in
popa
aaa
insb
lock
dec
inc
mov
push
mov
pop
cld
lock
lock
ja
push
sub
fcoml
jge
lea
inc
and
das
cmp
stc
sarl
popa
mov
inc
addl
adc
insb
aaa
repz
mov
or
rep
test
mov
mov
mov
test
movsl
pop
stos
lock
cmp
repnz
stos
scas
sti
out
aas
pop
repnz
fiadds
in
adc
call
ja
pusha
nopl
gs
aad
leave
cmpsl
into
pop
sub
push
add
cmp
sub
sbbl
hlt
push
dec
or
shrb
in
fwait
mov
pop
jg
insb
add
lods
imul
mov
or
jecxz
fcomi
dec
xor
pop
adc
jge
push
int3
bnd
push
jb
pop
dec
mov
aaa
movsb
push
es
int3
or
cwtl
repnz
mov
adc
inc
call
sub
roll
mov
les
lods
jg
lock
shl
pop
stos
ljmp
outsb
cmp
call
fmuls
ret
loope
and
int
pushf
loopne
inc
jb
jmp
sbb
xchg
cmpsl
sub
cmc
sarl
mov
sbb
pop
push
add
or
push
ds
adc
scas
rcr
adc
xlat
cmp
test
mov
stos
push
ja
xchg
mov
dec
sbb
push
repnz
add
ret
je
mov
popa
xor
push
jp
mov
dec
sub
adc
je
jbe
xchg
adc
mov
adc
jno
xor
lods
call
adc
inc
out
mov
sti
aaa
mov
fbstp
mov
ret
rcll
add
xchg
mov
cli
pop
mov
mov
jmp
push
jge
loopne
or
xchg
scas
jo
sbb
sub
mov
icebp
lock
test
mov
or
fistpl
push
and
ret
outsl
stos
xor
mov
addr16
out
les
insl
in
sub
xlat
pop
jns
push
dec
mov
inc
pop
sbb
mov
cltd
inc
hlt
inc
fstpt
loopne
add
out
into
and
stos
add
aas
jne
push
ja
adc
stc
and
mov
lahf
enter
shl
adc
fstpt
lea
lods
mov
mov
and
out
and
aas
scas
outsb
inc
xchg
inc
push
dec
push
add
lds
inc
xchg
cmc
or
mov
sub
int3
mov
mov
cmc
adc
imul
jecxz
add
adc
jns
jp
lret
adc
sub
lods
pop
mov
inc
add
jp
mov
mov
push
scas
aad
mov
ja
or
push
cmp
jae
enter
lock
jecxz
and
jbe
fwait
mov
sbb
or
cmp
cmp
sarb
mov
mov
mov
into
aam
jnp
or
iret
rcll
dec
jp
outsl
pop
adc
mov
clc
jb
mov
lret
imul
inc
or
scas
lds
push
ret
mov
or
repz
fs
sub
cmpsl
das
mov
in
cmpsl
test
mov
arpl
fnsave
je
jecxz
divb
lea
xor
pop
or
call
jmp
sub
jecxz
add
xchg
addb
inc
mov
sbb
loopne
jmp
mov
jecxz
mov
jo
mov
jb
adc
fidivrs
scas
sub
mov
fs
pushf
sarl
mull
jno
pop
dec
and
jns
into
push
fsubs
cmc
inc
or
cld
adc
in
lods
orb
cmp
in
jo
sbb
mov
add
fdivp
stc
insb
sbb
mov
cmp
cld
cmc
jnp
mov
shll
pop
mov
xlat
or
jecxz
shl
iret
adc
and
sub
outsb
inc
insb
sbb
lret
enter
cltd
pusha
add
push
mov
pop
outsl
call
pushf
fst
mov
pusha
testb
jge
pop
cli
rclb
pop
div
popf
imul
imull
fdivp
fwait
int3
iret
cmp
fucomp
mov
sub
push
cmpsl
pop
jecxz
xor
adc
into
adc
push
mov
leave
pop
ds
mov
movsb
sbb
mov
bound
fbstp
cmp
outsl
imul
push
gs
xor
mov
orl
dec
xchg
cs
xchg
arpl
mov
sub
push
jle
test
pop
xchg
imul
and
shrl
frstor
loopne
and
xchg
popa
mov
pushf
and
pop
stos
or
jg
push
sahf
push
std
in
hlt
sahf
fwait
out
sbb
int3
pusha
idiv
in
ja
mov
inc
rorb
stc
push
lds
mov
adc
jae
fsts
xor
stos
ret
or
popa
stc
fisttpl
das
iret
ds
dec
int
and
jo
sub
dec
mov
push
xchg
adc
mov
xor
mov
aam
daa
dec
cmp
dec
mov
xchg
leave
rcrl
push
ds
mov
lds
scas
ret
int
mov
insb
jns
push
inc
and
std
inc
scas
add
cwtl
clc
in
adc
fnstsw
or
lcall
nop
clc
ret
fcmovne
inc
movsb
insb
sbb
ss
push
iret
pop
aad
icebp
mov
inc
in
pop
add
jmp
or
sbb
call
pop
add
sbb
test
xchg
jle
jne
ds
mov
aas
cwtl
mov
and
popf
mov
lods
push
outsl
mov
push
mov
imul
sub
clc
testl
push
nop
adcl
xor
push
nop
icebp
scas
add
jp
xchg
repz
mov
test
test
pop
mov
fldcw
jmp
roll
xchg
in
je
mov
icebp
stc
or
hlt
pop
test
jb
insl
jb
mov
ds
or
call
mov
aaa
push
in
or
sub
and
jmp
into
sbb
inc
stos
out
add
fisttpl
mov
sbb
jge
push
scas
xor
or
cmp
inc
and
ja
push
or
ss
lahf
mov
scas
add
xlat
push
jl
xor
lret
gs
hlt
aad
sbb
sarl
xor
std
lods
mov
sahf
push
sbb
sti
mov
cmc
rcrb
mov
mov
lock
hlt
sahf
aas
mov
jmp
ljmp
shld
and
in
inc
loope
cmc
sub
rcr
cwtl
or
push
movsb
pop
in
je
cmpsl
cld
mov
es
xorl
push
lret
sbb
inc
add
jge
daa
cwtl
lods
mov
xor
xor
add
xchg
lret
mov
add
jecxz
inc
adc
lds
add
jle
sbb
enter
aas
rorb
rorb
mov
sbb
arpl
jg
aaa
pop
sub
inc
and
jle
add
movsb
jbe
xchg
leave
nop
mov
aaa
pop
shlb
loopne
icebp
jbe
lea
add
sarl
fwait
lods
popf
fwait
inc
pop
call
inc
orb
pop
cmp
push
loopne
std
aad
inc
ret
mov
sbb
jnp
arpl
xor
rcrl
scas
jo
push
out
and
test
push
mov
neg
mov
in
stos
add
divl
and
jo
add
hlt
or
dec
repz
stos
shlb
out
fdivl
movsb
jecxz
jb
jb
add
xchg
xor
lock
scas
push
ja
movsb
pop
mov
scas
std
cli
push
out
loope
pop
sub
cmp
mov
sarl
outsb
fs
pushf
pop
mov
and
test
in
and
loopw
or
in
pop
daa
aad
cli
int3
aaa
jle
into
jns
movsb
sub
push
sahf
mull
cmpsb
cmp
rolb
shll
cmpsb
and
into
xchg
test
add
add
mov
insl
jge
int
mov
xchg
mov
or
push
popa
mov
push
test
ja
mov
jl
outsl
int3
push
fimull
push
stos
and
dec
dec
adc
subb
dec
jb
add
fadd
sub
xor
and
cmp
ljmp
jae
es
int
pop
sbb
insl
shrb
xor
mov
cmc
push
imul
mov
mov
inc
and
adc
push
add
sbb
mov
cmp
adc
inc
in
jmp
stos
mov
dec
jbe
incl
add
xchg
dec
jns
sub
loop
addr16
shll
or
test
mov
sbb
lock
jecxz
add
into
and
sbb
mov
pusha
jecxz
outsb
aad
pusha
into
outsb
or
outsb
je
push
xchg
mov
xor
out
xor
xor
addb
add
loopne
xchg
test
inc
rcll
push
xor
cmp
push
add
lcall
clc
xchg
mov
repnz
cmp
into
ret
js
sbb
aas
sub
leave
das
loope
aaa
cmp
lcall
ret
jne
sbb
mov
lea
xor
sbb
cltd
mov
out
pop
sub
pop
clc
rep
icebp
dec
pop
ret
and
int
cmp
sahf
add
loope
outsl
sbb
dec
add
inc
push
popa
ficoms
xchg
add
hlt
in
fadds
push
xlat
jb
sbb
mov
lret
dec
in
jo
xchg
mov
push
cmc
icebp
pop
jno
jb
repz
push
and
add
cmpsl
jo
popf
rolb
into
and
xchg
sbb
jge
sub
or
popa
hlt
push
cld
inc
fs
je
jl
out
adc
sbb
cmp
jp
or
enter
lods
arpl
test
push
xlat
cltd
lds
lret
rdrand
push
push
jl,pt
add
out
icebp
push
adc
cmp
enter
add
or
fisttpll
mov
adc
or
ss
test
out
xchg
pop
and
popa
mov
movsb
push
add
pushf
hlt
fimuls
leave
mov
and
sbb
xor
lods
fidivs
roll
repz
test
in
pop
add
jle
testl
mov
mov
bound
or
out
shl
fstpt
cltd
push
jmp
pop
sti
decb
dec
mov
and
aaa
test
bound
das
jo
xchg
pop
pop
push
outsb
and
pop
ljmp
sahf
jle
ljmp
popf
add
or
add
add
cli
movsl
repz
push
in
and
or
or
es
aas
test
mov
jno
xor
mov
test
adc
mov
out
vpsubusb
ss
jle
inc
and
jb
out
and
pop
jnp
xchg
lcall
sar
push
xchg
dec
cmp
mov
xor
fs
das
stos
or
adc
sub
int3
test
push
sub
popa
jnp
and
sub
ds
jae
jge
fstl
adc
mov
pop
seto
test
arpl
in
leave
aad
mull
cwtl
adc
cli
stos
mov
lcall
inc
mov
das
xlat
jl
lock
sub
sbb
addb
push
test
mov
fiadds
ds
sbb
jecxz
add
adc
xchg
push
hlt
fisttpl
int3
dec
xchg
jl
pop
ja
popf
push
jg
jp
or
sub
push
imul
scas
mov
push
in
jp
fldt
sbbb
mov
and
sarb
xor
cmp
fnstenv
movsb
aas
dec
shll
sub
out
stos
data16
xor
ljmp
aad
es
mov
repnz
xor
mov
notl
mov
sub
cmp
stos
xchg
lret
mov
xlat
movsb
cmc
test
jg
cmp
das
aaa
pop
mov
stos
add
lea
popa
ret
shll
int3
jmp
cmp
cs
repz
xor
lret
pop
into
jo
ja
jmp
aad
es
lods
or
pusha
sub
or
mov
inc
in
mov
pop
jne
fstpt
cmp
push
or
inc
addb
add
jmp
jae
mov
nop
and
xchg
jl
loop
enter
jmp
xlat
pop
mov
aam
or
and
int
out
popf
hlt
jne
shll
sub
or
mov
cld
inc
jb
jg
fnstenv
out
push
and
add
adc
bound
fdiv
xchg
rol
push
je
jno
arpl
gs
fsubrs
add
push
test
nop
in
xlat
sbb
mov
sub
bound
shrl
pop
outsb
inc
mov
inc
cmp
fnstsw
xor
fcom
daa
in
pusha
xchg
and
dec
in
xchg
mov
dec
xchg
stos
orl
pop
mov
lea
sub
or
pop
xchg
pop
mov
jo
push
daa
mov
add
push
xchg
insb
mov
adc
addr16
imul
rcll
xchg
sub
adc
dec
xor
lds
test
xchg
pop
test
daa
les
pop
dec
int3
das
loope
push
cmp
inc
loopne
adc
out
cmp
fsincos
xor
push
test
push
sbb
test
add
stos
std
in
mov
cmp
movsl
in
leave
sbb
stos
jp
iret
push
hlt
pushf
inc
test
shl
out
push
cmc
mov
sti
stos
fs
xchg
je
jns
loopne
add
popf
jb
repnz
test
fs
jae
jl
inc
sub
mov
cmp
adc
mov
insb
push
fsubrl
mov
hlt
pop
fnstsw
lret
scas
mov
inc
dec
push
jmp
roll
sbb
and
pop
mov
mov
in
sbb
data16
sub
xor
jns
jle
push
mov
roll
mov
mov
adc
sbb
lcall
inc
mov
xlat
imul
bound
stos
or
ljmp
aaa
fsts
fsubrs
push
cli
popf
decb
xor
pop
xor
push
pop
mov
jnp
dec
mov
dec
popf
js
cmpsb
bound
push
ds
or
cmpsl
xor
sarl
sub
inc
ja
loop
mov
xchg
lcall
and
mov
and
imul
cmp
jle
in
dec
jl
les
xor
je
cmp
mov
inc
lea
jbe
lods
es
or
sub
sub
mov
iret
push
dec
std
hlt
sub
xor
or
xchg
data16
and
icebp
adc
dec
in
cltd
xor
jmp
pop
and
movsl
ds
jl
cltd
adc
sub
mov
cmp
dec
sysenter
push
push
push
xor
adc
cwtl
lock
pop
xor
xchg
cmp
pop
xchg
mov
jae
mov
add
pop
fbld
cli
or
je
inc
pusha
fisttpll
add
sub
push
scas
movsl
mov
ljmp
cmp
add
or
int
notl
add
iret
mov
pop
nop
mov
cli
in
jno
pop
inc
and
add
jmp
orb
gs
xorb
bound
push
xor
pop
test
mov
lret
sbb
outsl
or
fwait
pushl
cmpsl
jl
jge
cmpsl
lcall
dec
imul
test
aaa
test
scas
mov
pop
mov
lcall
lock
shr
pop
add
mov
cmpsb
into
lahf
lea
mov
pushf
cmp
pop
push
adc
pop
lahf
aaa
mov
push
mov
push
imul
pop
lret
push
sbb
repnz
testb
mov
loop
sub
adc
cmp
mov
cmp
cmpsb
into
cwtl
cmp
fstl
jg
push
adc
mov
pushf
in
fcomp
es
js
inc
pop
inc
sbb
loopne
mov
lock
fdivrl
shlb
repnz
lds
stos
push
or
es
cltd
mov
int
mov
jp
xchg
jecxz
pop
pop
pop
or
add
mov
stos
and
dec
jno
lock
gs
insb
cmpsl
sti
into
push
adc
roll
xchg
push
clc
inc
roll
xchg
sbb
or
jle
cmp
jg
sti
sub
arpl
sahf
cltd
mov
and
in
push
mov
scas
ret
jl
sub
mov
push
adc
push
xchg
sbb
enter
call
push
xor
rorb
repnz
xchg
repz
lea
es
fdivrs
and
jo
pop
testb
mov
popf
shr
js
addr16
loopne
roll
iret
enter
xchg
jno
mov
push
decb
adc
fdiv
xchg
inc
mov
mov
and
jp
js
adc
mov
xchg
mov
adc
popa
es
pop
cmp
xchg
mov
mov
push
pop
movb
in
mov
fsubrl
cmpl
test
jmp
movsl
xchg
jne
mov
adc
outsb
loope
adc
or
push
mov
push
xor
out
negb
in
inc
popa
or
xlat
inc
xchg
fiaddl
cmpsb
push
push
xchg
jecxz
dec
mov
xorb
cmp
mov
lcall
xchg
xchg
and
faddl
repnz
lock
idiv
int
shll
leave
dec
or
sbb
add
test
pushf
cmp
mov
out
daa
mov
inc
mov
xor
and
jp
cmp
jp
fstpt
pusha
push
sub
jne
into
adc
arpl
out
mov
popf
mov
mov
lock
xor
jge
out
data16
outsl
and
fmull
std
dec
cmpsl
push
and
insl
jb
jno
stc
mov
dec
rclb
push
fldcw
xor
mov
add
add
push
ret
lods
mov
aaa
imul
fldt
cmp
scas
sbb
add
adc
add
inc
dec
mov
jle
mov
in
and
sbb
xchg
and
shrl
fimuls
sub
stc
rol
sbb
mov
sbb
cli
ror
mov
subl
in
or
cmp
out
fs
cld
dec
cwtl
lods
ror
jne
and
scas
pop
inc
lods
mov
scas
cs
mov
mov
popf
int
rclb
cmp
push
mov
cmp
pop
pop
mov
lods
pop
add
dec
sbb
add
dec
jns
addr16
inc
push
out
das
dec
push
pop
test
fwait
and
jle
ror
jns
mov
div
hlt
xchg
insl
mov
insl
mov
sub
mov
mov
jge
jle
mov
add
or
jnp,pt
dec
xor
shrb
sti
adc
ja
int
cmc
fcomip
outsb
mov
das
jbe
inc
sub
cmp
imul
and
or
lods
test
and
mov
pushf
loope
inc
mov
loop,pn
pop
out
leave
fwait
bound
loope
inc
push
in
pop
xchg
mov
rcll
rcll
in
mov
adc
cltd
cmp
mov
jbe
adc
mov
andl
push
mov
sahf
ljmp
sub
clc
mov
push
pop
xchg
sub
pop
aam
push
js
into
pop
pushf
mov
mov
add
loop
in
fisubrl
int
and
pop
or
mov
inc
mov
mov
mov
jbe
popf
sub
push
ljmp
imul
stos
jne
dec
lea
rcll
into
cmp
les
pop
stos
orl
movsb
hlt
sub
and
iret
insl
in
fildll
lret
cmc
addb
and
out
dec
sub
ret
mov
push
pusha
pop
xor
push
lock
testb
dec
inc
mov
daa
mov
inc
sub
addr16
push
pand
movsb
ret
xor
xor
cmp
mov
cli
cmp
pop
push
or
popa
pop
je
pop
pop
mov
js
mov
out
push
push
and
jl
cmp
cmp
dec
xchg
dec
inc
cmpsb
stos
lret
push
dec
ja
aam
divb
xor
fwait
mov
lahf
daa
arpl
test
fs
cwtl
xor
cltd
xchg
jecxz
mov
lods
cli
cmp
mov
mov
js
or
sub
pop
jmp
cmpsb
dec
cwtl
lcall
lcall
inc
mov
jl
cmp
push
adc
jecxz
cltd
and
cmp
test
lock
loope
ss
dec
adc
mov
jno
pop
fnstcw
dec
pop
test
and
push
into
adc
or
push
xor
add
adc
popf
scas
outsl
loopne
rcrb
mov
clc
or
filds
add
clc
cli
roll
icebp
xchg
imul
imul
jbe
cmp
sbb
in
movsl
jle
mov
jo
sbb
cmp
or
bound
jno
gs
daa
sbb
jmp
mov
idiv
or
into
mov
lock
mov
sbb
or
dec
out
cmpsl
testb
rolb
push
xor
or
jg
jnp
mov
enter
inc
jl
loop
mov
inc
push
ficoms
icebp
lods
mov
sub
fbld
fsubs
jl
fbld
xchg
inc
and
mov
test
inc
lcall
repnz
cmpl
scas
mov
dec
das
mov
jg
jae
dec
shlb
jb
mov
out
out
sub
test
xor
add
stc
imul
sbb
pop
test
movsl
and
xor
xor
mov
add
clc
push
jmp
dec
adc
ds
and
dec
mov
xor
lcall
jg
push
out
cmp
mov
inc
mov
and
pop
orl
ss
push
pusha
pop
xchg
xchg
mov
test
test
test
jne
or
cmc
fmull
cmp
popf
jp
cld
push
mov
sub
dec
sub
call
xchg
movsb
ret
int
stc
fidivrs
rorb
adc
outsl
xchg
cld
aad
mov
rol
jle
dec
orb
push
cs
cwtl
push
notl
scas
pop
add
xor
mov
call
sti
int
pop
testb
mov
push
mov
adc
pusha
enter
in
xor
test
adc
and
xchg
sub
mov
adc
cmp
addb
inc
icebp
bound
jg
jp
mov
mov
pop
repnz
lds
loope
lods
fwait
cmp
enter
jge
sbb
pop
mov
pop
int3
je
daa
adc
dec
stos
cmp
sub
iret
scas
lahf
xchg
mov
mov
cwtl
negl
faddl
lods
imul
insb
loope
xor
sub
inc
fisttpl
dec
ret
jmp
sbb
push
push
imul
sarb
xchg
mov
repz
mov
sub
cld
outsb
aaa
mov
mov
dec
jp
add
dec
mov
push
add
xchg
inc
xor
mov
or
iret
pop
fisubl
push
insl
xor
cld
repnz
xor
rcr
adcb
push
sbb
test
push
xor
icebp
or
lahf
dec
pop
stos
je
test
pop
add
scas
out
add
or
xor
adc
clc
mov
and
mov
into
pushf
jb
pop
test
push
sub
jle
iret
test
add
push
aas
call
xchg
jbe
popf
inc
xchg
cmp
mov
aam
das
mov
out
dec
subl
leave
insb
shll
imul
sbb
movsb
test
and
mov
clc
xchg
xor
sarb
sub
add
adc
scas
cmpsl
mov
push
daa
test
mov
dec
int
sub
out
add
lods
in
or
pop
and
adc
leave
sbb
or
xlat
ja
dec
mov
mov
xchg
jle
pop
xor
and
loope
inc
jb
fbstp
xor
jg
outsl
lds
test
out
shll
repnz
mov
mov
mov
lea
push
fsubr
inc
mov
sub
imul
mov
shlb
push
mov
or
adc
movsl
sahf
scas
inc
mov
imul
cmp
dec
push
ds
cmpsl
add
idiv
andl
gs
out
adc
mov
or
pop
dec
push
rdtsc
inc
test
ret
add
push
sbb
push
mov
cmp
sti
jg
dec
pop
mov
pop
fwait
sbb
outsb
mov
test
pop
mov
jns
out
ror
push
outsb
lds
push
adc
stc
push
or
add
cli
cli
loope
in
test
sbb
add
test
xor
sbb
sbb
mov
jp
int
pop
or
out
scas
cmp
addl
bound
decl
jle
push
repnz
push
jg
or
sti
sub
sub
insb
mov
call
cltd
or
pop
popa
mov
mov
push
pop
lahf
mov
popf
scas
xlat
std
cmp
xor
cmp
mov
lock
loop
das
and
arpl
out
daa
les
ljmp
cmp
out
lret
sub
orb
ficomps
jne
fwait
inc
jmp
dec
movsl
push
jno
inc
mov
lret
pusha
cltd
popf
xor
mov
sti
or
dec
mov
rol
dec
aad
andl
pop
mov
dec
insb
adc
repz
clc
in
pop
pop
xchg
shrl
cmpsb
add
mov
mov
xlat
sbb
and
dec
jg
cmpb
stos
jnp
sbb
ret
ret
xor
xchg
je
insb
loopne
negl
inc
mov
adc
pop
dec
scas
cmpsb
outsb
in
ficompl
std
subl
fidivrs
push
push
jne
incb
mov
sahf
pop
mov
rcll
jg
rcrl
es
fs
inc
inc
out
pushf
cwtl
xchg
push
sbbb
fcomps
cmpsb
js
xchg
fcom
fwait
push
and
ss
push
inc
outsl
xchg
ss
clc
popa
pop
rcr
adc
mov
je
dec
add
jne
mov
xchg
fiadds
jge
dec
or
mov
mov
push
xor
fnsetpm(287
cmpsb
add
pop
nop
rcr
pop
lods
xchg
cmpsb
sbb
dec
int
test
lahf
adc
and
in
cmc
mov
mov
outsb
pushf
adc
imul
mov
dec
popa
jae
pop
cmp
mov
out
add
or
daa
jecxz
in
mov
cmp
mov
imul
cmp
xor
add
shrl
and
stos
xchg
cmc
jge
inc
outsl
jg
mov
bound
jns
mov
mov
cmp
pop
jns
xchg
stc
jmp
ja
cmp
mov
ja
mov
dec
loopne,pt
call
icebp
mov
mov
jbe
inc
addr16
pop
mov
add
std
cmc
adc
xchg
fisttpl
fwait
cli
pop
lcall
and
dec
jp
push
jne
push
outsb
cmp
fistl
sub
sub
jae
sti
xchg
out
hlt
jae
fldcw
data16
popf
jno
repz
pop
outsl
iret
mov
and
mov
push
inc
lcall
fdivl
sub
sti
add
push
mov
add
les
lcall
inc
mov
stos
mov
cmp
ljmp
cmp
inc
sub
xlat
add
xor
xor
vpunpckldq
dec
jnp
loope
js
hlt
dec
cli
push
push
sub
aaa
jmp
jecxz
pushf
outsb
jle
mov
and
mov
sub
ret
and
or
rclb
mov
out
sbb
xor
inc
sub
xor
stos
data16
repnz
adc
scas
ret
mov
add
xchg
out
lar
push
lods
inc
adc
dec
mov
in
in
mov
xor
or
popf
aas
mov
mov
and
outsb
push
xchg
push
mov
and
pop
mov
cmp
sub
xchg
jo,pt
mov
popa
sub
sbb
jbe
pop
ss
test
dec
lret
ljmp
jb
das
scas
jb
leave
stc
push
cltd
lock
arpl
daa
mov
int3
fdivl
std
and
or
sub
out
arpl
leave
xor
out
push
std
cmp
in
orb
push
fistl
jge
xchg
jo
dec
clc
dec
jae
cmc
xchg
jb
nop
xlat
scas
cltd
sti
push
out
jg
cmpb
add
cmp
or
movsl
add
mov
rclb
fwait
pop
jg
iret
xchg
das
test
cltd
sub
test
std
lea
fucomi
or
sub
jnp
enter
xchg
push
cld
mov
and
mov
sti
call
mov
jle
mov
jle
dec
mov
rcl
cli
fistpl
xchg
and
mov
lahf
and
sub
jo
aad
cmp
ja
add
add
mov
enter
mov
std
gs
adc
xor
push
cmp
push
sub
faddl
mov
fnsave
movsl
pop
imul
idivl
or
ja
cmp
push
andl
std
loopne
hlt
popa
adc
pop
sbb
xchg
sub
mov
movsb
or
jne
repnz
notl
mov
mov
cmp
pop
cld
pop
jns
mov
int3
stos
cmpl
dec
jp
mov
jg
cmp
ss
pop
clc
sub
loope
aam
xchg
cmp
ljmp
shrl
xchg
mov
push
dec
mov
mov
fbld
ds
or
js
cwtl
add
cmp
mov
daa
dec
mov
int3
mov
fisubs
mov
daa
adc
sbb
cmpsl
shrl
mov
sbb
mov
dec
mov
cmpsb
test
and
add
shlb
repz
int
aad
stos
push
jle
add
push
mov
stc
pop
cs
mov
xchg
adc
shrb
test
sti
xor
ja
xor
pop
mov
lret
frstor
adc
push
out
jae
or
add
shll
xchg
xor
outsb
orl
fs
sbb
roll
out
xchg
lds
cli
jle
lock
push
and
arpl
mov
faddl
mov
cld
xor
mov
ret
movq
adc
xor
xchg
std
push
sbb
pop
sub
sbb
std
int3
mov
pop
mov
imul
icebp
mov
lods
and
scas
lock
mov
dec
dec
jo
push
imul
fists
add
fsts
jno
cmc
or
pop
subl
std
push
fwait
daa
ja
and
adc
outsl
rolb
pop
cmp
andl
adc
int
sti
lahf
and
and
xchg
jnp
and
leave
iret
stc
adc
test
xchg
imul
cmpsb
shlb
lret
xchg
or
lcall
xlat
xor
nop
xchg
and
das
outsb
outsb
lods
push
xchg
and
test
mov
clc
and
fwait
test
ror
jb
lds
scas
jp
clc
push
dec
aad
push
lret
dec
adc
dec
rcrb
mov
jnp
nop
mov
pop
lock
sarl
stos
inc
sub
cmp
adc
pop
cltd
cmp
xor
shrl
in
popf
ljmp
fucomip
mov
loopne
jns
inc
into
pop
pop
stos
ss
push
inc
jg
test
mov
push
int3
out
orb
mov
mov
mov
pushf
xor
push
add
pop
xchg
sbb
mov
mov
cli
mov
add
sbb
add
dec
xor
xchg
lret
mov
test
jno
push
arpl
stc
outsb
lea
cltd
iret
in
out
clc
mov
fs
dec
mov
jmp
call
aad
ds
orb
push
pop
inc
das
push
imul
mov
mov
outsb
pop
pop
mov
loop
sub
jl
cmp
lods
or
mov
mov
dec
jecxz
in
xlat
mov
pop
inc
out
das
out
out
xchg
ret
xchg
push
pop
sar
push
orb
and
dec
sarb
icebp
bound
cmp
popa
or
pop
push
int3
inc
push
push
jnp
push
stc
mov
mov
fmull
pop
outsb
add
gs
leave
mov
int
stos
sbb
subl
push
adc
cmp
js
push
fcoml
push
lret
bound
add
jg
cmpsb
xor
repnz
xor
sbb
cmpsl
inc
mov
push
dec
or
jne
pop
and
push
add
cmpsl
dec
ret
fbld
mov
mov
mov
jne
pop
in
add
imul
out
mov
inc
fisubrs
lret
push
dec
push
popl
mov
cmp
pop
inc
lods
hlt
mov
cmp
cli
xchg
cmp
jo
fs
stos
lahf
lret
ret
ja
inc
jno
xor
scas
add
sbb
outsl
ss
cmp
aas
xor
sbb
pop
cmc
xor
fsub
js
add
es
pop
divl
xchg
jno
cmpsl
fcos
decb
add
inc
cmpb
sahf
lock
jno
les
fdivrp
cmp
and
pop
sbb
icebp
inc
fisubrl
fisttpll
dec
bound
dec
subb
mov
push
movsb
add
push
fistpll
lcall
std
int
aad
sbb
fdivp
jmp
out
push
jae
in
xchg
mov
mov
bound
popa
loop
cmc
push
clc
fnstenv
cmpsl
fsub
loope
orl
test
mov
cltd
js
iret
jnp
clc
xchg
shl
aas
lea
xchg
jmp
fs
test
pushf
daa
cmp
sti
fcomps
xor
aad
cmp
xchg
or
out
pop
outsb
or
cbtw
jg
pushf
rorb
out
cmp
outsl
or
cld
adcb
jle
inc
mov
adc
pushf
call
je
dec
call
mov
inc
mov
test
xchg
mov
mov
std
sub
mov
cltd
ss
pop
and
popf
mov
and
testl
xchg
push
pop
pop
mov
lods
mov
movsl
pop
adc
pusha
rclb
adc
sbb
add
movsb
ss
fwait
test
dec
pusha
ljmp
cmp
loop
xor
cmpsl
popf
sbb
mov
pop
test
adc
test
mov
stos
imul
push
repz
pop
sbb
rclb
pop
pop
inc
ja
es
jno
shlb
cmpl
dec
out
xchg
and
cmc
out
out
jnp
loopne
jns
popa
fwait
cmp
lahf
jbe
pop
outsb
pop
out
inc
pop
jp
jbe
lret
add
in
and
jg
add
ret
data16
mov
sbb
inc
arpl
xchg
add
imul
mov
push
mov
aas
dec
mov
mov
sub
sub
push
nop
dec
test
cld
jo
adc
push
mov
lea
mov
adc
xor
push
push
dec
cltd
aas
add
in
fistpl
cs
stos
xchg
into
or
pop
adc
popf
lock
pop
inc
push
sahf
icebp
ss
ucomiss
rclb
jne
mov
dec
xor
iret
xor
pop
jl
movsb
lret
mov
pop
push
sbb
lods
inc
mov
dec
push
sub
ss
in
cltd
jmp
add
pop
fistl
jp
out
pop
popaw
movsb
xchg
and
fistps
mov
jno
or
add
xchg
imul
mov
xor
out
dec
adc
push
jge
xor
loope
push
mov
aaa
or
xor
movsb
pop
inc
aam
jge
xchg
jmp
popa
call
int
push
jge
cmc
adc
call
push
je
insb
loop
or
into
mov
sub
roll
negl
nop
gs
movsl
xchg
jg
sub
or
in
dec
xchg
mov
aas
movsb
popl
loopne
sub
stos
dec
jbe
imul
repnz
dec
mov
jle
aam
sahf
pop
jbe
sbb
push
xor
iret
lcall
cmp
repz
imul
pop
es
lds
sub
mov
cmp
mov
in
xchg
loope
sub
inc
mov
jbe
lock
jns
fistpll
sub
out
cmp
stos
addr16
inc
push
lcall
pop
pop
pop
add
or
fcoml
fnop
xchg
pop
ret
xchg
inc
push
cltd
jne
xor
or
pop
add
push
ja
dec
jg
mov
aam
stos
icebp
sti
sub
stos
cmp
sub
jo
mov
lock
pop
xor
mov
dec
ret
mov
xchg
imul
notl
rorb
push
mov
mov
mov
push
xchg
adc
inc
mull
sti
outsb
lret
adc
subl
dec
mov
into
popf
pushf
adc
mov
jae
xor
mov
xchg
clc
mov
pop
sbb
cmp
pop
jmp
pop
data16
xchg
loop
movsl
mov
je
mov
fcomps
imul
sbb
int
jbe
negb
imul
pop
dec
std
xchg
data16
mov
repz
dec
mov
dec
sub
addr16
mov
mov
mov
and
dec
jg
les
stc
jo
test
pushf
daa
test
jae
sarl
rolb
mov
dec
in
in
sti
cld
stc
mov
decl
clc
push
fnsave
dec
adc
pop
fisubs
fs
xor
andl
dec
lcall
mov
sub
dec
sbbl
out
sbbl
lds
leave
mov
push
test
pop
cmpsl
testl
cmp
fdivr
and
jg
arpl
imul
in
nop
pop
jle
shll
loop
popa
into
mov
stos
dec
frstor
push
lret
push
je
mov
fisubrs
jns
jp
fmulp
cmp
aaa
add
jl
fdivrs
aam
jp
or
inc
insb
xchg
jl
add
xlat
cmpsb
insb
and
aas
lahf
sahf
xchg
or
daa
push
xor
mov
xlat
jecxz
stos
into
fildl
pop
or
lahf
movsb
out
sti
push
xor
jecxz
icebp
and
mov
inc
out
jae
inc
or
and
push
xabort
mov
jmp
push
xchg
or
push
subl
int
add
leave
sbbl
ss
sbb
jp
repz
idivl
int3
clc
in
mov
sbb
outsl
inc
xadd
mov
pop
sub
mull
adc
pop
test
lods
test
jno
sub
lods
and
inc
sbb
fmuls
out
or
xor
ret
fwait
jp
dec
in
movsb
cmp
pop
mov
js
pushf
jmp
loop
lcall
data16
mov
shrb
repz
xchg
add
fidivrl
adc
in
out
cmp
cli
pop
leave
pop
jbe
sub
jge
fs
rcr
cmp
mov
jb
js
ja
mov
add
popf
in
andl
rclb
inc
fwait
test
test
outsb
out
and
or
sub
push
push
mov
mov
sub
xchg
jne
mov
xor
aaa
inc
iret
pushf
bound
out
pop
dec
lcall
add
hlt
ret
fwait
into
push
cmp
loop
cmp
js
push
inc
jnp
inc
es
add
ja
imul
fistpl
push
ret
movl
inc
and
stos
out
jp
inc
push
push
lods
xchg
stc
and
pop
jecxz
mov
out
xor
jnp
or
jge
in
or
mov
dec
xchg
xchg
xlat
and
push
outsl
in
pushf
pop
icebp
out
rorb
scas
xor
or
push
rcrb
and
pop
nop
inc
int
shl
xchg
push
pop
bound
mov
in
cmp
andl
add
mov
adc
js
cmc
xchg
pop
jo
fdivrp
loopne
stc
popf
jecxz
faddl
scas
mov
push
dec
lret
ret
lret
pop
jecxz
sub
push
scas
ss
pop
scas
lret
pop
test
bnd
xchg
and
testl
sub
mov
inc
movsb
int
push
or
repnz
push
out
pop
xorb
push
inc
js
cmp
xchg
push
cmp
push
scas
pop
cs
mov
in
cmp
mov
dec
pop
mov
xchg
stc
aam
mov
mov
ljmp
pop
sarl
sbbl
mov
insl
xor
adc
fbstp
or
inc
mov
loopne
jno
arpl
xchg
inc
xor
lahf
sahf
sbbb
push
pop
daa
xor
sbb
cmp
imul
sbbb
jno
jbe
pop
or
stos
jo
xchg
dec
fiadds
dec
int3
shlb
xor
rcr
sbb
push
push
mov
lahf
xchg
mov
loope
addr16
jecxz
bound
andl
and
push
insl
adc
mov
lahf
sub
shll
sahf
adc
stos
adc
test
add
dec
push
adc
xor
gs
add
out
enter
push
data16
insl
dec
enter
jne
je
pop
sub
fnstsw
mov
inc
outsl
insl
stos
les
cmp
lea
jbe
mov
and
popa
pop
jb
and
jp
mov
mov
jno
dec
movsb
dec
jb
and
shl
xor
cli
jecxz
scas
in
lea
out
or
sahf
mov
bnd
call
cmpsl
shll
cmp
jno
aaa
cltd
jne
cmp
mov
jne
loop
mov
pop
sbb
mov
push
jp
loope
cmp
pushl
out
gs
mov
ror
jp
adc
xchg
out
jg
sbb
sub
jl
cmp
mov
sbb
mov
rcrl
das
pop
int3
pop
test
add
xlat
pop
push
dec
push
and
xor
cwtl
and
inc
pop
jl
addr16
inc
or
sti
mov
add
ret
bound
jns
inc
iret
sub
aaa
jo
mov
mov
mov
add
adc
push
pop
in
sbb
nop
bound
in
ja
adc
sbb
fidivs
jbe
or
outsb
cmp
push
jge
xchg
mov
in
pop
sbb
mov
xchg
das
inc
sub
int
cld
fucomp
mov
movsb
inc
mov
dec
fmuls
push
and
fldl2t
dec
mov
mov
dec
sub
test
pop
jp
jno
cmc
out
out
pop
test
fwait
xchg
inc
mul
or
lds
xor
or
jg
lods
lds
fnclex
pop
je
repz
xchg
es
lds
fcompl
mov
in
sbb
xchg
roll
divl
mov
push
popf
adc
fcoms
mov
jns
mov
cmpsb
popf
sbb
addr16
ja
cmp
subl
push
in
das
imul
mov
xchg
loope
sbb
fs
mov
sbb
xorl
scas
cmpsl
movsl
mov
sbbb
mov
pop
and
clc
push
rolb
scas
lahf
mov
enter
les
cmp
out
popf
mov
rorb
or
andl
and
cmp
mov
jmp
rcrl
dec
jecxz
xor
lods
addr16
mov
mov
fstp
int
out
out
push
cmp
ret
in
push
adc
lahf
and
sub
mov
out
out
dec
mov
bswap
adc
mov
dec
xor
and
clc
scas
or
out
inc
add
test
adc
repz
or
mov
push
dec
mov
push
outsl
je
rorb
das
ret
aad
xchg
mov
ficompl
push
mov
imul
jbe
jge
jecxz
in
ss
popf
aas
lods
or
jb
sub
pop
mov
pop
bound
mov
mov
pop
pop
mov
inc
loop
cmp
cmc
fs
cmp
mov
mov
sbb
pop
mov
mov
mov
sub
mov
sbb
mov
movsl
add
lds
push
mov
bound
jbe
ret
into
push
mov
mov
sub
mov
fs
push
movsl
cmpsb
icebp
repz
and
sub
stc
cmp
scas
cmc
nop
stc
clc
sub
lods
or
in
jbe
sub
es
sub
push
mov
push
pushf
rolb
and
popf
mov
xor
add
das
sub
adc
lock
and
add
sub
mov
adc
decl
daa
out
cmp
inc
aaa
lcall
fxtract
scas
adcb
pop
iret
sub
ds
test
mov
inc
mov
jb
call
and
cmp
dec
aad
sub
mov
pop
dec
pop
sbb
cmp
int
lock
sbb
addr16
loope
ret
sbb
pushf
hlt
pop
push
cwtl
ror
stos
lods
sub
jbe
imul
or
cmp
leave
imul
insl
pop
shl
dec
cmp
fwait
sbb
rcrb
xor
pop
pop
dec
idivl
dec
insb
into
rclb
mov
mov
jmp
inc
gs
lcall
xchg
ja
sbb
sub
popa
push
dec
les
push
adc
jae
jle
sub
es
mov
mov
push
jno
cli
aam
int
movsb
ss
mov
inc
adc
es
adc
popa
sbb
sbb
out
shll
imul
push
dec
inc
test
cld
cmp
divb
test
dec
mov
pop
mov
jns
mov
aam
pushf
mov
gs
pop
mov
jno
cmp
std
mov
es
stos
mov
xchg
xchg
xchg
fistpl
rclb
mov
pop
mov
icebp
lret
pop
pop
pop
lcallw
mov
dec
jmp
cmpsl
inc
fs
jle
sarl
popf
es
and
push
push
dec
mov
sub
sbb
sub
fsubrs
push
ds
and
sub
out
adc
fldt
mov
sub
cmp
mov
inc
jno
mov
fimuls
shl
jge
outsb
mov
mov
pushf
mov
and
aad
mov
xorl
ss
jmpw
pop
add
enter
push
out
dec
xchg
ja
fwait
inc
mov
adc
arpl
sbb
fsubl
pop
and
xchg
pop
leave
bnd
jnp
jmp
out
pop
adc
stc
push
add
ss
jns
lahf
stos
ja,pt
js
xor
mov
fsubrl
lock
pop
sub
shll
cmc
push
dec
ja
mov
pop
rcl
scas
mov
push
mov
call
popf
mov
movsb
push
or
mov
dec
inc
mov
mov
cltd
movsl
les
jne
mov
bound
push
jo
push
sahf
adc
xor
rcl
cwtl
stc
in
push
mov
or
cmp
stos
mov
addr16
dec
dec
cmp
in
dec
movsb
shr
nop
pop
pop
imul
xchg
jmp
stos
lds
mov
fdivrs
push
aam
or
shll
js
adc
pushf
adc
test
out
push
push
dec
add
lcall
pop
jp
pop
pop
shrb
jp
push
out
fistpll
jnp
lds
push
and
mov
mov
mov
mov
fs
push
insl
and
cmp
iret
and
aad
or
adc
lock
fisttps
sahf
mov
stos
push
dec
lahf
or
push
test
or
or
arpl
in
mov
jns
xor
push
inc
mov
dec
xlat
dec
sub
scas
xor
mov
add
or
pop
dec
jb
in
pop
mov
in
or
jae
sbb
mov
xchg
enter
mov
cmpsb
js
test
cld
inc
sbb
jmp
mov
xchg
inc
jne
sbb
mov
addr16
jbe
add
xchg
fsubr
testl
iret
ss
adc
pop
sub
lock
stos
loopne
cmpsb
sub
inc
insb
push
fiaddl
shll
fiadds
mov
lahf
imul
sbb
jae
mov
lods
sti
stos
scas
fldl
sub
add
dec
js
cmp
cs
xchg
rorb
add
hlt
insb
or
cs
sbb
jge
add
mov
dec
fnstcw
cmc
out
js
stc
rcl
and
into
mov
or
sbbb
in
pop
xchg
cmp
jmp
fbld
mov
push
xchg
and
aad
orl
not
mov
insb
stos
cmpsb
mov
xor
psubsb
arpl
adc
push
roll
add
jae
imul
jb
pop
sub
outsl
cmpsl
fistl
out
and
push
addr16
mov
ds
out
cmp
xchg
cmp
stc
push
sahf
decl
fadds
and
inc
xchg
ljmp
push
fs
jecxz
inc
jl
jo
sbb
inc
jle
or
scas
adc
sub
into
inc
pop
jo
adc
rolb
mov
push
adc
jns
jns
jae
mov
fmulp
and
in
pop
ss
inc
lods
and
pop
mov
sahf
insl
data16
jo
mov
pop
iret
mov
stos
cmp
out
lea
or
adc
mov
sarb
or
fisubrs
mov
sbb
aad
mov
rcl
insl
negb
cmc
adc
pop
cld
aad
dec
arpl
es
pusha
add
mov
xchg
dec
mov
xlat
mov
das
fstpl
andb
imul
in
dec
mov
xchg
dec
es
jl
add
sti
and
inc
ret
push
jae
sub
test
push
rcl
xchg
lods
add
push
jo
jno
jbe
inc
sti
mov
test
fildl
adc
and
popw
cmp
sub
nop
fwait
ds
add
mov
xchg
xchg
dec
sbb
adc
inc
adc
mov
fisubrs
addr16
xchg
scas
in
xor
adc
sbb
jbe
mov
dec
adc
xor
mov
outsl
hlt
inc
cmp
movsb
out
sti
sbb
in
pop
and
and
loopne
pop
out
scas
sbb
sbb
or
in
imul
call
lcall
push
shll
dec
pushf
cmc
loop
gs
jns
pop
push
mov
addl
sbb
jnp
repnz
int
xor
push
mov
mov
xor
aaa
out
lahf
pop
push
ret
pop
sub
xchg
gs
push
mov
ret
adc
inc
pop
pop
ret
rcll
inc
sub
mov
mov
push
adc
jno
ja
inc
sub
lret
jmp
stc
repnz
lods
loope
mov
add
out
out
aad
push
mov
mov
pop
and
sbb
cmp
mov
ds
in
clc
ds
mov
mov
dec
push
xlat
popf
icebp
cmp
adc
scas
cmp
sahf
daa
or
rcrl
xor
jno
jb
dec
sbb
xor
pop
hlt
lahf
repnz
jle
push
jne
pop
loopne
push
in
jne
jo
sub
adc
cld
int3
or
lcall
or
lret
lea
jmp
imul
rclb
lea
fstp
push
adc
dec
stc
and
shrb
lods
sbb
movsb
fstl
jno
movsb
add
push
and
pop
sub
and
and
pushf
cwtl
ret
out
imul
push
popaw
fwait
jmp
movsl
add
dec
adc
mov
dec
loopne,pt
lcall
outsb
cmp
aas
jl
cwtl
mov
and
xlat
jno
inc
rclb
add
inc
mov
jo
out
out
fs
sbb
movsl
cvtpi2ps
mov
cmp
push
test
ret
xchg
inc
pop
mov
mov
jno
xor
ret
sub
pop
popa
fadds
addr16
insb
mov
ud2
enter
dec
xchg
rcrl
dec
jne
mov
lock
pushf
inc
jg
stos
adc
dec
or
inc
dec
in
in
dec
mov
xchg
jb
or
or
sbb
jg
xlat
xor
inc
stos
outsb
not
sub
incl
mov
icebp
lods
int3
addr16
sbb
jne
and
hlt
jb
daa
out
mov
push
mov
nop
shl
sbb
cmp
inc
nop
sbb
dec
and
jl
and
shrb
cmc
xor
cli
inc
inc
mov
int
xor
popf
mov
ljmp
adc
jp
leave
cmp
loope
adc
insb
in
push
test
add
loope
test
ja
repz
insb
xor
loop
pushf
lret
or
sbb
sub
fsubrl
jae
pop
sub
bound
test
sbb
add
ja
hlt
jno
mov
inc
ds
pminub
lods
arpl
add
pop
cmp
pop
jmp
mov
outsl
xor
aaa
push
xchg
xor
lods
jp
jno
mov
sbb
lock
shrl
sbb
cld
sahf
sbb
adc
ds
jno
jne
test
jmp
sub
xor
jns
dec
sbb
sbb
xor
mov
jmp
sbb
push
jmp
and
divl
xor
mov
hlt
int3
inc
mov
data16
jne
test
pop
inc
sbb
js
shl
aam
pop
jb
cmp
ret
sbb
fcmovb
jns
mov
add
add
and
cltd
pop
mov
or
fadds
push
xor
push
cmp
xor
ja
xchg
xor
out
jbe
shr
cmp
pushf
loopne
cmp
pusha
cli
cli
jns
arpl
jle
xor
xchg
pop
in
inc
adc
pop
xor
popa
gs
ja
sahf
dec
ja
and
dec
orl
dec
pop
pushf
push
imul
mov
pop
imul
sub
cld
shlb
jo
pop
xor
sub
pop
xor
inc
pop
sbbb
ja
jmp
fnstenv
les
nop
mov
repnz
inc
mov
hlt
std
into
mov
inc
push
nop
test
aad
push
pushl
ljmp
clc
mov
inc
push
repz
xor
stos
jg
jge
cwtl
mov
inc
popf
bswap
cmp
incl
leave
jecxz
out
mov
add
test
add
fisubrs
and
nop
aas
dec
xchg
fwait
lret
test
iret
jbe
xor
cmc
push
and
dec
jmp
ret
repnz
cli
or
outsl
push
rcrb
cmpl
dec
popf
sbb
fwait
ds
jnp
jb
sub
or
mov
shr
mov
call
lea
xchg
xchg
add
cmp
adc
xchg
push
jg
push
into
mov
out
xor
jns
into
mov
mov
pop
add
lmsw
sbb
sub
scas
lock
push
xchg
daa
adc
aas
loope
imul
fidivs
sub
pushf
mov
pop
sbbb
out
mov
mov
ret
adc
fsubrp
dec
and
stos
or
jecxz
jecxz
dec
sbb
adc
das
stos
cmpsb
cmpl
push
mov
jb
xlat
or
outsb
cmp
test
lds
cs
push
out
test
xchg
ret
js
stos
into
mov
jmp
aas
int
test
jmp
fildll
outsb
and
mov
decl
leave
cmp
test
inc
mov
das
cmpsl
mov
popa
push
outsb
rcr
push
arpl
fucomp
mov
push
stos
aad
cmpsl
mov
mov
lea
push
lret
or
sahf
iret
aas
movsb
xlat
ret
aam
xchg
xorl
fstps
mov
push
sar
int
jns
call
add
push
xor
push
andb
pusha
scas
xchg
sbb
aad
loopne
ds
and
and
sub
ret
jae
or
cmpsl
sbb
dec
fwait
and
push
push
das
leave
cmpsl
sub
sub
jb
pushf
inc
xor
ret
pusha
movsb
mov
cmp
popf
mov
add
jb
sti
dec
mov
and
cmp
add
pusha
add
addl
jno
hlt
sahf
adc
add
out
dec
xor
sbb
imul
cltd
test
and
sub
push
pop
out
jne
cwtl
ja
adc
pop
andb
data16
daa
aam
lds
shrl
sbb
cmp
popf
out
add
repz
sbb
sti
fidivrl
pop
inc
xorb
push
cmp
push
fwait
mov
xchg
push
dec
xchg
adc
shlb
popf
or
rcl
sarl
sti
or
cs
inc
xchg
int
jae
dec
repnz
and
js
or
and
decl
pop
fcmovbe
out
cld
fists
dec
iret
mov
pop
loope
mov
mov
cmpsl
shll
aam
inc
ja
movsb
push
or
sub
and
popf
nop
inc
loop
fucom
cli
dec
cmp
mov
out
aad
or
push
or
cmp
fbstp
cltd
mov
loope
mov
xor
sbb
sbb
inc
push
addb
sbb
in
ds
data16
mov
shl
outsb
arpl
test
add
xor
sbb
dec
mov
adc
call
mov
mov
dec
notl
test
aaa
dec
sbb
pop
pop
mov
repz
cwtl
in
adc
loopne
cmovae
inc
jb
dec
jne
push
lea
push
pop
sbb
xchg
ds
mov
push
jo
push
push
cmpsb
rcl
cld
add
mov
addr16
bound
fs
sbb
mov
sbb
cmp
loopne
pop
pop
cmpsl
dec
testl
lret
mov
lock
xor
sahf
xor
int
or
ss
cmp
or
ret
jmp
mov
push
sti
inc
sbb
or
jno
imulb
xor
stc
dec
aaa
mov
enter
popa
sahf
inc
push
jb
iret
dec
xor
andb
jnp
sbb
shll
out
adc
pop
xchg
cmp
sbb
and
dec
mov
mov
and
cmp
jmp
jg
call
sbb
mov
xlat
jecxz
jae
in
dec
jae
cmp
sub
mov
mov
inc
pop
xchg
in
call
icebp
dec
lret
adc
into
jg
pop
inc
icebp
xorl
sbb
pop
or
adc
cltd
rorb
cmc
clc
cmp
mov
rorb
push
adc
out
dec
pop
arpl
aam
cmp
insb
lcall
sub
das
mov
cmp
adc
addr16
jb
repz
mov
cld
push
add
sub
addr16
lahf
iret
stc
cltd
fcoml
imul
nop
sub
dec
addb
sbb
adc
pop
ret
aad
push
ficoml
ja
xchg
sarl
mov
jo
hlt
dec
inc
cltd
stc
cmp
movsb
mov
ficoml
mov
loop
loopne
and
sbb
inc
xor
orl
mov
push
sbbl
aam
sbb
cmp
mov
pop
mov
outsb
xlat
pop
mov
insb
xchg
cmpsb
and
pop
add
sbb
js
addr16
adc
dec
cmp
aas
daa
popl
lret
shrb
xchg
sub
fs
int
clc
bound
insb
ret
jno
jmp
lahf
cmp
pop
test
dec
lahf
sub
inc
lods
sub
inc
sub
lahf
enter
dec
out
inc
mov
or
jge
dec
pop
and
arpl
xchg
pushf
jg
in
adc
loopne
jge
add
sub
jge
aas
xor
aaa
icebp
add
ljmp
inc
jl
xchg
movl
jbe
jecxz
mov
xchg
repz
int
and
mov
stos
lret
adc
add
and
into
pop
insb
xor
xlat
dec
pop
imul
rorb
jg
shl
out
loop
push
and
sbb
fs
aad
pop
lahf
mov
and
add
rep
roll
bnd
mov
pusha
scas
push
popf
mov
stc
mov
imul
cmp
jno
int
dec
and
leave
out
mov
gs
xchg
and
stc
sub
mov
clc
pushf
pop
jg
aas
or
or
iret
dec
xchg
jp
enter
adc
inc
sbb
sbbb
jne
in
cmp
jae
ret
pop
pop
mov
les
mov
jne
pop
and
lods
imul
subl
xor
fisttpl
dec
out
fadds
mov
push
andb
xor
leave
xlat
push
pop
xchg
sbb
sub
jb
notl
adc
mov
call
adc
mov
inc
push
test
lds
inc
xchg
mov
rcrb
lret
sub
cmp
mov
std
insb
aaa
test
sbb
jb
ds
lods
lret
add
leave
in
aas
mov
mov
int3
shlb
jne
or
dec
aad
sub
push
sbb
call
lret
cwtl
push
adc
test
imul
fdivs
jp
ja
into
adc
leave
adc
dec
pop
adc
lods
cmpsb
xor
stc
and
xchg
and
mov
mov
ret
mov
insl
mov
jge
inc
aam
scas
call
es
cmp
out
gs
jg
sti
ja
mov
sbb
call
sbb
sbb
cmp
clc
inc
into
shll
stos
mov
pop
das
lahf
dec
shll
sub
pop
jno
dec
dec
leave
and
daa
icebp
cld
xor
push
and
inc
xchg
scas
adc
xchg
jg
lods
xor
xchg
negl
xchg
pop
ss
cmp
jle
or
xchg
cmp
stc
es
sub
ss
push
push
cmp
inc
stos
clc
lahf
add
imul
dec
adc
das
or
sahf
in
sbb
mov
sbb
jle
jge
add
sub
cmp
pop
mov
test
insb
daa
cmp
add
xchg
mov
int
fidivs
test
jg
sbb
adc
add
in
pop
stc
adc
inc
jne
aaa
dec
mov
xor
mov
lahf
fimull
icebp
int
mov
jb
in
js
and
dec
xor
add
mov
and
mulb
mov
pop
mov
or
fwait
cmpsb
xor
fadd
mov
xchg
icebp
push
mov
je
or
mov
xchg
cmp
sets
jmp
xor
add
or
dec
inc
add
lods
aam
push
sti
xchg
jg
jbe
dec
js
imul
das
in
xor
dec
push
sbb
mov
jae
sbb
jmp
and
pop
mov
test
pop
or
arpl
cltd
out
mov
cltd
xchg
sahf
sbb
pop
and
lahf
lock
fld
add
imul
test
xor
mov
stos
ds
push
out
inc
bound
push
out
add
or
stos
sti
addl
mov
in
fsub
fiaddl
bound
mov
dec
incb
dec
mov
add
pop
adc
shlb
fbld
adc
or
popa
in
stos
ret
xchg
jno
rorb
lock
mov
aaa
push
imul
xor
ret
es
adc
lds
out
push
dec
cmp
in
xchg
push
addl
push
jb
and
cwtl
pushf
imul
lds
lahf
xchg
test
fisttpl
sbb
jne
stos
sub
xchg
push
ss
icebp
fists
repz
cli
out
loope
sbb
popa
lods
cwtl
std
mov
mov
movsb
mov
in
and
ret
decb
jno
adc
mov
cmpsl
insb
and
aaa
mov
mov
xor
xor
push
aad
jnp
mov
pushf
test
mov
idiv
frstor
gs
adc
mov
jg
or
sti
scas
dec
shll
cs
dec
and
jo
xor
and
sub
xchg
mov
or
stos
xchg
pop
mov
lea
sbb
and
and
push
enter
push
xor
mov
adc
lcall
cmp
push
fisubs
sub
mov
repnz
fcmovnu
and
push
jbe
insl
xchg
push
movsb
and
fidivs
insl
int3
pop
into
mov
in
mov
fmull
xchg
lret
cmpsb
cs
adc
inc
mov
jecxz
adc
mov
cld
sbb
cmp
jae
mov
inc
jno
int
lods
shrl
hlt
mov
cwtl
pop
xchg
xor
push
xchg
pushf
ret
js
iret
jno
jbe
or
push
add
pop
push
sbb
movsb
js
std
mov
or
int3
dec
push
dec
xlat
xchg
push
dec
mov
pop
fyl2xp1
inc
in
int
inc
xchg
pop
inc
mov
in
push
push
in
sbb
mov
out
into
jno
dec
das
xchg
ret
inc
lcall
xlat
adc
dec
inc
lahf
lock
push
adc
jl
and
pop
std
jl
stc
shrl
mov
sub
mov
outsb
out
aas
cli
sub
in
sbbl
pop
push
mov
xchg
out
mov
jae
or
and
push
in
lea
xor
out
jno
loop
mov
loope
das
xchg
lahf
xor
adc
xor
sbb
add
inc
lock
std
popf
push
fwait
es
cmp
loope
shl
and
fst
pop
addr16
lods
mov
cmp
lahf
fildll
idivb
les
ljmp
fbld
xchg
lret
push
fists
jecxz
aaa
in
push
xchg
lret
jge
add
xor
lret
push
sub
pop
and
push
aad
int3
pop
and
push
outsb
test
mov
sub
testl
std
jge
dec
sub
iret
insb
sub
mov
shrb
mov
test
cltd
je
faddp
xchg
ret
cmp
inc
jne
pushf
pop
out
gs
das
mov
stc
out
sti
xchg
test
dec
fistl
das
xchg
in
aaa
cmpsl
mov
adc
mov
ja
lea
enter
jp
mov
je
lret
div
lods
pop
pop
and
jmp
add
arpl
test
loope
add
rorl
cmp
scas
aaa
jnp
dec
or
dec
cmp
inc
mov
dec
mov
lcall
cmp
jb
lcall
mov
icebp
shll
mov
mov
fdivrl
in
pop
jns
dec
rol
sub
sub
or
movsb
dec
cld
xchg
xor
stc
mov
imul
xchg
dec
fwait
push
and
xlat
fucom
xchg
xchg
imul
bound
add
add
jmp
ret
fwait
movsl
popf
pop
mov
fwait
and
sub
loope
cmp
shll
dec
adc
mov
gs
rorl
and
mov
xchg
mov
clc
xor
xor
fsubrl
pusha
icebp
push
cmc
in
jbe
mov
push
push
mov
xchg
sti
mov
inc
stc
xchg
dec
bound
in
xor
ds
aad
sbb
loope
mov
xchg
xchg
jg
cli
mov
repz
int
ret
rcll
sub
lds
fldcw
or
dec
notl
mov
sbb
jge
pop
xor
pop
lods
inc
xlat
andl
gs
xlat
jno
push
jbe
subb
adcl
jae
cmpsl
and
mov
or
and
shll
sbb
jo
std
pushf
into
adc
mov
jb
xchg
cmp
sub
jmp
and
push
push
jp
jp
aaa
loop
sub
clc
xchg
int3
inc
adc
or
inc
push
xchg
add
ret
frstor
sahf
fmul
add
int
sub
xchg
pop
adc
pushf
cmp
add
imul
testl
pusha
mov
push
push
iret
not
in
ret
cmp
cs
xchg
mov
push
or
lret
rcl
test
xor
or
cmp
and
sub
loop
sti
or
or
pusha
aad
pop
mov
sbb
aas
cs
xorb
add
in
test
loope
adc
sbb
icebp
dec
insl
pop
xor
jmp
jbe
je
mov
xchg
mov
mov
mov
sbb
je
sbb
pop
aas
push
xor
leave
mov
xor
stos
popf
xchg
ds
adc
test
mov
popa
rolb
xchg
lcall
mov
shll
ss
aaa
mov
pop
xor
ret
push
das
outsb
push
js
pop
xchg
les
test
xor
rorl
notb
mov
dec
jb
pop
lock
dec
int
es
mov
stos
xchg
or
xchg
call
adc
and
insl
sbb
sub
pop
bnd
ja
jbe
addr16
lock
mov
dec
xchg
call
xor
leave
shrb
push
mov
mov
mov
movsb
push
pushf
scas
cmp
aam
add
loopne
int3
and
ds
or
xor
or
lea
pop
fistpl
out
jecxz
mov
cmpsl
push
sub
hlt
cs
add
add
clc
xchg
lahf
sub
out
fadds
mov
scas
jb
jmp
push
mov
xor
outsb
fimuls
aaa
adcl
xor
loope
cmp
in
pop
pop
mov
adc
shlb
sahf
test
int3
sar
push
data16
push
popa
mov
mov
and
in
stos
lcall
cltd
out
in
sub
xor
push
mov
cmp
cmpsl
arpl
xchg
dec
test
pop
nop
mov
hlt
sub
xor
mov
sbb
rol
imul
test
and
ret
or
cmpsb
in
sub
pop
test
lret
sarl
mov
test
push
ljmp
or
int
xor
sub
add
fdivrl
movsb
lea
xchg
xor
popa
mov
pop
nop
fs
or
dec
jno
push
push
hlt
lds
movsl
jnp
jne
or
mov
cmp
imul
and
fdivrs
dec
jo
sub
dec
addr16
pop
dec
into
xor
jecxz
inc
shll
lahf
aas
loope
leave
sbb
mov
jp
mov
out
ficomps
pop
cmpsb
out
pop
and
sub
sbb
add
jnp
fldt
js
gs
hlt
ficoms
imul
sahf
dec
xchg
sub
push
jne
sub
sub
cwtl
rorb
insb
jns
fcomi
xchg
ds
hlt
fldcw
mov
inc
mov
sbb
fcomip
mov
xchg
dec
sub
in
pusha
xor
jno
pop
xlat
lock
shlb
jl
pop
gs
mov
xchg
repnz
sarl
sub
shr
push
mov
scas
ljmp
shll
call
aad
aad
mov
fadd
pop
inc
call
ret
pop
dec
mov
xor
cli
call
inc
pop
push
inc
ljmp
push
adc
mov
mov
pop
xor
pop
adc
enter
movsl
pop
iret
leave
inc
in
jge
mov
stc
mov
imul
push
call
and
sbb
adcl
mov
addr16
cld
loopne
stos
testl
in
mov
aam
or
test
jecxz
jle
and
fstps
mov
cld
sarb
mov
stc
scas
lods
dec
test
cmp
pop
or
rcrl
xchg
jp
subl
sahf
mov
cld
push
push
les
push
outsl
inc
rorl
adc
pop
pop
aam
insb
jl
mov
lret
js
inc
mov
mov
sti
inc
nop
mov
xor
xchg
and
out
mov
push
mov
xchg
fnstsw
sub
cmp
and
repnz
das
repnz
fdivrs
push
enter
loopne
in
or
xor
xor
lret
pop
cs
sti
sbb
movsl
adc
jle
or
or
push
mov
xor
aad
push
lret
stc
sub
hlt
outsb
gs
cmpsb
and
dec
aad
mov
std
push
and
fidivs
adc
ljmp
in
arpl
fwait
or
sti
mov
push
rcr
into
icebp
rcr
adc
inc
rorl
inc
lods
mov
es
dec
xchg
outsl
push
jae
out
cmp
in
jno
mov
mov
inc
dec
cmp
movsl
dec
lret
lods
rcll
mov
xlat
sbbb
fstpl
or
lock
lahf
cmp
mov
dec
cmpsl
movsb
mov
mov
mov
es
insb
int3
and
in
pop
outsl
test
loope
test
mov
loope
test
ljmp
sahf
stos
xchg
leave
cmpsb
push
icebp
jb
pop
in
mov
adc
add
leave
mov
enter
div
jae,pt
test
orl
adc
xchg
testb
loop
data16
sub
and
jge
sti
sbb
xchg
push
xor
push
pop
stos
jmp
sub
inc
inc
shrl
jg
sahf
jl
mov
repz
fidivrl
push
add
leave
adcl
xchg
mov
or
stc
mov
fwait
mov
out
nop
sti
sbb
pop
addr16
std
sbbb
dec
pop
scas
jge
mov
cli
cmc
or
test
xor
fnstenv
sar
int
sub
sub
push
mul
enter
aaa
mov
cli
mov
idiv
nop
je
jge
fwait
test
jge
imul
mov
out
add
in
mov
scas
popa
fldcw
nop
lcall
setb
mov
imul
popa
fisubrl
dec
cmpl
pop
push
imul
and
push
insl
jl
mov
mov
aam
and
jmp
sbb
jecxz
shlb
mov
inc
sub
push
jmp
or
sub
in
dec
mov
rol
jne
and
push
add
repz
ss
sub
xchg
scas
fiadds
mov
enter
mov
jo
jle
test
pop
scas
idiv
and
add
jle
pop
xchg
add
mov
dec
lret
shll
fdivrp
jb
sub
pop
cmc
inc
mov
push
jo
mov
push
dec
cwtl
rclb
inc
loop
mov
in
into
pusha
jnp
push
jb
call
cmpsl
mov
jne
int
sub
push
in
xor
inc
dec
mov
mov
fwait
push
mov
divl
mov
ficoml
or
mov
mov
addr16
aas
push
icebp
hlt
mov
lcall
stos
nop
pop
shrb
inc
push
lea
xlat
add
add
fadd
mov
mulb
inc
adc
gs
roll
out
stos
cs
movsb
cmpl
or
cmp
xchg
insb
je
test
leave
jnp
aam
sub
dec
add
and
xor
pop
or
mov
add
ljmp
test
pop
hlt
cmpsl
add
out
pop
xor
leave
test
mov
mov
dec
out
sbb
iret
cmpsb
xchg
jnp
sbb
inc
fisubs
repnz
mov
clc
aas
mov
sbb
jne
ds
sar
loope
add
rol
popa
push
jmp
add
mov
jbe
leave
jl
dec
lds
ss
mov
push
xor
adc
xchg
push
lret
loop
cmpsb
xlat
in
fwait
push
lods
inc
in
orb
mov
mov
jmp
cmp
popa
imul
dec
cs
sub
and
fmuls
xchg
add
out
int
jl
and
jg
hlt
jg
aas
push
cmpsl
je
dec
xchg
mov
adc
bnd
pop
lds
imul
mov
std
jb
mov
add
shlb
mov
loopne
pop
adc
push
sub
mov
push
cmc
dec
or
push
les
outsb
les
gs
ja
xor
cmp
fs
ja
in
ffree
mov
stos
xlat
and
or
xchg
lock
or
adc
sbb
in
xchg
rorb
dec
push
pop
mov
sbb
lods
xchg
or
mov
jns
in
dec
or
scas
sub
int
cs
fsubrs
cmp
inc
dec
stos
les
mov
sti
jmp
hlt
inc
mov
pop
mov
mov
jb
filds
inc
push
int
inc
jbe
or
dec
mov
adc
mov
inc
pop
shll
lret
call
sub
mov
cmp
sub
cvtpi2ps
mov
rolb
or
and
mov
sbb
mov
add
out
mov
pusha
mov
mov
sbb
xchg
jp
cmpsb
pusha
push
outsl
fwait
nop
fsubr
aas
adc
sub
imul
or
and
cltd
fbld
jp
xor
pusha
out
in
ljmp
cmp
dec
fisubrl
xor
inc
mov
test
shrl
xchg
inc
fnstcw
in
xchg
fldt
outsl
pop
out
mov
jp
test
repz
insl
ret
sub
inc
pop
testl
add
mov
mov
shlb
adc
mov
cmpsl
je
lock
sarb
fisubrl
std
sbb
sub
xchg
push
sub
sub
out
lcall
lea
inc
push
testl
push
pop
dec
adc
out
xchg
ss
stc
pop
sub
fdivl
xchg
xor
mov
andl
xlat
mov
test
aad
dec
inc
and
nop
movsl
fbstp
sbb
lcall
add
or
movsl
xchg
faddl
xor
stos
xor
sub
in
loop
addr16
sbb
es
inc
and
xchg
mov
ret
mov
pop
popa
int3
mov
ret
xchg
out
mov
mov
push
outsb
decb
jecxz
cmp
in
xchg
push
fmull
scas
pop
outsb
sahf
movsb
vmwrite
das
and
popf
and
cmp
push
sbb
jge
inc
test
xor
js
mov
mov
test
sub
stc
xor
cmp
dec
push
mov
jbe
jo
popa
das
push
jmp
and
test
rcll
ja
inc
movsl
mov
cmp
rcrl
out
inc
in
insl
mov
pop
mov
mov
sbb
xor
mov
push
cmp
inc
aaa
adc
cmp
mov
test
ds
push
add
mov
out
xor
bound
add
jne
fidivrl
pop
imul
scas
or
mov
add
push
push
mov
imul
jl
adc
sub
mov
mov
icebp
dec
pop
pop
fwait
dec
addr16
lret
adcb
jbe
pop
iret
notl
hlt
push
ja
jnp
sbb
mov
xchg
pop
dec
dec
clc
mov
cld
push
daa
push
jle
pop
or
and
pop
mov
push
mov
fwait
les
xchg
xor
xchg
mov
dec
nop
sub
inc
mov
ret
xchg
loopne
mov
push
imull
aad
xor
push
into
push
lds
call
or
sub
dec
cltd
mov
cli
leave
adc
xchg
gs
jns
mov
inc
lds
movsl
out
mov
mov
imul
pushl
bswap
enter
repz
xor
out
push
add
les
dec
or
jp
insb
lods
cmpsl
mov
inc
jle
into
popf
jne
sub
cmc
std
les
test
call
arpl
pushf
inc
hlt
inc
xor
jno
add
mov
loop
or
jnp
jb
es
sarl
shl
cmpsl
dec
test
adc
mov
inc
repz
adc
cmp
push
sbb
jp
inc
stos
call
and
mov
sbb
in
push
in
jmp
adc
xchg
dec
xlat
stos
lcall
in
stos
jns
jne
inc
rclb
dec
lea
insl
lcall
or
pop
decb
hlt
mov
jo
xchg
imul
pop
leave
mov
out
imul
cmp
pop
xchg
xchg
adc
idiv
out
mov
adcl
or
cmp
mov
imul
pop
jno
push
movsb
inc
lock
ljmp
or
insb
imul
ret
push
sub
push
xchg
popa
inc
int3
adc
cmp
jbe
int
cmp
arpl
sbb
jp
nop
jle
cmp
popa
push
xor
pop
jns,pt
and
jbe
fs
cmc
cli
je
cmpsl
mov
daa
jbe
or
and
dec
xchg
adc
sbb
and
mov
cld
stos
test
and
lret
inc
sub
or
xlat
and
sub
aas
aad
xor
int
push
loop
push
std
mov
inc
lods
xchg
pop
xchg
add
mov
faddp
aad
mov
cwtl
mov
pop
jp
mov
jmp
test
or
pop
aad
xor
sub
rclb
mov
fimuls
aad
xchg
mov
iret
fidivl
sbbl
sbb
pushf
mov
push
pop
inc
push
dec
xor
loopne
or
mov
std
out
pop
xlat
dec
add
in
pop
in
push
dec
dec
inc
std
lret
cs
cmpsl
pusha
xchg
cmp
xor
adc
cld
add
jl
das
dec
scas
test
jecxz
ret
mov
xor
dec
cmp
int
sub
jmp
xchg
add
fs
pop
pop
dec
roll
cmpsl
stos
inc
das
jmp
sbb
jecxz
fs
aam
insl
sbb
ds
in
pop
mov
mov
test
sbb
mov
stc
ficoml
jle
rol
xor
jae
add
dec
jns
and
clc
movsb
or
lcall
pushf
cmp
jns
or
push
jge
xor
mov
iret
cmc
pop
movsl
in
adc
pop
jne
imul
ficoml
lock
dec
popa
loopne
pusha
jge
addb
sbbb
xchg
lods
stos
call
xor
push
push
mov
dec
imul
cvtps2pi
xor
adc
mov
xchg
sub
jge
mov
jmp
jns
cmpsl
and
sbb
pop
jp
mov
fwait
addb
in
jne
orl
mov
xor
xor
in
pop
fisttpll
data16
loop
pop
sarb
mov
sbb
lret
test
test
push
push
add
in
cmc
movsb
and
je
adc
insb
cmc
movsl
loopne
fwait
mov
cmp
dec
push
ds
aaa
mov
or
or
icebp
scas
push
fs
loopne
lods
and
ds
add
dec
push
mov
jmp
stc
test
fsubl
cli
shlb
jno
stos
aas
xchg
mov
xor
xor
sub
pusha
test
fidivrl
int3
mov
aaa
jecxz
push
or
mov
mov
jl
lcall
pop
mov
lea
pop
mov
jbe
sub
or
imul
inc
sbb
inc
pop
jne
jns
pop
shll
jecxz
mov
addr16
add
xchg
rcrb
mov
inc
pop
pop
sbb
addb
pop
sub
cmpsl
insl
mov
leave
xor
loopne
dec
lock
cmp
bsf
mov
inc
std
lods
arpl
out
cmp
rcrl
mov
lods
push
add
into
popf
inc
jne
sub
mov
cli
mov
jle
fdivrs
dec
add
sbb
nop
arpl
scas
movsb
lea
rorb
xlat
loop
push
orl
ret
in
push
adc
ret
inc
add
lock
jp
xchg
inc
ror
xor
icebp
filds
std
or
push
dec
outsb
addr16
add
pusha
and
scas
sbb
lock
imull
cmc
dec
pop
lods
pop
sbb
fwait
or
mov
add
ficompl
adc
push
dec
jp
shrl
dec
pusha
jns
adc
shlb
xor
addl
jo
pop
mov
push
xor
lds
fs
jle
stos
ret
test
cli
and
jl
mov
bound
mov
and
sub
or
cld
fsubrs
adc
jns
inc
sub
out
dec
xor
mov
sub
fnstenv
jmp
inc
popa
fadds
jo
lcall
or
cwtl
inc
gs
mov
xor
push
lds
xchg
enter
sbb
jne
das
iret
fxch
gs
js
imul
cld
sbb
fimuls
lret
push
xchg
es
stos
mov
lods
rcrb
stos
lods
and
and
mov
es
xchg
loop
cmp
inc
test
dec
push
pop
imul
lret
jge
pop
push
xchg
cmp
cmp
add
scas
jecxz
cmp
movsb
push
mov
xlat
cmp
inc
lock
or
out
push
gs
add
cltd
jno
out
icebp
out
inc
test
das
outsb
jno
and
mov
xor
pushl
imul
sahf
ss
std
pop
sbb
stos
orb
je
iret
mov
sarb
scas
out
push
mov
jecxz
adc
jnp
loopne
push
mov
push
loop
in
sar
and
loope
lcall
dec
fnstsw
lock
add
mov
cli
and
add
in
adc
fcoml
or
push
es
mov
mov
subb
enter
mov
loop
in
sbb
dec
lea
jo
sub
out
insl
imul
mov
jmp
lods
push
rep
and
adc
mov
dec
sbb
mull
adc
fildl
or
or
mov
pop
xchg
loopne
push
js
fwait
call
lret
scas
xchg
mov
mov
movsb
dec
jge
pop
iret
icebp
xchg
out
hlt
jns
and
sub
lahf
aaa
outsl
or
lahf
dec
stos
sarl
outsb
dec
xchg
lcall
scas
std
inc
sbb
outsb
fstl
sbb
stc
dec
sbb
inc
pop
xchg
lret
clc
out
jno
stc
test
aad
inc
push
stos
movsb
or
push
xor
sbb
xchg
lods
push
push
xchg
pop
mov
sub
insl
sub
movsl
call
lods
std
xor
xchg
push
cli
push
cmpsl
dec
cmp
in
pop
test
adc
mov
mov
mov
arpl
mov
mov
filds
mov
iret
jae
xor
bound
aam
stos
pop
and
adc
pop
fistpll
test
mov
jo
sbb
insb
xchg
xor
push
adc
rcrb
outsb
xor
inc
inc
adc
fimull
sbb
xor
mov
dec
xlat
cmp
mov
mov
mov
jne
xchg
out
or
int
and
push
add
mov
or
fadd
xchg
and
int3
fcoms
cmpb
and
shrl
fldenv
dec
mov
push
mov
repnz
stc
add
or
add
arpl
ds
jb
rcrl
stos
push
je
roll
sbb
add
loopne
cmovbe
out
cmpsl
popa
jmp
push
jle
jo
jo
pop
pop
push
aaa
divb
insb
ljmp
inc
adc
and
loopne
cmpl
mov
notb
mov
jo
in
mov
push
movsb
or
push
inc
scas
out
testl
fs
rcl
push
push
xor
mov
inc
test
mov
pop
cmpps
aas
adc
cmp
xchg
pop
test
test
mov
xchg
jne
lock
and
test
orl
xlat
mov
out
push
imull
push
pop
and
in
xchg
daa
lcall
mov
cld
pop
xor
cs
loope
sbb
mov
inc
daa
mov
cwtl
dec
fisubrs
stos
das
sub
fdivs
mov
mov
and
push
aad
and
stos
sub
and
cmp
repnz
dec
mov
mov
sub
adc
aad
arpl
jne
test
enter
xchg
outsl
dec
jo
mov
sub
sahf
fisubrl
inc
xchg
pop
inc
dec
mov
mov
fsubs
pop
imul
dec
adc
or
jne
inc
lcall
xchg
fisubrs
sbb
or
jge
sub
add
xchg
mov
mov
ret
aam
incl
dec
jnp
adc
sbbl
nop
sbb
ficoms
pop
add
xchg
inc
adc
ud2
lods
cltd
mov
mov
push
inc
sub
outsl
lcall
or
int
push
mov
test
mov
out
mov
cwtl
sbb
imul
repnz
sub
out
adc
aam
in
add
pop
push
xchg
hlt
mov
pusha
inc
shr
mov
inc
fdivs
in
pextrw
je
sub
jmp
imul
test
mov
mov
daa
dec
bound
inc
mov
addr16
sub
mov
jns
rclb
push
sbb
cmp
and
pop
adc
push
xor
xchg
dec
pop
mov
mov
loope
out
dec
mov
test
int3
xor
into
pusha
cmp
outsb
inc
dec
or
leave
stc
xchg
push
fidivs
ja
cmp
xor
nop
pop
dec
or
sub
jmp
push
in
mov
dec
shll
rcrb
mov
jo
cmp
dec
mov
cltd
add
push
push
aam
xchg
push
mov
cltd
gs
mov
int3
sub
cmova
cmp
test
enter
out
lcall
aam
inc
cmp
push
sbb
mov
imul
daa
adc
or
dec
jecxz
inc
stos
decb
pop
popf
xor
mov
ljmp
jmp
cmp
inc
and
push
fbld
aad
pop
cs
sahf
mov
mov
rep
jo
cmp
dec
jp
fs
hlt
push
dec
adc
aas
iret
lods
inc
mov
jo
addr16
xchg
mov
insb
push
pop
adc
mov
mov
and
pop
int3
jg
mov
cmp
xchg
or
xor
adc
imul
popa
jo
test
pop
jno
sbb
xchg
dec
dec
cmc
inc
les
int
pop
jl
pop
jae
lret
das
lock
dec
nop
dec
xchg
daa
xchg
andb
dec
fldenv
out
mov
gs
pop
int3
cmpsb
mov
adc
or
mov
push
outsb
insl
and
mov
outsl
add
or
dec
ds
fdivrl
cmp
push
mov
mov
loopne
push
sub
xor
fwait
or
or
loop
fmul
in
inc
sbb
bound
mov
push
inc
fcoms
jecxz
inc
in
pop
cmpsl
jnp
push
loop
pop
and
out
mov
rol
outsl
push
gs
inc
cmp
cltd
sbb
ljmp
out
mov
and
sub
lods
inc
push
movsb
in
jo
adc
bound
mov
cmc
cmp
jo
mov
and
sahf
cmp
xchg
mov
fistpll
jno
xor
sub
fstl
and
fdivp
mov
shlb
mov
dec
sbb
inc
cmp
pusha
ds
test
and
popf
xor
push
cmp
push
in
mov
in
pop
inc
rcll
fcomip
and
adc
cmpsl
jae
mov
imul
push
sbb
pushf
push
pop
aaa
mov
loope
inc
dec
fistpll
addr16
jmp
push
mov
popa
push
jp
cmp
cltd
or
ret
fcmove
jl
dec
inc
jnp
imul
test
push
mov
dec
dec
xorb
roll
aam
adc
aam
push
inc
cs
jl
cmpsl
test
aad
movsb
mov
cmp
adc
xchg
mov
push
fldcw
shlb
jle
orb
sub
rcrb
lds
popa
or
add
xor
mov
pusha
jb
sarb
mov
sub
arpl
subl
xchg
daa
mov
fwait
adc
or
mov
lahf
fildl
mov
jne
xor
sub
std
mov
pop
es
mov
les
in
push
mov
fiaddl
pop
jl
dec
push
mov
sbb
push
imul
outsb
out
push
mov
pop
std
cld
fsubs
sbb
mov
stos
je
sbbl
jae
testb
push
imul
sahf
dec
add
xor
push
add
mov
xor
xor
mov
addr16
mov
sarb
je
aas
insl
cmc
into
andb
add
lock
xlat
out
jns
cld
es
insl
xchg
fisttps
into
and
inc
sub
fiaddl
mov
inc
adc
dec
fadds
lods
daa
aas
bound
add
or
mov
dec
cmp
out
xchg
pop
out
push
or
sarb
xchg
std
bound
je
jl
inc
lret
inc
and
insl
xchg
jmp
xor
call
sub
pop
js
mov
lret
jg
or
sarl
or
pop
lock
adc
sbb
ficomps
movsl
sarl
lods
jg
icebp
out
jecxz
or
xor
cs
mov
mov
cs
add
or
sti
inc
mov
and
dec
cmp
sbb
mov
xchg
xchg
cmp
or
xchg
mov
lret
orb
andb
xor
dec
jl
in
add
jne
fisttps
mov
mov
jbe
out
imul
push
cmp
push
leave
pop
cmp
ret
fcoms
sub
imul
cwtl
jecxz
xchg
xor
psrlq
mov
lods
jmp
xchg
mov
sarl
ficompl
xorl
dec
sbb
xchg
sbb
sub
and
fwait
mov
pop
jns
jno
data16
adc
cmp
pop
adc
inc
ficoml
mov
pop
cld
push
xor
sub
cmp
pop
xchg
jne
testb
test
jp
mov
pushw
pop
es
popl
jmp
outsl
test
cmpsl
mulb
idivl
fstpt
addr16
es
dec
adc
push
nop
pop
in
mov
xchg
cs
fstpt
jae
fadd
xchg
push
dec
int
push
mov
jae
xchg
cmp
inc
adc
mov
dec
lock
pop
push
mov
or
cmp
jnp
pusha
lret
cld
mov
out
call
fsubl
outsb
lock
stos
lds
xchg
and
adc
js
xlat
xchg
in
mov
enter
shlb
dec
adc
push
jecxz
loop
pop
shrb
sbb
fdiv
test
pop
push
pop
lods
nop
aam
popf
sbb
sti
inc
lods
mov
aad
mov
pop
adc
dec
stc
cmpsb
jecxz
daa
lcall
jmp
lea
add
dec
lods
shl
mov
adc
arpl
stos
cld
int3
test
das
lret
fdecstp
sbb
iret
ret
ljmp
movsl
cmpsb
sbb
daa
movb
push
jp
pushf
xor
and
vmread
xor
aaa
in
mov
pushf
dec
leave
adc
pop
cmp
daa
cmp
ret
push
cmp
aas
popf
mov
lds
test
adcl
jae
das
cmc
cmp
mov
dec
mov
cmp
lahf
xlat
mov
mov
outsb
aam
mov
mov
pop
add
test
insb
insl
sbb
rcll
fistpll
and
xchg
mov
cmpsb
xchg
inc
pushf
mov
push
and
cmpsb
or
andb
push
stos
mov
out
int
sbb
ret
iret
hlt
sbb
xchg
jmp
aas
lcall
rcrb
inc
lret
xchg
rcr
cmp
cmp
pop
mov
sub
push
ret
or
mov
and
push
cmp
je
outsb
das
jae
nop
lret
mov
and
or
dec
mov
and
sub
fldt
mov
icebp
jo
es
push
xor
setnp
iret
cmp
mov
and
stc
movl
test
ds
faddp
xchg
push
orl
call
or
or
aam
xchg
and
fidivs
add
pop
aam
mov
push
lcall
and
aaa
call
mov
cmp
jg
cmp
rdpmc
dec
pop
mov
add
jb
dec
leave
and
ret
lcall
ss
sbb
jno
out
mov
sahf
stos
cmp
jecxz
pop
push
mov
notl
pop
mov
push
out
pop
int3
xchg
jns
shrl
fstps
xchg
ror
aad
dec
leave
adc
xchg
jge
xchg
xchg
jg
out
push
mov
lods
sub
mov
out
mov
mov
cmp
add
jge
dec
mov
cmc
mov
push
xchg
xchg
mov
adc
and
mov
mov
jecxz
fidivs
mov
xlat
or
push
mov
xchg
xchg
daa
pushf
mov
fmuls
jno
mov
xor
jae
dec
repnz
push
fwait
cli
cmp
fwait
pushf
ret
ret
jp
jno
mov
ret
movd
lret
add
mov
push
push
add
dec
movsl
shlb
adc
cmp
xchg
mov
sbb
out
or
mov
mov
pushf
stc
mov
pop
lret
ja
sti
test
loopne
jl
lret
mov
fsubrs
or
imul
jbe
in
pop
cmpsb
dec
fstl
jmp
lds
sbbb
xorl
inc
fldl2e
fadds
aas
mov
das
insl
cmp
shlb
and
cmp
push
jne
outsb
mov
test
iret
movsb
or
and
xor
mov
shll
push
mov
ret
pushf
call
add
repnz
mov
add
stc
jne
jg
adc
inc
mov
test
pop
add
lahf
clc
mov
adc
or
mov
or
into
jmp
sub
jbe
jl
jl
addb
xchg
jmp
cmp
lods
adc
or
fmul
jno
lock
cmpsb
sbb
pop
outsb
out
scas
vpsllq
or
test
call
clc
xor
in
cmpsl
adc
inc
sub
mov
jp
mov
test
mov
jno
inc
call
ja
loope
inc
sahf
sub
subb
iret
mov
iret
or
cmpsb
xchg
dec
sbb
cwtl
sbb
ja
outsl
mov
pop
add
test
mov
sub
popa
cmp
hlt
int
jns
pop
mov
shlb
cmp
sub
adc
andb
fdivrp
mulb
in
xor
testb
cmp
iret
and
xor
adc
push
and
fwait
or
or
inc
pop
push
or
sahf
xchg
in
jmp
out
mov
enter
push
mov
insb
jne
outsb
sti
popf
cmp
icebp
jbe
cltd
icebp
dec
sub
jo
mov
inc
jp
das
and
dec
xchg
int3
or
pop
push
decl
out
jp
mov
xchg
mov
insb
rep
and
aad
out
cmc
xlat
dec
shrl
cltd
or
arpl
std
inc
inc
pcmpgtw
fdiv
dec
sbb
sub
popa
sbb
jmp
repz
xchg
sbb
or
inc
add
jl
test
xor
lods
dec
shlb
into
shll
cmp
jecxz
cs
or
xchg
push
je
dec
insl
arpl
push
xchg
addr16
jns
aad
mov
dec
iret
in
ljmp
jp
rorb
add
jle
movsb
movnti
fsubrs
scas
sahf
in
arpl
hlt
fsqrt
fstpl
int
and
insl
sarl
adc
nop
sarl
jp
mov
js
rcrb
pop
scas
add
or
inc
cmp
xchg
hlt
popf
test
das
mov
sbb
rcrl
mov
push
xchg
xchg
sbb
test
dec
ljmp
mov
and
cli
scas
mov
lret
add
ja
hlt
shrb
aas
hlt
jp
fists
dec
out
test
adc
sub
iret
mov
pop
sbb
dec
xchg
out
pop
sbb
pop
dec
into
shl
popf
xor
test
test
shlb
mull
push
fwait
adc
pop
cmc
pop
and
mov
cld
ljmp
fsub
or
adcb
in
jb
cmp
and
adc
gs
inc
hlt
add
arpl
fstpl
aaa
or
push
je
sbb
pushf
pop
adc
cmpsb
in
stc
fisttps
rcrl
adc
hlt
out
jle
imul
pop
mov
jg
cmp
incl
jo
loopne
insb
out
xchg
cmpsb
aas
xor
repnz
addr16
add
xchg
pop
in
imul
pop
imul
sti
jo
cwtl
or
inc
rol
sub
sub
inc
jns
enter
fisttps
repz
ss
or
bound
push
imulb
popa
push
fidivrs
divl
es
mov
pop
xor
push
insb
xor
jg
shrl
nop
mov
dec
adc
iret
add
xor
in
and
js
cwtl
ljmp
adc
imul
nop
mov
test
cmp
inc
sub
jbe
xor
lods
push
pop
or
mov
cmpsl
repz
insb
pop
hlt
in
mov
xor
aaa
or
push
jp
push
das
sbb
pop
shr
push
decl
adc
scas
dec
or
rcll
ljmp
sub
stos
fmull
ds
sahf
cmp
and
jecxz
lods
jl
stos
pop
inc
fcoml
fcmove
add
pop
jp
out
sub
xchg
lret
loopne
pop
dec
popa
in
cmp
rorl
xchg
mov
mov
dec
mov
loop
dec
adc
in
imul
push
sub
daa
jns
sub
xor
ret
jb
es
pop
movsb
addr16
lret
pop
xchg
testb
fnstcw
je
dec
shr
mov
rcl
sub
mov
push
mov
jge
mov
and
loopne
jp
inc
sbb
push
loopne
std
xchg
inc
sbb
fnstsw
repnz
jne
loopne
add
or
sbb
push
inc
jnp
test
imul
stc
mov
dec
shlb
ficomps
xchg
test
clc
ret
push
xchg
cmpsl
out
pop
cmp
cld
xchg
dec
cltd
scas
xchg
inc
stos
add
icebp
push
sub
pop
cli
and
xchg
jne
or
and
jge
jno
adcb
sti
xlat
mov
loope
enter
decl
movsl
and
inc
scas
or
int3
divb
fisttps
xchg
sbbl
mov
jbe
pusha
and
mov
xor
pop
dec
stos
mov
inc
addr16
in
insl
or
mov
cltd
pop
mov
cmp
pop
xchg
sub
mov
adc
imul
dec
dec
inc
ss
xchg
lods
jl
test
scas
test
and
cmpb
dec
pop
lock
mov
movsb
mov
out
jnp
xchg
insb
cmp
sub
cld
push
xlat
xchg
in
cltd
shll
jae
in
imul
dec
out
or
addr16
jl
ucomiss
iret
xchg
inc
jnp
fwait
mov
decl
sub
push
fcoms
notb
pop
add
into
pushl
out
mov
inc
gs
clc
pusha
shlb
adc
pop
pop
lods
cmp
fimull
add
ja
test
mov
std
into
insl
divl
push
mov
out
ljmp
js
iret
xchg
clc
sub
in
mov
jno
push
pop
xchg
div
sarb
dec
push
movsl
clc
outsb
pop
xor
inc
aaa
and
icebp
lfs
mulb
ror
cmp
mov
repz
stos
sub
xlat
cwtl
mov
test
in
mov
inc
lahf
loope
mov
out
nop
xor
lods
pop
inc
fdivl
shl
and
popf
into
cmp
mov
subl
fdivs
and
and
cwtl
dec
testl
test
xchg
xchg
loopne
and
sahf
mov
jle
or
mov
scas
loopne
test
int3
sub
jmp
cmp
mov
cmpsl
mov
cmp
jg
in
push
enter
shlb
add
fscale
stos
rcrb
inc
sbb
les
insl
cltd
iret
xchg
outsb
push
and
sbb
mov
dec
sub
rclb
fdivs
insb
sub
adc
test
gs
push
pop
outsl
mov
inc
pusha
cwtl
xor
or
mov
jmp
jecxz
mov
xchg
sub
mov
jp
xor
sub
int3
jb
xchg
jl
mov
in
call
jno
push
es
and
jne
cmp
popf
xorb
clc
xor
mov
add
aad
popf
push
imul
ret
aaa
inc
cmp
or
les
jno
adc
xor
cmp
leave
or
pop
or
aaa
jmp
cmp
jb
jmp
pop
mov
popa
ffree
mov
cmpsb
xchg
xchg
enter
mov
cmp
aad
sub
cmp
nop
test
and
ljmp
test
inc
into
mov
js
std
jp
xor
cltd
xchg
loop
pusha
sub
out
push
add
mov
sbb
xor
dec
test
lds
pop
xlat
popa
loopne
add
cs
mov
cmp
ja
inc
push
scas
ja
mov
clc
sub
fistps
mov
push
test
stc
fsubp
lret
and
imulb
sti
scas
fsub
mov
jp
test
and
and
sahf
dec
dec
fsubr
jb
jp
mov
mov
push
mov
jae
push
icebp
inc
add
inc
ss
iret
sbb
xchg
pop
mull
in
fidivrs
insb
fdivl
jae
daa
mov
mov
jp
or
imul
adc
aaa
imull
adc
pop
decb
ss
repnz
test
push
dec
mov
cli
push
pop
and
test
outsl
jne
lcall
pop
insl
push
in
cwtl
sbb
jnp
or
das
mov
and
jl
pusha
cwtl
push
fstl
rcll
cmp
cmp
push
or
mov
dec
insl
ret
outsb
loope,pn
loop
loop
scas
fistl
xchg
mov
adc
jl
sbb
mulb
or
rcrl
and
aad
xor
pop
int
xchg
subb
add
pop
fldenv
sbb
pop
repz
shl
push
cmp
xor
fidivrs
and
mov
sarb
add
pop
stos
int
fisttpll
adc
lcall
xor
fcmovnbe
fstl
mov
jno
rol
sub
fimuls
cmp
lods
fcoms
fisttpl
clc
scas
xchg
mov
rol
push
jb
loope
cwtl
lock
push
xchg
lds
sbb
cli
cmp
mov
ss
dec
sti
jg
and
jge
add
xor
jb
stos
lret
jle
fisubl
shlb
test
popf
pop
adc
push
int
ljmp
xor
fs
sbb
dec
mov
sub
incl
jb
mov
pop
mov
xchg
pop
lea
adc
lods
mov
fbstp
clc
clc
xchg
xchg
outsl
adc
mov
out
int
adc
push
cmc
es
scas
cld
fbstp
mov
mov
sbb
push
fiaddl
push
scas
fsubr
pusha
inc
jmp
push
std
mov
mov
adc
cmpsl
cs
add
iret
data16
mov
mov
lods
and
aam
nop
out
push
and
test
ret
imul
pop
aad
mov
mov
jge
imul
pop
shll
and
test
jnp
push
clc
jg
inc
hlt
push
pop
pusha
add
into
inc
loopne
mov
ss
mov
js
movsb
mov
xchg
jge
popf
loop
push
aad
arpl
mov
outsl
mov
aaa
imul
jb
push
dec
mov
push
xor
jg
xor
nop
inc
mov
dec
aaa
rorl
call
scas
pop
mov
mov
aad
popf
movsl
test
jmp
mov
and
fnstsw
faddl
xchg
push
loope
imul
add
jge
jl
mov
dec
xchg
mov
push
jnp
add
mov
out
or
mov
fldenv
sahf
sbb
add
rclb
add
in
push
mov
cmp
nop
and
jmp
js
shrb
mov
imul
lret
imul
dec
stc
push
jmp
xlat
std
mov
push
cmp
inc
outsl
test
xchg
dec
fwait
push
mov
cmp
jnp
icebp
mov
jb
mov
ficomps
cmp
fdivrl
cmp
cmp
dec
shr
sbb
inc
aas
movb
popa
and
xchg
pusha
lods
xor
rcrl
cmp
mov
xor
mov
mov
icebp
addr16
out
or
clc
stos
out
rcl
loop
cmpb
mov
aad
aad
jae
lret
dec
jle
adc
in
cmc
cmp
sub
pop
dec
cld
mov
pslld
call
addl
in
inc
mov
xchg
mov
sbb
lods
test
icebp
push
add
or
arpl
mov
outsl
arpl
mov
sub
pushf
jno
cwtl
mov
mov
add
into
sahf
dec
pushf
out
and
dec
scas
in
ljmp
out
inc
xchg
fdivr
push
push
add
js
mov
out
bound
cmpsb
mov
lcall
lods
xchg
jmp
push
out
push
shrl
or
pop
mov
lods
xchg
mov
int3
adc
mov
add
sub
jo
hlt
dec
pop
fisubrl
enter
mov
mov
xchg
ja
cs
adc
mov
aaa
into
push
pop
mov
out
push
mov
test
ljmp
jecxz
repnz
xchg
xchg
popa
or
mov
rorl
xchg
mov
pxor
imul
cmc
or
in
outsl
push
and
push
testl
mov
adc
or
sbb
mov
jnp
dec
je
cmp
xor
icebp
adc
and
stos
cmpsb
adc
add
arpl
cmpsb
into
cmp
push
popf
test
and
mov
mov
cmp
test
lret
xchg
mov
fisubrl
sbb
mov
mov
jns
cmpsb
sbb
dec
jl
mov
mov
xchg
fistps
fs
and
adc
cmpl
test
push
jp
stos
fwait
add
lock
cmp
fistl
dec
jg
sub
xor
mov
jle
inc
xor
sub
mov
lock
sbb
push
mov
inc
ljmp
pop
pop
daa
mov
aaa
jno
xchg
xchg
dec
cmpsb
mov
mov
push
loop
sbb
xchg
dec
cmc
sub
xchg
mov
xchg
lock
cmpsb
add
sub
mov
or
movsl
sbb
adc
xchg
ror
or
xor
pushf
ficoms
fiaddl
mov
loopne
dec
xlat
mov
sti
xchg
fisttpl
pop
cltd
sbb
movsb
lods
push
inc
pop
mov
loop
test
stc
push
xor
rcrb
dec
loope
sub
pop
daa
mov
out
shrb
jo
jge
jae
lock
std
int
lcall
cmp
pop
cmp
shlb
pushf
scas
enter
lcall
mov
stos
ret
cltd
add
cld
notb
mov
lea
xchg
lea
push
adc
and
and
jl
int
repnz
pop
add
je
imul
or
movsl
mov
adc
mov
fldl
push
scas
out
ljmp
mov
xchg
add
cmp
std
dec
mov
movsl
aas
bound
or
add
jge
mov
rcll
push
dec
icebp
push
or
in
jae
in
sbb
add
jae
rorl
jo
pop
xorl
jb
das
ds
mov
push
jnp
sbb
push
lret
fisubrs
sbb
jge
jae
mov
das
and
mov
das
push
pop
mov
mov
lock
lods
mov
mov
cmc
mov
inc
adc
fcompl
pushf
mov
inc
cld
xor
movb
mov
sbb
enter
int3
insl
jne
fsubs
in
shr
add
rcrl
gs
mov
mov
sti
mov
fs
fmulp
xor
cmp
add
shlb
movsb
jae
mov
sti
lret
mov
mov
jle
xchg
scas
roll
sbbl
lcall
mov
jmp
sbb
ret
test
lahf
push
mov
enter
idivl
cmp
out
sti
addb
das
in
cmovae
test
inc
mov
fistpl
adc
imull
add
hlt
mov
inc
mov
loopne
adc
lcall
sbb
mov
pushf
les
mov
mov
addr16
pop
int3
fsts
fnsave
or
mov
pop
scas
vfnmsub213pd
cmc
xor
lods
pop
fidivrl
dec
dec
pop
xor
and
push
pusha
and
sub
cmpsb
or
rclb
sbb
movsb
fwait
arpl
jns
dec
sub
rol
xorb
inc
mov
pop
mov
test
push
add
repnz
inc
stos
xchg
hlt
lahf
add
jl
sub
loop
mov
lret
arpl
jecxz
and
dec
imul
cmp
mov
add
test
int
in
push
xchg
pop
mov
cmp
pop
or
int
fimull
shl
push
mov
imul
inc
loopne
cmc
rorl
push
xchg
sbb
fsubl
ucomiss
pusha
push
ret
ror
adc
lcall
pushw
stos
sub
jbe
jne
mov
aam
scas
pusha
in
fwait
sub
jp
or
push
faddl
adc
insl
jmp
fcompl
and
bound
imul
loop
movsl
das
lcall
mov
xchg
mov
scas
pop
lock
add
arpl
lea
and
sub
orl
movsl
ficomps
xchg
nop
sub
push
push
ss
push
push
pop
nop
stos
shlb
mov
mov
popa
jge
enter
ds
mov
mov
fwait
or
daa
xchg
sub
xchg
lea
xor
shll
mov
jae
xchg
iret
push
cli
xchg
jp
mov
dec
fnstsw
add
push
mov
leave
gs
inc
pushf
pop
pop
pop
mov
loop
dec
jne
imul
cmpsb
mov
inc
push
inc
inc
mov
lret
xor
int
add
or
jl
xlat
jne
js
subb
inc
int
inc
push
sub
or
orl
scas
pop
repnz
js
test
inc
mov
sbb
mov
ret
sub
or
cmpsl
xor
and
cltd
out
movsl
sarl
stos
and
call
add
adc
or
lock
hlt
push
cli
aam
adc
lret
push
adc
call
lods
jns
lds
les
lds
fcmovbe
sti
mov
test
fidivl
ss
loop
out
sbb
sbb
sbb
push
jo
push
xchg
mov
data16
out
adc
adc
xchg
xchg
jo
cmp
or
popf
je
sbb
mov
fcmovbe
add
xchg
xchg
int
xor
jmp
mov
xchg
pop
fisubrs
add
mov
adc
and
push
pushf
mov
fcoml
xor
fldt
lock
cmp
sbb
sbb
and
test
push
hlt
iret
jnp
sbb
xchg
xchg
pop
in
pop
inc
adc
out
es
mov
hlt
dec
stos
bound
scas
outsb
insl
mov
sub
aad
adc
das
pop
push
push
pop
clc
push
push
scas
movsl
adc
les
repnz
or
aaa
adc
into
std
mov
ljmp
sbb
adc
mov
lcall
and
scas
and
js
fisubrl
loope
cmp
rclb
loop
aaa
inc
mov
push
sub
orl
arpl
sbb
xchg
ds
push
pop
je
rcrb
mov
sbbb
push
or
test
aas
int
sti
xchg
mov
test
xor
xchg
cmpsb
jl
aas
lods
daa
adc
xchg
pop
push
push
aaa
fdivrl
xor
subl
jnp
adcl
adc
inc
jecxz
mull
inc
popf
mov
cmpsb
dec
jnp
out
and
push
add
adc
into
mov
and
out
mov
cwtl
lock
mov
mov
ss
mov
sub
sti
fcmovnbe
fwait
mov
hlt
adc
mov
aad
pushf
ss
mov
sub
cmpb
sub
cmp
repnz
push
mov
gs
dec
fdivrl
movsl
divl
xchg
cld
das
loopne
add
data16
cli
xchg
fmuls
add
cwtl
pop
or
adc
insl
enter
and
enter
fsubrl
and
pop
sbb
scas
scas
mov
cmpb
xchg
mov
xchg
jnp
loop
push
popa
jo
loope
pop
inc
aad
mov
cmc
dec
lret
cmp
mov
sub
push
push
lods
adc
cmp
or
mov
in
sti
adc
push
mov
fdivrs
cmc
add
bound
cmp
sbb
cmp
sbb
mov
mov
cltd
lret
push
mov
push
adc
pop
test
mov
roll
shll
add
jb
sbb
testl
pop
add
jo
sti
or
jne
mov
stc
aad
aam
jne
add
inc
sub
mull
decl
mov
xor
xor
repnz
test
sbb
sbb
outsl
pop
lea
lods
nop
cmpsb
insl
sub
or
in
mov
in
in
push
lcall
cmpb
mov
pop
test
out
xor
dec
jmp
dec
inc
push
push
jo
call
call
shr
jmp
daa
les
inc
jb
jecxz
sahf
dec
gs
incl
loopne
ficoml
mov
fwait
sbb
or
xor
jp
inc
add
subl
fldt
mov
mov
dec
dec
adc
xor
jno
ja
idivb
adc
lods
pop
push
dec
in
xor
ds
loope
lcall
add
and
push
lahf
push
fs
sub
outsb
inc
adc
push
out
pop
clc
arpl
fmul
loop
frstor
pop
push
clc
popf
or
js
mov
inc
idiv
mov
pushf
incb
jmp
inc
sbb
push
mov
dec
adc
sbb
fs
int
fcmovne
xor
inc
jns
je
and
inc
jo
int3
dec
mov
push
or
imul
stos
out
gs
enter
sti
stc
roll
pop
xchg
popf
xchg
lock
int3
push
out
fnstsw
jmp
scas
inc
ds
pop
pusha
rclb
sbb
or
mov
or
cmpsb
sub
nop
mov
sbb
add
pop
pop
orl
sub
repnz
and
jns
mov
sbb
jg
push
dec
fdivl
xchg
das
pop
scas
fisttps
mov
repz
ja
cmp
push
stos
cmp
xchg
aas
jb
out
lods
xchg
notl
aas
mov
xlat
dec
sub
jg
lods
outsl
rcrb
test
push
out
inc
in
mov
mov
push
mov
cwtl
data16
mov
xchg
setae
aad
jecxz
xor
stos
inc
pop
jo
sub
cs
xlat
cli
pop
or
ss
mov
out
cmp
cmc
dec
jge
movsl
sub
mov
aad
sub
test
sbb
xchg
xchg
mov
sahf
lods
out
cmp
call
ja
xchg
loopne
push
and
insl
and
lret
mov
pop
addr16
or
dec
jbe
xor
in
lock
add
test
xchg
hlt
comiss
cmp
cmpsl
fiadds
or
mov
fcoml
jge
cmp
aaa
and
divb
xor
mov
jb
pop
and
adc
jbe
xchg
mov
add
xor
push
inc
cmp
aam
fcomp
outsl
inc
movsb
adc
and
mov
hlt
sub
cmp
shl
lahf
dec
sub
ss
inc
jp
mov
jg
das
lea
call
adc
dec
sar
and
js
repz
mov
inc
fnsave
imul
stc
das
inc
cmp
pop
mov
sbb
or
adc
dec
adc
repz
pop
cmp
add
subb
adc
cmc
test
push
sbb
movsl
mov
scas
cmp
es
xchg
int3
mov
mov
out
mov
xchg
dec
mov
xor
lods
jo
or
adc
and
push
aaa
ret
adc
stos
pop
mov
jno
enter
movsl
test
cmp
pop
jl
aam
sub
stos
cmc
ret
inc
in
jo
mov
push
inc
std
push
pop
pop
mov
sbb
rcrl
mov
daa
fld
in
mov
xchg
out
cmp
pop
jl
out
stos
cmp
stos
dec
adc
xlat
fcmovbe
push
jecxz
xchg
sub
ljmp
mov
mov
push
pop
fs
popf
mov
iret
and
repnz
mov
test
das
pop
bound
std
sbb
out
pop
push
pop
mov
in
and
aam
orb
jb
loope
out
pop
or
jmp
add
pushl
cmp
scas
push
repz
and
pop
push
adc
stos
into
xor
mov
adc
xor
dec
ljmp
popf
pushf
xchg
push
push
mov
popf
xchg
xchg
mov
cmp
bound
decb
push
fistl
jae
outsl
pop
mov
xchg
fdivs
inc
icebp
adc
push
popa
add
jg
lods
jp
fdivrs
mov
push
and
scas
icebp
aad
xchg
cmc
xchg
dec
scas
mov
cmc
daa
gs
lods
imul
das
rcr
mov
lahf
pop
push
mov
cli
fisubs
dec
mov
jae
sub
orl
shl
mov
and
scas
jmp
add
push
mov
jmp
xor
andb
movsl
cmp
mov
test
faddp
push
stc
add
and
loopne
dec
setge
popa
xlat
and
dec
mov
mov
mov
push
repnz
push
and
lahf
shrb
fcomp
inc
shrb
xor
push
xchg
lock
or
mov
fisubrs
cmp
dec
adc
repnz
ffreep
aaa
sahf
scas
into
test
add
mov
mov
ret
cmp
repz
xor
roll
add
xchg
int3
or
jbe
mov
fimull
test
notb
fiadds
xchg
jge
mov
and
outsb
nop
aam
aad
flds
nop
aad
push
fcmovnbe
push
push
jge
and
cmp
mov
push
insb
xchg
add
and
sar
addr16
stos
outsb
jecxz
pop
xchg
fiaddl
inc
jae
push
iret
sbb
in
and
outsl
lods
and
sbb
mov
add
mov
pop
xchg
sar
jb
cmc
cmp
aas
jns
xchg
popf
notl
push
test
push
les
pop
sbb
dec
jg
das
and
add
scas
mov
cmp
jge
lcall
fwait
in
outsl
scas
das
inc
push
call
jp
fdivrs
mov
out
cmp
xchg
dec
xchg
push
xchg
in
mov
inc
test
mov
xor
mov
sub
test
dec
pop
or
pop
pushf
adc
aad
add
testl
icebp
mov
call
in
roll
in
mov
inc
lods
sub
jecxz
pop
and
inc
jecxz
out
or
or
sbbb
out
scas
pop
lret
cmp
xor
out
push
cwtl
nop
sub
inc
jbe
dec
ficomps
aad
mov
adc
movsb
jne
adc
fcmovnu
call
in
in
sarb
push
lea
leave
lcall
pop
sbb
scas
or
cbtw
ds
aas
test
movsl
enter
rorl
xor
pop
sub
xchg
imul
or
dec
pop
sub
add
test
sbb
jnp
dec
add
jge
jmp
arpl
jle
adc
pop
jecxz
in
scas
ret
clc
and
stos
shrl
popa
or
daa
xchg
lds
fwait
lods
xor
ds
gs
out
ljmp
fidivl
dec
insl
inc
inc
xor
pusha
push
je
push
aas
push
mov
aas
mov
jl
andb
mov
pusha
xor
sti
mov
sbbl
dec
pop
js
pop
rcr
jp
push
sti
and
push
xor
xor
cmpsl
gs
rcrl
push
push
fnstcw
shr
cld
lret
adc
sbb
fadd
mov
or
inc
push
dec
pop
mov
movsb
push
inc
sub
jecxz
mov
jmp
push
mov
push
inc
iret
in
iret
icebp
jo
or
sarb
in
xor
aad
loope
cmp
dec
mov
xor
stos
data16
lock
repnz
dec
pop
cmp
popa
decl
mov
arpl
into
jae
lods
mov
leave
lret
sti
out
stos
mov
jp
lret
lods
mov
push
je
jns
cmpsl
arpl
addb
cmp
pop
ja
inc
add
cmp
push
adc
test
cmpsb
rorb
and
gs
jle
or
arpl
addr16
dec
pushf
out
mov
ret
or
pop
mov
popa
sub
sbb
clc
bound
and
imul
addl
mov
fildll
sub
pop
js
jmp
test
les
push
mov
dec
cmp
in
and
dec
jmp
aad
fsts
inc
mov
jge
in
jge
mov
fimull
mov
push
cmp
std
sub
cmp
addl
clc
test
imul
mov
and
push
sub
push
jl
lret
inc
jmp
test
jnp
fisttpl
in
roll
xor
loop
cmp
in
rorb
jbe
jo
lcall
sar
iret
int3
mov
leave
adc
icebp
pop
push
cli
int3
cmc
pop
rcl
xchg
push
loopne
mov
into
sahf
stos
loop
rol
sbbl
xor
mov
mov
shrl
mov
mov
idivb
faddp
int3
cmp
pusha
sub
push
jecxz
lods
mov
dec
cmpsl
fstl
test
std
iret
sub
mov
mov
mov
dec
add
xlat
popf
push
aam
push
lret
imul
std
xor
popa
sub
enter
pop
push
push
and
outsb
pop
test
mov
mov
pop
sub
sahf
icebp
in
aam
insl
nop
daa
sbb
mov
xchg
je
pop
jmp
fbstp
fisubs
cs
ljmp
push
and
call
pop
mov
ret
pop
and
pusha
cltd
jb
leave
dec
out
cmc
push
sbb
in
xchg
xor
in
pusha
fiadds
daa
xchg
cmpl
dec
iret
mov
aas
cmp
sbb
mov
inc
add
movsl
push
idiv
xchg
dec
or
lods
gs
xchg
insb
shrb
jl
loopne
and
xor
adc
add
test
adc
cli
and
repnz
pop
stos
sbb
movsl
mov
lcall
insl
mov
add
into
dec
and
int
stc
adc
stc
popa
mov
filds
and
push
inc
jmp
adc
pop
pop
je
pop
inc
add
xor
adc
test
jno
sahf
adc
test
lcall
or
out
sbb
cmpsb
pop
or
bound
inc
mov
cli
or
jmp
das
push
mov
adc
or
inc
push
bound
negl
adc
ret
imul
repz
cmpb
jne
pop
pop
movsl
and
sar
jns
dec
jns
scas
ja
fldenv
adc
shl
dec
pop
test
mov
or
enter
jns
cmp
out
lods
data16
adc
fcmovu
or
les
outsl
fimull
lea
out
pop
cs
mov
jge
scas
mov
mov
insb
ds
fwait
clc
sub
mov
inc
sub
and
jg
jne
and
shr
sbb
push
cmpsb
out
jmp
push
addr16
pusha
nop
xor
rorl
jno
insl
fidivrs
call
mov
jns
leave
or
iret
pop
xchg
mov
jae
push
insb
cmp
sub
xor
mov
stos
cmc
insl
aaa
stos
dec
std
stos
insl
inc
adc
sbb
pop
xchg
int
je
not
push
xchg
sub
int
sarb
fsts
leave
sahf
inc
out
mov
test
sbb
shl
and
mov
nop
pop
add
imul
insl
repz
mov
arpl
or
push
popa
xor
xchg
mov
jb
xor
cmpsb
lcall
inc
and
test
xchg
adc
out
cmp
aad
mov
mov
outsb
jnp
cmpsb
mov
or
js
imul
shll
dec
repz
in
or
mov
jl
cmp
addr16
testl
or
mov
xchg
adc
jo
mov
insb
jecxz
mov
xchg
out
jo
sub
sar
inc
jl
ss
push
mov
mov
or
and
jbe
popf
lock
in
xchg
inc
sub
mov
jmp
outsb
sbb
es
das
xor
outsl
les
xor
add
cmpsb
mov
jae
mov
lret
in
cmpsl
push
icebp
lret
mov
push
dec
mov
lret
es
jecxz
int
mov
movsb
in
outsb
jecxz
pop
and
xchg
int
cli
fcoms
data16
cmpsl
jns
push
ja
jae
mov
cltd
jae
lret
fldenv
insb
add
or
adc
scas
and
and
jae
cmpsl
lret
jbe
js
jbe
or
fs
dec
jns
or
cmpb
movsl
out
pushf
std
rcrl
bound
pop
pop
pop
jno
js
push
sbb
nop
dec
mov
test
push
pop
lds
sbb
mov
outsb
stos
and
test
push
and
outsl
setns
jmp
cltd
in
mov
imul
or
popf
mov
xchg
ss
ja
mov
or
stc
sar
push
ja
sub
add
fwait
movsb
lcall
pop
push
movsb
push
scas
cmp
loope
inc
ss
jecxz
mov
sbb
in
pop
fmull
dec
mov
addb
call
mov
dec
repz
push
test
jecxz
or
sbb
ret
sub
inc
xchg
dec
push
mov
mov
and
adc
out
out
sbb
mov
and
xor
sub
lds
ljmp
sbb
in
sub
sbb
cmp
mov
subb
nop
ret
jno
mov
in
jb
jmp
sub
ficomps
outsb
xchg
add
jecxz
rclb
lcall
pop
sbb
add
addr16
xor
adc
lock
shr
jge
pop
in
cmp
sbb
sub
mov
xchg
sahf
pop
fisttpll
mov
mov
imul
adc
jo
nop
dec
addl
scas
mov
sbb
jno
inc
mov
inc
es
ja
in
lods
sbbl
sti
jmp
call
xchg
and
daa
call
push
int
pextrw
movsl
iret
xchg
dec
jp
aaa
lods
sub
xor
imul
adc
mov
xchg
ja
inc
jbe
cmp
pushf
add
pop
xor
jbe
mov
fmulp
dec
and
rcll
sub
sbb
xor
or
sbb
cs
aad
push
jbe
adc
and
or
js
push
cld
and
sbb
mov
lret
pop
je
inc
jmp
lcall
push
stc
sub
inc
int3
pop
or
sub
mov
inc
mov
ror
cmp
scas
add
lret
pushf
fldt
push
call
jns
push
and
repz
sbb
jb
push
cmpl
sbb
mov
sub
mov
ret
pop
or
push
stos
sub
push
loop
loopne
sbb
movsb
shlb
lcall
mov
mov
loop
dec
out
inc
adc
xor
fs
jle
movsl
int
aad
mov
es
out
scas
jge
nop
jle
cld
ja
dec
mov
inc
jg
ja
pop
jle,pn
lock
jns
mov
dec
and
push
sbb
xor
sub
mov
mov
add
pop
fmul
mov
leave
test
inc
lret
mov
xor
popf
mov
cmc
sbb
jb
jle
jo
ret
push
and
pop
cmpb
sbbb
mov
add
dec
fimuls
mov
and
or
ljmp
cmp
add
rol
es
js
fcoms
adcl
lods
popa
sbb
popa
test
shlb
mov
push
mov
mov
mov
repnz
push
mov
fbstp
mov
outsb
bound
lea
push
add
pop
add
daa
sub
loope
scas
es
push
adc
enter
push
mov
jl
test
mov
mov
es
xor
cmp
gs
add
cld
mov
jne,pt
inc
sub
aas
mov
lret
call
cmp
mov
mov
cmp
popa
pop
sub
ds
xchg
or
push
sti
inc
cli
or
mov
aas
fcompp
ret
and
pop
shrl
js
adc
int3
dec
iret
pop
xor
add
insl
outsb
push
mov
jl
jg
jb
pop
xchg
orb
pushf
xorl
fnstenv
mov
movsb
xor
mov
jp
jo
jo
push
push
adc
pop
stos
out
lcall
es
fimull
ja
or
adc
fs
out
clc
insb
add
lcall
mov
pop
mov
sub
or
cmp
mov
aad
data16
mov
stos
add
xchg
xchg
loope
jo
mov
sub
out
jb
hlt
inc
mov
fcmovnu
jnp
mov
fisubrl
mov
jmp
mov
mov
out
push
in
push
add
add
cmpb
and
push
call
stos
out
xor
shrl
and
insb
dec
push
and
add
test
jne
mov
loop
daa
pop
mov
inc
in
jecxz
and
dec
sub
sub
and
xchg
sbb
clc
jmp
pop
inc
or
fisubrs
dec
cwtl
mov
out
fidivrs
mov
pushf
or
pushf
mov
ds
jnp,pn
mov
cmp
adc
cwtl
and
xchg
inc
mov
std
cmp
mov
or
sbb
sbb
mov
icebp
aas
push
cmp
mov
xchg
jb
test
jl
fmulp
mov
push
and
jae
popf
push
call
in
pop
fwait
leave
jo
dec
movsl
push
mov
cmpsl
or
lret
push
ret
sub
jno
aad
push
jo
mov
mov
lahf
popa
in
mov
insb
push
stos
push
dec
lcall
into
fs
shr
jns
xor
dec
fcmovb
repz
into
xor
inc
adc
adc
xchg
xchg
mov
or
sbb
sbb
xchg
adc
cmp
inc
jb
sbb
pop
ljmp
jp
subl
rolb
dec
xchg
add
adc
inc
jg
mov
shr
pop
das
dec
inc
and
and
cmp
mov
cltd
jg
jo
stc
aaa
and
push
addb
fsubl
push
mov
test
in
jbe
jnp
notl
cs
adc
test
ds
sbb
xlat
repnz
pop
out
or
jle
mov
out
cmp
and
sbb
cli
fwait
hlt
fwait
mov
push
or
dec
mov
dec
jp
cmp
pop
inc
adc
ljmp
sbb
and
xorl
into
push
mov
enter
cmpsl
cmp
sti
or
or
xchg
xchg
frstor
xlat
mov
shrl
mov
add
add
xor
xor
mov
jg
mov
test
cs
pop
add
subb
inc
add
pop
adc
push
loopne
iret
inc
or
and
daa
add
sub
loop
insb
add
xor
jb
xchg
in
repz
mov
fs
fcompl
adc
leave
cli
inc
sbb
dec
test
mov
stos
and
add
mov
test
lock
and
mov
push
inc
pop
push
stos
outsl
mov
in
nop
and
mov
push
lds
cld
xchg
sti
and
je
scas
mov
shll
subl
movsl
movsl
cwtl
out
call
jge
pop
cmp
lock
xchg
sbb
out
in
test
mov
xchg
ret
push
xchg
lret
scas
fldl
aas
dec
out
loopne
xorb
mov
pop
or
fsubrl
call
push
add
push
jg
icebp
and
mov
ljmp
add
daa
mov
mov
ja
and
mov
mov
fs
jl
scas
out
push
js
xchg
jb
xchg
je
jns
das
ljmp
xchg
cwtl
ret
je
mov
pop
xor
push
mov
jno
add
in
ss
ds
sub
ja
out
pop
mov
mov
jnp
xchg
sarb
jecxz
cltd
mov
xor
out
adc
xor
lret
sahf
mov
call
add
dec
or
sub
aad
call
ret
insl
pop
js
xlat
mov
int
mov
imul
mov
daa
sub
in
subb
pushf
xor
pop
dec
pop
cld
imul
mov
fldcw
cmp
in
sub
push
hlt
faddl
movsl
js
ja
cmovge
lret
imul
out
loope
jge
push
data16
cli
mov
mov
movsb
mov
add
mov
aad
adc
dec
lcall
inc
xchg
dec
outsl
popa
inc
ljmp
sub
or
jbe
xlat
ror
xlat
arpl
pop
cmp
imul
cmp
sub
sarb
add
xchg
sub
xchg
sub
int3
cltd
xor
mov
push
sbbl
push
mov
pop
xlat
cmp
pop
loopne
ljmp
cmp
je
pop
inc
or
cld
fidivrs
xchg
mov
add
ss
bound
xlat
out
cmpsl
xor
clc
in
adc
cmp
enter
addr16
jae
in
test
or
int
push
push
mov
jmp
inc
int3
cwtl
pop
fwait
push
mov
negl
sub
cmp
stos
addb
push
xor
fldl
in
daa
jecxz
sti
lret
cmpl
mov
fdivrs
and
pop
pop
sbb
cltd
pushf
or
push
mov
mov
adc
adc
jne
or
inc
sub
sbb
adc
das
mov
insl
push
push
add
outsb
xor
and
jmp
mov
test
outsb
fldt
adcl
mov
jg
mov
addr16
push
out
lret
mov
dec
ja
je
jmp
fistl
pushl
setns
and
push
stos
push
xchg
rcr
adc
dec
int3
pop
lahf
lahf
les
sbb
push
sub
xchg
xchg
mov
out
into
lret
inc
sbb
or
push
popa
ja
push
iret
push
cmp
addb
jp
xor
dec
out
jno
cmc
in
iret
fiaddl
push
das
ljmp
xor
jb
sbb
scas
mov
shrl
xor
inc
or
add
mov
mov
imul
push
pop
loopne
mov
fsubrs
pop
adc
stos
push
imul
out
outsb
testl
movsb
sti
xchg
in
repnz
test
mov
or
mov
push
push
mov
xchg
std
icebp
dec
xor
sbb
pop
sub
aaa
or
cld
pushf
mov
and
in
sub
cmp
mov
cld
test
mov
cmpsb
int
cmp
push
jo
dec
sahf
ljmp
cmp
test
push
and
mov
scas
shll
jmp
stos
ret
mov
test
insl
mov
xchg
mov
call
into
cmc
hlt
insl
xchg
das
lret
movsb
shlb
test
mov
into
stos
insl
fnsave
add
mov
push
pushl
out
cwtl
js
es
add
in
scas
adc
mov
enter
lahf
lcall
sub
mov
outsb
pop
sbb
adc
pop
sub
hlt
mov
pop
mov
jp
pop
mov
add
sub
inc
test
pop
icebp
mov
push
insl
movsb
push
pop
cmp
mov
outsb
int
lds
mov
jns
ja
imul
arpl
pop
or
jle
outsb
subl
and
rcll
bound
mov
enter
ret
rolb
js
xlat
in
stos
stc
mov
subl
imull
dec
loopne
mov
dec
sbb
xchg
in
cmp
andl
adc
add
dec
ret
repnz
ds
sarl
adc
stos
mov
aas
inc
aas
imul
dec
fwait
ds
dec
stos
jns
in
xchg
and
cmp
push
push
cmpsb
pushf
push
cmp
shrl
xchg
loop
in
push
test
sub
inc
jae
push
loopne
sbb
xchg
mov
xor
pop
push
outsl
xorl
bound
lret
jno
loopne
jge
pop
pop
pop
mov
pushl
mov
or
jmp
sahf
in
je
inc
repnz
gs
lahf
daa
or
dec
stos
mov
ljmp
into
mov
rcrb
dec
std
mov
pop
dec
aad
push
and
hlt
push
call
push
test
test
fcmovu
mov
dec
pop
add
add
dec
pop
mov
and
pop
sarl
xchg
mov
jo
repz
xor
lcall
dec
inc
lea
push
cmpsl
pop
jl
notb
mov
imul
push
jecxz
cmpsb
push
rcrl
subb
mov
leave
mov
cld
add
int3
outsb
cmp
pop
sbb
movsb
push
pop
jecxz
data16
mov
inc
cmpl
xchg
arpl
sti
mov
adc
std
mov
popf
in
daa
mov
sub
ror
or
xor
mov
rcll
xchg
inc
shlb
mov
out
shlb
adc
mov
mov
and
push
adc
fwait
xchg
das
mov
test
mov
xor
subl
cmpsb
stos
sbb
mov
xlat
mov
roll
inc
mov
movb
ficompl
xor
dec
add
sub
or
xor
sbb
mov
mov
push
add
test
fwait
notw
fists
mov
andl
inc
mov
or
sub
es
xchg
mov
data16
mov
cld
out
pop
repz
jae
jmp
daa
or
dec
ljmp
add
jb
dec
stos
mov
subb
leave
daa
xchg
lock
push
or
push
data16
loope
fmull
stos
popl
jmp
dec
cmp
cwtl
cs
test
cwtl
or
sbb
inc
jbe
js
aam
push
mull
lea
pop
nop
or
test
scas
add
negl
cwtl
cmp
adc
add
jmp
hlt
and
or
inc
pop
adc
shrb
push
pusha
loopne
stos
and
mov
aad
sbb
int
std
popa
data16
sbb
icebp
dec
or
xlat
out
fs
outsl
sub
mov
gs
cmp
inc
shld
sub
mov
lods
jnp
fs
stos
xchg
outsb
lret
add
mov
gs
cld
loop
push
mov
mov
cmp
adc
mov
jecxz
push
mov
xchg
test
rolb
insb
push
dec
jmp
pop
sbb
or
add
mov
hlt
sbb
movb
btr
std
or
xchg
movsl
scas
push
pop
push
pop
cmp
mov
scas
lahf
xor
mov
jmp
push
ds
jno
popf
lea
gs
mov
data16
imul
cmp
cmp
cmc
push
mov
in
shl
outsb
jbe
push
pop
adc
push
addr16
mov
in
insl
shlb
cltd
ds
xchg
gs
mov
ret
fistpll
xchg
fidivrl
xchg
push
sub
pop
mov
mov
repnz
cmpsl
lock
push
pop
add
mov
rcr
cmp
mov
xchg
xor
shrb
mov
dec
or
mov
sahf
popf
add
mov
and
xor
push
shlb
xchg
and
mov
ja
jg
pop
ret
xchg
jmp
sbb
fwait
movsl
sti
mov
test
aad
xor
arpl
jp
sar
sub
cwtl
in
add
icebp
or
mov
xor
lods
rcrl
inc
mov
aam
mov
pop
sub
sbb
jno
pop
bound
xchg
fisttpl
stos
popa
fst
lcall
leave
mov
adc
insl
icebp
repnz
lock
sahf
test
inc
leave
mov
jo
int3
aaa
xchg
jno
jp
pushl
pusha
pusha
pusha
lds
jno
jbe
lahf
mov
lods
xchg
mov
jns
or
mov
out
pop
aaa
imul
scas
dec
dec
lcall
push
outsl
call
pop
cwtl
cwtl
push
push
add
push
dec
or
insb
pop
add
les
sub
push
mov
mov
sti
mov
push
ja
mov
inc
mov
jp
jo
inc
test
in
cmp
mov
sub
sbb
pop
fiadds
shl
push
mov
adc
pop
bound
insl
mov
outsl
out
dec
cwtl
std
movsb
popa
pusha
fwait
out
iret
imul
imul
lock
aas
out
imull
xchg
sbb
ficomps
scas
outsl
adc
mov
enter
xor
jge
popa
and
sub
scas
adc
repnz
mov
sub
in
clc
stos
sbb
sub
push
iret
pop
fst
subb
jne
pushf
sbb
aad
jg
mov
xchg
push
sahf
or
addr16
sbb
sub
xchg
jle
mov
pop
jnp
sti
mov
adc
push
xchg
popa
mov
sbb
inc
ret
mov
push
pop
push
add
inc
stos
pop
jge
pop
shlb
adc
arpl
push
mov
mov
sbb
push
or
and
lcall
addl
pop
adc
jne
mov
les
add
imul
sbb
sbb
test
stc
bound
dec
cs
adc
cmpsl
lods
add
fs
fwait
call
int3
outsl
push
mov
dec
test
das
test
mov
and
test
in
dec
rcrb
test
fnstenv
mov
sbb
mov
add
popa
cmp
mov
frstor
je
adc
and
add
aad
imul
jmp
das
cmp
inc
enter
inc
in
daa
and
or
push
clc
sbb
call
in
pop
adc
into
jb
jl
push
fidivs
cmp
xor
pushf
frstor
fs
in
fs
insl
mulb
dec
jnp
stos
popa
xor
jnp
add
aaa
adc
push
cmp
repnz
jle
das
or
xor
loope
jbe
lea
jae
xchg
pop
mov
lcall
mov
mov
bound
push
fwait
call
lret
jbe
pop
push
push
mov
bound
or
mov
cmc
stc
int3
je
ffree
fcmove
cs
cwtl
pop
mov
int3
int3
mov
cmp
ss
in
lcall
or
xor
mov
or
lea
outsb
xor
hlt
fstpl
push
nop
push
pop
add
fld
jle
mov
sahf
dec
sbb
mov
sbb
push
xorl
cltd
or
inc
inc
cmpsl
cmp
jae
adc
xor
sbb
cld
stos
aad
subb
push
jne
enter
and
jl
adc
popf
stos
pop
push
fwait
pop
mov
and
sub
or
sbb
jae
aad
sub
std
jg
add
push
or
sub
imul
jle
lock
xor
sti
testb
cmpl
mov
dec
jae
test
add
pop
into
inc
cs
xchg
xlat
jno
jae
das
int3
xchg
ret
inc
cmpsb
cmpsl
mov
je
xor
mov
ret
add
and
rcll
imul
sub
ds
nop
sub
lods
lds
pop
fists
mov
das
andl
pusha
sub
shll
gs
jl
pop
nop
pop
in
xor
enter
push
add
jmp
dec
sub
and
ds
jnp
add
cmp
mov
inc
jbe
mov
dec
mov
pop
xor
aaa
into
jp
or
pop
hlt
pop
pop
mov
mov
out
xchg
mov
std
es
jb
xor
addb
cmpl
pop
dec
js
cmpsb
scas
mov
inc
mov
fnstsw
mov
jmp
icebp
movsb
lcall
into
mov
add
xlat
cmp
pop
xor
pushf
and
fs
jne
push
sub
lret
cmp
lcall
push
add
cmpsb
sbb
cmp
aas
and
cs
data16
inc
cmp
and
loope
sahf
fsub
je
fs
pop
inc
filds
sub
movsl
jmp
jns
pop
or
pop
jbe
loope
mov
push
ja
mov
jecxz
or
or
sub
push
push
repz
int3
xchg
daa
into
pop
js
add
push
mov
xor
pop
lret
xor
dec
cltd
iret
dec
xor
or
out
out
test
int
jl
and
addl
frstor
popa
stos
insb
push
test
iret
sarb
cwtl
das
aaa
push
mov
lods
xor
xor
fwait
mov
mov
mov
push
fistpll
cmp
cli
pop
dec
xor
xchg
mov
ficompl
or
loop
jno
inc
faddl
mov
sbb
outsb
jo
adc
lahf
aas
cmpl
push
push
sub
mov
aas
je
sti
testl
sbb
test
mov
in
jmp
or
aas
xchg
lods
add
and
lods
rcll
dec
or
cmp
pop
pop
push
es
jg
mov
jl
leave
dec
cmp
mov
mov
add
mov
outsl
sub
out
cmpsb
call
add
sbb
adc
cmp
ja
cmpsl
xlat
sbb
mov
lock
cmp
or
mov
inc
mov
xchg
sub
sbb
test
mov
adc
jp
fbstp
and
jo,pn
dec
enter
inc
jae
jne
mov
std
ss
sub
js
shrb
cmpsl
icebp
ds
out
jb
rolb
jns
or
stc
sub
test
dec
in
stc
out
dec
mov
cltd
ljmp
sbb
rcl
sbb
je
cli
jb
dec
push
push
arpl
movsb
xor
mov
add
push
fwait
pop
out
fsubrp
test
adc
push
cmp
xchg
scas
cmp
movsb
fs
lds
jno
push
xor
mov
mov
dec
xchg
loop
repz
mov
loopne
fbld
sbb
sbb
push
test
mov
jb
mov
adc
push
loopne
cli
int
sub
push
and
cmp
lods
lods
mov
scas
fcomip
and
cmp
scas
cli
or
test
xlat
cmp
jb
cmpsb
adc
jno
sbb
mov
push
das
add
repz
jle
cmp
pop
push
in
mov
es
out
push
sbb
lea
push
inc
dec
cmpl
adc
jmp
int3
sbb
imul
dec
in
pop
mov
cwtl
sub
mov
or
push
mov
push
or
scas
daa
rcll
mov
sub
push
fbld
fisubrs
jl
fldt
notb
insl
xchg
ds
rclb
xor
mull
mov
jg
mov
and
xchg
mov
mov
mov
xchg
mov
jg
out
into
jne
inc
hlt
push
cmp
nop
mov
jg
jbe
pop
mov
mov
jns
aaa
repz
xorb
xor
sbb
sub
lods
add
hlt
in
mov
xchg
jmp
xchg
lods
mov
mov
sti
mov
pop
cwtl
inc
jp
push
out
sub
mov
lcall
push
pop
sar
xor
cmp
in
push
and
jge
xchg
dec
test
jae
mov
push
dec
lock
comiss
adc
jns
in
sbb
pop
ss
adc
push
dec
loop
cmp
push
pusha
repnz
cwtl
jecxz
stos
pusha
lcall
imul
jg
adc
js
push
inc
sbb
loopne
int
out
dec
lods
dec
lret
mov
fsubrp
cwtl
pop
and
aad
insb
sub
ja
sub
ret
fistl
mov
insb
dec
ret
and
adc
jl
mov
imul
inc
jne
mov
int3
mov
jg
mov
or
sub
cli
adc
aad
ret
push
fucomip
dec
add
push
and
je
enter
sahf
mov
aam
xchg
arpl
lcall
jb
out
cwtl
test
cltd
jno
adc
enter
inc
cmc
inc
dec
add
and
sub
inc
pop
jmp
mov
repz
icebp
xlat
xchg
scas
ja
cld
jbe
push
inc
stos
sub
cmpsb
stos
mov
pop
or
dec
lret
jbe
jne
push
xchg
clc
add
scas
add
add
sbb
mov
adc
or
sbb
sbb
sar
dec
out
outsb
push
std
divl
sahf
or
js
insb
filds
add
xor
sar
aad
testl
inc
mov
test
out
shl
lahf
nop
push
mov
mov
push
fbld
mov
js
xchg
lods
sbb
or
xchg
pusha
mov
dec
and
fdivrl
jne
jl
in
cltd
loop
iret
movsl
pop
int
shll
repnz
out
fndisi(8087
sub
mov
shrl
push
mov
ljmp
jb
cmp
rcll
in
dec
ljmp
cmp
shrb
shlb
outsl
in
cli
xchg
clc
mov
or
movsl
cmp
rcll
in
xlat
ds
ret
dec
xchg
and
sub
jge
jo
and
pop
fs
mov
xor
les
pop
icebp
pop
dec
out
xor
and
push
addr16
es
xchg
aaa
sbb
lods
xor
and
aad
cmp
xchg
mov
outsl
or
decl
and
cli
mov
js
arpl
cmp
adc
das
xor
push
or
inc
inc
lods
pop
inc
inc
xchg
or
push
add
fldenv
mov
pop
lret
xchg
mov
outsl
icebp
xchg
outsb
inc
jnp
mov
js
fisttps
loop
insl
out
testb
pop
and
push
imul
fsubrs
jle
fchs
xchg
jb
and
rcr
mov
ss
or
cli
xchg
bound
int3
loop
lret
fcoml
xlat
push
js
cmp
sbb
lahf
sbb
dec
push
mov
test
mov
mov
lods
dec
or
test
outsl
cmc
sbb
lea
mov
cwtl
dec
negl
iret
adc
loopne
pushf
sbb
inc
and
ret
adc
out
fldl
gs
roll
add
idivb
xchg
daa
fists
jb
cmp
ds
dec
mov
mov
mov
out
mov
incl
pop
pop
xor
jnp
aas
pushf
mov
movb
jno
adc
jecxz
or
cmpsb
mov
jle,pn
push
out
cmpsb
mov
cmp
xor
mov
push
shlb
cwtl
push
cmpsb
jns
nop
test
push
sbb
pushf
test
xor
mov
movsb
jge
cmp
jg
loop
jle
mov
jno
shll
mov
and
sarl
lret
mov
jb
arpl
fstpt
imul
mov
loop
push
push
test
jbe
repz
fucomip
lcall
out
shlb
je
pop
ja
jmp
push
jmp
fs
xor
mov
mov
sbb
jb
insb
push
mov
divl
mov
daa
or
out
ret
jg
iret
sahf
push
mov
cmp
ljmp
cmp
mov
adc
pop
inc
fidivrl
sub
mov
es
pop
jl
push
sar
push
xchg
jbe
jo
fists
sbb
mov
lcall
dec
mov
push
fcomps
stc
rorb
xchg
lret
add
push
nop
into
cmp
fisttps
and
decl
pop
mov
jg
push
in
imul
jae
imul
fnstsw
je
gs
in
repz
mov
aas
dec
jno
or
jne
push
xchg
rclb
cmpsl
stos
ficompl
imulb
notb
sahf
ljmp
lods
cmp
bnd
int3
and
decb
dec
pop
xchg
pop
pminsw
push
sub
stc
mov
stos
into
scas
aam
loope
daa
pop
mov
ss
jecxz
xchg
nop
das
xchg
std
pop
addr16
mov
in
insb
ljmp
negb
pop
sub
mov
sbb
iret
mov
jge
sub
movsl
inc
mov
jl
outsl
add
cmp
shlb
mov
inc
xchg
jecxz
cld
movsb
jno
pop
xor
xchg
imul
pop
jge
mov
pop
add
mov
sti
dec
dec
les
shrl
xchg
loopne
mov
xchg
inc
add
adc
stos
mov
ds
adc
pop
sbb
adc
sub
xor
scas
inc
mov
sarl
mov
pop
mov
mov
jmp
push
mov
icebp
mov
jmp
aas
retw
aad
cmpsb
sbb
mov
inc
les
or
jp
xor
dec
adc
scas
fidivl
and
lahf
add
jge
sbb
out
mov
sub
and
fsts
out
outsb
xlat
jmp
mov
imul
ret
leave
jb
mov
jbe
and
dec
popa
fwait
and
dec
xchg
das
aad
xchg
mov
out
adc
cmp
dec
data16
add
mov
xchg
psrad
jo
push
aas
out
test
test
xor
jp
push
jns
addr16
ret
loope
sub
adc
mov
xchg
orb
push
pop
cs
dec
cmc
inc
adcl
jb,pn
pop
add
lret
and
imul
mov
or
pushf
push
jnp
ljmp
jne
jl
in
jnp
addb
test
aad
cmp
add
mov
push
xchg
idiv
adc
in
xor
addl
ret
fstl
add
mov
ja
cmp
fstps
das
test
pop
pop
dec
cmpsb
stos
aas
int3
decl
divl
lods
repz
enter
push
cltd
pop
sub
loope,pn
inc
outsl
std
and
sbb
or
jno
jp
nop
gs
or
pop
mov
push
fnstenv
scas
or
lea
xor
cmp
cmp
mov
jb
mov
jne
gs
adc
add
loop
std
pop
clc
pop
fists
iret
fwait
xchg
xorl
lea
xlat
or
and
daa
mov
outsb
aaa
dec
sub
rorl
push
xor
pop
xchg
pop
add
orl
fs
shl
lret
das
jne
in
nop
pop
arpl
and
daa
push
movsb
sbb
jnp
nop
or
test
shll
roll
adc
mov
out
call
into
es
das
sbb
test
inc
hlt
mov
cltd
sti
aam
fiadds
push
fistpl
test
notb
cmp
push
mov
stos
xchg
and
mov
push
sub
test
fimuls
sbb
ljmp
jp
cli
sbb
lds
inc
cmpsb
dec
mov
in
es
inc
jmp
popf
dec
cld
loop
in
and
test
dec
int3
cmpb
or
fsub
fsubp
xchg
ljmp
test
or
ret
mov
shl
mov
jb
lods
mov
test
inc
sahf
std
leave
out
loope
ficoms
in
mov
movsb
add
jo
sbb
or
fld
inc
in
push
icebp
stc
ljmp
pop
fs
jae
hlt
test
in
leave
daa
mov
jmp
cs
imul
mov
pop
jb
shlb
dec
jnp
mov
jmp
dec
jbe
fstpl
movsl
sbb
ret
pushf
fbld
xlat
xchg
mov
inc
lods
mov
push
lock
dec
shll
mov
xchg
enter
mov
out
in
movsb
mov
pusha
bnd
cmc
call
and
cmp
xchg
jg
push
daa
mov
jbe
adc
jl
or
jmp
push
pusha
adc
int
lcall
mov
add
enter
dec
js
push
jecxz
xchg
out
or
mov
mov
mov
add
xchg
mov
test
cmp
mov
test
xlat
testb
fmul
cmpl
pop
xchg
lds
icebp
add
pop
lock
test
jle
mov
mov
std
mov
lds
xor
sub
imul
and
or
mul
inc
iret
and
hlt
pop
inc
bound
shll
xchg
mov
lea
repz
mov
call
jbe
in
pop
aam
sbb
pop
movl
add
push
fsubrs
clc
ss
and
fbld
insl
xor
inc
push
in
adc
stos
pushf
pop
sbb
and
out
fucomp
mov
pushf
inc
cmc
cmpsb
jge
mov
andb
or
pop
fildll
les
nop
mov
nop
jne
rclb
call
push
dec
mov
cld
scas
or
adc
lods
jge
int3
xor
sub
mov
je
jle
inc
and
dec
mov
das
fmull
xchg
mov
xor
test
push
xchg
pop
js
xchg
lea
rorl
pop
adc
and
test
fdivl
pop
sub
mov
adc
sub
fidivl
loop
jle
test
clc
lret
aad
inc
jno
pop
add
lret
movsb
push
sbb
mov
pushf
dec
jp
pop
mov
lods
cltd
popa
test
int3
jnp
cmp
or
mov
push
mov
pusha
ret
xor
mov
push
pop
jle
cld
or
or
pop
stos
pop
mov
mov
or
jns
les
or
xlat
scas
inc
into
xor
or
xor
jnp
pop
adc
cwtl
pop
sbbl
pop
fildll
cmp
mov
xlat
jge
xchg
cmp
movsl
in
sbb
popf
test
cmpsb
mov
imul
mov
sub
mov
into
lods
sbb
cwtl
scas
xor
clc
popf
shl
sbb
fidivs
decl
push
enter
xchg
or
mov
mov
and
sub
inc
xor
cmp
pusha
bound
test
xor
pop
pop
shrb
mov
jg
inc
lods
jp
sbb
repnz
jmp
sbb
dec
mov
dec
mov
sbb
xor
int3
dec
sub
cwtl
mov
adc
repnz
and
fidivrl
loop
jo
pop
popf
repz
cmp
repnz
mov
push
mov
sbb
adc
dec
pop
mov
ret
adc
xor
addr16
insl
outsl
aad
stos
jno
in
movsl
cltd
xor
sbb
xor
xchg
outsl
or
jl
in
movsb
add
pop
cmp
xchg
jge
add
xchg
sub
add
push
push
cmp
insb
lcall
ja
int3
mov
mov
pop
xor
scas
fldt
insb
add
mov
or
xchg
fnstenv
les
add
sbb
jne
ljmp
cmp
nop
arpl
sub
xor
adc
fldt
xor
popf
mov
adc
ljmp
add
outsl
dec
je
arpl
xor
mov
pusha
fs
sbb
iret
xor
and
or
cmp
out
adc
shll
out
scas
adc
enter
mov
scas
xchg
push
ret
iret
out
or
fcomip
pop
lock
lahf
sbb
flds
mov
cmp
cwtl
sar
push
test
enter
scas
mov
das
xorl
imul
mov
cmpsb
decl
es
dec
dec
adc
and
shlb
adc
icebp
xor
mov
outsl
dec
or
sub
lock
pop
cmp
subl
sub
int
test
xlat
aad
sbb
cmpsl
xchg
lock
sub
push
lahf
cmpb
call
inc
mov
or
jmp
pop
popf
cmp
or
stc
fsubrp
daa
jbe
adc
jp
ret
add
dec
hlt
xchg
push
dec
pop
cs
adc
add
mov
and
fimuls
je
adc
cli
int3
cmp
inc
loopne
pop
dec
enter
sbb
loopne
sbb
mov
mov
push
sub
pop
insl
inc
jno
fdivrl
inc
or
and
mov
jmp
sub
sbb
sub
test
jp
sti
outsl
addl
mov
pop
push
js,pt
stos
cmp
sub
je
mov
aaa
cwtl
or
mov
mov
sahf
dec
push
sub
fldl
xorb
inc
mov
sbb
push
stos
gs
inc
adc
pop
pop
mov
ss
sub
or
push
mov
mov
add
pushf
push
xchg
push
test
jae
popf
daa
xchg
mov
jle
sub
in
mov
arpl
mov
lret
add
adc
xchg
mov
out
xchg
sub
insb
jb
fnsave
es
inc
ret
arpl
mov
insb
es
popf
dec
xchg
pop
sbb
cmp
ficoml
pusha
call
addr16
sub
mov
push
idiv
xchg
out
stos
dec
jne
aam
faddl
push
jb
insb
push
and
fsubs
sbb
and
xor
cmp
sub
add
push
xchg
push
pop
loope
les
insl
call
mov
mov
scas
mov
jae
mov
sub
push
std
std
push
cld
sub
and
mov
ret
mov
das
mov
pop
bound
into
sbb
push
js
loope
push
enter
or
sahf
pop
cmp
out
pop
cwtl
pop
push
adc
sahf
out
jnp
gs
fldt
aaa
and
out
testb
pushl
inc
xor
lcall
ss
and
loope
insl
lcall
pop
jne
test
repz
jne
pop
mov
mov
push
shl
mov
lcall
push
lea
or
aas
push
test
aas
pop
fists
movsl
xchg
sarl
call
dec
pop
inc
add
lods
jl
test
les
mov
cmp
mov
mov
fwait
mov
mov
sub
mov
js
stos
in
mov
adc
jnp
push
cmpsb
cld
popf
xor
jns
jns
xor
push
inc
jp
pop
push
mov
fdivs
sbb
xchg
cwtl
pop
pushl
inc
sbb
callw
adc
int
out
lock
jns
out
jne
mov
inc
hlt
mov
aas
fistps
dec
in
adc
inc
repz
scas
jmp
faddl
test
jno
popa
das
sub
sbb
cmp
cltd
cs
imul
xchg
ret
nop
and
adc
mov
xchg
mov
movsl
dec
sbb
add
fsubs
adc
cmp
out
push
jbe
adc
pop
pop
dec
jecxz
jo
push
rorb
sub
mov
in
lret
adc
imul
fstpt
sub
test
cmpsl
mov
cmp
pop
inc
mov
adc
mov
mov
insb
cmp
nop
aam
push
jle
das
xchg
fwait
mov
ret
add
sbb
mov
adc
jecxz
jae
inc
pushf
repnz
xchg
pop
dec
int3
push
lahf
filds
jb
push
or
add
bound
orl
lods
cld
or
push
nop
jle
mov
mov
mov
das
sbb
or
enter
iret
pusha
outsl
add
mov
stos
addr16
dec
mov
std
scas
test
adc
lea
add
pop
pop
hlt
mov
sub
in
sbb
loop
inc
and
mov
shlb
pop
das
push
cmpsb
cmpsl
adc
insl
mov
daa
xor
jg
bound
add
jne
ret
xchg
popa
lods
adc
or
xchg
mov
dec
bound
dec
xorl
imul
dec
cmc
outsb
insl
cmpsl
cmpsl
mov
subb
or
pop
xchg
sbb
pop
xor
std
jns
adc
jno
inc
popf
data16
jbe
lds
loopne
adc
iret
dec
rolb
sarb
frstor
aad
cmpsl
popf
jle
mov
loopne
jp
inc
push
jmp
pushf
dec
mov
cmc
xor
push
sbb
sub
repz
je
adc
add
xor
pop
or
call
repnz
out
sbb
push
cmpsb
das
or
jns
pop
xchg
outsb
lahf
inc
out
xchg
mov
mov
test
leave
inc
pop
roll
xchg
movsb
jne
andb
push
in
mov
xor
test
mov
rcll
pop
gs
cltd
out
adc
repz
inc
jns
cmpb
adc
test
sbb
mov
stos
addl
jne
pop
fisubs
adc
xchg
pop
pop
push
leave
clc
pop
adc
ljmp
push
mov
mov
call
push
ja
mov
addr16
aam
mov
or
mov
pushf
dec
adc
adc
cmp
mov
mov
test
testl
jno
adc
push
xchg
repz
cs
repz
testb
ds
shlb
cli
adc
mov
cltd
cli
add
lods
lcall
inc
lds
ss
pop
in
pushf
dec
loop
stos
jno
fnstcw
lods
daa
cmc
pop
fldl
push
mov
movsl
xlat
dec
lret
xchg
sbb
cmc
out
xor
push
std
in
rcrb
mov
xchg
ja
dec
out
adc
push
push
sti
daa
adc
lahf
mov
jno
xor
and
fbstp
xchg
xor
add
cmpsl
fistpl
inc
sbb
in
nop
iret
mov
rcll
mov
fcoml
insb
daa
mov
push
sti
arpl
xchg
setle
mov
jge
mov
call
push
push
movsb
push
mov
shlb
in
es
xchg
aam
cli
fisttpll
mov
mov
nop
adc
hlt
mov
or
jecxz
dec
hlt
ret
mov
inc
push
cmp
mov
roll
mov
out
pop
xchg
adc
add
nop
xchg
or
shl
and
gs
add
mov
mov
insb
pop
movsl
fcmovnb
setno
and
jnp
pop
pusha
pop
insb
jne
xor
cmp
cmc
lret
ds
pop
gs
push
mov
mov
mov
fwait
out
or
push
or
insl
xchg
cmpsb
pop
ret
leave
cmpsb
shrl
push
lods
imul
jp
jo
aaa
or
push
outsl
jecxz
clc
or
add
icebp
scas
into
mov
jg
cmpsb
mov
arpl
and
xchg
in
lret
inc
or
cmp
pusha
movsl
stos
jo
and
pop
and
jo
outsl
loopne
mov
decl
jl
rclb
in
ljmp
and
sbb
lods
and
int3
pop
adc
mov
push
mov
add
test
ret
mov
mov
inc
ja
lret
dec
dec
in
inc
aad
lock
scas
lds
imul
imul
jne
or
jno
xchg
loope
test
sub
int
jo
movb
loope
sub
inc
add
cmp
mov
mov
pop
pop
lods
in
pop
arpl
jecxz
loopne
scas
xchg
aam
mov
and
jmp
push
adc
jno
xchg
addr16
stc
mov
pop
pop
in
in
in
inc
mov
push
sub
jmp
or
adc
cmp
stc
cmpsl
pop
xchg
scas
je
outsl
test
int3
xor
les
into
cld
xchg
jge
push
push
dec
mov
add
push
adc
addb
nop
repz
push
adc
mov
bnd
dec
or
out
fistps
repz
cltd
lret
jns
imul
ljmp
pushaw
fbstp
add
je
add
test
nop
cmp
andl
and
cmpb
sbb
dec
mov
cli
pusha
xor
adc
sarb
hlt
jg
mov
push
in
mov
imul
pop
mov
cmp
cmpsb
adc
push
add
popa
mov
dec
pusha
adc
adc
ja
mov
cltd
mov
or
ret
sahf
cmc
mov
push
adcl
jb
push
adc
jb
fcomi
fisttpll
xor
sarb
bswap
nop
bound
adc
cmp
and
insl
xchg
or
xchg
sbb
bound
fdivrl
and
or
and
daa
sysenter
negl
faddp
add
es
int3
inc
sbb
dec
or
and
fldt
aam
andl
xchg
jl
and
sub
adc
lret
mov
ret
inc
scas
les
rclb
lahf
xor
ret
cld
iret
sub
jge
jo
pusha
pushf
push
negl
hlt
in
aaa
jmp
arpl
dec
mov
push
mov
enter
imul
mov
pop
pop
outsb
xchg
imul
stc
or
xlat
jg
jmp
sarl
pop
cs
jecxz
dec
insb
fwait
cltd
push
sti
movsb
jp
xor
lea
out
add
scas
mov
push
stos
in
cld
xchg
xor
repnz
dec
jae
movsl
dec
and
or
cmc
dec
mov
mov
jle
cmpsb
inc
ret
jns
inc
push
and
jp
adc
dec
adc
inc
data16
mov
fistpl
jle
xchg
xchg
and
cmp
pop
push
mov
push
rorl
mov
jecxz
sbb
movsb
push
cmc
mov
mov
pop
insb
xchg
xor
test
xchg
sub
add
fildl
sub
lret
and
cld
push
push
cmp
inc
movsl
loop
add
jb
mov
pop
jecxz
rcrb
imul
add
leave
push
loop
test
mov
lods
push
ror
int
pop
sbb
sbb
ss
inc
idivl
mov
fwait
pusha
enter
push
lock
jmp
xor
xchg
or
imull
into
mov
sbb
inc
sahf
fisubs
and
sbb
mull
call
sub
mov
sub
out
out
lds
and
mul
jnp
fimull
push
insl
push
jp
stos
sbb
loopne
int3
and
inc
stos
fxch
bound
mov
test
daa
add
cmp
dec
scas
fnstcw
int3
cmpsl
pop
rcrl
inc
shrl
negb
jecxz
dec
xchg
sarb
or
or
push
jl
inc
and
fmul
int3
fucom
icebp
xor
faddl
jmp
mov
xor
shrb
daa
cmp
test
test
mov
ror
push
loop
xor
ret
shll
mov
push
in
adc
out
dec
int
test
mov
xchg
jmp
mov
subl
mov
stos
mov
jb
add
jmp
mov
movsl
je
test
pop
ss
sbbb
inc
cmp
je
cli
loope
lods
aad
xor
adc
aad
mov
adc
ret
dec
test
mov
call
loope
mov
sbb
stos
sbb
mov
inc
xchg
pop
test
cmpb
inc
cmp
repnz
rorb
sti
cmp
repz
je
add
lret
inc
mov
loop
leave
jae
adc
adc
es
mov
clc
in
out
cltd
rorb
aas
jmp
lock
mov
in
movsl
iret
mov
cmp
jb
out
ret
push
lret
jmp
test
fmull
adc
jecxz
unpckhps
lret
outsb
dec
cli
mov
adc
fs
idiv
jne
mov
add
std
frstor
rclb
and
add
inc
test
mov
arpl
stc
and
sbb
ret
or
xorb
add
push
mov
push
mov
jp
mov
mov
movsb
sbb
aam
xchg
push
rcll
xor
xor
icebp
shrb
into
repz
adc
xor
push
addr16
xlat
ficoms
push
clc
and
stos
push
in
std
outsl
sbb
add
dec
lahf
jg
push
sub
mov
cmp
outsb
mov
add
sbb
sub
mov
cmp
or
fwait
mov
sub
mov
jg
lret
mov
imul
sbb
or
xor
mov
outsl
pop
cmpsl
add
leave
inc
out
sub
mov
or
mov
stos
mov
mov
or
cmp
pop
lahf
mov
mov
mov
inc
das
sub
aam
mov
or
scas
mov
icebp
sbb
in
cld
lods
fcomps
mov
cmp
xchg
mov
or
lods
xor
adc
lret
push
sahf
and
push
sbb
mov
lods
sbb
stos
iret
pushf
jge
mov
addb
mov
pop
in
sbb
movsb
sbb
punpcklwd
mov
insl
cmpb
mov
adc
mov
dec
push
repz
and
stos
lret
mov
pop
xor
out
lcall
enter
push
jl
addb
mov
mov
adc
int
mov
sbb
fdivr
jns
push
add
add
jo
arpl
insb
cmp
xchg
xor
fdivr
cmc
and
adcl
adc
adc
imul
das
push
sub
mov
xchg
push
cmp
xor
mov
xor
xlat
popa
pop
cs
lods
cmpsb
dec
pusha
insb
cmp
jp
mov
in
mov
fisubs
cmp
bound
mov
cmp
pop
repnz
xchg
insb
jle
les
push
pop
fildl
sub
pop
jle
repnz
inc
in
mov
mov
movsl
xor
lods
pop
and
gs
jecxz
sahf
push
idivl
lock
push
ret
mov
mov
xchg
push
sub
adc
dec
sub
xor
fsubr
add
movsl
jecxz
jl
dec
add
into
sar
add
xchg
ja
jae
scas
insl
xchg
jecxz
aaa
sub
in
push
lods
pop
or
add
mov
xchg
movsb
dec
out
push
jge
aad
sti
jmp
sbb
ljmp
test
cs
mov
jae
pusha
gs
jmp
sahf
shll
fmulp
push
and
xchg
mov
in
push
xchg
pop
daa
push
sub
test
orb
xor
scas
rclb
and
movsb
arpl
jnp
mov
push
sub
bound
add
imul
sbbl
loope
inc
bound
push
aad
sub
inc
icebp
pop
bswap
jp
sub
lods
push
xchg
loopne
loope
lods
int
and
xchg
push
mov
mov
shlb
gs
js
iret
push
inc
cmpsl
xchg
vxorpd
pop
and
jecxz
jmp
fcomi
scas
inc
repz
mov
xchg
add
push
imul
inc
mov
lods
iret
fbld
adc
insl
in
inc
cmp
jae
adc
adc
push
aad
shrl
cmp
pop
xor
or
add
lods
xchg
push
loop
nop
xchg
and
jbe
int
daa
std
xchg
dec
sti
pushf
loopne
test
inc
xchg
mov
jno
xchg
cmpsl
lea
shrl
aaa
xlat
jp,pn
test
arpl
cmp
clc
dec
or
or
icebp
inc
or
xor
jb
repz
adcb
mov
lock
fcmovbe
imul
lock
adc
push
sti
xchg
movzbl
mov
sub
js
adc
pop
dec
lods
push
inc
push
and
xorl
push
aad
dec
out
addr16
pushf
sti
fadd
adc
mov
pminub
pop
icebp
pop
aas
leave
lods
push
xchg
bound
dec
sbb
ss
mov
push
call
aam
xchg
or
out
outsb
in
rcrl
stos
repnz
test
adc
aas
lock
mov
cmp
cmc
sbb
into
sti
and
mov
invd
cltd
fsubrl
sahf
movsl
fcom
insb
xchg
test
daa
xor
test
shrl
and
xchg
out
mov
adc
out
push
loop
sub
mov
jo
push
mov
out
les
pushf
pop
jp
fdivr
jb
xor
mov
add
cmp
fstps
dec
les
jl
or
dec
mov
adc
sbb
rolb
movsl
aaa
push
stos
inc
shrl
jne
jno
xchg
mov
iret
ds
sub
inc
mov
sbb
sbb
stos
or
loop
lods
jg
xorl
call
mov
pop
into
xchg
ss
into
dec
int3
mov
cli
psllw
cltd
dec
stos
orl
std
add
mov
xor
clc
jno
sbb
fs
das
inc
push
dec
push
test
push
loopne
mov
sub
adc
jnp
cmp
fwait
mov
jo
cmpsb
hlt
divl
pop
jmp
in
repz
push
mov
pop
stc
mov
push
loop
dec
mov
fcoml
mov
jle
mov
xchg
lods
daa
dec
add
sahf
loope
stos
ds
sti
mov
cwtl
in
inc
shlb
mov
enter
out
mov
mov
mov
xchg
std
js
cwtl
mov
loope
aad
sub
pop
dec
test
inc
testb
cwtl
xchg
int
inc
mov
xlat
fdiv
xchg
push
lcall
bnd
dec
int3
shl
shll
fwait
jecxz
shl
mov
and
push
shlb
popf
andl
psrld
push
enter
jae
jnp
mov
jo
xor
cmp
das
aas
das
xor
pop
scas
adc
push
jbe
xor
mov
stos
cwtl
stos
mov
insl
scas
fnsave
sub
pop
add
test
loope
pushf
pop
mov
mov
pop
xor
clc
outsl
fcomps
inc
mov
or
push
mov
mov
jno
push
aam
mov
int3
aaa
push
mov
in
cmpsb
ja
pop
inc
popf
lock
adc
lcall
pop
das
and
cwtl
fwait
jge
lcall
jae
xlat
pop
lahf
sahf
insl
std
mov
sahf
inc
mov
adc
insb
dec
cs
push
push
xorl
mov
adc
pop
mov
iret
aad
repz
xor
mov
sbb
mov
dec
in
add
dec
out
mov
rcl
push
popf
or
xor
xchg
pop
cmp
cmp
test
cmp
rolb
pop
mov
clc
aad
push
push
push
pop
rclb
xor
pop
clc
fbld
sub
and
adc
loop
addr16
mov
cmpsb
inc
aaa
stos
pusha
and
jg
fs
push
outsl
push
adc
xor
aas
cltd
lcall
and
fildll
ret
mov
add
adc
mov
mov
aaa
imul
outsb
in
xor
xchg
cmp
push
lahf
imul
jnp
jmp
mov
jno
push
jns
and
bound
int
jnp
stc
insb
lods
fldenv
in
enter
push
sub
sbb
mov
add
push
pop
pop
mov
ljmp
ds
aaa
mov
inc
pop
sahf
incl
mov
xchg
shr
pop
pop
bound
add
outsl
out
test
add
fcompl
lcall
mov
lret
pop
mov
xchg
in
mov
loopne
jae
xchg
popa
inc
xchg
aam
adc
mov
xchg
inc
lock
xlat
mov
cs
or
pop
ja
gs
or
test
daa
fsub
mov
adc
adc
sub
mov
sub
or
sbb
lock
dec
xchg
fidivrs
jmp
sub
xchg
xchg
inc
xor
push
add
xchg
push
rcll
aad
inc
daa
jle
in
sub
mov
cmc
jge
jp
iret
and
xor
imul
dec
inc
scas
sahf
stos
sbb
enter
fbstp
sarb
jecxz
dec
enter
aad
dec
mov
loopne
dec
pop
jmp
popl
stos
mov
add
xorb
shlb
int
hlt
gs
add
rorl
cld
xchg
fwait
repnz
ljmp
sti
or
cmp
jno
xor
insl
mov
inc
inc
xor
fs
scas
rorl
dec
fsubrp
sub
out
aad
jg
push
add
mov
lcall
adc
test
gs
adc
out
nop
pop
ss
jo
mov
in
push
fisttpl
lea
or
fucomip
popf
mov
adc
mov
jae
add
ds
push
and
std
jle
jnp
inc
dec
repz
rcrl
adc
rol
sbb
dec
pop
ffree
xchg
ljmp
dec
inc
xchg
pop
aas
mov
xor
cmp
outsl
lret
pushf
cli
pushl
sbb
push
dec
sub
mov
and
mov
cwtl
nop
fistpl
adc
xchg
sub
mov
adc
lret
mov
push
divb
fcoms
or
nop
cltd
adc
pop
pop
mov
mov
notl
sbb
jns
xchg
dec
mov
outsb
xlat
fnstenv
test
mov
xor
inc
aaa
push
xchg
mov
adc
cs
sahf
mov
sbb
test
mov
sub
faddl
test
and
xchg
enter
push
lds
sahf
mov
add
or
out
flds
lahf
js
and
xor
mov
mov
cmpsl
mov
test
jg
outsb
inc
cmpsl
inc
into
sub
xchg
repnz
test
lahf
int
sbb
ljmp
push
push
outsb
mov
jg
mov
out
and
jmp
add
mov
lahf
push
lock
cwtl
aas
stc
jle
fiadds
inc
mov
lcall
fdivs
movsb
sub
aad
mov
jge
lcall
push
or
inc
add
or
mov
cmp
push
lds
pop
mov
add
adc
adc
and
sbb
rolb
std
mov
out
lods
cltd
xchg
dec
aad
ja
rol
and
movsl
cli
xchg
jmp
dec
add
xchg
jg
divl
pushf
stc
ds
test
loopne
inc
push
outsb
xor
insl
cmp
std
cmpsl
or
out
fmull
push
adc
xchg
mov
adc
sbb
pop
lods
push
push
subb
stos
sbb
aaa
je
mov
in
cmpb
insl
sub
jl
sub
sbb
jae
rolb
dec
mov
mov
bound
jo
lahf
add
jne
cmpsl
scas
fs
stos
aaa
adc
aaa
jns
bound
xor
mov
out
decl
sub
xchg
add
or
pop
icebp
xor
in
xor
les
lret
push
mov
pusha
and
ss
dec
mov
mov
lret
sti
int3
pop
pop
pop
sbb
in
pop
jns
sub
imul
loop
cmp
sub
cmp
nop
push
pop
imul
daa
sub
mov
call
mov
ret
daa
mov
lahf
ficoml
lods
adc
adc
adcb
pop
shlw
jmp
mov
and
ja
in
aam
outsl
lods
sub
xor
jb
push
or
out
sub
jmp
xchg
dec
fimuls
pop
pop
or
lcall
rcrw
adc
gs
mov
adc
test
or
pop
xchg
mov
inc
sbb
inc
sub
sub
jnp
jmp
pop
andl
pop
mov
cld
jl
jbe
test
hlt
in
shr
popa
inc
fiadds
ret
mov
stos
nop
fwait
sub
pushf
fcoml
aas
repnz
loopne
or
out
mov
jb
push
inc
scas
or
and
or
cmp
jbe
xor
notb
lea
mov
inc
push
in
lods
jbe
sti
xor
jae
jb
pop
push
aam
dec
cli
xor
scas
sub
jae
sbb
jno
cmp
push
push
pop
ret
sbb
jo
xchg
int
frndint
mov
jae
mov
add
lahf
or
jl
fadd
ss
xor
add
dec
inc
mov
adc
fdivp
in
add
adc
xor
lock
mov
movsl
sarl
push
cld
pop
add
bound
dec
mov
dec
shlb
adc
sti
push
aad
imul
xor
leave
jne
enter
or
add
mov
mov
push
es
and
mov
dec
loop
fs
sbb
shll
push
sbb
clc
mov
sub
dec
out
sub
std
imull
into
dec
jl
adc
sbb
jge
sub
push
fists
push
push
adc
int3
xor
pop
scas
xchg
fsubrs
push
cmpb
jnp
jnp
das
sbb
std
xorb
movsb
mov
movsl
notb
imul
inc
inc
or
jmp
sbbl
mov
and
push
push
jle
fstps
inc
xchg
pop
mov
or
dec
add
mov
dec
xchg
adcb
adc
jo
mov
xor
aad
mov
cmp
mov
es
daa
inc
cmp
imul
adc
xor
jle
pushf
mov
sbb
inc
scas
jb
decl
add
add
dec
jecxz
shrl
cwtl
push
cld
mov
fcoms
xor
ds
mov
loope
cwtl
repz
mov
pop
xor
dec
or
jo
mov
rorl
push
int3
es
rcl
mov
dec
loopne
jg
jmp
mov
lds
adc
sub
push
mov
sahf
jmp
inc
inc
fcomi
js
movsb
ror
test
push
leave
jecxz
push
add
mov
rol
push
fwait
sub
push
out
leave
fs
mov
jnp
sbb
test
pop
xchg
insl
je
inc
and
sub
daa
icebp
mov
add
dec
cmp
pusha
dec
mov
arpl
sub
pop
sbb
out
notl
int
loop
ret
jne
cli
jl
jle
ljmp
xchg
push
mov
cmpsl
rcll
pop
or
dec
push
movsl
push
jp
xchg
jbe
cmpsb
mov
sub
push
out
sahf
sbb
out
mov
sub
jno
adc
lahf
scas
mov
mov
es
push
test
cmp
jo
cmp
lret
adc
and
fstpt
jbe
pop
cmpsl
push
lods
sbb
xchg
sub
insl
int3
adc
mov
enter
jp
pop
pop
rolb
cmp
js
mov
add
mov
fucomi
ret
mov
loop
xchg
outsl
orl
jns
in
ds
aam
inc
loope
js
aad
jge
ds
jp
cmpb
xchg
dec
sub
fucomp
lcall
ljmp
or
add
aaa
cmpsb
fcomi
push
je
xor
je
xchg
add
aas
mov
push
insb
xchg
inc
and
lretw
arpl
mov
sbb
mov
addr16
rclb
das
in
mov
fidivrl
or
icebp
aam
aam
or
lds
popf
repnz
pusha
push
lock
inc
inc
popa
sahf
ja
push
cmpsl
lret
sarb
in
mov
hlt
jp
sbb
mov
add
popa
aaa
pop
mov
cmp
inc
xchg
insb
sub
imul
inc
sbb
and
mov
cmp
sub
jg
and
push
adcb
lock
ds
xchg
jmp
mov
push
pusha
sbb
stc
insb
push
jne
jno
sbb
jmp
test
aas
mov
stc
mov
pushf
fldl2e
loopne
sti
rcll
fadds
daa
into
cmp
jo
and
aaa
data16
mov
mov
scas
out
nop
mov
sub
cmp
imul
psubq
aam
aad
sahf
in
in
dec
dec
jne
mov
stc
jno
lock
arpl
iret
cmpsl
xchg
dec
and
fisttpll
xchg
je
shr
or
test
or
push
mov
mov
repnz
int3
lcall
jne
pop
sbb
wrmsr
xchg
sbb
mov
mov
popf
jge
inc
dec
fdiv
and
mov
push
xor
jb
lock
jp
lods
mov
inc
pop
scas
inc
repnz
mov
or
xchg
dec
cmp
gs
jmp
roll
sub
sbb
adc
lea
add
pop
sarb
outsb
pop
testb
filds
sub
mov
ret
cwtl
orb
mov
mov
cltd
shlb
mov
std
jo
add
adc
fwait
jb
fisttps
xchg
aad
fists
shlb
movsl
and
loope
pop
lret
mov
mov
and
sbb
or
push
ljmp
jmp
movsb
test
lcall
push
lret
test
sub
decl
inc
imul
push
jb
sbb
add
xchg
sar
iret
imul
pop
aam
in
movsl
outsl
lock
in
sbb
xor
aaa
insl
ret
mov
cmp
or
push
jmp
sarb
addr16
movsl
xlat
sub
outsl
mov
xchg
dec
jg
push
mov
mov
sbb
xlat
jae
jmp
push
adc
nop
fcompl
adc
std
inc
sub
push
lea
inc
loop
test
scas
jge
add
lods
mov
or
xor
or
adcl
cmpsb
cmp
jl
dec
jbe
addl
jl
push
and
lds
cs
cmpsl
inc
adc
fwait
push
push
nop
mov
imul
pushf
test
loopne
sub
xor
aam
out
xor
imul
push
mov
push
pop
mov
mov
icebp
pop
dec
cmp
dec
imul
inc
pop
or
cs
lret
inc
ja
push
fiaddl
repz
aas
inc
sub
xchg
lret
xor
pop
dec
mov
xchg
sahf
pop
or
out
lcall
pushf
and
adc
jo
push
dec
cmp
call
jg
aad
xchg
ret
inc
mov
xlat
inc
mov
scas
mov
pop
adc
and
xchg
mov
bound
aas
fidivl
fucomip
mov
and
adc
jo
repz
push
scas
pop
paddusb
fsubr
aas
cmp
cwtl
mov
into
adc
loop
or
stc
lcall
xchg
add
ja
ljmp
call
sbb
out
ret
vmovlpd
xor
and
jns
insl
fucomp
loope
cld
xor
lcall
imul
pop
es
inc
cld
aad
mov
xchg
loop
aaa
leave
push
out
scas
cwtl
arpl
pop
test
jae
push
les
dec
scas
movsb
mov
xchg
mov
xchg
dec
sub
dec
mov
jns
sub
add
pop
adc
ss
or
pop
cmp
movsl
ret
mov
test
mov
push
pop
push
push
enter
ficoms
test
pop
js
or
std
cmp
pop
imul
sbb
push
subl
sbb
and
pop
test
in
sub
pushf
sub
mov
inc
hlt
andb
notb
std
mov
xor
test
addb
add
ret
das
notl
adc
cltd
push
mov
push
leave
loop
and
lods
scas
inc
pop
mov
ja
bound
or
xor
stos
adc
inc
flds
jmp
outsl
jp
jge
pop
in
js
sub
xor
out
idivb
test
inc
leave
in
out
push
pop
xchg
adc
xchg
cmp
xor
mov
ret
jns
idivl
push
sub
mov
mov
and
xchg
push
lods
and
pop
test
fimull
addr16
ficoml
pop
fwait
aaa
pop
inc
lods
pop
inc
dec
xor
inc
sbb
ret
adc
jno
sbb
xchg
sub
mov
sub
jb
dec
xchg
pop
jnp
scas
fucomi
inc
mov
and
icebp
push
in
jle
jge
xchg
movsl
sub
shrl
mov
in
inc
repz
mov
adc
lods
popw
mov
jl
pop
pop
in
orb
sub
lea
xlat
adc
push
ss
lret
mulb
mov
jnp
adc
adc
loope
icebp
inc
data16
inc
in
mov
mov
pop
push
in
loop
add
inc
jecxz
cld
mov
add
rorl
insb
pop
add
cmpl
loope
daa
mov
fs
adc
cmp
or
cld
insl
lcall
jae
push
cmpsb
pop
rclb
lcall
dec
push
xchg
or
mov
mov
into
call
jo
cmpsb
pop
mov
mov
push
popa
cli
jb
mov
mov
dec
addl
js
mov
jae
dec
subb
xchg
andl
cmp
std
popa
icebp
mov
cmp
cld
sarl
cmp
mov
mov
fstpt
rol
dec
mov
mov
js
test
es
push
fsts
pop
jbe
insb
mov
xchg
adc
xchg
scas
xchg
lds
outsl
rorl
addb
mov
pop
mov
mov
mov
push
icebp
cs
bsf
jno
out
inc
shl
sbb
xlat
pop
fimuls
dec
jmp
inc
sub
rolb
aad
fsub
mov
ss
fwait
jl
aam
lret
fcoml
aad
sbb
test
dec
sub
adc
jnp
jb
mov
cld
xor
and
cmp
arpl
xor
push
jmp
in
inc
popf
adc
or
mov
xchg
lds
pusha
mov
cs
outsb
or
or
xchg
or
fmulp
jp
or
mov
add
cpuid
jne
icebp
add
imul
pop
add
cwtl
xchg
xchg
xor
insb
bound
adc
cmp
add
roll
test
in
cmc
xor
push
jo
add
repnz
enter
andb
pop
or
jecxz
nop
out
push
cmpb
lret
xchg
mov
mov
insb
lahf
stos
mov
cmpsl
xchg
xor
mov
int3
add
repz
test
cld
dec
pop
data16
aad
add
rcrl
jns
jne
xchg
push
subb
xchg
imul
mov
lret
push
iret
mov
pop
mov
inc
dec
mov
fs
ss
mov
xor
mov
rclb
outsl
mov
repnz
into
ds
cmp
xchg
iret
fadds
mov
lea
adc
pop
sbb
cwtl
pop
ss
push
jp
lcall
xchg
arpl
jp
add
push
or
das
loope
mov
adc
mov
pop
int
xchg
cltd
xchg
in
lods
pop
lods
mov
sub
cmp
setno
das
dec
loop
mov
fldcw
jns
xor
imul
xor
movsb
push
ret
sbb
adc
mov
inc
sbb
xchg
icebp
test
dec
mov
ss
sub
iret
sbb
add
mov
cmpsb
in
into
stos
sub
inc
gs
cld
lds
cmc
mov
mov
fstpt
rsqrtps
mov
out
stc
test
outsl
jne
dec
xchg
pop
lahf
cmp
push
std
test
jb
and
aaa
jle
xchg
pop
imul
jg
mov
xchg
dec
pop
jg
xchg
and
push
xchg
xor
lret
jne
pop
stos
jb
jbe
adc
fdivrl
adc
cmp
dec
jl
lods
add
imul
sub
cmp
xor
pop
mov
jne
sub
xchg
push
jecxz
inc
leave
leave
addr16
stc
mov
leave
lret
fdivr
mov
js
mov
xor
xor
push
loope
daa
enter
xlat
test
dec
push
add
and
out
imul
iret
jp
out
aas
xor
mov
xor
int3
xchg
or
cmp
shlb
adc
inc
mov
jo
inc
dec
mov
xor
rcll
testb
mov
dec
xor
mov
xor
out
icebp
test
sub
pop
sub
add
push
mov
scas
mov
mov
popa
sti
push
stos
push
push
and
movsl
clc
dec
xchg
test
push
rcrl
adc
outsl
pop
cli
push
xor
push
popa
out
xchg
ret
adc
pop
push
aad
shl
pop
mov
push
rorb
add
shlb
pop
fists
and
mov
loop
jo
mov
lea
sbb
cs
adc
mov
jne
sbb
mov
dec
iret
test
cmpsl
test
ja
mov
or
and
into
test
add
sbb
in
aad
bound
nop
decl
xchg
mov
cmp
pop
jecxz
xchg
stos
call
push
mov
mov
ret
jns
push
in
movsb
lds
orb
fnsave
and
jecxz
dec
mov
movsl
mov
in
cmpsb
mov
xor
rol
mov
xchg
call
and
push
jle
movsl
push
add
push
dec
aad
dec
jg
push
pushf
gs
je
ja
cmp
nop
loope
aaa
cmc
ds
mov
dec
popa
push
mov
or
inc
bound
mov
inc
add
ljmp
mov
int
push
push
pop
sub
pop
inc
jbe
loopne
dec
cs
in
stos
add
inc
jp
push
loop
push
scas
cmp
sbb
jno
in
enter
add
and
adc
pop
push
hlt
jno
js
outsl
enter
mov
je
fs
sbb
dec
pop
and
add
mov
test
sub
add
subl
js
out
and
fldenv
cld
fcomi
mov
dec
stos
add
pop
sti
push
icebp
jle
stc
cli
call
jae
mov
enter
cmp
jmp
enter
adc
int3
push
add
cmpsb
jp
sub
jmp
jne
insl
mov
adc
sub
sub
cmp
adc
dec
add
pop
rorl
shlb
xor
rorb
xchg
pusha
push
lcall
inc
jne
orl
xchg
mov
lds
and
push
in
sub
push
sub
cmp
out
gs
jecxz,pt
stos
mov
mov
and
xlat
mov
inc
aaa
sahf
das
icebp
roll
nop
push
lcall
mov
fldl
push
xor
ret
data16
jp
mov
cmp
jmp
outsb
dec
mov
out
mov
sbb
adc
and
scas
lcall
push
push
jo
jnp
jbe
lret
popf
or
jne
dec
es
hlt
in
xchg
std
adc
push
cmp
mov
aas
sub
jo
sub
cmp
add
repz
ds
clc
mov
and
cltd
mov
cmpsb
idiv
inc
and
sti
push
lds
imul
scas
ja
cs
add
xchg
into
cltd
push
xor
or
push
sub
cmp
sbb
in
dec
out
leave
test
mov
ss
lahf
ljmp
aas
loop
rorl
pop
push
mov
push
mov
and
pushf
shlb
xor
jg
jge
cmpsl
shr
fwait
pop
in
ds
xchg
sbb
out
fistpll
push
in
cmp
out
leave
ljmp
mov
int
jl
pop
fdivr
mov
jp
sub
aaa
push
jmp
fisubrs
data16
hlt
stos
jp
pop
and
mov
rol
push
ds
mov
cli
fdiv
inc
lcall
dec
xor
pop
iret
push
cli
mov
push
imul
jp
cmp
adc
fdivrl
add
pop
mov
push
pop
popa
imul
add
sbb
aas
sti
mov
lret
in
mov
test
sub
mov
push
push
pop
mov
shr
rcr
loopne
jle
dec
addr16
cmp
outsb
aam
outsb
out
xlat
xor
mov
xchg
stc
inc
xchg
sub
les
popa
movsb
incb
dec
and
mov
test
sahf
sbb
mov
out
pop
data16
lock
mov
in
adc
daa
add
addr16
movsb
lret
sub
pop
je
dec
loopne
or
xor
inc
lret
push
xchg
jno
or
add
inc
inc
mov
aas
push
out
scas
in
ret
add
leave
jge
dec
xchg
jo
pop
mov
ficomps
xor
jg
add
add
mov
ds
stos
pop
adc
cld
and
push
out
movb
jns
xchg
mov
popf
lods
inc
out
loop
inc
xchg
push
sbb
ror
jmp
ret
aam
pop
sub
imul
insl
mov
mov
xchg
inc
mov
lea
stos
add
jae
lcall
mov
cld
mov
idivl
dec
sbb
dec
dec
mov
mov
scas
packsswb
or
mov
hlt
mov
lods
sbb
inc
lea
cltd
push
loope
cmp
das
dec
add
insb
sub
and
jns
sbb
imul
addr16
out
jbe
clc
pop
lods
push
ljmp
mov
lea
or
mov
cwtl
pushf
je
cmc
hlt
aaa
lods
adc
pop
inc
mov
imul
or
aam
or
xchg
mov
sub
mov
dec
int
or
mov
mov
roll
mov
fcmovnb
stos
cwtl
adc
jbe
mov
mov
shll
bound
or
pop
es
push
sub
out
mov
mov
mov
adc
test
test
lcall
das
inc
out
imulb
idivb
lcall
fistpll
xlat
lds
iret
cmp
mov
push
arpl
pusha
mov
or
or
popa
int3
inc
xorl
ljmp
cmp
rcrb
mov
rcrb
repnz
in
mov
xorb
sbb
and
jbe
mov
ljmp
fistl
sbb
out
lahf
in
outsl
lret
jmp
xor
scas
in
loopne
or
or
cmp
fld
int3
loop
ja
adc
xor
rcr
cwtl
pop
mov
les
ja
sbb
or
jae
hlt
stos
shrb
inc
jns
xchg
or
pushf
jb
shrl
jns
iret
sbb
enter
ror
pop
xchg
fldcw
push
aas
jno
xchg
decb
out
jno
mov
pop
ds
mov
xor
push
jge
xor
mov
daa
and
orb
pop
or
test
loop
adc
ret
sub
fstps
in
push
or
jg
je
pop
mov
mov
stos
inc
dec
movsb
and
push
jae
dec
push
iret
test
xchg
les
jmp
push
cmp
fbstp
and
in
xchg
jb
std
mov
mov
dec
popa
cmc
mov
mov
cmp
std
xchg
je
mov
xor
mov
in
add
push
mov
popf
mov
mov
pop
call
mov
sbb
bnd
scas
dec
out
sahf
jo
lcall
push
les
scas
movsl
ds
lods
scas
fisubs
sahf
loop
cmpl
stos
push
xchg
mov
out
jg
int3
jg
cmc
and
cmp
insb
dec
push
dec
bnd
stc
cld
cmp
ss
das
aam
fidivl
stos
mov
mov
xor
dec
lret
les
push
adc
mov
pusha
pushf
fwait
jae
pop
jb
sub
pushf
stos
fisttpl
lret
push
xor
and
push
adc
mov
mov
xchg
xor
add
dec
icebp
gs
cld
adc
push
mov
xor
mov
loop
loopne
mov
sbb
cltd
add
and
mov
fbld
lods
fiadds
jle
cmp
pop
or
fs
repnz
dec
cmp
adc
in
mov
push
xchg
lcall
test
xchg
popf
xchg
flds
das
mov
xchg
std
sbb
iret
lock
pop
sarb
rcrb
inc
jp
pop
scas
ret
dec
rorb
dec
and
lds
dec
repnz
aas
add
imul
leave
mov
mov
xchg
lods
and
push
scas
dec
test
pop
je
dec
insl
sub
push
jnp
imul
push
mov
out
mov
xor
adc
xor
negb
xchg
punpcklwd
test
cld
add
sub
pop
je
dec
inc
shl
cmp
dec
mov
ss
jl
stos
popa
inc
test
repz
aad
lret
clc
inc
adc
or
ljmp
mov
ljmp
adc
cmc
mov
push
mov
sub
aas
pop
addr16
sbb
adc
inc
or
adc
and
mov
es
jmp
addr16
stos
js
mov
xchg
pop
dec
dec
xor
xchg
fcom
ret
add
sbb
pop
mov
or
mov
mov
push
lods
xor
aas
lret
sbb
call
dec
scas
jnp
cmpsl
and
hlt
fstps
inc
pushf
mov
add
pop
lcall
mov
adc
fisubrs
mov
lods
sbb
clc
outsb
sbb
dec
jp
pop
inc
or
mov
orl
push
sbb
inc
scas
fs
and
ljmp
lahf
pop
mov
and
push
and
sbb
mov
loopne
adc
bound
jb
fndisi(8087
inc
cmp
arpl
xor
lret
cmc
adc
mov
push
and
xchg
mov
or
inc
cmpsl
mov
xchg
cwtl
test
sbb
mov
or
push
xlat
dec
or
xor
pushf
stc
lea
fwait
imulb
dec
js
pop
aaa
pop
mov
mov
into
lods
idivl
popa
sbb
test
add
mov
push
shrb
xchg
adc
mov
mov
push
sti
pop
aaa
lret
jp
fistl
addr16
xchg
subb
rcll
test
mov
mov
je
and
add
dec
in
adc
mov
jne
mov
push
pop
jne
xchg
insb
aam
clc
aas
mov
add
inc
pop
mov
pop
lcall
in
js
sbbb
push
or
inc
insl
shlb
leave
jp
xchg
pop
jo
aas
hlt
scas
xor
xor
inc
jns
push
or
sarl
sub
mov
mov
loope
jo
sahf
cmc
inc
stc
jno
mov
aam
pusha
ja
mov
add
scas
addl
int
or
add
xor
mov
sub
lods
pop
js
loop
dec
xor
pushf
test
pop
jns
xchg
jmp
pop
fprem
stc
cmpsl
ret
lret
inc
dec
popa
test
leave
fsubl
test
pop
movsb
sub
aaa
fndisi(8087
sbb
cmp
or
cmp
pmullw
adc
mov
arpl
test
pop
les
or
js
push
inc
sahf
lods
dec
repnz
call
xchg
cmp
mov
inc
repz
inc
sarl
mov
aad
or
dec
xorb
fists
mov
ljmp
push
pushf
stos
jle
mov
imul
push
hlt
mov
int3
andb
xor
test
arpl
cld
push
inc
xchg
fsubrl
push
add
ror
xchg
cli
out
ljmp
jno
ds
loop
loopne
sub
repnz
cmpsl
jmp
loop
inc
movsb
or
push
imul
xor
sahf
push
jo
ja
cmp
cmp
out
jmp
xor
push
fistpll
fcmovnu
cmp
cmp
shrl
test
push
jnp
pop
lcall
divb
in
scas
leave
out
hlt
inc
and
mov
hlt
lods
sub
pop
pop
push
test
push
les
xor
and
cmp
fsubrl
jp
gs
aaa
jnp
out
ret
mov
jecxz
cmp
and
iret
jns
push
or
adc
mov
push
jb
and
mov
mov
nop
pushf
lret
leave
fs
orps
pusha
inc
out
jp
sub
sub
sahf
pushf
loopne
xor
fimuls
rcpps
scas
push
dec
lret
add
rcrl
xor
insb
inc
xchg
mov
loopne
push
pushf
mov
mov
push
pushf
cmp
adc
test
pop
imul
sbb
testb
leave
xor
push
xor
fidivs
xchg
lcall
jmp
stos
popf
aad
jae
fisubrl
mov
jne
sub
les
mov
mov
or
add
rclb
test
jle
fwait
mov
xchg
jge
mov
addb
sarb
insl
add
lock
mov
mov
push
and
mov
idivb
sbb
cmp
xchg
notb
sarb
mov
pushf
jbe
lcall
rorl
adc
gs
aad
fistl
stos
test
push
lahf
addr16
sub
into
push
jno
inc
nop
mov
sbb
sub
scas
or
fs
aam
xor
push
repnz
adc
das
xor
xchg
jg
mov
cli
and
inc
xor
addr16
pop
xor
rorl
lods
mov
cmp
mov
aas
mov
push
in
mov
lahf
add
insb
and
mov
sub
aaa
cwtl
es
cli
aad
cmpsb
pop
mov
sbb
test
push
scas
push
jle
test
fistl
call
imul
push
lock
xor
fxch
sub
and
mov
push
adc
loop
popf
jp
jge,pn
cmpsb
scas
in
mov
ret
cwtl
cltd
sub
fcmovb
adc
inc
lahf
xor
loope
adc
orb
test
jne
and
xor
xchg
shrl
xchg
inc
cld
push
fidivs
xor
shrb
and
adc
in
jae
test
rcll
outsl
jae
cmp
mov
in
hlt
push
cmp
pop
int3
test
orl
dec
loopne
sub
fldenv
fmuls
andb
cmpsb
in
mov
pusha
mov
xor
cmc
cmpl
and
push
aam
shr
mov
test
cld
loopne
ret
jnp
add
adc
data16
inc
int3
imul
and
test
inc
xor
adc
pop
out
ret
push
and
pop
lret
gs
sti
sbb
xor
dec
pop
out
mov
aam
lahf
sbb
lret
movsl
es
fisttpll
inc
mov
inc
jb
cwtl
fsubrl
sbb
cmc
sbb
lea
fstl
std
pop
inc
sbb
sbb
ds
shl
mov
xchg
add
jnp
mov
icebp
ja
ret
aad
test
dec
repz
inc
lods
lret
loopne
inc
stos
ret
in
jl
sbb
sub
pusha
inc
or
inc
adc
sub
repz
adc
xor
mov
clc
arpl
mov
xchg
ret
xchg
jno
push
cmp
sub
and
mov
shl
out
adc
mov
lea
shlb
fistl
pusha
mov
test
pop
dec
cli
mov
adc
pop
mov
jmp
add
loope
jecxz
inc
in
iret
mov
sahf
dec
iret
and
inc
lret
dec
mov
fldcw
shll
int3
inc
cmp
fwait
inc
mov
or
cmpsb
cs
gs
lahf
mov
pushf
cmpl
xor
mov
lcall
leave
add
xor
sahf
rolb
ljmp
sub
iret
ss
dec
rorl
adc
inc
add
nop
pop
sub
roll
sbb
pop
cmp
mov
leave
xchg
sti
xor
xchg
jmp
cli
jl
lods
xchg
aam
add
aaa
mov
out
mov
cmp
xchg
popa
int3
scas
xchg
jl
cmp
sub
sbb
and
mov
jmp
mov
push
lods
shrl
jae
push
aaa
cli
cltd
popf
xor
xchg
xor
mov
pop
xor
fyl2x
mov
mov
lret
sbb
xor
movsl
outsl
insl
jge
pop
clc
push
test
nop
dec
jl
xchg
cmp
inc
or
mov
enter
sbb
lods
aam
subb
scas
hlt
xorl
cmp
lea
adc
shr
pushf
xlat
in
loopne
cs
mov
enter
scas
and
or
in
movsb
scas
call
jbe
adc
outsb
cltd
in
push
cli
jmp
and
push
fcompl
cmpsb
cmp
mov
or
xchg
push
pop
pcmpeqd
ja
jle
mov
arpl
inc
ret
cld
mov
push
rorb
push
ffreep
ds
stos
mov
pop
dec
pop
lock
inc
int3
out
sub
mov
lods
sbb
xor
jg
out
inc
pop
and
arpl
dec
addl
jp
push
xor
or
dec
jb
cwtl
pop
cmpsl
scas
add
push
cmp
add
sbb
mov
pop
dec
xchg
xchg
mov
stos
ljmp
and
cmpsb
inc
leave
pop
dec
std
std
push
mov
lods
pop
subl
adc
repnz
mov
mov
jecxz
cmpsl
or
repnz
jbe
dec
aam
xor
mov
jnp
popf
sbb
cs
dec
cmc
inc
rclb
sbb
repz
mov
sti
aad
cmp
rcrl
jp
jne
push
pop
cmpsl
xchg
fnstenv
and
rorl
xor
push
adc
mov
xsave
out
inc
into
testl
dec
lret
icebp
jbe
inc
pusha
jge
divb
movsb
pusha
mov
cltd
mov
fldenv
scas
jg
cmp
sbb
cmp
push
inc
push
test
aas
orl
sbb
shrl
test
xchg
sub
outsl
sub
cltd
nop
outsl
repnz
movlps
loop
dec
jmp
fwait
sub
les
xor
ljmp
mov
push
rorb
mov
mov
lcall
insb
out
faddl
movzwl
dec
sub
pop
movsl
outsb
mov
lret
sbb
repz
fxch
ljmp
test
push
out
jne
mov
jne
mov
loope
xor
addr16
pushf
jo
test
sti
xor
stos
pusha
mov
cmpsl
fidivrl
ret
add
fstp
je
ja
movsb
sub
popl
jle
orl
enter
popa
sub
aad
xchg
mov
adc
mov
adc
lock
sbb
cmp
ljmp
stos
cmp
or
push
and
add
out
xchg
mov
iret
ds
jmp
addr16
pop
mov
pop
pushf
aas
pop
sub
xchg
stc
inc
sub
sbb
fdivrl
mov
cli
mov
pop
aam
mov
or
add
mov
movsb
add
inc
data16
jle
add
cmp
lahf
cmpsb
loopne
push
inc
cwtl
adc
out
ror
filds
dec
pop
pop
fildl
jg
dec
addl
lods
call
inc
inc
adc
mov
jp
push
cmp
fbstp
cmp
shrb
faddl
cmp
xor
push
loop
aad
dec
xlat
cld
and
pop
dec
in
xchg
sub
out
imul
ret
xchg
mov
mov
add
lret
fs
pop
imul
pop
enter
add
push
repz
mov
lods
and
or
adc
or
jecxz
cmp
mov
push
in
in
fildll
xor
outsl
inc
fstps
mov
jle
arpl
lret
dec
insl
in
xor
jg
fs
pop
popf
cli
pop
adcl
inc
xchg
es
jmp
mov
outsl
push
xchg
inc
jecxz
fnstsw
jge
cwtl
sbb
mov
ja
pop
mov
mov
or
inc
xor
out
adc
xor
and
sbb
mov
fnstenv
std
es
daa
sub
jg
daa
dec
sub
push
dec
cmp
call
mov
sbb
pop
ficomps
mov
or
cmp
pop
sbbl
je
mov
pop
jecxz
fisubrs
aas
idiv
add
xor
shrl
ljmp
sti
in
push
push
outsb
lret
cmpsb
mov
sahf
fsub
inc
push
adc
push
addb
jbe
xchg
aas
mov
push
test
lcall
stc
pop
test
pop
add
inc
stc
aaa
sbb
adc
jg
mov
mov
xor
cmpsb
cmpl
je
test
test
repz
movsl
or
in
jp
push
pop
or
xor
push
pop
cmp
push
xchg
or
std
xchg
imul
or
push
ja
push
pop
loope
outsl
add
dec
dec
cmpb
inc
arpl
sahf
mov
sub
dec
icebp
jb
inc
repz
in
push
filds
adc
pop
add
or
jbe
pop
pop
pop
xchg
in
xor
pushf
call
out
xchg
cmp
push
dec
push
stos
pop
movsb
mov
adc
jl
push
adc
mov
or
mov
lret
mov
cmp
sub
aas
std
xor
push
xlat
xor
cmp
xchg
enter
ss
mov
rcrb
jle
sbb
mov
mov
jbe
ret
mov
shl
jge
cmpsl
movsl
movsl
jge
ja
es
xchg
cmpsl
sbb
fcoms
mov
mov
sub
jo
mov
outsb
mov
clc
movsb
sub
arpl
dec
dec
movsb
das
xorl
push
mov
adc
call
clc
sbb
jmp
pop
sbb
sti
mov
mov
mulb
loope
xchg
sbb
adc
es
inc
movsb
pop
xor
cli
sbb
xchg
cmp
iret
in
sbb
bound
sarl
int
shrb
sub
mov
push
inc
push
push
out
loop
mov
pop
push
movsl
pop
test
xchg
fimull
push
jmp
push
push
aas
adc
out
adc
pop
pop
adc
test
orl
add
add
sbb
js
xor
xor
test
sbb
test
jmp
push
in
insb
imul
fucomip
insb
jne
in
add
lret
daa
cmc
mov
out
fsubrp
lods
mov
or
pop
rorl
dec
fwait
adc
push
test
dec
popf
ret
comiss
pop
add
jns
and
mov
ds
adc
popa
aam
pop
cmpsb
mov
nop
push
xor
ljmp
sbb
sar
lret
xor
pop
pop
xor
dec
leave
loop
das
or
addr16
fcompl
clc
stos
stos
in
lds
adc
insl
stos
int
xor
jbe
arpl
adc
xchg
icebp
aad
int3
add
push
hlt
sahf
test
stos
shrl
dec
repnz
enter
ficomps
ss
inc
lods
push
in
lret
adc
push
stc
sbb
push
mov
sarl
jl
cmpl
push
inc
mov
ja
fcomip
pop
outsl
add
daa
pop
jbe
mov
lcall
flds
int
in
cltd
mul
loopne
lcall
xchg
push
pop
xchg
mov
jecxz
cltd
add
inc
add
dec
fbld
neg
sbb
movsb
cmp
ljmp
daa
xchg
sbb
aaa
jb
sub
jl
clc
sbb
pop
xor
in
cmc
outsb
mov
push
or
xchg
xor
hlt
sub
sbb
outsb
push
jne
cmp
jo
out
cwtl
cmp
or
imul
xor
outsl
mov
mov
push
rol
push
rorl
mov
sbb
test
cltd
out
mov
mov
popa
jmp
mov
int3
ljmp
data16
mov
adc
mov
add
cmp
add
scas
add
inc
imul
out
jb
jae
sub
jns
test
cli
jb
test
mov
jmp
arpl
mov
jo
adc
sub
or
fsubl
add
cmc
pop
adc
sbb
ljmp
cltd
stos
stos
dec
inc
xor
xor
jae
das
loope
mov
cmp
or
cmp
or
push
pop
hlt
imul
rol
test
push
lret
ret
pop
mov
push
add
or
add
mov
out
adc
ss
data16
iret
in
push
gs
fwait
mov
dec
xlat
lock
xor
pusha
mov
pop
bt
fnsave
mov
dec
dec
add
loope
push
lret
shrl
in
nop
xchg
popa
push
ljmp
adc
xor
cld
xchg
in
cltd
dec
push
iret
dec
add
inc
les
add
lahf
enter
inc
adc
test
lahf
in
pop
ret
neg
xchg
add
dec
les
test
mov
aaa
imul
push
out
test
outsl
add
divl
sahf
data16
xchg
pusha
fstpl
lods
xor
inc
mov
xchg
xchg
xor
out
fxch
fnstenv
add
pushf
xchg
inc
push
push
or
pusha
xor
jmp
xchg
mov
imulb
les
xchg
inc
xlat
mov
in
imul
xor
xchg
mov
cmp
adc
sub
dec
or
into
loopne
or
push
into
shll
movsl
test
icebp
insl
xchg
mov
in
jb
shlb
mov
push
int
pusha
mov
cmpsl
lea
es
lcall
sahf
adc
test
dec
push
pop
out
sub
out
stc
sub
fwait
inc
lds
pop
cltd
fsts
mov
dec
mov
sbb
push
into
std
in
sub
add
es
imul
push
cmc
or
dec
jecxz
es
sets
js
cmp
aaa
ljmp
inc
jg
fdivl
bound
cmp
cwtl
adc
scas
sbb
jmp
repnz
rcll
mov
push
and
jle
xchg
lret
fistpl
or
mov
loop
jecxz
or
iret
xor
aam
push
adc
push
jp
adc
xlat
push
cmp
stc
in
jecxz
add
fldl
inc
out
xor
in
push
daa
xchg
jl
or
nop
mov
sub
ja
xor
xchg
rclb
movsb
shlb
ret
and
out
scas
and
outsb
mov
xchg
int
cmpsb
xlat
test
add
addl
cmp
xchg
fcomp
je
pop
jnp
ret
dec
test
mov
imul
and
inc
dec
mov
or
jnp
cmpl
scas
jbe
jno
aaa
dec
lret
mov
lahf
mov
lcall
push
leave
mov
pop
fstpt
into
outsb
jl
mov
out
clc
pop
clc
mov
push
xlat
mov
adc
and
imul
ret
mov
mov
cmp
sub
pop
add
jno
ss
pop
mov
pop
fstpt
rcll
sbb
and
popf
or
mov
pop
insl
add
fiadds
stos
and
or
mov
scas
jo
outsb
cs
movsb
cmpsb
xchg
je
xchg
lcall
pop
sub
imul
xor
lea
xchg
push
mov
cmp
jge
divl
into
fldl
or
test
dec
sbb
sub
xor
cmp
scas
sbb
push
out
or
stos
inc
cmpsb
fbstp
and
xchg
das
inc
mov
jb
xchg
out
sbb
sub
hlt
xor
cs
in
lds
mov
sarb
add
js
mov
fsubs
pop
adc
jo
dec
js
mov
sahf
idivl
sahf
stos
adc
fsts
lods
loopne
push
inc
shlb
imul
adc
out
push
sbbb
mov
push
mov
int3
mov
stc
sub
movsl
aad
arpl
push
mov
mov
cs
mov
mov
bound
mov
cmp
mov
mov
jp
std
mov
dec
jns
in
imul
adc
leave
or
insb
xor
dec
mov
fiaddl
sub
inc
mov
push
push
mov
mov
arpl
xor
rcrb
mov
dec
or
push
jae
sub
and
pop
push
sub
xchg
and
mov
clc
dec
xor
sub
lret
addr16
mov
jl
cli
gs
push
ja
jne
pop
mov
stc
fldl
adc
pop
jb
subb
lea
out
jecxz
add
in
cmpsl
cmp
aas
fsubl
arpl
fdivrp
movsl
fcomi
lods
aam
push
ljmp
test
rcl
gs
cmp
rcll
cmp
insb
xor
aas
xor
pop
jmp
test
in
mov
aam
cmp
lods
repz
sbb
push
sarl
outsb
add
mov
in
sub
push
jmp
pop
orb
mov
repnz
inc
out
aam
sbb
lods
shll
inc
mov
dec
out
xchg
xor
test
leave
shlb
cmp
push
icebp
subb
aad
je
fcompl
xor
enter
ljmp
test
test
push
sbb
shr
add
dec
je
add
push
movsb
sub
pop
jae
mov
and
cmp
leave
test
jge
das
leave
ljmp
pushf
ret
pop
xchg
ds
mov
ret
fsub
pop
test
xor
jae
push
xchg
je
mov
lret
or
stos
cmp
jno
mov
sub
cmp
pop
sub
sub
xlat
sbb
push
aas
fwait
xchg
mov
and
ds
push
sub
iret
out
xchg
adc
push
cmp
add
inc
xor
mov
movsb
dec
sarb
mov
sbb
popa
push
inc
idivb
inc
pushf
lods
xor
stc
mov
sub
ficoms
daa
push
add
call
inc
mov
add
mov
sub
mov
xchg
and
loope
in
movsl
pop
cs
leave
and
mov
sbb
dec
in
dec
pop
sub
fbld
or
push
cmp
push
out
inc
xchg
push
jl
sarl
movsl
iret
push
pusha
or
cmpsl
jno
sti
mov
shrb
sub
stos
cltd
mov
lahf
inc
pop
sbb
sbb
imul
jl
dec
sbb
adc
xchg
push
push
fisubl
inc
push
movsl
aaa
shr
pop
mov
shlb
aaa
fadd
xlat
xor
sub
xlat
mov
xchg
cmp
add
mov
lock
mov
mov
test
fs
frstor
jns
xchg
xor
out
arpl
ficompl
sbb
mov
mov
fcoms
cwtl
das
mov
push
sub
jge
xor
mov
mov
popf
pop
pop
pop
push
push
cs
sbb
out
inc
adc
outsl
pop
insb
pop
ret
dec
js
lock
adc
mov
xchg
nop
sbb
mov
add
pop
add
int
aad
scas
sahf
out
lcall
and
int3
jne
cs
inc
les
out
movsl
aam
mov
pop
dec
shlb
adc
or
setno
cmp
rorb
pop
test
mov
movsb
jmp
sub
sarl
mov
test
mov
mov
iret
stos
add
shl
xchg
cwtl
push
and
push
lods
loop
fidivrs
shlb
mov
dec
mov
data16
jns
arpl
dec
aam
das
cmp
cltd
cmp
lahf
xchg
and
addr16
shl
add
nop
sarb
adc
je,pt
loope
movsl
mov
xor
or
mov
in
stos
cld
popa
fisubl
stc
sbb
scas
cmpsl
pop
jmp
icebp
inc
aaa
scas
push
fstps
das
and
jne
or
mov
addr16
xor
insl
pop
dec
fsubl
scas
imul
inc
jnp
fs
fbld
mov
lea
ficoms
leave
xchg
pop
rcll
or
ret
xchg
jno
sti
inc
mov
test
xor
pop
out
clc
cmpsb
insl
or
nop
mov
sbb
repz
fldt
test
pop
mov
daa
out
pop
mov
daa
xchg
ret
nop
mov
dec
outsb
cli
cmc
arpl
adc
xor
in
pop
mov
sbb
imulb
jge
je
sbb
or
in
adc
mov
mov
jmp
ror
lret
lret
out
cmpsb
mov
lahf
dec
cmpsl
daa
cwtl
scas
call
cli
fcmovbe
sti
pop
xchg
jcxz
enter
insl
pop
aas
addr16
add
loopne
xchg
push
xchg
inc
ret
pop
xchg
cltd
inc
xor
push
adc
dec
loopne
filds
cmp
sub
push
xlat
data16
push
dec
jmp
mov
inc
dec
mov
mov
sub
xor
dec
xor
inc
ret
mov
arpl
pop
icebp
in
sub
xchg
add
pop
sub
test
pop
cltd
test
push
sub
cwtl
in
repz
cmp
ret
into
xor
pop
jo
push
popa
inc
ud0
jo
lret
pop
movsb
or
les
jg
imul
imul
dec
push
imul
mov
aaa
push
push
cmp
jo
test
adc
xor
neg
sub
out
pop
mov
mov
test
and
cmpb
popf
dec
fsts
cmp
inc
xor
ret
jg
rcl
pop
cs
and
push
mov
add
imul
ja
enter
ror
in
lods
push
dec
sbb
jno
inc
loopne
mov
bound
and
nop
aas
stos
jmp
xchg
testl
dec
test
mov
xor
sbb
sub
mov
mov
dec
int
pop
aaa
inc
sahf
daa
sub
mov
fdivrp
jle
push
sbbb
push
cltd
adc
pop
ss
adc
adc
adc
jp
repnz
lret
outsl
pop
cwtl
shlb
jp
ds
push
aam
push
adc
les
push
out
js
imul
push
shrb
fdivs
adc
inc
loop
sbb
or
popf
ret
test
jno
into
loop
jecxz
in
mov
or
jo
in
push
frstor
push
ret
or
lea
stos
mov
jmp
inc
loope
mov
jl
mov
sbb
push
sbbb
push
adc
xor
push
iret
test
add
pop
xchg
insb
and
push
movsb
dec
lahf
or
call
pop
xchg
jecxz
icebp
cld
scas
in
stc
sub
mov
mov
adc
dec
xchg
cmp
sbb
inc
je
aas
jmp
pop
xchg
aam
in
scas
push
icebp
mov
jb
lds
ret
cmp
sbb
inc
pop
xor
lds
enter
or
inc
lods
ret
dec
sub
adcl
scas
fdivrs
inc
ljmp
sub
lods
mov
sub
outsb
arpl
movsl
lcall
jmp
call
mov
cmp
jno
and
adc
sbb
jmp
sbbl
nop
push
insb
mov
mov
xlat
leave
loop
inc
out
arpl
add
stos
inc
xor
decb
adc
lahf
frstor
je
mov
xor
dec
mov
pop
mov
shlb
push
mov
or
and
or
clc
and
sbb
shrb
mov
ss
outsl
xchg
cmp
cltd
push
lds
cs
mov
and
iret
mov
mov
mov
xchg
pop
pop
and
mov
cmc
jle
mov
sbb
cmpb
lods
stos
lret
out
mov
stos
add
scas
or
sbb
xor
dec
outsl
sarl
sbb
pop
enter
pop
aaa
rcl
push
addb
jo
mov
and
adc
jno
dec
pop
add
imul
rolb
mov
in
add
mov
push
jnp
into
movsb
push
and
loopne
popa
cmpsb
lods
or
loope
xchg
mov
jo
cmp
aas
adc
int3
add
mov
ret
lods
push
push
call
mov
mov
in
xchg
xchg
outsb
add
pop
test
jecxz
inc
in
hlt
and
mov
and
repnz
stos
push
mov
add
mov
and
popa
fstpl
jne
sub
repnz
repz
dec
jmp
mov
xor
xor
pop
pusha
popa
testl
dec
xorl
cs
xchg
jl
lock
add
in
fcom
sbb
ds
add
fs
test
adc
mov
dec
std
movsb
imul
repnz
push
sbb
xor
out
adc
pop
dec
and
std
pop
mov
xchg
jo
push
xadd
imul
mov
movsb
cltd
mov
aas
mov
dec
cltd
aam
jae
in
push
stos
mov
sub
and
mov
add
lock
push
maskmovq
stos
rcl
jns
lock
iret
mov
mov
subb
insl
adc
or
push
out
outsb
cmp
mov
call
xchg
aaa
xor
rolb
pop
int3
mov
ljmp
test
push
adc
add
andb
outsl
out
lock
push
mov
fidivl
add
test
jns
adc
jo
scas
enter
push
cmp
fldcw
jbe
mov
xor
sub
rcr
leave
gs
pop
mov
pop
mov
xorl
popf
aam
mov
daa
mov
jg
ror
xchg
sbb
push
xor
xor
pushf
stos
out
cmp
jo
push
ret
out
inc
xor
pop
mov
rorl
ljmp
orb
cli
pop
movb
stc
aad
and
add
adc
add
imul
dec
mov
pop
mov
and
dec
push
test
jns
lret
pop
pusha
pop
pop
roll
movsl
cmp
inc
cmpsl
mov
mov
cli
push
mov
jns
pop
dec
mov
pop
fstpl
jnp
inc
adc
jnp
into
mov
inc
fistps
xor
xlat
ja
sbb
xor
lret
mov
orb
shrb
mov
sub
fsub
xchg
pop
dec
sub
xchg
xor
mov
les
mov
jb
sbb
jnp
mov
and
mov
pop
pushl
mov
jae
int
inc
jl
push
aas
int
das
pop
mov
mov
pop
hlt
bnd
push
pop
je
in
add
dec
mov
shl
enter
or
xor
mov
das
int
cmpsl
mov
int
inc
test
inc
jns
mov
arpl
xor
sbb
add
leave
xchg
pop
hlt
jge
push
mov
arpl
es
lds
or
lea
lcall
dec
lcall
push
shll
int3
jbe
lret
into
ret
call
jno
sbb
mov
in
push
loopne
imul
xchg
neg
pop
pshufw
stc
add
or
cmpsl
bound
mov
cmp
adc
out
or
rcrb
dec
mov
insb
jb
sahf
xchg
out
stos
mov
xor
dec
and
lahf
mov
sahf
fdivs
dec
int3
loopne
pusha
mov
and
sub
and
imul
mov
movsb
scas
loop
lahf
add
scas
cmp
sbb
add
pop
jb
mov
pop
cmp
movb
xchg
lea
pop
outsb
bound
out
push
push
jg
jp
incb
xchg
cmp
jno
hlt
mov
scas
inc
xchg
outsl
cld
loope
mov
mov
mov
pusha
ljmp
movl
call
hlt
fbstp
pop
xor
pop
or
xor
or
push
pop
mov
jp
std
xor
das
out
adc
lcall
jl
into
mov
xchg
mov
jo
or
adc
sahf
add
stos
jg
pushf
mov
sub
aam
jno
das
mov
inc
mov
cmp
lahf
aam
mov
or
std
mov
inc
loop
mov
mov
pushw
outsl
or
pop
push
stc
out
inc
mov
sub
xor
mov
in
data16
jns
lret
into
cmc
sub
cmc
scas
and
fiadds
daa
lock
dec
movsb
ja
scas
mov
lods
mov
push
pop
mov
pop
push
pop
xor
mov
dec
ja
sbb
data16
andb
and
cmp
cs
xor
pop
fcoml
insb
aad
inc
sbb
lock
daa
mov
sahf
lods
mov
test
repnz
adc
pop
pop
insl
mov
jmp
inc
in
sub
xor
gs
std
pusha
repz
fwait
out
mov
mov
sbb
ja
aam
in
dec
add
fisttpll
cmp
ret
pop
je
mov
hlt
push
inc
daa
xor
lea
add
jle
out
lods
fidivrl
xlat
mov
cli
ret
jle
fwait
stos
jnp
mov
fistpl
jmp
push
xchg
and
and
add
icebp
xor
xchg
push
jp
sbb
out
pop
mov
mov
iret
iret
pusha
sbb
add
dec
pop
push
pushf
popa
aad
push
inc
pop
mov
orl
clc
jecxz
into
dec
ret
shr
hlt
test
test
pop
mov
cmp
mov
xchg
inc
cli
mov
int3
jg
lds
cli
cmc
daa
jb
aas
std
adc
loope
xchg
stos
data16
insl
jb
mul
test
xor
out
movsl
mov
sub
lcall
enterw
rorb
pop
jno
lret
inc
lea
outsl
add
mov
loope
lahf
mov
pop
cwtl
jmp
loope
cmc
inc
lcall
and
stos
fs
xor
cmp
cmp
or
xor
and
xchg
xor
xchg
hlt
shll
push
adc
fucomip
test
pop
ds
fbld
js
cmp
jb
mov
scas
out
int
cmp
push
pop
call
and
fcomi
and
sarb
adc
mov
xchg
addb
aad
arpl
push
loopne
push
pop
pop
sbb
push
xchg
sub
push
lahf
pop
inc
push
sbb
daa
lea
repnz
xorb
xchg
repnz
cld
dec
mov
add
lcall
hlt
popf
daa
loop
add
fisubrl
das
mov
adc
and
dec
movl
out
push
xlat
xchg
aam
lods
int3
mov
pop
fisubl
adc
scas
xchg
std
sub
nop
mov
cs
xor
mov
or
jb
fcomps
lret
inc
xchg
mov
inc
jmp
and
jno
push
xchg
popf
cli
sub
aad
loopne
sahf
rol
fucomp
rcrb
fadds
and
into
dec
cmpsl
out
dec
xchg
xchg
stc
adc
aaa
mov
dec
aam
adc
ret
cmc
and
lret
adc
mov
in
jmp
stc
pop
mov
cld
popa
xchg
mov
dec
enter
pop
fs
mov
ret
out
xchg
sub
scas
inc
xor
adc
call
cs
sbb
into
packssdw
dec
xchg
adc
mov
adc
add
adc
int
xor
mov
pop
jl
xor
lahf
sbb
std
mov
cmp
testl
mov
inc
lret
jge
js
mov
push
mov
jge
add
pop
into
add
popa
fcoms
mov
call
loope
xchg
imul
cld
std
xchg
lcall
sub
cmp
int3
mov
and
sahf
mov
mov
out
arpl
cli
mov
bsf
scas
test
inc
pop
cmp
pop
test
out
mov
ljmp
mov
push
adc
mov
gs
xchg
in
hlt
test
xor
jbe
mov
pushf
aad
ret
mov
cmp
call
mov
mov
clc
pop
mov
cmp
jl
call
xchg
sbbl
addr16
cmp
xchg
sub
leave
and
pop
push
inc
or
shll
pop
andl
pop
dec
insl
mov
out
mov
or
lods
cmc
sbb
js
je
hlt
pop
in
lock
test
cmpsb
lahf
fwait
cli
xchg
push
push
icebp
push
cli
sub
pushf
jle
inc
mov
push
lock
idivl
push
fs
mov
cmp
mov
sbb
jg
mov
outsb
pusha
popf
xor
adc
rcl
add
out
out
push
jno
imul
pop
cs
stos
xchg
mov
movsb
imul
xchg
inc
outsb
pop
orl
mov
ja
aad
aad
fcoms
mov
scas
mov
out
mov
xchg
mov
je
leave
fdivrl
push
cld
icebp
pushf
bound
out
or
das
add
cmp
push
push
pushf
jnp
or
lds
pushf
aam
mov
mov
fildl
mov
lea
cmp
daa
jne
rcr
adc
lcall
jmp
xchg
xchg
cmc
sbb
inc
cmp
mov
jbe
ja
sub
fbld
xorl
sbb
push
ret
cmp
mov
sub
adc
and
fiadds
inc
js
pop
or
ja
cmp
fsub
pop
mov
sbb
fstps
std
stos
push
xchg
int
aaa
insl
lret
clc
or
sbbl
int
inc
inc
arpl
or
sub
lods
pusha
inc
out
rclb
cs
sub
test
push
stc
imul
push
stos
inc
xchg
pop
stos
cld
and
iret
push
adc
pop
add
jne
or
push
add
jno
adc
and
cltd
add
mov
add
add
jbe
test
sarl
sbb
mov
sbb
jae
test
push
loopne
or
xorl
dec
js
pop
jle
outsl
ret
sbb
inc
jg
jnp
mov
mov
inc
xor
ret
mov
push
sub
mov
lea
mov
stos
outsb
fnstsw
loopne
xor
pop
into
icebp
icebp
adc
push
cmp
cmp
sub
outsl
cmp
or
inc
cltd
cli
push
dec
shrl
pop
hlt
rcrb
ljmpw
out
insl
call
arpl
movsb
scas
xchg
je
bound
mov
addr16
xlat
fdivrl
jg
roll
push
mov
push
mov
and
ret
xlat
cli
pop
loopne
test
cs
mov
ljmp
inc
into
sub
divps
inc
push
mov
sar
in
movl
ret
jmp
xor
cmc
nop
mov
push
dec
cmpsl
idivl
fs
rolb
stc
cltd
cltd
and
insl
add
xorl
xor
movsb
xchg
lret
adc
xlat
scas
xchg
mov
adc
push
in
shll
sahf
jmp
push
cld
rorl
cmp
addb
xor
mov
repz
jl
pop
push
bound
sub
in
inc
push
lret
sbb
sub
sahf
das
add
stos
jo
loopne
push
xlat
inc
sbb
push
pusha
push
ss
ljmp
cld
sbb
shrb
cmpsb
test
xchg
pop
not
sub
push
jne
push
add
pusha
outsl
daa
ljmp
pusha
rol
in
rcrl
or
lock
jle
lods
sbb
add
or
sub
mov
mov
cmp
sub
push
cwtl
lret
lock
jl
mov
ds
inc
fldt
fstps
imul
pushf
jb
cmp
jmp
inc
pop
inc
pop
aas
in
or
jl
popf
std
ljmp
fistl
and
scas
add
mov
bound
aaa
xor
or
fsubs
adc
pop
or
push
and
addl
bound
mov
pop
lods
pushf
push
je
cmp
or
adc
cmpsb
frstor
mov
sahf
jecxz
xor
push
cmc
cmp
iret
jp
dec
sub
mov
lret
pop
mov
sub
pop
mov
orb
popa
addb
fisubl
xchg
popl
mov
scas
in
ret
insl
out
test
fmul
sbb
in
bound
xchg
adc
xchg
and
and
and
jns
aad
sbb
dec
sti
arpl
pusha
in
mov
sti
push
pop
mov
int3
jae
mov
cmpsl
pop
loopne
lods
cmc
fldt
dec
add
sbb
pushf
cwtl
insb
hlt
pop
cmp
adc
xchg
repnz
mov
push
cmc
push
inc
icebp
and
mov
sbb
sbbl
sub
pop
pop
push
xor
lock
sub
push
sti
mov
mov
mov
jo
lcall
lcall
ret
push
testb
clc
jae
xor
lods
cmpsb
cmp
fimull
mov
into
fld1
inc
lock
lods
inc
lret
arpl
push
aam
inc
sahf
sub
mov
das
xchg
sahf
mov
jo
repnz
and
cmp
outsb
movsl
sahf
mov
cmp
insb
push
call
dec
cmp
pop
inc
push
xor
cmc
mov
int
out
imul
notl
pop
mov
pop
xchg
pop
sbb
jns
movsl
or
int
cld
xor
sub
xor
test
stos
push
mov
movsb
jg
xchg
cmpl
scas
push
lahf
and
scas
or
jno
inc
test
adc
and
inc
mov
cmp
inc
push
js
inc
push
mov
out
push
repnz
js
call
enter
ja
out
cmp
add
mov
add
bound
mov
xor
inc
fidivl
aas
xchg
outsl
fiadds
cmpsl
jns
shlb
adc
outsb
push
out
mov
imul
jmp
cld
add
jo
sub
cmp
jne
rorb
rcr
out
add
rolb
sbb
inc
add
shr
insl
mov
cmp
lret
push
popa
xchg
je
xchg
push
jno
or
mov
mov
push
leave
xor
push
jp
aam
add
adc
dec
pop
sub
test
sub
test
push
stc
jnp
push
jp
sbb
mov
shlb
inc
sub
jbe
dec
add
leave
je
dec
popf
sahf
sub
pop
rol
or
jnp
fcom
les
jecxz
cwtl
sbb
stos
pop
out
dec
inc
out
lcall
fisttps
cmc
sub
lods
push
mov
push
jg,pn
lods
push
xor
sbb
mov
pop
or
inc
xchg
decl
adc
and
pop
outsb
pop
addr16
xchg
shl
mov
push
addr16
rcll
inc
inc
xchg
scas
mov
and
cli
jno
jle
addb
fisubrs
sbb
movsb
and
insl
jmp
iret
cmp
arpl
xchg
adc
pusha
out
mov
xchg
insb
loopne
test
or
xor
add
es
cmp
popf
loope
mov
add
mov
mov
sbb
mov
push
or
cmpsb
out
jl
sub
dec
xchg
repz
testl
pop
xchg
and
mulb
xor
jp
pop
sbb
cmpsl
stos
out
ds
push
add
push
adc
inc
rcll
imul
fs
nop
mov
jecxz
jnp
inc
jecxz
push
ja
stos
test
shrb
add
add
sahf
fists
ficoml
test
fisubrl
addr16
loopne
dec
loopne
test
jbe
aas
push
stos
xchg
fidivrl
xchg
sbb
popf
dec
pop
mov
outsl
xchg
lcall
negl
mov
add
xchg
into
push
jmp
mov
push
xor
es
dec
test
outsl
or
inc
jo
insl
push
cmpsb
pop
cmpsl
xlat
and
fiaddl
jo
add
lahf
popa
lahf
add
test
icebp
or
daa
mov
mov
enter
out
shrb
ficompl
add
adc
andl
cmp
aam
pop
cld
adc
cmpsl
xor
jnp
aaa
add
sub
mov
fcmovb
aaa
lcall
outsl
int3
stc
stos
daa
out
paddd
jmp
inc
mov
incl
inc
stos
cmp
outsl
in
jnp
addr16
mov
add
dec
pusha
add
lret
sub
and
sarb
leave
inc
ljmp
or
popf
lock
sub
sbb
cmpsb
enter
repz
push
cmp
xchg
mov
insl
inc
inc
not
and
xchg
cmp
jecxz
jmp
jp
sbb
mov
popa
xchg
inc
or
cli
inc
mov
dec
dec
mov
xchg
in
aad
mov
pop
out
test
cld
popa
mov
adcb
and
or
mov
mov
imul
scas
stos
movb
data16
fs
sub
xchg
xor
xor
pop
sub
cmovo
sub
inc
add
xchg
mov
fs
jns
cmp
gs
and
sarl
dec
stc
es
sbb
adc
bsr
sub
bound
aas
mov
mov
xchg
arpl
push
pop
xchg
sub
add
inc
leave
dec
mov
cwtl
popf
xor
lock
jmp
loope
call
sub
nop
ret
test
stos
xor
stos
mov
and
mov
mov
ja
sbb
jae
pop
nop
cwtl
mov
sbb
nop
xchg
loop
pop
std
sub
loope
seto
fldt
enter
js
sbb
jge
lahf
cli
dec
inc
ja
add
out
test
repz
push
add
pushl
jae
int3
inc
dec
push
dec
inc
movl
out
sbb
std
mov
mov
add
iret
lds
mov
fmul
insl
mov
addb
ret
sbb
mov
aam
fidivrl
insb
cmp
and
sbb
xchg
aas
or
and
movsl
adc
lret
xchg
or
mov
jns
sbb
adc
mov
mov
scas
push
loopne
es
insl
xchg
xor
fisubrs
inc
jae
cmp
sbb
cld
bound
pop
pop
adc
cld
adc
lock
aad
leave
pop
sbb
les
jo
aad
pop
mov
sub
out
stc
push
test
mov
rol
inc
imul
xchg
enter
cmc
push
cmp
stos
sahf
pop
add
or
cld
outsl
dec
dec
ret
pop
dec
fiaddl
out
fwait
jno
mov
into
clc
push
sti
stc
test
inc
xchg
fs
inc
push
int
shl
pop
out
mov
movsb
jbe
shl
sbb
mov
aas
es
loopne
adc
mov
jmp
jb
out
sub
dec
subb
or
lods
xchg
and
and
push
outsl
inc
dec
or
pushf
pushf
fidivrl
data16
adc
aas
push
mov
push
subps
pop
inc
movsb
test
sbb
aad
aad
sub
mov
fiaddl
gs
mov
jge
gs
pusha
sahf
jnp
popf
in
faddl
jb
shll
jg
repnz
inc
lss
test
sbb
push
popf
add
imul
and
ficoml
jae
pop
mov
adc
sub
sbb
sub
xchg
adc
xchg
test
ret
sbb
push
sbbb
leave
adc
and
mov
mov
pushf
lahf
bound
push
lock
in
shr
xchg
push
pushf
sub
loop
ss
test
es
clc
pop
push
push
inc
scas
xchg
push
ror
lahf
sub
jno
movsl
lahf
out
push
fisubl
ficoml
cmp
sub
cs
dec
stos
adc
dec
and
fsubs
daa
mov
es
loope
xchg
dec
mov
or
imul
cmpsb
rorl
adc
lds
insl
cmc
xchg
fs
push
je
dec
insl
rcll
nop
cmp
pop
sahf
jo
dec
ds
jecxz
adc
lea
in
mov
push
ret
fsubl
idivl
and
adc
jmp
and
cmc
pop
aad
sahf
mov
loop
push
jp
cmp
ljmp
cltd
xor
dec
int
test
mov
loopne
dec
add
addb
pop
mov
push
lock
add
inc
xchg
dec
scas
pop
movsl
popf
ljmp
mov
dec
daa
ds
dec
andb
aad
fsubr
add
pop
sub
pop
push
scas
loopne
mov
test
cmpsb
dec
scas
enter
and
mov
lret
adc
fucomi
rclb
inc
xlat
ds
push
and
or
dec
into
out
mov
push
fsubrp
mov
fldcw
mov
loope
xchg
push
nop
push
cmc
mov
xor
scas
cmpsb
mov
aas
ljmp
add
call
xchg
sub
push
pop
cli
xchg
mov
adc
pop
loop
add
js
ss
outsl
insl
mov
ficomps
mov
xchg
dec
out
ds
cs
outsb
sbb
scas
mov
cmpl
mov
fs
sbb
add
int
jl
mov
cmp
es
mov
push
popl
scas
jp
lods
clc
aam
mov
pop
popf
out
mov
dec
jb
pop
mov
lahf
xor
pop
jbe
jns
cmp
push
pop
cmp
push
mov
adc
es
lahf
or
push
nop
inc
cmp
dec
xor
dec
adc
mov
ret
jae
jl
mov
mov
ja
mov
lods
out
add
pop
ficomps
sti
dec
in
pop
cmp
js
notl
xlat
add
mov
sub
xchg
push
and
dec
mov
fdiv
push
in
dec
cmpsb
mov
push
iret
fcompl
add
gs
ret
mov
sbb
sub
sbb
and
jno
push
rcrl
ret
mov
sub
lret
nop
popa
int
xor
pop
mov
ja
insb
mov
push
sbb
filds
jnp
icebp
cmp
mov
push
xlat
out
aaa
mov
je
push
dec
cmp
sbb
icebp
jbe
movsl
add
sbb
dec
lahf
inc
pop
sahf
test
sahf
pop
dec
inc
jg
add
lea
jno
push
movsl
sbb
and
outsl
and
push
cmc
int3
decl
mov
ja
cmp
mov
sbb
and
push
loop
cli
es
out
loop
pop
mov
sbb
push
lds
cmpsl
dec
jbe
xor
mov
fs
ret
test
push
out
pusha
rcrb
fstpl
scas
cmpsl
mov
xorb
or
mov
or
sub
hlt
addl
cmpsb
mov
add
adcl
push
inc
jnp
sub
loop
cwtl
cmpsb
cmp
adc
jb
or
andb
xor
aaa
mov
or
and
inc
pop
inc
dec
sbb
insb
mov
test
add
fs
ret
sbb
adc
mov
xchg
stos
and
mov
pop
pushf
sub
dec
jle
incl
repz
lahf
push
popf
call
xchg
xchg
adc
addl
je
pop
cmp
jbe
jb
loopne
mov
add
mov
push
insl
loop
push
jb
sub
cmpb
sbb
or
js
sub
mov
fsubrs
sahf
push
jle
dec
add
add
movsl
scas
jg
jg
push
scas
xor
push
pushf
jecxz
fists
xchg
rcll
popf
xchg
sbb
call
mov
pop
test
imul
dec
repz
subl
filds
div
push
cmp
jecxz
aaa
lds
mov
push
in
jp
mov
add
sahf
xor
je
cwtl
loope
sbb
ret
outsl
mov
push
inc
dec
dec
jnp
jne
iret
fidivl
pusha
jp
adc
shrb
fstl
into
mov
repnz
mov
scas
mov
xor
and
cs
xchg
pop
decl
mov
pop
fstl
ja
dec
pop
lock
int
out
lcall
push
popa
push
shrb
lcall
mov
insl
aam
sub
jae
xor
fdivrs
cmp
sbb
jno
jnp
in
es
repz
xchg
mov
aam
je
lods
loope
jge
scas
ss
xor
dec
cmp
dec
shrl
mov
daa
xor
nop
jg
das
or
push
mov
dec
and
fimull
in
jbe
or
sahf
stos
cld
jmp
jp
dec
adc
jl,pt
ljmp
xor
xchg
test
mov
xchg
jb
and
pop
cmp
cli
sbb
ss
movsb
shrb
popf
and
push
and
push
loope
or
push
mov
push
xchg
leave
mov
inc
cmp
popl
daa
stc
push
xchg
lods
sub
cltd
stc
mulb
or
repz
mov
mov
out
mov
roll
cmp
adc
sahf
test
hlt
fldcw
fdivrs
cltd
cmp
pushf
shll
ret
es
ja
stc
xchg
xlat
xor
jl,pn
mov
out
cmp
in
inc
pop
outsl
dec
movsl
notl
test
inc
sbb
in
add
mov
in
mov
mov
sbb
int3
mov
sub
ja
push
clc
pop
push
repnz
sub
lock
es
les
adc
inc
jmp
xchg
pop
add
in
stc
jecxz
or
mov
push
sub
xchg
loop
dec
push
push
shrl
jl
xchg
aam
shrb
fisubl
and
lods
jge
daa
hlt
js
popf
xchg
xor
out
repnz
adc
jge
xor
aas
or
ja
xor
mov
std
lds
jae
test
sub
in
outsb
arpl
fsub
hlt
mov
stos
dec
inc
int3
lock
cmp
pop
pop
out
mov
addl
lcall
je
xor
jl
jl
mov
jnp
xchg
cmp
aam
call
jmp
cmp
cmc
xchg
push
lea
fimuls
dec
xchg
lock
insl
loop
sub
imul
add
mov
jb
testb
xchg
inc
and
rclb
enter
or
pop
ja
push
out
xorb
jg
mov
adc
outsl
movsb
pop
jnp
in
jns
push
add
mov
jae
jb
push
testl
cld
xor
cmp
jno
outsl
fsub
sub
inc
xchg
scas
out
sub
or
add
push
mov
test
frstor
and
test
lds
dec
movsl
iret
jbe
shrl
xlat
xor
pop
and
call
das
repz
daa
sub
adc
or
cmp
jnp
jmp
pop
pop
cmpsb
jl
sub
sub
std
and
and
dec
cwtl
ret
out
cmpsb
call
and
push
lods
test
add
adc
mov
fdivrs
inc
subb
dec
cltd
push
cmp
arpl
into
jp
mov
push
cli
xor
dec
dec
ja
cli
clts
cmpsl
xchg
sub
js
xchg
fwait
push
loopne
sbb
cmpsb
std
adc
enter
fcomp
inc
arpl
xchg
sbb
pushf
inc
loop
in
ret
sub
lcall
and
push
lods
xlat
push
or
scas
test
jno
sti
in
jne
mov
add
pop
adc
call
cld
mov
lods
xor
pop
clc
xchg
mov
pop
pop
sti
fcompl
pusha
mov
call
inc
test
hlt
jo
adc
pop
scas
aad
outsl
mov
jb
sbb
lea
xor
adc
dec
pop
lock
pop
int3
and
ss
mov
ds
fimull
pop
pop
cmp
sub
jl
clc
int
jmp
sahf
sti
not
out
inc
stc
dec
add
sahf
testl
jb
pop
add
xchg
fcomps
sub
mov
add
stos
push
jecxz
or
push
aad
and
jge
aam
icebp
xor
push
icebp
gs
inc
lods
jmp
test
mov
sub
dec
dec
inc
dec
push
or
adc
test
cli
decl
mov
addb
jle
js
xor
sti
fnstenv
stc
sbb
aad
mov
decb
mov
dec
push
jae
xor
push
jbe
pop
punpckhdq
clc
cmp
in
out
shrl
inc
mov
and
stos
dec
add
les
movl
divb
push
lahf
pop
adc
sbb
or
mov
cmp
push
cmp
inc
inc
push
mov
nop
lock
mov
test
insb
dec
dec
sbb
lret
add
xchg
scas
loop
pop
push
popw
jecxz
and
fisubrs
inc
mov
jo
sbb
dec
dec
sub
jb
in
popf
sub
bound
push
dec
aaa
aad
push
add
neg
jg
xor
or
in
stc
int
les
pop
xchg
shlb
faddl
fnsave
popa
mov
arpl
shll
insb
inc
cmovns
imul
push
dec
adc
pop
fisubrl
ljmp
inc
xor
mov
nop
or
xchg
sbb
cmovo
repnz
mov
stos
pushf
hlt
rol
adc
push
fwait
and
mov
js
mov
sub
add
lret
sub
adc
pop
add
and
push
xlat
jb
push
sub
add
adc
repz
mov
add
pop
inc
lods
jne
push
fs
fdivrl
ja
pop
ljmp
lock
lahf
mov
push
sbb
xchg
push
mov
xor
jne
pop
lcall
lea
xchg
mov
mov
test
and
jbe
es
xchg
shll
push
popf
mov
aam
and
jb
xchg
dec
inc
lret
out
cltd
push
sbb
adc
push
add
outsl
into
push
test
pusha
add
cmc
jle
test
jecxz
xor
mov
lock
mull
adc
sahf
inc
pushf
popa
adc
lcall
mov
inc
lods
xor
jb
lods
cmp
lods
dec
in
inc
mov
inc
mov
and
xchg
mov
dec
xchg
rcll
dec
jnp
movsb
aaa
js
ret
nop
cmp
inc
or
sub
mov
mov
ret
testl
out
arpl
fisttpll
imul
mov
call
paddb
cli
add
lea
push
aaa
cmp
push
ja
or
sbb
inc
data16
xor
mov
movsl
mov
lea
shl
mov
lods
mov
pop
movsl
aad
inc
push
dec
mov
arpl
aam
lahf
in
xor
andb
or
inc
xor
xor
sahf
dec
adcb
clc
sti
mov
das
es
popw
dec
lds
aam
ljmp
sub
into
xor
bound
aad
push
dec
lret
mov
loop
add
addl
lret
jnp
or
inc
aad
add
push
push
mov
jnp
or
fcomps
mov
pop
mov
dec
shl
popa
push
fwait
xor
pop
pop
sbb
imul
mov
out
jns
xchg
mov
ss
jo
or
pusha
enter
adc
push
jbe
cmpsb
test
mov
shlb
inc
pop
pop
jne
mov
pushf
sbb
enter
and
mov
pop
mov
fsubs
mov
and
leave
push
ljmp
mov
shr
loop
and
add
in
cmp
sub
jp
fstpt
xorb
subl
scas
imul
popa
fdivl
or
imul
repnz
mov
out
mov
cmp
xorb
stos
jp
cwtl
and
xchg
mov
or
stos
pusha
scas
mov
dec
mov
mov
pop
jecxz
lock
xchg
sbb
sbbl
cmp
sub
mov
ljmp
sti
sbb
add
xchg
leave
push
lcall
push
mov
inc
and
mov
stos
inc
ljmp
adc
push
out
gs
cli
push
lret
jg
movsl
push
sub
jl
hlt
jne
inc
imul
adc
add
sub
inc
aad
jg
cmpb
testl
out
icebp
aas
sti
pop
cmpsb
jle
jbe
or
test
dec
sub
jg
cmp
lret
sbb
in
cmp
out
adc
mov
and
and
sarl
jo
push
aam
sbb
cwtl
sahf
andb
xchg
mov
push
ss
fs
pop
je
push
popa
xor
sbb
sti
fwait
jnp
mov
sarl
test
mov
fimull
subb
and
insl
jo
add
add
mov
add
scas
and
dec
negl
stos
fstpl
dec
jmp
lds
in
lahf
ljmp
or
fdivrs
mov
pop
push
movsl
enter
std
insl
aas
sbb
out
out
jbe
clc
hlt
adc
and
fs
loop
dec
or
and
push
loopne
stos
add
dec
lcall
sub
rolb
ja
mov
push
inc
jnp
repz
jmp
cmp
xor
sub
jae
xor
int3
fsubs
in
js
les
dec
outsb
or
out
push
in
clc
mov
hlt
clc
loopne
shlb
xchg
rcll
in
enter
mov
psllq
xor
xor
push
cmp
aas
inc
pop
jbe
push
xor
push
filds
mov
ljmp
loope
shlb
xor
mov
repz
je
jns
jbe
pop
jbe
scas
push
ficomps
adc
jno
add
jnp
cmovns
mov
repz
out
in
lcall
and
mov
nop
cli
inc
mov
insb
imul
cs
inc
sahf
sub
xlat
inc
and
es
test
push
rcll
jge
fadd
push
dec
mov
sub
sub
pop
and
or
imul
sub
pop
push
xor
jle
xor
xlat
mov
imul
pop
in
dec
in
or
sbb
imulb
cltd
nopl
pop
mov
nop
test
mov
rsm
aad
das
in
push
jne
roll
and
je
stc
popa
imul
aad
rorl
sub
mov
push
adc
sti
sbb
jle
mov
push
mov
jmp
pop
out
mov
adc
pop
push
test
or
adc
fs
pop
lea
mov
pop
mov
fistl
push
cmp
dec
lock
sub
in
dec
xor
aad
pusha
loope
mov
lods
and
cmp
movsl
jae
dec
rcll
mov
inc
addr16
pop
or
lcall
dec
push
sbb
hlt
inc
sbb
mov
jno
mov
jp
lret
jmp
cs
cmp
shr
movsbl
jne
xchg
rorb
fcmovne
mov
add
stos
imul
scas
cltd
rcl
outsb
inc
decb
push
mov
jns
mov
leave
and
call
inc
push
inc
mov
scas
xchg
dec
fcoms
shl
mov
xor
scas
xor
lahf
inc
and
sub
sbb
cmp
lea
or
rolb
cmp
ret
pop
dec
int
and
cmp
jb
inc
divl
cmpsl
push
xchg
and
sub
mov
cld
nop
popf
in
ljmp
cmp
pop
lods
push
scas
rcrl
mov
mov
int
add
xor
rcrl
and
push
loop
dec
cmpsb
es
sub
xchg
int
subl
scas
sbb
icebp
add
dec
daa
sub
add
bound
leave
movsb
xchg
std
push
push
or
test
dec
mov
sbb
stc
andl
out
test
test
enter
ljmp
xchg
inc
rcr
mov
aam
inc
cmp
xor
stc
or
aaa
sbb
out
lods
dec
mov
push
scas
fistpll
pop
dec
popf
lret
lods
inc
stc
add
pop
outsb
cli
aad
andl
imul
sahf
pushf
pop
scas
insb
jnp
test
xor
sarb
push
inc
sub
sub
sub
pushl
data16
dec
inc
nop
lock
jecxz
inc
cli
stos
jecxz
mov
mov
jecxz
pop
rcrl
mov
repnz
jnp
mov
inc
mov
stos
in
popf
mov
sbb
mov
jle
stc
dec
sbb
pop
dec
icebp
jb
ss
nop
cmp
out
fisttpll
sub
ljmp
sub
pop
push
dec
lret
sbb
mov
dec
xchg
jnp
sbb
fmulp
popa
mov
in
mov
inc
aaa
aam
pop
andb
push
cmpsb
sub
adc
aaa
orl
cmp
int3
or
sbb
or
test
and
dec
imul
mov
test
mov
movsb
jnp
fs
jmp
jb
or
jmp
add
out
inc
fnsave
flds
jecxz
pusha
enter
lcall
dec
sub
out
mov
push
ret
clc
mov
jbe
dec
cmp
mov
icebp
movsb
and
call
std
sarb
fmull
cmpsl
aaa
in
xor
mov
aam
inc
notb
or
rcr
ja
and
ficoml
lret
mov
outsl
inc
loopnew
lret
pop
mov
mov
pushf
andl
js
cmp
and
movsl
adc
stos
sahf
test
sbb
jge
push
mov
ljmp
cmp
xchg
inc
xor
and
xchg
or
mov
test
and
xchg
cmp
push
aam
adc
pop
lcall
ja
push
out
jns,pt
inc
dec
push
xchg
dec
nop
add
and
hlt
push
or
scas
sub
jle
pop
push
jg
fdivrs
cmp
int3
mov
test
jecxz
mov
js
mov
sub
pop
or
mov
push
jl
pusha
imul
xor
jecxz
add
xor
sbb
ret
xchg
addr16
xor
xchg
pushf
fistl
sbb
xchg
dec
sbb
cmpsl
aad
xchg
sbb
pslld
enter
sub
rcrl
jmp
mov
jne
jl
mov
clc
rol
mov
call
loop
dec
outsb
xorl
filds
xchg
js
pop
js
jo
push
dec
mov
jb
popf
or
repz
nop
imul
cmp
sub
daa
int
aas
sub
push
push
sbb
inc
mov
pop
loopne
fisttps
xchg
lahf
adc
push
or
sbb
jne
cmovno
and
js
stos
orb
mov
jb
in
inc
jp
fdivrs
and
icebp
inc
cmpsl
aaa
out
xor
mov
int3
mov
rcrb
test
mov
negb
in
pop
adc
icebp
pop
cmp
pop
push
cmp
push
in
lea
ss
xor
ret
leave
bound
icebp
lahf
ror
mov
stc
jmp
movups
inc
ret
mov
jmp
xor
push
push
fidivrs
cmp
es
push
movsb
in
or
pop
xor
mov
cmc
fistpll
jle
jbe
cld
call
sub
lds
cmpxchg
jo
or
cmp
jbe
test
pop
push
pusha
imul
movsb
cld
pop
jmp
out
bound
iret
mov
push
ret
sbb
lods
cmpsl
sarl
stos
daa
pop
jbe
idivl
pusha
call
and
mov
clc
subb
les
notl
mov
sub
or
jmp
inc
and
inc
aad
ret
mov
jnp
mov
sbb
insl
ja
xchg
inc
sub
cmp
or
std
pop
pusha
add
dec
push
movsb
test
inc
jmp
sbb
push
cltd
idivb
stos
push
dec
inc
adc
pushf
push
xor
out
sbb
cmpsb
rorb
rorl
mov
xchg
les
cltd
imul
xchg
mov
ret
sub
std
sub
add
mov
arpl
iret
xchg
push
add
mov
mov
jo
call
and
mov
cs
stos
mov
lea
mov
out
push
ja
mov
xchg
lds
sub
pop
pop
repz
cmp
adc
cwtl
cmp
gs
dec
inc
rclb
mov
aad
ss
inc
lret
mov
negl
cmp
mov
and
sbb
mov
aam
mov
jg
ror
pop
inc
mov
int3
cmp
test
mov
movsl
enter
ror
test
cs
inc
add
sbb
loope
jmp
jno
mov
jne
fwait
std
cmp
test
sub
gs
mov
mov
das
lret
repnz
sbb
dec
roll
clc
mov
in
mov
sub
fsubl
fcompl
inc
adc
enter
mov
jmp
aaa
jno
aas
in
daa
int
xorl
jnp
and
gs
add
lret
sbb
push
add
pop
adc
mov
test
int
addb
adc
movsl
fcom
test
mov
jbe
test
push
ret
imul
aaa
outsl
push
movb
and
or
push
test
test
sbb
aad
dec
shlb
or
cwtl
mov
jg
mov
jecxz
mov
mov
incb
inc
xor
lods
repnz
aas
add
or
jne
mov
dec
adcl
cld
dec
cmpsl
test
inc
ret
mov
dec
mov
clc
xlat
mov
aam
scas
loop
jmp
out
mov
imul
in
loope
inc
xchg
cmp
push
xchg
add
pop
ret
scas
push
xchg
scas
pusha
sub
jg
inc
jno
mov
loopne
movsb
mov
adc
xchg
xorb
shll
dec
pushf
pusha
jl
lods
push
mov
lods
ljmp
cmp
and
inc
jnp
push
add
insb
mov
outsb
das
or
lcall
bnd
and
repz
mov
in
sub
mov
dec
popf
mov
adc
sti
mov
mov
and
mov
fidivrl
sbb
imul
push
sarb
int
daa
movb
test
movsl
ret
cwtl
mov
rcrb
jle
ja
push
test
xchg
call
mov
or
mov
jae
push
ljmp
mov
repz
mov
fistpll
cs
lret
lods
xchg
mov
mov
inc
pop
jae
sub
xor
push
notb
ret
div
add
mov
mov
mov
mov
or
push
outsb
pushf
lock
call
movzwl
cmpsb
mov
mov
push
addr16
xchg
hlt
push
loop
loope
lahf
idiv
dec
dec
add
ds
cld
push
push
or
sbb
adc
inc
out
jl
mov
add
aas
sti
cwtl
das
test
in
loopne
sbb
cli
sbb
or
call
or
lahf
add
popa
mov
xor
mov
and
push
adc
cmp
rcrl
lods
push
mov
sub
loop
xchg
xor
rcrl
push
lret
out
push
orl
in
stos
aas
lret
inc
insl
test
mov
mov
pop
mov
adc
mov
test
scas
jnp
stos
je
lods
lcall
popa
lret
cmpsl
pop
cld
adc
data16
scas
jnp
fsub
mov
divb
sbb
or
int3
mov
stos
sahf
mulb
data16
mov
xchg
fstl
push
jg
pop
popa
cmc
xlat
out
pop
mov
in
mov
test
push
loope
mov
cmp
sbb
jl
cmc
clc
or
data16
call
cmp
adcb
inc
pop
movsb
or
daa
dec
push
fstpt
sub
fwait
rcl
es
shlb
sub
loop
stos
sub
push
adc
xchg
mov
andb
leave
cmpb
sub
add
scas
sub
and
mov
push
js
outsl
arpl
insb
into
jo
js
lea
fsubs
xchg
pop
xchg
roll
fwait
aam
gs
mov
pop
adc
adc
cmp
push
mov
xchg
out
mov
lds
roll
jmp
faddl
push
ss
inc
popa
addr16
jo
mov
and
scas
or
push
add
shrl
stos
arpl
mov
sub
movsl
xor
pop
stc
les
dec
pushf
test
lock
loopne
and
xor
es
cmp
dec
inc
jo
xchg
adc
lods
outsb
stos
mov
mov
sub
int
mov
xorl
inc
or
fisubs
cmp
cld
jp
dec
mov
shrb
insl
inc
subl
and
les
inc
mov
cltd
mov
mov
or
or
arpl
roll
dec
hlt
add
aad
jo
push
leave
pop
fimull
aas
xchg
movb
mov
sahf
aaa
bnd
aas
or
or
cmp
push
jnp
ja
inc
mov
loope
andl
jae
lods
dec
add
inc
push
je
mov
jl
cmp
aam
adc
jp
lods
push
push
or
add
sbb
inc
in
and
shl
sti
cmp
flds
fdiv
scas
rcrl
jo
mov
cs
aam
leave
cmp
dec
or
lock
cmpsb
xchg
pop
repnz
out
fbld
iret
jbe
out
push
push
mov
outsb
mov
pop
pop
mov
lcall
enter
test
faddl
cli
insb
push
movsl
jmp
nop
jnp
outsb
fdivrs
sub
sarb
lods
mov
and
push
sbb
iret
jne
lahf
rclb
icebp
jle
stos
sbb
pusha
leave
insl
push
sbb
call
enter
dec
loope
dec
xor
inc
sbb
insl
mov
lods
leave
pop
inc
jg
ja
xor
mov
ret
push
shl
mov
test
pop
cs
sub
ret
fimull
push
push
xchg
xchg
aaa
and
andb
cmp
pop
shlb
cld
mov
cwtl
mov
dec
jo
punpckhwd
repnz
push
or
lods
lret
fstpl
jbe
dec
inc
or
mov
jg
test
fildl
add
mov
out
outsl
repz
rcrb
inc
cmp
scas
mov
daa
cmp
sub
mov
lock
dec
shrb
push
push
sub
jg
scas
sub
cmpsb
cmpsb
gs
in
jp
cld
popf
push
mov
or
add
outsl
mov
imul
cmp
jmp
sub
in
adc
push
cs
inc
loop
push
inc
jne
xor
movsb
mov
inc
push
sar
sbb
and
xchg
jle
rcrl
mov
cmp
scas
inc
aad
pop
insl
sub
testl
push
fwait
jge
sbb
mov
leave
pop
mov
push
mov
aam
and
sar
sbb
pop
enter
xlat
add
xchg
dec
or
xchg
xor
sar
add
mov
and
adc
pushf
jge
test
mov
sarl
mov
jg
push
mov
cli
sub
nop
loope
or
ss
or
jns
fimuls
rorl
lcall
daa
jae
or
data16
or
and
sti
jle
and
bound
xor
jge
and
xchg
scas
jbe
dec
sub
test
ja
push
mov
addr16
or
fs
sbbl
dec
mov
out
popf
mov
aaa
cwtl
sbb
int3
cmp
aam
fcoms
inc
stc
cmp
arpl
js
les
xchg
jae
fwait
or
sub
dec
int3
xchg
push
ljmp
jne
add
nop
test
stc
movsl
jne
call
dec
push
pushf
push
loopne
mov
xor
movsl
jge
inc
leave
pop
lea
dec
push
les
fs
clc
in
push
cmp
cmp
mov
mov
mov
sub
jle
and
js
popa
popa
push
mov
nop
jp
in
adc
ffree
dec
mov
sub
test
ljmp
push
adc
clc
hlt
icebp
sti
push
dec
in
test
mov
xchg
xor
es
pop
fiadds
test
repnz
bound
stos
sahf
das
icebp
bound
cmpsb
sarl
in
aaa
stos
mov
mov
dec
dec
dec
cwtl
insb
lret
aad
je
in
inc
and
jae
lcall
inc
mov
shlb
jg
lock
popa
test
pushf
arpl
xchg
les
xchg
add
mov
pop
adc
cmp
pop
mov
xchg
cltd
mov
mov
rcr
adc
fadd
jnp
sub
aaa
or
add
aad
adc
mov
aaa
cmc
pushf
stos
stos
shlb
xor
push
addl
data16
sbb
sti
enter
sahf
clc
xor
or
and
sbb
mov
in
sbb
sbb
sub
into
cmc
int
das
and
cmp
loopne
sbb
mov
push
xor
inc
insl
inc
cmp
adc
int3
lsl
mov
cli
sbbb
xchg
rorb
mov
jae
jne
arpl
or
icebp
icebp
xor
std
das
mov
in
and
in
push
cld
fsub
add
add
inc
mov
mov
and
roll
cli
cmp
repz
push
mov
add
xchg
mov
dec
pop
xchg
sbb
mov
cmp
mov
lcall
lret
notl
or
push
push
test
std
push
sahf
cld
mov
movsb
in
dec
stc
scas
cmc
sbbl
cs
incl
mov
loope
sub
out
lea
adc
ficoml
nop
jge
mov
lods
push
xor
inc
testb
mov
xor
fcmovu
dec
hlt
jne
sub
pusha
lret
mov
mov
sbb
mov
pop
adc
sbb
aam
daa
sahf
int
push
ja
aaa
roll
jg
loop
adc
in
pop
cmpsl
movsb
mov
ljmp
idivl
cmp
in
popa
inc
xor
jne
inc
mov
mov
push
fs
popf
cmp
pop
push
sub
outsb
mov
scas
push
sub
cmp
add
push
dec
cmp
fsubs
mov
mov
into
mov
in
repnz
test
jns
mov
insb
lcall
ljmp
cmpsb
leave
xchg
mov
sahf
add
push
pop
pusha
ds
out
lret
scas
in
inc
adc
jecxz
mov
jnp
ret
fwait
popa
xchg
mov
push
and
das
xchg
into
pop
pop
pop
pop
fisubl
hlt
adc
pop
out
js
push
jbe
hlt
es
ret
test
mov
sarb
push
nop
pop
sarb
repnz
fsubrs
or
sbb
pop
inc
and
sub
add
cs
inc
out
jp
mov
fisubrl
push
xor
insb
lahf
mov
xchg
sub
arpl
aaa
out
movsb
sbb
faddl
lret
test
iret
decl
and
xlat
ja
pop
mov
cmp
fcomps
push
pop
push
sbb
xor
ja
mov
test
mov
and
mov
push
xchg
mov
or
lahf
rcrb
jo
icebp
cmp
dec
dec
flds
jnp
pop
lock
mov
sub
enter
mov
addr16
sub
shl
or
push
sub
into
cmp
jmp
imul
or
loope
lods
mov
sbb
lcall
cmc
das
aas
jmp
std
inc
cli
and
jne
or
dec
iret
in
dec
sbb
xor
adc
call
sti
cs
and
cld
in
or
icebp
push
cmc
xor
jne
lahf
test
push
cmp
cmp
push
pushf
xor
pop
lds
lret
pop
testb
jns
addr16
pop
push
out
cmpsb
stos
xor
or
and
push
sahf
or
fwait
and
mov
hlt
nop
test
adc
mov
test
in
stos
add
xor
ss
aad
lods
ret
jl
aam
lea
cli
jmp
lcall
add
jle
add
push
push
jnp
cmpsl
arpl
inc
dec
ret
ds
jecxz
xlat
fisubrs
inc
std
nop
jb
mov
js
arpl
push
or
js
xor
arpl
pushf
es
jae
or
mov
inc
lea
aam
xlat
jbe
push
and
mov
pop
pusha
push
mov
sbb
je
imul
aam
mov
cmp
lret
jge
test
aam
inc
add
cmp
jae
inc
push
ret
lret
add
jo
inc
aam
add
jle
pop
fsubrl
jbe
ljmp
loopne
lcall
shlb
nop
loope
add
cwtl
shlb
inc
push
add
pop
sbb
mov
addl
jle
dec
pcmpeqw
loop
fs
cmp
shll
adc
icebp
shrl
and
mov
dec
sub
pop
pop
fsubs
insb
stos
test
sub
mov
mov
inc
mov
ds
xor
jp
aaa
push
sub
sti
out
aad
pop
cmp
in
movsb
mov
test
jp
imul
rorl
adc
jle
es
mov
mov
adc
xchg
jns
aam
inc
cmpl
and
mov
lret
sahf
mov
cli
adc
xchg
fdiv
clc
adc
add
adc
pop
outsl
lea
in
inc
imul
sbb
xchg
ljmp
sbb
es
mov
sbb
sbb
adc
scas
add
cmpsl
mov
xor
sub
stos
dec
repnz
adc
lret
imul
or
mov
sbb
mov
sbbl
adc
sub
push
daa
mov
jp
cmp
loopne
out
and
jb
adc
mov
mov
mov
test
xor
nop
add
leave
mov
cmc
fidivrs
lea
dec
cli
adc
cld
cmp
ljmp
xchg
test
xchg
jecxz
sub
subb
xchg
outsb
pop
adc
xor
cmp
xchg
fs
xlat
or
cmp
sbb
dec
into
xor
inc
pushf
mov
shll
xchg
cmp
lret
ljmp
loope
push
lods
loop
dec
std
mov
ret
push
adc
jg
add
scas
ss
push
leave
fcmove
ret
sub
sbb
mov
xchg
pop
outsl
test
sti
js
dec
add
lods
loopne
stc
repz
cwtl
mov
addl
movsb
mov
jge
mov
ljmp
vcvtps2dq
xor
inc
aam
and
rcrb
push
pop
and
push
sub
mov
stos
mov
int3
fs
add
gs
fdivp
pop
cmpsl
mov
in
or
dec
sbb
mov
icebp
xchg
outsb
push
mov
test
cmp
mov
cltd
dec
fnstcw
inc
dec
jns
aam
dec
inc
inc
pop
pop
jae
push
push
mov
mov
cmc
mov
mov
andb
inc
jno
cs
test
jb
insb
hlt
sbb
jb
fnsave
xchg
subl
dec
dec
pop
fcomi
push
jp
call
bound
sbb
adc
icebp
into
mov
nop
out
fiadds
mov
lcall
mov
lods
fwait
xor
lods
cmp
or
pop
jp
pusha
mov
xchg
lea
xchg
pop
mov
rorl
push
jmp
out
ja
mov
out
sti
sub
lods
mov
mov
scas
mov
aas
jmp
ret
add
imul
and
sarl
in
jecxz
cmp
add
adc
daa
inc
mov
sbb
jno
lcall
adc
mov
mov
fucomip
cmp
adc
sbb
cld
in
dec
lods
mov
hlt
lret
or
jb
insb
cwtl
dec
scas
repz
sbb
gs
add
mov
out
lea
fldt
xor
stos
mov
repz
mov
decl
mov
cmpsb
sub
mov
movsb
mov
mov
es
and
jne
bound
rcrl
or
cli
mov
push
cld
xor
test
inc
jl
push
fs
lods
imul
push
sahf
cli
fwait
jno
inc
or
dec
imul
add
stos
pop
out
ljmp
stos
enter
jge
sbb
shll
mov
jg
leave
clc
xor
push
addr16
xchg
faddp
xchg
fnstcw
roll
inc
test
mov
adcl
sub
imul
inc
ret
arpl
in
jmp
lods
aad
stc
bound
add
fisttpll
jmp
mov
mov
iret
scas
or
pop
pop
movl
rcrb
mov
and
das
and
push
out
out
jmp
mov
mov
sbb
shrb
int3
packuswb
push
and
leave
jns
jmp
pusha
mov
fs
cmp
es
ret
out
lcall
or
mov
in
pop
mov
mov
sub
lock
cmp
sub
rolb
inc
and
or
jne
sbb
sub
xor
arpl
xchg
mov
hlt
mov
mov
push
lea
popw
imul
sub
gs
out
jae
jno
ret
cld
dec
cli
inc
dec
imul
pop
mov
add
cmp
gs
pop
dec
xor
push
inc
xchg
adc
and
jnp
jne
stc
add
aaa
sub
push
stos
cld
out
and
ret
stos
push
mov
movsl
add
cmp
js
mov
cltd
inc
mov
lea
insb
stc
lret
ljmp
xchg
cmp
lcall
rorl
sbb
mov
push
or
inc
xor
add
mov
jp
inc
cltd
push
pop
stos
jnp
mov
orb
rclb
movl
jle
in
xchg
jg
jp
push
mov
cmpsb
push
addr16
imul
adc
out
insb
lea
xor
nop
jge
mov
push
fwait
lock
cmp
push
add
dec
or
loop
xchg
popa
and
jp
adc
outsb
pop
jle
add
dec
pop
inc
mov
lret
pop
mov
sbb
icebp
add
cmp
ds
shrl
aaa
loopne
into
mov
or
add
xchg
imul
int3
in
mov
add
push
mov
xchg
or
xor
andl
jb
xchg
pushf
test
bound
in
int3
sub
inc
or
popa
out
iret
inc
fnstenv
and
icebp
ret
sub
repnz
pop
and
adc
inc
inc
popl
dec
fcoms
in
mov
rorb
push
cmp
dec
sbb
sub
lea
test
pop
cltd
loopne
popf
adc
cmp
pop
or
and
icebp
lods
or
mov
push
cltd
xchg
lock
mov
xlat
push
shrl
sbb
jle
lods
push
hlt
ret
lods
push
mov
stos
cli
dec
cs
or
popa
or
sbb
adc
inc
mov
mov
arpl
and
and
jb
sbb
xchg
pop
pop
scas
fimuls
cmp
mov
inc
leave
cmc
aam
inc
cwtl
sbb
frstor
mov
out
scas
orb
or
pusha
repz
enter
fnstenv
out
or
loop
sub
pusha
sti
push
xor
int
ret
sti
pushf
icebp
test
mov
bound
sub
adc
mov
ret
sti
mov
pop
gs
test
scas
fwait
pushf
add
test
xchg
fcoml
cli
call
loope
mov
data16
xchg
dec
dec
gs
mov
out
mov
push
nop
fmull
cmpsb
fidivrs
lods
or
out
xchg
sar
ss
fnstsw
jge
mov
adc
inc
rclb
sbbb
mov
push
adc
outsl
cld
mov
mov
sub
aaa
add
das
push
hlt
stos
aas
lret
cmp
mov
loop
lea
incl
mov
sbb
aad
or
ret
ret
call
outsl
loope
xor
xor
mov
xor
add
pop
das
push
inc
repz
adc
lret
mov
shll
push
clc
loop
ficompl
xlat
pop
jns
std
mov
aas
pop
dec
ret
in
push
pop
inc
dec
jb
jmp
shrb
push
sub
cmp
nop
sar
mov
repz
pop
loopne
and
mov
inc
popf
adc
mov
cmp
subl
rol
in
jns
jne
mov
xor
sarb
out
push
inc
jno
cs
sti
and
es
arpl
popa
and
aad
jo
xchg
pushf
in
pop
outsl
lcall
xchg
lods
adc
xor
xor
xchg
lods
std
out
mov
inc
sub
adc
mov
pop
loop
stos
mov
imul
prefetch
call
inc
cld
add
sbb
xor
sarl
pop
and
ficompl
cmpsb
dec
cwtl
add
mov
mov
sbb
cmc
sbb
je
dec
bound
push
add
outsb
and
test
push
xchg
jns
in
cs
aad
jae
lds
lcall
rorl
xchg
insl
out
sbb
jo
addr16
js
stos
xor
and
mov
sti
cmc
push
cwtl
dec
and
inc
sbb
leave
cmp
in
xor
inc
xsha256
cmpsb
aam
notb
repnz
jno
push
sub
cld
lahf
xlat
repnz
or
mov
jae
jae
aam
aas
loope
or
test
xchg
sub
push
into
mov
popa
inc
clc
xchg
lds
clc
sub
inc
mov
mov
inc
data16
inc
stos
fdivr
rcll
or
insb
mov
clc
popa
jecxz
ja
fimull
xchg
xchg
and
and
loopne
sar
mov
pop
out
loopne
xchg
lds
loop
xor
test
adc
xor
cmpsb
and
cmp
push
jmp
and
sub
and
dec
mov
mov
outsb
aad
mov
ja
cmpsl
cmp
push
pusha
fsub
sbb
and
lahf
mov
dec
loope
adc
adc
dec
sbb
mov
rcrb
sbb
dec
mov
lret
pop
cmp
je
push
sub
sub
xor
lock
lods
mov
cld
add
imul
ss
iret
push
pop
ret
xchg
ljmp
push
mov
jge
dec
sbb
xor
cmp
or
pop
mov
dec
lret
or
mov
sbb
sbbb
mov
lret
popf
andb
or
repnz
pop
or
pop
sub
xchg
cwtl
sub
adc
adc
cmp
pop
fcomps
out
add
pop
cli
and
mov
cmp
pusha
xchg
les
inc
js
mov
add
xchg
sbb
push
xchg
out
enter
or
rorl
iret
jns
out
call
les
mov
adc
cltd
xchg
adc
jl
popf
bound
lock
mov
sub
outsl
adc
stc
cli
pop
insl
stc
xor
movsb
loope
cmp
lahf
pop
rorb
popf
xchg
daa
lret
aad
pop
insb
adc
pop
inc
push
pop
enter
minps
sub
sbb
mov
inc
jb
xchg
cli
rcl
sbb
pop
push
push
mov
push
mov
sbb
ret
cmc
cld
push
insl
mov
mov
dec
popa
lods
inc
divb
test
mov
je
sub
pop
and
and
int
ljmp
nop
cmp
mov
decl
or
adc
lret
cltd
xor
popa
push
imul
mov
dec
inc
cmp
lcall
xor
ja
popf
xlat
and
addr16
lds
adc
jno
inc
icebp
xchg
jge
movsl
out
rcrb
popa
pushf
sub
insb
sub
mov
mov
push
mov
cmp
jnp
movsl
push
scas
es
push
jle
shrb
or
pop
iret
mov
mov
cmp
test
mov
lods
adc
mov
xor
imul
mov
orb
sub
aaa
int
sub
loopne
ljmp
ljmp
dec
mov
inc
scas
scas
stc
cmp
add
add
in
fisttpll
shr
sub
inc
lea
adc
int3
insb
push
jg
jp
push
shll
ss
rorl
xchg
insl
add
sub
adc
shll
rcll
mov
xor
shr
xlat
in
in
ret
ds
jo
add
sbb
jmp
or
mov
lret
lods
mov
or
je
into
test
sbb
jns
mov
push
cmc
add
xlat
jno
lcall
pushf
and
fwait
mov
adc
pop
test
push
dec
xor
xchg
outsl
lock
inc
sbb
fidivl
xor
add
imul
dec
pop
testb
shrb
jl
gs
popf
or
in
in
test
pop
mov
mov
xor
pop
daa
xchg
sbb
call
pop
mov
jns
mov
inc
adc
adc
ret
inc
std
and
out
dec
push
sub
jmp
leave
add
lds
jle
and
hlt
jnp
fisttpll
inc
push
mov
mov
fisttps
xor
into
pop
mov
adc
ja
sarl
jo
jg
inc
dec
xor
push
and
mov
mov
je
adc
cli
lret
or
jnp
pop
fsubl
sub
iret
push
xor
addr16
xchg
outsb
pop
push
adc
or
push
int
mov
out
out
fwait
jae
idivb
loopne
sbb
lcall
sbb
xor
cli
fwait
int3
jecxz
popf
adc
cmp
aaa
in
mov
pop
imul
sarb
inc
nop
icebp
sbb
loope
sub
mov
je
lret
fisttpll
lock
jnp
push
push
les
cld
movb
add
cmp
imul
jle
sbb
push
int3
outsl
lock
cmpsl
gs
notb
nop
sub
mov
imul
int3
mov
jbe
cmpl
clc
inc
and
mov
add
inc
lods
in
lods
adc
mov
sub
xchg
or
xor
lods
addl
bound
ja
dec
lods
xchg
stos
add
mov
xor
jg
and
inc
xchg
xor
inc
addr16
out
fmul
ss
out
add
adc
push
lods
fstl
mov
hlt
ror
mov
jae
call
faddp
and
fcmovnu
mov
jg
int3
std
divb
mov
xchg
sub
clc
shrl
ror
xchg
lea
and
lods
push
aad
rcrl
xchg
mov
mov
icebp
add
adc
xor
and
inc
cs
inc
dec
xor
or
xchg
mov
sub
push
or
jmp
cs
xchg
ret
leave
iret
fnsave
mov
mov
pushf
mov
mov
scas
pop
rcll
hlt
mov
iret
fisubl
dec
push
call
xchg
adc
adc
lock
movsb
push
std
popf
xor
pusha
sub
int3
lahf
push
cli
stos
inc
sub
dec
push
mov
pop
ret
loope
or
popa
sbb
inc
ja
rcll
in
cmpsb
and
mov
cli
adc
dec
in
jmp
mov
inc
mov
xchg
loopne
mov
push
dec
lcall
pusha
sbb
int3
movsl
fld
je
push
jb
mov
jne
mov
imul
push
jl
popa
sti
sub
ror
es
or
test
mov
dec
push
mov
into
pop
mov
fcomi
cmp
mov
pop
rorl
bound
mov
gs
or
jb
inc
dec
xchg
xlat
pusha
dec
es
cs
cli
sub
sbb
cli
cld
jle
pop
dec
movsb
sti
push
xor
cwtl
and
out
dec
xor
lcall
jle
mov
sub
fistl
js
pop
fmull
xlat
fcmove
dec
sub
pushf
dec
cmp
mov
push
cmp
inc
lahf
enter
xor
jmp
and
dec
fsubr
daa
aas
jmp
jl
adc
xchg
int3
fucomip
es
ljmp
jno
dec
pop
sub
jmp
sub
stos
out
mov
int3
fs
mov
mov
out
mov
ja
out
aad
popl
xchg
fnstsw
jge
jmp
addb
stc
and
test
das
mov
fistl
xor
xchg
mov
nop
gs
idiv
adc
lcall
mov
push
arpl
dec
addr16
out
jne
mov
out
cli
test
fildl
dec
push
pop
ds
mov
fisubs
es
mov
xor
jbe
push
out
dec
out
pushf
notb
mov
scas
mov
and
sbb
mov
enter
ret
add
and
push
stos
adc
add
sbb
test
pop
or
mov
sub
jno
xchg
inc
shlb
ret
dec
push
mov
mov
sub
aad
inc
clc
add
popf
mov
hlt
add
mov
inc
push
mov
cmpsb
cld
cmp
inc
pop
sbb
in
call
aas
jae
icebp
and
stos
push
push
dec
lods
mov
pop
sub
es
mov
cld
lods
test
xchg
scas
xor
shlb
sub
ss
imul
aam
bnd
pop
or
push
mov
mov
lret
cmpsb
fadds
notl
push
xor
jne
push
mov
fwait
stos
mov
pop
mov
add
daa
pop
or
jo
mov
imul
addr16
cmp
movsb
outsb
or
and
les
and
imul
dec
add
shlb
clc
mov
jne
jo
test
jnp
dec
sbb
int3
addr16
pushw
sub
in
hlt
push
xor
xor
lret
int3
or
iret
fildl
adc
das
decl
inc
xor
outsl
in
lahf
daa
jb
xchg
push
mov
stos
sbb
stos
stc
in
mov
mov
jl
nop
fsub
add
cld
xor
in
ror
imul
add
idivl
mov
inc
and
jmp
cmp
fbstp
sub
sbb
gs
push
adc
rclb
sbb
dec
lcall
movb
dec
xchg
out
xor
cltd
xchg
lea
cld
sub
loop
add
mov
cmc
xchg
enter
xchg
mov
or
jge
pop
cltd
fwait
sbb
push
pop
mov
pop
ret
in
add
bound
xlat
icebp
repnz
lcall
mov
je
dec
jmp
push
mov
cmpsl
jns
orb
push
push
lahf
int3
enter
sbb
jbe
inc
fwait
dec
pushf
cmp
dec
jmp
adc
xchg
lds
gs
ja
les
sbb
pop
in
add
in
dec
loopne
lock
pop
jmp
and
popf
pop
sbb
test
dec
outsl
adc
xor
push
sbb
xchg
aam
sub
adc
int3
out
fsubrl
leave
pop
les
cvttps2pi
fwait
cltd
clc
mov
jo
adc
pop
jbe
sbb
or
or
in
mov
xor
push
pop
int3
aam
pop
or
es
lret
pushf
push
xchg
mov
mov
and
sbb
xor
inc
sub
inc
outsl
into
adc
nop
les
cltd
xchg
cmpsb
mov
sbb
sarl
mov
cmc
add
sbb
sub
and
dec
repz
lea
mov
mov
push
or
in
mov
in
or
and
pop
xor
mov
insl
jno
sub
xlat
shl
bound
inc
sti
cmc
outsl
pop
ret
xchg
xor
pop
mov
mov
push
cwtl
mov
rorl
fisttpll
lcall
push
xchg
adc
push
jmp
push
adc
inc
divl
enter
cltd
movsb
insl
adc
mov
inc
mov
lds
stos
xchg
divb
outsl
cmp
ret
js
lods
les
jnp
pushw
mov
adc
iret
mov
fildll
outsl
adc
cmp
scas
sbb
subb
push
sub
jmp
sbb
mov
divl
int
lret
stos
xchg
mov
inc
sub
lcall
fisubl
test
pop
cmp
stos
mov
lods
inc
ret
cmpsb
xchg
dec
push
in
movsl
roll
and
inc
sbb
in
cs
cmp
mov
xor
inc
mov
popf
ret
sbb
inc
dec
dec
sti
cld
in
mov
dec
lock
lret
outsl
fisubs
pop
das
adc
mov
jae
cwtl
jp
call
inc
sbb
sub
push
shlb
jg
arpl
cs
popf
add
clc
cld
test
negl
xor
sbb
pushf
adc
sub
loope
andl
lds
test
inc
cmpb
repz
jle,pt
sarb
cmp
mov
out
ret
lea
add
hlt
add
mov
adc
add
inc
jns
push
js
jnp
test
addr16
xchg
push
cmpsb
mov
fnsave
adc
push
rclb
jg
pop
clc
fwait
movl
sbb
mov
scas
es
pop
hlt
pushf
add
or
jno
clc
rcrb
mov
sbb
jno
inc
int
cmpsl
test
dec
ljmp
inc
push
pop
scas
pushf
or
int3
sbb
mov
mov
jnp
dec
jb
and
icebp
sub
inc
gs
cmpsl
pop
loop
lcall
aas
pop
std
inc
cmpsb
adc
bound
bound
push
enter
es
sub
inc
adc
pop
jmp
fisubrl
ds
test
shlb
pusha
enter
mov
cmp
ljmp
inc
mov
dec
inc
or
push
das
inc
lahf
loop
icebp
or
push
push
cmp
das
push
insl
ficomps
test
cs
xchg
adc
clc
int
out
lahf
push
and
or
int
mov
int
rcr
xlat
pop
mov
inc
cmp
cltd
xor
jbe
add
jnp
bnd
or
mov
mov
adc
pop
push
lods
cs
stc
imul
rcl
fiadds
cmp
fisubrs
inc
nop
stc
or
loopne
xor
sub
xchg
fistl
ljmp
mov
push
mov
ljmp
jno
mov
push
shll
aaa
hlt
push
scas
pop
out
pop
dec
es
mov
jmp
xor
jne
mov
or
ljmp
cmp
call
sub
fistps
and
and
xchg
gs
fsubrp
inc
xchg
cmp
mov
ja
sbb
xor
push
and
popf
adc
xchg
fiadds
push
addr16
test
dec
shr
mov
pop
aaa
icebp
cmp
mov
sbb
adc
pop
cmpsl
es
xchg
xchg
clc
aaa
or
mov
fs
mov
inc
scas
jno
xchg
negb
mov
pop
push
sbb
stos
push
jns
ds
sub
adc
jo
ror
leave
in
mov
mov
jbe
fsubs
sub
jo
jmp
add
jns
iret
mov
pusha
out
stos
cltd
shll
jecxz
pop
inc
insb
ret
imul
mov
inc
sub
pop
and
das
xor
mov
loopne
pop
mov
int3
sub
sub
dec
nop
mov
ss
jmp
std
push
jp
xchg
add
xor
leave
xchg
pop
sti
out
sbb
dec
lretw
cmp
add
lods
ficomps
loopne
ret
jae
std
dec
xor
popa
imul
aad
scas
hlt
xlat
mov
ljmp
daa
in
mov
out
stos
dec
sub
jle
jae
outsl
loopne
mov
xchg
je
cwtl
add
pop
sbb
push
outsl
add
out
push
subl
inc
outsl
dec
cli
jae
push
inc
mov
dec
mov
jmp
lods
andl
adc
jg
or
dec
mov
pusha
stos
sub
mov
xchg
sbb
insb
leave
xor
mov
cmpb
icebp
lods
sbb
cltd
test
cmp
int
fs
inc
and
or
push
clc
push
jge
push
push
xchg
lds
scas
adc
mov
push
mov
pop
addl
imul
mov
hlt
cmpsl
adc
mov
rorb
adc
adc
mov
lret
addr16
mov
xor
push
and
pop
flds
jg
sbb
clc
push
shlb
or
and
mov
outsb
add
loop
push
fwait
and
outsb
fbstp
pop
aam
sbb
jge
sbb
push
hlt
sub
sar
js
pop
rcrl
stos
lahf
jb
clc
cmp
xchg
inc
push
cmpsb
xchg
cwtl
xchg
test
cltd
push
outsl
jmp
imul
sbb
add
xor
mov
add
sar
pop
mov
push
data16
andl
jae
or
mov
ret
out
test
mov
lods
and
xchg
insl
lret
roll
sbb
sub
push
je
sbb
pop
dec
push
dec
js
inc
pushf
ja
enter
cmpsb
cs
push
je
mov
sub
fcomps
imul
xor
rorb
dec
stos
xchg
das
xor
mov
pop
xchg
push
nop
das
push
adc
xchg
pop
cmpl
scas
fldenv
inc
mov
adc
movsl
xchg
push
sub
adc
aaa
jbe
movsb
mov
push
xchg
enter
inc
mov
sub
hlt
add
sbb
ud2
push
add
mov
adc
inc
inc
push
push
je
fwait
test
push
inc
stos
mov
mov
repnz
adc
fildll
js
mov
inc
sub
call
cmp
add
jecxz
inc
or
push
sub
es
cmp
dec
in
cmp
mov
inc
jp
fucom
test
cmp
mov
cli
in
div
sub
shlb
call
rcl
sbb
test
fdivrs
push
push
sahf
ja
mov
test
movsb
add
sbb
insl
inc
add
js
icebp
pop
cmc
sbb
cmp
lret
ss
dec
hlt
scas
add
int
adc
movsl
add
cs
in
cltd
xchg
pop
sub
je
hlt
data16
jle
cs
cmpsl
or
icebp
cmp
frstor
xor
lds
and
push
push
leave
jl
test
lret
inc
fwait
cli
xor
jbe
push
dec
and
cwtl
repz
push
xchg
and
fistps
out
mov
incl
sub
sbbl
dec
jae
pop
aaa
pop
mov
imul
push
cltd
mov
push
lods
insb
mov
jns
dec
push
std
mov
jp
lock
add
or
sub
je
mov
jg
clc
test
leave
pushf
fisubl
mov
shlb
mov
dec
enter
popf
movsb
mov
pop
xchg
fldt
les
int
xor
sub
pop
mov
orl
push
int3
leave
push
push
xchg
dec
push
lock
or
repz
and
push
outsl
lods
test
jno
mov
nop
push
inc
jmp
jg
cmp
loopne
rcrl
stc
iret
enter
mov
xor
mov
xor
inc
mov
imul
pushf
pop
cmpsb
lods
mov
lret
je
insb
mov
ja
leave
movl
stos
add
mull
dec
scas
repz
sub
aas
lret
gs
pusha
es
mov
and
xor
pusha
push
add
das
sbb
call
test
movsb
cmp
loope
cmp
scas
adc
sbb
cli
mov
inc
pop
loope
stos
shll
push
or
je
pop
out
test
subb
xchg
jne
lcall
test
mov
and
out
sarb
and
fsubp
pop
out
mov
add
cmp
out
shll
mov
xor
loope
bound
ja
mov
aam
cltd
mov
dec
incl
sbb
cmp
xlat
dec
xor
cmp
sti
mov
inc
sub
ret
in
cvtps2pi
xchg
inc
arpl
cld
or
mov
adc
lods
sub
push
dec
cmp
pop
pop
mov
mov
icebp
mov
xchg
mov
iret
add
mov
shll
sub
sbb
outsl
stos
cli
int
aam
ret
repz
mov
and
clc
mov
cmp
insl
push
sub
arpl
inc
lea
lods
and
cltd
pop
cs
pop
or
stos
xor
dec
mov
out
fidivrs
stc
mov
les
mov
shl
outsb
cmpsb
out
call
sbb
add
les
mov
test
pusha
test
sub
dec
incb
add
aaa
xchg
inc
pop
xchg
dec
mov
sub
sub
out
insl
jno
mov
pop
ljmp
cmp
mov
ja
xchg
jle
fimuls
lea
iret
mov
jl
mov
add
mov
lcall
xchg
dec
cli
stc
clc
inc
movsb
jno
cmp
rorb
sarb
movsb
or
adc
jnp
add
and
push
clc
test
push
xchg
bound
dec
insl
and
add
loopne
aad
or
aas
fsubl
in
fsts
nop
or
push
jle
lock
xor
mov
leave
ja
lods
mov
stos
cmpl
repnz
and
jp
lds
gs
push
scas
inc
xchg
mov
xchg
out
push
or
xchg
hlt
lock
leave
xor
pusha
clc
xchg
sub
lods
inc
mov
mov
mov
cmp
lods
xchg
nop
rcr
fs
addr16
imul
mov
and
jp
sub
jnp
and
dec
add
sub
fsubl
pop
mov
stos
shll
test
pop
push
outsb
in
add
lahf
pop
pop
push
pop
lods
fwait
dec
inc
int3
icebp
cs
mov
subl
iret
mov
frstor
rolb
sahf
cmpsb
mulb
cmp
popf
cmpsb
sbb
mov
xorl
adc
loopne
hlt
mov
insb
ret
in
cltd
push
enter
fwait
test
jl
out
addr16
out
ds
xor
jge
sub
fcomip
dec
es
inc
sub
mov
aam
test
xchg
dec
int
mov
leave
scas
cmp
sub
and
mov
or
stos
push
sti
repnz
test
mov
sbb
dec
lock
jae
jne
mov
pop
jp
test
in
inc
hlt
ret
out
dec
mov
jns
enter
push
mov
icebp
ljmp
push
jae
jmp
inc
cmp
les
arpl
hlt
push
xor
les
xor
pop
roll
jmp
xchg
mov
jo
xor
shll
sbb
add
adc
fldenv
pop
mov
ret
push
or
lock
cli
inc
add
adc
subl
jno
dec
push
xchg
fldenv
mov
btc
or
lret
icebp
mov
xor
rcrl
lods
mov
cmp
add
adc
insl
or
repz
fucomp
pop
jbe
adc
daa
sub
scas
jg
cmp
push
xchg
push
push
jmp
jb
lret
mov
outsb
loope
jecxz
pushf
mov
and
ror
and
lret
cwtl
inc
lea
jbe
mov
or
cmpsl
enter
incl
test
push
outsb
or
int3
das
jg
lods
cld
sub
xchg
loope
inc
cwtl
dec
imul
cmp
xchg
faddl
mov
cmp
jl
mov
fldl
inc
into
sbb
mov
addl
and
add
lock
ja
fcmove
sub
clc
inc
adc
shll
imul
cmpsb
imul
test
stc
call
push
adc
arpl
mov
subb
popf
ds
pop
daa
out
pop
fs
dec
sub
mov
mov
and
lret
xchg
out
xchg
sub
movsb
in
popf
push
inc
add
and
or
mov
xchg
out
adc
or
mov
sub
or
inc
jmp
xchg
fidivrl
mov
cld
dec
out
pop
mov
jp
subb
cmp
pop
es
and
and
lea
jno
adc
cli
pop
jbe
cmpl
ret
sar
fs
outsb
lcall
push
repnz
mov
adc
add
test
lods
push
push
jecxz
lret
dec
lret
or
scas
push
or
mov
mov
out
jnp
or
xchg
cmpsl
ficoml
iret
repz
or
into
jnp
mov
sub
je
fcmovnbe
stc
pop
mov
xchg
xlat
lcall
mov
pop
repz
xor
insb
xchg
jnp
sub
enter
cmp
jbe
ljmp
push
push
dec
testl
arpl
inc
jne
jae
jecxz
jmp
pop
out
cltd
xchg
fwait
inc
xorl
ds
sub
lods
nop
es
lahf
pop
out
stc
pop
mov
ljmp
cmp
and
sub
pop
cmp
popa
in
mov
xchg
sub
cmpl
repz
gs
sub
and
call
pop
push
dec
imul
mov
inc
in
in
xor
jle
xor
inc
daa
out
mov
fsubrl
insb
pop
mov
std
mov
add
mov
sub
and
xlat
adc
test
je
push
jb
ds
sbb
or
and
shrl
mov
pop
push
and
jle
stos
mov
gs
xchg
push
mov
jnp
sahf
add
cmp
movsl
pop
lock
test
lret
inc
push
xchg
lock
and
dec
xor
repz
jg
pop
xlat
or
cwtl
loopne
mov
ret
xor
aad
loopne
clc
cmp
out
loop
outsb
mov
in
adc
xchg
dec
jno
imul
and
ljmp
jecxz
mov
stos
dec
imul
in
int3
mov
test
xchg
repnz
push
mov
mov
loop
lahf
rcl
cmpsl
lret
sahf
lcall
push
fwait
push
mov
movsb
push
movb
out
lret
xor
movsb
inc
and
ljmp
call
and
jle
stc
lret
inc
jne
mov
lret
daa
aaa
or
or
push
and
subl
inc
adcl
pop
pop
pop
sub
xlat
fisttps
or
leave
jg
out
ja
dec
inc
ret
lret
nop
push
lcall
xchg
inc
and
push
push
scas
jno
sub
cmp
enter
insl
pop
mov
xor
adc
xchg
cmc
insb
xor
clc
xor
xchg
xchg
push
and
andl
mov
jb
adc
cmp
mov
call
popa
cld
je,pn
and
jno
shr
dec
test
call
push
test
xor
pop
es
mov
insb
adc
add
xor
aas
push
mov
jecxz
in
out
jp
movsb
aaa
out
push
aas
pusha
lahf
cmp
pop
addr16
jae
cs
imul
jl
jge
out
and
and
movsl
std
and
pop
rolb
and
cmc
fwait
ret
pop
dec
repz
ds
mov
je
repz
dec
mov
pop
sti
out
pop
adc
mov
mov
mov
js
push
dec
cmpb
test
jle
cmp
ret
push
dec
in
js,pn
scas
dec
sbbl
mov
fdivl
cmp
cmpsl
mov
les
insb
nop
cli
or
mov
pop
shrb
dec
push
pop
xlat
dec
notb
mov
sbb
call
loop
int
cmp
add
xor
or
ss
xchg
call
jno
imul
andb
lods
push
dec
xchg
test
incb
mov
push
add
xor
shll
fidivrl
sbb
ret
push
out
inc
cmp
out
xchg
ds
arpl
mov
xchg
iret
inc
jle
mov
arpl
mov
ja
dec
sar
call
fs
mov
hlt
cmpsl
mov
stc
sbb
mov
repz
je
inc
andl
xor
call
sub
repnz
xor
push
inc
mov
push
xchg
cmp
mov
pop
es
xchg
mov
repnz
das
rcrb
lds
test
div
mov
push
mov
dec
mov
jmp
mov
test
inc
cmp
pushf
cmpsl
xchg
pop
mov
jo
mov
pop
add
xchg
mov
pop
cmp
mov
pop
push
or
lahf
push
lret
xor
cmp
or
mov
in
inc
mov
cwtl
mov
xchg
sub
outsb
adc
dec
daa
lods
nop
js
lock
mov
xorl
push
xchg
and
xchg
jno
cwtl
adc
push
fistl
adc
popf
pusha
inc
mov
pop
add
pop
sub
mov
push
mov
sbb
out
leave
add
loop
mov
ja
sbb
sahf
lahf
imul
jo
data16
add
adc
repnz
sbb
lock
mov
sub
mov
cld
cltd
ret
clc
adcb
nop
adc
test
pop
push
ret
ljmp
push
jbe
mov
inc
shlb
inc
mov
mov
fistps
daa
jae
pop
sub
sub
outsl
cmp
push
gs
in
xor
test
leave
out
sbb
rclb
or
mov
inc
imul
inc
add
or
push
movsb
add
jp
scas
scas
cmpsb
push
out
sarl
ret
and
or
mov
sbb
lret
push
jecxz
mov
dec
adc
gs
mov
call
inc
push
in
rclb
mov
shlb
xchg
pop
or
or
cmp
arpl
inc
adc
xor
xchg
and
mov
out
jp
adc
pop
faddl
xlat
or
inc
mov
ret
mov
push
vmwrite
test
jg
sub
or
mov
shr
xor
popa
mov
lret
icebp
outsb
jae
lcall
dec
dec
int
pop
shll
sub
mov
or
and
out
xlat
repnz
dec
adc
mov
sbb
cmc
mov
sbb
push
nop
test
test
rcll
pushf
inc
les
rcrl
test
test
mov
cmp
ja
add
push
inc
outsl
inc
pop
sub
dec
add
adc
sbb
adcl
fstl
mov
mov
push
cwtl
dec
adc
cmp
insb
nop
inc
ljmp
push
mov
add
loopne
xor
imul
sbb
mov
xor
and
into
cltd
jne
into
push
incb
aas
xor
mov
mov
rclb
pop
out
ret
movsb
test
sbb
daa
pop
rorb
mov
test
xor
pop
xor
dec
push
inc
int
or
imul
pop
lods
sub
inc
dec
jae
mov
cli
divb
int
mov
and
inc
daa
ret
jp
bound
mov
mov
pop
mov
cli
mov
rorl
cmpsb
add
repz
jge
mov
add
xor
xchg
or
mov
inc
add
jmp
enter
jle
jle
jnp
cli
cmp
js
adc
push
xchg
add
mov
in
pop
pop
mov
dec
lock
pop
add
ja
mov
mov
dec
sub
add
mov
rcrl
inc
cli
pop
sub
or
adc
push
sub
rol
jns
jbe
or
xor
cmc
add
fisttps
jle
jge
movsl
int
mov
push
push
inc
xlat
cmpl
cmc
arpl
cmp
sti
iret
mov
imul
xchg
repz
and
mov
addr16
cmp
or
push
mov
cmp
mov
adc
imul
jb
sbb
xor
js
ficoms
aad
test
gs
pop
out
fwait
cltd
push
or
pop
push
std
sbb
jae
bound
aam
sbb
cltd
shll
mov
hlt
idivb
out
ret
fidivrs
xchg
push
cli
dec
adc
jae
mov
aaa
orl
push
aam
sbb
inc
inc
lret
mov
xchg
lds
pop
sub
inc
mov
cvttps2pi
jo
cmp
cwtl
mov
adc
pop
inc
mov
hlt
push
push
dec
pop
movsl
cmp
aam
iret
shrb
ret
lahf
lret
fnsave
idiv
pop
lds
push
mov
fldcw
inc
pop
dec
or
loopne
lods
adcb
or
rorl
fwait
insl
lock
loope
insl
das
inc
lods
je
jne
cwtl
sbb
jmp
mov
mov
fildll
outsb
xor
js
movb
jecxz
jae
cmp
loop
inc
add
daa
iret
stos
cwtl
add
imul
enter
nop
divl
sbb
dec
repnz
outsb
in
jbe
or
pop
push
and
sbb
add
cltd
fwait
dec
push
and
pop
shll
mov
movsb
rcll
xchg
push
adc
out
or
lcall
jbe
enter
mov
pushf
sbb
loop
or
push
add
stos
sahf
cmp
mov
jmp
cwtl
sbb
inc
outsl
leave
sahf
xchg
cmpsb
scas
bound
pop
sub
roll
mov
adc
mov
add
cmc
mov
inc
mov
jmp
les
ja
insl
inc
xor
testb
sub
arpl
lock
mov
inc
or
dec
in
repz
jmp
sub
add
je
sbb
ret
dec
jmp
loopne
xchg
mov
icebp
imul
xchg
and
mov
cld
sbb
adc
jno
pop
bound
inc
sbb
add
in
adc
cli
and
or
fwait
cmpsl
mov
cmpsb
test
addr16
ror
arpl
xchg
jno
xor
mov
cltd
icebp
aas
sbbb
push
jno
mov
push
aam
inc
pop
push
pushf
cmpsb
xchg
daa
lcall
adc
fstpl
mov
nop
cwtl
push
mov
ljmp
jo
cmc
mov
sub
mov
jmp
mov
mov
lcall
out
fwait
addr16
mov
paddq
mov
cmpsl
mov
movsl
lock
ds
repnz
daa
lret
ficompl
lods
leave
int3
sub
mov
ja
adc
xchg
gs
lcall
stc
aas
int
insl
xchg
aad
cmp
or
jg
outsl
int
sub
filds
push
push
jae
lret
or
pushf
or
pop
sbb
jl
popf
jae
fs
push
jb
stos
cs
and
rorl
mov
inc
jne
pop
subb
mov
imul
stc
xchg
or
lock
pop
pop
out
scas
push
jae
inc
iret
xchg
testl
xchg
push
adc
shl
cmp
mov
mov
dec
pop
cmpsb
or
dec
mov
jmp
push
inc
insb
or
or
loopne
lds
fwait
cmp
fcmovu
pop
std
mov
ret
jle
outsl
inc
lret
in
push
loop
ds
dec
jbe
pushf
pusha
dec
lcall
das
mov
pop
sbb
or
and
incb
mulb
xchg
push
out
sbb
daa
adc
es
sub
vbroadcasti64x4
pop
aad
mov
cmpsb
jne
jecxz
sub
jmp
sbb
xchg
jp
push
push
jl
shl
mov
push
mov
ret
sbb
stos
scas
or
lock
jbe
leave
aam
lret
cltd
pop
fiaddl
push
pushf
inc
ret
add
sarl
mov
sbb
pushf
push
mov
inc
and
rorb
js
xchg
push
push
stos
fnstcw
hlt
iret
pop
pop
das
jbe
xchg
outsb
xchg
adc
jbe
jo
mov
pop
inc
push
sti
push
cmc
lods
push
gs
xor
or
adc
pop
dec
orw
pop
mov
adc
sbb
xchg
cltd
imul
and
add
imul
jmp
jp
adc
sub
mov
and
push
pop
jp
icebp
jp
jl
push
xchg
jo
cmp
mov
jmp
add
mov
aas
fisttpll
ret
test
mov
shll
xchg
je
mov
lea
push
inc
push
cli
cmp
inc
mov
into
test
lret
movsl
mov
xchg
mov
mov
add
lods
cmp
jle
in
and
jne
mov
test
and
add
lods
popa
pop
push
imul
mov
jge
jns
popa
sahf
cmpsl
sbb
into
sbb
xor
ret
jmp
scas
aas
xchg
les
jbe
inc
lods
cs
sbb
xor
dec
rcll
sub
jno
js
cmp
shll
fists
push
rolb
loop
mov
jmp
scas
mov
dec
mov
loope
mov
lret
test
mov
xchg
and
xor
jge
xchg
and
mov
push
test
jmp
sbb
dec
cmpsl
divl
sbb
aad
xorb
sub
insb
cmp
add
es
jle
xchg
mov
xchg
xlat
stos
pop
faddl
xor
sub
mov
cwtl
cmpsl
and
cmc
inc
lret
and
mov
sub
pop
jne
sbb
inc
decl
push
popf
mov
fidivrl
sub
add
dec
pop
lcall
and
in
inc
shlb
js
into
out
dec
mov
cld
inc
adc
adc
out
popa
ss
xchg
push
jae
mov
lret
xchg
add
ret
gs
pop
push
sahf
jp
mov
inc
pusha
dec
sbb
stc
jge
adc
add
bswap
shrb
mov
inc
scas
fstl
adc
and
mov
mov
lret
push
dec
or
stos
mov
insl
or
adc
hlt
cmp
inc
ja
lret
fs
inc
dec
push
mov
ret
jne
jecxz
ror
into
sbb
loop
je
popa
mov
sub
sbb
jne
jns
xor
test
dec
sub
ljmp
xchg
div
push
rcr
push
push
enter
push
xchg
pop
stos
cmc
and
jl
dec
xchg
push
sbb
push
insl
push
sbb
incb
adc
adc
push
rorl
aaa
dec
es
push
fcmovnbe
jo
mov
aam
clc
dec
mov
stc
dec
and
mov
and
cmc
mov
cmp
add
mov
jo
push
cli
push
cltd
or
nop
out
movsl
pushaw
es
pop
add
in
iret
lock
mov
fmull
add
sub
cli
adc
cmc
or
push
divb
add
das
cmp
std
mov
mov
ss
xor
mov
popf
shll
scas
mov
inc
inc
pop
cs
andl
push
mov
mov
movsb
daa
jae
es
xor
mov
jecxz
lahf
push
cmc
mov
jg
mov
pusha
movsb
in
stc
dec
rorb
scas
lcall
adc
xchg
lods
xor
in
outsl
xor
inc
jbe
cmp
push
ja
scas
cmp
out
pop
mov
hlt
fnstsw
jno
mov
adc
lods
les
xchg
addr16
jle
add
mov
sub
dec
pusha
imul
in
ret
sarl
lea
dec
lods
or
sbb
and
test
arpl
mov
cmpsl
sarb
das
or
dec
in
movsb
test
xchg
outsb
jmp
xchg
nop
sub
out
shlb
xor
leave
and
rcr
inc
ret
or
jecxz
pop
or
stc
or
sub
ror
mov
pop
mov
or
inc
lods
movsl
repnz
cmp
icebp
notl
je
imul
adcl
fisubrl
cmp
lea
leave
mov
dec
cmpsl
or
or
xor
dec
jg
mov
cs
nop
jp
sbb
xchg
jle
inc
cmp
xchg
int3
add
jbe
mov
push
enter
jmp
jns
jp
jmp
fildll
ret
mov
lahf
push
add
xor
gs
subb
mov
jnp
fwait
jle
pushl
dec
sbb
cmp
stos
adc
cwtl
rorb
mov
cwtl
inc
lods
js
push
ja
push
sbb
mov
adc
notb
les
cs
sub
dec
fidivs
ja
or
lods
cmp
push
sbb
xor
cs
jp
sahf
jbe
inc
test
scas
pop
cmp
imul
out
subl
pop
test
xor
sahf
sub
imul
popf
cmp
std
pop
fcmovb
clc
inc
cmpsb
jle
mov
xor
sub
mov
jp
xchg
fs
adc
test
loopne
cmp
xor
jl
cwtl
or
test
sbb
jne
test
orl
sub
add
sti
insl
mov
push
adc
je
insb
lcall
jp
mov
dec
lods
mov
jno
sub
cltd
lea
in
in
adc
mov
leave
xlat
std
push
sub
push
mov
test
dec
arpl
int
sub
nop
sbb
into
in
adc
movsb
scas
aaa
popf
addr16
sub
add
scas
mov
adc
les
addl
pop
test
xor
sbb
jb
dec
jno
or
pop
adc
push
mov
stos
add
pop
bound
jnp
test
sbb
outsb
mov
cmp
cmp
rcr
js
mov
and
and
sar
fs
sub
cmp
hlt
fidivs
cmpsl
inc
add
cmp
mov
inc
orb
mov
inc
jb,pt
cwtl
data16
movsb
cli
insb
outsl
cltd
pop
mov
push
adc
mov
cmp
loop
fists
aam
movb
mov
int
jecxz
jp
loop
icebp
std
imul
roll
jge
jns
sbbl
push
push
push
shlb
cmp
dec
mov
fisttps
mov
shrb
xor
gs
std
mov
lahf
dec
shll
add
into
stos
xor
dec
xor
push
cli
push
ds
adc
mov
cltd
sbbl
mov
mov
mov
popa
ds
addr16
push
jns
test
loopne
pop
dec
or
cmpsb
ljmp
sub
pusha
in
nop
dec
sbbb
jb
push
pop
xchg
push
outsl
mov
adc
popa
in
pop
jl
test
push
repz
push
out
jecxz
hlt
fistps
mov
pop
cmp
shll
call
xchg
aaa
repz
or
mov
jne
xor
push
add
notl
cld
pop
test
div
push
cltd
mov
push
or
add
arpl
clc
jae,pt
pop
lret
jle
inc
push
add
imul
or
mov
mov
jnp
dec
test
sub
scas
xor
pop
inc
inc
out
dec
and
dec
inc
pop
mov
xchg
jnp
in
repz
fdivrs
lods
add
xor
jg
ss
push
insl
push
push
shrl
push
ret
lret
and
or
cmp
addr16
mov
jnp
int
and
lret
repnz
push
add
mov
mov
add
add
sar
cmc
or
stc
dec
or
add
popa
adc
cmc
jecxz
in
repnz
or
push
mov
pop
mov
mov
cmc
ficoml
addl
fisttps
enter
movsb
sarl
add
xchg
out
arpl
int3
in
sbb
xorb
adcl
pop
xlat
sbb
nop
sarl
stc
aaa
popa
cmp
and
inc
sub
js
adc
jle
pusha
cmpsl
ret
jecxz
imul
sahf
lret
mov
xor
lock
mov
sbb
mov
lret
cli
mov
add
jnp
push
mov
rcr
movsl
mov
ljmp
rcll
or
xor
push
mov
es
xor
push
adc
xor
pop
sub
add
inc
push
push
and
roll
dec
and
imul
sub
mov
xchg
repnz
pop
dec
rcr
push
call
inc
xchg
dec
iret
outsl
repz
cmp
xchg
mov
in
pop
pop
jp
sbb
sub
jle
mov
fwait
loope
jbe
xchg
in
and
mov
or
and
movsl
sub
xor
jmp
or
insl
cmovne
or
mov
xor
lock
stos
inc
jns
out
mov
aam
push
int3
mov
cmpsb
sbb
push
adc
xor
clc
mov
ret
push
xchg
sub
inc
lock
xchg
mov
and
dec
jmp
jl
or
aas
push
push
sbb
push
hlt
mov
push
out
fmull
mov
fcoml
nop
gs
pop
xchg
push
test
lock
stos
mov
icebp
pop
push
aas
test
movsb
aam
out
jmp
imul
rcr
mov
shrb
jns
sti
cmp
sub
sub
fldlg2
mov
mov
jne
cmp
xor
mov
mov
cmpsl
xchg
jno
lods
insl
xchg
and
xor
test
aam
icebp
and
lock
add
cmpxchg8b
repz
add
xchg
in
insl
adc
push
ret
mov
lods
jle
xchg
pop
xchg
jo
inc
aaa
icebp
inc
stc
add
test
in
adc
pop
pop
or
hlt
cmpb
imul
sub
xchg
loope
jmp
mov
and
xor
push
lock
cmp
data16
repz
mov
mov
jmp
pusha
ja
imul
add
xorl
out
loope
lods
out
shlb
mov
mov
jne
lret
sub
add
xor
mov
rorb
inc
xchg
dec
inc
inc
call
outsl
sub
add
enter
outsl
xchg
gs
iret
add
out
inc
adc
movsb
sbb
mov
add
mov
and
shrb
ret
and
stc
sub
adc
fnstcw
cwtl
add
mov
ret
loope
pop
arpl
cmp
push
notl
je
ficoml
adc
cld
mov
add
mov
jnp
sub
cmp
mov
gs
int3
sbb
cmp
or
inc
movsl
or
addl
cmp
test
xor
pusha
fildll
lock
dec
outsl
mov
cmc
loopne
leave
out
cld
mov
sbb
xchg
iret
leave
cs
inc
cli
mov
add
sbb
xorl
into
and
cmp
aam
adc
jg
mov
inc
ljmp
out
mov
xor
insl
adc
inc
xor
movsl
fwait
xor
mov
cs
shll
push
sti
sbb
and
push
cmp
mov
jmp
stos
fistpll
mov
mov
add
sbb
sub
sbb
add
test
roll
mov
sbb
mov
fs
jbe
es
jae
stos
nop
push
push
fwait
xor
inc
loopne
push
lahf
inc
and
jecxz
cmp
pop
xchg
mov
fstl
xchg
std
out
sub
mull
add
adc
add
jecxz
jg
fstps
popa
inc
sbb
xchg
cld
xchg
aaa
lret
fs
in
push
inc
push
mov
jle
faddl
cwtl
cmc
icebp
in
adc
sub
fiaddl
push
push
add
xor
xchg
clc
xor
add
aad
insb
int3
push
adc
inc
inc
jp
aas
lods
jmp
test
jne
inc
cmp
lods
in
loop
inc
mov
or
mov
jo
cmp
inc
andb
fsts
sub
and
inc
and
rol
bound
cmp
mul
inc
jmp
aam
paddsb
stc
pop
lahf
dec
push
inc
jecxz
out
inc
in
push
imull
mov
push
add
inc
cld
ret
mov
mov
mov
push
fistpl
mov
or
mov
jecxz
repnz
in
add
fadd
and
sub
pushf
mov
add
inc
cltd
aad
sbb
cs
ret
mov
xor
test
push
out
loope
leave
dec
dec
stc
pop
pop
test
clc
cmp
mov
pop
adc
rcll
pusha
xchg
cmc
inc
jp
cli
jnp
outsl
outsl
cmpsl
lcall
clc
lds
inc
fdivrl
or
add
repnz
xchg
pop
loop
mov
inc
jb
xorl
mull
rcll
std
jge
cmp
std
xchg
add
ror
in
mov
adc
rcl
and
outsb
dec
mov
movsb
adcb
or
das
vpinsrw
adc
repnz
fstpl
lret
pop
sub
rcl
dec
push
mov
mov
dec
ret
adc
cli
mov
dec
push
lret
stos
xchg
adc
cmp
sub
sbb
sar
xchg
test
lock
mov
pop
inc
bound
and
mov
sub
sub
rclb
pusha
das
aas
popa
rorl
push
mov
bound
movsb
push
inc
and
push
xchg
mov
cwtl
and
hlt
fnstcw
fld
inc
popf
and
in
xchg
cltd
cmc
pop
jb
or
dec
jmp
xchg
shlb
test
insl
jp
iret
aad
pop
push
ficomps
cmc
sbb
hlt
lret
mov
push
arpl
outsb
adc
push
arpl
adc
sub
enter
inc
ret
push
pop
pop
imul
lods
cs
cmp
sbb
std
adcb
pusha
fwait
xchg
faddl
lahf
jo
aad
inc
adc
shrl
aas
and
scas
mov
test
cwtl
aas
push
dec
mov
or
adc
and
sti
push
cmp
jl
mov
xlat
test
inc
orl
mov
lret
mov
xchg
jb
push
daa
sub
xchg
call
pushf
pop
movsl
int3
movsl
xchg
in
adc
lock
fsub
xchg
stos
insl
test
scas
mov
test
push
inc
push
ja
sub
js
pusha
push
push
mov
lea
xor
jno
popa
or
mov
push
outsl
roll
test
cwtl
mov
xchg
pop
inc
ds
shll
dec
adc
mov
cmp
jp
push
mov
or
add
add
call
stos
sbb
mov
out
sub
push
jecxz
jl
popl
or
inc
mov
sbb
ret
inc
rcrb
cwtl
cmp
ret
pop
adc
pop
push
pushf
out
insl
adc
mov
shlb
clc
or
popf
in
or
mov
push
out
mov
sub
push
push
lret
out
mov
adc
rolb
sub
shrl
and
enter
pusha
ret
popa
add
inc
lret
mov
or
push
lret
ret
cmp
jb
jg
mov
push
mov
sub
xchg
repnz
pop
lock
daa
pop
stc
xor
xchg
inc
aad
add
hlt
lahf
cmpl
or
repnz
les
mov
cwtl
mov
cmp
dec
inc
inc
insb
dec
push
fs
in
movsl
jle
clc
adc
inc
movsl
dec
out
insl
addr16
test
jle
fcompl
ljmp
arpl
lock
fdivrl
cli
test
mov
div
or
outsl
push
mov
cmp
push
dec
fsubp
push
xlat
call
out
test
loopne
adc
std
mov
add
and
addr16
xchg
int
jb
pop
add
das
xor
aad
scas
xorl
cmpsb
fcmovbe
pop
lcall
das
add
test
xchg
push
hlt
test
adc
jbe
pop
stos
je
xchg
stos
adc
add
out
imul
les
or
pop
sbbl
cs
add
pop
adc
jae
xlat
xchg
xlat
and
hlt
inc
jbe
cltd
test
inc
pop
mov
xchg
in
movsl
mov
iret
pop
popa
jmp
sbb
fs
or
out
shrl
pop
dec
test
scas
stc
cwtl
imul
or
jg
fstpt
imul
xor
xchg
jmp
jg
sub
shrb
inc
das
cmp
jne
xor
fdivr
aam
sarb
adc
inc
nop
xchg
ss
or
pop
sbb
sub
dec
addl
fs
mov
lret
inc
mov
mov
cmpsb
or
adcl
loop
pop
lret
dec
lods
dec
inc
aaa
push
sti
xchg
repz
mov
inc
inc
loop
dec
jmp
sbb
pop
jbe
xchg
mov
xlat
push
test
cmpl
sbb
mov
xchg
cmp
sub
lret
outsl
pop
push
push
rcr
mov
mov
pop
cs
pop
and
popa
lahf
jae
push
out
ret
es
lea
lret
nop
pop
push
cs
dec
or
push
fidivrs
inc
fstpl
loop
scas
cmp
das
cmpsl
outsb
mov
es
lods
imul
xchg
rcrb
mov
adc
push
stc
jb
pushf
xchg
adc
push
pop
les
cmc
lret
sbb
pusha
jb
scas
test
sub
inc
movsl
mov
dec
ljmp
push
mov
movl
cmpsl
lea
mov
lods
mov
arpl
and
inc
jnp
inc
xchg
lods
xor
in
mov
xchg
movsb
neg
mov
cmpsb
sbb
data16
dec
out
push
es
imul
and
lods
sahf
push
clc
lahf
lods
es
outsb
xchg
pop
cmp
pusha
sbb
cmpl
jmp
or
jae
in
add
jno
sub
adcb
nop
icebp
js
sbb
das
out
cmpsb
jb
int
cs
mov
nop
lea
shrb
je
jbe
push
in
cs
hlt
iret
cmp
xchg
cld
xor
mov
lock
mov
or
jl
pop
popa
ss
sbb
jbe
shlb
push
lret
data16
aam
dec
sub
adc
psrlq
roll
dec
loopne
add
je
popf
sahf
mov
xor
mov
sbbb
push
push
sub
movsl
daa
hlt
sysret
mov
mov
int3
arpl
pushf
mov
pop
pushf
pop
movsl
ljmp
inc
push
jns
add
jl
push
sub
jne
adc
add
cltd
jle
aad
pop
xlat
xor
out
fdivs
ret
adc
test
adc
repnz
test
fwait
inc
and
add
push
bound
fdivr
jnp
hlt
adc
nop
and
push
dec
xchg
stos
dec
addb
and
and
cmp
imul
daa
repz
movsb
mov
fs
or
ret
push
adc
jnp
mov
enter
addb
insl
popf
enter
int3
push
mov
stos
dec
xchg
ret
loopne
sbb
arpl
addr16
lcall
movsb
jo
xor
mov
cld
stos
cmp
or
adc
mov
xchg
rcrl
mov
outsl
jno
je
cmpsl
aas
cld
or
pusha
popf
xchg
jb
jmp
adc
in
aas
test
call
ss
imulb
cld
jl
push
insl
and
lock
enter
or
adcb
and
sbb
cmpsb
fists
mov
stos
sub
dec
or
sbb
stc
jge
adc
mov
cmp
inc
aam
mov
inc
fists
xchg
outsl
mov
or
push
push
out
mov
jecxz
sub
dec
lods
rcrl
lea
sahf
lds
clc
nop
cmp
int3
pop
mov
xchg
aaa
out
mov
cmp
xor
xchg
out
into
xchg
xor
repnz
sub
dec
sub
ja
dec
bnd
outsb
jle
mov
out
sub
push
jne
mov
or
push
cmp
mov
cmpsb
jb
lods
jmp
fstl
mov
sub
lods
out
jns
adc
cwtl
xchg
xor
push
and
cmp
push
out
les
rorl
inc
cmp
pop
insl
push
loop
fsubs
sbb
push
mov
faddl
mov
jbe
getsec
fisubs
xchg
repz
stc
stc
xchg
jne
jne
inc
ja
aad
lahf
lret
xor
leave
sub
xchg
int
or
jne
jecxz
jmp
aaa
push
ds
mov
lods
inc
loope
addr16
mov
ret
push
divl
mov
sbb
cltd
adc
fisubrl
in
int3
hlt
mov
cmp
cmpsb
pop
cmp
xor
shr
or
pop
popa
jb
add
xchg
cmp
pop
mov
and
lods
ret
dec
add
mov
sub
and
clc
ret
or
stc
pop
out
push
jle
and
sbb
fwait
xlat
mov
jle
cwtl
sbb
es
fwait
nop
push
dec
xchg
push
inc
test
pop
inc
shll
iret
jbe
sbb
imul
jge
jle
repz
iret
push
imul
or
lds
bound
fs
lcall
repz
adc
aas
daa
idiv
mov
pop
addb
xor
adc
pop
pop
lret
push
sbb
pop
mov
sar
cmp
sbb
out
test
loopne
hlt
push
scas
fwait
cli
test
adc
cld
ss
pushf
subb
lods
lret
test
push
inc
push
lods
aam
lret
fwait
jecxz
scas
pop
inc
int3
jmp
repz
aad
xchg
pop
scas
push
addr16
xor
xchg
mov
in
adc
inc
pop
nop
dec
lods
pop
pushaw
mov
int
jbe
adc
push
scas
repnz
subb
aaa
mov
nop
fistpll
fs
cmpsb
hlt
push
cmp
mov
cmp
sbb
sar
outsl
jge
add
cmp
leave
jne
inc
mov
call
adc
loop
outsl
das
and
cmpsl
lods
testl
adc
inc
cmp
or
xor
js
insl
stc
test
arpl
out
mov
mov
mul
jecxz
scas
jle
xor
pop
daa
addb
mov
test
stos
data16
gs
cmp
mov
out
jge
mov
or
jmp
push
sub
imul
fldcw
faddl
xchg
sbb
sti
cld
stos
jmp
rcl
mov
cli
mov
bound
mov
stos
das
push
mov
call
pusha
cmp
leave
lods
rcrl
adc
sub
push
mov
in
test
rcll
cmp
inc
xor
push
jmp
sti
aas
jl
push
push
stos
stos
push
mov
stos
ret
ss
xchg
ljmp
mov
repnz
mov
ret
cmp
clc
shlb
shrb
fisttpl
or
cmp
clc
push
ret
mov
pop
or
or
notb
mov
mov
cmc
sbb
dec
outsb
ret
lea
clc
mov
movsb
push
loope
push
aad
loopne
lods
es
inc
ja
cli
outsb
cmpsb
sbb
sub
out
cmp
add
xor
jecxz
ljmp
cmp
lcall
out
fmull
push
out
ret
push
sub
push
mov
adc
stc
mov
popf
mov
mov
daa
push
pop
and
in
adc
movsb
in
xchg
push
shlb
icebp
sbb
push
inc
push
mov
mov
or
lret
inc
mov
es
jo
stc
jmp
pop
or
stos
int
in
fimuls
cmp
push
lods
xchg
and
in
outsl
in
sbbl
add
sub
and
scas
pop
orb
lea
dec
mov
idivb
stos
add
popa
sbb
inc
sbb
pop
or
loopne
testl
loope
jp
inc
lcall
xorb
std
outsb
insl
int
inc
pop
pop
mov
fistl
rclb
test
loopne
mov
lock
or
inc
jno
inc
jbe
mov
cmpsb
leave
push
in
aad
jae
xor
xor
das
and
in
mov
xchg
popf
gs
inc
sahf
subb
push
pop
xchg
xor
sahf
mov
outsl
cld
ret
mov
mov
scas
lds
test
dec
iret
mov
andl
xchg
push
mov
inc
adc
pop
pop
stc
sti
sti
mov
xor
mov
rcl
cmpsl
pop
mov
mov
std
orl
pop
call
jecxz
inc
shrb
aad
inc
or
in
dec
mov
adc
mov
pop
pop
inc
mov
dec
loope
ror
pop
rorb
aam
cmpsl
dec
sti
mov
push
sub
xchg
jno
std
mov
jg
mov
mov
hlt
pusha
mov
cmpsl
popf
sahf
cmp
jo
sbb
sahf
inc
jge
rorb
mov
sahf
test
push
mov
mov
mulb
movsb
push
jl
fstps
and
add
fstpt
addr16
and
adc
mov
addl
pop
and
ja
cmp
ret
std
je
ds
push
sub
jp
loopne
push
pop
out
add
cwtl
pop
push
or
mov
xchg
adc
popf
and
lcall
mov
in
push
js
cmp
std
mov
jmp
or
push
dec
xchg
fucomp
insb
and
mov
adc
adc
mov
mov
fimull
adc
mov
or
xchg
fcomp
movsl
mov
loope
mov
and
f2xm1
mov
mov
fs
fnsave
fisttpl
sub
mov
mov
sub
sbb
into
adc
add
mov
es
out
inc
mov
in
push
xor
xchg
push
pop
jns
mov
dec
insb
cmpsl
ret
mov
pop
adcb
inc
inc
sbb
lret
scas
mov
orl
dec
fcmovnb
push
out
push
pop
mov
mov
cmc
and
pop
adc
cmp
shl
movsl
add
jne
lret
rorl
aaa
ds
pop
lock
loopne
inc
cs
inc
push
push
jp
adc
jnp
fmuls
push
jl
xor
and
mov
push
cli
ss
aas
mov
call
aad
mov
sti
cwtl
sti
popf
push
push
jecxz
xchg
cld
cmp
repnz
xor
repnz
and
data16
mov
mov
cmp
push
pop
sahf
mov
mov
ret
roll
cmc
and
loop
mov
mov
xchg
push
jmp
ret
mov
adc
xchg
and
sub
fsubl
mov
sbb
add
call
mov
cmp
and
inc
test
imul
sub
rcll
pop
into
pushl
sub
jle
jp
mov
inc
fsubp
sbb
adc
mov
sbb
and
pop
frstor
pop
in
insl
pop
cs
jbe
xchg
mov
inc
paddd
jp
push
std
rcr
mov
ss
popa
jmp
fisubrl
rclb
lcall
mov
imul
and
ds
sbb
inc
in
insb
aas
mov
cmc
jp
cwtl
lods
pop
in
cvtdq2ps
adc
fnsave
or
jp
or
adc
adc
jae
movsl
sbb
pop
jp
sbb
mov
insb
scas
pop
cld
mov
ss
fcmovbe
sahf
dec
pop
xchg
push
pop
inc
lods
mov
es
outsl
pop
sub
notb
lcall
icebp
fcomp
imul
mov
mov
jno
or
fstps
jo
xor
add
xor
or
pop
movb
roll
fnstcw
into
mov
mov
mov
and
jne
cmpsb
mov
push
or
add
bnd
jne
fidivs
test
dec
mov
es
jmp
lret
insl
out
lds
pop
in
jle
jl
popf
std
aam
into
insb
xor
cwtl
cli
mov
xlat
mov
imul
cmp
add
jg
sti
test
pop
mov
xor
out
push
insb
and
and
movsl
inc
cmp
xchg
jno
or
xchg
xchg
subb
mov
jp
xlat
mov
das
push
imul
lret
cmpl
xchg
xor
pushf
xor
scas
jae
sbb
jnp
fsub
xlat
arpl
add
adc
mov
das
aad
cmpsl
xchg
stc
leave
ret
lea
xorb
fidivs
adc
arpl
out
jp
shll
fs
dec
jo
inc
add
vpmadcsswd
xor
xchg
fcmovnu
add
add
aam
enter
pop
xor
icebp
dec
out
jb
mov
stos
xor
or
int
sbb
in
cmp
jbe
fwait
stos
mov
sub
out
lahf
daa
fcmovnb
in
dec
insl
adc
shlb
insb
jne
movl
sarl
jbe
xor
int3
inc
jns
jo
dec
ret
add
stc
sub
sbb
fstps
xchg
inc
push
cmpsl
test
inc
dec
jle
inc
add
in
shlb
outsb
jecxz
inc
lahf
mov
sub
fists
cmp
mov
shr
mov
sbb
dec
fcmovu
clc
fistl
xor
sub
mov
mov
les
jle
aad
adc
adc
imul
dec
pop
nop
xchg
repnz
lcall
xor
sbb
sub
out
mov
jae
pop
iretw
sub
in
xor
cmp
lcall
add
pop
fadds
mov
adc
sti
fcmovnb
pop
dec
inc
mov
sbbl
jle
mov
add
and
xchg
and
jno
xchg
jl
mov
shrb
clc
or
ljmp
cmpsb
rorl
push
mov
mov
and
pop
inc
inc
add
movsb
mov
jge
lahf
mov
cmp
addr16
repnz
loop
sub
shlb
jcxz
jo
adc
sbb
movsb
rcrb
mov
or
pop
cmc
sbb
mov
ret
lret
push
push
jg
stc
lods
pushf
pop
aam
pop
stc
leave
inc
mov
int3
add
sub
mov
push
mov
or
repz
test
xchg
cmpsb
out
scas
loope
mov
pushf
ss
mov
xchg
insl
xor
nop
sub
pusha
jg
cmp
jmp
scas
xor
leave
dec
gs
push
cmc
and
or
dec
fisubrs
push
adcb
mov
mov
jle
outsl
xlat
mov
sbb
jmp
jo
aam
movsb
mov
jmp
push
sub
mov
fs
popa
push
iret
sbb
xor
daa
xchg
leave
lods
test
xchg
and
and
fwait
das
or
cvtdq2ps
xor
ss
and
fs
cmp
faddl
and
add
out
or
pop
ljmp
mov
mov
enter
pop
push
lcall
adc
pop
sub
in
out
data16
mov
xor
dec
adc
loop
cmc
xor
and
arpl
cmpsl
stos
inc
es
jecxz
sub
cmp
fdivr
push
imul
stos
mov
fistpl
adc
sub
std
fists
mov
adc
test
sbb
inc
test
adc
outsb
fwait
ja
mov
jg
mov
rcl
sub
jnp
arpl
mov
inc
es
jb
call
push
subl
mov
xchg
mov
test
sarl
movl
mov
inc
dec
or
pop
jbe
ss
mov
shrb
in
loope
stc
mov
and
or
fistps
xchg
sub
jmp
xchg
mov
outsb
icebp
inc
dec
ficoml
arpl
loopne
jecxz
push
jne,pn
popf
or
dec
adc
fdivs
aam
insb
jns
ja
pop
xor
push
xchg
stos
and
es
popf
xlat
aas
lods
sbbb
lret
in
mov
pop
pop
mov
shr
mov
mov
xchg
add
test
cmpsb
fsave
lods
aam
mov
jo
sub
add
popa
add
aam
dec
xchg
xor
cmp
dec
and
testl
pushf
out
mov
cwtl
inc
repz
cmc
stos
stos
mov
test
sub
jae
sub
jno
jne
adc
push
jge
xor
fwait
dec
rcrb
or
xor
jge
fildll
out
jmp
pop
sbb
cmp
and
mov
ja
or
sbb
sub
mov
pop
adc
adc
daa
das
xor
ja
pop
sbb
ss
cmpb
pop
shl
inc
testb
add
insl
shlb
pop
sbb
jmp
add
push
adcl
aad
xor
cmpsb
mov
mov
rcll
mov
xchg
lods
adc
int
popf
dec
or
movsl
in
insb
fidivs
into
cmc
xchg
mov
jg
fisttpl
pop
add
mov
add
mov
pop
adc
sub
adc
int
push
cwtl
mov
mov
aas
fisubrs
loope,pn
cmc
jg
test
xchg
cli
mov
out
sub
subl
jmp
jno
lock
mov
aad
ja
and
jo
das
into
xor
divb
call
inc
push
int
xchg
popf
std
setae
push
lahf
inc
cltd
scas
push
ljmp
add
cmc
xchg
pop
fisubrl
out
jp
pop
dec
mov
data16
mov
cli
or
pusha
fucomi
jecxz
popf
stos
or
mov
cmc
sbb
scas
lea
out
jae
push
push
sub
and
mov
subb
jb
in
push
sub
xchg
push
jp
ror
xchg
repz
adc
test
lock
jmp
popa
pop
mov
and
xchg
idivb
pop
pop
decb
push
sti
xlat
enter
fsubl
lcall
lods
cmp
mov
scas
pushf
sbb
test
shl
add
mov
imul
pop
and
aas
cwtl
sub
jb
xor
js
and
push
mov
and
insb
icebp
cmpsb
xchg
movsl
or
mov
jge
jp
ret
sub
fisttpll
push
imul
mov
jecxz
and
loope
daa
add
sbb
cmp
and
push
stc
ud2
jae
cmp
lret
aas
ss
pop
sub
rol
push
fcomp
and
addl
stos
bound
jecxz
pop
sti
in
add
push
mov
xor
test
xor
cmp
cli
frstor
stos
pusha
jmp
mov
add
movsb
push
cmc
cmp
dec
into
js
xor
push
daa
loopne
pop
data16
lock
push
xor
stc
outsb
shll
cwtl
add
mov
pop
inc
sbb
mov
movsl
test
leave
test
arpl
scas
sti
iret
fistpll
dec
dec
in
mov
cs
mov
sbb
lods
push
mov
pop
dec
xchg
lahf
insb
push
add
dec
pop
push
mov
xchg
cmpsl
xorb
mov
jmp
dec
out
push
jae
cmp
xchg
cmp
push
and
cwtl
nop
iret
mov
cmpsl
hlt
hlt
test
pop
inc
jae
icebp
mov
mov
scas
dec
sub
scas
adc
add
test
adc
dec
cmpsb
lret
stc
pusha
xchg
and
pop
xor
push
imul
insl
mov
dec
icebp
pop
push
cmp
dec
popa
rorl
ret
cmp
aam
repz
cmp
ja
mov
aas
ss
sarb
cltd
daa
sub
cmp
nop
sbb
sub
jbe
lds
mov
inc
rolb
hlt
lods
xchg
pop
mov
loope
push
push
mov
push
rorl
xchg
push
cmp
aaa
mov
cmp
or
aaa
js
mov
stos
jne
xchg
xchg
or
test
and
sbb
movsb
sub
mov
pop
ret
ljmp
cmp
xchg
cmp
out
cmp
mov
pusha
roll
rorb
and
adc
adc
stc
out
test
dec
and
fcoml
out
xor
sti
or
and
mov
push
dec
mov
inc
stc
jb
push
mov
push
leave
mov
popl
fwait
cwtl
inc
inc
jle
add
jnp
adc
fstps
nop
mov
jne
fbld
pinsrw
mov
fimuls
shll
in
pop
adc
mov
aaa
sahf
xor
adc
add
sbb
les
sub
push
leave
pop
add
incb
aad
cmp
xchg
cli
scas
bound
xor
xchg
popa
inc
sbb
filds
sub
in
jne
into
push
pop
adc
jg
test
rcrb
lods
inc
mov
out
sub
popf
jns
inc
stc
fs
pop
pushf
sbb
mov
xor
xchg
pop
sub
daa
lea
pop
repnz
sbb
or
push
dec
fldcw
cmc
cli
or
dec
lcall
mov
ret
addl
and
test
xchg
pusha
lahf
lcall
sbb
outsb
neg
test
sbb
mov
and
adc
fwait
xor
sub
in
test
jp
sbb
test
jno
test
ja
das
inc
dec
jae
movsl
fidivs
rcrb
popl
inc
push
negl
dec
lret
pand
out
jno
jp
mov
lahf
aam
mov
inc
test
ficomps
cmp
jne
inc
data16
mov
dec
mov
pushf
mov
jno
push
aas
jae
jo
ljmp
movsb
arpl
int
mov
or
push
inc
fisubl
cmp
clc
mov
aad
cli
sahf
cmpsb
into
adc
dec
sub
xor
push
mov
sbb
cmpsb
and
push
xor
idivl
dec
adcl
decb
mov
sbb
push
inc
mov
mov
sahf
mov
mov
adcb
xchg
rcrb
push
adc
xchg
imul
pop
adc
fldt
push
jmp
enter
xor
sub
inc
jecxz
cmp
fwait
jno
mov
jnp
imul
cmp
rolb
sarl
mov
jge
test
push
pop
jae
dec
test
les
call
imul
jne
xor
test
mov
pop
lret
xor
orb
js
and
repz
cwtl
add
test
int
fs
mov
jbe
xlat
cmp
jb
push
add
nop
sbb
mov
add
lahf
cmp
aas
dec
out
lods
stos
dec
mov
or
xor
xchg
dec
pop
aam
sub
mov
mov
sbb
shlb
pop
inc
jl
dec
repnz
call
stos
cld
in
or
dec
sub
rorb
jle
inc
pop
dec
push
push
dec
es
mov
jl
jno
in
arpl
daa
push
adc
jne
sbbl
mov
ret
push
or
or
dec
push
neg
ds
xor
mov
dec
jl
leave
inc
hlt
cmp
movsl
ljmp
cld
jge
stos
arpl
out
dec
int3
sarl
popl
fcomi
outsb
insl
iret
aad
fs
daa
sbb
pop
movsb
mov
xchg
mov
leave
jo
insl
fisttps
xor
jge
mov
es
add
lock
inc
xchg
cltd
loop
sti
lock
movhps
lods
aam
jp
and
add
mov
cwtl
js
inc
pop
cmpsl
jg
or
addr16
dec
hlt
jge
das
lods
mov
cmp
loop
jae
sub
std
rcl
mov
mov
xor
pushf
pop
mov
shrb
popl
test
lret
jmp
imul
out
ds
aam
lods
fldcw
movsl
mov
fsts
jle
data16
jnp
lods
lea
add
lcall
loop
movsb
adc
addr16
and
int3
ffree
jae
sub
xchg
pop
mov
sahf
push
add
negb
mov
and
push
jns
or
sbb
adc
push
scas
into
or
push
xor
sbb
notl
xchg
int3
outsl
pusha
test
int
jnp
jp
jecxz
movsl
push
dec
inc
sub
testb
dec
cmpsl
inc
ljmp
inc
rorl
test
sti
imul
aaa
mov
je
jmp
aaa
xchg
xor
std
in
mov
xchg
out
push
lea
xchg
add
pop
xor
xchg
xor
fs
fsubrl
in
filds
clc
out
mov
mov
gs
add
or
push
ljmp
adc
mov
rolb
mov
lcall
mov
sti
mov
sub
popf
jmp
pop
fidivs
mov
rclb
push
mov
dec
xor
mov
xchg
ret
jge
fs
lock
mov
fcmovnbe
or
enter
jae
out
sbb
rolb
and
mov
shrb
xor
inc
or
dec
jo
add
in
mov
pusha
cmp
fwait
repz
ret
rcl
mov
clc
repnz
and
dec
cmp
outsl
adc
sbb
mov
scas
jmp
lods
xor
mov
in
in
cmp
dec
xchg
lds
adc
std
lea
int
jnp
xor
sub
or
outsb
push
add
sti
dec
mov
mov
mov
addl
jge
add
inc
in
fidivrl
daa
mov
sub
outsl
js
cld
imul
mov
inc
sbb
cmc
xor
pop
push
inc
out
repz
ret
rcll
loope
sarb
lock
dec
push
mov
xlat
xor
data16
dec
mov
nop
call
fs
iret
sub
xchg
xor
stos
cltd
add
inc
mov
pop
aas
sbb
rorl
popa
fbld
inc
xchg
xchg
add
mov
mov
cmc
sub
shlb
jmp
das
repnz
popa
jns
rol
mov
mov
stc
cmp
ss
test
mov
scas
movsl
adcl
jbe
dec
aaa
xor
mov
cmp
movsl
cmpsb
xor
insl
inc
pop
insl
enter
lret
inc
pop
sarb
ficomps
add
pop
push
std
mov
in
adc
ja
ja
scas
mov
mov
popa
ss
fucomip
cmp
and
inc
cmp
push
cmp
add
js
push
repz
inc
push
mov
jbe
iret
leave
int
lahf
and
cmp
or
push
sbb
mov
pusha
cwtl
fsubrs
and
mov
xchg
dec
jle
add
mov
sub
jo
rorl
or
leave
cld
lret
mov
testb
imul
insb
xor
push
cmpsl
push
cmpsb
lea
or
mov
mov
jnp
push
mov
cmp
fbstp
es
mov
mov
ficompl
shll
inc
daa
lods
mov
nop
pop
mov
fcmove
insb
jns
data16
dec
jns
ret
nop
ror
addl
xchg
mov
xchg
sbb
leave
sbb
push
lds
dec
xor
fsubrs
sahf
xor
popa
mov
mov
xchg
fnstenv
jo
shll
mov
call
dec
into
sbb
mov
push
xchg
test
inc
pop
out
push
divl
ja
xor
xchg
add
leave
loope
jne
cmp
and
push
mov
sub
sbb
data16
ja
push
add
dec
sbb
mov
pop
push
inc
or
adc
push
repz
xchg
popa
mov
xor
divb
mov
ljmp
push
lods
jnp
jno
sub
push
mov
mov
mov
mov
jno
mov
cmc
and
push
mov
sub
or
icebp
cmp
fsubl
in
loope
pushf
jo
cltd
rcl
mov
imul
add
dec
pop
outsl
setp
or
ljmp
cmp
in
inc
sbb
cmp
testl
push
sbb
pop
insl
sahf
jge
fcompl
mov
and
add
xchg
repnz
mov
inc
iret
scas
add
popf
bound
jb
iret
loope
mov
jecxz
iret
aaa
pop
add
push
cli
inc
jecxz
cld
push
add
sti
inc
fistl
arpl
daa
aad
fsubrs
xor
fisttpll
icebp
add
jns
jl
lds
test
mov
mov
iret
sub
add
jmp
lcall
add
push
cmp
pop
mov
scas
ljmp
dec
es
fadd
insb
jno
mov
jg
dec
insb
in
sahf
adc
mov
in
pusha
mov
mov
mov
inc
aam
jbe
aaa
jl
jae
and
stc
std
add
inc
xor
jl
stos
jmp
push
popf
mov
cli
popf
dec
push
xchg
jbe
dec
aad
jmp
aad
andb
inc
into
outsb
or
add
ja
push
scas
incl
adc
adc
arpl
and
lds
in
push
test
jns
ja
inc
lods
and
stc
rcl
add
aam
push
mov
pop
and
pusha
xchg
pop
dec
cwtl
mov
xchg
push
movsl
cmp
lds
push
mov
sarl
jae
subb
lahf
outsl
andb
pop
mov
pop
push
push
pop
repz
lret
push
mov
std
arpl
and
sti
jecxz
jno
sar
pop
mov
mov
pusha
insb
xchg
cmpb
test
cmp
fcomip
stos
inc
adc
call
ficoml
dec
or
sub
pusha
sub
sub
sbb
mov
leave
out
outsl
mov
popf
sbb
or
movsl
mov
xchg
loopne
out
out
add
in
lret
add
mov
cmp
mov
xchg
mov
push
mov
mov
out
xlat
lods
or
insl
sub
or
dec
dec
push
xlat
mov
mov
int3
sub
pop
cmp
and
adc
sub
nop
inc
loope
out
jp
lods
shll
dec
pusha
inc
mov
pop
scas
inc
mov
fsubrs
mov
sbb
fimuls
dec
fcmovbe
shrl
dec
leave
dec
and
ret
mov
cmp
aam
push
or
and
loopne
pop
jno
ds
je
cmpsl
fidivl
push
xor
dec
xlat
les
out
mov
repz
clc
push
inc
adc
clc
jp
mov
dec
fidivs
jecxz
pop
add
jmp
mov
sub
test
xlat
xor
and
ret
xchg
cmp
and
stos
or
pop
mov
and
adc
and
mov
sub
push
mov
mov
fdivr
in
pop
jle
push
cmc
mov
mov
cmp
sbb
mov
pop
cmc
test
cmpsb
push
dec
call
lds
cmp
pop
rcl
adc
jge
imul
cmp
xor
cmp
inc
sub
xchg
dec
mov
jmp
ljmp
mov
js
add
out
pop
adc
jnp
popa
cld
add
in
xchg
mull
hlt
push
arpl
inc
xchg
mov
or
sti
pop
cld
dec
xchg
add
repnz
fwait
jge
and
lret
xchg
sbb
mov
iret
ja
mov
pop
sbb
mov
xlat
sahf
imul
mov
lds
push
or
sbb
dec
js
ret
jmp
dec
ds
mov
cmp
test
clc
pop
mov
xor
jmp
fxch
mov
scas
sub
mov
adc
jge
lods
dec
dec
stos
jmp
xor
adc
es
mov
cmp
cmp
fldl
iret
xchg
jle
int
cmp
dec
mov
cmpsl
int
jmp
mov
out
or
add
adc
popf
pop
fsubs
mov
shll
sbb
incb
mov
xchg
mov
icebp
mov
in
dec
fmul
adc
push
pop
push
push
fbld
lds
in
out
mov
and
imul
push
pop
leave
dec
fldln2
ret
ret
pop
mov
aaa
add
pop
imul
daa
negb
insb
inc
sub
fs
fmull
addl
repz
int3
mov
repz
lcall
xlat
adc
jge
dec
jecxz
mov
pusha
mov
test
rcll
pop
push
fistpl
sbb
jns
cs
rcrb
pop
jecxz
add
mov
jns
les
push
decb
mov
std
rcrl
adcb
mov
mov
jbe
sbb
sbb
and
in
add
js
inc
pop
lret
dec
xlat
je
imul
mov
push
xchg
cmp
cmp
and
test
daa
or
lret
lret
pop
mov
lods
fadds
dec
scas
shll
mov
clc
push
sbb
aas
fisubl
push
cltd
cwtl
pop
hlt
cmp
fs
mov
sub
pop
fsubr
or
mov
testl
aaa
pusha
cli
xchg
sub
aaa
mov
pop
frstor
xor
incb
rolb
mov
xor
sub
cmp
sub
adc
mov
mov
sbb
mov
insb
jmp
ret
push
push
inc
test
cmpsb
dec
mov
ret
xchg
rcr
outsl
cmpsb
insl
aam
dec
lret
jle
xchg
sub
mov
imul
xchg
mov
or
jo
push
xchg
and
les
mov
dec
inc
into
call
cs
movb
inc
es
loop
pop
mov
shl
jp,pn
push
or
idivl
jle
ret
cmp
fmuls
ret
sbb
xor
lret
cmp
adc
fs
aas
push
and
fwait
jl
dec
nop
adc
inc
inc
xchg
pop
mov
clc
inc
repnz
mov
pop
xchg
idivl
pushf
aam
mov
andl
insl
out
loope
rcll
aas
fiaddl
pop
mov
mov
ror
or
repnz
imul
pusha
popa
mov
fwait
cwtl
xchg
pop
repnz
sbb
mov
rorb
adc
sub
inc
cmp
mov
pop
jnp
aam
insb
in
cwtl
inc
pop
sub
sbb
mov
mov
inc
mov
add
imul
cli
cmc
rcrl
in
xchg
mov
mov
pop
mov
icebp
pusha
cs
cld
xchg
lods
insl
or
imul
cmc
mov
popa
stc
hlt
dec
enter
mov
mov
and
push
outsw
cli
xchg
sbb
xor
xor
sbb
xchg
push
pop
sub
xchg
testb
xchg
jp
cs
mov
push
inc
pop
dec
pop
sub
xchg
cmc
ret
sahf
adc
sbb
fdivl
clc
cmp
mov
pushf
sub
hlt
jmp
sarl
sbb
loopne
rcll
aad
pop
adcl
sub
jle
inc
cmp
dec
push
cs
dec
sub
dec
rorl
subl
xchg
mov
and
xchg
call
es
jp
lret
add
ds
jmp
jns
xlat
fldt
push
ja
cmp
sbb
sub
adc
jne
sahf
gs
xor
push
in
xor
jb
movsb
in
push
in
testb
sub
sbb
insl
pop
xchg
dec
cli
lods
je
cmp
bound
push
adc
xchg
jne
and
lahf
xchg
mov
cmp
mov
movsb
mov
les
shlb
sbb
ud2
loopne
stos
jnp
dec
add
push
add
les
fnstcw
nop
push
jae
int3
lcall
and
adc
imul
cmp
lcall
push
add
ret
mov
shl
loope
inc
repz
mov
push
ds
mov
mov
out
adc
add
add
inc
fnsave
lock
decb
xor
sbb
es
lea
shrl
fsubrs
or
sub
jg
cwtl
xchg
mov
sbb
mov
negl
sub
int
cmp
fiaddl
lods
push
rcrb
sub
dec
inc
mov
mov
rcrl
arpl
loop
sub
and
and
or
mov
ret
and
lods
lods
and
mov
ss
imul
mov
lods
imul
mov
lods
stc
mov
push
out
inc
jno
push
dec
fisubrl
inc
pop
push
jne
in
out
cmc
stc
and
dec
xor
in
jp
and
loopne
in
fmuls
int
xchg
lcall
pavgw
push
popf
inc
lds
cmp
out
jmp
loope
inc
loopne
nop
mov
sbb
adc
or
cld
pop
frstor
mov
les
sahf
mov
test
push
xchg
mov
cmc
pop
mov
mov
adcb
mov
mov
adc
xlat
mov
lret
pop
std
adc
mov
insb
push
add
movsl
mov
jbe
lods
add
call
enter
jmp
stos
push
xchg
push
inc
lret
jp
mov
mov
lret
mov
std
aad
mov
stos
lds
cmpsl
cltd
mov
cmc
int3
and
jle
leave
mov
imul
xchg
mov
xorl
iret
popa
or
arpl
mov
or
add
iret
pushf
sti
test
into
push
fbld
outsl
jnp
shll
push
add
sub
sbb
push
cld
addl
mov
sub
shrl
orl
int
shrb
bound
aaa
out
xor
sarl
pop
adc
es
divl
fbstp
stos
dec
pop
push
dec
pop
lahf
lods
inc
sarb
push
dec
mov
mov
adc
sub
jl
mov
mov
sub
add
notb
mov
rorl
xor
sub
aad
lock
scas
xor
add
dec
cmp
push
jb
sub
xchg
or
sahf
xchg
adc
or
adc
ljmp
imul
xchg
in
in
cmp
sbb
dec
mov
repnz
xchg
imul
fcoml
pushf
scas
cmp
lds
rorl
mov
jle
lret
xchg
or
and
rclb
cmpsl
shll
sbb
fsubrl
test
test
fstpt
pop
xchg
sub
mov
xchg
sbb
shll
int3
and
mov
shll
aas
jp
mov
cmp
scas
adcb
sub
lahf
ret
in
mov
ds
ljmp
mov
jb
sbb
add
imull
jl
mov
popf
das
jg
imul
cmp
call
or
arpl
mov
movsl
jns
inc
js
and
aam
sub
lods
cmp
mov
sbbb
jp,pt
shll
push
outsl
mov
or
adc
stos
es
addr16
mov
pop
popf
sbb
mov
cmp
enter
mov
mov
and
push
push
mov
stos
nop
push
xlat
push
rorb
xchg
cmp
pop
repz
add
mov
dec
data16
cmp
data16
and
sub
rclb
inc
xor
sbb
xchg
mov
mov
pusha
inc
xor
repnz
ret
xor
flds
vcvtsi2sdl
ret
mov
push
mov
mov
xor
jb
xchg
mov
testb
push
mov
sbb
out
adc
sbb
or
and
out
mov
cmc
mov
leave
mov
pushf
ljmp
gs
inc
jb
pushl
xlat
scas
test
fimuls
mov
cmpl
mov
add
mov
push
mov
sti
sub
add
stc
ficoml
jo
out
sub
push
pop
movsb
sbb
xchg
sbb
dec
push
pop
and
cmp
ret
add
add
sti
pextrw
mov
cld
dec
push
mov
pushf
pop
xchg
and
jmp
lea
aas
lret
das
in
and
test
iret
jge,pn
and
cmp
pcmpeqb
push
adc
fs
imul
push
xchg
sbb
fdivrs
stc
adc
mov
xchg
scas
je
xchg
rcl
testb
xchg
ret
lret
push
rclb
add
movl
cmp
push
enter
mov
mov
aad
dec
dec
arpl
lods
xor
imul
mov
pop
stos
aaa
or
lock
testl
stos
mov
repz
push
and
shlb
fpatan
movsl
push
push
orl
jns
cmp
movsb
sub
xchg
inc
pop
dec
push
mov
adc
pop
iret
fcomps
dec
ret
sub
mov
test
loop
push
out
sbb
out
pop
inc
and
mov
xor
adc
push
jp
test
adc
sub
pop
sbb
add
neg
fsts
xlat
pusha
adc
adc
add
ss
std
into
dec
mov
movsb
das
mov
mov
in
pop
ret
or
or
ret
lea
shlb
sbb
push
cwtl
push
ljmp
mov
inc
test
pop
mov
cmc
jp
fnstenv
mov
pop
pop
or
dec
sub
pop
mov
and
and
push
in
jno
mov
orb
sti
push
repnz
bound
mov
les
and
jo
add
or
stos
dec
xchg
lea
gs
sub
lcall
adc
test
xchg
sub
mov
xlat
or
xchg
xchg
hlt
or
sbb
cmpsb
cmpsl
test
inc
in
aam
arpl
insw
outsb
imulb
dec
jbe
shll
dec
aam
mov
pop
mov
arpl
pop
push
sbb
dec
sarb
int
adc
adc
ficoms
mov
mov
pop
mov
lock
push
dec
lods
sbb
mov
fstpl
push
xor
jae
mov
and
lret
inc
inc
in
ljmp
inc
or
mov
js
mov
inc
test
aam
adc
mov
mov
addb
cmp
lea
add
dec
xchg
mov
dec
idiv
dec
loopne
outsb
loop
fsubrl
pusha
xor
mov
gs
sub
add
outsb
dec
outsl
ret
orl
or
bts
jmp
in
mov
sti
pushw
mov
lock
mov
sub
cmc
jb
and
in
incl
jb
cmpsl
lock
ljmp
gs
xor
repnz
imul
sub
aas
sbb
ror
fwait
gs
xlat
pop
cmpsb
jno
push
jns
mov
movsb
xchg
cltd
mov
imulb
mov
cmp
stos
sub
ja
push
mov
jmp
outsl
jb
out
jno
pop
notb
push
in
popa
mov
jno
xchg
jl
leave
roll
inc
iret
ret
std
frstor
cwtl
xor
and
jns
shl
fsts
popf
xor
mov
jbe
cmc
pop
mov
xchg
es
cwtl
rcrl
imul
mull
in
out
inc
jns
cmp
stos
dec
adc
cmp
cli
xor
jnp
out
cmp
repnz
add
ss
xchg
sbb
dec
mov
mov
ftst
sbb
stc
out
adc
ja
inc
faddl
and
jecxz
mov
xchg
fistpl
pop
fildll
inc
pop
call
push
mov
imul
lcall
mov
sub
mov
pop
lea
out
aad
outsl
jne
cmp
adc
xchg
outsb
hlt
and
nop
lods
int3
jbe
jne
jo
icebp
clc
dec
lock
inc
int3
cmpsb
jnp
imul
mov
mov
inc
inc
aam
mov
sbb
cmpsl
dec
pop
fwait
int
fdivrs
ret
leave
enter
lret
aam
jmp
outsb
repz
mov
repz
lods
xor
cmp
mov
dec
out
adc
sub
leave
cs
fs
add
insl
xlat
mov
int
jge
test
in
mov
in
mov
push
dec
add
push
testb
jo
add
ljmp
xor
jl
push
notl
and
scas
pusha
xchg
cmp
dec
inc
sub
xlat
xchg
leave
mov
add
icebp
imul
lea
jmp
pop
stos
mov
push
scas
push
scas
mov
adc
inc
jo
out
lret
jno
jae
ficoml
inc
iret
inc
push
fdivr
xor
mov
cmpsb
das
jecxz
cmc
dec
les
inc
lcall
iret
shld
addr16
mov
in
or
cmc
mov
sbb
mov
mov
pop
add
jmp
fstpl
cmpsb
push
xor
push
in
cmp
xchg
insb
adc
mov
stos
aas
or
out
push
ja
subl
clc
icebp
repnz
push
lret
les
cmp
inc
and
xor
sti
sti
pop
mov
lcall
add
dec
les
sub
xor
ficoml
js
scas
out
gs
mov
aas
add
dec
packuswb
xchg
cmp
cmp
push
inc
movsl
jns
int3
jns
mov
push
and
mov
push
mov
lret
cmpsb
rcrb
les
ffree
and
sub
mov
ret
cmp
cmc
fadds
sub
push
dec
repnz
test
jp
xchg
rclb
iret
or
lcall
cltd
popw
mov
imul
cwtl
fnstcw
sbbl
das
inc
in
pop
dec
mov
addl
xchg
xor
mov
shlb
sbb
jmp
dec
jns
std
in
or
test
imulb
mov
jle
add
lahf
orb
outsl
imul
jmp
push
xor
pop
fdiv
pop
sti
mov
jbe
movb
cmp
jbe
jecxz
fstpt
outsl
mov
into
xchg
push
cmpsb
jecxz
sub
rcll
cmpb
popa
jle
out
and
xabort
imul
and
xor
push
das
shll
pop
dec
mov
push
pusha
cmp
ret
cmpl
test
cmp
scas
lds
mov
insb
xchg
ja
jbe
testl
les
stos
fs
movb
xor
clc
cmpsb
stos
sbb
sbbl
loope
cs
xor
cmp
lock
lock
sbb
sub
loop
jp
push
jmp
cltd
repnz
sti
cmpsl
add
jmp
and
sti
xchg
ljmp
add
mov
cmpsb
cmp
dec
push
push
stos
movsl
and
out
mov
fisttps
fldl
push
push
mov
cld
das
jns
adc
ja
test
and
xor
xor
adc
repnz
in
push
sbb
imul
pop
loope
lcall
mov
push
scas
xor
xor
das
xchg
cs
bnd
inc
adc
add
push
sbbl
push
cmp
rclb
incl
mov
movsb
loop
repz
cmpsl
or
fcmovbe
rcrb
xchg
inc
lds
cmp
sbb
push
jo
mov
xchg
push
scas
lods
inc
sar
and
mov
sub
xchg
mov
test
aaa
cld
mov
sbb
jg
enter
xchg
jp
adc
adc
push
loope
jns
xchg
inc
cmp
movsl
orl
test
aaa
xor
inc
adc
pop
push
fstl
inc
ficompl
rclb
lods
fs
dec
or
cmpsb
lds
stos
fildll
filds
mov
arpl
or
adc
xchg
and
dec
adc
std
out
stos
mov
arpl
mov
mov
add
dec
clc
fsubp
pop
lods
xchg
fbld
sub
and
mov
dec
iret
enter
nop
cmc
and
fmulp
jg
mov
lock
icebp
adc
fmuls
shrb
inc
jno
aad
int3
cltd
xchg
enter
dec
orb
xor
out
lea
or
insl
shrl
scas
add
rclb
insl
pop
mov
jp
mov
pop
out
inc
pushf
fimuls
adc
orb
ljmp
out
pusha
std
icebp
mov
xchg
xor
mov
xchg
or
inc
aam
popa
dec
xor
std
call
movsl
pop
loop
iret
shlb
jo
mov
cmp
xor
pop
bound
jle
fldt
aam
xor
int
mov
jecxz
shrb
movsb
repnz
imul
daa
movsb
jle
sub
add
xchg
xchg
cmpsl
mov
int
inc
jg
xchg
jo
and
sub
jl
nop
and
imul
pop
in
mov
imul
adc
leave
adc
aas
xchg
xchg
push
dec
fsts
push
dec
push
add
and
dec
lods
pop
and
test
lcall
ret
and
xchg
setge
push
rcll
or
jge
or
mov
inc
cmpsb
inc
xor
in
adc
lcall
sub
std
inc
sbb
nop
test
push
adc
push
mov
cmpl
shll
insb
sbb
subb
inc
dec
jbe
cmpsb
xchg
cmp
fucomi
or
cmp
mov
popf
adc
lock
testb
icebp
adc
ss
add
xchg
jle
jae
fiadds
fstps
int
mov
movsb
xor
popa
scas
mov
orl
ret
inc
sbb
fldcw
and
data16
imul
mov
js
scas
inc
and
lcall
or
xchg
push
xchg
cmp
scas
mov
sbb
scas
push
or
bound
sub
push
test
aad
jae
ret
cmp
add
mov
cmpsb
cmp
pop
pop
addr16
xor
ud0
cs
loop
push
mov
add
aam
pop
xchg
leave
iret
sub
dec
outsb
in
adc
int3
inc
rcrl
sahf
cmpl
call
jo
sub
push
xchg
cmp
sbb
inc
rcll
lret
mov
and
push
and
dec
inc
stc
test
xchg
mov
es
jg
icebp
inc
hlt
add
mov
push
push
add
into
mov
xor
aas
std
jecxz
fcoms
inc
dec
mov
stc
mov
cmp
enter
je
pop
cli
in
es
adc
and
aas
and
add
mov
lret
or
push
sahf
adcl
cmpb
int
div
pushf
adc
jne
mov
test
in
aas
les
aaa
xchg
sbb
mov
push
rcll
or
loop
xchg
fisubs
push
data16
inc
cmp
jns
or
xor
cs
les
in
je,pt
sbb
inc
ja
sbb
repz
cmp
loopne
pop
fcomps
pop
aad
xchg
bound
dec
cmpsb
cmpsb
lock
cmc
and
arpl
sbb
shrl
jnp
jge
mov
xor
adc
xchg
bound
pusha
add
cmpsl
push
cs
es
scas
sbb
int3
mov
lods
jecxz
aaa
mov
dec
out
outsb
in
jecxz
mov
clc
rcr
testl
sbb
jg
xchg
jmp
out
inc
dec
jae
xlat
cld
inc
jge
ss
xlat
or
jo
sbb
or
call
mov
out
mov
mov
xor
daa
addl
pop
pop
xchg
mov
subl
adc
xchg
xchg
mov
add
movsb
cmpsl
mov
sub
mov
nop
mov
mov
inc
inc
xchg
jge
iret
cmc
nop
push
jecxz
xor
int
sbb
out
cli
adc
mov
mov
push
hlt
mov
sub
jge
push
les
fnstenv
test
addr16
cltd
sahf
pop
sbbl
cmp
xor
jmp
xorb
pop
mov
lods
sbb
or
jne
sub
jnp
sti
pop
fisttps
mov
pop
push
pop
push
adc
push
nop
cltd
arpl
xor
pop
mov
out
adc
dec
xlat
or
push
adc
xchg
ficompl
out
sbb
dec
stc
aad
ljmp
mov
out
arpl
xchg
cmc
inc
int3
incl
add
clc
iret
mov
jo
jp
fistps
adc
sbb
arpl
js
mov
ja
mov
dec
adc
push
ds
and
imul
out
clc
icebp
in
jno
ja
fld
je
pop
xor
hlt
xor
mov
mov
data16
inc
nop
push
mov
and
ret
sti
insl
out
dec
push
flds
push
xchg
mov
data16
pop
mov
out
bswap
test
addr16
std
mov
aam
dec
cmp
mov
pop
mov
test
call
dec
add
push
and
adc
pop
cmpsl
hlt
cwtl
dec
push
lret
shrb
enter
cmp
push
pop
push
mov
sbb
jnp
int3
push
xor
xor
in
icebp
movsb
adc
data16
ljmp
aam
xchg
xor
fldenv
out
cwtl
sub
stos
adc
xchg
cmp
insb
je
mov
mov
in
out
or
scas
scas
fmuls
mov
pop
mov
jns
sbb
insl
fnsave
addl
gs
sbbl
adc
and
mov
imul
std
test
cld
rorl
rclb
xchg
fisttpl
test
mov
int
or
test
sbb
aas
pop
ficoms
popa
pop
into
xor
mov
aaa
pop
sbb
ljmp
scas
out
pusha
outsb
jb
in
jae
mov
insl
pop
js
xchg
jbe
jle
imul
in
repnz
push
dec
shl
mov
daa
addb
data16
or
adc
cmp
xlat
int
push
or
cmp
xchg
adc
lcall
cmp
pusha
insb
inc
mov
test
jmp
push
out
mov
dec
push
testl
xchg
cmovne
and
cmpsl
daa
push
out
jb
in
cmpsb
or
aas
cwtl
jmp
daa
inc
pop
fwait
pop
in
pop
cltd
shrb
or
push
icebp
dec
in
repnz
sbb
sbb
dec
lret
out
fsub
pusha
stos
fiadds
out
pop
cmpl
inc
jns
leave
jns
movsb
xchg
jo
jo
jno
adc
or
mov
loopne
jg
clc
xchg
rolb
pop
add
mov
xchg
add
jno
push
lcall
cmpsb
decl
mov
in
add
andl
adc
aas
pop
icebp
int3
addb
js
sub
push
xchg
lahf
jo
push
repz
lcall
loope
std
cmp
scas
stos
ja
loope
leave
jl
mov
adc
or
mov
dec
push
or
sub
icebp
or
adc
inc
adc
sbb
pop
test
sahf
daa
nop
and
mov
andl
or
mov
push
xor
push
cmp
aaa
aam
clc
in
mov
sbb
int3
mov
mov
xorb
es
pop
and
add
xchg
sub
int3
push
test
sbb
push
mov
push
push
xor
test
call
insl
jbe
cmp
jbe
or
adc
inc
push
cmpb
lds
adc
xor
movsl
insb
push
adc
dec
test
mov
push
push
dec
sbb
jnp
stc
rorb
out
mov
sub
xchg
pop
push
mov
orb
xor
xchg
dec
jle
mov
enter
idivb
test
inc
sub
rcll
lock
popf
add
and
lods
out
push
fistpll
and
dec
mov
rcrb
iret
cmp
icebp
outsb
mov
jecxz
or
sbb
adc
jle
lods
mov
sub
test
xchg
push
ljmp
xlat
pop
mov
scas
pop
mov
xor
cmp
loope
arpl
pop
aaa
ficomps
fcomps
lret
mov
test
dec
iret
fisubrs
xchg
aad
fcomp
scas
xor
lret
jnp
mov
fucomp
pop
bound
ret
fisttpll
shl
adc
stc
in
test
add
push
stos
outsb
push
add
mov
push
mov
sbb
mov
shlb
cld
ss
in
mov
inc
cwtl
cmp
movsl
out
sbb
pop
dec
sbb
in
shrb
xchg
inc
jo
sbb
add
add
mov
es
daa
mov
shrl
inc
mov
or
sub
mov
jecxz
fdivs
cmp
dec
push
repz
push
mov
leave
push
dec
orb
orl
push
mov
xchg
sti
mov
iret
fdivs
or
ja
ljmp
js
pop
jne
lret
mov
push
bnd
cs
std
imul
dec
mov
xchg
adc
sbb
out
push
mov
dec
les
aaa
xchg
sub
push
mov
fbld
and
mov
shll
inc
push
shll
fdivr
jnp
in
stos
incl
dec
andl
mov
or
fistpl
and
inc
cmp
jno
outsb
add
inc
out
test
aam
into
es
adc
insb
rclb
cmpsb
cmp
pop
sahf
out
jg
jmp
xorl
adc
outsl
mov
mov
mov
outsb
popf
test
and
xchg
mov
rcl
mov
mov
sbb
enter
ja
add
notb
xchg
pop
and
lret
adc
addr16
fsin
cmp
or
sub
cmc
push
mov
push
and
cli
orl
lock
scas
es
aas
rorb
cmp
xor
push
shll
cmpsl
fwait
dec
dec
pop
add
pop
xchg
xchg
add
inc
or
mov
cltd
cs
xor
sub
lods
dec
mov
adc
dec
imul
mov
inc
dec
icebp
out
outsb
out
or
dec
cmp
jp
or
xor
jne
or
enter
hlt
in
push
cwtl
sbb
jne
or
int3
pop
andl
pop
jne
int
adc
fadd
jp
and
or
mov
sub
sub
in
xchg
fdivrp
subl
mov
insb
jns
outsl
sub
pavgw
dec
and
loopne
pop
in
jo
adc
std
std
popf
in
sbb
out
loope
daa
repnz
sbb
insl
mov
adc
push
stos
iret
fistl
adc
dec
push
insl
add
push
jnp
dec
xchg
cmp
or
les
rcrb
repnz
js
dec
mov
jl
jns
xor
xlat
or
mov
jno
mov
mov
dec
jns
idivb
imul
push
pop
icebp
push
out
or
cmp
dec
xchg
sub
mov
or
mov
les
jmp
ret
adc
add
push
mov
adc
mov
mov
ds
jo
ja
shlb
jbe
out
xchg
mov
sub
mov
fdivrp
cld
test
and
test
adc
in
out
ljmp
jnp
sahf
fwait
mov
nop
popf
ja
std
iret
inc
add
push
cli
adc
push
and
and
dec
rcl
fstpl
push
das
pop
std
cmpsb
mov
jae
jmp
xchg
inc
aaa
ljmp
popf
jo
and
imul
cmp
push
add
and
repnz
arpl
test
fcmovu
inc
pop
sbb
xchg
jo
mov
cltd
add
mov
imul
arpl
add
mov
sbb
mov
fidivs
rclb
jge
cmp
ficoml
xchg
xchg
xchg
dec
jmp
test
popf
movntps
mov
adc
cli
lods
adc
xor
loope
add
mov
rep
mov
ret
fistpl
mov
fcomps
mov
inc
ja
cmpsl
jle
lahf
jg
int3
add
int3
pop
xchg
mov
movl
adc
push
cmp
xor
xchg
lods
pop
dec
mov
fdivrs
and
add
andb
push
scas
rcll
pop
xor
pop
iret
icebp
popf
jae
out
cmp
xlat
adc
flds
cmp
xchg
xor
or
out
xchg
adc
cli
mov
xchg
rclb
jecxz
cltd
stos
lds
inc
outsb
jb
jnp
and
test
pop
pop
ljmp
mov
insb
and
sbb
mov
xor
imulb
jo
iret
sub
mov
sub
xchg
aam
sub
out
add
cwtl
icebp
cld
mov
movl
stc
lret
jb
jo
mov
roll
stc
roll
and
leave
movsl
cld
push
bound
mov
xor
aad
adc
test
in
inc
and
pushf
insb
inc
imul
inc
rcrl
jo
test
add
jl
lret
pop
mov
mov
arpl
sub
inc
shll
push
pop
inc
or
rorl
scas
add
jle
mov
and
adc
lock
inc
fucom
cmp
mov
mov
and
in
sub
call
or
or
cmpsl
xchg
andb
xor
out
lock
or
xchg
mov
rorl
movsl
repz
outsb
pop
imul
cwtl
cmovae
enter
repz
scas
out
cmpsb
xchg
cmp
es
lret
and
sbb
sbb
sbbb
xor
jecxz
sbb
mov
mov
jl
cmpsb
push
inc
stos
repnz
movsb
sub
dec
xor
lret
xchg
popf
and
xchg
daa
mov
lods
out
mov
dec
cwtl
mov
mov
int3
pop
pushf
scas
sbb
add
outsb
mov
jecxz
idivl
mov
ja
mov
push
pop
cltd
push
stos
bound
dec
pop
out
xlat
hlt
add
lea
adc
mov
rolb
popa
rcl
xchg
sbb
cmp
xchg
jmp
inc
loopne
rcll
into
push
push
test
lahf
jae
fld
mov
inc
cltd
mov
sarl
dec
mov
shrl
movsb
or
xor
adc
test
and
sarb
push
xor
inc
push
jecxz
mov
jo
lahf
lret
das
push
mov
sub
or
inc
cld
xor
lock
sub
in
add
popf
aam
call
ficomps
push
outsb
inc
inc
mov
mov
fwait
rclb
and
xor
push
int3
jb
add
inc
inc
stos
mov
mov
push
cmp
outsl
js
xchg
sub
movsl
icebp
pusha
pop
cmpsl
inc
jb
out
add
pop
nop
sahf
cmovne
jp
dec
ja
dec
pop
aas
int
push
aaa
loope
or
lds
daa
das
mov
cmp
fisubl
daa
mov
cli
jge
cmpsb
addr16
cmp
js
mov
popa
jbe
dec
hlt
xor
inc
fisttps
out
mov
test
or
bswap
xchg
lods
arpl
jno
pop
or
sti
movsb
jmp
mov
popf
movsl
push
out
inc
xor
and
sub
jb
adc
or
loope
and
pop
mov
fs
jno
xchg
dec
lret
push
movsb
repz
movsl
push
mov
cmp
fsubp
out
sub
lods
cmpsl
addr16
jp
arpl
or
inc
fs
dec
dec
lods
das
sub
iret
fcmovbe
jecxz
push
and
pushf
in
mov
push
adcl
push
rep
fs
add
add
mov
jno
jb
cmp
cmpsb
test
xchg
aas
cltd
and
sbb
and
mov
test
in
pop
xchg
inc
jno,pn
fstp
scas
sub
int3
fwait
mov
inc
mov
or
pop
xor
xor
jbe
stos
lret
fldt
inc
lahf
pop
data16
jb
inc
aad
cwtl
lahf
gs
xchg
ja
mov
dec
push
call
mov
add
jmp
notb
iret
sbb
lods
ljmp
movsb
rdmsr
gs
shld
int
adc
adc
xlat
jge
or
xchg
inc
jge
dec
pop
lds
aad
cld
push
stc
fbstp
jo
jecxz
aas
ss
fiaddl
pop
mov
lcall
jno
popa
sbb
fistl
fsubr
fwait
push
mov
lret
hlt
mov
pusha
mov
je
pop
inc
xor
imull
into
inc
inc
cmp
push
gs
aad
push
scas
aam
dec
add
call
in
movsb
inc
inc
dec
mov
cld
stos
xchg
inc
jmp
or
lods
sbb
jmp
test
jno
push
inc
mov
cmp
push
int
test
push
sbb
add
out
arpl
mov
stos
and
xchg
adc
xchg
lea
mov
loope
mov
mov
sub
lea
in
setp
adc
cwtl
jo
sub
out
stc
adc
movsl
ss
or
das
jbe
mov
lods
and
lods
xchg
ljmp
cmc
cwtl
pop
push
inc
jne
xchg
fisubs
xchg
aas
out
dec
ss
ficoms
cli
xchg
loopne
stos
arpl
cmp
push
bound
in
xchg
jl
mov
or
out
xor
jae
add
sub
cmp
imul
fimull
jo
add
xchg
test
andb
and
adc
es
mov
ds
xchg
nop
xchg
xchg
pusha
popf
lea
pop
sti
ja
fmulp
jno
adc
push
out
xchg
mov
mov
push
push
fdivrs
push
inc
push
add
pop
sti
movsl
inc
mov
xchg
inc
xchg
add
cltd
call
xlat
fidivl
dec
or
cld
xchg
or
aam
pop
jle
into
aaa
adc
xchg
out
jb
pusha
ljmp
je
jo
mov
xchg
gs
push
mov
dec
jbe
adc
mov
mov
rclb
iret
mov
dec
jo
dec
adc
ja
jg
movsb
mov
stos
test
out
mov
nop
lret
subl
mov
xor
aaa
add
jg
fistpl
aaa
hlt
cmp
push
push
sti
repnz
rorl
inc
bndstx
lods
add
rcrb
pop
pushf
decb
scas
pop
xor
jbe
push
pop
jnp
and
out
imul
push
pop
lds
ret
ss
and
ret
mov
icebp
loope
push
cmp
loop
inc
dec
dec
adc
adc
loop
stc
jecxz
add
xchg
nop
repnz
pop
mov
push
sub
dec
movl
iret
adc
sbb
addb
jge
orb
pop
imulb
xchg
ret
out
in
movsb
push
xor
dec
call
inc
std
sbb
daa
leave
lock
cmc
mov
fneni(8087
mov
mov
ret
imul
add
cmpb
cli
iret
jns
mov
mov
push
loope
divb
pop
jae
cmp
js
push
sbb
inc
aam
cmpsb
aam
in
imul
sbb
cmpsb
and
mov
aad
negb
cli
rcll
jmp
push
loop
js
mov
inc
lcall
mov
lods
mov
idivb
in
xchg
xchg
pop
xchg
mov
xchg
fwait
sahf
adc
dec
mov
mov
repz
sub
pop
pop
ret
es
cmp
lea
jns
inc
nop
out
es
jbe
xor
and
cmp
fstps
cmp
cmpsl
add
xor
daa
add
loope
xlat
scas
pop
xor
inc
fadds
mov
jmp
or
sbb
les
fldcw
pop
add
mov
xor
outsb
pop
adc
pushf
outsl
xchg
les
mov
cs
inc
push
adc
jge
imul
mov
mov
mov
gs
lret
push
rcrl
sbbl
add
lret
add
pusha
sbb
fdivs
jecxz
je
and
dec
dec
mov
jg
lea
outsb
int3
fdivr
push
sti
add
test
addr16
adc
fisttps
xchg
ss
jl
test
loop
mul
out
icebp
jg
xchg
inc
and
lcall
pop
mov
imul
sbb
inc
inc
sahf
ret
add
sub
jbe
fbld
in
sahf
js
imul
jb
jg
adc
push
cmp
dec
adc
popf
or
mov
dec
push
xchg
inc
sti
jo
dec
imul
in
das
bound
ss
lahf
out
rcrl
fdivs
or
sub
xchg
push
fildll
xor
add
outsb
cltd
mov
adc
mov
stos
out
dec
and
cltd
dec
inc
and
out
mov
jns
xlat
daa
lahf
push
out
sub
sbb
mov
jmp
dec
orl
icebp
mov
jno
lea
mov
push
fsubrl
mov
adc
shlb
mov
mov
xor
dec
iret
or
test
push
pop
mov
push
jno
push
insb
cmp
jge
test
xchg
add
and
mov
xacquire
or
loop
lret
push
sbb
out
push
aas
push
jecxz
addb
negb
inc
mov
fsub
shlb
mov
loope
sti
push
adc
adc
popa
rorb
jle
int3
jg
xchg
pop
xor
sub
inc
sbb
int
ss
cmp
push
dec
mov
xorb
sahf
nop
xor
test
js
inc
stc
data16
cltd
inc
and
xor
xor
ret
sbb
add
loop
loope
out
stc
inc
lret
jbe
mov
jo
lcall
out
mov
mov
icebp
out
lods
xor
shl
cld
and
mov
scas
sahf
movsl
push
adc
fdivrs
loope
mov
mov
cmpsb
cmp
jg
aas
or
clc
cs
push
ret
cmp
jae
dec
and
jl
jecxz
add
data16
xor
xchg
lahf
mov
pop
cmp
mov
data16
push
dec
jb
adcl
movsl
jbe
push
dec
jns
cmp
xor
jbe
imul
push
xchg
lods
pop
jle
and
push
inc
out
rcr
mov
icebp
pop
dec
jbe
nop
mov
dec
pusha
or
sub
outsb
push
push
pop
mov
mov
jae
stos
cli
jecxz
cmp
adc
cs
into
ficomps
cld
insl
jmp
imul
into
adc
fcmovnbe
inc
mov
and
lahf
ret
lea
push
adc
mov
fdiv
pop
sbb
mov
adc
push
push
sbb
mov
push
push
es
in
dec
sahf
mov
fcomip
sbb
adc
ljmp
bound
mov
adc
cld
inc
cmp
popf
push
pop
and
inc
xchg
pop
ret
mov
add
stos
dec
xchg
popa
adc
ss
adc
sbb
jg
and
push
push
and
notl
lods
xchg
js
push
jp
arpl
mov
adc
dec
popf
mov
stos
mov
mov
add
dec
aad
xchg
ret
nop
inc
xchg
and
out
inc
jae
fcoms
sbb
jle
jmpw
call
mov
inc
mov
push
mov
rcl
outsl
mov
pop
pop
inc
dec
fisubrs
push
push
cli
roll
loop
mov
or
jp
cwtl
hlt
mov
les
pushf
mov
and
not
in
dec
pop
xor
mov
dec
test
aaa
sbb
out
cs
pop
xor
repz
out
jne
icebp
ss
add
lods
cltd
comiss
inc
fmull
test
sti
and
adc
cmc
imul
jnp
mov
push
stos
outsl
mov
jmp
js
cmp
es
jmp
pop
mov
mov
lods
jno
inc
xchg
outsb
loope
sbb
cmp
mov
xor
ds
aam
data16
aas
inc
or
repnz
inc
adc
movsb
xchg
aaa
dec
je
or
dec
mov
pop
mov
addr16
lods
ret
sahf
ss
mov
mov
mov
fs
cmp
filds
test
jle
sub
jno
insb
jecxz
ret
fadds
sbb
pop
cmpsl
jge
cmp
clc
mov
dec
mov
outsl
enter
add
pop
sbb
cmpsb
imul
dec
int
and
out
and
repnz
and
imul
inc
fisubrs
or
scas
or
pop
dec
mov
mov
mov
xor
movb
mov
popf
stos
xor
fcmovnb
lds
push
and
jbe
or
push
bound
fmuls
inc
fsubl
mov
mov
sub
mov
rcrl
sub
mov
ljmp
jbe
fdiv
jle
addb
daa
push
gs
cli
xchg
in
xchg
enter
mov
cmp
push
push
jae
or
inc
ljmp
inc
dec
jns
jl
mov
repz
stc
mov
dec
or
dec
mov
jg
sub
sahf
lret
push
pop
and
adc
sti
lods
mov
or
dec
sbb
clc
xor
cmp
cmp
push
or
jge
clc
hlt
push
dec
pop
out
add
ja
clc
mov
cs
xorb
sbb
in
adc
out
mov
xchg
in
js
int
iret
dec
out
sahf
inc
cmp
jnp
pop
xor
js
xchg
or
or
andb
aaa
mov
sbb
add
add
inc
lock
fwait
mov
cmpsl
and
testl
mov
mov
fcompp
stos
cmp
jp
filds
fs
outsl
cld
sub
jnp
cli
adc
imul
mov
add
movsl
fcomip
mov
push
mov
or
mov
pop
lcall
mov
pop
cmpsb
sub
lret
pushf
push
and
cmpb
cmp
lock
or
jg
int3
insb
cld
mov
and
ljmp
sti
les
jl
cmp
js
xchg
lods
fildl
cmp
inc
dec
repnz
ret
lods
and
fsubl
pop
adcl
sbb
scas
adc
movsb
mov
shlb
jno
add
push
lods
lock
xor
test
into
stos
test
dec
mov
pop
test
adc
mov
jae
mov
cmpsb
bound
cmp
push
es
adc
xlat
enter
test
sahf
prefetch
dec
jns
push
pop
xor
scas
push
push
jp
insb
cmp
gs
xchg
jmp
jbe
sub
lahf
hlt
jo
mov
test
jge
out
stos
sub
dec
or
daa
out
adc
pop
adc
adc
xchg
neg
ret
or
gs
pop
shrl
scas
rcrl
jae
int3
jp
sbb
pop
push
out
aam
xchg
jno
sub
mov
inc
xchg
rcr
mov
xchg
cli
and
pop
loope
in
xor
sbb
cwtl
add
mov
sbb
adc
xchg
ds
mov
arpl
cmp
cmpsb
int
jmp
sar
bndstx
push
jmp
shll
stc
mov
mov
fadds
inc
and
dec
cwtl
jne
lock
lds
nop
pop
sub
fisttpll
mov
into
mov
ss
add
xchg
push
cmp
mov
mov
xchg
js
push
inc
cwtl
imul
mov
dec
ss
xchg
sti
and
aad
mov
and
adc
loop
mov
nop
add
push
mov
mov
xchg
and
push
popf
addl
stos
mov
sbb
mov
or
test
or
sub
aam
call
jmp
adc
cmp
mov
mov
sar
cmc
std
pop
sbb
and
and
cmp
jbe
fs
jne
add
roll
mov
inc
mov
ds
or
dec
xor
sti
mov
mov
fdivrl
mov
jnp,pn
stos
pop
test
adc
inc
std
mov
jne
push
mov
jmp
movaps
mov
sbb
add
je
or
dec
in
stc
pop
mov
dec
lea
sub
adc
movsl
dec
outsb
add
pushf
lock
fwait
pop
mov
sub
jo
pop
mov
push
xor
dec
jecxz
add
es
inc
inc
pop
into
cld
mov
js
iret
loop
call
mov
bound
mov
out
stos
int
mov
nop
mov
inc
cwtl
test
punpckldq
sbb
jae
xchg
dec
in
outsl
ljmp
sbb
mov
movsb
into
dec
sti
adc
andb
and
sub
sbb
dec
add
pop
jge
mov
addr16
lds
cmp
mov
or
out
daa
mov
and
insb
cmp
ja
jge
or
fwait
int
add
jl
in
inc
js
divps
fwait
js
imul
iret
aaa
inc
dec
jmp
add
mov
inc
pop
xor
inc
insl
pop
jne
pop
and
pop
cmp
mov
pop
stos
popa
mov
mov
inc
mov
loope
je
cltd
mov
mov
fisubrs
jecxz
int
mov
fildll
xchg
push
scas
loopne
cltd
test
je
scas
imul
clc
icebp
aam
je
jge
cmp
int
add
nop
adc
jno
mov
mov
sub
loope
dec
jne
sub
xchg
lret
push
sub
in
xor
idiv
and
fisubrl
and
repnz
jmp
lock
mov
in
imul
bound
cmp
sub
and
lds
adc
pop
sbb
push
in
pop
sub
mov
xor
das
shll
mov
cltd
dec
adc
loop
stos
sub
into
aas
jl
test
jge
mov
and
or
clc
out
push
sbb
add
arpl
or
mov
stos
leave
cmp
xchg
sub
adc
jne
pusha
sub
sub
arpl
xor
push
inc
push
mov
sub
dec
sbbl
js
subl
xlat
cmp
ss
sub
push
jnp
test
xor
stos
inc
cmp
pop
dec
inc
test
jecxz
push
ret
and
cmp
rorl
dec
testb
test
scas
mov
ret
lds
jg
mov
dec
insb
or
add
repnz
arpl
repnz
adc
loopne
addr16
push
pop
pop
push
aam
lds
leave
cmpsb
sbb
pop
std
insb
xor
daa
in
dec
and
and
fcmovnbe
mov
scas
movsl
aad
push
lods
fisubl
xor
inc
test
mov
pop
outsl
adc
pusha
movsl
add
enter
pop
scas
push
and
movsl
push
and
into
sbb
jge
jmp
pop
nop
scas
dec
insl
mov
pop
call
outsl
movsb
lock
lods
add
outsl
inc
stos
and
in
test
int
push
or
outsb
repz
and
cmp
xor
xchg
sarl
rcll
pop
lret
loope
out
xchg
sar
xchg
push
pushf
aad
mov
push
dec
jb
cld
inc
jb
mov
in
push
and
mov
shll
push
lock
cmp
inc
mov
jmp
inc
popf
mov
cmp
mov
pop
jae
xchg
es
daa
imul
pop
inc
fcomip
xor
lods
inc
stos
insl
cmp
sub
orl
adc
cmp
fidivs
fcompl
push
fbld
mov
aaa
shll
sbb
add
add
clc
mov
adc
mov
in
hlt
lahf
xchg
outsb
sbb
and
ss
movsb
xor
xor
push
cmp
insl
cmc
or
inc
cwtl
ja
out
in
push
out
dec
sub
mov
inc
mov
dec
sub
daa
std
hlt
push
xor
test
nop
fidivrl
jno
and
repz
in
fwait
jp
add
test
pop
inc
arpl
sbb
mov
add
clc
sbb
sub
adcb
cmc
lock
outsb
push
in
pop
aas
xlat
dec
out
xor
sbb
or
ret
pop
pusha
adc
pop
mov
jae
movsb
pop
push
dec
test
stos
mov
ja
dec
dec
decl
inc
clc
and
mov
mov
int
or
xor
xchg
sub
push
add
bound
in
jecxz
pop
inc
sub
movsl
sbb
lea
enter
jnp
push
mov
mov
outsl
push
mov
and
xor
aaa
dec
add
adc
xor
dec
subb
cmp
pop
jmp
loope
sbb
loopne
or
or
out
out
out
jbe
stc
add
mov
add
pop
pop
testb
xchg
cmpsl
jns
adc
and
pop
inc
jne
jmp
ret
sub
pop
push
ds
sbb
cli
jp
test
jp
repz
repz
insl
jmp
adc
ljmp
outsb
lods
icebp
sbb
ret
inc
loope
movsb
and
outsb
jnp
leave
out
fnsave
fidivs
inc
scas
shll
icebp
jae
xorl
movsb
cli
sbb
test
pop
repz
jo
xchg
ret
jnp
add
das
decl
out
popf
aaa
sti
int3
inc
cmc
push
jns
jo
int
aad
push
xchg
mov
and
ja
insl
xor
lahf
push
jno
add
cs
popa
cld
cmp
into
imul
xor
ljmp
push
test
fdivrl
mov
jp
jle
hlt
sub
adc
pop
fwait
stos
add
shr
int
adc
stos
sbb
sti
xchg
pop
into
push
sub
inc
stc
call
movsb
pop
les
push
stc
mov
arpl
sbbl
lock
cmp
adc
cmpsb
fcmovu
or
xorl
nopl
fsub
cwtl
das
loope
pop
fwait
scas
fwait
jecxz
pop
mov
sbb
repnz
sbb
pop
sbb
sbb
cli
pop
outsb
cmp
mov
outsb
mov
add
popf
into
test
imul
push
jmp
push
mulb
mov
xchg
adc
movsl
mov
aad
imul
add
je
adc
pop
jp
push
push
cld
jnp
aam
bound
stos
cltd
rcll
xchg
in
jl
test
add
sbb
sarl
and
movsb
sbb
arpl
sub
loopne
mov
pop
adc
int3
dec
add
dec
mov
rcl
inc
fiadds
mov
fimuls
insb
bound
fidivrs
mov
lcall
bound
ljmp
xor
cltd
out
jae,pt
repnz
lock
in
pop
jne
push
dec
jbe
mov
movsb
mov
sbb
or
or
pushf
jbe
jns
clc
pop
xor
je
pop
push
xchg
and
xchg
xchg
scas
loopne
jb
pop
ss
stc
data16
xor
loopne
add
movsb
int3
xor
lock
gs
cmpsl
and
mov
xor
push
pop
pop
push
imul
adc
add
mov
out
nop
aam
sarl
push
adc
mov
pop
scas
outsb
dec
mov
rolb
mov
inc
cmp
loopne
mov
xchg
ficomps
dec
mov
aaa
inc
vmread
pop
adc
lcall
or
xchg
addr16
dec
cld
lock
jne
cmpsl
pusha
pop
inc
mov
jnp
out
dec
jo
sbb
inc
testb
shll
jnp
mov
popf
fsub
roll
dec
pusha
push
arpl
pop
fs
or
pusha
insb
jne
repnz
popa
dec
insb
std
movsb
jle
pop
cmp
mov
jmp
dec
cwtl
xchg
int
aaa
dec
rorb
ret
mov
xor
xchg
les
outsb
pop
jno
xchg
cmp
cmpsl
mov
fbld
bound
jmp
inc
mov
dec
fwait
mov
push
xlat
inc
pop
jb
mov
test
pop
inc
hlt
imul
push
fwait
sub
aad
dec
mov
in
mov
movsl
push
cs
inc
ret
jb
mov
dec
stc
ja
cmpsb
inc
ss
mov
sti
ja
push
jl
or
and
push
lock
push
in
scas
loopne
jb
mov
push
pop
inc
cmp
push
dec
cld
addl
or
stc
fdivrp
pop
movsb
or
jle
mulb
iret
inc
rclb
add
jge
subl
outsb
out
pop
add
xor
dec
jmp
push
xor
cli
inc
mov
inc
xor
mov
loope
jmp
ss
outsl
xor
fidivl
mov
inc
aas
xor
testl
pop
cmp
lds
jb
fstl
popa
cltd
arpl
sbb
pop
mov
or
test
sub
push
call
pop
stos
sbb
pop
cmpsl
clc
into
repz
xlat
dec
or
jl
jns
cmp
pop
into
and
push
dec
mov
stc
jnp
xor
push
push
cmc
clc
pop
les
fucomi
mov
aad
mov
sub
inc
arpl
out
sbb
xor
jg
cmp
inc
sub
ljmp
push
test
leave
pop
push
mov
cmc
mov
ffree
in
or
stos
xor
stc
adc
test
ret
pop
sub
clc
dec
je
push
sbb
dec
inc
jp
mov
loop
sti
scas
adc
imul
stc
jo
out
and
mov
and
adc
add
shlb
jecxz
sub
out
or
push
fadd
addl
mov
pop
cmpsb
pushf
inc
in
dec
fwait
inc
sub
es
jle,pt
push
pop
fsubrl
and
mov
pushl
and
iret
iret
fwait
or
jmp
ficompl
dec
or
lds
sub
mov
pop
mov
fidivrs
or
push
push
push
cmpb
rcll
pushf
movsl
mov
pop
test
or
and
popa
and
gs
mov
xor
sbb
ret
loopne
cld
clc
and
repnz
xor
movsl
adc
inc
pop
ud0
cmpsl
mov
jecxz
xchg
cmp
dec
mov
pop
into
push
jb
sbb
iret
mov
jmp
sarl
adc
scas
mov
add
xchg
insl
sbb
lret
and
ljmp
hlt
mov
popa
or
mov
shrl
xor
adc
add
aaa
int
fwait
por
pop
xor
adc
cmp
loop
sub
push
xchg
mov
mov
daa
adc
pop
jecxz
xchg
fsubl
cld
mov
stos
sbb
rol
jb
mov
mov
sahf
insl
sbb
or
push
clc
daa
sbbb
fiadds
std
not
or
xor
jl
pushf
pop
je
cmp
jb
test
call
shll
jge
test
inc
cwtl
out
cs
inc
imul
dec
jmp
or
or
punpcklbw
sbb
push
insl
ror
pusha
cs
aas
jno
int3
in
mov
cmp
pop
out
fcomip
sub
adcl
mov
sbb
push
sbb
xchg
mov
sbb
pop
pop
xchg
add
enter
jb
xlat
pop
push
repnz
cld
sbb
js
repz
movb
xchg
lods
outsb
sbb
sbb
mov
in
jno
inc
jg
add
fiaddl
hlt
add
mov
leave
jecxz
cmp
and
cli
and
jecxz
ds
cmp
add
out
std
mov
add
leave
stos
pop
dec
add
push
add
mov
and
jl
fildll
push
rcr
fwait
mov
push
aaa
or
inc
stc
mov
jae
cmp
arpl
rorl
jge
loop
rcr
jmp
mov
inc
mov
lods
jb
mov
andb
fisttpl
mov
mov
dec
inc
add
cmpl
lret
mov
or
mov
or
add
xchg
sti
testb
jge
mov
lods
and
mul
les
mov
insb
rclb
adc
mov
popf
cmc
add
cwtl
mov
arpl
xlat
xchg
es
icebp
push
lret
scas
int
test
push
mov
dec
mov
test
mov
hlt
fwait
fwait
adc
xor
add
pop
mov
jecxz
clc
xor
mov
push
inc
in
jl
jle
mov
fs
mov
push
hlt
cmp
repz
divl
jge
jecxz
sub
sahf
stc
stc
cld
stos
insb
cmc
stc
adc
mov
inc
sub
dec
pop
shlb
xchg
popf
pop
aad
and
push
dec
lret
sub
push
mov
inc
inc
dec
xchg
mov
add
in
cmp
cli
into
arpl
cltd
xchg
aas
into
jmp
sbb
cld
xchg
dec
test
and
call
jmp
sub
push
sbb
aas
inc
sar
popl
xchg
incl
xor
mov
inc
add
nop
fbstp
loope
imul
shrb
in
mov
and
add
xchg
inc
pop
pop
mov
lods
fwait
es
xlat
out
sbb
fstpl
push
shrl
jne
mov
mov
int3
fsubs
mov
xchg
mov
int3
lock
add
ljmp
and
add
cmpl
clc
jge
mov
pop
mov
shll
push
gs
pop
push
insb
lock
mov
decb
xor
or
lock
mov
xor
push
insl
pop
xor
jge
jns
xor
movl
je
dec
shlb
jecxz
sahf
lock
xchg
jns
pop
outsl
sub
fildll
in
sub
add
add
mov
and
adc
ljmp
push
imul
mov
js
cmp
in
or
out
mov
sub
dec
popa
and
mov
loopne
push
adc
mov
ret
jmp
insl
ss
jb
push
cmpsb
fcoml
pop
or
push
push
out
sti
ret
insl
cwtl
mov
and
jb
pop
xor
lahf
jns
dec
sub
pop
pop
mov
lret
cli
movsl
mov
jnp
jp
gs
pop
cmpsl
xchg
outsb
mov
xchg
fwait
jne
pop
rorb
lock
sarl
xchg
mov
xor
cli
dec
or
outsl
xchg
addl
push
mov
fisubrl
cmpsb
inc
cld
mov
ficoms
push
inc
test
repz
ret
lret
and
mov
out
mov
fs
xor
sub
ss
stos
test
into
cs
cmp
out
adc
xchg
out
adc
js
icebp
mov
inc
or
negl
xchg
cmc
xchg
pop
cltd
mov
sub
cs
pop
cmp
jae
loop
icebp
je
and
lret
and
jecxz
idivl
int
mov
test
pop
sub
jbe
cmp
sbb
fmuls
sub
mov
sbb
or
push
fisttpll
insl
aas
and
ficoml
adc
push
mov
jmp
pop
std
icebp
insl
in
sub
in
jp
xor
loope
pop
mov
rolb
mov
mov
lahf
xor
fmul
mov
adc
inc
inc
inc
pop
popl
cs
and
sbb
lahf
scas
cmpsb
xor
sbb
fisubrs
xchg
push
add
shlb
js
jne
mov
cs
xchg
adc
jmp
pop
dec
in
insl
lock
xchg
sbb
xchg
pop
mov
lret
xor
je
cmc
pop
pop
dec
mov
out
and
xor
inc
add
dec
dec
jmp
dec
cltd
js
stos
aam
aas
pop
sub
sbb
std
sbb
sbb
xchg
loop
or
test
mov
aas
cmpsb
test
ret
sub
mov
pop
jle
inc
loope
shrl
xchg
andl
pop
das
jbe
negb
test
js
fldcw
xlat
xchg
push
ja
repnz
jb
ret
test
loop
mov
dec
stc
arpl
stos
dec
add
pop
jmp
pop
mov
add
push
push
cmpsl
xchg
mov
mov
push
and
or
sub
dec
ds
inc
inc
and
imul
out
or
mov
pop
rol
push
push
into
inc
xchg
rcl
fimuls
fmull
add
pop
push
arpl
add
loope
subl
add
mov
xchg
push
xchg
inc
inc
mov
out
jae
mov
jnp
fdivs
sub
into
mov
sub
sbb
jecxz
popf
sbb
inc
dec
push
inc
js
sbb
dec
dec
lods
cltd
outsl
fsub
mov
or
aas
lret
mov
jge
std
sar
clc
jmp
cmp
cmp
mov
and
pop
fdivl
inc
clc
adcl
cmp
fistpll
outsb
or
cmpsl
gs
jge
add
ret
std
pop
std
in
roll
lret
ja
test
sbb
pop
jmp
jecxz
cs
out
adc
and
pop
call
movsb
out
lods
enter
sub
push
pop
repz
xchg
mov
cli
enter
outsb
test
xor
fnstcw
int3
test
int
shll
pop
loopne
dec
test
lcall
jns
in
lock
adc
mov
fildll
pusha
andb
jnp
pop
icebp
das
fisubrl
or
iret
call
popa
or
daa
out
sub
mov
cmpsb
mov
imul
je
sbb
sahf
xor
adc
dec
fistpl
sbb
xor
push
std
test
jg
fiadds
and
repz
sbb
xchg
imul
cmp
fsubrs
push
daa
js
stos
outsl
mov
mov
idivl
mov
pop
mov
les
imul
rolb
ss
ss
iret
loopne
insb
insl
push
dec
ror
sub
cmpsl
mov
jbe
xor
sbb
cmpsl
mov
ss
insl
cwtl
mov
dec
adc
mov
pop
sbb
push
aaa
cmc
call
pushf
and
gs
mov
add
cli
loopne
push
and
cmp
cltd
cmp
push
inc
sub
dec
xor
pop
addr16
lret
lcall
push
xchg
dec
insb
cmc
jmp
xor
push
andb
popa
jb
cwtl
mov
push
push
inc
scas
jbe
dec
cmpsl
imul
push
in
idivl
and
in
inc
cmpsb
subb
repnz
sbb
outsl
cmc
je
mov
ret
test
jno
push
push
adc
mov
xor
mov
int3
jmp
jle
lcall
mov
insb
in
clc
xor
dec
and
js
mov
stos
je
int3
int
test
outsb
pushf
shll
mov
jno
dec
jno
push
jg
sbb
loop
cmp
xor
add
and
push
enter
jecxz
enter
cmp
sahf
pop
icebp
fldcw
mov
pop
ja
int
and
sti
fstl
movsl
repz
repnz
int
shlb
add
or
int3
push
jge
outsb
jl
push
mov
pop
jecxz
frstor
push
mov
cmpb
adc
pop
imul
and
push
repz
inc
push
out
inc
adc
add
mov
inc
repnz
les
xor
dec
mov
movsb
mov
iret
mov
push
mov
xchg
cmp
pop
test
or
addl
jbe
movsl
mov
pop
movsl
movsl
adc
aas
mov
mov
aad
inc
and
out
fs
out
gs
xor
rol
cmp
and
pop
mov
cli
cmp
out
test
fisttpl
mov
mov
adc
repnz
imul
sub
mov
xor
add
mov
pop
iretw
pop
sub
cmp
xchg
in
shlb
and
ds
out
jno
and
mov
mov
xchg
loope
sbb
rcr
pop
cmc
fimull
in
je
add
fs
and
mov
repnz
adc
mov
out
xor
fbstp
and
aas
jl
adc
in
pop
es
mov
mov
test
inc
outsb
nop
movsl
mov
in
cmp
sbb
jbe
repz
mov
xchg
mov
adc
cld
sbb
cmp
push
mov
jo
movsb
cmp
shlb
and
sbb
out
dec
lods
push
lods
outsb
out
add
mov
test
sti
xor
int
inc
lret
iret
jp
das
adc
loop
mov
cmp
add
mov
jns
ret
shrl
xchg
movsl
pop
sti
cmpsl
aam
xchg
or
adc
test
dec
int3
out
int3
or
hlt
outsb
repnz
pop
roll
ss
xor
ds
mov
xchg
icebp
pop
sti
ja
mov
cmp
xor
jecxz
loopne
or
ret
sbb
outsb
lods
fldl
or
mov
adc
fadds
adc
movsl
pusha
cmpsl
rolb
arpl
inc
mov
add
mov
mov
or
movsb
cmc
jne
dec
push
sub
push
rcrl
adc
xchg
add
push
mov
ljmp
ss
xchg
mull
jns
rcrl
adcl
add
ljmp
adc
mov
lret
push
jno
inc
mov
xchg
sbb
xchg
add
arpl
lods
dec
adc
in
jb
inc
dec
cmp
cli
pop
test
push
jge
ret
out
dec
js
sahf
xchg
mov
test
nop
out
loop
repnz
jns
jmp
mov
rcrb
test
cmp
je
sbb
jl
sbbb
cwtl
sub
outsb
inc
pop
cmpsb
lock
jmp
and
hlt
mov
mov
xchg
jae
xchg
aad
or
loop
jne
bound
sub
dec
xor
inc
addr16
dec
push
jge
mov
cmpsb
adc
and
xchg
xor
imul
arpl
push
add
jp
mov
mov
adc
lea
cwtl
pop
add
adcb
arpl
int3
mov
jns
xchg
xchg
popf
push
adc
loop
inc
loopne
mov
int3
xchg
pop
sub
inc
mov
dec
aam
pop
adc
jb
xlat
sar
clc
out
push
cmp
jp
inc
pop
test
cld
subb
xchg
mov
mov
or
push
mov
daa
outsl
sarb
dec
into
jae
cld
cmp
push
repnz
lods
push
cmp
es
mov
stc
and
jl
enter
push
push
into
and
and
push
mov
sbb
pop
push
and
test
insl
ficoms
lea
sbb
fsubrl
or
adc
stos
or
pushf
stc
mov
pop
aaa
sbb
sbb
cli
addr16
insb
stos
sbb
stos
jns
das
push
push
daa
mov
mov
adc
or
mov
mov
push
xchg
pop
sub
notl
xorl
adc
push
adc
sub
imul
jne
gs
cmp
jo
dec
inc
ret
xchg
icebp
insw
xor
cmpsb
cwtl
inc
mov
inc
mov
lea
push
inc
popa
mov
cmc
cmp
jno
fistpll
gs
sbb
sbb
xor
js
mov
orb
rcll
ficomps
adcl
stc
or
es
or
add
or
flds
repnz
leave
jb
dec
imul
out
iret
dec
push
adc
aam
add
adc
mov
push
in
leave
call
pop
cmpsl
gs
inc
jmp
fdivrl
test
js
lcall
add
sar
mov
inc
add
jb
movsl
stc
xor
stc
addb
xchg
stos
lods
scas
fsubrl
xchg
aad
mov
fmuls
mov
push
test
add
fcmovne
sbb
push
cmp
cmpsb
sub
fcomps
and
adc
pop
lods
fisttpl
imul
loop
in
rolb
sbb
pop
out
rep
imul
mov
jecxz
insl
sub
lahf
sub
and
cwtl
jbe
lret
mov
lock
mov
ljmp
repnz
lcall
fisttpll
jns
aam
dec
xor
or
jecxz
xchg
cmp
push
pop
jl
mov
push
push
mov
lahf
sbb
sub
stos
adc
fbld
cmp
xor
xor
psllq
hlt
lods
in
adcl
inc
push
popf
jg
inc
lahf
or
sub
or
mov
into
ja
pop
pop
pop
out
cs
icebp
inc
push
lret
movswl
repnz
dec
cli
jle
xor
push
and
inc
inc
mov
sbb
lret
push
xchg
iret
add
mov
mov
lcall
je
xchg
insb
insl
outsb
dec
mov
arpl
jecxz
fadd
sub
mov
lods
das
dec
xchg
cmp
cmp
mov
mov
iret
ret
test
jno
in
or
sbb
push
push
sbb
jge
daa
ret
pop
cmpsl
mov
sbb
repz
xlat
addl
out
sbb
jae
xchg
rep
cmp
and
je
cld
mov
add
out
xchg
mov
sub
push
bound
mov
adcl
popf
outsl
orb
jne
xor
rorl
cltd
xchg
push
push
cltd
sbb
xlat
mov
xlat
rcll
and
adc
ljmp
aad
loope
test
adc
or
xchg
out
rorl
jecxz
cmp
lahf
repnz
ret
adc
ja
rolb
push
lsl
or
jo
mov
or
fsub
cld
dec
pop
inc
pop
shrb
xchg
test
pushf
or
mov
or
add
out
fcoml
mov
cmp
fbstp
xor
sub
clc
call
adc
es
mov
jl
jb
cltd
add
inc
nop
testb
push
mov
jnp
rcrl
scas
cmpsl
xor
bound
stc
divl
jmp
jg
mov
dec
pushl
outsl
clc
adc
or
adc
int
movsb
mov
inc
push
outsl
testb
hlt
addr16
mov
push
shrl
scas
imul
sbb
ljmp
int
xlat
xlat
jmp
dec
loopne
cmpb
aad
adc
iret
in
xchg
mov
inc
xchg
push
sbb
xchg
xchg
xor
iret
repnz
or
rolb
out
lds
insl
mov
insl
lods
in
aad
xchg
icebp
mov
out
out
mov
xor
xor
dec
std
dec
in
fistpll
insl
mov
push
ss
clc
fcoml
add
or
inc
mov
xor
or
fisubrs
xchg
adc
jne
out
out
shrb
sbb
sub
and
stc
pop
stos
test
divb
shll
mov
mov
push
or
mov
or
sar
loopne
jle
fstpt
mov
sbb
inc
xchg
mov
push
bnd
sar
mov
lods
loope
xchg
lods
std
or
dec
xor
test
dec
pop
or
aam
lods
adc
lods
call
data16
rcl
sub
out
mov
or
mov
and
inc
movsb
in
push
aad
mov
sbb
nop
enter
fnsave
ret
stos
popf
dec
and
mov
popa
mov
in
scas
cmc
mov
cwtl
scas
xchg
psrad
jg
xor
dec
sub
jns
mov
aad
outsb
stos
xlat
clc
mov
mov
dec
ret
mov
ret
lea
out
sbb
lahf
shl
add
shlb
or
lods
sbb
lcall
jl
adc
fwait
inc
pop
inc
cmp
pop
mov
mov
shl
call
mov
add
add
sub
or
out
stos
adc
decb
or
xchg
hlt
lds
bnd
xor
sarl
mov
lret
add
addl
mov
pusha
imul
or
fcmovbe
xchg
mov
out
jecxz
sub
test
bound
xchg
mov
xchg
mov
daa
mov
cmp
adc
in
outsb
ss
in
mov
or
frstor
mov
adc
clc
push
insb
push
stc
mov
in
ds
movl
gs
aaa
inc
pop
cwtl
enter
sub
repnz
add
pop
or
movsb
aas
lcall
sarb
fsubs
xchg
bound
in
sahf
mov
and
cli
lcall
pop
jle,pn
and
pop
lcall
xor
lds
lcall
mov
jmp
mov
cs
dec
ja
jnp
movb
pop
xor
xor
pop
ds
and
xchg
cmp
adc
mov
sub
das
mov
cld
popa
mov
add
adc
in
cmp
fnsave
sbb
aaa
out
lret
push
adc
orl
lret
xor
push
sbb
add
xchg
je
fistpl
ja
pop
add
hlt
and
pop
outsb
add
and
ljmp
push
aaa
movsl
icebp
scas
push
xchg
or
inc
in
mov
nop
cmp
jb
pop
xor
mov
fsin
sbb
imul
pop
je
test
push
aam
test
out
and
jno
sub
pop
ljmp
in
mov
test
cmp
push
sbb
fisubl
lds
jbe
mov
mov
add
loop
push
lcall
out
mov
loop
rolb
imul
lock
cld
mov
cmp
repz
popa
xor
push
loop
lock
fidivl
shrl
loope,pt
sub
jmp
jmp
orl
push
push
cs
xchg
mov
imul
mov
inc
jbe
aaa
pop
push
jg
repz
mov
cmp
xchg
ljmp
sub
dec
outsl
mov
out
popa
test
pop
je
mov
movsl
pop
xor
popa
sar
das
pop
pop
scas
test
push
adc
add
clc
inc
dec
dec
and
movsb
mov
xchg
clc
mov
outsb
adc
pop
bound
mov
aam
sbb
jns
or
shrb
mov
sub
test
jb
add
inc
mov
cmpl
dec
mov
mov
fwait
popf
cli
ret
movsb
push
xchg
pop
imul
jb
in
scas
pop
arpl
icebp
inc
fucomp
sbb
pop
imul
es
cwtl
adc
or
push
jmp
push
cli
in
fcmovne
fistpl
in
jmp
scas
mov
dec
mov
push
popl
mov
xor
dec
pop
lods
push
lret
loop
push
jle
aas
sub
mov
pop
das
jo
dec
and
daa
jae
addb
jne
dec
mov
js
pushf
xorb
inc
sbb
lods
jmp
loop
jb
add
data16
pop
insb
outsl
movsb
int3
xor
inc
cmp
nop
out
adc
inc
mov
in
xchg
inc
leave
aam
into
bound
dec
sahf
xor
imul
in
movsl
mov
sbb
xor
pop
mov
jmp
inc
mov
shrb
int
add
mov
jae
fsubl
and
xchg
xchg
test
std
ficompl
cmp
ret
adc
std
ficoml
cmp
in
fistps
cli
ret
das
leave
ja
mov
jge
jg
push
inc
sub
jns
jb
dec
popa
adc
rcrl
ljmp
in
sub
ret
pop
iret
loopne
or
pushf
out
push
adc
std
mov
mov
ja
mov
pop
xlat
ret
idivb
cltd
jecxz
decl
out
mov
std
fidivrl
sbb
dec
fildl
js
jbe
and
aas
pop
in
jo
mov
mov
cmpsl
les
rorl
jecxz
cli
out
push
movsb
mov
iret
stos
sub
test
cli
fldenv
xor
lret
adc
sub
into
bnd
jg
jno
pop
pop
push
sbb
jae
stos
and
pop
shld
hlt
pusha
aas
mov
mov
push
xlat
and
pop
test
test
jnp
jnp
jae
rcr
je
inc
movsb
mov
or
popa
and
sarb
and
push
pop
dec
lret
mov
sbb
pop
inc
adc
pop
lret
jb
shlb
mov
es
pop
mov
call
dec
popl
cld
pusha
ja
ret
stc
fstl
fsub
jmp
stos
fistpl
mov
mov
dec
cmp
je
inc
push
sub
sbbb
aaa
clc
fsubrl
iret
sahf
jbe
lea
cmp
mov
pop
cmp
out
hlt
mov
sbb
insb
sbb
sub
or
xchg
and
cld
aas
sub
dec
jge
push
mov
push
inc
cli
ljmp
ret
jg
lcall
push
daa
sub
jl
xlat
push
xor
addb
in
inc
jmp
das
push
sti
adc
mov
sub
xchg
sbbl
enter
mov
sub
xor
pop
xchg
test
rcl
mov
addr16
and
adc
fdivr
mov
xor
lock
fisttps
mov
cmp
sub
cld
jo
jno
inc
je
push
fsubs
outsl
lock
shll
jmp
add
lret
movsl
xchg
out
pushf
loop
in
mov
scas
push
mov
std
xor
xor
cmpsl
and
sti
into
add
adc
pushw
out
inc
mov
add
jns
cmp
jge
xchg
int3
add
sahf
inc
imul
rorb
imul
sbb
loop
xlat
mov
ret
and
sbb
push
mov
push
nop
dec
fcmovb
cmpsl
lock
push
push
negl
lcall
repnz
loopne
cmc
dec
cmp
rolb
push
pop
xorb
mov
cmp
push
sbb
pop
pop
adcl
mov
in
pop
and
mov
and
ss
xor
and
sub
dec
movl
add
loop
and
mov
ret
into
adc
js
std
pop
vmovmskps
push
inc
rorb
jne
xchg
lea
inc
xchg
cltd
jl
or
dec
add
pop
jp
daa
mov
mov
mov
jns
push
into
loop
or
enter
push
jo
mov
sahf
into
xor
insb
daa
cli
pmaddwd
in
mov
sbb
addl
movsb
xchg
jno
pop
out
inc
xor
dec
es
int
cli
clc
roll
imul
jae
leave
jmp
mov
sbb
divl
pop
aas
xchg
push
add
mov
clc
inc
add
scas
mov
cmc
daa
pop
adc
clc
jge
sbb
adc
add
lea
cmp
mov
out
nop
insb
lds
pop
jne
cwtl
add
dec
add
fwait
mov
sbb
sub
inc
shrb
xor
mov
scas
mov
gs
add
jg
adc
jo
int3
xchg
rorb
mov
hlt
fwait
jno
test
sbb
fdivp
imul
cmp
pop
aam
das
repz
in
mov
mov
cld
push
lret
lock
xchg
push
or
push
movsb
push
adc
int
xor
dec
xor
ja
insl
imul
xor
xchg
pop
adc
sbb
lods
or
jae
or
fidivl
push
xchg
mov
test
push
aad
jbe
mov
dec
sbb
int
or
sti
mov
movsl
push
cmp
negb
gs
pop
push
addr16
sub
or
or
lcall
pop
in
rcl
inc
lret
sub
add
lock
mulb
aaa
lcall
inc
lret
mov
dec
pop
andl
mov
jne
pusha
xchg
lds
push
stc
lock
gs
push
jl
int3
scas
mov
pop
mov
mov
popf
test
jo
or
dec
jle
sub
sub
mov
cs
imul
and
lods
push
jbe
fstpl
or
and
in
add
xchg
sub
cmpsl
or
xlat
imul
cld
ja
or
pop
lods
adcb
push
push
loope
iret
xor
arpl
inc
in
jns
outsb
pop
nop
mov
das
sbb
adc
inc
aaa
pop
aaa
leave
insl
clc
arpl
out
inc
out
adc
jp
lahf
xor
xor
pop
dec
or
movsb
popf
ret
jecxz
inc
ds
std
test
outsl
xchg
xchg
out
pop
stos
mov
bound
and
imul
mov
sti
add
sbb
pop
xchg
inc
add
push
lds
pop
jmp
adc
test
outsb
push
addr16
mov
out
mov
insl
pop
fldt
inc
jne
mov
je
mov
pop
in
cmp
mov
xchg
mov
inc
xor
mov
mull
push
ret
dec
mov
pop
cmpsl
leave
addr16
dec
movl
int
aas
cli
add
jno
cli
xchg
pop
mov
dec
or
or
add
fidivrl
outsl
sub
iret
out
lcall
notb
je
xchg
push
inc
out
cs
jnp
dec
xor
jmp
xor
jecxz
mov
and
mov
cmp
push
test
push
int3
stc
inc
mov
out
sub
jl
mov
cmp
popf
pop
push
imul
push
cld
fcomps
fs
pop
insb
jp
jbe
int3
lock
mov
mov
mov
add
lret
pop
xorps
shll
xchg
mov
cld
lcall
or
rcll
cltd
into
das
sbb
js
push
das
mov
stc
repz
jmp
xchg
or
and
jae
loopne
incb
cld
add
sbbl
inc
mov
push
inc
lret
jl
pop
push
shl
mov
pusha
sub
xchg
lret
test
jne
filds
mov
lods
jns
sub
mov
nop
xchg
push
jle
push
adc
add
shl
xchg
cltd
cmp
mov
fisttpl
sub
imul
fnstsw
mov
mov
sbb
sbb
and
mov
aaa
adc
fcomp
or
xchg
sarl
stc
lahf
cltd
push
mov
pop
in
jp
movsl
dec
xlat
pop
popa
js
stos
dec
mov
adc
or
mov
faddl
or
negb
jo
lret
lcall
pusha
cmp
and
dec
dec
clc
pusha
lods
xchg
imul
cmp
mov
add
add
dec
mov
rcll
test
filds
mov
ja
or
outsl
xlat
xchg
hlt
push
cmpsl
std
adc
sbb
mov
into
lahf
lods
cmp
pusha
int
pop
icebp
xchg
xor
push
insb
cmpsb
out
lds
push
pop
adc
mov
loope
lret
cmp
sbb
jmp
vpmacssdqh
jmp
pop
mov
cmp
add
pusha
pop
out
cwtl
gs
pop
enter
outsb
and
cs
mov
std
int
mov
shrb
fsubs
repz
adc
insl
push
mov
inc
jle
mov
lods
sbb
ficoms
mov
cs
fisubl
sub
dec
outsb
rorb
outsb
and
divb
scas
mov
add
or
loope
jle
movb
out
jb
mov
rcr
pop
addr16
push
inc
out
pop
imul
mov
out
xchg
lret
lea
dec
mov
out
ror
mov
add
mov
dec
push
or
testl
pop
bound
xchg
ja
aam
pop
mov
in
in
sbb
rorl
add
rcll
lock
out
push
cmpsb
inc
call
sahf
and
add
std
loop
pushf
loopne
xor
dec
scas
fst
xor
lcall
mov
out
sub
ds
filds
mov
jns
dec
ja
or
cmc
out
jno
lret
dec
dec
int3
xchg
call
pop
sbb
movsl
hlt
sbb
mov
arpl
int
pop
sbb
cmp
cmp
loop
mov
push
outsl
gs
sub
icebp
cmp
mov
rcrb
xchg
outsb
cli
jns
ret
jg
mov
or
mov
inc
loope
mov
out
mov
adc
test
fstp
aas
jmp
test
dec
jl
add
cli
xor
mov
scas
stc
sahf
dec
loopne
mov
push
sbb
adc
push
loop
sub
inc
sbb
sbb
andl
and
sbb
adc
mov
rcrl
movsb
sbb
aaa
xor
jns
jle
frstor
test
cmp
mov
sub
jg
popf
cld
cmc
pop
fs
scas
adc
popa
sar
dec
or
pop
cmp
mov
sub
xchg
repnz
repnz
and
jne
mov
das
fsubp
cmp
aas
mov
mov
movsb
xlat
cmp
shlb
dec
mov
repnz
shlb
in
mov
ja
popf
xchg
or
out
mov
adcl
cs
mov
mov
fbstp
adc
cs
mov
pop
push
mov
push
les
dec
fimull
stos
dec
popl
cli
xchg
or
sar
sarb
cmp
cs
push
decl
es
stos
sbb
insb
cmc
cmp
sub
insb
bound
jmp
fmul
adc
loopne
inc
mov
filds
aas
jle
ja
add
inc
inc
pop
mov
loope
andl
mov
xor
cmp
add
sub
inc
outsl
jns
xchg
ret
loope
mov
inc
mov
sbb
mov
sub
adc
pusha
inc
xchg
mov
lret
jp
nop
mov
in
mov
add
xor
scas
lods
cmp
mov
xchg
call
sub
cmp
lds
fdivrl
fcmovbe
fiadds
dec
not
mov
dec
and
jbe
cld
test
and
sbb
sbb
mull
mov
fisubl
jp
aam
xchg
sti
xchg
mov
sahf
lock
push
pop
test
and
xlat
pop
gs
cmc
mov
cmpb
leave
hlt
mov
adc
xor
jne
fwait
jge
rcl
sbb
mov
out
les
inc
sti
push
sub
inc
dec
cmpsl
jbe
mov
hlt
loopne
out
movsb
loope
insb
in
pop
fisubs
mov
mov
and
jb
fwait
pusha
std
xchg
add
int3
les
xchg
lret
cwtl
push
jle
mov
popa
mov
jnp
push
pushf
test
dec
push
cmpsb
cmp
fldl
xchg
jp
aaa
stos
gs
mov
push
cmpxchg
add
in
xchg
push
and
setnp
push
daa
xor
push
mov
mov
ds
xor
sahf
push
mov
faddl
shll
pop
stc
loop
mov
popl
sti
and
dec
push
mov
lret
jecxz
cli
lea
in
adc
inc
pop
ret
xor
lods
lds
orb
xor
xor
mov
std
fwait
jno
jle
test
jae
dec
cmpsl
xor
leave
fimuls
or
fstp
rcrl
sub
jle
lods
sbb
inc
xor
mov
enter
jp
es
in
test
insl
je
xchg
imul
add
sbb
call
iret
pop
fs
roll
out
jecxz
aam
test
stos
mov
pushf
or
in
fistps
clc
cmpsb
dec
pop
jne
inc
gs
hlt
push
stos
cmp
loop
and
add
jne
xor
sub
or
mov
outsl
dec
insb
xor
adc
push
jp
int3
test
xchg
test
rcll
pushf
jle
push
stc
mov
insl
outsb
xor
in
cmp
mov
xor
movsb
pop
pop
cs
dec
push
rcrl
fwait
sbb
xor
adc
insb
mov
and
sub
pop
pop
cmpsb
xchg
pop
or
stc
daa
push
cmp
cmp
aas
xor
daa
push
inc
add
mov
add
nop
xchg
pushf
pop
pop
push
stc
jb
scas
inc
fs
push
mov
xor
test
sbb
mov
lahf
pop
dec
mov
mov
or
negb
pop
push
pop
dec
mov
dec
lahf
test
popf
push
lods
stc
fisubrl
roll
scas
add
ud1
pop
pop
inc
mov
inc
sub
jle
or
test
fdiv
test
dec
mov
ss
jne
rdseed
sub
push
jecxz
scas
js
test
mov
leave
je
fdivrl
dec
sbb
jae
nop
pop
aas
mov
stos
into
cs
xchg
imul
cs
out
sub
add
mov
repnz
cmc
addr16
in
bnd
dec
jle
icebp
push
pop
sbb
mov
mov
stos
and
hlt
mov
push
aas
push
enter
daa
lret
or
mov
in
sahf
insl
imul
arpl
jbe
popf
shrb
xchg
pop
push
daa
test
pop
xlat
dec
xlat
or
jecxz
call
cmp
pop
sarl
push
mov
jb
call
jecxz
add
insw
add
mov
push
arpl
stos
int
mov
test
mov
push
or
cwtl
lds
or
xchg
cwtl
or
mov
jae
imul
ret
adc
stos
sub
int
add
sarb
adc
jo
stos
add
jg
push
dec
adc
daa
push
mov
jnp
stos
xchg
fwait
repnz
mov
rcl
gs
sub
dec
sbb
or
lods
cmp
or
fwait
in
push
xor
dec
xor
aad
imul
push
pop
push
mov
lahf
xor
sub
push
int3
add
repnz
push
repz
and
push
movsl
ret
mulb
cmc
sbb
or
add
aas
mov
mull
addl
cwtl
mov
rcr
push
lods
xor
hlt
shll
mov
sbb
pop
jbe
pop
mov
add
repnz
ljmp
lahf
dec
in
outsb
and
shrl
lcall
scas
xchg
ret
scas
pop
sbb
stc
sbb
xchg
xor
jle
cli
je
sbb
and
lret
push
adc
iret
jecxz
in
inc
adc
add
jl
into
data16
int
dec
cmp
sub
adc
ds
sub
cmp
adc
es
fcmovnbe
js
or
daa
add
mov
pop
fcmovnb
int3
hlt
lret
xchg
inc
sbb
int3
mov
xor
add
pop
clc
mov
xor
std
test
mulb
and
out
scas
and
fistpll
mov
add
inc
nop
daa
mov
cmc
fsubs
pop
adc
dec
in
fndisi(8087
push
fwait
inc
das
mov
and
in
mov
aas
test
iret
clc
sbb
nop
popa
mov
push
pop
cmpsb
subl
out
jbe
cmc
test
xor
or
hlt
sti
hlt
in
jge
ljmp
cmp
inc
adcb
lods
dec
mov
rorb
add
add
out
add
dec
xor
sbb
nop
sbb
imul
icebp
xor
out
add
push
and
mov
mov
jmp
xorl
idivl
in
sarb
push
sub
lea
lods
xor
mov
addr16
inc
jmp
sub
mov
xor
adc
aad
push
lea
adc
push
ja
cld
fucomip
push
push
es
pushf
js
pop
jae
sub
xor
fsubl
insb
mov
push
adc
lcall
repnz
fidivrs
setnp
leave
xchg
dec
add
xchg
scas
mov
mov
adc
or
add
repnz
int
mov
stos
inc
xrelease
lahf
out
cmp
push
push
and
mov
and
popl
add
sbb
cmpsb
adc
xchg
sbb
lahf
arpl
fwait
inc
jecxz
add
ss
outsb
dec
adc
pop
or
clc
stos
repz
jmp
cmp
mov
aam
arpl
loop
outsb
cmc
imul
xor
inc
adc
adc
cmc
das
fnstsw
les
dec
mov
jg
mov
dec
mov
pop
jo
and
or
adcl
negl
and
mov
mov
sub
mov
bound
mov
pop
add
push
pop
fimull
mov
ret
loopne
sbb
push
loop
shl
cmp
in
xchg
inc
in
cli
stos
loopne
lret
cmp
jns
and
repz
dec
imul
scas
mov
dec
or
cwtl
dec
inc
lods
lret
or
add
out
arpl
lea
cmpsb
imul
cmp
movsl
aaa
leave
test
nop
ret
movsl
sub
and
les
mov
iret
xlat
pop
cli
idivl
loope
or
pop
adc
idiv
aas
lcall
cmpsb
push
and
mov
xchg
or
sbb
cmp
xor
pop
and
mov
and
jp
jl
and
stos
inc
cltd
adc
mov
icebp
insl
idivb
mov
add
dec
push
gs
push
js
in
mov
test
rcrl
aam
clc
push
stos
adc
cmp
arpl
aam
xor
jge
fisubrl
imul
insl
mov
pop
popa
and
mov
das
fwait
inc
shll
fs
cmp
sbb
mov
into
mov
lods
jle
int
fadds
adc
mov
xchg
mov
mov
push
xchg
xchg
cli
das
aaa
mov
psubsb
loope
jo
notl
mov
int3
dec
inc
not
mov
adc
sbb
sbb
xor
sbb
pop
mov
mov
inc
cmc
imul
push
testb
sub
xor
push
mov
icebp
les
stos
sub
stc
shlb
pop
sub
adc
mov
lret
popa
lea
and
sti
lock
je
sbb
out
popa
fnstcw
ret
mov
adc
je
cmc
push
add
mov
insb
clc
test
inc
incb
fstl
xchg
add
cmpsb
mov
ds
and
sub
push
pop
fiaddl
jmp
jle
mov
pop
out
fistpll
aam
and
cs
movsb
push
out
ret
fiadds
loope
xor
jb
push
mov
mov
in
faddl
testb
sub
scas
mov
insl
dec
shll
xchg
mov
jmp
inc
pusha
push
hlt
or
shrl
pop
add
outsb
cmp
fstl
data16
xchg
je
push
in
fsts
inc
adcb
int
icebp
out
sub
add
out
subl
faddl
inc
pushf
lcall
jmp
std
add
out
mov
dec
int
imul
test
cld
inc
xchg
into
enter
mov
push
les
xor
test
ja
repz
xchg
mov
mov
test
mov
shll
pop
xchg
push
out
add
subb
push
lahf
into
sub
push
scas
jno
cltd
lcall
sub
sar
sbb
xor
popa
pop
xchg
out
xchg
xorl
pop
mov
mov
or
movl
cmc
scas
xlat
adc
arpl
fsubl
ror
or
cs
push
mov
loope
stc
lods
cld
lea
aam
mov
push
pop
mov
mov
rcll
or
and
push
add
data16
dec
mov
leave
jmp
insb
xor
adc
adc
dec
ds
lcall
aad
sahf
fwait
push
push
jne
gs
enter
inc
push
jo
push
bound
jge
movsl
pop
out
pop
ss
dec
push
xchg
dec
das
mov
fldt
test
sahf
cld
ficoml
cmp
sub
idivb
mov
xchg
cmp
outsb
xlat
xor
and
pop
or
shll
mov
sbb
and
mov
mov
inc
xchg
rcrl
aas
jb
in
or
fistpl
mov
ret
fwait
mov
xchg
xchg
mov
adc
mov
and
fmull
in
add
outsb
sub
adc
inc
imul
pop
iret
adc
call
popa
into
push
repnz
js
call
rcrb
test
dec
loop
pop
push
cmp
fwait
sahf
adc
inc
jbe
xchg
fbstp
cli
push
sub
jl
pop
ds
xor
push
insl
ja
add
jb
data16
sub
cld
rdpmc
sbb
and
scas
insb
mov
inc
add
jle
xchg
sbb
inc
cmp
addl
jle
scas
sbb
mov
pop
jno
dec
in
mov
push
out
popf
xor
enter
ja
cmpsl
test
push
xchg
mov
adc
jb
std
mov
sbb
cli
or
aas
adc
cmp
sbb
push
dec
push
les
jb
lcall
sbb
push
mov
repnz
mov
syscall
jo
rolb
sub
stc
aad
jno
mov
lods
jle
out
jl
loope
and
add
inc
pop
add
pop
rorb
and
mov
pop
in
and
imul
ja
cmpsb
pop
mov
in
out
cmpsb
push
push
push
inc
push
fldenvs
bound
lock
call
xor
or
sarb
cmp
dec
icebp
push
loope
testl
dec
fucomip
xor
sti
pop
and
ret
sub
les
aas
push
stc
inc
sbb
jns
push
popa
mov
cwtl
insb
mov
lret
neg
push
les
loop
rorl
dec
pop
imul
push
xor
mov
mov
out
inc
cld
je
pop
pop
or
or
ja
mov
cmp
push
ret
push
sub
movsl
loope
lret
mov
sbb
js
or
out
inc
jb
int3
notl
dec
dec
out
or
cmc
out
sbb
js
or
test
mov
lds
subl
or
cmp
xor
enter
jo
jge
mov
repz
idivb
mov
imul
lds
out
call
cld
movsb
icebp
cmp
mov
dec
ss
jp
pushf
sbb
jbe
pop
lods
mov
insl
pop
sub
pop
jp
dec
mov
sbb
les
aaa
imulb
jecxz
or
aam
adc
jg
jns
adc
jbe
mov
rcrl
mov
cltd
jg
xlat
jns
movsl
push
je
sub
mov
stc
repz
cwtl
pop
mov
mov
int
add
jnp
mov
pusha
idivl
pop
push
push
out
sbb
sub
pop
aad
pop
shl
jmp
std
push
dec
int3
adc
sbb
cmp
xchg
imul
and
or
rcrl
lock
and
in
jae
in
cmpsl
adc
xchg
loop
adc
ror
dec
arpl
dec
jg
rorb
jne
xor
arpl
push
jb
ljmp
fists
add
out
or
or
lods
cmp
mov
mov
ds
inc
xchg
cmpsb
xchg
lahf
dec
jno
cmp
mov
mov
adcb
mov
mov
shrl
mov
push
xchg
add
add
mov
call
xor
push
into
and
mov
jnp
dec
aam
cltd
sub
mov
test
icebp
mov
xlat
loope
cmpsb
out
je
or
test
test
loop
insl
clc
dec
or
xchg
cmp
mov
push
lea
jl
mov
lret
int3
sti
pop
jle
and
sahf
pop
ror
xchg
mov
jbe
and
daa
jo
push
cmp
and
fldcw
fdivs
jecxz
pop
stc
sbb
scas
shrb
cmp
or
mov
sub
stc
jb
sbb
jo
shrb
fwait
outsl
daa
lret
mov
loope
or
mov
outsl
repnz
rcl
jo
pop
pop
test
or
jno
sbb
cltd
mov
jg
mov
mov
repnz
adc
call
xchg
lock
rorl
incl
les
xchg
aam
mov
add
enter
clc
pop
jmp
data16
or
inc
cmp
and
fs
notl
mov
cmp
mov
adc
mov
adc
test
lret
js
dec
leave
xor
or
ret
or
and
stc
xor
out
cs
push
mov
je
fsubs
mov
push
dec
cmp
xor
fidivl
adc
jno
or
scas
insl
sarb
in
cmp
mov
mov
loope
test
mov
cmp
and
sbb
push
push
lods
xor
adc
sahf
jae
dec
jb
in
inc
xchg
push
cld
addb
lahf
push
hlt
jl
jb
cmp
fisubs
in
ficoml
xchg
cmp
push
ret
lods
call
fbstp
insb
loop
lock
repz
scas
imul
sbb
test
sahf
dec
mov
divl
insb
call
cmc
pop
int3
les
adc
rolb
lods
test
xchg
pusha
repnz
inc
cld
mov
pop
jl
pop
gs
testb
pop
adc
push
out
ffree
jns
mov
sbb
mov
or
xor
pusha
nop
movsl
push
cmp
inc
push
sbb
jbe
test
das
push
popa
xchg
adc
jne
sbb
xchg
mov
lcall
xchg
push
loope
jp
shrb
shll
ljmp
lret
in
cmp
ret
mov
fs
jb
addr16
xor
xchg
inc
and
push
jo
inc
test
icebp
adc
xchg
mov
and
sub
mov
sub
sbb
xchg
mov
mov
xchg
jbe
pop
mov
push
sti
in
push
mov
adc
iret
inc
add
xchg
leave
adc
mov
mov
in
fwait
sub
sbb
sbb
stos
mov
addr16
aam
inc
ror
dec
jecxz
xor
movsb
pushf
cmc
loopne
imul
adc
dec
pusha
mov
stos
jl
mov
xlat
push
and
or
ljmp
jo
jmp
adc
pop
clc
or
scas
mov
mov
fld
mov
add
cs
les
and
sbb
sbb
js
sbb
pop
sub
idivl
mov
sub
jne
inc
shrl
mov
inc
jns
sub
ret
inc
xchg
add
lock
mov
cs
cs
pop
adc
lds
lret
sbb
push
mov
add
sub
mov
sbb
inc
in
sbb
xchg
cmp
ret
or
jp
cmpsl
ds
mov
or
fbld
mov
pusha
outsl
sti
jg
icebp
mov
jmp
ds
sub
jbe
xchg
std
xchg
add
decb
lcall
mov
jb
push
add
jno
stos
and
cmpsb
sbb
out
jns
push
mov
fcos
fs
jp
movsb
mov
ja
pusha
or
sub
cld
leave
inc
xor
xchg
jg
jnp
fldenv
or
mov
pop
imul
push
sti
and
sub
lea
cmp
lret
fstpl
shlb
push
ljmp
faddl
mov
xchg
dec
in
lods
lret
mov
add
xchg
fs
pop
lock
or
pop
and
add
cli
xchg
cmp
inc
dec
mov
jnp
cli
loope
mov
mov
jmp
and
pop
cli
orb
data16
enter
icebp
jns
stc
incb
add
mov
outsb
inc
cwtl
xchg
leave
cmpb
shlb
fcmovnb
adc
mov
mov
push
adc
add
sub
xor
mov
aaa
test
mov
icebp
movsb
and
jnp
xchg
sbb
jns
dec
adc
or
js
cmpb
lcall
jno
fisttpll
data16
xor
pop
xchg
push
lcall
jg
lea
or
shrb
mov
inc
add
push
push
or
jmp
test
test
jno
fsubl
mov
lcall
outsl
adc
push
shl
jne
outsl
pop
push
xchg
fcmove
aaa
sbb
jp
shrl
xchg
fnstenv
je
inc
dec
jmp
adc
push
leave
push
sub
pop
cltd
mov
lock
or
and
repz
pop
in
cmpsl
and
ficompl
jmp
push
andl
fisubrl
testl
dec
or
daa
add
out
cmp
cwtl
cmc
mov
mov
lahf
push
jo
mov
sub
imul
pop
movsl
mov
pop
int
jge
pop
xor
int
cltd
xor
roll
xchg
jae
mov
push
sub
stos
cmpb
icebp
ret
mull
push
fiadds
cs
mov
sti
leave
cli
mov
imul
pop
sbb
ja
outsl
ljmp
push
sub
or
jno
jge
sub
push
adc
out
andl
popa
inc
lods
mov
mov
aad
fistl
mov
out
sub
pop
jbe
cmpsb
add
xchg
in
mov
push
pop
popf
pop
mov
cld
push
jns
push
sub
add
adc
scas
insb
xchg
stos
repnz
fisubl
rorl
push
loopne
movlps
jl
xchg
jmp
enter
or
ret
shl
clc
push
scas
cmpsb
add
jge
ficoms
dec
lods
mov
je
scas
gs
push
int3
mov
aad
in
in
push
loopne
sbb
mov
js
jge
orb
jnp
push
cs
jle
out
jns
outsb
and
pop
sub
jb
sbb
roll
mov
lret
fidivrl
jno
in
pop
xor
inc
dec
arpl
cmc
push
or
cltd
stos
push
push
xchg
push
or
mov
xor
div
ss
inc
and
push
mov
bound
fs
cmp
insb
pop
sbbl
fwait
cmp
imul
mov
sbb
cli
cmc
pop
mov
mov
add
cmpsl
shl
stc
dec
and
jmp
adc
add
daa
jb
stos
sbb
es
jl
cmp
cwtl
pop
dec
bound
dec
or
fdivp
arpl
jo
test
sbb
add
daa
popf
mov
loope
popa
jno
enter
dec
int3
fdivrp
adc
fdivrl
push
mov
mov
jbe
mov
cltd
out
mov
push
push
jmp
inc
cmp
aaa
pusha
sti
pop
outsb
and
imul
add
test
loope
movsl
pop
xchg
divl
roll
clc
in
popf
push
cltd
dec
dec
push
xchg
lock
stos
inc
sti
mov
ret
imul
jmp
cs
popf
xlat
bound
push
mov
hlt
mov
sub
push
mov
inc
push
stos
mov
jbe
sahf
movsb
adc
out
adc
test
jns
hlt
stc
and
cs
push
daa
jbe
fisubl
js
or
push
jp
inc
pop
test
mov
jmp
inc
lock
mov
aas
sti
push
jmp
popf
dec
mov
ljmp
add
pop
push
push
or
xor
or
mov
cmpsl
xchg
testl
rcr
and
ljmp
fcoml
xchg
ds
push
push
movsl
cmp
movsb
cmp
movsb
pop
xchg
mov
or
xor
andl
inc
mov
out
movsb
sbb
cmp
add
and
dec
cs
mov
mov
xchg
xchg
dec
lret
cltd
aaa
mov
iret
push
or
cld
pop
jecxz
lds
lock
adc
lcall
sti
les
in
pop
xor
cs
jb
je
and
scas
cmp
add
sbb
mov
hlt
repz
es
ficoml
pop
sbb
mov
inc
out
call
pushl
dec
adc
add
mov
jecxz
daa
enter
adc
ficoms
sbb
jmp
vunpckhps
xchg
call
aas
push
add
pop
xchg
add
imul
or
cmp
inc
mov
pop
popf
push
xlat
stos
push
inc
push
aas
adc
nop
mov
mov
cli
jl
lret
inc
lcall
gs
push
mov
mov
enter
sarb
inc
mov
pop
int3
mov
or
add
mov
outsl
xor
rcrl
rcrl
arpl
test
xchg
dec
jo
sbb
ds
test
js
out
mulb
int
cmpl
cmp
sbb
pop
insl
cwtl
in
repnz
or
ret
mov
outsl
clc
mov
ret
mov
leave
or
mov
sarb
orb
loopne
dec
jbe
jne
lods
dec
jo
inc
mov
or
mov
jo
in
xor
negl
dec
loopne
test
sti
mov
aas
jnp
and
or
pushf
or
xor
leave
sbb
push
mov
or
scas
cmc
sbb
cmp
js
inc
xchg
or
jmp
aaa
pushf
popf
dec
subl
icebp
lea
mov
dec
add
mov
pop
aam
aad
insb
test
mov
push
push
stc
outsl
es
mov
xchg
roll
dec
aam
lahf
call
int
sbb
xor
push
xlat
aas
adc
xchg
ljmp
hlt
add
loop
in
out
movsl
xor
test
dec
jecxz
mov
sahf
fsubs
ret
inc
push
mov
nop
call
jl
inc
jp
js
nop
inc
in
cmp
jl
dec
in
push
mov
jmp
ret
and
jge
add
push
aaa
xchg
jne
leave
daa
push
cmp
aaa
out
mov
dec
xchg
mov
leave
shlb
and
jecxz
cmpsb
cltd
push
jge
repz
test
cltd
fs
inc
inc
lret
lods
leave
insl
int
lods
repz
xchg
and
lods
xor
stos
or
xor
cmp
sbbl
mov
jnp
scas
push
clc
aam
dec
xchg
ljmp
jg
push
adc
xor
das
push
dec
cmc
mov
int
sub
xchg
sbb
jmp
mov
or
jmp
push
jae
in
push
andb
sbb
pop
iret
mov
jg
cmp
mov
aaa
adc
cmc
popa
mov
xor
sbb
dec
cmp
or
mov
pop
cmp
or
and
mov
loope
pop
xchg
cs
bound
imul
aam
add
pop
ja
inc
test
push
clc
sahf
scas
jb
pop
mov
test
and
xchg
pop
jne
or
pusha
and
inc
sub
stos
mov
inc
loop
xchg
mov
fisttpll
int
sub
aam
pop
in
and
inc
das
xor
mov
ss
cwtl
xor
pop
fs
push
dec
fisubs
xlat
xchg
xchg
xor
add
dec
pop
mov
mov
mov
subl
scas
test
adc
inc
or
sahf
aas
mov
ficomps
test
mov
inc
outsl
shll
movsl
push
pop
pop
aad
sbb
mov
pop
mov
jne
outsl
dec
mov
daa
aas
pushf
cmp
cmpsb
ljmp
loop
jge
rcll
addr16
repz
cwtl
ret
adc
dec
sbb
sti
aam
mov
stos
mov
pop
cmp
or
pop
sbb
fiadds
adcb
sbb
in
or
mov
sbb
pop
push
lock
lcall
repnz
adc
adc
sarb
sub
popa
fs
or
out
leavew
enter
fwait
int
push
in
push
or
ja
pop
clc
add
push
cltd
shrl
in
dec
mov
inc
es
fildll
push
mov
insl
movsb
mov
mov
sbb
loop
lahf
rclb
rol
jl
cli
push
cmp
ds
mov
les
mov
out
xor
roll
and
loop
and
inc
xor
dec
adc
push
rcrl
mov
movsb
dec
pop
lret
mov
add
in
jo
mov
lcall
jbe
lods
dec
sbb
jp
sar
inc
sbb
ja
arpl
outsl
in
mov
adc
popl
cmp
jecxz
mov
mov
shrb
cmp
inc
cld
out
insl
dec
push
fdivr
test
adc
cmp
lcall
hlt
adc
je
dec
push
push
pop
rclb
and
fwait
push
hlt
cmc
pop
fs
fsubrl
rcrl
add
jl
clc
lods
mov
jl
xchg
pop
push
addl
inc
fiadds
and
push
push
add
xor
movsb
lret
imul
scas
jmp
insb
xchg
addr16
inc
sbb
jp
cmpsb
cmpsl
adc
ss
and
lret
fnstcw
xor
cmc
xor
jne
jne
jmp
lds
jl
imul
sub
out
ret
shrb
cmp
mov
and
mov
add
sbb
xchg
jne
test
jae
inc
push
cmpsl
jo
imulb
mov
movsb
add
mov
mov
add
cmp
addr16
pop
ds
push
xchg
mov
jne
mov
push
mov
leave
frstor
mov
xlat
xor
aad
shl
outsl
adc
imul
adcl
fdivs
sti
leave
negb
lret
push
jecxz
dec
cmovp
addl
sub
clc
mov
pop
das
push
cmp
gs
lods
add
sahf
xor
and
jmp
pop
int3
fcmovb
cmp
sbb
push
les
pushf
push
push
nop
jo
mov
sbb
xadd
rclb
loopne
inc
in
push
addb
adc
and
inc
clc
push
lret
subl
mov
loope
dec
cmp
nop
cmp
xchg
shrd
inc
and
adc
jae
fsts
in
xlat
xchg
ja
test
pop
jns
sub
and
xor
enter
ficoml
lret
jge
jne
mov
push
cmp
add
jo
fsubs
iret
std
dec
adc
adcl
sbb
pusha
mov
cmp
and
push
push
fcoml
outsb
lret
hlt
lea
mov
xor
cmp
jbe
xchg
xchg
jns
sahf
sub
pop
pop
pop
jge
fcmovb
fbld
mov
iret
mov
adcb
pop
outsb
and
xorl
mov
aad
shll
xor
mov
sub
inc
sbb
insb
or
adc
add
xlat
jge
sbb
jae
sysret
imulb
pop
xor
jmp
je
xor
push
mov
jle
xchg
ss
lret
mov
pop
sbb
push
mov
loop
les
das
call
fists
inc
cwtl
push
enter
lret
roll
cmpsb
add
ret
dec
fwait
hlt
mov
out
fidivl
das
xchg
shrl
mov
stos
lds
dec
and
adcb
inc
inc
mov
or
pop
cmp
push
repnz
push
sahf
out
add
ja
xchg
sti
pop
js
push
ss
mov
popf
es
movsb
stos
add
jne
add
and
xor
pop
xchg
repnz
bound
and
xor
ret
aaa
pop
addr16
outsb
out
xor
jbe
and
test
xlat
mov
and
scas
nop
sbb
lods
dec
xorb
aam
jbe
inc
cmc
js
cld
mov
sub
loope
popa
andl
iret
dec
imul
inc
leave
into
lahf
mov
fidivrl
mov
cmpsl
fildll
push
in
scas
mov
imul
fdivs
insl
jg
and
push
dec
mov
cmp
pop
sbb
sbb
xchg
les
dec
mov
out
cs
fs
jmp
mov
jbe
jno
hlt
inc
jo
sbb
out
clc
xor
push
std
cmp
inc
adc
sbb
mov
xchg
sbb
ret
jno
or
cs
jnp
add
push
or
lds
add
pop
ds
cmp
push
movl
in
iret
add
mov
xlat
nop
test
or
add
rclb
daa
mov
mov
cmpsb
jg
cmpsl
push
repnz
loopne
ds
mov
movsb
in
mov
adc
or
pop
adc
scas
shlb
lahf
fsts
mov
jp
cmp
dec
sbb
cmpb
mov
inc
dec
ficoms
xor
add
clc
xchg
js
xor
push
push
mov
aam
pop
sub
pop
pop
mov
mov
addr16
pop
adc
xor
push
cmpsb
cmpsb
ss
inc
out
dec
cmp
ja
cmp
cmp
mov
sub
and
mov
bound
cmp
adcl
adc
pop
daa
cmp
enter
cmpsl
out
mov
sub
test
mov
imul
mov
jp
mov
lock
pushw
icebp
out
dec
jle
movsb
ja
into
mov
int3
js
mov
lret
adc
adc
mov
jbe
jge
daa
push
js
sbb
add
sub
or
mov
mov
fwait
mov
ljmp
in
addr16
leave
and
inc
fdivl
adcb
cld
mov
clc
mov
push
add
pop
jbe
jnp
and
inc
push
and
push
lods
bound
pop
sahf
addr16
and
jg
push
lods
mov
test
adcl
scas
pop
sbb
imul
cmp
or
inc
lock
in
out
mov
andb
xor
inc
lret
mov
mov
or
cmp
inc
out
ss
cmp
ja
sbb
sahf
pop
lock
ljmp
lea
stos
xlat
jge
mov
or
inc
lock
push
enter
das
mov
repnz
mov
negb
and
mov
jae
out
sbb
jg
xor
push
mov
jmp
scas
and
inc
mov
jge
hlt
leave
xchg
xor
scas
mov
and
scas
aam
mov
jle
fimuls
sub
xchg
test
leave
clc
sub
dec
dec
xor
adc
add
dec
in
cmp
std
lahf
cmp
pop
test
sbb
jns
fwait
jg
ja
and
gs
ja
nop
sbb
pop
fldenv
popf
xor
adc
aad
insl
std
add
mov
sbbl
sub
jg
push
xchg
xchg
add
jecxz
into
push
or
or
ljmp
stc
and
adc
dec
sti
jno
aas
cmp
addl
inc
push
pop
add
jb
xchg
mov
pop
dec
stos
sbb
and
adc
pop
daa
pop
cmp
mov
cmp
mov
sbb
xchg
les
outsl
jl
add
or
in
les
add
popf
mov
jg
jg
push
lret
sbbb
jnp
add
cld
dec
or
or
ljmp
mov
mov
out
pop
shl
xorl
push
fcmovnb
push
and
stc
and
faddp
insl
iret
dec
sbb
dec
push
insb
insb
rol
repz
xchg
stos
in
cmp
mov
ficompl
scas
cmp
scas
das
clc
cltd
xor
lods
jb
pop
in
xor
insl
arpl
jbe
jl
and
or
push
test
notb
rorl
mov
sub
testl
int
push
gs
mov
sub
inc
jle
mov
xchg
jb
inc
repnz
ss
je
cmp
les
mov
lods
sbb
out
mov
loope
roll
fsubs
dec
jl
push
in
pusha
sub
push
lret
bnd
push
in
adc
arpl
xchg
xchg
sub
push
out
mov
lcall
adc
ss
xchg
ds
push
gs
std
out
ret
jecxz
out
inc
and
mov
mov
stos
mov
pop
fcmovnbe
into
jg
fsubs
das
mov
pop
sub
cltd
mov
cmpsl
and
add
mov
sahf
divl
lock
int3
outsl
mov
push
pop
aaa
test
ja
push
inc
fwait
addr16
popl
push
arpl
testl
cmp
sbb
mov
inc
inc
das
mov
aad
push
ja
shll
mov
adc
add
inc
dec
hlt
push
int
xor
adc
int
add
cmp
out
enter
pop
push
or
mov
mov
fst
cmp
jl
xchg
test
push
in
inc
cli
push
fstpl
dec
mov
int
cmp
xor
xchg
push
clc
cmpb
xchg
mov
xchg
fcmovnb
inc
popa
add
mov
dec
in
xor
cli
call
stos
sbb
loope
loop
pop
stos
jb
fs
enter
sbb
xchg
fisttps
negl
or
lahf
sub
aam
ss
push
xor
jno
lret
sbb
lock
sbb
arpl
ljmp
cmpsl
roll
hlt
es
inc
imul
pusha
imul
mov
out
rol
xor
cmp
int3
pop
fldcw
inc
arpl
insb
inc
mov
jno
in
data16
jecxz
jnp
jg
sbb
fbld
and
jb
hlt
push
or
add
fistpl
ror
push
cmc
sub
dec
add
fnstenv
test
cmpsl
scas
jp
arpl
cwtl
shr
ja
jne
shld
repz
outsb
pop
jns
jg
jae
stc
in
and
aas
lahf
subl
int
adc
cmpsb
xor
mov
xor
sub
and
movsb
cwtl
int3
pop
test
ss
jle
jl
xor
ss
jne
mov
xchg
andb
dec
aas
inc
xchg
rcrl
push
shrl
xchg
test
pop
sub
pop
pop
jecxz
int
lea
cmpsb
pop
loope
add
ja
jl
out
aaa
std
lahf
inc
inc
cmp
sbb
pop
mov
pop
or
mov
jae
dec
insl
sbb
jmp
jno
movsb
xchg
or
insb
pop
xlat
sbb
shrd
in
jmp
sarl
cli
mov
jge
repnz
movsl
mov
out
das
out
out
pop
dec
lds
lret
bswap
xor
in
ret
adc
push
leave
lret
mov
sti
or
dec
pop
jge
add
lea
adc
jb
xchg
shrl
sub
movsl
cltd
jbe
dec
push
push
xlat
add
clc
pop
addr16
lods
lods
mov
fldenv
shlb
clc
lds
fcomps
xchg
mulb
mov
in
out
imul
mov
or
xor
mov
and
dec
cs
popf
or
adc
mov
stos
jno
fistps
frstor
andb
out
jae
ret
add
mov
lods
outsl
xor
pusha
jo
rcrl
icebp
aaa
jae
jmp
pop
cmpsb
dec
mov
adc
data16
stc
loopne
push
lahf
dec
sbb
cld
lods
rclb
sbb
out
stos
inc
fldz
shl
repz
dec
pop
iret
lods
frstor
inc
loop
cs
lods
loop
jp
jns
pop
shrl
add
sti
or
push
dec
jo
icebp
lret
sbb
pop
add
cmp
push
arpl
mov
and
pop
mov
fidivl
mov
jg
les
movsl
daa
push
loope
jae
push
arpl
xor
stos
das
cmp
shrb
cwtl
movsb
mov
jno
das
sahf
sub
call
cwtl
pop
mov
fs
shr
cmp
int
lret
mov
rcrl
in
scas
pop
aaa
or
jne
shr
mov
adc
xchg
ljmp
mov
test
push
sbb
lds
cld
clc
adc
scas
sub
clc
sub
je
adc
adc
fldcw
pusha
cs
jl
lret
dec
dec
or
iret
cmp
add
fcmovb
fldcw
cmp
sub
cmp
push
jb
int
mov
lds
mov
test
pop
sub
dec
cmc
xchg
and
cmp
or
mov
mov
or
push
sahf
jns
push
mov
mov
pop
mov
call
mov
dec
rolb
lock
rcr
out
dec
in
aam
idiv
shl
out
cmp
testb
push
imul
repz
xor
and
add
jb
dec
cmpsl
or
pop
popf
xor
lea
int
pushf
js
clc
xchg
in
mov
shrb
or
sub
sbb
jne
sub
test
and
stos
jge
cmp
and
push
mov
hlt
and
push
dec
or
fwait
loope
stos
sbb
in
mov
nop
cmc
sbb
xor
addb
inc
push
xchg
push
and
pop
push
andl
xchg
sub
les
mov
sti
test
popf
jae
repnz
lea
addl
cmp
das
sbb
mov
adc
xor
inc
push
pop
push
scas
in
xor
arpl
sub
cmpsb
sbb
push
adc
mov
jmpw
inc
nop
les
loopne
dec
gs
test
xchg
xor
int
inc
rcrl
sub
fbld
in
stos
adc
js
push
mov
mov
cld
test
add
xor
popa
jmp
pusha
jno
pushf
jl
cmp
sbbb
push
fsubl
push
out
adc
popl
mov
out
pop
adc
sbb
mov
mov
popa
int
jae
adc
sbb
std
test
inc
mov
pop
iret
sahf
nop
test
jns
das
sub
jae
fwait
shll
ljmp
dec
xor
out
hlt
xor
test
sbb
iret
and
aaa
fistl
mov
jns
adc
add
lods
add
sub
je
mov
jge
dec
mov
fwait
pop
das
cmp
add
fsubs
test
adcb
clc
adc
dec
lahf
jae
test
imul
jae
sub
cmc
int
lcall
jle
testl
xchg
fisttpl
loope
lret
sbb
pop
push
hlt
mov
jbe
mov
cmp
popf
mov
xchg
sbb
movsl
cmc
fs
je
mov
sub
cmp
inc
mov
cmp
mov
and
in
inc
inc
in
mov
les
das
imul
dec
xor
jp
adc
mov
nop
sub
arpl
mov
mov
iret
push
cmpsb
aas
in
movsb
adc
ret
cmc
loopne
stc
les
push
xchg
popa
sub
jae
ja
dec
add
jmp
cwtl
sbb
cmp
sti
or
mov
int3
out
inc
add
dec
jmp
jbe
cmp
sub
xorl
lock
add
and
and
insb
popa
add
cmp
pop
subl
daa
jecxz
xchg
lcall
ljmp
cli
add
out
std
icebp
add
mov
push
adc
in
jecxz
pop
leave
sbbb
xor
dec
shrl
xchg
popf
dec
fistl
jge
inc
mov
lock
stos
xchg
xchg
cmpsl
cs
xchg
pop
push
jle
xchg
movsb
imul
jmp
js
jp
sbb
inc
add
xor
xchg
push
or
aam
jecxz
or
nop
imul
add
pop
sti
subl
js
or
outsl
ss
bound
push
mov
inc
cmc
jl
loopne
mov
adc
pop
push
sbb
mov
dec
sbb
adc
data16
push
push
adc
push
jnp
ja
test
fcoms
das
adc
pop
cwtl
push
add
daa
rolb
jmp
add
push
out
iret
or
dec
mov
andl
xlat
or
div
leave
jecxz
icebp
or
data16
aad
cmp
pushl
stos
dec
imul
jp
jge
clc
jns
outsl
cli
mov
mov
pop
cmp
out
iret
jmp
jb
sub
adc
out
and
rcrl
dec
mov
addr16
pop
imul
notb
arpl
adc
ds
pop
fisttpl
cmpsb
aam
xchg
cltd
pop
sub
sub
fisttpll
cli
adc
push
lahf
mov
test
pop
orb
and
call
xchg
jle
inc
pushf
or
sub
loop
and
mov
or
xor
add
idiv
cmpsl
push
cmpsl
ss
push
es
adc
and
and
add
jb
hlt
xchg
mov
enter
dec
mov
ds
cmp
mov
mov
mov
pusha
hlt
movsl
je
mov
loope
cmpsl
xor
sbb
std
lret
sbb
fwait
roll
hlt
mov
xor
mov
and
add
je
and
lods
xchg
jae
enter
ret
out
or
fdivrs
or
movsb
punpcklbw
mov
jne
cmp
rorl
jno
mov
xchg
lods
inc
jne
push
inc
xlat
mov
mov
in
shr
enter
cmp
cmc
mov
xchg
mov
jo
gs
jmp
hlt
or
int
leave
cmp
rorl
xchg
mov
test
add
dec
jle
xchg
das
clc
aas
cld
pop
fcoms
test
and
fwait
je
leave
cli
adc
push
jp
pop
dec
ss
add
lods
ret
int
fwait
outsl
pop
xor
inc
push
xchg
js
xor
fwait
int3
out
xor
mov
jp
pop
xor
stc
addl
mov
pop
sbb
fistl
mov
jg
stc
pop
push
test
mov
jp
cmp
adc
lds
fcomip
lret
cmpsb
inc
inc
and
adc
out
loope
mov
fs
outsl
and
movsb
aad
cmp
pop
xor
mov
mov
adc
les
inc
dec
mov
mov
roll
nop
mov
je
mov
sti
cmc
shl
pop
sarl
mov
inc
xor
imul
jg
sbb
fscale
lods
movsb
add
push
icebp
mov
jae
jg
imul
outsl
ss
jb
sahf
rol
lcall
pop
aas
sbbl
addb
ret
pop
push
imul
flds
sbbl
loope
mov
jae
aam
sbb
and
xchg
cld
stos
xor
and
stos
push
and
out
pushw
or
ja
outsb
bound
mov
rorl
mov
cmp
mov
repnz
xor
xlat
faddl
mov
fcomip
ret
xchg
jge
and
ret
in
xor
dec
jmp
dec
inc
int3
sbb
sub
mov
fwait
and
xor
jne
or
mov
shlb
sbb
rorb
rorl
cli
lods
int3
lret
cltd
iret
negl
mov
ds
sbb
aaa
lea
and
fdivr
pop
ja
mov
leave
stos
pop
stos
in
adc
loop
scas
cltd
sbb
cmp
push
pop
iret
add
clc
les
adc
sub
adc
jg
lods
lds
adc
imulb
daa
js
dec
xor
xchg
jl
mov
gs
mov
aaa
jne
js
int3
icebp
jns
lods
subb
mov
add
mov
xchg
int3
or
push
mov
fdivl
cmp
mov
out
xchg
dec
dec
add
lock
xor
adc
inc
push
or
loopne
inc
sbb
jmp
mov
aam
dec
jmp
lds
inc
xchg
mov
andl
mov
icebp
test
das
jbe
jnp
add
dec
subl
call
cs
add
insb
pop
push
push
mov
jl
inc
shlb
inc
mov
loopne
fnstenv
loopew
inc
out
stos
adc
iret
xor
lahf
mov
outsl
adc
and
xchg
testl
movsl
loop
xchg
daa
dec
pop
mov
and
movsl
lret
cmc
test
fcoms
jecxz
fs
popaw
out
nop
push
pop
mov
mov
fdivrl
imul
adc
scas
aaa
test
xor
jno
into
or
imul
pop
loopne
push
shrl
test
jbe
dec
rcrl
sub
cmpsl
pop
fistpl
pop
negl
push
cmp
cmc
iret
mov
shl
fimull
mov
inc
mov
jnp
jecxz
push
cmp
jbe
out
xor
pop
xchg
addr16
hlt
fwait
inc
xchg
xchg
inc
dec
sbbl
hlt
sbb
mov
lds
xor
push
pop
pop
repnz
pop
repz
lea
cmp
test
inc
iret
sbb
nop
pop
gs
fdivs
jne
or
pop
and
cmp
in
jne
in
sub
push
shlb
loopne
je
cmc
cmp
jne
mov
add
mov
jg
loope
xchg
bswap
inc
ss
pop
data16
sub
push
xchg
jp
mov
into
push
mov
loopne
cld
and
sbb
leave
icebp
dec
daa
push
xchg
cmp
or
clc
mov
cmp
mov
cmpsl
mov
jb
call
adcb
mov
daa
and
test
jmp
loopne
cmp
pop
fmull
in
push
push
adc
add
sahf
push
out
mov
xor
int
and
out
pop
ret
push
lock
push
out
jp
adc
out
icebp
push
sub
mov
loop
sahf
sbb
cmpsl
push
aaa
movb
into
hlt
ret
into
push
mov
pusha
daa
js
push
add
mov
shr
das
pop
in
pop
push
xor
add
mov
sbb
fistps
xchg
mov
leave
mov
pop
xorb
mov
mov
xchg
cli
cmc
inc
dec
add
icebp
out
inc
pop
xchg
dec
xchg
in
fs
push
movb
rcrb
cmp
push
popf
stos
adc
lret
sti
insb
cltd
out
test
dec
imull
dec
mov
js
mov
push
push
fwait
shlb
loop
aaa
ljmp
and
pop
cmp
sub
popf
mov
or
or
sbbb
sti
inc
and
sub
mov
mov
cli
shl
xchg
cmp
pop
clc
call
sbb
sbb
inc
jp
mov
daa
pop
jne
lods
pop
ficompl
mov
sbb
pop
pop
movl
ror
stc
mov
imul
fs
sub
lock
jns
inc
push
mov
fnstsw
js
leave
cwtl
mov
jb
xchg
es
loope
dec
mov
fbld
popf
loopne
adc
pop
jbe
push
or
sub
xchg
ss
mov
cmp
in
cs
pop
xor
in
ret
outsl
xlat
repz
push
das
jno
shlb
jno
jns
les
cmp
repnz
std
xchg
jecxz
inc
and
ja
inc
sub
in
cmc
push
adc
sbb
mov
jo
mov
cwtl
iret
inc
xor
jnp
sub
adc
sub
sti
xchg
adc
in
imul
ja
and
icebp
jg
in
aam
in
push
cld
inc
pushf
out
scas
mov
mov
imul
lea
mov
movsb
mov
mov
ss
cmpl
push
movsb
outsb
mov
jno
jl
test
inc
ljmp
notl
jns
lds
pop
cs
cli
xchg
xchg
inc
mov
testb
bnd
clc
push
jg
xor
ss
int
popf
adc
js
call
insb
mul
out
outsl
mov
pop
push
icebp
je
push
filds
rcll
aam
pop
hlt
lret
scas
dec
jae
jl
test
adcb
aad
sbb
or
push
negb
insl
or
jmp
dec
sbb
cli
jle
push
lods
pop
inc
adc
jne
shll
mov
in
add
mov
or
push
inc
xchg
pop
and
je
lcall
inc
xlat
lsl
cmp
ja
es
pop
inc
repz
imul
xor
inc
data16
in
dec
call
loop
adc
iret
push
les
in
xchg
mov
fbld
mov
push
popa
sbb
mov
lcall
leave
mov
xor
std
loopne
sbb
jns
xor
inc
js
lods
pop
jns
mov
leave
shll
pushf
in
xor
mov
and
in
mov
repnz
arpl
or
test
push
mov
pop
jmp
dec
cmc
stos
bound
loopne
push
cwtl
outsb
mov
roll
mov
imul
fbstp
adc
jge
jmp
xchg
pop
add
dec
fldenv
lea
dec
xchg
mov
xor
or
ror
dec
cmp
xlat
or
mov
jg
dec
pop
sub
xor
lcall
sbb
push
gs
and
aam
jbe
pop
mov
inc
out
push
dec
stos
cmpsb
lods
callw
cmp
pop
test
mov
push
lods
sbb
push
movsb
std
sbb
jecxz
pcmpeqb
push
hlt
pushf
and
pop
mov
jnp
and
ficoms
sub
mov
sub
out
test
inc
mov
ret
jbe
cmp
mov
leave
das
pop
out
int
and
or
fs
cmp
pop
in
hlt
rolb
sub
mov
rcl
ljmp
sbb
scas
daa
scas
and
rcrb
imul
insl
loope
dec
outsl
inc
sbb
aam
cmpsl
dec
sub
and
in
test
or
xor
fisubrs
or
add
xor
addr16
or
imul
sbb
xorb
aas
sub
cmp
xlat
pop
xchg
cmp
ljmp
mov
aaa
sbbb
fcoms
push
aaa
sbb
adc
dec
fldl
sub
and
push
fsubr
mov
ja
rcll
pop
mov
and
fisubrl
pop
sub
xor
jecxz
out
fdivl
dec
xchg
pop
sub
pop
lahf
inc
inc
jns
mov
sbb
pop
aaa
or
xchg
and
adc
shufps
push
xchg
in
push
xchg
testb
and
decb
push
mov
and
xor
subl
cmp
push
xor
mov
movsb
cmp
or
stos
shl
xor
ficoms
inc
push
add
je
or
xchg
dec
in
cmp
or
mov
mov
or
sbb
jecxz
mov
les
pop
or
lea
dec
jne
loop
cmp
sub
xchg
call
scas
sbb
insb
shll
daa
pop
mov
sbb
push
jnp
mov
fwait
dec
fucom
imull
movsl
pop
ficoml
in
xchg
add
add
pop
mov
shl
inc
cmp
in
jno
adcl
ret
push
das
jle
xchg
popf
dec
mov
cs
aas
cmc
dec
sbb
aaa
je
jns
cmp
xchg
in
push
xlat
scas
incl
aam
shll
pop
mov
pop
mov
inc
fwait
mov
imull
lcall
fsub
mov
push
inc
ja
clc
ljmp
lret
push
cmp
cld
sbb
or
and
fimuls
pushf
mov
scas
push
xchg
mov
and
fwait
mov
xor
loop
pop
scas
aad
out
push
dec
sbb
mov
jns
bound
push
push
in
lcall
ret
adc
push
xor
cmp
movsb
pop
cmc
fmul
leave
popf
mov
movb
cmp
inc
jg
xlat
jmp
xor
dec
mov
and
xchg
xchg
jp
pop
insl
lcall
test
stc
dec
scas
inc
add
cmp
add
sbbl
jb
or
push
sbb
jg
push
imul
and
imul
inc
rcrb
add
sbb
or
icebp
xchg
or
popa
mov
dec
pop
ds
test
dec
sarb
sub
inc
or
adc
adc
xor
jae
add
dec
push
aam
leave
fisubrl
pop
repnz
bound
std
pop
rolb
es
mov
jl,pn
cmpsl
add
add
xchg
mov
dec
add
mov
push
sarl
int
arpl
fcmovnbe
lds
lahf
sbb
insb
enter
ret
aas
cmc
inc
mov
jle
and
das
pop
jno
popf
mov
fcomps
lods
insb
sub
sbb
fidivs
mov
in
lret
mulb
ret
jecxz
lods
mov
xchg
scas
adc
cmp
and
mov
xchg
and
jl
and
push
enter
fildll
pop
cmc
jl
sbb
add
pop
movsb
fsubs
xchg
js
add
sub
xchg
pop
je
add
adc
pop
cltd
mov
jbe
ja
in
xchg
and
and
data16
push
jae
pop
test
sub
inc
lods
sub
fsub
pop
repz
push
jb
push
mov
mov
adc
mov
xchg
add
outsb
out
and
dec
fs
out
enter
or
mov
dec
loope
test
sub
push
cmpsb
les
pop
xor
int
add
aaa
push
imul
jnp
add
fistl
mov
sbb
ja
jecxz
push
mov
inc
cltd
test
add
stos
imul
xchg
jle
mov
repz
pop
jae
mov
push
mov
push
mov
cli
xor
scas
mov
movl
mov
insb
cmpsb
cmpsl
addb
dec
xchg
lods
xchg
pushf
add
jbe
adc
mov
mov
in
icebp
cwtl
add
pop
icebp
test
mov
cmp
add
pop
mov
subb
or
lcall
mov
movsb
lock
mov
rolb
clc
orb
xchg
mov
clc
inc
lods
pop
je
jl
sbb
das
xchg
lret
inc
das
subb
jg
cmp
aas
or
test
mov
xchg
xchg
mov
inc
mov
jge
mov
leave
dec
push
pop
cltd
imul
jb
jns
xlat
mov
pop
clc
sbb
dec
sub
jg
xchg
imul
xchg
sub
xor
push
adc
or
stos
adc
imul
jb
mov
enter
and
out
cli
nop
insl
shll
inc
imul
mov
xchg
inc
xor
dec
loopne
xor
jle
pusha
jl
or
adc
jecxz
jnp
pusha
xor
sbb
add
xchg
movsb
subb
xchg
fcomp
sti
shrl
push
cmc
loopne
call
enter
inc
jnp
push
negl
adc
out
jmp
jns
push
mov
lcall
addr16
cwtl
dec
xchg
jo
daa
scas
cmp
sbb
mov
into
sbb
sub
jge
xchg
push
scas
or
xchg
sbb
fsubrs
xchg
xlat
xor
test
dec
test
xchg
pop
jbe
lcall
xor
ljmp
mov
out
ja
mov
sub
adc
fld
xor
shrb
pusha
xchg
das
jae
ss
rorl
sbb
repz
sub
mov
loopne
add
nop
cmp
jb
or
adc
mov
mov
fimuls
in
mov
addr16
addr16
xchg
jo
push
pusha
cmp
xor
ret
shrb
mov
jp
push
aad
pop
fstps
sahf
push
cmp
test
lods
adc
mov
adc
and
adc
out
rolb
mov
push
jo
dec
imul
mov
mov
push
or
jg
push
inc
mov
cmc
push
les
and
mov
inc
jp
fisttpll
out
cvtps2pd
aad
xlat
jb
movsb
mov
les
pop
sbb
jmp
xchg
sbb
aam
insl
les
xor
mov
cmp
add
outsb
mov
mov
and
pop
and
shrl
xchg
and
loope
int
dec
shrb
or
push
sub
xor
pop
cmp
les
mov
les
xor
dec
push
or
cmp
cltd
xchg
outsl
das
out
lret
push
pop
xchg
outsl
addl
lret
loopne
xchg
mov
inc
adc
pop
mov
insl
push
sub
hlt
push
sbb
sahf
adc
pop
mov
sarb
or
stos
inc
and
pusha
push
lcall
cmp
add
adc
push
jns
lea
insl
sbb
dec
mov
rcrb
ljmp
inc
xor
shlb
negl
adc
xor
ret
in
jns
push
and
cmp
push
sti
mov
call
adc
les
mov
jo
out
imul
xchg
xchg
insl
or
mov
das
sub
pop
lcall
jne
inc
or
sbb
xor
adc
lcall
mov
lock
jg
and
add
dec
sub
mov
mov
add
jle
and
or
xor
dec
fxch
sub
push
jge
daa
jmp
faddp
dec
ret
jno
cmpsl
jns
testb
loope
addr16
ficoml
andl
mov
adc
cmpsl
int3
cs
out
iret
dec
push
jne
inc
mov
dec
xor
leave
cmp
outsl
mov
pushf
jo
inc
gs
pusha
xor
or
leave
adc
pushl
icebp
imul
mov
std
sbb
idivl
imul
ss
jecxz
cmp
xchg
sbb
jl
insl
add
stc
addb
jne
and
and
jmp
out
push
movsb
inc
les
push
sbb
lret
push
xchg
shll
mov
mov
dec
dec
push
jb
dec
cmc
insb
xor
mov
in
cwtl
or
sahf
mov
pop
pop
cmp
cmp
mov
inc
inc
out
sub
jl
test
das
sub
dec
shr
and
dec
dec
cli
sti
mov
mov
xchg
ljmp
mov
mov
out
stos
pushw
lock
mov
hlt
jg
or
lock
js
mov
pop
in
imul
dec
pop
mov
adc
push
shrl
jmp
addb
outsl
sbb
das
sbb
or
out
xorl
xor
lods
lock
mov
es
mov
test
rcr
data16
lds
or
push
test
push
lods
repnz
cld
or
les
andl
lods
repnz
call
mov
inc
mov
int
sub
fdivr
inc
mov
mov
imul
loopne
ja
sbb
sbb
test
push
scas
test
out
imul
push
jo
jg
xor
mov
loope
xchg
fidivs
cmpsb
xor
pop
lea
pop
mov
xchg
cmp
mov
sbb
test
xor
pop
lods
out
xchg
dec
test
popf
insb
cli
xlat
xchg
movsb
push
mov
addl
testl
push
sti
lock
in
sbb
jne
push
jae
push
add
push
mov
dec
roll
out
cmp
xchg
mov
push
shr
lret
adc
testl
pop
sahf
adc
adc
pop
jae
lret
stos
cld
xchg
scas
xchg
and
pop
js
push
sub
xchg
mov
ds
repnz
xorb
cmc
sub
pop
int
mov
aas
sub
xchg
bound
pop
je
shr
xchg
jbe
stos
cli
sti
mov
leave
inc
lret
pop
pushf
push
shll
stc
ret
sbb
or
cwtl
sbb
lret
cmp
imul
jnp
jecxz
push
in
xor
cmp
lods
in
jae
mov
xor
rolb
dec
jns
xchg
cmp
scas
add
andb
idivb
xchg
dec
xor
dec
icebp
push
or
rclb
push
mov
sti
sbbl
filds
testb
shrb
adc
cwtl
xchg
xor
scas
mov
loop
popa
insb
sbbl
inc
aad
mov
dec
shll
push
jecxz
cli
leave
add
test
dec
test
cltd
adc
pusha
cmp
mov
adc
loope
adc
lock
sarl
mov
ret
cmp
dec
xorb
pop
push
dec
hlt
inc
mov
outsl
imul
out
xor
ds
sbb
lret
jbe
int
push
xchg
enter
pop
ss
cmpb
es
lods
ret
cmc
add
aas
jb
xor
push
jns
scas
adc
roll
mov
push
mov
adc
mov
pop
dec
push
jae
add
aaa
add
mov
fidivrs
jg
adcl
jnp
jbe
mov
adc
arpl
xchg
xor
and
mov
cmpsb
pop
fnstcw
dec
enter
xor
push
je
jo
jle
lcall
shr
ja
dec
or
and
adc
dec
dec
ficompl
es
mov
pop
or
fsubr
and
inc
idivl
stos
dec
adc
jle
jg
mov
xlat
pop
test
sub
pop
add
sbb
adc
scas
pop
lock
mov
push
xchg
into
add
mov
xchg
jp
jle
iret
cmp
or
out
fwait
adc
int3
mov
cmp
cld
aaa
out
mov
test
cmc
dec
cmc
mov
mov
adc
mov
sbb
outsb
popf
mov
jl
cli
aas
ret
xor
sti
xor
test
movzbl
mov
cmpsl
jno
js
mov
addr16
insb
nop
sbb
mov
ljmp
lret
push
add
push
sbb
add
jnp
movsb
fcompl
xchg
jmp
xchg
jae
jge
mov
jle
sbb
stc
mov
sbb
decl
add
dec
gs
andb
push
pop
popa
cmc
sbb
in
or
loope
fidivs
outsb
cmpsl
pop
pop
cmp
fdivr
pop
cmc
stc
cs
inc
mov
stos
push
popa
aaa
or
inc
pop
fstl
cmpsb
cmpsb
jbe
sahf
je
mov
cmp
inc
sub
mov
mov
cmp
jae
out
daa
inc
ja
add
push
dec
out
mov
imul
ss
fnstcw
xchg
andl
jmp
adc
push
out
out
add
into
xchg
scas
xor
or
sti
loope
test
push
mov
mov
push
mov
mov
in
insl
sub
mov
test
es
arpl
out
jle
xlat
and
mov
jmp
push
mov
ss
sbb
imul
data16
gs
jno
inc
xor
inc
and
ret
mov
mov
jge
lds
xor
jg
jg
dec
jno
add
clc
sub
adc
adc
push
call
fidivs
shl
cmp
pop
adc
jne
aad
icebp
cmpsl
sbb
lret
nop
jecxz
fdivrl
dec
or
jecxz
sbb
cltd
sub
into
sti
pushf
js
pop
adc
jecxz
dec
jnp
andb
or
outsl
je
jp
cmp
jecxz
push
and
adc
icebp
cwtl
fists
or
fdiv
mov
add
sub
xor
push
incl
cmp
fidivrl
es
sub
or
es
xor
ljmp
mov
stos
sub
je
data16
call
out
jmp
in
lret
jp
fnstsw
mov
push
inc
jmp
mov
sbbl
cld
lcall
push
or
push
or
or
adc
leave
add
lock
push
mov
and
aaa
fisttps
add
mov
add
sbb
cmpsl
push
inc
push
je
sub
mov
jne
es
pop
cmp
test
mov
inc
add
add
sbb
dec
xchg
adc
push
repz
icebp
push
fdivr
and
fisttps
adc
push
pusha
pop
cmpsl
mov
loope
jne
pop
cs
fisttpl
adc
xor
inc
pop
pop
ret
and
pusha
and
adc
jl
clc
dec
xchg
push
add
mov
sti
pusha
rorl
sub
pushl
mov
cs
cmp
sahf
lret
rep
jp
imul
adc
inc
cmp
enter
in
test
xor
lret
js
adc
jge
xchg
nop
pop
mov
xor
mov
push
mov
in
adc
stc
sti
pop
lods
pop
notl
mov
insb
sub
jmp
xlat
movsb
jnp
cmp
rclb
sbb
pop
enter
outsb
outsb
push
sbb
add
fmuls
pusha
jne
xor
pop
xchg
ljmp
cmpsb
lods
and
xchg
aaa
iret
jne
xchg
sub
jb
daa
xor
xchg
mov
in
xor
pop
neg
add
insb
dec
stos
adc
mov
jmp
pop
xchg
mov
fwait
les
inc
adc
out
xor
pop
dec
mov
or
cs
in
inc
orb
dec
jl
cld
push
sub
cli
inc
sub
or
xchg
cs
mov
sti
in
loopne
xchg
adc
es
jge
or
cmpsl
ss
mov
mov
jmp
push
jmp
jb
pop
leave
fucom
fldl
cmp
cmp
mov
pop
test
push
mov
xchg
outsl
jb
add
jnp
in
jno
call
dec
dec
addb
shr
jnp
idivb
pop
lret
mov
inc
inc
and
iret
subb
mov
sbb
loopne
jl
inc
cli
mov
lcall
into
add
push
and
cmp
xlat
xor
and
mov
movsb
lods
int3
cmpsl
imul
stos
scas
data16
mov
leave
aam
sub
lret
pop
mov
lods
dec
fsts
push
jecxz
sbb
pop
dec
lcall
out
xchg
stc
mov
xor
fnstenv
es
xchg
adc
cmp
inc
inc
xchg
subl
mov
cwtl
or
dec
pop
in
mov
push
jl
or
fwait
pusha
jno
sar
popa
call
repz
mov
inc
into
aam
sbb
pextrw
insw
flds
adc
sbb
fnstsw
or
loop
popf
out
stos
cmp
mov
movsl
das
sarl
jne
ds
or
pop
cmp
jne
push
jp
negl
ja
dec
into
push
sbb
mov
into
pusha
xchg
adc
and
and
sub
fisttpl
dec
fabs
inc
cmp
xchg
mov
popf
adc
hlt
cmpsb
loopne
std
loope
hlt
mov
jmp
inc
jl
mov
sub
pop
ljmp
loopne
and
sbb
lods
jno
dec
xchg
stos
ds
mov
and
in
push
push
in
pop
mov
sbb
addr16
mov
cmp
rcrl
mov
inc
daa
dec
mov
repz
adc
movsb
repz
imul
mov
and
das
jge
scas
pop
pop
mov
xor
pop
fwait
jle
mov
push
or
std
cmc
mov
push
es
shl
enter
cs
pop
mov
aaa
and
sbb
cmp
ja
ss
cld
mov
ljmp
jbe
adc
jne
pop
push
dec
daa
or
cmc
pop
pop
std
loop
adcb
sub
mov
sahf
inc
xchg
push
daa
shl
lds
into
dec
lcall
cmp
repz
mov
push
or
into
cmp
inc
call
cmp
jae
roll
addr16
cmp
dec
stc
decb
fidivs
push
sahf
cmpsb
push
xchg
inc
decl
repz
xchg
shll
popa
fsts
rol
lock
sbb
shl
popf
int
cmpb
xchg
clc
mov
jecxz
mov
cmp
add
adc
les
mov
addr16
sub
mov
pushf
popa
mov
jge
lret
pusha
dec
jl
or
lcall
mov
ret
int3
mov
mov
xor
pushf
addr16
cld
outsb
cmp
adc
cld
cltd
iret
jge
or
jns
push
mov
cmc
dec
or
into
push
stos
andb
das
stos
or
mov
sbb
imul
jecxz
and
cmpsb
dec
movsl
sbb
sub
mov
subb
sti
mov
mov
lret
inc
je
repz
fimull
cmp
cs
data16
dec
jmp
jge
pop
mov
sub
pop
mov
int
jno
insb
into
push
push
sbb
aas
jge
inc
inc
xor
push
add
mov
xlat
jns
stos
sub
and
pop
mov
jecxz
mov
or
addr16
int3
and
pop
mov
xchg
push
iret
ljmp
mov
nop
imul
inc
mov
test
xchg
and
roll
push
jns
pop
out
in
popa
adc
push
jo
mov
adc
aam
jge
aas
xchg
add
pop
cmp
stc
lcall
rcr
and
sti
aas
pop
jo
pop
lods
nop
imul
ret
icebp
orl
int
aam
xchg
mov
add
sti
mov
cltd
add
or
pop
fdivl
sysret
xchg
sub
shrb
dec
in
mov
mov
movsl
xor
aad
inc
loop
sahf
xchg
les
stos
es
data16
mov
push
cltd
sahf
pop
ret
rcrb
inc
mov
mov
push
cmpsl
xor
sbb
push
mov
adc
addr16
cltd
jnp
cmpsb
jo
cmp
xchg
jne
scas
js
jge
aam
push
ret
out
mov
test
stos
loop
out
mov
test
inc
jne
hlt
cmp
out
jne
mov
push
pop
or
call
xchg
sub
pop
outsb
les
jmp
loopne
push
mov
jp
jae
popf
jb
sbb
mov
jmp
hlt
scas
jo
rorb
push
adc
lea
pop
data16
xlat
pop
xor
and
mov
test
sbb
es
xchg
loope
xor
cmp
lea
push
inc
into
xchg
out
fnstsw
adc
fcomi
push
lods
sbb
movsl
fidivrs
lock
xchg
cltd
fsubs
icebp
aaa
mulb
lods
mov
and
pop
jae
loopne
inc
or
int3
sbb
xchg
sub
jno
mov
fidivs
fildll
out
sub
cmp
push
push
sub
sbb
mov
popf
sbb
repz
in
int
rcrl
out
xchg
mov
add
dec
mov
jle
nop
xorl
push
dec
lods
shrl
mov
std
shl
lds
jecxz
popa
xor
push
jp
test
mov
out
adcl
jns
pop
sbbl
movsb
fstl
cs
in
addr16
fiadds
hlt
mov
iret
inc
xor
mov
and
inc
dec
stos
and
dec
repz
roll
jne
or
scas
xchg
pop
out
mov
insl
out
and
push
repnz
scas
or
je
stos
mov
inc
mov
mov
adc
jo
or
add
ja
mov
sbb
iret
aam
loope
mov
gs
ret
or
xor
dec
pop
js
jbe
add
mov
inc
push
orb
fld
in
jp
ret
push
jo
scas
mov
or
das
sub
xorb
test
loop
xchg
dec
dec
mov
mov
mov
test
pop
shr
rorl
stos
loop
cmpsb
mov
fstpt
aas
and
enter
shlb
mov
inc
push
imul
mov
push
push
dec
jae
stc
dec
mov
ret
mov
add
fimuls
mov
mov
aaa
test
pusha
imul
xchg
stos
ds
pop
pop
and
lock
in
mov
jae
outsl
and
mov
ljmp
outsl
and
inc
jmp
movb
mov
fdivl
cmp
jle
loopne
lods
mov
xor
add
sahf
sub
inc
mov
out
shl
fcoml
jae
notb
xchg
in
pop
push
mov
adc
xchg
dec
inc
push
fwait
jb
sub
xchg
iret
fimuls
outsl
and
outsl
mov
xchg
enter
pop
pop
popf
ljmp
clc
sub
mov
jp
shrl
popf
xchg
dec
add
mov
iret
ljmp
sbb
mov
sub
fisttpll
loopne
rcrl
inc
je
push
pop
cs
mov
cli
mov
mov
push
lods
mov
xchg
jno
je
lret
cmp
xchg
dec
sbb
movsb
pop
dec
push
sub
or
out
cmpsl
push
pop
aaa
and
mov
ja
mov
in
jne
sahf
and
icebp
dec
mov
lock
fadds
ja
ja
test
cltd
in
lahf
sarl
les
push
add
cltd
mov
jg
out
sbb
sbb
jae
cmp
call
enter
mov
push
jmp
push
repz
mov
ficoml
dec
call
rdpmc
int
pusha
in
daa
push
adc
mov
adc
lret
testb
scas
or
or
pop
lods
xchg
pushf
push
call
add
imul
decb
xchg
inc
or
out
aaa
imulb
hlt
and
xchg
cmp
mov
hlt
pop
add
dec
pop
jmp
mov
negl
das
lock
pushf
inc
xor
mov
pushf
cmp
out
dec
jle
fstpt
mov
fcoms
xlat
inc
mov
or
in
sub
adc
mov
jle
call
lea
fwait
inc
dec
pop
cld
sbb
lds
dec
jp
out
push
xchg
pop
inc
fdivs
mov
jge
xchg
ret
cli
and
fwait
dec
lea
or
das
lahf
test
shll
jmp
and
jle
call
repz
xchg
pusha
enter
movsl
mov
sbb
out
aas
sbbb
adc
out
sbb
wbinvd
fnsave
fmulp
mov
mov
test
inc
inc
flds
inc
scas
or
lds
repnz
add
cwtl
orb
add
jecxz
lock
xchg
faddp
das
frstor
xor
fmull
in
movsb
push
sub
jbe
dec
push
and
outsb
inc
sub
adc
pop
testb
add
insl
addr16
outsb
mov
ja
pop
xchg
jg
aam
movsb
test
lods
out
cmc
push
inc
cmc
in
filds
xchg
xor
mov
ror
push
aas
mov
pop
xor
hlt
test
mov
mov
arpl
or
lock
mov
adc
subl
push
cmpb
imul
sahf
push
mov
add
notb
pop
fisttpll
sub
rcll
add
call
in
mov
inc
push
cmpsl
inc
push
mov
ja
adc
cmp
dec
adc
sub
jg
jg
jg
or
cmp
pop
sbbb
or
rorb
jne
int
movb
or
loope
xchg
loope
inc
rclb
movsb
xor
add
enter
dec
inc
je
dec
or
fwait
out
sahf
mov
xchg
dec
mov
mov
push
xchg
sub
mov
add
mov
pop
inc
add
ret
addb
test
shlb
jge
inc
rcrb
lcall
or
or
dec
lods
in
cmp
push
sbb
jb
mov
push
lock
push
sub
jmp
jb
jae
mov
dec
pushf
rcrb
ret
xlat
jecxz
gs
jo
aam
sub
cs
push
fnstcw
iret
gs
sbb
js
fsubr
dec
cmpsb
out
sbb
in
imul
push
mov
ds
adc
mov
mov
movb
and
xor
push
subl
adc
cmc
or
imul
or
cmpb
jmp
fisubrl
pop
imul
stc
inc
adc
movsl
aam
xlat
mov
xor
push
jae
test
add
sbb
cmpsb
xor
iret
stos
fwait
xchg
mov
mov
push
ja
in
and
adc
call
sbb
leave
sub
mov
and
pop
fwait
pop
push
out
outsb
jno
shll
cmp
lds
int3
dec
xlat
pop
mov
dec
or
ljmp
xchg
out
dec
cmp
xchg
aas
loop
test
popa
cmpsl
adc
push
push
rorb
mov
or
shll
xchg
scas
push
cmp
loop
cmpsl
and
inc
push
in
mov
sbb
xor
and
inc
mov
add
mov
imul
mov
adc
xor
sub
setp
loopne
add
push
xor
daa
sbb
inc
xchg
popa
push
pop
enter
mov
sbb
dec
xchg
or
add
lcall
fwait
jge
ss
iret
xchg
mov
hlt
data16
cmpsl
iret
out
sbb
insb
gs
push
shl
push
dec
pop
clc
xchg
or
xor
fmuls
jg
push
push
pop
or
cwtl
jo
and
add
stc
pusha
lock
jl
insb
imul
jbe
and
add
scas
lahf
shrl
ret
add
fiadds
imul
mov
mov
xchg
mov
sbb
adc
dec
xchg
inc
aad
adc
js
jbe
out
or
pop
mov
rorb
into
mov
fnstenv
std
or
aas
or
int
add
fwait
repz
adc
stos
das
rolb
xchg
cmp
mov
cmpsl
lea
xchg
xlat
mov
inc
int3
xchg
nop
leave
add
adc
dec
sub
lahf
mov
xchg
and
mov
mov
je
aaa
out
push
adc
ds
mov
dec
mov
inc
hlt
mov
push
inc
mov
scas
cli
movsl
orl
pop
ss
pop
in
lcall
sbb
jmp
dec
mov
xchg
hlt
xchg
test
dec
aaa
pop
sbbl
imul
in
lahf
cmpsl
mov
inc
mov
mov
adc
test
pop
jbe
inc
mov
cmp
xchg
ret
xor
movsb
or
test
cwtl
shrl
aaa
enter
add
out
or
xchg
cmp
sbb
jne
not
test
fisubrs
cmpsl
push
aaa
data16
jbe
andb
inc
xchg
jo
sub
ret
pop
ret
mov
orps
lea
in
inc
incl
arpl
xchg
or
imul
push
jb
push
pop
stos
ret
pop
in
cltd
rcl
mov
adc
test
dec
lahf
jl
push
or
insb
int
call
data16
out
and
inc
cld
fcoml
adc
subl
subb
gs
jg
mov
jo
mov
jmp
orl
push
pop
repnz
data16
dec
sub
jae
mov
sbb
sbb
adc
mov
in
sbb
xchg
fisttps
adc
repz
push
adc
push
lret
test
or
sbb
ds
call
or
cmp
movsb
test
mov
outsb
pop
fidivl
dec
std
push
ror
stc
jo
pop
xchg
sbbb
insl
ss
xchg
mov
testl
int
test
shlb
popf
repnz
mov
cld
inc
sahf
sub
inc
out
adc
fcmovnb
test
ret
cmp
fnstsw
add
mov
cli
add
jnp
push
push
sti
lods
in
outsb
arpl
iret
fdivs
cwtl
inc
push
mov
clc
lret
into
and
xchg
in
movsb
rcl
icebp
sbb
mov
dec
jmp
cs
daa
aad
mov
mov
test
jne
lock
in
cmpb
mov
loope
clc
daa
lret
add
pop
cmpsl
xlat
mov
mov
and
lret
pop
rolb
cmp
inc
jmp
daa
fsubrs
loop
je
sbb
pushf
mov
lds
loope
outsl
je
cmp
mov
fnstsw
es
dec
call
xor
sub
into
andb
xor
xchg
mov
pcmpgtb
daa
xchg
mov
repz
into
mov
push
insl
xchg
mov
add
int
rcll
mov
les
not
mov
ror
inc
rclb
ljmp
mov
bound
aaa
jnp
xchg
js
jno
push
push
fwait
mov
mov
lcall
push
xchg
xchg
dec
iret
sahf
adc
add
aam
mov
setbe
insl
out
mov
pop
outsb
push
jmp
mov
orb
imul
movl
xor
mov
stc
or
pop
mov
pshufw
mov
insl
sbb
aad
scas
xchg
xchg
ljmp
in
ja
pushf
jl
inc
popf
sti
cli
xorl
imul
mov
outsl
dec
mov
push
roll
daa
into
mov
push
xor
fsubp
xchg
xchg
mov
lret
xchg
cmp
outsb
orb
in
push
jle
cmovo
scas
cmc
std
push
arpl
jb
scas
scas
cwtl
lods
inc
mull
jp
call
mov
adc
shlb
inc
out
add
lret
fwait
jp
push
add
fadd
les
adc
xchg
cmovne
sbb
lods
jecxz
sarb
call
inc
aad
nop
sbb
add
pop
push
inc
or
mov
adc
cmp
shlb
aas
xchg
adc
xchg
aaa
clc
adc
mov
push
stos
sbb
add
fisubs
out
sub
insl
shll
mov
jle
sbb
test
pop
data16
jns
pop
ret
daa
loope
xchg
fs
jbe
enter
imul
xchg
and
mov
scas
cmp
inc
arpl
imul
sarb
dec
add
aas
jae
inc
shlb
bound
mov
pusha
rol
imul
ret
mov
bnd
adc
dec
ja
sbb
xlat
xchg
push
mov
movsb
jmp
into
iret
adc
mov
fistpl
int
ret
sub
cmpsl
push
enter
push
icebp
loope
push
dec
adc
push
cmp
insb
les
lret
es
adc
cmpb
ss
xchg
add
ret
pop
mov
out
or
jle
cli
and
mov
jg
fisttps
jae
mov
adcb
test
xchg
int
mov
inc
cmpsl
cmpl
icebp
mov
iret
es
xlat
pop
testb
push
test
fistpl
lods
mov
fwait
sbb
fs
xchg
inc
jge
jl
adc
push
jb
loopne
cmp
adc
and
fadd
pop
out
imul
test
and
xor
arpl
mov
outsl
in
test
fcomps
out
xchg
cmpsl
and
lahf
jecxz
mov
sbb
add
mov
mov
adc
inc
stos
cmp
and
mov
xchg
or
jnp
jo
adc
adc
orb
mov
fisubrs
add
push
pop
add
jae
clc
rol
clc
xor
jge
dec
movntps
orl
dec
mov
sbb
adc
mov
push
lret
es
fstpl
or
dec
mov
fdivl
aam
add
xchg
inc
mov
sarb
mov
dec
sbb
cmpl
popa
or
dec
sub
or
sub
lahf
std
test
add
out
insb
xchg
mov
inc
icebp
out
mov
pop
pop
dec
fcompl
xor
xchg
out
mov
sbb
jb
cmpsl
or
out
lret
xlat
pop
mov
cld
daa
int3
xor
cld
push
fcoms
pop
pop
enter
fildl
std
mov
into
jb
xchg
je
icebp
in
cli
lret
in
adc
xchg
pop
xchg
sub
loope
rcrb
mov
aam
fnstcw
aaa
jne
cmp
lds
jecxz
aam
jp
cmp
dec
xor
jb
push
iret
or
xor
inc
dec
add
aam
leave
mul
push
mov
mov
int3
addr16
jae
out
insb
adc
in
ljmp
mov
jnp
sbb
sub
xchg
fsts
aaa
ret
es
icebp
inc
mov
inc
push
sub
in
cltd
dec
imul
sub
pop
sbb
cmpsb
cmc
xchg
outsl
adc
inc
pop
or
test
mov
sbb
add
out
pop
mov
xchg
mov
insb
lahf
aad
sub
stc
insb
push
cmp
lret
xchg
adc
fneni(8087
inc
or
cmp
test
pop
dec
add
jp
add
pop
add
mov
inc
or
lret
mov
fldcw
mov
hlt
mov
adc
call
cwtl
push
push
movsl
jno
popa
mov
inc
xchg
incl
sub
xchg
incl
lea
jecxz
add
lods
stc
popa
jnp
cmp
mov
dec
test
into
mov
jno
push
imul
aad
insb
lds
lret
cmp
cmp
or
xchg
sub
jne
sahf
and
cwtl
je
adc
mov
lods
sbb
cmp
cmp
sti
mov
and
repz
add
cmp
icebp
push
mov
sbb
iret
data16
and
pop
aad
in
repz
mov
pop
rcr
sbb
shufps
divl
mov
repz
pop
pusha
rorl
mov
fs
mov
mov
ja
aam
and
mov
mov
into
push
ret
and
cmp
push
push
in
das
mov
push
pop
add
in
push
movsl
std
divl
rclb
xor
add
mov
cmc
jo
dec
test
sub
outsb
daa
int
adc
pop
subb
fiadds
jb
xor
test
add
ja
sub
shll
mov
sbb
inc
aam
or
outsl
cli
mov
outsl
sahf
sbb
aas
sahf
fcompl
or
adc
push
or
fmull
test
sub
fisubrl
jecxz
das
ljmp
daa
js
cmp
cmpsb
pop
in
stc
in
ficomps
pop
es
pop
mov
mov
ja
int3
jecxz
mov
rep
pop
push
iret
push
sub
cmp
cmp
mov
cmpb
addr16
jmp
sbb
sub
insb
or
xor
pop
leave
in
mov
and
fs
xchg
mov
rorb
mov
gs
ljmp
jne
in
push
aam
pop
sub
mov
scas
pop
out
adc
inc
pop
mov
int3
or
push
in
pop
inc
push
lahf
push
std
sbb
xor
sbb
pop
mov
mov
pop
sarl
testl
ds
lret
int3
jmp
lods
mov
jae
sub
mov
or
shl
mov
js
cmc
xor
dec
imul
aaa
cmpsl
imul
nop
cltd
dec
push
movsl
and
or
arpl
push
loop
jo
inc
movsb
sbb
jl
jns
lds
das
sbb
fcmovu
ja
add
das
in
push
cmp
cmp
stc
jae
sub
adc
and
aam
pop
cmc
mov
mov
in
je
cltd
and
add
xor
pop
add
popaw
and
mov
mov
xchg
sbb
cmp
pop
push
adc
cmpsb
std
mov
addb
fldcw
mov
in
stos
icebp
dec
std
mov
and
sub
sub
mov
and
push
adc
dec
inc
cli
std
adc
aas
inc
imul
imulb
in
sub
jb
push
insl
jo
push
loop
mov
ficoml
in
pop
xor
jmp
cmpsl
test
xchg
sbb
xor
out
cmp
add
add
cmp
cli
mov
negl
sbb
rdmsr
das
add
lea
sbb
jmp
ss
mov
or
ja
aaa
dec
inc
leave
jno
cltd
mov
xor
sti
mov
cmp
xor
dec
xor
sub
out
mov
jp
leave
leave
sbb
daa
xchg
or
pop
dec
add
stos
mov
mov
jg
je
nop
push
loop
sub
aam
mov
dec
hlt
repz
dec
outsb
mov
pop
es
add
ret
mov
hlt
mov
fcoml
or
mov
xchg
leave
push
push
sarb
lahf
add
movsl
pop
hlt
mov
or
xchg
movsb
out
mov
mov
pop
sub
dec
push
orl
iret
mov
lds
dec
daa
cmc
pop
pop
fbstp
jo
movsb
push
out
cmp
inc
comiss
ret
loopne
mov
xchg
or
and
cmp
and
gs
test
repnz
cmp
jle
les
jge
pop
jo
leave
popf
in
bound
pop
int
xchg
mov
fistps
leave
jo
mov
in
push
lods
jge
aas
xchg
gs
scas
cld
jle
imulb
mov
jnp
mov
fadds
in
xor
lds
mov
jmp
sub
or
popf
jns
adc
sub
jmp
sahf
cli
rol
cltd
mov
inc
sbb
jge
cmc
pop
xchg
pop
pushf
fisubl
in
pop
sbb
jmp
xor
xchg
fsubl
cld
sbb
xchg
pop
lahf
out
push
mov
daa
adc
insl
mov
notl
xor
cmc
dec
sub
or
cs
xor
cld
scas
pop
popa
movsl
jecxz
dec
lods
sub
push
dec
rclb
or
xchg
clc
push
or
or
ljmp
sahf
jp
sub
add
ret
mov
fnstenv
outsb
or
sbb
add
lret
add
lret
xchg
insb
mov
sbb
and
arpl
jp
adc
loopne
gs
inc
mov
xor
scas
xor
lcall
rclb
mov
int3
push
push
dec
adc
xchg
ds
enter
mov
clc
inc
mov
cwtl
popf
sbb
in
push
stc
ja
mov
pop
lahf
and
mov
xchg
aam
mov
cli
cmp
jmp
stos
xlat
jl
pop
pop
clc
add
adc
mov
add
sbb
testl
mov
cmp
or
lds
aaa
fisubl
push
enter
sar
mov
aad
push
sbb
or
sahf
mov
push
cltd
xchg
pop
fnsave
xor
jnp
jno
mov
jno
or
pop
js
aas
mov
rorb
push
lret
jmp
jns
mov
inc
in
loope
ffreep
cmp
loop
pop
mov
into
dec
lds
xchg
lret
and
cmp
xchg
mov
sbb
mov
mov
jg
inc
es
lds
faddl
movsb
loopne
imul
jnp
xor
lea
icebp
rorl
mov
xor
push
lret
mov
ret
scas
ja
xchg
in
gs
pop
je
dec
ret
lods
test
arpl
pop
add
and
es
mov
push
nop
mov
add
imul
jge
stos
push
jecxz
test
or
push
xor
inc
inc
test
pushf
or
mov
cmp
dec
js
xor
fcoms
out
pop
push
mov
xor
adc
cmpsl
and
and
insl
fwait
push
cli
dec
cmpsl
jle
shufps
mov
ret
sub
jo
cltd
jl
into
or
xor
jo
pop
push
dec
clc
pop
clc
pop
pushf
xor
aas
or
inc
andl
or
insl
jl
pushf
adc
test
push
lea
je
in
sub
fldcw
movhps
mov
nop
cmp
push
sbbb
add
movsb
pop
adc
ret
cmp
adc
test
push
adc
add
ljmp
sbb
inc
hlt
cltd
push
fisubs
add
inc
out
fiadds
jno
sbb
dec
xchg
cmc
into
repnz
jne
jae
mov
adc
jmp
test
mov
insl
daa
xchg
mov
fisttpll
outsb
out
sahf
das
enter
int
dec
dec
cmp
add
xorl
out
and
rcrl
dec
cmpsl
push
sub
xchg
jle
mov
mov
loopne
shlb
pusha
icebp
mov
popf
cmp
mov
inc
imul
cmpb
xchg
test
rcl
rcll
movb
jecxz
pop
fdivs
mov
mov
ret
add
xor
repnz
push
mov
shr
lds
mov
mov
rorb
pop
mov
adc
leave
pop
add
out
dec
and
dec
jge
adc
mov
cmpsl
and
stos
decl
out
fidivrs
cwtl
in
xor
les
push
outsb
shll
or
cs
mov
sub
add
in
xor
dec
das
arpl
into
inc
dec
or
cmp
pusha
and
xorb
cmc
cmp
fdivr
pushf
add
fldenv
cmp
sbb
iret
mov
loopne
adc
test
adc
jge
lahf
les
loope
int
mov
mov
insb
iret
int3
sahf
jo
jmp
test
stos
dec
pop
sar
xchg
aad
sbb
lods
jecxz
dec
daa
jbe
inc
mov
cmp
cld
cltd
or
jl
insl
je
inc
cltd
sti
rcll
arpl
insb
int3
xchg
push
cmpsl
in
and
in
push
mov
jg
and
int
test
cmp
inc
sbb
adc
testb
fwait
stos
stos
jmp
ret
cli
cmp
arpl
mov
orl
out
in
lods
sbb
mov
mov
fstpt
lds
repz
fsubrl
add
adc
push
pop
mov
gs
clc
jnp
mov
test
mov
xlat
jne
cltd
lea
jg
ret
xor
xchg
mov
cmp
mov
xchg
lods
addr16
jno
out
rol
out
xchg
mov
dec
test
cmp
xchg
add
test
ret
dec
ja
inc
mov
test
popa
loop
push
xor
enter
mov
loop
out
xchg
hlt
test
cmp
and
or
shlb
lret
and
mov
rolb
ljmp
test
aam
les
mov
jbe
jp
cmpsl
dec
pop
pop
bound
jge
in
add
lahf
xchg
aas
cmp
push
inc
rcll
orl
test
test
inc
iret
push
icebp
mov
mov
xor
dec
in
mov
push
cmp
inc
sbb
fimull
fwait
lods
mov
lods
push
and
inc
lock
push
add
mov
push
movsb
sub
iret
aad
ljmp
pop
stc
mov
jae
mov
movsl
jae
push
lods
fmull
and
test
inc
xchg
clc
jg
jle
jnp
mov
lret
lea
ret
mov
jne
jmp
mov
sub
dec
shr
loope
lock
mov
sbb
out
std
pop
leave
adc
lret
fimuls
mov
ss
sub
add
pop
lret
xor
test
inc
loope
shrl
pop
cmc
ss
or
fsubp
daa
cmp
mov
mov
add
aas
ret
or
fadds
push
rcrb
xsaves
cs
lds
not
dec
xor
xlat
pop
jg
cmpsl
outsb
pop
leave
or
lods
sti
jl
stc
mov
jecxz
jns
sub
popf
out
insl
xor
ret
lcall
add
cmp
push
or
cmp
sti
pop
test
push
push
outsl
cmp
fnsave
jne
enter
mov
cmp
push
call
mov
add
mov
hlt
mov
push
push
dec
int3
leave
test
mov
mov
addr16
cmc
pop
orl
in
sbb
cli
repnz
push
pop
xchg
dec
push
out
leave
out
mov
xor
aam
jnp
cli
in
cmc
or
pop
cmp
jl
fsubs
push
mov
test
hlt
sbb
xchg
push
test
add
adc
popa
out
pop
lods
jb
in
ljmp
push
je
dec
imul
mov
xor
jb
sbb
mov
lea
xchg
popf
and
pop
lock
push
call
imul
call
fnstsw
sub
sub
jg
pop
sub
sbb
in
xor
fildll
dec
gs
xor
mov
sbb
jmp
adc
xor
rclb
rcrl
mov
xchg
movsl
dec
inc
notb
mov
pop
push
icebp
outsb
push
lcall
loope
mov
hlt
mov
cmpsl
cwtl
dec
shr
sbb
aaa
add
xchg
fsubp
in
clc
xchg
jecxz
pop
inc
sbb
js
bound
xorl
test
cmpsl
es
xor
incl
xchg
dec
aaa
push
int
loop
lods
movsl
mov
lahf
xchg
push
mov
lea
dec
es
insl
call
in
or
push
imul
ficompl
jb
inc
enter
icebp
je
cli
scas
bound
dec
outsb
sbb
enter
insb
mov
xor
push
or
dec
inc
mov
mov
add
xchg
icebp
icebp
mov
sub
xchg
mov
pop
jl
cmp
in
dec
pop
in
orb
sbb
stos
add
int
xor
mov
insb
pop
xchg
push
sub
int
faddl
push
xor
jge
loope
or
push
ficoms
repnz
sbb
sbb
add
imul
dec
imul
mov
int3
in
push
jp
add
into
or
mov
fcomps
pusha
dec
adc
pushf
clc
sarl
cmp
add
adc
jl
lahf
or
add
xor
jp
sbb
scas
test
es
in
insl
in
out
stos
mov
jb
movsl
adc
push
push
xchg
dec
mov
and
sbb
mov
sub
jb
dec
and
inc
lds
cmp
orb
mov
loop
les
lret
aad
scas
arpl
cltd
lea
push
cltd
or
adc
jp
xor
xchg
push
hlt
mov
add
lds
or
push
push
jno
and
jne
xchg
sbb
ret
aam
fwait
std
in
jge
movsb
aaa
mov
sti
mov
lods
test
dec
jle
pop
mov
jecxz
and
in
mov
adc
jbe
add
xchg
dec
cmp
pushf
mov
adc
push
mov
push
mov
mov
xchg
xor
push
pop
cmp
test
stc
sbb
xchg
inc
sub
inc
cwtl
in
xorb
shll
sub
lock
dec
and
pop
mov
arpl
fcoms
orl
popa
push
jnp
cmpsl
adc
xor
cld
je
jg
out
in
rorl
cmp
lock
xorl
mov
push
shlb
into
ds
jge
clc
xor
loope
fdivs
cmp
jno
addb
stc
xor
int3
add
les
popa
cmp
daa
fnstenv
sahf
sub
mov
push
enter
movsb
xor
cld
mov
xchg
subb
inc
movsl
inc
les
xlat
mov
jae
add
and
les
ret
cmpsl
lahf
inc
cltd
out
rorb
sbb
gs
stos
adcb
ret
inc
pop
sub
addr16
cltd
sbb
pop
inc
mov
mov
jp
incb
inc
scas
jecxz
sub
stc
dec
cltd
stc
lds
repz
lods
addl
jns
sbb
pop
dec
nop
imul
mov
and
mov
aaa
dec
pop
or
adc
popf
lock
test
or
mov
es
adc
into
jno
dec
xchg
in
dec
cwtl
mov
fcmovne
add
lock
xchg
sub
mul
loopne
addr16
cmpb
mov
rcll
cmpsl
scas
mov
mov
cld
and
pop
movsl
sub
ficoms
daa
lcall
mov
cmc
mov
and
fdivs
ss
loope
call
cmpsb
pop
push
loope
or
jo
loop
add
rcrb
xchg
jnp
cmp
and
test
outsb
pop
fucomp
sarb
aad
or
push
cmpsb
push
pop
push
push
mov
js
mov
daa
loope
insb
mov
add
leave
popw
mov
xor
int
xlat
xchg
push
das
stos
in
bsr
popl
out
incb
push
mov
test
fmuls
mov
xchg
popf
or
mov
in
jle
hlt
insl
leave
outsl
inc
stos
mov
sti
sti
jbe
cwtl
mov
xchg
xchg
in
subb
scas
mov
int3
cmp
sbb
mov
daa
pop
inc
or
das
push
pop
mov
out
outsl
pop
fsubrs
pop
mov
test
idiv
cmpsl
repz
fmull
push
outsb
mov
shll
sub
stos
cmp
faddp
fcos
nop
fldt
mulb
jnp
pop
mov
sarb
mov
mov
push
cltd
ret
out
sbb
sbb
push
cmc
push
mov
insb
jae
mov
push
les
js
mov
les
out
shlb
dec
movl
int
xchg
bound
jno
adc
xor
and
mov
pop
call
fidivrs
in
cltd
daa
fwait
call
movsl
xor
or
repnz
xchg
mov
vaddps
jnp
mov
lods
insb
and
das
jnp
adc
loop
sub
stos
pop
push
mov
xchg
outsb
mov
cli
mov
sbb
adc
jmp
jno
and
test
sub
or
jmp
lret
xchg
pushf
nop
add
jns
and
in
sahf
ljmp
push
push
jecxz
pop
mov
lea
mov
in
and
in
testb
call
scas
adc
outsb
xor
ds
jo
lcall
loopne
sub
movsb
dec
int
jg
pop
jle
outsb
call
out
xchg
ret
jg
dec
insl
mov
out
leave
divl
arpl
xchg
push
rorb
cmp
adc
mov
pushf
cmp
pop
xor
fidivs
je
stos
jmp
hlt
push
lods
inc
loope
sti
fwait
or
inc
dec
fisubrs
pop
xchg
dec
mov
jnp
pop
cmp
lea
insl
xor
dec
jb
xchg
add
fimull
push
in
call
add
loopne
or
adcl
int
mov
inc
ret
ja
mov
andl
cmp
cmp
orl
int3
sti
movsb
inc
ljmp
cmc
jbe
sub
shl
ss
push
aam
lret
push
out
mov
jne
das
mov
aas
lock
lods
mov
jl
iret
into
into
fs
leave
sbb
sub
jae
call
jb
jns
out
or
jne
das
sbb
sbb
imul
or
jecxz
test
mov
iret
cmpsb
lods
pop
cmp
jle
xchg
inc
mov
mov
mov
int
xor
fsub
push
lcall
mov
push
in
fsubrs
push
scas
imul
out
bound
inc
mov
leave
adc
mov
jne
das
pop
je
out
or
repnz
lock
mov
cmp
pushl
mov
push
popa
mov
xor
sub
mov
mov
icebp
mov
dec
jae
leave
pushw
data16
jnp
out
push
test
ret
xor
call
inc
iret
add
pop
cltd
and
lea
mov
dec
adc
es
gs
pusha
in
ret
push
xchg
sub
xchg
outsl
or
lods
pop
mov
mov
les
xchg
imul
adc
push
add
jmp
pop
test
sbb
and
cmp
inc
movsb
mov
daa
insl
pop
pushf
adc
xor
cmpl
mov
bound
xchg
ret
test
in
in
or
mov
ficoms
jne
cmp
out
fistl
sub
ds
sub
mov
stc
mov
cmp
sarl
sbb
repnz
mov
sub
lds
hlt
sti
mov
cltd
lods
push
mov
sub
ja
cmp
or
or
push
imul
inc
dec
call
fistl
jb
stc
lret
vcvttpd2dqx
test
pop
sbb
mov
repz
int
sbb
out
adc
mov
inc
roll
cld
aaa
in
cmc
scas
les
dec
cmp
push
cli
testb
popf
jmp
push
ret
mov
push
out
das
and
jg
cmc
sahf
int
pusha
mov
or
jb
rcl
rclb
xor
add
insb
fsubp
jae
imul
cltd
pop
gs
adc
jo
mov
or
adc
push
mov
lcall
paddq
lods
fmull
fcmove
leave
jp
xchg
rorl
fidivrl
mov
movb
and
rcr
mov
xor
scas
sbb
sti
dec
ret
rclb
or
adc
push
cmpsl
or
repnz
scas
push
aam
dec
loope
adc
xlat
xor
jecxz
sub
pop
cmpsb
cmp
sti
jae
and
and
adc
mov
sub
jge
cwtl
lahf
iret
or
xchg
mov
je
xchg
lock
sbb
and
and
std
out
fdivrl
mov
sbb
add
inc
lock
cmp
cmp
adc
pop
in
dec
adc
pop
jae
jmp
push
jbe
lcall
test
mov
mov
popa
sub
cmc
scas
aas
fsubrl
pop
insb
add
inc
not
ds
insb
add
mov
cmp
stc
subl
lods
addl
rorb
popf
das
aam
pop
xor
in
mov
mov
dec
cld
xchg
add
sbb
mov
icebp
xchg
mov
add
mov
xchg
sbb
jle
fidivs
or
cwtl
add
in
inc
or
cmp
std
mov
mov
ret
mov
cmp
xchg
or
dec
cmp
jge
push
aad
and
or
repz
repz
and
lds
add
add
pusha
push
mov
push
sbb
subb
ret
mov
jle
shl
cmp
outsl
add
mov
fstps
xchg
inc
mov
out
call
mov
add
stos
loopne
pop
add
jecxz
fsubp
fcom
or
pop
mov
jbe
adcb
pop
or
cmp
mov
adc
sbb
popf
imul
int
testl
xchg
pop
movsb
sbb
inc
add
adcl
adc
inc
imul
adc
sub
popa
fdivrl
pusha
mov
add
inc
xor
shr
mov
and
pop
loope
adc
cmpl
jb
test
scas
fs
outsb
lds
in
out
xchg
sbb
add
adc
mov
inc
adc
repz
scas
jp
test
sub
ss
mov
inc
cmpsl
dec
xchg
or
es
movsb
push
add
and
loop
stos
cwtl
rolb
mul
sar
mov
cmc
and
mov
jl
es
addb
fwait
xor
lahf
mov
scas
inc
ja
aaa
cmp
add
and
push
stc
jp
out
mov
jg
push
add
sub
push
push
mov
icebp
stos
into
mov
pop
adc
cwtl
stc
mov
sub
arpl
cmc
adc
mov
cmp
outsb
adc
pusha
cmp
js
fisubrs
shl
std
jno
mov
jnp
jnp
imul
pop
mov
push
dec
repnz
mov
xchg
sti
adc
lock
sbb
scas
popl
lcall
dec
xchg
arpl
or
ficomps
sub
add
movsb
ss
mov
or
sbb
and
mov
or
inc
mov
cltd
cmpsb
jp
icebp
jg
shrl
jmp
mov
aad
test
mov
mov
lea
movsl
xabort
mov
lock
loope
jnp
aaa
or
mov
inc
dec
or
mov
sub
mov
les
in
inc
andb
fstps
mov
sti
adc
out
cmp
or
fidivrs
js
sub
mov
mov
frstor
ror
imul
ljmp
into
out
test
jp
fadds
gs
mov
mov
leave
inc
imulb
cld
jle
das
cs
das
pop
arpl
leave
push
aaa
flds
push
push
sub
aam
cld
push
jb
movsb
clc
sbb
cmp
call
shlb
sbb
adc
ja
sbb
shll
int3
pop
nop
push
jne
jno
bound
pop
jne
shlb
jp
push
inc
into
jmp
cltd
mov
sub
cmpsb
aaa
movsl
loop
mov
add
aad
in
push
pop
data16
scas
shrl
shll
js
sbb
fisttps
data16
popa
adc
mov
sahf
mov
jge
outsb
xchg
ret
adc
sub
mov
dec
fdivrs
xor
iret
enter
mov
xchg
cmp
or
adc
inc
test
les
test
cmc
inc
mov
add
in
xchg
pop
xchg
mov
lret
daa
sahf
add
cmp
mov
ja
push
out
pop
mulb
pop
pop
and
cmpsb
adc
dec
and
sub
or
popa
lock
add
xor
xchg
in
cwtl
xchg
dec
cmp
dec
sbb
adc
filds
sub
es
lret
dec
push
mov
xor
dec
add
lahf
imul
push
xchg
xchg
test
cmp
call
iret
and
jbe
imul
ljmp
repz
es
sbb
inc
xlat
lods
cmp
loop
or
cmp
pop
nop
in
les
std
in
push
xchg
mov
sub
adc
xor
xor
lahf
inc
scas
repz
push
hlt
mov
cltd
adcb
daa
rorl
push
stc
fldcw
ret
mov
jno
popf
faddp
jle
das
icebp
sarl
mov
inc
push
dec
out
mov
mov
cmp
mov
outsl
xor
lret
dec
mov
or
sbb
mov
pop
mov
fildl
stos
xor
jl
adc
sub
sbb
mov
ret
push
cmp
inc
add
push
lahf
cld
jmp
fdivs
mov
and
out
sub
sbb
lret
push
sarl
mov
push
or
stos
shl
ljmp
adc
mov
orb
mov
sub
mov
adc
ret
jo
jp
xchg
aas
adc
mov
or
daa
mov
stos
jecxz
sbb
out
into
cmpsb
xor
insl
inc
add
lock
mov
in
shlb
cmc
icebp
xchg
cld
clc
mov
inc
and
push
fistps
dec
cmp
ret
out
cli
and
test
addr16
mov
jo
xchg
sub
xchg
sbb
fmul
fdiv
add
es
xchg
in
push
int3
inc
imul
mov
icebp
outsb
je
push
lea
xor
adc
out
lods
and
dec
inc
mov
lods
sub
mov
adcl
push
xor
fcoms
cmpsl
sbb
sarb
xchg
leave
mov
and
pop
mov
mov
aad
push
and
cmp
incb
addr16
or
fwait
pop
das
pushf
mov
fsubs
adc
inc
and
arpl
out
sub
cli
push
mov
js
fdivrp
cmp
dec
push
or
jecxz
pop
cmp
test
adc
pusha
iret
fnstsw
inc
add
mov
adc
inc
dec
inc
dec
stc
sbb
jmp
jmp
adc
xchg
pop
stos
cmpsb
lret
jno
sarb
idiv
sub
out
xchg
push
aam
jnp
adc
int3
mov
push
mov
sub
inc
cmpsl
fists
mov
pop
not
pop
jbe,pn
dec
sub
test
lahf
dec
cmp
mov
mov
lods
push
cmpsb
in
dec
push
test
cs
rorb
jbe
add
stos
notl
xor
packsswb
shr
adc
bnd
and
push
jae
fcomps
push
push
xchg
cmc
mov
loopne
test
pop
movsb
aaa
xchg
jge
stos
or
push
jb
dec
or
test
lahf
std
sbb
dec
ffree
lret
jbe
pop
jecxz
mov
push
inc
movsl
mov
and
sbbb
ja
mov
js
decl
inc
fs
pushf
lods
scas
nop
outsl
mov
jg
mov
dec
fidivs
mov
pushf
scas
in
pushf
jno
or
mov
push
fs
popa
aad
int
scas
dec
lea
xor
jl
xchg
dec
push
mov
push
hlt
jge
call
mov
dec
push
jns
or
dec
xchg
adc
jmp
test
jecxz
loop
adc
pop
jmp
inc
enter
jecxz
cmp
and
adc
daa
rorl
popf
addr16
sbb
and
pop
js
icebp
sahf
ljmp
mov
dec
mov
mov
out
jmp
jle
std
imul
mov
lcall
icebp
mov
add
sbb
lods
mov
lahf
xor
xor
pop
jo
xchg
or
sbb
enter
dec
xor
or
xchg
dec
cmpsb
xchg
pop
push
cmp
sbb
mov
out
xchg
pop
jmp
lock
mov
lds
or
pop
bound
dec
mov
xor
dec
stos
jbe
rolb
push
xor
loop
mov
cld
jmp
fmull
stos
sbb
ret
dec
mov
or
scas
std
inc
insb
mov
dec
add
and
or
add
dec
fucomip
mov
jge
pusha
test
les
mov
ja
sbb
divps
xor
cld
enter
repz
jo
xor
push
xlat
cmp
jmp
mov
mov
mov
mov
lret
in
dec
xorl
das
xor
aaa
shrl
or
mov
movsb
mov
push
push
sub
xor
stos
scas
xchg
jbe
mov
imul
in
xor
adc
pop
mov
daa
cmc
shlb
sbb
sub
mov
and
mov
faddl
aaa
loop
jae
lods
pop
dec
loopne
push
arpl
lret
jl
xchg
mov
rcll
out
fstpt
dec
in
xchg
in
jne
pop
mov
je
dec
push
add
movsb
sub
pop
push
pop
push
sub
loop
sub
scas
in
aam
orb
jge
sub
sbb
enter
mov
mov
xchg
push
xchg
sbb
or
pop
das
scas
sbb
outsb
add
mov
add
push
sbb
into
sahf
mov
mov
hlt
dec
adc
xchg
std
call
subl
fstl
xor
mov
std
mov
cmc
movsb
sub
mov
out
pop
sbb
clc
mov
cmp
call
push
cmp
fbld
mov
dec
rorb
cwtl
cmp
jl
rolb
stos
int3
stc
fstpl
inc
in
dec
jle
or
out
add
cli
clc
mov
dec
cmp
push
cmp
out
jp
mov
and
xchg
scas
jae
rcl
mov
xchg
jmp
int3
xor
es
dec
bound
add
in
ja
aas
jge
and
mov
stos
mov
jp,pn
push
push
enter
dec
jb
pusha
pop
xchg
adc
adc
inc
fdivl
inc
in
sub
iret
xor
push
jg
sub
pop
sbb
push
aas
addr16
out
idivl
and
rcl
inc
movsb
xchg
xchg
loope
pop
and
andl
leave
xchg
xchg
mov
filds
fisttpll
cld
xchg
data16
shrb
or
pop
mov
ret
mov
adc
mov
std
imul
imul
cmp
jo
jae
adcl
jg
lret
dec
das
mov
jno
sub
cwtl
bound
xchg
dec
inc
loope
pop
and
add
xchg
in
lods
mov
adc
inc
shll
lret
mov
mov
mov
add
and
lds
or
js
lret
pusha
arpl
dec
inc
push
loope
insb
add
jp
xchg
sub
mov
inc
mov
or
repz
xchg
shlb
adcb
mov
mov
lret
ret
enter
adc
test
loop
test
orl
repnz
loope
imul
xchg
adc
adcl
ret
das
cmpl
adc
mov
imul
aam
pop
push
cltd
sub
bound
rol
data16
out
add
nop
shll
pop
xchg
outsb
iret
or
inc
jecxz
sub
das
ljmp
mov
dec
add
addb
cmp
xchg
push
add
dec
pop
out
lds
sub
mov
repnz
clc
jns
insl
mov
clc
mov
xchg
mov
push
mov
mov
or
out
data16
flds
mov
mov
call
mov
fstps
cmp
outsb
or
outsb
jnp
inc
push
jmp
mov
add
mov
inc
push
push
out
push
js
xchg
shrl
or
call
loopne
shlb
sub
rclb
cs
lock
sbb
cmp
pushf
jne
pusha
cld
fucom
scas
push
inc
and
xchg
sbb
cmp
icebp
mov
and
aad
xor
or
lods
pusha
push
into
shlb
inc
mov
repnz
popf
mov
pop
fisubs
lahf
push
aam
and
inc
popa
nop
mov
mov
mov
jmp
adc
or
or
stos
pop
sbb
mov
ljmp
sub
cmpb
xchg
and
mov
and
ror
mov
fdivrp
adc
inc
orl
call
addb
jl
jns
push
and
les
push
mov
sub
dec
fsub
in
pop
xor
ds
movsb
pop
gs
mov
shll
mov
cmpsb
into
adc
jp
ja
xchg
inc
repz
mov
mov
sahf
iret
fsub
add
addr16
jg
adc
xor
pop
jnp
lea
pop
pop
and
pusha
xor
repz
sub
push
xor
cmp
popa
or
fwait
add
out
push
pop
jle
test
iret
push
push
dec
mov
pop
out
movsl
cld
sbb
scas
or
into
js
movsl
sti
inc
fs
mov
xor
mov
jne
inc
pop
ds
pop
jecxz
push
and
insb
adc
stos
stc
sbb
jns
dec
pop
popf
popa
in
mov
mov
jmp
lahf
fs
orl
mov
popa
cltd
arpl
cmp
and
mov
cmp
mov
in
push
xchg
cmpsb
mov
mov
dec
mov
sub
in
data16
sbb
add
out
lock
sub
sub
jmp
inc
inc
test
cmp
dec
push
jmp
ret
mov
or
das
xlat
xchg
sahf
pop
xor
pop
jb
fsubrl
cld
pop
mov
sbb
jg
pop
mov
bound
push
test
in
test
xchg
fs
into
sbb
movsl
icebp
inc
stos
rolb
push
push
jmp
add
push
rcrb
adc
sbb
push
sub
stos
xchg
daa
sub
sub
aas
mov
push
sbbb
dec
sbb
mov
mov
les
adc
lds
pop
xor
jmp
aaa
rol
imul
cwtl
xor
sbb
fsubrs
sbb
mov
pop
adc
nop
cmp
fisttpl
mov
aad
jecxz
inc
iret
mulb
jo
adc
sbb
inc
ret
adc
pusha
daa
jle
lret
shll
inc
sub
and
dec
pushf
mov
add
arpl
sub
cmc
sbb
push
sbb
jge
pop
mov
sub
adc
fwait
dec
push
das
push
mov
inc
repnz
mov
push
or
cmpsb
inc
pushf
sub
aaa
dec
adc
cmp
mov
mov
xor
xchg
aad
mov
dec
push
sahf
std
call
and
cmpsb
nop
iret
lods
pop
ljmp
leave
das
jo
adc
add
sub
sbb
xor
inc
cmc
jb
fsubrl
xor
mov
lods
cmp
sbb
inc
aaa
lods
sysexit
mov
add
out
xlat
jae
jecxz
fwait
jbe
cmp
in
mov
xor
ret
pop
dec
push
push
jo
mov
mov
or
pusha
dec
ja
subl
jmp
fisttps
sbb
lods
enter
push
cmp
and
or
push
mov
ja
rorb
xchg
lea
movsb
xchg
ja
mov
mov
cli
xchg
out
je
sub
pop
xor
push
mov
std
jecxz
inc
shll
adc
clc
test
mov
mov
sub
pop
push
xor
dec
mov
mov
push
addr16
loopne
add
pop
jbe
cltd
cmovg
mov
hlt
dec
inc
sbb
xchg
or
clc
xor
inc
es
sub
pusha
mov
adc
push
inc
push
xchg
repnz
jno
adc
and
dec
lret
loope
dec
mov
int
icebp
mull
repnz
lret
mov
mov
cmc
stos
mov
jp
jle
mov
lods
rcll
ss
and
xchg
pop
push
into
sti
dec
repnz
ret
lods
pop
xor
mov
mov
mov
daa
dec
add
xchg
mov
out
pop
stos
inc
sbb
cmp
pop
sub
loopne
adc
cmp
mov
jl
decl
sub
loop
pop
dec
sbb
or
sub
adc
inc
in
or
das
mov
insb
jbe
push
icebp
adc
jns
or
cmc
fisttps
ja
outsb
test
mov
xor
stos
and
fwait
and
js
jl
push
loopne
fsubr
ficompl
aam
das
xlat
or
push
inc
dec
mov
cmp
call
sub
das
roll
lea
jnp
lahf
lret
adc
adc
cli
add
test
and
jge
test
movsb
shrb
leave
mov
mov
cmp
mov
xchg
push
movsl
sub
int3
or
or
mov
insl
adcb
test
cmp
shl
scas
inc
and
sub
xor
test
xor
fcompl
sbb
jbe
jne
movsl
std
pop
cmpsl
jns
inc
add
pop
out
push
test
stos
cltd
std
adc
dec
leave
call
xchg
cmp
adc
popa
jecxz
jne
popa
jg
mov
mov
adc
sbb
mov
inc
mov
loopne
dec
std
mov
mov
push
aad
cwtl
shll
mov
cwtl
cmp
inc
jbe
adc
lahf
fidivl
mov
jnp
call
or
mov
rorb
push
mov
shll
and
mov
xchg
mov
mov
flds
adc
add
jne
xchg
sahf
push
jae
mov
fcmovu
cld
shr
mov
xor
stos
cld
jbe
sbb
mov
popf
sub
pop
jno
lods
mov
mov
cmp
cld
mov
ret
dec
xchg
sub
push
pusha
stos
cmc
xor
test
icebp
ret
inc
add
addr16
or
pop
mov
lea
jae
sti
into
push
adc
dec
push
je
adc
loopne
cld
mov
cmc
sbb
push
inc
mov
dec
jo
stos
mov
cmpsl
dec
jno
repnz
in
popf
mov
je
add
mov
push
jp
push
xchg
jae
inc
xchg
sbb
mov
jno
mov
insl
imul
fcompl
push
cli
mov
mov
movsl
insl
loope
int3
aad
mov
and
xchg
in
ficoml
mov
shll
outsb
xchg
push
rorb
dec
dec
fcomip
ds
jle
cli
xchg
mov
inc
adcl
mov
mov
jmp
repz
lahf
cmp
stos
sub
push
push
fstl
or
test
addb
jp
sub
mov
push
les
scas
std
out
xchg
pusha
lret
sarb
push
inc
pop
icebp
sub
dec
jo
popf
cmp
nopl
ss
ret
js
fldl
adc
popf
and
jbe
push
mov
mov
push
sbb
push
cmp
test
fwait
mov
out
and
test
xor
aas
mov
sti
pusha
push
aam
mov
cmp
fbld
sub
mov
xor
icebp
adc
lcall
adc
add
shlb
in
clc
clc
adc
jno
push
pop
push
popf
fsubrs
sub
or
pop
movsl
sbb
inc
jecxz
fdivrs
bsr
int
xor
push
iret
mov
jg
jns
xchg
pusha
mov
and
sub
mov
sub
imul
aad
int3
xchg
cld
xchg
dec
xchg
rep
mov
insl
cmp
shrl
pop
push
mov
fstpt
dec
mov
mov
cmp
gs
and
leave
icebp
jmp
push
leave
sub
in
ja
addr16
xor
dec
or
sbb
lret
test
or
dec
addr16
inc
mov
fs
pop
fs
cld
stos
pusha
mov
in
push
sbb
fdivrl
cmpsl
add
outsl
and
inc
fildl
inc
mov
mov
out
push
in
call
pushf
in
adc
ret
pop
push
jae
xor
cmpsl
and
mov
xbegin
cmpsb
pop
stc
push
imulb
xchg
xor
xchg
mov
mov
push
mov
push
push
filds
mov
insl
call
sub
fcoml
mov
and
sbb
add
or
fwait
test
repnz
popa
mov
lahf
add
incl
mov
jmp
and
dec
xor
mov
xchg
mov
xor
fsubs
xlat
bound
ljmp
and
int
add
adc
mov
cld
xchg
or
loopne
leave
xlat
and
cmp
pop
call
and
lods
mov
fadd
pop
inc
repz
cld
nop
mov
lock
ja
add
int3
cmp
mov
or
aad
pop
shl
cmp
jb
dec
jge
cmovo
es
in
sbb
or
aas
out
dec
pop
out
jle
xchg
ret
dec
fcmovu
push
or
adc
insl
pop
inc
imull
mov
pop
mov
sub
xchg
sub
bound
jne
mov
cmp
fsub
test
adc
cmpsl
xchg
xchg
sub
push
jle
pop
sub
push
xor
addb
out
les
dec
dec
sub
sbb
inc
push
xlat
jp
push
cli
push
lock
add
inc
js
dec
aaa
into
mov
inc
add
adc
loope
imull
and
mov
push
xchg
dec
mov
sbb
pop
and
aam
mov
sarb
lret
push
jnp
imul
pop
lds
sbb
lahf
jne
fcoms
push
pop
out
inc
inc
inc
cwtl
xchg
enter
jbe
ljmp
ficompl
pusha
insb
mov
and
and
call
pop
jl
das
popf
test
lahf
subb
push
cmp
dec
andl
pop
fdivs
fcoml
imulb
ret
lds
aas
dec
std
pop
mov
out
lods
fnstenv
push
xor
test
jbe
ret
add
imul
inc
inc
mov
unpcklps
mov
lods
cmp
pop
push
dec
cmpsb
jbe
cmp
das
into
orl
frndint
sub
popf
or
leave
aam
movsb
mov
push
or
pop
aam
sahf
pushf
loope
add
fcomps
cli
push
loop
sub
js
push
in
jmp
icebp
adc
dec
enter
cmpsb
repz
mov
dec
subb
cmp
stos
leave
fdiv
mov
add
or
je
pop
pop
adc
test
dec
aam
in
stos
cmp
aam
rcrl
stos
and
mov
mov
mov
mov
mov
dec
jmp
movsl
xor
in
loop
push
fmull
jne
push
cmp
and
outsl
mov
push
testl
fidivl
add
mov
addr16
sahf
xchg
int
or
pop
imul
adc
ffreep
pushf
xchg
add
aad
sbb
xchg
cmp
inc
aam
jns
add
lret
int3
lods
rorb
and
imul
aad
and
cmpsl
pop
or
add
loope
stos
ret
pop
mov
pop
lods
and
xor
in
mov
cmp
pop
les
push
lds
cmp
pusha
arpl
inc
out
push
mov
movb
jbe
sub
test
punpckldq
cmc
ljmp
sbb
inc
mov
pop
push
in
rcl
add
jge
mov
mov
sub
cmp
pop
fisttpl
aad
push
loopne
jle
outsl
xor
clc
xchg
jmp
cmp
movsb
adc
ret
xor
arpl
jns
loopne
adc
mov
jo
inc
cmpsb
fisttpl
cmp
pop
push
or
inc
cmpsb
push
and
das
add
lods
inc
jno
xor
and
fstl
shlb
iret
repnz
sbb
adc
in
xchg
mov
loop
sbb
push
cmc
xchg
ret
add
je
inc
dec
stos
outsl
mov
and
pop
in
inc
shlb
test
mov
pushf
cwtl
dec
xor
int
iret
lret
xchg
stc
mov
add
pop
adc
or
stc
mov
inc
xor
leave
jbe
push
push
inc
leave
negb
mov
out
push
bound
icebp
and
jge
mov
repz
rorb
loop
mov
orl
loope
jbe
ja
mov
mov
inc
push
or
push
xlat
push
or
hlt
imul
adc
inc
cmpsb
xchg
aam
push
dec
adc
adc
dec
inc
sub
std
xchg
push
mov
dec
dec
bound
cmc
shl
pop
dec
cmp
outsl
arpl
sub
jne
loope
mov
mov
sub
pop
in
add
ds
aam
sbb
cmc
stos
int
cli
cltd
push
repz
push
movsl
dec
add
fcomp
insb
jl
cmp
adc
mov
xor
add
js
fldenv
cltd
add
push
cmp
je
les
sbb
push
clc
shr
mov
adcl
and
sub
xor
dec
mov
ds
mov
je
dec
je
jle
lock
mov
fsubs
inc
lds
test
xchg
cmp
mov
rorb
cmpsb
stc
xchg
fs
add
pop
push
loope
xor
xor
stc
adc
and
push
nop
es
in
ja
loop
ffreep
std
and
mov
jl
push
in
mov
xor
fsubl
lods
xchg
js
xor
push
imul
and
aad
or
add
repnz
mov
mov
dec
ja
je
sub
xchg
je
dec
cld
xchg
sbb
sub
mov
xchg
pop
add
cltd
popa
out
pop
push
adc
sarb
inc
aas
add
push
ss
ss
or
pusha
imul
push
orl
cmovle
push
sub
adc
scas
adc
adc
mov
nop
push
xchg
imul
cmp
rorl
testb
inc
fsub
das
notl
ds
push
add
movsb
xchg
out
pop
daa
jl
inc
sti
add
xchg
mov
push
sub
jb
sahf
popf
inc
jno
cmpl
mov
push
iret
or
push
leave
test
adc
shrd
dec
popf
mov
clc
cmp
adc
dec
pushf
rcrb
and
mov
hlt
pop
lods
loop
fisttps
and
and
xchg
shrb
inc
jmp
clc
mov
push
xchg
dec
aas
lods
fcmovnbe
cmp
push
sub
xchg
popa
pop
or
test
pop
xor
dec
xchg
filds
lret
out
and
inc
popa
aaa
int
cld
adc
push
jbe
mov
sahf
jnp
jno
daa
sti
sbb
scas
insl
mov
sbb
sub
xchg
sbb
fisttpl
stc
ds
xlat
fs
clc
lock
add
int3
ret
out
leave
clc
outsl
les
fists
adc
mov
mov
ljmp
loope
push
add
jmp
ret
outsb
hlt
xchg
dec
cwtl
mov
mov
lahf
xor
jb
sub
push
rcrl
cli
mov
push
sbb
jne
aam
cmp
sub
and
push
mov
movsl
jae
add
mov
jnp
lods
test
sbb
or
fdivrs
jns
or
push
or
dec
push
pop
fadds
mov
hlt
out
inc
fs
sub
mov
push
cld
sub
xchg
test
xor
and
mov
mov
out
pop
std
rolb
outsl
or
sub
add
lcall
lock
push
and
adc
push
sub
jp
xor
lret
jns
cmc
xor
mov
jbe
pop
ljmp
cltd
mov
inc
ja
mov
mov
push
push
in
pop
push
push
js
fstpt
xchg
pusha
rol
lods
test
js
mov
push
arpl
aad
dec
imulb
mov
xor
shl
leave
pop
pop
aaa
repnz
loope
stos
orl
ds
mov
push
sub
mov
xchg
push
sub
mov
sbb
mov
mov
adc
dec
push
cli
sbb
fsubrl
adc
mov
loope
call
or
dec
loope
pop
cmc
cld
sub
dec
inc
add
sbb
aam
mov
imul
pusha
test
xor
pushf
or
out
cs
repz
jge
pop
mov
jnp
subb
ret
aaa
xchg
inc
pop
icebp
pop
hlt
insb
jg
push
mov
fistpll
das
cmp
andb
jecxz
and
jb
loopne
dec
fildll
push
icebp
pop
mov
push
fadds
inc
popf
jo
xchg
aad
add
stc
cmpsl
jecxz
xchg
orb
fnsave
stos
rcrb
je
and
jge
ret
aam
cld
xchg
lcall
mov
mov
lea
push
mov
xchg
push
ret
insb
jmp
add
nop
lods
pop
jnp
jmp
cmc
sbb
lahf
gs
mov
call
xlat
sbbb
push
inc
aam
or
adc
xchg
ljmp
adc
outsb
mov
push
lahf
adc
cltd
addr16
xor
lds
or
push
leave
flds
inc
lds
push
or
lock
pop
mov
cmp
call
lods
sbb
push
movb
mov
and
adc
pushl
xchg
add
loop
mov
ja
jnp
stos
lret
sbb
mov
push
bnd
dec
imul
jnp
inc
cmp
sbb
sbb
std
cs
sub
pop
mov
in
scas
insl
push
clc
fs
inc
lret
jae
lods
cld
xchg
mov
ret
mov
mov
mov
das
ficomps
out
add
out
data16
inc
aas
cmc
pushf
xor
in
jb
mov
inc
jmp
pop
pop
fists
add
jge
std
int3
aad
mov
lret
add
pop
test
sbb
sbb
les
or
push
fcmovbe
das
or
xchg
mul
mov
hlt
pop
mov
ss
sub
in
lahf
mov
pop
dec
inc
lods
pop
das
cmpsl
sub
adc
fiaddl
repz
sbb
jmp
loop
push
test
stos
jns
fcompl
mov
adc
jge
fsts
or
in
mov
mov
clc
int
inc
cmp
adc
stos
sub
mov
pop
push
repz
inc
imul
out
mov
cli
add
xor
adc
stos
scas
inc
push
sub
mov
jp
xlat
add
or
int
push
and
hlt
sbb
mov
js
and
popl
mov
jl
nop
inc
fistpll
dec
in
shll
adcb
jbe
daa
push
inc
in
lcall
fs
cmc
ret
xchg
pop
sarl
das
mov
cmpsb
adc
xchg
mov
fnstcw
push
inc
scas
rolb
cmpsl
mov
es
inc
cltd
pop
int
lea
inc
push
jne
sbb
xchg
jne
or
lahf
adc
mov
xchg
and
cltd
test
dec
xlat
mov
fisttpll
int3
jne
lods
movsb
dec
mov
cltd
lret
dec
je
dec
and
mov
push
fdivrl
sub
insb
cmp
dec
psubq
push
out
and
inc
outsb
cld
mov
pop
stos
mov
aad
xor
shl
sti
push
clc
ret
lock
cmp
imul
inc
lods
cmc
fists
js
sahf
jmp
test
sub
pop
cld
xchg
sbb
and
ror
shr
and
leave
fstpl
in
add
mov
stc
mov
rolb
sahf
jbe
bound
push
lods
sub
idivb
adc
or
mov
insb
test
xlat
aaa
sbb
dec
push
and
adc
mov
sarl
sub
add
mov
fdivs
leave
mov
icebp
mov
and
mov
repnz
jmp
dec
bound
mov
push
movsb
scas
out
inc
int
stos
icebp
sub
mov
cmp
xlat
dec
cli
cmp
or
hlt
mov
es
clc
sbb
add
sub
mov
inc
mov
fsubrs
and
pop
sub
ds
or
in
pop
xchg
repnz
or
dec
pop
jg
sub
sbb
sti
inc
adc
sub
or
inc
jmp
mov
fnstsw
loope
leave
aaa
mov
icebp
jmp
pop
mov
mov
into
bound
in
inc
push
sbb
out
bound
xchg
and
arpl
int3
rclb
out
loopne
fdivrl
jp
mov
inc
dec
mov
jge
dec
mov
xor
push
xlat
ss
cld
lea
fldenv
call
jmp
rorb
mov
inc
test
xchg
cmc
aaa
sar
adcb
repz
rcll
mov
out
test
das
push
jns
cmp
xor
aad
pop
mov
or
add
cmp
and
cs
jge
pop
popa
xchg
cmp
test
mov
orl
test
sub
inc
mov
adc
cltd
ret
mov
xchg
mov
xchg
cwtl
imul
and
sub
ljmp
in
iret
xorb
pop
cs
aam
cmp
pop
mov
xor
xchg
and
xchg
ljmp
adc
adc
pop
lock
cmp
jae
sbb
push
mov
aad
call
mov
and
mov
xchg
int3
xchg
aam
mov
dec
mov
test
daa
nop
out
jno
jbe
inc
test
into
int3
movsl
and
bound
mov
jle
sub
sahf
xor
push
pop
dec
mov
jp
or
mov
sar
sub
and
sar
mov
mov
cmp
add
fdivrl
adc
mov
into
inc
bound
push
fistpl
mov
mov
stos
jmp
sub
out
int3
popf
pop
inc
aaa
adcb
stos
test
and
or
mov
fisttps
mov
mov
sbb
sbb
push
or
cmp
in
cs
lods
mov
push
add
jge
mov
in
mov
push
inc
movsb
lds
mov
popa
das
lcall
fldcw
mov
stos
pop
aam
fdivl
movsb
leave
test
mov
in
icebp
int3
sbb
dec
repnz
cmp
push
xorb
xor
test
fisubs
leave
lods
push
dec
xor
mov
mov
or
sub
rclb
inc
loop
jnp
xchg
mov
inc
aas
das
lea
or
adcl
pop
mov
enter
inc
clc
mov
jnp
enter
jp
sbb
xchg
cwtl
es
cmp
xor
sbb
or
cmp
sarl
imul
pop
fcompl
and
sub
rcl
fisttps
ja
mov
imul
icebp
jnp
frstor
fbld
mov
es
pop
xchg
add
inc
adc
xchg
xchg
add
push
add
sub
pop
pop
or
nop
call
cmp
add
jo
xchg
in
mov
xchg
test
in
add
shlb
push
dec
shl
sbbl
push
lcall
jge
jns
insb
jne
fwait
mov
xchg
je
dec
aad
xor
fs
int3
outsb
movzwl
pusha
pop
cmp
ljmp
xchg
movsb
popl
or
rolb
cmc
xchg
pop
enter
dec
sarb
jnp
jb
data16
jnp
dec
fistpll
adc
inc
fcmovb
inc
daa
test
pop
sub
cmp
add
adc
loopne
dec
push
mov
popl
mov
pop
fbstp
dec
aad
cmp
fdivp
mov
ljmp
add
icebp
fimull
repnz
lods
inc
sahf
outsl
ds
lret
popa
jo
mov
push
jns
int
push
mov
jecxz
mull
inc
mov
push
aas
xor
stos
mov
mov
sbbb
lds
movsl
popf
out
lret
dec
push
jne
gs
and
shlb
cmpsb
lods
cli
sub
adc
popf
enter
loope
sti
call
add
out
xchg
popa
cmc
jns
push
lods
push
js
out
add
mov
sti
inc
scas
mov
push
mov
mov
stos
cwtl
aad
fbld
int
outsl
sub
movsb
adcb
xlat
lcall
dec
lods
jae
mov
stos
jle
sbb
lahf
js
out
ds
push
lods
push
enter
jnp
scas
icebp
dec
and
sbb
das
jle
mov
inc
and
cltd
inc
shll
outsl
pop
movsl
inc
inc
or
push
aad
loope
pushf
pushf
pop
lods
lcall
xchg
cmp
ret
sub
jae
imul
rep
cli
loop
cwtl
adc
lahf
mov
scas
daa
fwait
mov
adc
add
dec
mov
aad
sub
neg
push
jnp
out
and
cmpsl
mov
std
imul
int
out
xchg
inc
cmp
repnz
dec
jge
xchg
cmpsb
and
hlt
xor
nop
jo
push
lds
repz
imul
outsl
mov
fwait
pop
fcoml
stc
pop
push
jge
jg
adc
repz
jp
repz
dec
test
xchg
cmpsb
inc
gs
dec
fsubs
loope
mov
cli
and
pop
pcmpeqb
out
jge
mov
movsb
popf
iret
movsl
lahf
imul
push
push
out
cmp
sbb
push
cmp
out
adc
aad
les
pop
sti
rcpps
jmp
mov
daa
or
std
or
out
in
imul
push
ss
sub
pusha
jp
cli
and
inc
ret
mov
inc
loopne
imull
mov
pop
pop
ret
pop
push
ret
cmp
or
arpl
cmp
mov
push
sub
stos
adc
ret
or
insb
cmpsb
dec
lds
fldt
lcall
out
out
xlat
push
jmp
xchg
xchg
wbinvd
push
add
sbb
push
xor
dec
pop
in
enter
xchg
jecxz
adc
lds
mov
dec
mov
enter
jl
xor
xchg
sub
sbb
pop
push
sub
in
mov
mov
push
mov
xor
jno
mov
int3
mov
repnz
xchg
addr16
ret
sub
fimull
stc
push
mov
sub
jne
arpl
sbb
fcmovnu
cmp
adc
mov
lods
inc
mov
push
xor
outsl
adc
lods
scas
leave
xchg
rolb
pop
or
xor
out
pop
pop
sub
xchg
out
or
sarb
xor
xchg
lock
loopne
or
ret
das
inc
sarl
inc
mov
imul
cs
xlat
inc
xchg
cmp
cwtl
jne
cmpsb
mov
inc
push
add
adc
popa
rcrl
repz
in
push
mov
insb
pop
and
lods
test
lods
negl
adc
dec
popa
xchg
dec
mov
inc
jno
jl
lds
lret
xchg
decl
mov
mov
cmp
inc
mov
and
sub
xor
xchg
push
test
cmp
adc
xor
or
and
mov
xchg
push
test
push
insl
mov
cmpsl
out
movsl
lret
aaa
cmpsl
pop
daa
fnstenv
pop
jg
je
cmc
fistps
test
jb
pop
mov
xchg
frstor
push
xchg
xchg
push
out
test
adc
jbe
pop
cmp
adc
push
xchg
js
outsl
ret
into
hlt
sub
cmc
pop
out
movsb
adc
mov
outsl
add
cld
in
inc
add
xchg
je
dec
insl
loop
jl
and
jge
pop
mov
pop
mov
lods
mov
inc
xchg
sbb
lds
rorb
addr16
in
ret
outsb
mov
or
movsb
push
xchg
popa
stos
inc
dec
sbb
xchg
jmp
dec
inc
mov
popa
inc
jo
cld
in
jmp
rcr
mov
inc
mov
or
sbb
scas
sbb
cmc
mov
cmc
dec
outsb
daa
mov
imul
addr16
fldcw
sahf
pop
das
jl
enter
or
fistpll
into
adc
push
xor
movsb
or
test
jnp
dec
clc
insb
cld
cmpsb
in
mov
jmp
xor
popf
movsb
add
lods
cmc
xchg
int
mov
push
mov
enter
es
je
cmpsl
xchg
or
and
mov
inc
mov
mov
cmp
jne
add
pushf
sti
ret
andb
fs
dec
jecxz
lcall
lods
push
xor
testl
xor
fsubs
repnz
notb
movsb
ret
mov
mov
loopne
jbe
sub
xor
enter
pop
inc
shlb
sarb
cld
mov
daa
push
xchg
jne
aaa
add
je
in
dec
mov
ds
loopne
pop
xor
jbe
adc
repnz
gs
dec
push
inc
in
rolb
pop
pushf
mov
in
ffree
xor
shl
fwait
bound
sbb
jb
jnp
xor
inc
fwait
xchg
inc
and
add
add
xor
mov
ret
test
or
push
lods
sub
lds
dec
cmp
xchg
pop
xor
xor
mov
sbb
xchg
jns
xlat
jl
mov
out
sub
inc
xor
push
das
and
ja
and
subl
mov
xchg
popa
stc
or
clc
mov
jo
aaa
and
xchg
jg
adc
jb
and
fnstcw
pop
insb
jns
jmp
xor
or
add
or
imul
mov
sbb
mov
fadd
adc
jmp
xchg
xchg
cwtl
and
fsubrs
mov
xchg
movsl
roll
push
add
mov
and
sbb
mov
stos
fidivrl
ficomps
in
ficompl
push
sub
cmc
icebp
lret
and
mov
jmp
jmp
lret
popa
gs
lock
or
dec
movsb
pop
popa
mov
ljmp
aaa
add
sbbl
aam
clc
rorl
inc
leave
sar
mov
jae
xor
repz
aaa
pop
xor
push
popf
sub
nop
jle
pop
stos
hlt
mov
jp
jb
popa
fs
or
mov
stc
orl
leave
jne
add
sahf
pop
sub
adc
addb
shll
inc
push
add
in
cli
dec
mov
insl
in
jnp
xor
cmp
xor
cmc
pop
pop
dec
adc
test
insl
and
push
daa
imul
fnstcw
jle
cmp
xchg
lods
imul
lds
mov
pusha
rcll
sub
cli
stc
movsb
lret
divl
ljmp
jno
lret
aaa
push
mov
out
mov
ret
lock
sahf
repz
scas
jp
in
stos
sbb
dec
pushf
in
rol
mov
scas
sbb
pop
jecxz
test
pop
sbb
push
xor
testl
sbb
adc
ret
fcmovu
jnp
stos
adc
or
mov
dec
stos
or
jl
lret
push
inc
jne
sub
and
mov
pop
aad
je
mov
and
test
stc
out
pop
or
jne
mov
iret
ret
fcmovnb
sbb
xor
sub
push
xchg
data16
sbb
or
test
or
movsb
out
ret
pop
adc
call
sub
ljmp
fisubs
fidivs
outsl
mov
fisubs
mov
sarb
cmp
mov
fnstsw
jp
in
mov
jmp
or
push
mov
mov
fs
mov
xor
sub
push
xor
inc
rcll
aad
int3
push
mov
add
pop
insl
call
icebp
fldcw
daa
imul
in
gs
loope
push
ret
outsl
add
orb
sub
cltd
iret
sub
or
lcall
std
movsb
adc
pop
cmp
xlat
mov
incb
decb
in
fdivl
pop
add
cmpsb
mov
rorl
cmp
inc
pop
int
dec
push
sub
mov
and
push
pop
ja
or
fcomps
xchg
push
sbb
out
mov
enter
cmpps
cmp
push
out
in
fidivrl
hlt
sbb
mov
mov
or
movsl
orb
cmp
insl
inc
jno
cmp
call
or
leave
inc
inc
test
clc
and
dec
outsl
mov
enter
sbb
xlat
sub
dec
sub
adc
out
aam
mov
lret
lcall
and
test
sbb
xchg
test
cltd
sbb
in
mov
repz
repz
jbe
xchg
loop
xor
pop
es
pop
push
mov
sub
fs
push
outsb
or
mov
jge
pop
mov
arpl
push
icebp
mov
stc
jg
jle
dec
clc
cmp
je
xchg
faddl
mov
nop
cmp
mov
push
mov
lret
xlat
sub
jecxz
mov
clc
stc
cmp
imul
jg
cmc
and
inc
bound
dec
fsts
xchg
sub
shlb
sbb
inc
mov
insb
jno
mov
pop
mov
fs
call
out
scas
pop
std
or
jb
hlt
iret
cmp
test
cwtl
out
sub
mov
xor
enter
aam
push
int
mov
push
add
mov
sahf
rcr
sbbl
add
leave
adc
scas
ficoms
stos
adc
leave
push
pop
insl
pop
mov
or
mov
jg
and
pop
jge
mov
sbb
cmp
xchg
mov
lds
inc
ljmp
add
shl
rclb
lds
mov
imul
insb
push
andl
in
cmp
lahf
test
scas
test
je
fstpl
pop
xor
mov
xor
lods
dec
push
xor
dec
lret
sub
push
movb
cmp
aad
inc
push
inc
ds
mov
adc
mov
jg
push
or
cwtl
sbb
into
imul
dec
mov
or
insb
push
aam
xchg
aaa
rclb
repnz
pushf
inc
mov
fwait
lods
or
mov
push
jp
filds
xlat
lret
mov
jae
sub
nop
stc
daa
jnp
lcall
nop
xchg
jp
mov
lods
movsl
mov
mov
in
nop
cltd
sbb
jns
mov
aaa
sbb
pop
or
mov
sbb
and
or
mov
pop
mov
or
pop
popf
push
sub
fcoms
out
sti
outsb
mov
mov
jl
int
ret
dec
xor
lea
orl
and
jbe
sti
nop
fcom
sub
inc
dec
es
outsl
mov
or
negb
mov
std
sub
add
fidivrl
clc
pop
sub
xchg
xor
lock
mov
mov
mov
jns
add
lds
insb
pop
cwtl
xchg
es
pop
jle
ret
out
adc
jmp
fwait
jae
movsb
dec
je
jmp
cmp
stos
fnstcw
push
cmp
lcall
xchg
lods
into
ds
paddw
out
pusha
scas
pusha
mov
mov
and
pop
adc
test
push
inc
sbb
enter
mov
cmovns
imul
adc
iret
push
dec
mov
shlb
lds
aam
call
scas
out
leave
popa
sbb
mov
inc
out
add
shrb
jb
int
cs
pop
gs
mov
sbb
fwait
cwtl
ja
jmp
jb
xor
into
cli
in
ds
fidivrl
les
stos
push
pop
jl
pop
out
mov
xchg
out
punpcklwd
push
test
dec
xor
lret
shll
mov
jmpw
pop
dec
roll
push
daa
sarb
insb
mulb
rcr
jmp
in
lds
rol
pop
jp
dec
xor
lds
push
sbb
sub
adc
test
mov
test
add
sbb
fidivrs
jns
cmpsb
push
jg
sub
enter
shll
jmp
push
in
dec
push
cli
add
sbb
sahf
push
jl
cs
sbb
jns
xor
xor
imul
push
add
popa
lods
xor
inc
les
sub
xor
cmp
leave
movsb
pop
and
pop
icebp
pop
dec
push
test
pusha
outsl
cld
fldl
enter
sahf
dec
popl
scas
cmc
cwtl
loopne
mov
in
test
stos
cmp
popf
ss
cmc
add
xor
lods
or
push
inc
addr16
insb
and
shr
shl
fs
sbb
and
push
push
icebp
xchg
jecxz
jl
test
inc
xchg
lret
mov
cli
les
jne
adc
dec
cwtl
adc
cmp
out
test
sahf
testl
out
jg
mov
sub
daa
je
in
fcompl
xchg
fdivs
outsl
xor
sbb
test
and
jmp
out
mov
cmc
lret
scas
push
fdivrp
shrl
movsl
jle
push
push
mov
bound
lahf
dec
mov
popa
push
int3
jg
cmc
shl
mov
data16
fidivs
inc
int3
loopne
and
hlt
clc
ss
negl
fldenv
pushf
dec
jbe
test
sbb
icebp
cld
jg
ss
lret
aaa
mov
cmp
ds
out
pop
inc
jge
les
cmp
mov
and
mov
ret
push
ja
sub
rclb
inc
jbe
call
data16
push
in
lcall
adc
or
push
div
rorb
xchg
aas
jno
cld
xor
add
cmp
filds
fsubs
pusha
les
mov
mov
sbb
xchg
xchg
cmp
movsl
and
jle
mov
mov
pusha
lret
popf
repz
ljmp
and
lahf
xor
pop
pusha
lret
mov
sub
fildl
les
and
scas
mov
in
mov
je
into
js
popa
sub
loope
or
clc
adc
pop
insl
cli
movsb
mov
mov
in
add
test
fnstcw
fldl
lcall
loopne
scas
dec
xchg
or
or
iret
pop
add
sti
adc
ja
inc
jg
rcrb
fwait
cld
mov
and
sti
daa
cli
and
or
les
nop
in
cmpsl
dec
sub
arpl
sub
add
movsb
inc
pop
std
ljmp
push
and
jle
out
inc
dec
scas
cld
out
mov
shlb
ds
jae
jl
xor
das
jns
pop
cwtl
lea
fiadds
aad
xor
ds
stc
inc
xchg
test
or
rol
sbb
hlt
dec
mov
xchg
pop
pop
shll
cmpl
aad
fidivl
mov
add
xchg
lea
jl
inc
mov
mov
sub
adc
sbb
test
in
mov
sub
arpl
mov
out
adcl
jae
sarl
cmp
pop
pop
sbb
loop
xor
sub
sub
xchg
adc
cmp
jne
adc
xchg
ss
daa
aad
stc
jp
or
or
test
jg
xlat
scas
bound
xor
add
jnp
fldcw
sbb
out
imul
pop
lods
dec
jb
pop
sbb
idivl
xlat
dec
xchg
add
cli
push
inc
jge
cmp
or
jne
imul
mov
neg
cmp
test
push
lods
sbb
mov
sbb
testl
test
icebp
hlt
addl
fwait
jo
in
adc
add
dec
fmul
mov
lret
cmp
xchg
lock
inc
adc
jge
std
jnp
dec
mov
mov
sbb
ja
cmc
jbe
jae
xchg
jecxz
jecxz
addr16
aam
ljmp
roll
js
mov
jns
mov
push
cmc
pusha
push
push
lods
gs
nop
jnp
idivl
mov
pusha
inc
les
insl
out
jl
jne
or
push
mov
test
mov
les
gs
cmpsb
push
rcrl
push
dec
scas
in
mov
mov
cwtl
sahf
ret
xorb
or
add
outsl
mov
jmp
movl
ja
adc
jge
mov
ljmp
pop
popa
sub
sahf
xchg
cld
and
fs
orb
imul
jmp
dec
mov
pop
sub
stos
lods
or
inc
and
dec
pop
pop
inc
mov
bound
adc
and
xchg
dec
cmp
mov
je
outsb
psrld
scas
xchg
sbb
xchg
jmp
sub
ja
test
cmp
cmpb
aas
push
repz
cmp
clc
add
adcb
adc
mov
jmp
push
add
testb
push
or
xor
dec
popf
stc
rclb
dec
lret
push
leave
outsb
cbtw
cmpsl
mov
push
int
imul
inc
add
xor
mov
jno
out
test
mov
sbb
ss
dec
fwait
std
fs
mov
xor
pop
rorl
ljmp
imul
and
imul
in
jmp
fdivrl
pop
dec
mov
mov
in
sub
pop
je
push
loope
aas
adcb
pop
pop
out
sbb
adc
ja
inc
sbb
sbb
ds
mov
cmp
hlt
cltd
pop
and
push
cmpsl
adc
pop
cmp
xor
rcrb
pusha
xchg
jns
idivl
mov
lcall
jmp
pop
sti
or
xchg
xor
aad
je
mov
ljmp
enter
cltd
stc
mov
les
sarl
in
scas
ficompl
fldl
and
adc
and
dec
sbb
mov
pop
fs
test
mov
jnp
ss
pop
pop
das
add
xchg
jns
lods
fimull
in
inc
pop
addl
xorps
hlt
xor
cmp
mov
mov
add
int
fcomi
cmpsb
inc
repnz
sbb
add
popa
pop
and
inc
pop
inc
ret
inc
push
and
jmp
pop
cli
fsubs
imul
mov
add
cltd
lea
cli
xor
mov
loope
les
mov
ret
jno
in
jle
loop
and
mov
mov
loop
jbe
sub
jge
gs
jge
inc
xor
mov
sub
push
sbb
lods
jbe
jb
pop
or
ficompl
loopne
shlb
xchg
cmp
xor
ret
lcall
xchg
pop
in
jl
leave
lret
mov
arpl
sbb
xorb
cmp
push
lcall
inc
cmc
fdivrl
jo
scas
fists
enter
dec
mov
leave
xchg
jne
cmpsb
pop
mov
loop
in
jmp
repnz
test
leave
jl
inc
in
or
fadd
xchg
add
test
repz
incb
repnz
loop
shl
fsub
jge
aad
je
rcr
jns
cmpsb
pop
mov
nop
adc
loopne
loope
jno
cmpsl
or
pop
hlt
lret
xchg
mov
test
dec
push
pop
fisttps
das
mov
pop
dec
ret
pusha
push
xor
cmpsl
push
pusha
mov
pop
aam
clc
sub
testb
shr
mov
sub
into
xor
dec
cmp
jecxz
mov
inc
daa
inc
jp
shr
scas
xchg
and
loopne
mov
pop
sarl
dec
ss
jmp
pop
aad
out
aad
xor
push
cmp
lret
mov
mov
mov
mov
inc
cmp
push
xlat
sbb
outsb
cmp
out
jno
pop
mov
adc
int3
and
fwait
xchg
or
lods
dec
push
mov
add
dec
dec
cwtl
cmpsl
pop
sbb
mov
push
aam
cmp
mov
loopne
or
xchg
or
mov
dec
and
arpl
mov
lea
int
in
xchg
mov
scas
test
mov
stos
int
imul
ja
sub
leave
push
mov
out
orb
inc
pop
imul
and
adc
or
addr16
subb
pop
out
popa
cmpsl
xor
imul
inc
cmpsl
mov
adc
fnsave
xorl
mov
in
pop
mov
jge
fadds
fsubrs
lret
mov
idivl
cmp
jae
fdivs
ret
cmp
xchg
aam
pop
mov
inc
imul
int3
inc
sbb
out
fcmovnb
scas
subb
lds
push
iret
clc
dec
mov
or
stos
or
clc
jl
les
loop
pop
cmc
sbb
xchg
and
xchg
inc
ljmp
adc
roll
cmp
fldenv
imul
xchg
adc
out
jo
cmp
sbb
testl
mov
cmp
cs
mov
mov
adcb
xchg
test
lret
inc
insl
popa
imull
push
daa
addr16
int
das
stc
cwtl
and
pop
cmp
aad
loope
push
mov
lahf
xchg
jle
mov
pusha
xchg
push
in
inc
add
pop
out
jmp
pop
xchg
push
inc
pop
jb
cmc
add
sub
jecxz
push
mov
mov
xor
inc
jnp
popa
inc
mov
cmp
sbbb
xlat
cmp
xchg
push
dec
sub
insb
jae
arpl
imul
xor
ss
ret
inc
add
pop
int3
push
add
pop
mov
or
pop
lods
adcb
rolb
pop
addr16
cmp
cmp
pusha
les
daa
repz
jbe
mov
cmpsb
ss
xchg
sub
stos
xchg
shlb
aad
cmpsb
mov
add
mov
or
mov
pusha
push
dec
jae
pop
dec
dec
cmpsl
and
aaa
jae
jecxz
not
xor
cmp
addl
jae
hlt
lahf
mov
pop
xor
sbb
call
mov
sub
daa
rorb
dec
testl
inc
mov
xchg
fnstsw
push
or
jle
sub
mov
test
ret
push
or
enter
inc
or
mov
ds
cli
mov
outsb
repz
pop
mov
pop
cltd
inc
lds
in
adc
xchg
sub
pop
add
and
outsb
fdiv
xchg
sub
push
mov
or
cmp
cltd
arpl
inc
ja
jno
pop
shrb
add
dec
or
stc
push
sysexit
mov
mov
mov
jae
adc
xor
jp
jno
fdivl
or
out
test
xlat
aaa
cltd
add
lret
adc
ljmp
sbb
imul
sarb
mov
mov
jecxz
pop
push
mov
dec
sbb
push
pand
mov
addr16
enter
imul
sbb
xlat
jae
sbb
enter
repz
jg
mov
adc
inc
lahf
mov
push
mov
rorb
fwait
stc
es
repz
loopne
adc
push
and
jmp
daa
inc
mov
jae
fcmovb
lret
inc
insb
push
xchg
mov
pop
fmul
dec
mov
out
or
stos
cmpsl
test
sbb
push
and
push
xor
dec
mov
mov
mov
inc
data16
mov
nop
xchg
idivb
jge
sahf
jp
dec
pop
lods
shll
cmpsb
cmp
lods
inc
push
cltd
pop
loop
pop
lods
mov
enter
cwtl
lahf
xchg
jl
rolb
ja
sbb
js
es
cmpsb
cmp
mov
dec
fwait
jl
lods
out
insb
inc
and
dec
pusha
jae
jge
in
inc
mov
jp
outsl
xchg
and
std
cmc
movsl
mov
aam
ret
clc
mov
mov
jns
loope
and
mov
jmp
lods
loop
negb
adc
or
cmp
movsl
sti
sub
dec
push
sub
loop
pop
ja
pop
icebp
sti
pop
andb
pop
rcll
jbe
pop
cmp
jecxz
cmpsl
in
je
test
aam
loopne
out
adc
add
gs
add
sbb
arpl
js
cld
lahf
lds
xchg
xchg
fcmove
testb
out
mov
test
or
divb
adc
stc
cs
ret
pop
inc
cmp
mov
pop
xchg
dec
pop
lret
jge
pop
repnz
fildl
mov
clc
leave
and
jb
cmpsl
std
push
paddq
xor
sub
aas
jg
add
jg
mov
push
mov
pop
in
mov
stc
das
stc
outsb
dec
adc
int3
and
cld
jg
pop
dec
daa
andl
insl
mov
jp
lea
addb
lea
mov
adc
mov
dec
cmp
iret
cmpsb
stos
cmp
add
add
dec
xchg
stos
fs
xor
push
push
loope
pop
ror
out
or
gs
xchg
xchg
xchg
mov
push
out
shl
popf
repnz
adc
sub
sbb
aam
push
test
aad
cwtl
in
dec
nop
mov
orl
bound
pop
mov
mov
shlb
jle
fistps
and
andb
andl
xor
std
mov
ja
jnp
cmp
push
xor
nop
push
adc
shl
cwtl
cmpsl
push
es
out
jl
xchg
dec
jo
xlat
push
dec
mov
or
mov
xchg
inc
insl
out
add
leave
mov
sub
jmp
test
fisubrs
scas
mov
inc
pop
and
or
dec
fldl
sbb
jmp
push
insb
rcll
iret
call
and
test
repnz
push
ret
xchg
popa
mov
lcall
scas
repz
inc
xorl
stos
xor
mov
int
xorb
mov
pop
rorb
fistpl
das
leave
bnd
popf
fidivs
popf
xchg
push
repnz
cmpb
es
stos
xor
jmp
xchg
sbb
punpckhwd
adc
sub
push
pop
add
insl
mov
push
aaa
jns
mov
mov
jl
sub
push
cmp
fbld
lcall
aaa
jae
out
inc
rcr
pop
int
ja
sbb
sub
test
inc
mov
clc
outsl
test
xor
mov
lock
or
shll
xor
jb
dec
in
add
jl
inc
mov
xchg
cwtl
push
fiadds
int
mov
call
cltd
push
inc
and
out
ja
mov
into
adcb
lcall
int
xchg
jg
fildl
push
cli
mov
outsb
jb
or
mov
cs
sub
js
adc
mov
fisubrs
movsb
jae
sbb
adc
stos
idivb
aaa
inc
outsb
push
mov
pop
sub
cltd
and
cmp
pusha
mov
das
pop
mov
lcall
mov
push
movsl
push
lret
push
fmulp
cmp
mov
movb
jo
das
add
scas
jb
pop
pop
out
mov
insl
popf
jo
xchg
test
daa
xchg
fdivl
push
in
mov
xor
stos
in
les
mov
dec
cmp
das
jns
shrl
add
lahf
inc
pop
sbb
arpl
mov
das
imul
out
mov
adc
mov
adc
ja
cmp
xchg
mov
mov
in
test
and
daa
mov
aaa
cmp
add
xchg
mov
xlat
aad
sub
push
in
jae
inc
ds
cmp
pusha
sub
inc
jns
pop
aaa
outsb
mov
xchg
xlat
xchg
punpcklbw
cmp
mov
ss
mov
in
idiv
hlt
cmp
inc
in
mov
sahf
or
and
rcrl
fstpl
xchg
insl
cwtl
push
sub
inc
mov
mov
call
add
lds
jmp
icebp
iret
mov
push
sbb
cmp
cli
xor
jb
xchg
sbb
ljmp
xor
cmpsl
iret
inc
stos
adc
sub
ja
int3
mov
inc
bound
jl
mov
and
mov
cmp
clc
clc
xchg
cltd
imul
xchg
icebp
lret
pop
push
lods
mov
call
js
dec
fs
ds
add
inc
jl
insb
cmpsb
cld
and
dec
into
jl
lea
lock
push
stos
jg
imul
adcl
ret
jo
mov
jns
sub
bswap
xchg
adc
xchg
inc
outsb
dec
jne
int3
roll
sbbl
mov
adc
xchg
pop
jl
ljmp
sub
nop
lahf
nop
or
xchg
iret
scas
inc
jbe
cmp
dec
adc
gs
inc
xchg
fnstcw
fs
xchg
jmp
xlat
jne
cmp
arpl
cmp
xor
inc
mov
pop
lods
stos
addb
shll
jmp
or
inc
in
cmp
push
arpl
stos
rcrl
fs
mov
dec
mov
flds
pushf
jne
inc
xchg
int
cs
ret
mov
sub
jg
fs
lahf
aam
scas
pop
mov
imul
fldcw
adc
pop
xorl
repnz
testl
lea
aas
sub
mov
fwait
xlat
jns
loopne
push
adc
xor
sar
pop
pop
and
xchg
into
push
in
mov
shlb
add
push
shlb
push
lret
pop
popa
push
stos
rcl
add
daa
je
adc
xor
enter
cmpsl
fdivrs
stc
mov
icebp
xchg
rcll
das
dec
mov
sub
dec
mov
rorl
mov
inc
jl
jg
ljmp
cli
and
mov
jnp
popa
cltd
lods
sub
xchg
hlt
mov
in
lods
sbb
xor
pop
iret
pop
inc
fbstp
orl
xor
xor
jle
lock
jb
sub
pop
cmpsl
add
pop
stos
movsb
shlb
adc
lret
cmc
xor
adc
fcomps
jmp
mov
mov
mull
xchg
pop
jecxz
pusha
movsb
js
jle
orl
cmp
int3
pop
mov
jp
fsubp
dec
scas
lods
add
movsl
push
sahf
out
imul
or
jmp
dec
mov
dec
push
dec
insl
lods
ret
xor
scas
fstpt
cwtl
push
addl
cmp
ja
out
stc
loopne
xchg
ret
xchg
adc
outsb
roll
inc
outsl
outsb
fxch
inc
test
cmp
dec
int
fisubrs
cld
into
mull
or
pushf
inc
jae
pop
aaa
cmp
add
xor
jb
cltd
mov
std
jnp
and
stos
cwtl
push
out
mov
pop
loop
jae
push
cmpsb
out
fwait
test
cmp
xor
add
and
gs
imul
rcrb
jbe
or
test
aaa
les
inc
dec
insl
pop
popf
and
fstpl
push
dec
test
iret
insb
xchg
sub
push
mov
pop
aad
and
add
ss
scas
and
adc
adc
out
inc
mov
or
pop
or
dec
in
inc
cmp
js
and
inc
aad
jl
je
jns
and
ljmp
adc
sub
addr16
int
cli
xchg
fwait
data16
sbb
movsb
jp
jae
mulb
into
test
and
fucomip
shrl
enter
ljmp
adc
data16
das
aaa
sub
push
ljmp
or
cmp
add
cli
jp
cmpsb
shrb
or
lock
and
adc
add
sub
mov
inc
xchg
mov
push
loop
mov
xor
enter
mov
and
ja
pushf
sub
sub
mov
mov
mov
mov
mov
or
ljmp
cmp
pop
xchg
test
and
jae
incl
sbb
std
xlat
out
pop
addr16
or
xor
daa
push
stc
iret
jbe
pop
movsw
cmp
les
lea
pop
push
push
pop
sub
es
inc
cli
in
movsl
fwait
add
outsb
sub
outsb
cwtl
mov
mov
or
fidivrs
iret
sahf
fstps
or
jae
lods
out
pop
outsl
data16
xchg
or
out
sahf
sub
and
test
push
inc
out
xlat
popf
enter
cltd
inc
push
js
fildll
sbb
into
xor
roll
adc
mov
sub
jb
scas
ljmp
pop
test
mov
loop
in
sub
jp
and
hlt
test
jmp
js
xchg
pop
outsb
sbb
andl
aad
and
aas
push
pop
inc
cmp
sub
sbb
xor
mov
mov
aaa
loopne
jo
mov
mov
pushf
xchg
lretw
lea
bound
scas
in
or
xchg
jle
ffree
inc
shlb
addb
adc
repz
int3
cmpsb
push
test
repnz
jle
sti
jbe
mov
jg
in
push
add
and
xor
out
std
ljmp
lret
cs
pop
lods
inc
cltd
imul
push
ja
add
call
sub
mov
cmp
mov
mov
cltd
lcall
icebp
mov
mov
and
mov
test
pop
xor
dec
daa
lods
add
lea
push
sub
flds
popa
icebp
pop
into
imul
sbb
aad
call
fwait
cmp
push
mov
dec
jo
mov
call
cmp
cmp
add
ret
sbb
xchg
push
xorb
icebp
mov
sub
add
int3
jbe
push
sbb
leave
push
jle
mov
out
inc
mov
ret
jl
cmpsb
pop
pop
xor
mov
cmc
lods
xor
in
adc
bnd
loop
jo
cmp
and
ja
sub
jb
jecxz
push
adc
cmp
push
sub
sti
mov
in
in
push
clc
in
mov
insb
fwait
inc
sbb
sbb
in
mov
scas
mov
pop
jns
andl
or
mov
out
sbb
aaa
ljmp
xchg
push
les
cs
out
int3
xor
mov
mov
daa
loop
rcrl
push
cmp
jecxz
cwtl
ljmp
xchg
xchg
into
or
adc
xchg
pop
inc
ja
cmp
and
ret
mov
xor
jae
inc
and
clc
movsl
push
cmpsb
je
push
xchg
or
push
inc
fisubl
stos
loopne
rsm
inc
mov
mov
popa
fsts
pop
mov
jnp
jmp
add
adc
cmp
sbb
pop
into
popa
dec
inc
stc
stos
mov
xor
and
mov
jge
and
enter
rolb
setl
dec
fnstcw
loop
mov
dec
and
push
pop
leave
mov
clc
push
fdivl
sbb
ficomps
les
cmp
xchg
jbe
ss
push
and
clc
mov
mov
or
xchg
fmull
pop
jp
xor
push
test
jg
push
test
mov
mov
out
out
adc
cmp
ret
mov
pushf
repnz
rol
lret
add
jge
xchg
cli
insl
repnz
leave
int3
mov
jmp
das
jmp
cmpsb
mov
int
xchg
fucomi
xchg
out
xchg
sti
ja
loopne
movsl
jo
jb
test
shrb
inc
sbb
mov
leave
adc
fists
stos
lret
push
push
rorb
lahf
pxor
insb
lods
and
add
lds
cli
inc
jle
adc
das
rclw
js
cmp
ret
sub
test
or
movl
jl
test
stos
sbb
or
mov
dec
cli
xchg
mov
int
inc
push
sbb
add
jnp
inc
ja
xchg
cmp
gs
mov
fsubs
hlt
add
push
xchg
mov
mov
cmp
imul
sbb
jns
and
or
jnp
out
and
jge
inc
out
lcall
adc
orl
jp
xor
inc
je
fdivl
xor
mov
fsubl
ds
cmp
push
inc
pushf
sbb
xor
pop
mov
add
pop
loop
fldcw
or
xchg
negb
pop
xor
lret
jp
andnps
push
fstpl
mov
add
enter
sub
mov
xchg
xor
mov
popl
loop
pop
popa
or
push
hlt
out
inc
mov
xchg
movsl
test
out
pop
rcll
cld
loope
aad
packuswb
lret
and
and
enter
mov
imul
ds
lea
jnp
mov
sub
mov
mov
add
idivl
mov
and
inc
and
push
cmp
fisttpl
sub
mov
mov
cmpsl
loope
pop
idiv
push
mov
push
mov
add
sub
push
pusha
cmp
prefetcht1
mov
jae
push
add
mov
or
or
pop
pop
xor
lahf
add
std
pop
adc
test
scas
pop
add
movsb
jge
xchg
xchg
jle
jge
imul
jne
and
sub
insl
sbb
out
or
cmp
vpcmpgtw
or
mov
subb
sbb
dec
in
outsl
outsb
addr16
stc
mov
cmp
mov
lock
xor
in
shl
xchg
push
mov
and
ljmp
mov
shll
dec
lret
lret
cwtl
mov
mov
mov
in
push
imul
sahf
cmp
arpl
sub
jle
mov
adc
lret
xchg
add
dec
mov
adc
dec
xor
hlt
stos
inc
fistl
jp
jge
sahf
push
adc
lahf
loop
movsb
adc
and
dec
mov
mov
ficoml
jp
movsb
lcall
cmp
mov
aad
add
and
push
std
or
pop
stc
cmpsl
sti
in
aas
inc
xlat
lcall
sbb
ss
andb
mov
outsl
imul
xor
lret
add
mov
fsubrl
movsl
ficomps
leave
insl
sbb
pusha
add
addb
xchg
add
dec
inc
xchg
mov
cmpsl
and
xlat
inc
lea
loop
sarl
clc
or
sub
mov
daa
push
add
and
mov
orl
popf
sub
xchg
mov
popf
das
insl
aaa
testl
jp
dec
mov
in
and
mov
lods
jl
dec
repz
inc
imul
dec
cmp
es
cmp
push
lahf
jnp
ljmp
and
inc
cmp
fidivrs
dec
dec
and
pop
ljmp
inc
jnp
sbb
xchg
mov
xchg
and
cmpsl
pop
cmp
cmp
adc
stos
add
js
sub
in
in
rolb
test
outsb
or
fxch
push
test
scas
xor
jnp
fmuls
mov
push
addr16
jge
pop
pop
rcrl
push
push
dec
or
scas
cld
cld
sbb
cwtl
bound
insb
inc
pop
cmp
ror
xor
dec
inc
fwait
xlat
jb
cltd
adcl
inc
xchg
dec
inc
pushf
ja
mov
fldt
mov
pop
in
cmpl
mov
mov
popa
mov
scas
dec
cmpsb
rcll
aam
jle
scas
shl
fcomps
hlt
push
cmp
int3
jbe
addr16
xor
inc
scas
or
mov
test
fnstenv
dec
push
fwait
pop
mov
mov
je
aad
xchg
mov
push
mov
loope
orb
adc
or
push
ja
mov
pop
and
insb
daa
adc
and
inc
push
xor
push
ja
shlb
sub
adc
notb
rolb
mov
rcl
mov
sbb
add
sti
sbb
sbb
jmp
jne
and
sbb
and
js
mov
xchg
xlat
daa
jae
xlat
push
je
adc
sbb
rorl
pop
pop
cwtl
fstps
inc
ds
cmp
adc
add
sub
cmp
test
enter
mov
scas
loope
cli
pusha
lret
dec
xor
fcmove
cmp
adc
xchg
lcall
cmp
push
inc
xor
fwait
divb
sbb
inc
and
mov
sub
mov
mov
cmp
xlat
outsb
lods
aad
cmp
push
js
pop
cmp
movsb
inc
jo
dec
mov
test
dec
fidivrl
add
mov
push
inc
mov
callw
test
add
pop
pop
xchg
inc
lods
mov
sahf
loop
mov
mov
fstpt
xorl
sbb
repz
or
cld
repnz
xlat
sti
jmp
fstpt
fisubrs
mov
lods
insb
mov
mov
xchg
test
mov
push
test
scas
pusha
mov
cmpsb
pop
inc
outsl
dec
push
sbb
and
xor
adc
adc
inc
stos
rcr
fsubrp
lcall
xchg
addr16
insl
pop
xor
lds
jnp
test
and
add
xchg
enter
inc
rol
dec
sahf
addb
shlb
xchg
xor
cmp
pop
mov
jle
sub
xor
arpl
xchg
xlat
in
sbb
push
outsb
mov
jmp
adc
pop
cmp
xor
std
inc
xchg
mov
std
dec
sub
pop
push
sbb
out
lahf
dec
mov
imul
dec
push
enter
xor
pop
lahf
aam
fistpll
xchg
fsubrs
ja
cs
out
pop
xchg
cmp
incl
fnstcw
imull
insl
mov
rcrb
cwtl
xor
loope
or
push
dec
and
repz
and
xchg
repz
xor
pop
call
cmp
lret
aas
adc
clc
mov
scas
jnp
or
push
fwait
aad
xchg
pop
into
out
xorb
cmp
popf
jmp
mov
mov
leave
popa
fcoml
xor
push
and
or
loop
sbb
or
push
daa
jne
and
mov
aad
or
mov
sbb
jp
mov
pop
in
in
or
inc
adc
loop
fsubrs
cmp
adc
xor
cmc
ljmp
and
addr16
stc
mov
cmp
mov
imull
sti
loopne
jae
out
ja
cli
inc
add
lea
imulb
aad
icebp
out
lds
cmpsl
mov
ljmp
imul
jb
js
les
lahf
fmulp
ss
push
lods
faddl
aam
inc
xorb
cmpb
into
sbb
in
inc
xchg
shrb
or
xchg
mov
leave
movsl
stos
pop
dec
cltd
loopne
push
xor
cmpsl
jno
repnz
jne
adc
mov
lods
pop
inc
and
push
inc
enter
lock
daa
lret
jmp
gs
jbe
push
negb
push
pop
xchg
in
xchg
arpl
jae
movsb
xor
mov
loop
cli
rorb
sbb
mov
sub
push
data16
xor
mov
jbe
int
jp
dec
cld
lcall
scas
pop
adc
clc
jmp
hlt
xchg
pop
adc
inc
ds
jecxz
bnd
pop
loopne
movsl
lods
dec
aam
sti
adc
into
loop
imul
in
xchg
pop
inc
scas
dec
stc
rol
sub
adcl
dec
test
mov
pop
xchg
cmpsb
in
jge
xchg
mov
pop
sbb
lret
out
gs
xchg
mov
push
sub
dec
mov
cmp
add
repnz
popf
mov
loope
sarl
shrl
add
cwtl
jns
jns
decl
ss
dec
test
inc
in
inc
jl
adc
int
pop
jge
jo
mov
mov
inc
sbb
loop
mov
daa
adc
stos
adc
cmp
rcrl
enter
sbb
sahf
iret
jbe
lock
sub
imul
adc
lods
jle
sti
inc
daa
lcall
dec
movsb
popf
fwait
clc
mov
jns
dec
or
in
mov
adc
dec
js
in
data16
aam
lret
jae
inc
in
fdivl
lret
inc
sbb
out
pop
jnp
out
add
mov
iret
add
movsb
mov
je
xor
cmp
lcall
xchg
and
cmpsb
sahf
or
xor
jnp
mov
loope
push
bound
sub
sbb
cmp
add
scas
in
jg
lods
les
and
xchg
xchg
ss
rorb
inc
push
lods
sub
mov
and
shrl
push
adc
xchg
frstpm(287
inc
fucomi
scas
jp
dec
repz
repz
jge
movsl
xchg
aas
push
scas
ss
enter
jns
cli
cmpsl
add
stc
inc
sub
xchg
xchg
in
dec
icebp
dec
in
xor
jge
out
add
mov
xor
sti
out
inc
lds
jge
test
les
pop
sti
jge
jae
inc
add
pop
jae
es
push
test
pop
cmp
jg
mov
mov
mov
in
out
xchg
mov
cmp
fisttps
clc
or
xlat
stc
push
adc
xchg
icebp
rcr
sti
xor
adc
lret
mov
addl
sbbb
pop
cmc
mov
cmpsl
push
in
es
inc
or
pop
mov
jae
pop
mov
or
push
cmp
pop
dec
mov
jmp
jo
add
sub
cmpsl
cmp
sbb
dec
xchg
cmp
inc
push
pop
or
cli
jne
mov
add
out
mov
in
adc
ret
test
ja
push
push
push
mov
and
ss
sbb
xlat
ja
rcl
pop
movl
out
pusha
test
mov
aaa
bound
or
or
fidivrl
jmp
mov
xor
inc
mov
enter
dec
mov
mov
mov
cmpsl
sbb
lds
fimuls
sbb
push
or
sub
mov
lcall
push
movsl
sti
add
add
shrb
pop
sub
pusha
in
push
mov
enter
mov
add
add
pop
dec
push
pop
loop
das
xchg
add
outsb
push
xchg
inc
clc
xchg
sbb
xor
fs
movsl
icebp
lret
xchg
lock
loopne
repnz
adc
pop
sbb
pop
call
gs
adc
pop
lcall
test
mov
xlat
daa
xchg
aas
sbb
scas
mov
add
push
outsl
pop
fldcw
jns
aad
mov
xor
sarb
mov
jp
dec
orb
jb
mov
jmp
pop
cmp
add
pop
in
mov
mov
shll
pop
and
in
hlt
arpl
jno
add
orl
push
cmp
insb
dec
add
jae
fwait
mov
sbb
sub
xchg
les
ret
out
pop
xor
inc
stos
add
ljmp
shrb
jp
lods
jne
xor
mov
jl
insl
or
mov
lea
imul
pop
clc
sbb
and
test
lock
fsubrl
test
cmpsl
fstpt
push
icebp
pop
in
stc
xchg
es
and
add
fwait
push
and
imul
jp
mov
js
insl
adc
or
push
movsl
ss
mov
lret
dec
cld
dec
mov
sub
inc
mov
and
pop
add
fidivs
data16
sbbl
pop
xor
or
data16
ret
mov
push
fiaddl
mov
pushf
cltd
mov
ficoms
or
dec
test
adc
mov
in
push
xor
pop
ljmp
movsl
mov
imul
adc
test
out
sbb
adc
sub
jge
cmp
jne
movsb
xchg
inc
and
jnp
cmp
xchg
inc
and
push
mov
push
fdivl
loopne
fdivs
push
lret
jnp
stos
pop
js
test
popa
xor
push
xchg
mov
add
or
divb
das
jno
std
xor
sbb
int3
xchg
int
leave
scas
ds
mov
rcr
cwtl
mov
iret
fidivrs
popf
aas
xchg
jb
pop
or
pop
test
mov
mov
nop
sbb
sbb
xor
push
mov
aad
jl
pusha
cmp
xchg
rolb
push
les
push
mov
aam
testl
inc
outsb
push
insb
pop
lea
mov
add
fadd
sbb
pop
cltd
pop
cmp
scas
scas
mov
mov
and
mov
mov
and
mov
sbb
push
push
mov
ss
test
inc
dec
jbe
mov
mov
dec
fwait
adc
xchg
cwtl
mov
fwait
sbbl
js
pop
xlat
push
dec
inc
mov
movsl
sub
dec
mov
std
adc
cmp
mov
jge
test
mulb
into
out
psubusw
cmp
jne
mov
insl
xor
rorb
das
xchg
cli
pop
das
popa
pop
mov
mov
loopne
cmc
mov
neg
les
lcall
pusha
dec
inc
and
ds
fucomi
in
psllq
sub
fldcw
aad
pop
push
dec
andl
pop
gs
push
bound
pop
enter
mov
jae
pop
add
dec
jge
out
mov
inc
outsb
sbb
loope
push
mov
xor
shll
xchg
and
mov
fiadds
mov
das
sbb
leave
in
mov
push
mov
repnz
sub
push
xchg
icebp
gs
push
adc
leave
clc
xchg
adc
pop
cld
ret
aas
scas
mov
fnstenv
cmp
and
pop
xor
adc
loope
xor
popf
or
xchg
jp
ror
orl
aad
mov
xor
inc
imul
scas
and
jnp
sbb
xchg
push
jg
push
xchg
pusha
add
jae
idivb
xlat
bound
mov
popf
or
dec
mov
scas
xor
sub
or
mov
adc
add
rorl
les
insl
imul
xor
and
jbe
jp
outsl
cwtl
adc
or
or
or
mov
inc
gs
mov
je
push
aaa
stc
add
sbb
cmp
dec
imul
imul
cld
jb
mov
cmp
sub
addl
dec
adc
xchg
jl
add
add
push
push
xchg
aam
jbe
sub
stos
repnz
jbe
adc
fidivrs
out
outsb
outsb
imul
cmp
cmc
jne
push
insb
insb
sahf
push
mov
jne
cmp
ret
call
xchg
jnp
and
add
xchg
lods
sarl
ljmp
mov
jae
xor
je
xchg
or
shl
xor
mov
mov
pop
loop
roll
mov
subl
pop
js
out
sub
inc
cli
in
sti
cmc
sti
sarl
jmp
stc
ret
mov
int
xor
cmp
mov
js
adc
roll
into
xor
sbbb
push
stc
out
leave
pop
xor
lods
lods
sbb
mov
shrl
fistl
insl
call
pop
add
xchg
mov
nop
add
push
jecxz
in
ret
fsubrl
and
das
fbld
lret
sub
das
mov
push
push
xor
pop
push
jp
loop
lods
cmp
pop
cld
xchg
cs
jns
jmp
imul
mov
push
test
scas
sahf
adc
in
add
mov
adc
jno
aam
pop
je
stos
xor
xor
loopne
test
xor
ja
frstor
loope
pop
repnz
jle
pop
insl
inc
adc
cld
mov
pushf
dec
mov
mov
cli
cmpsb
js
stc
sbb
or
xor
or
fistl
mov
pop
shlb
fldt
enter
lret
sbb
shll
iret
pop
mov
test
adc
cli
fwait
imul
sbb
test
daa
lea
sbb
aaa
jg
outsb
mov
loop
mov
mov
push
mov
repnz
movsl
dec
inc
xlat
into
mov
push
rcll
jne
dec
shlb
xchg
fnsave
and
insl
xor
js
xor
mov
orb
jb
or
jo
push
sarl
adc
lahf
jmp
lret
mov
stc
or
cli
xchg
cmp
hlt
clc
pop
push
and
in
mov
icebp
out
dec
inc
xor
pop
fsubs
xor
sub
aad
dec
cmp
mov
inc
mov
and
cmp
pop
loopne
sub
movsb
inc
push
inc
out
adc
test
lods
rcl
push
jae
pusha
leave
mov
inc
and
sar
mov
mov
mov
call
xor
xor
dec
les
iret
cmpsb
arpl
fs
shlb
test
push
shrl
jge
dec
enter
clc
shr
std
sbb
aaa
std
sub
or
cmpl
mov
pop
add
or
divps
jb
andb
inc
jp
dec
add
sbb
mov
lret
add
pusha
insb
stc
cltd
cmc
je
xor
push
inc
pop
dec
pop
inc
lret
mov
mov
cmc
cmp
jno
add
mov
mov
gs
xchg
flds
adc
or
jnp
add
cwtl
fnstcw
leave
sbb
jp
xchg
xor
ss
stc
shl
push
icebp
icebp
pop
adc
fisubrs
in
adc
cltd
sbb
sbb
inc
xorb
xor
ret
mov
fiaddl
xchg
pop
fadd
pusha
mov
pop
lods
xchg
pop
ljmp
fstl
add
inc
push
sti
add
sub
imul
loopne
push
pop
mov
cltd
and
imulb
in
xchg
lock
jno
mov
shlb
data16
sarb
das
cmp
inc
add
push
frstor
cs
jns
lahf
nop
mov
loope
ret
sbb
sub
stos
jl
inc
lods
in
inc
arpl
or
lea
jno
inc
rcll
or
mov
das
mov
scas
dec
sbb
lahf
imul
cmp
mov
ds
call
test
push
jmp
xchg
fxch
int3
movsb
cld
icebp
inc
push
and
cmp
fs
adc
xchg
mov
mov
out
add
push
dec
pop
jb
jne
inc
adc
fucomip
cmp
stos
icebp
sub
cmp
dec
movsb
out
loop
mov
test
leave
stc
aas
sti
mov
fwait
ds
icebp
sub
xchg
int
xchg
pop
out
inc
enter
outsb
sbb
cltd
xchg
jl
lock
sbb
sbb
cmp
stos
mov
sti
mov
sbb
push
es
cld
pop
push
mov
aaa
movb
lods
int
in
xchg
aam
push
xor
cmp
mov
lock
mov
cwtl
push
cmp
dec
ja
outsl
inc
enter
jg
cmp
cltd
jbe
xor
lods
and
pop
shll
outsb
outsb
jae
popf
notb
mov
dec
ret
mov
push
adc
pop
in
outsl
sarl
xor
repz
push
cmp
lds
jne
aad
dec
mov
push
and
adc
insl
or
cmpsb
fnstsw
push
or
adc
inc
xchg
lods
mov
push
sub
fs
mov
mov
jmp
fidivrs
ds
je
mov
and
outsl
cltd
fwait
int3
jbe
inc
push
sbb
and
or
daa
xchg
mov
sti
jno
not
fs
cmpl
dec
int3
add
insb
dec
xchg
or
outsb
in
ljmp
ja
shll
frstor
hlt
mov
movsl
dec
adc
pop
stos
mov
cmp
aad
push
adc
insl
mov
dec
fsub
or
adc
cmc
mov
leave
daa
ss
test
sbb
jp
cltd
outsb
test
inc
jbe
stos
add
mov
outsl
loope
xchg
dec
sbb
lret
lea
dec
dec
xor
xchg
imul
or
xchg
adc
mov
cmp
repnz
xlat
mov
fwait
xor
xor
int3
sbb
js
cmp
add
into
sbb
fcomi
ss
aas
pop
mov
xor
imul
incl
negb
js
sub
lods
loopne
push
sbb
and
push
mov
test
mov
mov
aaa
std
mov
aam
jg
cmc
popa
lret
lret
lret
pusha
mov
dec
sbb
cmp
mov
inc
mov
movsl
push
mov
dec
lret
xor
push
mov
std
rolb
push
push
mov
xor
lods
mov
rolb
loopne
ds
fcomi
stos
shlb
dec
pushf
mov
lea
imul
inc
xor
xchg
mov
data16
imul
sbb
jae
negl
add
push
jno
xor
test
test
push
lahf
jnp
aam
dec
push
mov
push
scas
f2xm1
les
repnz
fcmovnu
mov
scas
push
mov
frstor
mov
fwait
leave
pop
inc
cmp
mov
mov
push
mov
cmpsb
mov
ljmp
mov
push
inc
mov
mov
pop
jnp
cmc
mov
mov
and
ror
test
out
or
es
push
mov
stc
jb
xor
or
push
sub
test
sbb
lahf
push
outsl
pminsw
push
and
shll
std
shll
movsb
in
push
and
scas
insl
mov
rcrl
xchg
ret
xchg
dec
outsl
sub
dec
fucomp
aad
paddb
je
xchg
add
shll
popa
xchg
adc
sbb
mov
mov
cmp
mull
push
inc
pop
cmp
ret
add
xlat
and
das
int3
adc
cli
cmp
rolb
push
mov
push
mov
pop
ret
sub
repz
xor
in
pop
cmpsb
aam
outsl
sahf
jmp
sub
dec
pop
ret
or
push
mov
imul
pop
lcall
jne
dec
push
mov
movsl
jno
dec
inc
sub
mov
sub
cmp
jne
inc
test
loop
call
cmc
cmp
sarl
jle
xor
cmp
dec
pop
test
sbb
push
cwtl
shll
xchg
cmp
push
mov
and
sar
loope
adc
and
inc
insb
in
mov
cmp
ffree
mov
movsb
mov
into
pop
sub
push
push
pop
cmp
out
sarb
mov
cmc
divl
or
push
subl
xor
inc
add
cli
sbb
push
xorb
push
das
inc
cmp
andl
adcl
mov
out
mov
imull
loopne
add
sbb
lret
mull
call
sbb
sub
mov
test
jb
xchg
insb
push
or
jnp
mov
push
jl
adc
jecxz
xor
insb
mov
add
sub
dec
add
adc
and
pusha
std
rcrl
add
or
xchg
mov
or
pop
adc
ds
lea
cmpsb
mov
addb
or
dec
ss
jmp
mov
sbb
pop
jnp
fiaddl
pop
addr16
lock
cmp
cmp
das
xchg
cmp
data16
mov
mov
lods
and
mov
lret
cmc
mov
icebp
inc
mov
cli
mov
dec
mov
ficomps
pop
icebp
and
mov
outsb
push
adc
inc
xor
mov
sbb
push
fcmovbe
mov
dec
xchg
popw
mov
pop
inc
shl
addr16
lock
popa
das
xor
jmp
test
xor
and
mov
les
ljmp
aam
or
dec
add
xchg
enter
dec
pop
mov
fcoms
mov
adc
lods
clc
push
dec
sub
test
clc
adc
add
push
jl
mov
mov
sti
fildl
mov
daa
pushl
lea
adc
jle
dec
mov
movsl
arpl
cmpsl
fidivrl
insl
push
loope
dec
mov
inc
mov
pop
sub
pop
pop
cmc
push
xchg
add
pop
incl
add
jo
cmp
inc
jp
loope
xor
sub
add
cmp
and
inc
out
cmp
sahf
mov
into
xor
mov
cmpsb
pop
push
mov
inc
xchg
xor
xor
push
inc
jmp
cmp
sub
pop
out
cmpsl
or
std
add
xlat
lahf
scas
movb
cltd
mov
add
jge
mov
gs
xchg
pop
call
cmc
scas
mov
scas
pop
pop
fsts
or
sub
sub
shr
mov
adcb
push
xchg
cmp
sub
jg
mov
pop
out
sahf
rcrb
inc
xchg
mov
loop
jno
sub
dec
leave
dec
mov
xchg
add
jo
pop
stos
xor
push
arpl
dec
pop
mov
aam
mov
inc
in
popa
fdivl
jo
out
leave
test
pop
fwait
jno
rorb
xchg
imul
into
push
push
loopne
adcb
call
into
pop
jbe
faddl
es
es
mov
sbb
xor
xchg
outsb
movsl
std
dec
mov
inc
int
lock
mov
popa
pop
call
dec
leave
lods
mov
sub
ret
sub
lods
fmull
sub
lea
mov
faddl
mov
jns
and
mov
ds
sub
sub
fnsave
sub
or
cld
jne
pop
xchg
das
xchg
mov
repz
inc
mov
iret
bound
push
pop
aam
fidivrs
add
sub
aaa
neg
jl
jmp
mov
jae
andl
mov
mov
push
orb
mov
sub
mov
out
lds
pop
repnz
and
pop
stos
aaa
stc
pop
jl
sub
in
fsubrs
push
push
cmp
xlat
adc
daa
cmc
mov
ja
mov
leave
js
lret
out
repz
loopne
xchg
push
nop
fnsave
cmc
into
lods
dec
test
in
add
fdivr
adc
mov
es
pop
imul
push
sbb
add
pop
ret
jno
sti
mov
lds
into
fnstsw
push
sub
push
push
push
gs
aas
mov
test
jp
xchg
push
and
sub
mov
sbb
inc
xchg
or
xchg
lcall
incb
sbb
stos
pop
lods
fs
add
rolb
xor
jne
push
xlat
jle
mov
adc
ds
add
jns
sbb
lods
fcompl
inc
push
or
and
pop
and
mov
std
dec
mov
mov
mov
fwait
hlt
sub
jge
push
inc
subb
outsl
mov
sub
mov
insl
lds
mov
lcall
cmp
xorps
pop
or
sarl
dec
cmpsb
fnstenv
stos
mov
jo
rcrl
in
lods
sbb
cmp
xorb
mov
mov
flds
iret
inc
push
mov
popa
adc
in
fnstenv
mov
js
mov
movsb
int
sub
ja
mov
adc
fwait
dec
adc
pop
dec
fcmove
dec
clc
inc
xchg
sub
adc
sbb
out
push
loope
inc
or
mov
mov
sub
fistpl
sub
sub
inc
call
xorl
insb
fcoml
jne
mov
test
push
shrb
outsb
or
sub
pop
pop
inc
push
mov
mov
aaa
cmpsl
repnz
lds
andl
add
jb
out
xchg
pop
inc
xchg
jg
inc
xchg
fldt
aas
mov
pop
cld
dec
and
sti
out
ss
std
into
loope
xchg
adc
fdivrl
inc
push
movsl
mov
mov
sbb
loopne
outsl
popf
mov
inc
out
in
into
xor
mov
xchg
add
cli
lock
ds
jne
cmp
adcl
pusha
push
es
cmpsl
cmp
xor
stc
enter
pusha
push
ss
sub
stc
push
repz
cmc
push
test
mov
aas
jns
lock
add
mov
adc
pop
loop
fxch
inc
cmpsb
rclb
out
inc
jno
int3
ja
cld
cmp
cwtl
add
push
lret
aad
and
int3
xor
mov
xor
add
sub
daa
jb
pop
in
cmp
adc
movsb
or
sahf
loope
inc
lahf
pop
fdivrs
rcll
sub
in
aad
shll
or
push
jno
popa
loopne
sbb
insl
push
or
cmp
arpl
or
xor
add
adc
push
shrb
imul
mov
push
jmp
jmp
loopne
sahf
cwtl
shll
jae
xlat
xchg
pop
outsb
call
inc
popa
jmp
xchg
sbb
movsl
sub
test
fcomp
test
sbb
mov
sub
or
or
dec
incb
push
lahf
push
mov
lds
mov
mov
cwtl
dec
lcall
insl
adc
sti
and
ss
icebp
jecxz
cmp
mov
pop
fdivl
cltd
cmp
xchg
aaa
adc
nop
test
jle
jb
es
mov
pop
inc
jo
push
stc
xor
out
mov
xchg
cltd
inc
jnp
fistpll
movsl
and
popa
dec
scas
mov
shll
negb
dec
jo
pop
and
scas
inc
pop
jecxz
sub
lea
das
data16
mov
pop
sub
inc
sub
push
and
mov
adc
mov
and
add
or
int3
or
insl
cmp
mov
and
bound
inc
xor
sbb
xor
pop
int
xchg
cmpsl
or
fmuls
dec
dec
fidivrs
mov
aas
roll
mov
arpl
rolb
les
outsb
inc
scas
dec
pop
in
rorb
fs
or
sub
inc
insl
or
mov
inc
mov
xchg
fimull
mov
mov
cmp
mov
lds
cmp
in
inc
jge
push
xchg
fs
sub
adc
loop
ret
mov
push
push
inc
fists
lods
dec
popf
or
dec
sbb
hlt
imul
sbb
mov
jnp
and
inc
jmp
cwtl
addr16
int
js
in
and
mov
pop
pushf
push
pop
jmp
xor
scas
sub
jb
out
test
inc
add
xchg
aad
das
push
or
sbb
shl
mov
sbb
lods
pop
add
aad
lcall
enter
lea
xchg
mov
sub
adc
clc
gs
xor
push
add
sbb
dec
lea
inc
out
pop
mov
aas
or
add
bound
mov
fimull
inc
dec
or
mov
xchg
jb
out
popa
and
xchg
lock
into
push
and
jl
xchg
dec
in
cmp
je
mov
push
pop
repnz
cld
repnz
jmp
loope
lds
rcll
ficomps
adc
push
jge
pop
mov
jno
mov
les
mov
fisubrs
out
add
cwtl
shlb
into
ret
or
xlat
dec
pop
insb
ret
mov
adc
dec
fisubl
cmp
jp
pop
insl
push
test
or
int3
adc
mov
add
push
daa
aad
xchg
xchg
fiaddl
cmp
fbld
dec
cld
jns
das
mov
push
inc
icebp
insb
or
inc
mov
cli
pushf
insl
bound
cs
cmp
mov
mov
lahf
pop
popf
fidivs
test
call
mov
sti
aas
cmpsl
adc
cmp
lret
mov
mov
in
scas
pop
fwait
test
enter
mov
or
ss
cvtdq2ps
push
js
ja
popf
push
push
aad
mov
icebp
int3
scas
add
push
pop
jno
xlat
data16
adc
pop
pop
mov
imul
cli
lods
enter
xor
sub
je
xchg
scas
repnz
and
dec
arpl
popf
insb
sub
cmpsb
cld
gs
adc
js
gs
filds
inc
dec
mov
idiv
xor
mov
push
jmp
push
scas
sbb
rolb
jge
mov
and
sbb
sub
jmp
idivb
dec
sub
mov
js
sbb
mov
ja
dec
cwtl
dec
mov
popl
add
pop
mov
out
sbb
push
xor
inc
idivb
rdpmc
test
add
test
pop
fnsave
sti
rolb
push
into
lock
rol
mov
icebp
pop
notl
push
jge
inc
push
lods
insl
std
sub
popf
or
imul
daa
cmp
pusha
pop
and
mov
cltd
jge
sti
jo
jle
push
repz
lods
xlat
cmpsb
push
imul
shll
and
pop
sbb
daa
pusha
add
mov
cmp
or
negb
push
in
dec
xchg
xor
pop
test
jp
shl
push
mov
mov
shrb
xchg
xor
add
aad
shl
in
pop
dec
sub
insb
mov
pop
mov
aam
mov
outsl
mov
cmpsb
lret
mov
shll
ljmp
std
inc
and
std
scas
cmp
xchg
mov
ss
ret
out
aaa
stos
jmp
stos
cs
sub
shr
ja
sub
jno
jb
sbb
pop
out
lods
or
rcrl
test
test
xchg
clc
inc
call
mov
cmp
adc
push
sbb
lahf
scas
orb
scas
mov
imul
jmp
aaa
fsubrs
lret
jp
aam
xchg
cmc
push
rcrb
push
xor
dec
mov
mov
arpl
les
or
popa
out
cld
sub
ret
fs
adc
insb
mov
int
push
push
inc
xor
les
xchg
cmpsl
cmp
mov
ficoml
push
aas
dec
dec
push
imul
jmp
loop
cltd
sarl
sti
jg
lahf
pop
ret
popa
push
mov
out
sub
popa
leave
or
arpl
and
ja
testb
mov
jae
imul
sahf
je
test
adc
xchg
aaa
jae
inc
in
movsl
and
adc
jae
mov
ljmp
ret
xor
pop
lcall
cmp
or
std
add
cmp
jmp
mov
push
subb
inc
mov
mov
jbe
ds
inc
mov
cld
rorb
hlt
mov
xchg
or
dec
sub
daa
mov
cli
ljmp
cmp
enter
sbb
icebp
sbb
xchg
loopne
out
sbb
xor
divl
mov
scas
add
mov
or
sbb
jo
jge
lahf
stos
xor
lret
inc
add
ljmp
xor
mov
loop
rclb
dec
faddp
mov
jnp
cmp
sbb
aas
enter
cmp
jmp
push
mov
out
push
loopne
mov
push
and
inc
jecxz
xchg
gs
and
fidivrl
pushf
imul
cmp
repnz
xchg
inc
fsubl
cs
out
adc
or
pusha
cmc
lock
dec
mov
fwait
scas
and
jl
xor
xchg
hlt
sub
loop
cwtl
ds
mov
mov
add
in
lds
jecxz
lods
add
jle
mov
mov
jp
cmp
pop
dec
sbb
pop
add
pop
add
stos
mov
sub
jmp
je
adc
leave
mov
sbbb
add
fdivrs
popa
icebp
sbb
clc
in
iret
stos
jbe,pt
imul
les
cmp
cmp
jge
cmp
bound
or
fdivrl
in
mov
dec
xchg
dec
push
or
jge
and
mov
push
mulb
daa
pop
imul
push
pop
mov
mov
fisubrl
out
inc
js
clc
pop
aad
adc
mov
mov
sub
imul
cmp
dec
adc
push
popf
lock
fidivs
roll
js
gs
and
push
mov
movsb
push
pop
or
dec
add
into
sub
insl
push
fstcw
jl
inc
imul
push
cmc
cmp
jecxz
cmpsl
xorb
data16
movsl
popf
jae
jmp
sti
cld
sbb
xchg
inc
out
push
arpl
mov
add
out
adc
out
inc
and
add
xchg
nop
jmp
ret
or
or
ja
rorb
jge
mov
jns
inc
stos
leave
mov
pop
testl
in
mov
es
xchg
sub
insl
int
outsb
sbb
test
int3
mov
cltd
add
scas
jmp
das
inc
dec
subl
into
jno
push
repnz
enter
sub
adc
mov
jno
mov
ljmp
mov
gs
ljmp
std
mov
hlt
xchg
push
rcr
mulb
movsb
or
adc
adc
aas
fistpll
jnp
add
mov
mov
loope
cmp
jb
fcmovbe
leave
push
sub
mov
and
sbb
jp
adc
call
jne
lock
aam
mov
or
mov
insl
sub
xchg
aaa
jne
rcrb
lods
je
add
mov
test
cli
je
test
push
mov
inc
and
je
loopne
enter
xor
aam
xchg
jg
shlb
push
aam
lods
dec
inc
je
int
dec
adc
popa
aad
mov
add
mov
adc
gs
sahf
or
cmp
jno
stos
pop
jp
mov
jo
xchg
adc
int3
iret
hlt
adc
jo
mov
cmc
repnz
mov
inc
mov
shl
add
ss
pop
pop
xor
sbb
xor
xorl
mov
dec
mov
mov
ljmp
mov
mov
daa
sub
pop
inc
push
mov
mov
pop
mov
cmp
dec
push
es
call
cmpsb
pusha
pop
dec
test
dec
xor
mov
and
outsb
popa
pop
dec
int
jle
push
cwtl
lock
adc
xchg
loopne
out
mov
movsb
in
mov
push
nop
xor
cmpsb
data16
mov
sbb
mov
imul
stos
xlat
fxch
xchg
push
out
repnz
add
mov
pop
rcrb
sub
pop
push
pop
sahf
mov
test
sbb
add
add
popl
push
sub
cmpsl
stos
ja
cltd
aaa
cli
aam
lahf
loope
pop
inc
imul
xchg
movsl
int
incb
fcomps
xchg
lods
xor
inc
iret
mov
ss
jmp
cs
popa
lret
jecxz
jge
adc
push
adc
or
sub
fwait
inc
cmp
gs
mov
bound
or
loopne
in
mov
jl
test
daa
mov
pop
gs
into
push
push
jge
sahf
add
psubsw
push
int
ja
sarl
enter
fs
bound
jg
roll
mov
cmp
out
shlb
push
jns
push
ja
in
push
add
pop
xor
lea
jg
cld
mov
mov
mov
cmpsb
testb
int3
fmull
mov
adc
push
inc
xor
addl
cmpsl
xchg
cli
xchg
fsubrs
push
push
pop
dec
lcall
mov
aad
jp
rcrl
je
aam
fs
push
cs
pop
cltd
and
or
sti
push
xor
push
mov
or
add
inc
jne
aad
xchg
aaa
imull
ret
mov
cli
mov
jo
shll
cmp
inc
fs
jbe
insb
push
fbstp
or
add
ret
aas
ljmp
and
mov
adc
pusha
fildl
fsubrs
or
add
test
mov
sar
adc
int
les
jmp
or
cmp
cmc
add
lret
add
cmpsl
mov
loopne
jns
push
xor
rcll
adc
xor
jae
cmp
xor
inc
add
push
test
jmp
xor
and
adc
sti
dec
sub
ljmp
mov
into
lret
push
inc
or
inc
jns
mov
xor
pop
mov
push
jmp
sarb
out
mov
leave
mov
pop
mov
mov
mov
daa
sbb
xchg
xor
mov
add
add
div
xchg
mov
sub
jnp
lcall
jae
xchg
xchg
dec
push
cmp
cmp
or
sbb
or
shl
push
xor
outsl
daa
loopne
sahf
imul
mov
mov
xor
je
clc
mov
push
addr16
mov
xchg
ja
ljmp
out
lcall
jnp
sub
fsubp
xor
aad
lods
stc
imul
out
lock
mov
lahf
movsl
mov
push
lea
dec
vucomisd
xchg
lahf
int3
fstl
cld
mov
jo
fmuls
test
mov
xor
lock
sti
cmp
js
test
mov
in
mov
push
pop
adc
or
int
in
fidivs
lods
lcall
arpl
test
shl
mov
fidivs
and
imul
cmp
enter
and
insb
mov
xor
pop
int3
xor
loop
pop
ret
into
jnp
xor
test
jle
in
mov
fistl
sbb
cmp
in
les
mov
inc
sbb
pop
outsb
sbb
and
pop
fdivs
fmul
add
sbb
inc
enter
ss
jbe
mov
cmp
cmp
cmp
xchg
cwtl
das
aad
je
aaa
aad
jno
adc
adc
dec
incl
and
out
jle
mov
mov
inc
sub
cmp
lcall
mov
je
js
dec
scas
dec
mov
icebp
cmp
add
mov
das
adc
xchg
xchg
in
mov
add
inc
outsl
xor
xor
push
loope
cmp
jo
pop
rorl
dec
arpl
pop
inc
inc
mov
cmpsl
outsl
mov
mov
or
sub
lods
mov
mov
jns
or
xchg
mov
add
and
push
xchg
mov
inc
mov
mov
cmc
in
insb
movsb
fistpll
scas
and
mov
dec
push
out
je
or
loop
pop
in
pop
pop
adc
mov
inc
mov
das
dec
lcall
mov
xchg
lret
mov
stos
insl
or
sub
fcmovnu
clc
fincstp
mov
xchg
sar
aas
jns
or
pop
adc
and
xor
xchg
sti
jnp
dec
jmp
mov
loopne
scas
dec
nop
je
or
pusha
inc
mov
add
cmpsl
mov
jne
stos
sbb
out
out
sub
xlat
or
cmp
cltd
iret
pop
repz
pop
outsb
push
add
xor
xor
dec
iret
xchg
js
test
test
cmp
jnp
ficompl
xor
ss
lea
ss
jp
sbb
push
pop
repnz
lock
cmp
es
push
xchg
or
enter
clc
es
adc
fcompl
lahf
push
pop
stos
lds
fadd
mov
bound
mov
cmp
incb
je
ficoml
sbb
xchg
movsb
test
sbb
or
mov
xchg
gs
inc
cmc
dec
mov
jp
mov
in
call
adc
jbe
sbb
cmc
mov
push
mov
outsl
inc
add
decl
mov
jae
xor
loopne
adc
mov
push
stos
out
pop
sahf
sbb
pop
inc
pop
inc
add
inc
mov
xchg
pusha
cmp
push
and
or
dec
mov
pop
add
cwtl
mov
jo
xchg
adc
pusha
pop
sbb
in
mov
mov
sbbl
rorl
sbb
iret
or
jne
add
mov
sub
push
bound
into
aad
pop
insb
cmp
lret
movsb
dec
adc
push
stc
aad
and
inc
test
jecxz
sub
xchg
pop
arpl
dec
mov
mov
cltd
out
xchg
push
jg
ret
push
lock
roll
lock
xor
mov
dec
mov
out
jb
dec
xchg
sub
push
in
pop
sahf
aad
lret
int3
roll
mov
popf
leave
hlt
pop
ret
pop
aad
in
sbb
or
les
test
in
mov
call
popf
lock
je
fcomps
dec
xlat
mov
ljmp
dec
ss
mov
mov
insb
mov
mov
xor
loopne
sub
sub
push
mov
test
mov
dec
sub
xchg
jge
repz
mov
mov
test
mov
mov
insb
lock
daa
sub
pop
cmp
rclb
in
idiv
sub
fisttps
mov
loop
push
lock
inc
sbb
or
mov
dec
sbb
inc
jb
shll
mov
jecxz
xchg
cmp
test
mov
cmp
pop
pop
cs
je
and
cwtl
in
scas
fsts
jge
cmp
sub
push
frstor
cld
pop
loopne
pop
cmpsb
test
ss
popl
and
adc
fcmovnbe
pop
sbb
or
jne
add
test
ds
push
cmp
cmc
int3
pusha
push
ss
jg
sti
or
scas
xchg
xor
adc
or
mov
out
imul
dec
dec
cmpsb
aad
pusha
and
push
fadd
mov
lret
cld
imul
clc
aad
out
and
fiaddl
std
outsb
std
xor
pop
movsb
shrl
leave
jecxz
jno
lea
addl
jg
add
jae
dec
test
enter
in
pop
push
inc
outsl
push
ss
negl
sbb
cmpsb
sub
negb
jo
lret
jmp
js
mov
hlt
cmpsb
pop
ficoml
outsb
push
bound
add
enter
ds
sub
pop
push
xor
push
or
mov
mov
inc
cmp
aam
int3
in
adc
jmp
lcall
push
inc
dec
cmp
inc
ja
arpl
jne
mov
repnz
adc
add
ljmp
in
arpl
fadds
popf
fistl
in
mov
or
inc
push
test
xor
popa
ret
cmpsl
mov
ja
outsb
push
sbb
dec
call
insb
mov
jno
scas
fwait
nop
ss
int
mov
pop
xchg
in
jo
xchg
in
in
idiv
aaa
jle
sub
testb
xchg
mov
xchg
pop
std
push
and
push
outsl
test
ret
aaa
outsb
sbbl
mov
popf
xchg
xchg
clc
and
push
inc
adc
test
jle
leave
dec
lods
loope
dec
cli
mov
cmp
das
mov
std
fcoms
leave
push
out
rorb
dec
sbb
cmpsl
test
pop
xor
cwtl
ja
int3
xor
inc
sub
in
dec
sub
mov
pop
mov
mov
inc
fildl
fadd
clc
mov
xor
ffreep
sub
repz
test
mov
bswap
scas
es
mov
sti
test
sbb
xchg
rclb
mov
imul
sub
std
push
mov
pop
dec
movsb
in
add
pop
cmp
pop
adc
sub
xor
mov
push
inc
xor
mov
std
icebp
jmp
lahf
pslld
insl
push
loopne
cmpsl
add
sbb
sub
rolb
lds
inc
xchg
sub
and
push
cmp
inc
clc
lods
out
xor
mov
scas
lret
pop
pop
ja
sub
mov
loope
mov
pop
or
mov
lret
mov
cli
xchg
pop
into
imulb
cli
dec
out
cli
scas
fisubl
rclb
xchg
and
popa
xlat
pop
lods
js
jecxz
add
sbb
jns
inc
sub
lods
mov
in
test
into
mov
sbb
and
cmpsb
aad
stos
stos
je
jns
lret
aaa
xchg
cmpsb
pop
mov
test
pop
cmc
inc
rcrl
test
or
imul
cmc
push
js
cmp
push
lock
mov
ficompl
adc
mov
mov
adc
push
cmp
aad
mov
mov
adc
jl
lret
lea
jmp
push
imul
push
imul
jl
sar
enter
imul
call
jns
insl
mov
lds
adc
xchg
bound
xchg
or
out
repnz
cmp
stc
in
or
fcmove
pop
or
push
push
stc
loope
dec
cmpsl
push
xor
add
insb
adc
sub
pop
inc
rolb
aad
mov
inc
push
mov
and
std
cmpsb
addb
pop
leave
push
xor
mov
adc
pop
and
mov
push
arpl
dec
inc
mov
lods
call
mov
jg
adc
fimull
lods
sub
sub
mov
sahf
jb
int
iret
xchg
jnp
dec
out
int3
jp
enter
out
xor
adc
inc
into
dec
jnp
mov
jbe
in
adc
cmpsl
out
outsb
jge
lcall
jns
inc
leave
push
nop
push
add
xlat
mov
int
dec
popa
lret
movsl
jl
ljmp
sbb
xlat
mov
mov
or
xchg
lock
lods
aam
aaa
pop
fsub
imul
jle
mov
sub
fisttps
cmc
cmp
pop
xchg
mov
mov
or
and
mov
sahf
mov
sbb
or
xor
lods
jge
or
lahf
ja
xor
mov
and
jae
repnz
pushf
push
mov
mov
popa
pop
rcrb
add
sbb
in
mov
cmp
mov
push
int3
xadd
rcrb
xlat
sbbb
mov
jno
inc
mov
dec
mov
and
enter
xor
dec
jmp
mov
push
add
sbb
push
mov
cmp
add
mov
push
in
das
mov
lret
xchg
fisttpll
aad
les
add
repnz
mov
cmp
enter
aaa
ret
sub
enter
outsb
cmp
mov
add
in
jne
leave
pop
pushfw
push
adc
sbb
mov
les
pop
aad
sbbl
sti
sub
adc
popf
in
cmpsl
mov
mov
int3
push
aam
shrb
into
xchg
push
out
or
adcl
out
stc
push
sub
stos
xchg
std
hlt
movsb
pop
jmp
ret
mov
addr16
jnp
shlb
jae
mov
or
sarb
stos
divl
movsb
and
std
subb
and
test
mov
iret
jge
fstps
xor
aaa
pop
movsb
aad
mov
add
fisttpl
xor
ret
fcoml
sbb
lods
in
jno
fsts
push
int
daa
inc
mov
stos
pop
xchg
push
cmpsl
fst
andb
mov
mov
xchg
sbb
aad
fistpl
int3
push
mov
movsl
adc
fmull
mov
dec
aas
movsl
xchg
test
out
ljmp
mov
sub
xchg
popa
jno
punpckhdq
test
mov
adc
pushf
les
cmpsl
enter
adc
and
bound
shlb
addl
dec
out
fs
cmpsl
mov
outsb
jecxz
daa
lahf
mov
mov
sub
push
sbb
mov
dec
add
lahf
xchg
mov
in
sub
xchg
sbb
popf
inc
pop
xchg
push
push
add
sub
decb
jecxz
push
jbe
inc
mov
call
shll
mov
popa
in
sbb
push
mov
add
test
das
mov
push
jp
clc
std
repnz
scas
cli
sbb
sbb
test
push
aam
fnstenv
std
cs
cmp
sbb
mov
int3
xlat
pop
ljmpw
pop
xchg
dec
insb
outsl
push
cltd
js
sub
aad
cmpsb
movsb
xchg
outsb
jb
jecxz
and
in
adc
dec
sti
sub
mov
inc
jecxz
mov
in
mov
inc
lods
arpl
ret
inc
and
mov
mov
inc
ss
movsb
or
rcll
or
mov
mov
push
leave
ret
sbb
cli
pop
int3
popf
jb
sub
add
cmp
adc
aad
into
and
test
sub
sbb
cmp
mov
int3
push
lret
add
mov
pop
test
xchg
repnz
gs
test
inc
stos
mov
and
mov
data16
in
clc
mov
adc
cmp
mov
dec
repnz
insl
pop
cltd
and
push
mov
js
and
popa
aam
push
and
pop
mov
lahf
ret
js
or
pop
lret
adc
cltd
mov
cmp
xor
add
into
mov
xchg
sub
mov
xchg
jmp
sbb
mov
or
inc
pop
outsb
scas
dec
push
pop
inc
and
rep
out
jl
adc
dec
push
daa
jl
push
sbb
push
mull
ret
mov
into
mov
push
mov
lea
sub
daa
jg
jae
sub
int
lods
cmp
out
push
loop
mov
outsb
jbe
mov
xor
sbb
pop
fwait
cmp
ds
push
xlat
decb
mov
dec
scas
call
mov
mov
je
xorl
mov
inc
fcomi
je
gs
hlt
xchg
int
repnz
xor
mov
clc
fucomp
mov
xchg
cmp
mov
repnz
adc
shl
jmp
add
xor
test
xchg
push
mov
jl
mov
in
dec
jno
repz
aaa
pop
enter
aad
dec
fisttpl
xchg
sahf
sub
mov
stc
jae
sahf
in
mov
push
pop
sub
xor
sub
fst
addr16
scas
lds
jmp
scas
pusha
mov
jmp
test
sbb
lret
daa
nop
ret
pushf
mov
mov
push
outsl
mov
jne
loope
add
cmp
xchg
loope
jo
jle
inc
mov
xor
mov
mov
fisubrs
ja
jl
jl
in
insb
and
aam
mov
cmp
ja
sbb
sbb
fcompl
add
pop
data16
adc
popf
int3
jmp
addr16
dec
test
sub
sub
fdivrs
paddsw
pop
xor
mov
jge
nop
mov
xor
mov
je
scas
jp
lahf
mov
pusha
jge
push
out
jae
aaa
jp
sub
lea
loope
push
imul
mov
shl
aas
dec
jns
mov
rcll
and
movb
shlb
adc
xor
add
pop
ljmp
dec
test
rcrb
pushf
stos
lods
mov
fildll
aaa
cli
jb
pop
adcb
sub
xor
test
lret
imul
dec
jns
shlb
add
or
xchg
inc
push
cs
jae
data16
cli
cltd
pop
mov
push
popa
or
inc
sahf
xor
out
xor
lods
sarb
cmp
push
xchg
adc
cmp
dec
test
mov
inc
popf
jo
lret
cmpsl
imul
xor
lcall
fistl
pop
pop
lods
fmull
imul
xor
mov
incl
pusha
jno
push
or
call
sbb
int3
push
inc
mov
mov
mov
mov
pusha
or
dec
and
dec
je
mov
scas
push
roll
mov
mov
repz
das
add
sbb
rolb
cmp
mov
cmp
aas
mov
mov
mov
int3
adc
mov
iret
aam
ss
sbb
push
fbld
test
adc
inc
cld
xchg
mov
cli
adc
stos
xchg
mov
in
leave
mov
sbb
fmull
cmpsl
ss
lds
hlt
nop
nop
je
push
xchg
dec
rcr
out
xchg
popf
or
jno
fisubrs
test
hlt
mov
mov
inc
mov
sti
mov
xchg
mov
icebp
inc
lea
or
loop
aam
jmp
outsl
mov
mov
fcoml
push
jecxz
add
pop
sahf
pop
test
add
xor
sarl
in
add
or
cld
int
in
mov
andl
jnp
ret
repz
mov
mov
mov
test
out
adc
add
or
ljmp
bound
ret
aaa
xchg
push
shl
and
adc
xor
loopne
data16
loopne
push
out
pop
sub
dec
ss
mov
push
loopne
xchg
adc
es
inc
daa
and
sbb
nop
subb
sbb
sub
syscall
xchg
cmpsl
aas
test
fadds
xchg
xchg
xchg
or
iret
cmp
push
xor
add
or
outsb
mov
xchg
ja
add
xor
sarl
loopne
xlat
mov
fnstenv
jmp
mov
fidivrs
cmpsl
adc
ret
jae
aas
push
das
fisttpl
pop
jle
push
mov
mov
mov
jle
pop
mov
bound
cmp
mov
je
scas
add
cmpsl
aas
adc
sub
xor
mov
or
push
in
jg
dec
cmpsb
cmp
sub
ss
ret
outsl
cmpsb
cltd
in
data16
cld
jp
dec
shrb
cld
shll
xor
jle
ja
push
sub
fcomp
jnp
popf
or
inc
fidivrs
notb
cmp
pop
hlt
jp
pop
push
pop
imul
lock
lea
and
pop
shrb
or
lock
cltd
dec
inc
loope
sub
dec
jl
mov
sub
jnp
insl
inc
movb
ret
mov
inc
adc
sbb
mov
arpl
adc
or
ret
jecxz
pop
out
sub
sbb
jp
adc
out
inc
lds
in
icebp
lret
popf
push
andl
scas
sub
jle
scas
out
or
pop
mov
mov
fldt
daa
out
push
adc
xlat
mov
push
and
mov
iret
mov
test
fdivrs
add
jns
mov
in
icebp
and
lcall
lds
je
sbb
dec
jae
mov
in
add
enter
pop
gs
cmc
fists
hlt
add
dec
push
jnp
into
xchg
aad
cmp
stos
jns
cwtl
jno
jp
mov
cmpsb
or
xor
xor
dec
mov
pop
loope
push
test
pushf
or
shrb
sbb
call
mov
scas
flds
fs
lock
mov
fnstenv
dec
xchg
xchg
stc
push
loopne
xor
xor
fistps
es
add
mov
jbe
imul
xchg
xlat
xor
imulb
je
into
repnz
pop
mov
sahf
jecxz
out
pusha
sub
sarl
lods
fcompl
xchg
dec
jne
dec
jmp
scas
out
mov
xchg
lock
mov
lcall
sbb
dec
sub
mov
and
push
or
roll
stos
ss
jg
stc
mov
sub
shl
pop
add
mov
inc
jl
gs
aad
repz
imul
dec
lods
xor
lahf
dec
push
outsb
jb
iret
in
cmpsl
cmc
or
ljmp
int
xchg
fdivrs
adc
and
stos
js
or
fs
enter
and
imulb
mov
sub
jo
icebp
lock
or
test
gs
push
popf
push
xchg
push
lret
dec
inc
adc
andl
fprem
in
adc
sub
loopne
sti
dec
pop
jnp
stos
mov
xchg
xor
imul
sub
or
es
cmp
inc
dec
push
lds
jb
inc
xor
xchg
mov
jnp
mov
mulb
and
cmp
testb
cwtl
or
mov
div
in
stos
jg
mov
jmp
dec
jle
sahf
test
xor
testb
pop
fnstcw
dec
inc
add
lahf
lock
dec
outsl
pusha
jle
mov
divb
sub
leave
inc
xchg
xchg
scas
pop
push
push
in
and
xchg
data16
test
test
pop
pop
inc
inc
dec
xor
inc
xor
sub
mov
js
inc
and
mov
inc
pop
or
call
fbld
pop
cmp
mov
aad
cmpb
jb
inc
mov
loope
cltd
or
push
and
inc
xchg
push
std
ret
lock
ret
pushf
xor
iret
adc
cmp
cwtl
dec
add
lods
adc
cmc
mov
and
pop
pmaxsw
push
leave
mov
mov
pushf
add
int3
xchg
popl
sbb
rolb
sahf
push
in
sahf
jecxz
pop
inc
roll
in
iret
xor
es
inc
sti
out
pop
stos
add
cmp
add
imul
push
xchg
mov
movsb
push
icebp
add
mov
push
ret
shll
push
push
lods
adc
fs
lods
loope
call
pop
xchg
xchg
popa
fs
arpl
je
and
pop
inc
movsl
cmpsl
jmp
jp
mov
adc
aas
jecxz
stc
inc
dec
in
pop
mov
mov
dec
les
fimull
cs
mov
aam
fnsave
ret
aaa
jp
fcompl
xchg
je
push
outsl
cmp
pop
dec
in
loopne
addr16
fldl
ret
pop
add
es
addr16
ficoms
adcl
fs
sbb
or
repz
lret
xchg
or
cmp
leave
adc
mov
cmp
test
loop
call
scas
enter
ljmp
call
pusha
ret
mov
xor
movsb
lcall
push
sbb
lods
mov
movsl
pop
daa
mov
fisubl
repnz
mov
mov
inc
jecxz
in
push
inc
xor
adc
sbb
cld
or
pop
dec
dec
mov
movsb
daa
push
cmpsb
in
lret
faddp
xchg
fimull
inc
xchg
lcall
jmp
adc
lcall
and
add
pop
gs
cmp
lds
sahf
pop
add
sbb
inc
in
cld
cld
or
sbb
fimull
adc
outsb
in
dec
pop
mov
jmp
add
push
jg
pop
ss
dec
xor
sub
mull
cmp
loop
sub
popf
adc
xchg
int3
in
lahf
sbb
and
push
inc
fldcw
cmp
pop
mov
fstpl
pop
fisubs
mov
lds
and
ds
enter
movsl
sub
add
sub
xchg
cmp
imul
hlt
mov
mov
sbb
pop
xchg
das
fs
dec
mov
js
mov
incl
fisttpll
push
jle
push
mov
push
add
lods
popa
mov
adc
sub
rolb
and
sbb
xor
add
inc
mov
mov
pop
push
or
push
sub
pop
dec
daa
inc
fwait
cmp
push
push
and
and
cmp
push
adc
test
icebp
iret
pop
cmpsl
lret
fiadds
sub
daa
add
in
iret
popa
cli
stc
dec
push
mov
cmpsb
in
icebp
loop
dec
fwait
lcall
mov
test
imul
pop
push
push
push
shrl
testb
test
cmp
in
dec
xchg
lods
add
lock
into
icebp
jp
xor
fisubl
pop
ret
inc
jmp
sbb
fisttps
scas
jp
stos
xchg
mov
stos
repz
js
dec
popa
mov
push
mov
hlt
loope
rorl
gs
test
push
aad
pop
push
push
adc
aad
xchg
scas
ret
adc
jl
rcrb
xchg
jmp
mov
outsl
jg
push
rol
inc
mov
jg
lds
inc
rcll
inc
insl
in
xchg
out
push
mov
push
fisubs
push
dec
stc
mov
push
lock
inc
sub
pushf
adc
mov
sub
xchg
xchg
movsl
pop
mov
ret
ds
sbb
notl
scas
das
lods
in
pop
lahf
stos
or
push
in
jae
imul
inc
outsb
test
adc
sahf
xchg
jne
pop
sbbl
jecxz
enter
sub
mov
arpl
cmp
pop
jns
ds
fsub
aas
lahf
mov
fldcw
add
xor
lods
jno
test
insl
or
out
lret
pop
shll
fildll
lods
lret
negb
and
xchg
push
cmp
insl
into
imul
jae
repz
outsl
pushl
out
mov
push
mov
ljmp
or
pop
mov
sub
loopne
call
dec
cmpsl
cltd
sahf
nop
popa
cli
push
movhps
mov
daa
xchg
dec
es
sub
pop
or
rcrb
xchg
bnd
xchg
add
cmpsl
and
jecxz
mov
lret
cmpsb
into
jnp
cli
jnp
pushf
sbb
cmc
push
adc
ret
les
xchg
outsb
fstps
sub
mov
lret
in
imul
adc
or
mov
mov
add
lret
pop
test
dec
sub
fdivl
imull
lret
jno
xor
je
or
jmp
push
add
stc
les
sub
and
mov
pop
adc
jp
adc
sub
add
scas
sbb
hlt
cld
jo
shl
in
in
jnp
scas
jge
arpl
inc
popf
fcomi
pusha
out
sbb
ret
pop
and
inc
icebp
mov
sub
in
test
inc
adc
push
mov
cli
sub
cmp
sbb
jl
adc
iret
test
pop
lods
mov
or
push
adc
scas
mov
push
addr16
mov
cwtl
addl
mov
sub
shlb
dec
ja
std
mov
xchg
xor
jb
sbb
push
stos
push
push
dec
pop
add
fldcw
mov
adc
or
hlt
popa
iret
dec
xor
xchg
or
cmp
dec
mov
jno
addr16
adc
sbb
js
jecxz
mov
clc
test
inc
hlt
xchg
sar
dec
sub
adc
jb
add
outsl
scas
push
jnp
test
test
pop
ljmp
incb
push
ljmp
xchg
out
dec
addr16
loope
sub
mov
cmpsl
or
imulb
push
mov
into
roll
mov
jecxz
in
jns
fisttps
sbb
test
or
test
sub
cmp
fdivp
movsl
popf
fwait
sahf
sub
andb
xchg
or
addl
mov
mov
add
mov
mov
pop
or
enter
in
adc
repz
push
imull
or
jle
push
outsl
out
mov
cltd
pusha
test
daa
stos
xor
sbb
mov
pushf
mov
and
add
inc
lahf
fstps
sti
ljmp
mov
cmp
sub
mov
ljmp
inc
xor
fwait
clc
lods
jno
nop
jle
sbb
dec
xlat
adcl
add
loopne
out
add
pop
mov
mov
out
sub
popa
rclb
and
aad
test
xorl
mov
xchg
fistpl
cmp
pop
cmpsb
pop
add
and
push
or
add
testl
sbb
jp
mov
les
pop
push
lea
jecxz
rclb
mov
in
icebp
sahf
mov
or
out
push
cmpl
and
jae
adc
jmp
push
popa
stc
push
lods
negl
addb
mov
sbb
add
sti
sbb
call
dec
jmp
jne
push
cmp
and
inc
imul
ret
adc
scas
ds
or
mov
pop
xchg
sbb
jecxz
xchg
lds
pop
jecxz
and
xchg
xor
adc
stos
and
sbb
insl
and
ror
lret
sahf
mov
pop
push
jecxz
or
fsubrs
sub
lret
pushf
js
je
stos
ja
cld
pop
rcrb
inc
add
cmp
push
decb
pop
mov
mov
xchg
loope
stos
insl
add
cmpsb
sub
pop
ret
cmp
ja
incl
cmp
cmp
loope
xor
lods
xchg
and
in
lcall
pop
mov
out
dec
js
bound
movsl
cld
mov
add
cli
bnd
xlat
aaa
std
push
out
in
mulb
adc
mov
clc
inc
rcl
dec
xlat
mov
out
dec
xchg
mov
data16
in
sub
xor
nop
mov
imul
adc
cmp
inc
and
cmpsl
xlat
sub
cmpsl
ret
sub
dec
ret
adc
xchg
and
xlat
test
or
mov
push
and
iret
mov
loope
adc
pop
in
cltd
push
cwtl
pop
inc
mov
jbe
mov
int
shlb
jge
das
xchg
cmp
fmuls
in
jp
dec
jp
sbb
int
cld
mov
push
jle
sbbb
dec
test
and
xchg
add
xchg
clc
imul
sub
pop
mov
or
add
pop
sbb
dec
jl
pop
loope
dec
insl
jg
imul
jno
lock
bound
popa
jmp
xchg
addr16
js
or
dec
adc
leave
mov
adc
jl
data16
add
mov
inc
dec
pop
xor
cmpsl
inc
xor
add
pop
or
pop
or
jl
xchg
xor
daa
inc
dec
adc
dec
push
mov
inc
into
lcall
pop
jb
push
xlat
pop
sub
inc
repz
std
int
or
arpl
pop
into
jl
imul
sbb
ss
inc
andb
sub
cld
jnp
xor
negl
rcrl
add
enter
cmp
xchg
push
inc
int3
sbb
lods
cmp
test
ds
mov
mov
mov
push
or
cmp
push
lret
fisttps
ss
mov
lret
fdivl
sarl
fucomip
stos
adc
or
fsubs
jge
fidivrs
iret
sbb
and
and
das
sti
push
cmp
sub
adc
push
unpcklps
push
or
mov
push
les
out
cmp
jg
mov
inc
and
or
add
mov
cmp
loop
je
or
mov
das
inc
sbb
push
bound
push
xchg
jo
test
les
sub
cmp
jle
ds
outsb
mov
mov
mov
shr
mov
or
push
xchg
dec
jns
push
cltd
pop
fwait
or
ret
push
clc
inc
pop
adc
jle
mov
push
ja
jle
out
pushf
ljmp
cmc
mov
push
sbb
fnstcw
or
dec
dec
int
dec
add
les
jnp
dec
jnp
hlt
movsb
je
mov
arpl
push
jl
push
ljmp
jp
rcll
test
xor
inc
test
push
popa
pop
mov
jne
shll
mov
jp
inc
and
pop
mov
sbb
ret
insb
out
dec
add
push
inc
stos
mov
inc
xor
mov
and
aas
sbb
mov
ds
dec
sahf
inc
in
xorl
mov
cmp
into
loop
add
or
data16
xchg
cwtl
cmc
out
add
or
fsubl
outsl
mov
inc
adc
sub
inc
dec
frstor
inc
and
cmp
insl
out
xchg
in
nop
dec
popf
int3
mov
add
mov
fldt
push
sbb
pusha
and
fldl
test
ficomps
jmp
push
adc
rcl
pop
push
data16
sbb
inc
mov
mov
inc
dec
in
or
aad
mov
shl
imul
leave
or
xchg
push
aad
cmpsb
sub
push
andb
push
jns
jecxz
adc
pop
inc
dec
mov
cmp
xchg
popl
cmpsb
in
mov
mov
outsl
mov
in
cmp
lahf
jne
mov
into
mov
inc
xchg
or
and
mov
sub
and
in
xchg
mov
cmpsb
push
adc
mov
pop
jp
rcr
or
jns
stos
fwait
mov
and
arpl
mov
pop
inc
scas
and
mov
into
cmpsb
push
lods
aas
cmp
outsb
adc
test
lock
int
mov
or
xor
mov
mov
pop
lods
pusha
lods
mov
adc
sarl
in
popw
mov
mov
stos
int
mov
sbb
insl
add
loop
push
mov
and
ret
push
mov
xor
xchg
shrl
jecxz
lods
fldl2e
xor
or
enter
lds
decl
sti
stos
xchg
in
incl
stos
dec
hlt
insl
stos
mov
enter
add
xor
push
dec
or
fisubrs
movsb
cwtl
sub
lds
mov
dec
xchg
insb
or
ret
fildl
lret
mov
xchg
sbb
into
pop
out
cmp
pop
addr16
and
fists
mov
cmp
xchg
mov
mov
mov
andl
les
int3
mov
cmpsl
aaa
std
dec
adc
std
clc
sbb
xchg
std
dec
jp
mov
lret
inc
pop
loop
shl
jecxz
dec
out
addr16
adcb
push
repnz
mov
lret
push
das
inc
push
out
aas
dec
jmp
dec
addl
int3
and
call
lds
dec
or
or
fbld
push
add
and
cmp
adc
mov
jno
inc
push
ljmpw
mov
outsl
jl
sbb
and
imul
or
xchg
xlat
push
ds
pop
jg
cmp
xchg
sahf
mov
mov
xchg
xchg
loop
sbb
rorl
mov
xchg
repz
push
jge
sbb
jbe
mov
nop
xor
push
dec
adc
fisttpl
loope
bound
mov
pmulhuw
aaa
sbb
notl
leave
jb
add
movsl
mov
lock
lods
sbb
stos
or
inc
int
xor
xchg
inc
loop
hlt
addr16
push
repz
push
loope
cmp
popa
xchg
xchg
je
daa
aaa
unpckhps
insl
pop
mov
and
mov
fstpt
cld
scas
in
pop
xor
lret
in
jp
ss
mov
sahf
je
mov
push
notl
repz
cmc
jo
and
decb
push
cmp
sti
inc
lahf
orb
add
inc
xor
loop
xchg
mov
int3
sbb
jns
inc
adc
lock
xor
mov
adc
sub
repnz
int
jno
inc
pusha
add
sarb
lock
icebp
sti
mov
add
dec
data16
sub
sub
pop
test
arpl
dec
xchg
pop
mov
dec
lcall
stos
jge
inc
es
mov
dec
addl
mov
mov
inc
jnp
mov
dec
adc
pop
imul
rcrl
and
int3
cmp
jae
mov
loopne
mov
cmp
scas
clc
sub
cmp
notb
adc
hlt
xchg
xor
punpckhbw
add
push
shlb
ljmp
xchg
dec
cmpb
out
jmp
sub
or
daa
push
lods
ljmp
pop
xor
dec
bound
jecxz
fwait
dec
mov
out
daa
pop
dec
stc
jle
mov
movsl
add
dec
mov
cmpl
and
sub
stos
jge
adc
jp
bound
xchg
jnp
dec
inc
adc
sbb
pop
das
out
sub
cmp
push
inc
out
lods
push
es
test
push
cli
jmp
fisubrl
dec
in
xchg
addr16
or
sbb
lret
pop
lret
mov
data16
pop
lret
jmp
pop
jg
into
push
out
loope
lods
dec
clc
sbb
add
and
inc
pop
gs
nop
and
sub
push
mov
fstps
movzbl
mov
mov
sub
addr16
push
cmp
in
inc
xchg
std
fwait
push
ret
aad
lea
shrl
pop
pop
imul
mov
mov
mov
cmc
aam
aam
test
xchg
xor
fs
rcrl
pop
adc
pop
movsl
hlt
test
fmuls
mov
shl
jle,pn
in
dec
pop
movsb
in
fstpt
push
cld
mov
jg
ret
cmp
es
dec
cmp
push
outsb
add
sti
mov
xchg
adc
imul
dec
mov
das
pop
mov
sub
add
sub
jecxz
out
andl
jmpw
loope
mov
inc
rcl
cld
sbb
out
fwait
push
in
push
jmp
mov
fisubrs
push
sbb
add
lea
dec
bound
inc
jle
popf
adc
fdivr
inc
je
rorl
hlt
mov
lcall
dec
sub
in
mov
lret
ret
pop
ljmp
clc
addr16
enter
and
idivl
ret
scas
ret
jge
pop
and
fs
mov
pop
and
add
dec
xor
scas
dec
pusha
sub
bound
mov
sbb
mov
dec
ret
out
lahf
inc
lret
adc
sub
fs
data16
loopne
cmpsl
pop
inc
xor
adc
lret
inc
gs
adc
loope
mov
aam
add
outsl
sub
push
ret
loop
test
pop
mov
push
mov
lods
xor
pop
mov
or
xor
gs
lret
sub
push
sbb
call
adc
mov
movsb
fstpl
movsb
pop
call
jle
pop
jae
fimull
sub
xchg
scas
inc
lods
sub
push
cwtl
jb
inc
andl
hlt
fdiv
lods
sbb
lcall
push
xchg
sti
xchg
mov
add
outsb
and
cmp
addb
pop
push
adc
repnz
sarb
adc
in
sub
inc
fisttps
inc
dec
dec
mov
subb
cwtl
fdivrl
imul
pop
pop
fimull
push
jge
jmp
ljmp
fwait
sub
pop
les
mov
push
sbb
xor
xchg
mov
pop
fucom
rorb
cmp
data16
daa
lahf
arpl
adc
movsb
lahf
loope
fsub
out
or
dec
mov
leave
dec
lahf
sub
xlat
cli
push
std
bound
inc
lds
pop
mov
sarl
push
dec
scas
and
repz
mov
pop
xor
insl
cmp
pop
inc
jnp
pop
outsb
xor
aas
mov
xor
sarl
push
repz
and
pop
gs
jg
cwtl
repz
dec
pop
push
ljmp
and
punpckhwd
jbe
inc
inc
int
pop
sbb
fcompl
xor
sub
fs
xchg
data16
bound
adc
ret
imul
mov
scas
dec
ret
mov
ret
insl
scas
fistl
mov
cwtl
jecxz
sub
mov
sahf
popa
jae
jo
nop
add
ljmp
not
js
jo
push
inc
test
bound
xchg
mov
xchg
mov
and
mov
sahf
jecxz
dec
aaa
inc
incb
cmc
pushf
jle
inc
and
std
fcmovnu
xlat
xor
cmp
add
sbb
lahf
sub
jb
popl
or
pushf
and
mov
bound
push
popa
call
inc
arpl
insb
mov
adc
push
cmp
out
mov
push
arpl
jl
and
cli
inc
leave
cmp
xchg
loopne
jae
popf
jecxz
shll
movl
pop
push
pop
dec
or
pusha
cmp
test
jnp
lods
push
shlb
rcl
or
lds
or
sub
cmp
sbb
fcmovb
xchg
push
adc
jo
add
pop
out
js
jnp
insl
pop
das
push
nop
mov
es
addr16
leavew
or
sub
jae
mov
nop
adc
sub
sub
fcoml
inc
shrl
adc
mov
fcoml
lcall
xchg
ss
sub
mov
mov
pop
out
sbb
and
mov
sub
sub
scas
xor
arpl
lods
sti
adc
in
mov
repnz
cmp
call
imul
jo
shlb
sub
sbb
inc
inc
or
xchg
cmp
out
sbb
fs
xchg
fs
repnz
int
push
aaa
cwtl
imul
xor
into
dec
push
push
sbb
ret
mov
pop
lock
icebp
sahf
add
xor
out
hlt
or
sub
sub
cmp
fbld
andl
mov
movsb
out
and
shll
add
fnsave
inc
fcoms
push
ficompl
int
lock
idivl
xorb
pop
mov
mov
sbb
pusha
outsl
nop
pop
aas
inc
xchg
movsb
push
out
mov
sti
and
dec
mov
paddsw
in
jno
mov
lock
shll
mov
jg
push
push
ficoms
lret
fldt
cmc
outsl
test
adc
dec
lret
cwtl
pop
and
adcb
push
nop
stos
jns
dec
into
enter
mov
inc
jne
mov
add
mov
iret
or
push
lcall
pop
mov
cmc
pop
xor
cmp
mov
orb
bound
push
movsbl
push
ficoml
lahf
cmp
out
dec
aad
mov
fnstenv
push
push
push
sahf
lds
dec
push
rorl
or
adc
push
jne
scas
adc
sbb
es
aad
mov
lahf
lods
fldl
jge
lret
dec
pop
or
out
sbb
mov
push
jmp
adc
test
aaa
imul
mov
mov
andps
int3
mov
popf
int
or
pop
mov
test
push
pusha
mov
imul
sub
jns
cmpsl
gs
out
jns
fwait
aaa
enter
mov
and
je
outsl
xchg
test
jg
jp
dec
pop
hlt
push
push
nop
sbb
xchg
jb
mov
pop
inc
mov
ja
cmpsb
arpl
mov
rol
fnstcw
add
or
ss
lahf
in
repnz
iret
sbb
notl
in
mov
lds
xor
aad
pop
loop
xchg
into
dec
inc
push
sub
fadds
je
test
icebp
cwtl
nop
xchg
loope
stc
cmp
push
addr16
adc
push
or
xchg
stos
icebp
out
push
jle,pn
arpl
subb
mov
pop
pop
test
in
sbb
cmp
int
cmpsl
xchg
test
mov
mov
mov
sbb
scas
jbe
cmp
mov
inc
int3
dec
mov
insb
lock
sbb
repz
cmpsb
aas
xor
fmull
sbb
jnp
push
stc
pop
xor
insl
sbb
add
xchg
in
pop
xchg
xchg
jmp
into
sub
aas
sbb
sub
sub
and
scas
mov
jbe
shlb
fs
lret
dec
mov
test
pop
mov
ljmp
fs
jns
pop
aad
jnp
dec
mov
ret
lods
xor
mov
jg
or
call
xor
lret
mov
pop
cli
data16
xchg
les
xchg
sub
cmp
cs
lods
cltd
cs
inc
xor
add
or
mov
pop
int3
fwait
in
call
int3
cli
popa
jbe
sahf
xor
jns
fs
in
mulb
std
fs
inc
xchg
inc
enter
test
pop
lcall
inc
es
pusha
repnz
add
prefetchw
ret
xchg
aas
sti
jne
cmc
mov
pusha
int
ljmp
sbbl
pop
push
inc
xlat
hlt
inc
popf
das
nop
add
xchg
jmp
add
dec
xor
sub
mov
int
popa
or
test
jo
scas
mov
cld
inc
mov
int3
js
popa
pop
mov
jno
sbb
push
pop
dec
push
add
jns
outsb
out
pop
mov
mov
repnz
aam
cmp
pop
xchg
decb
jns
dec
jg
sbb
popa
mov
sub
mov
push
mov
jmp
mov
xlat
add
clc
stos
xor
cmc
jns
adc
xchg
jb
inc
int
data16
cmp
sub
push
mov
gs
xlat
pop
test
pop
in
mov
movsb
fstp
push
int
dec
and
push
cmp
repz
insb
imul
mov
lock
push
push
std
mov
fisttpl
cmpsl
xor
push
imul
push
mov
mov
mov
ja
cmpsl
jg
pop
adc
sbb
sti
cmpsl
jp
addb
out
les
xchg
jns
mov
into
rorl
lods
into
addr16
and
push
imul
jae
xchg
mov
and
fucomi
jb
sub
pop
mov
mov
inc
mov
jecxz
ja
daa
je
push
call
shll
outsb
insb
mov
push
xor
mov
das
jo
out
jns
dec
sbb
stc
and
push
dec
add
stc
cmp
outsb
and
mov
imul
testb
sahf
mov
or
jl
addl
mov
push
in
inc
xchg
dec
pop
push
outsl
fxtract
gs
test
sbb
ss
xchg
jmp
nop
ret
in
cmp
dec
es
packsswb
cmpb
std
cmc
sub
jecxz
or
dec
and
mov
rclb
add
out
add
subl
repz
pop
out
shrl
mov
icebp
pop
outsb
pop
mov
insb
enter
cmp
push
dec
xlat
fucomi
xor
push
mov
add
out
into
out
int
xor
mov
mov
aam
aad
inc
arpl
jae
add
fildll
testb
stc
into
sub
sbbb
out
mov
jb
lea
mov
outsb
mov
inc
or
mov
inc
adc
mov
ficompl
out
adc
pop
cli
aam
iret
pop
jp
pop
enter
adc
imulb
cmp
subl
sbb
jbe
stos
pop
shlb
arpl
push
pop
ljmp
daa
inc
mov
pop
push
and
xor
push
push
cmp
push
pop
dec
imul
mov
cmpsb
inc
mov
mov
lret
mov
push
mov
cmp
or
in
pop
mov
mov
sbb
cmpsl
daa
sbb
loop
int3
mov
pop
js
xchg
cwtl
add
cltd
hlt
jno
arpl
jge
xchg
imul
mov
imul
jp
dec
jne
sahf
push
stc
push
repz
cmp
push
aam
pushf
int3
mov
jne
ja
push
add
fcoml
mov
inc
jle
clc
xor
lahf
mov
and
cmp
push
jp
xchg
stc
pop
test
cmp
cli
call
push
mov
out
movsl
and
jno
das
xor
arpl
adc
jmp
add
loope
or
sub
aas
inc
cmp
lods
xchg
popf
fcomps
sub
sub
lods
sbb
dec
bound
out
cltd
ja
adc
shll
fiadds
in
mov
xor
mov
xor
push
jb
test
movsb
lea
loope
dec
or
xor
push
lcall
insl
movsb
mov
or
pop
mov
fmull
pop
xchg
mov
dec
vpunpckhwd
loopne
adc
imul
pop
cmp
and
es
pop
fistpl
push
xor
xor
xchg
int3
xchg
cmp
imul
xor
orb
fwait
push
outsb
scas
adcb
mov
cmc
cmp
jmp
sub
fistpll
jecxz
adc
lcall
or
adc
out
push
and
int
and
inc
jnp
aaa
mov
leave
dec
imull
xchg
cmp
jbe
push
shlb
sub
adc
pop
addr16
cmp
pop
imul
leave
xor
adc
in
sbb
out
lahf
mov
xchg
sbb
pop
xor
mov
rcrb
adc
add
mov
lahf
adc
pop
mov
leave
mov
pusha
and
and
hlt
call
push
sub
stos
mov
and
adc
repnz
lods
rol
das
notb
scas
jb
out
cmc
adc
shrb
into
push
mov
adc
jl
aam
cmc
nop
dec
stos
shrl
icebp
lcall
cmp
das
and
stos
mov
sarl
bound
stos
int3
jecxz
cld
int3
jg
dec
mov
loop
push
aaa
dec
cmp
pop
jmp
cmpsb
ss
int3
das
sbb
je
adc
test
imul
fcmovnu
mov
jno
add
jp
in
mov
lods
lcall
fsts
popf
push
push
mov
outsb
in
push
notl
cmp
or
sti
clc
mov
ret
mov
sbb
mul
add
cld
clc
mov
mov
ja
add
into
lea
jl
popf
push
aad
jmp
push
xor
sbb
jmp
mov
adc
fs
rcr
dec
cmc
mov
mov
bound
push
xchg
jnp
andb
adc
xor
out
xchg
mov
sub
aad
add
push
dec
gs
push
adc
sub
cmpsb
xor
orb
mov
movsl
sub
mov
xlat
xchg
mov
sbb
dec
fdivs
stos
in
mov
sub
xor
out
xchg
mov
add
xchg
mov
jbe
or
jle
xchg
xor
dec
ds
sbb
adc
mov
jecxz
dec
sbb
add
push
aam
imul
iret
mov
cmp
popa
add
mov
out
or
sbb
and
cmp
add
add
adc
pop
imul
sti
add
mov
cmp
and
mov
test
and
sbbl
test
push
andb
nop
mov
adc
adc
sub
adc
sub
inc
push
jecxz
push
addl
cmp
mov
popf
insl
mov
loop
ljmp
push
in
in
mov
sbb
xchg
mov
xchg
xchg
add
scas
xor
in
xlat
fldenv
imul
dec
jb
or
or
psubw
sub
or
jo
pop
adc
push
loop
inc
or
pushf
pop
push
ja
add
loopne
js
jge
call
mov
out
dec
clc
jg
in
xchg
fldl
in
adc
or
lock
fcomps
sbb
popa
flds
jne
push
rcll
and
test
lcall
ljmp
pushf
add
pop
popa
inc
sub
loope
dec
into
lods
pop
pop
stc
dec
scas
data16
adc
fs
jnp
fcoms
jmp
pop
xor
hlt
cmp
dec
in
pop
dec
ret
fld
adc
pushl
inc
hlt
cmp
xor
ja
and
push
addr16
pop
aam
fsin
pop
cmp
or
sarb
out
cmp
in
lret
inc
subb
inc
andb
rorl
adc
or
lcall
xchg
dec
xchg
add
pop
push
mov
stos
fcoms
sub
pop
repnz
inc
orl
fstps
sbb
push
adc
pop
outsl
mov
into
lods
mov
xchg
test
add
les
jmp
dec
pop
dec
dec
jmp
sub
or
popa
lods
mov
cmp
mov
enter
or
test
into
jle
out
in
js
cmpsb
mov
inc
ljmp
iret
lret
mov
loop
inc
jmp
stc
rclb
pop
cs
cmp
add
and
mov
lret
jecxz
in
sbb
ja
hlt
flds
adc
adc
pop
scas
dec
jg
pop
push
or
xchg
outsb
xchg
scas
inc
frstor
and
inc
lahf
cwtl
xchg
push
loope
loop
add
data16
mov
mov
sbb
mov
lock
or
or
pop
add
sbb
mov
in
jnp
xor
shlb
push
xchg
out
popa
ja
js
adc
push
je
pushf
leavew
cmp
inc
scas
inc
iret
adc
mov
roll
jns
mov
dec
enter
push
pop
dec
fbstp
ljmp
inc
or
push
neg
xchg
jb
jne
mov
gs
add
xchg
inc
jne
mov
pushf
out
dec
push
jmp
mov
mov
pop
add
xor
push
lds
cmp
fs
jecxz
jmp
xchg
xchg
stos
inc
mov
lds
popf
test
scas
jae
stos
aaa
pop
jle
pop
fdivl
adc
fisubrs
scas
addb
xorl
and
adc
in
add
outsl
sub
mov
push
ss
dec
push
je
sahf
cs
xor
in
stos
cmp
mov
cmp
stos
leave
shll
int3
fistpl
scas
mov
pop
push
pop
ljmp
add
push
mov
pusha
addr16
fisubrs
cwtl
incb
jno
leave
pop
xlat
cmp
sbb
out
mov
mov
and
scas
sbb
add
les
lea
cli
jge
adc
or
popa
popa
and
sbb
add
sbb
shl
add
imul
lds
xor
ret
add
orb
xor
movsl
inc
popa
inc
mov
xchg
and
movb
adc
cmp
push
xchg
pop
aas
imul
cmp
jmp
xlat
inc
lcall
jp
xchg
fbstp
sub
ds
jg
add
leave
sub
push
adc
cmp
call
lea
outsb
or
enter
test
loop
xlat
cli
mov
enter
pop
inc
mov
stos
pop
pop
fisttpl
fldcw
aam
xchg
sub
adc
ljmp
es
popa
loopne
dec
sbb
and
out
or
pop
cmc
clc
jmp
adc
pop
inc
aam
outsb
and
fmul
sbb
stc
cmp
int3
out
nop
jo
and
mov
pop
pop
adc
ljmp
pop
xor
mov
adc
mov
and
rorl
jns
pushf
mov
movsl
mov
xchg
std
jmp
adc
scas
outsb
dec
xchg
jecxz
xchg
sbb
pop
inc
xchg
out
sarb
call
push
push
xor
aad
pop
in
popa
sbb
data16
cwtl
sub
test
mov
pushf
psubb
sbb
mov
pop
dec
daa
dec
pusha
int3
or
je
subb
inc
mov
dec
ret
sub
mov
ljmp
insb
jp
lds
cwtl
fwait
enter
pop
push
sbb
icebp
lods
cmpsl
mov
nop
imul
in
mov
nop
mov
inc
fldcw
data16
and
xchg
sbb
cmp
je
mull
test
test
jp
ds
negl
popf
and
jmp
jnp
jg
imul
pop
sub
xor
mov
rolb
cmp
inc
dec
adc
mov
xor
add
int3
rcl
js
jecxz
push
mov
int
xchg
dec
loop
repnz
arpl
pop
int3
jge
push
cmpsb
lret
in
or
sbb
xchg
dec
rorl
pop
nop
hlt
rcll
cmpsb
lods
in
pop
movsl
rorl
ss
cmc
gs
mov
sbb
fs
add
cld
pop
xchg
dec
cwtl
sub
addr16
sub
daa
imul
call
jns
stc
imull
xor
ficompl
dec
adc
push
imul
test
repz
inc
inc
aaa
mov
adc
lret
test
sbb
xchg
xchg
or
lds
in
popf
mov
pop
push
jecxz
dec
dec
and
xchg
push
fsubl
push
and
mov
push
stc
sbb
dec
jno
push
mov
lds
mov
jnp
pop
cmp
jno
call
mov
push
std
test
add
dec
idivb
xor
mov
xor
mov
fdivrp
cli
outsl
in
xchg
jmp
add
mov
mov
pop
cwtl
insl
lods
mov
xor
inc
jb
popf
xor
or
scas
lds
int3
in
inc
js
mov
pop
pusha
jns
xor
in
push
adc
cmpsb
or
sub
daa
sub
pop
rorl
das
xor
subb
adc
mov
or
mov
lahf
dec
mov
mov
cs
testb
jecxz
stos
xor
shr
jo
xchg
push
pop
push
lock
or
mov
jecxz
cmovne
out
sbb
fcoms
push
pushf
mov
push
out
push
outsb
call
outsb
daa
mov
call
adc
xor
lret
mov
imul
fmul
push
or
inc
loop
andb
jmp
push
insl
push
sub
fwait
iret
mov
les
stc
push
cmp
sbb
cmp
xchg
sbb
cmpsl
imul
inc
jp
and
sbb
in
ja
jo
shll
test
cmc
push
jge
in
mov
int3
push
jmp
out
jnp
mov
inc
mov
xchg
sub
mov
pop
adc
popa
pop
fcoml
mov
cmp
xchg
cmc
pop
dec
push
imul
in
xchg
ret
add
loope
pop
jns
call
ss
pusha
add
mov
faddl
jb
ja
pop
sub
push
push
sbb
xchg
mov
jae
push
stos
mov
out
dec
sti
jb
test
sbb
jl
je
sbb
sub
mov
js
lahf
ret
stc
and
or
imul
lock
dec
cs
std
frstor
mov
inc
xchg
xor
dec
jns
int3
inc
xchg
lret
jp
insl
jecxz
out
scas
hlt
cwtl
int
and
movb
xlat
jmp
sahf
add
pop
push
push
subb
dec
push
std
push
and
int3
into
xchg
insl
mov
sub
scas
mov
roll
push
sbb
test
pop
jnp
xor
sbb
idivb
mov
ja
jp
add
jnp
cmp
xchg
notb
sub
insb
or
clc
mov
mov
add
scas
aaa
ret
mov
pop
outsl
cmp
push
fisubl
mov
jb
cmp
lods
fstps
mov
jecxz
test
in
roll
cs
xor
out
jg
outsb
movsl
pop
mov
jae
cmp
and
xchg
adc
outsb
mov
inc
and
sbb
inc
pop
out
insb
mov
out
pop
push
and
lea
enter
fwait
jnp
adc
xor
push
and
ljmp
icebp
gs
fdivrl
adc
mov
fstpl
cltd
push
outsb
push
cmp
cmpsl
xlat
stc
ja
xchg
test
cmpsl
test
fwait
bound
mov
inc
std
jns
sub
push
fnstcw
stos
push
inc
mov
inc
fucom
out
pop
cmc
adc
sub
inc
pop
dec
dec
and
mov
add
aam
xchg
push
pop
imull
sbb
xchg
xchg
fdivs
mov
je
adc
popa
sar
xchg
mov
mov
pop
in
arpl
movsl
mov
sbb
fsubrl
xor
jp
loopne
lea
pop
orb
mov
dec
lock
scas
jb
fs
sbb
jge
xor
dec
mov
mov
ret
inc
lock
and
or
call
fs
push
test
jge
inc
stos
mov
sbb
aam
test
clc
dec
sbb
mov
dec
jecxz
jl
and
and
xchg
rorl
shlb
adc
movsl
push
js
in
add
pusha
sub
dec
test
lret
mov
xchg
push
in
sub
push
loopne
ret
popa
xlat
pop
sbb
jo
xor
cltd
cmc
or
sti
jbe
test
in
cltd
ficoml
stc
notl
sbb
pop
xor
insl
pop
incl
test
test
sub
mov
lods
sbb
sbb
dec
idivl
cltd
cs
mov
adc
iret
cltd
add
jae
push
mov
cld
dec
adc
mov
stos
mov
or
int
adc
sub
lea
jecxz
mov
pop
stos
sub
sbb
cmc
fildl
cmpsl
xor
cli
bound
cwtl
sub
in
std
pop
xor
popf
test
cmp
lds
pop
addr16
mov
adc
mov
test
cld
xchg
or
fucomp
jmp
or
pushf
imul
rorb
dec
in
gs
cmp
mov
int
dec
fisttps
jle
cmpsl
pop
add
lods
pop
in
or
sub
mov
inc
ja
icebp
stos
sti
mov
outsl
cmpsb
and
ljmp
jge
ljmp
dec
mov
jne
subl
stos
inc
fisubl
mov
lods
repnz
shlb
jnp
fstl
pusha
fimull
adc
xor
sbbl
shlb
and
div
mov
inc
ds
leave
or
enter
push
pop
aad
and
inc
mov
subl
test
lds
loop
xor
aaa
pop
pop
fstps
shll
mov
stc
sbb
les
mov
lods
inc
repz
hlt
loopne
mov
es
push
rorl
clc
sub
fisttps
push
dec
sbb
lods
dec
adc
gs
push
jp
adc
fdivp
xchg
push
cmp
push
xorb
aaa
fildl
cmpsl
or
or
stc
cmpsb
nop
es
sbb
out
pushf
push
lahf
notl
shrb
mov
add
stc
push
pop
shll
mov
mov
mov
adc
iret
push
jno
call
xchg
lret
xchg
int3
mov
in
addl
pop
mov
jnp
push
ds
mov
cmp
in
call
xor
or
movsb
jge
fildl
inc
xor
shll
mov
add
push
push
xchg
mov
lock
clc
or
push
push
and
or
jbe
dec
sub
mov
out
inc
mov
adc
sub
fisubrl
add
jle
xchg
pop
enter
push
adc
add
push
sub
mov
fwait
lret
mov
sbb
gs
jecxz
mov
popa
mov
xchg
mov
shll
enter
mov
mov
ret
dec
leave
outsl
negl
rol
mov
push
jnp
mov
pop
mov
and
sbb
xchg
testb
push
mov
jmp
loopne
adc
inc
sub
add
xchg
jnp
int3
adc
lods
mov
pop
push
and
jp
shrl
cmp
xchg
mov
gs
mov
mov
xchg
xchg
pusha
ss
adc
mov
add
sub
xchg
ret
mov
jb
mov
aas
pop
and
cmp
push
ret
ljmp
dec
cld
pop
stc
rcll
xchg
loope
sbb
out
pop
mov
fldcw
fdivrs
mov
inc
clc
cmp
repz
loope
and
cmp
push
mov
in
iret
jmp
add
mov
test
push
lret
out
dec
in
lcall
pop
clc
push
ret
notl
enter
and
xchg
scas
inc
iret
xchg
mov
inc
inc
imul
loop
jnp
aas
push
pusha
sub
sub
into
or
push
sbb
enter
cmp
jno
les
mov
dec
mov
jae
ret
test
lods
and
jnp
rdmsr
mov
mov
xchg
lret
je
out
push
push
xor
adc
out
push
add
jbe
mov
ret
out
or
fsubrl
jge
std
lahf
jg
pop
repnz
mov
mov
mov
fcmovnb
mov
xchg
aam
sub
inc
sbb
addr16
adc
inc
cmp
mov
jo
xchg
dec
aam
jmp
int
mov
dec
mov
das
fldln2
push
lock
xchg
mov
cltd
xchg
rcrl
inc
lods
sti
mov
fistpll
cmpsb
pop
imul
mov
pushf
mov
inc
lock
bound
fs
sbb
xor
call
sub
mov
xor
jne
mov
pop
mov
or
imul
rol
aam
mov
pop
jnp
das
xchg
xor
pop
add
jns
ds
cmp
into
sub
adc
sbb
pop
popf
push
lds
cli
lcall
mov
jb
xorl
daa
xor
sub
call
frstor
leave
cmp
repz
inc
xchg
sbb
hlt
inc
jle
ss
sub
sub
orb
push
sub
mov
mov
cmp
inc
rorb
pop
cmc
test
and
iret
incl
fs
mov
xchg
popf
movsb
jmp
call
jge
cmpsb
ljmp
mov
hlt
fwait
inc
push
test
lods
cltd
push
mov
xchg
inc
lret
jge
mov
pop
xchg
vmwrite
mov
ja
inc
cwtl
cld
test
in
push
leave
or
fwait
adc
jg
in
dec
es
in
push
lret
notl
inc
pop
test
mov
mov
pusha
inc
dec
js
cwtl
sub
in
loop
js
mov
nop
dec
cmp
sbb
push
je
das
pop
mov
cmpsl
or
mov
mov
lret
or
mov
shll
mov
jno
jae
ja
add
mov
es
sbb
jae
xchg
pop
inc
and
jb
sahf
or
ljmp
fmull
insl
jbe
sbb
stos
loope
lahf
es
push
ljmp
enter
stos
imul
adc
jg
stos
pusha
xchg
stos
setbe
and
push
mov
cmpsl
leave
xor
and
xchg
push
in
das
mov
jge
es
scas
or
data16
ja
inc
sbb
movsb
sbb
repnz
pop
enter
sbb
imul
push
jo
jne
imul
sub
cmpb
mov
or
cld
outsl
gs
loope
mov
or
cmp
pop
nop
test
dec
xor
fisttpl
add
lods
fdivs
push
int
adc
dec
or
xchg
gs
mov
int3
mov
mov
dec
shl
fnstcw
ret
or
dec
fiaddl
cmpsb
out
pop
xchg
mov
add
mov
cmp
out
pop
add
xchg
lds
cmpsb
imul
jne
adcl
jl
not
xchg
adc
ds
push
js
xchg
inc
test
scas
cwtl
test
jns
sbb
outsl
in
xchg
das
sbbb
les
shll
xchg
or
xchg
and
icebp
xchg
loop
test
pop
xor
out
inc
cmp
xchg
lret
icebp
sti
dec
fstps
test
aad
fs
jmp
data16
daa
js
dec
xchg
xlat
jge
or
std
or
dec
in
xchg
loope
lods
xchg
mov
inc
mov
int
aaa
mov
lock
jmp
xchg
cltd
xor
xlat
cmpsl
cwtl
jb
cmc
push
gs
scas
in
les
mov
fistps
cmp
cmp
jp
cwtl
mov
stos
sub
sbb
jns
cmc
adc
and
lret
mov
jecxz
xchg
cs
and
dec
mov
mov
mov
mov
mov
insb
rcll
mov
dec
mov
repz
inc
lcall
repz
int3
xor
test
gs
dec
insb
es
mov
fidivrs
adc
mov
push
aam
pop
cmc
in
nop
scas
test
mov
fsub
jno
sahf
cli
xor
and
sahf
lahf
fwait
xchg
stos
sahf
addr16
jp
jle
cwtl
cli
movsb
adc
push
pop
xchg
mov
push
decb
lods
adcb
imul
sub
lcall
mov
add
sub
insb
loopne
test
stos
ret
jl
aam
jl
or
lock
push
jo
mov
daa
jl
jbe
fisubrl
sbbl
lahf
int
out
push
xor
jg
cmpsl
sub
push
icebp
push
cld
push
xchg
loopne
in
cld
jb
adc
push
inc
nop
xchg
daa
xor
out
push
or
ds
fldenv
lahf
or
mov
ds
sub
sub
cmp
inc
aad
movsb
or
push
jns
sub
jne
sbb
test
out
lods
push
xchg
imul
test
pop
cmp
add
and
adc
jmp
into
scas
scas
jnp
out
sub
rol
inc
lods
pop
mov
mov
lret
and
pop
gs
lods
jns
test
dec
fs
jmp
mov
or
xchg
xchg
stos
popa
in
cltd
pop
push
and
test
pop
insl
mov
or
cs
jmp
sbb
xor
dec
pop
sbb
push
movsb
push
iret
sahf
lea
add
lahf
xor
push
fstl
inc
ljmp
inc
aad
repz
mov
aad
fwait
dec
xchg
push
and
mov
push
xor
lock
arpl
aad
in
jg
subl
fadds
inc
scas
adc
cmpsb
mov
cld
xor
mov
and
sahf
outsb
lret
sbb
pusha
xadd
pop
sbb
data16
mov
int
gs
xchg
mov
push
adc
jecxz
mov
mov
pop
mov
mov
adc
out
or
jo
roll
iret
imul
push
out
sbb
enter
rcrl
stos
sub
dec
cwtl
sbb
cmp
andl
call
mov
je
xchg
jp
into
fimuls
jecxz
outsb
push
or
ficoml
sbb
pop
ljmp
fisubl
lods
test
popf
pop
addl
cmp
adc
pop
out
mov
sbb
mov
test
scas
xchg
scas
mov
loope
cwtl
lods
clc
xlat
lds
cmc
mov
cwtl
addr16
mov
mov
rcrl
mov
inc
or
xor
sbb
mov
mov
mov
push
ljmp
xchg
pop
daa
clc
test
mov
scas
jp
outsl
in
popf
repnz
fnstcw
shrb
pop
xchg
ret
insb
mov
mov
jp
shlb
mov
xchg
xchg
daa
sub
int3
inc
stc
dec
daa
fs
mov
cld
push
cmp
stos
imul
jle
stc
mov
cwtl
sub
mov
mov
rolb
fucomi
xor
push
jg
loopne
filds
jo
imul
cmpsb
dec
or
or
pop
jmp
pop
ja
sub
add
adc
jmp
sar
cmp
pop
or
inc
sub
ret
scas
inc
fsubl
and
jno
fiadds
and
aas
test
ja
pop
jne
pop
lea
repnz
ret
push
notb
les
pusha
pop
sahf
pushl
sbb
sahf
adc
bound
jns
imul
cmp
mov
fucomi
xchg
or
adc
sub
insb
jmp
repz
add
push
popa
lods
lds
imul
call
call
les
lods
negl
pop
add
push
and
insb
repz
loop
sub
lret
xor
mov
adc
mov
int
cmpl
adc
ffreep
jle
inc
es
mov
push
jne
enter
mov
sbb
shll
inc
jae
fistl
mov
scas
sbbb
jnp
push
aas
mov
jae
push
jecxz
xchg
inc
hlt
xor
testb
cld
fsubp
je
fwait
jae
test
jp
test
inc
aad
popf
jbe
pop
pop
inc
lock
shll
mov
xchg
fcomi
enter
pop
adc
pop
fs
push
sub
clc
push
or
stc
iret
loop
push
push
pop
push
dec
jne
rclb
fstps
xchg
push
add
xsha256
cmpsb
shrb
dec
pop
mov
iret
int3
xchg
xor
and
test
je
shll
ror
sbb
movsb
dec
out
gs
das
sar
es
jmp
std
ret
dec
hlt
bnd
addr16
and
jecxz
jae
cmpsl
fucomp
call
inc
mov
gs
into
jno
jmp
and
and
mov
xorl
loopne
fdivrl
sub
lods
push
shll
mov
mov
arpl
js
pushf
xor
mov
lds
pusha
gs
inc
pop
in
loope
add
jns
push
lods
and
adc
ja
mov
sub
pop
jo
adc
add
cmpsb
movsl
dec
incl
push
push
sarb
lods
sbb
or
dec
dec
mov
hlt
ret
sarb
xchg
clc
js
dec
test
movsb
cmc
jp
cld
xlat
fstpl
mov
sbb
adc
and
cld
or
mov
jle
sbb
or
xor
xor
lods
test
mov
xchg
mov
shl
les
notb
int3
push
and
mov
cmp
es
stos
mov
push
push
inc
mov
test
or
aas
out
sbb
jecxz
int
fdivrs
ficoml
out
xor
adc
mov
xchg
cld
or
lahf
add
hlt
sub
aam
or
lret
add
cwtl
mov
sub
or
jae
mov
jge
aas
xchg
ficoms
paddusw
mov
daa
int
fldcw
cmp
or
ds
and
sub
shll
sub
stos
xchg
jnp
pusha
and
jnp
repnz
adc
and
push
insl
movsl
jnp
lea
and
popf
inc
ret
xchg
jmp
aad
pop
cld
xchg
dec
orb
jecxz
lahf
adc
enter
ja
les
cmc
mov
in
aaa
mov
ja
lods
cmp
cltd
out
js
add
insb
push
add
cmp
xor
mov
jle
inc
pop
jb
stos
jge
push
mov
lahf
fisubl
mov
je
mov
lahf
jp
fisubl
test
mov
cmp
sbb
idiv
or
lcall
sub
and
and
cmp
fsubs
xchg
and
xor
fcmove
or
cmp
or
fisttpll
dec
xchg
jg
xor
es
test
xor
in
adc
insb
add
cli
les
scas
daa
test
popa
in
js
stos
sub
xchg
cmovp
cmc
pushf
test
lods
sbb
cli
loope
pushf
sarb
insl
movsl
les
push
ret
xor
push
aaa
cmpsb
push
je
movb
bound
fdivrs
jg
movsl
addb
xchg
xlat
das
cli
adc
cld
pop
iret
and
push
adc
mov
hlt
stos
call
pop
cmp
gs
jbe
dec
iret
dec
inc
dec
lock
jae
pop
add
ljmp
push
shl
mov
sub
adc
in
rcl
repnz
mov
loopne
hlt
imul
jb
pop
push
dec
add
loopne
sbb
or
mov
inc
jge
sub
mov
int3
in
jbe
lcall
push
bound
xchg
add
out
jge
cmpsl
and
iret
mov
into
and
gs
dec
stc
pop
fadds
and
clc
mov
popa
mov
stos
jmp
testl
cmp
sahf
sbb
mov
out
inc
xor
inc
push
jne
mov
movsl
sub
sub
lret
stc
clc
clc
sbb
aam
aas
xchg
add
inc
sbb
sub
sub
ljmp
push
arpl
sahf
lods
sub
and
or
cwtl
jp
lock
cbtw
jecxz
cmp
push
gs
add
std
arpl
add
or
imul
push
shll
clc
and
jl
out
jge
pop
fidivrs
mov
test
iret
pop
add
jecxz
popf
mov
push
push
jae
mov
or
mov
jl
push
cs
jge
out
xchg
rcrl
je
lret
mov
sbb
repz
mov
push
ret
mov
mov
int3
and
pop
aam
fldpi
sbb
push
and
mov
mov
xor
cs
in
push
test
sub
mov
jbe,pn
test
cmc
mov
mov
mov
push
sbb
call
lcall
inc
in
lcall
stos
shll
aaa
movsb
xchg
movsl
jmp
xor
out
push
cwtl
out
sarl
xchg
pop
sub
xchg
faddl
insl
mov
xor
mull
xlat
loop
das
mov
out
in
shl
leave
in
xchg
sbb
stos
fmul
pop
out
jo
negl
fsubl
jge
jo
outsb
repz
loope
dec
loop
jmp
cmpsl
push
xor
inc
jnp
cld
cmp
fnstcw
xchg
iret
xorb
mov
jo
loope
xchg
ror
insl
imulb
xchg
sub
movsl
stc
loope
add
mov
pop
pop
ds
mov
pop
cmp
enter
sub
shrl
in
fcmovbe
mov
ffreep
push
andl
fs
add
out
negb
xchg
mov
sbb
inc
jl
jl
loopne
and
call
mov
cwtl
cmp
xchg
sti
cs
insb
lock
sbb
mov
jp
pop
pop
dec
in
push
icebp
insb
popa
and
lock
push
push
lea
mov
or
in
cmpsb
mov
xchg
mov
xor
push
inc
sub
and
iret
sub
testl
or
outsl
ret
fs
fmuls
push
xor
out
jp
into
and
andl
jne
jo
clc
clc
mov
bound
adc
mov
loope
dec
bound
dec
dec
mov
cltd
sti
or
inc
push
je
sbb
inc
mov
dec
mov
out
test
mov
mov
insb
popf
push
adc
jb
and
fcom
rorb
adc
mov
rcl
mov
popa
mov
push
jo
sub
loop
and
and
dec
imul
xchg
jo
ss
add
pop
push
inc
mov
popf
daa
adc
lret
ss
adc
aad
mov
pop
out
and
and
lods
clc
repnz
rorb
lds
mov
dec
jg
call
add
mov
pop
sbb
sbb
lods
je
leave
outsl
mov
jbe
icebp
jl
lcall
sbb
call
pop
aas
or
fstps
sbb
gs
and
das
jo
gs
cmp
loopne
mov
push
aaa
jmp
push
add
imul
stos
ficoms
xor
mov
pop
adc
ret
stos
adc
jecxz
xchg
jl
je
add
xchg
jo
repz
and
out
xchg
mov
mov
out
adc
mov
inc
dec
pop
jp
xchg
test
out
mov
mov
or
leave
enter
sub
sub
sub
jnp
sub
and
push
andl
sbb
rolb
subl
pusha
jae
lcall
mov
gs
jb
fcoml
inc
jns
andl
pop
test
xor
arpl
xchg
cld
pop
fs
loope
xchg
xchg
icebp
jecxz
iret
inc
int3
cmp
adc
fisubrs
fisttpll
adcl
push
inc
mov
lds
mov
inc
aas
fcompl
add
xor
pop
ret
mov
mov
cmp
and
and
aad
out
cmp
inc
mov
mov
sahf
xor
arpl
mov
xlat
iret
negl
stc
outsb
and
sbb
or
lret
insb
cmpsl
hlt
dec
call
je
xor
hlt
sbb
popf
jo
mov
inc
inc
ss
push
bound
jne
sarl
in
es
testl
shl
push
icebp
push
jnp
push
into
fsubp
cs
cli
mov
pop
imul
adc
jle
or
shrl
push
loopne
pop
add
adc
push
arpl
mov
sub
sub
or
jb
inc
mov
sbb
mov
das
xor
jbe
fsubl
movsb
push
je
mov
mov
jns
pushf
arpl
push
inc
mov
leave
add
push
mov
ret
add
mov
lahf
mov
and
pushf
add
or
outsl
mov
fisttps
jae
jecxz
call
test
arpl
mov
gs
mov
adc
mov
cmp
xchg
imul
pop
dec
cli
mov
adc
loope
adc
push
fldcw
icebp
cli
cwtl
outsl
dec
xchg
bound
lret
cmp
add
add
sbb
cmp
or
iret
in
stos
pop
or
lock
std
or
cmp
jecxz
and
inc
sahf
mov
inc
pop
shlb
push
xor
adc
iret
int3
out
fidivrs
test
add
pushf
jl
sbb
in
rorl
and
icebp
out
fnstcw
dec
sub
in
sti
insb
mov
adc
pop
aas
xchg
ja
xchg
cmp
ljmp
xor
out
mov
inc
rcl
rol
sub
test
xchg
stos
mov
insl
insl
cmpsb
xor
divps
repnz
mov
xor
adc
add
cwtl
lret
mov
inc
stos
scas
xor
repnz
movsb
lahf
mov
in
pop
in
mov
lret
inc
shrb
mov
mov
shll
push
xchg
pusha
mov
mov
pop
mov
loope
bound
cmp
jge
mov
bound
pop
test
fwait
inc
mov
sub
test
iret
int3
in
xchg
lods
pop
jmp
sub
cld
fbld
orl
mov
in
pop
mov
stos
dec
les
subl
rolb
stos
mov
mov
outsb
sarb
jle
xchg
fstpt
xchg
idiv
or
pop
pop
jb
and
cmp
jmp
ret
pop
xor
aaa
das
sbb
std
pop
cmp
adc
and
arpl
movl
dec
rcll
mov
fcoms
scas
push
mov
sub
jns
lods
test
jnp
sub
cmp
cwtl
sbb
push
arpl
push
call
sbb
xor
and
xor
out
insb
fdivrl
xor
mov
lahf
imul
xchg
adc
gs
add
out
outsb
mov
in
jb
test
adc
xchg
outsl
sbb
inc
pusha
aad
scas
mov
out
out
inc
into
jmp
inc
clc
repz
movsb
cmpl
cmp
sub
xchg
mov
lods
lock
ds
inc
xchg
xchg
xchg
mov
mov
cmp
inc
mov
loope
fwait
rcll
rolb
jmp
sub
rol
ret
mov
test
sbb
mov
inc
daa
repz
jmp
subb
pusha
mov
xor
lods
jbe
lcall
roll
cli
xor
addr16
lea
lcall
aaa
inc
pop
std
mov
leave
sbb
out
inc
xor
lods
popa
and
movsb
or
movsb
sub
xor
inc
lret
pcmpgtb
fwait
add
xchg
cmc
dec
push
adc
jae
and
mov
mov
es
push
negb
push
ds
mov
jo
shrb
cmp
cwtl
test
gs
adc
adc
fistpl
imul
fstpt
push
mov
repnz
sub
xor
xor
fwait
in
cmp
insb
out
test
stos
mov
fsubl
pop
lods
rorb
mov
xor
xor
or
adc
addb
adc
push
pop
jae
ljmp
mov
ljmp
cld
mov
aad
mov
jnp
out
xor
inc
mov
leave
rcrl
les
repnz
xchg
lds
inc
sbb
cmp
and
movsb
imul
and
xor
mov
add
fists
xor
jae
push
add
pop
mov
std
dec
pop
loope
jecxz
sub
in
add
movsl
cmp
push
mov
insl
stos
mov
sbb
ljmp
loopne
push
inc
clc
jg
and
mov
push
mov
movsl
arpl
adc
jl
lahf
out
push
push
xchg
xor
outsb
imul
call
inc
dec
or
xchg
pusha
or
adc
mov
insb
mov
jg
pop
mov
int
bound
jecxz
loopne
loopne
adc
or
iret
lds
out
push
pop
das
cmpb
jb
dec
nop
imul
xchg
cli
dec
adcb
push
inc
jmp
pushf
dec
les
rcrb
std
inc
out
pop
mov
or
and
shl
inc
sub
sbb
dec
push
add
fnsave
into
cmpsb
scas
popa
aas
aas
mov
fildl
loope
aam
filds
in
mov
mov
popa
mov
aas
outsl
xor
cmpsb
loopne
sub
mov
mov
pop
cmp
inc
dec
pop
push
test
adc
loope
fwait
ds
pop
pushf
sub
or
movsl
add
push
notb
popa
sbb
mov
lret
adc
cmpsl
mov
pop
loope
xor
add
ds
sahf
xor
and
inc
jae
lods
popf
xlat
sub
jecxz
mov
outsb
pop
mov
sub
out
push
dec
ret
fcmove
mov
loopne
mov
sahf
sub
push
mov
jne
ljmp
scas
pushf
cmc
pop
dec
out
sbb
xor
cmpsl
cmc
fidivrs
and
and
jo
das
push
mov
loop
into
paddusb
sub
pop
lahf
jbe
arpl
aad
mov
sbb
cwtl
ds
outsl
sbb
data16
fcomip
jp
movsb
es
fisttpll
add
in
pop
ljmpw
insl
and
mov
add
dec
fwait
dec
xchg
and
sahf
add
ret
xlat
push
jns
mov
repnz
mov
and
pop
movl
xchg
mov
push
das
ret
std
mov
xchg
mov
cmp
sub
movsl
popa
jmp
xor
nop
insl
arpl
sbb
fldcw
out
dec
aaa
aad
push
jge
stos
rclb
push
mov
sti
iret
mov
lods
subb
mov
or
push
xor
sub
test
adc
mov
cmpsl
cs
outsl
out
pop
mov
ds
push
lret
out
iret
jae
in
cmp
mul
dec
push
je
pop
add
adc
call
pop
dec
in
dec
add
inc
jbe
data16
push
repz
mov
jge
pop
mov
ror
mov
punpcklwd
inc
popf
mov
push
mov
xchg
ret
dec
xchg
sub
pop
ror
push
movsl
cmpb
scas
pop
movsl
mov
sbb
xchg
lret
xchg
pop
imull
in
dec
mov
in
mov
shlb
jmp
and
xchg
xor
pop
and
icebp
jnp
ret
mov
pushw
or
jle
pop
sub
cmc
dec
jo
or
mov
xor
cltd
scas
or
push
hlt
fs
push
iret
cmp
movsl
mov
fcmove
mov
mov
jg
test
mov
mov
mov
sbb
lcall
mov
inc
mov
push
mov
dec
daa
and
xor
jecxz
jno
add
pop
movsb
mov
mov
cmpsb
push
cmp
test
inc
shlb
or
fldl
push
sbb
addb
lds
std
jecxz
push
mov
pusha
cmp
in
and
xlat
xchg
fwait
inc
movl
aam
mov
lods
orb
std
add
pop
mov
and
cmpsb
or
pop
leave
fidivrs
xor
pop
out
scas
addr16
mov
xor
dec
test
mov
xchg
aas
shlb
in
mov
inc
repz
push
pop
movsb
arpl
fcoml
testl
les
sarb
dec
jge
push
cltd
int3
push
jp
mov
iret
sbb
xor
sub
sub
xchg
mov
jmp
lahf
push
cwtl
jno
push
pop
aad
cmc
mov
cmp
xchg
rcrl
arpl
sub
mov
enter
aas
loopne
fdivrs
ja
ja
fdivr
sub
into
push
cs
xorb
push
pop
cmp
mov
fdivs
or
fwait
decl
nop
adc
cmp
popf
sub
insl
sub
mov
jo
push
add
fidivrs
mov
lods
loop
or
mov
lods
or
and
mov
gs
and
mov
mov
and
mov
in
inc
add
stos
fidivs
lret
rol
rcrb
or
sbb
cmc
fcompl
and
jmp
add
add
mov
sub
out
fimuls
sub
push
test
out
sahf
data16
cmp
lds
sub
adc
sub
jo
inc
mov
mov
popa
rorl
popf
pop
pop
jno
scas
xchg
lret
mov
pop
sti
divl
xchg
xor
pop
pop
xor
pop
cld
adc
cmc
aas
and
movsb
shl
dec
xlat
arpl
shlb
jno
arpl
mov
sub
mov
ds
std
jg
fisttpll
add
cmp
dec
jecxz
and
xchg
or
or
add
push
jp
clc
mov
xchg
adc
out
fs
mov
xchg
push
cld
orb
inc
jno
in
call
ret
pop
pop
das
inc
in
insl
adc
mov
aad
popf
pop
jne
inc
jbe
inc
and
in
cltd
or
adc
loope
fdivrl
cmp
dec
mov
loope
mov
imul
out
cmp
fwait
loopne
xchg
sub
das
mov
jp
push
int3
out
in
orl
jl
cmp
js
push
mov
mov
stos
add
mov
out
roll
or
lret
lock
lret
lret
imul
enter
mov
pop
lods
xchg
mov
jne
lods
ftst
jmp
movsl
es
lods
aam
dec
scas
adc
test
add
pushf
ret
mov
mov
pop
ret
rcrl
pop
out
and
xchg
xor
pop
add
adc
cmp
jmp
xor
add
pop
sbb
jns
mov
aas
mov
sbb
ret
popf
xchg
cmp
dec
shlb
mov
stc
adc
jge
push
aam
testb
hlt
pop
pop
or
mov
mov
xchg
leave
jge
mov
and
jmp
pop
or
or
inc
cld
cmp
sbb
iret
mov
cmp
das
xor
lods
fld
pop
push
xchg
lahf
mov
sub
test
ljmp
jp
lret
fyl2xp1
cmpsb
lea
test
out
xor
stc
fndisi(8087
or
add
nop
pusha
rclb
in
adc
cmp
pusha
add
dec
adc
inc
xlat
pop
mov
push
stc
icebp
dec
cmp
insl
mov
jnp
inc
or
nop
sub
fsts
ja
fidivl
lahf
in
mov
movb
or
xchg
sub
add
jb
inc
out
mov
jl
cmp
in
mov
xorb
or
fucomip
push
sub
or
out
sbb
popf
pusha
push
mov
or
aaa
ja
jle
mov
into
lea
cmpsl
jle
or
out
jg
pop
rorb
lods
mov
pop
inc
mov
imul
shr
ja
mov
mov
add
lea
inc
dec
inc
filds
xchg
jns
clc
mov
in
shlb
pop
mov
dec
mov
mov
movsl
jle
sbb
or
imulb
add
testb
repz
test
pop
sbb
add
mov
in
mov
in
sub
fsubrl
xor
push
int3
in
mulb
and
add
push
fildl
psubsb
bound
inc
test
fmull
out
lea
fistl
cmp
lods
lods
idivb
imul
es
add
mov
lcall
jge
scas
ret
js
jo
jge
xchg
test
sbb
adc
dec
cmp
sbb
and
jbe
xchg
push
mov
push
loopne
jbe
insl
test
into
push
movsb
jl
dec
mulb
cld
mov
push
pop
enter
ret
fnstsw
sti
cmc
xor
xor
cmp
das
xchg
fdivs
xchg
xlat
test
or
cmp
stos
stos
dec
popa
dec
jecxz
xor
sbb
pop
add
stos
sub
lcall
repnz
lahf
cmp
sbb
sub
hlt
ficompl
loopne
mov
jl
imul
bound
dec
or
pop
mov
cs
mov
or
lret
lcall
testb
or
loop
xlat
inc
lds
sub
adc
cmp
int3
into
test
sub
mov
cmpsl
es
dec
pop
push
popa
sbb
imul
popa
xor
imul
daa
push
lret
sbb
pusha
rcrl
lods
js
pushf
adc
std
movsb
imul
jns
imul
add
stos
iret
out
push
pop
int3
fisttps
stos
jne
loop
mov
cli
mov
mov
cli
shrl
or
insb
cltd
aad
xor
inc
inc
je
and
cs
or
stos
and
adc
mov
cli
stos
test
push
xor
sbb
out
sub
inc
mov
idivb
imul
xchg
inc
mov
pop
ds
sar
sub
cmp
jg
fsubrs
mov
cmpsl
in
dec
adc
int3
shll
adc
data16
jg
push
inc
loop
add
test
mov
rcll
movsl
inc
lcall
std
mov
jle
int
xor
add
fidivl
xchg
je
aas
mov
xchg
mov
arpl
xlat
mov
out
push
test
xchg
xchg
inc
cmc
rorb
mov
push
rcrl
out
neg
insl
ds
sbb
mov
int
jg
jp
dec
push
adc
rcrl
scas
jae
lret
popa
les
and
cs
inc
in
std
mov
mov
pop
or
dec
movsb
mov
loopne
and
pop
pusha
lahf
add
and
jle
stos
out
int
enter
mov
mov
dec
inc
sbb
add
pop
add
push
pop
hlt
and
dec
enter
cmp
fwait
notb
jle
add
out
sbb
or
and
xor
cmp
pop
fwait
test
or
jae
and
dec
pop
add
lret
push
movsl
mov
fmuls
xlat
xor
scas
mov
icebp
jno
insl
stc
les
lock
adcb
mov
gs
sbb
cmp
lock
pop
mov
dec
fisttpll
pop
in
roll
mov
incl
jb
cmp
lret
push
xchg
andb
icebp
dec
outsl
mov
fwait
int
sub
or
adc
add
sub
cmp
mov
cmpb
pop
out
inc
jecxz
xor
and
lds
clc
int3
xor
push
outsl
test
sti
add
in
jne
test
cmc
dec
cli
into
cmpsl
cs
ss
pusha
push
fimuls
into
add
imul
jl
pushf
xor
cmpsb
sbb
dec
lret
testl
add
sti
into
cmpsb
push
fsubrl
mov
xor
pop
sbb
mov
cmpl
cmp
push
shll
mov
sub
cmpsl
hlt
stos
call
scas
dec
xchg
adc
jbe
mov
cmp
ljmp
in
mov
xor
imul
aad
jge
xchg
inc
jb
inc
sub
int3
loope
inc
cld
das
loopne
stos
mov
mov
mov
aam
mov
sub
push
cmp
lret
sub
xchg
out
cmp
mov
sbb
mov
inc
adc
sbb
push
sub
mov
jae
xor
shlb
push
loope
xchg
lret
in
mov
add
fistpl
mov
jae
stos
scas
sub
ret
stc
mov
sbb
adc
mov
or
cli
pop
dec
out
ret
fisubs
mov
adc
fiadds
inc
add
push
xchg
xchg
xor
mov
mov
cmc
jmp
lret
inc
or
mov
mov
mov
cmp
pop
fcomip
jp
fisttps
fdivs
add
pop
les
sub
or
dec
out
clc
jle
std
cmc
int3
daa
pop
into
pop
cmpb
mov
xchg
push
lcall
fsubrs
adc
jae
pushf
dec
in
push
pop
sub
xchg
cmp
pop
push
mov
and
lret
stos
vhsubps
loop
enter
das
mov
imul
adc
sbb
icebp
jmp
into
push
js
sub
jmp
xchg
add
orb
out
dec
testb
pop
scas
aas
popa
icebp
sbb
pusha
xlat
cmc
aad
mov
jbe
pop
jbe
data16
push
xchg
adc
jp
mov
mov
dec
test
cli
mov
xor
adc
in
clc
mov
mov
and
mov
cmp
int3
push
test
xor
cmpsl
jg
cmp
mov
xor
mov
xor
iret
gs
mov
cli
cmp
cld
jae,pn
pop
sub
jecxz
in
cmp
cli
adc
pop
jns
fmul
arpl
sahf
flds
and
aam
les
fstp
mov
loope
or
out
enter
cmp
test
jo
adc
pushf
cli
mov
jo
jmp
sbb
and
repnz
scas
inc
mov
or
jae
jbe
cs
dec
and
ds
inc
jl
test
dec
int
mov
out
out
jbe
dec
loop
ror
cld
out
insb
jae
nop
ret
or
bound
inc
add
call
and
mov
repz
push
sbb
sub
mov
xor
fcom
in
lahf
push
dec
stos
popa
lds
push
dec
jb
xchg
lods
mov
mov
adc
push
and
test
mov
in
in
mov
mov
push
or
and
fimuls
cmp
cmc
aad
out
call
cmp
xor
mov
test
push
dec
repnz
and
test
out
pop
mov
push
test
in
mov
out
pusha
jbe
xor
repnz
aam
or
sbb
push
aam
repnz
adc
data16
xor
in
sub
das
jno
push
dec
push
dec
scas
les
sub
pushf
mov
lret
sbb
je
cmp
xchg
mov
mov
out
mov
and
jb
xchg
lds
mov
xchg
insl
xor
sbb
inc
test
jnp
nop
xchg
dec
sbb
mov
movsb
fidivl
pop
mov
clc
jl
and
or
pop
mov
inc
jg
add
f2xm1
je
sbb
dec
cmp
lods
prefetch
or
popa
push
mov
ret
mov
lods
mov
pushf
mov
sbb
push
cmc
cs
je
iret
fstpl
shlb
mov
pop
add
sub
aaa
movsb
jbe
add
cli
std
call
jae
hlt
jle
mov
dec
out
pop
pusha
push
cmp
inc
and
divb
jbe
ss
outsl
scas
flds
gs
imul
stos
inc
stos
fidivl
jnp
pop
stos
subl
daa
xchg
repnz
jge
jnp
mov
shll
inc
popa
sti
sub
stc
insb
push
mov
bound
mov
and
stos
sbb
sbb
jmp
adc
rcll
xor
rorl
push
call
sbb
mov
out
leave
cld
fadd
cmpl
shlb
les
daa
jmp
rcrl
sbb
mov
xor
or
in
pop
out
ret
iret
xchg
sbb
loop
push
push
dec
jl
lret
and
jge
xchg
ss
icebp
inc
cs
pop
adc
lods
cmp
pop
les
mov
push
aaa
lea
cwtl
mov
mov
add
sub
mov
ret
das
jp
xchg
pusha
pushl
add
addl
dec
nop
into
cmp
test
aaa
mov
lret
jp
dec
lock
jecxz
out
or
add
cmp
fcmove
popa
std
add
mov
pop
in
jns
aaa
sub
cs
mov
mov
and
ljmp
ljmp
enter
fdivrl
std
dec
push
arpl
mov
or
push
rcrb
pop
push
mov
std
call
adc
cmp
xchg
clc
cs
popa
mov
lds
test
insb
orb
lahf
dec
mov
add
jno
mov
jge
pop
daa
xlat
jo
leave
arpl
xchg
pop
addl
lods
xchg
mov
push
xor
push
mov
scas
scas
ret
cli
or
es
or
adc
fsubrp
lea
popf
xor
repz
fldenv
inc
push
ds
add
pop
push
jno
into
push
jns
mov
in
xor
jl
push
pop
loopne
les
movb
leave
inc
dec
mov
sarl
lods
mov
cltd
inc
nop
repz
mov
xor
mov
in
pop
fcom
cmp
and
mov
mov
sub
adc
xchg
sti
add
mov
aaa
push
test
rcrl
cmp
rclb
mov
xor
test
testl
pop
insb
aaa
scas
int3
notb
jl
sub
adc
enter
dec
lcall
add
fadd
mov
mov
lods
insb
test
out
push
or
push
bound
repnz
js
rclb
sub
cli
inc
inc
into
scas
mov
jb
and
inc
cmp
das
pop
mov
xchg
jg
ficoms
cli
pop
lahf
push
pusha
or
inc
leave
lahf
lret
ds
jp
xchg
dec
inc
push
fs
adc
dec
lock
cmpl
mov
fs
and
push
sub
push
dec
std
mov
dec
fidivl
xchg
lods
cmc
jp
test
jmp
mov
mov
jno
sbb
call
gs
sbb
cmp
gs
rcl
iret
xlat
adc
fiaddl
mov
cmp
mov
arpl
outsb
nop
movl
pop
lret
xchg
aas
cmp
sub
cmp
std
std
cmpsb
lods
add
pop
sbb
cmp
mov
jle
pushf
int3
inc
adc
adc
mov
sub
enter
jmp
mov
outsb
adc
mov
mov
xor
dec
pop
insb
push
jmp
or
enter
repnz
lds
mov
mov
adc
or
int
rcll
pop
xchg
jno
dec
cmc
ljmp
scas
xchg
insl
movsb
mov
addl
cmpl
cmp
ja
xlat
jnp
testb
andl
repz
idivb
xchg
and
fcomps
lods
jne
ljmp
ss
repz
jl
gs
fdivl
sbb
aaa
xor
arpl
push
inc
iret
int
cwtl
ja
cmp
cmp
inc
cmpsb
imul
das
test
lahf
xchg
pop
dec
sub
cmp
xor
inc
out
jo
inc
cwtl
outsl
inc
xor
popa
into
mov
dec
lods
sahf
sbb
mov
add
cmpsl
test
in
out
jbe
sub
mov
pop
nop
in
ljmp
out
push
pop
popf
xchg
mov
xchg
imul
or
cs
adc
dec
push
xor
sub
sti
in
cmp
push
loop
inc
mov
mov
jp
add
movsl
and
filds
push
push
jno
xor
fsubrl
sbb
mov
or
aaa
push
pop
std
cmp
in
aam
mov
inc
xchg
negb
mov
and
mov
leave
jge
out
inc
add
mov
mov
jecxz
js
mov
xor
rorl
adc
dec
mov
jge
jo
xchg
daa
xor
pop
stc
scas
or
ret
and
fs
push
sbbl
xor
lods
dec
sub
in
test
sarl
fnstsw
or
push
repz
loopne
repz
out
inc
dec
xor
xor
adc
xchg
repz
xchg
ss
dec
pusha
rclb
mov
fs
jecxz
mov
push
or
xchg
imul
dec
xchg
dec
mov
bound
je
outsb
jle
fisubs
int3
in
in
xchg
sbb
faddl
call
pop
int
xchg
mov
orl
pop
roll
pop
fwait
int3
pushf
xor
test
inc
adc
mov
inc
mov
sti
sub
loop
sub
in
and
test
aaa
lods
stos
test
dec
stos
stc
jle
push
jae
cmc
cli
ret
push
mov
in
cmpl
fs
or
mov
ss
push
pop
sub
insl
enter
inc
dec
jns
jnp
insb
roll
loop
jns
aaa
xchg
dec
fildl
loopne
in
push
xor
jmp
xor
rcll
and
loope
xor
insl
sub
pusha
mov
lods
cmp
pop
pop
int3
lret
mov
hlt
orb
sbb
and
dec
fwait
lret
dec
inc
sbb
shll
mulb
push
jmp
jp
ja
inc
mov
push
into
nop
les
or
clc
icebp
inc
push
addr16
fiaddl
sarl
inc
and
fs
fwait
cmpsl
ficoms
shrb
loope
xlat
dec
lcall
fistpll
and
data16
ss
fsts
mov
sub
fisttpll
add
mov
pushf
insl
clc
imul
add
nop
fistpl
mov
data16
into
jecxz
mov
mov
xor
and
and
mov
dec
bound
pop
jmp
sbb
out
cs
adc
in
test
in
inc
lret
ret
shlb
pushf
cwtl
inc
cltd
addr16
bound
movsb
loop
push
inc
pop
addr16
clc
popa
lods
mov
nop
xchg
nop
dec
dec
mov
ljmp
popf
mov
or
call
fdivrs
ret
sub
mov
jp
inc
les
mov
jg
ljmp
push
loop
out
dec
ret
cmp
lods
or
sbb
nop
pop
pop
fdivrp
sbb
xor
sbb
inc
add
sbb
add
push
xchg
scas
out
test
add
sbb
inc
jle
test
sarb
cmp
dec
xor
lcall
cs
sbb
neg
sbb
out
adc
fldt
add
dec
lcall
jl
sbb
cmpsb
sbb
nop
lret
inc
push
movsb
pusha
in
repz
in
test
sbb
call
mov
repz
pop
push
aaa
shlb
mov
xor
add
call
add
fildll
jb
inc
idivb
push
mov
jecxz
out
and
popf
stos
aam
or
dec
xchg
clc
mov
out
je
cld
mov
in
hlt
jae
lahf
mov
mov
and
push
in
in
jo
out
jae
call
dec
ror
mov
fcomps
xchg
jle
lock
pop
out
sub
push
fbstp
sbb
mov
sahf
mov
sbb
inc
push
push
mov
sbb
dec
lea
mov
xchg
adc
in
cltd
lods
fwait
push
pop
in
jmp
cli
ror
nop
push
jbe
mov
sbb
push
sub
ror
cld
inc
adcl
jp
sbb
jbe
inc
mov
xchg
in
sahf
repz
xchg
xor
inc
out
xchg
movsb
xchg
imul
xchg
dec
pop
outsb
or
loop
push
dec
inc
fwait
xor
insl
push
std
ret
imul
push
push
or
xchg
aam
sbb
fnsave
fsubrs
adc
cltd
pushf
test
jg
cmc
insb
fs
mov
and
lret
loop
sub
sub
repnz
sub
xor
orl
inc
mov
testb
xor
lea
sti
pop
loop
and
jbe
sbb
call
mov
jbe
jmp
jns
out
insb
adc
movsl
in
sbb
pop
andb
dec
pop
loop
fldenv
bound
sub
mov
sub
sbb
imul
pop
ret
mov
xchg
in
jo
pop
cltd
and
test
gs
dec
mov
push
or
pop
out
repz
mov
cli
inc
pop
mov
lea
mov
insb
push
ret
test
dec
ss
fisubrs
ret
dec
nop
pop
mov
add
les
inc
pushf
test
cmp
and
lods
push
dec
adc
je
xor
inc
lea
pop
xor
ss
gs
lea
shrl
xor
pop
stos
lret
or
aaa
data16
cli
mov
or
adc
lds
std
lahf
daa
and
mov
inc
pop
xorl
adc
mov
stc
shll
push
sbb
dec
loop
aam
insl
add
inc
movsl
mov
add
lods
std
das
aaa
daa
nop
mov
ret
jns
jle
jp
jb
or
jb
ljmp
andl
push
gs
adc
cmp
arpl
cld
pop
add
sbb
daa
jg
adc
mov
or
stos
out
cltd
lahf
jno
jecxz
ss
jb
mov
scas
xchg
and
rolb
adc
inc
aad
lods
cs
shlb
jle
push
adc
push
ss
dec
bound
out
sbb
gs
jns
cmp
mov
push
loope
out
xor
cwtl
leave
mov
sbb
jnp
push
cmp
push
mov
call
test
add
and
add
lods
leave
pushl
orb
jmp
mov
lcall
jae
jge
gs
cmpps
mov
pushf
dec
cld
push
dec
out
sbb
jmp
jo
out
aas
mov
rorb
pusha
cmc
pop
sbb
add
mov
ficompl
ds
push
add
mov
nop
je
inc
pushf
xchg
dec
jbe
or
roll
xchg
shlb
ss
je
test
xchg
dec
xchg
imull
mov
test
das
dec
sbb
shl
dec
lret
inc
dec
mov
flds
or
bound
sub
rcl
inc
push
insl
aas
outsl
ljmp
jb
popl
inc
jne
push
popa
jg
push
rcl
push
and
inc
mov
jo
cmp
add
dec
nopl
inc
stos
je
push
lods
iret
test
leave
inc
dec
mov
pop
lds
dec
out
cltd
mov
aam
sub
or
dec
adc
aaa
sbb
jb
aam
jp
adc
xchg
or
inc
fcmovnb
cmp
lcall
mov
cli
or
push
cli
out
push
cmp
pop
mov
mov
stos
cli
test
imul
ja
aaa
add
outsl
dec
pop
dec
mov
sub
bound
repz
pop
add
push
jbe
les
out
outsb
and
push
outsb
mov
sub
test
icebp
outsl
and
lahf
mov
cmpsl
testb
loopne
xchg
adc
repnz
sub
push
lods
mov
mov
pop
scas
out
sub
aaa
xor
mov
test
pop
inc
ret
ss
mov
jmp
fcoms
adc
pop
adc
sbb
or
std
test
rorl
nop
ja
cmp
ret
scas
jno
push
out
sub
push
es
movsl
imul
daa
jp
test
lahf
std
cwtl
inc
es
jbe
and
iret
xchg
iret
in
cmp
loopne
fistps
dec
rolb
mov
sbb
jecxz
pop
lret
adc
mov
push
imul
into
xchg
and
into
add
fdivl
add
and
and
lds
mov
ja
inc
fldt
add
movsb
sub
xor
or
push
mov
jp
je
repnz
insb
add
out
nop
nop
or
lock
filds
cmp
mov
cwtl
ffree
push
mov
push
pop
pop
push
stos
pop
sbb
mov
mov
repnz
inc
jbe
cmp
repnz
inc
out
pop
aaa
lds
jb
inc
lret
ret
lret
jle
icebp
insl
jl
jge
jnp
iret
fadd
scas
and
aas
stos
sub
mov
or
lcall
pop
lcall
sbb
and
push
sahf
cli
pop
cld
or
jp
mov
sub
daa
xchg
popa
jb
hlt
mov
sbb
xchg
mov
xor
xchg
ret
cmp
je
cld
int3
aad
dec
xchg
in
pop
in
in
adc
subl
mov
loopnew
add
adc
adc
push
xchg
jle
inc
or
das
cmpb
inc
bound
std
std
pop
incl
out
cmc
popf
lods
cmp
dec
xchg
and
inc
push
pop
inc
mov
je
add
dec
ljmp
bound
dec
sti
stc
ljmp
or
pop
in
and
mov
aad
xchg
push
lahf
fisttps
dec
cs
pusha
lock
ret
mov
fadds
dec
jae
cmp
or
mov
push
mov
pop
repz
push
mov
rcrb
mov
shrb
add
jge
in
cmc
das
nop
out
cmp
mov
pushf
iret
push
loope
pusha
test
cmp
addr16
inc
fidivrl
mov
pop
lds
pop
jnp
das
jl
mov
or
test
pop
push
mov
scas
cmp
imul
scas
cli
in
movsb
mov
lcall
ret
inc
sub
sahf
rorw
mov
notb
or
scas
cs
insb
dec
js
sbb
pop
sub
jle
loopne
mov
ret
ret
jne
pop
mov
push
cmp
push
sub
mov
aad
test
nop
aaa
and
rcrl
xchg
and
mov
enter
pop
ds
xchg
cwtl
rep
cmp
xchg
xchg
xor
jmp
and
lcall
pop
and
bound
push
orl
mov
test
pop
dec
mov
or
lcall
shlb
andb
mov
push
lcall
jp
dec
or
xchg
mov
test
pusha
sarb
jno
stos
fidivl
push
lea
sbbl
shlb
jae
xchg
pop
pop
add
pop
sub
into
dec
dec
xchg
std
cmp
fiaddl
cmpsl
bound
dec
mov
cmp
mov
push
fldl
xor
out
daa
adc
dec
pop
add
jl
stos
call
fdivr
dec
das
lret
mov
pop
mov
outsl
call
cmp
outsb
movsb
ja
push
fwait
mov
xchg
lahf
cs
out
in
jns
test
mov
add
fmull
inc
pop
jecxz
mov
add
sahf
add
repnz
jb
mov
leave
mov
xchg
imul
jo
cs
sahf
mov
pop
push
hlt
push
cwtl
aad
push
movsb
mov
bound
jb
test
push
divb
push
pop
aam
mov
mov
push
sub
xchg
sti
or
inc
divl
pop
xchg
not
test
mov
jns
sub
cmp
test
loopne
inc
mov
icebp
fcompl
ds
cltd
xor
sbb
dec
xchg
movsl
fldenv
arpl
fstps
xor
xor
lret
jecxz
fisttpl
mov
xor
data16
enter
dec
in
mov
sti
mov
aaa
das
pop
loop
mov
xor
ret
jae
xchg
or
nop
fsubrl
mov
push
in
mov
jns
inc
nop
mov
lret
pop
aas
int3
inc
cmc
nop
jl
fdivrs
ret
push
jmp
fiadds
or
sub
adc
repz
lds
jae
out
inc
mov
mov
dec
movsl
out
aas
xchg
push
push
xchg
shrl
loope
fidivl
cmp
mov
inc
aad
pop
pushf
inc
not
add
ds
scas
jg
aam
jae
jno
lds
jmp
leave
icebp
push
mov
jg
out
fildll
pop
lret
mov
js
add
or
int3
dec
add
mov
xor
jmp
mov
xchg
nop
scas
cld
hlt
sbb
cmpsb
nop
xchg
shll
es
lahf
fisubl
cld
loop
adc
push
inc
inc
dec
add
mov
xor
add
and
adcl
pop
jge
lods
push
inc
loop
dec
out
xchg
lcall
adc
cwtl
add
addr16
rcrb
dec
or
or
cwtl
xor
loopne
aaa
push
push
fstps
lods
sbb
int
in
and
mov
fmull
in
pop
dec
or
mov
xlat
cwtl
inc
jmp
jae
mov
or
notb
repnz
dec
pop
aam
xor
rcl
clc
push
push
add
test
push
subb
push
std
inc
outsl
mov
test
xchg
mov
or
lock
lahf
xchg
push
jl,pn
xchg
jnp
cmp
dec
ds
pop
cwtl
xchg
aas
cmp
in
lds
cmp
ljmp
in
aam
push
fs
rcrb
and
imul
inc
repnz
mov
adc
fchs
test
sbbb
mov
push
cmp
jae
pop
imul
mov
mov
push
or
mov
mov
pop
xor
pushf
ja
cli
or
cs
jg
jecxz
jne
add
sti
jne
insl
dec
or
dec
outsl
cld
mov
dec
or
cmpsb
sbb
int
hlt
lret
lahf
sarl
aam
dec
or
cmc
xor
ds
pop
stc
or
dec
pushf
jbe
add
inc
xor
lret
rol
fisubrl
mov
sub
dec
mov
repz
clc
sarl
shl
inc
pop
ss
lret
jge
cli
and
and
mov
push
pop
fs
outsl
push
adc
imul
xor
pop
nop
push
xchg
pop
mov
ja
cmpsl
cmp
inc
mov
mov
daa
or
lea
xchg
hlt
popf
arpl
cmp
nop
in
xchg
aam
sub
aam
xor
lea
pusha
insb
cmp
xchg
push
sbbb
xor
mov
mov
push
leave
test
imul
or
lret
sub
inc
sbb
mov
out
mov
pop
pop
nop
jge
or
shl
test
inc
mov
lcall
dec
sub
negl
jp
mulb
xchg
addl
ljmp
rclb
aas
shlb
sbb
sub
xlat
jmp
lods
mov
into
int
cwtl
bound
bound
pop
inc
dec
shrb
hlt
jmp
aas
xor
out
mov
es
test
test
jae
test
inc
xchg
shll
mov
pop
sbb
outsl
repz
ljmp
jle
cmp
je
sbb
xchg
cmpsl
lods
cli
push
pop
and
cmp
daa
cli
push
mov
push
shr
jo
mov
fstps
test
mov
xchg
lcall
add
in
adcl
popa
mov
sub
inc
or
lea
sbb
pop
jle
outsb
mov
add
stc
xor
mov
mov
cmp
mov
out
dec
jmp
daa
das
sub
cmp
mov
cli
jg
mov
movsl
mov
mov
jge
jo
imul
nop
xchg
pushf
scas
test
pop
jo
mov
pop
stos
and
std
imul
dec
push
mov
or
mov
addr16
xchg
bnd
dec
fnstsw
cmp
mov
loopne
into
pop
push
sbb
push
jnp
pop
inc
aad
add
xlat
adc
int
dec
add
fldz
pop
push
in
inc
sbb
mov
xor
fwait
ja
hlt
fisubs
leave
add
outsb
jge
mov
arpl
mov
fdiv
ret
xlat
aas
cmp
or
lock
xchg
xchg
jbe
cmp
mov
push
outsl
mov
sbb
int3
pop
dec
ret
fiaddl
inc
and
mov
or
cmp
je
push
sbb
mov
xchg
cmp
xchg
popf
mov
into
jg
fidivrs
dec
ret
cmc
xchg
dec
shlb
push
xor
repnz
in
loopne
push
ljmp
inc
ret
aaa
ja
pop
int
jnp
lea
pop
imulb
repz
jmp
push
sub
or
aas
loopne
enter
sub
cs
data16
adc
leave
in
inc
xchg
dec
shlb
jae
pop
nop
push
xchg
clc
push
jmp
aad
mov
xchg
pop
cmp
push
iret
pop
sub
dec
sbb
arpl
scas
dec
sbb
jmp
pushf
mov
xor
addr16
mov
lea
push
das
sbb
cwtl
movsl
adc
xchg
pop
pop
xchg
pop
cs
jb
inc
addr16
pop
iret
pushf
jle
sub
push
in
inc
adc
gs
fbld
sbb
inc
jb
lock
push
insl
sub
pop
gs
mov
loope
sub
dec
lcall
in
jbe
pop
jo
popf
inc
popf
ret
lods
fcmovbe
dec
or
das
xchg
imul
and
xchg
js
jnp
loopne
in
pop
add
test
fdivr
movsb
push
je
stos
inc
push
and
cmp
mov
sahf
sarl
cld
add
jmp
shrb
mov
loopne
mov
adc
addr16
icebp
push
xchg
cs
ljmp
inc
cmpl
xchg
jno
mov
inc
mov
scas
inc
jb
jmp
idivb
imul
inc
push
xchg
adc
stos
xchg
outsb
dec
lods
sbb
adc
mov
xchg
pop
inc
inc
test
pop
push
or
mov
out
jno
icebp
mov
stos
cmpsb
sbb
fucompp
aas
jno
popf
cld
push
addr16
xchg
hlt
pop
cld
xor
scas
or
cmp
cmp
cmpsb
adc
adc
mov
loop
fwait
push
sub
cmp
pop
pop
dec
fld
xor
ret
push
inc
mov
cld
cmp
mov
add
jae
adc
xchg
cwtl
cmp
and
das
scas
mov
icebp
stc
sbb
dec
out
mov
icebp
enter
popf
mov
push
scas
mov
clc
jle
cmc
nop
dec
dec
mov
cmc
xor
das
mov
aaa
jbe
xor
lock
mov
iret
sub
aam
or
loopne
imul
ds
sbb
xor
sub
pop
pop
lea
pusha
popa
sbb
cmp
fwait
pop
mov
push
mov
cmp
fnstenv
or
add
xchg
loop
dec
jae
sti
cwtl
mov
mov
aaa
out
pop
inc
cmpb
mov
test
daa
jae
ljmp
add
cmp
fnstsw
fs
jle
sbb
push
or
leave
xchg
dec
pop
popf
cmp
push
mov
and
insb
fwait
mov
pop
imul
ficomps
cwtl
mov
rcll
cmpsb
sarl
xor
icebp
and
fmuls
clc
in
pop
int
out
sahf
jle
mov
inc
iret
mov
lods
mov
adc
xor
cld
add
xchg
nop
mov
cmp
push
push
jg
mov
or
or
adc
mov
fs
pminsw
pop
and
mov
out
popf
jns
push
sub
test
push
lods
test
dec
adc
pop
fstpt
mov
ret
repz
sub
mov
add
jle,pt
mov
xchg
lahf
dec
xchg
sbb
cld
mov
xchg
cs
pusha
jb
daa
enter
dec
mov
ljmp
xchg
imul
enter
es
jl
cmc
lret
sub
lods
outsl
les
fnstenv
fldenv
int
cmp
pushf
rorb
xchg
fisubrl
pop
mov
dec
lret
dec
addr16
scas
popa
mov
fbld
mov
sbb
lret
adc
xchg
rolb
pop
inc
js
into
and
sbb
mov
mov
jae
cmp
mov
push
push
jno
jecxz
addb
fs
mov
mov
out
dec
inc
sbb
push
push
lods
shlb
fdivrl
mov
sbb
inc
mov
lds
scas
and
rorb
add
mov
les
pop
fiaddl
mov
std
loop
lcall
aas
repz
adc
in
repnz
sub
mov
or
sbb
ret
jp
mov
jo
xchg
pop
ja
mov
insb
in
dec
cmp
mov
and
pushf
or
push
pop
inc
push
push
adc
mov
mov
add
push
pusha
mov
push
dec
jnp
dec
cld
xchg
mov
xchg
mov
cli
push
mov
cmp
cld
mov
out
sti
loop
xor
xchg
addb
pop
mov
leave
mov
mov
mov
imul
out
sbb
stos
xor
jl
dec
pusha
test
push
cmpsl
xchg
movsb
cmp
rclb
mov
loope
push
stos
inc
cmc
jp
call
popf
push
mov
lea
lretw
mov
or
imul
adc
popa
fdivl
stc
adc
ljmp
adc
aam
stc
data16
in
fisubs
in
cs
std
fcomps
jno
hlt
stos
sub
push
xchg
push
mov
mov
cmp
or
jmp
or
cld
rorb
pop
aad
push
sub
imul
xchg
push
pusha
outsb
cmp
rcrl
mov
xchg
cmp
rcr
rolb
lahf
adcl
pop
mov
jl
adcb
dec
lret
mov
outsl
aaa
cmp
testb
testb
test
pushl
xchg
pop
hlt
mov
stos
mov
or
add
pop
lock
arpl
add
pop
mov
ja
add
insb
sbb
inc
mov
scas
cmp
insl
aaa
and
repnz
mov
mov
xchg
fsubrp
sbb
pop
insb
mov
ss
int
pop
xor
lods
test
popa
scas
test
imul
lret
ds
mov
and
xor
sbb
adc
mov
pop
andl
xlat
js
pop
or
jge
popf
jbe
in
push
add
or
jmp
push
sub
xchg
cmc
sahf
repz
adc
testb
push
add
mov
and
aas
repnz
dec
and
dec
out
cmpl
cmp
outsb
data16
fldcw
xchg
sbb
inc
hlt
lret
jo
les
xor
fisubrs
les
and
jge
add
mov
incl
xchg
mov
add
sbb
fidivrs
out
sub
sub
mov
enter
call
jmp
stc
push
les
out
cmp
testl
adc
jnp
sbbb
rclb
icebp
pop
fdivr
and
jns
add
stos
add
mov
test
divl
pop
jmp
lea
add
and
push
loope
xchg
mov
jp
or
ja
cld
xchg
adc
ja
mov
lahf
push
std
js
adc
lods
or
pop
test
jae
mov
cmpsl
sbb
popf
into
mov
jg
mov
lods
or
mov
mov
add
adc
sub
adc
push
test
cvtps2pi
mov
insl
aas
mov
sbbb
cmp
out
mov
xorl
in
mov
mov
adc
mov
test
pop
movsl
leave
add
adc
sbb
call
sbb
js
out
pop
push
pop
ljmp
push
pop
pusha
lret
test
imul
pop
in
nop
mov
pop
cmp
fimull
je
xchg
cmc
pop
int3
scas
cmp
ficoms
and
or
push
or
cmp
jp
in
cmpsl
or
fcmovb
sarb
ds
into
mov
popa
xchg
jge
mull
clc
mov
stos
inc
and
cmc
xor
lcall
movsb
ret
sub
inc
pop
js
ret
jg
pop
fbstp
dec
lods
mov
mov
clc
push
inc
mov
mov
mov
push
and
jno
imul
jmp
push
fwait
pop
fisttpll
out
inc
cmp
inc
inc
xchg
loop
pop
icebp
mov
push
or
int3
or
insl
in
cmp
dec
dec
sarb
sahf
out
cwtl
cmpsl
pop
cli
push
xlat
xchg
arpl
cmp
das
stos
adc
cmovle
add
cmpsb
std
push
enter
shll
cmp
mov
cmpsb
cmpsb
ds
adc
push
icebp
in
movsb
mov
fwait
mov
arpl
fwait
movsl
pop
enter
iret
mov
in
filds
cmp
mov
mov
sbb
insb
lahf
std
bound
movsl
adc
inc
xchg
push
inc
test
mov
mov
mov
pushf
sub
jmp
push
inc
mov
xchg
mov
or
dec
xor
scas
inc
push
jle
mov
xchg
mov
inc
adc
aad
mov
push
mov
push
inc
mov
adc
xchg
fsubrs
xlat
hlt
stos
jae
cmp
loope
adc
mov
mov
inc
pop
lods
out
int
and
shrl
hlt
fwait
jne
or
sbb
add
cmp
mov
ljmp
adc
test
sub
jne
pushf
push
inc
fdivl
or
and
imul
mov
ja
lcall
ds
cmp
addb
roll
inc
lret
and
data16
mov
and
sub
mov
popf
sub
cmc
add
dec
es
cld
or
xor
repnz
fistpll
push
mov
jbe
cwtl
dec
add
mov
ljmp
repnz
push
push
inc
mov
mov
movsb
xor
lock
addl
dec
mov
shr
outsb
xor
in
enter
adc
or
xor
and
cltd
test
push
inc
jmp
add
out
xlat
sub
movsl
ljmp
sub
xchg
sbb
and
sahf
push
pushf
popl
jp
mov
mov
cmp
sbb
add
movsl
ret
icebp
cmp
mov
loopne
adc
out
lock
inc
rcrb
shlb
leave
pop
roll
push
scas
cmp
andl
inc
mov
mov
cmpsl
push
sbb
dec
sti
add
inc
loop
mov
notb
or
dec
xchg
pop
cmp
aam
jb
movsl
test
js
sahf
sub
mov
js
mov
push
push
rorb
xchg
sbb
cli
arpl
mov
or
adc
cmp
inc
sbb
cmpsl
int3
int
leave
pusha
clc
test
adc
stc
mov
out
imul
ret
nop
or
test
aaa
in
out
dec
fs
sub
mov
mov
sbbb
iret
sbb
push
inc
jne
scas
rorl
aas
or
sub
pop
mov
xchg
in
cmp
gs
push
cwtl
mulb
dec
add
jnp
sbb
mov
imul
xor
jecxz
test
xchg
in
leave
mov
stos
shlb
jp
lret
test
push
imul
jb
cwtl
fwait
xchg
adc
js
jmp
scas
scas
xchg
jae
xchg
sti
arpl
xor
pop
leave
fcoml
jb
xor
out
clc
out
gs
inc
or
je
dec
add
sub
rclb
lret
pop
mov
xchg
dec
jns
jbe
into
xlat
sub
fmull
pop
sub
sub
pushf
and
les
jae
pop
push
sahf
adc
mov
push
gs
lods
and
dec
cmp
inc
aam
jecxz
dec
out
test
add
inc
movsl
mov
decb
sub
leave
dec
push
ljmp
idivb
cli
ds
dec
xchg
xor
push
aam
ss
sbb
jmp
int
jno
and
cmp
iret
movsb
add
mov
outsl
push
dec
aad
add
or
ds
or
pusha
loopne
cmp
mov
inc
jle
mov
jg
js
jns
ficoml
push
or
arpl
fs
out
test
jge
int3
out
pusha
outsb
xchg
pop
xchg
je
jmp
ds
xchg
and
pxor
mov
and
out
and
pop
ret
mov
push
mov
adcl
test
rcll
dec
mov
ret
xlat
cmpsl
push
fnsave
cltd
sub
shl
pop
cld
pop
jae
js
in
push
test
lods
adc
sarb
aaa
outsb
cwtl
jl
ret
fwait
or
jae
leave
stc
out
xlat
dec
mov
mov
loopne
dec
scas
int
mov
scas
dec
xchg
cmp
xor
in
adc
dec
mov
ds
push
test
fcoms
pop
ret
jg,pn
pop
std
mov
sti
adc
dec
lock
in
mov
cwtl
jle
popa
cmp
sub
inc
mov
jmp
pusha
push
adc
pop
mov
pop
dec
xchg
enter
jg
orb
jnp
sub
add
mov
jno
jge
inc
in
mov
xor
jnp
adc
testb
fstp
inc
stc
int3
fs
dec
aam
add
or
pop
push
dec
fwait
cld
roll
dec
lock
or
pusha
mov
in
mov
loopne
iret
enter
ret
mov
push
aad
inc
mov
in
jmp
daa
xor
xchg
in
inc
and
sub
in
sub
leave
clc
test
mov
pop
inc
pop
int
cmc
aad
dec
pop
lock
xor
ret
test
idivb
neg
jne
rcr
mov
aad
jl
in
inc
sub
rolb
cld
mov
jns
push
cmp
mov
or
test
aam
mov
mov
mov
aad
loopne
rcll
adc
mov
pop
fists
arpl
loop
pop
pop
mov
lret
jnp
cltd
mov
divb
push
cmp
and
icebp
adc
jge
adc
rorb
data16
xlat
ljmp
aas
in
mov
jae
xchg
adc
adc
sbb
ret
mov
xchg
mov
push
test
xchg
fldt
jns
cltd
push
movb
and
sti
or
mov
lods
loopne
jb
roll
inc
addr16
sbb
cmp
jle
adc
adc
inc
dec
xor
fstps
mov
bound
test
rorb
cmp
les
outsl
pop
aad
adc
in
push
add
popf
shlb
pop
cli
mov
add
mov
xchg
dec
je
xchg
adc
mov
fstpt
je
ret
push
nop
lods
add
cld
push
dec
ds
shlb
xor
loop
bound
ret
rcl
rorb
push
adc
lahf
inc
in
adc
fadd
pop
cmp
push
adc
aas
mov
add
pop
out
push
loopne
lea
insl
adc
in
lea
aas
cmpsb
jb
jbe
cmc
xchg
mov
xor
lret
or
cmp
jb
frstor
lods
pusha
pushf
adc
and
cmp
push
jo
icebp
pop
xchg
ret
pusha
fldt
adc
outsb
dec
loopne
bound
xor
jl
je
pop
push
mov
sbb
aam
aaa
addr16
adc
xor
test
mov
pop
rcr
aaa
je
ds
jle
jbe
xchg
je
or
lds
out
ret
jge
xchg
and
fiadds
sbb
out
hlt
push
cmp
jae
mov
int
xchg
xorb
mov
repz
ja
insb
vpmulhuw
push
jns
dec
pop
mov
aaa
in
xchg
scas
shll
xchg
dec
adc
inc
in
int3
aas
sbb
pop
loope
sahf
adc
mov
fldcw
xor
add
sub
pop
add
jno
jb
movsb
push
test
loop
into
adc
mov
and
jne
iret
pop
lea
clc
movsb
in
pusha
insb
xor
jnp
les
pop
cmp
rcrb
out
in
jns
loopne
enter
fmull
cmp
pushf
mov
stc
je
cmp
mov
or
stc
imul
clc
not
push
and
in
xchg
xor
xchg
add
push
or
sahf
xchg
call
ljmp
mov
push
fidivrl
enter
xor
aam
movsl
lret
das
inc
push
pop
mov
cmp
sahf
push
cmp
inc
jp
mov
mov
pop
and
out
imul
fnstcw
stc
xor
ret
jo
mov
ficoml
je
sub
pop
dec
out
cmp
mov
push
xor
ret
jo
xor
sbb
daa
popf
ror
jne
adc
push
scas
jne
add
or
cwtl
sbb
lcall
nop
or
aam
shl
outsb
ljmp
cmpsl
fsubrl
es
and
insl
gs
jmp
scas
pushf
daa
repz
add
insb
sbb
mov
popf
lret
cmpsb
mov
mov
sbb
cmp
lods
inc
mov
and
int
jns
loopne
fbld
sbb
cmp
push
negb
test
push
pop
popa
in
adc
sub
pop
clc
mov
shlb
stos
jle,pt
xor
in
pop
fwait
or
sahf
adc
mov
pop
and
jbe
lret
sub
dec
outsl
mov
lods
pop
jae
jne
das
pop
push
adc
cmp
dec
adc
pop
add
mov
mov
cld
sbb
jne
push
sub
repz
mov
sbb
aad
and
mov
sbb
dec
cmp
push
mov
js
xor
cmp
loope
adc
imul
or
stos
jge
test
cmpsl
test
cmp
jnp
sarl
clc
mov
and
pop
push
push
lahf
mov
mov
inc
movsl
xchg
jo
cmp
or
rcrl
xchg
cmp
out
xchg
imul
test
mov
cmp
cs
pusha
xor
mov
lahf
movb
dec
jb
outsl
dec
fsubr
mov
shl
imul
je
or
out
and
in
push
out
sbb
rcll
add
stos
dec
or
inc
repnz
add
je
iret
jecxz
and
cmp
ret
add
es
sbb
das
imul
mov
mov
js
sub
xor
mov
add
cmp
xchg
lods
sbb
stos
lods
pop
out
mov
jg
cmpsb
mov
imul
cltd
lcall
test
dec
aad
popa
pop
pop
sub
and
sub
push
push
out
mov
nop
push
loop
fadds
dec
xor
scas
push
and
or
mov
sub
fildll
xchg
insb
cmpsb
loop
lcall
js
push
sbb
mov
adc
push
mov
test
out
jle
notl
into
or
mov
pop
shl
cmp
bound
dec
and
aad
push
mov
rclb
and
mov
push
mov
mov
mov
jmp
sbb
mov
adc
aas
adc
test
notl
push
movsb
push
mov
outsl
xor
imul
xchg
pop
push
call
xchg
das
jmp
subb
enter
cwtl
inc
repz
adc
or
cmpsl
loop
repz
lret
movsl
fbld
out
fidivl
cli
push
cwtl
mov
decl
test
repnz
sbb
test
cmp
and
lretw
inc
lea
in
push
pushf
xlat
and
das
sbb
push
or
mov
ret
cmp
jno
and
xor
lock
cwtl
stc
daa
insb
out
aas
stos
insl
push
clc
jne
mov
into
mov
inc
repnz
ljmp
dec
lcall
icebp
jmp
in
adc
add
sub
icebp
jp
pop
stos
adc
xchg
fs
loopne
or
pop
push
arpl
push
cli
xchg
aad
fbld
push
enter
shr
in
mov
fdivrl
inc
outsb
mov
sub
jb
movsb
pop
pop
cs
xor
cmp
push
add
adc
notl
push
jmp
pusha
lods
jmp
mov
xor
push
lcall
shl
fbstp
add
xor
rolb
clc
mov
negb
mov
inc
push
pop
push
push
lret
sar
pusha
xorl
in
jle
mov
and
inc
mov
and
pop
pop
int
dec
dec
into
pop
sbb
icebp
shll
push
jmp
sub
fwait
add
push
ret
leave
pop
cmp
mov
mov
dec
mov
and
mov
test
dec
imul
mov
push
mov
dec
jno
inc
cltd
push
cmp
mov
lods
jno
adcl
cmp
repz
fbld
mov
test
dec
mov
or
test
xchg
add
arpl
fucomi
dec
dec
xchg
les
addr16
sbb
or
push
insb
rol
in
or
sbb
lods
ss
mov
pop
and
fwait
adc
loopne
xorl
neg
rcrb
add
dec
sub
sub
push
xchg
pop
aad
jo
js
push
inc
fcmovu
hlt
gs
les
jg
out
pop
jns
pop
xchg
lret
sbb
xor
addr16
movsb
pop
ret
jno
imulb
sbb
cmp
or
inc
cmp
sbb
mov
adc
fistpll
jno
jns
push
xchg
inc
push
scas
dec
dec
adc
jo
push
sbb
bound
sub
sbb
jle
push
arpl
out
je
orb
fptan
push
mov
in
xchg
lea
pop
sub
scas
inc
mov
jne
push
aas
xchg
pop
stos
pushf
inc
sti
addr16
arpl
xchg
mov
mov
notb
loope
mov
out
xchg
jno
cs
je
sub
inc
mov
cmpsl
cmp
dec
mov
lods
cmpb
fmuls
fsubr
cmpb
test
adc
pop
sub
mov
push
add
inc
push
rcrl
xchg
and
push
dec
popf
iret
pop
mov
or
aaa
push
fs
lret
loopne
sub
adc
filds
cmp
or
dec
cmpsb
out
cmp
cwtl
icebp
fdivrs
inc
aam
sti
inc
mov
insl
adc
test
lods
pop
adc
in
fsubrs
das
lods
sbb
stc
stos
or
jg
movb
mov
int3
test
dec
inc
mov
adc
and
lahf
and
enter
rorb
ret
lods
add
int
fs
lret
mov
out
and
repnz
ret
inc
repz
mov
mov
shlb
out
and
add
repz
xchg
jmp
adc
cmp
dec
xor
pop
popa
xor
dec
in
adc
jle
lods
jno
out
sbb
test
pop
scas
int3
pop
call
pop
cli
pop
add
cmp
cmp
add
inc
mov
inc
and
inc
sbb
adc
jg
pop
or
and
decb
mov
mov
cltd
fildll
or
mov
and
or
push
cli
pop
add
hlt
dec
fnstenv
das
daa
dec
arpl
mov
dec
ds
mov
mov
xor
gs
hlt
dec
mov
and
lds
mov
mov
lds
call
inc
fsubl
jl
sarb
push
gs
push
addr16
jge
stos
loop
movsl
jecxz
pop
jmp
test
mov
xor
popf
fwait
aam
out
cld
insl
add
add
mov
fmull
pop
add
ret
inc
clc
pop
mov
inc
insb
arpl
dec
loope
lods
push
sahf
mov
cmpsl
mov
fiaddl
cmp
sti
or
mov
xor
imul
out
leave
inc
cmc
out
adc
test
jae
fistpl
pop
popf
sbb
lret
popf
mov
ds
inc
jl
sti
sub
xor
pushf
mov
dec
push
scas
adc
lcall
xor
popf
push
dec
and
jbe
fldt
in
mov
mov
or
call
xchg
mov
adc
clc
std
xchg
test
adc
ja
in
jo
rolb
mov
rcrb
fs
cmp
imull
xor
mov
jbe
mov
mov
stc
mov
loope
and
inc
cld
enter
out
insl
push
movsb
pop
xchg
jle
ja
adc
lea
hlt
rolb
lcall
cld
pop
js
pop
inc
mov
sub
ss
fsubs
pop
mov
inc
fisubl
push
ss
ror
les
xor
jl
push
push
subb
roll
sbb
jnp
test
mov
test
pusha
push
mov
jns
imulb
js
sbb
hlt
insb
mov
cld
push
mov
std
jb
out
sbb
lahf
shrb
test
dec
dec
add
mov
mov
rclb
xchg
mov
test
fmuls
popf
xor
sub
cld
cmpsb
jbe
ds
pop
shll
mov
mov
test
pop
inc
aam
jle
add
pop
jb
shll
mov
mov
jae
clc
fst
mov
or
adc
push
addl
out
shr
outsl
or
jmp
jl
hlt
cmp
add
adc
test
mov
test
jecxz
sub
insl
flds
push
cmp
xchg
movsb
xor
cli
xchg
mov
orb
scas
in
out
leave
adc
leave
xchg
aad
add
test
outsb
mov
inc
std
subb
outsb
or
das
call
add
test
add
inc
pushf
fwait
stc
xor
fdivrl
ds
cltd
stos
or
and
popf
jmp
adc
ja
jb
sbb
sbb
fistpll
out
shl
dec
inc
cmp
mov
push
pop
push
into
or
ja
call
pop
pop
ds
rsqrtps
movsb
add
lret
inc
stos
mov
push
fs
jge
jmp
cmpb
push
lret
int
jp
mov
adc
jg
scas
pop
and
cmp
lret
inc
xor
in
cli
mov
in
xlat
mov
and
lods
outsb
xlat
push
out
pop
mov
sbb
and
test
push
and
ljmp
out
mov
add
mov
jae
es
sarl
out
fnstenv
loopne
ja
or
xchg
push
inc
repz
js
push
lock
loop
mov
xor
jle
add
pusha
cmp
push
sbb
cwtl
incl
mov
pop
ljmp
xor
das
rcll
and
or
xchg
xchg
pop
mov
outsb
push
dec
sub
mov
cld
cltd
push
dec
gs
into
push
xchg
jb
mov
push
hlt
cmp
subl
and
adc
mov
cmc
or
xchg
rcrl
adc
ds
cvtps2pi
cld
add
lea
mov
adc
sarb
mov
xor
cmpsl
xchg
push
das
lods
adc
imulb
shll
jp
addl
fimull
in
mov
mov
jb
jecxz
sbb
rcrl
push
xchg
testb
jno
adc
jecxz
cwtl
add
lock
mov
cmp
cmp
inc
lret
enter
xor
fnstenv
adc
jno
nop
test
adc
mov
rolb
cli
push
aad
jg
imul
bnd
lock
dec
push
cmp
add
insb
outsl
sub
dec
sub
mov
adc
dec
scas
jbe
shr
push
addr16
mov
cmp
and
cmc
xor
outsb
adc
jo,pn
mov
add
mov
imul
sub
notl
adc
stos
pop
adc
lret
hlt
fxtract
jbe
fistpl
movsl
repz
sbb
mov
and
add
and
mov
add
or
pusha
test
jp
add
fstp
pop
and
insl
mov
push
out
adc
scas
inc
xchg
add
dec
mov
push
push
rcll
in
ljmp
mov
cmp
ret
pop
jbe
call
ds
push
aad
aaa
pop
std
andl
xchg
cwtl
inc
push
xchg
push
xchg
lds
fisttps
pusha
pop
and
pop
data16
fwait
insl
sarl
mov
fidivl
loope
cli
and
lea
out
testb
lods
std
in
jae
dec
dec
pushf
aas
test
and
push
xchg
mov
xor
push
js
sahf
cs
repnz
outsl
movsb
or
mov
inc
out
push
addr16
int
test
ret
adc
inc
mov
out
or
or
call
icebp
popa
inc
xlat
pop
enter
iret
das
pop
movsb
inc
sti
and
roll
xchg
loope
mov
xchg
jge
or
popa
lock
or
inc
xchg
push
mov
xor
mov
push
dec
scas
fsts
sub
xlat
dec
and
fmull
jle
stc
clc
adc
pusha
fstpt
cwtl
dec
adc
inc
insl
insl
jo
inc
xchg
gs
hlt
daa
sti
sub
mov
lock
ljmp
inc
and
clc
mov
ja
add
shrb
imul
xor
and
pushl
sub
int
mov
cmpsb
pop
sub
out
repnz
push
stos
push
xor
and
xchg
int3
mov
inc
mov
hlt
mov
or
pop
addr16
scas
and
testb
push
mov
inc
movsb
fistpll
add
mov
ret
and
iret
stos
pop
add
push
cld
sub
lock
daa
xor
lock
filds
push
adc
ds
or
xchg
testl
fimull
aam
jae
jge
in
lock
cwtl
js
inc
out
repnz
xor
xor
sbb
pop
scas
jo
cltd
adc
push
imul
lcall
add
shr
pop
idivb
lea
cmp
pop
cmp
inc
mov
mov
idivl
or
push
dec
sbb
mov
mov
es
mov
cmp
add
fisttpl
mov
fs
push
lret
cmp
cli
iret
mov
mov
insb
dec
xchg
pop
repz
cld
jecxz
adc
sbb
in
pop
aad
sub
ret
and
mov
mov
stos
bound
lock
inc
and
ja
xchg
pop
push
lcall
xor
xchg
cmp
mov
or
cmc
inc
mov
loope
pop
jns
jl
and
mov
test
pop
dec
in
pop
out
jmp
xchg
or
mov
pop
pop
push
inc
or
stc
arpl
adc
arpl
movsb
inc
sahf
cmp
fwait
mov
dec
repnz
add
fucomip
mov
sbb
mov
mov
cmp
pop
es
iret
pop
mov
mov
test
mov
ljmp
imul
inc
shll
or
or
jecxz
cs
pop
adc
adc
push
sbb
outsb
or
sbb
lcall
xchg
stc
int
xchg
clc
adc
cmp
xor
rol
fwait
xchg
xor
ficomps
in
mov
cld
subb
subl
out
lret
xchg
push
es
and
scas
lret
ror
pop
adc
pop
icebp
push
enter
es
xor
adc
loopne
jecxz
movsl
pop
aas
sub
ret
mov
js
out
mov
arpl
adc
xchg
pusha
jne
dec
pop
lcall
push
mov
xorb
jno
mov
test
outsb
aam
jmp
ficomps
dec
jp
popa
jb
jb
pushf
sbbl
sub
js
cld
inc
popf
loope
inc
mov
inc
or
xor
cmpsl
fmull
imul
push
mov
sbb
cwtl
aam
movsl
dec
imul
mov
testb
std
aam
pusha
adc
pop
dec
xchg
sub
icebp
fldcw
adc
rol
jmp
test
clc
or
lcall
lahf
shl
push
dec
scas
pop
or
bound
cmpsb
xchg
mov
icebp
xor
mov
imul
daa
mov
sub
and
ficoms
mov
jmp
ss
lea
clc
insb
stos
into
cltd
dec
das
fdivl
cmp
mov
push
sbb
jno
test
hlt
mov
jecxz
push
mov
std
imul
outsb
mov
add
je
out
sbb
pop
mov
add
push
xchg
or
adc
adc
jne
adc
aas
cmp
push
test
js
pop
neg
leave
jge
pop
sbb
cmp
sub
push
jno
jg
pushf
cmc
inc
pop
in
pushf
mov
or
hlt
jl
or
jl
mov
cld
daa
push
out
push
adc
lahf
pop
inc
ret
mov
rclb
in
cmp
das
mov
pop
out
jae
push
cld
push
jns
outsl
adc
push
jl
add
daa
stc
fnstcw
fldcw
fwait
inc
mov
or
cmp
cld
jae
sbb
jne
lds
mov
out
pop
pop
adcl
sub
adc
les
lods
and
aaa
and
xor
out
fcompl
xor
cld
dec
cmpsl
test
xchg
pop
les
insb
mov
push
into
jp
aam
sbb
push
add
test
js
outsl
mov
loopne
mov
jns
pushf
mov
ret
cli
mov
xlat
push
sbb
mov
xor
jg
test
imul
jmp
daa
enter
js
pop
pop
aam
stos
sbb
sub
xchg
pop
mov
push
sub
testb
outsl
stos
fcomps
dec
inc
xchg
inc
mov
sbb
push
popfw
adc
repz
adc
mov
js
fldl
lcall
inc
sub
outsl
ljmp
xlat
mov
cs
js
mov
lcall
fdivl
or
fisubrl
add
xchg
lods
push
insb
cmpsb
out
xor
outsl
popa
xlat
mov
hlt
pop
sahf
pop
mov
inc
pop
or
enter
pop
aaa
stc
sub
mov
push
lock
push
cmp
lahf
fs
or
mov
movsb
mov
xor
pop
stos
jecxz
loop
je
push
js
mov
stos
imul
std
data16
icebp
rolb
cwtl
sbb
adc
lcall
rcll
cmp
push
jl
add
es
int
ss
mov
mov
test
mov
cmp
shrb
dec
push
sahf
les
cmp
ret
cwtl
cmp
push
mov
fbstp
or
jne
test
test
outsl
sbb
push
sbb
inc
inc
psubusw
add
stos
and
js
add
xchg
jl
lret
mov
jb
sub
inc
rcr
addb
xchg
cs
xchg
mov
mov
icebp
push
jno
gs
inc
shl
xchg
bound
pop
ret
dec
jnp
jp
enter
or
repnz
mov
jmp
cmp
inc
dec
xchg
nop
faddl
mov
mov
jne
adcl
mov
xor
and
and
push
push
ss
divb
dec
pop
test
push
xchg
pushl
mov
sbb
push
mov
aad
mov
pop
add
ret
mov
sub
xchg
adc
ror
or
loopne
xor
dec
pop
rep
xor
out
clc
sbb
into
ret
ficoms
adc
jbe,pn
xchg
insl
push
jnp
adc
aad
test
cmc
shll
ret
xor
hlt
dec
jns
sub
sahf
mov
mov
ss
mov
jl
imul
mov
xlat
movsb
adc
mul
inc
sub
pop
add
sahf
xchg
and
bound
gs
ficompl
insl
insb
test
and
push
jae
imul
xchg
pop
test
add
leave
push
mov
loope
sbb
outsb
arpl
ss
sbb
push
pop
stos
arpl
stc
mov
addl
loope
mov
mov
sbb
cs
xor
jbe
xor
cs
fwait
sub
cmp
pop
and
pop
adc
popf
aam
jnp
or
or
js
repz
les
and
adc
ret
hlt
dec
repz
shl
inc
or
inc
ret
cmp
repz
sbb
push
mov
pop
lock
or
iret
mov
jbe
pusha
lcall
ficoml
int3
pop
sbb
les
idivl
mulb
mov
fists
pop
add
out
cmp
jno
push
pop
and
or
sti
cmp
lret
aam
dec
orl
xchg
mov
lahf
mov
dec
dec
xchg
mov
mov
loop
sub
or
fwait
mov
or
mov
adc
jno
or
ret
mov
mov
fwait
xchg
cmp
dec
or
inc
and
jmp
jo
fwait
int
bnd
stc
cwtl
stc
mov
roll
push
mov
hlt
jbe
dec
ss
pop
es
push
xchg
bound
mov
and
push
not
lahf
icebp
add
xor
mov
dec
jge
aas
mov
mov
in
addr16
adc
jmp
cmc
jge
jg
test
int
pop
int3
cmpsb
cmp
inc
ds
sbbb
loop
repnz
pop
jo
mov
push
stos
enterw
lock
mov
dec
imull
popf
nop
stc
bound
xchg
out
mov
pop
cltd
jle
and
mov
xor
out
inc
cltd
imul
jmp
mov
in
shlb
sub
fmull
dec
int3
aaa
mov
lods
pop
push
mov
xor
add
std
mov
outsb
fidivl
pop
jge
pop
pop
cmpsb
ss
enter
mov
movsb
pusha
jbe
inc
add
call
fistpll
jmp
jno
clc
stos
xchg
mov
insl
xchg
loope
inc
mov
dec
add
fwait
scas
sbb
mov
fucomip
aaa
rcrb
jmp
in
fildl
leave
stos
aaa
ss
mov
adc
nop
pop
fsubrs
or
mov
cmp
sarl
fnstcw
das
or
mov
out
dec
andb
ja
push
fisttps
adc
icebp
sub
subb
sub
rcr
pop
cmp
data16
pop
xchg
mov
push
push
or
lods
test
xchg
shll
pop
dec
xor
ror
stos
sub
ja
sub
pop
push
dec
mov
adc
flds
mov
imul
iret
push
jbe
sarb
sahf
fnstsw
mov
jnp
aaa
sub
pusha
xor
ror
fsubr
ret
pshufw
cmpsl
lret
lahf
bound
mov
jbe
test
imul
mov
pusha
xor
jecxz
sti
into
pushf
or
test
or
jae
pop
cmpsb
xchg
mov
icebp
mov
mov
jno
mov
ret
xlat
out
sbb
or
std
insb
lret
sub
ret
insl
ret
lods
pop
sbb
jno
cmp
into
fs
in
dec
and
idivl
cmp
dec
gs
xlat
loopne
sarb
mov
push
addr16
fldcw
jge
xchg
mov
pop
mov
sbbb
shl
ret
insb
icebp
shr
cmp
xor
add
adc
arpl
lods
sub
pop
je
sti
push
xchg
cmpsb
or
and
gs
hlt
cld
aas
or
inc
test
xlat
sbb
or
ss
adc
fs
lret
and
mov
push
sbb
push
or
out
mov
push
call
imul
mov
sub
iret
or
cmp
cmp
cmp
adc
out
into
push
cmpsb
push
push
lret
adc
out
pop
mov
clc
in
jp,pn
leave
clc
bound
sahf
jo
sti
inc
shl
stc
cmp
daa
mov
lds
stos
sbb
sub
adc
jl
mov
aam
arpl
rclb
hlt
add
imul
shl
ds
jae
jo
push
cmpsl
data16
aas
xor
or
sarl
and
insl
pop
rcrb
out
popf
inc
jne
pop
aad
aad
add
insb
subb
pop
and
inc
pop
cmp
pop
xchg
fbstp
icebp
es
pop
inc
stos
mov
inc
out
stos
loopne
nop
dec
movsb
mov
mov
in
xchg
cltd
jmp
enter
stos
sahf
cwtl
test
ret
in
ja
stc
addr16
xlat
add
ja
and
icebp
lods
out
rcl
jg
in
jb
je
testb
pop
sbb
add
mov
inc
divb
inc
push
or
loope,pn
jp
mov
cltd
shll
decl
xor
js
loop
mov
sub
mov
out
rol
repz
mov
pop
cs
jbe
shlb
je
ja
xor
test
imul
shlb
rorl
jp
xor
fs
mov
adc
cmp
popa
adc
ud2
in
shrl
lret
fwait
jb
leave
inc
scas
sbb
inc
outsl
ljmp
add
mov
pop
loopne
xchg
push
xchg
call
jmp
lock
xchg
call
and
fsubr
insl
mov
mov
stos
sub
out
mov
outsb
es
cld
sub
mov
lret
jbe
imul
push
pop
add
pop
lahf
fstps
imul
push
adcl
lods
inc
cli
mov
mov
jl
adc
sub
sti
js
cmp
jnp
loope
jg
jo
fidivl
stos
xchg
adc
test
and
sub
data16
in
dec
jl
inc
mov
sub
sbb
imul
testb
idivl
cmp
or
push
inc
sbb
scas
addb
jle
or
icebp
shlb
or
lea
rcll
notl
adc
dec
xor
push
imul
lock
sbb
cmp
adc
testl
outsb
repz
lock
adc
icebp
jae
sub
sub
xchg
jae
inc
mov
daa
popa
jnp
adc
outsb
pop
and
nop
adc
nop
sub
inc
hlt
lods
xor
mov
shr
mov
xor
out
xchg
fisubrl
bound
sbbl
add
sbb
aas
ja
mov
iret
stos
mov
mov
test
and
test
pop
mov
leave
add
mov
cltd
out
daa
dec
outsb
dec
testb
imul
inc
sahf
push
jno
mov
push
cltd
mov
repnz
lods
daa
cmp
jmp
xchg
and
ret
jmp
adc
mov
mov
push
push
push
adc
fdivr
je
imul
mov
push
or
nop
add
movsb
clc
mov
movsb
gs
sbb
hlt
nop
mov
test
adc
out
push
repnz
pop
xchg
push
ret
push
push
lock
dec
add
push
inc
mov
or
pop
filds
jg
fwait
aad
sub
ret
mov
mov
or
js
pusha
push
sub
cmc
add
test
nop
je
incl
inc
jp,pn
mov
test
mov
scas
pop
out
mov
testl
rcrl
xor
sti
loope
mov
sub
sbb
jmp
jecxz
xchg
mov
or
neg
mov
mov
push
rcrb
lods
int3
push
cmp
xor
sub
enter
adc
addr16
add
in
and
mov
push
inc
pushf
in
sbb
inc
sub
dec
pop
aaa
icebp
movsb
gs
inc
cmp
and
jno
das
notl
mov
jmp
dec
insl
xchg
xchg
orl
adc
add
daa
popa
es
xor
lods
mov
jmp
sbb
mov
xor
sub
push
add
pop
cmp
pop
jl
sbb
mov
adc
sbb
dec
pop
lods
mov
arpl
jle
jecxz
add
pop
jecxz
add
mov
scas
aam
jbe
stc
cmc
inc
pusha
mov
push
mov
cli
jge
inc
and
decl
inc
push
ja
inc
or
jecxz
arpl
roll
into
xchg
call
mov
mov
inc
clc
movsl
push
addb
std
and
sahf
or
fisubrs
sarl
jns
mov
xchg
lock
sub
stc
xor
mov
push
mov
and
mov
stos
cwtl
cli
dec
fcomi
mov
les
mov
push
and
xchg
or
push
adc
lock
repnz
sahf
bswap
test
insb
add
jg
ret
mov
fadd
mov
push
out
xchg
add
pop
push
or
punpckldq
pop
dec
lahf
aas
js
mov
pop
add
sub
jle
js
and
dec
xlat
push
adc
lock
adc
mov
inc
mov
syscall
pop
pop
push
sub
sbb
pushf
xor
pop
daa
lret
nop
movb
cld
mov
or
adc
mov
mov
scas
dec
bound
jae
dec
in
pop
hlt
mov
jne
out
stc
or
movsb
push
cltd
in
sahf
sub
test
dec
les
jmp
cmp
adc
push
or
add
push
cwtl
cmpsl
ficoml
fnsave
xchg
jecxz
cmp
mov
dec
mov
mov
popa
mov
cmp
adc
orl
aaa
jecxz
sbb
push
lret
push
mov
sahf
outsl
std
or
push
lods
mov
and
mov
out
outsb
pop
push
cmp
int
jmp
dec
jns
cmpl
sbb
stos
push
sbb
mov
push
pop
push
fisubrs
popf
dec
jae
or
cmp
in
cli
fisubrl
and
sti
pop
mov
mov
add
push
cmovs
shr
insl
and
jmp
jbe
pop
push
mov
outsb
loope
aaa
mov
inc
mov
int3
jnp
inc
cltd
pop
ja
sbb
pop
xor
dec
push
mov
into
push
cmpsl
divb
xor
xchg
cld
shlb
cmp
xchg
imul
pop
dec
xlat
jl
sub
int3
adc
xor
cmp
hlt
pop
adc
inc
sub
out
jno
sub
sub
dec
ljmp
mov
inc
sbb
add
mov
insl
sub
pop
and
dec
mov
int3
imul
cli
inc
fistps
pop
aas
and
mov
xor
mov
shrb
add
cmpsl
push
jne
ds
pop
mov
push
fcoms
pop
push
or
mov
sahf
adc
add
int
xchg
xor
mov
rolb
cltd
std
mov
push
jno
in
sub
mov
add
movsl
xchg
and
inc
push
mov
inc
jno
mov
or
lret
jle
out
pop
ds
cmp
mov
jne
push
andb
les
ljmp
and
pop
into
icebp
sbb
fs
and
out
jo
not
add
xor
test
in
lcall
jne
fxch
out
mov
lahf
daa
mov
cmp
push
aam
ljmp
pushf
push
sti
and
sbb
dec
mov
push
aaa
push
es
sub
pop
repnz
outsb
xchg
aam
xchg
test
push
pop
adc
push
aaa
sahf
in
pop
fstpl
adcl
jp
add
test
popf
movsb
dec
sub
std
pop
sbb
imul
daa
cld
subl
dec
and
out
sub
dec
jb
mov
or
les
stos
mov
sub
xchg
and
das
jb
out
arpl
test
roll
or
subb
pop
cmp
scas
mov
jle
inc
pop
jp
cmp
fnsave
mov
andb
in
rcl
scas
or
mov
xor
xchg
jnp
movsl
mov
sti
data16
cmovns
xor
pop
sbb
jae
mov
ror
sbb
add
rolb
scas
mov
in
sbb
jae
pop
imul
sahf
lods
addr16
or
add
or
push
mov
fucompp
push
shll
rcrl
and
sbb
mov
or
sbb
and
sub
test
jno
add
cmp
mov
xlat
xor
add
push
jmp
insl
jle
xor
push
or
cmc
iret
mov
dec
push
ds
cmp
mov
adc
out
mov
and
lds
imul
movsl
mov
rolb
iret
pop
add
jecxz
in
mov
jnp
xchg
fdivrs
push
clc
sbb
int
pop
idivl
aaa
xchg
sarb
iret
xchg
sarl
shlb
jbe
das
andb
and
and
inc
test
test
test
jns
add
stos
daa
inc
outsl
sarb
test
cli
push
add
sahf
jg
outsb
out
mov
jnp
aam
rorb
jns
nop
jno
sbbb
cmp
mov
push
mov
jmp
xchg
and
add
inc
arpl
popa
mov
lods
xor
jo
inc
mov
push
ret
test
pop
jge
or
ret
gs
mov
xor
jns
out
arpl
and
mov
push
cmpsl
in
pop
andb
mov
fsubrl
xor
stos
jecxz
dec
inc
cvtps2pi
sbb
pusha
xor
and
fsubrs
cmp
jae
mov
sub
push
xlat
or
fwait
add
cmp
mov
les
sbb
arpl
outsb
ss
ret
adc
inc
and
sub
daa
push
sbb
fsubr
xlat
hlt
mov
cmpsb
rcrb
and
inc
cwtl
cmp
bound
cld
mov
xchg
lods
sub
andl
adc
jle
push
shll
lods
gs
xchg
nop
add
mov
popa
scas
pop
push
sbb
repz
mov
inc
nop
fs
add
xor
shll
xchg
pusha
mov
pop
test
mov
movsl
inc
les
adc
jmp
jmp
mov
sbb
fists
incl
insb
movsb
sub
in
push
lret
fwait
test
mov
insl
fwait
pop
out
lods
fmulp
mov
inc
rcl
sbb
dec
ja
sbb
cmpsl
cmp
add
dec
scas
pop
out
inc
push
cmp
pop
test
and
xchg
mov
mov
pop
adc
shll
sbb
aam
xor
mov
popa
stos
inc
adc
popf
sub
lods
pop
xor
aas
xchg
sbb
cmpsb
push
jl
and
push
inc
dec
icebp
sub
xor
cmp
add
pop
movsb
mov
and
push
aad
xor
je
fwait
aad
pop
adc
into
adc
lcall
gs
lock
pushf
movsb
inc
jmp
into
aaa
dec
loope
sub
xor
je
cltd
aam
imul
xor
pusha
push
xchg
loope
mov
in
fsubs
shlb
xchg
cmp
shrl
iret
sti
mov
inc
pushl
push
push
push
ret
pop
inc
mov
jge
push
push
xorl
xchg
and
sub
xor
rorl
jno
push
mov
mov
sbb
test
adc
fsubs
adcb
dec
jne
insb
fadd
push
insl
mov
andl
mov
ret
jmp
cli
xchg
iret
inc
pop
push
mov
out
fcomi
add
data16
mov
fsubrs
aad
sub
mov
decl
fs
cmpsb
xor
repnz
jge
shrb
push
adc
inc
in
lahf
addr16
cltd
fstp
fwait
lods
and
cld
inc
int3
pop
cmpsb
mov
xchg
decb
cmp
sbb
inc
inc
jp
cli
aam
loope
pop
jg
adcb
mov
or
mov
into
sub
inc
xor
jbe
test
enter
sbb
dec
ss
daa
dec
cmp
jae
cmp
mov
push
idivl
jbe
je
es
jecxz
xchg
sub
mov
es
test
or
cmc
pushf
or
nop
add
movsl
test
mov
movsl
pop
popa
cs
cmpsb
dec
push
shl
push
mov
fsubrs
hlt
ljmp
stos
rolb
mov
addr16
lds
push
hlt
sbb
scas
into
inc
pop
mul
sub
jecxz
pop
xlat
mov
pop
shll
scas
jb
cmp
test
xor
cwtl
xchg
jmp
sub
xor
sub
sahf
lret
sbb
mov
mov
enter
sub
mov
imul
nop
sbb
mov
push
inc
subb
mov
pop
dec
in
sbb
popa
cmp
dec
arpl
les
int3
xor
gs
adcl
mov
cmp
daa
out
fdivs
mov
add
aaa
xchg
xor
push
pop
sbb
adc
movsl
pop
xor
lcall
lods
mov
xchg
fdivp
daa
out
lods
pop
rcrb
adc
popf
aas
jle
pop
or
jne
ljmp
call
mov
data16
and
or
aad
sbb
out
cs
insl
inc
popf
push
loope
sbb
inc
pop
cmp
scas
jl
nop
inc
pop
dec
ret
pop
and
xchg
jbe
push
aad
call
push
movsb
mov
add
add
loop
xchg
xor
pusha
loope
sub
push
repz
mov
xchg
adc
cmp
or
imul
loopne
imul
sahf
imul
mov
sbb
int
and
pop
inc
lcall
push
arpl
inc
fidivs
push
inc
jle
in
ja
hlt
xacquire
jg
and
cli
clc
fidivs
dec
hlt
sarl
test
add
roll
sub
lahf
jle
jb
and
sub
push
xchg
jbe
jae
mov
mov
imul
arpl
pop
orl
pop
pop
aad
xor
mov
dec
and
xchg
cwtl
mov
add
shlb
sbb
test
das
das
rcl
divb
mov
add
push
dec
jb
jmp
test
jne
in
das
jp
aaa
dec
inc
push
lahf
push
in
leave
scas
fnstenv
cmp
xchg
movb
and
sub
hlt
imul
cmc
xchg
addb
jmp
sbb
lret
cmp
in
pop
dec
push
jg
adc
jns
inc
add
pop
iret
std
decb
pop
sub
outsb
xor
inc
psubsw
imul
mov
shlb
aam
lock
rorb
push
addr16
fs
pop
inc
ds
push
jl
loope
push
or
test
push
mov
inc
icebp
inc
inc
inc
fidivl
out
xor
pop
ret
mov
jno
lock
daa
das
jmp
stos
test
shrb
int
loope
mov
lds
fisubl
cmp
mov
and
je
sbb
jns
xor
ret
mov
jp
call
or
sub
repnz
pushf
push
add
push
rorb
jp
outsb
loope
out
dec
lret
in
jno
les
pop
sub
stos
mov
hlt
or
aad
push
pop
lahf
xchg
mov
xchg
cmp
mov
mov
adc
call
adc
psrad
mulb
mov
sub
stos
aaa
sbb
xor
mov
mov
sub
cli
insl
dec
stc
mov
mov
inc
dec
and
jno
cmpsb
lock
or
repnz
arpl
inc
loope
pop
sub
insb
xchg
xlat
popa
decl
scas
aas
adc
cmc
punpckldq
jbe
inc
or
inc
out
les
jecxz
dec
insl
adc
and
inc
sbb
mov
mov
mov
into
pop
insb
je
jo
xor
enter
xchg
adc
sub
rclb
jl
or
incb
lahf
pop
jg
add
pop
jmp
mov
fs
addr16
sete
or
xchg
pop
cmp
adc
jb
cld
jge
mov
pop
push
daa
pop
hlt
lods
mov
cwtl
ds
add
out
pop
arpl
cmp
ds
jmp
cwtl
decl
mov
fisubs
pop
xchg
jae
in
addl
cmp
jbe
and
iret
or
push
mov
or
and
fsubrs
lcall
and
pushf
out
jnp
in
lret
shlb
rcr
or
aas
cld
sti
sbb
lods
mov
inc
xchg
xchg
mov
fs
fadds
add
cmc
outsl
jge
push
push
jp
sub
xor
out
cmpsl
bound
testl
mov
dec
mov
inc
push
fsubrl
in
movsl
push
loop
lret
out
mov
sbb
fbld
push
inc
adc
sub
cltd
pop
adc
jo
or
jae
pop
ret
pop
add
fs
cli
inc
arpl
into
out
and
xor
cmc
call
inc
fadd
mov
into
aad
popa
cltd
jle
lea
pop
es
movsl
fimull
cmp
push
cmpl
dec
aad
lcall
mov
iret
push
notb
stc
and
repz
xchg
bound
pop
and
test
xor
sbb
rcrl
fildll
loopne
jp
mov
jbe
notl
jmp
ficompl
cmp
dec
mov
cmpsb
mov
test
mov
mov
lods
lcall
outsl
enter
movsb
stos
xor
mov
lret
fsubrl
cmp
pop
outsl
or
rorb
adc
std
out
out
pop
movsb
push
pop
jl
mov
clc
pop
sbb
jl
and
cmc
mov
xor
jle
rolb
mov
ret
lea
sub
pop
aad
stos
xor
imul
stc
sub
sahf
rorl
cltd
scas
jb
imul
cmp
cmpb
adc
xor
in
mov
xlat
lods
cmp
cmpsl
pusha
arpl
inc
jnp
cltd
aaa
pushf
test
sub
popa
pop
ljmp
test
sbb
jo
cmpsl
add
cli
pop
mov
cltd
insb
inc
in
pusha
xchg
hlt
out
shlb
add
sbb
sbb
shlb
scas
mov
mov
in
dec
fdivl
pop
mov
inc
lock
inc
inc
mov
push
std
adc
push
dec
sbb
cwtl
mov
and
fdivp
sub
adc
lret
pop
je
and
inc
fidivl
popf
testb
jo
push
sub
ss
sub
aam
fdivr
aas
cmp
pop
orb
hlt
scas
divb
nop
ds
adc
ljmp
inc
mov
adc
sub
add
xchg
gs
mov
mov
jle
adc
sub
xor
aas
dec
mov
sahf
shl
jecxz
cmp
fisttpll
pusha
and
test
outsb
das
ret
mov
cmp
mov
std
inc
enter
inc
sub
in
mov
stos
or
fdivr
mov
test
cmp
loopne
popf
xchg
xchg
lahf
test
jnp
jmp
adc
mov
sbb
lcall
aam
popl
ss
fwait
pop
stc
popa
aas
js
les
push
shlb
and
sub
xchg
xlat
sbb
dec
sub
clc
cltd
sbb
sahf
xchg
sbb
fimuls
cmc
xor
pop
pop
push
outsl
test
in
movsb
shlb
cs
sbb
xchg
dec
hlt
lcall
pop
and
and
loopne
fisubl
test
pusha
sti
fninit
leave
enter
imul
call
cmc
lods
data16
push
cmc
cwtl
mov
rcrb
dec
pop
fisttpll
mov
sbb
lret
lret
rorb
clc
cltd
imul
es
sbbl
xchg
popf
test
inc
add
and
cmpsb
mov
cmp
sarl
rcrb
out
push
dec
pop
push
inc
int3
xchg
cltd
fwait
push
rorb
imul
mov
daa
sti
test
lods
xchg
aas
jbe
sub
xchg
adc
shrl
repnz
push
mov
add
repz
pushf
test
into
sti
and
adc
mov
popa
fisttps
in
mov
je
mov
and
pop
sub
stos
add
mov
fcomi
mov
xor
lods
push
sbb
mov
imul
lods
shrl
push
sbb
mov
jge
and
xchg
out
sbb
sub
mov
lcall
mov
inc
xchg
into
dec
fs
cmp
jl
jecxz
adc
push
mov
xlat
fldl2t
out
mov
arpl
scas
into
mov
hlt
push
sbb
stos
outsb
cmc
pop
lods
inc
rolb
pop
adc
sbb
lods
pop
sub
mov
out
out
icebp
xchg
shll
ds
cmp
push
jmp
dec
xchg
pusha
idivl
repnz
adc
scas
mov
push
sti
pop
xchg
push
adc
test
ds
xchg
xchg
scas
out
shr
lret
push
add
bound
add
inc
js
mov
pop
pop
mov
jecxz
mov
mov
cmp
arpl
stc
nop
sbb
iret
mov
addb
inc
cltd
loopne
ret
negb
pop
mov
test
or
mov
into
std
mov
loop
push
xor
loopne
jo
dec
movsb
cli
xor
popf
mov
dec
inc
mov
push
ds
lcall
adc
cli
cmp
cmp
enter
mov
and
lock
jno
mov
xor
sti
lcall
aas
and
imul
mov
dec
dec
add
sub
pop
jecxz
rclb
int
pop
cmp
pop
cmpsb
adc
clc
sbbb
cld
dec
xchg
pop
jg
dec
enter
js
xor
out
cwtl
enter
push
test
or
sub
mov
lea
aas
add
mov
sub
xor
aam
sbb
out
sub
mov
sub
data16
sahf
push
test
mov
test
ret
sub
cld
xchg
jge
sarb
push
ss
jbe
nop
fwait
sarb
inc
pushf
adc
lret
mov
lea
xchg
ret
add
xchg
es
xor
or
mov
dec
xor
xchg
cld
cmp
into
cmp
fsubl
dec
mov
pslld
cmpsb
or
imul
test
add
mov
ficoml
xor
sahf
mov
loopne
repz
mov
movsb
int
fldt
cs
jo
jbe
pop
lds
or
xchg
mov
sub
mov
pop
int3
in
sbb
xor
and
cmp
cmpsl
jecxz
jp
sub
ja
outsl
fwait
or
xchg
inc
xchg
sub
push
xor
sbb
les
push
orl
adc
sahf
test
ja
mov
push
or
jecxz
xchg
push
jmp
sub
shll
jmp
hlt
xchg
out
pop
mov
xchg
cmpsb
mov
rol
std
rcl
push
mov
jns
pop
or
jnp
jae
stc
and
test
sahf
sbb
sbb
cmp
data16
inc
push
pop
dec
pop
xchg
xor
or
jns
mov
aam
mov
int3
sbb
fs
sub
cmp
aad
das
push
lcall
jl
test
add
movsl
dec
xlat
sbb
out
inc
add
in
adc
jns
int
cld
cmpsb
xor
sbb
mov
jp
mov
icebp
stos
fyl2xp1
shrb
mov
popa
imull
je
gs
jbe
in
or
jns
sbb
add
movsl
push
jae
fbld
sub
imul
in
jmp
aaa
pop
decl
jmp
inc
mov
jne
jae
test
int3
inc
ljmp
dec
cld
aas
mov
aam
push
push
cs
enter
test
imul
cmc
ret
push
mov
shrb
popa
and
popa
imul
jnp,pn
es
cmp
das
jecxz
xchg
push
mov
sbb
into
testl
jne
test
sub
inc
push
pop
and
in
cmc
leave
pushw
adc
cwtl
fisttpl
adc
faddl
fwait
mov
bound
ljmp
lods
arpl
mov
xor
inc
push
and
cmp
xchg
fsub
fwait
pop
lods
test
cmp
fwait
rorb
test
cld
sarb
pop
sub
in
jae
mov
lret
fwait
lock
xchg
jecxz
hlt
add
loop
cmp
subl
pop
sub
mov
movsb
enter
test
add
mov
or
jle
xchg
jae
shr
bound
iret
xchg
data16
jmp
pop
sahf
pop
fs
pop
pop
xlat
jle
ret
dec
notl
xchg
fs
pop
add
lcall
loop
out
adcb
lea
push
inc
jbe
lock
add
adc
push
fstps
rclb
iret
mov
mov
aaa
loop
ja
fnsave
dec
fcompl
push
test
mov
mov
xchg
push
test
pop
mov
inc
cmp
test
xchg
mov
pop
test
inc
pop
pop
sbb
lock
dec
mov
jbe
test
inc
arpl
loop,pt
push
rorb
out
push
mov
dec
mov
cltd
aam
rcl
in
dec
adc
mov
mov
mov
inc
stos
mov
mov
popf
xchg
mov
sbb
fstps
jo
out
push
cltd
mov
xchg
mov
add
xlat
sub
repz
bound
bound
inc
pop
sbb
mov
xor
js
imul
lods
push
mov
ficompl
inc
fdivrs
cltd
cmpsb
sahf
imul
jl
movsl
sub
pop
inc
mov
mov
ds
int
in
imul
pop
leave
jg
ja
push
mov
cwtl
adcl
add
mov
sbb
dec
add
jecxz
cmpsl
inc
outsb
push
mov
lods
adc
cmpl
lret
xor
sbb
test
out
xchg
xor
add
sahf
shll
rorb
lahf
sub
adc
push
test
pusha
stos
or
ficoml
sub
stos
scas
inc
aam
mov
and
sbb
pop
stc
xlat
ljmp
sub
into
pop
jecxz
inc
adc
sbbb
mov
cltd
sbb
out
adc
and
in
sub
lea
and
negl
pushf
jne
jnp
dec
xor
mov
or
sti
mov
add
inc
xchg
test
gs
xor
xor
cld
popa
inc
and
xor
mov
push
mov
fcmovnbe
mov
dec
add
sbb
daa
rcr
mov
ret
in
lret
outsl
mov
cmp
push
scas
or
addb
inc
loopne
add
test
xor
push
or
and
lods
push
mov
out
imul
sbbb
dec
test
dec
pushf
inc
jl
xor
pop
sti
and
mov
cli
mov
js
mov
mov
xchg
pop
xchg
ja
adc
fidivl
xchg
dec
ret
pop
and
insl
push
fisttpl
mov
mov
lds
out
cmp
jo
mov
les
mov
mov
arpl
sub
adc
or
mov
or
add
loop
mov
stos
add
loope
jae
repnz
imul
cs
movsl
inc
aam
and
push
jecxz
cmpsb
add
or
out
fimuls
mov
arpl
popf
js
jecxz
mov
pop
int3
mov
out
jnp
push
push
push
pop
dec
out
movsl
adc
dec
rcl
xor
adc
sub
idivb
ljmp
or
push
xchg
cltd
imul
mull
mov
imul
lret
ficoms
and
adc
sbb
aam
jns
int
cld
les
inc
out
cmc
mov
sbb
pushf
addb
jp
pusha
xchg
out
sub
push
out
fisttps
mov
mov
hlt
or
test
and
icebp
movsb
pop
scas
and
test
clc
mov
loopne
roll
loopne
cwtl
mov
sub
mov
mov
xchg
pop
dec
push
faddl
jnp
pop
adc
adc
cwtl
add
jbe
out
inc
add
jge
fstpt
les
shll
sbb
call
das
call
daa
pop
pop
shrb
push
pmullw
add
mov
cmpsb
mov
es
loope
stos
test
mov
insb
push
xchg
mov
dec
in
sub
imul
jge
stc
insl
hlt
adc
dec
mov
xchg
dec
adc
pusha
stos
movsb
cltd
inc
shll
xor
or
stos
mov
in
stos
mov
or
dec
inc
les
aam
push
cld
rorb
mov
loope
jl
sbb
bound
adc
bound
out
pusha
dec
add
pushl
outsb
xor
jnp
imull
out
xchg
popa
and
jge
stos
xchg
mov
test
pop
inc
out
data16
pop
movsl
mov
add
push
dec
mov
cltd
insb
out
inc
or
cmp
movsb
jecxz
leave
fsts
cwtl
cld
ret
jle
clc
xor
outsb
shlb
popa
test
dec
scas
cli
leave
cmp
mov
stos
lahf
dec
cltd
insb
clc
push
adc
cmc
subl
sbb
data16
push
lcall
loop
scas
inc
push
js
dec
xchg
and
ret
push
cmp
test
xchg
stc
mov
mov
sub
xchg
push
es
push
scas
test
fnsave
int3
xchg
sub
outsl
xor
stos
adc
pop
push
shl
je
dec
leave
lahf
pop
mov
and
sub
and
adc
cltd
xlat
inc
outsl
cld
fs
inc
clc
push
outsb
mov
sub
mov
mov
shl
lahf
imul
fidivs
dec
xchg
fisttps
cltd
out
lahf
add
ja
out
gs
or
fistpll
lahf
cmpsb
movsl
and
sti
ja
cmpsl
fwait
leave
inc
fdiv
gs
sahf
sti
rcrb
jg
outsb
call
das
add
fiadds
jle
jl
or
jae
insb
add
mov
iret
push
inc
cmc
add
int
pop
inc
fiadds
mov
push
pop
divl
mov
mov
add
ficompl
lret
ret
subb
test
ror
and
pop
xchg
aam
pop
adc
lret
outsb
jmp
add
sub
jecxz
mov
std
pop
or
and
mov
xchg
sbbl
jne
xchg
xlat
outsb
lret
mov
jbe
daa
loopne
lahf
scas
cwtl
popa
jae
add
cmp
cs
jl
adc
fadds
clc
movsl
nop
inc
adc
or
push
arpl
pop
int3
je
mov
mov
add
loopne
es
push
pop
mov
pop
cmp
sub
loope
ja
mov
or
test
cmp
cmp
iret
push
lds
pop
push
cs
repz
lock
and
jae
sub
inc
aas
pop
adc
push
pop
mov
cmpsl
xchg
cli
sahf
mov
xlat
xor
ffreep
outsl
inc
push
add
push
test
cwtl
cmp
cld
bound
ss
test
mov
add
cmovs
aam
jb
aam
sbb
mov
cs
pop
mov
mov
mov
sti
push
mov
popf
shll
adcb
pop
xor
shll
xor
mov
push
mov
or
adc
addr16
fisubs
mov
aam
xor
out
loop
mov
shll
fld
push
push
shlb
mov
ljmp
fcomip
gs
js
jecxz
gs
pop
lret
xor
cmpsb
dec
inc
push
pop
jnp
pop
in
push
adc
shll
shlb
cmpsl
jl
ljmp
out
aaa
adcb
mov
or
fmulp
xor
sub
jge
dec
xchg
sub
andl
fldcw
repnz
bsf
push
xchg
je
int
cmp
cli
movsb
clc
lds
jmp
loope
jmp
push
addr16
or
call
jb
or
lds
scas
xchg
leave
das
into
je
sbb
cmp
fbstp
or
xor
sti
xlat
push
push
jl
sbb
add
fwait
aaa
stos
push
or
pop
adc
nop
scas
fs
lods
repnz
xchg
repz
hlt
rolb
xchg
movswl
aaa
and
mov
sub
fldcw
test
push
and
stos
mov
mov
arpl
sub
sub
adc
sbb
adc
jbe
lock
lret
iret
push
push
stos
mov
lret
mov
jnp
adc
es
scas
les
sbb
hlt
cli
lahf
mov
jle
lods
fsts
fmuls
add
test
add
fildl
add
cmc
mov
xchg
loop
mov
add
pop
xchg
insl
cwtl
mov
into
add
neg
ja
outsb
std
dec
fnstsw
fwait
gs
movsl
fcmovne
adc
pop
xchg
xchg
or
push
lods
and
cmp
js
lret
lods
xor
pop
sub
mov
jmp
das
push
loop
or
adc
sbb
dec
adc
lcall
xor
scas
or
xchg
jno
cltd
jmp
inc
xchg
ret
lds
popa
lret
das
fidivs
fstpl
xor
in
lea
sarl
movsb
fldenv
flds
lock
dec
adc
pop
or
xor
test
outsl
add
pop
sahf
rclb
or
mov
mov
jecxz
add
into
cli
push
fistpll
inc
jmp
pop
or
popa
pop
and
outsl
and
imul
cld
push
mov
rol
mov
or
clc
repz
jmp
pop
jne
mov
xchg
sub
xchg
call
mov
dec
popf
sbb
xchg
imul
imul
ffree
repnz
or
inc
and
shll
call
idiv
out
add
add
gs
mov
fstpt
mov
mov
cmp
jne
idivb
adc
movsb
ja
adc
jle
mov
mov
fisttpll
subb
push
cltd
stos
mov
lret
adc
mov
add
cmp
aaa
lret
xchg
jmp
fmull
push
fisttpll
cmp
inc
mov
addr16
xchg
mov
loopne
leave
cmp
lds
add
mov
sub
pop
nop
and
rcll
dec
icebp
cltd
cmc
push
dec
mov
out
dec
pop
dec
ds
fldt
ret
inc
icebp
adc
movsl
adc
test
mov
mov
out
pushl
xchg
lcall
and
add
xchg
outsb
es
sbb
loope
addr16
dec
inc
pop
ljmp
mov
adcl
cmp
push
ljmp
bound
sbb
jl
or
push
adc
cs
pop
or
hlt
add
push
sub
mov
pop
cmpsl
sbb
pop
mov
into
mov
roll
daa
loop
and
jle
mov
pop
fwait
sbb
cmc
mov
pop
pusha
sbb
insb
push
sub
pop
add
and
jp
mov
push
mov
dec
cmpl
and
cmpsl
into
or
lcall
add
or
test
sbb
xchg
jg
push
cmp
movsb
mov
test
jmp
pop
enter
imul
lret
jp
repz
mov
rcpps
orb
xchg
xchg
xchg
ljmp
xor
cmp
rcll
neg
mov
jo
sub
and
xchg
hlt
lods
sbb
pop
sub
iret
les
cmp
call
adc
adc
cld
cmp
popf
daa
inc
xbegin
mov
roll
jg
mov
jnp
dec
mov
cwtl
add
or
hlt
ret
negb
adc
shrb
int
ja
pushf
addr16
ja
adc
out
and
xchg
mov
cmp
shll
sub
outsl
xor
js
jo
popf
push
sub
dec
aaa
push
repz
pop
out
xchg
mov
and
mov
pop
lods
popa
std
shrl
cmp
std
nop
stos
add
mov
aad
mov
mov
adc
popf
int3
push
and
mov
sbb
lds
cmp
inc
outsw
inc
xchg
jg
pop
add
movsb
mov
pop
mov
enter
cmpsb
int
and
fdivrl
sahf
jecxz
enter
fld
inc
inc
or
clc
movsb
pop
xor
repz
std
mov
pop
call
movsl
rcl
or
push
jge
cli
cmp
mov
imul
mov
jbe
and
push
cmc
jmp
cs
aas
mov
push
fsub
push
pop
xor
push
push
mov
xchg
or
jnp
nop
insb
cmp
stos
xor
daa
and
popa
pop
xor
ljmp
jnp
jl
push
mov
mov
push
sub
mov
cmp
jnp
out
scas
jb
std
bound
mov
mul
add
lds
jo
inc
imul
and
imul
mov
sub
mov
outsb
jge
inc
mov
lcall
xor
mov
pop
adcb
pop
outsb
scas
mov
mov
arpl
stc
cmp
xchg
push
call
or
push
mov
lret
pop
pop
fwait
loopne
inc
sti
push
inc
loope
jns,pn
gs
and
mov
daa
push
in
mov
pop
jnp
push
pop
xor
mov
jecxz
cmp
flds
cmp
xchg
inc
push
lds
inc
loop
dec
pop
push
mov
inc
push
and
sub
in
jb
sbb
jns
and
fsubl
mov
inc
xorl
xchg
fcmovu
xor
mov
loop
lock
sti
sarl
mov
shlb
mov
mov
cmp
cmp
mov
popf
xchg
mov
jae
inc
add
sahf
and
lahf
mov
or
sbbl
pop
popa
insb
xchg
sar
outsb
xor
xor
sbb
les
and
adc
dec
popf
and
mov
iret
pop
fmull
xor
lds
mov
dec
sbb
sbb
rcrl
ret
cli
cmp
push
xchg
fsubr
daa
stos
fs
cmp
stc
out
mov
mov
ja
pop
lock
addl
mov
stos
add
call
push
cmpsl
in
es
dec
fwait
sub
xor
or
ds
fbstp
mov
mov
cltd
add
dec
or
and
lods
mov
add
push
or
push
mov
dec
nop
iret
jge
xor
jno
ds
pop
mov
insb
lds
loopne
xor
mov
fidivrl
jecxz
dec
jl
mov
lahf
adc
cmp
dec
stc
mov
cwtl
mov
rol
push
xchg
jbe
insb
cmp
mov
sub
clc
movsl
in
mov
jge
fisttpll
pop
iret
pop
addl
in
mov
mov
push
push
mov
out
fdivrs
jmp
loopne
insl
pop
out
jge
fdivrs
sbb
iret
aad
push
pop
sbb
mov
pop
sub
pop
fildl
pop
cltd
div
jmp
cmp
pop
or
dec
pop
pusha
rcl
imul
clc
ret
or
pop
rorl
xchg
push
test
inc
and
loop
lock
mov
imul
flds
xchg
sahf
mov
cmp
mov
inc
or
loop
cmpl
enter
movsb
rolb
mov
push
push
and
pushf
or
rclb
dec
cmpsl
jo
mov
xchg
xor
jp
out
xlat
repnz
pop
into
loope
mov
test
fs
pop
xchg
mov
push
ret
and
cmp
les
ljmp
enter
cltd
cld
enter
fisubrl
xchg
cmpl
xor
inc
push
jnp
xor
sub
and
mov
push
movsl
lock
mov
insb
jns
cld
xlat
mov
out
imulb
push
dec
push
mov
stc
out
test
out
inc
xor
cmpsl
pushw
mov
rolb
insb
addr16
or
out
popf
lret
scas
mov
sbb
add
mov
outsl
xchg
adc
fmuls
mov
mov
mov
jbe
mov
sti
jnp
xor
cmp
xor
xor
dec
scas
sarl
push
xchg
lret
inc
adc
divb
lock
jnp
lret
in
push
mov
loop
push
dec
mov
xor
mov
cld
mov
mov
int
inc
imul
insb
scas
jle
insb
in
les
jp
mov
xchg
lcall
ss
cwtl
pusha
xchg
lock
int3
lcall
mov
mov
in
mov
jns
dec
in
add
push
rclw
jg
mov
insb
jge
mov
sub
outsb
mov
adc
push
mov
popa
sahf
pop
pop
adc
or
pop
adc
lods
js
movsl
sbb
fucom
inc
imul
mov
arpl
mov
pop
test
jne
jg
dec
ds
into
add
xor
test
fs
cli
and
int3
mov
pop
bound
mov
js
jmp
or
cmp
pop
mov
inc
jp
scas
shll
sub
adcl
jne
imul
iret
push
push
sub
adc
fisubl
in
mov
movsb
shlb
lahf
mov
mov
imul
push
dec
std
inc
rolb
mov
cmp
jb
mov
adc
push
mov
adcb
pop
sbb
hlt
test
addb
ret
push
adc
xor
lds
outsb
es
inc
test
stos
outsl
fcomps
mov
pop
cmpl
jno
mov
mov
test
dec
iret
cmp
mov
mov
lods
mov
push
test
sbb
xorb
fwait
sbb
cwtl
or
test
xor
lahf
xor
loope
pop
lods
shll
xor
stos
nop
movsb
xor
mov
and
ds
jno
clc
inc
and
mov
xor
sbb
bnd
or
addr16
jb
pop
push
call
loopne
mov
cmc
or
mov
jmp
jnp
idivl
sub
xchg
stos
mov
negb
jbe
outsl
nop
dec
outsb
or
sub
pop
pop
mov
std
push
add
fisubs
or
mov
inc
scas
aas
ja
cmp
pop
jp
test
loopne
xor
out
jns
pop
xlat
jo
divb
add
stos
xchg
rcrb
fisttpl
xlat
sbb
mov
jb
pop
adcb
nop
lahf
rcrl
inc
cmc
sti
jno
mov
xchg
fs
bound
leave
imul
nop
pusha
pop
jb
mov
es
push
fidivrs
test
xlat
sbb
ret
pop
dec
cmp
in
stos
jae
push
iret
es
cmp
movsl
insl
mov
cltd
sbb
ds
xor
aam
and
mov
shlb
cmp
pop
xchg
mov
jns
pop
fsts
sbb
and
inc
mov
fldenv
inc
out
or
fnstenv
inc
sub
and
and
xchg
adc
mov
decl
outsb
imul
sbb
pop
jbe
adc
sbb
ffreep
sub
push
sahf
out
push
dec
nop
mulb
mov
mov
or
lret
pop
xorb
push
js
adc
aaa
mov
aam
and
repnz
lcall
adc
rcrb
fs
cmpsb
and
push
loope
add
in
in
movsb
gs
mov
sarl
mov
jmp
dec
lcall
test
xchg
jecxz
aaa
push
test
mov
not
jnp
jns
hlt
in
push
fsubl
dec
adc
clc
es
shlb
push
std
mov
mov
movsl
add
push
or
pop
adc
ss
inc
xor
sarb
pop
imul
movsb
add
xchg
push
enter
xorb
scas
sbb
mov
inc
loope
testl
pop
notb
push
sbb
fmuls
or
xchg
mov
outsb
jecxz
cmp
cmc
sti
inc
lahf
push
sti
into
sub
ucomiss
sub
cmc
or
add
sub
data16
lcall
xlat
pushf
cmp
popa
rolb
inc
inc
sub
addb
stos
fidivrl
add
in
js
mov
fmull
xor
lds
jg
dec
out
sub
add
dec
adc
adc
fistpl
rorl
inc
add
add
mov
test
stos
mov
add
jae
dec
mov
out
rcll
in
sahf
pop
dec
jae
and
movsl
scas
push
das
jge
fldl
jmp
sub
jecxz
fistps
push
scas
push
mov
andl
cltd
cmp
fisubrl
lea
adc
pop
mov
and
mull
aam
dec
rcl
push
shlb
repz
sbb
lret
mov
dec
outsl
es
stos
cmc
xchg
and
jl
adc
imull
xor
sub
jge
push
mov
jo
fildl
enter
retw
outsb
test
adc
push
and
lods
push
sti
sub
das
mov
popf
fadd
pusha
xor
lods
push
sbb
mov
xor
std
cmp
mov
mov
outsl
and
repz
cmp
into
popf
mov
sahf
xchg
push
xchg
push
jp
cmpsb
lock
pop
add
jne
mov
rorl
sar
cmpsb
ja
lds
sub
adc
cmpsl
cmpl
dec
inc
jns
mov
xlat
roll
ret
out
add
out
push
fs
movsl
inc
or
shrb
subl
dec
loopne
int
mov
aas
xchg
dec
push
popf
inc
call
int
sbb
jp
sub
and
mov
sub
insb
aam
dec
lock
rcll
or
pop
mov
and
rol
loope
fidivl
mov
sbb
testb
enter
movsl
ja
dec
pop
addr16
sbb
sti
add
cmpsb
repz
jp
dec
cmp
popa
adc
and
leave
mov
or
repz
jne
add
mov
mov
xchg
ljmp
mov
mov
sbb
daa
xchg
push
clc
pop
mov
or
mov
repnz
mov
xchg
inc
or
dec
push
subps
aam
dec
leave
xchg
lea
or
aam
sbbb
and
nop
inc
enter
jle
lods
mov
cmp
aad
push
mov
and
aaa
ret
mov
stos
loopne
xchg
or
sbb
leave
jo
cmpsb
push
pop
mov
push
jecxz
adc
or
or
jg
cmpsb
sub
cmpsl
mov
out
pop
imul
stc
std
or
mov
enter
sub
pop
xchg
dec
cltd
jbe
ja
sti
pop
pop
xor
stc
loope
andl
push
inc
pushf
out
add
xor
sbb
addb
or
es
jns
scas
negl
push
xor
hlt
push
andb
sub
movsb
stc
adc
fnstsw
scas
jg
jle
jl
cmc
xchg
adc
lret
divl
mov
lea
cmp
es
xlat
shll
cli
ja
lea
subb
mov
or
inc
cmpsb
mov
pop
xchg
loop
std
xor
mov
jne
js
cli
in
fucomip
pop
add
sbb
jbe
popa
sbbb
aaa
call
das
out
xchg
rclb
fwait
out
cld
push
inc
js
pop
adc
push
pusha
arpl
jne
out
push
dec
mov
mov
int3
dec
fdivl
sub
outsl
sahf
jge
loop
divl
cmpb
mov
cmp
xchg
lds
adc
sub
test
lret
repz
in
jae
pop
inc
std
cs
sub
mov
mov
add
les
mov
js
xchg
pop
pop
dec
stos
imul
inc
scas
mov
orl
dec
push
xchg
lds
in
lahf
int3
dec
xchg
test
dec
sarb
pop
test
setae
sbb
cmp
sbb
cmp
cmp
cltd
sti
mov
hlt
mov
inc
adc
push
sbb
jnp
dec
fsubrs
scas
lret
jmp
stc
add
aaa
pop
cmpl
dec
ss
xor
mov
inc
adc
xchg
jg
popf
xchg
jge
leave
fldcw
dec
dec
and
bound
das
cltd
sbb
imul
cmp
out
xchg
pop
loope
sbb
je
mov
sbb
pop
inc
xchg
leave
dec
pop
push
sub
daa
mov
mov
pop
fiadds
cmp
and
cltd
dec
fs
lods
nop
dec
lock
add
fwait
mov
leave
mov
into
adc
outsl
cltd
pop
daa
ret
adc
cmc
ds
mov
pop
pop
add
cmc
inc
movsb
xor
push
rorl
mov
xor
mov
xor
cmp
adc
dec
or
insb
ret
test
rorb
or
ds
outsl
mov
sbb
mov
sbb
jns
in
mov
mov
ds
and
mov
stos
mov
jmp
or
std
rcr
rcll
lret
ror
daa
sub
cmp
sbb
pop
icebp
jp
repnz
and
adc
shr
jg
adc
or
idivb
inc
ret
adc
insl
daa
cmp
loopne
jp
in
dec
dec
cmp
or
mov
jg
push
or
rolb
mov
mov
pop
fsubr
jle
and
std
xor
or
cltd
int
sysexit
repz
dec
nop
in
dec
in
xchg
out
cmp
and
add
arpl
mov
add
mov
cmp
int
pop
lahf
in
les
inc
jne
lods
jmp
push
push
sarb
sbb
add
mov
gs
and
xchg
pop
lods
pop
mov
arpl
int
dec
xor
jg
mov
and
sbb
arpl
and
sbb
pop
sti
fmull
pushf
sub
sub
scas
push
scas
mov
std
push
or
and
out
cmc
pop
xchg
fs
jne
cli
cmp
sub
out
scas
hlt
stos
lods
cltd
sbb
push
inc
mov
xor
sbb
sub
add
pop
dec
testl
pusha
cmp
push
popa
test
sub
xchg
jmp
mov
pop
in
mov
mov
fcoms
sub
test
jmp
xlat
in
lret
inc
mov
mov
push
sbb
cli
cltd
test
shll
inc
rcll
push
aaa
adc
xchg
sub
inc
inc
xor
dec
nop
mov
inc
shlb
jecxz
fdiv
mov
pop
js
and
out
sti
or
cli
mov
pop
fistps
jl
xchg
sbb
aaa
cmpsb
mov
ds
les
sub
pop
pop
jmp
int3
push
xchg
adc
mov
inc
jecxz
or
fistps
mov
jp
mov
lock
add
sub
and
decl
pop
jns
lods
push
fadds
icebp
mov
jle
js
imul
hlt
push
sub
sub
mov
sub
popl
sbb
dec
pop
les
je
arpl
push
or
mov
or
cli
sub
test
push
push
mov
xchg
call
pop
or
aam
in
jae
lcall
cmovg
push
inc
pop
insb
mov
mov
addb
xchg
adc
and
inc
mov
and
mov
test
mov
incl
hlt
inc
movsb
dec
aad
push
pushf
or
adc
sub
lods
test
lock
pop
gs
fbld
xlat
cmp
pop
aam
add
push
jge
pop
adc
mov
adcb
and
out
adcl
jl
cmp
in
dec
jecxz
add
out
insb
in
nop
sub
test
std
cli
or
cmp
cwtl
dec
mov
adc
shlb
sub
cmc
and
cmpl
into
jbe
sbb
loopne
in
mov
int
inc
jnp
fbld
push
mov
jo
add
or
aam
ja
push
xchg
mov
push
scas
push
mov
jno
add
in
xchg
outsl
cmpl
cmp
cmp
nop
shll
fidivrl
insl
ja
vpsubsw
das
cwtl
loop
ret
cmc
and
scas
jne
ja
clc
lods
jae
dec
lahf
shrb
js
cmp
test
sub
push
jns
lcall
xor
dec
or
mov
iret
aas
fld
lahf
mov
and
mov
inc
movsb
sub
mov
mov
push
icebp
mov
sbb
mov
test
repnz
push
aaa
ret
mov
sbb
repnz
or
mov
add
xchg
pop
xchg
scas
aad
insl
mov
pushl
movb
lret
lret
in
insl
xchg
ja
dec
movsb
std
lds
push
xchg
push
jp
pop
xchg
sbbb
rcrl
movsl
pop
mov
cmpsl
push
dec
and
shrb
lret
xor
dec
xor
lcall
xor
idivl
stos
fimuls
adc
xor
ljmp
adc
aaa
stos
int
out
mov
imul
int
jge
dec
imul
mov
rcrl
cld
jecxz
mov
enter
icebp
nop
sbb
and
xor
add
int3
in
mov
mov
out
dec
xchg
mov
mov
mov
pop
sbb
push
in
pop
leave
clc
jmp
inc
inc
aad
iret
outsl
dec
das
jns
mov
xor
sub
pop
popl
leave
pop
sbbl
js
mov
sub
inc
call
and
adc
xchg
mov
test
xchg
pop
jp
xchg
testl
rcll
add
nop
lcall
add
lds
jg
jle
dec
cmp
sbb
dec
adc
mov
jecxz
int3
jl
jbe,pt
aam
das
and
dec
dec
rolb
mov
ss
in
test
lods
repz
mov
xor
or
cmp
loopne
lea
push
push
sub
xchg
push
mov
filds
fistl
xorl
es
lret
push
cmp
ja
push
rol
sbb
dec
jle
dec
cmp
sbb
add
mov
push
call
loope
shrb
dec
or
mov
ret
cld
inc
or
cmpsb
add
adc
mov
jge
and
sbb
cwtl
repnz
aas
jecxz
inc
bound
mov
sub
lret
je
imul
fld
mov
jge
subb
jae
pop
aas
inc
or
fnstcw
add
int
mulb
inc
cltd
xor
and
jbe
pop
iret
xor
mov
mov
hlt
dec
loope
push
and
mov
or
fbstp
sbb
pop
frstor
mov
mov
test
lock
add
fidivrs
leave
dec
shlb
jne
pop
sahf
pop
ja
loop
cli
popa
cwtl
push
rcr
push
movsl
fcmovnbe
inc
inc
inc
and
pop
mov
inc
mov
call
xchg
in
or
sub
sarb
sahf
mov
adc
or
loopne
jl
cmp
jnp
xor
push
dec
lock
clc
sub
cld
addr16
imul
mov
test
fsubl
aad
xlat
aas
xor
sar
sbb
sar
jmp
popf
push
addr16
pusha
sbb
aad
mov
cmpsl
lret
xchg
daa
test
test
std
xor
jle
xor
pop
mov
xchg
mov
fiaddl
out
xchg
gs
mov
clc
mov
push
mov
lahf
imul
lret
rclb
les
mov
push
in
inc
mov
and
mov
cmp
stc
mov
or
shrb
xor
arpl
add
test
stos
adc
lods
xchg
sub
scas
jno
sbb
jmp
es
test
mov
xchg
pop
mov
cmp
arpl
sub
sahf
mov
jno
ret
ror
push
mov
sbb
xor
sbb
sti
ret
hlt
or
in
in
sbb
in
mov
test
inc
dec
inc
add
push
mov
pop
cld
inc
addl
jl
cmpsl
mov
cwtl
adc
stos
inc
insl
mov
sub
jne
outsl
fcoml
mov
and
movsl
inc
pop
push
and
bound
push
jecxz
inc
aaa
mov
mulb
div
jae
mov
outsl
sbb
movsl
sti
dec
mov
imul
or
mov
sub
push
std
sbb
push
popf
cmp
lds
lret
decl
pop
shrb
out
or
pop
xchg
mov
iret
sub
into
xor
jnp
cmc
mov
pushf
mov
lea
into
lods
lods
dec
jle
or
inc
xchg
lahf
mull
aad
shr
sbb
mov
lret
jbe
int3
add
inc
bound
mov
mov
mov
add
xchg
xor
adc
imul
jle
add
or
push
pop
pusha
mov
out
enter
jle
and
cmp
xchg
or
imul
dec
lcall
mov
adc
dec
test
arpl
popa
dec
xchg
cmp
rolb
or
mov
nop
xorb
roll
shr
mov
dec
fsincos
lods
xor
sbb
dec
ret
testb
cs
es
jns
icebp
or
lea
sbb
leave
cmp
sub
out
cmp
cmp
push
jge
lret
push
push
int
bound
push
repnz
xor
mov
sub
adc
mov
loope
inc
or
mov
ret
push
push
pop
imul
aam
push
shrl
movl
sbbl
stos
add
ljmp
in
adcl
in
insb
movsl
and
imul
jge
dec
dec
sti
loop
stos
dec
cmp
int
xchg
and
mov
cmp
loopne
xchg
inc
mov
pop
movl
pop
inc
xor
mov
xorb
in
xchg
jg
popf
sub
xchg
into
mov
lcall
inc
xchg
unpcklps
stos
adc
sarb
mov
das
or
cmp
pop
pop
inc
adc
xchg
mov
fisttps
jge
ror
dec
cli
or
repz
mov
dec
xor
mov
dec
test
test
mov
ffreep
popf
cmp
loopne
mov
repz
pop
call
sbb
sti
das
decb
xor
sub
adc
xchg
stc
nop
and
sbb
xor
mov
inc
fidivrl
jge
out
lea
jl
test
sahf
jge
pop
movsl
add
jae
shrl
test
ljmp
ret
rclb
or
shll
mov
hlt
cmp
xor
loope
dec
loopne
and
mov
mov
popa
mov
push
jb
xor
jmp
adc
lock
test
cli
fmul
or
cltd
and
imul
jae
sub
test
pop
pop
ret
fs
in
sbb
inc
stc
fwait
and
int3
jo
aas
cltd
dec
ljmp
or
movsl
jnp
loope
and
adc
jmp
ds
fcmove
sbb
inc
cli
add
sub
icebp
rorl
mov
stos
mov
bound
sbb
or
movsb
rcl
xor
push
ds
sahf
pop
mov
pop
push
je
sbb
mov
fwait
jge
daa
cmpsb
sbb
in
sbb
pop
pop
lea
pop
and
mov
ret
xchg
jmp
cmpsb
adc
rolb
outsl
xchg
dec
sub
scas
lret
hlt
test
push
jo
jnp
pop
loop
mov
mov
outsb
pop
or
jns
popa
pop
push
les
and
sub
iret
cmp
data16
mov
xor
imul
sbb
adc
jo
jg
lret
sbb
shlb
std
outsl
pushf
xorb
addl
mov
lcall
rorb
mov
inc
fwait
mov
scas
xchg
loope
loopne
xor
lods
roll
lcall
xor
sarb
sub
dec
ja
ja
mov
push
aam
dec
mov
cmp
rorb
push
mov
pop
inc
xchg
ds
dec
xchg
lcall
xor
and
inc
sbb
insl
push
nop
xchg
fcomip
mov
inc
ss
fsts
ret
push
pushf
sbb
and
daa
ss
stos
inc
pop
mov
dec
std
sar
sub
aaa
mov
fsubr
xchg
aad
loopne
or
xchg
arpl
lahf
mov
addb
pop
int3
icebp
xchg
mov
and
xchg
jb
xchg
push
sahf
dec
aam
jl
push
lahf
lret
sub
mov
jo
rclb
xor
and
orl
in
push
clc
mov
test
adc
mov
fildl
xchg
jne
scas
lahf
adc
gs
in
jmp
iret
orl
sar
out
movsl
or
fwait
int3
insl
outsl
jl
stos
push
push
test
test
dec
nop
icebp
push
and
hlt
cmp
enter
and
mov
cmp
mov
push
jmp
out
add
jo
fs
cmpsl
xor
xor
pop
xchg
add
sbb
divl
inc
mov
les
ljmp
dec
pusha
xor
adc
popf
int3
pop
adc
mov
jg
pop
add
cmpsl
adc
inc
xor
mov
adc
mov
rcll
cmp
mov
add
out
cwtl
clc
inc
jo
sbb
inc
push
cld
adc
push
lods
pop
mov
pop
ret
jno
fsubrs
and
pop
es
out
jp
adc
xchg
ds
subb
mov
mov
push
in
xor
and
xchg
mov
push
lahf
fwait
and
add
xchg
loop
test
pop
inc
jo
mov
and
dec
jmp
push
or
jmp
inc
or
xorb
cmc
mov
dec
int
arpl
dec
ret
dec
mov
test
adc
and
pop
xchg
pop
jecxz
fwait
clc
mov
dec
mov
mov
sub
mov
cmp
mov
pop
dec
sbb
outsl
inc
test
push
adc
loop
scas
jb
xor
and
scas
cmpsl
cmc
loop
aad
lock
addr16
or
test
fisubs
mov
add
inc
fwait
addr16
adc
das
inc
loop
cmc
mov
sbb
es
movsb
jecxz,pt
mov
cmp
and
mov
push
dec
fwait
and
nop
dec
and
ljmp
xor
ret
mov
mov
xor
cld
xor
dec
loop
inc
arpl
ss
jbe
fs
pop
jo
out
call
jnp
fsts
movsb
push
xor
mov
mov
movsb
rcll
test
fnstenv
mov
out
dec
es
in
mov
dec
sahf
or
shll
rclb
pop
xorb
out
sbb
arpl
add
inc
xor
adc
movsb
push
arpl
dec
push
mov
incl
push
mov
mov
mov
jbe
inc
mov
xor
jb
inc
popa
lcall
push
iret
jae
xchg
cmp
jmp
repz
sbb
sub
clc
fildll
sbb
pop
add
dec
das
pop
fdivp
add
add
fnstsw
adc
cltd
das
mov
xor
xchg
ljmp
xchg
je
mov
push
mov
push
mov
leave
icebp
mov
mov
shrb
out
cwtl
sahf
mov
fidivs
sti
adc
clc
rorb
xor
sub
and
ret
leave
sbb
int
out
repnz
pop
testl
cmpsl
xchg
stos
ljmp
adc
or
xchg
pop
push
aam
lea
cmovnp
mov
mov
cwtl
rcll
pop
sub
and
dec
jbe
sahf
jb
adc
and
adc
jno
loop
mov
in
inc
ficompl
nop
xchg
mov
or
ds
fcom
push
xor
icebp
push
test
jns
dec
xchg
test
sbb
sbb
out
imul
daa
ret
sbbl
inc
testb
sbb
xchg
scas
out
out
test
cmpsb
jno
in
add
leave
hlt
xchg
mov
sub
sbb
mov
stc
jns
imulb
and
xchg
xor
sbb
xchg
fadds
imul
xchg
push
gs
es
or
addb
mov
xchg
sbb
stos
dec
pop
xchg
push
add
inc
jno
call
add
pop
mov
adcb
loop
push
push
in
arpl
ljmp
and
fildl
inc
or
or
test
lcall
test
cs
es
cli
lods
xchg
sub
inc
rorb
cltd
xchg
shll
aaa
out
push
xchg
cmp
les
jmp
push
jne
sti
adc
mov
xchg
sub
jg
lock
lock
sub
gs
sti
leave
call
or
mov
or
inc
sbb
pop
jmp
addl
push
js
scas
jb
pop
ret
dec
popf
pushf
imul
icebp
fimull
insb
ret
or
cmc
push
aam
imull
jmp
jg
mov
cmp
inc
jo
stos
enter
test
sub
jo
dec
int
aad
stos
in
add
pop
lahf
test
pop
mov
and
cltd
push
add
mov
or
outsl
into
lock
out
mov
nop
mov
pop
test
pop
push
mov
fdivl
dec
xor
aas
xor
add
dec
adc
dec
mov
pop
loope
es
xor
dec
xor
and
fldenv
out
ret
pop
mov
inc
outsb
leave
outsb
in
jle
inc
mulb
aad
int
mov
ret
xor
outsb
xor
pop
outsb
xor
je
gs
push
out
push
pop
jle
or
xchg
jecxz
fisubl
fiadds
fwait
xor
xor
xor
loopne
cs
sbb
std
jmp
xchg
aam
inc
sbb
mov
inc
xlat
sub
dec
cmp
cltd
jbe
adc
mov
in
mov
outsl
push
jmp
cmp
sub
mov
aaa
enter
shll
push
lcall
rcrl
aas
mov
lods
push
mov
nop
lds
xchg
cmpsl
in
leave
jae
cmp
fcoml
push
mov
adc
dec
cld
loopne
push
jl
ljmp
sub
pop
shrl
cmc
dec
push
imul
fs
inc
cli
jbe
ret
xchg
mov
adc
push
push
xor
lods
test
cmpsb
adc
add
adc
and
adc
adc
and
aad
pop
leave
xchg
add
or
fldt
xor
xchg
or
das
pop
hlt
loope
and
mov
push
xor
inc
add
mov
xor
add
jle
stos
andb
fisubl
xchg
clc
or
loopne
movsb
nop
flds
push
xchg
das
repz
push
add
loop
cld
pushf
inc
or
mov
shrb
sub
std
jne
mov
mov
mov
in
sbb
es
sub
and
lea
jp
adc
inc
cli
push
imul
mov
dec
pop
hlt
mov
push
test
rorb
mov
mov
nop
dec
or
xor
pop
or
jmp
std
add
loop
dec
pusha
lock
scas
ret
arpl
ss
mov
jne
mov
nop
and
popf
and
out
pop
mov
adc
nop
pop
rolb
xor
sub
in
mov
in
test
mov
subl
pop
ljmp
shl
sub
pop
pusha
mov
mov
aaa
mov
inc
cmp
ficomps
ret
std
clc
mov
and
mov
cmpl
lahf
mov
cli
pop
outsb
test
nop
xchg
jp
inc
cmc
into
pop
lods
or
lods
adc
dec
pop
jne
push
push
pop
pop
push
cmc
push
insl
inc
jnp
jbe
jle
je
dec
sbb
xor
or
enter
fstl
sub
cld
je
lock
inc
fwait
sbb
negl
pop
mov
cld
mov
cmp
mov
incl
xlat
mov
call
call
add
nop
mov
mov
xchg
cld
mov
test
adcb
fcompl
sub
push
push
jge
and
sbb
rorb
adc
inc
in
popl
cmp
imul
sbb
mov
clc
in
mov
cwtl
daa
fadds
dec
icebp
or
sbb
mov
inc
stc
mov
inc
push
icebp
or
repnz
aad
sbb
cmp
push
in
xchg
inc
les
outsl
test
and
xchg
jmp
icebp
jno
push
mov
gs
cmp
mov
adc
lcall
inc
cli
outsl
mov
jno
data16
out
pushf
xor
xor
mov
jl
adc
push
push
addw
cmpsl
xchg
sub
ss
and
adc
sub
add
mov
sbb
jmp
jp
adc
mov
data16
mov
js
mov
fadds
cmp
lcall
icebp
out
or
pop
inc
enter
mov
xchg
lea
xchg
neg
popa
in
shl
test
jg
push
sahf
fldenv
sub
es
jnp
pop
cwtl
jo
out
cmpb
mov
sbbl
dec
cmp
jnp
pop
mov
fldcw
dec
mov
outsl
push
adc
iret
fwait
loopne
dec
shrb
stos
fisubrs
fs
jno
add
xchg
inc
mov
mov
fcomps
or
dec
sahf
pop
pop
fcmovne
push
mov
cmpsl
inc
addb
xlat
outsl
rcll
cs
ss
mov
bound
adc
xchg
outsl
xor
inc
rclb
pop
leave
scas
outsl
push
aad
test
loopne
popa
jecxz
jbe
pop
mov
xor
dec
jecxz
pusha
xchg
sar
add
cmovne
pop
leave
rolb
push
sub
fwait
cs
je
ficompl
repz
ret
mov
aaa
fs
xor
sub
sbb
mov
and
jle
enter
rorb
mov
and
inc
dec
and
fwait
add
rcrl
es
cwtl
mov
adc
loop
mov
jo
xor
out
mov
pop
xor
in
jp
and
push
inc
sbb
cmpsl
movsl
and
lock
out
lea
arpl
lret
scas
xor
mov
mull
pop
jecxz
and
lcall
insl
test
mov
and
xor
fst
pop
and
cli
movsb
mov
test
sub
imul
mov
mov
mov
push
push
gs
hlt
pop
adc
xorb
js
mov
inc
xchg
daa
mov
test
repnz
add
pop
in
adcb
pop
enter
inc
mov
shll
push
rclb
sahf
dec
mov
lods
out
in
xchg
test
andb
movsl
adc
movsl
stos
cmpb
icebp
cmpsb
adc
ja
sarb
das
stc
data16
sbb
arpl
pop
mov
adc
and
push
lret
adc
es
test
inc
mov
cmpsb
loop
dec
xor
or
cmp
imul
mov
repnz
pop
je
and
jno
cmp
inc
jns
ds
jg
bound
inc
and
adc
adc
mov
mov
mov
ljmp
daa
or
leave
mov
movb
cmp
mov
sub
sti
inc
cmp
lds
rcll
adc
aas
int
add
and
dec
dec
js
cmc
sub
jnp
sub
into
dec
movsl
mov
pop
hlt
dec
cmp
cmpsb
push
fsubr
lea
mov
jmp
xchg
cmp
scas
arpl
jae
outsb
loop
ljmp
outsl
sub
sarb
add
push
fcomps
xchg
fcmovnb
adcb
nop
fimull
aad
or
sahf
bound
jb
xor
lahf
or
outsb
ficoms
sbb
test
lahf
jl
test
ljmp
sahf
cmpsb
pusha
pop
and
out
sbb
aam
jmp
xchg
sbb
popa
xchg
movsb
cmpsb
repz
mov
push
lahf
push
data16
fildll
imul
fs
test
cmp
stos
or
pop
and
push
test
lcall
push
push
orb
fnstsw
daa
idiv
mov
sahf
add
std
and
fsubl
push
sub
jne
xchg
push
pop
leave
stc
mov
add
xor
inc
jle
repnz
imul
push
call
or
lahf
mov
lahf
mov
in
xchg
dec
and
and
jl
jo
mov
jno
test
cwtl
mov
cmp
cmp
sbb
push
in
das
sti
call
and
scas
int
push
mov
add
or
mov
xlat
ds
insl
test
push
aaa
push
test
cmp
into
xchg
add
call
fcompl
fwait
pop
sub
lahf
repz
jmp
lods
inc
pop
sti
std
ja
jne
push
cmp
fldl
push
icebp
aad
rcrb
lock
add
cmp
inc
popa
mov
inc
insb
popa
lret
adc
stc
fwait
es
add
xor
call
inc
sbb
mov
mov
mov
js
test
or
testb
gs
in
popf
inc
cltd
std
fdivrs
sub
leave
push
dec
cmp
pop
xchg
or
inc
sub
fcomps
lcall
or
push
fnstenv
jecxz
mov
jg
add
movsl
jbe
adc
js
idiv
jge
pop
ret
add
sbb
ss
mov
repnz
jb
outsb
rcrl
adc
aas
jnp
das
sbb
and
xchg
or
loopne
shl
sbb
xchg
push
and
inc
cbtw
lea
mov
and
fs
shl
sbb
and
inc
daa
and
in
sub
shrb
xchg
add
fsubl
sub
mov
imul
orl
lds
test
push
fisubs
stos
or
push
fldenv
stos
out
clc
mov
movsb
mov
outsl
mov
fdiv
pop
jmp
adc
inc
loope
xchg
xlat
xor
pop
mov
fsubs
jne
lahf
and
sub
aas
inc
xor
mov
dec
xchg
aad
push
lcall
xor
jl
cmp
mov
mov
xchg
xchg
add
add
fsubs
imul
aam
movnti
jmp
nop
fsubrl
std
lds
mov
push
add
addr16
call
lods
add
fcomp
xchg
outsl
adc
or
and
xlat
xor
pushf
xchg
jecxz
xor
imul
lret
or
inc
ljmp
addl
push
pop
clc
sub
inc
sub
adc
mov
pusha
addb
jns
adc
or
sbb
jb
mov
and
lea
pop
mov
cmpsl
movsb
cmpl
push
adc
lods
pop
add
adc
pushf
popf
mov
fisttps
cmp
std
daa
je
dec
int3
test
out
inc
insb
dec
enter
and
pop
mulps
push
mov
mov
stc
push
and
cmp
add
sbb
inc
out
mov
sbb
or
aas
adc
xor
dec
lods
adcb
lods
adc
adc
or
pop
int
push
cmp
inc
mov
test
mov
pop
fisubrs
scas
out
std
cld
pop
push
daa
inc
daa
cmp
cmp
divl
push
stc
jge
cltd
int
dec
sub
pop
dec
insl
cld
out
lahf
decb
iret
mov
dec
idivb
xchg
xchg
and
xchg
push
mov
pop
std
cmp
jl
stc
mov
ret
sub
xor
mov
loopne
bound
shl
adc
or
ss
cmc
fists
sub
scas
jno
jno
es
sub
xchg
sahf
fwait
cltd
mov
fstpt
imul
adc
mov
add
cld
aas
xchg
scas
ljmp
jbe
addr16
inc
xlat
ss
pop
xchg
imulb
cmp
sub
mov
inc
sbb
leave
les
add
mov
mov
jge
push
leave
sbb
gs
or
inc
aas
cs
push
and
es
pop
scas
xchg
pop
pop
ficomps
dec
rclb
int3
inc
inc
scas
data16
push
cs
dec
cs
dec
xchg
inc
pop
mov
adc
ja
xchg
mov
jno
decl
sahf
xor
jmp
push
push
rol
push
pop
mov
ja
sbb
lret
test
add
jo
cli
mov
jl
rcrb
pop
mov
xchg
xor
jge
mov
jnp
xor
xor
les
je
ljmp
into
insl
cmpb
subl
xchg
or
jp
pop
movsb
outsl
add
cmc
mov
cmpsb
dec
dec
jnp
leave
or
sub
cmc
das
addr16
adc
xor
jne
or
cmc
xchg
mov
outsb
and
pop
movsb
lahf
jo
insb
cwtl
xor
inc
jnp
jo
jno
imul
xchg
sar
rcrb
fcomps
loopne
and
jp
mov
xor
jbe
icebp
mov
dec
push
ret
cmp
lcall
and
push
cmp
mov
hlt
add
or
mov
adc
xchg
and
pop
push
test
fistl
jecxz,pn
sub
sbb
mov
loopne
jne
add
das
and
inc
cwtl
insl
rorl
xor
xchg
ss
jnp
stc
mov
setg
xchg
test
xor
addr16
mov
pop
push
adc
jl
inc
xchg
jne
adc
lea
repz
or
xchg
popa
inc
mov
jp
pusha
sbb
add
fisubrs
outsb
pop
shll
or
call
enter
xor
mov
popf
loop,pn
dec
adc
dec
inc
lret
ljmp
push
pop
pop
xchg
mov
pop
scas
call
fcmovne
outsb
jl
test
or
adc
push
xadd
pushf
fdivrs
imul
inc
push
test
std
cltd
hlt
fwait
ss
ja
sbb
fs
cmp
jg
cmc
sub
lret
jmp
cmp
aad
cmp
shrb
jb
test
adc
into
test
repz
mov
jne
add
call
cmpsl
dec
fbld
and
inc
js
mov
aas
ret
stc
fistpl
or
data16
int3
mov
mov
mov
ljmp
or
xchg
inc
cmp
insl
xor
movsl
lcall
icebp
add
cs
mov
scas
insl
jge
je
cmp
sbb
xor
xchg
fidivrl
ss
dec
xor
and
pushf
outsb
dec
popa
data16
insb
lcall
jg
mov
aam
jg
xchg
insb
pop
mov
jno
jl
mov
jo
xchg
jmp
test
push
inc
out
add
enter
push
lret
jb
lea
mov
xor
scas
and
jmp
pop
addr16
lds
imul
push
pop
adc
inc
cltd
lods
in
scas
inc
adc
aad
leave
loop
and
xchg
rcl
and
dec
xlat
daa
cld
push
mov
scas
xchg
test
mov
gs
cmc
mov
mov
or
ror
out
inc
test
mov
cmpsl
pop
nop
push
xor
in
pop
gs
les
and
test
pop
xor
call
mov
rcr
jo
jno
lods
std
mov
mov
hlt
xchg
repnz
xor
cmp
xor
and
dec
cltd
int
pop
mov
leave
push
jmp
lds
jmp
insb
mov
pop
testb
or
mov
in
or
test
ret
pushf
dec
add
mov
shrb
push
xchg
dec
nop
faddl
xchg
sbb
test
inc
icebp
test
aad
call
or
imul
ja
cmp
mov
sahf
mov
xor
sbb
xchg
dec
test
fcomps
cltd
shrl
in
call
dec
outsl
mov
cmp
fcmovb
daa
sbb
inc
dec
xor
xchg
out
mov
sbb
pop
or
movsl
notl
dec
jns
dec
out
sbbb
pop
dec
pop
lock
mov
cmpsl
or
inc
addr16
xchg
pop
fstps
popf
cmp
fisubrs
mov
lret
push
popa
scas
shl
xchg
mov
int
jnp
ljmp
addl
mov
leave
bound
mov
mov
xorb
aam
and
mov
lds
movsb
lods
sub
jne
scas
sub
fisttpll
imul
adcb
push
int3
mov
and
sbb
jns
nop
mov
xchg
push
push
jbe
mov
push
ljmp
add
scas
int
dec
fistpl
clc
or
lcall
aas
imul
inc
fwait
fwait
imul
call
rcr
clc
xor
cmp
xorb
push
imul
data16
in
test
xor
call
jecxz
mov
mull
push
pop
icebp
dec
popa
xlat
mov
test
dec
push
add
clc
push
clc
cltd
test
dec
ss
arpl
push
pop
pusha
xchg
jecxz
xor
andb
mov
ja
dec
and
dec
sbb
fnstsw
ss
xor
adc
adc
pop
jo
xadd
fdivs
mov
xor
sub
push
or
nopl
scas
adc
mov
sbb
or
dec
add
insl
jbe
scas
push
xchg
enter
jno
mov
ljmp
jne
aam
push
sti
xchg
out
loopne
testl
dec
popf
cld
pop
jae
gs
je
sbb
mov
jns
ret
sub
nop
jmp
sbb
push
lock
or
sub
daa
xchg
test
cld
mov
scas
add
mov
fprem1
sub
dec
repz
ret
sbb
in
mov
dec
xchg
in
lret
cmp
out
xor
inc
xchg
sub
jle
mov
push
lret
ds
mov
sbb
pop
push
aad
mov
cmp
idivb
push
lea
xchg
inc
in
fsubrs
mov
jnp
xlat
lea
and
dec
mov
mov
sar
sahf
jecxz
push
lods
pusha
fnstcw
pusha
cli
lahf
rcll
out
in
je
inc
xchg
repz
iret
push
and
or
jnp
xchg
ss
iret
out
dec
adc
in
imul
repnz
jae
out
gs
and
pop
or
pop
push
pop
mov
subl
xor
test
and
inc
insl
addb
push
mov
mov
lahf
flds
inc
fsts
inc
lahf
out
cmpsb
or
imul
jg
fists
jno
sbb
xchg
popf
jle
jmp
popf
fsub
iret
mov
lret
jns
and
mov
sub
jg
dec
xchg
adc
fstpl
mov
outsl
mov
sub
mov
push
xlat
sbb
jle
in
mov
arpl
cmp
nop
cld
loope
rclb
mov
xor
mov
xchg
test
jae
pop
aaa
std
test
int3
repz
notl
fmuls
stos
xor
inc
pop
xchg
jae
sbb
test
jb
sub
mov
push
out
mov
jb
and
mov
push
mov
mov
push
repz
jmp
mov
fsub
sub
cltd
pop
pop
test
xor
cli
pusha
xchg
xor
adc
jg
push
jg
push
out
ja
pop
push
sub
sbb
lds
es
xor
cmpsb
adc
jne
add
xlat
xchg
mov
sub
mov
dec
push
or
mov
psrlq
stos
xor
aad
shlb
pushf
inc
add
rol
in
int
mov
mov
cmp
sbb
or
jmp
ret
pusha
cmp
mov
je
out
jbe
orb
call
iret
jo
push
fsubrl
mov
adc
dec
shr
pop
insb
adc
outsl
and
jae
xor
test
pop
push
in
cwtl
xor
lods
aam
adc
cmp
in
loope
cmp
adc
inc
sub
incl
add
pop
pop
jbe
sbb
pop
jmp
xor
push
push
sahf
inc
stc
mov
mov
out
push
push
fdivr
mov
sub
lods
pop
push
lods
inc
adc
shrb
insb
xchg
aad
mov
outsl
sbb
pop
xorb
pop
sbb
xchg
sub
or
lret
xchg
int3
cltd
adc
cmp
repz
pop
loop
ret
jl
cmp
repnz
jmp
add
mov
into
cltd
mov
loop
hlt
cwtl
ret
stos
inc
dec
cmp
push
push
inc
dec
imul
test
mov
add
sub
cwtl
push
scas
push
je
add
inc
inc
add
inc
jo
inc
or
loopne
movsl
mov
js,pn
push
insb
out
lock
stc
add
sbb
mov
and
mov
push
fstps
push
scas
jns
movsl
clc
adc
push
nop
test
mov
push
xorb
xchg
xor
cmp
mov
stos
sbb
fsubs
mov
dec
and
and
std
das
dec
test
xor
or
fwait
pusha
push
mov
or
dec
sbb
lret
mov
adc
pop
imul
lea
mov
in
lds
shlb
bound
dec
jmp
sub
cmpsb
lahf
cli
mov
jge
xor
dec
xor
sub
push
iret
lods
dec
mov
jns
sbb
shll
imul
aaa
lret
hlt
dec
icebp
ljmp
jns
divb
push
dec
pop
testb
pushf
test
pop
sub
cld
rorl
adc
push
dec
push
test
pop
lret
movsl
mov
xchg
test
jecxz
jb
dec
int
mov
repnz
lods
xchg
cli
mov
fdivl
push
mov
fidivrs
push
ja
enter
pop
mov
mov
repz
ss
push
mov
sti
push
stos
lret
inc
push
testb
inc
ljmp
xchg
cmpsl
pushf
dec
and
fs
nop
stos
pop
dec
jne
ret
mov
jns
mov
inc
js
xchg
shrb
fildl
add
ja
lds
sahf
pop
pop
sti
shll
mov
cmpsb
lret
mov
leave
cltd
inc
test
adc
clc
in
sub
inc
adc
addr16
int3
sub
loope
inc
into
subb
or
sub
fcmovu
ss
out
std
push
es
and
fists
or
ja
dec
jmp
sub
adc
push
fldenv
sbb
dec
fsubr
xor
loope
scas
in
loope
shl
daa
mov
mulb
inc
les
ljmp
shrb
mulb
cli
mov
jp
ja
sbb
call
xchg
cmc
or
dec
mov
fisubl
leave
xchg
lret
out
add
movsb
sub
int
test
pop
leave
nop
mov
in
popa
lds
icebp
loope
lods
cmp
push
dec
pusha
clc
jo
sub
lods
testb
adc
leave
adc
dec
xchg
mov
add
cli
xor
push
into
jns
es
fsub
jb
insb
inc
mov
adc
and
testl
mov
cmp
out
clc
sub
lcall
nop
bound
inc
arpl
pop
lock
js,pn
aam
dec
bound
outsl
movsb
in
js
lret
jecxz
pop
push
sub
out
movsl
dec
cmp
adc
sbb
fiadds
std
lcall
cmp
xchg
imul
or
mov
ja
int3
add
std
shrb
inc
cmp
fwait
mov
cmp
cli
fstl
dec
inc
lahf
mov
inc
inc
sar
and
sbb
xchg
cmc
in
push
xor
ja
rorl
aam
stos
fisubs
xchg
clc
jae
das
arpl
inc
jae
jns
scas
xchg
and
addr16
shll
lods
pop
fcmovnb
adc
add
stos
jge
test
jp
sbb
cmp
jnp
mov
fidivl
push
inc
pop
pop
loopne
adc
jbe
dec
cmpsb
add
int3
fstpl
movsb
popa
xchg
sbb
int
sbb
xchg
sbb
in
lret
out
stos
pushf
add
pushf
rcl
roll
and
xor
adc
dec
sbb
inc
int3
cli
icebp
push
mov
cli
aas
mov
leave
xor
mov
or
sbb
jno
push
jbe
jl
mov
scas
cmp
in
or
push
arpl
mov
fwait
popa
lcall
into
js
xchg
dec
pop
pop
mov
xchg
fstpt
xorl
pop
and
pop
lock
sahf
xor
xorb
cmpsl
inc
sub
xor
pop
jmp
lret
xor
sub
push
pop
loopne
fdivr
insb
scas
pop
pop
outsl
cmp
aaa
enter
call
ljmp
inc
mov
repz
push
adc
xchg
ds
push
cmpsl
lret
inc
mov
and
jmp
rclb
dec
xor
mov
rcrl
xchg
and
or
push
or
xchg
dec
ret
jle
xchg
add
decl
xchg
dec
push
xor
mov
xor
in
xchg
inc
mov
mov
adc
cltd
cmpsb
cltd
in
mov
jnp
imul
jmp
stc
add
repz
jo
mov
pop
int3
clc
aam
push
push
out
pop
pop
arpl
or
mov
outsb
rcrl
pusha
pop
sahf
and
subb
vpaddusw
cmp
in
shll
ja
rcll
pusha
inc
mov
add
mov
mov
jnp
daa
mov
rclb
lcall
xchg
bound
xor
aam
cmp
mov
push
rolb
jnp
inc
adc
pop
and
ljmp
xor
inc
jecxz
repnz
gs
adc
addb
daa
cmp
push
stc
sub
cmp
push
pop
xor
mov
inc
gs
aad
bound
test
adc
jmp
xor
out
ror
daa
push
test
mov
sbb
and
es
cmpsb
pop
les
add
ret
adc
loope
dec
mov
orb
sbb
mov
mov
mov
inc
fsubrs
push
enter
lds
xchg
gs
push
mov
adcb
sbb
hlt
test
fimull
add
dec
mulb
or
mov
lahf
push
pop
in
repnz
inc
mov
lcall
adc
fisttpll
test
notb
pop
inc
mov
sbb
bound
xor
rclb
push
dec
mov
cmp
ds
sub
clc
or
xchg
fildll
mov
sub
clc
inc
pop
adc
enter
push
jg
iret
faddl
cld
mov
adc
ret
cmp
out
inc
sbb
rclb
imul
or
adc
imul
mov
repz
in
dec
shrb
call
push
ss
xor
pop
mov
cld
test
sbb
loop
jg
in
or
jo
inc
lahf
insb
pop
mov
mov
xor
pop
es
subl
xchg
inc
push
outsb
xor
in
cld
popa
mov
jbe
idivl
push
pop
push
jbe
mov
shl
xchg
cmpsb
std
mov
rclb
test
cmp
cwtl
fimuls
mov
test
adc
sbb
mov
and
out
or
pop
fimuls
lods
fs
testl
out
mov
cs
push
mov
xor
sbb
inc
lds
and
or
fwait
mov
lea
push
sarl
pop
jl
push
jno
ret
sar
dec
jae
pop
jnp
cmc
cmp
mov
jmp
gs
icebp
mov
add
adc
mov
ss
add
es
dec
lahf
movsb
sahf
pop
stos
mov
mov
lcall
adc
arpl
je
mov
ret
out
cwtl
sub
mov
jg
mov
cld
fstpl
jge
cmp
mov
test
sti
xor
inc
pop
ja
cs
add
cmpl
jecxz
mov
notl
andb
addr16
call
call
test
mov
or
ljmp
fisubrl
cmpb
lock
push
or
xlat
or
push
jnp
xchg
mov
mov
scas
fidivrl
push
jg
cld
inc
movsl
mov
fnstsw
pop
pop
inc
pushf
hlt
mov
sub
cli
mov
mov
out
mov
jne
add
ss
push
jle
cmp
or
shl
dec
dec
aas
sub
ret
mov
int
push
sub
push
push
js
push
or
jno
mov
mov
jb
cmpsb
sub
adc
pushf
or
mov
popa
xchg
dec
push
push
inc
scas
jb
mov
outsl
xorb
adc
xchg
cwtl
lcall
call
data16
lds
imul
and
scas
sbb
in
mov
push
inc
push
inc
push
adc
and
push
aaa
jl
xor
cmp
rcl
sbbb
or
and
dec
adc
aad
jp
clc
inc
hlt
jb
push
and
pop
in
mov
pop
mov
pushf
movb
test
jb
test
mov
cmc
pop
or
hlt
mov
lods
cmp
mov
inc
mov
xor
icebp
sub
xlat
jnp
mov
out
push
or
mov
lcall
int3
dec
mov
mov
mov
outsl
adc
aas
rclb
adc
push
jmp
test
cmc
push
or
imul
cmp
cli
and
fsubs
xor
adc
stos
inc
int
popf
push
push
inc
mov
or
scas
and
mov
sbb
dec
aas
iret
jecxz
jmp
hlt
cltd
mov
inc
js
mov
fstl
je
lahf
fisubl
add
jp
jmp
in
out
outsl
jns
fidivs
in
inc
loopne
adc
aam
jo
scas
out
mov
xchg
sbb
and
out
lahf
lods
xchg
pop
mov
mov
lea
dec
sub
pop
cmp
loop
fstpt
daa
in
stos
shrl
call
in
sbb
sbb
outsl
mov
scas
scas
sub
or
xchg
repz
aam
mov
pop
in
cwtl
mov
add
jl
jecxz
fistl
sbb
xorl
lods
dec
xchg
int3
out
stos
loop
jp
bound
cmovno
mov
dec
les
ret
cmpsl
mov
mov
and
push
mov
divl
adc
mov
inc
cld
xchg
subb
mov
fadds
lock
mov
lcall
push
fwait
push
or
pop
mov
add
icebp
push
arpl
sub
fstpt
cmpsl
popl
jb
inc
inc
negb
test
fsts
push
scas
dec
daa
shrl
addl
add
jl
ljmp
lret
xchg
fcmovnbe
pop
and
sbb
dec
in
lret
xor
sub
lods
mov
sub
in
mov
orb
inc
or
inc
out
loope
and
jg
sub
xor
xorl
mov
pop
mov
jmp
cmpsb
jg
add
out
mulb
addr16
in
fs
test
outsl
mov
test
push
add
push
cmpsl
add
mov
fwait
mov
mov
mov
sub
jbe
ss
inc
imul
insb
jecxz
repz
mov
movsb
xor
xor
push
xor
pop
mov
mov
nop
cmp
inc
lcall
insb
outsl
cmp
adc
cld
icebp
adc
mov
xchg
iret
fimuls
in
push
movsb
xor
jo
mov
or
pushl
sbb
add
or
sbb
jns
cmp
stc
out
cli
imull
jae
jae
mov
divb
fsubrs
fisttps
sub
and
lods
xchg
adc
lods
and
jno
cmp
and
sub
outsb
ds
fs
call
jne
les
pop
ljmp
and
dec
sbb
imul
sub
ret
fiaddl
jne
and
imul
dec
pslld
movsl
sbb
out
sahf
insl
insl
ffreep
mov
mov
or
mov
lcall
ds
jnp
inc
xchg
mov
mov
leave
cltd
and
ss
fcoms
mov
fiadds
and
ficompl
mov
sub
cltd
inc
mov
and
pop
int
inc
stc
in
aad
xor
mov
lds
ret
dec
jns
mov
out
adc
fidivrl
movsb
mov
iret
or
jmp
push
scas
test
push
adc
and
inc
push
jg
sbb
or
clc
leave
pop
push
jmp
pusha
decb
sub
or
out
adc
inc
mov
jns
and
cmp
int3
pop
in
dec
lds
and
loope
push
adc
cvtdq2ps
lahf
dec
inc
clc
vphaddbq
jmp
int
sub
out
bound
pop
std
jl
dec
push
xchg
shll
mov
mov
shll
xchg
fnstcw
inc
lcall
fildl
mov
jnp
pop
xchg
dec
jmp
cwtl
in
and
cmpl
je
adc
xlat
mov
negb
pusha
inc
lods
push
xor
test
inc
pop
aas
sarl
jo
lret
sub
add
pop
or
and
adc
adc
lds
sub
test
iret
mov
test
into
mov
adc
dec
mov
das
cmpsb
cltd
lahf
into
jp
scas
insl
mov
jae
or
add
cmp
push
js
test
mov
mov
lods
or
pushf
gs
mov
sbb
dec
stc
sbb
nop
xor
cwtl
push
jge
cltd
dec
adc
mov
scas
js
shrl
movsb
lods
repnz
xchg
xchg
or
mov
xchg
out
cmpsb
test
push
cmpl
shll
jnp
push
repnz
jecxz
xor
pop
push
xchg
pop
nop
mov
mov
lret
rolb
cli
stos
xor
es
xor
cmpsl
dec
repnz
aam
sbb
sub
pop
andl
testl
repz
sbb
xlat
or
decl
xchg
mov
jbe
loopne
hlt
pusha
pop
cmc
pusha
popf
inc
js
push
push
push
jne
dec
mov
repz
or
mov
icebp
scas
das
mov
enter
int3
jg
cmc
and
andl
lock
push
xchg
dec
pop
cmp
sbb
es
jbe
or
inc
or
jl
cs
loopne
fisubl
addb
adc
inc
ljmp
stc
mov
jg
mov
cmp
adc
push
adc
mov
outsb
ss
sub
push
rcll
iret
fcomi
cli
in
or
and
sbb
add
dec
pushf
adc
es
fcomps
inc
arpl
rorb
ficoml
add
sbb
and
add
cltd
loop
stos
sub
or
mov
test
inc
inc
and
mov
dec
cmp
adc
lret
sbb
popf
pop
sub
lods
aaa
cmc
js
aam
mov
pop
leave
in
cltd
jb
popf
cmp
xchg
clc
inc
sub
mov
cmp
push
cmc
cmpsb
mov
sbb
das
sbb
push
pushl
ja
clc
mov
stc
mov
mov
stc
or
xor
clc
aad
xchg
stc
scas
mov
je
push
jle
mull
mov
mov
lret
or
sub
test
frstor
addl
add
pushf
push
push
fmull
adcb
xchg
sti
out
sbb
cltd
loopne
sub
in
pushf
popf
mov
shrl
shrl
shlb
lcall
mov
fidivl
aaa
push
sahf
insl
insb
xchg
jmp
jmp
mov
jmp
cli
add
shl
xchg
jg
leave
xchg
fisubrs
movsb
mov
lahf
inc
and
xor
into
jg
lahf
and
inc
xchg
xchg
pop
into
inc
mov
je
and
push
cmpsb
jae
orb
cli
fildl
fidivrl
jecxz
push
arpl
and
lret
xchg
loopne
test
mov
sarb
lahf
cmp
pusha
rcrl
cmpb
sbb
pop
inc
push
jp
push
mov
jecxz
cmp
mov
inc
pop
ljmp
inc
lret
enter
push
or
ret
into
xchg
sti
int3
adc
lret
push
imull
rcl
jle
dec
adc
loopne
dec
push
mov
cld
clc
jnp
sbb
filds
jae
movsb
fiadds
push
imul
jmp
jns
xchg
test
xor
sbb
in
lret
ljmp
or
inc
or
mov
add
cmp
push
mov
inc
ja
jg
adc
xor
xor
jbe
mov
push
jb
mov
add
dec
or
push
cmp
push
repnz
out
push
sbb
clc
mov
mov
mov
jmp
cmp
outsl
scas
out
decb
roll
fsub
out
cmc
jno
mov
jae
adc
push
adcl
xchg
push
lahf
xchg
and
andl
jp
and
sbb
inc
ffreep
push
das
mov
adc
dec
jg
aas
in
xchg
fsubl
fwait
aas
loopne
subb
sbb
mov
mov
sub
cli
or
pop
sbb
iret
jge
imul
mov
faddl
sub
cmp
xchg
mov
sbb
movsl
mov
adc
enter
test
jnp
xchg
stos
and
push
das
aad
in
and
pop
add
movsl
popf
pushf
fists
inc
push
mov
fmull
fwait
loopne
repnz
or
sbb
fcomip
adc
scas
repz
mov
repz
xchg
lret
das
jbe
sub
xchg
mov
aas
lcall
stos
arpl
lret
cli
fiadds
jp
jne
pop
repz
jecxz
jmp
mov
gs
fcompl
inc
adc
lock
or
mov
repnz
repnz
enter
jp
mov
dec
sub
sbb
rolb
xchg
or
push
xchg
and
mov
mov
cld
arpl
mov
lods
fists
in
sbbl
jecxz
pushf
inc
pop
inc
sbb
xchg
inc
not
mov
xchg
and
dec
inc
sarb
mov
stc
jno
pop
stos
into
std
push
lahf
xchg
ss
jo
out
push
xlat
sub
rcll
mov
push
mov
lret
adc
sti
push
or
jnp
imul
lds
hlt
cs
into
xchg
push
rorl
inc
dec
clc
outsl
inc
jecxz
and
mov
and
stc
cwtl
and
fsubr
xor
and
xlat
popa
int3
inc
sbb
mov
test
pop
ss
push
add
inc
imul
xlat
jnp
push
add
xchg
das
setns
sbb
cmpsl
pop
clc
lahf
xchg
pop
int
push
push
xor
jae
lds
cmp
scas
in
mov
shr
popa
mov
int3
in
mov
mov
fnstcw
pop
je
std
mov
cwtl
lret
aam
movsl
sub
je
and
int3
pop
movsl
cmp
fcom
mov
or
inc
jg
popf
cmp
dec
or
or
outsb
mov
mov
xor
pop
jnp
jp
test
inc
sub
in
jge
repz
xchg
data16
in
das
dec
aam
push
repz
loope
mov
lock
daa
ret
repnz
mov
add
clc
cmpl
and
test
setg
xchg
or
adc
xor
sub
sub
xor
mov
xchg
dec
fnstsw
fsubrs
call
mov
repnz
lods
cwtl
jb
leave
adc
push
jl
fists
push
cs
and
pushf
scas
jbe
mov
add
std
xchg
lods
imul
mov
addr16
scas
cmp
into
pop
incl
js
push
imul
jo
jne
divl
movsb
hlt
es
movsb
pop
dec
addr16
idiv
call
dec
jns
add
xchg
leave
sub
pop
out
sub
xchg
out
sbb
cmp
inc
out
pop
xchg
xchg
xchg
insl
mov
bound
in
inc
fwait
dec
sub
into
fs
cmp
ret
mov
mov
bound
call
dec
mov
sbb
jno
adc
mov
mov
jbe
xor
repz
fbstp
in
and
addr16
sbb
xor
loope
fs
fcompl
and
shll
mov
test
add
inc
dec
loope
fdivs
add
loope
js
fstp
pop
popa
test
imulb
outsl
ret
lods
jge
push
xor
roll
bound
push
aaa
pop
cli
sbb
leave
or
mov
negl
or
sub
xchg
xchg
mov
popa
std
push
push
xchg
int3
stos
push
jg
cltd
sbb
into
aad
push
adc
pop
pop
adc
dec
cs
test
pop
into
int3
mov
loope
pusha
cmpsb
or
outsl
enter
mov
xchg
and
aam
in
xor
pusha
mulb
mov
mov
scas
sub
fidivrs
test
subb
test
sbb
enter
pop
push
mov
cmp
or
ss
xor
and
jbe
insb
or
in
and
mov
xchg
cld
test
jg
xchg
ficomps
aaa
push
cmp
xchg
fmul
insb
jno
pop
push
cmp
imul
sahf
and
movsl
add
sub
dec
lahf
sub
mov
xchg
lds
xlat
inc
xor
mov
scas
jno
add
and
dec
cwtl
stos
inc
mov
fcoms
sbb
lock
pop
sub
lea
aaa
push
xor
jmp
xor
stos
imul
add
int
stos
ds
mov
mov
jp
adc
jo
sub
aad
movsb
jo
enter
jo
push
std
imul
mov
repnz
mov
mov
or
test
in
data16
sbb
loop
lock
insl
shr
clc
lds
mov
jno
pop
mov
clc
insl
fsubp
xor
in
or
lea
jp
lret
sub
mov
mov
xchg
out
fmull
mov
mov
fst
cwtl
aad
lock
stos
mov
es
leave
or
ss
in
sub
xor
rcll
popf
repnz
push
jno
inc
jle
xor
cmpsl
lret
mov
lock
pop
mov
rorb
push
adc
mov
pop
push
mov
dec
in
push
sbb
fistps
loopne
fldl
mov
mov
test
cmp
xchg
mov
cmp
test
repnz
mov
std
in
mov
je
jg
xchg
or
gs
cmp
outsb
push
ficompl
rolb
int3
addr16
cmpsl
cmp
bound
jae
push
add
sbb
jle
pop
or
sbb
addl
cmpsb
mov
jno
imul
mov
pop
das
sub
sbb
jns
pushf
add
arpl
inc
lds
jge
inc
aam
adcb
xchg
or
mov
add
mov
cmp
push
or
adc
aad
iret
sbb
xor
push
aas
fisubrs
jmp
xchg
jne
xor
xlat
jp
push
pop
mov
sub
sub
or
int3
mov
dec
mov
lds
dec
sbb
mov
repz
fstpt
ljmp
push
xor
fistl
mov
adc
aas
ret
sub
test
inc
jns
adc
shll
mov
jp
cmpsl
test
inc
and
sar
pop
pop
inc
pop
addr16
mov
mov
xchg
jno
mov
dec
gs
adc
sub
xor
mov
fsubs
xchg
and
and
mov
cwtl
lahf
add
ss
sarl
sbb
cmp
or
sub
pop
cld
inc
pop
push
jnp
out
aas
movsl
mov
popf
sbb
xchg
aad
cld
test
jns
out
and
sarl
and
and
sub
ds
xchg
pop
bound
lods
leavew
push
sbb
sbb
stos
shrl
xchg
cmp
aad
mov
sbb
mov
or
popf
dec
lahf
pmulhw
or
andl
pop
int
fcoms
jae
rcrl
jp
cmp
imul
adc
loopne
ljmp
mov
jae
outsb
or
xor
pusha
mov
xchg
dec
mov
loopne
fadds
xor
adcb
out
xchg
std
xchg
ss
cli
push
movsb
call
xor
rolb
scas
hlt
mov
or
and
push
mov
xlat
sbb
loop
push
push
gs
stos
add
push
inc
and
push
cld
and
jb
cmp
add
lret
mov
mov
and
xor
and
xchg
fldt
inc
push
loop
jmp
aaa
out
jae
mov
scas
xor
xchg
fstp
ja
call
enter
mov
insl
ja
sub
mov
dec
mov
adc
sub
and
jmp
push
roll
loope
es
repz
les
lods
add
lods
sub
mov
mov
cmp
lds
and
lahf
push
out
test
inc
inc
jns
leave
fwait
xchg
sub
in
dec
cs
adc
mov
into
sbb
pop
les
cmpsb
xor
popa
inc
imul
sbb
push
std
jbe
mov
popa
add
jle
mov
int
xchg
jle
sbb
xor
cmp
repnz
add
sub
sub
stos
ja
dec
aaa
movsl
adc
fists
addr16
cmp
adc
sbb
adc
loop
les
xchg
pop
mov
int3
xorb
repz
lods
je
in
vmovaps
pop
je
call
cmp
cmp
add
mov
inc
cli
mov
insl
lcall
roll
cld
jae
xor
and
sbb
dec
lock
push
xchg
adc
call
mov
lea
je
fildl
test
in
pop
pusha
cmp
das
sahf
mov
push
xchg
mov
pushf
pop
std
adc
cmp
push
adc
icebp
push
mov
test
jg
xor
pop
rcll
jecxz
mov
subl
pop
cli
mov
and
jge
dec
sub
shlb
out
xchg
lock
jp
pop
cli
js
lds
mov
cmp
pop
xor
clc
into
movsb
fwait
mov
jl
or
ret
mov
aaa
loopne
xor
in
xchg
movsb
lods
or
jnp
mov
push
out
dec
adc
loopne
dec
xor
adc
test
push
adc
push
mov
jp
shr
or
lcall
in
jb
out
jbe
insl
lds
sub
inc
rclb
addr16
iret
jge
mov
pushf
mov
dec
mov
test
jmp
xor
jmp
out
addr16
push
cltd
mov
sub
mov
in
xor
inc
arpl
aam
int
pushf
imull
mov
dec
add
fstl
or
shl
scas
mov
xchg
cmpl
adc
mov
jbe
mov
jo
int
add
daa
arpl
pop
cmpsb
outsl
push
fidivs
cmp
insl
or
mov
enter
das
bound
sub
insb
xchg
cwtl
push
enter
push
cmp
pop
call
in
test
mov
and
fisttps
push
sbb
das
xorb
add
adc
sbb
mov
add
sub
xor
mov
cmp
mov
inc
in
push
clc
push
sbb
fmul
into
lret
or
push
adc
mov
arpl
fwait
fwait
hlt
lods
es
out
pop
insb
push
stos
es
sub
cmpb
out
dec
mov
xor
push
lret
inc
cmp
loopne
rolb
test
movsl
icebp
or
mov
lcall
lahf
loope
jg
fwait
pop
sbb
and
dec
xchg
loopne
std
inc
push
in
mov
jb
push
rcrb
adc
sahf
sbb
and
mov
in
xor
mov
pop
dec
das
add
rcll
out
push
jno
loopne
fimull
sbb
jns
dec
imul
sub
inc
or
pop
inc
loope
cmp
insb
test
fldcw
add
push
jne
fmul
lock
lods
pop
fistps
mov
mov
jg
jecxz
and
xchg
inc
idivb
aaa
pop
push
adcl
push
push
imul
xor
roll
es
movsl
jae
xchg
inc
sahf
push
jns
psraw
mov
mov
xor
nop
jge
movl
inc
test
pop
xchg
call
popa
mov
divb
rcll
andb
fcoms
int3
xchg
clc
rolb
push
rolb
faddl
xchg
push
sub
cmp
adc
pop
inc
pop
and
add
arpl
adc
mov
xchg
mov
outsl
dec
mov
movsb
jae
rclb
psrlw
fdivrs
in
out
pop
mov
cwtl
mov
cmpsl
mov
fnstcw
adc
pop
icebp
pop
mov
imul
inc
xor
mov
push
mov
pop
bnd
out
mov
imul
inc
dec
lcall
sub
mov
stos
and
cmp
lcall
sbb
out
mov
ret
push
lret
or
and
xchg
adc
sbb
push
push
adc
mov
out
cmp
enter
inc
add
addr16
ja
mov
lcall
sbb
test
movsl
std
and
sbb
lret
jl
or
lret
scas
push
mov
xor
or
in
inc
repz
fmul
fstpl
sti
pop
xlat
mov
push
fwait
mul
call
mov
es
je
bound
xor
stos
mov
jbe
jl
mov
mov
adc
inc
dec
xchg
ds
xchg
inc
ret
inc
jbe
ds
aad
shll
push
mov
push
nop
std
lds
adc
push
mov
cwtl
lods
jbe
adc
out
cld
arpl
filds
cmp
cmpsb
pusha
jo
mov
xchg
jae
push
fs
int3
inc
testl
shlb
or
pop
jl
sub
cld
add
retw
push
ret
out
fcmovnb
pop
pop
xor
ljmp
rcrl
mov
sbb
jae
fiadds
movsb
lock
jmp
fwait
mov
jnp
pop
jbe
rcrb
jo
imul
insb
sbb
cld
loopne
xor
lea
jno
or
or
jg
inc
leave
shl
add
fisttpl
push
mov
not
push
stos
inc
jne
xchg
and
insl
mov
stos
pushf
lss
and
mov
icebp
pop
adc
xchg
cmpb
dec
loopnew
int
xor
rol
sub
cmp
pop
ja
stos
int3
addl
jno
mov
adc
push
push
in
subb
sbb
loop
and
pop
aas
sub
xchg
out
pop
out
out
mov
out
test
mov
mov
and
pop
cld
sub
adc
leave
lea
xor
xchg
and
inc
dec
rclb
shll
das
loopne
fmull
shll
pop
insl
repnz
xlat
xor
nop
ret
sbb
aam
int3
inc
testb
dec
insl
push
in
jnp
mov
adc
mov
pop
insb
fwait
int3
idivl
push
push
and
cmp
scas
cmpsl
fildll
push
xor
in
or
xchg
pushf
xor
dec
push
inc
dec
add
push
xchg
inc
xor
repnz
adc
clc
xchg
aas
subl
std
int
mov
jge
jge
pop
mov
repnz
in
ret
mov
mov
data16
add
pop
fs
xchg
cmp
xchg
pop
cmp
xchg
xor
rcl
lods
iret
popf
xor
jg
cli
sbb
add
cmc
std
pop
pop
enter
add
fnstcw
ret
shlb
out
inc
adc
mov
pop
imul
idivb
lods
sub
mov
out
fidivl
clc
scas
decl
sbb
add
jns
xchg
xchg
lock
cmp
or
repz
add
xchg
ret
aad
add
pop
mov
aaa
rcr
xchg
lret
ss
and
jmp
aas
sbb
or
push
xchg
fs
repz
and
pop
repz
test
push
testb
pop
clc
mov
lods
inc
fs
cmp
std
std
mov
movsl
jge
cmp
adcl
out
push
mov
les
jge
adc
movsb
or
add
daa
dec
mov
jbe
out
dec
cmp
sbb
fwait
clc
push
addr16
adc
push
cltd
xchg
insl
lods
into
pushf
mov
xchg
push
daa
push
aam
mov
cmp
inc
stc
movsb
pop
add
pop
addb
mov
sbb
sbb
push
adc
or
inc
iret
bound
pop
jnp
movsl
sbb
jmp
xor
add
repnz
sub
in
fdivl
mov
or
bnd
and
scas
outsl
cwtl
hlt
bound
mov
mov
aaa
lret
jae
mov
xchg
fsubp
pusha
cltd
mov
adc
pop
push
std
xlat
test
int3
and
mov
adc
xlat
cmp
iret
adc
push
cmp
cltd
push
ficoms
xor
loope
cmc
adc
push
xchg
test
insl
mov
inc
adc
fcmovnbe
mov
mov
push
xlat
jnp
jno
jle
push
and
out
mov
fcmovnbe
rclb
cltd
cld
and
jnp
pop
add
lea
cs
inc
lods
sbb
call
fs
mov
ret
pop
lret
sbb
or
mov
inc
mov
in
xchg
xlat
pop
jae
repnz
mov
imul
pushf
daa
push
jle
loope
mov
outsb
xchg
ja
push
aad
or
inc
jno
sub
adc
mov
popa
and
in
inc
test
and
clc
adc
pop
push
outsl
cltd
sahf
push
cmpb
adc
add
jl
jp
mov
hlt
xor
xchg
jl
pop
out
cmpsb
and
adc
mov
mov
inc
fisubrl
xchg
shlb
scas
rcrl
push
loope
or
add
and
mov
jecxz
pop
sub
test
mov
or
cld
hlt
sub
inc
jle
or
int3
mov
nop
pop
xchg
xchg
insl
xchg
mov
outsl
and
xorb
inc
sbb
mov
fcoml
mov
add
mov
aaa
pop
bound
or
test
into
cmp
cs
data16
shl
xor
clc
jae
mov
adc
lock
in
lahf
scas
lcall
das
add
and
pop
lret
daa
pop
mulb
fldt
cmpsl
sahf
jge
xchg
loopne
jo
cmp
add
push
mov
jle
cli
ljmp
pop
outsb
test
mov
popf
jecxz
shlb
pop
neg
push
nop
movsl
mov
and
test
inc
enter
and
push
xchg
orl
mov
push
sarb
cmp
or
cs
lods
adcb
xor
loope
mov
inc
jp
mov
mov
icebp
add
clc
add
addr16
jne
cmpsl
and
pop
mov
lcall
jecxz
inc
lret
adc
inc
mov
cmpsb
xchg
jecxz
add
movsl
or
arpl
shr
fs
sbb
mov
and
mov
pop
pop
lds
mov
adc
cmp
mov
imul
push
stc
hlt
sub
pop
not
sbb
mov
test
mov
or
mov
mov
push
xor
sub
push
xchg
in
test
jno
iret
sbb
iret
inc
stc
repnz
pop
andl
push
outsb
sti
lahf
dec
xchg
adc
pop
push
stc
repnz
inc
xlat
and
stos
shll
repnz
sub
jo
js
jae
jns
and
sahf
test
sub
arpl
push
lret
fistpl
jns
push
dec
stos
clc
fdivs
hlt
scas
nop
xor
punpckldq
ljmp
mov
cli
es
xchg
pop
sbb
popa
dec
mov
int
add
cmpsl
mov
or
ja,pn
imul
imul
divb
push
nop
xor
xlat
mov
sub
xchg
inc
lods
xchg
sbbb
pop
pop
xchg
cmp
lret
repz
scas
pop
out
stos
ret
icebp
mov
rorl
sahf
fisttps
gs
jg
inc
mov
jmp
add
cmpb
xchg
test
and
fs
cmc
ret
inc
stos
jg
cmp
sarb
and
mov
sub
cmp
cmc
scas
das
push
roll
loope
test
mov
mov
ret
jg
adc
add
sbb
push
test
jns
cli
or
dec
movsl
or
xchg
jb
dec
push
pop
xor
mov
xlat
lods
div
mov
push
push
mov
leave
gs
jb
subb
scas
arpl
cltd
fidivl
lock
cmp
hlt
loopne
sbb
pop
mov
jne
out
add
inc
dec
negb
and
add
in
sti
pop
mov
stc
adc
neg
fnsave
pop
xchg
inc
mov
add
push
push
push
cmc
inc
pop
add
aad
repnz
adc
cmp
sbb
fiaddl
mov
scas
jbe
sub
rorl
pop
fidivrl
adc
data16
popf
aaa
pop
or
data16
mov
xchg
and
loope
fs
stos
push
fcom
enter
inc
dec
push
xchg
ss
stc
xor
scas
dec
or
adc
je
xor
outsl
cld
inc
push
hlt
jb
ljmp
inc
orb
push
xlat
cmpsb
ficoml
xchg
repz
cli
and
cli
add
clc
push
xchg
les
push
xlat
sbb
in
jae
push
ss
jno
andb
jmp
iret
adc
dec
and
into
aam
mov
add
xor
pop
insb
inc
sub
cmp
inc
inc
lcall
inc
or
dec
pop
xor
inc
adc
xor
mov
into
xchg
mov
push
adc
out
jb
xchg
pop
mov
add
bound
adc
sahf
int
repnz
int3
xchg
jo
stc
hlt
scas
pusha
xchg
adc
popa
in
je
add
xchg
inc
cmpsl
pop
test
out
dec
shrb
jb
pop
test
imul
dec
gs
loope
ret
in
xor
adc
lods
xchg
jl
or
out
roll
loopne
push
xchg
mov
mov
sub
lods
add
nop
dec
rol
mov
bound
jle
mov
xchg
mov
mov
or
js
dec
mov
adc
dec
sarb
xor
inc
pop
xchg
sbb
dec
hlt
ret
aad
cmpsb
mov
sti
nop
pop
rcll
mov
mov
js
and
cmp
or
inc
clc
sarb
push
sbb
lret
mov
dec
std
pop
or
pop
lea
ret
or
cld
cmc
add
sub
popf
mov
test
lret
repnz
ljmp
add
lret
or
out
lea
subb
push
cld
inc
mov
sti
popa
sub
push
dec
lcall
fwait
stc
inc
dec
mov
js
pop
mov
scas
ror
loopne
std
cmp
xchg
les
mov
imul
sub
insb
shrl
repz
subl
movsb
mov
inc
mov
loope
inc
dec
icebp
mov
cmp
fisubrs
in
xor
mov
mov
fsubs
sub
xchg
xor
cld
or
xor
push
mov
negl
punpcklwd
dec
jns
imul
out
pusha
pop
inc
popf
out
std
inc
jecxz
scas
fidivrl
jne
fwait
push
inc
fdivrl
hlt
fdivs
and
cli
mov
cmp
loopne
cmp
jge
cli
mov
add
cmp
mov
inc
cmpsb
cmpsl
pop
adc
shrl
pushf
adc
mov
cmp
add
stos
mov
xchg
jmp
subl
ja
cmp
ret
lods
aam
fnstcw
dec
add
leave
mov
fdivrp
imul
mov
push
std
inc
je
leave
popa
fstpl
mov
pop
fcompl
or
pop
mov
inc
jbe
mov
add
and
adc
cwtl
outsb
stos
out
dec
rcrb
mov
dec
aad
push
and
mov
je
shrl
add
jbe
addr16
xchg
int3
js
sub
sbb
pop
scas
dec
fucomp
xor
lea
out
mov
gs
repz
mov
xor
cmp
xor
push
iret
add
sahf
mov
lret
das
mov
dec
pop
and
sbb
rol
sbb
jnp
xchg
mov
pop
mov
xor
mov
lret
ja
in
xchg
pusha
push
mov
int
jl
mov
pop
repnz
hlt
insb
out
mov
shll
popf
fimuls
cmpb
cmp
xchg
enter
lods
dec
lock
out
ret
mov
outsl
and
xchg
dec
add
inc
xchg
test
pop
fcom
es
jmp
sbb
hlt
int3
pushf
fbstp
leave
stc
mov
push
pop
xchg
sahf
aam
ret
dec
sub
pop
test
add
adc
das
inc
and
push
mov
sahf
fisubrl
pop
int
inc
cwtl
push
and
scas
stos
insl
jle
dec
jns
mov
or
ret
jno
jo
pop
mov
inc
xchg
jg
pop
inc
popa
std
popa
mov
orb
or
loop
dec
cmp
adc
movsb
pop
cli
imul
jl
js
sub
aam
adc
mov
shlb
shll
xor
pushl
mov
push
push
mov
push
xor
cmp
mov
addl
mov
and
fsubl
mov
xchg
cmp
mov
inc
mov
ret
scas
inc
inc
cmpsb
int3
ret
adcl
mov
imul
mov
adc
out
rclb
xlat
stc
das
cmp
lret
call
mov
inc
ljmp
not
lods
xor
mov
cmp
int
fildll
mov
xchg
popl
int
cld
mov
push
xor
sbb
xor
mov
inc
jo
push
mov
xchg
pushf
into
xor
in
xor
repz
jo
sub
push
or
pop
push
in
mov
pop
es
jg
push
pop
fs
lods
add
inc
lea
mov
cli
repz
xor
dec
xor
mov
cmp
cmp
mov
aam
mov
ljmp
aaa
dec
mov
pop
mov
insl
xlat
hlt
scas
fmul
adc
in
mov
loopne
daa
stos
mov
sbb
sub
adc
rolb
pop
or
mov
mov
add
add
mov
in
out
xchg
stos
push
leave
sub
mov
mov
je
out
mov
dec
jmp
cmp
lea
cmp
js
mov
sub
ja
cmp
subb
rol
or
scas
xor
ret
xchg
xchg
jno
add
mov
dec
pop
popa
jmp
ds
mov
insl
sbb
int
xchg
test
out
imul
loop
andl
mov
xchg
data16
clc
stc
out
mov
pop
inc
cmp
add
jp
xor
mov
mov
push
sbb
data16
aaa
mov
push
in
insl
cmpsb
jg
in
sbb
jae
in
ss
push
mov
inc
test
push
in
cmp
mov
loope
cltd
xor
pushw
lea
jno
jle
iret
inc
test
ljmp
jno
adc
in
sub
loopne
push
outsb
xor
cmp
mov
lahf
pop
adc
lea
cs
jno
mov
loop
cmp
xchg
mov
mov
mov
loope
mov
js
sub
push
std
lods
cs
int
adc
roll
pop
cmpsb
imul
push
pop
shrl
push
loop
insl
fs
and
xchg
jle
lds
pop
ds
jno
push
xlat
push
cltd
cmp
int3
cmp
inc
loope
jae
pop
jnp
leave
pop
inc
mov
mov
mov
mov
fdivl
pop
mov
pcmpeqb
fdivrs
ss
inc
fiaddl
sub
leave
dec
faddl
clc
sbb
adc
test
fdivs
repnz
aam
sub
mov
sub
xchg
pop
pushf
stos
out
outsb
repnz
cmp
daa
stos
cli
mov
out
rcrb
aas
cmp
add
sbb
loope
fcomip
dec
loopne
mov
mulb
mov
cmp
pop
jb
xor
pop
data16
pop
nop
pop
sbb
cmpsb
push
dec
mov
dec
push
aas
test
imul
lea
movsl
or
bt
test
popf
aaa
jmp
int
push
cmpsb
xchg
test
jns
mov
sub
insl
push
mov
jno
sbb
xor
movsl
call
arpl
movsl
sti
mov
mov
pop
mov
mov
arpl
mov
neg
pop
cltd
jnp
dec
es
mov
push
jmp
movsl
fcomps
inc
adc
pop
pusha
arpl
add
sbb
jae
ds
movsl
jmp
sbb
xchg
stos
fwait
lahf
jp
cmc
and
jp
hlt
scas
insl
xchg
das
push
loope
sahf
mov
and
sub
mov
aam
mov
cmc
jne
push
pop
add
jmp
pop
push
and
adc
or
leave
cld
fnsave
fcoms
je
jl
adc
add
jge
adc
mov
xchg
jg
loop
in
outsl
dec
and
xor
imul
addr16
and
add
mov
cld
rorl
imul
aaa
push
inc
mov
adc
and
mov
pop
test
mov
insb
gs
mov
or
add
test
popw
popf
cmp
dec
lret
mov
jns
dec
popf
int
or
fwait
add
clc
nop
mov
pop
mov
loope
in
cs
mov
push
lcall
std
lahf
fidivs
scas
fcoms
inc
clc
cmpl
mov
stc
dec
inc
sbb
inc
mull
test
call
push
notb
movb
fwait
mov
inc
mov
fcomps
push
push
orl
arpl
ficoml
testl
stc
jecxz
sub
jge
pusha
incb
or
lods
fisttpll
addr16
add
fs
in
sti
adc
pmaxub
loopne
frndint
imul
inc
pop
mov
lock
cltd
cmp
push
jmp
lcall
pop
add
ret
icebp
mov
mov
push
lods
sbb
and
cwtl
lds
mov
mov
rorb
outsl
dec
mov
add
notl
mov
enter
mov
das
in
jnp
mov
xchg
xchg
sbb
adc
add
or
or
xlat
mov
pushf
js
xchg
mov
adc
das
nop
orb
cmc
lret
call
popf
fwait
jne
mov
xchg
adc
imul
mov
pop
insb
int3
out
or
es
rol
inc
in
jp,pt
loopne
jle
scas
cmp
pop
mov
outsl
mov
dec
jmp
insl
inc
test
mov
cmp
jle
push
test
push
inc
sti
add
inc
jecxz
in
fdivrl
mov
add
xchg
int
push
sbb
or
das
fsubl
adc
div
xor
ljmp
xor
nop
adc
add
inc
adc
mov
lret
mov
daa
lcall
xchg
jmp
loope
scas
cwtl
sub
int3
add
pop
jns
xor
jae
pop
cmpsb
push
mov
xchg
mov
cmpsl
xor
scas
sub
lret
add
sbb
jbe
stc
jb
lret
aaa
fsubrl
addr16
scas
mov
cmpsb
sahf
stos
inc
mov
andb
xchg
dec
dec
cmp
xchg
adc
xchg
movsb
loopne
mov
call
mov
shll
daa
sbb
cltd
icebp
inc
dec
push
xchg
xchg
iret
push
icebp
arpl
ja
xchg
loope
outsb
cmp
loopne
xchg
lret
mov
adc
stos
loope
ret
mov
or
jmp
gs
and
fwait
mov
incl
pop
aad
and
popa
fcoml
jp
stos
mov
lods
and
dec
adc
and
add
cmp
shlb
xor
push
lods
daa
ja
push
scas
adc
push
cmp
cltd
insb
call
enter
pop
fidivl
cmp
xor
es
sub
test
adc
and
xchg
scas
pop
in
xchg
iret
dec
and
xlat
lret
negb
orb
cmc
mov
rclb
popa
sbb
cmp
inc
sbb
pop
jne
push
in
in
mov
dec
pop
cs
frstor
or
xchg
shlb
scas
js
pop
xchg
repz
cli
xlat
mov
out
ja
cmc
add
lock
lea
pop
rclb
out
ljmp
loopne
mov
outsl
ljmp
xchg
outsb
clc
or
add
sbb
cmp
scas
xchg
clc
imulb
push
pop
sub
js
nop
test
add
inc
fisubrs
inc
lret
cmpl
push
test
dec
cmp
mov
xor
testl
insl
cld
pop
movsl
mov
xchg
pop
int3
dec
lret
push
in
push
sbb
mov
leave
das
xchg
cmc
add
adc
mov
cmc
cld
pop
lea
aad
inc
push
decl
fcmovu
adc
jnp
insl
mov
cmp
pop
ret
mov
xchg
cs
lods
ja
into
repz
js
mov
mov
into
jmp
add
test
pop
imul
jb
ljmp
mov
insl
cmpsl
lret
test
mov
leave
daa
mov
lods
iret
add
andb
xchg
inc
imul
lea
imul
push
add
or
xchg
sbb
shll
fcomi
push
jae
orb
lds
xlat
test
sahf
loop
mov
loope
mov
mov
and
das
push
xorl
pop
push
jns
test
mov
mov
ficompl
sub
outsl
jnp
aad
fistpl
or
js
or
shrl
sbb
mov
subb
shrl
jb
movsb
cmp
inc
dec
pop
mov
mov
subl
mov
add
shlb
inc
les
dec
ljmp
in
mov
and
dec
cmpsl
inc
lock
stos
adc
test
test
pop
sub
dec
jge,pn
xlat
sarb
or
adc
cs
test
sahf
hlt
and
push
roll
sbb
in
into
jb
sbb
imul
insl
scas
dec
cmpsl
fucomip
es
jge
mov
pop
bound
push
cmp
mov
fsubl
adc
mov
mov
sahf
cmc
andl
cmpsb
cmp
lahf
add
jo
sub
xor
jne
jne
xor
add
pop
add
xorb
jmp
xor
mov
icebp
xor
inc
jp
push
lods
loope
push
sbb
jge
mov
push
lahf
cmp
mov
scas
pop
xchg
push
pop
fstps
cmpsl
pop
sbb
mov
or
out
sbbl
lea
daa
dec
clc
mov
mov
sub
mov
mov
nop
insl
push
out
outsl
push
push
popf
aas
lods
in
lret
sub
stos
sbb
xorl
sub
jns
lcall
rorb
loop
test
test
jne
loopne
xor
cmp
xor
cwtl
cmp
in
fcoms
lcall
pushf
jmp
mov
roll
aaa
ret
sbb
test
lods
stos
mov
cmc
cmc
test
inc
out
repz
les
aam
lods
ret
lock
aaa
int3
in
out
lods
les
popa
out
add
cwtl
test
nop
jecxz
fnsave
enter
cld
push
or
cmp
adc
cld
sub
pop
and
roll
mov
push
jae
pop
push
mov
push
xchg
inc
mov
adc
les
mov
clc
adc
test
cmpl
movsb
mov
xor
mov
psubsb
test
mov
in
mov
das
add
mov
xor
insl
shl
out
pop
jl
lock
pop
mov
repnz
and
jp
out
pop
shr
adc
xchg
pop
xor
stos
pop
aam
mov
cmpsl
mov
out
aaa
xor
adcl
fistps
cmp
hlt
xchg
repnz
cmpl
jae
fldl2e
insl
or
or
popf
cmp
icebp
les
repz
movsl
jae
fildl
add
out
lret
call
fimuls
or
cmp
mov
cmp
jnp
xchg
sub
gs
rcrb
dec
push
or
mov
notb
leave
dec
pop
rcll
call
add
pop
push
jns
adc
daa
mov
icebp
test
jns
mov
jb
aam
xor
shrb
fidivl
aas
sbb
cmp
ret
xor
mov
xor
push
sbb
xor
cmc
pop
sub
pop
inc
push
xchg
les
pop
cwtl
lret
xchg
mov
hlt
inc
mov
test
mov
clc
adc
lret
cwtl
das
pop
ljmp
fnstenv
jle
fwait
stos
in
ss
int
jge
lds
fisttps
xor
rcrb
cwtl
scas
jno
out
cld
aam
in
mov
mov
cmp
inc
clc
popf
xchg
test
sub
repz
loop
out
or
and
out
test
out
pop
test
call
stos
add
hlt
ds
movsb
aad
dec
dec
loopne
push
jnp
mov
xchg
adc
jo
xadd
push
jge
loope
cmpl
enter
dec
ret
push
sub
fcoml
daa
jae,pn
inc
and
xchg
inc
movsl
stos
dec
jg
test
pmulhw
in
das
push
js
xchg
faddl
fisubs
scas
mov
add
inc
push
mov
test
aad
or
out
mov
pop
jo
cwtl
add
daa
js
cs
or
dec
pop
lds
push
mov
enter
jge
cmc
push
gs
dec
lcall
aad
jge
cmp
call
inc
ret
or
xchg
es
mov
xchg
cmp
and
aam
jecxz
rol
jmp
push
out
mov
lods
outsb
das
lods
jmp
lret
push
fs
xchg
insl
xchg
dec
pop
cmp
push
sbb
aad
push
repnz
adc
push
adc
gs
nop
add
sti
jo
dec
push
lds
xor
jnp
faddl
cmp
xor
lea
adc
repz
cmp
cmp
ljmp
loop
mov
jne
jne
jl
rorl
pop
arpl
aad
sub
imul
imul
cmp
fs
jl
stos
cltd
adc
hlt
leave
sti
push
ljmp
pop
js
ret
jge
insb
cmp
and
movsb
maskmovq
divl
adc
in
cltd
ficompl
stc
xor
xchg
mov
xchg
fld
or
adc
loop
adc
pusha
mov
out
jnp
cmp
int
in
pop
loopne
data16
push
lods
fcomps
dec
cmp
sub
push
adcb
outsl
xor
ficompl
aad
das
sbb
sbb
mov
xchg
adc
adc
gs
leave
out
lock
out
loop
movl
inc
cld
rcrb
cmpl
repz
aad
gs
movsb
xchg
sbb
or
xchg
repz
cmp
pop
add
lret
inc
sub
mov
test
sbb
lret
mov
enter
xchg
xchg
or
mov
pushf
out
xor
inc
icebp
xlat
inc
outsb
sbb
stos
mov
cmc
push
push
test
xchg
lcall
jns
test
push
aas
es
cli
call
ret
cmpb
lock
ret
add
cltd
imul
pop
push
or
fldcw
out
enter
pop
sbb
aas
lret
ret
das
out
repnz
mov
mov
les
sub
jge
xor
jp
mov
insl
xchg
rolb
xchg
dec
in
insb
in
ret
xor
dec
bt
arpl
mov
xchg
xor
test
add
xor
sbb
insb
je
mov
movsl
fisubs
fstpl
cmp
jbe
cltd
jmp
in
push
lcall
movsb
push
mov
xorb
push
test
scas
mov
mov
js
imul
xchg
dec
out
pusha
add
loop
das
dec
push
mov
sub
scas
mov
push
outsl
out
test
lock
jbe
mov
add
repnz
stos
fistl
adc
push
adcl
scas
dec
fwait
adcl
stc
in
pushf
insb
mov
push
xchg
mov
loop
nop
fstps
pop
aam
in
mov
fsub
fistpl
mov
jg
xchg
cmpsb
sbb
stos
or
fiadds
push
pop
push
push
pop
test
add
lds
pop
mov
test
fisttps
push
pusha
iret
push
test
jl
test
lret
mov
add
lret
sub
scas
aas
fadd
xchg
push
fnsave
adc
aad
in
inc
sub
data16
fimull
xor
inc
push
or
cmp
repz
mov
pusha
stos
popl
roll
add
add
pop
jp
push
mulb
sub
mov
test
mov
add
and
pop
jno
and
ja
xchg
adc
testl
pushf
add
icebp
dec
or
rorb
or
imul
sbb
negb
cmpb
sub
dec
call
jmp
pop
aam
jns
int
push
lods
push
xchg
into
dec
push
dec
jns
mov
or
mov
cmp
aas
adc
add
sub
push
mov
sub
leave
sbb
dec
jbe
add
into
lahf
cmp
jmp
adc
in
mov
jecxz
mov
icebp
xor
inc
xlat
ljmp
aam
and
xchg
push
addb
add
mov
idivb
push
out
add
les
pop
in
cwtl
add
mov
xchg
into
les
xchg
addb
pop
sbb
xor
jb
sbb
inc
push
cmp
inc
in
mov
mov
fadds
mov
push
imulb
std
xor
jmp
jmp
fistl
sahf
mov
gs
int
dec
clc
pusha
outsl
jmp
sar
add
mov
pop
js
add
pop
movsl
jmp
mov
xchg
fists
push
adc
dec
mov
imul
ret
test
push
ret
je
movsl
sbb
xchg
in
mov
aas
jns
sti
mov
ja
push
mov
push
xor
jno
mov
cltd
mov
pusha
add
jge
and
inc
repz
push
inc
xor
decb
hlt
dec
mov
pop
leave
test
or
push
mov
xchg
mov
ficompl
lret
enter
je
mov
sbb
pusha
aad
shlb
test
jo
adc
pop
push
cmp
ret
es
stc
sti
mov
cltd
fldl
cwtl
push
std
add
icebp
cli
or
push
mov
popa
mov
lock
inc
xchg
and
lods
xorl
jno
mov
mov
movl
push
xor
roll
mov
cltd
jb
and
in
push
lea
cs
sbb
push
adc
or
and
fwait
or
jno
fcomps
mov
cltd
enter
inc
pop
ss
loopne
jmp
push
pop
jge
outsl
lcall
mov
xchg
clc
fldenv
int3
mov
das
ljmp
mov
fbstp
fstp
pop
sbb
jmp
inc
bswap
xchg
dec
movsb
push
and
jno
sbb
fiadds
insb
fcomps
mov
push
shlb
adc
adc
mov
fs
cmp
movsl
rclb
mov
sbb
inc
cld
std
iret
push
dec
js
jbe
xchg
cld
inc
lods
in
sub
outsl
inc
in
xor
fidivrl
adc
inc
pop
incl
cmc
in
inc
sub
xchg
rcrb
hlt
insb
mov
inc
out
push
jle
outsb
mov
repnz
inc
inc
movsl
lock
sub
xor
inc
ss
enter
popa
inc
add
and
testl
or
scas
or
mov
aam
cmpsl
out
popf
jecxz
mov
inc
adc
aad
xchg
mov
push
clc
movsl
mov
adc
or
lds
mov
scas
jg
adc
jns
ret
insl
in
repnz
jecxz
push
enter
daa
mov
in
neg
imul
leave
leave
dec
inc
inc
mov
push
int
jg
dec
mov
xor
xchg
jb
stc
and
push
xchg
es
arpl
sahf
fidivrs
arpl
fidivrs
mov
mov
xor
and
push
mov
dec
push
mulb
push
gs
cmpl
scas
xchg
out
js
sub
in
dec
dec
lret
mov
cld
pop
out
dec
or
pusha
fnstcw
and
sub
ss
out
add
movsb
clc
ret
ljmp
inc
sbb
sbb
pusha
cmp
pop
das
daa
mov
cmpsb
sbb
pop
daa
stc
jnp
cmp
push
mov
idivb
push
adc
int3
xchg
or
or
leave
xor
lea
pop
and
mov
sbb
jnp
adc
rcll
dec
add
sub
imul
std
out
lahf
mov
std
sub
sub
pop
mov
in
mov
aaa
sub
jg
inc
xchg
das
push
ret
push
jge
out
lods
mov
jecxz
xchg
cs
repz
cmp
push
xor
rolb
or
pop
fistl
call
cltd
and
inc
inc
jo
loop
pop
out
sub
adc
mov
loop
lods
lods
cmp
xchg
inc
pop
mov
jmp
shrb
push
sbb
stos
ds
inc
pop
fwait
loop
fldcw
pusha
in
call
adc
xorb
cs
or
bound
mov
jmp
mov
stc
mov
insb
mov
outsb
inc
lahf
mov
xchg
hlt
mov
nop
mov
adcb
inc
ljmp
jmp
push
add
sub
loope
and
adc
ficoms
outsb
out
mov
inc
cld
pop
sub
jbe
mov
mulb
mov
mov
sbb
jae
cmpb
repnz
aam
lcall
pop
sub
in
cmpsb
and
adc
adc
bound
push
mov
lods
js
in
rorb
mov
jg
lcall
or
push
popa
shrl
xor
push
loope
loop
aas
sub
mov
test
mov
and
lods
fs
sub
mov
mov
repnz
test
inc
mov
pop
add
cmp
adc
xchg
jbe
repnz
repnz
dec
jb
sub
dec
xlat
insl
mov
hlt
push
pop
push
fcos
mov
pusha
mov
movl
lahf
in
imull
mov
ret
pop
or
fwait
stc
mov
xlat
loope
xlat
lock
sub
enter
mov
in
pop
movsb
dec
cmp
enter
add
sub
cs
pop
pop
ficoml
jbe
pushf
xchg
nop
pop
js
jg
xor
push
fwait
loope
test
jnp
pusha
sub
and
and
push
out
stos
repz
int3
shl
mov
jp
or
and
dec
insl
mov
movsl
rcrl
sbb
or
test
dec
mov
mov
mov
dec
xchg
lea
je
cmc
divb
dec
iret
push
and
jmp
cmc
adc
cmpsl
mov
lret
popf
aad
add
xchg
adc
cmp
xchg
inc
movsl
sub
popf
sbb
aam
and
jne
inc
or
dec
sub
divb
fwait
insl
pop
cmp
jmp
testb
jge
inc
rcl
sbb
dec
repz
fistpl
jle
mov
xchg
mov
pop
ds
add
jg
ret
mov
push
popa
pop
jmp
imul
mov
pop
orb
fwait
xchg
icebp
aad
or
xchg
leave
xlat
in
jp
inc
jb
and
mov
cmpsb
rcll
pop
sbb
out
int3
addb
lods
cmp
mov
in
adc
cli
repz
popa
pop
cli
outsl
xchg
jmp
popaw
inc
enter
mov
in
xchg
je
ret
lods
jbe
test
push
clc
sahf
dec
out
inc
cmp
fiaddl
and
mov
jmp
movsb
and
lret
mov
mov
mov
inc
imul
or
outsb
repnz
xchg
adc
mov
stos
aam
push
lahf
fidivrs
and
and
imul
outsb
mov
ret
cmc
xor
fisttpll
fnstcw
sub
push
or
jmp
sub
in
adc
sbb
insl
or
sar
mov
popf
fucom
movsb
mov
movsl
lods
loopne
push
add
and
sbb
push
sub
xor
rcll
iret
js
sbb
or
imul
xchg
cmp
fbld
shr
iret
mov
cmp
call
xor
jo
xlat
mov
pusha
ss
lds
sub
or
test
mov
mov
dec
dec
loop
jb
shl
aad
xor
or
flds
mov
stos
daa
xorl
pop
and
mov
fmuls
repnz
leave
and
orl
mov
and
fisttps
fs
inc
xchg
push
xor
ja
scas
or
lret
sbb
fstl
jbe
cmpsb
xor
inc
mov
cmpsl
fdivl
mov
mov
lahf
mov
imul
stc
je
aaa
xchg
clc
cs
mov
mov
push
jbe
fstps
arpl
mov
dec
jno,pn
lods
adcl
sub
push
repnz
cmp
adc
add
insl
icebp
cmp
loope
lret
xchg
loopne
adc
data16
aaa
mov
addl
stos
je
outsl
fcmovbe
or
fsub
hlt
sar
xchg
adc
frstor
cmc
adc
fadd
test
dec
ss
shrl
xorl
sti
arpl
rclb
arpl
call
cld
sbb
xchg
pop
push
cmc
sbb
pop
xorb
cmc
movsl
in
stos
mov
lock
xchg
aaa
and
test
dec
lods
mov
pop
xchg
sub
dec
cmp
dec
ss
mov
insl
lret
mov
lock
xchg
mov
push
push
lret
hlt
stos
push
jmp
orl
cmc
in
xor
in
cmc
mov
sub
sub
mov
jg
xor
xchg
pop
repz
xchg
sub
jbe
popf
mov
ds
xchg
lods
repnz
pop
clc
sbb
jg
pop
rorb
xchg
stc
pop
add
jbe
fwait
aad
leave
aad
sub
mov
cmp
mov
mov
out
mov
loop
cmp
or
rcrl
in
out
shrl
in
pop
sarl
xor
xchg
nop
adc
lods
shlb
sub
lahf
push
inc
push
pop
or
lret
dec
mov
lods
pop
mov
notl
pop
je
loope
pop
mov
pop
mov
fmulp
call
int
push
mov
xor
mov
loope
sahf
sub
call
shl
jl
ret
mov
ds
xlat
push
mov
pop
cmp
loop
gs
jecxz
sub
cmpsl
push
lret
cltd
test
imul
xor
inc
sbb
imul
ret
jmp
sub
gs
and
mov
ss
jmp
rolb
jecxz
sub
or
insb
decb
push
xchg
jo
push
out
inc
test
cltd
jge
hlt
inc
pop
sbb
stos
push
push
push
lds
sbb
jae
xor
xchg
inc
push
jp
mov
inc
jle
pop
inc
cli
std
jbe
adc
pop
dec
lods
cld
fists
mov
mov
movl
jne
mov
aad
mov
jb
add
cmp
pop
idivb
or
or
mov
and
aaa
xorl
les
int
in
push
adc
cwtl
aad
addr16
stc
lods
iret
xlat
lret
cmp
push
leave
push
hlt
mov
jnp
pushf
out
inc
mov
out
fldt
inc
mov
addr16
mov
sarb
out
lods
repnz
fs
push
add
sbb
inc
pop
mov
fadds
popf
push
mov
fstp
xor
cmc
int
out
loope
mov
pop
lods
or
lret
xor
fwait
nop
int3
aam
in
push
fs
adc
adc
dec
cld
outsb
sbb
dec
push
lds
pop
pop
orb
testl
aad
fwait
in
notl
mov
pop
inc
fnstenv
sbb
jb
add
mov
iret
movsb
mov
das
sbb
xchg
mov
lea
fnsave
cmpsl
adc
xor
popa
shlb
daa
iret
sbb
repz
and
out
adc
iret
enter
stc
ret
dec
sub
xchg
out
sub
aaa
inc
sarb
jae
and
xchg
adc
hlt
add
pushf
insl
sbb
out
repnz
xor
mov
popf
mov
mov
add
lret
add
test
ret
sbb
int
daa
dec
les
jo
lret
add
sahf
imulb
sub
movsl
or
pop
add
or
imul
arpl
outsb
jge
xchg
jno
in
xlat
aad
dec
daa
xor
dec
loopne
test
in
rcll
mov
mov
pop
mov
movsb
add
or
adc
andb
cmp
jns
adc
sbbl
inc
sub
mov
sub
and
jg
sub
orl
in
outsb
mov
adc
pop
push
pop
ljmp
jmp
loopne
push
pop
push
add
int3
es
mov
popf
mov
rep
xor
daa
pop
push
js
mov
push
pop
ret
sbb
mov
dec
fadds
jns
lret
cmpsl
xchg
jmp
test
fsubl
xor
cmp
jb
and
inc
xchg
mov
fisubs
mov
jne
stos
lahf
fstps
imul
push
shrb
sub
clc
fistl
insb
and
cmpsl
jecxz
mov
xchg
pop
jns
jp
pop
jnp
loop
rorl
lea
xor
fiaddl
add
mov
in
push
lret
repz
inc
in
mulb
mov
cmc
inc
dec
pop
stos
imul
dec
xor
cltd
dec
icebp
idivb
or
lcall
dec
cmp
test
cli
mov
cli
add
sbb
test
cmpb
imul
mov
mov
push
dec
fidivl
int3
and
adc
ds
dec
and
or
call
inc
ss
adc
in
iret
lcall
bound
pop
cs
jo
int
or
call
std
repz
cmp
cltd
cmp
nop
cmp
mov
push
lods
sub
adc
ret
mov
pop
push
test
in
pop
shlb
mov
mov
pop
or
jae
fmuls
push
sbb
xchg
sub
mov
ds
mov
subb
pop
cmp
jnp
ret
bound
movsl
pusha
mov
imul
stos
fdiv
aad
out
lahf
insb
jg
xchg
popf
push
nop
es
ja
pop
aam
fcompl
sbb
pushf
test
cmp
jg
cmpl
daa
push
xor
fucomi
xchg
push
out
mov
fstps
pop
popf
sub
loopne
pop
sub
sub
dec
sti
in
mov
push
test
data16
dec
mov
dec
and
mov
mov
fistps
hlt
cmpb
jg
es
dec
decb
sub
ss
ja
test
insl
push
jns
cmpsl
lea
fisubs
add
pop
pop
and
sub
sbb
pop
jl
movnti
movsl
cmc
xchg
add
mov
dec
push
push
fcom
pop
imul
sub
mov
xor
xchg
jle
add
jl
cmp
and
mov
add
lret
popa
mov
sbb
jmp
repz
or
in
adcb
ret
and
mov
daa
cmp
aas
xor
add
lcall
add
jno
push
and
jl
cmp
dec
icebp
outsl
pop
inc
test
sub
cmp
inc
scas
popf
dec
dec
mulb
lock
retw
adc
ds
jmp
cltd
lds
mov
add
inc
or
mov
cmp
ja
inc
xchg
jb
xor
fwait
stos
cli
loope
stc
adc
pusha
xchg
pusha
adc
movsl
arpl
xchg
adc
inc
out
test
std
sub
push
imul
xchg
fchs
sbb
loop
or
xor
stos
fwait
mov
test
add
pop
in
into
push
in
inc
mov
jecxz
or
xor
xor
lret
ljmp
dec
push
in
mov
inc
push
ret
cmp
cmpsb
pop
push
jne
jmp
sub
adc
pop
das
ss
mov
ret
jg
mov
cmpb
cmp
xlat
out
in
dec
insl
jo
in
scas
hlt
push
pop
shrl
mov
mov
iret
push
cmp
push
sahf
repz
leave
lcall
negl
mov
push
call
iret
icebp
in
je
inc
pop
lods
pinsrw
jne
dec
sahf
adc
cwtl
pop
enter
mov
imul
sub
xchg
mov
sbb
sbb
jecxz
jecxz
fbld
mov
daa
xor
jg
out
push
jns
sahf
inc
and
mov
stos
outsb
cmp
roll
lods
adc
mov
cmpsb
xchg
sbb
inc
fdivrl
js
adc
out
jmp
cmpsb
push
out
adc
lods
fisttpl
cmp
and
dec
push
ljmp
shlb
push
lods
adc
outsl
push
push
inc
and
mov
add
jmp
shlb
and
sub
aas
es
sub
pop
push
or
sarb
lods
dec
rcll
jae
mov
push
ljmp
popa
in
jns
or
jg
mov
mov
std
aas
fsubs
je
aam
mov
sbb
mov
mov
mov
sbb
cmp
push
in
xchg
je
add
test
cld
adc
fidivrl
je
popf
or
dec
dec
mov
imul
xor
pop
mov
jbe
inc
pushl
fistpll
gs
std
cli
push
xchg
mov
int
or
cmp
cltd
data16
outsl
hlt
shlb
cwtl
mov
popa
pop
sti
ror
mov
pop
xor
mov
fs
pushf
out
in
mov
jge
push
andb
add
test
cmp
movsb
pop
jns
adc
pop
fstpt
xor
test
in
lcall
sub
cli
bswap
rcl
ja
cmp
arpl
adc
and
add
dec
mov
stos
jbe
lock
std
sbb
movsl
clc
or
or
jno
loopne
sbb
es
xlat
mov
mov
es
int
dec
xor
stos
pop
dec
push
jno
insb
sbb
aad
mov
cmp
jno
push
push
push
mov
jns
mov
lea
mov
out
mov
inc
mov
test
rcll
or
xlat
dec
sbb
cmp
push
hlt
ljmp
xor
cs
add
frstor
test
pop
daa
dec
daa
cli
xor
iret
add
out
inc
sbb
ret
decb
sbb
int
ja
push
pop
xchg
mov
dec
push
repnz
xor
rcrb
or
mov
sbb
loope
repz
push
cmpsb
fstpl
daa
jne
inc
cltd
mov
mov
scas
mov
xchg
sbb
push
and
add
insb
ds
stc
mov
pop
sub
and
stos
push
les
popf
xchg
in
cltd
mov
fisubl
inc
lcall
movsb
fldcw
mov
movsb
nop
mov
nop
sbb
adc
mov
cmp
imul
jno
clc
test
mov
sbb
add
and
mov
cs
mov
shr
push
ret
and
repnz
adc
insb
mov
in
and
outsb
pop
hlt
fsubrs
rorb
cmpsl
lret
adc
pop
jne
es
stc
inc
mov
aaa
sub
pop
jbe
stos
jns
cld
ss
lods
mov
adc
push
shll
js
hlt
add
inc
jg
xor
lds
jae
or
xlat
sub
xor
lea
jecxz
jne
hlt
mov
cmp
sub
pop
pop
sbb
mov
int
jg
mov
bound
shll
jnp
dec
rep
cmp
pop
cltd
stos
movsl
subb
and
jl
dec
xchg
jl
sbb
xlat
jg
fdivrp
push
mov
or
loope
ja
jecxz
push
nop
pop
outsl
push
outsb
pop
cmp
xchg
test
in
lods
or
sub
mov
andb
push
xchg
push
test
jno
pop
pop
inc
jnp
mov
inc
scas
push
popa
pushf
push
fbstp
sbb
leave
imul
mov
mov
stc
dec
dec
cmp
aam
loope
sub
adc
test
ds
pop
lock
call
mov
lods
roll
pop
mov
loop
cs
and
mov
inc
fs
fsub
repz
sub
dec
lcall
push
pop
push
cmc
mov
int
popa
dec
mov
js
aas
jae
xor
push
pop
mov
mov
mov
or
xor
mov
cmc
mov
out
mov
scas
into
inc
or
aaa
int3
adc
lcall
pop
cltd
js
jmp
rolb
inc
out
sbbb
pushf
xor
outsl
cmp
fisubrs
pushf
sub
mov
mov
cmp
push
aad
insl
adc
jnp
jl
dec
mov
aad
insb
mov
sbbb
bound
xchg
icebp
add
aas
in
mov
js
add
stos
fsub
add
lret
test
or
xor
pop
mov
dec
adc
nop
push
xchg
mov
push
mov
fbld
ljmp
sub
das
mov
pop
stos
jo
mov
jno
jl
sub
mov
xor
testl
xchg
sub
pushf
push
sbb
stc
jno
add
xor
je
add
sbb
dec
in
xor
shl
add
push
pop
adc
push
outsb
cmpsl
xor
cmp
negb
push
xorb
cmpsb
push
lcall
sub
jae
aam
aaa
out
lcall
mov
jae
mov
fwait
jns,pn
jle
mov
add
sub
push
adc
outsl
sub
mov
ds
add
mov
push
dec
call
cmc
fldt
push
fnstsw
add
loopne
add
xor
inc
push
mov
aaa
dec
mov
mov
or
inc
mov
fbstp
or
xchg
test
cld
std
int3
mov
enter
push
sarb
cld
decl
sbb
sub
icebp
jae
pop
scas
pop
gs
cmp
and
push
or
push
hlt
add
stos
rorb
out
nop
jg
jmp
mov
imul
add
xor
cs
stc
pop
inc
push
in
test
mov
push
xchg
sub
inc
insb
add
pop
insl
rcrl
sub
ja
xchg
in
shl
popf
ret
push
gs
or
mov
xadd
pusha
add
stos
xchg
cmp
or
sar
mov
shlb
andps
mov
push
in
sahf
adcl
dec
adc
adc
or
or
lea
out
jg
aaa
dec
mov
fcompl
push
fistl
outsl
in
push
mov
push
mov
in
jl
adc
inc
dec
pushf
stos
dec
fnstcw
sub
dec
xor
lods
clc
test
test
mov
fcomps
sub
and
or
das
lret
stos
dec
mov
cmpsb
popf
or
stos
pop
mov
mov
mov
mov
mov
movsb
inc
int
gs
bound
jp
ljmp
std
push
sub
test
mov
lods
cmpsl
out
sub
testb
inc
inc
in
push
push
psrad
scas
push
xor
lds
out
js
mov
mov
xor
cmpl
pop
ds
mov
in
std
fcompl
xor
lock
adc
mov
mov
int
out
popf
aaa
fsubrs
dec
jl
cmp
mov
jae
mov
adc
daa
shrb
push
mov
push
xchg
incb
repnz
sahf
mov
movsb
mov
cs
scas
inc
cld
inc
mov
lea
sbb
jge
loop
cmp
fs
xor
idivb
xchg
out
ret
scas
jmp
push
inc
aam
mov
pop
xchg
inc
jecxz
cmp
mov
add
pop
add
adc
dec
push
insl
cld
out
push
testl
into
push
or
mov
cmp
fsubrl
pop
inc
sbb
mov
inc
clc
mov
outsl
sbb
test
iret
dec
push
fcmovne
inc
adc
adc
nop
mov
xchg
rcl
std
or
pop
in
iret
enter
rolb
scas
arpl
sti
or
mov
jle
scas
or
mov
push
xor
sub
sbbl
pop
jns
loopne
add
insb
lret
cltd
cmp
adc
adc
jns
xor
lods
dec
mov
xor
andb
in
bound
xor
mov
out
mov
das
xchg
cmpl
ret
repz
scas
dec
rol
jbe
fisttps
cmc
cmp
jae
cltd
cmp
repnz
pop
mov
jle
add
lods
mov
cmovno
das
stos
pop
cmpsb
push
push
lret
inc
fimull
push
ja
push
popa
sub
sti
jl
or
cltd
push
int
sahf
pop
jge
cld
adc
push
jmp
inc
xor
xchg
ret
mov
xor
daa
and
outsl
cmp
in
add
lds
sub
push
push
iret
push
mov
daa
aam
cld
jo
bound
dec
dec
hlt
cli
ficomps
lahf
icebp
mov
fisubs
lods
je
out
mov
dec
mov
mov
movsb
inc
xchg
cli
push
inc
jge
dec
or
outsb
lock
insb
mov
iret
inc
clc
or
sbb
aam
es
adcb
aaa
es
mov
std
lods
inc
pop
loopne
adc
sbb
sub
adc
mov
inc
js
mov
fcompl
fmull
sbbb
cmpsl
inc
ror
incb
adc
add
dec
sbb
in
sbb
rcll
cmp
and
mov
sbb
cmpsl
subl
push
push
aad
adc
xchg
sti
stos
movb
mov
pop
push
es
mov
in
push
rorl
push
mov
pop
sbbl
push
adc
cs
fcoms
xorb
xor
or
aad
add
push
xchg
hlt
dec
data16
mov
arpl
mov
nop
or
jl
sti
adc
out
or
mov
xor
adc
mov
jl
popf
dec
frstor
adc
cli
and
push
push
int
fidivrs
cmpsb
icebp
pop
cmp
jae
cmc
pushf
cmp
jae
cmpsb
pop
stc
fs
fmull
repz
das
and
outsb
cmpsl
pop
ljmp
xchg
test
das
scas
push
adc
jns
imul
arpl
xor
inc
aam
sbb
pop
nop
fldt
sbb
jae
cmpsl
or
sti
add
mov
cmpsl
inc
dec
adc
leave
sbb
mov
icebp
lcall
out
std
push
push
jge
stc
or
add
or
subl
lds
or
add
aam
out
push
jo
sti
btr
mov
add
jbe
enter
cwtl
scas
and
clc
fs
mov
jmp
aad
inc
add
pop
lret
sub
adc
inc
fmuls
aas
shll
push
pop
jnp
jmp
adc
xchg
shlb
lcall
fs
popa
ja
adc
xor
ljmp
cmp
cmc
xor
sub
mov
fdivrl
jno
nop
pop
sub
mov
push
in
stc
test
fldcw
push
mov
shl
cmp
xchg
fwait
adc
imul
or
insb
mov
dec
jo
aam
jmp
add
mov
bound
les
gs
fistpll
push
nop
mov
aad
and
daa
push
cmp
dec
pop
nop
xchg
loopne
out
pop
cs
setnp
xor
cmp
gs
int
jge
shl
sbb
into
mov
push
mov
push
movsb
push
loop
aam
clc
jae
inc
daa
lea
or
lret
push
outsb
adc
mov
mov
mov
lret
lods
insl
icebp
outsb
cmp
je
mov
cmp
outsl
xchg
ret
cltd
insl
push
repz
mov
popf
mov
mov
data16
repz
mov
cmp
mov
imul
jnp
or
dec
pushf
dec
xor
aam
pop
jns
pop
fidivrl
or
sbb
add
add
jmp
insl
cmp
mov
icebp
test
push
ds
stos
lods
scas
int
int
out
std
add
jmp
jno
in
sarl
adc
sub
inc
rol
add
lods
and
mov
test
push
push
xlat
insb
adcl
gs
and
test
mov
orb
mov
out
or
add
cld
jmp
pop
push
cmpsl
inc
push
lret
push
fdivs
lret
add
setge
int3
stos
add
push
xchg
arpl
ret
fildl
cmp
rclb
xchg
cs
addr16
jl
sub
xchg
aam
sar
xorl
adc
sub
sbb
adc
push
aam
pop
pop
xchg
rsm
push
pop
pop
popf
loopne
stos
xchg
sub
jo
aad
push
xchg
dec
push
pusha
lods
iret
fldt
lds
test
jno
shr
lcall
push
testl
imul
loop
fld
ja
mov
enter
roll
lock
and
out
and
lea
xor
mov
mov
ljmp
aam
push
pop
movsl
mov
xor
push
and
jmp
call
loope
add
outsl
or
add
cld
test
aaa
leave
mov
sub
jnp
pop
loope
fcoms
add
clc
mov
pop
add
imul
mov
lea
xchg
mov
in
in
and
mov
gs
pushl
fldcw
push
fisubrl
xor
fiadds
fdivs
add
and
repz
mov
jg
dec
sbb
adc
lods
shll
lret
in
dec
mov
dec
sbb
jge
sbb
jg
mov
inc
xor
adc
cmpsb
adc
push
add
fwait
ss
jmp
and
add
out
pop
call
inc
and
sbb
icebp
and
scas
adc
inc
mov
mov
xchg
pop
xchg
in
and
incl
xchg
ja
or
sar
cmp
and
adc
push
mov
inc
fists
loop
rcl
fisubl
pop
add
addb
int3
sbb
mov
sub
scas
aaa
pop
sti
repz
fisttps
outsb
mov
divps
repnz
insl
mov
sahf
add
mov
idiv
imul
xorb
lea
inc
pushf
negb
xor
mov
scas
movsb
xchg
ss
mov
insl
lret
sar
sub
daa
xor
cltd
push
into
pop
fstpt
xor
push
pop
jmp
dec
push
sbb
daa
sub
in
xchg
cwtl
add
sub
iret
lods
aad
sbbl
call
pop
icebp
inc
stos
and
push
dec
mov
cmp
jmp
or
jecxz
test
and
inc
scas
lds
mov
fistps
push
adc
mov
in
or
push
pushl
cmpl
test
jae
jp
pop
inc
add
fildl
jno
cwtl
xor
xor
lret
lret
lods
test
data16
addb
xor
push
sub
fisubs
ss
push
or
out
cli
xchg
push
cmpsl
and
data16
movsl
rcrb
jg
xchg
outsb
push
xchg
fiaddl
js
lret
and
mov
pop
jge
pop
lea
lds
in
and
inc
popf
mov
jl
imul
daa
jge
repz
lods
xchg
jg
imul
movsb
sbbl
xchg
mov
xor
and
popf
xchg
shll
les
lods
mov
jg
fldl
sarl
sarl
mov
movsb
and
imul
inc
mov
mov
and
iret
int3
mov
jge
lret
dec
and
fimull
shlb
mov
and
jnp
jge
dec
and
rclb
stc
xor
jmp
sbb
addl
push
outsl
hlt
std
adc
fs
ret
mov
mov
repnz
std
sub
cmc
pop
and
scas
push
loope
pop
jo
sub
in
loop
xchg
adc
push
outsl
sub
or
mov
add
cmc
pop
dec
int3
add
sub
movsl
das
inc
out
inc
data16
jecxz
mov
push
pop
jb
cmpsb
es
inc
sarl
frndint
subl
bound
loopne
xor
and
pop
lret
dec
mov
sub
lods
lods
push
xchg
sahf
xchg
mov
fwait
xor
push
es
rcrb
jns
dec
insl
push
xchg
sbb
add
push
and
cmp
outsb
add
push
pop
xorb
pop
jns
sub
std
mov
xor
and
cs
lock
lds
out
push
ja
cld
jb
stc
mov
adc
pop
ja
imul
into
xchg
lock
mov
stc
cmp
in
adc
add
jmp
ds
loop
xlat
xlat
clc
int
icebp
cld
xor
aam
push
sbb
jo
fisttps
push
frstor
rcrb
or
push
xchg
pop
push
xor
or
xchg
adc
or
aam
mov
dec
rcrb
xchg
xchg
mov
inc
xchg
aad
adc
imul
aam
int3
xlat
ja
push
dec
call
mov
push
stos
mov
jb
sahf
mov
jecxz
shll
js
vcvttpd2dq
ds
loop
mov
stc
push
or
sub
cli
sbbb
dec
js
inc
xchg
mov
sbb
jmp
lahf
lcall
pop
xlat
pushf
and
push
sub
cltd
ret
mov
xlat
lret
or
xchg
lea
mov
mov
fs
inc
add
out
sti
out
push
out
std
or
js
lods
shlb
jbe
into
fwait
lods
rolb
xchg
push
jp
xlat
jle
loopne
iret
pop
arpl
imul
out
mov
dec
cmpsb
sar
cmp
adc
out
cmovns
dec
stos
jb
testb
out
arpl
jo
insb
dec
icebp
aam
sub
fisubl
gs
jl
fucomp
dec
jge
xor
lret
mov
xchg
divl
cli
adc
out
sbb
rorb
hlt
shll
pop
mov
rcrb
fsubs
test
lret
sarl
ljmp
mov
and
mov
int
mov
fs
xor
mov
jl
out
sbb
insb
mov
movsl
adc
xchg
push
pop
or
dec
or
rcrb
or
push
push
xchg
mov
adc
lock
xchg
mov
xchg
or
lods
out
ret
cmp
dec
xchg
push
and
imul
push
daa
adc
sbb
lods
faddl
or
jl
xchg
popf
fisubrs
iret
ds
push
in
sub
xor
push
mov
aaa
bts
stos
jb
out
das
in
dec
jns
dec
sarb
in
rclb
mov
inc
dec
sbb
repz
sub
outsl
fisttps
dec
enter
mov
dec
mov
xor
sub
push
aam
and
add
jl
push
cmpsb
or
xchg
aad
incl
sub
cmp
mov
add
rorb
xchg
or
and
xor
jb
test
je
repz
xchg
add
loope
es
out
std
pop
cld
sbb
stos
stos
sar
mov
push
pop
inc
mov
push
test
fsubl
popa
mov
js
jns
ja
xchg
in
orl
roll
dec
adc
test
aad
pop
nop
xor
in
pushf
les
orb
ret
mov
arpl
push
fdivrl
dec
push
mov
movsl
xchg
icebp
ret
mov
pop
xor
addr16
add
rclb
add
jp
pushl
frndint
push
in
and
sar
push
mov
imull
jmp
ja
push
jno
inc
mov
adc
into
rcll
xlat
xchg
xlat
push
mov
sarl
xorps
mov
repz
mov
fstps
add
jp
adc
imul
flds
push
push
dec
ret
lea
into
loope
aaa
push
sub
lret
push
mov
pop
test
xchg
mov
push
push
outsb
cmp
pop
xor
xor
movsb
xchg
mov
xorb
jmp
jecxz
dec
lea
inc
cltd
adc
enter
loopne
movsl
mov
sbb
pop
or
nop
sti
aad
pop
xor
add
pop
ljmp
sub
sbbl
push
jnp
sub
sbb
out
lea
jl
xchg
bound
fs
repnz
mov
shl
adc
fwait
xor
push
or
rcrb
loopne
sub
mov
cltd
cmp
sbb
push
scas
mov
enter
xchg
and
repz
push
cltd
or
pop
mov
sbb
mov
sarl
adc
push
push
shll
mov
fistl
xchg
sbb
add
lods
or
add
dec
or
rol
inc
aaa
or
gs
ljmp
orl
inc
ficomps
rol
or
stos
jnp
inc
aas
fs
andl
in
xchg
movb
bound
pop
xor
orb
popf
push
adc
data16
jl
les
lret
pop
lock
inc
in
add
pop
or
std
lahf
rcrb
int3
pop
and
lret
xchg
cmp
out
sbb
and
fisttpll
ja
mov
shlb
xor
push
sar
pop
mov
aam
mov
fdecstp
and
or
inc
sahf
adc
es
push
or
cld
arpl
lahf
inc
es
mov
stos
pop
jmp
xchg
subl
je
aas
pop
jnp
jb
imul
iret
fnsave
pop
call
gs
int
push
xchg
lods
cmc
or
xchg
lds
adc
rcrb
inc
ljmp
les
ja
jecxz
xchg
jmp
push
lock
fwait
push
ljmp
cmp
xchg
or
cli
pusha
jno
xchg
adc
ss
jle
and
rol
pop
mov
cmp
pusha
adc
mov
mov
jl
xor
jge
cld
movb
xchg
pop
xor
xlat
mov
push
jl
ret
mov
dec
dec
mov
adc
jmp
or
push
pop
jg
popf
aad
or
movsb
push
popf
jecxz
call
cld
ret
push
sub
pop
jecxz
lock
out
bound
dec
lds
and
arpl
lods
add
notb
adc
cltd
sub
in
add
cwtl
lea
add
sub
sbb
jmp
cmpsb
mov
fcomps
xor
lods
add
mov
pop
pop
nop
test
int3
je
insl
cmp
pop
mov
add
movsl
sbb
or
push
push
mov
pop
xchg
mov
scas
imul
sub
lahf
mov
xlat
mov
sub
lret
js
imul
in
dec
addl
aam
adc
insb
fildl
mov
ljmp
bound
pop
mov
jecxz
pop
js
cmp
mov
imul
sub
lds
shll
test
in
and
and
adc
sbb
lods
div
ljmp
jl
jmp
xchg
and
lahf
ret
mov
bound
adc
fnsave
sub
fisubl
lock
and
and
out
das
gs
xor
lcall
xor
ljmp
das
push
xor
or
add
jg
jne
jmp
jge
fcomps
subl
adc
test
dec
cmp
or
mov
rcll
fistps
unpcklps
gs
sub
and
cwtl
sub
nop
imul
and
jbe
add
pop
jbe
or
mov
stos
outsb
lcall
ss
sarb
nop
in
add
cmc
add
and
fiadds
dec
xchg
rol
divb
ljmp
cmp
jmp
dec
adc
sahf
xor
mov
jmp
add
cmc
imul
pusha
sub
pop
mov
mov
loop
gs
cmp
xlat
hlt
pop
repnz
xchg
add
aas
xchg
in
push
test
scas
cmpl
dec
add
sahf
xchg
mov
mov
scas
mov
dec
jbe
cld
inc
or
add
repz
sahf
rol
pop
mov
scas
loop
mov
movsb
adc
stos
mov
lcall
adc
sahf
jbe
jp,pn
mov
push
es
inc
imul
mov
les
inc
insl
xchg
lea
pop
ja
mov
arpl
insb
jbe
sbb
pushf
mov
les
stc
mov
lahf
mov
fiaddl
mov
mov
stos
mov
shrb
xchg
in
inc
dec
xchg
cmp
xchg
pop
stos
mov
or
mov
popa
or
jle
inc
dec
je
pop
or
dec
mov
sub
jmp
and
pop
sub
adc
cltd
repnz
not
in
xchg
loopne
in
dec
jns
idivl
or
sub
sbb
mov
ret
aas
nop
mov
lock
or
in
gs
fistl
and
jmp
or
das
push
cmpsl
and
mov
repz
in
jne
fwait
ljmp
jns
xchg
push
push
arpl
push
xor
dec
add
in
adc
push
mov
ljmp
sahf
js
scas
push
add
insb
inc
clc
insb
xor
xchg
pop
push
cmp
inc
xor
ja
stos
pop
gs
mov
dec
dec
mov
orl
xchg
nop
test
shl
dec
sub
add
js
ja
fucomi
jnp
sub
and
or
pop
add
jmp
insl
cmpsl
std
xor
add
dec
bound
outsb
inc
sbb
outsb
adc
imul
lds
inc
mov
jo
imul
sub
jb
call
cmpsb
mov
push
pop
aad
inc
add
xchg
pop
ss
jp
lock
arpl
add
push
std
sti
fs
popa
es
mov
inc
cltd
cs
add
xor
push
inc
adc
add
xor
cli
fisubrl
clc
insb
mov
mov
mov
fisubrs
mov
inc
cmp
mov
int3
add
xor
shrb
popa
in
cmpsl
leave
dec
xchg
cmp
or
int
cmc
aaa
sub
add
shll
and
push
dec
cld
mov
pop
and
xor
scas
shlb
test
popl
movsl
push
dec
lcall
or
push
sbb
mov
test
mov
incl
outsl
inc
jb
push
add
mov
leave
mov
rcll
push
scas
xchg
xor
sbb
outsl
inc
arpl
inc
rcll
faddl
cmc
arpl
imul
cmp
into
push
xor
leave
sub
cmp
inc
fsubrs
fwait
stc
lcall
test
sbb
icebp
dec
sub
xor
push
dec
scas
jns
movsl
jne
xor
xchg
repnz
imul
idivl
std
sub
jecxz
inc
imul
push
movsl
and
fisubs
pop
inc
imul
mov
fnstsw
push
dec
xchg
pusha
adc
out
cmc
cltd
fdivl
stos
cltd
mov
or
clc
xor
data16
in
in
inc
int3
push
inc
mov
mov
movsb
mov
cli
xor
push
leave
dec
test
pop
lahf
and
push
sub
data16
xor
cmp
mov
clc
xor
push
adc
mov
mov
stos
sub
cmp
sub
rcrl
repz
or
cmp
rclb
or
mov
sti
or
or
subl
out
push
xor
subl
in
xlat
loope
jle
lods
repz
lock
in
xchg
lret
mov
outsl
xchg
adcl
and
jg
sbb
popa
mov
outsl
mov
sbb
adc
or
inc
pop
xchg
daa
jmp
icebp
mov
inc
push
shll
lret
pusha
mov
lahf
fsubrl
pushf
ret
push
cmp
xchg
jns
jp
pop
outsb
fs
iret
shlb
fdivrs
or
popa
adc
mulb
jno
mov
jecxz
mov
push
sub
aas
sbb
addr16
sub
scas
push
or
std
cmpsl
jns
push
dec
hlt
loop
insb
ret
mov
lea
dec
push
push
cmpsb
scas
xchg
lock
lret
mov
imul
mov
jno
and
adc
mov
mov
adc
sbb
push
ja
shlb
cmc
xchg
inc
push
push
out
pop
imul
into
mov
mov
dec
insb
cmp
xchg
jno
lcall
adc
clc
xlat
xorl
mov
inc
cmpl
mov
fs
fcoml
lcall
subl
dec
push
xchg
add
lahf
sbb
sbb
adc
test
xor
paddusb
push
adc
stos
cmc
add
push
jb
or
inc
sbb
icebp
add
jns
sti
mov
sti
sti
aam
cli
imul
or
outsl
cmpb
ret
xchg
mov
add
xor
pusha
mov
or
adc
out
jb
add
test
mov
xor
hlt
pushf
in
lcall
mov
iret
and
mov
lret
arpl
rcll
sub
cmp
pop
fdivrs
ret
enter
shlb
mov
es
dec
test
mov
jle
add
mov
cmc
test
jecxz
add
cmp
rep
clc
pop
sub
and
mov
in
es
mov
and
shl
sub
cmp
add
dec
fisttps
add
pop
push
inc
xchg
xchg
sub
loopne
test
mov
xchg
fstp
mov
outsl
or
and
push
xlat
push
divb
loop
adc
mov
cmp
pop
outsb
or
cs
nop
ja
ret
ja
lods
cmp
dec
pop
xchg
pop
mov
outsb
mov
xor
mov
mov
out
mov
es
jne
sti
mov
sub
jle
inc
xor
xchg
mov
cltd
adc
sti
push
jne
pop
push
xchg
dec
mov
arpl
lret
movl
imul
mov
jmp
das
fistl
push
jb
inc
lahf
mov
mov
xor
adc
frstor
dec
bound
push
push
out
sub
sbb
cmp
lcall
dec
repz
mov
cmp
xchg
xchg
dec
fisubl
cmp
prefetch
or
cmpsl
icebp
jmp
je
mov
insl
push
fdivrp
xor
imul
xchg
fimull
and
sub
cwtl
movsl
es
cmp
jno
mov
sbb
add
mov
in
push
lea
lret
xchg
sarl
pop
adc
jmp
repz
mov
cmc
xorl
cmpsl
dec
sti
mov
cmp
stos
rol
mov
sub
jbe
xor
xchg
imul
xchg
stc
sbb
mov
jp
cmpsl
in
xchg
pop
lret
repnz
movsb
mov
xchg
sti
pop
mov
rorb
jno
push
pop
lret
push
inc
pop
lret
aas
cmc
pushf
nop
or
pop
dec
mov
repz
cwtl
xor
inc
mov
fisttpl
push
pop
nop
adc
mov
mov
cmp
sti
ljmp
mov
fcompl
sahf
enter
dec
int3
adc
cmp
insl
hlt
add
ja
pop
xor
pop
insb
push
mov
mov
cltd
adc
fists
push
sub
xor
ret
dec
jmp
rorl
push
xchg
push
and
icebp
xchg
inc
jge
push
repnz
adc
insb
sbb
or
cmc
jbe
roll
mov
xchg
inc
jbe
jecxz
push
fwait
pop
jo
fwait
incb
mov
call
mov
xadd
cmp
xchg
les
mov
mov
inc
sub
rcll
lcall
je
repnz
ja
pop
mov
sub
stos
cmp
out
or
mov
lock
mov
push
daa
xor
pop
mov
mov
pop
sbb
js
mov
xchg
sub
xchg
int3
fisubrl
cmp
mov
aas
adc
mov
pop
lcall
lock
or
inc
fistpll
les
insb
or
imul
xor
mov
cmp
cmp
dec
fnstenv
das
test
inc
inc
outsb
incl
jne
sbbl
push
mov
cmp
mov
js
mov
cmp
loopne
sub
inc
fnstsw
jo
daa
xor
ljmp
inc
int
imul
inc
imul
repnz
lret
jle
movsb
stos
icebp
xchg
or
mov
mov
mov
adc
std
data16
push
sti
xor
andl
jp
ret
xlat
xchg
cmp
dec
imul
jne
mov
in
sbb
call
dec
loope
fwait
in
stos
loope
das
add
test
push
jns
hlt
hlt
push
mov
adc
or
ljmp
jge
in
and
dec
sbb
push
mov
mov
insb
test
scas
dec
mov
xchg
jecxz
mov
aam
scas
mov
fmul
add
ljmp
inc
cmpsl
sub
mov
adc
mov
je
or
push
popf
cmpl
scas
pop
js
nop
adc
in
out
mov
nop
inc
gs
pop
inc
in
test
or
rcrb
lcall
lock
push
jl
iret
xchg
jo
pop
xlat
imul
paddw
pop
dec
push
inc
idivb
mov
or
sbb
repz
insl
push
xor
cmp
sub
sbb
sar
cmp
test
jnp
fidivl
mov
xchg
in
cmp
aad
outsl
shrb
push
outsl
adc
sub
pop
idivb
nop
xchg
mov
loop
push
inc
and
jmp
mov
xchg
ss
loopne
sub
mov
push
daa
cmpsl
cltd
cmpsb
inc
stos
into
mov
add
lcall
push
jecxz
pushf
xchg
aad
outsb
outsb
push
mov
and
mov
loopne
jae
sbbl
mov
push
sbb
mov
fs
fbld
mov
fcmovnbe
loop
aas
out
xchg
jbe
pop
fstl
pusha
clc
jmp
dec
fld
xchg
fidivl
push
fwait
in
fcomps
cld
scas
arpl
pop
sub
mov
fstps
cltd
adc
sbb
sub
cmc
outsl
dec
fwait
lret
mov
xchg
pop
jle
and
lea
aam
arpl
xchg
push
imul
fstpt
in
pop
in
pop
cwtl
mov
ds
loope
lods
add
aas
ds
sti
and
or
inc
add
movsb
inc
insb
sub
jne
xor
decl
sti
stos
mov
mov
or
mov
xchg
mov
sub
mov
das
lock
cld
or
repz
jp
outsb
or
cmc
xor
mov
add
mov
adc
mov
dec
ret
ja
jmp
mov
cltd
adc
fisubrl
cmpsl
fisubs
mov
inc
push
fisubrs
enter
fnsave
xchg
mov
push
sub
je
pop
enter
mov
push
push
sbb
mov
mov
dec
push
cmpsl
jbe
jmp
mov
mov
mov
xchg
outsl
push
mov
mov
inc
mov
ja
in
pusha
stc
pop
pop
addr16
insl
xchg
jnp
leave
adc
push
pop
stc
mov
js
movsb
and
add
out
jg
movsl
push
push
fwait
in
pop
mov
dec
push
sub
push
pop
inc
sar
cld
adc
pop
repz
adc
sub
mov
and
jne
jg
xchg
aad
lea
scas
movl
sbb
push
and
jmp
and
daa
loopne
pop
je
loope
sbb
test
cmp
push
out
test
pop
pop
pop
add
sbbl
enter
sbb
cmp
add
dec
mov
es
xchg
xlat
jne
jmp
sub
jo
subl
push
in
jl
ds
in
scas
jecxz
pop
cmp
in
pop
push
rcll
insb
inc
es
aad
fiaddl
lods
rorl
lret
mov
and
nop
imul
repz
popf
rorb
push
sub
jns
stos
pop
int3
pop
inc
out
lock
jbe
xchg
inc
aaa
test
fistl
scas
push
jmp
std
sbb
and
popl
xor
add
cmp
lret
insl
ss
cmp
ljmp
shr
mov
push
decl
js
gs
inc
pop
sbb
or
pop
pop
stos
js
in
mov
push
push
test
stos
scas
sbb
int
xchg
dec
mov
dec
jl
mov
or
push
daa
in
sahf
cld
push
mov
fidivrs
lods
cmp
lods
xchg
cli
fwait
aaa
sbb
arpl
es
inc
jl
in
cs
dec
sti
jecxz
repnz
movsl
notb
mov
lds
jl
out
fcompl
cmpl
ja
xchg
cmp
enter
cmpsb
or
movzwl
mov
add
das
sbb
jecxz
adc
fmulp
add
jns
nop
cmp
incb
add
dec
rolb
xlat
pop
mov
addr16
mov
jle
sbb
loopne
mov
push
movsl
xbegin
add
inc
push
scas
dec
pop
aam
daa
push
mov
das
cli
inc
outsl
rorb
insl
pop
xchg
push
inc
stos
lods
ret
addl
test
mov
mov
mov
popf
mov
or
xchg
addl
jns
adc
fcomps
jmp
mov
ss
enter
jp
cmp
stos
and
push
xlat
adc
push
leave
or
add
inc
lock
push
cmp
mov
pop
vshufpd
sub
mov
out
push
mov
cmp
xchg
inc
and
sub
sti
sbb
mov
sub
lcall
fnstcw
xor
mov
push
dec
andl
repz
push
dec
pop
lahf
lret
sub
mov
or
movsl
cmp
and
pop
outsb
incb
in
stos
cmc
mov
imul
xchg
test
gs
xchg
ljmp
ret
dec
cmp
xor
cmp
cld
dec
popaw
out
dec
out
lret
std
xor
xchg
jge
data16
in
push
fstpt
mov
mull
inc
inc
sbb
rolb
in
mov
cmpb
mov
stc
roll
add
mov
jbe
xorl
movsb
iret
js
clc
mov
fwait
mov
mov
mov
rcr
fcmovnb
mov
pop
invd
pop
jmp
iret
cld
cltd
push
aad
lods
jp
push
lahf
clc
mov
flds
in
in
add
test
or
pop
xchg
js
test
add
in
test
lock
lods
and
or
out
mov
add
inc
xchg
in
inc
xchg
lret
adc
pop
or
orb
jle
sub
jae
pop
inc
dec
jne
jge
test
ret
cmp
test
outsb
fsubl
jne
cmp
cli
jne
mov
dec
sti
div
std
sbb
aad
adc
out
cwtl
push
repnz
sbbl
mov
and
clc
in
inc
and
cmp
lods
xorl
cmp
hlt
pop
jmp
aas
imul
fdivr
and
negb
mov
inc
adc
loope
or
jg
mov
dec
mov
dec
std
mov
or
and
sub
push
shlb
fldcw
outsb
test
scas
pop
andl
mov
mov
pop
sub
das
fadds
sub
jl
shlb
adc
mov
aad
cs
add
addr16
xor
sbb
or
mov
mov
xor
xchg
mov
fisubrs
ljmp
lods
sub
mov
std
out
adc
push
loope
mov
es
hlt
xor
add
incb
mov
nop
insl
push
sub
mov
add
andb
xchg
shll
scas
inc
dec
es
mov
pop
sbb
imul
push
sub
xchg
mov
pop
cmpsl
movsb
pop
and
loop
or
or
ja
and
inc
push
sahf
out
and
push
leave
push
push
cmpsb
iret
adc
clc
pop
orl
shll
dec
push
sub
into
jo
jmp
jecxz
mov
push
and
sbb
out
pop
lods
or
mov
lret
xor
push
sbb
repz
mov
nop
or
add
mov
push
jecxz
sub
or
inc
je
adc
and
fwait
or
jle
jo
iret
aaa
or
mov
sub
lods
ja
imul
jle
or
adc
test
mov
sbb
insl
sbb
cmovns
in
cmpb
cwtl
data16
lods
adc
cmp
outsb
cli
fdivp
xor
repnz
ret
jne
dec
ljmp
dec
adc
dec
pop
xchg
cmp
sahf
outsb
push
add
dec
out
adc
gs
push
jnp
andl
cwtl
aaa
pusha
push
mov
xor
jno
sbb
out
inc
sbb
pop
inc
fs
fnstcw
int3
and
sti
adc
sbb
xor
inc
or
jp
lret
rcl
mov
ret
inc
fnsave
add
mov
mov
pop
jno
push
cmpb
jmp
add
jno
lods
sbb
pop
xor
adc
xchg
mov
les
out
scas
cs
scas
xchg
inc
jns
mov
sub
push
inc
or
lods
enter
sbb
dec
push
mov
stc
mov
into
mov
mov
cld
dec
xchg
test
sbb
dec
es
sti
mov
push
out
sarb
pop
and
xchg
cs
add
xchg
in
es
test
daa
mov
mov
out
cmp
sub
mov
xchg
stos
inc
mov
adc
popa
cwtl
inc
leave
mov
movsb
repnz
lret
fs
std
dec
ljmp
mov
in
jp
scas
mov
adc
push
adc
push
out
cmp
mov
mov
and
sbb
xchg
cmp
jae
mov
bound
mov
pop
loop
adc
push
sub
inc
ret
sub
and
aas
int3
pop
or
dec
mov
push
jae
repz
sarb
mov
dec
in
xchg
rcll
mov
fstps
push
push
push
lock
aaa
sbb
clc
roll
bound
mov
pop
into
mov
push
jnp
inc
js
push
cmp
aad
lea
sti
icebp
aam
inc
or
jae
rorb
mov
inc
dec
push
push
aad
fs
into
pop
mov
cs
sub
pop
jae
inc
icebp
shrb
testb
nop
sub
inc
push
daa
and
jle
iret
cli
loopne
and
bound
jmp
pusha
xlat
jp
xchg
bound
cmpsl
daa
rclb
loopne
es
lret
enter
push
jnp
jmp
hlt
mov
aas
adc
and
xchg
pop
ljmp
pusha
and
fistpll
push
cmp
shrl
aas
cltd
lret
pop
popa
subl
or
xchg
in
and
pop
sub
loope
mov
xchg
xchg
add
push
hlt
or
outsb
daa
pop
add
pop
xchg
push
mov
in
dec
pop
xchg
aam
cmp
fstl
in
xor
inc
pushf
lods
not
mov
call
incb
adc
out
xchg
insb
dec
mov
cwtl
sahf
out
jbe
lahf
or
cmpsl
lcall
push
jne
inc
adc
inc
divl
pop
int3
bound
pop
ljmp
int3
cmpsb
mov
inc
pop
cs
mov
int3
push
data16
add
fucom
insl
xchg
pop
cmpsb
aaa
fsubrl
pusha
inc
or
xor
lods
pushf
inc
popf
adcb
dec
and
jp
in
push
push
iret
pop
jmp
int
lock
out
fs
sub
inc
mov
push
sarl
xor
daa
popa
fsubs
add
fwait
hlt
aaa
mov
icebp
pop
mov
inc
add
into
in
sbb
or
dec
jmp
ret
jbe
outsl
adc
cmp
pop
rcl
inc
std
in
test
notb
ljmp
lahf
jl
iret
mov
add
int3
mov
addr16
out
call
xor
gs
push
clc
mov
xor
es
mov
int3
sbb
mov
ret
jno
mov
sbb
jnp
pop
pop
test
adc
insb
scas
cmpsb
movsb
loop
stc
repz
ljmp
and
int
lds
push
push
int3
cmp
add
icebp
mov
outsb
or
sub
int3
push
ret
xchg
inc
aas
lret
notl
mov
lahf
cmpsl
in
aas
inc
out
xchg
loopne
mov
lods
pop
ret
lea
test
push
jb
movsl
arpl
push
push
xor
loope
mov
jp
mov
mov
pop
loop
decb
js
xchg
outsb
xor
cmc
push
add
es
sbb
iret
addr16
fmulp
popf
xlat
and
lea
je
sub
jbe
dec
int3
or
iret
sub
sub
cmp
ret
cmp
lcall
jo
mov
lret
outsl
outsb
or
cmc
inc
imul
xor
ficoms
push
xchg
out
jb
scas
rorb
ret
addr16
lahf
js
cli
int
out
xchg
dec
stos
divl
and
cmp
xor
fists
mov
test
mov
popa
sahf
ret
fwait
inc
cmp
lds
pop
xor
sub
jne
xchg
cmc
mov
repz
pop
push
movsb
sub
inc
mov
dec
jne
xor
dec
pop
mov
or
test
cmp
pop
sub
daa
out
insl
test
subb
addr16
icebp
cmp
jo
aam
mov
mov
imul
cld
popa
and
push
jge
outsl
scas
lea
fsts
dec
leave
pop
roll
mov
pop
dec
loopne
inc
movsb
lea
jae
aad
loop
cmc
popf
popf
or
pop
dec
imul
xchg
rorb
enter
jne
jnp
pop
fcoms
sub
aaa
std
add
enter
fstl
mov
add
and
pop
cwtl
mov
push
lock
mov
cmp
repnz
dec
addr16
cmp
imul
mov
add
add
cmp
xchg
outsb
dec
pop
jge
xchg
addr16
inc
add
je
xor
loope
in
gs
loope
sub
data16
dec
pop
outsl
lcall
dec
es
xchg
lods
nop
clc
jmp
cmpsl
or
mov
mov
fs
test
shll
xchg
cmpsl
aam
mov
mov
add
repz
nop
sti
adc
aaa
pop
pop
fidivs
adc
scas
cmp
lcall
popa
add
fsub
and
scas
jne
adc
inc
ljmp
xor
daa
adcl
dec
call
push
mov
or
add
push
mulb
cmpsb
test
xchg
jno
mov
sub
std
test
cmp
fildll
mov
fwait
xlat
lcall
cmp
adc
enter
push
mov
xchg
cmc
addr16
jecxz
out
cmc
cltd
sbb
mov
lret
std
xchg
gs
adc
jg
xchg
jae
dec
fisubrl
mov
in
and
int3
fnsave
xor
pop
xchg
pop
fdivrs
fwait
push
mov
arpl
in
mov
stc
and
es
push
xchg
sti
popf
cwtl
repnz
cmp
daa
out
pop
je
cmp
ss
mov
sbb
lahf
fistpll
mov
mov
ret
scas
mov
out
pop
call
dec
xor
popa
scas
es
cmp
loop
mov
push
stc
dec
int3
lods
jge
add
fwait
cld
inc
lock
or
lret
jo
flds
das
test
ret
sbb
xor
pop
fmulp
mov
in
pop
push
mov
leave
cmpsb
cmp
pusha
and
xor
xchg
je
xlat
push
popf
xchg
sbb
scas
loope
movb
std
popa
data16
gs
aas
leave
sub
push
wrmsr
stc
dec
pop
ja
mov
cvtps2pi
add
pop
add
ljmp
cmp
jecxz
mov
cmp
xor
fwait
inc
mov
push
sbb
out
and
add
jg
add
jns
jp
call
fcomp
or
mov
stc
imul
test
adc
pop
jo
out
sub
ljmp
outsb
out
hlt
sbb
shl
jmp
push
push
pop
mov
lret
push
fbld
ss
lret
or
loope
int
test
scas
insb
mov
jecxz
adc
sub
adcl
fidivrl
pop
outsl
adc
not
jo
push
loopne
mov
shl
cmp
roll
sub
cmpsb
mov
fbld
imul
lods
mul
inc
std
sub
xchg
dec
loope
aad
ret
in
or
inc
push
dec
aaa
mov
jmp
adcb
outsb
sub
push
sub
dec
mov
push
xchg
inc
ffree
sub
sbbb
jmp
dec
sub
clc
loope
sbb
or
daa
add
testl
in
popf
test
movsb
iret
int3
fwait
cmc
sub
and
into
pop
xchg
stos
out
bound
mov
imul
push
stos
cmp
pop
dec
add
push
test
adc
aas
or
ljmp
or
mov
sti
aad
outsb
movsb
jo
or
mov
and
jae
pusha
sbb
pop
adc
push
push
jle
pop
and
inc
and
cwtl
or
or
inc
adc
popf
in
jns
in
lods
adc
mov
cmp
dec
or
mov
ss
adc
js
mov
add
cmp
psubq
or
ss
mov
inc
or
cs
and
push
add
gs
pop
or
enter
ds
mov
mov
jp
and
rep
and
push
int3
mov
xchg
inc
xor
mov
cmp
adc
out
test
leave
lods
fs
pop
xlat
stc
cmp
mov
inc
mov
out
fnstsw
pusha
mov
xlat
mov
das
inc
int3
je
outsb
sbb
inc
cmc
mov
or
xor
gs
push
mov
adc
jns
scas
mov
mov
stos
jmp
dec
mov
shll
out
insl
outsb
out
adc
sbb
in
outsb
fidivrs
sbb
pop
ds
adc
ss
xor
int3
loop
cltd
loop
mov
mov
cmc
ljmp
das
push
mov
popa
or
inc
jno
mov
inc
into
lret
out
fistpl
and
psllq
dec
push
test
test
gs
icebp
mov
cmp
popa
jmp
xor
ljmpw
int3
call
mov
jp
flds
jae
mov
aam
loopne
notl
sbb
dec
dec
jecxz
icebp
pop
arpl
jnp
test
pop
repnz
test
and
test
stos
int3
int
lea
arpl
inc
arpl
sub
fsts
jg
adc
mov
xchg
aad
jle
mov
movsl
or
shlb
fs
call
dec
pop
inc
cmp
xor
sbbb
mov
mov
add
xchg
cmc
cmpsb
mov
arpl
mov
sbb
jg
daa
or
aam
loop
xor
add
fdivrl
mov
rcrb
cmpsb
cmp
loope
jb
or
or
popf
or
and
dec
mov
or
cmp
mov
ja
into
jle
mov
cs
pop
outsl
and
mov
xchg
push
cwtl
leave
xor
sub
idivb
and
fcoms
daa
jl
jp
lods
sub
push
xor
mov
int3
pusha
inc
nop
movsb
in
cli
stos
repz
push
mov
sub
std
imul
daa
adc
lcall
cmc
jmp
outsl
daa
and
adc
fsts
stc
ret
mov
xchg
push
mov
jne
xchg
and
inc
pop
cmp
inc
stos
push
jl
mov
loop
fs
pop
adc
xchg
in
adc
decb
and
xchg
cmp
add
incb
iret
mov
mov
addr16
adc
int
enter
mov
mov
int3
repnz
in
or
popa
insl
test
shll
in
add
ljmp
rcr
mov
clc
push
mov
and
iret
xor
out
lcall
xchg
add
test
rep
fiaddl
cmp
ficoml
out
mov
adc
int3
add
or
mov
jl
in
cmp
loop
dec
addr16
push
dec
dec
neg
scas
cmp
clc
and
movsb
mov
push
push
jge
out
fisubl
outsl
pop
dec
mov
fnsetpm(287
mov
mov
mov
adc
insb
fdivl
loopne
scas
sbb
test
or
leave
dec
mov
out
cltd
pop
mov
out
mov
imul
sbb
repz
adc
imul
daa
jb
or
adc
test
add
mov
cmc
test
lahf
mov
insl
popf
movsb
xor
dec
adc
sbb
mov
ret
out
jb
iret
pop
jl
jae
dec
cmp
xor
or
cwtl
jae
out
ret
add
or
stc
mov
pop
xor
inc
ds
cwtl
pop
pop
jp
fcoml
mov
in
dec
sub
aad
push
iret
sti
hlt
arpl
shlb
add
push
insb
daa
pop
fisubrl
fst
outsb
inc
jl
lods
mov
pop
pushf
lcall
jg
jns
push
frstor
arpl
sub
jbe
aam
pop
cmpl
stos
fdivrs
mov
mov
sub
imulb
cwtl
mov
in
xor
add
cmp
jmp
outsb
fstpt
push
fcmovbe
repz
inc
pop
sar
mov
loop
shrl
push
lret
fisubl
js
xchg
jmp
mov
inc
hlt
cld
fcmovu
and
outsl
jl
push
sbb
mul
scas
mov
leave
jp
mov
or
xchg
pushf
cld
pusha
rcll
push
push
push
cmp
out
jo
shll
pop
mov
lods
mov
inc
data16
sub
ret
movzwl
mov
adc
inc
mov
in
cltd
cmp
aas
jb
pusha
sti
cs
mov
add
push
enter
ljmp
mov
std
add
sub
dec
stos
mov
xchg
and
jno
lock
add
inc
inc
cltd
and
push
cltd
mov
clc
in
shrl
cmp
push
iret
mov
in
sub
cwtl
inc
insb
xchg
push
mov
cld
fcomp
inc
out
test
insb
outsb
dec
bound
frstor
add
fsub
cmpsl
or
and
jg
lods
stc
mov
ljmp
in
pop
mov
inc
aam
mov
inc
lahf
cmpsb
mov
jo
pop
test
iret
cmp
imul
cltd
inc
adc
mov
arpl
testb
int3
rcll
cmpsl
xchg
lock
imul
int3
cmp
je
mov
aad
push
idivl
mov
in
lods
pusha
dec
mov
or
inc
jne
jbe
mov
or
arpl
repz
or
aaa
cltd
jmp
mov
fistpll
dec
clc
jecxz
popa
mov
imul
cli
fistps
pop
add
and
fisttpl
push
add
ljmp
inc
lret
js
and
pop
cmp
mov
scas
loopne
mov
scas
dec
and
inc
out
mov
test
ret
fsubl
fbstp
es
dec
xlat
xor
fcomps
fcompl
in
cmpl
test
and
mov
repz
inc
push
js
in
mov
nop
push
nop
jbe
fmuls
mov
or
lret
mov
pop
mov
sti
xchg
jns
fwait
stos
cmp
jno
inc
arpl
inc
iret
push
sub
not
sbb
clc
ds
push
aaa
test
in
hlt
stos
push
gs
mov
call
mov
dec
daa
cli
xor
xor
cmpsl
ljmp
sub
pushf
xor
test
adc
out
sbb
push
mov
xchg
jae
jo
pusha
mov
mov
xchg
jo
movsb
mov
cmc
and
adc
xchg
sub
push
xor
add
scas
adcb
das
lods
enter
int3
ljmp
pop
pop
push
push
mov
or
jns
push
lods
pop
int3
or
and
adc
pop
pusha
push
cmpsb
push
cmpsl
fstpl
pop
add
aam
and
mov
xor
adc
sbb
aam
scas
mov
cmpsl
push
and
or
stos
stc
cmp
mov
loope
jne
mov
jl
pop
pusha
mov
jb
out
jae
and
add
outsl
adcl
push
popa
xor
pop
cmp
in
pop
ret
inc
mov
sub
insl
or
or
sbb
xor
cmpsb
sbb
imul
xor
cmp
and
mov
or
insl
aas
pop
inc
nop
addb
enter
popf
stos
xchg
dec
fs
pop
xor
scas
les
clc
and
stos
fwait
inc
push
jbe
aas
sub
sti
pop
cwtl
add
jle
dec
sahf
lods
enter
xchg
shll
test
or
ret
mov
mov
push
pop
jo
insl
cmpsl
orl
insb
push
push
jl
inc
in
or
xlat
push
filds
cltd
xor
shlb
cmp
stc
or
imul
out
mov
xor
sbb
xor
xorl
inc
cwtl
sbb
das
pop
mov
fwait
cmp
xchg
outsb
pushf
popf
jbe
xor
cs
imul
cmc
or
xchg
decl
cmp
das
out
sub
mov
arpl
clc
push
add
addr16
sub
jle
ljmp
sub
xchg
jb
push
pop
cmpl
pop
push
add
cli
pop
jl
loopne
loope
push
adc
out
loope
jmp
jl
aad
out
xor
xor
and
out
outsl
fidivrs
popa
clc
push
cmp
dec
popa
adc
repz
pop
ss
test
xchg
lcall
sub
int
pop
fmull
dec
daa
movl
loopne
sahf
add
lods
add
mov
stos
cmp
repz
jle
xchg
or
mov
ds
add
push
push
pop
test
jnp
mov
mov
adc
cwtl
or
mov
daa
aad
jg,pt
add
mov
jns
lods
imul
repz
xor
mov
data16
sub
push
jno
fs
xor
mov
sub
shlb
loope
nop
sarl
or
pop
sub
mov
mov
mov
daa
iret
jl
push
mov
lods
lock
cmpsb
sub
and
ss
add
pop
stos
sub
mov
adc
jecxz
stos
inc
notb
jae
std
push
push
and
pusha
xchg
roll
cmp
imul
je
push
enter
fbstp
jb
mov
aam
xchg
std
xchg
mov
sub
cmp
out
xchg
or
leave
int
insl
ljmp
cmp
adc
and
fcom
cld
jno
stos
jmp
adc
sbb
movsb
mov
data16
add
dec
xchg
xor
dec
cwtl
push
cmc
fwait
or
mov
jl
pop
add
push
adc
js
lea
pop
sar
mov
roll
mov
adc
lret
jns
xor
push
icebp
jns
add
lds
stos
sbb
repnz
mov
inc
cltd
push
loope,pn
shll
sub
std
stos
dec
push
or
sub
shll
inc
ljmp
aas
adc
jns
pop
pusha
push
pusha
outsb
out
xor
cmp
push
frstor
push
adc
pusha
lcall
xor
xor
dec
cld
sub
hlt
vcvtdq2ps
sbb
repnz
test
jge
inc
and
adc
mov
fs
shrb
mov
adc
cmpl
xchg
mov
xchg
xor
lahf
daa
mov
dec
pop
and
js
mov
fisubrs
adc
adc
daa
adc
lock
fnstcw
cmp
xchg
push
mov
add
mov
lods
dec
jp
xor
scas
in
insl
mov
sbb
xchg
push
aaa
cmp
fcompl
jp
mov
insb
push
das
jg
ds
mov
bound
sti
lcall
subl
imul
pop
les
cmp
push
std
ljmp
sub
ficoml
shlb
add
outsl
mov
imul
add
mull
lcall
jno
cmp
int3
flds
cmp
in
dec
dec
inc
stos
xchg
jo
test
push
cmp
loopne
addl
mov
shll
sbb
aam
insb
cltd
aaa
xchg
lods
xchg
add
test
or
nop
jge
lcall
mov
addb
mov
pop
ds
sbb
ss
dec
jp
cmp
out
adc
arpl
cmp
dec
outsl
xchg
jecxz
in
mov
leave
jns
push
subl
cmp
ficomps
pop
cmp
ret
mov
test
popf
mov
in
sub
xlat
clc
push
lahf
mov
loop
and
inc
orl
adc
pop
dec
shr
call
enter
push
jns
int
sahf
or
test
lahf
pushf
lods
nop
ljmp
ss
subl
loopne
jmp
cmc
fmull
lcall
in
fadd
scas
mov
adc
inc
pop
push
xor
mov
data16
mov
stc
test
add
hlt
pusha
jb
dec
or
mov
subb
xor
push
sub
mov
add
pminub
in
add
js
sbb
mov
adc
sti
dec
pop
adc
mov
scas
jmp
insb
cwtl
stos
push
or
or
insl
rolb
and
idivl
outsl
xchg
pop
jnp
sarb
xchg
pop
mov
in
mov
incl
ja
mov
arpl
xor
lods
jmp
mov
fimuls
push
xchg
mov
and
imul
fsubrl
flds
addr16
aaa
dec
loopne
mov
and
jb
xor
mov
inc
jg
inc
mov
outsb
push
xor
jg
mov
adc
movsl
xor
mov
in
mov
int3
enter
push
ret
loop
out
pop
xlat
cmp
je
fcompl
in
aad
aas
int3
dec
insl
jo,pt
imul
fstps
cli
pop
dec
jbe
ficomps
sti
xchg
pop
pop
adc
jbe
rcrl
cmc
adc
vminss
ficoml
xor
aaa
lock
mov
xchg
pop
stc
inc
out
scas
pop
sub
lahf
jmp
sbb
jle
jecxz
mov
enter
dec
mov
rcll
iret
dec
in
cmovge
or
dec
inc
add
into
andl
mov
and
je
mov
xchg
int3
sub
jl
cwtl
cmpsb
cli
dec
gs
or
fs
cmpsl
sub
dec
sar
stc
push
mov
lret
push
mov
pop
rcrl
enter
pop
sbb
dec
mov
jp
jle
pop
imul
and
or
jecxz
call
jbe
out
jae
xchg
clc
push
jmp
mov
stc
mov
ret
dec
fwait
xchg
mov
dec
and
sbb
adc
fs
movsl
ret
mov
and
and
sub
movsl
cltd
sti
mov
mov
test
out
mov
ss
mov
andb
ss
sbb
or
aad
or
push
push
jae
mov
lods
and
pop
sbb
dec
hlt
push
das
dec
xchg
jmp
lahf
xor
sbb
jge
fwait
xchg
mov
fistl
or
shl
shlb
mov
mov
jle
push
data16
imul
std
fildll
mov
mov
aas
sbb
xor
pop
stos
cmp
clc
jmp
subb
xchg
cmp
xchg
roll
mov
jb
and
mov
jle
insb
mov
push
addb
dec
cwtl
cmp
pop
pop
je
add
jbe
in
add
dec
pusha
xor
hlt
xlat
pop
pop
xlat
mov
sub
push
pop
pop
sub
lods
adc
pop
pop
push
shrl
repnz
lock
filds
aad
lret
mov
insl
ret
pop
jne
sbb
ret
repz
mov
inc
out
adc
sbb
imul
cmp
std
fcmovnu
rorb
pop
lock
mov
in
push
pop
or
sbb
lret
stc
pop
decl
sub
ror
xchg
add
cmp
mov
jae
cmp
leave
dec
mov
jg
test
mov
outsl
jae
incb
sbb
data16
filds
std
and
mov
mov
jb
cmp
cmp
adc
adc
mov
mov
aaa
out
or
in
movsl
std
out
xor
fdivp
xchg
mov
cli
sbb
in
ds
lods
xor
mov
nop
in
sub
mov
cmpsb
inc
dec
jge
stc
aad
push
stos
loope
pop
pop
adc
cmp
mov
push
jo
sbb
xchg
jmp
xor
fsubrp
inc
in
push
add
repz
or
subl
mov
pop
mov
cmp
mov
fxch
mov
jmp
repz
jmp
pop
jmp
out
push
int3
cmp
mov
inc
neg
push
inc
dec
sub
outsb
mull
imul
jge
out
pop
ret
or
sub
sbb
pusha
test
or
idiv
lret
xlat
mov
xor
jne
dec
or
test
inc
mov
lea
sbb
mov
shrb
in
pop
push
lret
push
sub
mov
test
and
sbb
insl
daa
dec
dec
jp
push
adc
mov
mov
sbb
pop
or
cmpsl
leave
out
xor
inc
aad
pushf
cmp
push
add
outsl
pop
xorl
add
add
push
cli
pop
mov
scas
jp
push
push
lret
iret
daa
lret
sti
lds
sahf
test
dec
ja
adc
dec
lret
and
pop
loop
sbb
add
stos
jno
inc
mov
mov
mov
xor
stos
das
sub
inc
arpl
jns
sar
xchg
mov
out
bound
push
mov
add
and
mov
cmp
sbb
mov
fwait
adc
pop
cmp
mov
loop
adc
and
out
add
mov
pmaxub
fs
sub
cs
in
or
outsb
imulb
jecxz
call
cmp
adc
stc
adc
out
pop
insb
std
xchg
or
imul
jbe
rclb
dec
sub
jmp
arpl
data16
xchg
sub
lahf
ret
in
ss
daa
test
xchg
pushf
shrl
add
push
outsl
imul
sbb
pop
sbb
ss
pop
lret
and
jl
mov
inc
dec
lahf
and
mov
fsubrs
xchg
rcrl
outsl
pop
ret
and
sub
enter
inc
or
mov
add
pop
jbe
imul
add
jmp
fnstcw
je
es
std
adc
ret
push
dec
test
in
fists
and
hlt
cmp
sub
jb
adc
sahf
insb
out
sbb
jmp
push
lahf
push
movsl
sar
shll
mov
clc
cmp
aam
mov
int3
inc
sbb
pusha
adc
aas
out
popa
repnz
sub
or
test
push
dec
mov
lahf
pop
adc
popf
loope
fmul
pop
dec
push
adc
test
dec
push
xor
lahf
sbb
gs
cld
xorl
out
adc
dec
and
push
sbb
xchg
outsl
and
dec
push
dec
fisttps
iret
int3
push
push
in
fimuls
pop
jge
es
das
cmp
adc
into
sbb
mov
pop
sbb
inc
sbb
ret
cmovs
xchg
stc
dec
leave
pushf
dec
arpl
and
mov
loop
cmp
adc
mov
cmc
lea
mov
pop
out
out
push
pusha
dec
cli
imul
xor
movsl
cs
fnstsw
cmp
xlat
pop
jle
inc
mov
fstpl
push
std
shr
hlt
lcall
mov
std
sub
ret
cmpsb
bound
jmp
pop
lds
fsub
jns
dec
and
in
inc
push
lret
por
or
sub
shlb
pop
addr16
icebp
xchg
rorb
je
cmp
inc
push
fildl
daa
mov
dec
outsb
pop
out
aam
and
xchg
in
lods
push
push
push
xchg
iret
xlat
in
mov
mov
inc
aas
and
sahf
jle
mov
inc
adc
test
fists
and
into
xchg
inc
into
xor
ret
sbb
bound
loop
mov
dec
mov
mov
outsl
rcll
data16
outsb
mov
stos
insl
fs
adc
fsubrs
out
std
lea
arpl
cs
icebp
xchg
mov
inc
imul
and
dec
icebp
or
add
adc
jp
ror
xchg
cmp
jl
repnz
add
int3
inc
sub
imul
fsts
imull
xor
sbb
jns
repnz
andb
push
mov
data16
leave
and
loopne
scas
jae
push
popa
inc
fimuls
jl
adc
or
push
push
push
add
data16
mov
faddp
inc
fadd
mov
lea
push
mov
pushf
scas
inc
mov
mov
addr16
adc
mov
pop
out
lds
pop
mov
mov
and
and
jge
mov
pop
jae
pause
test
out
cltd
inc
into
xor
shrb
mov
aaa
xor
pop
mov
sbb
in
adc
int
imulb
push
inc
fisubl
xor
mov
or
xchg
js
cmp
add
and
mov
fmull
xor
call
adc
icebp
mov
in
push
pop
or
icebp
xor
ret
iret
xchg
push
mov
inc
into
or
test
dec
std
pop
divl
sub
mov
mov
dec
xchg
or
loopne
loop
orb
sub
arpl
pop
and
xor
jns
add
mov
lcall
and
int
and
loope
lock
push
xchg
inc
pop
fsubs
xchg
lret
pop
push
sahf
xchg
fdivrp
jnp
cmpb
sti
xchg
inc
adc
loope
push
es
js
outsb
cmp
mov
bound
jo
pop
mov
jp
push
ljmp
xor
inc
xchg
cli
stos
or
cmc
int
dec
lods
jmp
adc
les
gs
repz
lods
lock
add
jno
movsl
imul
sti
and
stos
cmp
xor
mov
inc
dec
div
ret
xorb
mov
out
pop
dec
xchg
sahf
dec
jbe
aad
iret
cmp
stos
std
push
cmp
loop
pop
repnz
insb
pop
std
leave
and
pop
dec
rcr
sahf
addr16
sbb
repnz
in
jle
in
push
and
xor
push
add
fwait
cmp
fcmovbe
xor
push
jp
jl
jb
flds
or
mov
cmpsl
fidivrs
mov
jne
fwait
push
sub
inc
inc
inc
inc
xchg
sub
jp
movsb
stos
or
cmpsb
xor
repz
cmpsb
and
in
cmp
repz
popf
lcall
stos
ss
xor
push
hlt
stos
pop
pusha
int3
lcall
in
xor
ljmp
mov
jns
stos
sub
push
xor
in
orb
xchg
inc
fsubl
cmp
fs
xchg
lahf
popa
lea
or
cmpsl
mov
aad
loopne
in
push
scas
imul
xchg
lahf
push
std
test
and
cmpsb
or
jae
xor
jbe
cmpb
add
test
jecxz
imull
pop
sub
mov
out
xlat
pop
repnz
mov
std
leave
stc
ret
iret
cmc
decl
pop
loop
ffree
movsl
push
test
or
or
jne
fnstsw
les
frstor
dec
int3
int3
hlt
ds
jbe
and
fnstenv
xor
lods
cmpsl
call
jbe
push
cmpsb
cs
sbb
ja
outsl
lahf
cli
inc
pusha
lret
sar
jnp
pop
xchg
loope
jno
dec
int3
jno
add
xor
js
jmp
mov
in
jle
into
push
lahf
cmc
cmp
xor
and
lahf
jns
test
jp
jbe
pop
bound
es
mov
subl
sub
mov
and
test
xchg
or
jb
aas
leave
ss
pop
lahf
push
js
test
scas
cmp
jo
bound
scas
fnstenv
push
xor
jbe
and
bound
movsl
stos
inc
rorl
sub
adc
cld
out
enter
mov
sub
and
pop
xlat
pop
pop
jne
and
lds
mov
ds
movsb
and
insl
xchg
int3
out
sub
xchg
jae
mov
xchg
dec
xchg
and
inc
jmp
push
mov
jp
xchg
push
mov
lea
inc
cmc
icebp
scas
jmp
adc
or
sbb
sub
addr16
and
cmp
les
int
add
test
test
enter
into
mov
sti
xchg
mov
push
popf
sti
adc
add
dec
stc
sbb
out
nop
stos
mov
and
cltd
or
xor
lds
scas
dec
insl
sbb
aam
jo
xchg
out
sarb
mov
ja
out
repz
mov
out
mulps
jb
jg
mov
push
sub
dec
orl
cld
das
repz
push
in
int3
shrl
sti
les
mov
out
insl
adc
movsb
cmp
and
addr16
cmp
scas
push
fmuls
jg
and
loope
ss
push
adc
sbb
pop
pop
in
mov
testb
mov
loop
or
jg
mov
std
and
xchg
imul
test
push
dec
and
cmp
movsb
cmpsl
sub
lods
fs
sub
push
mov
loop
in
filds
sub
loop
cmp
sbb
cmc
pop
outsl
mov
pusha
aam
data16
push
das
mov
add
and
pop
sub
cmp
pop
lcall
mov
push
and
mov
jg
xchg
and
xor
lods
adcb
mov
aas
xchg
in
aam
dec
std
jl
dec
clc
test
movsl
sbb
mov
ret
lea
lea
cmp
jae
dec
out
sbb
xchg
das
xchg
pushf
ss
pushf
jno
sti
add
shrl
testb
adc
cmpsl
fcomi
cmp
lret
jne
jne
insl
cs
xchg
fistps
fucom
cmp
leave
cltd
packssdw
mov
xchg
outsl
inc
in
fwait
cltd
ja
push
mov
push
add
dec
repz
add
mov
push
jo
sbb
lds
pop
fwait
int
mov
inc
or
jbe
cmp
ds
jl
sub
or
jge
mov
push
or
nop
inc
movsl
rorl
xor
adc
jae
cltd
sbb
arpl
mov
mov
and
push
aad
fidivl
jo
testl
adc
push
dec
roll
push
loope
loopne
jno
inc
push
jo
das
lods
arpl
mov
ljmp
push
gs
mov
pushf
sahf
mov
cltd
and
sbb
xor
sub
or
int3
mov
push
mov
lret
shlb
cmc
inc
mov
sbb
sub
fnstcw
add
pop
std
les
clc
cmp
sub
movsb
fldenv
sbb
mov
mov
imul
mov
sbbl
into
mov
iret
sarb
or
movnti
rcrl
test
pop
sbb
cmp
and
mov
push
fwait
mov
mov
sbb
xlat
mov
sub
push
je
ret
dec
and
loopne
ss
xchg
cltd
inc
cmp
or
out
lea
rcll
in
add
test
inc
ds
bound
mov
or
ljmp
xchg
pop
sub
sbb
push
je
jle
push
mov
push
mov
out
mov
xor
jo
sub
fbld
sub
int3
mov
push
and
or
push
cmpsb
xor
mov
mov
stos
in
and
xchg
aaa
imul
push
cmp
or
cmp
adc
xchg
cmc
xchg
insl
out
imul
enter
push
mov
xchg
xor
lahf
jmp
out
lock
daa
decl
and
negb
lret
test
mov
gs
rorl
mov
inc
in
inc
push
inc
loope
adc
out
adc
mov
mov
outsl
out
or
fistpll
cmpsl
cmpsl
xchg
pop
test
pop
jb
mov
lds
dec
lret
sub
das
and
rcrl
push
loope
ljmp
les
out
push
xchg
clc
mov
sbb
adc
jns
jecxz
lahf
dec
test
sub
shll
jmp
mov
fsubl
cmpsl
jno
sub
out
lea
cs
push
pop
mov
addr16
daa
mov
call
mov
test
and
movsl
mov
push
xchg
cmpb
push
imul
in
pop
sbb
loop
cs
pop
filds
stos
push
or
adc
repnz
jmp
dec
xchg
jg
jl
jmp
lahf
jecxz
jmp
mov
mov
sbb
adcb
bnd
mov
cld
add
jl
xor
mov
aas
bnd
jle
addl
aas
jns
xchg
add
cwtl
mov
dec
out
lea
mov
mov
add
push
xchg
mulb
mov
movnti
adc
sbb
sub
or
mov
mov
fdiv
fildl
daa
loop
testb
addl
sub
or
or
cmp
outsb
cld
sub
ret
pop
xchg
inc
mov
adc
or
and
jg
fmul
pushf
outsl
and
ja
jecxz
mov
scas
add
stos
rcrb
fldl
jnp
pop
test
jle
adc
push
cld
xor
sbb
mov
cmc
daa
insl
mov
adc
and
jecxz
insb
inc
cwtl
mov
sub
jo
xchg
aad
push
jo
clc
or
imul
pop
jae
pop
cmpsl
mov
pusha
xchg
jle
mov
shl
push
xchg
push
push
jo
mov
popa
ja
xor
jl
mov
fimull
xchg
fdivrs
sbb
cmpsb
mov
inc
decl
loopne
cmp
jae
adc
or
add
push
xchg
mov
cli
adc
dec
std
mov
adc
loopne
jno
jg
pop
push
jge
push
dec
pop
mov
out
dec
aam
or
pop
inc
icebp
in
ss
lret
je
mov
lahf
lea
stc
dec
jecxz
gs
xor
aas
lahf
mov
lret
and
sti
ja
fisttpll
pop
mov
mov
sti
ja
into
mov
inc
dec
outsb
stos
xor
xor
pop
lods
sub
out
lock
pop
movsb
popf
sahf
cmp
lahf
jnp
cmp
jb
in
imul
push
xchg
ds
sbb
xchg
jg
or
arpl
das
cmc
dec
jg
or
sub
pop
mov
pusha
jo
inc
push
jno
inc
inc
fsubl
psraw
inc
xchg
jne
lret
cmpsb
mov
push
inc
sti
inc
outsl
xor
fiadds
in
push
xor
loopne
sub
insl
fcmovne
adc
dec
mov
ret
xchg
dec
js
mov
sbb
mov
pop
daa
data16
xor
pusha
cmp
cs
sbb
dec
mov
fs
cmp
adc
out
sub
push
dec
xchg
mov
nop
in
gs
xor
jnp
stc
enter
lret
pop
faddp
jmp
in
xchg
cmp
and
push
cmpb
mov
inc
imul
mov
stos
pop
ds
mov
divb
rcr
push
hlt
xchg
int3
mov
adc
xchg
adc
out
push
mov
dec
scas
iret
pop
movsl
and
xor
fcoml
inc
cmc
inc
cmp
dec
push
jae
and
pop
xchg
sbb
rclb
dec
pop
add
push
pusha
test
push
xchg
cmp
icebp
aad
repnz
xor
aas
leave
jb
xor
insl
push
fistl
inc
cltd
rolb
daa
scas
pop
sub
mov
scas
xchg
sahf
jl
and
mov
mov
cmp
jo
mov
jo
sub
cmp
mov
dec
fwait
fwait
xchg
arpl
iret
fidivrs
inc
adc
push
mov
js,pn
adc
test
cmp
push
adc
inc
jle
cwtl
inc
push
jae
pop
add
lods
or
sbb
mov
xor
mov
cltd
dec
sbb
push
sub
fwait
cli
push
mov
sbb
das
push
xchg
fwait
jno
lds
cs
sbb
and
cmpsl
cltd
dec
sub
inc
cmpsb
and
push
cmpb
shll
inc
movsb
add
bound
push
idivb
mov
jecxz
dec
mov
pop
add
pop
je
lea
push
adc
xor
divl
test
add
xchg
sti
add
push
lock
jo
les
iret
sahf
bound
xlat
popa
sub
jb
daa
push
loopne
xchg
aad
sub
push
mov
hlt
clc
mov
call
add
ss
out
addr16
cmpsb
das
mov
repnz
fdivr
sub
cmp
and
xchg
push
mov
pop
add
lods
cmp
hlt
dec
mov
aas
mov
aad
xor
shll
inc
mov
gs
das
imul
sbb
roll
lds
movsl
inc
dec
lds
scas
inc
dec
push
fs
cmc
cld
cmpsb
stos
cltd
pop
mov
xchg
data16
mov
mov
jne
jmp
pop
fwait
jne
mov
push
enterw
outsb
mov
cmp
je
lods
dec
cli
pushf
lahf
xlat
mov
mov
mov
add
sub
jae
pop
xor
pop
jnp
push
hlt
or
ret
int3
dec
inc
js
js
pop
lcall
out
out
pop
mov
push
sub
mov
cli
movsb
fidivrl
daa
dec
subb
movl
mov
shll
xor
jo
push
jge
lods
call
sub
iret
aas
ret
cmp
repz
or
adc
ret
inc
pop
bound
aaa
jmp
mov
mov
xchg
sub
jp
cmpsl
jmp
bound
stos
xor
sbb
inc
sbb
or
jo
xor
test
dec
xor
cmp
push
out
lret
mov
add
loopne
rorb
scas
lret
je
mov
add
or
xor
dec
and
dec
lcall
aad
div
add
sbb
repnz
push
pop
sub
jae
lahf
mov
fld
dec
xlat
jnp
inc
daa
or
fxch
scas
push
push
mov
mov
addl
xor
lds
push
aas
pop
cld
jmp
arpl
adc
jae
repz
sbb
push
jns
sbb
cmp
and
icebp
jno
xchg
std
in
call
xorb
cmp
pop
sti
or
pop
mov
jbe
ficomps
push
sti
rolb
fisubrl
idivl
stos
xor
fs
cli
cmp
ja
dec
ds
js
mov
sbb
stos
cmp
bound
fsubrs
pop
and
dec
ss
adc
push
push
notl
es
jno
and
pop
pop
es
jg
pop
lret
mov
and
dec
test
xor
adc
sahf
int3
mov
dec
nop
sahf
jae
std
daa
mov
int3
decl
inc
cmp
das
scas
addr16
mov
sub
in
xchg
int
jle
push
add
ss
in
mov
pop
loop
add
scas
sub
loope
movsl
or
cmp
rolb
jg
xchg
movq
add
fbld
int
xchg
cmp
pop
divl
push
xorl
dec
aas
xchg
std
stos
iret
xor
hlt
stc
cwtl
lea
jmp
repz
add
fs
adcb
mov
loope
cmp
in
and
cmp
push
jge
cmp
xchg
mov
pop
or
jb
jbe
fcmovnu
fists
pop
or
les
cmp
mov
test
jo
cmp
mov
or
out
inc
fidivs
push
pop
pop
stos
xchg
xchg
rcrl
leave
ja
xor
jp
pop
es
dec
xchg
scas
and
sub
punpcklwd
arpl
cwtl
arpl
movsb
addr16
add
adcb
loope
xor
pop
mov
stos
fmul
and
shlb
cmp
add
stos
inc
std
pop
sub
scas
jne
and
sbb
scas
les
xor
addl
stos
cli
aas
imul
jmp
out
inc
nop
enter
ja
pushf
or
test
fsts
xlat
jnp
aad
lods
andl
cmp
and
mov
sub
icebp
add
and
fs
aas
pop
sub
enter
iret
rolb
das
xor
adc
lods
sub
add
mov
mov
aas
sub
icebp
pop
or
mov
jb
ljmp
aas
out
sub
movsl
lock
dec
fidivrs
xor
fadds
les
fcmove
pushf
mov
or
addr16
add
sti
sbb
ja
pop
nop
and
mov
in
testb
adc
cmc
nop
pslld
xor
adc
adc
pop
out
pop
andl
int
xchg
jmp
cld
push
mov
arpl
pop
push
dec
fidivl
mov
addr16
out
or
in
fwait
clc
lret
dec
jmp
imul
ss
or
xchg
mov
xchg
test
mov
or
push
inc
adc
push
mov
mov
lods
into
adc
push
dec
sub
fsubrs
leave
cmpsl
repz
pop
scas
push
adc
ljmp
and
cmc
rol
subl
jmp
push
rolb
sbb
mov
dec
dec
jg
dec
inc
push
xlat
push
push
imulb
scas
sbb
scas
repz
jg
dec
mov
dec
and
lock
jb
jmp
mov
or
or
lret
cs
jp
arpl
in
push
pop
push
ret
jae
mov
jge
jge
cltd
in
xchg
jnp
call
dec
gs
or
jo
sbbl
mov
int
cmpsb
stos
xor
push
shlb
inc
hlt
int
lar
stos
adc
sbb
cmp
sbb
dec
in
push
push
aam
and
test
add
sbb
pop
xchg
pop
int
cmp
pop
scas
inc
cltd
xchg
push
dec
inc
loop
xchg
in
jo
loop
adc
lods
push
cmpsb
stos
and
add
pop
mov
fidivs
inc
pop
cwtl
mov
pop
scas
dec
xchg
fisubrl
jnp
jecxz
pushf
mov
inc
clc
and
jge
or
nop
stos
jo
sub
sub
ret
movsl
imul
lret
mov
les
sbb
add
push
dec
in
lods
inc
movsl
cs
incb
push
les
xor
shrb
ret
pop
xor
xlat
xchg
pop
pop
mov
push
jb
inc
leave
aaa
gs
pop
adc
lds
mov
lock
pop
mov
scas
enter
adc
or
or
decl
or
orl
rcrl
outsl
xor
data16
add
pop
fs
test
imul
mov
inc
adc
fisttpll
xor
push
inc
fsubs
fcompl
ret
stc
inc
popf
insb
mov
and
cmp
adc
sbb
pop
fimuls
push
pop
mov
call
ss
lods
daa
add
mov
out
inc
sub
sub
xor
hlt
call
pop
cwtl
dec
andb
mov
movl
pusha
xchg
lret
xor
pushf
xor
jg
sub
jbe
rcr
aam
mov
fisubl
fildl
xchg
mov
out
test
pop
cli
popa
sub
call
sahf
push
icebp
mov
push
or
or
cmp
movsb
jecxz
sar
dec
jo
aaa
inc
sub
cmp
imull
mul
mov
imul
xor
movsb
pop
fcom
imul
add
pusha
call
sub
cld
fidivrs
xor
xor
jl
adc
xor
in
outsl
testb
in
lret
xchg
push
leave
sti
cmpsb
sti
jne
or
in
xchg
out
out
in
cltd
mov
push
sub
adc
xchg
sub
sti
xchg
mov
xchg
jmp
sub
or
jns
xchg
push
cmp
push
in
lret
sbb
inc
nop
add
cld
pop
jp
cwtl
mov
inc
cmp
sub
cld
adc
test
cld
mov
imul
loope
sahf
add
xchg
mov
out
push
push
or
les
xlat
mov
push
test
sbb
sti
pop
mov
jl
jge
rorl
daa
pop
sbb
inc
in
stos
das
or
pop
leave
and
lret
bound
add
out
sahf
movsl
mov
in
fidivrs
and
out
xchg
pop
int
mov
rcr
pop
jl
and
sub
pop
shll
pop
gs
push
adc
pop
jle
push
std
inc
and
and
inc
call
cmp
lret
cli
push
push
push
in
lea
lea
leave
push
cwtl
inc
xor
mov
lahf
into
lahf
adc
icebp
aad
inc
sbb
sbb
mov
pushf
cltd
sub
or
aad
addr16
adc
xor
jl
sbb
sbb
mov
mov
push
mov
das
loope
ljmp
mov
insl
pop
push
pop
xchg
jo
mov
sahf
pop
xchg
cmpsb
xchg
or
jbe
daa
sbb
sbb
mov
rclb
xor
lcall
and
je
repnz
int3
fcmove
cmp
cmp
lods
push
stos
aas
or
cmp
dec
push
sti
in
iret
jg
iret
sub
xchg
mov
ret
adc
sub
cmp
sbb
and
aaa
gs
int
int
mov
jbe
imul
out
pop
mov
pop
insb
andl
fnstsw
cmp
adc
test
sti
pop
repz
and
add
push
sbb
mov
mov
and
cli
adcl
loop
ss
adc
add
shld
jns
mov
cmp
movsb
push
adc
test
js
or
cs
sbb
mov
test
add
cli
psubb
inc
jne
and
push
pop
out
fcompl
mov
and
js
insb
dec
push
sub
mov
test
pop
jp
imul
jne
pusha
aad
enter
sub
out
adc
mov
lcallw
dec
out
cmc
sub
push
push
cmp
push
imul
or
add
sbb
jne
hlt
loopne
js
outsb
inc
dec
aad
imul
and
js
add
or
cltd
andl
inc
pop
mov
aad
in
dec
sbb
jl
mov
add
push
inc
mov
stos
pop
and
xchg
fldl
out
fcomps
int
dec
adc
rclb
jbe
push
xchg
inc
mov
aas
adc
in
pop
dec
mov
or
fdivs
mov
sub
movsl
push
aaa
sub
and
jns
xor
bound
negl
dec
shlb
xlat
nop
mov
cmp
mov
sbb
and
dec
test
xlat
mov
pop
subl
scas
add
mov
mov
mov
popa
imull
and
imul
mov
scas
jno
sbb
mov
push
xor
mov
out
insb
fistps
xchg
lret
in
scas
adc
ja
fistpll
jne
xor
mov
jno
xchg
mov
add
mov
push
mov
pop
push
add
decl
nop
push
xchg
add
cmp
mov
or
bound
test
fcmovnbe
lods
shll
mov
inc
jecxz
call
jbe
mull
sub
aam
ret
mov
push
cwtl
or
ljmp
xor
jmp
sbb
mov
adc
pop
mov
cmc
shrl
hlt
ljmp
dec
in
xor
in
and
and
es
sbb
pop
sbb
inc
lcall
xor
aam
out
icebp
sbb
or
lock
and
shll
loopne
cmpsb
push
mov
rcrl
inc
out
out
out
or
test
inc
jp
push
out
test
sbb
add
dec
in
outsl
lea
pop
cs
outsb
and
sbb
fucomi
sbb
mov
pop
jmp
frndint
add
inc
cmpsl
inc
jecxz
outsb
sbb
jge
in
cli
sub
and
jmp
mov
rcl
test
es
iret
ljmp
xchg
fcmovu
vunpckhpd
mov
mov
ja
neg
dec
subb
cmpsb
pop
in
push
out
leave
jmp
jle
or
mov
cmpsb
mov
xchg
sub
adc
lock
push
mov
push
and
jne
and
scas
mov
dec
xor
adcl
fstpl
lahf
std
popf
push
pop
jne
fidivrl
aad
mov
sti
fwait
and
push
out
ja
inc
lret
push
add
data16
pop
pop
dec
cmp
out
jbe
and
mov
lret
ficoml
hlt
je
xchg
gs
std
push
mov
mov
test
dec
sbb
outsl
pushf
sbb
stos
cmp
inc
mov
out
repz
or
mov
aaa
inc
fcom
shrb
dec
jg
xchg
stos
addl
es
inc
gs
inc
ja
in
sub
pop
stc
adc
add
sub
xlat
xchg
mov
and
jg
push
mov
sti
aaa
xor
pop
cmp
subl
fidivl
clc
sub
xchg
loop
sub
inc
popf
test
and
cmpsb
mov
pop
push
or
sbb
inc
mov
mov
push
add
sbbb
add
es
imul
enter
add
bound
inc
lods
mov
les
push
pop
cld
ljmp
adc
insb
sub
fildll
xor
jl
mov
or
jb
frstor
pop
xbegin
sbb
cmp
fiadds
adc
sarb
int3
xchg
add
fwait
inc
in
pop
or
stc
xor
std
and
xchg
pusha
push
sbb
out
mov
out
mov
pop
fwait
xchg
shlb
xor
fcompl
movsb
mov
mov
inc
xor
cltd
cmc
mov
icebp
mov
and
jg
into
or
or
stos
dec
add
call
cmp
mov
mov
and
in
xchg
xor
add
arpl
out
push
mov
into
fsts
sub
aas
pop
clc
enter
cld
xchg
xchg
xchg
inc
xor
dec
mov
aaa
add
loope
subl
mov
fdivl
add
fbstp
pop
aaa
insb
rol
mov
testb
aaa
hlt
cmp
subl
mov
outsb
mov
jne
and
dec
into
mov
outsb
popf
dec
aas
movb
outsb
lds
sbb
add
mov
mov
mov
xor
frstor
fwait
pusha
fnstenv
jge
into
mov
cmpb
mov
sbb
pop
xor
sub
mov
sub
stos
jle
sub
jmp
movsl
fimuls
or
pop
mov
test
loopne
test
push
xchg
push
mov
or
movsl
push
loop
js
jl
pop
jecxz
xchg
fmul
jge
jb
negb
scas
sub
cmp
std
nop
std
add
and
or
sti
cmpsl
sbb
imul
dec
mov
sub
and
inc
xor
adc
dec
mov
shlb
xchg
out
fwait
ret
or
push
jg
sarl
cs
stc
dec
fimull
inc
out
inc
out
inc
jge
out
adc
fcompl
sahf
sub
sub
addr16
sub
dec
xchg
int
mov
sbbb
jg
mov
mov
insl
xchg
inc
adc
or
aad
mov
jmp
jne
scas
sub
aad
sarb
insb
fdivrs
dec
js
mov
mov
lcall
fwait
shll
clc
or
mov
xchg
mov
dec
xchg
sahf
popa
sahf
inc
push
jl
push
mov
dec
ss
xor
inc
js
sbb
clc
loop
das
sahf
in
outsl
test
mov
mov
data16
dec
idivb
dec
nop
jl
ret
mov
test
jbe
lds
into
fiaddl
int3
ds
dec
jns
cltd
xor
inc
outsb
pushf
out
das
sbb
cs
inc
movsb
inc
and
out
inc
ret
clc
or
add
pop
dec
shll
in
addb
adc
scas
lds
cmovg
in
test
lea
lea
inc
push
cmpl
adc
or
cmp
inc
call
xchg
push
std
mov
mov
add
iret
mov
push
adc
ror
je
test
dec
adc
imul
mov
and
push
pop
nop
xchg
sbb
sub
lods
or
sbb
mov
jns
cmp
cwtl
jp
out
ss
and
xor
adc
pushf
cmpsl
pop
pop
roll
jecxz
fstpl
adc
cli
fwait
mov
imul
lea
xchg
ret
not
sub
orb
cmp
cmc
sub
xor
stos
and
jb
xchg
aad
mov
in
xlat
mov
std
mov
icebp
imul
sbb
movsb
xchg
lcall
mov
mov
mulb
sub
fimuls
pop
mov
pushf
cmp
push
pop
xchg
push
xchg
jne
push
mov
rep
fisttpll
lcall
popf
adc
jge
push
lock
cmp
ror
scas
popa
xchg
cmp
popf
notl
out
outsb
inc
out
xor
hlt
jle
xchg
push
sbb
cltd
mov
fs
fmull
and
mov
out
dec
jns
sbb
inc
sbb
adc
stos
repz
pop
into
test
fnsave
sub
jg
jne
push
push
sub
xchg
push
lcall
push
xor
mov
arpl
stos
pop
cmp
mov
movsl
fisttps
leave
icebp
sbb
scas
out
dec
cmpsb
test
sub
sbb
ret
and
iret
mov
in
xchg
jge
cli
inc
stc
pop
push
lret
cmp
add
and
mov
clc
cs
mov
mov
jmp
jns
es
in
fwait
adc
add
sbb
inc
fwait
lahf
push
lods
sbb
mov
insb
hlt
gs
ss
push
xor
push
icebp
cmp
mov
or
mov
cmp
into
inc
xchg
push
es
or
aad
stos
jle
adc
ficompl
out
jne
sbb
jbe
arpl
or
mov
cmp
mov
jmp
sbb
shrb
sahf
shll
mov
roll
mov
jb
jo
inc
pop
outsb
lods
jecxz
movl
sbb
idivb
cmp
cmp
sub
out
stc
mov
shlb
mov
mov
push
mov
pusha
jl
push
sub
mov
xchg
cmp
xchg
int
mov
es
cmp
mov
mov
hlt
rcll
or
cs
adc
jae
cmpsb
add
push
ror
rorl
push
test
ja
push
rcr
sub
int3
push
insl
mov
in
jb
out
fisttps
or
ret
pop
gs
sub
scas
adc
mov
pushf
jbe
push
sbbb
test
bnd
fldcw
xor
xchg
mov
sub
sub
out
mov
mov
shr
inc
sub
rcrb
and
xlat
push
loope
mov
adc
fmuls
aaa
mov
pop
push
mov
inc
jnp
clc
ss
test
ja
insb
out
test
push
xchg
add
xchg
or
dec
add
test
lahf
or
in
shrb
push
xchg
imul
sbb
subb
fldcw
dec
loope
pop
lods
or
xchg
push
iret
enter
mull
sbb
cmpsb
pop
data16
jle
sti
cltd
lods
dec
mov
test
cmc
jg
pusha
fbld
hlt
pop
fmuls
pop
call
inc
pop
jle
and
xchg
movsl
xchg
fisubs
shrb
xor
xor
push
and
cmc
push
and
js
and
or
mov
popa
je
in
mov
out
dec
pop
sbb
pop
xor
push
inc
insb
xchg
cwtl
nop
dec
cwtl
dec
sub
pop
push
inc
pop
pop
sub
sub
ret
dec
sub
pop
fistpll
arpl
mov
mov
addr16
push
mov
lods
hlt
jmp
jbe
lock
fistpl
jo
fmul
pop
lahf
daa
lods
or
mov
xorb
mov
sbb
fwait
push
outsl
mov
mov
aas
orl
mov
roll
icebp
movsb
clc
mov
adc
or
add
jnp
into
adc
mov
push
mov
xor
jle
inc
out
mov
mov
loop
add
push
push
enter
negb
mov
aad
pushw
je
pusha
scas
orb
pushf
push
jp
adcb
lahf
out
sahf
sub
fdivs
lahf
js
mov
add
scas
inc
add
cmp
leave
push
fstps
push
sbb
push
popf
dec
mov
pop
in
call
jne
pop
sbb
adc
push
xor
cmp
sub
addl
push
lds
pop
push
das
add
mov
ret
scas
aad
cltd
jbe
pop
or
inc
mov
sub
push
in
or
push
push
pop
fbstp
aam
jg
aad
sbb
mov
sahf
scas
xor
add
daa
pop
xor
or
js
repnz
div
xchg
xor
push
and
mov
add
ss
adc
aam
fimuls
mov
ret
in
push
cmp
and
imul
add
out
push
cmp
lea
sub
and
mov
add
pop
pop
aaa
stos
and
mov
scas
subl
push
ds
pop
sub
mov
repz
cli
pop
shlb
adc
nop
call
lds
inc
and
es
or
fisttps
mov
stos
nop
mov
lret
ret
dec
gs
das
in
xor
or
je
xor
cld
adc
cmp
mov
or
adc
mov
fwait
enter
subb
inc
jno
push
loopne
hlt
pop
mov
leave
insb
addr16
test
inc
pop
out
cmp
mov
xor
nop
mov
out
xlat
xor
ja
out
fmul
negl
xor
adc
mov
add
lea
pushf
mov
aad
out
movsl
dec
pushf
mov
dec
arpl
repnz
sbb
cs
jnp
xor
mov
aam
lods
xlat
movsl
scas
movsb
scas
js
fldpi
add
dec
dec
jo
push
push
pop
jne
sbb
mov
sub
insb
add
adc
insl
adcl
fcomps
pushf
popf
adc
adc
das
in
dec
mov
xchg
xor
inc
cmp
insb
xor
and
stc
call
ds
sarb
push
mov
mov
sub
aad
xlat
dec
jb
push
mov
push
adc
cmp
inc
push
jae
dec
inc
mov
and
idiv
movsl
push
and
fildll
in
call
cmp
push
andl
add
inc
cmovle
jmp
add
and
jnp
jecxz
mov
cwtl
jns
and
aam
daa
adc
aad
cmpsl
test
testl
pop
or
or
ja
inc
mov
arpl
ss
in
mov
mov
and
loop
mov
and
aas
neg
loope
xor
push
addb
and
push
adc
shrb
add
adc
ss
fisubl
mov
sub
mov
imul
xlat
sbb
in
ret
xchg
cmp
jp
jne
pop
in
enter
dec
pop
addr16
push
dec
jmp
jo
mov
mov
mov
mov
xchg
cwtl
inc
out
mov
cli
out
or
sahf
xchg
mov
sbb
imul
fcomps
test
lea
push
jecxz
adcb
mov
and
push
aam
xchg
mov
dec
and
and
mov
adc
fisubrs
jne
enter
pop
xchg
pop
popf
ljmp
mov
enter
ss
dec
jg
lret
xchg
sbb
popf
fstps
inc
xor
mov
leave
imul
sbbb
outsl
inc
lcall
push
xchg
xchg
pushf
loopne
push
jae
out
daa
push
stos
in
jns
aas
movsl
jbe
stos
mov
je
inc
and
jge
cmp
lea
or
jge
shrl
icebp
mov
adc
int
stc
call
ror
scas
call
daa
pop
loopne
cmc
mov
xchg
xor
or
stc
fsubl
mov
jae
xchg
lret
cmc
jp
aas
pop
arpl
rcl
cmp
and
mov
jnp
jg
adc
adc
subb
fwait
cmpsb
jbe
jne
sbb
shlb
adc
add
mov
loop
add
pop
cltd
out
push
enter
xchg
dec
inc
xchg
sbb
or
dec
call
sub
add
addb
out
cld
inc
jae
xchg
jmp
cwtl
into
test
ds
and
imul
inc
cmpsl
nop
scas
daa
lods
stos
or
sbb
clc
mov
dec
pusha
mov
jnp
xor
push
leave
adc
cmp
xchg
imul
int3
jl
pop
repnz
mov
hlt
fcmovb
pop
xchg
arpl
and
lea
mov
mov
push
cs
loopne
push
popf
pushf
sahf
and
js
sub
lcall
xchg
xchg
out
incb
mov
sahf
addr16
or
lods
pop
rcl
sbb
jecxz
imul
fidivs
imul
test
dec
hlt
arpl
xor
arpl
outsb
jae
in
mov
pop
mov
sar
insb
inc
dec
lods
jne
testl
xor
aas
xchg
dec
mov
outsl
mov
fildll
cmp
pop
mov
leave
add
add
sbb
xchg
lret
daa
dec
pop
jbe
jo
xlat
mov
sti
decl
hlt
ljmp
clc
and
movsb
sbb
inc
mov
sbb
xlat
int3
push
repz
sub
jle
mov
test
jnp
inc
test
or
pop
cmp
subl
adc
popf
aaa
ss
daa
lea
mov
cmp
shll
out
pop
imulb
cmp
pop
aad
clc
jne
popf
nop
out
cmp
mov
lret
xchg
sahf
ja
mov
das
mov
inc
push
sarl
push
insb
add
xlat
mov
jmp
outsl
movnti
hlt
imul
sahf
or
push
pop
mov
adc
arpl
inc
xchg
xor
inc
add
imul
sub
je
mov
fistpl
mov
pop
add
sbb
sub
push
xchg
movsb
lret
cmp
add
xchg
push
mov
inc
loopne
stos
xchg
xor
mov
outsl
cmpsb
mov
hlt
mov
or
in
jno
jl
lods
adc
push
mov
pusha
mov
test
mov
push
hlt
js,pt
lea
ljmp
lea
mov
aaa
lods
inc
loop
pushf
dec
test
lds
adc
inc
out
mov
add
ss
bound
stos
adc
nop
xor
cmp
gs
sub
aas
sbb
cmpsl
add
xchg
in
mov
cmp
jp
pop
imulb
xor
mov
adc
add
loop
jbe
sub
adc
push
pop
iret
es
and
test
stos
lods
adc
cltd
inc
cmp
in
cmp
hlt
andl
inc
fnstsw
insb
adc
lods
test
aas
push
pop
enter
push
mov
xchg
xchg
cwtl
sahf
xor
adc
in
jae
or
and
into
out
cwtl
dec
add
scas
and
in
insb
and
fcmovne
mov
mov
add
adc
fisubs
jmp
test
out
jecxz
scas
imul
pusha
or
ss
or
repz
xor
stos
rolb
cmp
xor
mov
push
sub
loope
push
scas
das
and
mov
pop
mov
and
or
das
sub
mov
sbb
imul
and
insb
test
repnz
insb
int
loopne
xlat
mov
mov
fs
movsb
fcomp
push
mov
in
aaa
mov
mull
out
cmp
xchg
push
pop
sbb
movsl
xor
push
push
dec
jmp
icebp
push
stos
sub
popa
mov
ljmp
mov
adc
wbinvd
and
push
jo
or
inc
popf
dec
into
push
sbb
xchg
cmc
xchg
sub
loop
scas
ljmp
testb
adc
jmp
jnp
cmp
or
popl
test
addr16
imul
es
aas
or
xor
xor
push
pop
xchg
xor
and
sbb
and
rorl
andb
mov
adc
or
mov
rcrl
dec
dec
cmpsb
stos
or
xchg
push
xchg
int
mov
add
loope
push
outsb
mov
pop
xor
push
cmpsl
roll
pop
xor
out
xchg
insl
jne
sbb
mov
dec
dec
popa
out
mov
repnz
js
or
mov
dec
pop
add
jg
pop
adc
sbb
movzwl
aad
inc
jbe
push
jge
lahf
jl
stos
cld
sub
cmc
jl
push
imul
inc
push
out
dec
arpl
pop
mov
rclb
push
cltd
pop
les
popf
cmc
sbb
cmp
imul
unpckhps
and
mov
pop
inc
dec
and
sahf
xchg
jae
jge
push
insl
adc
lds
xchg
cmp
ret
outsb
mov
pop
dec
mov
inc
pop
hlt
push
scas
lret
int
shll
test
pop
mov
xchg
out
xorl
push
insb
cmp
mov
push
adc
insl
and
mov
inc
in
andb
vmwrite
insl
mov
add
push
dec
add
fs
inc
out
out
add
push
cmp
dec
idiv
dec
xchg
lea
jg
inc
xchg
inc
cltd
in
add
inc
jns
ss
xor
jg
cmp
push
test
aam
ljmp
scas
hlt
rorb
call
insb
je
cmp
adc
lods
sbb
dec
xchg
test
insb
cltd
movsb
xor
adc
inc
add
xor
cwtl
lods
push
and
frndint
addl
lret
out
out
mov
ret
mov
gs
add
and
outsb
into
jp
loope
lret
imul
stos
push
icebp
sub
ss
std
cli
ret
push
adc
and
mov
mov
imul
hlt
sbb
outsb
fstps
cmp
mov
cmpsl
dec
pop
cmpsb
mov
es
stos
xlat
mov
loope
mov
add
lods
iret
aas
xor
xchg
sub
mov
xor
sub
xchg
lret
nop
je
cmp
xor
in
popa
and
sub
cltd
mov
jmp
imul
nop
xor
stc
loopne
sub
push
iret
mov
orl
in
sbb
call
add
jle
sub
or
jl
in
shrl
inc
push
cs
and
std
push
sub
call
shll
dec
sar
jg
mov
dec
mov
and
jle
call
mov
mov
loop
loop
pop
dec
sti
pop
shl
xor
out
xor
push
lss
leave
jne
mov
js
sbb
push
shlb
or
or
jmp
test
mov
xchg
dec
xchg
xchg
inc
popa
mov
add
ret
cmp
in
xor
ffree
pushf
clc
lcall
test
xor
inc
inc
cltd
cwtl
icebp
xor
lods
sbb
clc
cmp
adc
and
arpl
jno
xchg
repnz
pop
xorl
nop
sbb
cmpsb
mov
dec
adcb
dec
xchg
inc
jecxz
pushf
imul
cli
xor
xchg
popa
pop
sarl
dec
cmp
push
out
add
js
notb
call
test
cltd
shlb
mov
mov
ret
mov
roll
dec
icebp
inc
cli
sub
imul
jecxz
das
iret
xor
mov
aam
xor
inc
mov
fucomi
sbb
pop
scas
adc
mov
and
roll
cmp
lret
mov
inc
ficomps
jge
imul
pop
sbb
cmc
mov
sub
int
push
stc
daa
or
imul
mov
in
test
dec
nop
mov
or
outsl
test
and
insl
sbb
shrb
lock
sti
cmp
lods
scas
out
popl
movsl
std
mov
add
dec
push
lods
sub
pushf
sub
mov
pushf
aaa
cltd
ds
adc
cltd
fisttps
jno
pop
dec
stos
xchg
rcll
scas
xor
xchg
in
test
orl
mov
or
mov
lods
push
js
sbb
mov
pop
les
xchg
xchg
xor
lcall
dec
and
decl
lds
adc
xor
mov
xchg
inc
xchg
or
filds
sbbl
add
cmpsb
fcmovnbe
repz
inc
push
sbb
add
les
xor
mov
test
jae
xlat
frstor
andl
pushf
lcall
cmpsb
inc
dec
cltd
adc
sub
inc
or
jns
rcrb
sbb
ljmp
dec
cmp
fdivrl
nop
test
divb
sti
and
data16
mov
jnp
jl
mulps
cli
cmc
ds
push
pop
lret
ja
xor
rclb
push
jns
test
fsubs
push
fbstp
dec
sbb
repz
add
lea
enter
sub
int3
cmp
aam
pop
xor
fnstcw
mov
cli
scas
out
add
daa
lds
movsl
imul
cmpb
and
je
shrl
ds
jecxz
cmp
jbe
jmp
sub
fs
add
jo
in
loope
and
lcall
inc
test
popa
xor
dec
sbb
lahf
pushf
dec
cmp
push
in
or
push
loopne
pushf
cli
pushl
sub
cmpsb
jp
stos
push
inc
mov
pop
adc
jnp
in
sbbl
inc
inc
ja
popa
mov
lret
daa
jne
int
stc
xor
daa
push
mov
mov
xchg
push
sbb
cmp
data16
cmpsb
push
push
mov
jp
sbb
mov
sahf
iret
mov
jno
pushf
xchg
incb
test
scas
mov
push
sahf
mov
jecxz
inc
jp
dec
rorl
fimull
mov
mov
mov
ficoml
jb
jl
jecxz
inc
inc
test
sbb
imul
mov
movsb
jnp
pop
mov
inc
mov
mov
ja
mov
mov
leave
fimuls
xor
orl
push
stos
inc
les
xchg
and
orb
lret
dec
lock
sar
or
pop
push
loope
jl
and
in
aas
push
rorl
fisubrs
lds
loope
out
or
sbb
jne
mov
mov
dec
and
shr
cs
sub
fwait
notl
jae
imull
pop
stos
and
mov
sbbb
cmp
xlat
test
sub
and
shrl
fimuls
cs
sbbl
movsb
int
leave
test
mov
imul
inc
cmp
stc
das
stc
mov
aad
fidivrl
sbb
jns
clc
imul
push
lcall
push
adc
or
repz
mov
jnp
pop
das
mov
pop
xchg
pop
cmpsl
pop
jecxz
test
imul
stos
add
cmp
lods
xor
insl
test
xchg
aas
dec
mov
sub
fwait
xchg
jle
imul
bound
mov
cli
pop
imul
rcrl
dec
inc
insl
popa
xlat
xchg
jp
push
xor
addr16
jmp
pusha
leave
andb
in
push
cwtl
lea
sub
ret
aad
cmp
mov
js
mov
lea
inc
cld
mov
mov
push
inc
rcll
cmp
ss
jl
pushf
push
mov
fdivrp
fs
insl
add
pop
cmp
fwait
scas
idivb
jge
pop
int
outsb
lret
in
xchg
xchg
in
loopew
icebp
loopne
mov
xor
xchg
pusha
js
ret
das
cmp
adc
sub
dec
push
out
mov
or
ret
add
xchg
mov
lret
arpl
cmp
into
push
test
ret
push
inc
sub
jmp
mov
xchg
jl
movsl
or
mov
mov
jl
mov
push
cmp
add
cmp
mov
xlat
sub
mov
and
fs
ss
mov
out
pop
inc
mov
icebp
mov
mov
cs
push
sub
out
adcl
shrl
mov
andb
mov
add
dec
fldl
pop
jae
in
int3
pop
jb
push
mov
xchg
mov
pop
sbb
add
int
pop
loopne
jae
add
dec
or
lea
pop
sub
stc
stc
push
dec
loopne
sub
inc
mov
mov
popa
pop
outsl
push
punpcklbw
push
insl
mov
push
mov
xor
push
icebp
adc
push
and
repz
loopne
loope
out
aaa
push
add
xor
fsubs
enter
stos
iret
imul
add
inc
xor
icebp
stos
jnp
jb
pop
ss
push
out
jae
cmpsl
jo
xchg
sarl
les
push
popa
pop
and
sub
or
fiadds
lea
or
out
repz
xchg
cld
mov
xchg
lods
dec
xchg
or
xor
push
test
out
addr16
jle
inc
jbe
repnz
mov
add
loopne
dec
inc
inc
jb
xchg
push
rcl
ljmp
lods
mov
sbb
push
iret
adc
jae
mov
andl
pop
jg
push
js
cmc
testl
push
cmpsl
mov
ljmp
iret
cmp
jb
jecxz
or
mov
push
aaa
stos
movsb
out
cltd
ret
rcrl
jno
stos
pop
pop
lea
cmp
and
repz
mov
mov
jnp
pop
je
xor
pop
sub
repnz
std
mov
divb
xchg
loop
and
dec
not
jge
adc
sbb
cmpsb
test
repz
xor
mov
jne
cmp
outsl
push
or
dec
loop
dec
lock
fwait
rcl
xchg
stc
xchg
sub
rorb
add
repnz
nop
scas
dec
add
push
das
lret
ss
daa
mov
inc
scas
mov
popa
std
inc
inc
xchg
mov
out
rol
cltd
mov
push
xor
push
sbb
clc
fmuls
cli
loopne
fistps
sbb
mov
pop
mov
mov
ss
jle
jge
ret
pop
pop
mull
adc
and
in
mov
loope
in
aad
xor
and
hlt
dec
je
xor
fimull
jae
ret
xchg
in
mov
cld
or
jecxz
and
lods
mov
xor
push
push
jne
outsb
mov
sbb
adc
pop
mov
mov
push
cmp
test
and
jg
pushf
mov
push
or
pop
je
cmp
popf
push
push
cmpsl
pop
mov
addl
xchg
mov
fstp
pop
sub
pop
into
pushf
loope
ret
mov
and
mov
xchg
mov
mov
mov
push
add
daa
xchg
mov
scas
push
shll
subb
mov
rclb
popa
mov
aad
fisubrl
sbb
les
add
movsb
in
ficoms
sub
mov
out
sbb
push
sahf
jns
into
push
stc
add
mov
cwtl
cmp
pushl
and
popa
jns
mov
arpl
je
loop
adc
lds
mov
cmc
push
inc
arpl
repz
pop
ret
add
add
jb
jns
inc
xchg
push
jne
cmp
jnp
aaa
sub
inc
enter
aad
push
xor
mov
cmp
cwtl
fs
aaa
movsl
std
lods
shld
cmp
push
loop
dec
pushf
inc
push
sti
popf
insl
aaa
mov
mov
lods
inc
jbe
fsubrs
into
ljmp
imul
sub
addb
jge
push
cmc
loopne
cmp
cmp
test
dec
or
addr16
inc
pop
pop
inc
add
rcrl
mov
add
xchg
and
and
xorl
cmp
sub
and
inc
fbstp
icebp
stos
adc
es
js
and
inc
pop
cs
clc
add
mov
repz
jecxz
shlb
ljmp
pop
je
hlt
cmp
fcomp
out
cmp
jnp
adc
and
ja
stos
nop
sahf
inc
mov
pop
xor
jb
jg
leave
das
pusha
xor
and
mov
pop
stc
mov
aas
andl
jnp
lret
cmpl
ficoml
movsl
jp
xor
enter
pop
or
loop
cmp
std
stos
sbb
aad
out
dec
and
cmpb
add
sub
sarl
shlb
sarl
mov
mov
and
ja
sub
mov
fisubrl
mov
push
sbb
and
test
and
out
icebp
xchg
cmp
adc
push
ret
xor
popf
sbb
daa
cmc
cmc
sbb
mov
ljmp
mov
mov
imul
push
sub
sarl
inc
xor
jne
add
cmpsl
into
fs
nop
jl
inc
sti
jae
dec
adc
inc
mov
pop
aaa
mov
xor
call
dec
nop
jl
add
lock
pop
rcl
aas
dec
xchg
cmp
cwtl
push
int3
dec
lret
mov
popa
fnsave
les
bound
lea
dec
in
idivb
dec
sarb
sbb
rorb
xor
aad
xor
ja
fldcw
jns
push
jge
dec
dec
xchg
lods
clc
lcall
mov
xor
xchg
inc
movsb
dec
data16
scas
or
cld
nop
adc
jae
ja
popf
inc
xchg
xchg
repz
inc
sub
call
leave
popf
rclb
aas
pop
lahf
roll
ficomps
jne
inc
sahf
dec
js
xchg
xor
push
stos
stc
xchg
add
xchg
das
dec
jnp
enter
add
and
std
lahf
jo
jae
ja
and
cmc
xor
push
fldl
sub
cmovl
sarl
loopne
lds
lret
ljmp
enter
movsl
shrl
mov
cli
cmpsl
mov
not
in
pusha
sarb
jno
and
xchg
mov
out
pop
inc
lds
xchg
jb
popf
test
bound
arpl
jns
fcoms
lcall
sub
and
dec
out
enter
arpl
lea
popf
lcall
sbb
inc
out
add
mov
inc
ret
sarb
subl
insl
test
cmp
xor
jns
imul
sahf
in
frstor
ljmp
inc
dec
mov
ret
ds
in
mov
cmp
pop
inc
fwait
pop
jmp
int
fiadds
sbb
nop
movsl
mov
loope
mov
pushf
or
add
xchg
lcall
cmp
into
jg
inc
aad
fistpll
dec
add
and
add
dec
int
lds
cwtl
or
xor
je
xorl
xchg
cmpsb
ret
aaa
sahf
mov
inc
pop
mov
nop
testb
movsl
xor
insl
xchg
mov
push
adc
push
ja
pop
cmc
cmp
xchg
xchg
movsl
adc
pop
mov
hlt
popa
shr
stos
xor
pop
lcall
repz
push
or
pop
mov
lcall
jge
dec
xor
cld
aam
or
sub
xor
outsl
aas
insl
cwtl
int3
rcrb
scas
push
pop
test
hlt
insl
ljmp
repnz
add
cmc
xor
scas
out
mov
xchg
mov
int3
jle
ljmp
subb
cs
sti
xlat
push
pushw
dec
ljmp
cwtl
cli
mov
mov
jnp
imul
aam
daa
cmp
repz
mov
cmpb
or
add
out
jb
aad
dec
xchg
fstpt
sbb
pushf
rolb
shrb
cmp
xchg
jg
jmp
xor
stos
lahf
shlb
cmc
sub
jle
pop
cltd
clc
lods
jae
mov
mov
sub
mov
cmpsl
cmp
xor
jmp
dec
dec
sub
repnz
loope
loope
fcomp
sub
mov
out
inc
or
cmc
xor
sub
sub
sbb
imul
jl
cmpsb
jg
mov
arpl
mov
mov
fcomps
pop
cmp
mov
enter
inc
pop
and
dec
jae
push
fidivrl
and
mov
cmpsb
cmpsl
cld
ret
js
jne
lret
cld
pop
sub
cltd
xor
pop
push
dec
cmpsl
mov
mov
push
push
push
jl
iret
and
xchg
movsl
jmp
or
test
dec
stc
add
mov
push
fadd
nop
je
xchg
pop
adcl
pop
cmp
nop
xchg
mov
mov
and
loop
adc
xchg
fnstenv
mov
scas
or
in
test
ds
lods
dec
cmp
shr
jmp
mov
mov
in
jbe
pop
cmpsl
xchg
jae
jne
rorb
adc
push
dec
mov
xchg
shlb
fistpll
adc
jl
push
inc
jae
shl
mov
jb
int
aad
dec
int
loopne
xchg
out
jle
jb
mov
cmp
xchg
clc
iret
mov
and
mov
push
cmp
jo
or
jnp
enter
out
nop
fwait
inc
jl
data16
scas
popa
add
pop
lock
mov
push
into
or
mov
xchg
add
xor
std
int3
fimuls
clc
xor
jno
or
push
fisubrs
pop
inc
test
sub
pop
and
or
adc
in
dec
js
stc
mov
or
xor
mov
lahf
xchg
xchg
xchg
mov
sbb
jecxz
push
mov
cmp
mov
push
insl
fs
repz
mov
dec
push
mov
repz
lret
push
lds
inc
sbb
fcomps
jmp
xchg
enter
mov
pop
cwtl
inc
arpl
data16
sbb
bound
fistl
mov
ror
push
xor
out
inc
sub
negl
lret
pop
push
xchg
data16
pop
adc
cs
popf
cmp
andl
jp
pop
sahf
pop
fcmovu
arpl
xor
ret
pop
mov
fwait
sti
in
or
xchg
adc
mov
fdivl
sarb
mov
and
inc
aas
adc
outsb
pop
cltd
ja
mov
pop
ret
pushl
jmp
jl
dec
popf
cltd
nop
jl
call
mov
adc
cmp
and
add
sbb
lret
std
cmp
add
jae
lret
dec
imul
jl
adc
clc
insl
cmp
jecxz
mov
into
jno
int3
fisttpll
or
fneni(8087
shrb
xor
lcall
cs
insl
push
les
popf
xchg
lcall
cmpsl
xor
jae
mov
cmc
insl
xchg
aas
jmp
mov
fiadds
sub
aas
jg
ljmp
xor
pop
lds
shl
sbb
loope
dec
add
add
pop
push
lcall
in
in
out
in
into
xor
pusha
test
imul
push
cli
mov
inc
gs
or
divb
add
adc
xchg
loop
pop
js
aaa
lea
fs
fwait
xor
insb
dec
test
sti
stc
adc
pop
enter
fisubs
adc
and
fildll
dec
cmpsl
popf
fs
data16
popl
add
pushf
jae
fstpl
or
lret
cs
lock
and
aaa
test
jg
adc
lcall
shrb
jne
insb
xchg
lods
mov
jp
aas
cmp
cmpsl
push
adc
mov
adc
insb
dec
mov
push
and
jl
push
fidivs
sbb
dec
jbe
pop
inc
mov
hlt
data16
mov
cld
loope
les
loope
mov
cmc
push
into
jns
and
pop
fists
cmp
mov
dec
lret
jbe
test
sub
mov
mov
mov
popa
addb
jle
jecxz
sub
xchg
mov
lret
mov
mov
push
imul
stos
outsb
movsl
mov
loope
popa
arpl
jecxz
lret
xor
repnz
inc
add
pop
leave
push
dec
das
insl
sti
pop
dec
adc
push
push
fstl
shll
hlt
jmp
lahf
cmp
cmp
or
mov
jae
out
mov
testb
mov
adc
repz
clc
and
sbb
pop
fisubs
subb
roll
cmpsb
cwtl
icebp
cld
inc
sub
cmp
inc
or
loopne
fwait
popa
aaa
fildl
xchg
jns
es
mov
sbb
dec
lods
fisubrl
out
push
daa
hlt
pop
int
lock
insb
mov
cmp
push
cmp
push
cmp
and
call
jnp
addr16
fmull
test
sbb
dec
stos
insl
enter
push
aad
out
outsl
std
xor
xchg
sahf
pop
out
adc
and
fwait
jle
mov
ljmp
dec
loop
jp
inc
mov
dec
test
inc
inc
or
adc
dec
and
outsb
ja
aam
pusha
mov
and
adc
lds
or
xor
in
je
or
mov
xor
inc
sub
shrl
xor
sbb
xchg
in
mov
sbb
sub
fwait
adc
jns
lds
leave
adc
into
int
iret
dec
ret
loope
lock
test
stos
or
data16
sbb
add
fisubrl
xor
jbe
loope
rorl
enter
repnz
std
add
out
and
mov
jo
sub
lock
test
pusha
bt
cld
dec
sti
mov
push
out
pop
pop
es
aam
fdivr
lahf
xchg
or
sbb
jbe
mov
push
in
bnd
xor
mov
scas
test
inc
rcrb
mov
mov
xchg
push
xchg
leave
shlb
mov
jo
dec
cs
inc
fwait
cld
inc
stos
add
mov
add
cs
and
fidivl
aaa
clc
fcmovbe
dec
out
jae
xchg
jo
cli
jno
push
lods
imul
xchg
aas
scas
pop
ljmp
fisubrl
xchg
or
dec
mov
jne
pop
sbb
cmp
adc
scas
mov
pop
xor
testl
jns
adc
or
push
or
pop
lds
jo
imul
push
pop
mov
xor
dec
addr16
outsl
mov
stc
fdivrl
lods
sbb
lcall
ljmp
das
cmpsb
mov
and
aas
imul
xchg
cwtl
push
subl
mov
add
pop
add
aas
xchg
dec
sub
addl
les
jno
cmpsl
loope
pop
int3
xchg
mov
ret
stos
mov
adc
jno
adc
cmp
adcb
int
mov
inc
jg
fimuls
sub
jae
add
cs
mov
mov
popl
cmp
pop
stos
sbb
and
addr16
fmul
cmp
icebp
insl
sbb
add
lods
lods
lret
rclb
jae
and
push
jae
cmpsb
dec
leave
cs
sub
jle
push
pushf
pop
or
es
inc
xor
sarl
mov
and
pop
pop
push
js
out
mov
cwtl
adc
hlt
into
cltd
add
stos
fsubl
shll
shll
jmp
aas
pop
jno
lods
out
js
pop
jmp
dec
out
adc
sti
push
push
in
out
ljmp
pop
mov
test
aad
rcll
std
dec
jno
adc
mov
sarb
mov
fisubrs
or
mov
mov
mov
test
rorb
mov
lret
mull
sbb
xchg
inc
lock
cmpsl
dec
mov
cmp
adc
cld
or
es
jns
push
dec
mov
jl
mov
push
add
mov
int
push
cs
push
and
scas
subb
loopne
mov
xor
hlt
in
push
dec
xchg
xor
adc
mov
ret
int3
jmp
testl
xor
out
int3
fwait
sbb
pop
push
clc
daa
and
test
xchg
cmpsl
push
sbb
fdecstp
mov
mov
cmp
sub
dec
sti
dec
or
pop
xchg
inc
std
mov
mov
inc
xor
data16
jne
mov
jl
jge
repnz
jecxz
xor
jl
adc
jle
icebp
scas
outsl
fdivrs
xorb
dec
sbb
push
test
xchg
fistl
loop
inc
dec
xor
add
addr16
add
mull
outsb
xor
and
jne
adc
or
js
mov
adc
xchg
ss
pushf
and
fistl
push
mov
std
adc
xchg
into
adc
mov
fdivr
ret
cmp
std
pop
js
les
arpl
add
gs
icebp
dec
stos
in
or
ss
aaa
push
sahf
pop
jne
iret
pop
mov
loopne
mov
push
aaa
inc
outsl
or
mov
popf
sbb
mov
insb
cmp
xchg
je
scas
ret
in
sub
fisubl
out
test
aad
int3
pop
push
out
adc
rclb
push
or
and
gs
or
push
loopne
mov
cli
or
add
je
insb
mov
je
fstp
movsb
and
dec
das
cmpsb
dec
push
stos
cmp
mov
cli
cltd
pop
push
lret
ret
aam
dec
lret
mov
lea
push
mov
test
xchg
sbb
cmp
into
out
sbb
fcomps
push
add
decl
cmp
enter
inc
dec
fdivrs
jo
dec
xchg
sbb
sbb
loop
pop
jne
add
repz
jae
or
aas
rolb
xchg
in
xchg
dec
mov
daa
aad
or
xor
fwait
mov
aad
mov
xchg
fs
adc
test
cmpsb
pushf
dec
divb
mov
jp
pop
push
mov
daa
push
incb
incb
xorb
and
push
and
add
pop
sub
push
aam
movsl
mov
scas
movsl
and
mov
aaa
pop
call
stos
fstp
xor
push
pop
mov
pop
outsl
sub
inc
xchg
cmp
sbb
mov
cmp
lret
adc
lahf
pop
ljmp
or
stc
pop
or
out
and
inc
rorb
sti
lahf
call
test
adc
adc
mov
sub
jnp
mov
jmp
adc
mov
or
jmp
jl
mov
out
inc
xor
push
addb
lea
gs
shl
adc
mov
popa
std
adc
imul
add
xchg
or
test
bound
stos
xchg
jbe
cmp
inc
dec
fcoms
nop
mov
jl
add
and
lcall
aad
sub
outsl
add
mov
stos
or
ret
xchg
sahf
or
add
in
hlt
je
in
sbb
test
pop
sub
or
jne
mov
scas
add
stos
jp
push
or
and
sbb
add
mov
sti
leave
mov
adc
clc
mov
sub
jp
jae
mov
aaa
mov
pop
ss
lret
cmp
ret
push
out
mov
lcall
cmc
out
pop
jae
iret
scas
loopne
ja
test
inc
pop
mov
xchg
mov
xor
rorl
loope
enter
pop
int
and
sub
pop
and
insl
mov
mov
popl
xchg
int
fsts
xlat
mov
dec
push
push
and
jae
int3
pop
adc
adc
idivl
stos
jmp
xor
jge
pushf
mov
push
mov
call
sahf
mov
dec
les
mov
dec
aaa
inc
das
push
hlt
cmc
aam
add
shrl
fscale
or
push
or
loopne
add
movsl
xchg
int
ret
shll
lahf
adc
lcall
and
mov
into
mov
mov
and
in
xor
rclb
sbb
cmpsb
or
xchg
cltd
lret
inc
jmp
inc
std
xor
insb
popl
stos
pop
sti
xor
adc
mov
dec
je
xchg
cld
add
sahf
or
push
test
ficoml
add
adc
insb
test
pop
aas
mov
mov
adc
les
aas
test
dec
and
xorb
add
cmp
sub
xchg
adc
flds
mov
fcmovnu
sahf
jmp
mov
icebp
loopne
shl
das
sarl
jge
lods
jnp
cmp
jbe
mov
sbb
push
mov
ret
ds
xor
pusha
jl
jl
mov
mov
scas
add
and
push
dec
adc
scas
xchg
sbb
mov
std
push
or
sub
sub
push
sbb
inc
gs
dec
jle
mov
or
bound
std
fldt
shl
enter
adc
dec
add
cwtl
repnz
mov
out
xchg
leave
jbe
jmp
adc
pusha
fcmovnbe
xchg
int
mov
idiv
pop
mov
xchg
push
or
xor
mov
out
sub
js
and
in
bound
sbb
fwait
or
inc
sbb
call
lret
insb
or
fbld
mov
sbb
movsl
sar
jb
popa
imul
sarl
inc
fsubs
adc
xchg
out
mov
inc
leave
mov
imul
dec
jl
nop
ret
mov
popa
mov
hlt
lret
in
mov
dec
cmp
data16
mov
enter
dec
sbb
cld
sub
es
movsb
mov
out
fucomip
scas
xchg
cmc
cmp
fwait
pop
mov
jb
js
dec
mov
mov
pop
test
xchg
test
sbb
push
sahf
arpl
cmp
adc
xor
sbb
mov
sar
mov
pop
fimuls
jnp
adc
mov
ror
and
test
movsb
jb
and
fsubrp
ljmp
ss
rclb
sbb
add
pop
ss
jne
aas
shrl
jmp
stos
popa
jne
leave
imul
sahf
faddl
insb
inc
inc
das
dec
insl
mov
add
cmpsb
push
enter
repnz
pop
xor
add
mov
mov
mov
aaa
mov
lcall
inc
js
cli
mov
lahf
insb
dec
sti
adc
push
xchg
jmp
rcr
call
shrb
cld
xchg
sbb
int3
aas
iret
mov
add
icebp
in
or
sbb
xor
outsl
repz
lock
and
adc
ror
hlt
mov
jecxz
push
movsl
mov
aas
ja
ja
cmp
push
cmp
das
out
popa
inc
in
stos
and
jg
xchg
xor
or
xor
mov
adcb
call
out
adc
sarb
sub
mov
adc
push
js
fcmovb
ret
outsl
sbb
adc
rcrl
test
lods
sahf
imul
xor
xchg
leavew
jmp
or
xor
inc
daa
das
enter
mov
sub
shl
mov
fists
push
imull
mov
dec
pop
or
mov
dec
imul
or
add
or
mov
push
mov
add
cs
in
add
nop
lahf
mov
jp
dec
in
fnstenv
js,pn
cwtl
cmc
lods
mov
mov
mov
lea
pushf
jmp
out
lcall
cmp
ss
dec
jmp
leave
jnp
push
cmpsl
add
pop
scas
enter
in
dec
pop
aas
movsb
ja
sub
dec
or
sbb
pop
fcompl
fisubrl
pusha
pop
inc
mov
inc
or
pmulhw
jns
pop
push
ljmp
movswl
fucomi
cmp
inc
lcall
stos
jno
xor
or
test
shlb
es
mov
cld
jge
inc
sub
mov
cwtl
xor
dec
jp
xchg
ja
push
xchg
dec
lock
mov
aad
js
mov
and
mov
adc
out
clc
sub
sete
sbb
sub
andl
inc
ficoms
cmp
inc
xorl
ds
or
imul
push
stc
int
push
sub
pushf
aad
sti
sub
mov
fstl
pop
ja
mov
push
jle
lock
rcrl
mov
or
jb
scas
clc
orl
dec
cmp
dec
push
add
pop
push
out
jge
inc
stos
pop
loopne
jns
dec
cmp
ja
int
dec
in
divl
sub
pushf
jne
pushf
jl
mov
add
jle
jle
xor
jno
lcall
lret
clc
mov
mov
sarb
cltd
pop
push
sub
jbe
pop
xchg
push
and
cli
out
aam
mov
hlt
pop
nop
ss
mov
shl
hlt
and
daa
sahf
out
push
jmp
adc
jp
out
mov
cltd
jg
xor
subb
adc
fisttpll
stos
fsubrs
arpl
dec
sub
pusha
loope
arpl
jp
loope
lods
push
rcll
out
cld
pop
xor
popa
adc
jg
mov
push
insb
mov
or
dec
fwait
outsb
ss
jle
les
out
jbe
sbb
insl
push
ret
lea
sti
icebp
in
cmp
sub
mov
test
icebp
push
jle
ds
jecxz
mov
js
icebp
cmpsb
sbb
xchg
push
subl
cwtl
add
je
imul
mov
cli
sahf
push
xchg
inc
loop
mov
adc
dec
mov
mov
mov
push
jo
and
xor
in
pop
lea
xchg
dec
ljmp
sub
insb
mov
cltd
add
shld
ret
stos
mov
movl
cwtl
outsl
ljmp
stos
push
cmc
js
or
nop
inc
scas
cmp
sarl
pop
pop
dec
int
outsl
jge
sub
aad
ret
jmp
packssdw
aad
aas
mov
lods
mov
dec
icebp
adc
fwait
xor
sbb
arpl
shll
dec
out
andl
mov
es
cmp
pop
insl
cmp
adc
and
inc
pushf
or
mov
dec
cmp
pop
imul
clc
pop
pop
cmpsb
inc
sbb
jp
imul
dec
ret
pop
jno
sbb
pop
shll
mov
or
addr16
clc
dec
test
push
insb
out
imul
xchg
test
ficoml
jle
data16
in
clc
out
pop
mov
loop
sub
mov
jno
test
ljmp
sub
fwait
insl
push
out
cwtl
xchg
cmp
xor
add
aaa
cld
mov
fiadds
fsubs
sti
cwtl
mov
addr16
pop
pop
mov
jg
sbb
push
cs
mov
repz
insb
cld
jmp
dec
cmc
cwtl
sbb
adc
lret
or
pop
cmp
popf
subb
cmp
push
jg
insb
pushf
enter
lahf
ficoml
push
rclb
fdiv
cmp
je
in
std
lock
xor
jb
sbb
add
sbb
out
jecxz
mov
or
jnp
das
or
call
test
pop
clc
lock
mov
enter
pop
dec
sti
adc
shl
sbb
test
inc
fs
aas
mov
arpl
sub
or
in
movsb
xchg
fsubl
or
cmc
popa
jmp
or
aaa
das
sub
imul
sbb
mov
pop
mov
rcr
loop
push
pop
add
es
cmp
ljmp
mov
jecxz
stos
push
aaa
mov
push
test
data16
pop
mov
jno
and
lcall
pop
pop
lahf
jmp
dec
fwait
scas
jb
rolb
add
scas
add
pop
adc
jae
sub
mov
mov
dec
fs
dec
or
mov
jno
mov
ror
cmc
pop
xchg
pusha
adc
fisubl
enter
or
loop
fldcw
cmp
inc
xchg
pop
and
repz
mov
pop
stos
xchg
int3
aas
add
or
xchg
xchg
inc
fiaddl
jp
dec
jo
inc
and
pop
lds
ret
sbb
ja
lds
divl
sbb
dec
cmpsb
mov
mov
lret
shl
inc
cs
cli
fwait
out
fisttpll
add
hlt
xchg
dec
xchg
jp
and
xor
ret
loope
mov
hlt
mov
mov
and
adc
push
testl
das
mov
mov
push
mov
push
jns
stc
movsb
dec
push
mov
jge
frstor
mull
in
xchg
aad
cmpsl
fiadds
mov
jb
or
test
xor
ljmp
into
sahf
mov
jae
xor
mov
adc
mov
loopne
mov
stos
rcl
pop
sbb
mov
arpl
dec
or
bound
shl
in
cmp
aaa
and
mov
icebp
outsb
sbb
jle
stos
insb
mov
xor
stc
sub
mov
aaa
adc
gs
cmp
mov
roll
fldenv
xchg
and
sub
xchg
and
push
xchg
xlat
icebp
add
mov
cmpsb
add
es
push
loop
mov
sub
and
and
or
ret
bts
pusha
lahf
fs
xchg
cmp
dec
mov
dec
add
mov
xchg
fnstcw
mov
mov
and
xchg
std
iret
adc
aam
and
das
and
inc
lret
out
and
cwtl
ret
or
leave
pusha
fucom
or
data16
hlt
mov
scas
in
mov
sahf
cmpsb
jo
mov
jbe
rcr
add
pushf
aam
aad
or
and
loop
out
push
cmp
aad
dec
cmp
sbb
cs
insb
mov
pop
push
testl
lods
cvtps2pi
xor
adc
push
hlt
push
mov
es
xchg
notl
lret
inc
addr16
jbe
sbb
inc
ret
or
std
inc
xchg
adc
pop
dec
daa
aad
adc
mov
mov
faddl
mov
ret
scas
adc
dec
mov
pusha
push
inc
test
dec
fbld
cmpsb
mov
jecxz
jge
inc
cmp
repz
imul
inc
int3
lahf
adc
popf
test
mov
pop
imul
mov
mov
clc
insl
xchg
daa
addr16
shrb
push
cld
jecxz
sub
jne
loopne
clc
jno
cmp
add
jmp
mov
ljmp
scas
pop
mov
xchg
dec
pop
in
sbb
lods
popf
mov
in
inc
or
pop
bound
test
out
insl
hlt
clc
or
pop
mov
xor
inc
pop
xchg
and
xchg
fcmovnbe
inc
enter
adc
sub
daa
mov
push
xor
lods
test
aam
pop
cld
adcb
mov
aad
pop
add
cwtl
das
xor
iret
aad
xor
inc
mov
loopne
arpl
cmp
aas
in
andb
dec
inc
xor
sbb
sbb
jb
lods
ret
cmp
sbb
arpl
aas
dec
movsb
xor
mov
cwtl
xchg
movsl
faddl
dec
dec
pop
dec
popa
int
stos
lret
and
adcl
dec
jbe
sbb
cli
mov
push
xchg
mov
inc
mov
pop
xchg
dec
testl
or
inc
sbb
pop
jbe
shl
jl
xor
jne
xor
add
imul
mov
mov
testl
shll
lea
imul
addb
movsl
and
or
pop
adc
inc
jb
arpl
add
sub
dec
or
data16
inc
fwait
cld
mov
sbb
xor
push
lcall
cmp
xchg
daa
int
mov
push
mov
cmp
arpl
jbe
mov
mov
and
mov
sti
push
adc
fstps
shl
add
popa
shll
sub
mov
fldcw
lahf
shlb
call
hlt
sub
mov
xchg
mov
jo
jmp
push
sub
scas
je
lods
push
pop
clc
adc
cmp
int3
cmp
inc
pop
adc
jne
mov
lahf
cmp
mov
push
sub
jae
cmpsb
movsb
jl
mov
stos
popa
pusha
stos
rcrb
adc
pop
sub
xor
lods
and
inc
enter
push
jg
test
add
in
xor
xchg
es
adc
inc
int3
jbe
loopne
push
vmread
mov
in
mov
push
push
mov
clc
jle
push
cld
ja
dec
cmp
arpl
push
mov
inc
fistpl
out
mov
and
and
rcrb
inc
mov
pop
mov
je
add
or
jmp
push
rdtsc
xchg
pop
cmpsl
jl
mov
dec
rcll
mov
push
push
jb
mov
xor
dec
repz
mov
sbb
cmp
dec
stc
inc
adc
sub
mov
adc
xor
mov
fisttps
pushf
out
idivl
sub
push
in
adc
shll
xor
das
xchg
mov
insl
sbb
lret
test
push
pop
lcall
icebp
pop
mov
outsl
scas
int
adc
aas
int3
jl
adc
fsubr
cmpsb
jbe
jg
mov
lret
movsl
jl
int
dec
adc
cmp
sub
es
add
popa
inc
aas
jecxz
add
and
adc
out
pop
pop
push
cmpb
hlt
dec
incl
popa
les
cmpb
addr16
test
adc
xchg
pop
clc
mov
adc
adc
outsb
cmpsb
lock
sbb
and
xchg
inc
aam
mov
pop
mov
cmp
mov
pusha
sahf
sub
repnz
sbb
sub
dec
pop
in
push
bound
aad
cmp
imul
mov
mov
push
inc
out
jle
jge
fdivr
cmp
ja
sbb
fucomip
aad
add
mov
mov
adc
out
js
cli
test
mov
pop
test
adc
pop
iret
sbb
repnz
mov
out
dec
pushf
loop
ljmp
mov
push
push
lret
in
rcl
sub
sete
cli
sbb
ret
jne
loopne
clc
jp
popa
xor
mov
pop
call
jmp
pop
in
mul
arpl
cs
push
mov
pop
stc
mov
and
dec
xchg
nop
sbb
mov
nop
push
jg
jl
and
mov
stos
cmp
cmpsb
add
jecxz
arpl
sub
pop
jne
mov
or
pop
movsb
jo
inc
stc
lahf
loop
dec
inc
xor
ret
aam
int
mov
cwtl
mov
int3
sbb
or
adc
fcomps
outsl
mov
and
jae
neg
aam
push
add
mov
push
push
mov
xor
cld
inc
mov
xchg
pop
sub
lahf
mov
push
mov
mov
jg
stos
sbb
pop
mov
ljmp
test
arpl
lock
sbb
popa
push
daa
sbb
ja
sahf
lret
pop
fnstsw
xlat
clc
sub
jae
push
movsl
mov
loope
mov
xor
fs
inc
loopne
clc
ja
mov
insb
jno
cmp
and
rcl
scas
push
sub
ret
ljmpw
icebp
aas
rcl
xchg
push
xchg
insb
jmp
insl
cmp
loope
arpl
xor
dec
call
push
push
js
std
push
pop
xchg
and
jecxz
xchg
xor
jbe
out
sbb
push
xlat
test
shlb
mov
loopne
ret
test
jg
leave
mov
pop
jno
insb
xchg
xchg
inc
iret
xor
xlat
sbb
sbb
sbb
fisubl
int3
shrb
mov
cmp
lret
loop
push
sbb
dec
push
mov
fisttpll
add
out
push
jae
bound
jmp
jno
push
lods
gs
loop
popa
cmpsb
push
adc
jns
dec
incb
fidivrs
adc
loopne
loop
insb
sub
je
sbb
icebp
inc
lret
scas
adc
imul
xor
mov
and
sarb
adc
ljmp
xchg
aaa
popf
pop
sub
push
dec
cmpsl
pop
insl
dec
dec
daa
sub
pop
cmp
jae
xor
pop
adc
mulb
mov
push
dec
out
out
mov
push
ljmp
test
cld
sti
andl
hlt
add
adc
inc
pop
shrl
mov
jl
sub
pop
das
cmp
lret
inc
pop
sub
arpl
adc
add
xlat
aas
dec
jb
mov
mov
mov
inc
add
xchg
addl
adc
loop
loope,pt
add
hlt
mov
sbb
inc
push
xchg
movsb
pop
hlt
xor
inc
mov
nop
stos
int
push
sbb
into
mov
push
push
or
bound
xlat
adc
sbb
inc
and
xor
mov
dec
xor
idivl
cmp
jg
ret
data16
fcmovnbe
push
cmp
sbb
pop
frstor
lock
dec
jbe
loope
sbb
mov
sub
ljmp
cmc
mov
pop
fcmovu
jne
push
out
insb
push
shl
or
repnz
mov
mov
pop
add
shll
pop
sbb
int
xchg
jp
in
or
xchg
jns
cmp
xchg
test
dec
mov
loop
pop
or
subl
in
sbb
cmp
hlt
pushf
andb
cli
adc
sbb
insb
into
cmc
jg
sbb
ret
add
jnp
outsl
fwait
xor
ljmp
in
lret
mov
popa
nop
sub
jle
lahf
fistps
xchg
xchg
mov
jnp
fs
stos
jge
lea
pop
fcoml
cmp
test
jae
insl
xchg
sub
push
testb
push
push
sub
add
test
adcl
sub
pmaxub
fucom
test
insb
ret
cltd
xchg
insl
xchg
js
fisubl
lret
data16
add
aam
out
fs
ret
andb
sbb
add
mov
popa
add
or
cmp
mov
mov
cmp
cmp
and
dec
inc
test
mov
mov
cmp
fnstsw
cmpl
imul
daa
jbe
cmovl
movsl
sti
movl
aaa
aaa
xor
add
push
ljmp
imul
and
addr16
stos
in
push
add
mov
ret
and
inc
js
pop
mov
and
mov
push
sahf
jp
pop
call
out
sbb
adc
in
fnstenv
outsb
xchg
sub
jge
and
push
rcrb
popf
mov
jae
in
xor
pop
sahf
pop
push
stc
daa
int
xchg
ljmp
sub
jecxz
xchg
call
mov
cmpsb
pop
arpl
or
out
out
mov
lock
rcrb
push
mov
aad
jmp
cmpsb
pop
mov
xchg
add
scas
lock
push
lods
pop
jecxz
aaa
pop
jno
jl
cmc
loop
jge
mov
fbld
sbbl
inc
repz
sub
add
mov
les
mov
or
xchg
jno
jle
mov
mov
cmp
popf
and
xchg
sub
scas
dec
inc
out
inc
popa
test
iret
and
mov
loopne
or
jl
and
pop
sub
mov
sahf
or
daa
adc
jg
xor
dec
int3
mov
subb
add
leave
mov
pop
fldcw
and
mov
rcrl
mov
cs
add
mov
shl
idivl
mov
mov
xchg
push
pop
cs
mov
mov
cld
jbe
xor
fcompl
push
adc
aam
push
fcmove
mov
add
pusha
mov
sbb
mov
mov
or
sahf
dec
add
mov
add
call
xchg
adc
outsb
pop
es
or
push
fidivl
inc
xor
mov
lds
add
inc
add
fildll
test
xor
pop
sbb
sub
mov
push
ret
xor
mov
inc
sbb
test
mov
cmp
mov
fs
std
mov
outsl
mov
je
test
clc
push
push
jb
mov
cli
cltd
popa
xor
xor
pop
xchg
mov
aas
cmp
and
dec
clc
jbe
lcall
xor
imul
leave
sbb
clc
push
fcoml
pushf
cwtl
repnz
cmpsb
inc
jno
or
lret
in
xor
mov
mov
and
sbb
fldl
xchg
cmp
sub
push
or
aas
jle
inc
sbb
das
cmc
js
adc
mov
dec
fcom
fidivs
jae
jg
popa
push
lret
push
mov
mov
pop
inc
add
in
mov
stc
shrb
cli
in
jl
ljmp
js
cmp
push
arpl
out
popf
sbb
or
cmp
jp
aam
adc
adc
ret
or
stos
xchg
lret
mov
mov
ret
sbb
gs
aad
imul
mov
xchg
cwtl
add
inc
or
out
sub
push
and
mov
leave
lock
popa
faddl
mov
sarb
jmp
loopne
dec
mov
lret
aad
sbb
xchg
mov
bound
imul
leave
addb
inc
mov
js
fildll
add
lock
ja
icebp
sahf
pop
push
lds
and
fwait
out
test
leave
jmp
adc
into
scas
daa
inc
mov
pushf
out
iret
push
pop
data16
mov
shll
mov
stos
mov
mov
add
xor
jo
and
pop
inc
sub
pusha
bound
sahf
outsl
mov
sbb
jae
pop
jno
add
cs
xor
cli
nop
cli
push
mov
jb
repnz
jae
mov
test
loope
ja
js
mov
mov
push
inc
sahf
shll
sahf
stc
cmpsl
cmp
jne
jbe
iret
sub
or
insl
fbstp
popa
cs
mov
in
icebp
outsl
xor
imul
jecxz
das
pop
pop
or
pop
ja
sti
add
je
pusha
mov
stos
mov
add
dec
dec
dec
mov
cmp
pop
loop
xchg
sub
fsubr
icebp
push
push
or
in
cli
inc
dec
mov
push
fsubrl
inc
int3
sub
mov
jns
lea
and
mov
xor
das
cmc
out
shlb
ficompl
jno
nop
cmp
mov
rol
dec
xchg
mov
jns
aaa
mov
jns
mov
xor
loopne
xchg
push
xor
mov
scas
in
push
adc
dec
aas
les
cmp
pop
lea
pop
dec
mov
das
arpl
push
shll
dec
dec
loope,pt
push
or
inc
cltd
stos
mov
and
and
stos
mov
xchg
push
cmp
out
xchg
jmp
hlt
mov
in
xchg
cwtl
aaa
mov
rorb
and
xchg
int
mov
push
mov
adc
xor
lcall
mov
sbb
rclb
and
sub
dec
sahf
adc
sbb
outsl
pop
xor
xchg
inc
mov
mov
movsl
stos
inc
mov
sub
jle
inc
push
xchg
pop
push
movsl
cmp
mov
fisttps
jne
dec
insl
xchg
sub
adc
sub
mov
sti
repnz
adc
icebp
int
sahf
lret
or
push
mov
fsts
nop
jg
xor
divb
ja
mov
stos
sbb
jnp
jge
mov
cmp
pushf
cltd
mov
xor
bound
rolb
mov
push
jle
push
cwtl
jno
and
xchg
add
or
adc
into
int
add
mov
mov
xchg
inc
lret
mov
repz
and
mov
jb
dec
pop
xor
and
frstor
jg
add
clc
lcall
les
ret
jbe
xchg
test
nop
pushf
cwtl
or
inc
ficomps
pop
int3
sub
xor
test
sahf
push
or
pop
add
stc
test
sbb
sbb
mov
inc
hlt
fistl
enter
adc
mov
enter
pop
cld
stos
inc
ret
add
push
adc
imul
xor
jge
push
iret
pop
popl
andl
push
lods
idiv
xor
jge
mov
ljmp
shll
xor
xchg
mov
push
and
xor
add
mov
loope
pop
jmp
jb
and
clc
cli
mov
mov
test
in
dec
shl
mov
dec
int3
lock
or
fstps
popa
adc
mov
add
pop
or
sub
xchg
inc
mov
xchg
jl
dec
int
pop
sahf
lahf
movsb
pusha
loopne
mov
leave
xor
cld
jecxz
pop
sahf
xchg
add
cmp
dec
ret
fists
negl
inc
mov
sub
mov
lock
dec
fnstsw
aad
mov
add
iret
sub
mov
mov
or
or
and
xor
adc
mov
es
out
lea
daa
or
mov
inc
cmp
lods
int
lahf
dec
dec
inc
popa
xor
pop
mov
inc
fsubr
test
pop
insl
lret
cmp
fsubs
lock
pop
addr16
pop
mov
lahf
dec
mov
iret
stos
inc
mov
mov
mov
mov
cwtl
push
stos
mov
fsubs
push
xor
add
pop
xchg
stos
push
sub
push
cmp
push
mov
dec
push
fnsave
das
push
xchg
ljmp
je
mov
and
inc
or
imul
sbb
add
ret
repz
inc
ljmp
insb
pop
lcall
and
mov
xor
jno
and
pop
repnz
mov
xchg
in
dec
adc
imul
ds
mov
fldcw
dec
icebp
mov
or
push
mov
cli
sbb
push
mov
pop
fldl
mov
shll
orl
xor
js
subb
mulb
aas
lahf
sbb
xlat
or
mov
mov
ljmp
stos
lds
xor
or
scas
lahf
and
mov
xchg
add
std
jae
es
out
cmpsl
mov
push
sub
jge
fcom
ss
push
ss
mov
test
xor
and
call
jnp
lcall
or
rorl
test
xor
or
mov
ret
cwtl
mov
add
repz
jp
fsubr
dec
mov
in
cltd
jbe
into
outsb
test
cli
push
xor
lret
mov
stc
loope
stos
in
jg
xchg
shl
shl
dec
jmp
push
add
shl
test
pop
ljmp
clc
roll
fwait
loopne
sub
outsl
pop
inc
nop
out
lds
movsl
xor
or
dec
leave
jmp
repz
adc
insb
ljmp
sbb
loopne
adc
and
cwtl
cld
cmp
pop
ljmp
and
orl
ds
jecxz
xor
dec
push
loopne
mulb
push
jb
test
xchg
dec
cmpsb
mov
test
scas
insb
xor
xchg
lahf
add
mov
out
mov
sbb
mov
fisubl
mov
add
dec
nop
ds
leave
xchg
cmp
pop
mov
or
xchg
add
fmul
cwtl
aad
push
mov
nop
iret
add
push
ret
dec
mov
out
pusha
add
fwait
je
out
movsb
pop
or
jmp
and
call
adc
es
pop
mov
push
push
iret
push
and
xchg
fnstcw
or
mov
xchg
ret
iret
and
ja
paddusb
movsl
push
incl
js
ret
aas
cmc
std
insb
jecxz
inc
push
stos
pusha
dec
push
iret
or
xchg
jbe
push
cwtl
leave
cwtl
fisttpll
int
adc
call
cmpsb
movsb
fiadds
sbb
popa
cmp
fcompl
shrb
cmpsl
ja
divl
lret
dec
xor
pop
lret
and
shlb
xchg
fisttpll
inc
jne
subl
pushf
sbb
and
jecxz
stos
lret
jge
dec
test
lods
adc
movsl
mov
test
out
add
call
cmpsb
loop
mov
inc
icebp
mov
in
loopne
mov
push
fiaddl
add
push
xchg
rolb
popa
rcr
or
push
arpl
push
das
or
fwait
adc
mov
dec
in
out
push
repnz
mov
mov
movsb
push
mov
add
xchg
stos
leave
stos
jo
fadds
pop
xor
mov
sbb
lcall
lock
cltd
ret
lods
xor
mov
cmpsb
outsb
xor
jnp
loop
fsts
popa
jmp
mov
lods
dec
aaa
leave
int3
and
repz
mov
inc
roll
mov
sbb
in
loope
jl
or
shll
stos
jmp
cmp
mov
jg
sbb
sub
sub
rcr
mov
and
sbb
ret
sahf
loope
hlt
mov
dec
adc
sub
inc
jl
rdmsr
push
or
pop
aad
loopne
mov
cs
mov
cmp
das
and
xchg
jecxz
sbb
cmp
mov
out
add
insl
mov
test
mov
jnp
push
xor
imul
cld
pop
sti
lods
rep
rolb
lret
popf
push
loopne
pop
das
mov
add
ja
fnstcw
pop
mov
daa
fistps
test
adc
pop
lods
fwait
xchg
and
cli
mov
sbbb
pop
xchg
ret
jne
test
mov
sbb
jle
aad
hlt
mov
pop
sbbl
mov
jg
leave
cmp
js
notb
or
out
xchg
push
xchg
mov
dec
enter
insb
xor
scas
add
add
jge
sbb
outsl
inc
test
jmp
mov
jns
stos
aaa
pop
nop
data16
pusha
inc
stos
xchg
ja
inc
fidivs
and
adc
addb
add
out
xor
adcb
aam
test
push
jecxz
xor
cwtl
subl
stc
movsb
sub
adc
xchg
sbb
sbb
sub
stos
stos
bnd
fdivs
cmp
imul
sbb
clc
xchg
inc
out
ficompl
mov
gs
incl
sbb
sbb
or
stos
jbe
inc
cmpsl
and
fcompl
pushf
sbb
fistl
loop
adc
xor
and
cld
inc
mov
dec
imul
in
dec
and
xchg
jb
lods
movsl
xchg
lret
xchg
mov
sbb
pop
aas
dec
inc
add
mov
mov
mov
pop
dec
add
in
stos
das
icebp
fisubl
rorl
dec
dec
hlt
or
pop
popf
inc
fidivl
popa
push
fld1
js
fs
xor
pop
repnz
pop
mov
ja
lahf
jno
mov
insl
pop
mov
ret
sub
push
pop
in
loopne
adc
frstor
lods
popa
jne
push
loop
sub
pop
shll
pop
xor
jg
lds
xchg
insl
ret
or
cld
xchg
popf
and
loopne
xchg
add
cmp
repnz
lods
in
and
mov
fcomps
mov
mov
scas
dec
ret
dec
jecxz
das
stos
sub
cwtl
push
out
popf
add
pop
ret
pop
mov
push
push
mov
sbb
and
repz
push
orl
dec
adc
sub
sbb
in
inc
ja
enter
pop
data16
test
xchg
sub
adc
jecxz
or
testb
decl
in
adc
mov
lea
mov
push
mov
arpl
cmpb
mov
sbb
dec
popa
mov
jmp
mov
xor
xchg
push
or
dec
mov
movsb
jae
xlat
clc
int
ljmp
sub
xchg
mov
sub
out
xchg
das
in
bnd
jne
add
fnstenv
stos
pop
cmpsb
mov
jo
lock
jle
mov
imul
shlb
mov
cmpsb
mov
adc
push
jmp
fistps
jl
pop
and
stos
leave
call
pop
sub
cmc
mov
xor
mov
lods
test
inc
pushf
mov
shl
enter
arpl
mov
gs
sub
xorb
bound
jmp
or
ret
push
insl
test
rcr
clc
lods
arpl
or
and
mov
pushf
add
jns
pop
pop
loope
xchg
cmp
or
cmc
sbb
xchg
sbb
lock
mov
jmp
loope
inc
dec
repz
testb
mov
pushf
out
push
jl
sbb
loope
test
gs
pusha
mov
sub
sbb
outsb
inc
xchg
pop
mov
gs
dec
fsubs
and
popf
aaa
pop
lods
and
nop
xor
push
ret
push
out
mov
mov
mov
enter
lahf
add
inc
stos
mov
inc
clc
xchg
hlt
mov
je
inc
push
ficoms
mov
xor
mov
xor
mov
notb
pop
jbe
pop
pop
add
in
ds
sbb
mov
mov
mov
sti
jmp
pop
insl
popf
jmp
outsb
hlt
push
xor
xchg
ret
cmp
stc
cmp
rol
lock
popf
call
sub
adc
mov
push
pop
sub
adcb
push
push
jno
mov
dec
dec
lods
xor
rcl
add
push
adc
aam
cmp
lahf
sub
mov
and
xor
xchg
inc
cld
mov
popf
push
lods
jl
push
and
mov
rcrl
push
jae
jae
aad
xchg
mov
push
mov
and
or
and
push
and
adc
jl
cmp
push
push
out
mov
cmpsl
mov
fistl
es
hlt
in
rcll
lret
adc
ljmp
and
loop
push
std
cwtl
lods
clc
push
jo
in
mov
sub
sbb
in
je
ja
jbe
out
jo
movsl
inc
mov
cmpsl
popf
push
and
insl
mov
mov
data16
push
subb
pop
xor
jns
aaa
test
jne
mov
cmpb
dec
daa
dec
or
pop
loop
fwait
xor
fstl
jge
test
lods
outsl
fbld
sub
cmpsb
and
dec
clc
mov
jle
cmp
data16
test
adc
dec
mov
nop
jle
adc
cltd
ret
push
pop
mov
pop
inc
sub
and
inc
pop
xchg
mov
push
adc
in
fisubl
add
jno
push
jo
dec
xchg
bound
push
jp
push
mov
pop
inc
dec
mov
mov
hlt
fmul
push
mov
jp
jg
push
or
fdivl
xchg
xor
shr
lods
adc
dec
mov
jp
push
aaa
jecxz
jle
push
mov
mov
imul
ret
mov
cwtl
xor
mov
fs
cmpl
xor
sub
pusha
in
insb
cs
jmp
sbb
cli
mov
fcompl
cs
mov
repz
lds
lcall
mov
lret
push
sub
add
pop
lahf
or
ss
out
inc
xchg
xchg
push
jbe
jecxz
inc
xchg
cmp
cmpsl
adc
xchg
popa
mov
jns
xchg
jns
inc
push
mov
add
fdiv
mov
push
pop
call
dec
pop
stc
mov
loop
test
sub
es
popa
insb
jnp
fcmovnu
icebp
jge
pop
xlat
adcl
int
cmp
cmpsb
lock
popf
push
out
xchg
test
cltd
jbe
cmp
adc
dec
push
imul
cmpsl
ss
xchg
xor
cmp
xorb
xor
aad
adc
sub
std
sarb
jp
test
add
mov
aad
xor
add
push
cmc
jae
xor
fbstp
in
loope
ficomps
mov
int
or
add
mov
pop
jp
xor
sbb
lock
add
cmp
addb
arpl
push
adc
or
add
test
dec
movsb
lock
dec
jmp
mov
aam
mov
pop
pop
fcoms
mov
cmpsl
push
and
dec
cmpsb
sahf
and
fdivrs
jp
scas
nop
sbb
daa
loop
pop
or
mov
push
cmpsl
mov
movsl
or
enter
iret
stos
outsb
daa
shrl
and
jno
movsl
insl
sbb
scas
dec
aad
test
and
push
adc
out
mov
cmpsb
stos
sub
mov
mov
stc
add
imul
add
adc
hlt
mov
or
and
sub
movsl
xor
lcall
xchg
fcomip
stc
adcb
loop
into
inc
aas
jecxz
mov
add
out
xor
fnstsw
push
scas
fwait
dec
push
push
in
xor
mov
cld
mov
sub
test
mov
icebp
or
mov
xor
rorb
dec
inc
out
aad
outsl
add
mov
jecxz
scas
adc
inc
shlb
imul
push
pop
xchg
adc
xlat
out
xchg
or
arpl
cltd
cmc
insl
js
pop
lret
mov
fisttps
jns
xchg
cli
pop
push
push
pop
into
std
cmp
and
pop
shlb
inc
or
lahf
iret
int3
push
es
imul
outsl
mov
pop
pushf
pop
movsl
leave
shlb
mov
cmp
mov
fld
mov
xchg
hlt
ret
movw
std
pushf
mov
inc
push
or
add
popf
jnp
divl
fwait
and
xlat
clc
daa
push
arpl
mov
push
inc
xchg
sbb
inc
in
adc
and
dec
inc
adc
insl
inc
dec
iret
xor
push
xor
mov
inc
jmp
les
and
ss
lret
scas
lea
shlb
gs
push
loope
pusha
lret
sbb
out
xor
imul
push
setge
jp
pop
aad
mov
dec
mov
enter
push
and
cmp
call
mov
cld
cmpb
lret
mov
fcomps
sub
push
push
mov
mov
loopne
ret
sahf
sub
icebp
lret
stos
mov
call
repnz
sub
cmp
je
repz
inc
push
xor
icebp
jo
jnp
in
inc
xor
pop
adc
icebp
rclb
fcmovnb
add
sbb
push
ja
aaa
fisttps
sbb
mov
sti
addl
ret
outsb
dec
loop
rcrl
loope
cmp
jnp
nop
adc
add
testb
cmp
movsl
pop
cld
pop
mov
in
popa
jl
mov
cmp
js
pop
push
pop
and
or
adc
lret
sub
iret
dec
fstps
int
fs
test
cmp
pop
inc
cli
lcall
or
inc
cli
fisubrl
cltd
aad
xchg
outsl
out
sub
adc
mov
jbe
mov
xor
dec
divl
ret
xor
std
lock
lahf
dec
stc
daa
xchg
xchg
test
lret
add
sbb
push
mov
add
mov
lods
lcall
xlat
mov
pop
aad
sarb
arpl
push
int
inc
push
ss
cmpsl
fiadds
outsb
testl
pop
mov
sub
mov
xchg
jg
xchg
rcrb
imul
jae
pop
jbe
ljmp
ja
jmp
mov
mov
out
push
sub
sbb
rcll
adc
test
xchg
pop
int
movsl
mov
lock
fdivrp
test
mov
ds
xor
aas
inc
enter
mov
cwtl
loop
icebp
xor
test
xor
fnstsw
mov
cmp
xlat
cmpxchg
xchg
jb
les
loop
aas
jno
cld
dec
fsubrl
push
jnp
and
xchg
decl
imul
pop
xor
stos
lea
cmp
mov
int
loope
lods
pop
jne
mov
loop
cmp
mov
mov
pop
xor
sub
add
jbe
sti
stos
inc
pop
in
in
or
jecxz
xchg
xchg
pop
mov
loop
aad
push
pop
lock
jnp
mov
and
wbinvd
mov
jns
xchg
adcl
cmp
jbe
test
mov
mov
mov
rcrl
in
hlt
pop
std
pop
enter
int
sub
pop
loop
cld
mov
mov
fiadds
mov
cltd
or
cmp
outsb
mov
aad
add
dec
and
push
lea
test
adc
aad
leave
push
add
pushf
xchg
pushf
call
inc
mov
dec
and
add
outsb
call
daa
in
xor
sahf
pusha
lret
jne
shl
adcl
addb
out
jg
lods
test
ret
sub
jle
jg
rcrl
jne
xor
cmpsl
sbb
loope
adc
mov
loop
mov
out
mov
mov
fwait
sub
mov
push
pop
and
mov
int3
xor
xor
cmpsb
lea
jb
mov
and
mov
cld
js
fwait
scas
sbb
je
fcmovb
fsts
bound
mov
mov
cmp
adc
or
neg
xor
stc
movl
xor
fildl
push
loope
add
push
frstor
push
popl
pop
sub
xlat
jecxz
andl
mov
adc
dec
ljmp
mov
lock
out
lret
out
clc
mov
cmc
push
orl
rclb
aaa
inc
mov
mov
xchg
pop
scas
mov
inc
dec
mov
pushf
out
stc
xor
mov
incl
fs
pusha
repz
sbb
jb
ja
pop
xor
mov
xchg
add
inc
mov
add
fldl
adc
cmpsb
test
je
lret
sarb
test
xchg
xchg
mov
push
mov
sub
mov
cmp
pop
cmp
in
idivb
add
icebp
inc
fsubl
add
cmp
xchg
sahf
mov
jo
sbb
xchg
xchg
imul
jge
lods
shlb
xchg
in
cld
ficoml
lahf
cmpsb
ret
into
ret
sbb
pushf
orb
xchg
mov
clc
lock
adc
sub
jl
bound
cmp
lret
mov
mov
stos
pop
or
out
and
pop
pop
mov
cmp
push
mov
sarl
pop
adc
imull
jge
jb
ljmp
sub
enter
nop
sbb
lods
movsl
fucomp
shrb
dec
fcompl
imulb
add
call
pushl
adc
sbb
jp
addb
and
dec
add
dec
and
movsb
aas
pop
add
aad
push
and
call
loope
inc
mov
push
bound
xchg
cs
jo
loope
cmp
aaa
insl
out
in
cltd
int3
decl
cltd
push
ljmp
jl
cmp
jne
lods
adc
shrb
out
adcb
dec
sbbb
mov
icebp
call
cwtl
cmp
outsb
lods
xchg
std
test
lods
push
lds
pop
jl
mov
stos
leave
aad
push
cmpsl
rcr
out
or
cmp
push
cltd
test
lahf
inc
push
imul
test
add
dec
sub
mov
daa
inc
lret
jbe
in
int
addr16
stos
aam
inc
mov
fldl
mov
test
push
cmp
mov
andl
fdivs
pop
ret
fidivs
jecxz
mov
add
xlat
cmp
adc
ljmp
mov
sub
xchg
inc
xchg
adc
daa
dec
insl
inc
cld
stos
push
rcll
mov
inc
sarb
daa
push
inc
lods
cmp
lods
xchg
jno
scas
cmp
sahf
inc
rcrb
aas
adc
push
push
aaa
jb
les
test
je
addr16
bnd
inc
je
ja
jmp
or
cmp
lea
movb
pusha
iret
push
out
stc
inc
mov
out
lahf
sub
jo
cmpsl
stos
insb
or
xchg
icebp
aaa
fistps
sbb
inc
adcl
inc
cmp
insl
js
fadd
xsha256
cmpsb
rcrl
adc
or
addr16
xor
or
xor
lret
or
sub
mov
call
shlb
clc
mov
xor
pop
fnstsw
push
mov
lea
cmp
fnstcw
inc
adcb
test
fisubs
movb
xchg
jne
aaa
es
push
sub
adc
and
fisttpll
fsubs
popa
sub
and
xchg
filds
cmp
imul
add
lea
insl
aam
mov
je,pt
sub
jbe
subb
mov
ljmp
lret
imul
sub
rcrl
cmpsb
push
shlb
testl
les
out
movsl
mov
insl
pop
lea
mov
gs
les
repz
jle
mov
add
push
repz
pop
xor
lea
push
insb
fildl
and
add
into
cmp
stc
or
cmpl
dec
addr16
add
rcll
mov
mov
aam
cmp
push
mov
pushf
xor
adcb
and
mov
dec
pushl
es
in
xchg
mov
mov
js
inc
or
add
outsl
add
movsb
or
out
inc
nop
xor
pop
xchg
leave
jne
jg
jg
paddq
movsl
add
out
les
add
repz
shll
add
js
in
mov
jne
cwtl
test
call
stc
cld
or
jmp
arpl
pushf
scas
xchg
fistl
into
adc
sbb
stos
ljmp
cmp
test
sbb
ljmp
adc
das
dec
sahf
ds
cmp
je
xchg
test
insl
jg
aas
cli
es
mov
outsb
push
stos
mov
loop
mov
les
xor
push
jmp
lods
call
scas
cmp
aam
iret
test
pop
pop
pop
mov
repnz
es
xor
pop
dec
jl
aas
mov
aam
dec
movl
and
pushf
sub
aaa
add
xorb
xchg
and
jbe
and
int
inc
mov
lods
mov
out
arpl
sub
ds
test
test
shll
pop
cmpsl
xor
jp
xor
push
inc
pop
ss
and
mov
loop
jecxz
imul
add
insl
fchs
sbb
jne
jbe
pop
fdivrs
pop
push
jae
sub
jmp
xor
mov
or
sbb
repz
pop
sbb
xchg
inc
imul
fwait
cmc
roll
mov
out
iret
rcl
data16
aam
or
mov
andb
and
jp
mov
or
out
pusha
mov
push
stos
gs
mov
iret
clc
sbb
sub
cmp
mov
lret
xchg
aam
repz
int3
fwait
cmp
adc
sbb
add
fs
fistps
rcrb
pop
and
cmp
clc
data16
out
dec
mov
fdivr
ja
test
int3
rcrb
nop
jns
addl
mov
ja
in
push
mov
inc
cmp
jae
addr16
std
sbb
fwait
mov
ljmp
dec
push
mov
ljmp
mov
scas
adc
jb
push
mov
xchg
xorb
dec
dec
rolb
xchg
orb
mov
aam
push
clc
dec
jmp
stc
scas
icebp
mov
in
neg
loopne
mov
pop
scas
jne
filds
inc
in
in
xchg
enter
pop
outsb
andl
clc
ja
sub
jl
scas
and
sahf
pop
push
fldt
mov
and
xor
repnz
xchg
jb
test
xor
xchg
inc
push
cmpsl
jmp
lods
jb
xchg
scas
mov
add
lcall
or
aaa
int
flds
xchg
test
pop
cmp
int
sbb
xor
adc
aaa
cmp
and
jno
mov
call
insl
inc
jnp
and
pop
or
sarb
adc
cwtl
jp
and
imull
adc
push
jg
jp
push
jmp
fwait
jbe
insl
repz
shlb
mov
subb
jmp
ja
xchg
sbb
popl
mov
call
ret
xor
data16
push
inc
xor
pop
test
aam
les
push
sar
shlb
js
push
lcall
orb
cmp
xor
adc
mov
xor
mov
mov
mov
in
dec
maxps
jge
nop
jg
dec
mov
xor
ja
repz
mov
ljmp
es
scas
push
mov
push
add
nop
pop
sbb
outsl
fs
ficoml
lahf
jbe
or
ja
rclb
lahf
in
fsubs
xor
mov
pop
daa
jnp
test
das
add
pushl
daa
aas
fwait
lock
cmp
mov
mov
sbb
sahf
adc
repnz
bound
and
cmpsl
push
insl
addr16
shlb
and
adc
add
pop
in
je
dec
jge
fisubrs
mov
and
ficoml
es
test
icebp
pop
movsl
andb
dec
fwait
stc
mov
ss
enter
lods
mov
mov
push
cmp
shr
mov
and
push
popl
lcall
fisubl
mov
inc
loopne
cli
stos
add
and
cmp
fnstcw
xor
icebp
dec
and
movsl
inc
add
and
xchg
fs
lea
cli
xchg
rcrb
or
sub
and
mov
rolb
pop
clc
jae
add
xchg
inc
mov
rorl
xchg
lods
mov
push
mov
or
sahf
push
mov
lcall
stc
adc
repnz
andb
inc
or
pop
pop
xchg
mov
pcmpeqb
dec
insl
out
idivl
jle
cmp
pop
pushf
jns
repnz
mov
loopne
sub
test
jne
addr16
jae
pop
data16
pop
out
xor
loop
sub
lods
gs
xchg
pushf
push
mov
cwtl
or
arpl
insb
fldpi
imul
push
outsb
pop
rclb
outsl
jle
mov
lcall
scas
clc
test
jp
icebp
fadds
fwait
cmc
lret
test
aas
adc
fs
add
sub
je
fdivs
aas
push
aad
xor
push
jo
addl
fdivrs
pop
pop
in
mov
and
stos
jnp
imul
dec
bound
cmpsl
dec
fidivl
imul
ret
inc
or
aaa
or
shll
xor
iret
push
push
mov
cmp
mov
call
clc
out
adc
iret
sbb
mov
inc
adcl
mov
xor
pusha
pop
push
sbb
mov
adc
adc
aam
call
enter
in
sub
mov
hlt
mov
xor
adc
cmpsb
sub
adc
arpl
cmp
cmc
clc
loopne
js
dec
fnstenv
and
out
call
xlat
mov
push
sub
pop
mov
and
dec
or
lcall
dec
test
aam
xchg
leave
xor
jle
jne
shrl
mov
pop
jp
or
xlat
push
in
int3
or
shlb
push
dec
or
push
mov
stc
mov
fs
aaa
dec
out
js
cwtl
pop
fisttpll
xor
cmpsb
enter
fcomps
adc
mov
dec
xchg
insl
pushf
mov
dec
insl
mov
fwait
sarb
mov
cli
dec
push
pop
mov
pop
mov
inc
fwait
movsl
mov
fisubl
mov
inc
fstpt
jo
cld
lock
add
mov
int3
dec
jecxz
test
in
stos
imul
test
or
aam
jle
popa
popa
inc
mov
aam
inc
xor
or
push
cmp
dec
negb
mov
fs
dec
cmp
cmp
pop
nop
add
cli
mov
cmp
mov
dec
addr16
push
rcrb
mov
scas
jg
fildll
enter
fwait
lods
ret
sub
sub
fstpl
mov
sub
pop
cmp
call
or
jecxz
cs
mov
cmp
fstps
insl
mov
outsb
pop
out
arpl
test
dec
aas
push
pop
or
mov
mov
pushf
xlat
adc
inc
jl
jge
testb
jns
cli
mov
enter
mov
add
mov
inc
fwait
add
pop
ljmp
xchg
cld
rorb
pop
cli
scas
lcall
adc
and
mov
cltd
mov
add
out
mov
movsl
mov
lea
pop
and
sub
mov
push
int
arpl
mov
ret
repnz
pop
pusha
arpl
imul
and
shlb
push
sbb
or
clc
shll
cmp
cwtl
xor
es
xchg
insl
int3
lods
dec
mov
ficoms
and
inc
addr16
add
add
sub
jns
lea
cmpl
and
xchg
adc
test
cmp
jo
daa
mov
jbe
adc
mov
sub
jno
sub
mov
cmp
ds
imul
pop
inc
inc
xchg
inc
adc
test
adc
dec
ficoms
xor
std
lods
insl
ret
leave
inc
or
imulb
sbb
out
cs
xor
in
cmpsl
push
mov
test
push
adc
dec
into
ret
or
mov
hlt
cmp
adc
xchg
arpl
mov
cmp
ror
inc
pop
pop
xor
pop
in
fst
loope
ss
das
mov
sub
test
aad
insl
clc
cs
jmp
lods
mov
std
stos
int
por
addr16
adc
xchg
adc
gs
mov
iret
out
dec
fdivrl
ds
cmpsl
cmp
mov
into
dec
cmp
test
xor
push
lret
mov
mov
mov
repz
mov
scas
leave
pushl
mov
xchg
and
aas
outsl
jbe
ds
mov
pop
dec
es
jnp
push
sub
movsb
push
inc
mov
pop
sub
lock
xor
movsb
pop
out
out
jbe
jmp
push
adc
rolb
push
push
mov
sbb
mov
or
xor
mov
test
arpl
sbb
stos
add
jmp
and
icebp
andb
mov
test
lret
leave
les
aam
in
cmp
pop
push
push
mov
clc
sbb
jge
inc
repz
aaa
jb
sub
subb
test
add
ss
and
push
loopne
clc
add
repz
mov
pop
jbe
hlt
into
adcb
aas
xor
test
in
fwait
or
mov
fdivr
push
jae
jle
inc
flds
dec
out
lods
popa
jo
cmc
mov
push
add
repnz
loopne
or
mov
xchg
add
push
cmp
mov
or
outsb
shl
add
lods
ss
pop
push
ficompl
shlb
push
cmp
mov
mov
test
xor
mov
mov
mov
and
dec
jl
mov
shlb
and
cli
fldenv
adcl
mov
insl
or
add
sbb
jae
add
and
ret
lock
aas
inc
popa
add
pop
cmpsl
rcr
xchg
fwait
outsb
push
test
push
xchg
jecxz
jne
xorb
mov
mov
fdiv
fwait
or
dec
aaa
js
mov
ss
fcoms
xor
inc
cmpsb
cmp
xlat
mov
mov
or
das
inc
cltd
push
inc
and
xchg
jnp
leave
sbb
jp
sbbb
mov
enter
stos
dec
lea
and
addr16
arpl
mov
mov
nop
stos
xchg
lcall
push
push
cmc
inc
arpl
rcr
dec
cmc
fdivrp
mov
jae
mov
inc
push
dec
sbb
pop
sbb
xchg
fsubl
aas
es
mov
roll
mov
addr16
sub
gs
lods
xchg
mov
fnstcw
xor
xchg
cmpsb
lret
shll
les
rolb
sub
adc
cmpsb
push
xchg
pop
pop
lds
or
or
sub
sti
adc
cld
lret
mov
dec
loope
out
adc
push
pop
inc
sub
sarb
jecxz
repz
sbb
mov
pop
or
insl
cs
testb
leave
pop
dec
out
aaa
fistpll
insl
push
aam
imul
cmp
repz
movsb
dec
imul
lahf
mov
mov
divl
pop
lods
xor
dec
mov
iret
dec
aas
enter
sub
pop
cltd
sub
or
push
ds
dec
sahf
sbb
or
mov
dec
cld
xchg
jp
and
pop
movsb
ds
jns
iret
out
mov
sti
loop
and
mov
pusha
js
and
dec
pop
nop
lahf
mov
mov
xchg
fldcw
xchg
mov
jae
int
mov
pop
sub
xor
sbb
jmp
rolb
jb
xor
or
jmp
sub
cmpsl
or
cmp
sub
push
addr16
ret
popf
loopne
cwtl
cmpsl
jge
lcall
sar
popf
fnstsw
pop
push
or
addb
push
js
sar
cmpsl
or
add
pop
add
push
jae
in
jbe
sub
jbe
jnp
out
ret
scas
add
popl
mov
jbe
lods
lret
mov
jecxz
jle
test
dec
pop
pusha
movsb
movsb
cwtl
jle
rclb
test
cwtl
xorl
call
arpl
jo
jmp
lea
rol
leave
inc
pop
mov
ljmp
add
cmpsb
test
or
out
and
pop
or
mov
sub
inc
mov
pop
js
mov
mov
mov
std
adc
mov
int
out
imul
sahf
pusha
jo
jae
iret
sub
inc
add
es
xchg
adc
sbb
jo
mov
jo
pop
fsubs
xchg
popf
mov
daa
jecxz
jmp
jns
in
fucom
dec
sbb
push
pop
push
xor
cmpsb
push
push
and
inc
popa
adcl
repz
mov
ljmp
add
outsb
sub
ja
xlat
push
xor
push
dec
addr16
pusha
js
mov
add
popl
fs
into
leave
hlt
movsb
scas
je
pop
jnp
call
in
xchg
push
aas
mov
icebp
and
iret
push
push
sbb
pop
sbb
adc
test
loopne
push
jp
push
sbb
outsb
movsb
cmp
loopne
test
jmp
sub
ret
scas
push
sub
sbb
data16
inc
lds
xchg
and
and
sub
or
cmpb
push
lcall
dec
xor
xchg
add
cmpsl
mov
pop
pop
dec
mov
pushf
dec
xchg
test
or
loope
cmp
aad
sbb
aas
mov
mov
mov
mov
lahf
dec
jmp
add
or
cwtl
adc
jne
hlt
mov
adc
jge
fwait
sub
or
leave
mov
mov
ret
ljmp
inc
je
xchg
in
sbb
pop
out
lahf
lock
pop
xchg
pushf
add
inc
mov
hlt
in
loope
inc
lock
iret
pushf
xchg
mov
sbb
int
cmp
ret
xor
mov
jl
adcb
int3
sub
mov
sbb
call
lret
mov
or
mov
jb
jle
dec
iret
gs
scas
push
xchg
add
push
frstor
cwtl
jp
mov
rclb
mov
aam
jae
xor
jne
adc
inc
outsl
jge
jo
mov
mov
in
imul
dec
shll
jecxz
int
push
xchg
stos
xor
imul
xor
lret
test
mov
xor
pop
pop
or
inc
mov
pop
je
lock
mov
and
bound
adc
test
out
mov
mov
lock
push
fsubs
push
imul
gs
pop
or
test
or
xor
bound
mov
stos
pop
cld
outsb
and
mov
inc
fdivl
inc
rol
stos
mov
movsb
movsl
or
aas
sub
enter
sbb
jnp
jb
std
jb
push
cmp
or
sub
bound
or
jmp
pusha
inc
jge
mov
outsb
stc
iret
fstpt
jecxz
push
out
lea
ja
push
mov
mov
sbb
in
mov
xlat
in
test
jo
insl
shll
mov
xchg
lds
out
ficomps
push
pop
and
sahf
jo
imul
setnp
in
frstor
push
inc
push
fdivrl
ret
lret
ret
ljmp
lcall
push
sti
cli
lds
jle
scas
inc
mov
enter
push
add
mov
jle
pop
das
sbb
scas
test
pop
insb
movsl
and
movsl
or
movsb
mov
cwtl
cmp
inc
jecxz
loopne
movsb
fcmovbe
cmp
ret
add
stos
push
adc
dec
xchg
jae
and
insl
test
outsb
push
or
mov
inc
jb
lcall
mov
aaa
push
adc
cmp
pop
mov
add
imulb
jne
lahf
call
test
jo
pop
adc
loope
mov
cmpsb
int
les
mov
lret
xchg
fnsave
dec
sarb
pop
pop
xor
xor
cmp
out
mov
pop
sbb
pminub
test
pop
mov
decb
cmp
stc
inc
iret
scas
push
js
xor
shll
jmp
outsb
dec
lcall
jmp
orl
sbb
pop
and
mov
pop
mov
xchg
mov
std
lock
mov
push
dec
cs
mov
mov
cli
shlb
xchg
adc
mov
in
das
int3
pop
adc
ret
outsl
or
cmp
test
loop
mov
cmpb
cmp
xchg
xchg
and
and
nop
push
mov
mov
std
push
xchg
xor
sbb
lods
pop
lea
sbb
movsb
sti
mov
adc
sbb
ljmp
je
std
sub
aaa
adc
inc
xlat
lcall
push
inc
mov
sub
xor
aam
sbb
lock
push
adc
jg
push
fsubs
aas
mov
mov
ret
rcrb
out
push
dec
jp
push
hlt
and
dec
cs
imul
sub
enter
gs
icebp
dec
in
mov
loope
pop
sub
sbb
js
repz
push
lea
adcb
push
js
outsb
cmp
ret
adc
mov
dec
fildl
std
iret
jns
icebp
pushf
arpl
gs
imul
mov
out
xor
mov
xor
lret
sbb
clc
lret
sahf
mov
mov
or
pusha
sbb
int
sub
xchg
mov
mov
jge
cmp
fwait
lret
mov
jnp
push
jae
cmp
sub
decb
jo
js
jp
pop
push
test
or
jbe
add
mov
nop
push
outsb
test
idivb
sbb
testl
mov
pop
pop
push
clc
sbb
shlb
jmp
out
cmp
mov
call
adc
lock
mov
mov
in
add
inc
push
add
and
fidivrl
jl
ja
xor
ljmp
sbb
addr16
pushl
sub
out
andl
testl
addr16
mov
push
mull
mov
pop
mov
pop
stos
add
les
fs
fs
pop
aaa
pop
lahf
es
lret
dec
and
mov
mov
jecxz
das
jno
test
sub
setl
mov
loop
mov
mov
lret
je
in
mov
push
adc
add
xchg
and
add
sbb
push
xchg
xchg
test
lahf
pminub
fdiv
mov
movsb
mov
mov
and
jnp
xchg
inc
add
jmp
data16
adc
aad
or
sbb
jae
xlat
mov
mov
lock
add
outsl
mov
imul
mov
and
push
ret
mov
cmpl
mov
inc
scas
mov
xchg
cmp
cli
sub
and
jge
pop
and
test
sbb
das
fists
mov
push
adc
enter
jne
cmc
push
loop
mov
xchg
jne
outsb
ror
in
pop
sub
mov
and
sub
into
and
lock
sbb
or
mov
sbb
scas
mov
add
subl
movsl
inc
fldcw
pop
js
push
mov
jbe
cmp
mov
adcb
mov
adc
sbb
jmp
fwait
sbb
xchg
push
dec
or
js
adc
add
xchg
xor
mov
fldcw
xchg
icebp
inc
loop
push
or
aam
mov
and
pop
mov
mov
push
jg
iret
les
push
daa
fwait
das
loopne
adc
test
out
movsb
pop
push
xlat
jnp
mov
mov
xor
sbb
push
add
xor
fs
or
addb
jg
je
stos
push
jmp
adc
das
add
sbb
jp
cmp
out
ret
mov
sbb
bound
ficomps
insl
xchg
test
xchg
cmp
xchg
push
js
mov
lcall
xchg
inc
xor
test
scas
jg
cmc
sub
sub
add
lea
pop
mov
lret
sub
lahf
and
sar
inc
and
imull
push
xchg
scas
dec
xlat
data16
xorb
sbbl
mov
push
push
cltd
xchg
mov
xchg
loopne
xchg
push
adc
mov
out
inc
or
add
add
mov
jmp
jmp
cmpsl
stos
mov
in
shl
pop
cld
mov
out
sbb
test
ret
inc
add
cmc
or
imul
jnp
sbb
fadds
movsb
fdivs
pop
mov
data16
and
add
cmp
int
popf
inc
bound
adc
loope
in
and
pop
fldl
nop
es
int
pop
push
sbb
and
fcomps
jecxz
repnz
cltd
cli
sbb
out
adc
repz
jbe
pop
in
inc
rorb
les
fmull
out
enter
test
out
push
xchg
push
push
bound
push
dec
add
out
test
repz
xchg
dec
xchg
scas
sub
xchg
and
loop
pop
cld
movsl
mov
into
sbb
jmp
subb
mov
lcall
test
rcrb
sub
inc
inc
jbe
sbb
leave
call
fimull
xor
mov
push
fiaddl
lea
dec
loop
lock
pop
outsl
xchg
cmc
adc
add
addr16
mov
jb
inc
push
sbb
testb
dec
andl
std
mov
dec
dec
or
inc
out
sub
bound
ret
inc
sub
dec
mov
push
fnsave
lret
lock
mov
stc
cmp
mov
mov
xchg
inc
jo
inc
pop
into
repz
sbb
mov
icebp
push
push
cmp
mov
aas
rcrl
mov
cli
ret
outsb
sub
cmp
in
pop
dec
lods
cli
sbb
mov
push
lock
adc
stos
push
cli
mov
cmpsb
fldt
sbb
dec
ret
cmpsb
mov
jge
or
out
aam
arpl
push
pop
dec
mov
xor
sub
cltd
sbb
outsl
cmc
mov
or
add
fnstcw
popf
orl
lods
out
std
sbb
stos
inc
lods
inc
loope
adc
push
jmp
out
fdivrl
scas
xchg
es
daa
lret
cmp
cli
outsl
das
dec
add
adc
bound
xchg
jbe
subb
sub
jge
push
loopne
adc
cmp
adc
pusha
scas
imul
xor
push
adc
inc
adc
mov
cmovo
push
mov
push
aaa
inc
or
dec
out
out
aam
not
inc
aas
outsl
jmp
push
pop
inc
lcall
pop
decl
or
sbb
outsl
imul
cmpsb
lock
aaa
out
jne
addr16
push
mov
dec
or
mov
call
push
dec
addb
movsb
or
cmp
aas
add
fisttpl
out
inc
push
loopne
sub
mov
ret
in
bound
sub
or
ljmp
icebp
jo
popa
pop
fscale
lea
push
pop
scas
push
insl
pop
push
add
fsubp
lods
cmpsl
mov
jns
jmp
cmp
cmpb
jbe
sbb
mov
jmp
enter
or
fsubs
movsb
rcrl
out
adc
lret
add
scas
add
fisttpl
jge
hlt
ficompl
xlat
out
scas
xchg
adc
push
add
add
push
shrb
cli
and
pop
popa
lods
add
insb
outsl
in
push
xor
loopne
xchg
imul
inc
xchg
stc
or
xchg
mov
sbb
xchg
repnz
leave
nop
jp
push
xchg
jg
jo
shr
sub
mov
mov
inc
jecxz
inc
sub
icebp
xor
pop
adc
cmp
cmp
cmpsl
inc
xlat
icebp
add
test
lret
or
movb
jb
inc
hlt
xor
outsl
add
adc
inc
jne
sarl
lcall
cmp
pushf
xchg
movb
xabort
stos
popa
add
push
cwtl
in
mov
andl
mov
nop
xchg
ret
testl
and
loope
sbb
mov
pop
xor
xchg
xchg
cmp
in
hlt
push
int3
cld
sbb
xor
ss
movsl
shrb
ret
sti
movl
rcrb
xchg
sub
mov
cltd
mov
push
out
or
stos
or
mov
testl
fnstcw
std
leave
movl
sub
je
and
ljmp
push
fcmovne
sahf
mov
sbb
sahf
dec
push
and
add
fisubl
jg
icebp
push
out
dec
icebp
insl
sbbb
test
fwait
inc
xor
xchg
mov
push
lea
inc
ds
or
jmpw
jl
test
push
dec
sti
fs
adc
sbb
icebp
iret
and
pop
fdivrl
and
dec
pop
jp
dec
imul
add
pop
arpl
jle
loopne
rcl
pushf
lods
aaa
shrb
aaa
dec
divb
lock
rcrb
adc
mov
jecxz
xchg
bound
testl
xchg
lds
lahf
imul
lods
jnp
and
cmp
out
sti
movsl
sub
mov
push
mov
outsl
out
imul
sbb
imull
sbb
mov
shr
push
jae
and
decb
pop
jno
xlat
push
push
mov
xor
lds
lock
stc
sub
add
mov
push
jae
cltd
cmp
shll
aaa
fwait
jbe
inc
mov
lret
scas
in
imul
leave
jge
pop
fwait
mov
das
aad
jge
out
mov
adc
push
arpl
mov
push
rcrb
mov
call
dec
cmp
dec
les
rcrb
mov
adc
enter
xchg
lret
adc
cli
push
int
dec
outsl
lods
sub
or
xchg
mov
arpl
cs
lods
sub
push
pop
pop
loop
sarb
repz
or
mov
clc
xchg
clc
dec
inc
mov
pop
je
sahf
adc
xchg
and
pop
push
cmpb
pop
sub
sbb
js
push
sarb
lret
rorl
mov
aaa
negb
insl
push
or
dec
xchg
clc
test
sub
in
or
data16
push
data16
or
pop
sub
mul
shlb
add
or
and
in
push
or
subb
mov
leave
lret
rclb
pop
lds
or
jmp
fnstcw
add
cmpsb
push
adc
movsb
jno
mov
out
dec
data16
adc
lock
popf
mov
pop
jne
shrl
xorl
adc
shl
jmp
int3
scas
loop
loopne
stc
aaa
xor
pop
imul
fisubl
add
dec
in
aad
lods
xor
or
fiadds
ss
xchg
fildll
and
sahf
cmpsb
jg
lods
xor
es
sbb
and
mov
pop
mov
fcompl
pop
inc
adc
test
pop
das
lds
movsb
xchg
fcmovnu
gs
test
imul
add
jmp
jge
mov
outsl
sahf
test
cld
fcoms
mov
xchg
lcall
pusha
fmuls
xor
ds
xchg
rol
addb
imul
je
xchg
mov
or
cmp
push
xchg
add
popa
imul
jns
adc
xchg
xchg
push
mov
mov
cmpsl
imul
cmpsl
mov
xchg
lods
adc
jecxz
xlat
jmp
mov
dec
and
stos
jns
pop
push
ljmp
xlat
pop
mov
sub
gs
adc
idiv
mov
xlat
push
je
mov
gs
fildll
xchg
stos
imul
shll
orl
ror
mov
pop
mov
fstpt
daa
mov
fs
data16
and
pop
dec
add
mov
setl
cmp
mov
adc
repz
cmp
mov
mov
aaa
or
andl
mov
mov
mov
out
pop
jmp
add
ss
xchg
test
dec
aad
pushf
dec
push
scas
cld
movsb
cmp
lods
pusha
and
jl
jp
loop
gs
scas
mov
mull
insb
lcall
mov
mov
mov
lret
add
cmp
mov
andl
sti
add
cld
mov
or
xlat
xchg
out
inc
inc
push
push
xchg
dec
fsubrl
popf
incl
aam
insl
lret
popf
call
in
insl
sbb
and
faddl
fwait
jle
jecxz
movsl
jbe
and
dec
test
loope
mov
stc
cmp
mov
rcr
inc
inc
jl
push
mov
cmp
in
push
push
insb
xchg
rolb
pop
test
in
pushf
cwtl
or
inc
xor
shll
cmp
xchg
cmp
xor
mov
popa
test
outsl
pop
cmp
repnz
jb
dec
hlt
jns
mov
sub
fstl
stos
mov
pop
jno
and
aaa
pop
xchg
xor
mov
std
mov
fyl2xp1
add
scas
dec
jne
pushf
mov
jecxz
pop
sbb
test
or
xor
arpl
es
cmp
mov
inc
cmp
push
je
ja
dec
jns
push
or
or
or
sub
stos
cmp
iret
xchg
out
adc
js
xor
fdivrl
rclb
add
cwtl
add
into
cmp
lds
jnp
sbb
mov
dec
xchg
jns
mov
scas
adc
inc
scas
xor
mov
jo
hlt
sti
test
or
shr
hlt
mov
fistps
mov
insl
mov
divps
and
pop
out
in
push
out
daa
inc
not
adc
lret
aam
jbe
mov
bound
pop
push
lea
dec
and
addr16
xor
and
cmp
insl
decl
inc
sahf
lock
mov
shrb
dec
dec
sub
jno
test
mov
lahf
mov
cwtl
mov
insl
push
jo
cli
mov
divl
xchg
ljmp
je
and
mov
aaa
sbb
js
hlt
sub
add
mov
lahf
dec
pop
mov
cmc
dec
test
sbb
push
inc
dec
data16
inc
ret
stos
and
mov
pop
push
and
xchg
cs
imul
xchg
inc
fwait
or
or
insb
aaa
ss
les
jns
pop
fists
push
stc
les
lahf
sahf
jecxz
jae
popf
rol
mov
rcrb
mov
xchg
sahf
scas
xchg
jg
into
jnp
push
imul
dec
sub
movsl
ret
xor
bound
outsb
inc
mov
sub
jb
in
add
data16
lcall
and
add
inc
fwait
ljmp
mov
cmp
mov
negb
fcmovnb
js
push
shll
jnp
leave
cmp
sbb
stc
cmpsb
in
popa
test
add
dec
adc
xor
hlt
and
leave
ljmp
ret
pop
mov
loopne
inc
jnp
xlat
int3
int
cmp
dec
cmpsl
fs
mov
je
sub
mov
int3
sbb
lret
lcall
pop
imul
dec
xchg
inc
sub
jg
pop
aas
call
divl
jmp
subb
jmp
es
loope
ret
scas
cmp
pusha
dec
pop
xchg
decl
mov
or
clc
jg
push
scas
mov
lahf
and
mov
call
dec
push
test
stos
cmp
jmp
fildll
les
negb
adc
sub
rcrl
addr16
pop
inc
test
imulb
jg
ret
or
jl
imul
ss
call
mov
aam
out
jbe
aam
mov
nop
mov
outsl
sti
notb
out
lds
mov
mov
mov
sub
adc
jbe
in
ret
pop
sbbb
sub
jb
dec
push
cmc
add
mov
pop
mov
push
lret
xlat
mov
fcoml
cmp
arpl
push
and
xchg
xchg
push
sub
insl
outsb
pop
insb
xor
call
ljmp
sbb
push
scas
repz
sub
stc
pop
inc
cmp
in
mov
out
cmpsb
jmp
add
pusha
mov
pop
push
std
std
fwait
in
jp
fs
pop
cmp
data16
xchg
aas
into
push
or
mov
gs
pop
js
ss
add
pushf
je
xor
pop
mov
loope
popl
lds
ret
sbb
out
sub
jb
aaa
movsl
fdiv
sbb
testb
or
add
push
andb
movsb
rcrb
push
loopne
pusha
mov
xchg
add
mov
fcoms
aaa
testl
cli
lock
adc
mov
pop
xor
lock
mov
popa
cmp
daa
sbb
sbb
pop
or
incb
je
sub
ss
in
mov
pusha
loop
ret
add
mov
mov
loope
jo
add
lret
aas
and
stc
stos
lock
or
out
fimull
push
fsubs
cmp
and
adc
mov
iret
mov
dec
call
fiaddl
les
mov
lods
dec
sti
fs
cmpb
loope
pop
inc
sbb
test
ret
ljmp
xchg
sbb
jns
jp
hlt
movsb
adc
jl
mov
pop
orl
scas
mov
add
icebp
in
adc
pop
jbe
sub
in
sahf
sbb
mov
popf
cmpsl
push
inc
ja
jp
scas
sarl
lock
push
shlb
jle
ds
pop
adc
push
hlt
inc
pop
lret
ret
sub
cmp
stos
gs
or
filds
shrb
inc
and
xor
data16
push
push
pop
mov
mov
scas
testb
pop
out
dec
mov
repnz
xlat
jnp
testb
mov
rep
out
es
cmp
lods
mov
sub
movsl
nop
lret
lret
mov
mov
dec
inc
ror
pushf
cmp
std
stc
push
cmp
jno
jmp
xor
addb
or
pop
xor
mov
loopne
sub
cmp
dec
fwait
pop
add
ss
or
or
divl
push
cltd
jo
mov
fbstp
daa
ds
andl
inc
xlat
mov
adc
mov
cli
insw
sti
fsts
ljmp
sub
lret
movsb
mov
adc
lock
mov
xchg
mov
add
or
jl
mov
cmc
sub
fwait
xor
ror
mov
mov
push
faddp
leave
test
stos
xchg
sub
push
and
shrl
dec
fisubrl
add
stos
mov
fdivrl
pop
call
cmp
jbe
lods
in
xor
dec
popf
xchg
sbb
das
jns
and
push
lock
loopne
sbb
dec
push
push
cld
and
sbb
aad
pop
mov
arpl
jns
jno
mov
bnd
adc
inc
icebp
in
adcl
inc
dec
xchg
test
mov
leave
testl
jg
mov
mov
je
push
outsb
mov
outsb
inc
outsb
lret
sbb
jmp
rorb
fdivr
addr16
add
mov
pop
cli
mov
mov
mov
enter
inc
or
shll
cmp
mov
mov
dec
shrb
into
out
int
rcrb
mov
into
add
xor
cmp
add
repz
dec
aam
into
mov
mov
pop
and
aam
or
and
inc
jp
push
leave
cmp
stos
pushf
sti
aad
mov
jbe
xchg
pop
ljmp
les
xchg
cld
mov
lret
cmp
inc
push
inc
lods
test
or
dec
mov
stos
jns
imul
sub
into
mov
and
clc
ss
jge
push
push
jge
and
inc
test
mov
jmp
out
push
popf
pop
cmp
inc
outsb
adc
cmpsb
sbb
add
push
mov
jb
es
sub
div
out
add
adc
je
lock
imul
adc
jno
arpl
movsl
inc
inc
cmp
jle
ret
mov
mov
aaa
lret
cmp
push
cmpsl
mov
ret
ja
mov
inc
or
pop
pop
sbb
jnp
cmp
push
orb
dec
notb
icebp
cmp
cwtl
and
sbb
lret
fcmovb
repz
or
and
and
push
mov
dec
iret
pusha
je
sahf
cli
cltd
push
pusha
addr16
sub
lods
xchg
push
dec
cld
in
jnp
or
es
mov
sbb
ds
or
cmp
lods
sbb
pop
sub
loop
push
popf
out
inc
xchg
mov
and
or
in
mov
and
aam
cli
pop
mov
cmpsl
mov
test
stos
mov
stos
daa
shl
gs
test
xor
std
jmp
out
jmp
xchg
pop
fcoml
sbbl
in
pop
cmpsl
adc
aam
cwtl
adc
or
pop
cmpsb
in
nop
das
cltd
aas
iret
lcall
and
lods
lret
sahf
hlt
pop
push
inc
xchg
adc
mov
hlt
sbb
xlat
cli
pop
loop
xchg
aas
xlat
mov
fdivp
out
scas
aas
inc
push
pusha
fcoms
push
stos
pop
xchg
das
in
jno
mov
je
scas
les
in
scas
sti
int
les
test
cmpsl
and
inc
pop
daa
movsb
dec
ss
cmpsb
clc
sbb
push
jnp
mov
ss
mov
mov
fldenv
cmp
lds
jne
and
nop
push
in
pop
insb
jbe
cmp
cmpsl
loop
or
sub
add
xor
jbe
out
jg
int
xchg
mov
je
aam
out
mov
test
add
test
cmpsl
push
or
xchg
mov
pop
push
gs
nop
mov
in
fiaddl
jmp
insl
cmpsb
fimuls
repnz
pop
inc
xor
cmp
scas
notb
addr16
sti
and
imul
hlt
sbb
pop
aas
jg
xlat
inc
rcrb
add
int
mov
adc
adc
bound
scas
and
cld
lea
mov
bswap
pop
out
lds
xor
xchg
inc
ss
out
icebp
mov
add
inc
and
enter
mov
shlb
mov
xor
movsl
jg
xor
adc
or
imulb
mov
mov
data16
sbb
mov
dec
push
or
adc
or
rorl
ljmp
mov
vmulsd
cmpsl
inc
fwait
lret
and
in
mov
push
les
idivb
jl
clc
mov
push
enter
je
test
scas
ret
movsl
push
inc
pmullw
cs
xchg
or
popf
jns
aas
mulb
and
add
in
xor
ljmp
lods
sbb
out
stc
mov
jp
iret
adc
dec
test
pop
clc
aaa
aam
fildl
xor
mov
xlat
push
ss
pop
xchg
jns
sbbb
add
mov
sub
pop
fdivrs
in
jnp
cmp
out
fs
inc
imulb
outsb
inc
sti
mov
std
mov
push
mov
sti
add
test
sub
sub
js
cs
shlb
adc
xchg
aam
push
stos
push
gs
xlat
ljmp
xor
ljmp
mov
pop
push
gs
dec
in
scas
jl
or
imul
add
cmp
mov
punpckhbw
dec
fs
pop
or
outsb
sbb
rcr
je
add
mov
xchg
shrl
fs
mov
push
movsl
mov
adc
pop
cwtl
scas
out
mov
call
push
dec
pop
cmp
mov
pop
mov
repz
rcll
lods
add
jecxz
pop
jb
lret
mov
pop
jge
jbe
mov
adc
lea
jg
xchg
add
fs
or
jo
push
jl
invd
pop
sub
nop
xchg
xor
push
push
pop
sbb
adc
in
mov
iret
outsb
add
mov
popa
outsb
fwait
lret
mov
jbe
out
repnz
push
arpl
aam
test
mov
add
test
shll
dec
xorb
sub
adc
add
in
testl
inc
push
lcall
lea
cmc
mov
test
add
repnz
mov
sub
pop
sarb
icebp
jo
das
cwtl
scas
add
orb
leave
sbb
loop
jmp
xchg
aaa
dec
mov
jbe
cld
fwait
enter
sub
cld
divl
xchg
mov
mov
clc
ljmp
push
aaa
aaa
or
pop
mov
pop
daa
pop
push
cmp
mov
xor
pop
pop
add
aam
mov
fiaddl
mov
sbb
sbb
and
add
sti
out
loop
call
jmp
mov
imul
insb
adc
repz
jl
pop
dec
repnz
mov
inc
cmp
add
ja
shl
pop
fs
jb
mov
sti
sbb
hlt
shll
dec
out
inc
jle
push
cli
fucom
cmc
mov
push
xchg
mov
adc
cltd
and
adc
cmpsl
mov
inc
cmp
aaa
aas
outsb
sub
rclb
dec
and
adc
stc
test
or
aad
jne
orl
cmc
cmp
push
inc
loope
ret
int
shrl
jmp
jbe
push
mov
and
fisttpll
inc
fbld
jl
mov
lahf
pusha
bound
xchg
push
fimuls
xor
das
leave
stc
loop
mov
iret
fimuls
adc
or
test
adc
iret
lahf
dec
arpl
stc
dec
lea
rcll
aad
xor
fstpl
divl
fnstcw
in
cwtl
jne
push
fbld
ss
icebp
xchg
mov
loopne,pt
test
in
test
dec
stc
inc
sbb
cmp
ljmp
dec
push
clc
incl
adc
mov
lcall
lea
ds
pushf
cli
ffreep
cmp
mov
idiv
loopne
fistpl
xchg
push
lahf
fwait
lret
inc
mov
in
stos
out
lock
insl
add
or
sub
ficoml
mov
mov
adcl
jmp
cmpb
inc
subl
cmp
dec
mov
shl
add
orb
std
mov
out
sub
fidivs
adc
fadd
fcompl
sub
lock
mov
fiadds
xchg
out
xor
fdivrs
fmuls
mov
xor
aad
out
pop
testb
rcll
test
add
imulb
jl
sbb
and
add
inc
imul
lea
sub
popf
loope
hlt
loop
int
xor
mov
std
mov
or
or
mov
sub
fndisi(8087
pop
jmp
pop
out
jge
xchg
push
ss
cmp
sbb
das
mov
ret
pop
jno
insb
movsb
mov
test
test
push
std
popf
test
mov
repnz
sbbb
pop
cmp
cltd
sub
enter
out
sbb
dec
push
xchg
fdivp
sub
loope
outsb
sbb
scas
cmp
sub
jns
xchg
mov
push
daa
sarl
xor
or
jg
dec
adc
lods
sahf
decb
ljmp
push
add
xchg
push
enter
lahf
inc
cmp
fcoms
rcr
in
sbb
xchg
sbb
inc
outsl
and
ds
dec
in
movsl
nop
xor
sub
stos
fistpll
orl
pop
cmpsl
inc
xchg
lock
cwtl
cmpsb
inc
inc
pop
or
scas
xstore-rng
cmpsl
add
xor
jg
dec
insb
std
pop
push
enter
sub
stc
add
aas
jo
mov
daa
in
mov
jg
ret
and
lods
mov
ja
lcall
mov
popa
pop
lcall
sub
mov
xchg
lret
outsb
xchg
fcomp
sarl
movsb
loope
fs
outsl
cli
lods
fucom
sub
mov
stc
adc
mov
cmp
xchg
cltd
pop
xchg
dec
fs
dec
push
outsl
pop
xchg
or
push
jne
popa
pop
add
mov
pusha
aas
mov
adc
mov
inc
push
pushl
jae
add
ja
jmp
push
repz
inc
and
ret
mul
and
mov
mov
mov
sbb
sub
out
xchg
xchg
xor
mov
push
movsl
and
icebp
scas
insb
fildll
clc
and
inc
xor
sub
shr
cmp
fucomip
mov
test
rclb
jae
fwait
inc
mov
inc
adc
fcomi
scas
sbb
sub
adc
lea
pop
lret
cmp
jnp
mov
leave
adc
shll
hlt
cmp
sub
and
mov
outsl
lcall
js
out
sbb
pushf
mov
fisttpl
inc
ret
cmp
dec
out
sub
adc
insl
mov
cmp
cmpl
dec
cmpsl
cs
and
and
add
xchg
xchg
aas
movl
jb
in
push
mov
or
xchg
push
sub
xor
adc
cmp
lret
aas
lret
out
or
mov
xchg
lret
arpl
push
or
fwait
jge
cltd
mov
in
das
xchg
clc
adc
lret
jns
xchg
mov
rorl
sub
xlat
in
mov
into
pop
dec
push
sbb
loopne
pop
popf
or
inc
repz
ja
fstl
sub
out
xor
jbe
movsb
shll
scas
std
clc
cld
test
xlat
mov
scas
inc
imul
fcoml
ja
fbstp
dec
stos
mov
push
cld
popa
push
adc
mov
aaa
and
std
jp
add
pop
loope
push
clc
lcall
xor
imul
jae
inc
dec
sub
mov
sarl
addl
mov
shr
jbe
lret
adc
dec
xlat
push
test
inc
adc
and
shrl
imul
ret
shr
test
lods
call
dec
dec
mov
xchg
adc
fnstsw
mov
add
repz
repnz
popf
ja
pop
mov
ret
popf
fldln2
cmp
call
jg
movsl
in
div
mov
sub
movsl
push
lock
mov
ret
idiv
rorl
sub
xor
mov
das
inc
leave
or
ret
jnp
adc
outsb
jbe
cld
lea
dec
nop
aas
push
in
out
pop
push
mov
fwait
and
or
adc
push
aaa
mov
in
loop
clc
es
xchg
aad
insl
dec
sti
mov
clc
ss
scas
fwait
sub
sbb
cli
repz
xorl
mov
fcoml
push
push
jns
add
xchg
push
shll
and
es
mov
jge
insb
les
sbb
push
sub
fnsave
mov
repnz
jecxz
mov
lods
push
add
inc
sbb
pop
je
push
mov
push
xchg
push
ficoms
jno
cltd
aaa
jg
notb
mov
inc
lahf
movsb
ret
pop
jne
fwait
mov
jecxz
stos
ror
aas
cmp
insb
mov
movsl
int
inc
adc
or
lods
sbb
jbe
lea
fisttpll
insl
aaa
adc
add
jnp
xchg
xlat
sbb
inc
shll
mov
xor
mov
or
xchg
mov
push
gs
push
test
pop
lea
jne
inc
add
int3
jmp
push
mov
aad
jg
test
xor
scas
push
stos
add
add
inc
adcl
push
mov
bound
scas
fwait
pop
fldcw
cmp
shrb
clc
cmpsl
add
rcrb
aas
xchg
sbb
cmp
jp
jne
pop
in
fldl
fcoms
xor
dec
aaa
sub
mov
or
sbb
sbb
or
xchg
adcl
cmp
cmp
sbb
sbb
lock
lahf
xchg
lods
pop
cld
xchg
adc
fstl
xchg
icebp
fcoms
fmul
mov
repz
das
mov
xor
std
movsb
mov
hlt
xchg
imulb
das
movsb
or
mov
or
xchg
ja
adc
stos
adc
adc
inc
push
push
out
cmp
out
std
xchg
movsb
setl
repz
iret
stos
ret
repnz
mov
nop
loopne
push
movsl
add
shll
mov
jmp
pop
cwtl
mov
icebp
mov
lods
fsubrl
outsl
mov
fimuls
rcrl
arpl
int
repz
jl
mov
jnp
lcall
call
jae
mov
aad
fdivrs
insl
ja
or
std
push
dec
mov
sbb
sbb
push
mov
mov
in
jmp
in
pushf
xchg
pop
push
std
adc
stos
xor
add
lods
js
dec
test
sahf
push
insb
or
rcll
cmpsb
sbb
cmp
lods
sbb
sahf
call
adc
xchg
ja
pop
repz
pop
testl
mov
push
pushf
imul
mov
shlb
adc
mov
adc
or
push
mov
mov
dec
js
cmpb
test
outsb
push
adcb
sbb
cmpsb
jmp
push
sbb
mov
dec
jns
mov
pushw
bound
jno
cmp
popf
cmc
mov
sti
pusha
xchg
in
mov
xor
jo
xor
pop
ja
enter
cmp
es
mov
mov
cmp
cmp
rcr
pop
cs
ficoms
insl
dec
push
sbb
cmp
cmp
daa
and
and
jb
fsubr
cld
dec
mov
xchg
mov
pop
fsubrs
push
subl
xchg
loop
ss
in
and
inc
jb
mov
push
jno
xchg
inc
iret
scas
cwtl
adc
bound
fisttps
test
push
lock
xor
xchg
xchg
jbe
push
push
jp
sti
sbb
roll
push
cmp
orl
lds
fdivr
push
into
idivb
xor
cmp
test
add
jle
pop
mov
or
or
addr16
mov
fimull
xchg
mov
cmp
sub
adc
test
push
xchg
test
loope
xor
mov
out
fsubl
sbb
xchg
and
xchg
sub
mov
xlat
dec
repz
out
xchg
and
mov
xchg
test
dec
cli
add
dec
fnstsw
js
fimuls
divb
or
test
out
mov
sbb
dec
and
fs
pop
test
jg
pop
mov
cwtl
and
cld
fidivrl
addr16
idivl
add
jns
fmuls
clc
add
shrb
pop
mov
dec
pop
fildll
inc
pop
jge
jae
gs
loopne
inc
push
rcr
lret
add
imul
repz
dec
rcll
repnz
test
add
cld
or
and
rcll
enter
xchg
add
pop
add
push
push
popa
mov
lret
ficoml
add
lret
xor
sbb
push
add
cwtl
adc
dec
scas
lea
cwtl
adc
es
jae
outsl
mov
cmpb
ljmp
mov
addr16
ret
lahf
adc
rcrl
add
sub
push
dec
fstl
push
and
xor
loope
xchg
out
mov
xor
pop
aam
repnz
cmp
mov
push
filds
adc
mov
mov
jl
out
ficomps
jo
dec
fucom
cmp
les
stc
add
ja
outsl
enter
sbb
scas
dec
lcall
das
pop
sub
add
inc
popf
or
cwtl
sub
and
movb
xor
and
jge
push
xor
jge
jmp
xor
dec
jae
cmp
lahf
push
jnp
pusha
andb
jno
jp
gs
sbb
or
adc
fcoml
es
and
pop
and
add
inc
sbb
cmp
mov
pushf
insl
test
sub
cmp
cli
mov
cli
rol
aam
dec
fidivs
cwtl
xchg
pushf
cltd
push
push
mov
or
aad
and
mov
ret
test
jae
xchg
and
mov
rcrl
pop
hlt
jmp
xchg
outsl
push
xchg
xchg
pop
out
orb
test
sbb
inc
stos
mov
in
mov
dec
bound
push
loop
cli
mov
out
cmpsb
out
mov
xchg
xchg
mov
mov
lea
fistpl
cmc
fiaddl
push
mov
pop
inc
je
test
lock
xor
loopne
jb
in
dec
repz
cwtl
jmp
mov
fidivrl
fmuls
jno
mov
xor
outsl
test
lods
push
xchg
cmc
rolb
fs
xor
aaa
pushf
fdivrl
aam
aad
fsubrl
int3
test
call
add
lea
cmpsb
iret
test
ljmp
xchg
cmpsb
sahf
mov
sbb
cmp
push
dec
int
movsb
pop
daa
movsl
pop
out
ret
sub
pop
inc
in
dec
popl
in
pop
and
or
stos
fsubrs
adc
lahf
aam
adc
or
fbld
std
scas
sti
xchg
xchg
insl
jmp
mov
lcall
imul
repz
data16
sub
mov
jo
roll
mov
push
scas
shr
loopne
push
in
ds
sti
and
xchg
push
lahf
and
jg
xor
pop
or
cmpsb
insl
sub
mov
sub
cmp
lods
mov
xor
push
rolb
mov
insb
fidivrl
lretw
or
decl
mov
out
push
xchg
inc
jae
add
js
cmpsl
mov
pop
mov
sarb
cwtl
pop
add
adc
dec
sub
aam
pop
repz
out
push
ret
gs
js
gs
int3
sbb
push
int
rcrb
ret
pop
idiv
and
pusha
mov
subb
cmp
add
in
lods
cmpsb
xor
fbstp
xor
out
jne
cli
xlat
xor
ds
rorl
clc
in
and
cmpsb
nop
mov
jmp
jb
jmp
push
xlat
jne
test
inc
sbb
jnp
push
mov
ret
adc
or
lret
rcrl
inc
out
adc
cli
outsl
testl
iret
rorb
mov
push
jae
test
cmpsb
xchg
sub
std
add
clc
test
mov
pop
xchg
mov
jecxz
mov
out
sbb
imul
inc
mul
or
inc
fwait
sub
insl
and
xlat
and
mov
xor
sub
sbb
adc
push
jb
xchg
pop
inc
cmp
add
inc
mov
mov
pop
aaa
push
mov
jns
lcall
ljmp
cmp
inc
jno
in
je
mov
xchg
pop
adc
jle
or
push
movsb
imul
adc
jg
push
test
ja
test
dec
sti
iret
xchg
incb
out
imul
ljmp
ret
mov
push
jns
and
mov
lcall
int
or
mov
mov
sarb
cmpsl
ret
xor
xchg
jnp
mov
add
push
aam
sub
sbb
cmp
inc
cmpsl
pop
cmp
fnstenv
dec
dec
push
mov
iret
jp
sub
inc
fcompl
in
push
fidivl
popf
sti
mov
stos
addr16
sarl
ss
std
dec
push
mov
gs
ds
arpl
push
mov
jge
scas
or
cmp
xor
adc
in
cli
push
aas
mov
mov
mov
xor
and
jnp
outsb
shll
dec
les
sbb
sub
out
std
sub
or
mov
daa
xor
add
dec
add
testl
push
or
test
and
scas
popa
out
xchg
jnp
fbld
mov
sbbb
xor
xorb
and
test
lods
clc
lret
pop
insb
or
pop
lock
js
push
push
fisttps
or
jecxz
mov
adc
inc
inc
cmpsl
int
pop
xor
pop
inc
fmul
addb
pop
iret
jl
xchg
fdiv
or
in
adc
js
mov
pop
cmp
movsl
cld
dec
add
jge
add
and
push
jno
rcrl
push
and
out
jnp
adcl
mov
mov
dec
fs
pop
outsl
aas
ret
sub
movsl
xor
inc
scas
sbb
jg
mov
in
pop
push
sbb
pop
mov
pop
mov
or
pop
insb
mov
mov
xor
out
je
pop
fisubl
xchg
sbbb
bound
dec
in
and
std
mov
xchg
jnp
pop
sub
dec
rcl
jg
push
jl
and
js
stc
shl
pusha
iret
ucomiss
das
fstp
and
xor
roll
insl
adc
mov
jnp
xchg
xor
aad
stc
repnz
and
fcomps
mov
loope
insl
clc
or
fmul
test
inc
sub
sub
sub
pusha
push
pop
stos
xor
mov
out
jb
pop
push
adc
int
pop
mov
fwait
jmp
test
add
in
and
testl
es
and
mov
adc
ljmp
push
rcrl
ret
outsl
inc
jo
divl
movl
aam
ret
insl
nop
adc
sbbl
xor
lods
hlt
pop
ficoms
sti
fcomp
mov
in
int
xor
in
neg
push
sub
inc
addr16
addb
or
and
dec
inc
pop
int3
stc
pop
popa
lcall
xchg
je
inc
mov
inc
jl
flds
jp
mov
sbb
loope
inc
test
and
cmp
pop
in
xor
hlt
dec
arpl
push
les
xchg
mov
das
iret
add
test
outsl
and
cltd
sbb
mov
xor
mov
out
xchg
leave
or
mov
in
mul
or
out
arpl
ljmp
ffree
cmp
fimull
sub
aas
movsb
adc
cmpsb
jbe
xchg
scas
call
sahf
loop
pop
js
mov
icebp
mov
xor
or
pop
fstps
jg
dec
sub
add
adc
cmp
cmp
xor
shrb
and
data16
pusha
out
sub
out
jg
cwtl
fisubs
jno
dec
add
sub
mov
loopne
add
cltd
cmpsb
dec
jne
shrb
pushf
jle
adc
es
lea
icebp
sti
ss
repnz
sti
out
sar
mov
jbe
xor
mov
or
xor
cmpsl
addr16
pop
cmpsl
rolb
nop
mov
push
out
mov
dec
mov
mov
call
jae
add
adcb
cmp
or
ss
sbb
ds
jne
ret
cmpsl
rolb
insl
inc
das
out
cmp
fidivs
rorl
pop
sti
xor
lds
out
scas
movsl
mov
aam
xchg
mov
cli
mov
in
inc
push
adc
aas
xor
add
fmull
lret
mov
fstpt
shll
ds
jbe
rclb
dec
aas
sbb
imul
mov
hlt
cs
lods
xchg
int3
push
test
enter
mov
lea
cmpsb
or
pop
fstps
xor
data16
cmp
pop
out
neg
mov
add
mov
popa
push
roll
sarl
pusha
lahf
jle
test
dec
jae
out
aaa
clc
pushf
neg
dec
jmp
lcall
fstpl
xor
jge
rcrb
mov
push
pop
fmull
jle
adc
jmp
push
adc
jl
lods
outsb
iret
push
or
stos
leave
jg
mov
repnz
into
mov
scas
fisubs
lds
sbb
sbb
lahf
jne
and
inc
push
ret
lahf
or
dec
push
fdivrl
or
jno
jecxz
arpl
mov
jno
push
addb
pop
pop
mov
push
aad
scas
sub
insl
fsubl
jnp
sbbb
xchg
pop
lods
xchg
nop
mov
or
ficoms
pop
stos
fmul
movntq
mov
mov
test
ds
or
insl
dec
movzwl
or
test
mov
xchg
xlat
jo
sahf
fisubrl
into
std
pop
iret
jmp
xchg
lahf
int3
imul
push
xlat
ret
cmp
cmpsl
xor
adc
inc
mov
hlt
jnp
gs
jl
pop
or
xchg
fstps
ljmp
xchg
je
push
les
out
icebp
pop
rcll
sbb
push
lcall
jno
test
and
loopne
adc
adc
xchg
sub
in
jnp
cs
and
inc
mov
inc
cs
mov
call
dec
mov
faddl
fsubs
push
push
mov
shrl
cmpsl
cltd
jns
inc
add
push
xchg
pop
cmp
stos
outsl
and
out
ret
imull
fwait
icebp
inc
fldt
mov
fsubrl
dec
mov
xor
out
push
xor
dec
push
inc
or
sbb
test
or
fbstp
adc
or
xchg
sub
lock
ret
push
les
push
jge
inc
insb
xor
sbb
add
inc
sub
dec
shr
js
inc
aas
pop
inc
mov
jecxz
pop
mov
and
pop
xchg
movsb
lea
sub
mov
xor
sahf
add
fcmovne
or
out
popf
out
mov
loope
adc
jle
lcall
mov
sbb
sub
push
adc
test
jbe
mov
jge
or
cmpsb
shll
xchg
ret
aam
xchg
push
jbe
push
imul
dec
in
arpl
mov
sub
jne
mov
ljmp
push
mov
ret
ret
jl
xchg
add
mov
pop
addb
xorl
adc
adc
xchg
push
dec
mov
test
jno
xchg
bswap
andb
add
pop
mov
pop
pop
out
test
jb
icebp
xor
and
push
das
push
or
lret
lcall
mov
in
push
arpl
lods
xlat
sahf
push
xor
out
idiv
adc
and
outsl
or
fildll
divb
cmp
sbb
push
mov
adcb
lds
cmpb
shll
jmp
pusha
cld
add
inc
xchg
into
aaa
mov
shlb
mov
xor
push
dec
sub
sbb
inc
filds
add
aad
arpl
je
loop
sbb
divl
adc
scas
mov
das
jae
pop
pop
mov
repnz
loope
push
inc
enter
insb
jmp
addb
cmc
add
dec
mov
lods
lahf
xor
es
dec
add
dec
pushf
adc
pop
nop
incl
jge
cli
jmp
jbe
stos
mov
aas
sub
xchg
sub
sbb
test
mov
shl
adc
push
add
dec
dec
cwtl
sbbl
fwait
cmp
add
dec
in
movsl
sti
aaa
mov
fnstsw
pushf
add
sbb
pop
scas
stc
and
ret
adc
sub
pop
ret
call
fs
or
jno
fcomi
push
mov
sub
inc
adc
orl
pop
stos
pop
pushf
dec
pop
add
pop
push
pusha
and
sbb
add
cmpsl
mov
xchg
adc
sub
bound
jge
lods
jl
scas
ljmp
es
sbb
ds
arpl
lret
bound
add
sub
xor
sbb
sbbl
xchg
xor
rorb
xchg
rorb
cmp
sub
lret
dec
or
nop
jae
shrb
inc
sub
ljmp
push
leave
in
aad
mov
bound
das
ss
cmpsb
jne
xlat
addl
push
test
pop
xor
push
lods
test
mov
fdiv
fmuls
cmp
shll
dec
push
cmp
sbb
inc
dec
inc
dec
imul
push
mov
out
xchg
fisttpll
ficompl
ljmp
fcompl
inc
leave
and
xorl
aam
mov
imul
not
ljmp
inc
jl
test
ljmp
loopne
push
fidivs
jmp
or
into
clc
imul
inc
inc
xchg
push
xchg
mov
arpl
sub
out
int
adc
xor
jmp
shrb
mov
sub
jae
pop
cmpsl
inc
lea
clc
out
push
sub
or
pop
scas
jo
rol
jp
shll
push
pop
xor
test
movsl
add
loopne
je
pusha
push
mov
push
pop
dec
lds
bound
push
adc
mov
jl
lret
cmp
xor
jae
jle
or
scas
sahf
scas
sbb
pop
jns
sub
add
push
cli
push
jno
mov
inc
fidivrs
cmp
jle
push
adc
adc
add
fcoms
shlb
pusha
fidivs
mov
push
insl
dec
pop
jo
outsl
popf
mov
dec
or
lcall
dec
inc
xor
jns
call
daa
push
and
sub
add
mov
pop
es
add
cmpsl
incl
jmp
ja
cmc
jg
fcomi
sahf
shlb
movsl
enter
jg
jns
fildl
ret
setno
out
cmp
aaa
cld
out
out
outsb
sar
add
pop
adc
aas
int
mov
sarb
test
adc
xchg
mov
movsb
jp
cmp
hlt
icebp
cmp
or
cmp
loopne
roll
dec
pop
jbe
in
sbb
std
mov
and
cs
arpl
jnp
cmp
mov
frstor
stc
pop
iret
jnp
pop
push
pop
nopl
push
lods
mov
gs
xor
movsl
orb
test
mov
nop
inc
lcall
cmpsl
push
ljmp
dec
cmp
inc
xchg
or
movb
mov
popf
sub
clc
dec
int
or
mov
add
out
or
leave
lcall
mov
pop
adc
lret
dec
xchg
mov
int
xlat
dec
mov
rcll
xor
cld
adc
xlat
xrelease
xchg
cmp
insb
idivb
inc
jle
rolb
push
add
and
leave
jmp
cmp
shrl
mov
adc
clc
inc
jns
add
mov
pushf
and
lea
xor
dec
das
mov
inc
fwait
fcmovnu
outsl
mov
cmpsl
shrb
scas
or
lcall
jo
xlat
and
or
mov
push
add
nop
push
cmc
xchg
add
or
mov
fcompl
lods
outsb
cmp
test
test
dec
lea
or
cs
orl
mov
out
xor
mov
inc
addl
xor
aam
subl
hlt
pop
jmp
cmp
pop
xor
pop
add
mov
movsl
test
cmc
xor
leave
inc
xchg
xor
push
sub
cmp
out
out
mov
out
stos
mov
add
mov
in
shl
jg
outsb
ds
daa
movsb
fdivrs
xor
and
inc
push
pop
xlat
aas
ret
mov
add
lcall
pop
lds
push
xchg
mov
mov
lods
add
mov
jmp
cld
je
sub
sub
xchg
xchg
jmp
xor
cmp
imul
dec
dec
add
enter
xor
inc
mov
jecxz
pushf
jp
push
jo
sti
jecxz
sub
orb
sub
lods
mov
flds
mov
ss
aaa
inc
aas
xlat
cmc
cli
out
xchg
add
or
decb
repz
and
inc
stos
mov
fists
ficompl
jb
repz
movsb
dec
mov
repz
dec
shlb
cmp
movsl
mov
xchg
std
aam
cltd
test
outsl
popf
ja
js
scas
fdiv
pop
jge
push
inc
jp
fs
fldl
push
jnp
subb
faddl
stos
push
pop
lahf
lahf
or
dec
mov
int
pop
subb
and
leave
and
jae
cli
jg
jno
xchg
and
sub
mov
or
lea
inc
popa
mov
outsb
jmp
sbbl
push
and
rol
xor
fcmove
mov
cmpsb
mov
sub
in
push
subl
sbb
push
loope,pt
call
mov
sub
test
and
mov
scas
testb
pusha
add
and
mov
pop
lret
iret
pop
mov
mov
dec
push
pop
nop
clc
stos
out
sub
pop
fcompl
pop
ret
iret
pusha
push
bound
lcall
repz
sbb
cmpsl
and
mov
js
mov
mov
js
xchg
mov
mov
outsb
mov
cmp
hlt
push
inc
pop
push
xchg
add
lods
push
cmp
mov
sbbl
ret
push
cmp
enter
sub
sbb
mov
mov
xchg
int3
xlat
cmp
xchg
sub
xchg
push
pop
stos
lea
xchg
out
les
dec
lods
adc
cwtl
sub
test
fs
xchg
addr16
js
sub
or
scas
mov
and
ret
or
push
dec
ss
scas
in
mov
fs
popf
push
ss
and
push
lds
cli
push
and
push
or
mov
in
mov
iret
andl
arpl
push
pushf
add
call
sbb
pusha
mov
arpl
dec
je
jno
dec
jo
mov
rcll
arpl
push
add
mov
movsb
xchg
out
dec
jo
cltd
test
pop
sbb
adc
mulb
or
int3
movsl
add
lret
inc
mov
mov
push
pop
add
inc
mov
iret
mov
inc
popf
mov
inc
fmul
push
repnz
mov
mov
inc
or
aam
pusha
inc
cmp
add
xlat
jg
mov
ficoml
hlt
pop
cmp
daa
and
pop
lret
xor
xlat
or
fwait
rcl
les
cli
add
mov
ja
mov
imul
or
test
and
sbb
cmp
adc
lds
popa
orl
jge
stc
clc
mov
sbb
inc
aad
or
loop
xor
xchg
jne
xor
cld
and
xchg
ljmp
or
mov
or
in
cmp
xchg
icebp
mov
ret
adc
lock
ds
adc
bound
aas
shrb
lods
popa
adc
js
cmp
insb
stos
andl
jle
enter
jno
ret
pop
mov
loope
and
pop
subl
in
or
data16
mov
xchg
mov
cmp
xor
sarb
in
iret
out
xor
pop
clc
aam
jns
mov
push
sub
inc
sti
sbb
inc
inc
dec
popf
lods
dec
popa
pop
jne
stos
sahf
jne
pop
lret
sahf
js
dec
jb
push
pop
jmp
es
imul
sbb
repnz
scas
pop
mov
jno
adc
push
arpl
aas
into
push
dec
in
call
outsb
inc
xor
lock
mov
divl
xlat
int3
adc
add
xor
xchg
xchg
sti
sub
bound
ljmp
repnz
cli
push
leave
inc
stos
sbb
sub
mov
or
dec
cld
dec
aam
xchg
pop
xor
shlb
repnz
sub
mov
mov
cmp
call
push
sub
andnps
jns
les
mov
mov
xchg
mov
sub
repz
pop
or
loope
dec
das
pop
dec
add
outsl
nop
or
mov
mov
rcrl
shrb
pop
repz
pop
scas
xor
lock
mov
cs
xchg
xchg
js
test
add
jo
or
insl
adc
mov
lret
int3
es
xor
inc
dec
add
pop
push
dec
push
inc
adc
push
mov
mov
push
icebp
jo
adcl
and
test
xor
add
hlt
gs
dec
scas
or
dec
pop
popa
popf
mov
mov
into
mov
push
mov
mov
daa
shlb
mov
dec
push
xchg
sbb
pop
sbb
pop
and
mov
jbe
lret
adc
out
fbld
jb
sarl
stc
mov
inc
inc
jo
inc
fld
fdivrl
xor
fisttpl
and
leave
or
cmpsb
imul
mov
jno
fcmovb
xor
popa
mov
fadds
je
ja
lcall
jecxz
inc
icebp
fdivs
inc
sbb
daa
dec
adcl
lret
stos
dec
push
lret
jmp
loopne
les
sbb
add
pop
cmp
cmp
daa
xchg
inc
bnd
cmp
inc
cs
cmpsl
add
jno
test
xchg
movsl
jmp
cmc
pop
push
jle
orl
mov
push
and
push
fdivrl
scas
outsl
mov
outsb
out
jl
adc
push
push
lock
adc
add
nop
sbb
jge
mov
test
enter
fs
imull
out
icebp
sub
mov
fnstsw
iret
adc
aad
sbb
ss
pop
pop
adc
jne
ja
stos
mov
jle
xchg
mov
xchg
pop
scas
sarb
movsb
mov
sbb
jge
call
and
ret
je
aad
in
adc
ljmp
fbstp
mov
cli
sbb
xchg
roll
nop
sbb
out
cld
fnstcw
fisubrl
push
pop
jmp
jl
jne
or
mov
adc
lahf
pop
test
sub
loopne
mov
sub
mov
mov
sbb
movsb
enter
push
sbb
cmpsl
out
jecxz
rcl
mov
cmpsb
insb
mov
push
outsl
lret
pop
xchg
mov
lret
cmp
and
test
xchg
sub
lahf
sbb
mov
xchg
stos
les
out
subl
mov
and
lock
push
xchg
mov
push
cmc
mov
lret
xchg
test
lods
push
inc
fildll
lock
dec
loopne
or
mov
jl
das
lret
xor
push
daa
adc
pop
outsb
je
out
mov
inc
pcmpeqw
cltd
movsb
xchg
push
mov
int3
and
sahf
pop
cli
cmp
loope
outsl
jmp
dec
out
sbb
ret
mov
xchg
int3
arpl
popf
lahf
sbb
xorb
or
mov
lds
ffree
cmpsl
mov
mov
jge
aas
xchg
out
push
loope
arpl
loop
movsb
xchg
inc
je
dec
and
xor
stc
ljmp
enter
rcl
aas
cmp
shr
into
add
mov
mov
push
mov
call
sahf
js
xchg
sub
pop
or
xchg
jne
ret
popf
pop
sbb
fwait
pop
hlt
sub
or
outsl
mov
add
incl
mov
and
push
jb
dec
rsm
es
out
cwtl
cmp
jecxz
mov
xchg
mov
push
and
inc
imul
pop
mov
jbe
mov
inc
notl
sbb
mov
popa
clc
mov
inc
ds
mov
rorl
lea
sub
pop
or
lock
xor
inc
imul
lahf
dec
xorb
flds
jmp
sbb
jge
mov
ja
push
and
int
pushf
incl
call
inc
cmp
cmp
mov
fidivs
mov
mov
cmp
jnp
pop
push
dec
andb
dec
xchg
ljmp
fisttpll
ja
ja
or
jae
cs
fwait
sahf
pop
push
sub
mov
pop
stos
sahf
dec
jge
pop
dec
push
sti
das
mov
pushf
add
repnz
dec
cld
int
gs
out
dec
mov
mov
and
pushfw
aaa
or
iret
xchg
mov
fs
or
call
cli
fwait
hlt
pop
mov
dec
sbb
cmpsl
pop
movsb
xor
cld
cmp
cmp
dec
cs
adcb
mov
stos
in
clc
pop
nop
adc
loope
pop
out
stc
pop
xchg
fimull
cli
rclb
mov
xor
ret
iret
adc
andb
cmpsb
lahf
fsts
inc
insb
les
jb
jle
sbb
movsb
dec
repnz
jbe
xchg
jns
sti
mov
clc
add
das
mov
loop
jecxz
sbb
mov
push
ffreep
mov
stc
mov
dec
shrb
shll
daa
fcoml
bound
pop
pusha
mov
roll
sarl
mov
mov
into
pushf
push
jns
outsl
mov
loopne
mov
imul
sub
push
cmp
cmp
jp
lds
filds
sti
iret
daa
rcrl
inc
out
scas
xchg
cmpsl
test
arpl
fsin
xor
push
das
es
dec
jb
pop
pusha
xor
pop
and
add
cmp
fbld
dec
fiadds
bound
repz
mov
push
ja
scas
mulb
adc
lods
jg
int3
add
xchg
xchg
and
pusha
push
int3
mov
pushf
loopne
sbbl
mov
xor
pop
lcall
push
in
sub
outsl
push
fcomp
dec
fldt
pop
mov
xor
gs
push
xlat
jg
aam
bound
lea
mov
dec
cs
inc
pop
pop
fisttpll
sub
rorl
loopne
push
mov
cmp
dec
mov
sbb
mov
xor
mov
push
pop
mulb
dec
lock
scas
out
inc
jmp
iret
in
scas
xchg
mov
xor
xchg
inc
scas
gs
mov
and
data16
add
mov
push
lcall
lret
shrb
mov
cmpsb
push
imul
rcll
jae
divb
aaa
or
cwtl
js
jp
xchg
aaa
aaa
mov
xchg
fistpll
mov
or
popf
cltd
shll
lods
jp
xchg
dec
outsb
adc
or
jg
sarb
sub
mov
popa
sbb
inc
mov
iret
mov
pop
les
daa
xlat
cmpsl
xor
testb
xor
or
jnp
popa
cmp
sub
xor
call
sahf
pushf
imul
mov
pop
loop
mov
clc
hlt
mov
cmp
pop
adc
imul
in
ljmp
movsb
inc
js
lret
cmp
add
pop
int3
enter
mov
jl
paddq
mov
jge
loop
ja
icebp
pop
pop
jp
xchg
inc
ss
lret
mov
and
jl
inc
fmul
push
ficompl
inc
pop
jp
int3
mov
outsb
pop
repz
push
add
push
sbb
cli
push
int3
cmp
add
cwtl
das
nop
je
fbld
dec
cmc
lock
xorl
loop
sbb
daa
es
ja
or
dec
xor
hlt
rclb
imul
loope
jp
or
or
repnz
sahf
jns
aaa
lds
sbb
scas
notb
mov
pop
or
into
imul
mov
icebp
jmp
cmc
sti
push
je
mov
dec
xchg
sub
xor
sub
push
mov
cmc
dec
push
aas
test
mov
xchg
lock
and
push
movb
loopne
ds
inc
fsubrp
imull
push
mov
movsl
js
cmp
and
notb
cmp
sub
outsb
and
sub
clc
adc
stc
add
mov
aaa
xor
dec
shlb
mov
clc
outsl
inc
jmp
frstor
adc
mov
lret
push
std
sub
inc
scas
pop
xchg
xor
sub
out
ljmp
or
out
sub
pop
lea
jns
aad
xchg
xor
ljmp
mov
or
cli
pop
cld
sbb
xchg
nop
xor
inc
push
out
sbb
lods
testb
mov
cltd
push
mov
jle
lods
movsl
outsl
pop
data16
adc
mov
push
fwait
xchg
mov
out
jg
test
and
sbb
mov
out
repz
sahf
mov
dec
in
push
lahf
mov
mov
mov
iret
xor
xor
inc
das
cmp
cld
pop
push
push
push
in
stos
pusha
xchg
arpl
ds
jbe
jo
mov
call
adc
pop
icebp
mov
xchg
and
test
mov
mov
repz
push
cmp
push
mov
push
inc
out
movsb
jne
sbb
mov
mov
leave
adc
mov
and
cwtl
jg
inc
mov
sub
not
mov
rolb
cmp
fst
btr
call
outsb
hlt
stc
stos
inc
or
push
idivl
push
int3
popf
fincstp
mov
mov
jge
jns
ss
lods
lds
enter
dec
sti
jno
jmp
ja
das
std
mov
mov
mov
inc
mov
cmc
pusha
or
and
inc
outsb
sub
iret
iret
or
hlt
jb
out
and
jg
sub
push
dec
sub
fistpll
call
and
cltd
sahf
adc
mov
jge
push
sahf
sub
js
jmp
out
data16
push
divb
outsl
sub
pop
daa
xchg
pushf
lret
lea
cmp
aad
push
mov
cmp
jp
lods
cs
lods
int3
cwtl
cmp
mov
pusha
xor
sbb
add
or
sub
inc
movsl
lcall
movsb
aad
fidivrl
inc
out
xchg
add
jns
dec
inc
fcoms
lret
xor
push
stos
xchg
std
push
addl
dec
xor
movsb
push
xchg
xor
or
mov
mov
lds
xchg
adc
andb
test
ret
out
clc
sub
pop
out
lds
shrl
test
loopne
xor
sub
jae
fimuls
jle
sub
jle
push
jp
shlb
push
cmp
adcb
cmp
ret
cmp
dec
repz
inc
cmc
cs
dec
push
dec
adc
bound
imul
int
xlat
add
cwtl
add
outsb
loopne
test
push
sahf
sbb
mov
jbe
xchg
sbb
out
loopne
mov
daa
xchg
sbb
ljmp
pop
insb
mov
pop
cwtl
xor
mov
ja
rorl
mov
loop
ds
mov
stos
pop
pushf
cli
cld
mov
shlb
sbb
test
fisttps
pop
xor
sbb
je
mov
push
adc
cwtl
adc
sbb
cs
mov
push
dec
sub
pusha
loope
cmp
into
fmull
mov
pusha
pop
sbb
add
push
popa
nop
xchg
and
inc
mov
mov
add
fwait
pop
out
add
repz
pusha
cltd
dec
pop
imul
cmpl
popa
adc
popf
xchg
push
add
jp
movsl
inc
cmp
ret
cmp
inc
sub
or
mov
cmp
push
daa
cmp
lret
rcrb
hlt
cld
cs
pushf
mov
mov
pop
loop
inc
and
stos
cmpsb
cmpl
ret
fsubrl
fdivr
or
sti
test
scas
shrb
or
lods
fwait
dec
xchg
xchg
sti
pop
jno
jmp
ret
js
mov
test
add
sub
dec
push
int3
push
arpl
jg
repnz
and
arpl
and
aaa
lret
pop
fs
inc
and
out
nop
popa
push
sahf
mov
inc
or
pop
test
movl
mov
test
stos
ljmp
ljmp
xchg
push
insb
mov
lods
in
ds
dec
stos
adc
cld
fsts
mov
jo
sub
mov
lret
dec
jns
or
addl
mov
mov
xchg
cli
gs
jo
pop
mov
daa
cmc
cmp
xchg
mov
cmpsl
mov
in
xor
insb
mov
sbb
pushf
jmp
rorl
dec
adc
ret
xchg
fwait
xchg
ss
xor
lcall
popa
jg
fs
lcall
xchg
mov
xor
mov
xor
loop
ret
add
mov
push
cmpsl
pop
jg
jo
xchg
test
loope
into
int
ja
inc
sahf
cmp
call
adc
adc
sbb
or
std
clc
cmp
adc
es
aaa
mov
ret
push
fisubrs
xchg
push
not
xchg
fnstcw
data16
dec
xlat
mov
mov
lcall
mov
add
dec
imul
sbb
adc
and
int3
mov
and
lcall
and
pusha
adc
rcll
inc
rclb
arpl
sbb
in
outsb
inc
inc
hlt
ljmp
mov
les
pop
mov
aaa
mov
test
jo
fldt
mov
notl
add
jo
xor
xor
sub
xor
in
in
add
clc
mov
cmpsb
fucomp
repnz
mov
insb
flds
int3
fwait
js
mov
mov
pop
sub
jae
insl
add
mov
add
dec
icebp
adc
stc
data16
test
insl
jge
test
je
add
lea
imul
and
mov
cmp
lret
inc
and
xchg
xor
adc
into
cld
dec
mov
dec
movsl
das
clc
lcall
push
dec
sbb
cmp
xchg
pop
ljmp
faddl
sub
jbe
sub
cmpsb
call
dec
jne
push
mov
out
mov
dec
inc
push
jae
daa
fwait
or
clc
push
mov
insl
lcall
dec
outsb
jns
rcl
add
push
jb
ss
cmp
mulb
mov
cld
mov
mov
out
push
aam
jne
sbb
cmp
imull
xchg
cmp
shrb
out
push
or
and
xor
pop
ret
cmp
dec
adc
mov
pop
mov
mov
inc
mov
cmpsl
das
out
pop
cmp
sub
mov
inc
es
mov
test
inc
push
aas
mov
mov
in
xchg
mov
dec
push
or
lea
jecxz
rorb
and
add
or
rcr
fsubs
or
mov
sarb
ret
dec
and
adc
adc
scas
push
fwait
push
shlb
xchg
push
add
jg
add
aad
cmovno
and
xchg
popa
adc
test
mov
scas
fstpl
pusha
out
das
scas
aad
lods
push
mov
sub
mov
jmp
ss
jg
dec
cli
cltd
push
push
mov
adc
inc
addr16
fwait
xor
fucomi
cmp
inc
cli
sbb
push
into
xchg
adc
or
aad
cli
stc
sub
xchg
cltd
ror
stos
pop
aaa
xor
sarl
movb
ret
fdiv
ret
pop
dec
cmp
jo
int
and
sub
das
cwtl
mov
mov
adc
mov
scas
add
add
out
sbb
out
pop
cltd
nop
adc
outsb
add
repnz
fsubp
shll
leave
fbstp
xor
mov
jmp
sbb
push
mov
js
cltd
and
inc
mov
push
xor
out
push
outsl
pushf
fadd
nop
pop
xor
mov
lds
cltd
xchg
sub
outsl
jb
ret
inc
pusha
mov
mov
in
dec
sbb
stos
mov
popa
mov
mov
push
cmpsb
vmread
aas
xor
testb
insl
aas
movsb
gs
cs
bswap
add
in
pop
je
xor
aaa
inc
outsl
sbb
sub
add
push
testb
imul
push
jae
jnp
loope
std
push
insb
add
iret
jle
iret
adc
imul
test
jge
imul
mov
jge
push
iret
mov
push
in
jg
test
pop
mov
fcmove
sub
in
pop
les
out
out
cli
and
sbb
into
xlat
sub
push
mov
andl
mov
orb
pop
inc
scas
orl
out
test
test
push
jecxz
push
mov
push
add
or
clc
shlb
jecxz
pop
add
sar
popf
or
mov
lret
or
fcmovne
cwtl
lods
lret
mov
out
fabs
dec
sub
or
dec
sbb
loope
cs
pop
pop
cmp
mov
xchg
inc
or
test
lds
icebp
addr16
jne
jl
push
inc
mov
pop
sub
push
loop
jne
in
add
xor
push
repnz
or
ds
lret
sbb
xor
out
ret
das
out
cli
int
ds
loopne
inc
jecxz
out
jmp
and
loop
scas
pop
mov
cmpb
ss
sahf
jecxz
mov
push
cmp
inc
call
scas
xorl
mov
adc
xchg
add
inc
mov
cmp
jae
test
jmp
ret
adc
push
and
clc
pop
add
shrd
push
fsubrl
enter
das
sub
mov
cmp
cmp
cmpsl
test
out
pop
mov
sbb
iret
mov
push
sub
or
jmp
jns
pop
jmp
push
sarb
fldcw
jae
add
stc
jmp
fbld
jle
lds
addl
sbb
sub
dec
cmp
adc
add
xchg
test
mov
jle
or
ret
jg
popf
add
ficoml
cli
xlat
in
decl
and
dec
sarb
lods
je
lea
in
inc
inc
jbe
jg
inc
mov
push
mov
push
out
cmc
int
mov
out
jno
mov
jnp
xor
and
call
mov
mov
int
mov
das
sarb
or
xchg
and
das
jl
std
xor
sub
pusha
jbe
mov
sub
xchg
jp
cmp
mov
shrl
stos
push
mov
cmpsl
xchg
jno
fdivl
jmp
inc
pop
cmp
dec
mov
add
rcrb
lret
sbbb
dec
pop
add
mov
stos
in
cmp
fcmove
hlt
mov
mov
lahf
cmc
test
sub
aam
cltd
cmp
mov
pop
sbb
jecxz
enter
mov
cltd
sbb
or
mov
aaa
jns
add
xchg
outsb
loopne
jnp
shll
rclb
push
mov
sub
insl
jbe
ficompl
xchg
mov
mov
js
jecxz
inc
loope
fidivrl
divl
cli
subl
push
jl
push
out
inc
jo
into
sub
lods
mov
pusha
mov
sub
subl
scas
push
out
lahf
mov
lret
out
pushf
inc
popa
pop
lds
iret
cmp
aas
push
adc
cmp
add
pop
xchg
shlb
sbb
in
xchg
xchg
and
cld
rorl
popa
xchg
fadd
jg
push
scas
adc
faddp
pop
pusha
xchg
xchg
ja
push
dec
mov
pop
ret
mov
xchg
mov
in
pop
sti
fsts
push
xchg
sub
sbb
addr16
dec
jp
and
pop
inc
orb
cmp
jnp
popf
cld
inc
mov
xor
in
int3
cmp
cld
rcrb
cs
mov
mov
dec
xlat
push
push
scas
rorl
xorl
pushf
mov
lods
icebp
scas
lea
mov
ret
mov
xor
mov
or
or
aas
mov
xchg
mov
pop
hlt
mov
pop
fxch
cmp
pop
pop
nop
mov
das
clc
cmp
xchg
sbb
pop
in
dec
inc
add
mov
int3
lods
cmpsb
jno
cltd
aam
cwtl
fdecstp
sbb
leave
xchg
xchg
xchg
bound
cmp
jl
in
add
jae
sbb
mov
das
arpl
stc
cmpsb
push
adcl
stc
out
xchg
or
mov
mov
ret
xchg
add
imul
js
hlt
adcl
es
data16
mov
lahf
dec
ss
imul
rclb
xchg
fs
add
or
pop
dec
and
push
fisubrs
sahf
xchg
mov
mov
sbb
imul
cltd
adc
cli
lcall
push
test
loop
adc
cmp
cli
imul
cmpsb
inc
xchg
outsb
pop
dec
cli
or
sarb
adc
pusha
imul
mov
repnz
inc
call
dec
mov
pushf
push
shlb
aaa
mov
imul
cmp
cld
or
incl
mov
sub
icebp
or
out
ja
in
sub
pop
call
ljmp
inc
fs
sub
or
je
fnop
adc
jecxz
iret
pop
bound
mov
scas
pop
sbb
or
in
add
notb
mov
add
lcall
idivl
fidivrl
fiadds
fildll
sbb
mov
ret
cmp
sub
mov
xchg
sbbl
or
mov
test
daa
adc
jne
fdivl
jge
lcall
mov
pop
in
sbb
xchg
testb
sub
ror
cmp
repz
int
imul
jo
test
ficoml
in
pop
pop
lret
xchg
in
enter
mov
jae
daa
clc
pop
outsb
aam
pop
subl
lret
psubd
ss
imul
sbb
xorl
jl
loopne
pop
jbe
test
dec
icebp
adc
push
push
mov
sti
ljmp
sbb
scas
cli
cmc
jmp
enter
jo
push
pop
or
clc
pop
stc
int
std
mov
mov
mov
or
push
lods
rolb
xor
and
int
cmp
mull
fnstcw
repz
hlt
stos
jno
adc
ss
scas
cli
mov
pop
push
sub
in
in
or
push
iret
stc
movsb
add
inc
shl
xlat
pop
lret
js
or
mov
jl
jns
cmc
shrb
outsb
andb
test
scas
lds
repnz
pushf
gs
xorl
dec
out
and
lea
mov
cmp
movsl
rorb
iret
dec
mov
loopne
mov
push
lods
stc
xchg
pop
je
mov
mov
stc
mov
mov
xor
pop
mov
sub
scas
pop
rol
push
dec
push
mov
addr16
or
push
xor
push
cwtl
pop
jle
shrb
jb
lret
scas
ret
sub
je
insl
adc
jns
sti
pop
movsb
or
sbb
pop
in
dec
insl
cmp
mov
call
loope
xor
mov
shll
clc
push
cmp
jb
sub
lcall
outsb
fidivrs
pushf
arpl
in
push
adc
lds
cmp
mov
sti
and
clc
cmpsb
popa
lods
or
loop
out
sub
insb
push
pushf
push
rcll
xor
mov
call
test
jg
add
xor
dec
pop
sub
test
in
dec
cmp
dec
xor
mov
inc
jp
pop
dec
or
mov
cmp
sbb
dec
in
dec
addr16
aas
and
push
leave
xchg
xor
scas
cs
sbb
hlt
cld
mov
aaa
lahf
test
sub
sub
cmp
fwait
aas
add
rclb
xlat
cwtl
mov
inc
fwait
cmp
add
imul
ficoml
ret
jge
pop
leave
push
lahf
or
fcomip
or
cmp
mov
and
add
js
lea
out
mov
mov
cmp
in
sahf
adc
dec
fisubl
data16
and
insb
mov
mov
mov
popa
scas
std
dec
cs
adc
arpl
pop
inc
in
dec
mov
repnz
pop
dec
lret
lock
pop
cmp
and
sahf
mov
cmp
mov
push
mulb
sti
test
pop
mov
fldt
xor
sbb
jmp
xchg
sarl
in
clc
jge
jp
test
pop
cld
call
dec
punpcklwd
mov
push
xchg
push
test
es
jo
outsl
fnstenv
lods
and
jo
rcr
jle
lret
sbb
pop
sub
ret
mov
jb
int
mov
repz
jge
mov
and
cmp
repz
dec
adc
jae
aaa
out
xlat
mov
jnp
divl
enter
mov
bnd
scas
hlt
add
mov
mov
fldenv
pop
cmp
ret
shrl
jp
sbb
loop
out
lcall
unpckhps
cmp
imul
ret
xor
or
push
dec
cmp
push
push
and
push
ljmp
pop
iret
mov
cmp
sbb
pop
cmpsb
sub
scas
movsb
enter
mov
xor
mov
push
lock
dec
es
test
xchg
ja
mov
ds
mov
fsin
and
js
insl
jnp
push
and
mov
mov
jecxz
pushf
sbb
xchg
pop
cmp
push
sbb
shll
sub
movsl
imul
test
sbb
insl
push
mov
into
cmp
adc
jl
jp
push
popf
in
jo
cmpsb
cmpb
adc
jbe
xchg
jmp
mov
ljmp
jno
cld
pop
adc
addl
iret
mov
pusha
movsl
pop
xor
cmp
je
loopne
test
sbb
int3
sbb
dec
stc
pslld
push
loop
push
dec
lock
mov
xlat
mov
mov
fsubl
mov
test
sbb
scas
into
ljmp
mov
not
test
jmp
outsb
cli
stos
xchg
mov
jns
clc
in
mov
or
les
jge
scas
fnstsw
jmp
lea
xchg
jmp
push
lea
jle
cmp
or
xor
cli
jb
mov
dec
dec
lock
call
inc
pop
adc
lods
add
mov
fiadds
roll
or
jge
test
add
jge
cmp
jbe
movsb
cmp
push
xchg
insl
cwtl
ret
into
ljmp
pop
ljmp
mov
or
jnp
aas
jmp
popa
jne
cmp
loop
addr16
mov
je
pop
mov
in
mov
push
in
sbb
xchg
mov
dec
repnz
sub
jge
leave
fwait
clc
xchg
fistl
enter
imul
xor
mov
add
lahf
mov
lock
fadds
dec
xor
fwait
push
sbbl
push
mov
jnp
adc
xchg
push
mov
mov
addr16
add
xchg
ja
scas
out
dec
std
gs
mov
std
cmp
cli
iret
or
mov
movsb
push
jne
mov
xor
sbb
push
pop
jmp
and
insb
xchg
int
stos
inc
in
adc
add
mov
cwtl
cmp
add
xchg
pop
mov
and
pop
mov
dec
fwait
js
or
or
nop
clc
mov
mov
into
fdivr
repnz
pop
loop
or
push
dec
ret
jne
stos
mov
mov
cwtl
push
cmp
loope
push
xor
mov
push
sub
decl
or
dec
je
mov
dec
push
popf
push
cmpsb
push
popf
je
cmpsb
stc
dec
pop
cmp
push
pop
sbb
xchg
mov
mov
popf
jno
sub
scas
cmc
andb
mov
icebp
xor
loopne
notl
jo
aas
aad
imul
xchg
xor
mov
push
sub
pop
or
in
push
pop
gs
in
jmp
push
mov
cmc
loopne
ja
cmpsb
fsubl
cmpsl
int
call
in
daa
leave
dec
fisubrs
inc
imul
lret
stc
fldenv
pop
mov
or
dec
push
and
bnd
add
and
dec
stos
pop
test
cmp
loopne
out
push
cmc
in
lock
pop
mov
imul
adc
xchg
add
ret
lock
std
test
pop
nop
push
mov
loop
scas
push
pop
jns
fstp
jnp
out
je
hlt
and
insl
jecxz
xchg
scas
xor
mov
xorb
xchg
hlt
add
inc
lcall
push
mov
ffree
mov
in
pop
inc
popa
sub
popf
adcb
icebp
mov
push
lahf
adc
repz
mov
pop
jle
cli
shlb
adc
mov
imul
shll
xchg
xchg
lods
popa
sub
ljmp
adc
adc
lret
cmp
mov
xor
push
fwait
sub
jmp
aaa
in
adc
aad
sub
fsubrs
and
fwait
xchg
lret
repnz
fistps
mov
into
in
dec
cmp
test
flds
dec
aaa
mov
mov
add
stos
push
inc
cmp
insl
inc
jle
es
sbb
mov
lret
push
mov
mov
test
dec
pmulhw
mov
fdivrs
outsl
pop
leave
push
mov
mov
jl
lock
fdivrl
push
int
test
in
out
sti
mov
xchg
enter
fxch
movsb
fstpt
jecxz
cmp
mov
cli
fmulp
mov
pushf
inc
xorl
pop
leave
mov
cmpsl
pop
out
movsb
pop
clc
hlt
lods
sub
xor
fwait
jecxz
cld
cmp
xor
cmp
cmp
jmp
outsl
xor
dec
jecxz
xor
enter
mov
std
ljmp
cli
pop
bound
sub
popf
dec
adc
inc
out
aas
inc
lock
call
xorl
cmp
jb
sub
cmp
cmpsl
lods
pop
cmp
and
lods
loope
daa
cmp
pushf
loope
push
xor
cmp
lods
add
sub
and
outsb
mov
loopne
or
repz
imul
or
jmp
inc
scas
add
push
and
imul
pusha
ss
dec
out
mov
es
lea
sahf
test
sbb
enter
cmp
and
jno
pusha
mov
push
shlb
decl
cwtl
in
jp
sub
in
xor
or
imul
sub
jle
sub
addr16
je
cli
out
push
inc
std
mov
sbbb
pop
testb
mov
and
outsb
icebp
cli
les
and
push
pop
pusha
inc
push
pop
cs
pop
inc
cwtl
in
sub
xor
imul
daa
aam
cmpsb
xor
rorb
jge
mov
leave
nop
lds
popa
jno
fdivl
xlat
addl
push
mov
ret
adc
ss
cltd
ret
push
jp
jle
inc
psubb
or
add
imul
es
mov
dec
add
pop
mov
add
gs
mov
push
lods
dec
sahf
xchg
lahf
test
aad
sbb
lock
outsb
lods
xor
xor
add
ret
mov
cmpsb
adc
dec
jge
mov
imul
data16
mov
jo
mov
pop
jg
fnstcw
imul
mov
fistps
movsb
ret
js
jp
xor
adc
in
lret
pop
gs
xor
je
icebp
add
sub
adcb
insb
ja
addr16
popa
mov
shrl
inc
fst
push
xor
jbe
insb
sbb
jmp
cmp
inc
scas
or
and
ss
xor
mov
subl
pop
jnp
xchg
inc
xorl
iret
mov
iret
nop
jne
imul
pop
lret
cmpsb
jne
stc
hlt
push
adc
out
push
jb
pop
mov
sub
pop
dec
pop
test
maxps
mov
inc
test
scas
or
push
push
mov
arpl
and
scas
push
repz
jne
pop
pop
leave
ret
je
lcall
jl
movsb
lea
dec
sub
int3
sub
push
xchg
out
std
roll
cmp
xchg
mov
fcomp
insl
shlb
mov
sbb
lcall
xchg
mov
add
adc
jl
out
sub
aaa
movsb
and
das
lret
jmp
pop
stos
mov
mov
cld
sti
popf
xor
and
push
ret
imul
fdivrp
mov
and
cld
or
lret
scas
push
mov
cmp
fcoml
out
inc
push
outsb
fsts
pinsrw
and
outsl
jno
sbb
movsl
je
popf
pop
sbb
and
iret
shlb
jne
pop
es
inc
jg
inc
out
push
sbb
inc
test
adc
sub
and
repz
ja
pop
jae
adcl
fiaddl
push
mov
stc
out
xor
mov
pop
cmp
mov
scas
cmp
mov
or
popf
or
fdivrp
pusha
into
dec
stos
idivl
cmp
jbe
or
lcall
mov
icebp
jno
mov
daa
scas
xchg
sahf
fstpt
lods
inc
test
outsl
cmp
jle
lods
dec
int
xor
inc
iret
and
sub
cmp
dec
aaa
sub
inc
into
arpl
rolb
clc
pop
jmp
sti
and
rcl
orl
test
mov
push
aad
pop
inc
enter
aas
out
rorb
sbb
out
insb
pushf
dec
push
test
jl
out
add
mov
scas
sub
mov
jb
inc
jo
out
mov
fbld
pop
cwtl
arpl
fsts
mov
adcl
jns
mov
repnz
xchg
inc
outsb
mov
iret
scas
test
js
shrb
js
and
inc
dec
mov
dec
sub
lock
pop
and
jb
jg
mov
xchg
cltd
xor
aaa
aaa
jo
in
andb
hlt
push
adc
cli
stos
lret
fcmovnu
out
or
cli
jg
fisubrs
inc
aad
iret
xor
inc
push
in
cmc
xor
lods
outsl
popa
testl
adc
out
aas
fists
outsl
loope
enter
fbld
orl
ljmp
mov
dec
cmpl
push
movsb
scas
andb
arpl
sub
adc
inc
test
mov
test
pop
mov
inc
mov
leave
mov
int
xchg
adc
mov
pop
sbb
jae
syscall
hlt
and
pop
add
imul
sahf
arpl
daa
mov
fwait
sbb
add
pop
in
mov
jge
xchg
insb
pop
popa
sbb
popf
dec
jne
mov
mov
stc
jmp
ret
divl
mov
mov
adc
test
das
sub
xor
inc
sub
scas
aad
adc
adc
pop
popf
add
movl
in
jno
and
mov
into
add
cltd
mov
inc
adc
imul
cmpsl
add
mov
add
sti
adcl
jge
cmp
xchg
test
int
xchg
dec
ret
mov
jle
or
cli
insl
cmp
and
test
fxam
pop
int3
inc
cld
inc
and
sub
insb
mov
scas
dec
sbb
inc
leave
mov
add
repz
pop
arpl
mov
out
push
cs
jl
jae
xchg
pop
xchg
or
nop
and
loope
add
xchg
rcrb
jmp
lea
mov
mov
lret
iret
shl
mov
mov
push
lcall
clc
sbb
test
mov
cmp
xchg
clc
testb
sbb
push
bound
jp
scas
pop
adc
fadds
jp
popf
pop
test
ret
add
mov
cld
sub
pop
xchg
mov
hlt
pushf
fimuls
cmpsl
iret
scas
imul
sub
lcall
fdivs
shll
ret
mov
xchg
add
aas
cmp
loop
out
in
mov
gs
dec
outsl
ljmp
lret
xchg
loop
js
cltd
xchg
cltd
ret
jmp
dec
jno
cmpsl
mov
scas
shrb
dec
inc
pop
rcrb
xchg
jmp
mov
lret
adc
ljmp
js
insb
aas
jno
rorb
js
add
addr16
fs
stos
daa
fcmovnu
fwait
dec
fnstcw
cmp
cs
jo
sub
arpl
pop
mov
adc
push
pop
xor
xchg
add
and
sbb
pop
mov
cmp
pop
and
sbb
stc
sbb
dec
mov
aaa
dec
adc
ret
jbe
mov
in
lods
mov
sub
sbb
cmpsl
mov
inc
xlat
mull
out
or
adc
push
push
addr16
out
ja
or
int3
stc
add
push
es
mov
cs
pop
xor
imul
push
push
inc
mov
cmpsl
push
into
push
xor
scas
add
fidivl
jmp
pop
add
dec
loopne
insl
inc
adc
imul
mov
sahf
ret
cmp
loop
emms
dec
fmul
fnstsw
xor
test
push
mov
cmp
xor
out
inc
or
loopne
xor
push
sbb
sti
mov
lahf
jo
call
and
cmp
shr
ds
pop
inc
cvttps2pi
inc
and
out
adc
inc
push
mov
scas
push
pop
and
push
mov
adc
fstpt
aaa
js,pn
inc
test
or
icebp
sbb
jmp
add
push
add
ret
cmp
xor
lods
xchg
daa
testb
popa
fistpll
inc
xchg
stos
pop
out
in
popa
jnp
ja
es
clc
nop
jno
outsl
daa
enter
xchg
insb
subb
mov
mov
movsb
mov
add
in
sub
push
out
mov
mov
bound
iret
xchg
pusha
mov
sub
mov
gs
icebp
add
add
mov
test
fidivrs
add
sti
push
or
add
pop
das
loope
jne
inc
enter
loop
hlt
xor
rorl
enter
sub
sahf
xchg
adc
push
popf
mov
pushf
les
lret
iret
pop
sub
jno
jnp
aad
push
and
push
sub
fsts
push
int3
sbb
xchg
scas
imul
sub
shr
xchg
adc
rclb
insl
das
fsubrp
and
test
mov
aas
and
fxch
pop
fwait
enter
xor
pop
push
pop
sbb
xor
adc
scas
adc
inc
xchg
mov
jae
pop
mov
sub
mov
adc
xchg
stos
popf
and
lret
call
lcall
cmp
mov
insb
dec
push
arpl
jecxz
cld
hlt
mov
dec
mov
je
cs
cltd
bound
push
aam
or
fiaddl
cmp
in
dec
mov
mov
push
xchg
pop
in
mov
test
mov
dec
in
pusha
adc
mov
adc
scas
push
cs
les
xchg
xchg
leave
into
cmp
xlat
shlb
mov
fists
mov
sub
lcall
push
push
sti
mov
imul
outsl
out
test
xor
repz
jmp
lock
cmp
notb
pusha
mov
fstpt
add
sbb
inc
clc
xchg
push
jp
nop
inc
sub
ja
fwait
dec
xlat
mov
sub
enter
fildl
mov
iret
inc
popl
or
cltd
mov
lock
pop
inc
xchg
lea
push
mov
into
adc
fimull
jmp
roll
dec
mov
push
orl
mov
mov
add
pop
sub
dec
add
movsl
cmp
push
cmp
cmp
rclb
mov
mov
sti
or
cmp
insl
movsb
sbb
mov
mov
rdmsr
add
je
or
pop
pop
test
in
movsb
mov
push
add
mov
xor
xor
mov
mov
cs
push
inc
scas
push
mov
imulb
out
or
mov
push
jg
hlt
popa
movsb
fwait
in
dec
or
pop
lock
aad
shufps
sbb
lock
push
addb
imul
mov
into
cmp
data16
sbb
cmpsb
xchg
mov
aam
or
jecxz
inc
jns
lods
cmp
push
popa
les
lahf
mov
mov
sbb
xchg
lock
add
cmp
or
push
cmp
mulb
mov
push
sub
movsb
adc
lahf
imul
lds
call
adc
stc
sbb
mov
adc
push
sti
inc
xchg
data16
adc
adc
out
lea
popf
jae
sub
pop
or
rolb
daa
mov
adc
outsb
pop
mov
ja
lret
or
les
test
xchg
nop
out
push
jb
or
iret
push
xchg
dec
mov
gs
daa
push
jecxz
push
out
repnz
pop
mov
mov
fidivl
xor
sub
sbb
int3
flds
mov
mov
les
adc
cmc
lock
lret
aam
xchg
ret
push
inc
push
stos
adc
ret
dec
mov
add
xor
mov
jp
subb
mov
push
lock
or
test
xchg
loope
in
xchg
xor
push
sbb
mov
cmp
call
pop
mov
push
jmp
out
lods
sbb
jg
jp
add
xor
jb
lret
movsb
inc
xor
add
inc
popf
sbb
dec
shlb
adc
and
inc
sahf
and
push
loop
repnz
sti
cwtl
lods
fwait
mov
adc
loop
dec
add
fs
mov
pop
arpl
or
lret
aad
and
cmp
out
lds
pushf
int3
add
dec
je
popl
jmp
fsubs
ficoml
movsl
jp
push
cmp
sahf
pop
xchg
test
cmp
movsb
push
mov
xor
hlt
dec
test
ret
shll
leave
insl
or
jbe
enter
cltd
xor
pop
dec
xor
xchg
stos
push
imul
push
or
lcall
nop
out
mov
xchg
pop
movsb
loope
or
fs
popa
jecxz
lcall
xor
pop
nop
jb
lret
sub
je
ret
cmpl
mov
push
and
push
xchg
sbb
adc
pop
aam
push
mov
shrd
push
mov
or
inc
push
arpl
jge
mov
jbe
andl
mov
iret
ret
jno
sub
push
sub
sbb
inc
sbb
mov
pusha
in
xorb
sti
cli
shll
inc
cmc
ja
add
pop
ljmp
and
pop
mov
push
bound
enter
fcmovb
mov
pop
lea
stc
cld
pause
sub
xor
dec
jl
out
cmp
or
inc
sarb
repz
or
xor
jbe
jno
jl
dec
test
stc
xor
dec
push
xchg
lods
dec
cltd
loope
clc
xor
leave
in
inc
cli
sub
sub
cmp
gs
or
cmpsb
jb
mov
ffreep
aas
shrb
push
fnstcw
movsb
cltd
add
dec
xor
jmp
pop
loop
inc
jg
imul
push
jg
lret
add
iret
ljmp
jo
lahf
sti
pop
insl
gs
xchg
lods
sub
pop
and
and
cmp
fcmovbe
mov
out
push
and
negb
stos
test
adc
out
sub
ja
outsb
cmp
shrl
cmpsb
inc
int3
ss
pop
mov
mov
pop
xor
or
dec
jmp
push
pop
push
mov
jno
int3
dec
dec
daa
lds
or
pushf
popa
jae
fs
or
dec
xor
add
jne
or
in
add
jl
rorl
push
inc
sti
and
jns
xor
loop
sub
sti
cmovb
in
ds
mov
daa
adc
add
mov
into
js
cmp
and
mov
sbb
push
pusha
jmp
or
and
jno
xchg
xchg
orb
xor
pop
sbb
jecxz
addr16
mov
std
mull
incl
jmp
aad
adc
pop
out
push
cmp
mov
js
mov
in
in
je
cltd
mov
mov
mov
incl
xchg
mov
jae
and
add
or
mov
lret
aad
push
push
xchg
mov
insl
mov
pop
aaa
testb
jl
jb
test
xor
xor
dec
pop
shlb
push
jp
jb
and
aad
dec
sub
test
sub
xchg
xor
popa
push
fwait
rcll
adc
out
mov
imul
jne
aaa
and
jl
mov
imul
jmp
inc
push
jmp
push
pop
xor
movsb
call
ljmp
test
xchg
lret
out
jg
idiv
test
enter
add
es
pusha
cld
adc
mov
jb
mov
sub
push
cmp
push
outsb
cwtl
mov
cli
cmpb
sti
shrl
adc
adc
movsl
idivl
and
mov
mov
cmpsl
and
add
cld
mov
mov
or
jmp
loopne
sub
xor
or
ret
jo
fisttpl
and
mov
dec
jb
mov
scas
inc
lahf
aas
icebp
inc
push
xor
pop
and
loop
cli
mov
cmp
loopne
insl
jb
mov
scas
ds
lds
push
xchg
iret
sbb
pushf
out
adc
inc
and
hlt
imul
sbb
outsb
mov
pop
sti
and
pop
in
mov
aaa
sub
sub
dec
adcl
shlb
aam
adc
ret
incl
aad
push
out
xchg
fwait
popl
jmp
dec
fcoms
dec
xchg
std
lds
xchg
sbb
lock
jmp
inc
lds
aad
or
xlat
ljmp
in
mov
pop
inc
sbb
testl
push
rol
dec
fldcw
jne
out
bound
mov
jge
or
faddl
jg
out
push
dec
ret
aam
pop
cmp
mov
sar
in
lcall
mov
or
cmp
xor
cmc
or
cmp
into
leave
int3
sbb
fnsave
sbb
sahf
xor
add
testl
jge
mov
jmp
insl
or
xor
mov
push
pop
sub
xchg
fisttps
jp
pop
mov
addr16
ds
out
lcall
mov
sbb
ret
jmp
inc
bound
dec
out
xorl
out
das
fbld
aad
push
inc
pushf
cmp
je
xor
push
cmp
sbbb
mov
dec
dec
clc
and
ja
les
mov
dec
mov
ss
mov
dec
incb
sub
mov
or
mov
leave
jl
insl
sbb
and
not
mov
mov
lods
cwtl
test
das
insl
inc
xchg
lds
loop
xchg
dec
push
mov
or
call
pop
dec
std
mov
pop
xchg
dec
test
loop
fcmovnu
add
mov
orb
aam
out
aaa
mov
int3
dec
lret
pop
lahf
adc
xchg
dec
pop
imul
rclb
cmp
sbb
aas
dec
addr16
cmp
fstpl
xchg
jp
fidivrl
inc
int
mov
in
push
int
xchg
inc
not
out
call
nop
jns
pop
fwait
aas
lds
pop
pop
int
test
mov
jmp
adc
or
test
dec
dec
bound
shr
sub
je
and
jb
add
dec
bound
out
dec
jmp
orb
push
pop
xchg
jg
adc
xchg
sub
test
pop
fidivs
rorl
das
jns
call
mov
ljmp
push
mov
mov
mov
cmp
cmc
pop
or
mov
jne
xchg
stos
cmpsb
adcl
cltd
call
mov
dec
pop
and
scas
orl
inc
out
icebp
outsl
sbb
in
xor
push
shll
stos
jae
divl
loope
cmc
scas
jge
sub
adc
fldenv
mov
jb
push
cmpsb
sarb
sahf
aaa
fstl
aam
mov
mov
mov
test
lea
push
jle
leave
inc
cmp
mov
scas
cmp
aas
ljmp
mov
xchg
test
lds
jle
dec
loop
pop
jb
push
lods
dec
pop
jno
jns
stc
inc
and
mov
xchg
push
mov
shll
imulb
and
roll
mov
or
lock
push
fucomp
pop
mov
dec
test
das
insl
xlat
mov
nop
xor
inc
movsb
pushf
xchg
jo
cwtl
push
sub
fists
jp
repnz
dec
lahf
mov
sbb
inc
popa
inc
outsl
jne
movsl
xor
push
or
cld
movsl
mov
adc
testl
push
rclb
dec
mov
dec
mov
mov
xchg
sub
ret
out
push
push
mov
outsb
or
mov
sub
sahf
stos
push
mov
sub
sbb
jge
and
push
cmpsl
add
popf
enter
dec
test
imull
das
movsl
add
jl
or
or
int3
xchg
pop
loop
imul
mov
jmp
sbbb
dec
sub
cs
adc
cld
xor
lcall
and
and
testb
jb
js
repnz
ds
dec
dec
ffree
fldcw
aad
push
mov
mov
popf
xchg
repnz
mull
inc
negb
bndstx
xorb
pushf
lret
or
xor
mov
fimuls
out
and
mov
and
sub
lahf
cltd
and
js
jno
je
mov
pushf
ret
xchg
dec
idivb
lock
lcall
ret
scas
les
cmp
insl
mov
mov
jmp
mov
mov
repnz
lcall
cmp
lret
sbb
add
jnp
out
std
lods
iret
std
mov
lock
stc
mov
xchg
gs
lret
sbb
pop
mov
jg
mov
mov
xchg
push
imulb
mov
popa
sub
cmp
rcrl
addr16
mov
iret
out
dec
subl
jne
pop
or
jmp
jge
popf
and
dec
pop
sub
xchg
jmp
push
xor
mov
iret
les
xchg
pxor
and
or
sub
pop
sahf
or
loopne
mov
add
or
daa
mov
cli
lds
cmpsb
addr16
xchg
movsl
mov
cmc
popa
icebp
or
add
mov
popf
sti
sbb
out
enter
jmp
ja
enter
jnp
mov
mov
jp
adc
iret
inc
mov
dec
in
pop
cltd
and
dec
inc
cmc
mov
xor
cli
bound
xchg
into
addr16
js
outsl
jae
pusha
cld
adc
lret
fidivrl
inc
test
cmc
and
int
or
xor
in
or
push
hlt
fsubl
xor
xchg
inc
das
jle
leave
inc
popf
aas
pop
pop
ja
push
mov
imul
loope
call
add
inc
mov
pop
hlt
dec
cmp
cmp
dec
pop
mov
mov
cmp
pop
jp
mov
jmp
xor
cmp
inc
divb
or
fucom
jl
and
rcl
es
and
scas
roll
mov
ds
xchg
dec
push
dec
mov
in
xor
jmp
sarb
out
sbb
divb
push
stc
je
add
mov
cmp
or
pusha
mov
mov
push
or
outsl
jns
sbb
pop
fsubr
push
js
xchg
push
or
push
jg
xor
inc
scas
leave
mov
push
and
cmpsb
push
cmp
fadd
adc
and
push
es
in
movsb
pop
aaa
mov
rorl
fildl
sahf
repz
popa
xchg
xchg
int3
vmovdqu
push
xor
lret
mov
pushl
jp
lods
nop
pop
lea
mov
aad
mov
push
pop
out
rcrb
xchg
imul
aaa
clc
jmp
dec
loope
shrl
fadds
ret
inc
repnz
data16
jp
and
jnp
mov
fstps
jne
lods
lea
dec
push
xor
out
cmpsb
popl
xor
add
cmp
mov
cmpsb
mov
sar
in
push
dec
scas
mov
push
sub
push
inc
inc
aas
clc
mov
mov
adc
mov
mov
cld
stos
divl
or
cltd
fucomi
dec
sub
inc
mov
popf
xor
rorl
ret
add
lods
aas
add
mov
mov
mov
add
adc
push
inc
lea
lds
or
or
xor
mov
jbe
cmpsl
popf
je
cwtl
popa
rcl
repz
sbb
insl
cmpl
test
iret
adc
andl
xchg
push
cmp
ja
fisttps
mov
push
pop
fwait
xchg
das
sub
pop
mov
icebp
pop
and
cmpsw
add
bound
and
mov
xor
aam
jp
inc
bound
push
dec
in
sbb
mull
or
xor
fnstcw
inc
ficompl
pushf
pop
lcall
stos
hlt
inc
sbb
mov
int
lahf
iret
cmpsb
int3
mov
add
testl
mov
pusha
pop
xchg
jmp
dec
fidivl
xchg
mov
scas
mov
pop
inc
sbb
clc
dec
add
jne
rcll
sub
jg
mov
mov
inc
outsb
rcll
in
dec
je
stos
clc
fsubl
xchg
leave
or
enter
adc
pushf
sub
outsl
hlt
sub
popa
icebp
and
xor
jno
push
fsubr
xchg
xchg
jp
enter
inc
imul
andb
fs
ja
xchg
into
lahf
iret
enter
push
in
mov
mov
cmp
mov
jle
out
lahf
mov
pop
cltd
xor
sbb
and
cld
stc
js
inc
push
jbe
pop
cli
insb
mov
les
dec
push
adc
adc
sbb
test
cwtl
setge
test
pop
dec
push
fdivs
iret
pop
pop
stos
int3
mov
cltd
popa
mov
sbb
fcompl
je
add
xchg
xlat
adc
shl
clc
lret
enter
nop
or
enter
jb
data16
fidivrs
cmp
in
sbb
or
scas
mov
cmc
lock
jo
rol
insb
xchg
push
test
in
pop
jge
test
sbb
mov
mov
push
dec
pop
mov
xor
std
cmpsl
stos
jecxz
cld
cmp
and
fwait
jne
in
test
arpl
es
pop
cmp
pop
mov
push
hlt
fstpl
adc
out
repnz
int3
sbb
stc
add
or
push
or
rcl
or
int
jbe
lods
pop
aas
mov
es
inc
outsl
dec
push
add
stos
test
arpl
scas
push
aam
imul
rcrb
dec
add
cld
cmpsl
in
mov
inc
int
jmp
call
inc
rcrb
or
fcmovne
ror
outsb
push
hlt
lcall
jl
pop
adc
cmpl
and
dec
sub
insl
out
sahf
mov
xchg
imul
sbb
inc
clc
cli
mov
add
or
stc
or
jo
and
hlt
sub
test
popa
push
sub
sub
xchg
dec
sbb
pop
mov
mov
jp
data16
divl
jecxz
icebp
adc
dec
xor
mov
lret
mov
bound
stos
jns
fists
pop
outsb
shll
xlat
dec
fisubrs
fmull
inc
shlb
xor
xchg
jnp
jbe
daa
sbb
mov
es
sub
mov
jecxz
fcmovb
adc
lcall
out
pusha
bound
popa
daa
sbbl
sbb
adc
xchg
cmc
mov
sar
inc
leave
clc
sbb
je
sbb
fbld
fistps
outsb
inc
rclb
mov
jbe
or
xchg
jae
data16
imul
xchg
test
cmp
and
out
sub
pop
out
iret
sbb
loope
addb
mov
stos
cmc
adc
xor
add
jo
or
xchg
test
pop
mov
mov
adc
orb
aam
sarl
mov
loopne
imul
pusha
inc
or
inc
mov
lods
mov
or
xor
or
pop
xor
push
in
xchg
jne
loop
movb
xor
aas
mov
mov
sahf
ss
or
xchg
add
pop
insb
or
dec
dec
mov
les
imul
rdtsc
out
sub
mov
jno
test
and
pop
in
push
rolb
insb
icebp
add
lds
pop
mov
cmp
xlat
jnp
push
xor
sub
mov
std
push
mov
xchg
push
xchg
scas
in
aas
xor
mov
aam
subl
cmp
fisubrl
ja
push
mov
cmpsb
or
scas
repnz
inc
pop
pop
fnstsw
in
add
scas
lret
mov
fsubl
xchg
fs
repz
pop
push
mov
add
push
les
push
and
lret
dec
dec
insb
add
repnz
hlt
mov
jns
jo
lea
pop
out
ds
fsubl
and
addr16
sbb
cmp
mov
lods
insl
mov
decl
push
add
push
popf
push
xchg
test
pop
mov
sbb
dec
cmp
ljmp
dec
sar
jb
test
pop
mov
cld
outsb
pop
inc
mov
sub
cwtl
scas
out
in
gs
jnp
sahf
cmp
ljmp
or
in
push
lods
adc
std
mov
les
jne
jg
mov
nop
add
test
xchg
inc
insl
dec
push
lods
sub
adc
imul
int
in
xor
and
mov
sbb
push
lock
lret
push
push
inc
ret
sub
xor
dec
lahf
int
pop
ficompl
xor
hlt
popa
clc
pop
mov
jp
or
outsb
or
gs
lcall
jge
mov
mov
popf
push
xchg
xchg
pop
or
cmp
cwtl
mov
inc
xor
popf
dec
cmp
pop
cwtl
xor
dec
add
imul
mov
or
cmp
jne
jle
mov
jns
imul
jne
xor
pop
mov
movsb
push
ljmp
inc
out
xor
sub
push
cwtl
sti
out
sub
movsl
mov
std
cmp
and
jb
imul
stc
in
xor
sub
or
enter
mov
lret
inc
pop
dec
cli
mov
add
mov
jb
test
nop
inc
adc
in
aad
fisttpll
and
xchg
add
mov
imul
mov
adc
sbb
add
pop
lea
shrl
rclb
lods
or
int3
aam
mov
xchg
rcll
and
add
lret
pop
scas
pop
cmp
int3
lods
lahf
mov
bound
leave
out
jbe
inc
jl
push
aas
test
fs
push
jg
arpl
cmpsb
mov
cmp
or
cmpsl
lret
mov
cmpsb
aas
jno
dec
jnp
test
and
xor
fcom
fsubs
sub
aas
in
jns
pop
call
pop
and
fimull
jno
push
pop
push
xchg
pop
jb
push
xchg
sahf
cli
and
cmp
push
arpl
jge
scas
and
imul
sub
lahf
push
add
or
movsb
mov
enter
push
adc
mov
pusha
out
into
sahf
pop
pushf
std
in
mov
or
jns
std
cwtl
and
or
cmp
cltd
jle
lret
mov
dec
test
lcall
xor
orl
inc
andl
and
xchg
repnz
stos
fdivrs
adc
jl
jbe
mov
imull
mov
xlat
pop
mov
sub
push
iret
mov
aaa
adc
mov
imull
mov
xchg
cmpb
xchg
out
cmp
lret
movsl
mov
dec
pop
pop
xor
gs
or
in
mov
cld
jl
sbb
xchg
stos
fidivs
sub
repz
repnz
adc
lods
lahf
add
dec
fisubl
xlat
lods
das
faddl
and
lret
xorl
jb
jecxz
fstp
test
testl
cmp
test
add
sub
or
pop
leave
xor
aaa
cmp
push
cmpsl
outsb
xchg
shl
jp
xchg
mov
mov
dec
es
test
push
pop
push
xchg
xrelease
cmpsb
dec
rclb
mov
insb
test
bound
sbb
clc
insb
shlb
and
inc
jae
insl
push
xchg
sbb
mov
movsb
push
push
jmp
addr16
adc
xchg
repnz
aam
test
dec
repz
adc
cli
dec
lods
into
mov
push
cmpsb
arpl
sbb
or
push
or
mov
mov
add
daa
call
lahf
pop
sbb
pop
adc
sub
ja
mov
lcall
rolb
xor
pop
pop
ja
add
push
inc
add
xchg
mov
leave
and
inc
push
stc
lahf
cwtl
ja
sbb
and
xchg
mov
push
sbb
sub
xor
loope
scas
add
add
pop
nop
and
popf
scas
push
lock
dec
mov
mov
not
push
mov
push
pop
mov
jl
adc
out
push
imul
stos
fcoms
push
dec
loopne
jae
inc
push
lcall
jmp
es
loop
lea
jb
pop
fcoml
filds
jne
repz
sbbl
push
add
arpl
xor
lahf
mov
push
int
add
adc
xor
jns
std
xchg
adc
xchg
jmp
push
movsl
in
add
sub
pop
sub
aas
xchg
inc
fistps
lods
test
and
std
aas
jg
scas
lahf
cmp
mov
lret
sbb
fwait
iret
mov
scas
push
mov
in
pushf
xor
adc
es
or
test
xchg
mov
xchg
jecxz
andl
push
shrl
xor
lret
icebp
add
mov
dec
jl
popf
mov
fcomp
inc
nop
push
and
sbb
mov
adc
xor
cmc
mov
fwait
mov
mov
lods
cld
repnz
push
push
incb
xor
call
shll
fcompl
jmp
lods
stos
movsl
fisubrs
stos
jo
cmp
fldt
rolb
insb
jnp
out
mov
xchg
xchg
adc
and
sub
fistpl
notl
mov
lea
sbb
sub
out
idivl
add
movsb
stc
mov
mul
js
out
mov
add
mov
js
movsl
xchg
sub
mov
repnz
push
arpl
mov
pop
les
push
std
movsl
cld
jecxz
testb
or
jns
lds
in
push
bound
outsb
scas
and
xchg
lock
imul
fldt
decb
push
std
pushf
lahf
orb
aaa
test
pop
ljmp
mov
xchg
jmp
cmp
lahf
hlt
jmp
mov
movb
mov
push
dec
xchg
cmp
jmp
bound
ret
inc
aaa
mov
xchg
mov
loopne
push
jl
xor
sbb
roll
loope
ja
xor
fnsave
sbb
dec
mov
xchg
subl
cmp
jg
cltd
push
mov
dec
fists
mov
or
sbb
roll
roll
jge
and
mov
jl
repz
popa
mov
aaa
adc
fldenv
inc
popl
shl
push
mov
inc
mov
insb
loopne
dec
cs
in
xor
or
std
stc
xchg
lret
sbbb
mov
lahf
daa
jp
mov
int
fisubrs
xor
cmp
cmp
sub
xor
and
mov
push
fisttps
mov
insl
push
loop
mov
inc
xchg
jae
jmp
pop
in
add
jb
and
fidivs
pusha
daa
rol
pop
out
cltd
jbe
cmp
cmp
push
cmp
xor
out
in
pop
in
xchg
cmp
mov
pop
push
in
sti
push
mov
outsl
cmp
cmp
lods
xchg
sbb
dec
mov
or
mov
xor
jne
push
sbb
aad
je
das
dec
ds
push
int3
enter
stos
sbb
mov
mov
iret
loop
and
fidivrs
pop
loopne
adc
inc
sub
dec
mov
mov
inc
and
pop
or
nop
adc
push
xor
pop
adc
xchg
rcrb
adc
scas
cmpsb
cltd
xor
shrl
push
sub
leave
and
fstpt
sbb
stos
adc
xchg
mov
inc
xor
jmp
bound
testb
nop
lods
pop
push
fsub
in
mov
sti
push
mov
leave
mov
outsl
int
in
ret
clc
mov
fildl
fadd
cmc
repnz
cmp
je
popf
mov
addr16
xchg
jnp
fistl
es
sbb
test
ja
push
sub
loop
jo
xor
out
cmp
dec
adc
push
nop
add
movsb
sahf
cmp
xchg
aaa
xor
dec
jo
stos
repnz
aad
daa
pop
test
test
aaa
scas
jae
ror
jb
outsl
or
fisttpll
sbb
push
cmpsl
or
jmp
xchg
orb
imul
inc
sbb
decl
je
dec
into
mov
out
aad
negb
aas
repnz
adc
pop
aam
jmp
in
pushf
and
scas
pop
hlt
outsl
xchg
cltd
iret
cli
rorl
cmpsl
std
dec
ss
mov
mov
in
ja
mov
adc
mov
test
lret
aas
nop
push
xchg
adc
jne
scas
notb
stc
dec
mov
repz
jo
arpl
adc
popa
xchg
pop
fidivl
adc
jmp
scas
das
jp
add
ljmp
mov
lret
or
aad
xchg
in
stc
or
mov
xor
pop
rcr
sub
or
jge
push
dec
in
and
mov
in
jecxz
fistps
clc
add
shl
call
cmp
pop
push
aad
xacquire
xchg
fidivrs
fdivr
jb
stc
mov
add
jge
rclb
cmp
push
and
push
xor
and
insb
push
mov
sbb
and
test
rorl
imul
xorl
cmp
movsb
rcr
sub
jo
adc
movsb
mov
and
xlat
fsubr
fisttps
loope
dec
cmp
xchg
lahf
mov
call
int
out
sbb
mov
cltd
mov
movsl
xchg
iret
xchg
ds
js
insb
add
sbb
sub
and
pop
cmp
xchg
mov
sub
testl
adc
mov
imul
cmp
mov
jmp
mov
cmp
dec
ss
sub
sbb
scas
scas
test
pushf
icebp
iret
or
adc
jnp
xor
cmc
jmp
jns
add
push
mov
xor
gs
fmull
sbb
shr
jne
test
lods
imul
scas
pushf
popf
into
or
jmp
sub
or
movsl
outsb
scas
xchg
jne
dec
scas
dec
lods
and
call
movd
les
add
imul
adc
enter
mov
push
jno
fs
test
mov
mov
movsb
scas
pop
xchg
aad
sub
das
or
mov
sbb
xchg
inc
adc
inc
or
ret
mov
data16
jmp
pop
sub
cmp
dec
or
testl
js
sahf
je
fptan
jb
nop
popa
fcmovb
je
ret
pop
dec
ficompl
pusha
sub
adc
cld
jecxz
jge
ljmp
jo
insl
out
jl
sub
sarb
sub
push
sbb
mov
xchg
movsb
adc
int
xchg
jno
pop
xlat
push
clc
iret
test
adc
mov
filds
xor
stos
jb
jo
test
ja
hlt
fstl
pop
xchg
or
push
filds
sub
dec
dec
sub
sarb
out
mov
or
test
sub
or
jge
push
jne
jmp
and
push
scas
inc
stos
movsb
sti
hlt
test
jp
nop
outsb
xchg
movsb
adc
mov
les
adc
pop
mov
aad
mov
lods
movsl
ja
ljmp
movsb
stos
repz
mov
mov
cmp
pop
icebp
pop
and
sub
cmp
mov
adc
daa
clc
mov
in
lods
add
mov
lret
in
push
sbb
adc
and
dec
mov
ret
mull
pop
cmc
push
pop
cltd
out
push
mov
push
add
dec
xchg
sub
fdiv
push
add
add
mov
iret
adc
pop
inc
out
push
daa
sub
testl
cmp
dec
mov
or
and
mov
inc
sbbb
in
jno
push
sarl
test
push
cmp
scas
insb
pop
pop
xchg
and
mov
xlat
mov
fbld
sub
subl
out
ja
pushf
loope
inc
popf
ss
addr16
sarb
scas
test
popf
dec
cmp
add
xchg
icebp
test
adc
and
mov
fmull
rcrl
addr16
push
leave
aam
pop
pop
jae
into
sbb
std
xchg
jg
bound
ret
mov
rcrl
jb
jecxz
mov
pop
in
dec
pop
inc
cltd
stos
pusha
loop
daa
add
xchg
mov
in
les
notl
repz
pop
std
xchg
mov
add
enter
dec
in
jge
ds
test
pop
add
in
mov
cltd
mov
iret
insl
ss
iret
jbe
loope
lea
lea
int
xchg
adc
into
test
repz
loop
mov
push
stos
jno
clc
movsb
shl
jne
jo
jle
cwtl
jl
sbbb
movsl
popa
mov
cmp
icebp
in
jg
loopne
or
and
mov
lcall
jns
js
mov
ljmp
sub
dec
xor
psllq
jmp
inc
cltd
pop
and
cmpsl
and
repnz
mov
mov
negl
into
add
lret
add
dec
cmc
mov
and
loope
test
pop
pop
jecxz
test
jp
stc
shll
and
es
rcll
lret
test
rorb
push
mov
adc
loopne
iret
jo
dec
icebp
lds
cmc
popl
mov
divl
ljmp
push
es
test
or
outsl
imul
xor
ss
out
jno
fistps
or
pop
or
mov
jo
out
jns
test
xchg
in
inc
add
or
sbb
jnp
xchg
mov
int
ror
scas
movsb
adc
in
movsl
or
sub
dec
dec
lock
cmp
mov
mov
mov
xchg
loopne
bound
pop
sub
jle
jo
daa
xor
clc
popa
adc
xor
mov
aam
in
mov
jo
rcr
xchg
jns
push
jbe
fcmovnbe
cmp
aaa
outsb
das
dec
jo
in
mull
mov
push
sub
out
add
and
add
mov
je
pusha
into
mov
ds
test
pop
fbstp
sbb
jbe
push
mov
mov
pop
pop
cmpb
test
dec
and
cmp
xchg
mov
cmp
and
sbb
test
sbb
dec
mov
mov
sub
int3
dec
enter
sbb
mov
add
sbb
inc
mov
sub
or
repz
mov
cmp
dec
les
mov
repz
fists
rolb
cwtl
mov
ret
xchg
jle
sbb
adc
lds
cltd
jmp
lret
cmpsl
pop
lret
sbb
mov
orl
xor
hlt
aaa
repz
pop
lods
mov
subl
mov
xor
mov
xlat
pop
adc
pop
inc
insb
testl
push
push
bound
sbb
lahf
lods
ficoms
jmp
jnp
cmp
cmpsb
orb
jp
ret
repnz
cli
sub
daa
push
jg
dec
aaa
dec
stc
sbb
lods
push
lahf
imul
jo
xor
cmp
inc
pop
mov
js
jge
jbe
push
fs
dec
out
cmp
arpl
jne
imul
add
or
and
and
sbb
or
in
in
imul
insl
mov
xor
pop
shrl
lcall
jbe
lods
mov
jmp
mov
and
dec
xchg
rorl
and
xor
popl
repnz
mov
xchg
add
fnstenv
inc
xor
add
cmp
jge
popa
and
push
pop
add
dec
paddusb
and
mov
pop
jnp
add
cli
into
push
pop
mov
pop
adc
call
lahf
sbb
scas
adc
das
xchg
fldt
and
mov
fsubs
push
pop
push
cmp
scas
mov
pushf
mov
push
xchg
movl
pop
jno
and
insb
divl
mov
adc
ds
cmp
xor
sub
add
pop
adc
dec
inc
sub
pop
push
cmpsl
push
mov
add
sbb
xorb
cwtl
ficoms
adc
sbbb
adc
xchg
dec
enter
in
in
sbb
push
fisttpll
ret
lock
sbb
sbb
jbe
loop
les
insb
daa
push
fsubrl
insl
lret
rcrb
xchg
add
cwtl
pop
xchg
scas
andb
dec
jnp
cld
in
pop
and
or
fstps
push
jb
bnd
xchg
fidivl
mov
jge
pop
in
jmp
or
pop
jne
sarb
jecxz
push
xchg
cmpsb
jne
and
stos
pop
push
sbb
cmp
sub
or
pop
mov
and
not
sti
sbb
mov
scas
xor
mov
in
sti
push
push
and
into
fdivrs
and
popf
ds
mov
sbb
inc
mov
test
shll
add
xor
jnp
pop
pop
in
cmp
and
sarl
add
cld
fwait
push
rorb
jp
arpl
lock
push
inc
push
fwait
xorl
gs
and
push
iret
jmp
mov
add
sbb
or
inc
mov
sbb
sub
clc
pop
icebp
test
add
into
mov
mov
lods
in
pop
pop
add
dec
cmpsl
fildl
insl
adc
lods
add
sub
loope
punpcklwd
jle,pn
push
adc
scas
lcall
push
fildll
mov
lods
add
mov
or
orl
popa
sahf
mov
push
mov
push
cmp
js
rcll
test
xchg
cmc
and
dec
sub
aad
mov
xor
dec
and
xchg
and
jmp
test
out
push
pop
push
repz
sbb
jge
mov
loope
sbb
jge
out
mov
fcoms
adc
xchg
shrl
bound
fs
mov
xor
adc
cmpsl
insb
std
sub
push
push
cs
push
inc
sbb
jecxz
pop
test
and
dec
test
les
cmpsb
pop
jo
testl
and
repnz
mov
xchg
addr16
jl
gs
dec
fdivl
push
clc
sub
cmp
and
fsub
repz
adc
push
jo
mov
testb
loop
xor
int
fadd
movl
dec
mov
fisubl
imul
add
and
push
hlt
cmpsl
lds
sbb
mov
pop
xchg
daa
push
dec
push
cmp
add
aaa
push
adc
push
rolb
mov
mov
test
sbb
mov
outsl
cmp
cmp
aaa
add
push
inc
cmp
sub
jg
mov
movsl
jle
into
pop
mov
orb
rorb
lods
sbb
adc
pop
enter
jb
sti
mov
popf
shl
out
cmpsl
gs
sbb
test
xchg
js
adc
jmp
out
xor
xor
das
mov
imul
mov
subb
ja
push
cmpsb
call
pop
imul
mov
xchg
jne
sub
stc
scas
inc
sub
add
mov
adc
cmp
xchg
mov
cs
xchg
mov
xor
mov
jnp
mov
xchg
cmp
cmp
mov
cmp
mov
outsl
mov
adc
dec
mov
jo
adc
sarb
or
cltd
mov
jo
xor
ja
cmpsb
leave
dec
and
xor
sub
inc
adc
jno
sbb
xchg
mov
cmp
sarb
ja
imul
mov
sub
shrl
orl
sbb
sub
jmp
mov
shl
adcb
rorl
mov
dec
stc
push
inc
addb
dec
xor
mov
pop
push
testb
sub
and
test
mov
sub
mov
xchg
push
daa
or
std
scas
daa
jl
loop
jecxz
dec
add
loopne
mov
std
push
js
cmpsl
fisubs
mov
mull
pusha
push
pop
add
pop
daa
adc
fxch
fsubrl
imul
lock
in
popf
cwtl
push
xchg
ja
and
add
loop
mov
or
push
lea
push
jg
cld
xor
dec
and
mov
test
mov
pop
stc
sti
sub
xlat
enter
xchg
xchg
mov
mov
and
pop
push
inc
add
adc
aaa
mov
dec
popa
xchg
mov
in
ud0
int
xor
je
sbb
jns
mov
cli
int
dec
mov
jae
lea
jbe
lock
lods
pop
inc
lret
mov
ljmp
xor
int
jg
sbb
pop
jns
gs
cmp
dec
jmp
xchg
inc
jmp
lea
fwait
loope
or
mov
repz
mov
sub
jbe
sub
adc
jecxz
jbe
in
mov
mov
add
stos
test
inc
xor
xor
cwtl
push
dec
ja
test
cwtl
mov
cmp
add
pusha
sbb
mov
lret
push
dec
sarl
pop
mov
inc
lcall
adc
and
and
inc
cmpsl
adc
dec
stc
pop
xor
jp
inc
int3
divl
mov
out
push
stos
pop
push
pop
sub
and
movsl
arpl
loop
mov
and
mov
mov
inc
outsb
int3
call
stos
add
adc
pushf
push
dec
inc
aas
jnp
stos
insb
mov
xchg
jbe
add
int3
jge
aas
fwait
inc
fiaddl
in
pop
jp
jnp
xor
cmpsl
mov
out
add
mov
out
inc
dec
mov
inc
sti
fdivs
lock
cwtl
add
in
push
xchg
paddq
mov
cmc
dec
pop
pop
sbb
vfrczps
gs
add
add
jo
outsb
sbb
out
int
lahf
cmp
cld
sbb
inc
cmp
insb
bound
push
and
jb
outsb
mov
call
nop
pop
cltd
and
negb
stos
aas
cs
xchg
cmpsb
lret
lods
cmp
and
cli
fdiv
dec
cmp
xor
pop
xorb
mov
js
loop
fwait
jmp
dec
push
sbb
sti
popf
push
cmp
and
fstps
pushf
daa
cld
mov
mov
inc
inc
pop
repz
dec
movb
dec
push
shrl
popf
mov
or
jns
loopne
repz
lret
int3
out
daa
jecxz
scas
cmp
dec
sbb
in
adc
icebp
stos
jo
dec
into
inc
popf
in
ds
push
cltd
xor
add
xor
lods
adc
scas
popa
divl
xchg
jge
jo
add
and
mov
mov
cmp
sarl
sbb
in
negb
xchg
dec
mov
lahf
cld
cltd
incb
mov
lcallw
jb
icebp
lahf
dec
sarl
mov
into
cmp
inc
ss
jae
arpl
dec
xor
fists
out
imul
pcmpgtw
cmp
sbb
xor
xchg
add
xorl
notl
dec
lret
push
lods
aad
rorb
inc
push
aaa
mov
jo
xor
xchg
loop
arpl
icebp
daa
insl
dec
mov
call
sub
inc
xchg
lea
xchg
dec
mov
push
push
enter
adc
out
dec
add
add
pop
xor
jo
adc
ljmp
sbb
nop
stos
aad
cli
add
xor
jmp
ret
adc
mov
nop
cmpsb
jmp
mov
jno
or
iret
lds
test
pop
xchg
adc
inc
loope
stos
out
mov
dec
inc
xchg
jmp
shll
outsl
lcall
lcall
jns
sub
iret
push
les
outsb
inc
jne
mov
xchg
xor
xor
fsubr
jae
dec
sbb
xlat
scas
jg
or
pop
rorb
cmp
cs
mov
in
xchg
inc
pop
mov
data16
sub
es
in
jne
mov
mov
outsb
jns
jecxz
fucomi
pop
cmpl
fcmovbe
out
sbb
shlb
mov
addl
jg
xor
out
lds
sbb
push
dec
rorb
xchg
jns
imul
add
mov
or
mov
pop
arpl
cmp
jp
in
ljmp
mov
sub
sub
fidivl
pusha
lcall
mov
xchg
jl
sbb
std
fcoms
enter
xchg
add
sbb
sub
push
pop
roll
repz
cli
inc
push
jbe
loop
fidivrs
xor
call
les
inc
jnp
mov
out
and
sub
loop
imul
mov
ficoml
orb
movsl
push
pop
imul
es
incb
xor
dec
js
pop
push
fstpl
xchg
jno
aam
loope
leave
mov
push
sbb
xor
mov
fcomip
int
fwait
and
fbstp
xor
mov
rcrl
shrb
adc
out
lret
outsl
clc
aaa
bound
jg
lahf
mov
fistl
iret
xor
pusha
cmp
mov
and
add
aad
iret
or
arpl
adc
js
push
sti
inc
js
cmp
cwtl
lea
jns
mov
add
inc
push
test
adc
pop
mov
inc
jne
push
sub
fsubl
xchg
jmp
pushf
pop
lea
jns
inc
xor
cmp
ds
or
pop
loope
push
xor
shrl
repz
hlt
mov
adc
lds
or
and
adc
movsl
jo
sti
adc
sub
subb
cs
fsubrs
pushf
sub
add
push
dec
bound
mov
dec
mov
lds
sbb
adc
xor
inc
xchg
imul
cmp
enter
xchg
in
nop
jae
mov
pop
dec
inc
mov
mov
pop
sarl
mov
cmp
lcall
fwait
push
stos
loope
xchg
std
clc
xor
xlat
loope
xorb
sbb
subb
stos
decb
inc
xchg
inc
pop
add
sub
xlat
xlat
lahf
sbb
xor
adc
jne
shlb
mov
dec
jl
mov
add
lahf
xchg
lods
push
push
pop
dec
xchg
and
test
lahf
pushf
dec
dec
sub
inc
xchg
rol
fidivrs
loope
mov
mulb
cmpsb
jno
jbe
jb
mov
mov
stos
rep
test
cmp
fwait
ja
test
test
add
dec
out
sbb
adc
xor
dec
leave
add
sbb
lds
daa
das
dec
inc
nop
xor
fwait
and
imul
out
je
add
sbb
stc
or
jbe
inc
jecxz
in
loop
add
xor
test
xchg
pop
mov
insl
dec
push
aam
ss
mov
add
dec
cld
clc
fdivr
jbe
in
mov
mov
les
pop
xor
sbb
xchg
sarb
cmp
sarb
pop
roll
bound
fistpl
out
sub
sti
mov
mov
mov
inc
xchg
push
iret
jl
push
jnp
jl
adc
xchg
xor
lret
xchg
and
orl
inc
jne
loop
jmp
inc
pop
push
mov
ja
inc
or
xor
sub
xor
mov
nop
arpl
jg
sbb
or
sub
test
pushf
sbb
mov
test
push
cmp
dec
rcl
xor
call
inc
aam
popf
imul
xor
cld
sub
dec
cmc
bound
or
scas
cmp
pop
fists
or
mov
sahf
inc
scas
jb
inc
cltd
das
add
leave
iret
fs
jne
scas
mov
pusha
pop
dec
addr16
out
sbb
xor
xchg
aam
fs
push
jne
pop
push
mov
in
pop
test
enter
std
mov
pop
add
pop
les
push
or
ljmp
in
jge
loopne
dec
pop
inc
sbb
es
testl
add
sbb
mov
sub
mov
fwait
add
dec
sub
test
divl
loope
xchg
data16
daa
mov
int3
imul
mov
add
jbe
outsb
mov
test
repz
or
jo
ret
jbe
fimuls
scas
test
mov
popf
movsb
aam
test
aaa
je
fisubrl
hlt
int
xor
inc
cmp
stos
mov
repnz
pop
mov
jae
mov
xor
negl
add
mov
cld
mov
test
adc
outsl
inc
cmp
in
push
sub
or
outsl
dec
adc
jle
lea
into
pop
std
pop
or
xchg
jo
lds
ja
loope
lock
loopne
lods
push
dec
roll
push
pop
or
pop
sub
mov
adc
das
mov
lret
xor
hlt
cmpb
sub
mov
fxch
pop
jl
pushf
aad
sete
inc
cmp
inc
inc
mov
insb
pop
ss
cmp
sub
insb
in
out
inc
negb
sbb
loopne
mov
scas
cmp
dec
jns
mov
out
stos
inc
fcoms
cmp
test
or
cltd
pop
cmpsb
in
aam
ds
repz
clc
mov
testl
and
push
pop
sarb
xchg
cmp
push
push
out
cmpsl
dec
jbe
out
or
mov
jl
sub
leave
aaa
push
and
movsl
sbb
sub
test
aam
add
add
push
stos
ret
inc
add
daa
fucomp
call
pushf
test
mov
cli
adc
stc
rcll
sbb
stc
divb
cld
adc
mov
jl,pn
xor
jl
mov
iret
xor
scas
stos
in
jno
mov
clc
mov
jmp
shrl
addr16
xchg
icebp
popl
sbb
mov
sbb
push
push
or
mov
xchg
pop
gs
scas
lret
mov
nop
lock
in
faddl
fsts
dec
mov
mov
adc
inc
or
add
mulb
mov
jg
fsub
push
insl
cmp
mov
mov
movsl
inc
xchg
sub
dec
mov
xchg
out
out
jp
dec
sti
push
daa
rcrl
lock
ljmp
pop
push
test
leave
hlt
push
fsubs
sub
adc
push
push
mov
jbe
and
insb
iret
cmp
jns
jge
push
rcll
sbb
mov
xchg
and
data16
lret
loopne
sub
jb
aad
xor
int
pop
push
dec
xchg
xor
stos
jb
and
push
lods
aam
mov
ret
cmpsb
fildll
fisubl
outsl
or
shll
outsl
outsl
jmp
and
call
jns
mov
xor
cmc
dec
scas
mov
dec
loop
sbb
mov
dec
inc
sbb
adc
cmp
fistpll
mov
lcall
test
call
cmp
xor
js
xchg
or
int
cld
movsl
in
sub
xchg
mul
movsl
iret
fmul
xchg
cmp
dec
sub
jns
sub
xchg
xchg
mov
mov
sub
js
add
push
orl
pushf
ljmp
jne
dec
pop
or
xchg
and
sahf
aas
rorl
mov
gs
push
hlt
mov
and
jge
sub
outsl
loope
pop
and
push
movsl
out
out
insb
not
or
outsl
or
cs
adc
sahf
gs
mov
nop
mov
and
jmp
xor
xchg
jns
cmpb
nop
add
jg
imul
ss
mov
sbb
out
mov
and
fildll
into
mov
sub
xor
cmp
movsl
cmp
dec
pop
popa
push
lret
jbe
aas
lds
push
xlat
shlb
mov
aam
jno
je
int3
jae
cmp
push
test
sbb
jecxz
nop
jecxz
or
pushf
xchg
sub
mov
int3
dec
jne
add
sub
dec
adc
cmp
jle
sub
loop
jo
lret
lahf
jne
icebp
lret
dec
jl
mov
fldl
inc
dec
rol
add
test
lock
sub
notb
das
fmul
mov
shlb
inc
push
xor
cltd
sub
out
bound
and
jle
repz
pop
push
insl
push
imull
movsb
pop
adc
jb
cmpsl
loop
mov
and
shrb
push
lahf
or
popa
cmc
adc
fcmovbe
lods
incb
xchg
xor
shrl
mov
pop
push
push
bt
cmpl
pop
xchg
sbbl
xchg
into
hlt
movsl
imul
int3
mov
cld
fwait
adc
inc
fisttpl
adc
out
xchg
fcompl
lock
clc
je
insl
and
jno
inc
into
sti
mull
xor
stos
add
adc
aad
into
push
sbb
mov
adc
ja
test
js
mov
ficomps
lret
xor
ja
sub
jecxz
sbb
shrl
fwait
push
cmc
mov
roll
enter
fimull
push
std
popf
leave
loopne
mov
ficoms
lds
popf
adc
add
mov
imul
faddl
inc
xchg
pop
adc
push
jg
mov
push
enter
push
lcall
sub
pop
adc
ret
outsl
cld
out
out
and
sarb
pop
inc
inc
mov
and
ret
std
jle
or
push
pop
push
es
or
fnstenv
pop
imul
lret
mov
xor
aad
push
jge
xchg
pop
cld
cmpsl
xchg
sbb
stos
sub
aad
xchg
les
adc
arpl
loope
push
cmp
pop
enter
lea
and
xor
mov
xchg
mov
testb
mov
push
mov
loop
into
cmp
mov
fsubl
mov
adc
and
adc
rol
push
icebp
mov
daa
mov
test
push
sbb
js
mov
out
pop
stc
movsl
int3
xchg
movsl
sub
and
push
cmp
rolb
or
imul
popa
and
fcoms
pop
mov
test
bound
sub
sbbl
xlat
stos
cli
mov
loope
psubw
loop
das
sub
mov
fsubrl
pop
stos
xor
movsb
insl
iret
push
push
lods
roll
lods
fadd
jb
add
add
mov
bound
icebp
push
mul
outsb
sub
and
call
stos
int
mov
xor
in
mov
pop
lea
and
or
fdivrl
out
ss
xchg
or
jne
push
inc
lock
mov
xor
or
dec
xor
addr16
jne
fmulp
dec
stos
repz
lock
mov
push
repz
adc
dec
movsl
fsubs
les
mov
in
jmp
cmc
sub
addr16
pop
sub
cmc
inc
stc
adc
xchg
sbb
jne
ja
jle
fiaddl
dec
xor
xor
mov
imull
out
sbb
popf
sbb
inc
test
rclb
jg
rcrl
dec
xchg
fidivrs
and
sahf
mov
add
lock
adc
cltd
out
testl
ret
imull
and
cli
les
mov
jo
cmp
push
xchg
xchg
add
push
call
and
in
dec
orb
push
add
jle
cmp
push
or
nop
add
push
iret
inc
and
in
out
movsl
mov
dec
xchg
pusha
adc
ljmp
push
pusha
push
cld
or
mov
cmpsl
dec
pop
dec
das
xor
or
cmpsl
cmp
sar
gs
shl
jp
jnp
mov
lret
dec
adc
mov
das
pop
push
sbb
mov
add
add
arpl
ret
jg
mov
pop
pmovmskb
repz
mov
xlat
subl
inc
shr
mov
mov
adc
pop
ljmp
shll
movb
lahf
mov
loop
sbb
jbe
pop
call
or
or
mov
dec
lods
aaa
cmp
push
data16
loopne
in
lea
mov
inc
ljmp
in
fldcw
fcmove
pop
xor
cmp
cs
pop
lea
sub
inc
xor
outsb
pushf
adc
mov
or
fnsetpm(287
jo
mov
add
enter
or
mov
stos
pop
mov
and
rcrb
test
pop
les
adc
ds
int
fs
fists
je
pop
lods
sub
ja
enter
ss
stc
mov
sub
rclb
jb
jns
movsl
fsubrl
dec
sbb
inc
ret
fstpt
push
mov
adc
fwait
push
xor
scas
mov
stos
sub
cmp
jge
lcall
add
scas
sub
test
cmp
pop
cmpl
cmp
jne
cmp
icebp
mov
ret
outsb
add
and
js,pt
or
clc
loopne
sub
leave
cmp
push
sbb
dec
frstor
xchg
cltd
cmp
cmp
vxorps
pop
lock
adc
in
jle
adcb
jl
jae
sti
in
xor
das
ja
popa
ret
ljmp
mov
dec
adcl
dec
sti
cmpsl
cwtl
xor
iret
movsl
repz
mov
jl
cld
testl
jle
outsl
hlt
push
sub
xchg
push
shll
shlb
ret
jmp
out
jg
or
or
cmp
bound
add
arpl
xchg
out
jl
xor
sub
scas
stos
bnd
int
hlt
test
cmpsb
pop
xor
push
lods
pop
icebp
xor
stos
repnz
dec
arpl
and
mov
sti
lcall
dec
mov
inc
push
mov
aaa
and
mov
cltd
int3
fcoml
and
arpl
cs
xor
jle
push
flds
dec
ret
in
inc
std
dec
ljmp
das
nop
mov
inc
mov
jmp
stos
and
roll
cs
lahf
mov
pop
lea
push
jmp
adc
add
imul
icebp
rcll
rolb
xor
or
jo
mov
inc
mov
gs
mov
push
cmpsl
xchg
imul
cmp
les
adc
cltd
inc
dec
in
sarb
jmp
pop
mov
loope
sahf
push
emms
push
inc
pop
mov
xchg
into
loope
rorb
jmp
add
add
into
lods
cmp
jnp
jmp
ror
notl
mov
xchg
jne
sbb
jbe
rolb
stos
jecxz
ljmp
stos
popl
fimull
negb
test
cmpsb
ror
push
jge
xchg
and
out
in
aas
mov
das
test
or
and
nop
rcr
jb
jnp
cli
mov
adc
std
inc
pop
out
pop
pavgb
push
cmp
pop
shl
inc
mov
add
fs
js
test
ror
push
cmpsb
fisttpll
push
negb
lods
shrb
stos
dec
or
push
scas
bound
fsubr
test
movb
jl
mov
pushf
shrl
sub
mov
in
push
movsb
aas
and
pop
vphadduwd
xor
xor
dec
fisubl
cmp
lret
fists
pushf
add
lahf
push
inc
sahf
std
inc
mov
nop
jge
xchg
divl
dec
in
clc
mov
lods
or
in
popa
cltd
loopne
icebp
inc
push
lahf
mov
and
gs
mov
insl
clc
mov
jp
jp
insb
fcomi
mov
inc
ds
mov
out
inc
jne
repz
sbb
jns
push
test
or
arpl
loop
xchg
testb
fwait
push
jns
mov
cmc
push
ficompl
adc
add
cwtl
sub
xchg
sub
pop
xchg
inc
fcomi
popf
or
dec
mov
iret
fisubl
sub
push
xchg
ret
popa
test
adc
ss
jp
mov
je
data16
popf
cli
push
dec
jne
xchg
mov
push
sub
push
gs
cmp
jne
fldt
cmp
icebp
sbb
ds
jmp
in
pop
ja
fcmovne
es
cwtl
push
jl
mov
ss
cld
mov
in
call
aas
pop
stos
add
jle
popf
or
cmc
dec
repnz
test
mov
push
xchg
jl
sbb
push
add
pop
mov
push
fsubr
add
sub
sub
mov
sbb
pop
fldt
jecxz
and
cmpsb
inc
cld
enter
or
fcomip
push
subl
mov
mov
mov
adcl
int3
int
sahf
mov
adc
xor
dec
pop
ljmp
and
movsl
fmul
xor
pop
andb
xchg
inc
mov
test
shlb
inc
and
test
dec
call
stos
test
xchg
and
ret
test
stos
lock
iret
push
mov
scas
jno
aas
subl
or
dec
or
inc
hlt
lds
pop
mov
lcall
sub
mov
inc
lea
add
and
mov
out
sbb
loopne
inc
jae
sar
add
dec
in
mov
repz
jbe
mov
and
and
sahf
xor
cld
test
push
in
pop
adc
mov
jmp
sub
mov
aaa
pop
pop
cli
xchg
fs
mov
les
es
cmp
jb
push
repnz
adc
or
inc
lahf
lock
jne
lret
pop
cmpsb
pushw
dec
sbb
cmc
mov
xchg
mov
cs
ret
insb
sbb
and
or
out
ljmp
aam
mov
outsb
adcb
ret
inc
cmp
jge
mov
cltd
mov
in
jbe
sti
lods
jno
pop
lock
shll
testl
sbb
add
push
cltd
inc
stos
pop
jbe
shl
subb
mov
rorb
ja
pop
and
lea
inc
inc
ds
int3
cltd
xor
fs
mov
clc
mov
cmp
mov
pop
push
into
aaa
cmpsb
xchg
jle
out
sbb
mov
or
inc
aad
mov
les
push
ds
mov
pop
mov
movsb
popf
adc
inc
ja
pop
inc
in
xchg
fmul
mov
dec
xor
dec
cmp
jle
aas
cmp
js
mov
xchg
scas
and
dec
add
pop
in
test
xchg
dec
andl
cmpsl
scas
sbb
dec
lds
ljmp
in
cmc
imul
sbb
sub
test
les
movb
jecxz
cli
rorb
jno
jl
sub
sub
mov
pop
pop
pop
out
shrl
inc
out
add
dec
sets
inc
mov
fs
sub
dec
add
int
mov
std
pop
pop
lock
mov
call
sbb
insl
sbb
jns
sub
jbe
decb
mov
enter
pop
xchg
and
add
adc
andb
push
cs
inc
stos
and
jae
jp
out
mov
iret
push
mov
cmp
arpl
and
mov
loop
jge
mov
lods
mov
js
mov
mov
push
cmp
sub
xchg
inc
nop
incl
addr16
sub
cli
sub
jnp
shl
dec
dec
scas
inc
mov
mov
push
cmp
mov
aad
test
aam
loopne
sti
popa
gs
add
push
cmpb
add
shrb
subb
mov
fwait
sbb
sbb
dec
popf
fcomps
jb
bound
dec
enter
enter
sbb
or
or
ljmp
popa
daa
cli
sahf
push
adc
addr16
dec
jmp
and
adc
sbb
cmpsb
lods
outsb
aas
pop
xchg
ret
fidivs
mov
cmp
imul
mov
int3
mov
cmp
sarl
xchg
jle
sbb
mov
push
push
insl
lahf
es
ret
inc
or
xorb
mov
add
dec
sub
add
divl
adc
ja
mov
sbbb
das
insl
divps
pop
lcall
dec
out
sahf
fcoms
js
push
pop
mov
inc
push
out
pop
inc
xor
repnz
shl
int3
jb
outsl
and
xchg
in
es
adc
mov
in
add
cmpsl
mov
sub
jecxz
pop
adc
dec
sub
add
rcrl
cs
add
xchg
xor
push
lds
dec
rcrl
arpl
in
imul
add
pushf
push
inc
jbe
test
xchg
notl
in
movsb
cld
pop
or
roll
add
add
nop
mov
and
xlat
test
dec
sti
flds
es
stc
xor
push
vpaddsw
pop
dec
gs
lock
inc
in
test
mov
mov
inc
dec
inc
loope
xchg
or
mov
stos
xchg
lret
in
xchg
mov
aas
cmp
mov
repnz
pop
or
adc
mov
fistpll
das
dec
roll
movsl
mov
mov
pushf
inc
imul
inc
rolb
dec
and
in
ja
sub
dec
mov
xchg
xchg
divl
add
mov
arpl
fisubl
sub
in
scas
daa
mov
das
fisttps
adc
aam
adc
and
pop
pop
shlb
jo
pop
int
ficomps
ror
stos
sub
mov
dec
ds
mov
dec
insb
pop
jae
imul
shl
cmp
pop
cmp
dec
js
incb
jmp
cltd
push
adc
mov
int
lock
sub
int
out
daa
add
lret
rcll
ds
pop
push
and
pop
pop
mov
and
shrl
xor
mov
inc
cmpsl
ss
mov
cmp
or
and
shlb
stos
or
or
jns
out
jg
mov
xchg
je
loop
jge
fs
cmp
pop
mov
inc
xchg
nop
cmp
add
pop
push
lods
cmp
fistpl
int3
jb
std
fistpl
push
xchg
loop
testb
sub
neg
mov
cmpsl
pop
pop
data16
push
and
and
and
int3
push
fiadds
sub
and
mov
sarb
pusha
fisttpll
add
icebp
mov
jecxz
aas
leave
rclb
leave
mov
bound
jmp
dec
and
jp
rorl
push
jmp
mov
aaa
xchg
int3
aas
sub
mov
aad
xor
push
js
jnp
incb
xchg
leave
dec
inc
mov
or
nop
das
push
lods
cmp
xchg
neg
and
jg
push
cmpsb
je
inc
gs
mov
aas
push
xchg
cs
jno
icebp
insb
push
mov
in
inc
jae
jns
and
cmp
bound
in
shrl
je
mov
leave
cmp
loopne
sbb
sarb
mov
shlb
fists
cmpsb
pop
int
xor
xlat
ret
dec
pusha
jbe
fpatan
insl
leave
and
dec
xor
xlat
xor
lret
data16
lea
jnp
pop
mov
out
shrl
ret
outsl
adc
sbb
js
xchg
pop
adc
ret
xor
mov
aas
stc
in
mov
cmp
pop
mov
cmpsb
or
push
sbb
jl
mov
xor
insl
aaa
add
mov
sbb
iret
inc
jl
xor
mov
mov
push
xor
leave
cmpsb
loop
pop
xchg
hlt
xor
xchg
mov
add
inc
dec
sub
and
adc
test
fisttpll
icebp
jnp
sti
pop
sbb
mov
and
or
jg
aas
lahf
andl
scas
int3
repnz
xor
arpl
scas
jnp
mov
test
or
ja
jbe
fsubp
repnz
dec
sbb
imul
stos
xlat
je
inc
and
pop
outsb
fisttpl
popa
out
pop
in
fcoms
icebp
pop
lret
cli
mov
push
rorl
push
ret
inc
and
jnp
jns
push
add
shll
lret
xor
mov
jnp
xor
cmp
lods
ret
dec
adc
sub
mov
mov
jae
or
mov
mov
mov
scas
clc
mov
fidivs
add
je
test
or
fisttpl
push
xchg
outsb
mov
jl
push
jno
cmp
or
jb
sbb
xor
loopne
mov
sbb
movl
add
ja
in
sbb
mov
and
fs
aam
sbb
jb
dec
dec
cmp
push
lods
adcl
jle
js
std
and
pop
in
and
sub
outsb
dec
dec
sub
nop
and
mov
sbb
jne
jg
jge
ja
cmp
dec
push
inc
pushf
std
fnstsw
lods
push
in
rcl
or
popa
pop
imul
mov
jmp
pop
adc
shlb
icebp
orl
out
cli
std
call
aas
loop
lock
movsb
or
cmp
into
push
cmp
or
icebp
add
xor
cmpsb
adc
mov
jge
inc
imul
incb
jle
ja
js
jp
adc
in
fcoml
push
fcoms
jne
xor
ret
insb
pushf
daa
ds
jb
dec
out
std
add
cmp
pushf
arpl
sbb
mov
mov
inc
pop
jle
add
fdivrs
outsb
mov
pop
cmp
insb
cmp
jb
and
jae
cmp
scas
add
repz
pop
hlt
jg
stos
in
mov
inc
cwtl
pop
adc
jne
fnstsw
mov
je
cmp
xor
ljmp
mov
or
sub
lahf
inc
mov
das
push
sbb
inc
orb
out
jecxz
dec
fwait
aam
sub
add
xor
repz
xor
pushf
leave
mov
dec
ljmp
das
sub
loopne
fs
mov
sub
outsl
aas
call
push
sbb
mov
adc
movb
sbb
loopne
push
xor
cmp
sahf
xchg
or
popa
das
ljmp
ret
mov
adc
addr16
inc
out
cltd
push
pop
mov
mov
sub
adc
das
inc
pushf
lods
ret
cmp
adc
mov
jbe
hlt
pop
cmp
sub
sub
push
fistpl
test
hlt
test
push
mov
xor
push
and
repz
stc
mov
mov
sub
cmp
jmp
lret
jbe
cmp
aas
fdivrs
data16
pushf
push
jnp
ds
call
xchg
popa
push
xchg
mov
lret
bound
inc
xchg
sbb
in
mov
outsb
push
stos
push
cmp
stos
stc
dec
scas
pop
and
push
lods
loop
xchg
das
mov
inc
je
into
xchg
test
test
or
dec
int
mov
out
dec
mov
inc
xchg
fdivrp
cmp
push
sub
pop
into
mov
aad
cmp
insb
fsub
push
push
push
lods
mov
shll
dec
movsb
cmp
sub
cmp
imul
push
or
jmp
cmc
dec
fimull
in
xchg
push
test
repnz
mov
test
jbe
das
or
movsl
aad
pop
sbb
shll
dec
inc
call
and
ja
inc
mov
fs
out
adc
mov
int
repz
cs
xchg
pop
fistpll
jo
add
aam
sub
pop
roll
adc
out
popf
cltd
testl
je,pn
pop
mov
shlb
test
out
dec
mul
out
xchg
aaa
jbe
mov
push
stos
sahf
insl
les
mov
aaa
sti
push
icebp
mov
mov
fisubl
xlat
push
mov
ficoms
insl
lahf
push
out
es
adc
push
sub
cli
out
sahf
data16
push
icebp
mov
das
sarb
mov
push
xchg
cmovbe
mov
cmp
jg
jp
inc
lcall
clc
dec
add
cmp
cmc
sbb
rsm
sub
enter
dec
mov
pop
jne
nop
mov
fldt
adc
enter
push
xchg
or
icebp
mov
in
lcall
cmp
mov
js
fxch
dec
mov
jecxz
sbb
sbb
aam
repz
movsb
xchg
push
inc
ljmp
daa
out
mov
jle
dec
mov
and
and
xchg
xor
inc
xchg
pop
js
and
dec
mov
mov
mov
scas
leave
xor
ljmp
and
aaa
ss
mov
mov
sbb
stc
xchg
repz
mov
icebp
mov
test
mov
sub
fimuls
adc
sub
lcall
repnz
push
or
loop
lods
shrl
pop
mov
sub
test
and
das
fistpl
cmp
and
scas
xchg
movsl
stos
clc
out
pop
icebp
outsl
sarb
or
mov
add
popa
mov
int
sub
inc
jno
cmpsl
call
jmp
vpmacssdd
push
loope
outsb
pop
fimull
popa
das
je
loop
call
pop
pmaxsw
in
mov
adc
cli
dec
sub
jecxz
fiaddl
sbb
push
rol
iret
xor
xchg
mov
das
cld
inc
add
mov
xor
push
sub
in
pop
mov
add
fisubs
mov
mov
push
subl
xor
into
mov
aad
inc
mov
sub
jge
scas
jbe
xor
cmp
cs
scas
fnsave
paddsw
xchg
inc
insb
lds
dec
jp
pop
xchg
fdivl
inc
nop
sub
push
push
ror
push
fmull
xchg
aas
sub
jb
idivl
pop
pop
shrl
jne
add
lret
sbb
imul
adc
aaa
rorb
and
cmp
jmp
gs
jo
aaa
nop
lret
mov
add
subl
imul
xchg
sbb
or
and
push
and
in
and
xor
jg
dec
loopne
mov
movsb
nop
ret
xor
fnstenv
push
push
int3
sti
lods
stos
dec
cmc
inc
sbb
adc
leave
pop
cld
pop
adc
iret
outsb
mov
and
jp
cltd
pop
loope
pop
arpl
jb
fbstp
adc
lock
jecxz
cmp
int
icebp
adc
pandn
in
in
out
or
cmpsl
pop
sbb
dec
rorl
int3
mull
rol
push
jp
jno
adc
mov
popf
jl
or
xchg
cli
in
movsl
inc
push
ljmp
sahf
repnz
lock
int
cmp
stos
or
adc
scas
ja
add
cltd
mov
push
mov
fsts
pushf
dec
or
lcall
add
dec
es
movlps
aas
sahf
xor
jl
xchg
jg
test
cmpsl
push
rcr
inc
lahf
clc
fsubp
test
pop
ss
into
jg
nop
jnp
push
xchg
and
dec
mov
add
mov
push
push
cli
stc
or
jg
outsl
clc
lea
sbb
push
loopne
std
adc
call
rolb
xor
out
cmp
jo
test
adc
scas
xchg
dec
jo
insl
adc
xor
js
push
fbld
mov
or
clc
les
xchg
mov
ret
mov
cmp
jnp
xor
repnz
fwait
shll
cmp
ret
std
into
negl
pop
in
inc
rcll
mov
pop
nop
add
pop
mov
xchg
mov
push
roll
or
clc
insl
cmpsb
fmuls
imul
push
adc
xor
addr16
dec
jmp
adc
negb
jle
mov
dec
clc
frstor
adc
push
jg
nop
mov
mov
inc
xchg
in
out
add
mov
sbb
dec
lods
and
dec
inc
js
push
rcrl
loope
sub
mov
mov
out
out
mov
pop
jo
test
jecxz
push
es
and
lea
test
and
pop
pop
int
mov
and
aas
jl
loopne
inc
xchg
daa
mov
fdivrs
xor
inc
cmp
or
in
aaa
idiv
iret
cmp
mov
push
add
mov
mov
nop
inc
push
or
pop
ljmp
jnp
xchg
lock
shlb
xor
test
xor
filds
jg
ret
imul
or
xchg
cmpsb
mov
xchg
fbld
jge
ljmp
push
sub
jge
sub
mov
mov
or
icebp
mov
xchg
sbb
inc
loope
imul
dec
fsts
xchg
ret
dec
xchg
or
adc
sub
rcrb
arpl
loopne
pusha
icebp
dec
push
iret
out
dec
and
subb
mov
fwait
pop
fmull
sahf
jne
xchg
inc
pushf
sub
mov
cli
lds
jg
sti
cmp
outsl
ljmp
inc
push
push
jae
cmpsb
arpl
pop
xor
and
adc
dec
sbb
sbb
lret
pop
cmp
xchg
shl
dec
sahf
aas
jo
int3
xorl
arpl
movsb
cmp
into
mov
shlb
insl
mov
outsb
movsl
pop
mov
mov
xor
inc
xchg
jg
dec
fs
jbe
ud1
dec
push
add
cs
test
xchg
std
lock
roll
flds
fwait
jae
aam
push
ficompl
mov
pop
mov
test
movsl
dec
jle
add
sti
add
ljmpw
imul
std
rclb
add
jae
jle
int3
out
decb
sub
lcall
or
cmpsb
xchg
xchg
jb
xor
or
add
sbb
adcb
or
lahf
icebp
out
ret
jno
imul
out
pop
pop
faddl
or
cmc
dec
jge
cmp
movsl
dec
jge
xor
sbb
ljmp
lcall
repz
xorb
outsl
push
lds
cmp
insl
and
push
jl
adc
xchg
sbb
sub
and
and
pop
in
mov
std
enter
das
sbb
jb
in
je
cmp
cwtl
repz
outsb
incl
add
xor
lock
pushf
lret
xchg
push
inc
fdivrp
int3
pop
sub
lret
movsl
in
in
and
testl
mov
sub
pushf
mov
jge
sbb
adcl
lea
out
std
inc
test
sar
sbb
lcall
xchg
pop
int
adcl
lret
fadd
adc
pop
fmuls
enter
jl
dec
ret
mov
inc
jl
push
xor
add
mov
push
cmpsl
insl
aas
pop
popf
std
mov
nop
jge
xchg
mov
fists
push
fbstp
pcmpgtw
cwtl
mov
jecxz
sbb
int3
inc
adc
imul
loope
orl
lods
repz
jae
rclb
add
xchg
cmpl
mov
sbb
inc
xor
push
push
je
jnp
jnp
inc
lods
push
loop
sub
dec
cmp
movsl
js
fistl
xchg
jmp
cwtl
inc
gs
test
icebp
sbb
add
mov
xchg
test
jb
mov
in
aaa
or
pop
out
clc
jl
imul
mov
dec
je
inc
push
push
push
test
mov
mov
xchg
lock
leave
cmp
test
mov
lods
jecxz
jno
mov
push
sahf
mov
pop
mov
push
jecxz
push
mov
ficoms
push
repz
or
orw
mov
and
xchg
add
mov
jp
xchg
cltd
es
or
and
inc
enter
or
aas
cmpsl
dec
adc
push
fdivs
aad
cld
dec
push
add
pusha
push
and
mov
pop
dec
xchg
and
mov
push
mov
sub
mov
aam
out
push
mov
enter
mov
pop
fildl
pop
and
ret
inc
addb
pop
sbb
sbb
std
lret
call
pop
fiaddl
push
mov
andl
xor
in
sbb
dec
pop
xchg
pop
lcall
cmpsb
and
inc
xchg
cmpl
pop
in
clc
jp
cmp
mov
aaa
pop
ret
pop
jle
mov
iret
adc
push
dec
cmp
jb
movsl
dec
cmp
dec
fwait
mov
arpl
std
xchg
ret
insb
cmpsl
or
clc
scas
rcr
cmp
stos
aaa
test
movsb
in
lret
ds
cmp
xchg
jg
daa
push
mov
mov
mov
mov
xchg
imul
int
dec
mov
or
push
inc
pop
gs
adc
orb
inc
addr16
xor
mov
inc
mov
fwait
xor
fadds
ret
fs
dec
lahf
push
xchg
sub
sub
fistpl
mov
add
test
cld
mov
sbb
daa
scas
scas
dec
stos
mov
adc
add
fistpll
mulb
adc
fisubrl
mov
popf
cmp
adc
subb
ret
xchg
pop
push
pop
jle
rorb
push
movsl
test
pop
push
push
jnp
in
imul
xor
mov
pop
ret
ret
ja
sarl
jne
cmp
inc
push
xchg
dec
jb
das
ds
fcmovb
jmp
mov
nop
fs
push
cli
jno
lret
ljmp
lea
xor
jb
in
and
adc
out
lret
jb
insb
push
xchg
or
outsl
int
xchg
stos
hlt
adc
mov
adc
popf
dec
sbb
lea
js
mov
add
xchg
add
push
xchg
inc
add
call
repz
xchg
jecxz
lods
enter
dec
iret
leave
repz
sbb
sti
mov
jo
mov
rorl
fisttpl
lods
mov
push
lret
fisubrl
mov
popf
mov
adc
jnp
shl
mov
jnp
xchg
xor
rcrb
mov
push
ror
push
pop
jbe
push
call
mov
jae
dec
add
sbb
or
jo
pop
and
jnp
inc
jecxz
mov
cs
lret
imul
pop
cli
int3
std
dec
cmp
popa
dec
subb
mov
xor
xchg
psrlq
xor
hlt
and
out
test
add
add
ss
sbb
test
sbb
cld
mov
lret
cmp
test
push
sbb
mov
jns
cmp
inc
sub
pop
rcll
ljmp
loopne
sub
cmc
jno
mov
dec
or
xchg
nop
mov
mov
lock
mov
push
fistpll
mov
icebp
mov
sbb
jb
pmullw
mov
daa
push
out
pusha
pop
and
mov
aaa
loope
pop
scas
xchg
and
xor
pushf
pop
inc
sahf
and
jl
popa
cmp
movsl
sbb
scas
call
mov
sahf
js
adc
fists
repz
jge
jp
leave
shl
call
subb
inc
push
pop
je
enter
xorb
cmp
dec
imul
xor
repnz
ljmp
ljmp
and
pop
push
xor
adc
sarb
out
scas
fstpl
mov
push
xchg
ret
rcr
cltd
pop
add
push
inc
aaa
inc
cli
jmp
sbb
mov
adc
addr16
xchg
pushf
sti
movsl
jge
sbb
inc
dec
jge
rcl
cmpsb
test
lods
cltd
rorb
addl
mov
imul
decl
dec
pop
icebp
add
std
ret
addb
loop
jno
out
xchg
mov
rcrb
out
pop
cmp
sub
rol
pop
arpl
and
andl
jl
repnz
pop
mov
hlt
je
mov
loope
stos
mov
movsb
je
mov
iret
lret
lcall
fwait
mov
sub
sarl
mov
dec
xchg
mov
int
mov
xchg
cmp
test
sbb
dec
sub
jbe
aas
movsl
roll
testb
push
jmp
rorb
jnp
out
jp
jle
in
mov
sbb
or
cs
lret
cmc
add
testl
and
mov
imul
fidivrl
andb
movsbl
out
mov
ja
cmp
shll
sbb
push
je
pop
shrb
push
test
cmp
in
insb
fstps
jno
stc
sub
jmp
ja
sbb
jbe
jge
pushf
mov
mov
mov
out
lret
out
jmp
or
pop
jb
sbb
mov
notb
aas
push
sub
stos
stc
push
push
dec
ds
or
jg
lea
aam
out
mov
jno
inc
xchg
mov
adc
ds
push
or
loop
and
push
adc
loopne
jmp
xor
test
repnz
lds
pop
adc
push
xor
jae
lret
mov
ja
xchg
add
mov
and
bound
jmp
cmc
push
ds
mov
hlt
insb
lret
adc
sub
aad
push
sbb
pop
add
inc
ret
cmp
icebp
je
pusha
aam
jle
push
sub
xor
sub
test
into
and
fisubrl
iret
leave
jecxz
xchg
and
mov
rcll
mov
stos
add
mov
push
aas
cwtl
cmp
sbb
pop
gs
test
les
sbb
mov
test
hlt
xor
xor
jl
cld
jne
cmp
mov
stos
incb
das
clc
int
mov
mov
out
jle
fisttps
sbb
inc
int3
dec
jo
xchg
bound
sub
clc
pop
repz
das
mov
lret
mov
cmpsb
mov
scas
pop
pop
scas
out
xchg
test
cs
jl
stc
les
push
cmpsb
jne
out
rcll
in
or
fs
xchg
mov
push
out
xchg
and
out
pop
mov
andl
les
jae
add
nop
mov
lcall
insb
das
insb
or
in
ss
aam
sbb
xchg
jbe
add
daa
das
mov
adc
repz
inc
or
stos
mov
int3
add
out
push
aam
xchg
mov
pop
or
pop
push
daa
je
jmp
movsb
or
out
fs
out
dec
aad
je
pop
cmpsb
repz
shlb
fdiv
mov
cld
inc
pop
dec
movsb
jmp
xchg
dec
adc
or
movsb
dec
mov
es
dec
fimuls
mov
xor
rcrb
fdiv
xchg
mov
in
mov
mov
mov
lds
and
loopne
sbb
lds
test
xlat
cmp
subb
sbb
mov
pop
loopne
sub
and
lret
int
add
int3
or
addr16
mov
mov
iret
cmpl
sbb
cmpsl
out
sub
inc
fs
or
push
dec
or
add
stos
in
jno
jno
xchg
xor
add
xchg
adc
sar
xchg
aaa
pushf
repnz
imull
repz
sub
dec
pop
add
loop
push
cli
adc
xchg
xchg
xchg
clc
push
xchg
cli
repnz
lcall
sbb
cmp
dec
loop
hlt
push
pop
test
cltd
cmc
mov
lret
mul
popa
or
mov
in
mov
pop
mov
sub
sbb
in
sub
mov
push
mov
hlt
in
sbb
movsl
sqrtps
pop
pushl
cmp
add
pop
loopne
clc
cld
or
add
mov
push
mov
mov
int3
scas
into
sbb
into
xchg
push
rcl
mov
xor
add
pushf
cs
sub
pop
adc
jmp
cmp
mov
out
push
cwtl
int3
push
cwtl
mov
loope
insl
xchg
mov
cltd
gs
or
xor
lock
int3
inc
sub
and
hlt
out
out
jno
mov
push
inc
wbinvd
adcl
mov
xlat
push
mov
xorb
cmpsl
inc
cltd
mov
je
icebp
imulb
xchg
cmp
fdivs
filds
cmc
daa
aaa
cmp
jne
inc
insl
bound
cmp
jl
mov
orl
push
pop
call
mov
adc
xorb
fs
nop
out
cmc
adc
in
out
divl
mov
and
mov
mulb
movl
pop
jbe
repz
in
mov
or
inc
xchg
lret
jge
sub
dec
and
sub
jno
testb
xchg
jl
push
xor
adc
adc
cld
cmp
mov
movsb
adc
inc
lcall
sahf
xor
stos
cmp
push
cmp
fst
and
rclb
roll
loop
clc
mov
mov
add
loop
push
into
jbe
mov
or
dec
scas
mov
jnp
into
aad
lock
xlat
jno
pop
push
mov
cld
ljmp
popa
adc
dec
out
int3
jb
mov
mov
inc
lods
push
clc
loope
push
in
xlat
add
pushl
sti
mov
mov
imul
fadd
sti
mov
bound
out
xor
inc
push
mov
movsl
sub
jns
sarl
in
pop
ja
mov
xchg
adc
sbb
inc
xlat
mov
mov
popf
fs
fwait
or
adc
adc
adc
or
testb
mov
sahf
cmpsl
clc
or
pop
push
mov
sbbb
or
in
xchg
das
dec
mov
sub
sbb
lock
iret
push
lods
sbb
fdivrl
ret
sarb
dec
dec
aas
add
or
inc
mov
cmpsb
jne
jo
mov
and
sbb
push
nop
in
jae
adc
xor
nop
push
repnz
push
pop
push
and
in
xor
andb
push
xor
repz
mov
data16
sbb
or
rcr
mov
xchg
ljmp
fiaddl
push
fnsave
stos
lahf
fstpl
xchg
ret
inc
lahf
push
sbb
fsts
sbb
sahf
sbb
mov
cmpsl
jno
gs
pop
ficoml
sti
adc
or
pop
sahf
les
dec
and
sahf
sub
clc
pushf
pusha
pop
scas
mov
add
movsl
or
mov
push
js
or
repnz
xor
fisubrl
repnz
outsb
add
adc
out
daa
add
rcrl
xor
jns
fildl
scas
push
or
arpl
hlt
jecxz
dec
push
dec
fisubs
in
add
mov
mov
or
test
test
xor
sbb
add
mulb
push
daa
arpl
dec
add
jp
inc
arpl
add
jae
inc
mov
mov
xor
push
push
dec
aam
pop
and
movsb
ss
mov
das
or
into
cmpsb
pop
dec
add
nop
test
loope
in
mov
add
pop
rorb
xor
mov
aad
push
test
pop
cs
xor
divl
jne
sub
adc
jns
push
imul
cli
jmp
xchg
js
or
push
fcompl
or
mov
push
cltd
clc
add
xchg
shll
outsb
mov
mov
add
div
mov
movsb
mov
mov
mov
jae
adc
js
cs
pop
mov
sub
ds
add
int3
mov
repz
mov
xchg
ffreep
mov
push
mov
mov
inc
push
push
ja
push
cld
ds
or
fisubl
ds
outsl
ss
mov
xchg
sarb
push
push
into
movsb
call
xor
ss
push
fadds
jae
add
sarb
inc
test
scas
mov
jnp
inc
fisubs
ret
std
cmp
shlb
jecxz
sub
adc
popa
xor
add
test
sbb
adc
jecxz
add
les
fsubrp
dec
mov
cmp
add
pand
mov
cmp
push
popf
testb
imul
outsb
xchg
mov
adc
cmp
stos
jo
fdivp
inc
dec
pop
dec
or
dec
cmp
cmp
in
mov
arpl
mov
or
push
xor
test
mov
pop
mov
sub
pop
mov
sarl
mov
addb
jge
push
sub
in
jg
scas
xor
dec
xor
xchg
ret
inc
add
shll
jmp
inc
rcrb
xchg
inc
and
cmpsb
out
es
ret
xchg
clc
bound
das
fildl
jmp
clc
cmp
es
jmp
pop
ss
loop
xor
nop
xor
in
push
adc
outsl
fisubl
cmp
mov
pop
sub
push
mulb
cmp
inc
pop
push
pusha
faddl
repnz
pop
insb
in
xor
jmp
dec
push
xorb
aad
push
dec
cmp
cmpsl
jl
sub
fstl
and
mov
cmpsb
add
mov
pop
xchg
aad
xor
mov
fadd
push
fucomi
jge
jecxz
fidivrl
pop
inc
aaa
cmpsb
adc
mov
dec
sbb
fcompl
add
sahf
mov
pop
mov
and
in
sahf
hlt
in
cmp
imull
insl
int3
insb
dec
xor
push
or
mov
push
xchg
enter
rcll
and
jp
xor
xor
cmp
mov
dec
adc
fwait
lret
int
mov
lret
divb
sahf
fidivrl
stos
add
xchg
push
mov
xchg
jle
stos
inc
add
mov
repnz
testl
xorb
sbb
inc
loop
xchg
sbb
int3
jne
sarl
jle
sub
ja
std
daa
out
in
xchg
ficompl
dec
cmc
pop
sbb
push
xchg
ss
aad
fs
add
sbb
pop
jns
adc
ljmp
and
lret
mov
mov
fwait
mov
mov
fcmovnbe
add
jno
sbb
inc
into
fdivs
xor
repnz
inc
mov
pop
jne,pt
and
nop
nop
sub
cmp
sarl
cmpl
xor
call
mov
sahf
cmp
ret
cmpsb
xlat
xchg
fdiv
mov
fmull
loopne
mov
testb
movsb
mov
sub
ljmp
pop
mov
cmc
pusha
sub
and
xchg
bound
sti
orl
cmp
xor
jae
int3
mov
push
mov
xlat
pop
pushf
mov
push
pushf
test
lds
jo
lods
int
out
xchg
sub
lret
sbb
std
test
fimull
cmpl
jb
sbb
lret
imul
or
loopne
push
in
adc
mov
pop
sbb
jno
mov
lret
lahf
xor
fwait
pusha
add
ret
rcll
add
jl
adc
into
push
sti
inc
movsl
mov
pop
xlat
cmp
push
cli
rorl
stos
mov
add
xchg
test
dec
cmpsl
push
inc
call
cltd
adc
icebp
cmp
xchg
fcompl
shlb
xchg
sarl
or
lock
sbb
dec
pop
xor
insb
shrb
jp
or
add
push
mov
fisttpll
insl
nop
in
jbe
dec
mov
xchg
stos
mov
adc
pop
lods
stc
mul
pop
mov
and
popl
push
mov
js
stos
incb
rol
inc
mul
push
jns
xchg
mov
jno
mov
lcall
inc
lret
ficoml
xor
movsl
mov
mov
sub
or
push
mov
and
and
inc
stos
icebp
sub
xchg
mov
addl
add
add
mov
inc
mov
pushf
dec
neg
fdivr
inc
jae
mov
call
adc
xor
fdivrs
push
mov
mov
movl
rol
into
jbe
mov
in
stc
repnz
lret
push
pop
addr16
dec
loopne
js
lret
lret
lret
cmpsb
cmp
push
pop
ret
mov
repnz
pop
mov
outsl
inc
imul
dec
xor
mov
sahf
mov
pop
ljmp
out
mov
mov
aad
xchg
mov
jnp
fwait
jle
jb
cmp
aaa
cmp
cmpb
mov
sti
fcmovbe
iret
fwait
lcall
lret
aad
cld
out
cmpsb
mov
stos
mov
inc
test
add
push
fxch
clc
aam
fnstcw
or
jbe
push
js
mov
aaa
push
inc
sub
sub
xor
repnz
mov
cmp
push
lahf
insl
lret
inc
mov
push
enter
adc
cmp
mov
push
sbb
mov
adc
in
test
xor
pusha
sub
outsb
sub
fcmove
outsl
rcrb
dec
enter
imul
sub
and
xchg
bound
fidivl
cmp
xlat
lock
ds
adc
in
push
sbb
fdivp
bound
int
sbb
outsb
mov
out
pop
xor
ret
pop
sbb
sub
mov
dec
cmpsl
adc
insl
and
nop
aam
test
leave
mov
adc
jl
cmp
sahf
fistl
daa
sub
outsl
imul
adc
mov
insl
rcll
ret
inc
lahf
fisttpll
js
loopne
jnp
adc
mov
ds
sbb
cmpsl
cmpsl
xchg
das
data16
push
int3
jb
fs
or
fwait
pop
sbb
mov
cmp
jne
xchg
xor
repz
icebp
fbstp
inc
lods
mov
dec
mov
mov
jae
inc
add
sub
loope
fwait
je
jnp
mov
mov
add
jno
test
in
xchg
test
or
inc
mov
lds
xchg
cmpsb
ss
rorb
mov
jg
repnz
shr
mov
ficompl
pop
inc
pop
add
aad
cmpsl
in
inc
dec
or
mov
enter
xlat
and
mov
mov
test
or
aam
in
cmp
dec
xchg
push
cmp
repz
cmpsl
inc
inc
outsb
sbb
gs
fmuls
insl
fwait
cmp
mov
add
push
fwait
jnp
inc
addr16
das
dec
loopne
mov
repnz
sub
mov
mov
sbb
imulb
out
xchg
dec
adc
mov
cmp
jbe
ja
jl
mov
and
xchg
arpl
into
xchg
sub
or
xlat
fnstcw
shll
or
fpatan
fimuls
jl
cmp
xor
idivb
aaa
pop
sbb
mov
push
push
push
clc
push
jg
jg
cmpsb
sub
mov
inc
push
sbb
lea
and
adcw
push
push
jl
js
les
pop
fwait
mov
mov
outsl
sbb
jp
fs
mov
jle
jae
shl
rcr
pop
push
push
lea
mov
std
lock
orl
aam
mov
lods
mov
jge
ss
push
in
xorl
push
ja
aas
jb
mov
and
or
or
adc
pop
sbb
cmovge
movsb
pop
stos
mov
adc
fdivrl
push
outsl
dec
jp
insb
cmp
push
or
inc
push
sahf
and
dec
sub
arpl
mov
add
add
mov
jnp
jle
mov
test
stos
and
and
sub
mov
test
add
cs
xor
xor
cs
rcl
sbb
cwtl
cmp
std
out
fdivrs
and
cmp
xchg
inc
and
test
adc
inc
hlt
inc
pushf
jno
mov
mov
mov
or
and
mov
cli
mov
push
cmpsl
mov
jnp
adc
insb
dec
or
ret
test
xor
dec
sub
fld
rorb
test
ljmp
xorb
xchg
jns
stos
repnz
aad
and
cmp
push
cltd
clc
pushf
pop
sahf
mov
adc
push
int3
push
pusha
or
cmp
movsl
popa
push
dec
jmp
cmp
cmp
xchg
movsb
mov
rolb
push
leave
sub
or
push
mov
ja
push
insb
pop
dec
sub
sub
lods
push
xchg
mov
mov
dec
jb
rcrl
add
shrb
sbb
adc
fs
inc
inc
idivl
inc
rorl
sub
lret
add
jb
imul
jno
movsb
push
lods
inc
xor
push
fnstsw
sbb
jb
sbb
mov
dec
frstor
sahf
pop
fsubrl
incl
or
cmp
push
in
pop
pop
and
jmp
mov
mov
push
sub
ja
add
or
push
std
jp
rorl
mov
fldt
adc
adc
push
scas
insl
xchg
mov
dec
into
cltd
xor
xchg
lahf
xor
xor
pop
cmpsb
aam
mov
mov
scas
scas
imul
mov
and
inc
mov
pushf
mov
pop
cmp
xchg
cwtl
mov
mov
test
call
aas
push
or
and
movlps
pop
test
cwtl
mov
in
xchg
mov
xchg
add
push
cmc
and
add
popa
pop
xchg
into
pop
movsb
push
xchg
shlb
jo
call
stos
lcall
jl
sbb
pop
dec
in
mov
add
lret
pop
shlb
push
int
rorl
fisubl
sub
inc
jge
adc
test
mov
ljmp
ret
mov
sbb
jae
loop
push
out
roll
push
orl
leave
lret
sbbl
push
sbb
xchg
lahf
push
jbe
or
mov
cmp
je
daa
mov
stos
jo
sub
pop
mov
divl
xchg
loop
xchg
out
fldt
xchg
adc
mov
stos
sti
orl
dec
cmpsl
fisubrl
mov
inc
pop
sub
cld
xor
pop
pop
loope
mov
mov
xchg
in
and
into
call
xor
test
push
jns
mov
and
js
sbb
cld
xor
mov
pop
xlat
sahf
push
pushf
incl
hlt
push
sub
clc
out
mov
or
and
aas
jo
ja
sbb
arpl
sarl
in
mov
loope
std
gs
nop
mov
and
adc
mov
pop
or
dec
lahf
imul
mov
repz
mov
ss
xor
rcrl
pop
repnz
bts
sub
loope
push
rcl
mov
out
push
fcompl
inc
and
dec
mov
stos
jl
cltd
lods
rolb
scas
popf
push
jne
frstor
xchg
jg
pushf
jp
push
clc
ret
dec
inc
mov
push
pop
ja
adc
scas
pop
dec
leave
fnstsw
mov
fwait
movsb
cmp
sbb
fmull
test
jns
xchg
inc
jl
jne
mov
sahf
add
inc
faddl
std
mov
push
push
or
push
jne
jp
sub
imul
jmp
bound
loop
loopne
xchg
and
push
daa
int
sub
clc
negl
imul
test
mov
add
xchg
movsl
inc
idivl
cmc
rcrb
add
add
or
ljmp
jmp
cmc
pop
mov
out
or
fwait
orb
ret
fistl
outsl
shlb
dec
dec
mov
movsb
mov
push
in
outsl
js
adc
cmp
cs
in
stos
pop
fwait
inc
in
popa
fdivs
shll
jns
jecxz
xchg
or
mov
test
es
lret
mov
dec
jne
jmp
scas
cmp
hlt
and
gs
mov
jns
sub
jae
fidivs
bound
pushf
fsubrs
pop
lahf
cmc
ds
out
shlb
xchg
sub
and
jns
fs
idivl
cmc
push
or
jmp
ds
dec
jp
iret
gs
fmul
out
jg
add
or
sub
push
mov
es
insl
adc
outsl
jecxz
pushf
ljmp
xchg
jge
and
in
jne
or
xorb
into
adc
mov
fstps
xor
incb
repz
sbbl
mov
ss
bound
in
dec
out
push
dec
add
pushf
add
cmp
inc
mov
ja
mov
jne
ds
sahf
mov
lods
jecxz
pop
jmp
std
jp
xor
imul
call
sbb
pop
jge
xor
pop
lods
push
jbe
jb
push
popa
fsubrs
repz
push
cltd
enter
push
orb
mov
lods
test
mull
and
mov
inc
xchg
sbb
sub
es
fldt
inc
test
frstor
mov
js
cmpl
mov
cmp
lret
iret
jle
adc
inc
mov
lods
cmp
scas
addr16
clc
out
fistpll
movsb
inc
aam
jmp
shrb
stos
popf
push
pop
stos
push
out
lds
repnz
hlt
xchg
cmp
sub
push
pop
clc
mov
push
inc
sbb
sbb
jo
dec
lret
outsb
push
in
dec
in
cltd
xchg
adc
mov
addr16
cmp
hlt
pop
sahf
mov
fisubl
jl
fstps
into
out
dec
or
das
roll
scas
xchg
push
mov
or
inc
loopne
iret
fsubp
push
xor
test
mov
mov
leave
sbb
jnp
pushf
js
loop
lret
mov
inc
orl
or
test
ja
ret
jg
les
loopne
mov
sub
mov
pop
pop
fstpl
pop
push
xor
clc
shlb
mov
std
mov
scas
stos
popa
in
repnz
test
cli
dec
inc
xor
push
jb
out
je
ficoms
push
cmpsb
lods
and
and
sbb
fld
out
pop
sarb
notb
inc
nop
filds
pusha
push
pusha
pop
insl
xor
pop
push
sahf
mov
cmp
adc
mov
add
sbbl
shlb
sub
call
aaa
cli
notb
imul
stos
sub
movsb
test
int3
fwait
das
pop
sti
xor
fmull
lcall
imul
or
arpl
sub
push
rolb
adc
out
xchg
sbb
imul
mov
dec
pop
insl
push
lcall
push
popf
stc
pusha
test
and
sub
das
sbbl
pop
dec
push
dec
jecxz
divw
hlt
jne
jnp
daa
imul
mov
and
add
mov
repz
div
push
mov
mov
xchg
pop
push
jp
xor
ss
push
push
fsubrs
jecxz
pop
mov
stc
pop
rorl
dec
nop
xor
into
popa
lret
mov
inc
fiadds
stos
mov
sub
popf
decl
ds
out
ret
pop
pop
dec
cmpsb
repnz
fistpl
ljmp
or
and
sub
jg
pop
dec
sarb
push
in
cmpsb
cmp
out
movsb
inc
movsl
rclb
fistpl
pop
cmpsl
jnp
fs
adc
sbb
outsl
mov
arpl
enter
adc
stc
and
mov
sahf
pusha
shrl
sti
inc
cmp
dec
les
add
xor
cltd
mov
test
pushf
fwait
inc
cwtl
lods
scas
cmp
jbe
les
pop
and
mov
cwtl
ja
test
shl
jno
push
and
int
test
nop
mov
and
mov
mov
mov
push
mov
icebp
add
inc
mov
cmp
xchg
cld
gs
pop
mov
pop
mov
and
xchg
xchg
je
int3
sub
fisttpll
jmp
pop
ja
jns
mov
jae
cmp
jle
sub
out
outsl
sbb
jmp
mov
jp
loope
dec
adcl
imul
sub
xor
push
sub
insl
lea
cmp
mov
notl
addr16
and
mov
fs
mov
lock
fdivrs
aad
or
lret
repnz
lock
jp
mov
sbb
loope
dec
cwtl
add
adcb
inc
aaa
rorb
movsb
pop
add
les
pop
push
in
mov
les
jno
push
repnz
in
stos
call
add
fwait
mov
sbb
mov
mov
xchg
xchg
inc
rcr
sub
or
ljmp
cmp
dec
xchg
xchg
pop
cmpsl
test
in
mul
add
sub
cltd
les
fwait
cs
xchg
sub
jmp
pop
sbb
in
outsb
ss
pop
adc
push
pop
sub
data16
or
aas
jecxz
push
aaa
mov
jecxz
test
lret
lahf
and
inc
testb
or
das
and
adc
jne
mov
and
lods
jae
mov
jecxz
cli
and
popa
push
test
push
mov
push
push
stc
add
cmc
mov
test
pop
pop
dec
mov
xchg
pop
testb
mov
mov
pop
ret
push
cmp
shll
or
xor
jbe
or
mov
fisttpll
dec
mov
add
inc
jno
aam
rorl
je
lods
inc
adc
jmp
lds
cmp
inc
pop
push
mov
pop
adc
xchg
mov
jb
mov
xchg
fiaddl
stos
mov
pop
loope
les
dec
clc
sahf
mov
or
repz
mov
dec
out
pusha
cmc
je
std
sub
int3
rcll
lahf
lock
and
movsl
cli
jno
xchg
sbb
jle
cmpsl
add
ret
dec
lods
or
jle
xor
ja
sbb
dec
cltd
or
cmp
ficoml
pop
cmc
lcall
ss
xchg
cli
scas
dec
and
nop
inc
mov
jo
dec
mov
dec
test
mov
xchg
andb
pop
add
repz
arpl
add
je
dec
stos
xorb
push
or
jge
jne
jg
mov
pushf
aas
mov
cli
adcb
hlt
out
push
in
pop
cltd
popf
mov
jl
popf
ss
xchg
mov
sarl
pop
jns
xchg
fnstcw
outsl
enter
imul
inc
sar
pop
js
outsl
jb
xor
jecxz
add
sub
lods
out
leave
push
xchg
push
xchg
bound
test
mov
push
adc
fiaddl
xchg
dec
push
jg
pop
cmpl
pop
adc
adcb
fs
cwtl
push
jns
fwait
or
jl
or
sub
or
outsb
gs
jb,pn
lahf
movsl
dec
sets
loop
xchg
outsl
test
stos
fildll
cmp
ss
or
cwtl
rclb
cwtl
or
lret
out
out
stos
pushf
and
jnp
push
aaa
movsb
mov
mov
dec
inc
cmc
xor
sbb
lahf
std
sahf
xor
fxch
jns
aad
mov
adc
jg
cmpl
adc
push
cmp
shlb
ljmp
arpl
rcl
push
cli
hlt
pop
out
cwtl
and
hlt
clc
nop
sub
sub
pop
lret
push
sti
mov
sahf
mov
jp
push
aas
mov
mov
mov
aaa
std
and
and
ds
call
stc
out
add
xchg
push
sbb
outsb
gs
mov
enter
ss
cmp
sub
cmp
int
dec
inc
mov
lods
daa
in
pop
call
or
xor
mov
cld
out
daa
sbb
ret
hlt
idivl
dec
js
les
inc
in
xor
xchg
cld
add
xchg
out
clc
adc
adc
loope
push
or
xchg
in
inc
mov
sarb
dec
es
ljmp
add
addl
pop
push
sbb
xor
mov
adc
mov
cmpsl
icebp
jnp
jbe
cmp
leave
fisubs
das
andb
xor
mov
cmpsb
inc
xor
sbbl
fs
or
push
enter
xor
xchg
mov
shr
dec
inc
xor
enter
movsl
inc
outsb
pop
mov
adc
xchg
in
jge
add
sub
test
push
jb
fistpll
sub
dec
xchg
cli
cmp
sahf
sarl
mov
mov
cmp
stos
lods
mov
sahf
cmp
lahf
hlt
mov
pushf
les
jae
std
fists
xor
sub
sbb
aam
mov
mov
mov
cmpsl
inc
push
push
push
mov
fs
sbb
popf
mov
jb
xlat
dec
subl
xchg
insb
daa
negb
add
mov
cmc
jecxz
xchg
cmp
subb
and
sbb
xchg
fs
adc
sbb
lret
or
sahf
sub
sbb
negl
mov
cwtl
testl
push
cli
mov
add
and
and
sbb
mov
xor
push
dec
stos
lret
mov
int3
xlat
add
setno
dec
mov
inc
lods
int3
push
mov
rorl
ret
cs
pop
adc
adc
out
pop
push
mov
jmp
int3
xchg
and
xor
scas
xor
ret
mov
sub
lods
mov
adc
fdivrp
iret
cmp
dec
test
sub
cmpsb
jmp
out
mov
sub
inc
add
loopne
cmpsb
sbb
sbb
add
in
fisubl
mov
ss
clc
daa
push
out
sub
sarl
out
inc
push
push
gs
jge
jle
pop
stos
mov
pop
push
rol
mov
push
mov
push
shll
je
int
or
inc
jmp
cmc
enter
mov
addr16
mov
mov
in
cmp
cs
scas
scas
mov
dec
les
rcll
push
cld
pop
popa
push
mov
sub
into
and
pushf
bound
xchg
mov
xchg
sahf
js
inc
fisubrl
push
or
push
int3
out
inc
or
pop
cmpsb
movsl
sbb
dec
es
dec
dec
sbb
inc
mov
icebp
dec
stos
movsb
push
sub
mov
repz
dec
loope
xchg
sti
dec
ficoml
mov
mov
mov
pop
mov
sahf
mov
imul
mov
jae
out
jae
test
lock
or
mov
stos
add
xchg
push
pop
ja
mov
stc
pop
sbb
jmp
xchg
push
dec
mov
push
lods
call
and
pop
dec
pop
lods
leave
mov
rcl
jns
jbe
insl
mov
xor
sub
xchg
jle
aas
std
imul
xchg
fcoml
call
imul
lcall
test
inc
jne
mov
xchg
fldl2t
push
leave
enter
pop
cmp
std
shll
jge
xor
push
sub
lea
jne
inc
imul
les
lods
mov
and
lea
ljmp
xchg
sahf
xor
or
or
pop
dec
xor
xchg
orb
mov
insb
mov
shrl
es
jbe
xchg
shrb
mov
mov
adc
imul
std
movsl
inc
push
cltd
pop
cmp
les
lcall
mov
or
add
daa
sub
xor
sbbb
clc
mov
dec
mull
dec
jne
mov
sub
rorb
dec
mov
cmc
adcl
pop
push
sub
mov
adc
adc
out
shll
and
mov
mov
jmp
mov
andl
in
pop
shlb
push
inc
sbb
sbb
ljmp
inc
jo
inc
shrl
jb
dec
pop
cmc
jecxz
loope
mov
clc
outsb
incb
lock
aad
repnz
mov
arpl
push
pop
addr16
in
dec
inc
cltd
add
xor
jns
xor
shlb
adc
fnstcw
xor
add
mov
arpl
and
and
xor
adc
cmp
or
jl
push
mov
xchg
add
inc
jns
arpl
mov
jno
inc
test
cmc
dec
outsb
jo
outsb
jne
shr
pop
mov
rolb
sbbl
push
mov
or
mov
dec
repnz
std
sub
and
jo
sub
sarb
add
jne
sbb
xor
sub
data16
sbb
sbb
adc
scas
cltd
mov
sub
adc
inc
push
sbb
or
stos
cmpsl
and
mov
lods
adc
icebp
push
stos
add
lds
flds
enter
je
ret
sbbl
dec
hlt
xchg
popa
mov
data16
into
cmp
outsl
jl
lods
xlat
lret
and
dec
ja
insl
pop
dec
inc
lods
sub
xor
movsb
loopne
andl
inc
cmp
mov
xchg
out
addr16
ds
int3
leave
cld
pop
rcrl
jge
fisubrs
call
popf
test
clc
pop
cltd
in
mov
cmp
jnp
jg
jl
lds
jbe
mov
inc
add
mov
sbb
out
pop
xchg
cmpsb
test
mov
cmpsb
insl
jl
jns
mov
pushl
xchg
ljmp
std
sahf
adc
lds
lahf
sbb
test
or
fisubrl
out
fcoms
add
ficomps
mov
jnp
jae
popa
dec
fldl
popf
and
xchg
or
mov
in
jp
cli
sbb
loope
xchg
push
movsb
sub
add
ja
xchg
sbb
clc
dec
fwait
aas
and
cmp
ret
movsb
outsl
mov
imul
sub
scas
adc
lods
sub
push
cmp
jae
insb
mov
lea
shlb
and
pusha
movsl
xor
les
pop
xchg
rorb
jp
cmp
pushf
out
imul
gs
lret
insb
out
aas
lahf
mov
cmpsb
jb
mov
imul
jmp
pop
mov
mov
mov
movsl
imul
pop
add
cltd
jns
push
imul
enter
out
es
jl
sub
add
in
xor
mov
sbb
jo
rcrb
jecxz
aaa
push
in
js
fldl2e
push
pop
mov
imul
pushf
fs
dec
test
push
out
mov
jmp
inc
movsb
adc
pop
int
add
adc
imul
lods
ficompl
cmp
jo
mov
test
int
fwait
xchg
in
pop
dec
jge
and
pop
push
or
jg
jl
fstpt
filds
hlt
bound
jb
jb
clc
inc
dec
cmp
cmpsl
pop
out
inc
cmp
cmp
js
pop
jmp
cmp
lds
mov
push
pop
cmp
and
jbe
mov
sub
mov
mov
loope
test
decb
dec
pop
stos
jecxz
mov
lret
push
jns
test
cs
subb
add
inc
fistps
push
xor
minps
cmp
add
add
lock
lods
mov
ret
xchg
lret
adc
dec
jne
out
adcl
ss
push
sbb
in
cli
ret
scas
gs
sti
aaa
jge
cmp
inc
clc
jge
and
popf
mov
cmpsb
das
repnz
inc
xor
lock
mov
cli
negl
sti
inc
ds
test
mov
int
loop
addr16
divps
push
js
leave
les
adc
sbb
sub
cmc
cmpsb
clc
dec
push
lods
sub
xchg
xor
dec
jle
mov
push
jns
fmulp
xor
mov
cmp
mov
addr16
jno
inc
shl
mov
in
mov
mov
mov
fsts
xchg
imul
int3
sub
aam
pop
les
rorb
xchg
mov
xchg
inc
cmc
loope
pop
in
adc
lods
mov
pop
outsb
jno
add
stos
inc
push
sub
into
gs
aad
sbb
xchg
sub
fmul
cli
xor
mov
dec
lods
pop
mov
dec
adc
aaa
lret
insl
push
cmpsl
pop
inc
in
jecxz
ja
xor
xchg
pop
rorb
call
jb
stos
pop
testb
inc
sbb
jecxz
cmp
lahf
jae
dec
stos
push
xor
add
ja
loop
jno
clc
sahf
addr16
std
and
add
mov
add
inc
inc
cmp
jns
std
scas
dec
fs
mov
int
mov
sbb
push
outsl
jbe
inc
adc
mov
push
ret
push
and
mov
jns
stc
pop
xor
je
inc
push
inc
or
divl
and
aaa
pop
xor
lds
mov
xchg
addr16
test
cmp
dec
mov
or
movsl
out
enter
inc
sub
inc
adc
adc
loopne
arpl
fildll
mov
sub
jmp
cwtl
jg
loopne
aam
sahf
test
xchg
lahf
dec
movsb
xchg
adc
lret
sub
test
fidivrl
add
adc
or
enter
inc
jge
pop
sub
lret
jp
fistps
ret
xchg
sbb
push
sbb
mov
addl
pop
or
sbb
adc
stos
mov
mulb
dec
xor
mov
add
dec
cmpsl
and
in
push
repz
stos
xchg
push
pop
jl
mov
loope
es
xor
repnz
add
sub
test
push
dec
adc
mov
cltd
sub
faddp
enter
in
int
or
or
pop
and
and
scas
imul
xor
cwtl
inc
in
xchg
and
cmp
mov
aam
ret
shrl
pop
scas
inc
mov
jl
notl
mov
lods
mov
pop
lret
xor
test
lahf
inc
loop
dec
cwtl
push
jmp
xchg
sbb
imulb
cwtl
xchg
sub
xor
xchg
rcll
inc
sbb
or
adc
add
aaa
aad
mov
adc
cs
mov
push
cltd
adc
xor
sarb
jmp
push
mov
test
push
xchg
push
jecxz
imull
lahf
in
mov
jnp
sub
pop
mov
je
add
cmp
xlat
lock
stos
lods
mov
xor
xchg
xchg
adcl
xorb
xor
divl
jg
lret
mov
mov
or
and
inc
popf
push
mov
inc
push
mov
mov
pop
into
call
xor
xchg
roll
clc
aad
popa
bound
adc
popf
push
jmp
xor
inc
dec
push
lahf
stos
fstps
popa
jg
xchg
pop
jae
pushf
adc
std
dec
cwtl
bound
mov
rorb
iret
mov
imul
daa
mov
pop
ja
mov
test
jns
int3
push
lods
call
sub
mov
lret
push
mov
mov
jge
pop
pop
cmp
outsb
push
xchg
push
jle
cmp
mov
ret
insl
xor
test
nop
test
xchg
dec
mov
negl
xlat
loope
push
inc
and
jmp
inc
ljmp
jo
mov
xchg
xor
inc
and
test
aaa
cwtl
shrb
lret
push
adc
xlat
jbe
push
cmpsl
pop
loopne
dec
loopne
and
mov
pop
push
mov
inc
stos
loope
xchg
xor
clc
dec
iret
cli
jl
xchg
in
pop
lock
das
mov
imul
fnstcw
idivl
xchg
dec
shl
jbe
test
pop
ds
sti
cmpl
xor
or
push
lret
enter
mov
push
setae
cltd
lds
data16
rol
push
cmpsl
aam
leave
stos
cld
movsb
mov
xchg
nop
xor
outsl
or
fnstenv
inc
inc
scas
sahf
xchg
xchg
and
scas
pop
xchg
xor
inc
inc
lahf
xorl
mov
lret
popa
mov
testb
and
ret
xor
daa
int3
push
xchg
xor
jnp
xchg
out
inc
mov
outsl
int3
and
mov
loop
iret
loop
push
sub
lcall
adc
fsubl
dec
mov
out
rolb
cmp
xor
pop
pop
sbb
inc
aas
andl
add
cmp
pusha
or
sarb
add
add
les
lock
call
pop
and
add
or
pop
imul
xor
jb
mov
lock
mov
adc
nop
dec
or
pop
push
fstpt
sbb
cmp
xchg
mov
popf
sbb
test
fiaddl
add
into
cmp
popa
and
mov
fiadds
icebp
mov
movsl
imul
test
mov
les
lds
jo
inc
xchg
sbb
add
in
andb
scas
notl
cld
sub
pop
movsl
jno
fs
insb
stos
fxch
ficoml
add
pusha
xchg
cmp
sub
popa
fsubl
testb
mov
pop
sbb
sarb
mov
aas
jbe
xchg
dec
leave
jmp
repnz
mov
jo
mov
adc
dec
ret
fidivs
mov
sub
aad
test
out
or
sbb
mov
cwtl
ja
clc
add
mov
aaa
jb
mov
xchg
test
pop
ror
mov
repz
mov
add
xchg
inc
mov
mov
mov
aas
inc
cmp
mov
in
test
sub
fcomi
sar
das
sbb
cmp
jbe,pt
ret
xor
ss
inc
inc
ret
cmpsl
imul
das
test
push
out
inc
lds
fimuls
jecxz
fstps
jne
movl
lahf
nop
stc
or
mov
enter
cmp
sbb
adc
xchg
pop
out
je
xor
fisttpl
lods
rorl
inc
xchg
add
insl
repnz
mov
movsb
inc
addr16
add
fistpll
loop
rorb
popf
xchg
in
xorb
mov
into
xor
dec
xlat
adc
inc
cmpsb
shrl
cli
xchg
cld
scas
lods
loop
cmp
stos
call
or
lcall
push
daa
or
loopne
scas
sub
pop
sarl
mov
ljmp
push
xchg
cmpsl
inc
dec
mov
dec
jae
mov
push
repnz
dec
add
mov
hlt
dec
icebp
es
xlat
dec
or
scas
inc
enter
lods
loop
sarb
popf
dec
sub
pop
mov
xchg
shl
push
fdivrl
cmp
popa
flds
jecxz
nop
ret
out
popa
xchg
xchg
or
jbe
xchg
daa
sbb
adc
mov
mov
ret
pop
sub
add
ja
add
cmp
jl
in
cmovo
or
cmp
data16
outsb
rcll
jg
adc
fs
aam
adc
cmp
and
push
lret
and
jne
rcl
cli
xor
roll
push
repz
pop
pop
aas
jns
scas
stc
or
mov
push
push
sti
fists
jle
out
mov
dec
ret
and
mov
jno
cwtl
mov
in
dec
into
test
or
movsb
subb
xor
iret
xor
dec
cmpsl
idivl
dec
push
jmp
mov
inc
out
mov
cmp
sbbb
sbb
fdivs
das
and
outsb
jno
dec
pop
xor
shrb
mov
cltd
js
and
dec
pop
inc
not
cmp
mov
cmp
bound
insl
cld
add
std
inc
and
outsb
fwait
pop
jno
jb
mov
sbb
call
sub
adc
leave
mov
jmp
in
mov
fdivrl
or
push
test
inc
lret
mov
add
ljmp
mov
mov
push
mov
in
cld
fisubl
fld
sub
push
xlat
sub
in
xor
ss
pop
sbb
pop
lret
insb
cmpb
scas
aam
mov
outsb
outsl
xchg
fisubs
xchg
adc
xor
imul
in
idiv
mov
xor
js
aad
mov
sub
jp
push
pop
shrb
pop
xchg
dec
push
mov
lea
cmc
aaa
popf
push
adc
xchg
xchg
lcall
movntq
jg
or
into
adc
mov
pop
leave
xchg
inc
inc
push
mov
out
scas
and
adcb
fildll
hlt
mov
lret
repz
xchg
fisttpll
pushf
movsl
pop
outsb
clc
push
out
or
stos
jne
dec
push
arpl
add
lea
push
mov
pusha
dec
xor
scas
add
fstl
mov
push
pushw
sub
pop
push
aaa
sub
pusha
jno
sbb
or
lods
xchg
inc
pusha
fldl
and
outsl
lea
loopne
add
pushf
dec
inc
xchg
rcrb
ja
mov
add
popf
mov
xchg
sbbl
jg
jle
repnz
adc
out
cwtl
or
mov
mov
and
xor
pop
orb
andb
lcall
mov
xor
sbb
popf
jecxz
inc
lcall
pop
and
add
int
sbb
test
lcall
mov
cmp
push
fldcw
sbb
mov
add
jne
movsb
inc
push
or
mov
fistpl
jae
push
clc
loope
or
add
stc
fildll
ret
je
popf
or
adc
fildll
or
jno
jmp
jecxz
sub
ljmp
inc
adc
dec
test
cmp
dec
jp
daa
cmp
pop
test
jb
push
in
dec
aas
pop
mov
sub
sub
jns
mov
fidivrl
xor
mov
neg
cmc
leave
jmp
jne
insb
movsb
incb
mov
or
je
filds
pop
andl
repnz
mov
adc
and
and
adc
xor
pop
mov
fdivrs
in
adc
mov
push
cwtl
cmp
sar
imul
out
jbe
mov
in
stc
jo
cltd
push
and
daa
sub
xlat
jecxz
or
jmp
or
cwtl
in
jb
jno
push
sbb
push
in
pop
push
push
and
aaa
cltd
outsb
sarl
jecxz
insb
dec
mov
mov
push
add
fs
test
lahf
test
jmp
movl
jecxz
inc
in
xorb
inc
ljmp
clc
in
insl
sarb
fstpt
add
lret
repnz
xor
sahf
pop
imul
mov
cmp
out
nop
fidivl
pop
into
adc
mov
dec
rcrl
aas
cld
test
xor
jo
push
sbb
pushf
mov
mov
push
in
call
lods
scas
mov
push
inc
cmp
mov
jb
push
jmp
dec
mov
and
lods
cmp
inc
push
push
nop
gs
push
pop
roll
push
outsb
cmp
movsb
pop
add
scas
icebp
xchg
arpl
outsl
push
je
in
mov
xchg
push
scas
push
pop
adc
jne
push
xchg
loopne
or
retw
fisubs
sarl
lds
in
pextrw
mov
mov
stos
jmp
pop
aam
sbbb
xor
mov
mov
out
mov
sub
sbb
or
aad
xchg
mov
cmp
in
mov
or
xlat
data16
mov
pop
leave
pop
push
mov
ret
inc
mov
mov
iret
dec
mov
mov
fs
test
in
arpl
sar
test
mov
cmp
fst
pop
xor
push
dec
mov
mov
and
std
jne
lds
mov
add
sti
jb
inc
cmpb
xor
data16
adc
mov
mov
cltd
push
push
fnsave
mov
int3
std
push
dec
xor
nop
shrb
sbb
adc
leave
int
outsb
inc
mov
data16
pop
mov
push
loop
jg
add
into
cmpsl
test
stos
addr16
repnz
push
out
out
mov
sarb
push
lahf
shll
push
jno
hlt
out
dec
sbb
xchg
dec
mov
cltd
sub
loope
rolb
lds
ret
popa
decb
inc
jnp
data16
data16
or
shl
xchg
inc
popa
in
popf
inc
mov
stos
add
das
push
pop
xchg
fdivl
pop
inc
cmpsb
mov
mov
add
in
jg
dec
jns
mov
mov
jns
in
sbb
iret
test
cmp
xchg
rcrb
in
lds
xchg
sub
pop
mov
int3
dec
insb
push
mov
out
aaa
inc
and
dec
inc
iret
cmp
or
js
in
push
fldt
cmp
flds
mov
in
test
aad
jno
dec
add
push
push
push
sbb
sti
or
xor
xchg
inc
in
sub
add
xchg
fists
in
mov
add
pop
xchg
add
inc
pop
and
mov
test
in
call
in
sbb
jl
xchg
cmc
in
dec
xor
lock
ret
in
lahf
push
dec
pop
xchg
push
lcall
iret
cmp
ss
or
or
aas
xchg
inc
sbb
add
mov
xchg
pop
jge
ret
or
test
sub
mov
inc
outsb
jne
movsl
rclb
add
fnstcw
pop
jmp
sub
addr16
add
neg
add
dec
inc
in
leave
push
or
xchg
loopne
xchg
out
push
mov
aaa
out
push
adc
or
rorl
xor
insl
ja
pop
inc
xchg
cs
popf
mov
and
or
inc
xor
add
loop
cmp
sub
inc
mov
enter
fidivrl
or
jecxz
scas
movsl
push
test
shl
jno
out
in
cltd
test
mov
insl
cmp
repz
dec
aaa
jae
ljmp
ss
cmp
in
xor
pop
rorb
push
lret
inc
ficompl
jl
int
sbb
jp
jecxz
ja
inc
pop
mov
jmp
cmp
or
sqrtps
ret
sbb
out
jns
sahf
fisttpll
shr
stos
in
insb
sbbl
cmp
aam
loope
aas
std
sub
cltd
inc
insl
test
pop
sub
inc
mov
rorl
sub
pop
shlb
xor
int3
sub
pop
lock
fstp
repz
ret
pop
xor
mov
out
cltd
xchg
xchg
cwtl
or
push
data16
fisttpll
inc
in
mov
xchg
jae
mov
mov
cli
enter
sub
mov
cmp
out
imul
push
adc
popf
jl
into
mov
jp
cld
ljmp
pop
xchg
inc
outsl
mov
ret
add
cwtl
std
movsl
aad
and
insl
pop
or
sbb
mov
adc
imul
pop
pop
sbb
cwtl
loop
mov
pop
xchg
out
dec
mov
shrb
cmp
pop
push
inc
jo
cmp
xor
pushf
call
pop
hlt
xchg
sbb
lea
xor
push
push
mov
out
push
ret
inc
insb
shrl
fstl
cmpsl
arpl
out
pop
icebp
into
lret
lahf
fisttpll
xchg
sbb
test
or
mov
aaa
into
jb
cmp
leave
pop
rclb
xchg
fstpt
and
xlat
cmpsl
xchg
out
fisttps
pusha
jg
ret
cmpsb
dec
push
shlb
jns
dec
add
ljmp
iret
pop
cmp
cltd
push
lods
pop
stos
mov
rcrb
insb
std
add
sub
sbb
push
mov
xor
ja
dec
adc
xchg
adc
or
lret
adc
cmpsl
sbb
shlb
rclb
ss
jae
ficomps
xchg
lea
mov
fwait
pop
pop
push
adc
pop
sahf
idivl
fbstp
lret
ret
aas
insb
into
stos
xor
insb
pop
mov
dec
ret
mov
mov
mov
popl
test
push
and
insl
mov
cmp
adc
push
shll
and
cmp
pop
pop
jg
pusha
rclb
subb
sub
push
pop
test
add
stos
lret
cwtl
ja
loopne
dec
fnstenv
fwait
aas
or
imul
jp
lods
adc
ja
dec
pop
out
sahf
mov
jnp
inc
mov
jns
dec
shr
cwtl
jg
ret
scas
add
dec
mov
push
or
lret
fwait
es
fcmovb
jbe
test
dec
leave
fimuls
and
add
xchg
xchg
ret
test
lcall
aaa
shlb
cmc
shlb
addr16
rorl
les
cmpsl
adc
pop
fldenv
mov
jne
test
repz
repnz
rcll
test
add
dec
mov
sbb
inc
outsl
loope
in
push
push
lcall
add
xor
and
loopne
rorb
xor
dec
add
lock
adc
sbb
clc
outsb
and
xchg
fstp
xchg
idivl
mov
andl
fstps
fwait
xor
push
mov
nop
sbb
push
xor
cmp
xor
add
push
test
xorb
adc
int3
inc
outsb
fisttpl
mov
or
sub
lcall
xor
sahf
xchg
xchg
lret
subl
rcll
sahf
dec
pop
test
jo
cmp
cltd
sub
clc
js
mov
leave
ret
shrl
fisubs
test
sbbl
cmp
jb
lahf
jns
es
test
sbb
divl
mov
ret
mov
scas
rcrb
xor
add
mov
bnd
mov
pusha
divb
pavgw
outsl
repnz
repnz
mov
ret
push
test
jp
add
xor
les
fsubl
imulb
test
push
push
and
and
mov
pop
xor
jb
arpl
pop
jmp
dec
andb
fmulp
lds
pop
sbb
xchg
dec
imul
mov
into
nop
push
cli
idivb
mov
fyl2x
adc
pop
xchg
adc
push
add
inc
gs
nop
xchg
jnp
sti
pop
outsl
fldt
test
icebp
sbb
adc
mov
push
push
cmpsb
push
add
push
stos
orb
test
stos
push
clc
scas
sbb
enter
insb
pop
adc
test
insb
movsl
mov
dec
and
dec
adc
daa
jns
movsb
lcall
mov
aas
inc
pop
dec
xor
insl
cmc
mov
insl
clc
inc
xor
xchg
mov
int3
xchg
imul
repnz
inc
jle
arpl
cmpsb
std
sbb
lret
push
test
daa
ffree
xchg
sbbl
push
icebp
push
xor
xchg
in
or
or
leave
sbb
sti
xor
mov
pop
jmp
enter
cs
mov
and
test
mov
fdivrl
mov
jns
push
jle
mov
and
iret
jle
enter
push
pop
negl
into
movsl
out
addr16
sub
pop
inc
mov
rorl
jno
lods
cwtl
fucomp
xlat
rcr
aad
adc
popf
dec
mov
arpl
push
jne
lods
in
addr16
xchg
mov
bound
aam
push
dec
jns
cmp
push
push
hlt
and
scas
stos
shl
rorb
dec
aas
mov
fbstp
cld
mov
cmp
adc
mov
test
fwait
int
stc
adc
repnz
fldenv
divl
mov
mov
jns
mov
ret
addb
and
jle
mov
fldl
push
daa
addps
or
mov
jge
lcall
fstps
push
inc
mov
les
dec
out
enter
and
insb
gs
rcll
mov
hlt
push
add
bound
popf
outsl
or
imul
punpcklbw
or
ret
mov
mov
imul
divl
jb
aad
in
xchg
jbe
xor
aas
outsl
jbe
mov
shl
sub
fsubrs
and
push
mov
leave
sub
add
mov
pop
or
scas
dec
lcall
push
xlat
hlt
repz
mov
push
flds
xor
sbb
iret
inc
movsl
inc
or
lahf
arpl
inc
jnp
cmp
insb
or
insb
out
nop
cmc
sub
inc
add
cs
add
insl
jle
add
dec
fdivl
out
or
cmp
js
pop
fmul
pop
daa
imul
ljmp
in
mov
int3
std
jecxz
and
dec
rcr
dec
addr16
aad
jp
jno
and
cli
dec
jmp
push
repz
sub
sub
stos
int3
nop
bound
add
sbb
sub
sar
jb
xor
mov
xchg
test
xor
mov
icebp
clc
jb
lea
sub
loop
mov
mov
inc
xchg
mov
inc
add
cmp
mov
cwtl
jb
jge
push
push
mov
test
lods
jns
outsl
std
add
push
xlat
pop
lret
scas
das
icebp
clc
push
mov
clc
inc
xchg
push
lock
jecxz
xchg
xchg
shr
sub
xchg
and
mov
jbe
test
pusha
pop
popa
jae
jns
sub
pop
push
inc
ja
shrl
dec
or
jg
and
jb
or
adc
aaa
fisubl
sti
jg
clc
pushaw
cld
fwait
aas
sahf
xor
ss
aam
dec
lret
push
mov
out
jmp
add
lret
cmp
sub
or
nop
insb
adc
cs
mov
outsb
lret
lret
sub
cmp
inc
or
mov
mov
adc
subb
mov
je
enter
ljmp
sub
imul
dec
jbe
jecxz
pop
out
cmp
je
stos
sbb
in
xor
jnp
cmp
mov
push
cmpsl
rorl
in
xchg
pop
or
jbe
and
xor
jmp
hlt
cmp
push
pop
xor
les
enter
lret
dec
pop
call
in
sub
sub
xchg
mov
sub
adc
xchg
out
mov
cmpl
sub
inc
or
xor
dec
mov
cltd
lock
outsb
cmp
mov
cmp
lea
fcompl
ficoms
dec
popa
data16
out
je
and
divb
push
pushf
addl
or
cmp
cwtl
add
mov
addr16
mov
pop
fadds
mulb
xchg
pop
rcr
add
sub
push
int3
lds
and
gs
pop
jae
xchg
cmc
rclb
and
mov
shrl
sti
cli
aam
sub
add
push
jno
test
push
jecxz
mov
ror
and
mov
fistps
outsl
bound
cld
and
xor
sahf
loop
cmc
decb
cmpsb
and
in
mov
or
xor
sbb
jg
mov
pop
inc
pop
rclb
xchg
cmp
daa
lock
lods
stos
xchg
icebp
fs
jbe
dec
dec
inc
jno
inc
std
add
mov
sahf
in
gs
sub
mov
mov
xchg
jge
mov
push
arpl
mov
int3
xchg
xchg
in
push
out
cmpsb
ljmp
xchg
jnp
andl
adc
aaa
sbb
mov
dec
or
add
out
ret
jae
mov
cmp
mov
xchg
xor
cmc
movl
dec
and
jb
fdivl
mov
xor
dec
fwait
aad
nop
call
stos
jns
mov
in
mov
mov
pop
cltd
jge
leave
dec
cli
add
cmp
enter
call
out
mov
pushf
jmp
inc
es
pop
lock
jns
xchg
sub
imul
aas
sub
loopne
sbb
ljmp
lret
xor
test
std
xor
push
and
sub
xlat
xor
xchg
dec
lcall
out
out
add
and
out
rclb
xchg
sub
sub
sub
sub
imulb
inc
sbb
pop
push
int3
sbb
jp
mov
shl
jg
pop
and
nop
jae
mov
cmpsl
je
dec
rcl
daa
inc
or
inc
dec
xchg
repz
add
dec
sti
cwtl
cwtl
fnsave
jnp
sahf
pop
int3
xchg
sti
mov
pop
sbb
dec
shlb
or
js
push
xor
lods
loopne
adc
pop
add
out
sbb
scas
inc
addl
subb
push
repz
jb
fucom
testb
orl
jge
jnp
cli
js
xor
mov
into
mov
in
sti
jg
icebp
sbb
mov
mov
fsubs
movsl
adcb
sub
adc
pop
or
jle
leave
lock
jo
fisubrs
iret
sbb
mull
shl
testb
nop
ds
xor
xor
adc
inc
fdivrs
pop
adc
mov
out
in
outsl
stos
mov
shrl
inc
sarb
xor
inc
or
or
loop
lods
pop
and
fstpt
cs
ja
push
and
inc
adc
insb
shrb
adc
movsb
out
lea
jb
in
jecxz
es
les
jle
out
neg
out
push
jns
jno
rcll
add
add
mov
test
dec
loope
jmp
sbb
xchg
inc
int
ss
nop
lods
or
mov
stos
cmpsb
test
shlb
test
or
les
dec
mov
mov
xchg
xlat
inc
test
insb
int3
fbstp
sub
ss
mov
data16
ret
rorl
stos
push
adc
add
divb
mov
jecxz
mov
and
in
mov
mov
push
out
push
jle
imul
mov
cld
or
fwait
pushf
lods
xor
pop
aam
mov
mov
les
rcr
addl
sbb
jbe
add
mov
test
inc
mov
jb
push
vmovups
or
fmuls
or
mov
out
stos
xchg
mov
xchg
mov
or
mov
and
cmp
int
jbe
movsb
cli
mov
mov
arpl
mov
sub
fwait
sbb
aam
mov
jb
xlat
shrl
divl
push
jnp
xor
repnz
adc
nop
je
loope
insb
addr16
enter
mov
mov
test
dec
inc
out
jge
push
mov
mov
xchg
dec
aaa
and
add
mov
pop
leave
jo
in
repnz
lods
mov
or
mov
loop
mov
push
mov
pop
rcl
adc
dec
adc
pop
dec
mov
scas
pop
cmpsl
stc
lret
popf
les
cmpsl
xchg
add
or
push
cmp
jnp
pop
xor
or
cmp
and
adc
pop
scas
push
mov
jns
add
in
inc
mov
and
pop
ljmp
dec
mov
adc
subl
jg
adc
mov
sbb
or
loope
les
pusha
stos
xchg
mov
sbbl
loop
fwait
cmp
xchg
mov
bound
fnstcw
shrb
popa
jge
xor
ljmp
jg
xchg
push
fdivrp
push
push
cltd
mov
sub
loopne
mov
adc
add
mov
and
mov
iret
lret
fnstenv
push
or
adc
xor
out
adc
dec
cwtl
add
jae
not
in
mov
in
xchg
inc
sbb
iret
sub
pop
lea
subl
mov
clc
inc
xchg
movsb
jb
les
enter
aaa
sub
in
stos
mov
enter
out
leave
adc
cmp
shlb
mov
sub
mov
aas
sub
xchg
lahf
jecxz
pushf
call
out
cmp
adc
frstor
lds
xchg
inc
inc
aam
add
sbbb
or
adc
loope
xorl
jnp
js
inc
insb
into
dec
cmp
dec
setne
rorb
mov
mov
and
adc
or
cmp
mov
je
dec
test
sbb
lret
dec
and
fs
sti
int3
pop
stos
shl
stc
push
mov
jmp
mov
lcall
add
mov
cmp
add
lods
popl
fisttpll
nop
stos
mov
pop
jg
jp
inc
and
and
filds
sub
cmp
fdiv
insl
fisubrs
stos
ljmp
sub
int
xchg
cmp
int3
leave
outsb
dec
rcrb
jl
imul
sub
jno
f2xm1
mov
iret
sub
jl
or
dec
adcb
lock
push
fdivl
add
add
fisttpl
add
jae
ja
popf
sub
mov
scas
lock
and
push
idiv
xlat
push
and
fidivrl
loope
mov
or
jge
and
pop
cltd
mov
outsl
mov
repnz
dec
xor
mov
inc
movsl
pop
mov
ds
gs
popa
out
mov
sub
daa
mov
mov
int3
jecxz
into
dec
aad
inc
lret
pop
repnz
cltd
dec
adcl
sqrtps
dec
nop
pop
fidivrs
dec
ds
stos
mov
ljmp
jno
sbb
jg
sub
mov
aam
hlt
fsubl
out
ret
filds
push
xchg
movsl
sahf
mov
ljmp
mov
add
enter
dec
ret
inc
mov
add
gs
cltd
and
leave
adc
adc
hlt
aam
jp
adc
cli
jg
mov
push
loop
popa
call
nop
add
xor
sbb
lock
mov
and
xchg
sub
aaa
fldenv
or
icebp
xchg
push
cmpsl
mov
in
or
out
push
ficompl
push
pop
cmpb
jbe
enter
pop
pop
add
mov
push
push
out
shll
mov
inc
mov
negb
jp
popf
enter
jmp
jnp
dec
jge
add
push
inc
ja
call
dec
push
lret
push
cld
or
and
in
jne
mov
cmp
push
pop
jae
mov
mov
lock
outsb
add
loop
divb
rcl
jecxz
mov
jge
scas
das
movsl
sub
dec
or
loopne
pushf
test
mov
add
push
sbb
jbe
push
into
mov
inc
mov
sbb
into
ja
xor
addr16
aaa
rclb
incl
cwtl
jg
mov
fstpl
aaa
in
iret
lret
imul
or
sub
pop
fcomps
popf
jne
inc
in
jmp
xchg
loop
mov
inc
push
sti
out
and
cmp
arpl
dec
mov
nop
ret
in
sbb
xchg
adc
jne
shll
cld
add
fcomps
jbe
dec
repnz
xor
fwait
insl
xor
sub
xchg
lods
mov
and
jmp
push
in
roll
insb
sub
and
scas
lret
jmp
lock
rep
clc
inc
sub
pop
stos
gs
jp
mov
adc
pop
add
lock
rcl
pop
lret
repz
sbb
adc
imul
and
sarb
inc
andps
in
out
xchg
jle
cmp
cmpsl
stos
test
pop
shll
xchg
and
mov
push
push
cmpsl
jne
outsb
and
int3
xorb
in
enter
cltd
insb
sarl
icebp
incb
mov
mov
scas
and
out
aaa
xchg
sti
sbb
add
pop
xor
fdivl
push
jbe
cmp
mov
test
les
lods
in
add
dec
xchg
dec
ficompl
push
jp
sub
mov
add
je
push
mov
inc
inc
pop
sbb
lea
xor
mov
jmp
sahf
fmul
adc
stos
mov
pop
xchg
add
gs
dec
lcall
in
movsb
fstl
xchg
lret
jnp
stos
push
jl
mov
sub
push
xlat
sahf
mov
fidivrl
imul
jle
aaa
sbb
and
bound
or
mov
jns
or
fcompl
xchg
insb
xor
ret
xchg
lods
lret
push
fdivr
add
cli
aaa
cmpsl
jecxz
xor
dec
add
and
mov
lods
arpl
push
leave
mov
pop
xchg
add
popf
arpl
mov
add
jne
dec
incb
imul
sahf
xchg
lcall
sbb
in
stc
xor
or
lret
pop
cmp
and
push
or
insl
aam
icebp
int
faddp
sub
cmp
ficompl
rcll
pop
fstl
loop
mov
movsl
pop
add
push
adc
fldenv
mov
subl
sub
std
or
pop
inc
cs
inc
mov
daa
jns
or
cmp
je
sahf
inc
inc
daa
push
std
ds
inc
and
push
cli
testl
jmp
xchg
out
xchg
or
cld
dec
mov
cmc
xchg
add
setge
mov
pusha
xor
inc
push
jg
arpl
and
insb
cmp
sahf
in
xor
inc
jne
push
mov
aas
xlat
fwait
dec
xchg
or
int
mov
bound
sub
pop
int
fwait
sub
std
xor
push
fs
andl
xor
bound
add
stos
pop
cmc
aam
mov
pop
sti
in
push
adc
xchg
rcl
ret
cmc
mov
or
inc
mov
inc
add
jns
adc
call
xchg
jle
xchg
xchg
das
std
lock
jno
roll
push
add
and
xchg
adc
sbb
xor
mov
cwtl
fisubrl
jecxz
cmp
mov
jbe
mov
mov
and
repz
dec
fisubrs
add
call
mov
xchg
xchg
xlat
aaa
jno
test
or
and
jo
fdivrl
or
inc
gs
add
movsl
jmp
sub
dec
lock
cmp
cmp
cmp
mov
push
lret
aad
cli
mov
jno
iret
adc
dec
test
aam
sbb
adc
les
dec
bound
inc
cmp
out
scas
imul
nop
cmp
jb
jle
jb
sahf
mov
dec
jbe
loope
lahf
xchg
test
test
xchg
lods
xor
or
adc
xchg
fsub
xchg
sbb
ja
mov
daa
pop
and
xchg
mov
int3
idivl
jl
inc
lods
and
popa
mov
popf
mov
ret
add
scas
lahf
fucom
push
xchg
aam
cmp
test
daa
xchg
mov
ror
lods
jp
and
movsb
cltd
or
mov
adcl
xchg
mov
out
pusha
aas
dec
jae
rcrb
stos
and
adc
jmp
pushf
lahf
fmuls
out
std
repz
sbb
sbb
jne
cs
push
xlat
sub
xor
int3
daa
lcall
sub
pusha
imul
or
xor
negb
pop
outsb
sub
adc
dec
and
sub
out
push
mov
lods
out
ja
xor
fnstenv
push
inc
sub
xchg
inc
pop
sbb
add
mov
aad
pop
pop
je
mov
ds
cli
mov
or
mov
call
push
mov
leave
sub
mov
push
test
insl
add
pusha
into
adc
pop
pop
xchg
sets
es
push
enter
outsb
push
test
fldt
inc
fcomp
imul
repz
je
inc
mov
jmp
stc
pop
pop
test
jl
push
cmp
xchg
pop
fs
cmp
subl
and
mov
ror
xchg
inc
jmp
call
pop
sbb
adc
mov
xor
idivb
dec
gs
lahf
fwait
nop
add
dec
in
aam
push
ret
scas
fldenv
hlt
rcl
push
and
mov
cmpsb
ja
lret
movsl
pop
rol
pop
sub
call
push
push
daa
cmp
lds
lret
ret
iret
push
xchg
gs
add
mov
aam
jecxz
inc
lea
sbb
cmp
nop
or
xchg
add
sbb
iret
dec
jmp
xchg
sub
xchg
int3
enter
sub
shlb
push
push
in
inc
test
pop
repnz
sub
or
mov
inc
and
pop
push
push
push
mov
cmpb
mov
scas
inc
xchg
ss
lods
inc
xchg
xchg
push
sti
inc
shl
lcall
cmc
jle
mov
movsl
sbb
inc
je
sarl
pop
xchg
mov
bound
sub
mov
dec
fwait
xchg
aas
cmpsl
loop
sub
inc
sbb
adc
push
stos
test
int
notb
lcall
mov
pop
and
out
loop
xor
xor
test
sub
or
mov
add
add
sbb
and
outsl
out
or
clc
lcall
add
mov
movsb
xor
out
mov
cmp
dec
dec
xchg
inc
push
adc
ret
dec
add
loop
sub
push
scas
stos
out
repz
loope
ret
xchg
push
and
mov
push
jbe
fnsave
mov
rorl
push
sbb
cli
leave
out
cld
test
xlat
iret
mov
xchg
lahf
push
or
push
lcall
rsm
pusha
in
stc
cmpsb
inc
jnp
rclb
pop
sbb
lock
and
cmp
aam
push
mov
icebp
inc
adc
xchg
ss
adc
repz
dec
jb
in
pop
movsb
mov
jl
fbstp
push
js
dec
mov
dec
imul
sub
das
jbe
jge
xor
ljmp
inc
sub
insl
fdivrs
mov
or
pop
hlt
js
fstl
shlb
inc
shrl
mov
jl
bound
inc
stos
ss
loopne
outsl
cmc
jp
mov
dec
je
popf
mov
dec
out
pop
cmp
aam
cmpb
sbb
dec
lahf
aad
movsl
hlt
xlat
imul
push
cld
jge
push
mov
lret
jl
mov
mov
lret
inc
mov
mov
fcompl
outsl
sarl
jecxz
push
mov
out
pop
fiaddl
out
enter
jecxz
sub
jge
test
cmp
cli
cmc
dec
mov
dec
push
pop
adc
xlat
mov
out
mov
sbb
mov
mov
imul
or
jg
stc
dec
dec
cs
push
mov
xor
loop
sbb
mov
iret
mov
pushf
lea
mov
add
push
or
pop
ljmp
mov
sub
ja
nop
rcrl
adc
mov
ret
lods
jg
xor
cmp
and
hlt
gs
add
repz
mov
push
popf
inc
roll
and
dec
xchg
icebp
fimull
inc
out
cltd
mov
push
xchg
aam
fs
inc
push
inc
mov
jo
test
mov
stos
add
cmp
cmp
outsb
repnz
and
cmp
dec
fcoml
add
test
out
dec
stos
in
mov
inc
sbb
mov
insl
fstl
xchg
repnz
sbb
jge
mov
dec
pop
sub
inc
test
stc
clc
pop
mov
fistps
pop
cmpsl
and
xor
adc
add
push
out
ror
jl
das
xchg
sarl
lcall
cmovno
pop
stc
push
adc
sbb
ljmp
int
xchg
push
jl
cmp
mov
in
push
mov
mov
jb
mov
add
cmp
bound
xor
pop
movsb
or
pop
aaa
popa
xchg
jmp
cwtl
pop
mov
inc
inc
test
testb
fs
inc
enter
inc
repnz
cmpb
mov
insl
adcb
stos
mov
jecxz
jb
jecxz
das
sbb
es
arpl
push
ljmp
data16
test
stos
repnz
sti
pop
mov
dec
out
sub
iret
loope
add
imul
fildl
pop
imulb
inc
add
cli
xor
movsl
fdivrp
ret
in
popf
sub
in
int
xchg
movsl
insl
sbb
int3
ret
and
js
inc
nop
push
cld
dec
jmp
jl
data16
loope
push
jmp
or
loope
push
and
jecxz
loope
xor
cmp
jp
rcrl
add
pushf
mov
pop
pop
adc
mov
inc
scas
aas
dec
or
out
lods
cmc
mov
cmp
inc
lcall
es
add
or
aas
cmp
sub
xor
mov
mov
cmpl
add
xor
adc
mov
pop
cltd
es
mov
fnstsw
cmpsb
loop
mov
push
jne
out
push
push
divb
mov
and
cld
jns
mov
mov
cmp
add
lock
je
push
xchg
jb
lea
outsl
jmp
push
jns
sarl
mov
mov
lahf
jbe
inc
sti
xor
imul
add
jno
mov
mov
aad
jbe
pop
jo
xchg
scas
push
imul
mov
or
popa
xchg
xchg
lods
push
dec
xor
xchg
stc
daa
imul
frndint
loop
mov
das
sbb
mov
and
or
int3
fdivr
xchg
pop
jecxz
lds
loop
cmp
sbb
inc
push
mov
push
dec
push
or
sub
pop
adc
in
hlt
stos
pop
rolb
inc
mov
sti
mov
lea
push
mov
das
dec
pop
and
data16
cmp
xor
jg
jmp
xchg
int3
shll
ds
push
sti
daa
push
dec
cmp
imul
mov
sbb
jb
adc
in
sbb
imul
lods
mov
mov
inc
movsb
xchg
mov
mov
int3
or
addr16
mov
rcr
insl
lock
xlat
adcl
fildll
jle
xor
sub
test
add
sbbl
sbb
or
jb
pop
push
mov
xor
cmc
mov
imul
jne
mov
lea
cs
pop
sub
rdtsc
gs
pusha
adc
xor
cli
sahf
fimuls
sub
mov
dec
notb
test
sbb
sub
test
add
and
sbb
call
mov
cmp
imul
and
jle
daa
loope
das
sbb
leave
test
pop
jne
push
icebp
repz
loop
push
mov
mov
sub
adc
push
adc
jae
arpl
test
push
cmpsb
outsl
push
iret
jmp
les
push
add
lret
xorb
sbb
adc
das
jge
imul
sbb
jmp
out
jb
mov
xor
in
repz
cmp
cmpb
or
cltd
in
fs
mov
mov
jmp
mov
pop
push
jp
ds
adc
push
stos
dec
lock
adc
jno
mov
cmp
cltd
cld
loopne
in
fdivs
repnz
repz
int
push
cltd
idiv
add
pop
outsl
mov
mov
add
sub
in
push
mul
xor
test
push
test
xor
dec
mov
push
outsl
xor
rol
push
out
or
or
cli
lret
lcall
xchg
shlb
mov
jg
jbe
pop
xchg
loop
inc
adc
and
stc
mov
jl
or
movsb
adcb
sbb
aad
shrb
das
jp
addr16
sbb
negb
pop
dec
fs
mov
popf
clc
jecxz
mov
decl
push
push
cmpsb
push
mov
dec
and
out
push
mov
imul
mov
ja
pusha
popa
inc
cmp
sbb
aaa
or
jge
xor
outsl
shlb
addr16
in
mov
int3
imul
cmp
mov
aas
pushf
mull
dec
subps
sub
or
imul
jp
sbb
cld
dec
push
iret
ja
adc
lret
xor
jo
pop
pop
jnp
cmp
mov
xchg
add
aam
in
sbb
cltd
nop
shr
fmull
mov
cmp
dec
push
pop
loopne
fldl
xor
loope
ficoms
adc
test
and
add
in
dec
iret
xchg
mov
fwait
dec
idivl
push
mov
aam
cmpsl
mov
mov
sbb
mov
or
mov
push
in
push
adc
add
stos
or
pop
add
rol
rcll
xchg
add
push
dec
bound
push
dec
fwait
in
aas
mov
mov
shrl
push
jo
out
inc
inc
push
sar
jns
lock
data16
repz
cmp
cld
and
aas
sbb
int3
int3
cmp
xor
adc
push
pop
stc
std
pop
lea
xchg
ret
push
aam
test
scas
or
adc
adc
pop
cmp
or
push
mov
js
xorb
and
dec
jb
ret
pop
push
sbb
aaa
mov
arpl
fiadds
in
pop
repnz
test
pop
mov
pop
js
push
outsb
push
dec
xor
push
nop
mov
or
mov
mov
pop
out
and
push
data16
fdivs
cld
ret
scas
mov
test
cli
add
icebp
ror
xor
inc
stc
xorb
inc
cmp
scas
sub
daa
fstpl
lods
inc
jns
pop
xchg
fmulp
and
sbb
ds
pop
xor
jecxz
call
ds
sbb
cwtl
ret
mov
mov
mov
push
les
popa
xor
or
aam
xor
push
jns
push
or
push
xchg
xchg
subl
adc
xchg
testl
and
xorl
xorb
divl
lea
jp
push
pop
mov
mov
inc
out
aad
mov
fcomip
int3
dec
int
lds
sbbl
lret
shlb
sbb
jo
aad
repnz
dec
sbb
inc
out
mov
ss
ss
insb
ds
cmp
pop
negb
subl
imul
fcompl
or
insl
xchg
pop
push
test
push
loop
cltd
jmp
pop
iret
aam
sub
cmpsb
out
cmp
test
int3
cmpsb
inc
pop
sbb
stos
xor
cmp
pop
lret
sub
enter
lds
mov
cmpsl
and
icebp
loop
lcall
enter
mov
lods
pop
inc
inc
pop
xchg
mov
into
dec
adc
stos
lds
jg
pop
aas
aaa
pop
ret
sub
je
scas
into
lds
pop
test
adc
cwtl
jmp
dec
sbb
je
jge
leave
int3
loop
cs
bound
aad
ret
push
stc
cmpsl
push
or
push
hlt
xchg
cmp
je
in
fdivl
js
hlt
adc
fs
int
mov
or
push
sti
in
cmc
les
mov
aad
jb
push
ljmp
jmp
jae
cmc
leave
sub
or
mov
sub
xor
je
shr
out
push
add
jecxz
push
add
mov
out
sub
lds
xor
and
lods
pop
inc
aad
cltd
and
in
pop
push
ljmp
faddl
lds
mov
pop
dec
jmp
daa
xchg
xor
test
or
or
ret
mov
dec
test
xlat
std
xchg
rcr
das
mov
enter
inc
ficoms
push
cmpsb
xor
jge
jno
aad
xchg
adc
push
out
js
imul
cmp
and
sbb
xor
je
imul
adcb
testb
dec
lret
rolb
cmc
emms
jae
pop
dec
and
pop
pop
aad
test
mov
or
jmp
or
arpl
movsb
in
push
mov
out
arpl
divb
ret
add
sub
xchg
rol
and
jl
aaa
out
jge
lea
sbbb
dec
movsl
sarl
or
ret
jge
and
inc
stos
mov
arpl
enter
fwait
pop
cmpsb
outsb
inc
xlat
jo
test
adc
ss
stos
mov
push
ds
jle
cmovb
inc
cmpsl
or
lods
xchg
cmp
mov
clc
mov
movsl
fs
jmp
jle
or
hlt
mov
xor
fbstp
xchg
lcall
adc
int3
dec
pop
push
mov
aaa
jnp
mov
pop
je
dec
xor
inc
jb
xor
pop
sub
lret
js
push
or
pusha
or
add
mov
mov
xor
mov
pop
jbe
call
stos
mov
or
fists
out
insb
loopne
push
mov
cmp
in
rolb
mov
xchg
test
mov
mov
cmp
fcoml
pop
std
mov
sti
cmp
dec
adc
data16
push
stc
and
aas
jmp
shl
jne
lret
lea
lea
mov
das
push
xor
imul
jle
adc
popf
out
mov
inc
aam
mov
movsl
sub
push
aaa
mov
hlt
add
xor
enter
in
pop
mov
lea
inc
imul
xor
repnz
ret
mov
mov
add
cmp
cmc
xchg
sub
jp
xlat
mov
ss
out
mov
bound
les
arpl
xchg
push
and
fnstcw
jne
mov
add
mov
sub
xchg
mov
or
xor
or
pop
cs
fwait
mul
xchg
out
das
fs
push
ljmp
shll
cmpl
jle
js
add
and
sub
fcompl
push
mov
shrl
mov
adcl
pop
movsl
and
leave
cli
or
mov
fisttps
cli
out
add
in
ja
gs
jne
mov
jo
mov
xor
clc
sbb
gs
test
jmp
fisubrs
shlb
pop
push
adc
insb
push
lea
adc
add
add
adc
je
inc
fadd
jo
pop
lock
sub
inc
xchg
inc
shl
outsl
mov
adc
dec
inc
cmc
pushf
sub
in
mov
out
imul
aam
push
sbb
repz
pop
mov
insb
loop
xor
xor
mov
lret
cmp
cmp
lret
addr16
out
add
inc
inc
fstl
ss
xor
sub
fistpll
jne
sahf
decl
daa
test
pop
xlat
push
in
add
clc
mov
std
pusha
pushw
jb
leave
dec
mov
lods
adc
sub
mov
mov
pushf
mov
mov
mov
dec
cmp
push
sub
xor
dec
lock
mov
dec
dec
popa
cli
daa
push
rcr
cmpsb
jg
pusha
lea
jnp
mov
mov
ljmp
cli
pop
gs
sarl
cli
rcll
xchg
sbb
inc
pop
pop
roll
and
or
add
mov
lods
mov
sub
cwtl
mov
push
jnp
xor
cmp
push
cmp
jmp
je
xor
inc
je
out
mov
xor
jg
add
inc
xchg
sbb
leave
mov
mov
mov
jg
cld
loop
movsl
out
inc
out
shll
jp
jne
or
and
and
shl
shr
je
pushf
in
enter
movl
push
and
pop
test
lods
push
cmp
loope
cltd
lea
pop
push
movsl
jp
cltd
in
gs
fistl
ljmp
push
popf
cltd
mov
cmc
mov
xchg
ret
fcom
push
pusha
sar
cli
adc
dec
je
sbb
sbb
je
xchg
fisubrl
push
sbb
lods
out
adc
mov
int3
or
jo
pop
adc
dec
jb
inc
ja
sbb
faddl
push
aas
pop
es
mov
jge
les
popf
inc
in
in
xchg
aaa
fistl
mov
dec
addr16
lret
push
std
cmp
jl
pminub
std
inc
sub
push
jae
xor
mov
call
sbb
push
mov
push
icebp
orl
pop
mov
int
mov
push
mov
fwait
idivl
xchg
mov
adc
sub
push
jecxz
mov
xchg
pusha
dec
pop
scas
mov
lods
jne
loopne
loope
ficoms
mov
jl
mov
and
sbb
lea
cmp
pushf
outsb
call
pushf
sbb
xchg
adc
lock
mov
iret
and
psubsw
sti
mov
sub
nop
jg
fldl
cmp
sbbb
add
dec
xchg
inc
adc
adc
add
imul
pop
push
sbb
pop
cltd
mov
test
fs
dec
testb
js
push
sbb
rolb
or
adc
cmp
fucomp
cmp
or
mov
scas
aaa
cmpsb
cmpsl
ss
mov
xchg
xchg
aas
les
mov
xchg
pop
jmp
aad
mov
dec
add
test
sub
into
mov
scas
inc
mov
cmpsb
xchg
loope
mov
sub
sbb
sarl
sbb
int
hlt
add
xchg
enter
cmpsl
jnp
sti
push
test
mov
pushf
aam
and
push
adc
je
fcomip
ret
aas
sbb
test
out
dec
in
idivb
sub
mov
inc
mov
pop
mov
mov
into
xor
std
mov
lock
imul
mov
jno
fwait
xchg
repz
dec
std
inc
int
cmp
sub
addr16
adc
mov
ret
sub
push
call
push
cmpl
shll
mov
test
jae
daa
imul
sti
xor
or
sbb
mov
cmp
mov
sub
inc
mov
mov
or
sub
or
js
cs
movsl
movsl
push
xor
sub
inc
push
mov
mov
nop
fsubl
fmull
imul
int
out
jle
rorb
out
test
cmp
popf
sub
scas
jo
sti
aam
int3
imul
insb
push
fdivrl
arpl
pop
sbb
repnz
sbb
xor
dec
ljmp
jo
cmp
sti
into
mov
jne
or
cwtl
jo
cmp
and
push
into
insb
out
push
call
mov
test
inc
jmp
mov
loopne
push
push
jne
push
mov
mov
sub
lods
lcall
mov
xchg
fs
stc
iret
jp
mov
xchg
xor
in
push
loopne
out
std
jb
rolb
outsl
inc
pop
add
cmp
aam
cmp
mov
inc
fisubl
out
in
dec
cmpsb
mov
mov
mov
fidivl
mov
outsl
test
stc
cli
addr16
cmpsl
add
int
adc
rcrl
jae
pop
or
push
sbb
add
int3
dec
xlat
clc
mov
add
or
pop
lea
js
lahf
dec
add
arpl
popa
or
push
fwait
mov
icebp
hlt
jo
cmp
xor
xor
fdiv
jmp
popa
mov
cltd
jbe
push
xchg
lea
jmp
loopne
lea
sbb
add
testb
cmpb
push
divl
add
push
jmp
aam
lret
cmpsb
or
dec
out
icebp
les
outsw
clc
and
out
addr16
xor
out
mov
lret
rorb
lods
sahf
adc
jo
test
sbb
rclb
jae
arpl
lret
jl
adc
test
or
add
cmp
faddl
add
lods
popa
pop
jmp
adc
add
xchg
pushf
fstpt
mov
test
pop
leave
jno
sbb
scas
insb
shr
hlt
std
and
cld
lret
aam
int
lds
mov
mov
inc
es
push
es
stos
lret
enter
ficoms
cmp
int
dec
and
dec
xlat
dec
cmp
cmp
pop
clc
mov
sub
popa
dec
iret
cmp
mov
setg
push
int
xchg
push
xlat
popa
hlt
jg
movsl
lret
fs
hlt
mov
and
stos
out
lret
fsubrp
aad
aad
xchg
pusha
jg
pop
push
arpl
out
icebp
jmp
jno
mov
mov
movsb
xor
cmp
jmp
fdivs
dec
adc
inc
subl
xlat
mov
lods
std
push
sti
iret
jnp
out
out
xchg
in
jg
scas
xor
jp
push
xor
movsl
add
movsb
pop
or
xorb
xchg
scas
jmp
gs
or
js
jg
popf
dec
lcall
sub
dec
cmp
jp
or
rcl
data16
fdivr
aas
or
lea
fwait
jecxz
mov
dec
push
jle
jno
inc
mov
rclb
lret
mov
and
dec
lahf
lods
adc
das
mov
enter
pop
pop
out
sbb
mov
inc
fmuls
lock
sub
in
sti
lods
scas
inc
sub
fstps
mov
inc
inc
jg
cmpb
mov
mov
adc
loop
clc
mov
or
cmpsb
je
sahf
scas
gs
clc
fbstp
addl
mov
leave
cmp
sbb
test
inc
xchg
ljmp
js
fldenv
adc
push
cmpsb
movsl
cmpsl
and
xchg
xchg
or
lcall
decb
jo
iret
sub
xchg
popa
mov
sub
repnz
repz
rol
add
flds
stos
and
notl
lods
movsl
mov
fimull
lock
clc
filds
lods
jne
cmp
enter
cmpsb
sbb
outsl
mov
sub
xchg
mov
scas
pop
mov
pop
adc
pop
inc
mov
or
cmp
rorl
ljmp
pop
addr16
and
bound
imul
xor
iret
xorb
inc
nop
das
in
test
fs
test
sbb
daa
in
mov
test
add
sbb
les
cmpl
int
lret
xchg
pop
fisubrl
and
jb
shll
scas
pop
mov
sbb
mov
xor
subl
jecxz
pop
jle
pop
loop
mov
sarl
push
pop
lods
mov
rcl
dec
stc
jge
pop
ja
test
sti
sahf
mov
pop
add
jmp
loopne
div
lret
jbe
mov
repz
inc
xchg
or
arpl
test
inc
pop
fists
adc
cmpl
fsts
pop
imul
mov
out
adc
xor
test
mov
dec
adc
call
lea
or
and
and
inc
mul
jge
decb
adcb
das
fistps
clc
mov
mov
ret
pushf
xorb
cli
jne
adc
in
enter
lods
scas
fbld
adc
fldt
push
std
jno
lods
cmp
loope
outsb
inc
int
fisubs
dec
xor
mov
pop
jne
dec
fdivs
xlat
repnz
push
add
outsl
fnstcw
adc
lea
scas
movsb
push
sbb
push
shlb
fcmovne
dec
dec
dec
pushf
cltd
mov
dec
xchg
pop
aad
addl
dec
jb,pt
test
mov
int3
xchg
mov
lret
out
xor
fcmove
jns
fsubs
rcl
or
push
lods
in
inc
jb
jecxz
sbb
add
xlat
stos
arpl
jne
imul
xchg
cmp
aaa
mov
or
sarl
push
outsb
enter
xor
mov
movsb
jl
cli
xor
push
xor
rol
mov
push
and
lahf
and
out
jg
mov
jns
adc
out
xchg
int
cmp
cmp
inc
cli
pop
cmp
inc
push
cmp
test
xor
hlt
add
lods
mov
aam
jae
enter
jg
push
cmp
shrl
popf
and
insl
dec
xchg
fs
xor
fucomp
cmpb
pop
adc
lcall
mov
xlat
push
fldl
lret
pop
pop
aam
mov
xchg
test
cli
aam
std
pop
sub
movsl
cltd
stos
test
mov
and
aaa
popa
mull
cmp
cwtl
lea
ljmp
js
xchg
stos
xchg
jmp
imul
mov
test
push
test
outsb
cmp
sub
stos
scas
or
sbb
and
sbb
or
xchg
sbb
std
out
fsubrs
push
mov
out
jne
outsb
push
cmpsb
test
out
in
and
sahf
xorl
jo
dec
adc
lea
mov
pop
sub
outsl
imull
imul
cmp
addr16
call
loop
jl
pop
pusha
lahf
jae
ds
insl
adc
cmp
testl
fcoms
mov
clc
mov
xlat
or
das
jno
xchg
ficoms
frstor
test
je
dec
and
or
cld
loopne
xchg
and
pushf
push
lods
lock
or
mov
inc
jb
outsb
test
adc
and
insl
in
xor
test
enter
push
add
and
and
adcl
jne
shl
fcompl
dec
dec
sbbb
or
sbb
scas
xor
mov
xchg
pop
push
out
mov
fs
xor
notl
jb
add
call
pushf
mov
lahf
cmp
inc
add
cmp
cmp
into
or
cwtl
data16
stc
xor
clc
out
mov
shll
and
mov
in
cmp
cmpsb
lret
sbb
out
pop
mov
pop
jmp
inc
mov
mov
push
ss
repz
mov
stc
cmp
pop
xchg
push
mov
mov
cmc
js
jmp
aas
jae
incb
ljmp
jl
aad
mov
pop
inc
xchg
shrb
ud1
ja
cmp
lret
mov
cmp
mov
xchg
cmp
sbb
mov
aaa
pop
in
inc
cmp
mov
loop
pop
cli
sbb
cmp
xor
inc
mov
mov
shrl
cs
mov
add
js
jb
pop
dec
adc
jb
cwtl
jae
mov
inc
imul
add
mov
rclb
sahf
ljmp
js
cmp
sbb
xchg
pusha
js
ljmp
adc
xchg
xchg
loope
pusha
xchg
lret
dec
cmc
ss
mov
push
in
fcomps
pop
inc
xchg
sub
loop
adc
jecxz
ret
mov
inc
pop
int
mov
jbe
xchg
jb
jae
push
mov
loop
inc
insb
mov
ret
mov
ss
test
adc
movsb
mov
inc
subl
push
stos
pop
rorl
mov
loopne
inc
jp
testl
adcb
iret
in
push
ljmp
adc
in
mov
data16
ret
mov
mov
nop
inc
push
pop
test
jp
les
or
loope
jle
bnd
pop
inc
pop
jae
call
push
into
shll
sbb
hlt
pushf
mov
xor
data16
jp
jl
sbb
stc
xor
loop
test
mov
xor
mov
sub
stc
popf
mov
pop
mov
add
data16
push
sbb
lahf
je
push
into
cmp
cmp
test
inc
ret
insb
hlt
jmp
sbb
dec
cli
jl
insb
inc
and
addr16
out
insb
imul
push
clc
popf
cmpsb
jne
les
jnp
mov
js
std
xchg
inc
jbe,pn
xor
cmp
xchg
scas
jmp
cmp
mov
add
insb
test
and
and
and
push
inc
pop
push
gs
loopne
xlat
fsubs
imul
mov
bsr
negl
inc
mov
ficoms
pop
jnp
xor
das
ds
push
aaa
dec
stc
jl
cmp
jmp
lahf
mov
rclb
lahf
arpl
daa
pop
jmp
ficompl
cmpsl
cwtl
and
push
xchg
push
adc
clc
sbb
aaa
xlat
sbb
ja
sahf
pop
daa
fwait
push
je
notl
cmpsl
ds
mov
cmp
daa
out
out
push
test
mov
arpl
jno
outsb
mov
xchg
pop
pop
sarb
xchg
jp
sbb
stos
lods
dec
and
push
push
ja
es
dec
push
sbb
add
cltd
sbb
push
aad
xchg
in
arpl
jecxz
out
xchg
cltd
lret
add
out
int3
add
insl
lret
repz
mov
sti
fwait
push
or
pop
repnz
ret
xchg
popa
into
lret
bound
jl
scas
out
daa
iret
mov
mov
popa
xchg
cmp
xchg
mov
in
or
cmp
pop
imul
xor
ret
mov
scas
pop
mov
rorl
imul
cmp
mov
push
xchg
push
bound
les
sbb
mov
xchg
outsb
sbb
xchg
les
jge
jns
sbb
pop
and
fistpll
mov
jge
scas
outsl
fsubl
xchg
fnstcw
pop
pop
enter
push
jb
and
push
arpl
sub
mov
or
shll
mov
dec
in
xchg
int3
push
mov
gs
pop
and
negb
and
inc
das
nop
sub
xor
sbb
mov
dec
mov
push
jb
subb
push
xchg
movsl
icebp
dec
mov
cli
dec
vucomisd
icebp
in
cs
mov
jo
pop
arpl
ds
and
in
iret
and
and
dec
xchg
out
ror
push
cmp
sbb
and
and
xchg
sbb
or
rcl
pushl
mov
clc
mov
mov
mov
sarl
insl
dec
dec
daa
sbb
lcall
rclb
mov
mov
out
popf
or
cwtl
mov
push
cltd
or
and
daa
andb
adc
xor
mov
int3
dec
jne
dec
iret
je
adc
loope
and
xor
cltd
ja
xlat
ds
push
stc
fdivrs
gs
add
hlt
and
and
pusha
sbb
push
sbb
fidivs
mov
add
in
xor
fldcw
pop
addl
jmp
rorl
inc
push
or
insl
jb
adc
out
xchg
fcomip
adc
cltd
jecxz
cli
mov
mov
inc
and
mov
in
aaa
dec
popf
adc
pushl
mov
and
mov
mov
cmpl
push
std
xlat
sub
cmp
pop
sbbl
push
jae
push
stos
xor
xchg
into
mov
repz
dec
jmp
addr16
and
inc
cltd
pop
dec
in
lar
fsubs
lods
sub
jmp
fcoml
aaa
jg
add
cmp
and
lret
pop
jnp
mov
fnstcw
jb
int
xchg
sub
cwtl
ds
addr16
sbb
cmp
or
xor
lea
and
fcompl
mov
pusha
inc
bound
cmc
mov
out
lock
mov
lret
cld
lret
xchg
aas
aam
jae
pusha
rcll
or
sbb
movsb
enter
mov
sbb
xchg
push
cmp
ret
adc
xor
cmp
popa
shrl
and
sbb
or
scas
psubsw
jb
add
ljmp
out
sbbl
dec
icebp
adc
int3
pop
xor
and
stos
ja
fimuls
xor
cmp
repz
jmp
or
lock
mov
insl
fisttps
jns
scas
adc
lods
or
sbb
cmpsl
enter
cltd
ds
sub
testl
xlat
das
mov
adc
addl
loop
mov
in
mov
mov
xchg
in
push
sti
in
xor
data16
xor
xor
andb
dec
inc
ror
daa
repnz
xchg
cmpsl
pop
rorl
into
xchg
aam
jp
fisttpl
or
lock
sbb
loope
mov
sub
or
clc
lret
cltd
loopne
mov
add
arpl
mov
cld
push
aas
adc
pop
cmp
inc
mov
dec
sahf
jne
cmp
stos
das
in
add
push
aad
and
jnp
ficomps
or
outsb
lods
pop
insl
sub
push
fucom
mov
or
dec
adc
addr16
arpl
push
mov
pushf
ret
lods
or
sarl
iret
sub
add
loope
xor
xchg
popa
insl
test
stos
stc
xlat
push
mov
xchg
mov
std
mov
add
cmpb
roll
aas
lahf
adc
ja
pop
call
inc
adc
lods
xor
repnz
pusha
pop
xchg
mov
pop
mov
push
scas
mov
and
xchg
loop
pushf
jbe
pop
xor
push
jmp
enter
test
jge
jle
aaa
test
imul
insb
stos
sbb
dec
mov
in
mov
or
sbb
sub
inc
mov
or
les
mov
and
or
and
mov
add
jno
jbe
xor
pop
rcrb
or
pop
dec
pop
inc
fisttpl
scas
push
inc
fcoml
mov
mov
scas
push
jg
scas
aas
xchg
pop
mov
sub
cs
mov
movsb
scas
sbb
out
xorl
in
mov
test
out
aas
or
pop
cmp
pop
inc
inc
pop
subl
sbb
ja
mov
gs
lea
jge
mov
outsl
mov
cmovs
add
notl
dec
aas
xchg
std
xor
mov
ret
and
push
pop
pop
pop
xorl
aam
mov
pop
cmpsl
push
int
mov
push
xchg
push
ja
fiaddl
push
inc
dec
repnz
xor
add
addl
adc
pop
test
stos
les
sub
iret
arpl
adc
add
dec
aas
mov
mov
inc
stos
nop
inc
push
xor
xchg
or
nop
ret
pop
aad
xchg
jmp
cwtl
pop
ja
aad
sub
outsb
push
nop
in
cli
cmpsb
cmp
jge
stos
mov
mov
iret
push
enter
push
inc
xchg
call
fdivl
add
pop
push
inc
bound
or
pop
add
fdivr
imul
out
scas
jbe
adc
pop
rorl
jge
xor
pop
add
add
iret
rorl
mov
mov
add
mov
mov
sbb
decl
xchg
mov
push
imul
mov
or
sbb
mov
ret
and
xor
insl
jle
pop
mov
hlt
jge
pusha
aad
test
dec
adc
and
dec
and
lds
rolb
out
sahf
push
xchg
popf
stos
adc
add
sbb
dec
mov
dec
jmp
cs
jge
popf
test
xor
sub
mov
push
repnz
and
or
push
jmp
push
xchg
xor
xor
or
inc
aas
mov
adcl
dec
xlat
pushf
adc
mov
add
push
bound
cmp
test
or
push
mov
movsl
sahf
loope
loopne
mov
mov
aad
and
adc
pop
jp
jmp
push
mov
fcmovb
ret
mov
cltd
aad
add
jo
lret
int3
out
sbb
mov
and
ljmp
int
std
adcb
mov
ds
mov
mov
xchg
xchg
mov
dec
pop
push
mov
mov
lretw
out
ja
cmpsb
cmpsb
mov
push
push
scas
sti
inc
nop
push
push
push
lcall
pop
add
push
ror
fadd
pop
jno
mov
fsts
ret
into
jl
pop
stos
hlt
jle
stos
push
lcall
and
or
hlt
mov
dec
ds
mov
push
add
testb
xlat
add
aad
out
mov
pop
xchg
cmp
aas
mov
dec
and
aad
jae
sub
mov
push
lret
adc
inc
nop
mov
movsb
adc
rcr
add
in
xchg
fldcw
pop
pushf
mov
pop
dec
jo
ret
arpl
mov
pop
lock
idiv
lock
jnp
divl
movsl
stos
lret
jne
push
rclb
inc
adc
je
mov
fwait
inc
jg
xor
mov
shrb
inc
ret
aaa
mov
dec
add
sub
mov
bound
sbb
lea
push
jbe
fnstcw
jle
loop
inc
fwait
sbb
add
hlt
iret
cld
sub
mov
dec
jge
dec
jbe
sub
mov
pop
aam
add
cld
fsubrl
lea
sub
iret
nop
cld
fsts
dec
data16
test
jbe
xor
inc
clc
sbb
je
add
pop
pop
adc
mov
es
cmp
test
cmp
std
ljmp
pop
xchg
xchg
sbb
xchg
movsl
sbb
push
pop
aas
iret
rol
sbb
sbb
cmpsb
ss
das
es
dec
xor
pop
sub
jne
sub
call
jae
aaa
pop
icebp
add
cmp
inc
and
add
adc
scas
gs
fs
adc
dec
lret
cltd
adc
mov
lock
mov
mov
notl
xchg
movb
cmpsb
inc
dec
xchg
jno
and
enter
loope
lods
vmwrite
add
dec
repnz
clc
leave
aad
xor
outsl
sbb
orl
mov
orl
lea
cs
sbb
enter
out
test
pop
cmpsb
lcall
adc
dec
popa
xchg
cmp
jbe
movsl
andb
push
cmpsb
add
and
scas
xchg
jno
loopne
ja
clc
fistpl
sbb
mov
push
cmc
popf
pop
sbb
pushf
mov
ret
jecxz
gs
dec
fwait
push
enter
xor
cld
cmp
or
dec
mov
loopne
mov
dec
shrb
test
fldl
stos
pop
sbb
in
stc
test
pop
cmpsl
xchg
stos
repnz
inc
mov
mov
jnp
loope
pop
addl
frstor
clc
pushf
in
add
aam
shlb
mov
cs
repz
jno
or
fists
and
inc
lret
loop
dec
hlt
std
lret
push
addl
cmp
xor
xchg
sbb
sbb
push
aas
jae
pushf
cld
out
mov
dec
aam
push
inc
cmp
shrb
xchg
push
cmp
or
fcomi
sbb
adc
leave
or
sub
push
in
mov
push
nopl
pushf
mov
aas
mov
xor
xchg
rclb
cld
cmpl
out
mov
js
jmp
cltd
and
inc
pop
jo
pop
pop
data16
subl
rolb
push
scas
dec
pop
jo
push
fidivl
lods
and
sub
pop
or
lret
push
inc
nop
scas
mov
mov
std
sbb
js
sub
ret
and
sarl
adc
pushw
xchg
xchg
out
sub
insb
clc
ror
inc
inc
sub
js
xchg
sbb
mov
xor
into
dec
jo,pn
sub
and
ss
mov
mov
jne
test
add
pop
push
push
jmp
xor
and
out
xorw
adc
sbb
jb
mov
push
xor
sbb
xor
popa
aas
sarl
dec
xor
leave
cmp
cmp
sti
sahf
add
fidivl
jl
test
push
dec
dec
loop
xchg
fs
popa
inc
stos
out
mov
adcl
xchg
ds
adc
test
mov
cmp
je
shrl
je
push
adc
xor
adc
mov
push
es
repnz
or
cwtl
mov
jbe
arpl
outsb
inc
das
stc
or
insb
mov
out
xor
in
movsb
cltd
je
imul
int3
push
out
and
sub
mov
sbbb
lea
pusha
test
inc
rolb
aaa
imul
test
shrl
sti
rcl
dec
add
bound
dec
dec
cs
add
mov
lds
adc
jge
xchg
mov
xor
lahf
gs
push
jbe
jne
lods
sti
add
or
sbb
movsb
popa
adc
push
mov
mov
repz
arpl
aaa
jmp
jmp
pop
dec
xchg
pop
or
cmpsb
pusha
lock
mov
inc
cmp
mov
push
shlb
movsb
xor
xlat
std
xor
lahf
loop
cwtl
je
ds
faddl
pop
std
lds
pusha
fisubrs
repnz
and
dec
xor
and
popf
and
inc
stos
cmpsb
mov
fnop
push
pushf
mov
or
cmp
mov
sub
jno
insb
adc
xchg
jns
cld
es
lret
xor
es
dec
sub
xor
in
dec
inc
and
inc
ja
dec
mov
aas
xlat
pop
dec
es
mov
jecxz
out
out
mov
adc
scas
cmp
mov
jmp
mov
lcall
fidivs
vpunpcklwd
cwtl
push
sub
xchg
xor
loop
pop
sahf
leave
xor
sbb
mov
add
test
mov
add
jmp
jg
xchg
scas
outsb
repz
mov
pop
or
rcll
cmpsb
add
int
cltd
in
call
push
add
fsubrl
imul
cmp
and
mov
jge
or
negl
jmp
rcr
mov
mov
test
mov
mov
push
rorl
sti
pop
add
daa
ljmp
test
mov
sbb
out
jbe
out
dec
int
mov
outsl
adc
dec
pop
cli
jmp
test
fcmovu
mov
xchg
sbb
cmpsb
jmp
cmpsl
cmp
push
sbb
add
pop
fisubrs
lods
add
dec
rorl
adc
repnz
xor
or
push
int3
pushf
addr16
in
fnsave
mov
mov
or
movl
jp
call
leave
mov
add
insb
lds
les
addr16
pushf
add
pop
arpl
cmp
xor
mov
in
mov
add
es
das
inc
bound
adc
mov
mov
hlt
jbe
add
dec
rorb
loope
adc
adc
cmpsl
hlt
enter
jge
fcompl
push
sub
pop
fcmovne
sbb
mov
in
fwait
lds
mov
mov
lahf
add
jns
int
mov
fadds
scas
ror
dec
dec
popa
cmpsl
xchg
sti
cli
jae
in
pop
jmp
cwtl
fisubs
push
mov
out
push
ret
xlat
mov
popf
scas
mulb
test
aad
inc
fisubrl
mov
scas
xchg
sbb
and
xchg
cmp
xorb
xor
and
pop
std
cmpsl
xor
pop
mov
inc
into
adc
inc
sbb
pop
push
adc
rcrb
jae
push
stos
sub
push
push
rorb
jecxz,pn
int
push
sbb
jmp
aas
mov
stos
jnp
dec
xchg
iret
jp
icebp
sub
in
inc
out
xor
mov
mov
add
pop
std
repz
or
in
pop
into
cmpsl
pusha
mov
test
fwait
popf
pushf
fnstcw
xlat
aad
gs
xor
nop
add
sub
or
lcall
fwait
mov
mov
in
leave
xlat
xorb
imull
mov
nop
sub
adc
repz
ljmp
or
ret
mov
and
stos
or
aad
mov
lret
push
dec
test
xchg
mov
aas
add
jp
push
shrl
vpunpckhqdq
push
jge
pop
or
and
jns
pop
pushf
xor
stos
fnsave
pop
sbb
bound
sbb
aas
sub
xchg
ret
lods
pop
inc
inc
fbstp
leave
aad
pop
cmp
pop
xchg
jg
popa
repnz
rcl
push
push
hlt
imul
ficomps
xor
xchg
lds
xchg
xor
movsl
pop
jmp
ja
popa
pop
and
sbb
fnstsw
xchg
insb
hlt
mov
icebp
sbb
push
popf
scas
out
fimull
mov
adc
decl
hlt
xchg
cmp
pop
jo
jb
push
xor
or
imul
jl
and
pop
add
cs
pop
dec
imul
push
scas
xor
out
jno
lcall
aam
sbbb
lods
sub
lret
or
ds
cld
push
mov
mov
loop
lea
aaa
and
adc
adc
push
or
sub
mov
inc
cs
jne
or
imul
jno
dec
adc
adcb
sarl
lcall
ret
les
inc
shlb
test
addr16
popf
dec
adc
and
inc
pop
cmp
incl
aad
mov
testb
call
icebp
jg
pop
nop
fidivs
mov
sahf
je,pn
and
sub
push
jae
rcrb
jmp
inc
scas
and
adc
lea
shl
loopne
xchg
xor
roll
into
sub
sbb
sbbl
les
pop
or
add
pop
cmp
jae
sahf
add
aas
or
in
sbb
enter
jbe
stos
xchg
or
imul
mov
dec
jmp
idivb
inc
xchg
or
cmp
adc
mov
pop
jecxz
adc
cwtl
mov
je
test
popa
mov
jmp
push
outsl
cmp
int3
loop
rclb
stos
inc
lods
mov
int
repnz
fsin
push
sub
lods
or
jmp
pop
mov
adc
popa
stos
sbb
lods
out
xchg
push
pop
ja
mov
sbb
or
dec
popa
sahf
push
mov
pop
sbb
subl
pop
fwait
jne
adc
adc
adc
repnz
aam
pcmpeqb
ret
insl
jle
leave
loop
xchg
or
mov
sbb
xchg
push
hlt
sub
push
cld
int3
jecxz
xor
nop
testb
pusha
and
jae
adc
jecxz
mov
loope
pop
sub
push
test
sbb
jb
sub
push
push
insb
lret
aaa
lret
push
inc
sarl
sub
int
push
insl
and
ret
push
pop
jae
xchg
add
fidivl
sub
jg
pop
dec
push
test
sti
call
pusha
dec
int
ret
xchg
pop
push
or
sbb
adc
push
lea
fistpl
pop
inc
ja
int3
push
js
outsb
shrl
out
imul
movsb
je
cmp
dec
out
mov
enter
push
and
fiaddl
fdivr
enter
jne
cli
pop
xor
fisubrs
xchg
xor
shlb
fwait
bound
sbb
cmpsl
aaa
push
sbb
and
xor
addr16
pop
xchg
adc
adc
jae
insb
pushf
loop
push
mov
pop
add
pop
jmp
shlb
je
fdivs
fstl
aaa
pop
jmp
mov
dec
dec
dec
or
mov
cs
outsb
stos
and
jne
push
jne
push
je
call
jecxz
mov
jp
xchg
mov
out
dec
sahf
out
pop
mov
cmpb
bound
movsb
jge
pop
and
js
lock
arpl
inc
pusha
dec
mov
xor
test
mov
test
fsubp
cli
ja
adc
in
sbb
int3
test
dec
dec
push
sbb
jbe
clc
outsl
jge
xchg
daa
cmp
cli
or
imul
aas
jge
add
and
mov
dec
addr16
cmp
movsb
pop
shlb
leave
repnz
ljmp
pop
inc
jno
xlat
mov
xchg
or
out
cwtl
pop
add
cmc
mov
outsl
fsubrp
enter
jg
in
movsb
jg
das
outsb
leave
xor
repnz
cmp
cltd
mov
inc
jne
cltd
push
fstpt
lock
shl
stos
xchg
in
pop
cwtl
or
leave
xlat
js
imul
dec
fcoml
xchg
mov
cmc
jne
das
iret
clc
mov
mov
jae
xchg
jg
icebp
sub
xchg
jp
push
sbb
mov
insb
jg
pop
popa
dec
jl
fisubrs
xchg
push
xchg
rcrb
aad
xor
xor
mov
mov
loop
push
test
adc
aas
enter
xchg
pusha
push
jne
cmc
stos
push
cmc
mov
fnstenv
movsl
cmp
loopne
add
gs
adc
add
xchg
popf
lcall
and
es
insl
dec
dec
adc
push
leave
dec
ljmp
mov
mov
cmp
sar
mov
sbb
scas
jns
push
jle
sub
fldl
std
mov
mov
pop
leave
push
leave
shrb
push
sub
shll
mov
and
imul
pop
push
adc
ficompl
ja
push
incl
dec
cmp
fcoms
rolb
mov
je
into
mov
out
jge
repz
out
jbe
enter
shr
cmc
fcompl
inc
aam
cmp
mov
pop
and
sbb
fisubrs
jmp
dec
int
hlt
ficomps
into
cmp
xchg
cmp
pop
add
mov
pop
enter
xchg
lods
rep
jge
test
add
inc
scas
sbb
mov
mov
mov
push
test
std
cmp
or
cmp
jno
daa
outsb
jle
add
dec
aad
adc
in
xacquire
dec
imul
clc
out
ja
xor
test
out
xchg
aam
test
lea
shll
adc
insb
add
loope
sub
loope
fdivrl
lea
mov
mov
test
loopne
and
adcl
sub
cmp
cmc
sbb
sub
daa
pusha
rcl
incb
test
mov
lds
call
or
gs
xchg
call
ds
sahf
insl
jle
xor
imul
sbb
mov
sbb
xor
lds
imulb
outsl
cltd
mov
lds
dec
outsl
or
or
mov
adc
testb
pop
fcmovnu
test
xor
and
iret
and
test
mov
add
sbb
notb
mov
dec
aaa
gs
stc
pop
out
ret
cmp
sub
jl
mov
mov
jae
addl
gs
pop
xor
or
daa
je
outsb
and
mov
fwait
mov
or
clc
mov
testb
out
aaa
inc
mov
in
pop
hlt
pop
pop
leave
dec
and
dec
insb
ljmp
adcl
sbb
clc
pop
mov
das
mov
jno
push
sub
cmp
add
mov
in
cld
dec
sbb
aas
add
inc
iret
outsb
ljmp
insb
outsb
data16
imul
jg
pop
sarl
sbb
cwtl
mov
fsubr
adc
pop
test
int
push
outsl
cmc
movsl
or
ja
cmp
push
roll
lods
les
fs
adcb
pop
inc
cmpsb
xor
aam
cmpb
subl
std
and
adc
xor
xor
cltd
push
into
iret
in
or
jg
test
cli
aaa
add
jl
shll
and
insl
inc
or
inc
add
outsb
mov
sar
cltd
or
std
jo
xor
mov
movsl
mov
sub
jp
pop
fidivl
fidivl
and
lea
fimull
xor
mull
xor
push
in
stos
in
push
adc
fbstp
xchg
mov
sbb
lcall
xor
ljmp
dec
lods
or
inc
test
out
test
lds
rcll
outsl
fs
or
or
clc
and
pop
or
mov
fwait
stc
jae
cmp
jle
add
mov
mov
jle
pushf
cmpsl
jmp
adc
add
mov
ds
mov
ja
and
int
int
test
and
mov
iret
dec
pop
jo
cwtl
repz
cld
in
jbe
sub
lret
sub
ds
punpckhwd
jl
repnz
cmpsb
adc
jb
in
or
mov
inc
mov
cmp
pushf
mov
jp
std
sub
shll
and
cli
outsb
js
or
add
cmpsl
jle
mov
jge
inc
push
sub
lods
push
xchg
cmp
adc
push
xlat
pop
push
xor
xorl
aas
sub
cmp
lock
icebp
mov
shlb
scas
push
cmp
clc
mov
push
inc
pop
xlat
xchg
xchg
cmp
push
lods
dec
into
fidivrl
and
dec
pop
test
ljmp
out
sbb
loopne
pop
mov
les
out
mov
pop
inc
sbb
cmp
xor
xor
push
jb
lods
insb
sub
mov
adcl
pop
ficomps
subl
shrl
mov
imul
pop
jmp
loope
loope
outsb
ja
fdecstp
cld
adc
jne,pt
popf
addr16
ss
scas
xor
out
cli
or
add
mov
leave
jb
pop
popf
icebp
sub
and
out
es
popa
dec
xchg
or
fisubs
mov
sbb
pop
cli
add
xor
es
sbb
orl
xchg
mov
test
sub
push
ficomps
sub
orb
adc
out
aaa
cmp
loope
add
push
pop
dec
adc
cli
movl
out
xchg
andb
sub
hlt
push
out
mov
pusha
xchg
sub
jp
pop
mov
dec
mov
sub
fcoml
xor
fldl
pushf
loopne
into
jnp
mov
dec
jnp
mov
call
mov
jp
xchg
daa
sub
je
fs
push
lea
cmp
adc
pop
add
cmp
sub
add
les
push
ret
xor
mov
xchg
cmp
lods
sbb
loopne
inc
bound
daa
add
testl
les
push
sub
add
packssdw
pushf
push
push
add
fstpl
lcall
mov
mov
pusha
lds
repz
or
insb
popa
pop
mov
or
pop
jp
pop
jecxz
cmpsb
into
lcall
scas
arpl
push
push
lods
push
mov
addr16
loopne
sub
out
and
cmpsb
jp
ss
sbb
xchg
push
xor
fs
xor
or
repnz
andb
aam
fadds
test
mov
or
enter
es
roll
mulb
cmp
jmp
stc
push
daa
nop
pop
xlat
sar
out
int3
push
pop
adc
mov
mov
lcall
sarb
lahf
xor
dec
dec
mov
out
mov
je
or
sarb
xor
out
daa
mov
jg
test
cmp
cltd
mov
mov
pop
out
scas
and
xchg
jge
inc
cwtl
adc
xor
icebp
imul
mov
push
lret
loop
sbb
mov
lahf
sub
test
pop
jg
fstpt
cmp
lods
inc
sub
cmp
rorb
xor
scas
or
das
sti
xchg
aam
mov
cli
pop
out
or
adc
fs
jge
jp
out
stos
into
xchg
mov
xchg
mov
xorl
push
movsl
ret
cmp
dec
sarb
pop
inc
xor
in
int
aad
mov
sbb
sub
imul
cmp
push
xor
or
xchg
cmp
ss
jmp
adc
sub
rcrb
inc
shrl
and
cs
scas
jl
and
fisttpll
jnp
rolb
or
cli
push
insb
cmpsb
xchg
adc
xor
repnz
jae
andl
pop
js
xorl
ds
sbb
in
sbb
orl
mul
test
shrl
add
bound
xorb
out
popf
clc
dec
xor
and
daa
repnz
iret
or
xchg
and
mov
and
mov
dec
or
les
mul
dec
fdivrs
inc
cltd
push
stos
xchg
rcll
gs
repnz
mov
mov
inc
add
test
and
roll
xor
and
inc
outsl
ja
push
push
sbb
and
push
mov
int3
sbb
sub
inc
or
aas
push
cmpsl
jp
mov
rorl
xor
xchg
or
pop
enter
pop
imul
fsubl
scas
fistpl
xor
adc
pop
push
xor
mov
mov
adc
xchg
mov
repz
jp
push
icebp
or
int3
outsb
inc
mov
dec
xchg
call
aam
inc
pop
std
adc
adc
imul
stos
pusha
cmc
aad
outsb
mov
jb
mov
pop
cs
jg
sub
mov
icebp
jbe
adc
or
fs
inc
outsb
adc
pop
pop
in
inc
aas
or
dec
pushf
mov
ja
cli
lret
and
add
jg
and
in
mov
push
xchg
pop
push
pop
je
test
outsb
dec
stos
in
fwait
ss
xchg
cmp
pop
jo
pop
movsb
add
jns
mov
ja
mov
in
fbstp
mov
pusha
roll
mov
outsb
addr16
gs
inc
and
push
push
push
add
mov
pop
lahf
jecxz
in
into
and
lret
cmp
fsubrs
mov
rclb
xor
inc
pop
das
or
lret
orb
les
pop
jae
push
rolb
jae
mov
sub
mov
ret
insb
sub
xchg
out
pop
test
and
in
sbb
aam
icebp
xor
sub
jmp
xchg
pop
sub
cmovl
jbe
fbstp
out
ret
xchg
pop
push
sub
adc
daa
fstps
inc
fists
mov
adc
scas
int
inc
sbb
aad
daa
xchg
test
pop
mov
adc
test
out
scas
dec
mov
jge
je
stc
mov
xor
sbb
jnp
sbb
inc
jg
popf
dec
cli
jmp
sub
movsl
call
fndisi(8087
or
ret
pop
adc
imull
andb
mov
mov
ss
pusha
mov
repz
fistl
pop
lahf
outsb
adc
adcb
jge
lock
dec
mov
cwtl
imul
scas
jl
push
and
lea
push
in
pop
test
pop
inc
sahf
sbb
into
sub
push
jb
inc
mov
mov
lret
test
orl
inc
dec
cmp
shl
push
push
nop
scas
inc
outsl
jp
paddusw
scas
jl
jg
xor
pop
lods
mov
push
fstpl
dec
in
jnp
dec
loop
xchg
in
pop
jmp
addr16
int3
movb
leave
jb
scas
adc
out
bound
and
shlb
xor
enter
jecxz
xor
cmpsb
fdivrl
out
mov
push
sbb
decb
idivl
mov
fcmovbe
mov
sbb
adc
adc
stos
mov
jmp
xlat
rorl
call
adc
sbb
mov
add
sahf
xlat
arpl
test
fadds
addb
mov
shl
or
xor
cmp
or
adc
sub
pop
les
inc
pop
lods
rorl
out
lods
pop
jb
or
popf
jb
dec
jb
fnsave
loop
or
addr16
and
repnz
cmp
data16
sbb
mov
push
ret
dec
jno
les
add
and
sub
add
mov
xchg
xor
inc
push
cmp
subb
or
push
scas
adcl
call
xchg
mov
adcb
lret
in
stos
mov
outsl
dec
fists
leave
inc
and
clc
movsb
orl
bound
mov
mov
ret
push
testl
sub
add
sub
xor
mov
mov
mov
mov
push
dec
jg
stos
fidivrl
xchg
imul
shrb
dec
icebp
pop
mov
cwtl
into
clc
cltd
sti
stc
mov
mov
mov
test
sbb
xor
mov
push
popa
sub
cmp
test
adc
in
lahf
dec
adc
mov
cmp
sbb
aad
sub
cmp
popf
sub
sahf
add
pop
pop
test
sbb
fildll
rcl
shrl
mov
mov
in
cmp
pop
scas
mov
xchg
rcrl
adc
push
ss
jp
in
adc
lods
jne
cmc
xor
leave
sub
lock
mov
push
rolb
mov
xchg
pop
loopne
sub
je
cs
es
adc
in
lods
int3
fistl
nop
sub
and
mov
dec
add
adc
imull
push
cmp
mov
mov
gs
subb
mov
or
add
cmp
jle
cli
imul
cltd
push
mov
mov
xchg
jne
daa
lock
int3
cmc
rcrl
fsubl
nop
es
das
mov
pop
sub
sub
lret
adc
shr
push
lds
add
dec
arpl
aam
outsb
adc
push
imul
jl
jge
outsb
or
mov
sub
insl
movd
xlat
inc
mov
mov
or
push
insl
pop
inc
mov
mov
bound
das
repz
outsb
in
fistpll
and
xchg
jg
pop
pushw
and
divb
push
mov
test
push
scas
push
notb
es
adc
out
stos
or
cli
jne
push
or
call
inc
jecxz
call
mov
sbb
sbb
lock
lock
add
mov
testb
or
xor
pop
cs
faddp
add
xchg
mov
lods
push
insb
outsb
or
jp
js
ds
sbb
popf
fimuls
hlt
lret
dec
filds
xlat
cli
sti
dec
mov
repnz
outsb
add
test
jae
int
loope
call
stc
mov
in
imul
bound
mov
std
jns
outsl
jge
cmp
sahf
outsl
stos
push
and
scas
mov
pop
or
jno
jmp
push
xchg
cmp
les
lods
clc
lcall
or
cmp
out
mov
and
push
pushf
xor
push
sub
push
add
mov
aad
rcrl
popf
pop
decl
adc
adc
adc
outsl
xor
push
test
fwait
ret
pop
xchg
mov
jle
pop
and
inc
flds
int3
push
call
sbb
add
mov
push
mov
gs
mov
and
mov
lods
imul
imul
or
int
adc
jecxz
gs
pop
inc
xor
jae
shl
rcll
scas
pusha
fstl
sub
pushf
add
push
mov
add
xchg
stos
subl
loop
mov
cs
pop
push
enter
popa
out
jnp
outsl
lds
in
les
add
jl
cmpb
stos
mov
adc
hlt
movsl
xor
aam
inc
sub
mov
das
xor
sahf
push
out
push
hlt
xor
stos
adc
add
mov
repnz
mov
mov
out
movsl
in
mov
iret
pop
mov
je
pop
repz
js
add
outsb
cmpb
push
xchg
shrl
and
cmpsl
inc
loope
sbb
or
call
pop
cmp
xor
in
mov
out
push
fcmovnbe
cmpsb
test
leave
xor
out
mov
insl
add
fldenv
loopne
pusha
in
ja
clc
or
push
add
xchg
in
icebp
cmp
les
cmc
inc
icebp
leave
jle
shrb
ds
inc
or
insb
xor
ficoml
lret
loopne
testb
push
inc
fcmovne
enter
iret
jb
and
leave
ficoms
lahf
push
xchg
aas
fmul
bound
rorb
pushf
das
sub
inc
jns
lret
fst
push
jl
scas
xor
jno
sbb
sti
jnp
leave
mov
push
push
pusha
negb
push
inc
push
dec
shlb
lods
loop
jns
loope
mov
test
jae
jae
xchg
divb
rorl
leave
rcrl
push
and
lods
push
xor
ljmp
dec
les
addl
adc
mov
sbb
xor
adc
add
push
sbb
jne
icebp
aad
popa
arpl
iret
lea
into
rcl
cmp
or
cmpsb
fsub
sub
popa
push
in
popf
push
adc
sarb
out
aaa
nopl
add
mov
push
push
es
stos
test
xchg
jl
mov
mov
jbe
rorl
or
in
int3
jl
cmp
push
jno
mov
roll
pop
adc
and
test
test
add
sub
xchg
and
out
inc
sbb
xor
in
nop
cmp
cltd
cmp
push
cli
mov
xchg
cmp
test
push
push
lods
stc
dec
rcl
mov
lods
call
arpl
sbb
mov
and
fsubr
add
enter
movsl
or
testb
and
push
fbstp
pop
and
outsb
notb
xor
aad
dec
xor
dec
pop
push
daa
push
jnp
add
xchg
push
adc
test
jbe
mov
lods
divb
int
cwtl
sub
test
pop
push
aaa
mov
push
push
shl
sar
and
ds
jno
sti
pop
push
mull
adc
pop
cmp
call
lds
dec
fstps
add
adc
gs
in
or
push
filds
sub
jg
aam
push
pcmpeqw
lods
ret
call
adc
cltd
popf
loope
pushf
decb
mov
dec
mov
shlb
push
mov
pop
push
mov
push
mov
ja
pop
movsl
or
mov
adc
in
mov
inc
sbb
inc
fsubl
adc
sbb
lods
idivl
arpl
xchg
add
into
mov
popf
loop
fldenv
into
sub
aaa
mov
cwtl
push
je
adc
xchg
pop
dec
jnp
jle
scas
jnp
aas
lret
push
movl
mov
dec
popa
mov
clc
pop
in
cltd
jp
jns
jle
gs
aam
pop
push
adc
lds
pop
xchg
loope
push
fidivs
repz
push
inc
scas
cmp
movl
movhps
imul
adc
mov
mov
lahf
mov
mov
ja
insl
fsubl
xchg
test
dec
cmpsb
jns
sbb
jo
iret
cli
nop
ljmp
cwtl
cs
dec
popf
iret
outsb
adc
and
frstor
shll
ja
push
sbb
mov
aad
mov
lods
jg
pop
cwtl
inc
pop
stos
jbe
mov
fcoml
out
jne
or
sub
and
enter
mov
xchg
in
fimuls
shlb
mov
int
xor
cmpsl
fstl
lcall
mov
ror
mov
xchg
mov
cli
and
cmp
pop
stos
mov
jg
shrl
cmp
es
mov
or
int3
ljmp
add
pop
add
cmp
popa
scas
mov
lock
pop
sbb
jg
dec
out
push
pop
cwtl
sub
mov
rcr
repz
fwait
pop
lea
outsb
pop
xchg
movsl
mov
into
fnstenv
mov
jl
inc
and
adc
mov
ror
out
or
sub
pop
push
mov
inc
orl
cld
aaa
fcmovnu
shlb
cmp
in
cmpsb
xchg
or
xor
lret
jnp
or
fwait
inc
call
nop
jae
jns
sub
addb
cmp
das
jae
pop
shll
insl
sub
dec
or
repz
jbe
adc
shll
mov
xor
push
jbe
xor
dec
push
sub
addl
outsb
inc
and
jl
mov
push
ss
push
ret
xorl
ror
aam
ret
and
cmp
and
push
mov
popa
xchg
lds
sbb
into
mov
repz
and
loope
push
jge
lahf
lea
in
aaa
mov
xor
lods
xor
inc
adc
cwtl
xchg
std
js
or
adc
hlt
mov
xor
scas
fistpll
cli
stos
sbb
mov
xchg
sbb
push
push
lock
add
fcoml
cwtl
jecxz
in
lods
stc
mov
inc
aad
adc
mov
inc
sbb
add
push
lret
stos
push
imul
roll
and
sbb
nop
sub
mov
mov
pop
imul
sub
in
jmp
gs
mov
cltd
add
in
into
mov
xor
add
pop
xlat
push
cmc
jge
imul
sub
jnp
arpl
jo
cwtl
dec
sbb
adc
adc
adc
imulb
inc
popa
or
out
push
notb
mov
or
push
inc
dec
ljmp
cmp
sbb
sbb
movsl
or
stos
mov
les
sub
mov
lret
scas
pop
push
xchg
sbb
ss
mov
ret
pop
aas
fnsave
das
in
outsl
negl
mov
stos
xor
and
sbb
dec
mov
pop
shlb
cmc
pop
sbb
add
sbb
push
push
cmp
jl
jno
jno
dec
scas
ds
mov
insl
clc
cwtl
fadd
stos
rcrl
ds
out
inc
jbe
jle
idivb
and
mov
lahf
lahf
lahf
int3
stos
cmp
push
lret
inc
pop
test
adc
jae
dec
mov
mov
das
cltd
or
ret
sbbl
xor
in
rdtsc
mov
cwtl
and
jbe
jae
sub
sub
repz
push
mov
and
sahf
in
sbb
cwtl
lret
outsb
sbbb
hlt
icebp
adc
lods
ja
mov
pop
pushl
aas
test
sub
scas
xchg
in
cmp
dec
in
or
sub
adc
sbb
int
mov
nop
jle
pusha
push
scas
mov
aad
xchg
ret
xor
sti
imul
add
lahf
js
aaa
sbb
adc
mov
arpl
in
popf
cld
lret
inc
insb
outsb
mov
xor
shrl
nop
jmp
and
pusha
fsubrl
repnz
dec
sar
sti
les
jmp
xchg
insl
dec
mov
xor
sub
push
pop
push
adc
cwtl
cmpsb
mov
cmp
cmovp
cld
mov
jo
inc
stc
cmc
inc
push
xchg
shr
nop
aam
dec
loop
imul
mov
int
mov
sahf
das
mov
sbb
and
in
and
je
in
inc
leave
or
sub
cwtl
flds
dec
sub
ret
lahf
xchg
bound
xor
loop
mov
dec
add
test
lods
dec
inc
data16
sbb
sub
or
cltd
popf
xchg
popf
in
adc
jno
add
loop
and
xchg
dec
dec
ss
push
mov
icebp
les
add
shll
adc
mov
inc
mov
push
imull
fsubrl
fstpt
sbb
call
dec
jp
add
cmp
xor
sbb
inc
testl
enter
xchg
pop
rcl
movsb
push
push
adc
insb
sbb
sub
jmp
out
andb
cmc
cli
push
dec
push
xchg
ljmp
mov
jg
movsb
addr16
push
cld
dec
int3
aam
adc
test
jb
mov
sti
sbb
les
jl
sub
daa
or
lret
push
lods
adc
dec
push
add
cmc
push
out
sub
fisttpl
adc
xchg
sbb
dec
jle
ss
insb
mov
mov
addr16
mov
mov
notl
jne
mov
push
add
sub
pushf
test
inc
ljmp
call
mov
mov
not
int3
sub
and
notl
ljmp
nop
ret
nop
dec
mov
dec
aaa
fldenv
inc
iret
jnp
gs
pop
fbstp
movsl
sbb
sub
pop
sbb
lds
dec
lock
inc
jnp
jmp
push
sarl
test
xor
cwtl
stc
stos
jno
mov
pop
push
nop
cmp
lea
pop
mov
adcb
xchg
rolb
xchg
insl
lret
push
fdivl
mov
jecxz
inc
pop
and
out
testb
ss
pop
dec
xor
enter
mov
push
pop
imul
ret
fsubs
arpl
insl
pop
stos
cltd
lods
xor
sbb
es
jne
jno
pop
add
enter
add
mov
das
push
mov
sub
push
add
mov
push
and
scas
div
cs
cmpsl
rolb
lea
leave
push
fists
mov
cli
mov
or
rcrl
and
or
fmuls
out
into
xchg
fsub
push
inc
mov
ljmp
push
jmp
and
lds
out
push
aam
jl
fdivl
jnp
add
mov
inc
jb
lods
repnz
test
loope
and
rcrl
sarl
jl
movsb
mov
outsb
inc
ljmp
sbb
int
jle
mov
out
or
test
loope
imul
into
mov
sub
cli
and
inc
les
daa
aam
shlb
insb
xor
mov
inc
subb
mov
jp
fidivrs
fimull
inc
aas
sub
fisubrl
addb
xchg
shll
hlt
out
push
fstps
fstpl
cli
inc
popf
scas
push
mov
mov
and
jecxz
xlat
sub
int3
into
inc
push
std
aad
fdivr
add
aaa
and
cli
rclw
push
ds
mov
shrb
push
mov
mov
mov
leave
jno
popa
arpl
push
add
jbe
dec
je
stos
sbb
or
push
iret
filds
lcall
lods
repz
jle
mov
das
mov
addl
jge
bnd
sub
cmc
mov
or
inc
leave
push
lea
mov
ss
push
repnz
dec
xor
es
add
mov
inc
sbb
mov
or
and
add
xor
sbb
out
inc
jno
popa
div
daa
test
mov
or
push
in
loop
lret
xchg
push
pop
into
out
mov
out
mov
push
out
int
pop
cmp
test
push
idivl
popl
int3
push
stos
in
sahf
loope
ss
dec
adc
push
dec
mov
push
les
mov
inc
ror
imul
mov
sti
jle
and
jge
pop
arpl
sahf
mov
inc
shl
cmp
cmp
inc
mov
adc
lcall
pop
mov
dec
inc
jbe
inc
fwait
mov
mov
aam
inc
nop
jne
ss
stos
mov
int3
pop
mov
mov
mov
hlt
stos
xchg
dec
out
fbld
xor
xchg
adcb
in
fwait
mov
xor
aaa
sub
daa
xor
push
jle
in
jmp
fs
xorl
stos
push
mov
xor
jnp
or
mov
adc
cli
lret
enter
rcrb
sub
fcmovb
sub
mov
inc
inc
pop
stc
mov
cmp
stos
push
mov
stos
xor
xor
icebp
mov
aaa
nop
adc
xor
jp
gs
repnz
ja
xor
mov
out
mov
dec
mov
mov
shrb
add
xor
cmc
inc
and
xchg
dec
lcall
jle
mov
fistl
out
fwait
imul
push
xor
push
mov
lcall
rol
fucomip
fstl
mov
cmpsb
cmp
imul
scas
jno
jmp
sbb
outsl
dec
mov
lock
add
loope
movsl
fstpl
iret
lock
push
mov
mov
mov
push
in
leave
pop
leave
cmc
cmp
jl
inc
pusha
fnstsw
cmpsl
call
cmc
push
add
repnz
outsb
test
sbb
lods
or
std
sub
cltd
xchg
or
inc
stos
in
mov
mov
push
push
add
jo
dec
js
pop
insb
jbe
insb
ss
push
nop
xchg
cmp
pop
and
mov
cmp
xchg
daa
inc
xchg
stc
push
xchg
les
or
pop
and
das
mov
cli
adc
mov
ljmp
jg
icebp
rolb
scas
push
je
push
xchg
dec
inc
mov
out
fildll
cmp
adc
idivb
outsl
dec
cmp
std
xor
and
andl
jns
movsl
cltd
cmp
in
mov
aad
cmp
fildll
cwtl
je
ljmp
popa
lods
pop
add
icebp
mov
and
jp
pop
imull
outsb
pop
cli
jecxz
arpl
jns
mov
or
dec
in
lock
adc
xchg
mov
fidivrs
cmp
cmp
xor
mov
jl
or
mov
cmp
mov
push
pop
inc
cmp
adc
mov
scas
lock
jnp
pop
mov
fstpt
test
dec
push
xlat
test
or
cmc
fsts
test
ss
inc
call
enter
popl
adc
adc
mov
out
daa
pop
mov
adc
cltd
repnz
lret
movsl
dec
insb
pushf
loope
shl
mov
mov
and
jo
jmp
cmp
outsb
fidivrl
sub
test
cld
arpl
aam
cli
sbb
mov
and
and
lret
mov
imul
ret
outsl
cli
mov
clc
dec
pop
bound
test
mov
addb
push
stos
je
iret
pop
xor
push
ds
cld
adc
jnp
adc
fmull
mov
mov
add
imul
xchg
rorb
xchg
sub
je
out
in
incl
cs
mov
arpl
pushf
popf
clc
je
lret
mull
test
sub
in
sbb
outsl
lea
lret
andl
test
adc
add
and
test
imul
int3
test
cmp
mov
mov
sarl
lret
fldcw
pop
mov
nop
jno
adc
test
jmp
cmp
lea
mov
sahf
xchg
mov
pop
sahf
addr16
xchg
jmp
out
fwait
or
adc
and
fdivl
dec
and
divb
add
cmpsb
pusha
mov
xorb
jbe
mov
xchg
mov
lods
enter
jnp
mov
xchg
xor
cmp
inc
pop
adc
rorl
mov
mov
int3
pop
ja
sub
sub
push
lds
incl
mov
enter
or
jecxz
pop
test
ds
lods
cwtl
je
inc
dec
fprem
xchg
cmp
fsubrl
jg
pop
sub
in
xchg
jno
cmc
xor
repz
ficompl
inc
loop
or
iret
pop
lret
inc
repz
push
sbb
pop
pop
mov
jp
fst
push
mov
rdtsc
adc
jmp
push
cwtl
or
pop
test
mov
fildll
push
fdivs
add
aas
or
fwait
dec
pop
dec
clc
icebp
push
imul
fsubrs
aam
cvtps2pd
lcall
idivb
and
or
fidivl
lret
and
dec
rol
jge
sahf
into
pop
scas
les
popf
test
pop
jecxz
inc
adc
out
or
mov
sbb
enter
cmp
ss
push
pushf
sti
and
mov
insb
rolb
fildll
push
jle
loopne
ds
loopne
fnsave
xchg
jo
rcll
add
add
adc
call
add
mov
mov
sub
aam
xchg
jne
addr16
es
fimull
fistps
fwait
inc
stos
xor
jg
loopne
and
mov
inc
mov
mov
fldcw
xchg
push
div
mov
call
xlat
adc
mov
jmp
add
gs
ja
test
inc
call
jg
mov
mov
xchg
inc
mov
xchg
push
divb
fcompl
fld
xor
fldl
push
sub
stos
and
push
aas
out
jle
xor
mov
aas
sbb
fldl
jno
in
insl
inc
and
sub
xor
mov
sub
sbb
adc
xor
nop
or
cmp
mov
dec
lret
addr16
cmp
in
clc
loop
sbb
lock
icebp
xor
fwait
lock
fdivp
sub
ljmp
stc
rcrl
ss
data16
sbbl
or
lods
shrb
inc
imul
jns
jbe
outsb
xlat
pop
xchg
jle
cmpsl
mov
int
jg
ljmp
mov
popa
xchg
sbb
xlat
loope
cmp
call
sbb
sbb
cwtl
pop
stos
sbb
or
jmp
jl
jecxz
les
adc
arpl
fwait
push
cmc
push
pusha
sbb
mov
jmp
xor
xchg
adc
and
call
rcrb
jmp
lea
idivb
jmp
test
sbbl
and
dec
inc
push
aam
imul
xchg
xor
cmpsl
std
test
cmc
fnstcw
jns
aad
rolb
and
cmp
fisubs
jo
mov
xor
stc
mov
mov
cmpsb
std
out
dec
es
sub
stc
pop
xlat
ror
and
mov
mov
test
xor
imul
pop
pop
cld
xchg
loop
es
js
and
jns
or
cmp
fs
add
arpl
inc
xchg
int
addl
pop
enter
xchg
and
stos
scas
cmc
in
stos
jl
adc
iret
xchg
ja
lcall
fdivrl
out
add
sbb
push
sub
and
jne
aas
mov
push
fstps
push
add
mov
int3
out
je
xchg
stc
in
mov
call
outsb
fs
iret
pop
out
push
ret
lock
or
or
stos
mov
mov
mov
and
popf
mov
enter
xchg
sub
sbb
mov
xchg
and
loop
cltd
std
sub
or
xchg
sub
or
sbb
in
sar
cs
and
xor
sub
inc
dec
popa
dec
in
inc
or
sbb
cli
lods
test
stos
xchg
int
jg
mov
add
int
sbb
ret
pop
jle
movsl
mov
aas
in
xchg
cmc
push
mov
push
jno
ss
cmp
or
andl
enter
out
vcvtps2dq
addr16
xchg
das
fs
pop
ror
outsb
aad
add
adc
sub
jl
je
scas
add
and
loopne
sub
cmpsb
mov
inc
mov
lods
pusha
stos
mov
sub
ljmp
outsb
sub
lahf
push
push
loope
mov
sti
sbb
jae
jae
push
dec
add
adc
pop
dec
jmp
fwait
cwtl
fcompl
insb
and
cld
movsb
adc
adc
cmp
lret
jmp
sbb
adc
lock
jns
sbb
cs
les
insb
pop
or
es
fistpll
push
paddd
cmp
addr16
cmpsl
xor
push
in
pushf
icebp
mov
xchg
jg
cmpb
addr16
idivb
sub
xorl
lret
ret
xlat
ror
fmull
push
cmc
std
clc
aaa
push
jg
ffreep
fimuls
out
lret
and
mov
mov
mov
cmpsl
movsl
mov
cmpsl
lahf
stc
lods
loope
mov
sub
pusha
pop
xor
js
in
out
lods
out
jb
xchg
data16
stos
scas
imulb
mov
ss
ror
or
or
inc
je
hlt
fs
leave
mov
out
xchg
insl
movsl
cmp
int
dec
xor
imul
and
xor
jge
mov
fs
mov
lcall
mov
rclb
or
ss
sbb
sub
push
sbb
lods
arpl
mov
xor
into
push
hlt
xlat
and
or
cmp
dec
pop
sbb
leave
call
mov
insl
addr16
pop
jnp
xor
mov
xchg
addr16
cmc
movsl
repnz
enter
cmpsl
jp
push
mov
pop
jae
sbb
inc
adc
lds
sbb
shl
cmp
sbb
dec
jp
mov
repnz
mov
nop
mov
sbb
cmpl
cld
dec
movsb
mov
cmp
sub
mov
arpl
xor
lds
mov
inc
orb
cs
shlb
dec
aam
dec
dec
nop
aaa
mov
ss
inc
unpckhps
and
cmc
xchg
cs
inc
lret
add
push
xchg
inc
xorl
jmp
repnz
fistps
mov
inc
xchg
sub
ret
adc
mov
cs
mov
not
ljmp
sub
cmp
in
idiv
into
js
mov
aaa
call
shll
out
sbb
fldenv
js
in
inc
ss
jns
xlat
push
cmp
xchg
cmp
movsl
mov
cmpsl
mov
and
shl
gs
fs
adc
mov
inc
cmp
and
es
stos
adc
rol
jbe
hlt
jno
add
js
add
sub
mov
ret
cmpsl
call
pop
sbb
out
pop
push
fiaddl
sbb
inc
jbe
movl
cmp
mov
mov
hlt
lods
xor
rorb
test
outsl
mov
repz
push
jnp
fimuls
bound
loope
es
pop
and
inc
adc
jns
insb
jae
xor
mov
outsb
shrb
jne
xor
sub
out
movsb
sbb
lock
cmpsl
outsl
jle
jp
test
call
inc
divl
adc
lea
or
lcall
sub
mov
lock
adc
sub
test
mov
jae
xchg
je
ljmp
cmp
adc
lahf
enter
movsl
into
mov
xchg
xorl
xchg
add
loop
nop
fisubs
adc
jne
lods
push
lret
subb
sub
ds
cli
test
push
jbe
cmp
xlat
push
sbb
xor
jge
inc
or
notl
movsb
ficomps
mov
sbb
mov
ds
push
in
sbb
pop
dec
jge
movsl
mov
xchg
mov
jnp
sub
not
xchg
and
jae
sbb
out
insb
stos
int
inc
cmc
ss
popf
push
lods
fimull
push
xchg
pushf
negb
dec
xchg
in
push
jnp
mov
shl
push
add
outsb
fldt
jo
jns
pop
icebp
xor
out
mov
scas
dec
stos
ss
jo
and
xchg
hlt
xchg
sub
into
mov
call
jmp
pop
add
and
jmp
xor
mov
or
cmp
mov
sub
sub
ror
mov
mov
aaa
inc
aaa
push
sti
xchg
xchg
inc
mov
inc
lret
mov
jb
xor
or
out
repz
push
mov
sub
fcoml
or
cmp
aad
mov
mov
pop
mull
mov
arpl
xchg
dec
pusha
mov
sahf
ljmp
sbbl
stos
push
add
sbbl
lock
add
mov
lcall
fildl
clc
fsts
ds
aas
mov
cltd
insl
popl
pushf
xor
jnp
jb
sub
fistl
cmp
add
push
outsb
sbb
sub
sar
adc
adc
mov
shlb
pop
call
push
pop
pusha
add
sub
mov
fcoms
fwait
dec
cmp
lea
jb
cmpsb
icebp
addb
lret
inc
adc
mov
call
inc
fdivl
push
pop
jmp
popa
sub
cmpsl
test
adc
jl
into
movsl
mov
mov
lds
call
adc
mov
es
sti
cmp
cltd
push
lahf
mov
and
adc
push
icebp
fadd
add
andl
in
push
mov
cmp
xchg
push
push
mov
test
ret
adc
mov
sbb
pop
sbb
push
push
test
xlat
push
xchg
mov
je
jmp
dec
into
das
rorl
xor
mov
imul
mov
adc
pop
popa
adc
mov
mov
dec
or
adc
clc
jecxz
inc
dec
aas
xor
sub
push
call
pushf
sbb
mov
icebp
outsl
mov
jb
jbe
imul
pop
inc
add
add
icebp
loope
cmc
pop
sub
out
gs
in
mov
js
mov
aad
mov
push
dec
stc
and
jecxz
pushf
pop
jo
cmp
es
insb
ss
int
jg
stc
fwait
pop
movsl
add
sahf
pop
out
sbb
pushf
and
loopne,pn
xor
pushf
enter
xor
repnz
addr16
cmpsb
mov
mov
das
fcom
and
push
das
insb
jmp
dec
jl
shlb
lock
frstor
ret
pusha
ret
call
imulb
hlt
lds
pop
adc
aad
adc
jo
inc
fbstp
jecxz
jnp
aam
xchg
lcall
xchg
inc
test
add
mov
loopne
push
mov
mov
stc
pusha
mov
lock
decl
pop
adc
push
xor
pop
and
shlb
leave
gs
sbb
out
scas
and
lret
repz
nop
fs
mov
hlt
mov
mov
mov
push
inc
adc
pushf
jg
mov
mov
add
out
add
jl
push
shrl
sbb
mov
push
cli
pushl
imul
jmp
dec
les
mov
fnstenv
jle
jne
test
ret
sahf
sub
lret
xchg
popa
sbb
dec
fadds
ljmp
push
ds
icebp
int3
mov
fistpll
ret
mov
lock
push
or
hlt
rcrb
add
cmp
jnp
jo
mov
jge
xor
push
adc
out
cs
add
iret
shll
hlt
outsb
aam
xor
push
jb
push
loop
nop
add
jo
fdivrl
enter
sbb
cmpsb
dec
in
sub
xor
mov
in
push
mov
aas
pop
fiadds
jg
ror
inc
loopne
pop
jmp
xchg
push
dec
cld
mov
xchg
rcrl
pop
loopne
cmpl
movsb
clc
push
lods
int
mov
xor
add
sahf
xor
push
xor
xchg
das
cmpl
outsl
jo
dec
mov
out
mov
lock
dec
sub
cwtl
xor
push
pop
mov
mov
mov
adc
pushf
daa
data16
xor
mov
aad
scas
roll
pop
xchg
or
mov
cmp
jg
and
sbb
inc
sbb
jbe
mov
or
push
call
loope
enter
adc
mov
push
jecxz
inc
mov
popa
stos
add
ret
inc
repz
mov
jb
add
push
in
rep
test
xor
rcll
int3
pop
ror
ret
popf
mov
xchg
ffreep
rol
xchg
scas
and
cmpsb
sub
or
push
mov
nop
add
inc
mov
lods
outsl
or
or
mov
mov
xorl
ficoms
pusha
ds
xor
jbe
jg
and
imul
test
jnp
scas
add
ja
pop
data16
insl
cltd
mov
call
nop
xchg
mov
fdivrs
xchg
pop
mov
out
pop
xor
hlt
xor
sbb
xchg
in
mov
popf
and
pop
jp
cltd
lcall
stos
dec
mov
pop
lods
insl
out
mov
inc
hlt
lods
rol
xor
mov
xor
pop
jmp
push
dec
mov
outsl
sahf
lods
xchg
loope
fld
pop
nop
or
xchg
cmp
add
or
mov
or
sub
call
mov
cmp
pop
mov
jge
pop
sub
and
sbb
mov
in
mov
and
fists
push
or
ljmp
add
cmc
imul
inc
cmc
add
jno
mov
dec
cmp
in
pop
cmp
mov
pcmpgtw
and
aam
sub
xor
lahf
imul
and
insb
push
mov
std
and
fistpll
add
lret
or
imul
mov
mov
dec
and
mov
enter
dec
xor
mov
adc
jmp
or
add
mov
lods
xor
pop
inc
inc
xor
sub
fdivr
movsl
leave
js
stc
lds
aas
xchg
stos
add
adc
lods
push
push
push
cltd
in
mov
fs
jb
or
stos
pop
stos
out
pop
jbe
ljmp
inc
mov
or
jmp
inc
clc
mov
jo
push
jg
movsl
stos
inc
xor
xor
aas
xor
and
jo
in
imul
aaa
xor
mov
jbe
mov
pop
push
jbe
xchg
inc
loope
aaa
mov
xor
aad
ss
les
test
bound
lea
hlt
je
popf
mov
fbstp
dec
pop
pop
mov
inc
jecxz
lcall
movsb
ret
push
adc
dec
loopne
lods
and
add
jecxz
fwait
dec
sarb
inc
inc
xadd
std
loope
jge
xor
cmpsb
fsubs
shrb
xchg
or
or
cmpsb
or
cmc
divb
js
mov
outsb
incb
aam
ds
lcall
fimull
fdivp
cmc
sbb
cwtl
adc
mov
inc
lret
out
and
jns
xor
sti
pop
add
mov
pop
shl
adc
cs
sbb
mov
mov
adc
fwait
mov
push
mov
add
insl
fidivl
sbb
lods
mov
cmp
mov
push
xor
xchg
icebp
mov
cmp
test
stos
mov
mov
jp
mov
clc
sub
loope
dec
adc
bound
fwait
jne
or
jae
cld
xchg
or
shl
gs
mov
out
mov
outsl
xor
arpl
mov
mov
sarl
dec
jae
mov
push
and
bsf
std
or
mov
xor
mov
sub
dec
lods
fstp
xor
mov
frndint
enter
fdivl
pusha
mov
jecxz
add
sarl
sub
jmp
mov
adc
xor
je
add
push
mov
jbe
dec
xchg
add
or
or
shrl
cmc
push
push
add
popa
ret
mov
out
xchg
mov
cmp
mov
int
mov
dec
in
outsb
pop
in
fistl
subb
rcll
jnp
add
sub
int3
arpl
xchg
lahf
add
icebp
das
sub
xor
mov
orl
int3
imul
outsb
mov
or
inc
in
xor
fs
mov
ljmp
daa
pop
fs
aad
out
mov
movsb
xor
aaa
stos
jb
or
in
pop
cli
and
daa
xor
pusha
adc
call
adc
mov
pop
cmpsb
das
mov
jmp
call
xchg
cmp
fidivl
cwtl
mov
or
pop
je
into
sbb
mov
insl
xchg
xchg
add
scas
add
push
add
mov
mov
mov
lcall
and
out
sub
sbb
rcl
sbb
out
push
inc
adc
mov
xchg
sarb
jecxz
jg
add
test
ret
jnp
sub
or
mov
xchg
cmp
push
sarb
aam
arpl
mov
fs
outsl
in
icebp
pop
int
push
mov
push
adc
jne
dec
in
or
sub
loope
in
test
push
and
loope
mov
dec
testl
daa
outsl
sub
cltd
lret
xchg
push
push
add
stos
push
leave
adc
dec
stc
mov
arpl
maxps
mov
imul
and
pop
jbe
sbb
jle
jno
cmc
or
jne
or
inc
imul
sahf
call
and
int
std
insl
jae
mov
adcb
xchg
mov
push
cld
pop
adc
push
test
jns
cmovnp
pop
cwtl
inc
push
push
adc
scas
lods
cmp
adc
pop
jne
repnz
mov
fdivrs
xchg
mov
push
and
pop
loope
test
mov
mov
jne
jge
xchg
xchg
xor
pop
cld
or
outsl
push
addr16
outsl
hlt
int3
xor
adc
cli
mov
jge
push
mov
gs
xor
add
fwait
in
stc
addr16
rolb
ss
stos
jne
mov
dec
add
xor
and
out
in
sub
dec
call
iret
loop
cmp
lcall
jae
cmc
adc
test
inc
sub
je
mov
pop
pushl
xchg
lds
pop
push
mov
pop
dec
cmp
sub
mov
xor
or
cmp
aaa
sub
fs
lds
mov
push
icebp
lret
push
sub
cmpsb
aad
test
adc
add
pop
js
out
jle
in
repz
pop
mov
jae
mov
jno
jp
sbb
xor
jle
push
pop
mov
push
cmpsl
mov
aad
jp
popa
scas
add
outsl
ss
pop
subl
ja
repnz
pop
fimuls
shl
mov
xor
pop
bound
mov
mov
enter
andb
je
test
lock
fmuls
jns
jnp
mov
adc
shll
mov
in
call
insb
xor
outsb
xorb
mov
fildl
dec
in
inc
dec
aaa
scas
test
mov
ljmp
inc
call
aas
adc
enter
inc
int
jo
dec
mov
shl
lahf
stc
ljmp
pop
mov
jp
ror
popa
imul
mov
mov
ss
test
pop
cmp
inc
sbb
in
push
cmp
pop
scas
fsubs
subb
xor
xchg
pop
imul
sahf
sbb
adc
add
aad
dec
add
and
jne
xor
jg
inc
decb
mov
push
fwait
aad
cmp
and
push
ja
push
pop
test
aam
sub
shlb
paddsb
test
sub
push
inc
jmp
loope
adc
inc
jno
sbb
xlat
sub
outsb
cmp
and
or
xor
inc
sahf
test
out
cld
xchg
adc
xor
xchg
mov
or
mov
scas
out
xor
jno
enter
es
ja
sbb
mov
xchg
inc
mov
jecxz
and
cmp
jecxz
lds
leave
pop
daa
movsb
jae
fsts
loop
mov
jp
fcmovnu
inc
push
incb
jmp
mov
ret
je
cmp
mov
jbe
push
jns
sbb
mov
xor
test
pop
xchg
or
stc
pop
cli
rcll
testb
and
jle
ret
sub
jb
jge
push
and
mov
inc
ljmp
subb
inc
fs
cs
pop
xor
jo
gs
add
jno
test
sbb
insb
cmpsb
repz
call
lret
testb
daa
pop
arpl
xchg
pushl
mov
xor
cmp
push
sub
sub
mov
test
divl
loopne
in
push
mov
cs
pop
fimull
mov
push
jo
iret
or
leave
outsl
pop
pop
mov
sub
or
addr16
cs
std
lret
jo
mov
lcall
mov
lahf
push
mov
icebp
mov
cmc
mov
test
shrl
pop
sbb
gs
mov
xchg
jl
fdiv
call
std
pop
ss
fwait
repnz
cs
sbbl
daa
pop
ss
and
fstps
push
jbe
jle
pop
ficomps
movsl
pop
sbb
inc
scas
mov
inc
idiv
jne
loopne
out
pop
cld
fbstp
xchg
push
daa
push
and
fisttpll
lret
mov
int3
test
xor
mov
or
pop
call
dec
shrb
adc
into
popa
inc
sbb
loope
cltd
pop
adc
push
xchg
jle
int
int
pop
inc
mov
out
adc
test
add
inc
pop
dec
scas
pop
xchg
push
add
inc
jne
bound
inc
sahf
inc
ljmp
dec
push
into
out
pop
clc
popf
or
popa
adcl
xchg
jp
lods
fcmovne
pop
and
nop
pop
js
loope
mov
pop
mov
push
ret
loopne
inc
jne
shlb
mov
rep
ss
inc
or
sbb
xchg
mov
addr16
cmp
int3
pop
sbb
fisubs
js
add
stos
sbb
icebp
sub
ss
mov
clc
jae
mov
inc
dec
sbb
sub
sub
fstpt
mov
adc
daa
add
adc
ficoms
fildll
pop
xchg
sbb
test
sbb
dec
or
lods
or
and
movsl
jbe
cmpb
iret
add
xor
xor
ret
aam
out
daa
adc
mov
push
push
bound
cmpsl
gs
lods
push
jns
mov
mov
mov
or
adc
jne
in
mov
cwtl
pushf
push
neg
inc
mov
xor
sub
fs
pop
sbb
std
dec
test
sbbl
cltd
dec
ja
add
aas
adc
mov
inc
test
lcall
add
int
add
xor
movsb
and
xchg
add
mov
jge
js
and
mov
and
ljmp
dec
jno
cld
jle
fwait
jbe
insb
mov
cmp
loop
push
shlb
fmuls
jecxz
lds
and
sahf
aaa
adc
lret
push
hlt
daa
mov
loopew
cmp
jp
xor
stos
adc
jnp
push
ret
mov
push
das
cltd
mull
and
dec
adc
in
sub
gs
fnstsw
call
call
test
or
mov
or
push
pop
sub
test
pop
xor
dec
dec
sbb
ffree
je
mov
inc
jle
mov
aas
cs
xor
xor
jns
fcmovnu
add
dec
notl
or
jb
push
inc
aaa
call
imul
xchg
aad
xor
mov
scas
or
mov
lret
mov
test
add
and
pop
adc
adc
add
mov
cmp
pop
fs
lahf
fldcw
mov
add
lahf
fildll
jg
jnp
leave
cld
into
mov
jp
ret
sbb
mov
rcrb
in
xchg
inc
mov
and
pop
push
mov
xor
or
mov
xchg
xchg
daa
add
sbb
mov
adc
mov
ret
pop
loopne
aam
aam
sbb
in
rcrl
bound
aam
aam
push
subb
push
sub
sbb
stos
js
sahf
cmp
movsb
cmp
push
mov
ret
push
sub
pop
mov
inc
lret
sub
jb
gs
mov
xorl
stos
sub
subl
push
enter
test
and
aam
ret
orb
xor
pop
mov
scas
pop
scas
in
sub
aaa
sahf
jnp
cmp
jle
mov
fistpl
shl
sti
popa
insl
and
inc
sti
pushf
fiadds
outsl
test
lods
mov
je
mov
mov
push
shl
push
ret
orb
aad
das
rclb
clc
add
pop
sbb
cmp
loope
into
stos
fs
dec
add
xchg
pop
or
pop
mov
shlb
cmp
dec
mov
inc
aam
leave
bnd
pop
ja
sub
cmp
dec
in
sti
mov
clc
shll
jnp
push
testb
in
rcr
arpl
fwait
push
xchg
aam
push
sbb
inc
enter
pop
fwait
mov
jns
ficoms
fstpt
popf
std
dec
out
stos
aam
xlat
cmc
sbb
fidivrs
popa
dec
pop
pop
pop
jp
outsl
dec
and
mov
imul
popl
pop
enter
sti
pop
push
call
orb
ss
adc
sub
xchg
pop
mov
jle
int
sbb
test
mov
inc
call
ds
mov
pop
push
push
ret
inc
and
jae
xchg
xchg
shl
xor
in
dec
and
scas
adc
push
stos
std
fcoml
popa
dec
push
xchg
cmpb
fs
cmp
fucomp
xor
ret
sti
adc
out
out
loop
bound
scas
aam
lock
daa
scas
dec
mov
dec
inc
aad
outsb
loope
sti
jno
jmp
cmpsl
jl
out
add
test
adc
lcall
lods
mov
stos
jge
jo
mov
push
dec
clc
fcoml
and
lds
test
sub
pushf
sub
incl
out
outsl
cltd
arpl
call
push
lcall
push
into
scas
lret
sub
lret
ret
aaa
in
fldenv
xchg
sbb
or
ss
jge
push
sti
faddl
test
and
cmp
popf
adc
jecxz
adc
jb
sbb
cmpsl
jo
out
sub
or
mov
aad
jnp
lods
out
sub
adc
mov
out
imul
dec
pusha
inc
clc
mov
call
mov
aad
loopne
icebp
insl
ja
nop
pop
xor
stos
je
mov
les
int
and
nop
xchg
rclb
dec
and
loop
shl
sbb
lock
fsubr
inc
push
push
xlat
jbe
inc
stos
adc
or
pop
xchg
dec
shr
mov
sub
mov
mov
aad
jne
xor
div
push
xor
cmc
neg
lret
imul
xor
ljmp
test
or
xlat
repnz
or
cli
xchg
test
in
jecxz
addb
push
orl
cwtl
pop
mov
lods
pop
xchg
cmp
cmpsl
sbb
xchg
das
push
add
insl
xchg
xor
cmp
aam
xlat
mov
cwtl
jns
mov
jp
les
idivb
mov
dec
cmp
adc
lds
jp
cs
aam
mov
adc
mov
and
dec
fisubrs
mov
mov
in
mov
mov
cmpsl
mov
pop
stos
jl
cld
jecxz
sbbb
pop
negb
jno
push
scas
in
inc
add
add
mov
imul
xchg
into
in
mull
movsl
pop
push
push
inc
js
popa
pop
hlt
push
mov
dec
jnp
cmp
jge
les
xor
fdiv
out
inc
outsl
aas
out
pop
shl
movsl
xchg
adc
cmpsb
test
inc
inc
inc
push
add
aam
mov
rsm
mov
sbb
mov
dec
ja
js
test
mov
loop
iret
mov
iret
push
stos
ficomps
lea
and
sub
mov
cmp
aad
xchg
mov
rcll
icebp
and
mov
inc
insl
mov
ljmp
insl
into
jno
in
mov
mov
shl
or
movsl
fiadds
mov
movsb
test
dec
inc
stos
insb
add
negb
cmp
xchg
cli
pop
xchg
dec
fidivrl
jp
insl
rclb
xor
sarl
jno
or
fnstenv
add
xchg
popa
lods
mov
xlat
ds
movsl
pop
or
stc
jecxz
pop
cltd
fidivs
sti
or
jae
jne
hlt
ss
jae
jp
addb
cmp
rcrb
and
pop
jne
xchg
pop
imul
cmp
pop
inc
mov
pop
mov
repz
mov
addb
fsubp
repz
cmc
jo
xchg
jg
mov
jmp
mov
mov
dec
repz
or
popf
addb
outsl
stos
loopne
subb
orb
repz
orb
push
dec
xchg
mov
xchg
imul
adc
and
es
test
xchg
jbe
fdivr
add
mulb
sbb
aaa
adc
inc
out
mov
sbb
arpl
out
push
xor
jg
adc
mov
movsb
xor
add
movsl
lret
cmp
fcoml
or
pop
ljmp
sub
repz
sti
cwtl
adc
jmp
cmp
rcrl
pop
dec
lock
mov
clc
mov
sub
and
mov
push
jo
push
neg
neg
lret
imull
sti
icebp
shrl
adc
jns
lods
fdivs
aaa
mov
jecxz
push
add
push
int3
inc
lds
cli
repz
adc
and
mov
test
pop
xchg
adc
popf
or
xor
outsl
xor
xchg
sahf
sahf
and
movzbl
lea
xor
adc
arpl
test
inc
ror
lea
xor
leave
mov
shl
sti
mov
cmc
sbb
std
and
insb
stos
jns
jae
inc
jg
dec
mov
imul
cmp
and
roll
sub
adc
mov
add
mov
mov
xlat
scas
cmp
push
add
mov
out
jnp
outsb
ret
jo,pn
add
pop
lret
cli
xor
frstpm(287
sbb
fbstp
in
dec
stos
bound
lahf
lock
cs
ret
xlat
fstps
loopne
outsl
add
push
xchg
dec
outsb
mov
mov
push
hlt
aaa
outsl
rolb
sbb
aam
test
pusha
mov
xchg
push
xchg
fistpll
lods
cmpsl
mov
add
pop
adc
outsb
xor
xor
shll
dec
xor
inc
fists
pop
mov
mov
les
and
sbb
imul
mov
scas
push
push
ret
adc
pop
aas
enter
scas
adc
sbb
rcll
jne
pop
pop
sub
lock
lret
xor
jne
pop
xchg
mov
xor
jbe
int3
or
js
fstpl
adc
mov
and
fidivrs
and
mov
mov
jp
add
jl
popl
mov
push
sub
pop
out
sahf
popf
imul
lods
mov
sbb
push
popa
xchg
bound
mov
enter
mov
jp
pusha
jmp
idivb
inc
fists
test
out
cld
sub
push
std
push
inc
mov
xor
test
mov
fwait
clc
mov
or
xor
test
popl
ds
popa
sbb
push
ret
iret
mov
scas
or
or
mov
fldcw
out
movsb
push
aad
and
cmp
mov
sub
push
mov
pop
sub
mov
addb
lahf
mov
jae
jecxz
mov
sti
aaa
mov
push
pop
and
xchg
jmp
jge
mov
enter
mov
inc
pop
add
push
scas
push
in
js
fistpl
rcll
sbb
addr16
orl
shll
cmp
mov
xor
lods
mov
sbb
movsb
jecxz
pushf
jb
stc
movsl
movsb
movsl
inc
fstpt
and
loope
inc
adc
test
and
iret
ljmp
fcomi
icebp
jo
sub
in
add
cmp
fidivs
leave
or
jge
dec
int
out
adcb
jecxz
js
jmp
mov
into
jecxz
ljmp
dec
out
das
push
dec
pop
fs
mov
push
adc
push
out
inc
pop
dec
cmp
sar
push
mov
fsubs
or
loope
in
push
inc
mov
sbbb
jbe
dec
jmp
mov
sbb
push
into
mov
cmp
cli
push
jns
lcall
xchg
cmp
pop
mov
jno
scas
xchg
ljmp
fnstenv
pop
dec
ret
iret
ljmp
cmpsb
aad
xlat
cli
in
jl
sub
jmp
jle
mov
rol
aaa
aad
test
mov
test
data16
cwtl
inc
out
rep
dec
call
lock
and
repz
pop
shrb
jno
fiaddl
sub
movsl
scas
add
fisttpll
cld
jl
lahf
cli
mov
in
add
icebp
jne
nop
and
mov
leave
mov
data16
pop
add
mov
rolb
pop
jae
xlat
sbb
gs
or
dec
pop
dec
rcr
scas
out
dec
jg
mov
rorb
nop
and
or
ss
jne
loope
cmp
push
jae
lcall
test
push
and
movb
inc
mov
dec
adc
cmpsl
adc
mov
mov
je
test
leave
loope
scas
scas
inc
fisttpll
imull
adc
dec
mov
in
rorl
aad
pop
jbe
mov
push
in
pop
mov
lds
sub
das
adc
lea
out
imul
les
dec
jo
arpl
adc
push
ficompl
lret
xor
int3
fisubl
insb
xor
inc
add
jecxz
sarb
inc
int
je
loopne
fstpl
inc
push
xchg
xor
repnz
xor
mov
es
fisubs
jo
call
cmpsb
in
test
test
es
pop
xor
sub
hlt
sub
lcall
sbbl
push
add
movsl
inc
mov
popa
push
repnz
inc
mov
dec
mov
mov
and
sub
inc
das
lcall
push
dec
mov
jmp
std
icebp
pop
push
in
jmp
jg
outsl
in
adc
stc
and
jp
xor
inc
dec
insb
jb
loop
mov
sbb
and
xchg
inc
movsb
mov
aad
pop
shll
xchg
jbe
je
cmp
xchg
xorb
arpl
jo
fcoms
cmp
mov
jne,pt
pop
lret
sbb
stos
mov
dec
fnstsw
or
jnp
lcall
cmp
repnz
fildll
aad
fdivs
push
push
jbe
daa
or
arpl
xchg
movsb
push
fmulp
shlb
cli
cmp
push
cmpsb
outsl
fistpl
xor
push
xchg
sub
fdiv
pop
jecxz
outsb
push
lahf
dec
pushf
lret
xchg
mov
push
repz
lcall
mov
or
scas
insl
dec
mov
or
xorl
sbb
push
hlt
xchg
push
aaa
push
mov
jnp
inc
pop
inc
xor
pop
repnz
imul
adc
mov
adc
movsl
scas
ja
and
push
cmpsb
add
lret
add
pop
in
mov
stc
fdivl
mov
in
das
sbb
xchg
mov
loope
jno
or
jne
int
loope
leave
mov
ljmp
es
pop
inc
cmp
int
out
sbb
shlb
cli
push
xchg
sbb
cmp
xchg
xchg
cmp
outsl
shr
xor
sbb
loope
in
ds
mov
mov
lds
xchg
scas
faddl
xchg
int
or
and
test
xlat
mov
lret
pop
cmp
push
dec
dec
mov
pop
mov
push
ss
push
jne
mov
roll
and
mov
mov
xor
xchg
push
das
lcall
xchg
ret
flds
aas
lds
pop
ds
jmp
scas
dec
jle
jns
incl
mov
bound
mov
int3
push
pop
es
lahf
ss
stos
mov
addr16
hlt
lods
outsl
cs
scas
fbld
cmp
ss
dec
pusha
sbb
fs
sti
sub
loop
xor
scas
add
sub
or
or
iret
movsl
jae
jle
jns
jmp
sbb
mov
pop
data16
add
in
outsb
imul
sub
add
cmp
icebp
xchg
push
mov
bound
leave
fidivs
out
mov
dec
fwait
in
push
leave
fcoms
jmp
xor
pop
scas
js
lretw
push
in
scas
cmp
lock
jne
adc
sbb
testl
dec
mov
fdiv
ficompl
pop
ds
ret
jb
shll
ss
xchg
bound
aad
mov
or
bound
sub
das
cmp
jbe
jecxz
push
mov
xchg
push
push
ret
push
inc
std
sub
std
mov
dec
mov
adc
push
lods
outsb
rcl
ret
dec
push
aad
sbb
fst
out
jns
or
xchg
or
xor
mov
loopne
mov
jecxz
ds
adc
in
jl
popl
jmp
dec
arpl
mov
out
push
dec
pop
push
add
clc
pop
ds
aas
cmp
aam
add
gs
xchg
xchg
lret
lods
xchg
pusha
xchg
mov
ds
xchg
imul
stos
mov
outsl
xchg
mov
push
aad
mov
mov
or
and
mov
repnz
fisubrs
andl
test
sub
jne
jp
daa
xchg
xchg
cmp
pop
js
inc
ret
dec
stc
dec
push
insb
sbb
daa
dec
pop
pop
or
popa
xor
xchg
outsl
pusha
push
insb
enter
pop
mov
mov
das
xchg
fisubl
imul
pop
sti
outsb
addl
mov
sub
pop
in
pushf
xor
fs
imul
loop
sbb
testb
and
lds
adcl
mov
sar
pusha
pop
loope
mov
jp
and
pop
cmp
xor
aaa
add
mov
add
fs
jmp
pushf
fimuls
cmpsb
add
xor
and
mov
xchg
clc
sbb
or
lahf
jb
int
inc
jge
dec
out
mov
les
incl
inc
cmp
mov
test
add
nop
nop
cld
cmpsl
ljmp
mov
add
call
and
in
mov
or
push
fiadds
mov
rorb
xchg
jmp
cmp
and
shrl
pop
mov
loope
shrl
jg
lcall
pusha
test
std
lcall
xlat
loope
and
sub
pop
js
mov
and
mov
loop
mov
out
repnz
or
sbb
adc
xlat
xchg
jne
sub
lea
push
mov
add
jmp
lahf
andl
insb
leave
add
imul
xchg
lds
test
lret
pop
repnz
push
add
sub
in
adc
mov
fisubs
bndldx
mov
pop
pop
shlb
icebp
jb
push
sahf
pop
inc
xchg
push
aad
fstl
clc
and
push
cmp
mov
and
mov
pop
loop
test
jb
cli
xor
rorl
xor
xor
in
leave
push
inc
pop
sarl
cmpsl
cmp
jmp
popa
and
xchg
add
cmp
inc
fistpl
xor
xor
and
imul
mov
ja
call
test
loop
mov
cmp
mull
xchg
rcrl
jb
mov
mov
xchg
fmulp
adc
les
and
xor
mov
jbe
or
ja
xchg
push
lahf
scas
popf
adc
dec
popa
gs
aad
test
pop
notl
lret
and
add
nop
sub
test
out
into
sbbb
inc
cmp
popa
daa
jns
incb
push
push
push
into
pop
push
lock
xchg
mulb
inc
xchg
inc
subps
repz
les
xchg
js
ja
aaa
mov
cwtl
add
push
push
insl
push
dec
pusha
and
jae
clc
xchg
jbe
rorl
fcompl
js
sbb
sbb
in
flds
rcl
add
push
icebp
fwait
pop
cmp
mov
dec
loop
mov
xchg
jno
icebp
lret
inc
scas
iret
cmp
sahf
fs
mull
mov
shrb
lods
mov
rcrl
xchg
pop
fstl
pushf
jecxz
mov
cmpsl
mov
add
not
jp
dec
jae
fidivrl
sub
push
add
dec
scas
adc
leave
mov
xchg
jl
rcrb
pop
ret
pop
scas
lds
inc
inc
pop
std
cwtl
add
jle
adc
enter
xchg
fs
dec
test
lret
jns
cmp
mov
sahf
and
je
and
mov
notb
repz
lret
inc
or
cmp
cmp
sub
xchg
nop
mov
or
ret
mov
mov
pop
addr16
push
cltd
sub
push
inc
mov
ljmp
movsb
popw
adc
or
add
cltd
xor
push
mov
out
xor
add
xchg
shll
rcll
out
fcmovnb
jns
sub
push
mov
adc
pop
gs
xchg
loopne
jne
xchg
fmuls
sub
xchg
dec
sbbb
mov
pop
loope
mov
jae
dec
sti
mov
and
and
mov
je
stc
stos
addb
and
mov
leave
inc
cmp
dec
inc
and
or
movsb
shl
mov
jl
jg
ret
imul
fs
mov
push
outsl
xor
pop
jns
fbstp
xor
aas
mov
icebp
xchg
push
xchg
loope
iret
jnp
in
fs
jb
cmpsb
loopne
fists
push
pop
jbe
das
cmp
cmp
mov
insb
mov
mov
push
cmp
ret
mov
mov
int
jle
and
pop
out
nop
dec
fcomps
ja
aam
mov
test
addr16
incl
test
inc
cmp
xor
cmp
jns
idiv
sub
sub
sbb
fisttpll
icebp
jmp
xchg
dec
push
fsub
ss
fcoml
cmp
ret
mov
call
push
lea
aam
push
test
xor
pop
adc
mov
clc
or
jno
sub
xchg
mov
mul
sbb
outsl
inc
out
addl
pop
out
in
push
xchg
inc
fldcw
mov
stos
shrl
dec
jp
in
pop
push
inc
stc
inc
and
jbe
xor
mov
add
insb
in
inc
cmp
insb
insb
push
lret
movl
mov
cmp
js
dec
in
fwait
pop
jmp
notl
sbb
xchg
mov
adc
inc
mov
inc
rorb
mov
in
mov
pop
lret
xchg
mov
dec
inc
cmp
xlat
pusha
jae
out
cmpsb
repnz
or
push
xchg
cld
pop
sub
mov
pop
shll
adc
in
add
cmp
mov
inc
xchg
gs
inc
stos
faddp
push
into
decl
mov
cmc
adc
sti
testb
rorl
sbb
dec
or
leave
loope
fisubs
mov
mov
jmp
test
sub
inc
dec
mov
adcb
mov
xchg
test
fiaddl
mov
jecxz
mov
push
loop
stos
push
dec
or
imul
or
dec
gs
int
repz
mov
dec
test
cmp
add
jg
jg
dec
repnz
xor
cld
outsl
test
rcrb
jmp
jp
xchg
xor
scas
push
adc
pusha
lret
mov
movmskps
stos
jmp
lods
or
jb
mov
cmpl
and
xchg
push
addl
sbb
loop
and
jge
pop
inc
adc
xchg
xlat
xchg
andb
arpl
mov
xor
dec
mov
mov
into
mov
aaa
xchg
roll
inc
xchg
inc
fimull
daa
loopne
lock
lahf
add
js
add
popa
sarb
jge
fsubrs
and
cmp
xchg
sub
ds
scas
xchg
flds
pusha
or
cwtl
arpl
and
call
adc
cmp
lcall
stos
dec
aas
jl
movb
cmp
sbb
pop
movsb
and
inc
mov
pop
icebp
call
rcr
push
jo
popf
fwait
add
dec
outsl
and
inc
cmp
jge
xor
shl
cmp
xchg
stc
js
dec
jl
lock
pop
nop
rcrb
out
mov
mov
and
loopne
ror
test
dec
test
xchg
rcll
std
addr16
int3
faddl
sub
or
cmp
lcall
pop
inc
sbb
in
mov
out
pop
ja
jg
idivb
call
popf
test
sbb
xchg
enter
cli
mov
bound
pop
lcall
hlt
and
mov
sbb
pop
hlt
adc
inc
xchg
mov
sahf
xchg
or
xchg
push
rcr
cli
dec
negl
popf
pop
mov
jbe
pop
daa
imul
push
mov
out
jns
or
jle
outsb
shll
jp
cmp
push
pxor
stc
cmp
sahf
push
das
arpl
sbb
jge
mov
pop
cmpb
mov
cwtl
jbe
inc
adc
shrl
jp
mov
xchg
pop
mov
out
mov
xchg
push
insl
jp
sub
and
pop
ror
adc
cli
adc
or
sbb
subl
and
icebp
add
std
jae
mov
push
and
adc
mov
jp
push
fcoml
jmp
nop
cmc
sub
sahf
scas
pop
jl
mov
add
stc
xchg
mov
jbe
aad
mov
pop
test
iret
icebp
push
xchg
ljmp
andl
lret
adc
aam
inc
cmpsl
mov
adc
mov
out
clc
add
sub
mov
jno
fcos
in
jmp
shl
jge
imul
pop
xor
xorb
dec
push
out
lods
scas
add
inc
xchg
movsb
adc
mov
mov
les
dec
push
add
mov
push
push
lock
mov
imul
jmp
mov
hlt
cs
data16
adc
mov
xor
mov
push
jmp
push
sub
pusha
mov
aam
insb
xchg
loope
push
inc
pop
inc
das
notb
inc
fstl
xorb
test
repnz
mov
cmc
call
bnd
push
xrelease
leave
push
test
stos
mov
in
and
mov
arpl
and
mov
mov
cmp
sarb
pop
lcall
enter
icebp
jno
or
stc
stos
ficompl
lods
mov
add
stos
dec
iret
or
sbb
bswap
push
adc
sbb
test
hlt
shll
mov
aas
jnp
xor
gs
lods
aad
lret
lcall
mov
jae
sub
cmpl
sub
push
lea
lret
xor
shrl
xor
loop
lds
fwait
inc
je
cld
adc
stos
fisubrs
lcall
in
adc
aas
mov
dec
sub
mov
sub
inc
outsb
push
insb
push
jmp
mov
shlb
push
dec
cmpsl
pusha
fimuls
je
fisubl
xchg
stos
inc
les
fcom
and
scas
cmp
mov
lods
mov
fistpll
cmpsb
cwtl
shr
sti
pop
add
inc
jne
mov
lahf
fldt
insl
push
mov
cmpsb
mov
jne
imul
lods
push
xor
insl
icebp
xor
cs
or
enter
lods
hlt
add
daa
inc
cld
mov
loopne
pop
loop
sbb
xchg
push
xor
repz
lock
mov
addr16
out
mov
adc
cmp
push
sub
in
test
mov
shlb
cwtl
pop
push
add
std
pop
aam
das
mov
adc
mov
movsb
push
mov
inc
push
push
xchg
mov
inc
or
xchg
lods
sbb
js
pushl
lret
adc
pop
cmpsb
lahf
xor
repnz
jb
add
xor
adc
jl
fisubs
sbb
or
lcall
mov
js
add
push
aaa
xor
test
xor
addr16
je
mov
vpandn
dec
inc
jbe
cwtl
scas
ss
dec
jp
scas
imul
fwait
mov
jmp
lods
add
jge
inc
mov
ret
sbb
in
movsl
mov
jnp
dec
jbe
xchg
xor
rorl
and
and
and
es
push
xchg
sbb
jae
sub
mov
adc
mov
jne
cmpsb
xchg
jo
jecxz
mov
fistpll
cltd
pushf
jb
and
aaa
stc
and
push
add
out
out
cmp
and
jl
shlb
sbb
arpl
cmpsb
and
sbb
inc
add
push
pop
cmp
sub
outsl
test
jne
js
aam
jle
repnz
mov
jmp
out
jae
je
mov
daa
sbb
mov
je
sub
fwait
call
movsb
repnz
incl
fisubrs
xchg
push
test
and
jge
and
inc
mov
xor
mov
mov
jns
inc
data16
ljmp
and
aam
dec
ficoml
jmp
mov
jnp
cmp
xor
mov
rolb
gs
jle
popf
lods
cmc
mov
scas
push
imul
das
dec
test
dec
mov
ret
push
sti
pushf
push
pop
jp
xchg
repz
and
pop
pop
pop
cmp
pop
test
xchg
xor
push
mov
mov
test
rolb
or
xor
add
pop
sbb
fsubs
repz
push
pop
lods
arpl
sbb
and
push
or
dec
push
aas
hlt
jecxz
sbb
or
inc
sti
int
negl
jge
or
sbb
pop
xchg
mov
in
mov
in
data16
mov
sub
jp
inc
fdivs
pop
mov
sub
cmpsl
incb
adc
sahf
sahf
ficoms
xchg
jb
adc
and
jle
nop
xchg
out
sti
mov
out
mov
adc
sbb
mov
dec
rcll
in
mov
push
testl
in
arpl
sub
mov
imul
out
push
xchg
in
mov
mov
dec
cs
add
adc
and
hlt
imul
adc
sub
xorb
push
cmp
ja
dec
lds
pop
loope
dec
mov
cmpb
add
mov
es
cmp
je
cwtl
mov
xchg
push
cmpl
movsb
push
negb
mov
or
std
and
push
push
push
jo
mov
les
xor
jg
sahf
cmp
out
cmp
push
jmp
and
lret
bound
movsb
add
push
push
mov
aam
rcrl
arpl
aad
pop
inc
xor
adc
jnp
int
popa
rorb
inc
adc
ret
mov
f2xm1
cltd
jno
mov
xor
jg
inc
or
iret
test
or
out
std
push
scas
mov
sahf
js
ja
mov
or
add
cli
sub
out
cld
push
or
lock
mov
pop
enter
dec
mov
xor
inc
fcomp
int3
sbb
jle
cld
add
sub
pushf
decb
incb
movsl
nop
out
call
nop
bound
out
jo
add
cltd
xchg
enter
lds
dec
push
and
mov
shrl
test
mov
xchg
aad
cmp
jecxz
mov
and
xor
icebp
test
repz
test
test
lods
in
xor
mov
outsl
add
push
dec
xor
pop
orb
push
cmpb
mov
out
add
dec
gs
mov
fwait
lret
inc
test
inc
jae
fucom
sbb
test
insb
outsb
sbb
or
scas
inc
out
adc
dec
inc
pushf
mov
push
mov
xor
mov
xor
sub
lock
xorb
out
pop
xor
into
cltd
xchg
and
cli
sub
lods
orl
rcr
xchg
jnp
mov
pop
test
shlb
mov
push
outsb
pop
rcrl
mov
outsl
pop
jae
inc
movb
sub
sarl
xchg
fcmovu
fwait
stos
outsb
or
add
mov
hlt
push
sarb
push
popf
fwait
xchg
fcmove
ret
jo
out
aaa
mov
fisttps
rcll
cmp
in
mov
jmp
call
jecxz
pop
pop
dec
jb
ret
adc
mov
add
mov
adc
xchg
sarb
inc
lea
fs
or
paddusw
call
mov
mov
inc
xchg
mov
hlt
das
dec
mov
mov
lods
pop
add
fs
cmp
scas
inc
fwait
pusha
call
add
frstor
pop
cltd
sbb
inc
lds
orl
xchg
sbb
test
pop
inc
mov
mov
mov
aas
pop
pushf
pop
aam
add
fucom
push
test
and
mov
xchg
jns
pop
mov
fs
pushf
mov
sub
jns
sbb
ljmp
incb
js
or
cmp
xchg
roll
and
push
orl
daa
fs
adc
push
mov
push
pop
pop
inc
aas
cmp
push
mov
mov
test
lea
mov
cmp
outsb
popl
or
push
xor
negb
pop
dec
xchg
inc
push
cld
fs
int3
mov
xchg
mov
lock
sub
mov
test
xor
out
daa
xchg
mov
mov
sbb
dec
jae
cmp
cmc
xchg
dec
orl
sub
mov
mov
pop
pop
pop
nop
jnp
scas
movsl
pop
fidivrs
push
out
jb,pt
xchg
cmp
cmpl
jnp
pop
sub
push
into
sub
cmp
lret
mov
fisttpll
out
outsl
pop
add
out
addr16
and
mov
incb
sub
mov
xchg
jl
mov
in
pop
push
dec
leave
mov
and
mov
sub
mov
mov
rol
mulb
lds
xchg
insb
lcall
inc
dec
xchg
fldt
shl
mov
push
fnsave
sbb
or
int3
sub
add
mov
outsb
lods
int3
imul
stc
add
das
or
or
loopne
and
or
jge
cmp
lret
js
xchg
imul
iret
sbb
ds
aas
call
sbb
push
lret
xlat
xchg
in
xchg
enter
je
xchg
mov
dec
stos
inc
jae
inc
sub
or
popa
fcoms
pop
inc
jns
mov
adc
mov
add
push
push
mov
pop
ljmp
cmp
stc
xchg
js
stc
push
pop
mov
mov
mov
jnp
mov
out
jb
iret
jecxz
aas
push
sbbl
add
sbb
imul
das
rclb
xchg
mov
dec
jb
ja
mov
les
adcl
pop
or
sbb
scas
imul
icebp
mov
sbb
test
iret
stos
and
daa
add
pop
mov
loopne
cld
out
pop
orps
test
sbb
rorl
and
pop
mov
aas
inc
movsl
mov
jb
aad
std
add
aaa
jb
xchg
sbb
mov
jp
dec
jnp
ret
sub
dec
andb
and
in
and
rcll
mov
repnz
sbb
fmull
mov
fstpl
call
sbb
cmpsb
sbb
movsl
pop
sbbb
xlat
into
nop
scas
data16
stc
gs
add
push
movsb
pop
pop
dec
outsl
mov
jbe
sbb
fucomip
sub
lds
push
jg
test
rcr
pop
cmp
xor
clc
das
and
scas
mov
insl
pusha
lcall
lea
fisubrs
push
cmp
xor
sbb
jae
icebp
es
xlat
subb
sbb
sti
push
nop
rclb
js
jns
push
cmp
sbb
add
xchg
xor
mov
or
pop
and
sbb
mov
adc
lret
mov
fisttpl
les
pop
lret
pop
int3
jl
xor
enter
es
test
jbe
sub
popf
push
mov
icebp
pop
dec
out
adc
push
push
loopne
push
aam
addr16
sbb
fistpl
xchg
repnz
icebp
xchg
out
leave
mov
sbb
mov
das
jb
loop
jge
cmpsb
sbb
and
test
fucomip
fidivrl
test
cld
inc
push
jg
out
faddl
xchg
out
movsl
xchg
sub
outsl
push
and
xor
enter
mov
rcll
repz
jo
xchg
in
mov
xchg
repnz
aad
cmp
and
mov
sub
mov
mov
nop
xchg
jne
push
inc
mov
aaa
push
lods
jl
mov
dec
stos
adc
xchg
inc
dec
cmpsb
mov
xor
push
lods
push
ret
mov
add
mov
in
mov
dec
and
jno
xchg
dec
and
sub
or
mov
jb
inc
js
mov
jae
jp
insb
inc
aam
sbb
std
sti
repnz
sbbl
jge
dec
addb
movsb
pop
mov
sbb
add
cmpsb
and
inc
pusha
lahf
movsb
adc
cmp
lock
push
cld
inc
int
mov
pop
jae
insb
lds
mov
jl
dec
bound
lret
pop
fstpt
push
mov
jnp
insb
xchg
xchg
movsl
and
inc
jne
lahf
in
cltd
cld
subb
rcrl
stc
jne
scas
inc
ror
jmp
jmp
mov
sbb
jecxz
sbb
hlt
cwtl
outsb
push
aas
cmp
into
cmovbe
adc
pop
fistpl
push
mov
add
sbb
cltd
cmc
das
das
lret
cmpsl
mov
dec
inc
sbb
daa
pop
xor
lcall
mov
jns
test
dec
inc
jecxz
scas
push
and
in
and
mov
mov
push
inc
push
and
popa
movsl
leave
insb
jnp
mov
rcl
push
test
inc
mov
pop
add
insb
cmp
call
mov
mov
adc
lock
jmp
mov
sub
scas
js
jmp
aam
jne
rclb
adc
and
dec
xor
mov
xchg
fcomps
and
inc
mov
lods
ret
xchg
and
jo
icebp
imul
mov
mov
and
imul
cmp
pop
sti
pop
xchg
repz
push
testl
or
adc
or
adc
test
fldcw
in
push
cmp
push
xchg
shrl
js
fstpt
xchg
daa
test
and
outsb
sub
mov
dec
dec
lods
pop
ds
pop
lcall
push
movsb
sbb
sub
adc
arpl
mov
xchg
adc
mov
dec
jge
adc
scas
imul
faddl
cld
push
inc
ret
data16
fs
mov
mov
add
cmp
jb
fwait
stos
pop
push
jne
inc
inc
sti
mov
cmp
add
je
in
mov
in
cs
mull
add
dec
nop
sti
pop
ficoms
aam
or
pop
push
je
addl
push
loopne
inc
mov
add
loope
dec
repnz
push
cmpsb
adc
cmp
push
lcall
mulb
xorl
dec
add
xchg
adc
cmpsl
jae
nop
push
mov
ljmp
xor
and
pop
push
fwait
insl
shll
ja
pop
adc
popf
hlt
arpl
outsb
mov
inc
sub
insl
jno
loop
add
ds
xchg
call
lods
jnp
pop
or
cmp
mov
jns
in
sbb
cld
std
repnz
xabort
popa
sbb
fsubs
mov
or
xchg
test
fs
add
call
xor
sbb
add
fmull
andl
insb
ja
pop
je
dec
pop
jns
mov
lods
and
test
rcll
fcmovb
xor
xlat
dec
stos
cmpsl
lcall
repnz
inc
shufps
mov
les
or
push
mov
cmp
scas
inc
xor
or
xor
aaa
repnz
imul
mov
leave
or
xor
ja
out
cld
mov
sub
xchg
je
pop
adcl
pop
adc
mov
push
adc
iret
stos
jbe
je
fistpll
mov
push
cmc
or
push
pushf
cmc
in
xchg
lds
lods
push
popf
sbb
xchg
scas
in
push
xchg
mov
lret
pushl
fstps
jo
test
mov
push
loopne
outsb
ja
and
lea
inc
ss
mov
jb
xchg
imul
sbb
dec
call
int
cli
and
test
pushf
loopne
mov
xor
pop
or
adc
shll
mov
fisubrl
stos
add
leave
push
stos
je
mov
jg
insl
jne,pn
cmp
stc
or
bound
xchg
dec
or
lea
dec
adc
cmp
popa
mov
mov
addl
or
add
push
insl
mov
dec
mov
insb
mov
mov
mov
sbb
js
jmp
stos
mov
jnp
cmp
lods
jne
mov
mov
mov
sarb
cmc
mov
jle
aas
insw
cltd
cwtl
adc
pop
cmp
fdivs
mov
ljmp
mov
loope
or
cmp
and
lock
mov
sub
sahf
cmpsb
inc
mov
icebp
jne
jnp
pop
or
mov
sub
jbe
dec
out
sti
jb
mov
adc
adc
adc
mov
cmp
or
fcoms
add
cmp
pop
mov
xchg
mov
cmp
out
jbe
outsb
ror
pop
imul
icebp
push
dec
inc
ret
inc
cld
cmp
push
cmc
lock
fldt
shll
ret
jnp
outsb
sti
gs
nop
lcall
cmp
push
mov
dec
and
ret
mov
repz
out
hlt
mov
inc
xchg
dec
ja
and
and
mov
adc
jge
or
lahf
fimuls
movsl
push
out
add
cmp
test
jmp
jmp
or
mov
lock
movl
stos
orb
es
js
pop
arpl
ss
out
mov
out
sbb
sarl
sub
addl
dec
data16
lods
mov
xor
mov
idivb
in
mov
sbb
push
jecxz
out
adc
cmp
addr16
sub
sbb
mov
and
dec
jg
push
and
stos
lods
push
ss
dec
ljmp
sbbl
clc
mov
shlb
adc
nop
subl
xchg
xor
xor
nop
pop
dec
sub
pushf
and
dec
pop
sub
lea
in
mov
mov
js
dec
mov
cmc
and
xchg
stc
sub
daa
call
or
negl
cmpsl
dec
bound
fistpl
outsb
push
jae
repz
lock
lret
jge
cmp
xchg
out
lahf
ret
mov
out
xchg
and
movsb
addb
stc
mov
loope
jbe
js
sub
push
call
mov
or
pop
xor
pop
sarl
cli
jp
hlt
jae
mov
aam
shll
and
xchg
jecxz
xor
jle
pop
adc
mov
pop
cld
or
add
lods
push
adc
sti
adc
mov
shld
es
push
lea
push
adc
aam
or
aad
add
mov
rorb
mov
mov
aad
fnstcw
jns
ljmp
xlat
sbb
or
leave
mov
and
stc
jo
loopne
or
movsb
fwait
dec
xor
sbb
jne
ja
jbe
test
in
inc
add
jne
testb
gs
js
mov
ret
inc
and
cwtl
sub
sahf
fucomp
mov
add
inc
mov
push
call
stos
repz
jge
shll
mov
les
movsl
or
push
int
aad
loopne
add
dec
mov
bound
enter
cwtl
or
subl
inc
popf
sbb
flds
push
aaa
fs
ljmp
subb
jne
addr16
jg
inc
mov
add
daa
mov
test
bound
xchg
fcoms
push
ror
add
shlb
aas
mov
mov
rcr
push
xchg
xor
icebp
or
cmpsb
mov
jg
jp
jb
roll
in
mov
es
cltd
js
aas
scas
shll
inc
mov
movsb
roll
aam
aam
dec
pop
in
dec
repz
inc
or
xor
mov
cltd
cwtl
stos
or
cmp
cmpsb
mov
jno
lock
test
jns
in
data16
enter
dec
sub
in
xor
int3
dec
loope
sub
cmp
add
inc
jp
or
push
addr16
dec
push
in
insl
xchg
mov
mov
inc
out
lods
xchg
in
cmp
xchg
mov
fnstcw
aaa
and
aad
cmpsl
jmp
mov
and
mov
fwait
xchg
pusha
bound
movsl
add
in
dec
and
cli
fidivs
sub
sbb
add
and
or
push
add
dec
in
pop
inc
std
call
int
dec
out
test
xor
pop
sbb
outsl
push
add
les
and
sti
sbb
repz
pop
dec
sbb
xor
push
cmpsl
in
sub
sub
ljmp
ljmp
and
loop
mov
pop
sti
jmp
lret
xchg
jg,pn
mov
dec
jmp
loope
mov
mov
cmp
das
fldlg2
shll
shll
je
cmp
inc
das
incl
mov
sub
in
scas
mov
push
pop
outsl
xchg
mov
insb
jecxz
das
mov
aaa
out
mov
fnstcw
inc
xchg
out
jae
out
stos
sbb
icebp
cs
sub
lea
cld
andl
repnz
cli
lea
and
dec
mov
je
mov
inc
je
dec
mov
or
jbe
out
push
inc
lahf
cmc
cmp
add
cmc
sbb
les
scas
int
sub
ret
mov
cmp
mov
jno
inc
jns
adc
stos
adc
and
insl
rcrb
sbb
lahf
xlat
cmp
jbe
dec
dec
sbb
lods
iret
mov
xorb
jo
xor
int3
fwait
mov
dec
das
aad
nop
loope
cmc
pop
xchg
xchg
cmpsb
add
cmpsb
and
fs
stos
pop
pop
test
data16
xor
dec
iret
and
sub
cmp
dec
jge
pop
cmc
cmp
aas
mov
std
mulb
sarl
cmc
dec
gs
fs
dec
jnp
sbb
mov
xchg
lret
fstl
xchg
sub
out
sbb
gs
repnz
stc
fsubr
out
pop
sub
push
inc
idivl
aaa
xor
inc
and
aad
sahf
inc
cltd
xlat
sub
sbb
in
mov
stos
aas
aaa
dec
leave
xor
mov
cmp
loop
xor
mov
add
sahf
pusha
fwait
adc
scas
data16
and
fists
les
fmul
xchg
je
inc
inc
das
addl
sub
repz
mov
leave
imul
cmp
cmp
leave
cmpsb
sub
push
xchg
add
jecxz
xchg
dec
pop
sbb
xchg
jns
jge
lidtl
xchg
cmp
pop
push
call
mov
movsl
fnstenv
inc
int3
out
fs
inc
sahf
xchg
mov
addr16
and
mov
out
mov
cmp
mov
jnp
pop
inc
lea
jbe
movsl
sub
lods
sub
mov
test
fldenv
or
iret
cmp
sbb
lcall
ret
sbb
cwtd
sbb
and
mov
mov
daa
xor
das
sub
jl
push
outsb
in
add
push
aas
repnz
imul
pop
mov
scas
rolb
in
js
dec
lret
mov
lods
mov
sub
push
push
xchg
adc
popa
lcall
jmp
pop
push
nop
push
movsl
sub
mov
iret
daa
and
mov
pop
mov
push
push
dec
imul
mov
movsl
rorb
out
xchg
mov
loope
jnp
repz
dec
ret
mov
int
dec
adc
mov
mov
and
or
rclb
int
icebp
adc
shr
js
and
cmp
clc
in
aad
mov
ret
dec
test
in
push
jno
in
rorl
cmovo
and
adc
negl
push
or
mov
pop
cld
js
int
out
mov
out
int
sbb
lock
cmpsl
divl
sbb
cmp
inc
push
pop
aaa
dec
data16
mov
xchg
leave
pop
inc
fistps
ja
rcrb
and
push
mov
imulb
mov
fcoml
je
sub
push
cmc
or
inc
fldt
cli
fiaddl
push
loop
lock
push
mov
mov
mov
fs
cwtl
mov
lahf
hlt
xchg
and
popa
pop
int
shrl
adc
mov
insb
or
daa
enter
std
and
pop
repz
pop
frstor
mov
and
aad
push
push
push
cmp
adc
testb
and
add
add
or
mov
andl
mov
xchg
push
jbe
lds
push
sub
jbe
mov
test
and
pop
mov
dec
fstpt
out
jecxz
mov
pop
mov
mov
mov
push
movl
push
sub
iret
cmpl
adc
ss
rcl
in
out
mov
add
push
and
mov
pop
add
push
out
into
cmpsl
sbb
jp
or
lcall
lcall
sub
xor
jne
ds
shrd
popf
out
jg
inc
or
xlat
sahf
out
or
pop
cmpsb
ss
imul
mov
mov
push
sbb
dec
movsb
and
call
pop
inc
scas
outsb
adc
in
pop
lcall
imul
rcrl
out
push
das
or
rcrl
dec
push
jg
mov
es
and
fwait
xor
sub
je
cmp
jno
push
jbe
sarl
inc
outsb
dec
scas
sub
imul
out
inc
inc
sub
push
test
cs
xor
xchg
xor
jl
xor
inc
fimuls
insl
outsb
fisttpl
sahf
sbb
mov
push
pop
push
cmpsb
insl
into
mov
cwtl
or
dec
repnz
shll
sbb
mov
dec
sbb
imul
sub
icebp
push
and
outsb
dec
inc
in
movsb
data16
icebp
jmp
cmp
add
fidivrs
scas
lea
sbb
jmp
mov
jmp
out
mov
jmp
adc
sbb
lods
test
lock
sbb
es
icebp
leave
into
sbb
mov
cld
in
mov
mov
inc
out
cmc
outsb
add
inc
aam
adc
adc
mov
jl
jbe
mov
negb
mov
inc
jp
xor
xor
mov
gs
jne
sbbl
arpl
adc
call
rorb
sub
push
lea
mov
inc
xchg
iret
sbbb
addr16
test
cmc
jge
add
test
pop
mov
nop
mov
sub
sub
push
jl
icebp
mov
rclb
push
push
inc
fisubrs
rcl
inc
daa
test
in
sahf
ret
push
lods
jecxz
xor
jno
leave
ret
js
add
mov
cmp
mov
xchg
into
push
jo
loopne
xor
fisttpll
pusha
xor
lahf
mov
lahf
add
sub
addr16
and
sbb
mov
aaa
xchg
int3
sub
mov
jno
jno
xchg
outsl
enter
jg
notb
enter
adc
stos
rcll
fistpl
dec
in
jecxz
fiaddl
ja
lea
sub
movsb
xlat
pop
call
inc
pop
cs
mov
and
or
dec
addl
popf
or
jge
inc
cmp
mov
imul
xor
das
cmpsl
and
or
int3
and
dec
mov
sub
xchg
scas
mov
push
sbb
xor
cmc
scas
mov
outsl
mov
or
lods
adc
lea
jl
xor
pop
dec
push
in
mov
xchg
dec
pop
xchg
cmp
sub
out
arpl
adc
add
pop
dec
repz
dec
das
aam
jb
xlat
sti
adc
or
movsl
inc
mov
sub
lss
clc
jecxz
inc
sbb
cmpsl
mov
popf
push
xlat
dec
cmpb
fsubr
push
add
and
popf
pop
sahf
sbb
insb
mov
test
imul
xchg
sub
mov
aad
push
push
js
subb
xor
fstps
inc
loope
fwait
movsb
leave
std
dec
and
cmp
orb
jmp
sbb
and
push
cmp
pop
negb
scas
test
mov
inc
sahf
cmpsl
and
pop
test
rorl
dec
aas
test
add
sub
pop
in
inc
iret
repz
pop
xor
jmp
fs
bound
repz
call
faddl
iret
movsb
daa
mov
iret
mov
and
xor
in
mov
lds
loop
dec
dec
sub
clc
sti
jge
mov
jecxz
xchg
mov
push
add
mov
sub
in
sahf
sbb
pop
in
pop
in
les
mov
scas
or
fmuls
jle
mov
addb
imul
xchg
sub
and
out
and
fs
and
scas
cmp
push
out
sahf
push
mov
test
push
dec
xchg
loopne
mov
leave
xchg
mov
jecxz
mov
cltd
cmpsb
mov
mov
pop
sbb
xor
xchg
mov
jb
sbb
negb
sbbb
sub
inc
xchg
mov
pusha
adc
addr16
xchg
or
sbb
addb
stos
mov
sbb
jno
test
mov
lea
and
or
sbb
loope
fimuls
push
popa
in
mov
xchg
push
xchg
xor
dec
sub
dec
subb
nop
imul
add
sbb
add
lahf
or
xor
push
sbb
xor
sub
sbb
add
or
int
dec
aas
mov
xor
lods
xchg
push
sbb
call
or
andb
add
sbbl
inc
imul
mov
leave
add
inc
outsb
notb
sbb
lods
cmp
roll
in
fcomi
jecxz
or
pop
icebp
or
icebp
dec
jp
movd
in
add
inc
jo
or
nop
push
aas
xchg
js
mov
scas
loope
fsubs
mov
mov
jo
jmp
mov
pop
add
mov
and
in
cmp
sbb
sti
xchg
inc
mov
rorb
mov
insb
popa
jmp
sub
cltd
xor
shrl
popa
inc
and
fisttpl
mov
jmp
push
sbb
inc
iret
stc
cmpsl
in
mov
outsl
mov
add
or
and
daa
stc
imul
xchg
mov
cmp
sbb
or
inc
pushf
lcall
xchg
add
xchg
mov
xor
push
dec
scas
push
cmp
mov
xor
popf
cmp
lds
add
popf
je
dec
mov
fidivs
jl
lock
inc
mov
push
mov
sahf
inc
push
xlat
adc
mov
movsl
dec
jl
jae
mov
or
dec
test
fs
jnp
ret
mov
pop
xor
out
ljmp
test
jl
dec
mov
dec
xor
pop
rorl
mov
adc
push
push
pusha
subb
mov
test
lods
gs
insb
mov
enter
mov
leave
inc
mov
je
iret
jne
and
sbb
sub
or
jl
call
loopne
cmp
sub
sarl
aad
mov
jle
push
je
loopne
jae
jbe
mov
cmp
test
les
ljmp
and
and
mov
das
mov
mov
fiadds
push
clc
add
push
jl
loope
lret
push
xchg
dec
pop
popa
xchg
jecxz
stos
mov
inc
mov
xchg
cmp
movsl
fcmovu
mov
mov
outsl
loop
or
lea
outsb
mov
dec
test
fs
cld
cmp
test
and
out
ljmp
xor
sub
mov
cld
pop
xchg
into
sbb
inc
stos
or
movsl
mov
scas
or
shrb
xlat
adc
lret
mov
mov
mov
sbb
pop
pop
testb
dec
mov
add
add
imul
and
sbb
mov
roll
loope
sub
std
push
push
fcomi
adc
jae
add
test
leave
aam
pop
jo
test
pusha
lock
cwtl
or
adc
push
dec
dec
scas
mov
rol
mov
mov
insl
sbb
and
fwait
jo
jno
lods
loopne
lock
xor
and
mov
inc
push
add
mov
push
pushf
mov
je
lds
mov
mov
add
jl
popf
mov
xor
pop
cmp
dec
cmp
dec
sbb
push
xchg
mov
sub
outsb
in
int
into
iret
add
scas
hlt
push
pusha
and
testb
pop
pop
xlat
lock
mov
push
push
mov
popf
xchg
xchg
out
ret
aad
mov
dec
daa
imul
cmp
clc
movsb
inc
outsl
dec
adc
jno
sub
loopne
fiaddl
cmp
and
cmc
cmp
or
lret
mov
sbb
js
mov
xor
bnd
jne
je
adc
cmp
xchg
cmpsb
cli
clc
mov
dec
pop
lods
push
imul
push
pop
sub
jle
jg
fdivp
movsl
xor
out
mov
insl
push
scas
jge
insl
sub
xchg
aas
xor
stos
mov
inc
fwait
rorl
addr16
shrb
stos
dec
cmp
jnp
sub
xchg
iret
add
or
dec
clc
xlat
call
js
pop
lods
imul
sub
lock
xchg
inc
lret
or
adcb
mov
pop
movsb
aam
in
repnz
jl
cmp
inc
xchg
lock
xor
ret
repz
sub
test
jnp
cwtl
push
mov
mov
jne
mov
xor
push
je
jg
xlat
negl
jno
mov
xor
js
imul
jb
xlat
add
dec
lods
pop
in
push
loope
and
into
fldt
xlat
mov
arpl
adc
repz
xchg
cmp
xchg
scas
mov
movsb
pop
add
loopne
repz
mov
imul
inc
js
ja
repz
push
push
jl
jge
mov
sub
ds
dec
xor
lods
mov
fisubs
xor
lret
inc
cmp
in
or
sbb
std
jmp
leave
test
xchg
movsb
push
rclb
js
inc
xchg
fsub
mov
shrl
test
jb
mov
or
stos
xor
xchg
mov
adc
jecxz
sti
mov
ds
enter
mov
mov
aas
ret
gs
cmp
mov
inc
jmp
and
mov
add
add
sbb
in
xlat
jnp
adcb
inc
xchg
aad
mov
inc
jg
fstl
fadds
lret
lock
mov
repz
push
push
repz
fistl
push
push
cmp
stos
sbb
push
xor
jle
mov
and
mov
addb
stc
inc
cmc
test
js
mov
xchg
das
lcall
mov
incb
xor
int3
ja
lea
cwtl
jmp
jae
lahf
jne
icebp
cmpsl
mov
jp
pop
testl
inc
jg
fcmovnbe
sti
dec
mov
loope
leave
or
cmpsb
addl
insb
mov
fwait
popa
call
pop
cmp
add
sub
mov
push
jl
daa
jnp
mov
mov
adc
push
jmp
sbb
add
pop
addr16
adc
or
lock
enter
xor
shlb
pop
sbb
dec
fsubrs
vdivpd
xchg
mov
xor
ja
shl
xor
adc
loop
jo
stos
jnp
sbb
push
sub
push
addr16
movsb
cwtl
sbb
rcrl
inc
insl
cmp
dec
sub
int
aad
jmp
std
stos
cmp
dec
shrb
fwait
test
arpl
mov
sub
cmp
lock
and
adc
pop
sbb
or
imul
sub
inc
outsl
dec
shr
add
pop
jns
mov
ficomps
lock
out
fists
lahf
stc
mov
sbb
scas
push
jl
xor
push
push
xchg
pop
mov
jg
or
les
pop
cwtl
outsl
rorl
in
scas
fists
and
pop
xchg
insb
mov
xchg
inc
lds
sub
dec
or
or
popf
mov
incb
imul
push
lahf
pushf
out
cmp
rdrand
and
std
imul
fs
sbb
mov
fwait
pop
push
or
addr16
dec
loope
mov
loop
cmp
inc
outsl
cmp
enter
xlat
ret
push
adc
sbb
sti
les
das
fistpl
sahf
push
in
add
and
cmpsb
into
enter
icebp
add
ficomps
ljmp
leave
push
mov
test
outsb
loopne
jo
and
shlb
out
cmpsl
fucomip
xchg
fdivl
mov
mov
inc
outsb
fsts
mov
xor
fs
cmc
fdivl
sub
sbb
jne
insb
inc
gs
xchg
rolb
mov
cmpl
push
xchg
out
push
add
stc
mov
sub
test
cmp
mov
sti
sbb
mov
ljmp
sub
dec
cld
cmp
xchg
in
ficompl
or
rcr
popf
xchg
mov
adc
in
in
test
int3
filds
fcmove
xchg
data16
fs
es
inc
lods
dec
cmp
leave
lds
or
sahf
sbb
mov
fidivl
fisubs
test
pop
dec
adc
xor
test
imul
mull
cmp
xchg
sbb
negl
push
sub
lock
aad
xchg
in
mov
scas
fwait
pop
push
and
loop
mov
add
sbb
or
or
mov
mov
ja
fldlg2
daa
hlt
ret
push
adc
cmc
cld
pop
mov
dec
add
sub
adc
fdivr
pop
leave
cmp
sub
fisttpl
outsb
and
aas
sti
pop
add
mov
fistpl
sub
loope
icebp
and
repz
sub
in
add
out
int
pop
sub
test
in
and
jne
aam
pop
xchg
bound
stos
jle
sbb
popf
data16
mov
in
sbb
mov
inc
stos
and
out
adc
enter
mov
pop
sub
jno
cmp
add
movsl
jecxz
push
rep
test
push
test
xchg
int3
pop
inc
push
cli
pop
cli
jmp
adc
xchg
add
loope
inc
shll
je
mov
xor
cmp
sub
mov
mov
jns
int3
add
mov
jne
mull
pop
arpl
cli
popa
cwtl
sar
lea
pop
cmpsl
popf
pop
pop
adc
jno
fnstenv
insl
movl
xchg
sub
cmp
cmpsb
cmp
pop
loopne
dec
iret
sub
jnp
dec
adc
icebp
pusha
out
cmc
in
xchg
add
cmpsb
dec
cmp
sbb
push
out
fs
mov
das
arpl
push
push
or
mov
mov
mov
and
ds
jb
inc
fcompl
pop
cmp
xchg
or
lret
shll
ss
cmpsb
lret
pop
fnstcw
dec
jb
fwait
stos
jne
adc
or
pop
sahf
int3
jl
popf
cs
sbb
cmc
mov
mov
xchg
inc
rorl
push
cmpsb
sub
jmp
mov
jo
fldcw
shll
sbb
inc
lahf
push
mov
adc
sub
jge
imul
mov
cmpsl
std
sbb
adc
mov
xchg
mov
int3
jp
fmul
pop
lds
repz
lcall
mov
ja
xchg
fdivl
test
clc
mov
lods
insb
bound
lods
and
subl
mov
subb
cmp
push
cld
cmp
ret
in
movsl
out
xchg
xor
pop
ss
repz
xor
push
es
fcoml
es
xchg
add
in
cwtl
cmp
jge
sbb
mov
sbb
cmpsb
inc
jo
in
and
cmp
roll
sti
jle
rolb
je
inc
cmp
or
jecxz
popa
ret
cmp
pop
mov
scas
clc
sub
sahf
fwait
jmp
mov
lock
arpl
orl
push
sub
add
int
pop
sub
inc
outsl
scas
mov
xor
addl
sbb
jg
and
jbe
dec
inc
mov
test
mov
cld
mov
leave
outsb
jnp
lds
pop
aaa
mov
fnstcw
and
xchg
loopne
mov
in
mov
andl
push
orb
push
call
xor
pop
aad
out
mov
adc
or
pop
in
sbb
daa
sbbl
pusha
xor
or
add
mov
sbb
in
xchg
sub
mov
sub
mov
shrl
dec
add
inc
or
stc
lcall
repnz
pop
pop
andl
scas
cmp
jmp
jno
and
mov
daa
sbb
mov
jbe
dec
call
inc
push
cmp
jnp
sti
mov
enter
dec
adc
mov
lret
xchg
jne
pop
mov
repnz
inc
adc
lods
repz
scas
mov
inc
lret
mov
dec
call
call
lods
xchg
int3
cmc
sarb
stc
mov
stc
inc
das
push
push
test
stos
mov
in
mov
push
inc
dec
cmc
lea
in
sub
cmp
fistpl
les
xchg
jl
js
test
jnp
sbb
and
jl
btr
pop
lcall
iret
inc
clc
lcall
idivb
iret
addl
js
nop
test
testl
iret
movsl
sbb
stos
pusha
mov
cmc
shlb
scas
adcl
xor
dec
and
adc
js
out
mov
das
pop
push
pushl
inc
pop
or
jecxz
adc
cmp
and
mov
loop
out
push
outsb
cs
jns
test
push
sub
jge
mov
imul
mov
sahf
mov
leave
call
jne
cwtl
add
rclb
insb
pusha
push
shrl
popa
jl
in
mov
fcoml
loop
or
out
sbb
mov
push
js
mov
mov
sbbl
mov
cmp
inc
xor
jecxz
push
xor
movsl
or
jbe
jecxz
ffreep
movsl
mov
loop
xchg
es
jg
mov
jns
mov
sbb
scas
xchg
or
roll
push
inc
movsb
adc
sub
test
out
nop
daa
enter
aam
add
rorb
xor
mov
push
out
cmpsl
sbb
mov
mov
inc
in
jae
mov
adc
or
mov
mov
add
in
inc
addr16
mov
mov
ds
sbb
xchg
jg
fcoms
shll
xchg
js
add
lods
lods
and
push
push
lods
mov
stos
cmp
push
cs
in
jnp
in
mov
pop
test
das
sbb
ljmp
sbbb
loop
iret
imul
push
fimull
adc
test
inc
xchg
push
orl
iret
es
sbb
clc
insb
or
test
in
adc
inc
lock
jecxz
popf
mov
dec
dec
and
jl
sub
mov
in
xchg
lods
popf
add
adc
loop
lret
in
pusha
jecxz
xchg
fsubrs
mov
clc
repnz
movb
loope
les
lcall
sti
rcr
idivl
insb
or
lock
lea
sbb
imul
mul
ljmp
mov
xchg
mov
dec
insb
jnp
push
rcr
cmp
out
cmp
mov
dec
fsubrl
add
jmp
pop
add
sub
es
push
bound
cwtl
pop
cmp
jne
in
mov
jb
aam
mov
lea
aad
xor
xchg
pop
repnz
push
adc
pushl
leave
push
sbb
or
std
and
mov
xchg
out
push
lcall
lahf
mov
sti
mov
aas
cmpsl
dec
aas
je
mov
jno
ret
or
out
loop
xchg
fcmovbe
xchg
sbb
bound
lret
adc
or
mov
lahf
and
sbb
jp
ss
or
cs
imul
sahf
sub
xor
test
adc
push
outsl
std
lods
orb
lret
aas
cmp
inc
loope
and
out
aaa
cmpsb
add
ja
and
int3
jecxz
jnp
xchg
jbe
insl
test
add
and
shll
lock
mov
pop
mov
xor
inc
movsl
push
test
sahf
outsb
clc
pushf
in
lock
cmp
fisubrl
es
sbb
and
nop
mov
fxch
fisubs
xor
xor
daa
xor
call
cmp
xchg
mov
ljmp
xor
inc
test
cmp
mov
pop
pop
daa
pop
fwait
ret
push
rol
insb
dec
mov
fwait
inc
sahf
sbbb
mov
fcomip
jo
mov
push
mov
dec
in
js
cwtl
inc
adc
and
int
insb
lea
out
jo
stc
sub
add
pop
mov
cmp
xor
adc
xchg
imull
xor
call
fisubrs
jmp
imul
mov
mov
xchg
and
or
inc
sahf
mov
das
gs
mov
scas
fidivl
stos
cmp
pop
add
pop
sub
and
aad
in
push
cltd
jne
pusha
xchg
fwait
xchg
jge
lods
mov
push
hlt
out
ds
push
add
enter
ror
add
outsl
mov
insl
ret
sbb
and
shrb
cwtl
mov
mov
and
gs
jno
lods
gs
ret
sbb
dec
shll
out
test
sbb
sub
mov
enter
vmovss
push
cmp
mov
aam
lock
shrb
dec
fisubrs
stc
and
and
xchg
daa
push
xchg
jo
xlat
bound
mov
add
xchg
scas
das
jmp
inc
out
xlat
jp
sub
sub
mov
enter
sub
xchg
push
jg
dec
es
imul
movl
jnp
out
mov
mov
push
mov
lock
and
in
xchg
dec
dec
nop
dec
jmp
cmp
inc
mov
inc
fidivs
jne
shrl
cld
cld
lea
test
add
lea
movsl
push
out
mov
add
ret
jae
sarl
loop
loop
fimuls
je
cmp
lcall
and
dec
jbe
fstl
jnp
or
lret
or
jg
hlt
push
and
sub
nop
push
cmp
xchg
mov
sbb
adc
aas
fildl
mov
cld
sub
mov
xchg
adc
cwtl
push
mov
repnz
jmp
mov
leave
in
pop
loope
dec
idivb
arpl
sbb
popf
jnp
pop
mov
pop
pop
in
test
adc
loopne
sahf
adc
xchg
jbe
repnz
and
hlt
jb
sar
mov
daa
mov
mov
cltd
xchg
ret
fidivrl
xor
pop
jae
lcall
popf
out
fstpt
addr16
jle
lret
mov
inc
cwtl
aaa
lret
repnz
les
jne
jecxz
xchg
jg
sub
fsub
jns
pop
pop
sub
jg
cmp
clc
or
sub
mov
pop
sbb
insl
add
xchg
push
cltd
ja
sub
and
or
push
fcompl
sbb
mov
push
hlt
cltd
enter
popa
push
imul
ficompl
push
and
les
cmp
nop
fstl
ljmp
in
pop
js
adcl
xchg
inc
xor
test
ss
inc
ffreep
xor
outsl
ljmp
push
scas
rolb
aam
mov
add
outsb
jae
cltd
fisubrl
xchg
xor
lods
jmp
leave
imull
imul
xchg
jp
xchg
inc
repnz
add
sub
or
adc
lret
lods
inc
sahf
es
cld
sbb
call
insb
cld
scas
mov
cli
and
aad
mov
mov
into
das
cli
push
movsb
adc
xchg
jecxz
lcall
sbb
cmpsl
inc
out
es
xchg
and
outsb
ds
cmp
mov
jecxz
push
inc
mov
cmpsb
dec
xor
in
xor
out
imul
and
push
xor
cmpsb
mov
xor
cmc
push
fcomps
movsl
sbb
je
jbe
sti
mov
gs
pop
add
pop
outsl
daa
ss
jnp
push
repz
int3
push
mov
inc
dec
jecxz
movl
xor
jo
mov
sar
call
xor
push
ficoms
cltd
mov
or
stc
movaps
jns
dec
cmc
xlat
mov
lock
jg
add
sub
cmc
sub
cmp
xchg
pusha
xchg
add
jp
lock
ficoms
fwait
inc
stc
cmpsl
mov
pop
ja
iret
jle
mov
mov
rolb
sub
aam
push
fidivs
pop
iret
sbb
pop
add
lcall
sub
hlt
push
aas
out
push
pop
jl
push
xchg
cltd
je
jnp
mov
add
cmp
stos
push
mov
add
out
mov
ror
out
loopne
mov
shrl
or
fs
in
adc
iret
push
inc
mov
adc
ret
sbb
lahf
push
mov
lods
and
cmp
mov
gs
inc
test
push
loop
imul
pop
movsb
add
loope
pop
mov
xchg
aad
aam
sahf
sub
hlt
outsb
ret
ja
in
shr
lret
ficoms
push
push
mov
adc
add
popf
jnp
xor
jp
xchg
sbb
xchg
aad
iret
arpl
pop
ljmp
fstpt
rolb
ret
fistpl
sub
clc
or
push
sbbb
jne
adc
mov
mov
pop
push
scas
xor
fs
mov
repnz
mov
and
mov
ret
fdivs
xchg
ret
lods
mov
jg
mov
daa
dec
push
inc
into
test
fs
aad
xor
test
es
mov
movhps
outsl
and
cmpsl
mov
cmp
add
cmp
mov
fcmovne
inc
outsb
cmpsl
stos
mov
xchg
repnz
sbb
pusha
aad
cltd
not
cltd
add
cmp
sti
cmp
std
mov
adc
dec
xchg
cld
daa
sub
scas
sbb
fistl
nop
pop
cmp
out
ja
mov
xor
mov
aas
mov
dec
add
nop
or
xchg
out
lret
sub
lods
push
xchg
clts
add
mov
mov
aam
in
lea
aad
pop
sbb
mov
and
test
jle
pop
sti
les
jl
pop
or
lods
cmpsb
pop
mov
mov
xor
movsl
sbb
dec
mov
loope
dec
movsl
lret
and
adc
inc
mov
out
ficoms
nop
cmpsb
xor
imull
add
lds
lea
inc
test
push
cmovne
mov
add
lea
aam
fmul
adc
push
decl
jge
sahf
cli
push
fidivl
stc
cmc
stos
and
and
jp
and
push
mov
std
int3
mov
cmp
cmp
lahf
xchg
push
sti
pop
mov
mov
stos
pop
add
lds
les
push
lahf
loope
inc
and
push
out
push
sub
push
cmp
fcmovbe
js
push
dec
in
mov
paddd
fidivrs
loopne
imul
sarb
shrl
cmc
push
bound
aas
mov
aad
jmp
data16
ret
arpl
popf
jecxz
and
cmp
aam
into
add
lods
push
jae
add
mov
add
test
push
dec
insb
adc
jae
fwait
cmp
sbb
cmpsl
arpl
inc
jge
mov
and
jg
imul
dec
push
sub
loope
ret
pop
cmp
push
mov
and
lret
cmp
jbe
push
lock
cmpsl
js
mov
mov
adc
test
das
xchg
jbe
pop
ret
adc
aad
dec
jmp
icebp
inc
adc
jge
sub
add
jb
pop
clc
push
test
lock
push
or
fstpl
out
not
arpl
fcomi
ljmp
add
xchg
test
jmp
mov
invd
cmc
imul
lods
sub
rcr
or
xchg
add
mov
lcall
jg
and
push
mov
lret
push
enter
and
test
push
jp
stos
xchg
insl
push
fs
inc
mov
or
insb
dec
jno
adc
jmp
cmp
mov
insl
clc
arpl
movb
flds
mov
stos
mov
jmp
outsb
pop
insl
jl
shlb
in
inc
lea
jp
addr16
loop
mov
jns
outsb
cmpsb
jl
cmp
lahf
repnz
in
jmp
jae
cmp
mov
or
pop
pop
and
bound
push
xchg
mov
lahf
push
jns
cwtl
xchg
lahf
jns
xchg
pop
cli
mov
adc
xchg
xlat
cmp
inc
xchg
ja
inc
or
sub
ja
jmp
test
insl
mov
xchg
out
js
fwait
loope
ds
push
icebp
cmpsb
cmc
mov
sub
sahf
pushf
xor
dec
jmp
mov
lret
enter
mov
addl
mov
push
dec
push
psllw
test
mov
lock
sbb
data16
pusha
in
jg
cmpb
mov
testb
mov
fldenv
fnstsw
xor
out
cmp
push
mov
out
test
mov
push
pop
xor
lea
xchg
and
jecxz
movl
leave
fucomp
popl
jns
rcrb
in
fidivl
fs
mov
int3
mull
imul
adc
dec
mov
xchg
rolb
or
aad
xor
pop
je
xchg
mov
int
jmp
mov
ljmp
mov
xchg
rcr
sbb
test
inc
sub
or
push
add
xor
movsl
adc
sbb
push
enter
and
jle
ret
inc
mov
inc
ret
sub
adc
fcmove
pop
fsubl
mov
xchg
and
lods
rcll
sbb
and
mov
hlt
test
pop
push
inc
fidivs
hlt
dec
mov
lods
ret
icebp
and
add
addl
daa
jno
cmp
jnp
mov
pop
push
aad
dec
arpl
arpl
xor
pop
fcoms
mov
jp
into
mov
push
jbe
cwtl
pop
cs
movsw
mov
hlt
ss
adc
out
shl
jnp
xchg
cmova
pop
jno
mov
shlb
aad
push
es
sub
push
pop
or
adc
or
jns
out
out
aam
mov
in
dec
xor
add
inc
lret
fwait
mov
inc
loopne
es
testb
mov
in
mov
lea
out
dec
lcall
dec
jp
cmpsb
movsb
fidivs
ret
stc
pop
roll
pushf
or
rcrb
mov
repz
xor
roll
lret
or
pop
pop
mov
stc
cmp
jns
xchg
sub
fwait
push
sar
sti
and
js
mov
mov
mov
lds
dec
int
lret
movsb
mov
push
xor
and
lods
xchg
add
adc
jno
lea
or
pop
xchg
and
pop
icebp
inc
and
xchg
mov
aad
and
adc
lds
jnp
push
lahf
sbb
inc
inc
push
adc
sbb
mov
cld
pop
push
and
and
pushf
push
xchg
pop
scas
mov
inc
es
push
ret
lea
inc
fisubrs
mov
or
mov
xlat
sub
aas
mov
repz
mov
cwtl
std
pop
iret
ficompl
sub
scas
andl
inc
insl
xor
mov
adc
pop
mov
bswap
or
loop
sub
mov
lds
mov
and
dec
sbb
sbb
sbb
addr16
inc
sub
fs
push
sbb
mov
aam
adc
in
pop
test
jmp
shll
or
xor
hlt
test
popa
shl
fwait
cmp
shrl
fs
lds
cld
cli
shl
adc
daa
das
fcmovnu
addr16
popa
jecxz
divb
pop
insb
adc
aas
test
dec
sbb
lahf
sti
inc
sub
mov
jle
fldt
pop
ljmp
mov
mov
out
inc
jbe
out
and
out
xchg
dec
jbe
fsubs
movsl
add
and
sti
pop
mov
add
ljmp
xchg
outsl
jno
cmp
inc
mov
xor
arpl
je
std
call
cmp
mov
mov
mov
ja
jle
dec
fldt
mov
jle
sub
sbb
into
cmc
jge
incb
cmc
add
inc
test
dec
sti
daa
dec
ret
rorl
cld
push
pop
dec
lods
or
stc
push
and
enter
mov
sarl
jl
jne
xor
push
jg
sbb
ljmp
fstpl
pusha
sbb
aaa
movsl
xor
int3
popf
xchg
mov
adc
jge
cmp
subl
push
dec
cli
fwait
fs
ljmp
push
pop
nop
shll
int3
dec
gs
pop
jmp
push
mov
pop
mov
scas
outsl
in
mov
sbb
fwait
push
adc
inc
xchg
in
in
leave
mov
jb
test
mov
jg
dec
adc
pop
or
icebp
fnstcw
addr16
cmp
fs
jns
test
int
jle
enter
sub
fbld
pusha
sub
pop
mov
cmp
ret
rcrb
mov
sbb
adc
mov
lea
scas
into
das
bound
movsb
leave
adc
xor
out
test
sbb
in
xchg
sub
outsl
jge
adc
stos
mov
rcr
xor
sbb
fsubrl
xor
inc
xchg
out
adc
push
mov
mov
inc
adc
jbe
or
test
fucomi
fs
pushf
call
cltd
cmc
xchg
sbb
out
or
ret
adc
data16
inc
aam
pop
mov
mov
pop
inc
pushl
outsl
ljmp
dec
push
sti
fildl
notb
cs
or
mov
int
dec
icebp
icebp
adc
sub
stc
fidivl
mov
fisubrs
push
mov
push
pushl
aam
sbb
sub
jbe
cmp
shll
stc
out
bound
add
out
push
sub
je
push
jmp
mov
jl
xor
mov
xchg
sub
out
mov
xor
ljmp
adc
int3
add
popf
jg
pop
xlat
pop
xchg
ret
or
push
jno
shrb
mov
mov
pop
frstor
into
cmpsl
fldcw
xchg
or
push
jb
dec
enter
cs
xor
aaa
cmp
cmp
push
clc
out
or
arpl
gs
in
add
sbb
mov
cmpsb
mov
dec
fsubrs
int3
mov
aas
aad
add
xor
pop
lods
push
inc
push
xchg
ficompl
imul
add
iret
push
ret
lds
cs
push
jl
stc
xlat
sti
add
rclb
and
xor
jno
xchg
or
xchg
sahf
xor
jecxz
pop
pop
fmuls
int
lcall
add
pop
std
mov
xchg
pushf
ljmp
arpl
out
scas
mov
inc
xor
sbb
inc
addb
pop
mov
repz
add
xchg
ret
and
fistps
lds
mov
and
in
das
rorb
daa
inc
xorb
xchg
add
mov
pop
pop
and
cmp
pop
or
mov
aas
xchg
pop
vmovq
dec
cmp
repz
loopne
in
mov
int3
ret
inc
imul
call
popf
divb
or
sbb
dec
xor
call
mov
xchg
mov
sub
ss
or
mov
repz
movsl
mov
inc
push
pop
les
xchg
pop
cmp
xor
lfs
mov
sub
dec
cmp
out
cmp
int
xchg
xchg
xor
inc
fadds
repnz
rclb
push
movl
mov
lret
bound
in
xchg
addr16
pop
lcall
push
push
push
push
sbb
xchg
fcompl
xchg
hlt
daa
nop
mov
pop
fmull
ljmp
sub
pop
mov
pop
js
std
mulb
nop
enter
xchg
xor
lea
int3
cld
cs
cmp
lcall
jg
sbb
fidivl
rclb
push
xchg
faddl
jle
sbb
aas
inc
sub
js
or
repnz
fcmovbe
mov
push
cmp
dec
lds
adc
xchg
lock
or
sub
lds
in
cwtl
and
push
mov
lock
inc
or
jno
movsb
ret
loope
sti
clc
insl
mov
mov
mov
bound
lods
mov
repz
jg
stos
or
js
sub
add
adc
lods
mov
outsb
repz
mov
push
mov
xor
jp
dec
repz
xchg
out
movsb
mov
xchg
push
nop
lds
and
adc
add
cld
stos
adc
ja
rorl
adc
add
fildl
test
test
aaa
mov
jecxz
jmp
mov
inc
xchg
pop
bound
mov
cwtl
cltd
jno
lret
add
sti
xchg
cs
and
jge
mov
dec
xchg
xchg
test
sbb
dec
xchg
imul
stos
sbb
xlat
mov
add
test
adc
jmp
sbb
jmp
xor
xchg
xor
mov
push
push
shlb
add
lea
fsubrs
dec
xchg
pop
mov
sbb
push
out
push
cld
ror
sub
repnz
push
mov
in
jecxz
mov
push
push
in
sub
hlt
insl
imul
pop
loop
sub
pop
mov
out
cmc
scas
adc
cmpsb
or
xchg
sbb
std
and
mov
xor
and
sbb
and
fwait
sbb
sub
mov
aaa
xor
movsb
add
mov
loopne,pt
jl
xchg
leave
inc
mov
sbb
int
pop
or
adc
sarb
mulb
xor
dec
loopne
sub
test
pop
rcrb
xchg
loopne
xor
mov
adc
dec
jle
jge
lods
inc
sub
mov
xchg
xlat
testb
cmp
stos
fucomi
bound
or
add
fimuls
mov
inc
lea
sti
cmp
adc
pushf
orb
jns
and
loope
or
repz
push
mov
push
outsb
int3
dec
pop
fdivp
and
sub
inc
test
lret
mov
popf
dec
jge
pop
aas
test
jl
popa
mov
shlb
aam
inc
subl
pushf
pop
mov
or
hlt
gs
cli
in
das
mov
dec
pop
cs
or
fs
mov
ret
jp
jb
jb
fisttpll
fstpt
add
xchg
std
sbb
pop
shll
ja
je
and
int
jns
push
je
push
rorl
fsubr
rorb
cmpb
jae
insb
cltd
xor
and
cwtl
or
lock
jecxz
push
inc
push
int
add
sub
xchg
push
stc
imul
push
xchg
jl
les
mov
ja
lds
mov
fsubr
lods
inc
icebp
pop
add
inc
push
dec
popf
popa
pop
mov
js
mov
orb
add
inc
jb
inc
fisttps
dec
jle
std
scas
dec
loopne
and
add
push
mov
mov
cs
out
cwtl
xchg
ja
pop
fnstenv
xchg
sbb
in
fs
push
scas
test
mov
shll
adc
iret
inc
xlat
xchg
jae
xchg
lds
popf
pop
sbb
jbe
jl
or
mov
fcoml
testl
mov
sbb
sub
and
sti
inc
xchg
sbb
addr16
stc
mov
lret
fwait
dec
pushw
sub
lds
idiv
mov
xchg
dec
mov
shl
push
arpl
js
clc
cmp
and
scas
mov
mov
mov
fmuls
repnz
jb
mov
lods
test
xchg
adc
fldcw
pop
std
pushf
xchg
in
dec
xor
lcall
xor
cmp
push
not
jp
lea
and
popf
push
sbb
pop
repz
scas
sub
in
lods
xor
pop
cmpsb
ror
scas
loopne
pusha
or
pop
lods
out
mov
pop
idivl
pop
out
jecxz
cmp
into
adc
stos
dec
jp
std
mov
mov
inc
in
mov
or
negb
in
aas
into
scas
popa
icebp
and
or
jns
js
jmp
inc
mov
lea
push
enter
sti
hlt
and
arpl
js
lds
dec
mov
shl
jg
pop
ret
out
pop
xor
push
xchg
rolb
sar
add
cmp
cltd
jbe
fwait
adc
shlb
lods
xchg
dec
mov
dec
in
cmp
icebp
das
mov
mov
stos
sar
cmpsb
mov
mov
mov
push
aaa
sbb
mov
or
out
xchg
xchg
ret
aas
in
js
xor
addr16
sub
mov
mov
out
daa
shlb
imul
sbb
push
mov
pusha
sbb
clc
jl
xor
aam
lahf
lea
xchg
lcall
push
insb
iret
pop
mov
pusha
pushf
push
imul
jno
enter
inc
cmp
cmp
or
cld
mov
nop
lock
rcrb
loopne
divl
bound
inc
and
lock
or
xor
pop
cwtl
xor
inc
cmpsl
fyl2xp1
xchg
sti
mov
pusha
shrb
ret
ss
dec
outsl
xor
sti
cs
lds
mov
sub
or
pushf
adc
das
mov
push
xchg
pop
push
jge
jmp
test
jns
bound
lahf
jmp
jg
adc
cld
and
aas
repnz
inc
pusha
xor
cltd
test
ss
xor
sub
cmp
cwtl
mov
leave
push
inc
fs
hlt
mov
cli
outsb
shl
arpl
or
in
outsb
jo
fsts
shlb
ficomps
fwait
sub
push
xchg
sbb
mov
mov
pushf
call
lods
pop
xchg
int
cltd
fs
iret
mov
aaa
add
pusha
stos
add
push
mov
xchg
and
sbb
leave
test
outsl
aam
pusha
sbb
fstpt
out
iret
mov
stos
scas
inc
mov
and
clc
loope
sbb
sub
push
sub
pop
or
or
pop
inc
sahf
cmp
and
sbb
inc
sbb
stos
stc
mov
and
sub
sbb
xor
arpl
sub
dec
cwtl
je
jnp
loopne
jno
mov
movsb
outsl
mul
shlb
mov
push
pop
cmp
add
mov
int3
add
mov
gs
add
movsl
and
push
inc
pop
cmp
sahf
mov
stc
push
or
mov
cmp
js
les
jb
rorl
mov
imul
push
dec
mov
fsubp
or
test
add
test
mov
es
or
dec
or
adc
in
push
int3
mov
out
push
lea
jge
lcall
movaps
fldcw
loope
cwtl
jmp
cmpsb
std
adc
adcb
stos
push
hlt
mov
xchg
dec
movsl
and
addr16
add
add
add
pushf
sahf
push
aam
rclb
out
js
das
ja
lods
loop
out
jnp
and
and
lock
sbb
repnz
or
dec
cmpsl
cmp
fadds
xchg
or
sbb
inc
sahf
push
and
jge
add
negb
and
jo
jne
jae
jg
jmp
sete
cs
cmc
jno
pop
pop
std
or
xor
rcr
or
jae
call
mov
xchg
dec
xor
outsl
aas
lea
sub
push
pusha
inc
or
adc
fnsave
inc
mov
ljmp
cs
lods
pusha
ljmp
push
cmp
mov
in
mov
insb
mov
sbb
outsl
sub
sbb
dec
int3
jl
cltd
sub
sbb
cmc
ret
mov
bound
mov
xchg
cld
fisubrs
fwait
ret
repz
mov
ds
dec
scas
adc
in
sbb
jl
filds
pop
movsl
jbe
and
pop
inc
add
push
hlt
insb
lret
add
ljmp
frstor
or
and
jb
xor
jge
cld
and
inc
sub
sbb
ljmp
popf
jle
jle
inc
or
inc
add
inc
pop
push
jg
jns
repz
rol
test
cmc
cmp
mull
insl
lock
xchg
and
ss
test
jp
cmp
fldt
or
jge
mov
test
jmp
lea
imul
fistl
mov
push
test
stc
sub
lret
pop
int3
inc
push
xlat
call
xchg
lods
pop
aas
imul
mov
and
jg
add
push
ja
push
addr16
adc
cmp
mov
pop
icebp
push
addr16
sbb
scas
mov
cmpsb
pop
sub
pop
movsb
outsb
int3
pusha
in
roll
lods
ror
gs
lahf
mov
out
fwait
insb
jnp
test
pushf
cs
lcall
and
mov
mov
mov
fldcw
movsb
pop
mov
xor
leave
scas
dec
lods
mov
fwait
shlb
sub
pop
jnp
cs
cmpsb
fwait
ljmp
stc
push
push
je
cmp
or
mov
cmp
jo
adcl
sarb
xor
cmp
mov
xchg
pop
pop
testb
add
frstor
and
popf
xor
inc
gs
jmp
inc
mov
mov
ja
ljmp
out
je
adc
mov
add
addr16
pop
cmp
or
xchg
mov
inc
adc
cwtl
add
mov
neg
addr16
sub
sbb
mov
shlb
sbb
loope
xchg
inc
cmp
cmc
push
aam
inc
cmc
inc
or
inc
push
imul
lock
das
mov
mov
cmc
roll
nop
daa
cmp
mov
mov
cltd
and
cmpsl
cmpb
rcl
mov
mov
sub
mov
adc
mov
out
sub
xchg
pop
cmpsb
repz
gs
push
and
in
jg
push
mov
mov
cltd
lock
leave
enter
inc
sbb
jp
imull
cmp
mov
mov
pop
push
xchg
adc
fsubrl
and
dec
adc
int
xchg
int
add
dec
dec
scas
adc
inc
sti
adc
cld
subb
sub
xlat
in
enter
fbstp
test
icebp
mov
xor
push
popf
adcl
inc
and
cmp
or
popa
sbb
js
pop
mov
or
adc
inc
pop
mov
dec
cwtl
jns
jb
ret
mov
fcompl
mov
cmc
pushf
sub
jno
ret
push
add
cmp
add
push
enter
jnp
sub
daa
lcall
leave
and
ficompl
or
test
out
mov
popf
rorb
fyl2x
popa
clc
xor
sub
sub
out
es
cwtl
repnz
insb
push
iret
hlt
push
inc
mov
cmp
gs
je
mov
movsb
add
mov
xchg
dec
dec
jae
adc
xor
gs
jno
sbb
push
mov
das
ss
add
out
loope
inc
xchg
xor
mov
insl
inc
iret
push
push
loopne
rorl
imul
mov
adc
cld
fs
and
mov
loope
stc
or
dec
mov
lret
ja
mov
fwait
push
inc
pop
mov
in
addb
out
dec
cmp
and
xchg
adc
ljmp
addr16
fistl
lea
and
fwait
sbb
pop
push
gs
xchg
fsubrl
and
push
pop
in
sarl
imul
andb
repnz
mov
mov
push
add
dec
cli
cmp
mov
hlt
lea
adc
push
xchg
cmpsl
or
push
mov
jl
mov
std
movsl
xchg
jp
test
mov
sbb
xor
clc
sbb
fwait
lods
imul
push
add
adc
cld
das
pop
push
sar
ljmp
cmpsl
ficompl
xchg
in
fmul
fists
ljmp
pusha
outsl
stos
push
lods
nop
outsl
ss
outsb
sub
xor
jp
dec
aaa
jg
inc
fcomp
mov
shl
dec
inc
clc
cmp
cmp
xchg
or
mov
lcall
nop
sub
mov
add
enter
inc
cwtl
bnd
mov
dec
rcrb
lock
out
pushf
dec
neg
arpl
pop
stc
push
adc
xchg
icebp
int3
enter
loopne
sub
rorb
mov
pusha
bound
xor
jne
add
jne
mov
mov
movsl
movsl
in
sbb
test
test
xchg
lods
jecxz
add
call
cli
pop
out
pop
in
addr16
mov
xchg
sbb
xchg
mov
dec
xchg
sub
adc
aad
hlt
sbb
into
xor
push
jns,pn
cmp
mov
mov
dec
adc
test
adc
push
cmp
cmp
cmp
jns
push
repnz
sbb
hlt
fidivl
jle
lcall
and
out
test
out
and
js
lret
sbb
jg
mov
push
mov
xor
adc
lahf
dec
ljmp
inc
jnp
and
and
jl
push
stos
mov
clc
mov
xor
outsb
inc
in
push
aam
add
pop
repz
mov
ret
xchg
js
les
mov
adc
movsl
loop
xchg
jne
and
popf
push
cmp
cltd
movsb
stos
add
mov
imul
mov
jae
rcl
mov
inc
dec
push
loop
repz
fildll
aas
add
std
xchg
and
hlt
je
arpl
dec
std
jne
movd
cs
mov
dec
add
repnz
pop
jmp
push
jo
xchg
cmp
inc
mov
int
xchg
mov
fwait
in
sub
fcoms
sbb
imul
jae
lock
or
jge
clc
in
loopne
xchg
shufps
and
stc
mov
push
icebp
add
cltd
mov
xchg
and
jne
pop
scas
mov
scas
addb
jo
out
mov
mov
lock
sbb
pop
test
cs
pop
mov
and
lcall
mov
fcomps
icebp
mov
into
insl
test
ud0
pop
les
add
subl
pop
imul
imul
add
lods
dec
lret
xor
int
cmp
add
sbb
adc
fbstp
rclb
into
inc
cmp
jecxz
das
das
mov
add
mov
push
sar
pop
imul
mov
sub
fwait
xchg
cmp
mov
icebp
mov
fsubs
mov
jmp
test
push
mov
adc
imul
aas
ret
jp
into
lahf
fistps
daa
imul
sub
negb
div
cmp
sbb
xor
paddusb
sub
pushf
aaa
jp
lahf
dec
pop
mov
or
ss
aaa
mov
insb
xchg
iret
xor
scas
adc
or
mov
mov
pusha
mov
lret
fwait
repz
scas
push
cmp
aas
mov
mov
jecxz
shlb
push
movsb
cwtl
mov
jl
aad
repnz
aas
or
jl
inc
add
inc
ds
int
inc
mov
fprem1
int
and
dec
ficompl
stos
mov
jno
or
js,pn
ss
add
outsb
jecxz
mov
add
push
pop
or
lock
push
or
jmp
add
test
in
inc
xor
jne
mov
loop
xchg
fcomps
ja
cmp
mov
add
jbe
imul
mov
mov
or
popa
mov
push
or
adc
mov
mov
push
pop
jno
and
push
call
notl
bound
roll
not
mov
mov
fs
icebp
mov
inc
popa
jnp
mov
mov
insb
test
cmc
sub
lret
jge
aam
out
in
or
or
sbb
mov
pop
test
lea
push
push
mov
xchg
cs
je
xor
pop
and
mov
add
mov
dec
adc
clc
pop
sahf
test
cld
enter
daa
pop
int3
ds
jle
fdivr
in
test
add
and
fcompl
stos
jb
stos
adc
mov
mov
xchg
iret
arpl
inc
cmpb
lods
push
lods
push
stos
outsb
xor
pop
add
pop
test
lcall
dec
push
add
jbe
mov
or
push
ret
cmp
leave
shlb
fyl2xp1
sub
sbb
inc
repnz
inc
xchg
cmp
aas
sahf
lods
les
fsubrl
inc
ret
test
out
popa
add
mov
imul
xor
addr16
das
rcrl
cwtl
fs
cwtl
xchg
insl
jae
sub
push
sub
inc
xchg
imul
imul
add
jg
lds
pop
ja
jne
xor
sar
test
fildll
adc
jmp
adc
xchg
dec
dec
int3
ja
fdivp
mov
mov
aas
xchg
push
adc
incb
push
jmp
cmpsl
push
ror
adcb
fwait
push
jo
repnz
pop
cmp
mov
sub
or
aas
out
mov
test
jg
pop
js
adc
jnp
jecxz
mov
in
adc
pop
jl
loop
push
nop
rclb
jno
or
pop
mov
ffree
and
cli
test
xor
adc
dec
pop
and
jb
or
cmp
gs
dec
gs
clc
hlt
pop
setns
jmp
xchg
push
imul
inc
mov
push
dec
inc
add
lsl
nop
leave
gs
jb
popf
out
xchg
inc
mov
push
push
jae
nop
adc
in
sub
cmp
dec
cltd
test
lcall
popa
shlb
adc
mov
lret
mov
and
scas
sub
out
sub
cli
cmp
xchg
aad
outsl
mov
pop
mov
fmuls
push
mov
test
ficoms
scas
in
ret
notl
push
pop
mov
xor
jg
push
mov
repnz
cltd
cld
lcall
xchg
cmpsb
and
jnp
adc
repnz
insb
out
sti
mov
dec
push
in
pop
adc
push
outsb
adc
cld
test
sbb
xor
jne
mov
into
into
xorl
and
cmpsl
xor
cmp
gs
lcall
jns
mov
aad
xchg
std
insb
outsb
int
cmpsb
mov
out
cs
pminub
sbb
push
push
nop
mov
and
mov
mov
sbb
fwait
inc
data16
or
pop
lds
sub
imul
dec
pop
jns
test
push
lds
xchg
add
jle
xchg
cmp
pop
es
test
pop
mov
sti
sub
cld
mov
cmp
jmp
mov
fnstsw
out
cmp
xor
push
dec
outsb
sbb
cltd
mov
scas
sub
push
outsb
sub
pop
cmpsl
and
jle
lock
fmull
or
in
jge
mov
and
xchg
sti
bound
stos
lahf
inc
jp
xchg
inc
fildl
and
jle
fiaddl
push
push
inc
sub
sbb
subl
cmp
push
cwtl
aam
mov
or
dec
add
addr16
sub
push
inc
jbe
xchg
xchg
lods
inc
lods
xchg
add
ret
inc
insl
mov
stos
dec
stc
lahf
mov
mov
mov
sub
push
jnp
push
sti
mov
sub
std
add
sub
adc
fsubrl
fnsave
ret
bound
testb
jmp
jge
into
mov
push
mov
test
loop
out
xchg
lcall
push
jae
mov
dec
sti
jle
push
loop
pop
add
mov
inc
in
int
aad
jmp
gs
sbb
cmp
push
pushf
inc
pop
mov
imul
add
cmpsl
lock
adc
xchg
sbb
mov
repz
dec
cld
mov
sbb
push
mov
insl
rcl
push
xchg
sbb
mov
popa
xchg
mov
dec
jns
scas
sub
inc
nop
ret
call
shll
jle
outsb
cmp
xor
repnz
cmpsl
mov
mov
jge
xor
aad
push
push
ja
iret
fsubrl
adc
mov
fdiv
sbb
inc
arpl
mov
push
xchg
popl
push
mov
nop
and
inc
popa
jo
pop
cwtl
xchg
mov
pushf
ds
test
insb
jecxz
ficoml
and
adc
aam
lock
and
add
rorb
pop
bound
daa
adc
or
mov
jbe
in
xchg
adc
sbb
test
enter
repz
enter
imul
jnp
and
scas
mov
inc
xchg
and
leave
rcl
les
test
into
mov
arpl
mov
mov
sbb
jp
add
adc
add
inc
lret
xchg
inc
les
outsl
test
cmp
sahf
test
push
outsb
mov
sbb
pop
mov
movsb
mov
jmp
lds
jge
adc
stos
jmp
rcll
mov
sbb
dec
int3
inc
fisubl
loopne
jns
out
gs
fstps
mov
nop
shlb
outsl
pop
test
into
lock
mov
inc
push
aad
les
aad
xchg
lods
xchg
imul
fs
arpl
inc
push
fisubrl
popf
incb
inc
sub
testl
js
in
test
lods
loop
enter
dec
ja
imul
xchg
insb
mov
scas
jae
fstp
pop
dec
mov
mov
cmp
leave
inc
shlb
mov
inc
pop
adc
stos
dec
lret
fs
mov
push
inc
mov
movsl
dec
movsb
xorl
lods
mov
loop
sahf
imul
iret
cmp
loop
into
jg
sbb
data16
in
enter
lret
push
add
test
in
les
pop
cmpsb
xchg
icebp
sub
jecxz
clc
sti
fstl
shll
sbb
pop
adcb
push
int
pop
jne
xchg
jo
xchg
gs
fmuls
jb
dec
repz
pop
arpl
fwait
shrl
push
mov
jbe
dec
lods
inc
fcmovu
xchg
movsb
subb
mov
xchg
cmp
pop
jge
iret
fsubs
repz
xor
sbb
mov
loope,pt
xchg
pop
stos
jae
outsb
aas
int3
jnp
int3
andb
pop
addr16
jbe
daa
sub
inc
dec
add
cmpsl
cltd
sti
add
mov
pop
lahf
pop
sbb
out
fbld
dec
jno
pop
xor
dec
push
repz
les
pop
jae
mov
inc
popl
add
inc
pop
fcoms
adc
mov
inc
mov
mov
inc
icebp
pop
mov
inc
or
popf
sub
lock
les
push
ds
sbb
xor
and
outsb
mov
cmp
les
imul
mov
jae
or
jmp
scas
lea
jmp
lods
jge
stos
push
push
das
pusha
jp
jle
out
fcomp
ret
dec
pop
mov
adc
lds
bound
mov
sub
add
add
arpl
cmp
push
jmp
shlb
push
and
les
and
arpl
cmc
enter
adc
lods
mov
and
outsb
in
ss
jae
add
push
sar
mov
mov
sbb
sbb
into
xchg
inc
or
lret
cwtl
sbb
pop
popa
cmp
mov
pop
bound
pop
js
jge
shl
ret
fidivrs
aam
lock
cmpl
dec
mov
outsl
std
adc
das
mov
mov
out
and
fcompl
test
dec
cmp
sbb
negl
mov
hlt
testl
adc
dec
ds
aas
es
xor
cmpxchg
adc
jae
adc
add
cli
lret
mov
repz
xchg
out
mov
xor
jns
jp
loope
lods
mov
in
repnz
insl
mov
xor
clc
arpl
pop
sub
clc
add
add
fdivs
sub
jbe
xor
insb
sbb
jge
loope
mov
andb
popf
dec
shll
add
arpl
mov
dec
mov
push
add
outsl
ss
fmull
sbb
push
call
ficomps
sbbl
xchg
cmc
pop
or
fcomp
js
dec
add
jne
xchg
push
lret
xchg
scas
mov
insl
cwtl
inc
hlt
mov
pop
mov
test
repz
jo
and
mov
cmp
insl
fldl2e
inc
stos
arpl
movsl
mov
aaa
jno
cmp
or
and
push
int
mov
xchg
rcrl
loope
push
sub
jg
nop
mov
iret
icebp
jmp
push
adc
dec
movsl
jns
sub
and
fistpll
mov
loopne
lods
imulb
movsl
or
mov
adc
cmpsb
add
dec
lods
cwtl
push
mov
adc
into
push
pop
xor
mov
in
fmuls
xchg
lret
adc
fmull
insb
insl
jbe
mov
loop
pop
mov
popa
lret
sbb
sub
pop
icebp
sub
mov
sub
inc
sbb
add
mov
stos
dec
outsb
ret
out
adc
pop
out
inc
pop
lds
sahf
pop
and
push
out
test
andl
xchg
dec
outsl
std
cmp
leave
push
scas
div
call
call
xchg
test
pop
or
and
rorb
rcr
test
xrelease
aam
push
sub
repnz
sbb
cmc
cmp
into
or
je
cwtl
repnz
ljmp
popa
inc
cmp
push
jnp
scas
dec
rcll
fdivl
clc
mov
pushl
mov
cwtl
lds
adc
mov
repnz
cwtl
adc
jle
in
xchg
mov
add
or
stos
jmp
xchg
scas
fwait
daa
or
mov
jbe
outsl
push
addr16
adc
sub
pop
in
cmp
xor
jmp
pop
hlt
pop
mov
sahf
out
int
shll
dec
clc
insl
loope
out
ss
jnp
or
pop
push
out
clc
fdivrl
test
push
dec
mov
out
cmc
aas
jbe
push
nop
pop
popa
in
sub
movsb
sub
push
nop
mov
push
push
pop
lds
sub
or
cli
mov
stos
xchg
insl
in
in
mov
xchg
imul
popf
test
pop
and
outsb
sbb
xchg
cmp
inc
push
loop
adc
imul
cli
je
mov
xchg
scas
adc
adc
adcl
call
push
rcr
xchg
xchg
mov
add
ss
stc
dec
cmp
lret
xor
mov
mov
and
sahf
fwait
push
xchg
nop
and
mov
inc
sbb
push
hlt
icebp
test
lret
data16
out
sub
push
pop
push
push
xor
add
fiaddl
mov
or
or
mov
or
add
je
loope
mov
xchg
lods
add
jae
aaa
mov
sub
test
add
and
je
dec
mov
xchg
rol
inc
sub
popa
mov
sub
mov
into
jno
sub
shll
pop
lods
popa
fsubrl
add
clc
iret
call
js
loopne
push
push
push
ss
lahf
shrb
dec
cmpsl
mov
frstor
dec
xor
cmc
push
stos
imul
lret
fs
push
jne
je
pop
sti
dec
cmp
cmp
mov
out
sub
arpl
xor
dec
adc
mov
xchg
cmp
mov
cltd
repz
lret
in
xchg
ret
inc
cs
mov
cmpsb
das
rolb
mov
mov
jecxz
je
xor
dec
jle
outsl
fldt
cmp
scas
pop
rorb
into
lock
xchg
inc
add
jl
loope
mov
mov
mov
or
pop
pop
jmp
sbb
and
jg
adc
push
ljmp
cmpb
mov
fisubrs
nop
xchg
pop
adc
clc
lods
pop
std
jno
jnp
add
pop
inc
adc
xor
cmpsl
adc
ds
mov
sahf
daa
jg
push
sbb
xor
pop
cmp
cmpsl
idivl
and
rcl
inc
inc
andl
xor
or
arpl
cwtl
cmp
add
cmp
repz
xchg
or
outsb
sarl
out
push
shll
shr
add
cmp
push
cmpsb
lds
xchg
ljmp
das
pop
loopne
add
inc
sarb
mov
in
data16
adc
insl
lret
jle
push
xchg
sub
outsl
push
fmul
stos
sub
xchg
in
dec
sub
push
popf
sbb
lock
cld
sub
cwtl
pop
sub
mov
or
aam
mov
aaa
imul
xchg
sbb
dec
test
mov
sahf
add
add
iret
arpl
fadd
aaa
jge
sub
sub
das
jl
adc
xchg
xchg
outsl
mov
sti
jnp
lea
negb
fld
jg
and
and
inc
cmp
cld
mov
pusha
ss
cli
insl
xor
jle
aam
dec
lods
dec
push
jl
imul
cmp
fldcw
loop
stos
cmp
cmc
add
or
jmp
and
mov
mov
sbb
lret
xor
scas
and
push
sub
ret
jb
mov
sti
adc
adc
and
popa
scas
adc
in
aaa
cwtl
lret
jb
sbb
adc
fwait
jnp
xor
add
sahf
mov
push
shr
xchg
xor
in
push
mov
fstps
repnz
movsb
dec
xchg
pop
icebp
jo
out
push
mov
push
mov
xchg
jne
daa
xchg
mov
cmp
ret
pop
dec
nop
aaa
popa
mov
pop
cli
jo
push
lcall
dec
xor
aam
ss
ja
mov
add
roll
movsb
push
mov
push
cmp
fldl
gs
mov
ret
sbb
je
sahf
dec
js
push
out
mov
xor
nop
lds
cmc
stc
aad
insl
mov
imul
in
xor
cmp
test
xor
cmp
shl
cmpsl
test
inc
in
sbb
sbb
popa
mov
push
lret
mov
sub
rclb
subl
push
sub
lret
ret
jg
or
pop
push
cmpsb
fdivl
mov
sub
aaa
or
mov
addr16
inc
jl
sub
mulb
and
mov
inc
loop
adc
adc
dec
and
and
adc
pop
leave
aad
shll
push
pop
xor
out
push
dec
sahf
loop
jbe
fidivl
cmpsl
sbb
xchg
sub
dec
lfs
pop
in
jle
aaa
test
loop
jne
and
ja
pop
jecxz
lods
lahf
hlt
shr
loopne
call
lea
mov
lea
ss
jg
xchg
rol
sbb
lea
popf
xlat
insb
mov
xchg
mov
ds
fimuls
xor
add
sbb
pop
mov
pop
sti
push
xchg
mov
cmpl
jnp
mov
sub
and
cmc
nop/reserved
pop
push
or
stos
cwtl
shrl
pop
into
dec
cwtl
shrb
lcall
or
dec
xor
sub
or
inc
mov
push
pop
jno
negl
jno
mov
int
ret
pop
inc
pop
das
or
aaa
dec
cmpsl
push
fsub
push
shlb
orb
cmp
int3
dec
insb
cmc
mov
mov
pusha
push
inc
fs
mov
test
add
push
addr16
js
sub
mov
and
fwait
js
xlat
testb
cmpsb
jns
arpl
cs
fwait
js
or
xor
dec
scas
loop
push
push
les
popa
add
into
leave
fwait
in
xor
jmp
push
xor
xchg
or
mov
lods
or
xchg
into
pop
mov
sub
scas
mov
cs
adc
test
inc
mov
adc
sbb
cmpsl
xorb
inc
sbb
cltd
ljmp
outsl
dec
aad
stc
mov
and
mov
xchg
pop
hlt
mov
lahf
and
lods
mov
fwait
stc
jmp
dec
test
and
mov
add
arpl
aad
ja
dec
fisubrl
mov
leave
sti
nop
sbb
xchg
loop
repz
pop
outsl
shlb
push
test
xchg
add
mov
mov
push
mov
cmp
dec
jp
iret
cmp
adc
xor
and
xchg
lods
or
fldlg2
in
push
jecxz
nop
jae
mov
jne
pop
push
fbstp
jne
shr
lods
mov
mul
enter
cmp
mov
or
jne
mov
out
inc
dec
xchg
and
dec
leave
xchg
xlat
stos
js
pop
adc
mov
popf
sbb
test
ficomps
sub
lds
push
mov
outsb
jle
push
pushf
xchg
jp
lcall
fucomip
rorl
mov
sub
mov
push
lret
gs
inc
sbb
cmc
cmp
fldt
adc
mov
mulb
mov
movsb
pushl
xchg
leave
repnz
out
sub
and
add
mov
loope
data16
mov
test
sahf
push
cmpsb
out
lret
popf
mov
sbb
cld
sbb
mov
push
dec
jne
adc
and
insl
add
rcrb
pop
imul
das
ja
xor
pop
and
jecxz
add
movl
cltd
mov
stos
inc
icebp
and
leave
cmpsl
and
mov
imul
fcoml
mov
inc
add
mov
xchg
xor
mov
int3
stc
mov
jle
sbbl
sub
sub
xchg
cmp
out
test
mov
ret
jns
cmp
incl
mov
test
cmp
push
imul
xchg
outsl
pop
test
xor
pop
xchg
cld
mov
mov
jp
ret
jmp
filds
xlat
scas
aam
push
fldenv
enter
sbb
cmp
xchg
lret
cld
jecxz
mov
or
out
pop
fnsave
mov
scas
push
mov
repz
jg
xor
sbb
inc
hlt
mov
daa
fidivrs
xchg
and
fwait
push
sub
ret
movsl
lahf
imull
ljmp
adc
mov
out
lret
add
mov
or
push
mov
dec
sub
sbb
push
test
adc
mov
mov
xor
add
mov
fsubrs
sbb
xchg
inc
push
repz
mov
jg
pop
mov
in
repz
shrb
or
jnp
sub
in
lcall
pop
adc
stos
les
or
add
gs
add
loop
popa
adc
or
jo
xchg
adc
imul
int3
out
iret
add
cmpb
and
pop
sbb
inc
dec
jb
xor
ljmp
cmpsl
fdivr
push
push
xor
dec
fcomi
rcl
rcl
mov
xorb
aad
dec
outsb
inc
dec
insl
inc
fldenv
xchg
mov
pop
mov
pop
mov
mov
or
xchg
and
rol
imul
outsl
add
adc
inc
sbb
cmpsb
sti
or
insl
xlat
mov
gs
mov
xor
xor
push
push
int3
adc
xor
mov
sub
adc
mov
in
add
dec
fs
in
or
pushf
rclb
out
sub
cmpl
dec
sbb
dec
icebp
bound
push
push
pop
dec
lods
push
cs
mov
in
inc
and
fidivl
sbb
mov
mov
fcomip
fndisi(8087
inc
jmp
add
push
mov
inc
mov
adc
mov
aad
jge
and
push
sbb
lret
fs
mov
adc
sub
cmp
aad
lods
push
shll
int
xchg
shl
int3
sbbl
aam
scas
in
test
pop
repnz
stos
aam
dec
cmp
jnp
outsl
push
lcall
sub
jl
add
jnp
addr16
scas
lcall
rcrl
data16
push
push
enter
scas
cmp
aad
push
ficompl
ljmp
movsl
je
lods
sbb
repnz
mov
and
xor
cmpsl
ljmp
das
lods
insb
mov
scas
popf
mov
jnp
mov
cmpl
push
nop
pop
stos
push
lds
sahf
jns
adc
jge
push
clc
jnp
mov
sbbb
xchg
jb
ret
add
fdivs
repz
arpl
sbb
jae
push
dec
xlat
aas
es
pop
sub
sahf
aaa
data16
std
arpl
mov
dec
call
or
or
sub
mov
pop
cs
sub
nop
mov
int3
enter
adc
imul
cs
pushf
mov
je
mov
imul
and
jnp
mov
stc
mov
push
fstl
lods
push
push
clc
inc
sti
stos
and
sbb
cmp
mov
mov
sbb
dec
into
push
test
and
repz
adc
inc
jge
ljmp
pop
add
xchg
xor
mov
or
inc
push
es
ret
dec
push
jmp
adc
adc
stos
fsts
shrl
lods
add
bound
test
cmp
mov
adc
idiv
fildl
shrb
icebp
es
cwtl
cmp
xor
sub
mov
mov
lods
sbb
lock
push
sahf
or
dec
mov
xchg
xor
cmp
ret
fcomps
lock
test
cmp
dec
loope
or
push
or
repz
cmp
and
stc
mov
mov
fdiv
movb
pop
repnz
lret
pop
inc
add
xchg
lods
push
mov
stos
dec
mov
insb
and
jge
mov
shlb
scas
dec
jno
inc
es
xchg
into
sbbl
push
fsubrp
mov
mov
scas
add
js
lods
xor
xlat
dec
stos
bound
data16
push
inc
test
cwtl
inc
cmp
cmp
inc
cmp
cmpsb
sub
into
cwtl
shlb
in
repnz
pop
inc
and
mov
les
ss
rcrb
leave
fadd
push
dec
cwtl
sub
xchg
test
imull
jne
into
repnz
push
add
inc
das
xor
lds
push
ljmp
xor
rcr
fadds
ljmp
aaa
and
pop
rclb
arpl
mov
jno
sub
lods
xchg
lcall
setnp
ljmp
lods
stos
sbb
cwtl
sub
popf
ds
stos
lcall
les
mov
js
subl
inc
adc
les
ret
pop
jae
lds
push
cwtl
adc
mov
inc
lahf
stc
sbbl
nop
sub
cmp
mov
lds
or
aas
pushl
test
andl
imul
mov
sbb
in
iret
push
test
mov
stos
add
sbb
mov
adc
cmp
cmp
popa
mov
cld
push
scas
fcoms
mov
xor
dec
std
dec
jns
iret
xor
lods
mov
push
xlat
jecxz
jl
pop
jecxz
addr16
ds
cmp
jge
jns
or
mov
pop
mov
xor
xchg
or
das
mov
sbb
mov
lcall
adc
xlat
rdpmc
sub
sbb
adc
into
int
out
inc
mov
in
xchg
xor
movsl
stos
test
call
mov
sub
scas
jb
jg
mov
pop
or
sbb
xchg
aaa
lahf
jecxz
fsubs
lahf
les
stc
lods
pop
or
fst
adc
xchg
pop
xor
inc
sub
repnz
pop
das
outsl
xchg
jo
adc
lds
add
mov
int
flds
fstl
mov
mov
pop
hlt
push
pop
sub
mov
cs
mov
fistl
mov
std
ss
mov
inc
push
mov
repnz
sti
movsl
decb
sbb
jns
loopne
xchg
push
cs
sbb
fstpl
imul
lods
adc
and
mov
jnp
pop
fwait
and
mov
mov
lret
inc
lret
enter
test
fs
ficoms
mov
loope
jnp
fbld
ds
mov
ret
cmp
divb
mov
add
inc
std
sub
cmp
add
fistpll
loopne
je
pop
mov
lcall
push
dec
cmpsb
dec
inc
dec
mov
adc
cmp
arpl
test
ret
jecxz
push
stos
and
dec
cs
sub
xor
lods
jecxz
insl
push
ficompl
mov
fmulp
pop
fsubl
xchg
push
les
icebp
fstpt
add
clc
xchg
test
ljmp
jge
cmp
pop
pop
push
xor
movsb
in
rolb
dec
das
in
jbe
jb
sbb
adc
xchg
je
aam
mov
pop
lods
mov
dec
add
in
jge
aas
insb
mov
cmpsl
repnz
xor
mov
in
ljmp
cltd
lret
loope
mov
sub
and
mov
insl
icebp
push
outsl
cmp
pusha
jo
fwait
cmc
in
inc
mov
mov
imul
inc
adc
push
loop
nop
aad
mov
cmp
xchg
repnz
mov
sbb
daa
ljmp
and
dec
cmp
mov
adc
sahf
addl
dec
push
inc
outsl
ret
loope
add
xchg
imulb
jb
inc
mov
add
pusha
std
sub
fwait
or
mov
push
out
pushf
jl
sbb
sahf
mov
sbb
xchg
push
pop
es
add
push
cs
xlat
jecxz
xorl
cmp
outsl
lret
pop
xchg
xor
out
sbb
dec
inc
dec
lea
mov
cwtl
aaa
out
sti
in
pop
push
dec
dec
icebp
lds
cwtl
xlat
pop
arpl
ret
stos
daa
data16
in
adc
lds
pop
dec
int
int3
jne
mov
fs
out
push
cwtl
fwait
sbb
pop
inc
popl
out
adc
test
enter
repz
and
mov
std
and
ret
cld
rcrb
enter
cmp
inc
xchg
pop
pushf
jne
ret
add
sbb
sbb
push
mov
mov
fldt
xchg
pop
sub
sahf
inc
jb
mov
insb
lea
push
in
mov
je
ja
iret
lea
into
jg
add
jnp
sub
add
mov
in
gs
sub
xchg
stos
or
dec
push
xchg
mov
nop
adc
stc
xchg
mov
fs
xor
xor
jl
push
pop
daa
jmp
hlt
jmp
mov
sub
xchg
daa
sub
pop
cmpsb
and
cmp
pop
sahf
jb
and
jle
addr16
in
sub
aaa
sti
leave
jg
inc
mov
sbb
pop
mov
lret
jle
xchg
mov
iret
imull
mov
inc
lcall
into
pop
rolb
rcrb
pop
push
ja
jg
into
sbb
pop
mov
enter
and
push
xchg
jg
addl
lahf
and
jmp
popf
jl
mov
mov
push
pop
insl
je
sarb
pop
cmp
adc
int3
jae
push
xor
daa
mov
es
xor
aaa
mov
out
xchg
test
adc
lcall
mov
aas
dec
ss
and
pop
lock
repnz
outsb
sbb
arpl
cmc
fisubl
test
pop
inc
loopne
cmp
mov
insb
insb
ja
shr
fs
daa
add
cli
pushf
mov
push
mov
js
sti
sub
rcrb
sub
out
sahf
sahf
sbb
notl
bound
daa
cli
dec
aaa
lret
je
dec
out
xchg
clc
jge
push
ja
inc
sbb
leave
add
ss
jge
outsl
dec
jecxz
ror
push
sahf
std
xor
test
adc
test
popf
and
mov
cmp
fwait
pop
fisttpll
aaa
and
out
or
adcl
icebp
ret
sarb
out
mov
and
mov
lahf
imul
fistpl
jns
push
sub
sub
xchg
xchg
faddl
std
sub
mov
push
scas
xchg
lret
mov
aam
dec
jecxz
inc
ret
pop
cmpsl
loope
sub
mov
fldcw
mov
push
data16
jmp
sub
adc
idivb
or
dec
xchg
outsl
sbb
mov
cltd
je
sub
enter
mov
sbb
out
push
xchg
aad
pop
push
dec
stos
dec
push
cmp
insl
fs
arpl
add
cmp
jns
aad
dec
inc
out
mov
into
in
subb
inc
dec
xorl
mov
adc
jae
mov
mov
sbb
xchg
push
iret
add
fisubs
je
lods
push
mov
and
insb
sub
ret
push
lods
fcoml
ret
mov
outsl
scas
cwtl
in
adc
sar
push
popf
mov
in
adc
stos
imul
in
mov
icebp
sub
mov
jbe
pop
hlt
pop
xchg
adc
repnz
xchg
xor
movsb
dec
mov
lods
hlt
jp
inc
cwtl
out
aam
mov
fmull
push
or
out
adc
inc
rclb
lret
jle
icebp
movsb
push
and
in
push
mov
lahf
or
pop
ret
xchg
and
pop
or
ret
ret
mov
iret
or
mov
icebp
adc
test
fiadds
les
fcmovu
sar
cmp
pop
iret
jp
cmc
fldcw
in
outsl
add
jno
lret
or
xlat
xchg
fptan
mov
sub
insl
lret
movsb
and
movsl
xor
pop
pusha
pop
cltd
adc
mov
mov
daa
sahf
inc
and
add
stc
fsts
pop
stos
pop
cmp
push
push
jns
xor
mov
subl
lret
dec
ret
or
lahf
jmp
cmp
gs
fdivrp
add
dec
lret
lods
and
sub
push
scas
xorl
mov
shrl
mov
in
xor
pushf
popa
rcrb
in
sbb
inc
cmp
add
out
mov
aam
jle
sbb
mov
xchg
inc
das
mov
popf
pushl
test
jge
aaa
push
or
sti
fdiv
mov
adcl
sbb
cmp
xchg
xchg
cltd
daa
out
pop
jo
jbe
loopne
aas
fmul
in
dec
je
sub
push
aad
cmpsb
add
lock
in
cmpsb
mov
js
ret
jge
mov
stos
xor
scas
xor
mov
or
sub
outsb
in
adc
mov
sbb
lds
cmp
cmp
out
js
cmc
lods
les
shrb
fdivrl
out
mov
sub
pop
jl
or
dec
outsl
and
jmp
pop
lret
hlt
mov
call
xchg
jb
hlt
inc
cmpsb
sub
or
dec
xor
jno
xchg
pop
imul
or
fstps
es
pop
xor
inc
or
hlt
imul
inc
sbb
in
dec
mov
mov
orl
add
pop
push
and
jp
mov
fsubs
jno
mov
cmpsb
inc
test
xchg
les
pop
mov
dec
or
std
dec
in
push
mov
inc
mov
notb
mov
mov
mov
mov
and
outsl
adc
scas
or
jnp
addr16
push
fistpll
aaa
xorl
adc
adc
leave
idiv
fdivp
xor
jo
sbb
sub
fldcw
movsb
das
loop
rep
arpl
fwait
cltd
add
xchg
fsts
cmp
je
mov
jno
dec
adc
or
mov
lods
aam
sbb
mov
pop
into
ja
dec
mov
fs
aam
jmp
xchg
ja
push
fstpl
js
dec
iret
jle
mov
pop
das
cmp
sub
fdivl
sub
loope
imul
push
pop
gs
or
sbb
nop
cmp
mov
and
inc
outsb
sub
xor
shrl
jae
lea
adc
adc
dec
pop
inc
cwtl
stos
mov
mov
inc
daa
rcrb
pop
scas
mov
imul
punpcklwd
jge
cmp
xor
jbe
or
hlt
adc
mov
mov
out
icebp
add
in
sub
mov
cwtl
fnsave
push
cltd
push
lret
sarl
lret
fwait
adc
mov
addr16
adc
outsl
adc
mov
cmp
mov
jp
add
inc
jns
insb
push
push
push
test
testb
push
inc
sbb
mov
sub
je
ja
in
mov
sbb
dec
inc
dec
es
xor
popf
sbb
mov
lcall
sti
mov
mov
sti
xchg
sbb
mov
mov
pop
jno
in
inc
cli
test
push
or
adc
mov
push
xor
mov
frstor
jmp
mov
call
fidivl
push
xor
out
sbb
and
pop
sbb
loopne
adc
xor
loop
push
dec
scas
mov
xchg
inc
pop
mov
mov
into
jp
int3
lds
ja
xchg
add
fnstsw
lods
xchg
sbb
sti
in
mov
mov
sar
loope
xchg
jb
push
dec
pop
scas
mov
xor
jecxz
js
in
ret
jnp
and
shrl
mov
lods
inc
into
das
mov
sbb
addr16
test
shr
enter
shll
aas
out
xlat
push
outsb
test
ret
addr16
adc
mov
fsubr
jb
push
mov
sbb
fstps
ja
mov
inc
pusha
test
mov
call
movsl
dec
xor
pushf
lods
mov
shlb
aas
mov
mov
lods
push
daa
daa
test
push
and
xorl
inc
fmull
mov
push
sti
push
mov
add
inc
gs
mov
jnp
leave
aad
push
ja
es
je
mov
add
fcomps
fs
outsb
dec
sub
xor
mov
mov
es
mov
repnz
pop
mov
add
adc
lods
jl
pop
sbb
or
data16
cld
ss
push
lods
loop
jmp
mov
adcb
xor
loope
fdivrs
movsl
lds
adc
sbb
dec
pop
scas
dec
push
sti
cltd
ficoms
xchg
add
push
push
test
xchg
pushf
xor
fbstp
lcall
jb
ret
xchg
inc
mov
dec
adc
js
mov
jns
fldenv
sahf
dec
mov
shl
shll
data16
loope
scas
stc
clc
pop
push
insl
nop
roll
jae
jns
cmp
xor
fbstp
and
xchg
outsl
xchg
and
daa
loop
mov
dec
adc
mov
jle
mov
cmp
xchg
cmpsl
lods
mov
std
ljmp
sbb
mov
inc
ja
jge
push
push
enter
xchg
jmp
inc
sbb
mov
add
push
js
in
cmpsl
pop
aaa
int
fistpl
push
sahf
dec
sahf
outsb
inc
cmp
push
pop
mov
dec
bts
movsl
shrl
and
das
cs
mov
sbb
loop
push
sub
popa
outsl
mov
pushf
hlt
and
shr
cwtl
dec
or
call
pop
mov
push
push
nopl
sbb
shll
sub
inc
push
loop
idivl
mov
xchg
sub
insb
dec
add
fldenv
inc
sahf
xor
pop
pop
and
movsl
mov
ret
sub
pop
fmuls
lcall
fdivrp
ja
stos
lods
cwtl
pop
mov
pop
cs
sar
pop
mov
adc
mov
mov
icebp
pop
push
jge
jge
adc
jb
call
repz
push
dec
out
sbb
sbb
push
sbb
pop
jge
sbb
divb
movsb
mov
xorl
shll
je
lods
int
out
or
jg
pop
jae
sub
mov
je
enter
arpl
cmc
push
scas
mov
jns
or
std
sbb
xor
xor
andb
js
aad
mov
jl
in
sub
sbb
cwtl
movb
shll
add
inc
es
repz
push
aas
lods
xchg
clc
xlat
inc
bound
daa
mov
repz
adc
lret
xchg
sub
adc
inc
mov
dec
fdivs
xor
jecxz
clc
in
out
sbb
jg
popa
or
mov
jb
mov
mov
jmp
dec
jp
cmp
lret
bound
mov
lods
inc
mov
inc
sahf
and
jecxz
pop
mov
xchg
add
xor
add
dec
jg
mov
movsl
jae
popa
adc
daa
cmp
insb
jecxz
xor
adc
loopne
push
ficomps
in
sti
cmpsb
push
rolb
or
outsl
test
dec
inc
fs
mov
outsb
pushf
roll
ret
stos
cmpsb
xchg
sub
xchg
fldt
xchg
mov
inc
cmp
pop
mov
sub
fidivs
adc
dec
mov
sbb
rol
jne
sub
xchg
lret
sub
fs
push
xchg
cmovs
pop
inc
pop
ja
xor
call
fwait
mov
cli
fsubrl
mov
inc
call
cmp
jg
push
in
loope
rorb
loopne
pop
push
push
loopne
sub
dec
cmp
ficomps
xor
loope
rorl
push
push
movsl
sbb
adc
cmp
adc
aaa
mov
je
icebp
cmp
cs
pusha
out
lods
xor
mov
mov
cmp
pop
sub
jg
jp
push
lret
aad
mov
movsb
popa
xor
movsl
or
aas
pop
ret
ja
and
stos
test
mov
movsl
dec
stc
push
shll
pop
movsb
lods
enter
pop
das
hlt
pop
rcr
cmp
jno
dec
cmp
xchg
lds
pop
outsb
jne
pusha
sub
stos
dec
aaa
ret
push
mov
or
jmp
fadds
mov
out
idivl
and
in
or
cmpsb
stos
mov
mov
push
add
hlt
mov
loopne
and
js
sub
mov
aam
into
lock
jmp
out
bound
and
lahf
fs
stos
push
or
push
mov
inc
or
sti
out
push
loop
ds
xor
hlt
test
jnp
mov
shll
and
lret
aad
fcomp
add
sbb
mov
das
push
mov
and
rorb
adc
inc
add
scas
lahf
aad
fsubl
mov
pushf
out
and
pop
cmp
cmp
scas
xchg
dec
in
cmpsl
mov
and
aam
mov
jl
icebp
lea
lret
xor
adc
cli
sbb
sub
pop
cs
mov
mov
fs
xchg
out
sbb
loope
mov
aas
loope
lret
pop
pop
or
jnp
xchg
sub
lret
jp
aad
cmpl
xor
inc
lret
mov
or
dec
jmp
pusha
cmp
push
in
xor
mov
xor
add
push
sbb
aam
sbb
xor
aam
inc
jb
cli
mov
ret
lret
pop
add
jbe
shlb
add
inc
jo
inc
mov
out
test
mov
call
test
jp
inc
mov
out
stc
roll
clc
push
mov
fucomp
mov
push
xchg
je
iret
or
jge
xchg
int
push
inc
sbb
mov
ret
fdivl
xor
ss
inc
mov
mov
gs
into
sbb
repz
or
push
xor
ds
inc
mov
or
cmp
or
out
jo
inc
ffree
movsb
test
jae
daa
xor
icebp
cld
push
and
pop
xor
in
rcll
nop
mov
jnp
mov
subb
insb
jb
rcll
jne
in
adc
notl
cmp
movsb
add
dec
incb
inc
mov
xlat
pop
test
das
clc
cmc
pop
cmp
pop
xor
xor
in
push
mov
xchg
andb
xchg
pop
fistpl
sbb
mov
movsl
adc
push
clc
add
insl
sarb
into
arpl
mov
push
sbb
or
in
dec
adc
inc
pop
xchg
push
xchg
cmp
push
or
mov
or
cmpsl
lock
jnp
call
fwait
xchg
sbb
fcoms
clc
mov
cltd
push
cwtl
jae
scas
leave
cltd
inc
sahf
mov
subl
std
push
in
js
mov
pop
adc
jg
lock
mov
inc
testl
lods
lods
dec
cwtl
lea
push
shll
lcall
jbe
xchg
sarb
push
pop
cmc
ljmp
das
or
mov
dec
push
push
add
and
add
and
aam
lods
or
aaa
insb
add
int3
push
inc
pusha
pop
or
outsb
ljmp
insb
push
mov
pop
cmp
cld
cmp
cmp
test
sub
cmp
adc
nop
mov
stos
sub
imul
ret
dec
test
push
out
mov
pop
xor
pop
inc
sub
stc
jp
arpl
movsb
or
into
dec
xchg
inc
adc
and
data16
test
push
test
xlat
add
cmp
pop
and
stc
sbb
fldl
ret
mov
les
xor
bound
testl
mov
jno
adc
jne
jno
ja
out
nop
imul
into
test
mov
sbb
das
xchg
sbb
mov
sub
or
insl
or
sti
lcall
mov
xor
jbe
fwait
sbb
sub
pop
push
xor
or
test
in
ficompl
mov
test
pop
sbb
pushf
pushf
jl
xor
mov
addr16
mov
stos
push
inc
aaa
fisttpl
add
mov
mov
xchg
lds
lds
xor
outsb
stc
ja
rcrl
imul
mov
imul
mov
dec
sarb
or
decl
dec
and
mov
inc
dec
jne
fiadds
shrl
push
xorb
or
push
pop
adc
and
jmp
push
adc
and
aad
and
push
fcompl
push
sub
sbb
inc
ret
nop
mov
fbstp
icebp
sbb
rorl
ljmp
inc
out
mov
dec
xchg
out
fs
sbbb
outsb
loopne
cmc
imul
roll
int
lock
ficomps
cmp
push
xor
popf
dec
mov
outsl
add
jecxz
jmp
icebp
test
das
popf
std
jno
pop
jbe
sbb
pop
mov
and
and
popf
adc
dec
out
push
int
pop
fsubrs
clc
jg
sbb
jl
push
out
inc
cmc
mov
xor
cmp
aaa
xor
out
aas
or
bound
and
pushf
fndisi(8087
pushf
mov
cmpsb
loopne
jl
mov
mov
stc
lcall
xor
dec
pushf
lret
loop
jno
mov
out
xor
int3
or
test
pop
inc
mov
cmpsb
stc
scas
sub
inc
xchg
sbb
sti
lret
stos
out
testl
iret
mov
adc
inc
mov
pop
out
test
dec
out
aam
iret
xlat
lcall
cmpb
jne
orb
imul
mov
sbb
les
sbb
stos
inc
popf
in
mov
es
add
mov
pop
sub
mov
repnz
movsb
xor
in
in
idivb
fcmovnb
lods
cwtl
adc
test
leave
arpl
xor
sub
and
lods
pushf
push
dec
pop
lock
addr16
and
sti
xchg
adc
pop
loope
imul
jp
cmp
ds
shr
repz
adc
icebp
ja
movsl
jnp
mov
cwtl
xor
hlt
mov
xor
mov
and
dec
xchg
cmp
rol
mov
addr16
or
movsl
sub
sub
jne
in
in
inc
ss
lret
fistps
lock
pop
cmpb
xchg
jecxz
xchg
mov
insb
insl
lret
push
xor
neg
hlt
xor
iret
jg
inc
ror
mov
stos
in
and
in
push
dec
lock
and
sbbl
jp
int
mov
dec
icebp
xor
stc
cmp
fwait
pusha
and
mov
fs
dec
sbb
sub
cltd
lcall
es
xchg
mov
inc
lahf
push
inc
fsubr
stos
push
cld
sbb
das
mov
das
pop
inc
jl
js
int
jae
ret
jge
dec
cmp
imul
dec
xchg
and
addl
stos
and
jne
leave
lods
popa
inc
and
rcrl
lret
mov
cmp
in
sub
and
pop
in
ret
jmp
jbe
cmp
lret
xlat
sbb
orl
xor
fidivrl
out
iret
aas
xorb
cmp
in
mov
and
cwtl
fadds
mov
jne
cmp
push
repz
xchg
push
ret
ja
inc
and
inc
jbe
jae
or
inc
sbb
jae
and
nop
xchg
cmc
dec
pop
mov
addr16
je
scas
mov
sub
jl
in
or
xchg
push
ret
adc
and
pop
add
imul
into
mov
xor
adc
scas
xchg
mov
xchg
push
dec
dec
pushf
and
mov
dec
out
lret
jae
sub
cmc
or
pop
xor
xrelease
jbe
aaa
sub
xchg
push
test
ficoms
xor
icebp
xor
das
pop
pop
lds
aaa
mov
push
int3
push
jp
dec
lahf
lods
les
add
sub
mov
and
inc
call
test
aaa
lock
cmp
cmpsl
xor
xor
loop
sahf
and
jnp
sub
loope
lds
cwtl
dec
testl
or
xor
jp
test
test
clc
pop
xchg
adc
xchg
cmp
or
cmova
mov
adc
mov
notb
imul
push
popf
idivl
xor
add
aam
xor
daa
xor
insb
das
out
clc
and
xchg
lret
gs
add
pop
popf
fs
inc
dec
push
nop
in
pop
mov
cld
xchg
loop
jmp
and
and
add
in
aas
fdivrl
adc
sar
xchg
mov
fiadds
cmp
adc
fsubl
pop
dec
add
sahf
jo
jb
addr16
ljmp
pusha
mov
mulb
insb
cmp
icebp
scas
jge
stos
fwait
inc
movsb
dec
sti
shll
push
aaa
insb
pop
in
adc
stos
push
cmp
jae
cmp
push
arpl
cmp
xor
dec
xor
scas
pop
jl
cld
andb
cmpsl
push
mov
dec
mov
jl
fwait
xchg
cmp
out
jnp
mov
repz
jecxz
mov
dec
cmpsl
data16
in
lahf
popf
insb
push
imul
sub
and
push
or
mov
cmp
mov
cld
sub
insl
sbb
cmp
ffreep
jge
inc
dec
xchg
sahf
sub
jnp
mov
and
dec
movsb
sahf
fisubs
pop
push
mov
std
pop
xor
adc
pop
push
mov
loopne
lods
xchg
sbb
jb
int
cmpsl
mov
lret
and
mov
jns
inc
push
mov
iret
cltd
movsl
jne
push
test
jne
mov
es
fidivl
jo
push
sbb
and
mov
sbb
mov
jmp
adc
lahf
es
pop
sub
add
jae
sahf
xchg
stc
test
scas
dec
xlat
inc
mov
js
mov
rclb
push
scas
rolb
aam
xchg
dec
cmp
push
xor
popf
push
push
popf
mov
xor
cmp
outsl
mov
xchg
shrb
sbb
sbb
sub
lock
adc
hlt
scas
fwait
movsb
and
push
add
bnd
mov
sbb
cmc
test
mov
mov
xor
jno
pop
stc
sub
xchg
dec
push
jo
lea
mov
pop
sub
cltd
cmp
jecxz
sar
clc
adc
lea
js
sbb
loop
push
push
xchg
push
inc
movsb
test
fisttps
jp
clc
sub
push
dec
pushf
dec
mov
mov
and
in
adc
push
ss
hlt
jb
mov
jecxz
sbb
loopne
jb
movb
cwtl
xchg
fsubr
iret
mov
sbb
ret
negl
add
add
rorl
adc
inc
in
pusha
addl
nop
adc
dec
jl
fwait
jae
out
add
add
pop
inc
mov
xor
ss
test
sbb
cwtl
push
push
cmp
mulb
dec
mov
loopne
popf
aaa
mov
repz
jmp
lret
das
stos
jle
std
imull
add
ds
xchg
imul
jae
mov
or
dec
rcll
pop
and
sub
cmp
push
pop
enter
cmp
xor
movsl
aad
mov
loop
and
rolb
add
shlb
cwtl
dec
int
or
sbb
pop
push
push
dec
mov
jg
mov
inc
pop
push
push
jge
cmpsw
lcall
fsts
mov
and
xchg
les
pop
jne
mov
stos
dec
sti
mov
or
pusha
push
xchg
pushf
add
jbe
push
les
out
mov
adc
xlat
mov
add
jae
faddp
imul
lret
jo
imul
out
add
out
pop
inc
pop
aam
pop
push
dec
arpl
enter
repnz
mov
jecxz
and
rolb
mov
dec
incb
daa
add
jae
cld
shll
mov
add
shrb
cli
lock
in
sbb
repnz
dec
insl
sbb
xchg
sub
and
push
in
movsb
js
jae
lds
or
pop
xchg
leave
xchg
xor
inc
jb
inc
mov
mov
pop
dec
pop
xchg
int
movsb
mov
pushf
mov
add
jae
mov
shll
mov
jl
pop
mov
fistl
mov
inc
jmp
add
cmpsb
adc
add
cmp
pushf
jle
mov
and
cmp
pop
fbstp
and
or
cmpsl
daa
js
push
into
into
push
out
cmp
lea
lret
sub
shr
mov
outsl
gs
inc
ror
xchg
rorb
adc
ficompl
cmpsb
movsl
jl
fstpt
fildl
mov
push
test
in
lcall
add
ljmp
or
cli
cmp
imul
or
shll
popf
dec
cld
inc
push
in
insl
xor
out
and
dec
movl
and
xchg
push
add
arpl
out
mov
mov
pop
hlt
pusha
dec
sub
mov
popf
mov
push
rcll
dec
mov
sub
les
arpl
jns
enter
inc
push
dec
adc
test
out
divb
add
adcb
add
movsb
adc
or
out
push
or
push
mov
inc
psrld
sub
mov
mov
rcl
movsl
jg
mov
loopne
cli
negb
test
inc
imul
xlat
cli
or
push
dec
shll
or
pop
es
lods
cwtl
cmp
fcoms
cmpsb
mov
iret
dec
fldl
clc
stos
stos
add
pop
loopne
jno
xlat
imul
outsb
sub
push
sahf
sbb
aam
pop
fadds
adc
dec
xor
movsl
repnz
out
lds
dec
aad
push
fwait
rcll
stos
xor
and
pop
push
lock
fwait
sub
push
insb
and
dec
sbb
sub
cmc
mov
and
xchg
in
es
push
jg
adc
gs
ret
arpl
adc
fistl
dec
adc
sahf
sarb
repz
ds
imul
into
sub
cmpsl
mov
sbbb
loope
sub
pop
sub
sub
inc
imul
std
mov
push
xchg
jo
cmp
adc
pop
fsubr
fs
icebp
or
cmp
cmp
mov
sbb
mov
test
loope
fwait
xor
stc
jl
outsb
mov
cmp
sbb
in
mov
and
add
or
icebp
push
add
fcomps
int
push
jmp
ficompl
pusha
cmp
and
idivb
inc
movsl
add
adc
pop
jle
push
inc
sub
lcall
pop
dec
dec
sahf
lods
sbb
xor
dec
cmc
jno
sahf
lds
scas
sbb
inc
pop
scas
ja
pop
sbb
mov
imulb
push
sbb
ss
punpckldq
pop
into
push
push
test
cmp
xor
mov
or
pop
fadds
and
lods
dec
sub
daa
cli
in
out
aas
lods
into
repnz
mov
repz
sbb
aad
test
lret
jnp
in
add
scas
imul
mov
mov
or
inc
clc
call
pop
call
stc
and
test
mov
sub
or
or
mov
xchg
lds
xchg
cld
lods
pop
pusha
mov
hlt
lret
test
lcall
xorb
mov
pop
adc
push
xchg
mov
popa
test
xchg
int3
pushf
shlb
xchg
scas
adc
xchg
or
xchg
data16
add
sub
in
pop
inc
pop
lods
in
es
iret
lds
sub
insl
and
es
or
dec
sbb
mov
pushf
adc
push
jecxz
or
inc
shrl
in
pop
rolb
loop
sti
cmp
or
mov
inc
stc
in
hlt
pop
jo
sub
xchg
inc
xor
hlt
lock
inc
sbb
stc
or
xchg
adc
adc
pop
lret
pop
pop
inc
inc
je
in
and
xorb
jg
add
sub
mov
test
cmp
addr16
test
stos
les
add
push
rcrl
sbb
inc
push
cmp
pop
jp
xor
leave
xor
or
outsl
push
jmp
leave
mov
repz
push
aaa
adc
adc
lds
data16
mov
orl
xchg
cmpsl
gs
movsb
sahf
pop
rep
push
shrb
mov
test
xor
and
rcl
nop
ret
adc
sub
into
es
pusha
inc
dec
and
sub
inc
push
or
push
push
and
jge
sarl
and
sbb
daa
dec
sub
jmp
setl
mov
gs
stos
or
lock
repnz
pop
movsb
and
mov
data16
inc
loop
jp
inc
add
mov
sub
rol
adc
fisttps
push
hlt
orl
call
xor
lret
int
cmc
inc
popa
std
push
mov
xchg
imul
dec
pop
mov
mov
repnz
je
and
pop
outsl
push
xchg
cld
add
adc
rcll
and
imul
push
pop
popf
inc
fsts
rorb
adc
xchg
stc
mov
jg
stc
addr16
call
sti
pop
and
lret
movl
rorl
push
fs
adc
imul
pop
cmp
mov
call
ret
scas
and
mov
sbb
sbb
mov
xor
ljmp
clc
xchg
mov
jo
dec
lods
xor
fs
lahf
dec
pop
jge
sub
mov
lahf
imul
fdivrs
cwtl
mov
sub
stos
movsl
mov
mov
mov
imul
pusha
dec
mov
sbb
push
ss
les
data16
cmp
jl
ja
mov
out
adc
cld
in
jge
adc
mov
jb
mov
xor
adc
xor
icebp
aas
pushf
mov
cmc
cmp
sbb
push
sub
sbb
jg
outsb
inc
mov
jae
xor
mov
fcmovbe
cld
jbe
mov
lea
int
xchg
lock
pop
xlat
ret
mov
jne
cmp
mov
and
popa
dec
aas
inc
std
xchg
dec
push
mov
add
rcr
fsub
jae
mov
or
sbb
jle
add
rorl
and
pop
mov
iret
aam
test
jg
mov
fstl
and
xor
enter
test
dec
add
push
dec
mov
fcoms
xlat
repnz
mov
push
data16
jge
jp
rep
adc
bound
in
xchg
scas
ret
sub
loop
inc
test
pop
sbb
mov
daa
push
lret
cltd
lahf
sub
jns
aas
inc
mov
in
push
and
mov
mov
sub
adc
or
mov
cmp
popa
adc
enter
sti
cmp
pop
test
xchg
ror
inc
aaa
push
mov
sub
test
and
mov
sub
call
mov
jbe
mov
xlat
push
push
cmp
je
mov
mov
mov
test
icebp
lret
or
ja
ret
popf
or
pop
sub
add
mov
cmp
call
mov
outsb
inc
pop
push
dec
inc
pop
dec
inc
pop
push
arpl
imul
jmp
outsb
dec
and
dec
mov
repnz
rcrl
sbb
push
popf
cmpl
bound
xlat
inc
leave
js
dec
out
out
movsl
jb
adc
mov
sub
mov
lods
mov
scas
jae
xchg
cmc
aad
sahf
dec
jbe
sti
cmp
cmp
sub
shl
xor
jnp
sub
and
outsb
lods
enter
aaa
xor
sub
popa
cltd
and
mov
or
orb
daa
inc
adc
ljmp
shrl
lock
stos
push
mov
mov
sbb
scas
xchg
imul
in
pop
hlt
stc
leave
insl
mov
cmc
and
es
scas
imul
stc
shll
out
push
jp
cmpsb
pop
repz
test
adcl
je
xor
das
shlb
add
mulb
ret
shr
and
sbb
hlt
and
inc
fdivs
xor
aas
aas
or
mov
cmp
mov
int
xchg
test
iret
jnp
into
lea
adc
or
adc
push
sbb
ljmp
lret
xor
daa
mov
xchg
push
cltd
or
dec
and
jo
dec
sbb
mov
into
mov
add
push
mov
int3
fldenv
dec
add
jns
ror
aaa
mov
inc
js
mov
adc
jl
jecxz
push
cltd
push
mov
lret
mov
cmp
ret
gs
cmpb
test
inc
lret
in
mov
mov
push
adc
lods
sub
xor
vpsadbw
into
repz
mov
stc
stc
movsb
rclb
jbe
add
dec
popf
fs
add
sti
xor
lods
stc
js
mov
and
push
outsl
pop
sbb
pop
xor
aad
push
or
adc
cmp
or
pushf
pop
xchg
lock
inc
xchg
xchg
mov
lods
ret
push
ret
push
adc
pop
insl
lods
mov
std
insl
add
pop
push
ret
mov
push
or
mov
push
add
shl
pushf
mov
rcrb
cmp
adc
jo
mov
cs
movsb
and
test
mov
call
int
inc
inc
lret
mov
mov
mov
ss
inc
imul
pop
scas
xor
xchg
clc
iret
pop
sahf
insl
push
mov
sub
popa
mov
mov
pop
sbb
adc
stos
mov
cmpsb
push
xchg
pushf
imul
rol
jb
pushf
xor
sbbb
sbb
inc
push
sbbl
addr16
xlat
popf
cmp
pop
adc
xchg
dec
and
lock
cmp
xchg
xchg
and
in
aaa
fwait
adc
lods
mov
xchg
in
dec
jle
fdivr
fiaddl
mov
icebp
sbb
addr16
pop
adc
add
movsl
dec
cmp
mov
fisttpl
inc
mov
hlt
fnsave
adc
mov
loop
xor
mov
or
push
stos
sub
push
adc
adc
xchg
pop
lock
cmc
inc
shlb
xlat
sar
call
jne
fdivr
push
sti
stos
push
inc
cmp
adc
jne
out
lds
pushf
cltd
stc
pxor
cmp
shlb
push
lods
sbbb
mov
mov
sub
cmp
fimuls
aam
les
inc
cmp
jb
rcrl
fst
or
push
pop
insl
gs
push
nop
out
paddsw
sbb
cli
into
ss
push
cmp
cltd
call
test
aaa
mov
fsubrp
pop
jnp,pt
insb
or
sub
adc
sub
lods
push
xor
or
cli
mov
and
mov
in
mov
sub
roll
lock
xchg
fisttps
and
inc
into
adc
lret
push
mov
jo
test
cmp
add
pop
dec
and
jp
outsb
sub
roll
cld
push
sbb
movsl
fsubl
or
aad
clc
data16
cwtl
add
xor
insb
in
pusha
inc
insl
inc
sub
xchg
fdivs
aam
jmp
mov
movsl
cli
out
ficoms
les
movsb
shrb
cld
push
or
jg
int
xorb
add
mov
push
cmp
imul
orl
sahf
push
jp
js
movsb
cltd
xor
incl
fsubr
clc
adc
dec
adc
outsb
dec
add
iret
xchg
fmul
rol
mov
rolb
data16
orb
push
addr16
pop
sbb
mov
or
inc
cmpsb
add
gs
cs
loope
mov
stos
adc
xchg
jnp
jno
push
insb
cmp
xor
sarl
dec
pop
dec
push
je
push
add
in
xor
shlb
out
sbbb
jle
sub
cmp
or
adcl
add
sbbl
jl
mov
mov
subb
ret
or
les
xchg
mov
bound
stc
and
icebp
and
mov
pop
rclb
cmp
out
mov
mov
pushf
int3
pop
jp
inc
fists
popa
and
imul
mov
bound
sahf
in
cmpsb
test
push
inc
xchg
jne
in
sub
mov
mov
popa
iret
out
and
inc
cltd
push
mov
leave
pop
call
mov
dec
ret
dec
adc
hlt
lods
mov
add
stc
stos
adc
js
out
sub
aas
xchg
ret
mov
pushf
mov
and
inc
cs
dec
dec
out
inc
cvtps2pd
rol
pushf
or
leave
imul
dec
testl
leave
insb
call
fstl
std
pop
lret
packssdw
and
push
popa
inc
lahf
fs
dec
mov
lret
jecxz
orl
iret
dec
push
stc
jmp
jge
scas
and
ljmp
mov
lods
insl
xor
cmpsl
pop
add
jnp
jb
movsl
repz
cmp
je
mov
jae
push
mov
rol
or
mov
icebp
pop
fnsave
cwtl
jg
movsb
adc
ds
xor
lret
stos
jns
dec
sub
push
push
jb
sti
dec
stos
push
inc
cmp
xchg
xor
ror
stos
mov
sub
insl
mov
push
mov
and
jno
push
ja
es
test
scas
xchg
enter
jne
pop
cmp
mov
jle
mov
adc
lods
push
sbb
mov
enter
fwait
ret
pop
or
inc
repnz
inc
jmp
mov
test
inc
jns
mov
jns
test
jo
mov
sub
insb
mov
sbb
nop
out
in
iret
andl
aaa
mov
movl
in
and
lret
daa
popf
arpl
jnp
cmp
pop
mov
lea
and
outsl
ja
cmc
push
pop
jo
das
fcmovu
push
cmp
imul
push
lcall
in
or
inc
scas
insb
js
xchg
cwtl
ret
or
lahf
lcall
shll
push
shr
cmp
mov
pop
out
ret
addr16
push
jp
jnp
int3
lret
pop
push
sbb
scas
pop
lock
mov
adcb
sub
dec
jne
rolb
inc
ret
bound
out
sub
sub
add
pop
out
inc
fidivrl
inc
int
add
bound
jbe
out
xchg
mov
stos
sbb
add
int3
xchg
mov
and
jecxz
subb
repz
ja
adc
je
movsb
push
loope
mov
int
mov
addr16
ss
fimull
mov
loop
push
jb
inc
lret
fiadds
enter
xchg
adc
jmp
pushf
sub
add
stos
jo
xchg
ds
push
fmull
sbb
and
movsl
pop
out
sub
add
mov
and
xor
jae
fiadds
sbb
sti
cmp
sahf
arpl
sbb
test
into
leave
inc
jns
dec
ret
inc
and
mov
sub
test
mov
stc
xchg
adc
pop
je
les
push
mov
cmp
fsubs
ds
sbb
xor
pop
xchg
push
nop
loopne
fistpl
pop
and
mov
cmp
dec
lcall
jne
push
leave
mov
sub
sbb
icebp
idivl
mov
or
jo
pop
stos
mov
sbb
ljmp
call
sbb
out
push
mov
dec
or
jo
cwtl
mov
je
lea
bound
jecxz
outsb
mov
ss
call
ds
in
jg
jnp
sbb
pop
xchg
xor
sbb
mov
lods
xor
xchg
or
sub
pushf
xchg
sbb
add
imull
pop
scas
sub
and
popa
cli
jge
xor
pusha
jb
add
pushf
xor
xlat
sbbb
pop
jb
mul
enter
es
out
cltd
or
inc
leavew
imul
cmp
sbb
inc
push
pop
jl
cli
popa
ds
lret
inc
mov
jp
mov
dec
lahf
mov
jo
and
int3
leave
adc
outsb
repnz
sti
sbb
insl
jb
stos
repz
xchg
fldlg2
outsl
jae
add
fmull
adc
mov
mov
and
lret
hlt
sahf
and
adc
sub
scas
scas
insl
call
push
and
cmp
inc
in
add
dec
add
mov
push
mul
aad
fwait
mov
aas
clc
outsb
add
xor
add
jne
mov
push
repnz
mov
scas
or
ficoms
scas
callw
out
je
ljmp
xchg
pop
push
jl
xchg
cmp
mov
testb
inc
iret
add
into
lahf
and
aas
mov
pushf
and
pop
dec
in
inc
inc
push
mov
fsubrs
sbb
mov
pop
adc
js
cwtl
cmp
xchg
push
ficomps
mov
sbb
cmpsl
lahf
sahf
sub
lea
sbb
push
sbb
mov
inc
mov
ljmp
mov
cmp
lcallw
movsb
push
and
mov
popa
adc
xchg
aaa
sahf
push
inc
jbe
jo
out
xchg
mov
loop
mov
lock
and
xchg
rcr
dec
adcb
daa
mov
sti
sub
repz
inc
mov
push
or
insl
mov
pop
sub
mov
sub
aaa
sbb
mov
xor
jge
lods
mov
test
or
pop
shl
dec
jle
or
dec
lea
xor
fs
sahf
dec
mov
js
stos
xchg
adc
insb
popf
int
nop
cmp
xlat
sbb
sub
adc
xchg
enter
xor
into
lret
adc
into
sbb
mov
cmp
ja
or
fcomps
mov
mov
stos
ja
add
mov
es
cmp
int3
xor
push
scas
push
stos
push
lret
jo
pop
cmp
fdivl
xchg
fwait
out
in
mov
cmp
sub
push
fs
fidivrs
adc
clc
mov
idiv
xchg
cwtl
lds
sahf
je
fidivrs
and
mov
out
and
push
mov
pop
push
xor
cltd
xor
gs
loope
jns
mov
cmpsb
inc
pop
jbe
cmp
lea
stc
pop
sub
sbb
pop
ret
cmpsl
in
xor
nop
push
stc
fistpl
mov
dec
push
in
shrl
dec
shlb
jne
loope
sub
js
repz
cmpb
pop
sub
mov
test
rcl
xor
ret
cmp
stos
imul
sbb
call
dec
push
adc
mov
sbbl
jp
jns
into
ficompl
cmp
xchg
popf
hlt
xchg
mulb
in
aad
mov
movsb
mov
adc
in
push
mov
pushl
sub
push
popa
push
sbb
xchg
outsl
jbe
lock
sub
fdivrs
insb
shlb
ds
and
addr16
fincstp
out
or
dec
sbb
jl
std
arpl
out
adc
decb
or
xor
xor
xchg
dec
jp
pop
inc
sbb
push
js
fdivrs
shll
test
mov
aaa
jp
imul
js
xchg
mov
or
loopne
movsl
mov
jg
stos
lods
push
out
xor
and
pop
lods
clc
add
xchg
adc
jl
cmp
fidivl
mov
sbb
out
data16
int3
inc
sti
mov
or
adc
rorl
pop
ds
xchg
xor
add
and
mov
push
fxtract
cmpsb
mov
mov
imul
pop
dec
pop
iret
xor
negl
cld
std
das
cli
add
push
mov
sbb
lahf
loope
pop
mov
jecxz
mov
mov
mov
sub
loop
int3
cld
test
jns
call
pop
das
cld
daa
inc
pop
mov
jp
nop
adcl
daa
cltd
popf
lret
push
sbb
add
ret
xor
cli
push
clc
pop
inc
test
jl
xlat
jns
mov
pop
lock
pop
mov
cmpsb
imul
pop
mov
xor
into
xor
cmpsl
jl
fstpl
cmp
cmp
pop
iret
out
les
js
xor
push
in
push
mov
lret
push
ja
clc
sub
push
pop
or
test
push
cmc
mov
insb
mov
in
jns
mov
inc
mov
aad
mov
sub
dec
pop
pushf
aas
fcoms
test
fbstp
mov
mov
out
jg
enter
xchg
into
add
ret
test
popa
int
push
mov
bound
imul
push
inc
cmp
push
bound
mov
test
mov
jo
sub
mov
push
add
push
pop
jbe
adc
or
mov
test
movsl
xchg
fcompl
outsb
jmp
scas
pop
adc
cmp
inc
mov
pop
xor
mov
pop
lret
push
test
push
lcall
pop
into
popa
insl
test
mov
gs
clc
in
movsl
and
aaa
rcl
cmpb
cwtl
mov
xchg
out
dec
outsl
push
add
ljmp
mov
adc
rcll
stc
shrb
dec
pop
xchg
aam
jecxz
jne
fstps
dec
xchg
ret
decl
mov
rclb
xchg
popa
lods
add
mov
stc
jne
push
out
rsqrtps
pop
sti
xor
push
cmp
ss
arpl
mov
mov
stc
push
fistpl
cltd
cmp
sub
std
icebp
ss
outsl
or
mov
push
pop
and
mov
adc
mov
mov
roll
fwait
ljmp
jne
adc
popa
xor
sub
push
sbb
xchg
sbb
stos
and
daa
into
jb
mov
data16
inc
cmp
clc
mov
imul
mov
jo
xchg
fstpl
push
adc
sbb
xchg
and
loopne
aas
out
jmp
xchg
into
dec
shr
jmp
jae
or
addr16
sub
mov
jp
xchg
imul
mov
movsl
insl
out
loope
aad
insb
cs
inc
mov
cwtl
pop
xchg
outsb
push
dec
and
test
dec
xor
mov
push
subl
add
js
xchg
inc
stos
lds
mov
popl
sub
jnp
or
jns
nop
jo
enter
js
dec
jno
fxch
fstpt
mov
lds
mov
jecxz
jo
and
repnz
jle
and
adc
ret
add
inc
and
adc
shlb
pop
lods
loopne
fdivrs
pushl
xchg
repz
dec
and
outsl
inc
inc
test
mov
push
scas
add
ret
cltd
enter
cmpsb
mov
inc
inc
push
lds
sub
cs
popf
jle
xchg
xchg
in
repnz
fdivl
dec
stc
xchg
push
ds
mov
mov
jle
clc
mov
mov
add
push
adc
fxtract
dec
addr16
xor
and
push
cmp
jns
lds
sub
ret
ret
xor
or
iret
shlb
adc
repz
rol
repnz
pop
and
push
lret
jns
jo
xorb
adc
adc
adc
inc
cmp
xlat
inc
xchg
inc
cmp
jne
mov
rorl
ret
sub
xchg
jmp
or
mov
jmp
and
ror
shll
sbb
mov
scas
dec
cmp
js,pn
sub
dec
addr16
sub
mov
dec
mov
adc
xchg
stc
dec
aam
mov
mov
mov
cmpsb
mov
push
mov
cli
ds
jmp
data16
lods
xor
in
mov
and
insl
int3
mov
pusha
mov
movsl
cmovnp
mov
lcall
call
bound
inc
test
push
mov
call
daa
mov
sti
mov
sbb
sub
add
add
scas
outsb
imul
mov
pop
setp
inc
dec
cmp
or
jo
outsl
push
in
xorl
adc
inc
clc
mov
sub
sbb
sub
pop
jecxz
std
and
cmp
js
mov
mov
stc
jae
sub
mov
sbb
mov
daa
pop
jae
jecxz
fdivrl
jle
call
push
scas
js
test
pop
imul
add
pusha
cmp
cmc
jae
push
rcrb
push
adc
lret
inc
dec
dec
out
xor
mov
insl
mov
mov
cmp
jmp
push
xchg
cld
test
dec
and
lret
mov
xchg
ret
in
fs
push
rolb
xchg
jns
mov
dec
push
ljmp
into
cld
mov
loope
push
call
jne
xor
insb
pop
shlb
into
mov
push
mov
dec
add
ret
iret
popa
daa
nop
push
jecxz
mov
shrb
cld
ljmp
and
shl
dec
push
lar
ja
cmp
add
xchg
lret
mov
add
lea
int
mov
fsubrl
xchg
push
ds
js
jecxz
loop
movsl
dec
push
dec
jl
popa
loope
jnp
mov
xchg
out
sub
stos
test
stc
stos
leave
gs
dec
cltd
pop
xchg
imul
addl
xchg
or
mov
xor
fxch
push
fnsave
fs
ss
movsl
std
ds
sbb
adc
pushl
leave
ljmp
and
notl
pop
fsubl
mov
out
xchg
inc
stos
scas
int
push
sbb
test
in
lret
test
mov
neg
aam
mov
xchg
jg
sub
adc
cld
std
fcomps
push
sub
fistpl
xor
mov
lret
push
cltd
lcall
and
jmp
pop
jmp
les
or
imul
punpckhbw
xor
sahf
hlt
jle
out
push
int3
lahf
jp
lcall
pop
mov
adc
jmp
jge
jbe
aas
imul
inc
mov
pusha
sbb
mov
fdivrp
in
dec
inc
cmp
test
lods
mov
jmp
out
filds
sub
dec
push
call
adc
mov
roll
push
push
push
dec
test
stc
dec
jecxz
cld
roll
sub
jo
test
mov
mov
mov
mov
aad
jp
std
mov
xchg
xlat
jbe
test
inc
mov
lahf
pop
iret
aas
or
int
push
lock
inc
in
jo
mov
shrb
mov
mov
dec
jbe
jl
ljmp
je
xor
or
sbb
inc
ret
repz
mov
sbb
mov
call
mov
bound
lds
sbb
loop,pn
push
es
xor
mov
push
dec
clc
or
out
adc
int
sub
test
jl
insl
mov
dec
in
xlat
fs
inc
inc
adc
lods
push
mov
fidivrl
insb
xchg
add
dec
mov
aam
xchg
mov
jbe
dec
push
dec
imul
inc
pushf
jo
js
mov
iret
gs
fwait
cmp
rcrl
ret
mov
push
and
pop
dec
aas
popf
and
sbb
xor
xchg
mov
or
jmp
rcrb
sbb
inc
popf
xor
xor
js
cmp
les
cmp
lods
cmc
inc
fwait
xor
lcall
jl
lock
je
jle
in
pminub
add
iret
ss
add
cmp
jecxz
pop
dec
movl
mov
xor
mov
cmp
push
pop
add
sbb
jecxz
push
dec
fwait
sub
outsl
xor
push
mov
mov
popf
rcrl
mov
jae
dec
cmc
cmp
mov
push
call
repnz
push
popl
mov
inc
or
js
adc
or
xchg
pop
stos
stos
out
push
push
imul
insl
xchg
cli
div
jns
push
mov
jae
int
aas
test
smsw
jmp
or
xor
lret
jle
jo
pusha
cmp
aad
test
xor
mov
mov
xchg
mov
jbe
add
repnz
dec
push
dec
je
vmovq
je
incl
mov
insl
cmp
aas
adc
data16
or
sti
cli
push
popf
shll
out
adc
movsb
mov
sbb
mov
je
cmp
sub
xchg
out
sbb
test
aaa
or
pop
cld
je
lahf
mov
add
jge
popa
inc
arpl
iret
cmp
mov
test
and
mov
mov
pop
imul
mov
aam
mov
cltd
mov
repnz
mov
lock
pop
sbb
xor
push
dec
cltd
cld
shrl
das
mov
js
mov
sbb
jnp
scas
in
fsubr
jo
xchg
push
mov
daa
in
fidivl
fisubs
sti
lahf
cmpsl
dec
aas
jo
dec
lahf
mov
pop
ficoms
mov
stc
clc
jo
movsl
xchg
push
sbb
xchg
std
std
inc
add
push
pop
sahf
pop
pop
repz
lds
out
sbb
add
pop
push
fs
mov
or
mov
cmp
aam
and
and
cli
or
popf
idivb
movsb
pop
xchg
push
xchg
pop
lret
mov
xor
pop
rorb
jbe
mov
xchg
insb
cmp
ljmp
adc
cmp
aas
pop
ret
jb
fcoml
lret
add
std
cmpsl
xchg
or
adc
fimull
outsb
outsl
pop
mov
sbbl
and
pusha
aam
lret
jle
add
mov
sar
and
mov
das
inc
ret
dec
mov
fsubr
mov
outsb
shrb
push
int3
ljmp
test
loopne
imul
sti
mov
dec
and
aad
jl
notl
fdivrl
xchg
dec
pushf
inc
fwait
push
lret
adc
push
lret
sti
jns
jno
sbb
into
rorb
fldl
imul
rcrl
pop
les
rcrl
je
xchg
movsl
push
jle
mov
icebp
push
mov
or
inc
push
bound
lds
shll
xchg
sub
fwait
mov
mov
push
decl
dec
jns
push
dec
adc
xor
nop
pushf
mov
lods
pop
in
xor
mov
xor
shl
outsl
stos
inc
adc
add
sub
pop
mov
dec
mov
push
inc
push
dec
dec
scas
inc
scas
outsb
mov
xchg
mov
cmp
push
dec
jmp
cld
int3
aam
xchg
insl
popa
in
pop
nop
and
inc
insb
push
inc
iret
ret
or
jecxz
stos
jbe
cmp
in
and
out
int
scas
push
fsubl
loop
mov
daa
roll
jo
enter
lahf
int3
add
sub
mov
loop
sbb
inc
xchg
sbb
sbb
aas
xchg
mov
sub
int
out
push
test
jbe
pop
push
mov
add
pop
mov
push
add
test
js
cmp
mov
and
les
gs
enter
or
imul
push
fwait
call
les
jle
std
insl
xor
enter
frstor
mov
pop
loope
add
fidivs
adc
out
sub
sub
test
outsb
mov
scas
flds
lock
sub
pop
mov
jne
xchg
lods
cs
aas
sbb
gs
int
sti
xchg
xchg
aaa
and
push
push
pop
bound
jle
popf
imul
addr16
and
andl
fwait
lcall
jnp
add
xor
xchg
adc
insl
les
pushf
xchg
repnz
imul
and
cmpsb
jg
push
ret
fwait
icebp
dec
push
call
pop
std
call
adc
out
int3
pop
xor
rorl
push
fidivl
add
push
iret
out
shlb
test
mov
sbb
cmpsb
push
or
mov
xchg
mov
mov
out
add
pop
and
aad
je
lret
jne
icebp
or
mov
pop
xchg
dec
or
mov
push
test
dec
pop
inc
sub
mov
jge
or
adc
imul
call
add
push
lahf
sti
adc
jnp
fnstcw
fwait
loopne
jbe
cmpsb
enter
and
cmp
ficoml
je
jnp
push
pop
jge
mov
xchg
cmpsb
lahf
bound
lcall
stos
in
jne
mov
mov
pusha
push
movlps
pop
cmp
pushf
xchg
sti
push
sbb
xchg
shll
in
xchg
mov
movsl
or
mov
ret
test
sarl
icebp
lcall
das
push
scas
mov
xchg
xor
outsb
xchg
sahf
pusha
pop
hlt
push
imul
mov
ds
das
push
mov
xchg
xchg
es
adc
out
and
mov
add
and
mov
pushf
addl
lahf
sti
enter
cmp
mov
pop
repnz
int3
inc
in
xor
mov
sti
and
xor
es
add
push
push
or
jmp
imul
add
rorb
jmp
mov
jb
pop
inc
bound
sub
fadd
ljmp
arpl
sbbb
push
cmp
imul
or
lret
xor
mov
mov
jecxz
ja
jne
rcll
pop
and
fstpt
sbb
cmpb
xor
xor
insb
adc
mov
rcrl
loop
pop
pop
adc
pop
lahf
sbb
cmpb
pushf
test
xchg
gs
xchg
lea
sub
mov
scas
les
xchg
sbb
mov
or
mov
clc
jo
mov
push
push
xor
push
mov
mov
dec
or
rcrb
pop
nop
es
rcll
test
cmc
jno
test
sub
pop
mov
mov
jecxz
ffree
inc
fsts
out
popf
pop
pop
cmp
popa
pop
pop
out
mov
popf
jl
setp
jnp
cmp
jne
stc
std
push
movsl
movsl
jle
mov
xchg
aam
cmp
sub
xchg
adc
push
push
mov
mov
xor
or
test
pop
enter
mov
es
sub
push
pushf
test
subl
mov
mov
and
ljmp
mov
and
mov
xchg
call
fisubrs
and
jb
mov
fcomps
out
call
or
in
cmp
mov
lods
loopne
push
push
aad
je
jbe
ret
aam
xor
xchg
lret
pop
jo
lea
fstpl
mov
adc
insl
mov
lcall
jle
xchg
and
adc
add
xlat
mov
out
lret
cmp
mov
cmp
test
dec
push
push
or
fs
pop
jae
lea
mov
inc
jmp
sarl
jbe
and
xchg
lret
adc
mull
mov
sbb
mov
sub
and
dec
or
gs
and
add
idivl
les
push
popa
fbld
shl
test
or
or
xchg
out
dec
inc
stc
fcmovb
mov
fdivrl
mov
push
and
ret
mov
mov
imul
adc
mov
fstpt
in
fadds
repz
xchg
sub
into
insl
and
and
sarb
cli
adc
and
bound
clc
push
shll
imul
or
loope
hlt
pusha
dec
fwait
adc
ficoms
sub
lock
je
inc
js
cmpsb
stos
lds
orl
mov
inc
cmp
sbb
xor
add
and
pop
jl
add
cmp
ret
push
cmp
cmc
add
fidivs
rolb
push
sub
es
push
pop
adc
test
or
lds
xor
sub
jmp
out
in
jg
fsubs
mov
or
dec
in
push
mov
cwtl
repnz
adc
lahf
mov
and
js
daa
push
jg
icebp
sbb
outsl
mov
dec
push
inc
pop
out
fisttps
jbe
cmp
pop
das
rorb
repnz
mov
mov
add
dec
cmpsb
fnsave
jmp
sub
arpl
adc
add
test
pop
cmpsl
gs
inc
out
or
imul
jbe
fcoml
xor
inc
xchg
sbb
fsts
nop
popa
enter
addr16
js
jae
mov
xchg
je
fwait
sub
mov
arpl
fwait
inc
add
dec
cltd
and
bound
and
push
push
jle
xor
push
imulb
fwait
pop
pop
push
pushf
ret
sbb
xchg
fisttps
mov
out
sar
insl
movl
jne
pop
sbb
pop
stos
mov
mov
jge
lcall
adc
ret
ret
push
pusha
pop
aad
xchg
mov
mov
mov
lret
movsl
popf
stos
cmp
and
push
movsl
lods
cs
out
jp
jg
mov
xor
mov
xlat
xor
testb
pop
popf
inc
int3
push
add
lods
dec
insl
ficompl
lds
pop
add
int3
or
daa
jl
and
mov
mov
movsb
pop
push
mov
ret
insb
ja
arpl
sti
pop
mov
mov
cmp
sar
jle
inc
ja
or
stos
jl
inc
mov
push
push
fwait
lret
jo
sarl
jp
pop
push
ret
add
and
inc
aaa
and
sub
test
stos
dec
stos
sub
lret
lret
push
fcmovne
push
add
cli
adc
test
rolb
jo
fsubrs
cmc
add
outsb
push
mov
inc
loope
cmp
fldl
mov
mov
mov
rcl
mov
and
xchg
lock
scas
pop
jecxz
mov
cmp
ds
mov
mov
jb
mul
adc
add
jg
mov
mov
lods
iret
push
adc
stc
movb
leave
js
mov
push
aad
mov
ja
push
ja
rorb
xor
mov
sbb
stos
fnsave
pop
sahf
testb
fimull
je
and
mov
nop
lods
mov
in
sahf
repz
sub
movlps
loope
addr16
cwtl
dec
iret
cmp
scas
and
push
xlat
inc
push
outsl
icebp
inc
xor
aaa
out
imul
mov
jo
hlt
push
outsb
das
cli
mov
loopne
mov
div
xchg
jg
daa
pop
mov
push
jb
jp
ffreep
dec
cld
dec
cmp
mov
aam
ss
ds
in
out
ss
mov
iret
sub
xlat
popf
pop
stc
aad
in
in
add
lahf
and
rcrl
in
hlt
into
sub
cmp
mov
pop
jo
imul
sub
inc
scas
popa
stos
ss
or
cmpsl
stos
add
enter
repnz
and
imul
aaa
mov
fstps
test
push
sub
fists
and
sub
ret
aaa
sub
adcb
push
jmp
xchg
jp
pop
cltd
add
sub
sub
mov
aas
rcl
leave
jp
push
jl
add
pop
cmp
sub
push
sub
lds
leave
rclb
ss
jno
or
pop
rcrb
cmpsl
ja
push
cwtl
push
dec
std
xchg
test
into
push
in
pop
adc
cli
outsl
inc
push
and
lret
pop
xor
mov
mov
xor
add
add
lret
cmpb
popa
es
cmp
out
cltd
adc
pushf
imul
add
mov
pop
xchg
push
jle
cmp
pop
pop
in
lock
xor
jne
mov
or
movb
mov
xor
pusha
sbb
insl
inc
cmpl
bound
out
sub
stc
dec
xor
outsl
adc
push
push
mov
xor
and
pop
cmp
xchg
aam
loopne
or
jne
jecxz
or
imul
cltd
sub
inc
push
mov
lods
popa
int
mov
repz
fistl
jo
mov
mov
mov
icebp
cld
stos
inc
cmp
mov
cmp
sarl
sarl
dec
fadds
nop
jle
sub
pop
sti
mov
mov
pop
mov
ss
mov
xchg
add
adc
jecxz
call
fwait
push
sub
dec
add
cmp
xor
pop
scas
push
inc
push
stc
sbb
xchg
push
push
xchg
sbb
mov
enter
sub
enter
push
arpl
sub
shrb
jl
mov
sahf
sbb
jmp
out
dec
dec
loop
daa
jnp
pop
ret
mov
cmpsl
push
mov
push
or
jecxz
xchg
je
jno
adc
jno
mov
insl
repz
push
movsl
ljmp
xchg
pop
xchg
nop
inc
add
shll
sbb
repz
xchg
inc
les
cltd
adc
cli
inc
push
popa
movsb
and
insb
call
aas
insb
xchg
ret
out
mov
adcl
lods
outsb
mov
dec
icebp
add
jno
xchg
pop
inc
pop
repnz
jl
rolb
mov
outsb
popa
je
js
sbb
pop
stos
mov
push
in
iret
mov
xchg
dec
jmp
push
mov
xchg
xchg
ljmp
jns
in
shll
popa
pop
push
pusha
mov
mov
int3
mov
test
or
fistl
jno
push
sbbb
fimull
add
in
inc
add
sbbb
sbb
sbb
jb
jmp
sbb
push
dec
pushf
das
rcll
or
dec
jl
shll
jmp
or
aaa
push
out
xchg
dec
ds
inc
rcrl
rorb
das
lahf
fisttpl
out
in
pop
test
lcall
push
mov
out
mov
das
lock
mov
loop
insl
nop
roll
inc
gs
jns
mov
shrb
fidivrs
adc
loop
das
pop
out
and
pop
fistl
popa
pop
and
xchg
mov
repnz
pusha
rcr
adc
negl
mov
add
push
icebp
xchg
add
sbb
push
insb
enter
jmp
insl
fadd
aam
pop
jl
inc
mov
lods
hlt
sub
mov
cmpsl
jb
mov
outsl
sbb
or
or
in
ret
iret
insl
out
inc
jae
fs
adc
pop
xchg
loop
adc
mov
add
lahf
jne
jp
insb
inc
stc
dec
jae
data16
fistps
jnp
dec
pop
push
fsubs
call
push
shrl
xchg
cs
and
or
push
shrb
adc
nop
mov
or
sti
roll
lock
lds
shl
or
mov
add
aam
out
rclb
sub
jge
push
adc
sti
sub
and
push
sbb
push
add
push
sub
testb
push
inc
push
outsb
clc
sub
xor
cltd
outsb
fistps
outsl
sbb
sub
fdivs
mov
shlb
push
enter
add
test
mov
or
in
inc
or
jp
imul
fwait
mov
push
int3
aas
gs
push
in
push
pop
movsb
or
and
shll
arpl
cld
out
jne
and
xor
dec
jp
cmp
adc
dec
daa
daa
sub
cwtl
mov
popa
mov
loop
aas
fs
adc
fcmove
adcl
add
lds
bound
dec
and
daa
cld
ljmp
add
fmuls
and
scas
lcall
outsb
adc
testl
mov
enter
and
arpl
imul
movsb
fcmovnbe
aam
lahf
fcompl
je
jle
mov
dec
pop
push
cmp
pop
jle
mov
or
adc
ret
xchg
lock
aad
push
test
aaa
bound
xchg
inc
push
out
mov
cwtl
sub
dec
rcl
mov
inc
mov
and
add
mov
das
pop
fistpl
or
mov
xchg
gs
mov
xchg
fcmovne
shlb
mov
xor
dec
test
fisubrl
push
adc
mov
add
cwtl
dec
jl
xor
ret
jb
outsl
outsl
testl
popf
and
stos
jg
imul
lds
dec
in
inc
dec
lock
push
add
sub
sti
mov
add
test
cli
loop
cmpsl
xchg
insb
adcl
int
rsqrtps
push
cmp
sbb
popl
inc
push
in
mov
or
inc
dec
loopne
cmpsb
aaa
add
cmpsl
imul
stc
mov
sahf
push
lds
fidivrs
push
rolb
mov
enter
jo
in
adc
inc
xchg
push
inc
inc
shlb
pop
outsl
jo
push
jae,pt
mov
inc
mov
xor
inc
scas
fucom
push
adc
jp
and
adc
imul
push
rorb
xor
out
xchg
or
jge,pt
cpuid
aad
dec
mov
xchg
dec
xchg
mov
add
cmc
sub
mov
insb
adc
inc
ja
xlat
lret
inc
jnp
jecxz
shlb
jl
or
dec
dec
bnd
inc
or
mov
mov
jne
jns
add
repz
jecxz
cmp
lret
mov
aaa
sbb
mov
cmc
lds
cmp
ljmp
jle
ret
in
add
sbb
imul
mov
dec
adc
fdivs
iret
or
xchg
int
xor
sbb
xchg
dec
xlat
repnz
push
aas
stos
sbb
xchg
pop
dec
scas
outsb
stos
gs
mull
hlt
pop
loop
dec
pop
add
mov
push
fsubrs
and
lcall
add
aas
or
pop
sub
pusha
adc
test
mov
mov
aas
xor
jae
pop
dec
mov
mov
in
mov
pop
daa
dec
add
cmp
pusha
addr16
ret
sub
hlt
inc
je
jle
sbb
xor
icebp
jne
pop
or
and
cmc
cmp
int3
mov
inc
or
mov
mov
sahf
inc
push
daa
inc
xchg
xchg
mov
pop
jecxz
out
mov
jmp
out
fisttpl
int
adc
aas
push
rcl
inc
aad
pushf
sbb
mov
inc
mov
mov
fldcw
dec
inc
jno
ficompl
out
pop
jae
xchg
in
pop
pop
jge
cs
movsb
sub
decl
fadds
inc
fs
mov
pushf
push
pop
push
jb
inc
movsb
incl
sarl
xor
push
clc
cld
pop
stos
enter
dec
xor
fbld
inc
and
dec
rcrb
ds
shl
and
jecxz
cld
and
adc
out
push
cld
mov
inc
inc
test
in
add
or
jl
arpl
dec
cmp
insl
push
fdivp
dec
outsl
and
cli
jae
mov
repnz
scas
sbb
pop
fwait
push
jg
int
lods
aas
or
movb
pushf
adc
mov
subl
je
sarl
loopne
das
sub
insl
xchg
cmp
or
shr
sarb
cmp
loope
push
and
add
jno
xor
enter
pop
mov
mov
mov
mov
mov
rcrb
cld
and
mov
test
pop
xor
pop
push
lock
mov
dec
lret
xchg
lret
ret
jns
push
xchg
es
enter
loop,pt
shrl
and
sbb
mov
xchg
jmp
adc
add
mov
dec
xor
vpminuw
push
mov
mov
cmp
in
das
imul
out
dec
or
stos
mov
aaa
sbb
sub
lahf
xor
fs
add
icebp
fistpl
shlb
stos
test
inc
mov
movsl
into
lea
sbb
mov
in
jno
push
jle
push
insl
or
cmp
sub
test
mov
dec
rorb
dec
aam
jnp
loopne
aad
insb
ljmp
and
or
test
cmp
and
adc
inc
mov
movsl
imul
inc
sub
pop
aam
push
sbb
roll
shl
into
int3
lock
das
std
jge
adc
mov
je
fldenv
daa
into
inc
xchg
int
es
outsb
mov
push
out
or
mov
and
cmp
sub
nop
cmp
dec
mov
js
inc
into
adc
inc
lds
sub
pop
mov
xor
pusha
hlt
pop
gs
sbb
mov
mov
push
jl
mov
pusha
mov
ja
adc
insl
ljmp
xchg
orb
rcrl
insl
sbb
shl
xor
add
lods
mov
push
in
inc
loop
negb
or
arpl
subb
adc
pop
xor
mov
test
aas
push
add
loope
adc
add
cmp
lret
out
pop
popa
out
popa
and
push
or
aas
and
into
push
mov
stos
cltd
jno
and
xlat
ljmp
ffreep
ds
sub
add
pop
rcrl
or
inc
repnz
lds
in
mov
xchg
dec
inc
push
mov
movb
and
sbb
sbb
mov
cmp
inc
lret
stos
adc
hlt
xchg
pop
or
sarl
dec
aad
pop
movsl
std
popa
push
jmp
outsb
mov
pushf
add
out
repnz
fwait
inc
je
and
test
jnp
sbb
repz
mov
jnp
das
push
jnp
push
push
push
xor
xchg
lock
pop
xlat
rolb
cmp
enter
sets
and
ja
xchg
cli
and
aas
fists
into
jo
popf
pusha
adc
std
mov
les
inc
lahf
dec
cmp
pop
jg
sbb
push
cmp
lods
push
adc
stc
sbb
pop
and
push
pop
adc
adc
arpl
push
add
cs
push
lods
sahf
jns
inc
xor
xchg
movsb
jle
test
rcrl
adc
sub
in
inc
ja
mov
outsl
sbb
jg
test
aam
movsb
es
mov
push
add
sub
int3
push
mov
dec
mov
insl
bound
cmp
ss
xchg
mov
or
imul
or
mov
adc
adc
aaa
hlt
push
dec
adc
mov
aas
xor
push
jnp
leave
inc
mov
lods
repnz
mov
xchg
jge
cmpsb
mov
imul
sub
xor
pop
clc
fwait
mov
ret
loope
dec
fdivrl
int3
in
ss
mov
outsb
out
mov
mov
sub
inc
push
arpl
pop
sbb
jb
adc
push
int
jne
push
insb
aaa
pop
jne
ss
and
jmp
xor
sbb
mov
sub
mov
test
jp
mov
or
out
cmc
push
ss
mov
sbb
sbb
fwait
and
xabort
dec
mov
xchg
inc
mov
sarl
add
cmpsl
test
jbe
mov
test
sahf
repnz
popa
add
inc
dec
or
loop,pn
or
cmpsb
mov
sub
pop
cmpsb
sbb
dec
stos
fmuls
lcall
push
add
mov
movsb
and
push
cmpsb
sbb
pushf
ficompl
dec
inc
arpl
ss
popf
fistpl
xchg
sub
jg
dec
push
mov
lahf
repnz
ds
dec
dec
mov
popf
pop
push
add
sbb
subl
aam
out
in
lret
adc
jecxz
popa
lcall
fsubs
lods
ljmp
int3
push
add
mulb
adc
adc
je
push
inc
ret
jle
in
data16
pop
jle
iret
sbb
cld
fwait
xor
jmp
cmpsb
dec
jo
iret
sub
fisubrs
pop
std
adc
cld
into
subl
divl
test
xchg
scas
mov
jge
jae
dec
push
bound
les
insb
xchg
flds
push
pop
nop
imul
int3
fdivrp
pop
jae
and
xor
aam
ss
enter
cmp
mov
sahf
cltd
push
inc
lcall
and
es
cltd
cmpsb
dec
fcompl
pop
iret
add
add
mov
push
dec
pop
into
pop
jmp
xor
aas
fcoml
into
out
stos
mov
call
addl
test
ds
adc
xchg
xchg
out
push
aas
loope
das
sub
imul
fs
mov
aas
out
inc
test
enter
in
ja
jmp
popf
cwtl
adc
add
imul
ds
addr16
aas
mov
mov
add
mov
sub
cltd
push
inc
mov
arpl
pop
sub
stos
scas
out
jb,pt
dec
pusha
dec
inc
mov
jmp
and
call
mov
pop
call
mov
mov
outsb
dec
add
clc
xor
push
gs
aaa
pusha
mov
sub
push
and
dec
dec
sbb
shll
mov
xlat
movb
mov
roll
pop
dec
jp
cmc
cld
jns
scas
rolb
call
jno
sub
xor
nop
cs
xchg
mov
mov
or
and
push
xchg
loopne
pop
or
repz
mov
in
jl
mov
add
leave
jno
sub
fldl
xchg
cmp
jmp
mov
imul
dec
fnstsw
jle
fsubrl
aam
sub
fwait
jecxz
rcl
enter
scas
mov
add
clc
xchg
imul
mov
or
and
enter
and
adc
xor
xchg
cld
sbb
mov
int3
lods
sub
subl
pop
mov
mov
xor
xchg
xchg
push
cwtl
in
rcrl
inc
icebp
jno
mov
pop
xchg
in
fs
lcall
cmp
js
and
add
jb
rcll
push
popf
xchg
stc
daa
daa
add
lock
lea
pushf
jno
mov
cld
xchg
mov
rcrb
add
fcom
test
pop
push
jge
push
mov
shll
outsb
push
clc
int
cmc
xchg
loop
aaa
jmp
lret
fcompl
push
pop
movsl
dec
xchg
icebp
cltd
test
daa
adcb
in
je
mov
shl
in
inc
mov
mov
jecxz
dec
scas
sub
shl
fcmovnbe
roll
insb
mov
dec
jbe
outsl
pop
in
mov
jmp
ss
add
jno
fs
xchg
lahf
call
adc
push
or
nop
jno
pop
pop
fidivrs
fwait
dec
test
popf
lods
cmp
sti
inc
stos
call
jecxz
jecxz
aad
ja
pushf
or
popa
lods
into
mov
pop
test
mov
mov
or
add
repz
js
rclb
lcall
mov
push
cs
popa
fisttps
push
in
ret
gs
mov
int
xchg
bound
or
aam
xor
es
das
in
jne
pop
mov
test
out
fbld
es
push
xchg
dec
xlat
mov
pop
inc
mov
loop
lcall
mov
mov
add
mov
push
movsl
lcall
dec
mov
pusha
cmpsb
lock
ret
adc
or
inc
sub
adc
xor
xchg
lcall
shrl
test
mov
aad
inc
popa
aas
aam
in
dec
insb
fmull
js
and
push
jbe
sub
mov
push
call
movlps
cld
xor
jg
mov
nop
push
adc
in
mov
sarl
in
fwait
xor
or
leave
fbld
mov
in
ja
xor
add
pushf
out
add
repnz
arpl
pusha
push
sub
ljmp
mov
cmp
add
les
pop
incb
lods
dec
sbb
call
push
mov
je
sbb
shr
outsl
xchg
ret
ja
psraw
incb
pop
fisttpll
and
adc
add
adc
mov
xchg
jnp
mov
int3
xor
imul
fnstenv
xor
rolb
int
push
lcall
push
pushl
hlt
mov
jge
and
cli
sarb
bnd
mov
insb
or
mov
repnz
aas
mov
gs
aam
mov
push
call
outsb
mov
xlat
enter
cmp
mov
jge
in
aaa
cld
enter
mov
xchg
sbb
gs
loope
aam
xorl
mov
jns
out
sbb
sbb
stos
xorl
scas
sarl
push
data16
test
jg
fstpt
adcl
out
ret
jbe
insl
shl
mov
test
call
dec
cmpsl
cwtl
xlat
lcall
xor
sub
or
sti
mov
and
pop
lods
push
mov
ss
add
iret
xor
ficomps
pop
jmp
repz
cmp
add
rcrl
and
lcall
cmp
cmp
mov
mov
pop
fisubrs
adc
pop
pop
outsb
xor
mov
xor
cmp
test
fstpl
ficompl
pushf
sarb
ret
daa
mov
aas
into
out
xor
jle
jne
jmp
mov
mov
in
ror
sub
popf
add
repz
bound
in
rcll
cld
fninit
test
mov
cmpsl
outsb
lock
cmc
add
sbb
loop
mov
imul
loopne
fidivrl
mov
sub
cmp
insl
sbb
movsl
daa
ret
cmp
xor
jmp
adc
mov
jbe
push
sarl
jbe
xlat
jb
addr16
push
lods
jb
adc
mov
mov
mov
lods
cmp
fimuls
ret
dec
dec
mov
adc
sbb
xor
lret
jne
stos
cmp
ja
sub
xchg
shl
dec
jl
xor
push
bound
xchg
fiaddl
aam
xor
stc
cmp
sub
nop
xchg
pop
pop
xchg
std
int3
xor
sbb
sbb
pop
mov
xchg
jno
scas
dec
xchg
sub
fdivl
test
dec
xchg
in
mov
dec
cld
push
push
mov
xchg
std
pop
lcall
xor
push
mov
data16
xor
jno
cltd
lods
inc
add
nop
sar
mov
insb
and
testl
inc
cmc
push
mov
hlt
fisttps
mov
xor
mov
aam
popf
aas
xchg
lods
cld
mov
repz
je
repz
lock
adc
inc
dec
adc
sbb
imul
clc
fldz
inc
movsl
pop
lds
pop
rcll
rcrb
rcrl
cmpsb
jae
inc
insl
or
add
nop
notl
sub
test
daa
mov
hlt
sti
ret
adcl
icebp
jmp
jg
xor
loope
arpl
inc
jle
mov
mov
jmp
ss
imul
mov
das
iret
leave
push
lods
out
mov
pop
mov
add
enter
jge
pusha
sahf
orb
cs
jne
push
lahf
mov
adc
inc
inc
lea
inc
outsl
lret
cmpb
enter
iret
inc
add
repnz
mov
or
out
adc
xor
mov
loopne
sub
das
repz
into
loop
fsubs
scas
bound
pop
mov
push
cmp
add
into
mov
sbb
dec
add
in
dec
xchg
jae
lods
outsb
addr16
jae
dec
inc
scas
inc
out
mov
test
sub
call
bound
mov
cmp
push
hlt
fldt
in
jbe
repnz
add
mov
fldenv
enter
dec
jns
or
into
ss
mov
bnd
icebp
cmpsb
jg
lcall
ret
adc
cmc
jl
arpl
or
cmp
dec
push
lock
cmp
daa
mov
mov
fwait
mov
dec
jbe
jg
mov
pop
std
xor
pop
iret
mov
and
movsl
adc
add
outsl
pop
mov
sbb
cs
push
insl
ficoms
mov
push
mov
test
xchg
cmp
repnz
jecxz
push
jbe
in
shlb
cmp
fs
bnd
stos
lahf
jns
out
fcomip
xor
jae
repnz
sahf
les
xor
push
mov
sbb
cmp
inc
das
jg
sti
xchg
cld
movsb
adcl
movsb
mov
clc
sbb
in
nop
mov
cmc
adc
pop
jle
cmp
jecxz
cmp
or
adc
xchg
push
outsb
sub
std
fs
pusha
cli
mov
sahf
das
pop
das
ret
lods
aam
push
xor
and
movsl
cmpsl
inc
mov
cmp
mov
push
push
sub
subb
xchg
sub
mov
cmc
lret
mov
xchg
pop
mov
into
sub
ja
pop
pop
sub
hlt
adc
out
pop
lret
sbb
rcrb
xchg
pop
add
and
cmp
inc
repz
and
rolb
mov
lcall
sbb
cltd
fs
std
lea
jne
mov
cmpsl
lods
xor
cmc
fs
jg
or
mov
xor
and
imull
cmpsb
sbb
es
das
mov
stos
and
and
sub
adc
pop
ljmp
divb
push
fs
call
mov
sbb
cs
fldenv
xor
leave
clc
sub
dec
sbb
lea
fwait
cmpsl
into
cli
push
imul
add
int3
mov
add
fldl2t
mov
push
cmpsb
add
test
pop
outsl
test
out
in
mov
xor
or
dec
orb
jge
add
insb
add
cltd
lahf
pop
push
mov
cltd
xchg
pop
stos
mov
xchg
daa
shlb
mov
stos
ljmp
daa
mov
mov
lods
xchg
adc
and
xchg
mov
ds
xlat
mov
push
add
data16
je
mov
cmp
rol
cli
loop
std
push
sbb
cmc
loopne
push
and
cmc
movntps
xchg
xchg
push
aaa
inc
icebp
fs
movsl
inc
push
insb
dec
sub
in
leave
cmp
dec
scas
mov
mov
lds
jns
les
xlat
imul
pop
inc
cs
pop
leave
mov
jo
push
in
fcomp
loop
pop
jnp
mov
dec
and
sbb
rorb
sub
cmp
push
sti
setb
leave
fwait
into
sbb
xchg
orl
inc
ljmp
mov
push
insb
lock
test
jl
loop
loopne
inc
cs
xor
pop
scas
cmp
jmp
xlat
lds
push
pop
sub
dec
jne
bound
movsb
adc
or
xchg
mov
cmp
jmp
bound
push
mov
cmp
out
jo
and
loope
fdiv
xchg
dec
dec
orb
in
push
gs
cmp
mov
test
jmp
stos
call
js
stc
fwait
jg
xor
arpl
dec
mov
std
outsl
adc
stc
mov
rclb
lock
hlt
sub
jne
repz
xchg
push
int
nop
and
push
jp
mov
cmpsb
add
shrl
push
xchg
mov
cmpsb
pop
enter
sarb
shlb
fsub
cmp
std
cmp
clc
jb
movsb
into
ror
and
movsl
rcr
xchg
lods
adc
lret
pop
in
pop
mov
push
das
popa
imul
icebp
fmull
iret
enter
sbb
dec
imul
push
mov
test
lea
inc
sub
movsl
data16
rcl
lods
mov
mov
lea
push
imul
adc
addr16
xchg
hlt
or
sbb
sti
pop
ret
test
xchg
dec
js
aas
jl
popa
add
imul
js
pop
cmpsb
mov
aad
fcompl
jge
je
adc
sub
mov
into
mov
inc
sub
add
adc
xchg
push
les
cli
cmpsl
mov
jg
popf
mov
sahf
insb
jmp
popa
mov
in
jle
das
adc
les
sbb
add
scas
and
sbb
cmp
mov
jle
faddl
cmpl
push
rcr
cmp
push
mov
mov
shrl
fld
push
mov
pop
push
js
mov
repz
adcb
or
cmc
lds
adc
push
mov
lods
scas
lods
sub
or
dec
lret
repnz
pusha
in
jb
insb
out
xor
fucomip
mov
notl
cmp
push
cmpsb
push
sub
je
mov
inc
cwtl
incl
fcomip
sti
and
popf
mov
insl
outsb
add
call
mov
mov
cmp
movsl
inc
mov
fmull
jl
mov
cmp
mov
mov
jno
lret
daa
int3
dec
cld
jae
rclb
add
inc
aad
pop
jge
adc
pop
mov
lahf
adc
mov
mov
or
and
out
mov
fildl
push
sub
enter
cli
and
xor
sub
js
fisubrl
pop
dec
popa
popa
mov
pop
lahf
mov
mov
das
dec
push
fisttpll
xor
stos
in
or
push
in
xchg
inc
xor
pop
pop
inc
inc
mov
sub
std
mov
sub
fisubrs
inc
push
fsubrs
leave
adc
adc
les
adc
push
push
fstpt
dec
jecxz
and
pop
shl
cmp
add
aam
sbb
loopne
xor
dec
negb
iret
in
dec
xchg
pop
adc
mov
pop
shll
scas
test
xlat
ss
adc
mov
mov
in
dec
xor
and
sub
fcoms
fdivs
push
xchg
out
push
xchg
pusha
stos
dec
xchg
popa
mull
jecxz
add
xchg
mov
push
nop
pop
orb
sbb
gs
cmpsl
mov
arpl
mov
cli
insb
dec
ror
xor
ja
mov
repnz
mov
bound
sahf
xchg
xchg
adc
jnp
push
cwtl
push
pop
mov
jae
pushf
lahf
sub
loop
push
sub
fs
stc
pop
insl
mov
and
bt
add
sbb
iret
test
xchg
popf
mov
rolb
iret
sahf
mov
mov
shrl
adc
cld
dec
cmc
inc
jb
xor
and
cmc
test
imul
negl
push
stc
arpl
ljmp
js
adc
mov
mov
jmp
lods
mov
jecxz
mov
addb
push
outsl
xchg
in
xorb
mov
ret
cmp
flds
sub
lock
ret
mov
sbb
jp
xchg
xchg
mull
enter
aas
addr16
imul
jns
mov
mov
mov
aas
sub
es
pop
sub
pop
data16
jmp
jns
lock
call
mov
inc
jnp
jecxz
stos
mov
pop
xor
mov
jno
cmpl
add
fisubrl
pushf
jecxz
lcall
aam
push
xchg
cmp
rclb
fs
jecxz
fmulp
outsl
dec
cmc
push
jmp
daa
fadds
daa
dec
mov
mov
gs
stc
dec
inc
cltd
xor
fbld
jge
roll
cmp
sbb
jne
insl
jg
mov
addr16
leave
gs
or
aas
cmp
mov
push
xchg
cwtl
lcall
fnstenv
fidivl
aaa
leave
mov
xor
pop
sahf
mov
jge
insl
das
lret
into
push
sub
add
lods
call
pop
repz
push
mov
push
pop
add
jge
jb
cltd
push
pop
xlat
mov
scas
insl
and
mov
push
add
cmpb
ja
adc
psubb
and
pusha
mov
addb
scas
das
sarl
clc
mov
out
pop
or
or
das
popf
pusha
call
test
or
out
gs
mov
push
test
insb
mov
sub
in
dec
ficomps
fstpl
mov
xchg
pop
icebp
fimull
xchg
mov
fcmovnb
sbb
push
adc
addr16
pop
mov
out
into
leave
mov
out
add
repz
popa
dec
std
fwait
js
pop
ret
cwtl
aam
ds
cld
std
scas
xchg
push
mov
dec
loope
hlt
add
xchg
pop
lret
mov
push
inc
or
insb
outsb
in
dec
lock
ficoms
mov
ds
mov
cld
fstpt
in
xchg
push
xlat
js
insb
add
out
addl
jnp
mov
gs
jbe
lods
adc
fsubrl
fisubs
inc
setge
or
gs
movlps
ss
icebp
or
test
adc
dec
xchg
cmpsl
and
nop
sbb
xlat
cwtl
and
pop
scas
insl
dec
out
cmp
scas
cli
lea
dec
pop
jno
adc
xchg
std
cmp
aad
ret
sub
push
jmp
add
mov
push
xor
scas
sbb
mov
jo
cmp
sbb
jb
push
push
inc
or
pop
les
cmp
enter
out
mov
mov
popl
cmp
dec
pusha
int
mov
leave
xor
mov
sbb
loop
dec
jb
pop
push
in
out
stos
sub
dec
jle
adc
popf
addr16
in
pop
and
or
stc
lahf
pop
xor
jg
cwtl
pop
sub
dec
dec
pop
fnsave
sbb
mov
stos
xchg
and
pop
and
nop
call
movsb
pop
rcrb
in
push
iret
aas
mov
push
xchg
call
into
hlt
jle
insl
les
mov
mov
inc
aas
leave
add
dec
nop
cmp
imul
cmpb
dec
enter
xor
cltd
mov
fs
icebp
xchg
mov
xlat
pop
std
lar
int3
lcall
pop
adc
repz
pop
add
arpl
sti
ljmp
std
jle
daa
jae
sub
in
mov
pushf
lahf
pop
stos
and
dec
mov
bound
mov
pushf
inc
pop
or
out
sbb
or
mov
rclb
roll
jp
cmpb
pop
jbe
orb
in
cwtl
mov
std
test
push
xchg
xchg
pop
sub
gs
shl
in
data16
in
ret
cmp
leave
jns
dec
shl
xor
stos
loopne
ljmp
fs
in
dec
or
add
sarl
adc
dec
mov
pushf
imul
hlt
or
cmpsl
testl
mov
rorb
xor
shll
sub
push
or
push
movsl
daa
jb
lds
loopne
stos
lods
ret
dec
xchg
or
mov
gs
lret
pop
fidivs
jns
stc
and
push
dec
mov
cwtl
or
mov
sub
xor
pop
jns
jmp
mov
ret
leave
mov
xor
test
icebp
cmp
into
pop
add
push
sbb
dec
xlat
xor
xor
mov
and
jnp
jge
sub
insb
rclb
mov
add
cmp
dec
aaa
push
flds
lcall
push
mov
xor
loope
pop
or
sub
or
lcall
fisttpl
inc
iret
jo
sahf
out
push
mov
cmp
imulb
leave
inc
xor
cli
jmp
sub
pop
push
jecxz
incb
outsb
jb
arpl
push
and
mov
mov
jl
cmp
gs
adc
and
push
test
pop
fwait
add
jp
xor
sbb
lret
pop
mov
in
ljmp
sub
xor
sub
fwait
scas
insl
out
fscale
sbb
xor
mov
insb
or
add
inc
push
lahf
xchg
pop
xchg
xor
mov
outsb
inc
js
out
and
jae
pushf
jle
mov
fldcw
inc
subb
add
jle
jae
push
jo
mov
dec
in
cli
popf
adcb
mov
dec
repnz
repnz
repnz
test
push
shl
aam
adc
std
fbld
inc
push
icebp
add
stc
aad
sbb
xchg
mov
mov
cmpsb
repz
jnp
repnz
and
imul
rclb
xor
test
inc
mov
jge
daa
fisubrl
stos
jns
xor
cli
inc
lret
leave
sub
xlat
mov
jae
insl
push
xchg
xor
in
mov
push
xchg
shll
aam
lcall
adc
jo
mov
or
adc
ljmp
stc
rclb
or
mov
cmp
mov
mov
addr16
cs
scas
jbe
into
outsl
shr
xchg
mov
push
inc
out
jae
jno
push
enter
mov
daa
notb
cmp
loope
xor
push
adc
and
mov
mov
mov
sbbb
sub
push
aas
and
insl
inc
sub
mov
cmp
lock
cmp
leave
xor
push
cmp
sbbl
inc
mov
pop
cwtl
lcall
mov
std
hlt
insl
rcrb
nop
inc
jmp
add
movsl
movsb
cld
dec
mov
xchg
in
or
cmc
and
jb
fsubrl
fildl
mov
jmp
mul
xchg
add
or
adc
stos
dec
pop
icebp
or
or
test
inc
loopne
iret
inc
sahf
cmp
fsubrl
mov
xlat
sub
cld
and
cmp
sub
imulb
mov
lcall
and
repz
movsb
shll
jb
std
leave
test
xor
fistpll
das
xor
sbb
imull
mov
fdivrs
mov
push
cwtl
xchg
stc
clc
in
fnsave
xchg
inc
mov
add
cs
mov
int
jb
in
adc
lret
adc
stos
iret
inc
xor
dec
fistl
arpl
ja
push
testl
fwait
hlt
mov
test
inc
inc
jl
adc
jb
dec
dec
xchg
add
add
inc
fdivrl
loopne
and
push
hlt
lock
push
test
cmpsb
roll
mov
cmp
push
cmpsb
adc
cwtl
sbb
inc
std
sub
mov
repz
or
mov
push
enter
inc
pushf
cmp
mov
cmc
sub
push
data16
adc
xchg
sahf
pushf
pop
into
faddl
jne
jg
mov
mov
sub
pop
xchg
inc
inc
arpl
or
rcrb
lock
call
fmull
insb
into
mov
rol
int3
outsb
push
fcmovbe
mov
mov
jmp
cmp
sti
adc
mov
pop
dec
ja
and
divb
shlb
or
or
sub
int3
pop
mov
cltd
cmp
lretw
sub
xchg
mulb
xchg
adc
cmp
lods
cmp
xor
pushf
fnstsw
ss
fcoms
cli
test
or
shl
or
pop
loopne
dec
popf
inc
xor
mov
addr16
push
ja
inc
out
aad
cmp
adc
mov
cwtl
cmpb
cli
or
xor
int
mov
out
outsb
push
mov
stc
cli
sbb
jle
pop
lea
fs
push
mov
xor
repnz
pop
cmp
cmp
popf
and
mov
jg
inc
adc
div
xchg
rolb
rolb
xor
je,pn
in
push
lock
test
in
or
inc
push
mov
add
out
jae
mov
lock
mov
jns
inc
xchg
das
pop
jecxz
shl
scas
lcall
dec
clc
ljmp
adc
scas
push
cmc
in
lods
and
push
movsb
lods
jecxz
xor
ljmp
adc
clc
jnp
xor
hlt
dec
dec
sub
cmp
stos
mov
mov
mov
mov
jg
jbe
out
in
ret
jge
mov
mov
dec
jb
lret
mov
fs
jecxz
dec
je
lds
lret
adc
push
or
push
fs
aas
hlt
inc
inc
dec
mov
imul
and
xchg
lret
add
loop
ss
sbb
xchg
lcall
loope
movsl
addl
mov
movsb
cmp
mov
dec
in
add
mov
arpl
cmpb
push
push
and
mov
lods
cmpsb
jecxz
push
mov
adc
int3
lods
outsb
mov
fdivrs
pop
or
and
iret
in
movsl
into
and
xor
jno
test
xchg
or
cmpsb
mov
pop
testb
dec
fstl
push
addb
cli
xor
mov
iret
pop
adc
cld
push
bnd
xchg
loop
xor
jg
cli
cmp
loop
call
or
lahf
imul
fucompp
sbbb
mov
lods
xlat
lock
jnp
mov
cmp
in
sub
inc
cld
in
pop
bnd
xchg
inc
in
movsl
out
sub
cmp
sahf
inc
imul
jle
rcrl
addl
jno
inc
cmc
add
mov
xor
sbb
mov
out
fmul
dec
xchg
lahf
testl
enter
js
inc
dec
jno
mov
xchg
cli
das
mov
cmp
clc
jnp
push
stos
dec
xor
nop
cltd
ljmp
in
int3
ss
cmp
mov
mov
je
push
mov
inc
adc
fxch
xchg
and
iret
cmpsb
in
lock
pop
dec
pop
ja
jns
push
and
jns
mov
jo
push
sarl
jnp
movsb
sub
jecxz,pn
fldlg2
mov
cmpsl
jns
xchg
xchg
pop
cs
sub
xchg
cmp
lcall
bound
inc
mov
cli
aam
mov
or
aas
cmp
iret
mov
sahf
mov
mov
push
stos
pop
push
cmp
inc
mov
or
mov
aaa
jns
test
arpl
jne
je
ljmp
push
push
hlt
jle
inc
adc
or
es
aam
cli
cli
xor
xor
add
push
lea
int3
pop
add
jmp
cs
xchg
addr16
in
movsb
outsb
sub
xchg
pop
xlat
movsb
in
xor
mov
rcrb
and
jae
pushw
pop
dec
pop
stos
pop
call
sbb
ret
fdivl
lahf
rclb
inc
int
cmp
push
daa
add
repz
int3
dec
hlt
mov
push
pop
andl
and
pop
mov
movsl
push
xor
andb
sbb
outsl
sub
jecxz
or
xchg
lods
mov
or
and
mov
cmp
int3
push
add
into
push
stos
shl
add
sub
jo
mov
xor
call
sti
outsl
call
add
dec
and
mov
add
daa
lret
adc
pop
imul
sub
adc
dec
pop
jne
stos
rcrl
mov
xor
fnsetpm(287
pop
fildl
hlt
icebp
mov
jno
xchg
in
vpshufhw
mov
in
mov
dec
aaa
sub
jno
sbb
sub
pop
and
insb
jg
nop
xchg
push
sbb
pop
imul
push
loope
sahf
rcll
and
adc
xor
dec
test
inc
shll
lret
mov
cmc
daa
add
xor
pop
dec
or
addl
mov
push
es
rolb
sbb
in
inc
mov
lds
mov
pusha
jp
lret
and
sbb
out
jmp
aad
adc
dec
push
jne
fistl
adc
jbe
sbb
fdivl
mov
loop
insb
inc
add
lahf
jecxz
push
pop
sahf
mov
not
adc
dec
mov
mov
rol
xchg
aaa
xlat
push
mov
dec
sub
ret
jg
push
ret
jnp
addr16
imul
xchg
mov
leave
andnps
push
adc
lods
xlat
dec
mov
and
push
mov
mov
movsl
xchg
mov
lahf
movsl
sbb
gs
jb
mov
dec
push
pop
fistpll
mov
xor
andb
adcb
fisttpl
sbbb
iret
insl
fwait
xchg
popa
lret
mov
shrb
push
scas
mov
scas
inc
inc
stos
cmp
into
bnd
adc
ret
jno
inc
and
mov
mov
mov
push
push
gs
pop
inc
jecxz
mov
int3
je,pt
frstor
xchg
mov
add
fcmove
aaa
aaa
popf
stos
les
fsubl
mov
jl
lahf
adc
outsl
mov
jge
scas
jns
fstps
xchg
mov
mov
pop
push
xor
cld
mov
sub
in
and
sbb
push
shlb
xor
mov
cmpb
push
push
loopne
inc
dec
movsl
adc
xchg
dec
aaa
sub
push
push
pop
cmpsl
xor
lea
adc
shlb
ret
xchg
test
sar
lret
pop
sarl
gs
lock
push
rorb
jge
jnp
xor
adcb
mov
mov
dec
ret
in
sub
int3
inc
adc
imulb
add
jbe
push
cmp
push
shr
push
pop
cmpsl
fsubrp
call
inc
and
mov
dec
incb
test
jmp
scas
in
pop
or
xchg
adc
leave
mov
mov
data16
in
das
push
imul
xchg
test
push
pop
pop
adc
cmp
jae
mov
ss
leave
jp
pop
sbb
dec
ljmp
mov
daa
mov
arpl
jmp
jo
nop
insb
jmp
jae
push
ret
scas
and
sub
mov
out
js
hlt
xchg
xor
das
inc
xchg
inc
imul
lcall
das
hlt
pop
bound
repz
dec
popf
mov
sbb
mov
mov
jne
mov
leave
jbe
xchg
mov
push
sub
add
dec
fisttpll
imul
adc
loop
xchg
xor
cltd
insb
jge
loope
imul
dec
jns,pt
clc
mov
adc
mov
data16
test
pop
and
shlb
push
xchg
in
in
insl
sub
cmpsl
in
lds
insl
sti
aaa
pop
sbb
lcall
lret
test
mov
and
sbb
imul
xrelease
mov
sub
xchg
int3
inc
xchg
in
fisubrs
dec
bnd
mov
jns
pusha
or
sahf
inc
in
mov
mov
mov
outsb
dec
insb
mov
dec
fs
in
xchg
adc
in
aas
mov
cs
add
lea
shll
adc
std
sbb
daa
orw
gs
fwait
pop
fdivrl
and
stos
jge
lcall
xchg
push
cli
inc
cmp
ret
inc
iret
mov
mov
add
hlt
mov
popf
jle
jo
decb
mov
inc
pop
scas
es
pop
add
aas
sbb
in
sbb
pop
inc
fiadds
and
add
js
cmpb
xchg
xlat
pop
cmc
mov
cmp
xchg
call
fidivrl
push
mov
femms
add
es
imul
sbb
pop
aas
fistl
adc
lods
aam
std
das
iret
ja
bound
and
add
repz
loopne
aaa
imul
mov
fcomps
jmp
mov
xchg
xorl
push
push
push
in
push
add
and
adc
xchg
jl
ss
call
aaa
in
ret
sub
cmp
cmpsl
mov
push
inc
sbb
or
cmp
mov
test
ja
pop
mov
aam
in
test
scas
fmul
cmp
cmp
sub
cmp
fsubrl
inc
cmp
jo
cmp
lret
rcll
lods
cmp
xchg
cmpsl
jecxz
popa
bound
insb
rcrb
cmp
inc
and
hlt
fistpll
std
pushf
mov
jge
sbbl
daa
dec
mov
pop
cmp
push
and
icebp
cld
cmc
cld
int
inc
push
cmp
sarl
push
shlb
jo
mov
sbb
or
jae
sti
outsb
idivb
jnp
repnz
bound
xchg
xchg
leave
pop
ljmp
sbb
fwait
jbe
or
ljmp
mulb
add
insb
leave
sbb
dec
pop
xorb
jg
xor
daa
mov
out
xchg
xchg
insl
push
mov
cmpsl
ja
fsubrl
sbbb
push
sbb
sub
push
mov
cmp
xor
aad
frstor
movsb
sbb
push
jo
dec
cmp
jp
cmp
ja
cmp
mov
push
cmp
mov
or
sbb
cltd
jmp
les
in
repnz
mov
push
aad
mov
cmp
sub
loope
add
jns
adcb
out
shl
mov
sbb
inc
insl
int3
mov
adc
test
ljmp
pop
test
and
cwtl
xchg
mov
cmp
and
ds
aaa
mov
jns
xchg
sub
out
arpl
jl
movsl
lock
cltd
outsl
push
popf
outsb
xor
mov
daa
cmp
jne
out
cmp
fcmovnb
popa
mov
notb
aam
add
into
mov
btcl
sbb
cld
enter
aam
mov
std
repnz
push
sub
outsb
stos
imul
sbb
mov
fstpt
call
pop
movsb
jle
xor
test
cmp
mov
cwtl
sbb
push
lds
mov
push
mov
sub
cli
out
push
and
leave
jp
sbb
inc
xchg
prefetch
xchg
sbb
lock
test
jl
into
sub
or
nop
push
out
mov
mov
mov
enter
adc
mov
jne
push
mov
jge
dec
dec
mov
add
push
sbb
mov
ljmp
jmp
xor
jo
or
loope
adc
dec
scas
push
mov
notl
lds
sbb
shl
mov
and
shr
push
cs
cwtl
pop
aaa
sub
sbb
add
std
jmp
lcall
cmp
out
lods
faddl
sub
dec
sub
dec
and
mov
pop
xlat
lret
cmp
xchg
push
test
fstps
lahf
jge
imulb
lock
imul
and
or
movsl
xor
pop
sbb
pop
push
test
ficompl
test
daa
loope
cmpsl
dec
adc
and
mov
hlt
test
mov
fcomps
outsl
jno
cmp
outsl
insl
xchg
dec
loope
enter
mov
adc
lds
dec
xchg
mov
divb
mov
cld
int
add
call
sub
sbb
repnz
cmpb
adc
das
xlat
sbb
mov
push
sub
inc
pop
aam
ljmp
ljmp
and
out
inc
lock
sub
dec
jno
adc
daa
and
jo
das
mov
rcr
out
lcall
aas
in
fidivrs
dec
add
cmp
sbb
sbb
xor
roll
and
inc
sub
mov
pop
push
jge
or
dec
pop
add
dec
xchg
bound
outsl
and
add
mov
push
or
loop
call
pop
loopew
decb
clc
sbb
out
test
fsubs
xor
fwait
mov
pop
das
shl
dec
mov
xor
jg
add
xchg
xor
xlat
dec
aam
or
xor
mov
push
daa
out
sub
les
push
xchg
push
push
mov
push
adc
push
jecxz
xor
jg
xchg
pop
bound
pop
out
mov
jle
sub
les
push
outsb
insl
cmp
cli
xlat
bound
jl
inc
or
fiaddl
jg
call
inc
mov
shll
cmp
into
xchg
sbb
insb
outsl
lods
ret
sahf
sbb
popf
fcmovb
sub
loop
maxps
inc
dec
in
add
mov
into
mov
imul
js
dec
sub
xor
arpl
jle
cmp
mov
in
js
lcall
mov
jo
or
lds
xchg
loop
cmp
push
jo
xchg
mov
dec
mov
cmpl
mov
imul
pop
mov
push
addl
ds
stos
dec
out
or
jbe
sbb
shl
mov
loopne
dec
mov
cs
movsb
cli
sbb
rorb
jg
jns
mov
dec
aaa
dec
dec
aas
xchg
dec
mov
lret
jl
cmpb
inc
dec
sub
xor
int3
cld
fdivs
adc
js
xchg
mov
jb
mov
ficoms
scas
mov
jae
mov
outsb
outsl
insb
xchg
or
arpl
lods
pop
popa
xchg
lods
and
scas
cmp
rcrl
fcomps
sbb
lret
xor
out
int
xchg
lds
add
or
adc
inc
loopne
or
mov
arpl
ds
mov
nop
or
mov
mov
cmpsb
inc
jns
and
jg
test
xchg
jno
jo
pop
jmp
pop
andb
loope
lcall
adc
xlat
outsb
enter
jns
or
aaa
fistl
adc
ret
subl
notl
popa
mov
enter
sbbl
decb
xchg
pop
testb
hlt
lcall
test
stos
mov
push
sarl
movsl
add
cld
mov
or
inc
ficompl
insb
xor
adc
pop
sub
lret
mov
push
mov
mov
jmp
movsb
sbb
ss
jp
and
cmp
call
sub
push
xor
xchg
jae
or
sbb
add
out
cmp
aaa
jb
and
mov
push
add
push
jmp
mov
dec
imul
inc
jae
inc
rorb
pop
xor
lods
aas
pusha
sub
int3
inc
es
xchg
cmp
mov
or
pop
movsl
pop
movsb
add
or
addl
cmp
xlat
mov
sti
jmp
pushf
mov
mov
call
sarb
outsl
lret
dec
pop
aas
mov
out
test
jo,pt
les
jg
sub
lods
mov
inc
sub
fists
inc
sub
lods
aam
mov
xor
ljmp
fsubrs
or
js
inc
xlat
sub
cmpsl
and
push
lods
int
pushf
lods
mov
dec
pop
fwait
push
jno
jp
and
push
leave
ss
aaa
mov
js
addr16
push
fidivrl
stos
xor
fsts
pushf
lods
in
inc
cmpsl
jge
sahf
loop
xchg
sub
data16
fistl
sub
add
lods
lds
mov
adc
loope
sbb
mov
mov
divb
out
clc
jmp
cmpb
lds
adc
sbb
jle
or
movsl
jp
jae
mov
and
stos
mov
out
in
mov
mov
xor
rcrb
aaa
sarb
ja
in
cli
out
sarl
iret
stos
sub
xchg
xchg
mov
bound
ja
jae
jbe
push
sbb
xchg
sub
in
mov
or
and
scas
dec
pop
sbb
es
fiaddl
pop
adc
push
cmc
push
fbld
dec
loop
sub
pusha
jb
lods
adc
cmpsb
fiaddl
mov
rcrb
and
pushw
adc
pop
movsb
popf
mov
andl
lret
nop
repnz
arpl
adc
xorb
popf
add
cli
in
jns
sarl
xchg
out
loope
adcl
mov
push
gs
cli
adc
into
mov
sbb
nop
add
insb
scas
jmp
cli
movzbl
inc
adc
jmp
popa
adc
jo
repz
loop
jb
cmp
shrl
fucomp
sahf
jecxz
xor
or
cmp
leave
sbb
je
adc
mov
jg
out
mov
rcrl
sub
es
sbb
stos
lea
pusha
subb
push
cmp
fdivl
mov
fsub
mov
les
loopne
movsb
mov
iret
xor
das
push
mov
fistps
popf
cmp
xor
out
idiv
scas
imul
xchg
inc
pop
jbe
push
push
mov
lock
add
dec
fsubs
jge
jmp
clc
mov
lds
or
ret
cmpb
push
mov
mov
mov
ja
push
je
xor
sbb
add
sbb
sub
out
push
xchg
loope
sbb
mov
add
je
inc
and
pop
push
push
lds
xchg
xor
xchg
jg
lock
cmpl
jle
jle
xchg
inc
in
or
jne
pand
adc
and
call
lcall
jb
pop
divb
out
pop
rcl
inc
pop
dec
mov
sbb
mov
jl
xor
scas
test
lret
inc
add
int3
test
cmp
add
fwait
or
pusha
jno
dec
sbb
pop
pusha
cmpsl
fstl
outsb
jbe
rclb
mov
jnp
push
xchg
mov
jo
mov
outsb
mov
sbbb
das
xor
stos
push
and
aaa
add
imul
push
imulb
and
pop
mov
aaa
rorl
mov
rorb
mov
aam
sub
jg
ficoml
lods
addb
leave
push
cmp
mov
pop
mov
cmpsb
in
fimull
in
orl
cmp
mov
cld
loop
out
adc
push
cmp
adc
push
sub
in
lcall
sub
jbe
pop
pop
enter
push
pop
fldenv
or
out
adc
cli
cmp
xlat
cmpsl
std
fs
dec
inc
add
int
test
inc
inc
rcrb
jg
or
iret
lea
in
xchg
sbb
xchg
mov
jecxz
adc
sti
popa
sbb
and
insb
insb
fsubs
scas
dec
add
push
xchg
add
jp
cmpsl
jle
in
jnp
cwtl
fs
xchg
mov
inc
stos
jmp
push
jle
insb
xchg
lret
test
mov
cmc
xor
push
leave
jne
ss
mov
jne
mov
or
pop
jp
cmp
pop
jno
and
rcll
imul
bnd
mov
cs
and
addr16
ret
add
xlat
mov
add
aas
repnz
push
ds
popf
xor
cmp
mov
repz
enter
stos
test
push
cmpsb
subl
jae
cmpl
repnz
cmp
pop
push
in
fcompl
jecxz
jle
pop
lea
outsb
mov
pop
sbb
mov
pop
in
mov
sub
cmp
xor
xchg
lret
inc
sub
sub
repnz
add
dec
lea
pop
push
repnz
fldcw
stos
jg
pop
repnz
addb
jbe
inc
mov
aaa
fistpl
sti
into
or
pxor
push
int3
xchg
mov
inc
mov
test
stos
movsl
push
pop
int
inc
dec
push
fwait
les
dec
scas
lret
ss
mov
add
sub
cmp
pop
outsl
xrelease
aam
test
mov
icebp
fldenv
mov
aam
ret
mov
jno
push
pop
jecxz
add
jle
lds
fs
in
cmp
push
stc
mov
jmp
sbbl
mov
sahf
nop
loope
out
mov
jnp
mov
jg
rcll
dec
xchg
bound
outsb
push
sub
rcrb
mov
jo
out
or
jnp
xchg
add
cmp
cmp
dec
jns
jae
mov
pop
sbb
sub
fcoms
push
imul
int3
push
mov
pushf
addr16
cmp
dec
inc
in
pop
cld
lcall
xchg
xorb
lcall
mov
jno
and
pop
in
xchg
cmc
cmc
sub
loop
adc
mov
or
outsl
xchg
xchg
or
mov
rcrb
ret
and
data16
cmp
cli
daa
mov
pusha
push
sub
call
bound
adc
orl
lcall
shl
jecxz
xchg
cmpsb
ljmp
shl
mov
or
dec
lods
sbb
int
push
dec
daa
adcb
push
pop
push
out
push
and
xor
pop
push
mov
xchg
clc
cmp
jmp
xchg
mov
jns
rclb
aam
push
jp
add
sbb
add
addb
fsubrs
rcll
pusha
adc
xor
xor
fs
int
stos
sub
fwait
je
cmpsb
imul
xor
negl
sbb
into
js
and
int3
cld
lcall
lock
pop
xchg
arpl
or
jmp
pop
pop
add
into
push
lcall
addl
xchg
sub
sbb
test
nop
das
mov
aas
sub
inc
add
mov
jno
xchg
unpcklps
cld
in
mov
mov
sbb
clc
arpl
addr16
sub
or
mov
dec
cmc
js
mov
mov
or
jg,pn
daa
or
mov
xlat
and
int3
dec
mov
jo
xlat
push
mov
pop
bt
in
leave
sti
pusha
aaa
mov
cmpsl
xor
xor
and
or
mov
insb
xor
mov
daa
and
xchg
or
aas
test
cltd
jge
cli
out
push
out
jb
or
push
cmp
shll
sub
in
pop
imul
rolb
hlt
mov
fists
fiadds
aaa
dec
movsl
push
imul
jle
sbb
fldenv
clc
jne
xchg
xor
jb
mov
pop
or
or
fcoms
add
jbe
adcb
jbe
ja
inc
inc
cmp
push
clc
add
fcoml
test
std
mov
xchg
dec
and
repz
test
inc
iret
shlb
imul
push
test
cmp
movsl
int
lahf
pop
add
pop
out
xor
mov
dec
adc
repnz
push
pop
sbb
js
orb
fs
xor
mov
pop
mov
push
mov
and
dec
aaa
pop
popa
dec
cmp
pop
pop
dec
shlb
xchg
scas
sub
fadds
sbb
mull
push
adc
ljmp
arpl
cld
lret
out
or
adc
outsl
repz
push
aad
bound
addr16
jecxz
sbb
jbe
daa
neg
movsl
jmp
ljmp
mov
xor
sbb
xor
jmp
fs
clc
dec
dec
push
xchg
insb
mov
aad
rcrb
push
stc
fidivs
sbb
sub
movsb
inc
pop
ja
shr
sbb
data16
or
hlt
test
xchg
stos
test
jne
or
decb
nop
and
mov
jo
test
xlat
and
je
lock
and
js
push
std
enter
pop
shr
dec
stos
sbb
rclb
mov
xor
mov
mov
cs
jnp
mov
dec
mov
popa
dec
jmp
adc
ljmp
lea
pop
mov
jmp
iret
dec
pop
jle
adc
xor
dec
push
xor
dec
mov
cmc
xor
popf
pusha
and
mov
push
je
xor
stos
sti
jae
adc
pop
imul
ret
mov
clc
pop
insl
add
lods
inc
stos
sub
inc
outsb
inc
inc
pop
inc
ja
cmp
mov
rclb
imul
outsb
subl
lahf
sub
stos
push
nop
lret
aaa
ret
push
push
sahf
jno
add
mov
or
ret
subl
xchg
and
sti
push
sub
or
out
mov
or
mov
es
and
pop
je
es
and
nop
cwtl
cmp
mov
cmp
cltd
aad
push
inc
in
cltd
push
insb
jecxz
pop
xor
ljmp
lods
popf
cwtl
cwtl
mov
mov
repz
inc
jg
rcll
mov
repnz
test
mov
gs
and
add
push
es
pusha
daa
add
inc
push
int
roll
push
scas
sbb
cmpsb
sub
fisubrl
repz
js
mov
pop
daa
push
sub
fisttps
pop
xor
inc
sbb
xchg
inc
mov
jle
lcall
dec
sbb
lahf
jecxz
notl
jmp
mov
add
and
ret
xor
sub
xchg
cs
jg
lahf
xor
inc
lcall
insb
jae
pop
popf
popl
xor
mov
lods
arpl
int
jg
or
mov
cli
imul
out
mov
xchg
push
pop
push
aam
pop
test
scas
out
jmp
icebp
int3
jnp
bound
scas
or
in
mov
gs
sbb
fsubrl
outsb
lea
std
xchg
push
out
fcmovnbe
mov
movsl
push
adc
xor
push
cmp
xlat
lods
xchg
std
mov
or
jl
fld
xor
adc
pop
fcompl
sub
or
les
lds
scas
add
dec
adc
inc
sarb
inc
pop
div
pop
outsl
push
cld
test
jmp
inc
xor
jg
and
aam
pop
stos
and
dec
adc
inc
push
sbb
push
mov
cmp
sub
mov
and
insl
or
loope
mov
or
js
jle
test
sub
dec
lret
push
loopne
mov
jmp
fisttpll
fidivl
or
xchg
cwtl
pusha
in
andb
cmp
cs
fsubrs
or
cmpsl
xchg
lea
sub
mov
repz
std
aad
fmul
lea
and
push
loop
mov
fldt
xor
inc
xor
mov
aaa
mov
lds
out
fidivrs
inc
cmp
xchg
cmp
or
jp
mov
les
mov
inc
fldl
aad
and
sti
punpckhdq
push
sub
adcl
in
and
jg
xchg
xchg
sbb
add
or
cltd
loopne
cmp
ret
js
out
dec
gs
clc
sbbb
test
mov
in
jnp
jne
pop
psubsb
sub
mov
adc
stos
daa
mov
out
sbb
xor
popf
in
dec
in
push
insl
and
mov
daa
imul
imul
pop
adc
repnz
mov
cld
sbb
or
sub
xor
pop
inc
add
lods
cmp
and
sbb
xchg
popa
sbb
xor
loopne
jle
mov
and
int3
aam
adc
mull
data16
jge
cltd
jno
mov
cli
sbb
and
mov
imul
test
lret
rcrb
rclb
mov
pop
mov
adc
decl
mov
cmp
jmp
xchg
test
sub
mov
ret
mov
push
add
popf
std
in
mov
shlb
mov
cmc
mov
movsl
aaa
fcompl
fcomps
fildll
popa
lds
lods
inc
mov
lahf
lcall
push
iret
or
pop
cmc
dec
imul
xor
lcall
out
in
gs
dec
or
ljmp
aam
jecxz
leave
push
subl
loope
fcomps
les
jns
sub
sub
std
mov
inc
ret
push
mov
ss
js
xchg
imul
push
mov
xchg
fldl
sbb
aam
js
sbb
jo
dec
add
rcll
insb
mov
mov
jmp
or
pop
xor
jp
mov
lea
adc
jo
jns
gs
ss
out
int
xchg
sti
cmp
rcr
xor
repnz
lret
aaa
dec
call
pop
xchg
add
mov
push
or
mov
cmc
and
or
mov
jno
stc
or
in
call
in
xchg
xchg
cli
lods
ja
js
mov
jb
sbb
dec
cltd
mov
sbb
adc
fisubs
mov
push
scas
es
int3
pop
in
pop
lods
outsl
rcr
xchg
dec
notl
inc
cmp
cld
stc
dec
inc
stc
lea
jno
jno
out
pop
adc
fmul
xchg
add
inc
insl
xchg
ljmp
lods
mov
or
leave
loopne
mov
mov
out
inc
ficompl
pop
push
test
push
clc
push
push
into
cmc
in
or
jo
mov
lea
pop
pop
stos
mov
into
mov
add
js
ja
call
push
lods
and
xchg
fsts
push
loopne
push
aas
fcmovnb
cmp
call
js
add
and
jns
int
fldenv
hlt
jmp
jecxz
mov
mov
xchg
sbb
out
int3
dec
mov
sbb
dec
sbbb
sbb
aaa
std
push
push
rcrl
fists
mov
movsb
or
push
adc
mov
addl
mov
adc
jb
call
add
fwait
dec
in
outsb
into
sbb
push
call
cmp
out
xlat
test
stc
sub
jae
mov
in
mov
in
mov
or
jl
cmpsl
lahf
sarl
or
aas
xorl
daa
sub
addr16
pop
test
inc
in
pop
mov
or
into
popa
fs
test
inc
dec
out
mov
push
fimuls
lea
lret
mov
or
movsb
jb
insl
cwtl
fstl
mov
cli
push
push
mov
stc
into
testl
aaa
fwait
pop
rcll
pop
pop
jb
dec
inc
mov
sahf
push
add
into
or
es
mov
imul
jge
xor
xor
mov
mov
lcall
or
enter
cs
sbb
push
and
sahf
dec
imul
fs
add
push
pop
mov
inc
sub
jo
mov
cwtl
add
pop
push
fs
lahf
jbe
mov
repnz
or
out
mov
fwait
in
ss
sbb
idivb
pop
xor
sbb
adcl
inc
lock
iret
pushf
xchg
repnz
shrb
lods
addb
loopne
mov
xlat
iret
mov
pushf
lcall
outsl
in
stos
icebp
sub
insl
xchg
xchg
pop
repnz
adcl
dec
cmp
cli
dec
sahf
lea
ss
mov
dec
sbb
push
sarb
ljmp
inc
out
in
lods
lret
xlat
inc
jae
adc
xchg
xchg
lret
mov
rclb
jg
lahf
sti
movsb
dec
or
adc
xor
andl
sahf
pop
rcrb
int
testb
fiadds
adc
pushf
xchg
std
sahf
or
test
inc
into
jo
xor
jnp
dec
adc
adc
aaa
ja
cmp
out
and
divl
dec
cwtl
fsubs
and
pop
mov
adc
push
cld
nop
cmp
movsl
iret
pop
jmp
ret
jbe
cmp
shl
test
sti
bound
xchg
mov
sub
adc
xchg
popf
xchg
arpl
addr16
fidivl
sti
loopne
cld
adc
or
popf
cld
les
adc
cwtl
lods
push
adc
fadd
mulb
mov
inc
or
aad
mov
scas
push
jle
jmp
adc
push
push
and
xor
repnz
push
hlt
insb
sbb
jg
fs
adc
test
push
ss
ljmp
jns
xchg
fcmovb
rcrb
subb
out
fdivs
pop
jo
repz
test
loope
ja
sub
xchg
sub
pusha
add
js
fdivs
push
mov
repnz
pop
imul
les
push
push
les
sbb
adcl
jo
xor
fisubs
dec
pop
and
inc
mov
addr16
std
cmp
push
js
mov
push
cld
mov
bound
sbb
mov
dec
addr16
mov
aad
jp
mov
scas
test
int3
shrb
repz
or
mov
nop
or
ljmp
orb
movsb
in
xchg
jg
jnp
or
insl
int3
mov
jne
out
push
sbb
or
jp
sub
dec
jb
dec
rorb
cld
rcll
insb
lods
push
mov
gs
insl
sar
jns
jne
cwtl
in
or
dec
repnz
fists
popf
push
das
stos
jp
sarl
xchg
xorl
loopne
test
push
xchg
mov
bound
jne
mov
xchg
cmp
sbb
enter
cmp
out
in
imul
es
mov
insl
fwait
xchg
push
test
mov
sub
sbb
push
mov
mov
dec
scas
pop
bnd
cmc
sub
jle
mov
data16
jp
cmp
push
dec
or
bound
lahf
mov
sub
cltd
sub
out
int
adc
arpl
aad
ret
jmp
push
lock
fcmovnb
sbb
scas
and
fsubrl
cmp
enter
jmp
inc
jp
mov
xchg
push
aam
jnp
scas
inc
fdivrs
cwtl
scas
addr16
insl
push
iret
not
pop
jns
cmp
fst
imul
xchg
push
or
aam
or
sbb
push
adc
pop
sahf
xor
rclb
add
dec
pop
out
test
mov
sarb
push
repnz
add
mov
into
movsb
cwtl
sbb
sbb
adc
int
enter
orl
jbe
hlt
setae
jg
cmpsl
xor
inc
fxam
shl
xor
sbb
popa
test
mov
mov
push
repnz
cmp
mov
cmpb
sub
fwait
out
adc
arpl
dec
data16
fs
push
cmpsl
pop
insb
test
xor
out
imul
mov
in
pop
ret
in
mov
ret
xchg
or
into
in
das
jecxz
pop
movl
cmp
or
mov
jp
lds
push
push
ret
pop
mov
int3
mov
js
cmpsb
fldcw
cmp
mov
lcall
cmp
xchg
pop
in
jb
idivl
mov
jle
fdivl
fs
ret
dec
dec
leave
pop
sub
loopne
orl
mov
fsubs
popf
ljmp
mov
lret
adc
sbbl
cmpsb
mov
pop
imul
in
mov
pusha
arpl
pop
inc
lret
fidivrs
in
xor
and
stos
in
inc
jno
push
rorl
hlt
cltd
sbb
push
jo
ficoml
pop
cmc
mov
or
cmpsl
dec
data16
and
ljmp
gs
gs
jp
test
mov
push
shl
pop
jecxz
leave
jecxz
mov
cwtl
jb
aam
in
aam
pushf
or
jp
in
dec
lcall
outsb
xchg
sbb
cmp
into
out
sbb
loopne
jnp
sti
xchg
jecxz
push
xlat
lock
dec
movsl
stc
lret
shl
lods
dec
jmp
loope
jo
scas
pop
inc
adc
daa
cmpsb
jno
xchg
pop
mov
pop
push
mov
adc
in
hlt
xchg
and
sub
inc
mov
push
dec
push
shr
mov
or
and
inc
dec
in
sbbl
sbb
fnstcw
mov
mov
dec
imul
push
ret
pop
std
xchg
nop
xchg
jne
rcll
outsb
inc
cs
ljmp
sub
ret
mov
mov
popf
cwtl
ss
or
push
outsl
mov
inc
mov
mov
hlt
loope
cld
ror
cmp
fidivs
xor
sbb
lods
mov
sub
inc
gs
fldl
cmp
sub
mov
movsl
les
bound
imul
mov
adc
icebp
dec
jg
gs
pop
mov
lret
dec
lods
sahf
imull
dec
mov
inc
mov
sub
mov
fmuls
sahf
mov
pop
dec
ljmp
push
fcmovnb
sbb
sbb
cli
sub
jp
shl
movsl
mov
pushf
popf
js
inc
jl
jle
loop
fildl
aam
and
enter
aad
cmp
xor
sub
stos
xchg
out
push
fiadds
mov
xor
or
dec
sbbb
jbe
pop
scas
shrb
cwtl
jae
imul
jbe
in
mov
popl
xor
out
jmp
xor
mov
cmpb
rcl
sar
cli
push
xchg
or
rorb
cmpsb
loope
popf
int3
mov
jmp
cmp
mov
adc
sbb
daa
lods
cmp
dec
and
addl
movsb
nop
sbb
cmp
fists
leave
or
repz
and
test
sbb
insl
sub
jmp
jle
push
pop
xchg
jno
scas
cmc
cld
fnstenv
push
jmp
int3
push
inc
mov
arpl
ss
xor
lcall
pop
out
lcall
fiaddl
jecxz
addl
cmp
out
cmp
mov
adc
mov
movsb
es
repnz
mov
ljmp
push
addr16
mov
pop
aas
test
xchg
mov
aam
mov
jnp
dec
push
and
cmp
jg
cmp
adcb
in
sub
fsubs
test
je
lds
xor
jne
cs
movsb
jnp
adcb
and
xchg
mov
jno
xchg
push
push
mov
movsl
xchg
mov
xchg
dec
hlt
adc
ret
scas
jmp
cmp
cmp
rorb
add
sub
mov
js
add
rorb
cmp
lods
pop
dec
add
dec
lret
clc
sbb
nop
and
pop
inc
cmpl
mov
dec
sbb
mov
and
inc
xchg
mov
call
out
das
out
ret
jl
sub
sub
sub
das
fcoms
and
xchg
pop
stos
shlb
cs
jp
pop
dec
adc
mov
add
pop
mov
lcall
fucomp
jae
pushf
mov
or
pushl
test
mov
jle
jecxz
fcmovne
sbb
adc
mov
lahf
scas
aas
fs
push
xlat
ds
mov
sar
int
dec
shrb
mov
mov
clc
inc
push
mov
in
mov
mov
cmp
lds
sub
dec
lods
sbb
xchg
in
or
mov
pop
cmpsb
mov
in
mov
ficoml
test
out
push
addr16
cmpsb
shll
jp
push
adc
mov
xchg
xchg
rcrb
pop
in
sahf
insl
add
sbb
lds
and
dec
loope
push
or
add
fdivs
sbb
jne
lock
add
andb
pusha
les
adc
jle
jp
movsl
sub
push
dec
cltd
mov
inc
out
out
mov
into
mov
inc
pop
xor
fcmovne
mov
in
into
mov
idivl
test
fildll
aaa
xor
xchg
imul
mov
out
mov
dec
out
int
outsb
lahf
arpl
mov
and
push
ja
add
sbb
idivl
pop
cs
xchg
pop
dec
enter
sub
dec
push
cmp
lods
fiaddl
push
adc
push
mov
add
rcr
or
push
sub
mov
dec
pushf
adc
cmpsl
popa
mov
sahf
ficomps
xchg
xorb
mov
popa
jmp
sbb
js
adc
icebp
inc
add
ror
xchg
ljmp
aad
push
mov
pop
mov
cld
adc
mov
dec
pop
cltd
push
mov
mov
aad
jnp
push
incl
loopne
mov
add
push
into
test
mov
dec
icebp
dec
fdivrl
pop
push
fwait
cmpsb
mull
mov
jp
lret
xchg
pop
sbb
xor
iret
js
sahf
mov
mov
adc
xor
xorb
inc
out
xor
pop
scas
test
lahf
mov
xchg
cmpl
lods
ss
mov
js
insb
in
jno
aaa
jbe
dec
and
or
sbb
xchg
xchg
mov
jb
movsb
sub
and
aas
jmp
mov
xor
lock
leave
lea
inc
adc
dec
jb
daa
imul
pushf
fwait
cs
xor
cmp
pop
pop
repnz
hlt
mov
xor
notb
dec
jno
pop
scas
pandn
add
lcall
hlt
rcrl
cld
je
mov
sti
pop
jge
das
mov
ficomps
mov
scas
xchg
push
cmpsl
cs
pop
mov
xchg
push
sbb
jo
arpl
testb
rolb
mov
jle
adc
mov
gs
out
push
in
pop
stos
sub
push
daa
fsubs
pop
mov
sub
into
sub
xchg
es
add
mov
adc
sti
xor
inc
je
mov
push
mov
push
fdivrs
out
ffreep
push
inc
pusha
mov
adc
adc
sbb
bound
mov
and
repnz
jge
pop
adc
out
lahf
in
loop
or
lds
sub
mov
mov
mov
icebp
imul
das
fnsave
inc
shlb
lods
adc
fwait
mov
outsl
outsb
test
adc
sbb
aam
fs
dec
pusha
loopne
stos
insb
repnz
xchg
nop
in
test
mov
cmp
pushf
inc
pop
aam
cld
mov
sbb
enter
pushf
lret
mov
push
cli
rorb
dec
pop
mov
and
inc
dec
movsb
sbbl
ljmp
jo
jecxz
cmpsl
jb
cmp
data16
cmpxchg
add
and
xchg
sub
mov
incl
ret
je
fld
sti
dec
xchg
imul
push
mov
adc
jle
daa
test
add
js
loopne
outsb
cmp
sbb
xchg
nop
jne
int
or
cli
and
fwait
adc
frstor
cli
or
adc
cmp
lods
pop
add
mov
paddw
addr16
or
jmp
dec
in
call
aas
push
ret
jg
fildll
and
pop
add
mov
push
sar
mov
add
push
imul
loope
aam
jae
or
outsl
leave
adc
adc
push
loopne
jo
adc
decb
nop
inc
inc
sub
jmp
cmp
xchg
mov
lret
ja
les
ja
sarb
or
pop
xor
sbb
js
mov
inc
mov
js
sbb
gs
js
add
and
mov
fisttpll
cmc
push
mov
mov
leave
mov
mov
dec
adc
mov
das
mov
xor
sarl
sbb
sahf
das
nop
stc
ss
lds
jl
lods
fs
sbb
dec
lcall
ret
or
mov
add
cmp
push
sbb
fucom
pop
sti
pushf
jns
inc
cmp
movhps
imul
in
jge
inc
pop
lds
xchg
xchg
inc
or
jmp
pop
vcomisd
fwait
ror
push
aad
pop
mov
inc
xchg
sub
push
adc
push
test
mov
xchg
cmp
mov
pop
loopne
cltd
add
ret
xchg
xlat
fsubrs
pop
popa
adc
pop
test
sub
outsl
enter
fadd
pushf
test
push
pop
xchg
dec
add
and
dec
scas
test
stc
sbb
int3
mov
push
imul
pop
mov
repnz
jmp
mov
inc
negl
movsl
js
pop
addr16
xchg
mov
test
mov
push
push
push
shlb
idivb
cmp
mov
in
pop
movsb
ss
mov
enter
mov
mov
and
push
jae
push
fs
fs
and
sub
ffreep
push
hlt
cmpb
int3
mov
mov
adc
dec
sbb
inc
nop
mov
dec
outsb
roll
mov
mov
loopne
ljmp
js
lcall
jb
xchg
out
xchg
inc
loope
add
sbb
mov
enter
popf
xor
mov
nop
cmp
mov
rorl
fsts
adc
xchg
popa
lcall
data16
mov
lcall
subb
icebp
call
into
push
lret
add
mov
jns
push
out
mov
leave
movsl
in
leave
rorb
add
adc
dec
mov
push
xor
nop
mov
pop
stc
sti
popa
push
jo
and
add
lret
mov
and
movsl
push
xor
push
mov
ss
in
pop
fsubrs
dec
int
sub
mov
mov
inc
add
nop
leave
xchg
sub
lret
xor
cld
fwait
jno
jns
dec
push
xor
call
dec
es
dec
xchg
sbb
mov
hlt
fs
mov
xchg
sahf
enter
sbbb
pop
pop
bound
cmp
fs
pop
pop
js
loopne
pop
xchg
sbb
in
stos
cld
pusha
jl
pop
int3
les
icebp
pop
push
xchg
mov
mov
loop
test
jmp
repz
mov
sub
aaa
bts
push
test
arpl
fnstsw
cmp
jno
popf
sbb
call
mov
sar
in
sar
push
lock
ljmp
sbb
loop
add
data16
pop
jle
lds
xor
cwtl
jg
inc
mov
adc
push
addr16
dec
scas
push
or
stc
cwtl
sbb
cmp
fsubrl
add
mov
ss
cmp
rorb
jg
rclb
mov
sbb
add
xchg
inc
pop
xchg
test
cld
xchg
jae
ret
imul
cmp
pop
mov
jo
cmp
jecxz
xchg
lahf
lock
mov
mov
xor
fld
jb
jne
jge
dec
mov
mov
xchg
and
or
mov
mov
fcmove
mov
sbb
pop
mov
mov
fucomp
pop
movsl
and
xchg
and
xorl
in
aad
das
aam
cmp
push
jo
aad
ret
cmpl
movsb
jmp
inc
enter
mov
js
sub
scas
adc
jmp
sbb
std
out
pop
mov
je
lds
or
xchg
push
push
jb
inc
mov
lock
insb
out
or
ja
psubd
hlt
daa
in
mov
bound
cld
out
push
repz
mov
pushf
mov
xchg
push
mov
pop
xchg
jae
sarb
movsb
frstor
loope,pt
cs
cmp
rclb
mov
ret
mov
nop
pop
bound
xor
push
dec
shr
mov
push
and
or
fadd
gs
fiadds
pop
cmp
add
and
ja
jp
push
fildll
add
jg
std
lods
leave
jns
jno
push
inc
jnp
mov
dec
out
ficoms
add
inc
lahf
inc
and
xchg
cmp
inc
push
xchg
adcl
lcall
xor
xchg
dec
mov
inc
ret
imul
mov
mov
test
pop
jno
dec
leave
cmp
arpl
mov
push
cmp
fs
shlb
push
lcall
xlat
js
mov
xchg
add
rcl
xor
faddp
out
je
jge
mov
insb
mov
mov
jp
push
enter
ljmp
sub
cmp
movsl
cld
xchg
rcrl
incb
lods
jns
arpl
push
add
push
stos
mov
push
jl
xor
and
scas
cld
sub
sbb
out
push
push
data16
mov
das
out
sahf
xor
ret
cmc
mov
sub
out
test
repnz
sub
push
and
pop
mov
push
fidivl
je
lret
and
lret
dec
dec
sbb
jae
ret
mov
inc
pop
mov
jno
push
xchg
unpcklps
scas
pop
clc
andb
push
pop
pop
mov
test
pop
lret
jg
inc
sbb
inc
cmp
gs
push
sbb
into
test
adc
jae
dec
andb
push
hlt
xchg
test
aas
pusha
mov
pop
sub
imul
inc
mov
popf
jmp
out
stc
mov
xor
inc
xchg
mov
imul
inc
leave
sbb
in
sbb
fwait
ds
and
and
mov
dec
data16
cli
nop
stos
push
mov
dec
adc
jns
or
popa
adc
pop
cmp
or
and
sbb
lahf
adc
icebp
adc
dec
ja
push
cmpb
xlat
stos
iret
jg
iret
and
loope
lret
iret
adc
and
in
int
pop
push
pushf
sahf
lock
rorl
clc
fistps
mov
push
fsubrs
sbb
pusha
test
jp
test
inc
addb
out
inc
aad
xchg
fstpl
jne
jmp
inc
ja
clc
aam
jg
sub
aaa
sbb
imul
jne
leave
add
or
add
jge
aas
mov
addr16
or
push
and
xchg
ret
mov
mov
mov
cmpsl
call
das
mov
int3
xchg
mov
mov
jecxz
sahf
into
sbbl
addl
dec
pop
fisubs
std
xor
jnp
testb
and
js
adc
imul
mov
loopne
pop
ficoms
ret
stc
cmp
sub
dec
rolb
and
stos
jp
cmc
mov
jge
add
fstl
sub
jns
xchg
or
pop
sub
mov
and
jno
mov
push
mov
cmp
add
xchg
leave
fisubrs
sbb
push
leave
inc
push
insb
bound
jae
mov
cmp
dec
inc
sahf
lahf
sarb
xor
lods
cs
loope
jle
stos
mov
pusha
jge
dec
add
mov
dec
ror
pusha
and
mov
push
mov
mov
cltd
dec
ljmp
fistl
xchg
iret
jl
repnz
pop
loop
movsl
leave
dec
mov
and
lds
jo
and
test
rclb
push
sbb
lahf
or
ds
dec
pusha
pop
mov
ficoml
inc
pop
xor
push
negl
adc
insb
sub
pop
fldcw
cmp
push
sbb
mov
leave
aad
aad
hlt
mov
stc
mov
fiaddl
lods
loope
sub
pop
jno
cmp
mov
lea
sub
push
xor
and
mov
hlt
fists
icebp
stc
cmp
cwtl
and
push
ja
scas
loope
jbe
jb
pop
jnp
ficoms
cmp
aad
mov
test
into
test
test
and
adc
mov
dec
xor
mov
mov
adc
pop
ret
push
xor
mull
scas
out
cmp
mov
xchg
adc
mov
adc
in
outsb
inc
iret
xor
inc
adc
sub
adc
test
fisubl
jae
call
fsts
xchg
mov
fucomip
adc
lea
mov
mov
gs
lea
mov
xor
fstp
cltd
test
lcall
xor
lcall
outsb
mov
test
lods
les
mov
test
inc
pop
in
in
out
fwait
cmc
frstor
outsb
sbb
out
sti
mov
in
ret
fnstenv
xchg
out
xlat
into
imul
jb
insb
jl
stos
je
sbb
xchg
das
fcompl
mov
into
pop
or
scas
cltd
inc
mov
or
add
lahf
ljmp
outsb
out
mov
repnz
pop
sub
repz
pop
sbb
shll
gs
pop
mov
mov
push
adcl
addl
or
repnz
shll
sbb
repnz
hlt
lods
fldenv
mov
aas
nop
lock
dec
xchg
dec
push
sti
pop
push
inc
xorl
mov
push
popa
popf
mov
mov
cmp
out
stos
gs
pop
dec
fists
mov
jne
inc
mull
sbb
sti
lret
inc
mov
cmpb
std
lret
shrb
push
mov
pop
shr
xchg
in
ja
sub
pop
jp
or
xor
lret
pop
mov
test
or
inc
mov
jns
clc
cs
ja
test
in
jecxz
in
lea
outsl
fmulp
fwait
xchg
inc
movsl
js
xor
jecxz
adc
cmpsl
aad
loopne
push
add
and
enter
mov
push
lods
fs
xchg
sub
adc
sarb
cmpsl
rorb
mov
mov
rcrb
jo
jns
fcompl
cmc
add
scas
gs
enter
insb
xchg
push
sub
sub
mov
int
pop
test
fidivs
dec
js
jmp
mov
fsubl
mov
int
iret
or
mov
lock
dec
sub
cmpl
scas
nop
mov
prefetch
stos
test
pop
in
std
test
mov
dec
shll
mov
xchg
fidivs
cli
mov
jge
or
scas
and
jo
sbb
lcall
jns
cmp
fwait
mov
cmp
call
ret
mov
adc
hlt
adc
fadds
arpl
movsb
jmp
inc
inc
mov
and
mull
in
cmp
addb
testl
inc
sti
jno
push
test
dec
insb
or
or
imul
popf
loopne
lea
test
inc
jecxz
mov
add
xorb
xchg
fbstp
mov
mov
push
add
push
dec
mov
push
adc
fwait
mov
mov
xchg
lret
dec
xchg
fwait
stc
mov
clc
cmp
pop
sbb
scas
fimuls
push
mov
push
fldl
mov
sub
and
mov
not
mov
leave
cmp
cmp
sti
or
rcll
add
xchg
mov
mov
mov
imul
lahf
inc
jno
or
adc
out
dec
mov
xor
sub
out
and
cmp
gs
cmpsb
ljmp
xchg
hlt
scas
in
mov
cwtl
sbbl
mov
test
rcl
ljmp
dec
in
sbb
sub
jle
and
mov
call
data16
pop
xchg
lods
dec
add
inc
popl
and
ret
sub
lock
mov
pop
mov
outsl
xchg
push
shrb
xchg
jg
dec
or
push
notb
mov
insb
or
cld
pop
sbb
int3
loop
in
push
nop
sub
into
aad
jnp
je
cmp
sti
adc
lods
fcomp
fdivrp
inc
and
add
or
dec
inc
out
cmp
leave
or
xchg
jle
fsubl
std
add
push
jg
push
add
hlt
popf
test
js
xchg
mov
enter
js
push
ss
dec
rol
lea
mov
cmpsl
cli
test
scas
orl
inc
cwtl
sbb
popf
scas
mov
and
adc
jmp
aam
lock
adc
jo
cmp
lods
mov
adc
fcmovbe
mov
fsts
push
xor
push
je
shl
lahf
sbb
jmp
jno
cmp
mov
and
fcompl
cmc
sub
cmp
mov
mov
les
mov
bound
push
jmp
lcall
andl
gs
xorl
inc
pushf
rorb
dec
adc
sbb
inc
in
shr
hlt
cmpsb
fistl
in
mov
mov
add
lret
lcall
mov
jnp
xchg
repz
jecxz
jecxz
test
lahf
je
hlt
or
sub
test
in
js
stos
movsb
jbe
cmpsl
push
pop
and
or
mov
ja
inc
pusha
and
arpl
pop
jns
push
outsl
lea
in
fldl
gs
and
jnp
jns
jns
dec
stos
cmp
jmp
push
push
fisttpl
adc
pop
popa
dec
push
inc
mov
sti
inc
xor
xchg
call
dec
jmp
in
cmc
jge
into
popf
pop
cld
gs
cli
mov
dec
mov
adc
mov
imul
cmc
scas
ds
sbb
sub
mov
fmuls
cltd
test
call
ficoms
and
or
jp
addr16
test
fwait
push
les
mov
imul
xchg
jle
pop
mov
mov
xor
pop
xor
push
mov
lahf
popa
jg
mov
pop
dec
and
movsb
in
imul
jge
jb
push
fistpl
icebp
out
aad
fnstsw
hlt
sbb
lret
repnz
adc
lret
xchg
ljmp
pop
xor
lahf
test
jl
xchg
out
addr16
in
cwtl
inc
jge
sbb
sbb
push
ljmp
pop
jnp
xlat
adc
aad
jmp
sbb
inc
mov
inc
add
out
fs
lret
stc
loopne
pusha
ja
pusha
lahf
fisttpll
jecxz
push
in
repz
or
pop
insl
aaa
sbb
sbb
dec
mov
ss
xor
add
mov
cli
aaa
wbinvd
jb
das
push
jne
pop
or
sub
popl
jge
adc
ret
addb
cmc
jae
psubsw
fstl
push
jne
aaa
cltd
loop
adc
mov
fstpl
add
aaa
push
add
les
jnp
fimuls
cmc
add
cmp
push
mov
push
or
aas
ja
sar
outsl
push
mov
mov
mov
pop
pop
adcl
fldcw
and
sbb
mull
xor
xchg
ret
xor
stos
loopne
pop
fldl
dec
inc
add
and
xor
ljmp
dec
es
inc
lret
in
call
out
cmp
sub
lcall
mov
dec
dec
pop
stc
mov
sub
push
sbb
pusha
es
cmp
fld
or
bound
push
iret
addr16
rorb
aaa
xchg
lods
loop
pop
jnp
and
rcrl
sbb
daa
pop
in
or
ja
int3
dec
jae
mov
sub
int
xor
cmp
add
popa
add
aaa
push
ja
shlb
outsl
loopne
and
decb
inc
in
sbb
pop
xlat
adc
mov
inc
pop
sub
orl
mov
pop
xchg
inc
fwait
jmp
lcall
fs
jecxz
mov
dec
daa
and
push
stos
push
and
lret
push
and
call
jnp
mov
push
insb
cmpb
ds
sbb
adc
aas
sbb
mov
xor
stc
shrb
clc
test
mov
and
or
aam
fxch
hlt
adc
loop
push
cltd
or
xor
sbb
adc
mov
bound
lahf
xchg
mov
jge
mov
mov
or
testl
fnstenv
inc
xchg
inc
mov
and
cld
out
push
rolb
stos
mov
mov
xchg
pop
and
popa
sbb
insb
mov
cmc
dec
lret
cmp
into
sub
daa
mov
clc
dec
or
in
adc
add
mov
sarb
jg
dec
inc
inc
or
arpl
mov
mov
flds
pop
lret
popf
int
and
pusha
pop
bound
lcall
cmp
out
pop
or
dec
inc
inc
inc
bound
pop
xchg
ret
mov
pop
inc
in
in
lods
add
mov
fisttpll
xor
sub
out
imul
not
nop
loop
add
das
arpl
add
cmpsl
jne
divps
cmp
cmpsb
or
arpl
cmp
xchg
adc
cwtl
sbb
movsb
or
clc
push
je
jp
movsbl
mov
sbb
arpl
adc
and
into
testb
inc
dec
fsts
call
mov
or
int3
add
push
repz
aam
les
das
push
sub
clc
adc
shlb
mov
insl
push
add
jmp
pop
jnp
push
shlb
mov
testb
pop
pop
cli
pop
sub
sahf
sbb
cltd
lea
jb
cmp
push
add
xchg
int3
add
ja
outsb
or
jle
xor
loope
pop
enter
jnp
jo
into
and
jb
cwtl
test
cmpb
popa
jns
lea
fwait
inc
ret
js
sbb
jmp
mov
out
cmc
loopne
dec
idivb
cmp
inc
sbbb
cld
rcrb
stos
push
add
adc
pop
repz
loopne
dec
rcrb
pop
fwait
insl
sub
push
movsb
lret
test
jmp
pop
cmc
testb
cmp
jp
arpl
incb
mov
mov
and
pop
cwtl
add
imul
jp
loope
xor
cltd
jge
jmp
pop
xchg
inc
sbb
in
mov
or
sti
xchg
ljmp
iret
add
or
sub
rcr
es
xchg
fwait
mov
cmc
rcr
pop
push
into
enter
pop
xchg
daa
dec
test
dec
rorb
js
sbb
lahf
popa
sbb
insb
fistpll
lret
jns
leave
push
push
cli
push
mov
test
mov
jno
jne
sti
and
jge
or
shrb
adc
cltd
into
mov
mulb
jg
test
mov
movsb
push
pop
fwait
mov
repz
push
dec
mov
xchg
shlb
dec
cmpl
lret
lods
leave
or
mov
in
in
outsb
addr16
cltd
jle
adc
xlat
test
and
pop
pusha
lock
lods
rolb
es
popa
fnclex
mov
cwtl
dec
cmp
dec
call
xor
mov
adc
cli
ret
mov
aam
pop
xor
sbb
lods
sub
test
push
out
jne
stos
inc
pop
sub
popa
cmp
xor
popf
cmp
jb
sti
and
int
mov
xchg
dec
adc
cmpsb
sbb
sbb
sbb
mov
nop
and
mov
leave
int
not
in
push
dec
or
mov
adc
js
cmc
push
and
or
xchg
js
loopne
insb
rolb
les
sub
cmp
adc
xchg
cli
mov
dec
into
cmpsb
cli
mov
psubusw
add
notb
pushf
dec
mov
jo
sbb
cltd
jg
inc
popa
jbe
adc
xchg
push
aad
xor
int
popf
push
jmp
mov
and
jo
or
sbb
jbe
sub
lahf
mov
mov
pop
loopne
push
fcmovnbe
mov
repnz
jl
lods
ja
jge
outsl
mov
xor
adc
push
das
or
or
lods
jg
xor
ja
xor
cmp
lret
ds
mov
pop
fisubrs
inc
mov
sbb
or
stos
push
out
pop
js
inc
or
cmpsl
pop
shlb
mov
cwtl
leave
fcom
lea
xor
cwtl
add
cmp
jae
add
xor
mov
or
jl
inc
pop
ret
fisttpll
lock
lahf
leave
xchg
push
and
test
pop
lods
frstor
stos
lcall
jbe
inc
cmp
jge
jbe
lahf
mov
push
xor
jns
shl
test
dec
hlt
test
push
sub
mov
add
fwait
in
add
dec
int
addr16
xchg
jbe
fsubrp
lcall
bound
dec
jae
mov
jno
and
scas
mov
cli
mov
hlt
dec
jno
call
sub
dec
mov
adc
mov
dec
outsl
sub
cmpl
popf
adc
pusha
inc
and
mov
push
sahf
shl
mov
cmp
dec
cmp
push
adc
outsb
dec
mov
push
push
xor
in
mov
insb
lret
cltd
jg
dec
lret
inc
sbb
push
mov
dec
lea
arpl
push
mov
idivb
mov
aad
xor
dec
adc
mov
jne
scas
fnstenv
xchg
mov
pop
pop
int
scas
pop
mov
insb
inc
push
add
jbe
addr16
inc
sub
in
aaa
pop
sub
dec
fldenv
out
sub
icebp
mov
cld
add
sub
lea
mov
mov
popa
jbe
pusha
sub
popl
xchg
sarl
xchg
sbb
stos
call
jl
mov
lods
lds
mov
xor
mov
mov
repnz
je
pop
pop
enter
imul
mov
or
les
daa
pandn
imul
std
xor
mov
or
cmp
pop
lock
mov
enter
sub
addr16
push
std
push
gs
out
xlat
js
add
or
inc
jnp
sub
xchg
xchg
popf
fwait
rcll
sbb
push
mov
outsl
mov
push
inc
push
dec
cli
jmp
jmp
jl
enter
inc
pushf
jg
mov
pop
rcrl
and
mov
xchg
mov
add
and
hlt
imul
xchg
mov
lods
mov
jle
push
lea
popa
or
adc
push
fsubp
adc
aas
arpl
fimull
sbb
ret
fs
push
sbb
imul
xor
mov
mov
xor
leave
sbb
mov
mov
cmp
xchg
in
jns
aas
mov
shlb
les
sub
jae
xor
pop
jmp
dec
test
ficoml
dec
xchg
lods
mov
jbe
jo
mov
test
push
dec
add
out
fmull
lods
dec
sub
mov
popf
ds
into
inc
jb
xor
pop
or
shll
mull
dec
lock
xor
push
pop
sub
pop
mov
jmp
lods
mov
mov
test
xchg
and
cmp
mov
daa
jl
lahf
jnp
das
enter
shl
dec
adc
xor
jp
ret
adc
push
pop
jns
xchg
xchg
sub
push
xchg
ror
dec
outsb
xchg
les
adc
inc
nop
sub
loope
subb
jl
out
fisttps
or
test
push
mov
xchg
aad
cmp
fxch
push
or
fmull
sub
outsb
pop
fstl
ret
aas
insb
pop
pop
repz
pop
inc
cmc
xchg
cmc
xchg
movsb
mov
scas
xchg
pop
mov
insl
out
insl
inc
rorl
cmp
xchg
pop
push
jb
enter
xchg
mov
pop
xchg
mov
sub
jle
pop
adc
mov
jne
pop
cmpsb
or
inc
fidivrl
adc
rolb
mov
rcr
rolb
outsb
add
int
repnz
add
bound
call
fisttpl
lret
sub
pop
mov
stos
pop
pop
pop
fcoml
leave
fidivs
lods
insl
xlat
push
ror
jae
jp
adc
test
scas
inc
sub
stos
xchg
xor
sti
imul
and
aaa
mov
inc
pop
cld
daa
ja
lahf
ret
rol
jle
fcoml
pop
push
push
jo
xor
sbbl
xchg
aad
xchg
jns
xsave
jns
mov
jecxz
pop
insb
mov
cmp
rorb
sbb
das
fwait
dec
lea
mov
lods
push
in
and
cmp
shll
test
pop
scas
lahf
add
repz
adc
and
or
jl
insl
jg
dec
sbb
push
imul
push
jns
mov
xor
stos
sbb
xor
push
xor
inc
jns
mov
fdivrs
into
push
push
sub
inc
call
into
pop
inc
add
fimull
iret
out
in
stos
lds
mov
shrb
daa
pop
dec
mov
mov
and
mov
pop
pop
adc
pop
xchg
sub
sub
daa
mov
xchg
jg
cmp
arpl
cmpsb
mov
push
sbb
shll
push
mov
dec
or
lea
xchg
push
and
xchg
ret
pop
insb
inc
imul
sub
xchg
lea
sub
pop
rdmsr
mov
and
rcrb
sub
sti
jne
inc
mov
dec
lock
lcall
movsb
cmp
cmp
nop
mov
sub
lcall
mov
insl
dec
lea
mov
sub
dec
test
pop
mov
shll
xchg
mov
and
aam
push
loope
pop
setno
movzwl
in
sbb
jecxz
fmull
pop
and
and
icebp
fcmovu
adc
insl
stos
xor
xchg
or
sbb
leave
dec
mov
int3
fmuls
gs
inc
and
inc
pop
jle
lds
jmp
cwtl
sub
jecxz
xchg
int3
sbb
out
pop
sbb
cli
jmp
fdiv
xchg
inc
js
dec
mov
into
retw
add
xor
push
xchg
stos
les
imul
in
pop
je
pop
add
mov
call
ss
imul
call
xchg
pop
push
cmpsb
pushf
pushf
daa
xchg
sbb
rcr
out
std
xchg
or
jmp
pushf
cmpsb
test
xchg
js
lahf
sahf
fs
sar
imul
push
insl
add
mov
sbb
pop
mov
in
fs
in
mov
out
mov
and
mov
in
pop
inc
pushf
xchg
push
popa
push
push
lahf
jge
jmp
sti
cmp
test
push
sbb
insl
cmpsb
mov
push
rolb
inc
push
push
adc
adc
push
nop
repz
sub
and
xchg
test
sub
call
add
and
jnp
test
mov
fisttps
mov
and
xor
or
aas
mov
inc
addr16
loop
fidivl
outsb
popf
and
cmp
mov
pop
clc
out
xchg
loopne
add
fisubrs
cmpsl
mov
cltd
pusha
and
test
cwtl
pop
dec
and
stc
mov
hlt
daa
lods
dec
or
popf
mov
xchg
push
mov
out
mov
and
rcl
popf
dec
add
push
push
in
lcall
shlb
repz
cmpb
push
dec
adc
xchg
inc
stos
bound
lret
mov
cmp
gs
add
movsb
jle
pop
ss
fs
cwtl
notl
jns
ljmp
cmp
or
push
nop
mov
sbb
ret
ljmp
ret
jno
and
jl
pop
jmp
push
loopne
hlt
insb
mov
out
sub
and
lret
pop
outsb
in
sub
imul
mov
and
pushf
push
scas
mov
xorb
add
les
mull
aad
test
pop
pop
or
in
pop
push
mov
xchg
jae
dec
shl
mov
sbb
out
dec
push
xchg
inc
sub
sub
or
cmp
lods
arpl
xchg
lods
pusha
xor
out
test
or
mov
cmpsb
scas
repz
leave
mov
pushw
dec
out
andl
lcall
mov
mov
rcl
mov
notl
stos
jne
jno
fisubrs
mov
ja
mov
add
into
push
mov
cmp
xlat
mov
jge
cmp
rorl
xchg
push
mov
sbb
inc
mov
jne
jge
mov
sub
jo
ret
mulb
dec
loope
sub
xorb
stc
repnz
clc
mov
cmp
addb
lcall
adc
dec
mov
pop
add
mov
pop
xor
ficomps
call
cmp
push
pop
enter
clc
add
push
adc
bound
sub
js
lret
mov
add
mov
jno
mov
mov
insl
hlt
push
icebp
shl
aad
test
sti
dec
int3
test
mov
push
push
mov
faddl
pop
dec
pusha
clc
cwtl
and
mov
fisubl
test
iret
xor
rol
movsl
push
push
pop
mulb
mov
pop
js
adc
xchg
sbb
shll
and
clc
mov
push
fs
add
xchg
mov
xchg
or
xor
dec
xchg
sbb
xor
cwtl
dec
ja
outsl
stos
movsb
in
pusha
insl
push
mov
sbb
pop
pop
push
mov
cmpsb
addr16
add
mov
syscall
shl
test
xor
jp
repnz
cmpl
mov
clc
jne
mov
push
std
sahf
sbb
cmp
pop
fs
xchg
outsb
xchg
fsubl
adcb
cli
pop
inc
sbb
inc
mov
and
sbb
xor
mov
sbb
sahf
lods
cmp
enter
sbb
out
mov
dec
dec
mov
xlat
mov
in
or
shrl
cmc
ffree
std
nop
aam
mov
int3
cmp
andb
mov
daa
xor
adc
mov
lods
jmp
fstpt
inc
mov
mov
pop
aad
addr16
mov
pusha
imul
or
xor
dec
js
inc
pop
jg
mov
mov
loop
dec
mov
bound
int
pop
sti
cmp
sbb
xchg
mov
inc
imul
test
pop
push
adc
fisubrl
lea
arpl
jp
push
xor
mov
test
jb
ja
jnp
push
fdivr
out
jno
inc
lret
sbbl
sub
mov
xlat
incl
movsb
into
add
sti
nop
stos
jbe
push
andl
fists
test
sbb
cmp
push
orl
xor
adc
push
push
jnp
test
push
fs
jae
push
jecxz
stos
pop
add
std
cmp
aam
fnstsw
cli
xor
jae
movsb
mov
xor
pop
adc
xor
or
ljmp
xchg
cmp
test
or
aad
inc
hlt
shl
mov
sub
out
fcompl
stos
xchg
aaa
pop
sub
iret
pop
xchg
xchg
movsb
or
add
or
sub
hlt
dec
lcall
adc
push
test
jb
lds
js
inc
test
mov
rol
divb
pop
test
jns
fistps
xchg
mov
xchg
fsts
cmc
mov
call
push
xchg
mov
push
popa
push
inc
dec
xlat
outsl
mov
lock
inc
test
ds
sbb
jl
das
inc
movsb
mov
mov
mov
push
xchg
and
xchg
jae
movl
push
pop
and
mov
gs
mov
add
dec
jb
adc
sub
mov
mov
pop
jno
push
xorl
rorb
xor
pop
push
lods
xor
popf
dec
sbb
pop
mov
fs
out
xor
leave
sub
ffreep
sbb
mov
push
xchg
adc
jg
mov
mov
pop
insl
insb
pop
cltd
cmp
mov
jge
fstp
jmp
adc
or
sahf
mov
pop
sub
scas
std
outsb
add
mov
out
ret
popa
into
pop
mov
xor
test
push
fsubl
leave
adcl
lods
cs
xor
mov
lcall
dec
lock
dec
in
outsl
push
xor
adc
jg
sub
fimuls
push
movsb
imul
test
and
in
adc
jle
dec
imul
pop
xchg
adc
mov
push
hlt
fstpt
cmp
adc
sbb
lahf
lret
dec
pop
enter
sbb
in
sarl
out
push
sbb
imul
mov
mov
testb
repnz
sbb
inc
clc
stc
xchg
fstps
in
mov
lock
or
xchg
xchg
inc
xchg
jno
loopne
es
dec
dec
daa
adc
inc
aas
mov
xor
jne
outsb
mov
test
addr16
jns
pop
stos
imul
jg
adc
sub
jl
push
iret
xchg
test
cld
mov
add
imul
shll
mov
cmc
pushf
bound
cld
sbb
or
cmpl
hlt
js
inc
hlt
bound
jb
sar
fs
dec
out
popa
popa
pop
addr16
cmpb
xor
cmp
push
addr16
and
arpl
and
adc
jbe
ja
cmp
dec
shlb
mov
jbe
pusha
push
wrmsr
adc
cmp
pushf
popa
inc
out
pop
jmp
cld
fcoml
ret
sub
xchg
xchg
cmp
bound
aad
dec
insl
cmp
xchg
inc
and
cmp
fisttpll
mov
popf
sub
in
sbb
xlat
mov
outsb
sbb
imulb
jmp
inc
fadd
test
and
xchg
in
out
out
xorl
pop
hlt
mov
or
xchg
jecxz
lods
enter
inc
in
push
scas
outsl
pop
sbb
cmp
cmpsl
subl
inc
lods
inc
aam
mov
mov
scas
inc
mov
adc
or
pop
std
sub
cmp
adc
lret
adc
imul
xchg
loopne
sahf
sub
sub
pop
jnp
mov
push
push
into
sub
cmp
sti
pop
out
pop
aaa
lret
lds
ret
inc
push
repz
xor
add
mov
and
out
xchg
sub
mov
cmpsl
and
loope
xor
pop
adc
add
mov
xor
jae
insb
pop
fstpt
test
jo
mov
sub
fdivl
dec
xor
xchg
push
cmc
push
cmpsl
jp
cmpsb
adc
arpl
and
mov
imul
mov
adc
test
jbe
ljmp
push
pop
lock
inc
ret
scas
into
out
cmp
cmc
xchg
cltd
mov
xor
pop
dec
ja
daa
clc
sarb
std
nop
mov
hlt
out
push
imul
daa
out
add
xchg
sub
lods
shll
int
pop
adc
lods
div
add
cmp
dec
sbb
or
add
sbb
push
pushf
pop
sbbb
daa
and
fnsave
popa
sbb
pop
xor
mov
scas
ret
jmp
jnp
lods
dec
popa
pop
or
test
and
dec
push
test
mov
clc
outsb
mov
sub
div
xchg
pop
ret
movsb
inc
inc
lds
adc
int
pop
push
inc
hlt
inc
leave
mov
mov
xorb
shlb
and
and
pop
ja
out
loop
and
pop
decb
je
push
pop
test
ficoml
nop
das
js
add
sahf
loop
rorb
fcmovnbe
iret
jmp
mulb
in
icebp
aad
add
jb
adc
cmp
xor
cld
pusha
pop
cmp
scas
mov
dec
fisttpl
popa
xor
mov
jp
loope
adc
xorl
test
mov
jge
dec
or
insl
inc
sbb
add
lahf
jne
dec
je
iret
jp
insl
bound
and
mov
inc
mov
cmp
loope
cmp
mov
aas
lcall
stc
add
inc
mov
inc
data16
lahf
or
fdivrp
cmpsl
pop
das
insl
mov
jle
jne
les
or
incb
aas
loopne
and
repnz
and
daa
jmp
xor
js
sbb
push
add
xchg
aad
jl
and
mov
inc
pop
xorl
sbb
into
dec
mov
shr
sub
xlat
fidivrl
mov
mov
mov
and
adc
pusha
loope
scas
push
fdivrs
es
fsubrp
pop
xchg
sub
rorb
add
pop
ss
cmp
push
mov
sub
or
push
jne
sti
push
test
sbb
std
test
or
insl
repz
xchg
push
pop
out
inc
leave
sbb
jae
xor
test
stos
stc
outsb
jbe
movsb
inc
xchg
ds
jp
scas
mov
in
insl
test
pop
enter
or
mov
imul
xchg
cltd
mov
sub
insl
int
jo
ljmp
gs
lcall
cmp
stos
fiaddl
jle
or
xor
mov
add
add
add
pop
xor
dec
jae
add
sbb
push
add
or
mov
daa
cld
add
aaa
lret
dec
pop
ret
mov
jmp
lahf
sbb
fiadds
push
cltd
push
jg
and
shrb
bound
insl
mov
inc
mov
xor
jo
pop
xor
add
in
imul
push
shr
scas
loopne
fwait
inc
jmp
ja
ljmp
popa
dec
push
mov
adc
leave
lods
push
mov
jge
xchg
jb
add
sti
clc
xchg
push
cmova
add
insl
test
or
dec
popa
and
jne
icebp
mov
jp
pop
loop
cltd
loopne
mov
outsb
push
cmc
jmp
pop
fs
and
pop
push
out
cs
std
shll
push
aad
jg
pop
iret
dec
jle
sub
ljmp
mov
push
xor
push
push
je
cs
inc
into
pop
pop
je
jnp
cmp
inc
ret
cmpsb
call
jle
popf
aaa
fwait
dec
shl
or
int3
dec
je
das
push
in
dec
jae
sarl
lcallw
inc
aaa
xor
mov
fcoms
cmc
imul
jne
test
push
add
xor
add
pushf
out
push
mov
xchg
stos
inc
xor
mov
dec
xor
ret
es
ret
jns
cmp
jno
pop
cwtl
ja
jp
xchg
mov
outsb
les
jmp
arpl
push
push
loopne
mov
cmp
or
rcll
jl
sahf
cmp
in
das
mov
push
add
sbb
and
mov
pop
mov
cmp
mov
xor
jnp
sbb
xlat
lock
jns
dec
lret
insb
mov
popa
aaa
jns
jne
mov
or
or
test
mov
mov
add
dec
or
adc
aad
aam
pop
bnd
mov
sahf
jns
cmp
push
mov
loop
iret
sbb
or
lea
popf
cmpsl
xchg
xor
mov
sahf
xchg
clc
ret
ret
arpl
cmp
mov
jb
pop
mov
je
mov
imul
mov
sbbl
mov
xchg
or
das
adc
dec
xchg
inc
int3
and
push
test
xor
mov
inc
test
aad
xchg
pop
fisubrl
fnstsw
or
xchg
xor
inc
jg
pop
into
enter
adc
mov
xorb
fcomip
rcrb
es
je
lret
out
cmp
and
insb
outsl
add
or
aad
push
pushf
mov
lock
cmp
dec
in
addr16
pop
jg
add
outsb
push
in
sub
sbb
repz
or
cmp
pop
int
or
sbb
lds
pop
xchg
pop
ds
mov
adcl
pop
cmp
cmp
xchg
cmpsl
in
addb
subl
imul
arpl
mov
push
mov
xlat
pop
jge
add
sbb
fnstcw
pop
jl
fmuls
and
add
mov
lods
xor
icebp
insl
popf
in
sbbl
pusha
in
lea
mov
mov
mov
push
dec
mov
ret
ret
imul
loope
insl
in
adc
imul
add
mov
rorb
popf
push
and
fstpl
sub
cmp
mov
ret
mov
sub
xor
dec
mov
ja
cmp
scas
stos
mov
outsb
shrb
sub
adc
test
in
cwtl
ljmp
cmp
ret
cmp
js
cmp
enter
xor
lret
mov
enter
es
data16
in
mov
sbb
leave
sub
inc
aam
leave
sbb
jge
cld
dec
pop
out
test
addr16
aam
int
dec
in
out
pop
mov
and
mov
push
mov
mov
pop
mov
insb
div
in
je
fld
outsl
out
or
scas
cmp
in
and
daa
inc
aam
jle
call
adc
icebp
add
inc
lods
pop
or
inc
in
xor
dec
and
ss
or
outsl
sub
das
xchg
pop
add
cs
dec
inc
add
movsl
mov
sub
roll
arpl
push
inc
bound
fwait
fmuls
leave
or
mov
aam
xchg
std
push
test
or
fisubs
hlt
or
dec
insl
js
imul
xor
push
xor
scas
bound
cmp
rcrl
loopne
sbb
fstpt
mov
lock
adc
mov
mov
cmp
loop
mov
arpl
out
push
lods
xchg
xchg
pop
shlb
fsts
jmp
xchg
xor
mov
mov
inc
xchg
xor
pop
mov
inc
daa
movsb
imul
fs
pop
lods
xor
sub
mov
cmpsb
adc
or
cmp
outsb
sub
lret
cmp
insl
out
cmpsb
xchg
jno
fsubl
cmp
fld
outsl
outsl
fsubs
stc
jbe
popa
mov
aam
je
xchg
in
shll
sbb
data16
jmp
cmp
adcl
leave
pop
sbb
gs
mov
adc
mov
jge
aad
xchg
stos
mov
sti
mov
ljmp
or
popf
dec
xchg
and
dec
mul
jae
stos
xor
inc
xor
sbb
push
mov
test
and
push
adc
jo
ja
out
repz
fisttpl
inc
xchg
or
arpl
lock
push
flds
mov
mov
hlt
xchg
imul
lock
inc
add
inc
xchg
mov
loope
test
lods
inc
sbb
jmp
xchg
add
test
pop
je
lods
push
jb
and
dec
test
or
sbb
out
aad
inc
dec
pop
ljmp
push
dec
mov
jecxz
das
inc
outsb
aas
clc
lret
imul
out
aas
jo
loop
sub
lret
test
pushf
or
push
movl
js
inc
out
jne
xlat
enter
idivb
xor
cmp
jg
imul
xor
push
add
aas
push
sbb
mov
push
mov
adc
mov
mov
insl
pop
ss
xorl
cmp
stos
insl
ret
popf
insl
fnstsw
int3
aas
push
dec
in
push
xchg
aaa
push
mov
cmpsl
push
mulb
dec
outsl
mov
lods
jl
int
imul
jb
and
gs
jl
sub
pop
xchg
dec
lret
fisttpl
push
jb
xor
jecxz
xor
clc
hlt
stos
cwtl
out
out
jmp
adc
add
cmpsl
in
and
and
outsl
and
cmp
dec
rorb
mov
shlb
mov
les
push
sub
and
mov
push
mov
fmull
shl
push
sti
sub
dec
or
push
xchg
xorb
addr16
push
dec
mov
sub
dec
int3
ja
lcall
push
insl
push
xlat
out
pop
mov
cmp
add
in
into
dec
imul
into
nop
ret
mov
pop
lods
mov
adc
and
incl
shrb
lock
in
or
push
ja
mov
sbb
sbb
repz
fidivrs
fdivrs
mov
push
js
push
jle
loope
dec
sbb
xchg
push
insl
sub
xor
cli
and
lret
push
test
movsl
jmp
push
mov
ds
loop
jmp
sbb
decl
lret
cmp
mov
jmp
addr16
xchg
mov
ret
jle
hlt
pop
cmpsb
sbbb
mov
dec
cmp
sbb
dec
xor
iret
into
mov
lock
rclb
jo
push
xchg
mov
mov
movl
iret
push
icebp
adc
jl
adc
mov
pop
jl
pusha
adc
add
jg
stc
sub
loopne
or
pop
mov
cltd
mov
push
repz
inc
in
enter
and
test
mov
int3
xchg
iret
mov
add
push
mov
cmp
sub
lods
out
iret
xchg
cwtl
cwtl
cmc
jnp
mov
and
inc
es
fcoml
popa
stos
cltd
and
dec
mov
sbb
outsl
stos
out
add
inc
lret
outsb
sub
sub
test
xor
pop
ret
jl
add
sbb
xchg
gs
nop
xor
icebp
mov
jl
and
mov
inc
cmp
stos
jp
cmp
xchg
adc
out
sub
pop
std
fs
arpl
mov
repz
sbb
jo
dec
and
mov
xchg
popf
inc
mov
hlt
pop
mov
cwtl
sub
cmc
sbb
pop
in
xchg
js
lret
and
ljmp
loopne
ljmp
lcall
cmp
mov
fnstcw
adc
fisttpl
btr
mov
pop
cltd
lds
cmp
test
lret
push
jl
daa
pop
pop
pop
insl
in
sub
lahf
movsl
or
mov
cld
out
hlt
pop
scas
shll
mov
cli
out
loopne
push
jb
mov
add
cwtl
sbb
xor
std
lods
shl
xor
pusha
push
sub
and
add
pop
and
xor
cmp
icebp
movsl
xor
std
test
jmp
insb
push
inc
repz
mov
inc
imul
inc
xchg
inc
cmp
push
aad
xor
push
pop
mov
out
mov
inc
enter
test
xor
cmp
jns
incb
imul
iret
sbb
repz
jg
or
cwtl
cmp
xchg
jg
in
pop
dec
cltd
jg
fsubrl
pop
andl
mov
push
dec
mov
mov
dec
cmp
std
pop
das
in
mov
cli
inc
adc
adcb
orb
fisubrs
jb
lods
scas
shrl
stc
fstps
inc
rol
scas
shll
sbb
insb
pop
push
in
jg
leave
out
adc
adc
loope
fldl
shl
or
aam
xlat
lock
addb
mov
test
push
add
divb
cmp
or
mov
xor
xor
aad
and
aas
add
pop
xor
mov
inc
adc
add
jp
pop
clc
rcll
xor
or
jge
push
int3
mov
arpl
test
ds
ret
and
in
inc
fnstcw
push
xor
jp
inc
xchg
mov
movsb
push
jl
jp
int
ss
sub
pop
sub
imul
or
xchg
push
jae
std
pop
ljmp
fwait
je
insb
lock
scas
repz
mov
mov
rolb
sbb
arpl
mov
insb
mov
inc
jns
sbb
add
int
cmp
push
inc
mov
loope
jge
or
dec
add
xor
sbb
jecxz
lret
imul
cmpb
mov
jbe
sbbb
pop
test
cmp
or
cmp
jmp
lods
and
cmp
pop
sub
add
lar
cmp
add
xchg
jo
push
pop
mov
repz
cmp
lods
push
addr16
and
xor
enter
lods
xor
mov
push
fnstcw
lahf
push
stos
shrl
rolb
ljmp
or
inc
mov
xchg
pop
cmc
sub
push
inc
dec
xchg
je
addr16
adc
or
mov
outsb
sbb
mov
js
push
aas
mov
xlat
xchg
sub
rorb
mov
repz
xchg
jle
push
cmp
pop
out
pop
xchg
xchg
pop
cmp
push
cmp
jo
ret
sub
cmp
push
aas
cltd
ljmp
sbb
outsb
cs
push
imul
xchg
xor
inc
mov
inc
dec
jl
fwait
push
cli
fmull
dec
mov
ret
xchg
xchg
mov
sbb
stos
lods
clc
xor
mov
cmp
mov
outsl
cltd
nop
repnz
inc
dec
out
fcmovnb
mov
dec
je
mov
mov
adc
in
shr
outsl
xchg
lahf
jge
mov
xchg
daa
add
add
testl
inc
jo
dec
and
in
jo
xor
xchg
pusha
fists
cmp
mov
and
sahf
xchg
xor
scas
rcrb
jnp
scas
adc
jg
pushf
add
cmc
push
xchg
movsb
xor
adc
nop
mov
xchg
aas
ljmp
enter
fldenv
insl
pop
nop
jecxz
inc
mov
and
scas
mov
test
or
mov
loopne
sub
push
mov
mov
out
jl
into
xchg
loopne
push
add
mov
or
ljmp
sub
outsb
pop
ja
and
mov
lret
jbe
ret
sbb
cld
mov
inc
mov
divb
jbe
add
sti
test
adc
dec
mov
lret
add
shrl
loop
push
inc
outsb
jecxz
add
jbe
pop
xor
push
push
xchg
mov
andb
pop
xchg
mov
push
fsubs
or
mov
dec
jge
rolb
scas
das
mov
push
add
dec
pop
sbb
incb
insl
bound
gs
aam
push
in
arpl
shll
roll
stc
pushf
out
push
mov
dec
adc
test
jge
mov
and
jge
mov
test
pop
push
fldt
daa
or
or
jmp
movsl
stos
pop
adc
mov
enter
cmc
or
mov
xchg
cwtl
arpl
jl
push
adc
int
ljmp
faddl
stos
es
xor
nop
ja
dec
std
lods
inc
loop
loope
xor
nop
movsb
adc
inc
add
je
in
or
or
mov
cmp
push
push
ret
int3
jecxz
rcrl
sbb
clc
outsl
jne
add
dec
jo
shll
lret
and
push
shll
xchg
xchg
scas
cmp
inc
xchg
gs
out
jnp
fmuls
push
test
cmc
mov
call
and
cmc
mov
push
stos
mov
aam
fists
cmp
pop
andb
sbb
icebp
lret
lock
push
mov
ja
push
dec
xchg
fwait
cmp
mov
jmp
ljmp
mov
sub
sti
out
sbb
insb
dec
clc
psadbw
pushf
mov
or
out
jmp
jge
int
jnp
and
flds
mov
adc
lea
push
and
jmp
mov
fbstp
cmpsb
push
orb
cmp
outsb
out
add
and
pop
sbb
push
xchg
ret
jmp
mov
lods
test
dec
pop
mov
mov
icebp
in
and
rol
arpl
mov
je
cmp
shl
daa
push
xor
test
aaa
pop
push
sbb
pop
cmpsl
xchg
fwait
dec
mov
ficomps
das
xorb
inc
hlt
inc
jge
pop
lret
xor
sub
inc
negl
ffree
pushf
clc
test
mov
cmp
sbbb
movsb
hlt
neg
or
and
sbb
scas
xchg
outsb
inc
sbb
cs
enter
lds
dec
addr16
xchg
enter
aas
xchg
adc
test
cmp
pop
out
xchg
inc
push
dec
pusha
mov
fsubl
pop
mov
mul
sub
push
je
xlat
ja
mov
int3
sub
mov
lods
dec
pusha
repz
push
jmp
ret
sub
flds
mov
sbb
jno
mov
xor
sub
and
cmp
lock
dec
sahf
mov
jl
inc
jmp
dec
mov
movsl
add
ret
loop
stos
cltd
mov
in
mov
push
pop
pop
xchg
cld
dec
filds
jns
or
mov
xlat
add
in
sub
fdivs
mov
loopne
repnz
and
stos
jmp
aaa
inc
mov
data16
sarl
test
ret
pop
add
dec
jb
jno
iret
mov
dec
pushf
push
and
sbb
gs
push
andl
push
and
and
stc
mov
imul
jge
adc
dec
mov
mov
out
cltd
adc
mov
cwtl
pop
clc
jp
jo
jecxz
mov
iret
sbb
jo
dec
mov
push
mov
das
mov
push
sbb
mov
pop
jge
mov
sbbb
sbb
push
sbb
pop
or
ret
leave
repz
insl
mov
mov
cmp
out
test
sbb
sarb
push
and
outsb
out
inc
test
movl
sti
nop
ret
je
test
iret
inc
or
roll
test
daa
shrl
shlb
ffree
in
aam
cmpsl
test
je
jo
xchg
nop
das
xor
xor
cli
inc
jns
fsubr
cld
repz
mov
popf
and
or
push
andl
pushf
push
inc
or
sub
xor
into
popa
pop
or
xchg
jmp
xor
sbbb
adc
push
mov
imul
sbb
cmpsl
in
movsb
add
fwait
dec
loope
fnsave
je
pop
mov
mov
rolb
xchg
inc
filds
jne
loope
or
inc
push
sbb
aaa
push
fs
call
mov
popf
mov
sahf
xchg
rcrb
sbb
aam
ja
adc
pop
sbb
lods
mov
and
cmpsl
inc
sbb
cli
mov
insl
jmp
decb
fs
adc
add
or
aam
inc
bound
in
mov
pop
and
push
mov
mov
loope
mov
dec
add
jg
mov
sti
mov
xchg
adc
ljmp
int3
scas
and
add
xchg
rorl
aam
cs
mov
jne
idivb
rcr
outsl
std
int3
stos
out
sbb
aad
dec
and
rolb
aaa
mov
push
lea
mov
inc
pop
mov
sbbb
mov
dec
addb
pop
xchg
imul
push
xor
pop
adc
dec
lea
std
push
lods
pop
sub
xor
sub
cwtl
sub
pop
ret
dec
cmp
pop
xchg
xor
push
loopne
jae
push
out
insb
call
ret
pop
stos
and
shlb
pushaw
push
cwtl
std
subb
in
lds
xchg
adc
lea
insl
iret
push
insb
mov
mov
pop
xor
mov
scas
pop
scas
xor
mov
push
inc
or
mov
mov
xor
lahf
imul
adc
stos
hlt
fdiv
add
push
lcall
xor
dec
and
and
inc
lret
push
cmp
jecxz
jb
sbb
pop
pop
out
inc
push
xor
xor
es
or
push
fnstsw
sub
jo
or
test
jle
mov
xchg
lret
fsubrs
mov
test
in
mov
sahf
add
or
lret
xor
cltd
jae
xlat
add
jmp
inc
jmp
jl
pop
mov
jle
aas
in
test
clc
pusha
aam
imulb
addr16
and
lea
dec
jecxz
stos
stos
int
mov
popa
add
test
cmp
dec
cli
bound
mov
movsl
cmp
shufps
jge
sbb
loopne
testl
xchg
pop
mov
add
fwait
lret
jecxz
mov
test
call
nop
mov
mov
lahf
push
fsubrs
dec
into
js
jmp
rolb
dec
subl
shll
aaa
rcll
jp
js
mov
shrl
inc
sbb
add
outsb
add
outsb
aaa
test
je
dec
daa
das
lods
mov
jae
cmp
popa
adc
stos
imul
add
push
mov
daa
jle
sbb
shll
cmp
movsl
dec
push
movsb
subl
inc
movsl
jb
fsubrl
pushf
fistpl
inc
jge
jb
aaa
dec
icebp
leave
ret
cmp
jp
clc
mov
jo
cmc
cltd
fcomps
pop
in
push
mov
jne
or
mov
mov
stos
mov
insb
or
xchg
pop
inc
out
add
stc
ret
rol
push
xor
jbe
pop
mov
mov
fiadds
cmpl
je
xchg
pop
or
mov
pop
into
xchg
rorl
inc
gs
fsubr
mull
and
sub
inc
jb
ret
leave
sub
cmc
stos
sub
pop
sahf
jl
push
in
push
sub
mov
mov
call
cmp
xor
clc
or
jle
das
movsl
push
sbb
fstpt
sbb
enter
mov
stos
loop
cmp
out
cmp
test
in
fmul
in
fnstsw
push
pop
cs
adc
lods
mov
out
push
xor
aas
shl
sbb
mov
test
mov
test
and
cli
cmp
mov
adc
and
adc
shrl
mov
iret
mov
sub
outsl
mov
pop
ret
inc
jp
xor
nop
push
push
or
push
js
int
inc
and
xchg
call
shld
fiadds
scas
hlt
xchg
movsl
inc
mov
sub
hlt
imul
cmovo
cmpl
jb
iret
stc
mov
push
inc
mov
xchg
imul
mov
push
ljmp
lahf
cmpsb
movsb
das
mov
test
sahf
cmpsl
fs
cmpl
nop
pop
stos
xor
fbstp
add
pop
jl
roll
cmp
sub
in
pop
adc
push
lods
jge
std
test
inc
cmpsl
popa
fxch
push
dec
aas
aam
push
sbb
cld
push
push
add
movsb
dec
aam
int3
mov
pop
test
adc
rcll
lcall
aas
push
pusha
sahf
mov
xchg
scas
repz
cmp
inc
sub
mov
pop
ficoml
arpl
in
pop
lahf
adc
fcmovu
cmp
lret
ds
dec
and
cmp
sub
ja
xlat
jno
mov
iret
sbb
mov
jne
inc
xchg
mov
jg
ja
sub
loope
add
test
gs
arpl
jmp
adc
cmp
jnp
inc
mov
jmp
sbb
push
push
addl
xor
iret
rolb
or
fs
push
sub
icebp
cli
lret
mov
mov
stc
mov
inc
pop
in
mov
jle
sub
daa
sbb
mov
push
adc
mov
idiv
loope
pop
push
int
fcomi
add
int
aam
fs
mov
mov
leave
jns
mov
push
add
cwtl
xchg
xchg
outsl
mov
push
nop
call
and
push
xchg
or
lret
cld
lods
mov
loopne
xchg
sub
mov
sbb
or
jo
mov
repz
pop
js
in
outsl
test
jnp
mov
push
movsl
mov
sub
fwait
int3
dec
aam
cmpsb
cltd
ds
not
fcompl
jae
and
imul
insb
jg
and
sbb
cmp
lea
addr16
fsubrs
adc
in
into
or
in
pop
mov
iret
sarl
pop
movsb
sub
enter
jne
and
sbb
jl
jnp
pusha
cmp
test
jb
lods
xor
imul
mov
add
inc
push
and
push
cmp
bound
adc
push
aaa
es
stc
push
sub
mov
cmp
jp
jle
push
pop
sahf
int
mov
push
in
mov
xchg
pop
mov
cmp
push
pop
inc
aam
pop
xchg
cld
and
pop
or
dec
xchg
sub
idivl
aas
jno
sahf
in
mov
outsb
mov
jl
lea
push
push
aad
xchg
inc
xchg
and
add
test
dec
dec
imul
pop
add
mov
into
es
stc
add
test
lea
in
aas
aad
out
notl
mov
outsl
pushf
inc
inc
mov
mov
dec
scas
or
mov
and
jno
fnstcw
clc
pop
rorl
loop
outsl
mov
inc
add
jno
push
sub
add
addl
fmull
ja
ljmp
mov
leave
pop
into
enter
fldenv
inc
jp
push
aas
cmp
out
sbb
jg
push
mov
mov
scas
outsb
mov
sub
arpl
add
cmp
sbb
and
je
mov
ss
push
int
xlat
lock
mov
fwait
or
aad
aad
jb
sub
push
mov
xchg
cmc
mov
call
ficomps
mov
jnp
insl
mov
cli
filds
jecxz
cmp
pop
push
and
idivb
jae
pop
test
int
mov
push
mov
fbstp
lods
push
mov
cwtl
dec
fwait
bound
rcrl
cmp
cmp
jle
xor
fwait
push
cmp
ficoms
ja
fsubrs
dec
cmpsl
ret
xchg
inc
push
mov
lcall
icebp
mov
out
fidivl
cltd
inc
ret
bound
repz
out
loope
push
inc
jns
sbb
icebp
and
in
arpl
and
adc
in
push
inc
filds
shrl
cmpsl
aam
sbb
inc
dec
mov
push
iret
fs
push
mov
cmc
loop
or
or
sbb
pop
xchg
mov
jmp
xor
inc
dec
mov
add
push
and
cmp
push
pop
das
test
inc
mov
addr16
mov
push
xor
jno
cmp
mov
or
je
jl
insb
fwait
xchg
mov
adc
shrb
sbb
adc
inc
scas
mov
mov
pushf
dec
les
cmp
enter
or
inc
imul
outsl
subb
push
xor
mov
xchg
xchg
mov
jae
mov
xor
pushf
xchg
stos
jne
scas
adc
jns
jo
push
sarb
or
stos
enter
sbb
in
pop
and
dec
inc
mov
lock
push
or
stos
outsl
dec
adc
ss
and
scas
shlb
loop
movsb
popf
cld
arpl
cmpsb
adc
clc
push
leave
adc
adcl
std
cs
cmp
jo
loop
stos
sub
xchg
adc
ficomps
mov
jns
fidivs
push
loope
jns
push
fcmovnu
sbb
dec
andl
or
cmp
fwait
jecxz
sub
pusha
jecxz
lret
and
ret
inc
test
bnd
lods
xchg
mov
cmp
jne
mov
scas
inc
inc
arpl
dec
sbb
repnz
ss
dec
push
jl
mov
ds
mov
sahf
fisubrl
jne
jl
sub
cmp
hlt
gs
outsb
cltd
inc
mov
mov
leave
outsl
push
jo
imul
movsb
xor
jbe
fldt
jno
dec
ret
and
and
cmp
adc
mov
jl
out
or
shrl
cmp
scas
fmuls
loop
bound
stc
dec
test
pusha
cmpl
into
scas
leave
out
pop
test
incl
test
shrb
outsb
mov
out
loopne
test
loopnew
mov
pop
les
dec
mov
rcr
imul
jne
mov
sbb
cltd
imul
and
pop
les
outsb
leave
ret
data16
movsl
pop
test
jb
imul
leave
es
mov
and
lahf
in
mov
xchg
xchg
xchg
jns
aaa
lret
movsl
adc
sub
mov
dec
add
ss
pop
pusha
jno
stos
cmc
dec
sub
clc
std
fldl
testb
mov
fiaddl
lock
push
cmpsb
lcall
jmp
and
cmp
into
add
out
xor
fmull
add
push
stos
movb
cmpsb
out
repz
out
xchg
test
pop
lret
insl
jmp
repz
xor
jp
js
out
inc
arpl
xlat
push
scas
mov
scas
int3
mov
or
das
cmp
pop
fwait
mov
mov
lcall
cmp
pushf
lahf
icebp
call
cmc
shlb
es
cltd
sbbl
std
dec
cmp
pop
pop
push
rcl
xor
je
inc
jne
sbb
sub
xchg
mov
fisubl
cmp
push
adc
ficompl
pusha
pusha
and
or
dec
mov
pusha
adc
lods
xor
test
xchg
or
dec
xchg
pop
lock
fcompl
sbb
mov
jae
mov
stc
lock
xchg
out
fldt
inc
jl
xchg
out
push
cltd
mov
mov
jmp
nop
outsl
shl
ss
push
mov
xor
adcl
or
out
stc
dec
arpl
into
lcall
and
pop
fcmovnb
mov
cmc
hlt
ja
scas
push
mov
sbb
push
lods
lret
outsl
add
or
cmpsb
mov
addb
push
sbb
addr16
or
add
fnsave
rcl
aam
sub
mov
add
ja
pop
jo
mov
fs
popa
pop
dec
cmc
and
sub
popf
stos
cmpsb
or
ror
leave
sbb
test
inc
adc
adc
mov
test
faddl
faddl
hlt
jbe
dec
dec
outsb
dec
push
ffreep
mov
std
cld
sarb
cmp
mov
aaa
cmp
xchg
push
fidivl
movsb
lods
xchg
xchg
fildl
mov
loopne
pop
clc
adc
or
mov
jmp
stc
fnstenv
shll
jl
je
push
mov
mov
test
loopne
mov
push
or
insl
lods
pop
lret
sahf
ss
leave
mov
pop
ss
imul
and
aas
or
iret
mov
push
xor
mov
mov
jnp
das
lods
stos
jns
lret
adc
fbld
sbb
and
inc
inc
decl
cli
adc
dec
sti
rol
mov
pop
mov
rorb
stos
cmp
jns
pop
sub
sbb
neg
iret
pop
jae
roll
test
sub
jmp
or
or
testl
sbb
and
dec
add
lret
popf
aad
insl
jle
pop
fcmovnbe
mov
mov
fwait
aas
and
xor
pop
aaa
and
push
and
sti
loop
subb
pop
arpl
or
iret
mov
cmpsl
jmp
pop
mov
sub
push
clc
call
adc
ljmp
rorl
ficoms
pop
dec
and
cmpb
jb
dec
sub
flds
or
mov
cli
push
sahf
dec
jne
add
movsb
adc
jbe
or
mov
lds
loope
fwait
cli
adc
mov
sbb
test
std
sub
push
mov
sbbl
js
clc
xor
arpl
push
gs
adc
mov
mov
int3
mov
test
cltd
addr16
xlat
push
cmp
xchg
add
sbb
jp
jp
xchg
mov
xchg
jne
lret
test
mov
mov
sub
sbb
cmpl
std
shll
cltd
sbb
lods
jne
gs
test
jg
or
lcall
dec
adc
into
pusha
fisttpl
jns
pop
or
sti
add
or
xor
push
fbstp
stos
std
inc
in
out
out
mov
sbb
mov
sbb
xor
stos
xchg
push
in
push
mov
mull
push
aaa
loope
xchg
cmp
subb
rcll
loope
inc
aaa
andl
in
das
sub
inc
xor
mov
ds
mov
nop
jl
pop
repz
pop
or
mov
clc
cmp
dec
hlt
in
jae
pop
shll
iret
push
mov
xchg
inc
lahf
bound
dec
inc
xchg
add
and
fmull
mulb
loopne
mov
push
divb
ret
xchg
add
loopne
add
ret
mov
and
ret
dec
mov
jp
ret
mov
dec
into
mov
mov
dec
ret
pop
out
mov
xor
jb
cmp
mov
or
in
xor
out
jecxz
push
sbb
cmp
mov
cmc
jle
mov
addr16
mov
enter
out
push
jg
add
movl
jge
int3
cmp
loopne
aas
xor
in
pop
pop
fistps
push
and
mov
xor
int3
xchg
lods
in
mov
push
inc
jo
rcrb
insl
int
lds
popa
arpl
jb
push
push
insl
shlb
int
adc
in
xlat
and
jae,pt
jno
xlat
inc
enter
movsl
pop
sbb
aas
fnstcw
dec
fidivs
arpl
test
mov
out
lcall
mov
andb
in
lds
xchg
sbb
mov
cmp
mov
loope
dec
xor
or
push
iret
inc
iret
in
adc
jns
scas
pop
xor
mov
mov
je
out
pop
mov
pop
xor
popa
fcomp
cmpsl
pusha
stos
fmull
and
xor
mov
into
inc
stc
ss
jno
sub
cmp
and
dec
ret
sub
xor
xor
sub
push
or
or
dec
cmp
or
fisttps
mov
out
cmp
imul
addr16
roll
ljmp
in
mov
push
dec
pop
dec
aaa
mov
addr16
inc
adc
mov
cmp
stos
ret
push
fchs
pop
sub
stc
jnp
mov
mov
insl
jecxz
add
sub
fwait
push
add
das
cli
into
daa
fldl
xchg
xor
pop
repz
mov
icebp
sub
cmp
sahf
jns
cld
sub
out
push
xor
andl
jmp
lods
push
pop
cld
fstpl
not
push
out
jbe
or
and
cmp
cmc
gs
int
mov
inc
xchg
fisubs
or
add
imul
adc
xchg
push
dec
scas
aas
pop
clc
stos
mov
jns
shlb
lahf
xor
mov
loopne
movsl
icebp
repnz
push
int3
fists
testl
cmp
inc
pushf
mov
mov
xchg
lds
xchg
cmc
mov
sub
fdivrp
xor
stos
jo
les
fidivs
das
pusha
and
sbb
or
xor
cltd
add
cwtl
mov
in
sub
pop
and
gs
cmc
and
fcmovnbe
popa
out
inc
lret
mov
lods
push
cmp
iret
lods
mov
insl
cltd
dec
loopne
or
outsl
push
cltd
or
xchg
repz
not
sub
repnz
push
jo
imul
mov
pop
fwait
cmp
mov
stc
add
shrl
add
out
enter
fs
idivb
or
ljmp
in
jge
sbb
sbb
in
jnp
adc
mov
movl
jle
push
outsb
pop
mov
stos
rorl
push
xchg
ljmp
or
push
xchg
xchg
mov
pushf
mov
cwtl
add
sub
sbb
fldcw
sbb
cmp
push
add
inc
pop
loope
cmp
xor
ret
js
ss
xchg
sub
icebp
clc
pop
xor
lret
out
clc
add
sbb
xlat
sub
mov
in
loop
repz
sti
ja
fs
sub
pop
push
imul
push
nop
cld
dec
lea
xchg
scas
adc
and
icebp
sbb
or
pop
and
jno
cwtl
pop
or
mov
jle
inc
xchg
inc
jbe
adc
mov
pop
xorb
out
subb
mov
jge
pusha
sarl
xchg
pop
xchg
jnp
rolb
fiadds
ret
fimuls
nop
mov
jnp
mov
inc
cmp
stos
lret
sub
sbb
mov
sub
ds
inc
test
testb
fldcw
inc
dec
pop
shll
mov
in
xor
xlat
push
pop
scas
sbb
icebp
data16
jae
pop
aam
orl
dec
in
daa
fcom
pusha
add
pop
cmp
sub
ret
ja
sti
fwait
ds
iret
jne
addb
into
test
aad
mov
jmp
adc
rcl
data16
sbb
jmp
cs
add
subb
xlat
in
push
ljmp
fsubs
fsubrl
jnp
fidivl
rcl
loope
ret
cmp
in
ss
sbb
mov
mov
scas
xchg
divb
lret
xor
mov
js,pn
sub
adc
sub
jmpw
into
or
xchg
aas
loop
mov
xor
fsubl
add
arpl
adc
push
and
notl
xchg
pop
push
mov
lcall
pop
sub
mov
xchg
jle
int
movsb
push
nop
add
cmc
cmp
push
push
jle
sub
aaa
mov
sub
mov
dec
shrl
cmpsb
dec
out
jmp
je
adc
cmc
push
mov
pop
pop
xor
sub
das
outsb
stos
scas
dec
cmpsb
jge
jae
push
sub
push
add
push
xchg
and
stc
les
sti
out
movsl
daa
decb
popf
lcall
mov
scas
jne
adc
fidivrs
int
jno
adc
xchg
pop
test
xchg
pop
insb
pop
pop
xor
out
push
in
insb
push
xor
xor
ljmp
pop
dec
push
xor
and
and
mov
mov
mov
pop
iret
or
mov
ret
and
xchg
lods
sub
bound
xchg
sbb
sbbb
lea
push
xor
mov
dec
fldt
loopne
aad
pusha
jg
xchg
adc
lock
aad
pop
mov
mov
dec
mov
scas
inc
ret
insl
dec
dec
xchg
push
sbb
mov
inc
ja
xchg
push
sub
or
pop
roll
sbb
fists
lret
outsl
xor
cmpl
xchg
inc
jnp
bound
pop
mov
sarb
shll
in
pushf
in
and
insl
and
imul
cmp
cvttps2pi
xchg
dec
push
add
ret
popf
cmp
mov
imul
pop
mov
inc
jno
cmp
sub
lock
jg
inc
xor
imul
jl
push
jne
aaa
adc
xchg
lock
in
adc
repz
imul
sbb
jecxz
pop
xor
jp
sti
and
faddl
mov
pop
cmp
push
in
ljmp
inc
dec
mov
dec
add
into
mov
sahf
xchg
leave
mov
mov
mov
fimull
fcoml
cmpsl
sbb
xchg
sbb
dec
mov
jb
cli
jp
pusha
xchg
pop
and
sbb
ds
mov
xor
sub
mov
push
push
sub
fisttps
ds
daa
cltd
xchg
or
inc
pusha
xchg
mov
rolb
out
pop
clc
in
popa
jns
push
cld
jbe
dec
pop
mov
or
jae
inc
push
mov
ss
mov
dec
push
neg
sub
mov
cltd
addl
and
test
mov
sbb
jp
ss
xchg
orl
sbb
adc
jmp
lcall
hlt
out
imul
addl
imul
insb
mov
pop
ds
loop
rorl
out
mov
ret
popf
ljmp
xor
dec
push
add
cltd
rcll
dec
inc
inc
jecxz
int3
aas
hlt
in
lods
jle
push
sbb
jecxz
daa
push
icebp
test
jo
push
jo
ja
push
pop
jno
leave
aad
pop
idivl
cmp
adc
push
mov
repz
push
dec
ret
push
or
jb
roll
mov
nop
int
xlat
xor
cmp
stos
pop
inc
or
push
mov
fldenv
repnz
pop
mov
insl
popa
xchg
xor
mov
out
jns
mov
ror
cli
push
rorb
mov
jae
popa
dec
xlat
popa
jno
ljmp
push
clc
bound
dec
cmp
sub
and
out
mov
test
pop
adc
mov
mov
out
push
pop
mov
test
mov
lds
sbb
outsl
pop
lcall
loopne
xchg
and
jnp
pop
add
test
cwtl
ja
and
mov
adc
sub
jo
mov
addb
subb
xor
stos
jae
in
mov
jmp
adc
jo
add
xchg
or
push
cli
jb
loope
iret
pop
mov
add
loopne
push
or
pop
mov
int3
mov
shlb
fadds
call
cli
xchg
test
xchg
xor
xor
int
sahf
rcll
push
cs
jae
xor
cld
sbb
jb
imul
inc
call
sbb
shrl
stos
sbb
mov
push
aam
div
and
adc
dec
mov
xchg
stc
mov
es
out
mov
and
hlt
inc
sbb
jmp
and
push
mov
cmp
xchg
jle
mov
jae
cmp
int3
fdivr
cmpsl
rcr
pop
jb
jp
pop
sub
fmul
fnstcw
cmp
test
mov
push
and
sbb
gs
int3
mov
sarb
cmp
cmp
lret
mov
rorl
aas
lods
mov
xchg
xor
ffreep
xor
pop
jle
mov
dec
push
mov
adc
pop
jle
jg
dec
mov
cltd
pop
clc
jne
rolb
cli
nop
scas
ret
push
in
mov
mov
and
test
push
mov
lret
adc
pop
call
outsb
sbb
push
cli
js
push
icebp
inc
imul
pop
and
or
in
pop
lret
and
into
lds
mov
sti
add
push
arpl
lret
xchg
imul
xor
sbb
xor
call
xor
fldt
fsubs
pop
test
sbb
jns
mov
push
push
mov
xlat
scas
leave
stc
and
dec
jae
xor
fwait
push
xor
je
jns
xor
out
mov
mov
test
mov
sub
xchg
inc
and
es
mov
xchg
dec
sub
adc
sub
jge
fmul
loope
and
mov
adc
pop
cmp
sbb
xor
cmp
xchg
fistl
daa
jge
xchg
in
sbbl
int3
pop
pop
sbb
in
scas
repnz
lods
mov
hlt
mov
inc
aam
cmp
mov
cmpsl
push
pop
jo
fiaddl
daa
fldenv
scas
aas
out
dec
into
cli
decb
popa
jbe
add
outsl
idivb
and
or
ds
loope
xchg
jge
xchg
popa
cmp
inc
lcall
xchg
mov
fsubrs
dec
aam
ret
sahf
test
ja
orl
lods
adc
fsub
leave
lods
frstor
pop
cmp
mov
pop
lret
mov
mov
lea
leave
lahf
aaa
lret
push
in
cs
push
xchg
mov
pop
jbe,pt
stos
rolb
shl
loop
loopne
and
push
pslld
fsubp
shll
add
push
push
add
pop
pop
filds
xchg
pop
stc
push
push
push
mov
xchg
sub
mov
lahf
aad
xor
jbe
xor
ret
mov
scas
pop
shld
lret
orl
fmul
adc
bound
fidivl
negl
mov
fbld
pop
xor
jmp
hlt
cmp
xor
inc
subl
xchg
imul
test
mov
mov
jle
adc
dec
movsb
ljmp
insl
dec
in
loop
cli
pop
pop
mov
or
mov
cli
mov
out
pop
das
repz
shlb
mov
and
repnz
xor
mov
inc
cltd
mov
xor
std
mov
push
stos
addb
fnsave
ss
outsb
aaa
mov
xor
mov
or
adc
or
sub
mov
aad
dec
test
pop
mov
jb
jle
orps
mov
sub
mov
push
mov
lahf
xor
daa
push
pop
sbb
xchg
mov
lcall
pop
adc
dec
xchg
test
daa
addb
call
pop
pop
jge
testb
in
cmpsl
pop
ds
xchg
std
and
test
push
sub
adc
xor
and
jmp
cmp
pop
lock
mov
aas
jmp
rclb
stos
xchg
scas
mov
sahf
sbb
sti
xchg
jle
or
xor
pop
pop
xor
add
jecxz
sarl
cmp
adc
addr16
add
sub
xchg
in
xor
mov
push
aad
mov
mov
and
sub
add
mov
test
or
mov
inc
mov
dec
fisttpl
js
sarl
jg
sub
sub
mov
cwtl
pop
fs
das
imul
mov
jae
mov
mov
mov
mov
mov
and
aas
push
push
mov
mov
xchg
pop
sub
ljmp
adcb
sbb
cwtl
popf
xor
gs
push
fistpl
stos
les
jle
xchg
and
cmp
and
xchg
pop
addr16
jae
out
cmc
sarb
jo
mov
pop
sub
sub
or
push
test
mov
nop
ljmp
xchg
mov
lret
pushl
mov
aaa
add
jg
and
daa
cmp
add
mov
clc
pop
fidivl
mov
loop
mov
loope
in
rol
lcall
ficoml
rcl
outsb
sub
subl
bound
popf
pop
ss
mov
push
mov
int3
mov
mov
call
pop
ds
adc
jecxz
enter
into
cli
fst
mov
cmp
imul
add
mov
dec
sub
out
repz
mov
je
outsb
pop
pop
inc
je
scas
je
bound
nop
pop
lahf
fs
pop
mov
hlt
inc
lret
mov
xlat
xor
daa
or
jbe
gs
imul
in
lcall
jbe
pop
repnz
push
or
cs
push
lret
push
push
jp
jg
notb
mov
stos
stos
cltd
ret
aas
inc
mov
mov
stos
mov
enter
ss
xchg
sbb
repz
loop
les
jae
or
movsl
scas
sub
ret
or
and
in
xor
lods
dec
xchg
dec
push
jno
xchg
or
mov
cli
and
cmc
lret
data16
xor
sbb
sbb
dec
and
sub
fs
lcall
in
jecxz
in
add
mov
fbstp
push
shr
std
cltd
inc
pusha
pop
adc
loope
insl
imul
dec
jnp
inc
es
dec
pop
repnz
push
ljmp
loope
or
call
loop
pusha
or
add
or
loopne
mov
mov
adcb
sbb
aas
push
mov
jp
push
pop
xchg
out
cmp
push
pop
jl
inc
push
pop
bound
outsb
stc
arpl
sub
lods
movsb
pop
xchg
xlat
fwait
adc
lods
adc
cmpsb
out
cmp
adc
xchg
jle
cmpsb
test
and
or
fmull
inc
loope
les
icebp
shlb
adc
xor
push
sub
scas
fsubrl
mov
test
idivl
jo
insl
mov
pop
lods
cltd
jnp
dec
ss
nop
cmp
add
test
aam
mov
pop
into
jmp
cmp
jp
loope
jne,pn
jp
sub
mov
in
hlt
outsb
pusha
mov
push
sub
jo
sbbl
mov
fwait
add
insb
and
add
or
mov
scas
loope
pop
mov
pop
jmp
mov
cmp
xchg
jns
xchg
sbb
xor
dec
scas
push
pop
cmp
jecxz
add
and
adc
in
arpl
fdivp
das
mov
xchg
and
lahf
xor
mov
fmuls
fsubl
std
add
shl
sub
jb
out
in
cmpsl
mov
mov
sahf
xor
push
rcll
ljmp
pop
and
notl
sbb
fimull
mov
jp
sbb
xlat
lea
iret
mov
js
xchg
mov
test
push
cld
enter
movsb
mov
push
loope
pop
xor
inc
sub
out
aas
dec
mov
sbb
shll
push
add
inc
outsl
or
push
stc
cltd
int
in
outsb
sahf
addr16
daa
cmp
test
test
mov
scas
adc
cmpsb
cld
add
pop
cmp
lahf
mov
cmp
outsb
es
lret
dec
repnz
test
aas
jne
xchg
shlb
ret
xchg
dec
sbb
inc
or
test
pop
mov
movsl
adc
and
or
test
jbe
jnp
popf
xor
shr
xor
int3
mov
and
mov
or
test
aas
and
not
in
out
ja
ror
jl
inc
push
xchg
xor
daa
sbb
punpckhbw
lods
pushf
xchg
popf
dec
in
mov
pop
jmp
dec
es
add
mov
inc
mov
setp
xor
and
fnstenv
xchg
cltd
stos
xor
inc
nop
fdivl
lret
and
push
das
pop
push
push
dec
xlat
or
outsl
inc
je
dec
cltd
lahf
xchg
cmp
and
lcall
cmp
xchg
mov
fistpl
add
arpl
test
in
insl
xor
inc
inc
mov
xlat
sahf
sbb
mov
push
fiaddl
cmp
mov
inc
mov
mov
enter
push
dec
cmp
out
inc
dec
sbb
movhps
cmpsb
or
inc
inc
inc
mov
or
push
js
jmp
sahf
enter
xor
pop
lock
dec
adc
push
fcmovne
sub
mov
lea
movsb
jl
addb
stos
scas
and
add
out
jl
sub
mov
xchg
icebp
imul
leave
scas
push
jle
rol
push
xlat
sub
mov
push
in
jecxz
push
push
mov
ss
fstpt
test
in
jp
push
jmp
aas
push
pop
jbe
test
mov
lahf
mov
dec
add
xchg
sti
mov
cmp
xchg
loope
push
push
pusha
out
dec
repnz
fdivrl
nop
cmp
pop
push
test
dec
pop
adc
pop
or
push
mov
jecxz
repz
stos
mov
mov
xchg
mov
addr16
movsl
dec
cmp
push
xchg
rcrb
in
lret
nop
out
inc
pop
mov
and
xor
icebp
les
or
jp
sbb
dec
dec
addr16
sub
subl
lcall
jns
xchg
sub
cmpsb
aad
push
scas
mov
push
sub
jle
std
push
imul
ljmp
imul
mov
dec
in
xorb
loopne
cli
fstl
jmp
mov
popf
aas
ds
fnstsw
fwait
repnz
inc
xchg
xchg
push
xor
sbb
or
xchg
ret
mov
gs
ja
dec
outsb
add
mov
dec
mov
out
pop
mov
xor
and
xchg
jmp
adc
cmc
push
push
dec
cmp
sbb
rcll
cltd
mov
cltd
std
shl
test
jge
mov
pop
mov
mov
subb
mov
subl
hlt
pusha
sub
test
sbb
cmp
mov
push
sbb
shlb
jecxz
push
mov
jle
les
icebp
mov
xor
les
pop
aas
xchg
mov
mov
in
aad
mov
pop
inc
ja
mov
loopne
mov
adc
lods
push
pushf
pop
mov
nop
dec
dec
in
xorb
sbb
and
movsb
sbb
pop
adc
nop
push
ret
jnp
xchg
arpl
push
shrl
rol
cmpsl
xchg
pushf
pop
pop
pusha
add
je
jae
pop
push
cli
mov
insl
fadds
jo
or
lret
jno
jne
fld
es
iret
outsl
dec
mov
mov
cwtl
ljmp
add
xlat
xor
cmpsb
shrb
lcall
ja
mov
dec
sub
and
fwait
iret
adc
mov
dec
add
ss
pop
repnz
es
stc
ret
xor
cmpsb
adcb
sub
popf
outsl
inc
aas
fwait
jns
mov
jg
push
cmp
sahf
push
push
lods
push
pop
add
mov
mov
cmp
fwait
lcall
je
int3
iret
pushf
iret
test
aas
loopne
aas
inc
rcr
loope
pop
and
or
fwait
xor
jmp
iret
int3
xchg
call
aas
ss
push
cmp
loop
filds
adc
fcos
adc
cmp
inc
or
inc
mov
xchg
sarb
mov
stos
or
es
mov
mov
stc
add
outsl
add
dec
movsb
or
enter
sbb
xchg
mov
mov
lcall
pop
rclb
mov
jp
cltd
xor
sbb
aas
fildll
dec
sub
fmulp
lahf
sbb
loope
in
int3
and
aad
sbb
jns
shrb
sbb
imull
out
es
pop
jp
sbb
test
je
sbb
insl
push
addr16
mov
icebp
inc
out
mov
jg
pop
mov
inc
cwtl
mov
jp
inc
xchg
jno
sub
cld
imul
pop
xchg
xchg
out
test
sbb
sbb
insb
jae
dec
in
push
xlat
je
cmp
shlb
sbb
je
imul
sub
sbb
pop
push
pop
xchg
cs
xchg
xor
mov
cmpsb
add
pop
stos
mov
addr16
mov
std
or
fldenv
inc
into
scas
les
dec
jb
cmp
dec
dec
data16
push
test
cmp
inc
mov
mov
pop
fnstenv
sub
rcll
enter
into
xor
into
jb
push
dec
and
aam
ja
std
xchg
and
insb
loop
push
xchg
outsl
fistpl
add
lock
mov
mov
jns
pop
lret
xchg
arpl
push
data16
mov
push
mov
cmp
push
mov
imul
repnz
dec
push
or
lcall
cmp
je
push
pop
icebp
sub
sub
iret
mov
sub
dec
popa
push
ljmp
dec
xor
mov
mov
loopne
cltd
fsubp
inc
mov
nop
mov
pop
push
xchg
int3
or
lods
js
jp
loop
jns
out
aaa
mov
leave
lcall
nop
and
jecxz
jmp
dec
faddl
xor
sbb
pop
lcall
popa
sbb
xchg
stc
mov
adc
and
jno
dec
icebp
xor
pop
sub
enter
xchg
xor
mov
rorl
push
pushf
sbbl
repnz
lods
or
xchg
sbb
mov
fwait
dec
adc
lahf
sbb
jno
dec
loop
outsb
cmp
sub
inc
loop
mov
cmpsb
or
lret
fnstenv
shr
jl
arpl
repnz
fistps
inc
and
imul
sahf
in
cmp
push
mov
jmp
outsb
pusha
lods
mov
ficoms
fisttpl
xor
popf
ljmp
push
inc
test
aad
bound
in
rorl
cmc
mov
shl
jecxz
or
or
or
ljmp
jno
cmpsb
lahf
jp
sub
push
jae
cmp
dec
pop
push
lock
dec
shlb
mov
xchg
adc
sbb
and
fwait
lds
in
aas
mov
or
and
cmp
data16
push
pop
cmpsb
pop
mov
mov
pop
or
lahf
fstps
sar
mov
shrb
xor
pushf
idiv
inc
shr
outsl
imul
mov
lock
pop
inc
filds
dec
inc
jp
mov
outsl
sbb
sbbb
mov
leave
mov
mov
or
mov
dec
cmp
add
inc
cmp
imul
dec
fsubp
sbb
pop
pop
repz
xchg
mov
add
sub
mov
stos
inc
cmc
stos
or
cs
shrb
xchg
fdivs
fcmovnu
cmp
addl
mov
cld
mov
lret
pop
sub
push
nop
fdivrl
push
imul
psllq
aas
mov
cli
inc
test
sti
cmpsb
cwtl
scas
fiadds
mov
arpl
dec
mov
test
jb
fstpl
inc
cli
pop
add
call
jle
jp
mov
imul
lock
xor
pop
adc
mov
xchg
fmuls
cli
sbb
jle
into
add
xorl
js
inc
dec
inc
insl
arpl
mov
and
ror
sub
outsb
imul
and
or
mov
shll
movb
cmp
popa
cmpsl
out
adc
daa
scas
iret
push
sub
jp
sbb
add
adc
dec
inc
clc
jb
push
and
inc
jbe
mov
xchg
daa
push
inc
cmp
push
cwtl
icebp
int3
sub
push
sti
pop
jo
pop
ds
imul
fldenv
gs
xor
mov
popf
xchg
mov
inc
dec
jecxz
imul
out
pop
scas
rorb
pop
shl
movsb
jo
jae
ret
les
sbb
fistpl
pop
hlt
pop
mov
pcmpgtb
pop
stos
loopne
cwtl
insb
test
jecxz
shrb
int3
test
int
adc
inc
ljmp
or
dec
cmp
sub
cmp
and
inc
mov
pusha
fwait
mov
fcmovnu
mov
add
enter
mov
mov
pop
sub
mov
mov
je
loope
pop
aas
les
sbb
fwait
mov
sbb
fists
fdivrp
push
fbstp
pop
and
xchg
or
lret
and
push
add
lahf
fs
movsl
mov
and
sahf
ret
push
pushf
pop
mov
inc
jmp
push
mov
push
or
xor
por
scas
or
cmp
popa
mov
inc
mov
pop
in
mov
inc
xor
jbe
stos
inc
mov
jge
icebp
dec
mov
rolb
mov
movsb
sub
pop
jl
mov
stos
cs
sub
in
repz
and
cmp
cmp
fcmovb
in
pop
cmp
fwait
data16
shl
jge
xchg
mov
xor
inc
add
and
lds
mov
in
std
push
adc
lret
lds
sbb
out
dec
jp
sub
mov
out
add
test
or
xor
fistpl
mov
xor
movsb
push
inc
stos
ss
ret
jo
loop
pop
or
gs
cli
loope
jno
adc
xor
mov
in
aas
mov
cld
push
das
cmp
sub
icebp
and
xchg
dec
es
sbbb
popa
sub
stos
iret
sub
fists
mov
add
int3
dec
adc
fdivl
subl
or
dec
aas
cmp
dec
dec
repnz
out
cmpsl
adc
sar
and
lcall
mov
cltd
cmp
leave
dec
and
sbb
clc
pusha
pop
mov
mov
insl
lods
test
adc
adc
pushf
xchg
ds
mov
pop
ret
push
outsb
loope
xor
and
outsb
fbstp
shr
xor
sar
cmpsb
and
jno
lahf
push
arpl
out
jbe
repnz
stos
push
fsubr
jns
dec
hlt
mov
leave
sbbl
loop
jl
adc
in
sbbb
call
mov
popf
int
dec
fisubs
ficoml
or
fs
inc
hlt
fsubs
push
xchg
jp
sub
push
cmp
sahf
pop
mov
das
lret
mov
mov
adc
mov
negl
xor
loopne
loopne
add
fdivs
inc
push
ret
sbb
pushf
mov
xchg
adc
jl
jl
sti
add
int3
cmpsl
cmp
pop
or
cmp
sti
or
or
xor
shl
mov
inc
aad
sbb
out
into
push
sbb
sti
test
xchg
xor
dec
fldt
outsb
add
push
lahf
sub
xchg
jmp
movq
push
lods
xor
dec
rorl
inc
ss
aas
es
xor
movsl
adc
das
fs
fadd
in
test
mov
mov
adc
inc
fldcw
mov
insb
decb
jge
sarl
push
mov
jns
std
mov
sbb
pop
jb
sarb
xchg
jbe
jge
insb
lods
imul
jmp
ss
mov
sub
or
jmp
enter
arpl
sti
xor
xor
and
test
and
movsb
leave
mov
fldl
xor
frstor
ds
fistps
das
insb
jns
push
negb
mov
lahf
sarb
lret
pop
iret
mov
in
in
sbb
pop
cmp
rcrl
inc
add
fimull
adc
mov
mov
xchg
cmp
scas
xchg
xlat
out
movsb
jbe
das
repnz
mov
das
cmc
xchg
ftst
dec
inc
sub
cmp
mov
add
test
xlat
es
int3
cltd
icebp
cmp
jo
in
mov
xor
cwtl
and
and
sbb
or
outsb
loopne
push
cld
xorl
lods
add
xchg
inc
nop
pop
sub
jne
sub
loope
fwait
adc
outsl
sbb
jns
popa
and
in
or
or
hlt
neg
xchg
mov
imulb
pop
stos
fnstcw
das
insb
pop
movsb
nop
pop
rcrb
adc
jle
fisttpl
inc
and
nop
out
or
cwtl
push
jp
mov
xor
aam
js
out
loop
loop
lds
jb
push
sbb
jo
stos
cmp
jp
push
inc
addr16
add
jl
inc
jp
mov
ret
pop
jns
xor
jns
ss
js
popa
jno
clc
inc
test
xchg
mov
lock
mov
jmp
shl
xor
movsl
in
mov
jle
cltd
loopne
push
fisubl
or
mov
ljmp
and
movl
mov
or
inc
je
jae
pop
adc
imul
or
sahf
sub
add
repz
mov
out
sbb
jo
adc
push
push
sarb
sub
iret
outsb
lret
gs
sub
sub
addb
lds
iret
ficomps
ja
ud2
adc
test
mov
inc
test
sbb
ret
mov
adc
repnz
mov
jle
mull
lods
cmc
push
sti
cmpsl
data16
dec
popa
adc
scas
mov
ds
in
int3
testb
scas
shrl
xchg
enter
mov
out
hlt
add
pop
mov
nop
add
pop
stos
popf
sbb
subl
popf
shll
outsb
jmp
test
cltd
pop
and
mov
xchg
movsl
out
mov
scas
out
into
cmp
jmp
xchg
shr
dec
mov
cmpsb
mov
and
lret
aaa
add
fiadds
ficoml
aad
mov
push
and
popa
fnstcw
aas
mov
ljmp
insb
jae
call
lret
sbb
test
inc
aaa
pop
jne
aaa
in
ds
stos
sub
popa
popa
pop
xchg
rcll
cmp
dec
ljmp
push
xchg
lret
xchg
or
cmp
sub
or
xchg
cmp
push
testl
or
add
push
and
jp
insb
push
xchg
jb
cmp
notl
push
push
add
stos
hlt
int
stos
jge
and
lahf
lock
aad
sbb
fldl
aam
sar
insb
sbb
jmp
dec
insb
mov
leave
xchg
cli
inc
jae
mov
push
and
push
lret
repz
sub
mov
inc
cltd
push
data16
cli
popa
imul
data16
and
and
xor
inc
loopne
push
cmp
sbb
in
lods
adc
in
clc
stos
into
mov
cmpb
pop
popf
mov
loopne
push
insl
and
sbb
pop
movsl
mov
test
cmp
mov
mov
sbb
loop
inc
mov
xchg
aam
mov
flds
shlb
call
cmpsb
jg
sahf
les
sahf
dec
nop
inc
aas
lods
pushf
dec
test
pop
nop
iret
sbb
aas
push
lret
xor
into
mov
out
cmp
aad
in
mov
sbbb
neg
mov
pop
dec
shrb
or
inc
clc
jbe
rcrl
aam
js
mov
shlb
inc
and
cli
lods
rcrl
sti
jl
bnd
dec
imul
stos
xchg
out
ss
sbbl
hlt
lock
imul
out
pop
ja
push
mov
xor
sub
fs
in
in
enter
or
subb
pushf
adc
sbb
scas
les
push
movsl
mov
loopne
call
cmp
mov
jg
cmp
outsl
jle
insl
adc
xchg
int
lret
scas
scas
sbb
ss
loope
adc
inc
mov
xor
pop
out
es
notb
push
mov
mov
xchg
packuswb
shr
pushf
xchg
repnz
inc
int3
insl
dec
push
push
xor
pop
and
std
lods
push
fcoml
nop
dec
negl
stos
lock
jo
lea
mov
incl
outsl
mov
pop
xor
jge
dec
mov
xchg
imul
xor
sbbb
sbb
jl
or
cmpsl
mov
mov
push
loope
xor
test
xor
ret
fstpl
lods
inc
cmp
mov
push
jg
dec
add
es
mov
fcoms
push
add
hlt
inc
popa
js
ficomps
shlb
xor
in
lcall
inc
xor
push
repz
arpl
out
mov
idivl
ja
or
data16
cmpsb
into
fs
fdivrs
jp
mov
and
subb
adc
cmpsl
sub
ljmp
jmp
cmc
mul
mov
dec
fsubs
and
and
sarl
or
shlb
pop
sbb
int
hlt
lock
mov
in
test
jnp
and
fldl
sti
imul
push
and
daa
sti
cmp
repnz
lahf
stos
lods
dec
jl
in
insl
xor
stos
mov
sub
adc
iret
dec
test
push
dec
push
fidivrs
movsl
pop
xchg
jle
movsl
pop
arpl
test
bnd
loop
lods
mov
push
and
adc
fistpll
adc
or
or
and
repnz
fdivrl
in
sbb
inc
mov
xor
outsb
std
pop
scas
out
insl
outsb
fs
sbbl
repnz
add
aaa
cmp
and
or
sub
push
cs
xchg
mov
mov
or
dec
push
rclb
xchg
cmc
dec
and
push
in
xchg
incb
fildll
sub
adc
dec
rcr
pop
or
clc
mov
nop
fisttps
pop
insb
enter
insb
mov
aaa
in
scas
push
mov
ret
push
sub
xorb
cltd
sbb
and
mov
int3
arpl
adc
inc
outsb
inc
outsl
xchg
xchg
add
inc
push
das
je
pushf
pop
pop
mov
test
cmc
in
jge
adc
orb
fisubrs
int3
test
rolb
inc
fcoml
pop
pop
out
lcall
dec
xor
pop
cmp
jb
ds
lret
popa
scas
adc
pop
in
out
jle
imul
loopne
lods
mov
or
pop
call
jno
push
sbb
sbb
cmp
jg
orl
rcr
das
loopne
cmp
icebp
xor
inc
test
aam
push
adc
jbe
out
ljmp
vrsqrtss
mov
push
mov
mov
add
jnp
jne
pop
mov
cld
aas
test
inc
inc
and
dec
pop
addr16
sub
popf
lcall
in
loopne
mov
out
cmp
or
iret
test
cmp
popa
rcl
and
xor
outsb
loop
rol
push
dec
stos
jg
dec
cmp
insl
or
testb
int
ss
insb
in
xor
pop
jmp
sub
ret
dec
jg
add
pushf
or
jno
push
dec
lret
mov
std
jae
push
fnstenv
sub
fiaddl
mov
inc
ss
pop
outsb
cmpb
mov
xchg
push
xchg
pop
xchg
or
stos
call
int
sbb
hlt
cmpl
cld
cli
mov
ss
mov
or
ficomps
addr16
jae
dec
std
adc
add
hlt
movl
ljmp
jb
movsl
mov
mov
pop
sub
add
pop
lods
es
xor
jbe
divb
adc
leave
ljmp
mov
cmp
push
cmpxchg
je
roll
cmpl
xchg
mov
fistps
fmull
xor
fsubrl
push
mov
mov
add
xor
dec
stc
lret
out
insl
fcomi
add
xchg
xor
cs
cld
push
ljmp
sub
scas
and
lcall
jnp
jmp
arpl
cmp
cmp
mov
ficoms
fwait
inc
xchg
sbb
das
gs
bound
hlt
in
sbb
ljmp
and
sbb
into
ret
jb
add
fistl
jbe
mov
out
in
insb
fadd
mov
ds
mov
sub
pop
stos
out
jmp
pop
push
xor
fbld
popa
lods
mov
xchg
int3
test
jl
dec
jp
into
jp
adc
mov
jo
mov
inc
inc
jno
aaa
sbbl
cmp
xor
cmp
out
jne
adc
xchg
add
shlb
arpl
ds
pop
xor
testl
int3
add
out
jb
lret
push
sbb
outsl
and
roll
mov
sbb
mov
stos
out
bound
xchg
loopne
pop
add
cmc
adc
push
pusha
inc
pusha
cmpsl
jle
lock
xor
enter
or
icebp
clc
es
push
repnz
es
xor
push
dec
cltd
outsl
mov
mov
add
leave
adcl
fwait
shl
push
into
fisttpll
insb
push
clc
xor
mov
push
or
cltd
pop
or
stos
sbb
xchg
loop
popa
dec
insb
popf
and
jmp
fstpl
sti
dec
adc
xor
gs
mov
or
fnstenv
sti
das
sbb
ret
xchg
dec
jecxz
mov
scas
jae
mov
cmp
pop
cmpsl
icebp
cmp
mov
popa
mov
xchg
jns
or
rcr
jnp
cmp
fwait
jecxz
js
and
sub
test
sub
or
les
xchg
in
dec
pop
mov
jg
and
dec
cwtl
test
lcall
leave
loope
cld
int3
cmpsb
outsl
ja
clc
insl
dec
hlt
outsb
out
shl
mov
sub
adc
inc
rcrl
and
daa
mov
test
out
aad
mov
mov
xchg
adcb
mov
jno
sub
flds
stos
imul
loopne
or
insb
push
sub
jne
ss
cmpsb
or
sub
push
leave
push
enter
pop
mov
add
into
sbb
mov
mov
lcall
sub
dec
inc
adc
flds
daa
mov
fsts
sub
pop
int3
jle
orb
mov
mov
mov
cwtl
fisubrl
xchg
out
lea
xor
mov
loopne
pop
adc
add
aaa
mov
pop
sbb
mov
cmp
xor
nop
pop
mov
xorl
jge
pop
add
mov
push
sbb
xchg
and
dec
aad
xchg
and
xchg
xor
dec
pop
mov
insb
lock
push
jae
cmp
jl
hlt
fstpt
xchg
or
imul
inc
andb
cld
and
shrb
or
jmp
or
stc
sub
add
push
pop
mov
int3
cmp
pop
pop
push
repnz
lahf
dec
adc
dec
das
inc
fdivrl
cmp
bound
add
mov
shlb
add
es
push
and
xchg
lret
xchg
push
inc
xchg
mov
imul
fimuls
dec
adc
jle
test
lock
mov
rorl
fwait
dec
test
jbe
pop
push
pop
out
or
sub
xchg
add
pop
shrb
inc
fldt
into
xchg
outsl
stos
add
add
jp
jns
pop
sub
sahf
sbb
stos
mov
pop
int3
into
inc
mov
mov
dec
es
cmp
sbb
imul
repnz
scas
sbb
dec
sti
in
dec
mov
je
xchg
mov
fwait
fs
add
mov
lcall
jl
subl
ds
ret
lds
pop
cli
mov
out
push
arpl
das
shl
push
ficomps
rcl
and
pop
push
mov
sub
je
test
fwait
push
or
or
cmp
ja
in
pop
inc
in
cli
pop
xchg
jns
mov
mov
and
out
gs
and
movsl
dec
inc
repz
sub
mov
stos
xor
xchg
dec
nop
xchg
cli
stos
jb
stos
into
pop
add
sbb
aas
movsb
std
or
pop
out
mov
sbb
outsl
push
or
add
and
iret
push
test
std
outsl
aaa
lret
outsl
pop
cmp
adc
or
jbe
and
inc
gs
push
dec
xorl
sar
push
mov
inc
dec
or
pop
std
mov
popa
dec
shll
mov
push
xchg
scas
and
add
xor
out
mov
mov
xor
fnstenv
fisttps
es
int
xchg
sbb
loopne
jg
xchg
mov
imul
stos
jns
mov
push
rolb
inc
inc
aam
ss
mov
sbb
ss
pop
xor
cld
jno
and
fsubr
jne
push
movsb
addr16
loope
inc
mov
xor
fildll
and
imul
test
jb
pop
mov
movsb
xchg
std
mov
jecxz
pop
faddl
ljmp
mov
pop
inc
xchg
cld
icebp
clc
repz
mov
test
push
xchg
mov
hlt
push
decb
push
sub
add
mov
and
dec
scas
push
imul
leave
mov
push
fwait
rorb
push
adc
sub
mov
rcrl
push
push
sti
test
fdiv
jbe
sub
aam
mov
in
push
js
mov
fwait
add
sbb
jle
pop
dec
out
cwtl
ss
and
jge
rcrb
sti
adc
push
cmp
cmpsl
adc
xchg
pop
xlat
jno
or
or
cmp
pop
adc
outsl
dec
mov
add
xor
push
pop
pop
sbb
notb
repnz
adc
outsb
add
adc
pop
add
and
ret
fs
mov
adc
imul
cmc
xchg
xchg
xchg
xchg
jle
push
incb
or
jecxz
emms
out
xlat
mov
or
sti
xchg
sub
arpl
imul
sbb
js
test
pop
jbe
sbb
cld
pop
xor
leave
test
xchg
sysexit
jg
cmp
imul
pop
fsubr
mov
xor
dec
add
fstpl
orl
mov
mov
inc
and
pop
cmpsb
in
inc
mov
lods
or
dec
pop
cmp
mov
push
adc
or
sbb
test
stos
pop
push
aad
mov
sbb
int3
cmp
mov
dec
out
arpl
gs
mov
mov
in
or
sbb
cmp
xor
ja
ficoms
fwait
pop
xor
inc
mov
testb
scas
les
mov
pop
sub
or
adc
xor
mov
pop
adc
gs
adc
cmp
sahf
movsb
dec
in
dec
adc
sbb
mov
clc
pop
dec
cmc
lods
adc
sahf
push
pusha
cmp
sub
sbb
fsubrs
or
out
out
popf
sbb
addr16
in
add
iret
shrb
jae
lret
aaa
cli
sahf
inc
sahf
out
push
xor
icebp
dec
shr
ficomps
and
fs
and
fists
out
adc
fdiv
movaps
and
shl
jge
shrb
je
lcall
lahf
adc
sub
adc
test
dec
aas
push
pop
push
push
sbb
inc
lea
out
fs
lock
push
inc
mov
loope
fadds
stos
pop
addr16
lock
or
fucomip
mov
repz
xchg
and
push
cmc
fimuls
dec
pop
mov
fwait
jmp
pop
xchg
cmp
sbb
add
jg
es
mov
dec
mov
cmp
mov
int3
push
inc
xchg
arpl
mov
push
jns
dec
sub
cmp
fisubs
stc
mov
push
cld
aas
add
sub
inc
xchg
adc
pop
push
shll
sbb
lahf
stos
sbb
pusha
sub
mov
mov
xchg
or
test
pusha
xorb
and
lods
test
dec
push
jmp
arpl
xor
or
into
sub
add
or
xchg
push
test
popf
push
pop
add
ljmp
jg
xchg
ja
daa
in
or
push
mov
mov
popa
xor
add
or
imul
pushf
jns
scas
cmc
leave
dec
mov
push
mov
ja
mov
cmp
movsl
xor
scas
stc
pop
mov
jns
fs
leave
sub
mov
ja
sbb
loopne
mov
sub
mov
enter
adc
or
icebp
inc
imul
inc
rcr
cmpsb
in
iret
or
jne
xchg
js
lods
mov
fs
add
push
push
es
lcall
out
xor
es
xor
xor
loop
rolb
cmp
push
in
repz
and
inc
sbbl
fs
jecxz
pop
mov
ja
test
daa
mov
inc
sbb
jnp
shlb
imul
adc
divl
mov
dec
cltd
ljmp
mov
dec
fldcw
xchg
cwtl
lds
sub
sarl
add
pushl
loop
into
adc
mov
rcr
outsb
in
adc
push
fadds
jnp
pop
addr16
clc
dec
lret
sub
push
sbb
data16
in
ja
and
sbb
add
addr16
popa
add
ds
and
sarl
loopne
ss
mov
test
iret
sbb
fs
test
insl
fldt
es
ds
push
shlb
jne
fwait
mov
out
mov
inc
xchg
data16
fcoml
enter
clc
pop
push
push
cltd
push
push
mov
pushf
add
jbe
mov
mov
adc
push
sti
std
dec
and
sbbb
outsl
scas
or
pop
xor
aad
mov
out
push
add
add
into
add
aaa
sbb
push
cmp
sub
bound
ss
adc
cmp
or
push
ja
lahf
mov
sub
inc
lods
in
scas
cli
cmp
adc
sub
xor
dec
addr16
add
and
push
pop
mov
in
inc
xchg
mov
dec
imul
fwait
xchg
hlt
push
mov
adc
fcomip
out
push
mov
xchg
cmpsl
and
push
mov
sbb
push
je
xchg
push
dec
popa
fimull
insb
dec
dec
adc
fdiv
push
sarl
ja
inc
loop
pop
cmp
jmp
mov
inc
in
pop
add
and
jmp
inc
jl
pop
and
decb
ret
sub
dec
jae
inc
xor
sub
stc
push
mov
lods
xchg
sbb
dec
popa
ds
jb
adc
xchg
xorl
fidivrl
repnz
and
shld
pop
movlps
lds
insb
test
pusha
jecxz
aad
clc
test
popf
nop
aaa
fadds
movsl
addr16
lahf
cmc
pop
repnz
push
mov
int
sbb
loope
jbe
in
push
or
shr
inc
sub
insb
sbbl
in
lock
and
xchg
gs
rcr
jle
adc
test
fwait
aaa
sahf
stos
mov
mov
xorb
add
fdivrs
xchg
enter
dec
inc
or
sub
out
dec
ss
cmp
xchg
stos
pop
mull
jae
xchg
xchg
sbb
pop
and
jnp
fwait
inc
popa
or
daa
aas
push
mov
xchg
pushf
inc
popf
mov
push
iret
test
loop
cmp
stos
in
xor
mov
push
ret
out
lahf
fcomps
pop
cld
jmp
jne
lods
rorb
mov
xor
sbb
into
movb
jl
xor
sbb
push
movsb
xor
ret
scas
cld
mov
cmpsl
sti
cmp
out
imulb
leave
rclb
inc
ret
gs
jo
mov
sub
in
adc
mov
orl
in
not
loope
add
mov
push
mov
in
adc
add
push
push
adc
rcrl
dec
dec
repnz
inc
lahf
loopne
push
ret
test
fnop
xchg
lret
pop
mov
scas
cmpsl
push
inc
in
stos
scas
popf
or
mov
stos
arpl
dec
mov
add
or
xchg
jnp
lods
jle
sub
push
mov
mov
das
adc
jbe
or
xchg
mov
in
cli
notb
icebp
adc
std
add
fstps
outsb
cwtl
sbb
sub
out
xchg
outsb
imulb
and
stos
lods
mov
popa
add
xor
sbb
lcall
imul
jp
push
lcall
and
fwait
mov
into
mov
add
lock
sbb
xor
je
ja
insb
out
clc
lods
add
inc
cli
lods
cmp
adc
je
mov
cmp
scas
nop
loopne
stos
or
cmp
fisttpl
xor
shll
mov
xor
sub
sbb
cmc
jbe
movsl
sbb
mov
pop
aas
test
xchg
pop
je
lock
adc
pop
jg
and
enter
in
imul
and
cmp
and
fdivs
cmp
cmp
in
pop
mov
stc
les
dec
movsb
jns
and
lds
jle
daa
sbb
stos
scas
test
cmp
shrb
cli
sub
and
mov
cmpsl
fnstsw
mov
and
sahf
enter
clc
mov
add
inc
sbb
out
and
cli
push
mov
pop
es
out
push
addb
lock
inc
jge
jbe
ss
dec
inc
push
ds
test
pusha
out
mov
aad
test
test
enter
adc
movd
sub
lret
push
mov
cwtl
push
repnz
arpl
cltd
jge
pop
mov
sbb
dec
movsb
mov
shll
mov
mov
pusha
pop
mov
dec
popa
push
push
les
push
push
mov
pop
pop
inc
pop
xlat
enter
sub
sarl
xchg
aad
push
inc
es
int3
in
push
jb
mov
cmp
lahf
fcmovu
ja
mov
fistpl
xchg
mov
xchg
pop
mov
pop
enter
test
fldpi
xor
cmp
dec
xchg
pop
loope
pop
enter
push
lret
shl
mov
or
mov
rcll
repz
mov
test
movsl
jmp
ja
or
xlat
popf
sbb
push
xchg
inc
inc
outsb
pop
dec
and
cmpsb
mov
outsl
sbb
xchg
push
add
ret
test
push
inc
idiv
test
lret
movsb
cmpsb
loope
cmc
seta
inc
mov
jne
daa
inc
mov
sub
fbld
ret
jmp
clc
out
sub
addr16
pushf
testb
lods
jp
adc
add
mov
mov
or
inc
inc
insb
int3
jne
inc
enter
movsb
adc
push
dec
mov
pop
loope
hlt
inc
mulb
xchg
xor
stos
shlb
pop
mov
mov
xchg
jl
mov
sbb
pop
xchg
jne
mov
mov
stos
pop
add
int
push
repz
dec
in
push
outsb
fistpl
mov
fs
fucom
xchg
push
inc
fdisi(8087
int
and
out
leave
lret
test
pushf
dec
cmpsb
mov
les
jo
mov
jmp
stc
shll
lods
aaa
stos
mov
add
pop
cli
adc
xor
pop
xlat
mov
outsl
dec
xor
cli
and
push
scas
stos
fmull
or
mov
mov
cmpsb
pushf
xchg
mov
jg
lea
movsl
ja
fcom
lcall
aam
xorb
mov
xor
sub
nop
sub
dec
sti
jb
push
jbe
xchg
repnz
and
notb
stos
cltd
out
sbb
push
ljmp
cmp
adc
push
test
xchg
xor
push
inc
shrl
scas
lcall
rolb
in
xchg
mov
add
cmp
push
cmpsb
xchg
ljmp
test
mov
dec
loop
stc
add
inc
mov
test
stos
mov
mov
mov
add
mov
sbbl
adc
mov
sbb
add
out
repnz
jg
lea
cwtl
mov
cmp
mov
mov
xchg
xchg
push
inc
movsl
pop
hlt
push
fwait
es
sbb
fcmovbe
ficompl
sub
shll
mov
popf
xor
icebp
and
push
dec
int3
lea
pop
mov
loope
imul
popa
mov
jns
andb
cmp
pop
in
push
idiv
pop
sub
sub
in
xor
lea
cmp
stc
dec
fsubrl
lods
ret
sub
ret
xlat
mov
mov
sub
xor
ljmp
adc
es
push
lods
xchg
arpl
ficoms
cmpsb
xchg
adc
add
lods
adc
mov
inc
xlat
cmpsb
xchg
sub
jmp
adc
dec
xchg
test
mov
int3
sbb
movsl
repz
repz
sbbl
ja
push
or
push
ss
add
mov
sbb
enter
lahf
in
ffreep
ror
jo
cmpsl
xchg
enter
popa
cmp
mov
adc
add
les
jnp
aas
adc
dec
roll
push
sahf
xchg
je
cld
jge
jbe
je
daa
cmp
add
and
mov
shlb
mov
xor
outsb
mov
fstpt
inc
and
scas
xor
loopne
mov
cs
adc
mov
adc
cs
sbb
frstor
cwtl
ret
cmp
lret
xlat
lahf
repz
out
stos
jecxz
repnz
out
push
lcall
cmpsb
sub
inc
ficompl
out
mov
pop
ror
dec
ret
inc
and
dec
and
and
movsl
in
and
and
out
dec
mov
lea
stc
mov
jnp
test
sub
jg
dec
cmp
dec
pop
call
xchg
mov
dec
sbb
roll
iret
enter
out
and
scas
scas
int
jno
ret
insb
lret
rolb
mov
enter
bound
dec
mov
xchg
pop
aam
cltd
or
pop
adc
cmp
mov
jmp
clc
jmp
push
movsl
xchg
push
or
mov
sub
pop
das
es
ret
lods
repz
dec
pop
out
push
and
pop
test
mov
mov
or
enter
js
inc
xor
repnz
and
inc
inc
in
ficoms
ja
mov
int3
and
mov
nop
pop
sub
sahf
or
stos
xchg
dec
jle
ficompl
sub
pop
inc
lret
mov
mov
adc
jo
out
cwtl
mov
lds
sub
mov
imul
jo
add
push
jg
push
sub
push
mov
add
pop
push
leave
cmp
enter
jmp
das
daa
inc
pusha
or
mov
incb
and
scas
in
out
or
fldcw
jno
sub
pop
insb
ljmp
jmp
aaa
mov
or
or
test
loope
outsb
mov
cld
mov
cmp
xor
lods
jns
mov
dec
jb
sub
sub
rcrl
ficoms
push
shlb
add
clc
fwait
push
subl
push
inc
mov
daa
xchg
sub
cmp
inc
sub
gs
sahf
leave
jb
lods
fs
mov
call
fwait
addr16
shlb
scas
popa
insl
push
or
bound
stos
outsl
lret
lahf
or
bound
fucom
cmp
sti
cli
arpl
sub
adc
jmp
xchg
add
mov
repz
inc
test
mov
xor
fsubrp
loop
loopne
adc
adc
dec
testb
data16
fidivrs
xchg
jmp
fcomp
mov
ja
push
xchg
jne
dec
imul
adc
adc
xchg
pushf
jecxz
lret
pop
jo
jnp
jno
push
cmp
pop
aaa
sbb
push
inc
sub
mov
ljmp
cmp
push
add
jbe
pop
shll
aam
stos
mov
lods
or
repnz
mov
out
andb
decb
sbb
pop
popf
pop
xor
mov
in
out
in
mov
mov
jo
test
cmp
mov
cmp
cwtl
lcall
mov
dec
mov
push
mov
sbb
sbb
jl
ffreep
inc
jmp
stc
mov
lcall
movsl
pushf
sub
xor
and
dec
jg,pt
clc
icebp
cld
rorl
cmc
daa
sti
aam
and
out
in
out
outsl
enter
shl
mov
or
sub
jns
lret
mov
shll
dec
xor
mov
jmp
mov
jno
pop
pop
call
adc
xor
mov
insb
or
cmp
icebp
lahf
mov
ds
xchg
mov
fucomip
arpl
cmp
add
adc
lret
mov
dec
out
fcmovnb
mov
sub
and
sbb
sbb
add
sbb
or
jle
adc
or
mov
pop
xor
jnp
mov
cmp
pop
lcall
sub
inc
add
and
cmp
jns
fstl
cmc
frstor
es
sbb
xor
fildl
lock
ljmp
mov
sbb
adc
dec
jg
push
movsl
adc
leave
mov
sbb
orl
insl
mov
jne
ljmp
sbb
jnp
leave
mov
jo
imul
or
xchg
pop
popa
dec
mov
mov
and
adc
fstpt
jg
cmp
add
dec
iret
ret
ss
mov
cmp
jmp
lret
in
xchg
pop
loop
test
jnp
sbb
les
xlat
notl
sbb
adc
lods
gs
mov
pop
inc
in
xchg
sub
mov
pop
sub
mov
mov
lods
shrl
or
ds
popf
push
jmp
jnp
in
pop
icebp
xor
xchg
sbb
rcl
add
cwtl
or
daa
jae
pop
repz
cmc
mov
cld
push
xlat
mov
mov
cmpsl
xchg
out
aam
jns
xor
nop
xlat
jle
movsl
test
mov
imull
or
das
ret
mov
icebp
cwtl
jae
insb
xor
cmovl
xor
arpl
fisubrl
jbe
int3
lret
inc
test
test
sub
cmp
push
repnz
repnz
and
data16
sub
ljmp
lods
mov
cmp
mov
mov
inc
cs
and
push
daa
imul
cli
inc
inc
pop
inc
movsb
mov
pop
mov
xchg
xor
imulb
or
stos
jnp
xor
mov
ud2
mov
lret
push
mov
daa
scas
cmpsb
outsb
fldt
push
testb
jl
aam
xchg
jmp
or
or
mov
in
in
push
xor
int3
jnp
shrb
leave
scas
mov
test
jbe
pop
jle
imul
test
xor
and
pop
testb
aaa
sar
cmpsb
adc
cmc
fcom
movsb
sbb
sub
punpckhdq
or
cmc
pusha
pop
cmc
sbb
push
sbb
cmp
mov
jb
xor
jp
and
mull
xchg
out
pop
movsl
jmp
scas
sub
jno
mov
shrl
mov
jnp
daa
add
xchg
aad
pop
leave
and
lods
cli
jno
pop
lahf
das
inc
cmp
mov
mov
or
imul
rcl
xor
fucomip
mov
pushl
mov
and
mov
or
mov
mov
daa
sbb
xchg
cmp
out
cmp
cwtl
imul
dec
mov
stos
in
and
cli
faddp
push
xchg
aaa
movsw
adc
xchg
in
cli
mov
add
icebp
dec
lods
push
lret
or
or
mov
cmp
pop
mov
mov
and
mov
adc
xor
pop
mov
test
lret
sbbb
gs
sub
out
loopne
aad
dec
imulb
iret
adc
jmp
out
cmpsl
cmpsl
popf
adc
xchg
stc
fstp
sub
loopne
stos
and
mov
lods
xor
movsl
test
adc
push
jl
leave
imul
outsb
in
enter
mov
mov
mov
xchg
data16
cmp
pop
cmp
ljmp
cmp
lahf
xor
mov
iret
iret
pop
cmp
sbb
or
les
test
je
sbb
iret
xor
loop
ljmp
data16
inc
dec
scas
nop
movl
or
sbb
push
ja
and
shll
jg
pop
dec
xchg
cmp
sub
loop
lcall
hlt
shll
or
jp
dec
pushf
fucomp
mov
xor
pop
sub
in
into
loopne
shlb
xchg
sub
stc
adc
js
stos
daa
dec
sbb
out
sti
enter
scas
loop
lock
ret
pop
xor
dec
add
pop
sti
popf
outsb
cmp
es
cmp
shll
mov
in
shrl
ficomps
jae
ficoml
mov
add
outsl
stos
sub
aam
movsl
xor
sbbl
repnz
std
sbb
mov
aas
push
loope
fists
jmp
or
adc
lea
gs
add
mov
stos
xchg
mov
mov
bt
mov
in
loope
loopne
inc
push
mov
cltd
inc
loop
cmp
movsb
push
sub
mov
int3
inc
push
test
dec
jp
stos
movsb
cli
ljmp
imul
xor
and
call
dec
arpl
pushf
xchg
cmp
cltd
mov
xchg
mov
dec
xchg
inc
call
lods
insb
mov
push
cmc
sar
repnz
and
in
stos
call
xor
imul
pop
inc
mov
jg
jg
and
mov
cli
movsl
pop
into
pop
xchg
and
sbb
arpl
add
mov
js
fabs
jno
pop
pop
add
push
nop
inc
popl
cs
roll
sbb
push
adc
xchg
mov
xchg
inc
sbb
lods
nop
jo
jle
xor
adc
adc
jecxz
psubw
mov
imul
nop
lahf
mov
fcompl
aam
pop
cmc
and
ja
fisttpll
gs
adc
lods
leave
rorl
mov
bound
and
sub
lahf
testl
adcl
loope
popa
mov
ds
mov
sbb
and
in
icebp
arpl
ror
dec
incb
adcl
repnz
xor
jns
das
pop
arpl
insl
int
popa
mov
in
lods
push
push
cli
dec
movsl
in
fistpl
repz
jns
imul
push
arpl
inc
sbb
mov
mov
test
mov
sub
push
jg
push
or
inc
mov
fsubs
jg
jge
into
movsb
stos
mov
xlat
cmp
mov
xchg
and
pop
mov
imul
sbb
xchg
icebp
fwait
add
lret
mov
sarb
daa
sbb
in
das
dec
testl
push
jl,pt
adc
out
push
xorb
mov
int3
mov
pop
negb
das
cmpl
hlt
push
adc
pop
repz
fstl
in
popa
cli
inc
or
outsl
mov
das
pusha
stos
ljmp
mov
es
mov
sub
outsb
mov
xor
inc
xchg
sbb
flds
stc
fists
scas
out
jp
or
push
pop
push
movsl
cmpsb
mov
sub
mov
sbb
xor
adc
sahf
pop
sbb
pushw
test
jbe
mov
pusha
pop
push
xlat
pusha
mov
jno
inc
aas
mov
add
stc
ret
rclb
or
sahf
add
cwtl
fs
psrlq
popa
inc
xor
lds
adc
mov
inc
sub
hlt
mov
lock
fldl
add
mov
sub
pop
mov
and
sub
movsb
xchg
add
sbb
enter
jmp
out
xchg
rolb
cli
fsts
clc
movl
stos
xor
cmpsb
in
in
inc
cmpsb
dec
sbb
repnz
test
sub
ja
xchg
pop
aas
test
bound
mov
fistpll
aas
call
mov
lahf
jp
push
push
int3
xchg
xorl
fistps
mov
or
sahf
stos
add
es
stos
mov
sbb
adc
mov
das
ja
jl
push
cmc
and
test
cmp
dec
loope
cmp
jno
xchg
pop
enter
es
sub
repnz
xchg
adc
adc
cwtl
xor
or
or
movsl
or
ret
push
test
dec
add
frstor
mov
aas
jle
jp
inc
decl
jmp
pop
or
mov
cmp
cld
xchg
outsb
xchg
lcall
push
pop
outsb
mov
mov
lcall
xchg
dec
xchg
cmc
sbb
push
pop
xor
xlat
xchg
sbb
and
mov
mov
sarb
inc
mov
cmp
clc
mov
inc
xchg
in
movsl
scas
sub
adc
adc
and
dec
cmp
inc
add
leave
dec
fcmovb
inc
sbb
mov
lret
xor
stos
jge
dec
movsb
jg
mov
jge
scas
lods
dec
test
xchg
dec
call
addr16
fmul
pop
adc
std
jns
mov
repz
hlt
xchg
fsubl
jge,pt
cmp
mov
pushf
stc
imul
out
nop
sti
mov
pusha
xor
js
push
inc
mov
pop
adc
xchg
outsb
les
push
aas
shll
xchg
dec
cmp
inc
outsb
mov
popa
inc
clc
mov
and
lea
cmp
int
fldcw
ja
jmp
hlt
xor
ret
jmp
lds
xor
cmp
les
and
aad
cs
into
adc
cmpsb
pop
mov
out
addr16
addr16
mov
in
bound
fimuls
push
pop
fs
aad
cwtl
mov
mov
add
sbb
scas
and
mov
lahf
mov
cwtl
push
adc
sub
aaa
pop
cmp
xchg
es
sub
push
test
nop
jne
mov
xchg
daa
jmp
movsl
lahf
dec
jecxz
js
icebp
rdmsr
add
aas
popa
add
jg
push
sub
mov
mov
in
stos
mov
inc
fistpll
in
push
or
pop
mov
arpl
pop
mov
lahf
out
shl
outsl
mov
cmp
sub
xchg
insb
test
popf
mov
lds
aad
jmp
xchg
inc
xchg
gs
cmp
inc
xchg
cld
inc
out
xlat
jmp
scas
das
xor
lret
in
iret
stos
mov
lds
ljmp
cmp
xchg
jbe
icebp
leave
mov
shll
and
sub
jns
xor
out
or
out
push
in
mov
and
xor
or
jbe
aaa
push
mov
jnp
dec
dec
inc
mov
stos
and
inc
subl
mov
shll
xor
iret
std
and
pop
negl
jmp
sbb
pusha
mov
outsl
push
loope
inc
mov
push
mov
stos
lds
test
fwait
enter
jb
test
pop
jb
inc
cmp
xor
mov
mov
xchg
jnp
cltd
add
pop
mov
mov
in
mov
popf
dec
inc
mov
and
mov
jnp
mov
cs
ljmp
push
jo
jns
xchg
adc
jmp
fidivrs
xchg
and
aaa
xor
inc
push
into
xchg
pop
inc
and
and
push
sbb
jg
sub
xchg
fidivl
stos
cld
add
jne
fwait
subl
test
js
lahf
add
fsubr
lret
sbb
out
rcrb
push
cmp
lret
and
addr16
mov
pop
shl
sbb
lods
add
in
mov
mov
stos
lahf
jbe
sti
out
fisttpl
sar
loop
mov
movsl
dec
xchg
aam
mov
dec
mov
xor
push
push
jb
xlat
fsubs
or
inc
pop
cmp
aaa
aas
stc
add
lahf
add
mov
popf
xor
mov
lock
orb
arpl
jge
adc
je
out
je
cmp
xchg
push
repz
xchg
ljmp
cwtl
popa
mov
jl
mov
mov
and
and
leave
xor
or
mov
sbb
pop
out
dec
lret
iret
push
sub
mov
hlt
lea
xor
pop
xor
or
adc
jb
lcall
fdivp
inc
cmp
mov
sbb
orl
aad
inc
jb
xchg
lret
movsb
es
outsl
xorb
pop
and
add
test
and
les
dec
mov
pop
lods
mov
cmp
jne
ljmp
ljmp
push
lods
cmp
dec
mov
fst
js
cmp
test
dec
lahf
xchg
inc
cmp
daa
push
dec
pop
pop
xor
or
cld
push
sti
and
sub
pop
pop
movsb
scas
call
mov
scas
pop
sub
xchg
rolb
xor
push
inc
jb
adc
push
lret
fs
mov
and
xor
lahf
adc
adc
int
xchg
or
fistl
cmpsl
daa
inc
xor
movsl
frstor
mov
mov
jecxz
dec
aaa
in
inc
lea
aaa
pop
imul
ja
int
adc
xorb
cwtl
sub
mov
or
sarb
icebp
dec
push
lahf
cmp
shl
icebp
jbe
fimull
inc
mov
test
jns
ror
les
mov
pop
pop
jmp
test
mov
je
sbb
adc
inc
cmpl
xor
sub
and
lods
test
ret
cltd
mov
ja
shlb
arpl
xchg
out
jle
aam
dec
add
ljmp
sti
push
or
aad
and
negb
lret
outsb
stos
fucomp
into
sahf
jbe
in
cmc
xchg
cmp
popa
xchg
ficomps
inc
cwtl
and
add
push
fiaddl
adc
mov
lods
fimull
cmp
sbb
in
jl,pt
mov
ret
cmpsl
jl
sahf
and
iret
fwait
push
pusha
cmpb
ss
mov
mov
into
inc
cmp
xchg
and
enter
insl
fldcw
scas
mov
xchg
rolb
iret
jmp
xor
sub
mov
push
bound
dec
dec
pop
add
pop
shrb
jne
pop
sbb
push
jns
push
sub
push
pop
jmp
dec
dec
hlt
xchg
adc
imul
fidivs
loope
jb
aas
mov
inc
push
notl
ds
xor
gs
adc
aam
dec
push
int
es
dec
or
or
jg
xor
shlb
dec
dec
shr
sti
shlb
push
movsb
mov
popa
xchg
mov
push
daa
pop
pop
jge
and
jl
hlt
xor
pop
in
fldt
das
js
outsl
sub
lahf
push
out
sub
fistpll
shll
xchg
mov
pop
push
hlt
jne
jge
stos
sbb
cli
sbb
out
and
jae
rorb
push
aad
popf
shlb
xchg
pop
cmp
dec
inc
shll
xchg
inc
sbb
movl
jae
cmp
jno
andb
dec
test
and
int3
xchg
test
sarl
stos
mov
sbb
add
dec
cltd
and
sahf
adc
or
fcmovnu
sub
sahf
test
and
cwtl
inc
popa
lea
neg
ss
jbe
in
push
sbb
or
data16
xlat
orl
xor
emms
in
mov
fldcw
jmp
xchg
dec
decl
and
fldcw
pop
mov
mov
cmp
cmp
and
xchg
inc
loope
cli
mov
fimull
mov
and
push
xchg
sbb
cs
arpl
dec
and
int
out
sub
out
xchg
loope
jge
dec
rolb
ss
mov
add
test
jo
sub
shlb
fbstp
sahf
cmp
das
ja
test
in
adc
leave
mov
or
mov
sbb
push
hlt
inc
dec
jecxz
and
mov
pop
sbb
fidivs
jp
adc
icebp
leave
push
stos
mov
xchg
mov
gs
std
sub
cmp
jmp
pop
jge
movsb
jns
in
push
xor
loop
jmp
dec
sbb
cltd
xor
lahf
mov
sahf
dec
imul
adc
out
daa
push
and
sbb
push
push
fldl
add
cmp
or
cmp
cmp
fisubrl
and
or
cmpb
cwtl
jae
ljmp
xorl
pop
xchg
inc
das
sub
or
adc
push
mov
push
mov
pop
sbb
sub
sti
xchg
divl
andb
call
sub
test
movsb
push
or
xlat
outsl
and
cwtl
test
leave
mov
mull
ss
mov
jp
out
push
push
push
push
mov
jecxz
aaa
and
test
and
sbb
push
add
mov
jae
mov
rcl
cli
jne
or
xchg
push
xchg
in
cli
pop
js
lahf
int3
jge
movsl
aad
xor
xor
xor
stc
cmp
cli
out
fnstenv
mulps
ret
xchg
dec
clc
pop
bound
fsubrl
popa
fldl
aam
sbb
jmp
out
repz
dec
test
sbb
test
fidivrs
std
into
dec
mov
or
dec
push
mov
or
lods
mov
fldcw
orl
sbb
mov
push
inc
mov
out
mov
xchg
lock
inc
cwtl
xchg
out
sbb
cmp
movsl
pusha
clc
xor
lock
mov
mov
mov
inc
enter
and
fbstp
mov
xchg
lret
adc
add
dec
lcall
pop
adc
fimull
lret
adc
fidivrl
fistps
stos
cld
adc
mov
jg
stc
into
insb
adc
subb
mov
push
dec
dec
adc
stos
pushf
loopne
xchg
lret
push
icebp
mov
mov
movsb
push
pushf
ss
ret
es
jle
xor
pmuludq
daa
outsb
dec
or
insl
ficompl
sbb
rorl
test
inc
aaa
push
adc
sub
sahf
push
or
daa
fnstsw
addr16
adc
jo
inc
xchg
push
rep
scas
sbb
fcomip
push
aad
inc
mov
addr16
mov
test
mov
repnz
cmp
aas
xchg
jae
and
and
iret
push
repz
push
jle
xorl
in
js
mov
shrb
int3
int3
cmp
mov
cmp
shlb
xchg
mov
pop
shll
out
imul
test
popa
jmp
dec
insb
mov
mov
pop
xchg
fsubs
shrb
int
push
add
gs
outsl
call
inc
lods
movsl
inc
ja
out
stos
inc
jns
adc
sub
cmp
outsl
fs
xor
aaa
sub
scas
repz
fsubs
dec
jo
sbb
out
stc
mov
pushf
or
popf
cmc
push
cwtl
fbld
or
aas
in
enter
jmp
cmc
pop
ljmp
shl
jmp
adc
pop
dec
mov
mov
cmp
xor
mov
outsl
test
les
xor
cmp
sarb
js
mov
daa
jne
add
iret
cmp
test
add
jae
cmp
cmc
in
xlat
cmc
std
adc
add
in
es
mov
sbb
inc
arpl
add
dec
das
inc
dec
add
pop
sbb
mov
or
add
jge
stc
jo
sub
rcl
and
bswap
and
inc
cltd
and
scas
xor
std
ret
and
jp
xor
jp
jg
imul
xchg
mov
shl
fistl
push
adc
jle
sub
stos
pop
mov
je
inc
aad
cmp
mov
adc
cmp
pop
sbb
in
sahf
test
lock
mov
dec
std
out
aas
or
jl
mov
mov
std
cli
popf
testb
scas
push
xchg
repnz
mov
mov
shlb
push
rolb
xor
ds
lds
push
icebp
xor
stos
mov
aad
test
mov
aas
and
dec
mov
adc
in
or
in
es
sbb
lea
jecxz
data16
pop
inc
outsl
mov
into
dec
inc
inc
or
rorb
je
push
call
ret
push
inc
ret
adc
lret
test
adcl
cmp
adc
or
cmp
pop
mov
sub
inc
mov
push
lods
sbb
lods
stc
rorl
mov
shll
ja
mov
inc
cmp
lock
and
xchg
cmp
mov
jae
imul
cmc
scas
sub
inc
dec
call
lds
xchg
stos
jo
fcoml
decl
or
and
rorb
je,pn
test
cli
cmp
enter
jns
inc
push
push
xchg
dec
and
jg
pop
mov
adc
test
inc
cltd
movsb
fs
aam
mov
pop
lods
shll
cmc
jg
sub
fcos
lods
jnp
push
cltd
ss
lods
lock
or
rcrb
pop
cmpsb
push
sahf
dec
inc
ja
lret
test
cmp
or
mov
rcll
hlt
add
push
push
ja
outsb
jns
arpl
cwtl
and
popf
ds
dec
xchg
push
repnz
or
imul
movsl
push
loopne
sub
imul
jb
hlt
xor
cltd
add
shr
sbb
leave
nop
pop
idiv
addr16
outsl
fwait
out
sbb
pusha
mulb
dec
fwait
call
mov
lret
fbld
shrb
sub
lods
sbb
ss
sbb
shrl
pop
notl
aad
adc
fistps
in
icebp
sarl
fwait
lea
movsl
clc
xchg
pushf
push
dec
je
dec
jg
adc
xorl
xor
notl
gs
pop
add
pop
mov
jle
lahf
testl
aam
cli
mov
ret
cmp
dec
in
inc
in
adc
ss
jg
mov
in
mov
mov
cld
push
xchg
loop
mov
push
xor
adc
in
ljmp
jnp
push
pop
cltd
stos
ret
scas
inc
popl
xchg
inc
push
mov
xchg
pop
xlat
jmp
aaa
push
test
or
iret
sub
sbb
push
fsubrl
test
aad
cld
mov
test
mov
cmp
xchg
mov
cmp
into
js
push
xchg
pop
mov
sub
xchg
ljmp
inc
test
shrb
lea
dec
and
fldcw
jecxz
repz
sbb
out
pop
push
stos
jo
and
and
les
adc
push
mov
pop
ds
xor
pop
jno
cmp
out
pop
push
push
mov
popf
inc
push
movl
std
lahf
test
jle
inc
sub
nop
shlb
or
push
fisttps
pop
or
sbb
shlb
rcll
or
push
cli
test
jnp
mov
pop
push
ret
or
cs
push
xor
mov
sbb
stos
test
sbb
bound
arpl
ljmp
ljmp
ret
insl
outsb
call
lods
fs
cmp
cmp
fidivs
mov
adc
jbe
js
adc
jbe
insl
arpl
scas
cmp
jp
and
sub
pop
cmp
dec
and
dec
xor
test
mov
loop
sbb
or
ss
pop
ss
xchg
push
mov
dec
and
xchg
div
mov
cmp
gs
jmp
loopne
jnp
pusha
dec
outsb
or
mov
lods
add
arpl
push
lcall
mov
test
xchg
sub
jmp
mov
mov
ja
mov
inc
inc
mov
mov
nop
and
popf
rorb
test
rcrb
clc
insl
fwait
xlat
adc
fstpt
fcompl
pushl
shll
mov
dec
fxch
fwait
ds
pop
pop
in
xlat
nop
mov
test
xor
adc
mov
dec
out
inc
leave
into
jle
cltd
mov
push
mov
and
jl
pop
xor
sub
lods
pop
add
mov
jmp
scas
adc
shlb
test
xor
test
jmp
and
mov
std
inc
loope
jnp
or
sti
ja
push
sti
fstps
adcl
mov
insb
mov
clc
idiv
insb
in
sub
ljmp
mov
and
adc
arpl
pushf
aas
adc
jbe
je
fidivrs
aam
push
jb
inc
sbb
pop
jecxz
adc
dec
add
pop
xor
das
push
lods
pop
cmp
mov
sub
pop
fsubl
sbb
pop
xchg
dec
fsubrp
push
in
ss
rolb
lahf
imul
inc
jo
fs
cmpsb
fimuls
jmp
push
xlat
popf
leave
mov
jge
es
movsb
test
jne
push
stos
sub
pop
loopne
and
jg
stos
rolb
push
sbb
xlat
inc
xchg
filds
jne
dec
in
cmp
xchg
sbb
jo
ret
push
inc
call
imul
xor
adc
fsubrs
xlat
fdivs
cmc
je
mov
push
xor
mov
loop
mov
and
mov
push
ss
mov
divb
test
leave
add
jmp
pushw
push
pop
sarl
adc
mov
mov
xchg
push
mov
sbb
movsl
pop
dec
mov
test
dec
loop
dec
add
jo
shll
mov
daa
sbb
cs
aas
outsl
xchg
in
xchg
mov
daa
in
pop
les
lock
outsb
cmp
jecxz
cltd
mov
xor
push
shlb
jl
add
pop
int
xor
test
jne
pop
adc
pop
lea
sbb
imul
test
fdivrs
sbb
jle
mov
cmp
xor
cmpsb
aaa
fimull
jmp
jecxz
push
stc
mov
pushl
test
in
xchg
fnsave
inc
push
push
sub
jg
in
das
imul
cltd
jmp
dec
cwtl
in
xor
bound
jmp
dec
aad
add
mov
mov
jge
xor
or
sahf
js
bnd
adc
and
add
enter
inc
mulb
mov
lret
jle
sbb
jp
mov
test
stos
sub
aam
loope
dec
int
icebp
inc
xor
adc
ficompl
jno
adc
leave
loopne
in
dec
push
stc
loope
adc
ljmp
and
jmp
icebp
lret
in
mov
and
or
lret
xor
jno
scas
ret
adc
mov
inc
or
nop
push
mov
cwtl
push
lret
ja
ret
out
pop
jbe
push
fdivrs
xor
pop
lds
xchg
push
pop
adc
add
decl
movb
notb
test
or
xor
sub
insl
push
mov
out
ja
enter
pop
push
je
in
lret
adc
pop
mov
push
sarb
movb
lock
adc
addr16
inc
jge
sub
jns
dec
pop
mov
test
insb
std
push
cs
fwait
sarl
pushw
or
xor
mov
les
out
mov
cs
into
addr16
addr16
icebp
ds
int3
sahf
lahf
add
mov
cltd
imul
js
xchg
in
or
imul
aas
outsl
cs
hlt
jns
inc
shll
ss
ss
dec
jecxz
add
or
push
bound
and
xor
in
and
sub
cltd
ss
addr16
int3
mov
fisubs
add
mov
cmc
ret
in
ljmp
ljmp
mov
scas
mov
or
jbe
fidivs
mov
popa
wbinvd
mov
and
leave
xchg
pop
dec
imul
shlb
loope
hlt
pop
clc
test
and
jle
mov
sar
dec
leave
stos
xchg
or
or
adc
ds
pop
mov
test
xchg
mov
das
cwtl
add
loope
add
add
outsb
dec
aaa
pop
mov
xor
xor
jb
hlt
xchg
pop
push
fidivrs
push
mov
push
aad
popa
and
bound
push
mov
mov
movsl
jmp
or
jo
pop
mov
arpl
cmp
lahf
dec
out
in
js
fabs
rorl
scas
ret
fs
xor
mov
test
and
divb
pop
mov
add
ja
xchg
rolb
inc
and
jmp
xchg
push
push
pusha
mov
fwait
add
hlt
stos
lcall
pop
lret
mov
fwait
inc
mov
jecxz
jae
fs
mov
and
rorl
scas
xchg
mov
inc
js
dec
push
movsl
and
bound
jle
outsb
cmp
leave
mov
xchg
sbb
loope
insb
mov
dec
pop
loop
dec
and
xchg
scas
pop
clc
rep
pop
xor
popa
xchg
add
add
jae
xchg
dec
in
js
add
sbb
shl
push
loop
in
scas
push
loop
cltd
sub
imul
add
jb
lcall
sarb
cltd
and
fimuls
inc
bound
fdivrs
jb
and
mov
andnps
mov
sti
sub
movsl
adc
mov
jo
mov
adcl
dec
cmc
test
aam
ljmp
mov
hlt
jae
pop
outsl
lea
xor
pop
adc
fwait
cld
incl
sub
adc
inc
daa
ret
in
lcall
jle
adcl
outsl
jmp
jb
mov
sub
and
daa
lds
sahf
ret
pop
jbe
jbe
lret
sub
sbb
sub
lahf
mov
jecxz
mov
cmp
repnz
lret
rorb
push
pop
push
int3
cmp
jecxz
jae
mov
cwtl
push
push
fwait
jnp
insl
add
lahf
les
sahf
mov
mov
push
mov
xchg
imul
pop
daa
dec
mov
pop
div
add
enter
pushf
mov
adc
test
add
addr16
mov
cmp
mov
adc
clc
inc
fsts
xor
sbb
aam
mov
xor
in
xor
push
push
push
jns
mov
bound
fwait
mov
fldcw
repnz
scas
dec
sbbl
aad
jmp
xchg
ret
adc
popa
and
push
push
mov
xor
inc
push
mov
addr16
rolb
jb
stc
test
pop
xor
jae
mov
fdivl
rcrb
cmp
mov
xchg
clc
jbe
mov
mov
hlt
mov
clc
pusha
xor
cmc
dec
jo
xor
jp
add
leave
jp
gs
addr16
lods
lret
lcall
stc
or
dec
sahf
mov
sarb
xchg
adcb
lds
sub
lahf
mov
stc
dec
push
repz
fs
jg
adc
add
dec
adc
pop
out
xchg
pop
lcall
xor
out
int3
mov
inc
or
fldcw
mov
cmc
lret
sub
call
cli
sbb
hlt
ret
cmp
xlat
dec
mov
ficompl
pop
xor
rol
shll
lcall
xchg
nop
mov
repz
mov
mov
fistpl
xchg
mov
push
jge
push
leave
or
lds
dec
inc
test
aad
jbe
cmp
pop
sbb
hlt
jnp
mov
iret
das
inc
adc
dec
imul
jbe
pusha
iret
aas
inc
fs
mov
popa
outsb
jne
sub
test
or
jb
cmp
inc
out
cld
fiaddl
gs
test
jecxz
xor
mov
lock
jb
rcl
fwait
mov
inc
xor
push
xor
lods
out
dec
adc
mov
lods
sbb
adc
filds
mov
testl
movsb
cld
test
loope
mov
in
sbb
stos
dec
or
pop
cmp
mov
jg
or
roll
cs
cmpsb
push
sub
mov
jg
mov
cmc
sbb
pop
or
mov
sbb
xlat
imul
hlt
add
push
cmpsl
xlat
cmpsl
test
cmc
cmp
stc
mov
and
mov
sub
jnp
mulb
sub
mov
dec
rcrl
adc
inc
add
jae
pushf
mov
pop
in
push
in
inc
je
push
std
int
xor
enter
adc
add
hlt
mov
movsb
idivl
hlt
test
jg
sarb
insl
jb
dec
inc
gs
jnp
jge
mov
loope
push
dec
lcall
pop
mov
xor
clc
xchg
inc
iret
dec
out
loopne
das
dec
jle
mov
jp
les
dec
pop
push
cli
lods
stc
les
push
mov
fbstp
mov
inc
xchg
mov
in
fdivs
add
or
jo
or
fdivrs
dec
and
loope
or
sbb
subb
stos
ljmp
test
pop
ljmp
outsl
nop
sub
adc
and
icebp
movsl
jle
movsl
loope
dec
jecxz
arpl
sbb
adc
rcrl
pop
out
mov
imul
lret
cli
pop
push
mov
sarb
inc
fwait
rcrl
lret
loope
cmp
ret
movsl
lods
pushf
lcall
mov
mov
adc
cvtps2pd
fadds
inc
xor
cmovnp
or
mov
mov
jge
add
stos
add
stos
test
mov
pop
insl
sbb
faddp
cmpsb
dec
inc
jle
mov
and
push
mov
repnz
mov
ljmp
fnstsw
rcll
jae
jecxz
stc
cmp
out
jp
shrl
daa
sbb
push
ljmp
inc
rdpmc
rcrw
lods
fsts
mov
mov
push
int3
sbb
dec
rcll
rcrb
js
push
aas
cltd
mov
cmp
inc
push
inc
or
sub
add
sub
cli
lahf
jne
cmp
aam
sbb
cmp
fwait
clc
dec
add
xchg
sbb
cmovge
aad
jge
mov
hlt
pop
aaa
pop
addr16
add
or
inc
pusha
or
mov
mov
mov
mov
leave
mov
inc
and
fwait
movzwl
retw
arpl
xchg
ror
sub
sbb
jo
rclb
std
mov
xchg
jecxz
loop
int
cmp
mov
bound
call
cmp
out
push
fldl
sub
out
outsl
mov
fsts
movsl
fisubrs
jg
lds
fdivrp
gs
fisttps
and
mov
std
push
and
shll
es
pushfw
lods
or
xor
ds
push
ljmp
pop
clc
in
sbb
push
stc
aad
xor
sub
xchg
or
int
push
jle
mov
xchg
dec
in
arpl
add
adc
or
popa
push
cmp
rorl
or
aas
pop
rolb
pop
loope
jns
aam
pop
mov
outsl
mov
xchg
mov
cmp
test
dec
sbb
inc
cli
xchg
out
push
lds
aas
mov
pop
cs
mov
fs
adc
add
pcmpeqw
pop
push
aad
dec
aad
cmp
movsb
xor
das
in
data16
and
cmp
mov
and
xor
movsl
cld
cmp
mov
pop
aas
jmp
lret
xorl
add
xchg
add
sub
mov
pushf
push
push
mov
jmp
sub
in
adc
movsb
fistpl
fnsave
je
incb
popa
or
pop
fbstp
sti
aas
mov
xor
cld
aam
sub
lret
mov
fnstenv
lods
mov
ja
pop
out
sbb
cmpsb
push
testl
lea
outsl
clc
out
xor
std
test
mov
fldt
mov
inc
mov
mov
and
xor
das
mov
jno
imul
int
jae
stos
mov
roll
imul
xchg
shll
pusha
pop
jae
ds
dec
inc
push
mov
mov
jle
subb
orb
out
xor
popa
push
mov
call
lcall
std
xlat
xchg
fidivrs
jl,pn
push
xor
inc
adc
mov
jns
xchg
orl
and
insl
in
sub
mov
movsb
loop
xlat
rcrl
mov
pop
lods
mov
ss
xchg
cmovnp
push
fs
pop
mov
lds
jns
adc
cmpsb
jb
adc
hlt
mov
cmp
inc
push
push
or
cmp
sub
adc
push
sbb
gs
rolb
loope
mov
add
cmp
jmp
add
loope
ljmp
push
adc
pushf
clc
daa
push
push
aas
pop
xchg
inc
cmp
test
adc
add
mov
imul
aam
decb
mov
and
out
jnp
jl
or
and
iret
loope
push
xchg
adc
nop
call
xchg
jg
pushf
out
gs
and
out
enter
mov
push
lea
mov
xchg
or
stos
in
nop
adc
mov
cmpsb
mov
cltd
call
rorb
insb
push
sub
mov
push
cmpsl
pushf
mov
mov
out
push
fs
lcall
mov
or
dec
mov
dec
pop
xor
gs
sbb
adc
js
xlat
lcall
inc
ds
loop
adc
jae
jp
jmp
outsb
push
and
push
inc
icebp
data16
push
sti
jnp
testb
fcomip
mov
cmp
or
std
jne
add
push
mov
es
dec
nop
scas
inc
in
icebp
sub
sbb
push
pop
stos
jo
out
mov
mov
outsl
lahf
and
test
push
xchg
cli
mov
push
ret
xor
pop
mov
mov
xchg
out
mul
sub
mov
fistps
xchg
push
fsub
into
dec
dec
cld
fwait
xlat
iret
out
test
jp
jo
icebp
pop
cmp
adc
xchg
add
lds
add
push
adc
stos
xchg
bnd
pop
out
push
push
sub
movsb
xlat
loopne
stc
push
xchg
out
xor
xor
push
insb
pop
jbe
adc
mov
inc
cmpsb
int3
xchg
lock
sub
mov
jmp
inc
cmp
jl
jae
enter
cli
pop
cmpsl
cwtl
jns
dec
lret
in
add
sbb
mov
movsl
pop
or
mov
cmp
addr16
dec
gs
out
cli
mov
mov
ret
scas
jae
fdivs
and
pop
pusha
enter
jecxz
data16
mov
incb
mov
aam
mov
push
xor
addr16
and
sub
xor
adc
jle
ss
std
bound
ja
cmp
and
jle
leave
sub
and
std
hlt
ret
aad
cli
std
shrb
pop
rolb
adc
addr16
xor
or
sub
cli
mov
iret
push
mov
repnz
dec
dec
push
jg
mov
xor
dec
loope
ret
and
adc
adc
cs
out
cmp
mov
or
push
lahf
bound
add
pop
enter
lds
sub
xlat
pop
adc
mov
jle
movsl
push
aad
stos
cli
pop
jmp
jecxz
lret
cmp
inc
sub
inc
pop
iret
cs
push
hlt
sar
fnsave
pop
mov
dec
push
cs
xor
mov
mov
mov
cmp
hlt
pop
in
enter
cmpsb
sub
pop
lock
xlat
mov
cmpsl
add
fs
rorb
xchg
test
sub
lea
xchg
in
mov
or
dec
xor
rorb
push
mov
dec
or
mov
in
leave
dec
ret
into
cmc
mov
lds
adc
test
xlat
mov
pop
inc
movsl
ljmp
filds
ds
popf
fmull
dec
xchg
insl
sub
cmpsl
inc
stos
imul
and
and
imul
sub
cmc
sti
push
ja
mov
out
and
jecxz
out
mov
mov
sub
scas
sub
push
int3
inc
jg
cmp
xor
insb
dec
sub
stos
cwtl
cwtl
pushf
pushf
add
je
in
jg
test
jle
pop
testb
mov
jg
sbb
pop
or
fbstp
mov
push
insb
inc
iret
repz
xchg
or
aas
adc
xor
out
xchg
aas
mov
xor
jne
dec
rcrb
das
stos
sub
ret
aad
lds
pop
cmp
fidivl
arpl
mov
sarb
sub
hlt
lods
inc
push
in
jp
test
lret
inc
in
sub
ss
test
push
or
scas
ret
sbb
call
push
mov
mov
mov
lods
int
call
out
lds
sub
lcall
sbb
stos
jl
cmpsl
dec
push
sub
jg
pushf
cmpsl
insl
test
jecxz
je
mull
in
insl
daa
dec
imul
xor
repnz
sti
xchg
sbb
enter
push
xor
pop
pop
and
ret
movsb
scas
and
mov
popa
mov
das
shr
add
inc
or
in
mov
popa
mov
out
inc
jle
dec
push
inc
adc
test
cmp
inc
icebp
mov
rorb
cld
ljmp
xchg
rorl
insb
or
pushl
adc
or
scas
jne
inc
mov
lods
or
dec
addr16
jbe
sbb
and
std
ljmp
or
dec
push
add
les
mov
inc
push
xchg
xorb
in
mov
pusha
pop
outsb
pop
stc
rol
inc
push
test
gs
rclb
xlat
in
frstpm(287
dec
jecxz
ds
ljmp
cli
inc
outsl
loop
clc
mov
mov
push
mov
jmp
sub
enter
idivb
cmpsl
xlat
cmp
or
pop
sub
fs
mov
xchg
pop
repnz
inc
push
push
mov
xchg
mov
jno
out
stos
outsl
or
mov
addb
dec
mov
cmp
xor
push
int3
loopne
shlb
or
and
pop
push
les
mov
xchg
mov
rcr
ret
xor
and
inc
ret
jno
arpl
pop
lcall
loop
in
cmp
push
xor
push
push
pop
sub
pop
outsb
insl
mov
loop
and
fucomi
jno
sub
iret
lds
cs
push
sbb
out
pusha
mov
cld
shl
lahf
dec
sahf
add
movsb
sub
test
mov
mov
and
stos
pop
and
out
pushf
cltd
cli
mov
and
stos
and
pop
enter
out
jae
fnclex
mov
xor
addr16
insl
stc
cld
loop
es
jnp
cmp
dec
addl
aas
xchg
pop
inc
and
das
inc
mov
xchg
out
dec
int
jle
mov
filds
mov
cld
pushf
or
xor
pop
lahf
dec
rcrl
jmp
cld
rclb
leave
adc
iret
cmp
push
fsubrl
sahf
int3
loop
ret
sbb
sub
outsl
ljmp
icebp
inc
dec
pop
sbb
sbb
xor
lock
fisttpl
add
in
cmp
cmp
mov
mov
in
inc
push
mov
mov
mov
add
cltd
sbb
adc
jge
push
loopne
sub
adc
mov
and
aam
inc
out
ja
outsl
jno
xlat
imul
out
mov
mov
and
xor
fwait
cmc
ret
data16
fs
xlat
repz
scas
xor
addl
pusha
mov
subb
mov
and
rcl
sbb
mov
sbb
pop
pop
ret
xchg
shrb
inc
mov
adc
xor
fmulp
and
pop
and
push
imul
jb
scas
rcr
fstps
pop
dec
imul
iret
icebp
fsts
pushf
lods
test
mov
mov
clc
xor
mov
xchg
aas
pop
jmp
test
push
or
adc
pop
pop
insb
out
jne
xchg
lret
pop
out
add
mov
jmp
pusha
add
fbstp
sub
mov
arpl
mov
icebp
mov
leave
test
ds
or
dec
mov
mov
lcall
mov
push
adc
dec
cmp
pop
inc
or
and
jl
xchg
mov
adc
aas
fwait
mov
push
imul
ds
add
or
sbb
imul
outsl
shlb
dec
fucom
fmuls
cmc
cmp
mov
jp
xchg
sub
outsl
cwtl
in
dec
mov
subl
pushfw
xchg
add
push
sub
mov
jne
mov
mov
mov
int
cmp
mov
ljmp
cwtl
stos
int
dec
and
out
faddl
fcoms
imul
scas
pusha
pop
lret
jb
pop
lea
in
sub
mov
icebp
fnsave
sbb
inc
ret
lea
fdivrl
dec
xchg
test
fnstsw
bound
stos
jecxz
loop
adc
jp
repz
sar
pop
adc
and
cmpsb
cmc
jbe
add
jecxz
jg,pn
data16
pop
out
adc
stos
ss
bound
das
and
cmp
mov
in
push
jae
jmp
test
jg
in
enter
adc
adc
lret
lret
and
push
or
scas
pop
clc
mov
lods
in
ret
sbb
push
arpl
pop
lock
scas
jl
inc
adc
inc
cmpl
push
scas
push
xchg
xchg
push
ss
div
mov
inc
fwait
push
pop
and
cmp
xor
cmp
sbb
lods
and
cmp
jnp
xor
dec
cmp
into
test
cli
pop
lds
push
mov
mov
sbb
insl
mov
mov
lahf
in
pop
sub
ret
dec
sarb
nop
fmull
lret
and
not
fcmovne
mov
rcll
xchg
int
jbe
cmp
gs
push
mov
fidivrs
test
shl
pop
adc
nop
stc
flds
aaa
jnp
movsb
inc
and
xchg
xchg
movsl
fadd
xchg
ljmp
cmp
nop
cli
push
xchg
test
les
mov
fcomps
xor
fisubl
jb
lret
and
xor
test
xlat
xchg
rcrb
add
aam
rorl
inc
and
icebp
sbb
push
gs
les
ret
movsl
ret
mov
and
out
inc
sbb
push
sub
nop
add
pop
cmp
int
cmp
adc
jae
dec
outsb
cmpsl
call
push
test
adc
mov
fcompl
mov
mov
mov
scas
pop
ss
gs
or
dec
aaa
inc
push
sbbb
and
sti
pop
je
jns
leave
scas
push
scas
addr16
and
cmpsb
mov
repnz
inc
cmc
xchg
out
rclb
pop
jns
jbe
push
and
ljmp
dec
imul
jb
notb
shr
push
call
inc
insb
or
sarl
gs
icebp
in
sbb
inc
push
ret
push
cmpsb
or
push
out
push
xor
sub
inc
scas
sarb
aam
gs
popa
jnp
pusha
mov
add
push
mov
fimuls
lds
inc
sbb
and
pop
fisubrs
sahf
ja
bound
jle
inc
sti
pop
ja
fwait
adc
ret
std
aam
popf
cli
lds
mov
lcall
insb
cmp
rol
pop
adc
lret
sbb
dec
pop
adc
int3
mov
cmpsb
mov
sbb
inc
jno
xchg
jecxz
aad
sub
mov
jmp
popf
daa
add
adc
test
pop
mov
sbb
jg
or
aaa
es
ret
mov
jb
pushf
jno
push
and
jo
out
xor
fs
test
xchg
scas
and
js
fldt
mov
pop
cmpsb
dec
mov
add
loope
mov
ds
in
imul
pop
lret
movsl
shlb
adc
into
out
push
mov
cwtl
mov
clc
and
pop
aaa
dec
xor
hlt
aam
jns
or
pop
pop
jecxz
cmpsb
push
mov
ss
repz
addr16
pop
popa
cmp
test
xchg
mov
xchg
imul
movsl
pop
sub
pusha
daa
scas
inc
stos
dec
dec
push
loop
fisttpl
sub
add
xchg
cmpsl
nop
xchg
cmp
aas
shrl
mov
adc
enter
or
sub
mov
xchg
les
mov
ljmp
psubsb
test
mov
xchg
mov
mov
mov
sub
mov
push
cmp
sub
mov
adc
xor
je
adc
xchg
mov
mov
insb
mov
std
sbb
xchg
cld
or
fsubl
push
movsl
popa
cmp
fisttps
lahf
arpl
mov
mov
sti
xchg
in
pop
mov
pusha
ret
mov
xchg
cwtl
repnz
ret
sub
inc
iret
xor
call
inc
or
xchg
movsl
pop
push
lcall
inc
lock
lret
dec
inc
pusha
lcall
push
jl
aam
shll
test
ret
push
jecxz
pushf
prefetcht0
pop
jbe
dec
adc
cmp
push
ret
xor
out
test
inc
loop
shlb
fwait
mov
ret
jl
aad
sbb
sahf
mov
adc
mov
adc
xchg
or
pop
das
dec
negl
mov
jnp
sub
mov
cli
cli
pop
jbe
pminsw
sahf
lahf
jbe
adc
add
outsl
jp
sbb
js
cmpsb
cltd
repz
scas
mov
scas
sub
mov
outsb
add
pop
insb
into
fucomip
pop
xor
inc
pop
pop
ficompl
and
andl
int3
adc
xor
push
in
jle
sbb
int3
cmc
xlat
inc
aas
inc
insl
mov
and
call
adc
out
mov
mov
mov
test
movsb
mov
or
scas
cs
push
jmp
inc
or
jae
mov
adc
ret
imul
xchg
insb
in
std
push
push
jl
mov
mov
cmp
dec
mov
dec
cmp
mov
push
sti
pop
aad
sub
dec
aas
ja
int3
pusha
sbbl
push
cwtl
jl
mov
in
nop
jp
leave
jbe
or
or
lcall
or
leave
aas
lds
jnp
stos
mov
mov
cmpsb
dec
and
ret
dec
test
push
leave
insb
add
xor
dec
cmp
add
gs
ss
xchg
sub
cmp
xor
cwtl
sub
pop
js
or
fisubl
mov
dec
xorl
nop
mov
outsb
mov
add
imul
dec
pop
lods
testl
js
xor
pop
pop
mov
test
cmp
mov
add
insl
mov
inc
sub
popa
jbe
mov
lcall
pop
cltd
test
inc
add
mov
cmpsb
dec
mov
xchg
insl
shll
test
scas
mov
xchg
shl
sbb
mov
shrb
xchg
fwait
xchg
ja
loop
inc
shrb
jle
in
fists
xchg
and
cmp
push
mov
pushf
pushf
mov
cmp
je
jns
cmc
xchg
add
int3
fs
insb
mov
sbb
stos
mov
jns
xchg
jbe
sahf
mov
xchg
and
mov
jl
cmc
push
dec
xor
sub
insb
xor
pop
push
mov
int3
jne
outsl
adc
mov
push
sbb
sbb
inc
mov
pop
cli
test
test
mov
fcmovbe
xchg
lahf
mov
and
fwait
into
mov
je
push
dec
inc
mov
pop
push
sahf
test
arpl
cwtl
and
sbb
std
mov
lret
pop
xlat
mov
das
inc
shlb
cmp
aas
mov
je
ss
in
lock
rol
icebp
jle
into
lahf
dec
and
daa
xchg
inc
js
jle
xlat
mov
push
cwtl
mov
inc
push
cwtl
sbbl
inc
out
sub
test
sub
leave
aad
aad
xor
clc
jae
cwtl
outsb
xchg
imul
pop
cmpsb
or
sti
imul
sti
mov
or
subb
cmp
stc
mov
icebp
stos
inc
xchg
addr16
shlb
and
mul
dec
cmc
jmp
pop
push
pop
sub
mov
ljmp
lcall
lret
push
xchg
jo,pt
or
movsb
aad
stos
add
and
imul
imulb
pop
jb
into
es
lds
fldt
stos
imulb
sbb
xchg
add
dec
mov
pop
ret
cmp
rcl
mov
fnstenv
ret
popf
out
mov
popf
adc
dec
lods
add
in
stos
jmp
mov
ja
jge
shrb
or
adc
mov
das
sbb
xchg
ror
clc
out
adc
add
in
mov
mov
cs
outsb
paddsw
and
ret
dec
mov
int
out
rolb
lret
bound
push
sbb
lcall
dec
cs
gs
in
in
negl
ss
pop
in
loope
xor
push
push
xchg
scas
gs
xor
cwtl
pop
push
sarb
sbb
call
or
adc
imul
cmp
xchg
ljmp
sbb
cmp
int3
or
test
and
scas
sbb
sbb
not
icebp
sub
addb
dec
push
movsb
push
xor
data16
fidivrl
rcrl
xorl
push
cmc
sub
xchg
popa
pop
jnp
inc
insb
leave
or
mov
mov
inc
dec
xchg
fistl
mov
xchg
jo
xor
xor
dec
fcoms
jo
xchg
add
subb
xchg
and
cmp
inc
cmp
pop
add
lods
inc
jne
testl
push
add
cli
and
pusha
sbb
pop
and
out
movb
pop
push
movsb
nop
xor
and
jbe
xchg
sbb
ret
fwait
lea
aad
aas
pusha
loop
inc
in
mov
mov
lret
pop
int3
push
fwait
in
rcr
and
mov
xchg
mov
cmpsb
shrb
xchg
lahf
and
js
and
add
push
jne
repz
cmp
pusha
imul
dec
pop
fadd
jb
mov
fidivrs
dec
clc
rorl
loop
dec
xchg
ret
cmc
add
fisubs
jns
jg
dec
je
fimuls
loopne
cmp
clc
repz
jns
xchg
push
lea
adcb
in
adc
pop
aas
ret
jbe
jl
or
lret
shrb
mov
pop
pop
pop
xor
sub
call
lea
and
subl
adc
stos
daa
iret
xchg
outsb
fucomi
mov
imull
into
inc
jp
aam
aaa
push
insb
jp
into
nop
xor
std
mov
sbb
vpcmpgtd
and
ja
or
adcb
push
xor
push
call
scas
sub
cltd
sub
lea
scas
xor
push
inc
lret
jmp
mov
xchg
aaa
loopne
sbb
sbb
dec
and
jno
push
mov
mov
test
mov
imul
dec
xchg
xor
or
sbbl
ret
jns
mov
lahf
pop
sbb
push
fmuls
lds
leave
xlat
sbb
sbb
mov
sbb
aam
push
mov
push
add
sbb
xchg
fincstp
loope
jl
lods
push
rcrl
andb
sub
lds
adcl
mov
jb
cmp
cmpsb
xchg
cmp
jl
or
hlt
mov
jg
jl
out
and
mov
lea
aam
in
ja
cmpsb
lods
arpl
ljmp
in
daa
jo
pop
dec
and
dec
push
sbb
es
xchg
iret
iret
jl
jns
mov
xor
sub
or
ucomiss
push
lret
xchg
push
push
mov
xchg
pusha
repz
pop
ss
or
andl
movsb
je
rcr
xor
inc
sti
int
pop
jns
jecxz
push
ja
test
loopne
sti
dec
int3
shlb
and
inc
popf
mov
sahf
push
or
int
xchg
arpl
mov
insl
les
and
call
cmpsb
pop
jns
cltd
push
sbb
add
dec
in
aas
xchg
ret
pop
movsb
adc
movsl
mov
and
inc
test
mov
mov
mov
movsb
sub
xchg
push
daa
jne
mov
xor
xchg
pop
xor
sub
je
lcall
out
ljmp
add
inc
push
sbb
sbb
negb
aas
arpl
out
sbb
loopne
aam
ja
adc
in
push
test
xor
arpl
push
push
fs
xchg
mov
out
mov
cmp
scas
cmpsb
mov
cmp
add
push
push
fiaddl
xchg
cli
lcall
sti
push
movsl
repnz
std
or
loope
adc
in
push
lahf
add
enter
icebp
add
add
adc
sub
xchg
stc
dec
push
add
xchg
xor
stos
out
add
adc
add
jle
cli
cmp
aam
cmp
push
pop
or
sbb
or
jle
cmp
arpl
mov
or
dec
xor
dec
and
pop
lods
push
scas
int3
dec
aad
sub
jno
sub
pop
or
je
mov
in
stc
and
push
adc
hlt
cld
jns
mov
shll
test
add
add
fisubl
push
aad
adc
adc
and
outsb
add
adc
cs
addr16
les
call
hlt
cmp
adc
mov
jle
pop
xor
orb
push
out
xor
repz
cmpsb
push
fbld
push
shll
jo
ss
ja
shrb
mov
inc
mov
insb
loop
movsb
clc
jp
cmp
push
add
lock
cmp
int
ds
ds
bound
lods
les
scas
leave
fcoms
push
sarb
mov
sub
ficompl
push
adc
push
icebp
xchg
xor
ret
sub
jne
mov
leave
cli
stos
pop
scas
dec
fstpt
sub
mov
outsl
popa
sub
pop
sub
les
cmpsb
xor
dec
and
cmp
lock
xor
dec
adc
push
or
cld
xchg
sbb
sub
lock
xchg
nop
icebp
mov
add
stos
mov
movsb
pop
adcb
arpl
arpl
enter
and
sbb
add
xor
and
push
jne
outsb
push
insb
xlat
popa
loope
lcall
inc
rolb
xorl
push
fwait
xchg
int3
sahf
mov
das
cmp
or
out
call
les
xchg
sub
fdivl
in
inc
push
fcmovb
lret
ret
push
inc
js
adc
pop
xchg
adc
or
dec
mov
std
xchg
inc
inc
aaa
jae
and
pop
jns
mov
dec
fsts
pop
stos
cmp
push
push
jbe
loop
scas
lahf
std
or
inc
push
aam
stc
inc
aaa
mov
xchg
push
movsl
xor
stos
icebp
stc
fistpll
fwait
jecxz
push
lods
push
adc
xchg
xlat
xchg
inc
mov
fimull
mov
inc
push
imul
sti
fldcw
les
jnp
pop
sub
test
adcb
or
int3
popl
aad
adc
sbb
cmp
push
ret
ret
dec
push
fnstcw
lcall
sbb
sbb
in
mov
jle
dec
mov
push
into
jne
cmp
adc
nop
repz
movsb
or
add
test
mov
inc
or
aas
xor
dec
repnz
sahf
cmp
or
mov
call
push
ret
xchg
pop
and
mov
adc
push
rclb
out
inc
das
outsb
mov
or
lahf
xchg
xchg
sub
lcall
pop
dec
test
mov
jmp
adc
xor
lods
fs
stos
call
sub
xchg
inc
xor
out
inc
sub
lcall
sub
mov
mov
cld
into
test
ret
rolb
pop
imul
into
sbb
dec
cmp
mov
mov
pushf
fld
mov
inc
jmp
or
xor
inc
and
and
ret
and
push
jae
imul
pop
add
adc
out
mov
fcmovne
icebp
js
ffreep
push
bound
pop
jns
loope
mov
lock
hlt
jg
in
sub
test
jnp
into
shr
sbb
movsl
sbb
sahf
idivb
dec
test
lds
inc
inc
or
jecxz
jg
rcll
cld
push
mov
sbb
sub
sub
jns
add
mov
push
add
push
or
push
in
dec
add
mov
in
mov
scas
add
ss
lds
jmp
addr16
mov
fidivs
sbb
xchg
loopne
pop
and
push
loope
or
jbe
sub
inc
mov
out
aaa
xlat
pop
lret
jl
std
or
jp
inc
inc
stc
sbbb
sbbb
xchg
inc
repnz
jmp
xchg
stc
xor
adc
fs
adc
insb
cld
pop
sub
pop
mov
leave
iret
push
loopne
dec
jns
sbb
in
xchg
insb
adc
hlt
daa
ret
xor
enter
pop
insl
xor
mov
pop
into
xchg
es
pop
loope
popa
jecxz
pop
xchg
cmpb
nop
icebp
or
nop
add
jb
outsb
ret
testl
sbb
adc
mov
dec
sub
pusha
sub
dec
rcl
mov
mov
shll
sub
jp
cmpsl
shll
movsl
xchg
adc
cmp
xor
out
jno
shrd
leave
aam
fcomps
pop
andl
cmp
and
jmp
orl
ret
jp
jecxz
out
mull
mov
pop
jb
jne
test
push
cwtl
ret
mov
jae
push
sub
add
inc
inc
add
out
xchg
adc
loop
and
jge
in
inc
hlt
daa
push
enter
pop
mov
iret
aas
pop
js
jo
test
mov
or
mov
push
loop
iret
lret
xchg
xor
pop
aaa
pop
cld
dec
lcall
or
iret
push
dec
orl
imul
fbld
sbb
aad
push
rcrb
inc
or
je
lret
ret
cmp
out
dec
aaa
inc
sub
icebp
aas
sti
or
mov
push
push
add
push
jge
in
orb
mov
adc
dec
cmp
inc
pop
jbe
mov
push
jnp
pushf
push
xchg
jnp
inc
jmp
jne
pop
add
fstps
pusha
jmp
jb
scas
stos
aad
mov
adc
pop
inc
adc
popf
mov
cld
lods
stos
inc
into
imul
out
lods
test
outsl
mov
or
adc
and
cmpsl
or
sbb
add
cmpsb
cmc
xchg
inc
sbb
fs
adc
mov
jbe
xchg
nop
sahf
dec
cmpsl
and
imulb
pop
iret
cld
pop
cmp
mov
and
xor
stos
aas
ret
add
or
int3
int
fildll
xorb
pop
adc
adc
mov
bound
ror
popf
cmpsl
cmp
jge
mov
mov
aad
dec
stos
cmc
lods
hlt
sub
dec
out
and
or
aaa
dec
push
inc
frstor
jne
cmp
mov
sbb
movsb
iret
mov
movsl
dec
cmp
scas
repz
out
les
ret
icebp
fadds
dec
adc
or
cs
mov
test
rcrl
dec
or
ja
push
xchg
fwait
pop
pop
and
jnp
ret
out
jne
adc
or
shl
loop
mov
or
push
xchg
imulb
shlb
jne
jg
gs
sub
jg
add
pop
and
mov
pop
sarl
cmp
sbb
cld
fisubrl
cmc
ds
aaa
or
xchg
jae
push
les
push
mov
jg
pusha
inc
mov
cli
mov
test
out
loope
mov
jp
leave
xchg
mov
out
mov
test
jb
push
adcl
pusha
cmpsl
mov
cmpb
jecxz
lods
ss
not
les
pop
adc
shl
add
mov
jno
cli
std
icebp
in
mov
pop
pop
xor
xchg
and
xlat
aad
lods
mov
test
sbb
mov
inc
sbb
xchg
xor
xor
xor
les
sarb
jge
std
push
ret
filds
push
xchg
and
in
jne
das
addr16
inc
fimuls
mov
loop
imul
dec
lods
ror
scas
mov
push
sub
xor
dec
mov
lds
mov
stos
loope
data16
arpl
sbb
fdivrl
ljmp
sub
rcll
add
cltd
gs
cli
orb
cmp
sbbl
push
loope
addl
out
pusha
xchg
out
adc
jne
jg
mov
movsb
insb
lcall
push
cmpsl
je
ds
mov
stos
and
xorb
movsl
js
and
mov
xchg
pop
outsb
mov
push
jl
cmp
arpl
fnstsw
add
std
pop
push
aas
jg
sub
adcb
mov
adc
mov
push
enter
enter
sarl
mov
iret
fidivrs
test
imul
cmp
imul
fldcw
or
jnp
mov
dec
inc
mov
fwait
lock
js
inc
mov
dec
mov
in
adc
adc
mov
rcr
xchg
inc
orl
adc
inc
cmc
dec
lods
jge
inc
mov
vmovaps
mov
jl
dec
imul
pop
cli
sahf
and
and
mov
cmc
sar
add
sub
adc
sti
cld
dec
int
in
ret
pop
out
clc
cli
sahf
cmp
push
lea
mov
rolb
adcb
aad
mov
and
xchg
mov
fbstp
adc
pop
outsl
sbb
mov
add
mov
push
dec
hlt
inc
push
pusha
vmovd
maskmovq
idivl
scas
popf
or
dec
add
mov
sbb
jg
xor
sub
add
js
mov
and
pop
idivl
and
mov
jg
sbb
loopne
inc
or
cwtl
test
mov
pop
add
scas
ljmp
mov
imul
push
andl
push
pop
daa
bound
popf
sub
test
cmp
jmp
stos
enter
cmpl
xchg
xor
shrb
ret
mov
or
pop
xchg
mov
enter
shrb
int3
addr16
xchg
shlb
dec
jl
daa
sbb
pop
mov
bound
push
pop
loopne
mov
in
int3
repnz
in
aaa
or
adc
insb
cmc
fnstsw
mov
pop
rcrb
shrl
movsl
cmp
icebp
rorb
idivb
inc
lock
pop
push
mov
mov
inc
es
push
stos
push
iret
sbb
sub
addr16
inc
cmpsl
sub
pop
in
daa
or
pop
xchg
or
xor
lods
sbb
arpl
test
mov
andl
movsl
sub
std
insl
xlat
xor
inc
adc
mov
push
add
push
adc
test
push
xor
ficoms
clc
push
mov
adc
inc
int
out
push
dec
xor
inc
or
and
inc
push
sbb
imul
push
jnp
sub
dec
push
sub
js
sbb
adc
shl
rorl
jge
dec
test
int3
mov
pop
xchg
push
divl
push
cwtl
scas
movaps
lods
push
mov
in
and
fistl
sbb
faddl
mov
xor
push
cwtl
arpl
mov
andl
lcall
pop
scas
arpl
adc
mov
mov
and
adc
pop
pushf
jecxz
cmp
subl
inc
insb
mov
sti
sbb
les
lahf
sub
movsl
fstl
fidivrl
inc
in
iret
popf
rorl
mov
sbb
add
mov
stc
cltd
or
rorb
shrl
fistps
rcrl
mov
dec
cmp
pop
gs
or
sbb
mov
push
mov
pop
fimull
aad
mov
pusha
inc
pushf
xchg
js
push
mov
mov
dec
push
inc
rorb
adc
mov
add
leave
ret
adc
xchg
in
gs
fsts
cmpl
dec
rolb
das
jg
cld
repz
inc
push
jle
or
loop
dec
mov
lea
inc
int
and
repz
fadds
addb
imul
clc
rolb
pop
sub
mov
das
int
xor
cmp
imul
sbb
imul
mov
jno
fimuls
rorl
and
hlt
push
pop
push
xchg
mov
loopne
das
mov
and
and
push
call
ret
shrl
xchg
mov
push
cmp
fidivrl
arpl
jl
jne
xchg
mov
loopne
mov
lods
push
lahf
cmpsl
imul
aas
sbb
pop
xchg
cmpsb
les
xchg
xorb
in
mov
pop
es
xlat
inc
cmpsl
fwait
lahf
mov
pop
adc
int3
sbb
je
pop
into
pop
push
sbb
add
xchg
outsb
into
ljmp
mov
shl
sbb
adcb
dec
int3
xchg
adc
shlb
cmp
loop
jmp
loopne
adc
dec
dec
xchg
pop
pop
popl
dec
jo
and
jg,pt
fstpl
cmp
loopne
dec
lcall
inc
and
push
inc
xchg
sti
mov
xlat
cmp
mov
sub
mov
push
cmp
out
and
ljmp
outsb
fs
jnp
jge
xor
ss
jne
daa
mov
mov
pop
sbbl
push
xor
adc
mov
pop
xor
lods
inc
or
xchg
cmp
adc
mov
pop
sti
or
ljmp
sub
stos
push
lods
pop
jle
test
pop
lahf
push
push
mov
add
adc
addl
mov
imul
pushf
stos
jecxz
mov
jno
outsb
testb
mov
cmc
cs
jne
idivb
push
sahf
mov
mov
ret
nop
stc
inc
xchg
push
and
add
xchg
xlat
insl
pusha
test
ljmp
xchg
jne
push
lods
jns
mov
loopne
dec
xchg
aad
aam
cmp
jp
arpl
clc
cmp
pop
leave
stc
mov
push
push
movsb
jl
mov
mov
scas
scas
fiadds
stos
add
cmpb
and
shll
popa
cs
dec
push
jne
or
jnp
sar
sbb
push
and
pushf
cld
push
call
and
push
inc
adc
mov
enter
adc
shlb
adc
fwait
jle
sbb
test
faddl
xor
sbbb
in
add
cli
orl
rcll
xor
movsl
mov
out
ret
call
mov
loope
pushw
jecxz
dec
leave
inc
imul
repz
push
bndstx
or
ror
sahf
dec
lret
in
test
push
sarb
clc
out
fs
loope
scas
add
sub
mov
jnp
pop
and
cmp
push
stc
orl
jae
xlat
gs
popa
pop
xchg
push
outsl
jnp
push
adc
ret
jp
daa
daa
push
cmp
push
push
icebp
fs
in
lea
cli
das
hlt
data16
push
bound
scas
sbb
lret
ja
sub
stos
pop
push
push
sub
pop
cmpb
imul
sub
mov
xchg
jmp
popf
push
aaa
push
ja
pop
mov
lods
test
dec
mov
and
sahf
add
push
adc
test
rcl
dec
sbb
xchg
sbb
cmp
nop
mov
shll
imul
mov
loope
rclb
lock
xlat
sbb
dec
fmuls
adc
cmpsl
popl
sub
filds
add
ljmp
push
and
mov
lret
sub
sbbb
test
test
push
xor
sub
push
jbe
sbb
dec
cmp
insl
sub
pop
inc
lea
fldenv
or
rclw
adc
adc
cmc
mov
mov
and
stos
je
inc
in
mov
jge
sbb
mov
pop
scas
lds
inc
adc
stc
inc
lock
cld
fs
out
inc
add
adc
fs
lods
mov
jae
mov
xchg
sarb
imul
cld
sti
subb
mov
cmpsl
adc
addl
mov
mov
fs
xchg
fdivrl
cwtl
pop
cmp
cmp
jp
sub
and
cmp
add
lods
push
jp
sti
stc
inc
xchg
ljmp
mov
jne
addr16
xor
or
mov
shlb
lahf
add
std
movsl
fnstcw
pop
xchg
pop
sub
jne
jmp
cmp
loopne
mov
ret
xor
fidivl
add
xchg
and
pop
stos
pop
or
in
loope
mov
dec
gs
cmp
push
jno
push
pop
and
adc
iret
sbb
pop
pop
fnstenv
sbb
test
push
fistpl
cmc
call
inc
or
lret
add
cmp
mov
addr16
inc
popf
fidivrl
or
sarl
xchg
dec
cmp
mov
adc
jno
cs
push
jb
adc
cmp
std
pop
incl
sar
scas
jp
lods
dec
gs
cmp
sbb
xor
lods
push
es
jnp
lahf
je
jnp
xchg
jae
cmp
dec
aam
xchg
add
loopne
inc
pop
inc
push
mov
add
jns
rolb
xor
xchg
mov
or
scas
loopne
fcoml
mov
cmpsb
inc
cmpl
ja
mov
push
cli
mov
out
mov
ret
sbb
lds
popa
stos
test
jle
icebp
mov
pop
addr16
lcall
fiaddl
jae
out
int
dec
mov
push
es
orl
fwait
cmp
jno
or
mov
in
aaa
push
and
lahf
pop
faddl
xlat
push
jb
cmp
jg
scas
xor
xchg
or
sbb
jb
in
divl
or
dec
cmp
dec
out
imul
scas
jg
and
mov
mov
std
cmc
sbb
mov
mulb
mov
jne
stos
inc
out
cmc
push
pop
add
gs
jbe
cmp
leave
cmc
sbb
or
inc
push
mov
pushf
scas
cld
in
jo
fidivrl
dec
push
cmp
dec
fldt
and
add
pop
adc
xchg
addb
push
mul
enter
shrb
int
sbb
loope
hlt
sbb
xchg
push
loope
adc
das
pop
sahf
ret
cmp
sbb
fmuls
cs
imul
inc
inc
jns
stos
sbb
int
insl
mov
xchg
dec
mov
mov
insb
adc
jp
add
int
xchg
add
pushf
repz
jae
lcall
mov
out
sub
pop
cltd
loop
xor
xchg
js
cmpsl
lret
sub
and
push
adcl
inc
mov
rorb
lock
mov
jae
push
call
icebp
ds
and
mov
sbb
xor
les
cmc
mov
push
push
or
fsubs
xor
jnp
jne
test
xor
pop
addr16
add
scas
scas
je
gs
adc
test
js
sub
test
jmp
fistps
sbb
push
pushf
mov
xchg
aad
cld
dec
in
scas
lock
mov
cli
cmp
in
pop
mov
mov
clc
mov
add
mov
jmp
pushf
mov
in
or
test
mov
sub
int
lods
faddp
sbb
pop
jge
xchg
negb
push
loopne
dec
xchg
add
pop
adc
shl
mov
mov
imul
fwait
imull
mov
cmp
pop
jmp
push
sbb
or
mov
out
es
insb
jle
mov
sub
dec
in
aaa
mov
adc
stc
adc
mov
lret
mov
inc
fdiv
rcll
in
inc
mov
sub
pop
cltd
ret
jne
sub
or
testl
es
scas
inc
push
lahf
fs
push
mov
aas
push
aas
cli
mov
lret
arpl
dec
lret
mov
xchg
mov
imul
in
in
fmull
orl
or
mov
je
mov
xchg
mov
repnz
cmpsb
mov
dec
lret
dec
call
loope
mov
sbb
mov
mov
mov
xor
loopne
adc
cli
pop
outsb
jge
lret
pusha
cltd
and
mov
push
mov
stos
jecxz
cmp
aam
inc
lcall
adc
push
cmpl
shll
repnz
xchg
cmpsb
push
cmp
and
sub
dec
or
sub
mov
arpl
insl
fcmovne
in
xor
xchg
mov
daa
jbe
lret
push
les
pop
sbb
push
sbbl
rcl
or
sbb
cmp
adc
xchg
mov
in
xchg
repnz
mov
push
cmp
test
inc
int
mov
sub
clc
or
cmp
fnstenv
sub
inc
mov
mov
mov
inc
fsubs
loopne
mov
cmp
and
scas
xor
bound
and
mov
push
clc
out
xorb
mov
adc
jmp
loopne
jp
cmpb
or
mov
mov
cmpsb
add
repz
xchg
jae
insb
movsl
popf
dec
or
jecxz
ret
rcr
add
inc
jge
orl
jmp
mov
cmpl
push
xchg
decb
sub
dec
gs
test
mov
jb
cmc
mov
iret
dec
mov
mov
movsb
cmpsl
movsbl
ret
es
jne
inc
mov
and
sbb
cli
jae
addr16
push
push
xchg
cmp
jns
push
cld
mov
orb
cld
out
and
jge
dec
xor
mov
inc
loop
inc
test
jno
mov
popf
rorl
dec
mov
arpl
ficoms
std
cmp
adc
jno
sub
push
scas
in
loopne
dec
xchg
adc
and
jae
adc
inc
nop
ret
sti
pushl
scas
outsb
cmp
sub
inc
inc
es
es
sub
dec
pop
call
and
lret
sbb
outsb
out
cltd
push
add
sub
out
add
and
pushf
stos
fidivs
in
inc
lret
scas
dec
xor
xchg
jl
test
fwait
xchg
fldt
test
das
jmp
out
sbb
leave
adc
into
in
bound
dec
jo
pop
jb
or
sbb
ja
sbb
in
es
icebp
inc
sbb
dec
pinsrw
push
mov
dec
insl
inc
cmp
lea
mull
cmp
fs
ja
rcrb
and
and
mov
xchg
inc
in
jmp
lret
inc
hlt
jmp
and
add
lock
push
dec
fs
aas
pusha
xor
push
mov
mov
in
and
push
or
in
out
mov
cmp
pop
mov
mov
mov
lret
mov
xchg
pushf
iret
xchg
jnp
outsl
jge
aam
cmp
fdivs
inc
test
in
enter
cmp
ror
pusha
and
jcxz
cmp
jo
inc
fbstp
and
clc
jae
ret
mov
adc
mov
pop
cmc
int3
dec
divl
ja
dec
loop
xor
and
push
je
mov
dec
pop
loop
fistps
iret
movsl
add
out
lods
repz
ds
push
and
icebp
fidivrs
aaa
mov
xchg
inc
popl
cmp
icebp
mov
in
push
ljmp
pop
cmp
push
fdivl
les
inc
cltd
in
pop
or
je
add
iret
mov
scas
fistps
jge
push
sbb
inc
jmp
pop
jb
mov
movsb
int
mov
dec
sbb
adc
idiv
and
cmp
arpl
fildl
stos
sub
jle
in
push
push
dec
int3
xor
sub
add
or
xchg
in
jae
jp
inc
xchg
jne
jle
sahf
inc
shl
pop
ss
jecxz
and
adc
insl
mov
jge
inc
adc
outsb
cmp
pop
xor
pop
test
cmp
add
data16
popf
repz
hlt
cmp
mov
xchg
cmp
repz
sahf
repz
mov
std
lahf
jl
lock
adc
hlt
add
push
fcmovnbe
xor
repz
jns
sahf
int
add
fisubrl
lds
add
ljmp
in
mov
mov
decb
sub
scas
cmp
push
fisubl
inc
mov
fcmove
repnz
fstps
fisubs
das
scas
mov
push
into
pop
xor
jmp
outsb
fnstcw
sbb
cld
add
or
movsb
in
das
xchg
out
xor
cs
inc
push
inc
adc
lcall
add
push
dec
rcr
mov
shlb
loope
sub
test
adc
gs
and
cmc
pop
call
mov
cmpsl
jmp
mov
hlt
xor
cmp
call
gs
mov
das
into
sbb
test
and
mov
dec
mov
mov
arpl
aam
les
sarb
jnp
popa
xor
aaa
dec
aaa
jmp
nop
dec
xchg
mov
dec
test
push
adc
lret
push
daa
mov
scas
pushf
and
inc
xchg
jge
out
mov
dec
out
xlat
mov
dec
xor
hlt
jge
adc
shr
hlt
push
aad
mov
push
jecxz
jo
push
out
stos
pop
mov
aas
aaa
sbb
cs
mov
dec
rol
stc
mov
clc
outsb
inc
jecxz
pushf
add
rclb
cmpsl
xchg
mov
pop
inc
sti
jnp
or
push
into
xor
xlat
sbb
cld
shlb
scas
js
sbb
xor
push
clc
std
jmp
add
inc
mov
scas
mov
push
call
sub
push
dec
or
pop
mov
test
mov
jg
or
pop
adc
lret
mov
or
pusha
adc
cli
ficoml
mov
mov
mov
adc
mov
pop
xchg
sbb
mov
sbb
lds
or
shll
xlat
add
dec
mov
gs
xor
les
aam
loopne
and
dec
dec
sti
pop
addr16
ret
fisubs
jae
scas
scas
hlt
xchg
xchg
adc
add
lods
mov
lea
pop
jo
pop
jbe
int
inc
ret
sub
and
stos
xor
inc
ficompl
dec
dec
push
cld
fsubrl
pop
ljmp
repnz
lea
or
mov
xchg
lcall
lret
pop
daa
in
mov
and
cmp
fistpll
fcmovnu
in
xor
cld
or
mov
pop
ficomps
jle
imul
cs
in
push
mov
jmp
sahf
stc
pop
test
jno
push
ss
sbb
jmp
repnz
and
push
and
sarb
mov
push
rcrl
cmp
mov
popf
in
lahf
add
je
rcrb
jb
lahf
je
jle
in
ret
pop
dec
mov
push
pop
aad
or
stos
icebp
add
cmc
inc
out
ljmp
jg
mov
mov
add
insl
cld
rol
pop
rclb
in
jae
jg
in
xchg
pop
mov
lods
aas
and
test
push
pop
mov
rorl
out
adc
push
cmp
sub
lret
xor
pushl
out
aad
call
adc
xchg
fcoml
xchg
or
testb
push
dec
sub
addl
inc
sbb
popf
call
fldt
loopne
push
out
xchg
test
stc
scas
mov
dec
das
dec
add
int
and
sbb
sub
aaa
in
rcl
test
mov
jns
fldenv
jle
test
jmp
ds
inc
and
mov
mov
sbb
insb
cmpsb
and
dec
inc
jbe
jmp
out
push
adc
faddl
or
stos
es
sub
ficoml
sub
fcomi
mov
push
icebp
xor
lahf
adc
idiv
add
cmpsb
sbb
testl
inc
repz
outsb
in
out
pop
fisttpl
mov
push
mov
je
pop
test
aas
idivl
jo
std
jle
push
pop
je
adc
pop
mov
cmp
aad
xchg
pop
pop
sub
pushf
xor
aam
cs
arpl
sti
xchg
sbb
fnstsw
test
leave
je
inc
test
lods
add
sti
out
jne
daa
stos
sub
outsb
mov
jg
sarl
aad
adc
xor
sbb
lret
push
add
stos
outsl
cmp
das
idivl
fsubs
dec
mov
mov
sbb
call
mov
leave
mov
loope
lea
repz
add
into
ljmp
inc
mov
jbe
push
rcll
aam
repnz
mov
mov
push
add
icebp
out
nop
xchg
mov
inc
pop
cmp
xor
and
cmpb
das
mov
cmpsb
sub
jp
jp
sbb
jbe
xor
mov
mov
cli
cmp
nop
sub
call
jbe
push
mov
movsb
sub
into
mov
and
inc
pop
dec
scas
push
rorb
mov
jbe
xchg
jne
jnp
push
fsin
add
andl
xchg
lds
or
or
pop
push
xchg
js
push
out
aaa
aas
fwait
jne
fcomp
outsb
pop
cld
mov
xchg
hlt
lea
sub
int
ds
cltd
imul
and
test
out
in
push
mov
xchg
adc
int3
nop
mov
or
jne
xor
in
dec
xchg
mov
jl
xchg
mov
testl
orl
pop
xchg
aam
out
leave
push
call
or
inc
mov
and
imul
xor
popa
pop
adc
or
sub
xchg
or
cltd
dec
push
mov
pop
xor
out
ss
mov
mov
mov
pop
int3
xor
jae
dec
jge
xor
mov
dec
xchg
dec
sbb
mov
sub
std
lret
test
inc
inc
mov
sbb
sub
stos
iret
sbb
leave
cmp
push
iret
pop
aas
pop
or
dec
sub
mov
into
xor
mov
and
sbb
fpatan
int3
mov
pop
push
in
or
fiaddl
pop
inc
adc
out
in
stc
mov
imulb
xchg
inc
jmp
and
push
or
pop
cwtl
in
into
vpshufd
cmp
sbb
dec
jl
mov
inc
popa
and
pop
mov
sub
dec
push
or
sub
add
icebp
aas
jmp
addr16
fs
add
subl
or
imul
sbbb
push
xlat
imul
enter
ror
or
push
arpl
js
inc
sub
dec
sahf
mov
lods
leave
inc
push
ret
aam
cmp
test
mov
and
xor
stc
xor
adc
cmpsl
and
dec
mov
outsl
dec
repz
cmp
pop
xchg
fldz
xor
std
enter
icebp
sbbb
mov
mov
xor
mov
or
pop
outsb
ds
cmp
cmp
imul
mov
push
aas
push
rcll
ljmp
lods
mov
cmpsb
mov
sub
fldcw
push
sub
push
mov
cwtl
test
sbb
cmp
xchg
stos
cmp
fcomps
adc
das
in
mov
lret
lods
and
or
cmp
andl
sub
sahf
add
sbb
sbb
imul
or
xor
xchg
int
and
je
xor
or
inc
ret
xchg
loopne
scas
push
inc
in
filds
iret
or
pushf
pop
cli
jns
andl
cmpsb
push
rol
cmpsl
imul
cmp
mov
jmp
mov
cli
lds
sub
or
and
pop
dec
sti
test
xchg
test
dec
adc
push
imul
lcall
stc
and
xor
sub
cmp
insb
outsb
loopne
lock
cmp
push
jle
xchg
les
sub
mov
leave
ljmp
in
movsb
mov
sti
lahf
mov
pop
push
adc
rol
xchg
xor
test
xchg
fistps
and
adc
sbb
stos
and
out
inc
lds
or
fxch
jp
jb
push
stos
jno
or
add
inc
cmp
cmpsl
fs
cmpb
std
rcrl
stos
stos
jmp
fcompl
pushf
sbbb
lret
pop
outsb
pop
out
cmp
lcall
inc
loope
jno
addl
cmp
xchg
sbb
xchg
push
mov
pushl
xchg
in
push
mov
mov
mov
mov
mov
sub
test
pop
or
scas
inc
mov
notl
or
aaa
jno
lret
scas
or
or
lahf
call
xor
mov
xor
aas
jne
sbb
adc
mov
cld
sarl
sbbl
lret
jl
lock
cld
or
cmpb
cmp
cmp
imul
jp
mov
cmc
das
adc
cmp
xor
inc
mov
push
mov
and
adc
and
test
mov
adc
in
jmp
push
insl
mov
out
push
loope
xor
or
call
mov
mov
ljmp
das
bnd
jb
xor
mov
movsl
jno
lock
movb
push
les
inc
dec
subb
add
fcoml
sub
ljmp
aad
xchg
sub
aam
inc
pop
add
push
incl
into
mov
jp
sahf
or
xchg
sbb
ret
jle
cmpl
ja
xor
ds
mov
mov
out
loope
xchg
pop
test
sbb
mov
pop
repz
imul
or
test
fisubrs
and
add
and
cmp
jecxz
or
andl
and
js
add
adc
adc
dec
jnp
ss
mov
jo
aam
outsl
out
test
mov
xchg
inc
cmpsb
aad
push
push
cwtl
or
dec
lds
addr16
fwait
enter
xor
mov
sbb
je
sbb
call
jnp
pop
mov
xchg
add
jl
arpl
mov
push
jns
add
inc
inc
push
or
lret
rcll
jns
add
fldenv
mov
xchg
or
jno
xchg
ficomps
jle
lret
jnp
push
mov
sub
mov
icebp
pop
pop
mov
inc
imul
imul
adc
mov
mov
fldl
fbld
cwtl
lds
int3
mov
and
sub
ret
sbb
popa
iret
lahf
daa
ja
iret
popa
data16
jb
out
add
sahf
pop
lcall
push
in
bound
add
fistl
out
push
xor
and
push
iret
fcmovbe
idivl
xorb
pop
repz
cmpsb
mov
sub
push
frstor
jge
mov
inc
or
sub
icebp
into
pop
jnp
xor
pop
lcall
sbb
cmpsb
addb
push
aam
inc
add
push
popf
pop
dec
test
int
mov
xlat
je
xchg
mov
sbb
cmp
sub
insl
cmp
or
sbb
mov
inc
imul
movsl
stos
sbb
cs
insl
fsubrp
andb
lods
push
jg
push
jl
cmpsb
jle
sub
cltd
mov
mov
movsb
lds
dec
aam
and
jns
jns
ljmp
outsl
adc
mov
add
das
pop
call
xchg
sbb
lcall
mov
call
jge
popf
dec
mov
jo
shrb
je
mov
mov
cmp
xor
clc
xlat
into
popa
iret
xchg
out
mov
lret
xchg
clc
dec
faddl
xchg
movsl
jle
mov
xchg
xchg
sbb
and
ja
call
sbb
sub
jl
popa
mov
xor
scas
jl
push
push
push
mov
push
mov
fdivs
js
movsl
pop
in
cs
fistl
loopne
shlb
sbb
adcl
call
aas
jmp
mov
outsl
movsw
scas
dec
das
sbb
testl
fnstenv
add
aad
es
xchg
lret
dec
repnz
stc
out
mov
pusha
sub
shrb
jle
fistl
push
enter
cmp
xor
inc
pop
sub
ficomps
and
and
pop
scas
mov
das
add
xor
js
mov
stc
clc
cmc
jle
enter
imul
mov
test
cmp
fisubrl
fdivrl
pand
outsb
insl
pusha
pop
push
and
cmc
sbb
fidivrl
pushf
gs
cmp
mov
push
imul
fcmovnbe
inc
mov
and
sbb
mov
and
daa
mov
fiaddl
push
sbb
loope
lea
popa
sti
sti
in
sbb
push
and
mov
adc
and
sub
add
int
cli
dec
data16
and
pop
test
cmpsb
push
or
xchg
sbb
fld
repz
out
aam
cmpl
lret
daa
mov
xor
xor
mov
shrl
loopne
ror
loop
lods
and
repz
add
or
sub
fwait
pop
xchg
ljmp
in
stos
mov
fstpl
push
clc
mov
mov
adc
lods
and
jo
cmp
pop
or
int3
out
xor
adc
sbb
xor
das
push
imul
mov
lods
pop
sarb
jbe
jp
dec
loope
sub
mov
mov
enter
lods
xchg
sub
fsts
int
data16
push
popf
scas
inc
imul
pop
insb
in
mov
sub
je
cltd
sbb
aaa
addr16
popf
hlt
mov
lcall
jnp
and
inc
sub
sarl
xor
push
in
fsubl
sarb
cmpb
cld
mov
ret
test
stos
jle
cmp
or
pop
mov
push
movsl
push
in
sarl
loope
push
mov
sbb
push
imul
inc
imul
bound
jbe
jno
and
mov
jnp
inc
dec
or
lret
cld
insb
or
testl
jmp
push
lcall
jl
jg
outsl
ret
sahf
cld
and
sub
js
inc
gs
cmp
mov
mov
addb
push
add
mov
je
fldl
pop
xor
cs
pop
aas
jle
lret
out
das
cmp
popf
pop
inc
inc
adc
inc
lea
in
loop
push
pop
jns
into
jae
mov
test
imul
pop
mov
pop
adc
xchg
or
psubsb
sub
or
xchg
cmpb
push
and
aad
mov
fs
push
addr16
dec
xor
inc
or
mov
pop
arpl
sti
lods
push
movd
mov
ret
scas
cmp
rcll
pop
lods
decb
imul
repz
pop
out
cmc
xchg
ret
aad
outsb
ror
adc
hlt
rcrw
inc
xlat
xchg
pop
mov
jle
popa
xor
cmc
xor
sbb
sbb
xchg
pop
arpl
push
mov
iret
jbe
aaa
mov
and
mov
push
cmp
popa
cs
cmp
repnz
mov
inc
xchg
xchg
std
inc
rcll
in
pop
jb
sub
cmpsl
jnp
push
lock
out
movsb
punpckhwd
mov
insl
or
enter
add
xchg
jp
notb
pop
out
push
scas
xchg
jmp
test
lahf
pop
es
adc
or
mov
test
stc
mov
jmp
push
cmp
and
mov
outsb
sbb
pop
mov
out
shll
or
shrb
cmp
shrl
xchg
daa
repz
iret
lea
lcall
arpl
in
fwait
and
test
push
pop
xor
inc
repz
cmpb
movsb
sub
cs
add
sbbl
or
and
repnz
cmp
loopne
jno
xchg
lahf
sti
aam
in
adcb
shr
fiaddl
sub
mov
push
ljmp
fsubrp
dec
je
mov
insl
sbb
data16
xchg
fwait
mov
xor
jecxz
stos
xchg
in
adc
ficoms
mov
add
xchg
sahf
mov
mov
das
pop
jge
out
fdivr
xchg
pop
scas
sbb
cmpsb
jne
jnp
leave
rcll
jo
out
mov
pop
xchg
rcll
xor
mov
mov
xor
mov
hlt
lcall
sbb
pop
lcall
stc
pop
into
lock
and
nop
jg
call
in
ds
xchg
int3
mov
adc
jmp
push
sub
sti
loop
jo
ret
lret
xchg
mov
and
mov
cltd
inc
cmpsb
mov
push
xor
mov
arpl
or
sahf
dec
pop
or
fildll
fldlg2
fstpl
jmp
loope
lds
scas
enter
dec
test
imul
mov
lods
popf
loop
das
push
iret
dec
push
cmp
sarb
xchg
pop
xchg
add
out
add
push
clc
pushf
repz
das
sub
js
dec
pmulhuw
out
jnp
add
push
mov
gs
in
mov
js
in
jns
int
push
int
mov
hlt
roll
ja
outsb
dec
rcrl
leave
out
in
adc
push
outsb
es
sub
xor
das
lds
cmpb
dec
push
loop
adc
pop
xchg
and
fs
sub
cmpl
push
test
xorl
mov
insl
push
dec
hlt
std
xchg
test
xor
movsl
jl
sbb
push
add
push
pop
inc
jecxz
cmp
fdivr
mov
callw
mov
mov
mov
mov
das
cmp
push
xchg
ret
xor
das
dec
orb
scas
xchg
jbe
clc
icebp
movsl
mov
mov
stos
pop
andl
jmp
xchg
les
xchg
jge
adc
cs
dec
shll
jmp
push
vprotq
or
loopne
cmc
xor
xor
pop
cmp
and
dec
mov
or
or
xchg
mov
xchg
mov
dec
jb
subl
mov
addb
dec
repz
jl
adc
enter
and
daa
push
mov
stc
leave
jmp
mov
or
popa
dec
mov
jmp
repnz
dec
and
mov
and
mov
mov
loop
inc
inc
es
cmp
jg
hlt
cmp
cltd
mov
add
pop
add
scas
loopne
shrl
dec
inc
stc
mov
lret
push
aad
inc
mov
jbe
pop
loope
sbb
inc
int
adc
adc
mov
jecxz
scas
data16
ljmp
stc
aam
pop
inc
insb
scas
xchg
daa
cld
test
xchg
xchg
jnp
repz
lods
jl
cmc
mov
mov
mov
dec
mov
and
adc
fistpl
jmp
adc
lret
cmpl
inc
data16
cs
dec
cmpsl
add
adc
testl
xchg
bound
ljmp
out
mov
fsubrl
pushl
push
pop
mov
test
cmp
rcrb
shl
int
push
lret
pop
xchg
xor
outsl
fidivs
fstps
ss
ret
lret
stos
cs
sahf
fistl
cmpsl
sbb
je
lods
sarb
and
push
pop
or
out
mov
inc
dec
mov
inc
gs
cmpsl
call
mov
push
push
adc
sbb
adc
fnstenv
cmc
mov
and
adc
add
pop
enter
jae
mov
jo
jecxz
out
cmp
movsl
cmpsl
lret
mov
xchg
inc
repz
add
rcrl
js
cld
pusha
mov
bound
int
icebp
je
test
cmpl
sbb
or
lahf
repnz
leave
rcrl
adc
or
imul
adc
scas
in
mov
dec
sub
sbb
icebp
flds
test
xchg
mov
into
icebp
cmp
jnp
icebp
lcall
dec
or
bound
lcall
int
mov
lahf
xchg
ss
outsb
sbb
lods
mov
add
int
dec
movsb
cwtl
sahf
xchg
es
jecxz
lea
mov
sub
push
inc
xchg
jg
push
adc
adc
adc
xlat
or
mov
push
sti
sub
dec
mull
xlat
pop
xlat
cmp
mov
push
rcr
mov
mov
rcll
mov
adc
test
add
aas
mov
adc
neg
cs
iret
mov
shll
push
adc
std
and
call
sbb
mov
sarb
js
jle
xor
dec
xor
ret
and
fisttpll
mov
fldenv
or
lock
insl
jns
mov
lret
add
inc
xchg
ja
out
jne
cmp
mov
and
pop
js
hlt
mov
mov
adc
jmp
lret
add
das
jne
in
or
or
pop
xchg
fistpll
lods
cmp
hlt
pop
pop
call
or
xchg
stos
daa
adc
jnp
lret
popa
pop
xor
out
dec
int
push
notl
inc
int3
loope
ret
xchg
sbb
popl
sbb
add
in
adc
mov
push
aas
aas
lock
push
push
sub
push
and
adc
push
sahf
jmp
rep
fbld
push
pextrw
inc
arpl
popa
aaa
mov
sarb
xchg
cmp
jnp
add
out
imul
test
cmc
dec
jle
lret
iret
hlt
jae
test
scas
xchg
push
insl
cmp
scas
jno
dec
cmp
and
mov
mov
ds
flds
loop
pop
push
lret
mov
cmpsl
mov
pop
add
mov
cmp
pusha
adc
into
loope
mov
test
std
insl
xchg
lock
pop
push
sahf
push
dec
jge
lret
mov
fdiv
lea
ja
or
jno
out
cmp
dec
test
inc
push
adc
nop
imul
inc
shrb
dec
test
or
adc
lods
pop
insb
mov
inc
push
sbb
xchg
or
add
adc
pop
es
leave
clc
xchg
popa
dec
jno
iret
gs
enter
movsl
leave
arpl
mov
push
test
jo
into
jnp
sbb
sub
adc
xchg
xor
cmp
ja
add
jnp
pop
mov
bound
repnz
ret
cmp
push
push
cli
mov
adc
subb
cmp
cmp
out
push
push
push
lret
adc
mull
popf
pop
push
jmp
cmpl
arpl
cmc
sbb
pop
cltd
pop
imul
dec
cmp
movsb
mov
mov
arpl
stc
jl
jns
or
xor
dec
in
rcll
shlb
xor
iret
adc
loopne
pop
pushl
imul
insb
lcall
sahf
or
jns
test
scas
shll
adc
pusha
push
push
fstpt
mov
mov
lcall
inc
popf
push
push
cmpb
push
jnp
mov
xor
fwait
xor
or
dec
dec
dec
orl
push
push
vmwrite
notb
mov
push
inc
in
jno
or
aaa
mov
push
and
mov
mov
aam
push
leave
loopne
and
jo
sub
lock
movsl
adc
xchg
xor
movsl
das
int3
fisubrl
mov
and
sub
mov
jle
adc
and
add
insb
add
stos
ljmp
pop
les
sbb
mov
int
xor
stc
xchg
lods
shrb
sub
fnstcw
push
xchg
int
out
es
popf
or
test
scas
hlt
sti
dec
inc
xchg
lods
fidivrl
je
insl
push
jno
das
movsl
cli
pop
fnsave
sbb
daa
xchg
cltd
mov
repz
cltd
sbb
and
lahf
jno
pusha
out
mov
pcmpgtd
mov
hlt
mov
mov
xchg
jae
stc
xor
mov
or
repz
mov
push
fs
inc
dec
mov
int3
xchg
mov
scas
data16
in
cmp
jle
lahf
sub
cmp
mov
mov
or
jp
push
jmp
mov
cmpl
in
cmpsb
push
xchg
lea
push
fucom
xchg
pusha
ret
sbb
inc
aad
rolb
add
daa
cmp
shll
lea
out
shr
pop
mov
popf
icebp
in
cmp
xchg
sbb
xor
dec
xchg
or
divb
scas
push
jne
insl
out
repnz
push
dec
out
cmc
cmpsb
mov
addr16
cltd
aaa
push
adc
lods
xchg
adc
ret
pop
jle
lret
sub
sbb
lahf
mov
repnz
push
fstpt
sbb
sub
scas
mov
mov
mov
jmp
cmpsb
fsqrt
bound
es
lock
popf
pusha
inc
int
shr
mov
test
pusha
pushf
loopne
mov
or
pop
outsl
ljmp
pop
arpl
inc
sbb
push
test
sbb
mov
xchg
mov
mov
mov
fistpll
fwait
sub
outsl
test
stc
sub
jle
push
push
sbb
add
add
cli
outsl
pop
ds
inc
movsl
xchg
fsubrs
pop
and
cs
arpl
pop
pop
cmp
sbb
dec
repnz
movsl
and
cmpsl
pop
mov
aas
cmp
xor
or
add
sahf
insl
xorl
fcmovne
daa
pop
jbe
jecxz
outsl
ljmp
bound
mov
shr
lods
cmc
std
xor
sahf
jp
dec
fdivl
test
scas
jg
add
jecxz
stc
adc
jae
dec
sub
test
pop
pop
and
insl
mov
out
and
arpl
addb
inc
dec
leave
push
push
mov
xor
stos
mov
ret
sahf
addb
loop
dec
cmp
imul
xchg
fildll
xlat
adc
out
adc
rcrb
push
repnz
xlat
push
lock
movl
out
adc
sub
mov
cltd
cmp
call
inc
sbb
jns
and
cmpsl
fildl
xchg
pusha
push
ret
cmpsl
jl
xchg
mov
cli
mov
pop
lret
icebp
lods
mulb
xchg
inc
and
jnp
scas
lret
inc
test
cmp
and
bound
stos
cld
notl
movsb
mov
mov
push
filds
mov
sub
xor
cmp
loop
loope
sub
add
push
stc
insl
sub
hlt
out
or
rcrl
mov
aad
cmp
and
fstps
repz
sbb
mov
sub
dec
mov
fisubrl
mov
xor
sbb
xchg
jno
pop
xchg
mov
mov
mov
lods
push
movsb
shll
ret
xor
movsb
arpl
jne
aas
sbb
popl
aas
pop
lret
insl
push
xor
cld
dec
ljmp
outsb
pushaw
jecxz
sbb
mov
jmp
or
sbb
mov
mov
and
in
jmp
xor
lods
fistpll
movsl
test
pushf
adc
nop
loopne
ret
xor
sub
sub
mov
fimuls
ret
jns
cmpsb
xchg
and
call
fmull
pushf
adc
lcall
or
sbb
jno
xchg
shrb
mov
push
push
inc
dec
inc
mov
push
sbb
mov
and
jle
ss
and
aaa
mov
pop
dec
leave
push
dec
fisttpll
out
pop
into
jae
push
adc
xchg
test
fwait
pop
xchg
cmpsb
sbb
cmp
fs
pop
add
push
das
dec
mov
xchg
push
aas
rolb
jne
adc
add
mov
je
dec
outsl
push
int3
adc
imulb
mov
adc
ljmp
cli
aas
popf
mov
in
int3
test
imul
sbb
cmpsl
push
pusha
imul
add
mov
lds
mov
shrl
mov
push
ret
rcll
scas
adc
adc
cmc
stc
jo
pop
push
sahf
lcall
and
sbbl
fpatan
sub
dec
and
pavgb
mov
mov
sub
rorb
adc
xchg
orl
out
cmpsb
push
pop
mov
loop
adc
lods
ror
xchg
mov
inc
out
jl
mov
punpckhwd
clc
dec
aas
xor
sbb
bound
lods
shl
mov
xor
cli
out
cli
stc
mov
in
mov
push
push
into
and
sub
hlt
jecxz
xchg
aam
xor
daa
xlat
mov
xchg
mov
test
push
inc
loopne
movsb
push
mov
jge
mov
adc
jcxz
mov
ret
insl
dec
push
icebp
xorl
cmp
loop
push
stc
cmp
sti
stc
pusha
dec
adc
scas
popa
jne
add
enter
xchg
pop
push
mov
out
mov
xor
ds
lods
inc
push
xchg
jbe
adcl
test
cmp
jnp
push
cli
lahf
mov
call
add
push
inc
pop
xchg
test
dec
cmp
testl
ficoms
cli
in
lret
push
push
xlat
sahf
pop
xchg
dec
out
dec
test
scas
sbb
adc
arpl
mov
add
minps
insl
sbb
sub
loope
adc
enter
xchg
std
xor
xor
int
sbb
push
loopne
mov
out
cmp
and
xlat
iret
xlat
out
push
stos
mov
xchg
push
filds
sub
popaw
stos
test
hlt
lret
jp
rol
xchg
mov
add
cld
sub
mov
cs
xchg
pop
imul
inc
pop
repz
pop
fstpt
sbb
sub
jns
fistps
and
mov
stc
sbb
xchg
lcall
or
or
shl
adc
dec
aam
bound
lods
or
cltd
repz
dec
dec
roll
out
arpl
push
mov
and
popf
aad
xor
adcl
mov
stos
pop
mov
mov
ljmp
and
aam
xchg
int3
mov
in
dec
rorb
and
in
hlt
jecxz
test
sahf
dec
enter
xor
loope
pop
imul
fsub
sbb
popa
xchg
mov
xlat
lret
cmp
cmc
pop
cmp
icebp
out
inc
xor
imul
and
and
mov
out
sub
cmpsl
rcll
je
or
push
ljmp
insl
icebp
jns
fisubs
cmpl
push
cmp
jge
into
and
adc
dec
mov
incb
enter
dec
inc
shrl
fcompl
aas
fnsave
add
notb
or
jecxz
jae
pusha
jnp
cmpsl
out
stos
mov
pushf
fwait
hlt
dec
iret
dec
scas
fucomp
jle
xchg
xor
mov
xchg
cmp
js
hlt
jo
cwtl
les
mov
bound
sub
repnz
xlat
cmc
mov
das
mov
xor
in
into
test
add
jle
xor
rorl
test
shlb
jnp
nop
jbe
shlb
scas
sub
int3
sarb
jp
dec
and
addr16
mov
mov
enter
test
insl
mov
pop
orb
movsb
cli
push
xchg
repz
mov
ss
ficoms
xor
mov
xor
js
icebp
inc
inc
into
cmp
mov
data16
jno
cmc
aas
sub
and
repz
lds
sub
loopne
sub
sbb
test
aad
push
jb
fwait
stc
mov
loope
mov
int3
and
or
ljmp
adc
ss
js
adc
sub
inc
imul
jecxz
add
je
sub
test
iret
add
add
push
das
ficomps
cmp
sub
jo
stc
cltd
dec
pop
aam
jecxz
adc
cmp
insb
mov
jecxz
add
test
sbb
or
es
fists
mov
inc
cs
shlb
movsl
cmp
xchg
xor
scas
add
ret
push
cmp
sbb
cmc
shl
dec
xchg
jns
pop
sbb
cmp
xorb
hlt
ljmp
mov
add
cmc
clc
ret
push
dec
ror
xchg
inc
hlt
jno
insl
jge
bound
xchg
mov
fsubr
fmul
repz
adc
ljmp
add
fs
stos
mov
shlb
cpuid
jns
stos
es
xchg
add
stos
sbb
mov
cli
sbb
pop
sbb
xchg
leave
fidivrl
hlt
or
insb
jb
movsb
cli
adc
add
xchg
pop
inc
loop
imul
lret
lea
push
shr
sub
add
stos
push
jo
adc
cli
sub
sub
sti
add
and
xchg
mov
pop
neg
or
stos
push
mov
push
dec
or
cs
dec
inc
mov
xlat
sub
decb
pop
jae
cld
push
and
clc
and
xor
scas
pop
and
mov
sti
mov
ret
stc
insl
add
rolb
clc
stc
cmp
mov
les
pop
push
mov
push
push
push
or
push
icebp
add
sahf
xchg
mov
idivl
sarl
xchg
mov
mul
jle
mov
push
mov
dec
dec
clc
jp
jmp
pop
cmc
or
pop
push
xor
sub
rolb
test
adc
imul
adc
xor
mov
xor
inc
loop
or
push
test
fisubl
adc
push
pop
pop
mov
inc
or
iret
mov
dec
outsl
lock
jle
cs
mov
xor
cmc
sti
lret
mov
gs
aaa
es
sahf
ds
inc
test
aas
cmp
sbb
jno
jno
jbe
movsb
lahf
fucom
mov
lods
mov
in
popa
fwait
pushf
int
test
jo
xor
cwtl
hlt
addl
fistpl
das
xor
xlat
pop
pop
push
sbb
xchg
rorl
es
fsubs
mov
pop
movsb
lock
cmp
xchg
scas
push
mov
pop
jo
mov
sbb
in
fnstcw
push
es
mov
cmp
icebp
mov
xorb
mov
cmp
scas
in
stos
imul
mov
scas
pop
xchg
sbb
outsl
subl
push
sub
aad
addr16
sub
ret
add
xor
cmp
aaa
fwait
sbb
roll
mov
add
xor
nop
rcrb
into
loop
js
mov
sbb
insw
cld
pop
mov
divb
dec
stc
scas
test
sarb
inc
test
int3
fists
insb
rcll
pop
jl
arpl
dec
jnp
loopne
add
xchg
jns
mov
dec
mov
add
mov
jp
stos
push
adc
sbb
cmpsl
rorb
fisubs
pop
and
jno
sti
mov
mov
rol
push
movsb
loop
sub
jecxz
fcompp
adc
pop
nop
std
lods
dec
out
popa
flds
fisubrs
lds
es
mov
mov
aas
sbb
ret
out
lret
mov
lock
insl
movb
inc
stc
or
pop
or
cmp
adc
xchg
mov
push
mov
or
xor
xchg
shll
adc
ret
aad
cmpsl
mov
popa
sbb
scas
aaa
jo
loopne
jp
and
sbb
sarl
push
mov
add
fucomi
in
dec
add
popa
cmpsl
in
adc
lret
push
test
xor
pop
mov
leave
dec
movsb
inc
pop
ja
daa
jle
cmp
je
cli
sti
popf
mov
jnp
fistl
pop
fldl
imul
ss
mov
test
and
xor
pop
jmp
xor
jbe
fwait
test
test
jge
dec
js
xlat
jge
mov
xchg
pop
xchg
cmp
xlat
movsl
sbb
push
inc
cld
sbb
rol
fdivr
ret
cmpsb
frstor
movsb
jge
xchg
sbb
jecxz
push
mov
lahf
adc
or
enter
mov
cmp
sub
push
jp
mov
xor
testb
mov
popf
jae
add
out
mov
cmp
pop
das
inc
outsb
push
sub
sub
xor
lods
xorb
adc
pop
dec
adc
fstpt
stos
cli
fisubrs
shll
mov
or
xchg
or
pop
out
push
mov
daa
mov
sahf
sbb
jne
add
sub
push
pop
push
rolb
xor
mov
sub
lods
cld
ret
shlb
pusha
into
add
in
xor
test
rol
das
jl
jb
test
adc
test
dec
xchg
adc
nop
jae
push
add
rcll
outsb
add
rorb
aad
inc
mov
or
les
stos
jae,pn
repz
jae
mov
stos
xor
sbb
push
je
pusha
lods
lcall
orl
je
mov
push
adc
in
icebp
xchg
outsb
in
shrb
mov
mov
loopne
pop
adcl
push
sbb
dec
dec
and
jo
cmpsb
call
cmpsl
cmp
dec
xchg
fistpll
jl
dec
mov
sti
mull
inc
dec
enter
add
aam
sbb
in
mov
adc
rcll
sub
ljmp
pushf
jle
xchg
pop
cmp
adc
xchg
shl
into
lock
test
out
lret
push
out
xchg
xchg
es
decl
int3
mov
or
ljmp
cmc
cmp
or
sub
dec
pushf
in
push
adc
jnp
or
incl
dec
sub
adc
fadd
mov
cmp
cltd
jg
adc
ret
mov
xor
sub
jnp
push
xlat
sbb
int
sbb
sbb
out
lcall
and
fucomi
aaa
enter
out
mov
mov
and
dec
xor
mov
cmp
cmp
jb
es
mov
ret
xor
inc
mov
inc
and
in
mov
cmpsl
cmp
jo
adc
loope
dec
leave
les
sbb
xchg
pop
orl
push
sub
imul
sub
or
push
lret
xchg
xchg
xor
inc
fcmovnb
mov
or
xor
push
ficoml
out
jbe
add
fisubl
lods
mov
push
sbb
mov
jno
mov
test
or
lds
mov
fcomps
jge
pop
aaa
outsl
lret
and
jno
loopne
call
cmpsb
leave
pop
js
sbb
push
xchg
loop
or
dec
jg
push
xchg
iret
notb
sub
cltd
das
sar
xchg
js
pushf
push
sbb
in
movsb
inc
jb
dec
mov
cmp
mov
pop
movsb
sqrtps
dec
xor
jmp
cmp
addr16
jecxz
es
lcall
pop
mov
xor
cmpsl
push
ret
mov
mov
or
xor
jecxz
inc
stos
clc
insb
adcb
push
dec
clc
inc
sbb
out
mov
js
jne
std
dec
jnp
lods
pop
and
sbb
cs
test
xchg
rorl
jmp
decl
daa
pop
mov
in
sub
pminsw
test
jne
test
mov
jo
cltd
popa
xchg
loopne
push
dec
mov
sti
adc
cld
sti
adc
pop
mov
xor
aas
jecxz
arpl
pop
xchg
sbb
data16
push
out
push
andl
push
insl
outsl
cld
mov
fwait
sub
push
adcl
scas
inc
push
lahf
jmp
sbb
dec
jmp
inc
xor
jns
outsb
loop
adc
aaa
out
mov
scas
xchg
sub
loop
jp
push
jbe
inc
sub
jecxz
out
fmulp
lea
jg
push
jbe
adc
mov
push
pop
enter
mov
pop
loop
xlat
cli
pop
out
lods
mov
jmp
push
inc
fisttpll
xor
data16
ret
movsb
mov
xlat
outsb
jecxz
inc
cmp
dec
mov
jmp
aam
out
cmpsb
push
mov
in
sub
mov
jmp
sub
xor
pop
in
stos
lahf
incb
push
push
pop
std
mov
loop
jp
fnstsw
xchg
pop
in
negl
repz
adcb
aas
sahf
sub
push
xchg
or
add
sub
jge
movl
sbb
ret
fsts
sub
sti
ffree
movsb
cmp
aas
arpl
in
inc
ret
jno
call
push
cmp
pop
or
and
pop
in
lret
test
inc
jl
pusha
test
pop
into
push
mov
jge
popf
xchg
push
adc
insl
mov
and
push
mov
xor
xchg
nop
inc
and
or
out
inc
jl
pop
fcoml
ds
subl
lret
mov
cmp
int
pop
push
xor
inc
mov
mov
cmpsb
push
add
lods
aad
push
stc
cmp
push
stos
jg
xor
jo
inc
push
sbb
dec
not
mov
ffree
mov
mov
jae
out
lods
xchg
lret
in
pop
add
jmp
sub
cmp
jns
xchg
fcompl
mov
shl
ret
xor
pop
mov
ljmp
mov
fidivl
sti
dec
mov
xor
mov
xchg
repz
hlt
push
mov
sti
push
hlt
lds
ja
daa
dec
dec
xor
sbb
sbb
dec
in
dec
lahf
sahf
and
xor
sbb
adc
jmp
int
mov
out
push
adc
cmp
adc
lods
aas
xor
cld
stc
aas
and
cli
add
scas
dec
daa
pop
inc
in
out
pushf
push
pop
int
dec
testb
lock
push
and
cmp
and
and
xor
jnp
xor
cwtl
out
inc
hlt
imul
adc
loope
add
jecxz
fwait
ret
outsl
add
push
and
xchg
ret
cmc
mov
xor
lret
jae
ljmp
mov
nopl
insb
dec
testb
leave
nop
mov
xchg
cltd
adcl
mov
sbb
loopne
mov
mov
mov
cli
add
pop
mov
dec
sarl
aad
imul
push
mov
hlt
inc
push
je
ffreep
mov
jne
xchg
out
dec
mov
push
test
mov
cltd
int3
inc
and
fs
repnz
adc
xchg
push
xchg
cmp
imul
ja
loopne
scas
mov
push
icebp
adc
sub
mov
sbb
cmpsb
add
mov
mov
jbe
xor
mov
in
test
inc
icebp
jle
outsb
stc
outsl
jo
xor
or
pop
cli
or
aad
push
outsb
movsb
shrl
stc
pop
sub
adc
pand
sahf
prefetch
push
inc
pop
std
js
repz
enter
sbb
stc
jl
sub
lret
pop
test
sbb
rorl
add
sub
rcll
mov
cmp
pusha
imul
outsb
xchg
dec
outsb
insb
adc
outsb
mov
xchg
or
dec
xchg
aam
ds
lock
jae
popa
leave
cmp
in
sti
lahf
xor
and
push
rcrb
adc
and
adc
push
sbb
nop
lea
out
sbb
jge
add
push
inc
aas
sub
lret
mov
mov
xorb
rorl
mov
imul
mov
push
cmp
mov
ss
xor
out
outsl
mov
sti
movsb
add
xor
inc
fsubrl
into
xor
inc
data16
mov
xorl
std
and
add
movl
cmc
lods
lcall
mov
adc
fstpt
push
into
push
jb
ja
cmc
add
mov
xchg
pop
push
pop
jbe
addr16
out
xchg
das
in
add
lret
adc
cwtl
jns
pop
and
jl
jmp
mov
jge
jae
mov
jae
sbb
clc
lods
and
shrl
xchg
pop
or
sbb
hlt
jnp
xor
cmp
ds
inc
dec
pushw
mov
jno
xor
leave
and
fimull
push
iret
push
mov
ds
adc
mov
add
sub
adc
lds
popf
sub
mov
call
mov
and
pop
xor
adc
inc
in
hlt
lods
in
decl
dec
inc
out
jns
call
js
lcall
sbb
xor
and
gs
js
sub
push
stos
stc
dec
std
adc
cwtl
clc
push
aad
leave
test
sbb
mov
mov
push
iret
jae
dec
jl,pn
sub
jns
loopne
sub
shlb
lods
cmpsl
inc
mov
testb
jmp
ja
mov
and
sbb
ret
imul
push
mov
arpl
cmpsb
stos
mov
adc
mov
jmp
jb
dec
lock
aam
cmc
dec
xor
jp
jp
inc
call
xchg
loope
clc
cli
lods
mov
sub
hlt
mov
ret
adc
push
insl
add
push
rolb
mov
and
xor
cmpsb
jbe
adc
cmp
mov
xchg
sbb
inc
sahf
lcall
pop
mov
xchg
ret
sub
mov
movb
shl
mov
repnz
daa
pushf
sub
mov
dec
out
test
and
mov
sti
jno
or
divb
xor
sbb
xor
mov
push
stos
fists
push
insb
jnp
icebp
mov
jl
shrl
jl
int
cmp
ss
pop
sarl
adc
cmp
adc
xchg
mov
mov
scas
lock
les
adc
pop
fyl2x
push
adc
neg
mov
ljmp
and
loopne
lret
daa
cld
push
mov
xchg
imul
clc
cmpsl
clc
jp
subb
pop
dec
pop
in
jb
push
enter
je
inc
mov
and
cmpl
movsl
fidivrl
jbe
popa
pop
jbe
repnz
scas
dec
lea
and
dec
xchg
lock
pop
adc
adc
and
cmp
sub
bound
divb
jb
inc
insb
xchg
xchg
daa
lods
adc
aaa
shl
es
jecxz
insb
andl
xchg
mov
cmp
fbstp
inc
sub
jae
adc
test
xchg
in
push
lcall
scas
or
mov
and
dec
cwtl
bound
jae
outsb
rclb
cwtl
xchg
addr16
aas
and
jle
xor
mov
xor
jp
int3
push
xchg
lret
mov
jge
mov
loop
mov
vmovntps
inc
mov
pop
pop
or
add
roll
mov
or
or
lock
adc
aaa
or
and
push
popf
shr
and
pop
xchg
shrb
or
subl
add
fsubrl
fsubs
pop
jnp
dec
imul
xchg
xchg
lret
sbb
pushf
mov
mov
inc
and
stc
dec
scas
or
mov
test
test
push
sub
mov
mov
or
adc
mov
adcb
lcall
add
sarl
push
lods
fdivr
adc
rclb
sub
test
pop
rcrl
outsl
adc
adc
pushf
call
push
mov
ljmp
sbb
clc
shlb
out
xor
sub
fxch
decl
das
add
jbe
mov
daa
xlat
sub
xchg
mov
je
out
sub
mov
rcrl
jnp
jbe
mov
stos
int3
cmp
push
or
ficomps
imull
cmpsb
jno
test
adc
cmp
rcl
push
imul
es
push
js
xlat
xor
lea
push
and
int3
jo
into
jnp
mov
std
pop
shll
aas
jl
inc
adc
dec
lds
insl
stc
jae
xchg
inc
lret
les
push
xchg
les
cmp
jecxz
pushf
imul
dec
shlb
imul
xchg
data16
add
shlb
mov
mov
arpl
daa
pop
shlb
insb
cltd
add
push
sbb
iret
mov
shl
adc
add
mov
push
jnp
std
sbb
xchg
int
push
and
jae
jmp
mov
xchg
mov
stos
lds
dec
loop
int
jnp
mov
inc
div
ret
ljmp
pop
scas
push
in
icebp
xchg
pop
push
ds
cmp
cmp
arpl
xchg
pop
pusha
pop
dec
iret
popf
add
fnstcw
sbb
fisubrl
popf
push
ret
cmp
adc
fwait
shll
fcomps
icebp
jl
xor
pop
aam
lret
sub
ja
inc
vmovss
jp
psubusb
mov
xor
add
xchg
adc
fs
std
push
test
inc
mov
pop
into
pop
mov
outsl
mov
push
xchg
sbb
and
pop
push
lret
add
jp
dec
and
dec
outsb
adc
in
std
or
pop
jecxz
pusha
sub
sub
push
xor
mov
hlt
cs
ret
or
addr16
into
out
cmpb
sub
dec
or
inc
test
sbb
dec
jae
mov
sbb
cs
push
ret
or
cmp
arpl
in
cmp
in
push
fisubrs
pushf
jo
in
sti
sub
dec
adc
cmc
xchg
ds
aam
gs
add
cwtl
aaa
subl
in
xchg
mov
push
rep
sub
sub
mov
dec
cmp
xlat
xor
and
test
into
test
arpl
add
jbe
loope
int3
arpl
movsl
mov
call
mov
daa
outsb
push
cmpsb
push
or
mov
lahf
dec
jb
jae
sbb
out
cmp
inc
sbb
lret
and
dec
jg
inc
push
subb
js
dec
sbb
shlb
mov
cmpsl
dec
mov
mov
inc
loop
sub
ljmp
dec
fsubr
pusha
xchg
outsb
decb
lock
jb
mov
rclb
imull
xchg
aaa
xor
js
xor
mov
push
stos
push
sbb
xor
jle
push
pop
push
mov
jne
inc
nop
push
fs
sub
into
shlb
xor
fs
insb
mov
jns
cmpsl
dec
test
dec
pop
sbb
xor
fsubrl
arpl
shl
push
xchg
test
aam
std
inc
mov
jmp
mov
rcrl
fcmovnu
push
cld
xchg
int
shrl
jo
pop
iret
inc
jno
push
dec
icebp
js
add
insb
fidivs
jbe
test
lret
int3
mov
repnz
decb
sub
out
mov
xchg
aad
cmp
push
leave
cld
cmpsb
dec
dec
push
cld
scas
jb
inc
repz
sbb
mov
inc
cwtl
mov
xor
sbb
daa
sbb
sbb
mov
fstpt
push
stc
lock
cli
daa
rorl
das
loop
shlb
cmp
enter
aaa
aas
mov
out
aam
mov
or
push
scas
daa
push
push
orl
mov
pop
add
cli
xchg
fs
xchg
inc
ret
idivb
lcall
inc
das
ds
or
mov
int3
popf
jl
sub
cmpsl
lock
xchg
mov
stos
pop
loope
aas
rcll
add
sbb
add
push
subl
loop
outsb
mov
xor
pop
fucomip
mov
adc
jp
outsb
jne
xor
aam
sub
xor
xor
cld
sub
and
rolb
lds
imul
stc
adc
out
repz
sbb
sbb
cmp
cltd
stos
loopne
jo
mov
addr16
arpl
push
jmp
push
fwait
ds
movsb
repz
and
cwtl
pop
xchg
and
pop
dec
addl
mov
stc
wrmsr
aaa
inc
sbbl
leave
inc
push
cmp
and
out
imul
adc
dec
test
adc
cmpsb
fisubl
in
inc
push
addl
cmc
push
aam
jns
outsl
dec
adc
push
scas
push
jno
add
call
inc
test
and
cmp
cmpb
outsl
xor
sarl
loop
xor
jp
or
pop
jae
lret
out
push
jnp
dec
mov
add
inc
lea
pop
mov
xchg
test
xchg
pop
mov
mov
mov
scas
shll
push
icebp
push
repnz
mov
jno
jns
addb
xor
push
cmp
pop
lcall
adc
sub
mov
popf
adc
push
add
mov
mov
lods
jne
popa
push
dec
xchg
lcall
fwait
pop
adcl
mov
insb
sub
shrb
pusha
fcoml
adc
insl
inc
inc
push
out
pop
mov
inc
push
mov
xor
sbb
jp
and
sbb
mov
aaa
ljmp
jo
and
pushf
xchg
mov
aam
and
sbb
out
fs
xorl
xchg
push
jp
xchg
and
xchg
lock
pop
mov
mov
sti
sbb
jo
rorb
sbb
xorl
and
jecxz
leave
fbstp
mov
and
inc
mov
les
es
popa
je
sub
leave
pop
insb
xor
sub
test
fdivs
jl
dec
dec
mov
cmpsb
ljmp
into
adc
mov
shll
xchg
lock
xor
cmp
clc
sub
cld
fisttpl
das
mov
xor
into
test
enter
scas
lods
mov
inc
or
scas
icebp
decb
aas
cmp
imul
hlt
cmc
inc
mov
mov
pop
sub
dec
scas
sbb
jg
mov
and
rcrb
or
test
movsb
xchg
or
sub
xor
shlb
inc
shrl
pusha
fldpi
in
loop
mov
push
or
scas
inc
repnz
sub
sub
imull
jb
or
into
scas
dec
aaa
add
mov
push
ja
xchg
xchg
dec
in
clc
pop
lock
call
movsb
cli
test
decl
xchg
dec
outsb
mov
or
xorb
dec
shll
xchg
shlb
pop
cmpsl
out
jmp
in
inc
dec
xlat
xchg
lock
inc
enter
mov
dec
mov
call
sub
dec
xchg
dec
mov
call
pop
inc
jmp
shrl
adc
jp
fstps
or
push
outsl
mov
data16
adc
pushf
cmp
and
jnp
adc
mov
loop
adc
xor
enter
mov
mov
sbb
jge
data16
push
xchg
jne
push
inc
sbb
sbb
jbe
cs
mov
jb
xchg
cltd
xchg
pop
hlt
cmpsl
fsubr
sub
std
sub
add
cmp
pop
inc
sub
xchg
pusha
mov
lret
test
aas
arpl
push
arpl
test
jl
sbb
jge
aaa
inc
in
fsub
scas
mov
scas
push
pop
pop
loope
das
sub
mov
and
stos
and
sbb
xchg
mov
popf
inc
dec
pop
jo
sbbb
addb
popf
aas
lods
daa
int3
inc
xchg
inc
dec
call
cmc
mov
popf
mov
xor
jmp
adcl
dec
into
sbb
imul
sbb
scas
and
fidivl
daa
incl
or
adc
jo
and
lret
and
fisttpll
fists
lcall
int3
cli
xchg
popa
in
inc
xchg
mov
cld
jnp
ret
ljmp
arpl
rcr
out
or
push
mov
xor
lea
xchg
push
mov
scas
and
adc
pop
mov
movsb
xchg
push
cmp
insb
hlt
add
jle
sbbb
ret
dec
push
sub
addr16
mov
sbbb
mov
loope
fs
fdivrs
sub
aam
and
movsl
shll
js
inc
xchg
aam
lods
xor
sub
test
pushf
ret
pusha
cmpsl
mov
or
cmp
adc
lret
rolb
inc
loope
xor
xchg
popa
insl
inc
lods
xor
mov
jecxz
adc
mov
mov
or
cmpsl
adc
subl
xlat
movsl
xchg
inc
aas
jne
xor
cmc
and
push
cmp
push
dec
test
push
sbb
push
dec
mov
mov
or
das
push
xchg
dec
jmp
dec
xchg
cmp
xchg
in
cmpl
jle
gs
loop
mov
fildll
notb
add
in
les
cvtps2pd
fimuls
ror
mov
and
push
popf
jmp
mov
sub
xchg
dec
mov
sbb
fisttpl
jecxz
xor
fistl
outsl
test
xor
dec
ret
mov
push
cmp
scas
into
mov
or
jae
jg
icebp
and
push
lock
jmp
or
push
adc
jg
jg
sub
sub
dec
cmpsl
push
jns
push
lods
test
movsb
rclb
jbe
lds
push
xlat
push
cwtl
cmp
xlat
jle
fwait
and
test
in
aas
movl
fdivrl
js
push
adc
or
mov
pop
scas
pop
lea
fnstenv
jp
xchg
das
lret
push
push
dec
clc
icebp
mov
jo
mov
fldl
imul
push
push
mov
rcrl
jmp
pop
push
fs
fdiv
cmp
push
push
loop
mov
xor
adc
sbb
fdivrl
lods
std
add
fcomi
sbb
in
bound
sbb
inc
sbb
pop
les
test
jg
fcompl
pop
ret
sbb
es
sbb
mov
and
ds
and
mov
into
push
inc
jge
int
mov
mov
sbb
cmp
jb
pop
xchg
dec
dec
insb
mov
hlt
hlt
and
shlb
pop
mov
mov
cmc
or
pop
sarl
pop
jecxz
sahf
rcr
mov
out
sbb
popa
dec
cmc
imul
jo
adc
push
std
cmp
cltd
inc
push
sub
push
ds
mov
fucomp
xchg
jg
and
push
leave
fwait
add
aad
ds
bound
adc
jnp
mov
mov
and
popf
rcrl
cli
inc
jne
jge
mov
sub
sbb
or
sub
pop
xchg
lock
lret
cld
into
xchg
dec
pusha
jmp
andb
cmpsl
xchg
aad
push
xor
push
aad
jae
xor
inc
sub
cld
movsl
jb
test
push
test
jae
jne,pt
lods
sbb
ret
scas
jno
mov
or
inc
sub
jno
mov
call
movsb
lock
xchg
jnp
mov
cmpsl
xchg
mov
pop
pop
lahf
imul
stos
imul
bound
je
dec
ss
lods
mov
lds
pop
sbb
push
jge
ja
mov
fisubs
mov
inc
mov
jne
xor
jo
jmp
push
sbb
lods
int3
pop
sahf
pusha
pusha
jae
mov
sub
sub
fistpl
xchg
nop
push
loope
sub
stos
je
cmp
in
incb
jge
lcall
and
iret
jle
gs
loope
shl
aad
xor
and
pop
addl
leave
jl
push
dec
mov
inc
cmp
repnz
pop
mov
stc
test
in
xchg
sar
xchg
test
adc
test
mov
add
mov
jno
mov
mov
aad
mov
loopne
cltd
leave
adcl
xor
and
inc
movsl
or
pop
inc
xchg
or
movsl
cmpsb
shll
dec
repz
adc
push
pop
mov
cmpl
cli
or
cld
xor
jo
cwtl
into
push
or
dec
jl
and
jne
xchg
cmpsl
dec
xor
sub
push
dec
rcrl
adc
inc
xor
insb
jl
loopne
out
dec
mov
daa
mov
pop
sub
jge
hlt
push
in
sarl
push
sbb
subl
mov
or
mov
adc
mov
adc
cmp
scas
inc
movsb
nop
ds
push
movd
out
ds
push
enter
ja
call
jns
pop
inc
scas
sbb
pop
dec
decb
loopne
xor
push
clc
mov
dec
push
add
hlt
xor
xor
or
stos
shll
sub
js
popf
xor
and
jns
xor
xor
aam
mov
stos
not
adc
xchg
das
popa
je
fdiv
cmp
idivl
leave
xchg
pop
test
das
mov
push
pop
aas
pop
dec
xchg
jp
mov
xor
mov
pop
inc
fmull
aas
faddl
xchg
clc
add
cs
pop
mov
mov
or
clc
call
and
sbb
cmp
nop
stos
xor
dec
add
movsl
mov
outsb
test
xchg
pop
lds
aaa
loopne
push
call
adc
xor
out
clc
push
scas
and
push
sbb
lods
pop
fstpl
xor
and
xchg
mov
ror
in
aad
cmp
mov
fnsave
sti
pop
jecxz
jae
cmc
xlat
lods
in
ds
mov
sub
push
jo
xchg
pop
push
out
fnstenv
inc
scas
test
sti
xchg
movsl
jbe
nop
lea
dec
pop
loop
or
cmpsl
hlt
jg
jp
daa
pop
std
cmp
mov
in
mov
scas
in
jae
insb
jecxz
mov
cs
fstpl
fucomi
popf
pop
shll
mov
stc
rcrl
fisttpll
iret
push
and
push
orb
in
fdivrl
sbb
add
lret
jge
test
fnstenv
inc
sub
movsl
cltd
or
xchg
cmp
lods
pop
fldl
popf
cmpsl
pmaddwd
and
xchg
outsb
xor
nop
jmp
cmp
clc
mov
cmovo
ds
xor
adc
xchg
call
push
sti
add
stos
in
inc
pop
dec
out
lret
and
enter
push
sbb
xchg
push
adc
aam
mov
std
sahf
test
jns
sub
into
push
jbe
sub
nop
pop
aas
popf
jno
insl
popa
xchg
lods
shl
sub
mov
mov
rcl
push
and
and
pop
pop
jge
aad
and
stc
stos
sbb
sarb
jns
mov
jl
or
mov
loop
add
inc
ret
hlt
dec
in
inc
out
cltd
add
xor
inc
mov
mov
mov
out
xlat
icebp
push
test
clc
dec
adc
int3
xor
sub
adc
daa
pop
lock
dec
cld
int
int
push
jl
xchg
push
mov
into
roll
sub
repz
loopne
mov
and
cld
sub
jbe
dec
ja
cmp
sub
divl
hlt
nop
rclb
sub
lret
stos
adc
jnp
pop
ja
lahf
mov
adc
xchg
shlb
mov
mov
pop
xchg
push
subps
scas
imul
ja
es
addb
ss
and
cmp
js
xlat
std
xchg
jnp
fildl
cmp
lcall
scas
cltd
stos
jecxz
sar
mov
or
cmp
push
lock
mov
rorb
or
cmp
out
outsb
xor
or
adc
or
or
pop
push
fnstsw
cmp
sub
cmp
test
test
dec
mov
mov
add
sbb
nop
inc
xor
loopne
jne
das
ja
add
mov
jnp
hlt
out
dec
cmp
dec
mov
loop
sub
cmp
shrb
les
mov
sbb
pop
fdivrs
ficoms
dec
ja
jo
mov
loopne
mov
mov
xor
pop
and
fmull
cmp
adc
je
pop
in
pop
iret
test
nop
and
xchg
nop
insb
daa
fwait
dec
mov
or
dec
cwtl
adc
push
mov
inc
add
sbb
sbb
cmpsl
pop
xchg
xor
pusha
mov
mov
jno
mulb
iret
out
jp
mov
add
popa
frstor
call
fldcw
scas
jge
fcom
ss
xchg
int3
loop
or
add
cmp
jle
dec
lods
dec
xchg
push
nop
mov
out
sar
add
push
ds
lea
test
into
push
movsb
mov
mov
movsb
in
dec
enter
cmp
cmp
inc
andb
jbe
adc
repnz
mov
xchg
fstps
inc
loopne
sub
cmp
mov
aad
dec
orb
push
push
jge
add
jne
lock
lret
daa
sbb
outsb
adc
sar
mov
movsl
mul
test
test
sar
das
mov
dec
aad
pop
mov
fsub
outsb
sbb
sub
push
sbb
rorl
jecxz
add
sbb
sbb
lods
les
sahf
xchg
fistpll
xchg
push
repnz
lods
hlt
movsb
push
dec
cmpsb
iret
dec
int3
jb
cmp
adc
xchg
and
push
inc
push
movsl
jb
xor
dec
jae
jne
addr16
repz
fcomps
jbe
sub
jecxz
xor
mov
sbb
sti
lret
rolb
arpl
data16
push
cmp
icebp
xchg
fldenv
ss
mov
lds
and
js
add
repz
inc
scas
int
add
stos
enter
push
mov
int
adc
test
int
mulb
and
cmp
adc
lcall
clc
data16
enter
cmpsl
orb
mov
lea
sub
out
push
xchg
add
push
xchg
les
mov
mov
loop
out
jmp
jp
lahf
adc
lods
shll
int
negb
and
out
or
push
in
jmp
xchg
jg
pop
or
lahf
and
inc
mov
es
jne
pusha
push
jbe
dec
and
je
iret
and
dec
lods
sbbb
sub
mov
jmp
mov
sahf
lret
mov
cmpl
push
std
xor
test
es
cmp
push
adc
xchg
sbb
test
sub
testl
xor
add
add
mov
jl
pop
icebp
pop
loop
sbb
pop
mov
lods
push
push
sub
add
inc
adc
mov
add
mov
out
inc
add
pop
data16
rcrl
xor
je
pusha
push
lds
sub
insb
pop
mov
lods
mov
push
cmc
xor
in
clc
ds
fmull
xchg
or
into
xor
mov
mov
mov
sub
xchg
xchg
xlat
jmp
or
stos
repnz
or
fs
in
jno
outsl
sub
xchg
push
aaa
testl
sbb
aad
in
push
ss
cmp
xor
loope
repz
sub
scas
cwtl
frstor
les
sbb
pushf
adc
mov
mov
icebp
sbb
insl
lock
or
pop
lahf
cmp
out
mov
sbb
jns
or
and
jmp
mov
imul
cmpsl
pop
xchg
cmp
inc
dec
fidivrl
inc
cld
in
out
lahf
shlb
sti
inc
jle
gs
mov
out
cmp
adc
jl
and
loopne
mov
rcrl
push
stos
or
enter
mov
xchg
pop
in
rcrl
ret
mov
mov
and
imul
sub
aas
pop
push
icebp
out
icebp
cmpsl
push
add
inc
xlat
imul
scas
jnp
int
mov
sahf
adc
sub
das
jno
xchg
push
add
xchg
cmp
or
cmc
mov
repz
fsub
aas
or
mov
fists
sub
sbb
leave
into
in
leave
mov
aad
or
cld
jbe
addr16
int3
xchg
mov
test
in
push
in
dec
inc
ss
cli
test
add
mov
out
jecxz
repnz
int3
push
add
jno
movsb
notl
stos
sbb
or
mov
sub
fiaddl
fidivs
push
popa
loope
imul
dec
or
mov
daa
loopne
mov
cmp
or
pop
dec
stos
mov
sbb
sub
push
push
sbb
pop
mov
orb
fisttps
xchg
cmp
mov
sbb
movsb
xor
cmp
push
xor
mov
out
roll
push
add
jg
and
mov
push
loop
outsb
jno
les
push
subl
mov
adc
dec
daa
inc
ret
js
into
gs
in
data16
notb
jne
pop
sub
inc
daa
mov
lea
push
mov
outsb
out
add
mov
js
mov
and
sbb
movsl
add
sbb
mov
push
das
mov
xchg
dec
out
or
sbb
cmp
out
lods
add
mov
jnp
mov
push
lcall
fbstp
dec
ret
in
push
pop
push
out
int3
mov
or
pop
xor
pop
ss
mov
ss
pop
adc
fisttps
in
out
xlat
lea
aad
hlt
mov
sub
gs
shlb
mov
push
lcall
sub
and
push
jne
lds
mov
lret
add
push
ds
fwait
sbb
mov
insb
jle
mov
test
rorb
int
insl
xor
dec
xchg
inc
pop
and
jnp
or
and
bound
cmp
stos
and
adc
fwait
aam
ja
xor
add
div
es
add
dec
lods
ds
pop
pushf
test
addr16
ds
adcb
fdivrs
mov
inc
pop
andb
cmp
pusha
adc
ret
into
aad
sub
inc
ret
cmpsl
xchg
sub
dec
je
pop
rorb
mov
in
pop
mov
mov
out
cmpsb
inc
mov
cltd
lock
movsb
inc
jo
push
addr16
dec
out
dec
aam
sbb
dec
pop
dec
adc
mov
or
and
andb
or
data16
sti
arpl
fsubr
mov
pop
jae
pop
inc
into
push
jae
push
in
loopne
rcll
pmaxub
call
xor
nop
inc
adc
or
dec
sub
lcall
mov
and
nop
movl
push
iret
or
movl
xchg
sbb
sub
add
jae
mov
aas
ja
dec
pushf
aad
push
jne
sahf
or
mov
fbstp
add
cmp
fdivr
cs
add
mov
cmp
hlt
cmp
dec
andb
push
sbbb
std
lahf
sub
cld
icebp
data16
jl
stos
adc
jecxz
pusha
jl
push
pop
jns,pt
add
mov
xchg
shll
push
lods
nop
lock
jb
mov
aaa
mov
pusha
cmpsl
enter
push
jnp
xor
pusha
sbb
inc
mov
call
adcl
push
fldt
xor
xor
sbb
popa
pop
mov
adc
mov
xchg
sub
pop
ror
imul
pop
mov
push
call
sahf
jb
jno
cld
daa
fcoml
fucom
cli
sub
sbb
push
xor
cmp
and
and
push
mov
cmp
sbb
push
mov
out
inc
lods
jne
jle
sbb
jp
cmp
mov
dec
xor
push
dec
dec
sbb
sti
scas
push
icebp
notb
hlt
xor
and
mov
xor
mov
lret
jnp
mov
or
insl
xchg
or
insl
test
movsb
mov
push
mov
fsub
popl
mov
mov
jg
lea
jle
push
mov
and
push
int3
add
jns
lods
jnp
loope
sbb
cmp
dec
notb
sub
lret
call
pushf
pop
aas
push
push
mov
mov
repz
xchg
mov
or
xor
popa
push
lcall
insb
test
sti
clc
or
shrl
xlat
mov
or
shrl
fwait
in
xchg
lret
xor
aas
sub
jne
pop
xchg
push
out
jp
leave
xor
mov
jle
stos
mov
add
pop
scas
inc
xchg
jno
xchg
push
jns
push
xchg
jg
mov
and
sub
leave
mov
mov
xchg
pop
nop
cmp
fwait
cmc
popa
pop
lahf
sbbb
mov
rcll
xchg
mov
cmp
mov
sub
fisubrl
jp
loop
jp
jecxz
outsb
push
mov
daa
int
jmp
fwait
das
clc
sbb
cltd
jo
into
shrl
aaa
iret
sbb
cmpb
cmpsb
adc
inc
push
out
inc
push
ret
pop
mov
pop
cmp
lock
sub
xchg
xchg
adc
adc
je
sub
cmpsb
loop
adc
lcall
imul
fimull
fmuls
push
inc
loope
mov
sbb
or
mov
jno
inc
cs
fidivl
dec
aaa
aas
lret
in
ss
jl
repnz
movsl
or
or
ljmp
or
adc
add
lret
fldcw
add
pop
testl
test
stos
cli
sbb
arpl
sub
loopne
loope
cmp
mov
or
idivb
ja
js
sbb
jle
add
push
jns
into
sub
mov
fsubl
ds
pop
xchg
div
dec
dec
adc
sub
push
push
mov
lea
test
pop
sbb
sbb
push
test
xor
xchg
addb
jne
mov
inc
cmp
xlat
loope
iret
mov
pushf
sub
mov
dec
lahf
mov
sbb
imul
in
das
stc
or
pushw
ret
jl
pop
mov
push
aad
sahf
and
push
hlt
lds
lds
mov
push
popa
xchg
add
sub
or
inc
add
or
inc
lock
inc
jg
pusha
fcmovnbe
xor
cli
sbb
in
cmp
ret
and
xor
pop
sbb
clc
jle
adc
dec
add
xchg
pop
pusha
dec
lods
andl
imul
ljmp
and
inc
dec
out
cmp
mov
out
jecxz
or
sub
mov
lcall
dec
jo
jecxz
xor
imul
or
test
das
stos
add
xchg
jne
ret
addr16
add
mov
jb
adc
jg
insl
and
jns
lock
adc
and
add
insl
int3
mov
cld
or
lock
xor
pop
jb
out
dec
push
shlb
mov
loopne
xchg
pop
jp
test
dec
aaa
inc
cwtl
mov
xor
xchg
jns
lds
aam
xlat
lret
pop
lret
orl
adc
les
xchg
inc
pusha
andl
stos
xchg
lock
push
lret
fwait
mov
icebp
sbb
and
pop
xorl
nop
mov
push
inc
xchg
jne
test
mov
mov
aad
das
or
mov
xchg
out
scas
jb
mov
dec
lcall
test
and
ret
lods
mov
fildll
movsl
pop
into
add
add
inc
cmp
cld
mov
add
fucomip
fisubl
das
jno
sbb
add
jg
lea
pusha
cmp
out
add
lods
mov
ljmp
pop
imul
xchg
xor
jnp
mov
push
xorl
jmp
or
cwtl
sbb
lret
dec
dec
test
push
mov
add
arpl
imul
lods
xchg
jns
or
and
xlat
pop
cmp
jbe
or
or
cmp
add
and
movsl
add
ja
cwtl
inc
in
stos
sahf
add
cld
in
arpl
in
scas
and
inc
xchg
sbb
test
dec
decl
mov
fistpll
xor
call
xchg
mov
scas
dec
lret
sub
std
in
push
push
ret
jge
jle
fwait
lea
sub
stc
jbe
pop
sub
sub
add
mov
jns
sahf
add
dec
out
mov
sub
int3
mov
leave
or
cmp
orb
pop
mov
or
dec
add
inc
jmp
in
pop
aaa
lea
arpl
add
sbb
push
fcoms
shlb
adcl
cmp
cmp
popf
fldcw
js
aam
std
lods
dec
movsb
xchg
jns
pop
pop
pop
out
lds
sbb
popf
push
add
pop
pop
adc
sub
jo
movl
imul
mov
iret
sahf
inc
inc
in
test
fs
push
ret
mov
jo
andb
movsl
pop
mov
cmpb
pop
sbb
cld
aaa
imull
xchg
adc
mov
add
in
jle
loopne
mov
lret
mov
xchg
mov
adc
pop
out
fstps
stos
gs
test
cld
mov
pushl
or
cmp
add
pop
push
jbe
mov
xchg
sub
xchg
roll
mov
jo
pushf
psllq
mov
je
pop
sub
test
pop
cmpsl
sub
xchg
popa
ljmp
in
mov
out
pop
in
inc
push
xchg
dec
das
mov
inc
lock
mov
fadd
dec
and
mov
call
xor
mov
mov
sbb
dec
cmp
xor
and
sub
and
pop
pop
arpl
pop
arpl
mov
cmp
xor
aas
imul
mov
xor
cmc
dec
sub
repnz
and
adc
dec
ret
add
or
sbb
movsl
xchg
fnstenv
and
and
xchg
pop
sub
ja
mov
mov
mov
mov
in
jno
cmc
movsb
ljmp
aaa
push
enter
jbe
fwait
mov
lea
in
push
enter
scas
dec
mulb
js
mov
mov
push
pop
xchg
fnstcw
jg
xor
ret
mov
scas
adc
repnz
pusha
je
pop
pop
jne
fisubs
sub
sub
xor
fstpl
pop
out
cwtl
push
mov
lods
or
push
aad
lret
cld
push
fcomip
test
leave
push
lds
lods
outsl
push
not
std
jge
inc
push
sahf
ret
fstl
adc
add
jbe
fcomi
test
test
scas
push
cmp
dec
scas
xchg
pushf
ror
stos
jg
xor
pop
jle
cmpsl
lret
inc
clc
xor
pop
or
mov
push
or
mov
fisttpll
mov
cwtl
dec
or
mov
push
sub
xor
mov
mov
jbe
fmuls
push
fcomi
ja
test
pop
inc
mov
dec
hlt
cmp
faddp
sarl
cmp
jae
repnz
mov
mov
cmp
push
push
iret
mov
cmp
scas
rcll
fnstcw
mov
push
xchg
out
lcall
scas
jle
adc
fcomp
orb
rclb
shrl
cmp
sub
xchg
sti
mov
xor
stos
cwtd
ror
mov
and
jno
sbb
push
test
lahf
mov
adc
dec
mov
lea
lret
movsb
xor
sub
setle
test
hlt
pop
rolb
cwtl
repz
and
into
adc
icebp
test
pop
int
inc
inc
and
pop
loopne
inc
mov
mov
test
or
negl
ret
int
xorb
sub
rcr
xor
xchg
int
jo
aaa
dec
dec
cli
inc
into
jns
daa
imul
push
xorb
xor
push
jnp
xchg
sub
mov
xchg
icebp
cwtl
cli
jae
clc
add
int
sbbl
sbb
cmp
out
rcrl
sbb
nop
inc
rclb
insl
mov
mov
add
xchg
ret
out
rorb
cmp
xor
aad
pop
xchg
mul
in
xchg
mull
jl,pt
lret
sbb
push
fisttpl
imul
stos
jge
sbb
sbb
push
fcmovne
xor
fs
jle
mov
push
testl
lahf
test
int
cltd
aam
dec
sub
outsl
push
jle
and
ja
test
mov
movsb
mov
mov
mov
pop
or
lcall
or
stos
and
repz
pop
movsl
sbb
mov
fadd
xchg
add
or
pop
in
adc
push
inc
cmp
scas
or
nop
lods
jge
xor
ljmp
cmp
pushf
repnz
ret
rclb
xchg
sub
shlb
mov
pushw
mov
adc
push
loopne
jmp
loopne
push
cmpsb
aam
sbb
mov
cmp
or
ja
lret
rclb
mov
mov
add
xchg
add
not
shrl
movsb
inc
push
clc
xlat
dec
jo
sub
scas
xor
nop
es
jne
lods
fwait
push
movsb
in
aam
inc
sbb
out
daa
lds
insb
out
jne
xchg
inc
mov
movsl
jbe
jmp
xchg
inc
push
mov
aam
jg
sbb
xor
insb
dec
rcrb
mov
outsb
dec
mov
js
idiv
es
cltd
cmp
mov
repz
xchg
sub
sub
push
ret
jl
loopne
insl
dec
pop
mov
mov
push
sbb
jbe
xchg
inc
loopne
mov
mov
shll
inc
ja
xor
stos
xor
enter
lds
ficoml
das
mov
inc
push
and
outsb
icebp
insb
jns
mov
add
imul
push
inc
lret
popa
mov
sub
xor
aad
pop
xor
mov
adc
dec
mov
gs
mov
mov
ljmp
push
inc
mov
in
cmpsb
stc
jmp
sarb
fwait
lock
int
mov
jmp
cmp
popa
daa
adc
xchg
inc
push
xor
cmp
xchg
popa
and
cwtl
push
mov
inc
pop
hlt
lea
mov
test
in
xlat
xchg
add
jp
clc
in
inc
stos
shrb
xchg
push
cmp
mov
das
clc
out
jmp
sbb
imul
gs
xchg
jo
xchg
push
movsl
dec
push
adc
imul
adc
test
cmc
sub
jle
jno
sbb
rcl
dec
pop
mov
mov
push
testb
adc
xor
in
push
push
and
push
push
xlat
mov
js
lea
add
sbb
lea
aas
xchg
movl
enter
pop
lcall
int3
sub
cmc
std
add
mov
mov
push
jae
jmp
xchg
jbe
add
pop
dec
sub
cmc
jp
out
out
pop
call
adc
fisubrs
xchg
xor
mul
xor
nop
sub
jl
or
jne
cmp
add
std
adc
lahf
cmp
xor
dec
lret
les
and
imul
int3
jbe
aam
sub
movsl
insb
mov
fiadds
xor
and
cmp
aad
mov
mov
push
test
push
cli
push
mov
hlt
daa
inc
push
into
push
adc
cmp
mov
out
insb
jmp
sbb
xchg
mov
xchg
mov
inc
in
inc
rcrl
dec
rcr
jmp
jnp
in
out
or
jns
shl
xacquire
or
rorl
dec
dec
sbb
xchg
jp
xchg
test
orl
adc
jne
mov
int
movsb
xchg
mov
xchg
xchg
pop
xlat
and
pop
pushf
inc
stc
mov
bound
xor
jb
or
cmp
mov
pusha
rolb
mov
clc
jle
mov
dec
in
mov
mov
movl
mov
mov
cli
gs
movsl
cmpl
sbb
sahf
inc
push
imul
insl
es
jne
add
xchg
sbb
loope
mov
rcl
pusha
xchg
cmp
mov
and
std
xchg
inc
and
lods
hlt
sbb
dec
push
mov
shll
jnp
push
insb
xchg
aaa
jb
dec
scas
sbb
jae
negb
xorl
xchg
leave
ja
test
addr16
add
add
sbb
out
dec
xchg
adc
or
pop
inc
inc
ficomps
jnp
mov
fcompl
mov
sbb
mov
xlat
cld
mov
test
push
sub
inc
sub
pop
stos
cmpsl
xchg
xor
test
cmp
jl
pop
cmp
jp
arpl
scas
sbb
mov
fcoml
fidivl
scas
loope
jae
movsl
outsb
add
pop
mov
cs
sbb
shl
pop
fists
hlt
xchg
mov
aas
clc
subl
test
fsubrs
jae
cwtl
cmp
inc
jb
push
ds
movsb
cwtl
loop
icebp
ljmp
push
mov
pushf
and
rcr
leave
xor
sti
ja
inc
aaa
or
inc
or
arpl
cmpsb
popa
ret
mov
push
pop
jns
xor
inc
xor
fidivrs
enter
leave
mov
adc
jns
or
stos
or
or
xchg
pop
pusha
jp
test
out
and
or
inc
xchg
mov
and
cs
fwait
push
jnp
add
arpl
lds
inc
adc
mov
sub
imul
jae
popf
daa
movd
and
cmpsb
lret
push
dec
sbb
mov
call
repz
jle
rcrb
push
sbb
push
shlb
and
xor
lea
sub
inc
inc
int
mov
cmc
inc
push
push
mov
or
fwait
std
inc
xchg
inc
mov
inc
ret
filds
fs
cmp
push
jb
mov
lcall
push
mov
pop
push
xchg
dec
cs
and
pop
nop
rorl
mov
xor
cs
push
dec
dec
cmpsl
mov
mov
xor
mov
mov
xor
jmp
fadds
jno
test
sbb
xchg
cld
cmp
outsl
pop
lods
ror
daa
push
psllq
sar
mov
imul
cld
adc
cld
iret
arpl
adc
je
jl
mov
ret
cmpsl
pop
mov
fldt
push
xor
add
negl
and
imul
pop
xor
scas
movsl
lods
sub
out
push
or
test
in
ret
pusha
push
jbe
sbb
insl
push
loop
jns
mov
dec
imul
aaa
into
mov
cmpsb
adc
int
std
xchg
and
fldcw
push
mov
dec
push
stc
push
int
or
cmp
push
bound
and
popa
cmp
mov
jns
sahf
xor
dec
repnz
imul
stc
adc
test
jg
jbe
in
scas
insb
mov
xchg
pushf
pop
sbb
push
popl
dec
aaa
je
mov
lret
ret
fwait
lds
stos
add
out
add
rcr
and
mov
and
mov
leave
xchg
mov
pop
dec
clc
fimull
stos
push
sbb
mov
mov
sbbl
in
push
icebp
mov
dec
cmovno
fcmovne
sub
iret
ss
add
sub
xchg
inc
out
int
xchg
leave
inc
rcrb
call
cmpsb
out
loop
lret
dec
es
or
or
loope
push
sbbb
aaa
xchg
mov
aad
adc
sti
sub
into
xlat
or
cltd
xchg
iret
and
push
movsb
addl
loop
dec
aad
push
jl
out
rcrb
sub
xor
pop
sub
das
stc
popa
popf
push
push
mov
sub
rolb
add
push
push
mov
jecxz
lods
hlt
rcr
or
xor
sub
data16
test
dec
pop
mov
insl
fcoml
sub
push
aam
stos
mov
insb
mov
and
dec
dec
or
push
sbb
sahf
sbb
inc
scas
stc
jp
jns,pt
adc
pop
mov
out
push
notb
cmp
lea
mov
cmc
lock
hlt
adc
pop
aad
out
mov
sub
pop
sub
jb
mov
divl
xchg
mov
movsl
or
ficomps
mov
les
mov
mov
add
ret
cmc
sub
mov
ret
arpl
in
insw
in
in
pop
inc
sub
aaa
sbb
dec
xor
cmp
sti
sbb
pushf
jae
cmp
bnd
inc
xlat
aad
inc
rcrl
xchg
add
jnp
lahf
leave
and
and
mov
cmp
arpl
icebp
jb
sub
push
or
lods
add
mov
cmp
adc
sbb
je
add
and
sub
xor
lock
movsb
lahf
jae
fmul
push
call
sub
lock
sbb
pop
cmp
adc
cltd
sub
cmp
sub
ljmp
cmp
jns
and
xrelease
xchg
adc
sub
inc
jns
fstpl
adc
inc
xchg
xor
fistps
xor
dec
ja
loopne
subb
outsb
in
dec
sub
push
xchg
in
xchg
dec
inc
pop
inc
imul
sub
enter
cmpsl
jne
fndisi(8087
and
faddl
cmp
cmp
push
mov
push
mov
mov
gs
xchg
add
inc
ds
push
mov
leave
lods
fisttpl
mov
xlat
xor
orb
ret
outsb
mov
or
jnp
and
pop
pop
data16
pop
add
fldcw
enter
shrl
inc
into
dec
xor
mov
sarl
sbb
xchg
sarb
sub
mov
stc
or
mov
dec
loop
sub
je
mov
out
lret
dec
xchg
sbb
negl
sbb
das
test
popf
inc
notb
sub
cmpsl
ja
xor
dec
cmp
and
mov
inc
pop
xlat
sub
or
mov
arpl
mov
mov
hlt
mov
dec
jle
imul
aas
sbb
jnp
subl
je
mov
jne
xchg
dec
mov
sub
scas
andb
sbb
enter
adc
push
xchg
data16
jne
mov
mov
rol
mov
cmpsl
and
push
mov
mov
sub
push
loop
fldl
jb
out
add
xor
cmp
add
jnp
xor
inc
xchg
cmp
popf
jge
cmpl
popf
mov
mov
nop
fadds
mov
scas
adc
movd
les
and
dec
mov
add
dec
fsubl
or
mov
fadds
sbb
test
out
push
sbb
adc
pop
or
bound
jbe
xor
cwtl
lea
add
addr16
pop
add
loopne
adc
fwait
out
pushf
mov
jmp
adc
lret
xchg
xchg
xchg
incl
ret
mov
jnp
sbbb
inc
dec
cmpl
dec
out
mov
enter
push
cmpb
mov
test
push
in
pop
and
std
shll
sub
mov
xor
mov
mov
iret
hlt
test
sbb
cmc
sub
bound
je
lret
jb
sbb
sbb
pop
dec
nop
fwait
popl
cltd
lods
xchg
dec
lock
and
out
mov
jmp
ss
xor
push
bound
push
fadd
sub
orl
cld
sub
jmp
add
sub
add
mov
ret
aaa
inc
pop
cmpsb
fstps
sub
or
dec
mov
insb
sahf
pop
in
rolb
sbb
sbb
fmull
add
test
outsb
mov
icebp
jno
into
imul
bound
cmp
lock
mov
mov
jg
mov
dec
cld
sti
ret
inc
cmp
inc
jge
and
loopne
jbe
mov
mov
aas
jbe
xchg
mov
push
es
jge
sbb
in
into
js
mov
fsubrl
mov
inc
in
and
xor
aam
mov
shrl
loop
and
scas
jb
pop
ljmp
fsubs
pop
push
loop
loope
dec
sub
xchg
xor
stos
imul
cmp
pop
sbb
stc
inc
pop
lock
xchg
xchg
adc
pop
cmp
pop
mov
das
push
xchg
ss
pop
sbbb
lret
adc
mov
xor
nop
mov
jo
cwtl
aam
pop
mov
jmp
into
xchg
fs
mov
jbe
fwait
je
ja
pop
inc
rorb
inc
out
pushf
fldenv
jnp
stos
test
lods
rcl
out
mov
sub
mov
mov
ljmp
sbb
cmp
scas
loopne
or
jbe
ds
clc
push
mov
xor
lcall
orl
push
xor
arpl
mov
mov
cltd
std
push
imul
pop
js
jae
ret
shll
cmpl
testl
and
mov
jp
xorb
mov
inc
loope
inc
into
shlb
inc
in
mov
repnz
incb
aam
jno
incl
xchg
push
subb
arpl
push
sahf
fidivrs
mov
out
push
mov
dec
sti
dec
fbstp
test
xlat
mov
loop,pt
jne
pop
adc
pop
dec
mov
les
pop
mov
jecxz
insl
push
ds
ficomps
jl
int
rcr
mov
int3
jle
jmp
adc
movsl
movsl
inc
stos
lcall
imulb
fnstenv
mov
aas
sti
shll
cmp
mov
bound
push
cltd
sub
pop
or
scas
testl
fstp
mov
xlat
leave
insl
push
pop
shlb
and
jmp
imul
cmpsb
pop
sbbl
push
jae
add
or
cmp
fbstp
mov
lods
adc
mov
std
addb
sbbb
ret
movsb
scas
int
jp
and
cmpsl
pop
shlb
xchg
ss
sub
in
cmp
or
jb
push
mov
dec
adc
pop
jns
repz
xchg
inc
jl
fwait
ret
push
cs
mov
xchg
or
cwtl
add
adc
add
iret
into
and
rcrl
push
and
addr16
adc
mov
mov
jns
sbb
popa
add
sbb
loope
and
jae
xchg
out
push
xlat
mov
cmpsb
rorl
mov
jns
xchg
pushf
pop
repz
xchg
loope
and
mov
inc
mov
leave
cmp
mov
push
push
rol
in
pushf
jge
mov
pop
aas
add
mov
jns
pop
lret
mov
sahf
daa
push
ja
dec
mov
std
and
or
loop
jle
or
lock
in
mov
mov
dec
fistl
push
sbb
mov
cltd
mov
mov
js
aad
aaa
push
push
xor
adc
mov
js
sarb
pop
mov
or
ss
xchg
mov
xchg
je
mov
rcl
sbb
pop
punpcklwd
mov
ret
jecxz
mov
fnstsw
and
rcr
and
mov
std
lds
adc
adc
mov
inc
fs
aaa
js
xor
popa
lods
xchg
mov
inc
movsb
nop
mov
lock
dec
scas
rcr
clc
xchg
sahf
and
push
fstps
decl
repz
ret
inc
adc
xor
or
sub
std
cmc
inc
ds
mov
add
nop
rclb
xor
movsb
sub
inc
mov
mov
sub
fs
inc
jge
rcl
mov
cmp
data16
loop
cli
sbb
and
popf
enter
sti
and
shr
nop
into
shl
cmp
xchg
insl
cmpsb
and
aas
adc
repnz
cmp
fwait
and
xchg
rol
dec
pop
cwtl
sbb
adc
or
jmp
jbe
test
cmp
push
cmp
divl
mov
lret
icebp
shl
into
fsubrl
std
and
mov
push
inc
shr
mov
icebp
jmp
xlat
shll
out
pop
scas
mov
cld
add
or
mulb
rolb
call
add
stc
mov
aad
and
mov
repz
fdivrs
and
and
dec
fnstcw
inc
mov
ja
adc
mov
or
xchg
sbb
fcomp
clc
ljmp
sbb
xchg
xchg
push
mov
and
scas
loope
adc
hlt
das
je
push
in
xchg
enter
xlat
sbb
jecxz
push
gs
scas
ja
nop
mov
loope
lods
lods
aaa
neg
out
shll
into
mov
test
add
divl
cmp
int3
mov
push
inc
fcompl
lods
mov
and
mov
in
lds
cmpsb
scas
pop
cmp
lcall
in
jecxz
or
fisubrs
adc
mov
int
int3
dec
scas
xchg
inc
imul
cmpsl
mov
repnz
popf
xchg
fisttpl
jp
mov
ja
clc
shl
loope
fimull
int
mov
xor
dec
daa
ficoms
mov
movsb
xchg
stos
push
fwait
sub
mov
pop
jno
mov
insl
push
jno
fs
mov
ja
xchg
jns
scas
idivb
mov
jle
push
push
lret
jne
addl
leave
loopne
ds
cmc
js
add
icebp
js
pushl
push
ljmp
aam
cli
dec
mov
dec
lea
js
or
sbb
shlb
and
lds
aas
sbb
dec
mov
xor
pop
adc
in
mov
mov
adc
and
dec
push
mov
cmp
dec
inc
dec
enter
test
fimuls
iret
pop
cmp
mov
stc
scas
pop
scas
push
loopne
or
insl
mov
out
cmc
dec
or
or
and
ds
lods
shll
xor
data16
stos
pop
cs
mov
jge
push
sub
adcb
inc
cld
jns
inc
and
pop
or
daa
loop
add
out
mov
jle
movsl
inc
jl
sti
cmp
mov
mov
dec
and
inc
add
adc
in
cmp
jg
movsl
jne
into
pop
movsl
jnp
add
cmp
push
enter
outsb
xchg
rcll
sti
xchg
mov
addb
inc
xor
mov
fstps
out
inc
sub
leave
in
sub
inc
dec
push
or
jecxz
inc
sbb
faddl
les
lcall
data16
dec
loopne
push
xchg
enter
stos
icebp
add
adc
adc
in
cs
xchg
xchg
nop
push
mov
outsl
sarb
and
fwait
int
xchg
and
cmp
mov
mov
sahf
mov
cmp
jg
ror
push
jle
cmp
and
jl
in
lods
sbb
stc
cmpsb
jmp
mov
lods
std
sbb
adc
jns
mov
popa
push
cmp
aad
iret
pop
push
mov
dec
stos
in
fs
je
aad
inc
call
out
cli
cwtl
stos
sbb
xchg
fidivrl
pusha
pop
xchg
ss
test
xlat
xchg
mov
sub
mov
mov
add
mov
xchg
mov
adc
mov
shr
movsl
hlt
filds
lret
sbb
shl
cmpsb
mov
sub
pop
mov
jg,pn
xchg
lahf
or
xor
fwait
mov
lret
mov
mov
cmp
cmp
cltd
enter
sub
inc
mov
js
add
xchg
dec
mov
mov
test
repnz
test
cmc
repz
js
sub
lcall
push
xchg
cs
aad
ljmp
dec
mov
jbe
fiaddl
ljmp
xorb
imul
std
xlat
lret
aam
dec
andl
adc
and
sbb
push
shll
rclb
push
gs
mov
inc
lods
dec
jmp
jl
testl
rcrb
jb
cmp
test
fwait
push
dec
and
jnp
aas
dec
add
aaa
out
xchg
bound
pusha
mov
mov
mov
sbb
pop
jbe
inc
adc
shrl
daa
push
stc
mov
decb
into
sub
pop
cmp
sub
add
fwait
pop
cmp
shlb
andb
sar
or
pop
push
xchg
jbe
sti
dec
push
xchg
mov
or
push
test
fdivl
jns
lds
shl
mov
les
and
pop
scas
scas
lahf
xchg
and
andb
sbb
mov
jns
repnz
adc
fistpll
dec
mov
stos
mov
inc
sbb
adc
jb
inc
loop
out
cmp
push
lret
jp
call
test
jmp
inc
and
lods
add
aas
xchg
mov
mov
int
adc
sbb
pushf
mov
jne
push
lods
add
hlt
cs
out
sar
push
sbb
stos
mov
loopne
pop
pop
mov
jne
sub
shlb
shl
sub
inc
cmp
xlat
js
adcl
mov
int
lock
icebp
push
lcall
push
popa
push
in
cltd
test
outsl
into
lcall
add
mov
cli
fwait
xchg
cmp
arpl
adc
mov
dec
or
push
sahf
pop
icebp
pop
sub
aam
jle
addr16
adc
jns
lods
xor
std
mov
cmpsb
sub
in
loopne
sbb
insb
out
jo
lds
mov
rorl
test
decl
ret
ficomps
scas
jg
aas
mov
std
mov
sbb
push
imul
or
mov
jbe
sub
mov
into
fistpll
fcomi
fistpl
ss
pop
jae
ljmp
or
push
sbb
scas
or
push
out
add
xchg
popa
adcb
mov
xor
inc
ret
sub
cmp
stos
imul
dec
add
sub
adc
push
test
stos
outsb
fstps
pushf
cmpb
std
mov
push
xor
clc
pop
mov
pop
jns
lock
std
mov
sbb
and
mov
xlat
xchg
outsb
or
push
mov
insl
or
in
repnz
or
push
adc
xor
addr16
lret
mov
or
cld
call
push
or
jnp
loopne
pop
and
popf
das
mov
je
xor
mov
jno
cwtl
loopne
dec
jns
std
push
rcrl
stc
inc
add
test
sahf
push
loopne
stos
xchg
jbe
int
fninit
aaa
rorb
les
adcb
mov
pop
mov
outsl
mov
insl
loope
or
fdivp
or
je
jl
fidivl
cld
scas
es
adc
cwtl
push
insb
repnz
or
movsb
mov
ds
mov
add
icebp
into
and
aaa
in
loop
pop
xchg
xor
jp
mov
cld
dec
jp
push
add
adc
ds
test
out
addr16
jns
out
inc
jnp
sbb
sbb
mov
xor
out
mov
iret
xchg
je
mov
aam
mov
and
aas
adc
iret
aas
insl
sbb
in
aaa
mov
xor
lea
cmp
js
out
adc
push
add
rcrb
xor
lock
mov
cmp
mov
fadds
insl
outsl
icebp
movsb
sub
jle
sbb
fwait
jmp
or
or
inc
cmp
pusha
enter
cmpsl
fbld
movsb
test
out
ficoml
push
test
xchg
rolb
sarl
into
xlat
push
je
xchg
gs
ret
es
mov
mov
push
lds
out
fcoms
add
outsb
shr
fdivrl
jne
adc
lods
fbld
ljmp
mov
mov
jnp
adc
hlt
mov
cmc
push
in
mov
mov
mov
loopne
je
sbbl
fimuls
cmp
add
xchg
jbe
push
mov
fxch
mov
and
sar
add
inc
pop
pushf
adcl
xor
inc
rcrl
mulb
test
sub
adc
ret
pop
push
shll
push
cmp
outsl
adc
adc
jle
pusha
xor
fsubrs
push
mov
xlat
cli
pop
fimuls
jae
adcb
cli
xor
adc
aaa
roll
or
jno
pop
and
loop
mov
test
movsl
lea
push
jae
iret
jae
jge
xor
inc
shll
cmpsl
test
es
pop
inc
jae
aam
ljmp
and
pushf
test
lock
clc
pop
mov
popa
mov
stos
push
inc
jg
out
out
repnz
cmp
mov
pop
not
adc
test
dec
repz
ret
and
es
dec
push
xchg
in
sub
scas
mov
cmp
mov
fs
jge
sti
cld
cld
movsl
incb
push
lahf
out
jmp
xor
leave
mov
movsl
lahf
jo
lea
fdivrp
sub
test
sti
ja
cmpsb
cmp
in
call
pushf
sub
sub
mov
sahf
xchg
js
cmpb
jnp
push
pop
jae
mov
push
std
mov
fildll
ret
or
or
and
stos
lods
pop
data16
leave
adc
mov
cmc
jle
push
push
gs
sbbl
jge
add
mov
out
jae
push
lock
jp
and
push
xchg
rcl
ljmp
popf
mov
or
mov
mov
lods
mov
inc
push
inc
lcall
sahf
adcb
fs
push
cmp
fnstenv
sti
test
jl
call
jmp
dec
pop
cwtl
mov
xchg
sbb
mov
jg
jecxz
xorl
mov
iret
cmpb
add
or
rorb
repz
stos
hlt
xchg
mov
mov
movsl
xorl
jae
clc
dec
fistpl
ret
clc
sbb
sub
lea
jle
pop
jns
inc
hlt
not
lock
js
fs
jmp
dec
les
pop
sbb
inc
xchg
jnp
loop
jae
fld
push
lahf
sahf
cmp
jno
movsb
fstl
mov
lods
add
out
and
mov
icebp
push
pop
jo
dec
insb
and
and
rcll
std
jnp
cltd
and
xor
push
mov
inc
push
mov
addr16
fnstsw
bound
leave
fistps
pop
outsb
push
fisubl
popa
insl
or
jae
shl
xchg
int
fisubrs
iret
bound
mov
popf
ror
loop
shll
lods
or
aas
ret
sub
jmp
aam
fistpl
outsb
jb
or
mov
clc
mov
jge
out
idiv
addr16
inc
pop
cltd
stc
cmc
mov
cli
shr
xchg
cmp
rorl
jbe
clc
mov
xchg
mov
shlb
shr
or
ret
loope
xchg
dec
inc
sti
xchg
adc
filds
aad
pop
ret
fcos
nop
cltd
daa
push
clc
jb
mov
ljmp
sbb
in
aaa
push
orl
xlat
leave
popa
and
imul
repnz
es
inc
stos
add
sub
mov
hlt
iret
jmp
outsb
dec
adc
sub
cmpsl
push
test
xchg
xchg
les
sbb
or
mov
out
jno
push
int
push
xchg
out
dec
adc
pop
negb
ds
test
xor
and
mov
test
int
cmp
fadd
mov
xchg
clc
addb
xor
loop
push
pusha
sub
dec
rclb
mov
jge
dec
int
or
dec
adc
in
inc
push
cmp
xchg
jno
cmp
cs
push
sbb
addr16
cmpsb
popf
leave
inc
pop
int
shll
mov
cltd
call
mov
push
jne
lods
es
sbb
dec
test
lods
push
dec
iret
fadds
imul
fdivrs
xor
cs
insl
mov
jl
jne
push
pop
movsl
nop
out
insl
jl
push
xchg
fdivr
adc
mov
push
out
pop
push
lahf
scas
iret
inc
repz
xchg
enter
mov
inc
mov
fcmovne
push
pop
mov
ss
into
dec
movsb
call
jno
enter
es
int
mov
mov
andl
or
jne
iret
xchg
or
jp
or
fstps
aam
in
xchg
push
xchg
or
xor
jne
ret
mov
adc
and
jae
movsl
out
inc
and
lock
repz
inc
loope
mov
push
sar
add
xchg
js
jne
mov
xchg
lods
pusha
jge
dec
jo
cmp
and
stc
inc
and
insl
pop
dec
les
ror
fdivrs
inc
mov
pop
mov
cmp
lods
sub
pop
jmp
and
jecxz
pop
mov
out
push
xchg
mov
jecxz
insb
ret
fstl
test
and
add
adc
dec
inc
push
push
out
or
je
cld
jl
popa
sub
dec
lock
pusha
movq
pop
sbb
dec
scas
push
xchg
add
xchg
data16
les
imul
lcall
leave
fbstp
leave
bound
popf
push
cltd
notb
pop
push
or
sarb
sub
sub
mov
sbb
ret
jmp
cmp
mov
add
and
mov
sbb
pop
mov
push
lods
cli
call
outsl
mov
jns
cmp
daa
or
cmc
cmpsl
ret
mov
xor
sbb
scas
ss
fbstp
arpl
imul
cmc
int
aas
xchg
inc
sub
lds
jb
push
xor
mov
cltd
jmp
dec
jnp
dec
push
in
inc
sbb
sbb
sbb
xor
adc
lcall
mov
and
cmp
pop
xchg
out
mov
dec
les
aas
mov
inc
scas
push
cmpsb
leave
cli
mov
loope
cmp
cld
arpl
adc
testb
cmp
stc
or
es
jl
mov
popa
movsl
xor
test
or
and
inc
push
fcomp
mov
mov
push
into
sti
cmp
lret
inc
movsl
lretw
fstpt
inc
popa
call
inc
cltd
cmp
mov
div
add
and
cmpsb
inc
hlt
es
mov
pushf
cmp
jbe
shll
scas
ja
mov
xchg
nop
cmpsb
mov
mov
mov
shr
push
cld
in
or
fmull
ret
out
xchg
mov
and
fistps
cld
jno
movb
stos
out
sub
or
or
sub
pop
mov
xor
adc
pop
mov
hlt
push
or
mov
cmp
aas
jbe
into
and
mov
scas
mov
clc
lods
fs
pop
jmp
xchg
in
das
add
es
mov
rcll
sbb
cmp
xor
jmp
mov
pop
imul
inc
jb
cli
mov
xlat
push
mov
subl
js
jp
xchg
sbb
pusha
adc
inc
lea
cmp
xchg
and
inc
add
sub
inc
pop
xor
loopne
mov
mov
in
pop
test
ret
into
sbb
les
mov
cmpsl
shl
mov
in
mov
mov
pusha
push
iret
or
test
das
mov
mov
outsl
sbb
cmc
jno
add
loop
mov
push
push
in
xchg
in
fsts
sbb
mov
pushl
add
mov
outsb
inc
jl
push
push
sub
push
nop
add
out
and
push
subl
stos
popf
adc
ficomps
mov
repz
sub
adc
into
ficomps
add
xchg
jns
xor
sbb
mov
cmpsb
leavew
mov
add
jecxz
notb
xchg
mov
cwtl
xchg
in
adc
call
ret
popa
mov
test
popf
rorl
and
es
repnz
call
cwtl
loopne
imulb
les
xchg
jge
cmp
pop
jnp
dec
push
jno
js
push
mov
ret
xor
inc
inc
push
jb
push
cmp
sbb
jmp
xchg
jl
cmpsb
sub
shlb
cmp
roll
cmp
fsubrp
jmp
xor
xorb
push
or
and
icebp
test
roll
fldl
lods
lds
adc
cmp
pop
mov
jne
std
xor
out
ffreep
test
inc
and
out
fwait
mov
pop
xchg
and
fidivrl
fucomip
mov
fs
add
mov
pop
add
stc
test
push
cmp
bound
das
cmp
and
lds
inc
sbb
scas
cld
loopne
xlat
mov
sub
out
sbb
in
xchg
mov
int3
jnp
jmp
jnp
jne
inc
addl
stos
lahf
bound
sahf
jmp
mov
xorb
jnp
dec
jl
inc
gs
pop
ds
cmp
andl
and
jne
xor
push
mov
mov
mov
pop
das
loope,pn
jg
fwait
andb
mov
pop
cmpsl
jge
pop
call
iret
lods
pusha
dec
scas
pop
xchg
cld
imul
sarl
mov
iret
outsl
or
mov
and
je
lahf
sub
ss
cmc
pop
pop
inc
repnz
in
dec
dec
sbb
loope
inc
add
stos
lock
xchg
pop
mov
mov
icebp
xchg
jne
mov
popa
inc
sbb
enter
and
test
jno
gs
xor
xor
xchg
jle
xor
pop
scas
inc
sub
mov
mov
add
add
pushf
pop
xchg
fdivl
add
cli
outsl
lret
push
cmp
lds
cmp
mov
dec
aas
fnstenv
ret
rcl
xor
jns
add
and
jnp
mov
in
into
xchg
mov
aaa
std
imul
dec
jp
mov
xchg
lds
xlat
cmp
test
popa
fistl
test
jb
divb
cmp
jg
dec
mov
mov
add
cmp
scas
or
imull
adc
inc
je
mov
cmpsl
mov
cmovne
insl
lcall
fldcw
scas
cmp
fmuls
push
push
jne
and
add
mov
int
push
xchg
push
jo
dec
popl
out
cld
imul
loopne
fldenv
or
loop
lock
cmc
insb
ss
sbb
fs
mov
or
adc
jb
mov
cli
in
adc
lahf
push
mov
inc
inc
imul
push
cs
cmpsb
cmp
clc
lahf
mov
sbb
popa
aad
out
in
popa
mov
repz
mov
mov
out
aam
mov
jecxz
sbb
add
jecxz
fwait
mov
jmp
fsubrl
cmpsl
dec
push
push
ljmp
mov
loope
sarl
add
lds
movsl
in
shld
stos
ja
out
std
push
scas
js
loopne
cwtl
out
add
add
cmp
jbe
dec
dec
sub
insb
clc
bound
cltd
pop
mov
lds
pop
cli
jmp
ret
xchg
lea
push
mov
repnz
xor
cmp
mov
aam
aad
out
pushf
dec
sbb
decl
adc
cmp
add
dec
scas
mov
mov
movb
cwtl
jl
rcll
test
fsubrl
lds
call
inc
mov
pop
mov
nop
ficompl
xchg
xchg
mov
xchg
jns
cmp
mov
pop
jmp
cmpsl
mov
sub
or
sub
mov
pop
sub
sbb
mov
pop
jo
pushf
xchg
loopne
rcrl
and
dec
lret
movsl
mov
bound
gs
outsb
jne
push
cwtl
cmpsb
dec
adc
push
push
and
inc
cmp
mov
mov
inc
pop
mov
shll
jns
mov
pop
adc
adc
adc
and
jmp
insb
test
or
cs
pop
jg
push
je
dec
inc
nop
loope
sbb
jo
jns
mov
lods
popf
fwait
sahf
pusha
in
ljmp
mov
adc
pop
int3
stos
sub
hlt
in
int3
fstp
push
cmp
add
mov
sbb
push
push
mov
jno
dec
cwtl
pop
add
xchg
lock
je
stos
mov
jp
mov
sbb
mov
sub
es
rcl
fsubrl
adc
or
sub
add
inc
lret
inc
and
cli
les
sbb
int3
cmc
ficoms
bound
or
pop
dec
mov
mov
jae
jae
jge
mov
in
call
je
pop
pop
orl
scas
gs
jp
jge
lahf
inc
in
xlat
fsubl
mov
movsl
xor
add
ret
sbb
sbb
and
in
loop
and
jecxz
and
xor
lcall
rolb
fcoms
inc
mov
lods
mov
push
xchg
adc
and
test
pop
ds
insl
mov
test
push
pextrw
pop
imul
mov
or
leave
sbb
iret
outsl
jne
clc
xor
push
ficoms
fstpt
int
movl
enter
sti
cmp
dec
and
cli
cmp
aaa
call
push
xor
push
scas
xchg
mov
scas
enter
jmp
ficompl
inc
addr16
and
loopne
mov
mul
stc
ficoml
int
or
jo
aad
xchg
mov
pushf
jb
imul
adc
adc
rcr
out
pop
mov
mov
inc
sbb
cmp
xor
cmp
scas
insb
add
pop
cmp
jmp
addl
xchg
jb
addr16
dec
xchg
insb
jne
jno
shr
imulb
jecxz
in
scas
aam
adc
dec
mov
aaa
dec
or
out
pushf
std
inc
pop
pop
sbb
mov
mov
xor
iret
incl
sbb
js
cmp
imul
cwtl
popa
movsl
pop
dec
ljmp
pop
sbb
into
push
aas
movsb
inc
sahf
jmp
add
and
cld
xchg
loop
sbb
pop
rorl
push
pop
mov
sbb
mov
stc
bound
inc
cmp
lods
repz
or
mov
into
or
mov
enter
insb
loope
jge
rclb
fnclex
jl
xor
sub
cmp
push
movsb
dec
shlb
popa
orl
mov
fsubl
pusha
lods
adc
xchg
daa
sbbb
sub
loop
jae
out
aas
mov
dec
cmp
cmp
adc
repz
bound
lret
jecxz
mov
xchg
iret
jo
pop
dec
mov
out
rcll
sbb
stc
adc
mov
dec
add
aaa
dec
jge
ret
out
inc
mov
stc
mov
push
stos
outsb
shl
cmp
sub
mov
mov
scas
aad
lcall
lock
or
xchg
mov
inc
dec
in
push
test
aas
lret
aam
or
mov
or
loopne
adc
call
cmp
add
pushf
mov
in
cmpsl
sahf
imul
bound
shl
cmp
in
arpl
push
mov
popf
xchg
push
mul
mov
push
or
data16
frstor
inc
pop
inc
imulb
adc
mov
jne
mov
popa
loope
sub
insl
jmp
scas
push
ret
enter
mov
and
fs
adcb
pushf
arpl
adcl
sub
adc
cmpsb
call
fcoms
push
in
lret
fcomps
xchg
add
leave
aaa
sbb
sti
int
in
sbb
stos
mov
loopne
lods
loopne
or
push
xchg
aam
cmpb
in
daa
sarb
cmp
lret
repnz
pop
xchg
mov
in
sbb
mov
pop
out
les
sbbl
adc
pusha
cltd
insl
movsb
cmp
jns
mov
sbb
outsb
xor
iret
inc
and
mov
push
mov
out
cmpl
lods
jbe
movsl
xchg
pushf
repnz
bound
insl
mov
dec
aaa
stc
movsb
stos
jmp
mov
ret
cs
jmp
outsl
adc
enter
add
cmp
clc
mov
outsb
mov
inc
ret
sbb
sbb
inc
fimuls
mov
ljmp
adcl
cld
movsb
insb
dec
js
dec
mov
mov
out
push
enter
xchg
pop
push
cmpsl
inc
repnz
loop
cmpsb
adc
xchg
xchg
ret
fbstp
int
std
mov
in
pop
dec
mov
mov
adc
pop
daa
xor
xor
in
dec
stos
test
mov
add
pop
add
pusha
add
je
ret
push
jbe
jle
imul
cmp
test
aas
fs
cwtl
addr16
push
pop
lcall
dec
or
pop
lret
lcall
dec
stc
repnz
fldcw
cli
xchg
in
testb
cwtl
sub
adc
lods
sub
mov
jge
fimull
adc
dec
xchg
addb
push
lods
popa
pop
bnd
ja
cmp
repz
iret
int
outsb
xchg
add
mov
mov
adc
addl
pop
sbb
cmp
lahf
andl
scas
lahf
sbb
jnp
insb
iret
dec
aad
cmp
aaa
js
sbb
adc
es
gs
jp
sub
jns
test
mov
jle
repnz
push
push
jle
inc
aaa
outsl
js
mov
fwait
inc
dec
xchg
insb
xor
mov
xor
sbb
sub
sub
cmp
sub
lock
cmp
pop
pop
cmc
mov
test
fisttpl
sub
xchg
dec
scas
jne
xor
push
cmp
pop
adc
mov
jle
sahf
push
sub
lret
xchg
mov
xlat
xor
jl
xchg
xchg
pushf
jae
jbe
mov
pop
inc
icebp
lods
xor
fiadds
mov
jmp
mov
cmpsl
test
cmp
and
aas
hlt
testl
pop
dec
xor
ret
mov
lea
cwtl
and
pop
fdivrs
data16
push
outsb
icebp
or
dec
xchg
out
pop
push
pop
pop
sbb
mov
push
out
mov
pushf
movsb
push
es
mov
enter
mov
mov
xchg
push
loopne
or
cmc
sets
clc
adc
lods
jnp
fsubrl
or
jecxz
js
stos
sbb
adc
push
pushf
ret
push
cmp
loopne
cli
inc
mov
cmp
xchg
fisubrs
mov
xor
enter
arpl
fbld
sbb
cmp
pop
frstor
ja
inc
jp
in
pop
add
bound
cmp
pop
jo
lock
sbb
pushf
fsts
lods
testl
das
movsb
scas
stc
xchg
jmp
push
adc
out
cmc
outsb
sub
push
add
les
out
sti
pusha
call
xor
pop
test
add
pop
imulb
inc
stos
es
xchg
add
pop
dec
mov
jb
imul
mov
popa
push
pusha
pop
fbstp
mov
xor
cmp
mov
jmp
fadds
mov
lock
add
mov
push
mov
test
mov
faddl
jns
pop
in
add
jo
mov
outsb
inc
mov
mov
push
mov
icebp
lods
mov
or
cmpxchg
and
dec
vfnmadd132ss
out
and
or
dec
sbb
negl
mov
incb
cli
pop
insb
mov
mov
fldcw
pusha
stos
mov
or
das
mov
lods
lcall
inc
pop
adc
pop
clc
movsl
xor
insl
ja
xor
cltd
out
push
cmp
push
xor
mov
stos
xor
sub
inc
outsl
mov
dec
dec
mov
jle
cld
stos
scas
add
cwtl
fwait
cmc
and
loope
arpl
or
aas
mov
hlt
stc
incl
fimull
and
sarb
mov
adc
dec
ret
cmc
sub
mov
and
subb
cwtl
mov
dec
jb
sub
imul
jecxz
inc
pop
lods
sub
pop
int3
and
mov
das
stos
inc
data16
xor
dec
ss
pop
aam
mov
fwait
mov
std
fwait
imul
sub
pop
int
push
push
or
xor
popa
mov
add
pop
cmp
fcoms
test
int3
mov
sub
fisubs
or
out
fistpll
test
add
decb
cmp
mov
shll
xor
rcrl
shll
mov
enter
adc
fmuls
pop
cwtl
xor
push
and
loop
idivb
jge
pusha
mov
nop
hlt
iret
hlt
in
push
je
out
dec
push
adc
icebp
xor
dec
fdivp
mov
add
or
pop
int3
int
lea
icebp
adc
sbb
outsl
idiv
jbe
dec
dec
mov
cmp
add
std
mov
adc
loop
and
jp
xlat
in
xor
testl
call
cmpsb
shl
push
mov
out
add
fs
cld
or
adc
xlat
inc
shl
shlb
outsb
into
jl
and
lahf
inc
fwait
daa
leave
adc
sbb
mov
insb
and
dec
lret
addr16
out
sub
inc
push
mov
xchg
sbb
or
xor
imul
ficomps
and
push
sub
sub
sarb
dec
jnp
cltd
nop
push
xchg
pop
daa
mov
mov
imul
xor
xlat
push
and
push
mov
fists
stc
jns
es
mov
jns
push
dec
and
jmp
xlat
pop
fsubl
arpl
sub
adc
insb
loopne
aaa
push
mov
push
mov
sub
push
imul
pop
fcomp
pop
add
stc
cmp
icebp
out
inc
lahf
push
imul
lods
scas
mov
adc
test
into
pop
leave
inc
mov
or
iret
xchg
icebp
add
sbb
sub
cmpsl
ljmp
inc
adc
jo
inc
inc
shrl
rcrb
cmp
fs
xor
sub
mov
pushf
mov
jbe
fimuls
sub
bnd
jo
data16
inc
fistps
loop
ljmp
mov
or
or
jne
dec
out
or
push
mov
xchg
push
scas
mov
pop
xchg
or
mov
orb
mov
mov
clc
xchg
nop
push
push
cli
and
push
mov
xchg
pop
pop
jp
or
inc
outsb
jnp
dec
or
inc
pop
sub
test
jg
rolb
fsubrs
cmovo
cli
popf
push
lret
xchg
push
inc
mov
fnstcw
loope
jno
fpatan
inc
push
call
jmp
sub
mov
mov
mov
xor
inc
jl
add
pop
pop
xchg
push
insl
sbb
pop
push
ja,pn
push
lock
mov
mov
adc
jo
push
xor
pop
mov
cmpsb
dec
stos
out
jmp
and
push
jae
pushf
mov
sub
xchg
cmpsb
stos
jge
jp
xor
pop
fcoml
xor
fidivrs
add
addb
mov
in
outsl
test
das
push
adc
cwtl
or
icebp
rol
bound
add
fucom
shll
ret
jae
ja
dec
aas
xor
ret
mov
sarl
xor
adc
out
mov
mov
or
cs
sub
lret
ret
and
xchg
mov
fildl
mov
scas
xchg
mov
pop
mov
loop
jl
or
mov
xor
cmpsb
in
ss
les
or
jmp
cmp
movb
pop
adc
fadd
dec
iret
jno
add
cmp
pop
inc
pop
dec
push
inc
mov
mov
sbb
dec
mov
pop
sub
cli
cs
ret
pop
rcll
push
add
dec
xlat
outsl
outsb
lret
or
jae
into
outsb
and
sbb
inc
fdivl
in
inc
iret
out
hlt
sub
clc
movsb
sbb
lea
add
sbb
out
fistpl
repz
or
cmp
jne
nop
imul
loope
sub
clc
jns
in
aam
shll
and
lcall
xchg
jbe
jns
nop
repz
or
test
outsb
sahf
adc
in
xor
inc
lock
out
cmc
sub
pop
jecxz
and
cli
push
jl
jle
bound
mov
mov
xorb
add
enter
fldcw
xor
ficoml
inc
pushf
push
jecxz
jp
fisubl
push
ret
pop
add
push
sub
iret
daa
sbbl
cltd
rclb
bound
stos
xacquire
cli
xlat
call
loop
inc
sbbl
jg
mov
jno
mov
shlb
sti
pushw
ret
sti
dec
pop
xchg
push
movsb
xor
xor
mov
stc
cmp
pusha
add
out
and
xchg
out
mov
and
or
mov
or
mov
mov
inc
data16
lret
ret
bound
pop
push
or
testl
mov
fisubs
dec
push
inc
lods
repnz
mov
sub
push
mov
dec
into
jnp
fucomp
sti
sub
jle
daa
dec
add
shll
in
lret
or
out
out
xor
cli
orb
shll
popa
mul
fimuls
in
push
icebp
mov
mov
mov
test
fstpt
mov
cmpsb
scas
jge
push
cwtl
mov
fisttps
pop
fistpl
or
add
cmp
xor
das
jbe
cwtl
inc
sbb
push
sub
cwtl
push
mov
jg
mov
mov
imul
ret
loop
lret
lods
push
push
mov
fwait
push
loop
popf
or
xor
aas
add
pmullw
call
or
js
adc
sbb
pop
xlat
js
clc
jnp
adc
lret
mov
and
mov
in
pop
cmp
inc
xchg
add
dec
mov
inc
inc
leave
inc
movsb
push
push
stc
cli
mov
cs
pop
iret
roll
jne
ss
stos
jl
rcrl
aam
ljmp
cmp
ds
lret
popf
pop
fistl
jbe
data16
pop
pop
jae
daa
mov
cli
es
or
sub
jmp
jl
aad
test
lcall
psrad
mov
jmp
adc
xlat
mov
out
inc
jmp
out
dec
adc
cmp
pop
lret
jmp
mov
in
cli
jmp
fs
cli
call
pop
lahf
sbb
test
jns
dec
js
mov
add
jp
jnp
or
mov
ljmp
dec
out
mov
gs
or
aam
pop
cmc
mov
test
sbb
es
leave
xlat
or
xor
cltd
cmp
push
push
sbb
cmp
dec
and
sbb
cmp
and
lods
jnp
pop
cmp
adc
in
or
fadd
mov
push
scas
jae
roll
pop
mov
lods
ss
leave
push
sub
push
mov
ficompl
cmpsl
xlat
aaa
sbb
daa
jecxz
in
shl
xchg
mov
or
xchg
xchg
les
test
pushf
repnz
lret
jl
push
stos
add
int3
orl
adc
dec
cwtl
testb
mov
mov
out
and
inc
sbb
pop
jl
or
sub
cmp
cld
jmp
jmp
push
mov
rdmsr
pop
and
aam
lcall
shrl
mov
into
mov
xchg
xor
sub
jl
decl
cmpsl
sahf
xchg
dec
insb
and
jno
xorb
mov
pushf
int3
jmp
movsl
clc
enter
lahf
pop
inc
fldt
loopne
fnsave
jecxz
rcl
mov
imul
orl
insl
adc
pop
sti
loopne
jmp
xchg
js
cwtl
roll
xor
add
lahf
xor
insl
fwait
cwtl
movsl
jb
out
pop
adc
pop
arpl
jnp
cmp
sub
jl
fadd
cmp
xchg
jl
dec
sbb
mov
lock
pop
add
ja
stc
jecxz
stos
adc
fnsave
push
lahf
in
lea
lds
arpl
push
insl
int3
test
dec
mov
shll
ss
dec
mov
and
cmp
call
loope
xor
mov
add
mov
out
fisttpll
fisubl
out
ss
xchg
push
orb
sbb
bound
sti
fwait
repz
inc
outsl
adc
add
jl
inc
push
jmp
lret
lods
and
sub
mov
mov
clc
add
popf
pop
cltd
cltd
faddp
cwtl
xchg
push
int3
inc
andps
cwtl
push
aas
mov
stos
adc
mov
outsb
cmp
cmp
pop
test
xchg
stc
stc
aam
adc
inc
fwait
movaps
and
in
jp
jae
fimuls
bound
push
xchg
adc
xor
cmp
dec
cmp
js
pusha
push
cmc
adc
mov
mov
cli
pop
mov
cmp
in
fwait
or
movsl
push
sub
pop
inc
sbb
mov
sti
fadds
in
mov
add
mov
stos
mov
sub
mov
jbe
jl
out
add
xor
sahf
lds
sahf
mov
mov
int3
mov
or
out
hlt
xlat
test
or
and
add
scas
and
repz
xlat
popf
lahf
pop
cmpsl
bsr
dec
sub
pop
data16
sub
fistps
popf
call
cmc
in
fst
lret
pop
sbbb
in
shr
cwtl
dec
dec
or
mov
daa
mov
cmp
stos
mov
cmp
out
cltd
inc
leave
pushf
jl
imul
test
mov
mov
stos
cmpsl
leave
mov
jle
scas
mov
bswap
mov
or
mov
scas
sbb
mov
sbb
dec
stos
daa
and
xchg
int
fpatan
mov
fsubrl
test
in
push
inc
cmp
das
fwait
xor
fwait
mov
xchg
adc
bound
xchg
pop
mov
sub
inc
pushf
jnp
lods
jo
xchg
inc
lods
aas
iret
sbb
pusha
jl
bound
mov
cld
iret
and
mov
rcrl
std
cmc
mov
js
mov
sub
in
pop
sub
sub
and
mov
or
cmpsl
jnp
cli
mov
out
lods
mov
repz
push
in
push
es
sbb
pop
dec
xchg
jno
cmpsb
shll
mov
in
adc
pop
loopne
push
insb
or
push
mov
int
mov
sub
pusha
adc
sub
in
xchg
lock
cmp
and
cmpb
aas
mov
int3
mov
push
mov
mov
es
adcb
enter
xor
pop
pop
lret
mov
dec
aad
add
hlt
das
or
xor
je
iret
mov
ret
rorb
pop
subb
push
jecxz
jge
dec
out
hlt
push
inc
dec
lret
pushf
test
mov
mov
or
and
pop
les
cmp
mov
xchg
cmp
lock
xor
pushf
dec
test
repz
inc
add
fmulp
cltd
mov
arpl
adc
or
adc
nop
jo
sbb
mov
je
mov
and
popf
imul
xor
or
cld
xor
jle
xor
jne
imulb
das
sub
xchg
inc
cmpsb
and
rorl
jno
les
inc
and
cmp
pop
sub
mov
test
jge
inc
pop
cmp
mov
cld
dec
movsl
pop
leave
cmpsl
jp
push
in
push
push
ljmp
xorl
pop
lret
sbb
dec
mov
jge
cld
dec
in
push
cli
pop
add
mov
in
icebp
xor
cmpsb
xchg
mov
sahf
outsl
and
jnp
dec
mov
mov
mov
ficoms
mov
out
add
aam
andb
add
jns
xor
ret
mov
sub
dec
in
mov
int3
loope
icebp
mov
das
pop
or
sbbl
sti
adc
idivb
dec
ljmp
test
out
add
test
jae
pusha
das
add
test
push
push
xor
adc
fs
dec
addr16
in
shll
pushf
test
repz
mov
fnsave
int3
rcrb
add
xchg
mov
xchg
jp
dec
fwait
push
repz
push
mov
jg
push
xchg
stc
and
cmc
xchg
mov
pop
xor
and
xchg
lds
adc
stc
adc
gs
sub
mov
pop
jno
cmc
jnp
aam
or
out
add
and
mov
outsl
iret
jnp
inc
push
popa
or
push
adc
imul
loope
testl
faddp
sarb
addr16
insl
fs
jne
xchg
mulb
xor
je
push
jo
jne
pop
mov
dec
pop
add
cs
loopne
outsl
test
rclb
xchg
xor
push
pop
and
shrb
cmp
arpl
sub
dec
sbb
xchg
icebp
insb
pop
dec
cld
ds
bound
repnz
dec
lret
pop
pop
mov
mov
cmpsl
inc
pop
jne
dec
test
push
xchg
shrb
sarb
rcll
cmp
mov
int3
lods
inc
dec
addl
sub
incl
test
fs
test
stos
or
in
insl
fists
pop
sbb
mov
add
cltd
imul
mov
hlt
cmc
ljmp
jle
pushf
fwait
cmp
dec
mov
mov
jae
jmp
mov
xor
sbb
and
cwtl
jecxz
sbb
mov
jno
iret
ja
decl
mov
add
scas
push
pop
dec
test
push
test
lret
or
inc
sbb
sti
into
mov
fwait
into
sbb
scas
enter
pop
inc
ja
add
mov
jge
push
clc
imul
pop
push
pop
leave
push
mov
jae
ficompl
std
dec
in
cld
or
xor
in
jmp
hlt
pop
dec
jecxz
loopne
mov
notb
mov
lret
jns
dec
dec
lds
fsubs
fs
add
or
pushf
in
loop
mov
xchg
cmpsl
mov
out
popa
sbb
and
insb
mov
fmulp
scas
jl
cwtl
mov
roll
mov
arpl
pusha
std
push
daa
addr16
nop
sbb
movsb
aaa
xchg
cltd
aad
ds
and
mov
jae
test
notb
mov
xor
out
or
sub
pop
mov
xorb
mov
pusha
mov
outsl
add
cmpsb
sub
sub
cwtl
ret
and
imul
push
ret
cmc
mov
sub
mov
pop
test
rclb
mov
in
adc
outsb
inc
sub
cld
fisttpl
cmpl
or
gs
sahf
sarl
push
adc
jle
leave
ja
jmp
push
cmp
ljmp
fwait
add
sarl
stos
sub
pop
jmp
insb
add
enter
and
jne
sbb
stc
insl
cmp
mov
jne
inc
shll
mov
or
pop
stos
push
ljmp
adc
js
cmc
sub
cli
fnsave
fists
popa
xchg
lds
les
fisttpl
ja
mov
aad
add
sahf
inc
fstpt
gs
sbb
adc
jmp
and
xor
jmp
sbb
xor
nop
out
loope
add
xchg
dec
xchg
xchg
inc
xor
push
int
repz
adc
dec
xor
stos
add
lret
push
mov
sub
aam
cmp
pushf
orl
popa
jecxz
and
les
or
in
mov
pop
or
adc
fcomi
add
pusha
inc
jb
outsl
lret
cmp
call
ljmp
test
inc
pop
and
icebp
js
popa
or
dec
cmpsl
fisttps
mov
adc
cvtps2pi
lods
cmp
jb
psubsb
mov
test
inc
data16
sub
lret
xor
stos
inc
pop
add
clc
adc
or
fnsave
add
push
ret
lods
arpl
cli
sub
or
push
sub
pop
test
add
outsl
adc
repz
fists
vpunpckhbw
clc
addr16
dec
inc
jne
rorb
loopne
sub
lret
fwait
mov
sub
nop
fdivr
mov
adc
in
shr
push
xchg
loop
adc
je
aas
cmc
faddp
hlt
fdivl
jnp
or
insl
dec
sarb
push
mov
cmp
or
sub
xlat
adc
xor
hlt
dec
push
lcall
mov
cmp
scas
adc
add
fdivr
jl
pop
addr16
jmp
sub
xorl
dec
push
fucomi
fcmovnbe
inc
inc
lods
cmp
add
xlat
jp
cmc
divb
test
fst
sbb
lahf
push
js
mov
mov
push
rcr
lea
jno
icebp
data16
mov
shll
ss
lret
cwtl
clc
std
ret
xchg
xor
jo
cwtl
add
in
pop
hlt
xchg
std
and
xchg
dec
pushl
dec
movsw
movsl
out
push
sub
add
sahf
add
sub
xchg
pop
nop
lock
lea
cmp
icebp
push
dec
xlat
fisttpl
cmpsb
dec
mov
adc
out
push
in
jns
jbe
push
inc
push
and
or
in
arpl
mov
cmpsb
daa
addl
sub
addr16
and
mov
jg
lods
out
xchg
jmp
jmp
fwait
xchg
aas
cmp
or
mov
xor
pinsrw
addr16
mov
cmp
xchg
push
mov
cs
js
popa
sbb
out
out
lret
insl
cmp
outsl
lahf
jp
mov
jecxz
mov
std
ss
lea
add
mov
cwtl
pop
ja
xor
add
push
and
lahf
xchg
fnstenv
dec
mov
or
roll
lods
inc
pop
adc
dec
xor
cmp
sbb
rorl
cmp
adc
ja
pop
pop
ds
std
int
popf
nop
inc
mov
sub
fucomip
es
clc
movl
data16
fcmovnb
in
cmp
shlb
data16
mov
movsb
dec
cmp
push
out
enter
push
mov
pop
fiadds
movsl
push
test
jbe
jo
sub
mov
jp
div
shlb
fwait
ret
fbstp
sti
dec
int
lret
fcomps
cmc
ret
mov
test
out
sbb
mov
cmp
popa
movsl
aaa
in
jmp
addl
xor
aas
sub
incl
or
mov
sahf
adc
pop
xor
out
fnsave
mov
out
test
repz
adc
mov
pop
nop
es
or
icebp
inc
cli
mov
or
popa
xchg
aas
popf
fstpl
rorb
dec
ret
jns
xchg
aas
loopne
sub
rcl
ret
dec
out
scas
pop
pop
lea
mov
or
sub
dec
jecxz
gs
arpl
push
xchg
fnstsw
ds
mov
mov
adc
lock
out
movsb
test
lret
mov
gs
sbb
je
cmpsl
loopne
mov
mov
and
pop
or
movsl
xchg
xchg
sti
std
lods
fs
ret
dec
daa
pop
fidivrl
gs
sahf
cmc
sub
rcll
adc
lods
in
add
fsubrs
dec
push
pop
outsl
aad
mov
outsl
dec
sbb
pop
js
pop
std
lcall
mov
out
and
daa
sbb
inc
xor
ret
sarb
mov
mov
cli
or
iret
in
push
add
pop
mov
into
sub
add
jno
push
mov
push
into
sub
inc
fildll
xchg
xor
push
test
js
addr16
mov
mov
ds
iret
dec
or
popa
xchg
push
pop
jp,pn
hlt
dec
xchg
out
fcoms
dec
cmp
add
push
xor
loop
pushf
or
pop
test
mull
insl
and
insl
push
mov
ret
int
dec
test
sub
mov
xchg
inc
fists
test
mov
cmp
adc
out
inc
cmp
leave
in
pop
negb
repz
mov
push
ss
jns
dec
mov
inc
scas
das
ficomps
nop
inc
es
xchg
and
lock
push
add
sbb
jo
jnp
fs
xor
ss
xor
js
lods
xchg
xchg
push
cli
pop
enter
push
cmp
jbe
mov
sub
dec
lret
mov
mov
jg
sub
out
lret
test
dec
pop
cmp
dec
js
in
xchg
cld
or
pop
cmp
aam
out
sbb
mov
jb
notl
or
mulb
stc
and
xlat
cli
jp
ret
inc
pop
repz
add
daa
mov
aam
sbb
daa
jns
nop
jnp
add
clc
imul
nop
mov
imulb
js
mov
fnsave
sub
sub
adc
add
add
xchg
pop
dec
dec
push
xor
or
popf
and
data16
push
test
push
pop
push
imul
push
adc
sub
mov
mov
pop
and
std
jae
jns
mov
jg
lcall
jecxz
xchg
push
jno
or
aam
cs
sub
cmp
cmpsb
pop
dec
ja
push
out
push
dec
popf
cmp
scas
xchg
xchg
lods
cmp
lods
or
add
les
sbb
aam
sub
shrb
jl
adc
and
lods
rcr
cmp
mov
lcall
dec
mov
cltd
sahf
or
sub
jmp
std
insb
pop
test
pop
daa
je
test
enter
mov
outsb
outsl
lock
push
fs
lock
pop
imul
inc
mov
add
lahf
loopne
pop
jne
mov
pop
fsubrs
fdivrl
fsubs
pop
jne
mov
movsb
aam
mov
gs
imul
mov
push
iret
arpl
pusha
dec
fcoml
push
mov
call
fsts
jmp
jg
inc
sahf
mov
cmp
fwait
lret
mov
inc
pop
cmp
enter
lea
lret
in
mov
mov
adc
mov
jb
cs
lret
and
dec
pop
dec
adc
mov
mov
dec
adc
add
jb
cmp
xchg
jae
lea
adc
in
in
mov
push
sbb
out
loop
pushf
mov
in
dec
pop
rclb
decl
sub
leave
dec
aam
xor
sub
rol
xchg
aam
ljmp
push
push
push
jp
sbb
in
scas
jo
sub
push
out
dec
lcall
in
aaa
push
jle
fldcw
dec
stos
inc
mov
es
clc
sarb
sub
or
loopne
arpl
pop
inc
es
mov
inc
or
daa
pop
inc
and
pop
push
dec
push
pop
movsb
push
mov
mov
aaa
pop
pop
jns
fld
subb
cmp
sbb
mov
jne
cmp
in
xchg
fcomps
or
lods
cwtl
mov
iret
mov
js
pop
pop
sbb
popf
or
mov
into
ret
js
loopne
pusha
movsl
dec
movsl
push
in
xor
dec
mov
sub
mov
inc
inc
xchg
repnz
cmpsb
loope
push
jg
cmp
test
push
aad
cwtl
jb
xor
push
popa
push
outsb
data16
jge
outsl
mov
xor
dec
push
add
sbb
push
xchg
out
loope
gs
mov
mov
daa
out
mov
data16
xchg
adc
imul
loop
mov
insb
idivb
sbb
lahf
cwtl
inc
and
negb
push
test
stos
push
push
mov
les
pushw
shr
icebp
mov
mov
dec
mov
movsb
fdivrs
call
out
cmc
jnp
lcall
fldt
and
insl
in
les
xchg
rcrl
dec
cs
cmp
bound
sub
and
mov
inc
cwtl
es
sbb
es
mov
outsb
aas
sub
adc
dec
sub
mov
adc
cmp
loope
lock
mov
cmp
stos
xchg
ds
mov
fwait
mov
adc
adc
lea
daa
test
testb
xlat
lods
sub
popa
adcb
adc
mov
inc
xchg
mov
dec
push
lcall
and
js
adc
stos
lahf
or
mov
xchg
in
push
int3
lahf
stos
sbb
cmp
icebp
mov
adc
insl
jo
bound
mov
push
mul
push
adc
pop
pop
dec
pop
stos
xlat
test
filds
mov
out
sti
and
lahf
push
sub
pop
dec
setno
xchg
adc
xchg
pop
cmp
mov
mov
and
mov
aas
frstor
scas
push
negl
jmp
jl
mov
xor
sbb
pop
ds
lods
cwtl
ljmp
jecxz
into
sub
pop
fidivs
mov
pop
sahf
mov
fmull
adc
pop
movsb
dec
jmp
stos
sti
cwtl
mov
lock
jge
mov
push
test
pop
test
pop
adc
pop
hlt
int3
cmp
push
adc
sbb
add
add
dec
pusha
mov
js
mov
add
out
jns
not
xorb
cltd
or
jge
subb
jb
or
stos
das
rorl
das
in
dec
cld
push
dec
inc
jmp
aam
add
mov
xchg
je
mov
inc
push
dec
jecxz
dec
xchg
push
cmp
add
pop
mov
inc
testb
push
jmp
pop
and
sbb
enter
lret
lods
adc
xchg
mov
inc
fiadds
inc
imulb
add
sbb
cmp
lea
ja
xor
leave
rcll
dec
cmp
test
mov
std
sub
sub
pop
mov
loope
repz
mov
mov
stc
mov
aam
movsl
or
push
push
idivb
test
jno
loopne
xlat
push
mov
pop
iret
lock
scas
fdivrs
xor
shl
cmp
cmp
dec
inc
bound
mov
jb
push
out
test
jmp
ss
pop
jle
mov
jbe
nop
add
bound
sbb
std
cmp
push
lahf
out
outsl
push
pavgb
cmpb
iret
push
push
pop
data16
pop
jl
push
pop
add
inc
lods
out
arpl
mov
test
ficoml
xor
loope
ds
push
repz
cmp
negl
mov
sub
push
add
pusha
out
cpuid
or
mov
sub
mov
daa
xlat
xchg
pop
inc
xchg
or
and
xchg
pop
mov
gs
ljmp
movsb
stos
cs
sbb
jb
jp
mov
into
sbb
popa
ror
shlb
call
dec
xchg
inc
xchg
loopne
cwtl
std
lcall
popf
test
pusha
dec
and
pinsrw
aaa
lahf
jae
push
es
popa
ret
push
and
or
jbe
dec
add
loopne
inc
jnp
pop
lods
sbb
cmp
jmp
sub
pop
popa
and
in
jl
ss
jo
or
push
nop
lahf
sbb
icebp
dec
inc
jae
scas
movb
push
hlt
lods
sub
push
loope
out
pop
mov
dec
ret
push
inc
jbe
into
or
mov
sub
fistl
jae
repnz
dec
push
jle
ficompl
dec
mov
nop
jbe
sub
xchg
fstl
sbbb
loopew
ljmp
jle
mov
jp
add
fnstcw
popa
add
sahf
mov
jmp
mov
imul
xor
sbb
in
pop
bound
pop
mov
sub
xchg
std
scas
stos
jb
cmp
sahf
pop
add
push
std
mov
jge
push
dec
xor
into
loope
cmp
or
ja
mov
cmp
das
ret
imul
inc
mov
mov
les
sub
lret
jmp
rorb
das
rclb
push
rcll
jnp
aad
outsl
in
scas
xor
int3
cmp
lds
out
mov
lods
push
cli
lcall
in
sub
push
and
sub
fs
mov
sub
int
push
lods
inc
cmpsl
add
ret
loopne
ffreep
outsb
mov
xor
lods
movsb
addr16
pusha
popf
js
add
fucomp
outsb
adc
fidivrl
jg
xchg
loop
pop
jl
sub
mov
jecxz
rorl
es
in
jno
movsb
in
xchg
rclb
ficompl
mov
popf
imul
pop
mov
push
add
arpl
and
mov
test
mov
adcb
mov
xor
popf
cmc
cmp
fidivrs
push
gs
shlb
nop
mov
xchg
inc
or
jecxz
jne
in
pop
cmc
stos
pop
jecxz
lods
lret
mov
mov
out
test
mov
xor
and
cmp
inc
add
sti
sbb
test
fneni(8087
xor
jg
icebp
mov
jmp
mov
jno
loopne
outsb
or
inc
add
sub
pop
fs
popa
out
sbb
jg
in
outsl
dec
cmp
sbb
or
pop
inc
cmp
mov
sbb
ret
fstps
loope
xor
daa
cli
xchg
jp
jb
das
jl
int3
inc
add
orb
inc
dec
lahf
mov
cli
mov
or
xchg
dec
test
mov
cmp
xchg
pop
xchg
jg
shll
adc
int
loope
cmp
sub
adc
xor
fs
push
mov
icebp
xor
mov
mov
mov
adc
icebp
jle
stos
data16
jg
xchg
dec
fstpt
daa
dec
or
lods
xlat
adc
xchg
ds
ret
xlat
inc
mov
push
mov
fxch
es
mov
negl
cmp
cmpsl
add
mov
mov
fninit
mov
cmpsb
jmp
cmp
fstps
andb
repz
sbb
push
push
mov
jnp
xchg
bound
icebp
pop
dec
mov
dec
adc
cmp
jl
adc
jo
xrelease
es
lahf
inc
cmp
jle
and
jae
push
mov
sub
or
movsl
adcb
cmp
sbb
fisubrs
shrl
test
inc
outsl
cmp
mov
mov
push
rorb
lods
shrl
sbb
aam
stos
xor
fisubl
jl
stos
inc
pop
lret
add
in
movsb
fistpll
das
jmp
cmp
shlb
add
xor
scas
dec
and
fcmove
pusha
or
sub
mov
cltd
cmpsb
sbb
mov
dec
test
pop
push
call
cwtl
pusha
fstps
icebp
shrb
pop
xchg
or
add
sbb
sarb
jo
mov
sbb
dec
out
sub
adc
xchg
mov
pushl
mov
inc
push
push
dec
js
xchg
je
jno
mov
lret
pop
inc
mov
and
popf
movb
inc
repz
mov
ds
mov
jecxz
xor
in
mov
xor
js
jo
jge
into
nopl
and
sub
in
sub
xchg
and
fbld
jo
push
or
pop
popa
into
nop
clc
std
pop
dec
xchg
mov
inc
and
xor
lds
dec
push
xchg
lret
aam
mov
sub
sub
lret
pusha
pop
fs
in
and
aad
test
pop
dec
push
das
shl
or
test
popf
movsl
jle
jle
out
bound
frstor
popa
lret
inc
dec
mov
std
mull
scas
jp
cmpsl
or
outsb
or
jae
test
cmc
mov
inc
ja
push
pop
aam
push
int
lret
add
call
pop
and
addr16
fwait
adc
sbb
and
cltd
cmp
std
iret
fsubrp
hlt
xchg
pmuludq
inc
popf
mov
jg
mov
and
sub
rclb
jle
push
stos
outsb
cltd
xchg
ret
loop
xor
push
push
call
mov
daa
xor
inc
and
test
push
sub
inc
add
dec
mov
rorl
mov
jmp
pop
fdivr
jne,pt
ds
sbb
mov
sub
add
push
lods
xor
dec
cli
push
loop
popa
ficompl
push
push
xchg
inc
idivb
mov
fisttps
mov
inc
sti
cmp
pop
cmp
out
xchg
cmp
xlat
nop
cmpsl
or
movsbl
cmp
dec
xchg
or
int3
mov
notb
jge
push
sahf
mov
cmp
cmpsl
jo
and
xchg
in
rorl
cmpb
in
mov
sub
movsl
call
adc
les
jg
je
pop
iret
outsb
mov
lss
rcrl
ds
mov
in
xor
out
jp
xchg
hlt
and
fisubrs
lret
mov
xor
cmp
jnp
ja
mov
pop
mov
stc
xchg
add
popa
nop
jmp
in
nop
dec
fsub
out
jmp
cmpsb
push
mov
negb
jmp
hlt
dec
adc
cmp
imul
cmp
adc
icebp
sar
mov
cmp
mov
add
leave
mov
push
in
scas
pop
insl
shlb
dec
fidivrs
sbb
cltd
mov
mov
mov
fsin
mov
jae
and
xchg
and
pushf
cmpb
push
shr
add
movsl
lods
adc
ljmp
and
dec
sbb
imul
sub
loop
lahf
dec
jae
mov
stos
push
or
andb
mov
mov
mov
jg
mov
push
data16
adc
pusha
int
cmpsb
add
jnp
neg
inc
push
mov
dec
add
mov
xchg
add
lea
mov
pop
pop
or
sub
lock
mov
dec
and
fldcw
pop
dec
pop
insb
iret
test
cmp
aam
inc
daa
loope
outsb
loop
jecxz
and
fists
loopne
pop
dec
or
cmp
fmuls
aam
pop
outsb
inc
dec
mov
andb
lds
jmp
xor
push
pop
insb
inc
inc
dec
es
pop
mov
aaa
adc
push
jb
lahf
jge
test
data16
xchg
mov
lods
addl
cs
inc
jg
xchg
loope
in
rorl
dec
mov
lds
inc
arpl
stos
sbb
cwtl
jg
jmp
pop
inc
and
cmc
fcomi
insb
pop
mov
out
inc
dec
mov
push
cmc
stos
in
shll
inc
adc
dec
pop
bswap
arpl
outsl
cs
sti
in
mov
das
mov
push
lock
jl
xchg
cmpsb
out
fisubl
into
pop
xor
or
push
mov
sbb
ljmp
cmpsb
in
jns
sti
pop
scas
add
pop
dec
add
jae
negl
arpl
cmp
mov
xor
xor
adc
push
inc
scas
xchg
jle
in
mov
mov
inc
pusha
fstps
pop
dec
push
cmpsl
xchg
ja
mov
into
lret
inc
in
sbb
popa
mov
mov
in
pusha
loopne
add
mov
jp
sub
pushf
xchg
sub
mov
fwait
pop
adc
fwait
loop
mov
out
push
cmc
rorb
xor
and
imul
and
add
insl
test
add
push
fldcw
dec
sub
icebp
out
xchg
inc
lods
inc
cmpsl
in
xor
lret
aaa
je
mov
icebp
rcr
insb
jp
cmp
adc
imul
dec
test
cmpsl
xor
lds
jp
or
out
insb
hlt
int
int
aam
test
push
sahf
dec
inc
sbbb
lock
sub
rorb
jl
sbb
xchg
jecxz
outsl
pop
loope
das
adc
jecxz
add
add
rcl
xchg
repnz
pushf
lds
inc
mov
pop
sbb
call
xlat
filds
out
das
frndint
adc
in
hlt
xchg
inc
stos
out
inc
cli
jge
xchg
add
ja
adc
xor
mov
fwait
and
in
sub
arpl
popa
dec
jnp
movsl
mov
mov
mov
fs
out
call
arpl
gs
int3
jno
and
stc
jecxz
clc
fsubp
test
imul
loop
push
in
inc
jl
lcall
leave
xor
fiaddl
push
mov
addb
xor
mov
in
pop
lods
icebp
fs
mov
pop
jne
scas
mov
lahf
idivb
push
mov
dec
mov
bound
addr16
fsubs
mov
jbe
sub
cmp
rcrb
push
pushf
jno
or
ss
sbb
xor
mulb
cmp
es
sbb
inc
inc
je
lds
sti
push
jecxz
rdtsc
popf
xchg
xor
lock
mov
mov
push
imul
push
pop
jb
pop
xchg
pop
or
test
push
aas
fnop
and
enter
test
test
cmp
cmp
out
out
cli
pop
cli
push
rclb
out
cmp
mov
cli
pushf
jns
mov
mov
popa
imul
sti
push
lcall
loopne
inc
icebp
es
xor
inc
loope
sbb
mov
movsb
imul
dec
sbb
pusha
jecxz
fdiv
or
push
or
mov
fnstsw
out
loop
inc
and
aas
sti
mov
insl
loopne
mov
stos
aas
test
jne
icebp
hlt
leave
pop
movsb
loop
les
cmp
jbe
test
xchg
xchg
sub
iret
das
pop
inc
out
mov
push
cmpb
xchg
bound
fs
push
sbb
stc
push
cwtl
js
inc
rclb
push
fcomp
xor
jb
scas
pushf
shl
adc
lret
dec
jecxz
add
test
cmp
repnz
gs
test
nop
dec
icebp
shll
fistps
adc
popa
cld
pop
mov
neg
jmp
aad
jecxz
shll
cmp
add
lahf
xchg
inc
xchg
xchg
fidivl
fwait
out
sbb
cmc
ljmp
jp
into
icebp
sub
movsl
xor
push
repnz
movsl
out
fwait
dec
iret
mov
xchg
and
mov
jne
jl
push
rclb
popa
lcall
lcall
ret
mov
cs
fstl
mov
and
xchg
das
adc
enterw
adc
cmpsb
push
xor
je
ret
push
jge
lock
dec
xor
xorl
lods
xor
adc
and
xchg
and
mov
adc
cmp
popf
sub
cmpsb
xor
addr16
int3
das
adc
repz
cmp
sti
xor
jae
cwtl
popa
negl
inc
mov
mov
cli
mov
iret
outsb
fistps
fisubrs
push
xor
mov
addr16
clc
xchg
aam
xchg
nop
mov
xchg
xor
filds
mov
lahf
aas
fs
sbb
arpl
int
mov
sahf
shr
lods
add
sbb
cmpsl
or
les
mov
es
or
mov
push
mov
aam
mov
out
push
mov
xor
call
testb
scas
cmpsb
or
push
sbb
push
jb
push
mov
movsl
aas
out
popa
lcall
dec
arpl
ret
cwtl
pop
xchg
jnp
pop
nop
pop
push
shlb
adc
rol
ja
cmpsb
adc
xchg
xor
clc
mov
call
cmp
adc
ret
loope
inc
adc
cs
cmp
iret
cwtl
insl
xchg
mov
and
popa
xchg
push
jno
sub
adc
adc
pop
mov
fsubl
repnz
inc
sbb
mov
mov
push
and
jecxz
dec
adc
ror
das
clc
jle
out
inc
inc
mov
jns
arpl
adcl
lods
into
sub
mov
mov
jl
addr16
xor
aas
fisubl
out
cmp
hlt
daa
mov
adc
mov
pop
mov
shrb
pop
jns
sahf
cmp
cmpsb
gs
stos
dec
push
repz
add
ds
cmpsb
mov
mov
dec
push
jg
pop
iret
test
and
and
dec
inc
repz
mov
add
shrl
and
mov
lock
fcom
adc
leave
cmp
mov
jmp
jmp
aaa
cmpsl
in
sbb
scas
popf
hlt
add
jb
enter
cmp
or
xor
punpcklbw
mov
psubsb
pushf
lods
lods
sbb
cmp
jl
js
add
pop
insb
xor
jl
adc
out
in
and
or
mov
jge
mov
fcomi
xlat
dec
ljmp
cmp
xor
dec
outsb
xor
out
and
loope
sbbl
xor
lock
push
push
sbb
inc
mov
lds
stc
adc
leave
push
fstps
xchg
cmp
orl
into
pop
or
test
repz
dec
call
jae
cli
int
xchg
push
adc
inc
cmp
mov
jns
test
xor
js
or
addb
stc
jae
add
dec
adc
or
push
jge
dec
daa
pop
and
test
js
dec
adc
fstpt
jl
rcll
shl
and
or
mov
out
daa
pop
push
push
push
popa
nop
insb
ja
dec
push
xchg
xor
mov
cmpsb
mov
push
pop
sbb
aaa
mov
in
jge
push
cmp
mov
mov
push
mov
push
jg
mov
cmp
pop
out
popf
jle
or
lcall
mov
divb
test
leave
or
aad
std
push
in
xchg
rclb
adc
mov
aam
test
mov
fcoml
imul
outsl
mov
add
leave
jg
add
push
mov
mov
hlt
cli
mov
sub
push
adc
cmp
mov
aas
push
add
pushl
pop
mov
pop
xlat
dec
sbb
cwtl
xchg
dec
popa
insb
in
movsl
out
ja
sahf
pop
pop
mov
jns
mov
sub
pop
addb
int
test
imul
cmp
push
hlt
or
sub
mov
jp
int3
xor
cmp
iret
mov
sbb
in
testb
das
aad
fsubrs
clc
mov
or
loopne
and
pop
dec
jae
sub
out
and
push
mov
dec
or
add
mov
lcall
xchg
scas
mov
lcall
xchg
dec
mov
lret
lcall
pushf
lahf
xor
mov
into
sbb
mov
or
cmp
cltd
push
scas
fldcw
add
sbb
mov
add
adc
std
fstpt
je
cwtl
sub
or
push
add
push
ret
aad
mov
dec
inc
in
fs
loopne
rorb
pop
jae
dec
test
adc
cs
and
adc
cmc
sbb
pop
ficoml
fs
sbb
dec
mov
test
cmp
push
push
pop
loop
pop
test
sub
cmpsl
pop
xchg
mov
fisttpll
in
mov
dec
cmpsl
dec
sbb
iret
daa
pushf
out
insb
lret
dec
inc
push
lret
cli
sarb
call
push
push
xor
stc
adcl
mov
jns
mov
mov
icebp
aas
in
fiaddl
adc
aas
push
add
aam
xor
test
jo
cmp
leave
and
rep
jo,pn
cmp
add
push
cmp
enter
out
jae
or
adc
data16
pop
cmp
pop
push
es
pop
jecxz
mov
mov
out
adc
mov
or
fcomps
shrd
xchg
push
jecxz
xor
daa
rorl
or
sbb
sbb
adc
inc
loop
and
jo
mov
out
mov
pop
mov
xor
out
jns
jmp
in
arpl
bound
mov
inc
lahf
bound
xchg
push
and
roll
push
mov
leave
cmpsl
cmp
inc
pop
and
clc
cmc
push
ds
adc
xlat
out
pop
repz
pushl
mov
cmp
je
mov
jno
xchg
ja
lea
aad
data16
jne
add
in
xorb
dec
push
bound
or
mov
outsb
and
dec
cmp
addr16
popa
es
sub
push
add
sub
dec
dec
rorl
popa
mov
out
jmp
mov
adc
cltd
dec
push
loope
test
addl
cmp
cmp
fwait
outsl
insl
daa
or
and
test
faddl
adc
sbb
jae
aaa
test
mov
leave
or
insl
lea
jb
pop
or
repnz
add
scas
nop
mov
sbb
mov
sbb
xor
lds
dec
popa
xchg
ret
lea
cmp
cmp
pop
push
scas
mov
push
insb
jno
sub
scas
mov
sbb
insl
out
movsb
jp
pusha
out
push
aam
divl
mov
sbb
rclb
out
cmpsl
orb
jg
xchg
jmp
mov
addl
fsubs
and
imul
int3
jnp
outsl
sub
xchg
push
mov
outsl
mov
mov
xchg
pop
sub
sub
sti
pop
lahf
adc
xchg
mov
out
fisubl
ficoml
sbb
jg
xlat
scas
mov
das
xor
jae
scas
cmp
or
mov
inc
cmc
clc
daa
jge
pop
stc
adc
mov
mov
mov
jp
das
dec
out
clc
push
lret
push
mov
xor
or
or
in
dec
sbbb
call
lock
lock
pusha
push
pop
cmp
ret
cmpsl
cld
cli
fldcw
lea
mov
js
xor
push
pop
or
dec
and
lahf
stos
mov
xor
add
inc
sbb
xor
es
xor
std
adc
bound
mov
mov
jle
mov
jae
shlb
push
push
add
pop
cmpsb
es
addl
addr16
pop
xorl
mov
cmp
cmp
jecxz
sub
mov
out
adc
pushf
push
inc
insl
mov
cmpb
aam
ds
jl
cmp
fwait
repnz
sub
outsb
out
add
push
shrb
or
movsb
outsb
jmp
iret
xchg
xchg
les
dec
push
or
dec
fs
xlat
inc
push
and
push
aad
inc
std
jl
lock
in
dec
push
adc
xlat
mov
and
roll
add
mov
jl
mov
out
dec
mov
shl
mov
popa
lea
and
enter
mov
mov
xchg
scas
mov
or
mov
js
sti
cli
repz
jg
in
das
jmp
push
repz
mov
shrb
push
ja,pn
fs
shlb
enter
pop
rorb
add
ljmp
and
xchg
push
sahf
jnp
out
fs
test
push
pop
mov
inc
or
rorl
lods
decl
lods
aaa
jle
mov
fiadds
push
sub
mov
int
add
or
bound
mov
mov
cli
sub
aas
jmp
adc
call
test
dec
sahf
mov
imul
mov
jl
lea
xchg
jnp
call
rorb
or
les
mov
cmc
mov
nop
imul
mov
add
jmp
xchg
inc
sub
test
inc
movsl
mov
cmp
mov
cmpsb
lods
es
add
movsb
int
in
shlb
es
or
push
sbb
cmp
jnp
or
or
cs
cltd
daa
sub
loopne
mov
cli
inc
int3
pop
push
dec
add
and
subl
xchg
sahf
fldt
mov
mov
imul
aad
lret
or
out
cmp
add
ret
js
ss
lods
aaa
test
cmp
mov
stc
cmp
loop
fs
mov
outsl
adc
sti
repz
cmp
mov
bound
movsb
dec
int3
sbb
sub
mov
inc
ret
pop
pop
dec
jae
adc
jmp
jb
mov
subl
js
adc
cli
int
pop
sbb
or
loopne
xchg
xchg
add
in
xchg
mov
jp
imul
sub
lea
inc
xor
push
mov
fsubrs
xchg
movsl
and
mov
jl
dec
into
xor
outsl
std
fs
out
insb
add
adcl
xor
cmp
mov
or
sbb
mov
or
fildl
in
sysexit
jns
sub
shrl
aas
add
and
pop
clc
pop
jl
call
loope
loop
adc
daa
leave
roll
icebp
lret
or
stos
push
cmp
push
jae
ljmp
nop
add
mov
loope
mov
pop
daa
jno
js
hlt
vmread
out
push
mov
push
jbe
in
dec
cltd
mov
mov
je
sti
arpl
cltd
push
dec
pop
stc
in
mov
mov
adc
negb
pop
mov
push
or
xchg
pop
cmp
mov
push
jecxz
inc
jns
add
inc
out
add
aas
xor
sub
shr
pop
xchg
add
clc
in
mov
add
jge
push
add
pop
add
add
fs
out
ret
stos
sbbb
lcall
insb
movsb
mov
jmp
int3
mov
ljmp
lcall
xchg
icebp
mov
aaa
cs
mov
adc
div
dec
and
mov
pushf
rcrb
lahf
mov
mov
out
sbb
sbb
sbb
jns
sbb
xchg
call
sub
add
xchg
fwait
bound
ja
xor
push
jo
stos
ds
ja
cmp
mov
bound
lret
fdivs
mov
adc
sub
and
mov
or
or
mov
stos
fcmovu
loop
mov
push
aas
inc
lret
adc
push
pop
jl
sti
mov
cmp
mov
push
dec
sbb
sub
xchg
mov
push
stc
add
xchg
cltd
aas
aam
out
stos
xchg
and
movsb
loopne
rcrl
push
das
ret
inc
fs
xchg
aam
mov
mov
in
adc
mov
cvtdq2ps
and
js
xor
mov
mov
jae
or
mov
xchg
jle
jmp
repnz
lock
xor
or
mov
mov
pop
xorb
popa
xchg
sarb
mov
sar
xchg
cs
cs
mov
mov
or
jo
insb
xor
jae
dec
add
dec
in
jns
fidivrl
icebp
and
enter
ja
and
sub
cmp
dec
addb
cltd
arpl
cmp
jno
jl
js
loope
or
frstor
push
mov
stos
and
inc
and
fcmovnbe
jmp
ljmp
test
or
or
xchg
xor
push
addr16
jne
jbe
adc
xchg
inc
pop
es
repz
mov
pusha
out
mov
jae
jmp
jns
loop
pcmpgtd
lret
pop
mov
dec
gs
inc
into
mov
jb
iret
loopne
das
jb
aas
jbe
iret
inc
xchg
add
pop
mov
mov
sahf
sbb
outsl
rclb
or
dec
push
not
divb
das
pmullw
movsb
or
aad
xchg
arpl
leave
mov
cli
es
pop
data16
popf
cmpb
in
movsb
cmp
mov
fcoml
bound
xchg
mov
insl
push
out
movsb
lcall
movsb
fbld
cmc
insl
scas
push
add
stc
rclb
jne
or
or
xor
leave
add
imul
cmpsl
xor
cmpsl
leave
call
call
mov
loope
or
rcrl
test
xor
adc
pop
or
mov
mov
xor
mov
sarl
lret
orb
loope
mov
inc
mov
lea
cltd
loopne
and
fs
inc
out
pop
add
fildl
jecxz
xchg
cmc
jecxz
add
nop
nop
xchg
pop
jmp
push
xor
sbb
inc
xor
test
imul
ret
dec
inc
fwait
xlat
sahf
cmp
ds
mov
pusha
mov
inc
dec
cmp
cmpsl
jns
add
mov
push
mov
and
inc
lods
xor
repnz
adc
daa
push
push
push
cmpps
cmp
int
bts
lea
cwtl
mov
data16
popa
push
xchg
cwtl
pop
pop
aad
and
mull
push
adc
ret
mov
sub
pop
cli
inc
mov
jg
sbb
sbb
incb
push
add
sub
and
pop
enter
xchg
inc
xor
popf
jg
add
out
jns
pop
sti
mov
add
mov
xchg
test
jg
les
testl
push
jne
push
push
add
jno
mov
sub
mov
sbb
pop
sub
xchg
mov
in
sbb
or
cld
frstor
push
push
sbb
add
test
sbb
inc
pop
stos
adcb
bnd
fsubp
jg,pt
mov
mov
pop
cmp
jmp
call
cmp
std
fs
add
sbb
mov
xor
push
pop
ds
jo
fwait
ret
mov
sti
fstpt
mov
xchg
lods
lea
cmc
andl
inc
insl
cmpsl
cmp
fisubrl
out
mov
jecxz
in
push
and
mov
sahf
pop
inc
and
lea
mov
add
insl
repz
xchg
or
pop
mov
sbb
cld
fsubrs
xchg
adcl
cmp
push
aaa
lock
adc
inc
insb
or
mov
jmp
fstl
fs
aad
loopne
add
jmp
mov
leave
lahf
cmp
adc
pop
xchg
dec
sar
xor
dec
jg
mov
lret
mov
ja
stos
insb
sub
lds
and
lock
popf
dec
lea
ret
dec
adc
je
cld
jmp
mov
incb
jp
inc
pop
dec
sub
sub
das
bound
idiv
pop
xor
aaa
inc
lods
jae
test
sbb
leave
sub
or
xchg
fxch
divl
fcomps
xchg
ja
push
mov
jnp
xor
and
add
or
cmpsl
sub
std
jno
xlat
or
in
jecxz
pop
xchg
js
aad
test
pushf
out
cmp
mov
inc
insl
dec
xchg
outsb
test
outsl
xchg
rol
sub
mov
pop
testb
mov
xor
insb
push
xlat
push
add
mov
dec
push
sub
outsb
jp
jmp
out
adc
inc
push
or
inc
or
sbb
lods
jne
fnstcw
sbb
ds
std
sub
imul
jne
xlat
xchg
sbb
jge
mov
iret
int3
test
jb
dec
mov
fsubs
mov
xchg
notb
or
add
and
mov
clc
dec
and
sbb
push
jp
fdivr
gs
fwait
add
mov
dec
pop
cmp
pop
icebp
cmp
sbb
cmpsb
or
fldl
int3
aam
aad
ret
and
and
cmp
add
xorl
sub
mov
jl
shll
and
pop
lret
inc
lods
das
xor
scas
jg
jge
add
xchg
hlt
fucompp
aaa
jo
cmp
fcoml
adc
lods
or
ja
push
push
mov
xchg
test
xchg
scas
pop
or
adc
shrl
mov
fcmovbe
in
push
push
inc
mov
out
out
pop
jmp
cmpsl
dec
push
cld
mov
icebp
call
aad
mov
rcrb
sbb
jmp
dec
inc
movsb
cwtl
sbb
into
xor
xchg
inc
pop
and
xchg
lahf
mov
cwtl
in
call
push
and
xor
cmp
mov
xor
or
jno
and
adcl
or
push
sub
cmp
fsubl
pop
pop
sub
mov
mov
imul
xor
inc
inc
fiadds
popf
fsubl
cmpsl
fdiv
insl
fmuls
fists
jmp
push
test
push
stos
and
mov
inc
stos
sbbb
ret
ljmp
fcmove
sub
cwtl
push
sub
flds
dec
mov
or
pop
imul
dec
fldl
ljmp
and
push
or
mov
lods
sbb
lea
or
push
mov
mov
mov
test
mov
and
and
repz
into
xlat
or
jbe
inc
dec
jnp
cmp
xor
arpl
dec
push
aad
outsb
fnsave
cmp
ss
jge
aam
jbe
jl
aaa
lock
xor
fnstsw
jl
movsl
push
loope
push
mov
sbb
xor
push
add
cmpb
push
das
adc
inc
addr16
rclb
iret
ss
test
inc
inc
insl
jae
pusha
ja
xor
jns
sbb
lds
aam
jnp
xor
clc
xlat
adc
fdivrs
and
lret
jge
dec
call
adc
int3
pop
dec
sbb
xor
dec
or
pop
ljmp
cmpl
sub
ja
in
rcll
idiv
cmp
outsb
sbb
or
insb
pop
ret
xchg
push
clc
inc
sti
cmp
cwtl
pop
mov
push
mov
adc
test
xchg
fucomi
adc
stos
jg
add
sbb
roll
enter
sahf
xchg
jecxz
push
int3
out
fs
adc
add
lock
inc
mov
push
popa
std
cmc
pusha
scas
aas
fstp
pop
pushw
shll
aam
pop
cltd
imul
sarl
popa
outsl
sbb
clc
xchg
cmpsl
imulb
lcall
sbb
imul
popf
jge
adc
or
int
call
mov
sub
xchg
xor
dec
imul
scas
push
es
int3
aaa
xlat
add
xchg
adc
push
lcall
fcompl
dec
xor
repz
pop
mov
xchg
mov
pusha
pusha
xor
stos
inc
pop
lret
sub
lret
icebp
add
mov
lret
or
pop
pop
inc
cmc
adc
dec
fimuls
and
lods
or
mov
dec
push
imul
mov
aas
mov
lret
stos
in
enter
fists
push
lods
andb
mov
lret
mov
daa
ret
jo
and
or
mov
js
fildl
mov
decl
or
jmp
int3
out
xchg
lahf
mov
in
fnsave
lods
adc
dec
jg
or
not
lods
divb
call
inc
mov
insl
sub
jb
xchg
sub
sbb
and
hlt
sub
sub
adc
jg
in
in
jo
out
mov
and
dec
into
add
sahf
iret
push
cmpb
add
cmp
insl
xchg
mov
fwait
mov
fbld
push
inc
cmc
or
adc
dec
loopne
mov
cmp
cmp
push
cli
rcrl
test
fadd
jle
jmp
jb
or
sub
imul
stos
cmc
and
sub
sub
add
inc
push
adc
pop
xor
mov
loope
imul
xchg
dec
add
xchg
sbb
adc
inc
or
mov
fidivl
mov
sub
out
or
jl
std
jmp
sbb
dec
dec
mov
stos
mov
pop
cmc
sub
mov
punpckhdq
inc
cmc
stc
ljmp
pop
add
jae
or
xchg
dec
add
sub
cmp
arpl
sbb
xchg
adc
pop
mov
sub
xchg
dec
or
daa
push
dec
mov
adc
xor
add
hlt
int
or
mov
sub
jp
mov
dec
cli
rorl
bound
lahf
jnp
repnz
mov
mov
cwtl
imul
fdivs
xchg
sbb
dec
or
mov
arpl
into
inc
sbb
shll
push
and
pushf
push
mov
mov
aaa
pop
xchg
fstp
inc
aam
arpl
arpl
cmp
test
or
push
fwait
sub
pushf
daa
xor
jg
test
leave
scas
in
push
pushf
mov
cmc
lret
cmp
lds
stos
cld
stc
xchg
xchg
fsubl
xchg
imul
push
cld
outsb
inc
test
mov
sub
xor
fbld
mov
in
mov
xchg
imul
mov
iret
xor
jno
stos
ds
jbe
in
je
rcrb
xor
pop
es
in
adc
add
in
movsb
loope
shrl
out
mov
or
push
mov
sbb
gs
test
or
pushf
movsb
dec
ja
adc
ret
add
das
inc
jne
icebp
fwait
dec
jo
jns
loop
cltd
es
inc
pop
jg
mov
lret
pop
mov
jg
repnz
stos
mov
jae
inc
bound
mov
out
out
fists
sbb
xchg
popa
std
inc
scas
jle
push
pop
into
inc
xchg
out
add
sub
xlat
mov
test
sub
xor
clc
push
les
enter
arpl
pop
push
stos
push
mov
movsl
sahf
xchg
pop
push
push
in
nopl
fwait
sti
jle
out
mov
xchg
or
popf
enter
dec
push
movsb
jmp
ja
xchg
cmpb
sub
mov
xchg
xchg
jb
call
jns
out
jno
mov
dec
aas
sub
jne
adc
jp
clc
jne
xor
jnp
add
fildll
imul
movsl
or
add
out
sbb
inc
xchg
push
and
cs
outsl
aad
lret
inc
call
cmp
aam
lods
or
pop
cmp
iret
jne
sbbl
mov
mov
add
xorb
jnp
adc
inc
jns
inc
mov
sahf
fs
scas
push
stos
lds
sub
mov
mov
add
push
and
iretw
das
jne
in
adc
shlb
sub
daa
into
sub
hlt
inc
xchg
inc
hlt
outsl
mov
mulb
loopne
outsl
sbb
pop
pop
dec
and
push
and
call
sarl
jne
cmp
jle
push
mov
jbe
stc
add
rcr
sbb
lods
fs
lds
popa
mov
dec
mov
and
shll
mov
inc
shrb
addb
hlt
adc
push
jno
mov
cmc
add
jnp
fildll
xchg
push
push
xorl
mov
das
adc
add
mov
in
sbb
sub
push
jmp
push
arpl
xchg
sub
out
mov
jb
aad
insl
std
in
adc
inc
and
paddw
clc
stos
adc
jae
fimull
inc
xchg
mov
pushf
addr16
dec
pop
mov
push
mov
and
pop
popa
pop
or
fsubrs
mov
sbb
inc
fildl
pop
repz
aas
cs
into
mov
cmp
jecxz
test
lret
mulb
jp
scas
fmull
out
ja
xor
fdivrs
jl
mov
sbb
ss
mov
or
jbe
mov
or
mov
test
in
es
movsb
mov
inc
out
mov
jge
dec
sub
xchg
push
dec
leave
push
mov
mov
aas
f2xm1
adc
cmp
arpl
lods
pop
xchg
push
adc
clc
jbe
adc
xchg
shlb
or
jl
addr16
es
mov
gs
js
xchg
mov
mov
adc
hlt
xlat
aad
jle
xor
andl
das
aas
push
in
or
xchg
mov
mov
pop
inc
add
scas
stc
pop
popf
das
sarl
ljmp
sarb
scas
mov
sub
outsl
push
les
int3
pop
mov
jecxz
lcall
dec
cmpsl
sub
push
push
clc
sahf
ljmp
cli
xor
pop
mov
out
mov
pop
or
mov
rcr
sti
sbb
stos
sbb
pop
add
sub
cmc
sub
fmul
add
xor
pop
fisttpl
sub
mov
adc
xchg
stos
in
pop
push
mov
out
mov
ljmp
arpl
xor
mov
or
outsl
mov
rep
mov
and
cmp
movsl
xor
push
insb
inc
nopl
popa
mov
negb
adc
sub
outsl
jp
sbb
shlb
movsl
mov
test
div
jns
adc
pushf
dec
jns
cwtl
xchg
cld
add
repz
or
negl
pop
popa
jmp
lahf
in
and
push
clc
xchg
adc
and
daa
jno
mov
rcrl
int3
and
cmp
mov
nop
popa
call
push
inc
xor
jecxz
daa
iret
jb
jecxz
stc
insl
adc
mov
icebp
add
lds
and
xlat
or
loope
ficompl
in
test
push
push
bound
cld
and
xor
cmp
xchg
mov
in
mov
xchg
bound
mov
sub
clc
jns
das
leave
mov
outsb
xchg
inc
ds
pop
jno
or
pop
xchg
stos
pop
jge
fistpl
adc
mov
addr16
add
push
fldl
out
shlb
adc
roll
cmp
icebp
xor
mov
add
out
or
cmc
lods
sti
divb
inc
mov
popa
cld
mov
sahf
pop
adc
inc
sub
mov
adc
int
dec
lret
cwtl
or
adc
lods
pusha
xchg
dec
shlb
and
int3
pop
jecxz
sub
inc
movsb
fiaddl
roll
push
sub
test
mov
dec
add
adc
cmc
hlt
mov
sbb
testl
dec
mov
out
sbb
pop
mov
pushf
out
mov
and
jo
ret
std
adc
fwait
mov
shlb
xchg
dec
aam
push
xor
add
xlat
mov
jne
fsqrt
sub
icebp
or
outsb
aaa
sub
call
xchg
pop
xchg
lea
pusha
xor
mov
sub
jmp
push
or
jle
lret
add
cs
dec
jnp
inc
in
fcompl
dec
dec
aaa
shll
adc
stos
add
xorl
fisubrs
inc
ds
xchg
lahf
gs
addr16
fidivl
stos
mov
arpl
mov
and
adc
aas
addb
pop
and
sbb
jb
in
stc
adc
and
mov
fs
mov
cltd
mov
out
push
testl
and
mov
pop
aaa
cmpsb
xlat
dec
mov
test
mov
push
lahf
imul
push
and
cmp
cli
cmp
inc
dec
add
pop
adc
push
pop
bnd
andl
mov
popa
add
imul
sub
pop
lret
push
cld
xchg
mov
movlps
xor
mov
dec
push
inc
lss
mov
mov
pop
stc
xchg
fcmovnbe
iret
fsubrs
sub
mov
pop
xor
push
lods
jae
pop
rolb
add
xchg
xlat
sti
cmpsl
sub
or
pop
jecxz
adc
push
push
sarl
cs
xlat
mov
xorl
mov
add
push
inc
popf
mov
and
lcall
add
daa
hlt
adc
pop
lea
push
or
arpl
test
xchg
push
sub
inc
addr16
mov
xor
mov
hlt
sbb
or
out
bnd
push
loopne
popf
mov
pushf
push
iret
add
out
or
lds
sbb
nop
add
mov
lds
stos
adc
adc
aad
aas
movsl
mov
xor
incb
pop
sbb
mov
dec
mov
int
sub
loop
and
mov
rorl
inc
jl
aas
test
xchg
mov
sti
aad
jbe
fidivs
xor
jmp
mov
or
sub
pop
or
les
mov
inc
cmp
inc
test
pushf
jmp
addl
ds
or
mov
in
cmpsl
mov
repz
jle
push
mov
xchg
mov
ljmp
aad
jecxz
fs
add
fisttps
xchg
popa
add
insb
or
cmp
xchg
add
lods
dec
into
fwait
notl
mov
and
mov
push
mov
jmp
jne
lea
pop
movb
inc
xor
jnp
jle
mov
pop
mov
sub
jbe
xchg
andb
sbb
inc
add
pop
push
loope
adc
or
push
xchg
jg
or
add
jae
scas
xacquire
stc
clc
loopne
imul
dec
ljmp
and
xor
movsb
std
sbb
sub
out
in
iret
loopne
inc
sbbb
lea
xor
mov
movsl
cmpl
aad
adc
shlb
cmp
ret
jne
dec
mov
dec
sbb
cld
mov
xor
dec
sub
call
jae
mov
hlt
fdiv
stos
insl
test
mov
sbb
xlat
es
pop
cld
addr16
insl
add
iret
sub
push
inc
pop
sub
sahf
mov
icebp
out
dec
fdivrp
daa
push
addr16
inc
xor
jb
cltd
adc
xchg
jbe
bound
pop
jmp
in
insb
pop
pop
out
jp
xchg
mov
popf
addl
or
mov
dec
mov
bound
fwait
xchg
mov
dec
call
mov
shr
in
leave
out
rolb
push
cmc
popf
inc
mov
push
inc
sti
stc
push
test
jp
inc
jae
pop
popa
mov
sub
ss
jo
lds
daa
pop
inc
cld
fadd
xor
cmp
dec
mov
dec
int
clc
jecxz
insb
sbb
and
jl
sbb
sub
inc
xchg
xchg
imul
ret
pushf
cld
repz
mov
sarl
lea
clc
jnp
test
push
cmp
ffreep
jnp
cwtl
mov
dec
cwtl
mov
scas
dec
andl
out
jg
xchg
push
mov
pop
jle
add
das
dec
dec
inc
cmc
out
mov
pop
insb
nop
xchg
push
xchg
iret
mov
add
bnd
xchg
sbb
inc
test
lcall
mov
hlt
ficoml
shrl
shl
jmp
pop
ror
pop
xchg
ss
test
insb
pop
call
cmp
jmp
outsl
cmp
fwait
out
mov
pop
add
orb
mov
aaa
pop
orb
adc
mov
popf
xor
mov
xor
and
or
push
mov
cmp
mov
and
ja,pn
adc
call
pop
pop
iret
push
mov
fiaddl
in
pop
xchg
fwait
aam
cmc
aas
mov
ficompl
mov
cld
dec
jns
sub
jo,pn
out
sbb
popa
data16
insl
sub
mov
xor
mov
mov
inc
inc
sbb
xchg
push
pop
inc
inc
inc
pop
gs
sub
push
sti
sbb
aaa
push
xchg
lds
leave
in
lret
loop
lds
and
xor
cli
xlat
jmp
xor
fwait
inc
mov
out
jge
jo
lea
push
pop
mov
int3
aad
push
cmp
scas
es
xchg
and
mov
cld
std
xchg
cltd
or
cwtl
xor
pextrw
addl
sub
pop
jbe
pop
das
rcl
and
mov
cltd
push
add
pop
dec
mov
frstor
push
jl
xchg
movsb
daa
mov
mov
jecxz
movb
in
mov
or
inc
sub
shrb
je
lea
dec
les
mov
pusha
loop
leave
inc
cmp
fcomp
fldl2e
dec
mov
jle
es
adc
int
push
push
inc
cmp
mov
pop
lds
or
sti
test
dec
lods
mov
outsb
xrelease
xchg
lahf
fwait
inc
icebp
and
cs
mov
imul
jo
push
fsts
add
dec
cwtl
insb
pushf
mov
stc
rcrb
scas
inc
sub
insl
lods
dec
mov
xchg
sti
bound
mov
jecxz
pop
pusha
push
movsb
inc
sub
cwtl
dec
ret
mov
movsb
aaa
push
hlt
cmp
stc
fwait
les
inc
sub
jle
mov
xor
cld
push
scas
mov
pop
cmpl
les
or
loopne
jp
jo
adc
sub
xor
mov
dec
pop
pop
inc
adc
lcall
xor
add
aad
iret
pop
mov
sub
in
jo
mov
stos
add
lods
mov
push
cli
jecxz
cs
aam
or
in
shrl
sbb
inc
sbb
mov
sbb
push
xor
out
jb
popa
rcll
es
into
test
cld
or
jge
icebp
loope
aad
dec
loope
lret
into
jo
stos
or
mov
cmp
pop
jl
and
iret
ja
iret
push
les
sbb
inc
mov
mov
mov
or
or
dec
add
call
sub
call
cmp
dec
jecxz
and
push
negb
imul
push
inc
mov
faddl
fs
sarb
js
and
outsb
xchg
fadds
fld
fnstcw
dec
dec
in
xor
fwait
insl
int
inc
add
add
fs
scas
lea
push
sti
mov
stos
icebp
leave
sbb
xchg
loop
add
xor
push
adc
fwait
mov
xchg
pop
dec
out
dec
in
repnz
mov
pop
das
repz
jp
mov
and
fstl
test
inc
jge
and
pop
pop
mov
stos
add
xchg
setg
dec
repz
in
aam
in
pop
push
mov
cltd
loope
pushf
xlat
rolb
push
fld
jb
push
out
daa
je
jb
pop
dec
jp
fldenv
sub
sub
in
cmp
mov
js
mov
push
or
ss
add
aas
inc
loop
and
fsts
or
mov
sti
xchg
lret
push
stc
push
das
mov
mov
sub
sub
fidivs
ja
imul
push
mov
cmc
imul
test
data16
or
ret
push
fs
arpl
push
cmp
aad
cld
sbb
in
stc
out
sub
dec
jmp
clc
pop
mov
push
and
jns
lods
mov
sub
sti
push
or
xchg
mov
es
mov
jo
xor
jb
loop
cmp
jl
add
icebp
sbb
pusha
pop
out
sub
sahf
nopl
mov
sbb
and
push
dec
cwtl
in
popf
scas
push
repz
ljmp
fdivrs
mov
imul
push
data16
mov
push
inc
jno
lret
xchg
mov
shlb
notl
test
lods
enter
mov
shll
mov
pop
sub
jb
pop
lods
mov
je
and
call
adc
and
push
mov
push
addr16
pop
inc
cmovge
push
xchg
xor
dec
mov
pop
scas
cli
jecxz
stc
push
dec
lods
out
jbe
mov
dec
hlt
test
cmpsb
and
pusha
cmp
adc
roll
add
sub
ret
sub
notl
or
test
jg,pn
xor
inc
jno
push
push
xor
lretw
jl
rcr
and
inc
dec
cs
imul
jns
dec
and
lods
push
mov
xchg
sub
push
stos
ret
sub
push
cmpsb
jp
notb
dec
adc
sarb
inc
push
hlt
sbbl
aaa
pop
dec
mov
add
popa
mov
loope
push
push
stc
scas
add
sbb
ret
ret
adc
xchg
sbb
jne
add
sbb
sub
int3
push
inc
jmp
lret
push
sbb
mov
jecxz
mov
mov
repz
jns
adc
mov
addl
or
cld
cld
mov
and
mov
inc
lods
mov
gs
adc
inc
rolb
test
or
cs
add
mov
mov
stc
cld
sbbw
or
xchg
stc
mov
stos
clc
lods
fwait
movsb
movsb
jo
aas
in
repz
cwtl
je
js,pn
jb
pushf
pop
mov
sbb
sti
stos
mov
or
push
leave
paddw
cmp
xor
sub
dec
xor
mov
and
inc
testb
lock
xor
decb
stc
mov
add
xor
out
and
sbb
stc
and
shrb
jnp
shlb
cmpsl
mov
test
sarl
push
jb
xchg
push
cmp
rcrb
hlt
popa
idivb
or
xor
cmc
cmpsb
jno
je
and
lret
inc
sarb
out
rorl
mov
aam
ret
lods
popa
mov
mov
fimull
imul
push
lcall
sbb
jnp
mov
push
loopne
in
xor
add
lret
lea
mov
aam
inc
inc
fwait
mov
mov
jmp
xor
pop
xchg
pop
pop
lret
aad
dec
mov
sub
jo
dec
dec
add
inc
adc
sbb
add
jp
jp
cmc
mov
stos
add
dec
sbb
xor
orl
sahf
nop
into
push
mov
shrb
sub
mov
mov
in
push
mov
dec
adc
jnp
lret
and
lea
ret
pop
bswap
jnp
jl
dec
je
cmp
repz
and
arpl
jns
mov
addr16
movl
adc
adc
test
add
int
iret
push
aaa
lds
out
pop
pusha
rcrl
aam
fisubs
nop
adc
add
mov
dec
int3
mov
adc
pop
fcmovnbe
test
imul
mov
cmpsl
mov
cmc
imul
mov
add
test
lds
int
adc
pop
xchg
fwait
ljmp
pop
inc
or
aaa
jbe
out
daa
add
ja
inc
cwtl
insb
mov
jge
insb
leave
outsl
sarb
addl
pop
xchg
and
sti
xor
jno
cmc
imul
sub
xlat
outsl
dec
je
cs
das
add
pop
jo
test
fsubrp
dec
ja
cmpsb
mov
sub
mov
out
lea
sub
mov
cld
orb
cmpsl
mov
idivl
insl
data16
out
xor
xchg
jns
push
fstps
adc
leave
inc
call
gs
aaa
fisttps
fdivr
rolb
sti
fimull
lods
stc
cld
mov
dec
lahf
inc
mov
add
je
and
mov
ss
xor
mov
dec
mov
test
xlat
cmp
clc
xchg
dec
aad
jnp
inc
cmp
sbb
push
cmp
test
ficomps
mov
cld
jl
aas
cld
in
xchg
outsl
jle
or
mov
jns
aaa
aam
leave
mov
jge
rclb
int3
mov
fldenv
mov
mov
add
and
cmpsl
out
mov
loopne
sbb
clc
cli
cmp
pop
aad
pop
out
inc
in
lcall
push
lods
in
test
fdivrs
sbb
jns
mov
ret
push
std
adc
popf
mov
mov
cmpsb
xor
nop
outsb
test
leave
mov
jmp
xchg
lea
push
adc
inc
bound
inc
pop
dec
dec
lret
es
bound
lods
adc
mov
clc
js
sbb
hlt
ds
test
sbb
fsubl
and
rcll
sub
xlat
sub
pop
ss
movsl
adc
xor
ret
rcr
jmp
lock
aaa
stos
lea
xor
das
imul
incl
jmp
jl
push
movsb
fwait
mov
inc
scas
pop
jo
fisubl
fs
sub
jp
in
jmp
mov
out
icebp
xchg
lds
jl
out
call
std
inc
mov
jbe
fisubl
push
out
sub
mov
data16
js
push
xchg
xchg
adc
mov
movsb
xor
test
add
push
movsl
mov
mov
leave
xor
movl
mov
inc
cmp
ret
aad
popf
jle
and
jmp
dec
add
xor
push
fildl
lods
mov
vpaddsb
push
aaa
in
ret
rcl
call
test
mov
or
mov
aaa
es
test
pop
add
mov
mov
sarl
xor
xchg
in
loop
cmp
out
push
fdivrp
lcall
popa
mov
mov
outsb
lock
pop
add
sbb
fidivl
mov
add
cmpsl
push
xor
pusha
jp
inc
cmp
ret
test
xchg
mov
sbb
add
adc
repz
pop
popf
mov
testl
scas
mov
dec
inc
notl
sbb
movsb
xchg
inc
sarb
sub
aam
fcomps
dec
insb
std
or
mov
cmp
xchg
add
nop
push
pop
jle
or
mov
pushf
xchg
out
adc
sub
or
mov
sbb
push
addr16
adc
mov
jne
lds
outsl
or
pop
xor
pop
inc
pop
pop
inc
aaa
jae
adc
mov
xchg
js
or
test
push
mov
scas
xchg
into
pop
jmp
sti
cli
mov
and
frstor
int
xchg
lahf
push
ds
in
lret
pop
in
stc
sub
test
and
mov
fsub
add
movsl
push
cli
mov
inc
sub
out
push
sub
ror
jo
jecxz
decl
out
jg
cmpsb
cmpsl
repz
int
or
push
jae
mov
mov
rcr
test
fnsave
aam
rcrl
in
out
inc
dec
jns
push
inc
pop
fsubp
pop
cmp
xor
lods
cwtl
mov
mov
and
mov
fcompl
push
xchg
add
xor
int
mov
cmp
std
mov
andb
push
push
ljmp
enter
xchg
mov
xchg
lret
incl
mov
pop
ljmp
sub
out
add
insl
int3
lcall
push
dec
clc
sub
fnstenv
hlt
int
inc
cmc
lahf
dec
daa
or
fcmove
push
es
mov
fisubrl
push
mov
sbbb
add
lods
pop
push
dec
lods
aaa
xchg
xor
stos
stos
jae
clc
das
push
mov
xchg
push
repnz
lret
xchg
hlt
and
pop
aad
out
adc
rcrb
xor
mov
loopne
or
inc
mov
jg
dec
out
out
mov
lods
ds
clc
push
movsb
adc
inc
aad
and
test
test
movsb
movsb
dec
and
mov
adc
xchg
mov
or
pop
jl
push
iret
in
stos
jl
lret
lds
mov
xchg
dec
in
sub
mov
jmp
ja
aad
jns
lret
fnop
pop
loope
jnp
push
test
add
mul
test
mov
pushf
and
dec
fdivp
fildl
pop
sbb
mov
xor
mov
inc
rolb
pop
leave
sbb
out
xchg
roll
and
aas
les
outsb
add
inc
jl
sbb
test
cltd
adc
js
add
jo
and
in
inc
das
sub
mov
imul
pushf
cmpsb
rcl
cmp
or
mull
in
lods
xor
aas
sbb
fsubrp
loopne
in
jb
jge
adc
or
xchg
shl
or
jb
sbb
adc
cmpsl
mov
addr16
inc
mov
sbb
outsb
iret
imul
arpl
incl
movsl
inc
sarb
fwait
or
lret
dec
lea
inc
or
aam
sub
out
xchg
pop
push
arpl
push
xor
repz
jno
cltd
test
add
xchg
sarb
clc
mov
or
test
adc
testl
or
cmp
jo
fwait
ljmp
fs
mov
lahf
loop
inc
bound
jae
or
cs
sbb
out
mov
ljmp
mov
movsl
sahf
sbb
icebp
dec
out
insl
lods
jle
inc
cmp
call
xor
and
push
out
inc
sbb
jne
jge
push
popa
xchg
cli
imulb
inc
addr16
add
adc
pop
xor
test
pop
popa
fwait
in
enter
mov
mov
fs
cmp
inc
sbb
ret
adc
mov
mov
in
daa
cmc
sbb
cmp
xchg
in
mov
inc
repnz
cmp
lret
test
lock
fcomps
cmp
shll
xchg
lret
jbe
cmpsb
cmc
test
leave
mov
mov
enter
push
sub
hlt
popa
out
inc
xchg
and
cmpsb
push
mov
int3
add
jl
push
cmp
lods
mov
mov
dec
adc
xchg
cli
je
popf
test
or
mov
test
cltd
fsubrs
insb
xor
test
push
divb
xor
pop
bound
ss
jmp
push
mov
sub
adc
push
inc
sbb
fcomps
sbb
cmp
cmp
stos
pop
imul
push
repnz
jae
cmp
mov
fldt
or
push
pop
int
lea
mov
or
lahf
push
imul
pop
adc
and
bound
xchg
cltd
das
scas
in
testb
mov
cwtl
icebp
lret
rcll
int
in
pop
mov
inc
mov
sub
int3
push
jns
imul
add
pusha
mov
mov
dec
cmp
lahf
adc
add
es
pop
push
cmc
dec
arpl
popl
jecxz
imul
cli
mov
sub
pop
inc
push
sbb
lret
movb
in
xchg
dec
cmp
in
mov
es
fucomp
pop
int
daa
subb
sahf
mov
adc
sbb
add
push
pushf
mov
xor
and
inc
leave
sub
dec
xor
pop
clc
sub
pop
xor
shlb
mov
lcall
mov
sbb
mov
jp
jecxz
aaa
fwait
int
lcall
mov
sbb
mov
stos
iret
xchg
lahf
fiadds
sub
push
mov
sub
dec
jp
mov
or
mov
lods
insl
sub
dec
pop
cli
enter
arpl
scas
shll
mov
in
cwtl
adc
test
inc
lahf
sub
dec
movsl
imul
dec
adc
xchg
or
pop
scas
es
jl
push
movsl
jl
xchg
roll
push
mov
cmp
or
jl
andl
sub
je
push
repnz
push
push
adc
fbstp
insb
xchg
push
xchg
lea
mov
sbb
cmc
movsl
push
out
mov
out
mov
dec
jne
cli
cld
fidivs
lret
dec
addr16
int
xor
mov
add
rorb
cltd
dec
push
mov
aad
loope
out
push
mov
push
lea
test
loopne
pop
movsb
addr16
clc
cli
mov
push
mov
fidivs
rcrb
jo
push
loopne
xchg
jg
ss
cld
mov
push
mov
movsl
shr
pop
pushf
dec
je
imul
stos
and
cmp
mov
flds
lods
cs
mov
mov
aam
pushl
push
adc
mov
xor
mov
jl
jnp
ret
subb
sub
mov
roll
fidivrs
sub
jns
push
or
push
xor
add
cwtl
jmp
stos
adc
adc
sbb
mov
neg
lahf
push
int3
push
push
movsb
dec
aas
xor
jns
inc
or
jmp
leave
hlt
cmp
xchg
push
mov
jo
or
and
mov
addr16
jo
fidivs
out
int
pusha
enter
inc
mov
xor
and
mov
aaa
fistpl
stos
popf
mov
dec
insl
movsb
mov
and
mov
pop
inc
leave
cmc
ljmp
cmp
and
clc
xor
mov
enter
stos
rcll
sbb
cmp
jbe
push
arpl
xor
popa
ja
inc
bnd
inc
fldenv
add
xchg
jmp
adcl
int3
inc
sbb
add
jno
js
addr16
push
adc
int3
pop
sub
mov
jo
gs
or
dec
cmp
in
jnp
test
subl
cmp
inc
adcb
out
lods
out
push
xchg
sbb
cs
mov
cmp
call
jnp
in
stos
test
cltd
sub
inc
mov
jmp
enter
push
and
jbe
es
aas
push
push
clc
jne
ss
mov
call
fsubrl
mov
les
push
insb
push
push
sbb
sbb
sub
or
cmpsb
xchg
xor
push
xor
adc
push
mov
dec
pop
mov
test
cmp
addl
and
nop
pop
loop
mov
addr16
stc
imul
xchg
cmp
push
push
jmp
ljmp
in
mov
fwait
xchg
lcall
daa
jns
mov
xor
fwait
xor
mov
adc
push
push
mov
xchg
out
imul
pop
mov
cwtl
cmp
test
mov
fistpll
pop
jb
jecxz
popa
stos
push
push
mov
xor
push
ljmp
add
aad
mov
inc
or
cmp
testb
mov
jle
cmp
orps
data16
dec
mov
or
hlt
add
mov
push
fisttpll
pop
daa
jno
xchg
les
xchg
mov
rorb
cmpsl
test
cmpsb
push
subb
mov
daa
mov
scas
xchg
sbb
dec
popa
daa
sub
aad
lcall
xchg
popa
test
mov
mov
insb
mov
std
fisttpl
xchg
fwait
les
xchg
sub
lret
ret
pop
cmpsl
jae
adc
gs
push
clc
jg
dec
pop
es
jp
sub
pop
or
mov
and
sbb
dec
xchg
sahf
mov
add
cmp
and
jle
js
inc
fucom
es
test
addr16
faddl
push
mov
gs
inc
ss
lahf
notb
xchg
xchg
mov
jbe
mov
ja
fcmovb
cli
lcall
jae
into
and
jo
mov
dec
xchg
xchg
pop
dec
mov
mov
inc
add
inc
push
sbb
clc
hlt
and
stc
insl
insl
lahf
fisttps
dec
pop
lret
xchg
mov
jo
sbb
mov
xchg
pop
and
orb
jnp
stos
adc
fsubs
mov
inc
xor
sbb
cmpsl
xchg
cmp
inc
mov
ret
pusha
push
out
mov
fmuls
loop
inc
iret
pop
mov
into
and
xor
jae
jmp
mov
jecxz
mov
xchg
xlat
je
arpl
fs
ja
xchg
pop
pop
jge
mov
ds
icebp
sub
roll
subl
mov
xchg
mov
call
mov
inc
mov
outsl
dec
ret
adc
push
cmp
movsl
pushf
outsl
and
jp
sbb
insb
ret
aad
xor
add
arpl
inc
jnp
test
push
std
bound
sub
xlat
insb
lret
jne
fnsave
xchg
rdmsr
sbb
xchg
sub
call
xor
push
push
cmc
mov
pop
sbb
mov
pop
pop
cmpl
lods
inc
ret
fisubs
ficompl
icebp
into
fs
mov
sub
adc
add
sub
ss
pop
xor
js
mov
dec
lods
sbb
sub
lods
inc
xchg
lods
cmpsb
inc
pop
pusha
aad
push
xor
inc
jg
lods
leave
lcall
cmpsb
cmp
cmp
cmp
scas
cmp
mov
pushf
dec
test
adc
xorl
push
hlt
lret
adc
cmp
inc
cwtl
push
push
sub
es
in
pop
hlt
popf
loope
subb
push
push
popa
in
xchg
xchg
dec
out
or
push
aam
shlb
or
test
cmpsl
mov
sub
push
adc
or
pop
mov
adc
ret
cmpsl
push
hlt
push
sbb
ret
jns
lods
les
push
sub
jmp
pop
cld
call
ud2
inc
fnop
mov
insb
adc
data16
pushf
and
mov
and
or
jp
out
js
popf
push
jge
out
mov
jnp
dec
add
or
or
or
xor
mov
jb
add
and
je
add
cs
fidivs
test
int
xchg
pop
pop
iret
repz
mov
sbb
scas
jl
push
mov
insl
call
mov
daa
cmpsb
dec
icebp
xchg
or
sbb
mov
push
mov
fldt
out
push
lret
dec
xchg
xchg
outsl
push
mov
inc
fmuls
in
loope
push
mov
push
sahf
sahf
es
stc
enter
dec
push
jg
sub
xor
std
add
xchg
mov
mov
leave
addr16
cmc
inc
mov
mov
jb
inc
mov
xchg
aam
outsl
in
cwtl
push
sahf
mov
pop
out
mov
push
test
jp
inc
inc
mov
pop
pop
inc
mov
dec
jge
push
ss
es
mov
or
jbe
push
pop
bound
or
inc
cmpsb
iret
in
lcall
sbb
lcall
into
or
xchg
jge
cmp
clc
adc
aam
rol
out
push
mov
in
jns
lret
int3
mov
push
xchg
add
sub
sub
sub
jnp
adc
sbb
das
cmc
jg
sbb
aam
sub
lds
jb
daa
xor
mov
addl
mov
scas
rolb
dec
xor
pop
iret
push
push
in
popa
pop
sbb
add
jnp
sbb
je
add
push
rcrb
xor
pop
ja
mov
addl
out
push
inc
pop
mov
dec
aad
out
imul
pop
stos
fwait
insl
push
sbb
cmp
lock
jb
adc
std
mov
dec
test
in
sbb
push
lret
testl
mov
movb
lods
add
push
or
idivl
and
mov
frndint
idiv
mov
xchg
rcrb
fidivl
std
in
popf
cltd
and
test
mov
jp
jae
xor
or
add
xchg
ret
ja
and
ja
insb
jae
xchg
pop
cmp
jmp
ja
jmp
mov
test
ss
andl
loope
dec
call
test
xor
out
gs
lahf
mov
aaa
jb
mov
mov
or
xchg
dec
test
sub
or
push
inc
loop
arpl
xor
jno
push
dec
push
mov
jnp
test
cmpsb
lahf
adc
adc
add
dec
mov
lcall
mov
mov
mov
sbb
sub
stos
adc
or
dec
cli
jo
xor
sbb
iret
das
mov
pop
jp
or
dec
sahf
sbbl
mov
out
sbb
lods
sbb
andl
cmpsl
or
fwait
lds
push
into
or
bound
popa
mov
and
and
mov
jae
xchg
call
out
add
mov
outsb
jp
dec
hlt
nop
cmp
in
xor
aas
in
mov
orl
cmpl
add
insb
call
sub
in
and
mov
stos
dec
pop
scas
mov
lret
and
dec
cmc
cmp
stc
xchg
push
mov
push
lods
sahf
pushf
adc
shll
xor
daa
and
addb
or
mov
insl
pop
jl
fmulp
and
pop
pop
cli
or
fldl
dec
mov
aas
imul
mov
pop
mov
mov
hlt
hlt
mov
inc
js
mov
xor
xchg
stc
imul
outsb
js
out
mov
hlt
cmp
fistpll
idivb
add
icebp
ss
jnp
xchg
aaa
pop
fcoml
scas
int3
repz
push
sti
divb
xor
cmp
lcall
push
pop
mov
aad
add
aad
or
hlt
shlb
ret
imul
push
jns
repnz
call
xor
out
lods
stos
mov
sub
mov
jnp
in
aam
cmp
inc
push
mov
sub
or
xchg
clc
rcl
dec
enter
aam
and
ljmp
daa
test
jnp
add
lods
jnp
or
iret
outsl
mov
or
sti
push
xchg
stos
or
dec
repz
pop
rcll
fmull
cmp
fadd
lret
adc
fisubl
xchg
and
ss
in
lret
orl
jmp
and
adc
xchg
push
aas
mov
pop
aad
and
dec
add
pop
call
inc
movb
cmpsb
adc
es
or
rclb
adc
shll
adcb
jb
ret
test
test
jl
ds
into
pop
xchg
movsb
push
xchg
jle
leave
mov
mov
dec
cmpsb
std
push
xchg
pop
lods
insb
xor
sbb
dec
sahf
mov
jecxz
shll
add
fninit
daa
mov
lret
lods
loope
mov
rcl
xchg
cltd
sbb
leave
mov
addl
dec
sbb
cmp
push
dec
sub
xor
pop
pop
sub
dec
outsb
mov
mov
dec
inc
adc
xlat
imul
push
add
pop
adc
pop
jnp
sbb
mov
aam
mov
cli
xor
push
aam
filds
add
popf
cmp
add
add
rcll
mov
mov
sub
adc
mov
mov
and
or
or
cmp
mov
aaa
rcl
inc
in
add
mov
aaa
test
mov
ss
adc
push
shrb
xchg
push
adc
lret
push
and
add
jnp
push
push
jl
es
xchg
fwait
adc
fisubrl
out
sbb
mov
insl
mov
xor
aas
mov
dec
mov
sub
out
mov
xchg
ljmp
mov
dec
ds
dec
sub
and
sub
inc
push
cmp
mov
push
push
sub
push
mov
mov
or
cli
sbb
fwait
movl
into
jle
adc
xchg
sbb
sub
dec
pop
hlt
mov
cli
lods
xchg
gs
hlt
cmc
decl
push
inc
xchg
test
push
fs
jp
and
xchg
lods
fdivr
subl
loopne
inc
fdiv
add
cmp
cmp
dec
mov
push
pop
pusha
ja
xchg
and
dec
adc
inc
pusha
pusha
clc
std
ja
and
cmp
dec
bnd
movsl
sbb
xchg
adc
sbb
or
std
fs
aaa
mov
cmp
jae
push
mov
xchg
xor
cmovno
ret
jbe
rclb
mov
xchg
cmp
insb
bswap
or
push
repnz
hlt
cmp
and
push
cmc
lock
lahf
xlat
adc
xchg
xchg
pop
cmpsb
lods
sti
dec
xchg
mov
or
xor
lods
jmp
ret
imul
mov
jmp
mov
and
les
inc
pushf
lret
xlat
dec
or
push
cmpsb
mov
hlt
dec
mov
in
out
inc
les
lahf
dec
test
loope
aad
mov
cli
in
mov
mov
add
int
add
mov
in
orl
xor
cmp
mov
dec
xchg
ret
loope
push
bound
mov
insb
loope
or
dec
push
inc
add
mov
push
sub
and
sahf
jbe
dec
shr
hlt
pop
add
incl
fdivp
dec
adc
jmp
xchg
cli
adc
mov
mov
insl
inc
push
jecxz
lock
push
outsl
shll
sub
inc
dec
in
fisubrs
jo
adc
lcall
jmp
sub
out
mov
cmp
loope
pop
hlt
xlat
mov
test
jge
mov
enter
fwait
push
icebp
or
ss
sbb
push
in
and
xchg
shll
dec
in
in
mov
cmc
scas
push
insb
inc
in
xor
pop
int
adc
dec
mov
pop
or
pop
pop
jg
jnp
cmpsb
push
sub
ret
and
push
jp
dec
popa
adc
mov
mov
jb
pop
push
je
push
fs
pop
push
popa
in
orb
ja
rorb
xchg
push
or
or
add
xor
jmp
push
cli
popa
cmp
sarl
xorb
xor
inc
sbb
bound
in
or
out
addr16
dec
push
jbe
out
add
jbe
jle
insl
mov
subb
mov
mov
ret
insb
mov
add
cs
hlt
ret
pop
lea
iret
aam
push
jns
outsb
pop
sbb
inc
or
jp
xchg
lret
in
and
sahf
jo
test
and
or
mov
mov
orb
add
in
mov
adc
loop
xor
aad
and
fs
imul
loop
pop
cmc
xchg
hlt
arpl
inc
movsb
inc
cmp
aas
je
mov
push
stos
mov
cld
addr16
enter
add
mov
mov
fldl
imul
push
or
lea
push
mov
sub
lcall
fidivrs
outsb
pop
pop
cmp
mov
into
and
movsb
aad
jne
fistl
std
xor
dec
movsb
fcomi
xorl
mov
mov
jo
xchg
shrb
shrb
int
xchg
daa
out
sbb
dec
jle
orb
xchg
cmp
mov
shrb
ss
xlat
add
xlat
inc
dec
xor
aaa
xor
js
push
push
or
inc
xlat
cmp
xlat
clc
pushf
push
mov
rorl
scas
lcall
popf
mov
mov
mov
pusha
mov
into
jp
push
xor
dec
inc
fstpl
stos
in
cmp
lods
arpl
outsl
cmp
out
or
fiadds
xor
pop
ja
xchg
inc
insb
push
mov
sub
mov
xor
xor
das
popa
js
scas
shl
popa
adc
pop
pop
push
or
mov
or
mov
add
adc
sbb
ljmp
insl
mov
adc
mov
ljmp
or
call
ss
mov
scas
mov
mov
add
push
mov
popa
daa
addr16
mov
lret
jp
jo
inc
bound
xchg
inc
inc
dec
stos
sub
xchg
adc
outsl
cmp
or
sbb
leave
cltd
mov
inc
add
cmp
pop
push
iret
mov
mov
sub
adc
and
xlat
fidivs
lods
sbb
mov
sbb
xor
fcmove
inc
dec
and
popa
xchg
add
pop
out
cli
mov
pusha
jecxz
sahf
and
cld
gs
and
sub
mov
cmpsl
push
inc
inc
xchg
fs
je
pusha
sub
mov
pusha
pop
push
rcrb
push
dec
jge
pusha
fists
mov
mov
mov
mov
dec
jae
leave
inc
int
mov
or
cmc
nop
arpl
push
je
movl
push
stc
out
mov
fsubl
adc
adc
mov
dec
sbb
and
addr16
int3
daa
fistpll
jecxz
mov
pusha
sub
ds
jnp
in
cmc
cli
incl
adc
popa
adc
dec
hlt
push
and
push
repnz
mov
push
js
cmp
aad
roll
xor
mov
sub
stc
sub
cli
xchg
cld
lret
loopne
jg
jb
mov
or
xor
sbb
out
inc
pushf
sti
sbb
rorl
aam
push
lahf
ret
mov
sbb
xchg
cs
dec
push
add
xchg
mov
lahf
or
jnp
pop
cmpsb
xor
jl
data16
mov
cld
jg
clc
xchg
mov
mov
addr16
mov
push
lods
sub
push
iret
xchg
dec
sub
adc
mov
pop
jecxz
pop
dec
and
jb
aad
std
rcrb
movsb
jle
fsubrp
add
xchg
xor
xor
out
mov
mov
les
jge
jo
xchg
dec
push
addl
pop
call
or
mov
mov
jecxz
icebp
out
daa
cmp
cmp
ror
sub
or
test
mov
pusha
sahf
add
arpl
add
xor
cmp
ffreep
or
cmp
test
or
int3
adc
enter
jg
sub
xchg
rorl
movsl
pop
lret
inc
bound
inc
pop
sbb
rorb
lods
push
popa
movsl
jne
je
sbb
add
inc
and
fnstenv
sbb
stc
push
jle
add
int
cmp
dec
cltd
mov
ds
sub
aaa
xchg
sub
sub
pop
aaa
popf
and
fcmove
cli
cmp
adc
push
mov
lret
out
clc
xor
cmp
cmc
pop
inc
cs
jbe
sub
lock
repz
std
and
push
es
and
mov
filds
mov
rorb
pushf
fsubrs
loop
sbb
xchg
dec
outsl
dec
movsb
cld
or
lret
lds
js
mov
outsb
mov
xor
cwtl
sub
jae
mov
mov
sub
jmp
stc
xchg
imul
jbe,pn
xchg
adc
xlat
pop
cwtl
nop
jmp
xlat
mov
mov
adc
jecxz
jg
or
inc
pop
pusha
jp
mov
stos
and
xchg
shl
lahf
adc
mov
aas
pop
out
stos
sub
jbe
mov
out
out
leave
mov
sti
subb
out
jbe
insl
loope
mov
push
cld
shrl
scas
out
push
test
xor
andb
jp
add
xlat
out
adc
aad
pop
add
and
dec
outsl
mov
cmp
jae
bound
cmpsb
rolb
xchg
dec
fldcw
jecxz
mov
cmp
movsb
loope
adc
adc
push
sub
push
fmull
lds
and
pop
shll
ss
push
mov
mov
xchg
pop
sahf
std
push
pop
jl
xlat
mov
cmp
xchg
or
xchg
or
jo
cmp
dec
lret
xchg
pop
jne
inc
prefetch
pop
jl
cmp
sbb
stos
test
mov
enter
test
push
call
jo
inc
bound
sbb
lock
pop
adc
sahf
imul
ret
fsubr
or
sahf
sahf
xor
inc
xchg
loopne
fucomip
push
aaa
push
je
or
mov
mov
jb
inc
nopl
add
inc
sub
shrb
mov
rol
jecxz
or
pop
lods
xor
pop
es
testb
repz
sub
dec
incl
decb
mov
sbb
push
js
fisubrs
and
inc
xor
jb
std
cltd
mov
or
mov
orps
adc
inc
in
loopne
out
and
cmp
add
sbb
into
lret
mov
ss
push
xchg
jnp
jl
lods
and
lea
fadds
xlat
aad
adc
mov
movsb
dec
mov
test
or
mov
sarl
sbb
loop
pop
pusha
xchg
xor
stos
xlat
out
insl
sahf
leave
fnstsw
in
ss
pop
shll
std
pop
repz
and
ret
stos
in
sub
shrb
jb
mov
ljmp
fsubl
mov
cmpsb
sub
dec
push
mov
jmp
sbbb
mov
clc
jb
jb
xor
mov
sti
add
jae
loopne
out
hlt
cwtl
das
push
or
sbb
xor
outsl
and
stos
pop
daa
call
mov
imul
stos
sahf
ljmp
sbb
push
add
push
mov
add
adc
inc
jb
outsb
jg
or
lret
arpl
inc
dec
add
rcll
xor
push
daa
fstl
call
sub
jl
out
mov
pop
mov
dec
push
adc
cs
aam
mov
dec
mov
imulb
insb
sbb
cwtl
lea
or
imul
imul
sbb
loopne
fwait
add
push
lret
jp
or
sub
push
dec
and
mov
sbb
push
mov
pop
sbb
scas
ljmp
mov
mov
cld
push
xchg
add
sahf
cmp
cmp
pop
sbb
inc
adc
push
xor
pop
mov
ds
push
xchg
xor
outsl
inc
adc
ja
mov
inc
xor
enter
imul
cld
stc
add
and
repz
repnz
frstor
or
mov
js
dec
inc
popf
sbb
insl
mov
dec
loop
shrl
xor
mov
fdivp
push
sub
fisttpl
daa
fists
add
daa
dec
push
inc
sub
jge
sub
lods
daa
stos
cmp
orb
call
cmp
sahf
push
lods
orb
imul
in
jae
inc
sub
ja
jp
out
sub
mov
hlt
push
pop
lods
jnp
xlat
fsubrs
loop
stos
movsl
jge
lcall
push
dec
or
shrb
sub
addr16
movsb
and
out
dec
push
inc
mov
jae
mov
jne
dec
push
or
push
xor
jecxz
rol
sub
lods
adc
subl
mov
inc
shlb
out
push
in
inc
stc
inc
sbb
in
or
roll
dec
adc
inc
test
cmpl
adc
subl
push
lods
cwtd
sub
lods
inc
xchg
fistpl
sub
clc
pop
je
aaa
push
cmp
sub
pop
pop
mov
sbb
ds
pushf
es
call
mov
rcrl
ljmp
aad
jae
inc
fstpl
insl
sbb
and
pusha
pop
jns
movsl
pop
into
rclb
jnp
xor
pop
mov
cs
pop
adc
ss
mov
jae
cmpsb
and
mov
cmpsb
decl
mov
or
and
pop
leave
stos
pop
cmpsl
jp
cltd
nop
dec
movsl
add
xchg
loope
dec
rcrb
rol
pop
xor
aas
lods
ds
repnz
jecxz
mov
mov
pop
dec
loope
push
xchg
sub
addr16
sti
mov
xchg
sub
inc
test
adc
cltd
xchg
dec
fs
stos
cmp
inc
lea
jb
mov
pop
or
stos
pushf
in
je
and
lahf
jne
outsl
jb
pop
pop
xchg
notb
fistl
scas
xchg
xor
xor
sub
inc
pop
xor
cmp
and
lock
ja
or
inc
and
push
sub
leave
outsl
xchg
mov
sar
out
movsb
pop
sub
imul
pushf
jbe
lods
cmp
cmp
xor
hlt
or
xor
fistps
jbe
pushl
cmpsb
and
in
das
cmpsb
or
jge
scas
fs
fimuls
push
adc
adc
add
mov
arpl
sub
adc
shl
leave
mov
fsubr
mov
fstl
inc
and
lods
test
shrb
std
add
xor
push
cmp
iret
adc
pop
push
sub
mov
pop
popl
clc
sbb
sbb
out
jbe
lahf
cltd
xchg
notb
gs
stos
imul
mov
mov
subl
or
sahf
loope
xchg
lds
dec
cltd
lock
mov
cwtl
sub
or
mov
mov
xor
cmp
popa
and
xor
popa
mov
aas
dec
push
xor
xchg
notl
in
mov
mov
pop
or
push
jne
cmpsl
or
sahf
add
shlb
mov
or
jno
sahf
and
mov
gs
adc
mov
inc
push
mov
fistl
je
xchg
test
test
pop
movsl
arpl
fmull
sahf
in
fisubs
dec
cmpsl
push
mov
mov
cmc
iret
imul
icebp
jns
sub
push
mov
pop
fchs
inc
mov
mov
orl
inc
cmpsl
out
scas
push
movsb
add
xchg
data16
enter
out
int
fdivp
add
mov
cmp
ljmp
inc
insb
popf
xor
xor
nop
lods
andl
fsts
rcll
jnp
mov
push
rorb
fs
push
insb
outsl
jbe
movsl
xor
sub
mov
sbb
stos
inc
or
arpl
lret
mov
mov
sbb
lock
adc
push
out
add
push
push
out
ja
insb
loope
dec
pop
mov
int3
outsb
es
xor
subl
push
insb
dec
dec
ret
ljmp
std
cmp
or
or
or
sbb
mov
mov
js
outsl
push
sbb
stos
out
popf
subb
dec
repnz
xchg
andb
cli
movsl
imul
jl
push
ss
mov
sahf
nop
insl
int3
jecxz
dec
cld
cmp
cmpsb
and
jbe
mov
in
adc
mov
movsl
movsl
mov
daa
aad
lret
fsin
and
fisubs
pop
mov
sub
ret
inc
outsb
and
int
pop
jno
ret
xor
mov
stos
flds
insb
mov
xchg
xchg
cltd
lods
cwtl
mov
sbb
inc
inc
inc
fisubl
int3
or
iret
pushf
adc
mov
lcall
push
icebp
dec
popa
sbb
frstor
ret
jmp
mov
roll
in
aam
cltd
sub
repz
sbb
push
cltd
int3
mov
push
or
push
lcall
jno
lret
orl
mov
pop
pushw
jnp
xlat
call
ja
push
cld
rcr
es
mov
arpl
sub
lret
push
pop
into
dec
rsm
movsl
or
dec
ror
les
jb
sub
loop
das
ja
push
dec
ljmp
cmpsl
out
add
add
inc
push
jmp
pop
jp
pushf
mov
sbb
or
or
call
cld
jnp
push
push
call
lock
outsl
popf
mov
hlt
sbb
popf
sub
test
repz
sbb
mov
cld
jmp
das
stos
movsb
mov
lcall
hlt
out
ficompl
xchg
mov
dec
fwait
ret
mov
mov
or
stos
and
nop
ret
pop
nop
or
mov
pop
popl
dec
es
or
xchg
in
into
dec
xchg
cmp
cmp
jp
xor
dec
mov
test
ror
add
std
mov
les
mov
ret
mov
xchg
daa
add
enter
repz
call
push
xchg
jns
sub
fwait
jecxz
pushf
je
lcall
mov
lahf
int
loope
test
ret
pop
xor
jl
jl
in
rcll
lret
ljmp
aaa
stos
push
test
jae
mov
sub
jg
sbb
les
popf
addb
jg
jmp
or
jp
cld
or
lock
or
push
pop
pop
imul
mov
and
sub
inc
mov
pop
jge
mov
arpl
mov
xor
add
fstpt
repnz
rorl
mov
mov
mov
xchg
enter
push
fisubrs
push
mov
sub
test
ret
ror
lahf
ja
push
repnz
je
cmpsb
icebp
shlb
mov
fdiv
adc
stc
incl
mov
push
repnz
xchg
rorl
dec
cmp
adcb
sub
test
xchg
pop
or
add
xchg
in
add
mov
mov
stos
push
cmp
push
jecxz
mov
sub
xchg
or
stos
xor
xchg
mov
pop
jae
jns
xchg
jecxz
fisttpl
cmp
push
mov
push
lods
dec
fldenv
in
adc
inc
add
ss
cmc
adcb
outsl
aam
movb
inc
fsubl
pop
fistl
fildl
mov
movsb
push
jo
jns
movsb
into
test
daa
inc
dec
clc
mov
add
lock
call
mov
xor
je
mov
rol
rcll
inc
insb
cmp
das
cmpb
mov
cmpsb
push
inc
les
push
sbbb
mov
jecxz
int
dec
out
stos
adcb
negl
lahf
xor
and
lret
cmpsl
pop
cmp
cmp
adc
stos
gs
out
iret
js
repz
icebp
pusha
int
or
rolb
add
push
push
mov
dec
pop
mov
inc
enter
push
mov
rorb
stos
mov
cmp
dec
xchg
mov
insl
mov
xchg
xchg
test
xchg
out
lret
mov
sbb
cmp
insl
add
fmull
xchg
mov
mov
dec
scas
cld
je,pn
lcall
and
aas
mov
and
sbb
rclb
shll
imul
jne
sbb
or
loope
sbb
mov
jbe
jg
std
addr16
or
pop
test
push
loop
xor
addr16
ret
pop
xchg
test
cld
mov
mov
xchg
ljmp
loope
xchg
cmp
inc
rol
aam
jl
and
sub
in
pop
dec
test
outsl
inc
adc
gs
sub
and
pop
inc
shl
dec
in
mov
rcrb
cs
mov
lret
mov
and
pmaddwd
jo
mov
jb
dec
mov
jnp
adc
sub
push
mov
xchg
adc
fsubl
mov
cmp
loop
scas
ficomps
cmpsb
push
stc
push
rcrb
dec
outsb
jbe
jp
mov
or
mov
mov
dec
jg
jbe
push
add
sarb
out
push
lods
data16
or
add
jns
xor
pop
fcomp
mov
lea
jb
pop
jae
insb
sub
inc
or
xchg
and
inc
movsl
ret
bound
pop
movsb
outsl
aaa
xchg
sbb
cs
cmpsb
js
add
movsl
stc
inc
lods
pop
daa
lret
ja
mov
cli
xchg
and
push
fmull
mov
sbbb
adcb
mov
inc
mov
pop
pop
dec
mov
popf
and
add
mov
add
test
sbb
popa
in
int3
movsb
cmp
push
stos
js
mov
push
dec
loop
push
push
pop
inc
aam
inc
cmp
pushl
adc
test
push
and
dec
jne
xchg
xchg
addr16
loope
ds
or
inc
or
icebp
je
testb
xchg
jnp
and
outsb
pop
mov
test
mov
sub
in
in
or
jl
push
cli
in
push
or
std
rcrl
daa
repz
sub
or
inc
fidivs
cmp
popf
in
cli
aaa
into
xlat
adc
and
pushf
outsl
scas
icebp
jb
mov
cld
cmp
mov
or
xor
lods
xchg
loope
lret
int
mov
lea
shr
jo
cmp
jns
dec
dec
lds
dec
jp
add
mov
lahf
test
sbb
ret
fdivrs
xchg
dec
out
push
negb
cmp
and
enter
xlat
jnp
je
movb
xlat
pop
mov
loop
pop
popf
ds
jmp
jnp
cmp
daa
shrb
test
js
pop
adc
mov
jge
hlt
jnp
lods
push
idivb
mov
out
mov
loop
call
mov
arpl
inc
cli
rcll
ffree
push
das
inc
aad
mov
mov
es
nop
inc
pusha
fisttpl
mov
test
shrb
pop
mov
popa
inc
les
push
call
stos
fsubs
inc
imul
xchg
xor
stos
bt
fstps
xchg
repz
scas
lods
ds
pop
dec
leave
inc
xchg
out
in
sub
push
das
hlt
orb
push
mov
bound
sbb
ret
jmp
insb
addr16
leave
lods
rolb
shrb
mov
jae
lods
jecxz
mov
aam
pop
xlat
mov
jle
roll
clc
sbb
ja
stos
pop
addr16
xor
in
mov
hlt
shll
les
gs
cltd
mov
pop
push
mov
mov
fildl
dec
mov
xchg
mov
adc
xorb
sahf
cmpsl
icebp
cwtl
aad
lods
mov
scas
dec
rcll
sbb
mov
jmp
lret
jmp
jno
dec
loopne
test
lea
xchg
adc
out
and
and
orb
lods
insl
lods
jne
neg
lret
clc
imul
add
xor
ret
push
xchg
mov
inc
push
stos
jnp
xor
clc
mov
cmp
xchg
or
xchg
inc
movsb
mov
jns
add
lods
cmp
sti
lcall
push
mov
dec
and
call
push
andb
repnz
mov
mov
mov
inc
sbbb
test
sub
out
loop
mov
dec
pop
xchg
into
jl
dec
insb
popf
out
xor
out
stos
enter
mov
out
ret
cltd
dec
mov
sti
pusha
out
push
jbe
int
dec
and
xchg
xlat
adc
add
mov
lea
clc
outsl
sbb
in
jo
xchg
stos
mov
decl
out
push
lret
pushf
xor
push
insb
dec
cli
pop
adc
lret
sbb
call
pop
call
push
imul
sub
mov
cmp
push
mov
aam
insb
push
add
xchg
std
push
stc
stos
rolb
cmpb
jecxz
xor
in
inc
dec
aaa
ds
inc
sub
cmp
std
lret
xor
sub
sbb
xchg
or
sti
cwtl
nop
cmpsb
and
rorb
pusha
dec
mov
aad
stos
repz
mov
push
stos
dec
in
pusha
mov
push
xlat
mov
shr
sub
lods
adc
and
jno
or
repz
mov
inc
xchg
jmp
or
sbb
mov
ret
jo
shll
rcrl
jmp
jecxz
push
xchg
xchg
cmp
jg
xor
insb
icebp
ds
inc
sub
mov
add
and
inc
inc
fs
fsubrl
push
dec
test
sub
cmp
xchg
pop
stc
or
test
mov
pusha
push
icebp
rolb
and
scas
js
fadds
out
push
scas
and
les
or
dec
jnp
clc
push
sub
inc
lret
shrl
addr16
or
or
dec
push
notb
fcom
xor
mov
outsb
xchg
mov
xchg
mov
push
pop
inc
and
sub
lock
imul
repz
call
inc
inc
shlb
inc
add
ljmp
movsb
push
sbb
jnp
xchg
into
jge
mov
arpl
sub
int
mov
mov
sbb
fcomi
fmul
aaa
xchg
cmp
jnp
mov
sub
dec
pop
xchg
sbb
outsl
outsb
and
repnz
nop
rclb
or
rorb
mov
dec
sti
clc
pop
aam
mov
lret
dec
punpckhwd
inc
push
inc
inc
adc
jle
mov
cmp
sub
repnz
jmp
jp
movsb
popf
mov
pop
jnp
mov
cmp
xchg
or
in
rorb
jbe
push
repz
stos
aas
xchg
xchg
sub
bound
mov
cmp
dec
push
jnp
sahf
jp
or
fcmovnu
aas
and
mov
add
scas
pop
add
jmp
ret
cmpsb
js
out
add
push
mov
sub
mov
into
pop
xor
add
addb
mov
cmp
xchg
lahf
das
pop
lret
std
jo
xchg
or
shrb
ret
dec
xor
mov
sahf
pop
cmp
xchg
sbb
cltd
pop
addb
jb
dec
and
pop
pop
ss
mov
lock
xchg
into
jle
cmp
sbb
sub
lret
test
lods
icebp
push
sub
lret
testl
sbb
cmp
mov
ljmp
mov
stos
pop
push
nop
mov
aaa
xor
ret
scas
dec
mov
mov
rol
or
pop
xchg
test
lret
cmp
loop
jge
jp
inc
or
mov
mov
jl
outsl
fs
enter
imul
stos
loopne
movsl
popa
adcb
cmp
rorl
jmp
in
pop
cmp
jb
rorb
hlt
dec
iret
lahf
es
es
fs
icebp
les
mov
cli
xor
cs
sub
ja
fldl
lcall
mov
es
sub
sub
es
out
xor
movsb
inc
testl
add
fadds
sbb
sbbb
adc
icebp
push
xorl
pop
mov
stos
add
int3
lcall
jle
mov
bnd
xchg
mov
sbb
test
pop
push
pop
aaa
mov
jae
xor
js
inc
adc
jp
adc
mov
hlt
repnz
jb
testb
add
jne
loope
scas
fisubrl
out
jg
cmp
ljmp
ss
add
jle
xchg
jns
flds
jle
adc
xchg
inc
xor
add
into
and
out
sti
cs
popf
mov
lods
mov
aas
mov
mov
dec
insb
push
jno
call
lcall
das
clc
jmp
xchg
xchg
mov
shlb
ja
adc
aam
push
addr16
fcom
loope
lahf
fldenv
imul
sub
negl
out
push
jno
notb
out
cmp
repz
insl
pop
mov
test
cmp
iret
out
or
push
stc
xchg
jecxz
scas
xchg
rorl
and
js
decl
adc
rolb
cli
lcall
jae
dec
sahf
cltd
jle
inc
sbb
test
adc
addr16
les
lcall
jo
jecxz
pop
stc
xor
mov
scas
clc
push
or
je
fsubrl
notl
cltd
lret
pop
mov
lea
iret
imul
jne
scas
mov
daa
xor
jnp
sub
and
movsl
adc
out
mov
imul
loopne
data16
ja
negb
or
inc
mov
mov
cmp
cmp
sbb
xor
and
add
pop
lds
jmp
and
lods
cmp
dec
imul
enter
cmp
int3
mov
jge
mov
push
mov
jne
and
and
es
addr16
rol
add
jl
cmp
arpl
ret
pop
push
in
xor
cmp
scas
popa
mov
lods
sarb
jp
fsub
sub
jmp
and
lods
popf
dec
fwait
xchg
loop
sahf
cmp
xor
cld
xor
fcoms
pop
xor
into
mov
imul
jle
pop
pop
lock
unpckhps
xor
jecxz
add
test
mov
xchg
sarl
fistps
rorb
mov
push
xor
jmp
ljmp
or
jmp
add
push
fbstp
notl
adc
sub
push
mov
and
adc
fidivs
and
popf
adc
in
xlat
aam
popa
in
fildl
push
cmp
std
mov
js
sbb
pop
pop
sub
mov
fdiv
xor
movsb
je
or
addr16
imul
add
popa
xlat
and
pop
pop
pushf
add
push
addr16
insb
mov
outsl
pushf
inc
out
ficoml
outsl
mov
xor
bsf
or
js
bound
sub
jg
ljmp
fimull
sbb
sbb
adc
lds
fists
jo
mov
mov
pop
sbb
stos
fistpll
inc
fsubrs
out
faddp
insl
btr
cltd
daa
dec
push
mov
cwtl
adc
scas
cmpsb
push
push
insb
incb
inc
int
pusha
pusha
jecxz
ret
je
or
lahf
mov
cli
sbb
pop
out
xchg
push
out
lret
push
add
pushf
mov
sbb
cs
ss
outsb
out
ss
insl
stos
in
inc
adcb
outsb
lcall
jbe
jmp
call
sahf
mov
adc
sbb
inc
les
pop
lea
test
in
and
nop
xor
cmpsb
test
cmp
negl
jno
flds
flds
mov
push
cld
addb
add
movntq
lods
movsl
xor
push
sarl
out
clc
orl
push
insl
out
sub
clc
or
pushf
sbb
aaa
mov
je
das
and
in
pop
fcomps
movsb
cmp
pop
pop
jo
test
dec
cmpsl
repz
xchg
jp
movsl
pop
test
mov
out
xchg
mov
xchg
lret
mov
xor
outsb
pop
lret
stc
push
movsl
jbe
lods
dec
sarb
xchg
mov
sbb
popa
fisttpl
gs
jg
xchg
xchg
lds
ds
mov
hlt
lea
or
aam
stos
pushf
or
mov
test
fcoms
lock
sbb
jns
mov
cmc
mov
aad
and
mov
fs
hlt
and
inc
mov
leave
imul
cmp
outsb
mov
leave
inc
xchg
loope
push
movsl
jge
loopne
mov
pop
cmpsl
pop
lret
pop
sbb
xlat
xlat
lret
push
sub
xor
adc
cld
push
mov
xor
clc
pusha
in
repnz
xchg
sbb
aaa
mov
loopne
mov
cmp
mov
mov
pop
pop
stos
xlat
jno
add
cltd
add
push
sub
loopne
mov
int
or
adc
int3
loopne
adc
xchg
loope
in
sbb
mov
xchg
stos
jno
ret
jo
repnz
sbb
pop
lret
adc
add
stos
stos
dec
iret
mov
vfnmsubss
inc
push
in
dec
and
adc
mov
rcll
xchg
xchg
movsl
je
inc
das
jl
mov
arpl
dec
roll
lds
test
cmp
xchg
sub
pushf
inc
data16
popf
jg
adc
std
bound
pop
push
mov
and
adc
push
nop
fimull
sbb
popa
add
cmp
sarb
sub
daa
xchg
mov
ret
pop
adc
push
je
enter
and
mov
add
push
aas
leave
inc
xchg
sar
jmp
add
lcall
loope
fdivs
push
lahf
ret
cld
cli
insb
add
jge
std
mov
jge
orb
fcompp
stc
loope
leave
xchg
lahf
xor
cwtl
test
mov
or
sub
adc
push
movsb
push
jo
and
or
cmp
int
ljmp
xchg
test
or
inc
fildl
in
popa
fnstsw
into
movsb
cmp
add
popa
mov
inc
call
sub
mov
inc
push
mov
push
clc
cmp
call
add
push
aas
xor
xor
sub
add
mov
sbb
mov
cmp
int
or
insb
fwait
imul
leave
jmp
sub
imul
mov
imul
addb
into
push
les
inc
add
and
xchg
mov
mov
add
fsubr
sbb
add
mov
push
fmull
mov
xchg
jbe
sbb
cld
dec
adc
cli
dec
lods
push
les
push
sbb
cmp
prefetch
or
sbb
fyl2x
sarb
cmp
nop
fnstcw
inc
pop
cmp
and
enter
push
in
xchg
mov
aas
adc
jne
or
sbb
cmpsl
push
int
popa
adc
sti
popf
jmp
call
adc
out
aaa
cmp
pop
fmull
jmp
fbstp
xchg
inc
hlt
xor
pop
data16
and
lahf
sub
js
pop
dec
mov
xchg
lds
push
into
arpl
cli
pop
js
add
fwait
xchg
xor
cltd
data16
stos
shrb
mov
imul
adc
in
das
enter
shl
outsl
mov
fucom
sub
mov
insb
pusha
inc
push
pop
adc
cs
test
out
and
inc
cmp
imul
roll
negl
das
mov
dec
lretw
sub
lcall
cmp
test
ss
sar
aaa
cmp
cmp
xchg
pop
add
mov
jnp
movsl
or
sbb
cwtl
jb
cmp
add
sbb
cltd
popf
jecxz
aas
cmp
mov
ss
ss
out
je
ficomps
outsl
aam
or
push
and
mov
adcb
mov
push
mov
adc
lock
out
sarb
jp
cmp
in
add
insl
push
repnz
rorb
mov
mov
mov
pop
pushf
xor
pusha
lds
lods
jo
call
adc
lods
test
push
loope
or
pushf
mov
xchg
fs
sbb
inc
xchg
push
push
jl
jle
and
or
jecxz
dec
sti
outsb
jg
and
fcmovbe
or
sti
sbb
add
out
lahf
sub
les
pop
jae
adc
mov
arpl
xchg
fwait
sbb
mov
inc
and
cld
popf
inc
add
ret
push
iret
pop
cmpl
hlt
mov
jmp
sbb
inc
and
jo
push
mov
decb
cmpsb
shlb
xchg
insb
jns
jle
rclb
xor
addr16
add
sub
push
cmp
aam
shlb
pop
add
inc
icebp
xor
je
sub
dec
xchg
lcall
sub
insb
aad
std
and
int
or
dec
or
icebp
jne
ja
mov
imul
ss
sub
pusha
mov
fisubrl
xor
aam
cmc
fiadds
pop
inc
mov
les
leave
mov
xchg
add
add
fcompl
xor
cmp
rcr
add
lcall
lock
fidivrs
jo
jns
mov
repz
pop
inc
cmc
jno
sub
mov
lock
fistl
push
and
mov
fwait
add
push
jns
jne
or
add
adc
adc
add
shll
pusha
test
inc
pushf
mov
cmpsb
sarb
and
insl
das
pop
jle
loop
out
out
les
pop
gs
jg
icebp
scas
ret
and
mov
xchg
test
inc
clc
jae
push
outsb
icebp
in
xchg
stos
and
add
outsl
mov
pop
pop
lahf
inc
push
mov
mov
notb
and
test
and
dec
adc
cmp
push
cwtl
outsl
push
mov
movsl
or
mov
jne
rcll
push
pop
mov
dec
cld
jo
mov
mov
int3
cmpsb
adc
jg
cwtl
xchg
cs
dec
add
fs
aaa
fadds
daa
pusha
rcl
jb
push
xor
push
and
popf
pusha
andl
jb
call
mov
sub
lret
mov
insb
pop
sbb
push
stc
mov
mov
dec
pop
cmp
mov
in
pop
inc
mov
sbb
mov
sub
fnstsw
dec
lcall
and
std
ret
mov
insb
xchg
jno
ja
jg
xchg
cmp
xor
cmp
cmp
cmp
push
xor
fdivp
ljmp
or
aas
out
dec
popf
roll
xchg
mov
out
sub
clc
dec
dec
lock
pop
jbe
adc
pop
daa
pop
addb
test
sbb
enter
in
and
add
cmp
cli
jbe
cmp
insb
dec
sub
mov
cli
lods
pop
out
clc
dec
push
test
pop
data16
stc
and
sub
les
mov
pop
adc
add
push
je
pusha
push
push
sub
out
sub
popa
sub
mov
pusha
push
daa
jecxz
je
cmp
adc
jp
ljmp
jle
int3
dec
pop
lods
lods
pushf
movsb
aad
movsl
add
sbb
sub
xchg
call
iret
mov
outsb
jge
fildl
scas
dec
out
faddl
and
outsl
sbb
les
fnsave
push
cmpsl
mov
xor
sbb
sbbl
testl
arpl
jge
xor
call
es
rcrb
mov
outsb
ja
into
leave
xchg
andb
jmp
inc
stos
ss
or
sub
bound
xchg
and
push
mov
clc
jecxz
pop
push
sti
jmp
add
adc
enter
sub
push
adc
sbb
or
or
jb
shll
movsb
leave
adc
dec
push
repnz
push
lds
fst
mov
pushf
inc
cmpsb
xchg
cltd
sahf
aas
mov
pop
xchg
dec
pop
push
jp
cmc
push
mov
imul
add
pop
jae
leave
or
bnd
inc
enter
dec
push
xchg
in
mov
aaa
mov
aam
xor
pop
mov
cmp
inc
mov
mov
sarb
push
mov
divl
sarl
and
sbb
and
push
and
xchg
addr16
jmp
daa
std
outsl
mov
push
loop
jbe
inc
xchg
pop
xorb
push
jae
adc
outsb
push
fbld
cltd
subl
sub
mov
mov
icebp
ja
fdivl
mov
test
mov
aaa
call
xchg
adc
imul
xorl
cmp
cmp
pop
add
dec
andl
int
pop
xor
push
fiaddl
and
and
into
xor
adc
dec
jl
cmp
xchg
jg
fisubrl
call
scas
jl
bound
ds
mov
stos
andl
in
push
dec
lods
mov
cmp
xor
mov
and
dec
mov
scas
push
jg
sub
cltd
push
jecxz
jmp
push
mov
fistpl
push
je
int
xchg
push
adc
fmull
js
fisubl
push
test
jmp
imul
lcall
push
mov
xor
adc
mov
mov
out
or
test
movsl
jo
insl
jmp
pusha
ds
rcrl
pop
popa
decl
sub
dec
cmc
xchg
cmp
cmpsb
push
mov
xor
cmpsb
test
rcll
lods
or
repnz
push
test
pop
popa
adc
push
cs
inc
push
sub
pop
imul
push
add
dec
push
decb
stos
int3
dec
imul
mov
in
sub
sub
xchg
ljmp
pop
pop
sub
ja
gs
push
test
push
in
jns
pop
aas
inc
addl
fwait
xchg
imul
or
into
test
and
jb
out
sub
and
mov
rorl
sbb
shlb
xor
sbb
xchg
jne
pop
fs
mov
lcall
movsl
push
xlat
fwait
aaa
sbb
stos
popf
xchg
dec
popa
lret
sbb
fwait
sub
push
pop
mov
test
sub
arpl
or
lahf
xchg
dec
mov
ret
scas
iret
mulb
push
adc
int
daa
push
xchg
mov
push
testb
cmp
sbb
into
out
or
xchg
cwtl
icebp
and
mov
gs
ja
add
dec
or
push
cmpsb
insb
out
and
sti
sbb
out
insl
sub
cmpsb
adc
ret
popa
popa
jne
daa
fadds
mov
mov
out
scas
push
add
adcb
cmc
xchg
mov
fdivrs
leave
sbb
sbb
gs
push
mov
jle
subb
inc
xlat
cmp
sub
outsl
mov
mov
cmpsl
iret
hlt
out
xchg
orl
into
dec
sbb
scas
adc
add
add
jge
mov
mov
pop
push
dec
push
fwait
push
adc
and
mov
test
loope
call
test
cmp
cmp
xchg
xchg
fisubrl
shl
mov
push
mov
lret
xor
fimuls
arpl
push
in
or
in
or
mov
insl
movsb
push
sbb
outsb
inc
jnp
mov
dec
call
ret
mov
or
std
test
adc
or
cld
sub
mov
cli
ret
jp
stos
loop
mov
push
push
out
and
xchg
and
incl
lock
and
stc
xor
enter
adc
inc
orb
ss
xchg
mov
push
mov
inc
scas
jo
push
loop
inc
rorl
fnstcw
ja
popf
sbb
int3
inc
std
stos
dec
and
xchg
jns
shlb
pop
lock
lcall
adc
mov
rcrb
movsl
dec
add
arpl
scas
nop
jl
or
mov
inc
jo
call
xchg
xchg
add
mov
mov
icebp
rcrb
cmp
ss
aaa
cwtl
xchg
mov
xchg
iret
popa
jo
xchg
lods
add
in
inc
dec
int3
mov
sar
sbb
mov
movsl
subb
leave
stos
cltd
mov
mov
mov
je
mov
lds
mov
adc
stos
add
inc
test
jge
sbb
std
addr16
test
and
ja
add
push
xor
dec
aad
jmp
rcrl
inc
xor
out
movsl
ds
nopl
pop
pushl
lret
add
incl
sub
out
mov
ss
pop
daa
xchg
sahf
cmpsb
inc
lods
mov
mov
jl
xchg
loopne
lret
les
pop
insb
mov
arpl
mov
lahf
pop
adc
in
fs
rol
pop
push
xor
dec
cltd
cmp
out
xchg
push
sbb
popf
sbb
inc
negb
mov
sbb
xor
pop
ret
add
in
jae
jb
es
into
loop
cmp
out
inc
mov
xchg
jle
xchg
mov
std
cmp
mov
stos
add
in
aas
in
pop
in
out
mulb
push
lds
and
mov
lods
mov
inc
in
fs
or
imul
xorl
pop
fsubrs
lea
pop
jns,pn
mov
jmp
jmp
bound
sub
cld
mov
adc
jne
cmpb
cmp
outsl
pop
shl
rcr
ret
mov
fisubrs
lret
outsl
lret
je
inc
mov
enter
dec
sub
xor
adc
enter
iret
pop
addr16
pop
lock
pusha
scas
adcb
xchg
pop
adc
push
ret
push
add
ss
inc
fistpl
ds
sub
cmpsl
mov
xchg
push
cmp
div
out
mov
imul
gs
sbb
adc
dec
call
push
stos
or
mov
les
xchg
or
les
inc
inc
insb
aas
cmpl
lahf
fdivs
aad
ret
jmp
xor
out
and
xchg
iret
in
out
mov
out
shl
lea
outsb
fmull
mov
jecxz
adc
or
lahf
mov
or
mov
mov
adc
icebp
popa
std
pop
cmp
add
dec
dec
sbb
lods
lret
test
xor
jo
popa
jne
push
xor
pushf
ja
xor
cwtl
test
or
mov
push
mov
and
dec
sbb
mov
push
jae
push
mov
cmp
push
dec
loope
out
mov
sub
gs
mov
xchg
add
dec
dec
arpl
enter
int3
mov
sub
add
or
sub
fs
mov
sbb
ja
push
mov
mov
push
xor
std
fcomps
js
add
rorb
sahf
jl
push
adc
xchg
xor
rcrb
jmp
mov
std
les
andl
mov
jne
pop
outsb
jnp
fstps
andl
pop
je
pop
ja
inc
jge
cmp
loop
rorb
and
sbb
cmp
test
mov
mov
lds
push
sub
or
sarb
jg
push
adc
lcall
inc
rcl
pop
mov
in
data16
adc
mov
jbe
fildl
mov
pop
xchg
imul
mov
adc
mov
push
or
movsb
sub
cltd
out
idiv
addr16
fidivl
sbbb
xor
je
sbb
cmp
xlat
rolb
sahf
push
data16
cli
fildll
xor
pop
in
fisubrs
pop
sub
fs
push
and
into
daa
jg
ss
sbb
insb
cld
add
mov
mov
dec
inc
xor
pushf
dec
out
fcomi
lods
in
mov
cmp
mov
mov
add
mov
or
je
or
push
movsl
test
and
pop
push
inc
inc
cmpsb
jne
jno
cmpsb
xor
push
outsb
pushf
mov
add
out
add
in
add
shlb
mov
repnz
jg
loop
and
sub
mov
mov
fcmovnu
pop
mov
or
daa
jmp
adc
ret
jne
mov
fwait
xor
pop
sbb
inc
je
movb
adc
lahf
fstpt
add
cmp
push
rolb
mov
jnp
add
adc
outsb
out
sub
xor
popf
imul
mov
pop
pusha
in
into
into
cmp
aam
lret
ljmp
std
and
adc
cwtl
popa
pop
sbb
outsl
push
add
insb
movsb
and
inc
or
jle
mov
stos
xor
pop
xchg
lods
icebp
xchg
xor
pop
jne
in
orb
dec
jp
jge
ds
mov
cs
shrb
cmpsb
sbb
ret
adcl
or
pop
sbb
arpl
clc
stos
rorl
add
int3
cs
hlt
int3
stos
dec
js
outsb
les
sbb
push
inc
cmp
outsb
sbb
cmpsl
push
loope
xor
stos
mov
call
fistpl
sbb
clc
daa
insb
inc
fstpl
testl
push
dec
rolb
mov
xorl
sbb
call
add
rclb
sbbb
fsubs
ss
rcrb
and
repnz
jns
leave
stos
outsb
and
mov
scas
mov
mov
push
push
aaa
push
test
cmp
movsl
lds
movsl
lret
jecxz
mov
xchg
inc
sbb
xorl
icebp
nop
repnz
stc
xchg
int3
cmp
push
cli
popa
mov
xor
and
into
stc
test
outsl
fmuls
sub
test
test
push
mov
jge
xor
dec
xchg
clc
lock
sbb
jbe
push
lods
movsb
cmp
xlat
sub
cld
sub
aas
jae
test
sti
sub
xchg
das
ret
nop
add
stos
mov
mov
mov
cli
mov
outsb
insl
popf
jae
sbb
mov
adc
dec
xchg
cld
dec
mov
sarb
pop
out
or
push
or
enter
cmp
aas
jns
or
stc
dec
jge
es
jnp
das
aad
cld
clc
xchg
jno
mov
pop
stos
and
lret
sub
addr16
or
mov
pusha
xchg
cmpl
jmp
adc
jl
and
inc
test
popa
dec
andl
and
int3
in
push
ret
and
lret
notl
into
mov
jecxz
xchg
adcb
ret
popa
leave
cmp
and
add
inc
nop
fldcw
std
add
xchg
cmp
add
xor
mov
push
xor
aaa
xchg
repnz
into
or
mov
out
cld
sti
pusha
fs
mov
push
icebp
sbb
mov
push
sbb
pop
xor
pop
mov
sbb
xor
add
pop
dec
out
or
inc
das
dec
cmp
fildl
das
pinsrw
fisubs
into
add
push
decl
add
cmp
ffree
ror
mov
gs
data16
aaa
dec
xor
inc
les
repz
shl
test
in
fincstp
xor
xor
inc
xor
fcomps
icebp
lcall
dec
dec
push
or
and
fs
test
mov
adc
mov
push
inc
inc
into
mov
das
sub
in
jg
push
xor
and
mov
jl
add
je
push
add
push
imul
dec
mov
divb
hlt
out
xor
xor
mov
pop
or
sbb
jmp
sbb
mov
fwait
xchg
pop
pop
outsl
in
mov
js
repz
nop
sarb
xchg
lret
mov
fmull
lods
jbe
dec
imulb
daa
pop
jns
lds
andb
cmp
fxch
jns
mov
aam
aam
loop
inc
hlt
arpl
nop
and
clc
adc
out
das
int3
outsb
jae
adc
movsl
fs
and
jp
mov
mov
ss
movsl
jno
mov
inc
cmp
loope
mov
jmp
mov
mov
sti
hlt
mov
cmova
xchg
sub
pop
addr16
jnp
daa
cmpl
mov
dec
cmp
aam
pusha
mov
dec
sbb
cld
mov
push
mov
repz
adc
pop
adc
xor
lods
stc
mov
push
test
push
aas
lods
add
sbb
out
xlat
cli
pusha
adc
pop
cmp
ficoml
jae
in
xchg
xor
pushf
frstor
sbb
xor
leave
inc
and
fs
mov
mov
mov
insb
push
pop
inc
idivl
cmp
lret
push
dec
ror
pop
cwtl
dec
add
push
in
or
pop
imul
ss
stc
add
sbb
sub
and
dec
mov
mov
inc
push
sub
add
inc
pop
ds
out
cmpsb
jne
loope
jle
and
iret
test
shl
push
int3
lods
xor
mov
fcomip
loop
mov
and
sbb
aaa
mov
sbb
stos
jne
sub
adc
leave
xchg
dec
shll
cmp
test
lods
fs
xor
pusha
cmp
addb
outsb
add
inc
aam
loope
cs
push
inc
lret
je
mov
shl
test
dec
and
movsb
ret
push
ljmp
jp
fxam
shll
sub
pop
or
arpl
aam
dec
jne
out
jmp
sahf
decl
test
mov
xchg
and
cltd
mov
xor
mov
mov
xor
gs
sub
cs
sub
rcll
xor
pop
outsb
inc
or
mov
rclb
popf
aam
sbb
movsb
subb
sbb
jl
movsl
or
hlt
mov
es
std
cltd
cmp
fs
pop
sbb
inc
addr16
mov
sbb
stos
outsl
inc
popf
cmp
out
rol
inc
popa
clc
das
pushf
aas
out
aas
fistl
mov
pop
es
in
aaa
cld
stc
stos
mov
arpl
je
aad
repz
js
shlb
int3
push
lds
bound
movsb
idivl
xchg
mov
dec
loopne
ds
pop
hlt
sbb
int3
lret
js
cld
mov
xchg
dec
popa
adc
filds
push
and
arpl
inc
xor
mov
sti
incb
movsb
sbb
sbb
bound
cmp
cwtl
hlt
adc
shrb
xor
aaa
and
pop
test
fmul
mov
jo
xorb
inc
das
test
mov
gs
inc
sbb
in
cmpsb
shrl
add
cmp
xchg
mov
rcll
js
xchg
scas
and
cmpb
int3
push
cmp
mov
push
or
inc
movl
bound
test
out
out
jo
mov
mov
cs
add
pop
dec
sub
jmp
xor
mov
mov
out
sbb
sub
aas
adc
and
dec
mov
fisttps
sti
mov
call
add
sub
and
or
push
call
movq
mov
test
and
jae
jns
mov
pop
mov
ss
js
psrlw
in
or
mov
dec
jl
mov
jmp
jge
rorl
push
jns
cmpsb
sub
scas
cmp
mov
fcoms
xchg
mov
shl
jge
rol
adc
lahf
inc
sub
loopne
out
cmpl
pop
add
dec
push
and
stos
aad
xchg
cmp
dec
cwtl
or
sbb
xchg
cld
out
cmp
and
arpl
cmp
add
adc
push
mov
cmp
lods
jg
leave
ret
push
or
fs
mov
pop
push
rcrb
lcall
xor
mov
loope
and
cmp
adc
cs
push
mov
ljmp
mov
dec
dec
jle
inc
fs
lock
les
js
jnp
popl
jnp
out
pop
dec
mov
mov
xchg
jmp
inc
xchg
or
xchg
dec
imul
cwtl
sub
ret
push
bound
cmp
xchg
mov
sbb
push
add
sub
dec
notl
test
dec
sti
rcr
into
xor
xchg
shll
add
ja
aam
and
and
pop
and
ja
mov
lret
inc
int
xchg
outsb
xor
xor
das
push
popa
out
sbb
mov
stc
mov
mov
push
mov
hlt
lahf
flds
dec
push
andb
push
adc
jne
call
mov
xacquire
xchg
rclb
adc
jmp
pushf
inc
icebp
fwait
and
fdivr
ret
cltd
sub
test
adc
ucomiss
mov
cli
jo
leave
clc
enter
jae
inc
dec
pop
fcomps
push
pop
inc
fcmovne
ss
out
in
arpl
adc
sti
aam
xchg
mov
arpl
pop
cmpsl
sub
loope
push
arpl
mov
faddl
fnsave
and
or
rep
sub
and
jo
ss
mov
push
popa
push
gs
or
imul
mov
cwtl
data16
cmp
mov
xor
jbe
jne
sub
in
leave
insl
pop
jl
sti
mov
jb
and
test
nop
inc
scas
inc
pop
xchg
lret
mov
xchg
dec
add
push
inc
leave
or
lret
xchg
cmp
inc
xchg
sbb
and
add
ljmp
inc
mov
jmp
test
sub
xchg
in
push
fcomps
dec
dec
pop
mov
adc
mov
out
in
leave
outsl
xor
leave
mov
ljmp
add
ss
or
xor
inc
dec
add
icebp
mov
pop
fsubrs
sub
pop
jg
gs
xor
scas
adc
fcomip
jne
idivb
pop
cmp
cmpsl
dec
jle
adc
jl
popf
rorb
ljmp
push
mov
and
xchg
nop
jb
jns
in
les
jb
xor
jb
cs
or
jns
inc
in
cld
and
pop
ret
lret
loop
push
cs
movsl
or
inc
mov
pop
and
mov
adc
adc
push
jp
test
mov
xchg
iret
xchg
fsts
in
dec
out
sbb
inc
xchg
jge
mov
push
decl
aaa
shrb
paddb
dec
add
in
or
cmp
add
jl
loope
out
das
cmp
push
xor
int
mov
mov
ret
jg
cmp
xor
mov
xchg
cmp
add
pop
sub
pop
pop
out
push
enter
mov
cltd
push
loop
or
testb
mov
fildl
cwtl
cwtl
sub
stc
cmp
les
shl
imul
or
push
imul
adc
addl
out
aas
sahf
pop
lret
push
and
xchg
lret
or
or
sbb
stos
cld
pop
dec
mov
xor
arpl
sbb
or
dec
mov
pop
sub
push
push
into
inc
lods
xchg
sbb
or
dec
popf
popa
or
add
rcrl
int3
sbb
inc
sbb
dec
stos
push
jl
push
add
aaa
stos
dec
xchg
int3
fadds
mov
lret
mov
out
arpl
add
lock
ret
test
in
adc
call
lret
xchg
sub
sarb
push
adc
pop
fcompp
cmp
mov
ss
adc
js
mov
je
testl
lock
popl
testl
fildl
sahf
inc
add
rolb
mov
pop
sbb
pop
mov
fstl
mov
xchg
pop
shl
es
adc
cmp
loope
or
adc
dec
dec
sbb
test
cmp
sbb
test
fs
addr16
lea
xor
xchg
fs
popf
je
push
pop
lods
pop
dec
mov
jne
xchg
stc
xor
jno
jae
pop
or
in
cmp
xchg
mov
ds
mov
clc
mov
dec
fs
dec
jns
push
loop
push
mov
sbb
out
js
cwtl
sbb
testl
lahf
loopne
cmp
add
popf
inc
pop
sub
mov
rclb
mov
cli
mov
popf
jns
jne
push
mov
add
das
pop
in
adc
sbbb
cwtl
xchg
jecxz
or
mov
push
rorb
sbb
bound
dec
add
into
xor
jg
clc
arpl
ljmp
cmc
mov
insl
dec
push
or
out
push
jle
shrl
icebp
imul
jmp
and
and
cmpl
stc
mov
fimull
sbb
sub
insl
test
paddq
adcl
inc
mov
repz
out
aad
jp
mov
js
jmp
lahf
stos
pop
xor
mov
dec
sbb
push
xchg
or
mov
inc
int
mov
fs
add
shrb
iret
mov
outsl
test
lods
xchg
dec
sub
aad
cmc
enter
xor
sbb
mov
pop
pop
xchg
mov
in
aam
push
pop
pop
push
mov
xor
dec
sarl
enter
imull
sbb
push
or
arpl
mov
out
mov
into
insb
push
fsubs
jae
mov
inc
ja
test
add
out
mov
push
outsb
adc
repz
stos
sbb
xchg
inc
leave
gs
ja
and
pop
data16
or
int3
in
and
rol
cli
stc
aam
aas
cs
mov
mov
xchg
pop
or
inc
push
aas
jno
test
lret
lcall
popf
sub
xchg
lahf
test
movsb
js
outsl
mov
push
xchg
pop
pop
movsl
pushw
adcb
pop
mov
pop
cmp
rcrb
bound
test
sub
push
outsb
or
jle
mov
inc
push
jecxz
dec
mov
jno
or
and
btc
js
out
dec
cwtl
shl
mov
xlat
sbb
fadds
popf
mov
mov
jge
lret
mov
adc
nop
into
aad
mov
leave
add
aaa
add
adc
popa
es
mov
cmpl
mov
push
mov
adc
jae
pushf
xchg
or
xor
inc
je
in
adc
out
ficomps
sbb
mov
dec
xor
insb
sub
inc
mov
mov
mov
loopne
add
push
aam
or
lods
roll
pop
rcll
sub
cld
sahf
xchg
leave
jo
sbb
sub
sub
fwait
push
loope
out
mov
lods
add
subb
add
out
nop
xchg
or
push
add
sti
orl
or
push
mov
std
mov
lahf
cmp
sbbl
movsl
cmp
adc
pop
scas
jecxz
xorb
repnz
lret
xor
scas
fdivrl
mov
add
or
int3
pop
inc
cmp
inc
sbb
jle
xor
xlat
fwait
inc
xor
lock
inc
inc
mov
syscall
dec
jbe
lcall
xchg
rcr
fldcw
and
xor
xor
aas
push
ror
jp
insl
and
std
jb
xlat
fistps
inc
push
push
xchg
and
rcll
lods
icebp
push
cli
dec
mov
jne
pushf
or
mov
mov
push
push
jne
xchg
insb
ss
cmp
cld
into
dec
out
dec
xchg
jl
pushf
and
lahf
push
push
icebp
test
pop
fidivrs
int
pop
lea
or
ret
mov
mov
lock
test
inc
xchg
cwtl
xchg
jbe
addr16
das
mov
mov
mov
cmpsl
adcl
or
or
mov
and
movsb
outsl
js
out
das
icebp
xlat
gs
push
mov
mov
or
inc
popw
insl
inc
cmc
inc
mov
mov
mov
lock
mov
adc
xchg
les
push
leave
mov
divb
ss
adc
xor
rorb
mov
xchg
lds
aas
push
into
and
jg
sub
add
dec
ret
mov
sub
or
jae,pn
in
mov
adc
add
sbb
jbe
xchg
roll
mov
imul
js
repz
mov
pushf
imul
mov
iret
xor
rcrb
paddd
mov
out
ret
lods
xlat
xchg
rcl
pop
clc
shrl
sbbb
inc
jb
movsb
int
ud2
stos
popa
jno
jno
imul
xchg
cmp
scas
push
xchg
sub
das
mov
fists
sti
mov
lds
xor
outsb
fcomps
iret
xchg
int
iret
icebp
jmp
aam
ja
outsl
xor
shr
sub
sbb
mov
or
rcrl
lds
popf
in
mov
inc
mov
xchg
dec
mov
lahf
mov
movsb
mov
leave
mov
iret
adc
pusha
pop
out
mov
hlt
pop
cmpsl
push
cmp
sbb
sbb
sub
add
and
and
cwtl
xchg
jb
adc
lock
int3
imul
fcmovnb
repz
dec
test
dec
loopne
stc
jns
cmp
pop
sub
and
inc
or
jb
xchg
loop
call
mov
jo
mov
xor
mov
dec
pop
ds
mov
jno
xlat
push
cltd
cmp
fstl
jne
mov
inc
sahf
negl
mov
stos
fdivr
inc
pop
shlb
out
test
das
add
cmp
add
lods
fistl
lds
clc
mov
fistpl
mov
jo
lods
test
in
lock
adc
cs
hlt
repnz
sub
cltd
or
sub
pop
cld
arpl
mov
scas
and
into
and
hlt
dec
mov
mov
adc
sub
das
pop
mov
scas
in
or
mov
sbb
pop
lods
je
cmpsb
lods
inc
mov
add
cmp
mov
push
cmp
xchg
std
mov
inc
dec
mov
cmc
mov
in
push
lahf
inc
clc
scas
cmp
xchg
ret
outsb
sarl
push
mov
movsl
mov
popf
mull
and
push
dec
insl
outsb
mov
ss
mov
cmpsl
out
lret
cmc
sbb
add
xor
dec
xlat
imul
push
jbe
repnz
cld
in
cmpsl
cli
xor
push
xor
lods
sbbb
xchg
or
xchg
arpl
or
mov
or
imul
es
mov
stos
cs
and
push
int3
js
sbb
das
arpl
sbb
inc
adc
insb
pop
xchg
mov
repnz
mov
mov
push
push
mov
movsl
sbb
jmp
imul
adc
insl
inc
cltd
dec
push
imul
lret
xor
bound
dec
sbb
gs
sbb
daa
mov
rolb
mov
stos
jnp
lods
arpl
push
cmp
jb
dec
cmp
jge
mov
movsb
leave
dec
xor
in
mov
dec
push
mov
add
popa
xchg
add
adc
shr
sub
push
sbb
shlb
cmpsl
xchg
in
xchg
or
gs
fadd
mov
adc
jecxz
mov
out
out
inc
leave
xchg
aas
arpl
pop
aaa
adc
fwait
lret
mov
rol
mov
and
jno
add
in
jecxz
popf
out
out
inc
and
sub
mov
mov
les
fs
dec
xchg
pop
popa
cmp
xchg
mov
lock
mov
std
out
cs
enter
xlat
and
and
sbb
fidivrs
push
add
lret
jno
and
popa
xor
shrl
or
cmp
int3
mov
sub
rorl
dec
jo
add
test
stos
je
xor
and
sarb
pop
jns
roll
call
loopne
fldcw
xchg
daa
pop
pusha
pusha
testl
mov
aad
lods
sub
mov
call
cmp
lret
lock
leave
popa
mov
or
out
insb
shll
js
sar
sar
loope
loope
mov
xchg
ds
fdivrs
fwait
in
das
popf
sbb
pop
adc
ja
fcompl
mov
add
loopne
pop
idivl
test
cltd
in
jae
mov
sbb
test
cmpsl
shll
mov
lcall
cmpsb
shll
or
sub
dec
scas
mov
dec
xchg
mov
sbb
jl
xor
aaa
cld
mov
lahf
jnp
and
leave
push
sbb
es
int
movsl
mov
xlat
rcrb
xlat
cltd
push
push
ds
mov
and
stos
push
lret
xchg
inc
sahf
lods
xor
in
or
sbb
aaa
out
push
adc
insl
int
in
mov
xor
imul
mov
movsl
out
icebp
movsl
lock
sbb
and
lret
out
int3
mov
adc
mov
scas
jmp
pop
lods
lret
sub
mov
or
dec
dec
sub
das
pop
jmp
xorb
aas
mov
aas
es
mov
mov
mov
fdivl
inc
sti
fs
jbe
in
mov
std
adc
mov
xor
cmpsb
inc
sti
pop
xchg
inc
scas
mov
lret
into
sahf
cmc
icebp
mov
or
mov
push
pop
daa
push
push
sbb
enter
xor
imul
addr16
jmp
inc
addl
in
gs
mov
inc
mov
aad
mov
mov
and
imul
out
stos
stos
iret
sti
cmpsb
mov
cmp
pop
push
enter
add
adc
push
clc
out
and
lea
insb
mov
shl
push
push
cmp
mov
cmc
pop
nop
mov
jb
push
add
sub
pop
in
mov
rcr
test
xlat
add
xchg
sub
mov
inc
sbb
jmp
nop
in
jmp
call
lret
adc
in
jle
dec
add
pushf
int3
call
hlt
fildl
pushf
adc
les
subb
and
jns
dec
sub
mov
jne
repz
mov
cltd
fdivrl
imul
jp
adc
dec
shll
push
pop
pop
or
add
adc
pop
je
mov
in
fbld
jne
mov
les
addr16
sbb
pop
xor
sub
pop
fistpl
subl
fucomi
mov
shlb
jb
xor
add
mov
sub
repz
xchg
sub
cwtl
xor
subl
mov
adc
dec
push
xchg
mov
xor
lahf
jmp
data16
test
adc
cmp
push
add
imul
pop
lds
popa
cmp
mov
or
pushf
iret
cs
cmp
jg
pop
dec
mov
lret
outsb
sbb
mov
ret
mov
loop
xchg
add
and
pop
pusha
call
rcl
push
repz
jne
push
xchg
add
cmp
into
loope
push
leave
mov
fildl
cli
cvtps2pi
add
inc
xor
test
movsb
xchg
adc
scas
orb
lret
pop
xor
daa
scas
negl
jmp
push
fcoml
pop
das
mov
lods
leave
ds
lods
repz
loope
test
dec
shl
push
movsb
sub
mov
xchg
mulb
flds
mov
shrl
or
add
mov
out
data16
testl
stc
jl
loopne
arpl
push
mov
jle
mov
les
mov
mov
mov
xchg
adc
add
or
pop
lcall
jl
subl
lcall
inc
jae
sub
push
fwait
addb
cmp
mov
add
imul
mov
xchg
adc
ja
jp
pop
loope,pt
in
lock
and
sbb
jmp
sbbb
in
test
int
bnd
ss
lods
fwait
mov
movsl
xorl
jg
mov
adc
hlt
insb
mov
ret
jle
cld
xor
adc
std
jl
adcl
mov
jecxz
cltd
mov
pop
pop
lock
pusha
jbe
jp
mov
daa
jns
cmp
add
addb
add
addr16
sub
out
jnp
mov
mov
mov
stc
into
mov
loopne
mov
and
aas
jbe
mov
pop
add
mov
jns
xor
jle
imul
pop
mov
lahf
rcl
push
pusha
lods
mov
out
int3
out
adc
add
sbb
dec
faddl
lods
or
clc
dec
fcomps
jo
insl
sub
jns
sub
and
adc
fstl
insl
pop
xor
cmp
test
dec
jne
es
sbbb
je
insb
xchg
push
loope
repnz
loop
or
and
xchg
mov
stos
lock
jmp
sub
mov
ss
pop
push
mov
sub
es
sahf
pop
add
add
jmp
test
jns
mov
in
push
lcall
sbb
mov
jmp
sub
loopne
or
push
push
mov
xorb
mov
pop
jg
je
movsl
sub
or
xchg
inc
jmp
push
pushf
push
xor
cmp
jae
adc
inc
fidivrs
incl
mov
mov
in
xor
shll
or
ret
sub
rolb
or
out
add
mov
mov
insl
jmp
inc
dec
mov
pop
add
xchg
push
ss
ret
push
and
cvttps2pi
xor
sub
sbb
mov
lds
das
repz
rcrl
jo
push
pusha
stos
ja
adc
popa
pusha
mov
push
xor
or
jg
push
and
push
sub
push
cmp
sti
adc
mov
or
mov
mov
jl
and
mov
mov
or
loop
in
repnz
fistpll
fnstenv
xchg
pop
adc
and
push
enter
aaa
cmc
sbb
dec
lods
mov
mov
scas
sarb
enter
in
in
fstpt
nop
and
out
mov
mov
mov
push
jmp
outsb
xor
fcom
pop
dec
xor
push
fnstcw
jmp
pop
mov
sbb
mov
movsb
enter
testb
or
xchg
xor
rclb
mov
ljmp
mov
ja
js
cli
aas
mov
xchg
add
ja
inc
je
into
jg
push
int3
in
jmp
push
scas
sub
mov
xchg
sbb
fsubrs
call
dec
into
mov
add
popa
jno
mov
lret
subl
xchg
mov
lods
xchg
icebp
loop
push
lock
adc
cld
mov
xor
or
in
jg
mov
inc
popa
je
mov
scas
sbb
cmpsb
mov
inc
mov
pop
push
insl
jmp
mov
mov
ror
subl
mov
xchg
adc
stc
inc
int3
push
jne
sbb
jle
gs
pop
jle
test
in
mov
testb
fisttpll
or
out
inc
test
fnsave
pop
mov
lds
push
in
out
push
aas
adc
sub
lea
inc
iret
jmp
lret
inc
lret
mov
xorb
add
out
mov
mov
xchg
adc
cltd
dec
addb
jae
je
or
and
pop
and
cmpsl
outsb
mov
pushw
push
jns
inc
repnz
std
dec
xor
dec
lcall
pop
scas
cltd
repnz
maskmovq
imull
in
mov
sub
es
adc
ret
or
ja
mov
mov
xchg
in
mov
dec
and
into
pop
dec
lea
rclb
shl
xchg
and
fistps
jl
cmp
lret
mov
call
inc
mov
pop
mov
adc
stc
stos
pop
push
jmp
in
pop
outsl
loope
lret
out
sbb
cwtl
into
cmp
fnsave
out
int
js
jmp
shrl
or
inc
jge
mov
popl
jnp
loopne
cltd
test
push
adc
daa
mov
int
sbb
orb
fnstsw
fistpl
adc
shlb
dec
ss
out
and
into
inc
in
push
cmp
xlat
aam
nop
test
cmpsl
pop
scas
insl
xor
fnstcw
jnp
lods
js
js
pop
inc
xchg
mov
xchg
mov
gs
dec
xor
out
push
pop
cmp
add
xor
sub
insb
pop
sbb
jno
loop
mov
cmp
pop
sub
add
push
test
cmpsl
sub
les
fstpt
stos
fldcw
or
movsb
lcall
and
orb
sub
fstpl
mov
int3
ljmp
jae
and
cli
xchg
testl
and
jmp
ret
ljmp
adcl
icebp
sbb
loope
ss
pop
push
loopne
cmp
mov
ret
pop
loope
add
movb
mov
in
dec
int3
xchg
imul
mov
sbb
ds
pop
bound
pop
pushf
push
jecxz
decl
fisttps
xchg
sub
jg
iret
sbb
notb
mov
or
mov
cmpsl
sahf
mov
xor
rolb
pop
repz
xor
jp
cmp
cmp
orl
enter
ret
ret
outsb
mov
pop
mov
inc
js
lcall
mov
ljmp
xor
adc
js
mov
lret
into
movsl
test
jo
shlb
jnp
jno
or
mov
add
push
test
cmc
jl
test
insb
push
adc
scas
sbb
or
mov
repnz
out
ret
xor
and
xor
cwtl
in
lock
cmp
or
and
in
stos
imul
add
and
out
inc
add
dec
loop
ret
repz
jmp
fildl
cmp
jg
std
cwtl
les
inc
and
cltd
enter
out
or
push
sbb
push
repnz
xchg
mov
xor
push
mov
push
or
and
movsb
addl
push
sti
push
imul
dec
fimuls
push
fsubrp
pop
add
cmpsb
sahf
stos
lds
lahf
rclb
mov
pop
adc
push
push
insb
imulb
adc
fucomip
mov
inc
push
loop
and
jnp
stos
adc
or
std
or
ja
cwtl
xchg
repnz
cli
mov
nop
cld
or
add
das
fcmovb
pop
pop
dec
lods
imul
push
mov
mov
leave
jo
push
cmp
data16
or
jge
mov
call
adc
mov
sbb
cmp
adc
int
pop
dec
lret
sub
xor
icebp
mov
add
iret
inc
jnp
sub
add
and
ret
push
pop
movsb
jbe
inc
or
es
test
call
aaa
mov
cli
ljmp
in
and
mov
imull
fdivl
sub
pop
add
icebp
pusha
jmp
dec
cmc
lcall
pushf
mov
enter
sub
loopne
cmp
inc
add
lret
dec
mov
subb
push
in
cmp
std
scas
in
pop
loope
mov
push
stos
sti
push
lods
dec
pushf
test
sub
add
movsl
daa
movsb
push
add
adc
cld
mov
or
cli
dec
push
mov
pop
paddb
mov
jae
fs
xchg
xor
loopne
jmp
inc
jnp
imul
subb
mov
arpl
and
adc
enter
and
dec
or
and
rcll
jae
gs
lcall
mov
scas
pop
ljmp
out
adc
test
xorb
xchg
dec
inc
inc
jne
stos
cltd
jo
or
mov
pushf
or
sahf
dec
arpl
or
jae
lea
popa
xchg
xor
jecxz
sub
jae
push
cwtl
mov
adc
test
sbb
add
add
lods
imul
lcall
outsb
fwait
adc
in
xor
sbb
dec
xchg
aaa
popa
ret
stos
pop
sub
sbb
into
es
mov
xchg
mov
jp
pop
ljmp
stos
js
push
addr16
inc
adc
add
lods
jl
in
outsl
dec
addr16
inc
aas
push
cmp
data16
pop
test
push
pop
jp
push
and
push
inc
cli
or
aaa
and
fwait
mov
push
movsb
inc
icebp
push
fisubl
push
pop
pop
mov
int
jg
jecxz
loopne
pop
push
das
cmp
notl
xorl
cmpsb
ljmp
xchg
dec
loopne
test
mov
pop
sub
repz
dec
push
xchg
pop
movsb
repz
push
enter
or
mull
fs
cmp
lret
add
insb
xor
aad
adc
pop
arpl
sbbb
jecxz
mov
imul
xor
pop
and
insb
popa
hlt
add
jns
rcrl
push
lock
xchg
cmp
cli
or
adc
cwtl
xchg
add
xor
or
fnstsw
divl
loop
and
sti
and
arpl
in
jecxz
xor
adc
mov
outsb
lods
push
xor
mov
jl
sti
or
dec
shrl
xchg
lahf
out
push
push
cmpsl
sbb
pop
pop
data16
cmp
stos
jo
inc
push
popa
lds
lea
test
xor
imul
lock
sub
push
xlat
mov
cmp
mov
cmp
or
or
sahf
in
mov
inc
dec
cli
mov
inc
add
repz
dec
insb
adc
call
xchg
aas
adc
mov
inc
shlb
inc
stc
cltd
add
sub
jo
jle
mov
push
or
adc
fisubl
test
mov
push
movsb
add
lahf
lcall
cwtl
mov
push
and
test
or
popa
stos
test
and
or
sahf
dec
push
and
push
int
aam
faddp
ss
sub
enter
lods
xchg
je
pusha
mov
push
sub
cmp
jno
fsubs
or
mov
sahf
ljmp
push
call
pop
cld
ds
leave
lcall
jmp
aas
sub
xor
ja
xchg
test
jb
int3
cmpsb
es
jo
aas
xor
shll
loop
fdivrs
push
je
leave
pop
into
xchg
out
std
fidivrs
sub
inc
lea
popf
mov
jmp
lea
pop
out
in
fdivrl
xchg
inc
mov
negl
cltd
xor
or
call
pop
mov
or
mov
and
adc
shl
ja
mov
ljmp
mov
inc
lods
int
and
adc
aad
jmp
scas
push
jl
push
mov
scas
push
xlat
jns
xchg
mov
jge
pop
mov
mov
test
push
or
mov
dec
dec
in
add
xchg
fwait
xchg
out
dec
movsb
sahf
xlat
dec
adc
pop
mov
mov
xlat
ds
pop
hlt
fisttps
scas
jbe
stos
in
xchg
inc
out
enter
cmpsb
rclb
or
mov
adc
fistps
sbb
and
cmp
out
xor
dec
test
sbb
pop
add
mov
xor
nop
aaa
cmp
push
jb
ljmp
xlat
fstps
jo
jb
sbb
dec
jmp
xchg
lcall
adcb
add
mov
sub
mov
loopne
push
adc
jle
xchg
call
int3
cwtl
lock
pop
jp
pop
imul
scas
out
cmpsb
sbb
shl
inc
push
mov
inc
cli
mov
aas
loopne
xchg
sti
es
aam
ja
or
inc
cmp
out
insl
clc
add
and
jo
xchg
faddl
inc
movzbl
sub
loop
add
mov
cmp
insb
ds
shrb
sbb
roll
push
or
cmp
dec
add
outsl
out
xchg
xchg
or
add
mov
shl
ss
clc
xchg
cs
cmp
xlat
ret
insb
adc
nop
in
in
xor
cmc
sti
mov
jno
xchg
sarb
jecxz
inc
inc
mov
xchg
enter
xchg
xchg
shl
repz
lods
and
icebp
rcrb
sbb
imul
into
shll
cltd
mov
lods
mov
call
lcall
mov
inc
out
xor
mov
xlat
adc
sti
popa
jge
cmp
imul
and
adc
aam
addl
inc
mov
jnp
lret
jae
sbb
hlt
pop
inc
les
int
lcall
loope
cmp
or
sbb
mov
xchg
or
and
ds
cmpsl
and
test
add
or
pop
loope
push
hlt
jmp
int3
lcall
mov
cwtl
dec
out
lret
inc
pop
sti
dec
and
push
xor
jae
and
mov
cli
mov
inc
push
sarl
out
bound
jmp
xor
sbb
mov
mov
push
adc
sahf
imul
pop
insl
sub
cmp
jecxz
enter
or
inc
xchg
or
cmpl
outsl
cmp
cli
gs
lods
or
adc
test
stos
daa
push
inc
lret
jmp
cmp
outsl
sahf
sub
jmp
and
add
shlb
call
add
enter
adc
insb
sub
mov
insl
rcrb
add
arpl
xchg
aas
mov
or
mov
js
jle
sarl
push
jl
cld
xor
pop
data16
nop
cmp
bound
pop
fdivrl
mov
out
adc
dec
in
and
rcr
mov
xchg
fwait
pop
mov
cmp
push
sarl
pop
jo
cmp
stos
mov
pop
cmpb
jl
push
divl
shrb
push
mov
mov
lea
fildll
roll
cld
aad
xchg
mov
xlat
repz
cs
outsl
popa
mov
insb
test
dec
cmc
mov
jae
popl
ret
fbstp
stc
adc
mov
in
xchg
sub
in
clc
mov
cmpsl
add
pop
shr
adc
sbb
dec
stc
hlt
mov
imull
cmpsl
sbb
pop
imul
stos
mov
pop
cli
sub
xor
cmp
scas
pop
lahf
out
push
orb
popa
mov
mov
lret
sub
fwait
xchg
add
test
insb
insl
xor
xor
test
lea
push
fldl
pop
in
dec
push
arpl
push
sbb
xlat
shrl
pmaddwd
aas
xor
sbb
jmp
jne
int3
pop
in
fstpt
mov
dec
cmpsl
pusha
sbb
lods
adc
sahf
daa
add
mov
nop
jp
and
mov
icebp
out
mov
adc
sub
adc
cmp
and
cwtl
lret
sbb
out
xor
or
scas
jno
sub
andl
sarl
call
mov
ss
inc
mov
mov
out
sbb
out
movsb
push
mov
insl
test
and
mov
daa
pop
jge
or
bswap
or
insb
jae
ficoml
push
jg
fdivr
adc
out
rcrl
nop
xor
xchg
xchg
xchg
popa
adc
and
jge
test
hlt
add
xor
je
jge
jo
fwait
bound
gs
adc
push
gs
mov
push
vminpd
out
test
ljmp
rcr
pslld
les
and
or
inc
add
inc
iret
sub
xchg
test
jecxz
mov
mov
test
lods
mov
ja
lcall
mov
adc
cmp
daa
add
cmpl
mov
inc
mov
inc
movsl
je
jmp
shll
fldenv
mov
mov
cli
jg
cmc
mov
sti
pop
fdiv
and
cli
mov
scas
push
adc
imul
cmp
daa
jecxz
mov
add
rclb
cmp
fsubp
pop
cmpsl
ret
rcll
cs
xchg
xchg
testb
lret
scas
pusha
loopne
stos
sub
movl
dec
cld
testb
repz
jle
lahf
insl
sbb
rcrl
inc
push
adcb
movsb
daa
pusha
les
cs
or
fcomp
clc
ja
jns
aas
cmp
cli
push
dec
mov
sub
movd
mov
pop
push
inc
or
cwtl
jno
dec
add
cmpsb
push
mov
shlb
inc
sti
pop
mov
jecxz
sbb
mov
and
fnsave
stc
sbb
jp
jg
adc
test
xchg
bound
outsl
into
mov
dec
movsb
cmp
jmp
dec
dec
aaa
aas
mov
clc
sbbl
loope
shl
inc
outsb
test
shll
push
mov
cmpsb
cmpsl
mov
xchg
jmp
mov
arpl
stos
jb
or
fldcw
repnz
mov
jo
xchg
sti
aas
into
jo
mov
inc
push
mov
data16
lock
mov
in
push
cwtl
leave
out
loope
pop
cmp
and
sub
cmp
mov
pop
jae
sbb
push
sbb
test
sbb
cmp
shlb
sahf
loope
mov
in
push
cs
pusha
shlb
shlb
ret
mov
xchg
inc
sbb
push
xor
mov
imul
and
add
adc
jmp
icebp
outsl
arpl
clc
iret
mov
mov
mov
lahf
jg
or
inc
pop
sahf
out
inc
call
fyl2xp1
xor
jae
cld
and
mov
inc
sub
gs
adc
sub
insl
inc
stos
jmp
cmp
pop
push
and
orb
test
push
fdivrp
loopne
ret
push
aaa
loopne
push
xchg
std
arpl
mov
adc
add
push
pop
lds
pop
sub
xchg
pop
cmpsb
insl
repz
inc
jno
adc
push
hlt
mov
aam
fwait
shrl
and
sub
fnsave
ret
test
push
sub
cwtl
pushf
jnp
sub
pop
sub
es
mov
mov
loop
popa
lea
xacquire
std
xchg
add
push
ret
and
stos
mov
je
iret
sbb
stc
inc
out
in
sbb
popf
out
fistpll
lret
testl
add
xchg
iret
jg
xor
insl
inc
jbe
fwait
mov
adc
std
dec
cmp
fs
sbb
dec
dec
mov
outsb
xorl
sub
fisubl
dec
in
dec
lods
push
push
fisttpl
mov
leave
push
push
push
mov
xchg
int
loopne
mov
push
fldenv
pop
jmp
and
or
jg
test
arpl
rcr
lock
ljmp
mov
call
stc
sbb
cmp
inc
xchg
push
mov
lret
jno
in
cmp
insl
loopne
push
imul
dec
xor
shlb
enter
fildll
xchg
add
jl
mov
sti
adc
ds
sarl
push
sbb
in
mov
push
mov
mov
test
cmp
cmpsb
test
cli
jl
stos
mov
into
lods
fs
or
cltd
xchg
and
and
dec
or
sub
add
fldcw
sub
mov
in
xchg
jno
add
shlb
xchg
stos
and
cs
mov
mov
push
cmp
sub
push
add
enter
in
jne
mov
ss
push
lret
hlt
fcompl
add
into
pop
sahf
xor
es
shll
sbbb
sub
ss
cmp
push
and
inc
lods
xchg
add
sub
xchg
call
mov
int
stc
mov
in
out
scas
jl
mov
push
inc
fs
mov
in
lds
jp
cmc
sub
sets
scas
jae
pop
vmovss
fsubp
cmpsb
and
fstl
mov
cmp
xchg
leave
xor
lcall
insb
pop
adc
cwtl
mulb
jb
mov
fildl
sub
xchg
fsubrs
shrb
fwait
and
cltd
scas
fstl
aam
test
cmp
and
inc
mov
xchg
les
fcomip
addr16
mov
js
cmc
adc
das
xlat
outsb
hlt
das
pusha
in
fs
std
jecxz
mov
dec
add
dec
adc
mov
mov
jns
dec
fbld
push
ds
cmp
sti
inc
lret
loope
fldl
xor
adc
dec
test
jmp
mov
ret
add
add
fsubrp
lods
enter
push
cmp
scas
je
mov
xchg
xchg
test
out
fnsave
aad
dec
inc
or
insl
cs
sbb
push
push
pop
inc
insl
mov
lds
in
sbb
bound
xchg
insl
mov
xchg
sub
clc
and
pop
add
mov
movsl
sub
ret
test
je
mov
pop
jnp
pushf
dec
jg
push
jmp
mov
mov
and
ret
movsb
jns
sbb
out
ds
or
ficoml
out
fs
fs
iret
xor
fsubl
test
leave
addr16
mov
mov
sar
inc
xchg
mov
dec
push
jae
fstl
inc
lods
push
xchg
sbb
sbb
or
in
push
lcall
mov
dec
lods
pusha
push
es
jne
faddp
outsl
add
lods
or
icebp
pop
pop
cwtl
push
dec
int
movsb
aam
xchg
push
mov
ss
cmp
sub
add
jmp
cli
outsb
sbb
aad
loop
sbb
sub
cmp
out
jae
adc
enter
xchg
jns
mov
inc
loope
cmc
lods
add
in
inc
jnp
mov
out
rol
rcll
into
dec
iret
out
les
lret
out
mov
ja
stc
test
aam
sbb
fs
adc
jns
push
pop
xchg
cmp
mov
push
inc
xor
jg
or
xor
push
es
mov
cli
lds
dec
adc
push
fwait
push
stc
dec
or
ja
mov
mov
and
ss
out
pop
cmp
pop
imul
rcpps
fstpl
adc
mov
and
add
add
mov
sbb
lret
inc
clc
pushf
aaa
jnp
outsb
movsb
xchg
ficoms
push
cld
adc
dec
mov
push
jo
pop
or
imul
movb
sbb
enter
mov
pop
push
jnp
sub
add
mov
scas
xor
lock
sti
and
nop
ja
xor
pop
sub
push
aam
mov
fcmovnu
pop
nop
leave
cmpsl
hlt
mov
dec
outsb
cmp
hlt
add
xlat
mov
mov
mov
data16
gs
stos
jle
xchg
stos
xor
jge
cltd
or
cwtl
xchg
cmp
pop
sbb
xchg
jo
pusha
hlt
pop
or
cwtl
stc
sbb
and
mov
lcall
dec
mov
sub
jno
xor
adcb
es
enter
push
pop
gs
sbb
xchg
jmp
mov
loop
jne
or
mov
fisttpl
jnp
sahf
shlb
fidivrl
lods
outsb
insl
xor
sub
ret
arpl
mov
test
jns
sub
rolb
jae
hlt
out
rolb
pop
lods
and
fldenv
push
insl
fisubl
mov
mov
ficompl
cmp
adc
aad
loop
ljmp
pop
js
add
pop
xor
xchg
xchg
subb
in
jb
das
xchg
jg
iret
mov
push
pop
mov
push
addr16
ss
mov
test
cmp
jns
clc
nop
dec
cmp
out
xchg
cld
add
inc
add
mov
fldt
ror
xchg
fs
mov
shlb
xchg
inc
push
cmc
or
xchg
push
cmc
xor
xor
mov
adc
scas
shl
aaa
in
negl
and
push
fsubrp
adc
push
jp
jns
icebp
imul
pop
or
sbb
inc
pop
push
idiv
scas
jno
jno
cld
divb
les
jp
mov
pop
loope
or
push
into
inc
inc
das
fidivrl
int
cmp
xchg
add
pop
fwait
aam
addb
sets
mov
fs
adc
mov
call
cmp
xchg
lret
test
mov
pop
mov
dec
sti
int3
repz
in
pop
dec
les
inc
test
push
addl
jmp
pop
dec
add
mov
mov
mov
add
rcrl
stos
xchg
arpl
or
pop
pop
add
es
pop
not
enter
lock
in
cmp
ja
cwtl
ljmp
jl
es
in
add
enter
lea
lock
pop
inc
inc
in
xor
mov
test
mov
sub
call
aam
xchg
jno
pop
or
pop
mov
adc
jo
xor
aaa
inc
sbb
iret
sub
icebp
xlat
cmp
inc
xor
scas
dec
rol
addr16
call
pop
lret
pop
xchg
aad
cmpsl
loope
lahf
sub
push
jns
popf
mov
lret
mov
xchg
pop
xchg
inc
dec
mov
or
pushf
shlb
cmp
jb
inc
push
mov
loopne
or
jns
jl
mov
rcrb
mov
loope
movsl
int3
add
bound
pop
call
fnstenv
rclb
movsb
sbb
cmp
arpl
push
fnstenv
fmul
mov
inc
push
aaa
mov
inc
idiv
shlb
dec
sub
bound
outsl
mov
loopne
jg
add
cs
mov
loop
in
jns
and
inc
repz
sub
cmp
psubb
call
test
adc
sub
push
dec
dec
dec
jbe
lods
sub
adc
leave
xchg
jno
xchg
sub
jns
gs
mov
sub
mov
je
adc
sahf
fistl
or
mov
aam
fimull
dec
ljmp
sbb
ror
or
push
js
js
cmpsl
repz
fldl
cmp
daa
sarl
sbb
aam
iret
pop
adc
test
sub
jmp
test
fwait
mov
adc
xchg
lret
push
arpl
sbb
fimull
or
xchg
clc
xchg
mov
jns
dec
stos
popa
clc
fdivrl
pop
mov
jecxz
lock
out
leave
jae
outsb
imul
adc
mov
add
jp
in
mov
mov
push
sub
rcr
inc
mov
inc
jno
and
add
cmp
arpl
or
fcom
loopne
xchg
mov
xorl
imul
sahf
or
xor
sti
shrl
mov
roll
shrl
cmp
cmpsl
cmp
dec
mov
pop
pop
or
cmc
xor
inc
mov
nop
clc
je
movsl
out
cmp
insl
inc
iret
xchg
out
cmp
add
dec
ror
push
push
mov
mov
mov
enter
sbb
subb
das
psrlw
adc
jp
pop
ret
push
sub
out
mov
js
js
sbb
loope
mov
push
and
cmpsl
out
add
iret
sbb
adc
xchg
dec
mov
mov
aam
jmp
lods
mov
lods
loope
mov
cmp
push
divb
stc
mov
mov
aad
xchg
int3
je
or
mov
cwtl
push
cmp
adc
jne
les
mov
jle
divb
imul
add
cwtl
sbb
inc
dec
pop
adc
gs
and
or
mov
push
das
fidivs
add
stc
inc
ja
mov
fisubrs
in
mov
fists
sbb
mov
loope
inc
repnz
or
mov
mov
jg
pop
mov
test
rol
in
jl
cmpsb
inc
jo
popa
clts
sub
lahf
popa
sbb
mov
mov
rcl
jbe
lods
pop
cmp
fldcw
pop
adc
push
xor
pop
insl
fisttps
mov
mov
lods
xchg
adcb
es
lcall
insl
mov
pop
mov
in
dec
popf
xchg
xchg
jmp
sub
orb
mov
enter
xor
fsubr
lret
lods
xchg
xchg
lods
stc
push
rclb
jne
and
std
and
js
enter
sub
in
aam
cmpl
gs
mov
dec
hlt
cltd
pop
xor
sbb
cmp
lock
mov
pop
pushf
mov
mov
lods
fnstcw
add
ret
and
mov
mov
sub
jo
xchg
aaa
subl
lahf
xchg
mov
test
in
mov
and
fdivrs
test
adc
lret
mov
ficoms
lret
nop
divb
dec
aad
pop
mov
sbb
adc
lods
xchg
inc
fldcw
and
xchg
ret
cmpsb
enter
roll
je
shrl
jle
jle
xchg
jg
mov
faddp
scas
lock
push
jbe
adc
cmp
xor
adc
pop
xor
cmp
daa
pop
sbb
lret
push
popa
add
mov
xor
xchg
pop
mov
iret
jg
mov
adc
jl
sbb
shrl
mov
movsl
pop
das
push
hlt
or
loopne
mov
outsb
shl
icebp
or
hlt
xor
bound
mov
loopne
jnp
pop
sub
lcall
xor
imul
loopne
and
insl
lds
add
repz
popl
mov
jnp
mov
sarl
out
add
std
mov
in
sub
push
jo
roll
sbb
inc
xorb
push
gs
push
sarl
loopne
adc
jle
push
xchg
mov
jecxz
pop
jmp
jmp
push
neg
xchg
add
mov
imul
push
das
sbb
add
xorb
jb
pop
dec
push
arpl
and
pop
out
push
movsl
fucomip
jno
mov
test
mov
or
add
and
shlb
test
imul
call
cs
pop
rcrl
sarb
in
fwait
pop
push
and
fwait
sbb
and
rcl
cmpsl
jbe
aas
sbb
in
cmp
jl
in
test
sbb
rcrb
mov
jb
xchg
inc
cmp
push
adc
lret
jae
xchg
aaa
jp
or
and
fcompl
loop
pop
scas
mov
rcl
jl
fistl
dec
xlat
inc
imul
fmulp
and
push
ret
iret
shll
fwait
xor
sbb
pop
xchg
jae
jge
adc
or
jns
cmovno
scas
jp
jp
pushl
pop
xor
cmp
hlt
out
out
ss
and
mov
xor
mov
std
adc
mov
push
adc
andl
xlat
lcall
outsl
push
stos
mov
mov
mov
jg
movb
jne
hlt
pop
jo
xor
popa
lods
adc
sub
arpl
xorps
sbb
mov
xchg
jmp
into
xchg
mov
push
mov
fistpl
mov
not
pop
sub
mov
pop
push
mov
daa
xor
add
xor
jno
jecxz
add
jecxz
cld
lret
pusha
mov
fsubrs
fxch
sbb
lea
in
andb
cwtl
and
jno
notl
inc
mov
mov
fcmovnbe
push
cld
and
scas
inc
cmp
jp
outsw
mov
fsubs
cmp
subb
out
ret
pop
jl
pop
push
push
inc
ja
in
in
jne
test
adc
fcoms
lcall
mov
sbb
movsb
jbe
cltd
fstl
add
inc
jo
sahf
mov
xchg
es
dec
into
fwait
addr16
mov
fildll
in
inc
jle
lea
out
pop
fdivrl
mov
adc
push
hlt
lods
std
cs
cmp
movb
xchg
lahf
mov
push
mov
and
or
and
dec
fadds
mov
dec
cli
cmpsl
cld
call
or
loop
fisttpl
sbb
sbb
jne
xchg
jl
mov
fs
ja
dec
dec
fisubl
lcall
clc
ds
cmp
in
cmpsl
mov
dec
dec
and
inc
ret
fcomps
jg
or
outsb
xor
xchg
lods
and
pop
sub
aaa
mov
insb
mov
jmp
popf
push
scas
mov
cmpsl
popa
daa
dec
sub
jle
das
stos
xlat
xchg
xchg
aad
cmp
dec
testl
shrl
and
in
test
js
mov
lock
mov
xchg
cwtl
jnp
loop
xchg
fnstenv
in
xchg
pusha
shll
repnz
jecxz
xchg
movsb
js
aam
xlat
push
aad
movsb
cmpsl
sahf
lock
jo
push
push
pop
aaa
inc
mov
cmp
gs
clc
icebp
push
loopne
iret
and
aas
fdivs
mov
out
and
ss
mov
stos
dec
jp
aas
test
pop
sub
and
jp
jle
or
loop
xchg
pop
mov
adc
cwtl
pop
test
daa
sub
add
and
fistpl
xlat
dec
and
mov
push
gs
fnstcw
push
flds
and
outsl
mov
jl
mov
add
out
sbb
icebp
in
sub
inc
mov
int3
dec
xchg
mov
popf
bound
sti
ja
fwait
cmp
hlt
cmp
push
xor
cs
mov
jp
test
push
xchg
imul
aad
pop
mov
jae
sub
dec
sbb
pop
mov
jbe
pop
clc
mov
pop
sbb
out
push
mov
loopne
lret
xor
and
out
dec
fcoms
ja
jmp
or
adc
das
dec
nop
lock
pop
pusha
inc
dec
cmp
xor
dec
shrl
dec
outsb
imul
mov
sbb
das
das
sti
pop
sahf
xor
pop
pop
cltd
xchg
or
int
jl
mov
and
fiaddl
incb
das
pop
stc
lahf
xchg
hlt
loope
xor
sbb
cltd
cli
int3
or
inc
push
std
test
and
lcall
sub
out
sub
rep
negb
pop
lods
jnp
inc
rorb
add
inc
adc
sub
nop
test
and
fldl
pop
sub
push
lods
dec
clc
mov
or
and
xchg
cwtl
mov
sbb
jbe
or
jl
shl
fldt
fstpt
mov
pop
jo
and
stc
pop
cmpsb
jnp
lods
es
movsb
add
adc
cmp
mov
pushf
fidivrl
mov
push
lock
movsl
out
shll
push
mov
push
stos
ret
arpl
iret
push
sub
pop
mov
ss
popa
cmpb
xlat
or
hlt
jbe
push
outsl
js
dec
ljmp
sbb
mov
push
in
stos
push
jnp
fldl
jne
or
rcrl
or
or
scas
cmp
mov
dec
jge
out
mov
cld
sbb
xlat
out
lret
xchg
fcomip
lret
jno
popa
icebp
sbb
jge
and
call
sbb
inc
cmp
xchg
lods
sahf
pusha
xchg
xor
cmp
cmp
aas
or
cmovs
xlat
fnstsw
mov
pop
fldt
dec
mov
adc
jg
push
mov
inc
and
mov
push
aam
rorl
lods
int3
xor
dec
clc
out
cmp
xor
data16
es
mov
mov
cmp
or
movsb
jb
dec
push
pop
out
lea
es
mov
pop
test
adc
pop
ret
ss
cld
pushf
maskmovq
mov
ret
or
lret
inc
push
sub
mov
jae
pop
sub
xchg
mov
int3
push
les
mov
shrb
lods
and
and
cs
push
repz
enter
push
push
pop
add
push
cltd
sbb
lahf
sbb
jbe
cmpsb
or
bound
out
rol
adc
lods
push
lcall
mov
mov
pop
loop
and
shl
cmp
iret
and
cmp
dec
mov
popf
insl
int
jge
je
sbb
pop
pop
ds
cmp
in
sti
sub
incl
inc
push
inc
jge
sbb
mov
lock
xchg
shlb
xchg
mov
lcall
lahf
or
rcrl
cld
push
pop
adc
ficompl
out
mov
add
addb
push
loope
mov
dec
stos
mov
adc
mov
ljmp
push
call
add
cmp
and
adc
jno
xor
push
adc
ret
out
push
loop
sub
push
lods
pop
cmpsl
dec
add
xor
shlb
cmp
push
dec
jp
mov
scas
lahf
xchg
pop
shll
fwait
jbe
test
pop
mov
pop
sbb
push
fsub
mov
sub
orps
add
pop
mov
test
and
pop
dec
aas
mov
rclb
cmpsb
pushf
pop
xchg
mov
xorl
popa
sub
sub
lods
into
or
cli
repz
jecxz
cltd
mov
movsb
lahf
dec
loope
arpl
sbbw
mov
repz
lods
repnz
sbb
mov
xchg
repz
adc
dec
cmpsb
pop
dec
bound
frstor
ds
sbb
cmpsb
jp
or
xchg
dec
mov
lock
shr
cmpsl
lcall
sahf
add
stos
mov
add
imul
push
aad
es
int
imulb
cld
mov
ja
add
add
test
out
pop
pop
nop
or
mov
iret
repz
adc
mov
sar
push
xor
andl
adc
mov
pop
dec
jo
add
push
add
lret
testb
mov
add
idivl
inc
xchg
xchg
fwait
in
test
pop
cmpsb
test
sbb
xorl
inc
lods
push
fistpll
mov
xchg
push
int3
repz
mov
sub
dec
mov
adc
jp
mov
mov
xor
iret
jg
fucomi
iret
int
lret
daa
orb
dec
ss
cmp
jmp
fistps
ds
add
jb
pop
push
and
jae
cmp
xchg
out
push
lock
sbb
lahf
push
push
or
push
push
push
dec
pushf
mov
scas
xchg
cmp
cmpsl
repnz
pop
aam
dec
mov
adc
sub
xchg
jbe
fmull
lcall
push
jecxz
nop
xor
inc
mov
dec
sbb
insl
clc
inc
imul
xor
adc
cmp
mov
movsb
jg
loopne
add
pop
popf
out
mov
hlt
push
stos
dec
andb
lods
pop
int3
mov
push
sbb
mov
fs
inc
out
mov
jno
fadds
sub
fisubrl
push
cmp
fsubp
sub
std
adc
int
movsb
push
insl
adc
or
out
sbb
xor
xchg
xor
je
sub
stos
aas
int
pop
xor
or
adc
loop
mov
jp
sub
push
rcrb
out
ret
rorl
cmp
push
mov
es
repz
xor
jnp
lcall
outsb
mov
test
outsb
push
popf
rorb
pusha
jp
adc
int3
sub
push
outsl
lret
adc
add
pop
fistps
leave
dec
and
mov
fisubs
das
xor
dec
push
xor
inc
cmp
and
pop
add
xchg
lcall
clc
sarl
rolb
mov
popf
add
mov
repz
orl
add
cmp
insb
test
popa
adc
push
lock
lock
ret
cmp
push
ja
jecxz
jnp
lock
pop
adc
push
pop
xor
sahf
jp
push
sub
xchg
jo
xor
cmp
pushf
mov
aas
popa
icebp
xor
out
pop
or
add
pusha
dec
movnti
jmp
subl
repnz
xor
adc
add
fwait
test
lds
and
push
xchg
aam
mov
sub
sub
ds
bound
dec
mov
cmp
push
xlat
in
dec
mov
lcall
sub
in
nop
push
mov
lods
repz
pop
add
xchg
add
ficoms
rcll
lret
cmp
jp
sbb
xchg
and
sbbb
sub
out
xchg
mov
and
mov
cmpsl
pop
mov
cltd
push
int3
or
sahf
adc
nop
aas
fbld
fisttpll
shl
mov
int3
jbe
inc
pop
rorl
xor
stc
call
insb
xor
popl
pop
xor
mov
leave
jl
pop
es
jo
cmpl
xor
push
bound
icebp
gs
loopne
push
ss
sub
test
push
and
jg
pushf
jge
dec
jge
scas
cmp
int3
sbb
notb
movsl
fdivr
and
xlat
sub
and
es
sub
add
pop
jl
xchg
add
in
mov
iret
xchg
fwait
ja
sub
jo
outsl
push
imul
mov
sub
fdivrs
push
fldcw
aad
jno
cli
shrl
push
cmc
sbbb
push
divl
jbe
sub
jmp
gs
mov
andb
sbb
pop
and
mov
jmp
xlat
repz
cmp
pop
loope
dec
pop
movsb
inc
in
push
rcll
insb
scas
scas
cmpsl
fsubl
loop
fildl
cmp
andb
cmp
jo
fs
xchg
test
test
insb
in
pop
push
imul
push
addr16
out
cmp
and
mov
fcomp
mov
pop
mov
les
shrl
es
fdivrs
lods
popa
stc
adc
fnstcw
adc
add
test
fs
cmp
std
pushf
mov
cwtl
mov
mov
mov
jae
mov
jl
divl
sahf
inc
cli
faddp
xor
add
cmpsb
push
jge
test
popa
cmp
shrb
mov
icebp
mov
dec
js
adc
fsubrp
out
into
mov
xchg
or
icebp
jno
sub
jge
pushf
push
mov
add
imulb
inc
push
mov
jns
ret
fnstenv
pushf
adc
repnz
sarb
push
push
dec
ds
jp
mov
sbb
mov
lret
jo
jmp
push
mov
cli
mov
lahf
push
je
es
scas
lcall
mov
mov
mov
test
cltd
stos
xchg
or
xchg
cmpsl
push
sbb
adc
mov
jge
sub
lods
inc
mov
cmp
xchg
or
xchg
dec
mov
test
mov
push
insb
inc
test
mov
adc
push
jmp
clc
and
add
and
loopne
int
mov
test
add
mov
xor
outsb
inc
or
pop
jnp
aam
adc
in
mov
out
inc
xchg
sub
leave
xchg
leave
nop
mov
fidivrl
xor
fimuls
mov
cmpb
scas
mov
cmp
rcr
push
orb
setb
into
adc
ds
inc
jp
inc
push
ja
cmc
in
loopne
adc
stos
inc
shrb
xchg
aaa
fists
outsb
push
js
mov
out
imul
pusha
xor
ja
xchg
lock
sub
xchg
add
and
popa
repz
lds
sahf
in
pop
loope
push
out
cwtl
adc
imul
jae
xchg
ja
adc
xchg
popa
fsubl
pop
jle
sbb
fnsave
push
repz
fisubrs
and
mov
fwait
jge
pop
cmp
shrl
add
xlat
sbb
outsb
xchg
jne
imull
push
sbb
in
xchg
iret
pop
xor
cltd
add
sub
xchg
jo
cltd
xchg
pop
mov
jp
mov
call
cltd
das
repnz
scas
push
icebp
jb
xchg
out
push
inc
add
pop
das
and
imul
ds
lock
rclb
dec
add
mov
mov
cmp
mov
sub
scas
addb
lcall
aas
ds
xlat
lret
jecxz
test
loop
xchg
fistpl
xchg
sbb
lock
cli
icebp
mov
in
outsb
js
sbb
push
inc
cmp
xchg
add
mov
dec
and
inc
mov
xchg
scas
repz
shll
jmp
pop
inc
dec
or
lds
xchg
cmc
flds
jne
lcall
mov
in
xor
dec
mov
mov
pushf
mov
lock
add
lods
jae
xor
mov
adc
clc
jge
rcrl
sub
lock
daa
arpl
inc
or
sub
mov
mov
xchg
jg
jp
mov
mov
cmp
stos
testb
pop
and
jnp
rol
aam
xchg
dec
aaa
xchg
int
ret
mov
subl
xchg
push
or
jle
cmpsl
les
addr16
add
sbb
xchg
cmpsb
cmp
cltd
mov
push
xchg
xor
mov
fstps
mov
mov
push
subb
test
out
call
fmuls
pop
and
sub
iretw
xor
lret
xchg
jb
xchg
xlat
sbb
cmp
and
frstpm(287
pop
rolb
das
mov
rol
repnz
sub
fildl
ja
mov
jp
out
mov
cmc
sbb
outsl
pop
dec
sbb
xchg
sub
or
push
sar
push
test
out
faddl
sbb
das
clc
clc
cs
aam
mov
and
test
enter
add
out
lcall
inc
mov
fistpl
ficoms
sbb
cmc
mov
popa
arpl
or
and
movb
js
das
popa
insl
ror
inc
cmp
lcall
xabort
sub
mov
push
xchg
test
push
lds
lods
ret
dec
mov
das
test
adc
mov
mov
shr
ds
pusha
or
or
imulb
push
cs
ja
pop
xor
inc
les
rclb
inc
int3
mov
xchg
int
push
xchg
mov
dec
mov
push
lods
xor
xlat
cmpsl
outsl
mov
in
add
imul
test
push
pop
push
lods
ds
stos
dec
lods
xchg
data16
cmp
sahf
jne
lret
daa
jnp
push
sbb
idiv
sbb
dec
sbb
and
pop
sbb
pop
or
addb
stos
and
xchg
push
jle
lods
sbb
loopne
pop
orl
cltd
out
cld
mov
adc
xchg
pop
or
jle
lea
ljmp
adc
addl
fstpl
xor
xchg
stos
sbb
ret
aam
sub
or
cmp
mov
cli
xor
loop
insl
repnz
pop
xchg
sub
mov
lahf
aad
push
push
mov
xor
arpl
rclb
incb
scas
add
add
fdivs
dec
push
adc
aas
fs
adc
cmp
sub
add
mov
inc
imul
xor
push
aas
ret
inc
test
adc
andb
je
or
dec
out
iret
dec
ss
andb
jns
mov
iret
clc
sahf
push
push
mov
ja
pushw
std
or
push
fwait
test
cmp
and
sti
aam
imul
xchg
push
jb
fidivrs
icebp
xchg
xchg
cmp
fwait
jnp
jge
jbe
cmp
inc
push
test
mov
insl
icebp
push
jae
inc
aam
mov
xor
push
out
daa
sub
xchg
push
das
inc
cmp
adcb
cwtl
testb
lods
or
fimull
enter
loope
test
dec
add
push
negl
jmp
cltd
pop
loope
repz
cmp
cltd
imul
xor
jl
fwait
and
xchg
mov
mov
add
jp
inc
jg
and
je
xor
mov
mov
sbb
mov
mov
or
pop
cmp
dec
mov
cmpsb
cld
mov
pop
jbe
outsl
mov
in
lods
ficoms
movsl
test
mov
push
jmp
mov
imulb
jo
test
jae
call
sub
push
push
sbb
cld
adcb
movsb
fnstenv
pusha
mov
jae
xchg
ljmp
pop
or
jb
mov
cmp
inc
add
sub
add
out
idivb
loop
and
cmp
fdivr
pop
pop
lods
and
into
imul
aaa
xor
adc
popf
xlat
inc
sub
push
pop
shll
cmp
inc
mov
ja
push
inc
loop
sub
stos
lods
repnz
add
mov
or
jne
mov
sub
push
adc
or
pop
push
xchg
clc
pop
or
cmp
or
xor
movsl
rcll
inc
pop
aam
insl
xor
icebp
mov
sahf
dec
pop
or
dec
stos
clc
int3
mov
or
dec
xchg
add
lahf
cmpb
push
sub
sbb
out
push
jg
addr16
add
jnp
mov
inc
aas
aaa
insb
xchg
data16
add
sub
mul
aam
subl
or
icebp
fs
mov
mov
adc
sbb
les
adc
mov
push
push
cmp
in
jmp
mov
dec
xchg
hlt
mov
xor
mov
mov
mov
arpl
jg
js
sti
dec
mov
cmp
xor
dec
in
cmp
push
mov
mov
rep
jo
cmp
fsubr
lret
sub
orb
mov
lahf
mov
fstl
sub
mov
inc
jg
test
cmp
mov
jno
in
cwtl
es
mov
call
sub
bound
mov
adc
fists
mov
or
xchg
rcl
add
insl
add
nop
cwtl
test
scas
inc
popa
mov
dec
out
flds
and
or
loopne
add
imulb
std
push
pop
cld
mov
mov
movsl
jnp
lahf
movsl
xlat
lods
sub
mov
sub
stos
push
mov
or
adc
cmp
add
les
inc
ljmp
mov
in
daa
sti
xchg
cmc
in
fistpll
jb
lss
icebp
addr16
adc
xor
inc
or
daa
sub
arpl
loop
fwait
add
xor
mov
in
or
std
movsl
mov
xchg
lahf
jp
fistl
mov
xor
insl
mov
pop
mov
ja
xlat
into
sbb
sub
jp
inc
mov
dec
fidivs
gs
fdivrl
xor
mov
cmp
xor
inc
stc
dec
inc
mov
pop
mov
cmpsb
idiv
sub
jne
sub
aad
loop
inc
push
or
pop
lds
sti
jecxz
xor
ret
pop
shrl
push
jecxz
movsl
cmovns
or
jl
sub
mov
in
cmpsl
xchg
daa
xchg
clc
mov
jne
into
aad
popl
inc
dec
mov
jo
inc
inc
pop
call
mov
and
jo
pushf
fmuls
jbe
cmp
push
sbb
leave
mov
or
filds
cltd
sarl
in
mov
inc
repnz
jecxz
cli
add
call
and
push
or
iret
adcl
repnz
inc
out
nop
das
pop
add
mov
jae
dec
or
mov
push
mov
mov
iret
jp
xchg
add
add
stos
jge
inc
xchg
add
push
stos
and
mov
js
jmp
push
mov
mov
insl
push
inc
int3
push
pop
leave
mov
andb
jno
lret
xchg
leave
adc
fiaddl
jecxz
and
imul
mov
sub
mov
cmpsl
push
lret
xchg
mov
clc
stc
cld
cmp
cmp
push
mov
aad
es
hlt
fidivrl
sub
test
fwait
movsb
fisttps
out
mov
mov
add
pop
add
cmp
insb
inc
fcmovu
out
inc
mov
or
jbe
cmp
mov
add
pop
gs
loope
jo
xchg
lret
into
ret
aad
mov
ds
nop
jle
clc
insl
sahf
cmp
push
fst
sbb
outsb
outsl
push
pop
mov
das
sti
dec
iret
leave
sbb
lods
stos
in
mov
dec
dec
xchg
push
fucomip
sbb
push
test
mov
dec
cmpsb
loop
mov
xor
sub
mov
cmp
mov
jbe
aad
inc
mov
or
das
jne
push
mov
out
test
js
push
inc
in
stos
cmc
push
cwtl
mov
inc
ficompl
cmpsb
dec
xchg
addr16
mov
call
xchg
jg
movsb
fwait
je
shl
and
fildll
pop
out
push
and
out
daa
pop
icebp
or
or
and
jns
cmc
nop
enter
xor
sbb
enter
sbb
cmp
repz
stos
out
or
push
fldt
fisttps
push
and
cmc
fwait
les
and
repnz
xchg
adc
sub
cltd
int
sub
pop
mov
pop
add
stc
mov
clc
mov
jge
jmp
cli
hlt
stc
pop
mov
arpl
cmpsl
loopne
dec
adc
lret
xlat
jb
and
fnsave
ret
mov
push
inc
add
inc
repz
leave
addr16
sub
in
les
cmp
ljmp
mov
or
cmp
cld
jb
aam
ret
outsb
aaa
repz
mov
int3
stos
jmp
lcall
std
ljmp
lods
mov
imul
stos
push
push
out
and
adc
mov
dec
xchg
sub
or
ja
test
hlt
push
pop
repnz
add
pop
add
mov
dec
das
cmp
int
imul
lret
and
pop
sahf
mov
daa
std
sub
lock
div
or
lcall
cmc
adc
add
adc
fmuls
mov
cltd
leave
inc
into
in
imulb
sahf
jmp
adc
popa
sahf
loop
cmpsl
sbb
daa
xchg
adcb
sbb
lods
xchg
push
hlt
xchg
cltd
or
out
inc
jmp
xlat
ja
lret
sbb
pop
dec
or
push
cmp
mov
outsb
push
leave
sub
cld
test
add
cmp
fistpl
leave
loope
cwtl
cwtl
andb
mov
aas
scas
into
scas
cmp
push
push
arpl
cli
shrb
idivl
mov
or
sub
xlat
jge
les
mov
adc
gs
repz
and
xor
cmp
hlt
mov
ret
sahf
xchg
mov
js
adc
pop
aam
ljmp
outsb
inc
mov
call
lcall
push
jno
inc
loopne
out
cmp
cmpsl
sahf
cwtl
out
movsl
cmpsb
cwtl
lcall
jmp
xlat
es
movsb
mov
pop
dec
pop
push
movd
fnop
lcall
pop
mov
mov
fs
outsb
ds
ss
test
or
or
push
cwtl
ljmp
pop
inc
ljmp
sub
cmpsl
out
nopl
sbb
cmp
hlt
sarb
mov
mov
jge
sub
insl
int3
push
dec
xchg
mov
mov
lahf
xchg
cmp
or
out
std
sbbl
fwait
xchg
repz
add
popf
push
lret
inc
cmp
loop
or
leave
mov
mov
xchg
push
sub
xchg
test
sub
jbe
repz
xor
movsl
sar
xchg
xor
cmp
mov
andb
mov
sub
lds
ret
jmp
movsb
jp
push
mov
mov
fsubrs
sub
dec
and
dec
inc
lahf
mov
andl
and
mov
inc
pop
sbb
cmp
inc
lret
inc
and
je
lcall
and
pop
adc
or
pop
fucomi
gs
push
imul
std
jge
push
inc
in
outsl
dec
aad
test
push
xor
iret
cmp
and
jp
jecxz
inc
mov
inc
dec
sahf
mov
adc
pop
fsubs
sbb
les
lahf
xchg
lods
test
mov
mov
add
inc
inc
in
scas
mov
cli
mov
mov
sub
dec
shrw
aas
jecxz
xchg
inc
jge
pop
mov
je
shrl
rcl
mov
bswap
xor
mov
add
push
lods
out
jecxz
std
scas
mov
nop
leave
jno
and
in
mov
mov
repnz
mov
leave
mov
mov
mov
inc
inc
mov
push
jp
cltd
rclb
mov
inc
lods
xchg
dec
or
std
jmp
lret
jo
inc
mov
bound
dec
loop
pushf
dec
out
in
push
dec
or
and
int
ss
hlt
out
sbb
gs
jb
cmpsl
ds
out
push
push
mov
push
pop
push
jle
icebp
xchg
inc
sub
mov
aam
xchg
loop
sbb
xchg
xchg
lret
sbb
mov
xlat
xlat
sbb
and
push
daa
out
cli
mov
adc
jne
mov
add
lret
jno
aas
jecxz
mov
fcoms
pop
dec
xor
jge
bound
pop
stc
push
nop
popa
xchg
mov
cld
push
sti
mov
divl
sar
mov
std
dec
push
mov
mov
popa
mov
add
push
popa
xor
or
dec
push
aam
add
xchg
inc
mov
jns
mov
jg
mov
push
jp
mov
dec
sti
dec
data16
mov
inc
xchg
lock
mov
pop
lea
mov
out
dec
push
pop
xchg
jno
pop
and
movsb
xchg
jmp
cs
sarb
cmpsb
dec
inc
int
mov
stc
outsl
sub
adc
repz
and
sbb
dec
lahf
inc
and
popa
mov
sbb
push
xchg
jge
iret
xlat
imul
je
xchg
enter
inc
xchg
or
repz
fidivl
mov
xchg
pushf
mov
cmp
pop
daa
add
lcall
in
in
mov
inc
out
daa
leave
loop
or
das
add
push
add
inc
popf
sbb
adc
lods
pop
inc
mov
int3
xor
repz
scas
fildll
jp
mov
sar
xchg
test
or
hlt
adc
and
mov
mov
aaa
stos
and
cld
inc
sbb
inc
add
jle
lcall
out
mov
sub
push
mov
sbb
dec
arpl
dec
cmc
jno
dec
xchg
and
pop
and
mov
leave
insl
jnp
out
sbb
es
fisttps
lods
aas
cmc
adc
and
icebp
adc
lds
mov
cmp
or
adc
jl
inc
and
scas
jae
pop
shlb
aaa
insl
dec
inc
dec
aaa
cmp
sub
ja
pop
imull
mov
test
pop
pop
daa
lea
xor
dec
xchg
movsb
xor
inc
int
fs
sbb
jae
push
xchg
scas
mov
jns
or
jbe
inc
adc
pop
xchg
gs
into
dec
sbb
fdivrs
mov
jmp
loope
movsb
shrb
pop
js
push
cmp
aad
mov
cmp
lock
jp
mov
jbe
dec
fcoml
mov
aaa
or
cli
test
jmp
cmp
mov
jno
movsb
daa
pop
stc
imul
lock
and
icebp
stc
mov
push
shlb
cmpb
mov
pop
or
aad
sbb
pop
stc
inc
leave
in
pop
call
sub
pop
test
pop
fwait
xchg
and
daa
insl
sbb
and
jo
adc
std
pop
call
loopne
and
jne
stc
ja
cmp
outsl
imul
cmc
dec
jmp
sbb
add
loop
push
jns
loopne
inc
mov
sub
pop
fsubrs
out
add
sub
movsb
out
adc
test
lahf
cltd
mov
mov
mov
test
pop
ljmp
in
in
adc
enter
stc
arpl
push
pop
leave
int3
mov
mov
shll
jge
mov
jle
push
pop
push
filds
int
sti
mov
cld
pop
cmp
int3
rcll
push
imul
sarb
jo
adc
ret
cmp
xor
loope
cmp
lret
add
into
lea
jg
aas
push
mov
in
mov
push
mulb
std
adc
jno
mov
push
fwait
push
addr16
shll
jp
jns
in
xlat
pop
shlb
xlat
xor
jecxz
mov
inc
sub
mov
jnp
adc
and
cmp
jnp
cmpsl
dec
mov
xor
lret
mov
push
in
inc
adc
cmp
dec
jp
xor
iret
sub
aaa
add
pop
test
dec
push
dec
jge
idivl
cmc
hlt
fsts
es
aad
cmp
or
fiadds
shll
pop
cmpsl
xchg
mov
mov
lret
dec
stos
icebp
jp
and
or
ret
mov
push
mov
push
dec
xor
or
hlt
lcall
push
loope
pop
fwait
xchg
sub
sub
mov
push
mov
jl
sub
in
push
push
and
push
jp
and
sti
cmp
cld
daa
sbb
das
cmp
insb
sbb
adc
lret
les
sub
popf
pushf
xchg
mov
mov
ljmp
inc
pop
jnp
ljmp
cmpb
loopne
repz
int
repnz
push
aas
cmc
jg
sti
js
jb
and
mov
lret
add
ss
or
mov
push
fisubs
fdivs
pop
fisubl
jae
push
aad
lods
repz
icebp
and
or
and
outsb
out
insb
add
jecxz
stos
jge
adc
sub
add
xchg
push
sbb
pop
mov
outsl
and
roll
les
hlt
mov
mov
mov
push
and
nop
cld
jbe
filds
sub
xchg
mov
jp
mov
outsl
pop
pop
lret
addr16
hlt
data16
loop
mov
dec
jno
jmp
xlat
data16
leave
push
adc
xchg
or
and
push
das
mov
jo
dec
adc
jg
cmp
adc
push
scas
in
dec
into
mov
sub
mov
neg
jg
xchg
add
xchg
into
fldt
add
addr16
push
xlat
in
xchg
inc
hlt
ja
mov
mov
pop
xor
imul
add
jne
xchg
add
in
icebp
or
leave
stos
and
imul
sbb
push
push
or
pop
movsb
fildl
xchg
jmp
dec
xlat
mov
adc
lret
add
xchg
jl
in
and
clc
adc
cli
stos
test
push
adc
push
pop
jmp
cmc
fisubrl
push
mov
loope
daa
and
leave
cwtl
xor
jmp
cmp
daa
xor
inc
sub
gs
mov
sub
loope
into
test
xor
xchg
adc
pop
inc
and
mov
or
jne
jmp
and
jp
lods
mov
incl
pop
mov
int3
lret
hlt
adc
push
dec
adc
loopne
cwtl
ds
stos
movsl
sahf
jge
sbb
ret
dec
scas
or
mov
dec
add
into
and
leave
int
push
test
flds
cmc
jns
outsl
ss
xchg
push
mov
or
ljmp
add
subb
dec
sub
jmp
out
gs
mov
push
fadds
push
adc
ljmp
movsl
fs
gs
leave
fwait
stos
fistps
into
lret
sbb
xchg
cmp
pushf
adc
stos
lahf
lret
jg
mov
mov
fs
rcrl
lcall
and
les
mov
jb
or
jbe
mov
into
xchg
dec
jae
mov
add
insl
fsubr
pop
call
add
gs
add
je
jl
jb
inc
fbstp
fstps
dec
sub
ret
dec
aam
inc
iret
pop
pop
pusha
cwtl
or
icebp
pusha
cmpsl
dec
orl
sbb
mov
in
push
mov
pop
mov
xor
mov
orl
repz
inc
add
into
mov
push
pusha
cmp
fiadds
xchg
or
mov
idivb
xchg
xchg
idivb
mov
pop
mov
or
ja
aas
cmp
mov
and
sub
imul
int
fistl
outsl
dec
into
test
sbb
sbb
pop
dec
mov
sub
push
scas
adc
and
sub
testb
xchg
ret
jbe
loop
push
cmp
in
das
int
out
shlb
or
scas
xchg
fcmovu
ficompl
fists
cmp
addr16
pop
adc
popf
mov
or
xor
jp
cld
mov
and
pop
push
repnz
mov
lahf
pop
pop
push
adc
cwtl
sahf
push
lods
mov
sbb
push
subl
stc
cld
pusha
xor
enter
mov
push
add
push
sub
les
lahf
shlb
jbe
test
repz
mov
add
dec
or
push
add
jp
inc
cmc
inc
test
lea
mov
repnz
jno
test
add
jbe
pop
roll
xlat
ds
pop
dec
pop
sbb
ds
push
mov
movsl
jg
mov
and
popa
arpl
jl
push
loope
clc
push
mov
int
push
pop
and
pop
test
outsl
mov
jbe
movsl
loop
push
cmp
dec
outsl
idiv
sti
rclb
mov
inc
add
fwait
hlt
shlb
jmp
cmp
cs
jno
push
jmp
push
xor
fsts
addr16
idivl
fld
push
and
lahf
dec
adc
push
pop
xchg
fdivrs
adcb
sub
xchg
jns
mov
shl
aas
mov
pop
jo
mov
lods
loop
sbb
flds
es
mov
adc
rcrb
jge
popf
std
or
mov
push
sbbb
out
cmp
adc
xchg
popl
mov
jg
xchg
cmp
imul
test
xor
das
inc
fmuls
repnz
aaa
nop
das
fildll
and
jmp
repnz
and
cmp
in
fisubs
pushf
insl
and
pop
or
adc
arpl
inc
cmp
push
cmp
jns
cmp
mov
jns
jge
gs
je
fdivrl
movl
lods
daa
ja
jae
lods
dec
stos
inc
dec
pop
push
jg
adc
daa
or
pop
in
and
push
pop
and
out
outsb
dec
int3
jecxz
jle
sti
sbb
xorb
sahf
push
jp
pusha
fwait
sti
icebp
or
dec
cmp
fsubl
daa
shlb
shll
ret
xor
xchg
in
jmp
and
in
bound
cmp
into
dec
push
dec
fwait
sub
and
xor
sub
cmp
arpl
pop
sub
dec
stos
rolb
cmp
push
lods
loop
and
push
xchg
jnp
xchg
enter
testb
mov
loope
dec
orl
xchg
push
mov
or
push
dec
xor
inc
mov
pop
push
xor
test
in
fidivs
jnp
inc
fistps
inc
push
fst
push
or
add
rcl
lods
out
and
jecxz
pop
mov
loope
mov
pop
inc
sub
int
in
pushf
mov
out
in
cld
call
and
movsl
imul
fwait
xchg
aas
fistpll
in
cmp
rcrb
aas
call
das
adcb
andb
mov
ret
xchg
adc
dec
sub
popf
and
add
push
jbe
fstpt
test
aaa
imul
mov
dec
fidivl
popf
test
rclb
cmp
pop
mov
shlb
sub
arpl
mov
push
xchg
xchg
sub
lds
jl
inc
cmpsl
or
outsb
push
aaa
fistl
push
xchg
movsb
cmp
push
and
fwait
lock
aam
sub
cmc
xor
jmp
or
cmp
mov
adc
mov
sub
movsb
jns
cld
fsubrl
out
idivl
cmp
push
sbb
movsb
mov
into
xor
std
push
xchg
mov
jbe
pop
fsubs
icebp
cmpl
clc
xchg
xor
xor
lcall
mov
fndisi(8087
dec
mov
leave
xor
test
lds
imul
outsl
sub
xchg
mov
dec
sbb
shlb
add
test
push
mov
mov
jnp
inc
inc
push
adc
dec
cmc
adc
lcall
loopne
inc
pop
movl
mov
testl
mov
jne
hlt
arpl
inc
jne
or
ret
and
enter
push
add
jmp
mov
jb
adc
es
xor
xchg
iret
push
ficoml
lods
stos
xchg
and
adc
adc
dec
lret
pop
pop
fisttpl
mov
imul
mov
push
fcmovnu
and
adc
into
mov
mov
dec
pop
call
dec
mov
arpl
mov
setle
mov
inc
arpl
andb
xor
mov
xchg
or
testl
test
xchg
sbbb
inc
movsb
jl
fisttpl
stos
fnstcw
cmp
jbe
xchg
xchg
mov
add
and
jmp
mulb
xchg
adc
pop
xchg
stc
cmp
mov
pop
clc
sbb
cmp
pop
scas
lea
jb
sar
outsb
push
data16
stc
push
cmpsb
aas
lea
push
mov
lcall
cmpsl
jecxz
or
jl
xchg
into
fildl
and
adc
imul
setl
adc
test
xchg
out
loope
sahf
addr16
push
les
loope
add
xor
jo
movsb
out
es
or
inc
xlat
push
adc
movsb
adc
vmwrite
xchg
jg
sub
lods
mov
dec
imul
fstp
add
pop
mov
ljmp
shr
in
rclb
insb
xor
adc
out
lock
je
fbstp
inc
mov
sbb
mov
sub
xchg
es
std
adc
incb
xchg
adc
out
out
mov
aaa
in
dec
push
adc
dec
cmc
nop
ret
xlat
mov
lret
jp
andl
mov
xorl
int3
gs
shr
sbb
incl
xchg
rcrb
xchg
pop
xchg
inc
pop
mov
cmp
xchg
mov
and
in
jbe
orb
and
push
jno
test
int3
pop
outsb
test
ret
aas
lods
leave
fwait
es
int
call
xor
or
xchg
cmp
jo
shlb
je
mov
and
repz
into
addr16
shlb
jb
call
jecxz
pop
adc
jb
stos
mov
push
inc
das
adc
bound
push
fxch
push
stos
repz
pop
or
xchg
xor
cmp
dec
jb
jmp
xlat
lahf
xor
sbb
orb
or
test
imul
fdivrl
dec
jo
test
cmp
fcmovb
cld
cmp
aam
sub
or
nop
cmp
ret
cld
adc
add
sbb
movsb
sbb
fiadds
or
xchg
push
pop
imul
imul
push
mov
adc
into
mov
pop
push
sub
adc
sbb
push
xor
add
enter
mov
mov
cli
call
fs
hlt
les
gs
in
negb
or
inc
cmp
jl
movl
pop
fwait
js
inc
push
xor
pop
daa
sub
iret
mov
in
or
loope
pop
push
xor
xchg
cmp
popa
movsl
and
jmp
es
pop
add
addr16
jae
mov
jbe
add
jno
hlt
sti
xor
std
inc
sti
sbb
enter
add
pop
stc
sti
test
add
aaa
dec
aas
enter
addr16
jl
or
outsl
outsl
jo
sub
notb
ret
xchg
sbb
fdivrl
pusha
out
jge
dec
add
bound
cmp
shrl
data16
test
jae
add
xor
xchg
mov
in
jg
pop
and
stos
lahf
adc
test
jg
xchg
sbb
out
int
jp
and
push
and
or
loop
es
lds
sub
dec
mov
ss
xor
push
call
rorb
pop
mov
xchg
push
or
pop
adc
rcl
push
popa
dec
inc
inc
neg
mov
int
mov
push
test
data16
scas
mov
adc
lods
mov
addr16
movsb
dec
mov
aam
or
pusha
ror
or
fwait
dec
test
ds
dec
pop
les
push
or
pop
xlat
icebp
sub
jne
adc
xchg
rcrl
mov
mov
or
int
jg
jns
es
xor
mov
sub
test
or
dec
cmp
mov
repz
and
gs
rcl
sbb
stc
les
repnz
add
jno
add
push
lods
js
mov
jle
and
fwait
xchg
add
cs
mov
cmc
clc
clc
insb
bound
mov
add
aas
mov
int3
push
jecxz
arpl
add
pop
add
pop
sbb
arpl
stos
or
insb
clc
into
mov
mov
jmp
mov
cmp
xchg
push
divl
scas
push
add
inc
lods
aas
roll
insl
movsl
imul
mov
int
xchg
leave
out
cmp
arpl
mov
mov
or
mov
clc
and
pop
in
and
sbb
xor
ret
popa
in
cmp
push
lods
mov
sbb
test
cmp
aaa
lods
jge
mov
jb
enter
adc
jecxz
push
and
mov
and
pop
push
or
scas
sti
dec
outsl
push
int
mov
movsl
xor
mov
out
jmp
push
sub
mov
inc
inc
loopne
mov
and
adc
mov
arpl
inc
inc
cmp
or
out
sub
in
fscale
sahf
outsl
and
sti
cld
mov
mov
sub
call
out
insl
les
int
scas
lds
lcall
dec
push
cmp
pop
mov
mov
fdivr
test
inc
add
mov
or
mov
std
mov
pusha
stos
dec
cmc
dec
mov
aas
movsl
jle
dec
xchg
push
mov
xchg
pop
call
xor
mov
inc
fidivrs
pop
or
rclb
test
jmp
lret
mov
aas
sub
push
sbb
push
jmp
outsb
pop
addb
and
mov
sbb
mov
jb
mov
adc
pushf
ss
pop
and
ss
mov
xchg
cs
sbb
and
lods
fdivl
sbb
mov
inc
jae
and
pop
repnz
mov
sbb
lods
in
mulb
xchg
pmaxsw
adc
mov
push
ds
ds
or
fsubrs
out
inc
cltd
in
cmp
divl
dec
leave
inc
jb,pt
sbb
test
and
and
jae
aas
mov
dec
push
scas
inc
loopne
cmp
das
fdivrl
test
icebp
ret
jbe
ds
lds
dec
inc
gs
out
cli
cwtl
push
cmpb
and
push
loopne
aas
add
jo
sarb
sbb
xlat
sbb
inc
jns
popf
nop
fisttpll
leave
movsl
push
imul
cld
jnp
and
lcall
cmp
scas
push
jl
repnz
outsb
mov
inc
mov
sub
lcall
push
pushf
xor
lret
pusha
repz
imul
cltd
enter
add
inc
loopne
imulb
mov
fbld
lahf
frndint
sbb
and
mov
hlt
pop
rorb
bswap
push
test
jnp
loop
movsb
xor
insb
mov
inc
or
pop
das
add
sbb
imulb
das
jp
test
xchg
mov
std
fldl
pop
xchg
adc
cmp
sbb
inc
stos
fimull
arpl
pop
push
lods
cmc
repnz
pop
lret
mov
dec
loopne
cmpb
xchg
adc
scas
mov
inc
add
js
inc
push
outsl
add
pop
repnz
and
shrl
pop
push
mov
aam
shll
xor
push
je
cmpl
insl
outsl
pusha
mov
add
pop
mov
push
xchg
pop
out
or
push
mov
dec
and
add
lcall
pop
mov
jge
imul
ret
ret
mov
dec
cmp
lret
in
lret
test
bound
adc
aas
and
jb
inc
rorb
xchg
sub
vpavgb
popf
and
sbb
test
ss
push
add
scas
jnp
daa
into
sbb
jg
clc
jg
inc
dec
fistl
addb
or
mov
xor
add
lods
mov
sub
fbstp
add
cmp
lret
sahf
lock
push
call
scas
jl
clc
xchg
jg
popf
repnz
pop
cmpsb
test
fdivrs
push
mov
pop
test
ljmp
pop
mov
or
jecxz
adc
stc
add
in
outsl
clc
push
push
arpl
cmpsl
fimull
aad
xchg
into
lods
inc
xlat
arpl
in
jo
xchg
or
or
lods
sahf
xor
int3
ret
fisubl
pop
sub
leave
mov
sbb
cltd
xchg
pop
add
jp
fs
or
into
or
test
xchg
add
jp
cli
sub
cmp
jmp
push
jno
sub
mov
xchg
aam
sbb
sbb
lea
xor
shll
cmp
fidivrs
jb
lea
ss
test
subl
xchg
shll
and
scas
push
jle
sahf
scas
arpl
nop
fidivrs
xchg
ss
dec
and
lods
loop
push
ret
pop
push
jle
cmpsb
sub
or
pop
iret
imulb
jnp
outsl
jbe
xchg
movsl
xor
and
fistps
sbb
and
adc
je
insl
lret
stc
xchg
jl
decb
int3
ret
or
neg
inc
add
bound
movsb
cmp
pusha
int3
mov
mov
mov
pusha
mov
inc
inc
movsb
adc
lret
sbb
cmp
movsl
mov
rclb
dec
shr
pusha
orl
addr16
in
cwtl
or
adcl
jnp
inc
cmpsb
pusha
xchg
sbb
sub
in
sub
sub
outsl
aad
bound
dec
popf
aas
xchg
push
mov
xchg
out
stos
push
cmp
cmc
std
sbb
sbb
clc
cwtl
mov
sub
aam
add
cmpsl
jle
push
ds
lea
inc
adc
xchg
mov
sarl
xchg
movsb
jno
mov
andb
xlat
dec
inc
fcompl
roll
jne
xchg
sti
shll
jmp
lods
imul
sub
jp
mov
and
or
stos
aad
hlt
inc
hlt
add
cli
pusha
daa
inc
fs
xchg
rolb
in
pop
mov
scas
addb
loope
ljmp
mov
bound
das
in
dec
into
ss
mov
adc
das
popf
mov
shrl
sub
mov
xchg
fstl
xor
inc
jb
mov
or
test
nop
in
xor
out
packsswb
cmpsl
cmpb
mov
add
xlat
loope
mov
fdiv
mov
ficoml
rclb
shlb
rcrb
xorb
inc
pop
popa
xor
pop
xor
mov
sub
mov
lock
movsl
ret
aas
jae
inc
add
pop
sbb
pop
xchg
fistpl
icebp
xor
jne
dec
xor
int3
in
inc
mov
imul
repnz
cltd
dec
and
and
xchg
lods
pop
scas
popa
jb
decl
xor
jns
stos
ret
ss
iret
mov
xchg
add
and
xor
mov
repz
inc
insb
pop
das
push
push
mov
pusha
popl
add
jge
inc
in
fistpl
mov
mov
and
xchg
push
xchg
sahf
fs
fs
jae
int
pop
jbe
mov
notl
push
fsubp
int3
popa
and
stos
adc
out
rcll
and
aaa
jo
pop
aad
mov
out
mov
out
jae
pop
xor
sbb
out
sub
mov
dec
std
mov
mov
addr16
fwait
test
flds
subb
out
lea
cmpsb
dec
rcrl
lcall
and
in
push
mov
addb
popf
jle
mov
loopne
push
movsb
bound
push
xor
inc
into
or
inc
and
shlb
adc
adc
dec
sbb
xchg
mov
in
pop
not
fsubrl
ljmp
dec
in
cmc
cmpsl
mov
das
pop
mov
outsl
cmp
or
repz
orl
xchg
inc
dec
xlat
sub
scas
and
mov
mov
sbb
scas
aaa
fsubrs
test
adc
inc
sub
push
fldt
mov
rcrl
push
mov
adc
push
or
xor
sbb
inc
and
sub
lcall
lret
push
loopne
cmpsl
inc
inc
test
int
cwtl
jmp
xchg
add
bswap
inc
push
bound
mov
mov
add
add
cld
pop
dec
dec
clc
loope
sbb
sub
xchg
mov
int
lds
or
push
xor
mov
mov
lea
repz
or
cmp
xchg
enter
aaa
jne
mov
scas
test
adc
cmpsl
sbbl
lret
xchg
mov
cmp
repz
mov
gs
mov
mov
mov
xor
aam
xchg
and
ret
mov
scas
mov
out
scas
scas
shll
xchg
int3
add
mov
lods
dec
pop
inc
xor
jmp
insb
sbb
bound
mov
outsb
jmp
inc
js
mov
jbe
pop
fisubl
std
jae
pop
pop
aas
mov
xor
les
push
nopl
das
sub
pop
pop
clc
out
mov
sahf
pop
sub
adc
je
je
pop
test
lret
mov
cmc
xor
aad
push
cmc
test
push
dec
cld
imul
mov
xchg
push
mov
sub
and
adc
pop
es
push
jge
mov
fisubrs
roll
jle
ja
std
in
sbb
or
je
and
cli
cld
popf
std
pop
insb
xor
in
es
pusha
stc
cmpsb
popf
cmp
jnp
repnz
stc
add
dec
in
push
jnp
or
fwait
data16
xchg
lcall
test
mov
jb
pop
int3
jg
movsb
push
push
adc
ds
cmp
andb
inc
pop
cmp
mov
push
cmp
test
leave
jle
out
and
inc
in
push
and
mov
xor
outsl
xchg
xchg
jae
sub
xor
push
and
shll
mov
mov
adc
sub
mov
mov
jno
es
mov
shlb
push
lea
jecxz
cmc
test
test
xor
ds
push
push
xchg
sbb
jl
jp
xor
ljmp
push
jne
xor
lds
lret
dec
mov
pop
sub
jmp
push
adc
dec
add
pop
cld
mov
lods
jns
pop
mov
cmp
cwtl
imul
shl
push
cmpsl
cmp
sbb
dec
cmpb
xor
inc
jne
mov
pop
ret
jnp
mov
add
xor
mov
pop
dec
pushf
add
push
aas
mov
sub
mov
sub
pop
dec
jp
sub
mov
lret
mov
sbb
or
inc
loopne
lods
xor
and
out
test
lock
ret
js
in
pop
addr16
testb
fucomi
jmp
repz
test
pop
dec
mov
cs
stos
ficoms
cmp
mov
mov
xorl
and
xor
andl
push
ret
lcall
aad
pop
xchg
mov
stc
mov
push
scas
mov
cwtl
adc
xor
test
mov
pslld
cmc
sub
in
jbe
in
fsubr
push
loop
sti
sub
and
lcall
adc
pushf
mov
in
test
decl
cli
mov
mov
loopne
adc
or
inc
lods
sarb
js
out
rcrb
dec
push
dec
movsl
std
fwait
sbb
xor
lret
jmp
inc
scas
and
cmp
inc
dec
adc
inc
pop
pop
cmp
dec
enter
sbb
inc
int
fstpt
rep
dec
test
push
and
lret
jbe
test
fldcw
inc
cmp
rorl
push
je
adc
lret
cmp
lret
mov
imul
mov
sub
xchg
mov
inc
mov
or
rcrb
in
push
and
repnz
and
out
push
dec
sbb
pop
fisttps
cmp
out
jnp
dec
xor
hlt
mov
mov
out
mov
test
movsl
stc
dec
jno
stc
rcrb
add
pop
movsb
pop
and
cwtl
mov
inc
lahf
sub
sbb
and
hlt
test
movsb
mov
inc
notl
fnstcw
fldl
inc
cmp
fcos
cmp
cmp
cmp
sub
push
inc
push
or
lret
mov
out
data16
out
ret
xchg
fsubs
mov
in
out
repz
cmc
inc
test
outsl
sbb
divl
push
jl
jle
pop
pop
adc
lret
nop
dec
sub
es
aad
push
xor
sub
cld
rolb
dec
mov
mov
sub
test
cld
inc
sub
jbe
adc
xchg
jg
xor
adc
push
xchg
push
std
pop
and
inc
pop
arpl
mov
insb
jno
add
cltd
sbb
icebp
and
ds
stos
mov
hlt
or
aam
push
cli
and
fdiv
jp
mov
dec
and
out
mov
out
pop
jp
iret
lock
movsb
dec
mov
jae
aam
movl
iret
arpl
sti
mov
pop
adc
int3
int
xor
adc
fisubrs
dec
push
mov
ds
lcall
cltd
jno
dec
dec
mov
cvtpi2ps
xchg
push
sub
rol
or
aam
fcomip
jg
pop
or
inc
xchg
pop
xor
xorb
pop
ss
cmp
mov
adc
cmp
cmp
mov
push
cmc
insb
push
push
inc
loop
es
sbb
in
mov
mov
insl
jae
mov
adc
test
xor
aad
mov
cld
test
sbb
mov
sub
push
mov
sti
dec
aad
fwait
jno
stos
call
mov
cmp
xor
xchg
movsb
jmp
mul
aam
sub
sub
or
lds
dec
prefetcht2
push
insl
pop
hlt
outsb
xchg
adc
and
sbb
nop
fisttps
icebp
push
lcall
sub
pop
rorb
aas
cmpsb
jae
movsb
xor
jbe
clc
test
sbbl
xorl
lret
movsl
xor
mov
push
dec
lods
leave
test
xchg
out
neg
cmp
rorl
repnz
addr16
cli
mov
fidivrl
ficoml
test
inc
aaa
push
adc
shrb
jns
mov
jb
push
test
dec
mov
jecxz
adc
mov
mov
xor
fisttpl
cmp
les
outsl
lea
pusha
repnz
inc
ljmp
add
cwtl
gs
xchg
xchg
int3
mov
xchg
or
cmp
cwtl
fbld
aaa
cmp
in
loop
cmpsl
scas
jp
jno
inc
sbb
dec
dec
ret
outsl
sahf
cmpsl
int
addr16
in
out
sbb
mov
and
and
into
gs
mov
arpl
loope
pop
inc
or
xchg
bound
cltd
and
in
mov
or
push
hlt
and
and
js
ret
popa
cmpsl
ret
sub
jl
fcompl
mov
sbb
leave
or
jecxz
shrb
push
or
dec
add
out
aad
mov
js
mov
shlb
xchg
lds
jp
add
ret
fimuls
inc
mov
or
jb
cmpsb
cs
cmc
mov
fsubp
mov
stc
test
inc
ja
pop
push
lock
cmp
dec
jle
pmuludq
push
mov
jns
decb
in
icebp
or
outsl
pop
sti
fst
in
mov
fidivrl
orl
adc
mov
xor
pop
mov
call
arpl
pop
lods
lcall
std
pop
mov
or
pusha
enter
ret
je
jmp
and
inc
adc
rclb
mov
pop
adc
shl
jl
lock
je
lret
xor
fcomps
sbb
cmp
cmp
in
imul
fistps
jne
stos
mov
push
mov
pushf
mov
cmpsl
cmp
inc
fnstenv
ret
stc
scas
repnz
jl
sbb
mov
xor
test
loop
dec
sbb
jbe
push
lcall
int3
rorb
mov
into
ret
lock
xchg
jne
xchg
cli
mov
je
scas
ljmp
fiaddl
cld
mov
popa
mov
mov
push
jae
mov
addr16
arpl
hlt
idivb
cli
shrb
push
inc
call
add
loope
in
call
lock
in
cs
jg
clc
test
insb
ljmp
xor
and
jb
or
ret
push
sbbl
and
add
in
cmpb
pushf
inc
gs
sti
shll
into
test
adc
and
sbb
mov
push
add
mov
rcrb
insl
or
stc
jge
test
xor
xchg
loopne
inc
add
or
or
out
cld
inc
xchg
imul
mov
icebp
pushf
mov
fdivrl
pop
xor
and
leave
ficompl
adc
push
mov
jb
sarl
out
xchg
push
mov
test
fsubrl
data16
xor
jnp
fidivl
mov
dec
mov
cmpsb
xchg
and
jno
mov
pop
lods
jg
test
push
xchg
rcrl
jnp
xchg
cmp
pop
in
out
cli
xchg
pop
in
jl
mov
in
js
mov
sbb
push
jmp
mov
mov
or
xchg
in
inc
notl
aas
in
pop
adc
adc
movsl
cmp
hlt
orb
mov
loop
insl
push
lds
jnp
int3
and
jbe
dec
cmp
and
push
rorl
lcall
in
fsub
rorb
dec
xchg
lcall
cli
test
bound
ret
into
push
daa
sbb
movsb
jp
and
mov
in
into
jmp
jecxz
int
and
xchg
adc
xor
mov
xlat
outsl
cmp
jne
fistps
aam
test
pusha
or
and
pushf
das
je
mov
inc
xchg
cmc
ret
mov
insl
mov
stos
aad
enter
popa
stos
add
push
cmp
adc
inc
lcall
push
and
mov
in
sarb
inc
out
lret
es
in
fisttpll
cmp
push
in
pop
mov
cmp
out
mov
outsb
sbb
push
test
loope
repnz
hlt
stc
insl
cmp
mov
cmp
xchg
pop
cltd
cli
shrl
fldenv
add
adc
rcll
push
lock
stos
add
imul
enter
addb
outsb
sahf
or
and
jb
inc
fstpl
dec
cwtl
lcall
add
xchg
popl
mov
shlb
shr
add
mov
pusha
nop
outsb
jge
xor
xor
mov
addb
pop
fistps
popf
mov
daa
push
jecxz
pop
sar
cmp
insb
js
and
push
pop
or
mov
add
loopne
daa
negl
add
lcall
pop
mov
fmuls
les
mov
daa
js
or
or
dec
scas
cmc
ret
xchg
sbb
mov
sbb
repz
pop
fwait
inc
cli
stos
adc
mov
test
fldcw
outsb
gs
dec
popf
mov
pop
xor
sub
push
stos
fidivrs
jne
push
pop
leave
insb
dec
xchg
xchg
lahf
pop
icebp
sbb
sahf
and
xchg
and
mov
loope
ds
fstpt
int3
pop
in
xlat
sbb
mov
call
leave
movsl
test
outsb
aad
adcb
cld
sqrtps
fistl
hlt
dec
cmp
clc
std
xor
mov
lcall
int
lret
adc
cld
push
mov
mov
test
pop
jecxz
jns
jae
push
daa
test
ds
cmpsl
cli
loope
icebp
mov
and
arpl
repz
in
jb
outsb
popf
mov
add
lds
xchg
adc
inc
xor
mov
push
std
cmp
movsb
mov
and
xor
mov
rolb
cmp
cmp
dec
mov
sbb
int3
popf
sbb
adc
cmp
push
add
loopne
pop
xchg
pop
das
inc
aas
mov
popa
push
cmpsb
fistpll
mov
add
sbb
popa
ficoml
cmp
xchg
mov
shll
icebp
push
dec
icebp
inc
xor
imul
outsb
leave
fidivs
lock
out
call
out
mov
sarl
xchg
mov
jmp
mov
or
push
iret
xchg
mov
and
loop
repnz
cmpsl
push
fimuls
xlat
dec
sub
aaa
or
rcr
mov
stos
icebp
cmp
pushf
fsub
in
cmp
mov
dec
jne
ret
pusha
push
lds
nop
dec
or
insl
das
mov
jnp
jo
iret
add
sbb
in
and
inc
push
push
fwait
add
jecxz
xchg
fwait
mov
rcrl
sub
sti
sbb
enter
jle
loop
xchg
jns
adc
test
and
movsb
sarb
imul
cpuid
push
xchg
xor
push
shl
adc
mov
adc
cmc
mov
ss
stc
inc
in
jnp
cmc
adc
cld
sahf
in
inc
cmc
test
lods
out
mov
pop
mov
outsl
out
adc
in
rcrl
xor
inc
fisttps
xchg
test
adc
loopne
pop
and
test
fadd
out
jb
ljmp
dec
sbb
mov
push
pop
fwait
xorl
cs
movsl
dec
repz
mov
push
aas
and
or
xor
test
pop
mov
imul
leave
push
cmpsl
test
xchg
and
jg
push
movsb
push
mov
pop
lret
movsb
mov
loope
mov
fwait
out
or
fdivrs
add
out
enter
clc
mov
bound
jb
and
mov
inc
jnp
in
pushf
mov
adc
pop
mov
jecxz
test
mov
add
mov
insl
mov
out
xor
in
xchg
fwait
imul
mov
ret
adc
ret
add
pop
shl
push
pop
fidivrs
fld
jnp
mov
xchg
faddl
add
mov
adc
push
shrb
or
mov
loope
and
aaa
sbb
repz
mov
jbe
cltd
sbb
dec
push
mov
mov
or
mov
mov
pop
or
dec
xor
cmp
dec
xchg
in
addr16
or
cmp
cmp
out
cmpsl
lds
fstpt
icebp
imulb
xchg
dec
and
jmp
pop
fscale
std
pop
bound
mov
cld
inc
roll
adc
dec
out
rorb
or
stos
sub
lods
xor
jbe
movl
xchg
adc
je
xchg
les
scas
mov
or
lea
cmp
push
pop
push
fisubs
stc
cs
pop
sahf
pushf
add
lcall
test
dec
and
imul
pop
stc
aad
adc
fidivrs
jnp
mov
inc
mov
rcrb
mov
std
ja
xchg
jno
fistl
and
mov
negl
sbb
adc
xchg
sub
adc
cmp
lcall
insl
mov
movsb
shrl
mov
imul
jmp
mov
movsl
and
sub
push
pop
je
dec
pop
clc
push
pushf
mov
fisubrl
into
xlat
sbb
xor
mov
sub
in
inc
je
xor
mov
popa
lods
xchg
xlat
sub
cmp
mov
mov
mov
stc
mov
or
or
cmc
arpl
hlt
iret
xchg
aaa
pushf
mov
fimuls
push
fwait
aas
cmp
mov
dec
aas
test
addr16
ds
jno
pop
leave
jp
xor
lahf
and
mov
cmc
subb
cmp
sub
gs
mov
mov
fwait
addr16
cmp
pop
mov
mov
lds
fnstsw
jge
inc
and
pusha
adc
mov
sti
push
mov
push
out
in
pop
icebp
ja
pop
daa
adc
push
mov
aaa
pop
xchg
das
scas
xchg
jge
dec
xchg
lods
repnz
push
js
jns
mov
sbb
pop
adc
loope
sub
xor
insl
sbb
ret
adc
aaa
aam
out
cmc
xor
cli
cwtl
lea
cmp
add
mov
push
aad
aas
or
rcll
in
imul
mov
roll
inc
stos
inc
and
addl
pop
mov
lret
int
imul
or
sbb
mov
jp
lret
repz
cs
dec
fwait
out
in
sbb
jo
mov
dec
add
jg
nop
fsubl
mov
out
mov
push
lods
and
add
push
les
mov
movsl
lahf
cmc
jle
sub
addr16
inc
push
cli
pop
cmpsb
inc
call
mov
mov
mov
fsubr
push
dec
cli
mov
fcom
loop
filds
lss
pop
add
sub
pop
push
out
xchg
in
out
ljmp
and
dec
push
dec
lahf
scas
inc
mov
inc
mov
jnp
outsl
aam
iret
int
aad
dec
out
out
or
in
das
adc
mov
sti
bnd
and
and
stc
jae
xor
jp
rcrb
dec
rol
outsl
leave
xor
sbb
jnp
gs
ss
rorb
xchg
xchg
in
orb
subb
pop
xor
imul
in
call
ret
and
add
add
sbb
push
jns
sub
cmpsl
lock
shrb
fwait
js
loope
addl
lahf
xor
xor
dec
add
cmp
and
push
add
push
dec
pop
mov
addr16
lcall
jmp
push
cltd
mov
fsubr
rcrb
ds
shlb
mov
cmp
test
inc
mov
lods
leave
fdivrp
dec
add
push
add
push
loopne
jp
pop
add
testl
mov
adc
xchg
lahf
ret
int
mov
mov
ja
jmp
or
out
in
call
mov
loopne
push
jmp
pushf
jmp
cmpsb
or
adc
stos
cmpsb
inc
hlt
inc
push
adc
ds
loop
mov
hlt
cmp
aad
add
adc
sbb
cmpsl
xor
push
sub
stc
inc
std
or
aaa
in
lea
xchg
addl
push
stos
push
mov
mov
and
rolb
xor
adcb
or
out
inc
xchg
or
fs
iret
loop
adc
cmpsb
out
adc
sarl
div
mov
ret
dec
gs
mov
mov
in
xor
fdivp
jbe
xchg
fwait
inc
add
xchg
ja
int
shrb
cld
sbbb
jbe
cltd
enter
ficomps
lock
loope
xchg
xchg
ja
dec
dec
mov
es
fisttpl
jnp
push
pop
faddl
out
movsb
arpl
outsb
lods
jb
outsl
outsb
mov
gs
or
rcr
sti
and
pop
adc
out
mov
or
je
test
jo
inc
lea
or
js
loope
push
and
icebp
jge
loopne
add
mov
push
cmp
xchg
inc
sti
jmp
add
add
cmp
stos
jl
cmpsl
lods
js
arpl
mov
movsl
cs
loope
xor
testl
leave
hlt
mov
push
fdivl
imul
inc
dec
or
pop
leave
jle
pop
movl
out
sub
aad
fnstenv
adc
leave
mov
pop
fisubrs
in
add
shl
and
shrl
jo
xor
xor
shr
jmp
nop
leave
stc
ds
and
jmp
push
dec
mov
movsb
and
loopne
fcmovnb
jecxz
jmp
imul
jge
cmp
mov
mov
sub
ficoms
ficoms
cltd
and
std
push
mov
xchg
pop
fs
mull
jmp
out
fdivp
lret
inc
push
mov
mov
dec
into
clc
jae
inc
pushf
fisubl
in
ljmp
repnz
movsb
clc
add
loop
push
movsb
push
xor
insl
mov
out
mov
cs
xchg
xorl
nop
jns
fucom
fildll
ret
xor
cli
pop
and
sbb
push
adc
pop
adc
jb
icebp
and
and
and
pop
fsubr
jp
fnstenv
inc
mov
les
pop
out
push
cmp
push
idivb
out
in
pop
fs
ja
aas
mov
std
xor
outsl
lods
sarl
rcrl
dec
add
xor
test
add
shll
fistpll
push
sarb
sbb
cmp
jbe
lds
jne
insl
cld
into
lods
and
pop
xchg
push
scas
test
jae
shlb
push
pop
mov
sbb
adc
pop
cmpsb
xor
dec
and
xchg
jno
xor
mov
xchg
dec
push
push
in
ljmp
xlat
cmp
mov
enter
fisubl
push
push
cs
push
fidivs
pop
ret
in
in
movsb
push
dec
mov
pop
add
mov
out
pop
lahf
cmpsl
call
and
jns
lock
int3
fcmove
test
adc
roll
popf
repz
jl
push
pop
dec
push
sahf
xchg
fistl
sti
dec
push
sub
fucomp
push
adc
gs
mov
test
dec
lock
sahf
cmpl
aam
and
dec
hlt
out
loop
fdivrs
js
ret
out
bnd
test
shll
sbb
xchg
popa
stos
mov
add
sti
and
push
test
cmp
push
into
jle
bound
movsb
xchg
cmpl
cmpsl
push
leave
fsubs
out
sti
int3
jecxz
stos
mov
mov
push
pop
pop
not
xor
cmp
leave
mov
pop
cmc
add
rol
jecxz
adc
lret
sti
sub
cmp
xchg
call
cltd
push
dec
adc
mov
dec
popf
sbb
scas
lds
adc
dec
jg
cmpsl
mov
insb
jne
bound
cli
cld
jno
rcrb
in
mov
push
xor
fmulp
aaa
dec
cmp
movsl
inc
or
std
pop
imul
dec
lea
shrl
sub
cltd
out
scas
mov
inc
or
sarl
jecxz
mov
jnp
sbb
add
jb
pop
std
fildll
add
rcrl
sti
xchg
enter
sbb
ljmp
inc
pusha
lods
mov
sbb
stos
jmp
and
cmpl
andb
roll
xor
mov
test
jae
xchg
test
sub
mov
cmp
mov
xor
test
insl
repnz
enter
and
mov
scas
out
jae
mov
lahf
hlt
mov
adc
xor
xchg
xlat
and
ret
std
push
hlt
jne
test
adc
pop
push
cmp
faddl
stos
sub
pop
fstps
mov
test
fidivl
lret
xor
into
pop
jecxz
clc
add
pop
clc
sbb
lock
xor
dec
sub
arpl
lcall
jl
sub
fcmovnbe
or
stos
xor
lret
push
hlt
daa
mov
fistpl
cmp
in
fcmovnu
xor
lods
sub
int3
sbb
and
fbld
push
scas
cmc
mov
ret
mov
cmp
loope
xor
cltd
xchg
inc
pop
std
and
mov
cmp
test
sbb
or
sub
stos
arpl
pop
scas
arpl
pop
fsubp
cmpsb
push
adc
push
daa
mov
test
popa
inc
inc
pop
fwait
std
add
outsl
inc
iret
imul
scas
fcmove
jae
push
adc
dec
aad
fistl
xchg
pop
ds
or
sbb
lods
scas
out
les
adc
push
inc
cli
aaa
test
popa
push
pusha
pop
pop
xchg
out
xchg
in
jge
aad
les
dec
adc
dec
and
fimuls
fdiv
jne
out
movsw
sarb
mov
or
pop
int
hlt
mov
je
mov
xor
loope
push
out
add
push
lds
jns
sub
xor
push
add
dec
mov
shr
stos
bnd
movsb
dec
addr16
sbb
sbb
mov
repz
pop
xchg
adc
and
leave
dec
xlat
push
push
sbb
xor
mov
pop
fisubrs
in
jae
test
cmp
imul
jb
jge
inc
cld
xchg
aad
dec
xchg
cwtl
imul
and
mov
test
fs
stos
push
test
imul
jp
push
mov
or
nop
arpl
mov
sbb
call
shl
out
ja
mov
jmp
jbe
mov
and
xor
jl
stc
cld
out
stos
cltd
lahf
test
and
pushf
mov
dec
cmp
ret
mov
mov
ljmp
jp
test
mov
adc
test
and
in
data16
mov
inc
or
inc
xchg
add
shl
ret
arpl
loope
divl
and
loop
or
test
mov
pushf
mov
lcall
das
sub
xor
mov
fisubl
sub
mov
les
inc
test
in
addl
loopne
mov
and
xchg
and
push
adc
pusha
stc
and
xor
or
mov
xor
push
aam
je
or
movsl
adc
ja
movsb
dec
ja
mov
hlt
popf
lea
jl
sahf
mov
stc
lahf
xchg
stc
aaa
scas
fnstcw
rcll
jae
mov
ljmp
das
mul
cmpsb
and
inc
cwtl
repnz
imul
push
pop
cmp
es
push
loope
shr
es
fbstp
jae
jne
loope
out
xchg
mov
imul
out
insl
scas
orl
adc
sbb
repnz
xchg
sub
in
push
popf
sbb
insl
iret
xorl
mov
inc
call
idivl
sub
sub
jb
out
mov
dec
aaa
jl
pop
call
push
leave
icebp
jle
push
ljmp
jl
lods
lahf
mov
and
add
mov
rcl
inc
adc
mov
xor
sahf
or
insl
jle
mov
sarl
lds
in
fisubrl
push
arpl
mov
jo
and
pushf
insl
xor
pop
orl
mov
das
pop
cltd
imul
scas
lret
cmp
pusha
push
xchg
mov
inc
mov
enter
mov
cmpb
cmp
arpl
cmpsb
add
es
cwtl
add
xor
cmp
test
stos
leave
add
cltd
or
push
mov
push
pop
push
push
mov
out
nop
jle
test
mov
jmp
pop
cwtl
pop
in
xchg
repnz
mov
mov
mov
cmp
and
and
cmpsl
xor
inc
sub
dec
icebp
ficompl
xchg
pop
out
sub
mov
mov
cmpsl
jnp
jnp
dec
push
fidivs
lds
add
rcrl
push
daa
andl
lret
testl
inc
mov
cld
and
lods
cmpsl
test
xor
sub
dec
lods
cwtl
cli
pusha
test
xor
push
cwtl
adc
rorl
shl
sbb
rcl
insb
movb
cli
pop
and
in
aas
es
jbe
pop
push
sbb
sbb
enter
mov
cmpsl
into
jg
mov
xor
cmpsl
out
cs
pop
pop
cmpsl
xchg
scas
pusha
sbb
aad
xchg
pop
or
lret
xchg
sbb
sahf
lea
mov
bound
test
or
sub
or
jae
iret
xor
mov
xchg
das
xchg
xchg
in
jae
mov
in
push
lods
lock
test
cmp
xchg
add
std
pop
mov
push
and
cli
push
fs
mov
inc
aad
adc
pop
pushf
dec
or
dec
push
cli
test
cltd
sbb
lea
cmc
fmull
add
xor
out
mov
push
mov
dec
inc
int
jmp
adc
jae
aaa
lods
repnz
push
inc
int
pop
in
push
push
js
push
lock
mov
adc
push
stos
or
push
aad
or
or
pop
xor
in
push
xlat
imul
aam
insb
jle
inc
xchg
push
sbb
lcall
mov
repnz
into
xor
aaa
xorl
stc
cli
dec
pop
fs
out
lods
cwtl
sbbb
jmp
fwait
mov
push
inc
xchg
or
jl
adc
sti
jecxz
lret
and
jo
out
shlb
cmp
xorb
xchg
shll
xchg
ljmp
ja
jno
add
push
clc
je
lods
out
dec
ljmp
mov
aam
in
add
sub
movsb
mov
mov
fcomps
in
lods
inc
pop
xor
adc
test
cmp
jne
mov
jb
and
push
std
adc
and
mov
sub
ret
outsl
jl
mov
das
adc
push
jl
pop
mov
adc
pop
sbb
inc
fistps
add
xor
adc
repz
and
in
cmc
jo
leave
add
pop
jne
mov
or
xchg
sub
mov
jle
dec
std
jge
pop
cltd
pop
dec
lock
dec
xorl
sbbb
adc
jo
adc
push
ret
push
cwtl
rcrl
sbb
xchg
adc
shlb
test
ljmp
sbb
mov
push
mov
cmp
xor
sbb
ss
jb
ds
jns
sub
loop
rcrb
or
inc
sub
mov
push
xor
sbb
push
ljmp
mov
sahf
out
jno
pop
sbb
push
add
les
pop
jno
rcrl
mov
inc
fidivs
clc
add
loopne
pop
xchg
fistl
out
daa
das
imul
mov
xorl
jecxz
fidivrl
or
dec
push
imul
mov
subb
sti
arpl
aam
scas
xchg
fucom
mov
push
dec
popa
pop
subl
pop
stc
fisttpl
xchg
jo
pop
aas
adc
mov
mov
jns
les
lcall
xchg
scas
lret
xchg
nop
lods
addr16
mov
inc
std
fnsave
pusha
cmp
cwtl
and
dec
sbb
shrb
push
mov
adc
jg
rcrb
xchg
test
mov
and
sbb
cld
inc
fmul
xor
nop
lahf
data16
vhsubps
popf
mov
add
dec
mov
loopne
cli
push
sbb
dec
cmpsl
pusha
xor
add
adc
popl
popa
cmp
test
pop
jns
in
mov
or
lret
and
gs
add
lods
fistps
cmp
clc
jecxz
je
je
cmp
cmp
cmp
pop
sbb
xlat
imul
sub
loopne
pop
add
adc
or
scas
jg
xlat
add
mov
mov
insl
lcall
mov
jl
add
in
or
mov
push
push
movsb
sub
in
outsb
frstor
lahf
pop
cmc
pop
push
mov
fs
pop
inc
call
mov
add
sti
and
ret
roll
jl
xor
addr16
xor
pop
mov
mov
fiaddl
cmp
lods
or
inc
mov
cltd
pop
es
lret
mov
pop
sub
in
sub
into
and
jb
push
das
test
mov
cld
cld
ja
insb
sub
or
aas
pop
add
les
cmp
dec
rorl
adc
subb
mov
loop
cmp
and
cwtl
out
jle
sbb
jmp
gs
test
jo
out
popa
ret
mov
sarl
xor
dec
add
mov
xchg
xchg
cs
aas
inc
adc
loopne
xor
andb
mov
fstpl
mov
mov
aaa
dec
or
adc
cld
insl
fidivl
test
xlat
jb
jae
clc
adc
push
repnz
aas
bound
fidivrs
sar
cld
lcall
sbb
daa
cltd
sti
pop
stos
repnz
popf
jae
daa
rcrb
or
fisttps
jb
leave
mov
add
inc
jns
aas
inc
or
mov
pop
into
cmp
dec
cli
popf
xchg
imul
jl
push
ret
and
mov
arpl
jecxz
into
mov
movsb
into
frstor
and
jecxz
bound
cmp
ss
lahf
jmp
clc
mov
pop
xchg
xlat
andb
leave
insb
push
sub
and
mov
leave
xchg
stos
std
lahf
sbb
outsb
aam
aaa
into
std
dec
fsubr
xchg
push
data16
lds
xchg
mov
mov
ret
out
js
test
aas
dec
sti
fisubrs
arpl
push
xchg
inc
mov
sub
repnz
jmp
xchg
push
adc
in
outsl
ja
add
jno
bound
sbb
pop
mov
dec
and
mov
xor
xor
or
scas
xchg
mov
cltd
cmp
pop
addr16
inc
xchg
push
mov
jnp
push
push
imul
popa
sub
mov
aaa
enter
fimuls
xor
fs
les
mov
sub
push
inc
xchg
push
jle
js
add
imull
xor
aam
pusha
push
imul
fdivrs
sub
add
xchg
clc
pop
insl
add
jle
sub
push
iret
push
lcall
push
xor
in
std
pop
lea
and
push
cwtl
jno
pop
sub
jae
nop
jae
leave
icebp
dec
jnp
pop
ss
aam
ja
call
in
fisttpll
sti
sub
xchg
popf
aaa
test
mov
push
addl
xor
loopne
xchg
jmp
push
pusha
pop
dec
jle
mov
jp
out
inc
xor
xchg
pop
jge
in
mov
test
fcompl
ja
xchg
popf
aaa
filds
inc
lock
jle
push
sbb
or
enter
mov
xchg
jno
sub
mov
insl
xchg
lock
xchg
push
cmp
dec
jecxz
neg
lea
out
or
iret
dec
aam
in
fcmovnbe
je
hlt
sbb
fcmovnb
pop
sti
jns
dec
sbb
mov
cmp
or
lcall
xor
aam
or
or
and
out
les
mov
scas
pop
test
jle
mov
cmp
pop
adc
sub
stc
mov
ucomiss
rclb
xchg
nop
push
or
lock
scas
int
es
jmp
mov
in
add
ss
pop
lret
push
pusha
ja
and
xchg
xor
jge
pusha
repnz
std
and
scas
xchg
popf
mov
mov
and
or
out
adc
in
and
pop
jnp
aaa
fisttpl
inc
loopne
movsb
adc
mov
dec
rcll
sub
xor
loope
cmp
loopne
xchg
jb
cmp
stos
fimull
inc
mov
adc
xor
dec
xor
jmp
and
lea
pop
mov
mov
mov
jbe
xor
inc
dec
lahf
jo
adc
mov
sbb
mov
push
cmp
in
jns
and
jb
jg
xchg
incl
sbb
lret
inc
pop
xorl
ret
pushf
or
xor
push
pushf
imul
cmp
pop
in
addr16
pop
aaa
lea
rcrb
cmpsl
sub
jnp
and
jl
sbb
out
inc
push
mov
mov
dec
cmp
inc
xchg
or
pushf
dec
bound
or
mov
xchg
out
gs
dec
mov
or
xor
clc
mov
stc
bound
arpl
adc
adc
fldt
adc
adc
ds
pop
out
sbb
inc
loopne
or
lea
mov
xor
arpl
out
lods
enter
and
cmp
lods
rol
and
push
fiadds
adc
mov
jb
pop
addr16
jp
arpl
push
js
mov
scas
push
shlb
mov
repz
outsl
mov
add
or
int
jae
cmp
mov
xchg
test
inc
fsts
jmp
mov
cld
out
xchg
sti
jae
clc
sbb
jl
lods
daa
pop
sbb
in
repnz
shll
out
push
jge,pt
mov
outsl
xchg
mov
xlat
sti
sub
movsb
and
clc
jne
into
inc
addr16
mov
rcrb
push
sub
cmp
aad
inc
movsb
mov
sbb
loope
inc
add
icebp
orl
outsl
out
xchg
pop
cwtl
mov
fs
sbb
dec
incb
in
stos
rcr
mov
mov
jae
mov
dec
lea
sahf
add
lds
cld
inc
sub
push
push
fwait
clc
int3
clc
xchg
push
xor
adc
scas
movsb
out
adcl
pop
jecxz
aad
cwtl
test
fsts
imul
lret
cli
jcxz
xchg
sahf
jne
das
xchg
sub
insb
sub
mov
mov
sub
push
mov
sbb
sub
movsb
js
dec
mov
aas
flds
add
push
add
jmp
inc
push
mov
xchg
lcall
mov
pusha
mov
cmp
pop
xchg
mov
cmp
adc
mov
lea
xchg
adc
lds
cmp
cmp
das
inc
nop
out
sbb
xor
aam
lea
jle
inc
mov
inc
push
arpl
sti
stos
add
andb
dec
daa
stos
rcr
ret
sbb
jns
lods
movsb
outsb
imul
pusha
lcall
sbb
in
icebp
dec
test
push
ljmp
enter
xchg
xchg
daa
aad
sti
jmp
ret
and
lret
mov
pop
repnz
movsb
add
xchg
xor
test
inc
xchg
cmpsb
push
enter
jb
test
mov
lret
andl
pushw
arpl
outsl
cmp
ljmp
jle
sbb
jle
mov
aam
adc
sbb
fldl
xor
jecxz
or
xor
stos
movsb
push
push
ja
sbb
pop
ja
cmp
pop
inc
adc
cmp
cmc
int3
ret
in
subb
lret
mov
sub
sarb
sbbb
test
xor
hlt
pop
mov
rep
jae
jecxz
push
loope
icebp
adc
aam
push
inc
pop
lahf
sti
and
js
or
shlb
fnstenv
sbb
movsl
inc
adc
sub
sub
insb
jb
xchg
and
mov
test
mov
mov
adc
adc
dec
jae
xchg
xchg
dec
add
not
inc
xor
xor
adc
cli
popf
mov
or
sbb
inc
in
mov
push
push
push
push
inc
imul
jae
sbb
cmp
sbb
jle
mov
or
sub
mov
adc
sbb
ss
imul
inc
add
je
jecxz
aam
sub
vucomisd
cmp
popa
je
mov
sahf
test
enter
sahf
dec
xchg
and
xchg
bound
sbb
jp
cmp
cmp
xchg
add
pop
pop
add
push
push
mov
push
lahf
push
out
cmp
popa
mov
hlt
pop
imul
fisubl
rolb
mov
mov
mov
fs
cwtl
sti
repnz
mov
inc
daa
orl
push
inc
pop
adc
outsb
stos
adc
push
aad
in
push
popa
add
sub
enter
or
in
and
cmp
mov
hlt
push
shlb
out
jns
push
ret
stc
data16
dec
dec
ds
xor
and
push
mov
inc
inc
mov
cmp
aad
insb
fisttpll
cwtl
mov
mov
cs
ljmp
scas
aad
adc
subb
int3
push
add
fcompl
stos
push
fs
stos
push
push
call
mov
arpl
mov
loop
scas
das
jb
stos
in
pop
fwait
test
sbb
xchg
in
incl
mov
mov
and
mov
sbb
movsl
pop
aaa
sets
jecxz
mov
sub
dec
iret
in
cmp
or
test
mov
imul
popa
jl
mov
mov
movsl
mov
xchg
mov
push
add
xlat
scas
and
sbb
sbb
add
shlb
ds
stos
fs
add
sbb
fwait
cld
mov
sub
sub
push
pop
std
inc
sub
and
rcll
gs
scas
popf
push
xchg
xchg
rcr
aam
int
ret
scas
in
mov
in
inc
mov
testl
xchg
mov
movsb
bound
addl
fldcw
insl
jle
je
out
scas
pop
out
mov
out
data16
lock
inc
jmp
sarb
out
and
cwtl
mov
inc
add
jb
pop
xchg
xchg
ja
xchg
cmp
cmp
xor
sub
in
loopne
pushf
ss
sbb
add
cmpsb
sbb
pop
or
or
int3
jb
movsb
sub
mov
cwtl
call
jl
cmpsb
ficompl
xor
xor
cmp
add
bound
push
pop
push
or
add
mov
fsubrs
jo
and
pop
mov
dec
jl
arpl
imul
cmpsb
push
mov
pop
sbb
out
fsubs
es
sahf
imul
lods
pop
or
pop
lods
jp
dec
push
inc
pop
lds
in
test
cmp
cmp
iret
inc
pop
xchg
add
sbb
or
movsb
inc
fiadds
daa
sbb
or
or
dec
int
xchg
ds
lods
push
aaa
cmp
xor
mov
mov
jmp
cmpsb
xchg
jecxz
xlat
push
or
push
ret
lcall
shlb
dec
jne
out
inc
xor
mov
pop
push
mov
imul
call
stos
push
dec
stos
pop
lods
or
jmp
sub
xchg
push
dec
loop
pop
pop
es
leave
mov
es
jo
sub
jl
lahf
adc
add
aad
dec
add
xchg
add
dec
cmp
mov
scas
ds
mov
mov
int3
mov
int
subl
and
inc
test
jne
clc
mov
jmp
pop
jge
dec
idiv
popf
jns
inc
cli
les
das
fldt
jbe
mov
dec
mov
lock
push
mov
sarb
out
jp
repz
repnz
insb
dec
fistl
out
dec
xor
sbb
cmp
fwait
hlt
sbb
lock
inc
mov
outsl
xchg
jge
mov
ret
cmp
dec
loop
loopne
xchg
fisubrs
push
inc
mov
cmp
aad
popa
mov
sbb
lods
popl
push
pop
pusha
mov
add
pusha
popa
sbb
or
mov
in
scas
cmpb
hlt
cmp
mov
std
jns
push
adc
fnstcw
sbb
adc
and
jmp
nop
subl
inc
rolb
xor
ret
sub
xchg
jbe
adc
test
fstps
fstpl
stos
push
pop
stos
lcall
xchg
mov
nop
push
inc
and
sub
inc
pop
jo
cmp
mov
das
cmp
hlt
sub
fnstsw
loopne
adc
js
cmc
jb
aam
int3
mov
movsl
sub
cmp
cmp
decb
mov
mov
sub
sub
fldenv
jne
or
jb
or
orl
xlat
pushl
stos
gs
lods
dec
xor
hlt
dec
fcmovnb
sub
xchg
std
popa
add
jb
sbbl
push
outsl
dec
insb
xchg
add
lcall
enter
mov
outsl
nop
cs
mov
cmp
cltd
inc
std
sahf
jns
rorb
push
pop
std
sbb
mov
cmp
xor
mov
nop
push
frstor
mov
cmpsl
movsl
test
fnstenv
adc
push
pop
popl
pop
es
xor
pop
xchg
sbbb
gs
and
mov
inc
pop
popa
call
ret
xchg
les
lret
mul
fcompl
mov
pushf
sahf
loop
cmc
pop
jp
out
orl
add
cmp
in
pop
xchg
mov
out
imul
out
loope
fmulp
mov
push
scas
shlb
cltd
cmp
enter
ljmp
push
rep
clc
lcall
mov
xchg
lcall
sub
lahf
lods
add
cld
push
scas
dec
popa
jne
or
ficoms
mov
ja
popa
loopne
pop
sbb
stos
sbb
and
iret
stos
icebp
jb
fdivrs
mov
clc
push
mov
lret
aas
inc
rolb
cmc
pop
fdivl
js
cmp
add
test
pop
aaa
pop
test
pop
sub
mov
jb
inc
or
fnsaves
mov
jmp
jecxz
mov
mov
dec
xchg
xlat
jge
stos
movsb
jae
cli
push
shrl
cmp
addr16
push
bnd
dec
jmp
pushf
sub
push
leave
mov
jp
shr
into
xchg
addr16
pop
xor
stc
aad
adcb
pop
cmpsl
in
mov
sbb
loopne
repz
aas
test
aas
adc
mulps
mov
mov
mov
andl
lahf
lock
mov
push
clc
mov
inc
cmp
and
cld
out
xchg
leave
pop
and
xchg
ja
mov
leave
ss
aas
ljmp
jg
add
xchg
inc
pop
push
mull
jecxz
mull
xor
mov
adc
icebp
orb
es
sbb
push
pop
das
dec
cmp
mov
aad
fs
pop
cmp
aad
dec
sub
and
inc
pop
aad
scas
ds
mov
hlt
inc
sub
mov
and
sarl
fsubrs
adc
or
adc
cmp
push
cmpsl
mov
xchg
scas
xor
test
push
jmp
mov
sbb
pop
mov
outsl
or
rcrl
inc
dec
and
cld
out
jg
fimull
xor
jecxz
mov
into
mov
cmc
dec
lods
sbb
xchg
lock
xchg
push
aas
cltd
cmc
stc
add
add
cltd
jne
shll
dec
sbb
mov
stos
jge
jmp
cmp
negb
fnstcw
fs
pop
pushf
cld
fistpll
in
les
mov
push
dec
out
ja
mov
sub
fwait
leave
fwait
mov
push
mov
jle
mov
lods
mov
cld
adc
daa
popf
sbb
lock
test
xor
loopne
loope,pn
out
sbb
cmp
xchg
xchg
repz
pop
inc
mov
pop
ljmp
iret
sub
test
gs
xor
mov
push
iret
and
gs
mov
sti
pusha
pop
pop
mov
mov
testb
add
pop
xchg
add
clc
dec
push
add
jecxz
fsub
xlat
jae
and
iret
adc
js
repnz
idivl
pop
lock
int
int3
sbb
je
and
adc
shrl
or
call
dec
nop
mov
xor
lods
cld
push
sub
dec
jge
test
xor
add
fs
addr16
roll
push
cltd
fdivl
in
imul
or
pop
inc
lahf
xor
xor
jno
add
sbb
lcall
xchg
nop
out
push
mov
movsl
sub
loop
sarb
movb
popf
loope
fstp
mov
inc
inc
cltd
mov
outsb
jmp
mov
shlb
insb
xlat
mov
mov
repnz
lods
mov
xchg
cld
pop
add
mov
outsl
mov
movzbl
loop
push
test
inc
in
insb
dec
int
jg
outsl
sbb
cmpsb
dec
mov
mov
ucomiss
insl
loope
movsl
mulb
idivl
sub
aas
ret
mov
cmc
xchg
cmp
add
leave
ss
cmp
ds
inc
or
stc
push
icebp
lds
push
or
mov
mov
inc
inc
in
jl
inc
and
outsl
and
fdivr
je
xor
and
sbb
cmpsb
pop
lea
cmp
ret
out
mov
xor
adc
sbb
jg
pop
pop
cmpsb
rclb
stos
je
shll
je
sub
mov
add
sub
fadds
lret
sub
cmp
adc
adc
std
ret
scas
cltd
stos
clc
xchg
adc
data16
out
xor
inc
das
repz
jne
xchg
out
sub
sbb
jge
in
sbb
addl
pop
and
add
mov
mov
mov
stos
lret
pop
push
inc
xchg
cwtl
dec
push
pop
sbbb
jg
sub
xchg
arpl
xchg
fstl
cmp
xor
ficompl
cmp
add
fs
js
add
xlat
or
xor
in
pop
mov
ror
and
mov
sbb
push
xor
les
sbb
mov
xor
ret
icebp
leave
mov
sub
pop
mov
daa
adc
mov
inc
mov
cli
xor
xor
or
inc
lock
pop
pop
icebp
cmp
sbb
test
and
sbb
push
xchg
xchg
int
sbb
mov
stos
icebp
or
mov
aas
lret
push
add
fidivs
inc
lea
sbb
jge
mov
loop
cmp
pushf
fwait
mov
fwait
xor
cmp
mulb
inc
xchg
test
inc
repnz
cmp
inc
inc
jmp
or
cltd
mov
inc
adc
pop
nop
jne
shrl
aam
push
test
bound
lock
cmp
mov
je
xchg
or
ss
gs
xor
adc
pop
mov
imul
sub
pop
adc
sbb
and
xchg
jnp
cmp
insl
cmpsl
addb
mov
xor
jb
cmc
mov
leave
addl
loop
sahf
notl
cmp
xchg
out
out
adc
mov
jg
in
cli
or
aam
data16
faddl
ja
xor
add
mov
mov
add
xchg
mov
loope
stos
push
insb
outsl
xor
stos
push
icebp
adc
mov
push
popa
repz
jecxz
cs
push
cli
and
pop
and
bound
mov
imul
xchg
bound
dec
or
in
fimull
jbe
mov
jg
arpl
cmp
icebp
sub
outsb
push
in
mov
sub
pop
cmp
test
and
fwait
lea
addr16
fs
imul
mov
je
cld
dec
sbbl
xor
pusha
bound
xchg
movsb
int3
jns
mov
mov
imul
mov
push
out
mov
lret
sub
push
mov
ss
pop
pop
ret
mov
jns
sub
xchg
mov
arpl
adc
xor
scas
lods
out
or
jmp
dec
and
outsb
das
pop
mov
fnstcw
in
adc
loop
addr16
je
pop
outsb
mov
adc
fcmovb
insb
in
dec
pop
mov
rcrb
cmpsb
jl
ret
dec
xchg
push
into
mov
jge
sti
rcrb
dec
push
iret
scas
inc
je
cwtl
mov
icebp
adc
and
das
sbb
push
pop
xchg
loopne
outsl
aas
test
and
jo
push
insb
dec
sbb
dec
int3
testb
into
cmpsl
popa
dec
inc
jg
cmc
stos
and
cmp
mov
ss
push
push
lret
nop
pop
cmp
mov
adc
lea
cs
pop
sarl
std
mov
mov
mov
cmp
fmuls
cmpb
sub
clc
jmp
xchg
pop
mov
jne
add
mov
mov
or
clc
scas
lock
dec
cs
aam
add
in
mov
push
mov
mov
or
jg
cltd
sub
add
mov
mov
push
xor
mov
out
roll
cld
ja
popl
into
mov
mov
mov
push
or
fistps
push
ret
es
pop
and
lret
dec
jle
push
pop
mov
lcall
mov
jae
push
das
lahf
or
inc
ret
mov
pop
ss
lods
sub
add
jb,pt
pop
xor
ficomps
cli
lret
testb
xor
mov
xchg
xor
cmc
ss
inc
mov
sbb
add
cmp
or
lds
cmp
repnz
lods
cmp
dec
sub
mov
xchg
movl
scas
push
mov
mov
mov
sarl
fwait
jle
jecxz
cwtl
std
movsl
in
jg
inc
shlb
jp
lret
jb
orb
jo
icebp
or
dec
std
loopne
sbb
inc
shrl
jns
addr16
or
sbb
das
andb
push
sub
call
hlt
xchg
pop
push
jge
pop
mov
lds
pop
sub
insl
pop
pop
test
pop
lea
adc
sub
in
xor
popf
mov
ret
aam
and
mov
adc
or
popf
int
or
jne
lods
jno
and
repnz
xor
hlt
push
ret
js
cmc
ret
cwtl
inc
call
test
frstors
lock
insb
sub
shrb
jo
mov
jbe
fldenv
aam
sub
cmp
sbb
call
fldt
sarb
aaa
push
fdivl
js
mov
imul
add
push
add
cs
xchg
jg
cwtl
pop
mov
imul
or
test
movsb
sbb
lahf
incl
enter
scas
jmp
cmp
jnp
mov
jne
sub
adc
mov
cs
xchg
int
testb
jecxz
repz
lods
xchg
lods
add
fcompl
lret
lea
das
sub
sti
or
or
hlt
fwait
mov
xchg
pop
pop
test
mov
inc
repnz
iret
je
push
or
and
mov
ds
mov
xlat
adcb
lds
fstl
jp
xchg
pop
out
pop
jp
imulb
fdivl
mov
es
repnz
pop
dec
sub
mov
mov
stos
ret
mov
out
popa
jnp
mov
inc
mul
dec
push
xor
push
adc
addr16
push
and
jbe
or
mov
mov
pop
orb
lahf
and
jle
fs
mov
cmp
outsl
stos
cld
push
add
mov
js
je
sbb
xor
mulb
mov
dec
jle
je
mov
fisttps
dec
int
ds
leave
dec
call
mov
dec
cs
rcll
push
fstcw
ret
cmpb
outsl
movsl
pop
sbb
out
ficompl
and
aad
cmpsb
add
pop
adc
stc
mov
adc
jns
shl
mov
data16
aaa
lods
ss
inc
loopne
push
and
inc
fs
push
out
loope
mov
and
adc
adc
sbbb
sbb
std
popf
fcompl
ljmp
in
add
adc
movsl
inc
test
mov
push
mov
movl
push
xchg
sbb
pop
lock
xchg
pop
add
loop
iret
xchg
and
cmp
dec
or
xor
push
adc
ss
add
into
adc
inc
mov
into
xchg
xor
in
mov
or
mov
popa
pushf
ret
test
stc
faddl
ss
ror
fs
popa
aad
lea
lds
add
imul
test
xchg
mov
arpl
movsl
sti
inc
test
or
and
mov
fdivrs
sub
pop
jmp
in
fnstsw
push
outsb
or
sub
in
push
push
push
inc
push
add
nop
xchg
retw
loop
push
test
js
adc
mov
flds
sbb
and
mov
dec
inc
fisubs
xchg
lret
fildl
stos
pop
cld
pop
vpunpcklbw
loop
cli
sbb
lahf
pop
fdivr
xor
repz
xor
jno
in
mov
xchg
loope
mov
sarb
pusha
ja
jb
xchg
sbb
cmc
loopne
out
cld
je
add
dec
push
sbb
adc
pop
jns
aas
aad
inc
inc
add
scas
mov
lcall
das
sub
movl
xor
mov
jp
in
ss
xchg
fwait
mov
cmp
add
ja
mov
rorl
dec
shlb
lret
lcall
xchg
ss
cmp
adc
pop
int3
ret
mov
shlb
cltd
lahf
jge
fnstcw
je
dec
xchg
aam
jne
mov
and
mov
shlb
lret
imul
ficomps
jnp
push
lret
jp
pop
loope
fsubr
pushf
loopne
sub
aam
aam
and
sub
aam
push
jge
mov
int
daa
repz
sub
shll
xlat
cmp
jge
cmpsb
mov
clc
aaa
add
mov
movsb
xchg
stos
andl
addr16
lcall
rorb
shrl
push
testl
cs
adc
dec
into
inc
jmp
mov
inc
pop
xchg
pop
xlat
inc
mov
shll
ret
iret
pop
popf
mov
stos
cmpsb
mov
imul
movsl
mov
lock
lods
and
adc
stos
call
adc
xor
clc
and
dec
fldt
pop
pushf
fucomip
inc
sbb
into
data16
das
loopne
jg
inc
insb
int3
sti
adc
sbb
push
mov
jl
shlb
test
leave
inc
dec
push
ret
and
mov
aam
popa
pop
stos
imul
push
bt
add
pop
xlat
and
testl
std
sbbl
or
pop
mov
aas
mov
add
mov
cmp
daa
rcrl
pop
push
jnp
sub
decl
int
push
inc
dec
mov
aad
sub
imul
xchg
aad
aad
xchg
dec
cmc
push
dec
xchg
mov
adc
imul
loopne
fwait
jge
ss
jp
pop
add
out
outsl
adcl
dec
les
insl
sub
sub
popf
pop
and
ret
fwait
aas
int3
push
push
call
inc
clc
cs
inc
fisubrl
outsl
mov
mov
mov
imul
xor
xchg
cmp
mov
into
jp
fnsave
das
ljmp
mov
hlt
mov
sbb
pop
mov
fnsave
mov
push
and
push
mov
hlt
adc
sarb
cmc
push
in
loope
cmpsl
cmp
or
outsb
call
cmpsb
adc
pop
das
push
or
push
add
xor
add
les
fwait
cmp
push
pop
jnp
aad
or
xchg
cld
xorb
jb
imul
mov
lods
jno
push
mulb
pop
iret
out
imul
insl
test
cmp
lret
fadds
pop
or
mov
push
loope
sbb
popa
imul
cld
mov
jns
int
jecxz
xor
fnsave
and
and
popa
inc
jb
fidivl
pop
jge
pushf
jne
push
pop
mov
add
divb
and
and
je
sbb
test
sbb
mov
xchg
pop
xchg
es
repnz
nop
imul
and
pop
xchg
aaa
inc
jmp
mov
shrl
pop
pop
aaa
pop
and
push
dec
pop
mov
int3
sub
sub
xor
cmp
fs
leave
movsb
push
cmpb
es
pop
lods
cmpsl
pop
pop
push
lea
xor
pop
mov
mov
sarl
and
daa
dec
inc
imul
lcall
lret
mov
xor
jecxz
repnz
arpl
fbstp
adc
out
fcoml
fmull
and
jmp
std
mov
orb
sbb
push
js
out
xchg
inc
cmp
imul
mov
ret
inc
pop
xor
push
insl
imul
test
int
push
jg
je
iret
insb
lcall
loope
sub
in
das
lret
push
pop
enter
fcmove
mov
adc
dec
xor
push
pop
jae
mov
sub
lret
in
imul
cmp
call
cmp
cmp
xchg
push
int3
sbb
out
pop
lods
jp
out
fsubrl
imul
gs
and
loope
sbb
insb
xchg
add
faddl
daa
jbe
mov
lea
pop
dec
imul
pop
les
sbb
sub
push
pop
pop
fcoms
lcall
jnp
or
cs
sub
sbb
inc
outsb
mov
mov
add
inc
inc
cmc
push
daa
xlat
subb
and
and
pop
push
sub
stos
aam
mov
dec
pop
pop
stos
daa
jp
mov
in
in
cmpsl
repz
popa
dec
popa
xor
mov
mov
adc
fisubl
or
lds
aas
xor
ret
and
sub
sub
jl
xchg
test
mov
lds
adcb
mov
andps
dec
jo
inc
jbe
mov
dec
out
or
stos
mov
fs
mov
inc
sub
testb
dec
popf
inc
addr16
int3
mov
les
jmp
imul
dec
push
push
adcl
test
add
cmpsl
lock
push
and
fiaddl
jg
lods
jle
test
bt
xor
cmp
inc
fbstp
int3
cmp
xchg
cmp
repnz
insb
mov
or
sub
fistpl
orb
sbb
mov
stos
stos
xchg
addl
add
jg
repnz
jecxz
daa
filds
jb
cmpsb
dec
out
in
popa
add
aaa
ret
scas
xchg
mov
xor
fcompp
jle
and
xorl
or
lods
sbbb
bound
cmpsb
jns
pop
test
jmp
lret
xor
popf
or
cltd
add
cld
pop
push
movsl
pushf
mov
or
mov
push
jp
xchg
inc
xor
aad
imul
xchg
xor
jb
inc
and
pop
push
add
adc
cld
daa
sti
mov
and
cwtl
pop
xchg
push
into
sub
cmpl
dec
dec
leave
push
shrl
or
lcall
filds
xchg
inc
rcrl
int
cld
dec
mov
rorl
mov
mov
imul
and
dec
or
dec
loop
cmpsb
js
pop
scas
fldl
mov
test
rol
mov
aam
mov
adc
js
pop
js
push
pusha
add
lods
sub
cltd
mov
cld
insl
jp
mov
inc
lcall
arpl
int3
out
push
test
adc
mov
push
fdivp
jg
sbb
xchg
cmpsb
mov
sbb
xchg
aas
sub
ds
pop
push
cmp
cmc
shlb
std
mov
lock
xchg
mov
xor
xchg
ret
inc
cli
je
jne
rorl
sarl
jecxz
jl
sub
loop
jbe
push
rol
mov
mov
cmp
mov
mov
sbb
push
vmwrite
xlat
sbb
mov
add
mov
ljmp
push
scas
mov
xchg
inc
outsl
sub
push
arpl
ds
jge
sbb
mov
cltd
jne
sub
and
aas
jg
repnz
sub
sbb
loopne
mov
cld
je
ret
repz
repz
push
aad
adc
sub
shl
das
push
and
pop
dec
call
lds
movsl
add
movsl
sub
out
dec
mov
sub
dec
clc
sub
outsb
sahf
dec
xchg
in
jmp
das
push
je
bound
xor
and
cwtl
inc
sahf
cwtl
xchg
into
push
ss
and
lcall
push
jmp
sub
sub
iret
dec
std
mov
and
imul
inc
inc
jg
rolb
inc
jbe
dec
aas
xor
push
xchg
push
add
out
cmp
xor
or
xor
andl
stos
jge
movb
sub
int3
cmp
iret
jg
add
rcll
fninit
dec
jp
sub
filds
pop
ss
xchg
cmpsb
nop
daa
push
or
add
sub
fld1
lods
sbb
sbb
or
iret
sahf
aaa
outsb
scas
xchg
pop
in
sub
jmp
xor
pusha
pop
aaa
dec
loope
in
push
loop
cltd
movsl
xchg
stc
xchg
call
jnp
int3
pop
ljmp
and
outsl
aad
sbb
push
imul
fnstcw
shlb
int3
xor
scas
dec
mov
or
out
les
in
cltd
es
adc
jmp
in
jno
xor
inc
push
cmpsl
imul
leave
and
imul
inc
imul
mov
mov
decl
sbb
sub
xchg
push
xor
inc
andl
jecxz
lds
pushf
mov
adc
inc
mov
jns
pop
ret
pop
adc
repnz
xchg
xlat
pop
cltd
insb
xchg
xor
mov
push
mov
rolb
xor
xchg
cmp
cmpsl
lds
add
dec
xor
loopne
inc
jl
cmpsb
insl
fisubrs
fdivrl
or
dec
xor
jno
int
xor
jns
sub
sbb
and
mov
lock
pop
mov
xor
mov
or
and
mov
xchg
adc
add
out
ljmp
push
push
mov
jmp
jbe
mov
cld
iret
sub
aad
mov
add
xor
loop
enter
or
jb
sub
cmpsl
add
rcr
xchg
push
imul
or
or
into
push
bound
inc
push
adc
test
addr16
dec
cmp
mulb
add
nop
xchg
or
pushf
add
fnstenv
adc
add
mov
lret
testb
xlat
out
je
popf
or
fs
out
dec
negb
pop
loop
movsl
mov
into
sbb
test
imul
mov
lea
mov
popf
mov
jae
cld
shlb
jp
test
mov
adc
in
sbb
cmp
jbe
jge
cmpsb
cltd
dec
lds
popf
inc
jne
and
in
push
fistl
les
jle
adc
lock
ret
jne
cmp
jbe
inc
pop
jge
push
leave
sub
clc
mov
cmp
scas
jp
dec
loope
dec
daa
jl
xlat
add
fdivs
inc
pop
in
imul
popl
cmp
xor
inc
sbb
sarl
dec
fwait
xchg
decl
cwtl
push
xchg
lds
push
push
lcall
scas
adc
negb
adc
adc
out
cs
mov
xchg
aad
and
lahf
out
test
cmp
addr16
sti
das
stos
lret
push
pop
and
gs
jmp
aas
rcl
push
icebp
int3
adc
movsl
fcomip
aam
push
push
sbb
mov
sbb
dec
jle
xor
outsb
lcall
mov
sbb
into
in
lods
mov
mov
xchg
xchg
insb
dec
cmp
aam
pop
scas
dec
jbe
jnp
sub
jg
sub
lds
mull
mov
loope
movsb
push
add
cmp
repnz
adc
int
int3
fdivrp
jmp
in
and
bound
pop
imul
push
std
sbb
mov
sbb
lods
or
cmpsl
pop
xchg
in
lds
adc
les
mov
jae
mov
mov
add
dec
test
push
adc
adc
push
push
adc
orb
xchg
xor
test
add
xor
into
cli
jle
jle
add
lock
jbe
in
aas
adc
in
std
cmc
sub
add
dec
imul
jne
jl
ss
addb
fdivrp
pusha
inc
mov
test
mov
rep
or
mov
jns
int
out
sarl
pop
outsl
push
pushf
dec
cltd
xor
mov
imul
pop
nop
out
xchg
popf
or
lods
pop
std
dec
cmpsl
jmp
shl
aam
gs
push
mov
cld
iret
pushf
call
js
xchg
and
jle
out
jmp
pop
xor
sti
mov
dec
mov
in
aam
popf
push
jns
sbb
xor
cmp
es
jl
jnp
mov
xor
in
cmp
dec
inc
mov
push
or
mov
cmp
je
cmp
loope
stos
lret
or
ljmp
xchg
cwtl
mov
clc
aaa
imul
iret
frstor
or
xchg
pop
testl
lods
es
insb
mov
cmp
repz
dec
in
les
sbb
popa
sub
ret
dec
xor
push
pop
push
out
push
mul
inc
or
dec
mov
insb
mov
loope
shl
add
pop
or
aad
fistpl
js
xor
std
adc
cltd
mov
js
mov
cwtl
out
shl
test
sub
or
or
fwait
mov
jo
pop
push
jle
test
scas
sub
push
push
add
push
mov
pusha
enter
jg
icebp
gs
dec
xor
mov
mov
dec
xchg
jge
fimull
ja
jp
add
push
test
andb
push
pop
pop
stos
inc
pop
pop
sub
xchg
push
mov
lock
pop
adc
adc
pop
icebp
popa
bound
xchg
sbbl
jmp
lods
lea
iret
adc
adc
xchg
sbb
fisubs
inc
xor
mov
movsb
jno
into
or
xor
js
mov
outsb
aaa
into
fisubl
leave
lea
js
in
jecxz
inc
cmpl
push
pop
scas
fimuls
outsb
iret
movsl
fidivl
add
mov
xor
xchg
and
inc
imul
fwait
xchg
push
lods
jne
xchg
inc
mov
add
pop
in
rorb
je
add
nop
mov
jbe
mov
jb
cmp
inc
callw
mov
mov
outsl
pop
ret
in
addr16
xor
aad
in
js
sbb
xchg
nop
inc
mov
jp
add
mov
mov
jne
insl
push
lods
xchg
fists
mov
aas
fimuls
or
dec
cmp
adc
xchg
push
jmp
mov
and
jo
das
into
jmp
sbb
imul
jbe
dec
xchg
or
dec
or
mov
aad
mov
lcall
add
mov
pushl
mov
aaa
test
test
add
inc
sub
imul
aad
test
jb
adc
sub
mov
jl
and
and
leave
shll
push
jb
jae
ljmp
decl
pop
adcb
jb
and
jb
hlt
dec
mov
jl
fcmovnb
sbb
lea
in
lea
test
les
adc
shlb
fcmovnu
fimuls
adc
push
jnp
xchg
out
ret
add
lcall
ja
shr
add
mov
xchg
push
dec
push
pop
mov
rcrb
popf
mov
fldt
rcrl
jae
popf
mov
into
jnp
add
xorl
dec
pop
hlt
fcomps
and
jle
lods
inc
iret
mov
fstpl
cmp
sub
sbb
adc
push
xchg
sbb
fcompl
xor
repnz
mov
sub
sbb
shlb
adc
dec
fwait
mov
sub
mov
mov
js
cmc
pop
xor
mov
shl
pop
sbb
subb
fstps
xchg
and
add
inc
add
jae
nop
cmp
sbb
int3
push
push
pushf
jg
notl
in
test
cld
jg
and
xor
push
xchg
rcrb
les
mov
ljmp
sbb
addr16
arpl
xchg
cmpsl
daa
inc
ja
adc
out
out
pop
clc
jmp
ss
dec
popa
pmaddwd
in
push
call
mov
ret
arpl
mov
push
loope
xor
test
mov
dec
lret
stc
adc
dec
dec
loope
xlat
push
inc
and
enter
push
out
jne
cli
xor
fcom
gs
cmpsb
lds
idivl
mov
imul
push
pop
jecxz
push
pop
or
mov
jnp
ds
bnd
cmp
sub
push
sub
and
xlat
hlt
inc
scas
add
add
add
sbb
push
dec
out
inc
xor
mov
jp
out
ljmp
push
xor
in
lods
xchg
push
jl
sub
mov
xlat
loop
and
imul
rclb
adc
or
lret
hlt
add
push
adc
sub
pop
cmp
movsl
jae
pop
jge
call
mov
stos
inc
bound
adc
es
sbb
adc
and
mov
mov
push
push
mov
mov
mov
jmp
xor
lret
jns
mov
add
mov
jl
xrelease
xor
dec
sbb
movsl
pop
jp
add
shl
or
out
stc
cltd
push
out
sbb
bound
add
imul
mov
pop
data16
repnz
lock
sarl
jecxz
lock
rcrl
imul
rcrl
pop
stc
int
aam
pop
xor
gs
test
pop
push
out
dec
jecxz
repnz
or
fisubs
mov
decl
repz
das
stos
sbb
cmpsb
aad
es
mov
adc
dec
negb
int3
addl
incl
add
in
enter
mov
scas
add
jne
push
data16
sub
outsl
mov
sub
outsl
sub
fs
mov
lcall
dec
shl
pop
setb
and
pop
out
xchg
cmp
ja
mov
jns
sti
lret
js
push
mov
gs
stos
jecxz
xchg
cmpsb
stos
sub
jne
popf
cmp
mov
movsb
push
pop
aaa
fldenv
pop
cmp
subl
psubb
loopne
adc
lea
or
push
loop
rolb
sub
and
stc
test
sub
mov
fstl
adc
jae
adc
sub
mov
mov
daa
jne
push
adc
mov
das
cwtl
std
in
repnz
ret
outsb
xchg
sahf
pop
jp
push
repnz
jl
sti
xchg
pop
sbb
mov
mov
scas
orl
xchg
xchg
push
insw
jmp
cmpsb
add
xchg
mov
inc
inc
mov
pop
xor
xor
jae
and
sti
js
sbb
ret
jmp
dec
sub
xchg
imul
ret
jo
xchg
push
sti
mov
or
fisubrs
jb
cmpsb
pop
sbb
daa
testl
push
add
push
fldl
repz
call
cmp
in
inc
into
pop
hlt
addb
and
addl
int
into
mov
scas
shrl
dec
mov
jp
je
xor
add
push
and
xchg
mov
mov
push
ret
push
dec
fistps
mov
bound
mov
lods
test
xor
push
mov
clc
lcall
int
xor
in
push
data16
dec
adc
mov
lds
rcrl
pop
dec
jns
mov
mov
aaa
fwait
ret
push
int
fstl
daa
adc
xchg
cli
test
dec
sti
mov
out
arpl
repz
lock
cmp
mov
add
mov
fisubl
inc
fidivrl
cmp
ds
loopne
lods
adc
leave
xchg
flds
cli
into
sbb
sti
xchg
cwtl
nop
idivl
popf
pop
cmpsb
add
mov
lds
dec
subl
bound
jns
rclb
mov
ljmp
test
js
inc
inc
xor
fnstenv
arpl
js
std
push
ljmp
lods
in
fistpl
sahf
out
or
add
dec
inc
cmp
dec
sub
repnz
pusha
mov
jno
cmpsl
mov
inc
push
enter
aam
test
sbbb
jne
xor
xchg
hlt
fwait
pop
leave
popa
dec
push
adc
mov
iret
mov
sti
lahf
mov
int
sbb
loope
ror
push
sub
cmp
data16
pusha
imul
shrb
push
mov
sbb
daa
or
stos
outsl
add
faddp
lods
or
subb
jo
and
fldt
daa
arpl
int3
lahf
movsb
bt
and
add
dec
lahf
sub
xor
push
in
movsb
loopne
inc
ret
ss
or
test
cmpsl
in
adc
aaa
stos
mov
or
insb
xchg
push
fwait
lods
jnp
aam
dec
inc
adc
pop
and
lds
jbe
push
xchg
pop
sbb
lock
adc
jbe
call
std
leave
sbb
cmp
fbstp
aam
inc
pop
push
xchg
jge
mov
pop
js
sbb
mov
loopne
adc
jne
add
jmp
xchg
mov
mov
xlat
test
roll
popa
leave
push
mov
sahf
jl
mov
push
push
inc
inc
idiv
pop
div
pop
mov
xor
test
add
loopne
in
insb
outsb
cltd
aas
pop
dec
lret
cld
lea
jbe
pop
pop
cmp
scas
pop
jb
mov
enter
sbb
fwait
and
loop
dec
mov
mov
sub
lret
pop
sbb
cmpb
or
adc
sti
popf
push
shrb
mov
mov
mov
test
insl
in
mov
icebp
inc
push
dec
adc
mov
mov
repnz
dec
mov
jmp
add
jb
sbb
imul
lds
repnz
imul
dec
mov
mov
pop
inc
jbe
je
mov
outsb
jg
popa
sub
test
dec
stos
and
fistps
cld
ret
push
add
jno
pop
loop
iret
mov
xor
sbb
cld
or
out
add
mov
dec
call
adc
idiv
add
xor
add
xor
loope
or
push
pop
mov
stos
jmp
leave
stos
or
cmp
cmp
jge
pop
divb
mull
fs
sahf
push
and
mov
scas
xor
rcl
or
adc
nop
aaa
xchg
loope
jle
sub
cs
shlb
inc
mov
cwtl
jle
xchg
stc
sti
cmp
repz
fdiv
adc
push
cmp
mov
ljmp
dec
lods
xor
ss
shll
sti
fistpl
jp
or
idivl
aam
mov
xchg
adc
jo
imul
test
clc
int
or
sub
leave
and
fldcw
stc
data16
nop
sahf
aad
mov
lods
push
ss
push
mov
ljmp
sbbl
in
xchg
or
out
push
and
push
mov
fisubrs
adc
sbb
cmp
shlb
aam
dec
out
stc
jmp
mov
or
cmp
sbb
mov
stc
xor
in
rorb
mov
cmp
jle
or
inc
sub
cmpsl
add
in
je
push
ljmp
xchg
dec
xchg
lock
add
jbe,pt
pushf
mov
mov
enter
add
insb
in
sbb
dec
pop
sbbb
inc
fs
jg
fdivrs
mov
out
mov
and
xchg
push
cmp
inc
in
xor
mov
jle
inc
jne
xchg
ficomps
movsb
dec
lret
out
test
push
mov
ljmp
jp
jle
cwtl
insb
adc
inc
stos
mov
das
jae
je
mov
jne
hlt
mov
xor
daa
pop
cmpsb
shlb
cmc
push
push
enter
inc
stos
lret
mov
mov
inc
push
mov
pop
sub
sahf
insl
test
out
mov
mov
scas
pop
aaa
idivb
cmpsl
sysenter
push
lods
fcomp
cli
jne
xchg
lcall
add
or
ror
jle
sbb
pop
jmp
lcall
adc
lcall
jl
dec
nop
js
cmpsb
inc
xchg
mov
mov
pop
and
ss
jge
cld
out
les
mov
pop
push
mov
jp
and
add
daa
cmpsl
cmc
addl
out
rcrb
ss
push
cs
sub
and
mov
push
popf
mov
xchg
cli
idivl
test
repz
xchg
fisttpl
jl
stos
pop
lcall
xchg
loopne
scas
in
out
aam
scas
jnp
or
inc
dec
jnp
shr
loope
mov
mov
dec
ret
aas
ss
inc
pop
xlat
jmp
ljmp
mov
enter
insl
out
xchg
dec
mov
cmp
hlt
loope
inc
xchg
or
jbe
loop
jl
fistpl
sub
shlb
push
into
lret
cmpsl
cltd
pushf
scas
cmpb
lret
xor
mov
sub
in
push
in
insl
adc
das
cs
inc
cwtl
adc
leave
daa
pusha
xchg
fnstenv
rorl
pop
arpl
insl
ds
mov
or
repnz
xchg
and
adc
xor
xchg
data16
and
test
and
ljmp
mov
pop
pop
xor
in
xor
cmp
or
adc
out
fsts
clc
sub
repz
pop
sti
dec
cmp
and
pop
xchg
sbb
jb
and
jge
push
fsts
test
test
int
out
aaa
add
dec
mov
or
fidivrl
neg
and
cmp
mov
pop
dec
xchg
leave
das
jge
adc
mov
inc
loopne
adc
mov
out
bound
popa
imul
cs
jnp
xlat
cmp
sbb
leave
pinsrw
and
outsb
int3
push
cmc
test
and
mov
mov
mov
data16
sbb
movsb
adc
sahf
sbb
ret
cmp
add
jmp
fxch
jecxz
dec
int3
cmp
test
xchg
or
clc
mov
sub
imul
dec
sub
pop
pop
mov
enter
pop
xlat
xchg
mov
into
mov
aam
movsb
mov
fisttps
out
and
xchg
jecxz
rcll
icebp
repz
or
rorl
arpl
pop
test
imul
add
dec
fstp
sbb
lret
sub
jo
dec
addr16
xor
cmpsb
mov
imul
mov
sahf
mov
add
sahf
sbb
mov
testb
mov
jle
push
ret
shll
jp
push
test
es
add
mov
je
sbb
idivb
jmp
xchg
repz
push
sub
mov
into
pop
add
test
pop
inc
xchg
test
and
inc
pop
test
dec
orl
test
pop
sarl
dec
and
and
mov
mov
mov
adc
js
addr16
add
xor
mov
repnz
jge
or
ja
push
mov
add
imul
mov
and
or
clc
in
adc
hlt
and
xor
jecxz
adc
pop
clc
and
call
jne
sub
repz
push
int
mov
mov
ljmp
les
fistps
push
cltd
xchg
popf
fs
xchg
iret
enter
movsl
inc
push
ja
push
orl
sbb
jg
das
adc
or
andl
lahf
fidivrs
std
jmp
ja
xchg
call
fmuls
mov
sub
subl
dec
sahf
fists
sbb
jo
lcall
or
xchg
cli
psrad
jg
pop
and
aad
push
dec
int
or
dec
fcomps
das
rclb
out
clc
out
or
jecxz
xchg
cmp
mov
aad
sbb
fadd
lock
adc
mov
or
out
inc
repnz
dec
das
jmp
call
lcall
mov
incl
stc
add
cmp
add
cmp
movsl
pop
push
jmp
pop
data16
xchg
sub
mov
stos
jg
imul
push
lret
sbb
sahf
sbb
mov
mov
cmp
inc
mov
outsb
sub
data16
mov
and
daa
and
icebp
sub
into
dec
mov
imul
pushf
jl
add
pop
jg
mov
leave
fsubrl
daa
cmpl
xor
lods
in
je
mov
sti
jne
push
pop
dec
rorl
xchg
add
sbb
stos
inc
lods
ljmp
std
mov
jecxz
fldt
in
repnz
rolb
pop
lret
mov
les
pusha
xchg
lret
insb
arpl
inc
add
in
sub
adc
or
jns
sub
mov
pop
movsb
sub
shl
out
xchg
ss
mov
sbb
cmp
or
push
lea
movsl
push
xor
push
xchg
mov
xor
aaa
fdivl
loop
and
scas
xchg
iret
push
int3
mov
dec
jl
push
mov
leave
fsubrl
aad
sbb
cs
and
ljmp
fildl
lods
insl
ja
out
sti
out
aad
pop
cmp
fdivp
inc
and
cltd
aas
inc
mov
mov
dec
pop
inc
jns
mov
pop
cmc
pop
mov
dec
push
inc
xor
fnstcw
jg
aas
or
push
shll
add
es
je
shlb
pop
icebp
sub
loope
xorl
test
push
pop
outsl
and
sahf
out
jg
jns
fidivrl
add
in
sbb
xchg
addl
shll
add
flds
scas
jno
imul
aad
jno
test
ficoms
adc
cmpsb
repnz
out
mov
pop
loopne
push
sar
bound
pop
sarl
popf
jmp
idivl
push
mov
loop
inc
cmp
hlt
lret
pop
fiadds
or
clc
js
sub
mov
repz
out
movsb
or
insl
xor
mov
lods
or
sbb
cmp
int3
lcall
cmp
or
scas
sbb
popl
cmp
mov
xchg
mov
adc
leave
jge
mov
ret
jecxz
addr16
jecxz
mov
xlat
addr16
cmp
mov
je
push
movsl
cmpsl
icebp
popa
mov
aaa
mov
das
push
inc
or
inc
aam
mov
and
push
das
flds
cmpsb
idivb
inc
xchg
adc
rcll
xchg
in
xchg
dec
cmc
mov
sbb
jp
dec
add
xlat
aad
lret
nop
cmpsl
out
or
das
mov
or
or
mov
sub
in
xor
in
xor
and
dec
movsb
std
clc
gs
js
mov
cld
les
or
inc
fs
mov
jns
mov
bound
ret
mov
ffreep
enter
cltd
aam
xchg
rorb
inc
jle
jne
into
movsb
dec
loopne
gs
sbb
inc
push
sbb
cmp
mov
push
psubsb
cmp
rol
fcom
lods
test
inc
out
pop
jmp
icebp
jne
mov
pop
jnp
mov
mov
les
pushf
adc
cmp
repnz
das
push
mov
mov
sub
pop
pop
outsl
xchg
and
pop
enter
sub
cmpsl
push
fisubrs
push
xor
and
int3
enter
popf
shrl
fnstcw
sub
sub
inc
and
bound
mov
push
lods
jl
lds
sbb
dec
mov
or
xchg
mov
out
fildll
shll
movq
idivb
lcall
mov
push
or
popf
ficomps
dec
xor
pop
sbb
rcll
repnz
hlt
pop
test
dec
xchg
push
rcl
xchg
cmc
out
dec
mov
ja
sub
dec
ljmp
das
sahf
sbb
loope
stc
dec
cmpsb
movsl
xlat
mov
rcrb
lea
subl
inc
test
sbb
outsl
cmpsl
dec
aas
fs
ljmp
pop
cmc
cmp
ds
pop
lock
push
leave
dec
xor
imul
adc
cmp
pushf
xor
je
mov
cwtl
ret
arpl
das
fisubrl
mov
fnstenv
loopne
lock
xor
mov
mov
out
int3
mov
inc
sti
dec
cld
daa
cmp
push
in
pop
add
sbb
cmp
imul
mov
arpl
shl
mov
sahf
bound
cwtl
xchg
stc
mov
and
add
cmpsl
ljmp
push
rcl
cld
roll
sbb
in
dec
fsts
add
rol
sbb
pop
gs
xor
sar
xor
pop
cmpsb
push
into
mov
fimull
cmp
rclb
outsl
loop
xlat
xlat
inc
mov
cli
inc
rdtsc
push
adc
fbstp
aad
popa
dec
sub
sub
push
test
xor
cmc
nop
mov
sub
dec
sbb
out
xchg
push
rol
mov
mov
lret
lods
popf
or
mov
cmpsl
lock
lds
andb
mov
push
sti
xor
into
xchg
jl
mov
mov
aam
out
adc
inc
pop
inc
adc
in
in
jb
xor
shrb
fs
imul
inc
xchg
adc
mov
sbb
hlt
mov
cmpsl
mov
cld
in
cmp
sbb
ds
xor
mov
pop
aas
in
ss
sub
fsubs
mov
adc
xchg
and
daa
add
fildl
add
xchg
mov
mov
or
xchg
and
jns
or
sub
je
pop
std
call
mov
ret
shlb
repnz
gs
pusha
dec
pop
imul
pop
mov
xor
and
ret
xchg
subb
mov
push
cmc
fcomi
xchg
dec
cli
stc
js
insl
xchg
gs
push
xor
orb
xchg
insb
xchg
and
pusha
sti
popa
in
cmc
mov
mov
mov
mov
xor
pop
sub
loopne
loop
xchg
sub
sbb
and
mov
cli
cmp
sbbl
sbb
aad
popa
add
sbb
cmp
jp
push
js
test
fsts
jecxz
xor
pop
bound
inc
cmp
pusha
add
sarb
xor
stos
adc
push
mov
gs
pusha
inc
fnsave
dec
push
lods
into
adc
pop
xchg
xchg
shrl
xor
ljmp
cmc
add
mov
jbe
add
fwait
jae
dec
cmp
fisubrl
shr
add
test
sub
sbb
icebp
fdivrl
ret
cmp
ss
add
mov
mov
inc
mov
movsl
push
mov
shl
mov
push
das
shr
jne
sahf
into
mov
insl
adc
pop
xchg
aad
adc
cmp
or
notl
into
call
sahf
sub
sbb
stc
stos
addr16
test
repnz
mov
loope
adc
jp
xchg
cmc
adc
hlt
lods
mov
ror
jle
mov
test
sar
cmp
ds
cmp
into
pop
scas
sub
ljmp
icebp
xor
pop
sbbb
jns
add
notl
sahf
mov
xchg
leave
sub
push
cmp
inc
or
cli
ret
and
lods
dec
xor
cmp
xchg
movsl
bound
push
es
mov
push
fcmovnb
jp
and
push
stc
push
fisubrs
fwait
arpl
jns
imul
adc
fbstp
sarb
int3
mov
call
jp
xorb
mov
mov
outsl
adc
jle,pt
jle
push
fimuls
imul
or
push
mov
mov
xor
stos
xchg
mov
loop
adc
mov
push
sub
or
stc
cmp
pop
sti
push
aad
xor
jge
cmc
fnstenv
sub
stc
ljmp
jbe
mov
pop
das
cmpl
pushf
push
xchg
jp
inc
pop
sub
in
arpl
jne
sub
bound
inc
ja
pop
add
lcall
mov
inc
ds
add
rol
add
xchg
je
mov
inc
loop
push
mov
sahf
pop
pop
sub
mov
icebp
and
arpl
shl
dec
xchg
add
out
test
or
mov
mov
ret
lock
mov
push
repnz
int
pusha
jmp
push
pop
xor
and
out
or
mov
push
cli
inc
ja
out
popa
xor
negl
test
push
shl
adc
inc
je
xor
cli
cmpsl
dec
int3
push
imul
hlt
mov
pop
inc
imul
mov
arpl
in
mov
jmp
ljmp
fists
xchg
sub
mov
pop
jno
xchg
pushf
sub
xor
or
mov
xor
adc
mov
xchg
mov
int
jo
rep
sbb
dec
sub
loope
hlt
lds
or
jg
mov
fisttpll
push
pop
add
icebp
call
sbbl
jo
mov
mov
aaa
stos
xchg
mov
clc
out
loope
outsb
ja
adc
frstor
push
loop
je
xchg
cmp
cmp
cmp
xchg
fs
shr
push
les
or
dec
dec
ds
jge
or
adc
bound
mov
xchg
hlt
push
lock
test
xchg
mov
jnp
aam
ss
dec
jno
dec
mov
mov
filds
lods
inc
stos
or
mov
xor
daa
pop
mov
jne
test
xchg
fcomps
fwait
in
in
dec
filds
nop
lahf
cltd
test
inc
mov
push
mov
cmpsl
fiadds
das
sarl
aad
fs
and
insb
mov
sub
push
test
cmp
inc
shrb
pop
rcrb
pop
add
inc
fwait
mov
sub
mov
rorl
adc
or
push
filds
shl
cmp
je
and
adc
xchg
jb
sbb
jecxz
cmp
mov
sahf
or
outsb
loopne
pop
cmp
add
sub
mov
out
ffree
xchg
pop
test
std
jge
test
in
loopne
and
mov
rcrb
in
sbb
inc
es
xchg
rorb
repz
lcall
push
add
mov
adc
jp
gs
jp
imul
lahf
leave
sub
and
lods
push
or
mov
mov
dec
cmpsl
and
and
int3
sti
enter
scas
movsl
scas
adc
sub
inc
sub
and
ret
shrl
xchg
dec
in
pop
sbb
shrl
push
or
mov
sbb
shrb
popa
cmovs
mov
enter
fsubl
xor
pop
or
leave
ja
mov
push
movsb
adc
popa
aad
mov
dec
inc
inc
and
es
rcrb
adc
dec
push
ljmp
pop
cs
std
mov
jg
mov
and
pusha
lret
mov
cmpsb
arpl
lea
xchg
stc
mov
enter
test
dec
add
xor
fcoml
fdivl
push
jp
push
mov
and
mov
insl
or
int
jmp
adc
outsl
or
into
dec
add
hlt
dec
sub
in
add
dec
adc
dec
je
pop
jmp
int
call
inc
inc
xor
pop
push
aad
xchg
repnz
into
scas
xchg
adcb
sub
pop
orb
push
inc
gs
daa
pop
mov
mov
outsl
ja
ss
adc
and
paddb
adc
aad
push
inc
dec
nop
je
mov
pushf
pop
cmpsl
in
aad
xchg
and
add
rorb
popf
sbb
xchg
xor
fnstsw
iret
xchg
inc
mov
int
xchg
cmp
nop
pop
mov
cmp
inc
adc
fsubr
movq
cvtps2pi
pop
xchg
addr16
and
aad
xorb
popa
aaa
lahf
mov
ds
imul
addr16
mov
dec
incb
xor
jo
sbb
hlt
add
out
rorb
dec
mov
gs
outsb
jmp
hlt
fmul
jg
xchg
add
push
shrl
push
adc
lahf
pop
add
gs
ficomps
leave
cmc
sahf
loopne
dec
loope
repz
shrl
std
cmp
rorb
add
xchg
mov
repnz
and
cmp
test
fdivs
push
test
addr16
xor
scas
pop
mov
movq
mov
jg
sub
jo
and
lea
cltd
mov
or
and
push
or
pop
call
and
jbe
mov
and
mov
inc
mov
adc
adc
je
mov
or
mov
push
shll
lock
and
mov
fwait
push
jle
dec
add
loop
xor
stos
pop
push
fs
repnz
mov
fbstp
and
mov
jge
je
mov
mov
dec
imul
cmp
pcmpeqd
push
mov
mov
mov
ret
orb
inc
fimuls
in
int3
pop
movsb
push
inc
lret
cwtl
jne
sarl
add
push
into
and
push
aad
jmp
jnp
scas
imulb
test
scas
inc
pushf
cmp
mov
dec
shlb
mov
pushf
daa
notl
out
test
pop
dec
mov
xchg
pop
subb
iret
add
mov
push
data16
pop
add
mov
mov
fisttpll
or
xorl
sub
xor
mov
push
int3
push
mov
and
stos
gs
sti
outsl
sbb
lret
clc
jmp
in
cmp
adc
sti
lock
outsb
jle
out
sarb
cmp
or
jae
and
mov
rcrb
lock
mov
pop
out
cmp
pop
repnz
punpckhbw
test
jmp
mov
xchg
mov
shrl
xchg
inc
xchg
lret
jmp
daa
xor
xchg
stc
pushf
push
and
mov
inc
mov
add
pop
into
fs
jge
cltd
and
leave
or
dec
pop
cmc
fcomi
cmp
xor
daa
lods
dec
add
adc
btr
dec
push
cmpsb
arpl
int
cltd
mov
cmp
push
jo
std
dec
inc
or
push
lods
sbb
jno
inc
adc
or
pop
in
dec
add
push
stc
sub
fs
les
popa
pop
in
std
popf
popf
and
fsts
bswap
adc
imul
mov
adc
jo
je
fisttps
pop
outsb
jg
sub
dec
dec
and
jle
andb
sbb
andl
shl
cmpsb
sbb
xchg
add
lods
push
lods
xor
mov
inc
fistps
sub
dec
arpl
aas
xlat
out
xor
pop
pop
jle
jg,pn
xor
sub
repz
xchg
out
fists
fiadds
lea
stos
sbb
rcll
push
dec
fsubrl
dec
jb
in
sahf
push
mov
scas
mov
mov
xchg
ds
test
aad
outsb
out
fidivl
sbb
or
les
loop
mov
fstps
dec
gs
mov
mov
stc
mov
xchg
xchg
xor
rcrl
inc
mov
mov
subl
mov
jecxz
jo
popf
rclb
jg
inc
dec
jp
push
clc
cmp
dec
or
inc
push
ds
push
pop
xor
lcall
cltd
or
jne
inc
andl
loop
lods
add
mov
xchg
std
dec
fisttpl
jl
push
inc
cmp
sbb
ja
jno
xchg
sbb
sub
sub
testb
rcr
lods
push
fwait
dec
fs
mov
in
cmp
mov
arpl
pop
mov
add
les
push
lret
sbb
outsl
or
out
push
push
jo
jmp
pop
lahf
jge
mov
hlt
leave
or
clc
mov
add
sbb
pop
test
loopne
mov
sete
jmp
mov
dec
xor
cld
mov
cli
or
test
or
adc
jg
lds
add
aas
inc
gs
and
pusha
test
push
lret
lahf
sub
dec
roll
clc
mov
jg
xlat
cltd
ja
adc
xchg
and
fisttps
cmp
outsb
fdivs
or
cmp
sahf
cld
stos
rcrb
xchg
dec
mov
mov
mov
xchg
xchg
inc
lea
sub
xor
jns
jecxz
clc
out
add
inc
addr16
loop
insb
leave
mov
adcb
push
cltd
mov
sti
out
daa
lret
mov
fcmovu
shlb
shrl
dec
lret
js
mov
arpl
dec
sub
movsl
jg
popa
imul
btr
xchg
jae
fwait
pop
and
fcompl
loop
notl
adc
enter
outsb
mov
or
in
xchg
jo
push
jle
test
pop
bound
negl
cmp
ficomps
fstpl
ja
mov
mov
lods
sbb
xlat
in
gs
pop
lods
push
push
jg
aaa
push
xchg
xchg
adc
nop
mov
das
cmp
xchg
test
popa
xchg
push
in
sbb
push
fsts
pop
es
movsl
ja
xchg
call
sarl
rorl
pop
adc
mov
rorb
jno
cmp
lret
xor
rcrl
mov
jb
cmp
xchg
cli
add
push
mov
movsb
inc
adc
out
xchg
pusha
cmp
pop
addl
xchg
and
sbb
jne
and
dec
lret
lret
aad
sahf
pop
sub
das
repnz
jbe
int
imul
pop
divb
lret
sbb
gs
out
repz
adc
ss
clc
fists
dec
cmp
mov
rcrb
addr16
push
add
arpl
outsb
pusha
call
movsl
jae
cmpsl
add
nop
sbb
out
xchg
mov
dec
mov
or
das
sti
mov
push
sub
sbb
out
lock
movsl
fdivl
mov
jmp
adc
adc
aam
aas
cli
push
cmp
mov
inc
clc
inc
in
and
inc
pop
xchg
jbe
shll
xor
adc
mov
inc
add
xlat
pop
pop
insb
iret
pusha
pop
rorl
mov
out
cs
std
and
mov
sub
sub
repnz
pop
scas
idivl
aaa
stos
inc
or
repz
cltd
addr16
inc
leave
movsb
pop
aaa
jmp
jno
or
shll
cld
or
push
popl
loop
adc
xchg
mov
mov
aas
or
fsubl
sbbl
xchg
or
push
push
inc
inc
jecxz
push
push
aas
mov
les
push
fucomi
popa
mov
add
lods
xchg
and
daa
push
mov
js
aaa
pop
or
iret
pop
and
pop
xor
xor
cmpsl
mov
aam
mov
jbe
sti
cmp
or
mov
dec
and
out
xor
xor
jbe
xor
jbe
pop
dec
ret
jecxz
xor
ja
jbe
push
sub
ljmp
ds
inc
test
lahf
cmp
add
push
cli
gs
imul
pop
leave
shlb
pop
cmp
ret
push
push
aad
lods
je
aaa
pop
jl
sbb
bound
mov
pusha
shrl
jae
push
test
mov
pop
mov
cmpsb
popf
xchg
pop
lods
bnd
inc
insb
push
inc
in
ja
add
or
js
sbb
js
xchg
call
dec
xor
outsl
fisubrl
stc
or
mov
les
inc
pop
sbb
push
das
push
push
rcrb
sub
add
notb
aaa
sbb
insb
mov
loopne
inc
cli
dec
add
or
mov
fcmovnu
hlt
lcall
call
decl
out
sub
aas
ja
fldcw
loopne
andl
pop
mov
fldz
bound
pushf
pop
out
fsubrl
jmp
imul
fwait
icebp
dec
ja
xchg
rorb
or
int
adc
push
pop
cmp
in
ljmp
lahf
mov
dec
dec
cmp
iret
leave
mov
pop
sub
xchg
mov
scas
rcll
test
mov
stos
popa
push
push
enter
mov
ljmp
cmp
test
push
rorl
rorb
sub
push
and
and
or
into
mov
cmpsl
push
sub
ret
mov
pop
mov
fadds
enter
es
movsl
jnp
gs
jno
and
mov
cmpsl
push
fmuls
pop
ss
sbb
popf
movsl
jne
insb
mov
daa
jnp
mov
jle
mov
pop
fdivrs
imul
pop
add
cmp
ret
je,pn
pop
repz
sbb
cwtl
out
js
je
dec
in
fwait
and
jmp
fwait
and
xor
adc
adc
inc
test
daa
cmp
jg
jp
xor
sti
xlat
cmpsl
push
or
ds
or
cmc
js
or
in
ljmp
push
test
sbb
jnp
rorb
dec
pop
jno
call
cmp
sahf
add
push
mov
mov
out
stos
sub
dec
mov
aaa
lret
xchg
push
imul
adc
jne
adc
js
push
hlt
enter
sbb
jge
je
fwait
int
push
out
inc
mov
or
shrb
adc
ss
rcrb
adcb
xchg
inc
int
jmp
pop
jmp
mov
xor
daa
dec
sahf
jp
jp
cmp
inc
add
mov
imul
inc
lock
and
fcmovnb
mov
dec
pop
loope
jmp
mov
sub
lret
shrl
out
or
mov
addr16
mov
mov
xchg
and
int
mov
gs
popa
into
sub
dec
jno
mov
mov
mov
shll
or
mov
cs
aas
fimull
popa
or
fiadds
test
adcb
lcall
adc
inc
xchg
sub
push
push
push
out
xor
xor
jnp
ja
cmpsb
cwtl
subl
popa
repnz
mov
mov
sti
testl
push
xor
iret
repnz
add
call
mov
cmc
sbb
add
cmpsb
cmp
cld
outsb
cmpsb
lods
subl
lock
dec
mov
outsb
cmp
pop
cwtl
push
push
rcrb
jecxz
xchg
int
or
mov
lret
or
icebp
out
imul
xor
shlb
je
fwait
movsb
filds
lods
inc
repnz
lahf
repnz
fcoml
or
jb
adc
inc
test
jmp
inc
dec
jo
jmp
fcmovnbe
test
xor
outsl
and
mov
in
fnstcw
test
fmuls
jg
gs
add
sub
jne
sbb
cmp
dec
mov
dec
test
jp
adc
mov
sub
ss
mov
ljmp
cmp
and
pop
jmp
jns
imul
inc
enter
lahf
push
mov
repz
push
inc
aas
out
push
loope
outsb
cmp
push
imul
xor
and
pushf
rcrb
cmp
fmull
xchg
xor
push
repz
xchg
rorb
xchg
std
adc
and
inc
or
out
in
push
mov
jnp
dec
pop
aas
dec
jb
adc
in
std
cmp
pop
push
jl
aas
fmulp
jecxz
pop
mov
out
fadds
mul
mov
std
ljmp
sub
aad
and
xor
xor
insl
inc
sub
lahf
pop
xor
sbbl
and
bsf
sub
scas
push
cmp
int3
dec
cmp
ret
push
adc
repz
or
cmpb
aam
cld
mov
shlb
cmp
sub
push
enter
pop
pop
rorb
fsubs
loope
pop
xor
mov
fbstp
jmp
mov
xchg
loopne
icebp
and
jmp
sub
mov
pusha
dec
in
nop
hlt
xor
jle
xor
test
sub
inc
popa
cmp
repnz
adc
adc
xor
lcall
loopne
jecxz
mov
sarl
aam
mov
or
or
pop
inc
popf
mov
pushf
jmp
push
fdivs
and
leave
or
jle
or
add
xor
sub
add
insb
in
jnp
iret
mov
popa
dec
test
push
dec
sub
inc
mov
xchg
mov
mov
dec
or
mov
xchg
inc
dec
imul
xor
mov
adc
insb
dec
mov
mov
dec
mov
cltd
xor
icebp
clc
fsts
push
push
push
lea
and
push
xchg
adc
fldt
hlt
stos
sbb
mov
int3
or
add
push
xor
icebp
mov
mov
aas
insb
mov
sbb
xchg
xchg
mov
push
repnz
add
sub
jnp
loope
push
jb
repz
lods
xchg
pop
inc
inc
and
int
mov
mov
mov
outsb
mov
or
gs
lock
movsb
fsubrl
sar
movsl
inc
outsl
jge
pop
std
cmp
subb
out
addr16
adc
and
jle
xchg
sub
or
repnz
sbb
cmpw
ret
pushf
mov
es
and
hlt
lret
ror
sbbb
aas
cmc
ds
rorl
scas
jle
adc
dec
in
imul
shl
stos
cmp
mov
fs
mov
jno
lds
loope
mov
adc
dec
call
test
jo
cmp
or
dec
aad
or
cwtl
sbb
and
inc
sarl
stc
stos
push
mov
jmp
fsubs
or
dec
cs
les
pop
push
inc
sbb
sbb
push
inc
xor
push
int3
es
outsl
outsb
push
test
mov
in
dec
xchg
loope
dec
mulb
jg
or
sub
cmp
shlb
mov
jb
movsb
lea
test
and
ss
test
and
gs
imul
xchg
vmread
push
das
lods
fnstenv
xchg
imul
test
sub
sbb
xchg
mov
mov
push
out
jbe
cmc
xchg
xchg
fiaddl
mov
stos
xchg
mov
sub
push
imulb
pop
pop
xor
sbbb
sub
xchg
stos
inc
sbb
pop
or
mov
lcall
iret
das
mov
lea
jmp
ljmp
ljmp
mov
pop
push
xor
fwait
aam
pop
in
xchg
xchg
pop
cvtps2pd
inc
cld
dec
test
push
je
sbb
mov
mov
sbb
cmpb
jae
scas
and
push
dec
mov
jg
repz
mov
mov
dec
out
enter
pop
push
dec
repz
and
mov
imul
pop
sub
add
push
lock
je
sbbl
push
divl
sahf
ja
rcrl
xor
in
mov
mov
lock
jp
adc
enter
rorl
xor
and
rcr
in
xchg
dec
xor
and
repz
cmpsl
jnp
xchg
xchg
cmp
fdivp
push
and
jl
xchg
mov
sbb
jb
jo
and
pushf
jno
push
leave
clc
jmp
lods
mov
test
xor
mov
or
push
mov
pop
sub
bound
adc
movl
test
mov
add
addb
scas
mov
inc
cmp
cltd
xor
dec
xchg
rorb
push
out
cmp
les
insb
das
loopne
mov
outsb
rcrl
test
cmpsl
in
aam
out
mov
push
push
add
hlt
leave
mov
int
nop
inc
jge
dec
filds
add
mov
or
je
push
push
dec
ljmp
or
mov
je
cmp
sbb
scas
and
rorb
mov
lahf
movsl
push
dec
sbb
or
xchg
out
sbb
nop
or
test
subl
les
test
mov
out
mov
xchg
pop
pop
mov
jb
sbb
cmp
std
mov
push
enter
daa
notb
pop
shl
in
test
mov
inc
sahf
push
jg
in
mov
pop
cltd
xchg
push
mov
mull
mov
rcrb
pop
loop
jno
jb
cmc
sub
xor
mov
and
das
push
mov
mov
aaa
in
xor
clc
inc
mov
xlat
call
popa
dec
fs
jmp
mov
orb
jp
out
mov
inc
jb
xor
xchg
cmp
adc
mov
xor
sti
or
icebp
aad
inc
sub
xchg
push
xchg
icebp
je
mov
xchg
lods
popa
adc
sub
arpl
movsb
jecxz
and
les
lcall
push
dec
dec
xor
in
xchg
mov
cmp
dec
xchg
or
jo
shl
addl
ds
pop
fstpl
sbb
jno
mov
fldl
in
push
sub
add
and
push
fsub
mov
push
cwtl
mov
jge
cmc
pop
jne
xchg
je
mov
mov
pop
popa
adc
fcmovnb
stc
push
pop
out
pop
les
lret
xor
jae
lret
pop
out
cmp
mov
jb
iret
jmp
and
ret
int
repz
scas
jo
jmp
fmuls
adc
dec
mov
dec
dec
push
aaa
ficomps
test
aaa
xchg
cmp
xor
out
xor
and
sub
dec
clc
inc
pop
aam
xor
xor
cmp
jl
pop
add
std
jb
jb
fmuls
icebp
mov
sarb
mov
sbb
icebp
daa
rorb
sarl
aas
sbb
ja
ret
pop
cmp
pop
out
jne
push
xor
or
cmpb
in
xchg
jo
mov
cmc
out
stc
outsb
push
adc
add
jmp
std
push
mov
xlat
adc
test
or
jo
into
fimuls
mov
xchg
sub
and
loop
push
pop
dec
imulb
pushf
jo
xchg
daa
lea
sbb
pushf
cwtl
mov
push
out
dec
xor
movsl
repz
insl
mov
cmpsl
rclb
rcr
ljmp
cs
adc
fistps
jae
leave
pop
xchg
inc
dec
imul
shlb
xor
loop
inc
test
lcall
cld
pop
fucomi
imul
fimull
int3
mov
jbe
scas
inc
loope
or
inc
movsl
mov
inc
mov
xchg
mov
data16
sti
jnp
aam
cmp
es
popf
mov
xchg
push
lret
inc
nop
jmp
mov
xlat
cmp
and
icebp
test
dec
push
mov
call
iret
mov
shll
ja
jmp
or
je
lock
push
cltd
fsubrs
pop
pop
test
mov
sbb
dec
dec
cmp
movsb
jg
mov
cmp
sub
pushf
lret
mov
xchg
mov
insl
pop
aam
mov
cs
and
arpl
mov
and
jnp
xlat
mov
cmp
hlt
sub
jbe
dec
leave
sbb
xor
push
and
arpl
inc
xor
dec
cmp
xchg
jnp
pop
dec
mov
push
data16
movsb
jbe
inc
lcall
xchg
xor
mov
pushf
fdivrp
mov
ljmp
and
punpckhbw
mov
lret
jmp
cs
lret
scas
push
sti
mov
lret
adc
rolb
shr
dec
or
shlb
dec
insb
stc
aas
xor
jno
xor
jnp
xlat
fnstsw
mov
mov
aad
pop
xlat
xchg
out
mov
dec
bnd
inc
test
enter
mov
inc
popf
lods
out
xchg
inc
outsb
mov
and
push
inc
xchg
cmp
pusha
jns
sbb
sti
ret
lahf
outsb
push
xlat
mov
ss
sbb
shlb
call
out
or
inc
fs
jle
or
cmp
mov
ret
popa
and
aad
das
mov
in
xlat
mov
stos
xor
jle
push
xchg
lcall
out
mov
imul
mul
ficoms
jecxz
inc
sub
jecxz
and
pusha
jmp
and
sub
or
pushf
push
je
pop
jle
xor
push
push
in
popa
stos
mov
into
mov
insl
push
jecxz
insb
sub
ret
in
pusha
dec
cmpsl
pop
lods
push
push
sub
inc
repz
mov
push
xchg
cmp
cbtw
pop
shrl
xor
mov
mov
and
cmp
mov
xchg
ss
lret
add
data16
push
xlat
insl
mov
out
rep
mov
inc
push
adc
jmp
lods
popa
adc
pop
dec
jnp
iret
sub
lret
push
imul
add
mov
xchg
out
fsub
sub
inc
fldl
movsb
mov
fmull
jmp
cltd
or
push
mov
fbld
movsb
adc
push
xor
cmpsl
xchg
add
test
xchg
cmp
mov
xchg
cs
add
lds
xchg
sbb
add
orb
aad
outsl
adc
lcall
or
in
dec
dec
and
ss
or
mov
sbb
pop
push
icebp
aam
sub
subb
mov
push
jb
mov
loop
dec
or
orps
push
rcrl
loopne
aad
dec
mov
stos
dec
adc
je
lret
rclb
cmp
mov
pop
cmp
divb
scas
addr16
and
sar
iret
pop
lods
repz
test
insb
out
dec
fisubl
pop
dec
movsl
lret
pop
sbb
xlat
insb
loope
int
js
sahf
ficomps
addr16
or
adc
lret
enter
adc
pop
push
xchg
loopne
sbb
xchg
xor
pop
add
sbb
sbb
inc
out
add
fsubs
xor
andl
and
insb
lcall
leave
mov
test
or
popa
data16
jl
pop
lret
inc
cmp
push
adcb
ds
inc
movsb
dec
mov
xchg
and
xchg
test
pop
mov
scas
int3
jmp
enter
cli
je
outsb
mov
ss
jo
and
push
mov
mov
push
shlb
xchg
in
mov
and
cmp
aad
fmul
inc
push
sub
dec
jb
adc
xchg
push
xor
fmuls
fdivr
fisttps
dec
nop
scas
rolb
push
push
mov
leave
sub
mov
mov
jmp
fbld
xchg
or
mov
xchg
sbb
ljmp
lea
xchg
sub
in
adc
cmp
inc
xchg
jae
dec
in
jge
jns
or
xchg
dec
sbb
cmp
jle
and
push
push
stos
movsl
mov
leave
repz
mov
mov
xlat
xchg
cmp
add
shlb
divb
fstl
fistpl
fdivl
jmp
jne
fsubr
out
cmp
cs
jmp
sbb
mov
in
pop
dec
or
nop
out
iret
daa
jg
out
cwtl
push
ds
push
push
test
fiaddl
lret
cli
jno
xchg
lods
adc
xor
fnstenv
out
sbb
jecxz
jnp
and
sub
pop
mov
mov
adc
mov
outsb
mov
cs
leave
dec
dec
gs
ficoml
sbb
jle
mov
inc
aas
push
xor
push
push
out
sub
cli
bound
sub
sahf
mov
add
fbld
mov
jp
es
lods
and
lods
mov
pop
or
adc
lcall
mov
sub
push
repnz
outsb
sub
test
xor
test
adc
pop
mov
cmpsl
aad
push
adc
pop
push
or
int3
adc
inc
bound
stos
jo
sbb
add
outsl
jns
xor
jno
sbb
and
enter
imul
jae
in
test
sub
pop
repnz
mov
add
xorl
xor
add
shll
jmp
inc
pop
jns
cmp
cmpsl
pop
cld
add
jg
rcrb
aas
pop
fcomi
dec
pop
imul
mov
cmp
pop
lods
dec
xchg
idivb
es
jp
call
dec
loopne
stc
push
and
out
js
incl
and
xlat
sbb
push
ret
pop
cmp
pmulhuw
cmp
pusha
scas
mov
sahf
pop
lahf
sbb
lea
mov
fmuls
mov
pop
inc
mov
dec
mov
popa
and
xor
pop
insb
and
std
push
bound
push
daa
iret
adc
popf
mov
push
jbe
dec
jb
mov
cmc
cmp
xchg
data16
and
sub
sbb
push
push
jnp
xchg
mov
mov
outsl
adcb
xor
sbb
movsl
inc
mov
lahf
mov
outsb
sahf
jns
cmp
sbb
add
adcl
xchg
in
mov
mov
add
dec
push
fidivl
cmp
and
inc
jo
and
ret
adc
jg
fwait
movsl
pop
xchg
push
and
mov
movhps
push
mov
adc
ja
aad
mov
cmp
mov
sbb
dec
jmp
sbb
ja
xor
add
sbb
push
sub
mov
cwtl
sub
insb
dec
pop
adc
test
aaa
or
push
sub
or
adcl
push
cld
xlat
fs
imul
jno
xlat
and
xchg
out
test
addr16
dec
mov
fs
sub
sbbl
jno
clc
test
dec
dec
out
ret
fadd
cmp
test
sahf
dec
inc
jne
cmp
cmp
adc
jecxz
cmp
in
mov
fidivrl
outsl
fidivs
bound
test
daa
fmul
pop
mov
lret
mov
test
lods
shll
adc
fadds
push
jmp
and
popl
int
mov
sub
mov
notb
andl
jge
xchg
dec
pop
jl
arpl
sbb
and
and
pop
jecxz
ror
mov
push
pop
jne
pop
dec
outsb
mov
pop
lahf
add
inc
jmp
pop
adc
mov
mov
imul
mov
jl
add
mov
and
xchg
inc
jmp
adc
xor
add
stos
xor
jl
mov
lock
mov
insb
sti
hlt
daa
mov
jmp
cmc
fcomps
jns
ret
xchg
jg
nop
and
mov
and
inc
test
xchg
push
frstor
jl
aas
sbb
pushf
movb
dec
push
test
pop
mov
add
sbb
lahf
mov
inc
in
ljmp
popf
inc
daa
ljmp
jmp
push
pusha
mov
mov
rorb
lret
and
jg
or
xchg
dec
push
cmp
cwtl
sbb
ss
cmc
dec
jo
sti
cs
push
popa
scas
and
sbb
lcall
xor
cs
sbb
shrb
dec
jb
xchg
jb
lods
test
clc
inc
shlb
gs
pop
lahf
xchg
dec
jbe
rcrl
jne
mov
lret
out
sub
push
mov
into
js
ret
push
xchg
jo
mov
lods
scas
sarb
pop
lods
xor
sbb
das
into
adc
cltd
and
mov
and
or
cmpsb
hlt
cli
add
aaa
gs
push
xchg
std
cmp
and
dec
inc
jmp
xchg
dec
push
loopne
leave
pop
jg
adc
cmp
ljmp
mov
mov
cmc
rorb
push
cmp
cmp
enter
loopne
leave
push
test
add
out
or
sub
mov
mov
push
in
cs
imul
std
out
cs
or
sbb
mov
xor
int
ds
mov
aam
pushf
sub
bound
push
sub
jmp
mov
aas
aaa
cwtl
in
in
mov
inc
pop
out
inc
xchg
cld
sub
sub
int
popf
sub
and
xchg
jl
mov
int3
sub
and
jle
fs
int
stos
lcall
stos
js
pop
push
mov
aaa
test
dec
pop
sub
fldcw
xchg
mov
mov
inc
ret
clc
and
mov
cmc
es
fs
loop
sti
and
jns
jbe
sbb
lock
sti
adc
or
sub
jg
mov
es
dec
ret
repz
adc
or
cli
lret
std
push
scas
dec
aad
sti
pop
inc
ja
pop
dec
outsl
jle
das
xor
test
pop
rolb
push
lret
outsb
in
stos
mov
stc
incb
jle
sbb
add
xor
fsubrs
jl
bound
xchg
in
xchg
test
adc
hlt
mov
xchg
lods
lea
dec
cmp
sub
std
sub
popf
jo
call
testl
aam
pusha
xchg
jmp
rcll
jns
leave
mov
push
add
repz
mov
addb
shrb
lods
add
adc
outsb
stc
pop
out
pusha
cwtl
rcll
push
test
mov
adc
inc
dec
cmpsb
dec
mov
push
sub
divl
repnz
outsl
lds
bound
xlat
xchg
rcrl
xor
faddl
pop
sub
or
xchg
leave
clc
cmc
and
cmpsb
jecxz
aam
das
push
xor
fwait
sbb
inc
loop
xchg
jecxz
cmp
cwtl
aaa
inc
mul
cmpsb
push
mov
cmp
jnp
sbb
xlat
out
loop
push
insl
and
fnstsw
imul
pop
cmp
cmp
push
ret
jge
cmp
stos
mov
loop
push
dec
sbb
adc
or
mov
jl
jbe
mov
xlat
inc
adc
shlb
cmpb
mov
mov
fstpt
jno
cmp
stc
loopne
inc
mov
outsb
xchg
jbe
xor
dec
imul
int
xchg
cld
xor
or
into
sub
shl
gs
test
cmp
push
cwtl
dec
jg
mov
add
gs
cwtl
xlat
fisubrs
xor
into
sar
cmc
jl
fucomp
or
and
xchg
adc
mov
push
dec
pop
test
xchg
cmpsb
mov
dec
mov
mov
sti
dec
dec
test
jnp
in
imul
mov
add
jae
pop
mov
movntps
sub
jp
rolb
mov
pusha
nop
mov
insl
pusha
push
incl
xor
out
mov
icebp
jecxz
add
sbb
add
lds
push
in
xchg
arpl
sbb
mov
dec
dec
push
mov
imul
or
jp
sub
in
pop
or
enter
mov
mov
scas
xchg
xor
js
xchg
adc
mov
cld
or
adc
arpl
mov
sub
pop
xchg
adc
in
sub
js
dec
bound
mov
in
pop
mov
in
inc
daa
mov
out
sub
push
push
sahf
sub
out
in
sahf
inc
inc
arpl
rorl
pop
cmpsb
cmp
inc
mov
cld
jle
popf
sbb
xchg
inc
fstps
stos
into
repnz
stos
add
pop
gs
adc
pop
dec
mov
scas
pop
inc
idivl
pop
xchg
movsl
js
dec
js
dec
pop
les
adc
mov
mov
lea
add
out
mov
stc
mov
sbb
mov
xorl
mov
push
ds
fsubrs
sbb
inc
mov
or
mov
das
enter
mov
adc
dec
add
cltd
outsl
adc
inc
jg
pop
rol
xchg
call
push
fwait
mov
ret
sbb
push
out
cli
lahf
pop
sub
das
xor
mov
mov
lret
jmp
out
push
xor
cmc
scas
ret
iret
adc
mov
cmp
sub
sbb
xor
cmc
mov
inc
aam
sbb
fisttpl
add
xchg
movsl
ret
push
lock
mov
call
ja
outsb
inc
ret
mov
xchg
aad
ficoml
cmpsb
mov
jmp
jg
and
pop
push
test
int3
mov
jge
cmp
xor
fbstp
mov
push
fldcw
xor
xchg
cmpsl
pop
loopne
mov
and
sub
adc
mov
inc
ljmp
aam
rcrb
cmp
pop
addb
jno
xchg
dec
lock
in
cli
jae
shrl
or
push
insl
fwait
shll
ss
push
push
dec
inc
test
inc
out
clc
inc
gs
clc
dec
in
in
dec
and
xor
inc
mov
pop
pop
mov
sub
les
sub
mov
stos
mov
gs
pop
push
jg
leave
testb
ret
jp
inc
push
xor
mov
rolb
sbb
je
and
loopne
ret
mov
inc
movd
gs
fimull
xor
mov
xlat
add
out
jae
lods
dec
movsb
leave
mov
ret
popf
sarl
in
push
xchg
pusha
loop
mov
int
je
lods
int
in
push
out
inc
cmpsl
in
pop
cmp
cmp
in
mov
insb
pop
imul
fidivs
lock
cmpsl
cmpsb
mov
or
fldcw
ja
mov
out
imul
and
sahf
insl
stc
test
in
xchg
jne
mov
pop
mov
inc
daa
inc
cwtl
in
cld
fwait
icebp
jnp
test
cmp
inc
push
fmul
jg
cmpsl
xor
mov
mov
mov
mov
jne
adc
sbb
mov
or
pop
pop
pushf
mov
pop
ret
push
icebp
cmpsl
inc
ficoml
push
sub
jmp
jg
mov
fcmovnbe
es
leave
pop
andb
imul
sbb
inc
sub
leave
mov
mov
push
cmp
xchg
and
xlat
imul
jecxz
outsb
fwait
and
add
std
fstpt
pop
mov
xor
mov
pushf
push
enter
dec
leave
rcll
test
data16
pop
push
pop
clc
jg
arpl
jge
cld
mov
adc
mov
inc
mov
pop
adc
jmp
call
dec
xchg
jle
xchg
ljmp
inc
xor
xchg
jp
and
xor
mov
and
or
scas
int
bound
outsb
add
or
jmp
icebp
jle
sub
pop
out
dec
bound
aas
inc
mov
adc
cld
pop
fsubs
jmp
fwait
cmp
das
leave
pop
enter
jae
mov
jo
xchg
jecxz
in
cmp
dec
mov
sbb
popa
jecxz
push
stc
addb
jmp
dec
orb
xchg
push
cmp
das
mov
and
push
fimull
push
push
xor
pop
int3
mov
cld
mov
inc
daa
int3
fldenv
cwtl
mov
pop
and
sbb
xlat
cmp
or
repnz
or
out
lock
pop
xchg
test
push
pusha
sahf
jns
mov
mov
sbb
xlat
int
sbb
xor
sub
stos
out
xor
mov
ror
jle
or
loop
arpl
add
mov
sbb
movsl
jbe
ror
aas
sbb
sub
or
mov
int
fisubs
andl
add
leave
add
and
mov
mov
xchg
bound
aad
pusha
or
stos
pop
inc
xlat
jp
xchg
loopne
js
lcall
adc
push
jg
mov
imul
inc
adc
and
add
pop
ds
cmp
or
xchg
scas
or
add
arpl
push
xchg
add
insb
rcr
lds
mov
test
fcomps
inc
cmpsb
fs
pop
xor
mov
into
lods
in
lods
sub
jnp
cmp
inc
aaa
push
and
sbbb
or
pop
xchg
jae
adc
add
xchg
icebp
cmp
jmp
out
push
arpl
call
loope
push
pop
loope
and
cs
xchg
pop
pop
out
pop
test
jne
in
push
sahf
cld
sub
imul
sbb
push
mov
lea
dec
jae
sub
add
std
mov
jg
loopne
inc
js
pushf
cmp
adc
in
add
adc
cld
push
dec
inc
add
mov
imul
imul
dec
add
clc
or
sub
mov
add
push
test
jge
int
aas
adc
mov
add
jle
push
gs
insb
cmp
mov
decl
frstor
mov
inc
ret
ss
rclb
push
mov
inc
ljmp
hlt
push
stc
insl
loopne
xor
push
jae
ljmp
out
inc
pop
push
shr
sub
pop
push
in
test
bound
mov
dec
mov
sbb
push
je
or
and
xchg
repz
shrl
inc
addr16
imul
ret
jnp
fdivrl
pop
bound
mov
sub
ss
mov
add
lock
mov
ret
sub
fwait
inc
jno
pop
sarl
enter
sbb
mov
in
jo
or
jmp
mov
mov
sub
mov
add
jno
lret
pushf
push
sbbl
xchg
sub
cmp
int
insb
add
or
insl
push
adc
cld
insb
cli
fnstsw
aas
rcll
insb
mov
mov
sahf
xor
jo
aad
dec
cmpsl
out
cmp
shr
xchg
aaa
push
or
push
test
mov
cwtl
icebp
imull
adc
mov
dec
rorl
mov
mov
test
sub
gs
sbb
je
mov
movaps
stos
add
int
adc
and
dec
lea
mov
push
stos
pop
pop
iret
rcll
mov
dec
inc
xchg
out
pusha
xlat
repnz
test
push
icebp
js
mov
push
test
aam
in
mov
jns
out
mov
scas
dec
aaa
addr16
add
jb
xor
xchg
addr16
test
test
pop
sbb
mov
ss
data16
test
pop
mov
push
call
cmp
mov
dec
std
lahf
shrl
add
mov
addb
pushf
loope
leave
repz
lahf
pop
imul
dec
int
mov
jno
lea
jno
fstpl
inc
jne
int3
outsb
jae
jbe
mov
jne
mov
mov
or
int3
or
ret
jmp
test
or
ret
lds
aam
pop
arpl
mov
loop
lret
pop
out
mov
test
outsl
pop
cltd
push
je
popf
scas
shll
pop
shll
inc
movsb
inc
xor
and
fld
and
or
or
mov
and
test
pop
or
imul
mov
cmp
test
jns
ja
or
bound
push
push
cmp
jg
sahf
pop
or
xchg
cli
and
mov
call
sbb
push
sub
xor
lods
fsub
push
loope
cmp
xor
jl
daa
aam
inc
bnd
stos
mov
into
inc
add
add
cs
in
jg
es
lock
movsl
das
fistl
mov
test
add
xchg
and
add
and
sbb
iret
insb
gs
xlat
or
sub
adc
movntq
dec
imul
dec
mov
test
int
dec
pop
iret
xchg
lcall
mov
loop
repnz
push
movsl
in
dec
adc
cmp
scas
lcall
mov
mov
aad
fucomip
inc
sbb
jb
jmp
inc
push
cmp
inc
pop
sub
lds
inc
pop
les
inc
int
mov
xchg
dec
dec
jae
or
push
xchg
lcall
sbb
mov
es
push
inc
sbb
int
std
aas
lret
or
fcmovb
dec
mov
push
shll
ret
push
sub
lret
es
cld
jge
adc
fs
fmuls
sti
scas
loope
scas
cmpl
inc
and
iret
loope
aas
flds
imul
call
test
mov
adc
fistpll
ljmp
rorb
bound
enter
or
jbe
mov
popf
fldt
cmc
fiadds
or
sub
mov
inc
shr
mov
xchg
hlt
or
mov
aas
sbb
imul
xlat
test
rolb
pushf
adc
mov
jnp
mov
insb
cmpsb
push
sbb
cmp
xchg
inc
mov
pop
sbb
fmul
mov
jo
mov
cmp
cld
subl
sub
and
jle
xor
das
cli
cmp
scas
pop
jmp
mov
jecxz
xchg
popf
sbb
je
mov
ja
test
push
cs
outsb
shl
sarl
prefetch
or
out
fmul
loop
adc
jp
jno
dec
or
lahf
loopne
fidivrs
mov
rcll
mov
lahf
cmc
push
fcoml
fstl
sahf
sbb
inc
movb
mov
sub
lea
or
outsl
lahf
mov
jg
movsl
push
mov
mov
push
scas
xchg
sub
add
push
aaa
push
jl
or
fisubs
fcmovnbe
in
xchg
and
jg
cwtl
push
pushf
mov
xchg
sub
adc
das
mov
and
inc
push
les
icebp
adc
adc
imul
dec
xchg
fisttpll
icebp
cs
sub
mov
sub
sbb
pop
cmp
pop
or
xor
push
lahf
mov
in
clc
andb
sahf
ljmp
mov
xorl
repz
jecxz
pusha
ficoml
fyl2x
and
sbb
adc
mov
pop
fisttpl
sub
jge
mov
test
dec
in
mov
push
into
cmp
xchg
popf
shll
mov
mov
dec
xchg
lcall
pop
pop
xor
pop
test
dec
xchg
jnp
mov
push
sub
mov
lds
repnz
outsl
dec
mov
lock
das
imul
ja
fisubrl
sub
dec
in
ja
sbb
jp,pt
dec
data16
iret
adc
icebp
nop
dec
push
frstor
popa
repz
lds
jg
sarl
mov
int
sbbb
inc
push
icebp
mov
jo
xchg
mov
in
jmp
sub
add
dec
leave
rcr
daa
lds
pop
push
or
lea
push
bound
jmp
fldcw
lds
jae
loop
movsb
inc
jo
ss
mov
movsl
test
icebp
dec
fcomip
cwtl
notl
xchg
imul
sub
ret
es
mov
push
add
repnz
push
push
jne
testl
cmp
sbb
inc
xorb
adc
sarl
lods
aaa
js
mov
js
adc
sbb
cmpsb
pop
jb
jbe
test
jno
test
push
xchg
sbb
sub
outsl
sbb
mov
or
pop
inc
pushf
test
xor
push
mov
lock
dec
test
mov
lahf
test
jle
sbb
jnp
pop
out
lcall
inc
mov
dec
cmp
jo
add
call
dec
imul
testl
push
jle
in
mov
push
pop
or
add
daa
addb
inc
mov
test
stos
jmp
mov
loopne
pop
mov
cmp
data16
jmp
and
fdivrl
imul
sub
faddl
push
sub
clc
sub
mov
dec
bswap
pusha
xrelease
fcmovbe
adc
andl
mov
dec
jl
stos
stc
sbb
mov
cmp
ffreep
mov
fmuls
jecxz
jle
sub
add
data16
loop
rol
and
inc
enter
add
jle
es
add
adc
adc
jecxz
int
cld
ret
jbe
lahf
cli
outsb
subb
int
scas
sbb
enter
pushf
sub
cmc
jmp
sub
cmpsl
and
shll
in
pop
insb
dec
scas
das
outsb
mov
adc
inc
int3
fstl
fdivrl
scas
xor
and
push
pop
xor
jae
cmp
push
out
jp
and
push
test
aad
and
sahf
arpl
gs
mov
ss
fldl
aam
xor
bound
xchg
in
push
fstpt
or
add
mov
jb
jae
mov
cmp
add
and
icebp
and
lahf
rorb
pop
stos
mov
jno
lds
jp
push
leave
and
out
mov
mov
mov
mov
mov
adc
xor
mov
repz
out
movsl
cltd
test
xchg
dec
sub
mov
aaa
xchg
adc
daa
and
movsl
jo
scas
mull
pusha
sbb
pop
ljmp
out
jg
in
loope
push
mov
test
mov
mov
repnz
je
xor
mov
std
or
std
aaa
mov
or
inc
in
inc
push
xor
jo
insb
test
cs
adc
jl
jp
push
jp
stc
sets
jle
divb
hlt
push
mov
adc
xor
insl
or
test
push
jge
jg
jg
xor
nop
addl
cltd
mov
les
adc
mov
mov
inc
dec
cmp
icebp
ds
loope,pn
push
les
lcall
jb
dec
xchg
pop
imul
int3
out
insl
stos
aas
inc
repnz
xchg
mov
dec
addr16
push
sbb
stc
and
add
out
dec
push
icebp
cmpsb
jne
mov
push
cld
xchg
dec
inc
shlb
cmp
push
out
shlb
jle
fwait
cmp
mov
and
stos
int3
and
push
int
or
aam
sbb
jg
cmc
xchg
mov
jle
sub
je
and
pop
pop
cmpsl
adc
mov
xor
neg
inc
jp
sbb
faddp
dec
jne
cmp
in
orl
xlat
nop
adcb
mov
xor
push
dec
imul
or
scas
add
add
xor
adc
jecxz
sub
adc
add
icebp
and
push
cmp
pop
ds
je
push
add
and
add
loope
xchg
xchg
jae
inc
dec
addr16
xor
psrld
sti
or
stc
lea
pop
or
int
cmp
adc
test
xorl
sahf
inc
mov
xchg
int3
mov
ffree
sbb
pusha
mov
push
jmp
add
xchg
sub
xor
inc
sub
adc
ret
emms
xor
out
cmp
lret
ljmp
mov
ret
fs
jbe
mov
addl
sbb
pusha
imul
lods
gs
sub
cmpsb
sbb
jae
cs
in
dec
jne
jbe
mov
lret
adc
shrl
je
mov
fwait
jb
push
pusha
les
dec
mov
shlb
leave
push
movsl
aad
jns
sti
pushf
dec
push
jecxz
sbbb
sub
icebp
mov
lds
cmp
sbb
les
scas
icebp
adc
mov
push
push
sub
mov
scas
int
dec
sbb
sbb
pop
lods
cmp
jg
clc
push
mov
dec
orb
mov
xor
loopne
jo
in
out
and
cmpsb
popa
add
lods
push
and
clc
hlt
adc
shl
xchg
jge
ljmp
sub
sub
push
mov
push
inc
xor
inc
imul
mov
out
sbb
in
mov
fucomp
lock
out
xorl
push
pop
dec
cmp
dec
outsl
push
lds
xchg
mov
mov
lods
or
nop
push
negb
sbb
lea
jmp
fsubrl
cli
mov
push
push
dec
push
cs
loopne
xchg
mov
add
cmp
cmpb
xor
insl
sub
loope
iret
sbb
or
mov
mov
jmp
lods
sti
mov
pop
sarb
sub
cs
popa
push
sahf
in
mov
in
pop
pop
movsl
test
iret
in
sbb
inc
rclb
xor
cmpsb
mov
mov
mov
xchg
push
dec
pop
jmp
cmp
dec
shlb
test
fmuls
and
dec
les
jno
xor
fs
lret
mov
in
jmp
mov
out
enter
cltd
lret
nop
sub
sarl
xchg
adc
inc
mov
and
lcall
jns
out
xlat
nop
insb
lret
sbb
ret
mov
cmp
dec
dec
add
in
mov
in
and
xor
std
jge
add
pmulhw
adc
inc
ljmp
mov
test
pinsrw
nop
mov
jae
lods
dec
push
ss
andnps
fldt
fwait
cld
push
mov
dec
insl
gs
jg
gs
inc
mov
mov
ds
aaa
inc
and
test
xchg
test
adc
fistps
mov
fnstenv
enter
xchg
int3
lcall
ret
add
push
int
outsl
std
jge
mov
lea
pop
shrb
fiadds
lcall
inc
shll
rclb
push
pop
std
es
je
loop
cltd
mov
xchg
cli
adc
or
and
mov
in
sbb
mov
xor
divb
xchg
mov
cmp
mov
les
mov
jmp
jne
dec
pop
cmp
mov
push
inc
pushf
mov
xor
fisttpl
xchg
sarl
adc
mov
mov
dec
insb
xchg
pop
or
jne
xchg
aam
icebp
cmp
inc
iret
lret
cmp
scas
ret
sbb
mov
jl
ja
mov
pop
sub
lcall
shl
and
add
pusha
lock
mov
push
pusha
sbb
and
dec
sub
xor
xor
mov
dec
push
out
add
jb
loope
adc
xor
dec
xchg
sub
adc
or
add
sub
aas
mov
insb
in
inc
in
adc
cmp
aaa
decl
jp
and
imul
cs
sub
movsl
xchg
in
leave
xchg
mov
mov
js
outsl
or
jns
sub
pusha
inc
jno
popf
pop
out
jbe
jl
out
leave
cltd
push
dec
lock
jo
loopne
pop
popf
dec
push
pop
ficoml
int3
movsb
ja
or
cwtl
lcall
lret
lods
jl
fcom
add
das
xor
lea
dec
out
in
inc
push
mov
pop
inc
loop
es
loop
mov
mov
xor
xchg
loop
clc
faddl
mov
cmp
lds
push
cmpsb
add
int
loopne
aaa
pop
leave
sbb
int3
xchg
add
pop
jne
fsts
loopne
xchg
sbb
ret
cwtl
repnz
sahf
scas
push
je
adc
push
enter
sahf
scas
adc
gs
mov
add
and
pop
xchg
jns
add
imul
mov
pop
add
sub
push
sbb
jb
or
bswap
mov
mov
shlb
inc
mov
xchg
push
pop
push
sarb
int3
xor
sbb
in
shlb
or
push
jg
xchg
shlb
mov
or
mov
or
addr16
adc
sub
clc
adcl
lcall
jp,pn
add
jns
andb
movsl
xchg
cwtl
aaa
stc
stos
in
imul
dec
scas
xor
xor
insb
lcall
test
jae
ficoms
push
imul
cmp
pusha
fdivl
or
aaa
lret
in
fcompl
testb
repnz
fcompl
push
xchg
jb
or
adc
loop
mov
jbe
in
push
sbb
outsb
clc
push
jmp
stos
jp
mov
out
pop
push
or
adc
dec
pop
cli
xchg
sbb
fisttpl
jnp
stos
inc
mov
dec
or
call
loop
movsb
xchg
xchg
sub
out
push
popf
mov
inc
sub
inc
std
in
pop
adc
inc
rcll
ficompl
and
push
or
mov
jae
mov
sub
gs
je
loop
aas
outsb
aas
cmp
cmp
lock
sub
subl
inc
push
pop
mov
rclb
in
addr16
sbb
adc
test
push
mov
ret
add
push
push
adc
pop
out
inc
push
out
push
fstl
mov
dec
fldl
outsb
and
inc
fcoml
es
fwait
push
ds
or
sbb
xchg
push
mov
sbb
xlat
mov
out
jmp
xchg
loope
mov
mov
adc
sbb
insb
insb
daa
rclb
jnp
sbb
cs
jo
sub
lret
insl
repnz
xor
sub
pop
nop
nop
adc
sbb
jle
in
push
mov
adcb
fst
and
xor
popa
add
mov
adc
sahf
je
in
jnp
rcll
jbe
xchg
xor
inc
push
imul
mov
or
mov
xor
push
xor
imull
pop
fisubrl
sub
mov
std
clc
mov
pop
jp
xor
roll
push
dec
jo
iret
push
lahf
js
jl
or
and
call
mov
icebp
fisubrs
mov
xchg
xor
mov
call
ficoms
cmp
or
in
mov
add
jns
jnp
adc
sbb
outsl
fldl
xchg
xchg
mov
fpatan
jg
stos
dec
test
jbe
xor
mov
add
xchg
dec
scas
mov
movsb
in
idivl
push
in
or
jl
sbb
jno
jg
imul
xchg
mov
repnz
insl
jl,pt
les
sbbl
add
mov
gs
cmp
mov
mov
sub
and
loop
dec
movsl
jbe
dec
ljmp
fiaddl
inc
inc
stos
jl
sar
movsl
push
inc
inc
cmp
cmc
cltd
dec
loope
daa
jns
or
sub
loopne
lahf
push
jbe
loope
out
test
out
aaa
in
and
bound
pusha
inc
mov
cmc
call
nop
dec
mov
xchg
ret
pop
xchg
push
mov
cmp
pop
mov
outsl
mov
inc
ret
fwait
jg
ds
jno
repnz
or
sub
xor
xchg
xchg
jbe
popa
dec
mov
shll
add
cs
les
fisttps
loopne
xchg
mov
bound
cmp
stos
push
mov
inc
cld
enter
fs
pop
mov
loope
pop
lods
jns
shrb
cld
inc
lret
push
insb
or
movsl
cltd
cs
pusha
xor
push
movsb
rol
ds
jp
pop
jne
aaa
andl
insl
lret
movsl
adc
push
out
jecxz
xchg
xchg
dec
arpl
sahf
clc
mov
outsb
pop
and
dec
pop
adc
dec
add
mov
cld
into
pop
dec
icebp
lret
xor
xchg
jmp
inc
movsb
sbb
adcb
test
aam
push
and
dec
xchg
fisttpl
ja
push
sbb
jb
jae
std
sbb
cmp
lcall
push
out
movb
dec
adc
mov
or
ljmp
jle
and
adc
cmc
mov
fmuls
jne,pt
inc
mov
divl
lret
andl
lds
pop
xor
adc
ja
jmp
and
out
clc
sub
sub
in
ficoml
out
and
fidivs
arpl
jmp
fidivl
cmp
push
aad
and
shrb
push
popa
or
jecxz
and
lods
into
add
cmp
test
dec
test
loopne
cs
int3
push
adc
imul
xor
in
lds
mov
add
dec
loop
sub
in
or
aad
inc
mov
push
or
into
jnp
mov
add
enter
mov
sti
test
pop
out
or
xchg
mov
mov
pop
cmp
push
add
mov
push
dec
xor
mov
sub
dec
insb
or
xchg
test
sub
inc
xchg
cmp
cmp
shrb
xor
sub
jge
arpl
lcall
hlt
dec
je
shrb
xor
cmp
xor
test
xchg
pop
dec
mov
cmp
xchg
fsubp
andb
sar
fcoml
test
adc
xchg
sbb
cmp
sbb
xchg
adcl
dec
pop
negl
mov
and
mulb
lahf
cwtl
aam
mov
jecxz
loope
aas
dec
mov
cmp
pop
cmp
jae
jno
jb
in
mov
arpl
inc
dec
je
fistps
cs
ds
arpl
rcrb
fistl
loope
mov
loope
push
adc
popa
test
inc
jecxz
insb
pop
and
shll
jno
mov
add
jbe
mov
sub
push
pop
dec
xor
iret
sbb
push
out
cmp
arpl
push
mov
js
roll
xor
pop
dec
sub
push
xor
aad
mov
sbb
ficomps
and
popf
jnp
or
and
xchg
ffree
out
stc
cmp
jb
pop
int
cs
icebp
pop
test
das
jl
pushf
mov
inc
in
and
pop
loope
mov
push
movsl
stc
pop
lret
push
mov
in
fwait
lds
andb
ror
xor
cmpsl
cmp
cmpsl
cmpsl
ljmp
cmp
mov
scas
shl
cmp
adc
int3
pop
cmp
and
inc
sbb
xor
xor
je
mov
and
dec
xchg
inc
xchg
or
xor
jo
push
mov
inc
fld1
cld
mov
pop
dec
imul
mov
or
sahf
ret
stos
inc
mov
and
cmp
mov
stos
outsb
imul
stc
sbb
pop
sbb
jne
into
out
xchg
mov
cmp
cmp
enter
stc
ret
cmc
in
or
test
aas
imul
pop
xlat
jno
stos
lods
mov
xor
and
sar
int3
cmp
push
mov
adc
aad
adc
cmp
jle
xor
dec
incb
cld
mov
fistl
jg
test
push
inc
outsb
add
adc
mov
pop
jne
xor
sarb
adc
rcr
push
sub
add
aaa
pop
scas
mov
js
enter
mov
sub
roll
pop
lret
jge
mov
fs
ja
aam
nopl
lcall
xor
dec
pop
fsubl
mov
test
ret
movsb
bound
pop
mov
mov
lds
pop
nop
jge
das
rorl
xchg
stc
aaa
and
icebp
xor
das
pop
lahf
mov
cli
aas
cmp
xchg
out
push
into
pop
and
sub
fxch
insb
insl
aas
mov
test
jmp
shrb
jle
mov
jge
jne
loope
and
mov
aaa
adc
adc
jae
jns
mov
les
in
cmp
pop
pop
mov
aaa
imul
roll
xchg
mov
iret
pop
or
ret
mov
xlat
jnp
push
lahf
enter
inc
jo
ret
cmp
mov
pop
sbb
popf
sbb
jno
out
mov
lds
rclb
adc
xor
cs
push
out
imul
sbb
or
xor
lcall
push
jle
pop
inc
cmp
leave
sarl
adc
adc
sbb
add
repz
test
scas
sbb
mov
inc
mov
mov
mov
lods
push
das
cltd
add
mov
add
push
aam
add
scas
cmp
xor
cmp
add
pop
jb
bound
stos
nop
ss
nop
loope
mov
fmull
jbe
jle
into
mov
sti
dec
mov
or
enter
or
int3
loopne
inc
xchg
inc
cmp
mov
fcoml
gs
inc
arpl
xor
insl
jecxz
sub
adc
ret
inc
mov
fiaddl
fidivrl
cltd
pop
push
call
sbb
imul
scas
mov
rsqrtps
cmp
enter
imul
mov
mov
or
cli
nop
adc
or
std
add
xor
xchg
xchg
add
sbb
or
fwait
adc
dec
sarl
inc
inc
and
fldcw
loop
push
mov
icebp
ss
jb
outsb
popf
sahf
cmc
mov
das
test
imul
jge
shll
jae
outsl
ss
lret
inc
leave
ss
cwtl
jb
cmpsl
mov
cmp
clc
scas
clc
icebp
in
imul
pop
inc
daa
jle
stos
mov
mov
push
fwait
dec
pop
add
cmp
repz
cli
pop
ja
xchg
sub
out
andb
pop
mov
out
pop
or
mov
mov
std
rcll
inc
sbb
negl
sub
push
adc
bnd
inc
or
lahf
in
mov
dec
xchg
in
or
pop
xor
cmc
dec
arpl
out
cmp
clc
jne
call
jns
pop
xor
aas
scas
test
inc
xchg
xchg
lock
xchg
cmp
pop
xor
push
sbb
gs
adc
add
xor
lock
jecxz
pop
dec
push
xchg
ret
xlat
add
outsl
bound
fwait
movl
cmp
jmp
lret
lea
sarl
xor
mov
mov
mov
jnp
push
das
xor
or
and
fwait
push
xchg
ret
sbb
and
push
and
mov
in
inc
mov
addl
or
mov
outsb
ss
cmp
lods
xchg
aam
xor
sub
aad
xchg
xchg
cmc
xchg
push
and
rorb
add
dec
pushf
cmc
cltd
cmp
iret
or
lea
cmp
int
and
push
bound
push
in
cltd
mov
mov
cmc
icebp
stos
outsb
add
mov
fcompl
lret
jmp
insl
xchg
ret
xor
xor
cld
mov
fnsave
scas
pushf
dec
js
insb
gs
sbb
sbb
jl
and
xor
xor
rcrb
sahf
xor
into
je
jl
sub
and
scas
iret
jae
in
lea
push
cld
jmp
dec
mov
push
or
xchg
dec
add
mov
inc
sti
inc
xchg
sub
shlb
mov
mov
jg
dec
dec
jbe
and
popa
call
out
inc
lock
pop
outsl
jg
jnp
enter
add
cs
pop
cmp
jno
push
leave
pop
xchg
or
int3
nop
push
cmc
xchg
mov
xchg
clc
cmc
in
dec
fcompl
pop
fdivr
mov
mov
stc
jmp
jle
andl
xor
jle
loop
inc
sub
or
pop
jns
inc
or
repz
mov
push
test
jbe
mov
sahf
push
imul
rcr
jmp
inc
xor
xlat
and
movsb
pop
sbb
sub
push
shrb
repnz
aas
mov
insb
je
sub
shrb
xchg
bnd
xchg
push
adc
cmc
dec
mov
fwait
inc
jae
in
hlt
movb
repz
mov
cmpsl
ljmp
popf
popa
push
xor
fbstp
xchg
popa
jecxz
inc
rcl
aam
pushl
cmpb
out
fdivrl
sub
daa
jmp
xchg
out
dec
repnz
jmp
daa
lcall
xchg
pop
dec
and
fwait
or
mov
push
inc
gs
jecxz
adc
pop
jo
shr
shrb
call
dec
add
mov
arpl
sub
add
jmp
gs
jae
hlt
xchg
mov
and
xlat
in
push
xor
pushf
call
into
push
in
xchg
lahf
test
cmp
imul
hlt
mov
mov
imul
les
mov
imul
pop
call
add
push
cli
mov
jecxz
scas
scas
inc
jp
bound
cmpsl
mov
pushf
out
pop
add
cmp
jecxz
out
sbb
test
insl
xchg
rclb
dec
scas
xchg
mov
push
xorb
cmpb
mov
cmp
popa
les
nop
cltd
arpl
or
mov
fcoms
xor
push
dec
inc
loopne
mov
push
pop
mov
adc
ds
adc
lods
jae
addb
mov
aas
icebp
xchg
add
xor
in
pop
enter
fyl2xp1
jnp
in
push
test
inc
test
arpl
movsl
sub
sbbb
xchg
mov
sbb
fldenv
test
das
es
iret
ja
adc
ss
inc
cmc
mov
add
out
push
dec
lds
mov
ds
sub
jno
sti
les
pop
aam
addr16
xor
add
push
test
and
xor
aas
mov
mov
js
repz
mov
pand
mov
stos
push
xorl
inc
filds
adc
fistpl
mov
push
movsb
out
xchg
lret
je
cmp
cltd
inc
or
repz
dec
mov
pop
lea
xchg
dec
lcall
repz
ljmp
clc
aaa
clc
aaa
mov
in
pop
fs
mov
vaddsd
lahf
ds
les
bound
daa
orb
sub
imul
xchg
hlt
cwtl
stos
dec
jle
lock
sub
outsl
add
out
sarb
div
push
jmp
push
adc
push
jae
popa
xchg
cmp
std
jle
not
sbb
pop
cmp
lock
dec
xorl
fistl
ljmp
pop
xchg
mov
xorl
pop
out
fsub
xchg
repz
repz
xchg
in
mov
mov
pusha
inc
clc
jp
cltd
scas
popf
in
out
cmc
mov
cwtl
mov
xor
inc
sub
add
divb
lret
clc
fistl
pop
push
movb
stos
in
fiadds
sub
gs
jno
adc
jbe
cmpsl
ficompl
inc
mov
push
cld
jle
push
adc
sub
shl
test
imul
std
push
scas
and
lret
sarb
sub
shlb
jge
cvtps2pi
addl
fnstcw
lods
and
mov
nop
xlat
mov
inc
inc
jno
mov
mov
jmp
test
mov
mov
cmc
adc
dec
push
fisubrs
mov
shlb
cs
xlat
dec
rclb
mov
pop
xor
mov
movsl
mov
loop
repz
jl
pminub
or
sbb
xor
incl
fimuls
pop
pop
dec
sar
mov
adcb
push
jbe
out
fdivr
sbb
insl
or
sbb
jno
mov
jnp
das
pop
in
and
cs
push
or
imul
xchg
adc
std
test
js
scas
in
loop
cmp
lods
lahf
sub
into
pop
or
push
mov
test
mov
test
aas
loop
lcall
pop
dec
add
popa
inc
repnz
enter
mov
mov
lods
pushf
out
jae
mov
stos
xchg
cmp
std
cmp
cmp
mov
cs
rorl
dec
dec
ficoms
sbb
imul
stos
fwait
xor
sti
movsb
mov
cli
and
pop
test
ror
fs
mov
inc
or
test
cli
lds
mov
pusha
sbb
mov
cmp
in
xchg
push
pusha
push
mulb
mov
adc
lods
and
pusha
int
fidivl
jae
jns
out
cltd
pop
or
mov
movsb
sahf
or
mov
mov
xor
pop
mov
movsb
call
pop
test
out
push
add
mov
outsl
cmc
dec
insl
pop
mov
xor
in
nop
call
outsl
dec
nop
pop
lahf
jnp
cli
fldl
int3
ret
jle
jae
dec
bound
hlt
mov
lcall
aam
inc
mulb
mov
push
cmp
sbbl
hlt
add
and
repnz
mov
mov
cmp
test
cwtl
sub
mov
cmpsl
scas
sbb
hlt
out
push
jnp
cmp
out
aaa
mov
or
mov
fmull
hlt
jp
imul
inc
lock
mov
shlb
sarb
fimuls
push
in
fmull
push
repnz
sub
insb
push
ljmp
mov
mulps
and
xchg
cmp
inc
lea
addr16
dec
push
cmp
sub
mov
mov
daa
call
test
xor
fsubr
inc
cmp
cmp
rcrl
and
or
inc
addr16
in
mov
lods
stos
push
mov
daa
push
je
mov
dec
cmp
js
repnz
mov
xor
push
mov
imul
punpckhdq
repnz
mov
mov
fistps
cmpb
fs
rcl
cmp
dec
addr16
int3
dec
dec
cmp
push
movsb
mov
or
testb
jno
xor
or
mov
push
mov
int
mulb
and
cmp
sbb
pop
push
orb
adcb
push
jb
stos
sbb
sbb
notl
hlt
ror
jbe
inc
into
mov
inc
inc
jmp
outsl
lds
gs
cmc
pop
popf
orb
cwtl
add
inc
mov
mov
lea
pusha
mov
mov
fdivs
notl
push
xchg
push
loop
shrb
push
mov
jmp
or
add
mov
jle
cltd
pop
pop
cmc
lods
cld
mov
in
pop
arpl
roll
or
sub
imul
shr
lea
push
sub
loopne
or
push
jmp
movsl
cmp
loope
int
sbb
dec
int
into
leave
mov
dec
xlat
lods
xchg
popf
addb
or
jbe
je
inc
xor
xor
mov
stos
mov
xor
bound
xchg
sub
cmp
mov
add
fdivr
aaa
cmpsb
pop
jecxz
mov
pop
lods
stc
das
mov
push
mov
jg
ljmp
je
cmpps
mov
mov
lods
fbstp
jne
out
rclb
pop
inc
cmp
dec
pop
pop
shrb
addb
push
cmp
or
mov
std
inc
lods
cmp
or
jmp
data16
mov
inc
cld
in
xlat
pusha
jnp
push
call
leave
test
sbb
cmpsb
pop
loop
xlat
stos
lret
mov
mov
cmp
outsb
icebp
xor
push
ja
sub
jae
cmc
sub
icebp
inc
push
loope
iret
popa
out
or
pop
pop
mov
cmp
and
sbbl
ss
lods
shll
add
sti
xlat
movb
ja
roll
pusha
mov
add
cmp
dec
jne
scas
pop
ror
ret
xor
leave
xlat
mov
inc
inc
ficompl
loope
xchg
andb
adc
pushf
mov
pop
add
das
jo
jg
mov
jg
sub
pop
xor
popf
xorb
loopne
dec
pop
fmull
sub
jp
test
push
pop
jmp
int
fiaddl
cmp
mov
sbb
xor
push
cmp
lock
pop
add
test
pop
test
cmp
adc
scas
xchg
lahf
test
pop
cmp
scas
cld
test
call
arpl
ds
add
outsl
into
ret
or
inc
mov
push
ret
or
push
testl
sbb
pop
les
sti
out
enter
mov
loopne
in
mov
sub
or
fists
or
in
cmp
or
xor
repz
pop
movsl
out
sti
cmp
sub
xor
pop
cmp
in
rorb
ss
add
test
mov
imul
mov
push
pop
cmpsl
jns
fldcw
mov
lods
push
inc
dec
sub
shrl
aam
adc
in
popf
sahf
jno
xor
das
repnz
dec
fisubrl
adc
cmp
fadd
push
and
and
notl
mov
notb
cmc
xor
test
cmp
add
mov
mov
add
repz
cltd
push
stos
or
jno
out
jp
cmp
out
pop
imul
in
dec
push
dec
cmpsb
sub
mov
xchg
sti
adc
add
pop
bound
stos
xchg
stc
adc
sub
mov
ret
incb
pop
dec
and
into
pop
sub
jmp
pop
aam
out
sub
sbb
push
in
lret
das
xor
mov
int
xor
inc
mov
incl
mov
xchg
push
jmp
das
ljmp
sub
cltd
jle
xor
mov
and
orl
pop
mov
ret
ret
xchg
fxch
mov
mov
pop
aad
adcl
popa
mov
mov
inc
mull
push
roll
add
lock
aaa
cltd
test
imul
movsl
insl
adc
out
pop
mov
xchg
cmp
fstpl
push
push
jo
dec
fistps
fstps
ficomps
ds
jbe
mov
mov
fstps
leave
inc
sub
mov
cltd
ret
in
loope
push
lret
hlt
sbb
cld
mov
fistl
jp
jbe
mov
stos
mov
ljmp
mov
es
push
or
aad
add
mov
fsubrl
test
ficoml
mov
div
out
jge
mov
aas
test
add
xchg
sar
dec
and
popa
adc
pop
test
shll
in
cs
mov
dec
scas
mov
add
dec
push
add
lds
jns
xor
pop
stos
or
outsl
out
outsl
add
aaa
hlt
adc
clc
mov
inc
cmpsb
in
pop
icebp
push
sbb
or
loope
in
sbb
inc
pusha
into
jp
xor
mov
pop
inc
cmpsb
outsl
mov
push
mov
push
xchg
loopne
fsubrs
rcll
stos
movsl
fs
cmp
jb
adc
das
mov
mov
lcall
clc
mov
inc
fcompl
fnstcw
and
push
hlt
and
sarb
push
sarb
sahf
push
addr16
int
das
push
fdivr
cmc
sub
sub
fsts
pop
test
pop
loope
sub
nopl
lds
fildll
divl
bound
mov
enter
pushf
sti
jo
add
stc
addr16
cmp
in
pop
mov
cmc
xor
aaa
jno
leave
loop
xor
push
jmp
in
iret
daa
aam
adc
pop
add
fldt
clc
test
not
nop
xchg
mov
xchg
xor
movsl
stc
lret
inc
adc
cmpsb
pop
push
imul
mov
loop
xchg
je
mov
jnp
nop
popa
leave
jg
jb
sub
mov
sub
sbb
int3
popf
call
cmp
jp
icebp
add
out
clc
push
xor
data16
mov
push
aaa
cmp
das
jne
inc
jnp
ljmp
sub
out
inc
mov
fneni(8087
xlat
lock
pushf
dec
mov
jg
cmp
pop
in
dec
mov
sub
mov
rolb
aad
int3
jle
fdivs
xor
sub
loopne
andl
stc
push
aas
daa
cmp
add
dec
sbb
add
cli
push
enter
xchg
push
mov
scas
jmp
fnstcw
icebp
cmp
repz
cltd
cmpsl
sub
fistpl
xor
xor
jo
sbb
fwait
xor
add
pusha
addr16
cmp
mov
jmp
repz
or
mov
push
xchg
xchg
addr16
inc
adc
jl
dec
stc
lret
mov
sub
lods
test
push
inc
test
mov
bound
jae
andb
call
dec
add
and
xor
pop
movsb
pop
rclb
cmp
jle
aam
push
and
jae
out
lahf
and
int3
or
cld
pop
jl
icebp
outsl
dec
ljmp
cmp
mov
add
aaa
push
sarl
fwait
inc
push
inc
aas
popf
bound
in
jecxz
popa
sahf
mov
jecxz
xchg
out
sub
sbb
les
mov
cmp
fbstp
and
test
or
sub
cmp
mulb
mov
pop
push
push
in
push
ret
push
push
inc
sub
jg
jb
jecxz
add
xchg
sub
jne
in
addr16
pop
dec
push
pushw
stos
scas
xchg
push
sub
mov
stos
push
rolb
pop
xchg
jecxz
push
lock
or
push
inc
movl
mov
add
movl
push
cmp
adc
roll
mov
push
sahf
clc
cltd
push
stc
or
or
xchg
xlat
mov
sub
fistpl
ja
divl
mov
and
mov
int
lahf
lock
outsb
es
mov
jmp
insl
or
outsl
rorl
or
iret
pop
push
and
fcomip
mov
jbe
and
les
cmc
adc
fiaddl
pop
addr16
xor
jle
lret
scas
xor
cmp
jb
jb
out
popa
icebp
xchg
xchg
subl
sub
sbbb
outsw
in
xor
sbb
imul
and
mov
js
pop
push
pusha
jb
cwtl
jecxz
cli
outsb
sbbb
iret
pop
shlb
jbe
adc
jp
sti
mov
out
out
mov
and
in
into
jecxz
es
cmp
scas
enter
pop
add
out
or
ret
test
xor
xchg
mov
ficomps
and
jno
or
push
in
mov
dec
test
adc
push
cwtl
mov
dec
xor
stos
addl
lret
mov
stos
mov
sahf
mov
movsb
lock
cmpsb
or
ret
cwtl
adc
jb
bswap
xchg
mov
sub
adc
aaa
mov
test
enter
lahf
mov
mov
adc
loop
divl
sbb
rorl
imull
cmp
and
out
icebp
cmpsb
jno
push
push
xor
pop
sbb
int
xchg
pop
push
cmp
push
sub
jo
in
lods
mov
cmp
mov
mov
lret
mov
inc
das
push
ljmp
shrb
inc
mov
mov
push
out
test
cmp
lret
cmp
cmc
mov
jge
xchg
pusha
cmp
adc
inc
or
jl
subb
jbe
unpcklps
faddl
jo
sub
fcomi
ret
jne
loopne
clc
test
dec
ror
push
inc
pop
push
lret
cmp
cwtl
daa
scas
sub
test
int3
mov
mov
and
shl
lea
cmpsl
mov
in
scas
mov
rcl
repz
mov
fstpl
arpl
cs
cmp
mov
xchg
fcmovbe
ror
mov
popf
push
mov
sub
lods
imull
jo
out
je
ficoms
pop
mov
lock
aas
das
imul
pop
lret
rcll
push
xor
out
and
dec
mov
hlt
jge
add
cmp
and
roll
sub
pop
stos
mov
pusha
mov
pusha
adc
mov
jae
inc
or
jns
adc
icebp
add
sub
cs
dec
dec
push
bound
or
fnsave
or
imul
jecxz
sti
insl
jne
mov
out
or
fisttpll
loopne
mov
addr16
and
fwait
xchg
dec
stos
push
and
sub
scas
loope
lods
pushf
push
stos
cmp
jb
add
dec
jl
pop
outsb
jge
scas
in
xchg
jno
aas
lods
cmp
dec
xor
fbstp
pop
je
iret
mov
adc
xchg
movl
xor
sub
in
int3
movsb
ljmp
mov
cmpsl
xchg
sbb
and
sub
jae
cmp
sub
xchg
in
and
ds
call
inc
rcll
push
movsl
fistpl
aas
pop
mov
mov
rcrl
jns
in
orb
mov
sahf
and
mov
cmc
sbb
push
jmp
add
repnz
in
add
inc
push
loopne
push
repnz
dec
jno
jne
mov
cmp
mov
ret
stc
fadd
pusha
pop
in
xor
jecxz
cmpsb
out
mov
pop
add
sub
or
lahf
adc
pop
adc
pop
out
mov
lret
imul
inc
jb
shll
popf
mov
pop
aam
addr16
mov
inc
pop
test
out
inc
jae
out
test
pop
outsb
pop
xchg
pop
cmp
fbld
and
or
push
insb
add
mov
lahf
jb
out
xchg
and
lret
out
outsl
mov
out
sbb
bnd
push
stos
mov
cltd
cltd
add
shll
int3
mov
and
mov
pop
cmp
pop
ss
push
sbb
xchg
in
mov
shl
mov
pop
outsb
clc
or
aad
addr16
inc
xorl
jb
cmp
mov
or
sub
push
mov
or
lret
dec
lcall
lea
mov
fstl
testl
and
xchg
fildll
jg
adc
inc
pop
test
idivb
das
rcr
inc
cmp
cmp
lods
mov
sbb
push
xchg
and
push
test
adc
movsl
icebp
inc
in
nop
fld
mov
nop
sbb
sahf
add
cmp
and
es
push
imul
scas
dec
fdivr
std
push
xchg
movsb
sbb
xchg
fisubrs
push
push
push
leave
mov
pushf
mov
sbb
clc
adc
and
ret
aaa
jp
ret
cmp
jno
sbb
loop
mov
mov
xchg
mov
dec
sbb
jo
push
fldl
sbb
aas
popf
jg
aaa
push
out
adc
jp
pop
mov
push
imull
stos
filds
les
inc
sub
loopne
xlat
or
pop
rolb
pop
and
frstor
adc
push
xor
adc
cmpsb
pushf
insl
lds
out
xlat
test
ds
pop
mov
mov
adc
push
enter
lcall
dec
test
pop
test
fdivrl
and
gs
das
nop
enter
jo
mov
scas
and
dec
push
pushf
mov
stos
xlat
pop
out
rorl
lret
push
push
adc
lret
pop
clc
and
mov
popf
inc
add
aaa
loope
mov
aaa
shl
call
lock
push
add
push
shll
jbe
stc
inc
sub
jnp
inc
cmp
mov
jecxz
imul
dec
les
sbb
push
ficoms
ret
lock
bound
lret
inc
daa
int
mov
aas
scas
sub
inc
rorb
leave
test
pop
or
icebp
ffreep
test
ret
stos
push
or
movl
hlt
mov
xchg
mov
or
push
std
sarl
sub
xchg
loope
adc
push
xchg
jle
jns
sbb
dec
and
outsl
std
cmc
in
jmp
mov
imul
mov
repz
adcb
into
mov
cwtl
loope
stc
xchg
push
sub
shl
pop
cld
or
repnz
clc
add
and
xchg
mov
sbb
fs
push
jnp
cmp
xchg
testb
jb
pop
addl
out
cmp
cmp
jno
out
mov
mov
inc
mov
fistps
stc
cmpsl
cmp
mov
mov
jmp
ljmp
and
adc
cld
out
jne
stc
scas
cmpsb
jns
add
dec
out
imul
repnz
cmp
mov
xchg
add
in
repz
sbb
mov
jb
jg
dec
nop
pop
mov
or
aad
ficoms
adc
lock
jbe
jno
mov
pop
sub
lods
pop
push
add
lock
xor
ficomps
addr16
sub
and
shrl
arpl
pop
sub
notb
add
cmpsl
mov
cmpsb
mov
lods
fnsave
mov
subb
hlt
sarl
dec
cli
das
gs
adc
shll
adc
cmpsl
pop
fistps
nop
pop
sbb
fmuls
test
out
adc
int3
dec
push
aas
adc
leave
sub
cltd
aaa
leave
and
ret
jne
popa
and
in
jb
or
popa
fiadds
into
mov
ror
add
jo
test
jl
cmp
xchg
cmpsb
dec
add
jge
iret
out
cltd
dec
mov
fadd
xor
mov
sti
stos
mov
stos
mov
data16
scas
in
testl
jle
pop
in
mov
inc
pop
push
bound
stos
iret
mov
push
and
daa
and
fs
out
dec
mov
pushf
rcll
and
cmpb
adc
jbe
stos
xchg
cmc
es
dec
cmp
pop
push
test
or
mov
push
scas
pop
jecxz
adc
cmpsb
push
in
mov
sub
xchg
in
push
or
arpl
adc
cmova
lods
xlat
imul
or
push
xlat
in
jecxz
jmp
dec
add
rorl
cmc
sarl
dec
xor
xchg
mov
in
add
mov
dec
or
int
and
or
sub
or
pop
stc
xor
ja
push
sub
cmp
push
lret
xor
loopne
lcall
imul
out
cmpsb
push
test
pop
addr16
mov
jmp
xchg
sbbl
jg
push
les
pop
loop
and
dec
test
xchg
sahf
movups
sti
inc
mov
push
push
mov
loope
push
aad
or
gs
fwait
lahf
mov
mov
adcl
push
icebp
mov
xor
push
cmp
pop
and
adc
jmp
ja
push
push
sbb
lock
xlat
cmp
cwtl
in
add
dec
pusha
mov
or
and
aam
das
jmp
push
jecxz
negl
inc
pop
add
jb
push
shlb
bound
in
xor
lret
push
notl
and
cli
std
sub
and
out
mov
xchg
and
adc
in
pop
adc
sub
cmp
cwtl
add
mov
outsb
mov
mov
sub
lcall
pop
inc
int3
cmp
mov
mov
xor
xchg
dec
popf
scas
insl
mov
test
push
rorb
jbe
xor
mov
cmp
mov
push
pop
xchg
popa
inc
movsl
lret
ret
and
adc
inc
jg
push
xchg
push
dec
insl
lcall
arpl
push
ljmp
rclb
loope
stos
sbb
nop
dec
push
lret
cmp
jge
les
dec
jecxz
xor
sub
leave
add
mov
adc
xchg
dec
fnstsw
repz
sbb
mov
imul
out
repnz
adc
call
sbb
arpl
inc
scas
pusha
arpl
cmp
xchg
mov
ljmp
insb
cmp
movsb
inc
jecxz
int
inc
sarl
fcomps
lds
movsb
xchg
xchg
sub
inc
aam
fsts
dec
sub
sarb
sbb
sub
sub
out
sbb
push
mov
shlb
jle
mov
cmpsb
sti
inc
pop
inc
jmp
or
push
ljmp
and
adc
sbb
lods
mov
jmp
out
add
or
pop
sbb
xor
out
sub
jg
out
movl
adc
imul
in
rcll
jb
outsl
xchg
int
jmp
outsb
lds
in
aas
sub
repz
cmp
fimuls
pop
add
cmp
aad
sub
mov
lods
je
sbb
stos
mov
stc
cmp
fsubp
ret
or
dec
cmp
pop
lods
flds
mov
mov
xor
fists
push
dec
outsl
clc
out
out
mov
outsl
lock
jge
xchg
test
xor
in
dec
loopne
push
in
stos
push
lcall
mov
mov
and
push
je
mov
xor
xchg
sub
loop
aas
repnz
sub
cli
cmpsl
inc
in
push
mov
cmpsl
hlt
in
mov
cwtl
rorb
lret
jge
xor
pop
push
mov
pop
pop
mov
lods
mov
cs
stc
dec
jno
stos
dec
push
pop
fdivrl
xchg
pand
mov
xor
mov
mov
mov
dec
iret
leave
dec
es
sub
xor
mov
loope
popf
out
pop
cmp
stos
xor
adc
fwait
popa
pop
mov
lea
les
add
data16
sub
jne
push
xchg
ret
mov
pop
inc
adc
mov
aam
add
insl
psrlw
adc
roll
xor
sbb
push
adc
lods
pop
mov
insb
mov
mov
and
out
sbb
jo
sub
repz
sti
cmp
inc
jecxz
pop
or
or
jp
shlb
lock
imul
or
pop
push
adc
dec
sub
repz
lret
push
sub
ss
pop
push
add
mov
stos
pop
test
mov
jp
sub
xchg
insl
sahf
xchg
gs
std
cli
outsl
and
cld
es
or
testb
adc
mov
adc
cmc
mov
test
inc
pusha
sahf
fdivp
lcall
scas
insl
in
outsb
mov
cmpsb
rcrl
jp
int3
sti
jp
or
addr16
test
addr16
jo
scas
test
mov
inc
cltd
loop
jne
cmp
orl
add
mov
and
scas
push
mov
pop
pop
dec
out
loope
testb
mov
fwait
out
sti
pop
mov
and
ljmp
call
insb
subl
call
sbb
xchg
sbb
fwait
push
sbb
mov
cmp
dec
and
jo
enter
pop
sub
pop
orl
pusha
popf
mov
sbbb
outsb
sub
xchg
out
lret
jns
in
inc
popl
push
add
loopne
dec
in
mov
fdiv
inc
repz
cmp
repnz
inc
test
xchg
mov
mov
std
add
loope
dec
cmp
inc
sub
inc
cwtl
cmp
adc
int
ja
inc
adc
inc
xchg
mov
inc
scas
add
push
sub
dec
jb
fnstenv
jle
add
cmpsl
fcompl
sbb
mov
or
std
jl
movsb
dec
xchg
frstor
and
xchg
scas
mov
imulb
sti
inc
shll
xchg
clc
and
ds
fnsave
scas
lahf
or
xchg
sub
pop
pop
ds
xor
xor
iret
mov
add
or
sub
cmp
sbb
cltd
mov
inc
ret
fadd
pop
xchg
pop
pop
lods
loope
out
stos
pop
hlt
sbb
loope
mov
repz
aaa
nop
iret
sbb
aas
xchg
push
dec
mov
dec
mov
dec
push
jg
mov
jb
and
loop
jmp
add
lcall
dec
aam
cltd
xor
mov
sbb
jmp
cmp
pop
out
je
mov
inc
leave
inc
fwait
mov
sbb
inc
adc
ljmp
mov
and
mov
shll
fsub
in
inc
xchg
ret
and
push
repnz
jecxz
mov
nop
push
and
inc
push
aas
outsb
or
dec
dec
jge
mov
data16
je
in
fbstp
pushf
mov
out
xor
ja
bnd
mov
mov
or
push
mov
xor
dec
push
pusha
pusha
mov
nop
sti
jae
das
xor
sub
pusha
in
stos
sub
std
out
push
out
icebp
das
shll
fldl2t
hlt
mov
mov
adc
loope
pop
sub
adc
pushf
mov
rcrl
sub
mov
dec
jae
in
mov
addl
pop
daa
lods
xchg
fcmovu
xor
loope
sbb
dec
neg
int3
ffreep
jb
rorl
add
sub
push
cmp
push
and
xchg
arpl
cmpb
jne
pop
loopne
pop
dec
subl
jnp
loope
ss
and
xor
jae
jle
stos
xor
dec
int3
adc
fdivrs
std
in
sbb
ret
mov
iret
sbb
sahf
mov
pop
adcl
fidivrl
ds
incb
push
lret
mov
lods
mov
inc
outsb
mov
sub
cli
stos
loope
inc
lea
das
add
push
lea
mov
loop
cmp
sub
or
aas
popf
add
jg
xchg
test
lds
push
mov
add
add
gs
fwait
mov
pushf
mov
lret
loope
rcll
pop
stos
scas
loopne
pop
pop
mov
aas
dec
xchg
dec
lret
pop
fsts
ss
add
mov
cmpsb
add
popaw
les
dec
shl
nop
in
add
ds
pop
mov
xchg
punpckhbw
ret
xchg
jnp
and
loope
mov
or
incb
push
int
mov
pop
adc
mov
aad
and
bound
lock
and
sarl
mov
clc
or
fwait
jecxz
jno
aaa
dec
sub
sbb
mov
lds
push
movsb
push
add
xor
adc
push
mov
sub
scas
movsb
stos
daa
push
cmpsl
repz
arpl
jae
insl
les
sub
mov
int3
shlb
adcb
cltd
jge
jp
insb
scas
pop
mov
push
rclb
mov
adc
fists
insb
daa
in
mov
idiv
jg
mov
push
popf
adc
fdivrs
out
xchg
arpl
notb
pop
inc
xor
sti
outsb
fdivl
ret
adc
imul
and
mov
xchg
pop
lcall
dec
lret
ret
and
cltd
pop
mov
jno
push
and
pop
mov
movl
aaa
int
incl
roll
and
addl
addr16
and
shlb
sub
pop
dec
data16
mov
dec
dec
fwait
cmp
jmp
sti
scas
mov
ja
dec
mov
and
shrl
cmc
inc
cli
adc
mull
pop
pop
cmpsl
cli
and
dec
xchg
pop
jbe
push
pop
arpl
or
adc
bnd
ljmp
fnstcw
cwtl
shl
mov
test
xor
dec
mov
in
pop
jg
push
jo
push
jae
and
sahf
leave
test
and
scas
adc
in
xchg
xor
xlat
movsl
decl
test
rorl
pop
inc
or
and
aas
or
xchg
jg
mov
cmovg
inc
sbbl
jecxz
js
loope
mov
rorb
mov
dec
mov
adcl
test
add
orb
les
gs
hlt
cs
loope
inc
sbb
hlt
pop
mov
cltd
jno
push
mov
fimull
push
pop
mov
insb
das
into
outsl
inc
cmc
push
push
inc
jmp
callw
push
sub
xchg
inc
icebp
mov
mov
dec
mov
xor
sub
pcmpgtw
je
pop
inc
fistl
dec
xchg
sbb
and
push
div
and
xor
in
jge
mov
dec
xchg
mov
or
outsl
femms
bound
stos
dec
jg
mov
mov
mov
rcrb
sub
inc
mov
sti
fcmovnu
push
mov
imull
mov
jge
mov
cmpsb
mov
xchg
or
xchg
inc
call
aaa
add
daa
sub
enter
cwtl
popa
inc
sti
ljmp
lret
xchg
lods
or
add
addb
push
or
daa
add
subl
mov
loopne
test
movsb
push
into
sbb
add
or
xchg
inc
mov
adc
adc
dec
inc
push
hlt
repz
int
jl
dec
xor
push
cld
daa
pop
insb
inc
out
lret
mov
and
jl
incl
sub
pushf
inc
repz
pop
push
mov
dec
bound
cs
pop
es
jl
iret
shll
pop
or
adc
add
std
sub
cmp
dec
sub
push
add
push
out
sbb
fistpll
jb
loope
jp
add
clc
xchg
js
mov
rcrl
cmpsl
das
jle
xchg
lock
push
lahf
mulb
inc
outsb
ret
and
xchg
jno
cli
ss
adc
aad
lret
pushf
icebp
cmc
sub
pop
jne
pop
mov
dec
cwtl
mov
ret
cli
and
int3
inc
enter
or
push
into
scas
xchg
imul
in
jl
jbe
dec
mov
pusha
jno
jo
mov
mov
arpl
test
fs
lods
inc
or
jmp
insl
std
in
or
sub
pop
aaa
mov
or
sahf
lret
add
cmp
jp
xor
mov
je
into
push
xchg
xchg
shlb
and
adc
fsubs
mov
imul
inc
sbb
ret
dec
ljmp
shrb
mov
into
fdivl
fwait
clc
xchg
xor
add
imul
and
pop
push
sbb
leave
jne
leave
add
int
scas
push
or
arpl
push
gs
xchg
push
enter
ja
es
mov
cmp
cmp
xchg
and
mov
andl
push
jbe
sbb
je
sub
mov
mov
sbb
inc
or
daa
jecxz
mov
fdiv
inc
fsts
xchg
sub
cmpsb
mov
mov
inc
inc
call
lahf
inc
inc
stc
ja
negb
lock
scas
lahf
fwait
add
insb
call
sahf
mov
dec
lret
jo
jg
fimuls
sub
repz
and
xchg
sbb
in
lahf
or
sub
aas
dec
dec
xorl
pop
xor
test
cmpb
mov
ret
xchg
aas
insb
or
push
insl
aas
sub
dec
into
push
and
je
mov
add
loopne
je
repz
mov
xchg
jo
divb
inc
sbb
jno
scas
xor
mov
iret
and
mov
push
or
xor
cli
pop
aas
stos
jno
fmulp
xchg
cmpsb
dec
sbb
push
mov
xchg
inc
repnz
pxor
push
aaa
mov
dec
sbb
jne
inc
cmp
and
jnp
jge
mov
scas
xor
push
mov
and
fstpt
add
daa
movsb
inc
imul
out
jg
decb
incb
mov
lock
es
mov
rclb
lea
imul
jle
cmp
incl
inc
sub
mov
cmp
pusha
aas
pushf
jae
cmp
mov
pop
xor
jb
enter
testl
mov
push
dec
add
scas
aaa
repnz
mov
cwtl
iret
mov
mov
lock
test
jmp
aaa
mov
popf
cmp
inc
popa
xchg
cs
iret
inc
aad
in
ss
cmp
shll
lahf
idivl
fwait
pop
mov
gs
jge
pop
ret
sarb
in
add
sahf
and
inc
mov
cmp
imul
inc
hlt
nop
insb
pop
negl
in
xchg
inc
push
cld
call
jno
ret
lods
and
pop
mov
add
sub
loopne
or
enter
pop
out
mov
lcall
aam
mov
test
jnp
jp
in
sbb
jae
addr16
sub
lret
ds
clc
sbb
testb
adcb
xor
sbb
sahf
and
pop
sub
and
lret
or
push
cwtl
pop
hlt
lcall
lret
push
cmpsb
call
push
ss
jbe
mov
out
fwait
xchg
pop
and
mov
dec
pop
es
in
sarb
cmp
cmpsl
push
into
mov
xor
or
stc
mov
mov
cmpsb
fcmovu
xor
shll
inc
lea
outsl
mov
pop
cmove
push
ljmp
cmpb
mov
xchg
xchg
lds
push
or
bound
clc
mov
jmp
int
mov
mov
mov
sbb
cld
push
mov
xor
mov
mov
mov
sahf
or
arpl
xchg
mov
mov
fimull
negl
mov
cmp
or
push
sub
cld
and
rclb
das
inc
and
in
add
shrl
push
mov
mov
imul
mov
mov
dec
hlt
inc
pop
fisttpl
in
out
inc
cmp
inc
lahf
sbb
pushl
cmpsb
adc
push
mov
lock
or
mov
jb
mov
mov
and
js
fdivl
sub
jno
psrad
adc
out
xor
sti
daa
sub
add
ds
pop
and
xor
push
out
mov
add
lret
das
hlt
movsl
jp
and
jp
dec
xor
dec
sub
hlt
sub
mov
aas
mov
and
aad
mov
ret
inc
xor
movsl
xor
fdivrl
xchg
xor
push
lcall
imul
push
out
push
dec
aad
or
pop
test
or
mov
cmp
cmp
insb
inc
out
sbb
mov
loop
popa
xlat
mov
ljmp
push
test
and
or
inc
ja
push
aaa
lret
and
fidivrl
aaa
xchg
shr
mov
aaa
test
daa
cld
jbe
sbb
pushf
xchg
movsl
out
jae
icebp
jmp
aas
scas
and
bound
mov
pop
mov
adc
mov
xlat
xchg
pop
mov
push
in
rorb
or
mov
ljmp
stos
lods
xchg
xor
mov
pop
add
imul
in
cmpsb
cmp
out
loop
das
arpl
es
repz
mov
lds
pushfw
test
xor
loop
fsub
cmp
insl
imul
cmp
adc
leave
in
xor
in
pop
lock
mov
lds
imulb
inc
lods
ror
je
aaa
push
sti
xchg
orb
mov
out
das
cmp
stos
insb
jne
les
jnp
xchg
or
hlt
pop
nop
inc
daa
insb
or
mov
stos
xchg
sahf
out
mov
sub
leave
pushf
jmp
jne
xor
mov
cmpsl
test
imul
js
jp
cld
out
cwtl
out
repz
out
mov
cli
outsl
or
lret
and
or
adc
icebp
mov
sub
loop,pn
pop
mov
cmp
inc
fbstp
xchg
xchg
jg
xchg
daa
xchg
in
fwait
dec
dec
add
jecxz
push
add
dec
xor
fisttps
imul
popf
or
pop
ret
mov
mov
jg
sbb
popf
call
mov
adc
pop
cmp
inc
xchg
pop
push
sub
sbb
xchg
imul
call
jne
and
add
sti
push
stos
movsl
fimuls
leave
test
in
jno
orl
int3
xor
adc
cltd
pusha
jl
pop
aam
push
dec
cmp
jnp
cltd
and
pop
mov
shrl
mov
paddusb
pusha
sub
nop
pop
bound
or
in
or
aad
sub
scas
into
mov
xor
jecxz
rorb
scas
mov
aam
sub
addr16
jp
cmp
or
loope
jp
jmp
mov
jae
test
sub
jne
cmp
pop
pop
loop
es
dec
sbb
push
or
sbb
jmp
popf
pop
call
or
insb
iret
pop
jge
lahf
or
jmp
inc
push
dec
pop
or
jb
int
fs
popf
out
xchg
cwtl
shll
lods
lret
xchg
sbb
xchg
and
ljmp
adc
mov
cmpsl
lret
aas
xchg
lret
inc
ret
mov
jnp
mov
mov
and
call
mov
or
fnstsw
xlat
adc
or
psubd
test
daa
pop
and
fcmovnb
xor
pop
jp
jno
movsl
bound
test
imul
ret
loope
aam
clc
push
and
iret
mov
ret
testl
mov
lret
mov
mov
pop
aam
dec
and
push
mov
shlb
je
ljmp
arpl
mov
call
cwtl
jbe
es
pop
inc
jnp
and
cmpsb
push
pop
jns
jno
in
in
enter
fmull
jmp
sarb
scas
js
mov
les
das
rorb
add
test
pushf
out
or
test
push
nop
test
add
cs
dec
repz
fiadds
sti
mov
mov
or
test
pop
shld
daa
jbe
call
xchg
sbb
pop
popf
jl
insb
sbb
ret
adc
imul
icebp
fsubs
sbb
inc
or
cmpl
test
adc
lods
xor
xor
clc
xchg
pop
popa
imul
fisubrl
sub
imul
insl
pop
jmp
je
clc
cwtl
mov
fimull
pusha
lcall
cld
fst
test
sti
mov
test
fildll
mov
ret
push
push
pop
ror
int3
out
pushf
add
lds
mov
les
js
std
test
leave
aas
pop
inc
dec
vmwrite
or
jo
xor
and
or
iret
loopne
add
sahf
notl
loop
xchg
sub
push
daa
cmp
popf
mov
cmp
mov
jbe
subl
pop
test
fsubl
in
add
out
cmpsb
loopne
sbb
dec
jae
pop
fst
dec
imul
mov
adc
mov
mov
sahf
mov
inc
aas
adc
shl
xchg
fldenv
and
mov
pop
lret
pop
fdivrs
les
fimuls
movsl
orb
gs
mulb
xor
and
lahf
xor
jl
ds
pop
sar
nop
leave
or
jge
xor
inc
addr16
jl
or
adc
push
sbb
pop
insl
ljmp
fnstsw
lcall
dec
sbb
cmc
mov
dec
dec
jmp
popf
sbb
out
cmp
mov
daa
xor
push
pushf
jo
inc
hlt
enter
jmp
fbld
jg
cmp
adcb
cmp
push
push
sub
sub
imul
jns
jp
je
stos
lretw
xchg
mov
dec
dec
jmp
rorl
test
inc
inc
or
subl
sahf
stos
or
push
cmp
mov
dec
pusha
or
sti
dec
roll
addb
sbb
sbb
loope
push
insb
pop
jae
add
or
insb
aaa
ret
out
dec
outsb
and
loop
fsubrp
lods
dec
setp
mov
push
imul
mov
popa
ss
fnstcw
insb
negl
adc
fistps
pop
sub
out
jp
or
ja
jge
push
jae
xor
lret
addb
fidivrl
push
sub
jb
cmp
in
and
inc
sti
lods
mov
enter
fwait
mov
fs
popf
stos
xchg
scas
mov
mov
cs
sub
xchg
jmp
inc
cmp
stos
ja
lea
int
sbb
je
dec
inc
aaa
subb
rcrb
pop
loop
in
hlt
jge
jecxz
pop
cmp
ljmp
or
ret
mov
jp
loopne
das
stos
popa
push
stos
jge
pxor
jns
adc
add
je
rcll
flds
xchg
call
sub
push
add
notb
push
lods
mov
xchg
mov
jae
sub
fidivrs
lods
aas
mov
fsubr
out
mov
mov
pop
jne
sar
int3
add
in
test
push
fdivs
xor
cmp
and
inc
inc
sti
fwait
insl
inc
das
int
push
or
mov
scas
lret
bound
xor
fsub
sbb
into
movl
cmp
xor
imul
iret
shrb
bound
add
jbe
cs
lahf
mov
fcompl
push
jo
xchg
mov
xor
filds
roll
jno
jo
mov
mov
out
negl
adc
or
stc
in
jl
cmpsl
jecxz
shl
pushf
mov
cmp
lahf
lea
in
je
adc
cmp
hlt
push
mov
inc
into
and
pop
into
dec
sub
lods
jmp
push
lcall
sbb
mov
ja
mov
jp
xchg
outsl
xor
inc
and
inc
and
adc
shr
mov
push
in
push
cmp
xlat
into
hlt
iret
rolb
xor
add
xchg
inc
jae
test
inc
icebp
mov
daa
ss
cmp
dec
cli
sub
lods
pop
sub
shll
fdivrs
jge
dec
and
jbe
xchg
and
mov
ja
jo
pop
and
and
rorb
sahf
inc
ret
cmpsl
lar
xchg
bound
xchg
cmc
push
mov
sbb
push
xor
gs
push
push
je
imul
inc
mov
mov
jmp
movb
mov
add
or
push
add
orb
jmp
scas
push
in
xor
test
into
int3
jmp
cmc
and
sbb
inc
xor
enter
aad
addb
test
scas
aad
pop
je
nop
pop
mov
cs
fdivr
fidivl
or
adc
mov
pop
xor
ds
and
inc
mov
lods
je
mov
icebp
ljmp
rclb
xchg
ja
cmpsl
add
imul
cltd
push
call
loop
std
movsl
adcb
leave
mov
div
repz
inc
cltd
mov
cmp
or
mov
hlt
aam
sbbl
xchg
xor
add
inc
cmpsb
mov
cmp
push
mov
repz
jmp
pop
inc
dec
dec
xchg
inc
add
out
rcll
adc
out
sahf
lds
fisubrl
xchg
gs
int3
int3
mov
pop
xor
test
mov
mov
andb
mov
mov
inc
mov
cltd
lods
aaa
sbb
adc
setp
insb
inc
or
cs
xchg
lret
jmp
sub
mov
mov
test
adc
push
xchg
sbb
sbb
cwtl
jmp
push
add
fisttpll
sahf
clc
fdivrl
loope
dec
and
in
mov
pop
cwtl
mov
cs
idiv
jl
pop
push
push
fsubs
divb
std
and
cmpsl
mov
sbb
push
lret
jne
js
dec
test
mov
dec
mov
iret
out
push
rcll
data16
cmpsb
cmpsb
dec
xor
jae
push
int
xchg
outsb
ror
into
mov
sbb
outsl
inc
adc
call
outsb
dec
fstpt
sbb
lds
pusha
xchg
adc
dec
xchg
xchg
outsb
loop
mov
fcoms
lds
xchg
or
sub
in
sub
mov
jmp
inc
sub
pop
cmp
push
pop
xor
test
int3
ret
clc
add
pusha
fmull
sbb
movsl
mov
sbb
mov
cwtl
and
mov
loope
out
jb
cmpsl
lea
sub
jmp
shll
rolb
pop
and
cltd
add
ret
mov
int3
mov
jo
push
cmpsb
xchg
pop
sbb
sbb
jp
jno
js
mov
inc
mov
pushf
adc
sbb
stos
xor
inc
test
das
dec
scas
hlt
add
pop
adc
adc
pusha
outsb
lock
xor
gs
in
push
pop
arpl
push
cmpsl
or
sub
leave
ja
xor
fs
xchg
cmp
std
stos
imul
test
ret
scas
fldcw
imul
inc
das
dec
outsl
pop
or
imul
dec
clc
add
mov
scas
lahf
pop
in
ljmp
add
pop
clc
fsubrl
insl
lret
mov
into
pop
repnz
inc
push
push
xchg
sti
loopne
push
push
test
pop
ftst
xor
mov
mov
pop
push
mov
addr16
sbbb
lret
jno
repz
fcmovu
push
les
cmp
push
adc
pop
push
dec
mov
cwtl
addr16
xchg
pop
jmp
xchg
shlb
mul
cmpsb
lods
mov
fiaddl
mov
cmc
adc
mov
and
pop
cwtl
or
lcall
in
cs
sub
xor
dec
cmp
xor
jne
es
jne
das
jb
adc
jg
or
add
cltd
out
push
xor
adc
subl
ret
daa
xchg
loop
aas
cwtl
cltd
mov
jne
mov
mov
jno
mov
shlb
adc
push
pop
push
jae
and
and
dec
add
and
pop
mov
es
jne
pop
out
cli
orb
jecxz
push
add
push
in
jle
xchg
xacquire
push
fsubp
gs
jbe
into
or
cmp
inc
sbb
mov
sbb
lea
out
xchg
rcr
sub
dec
mov
mov
repnz
push
scas
sub
lcall
push
mov
test
cwtl
or
clc
push
std
nop
dec
and
in
adc
stos
jns
sti
stos
jmp
mov
cwtl
jno
push
in
in
arpl
xor
stc
stos
fwait
xchg
jge
out
xlat
call
ja
mov
and
out
aaa
jbe
push
insb
add
mov
xlat
into
adc
add
add
into
jmp
xchg
sub
in
fnstsw
mov
xchg
aam
and
mov
sti
xlat
arpl
aam
push
fwait
into
jne
stc
push
addr16
mov
push
mov
mov
aad
pop
sbb
leave
dec
idivb
sub
aaa
cmp
mov
cs
mov
mov
sbb
mov
sub
adc
cmpsb
cmp
mov
mov
sub
aas
xor
lds
mov
ja
jmp
ss
mov
add
hlt
and
adc
push
aas
popf
ds
fstpt
jmp
jb
mov
sub
fiaddl
fnstenv
addr16
fadds
lds
ret
rcll
data16
pop
cwtl
adc
fldcw
faddl
cmpsl
xor
clc
inc
inc
push
xchg
add
push
jae
pop
mov
scas
fidivs
xor
jae
dec
mov
neg
fs
mov
lock
das
inc
and
push
add
pop
cld
dec
in
out
sbb
out
lret
jbe
pop
aas
lahf
push
push
mov
mov
pop
fidivl
sub
push
jmp
aas
adc
insb
or
push
popf
in
jne
xchg
jecxz
sub
add
push
movsb
popa
push
cmp
rorl
or
hlt
jl
cmpsl
cmp
xchg
push
mov
mov
xor
in
enter
cs
iret
lods
jge
mov
dec
cmpsb
mov
inc
fbld
loopne
dec
inc
lock
hlt
or
ret
cmpsl
dec
fs
push
repnz
push
jb
das
mov
cld
iret
dec
pop
es
pop
lock
addb
out
int3
push
add
repz
sub
push
push
pop
loopne
lods
aam
xor
enter
or
pop
push
shlb
andb
sbb
sbbb
sarl
add
outsb
pop
adc
add
mov
xchg
sbb
fiaddl
push
push
out
mov
jmp
clc
mov
sub
dec
sar
xchg
pop
add
lods
in
repnz
sbb
mov
inc
imul
enter
cs
xchg
outsb
lds
out
jne
mov
push
fsubs
inc
pusha
pop
hlt
adc
jb
sbb
aas
push
push
stc
adc
push
dec
pop
insl
cmp
lret
xchg
mov
sub
fisttpl
aas
or
mov
sahf
jne
cmp
cmp
xlat
lods
fbld
sub
inc
lds
jns
aam
or
int
xor
shrb
shl
hlt
sbb
jnp
rcr
inc
mov
nop
nop
xchg
sbb
mov
mov
pop
fwait
int3
jle
mulb
sub
sar
out
or
orl
adc
sub
push
out
jle
push
cmp
adc
xor
cmp
mov
sub
imul
push
dec
mov
lds
inc
out
enter
in
daa
ret
pop
and
add
inc
enter
sbb
sbb
jne
ret
push
sub
testb
sbb
mov
cmc
adc
xchg
inc
js
jb
fistps
imul
int
xchg
fdivrl
or
cmp
add
inc
into
in
movsb
mov
pop
inc
fnstcw
mov
stos
push
jmp
mov
pop
mov
out
inc
mov
lret
int3
xor
insb
or
cmp
loop
leave
loope
pop
stc
pop
push
shlw
jns
sub
fsubr
ds
loopne
ss
popf
pusha
and
mov
or
rcrl
sti
or
cmp
data16
xor
mov
pop
rcr
fdivl
fidivrl
dec
or
shl
push
iret
xorb
inc
jno
loopne
rorl
scas
and
pop
outsb
mov
mov
jge
pop
icebp
and
cmc
or
mov
in
pop
jb
popf
leave
cwtl
jns
mov
orb
loop
fcoms
and
inc
mov
ffreep
mov
mov
sbb
sub
in
scas
loopne
daa
sub
rorl
pushf
push
cmp
dec
in
cmp
mov
push
add
adc
dec
and
xor
insl
mov
xor
pop
push
sub
or
mov
xor
xchg
cltd
in
jbe
and
daa
sub
dec
mov
sbbl
cs
pop
fwait
lods
stos
cld
scas
jge
lock
xor
mov
xchg
sahf
movsl
sbb
or
mov
lods
mov
nop
movsl
sbb
lahf
xor
test
adcl
pop
xchg
pop
pop
int3
push
push
add
adc
mov
pop
sbb
jg
ja
roll
cs
lcall
xor
xor
and
loope
enter
sahf
into
jg
popf
mov
stos
cli
and
cmpsb
ss
adc
xchg
frstor
cmp
adcb
or
out
lahf
and
in
cmpps
inc
mov
jae
lahf
lea
dec
inc
mov
cmpsb
push
mov
ljmp
fst
scas
aas
rolb
js
lea
xchg
add
dec
mov
icebp
inc
mov
arpl
pop
pop
sub
rorl
mov
mov
jno
daa
adc
push
es
and
mov
lret
mov
pop
and
mov
ljmp
jo
sbb
popf
icebp
aas
xchg
stc
test
dec
sbb
push
loop
das
pop
or
out
pop
push
test
jg
add
mov
lods
or
in
adc
lock
adc
xchg
insb
cmp
out
jb
cmp
dec
xchg
xchg
push
das
push
aaa
mov
pop
sbb
movsb
jecxz
jge
jmp
int3
fadds
adc
push
xor
pop
incl
popw
push
push
xchg
fildl
xchg
dec
mov
in
mov
pop
dec
adc
repz
sar
ret
push
and
xchg
jne
fisttpl
push
movsl
test
shll
pushf
inc
jns
push
sbb
pusha
pop
fildll
or
mov
cmp
fistpll
push
pop
dec
out
xchg
and
jecxz
and
jb
cmpsl
scas
hlt
mov
push
sub
ds
cltd
lret
sarb
adc
push
mov
test
iret
mov
sbb
aad
mov
in
bound
sbb
ja
lea
xlat
mov
repnz
xor
incl
add
cmp
jecxz
pop
sub
mov
cld
mov
shl
add
loopne
fucomi
xor
das
jns
dec
repz
xchg
std
push
inc
movl
push
movsl
and
push
sbb
inc
xchg
loope
cmp
int3
rcrb
ficoml
sub
dec
lds
push
push
mov
pop
sbb
lds
adc
cmp
imull
lock
repz
lret
pop
lock
jb
dec
cmp
xor
pop
outsb
mov
cmpsl
lret
stos
or
sub
pop
pop
inc
inc
mov
repnz
push
call
and
xor
xchg
push
xor
dec
jne
jp
xchg
or
and
hlt
out
mov
dec
js
popf
sbb
add
mov
mov
and
aad
aad
inc
rol
add
outsb
sub
cld
sub
call
ret
out
scas
push
lahf
or
das
dec
xchg
out
daa
dec
push
ret
dec
repnz
movl
loop
dec
jmp
jle
jnp
jl
adc
movsl
sbb
test
push
frstor
lods
inc
and
xlat
push
orl
clc
ss
push
xchg
or
pop
and
test
xchg
sti
scas
aam
es
stos
test
insb
dec
das
xlat
sbb
lcall
push
test
das
push
mov
adc
xchg
call
scas
stos
pop
rcll
sub
adc
sbb
mov
jecxz
push
xchg
adc
or
subb
jmp
pop
mov
out
rol
movsb
repz
dec
ljmp
xchg
lret
aam
mov
out
int
imul
xchg
sti
pushf
jns
or
in
movsl
sahf
sub
out
fwait
inc
testb
add
mov
xchg
lods
jb
xchg
mov
mov
in
scas
int3
add
popf
ja
ljmp
push
mov
inc
xorb
sbb
sbb
pop
js
xor
mov
adc
inc
sbb
cmp
cmp
push
cmpsl
xor
cli
sub
fldenv
xlat
mov
aaa
lods
mov
pop
mov
pop
loop
movsl
lret
sub
imul
enter
filds
jno
rorl
rcrb
iret
dec
movsb
inc
and
jae
ljmp
rcll
xor
dec
mov
mov
add
sbb
push
in
test
je
lahf
ja
popa
int3
pop
dec
rcl
aas
pop
adc
aam
flds
dec
es
or
fisubrl
add
xchg
cltd
cmp
lds
pop
cmc
shll
adcb
or
pop
adc
in
icebp
mov
dec
pop
into
nop
ds
push
sahf
push
scas
jne
lret
nop
cli
les
cmp
ja
inc
cltd
cli
jl
and
repz
sub
test
or
push
mov
in
and
inc
std
scas
fnsave
jne
jecxz
ret
cmc
adc
xchg
and
mov
dec
mov
mov
outsb
sub
sbb
mov
decl
cmp
push
outsb
mov
cmpsl
and
leave
sub
push
push
popa
cmp
sub
sub
xor
mov
lret
loop
mull
shll
jecxz
into
gs
fadds
scas
cltd
cmp
xchg
push
insl
lods
xchg
or
fmuls
pop
ja
les
iret
or
loope
mov
cli
and
push
pushf
fmul
cmp
bound
adcl
xorps
mov
lock
inc
mov
fnstcw
cmp
scas
bound
sub
inc
outsb
or
insl
mov
addl
jbe
mull
mov
jl
inc
jecxz
xchg
aad
mov
stos
jae
cmp
sub
dec
movsb
test
test
jg
lret
and
push
dec
cmp
mov
push
xor
push
sbb
mov
pop
sbb
stos
shl
mov
rcrb
inc
adcb
repz
movsl
fwait
shl
cmp
mov
mov
mov
add
movsb
pop
in
mov
lds
sbb
out
mov
hlt
jle
mov
popa
xchg
pop
pop
aaa
or
fidivrl
ret
mov
pop
lret
insl
repnz
pop
sub
mov
faddl
icebp
hlt
lods
mov
jmp
or
xchg
push
and
xchg
pop
hlt
lock
aaa
mov
cmp
push
dec
scas
fwait
push
clc
inc
dec
mov
xorb
or
dec
shl
mov
cld
mov
xlat
sbb
jmp
rclb
ds
mov
or
fidivrl
push
xchg
push
cltd
adcb
jne,pt
cmp
out
xchg
pop
cmpsb
xor
xor
ss
mov
cmc
dec
xor
pop
iret
adc
in
test
inc
lods
xor
popf
je
xor
mov
daa
test
xchg
mull
xchg
adc
sub
jge
test
rcrl
and
enter
xor
push
pop
ds
mov
nop
out
xchg
aaa
adc
pop
out
inc
out
std
pop
loopne
imul
dec
mov
mov
ret
test
andb
sti
mov
loopne
dec
lcall
pop
pop
mov
call
daa
dec
push
and
cmp
mov
push
imul
outsb
sbb
aam
insl
jge
sub
dec
cld
xchg
nop
sbb
call
arpl
xchg
imul
mov
push
mov
shlb
pop
movsb
inc
pop
xchg
iret
imul
repnz
aad
int3
adc
pop
sbb
nop
xor
dec
inc
dec
std
and
call
xchg
cmp
cwtl
ljmp
jno
and
rclb
add
addr16
mov
outsb
iret
xchg
cmpsb
fldt
jno
sbb
das
cmp
movsl
push
pop
jecxz
jbe
xchg
hlt
mov
mov
cs
sbb
lahf
cmp
test
cmpsl
adc
or
outsb
add
int
adc
add
or
movsb
fiadds
orl
nop
pop
fistpll
xchg
loop
fs
add
pop
cmc
addr16
bound
data16
js
mov
icebp
fcomps
aaa
fcmovnb
ljmp
fs
out
adc
mov
push
cli
mov
sbb
lret
rcrl
jae
int
fwait
imul
push
idivl
mov
push
mov
lea
sub
inc
iret
aaa
pop
in
lds
int
cltd
push
lds
stos
pop
outsb
scas
jns
adc
adc
pop
enter
iret
pop
pop
jns
xchg
pop
and
jo
mov
and
dec
movsb
repnz
xorl
mov
scas
mov
xor
xor
mov
and
jg
xchg
mov
jecxz
insl
sbb
outsl
pop
sub
xor
clc
clc
lock
cmp
mov
mov
mov
sub
jle
mov
add
cmp
cmp
sub
dec
jb
jo
test
cmp
dec
movsb
pop
test
mov
or
ficompl
cmp
adc
out
aad
cmp
ret
pop
xor
das
dec
iret
testb
xchg
stos
xchg
addr16
movsl
pop
pop
rcrb
jmp
rcrb
inc
and
push
mov
add
mov
outsl
sbb
inc
shll
cmp
cmp
xchg
xlat
loop
jae
or
xchg
addr16
mov
xor
int3
dec
je
adc
xor
push
notb
fadds
inc
adc
test
test
xor
mov
leave
cmp
jo
cwtl
inc
push
dec
inc
push
iret
aaa
out
lcall
inc
lock
push
movsl
inc
das
mov
into
adc
inc
push
push
jae
lock
and
movsl
shll
aad
rolb
push
jnp
nop
imull
mov
dec
jmp
sarl
lods
ficoms
rcrb
jmp
popf
cmp
xchg
inc
sub
sarb
fcomps
push
test
outsb
enter
ret
mov
je
xlat
sub
adc
addr16
adc
xorl
pop
jae
jg
mov
push
and
fisttps
inc
int3
cmp
mov
outsb
cmp
cli
xor
jle
pop
aam
mov
stc
xor
mov
dec
add
decb
and
sti
arpl
push
dec
sbb
sub
jns
std
dec
xchg
pop
aas
jle
or
cmc
and
adcl
and
out
sahf
idivl
mov
jne
and
sub
mov
pusha
mov
or
fcoml
fnsave
cmp
aaa
mov
jns
mov
rcl
mov
rcll
adc
cmp
outsl
xor
push
movsb
ja
test
daa
psubd
xor
xchg
xor
or
mov
push
dec
les
addr16
idivl
add
dec
cmp
adc
repnz
xchg
xlat
fwait
int3
xchg
dec
cmpsb
fcmovnb
test
jp
or
cmp
mov
repnz
cld
pop
cmpsl
jne
and
inc
sub
jo
push
cmp
mov
jle
sahf
dec
adc
push
sub
negb
roll
ja
psubw
negl
mov
call
and
lea
ficompl
or
outsb
call
mov
add
lahf
into
aam
mov
sub
jbe
jmp
adc
push
addr16
imul
iret
bound
inc
add
jle
xchg
sti
stos
pop
aam
sarb
out
mov
adc
inc
fcompl
jmp
arpl
inc
xchg
int
sarb
lahf
push
rorb
add
popf
pop
or
pop
sahf
jne
mov
jmp
pop
add
mov
ffree
icebp
add
xorb
pop
test
jl
je
stc
push
sbb
pop
je
inc
sub
jbe
inc
xchg
pushf
insb
lock
test
inc
add
ror
iret
dec
dec
adc
ret
outsl
adc
xor
sub
pop
push
cmp
cmpsl
xchg
scas
bound
xor
shlb
ret
or
cmp
test
dec
xor
into
mov
jo
clc
rcrl
add
sub
les
mov
xorb
xchg
or
xchg
call
dec
push
push
add
dec
out
or
cwtl
enter
test
dec
pushf
insb
jl
addb
jmp
ljmp
mov
sub
sahf
lret
sbb
mov
int
scas
mov
push
lcall
out
mov
add
mov
je
cmc
push
outsl
fs
add
push
movsb
and
xor
cmp
in
pop
sbb
cmc
out
xchg
addr16
push
jg
jnp
cmp
cbtw
mov
cmpb
imul
fsub
dec
iret
add
sti
push
add
xchg
enter
test
or
push
xor
pop
jnp
lds
sub
add
pop
jg
test
jnp
or
cli
in
lds
out
repnz
bound
xlat
pop
sar
mov
fs
notb
mov
movsb
sahf
ficoms
das
xlat
cmpsl
jl
hlt
mov
xchg
add
dec
sub
xor
jle
fs
sub
and
pop
shll
inc
cs
shlb
pop
push
mov
aam
mov
repnz
sub
add
cmovle
shl
pop
cli
sub
cld
movsb
lahf
test
push
xchg
inc
dec
mov
and
jecxz
repnz
cmp
adc
sub
test
aad
lret
push
jmp
pop
aad
inc
aam
nop
or
lds
ljmp
sub
push
fisttps
enter
adc
cmp
jno
sub
ret
test
lods
adc
loope
stos
arpl
add
inc
or
dec
jp
fucomi
add
fwait
stos
jle
mov
mov
gs
hlt
xchg
loop
in
sbb
mov
push
mov
out
out
repnz
pop
inc
inc
jne
out
js
dec
bound
imul
mov
adc
inc
into
pop
ret
add
icebp
xorl
push
or
or
mov
jno
mov
ds
jne
pop
sar
jnp
inc
ljmp
add
pop
clc
or
aad
inc
mov
ss
loope
test
pop
mov
push
mov
jb
inc
inc
inc
aad
aas
gs
add
scas
adc
xchg
movsl
dec
jns
xchg
xchg
mov
push
lret
and
xchg
mov
mov
jmp
gs
repz
inc
pop
dec
or
mov
xor
add
cmp
insl
sub
outsb
lret
shl
ret
jb
test
cmp
fistps
mov
and
inc
mov
push
lea
or
out
sar
xchg
mov
sbb
addl
sbb
mov
outsl
xchg
aaa
fadds
xor
mov
fmuls
inc
sbb
inc
mov
pushl
jbe
jae
jle
mov
push
cmp
adc
idivl
pusha
fsubp
pop
fwait
jns
lret
add
pop
pop
out
push
add
mov
cmp
clc
fs
lea
addr16
mov
xchg
fcoml
jns
in
xor
adc
test
sbb
cmp
xor
cmp
fbld
jo
sub
sbb
stos
dec
and
nop
mov
arpl
in
or
inc
ss
adc
aas
xchg
sub
push
test
or
loope
xor
int3
imulb
add
cltd
mov
jge
xchg
imul
lds
sub
fcoml
in
push
push
inc
jnp
repnz
subps
jne
andl
xchg
xor
dec
gs
repnz
imul
and
data16
call
in
push
or
fiaddl
bound
pop
shrl
imul
mov
adc
mul
ds
adc
cmp
hlt
idivl
sbb
mov
jecxz
mov
xchg
sub
sti
scas
xchg
inc
addr16
inc
pop
lea
shrd
pushf
je
test
daa
hlt
mov
and
mov
xor
adc
xchg
jl
push
aad
adc
aas
sbbl
fsubl
sub
out
sbb
xor
xor
addr16
pop
cmp
dec
jle
cmp
lcall
cmp
scas
sub
cmp
or
mov
xor
iret
add
xchg
ret
mov
push
data16
and
lcall
mov
stc
sub
fistps
add
inc
mov
pop
cmp
outsb
fnstsw
stos
fidivl
sub
push
ljmp
lock
fmulp
out
mov
jg
fistpl
pusha
dec
add
mov
inc
out
lock
xchg
sub
mov
rorb
sub
je
jb
adc
enter
jae
inc
nop
dec
ficomps
cmp
cmp
cmp
dec
adcl
inc
sar
pop
sbb
out
mov
add
outsl
sbb
mov
fisubrs
mov
pop
and
xor
roll
out
gs
mov
lds
xor
movsb
dec
movsb
bound
push
xchg
fsub
and
jnp
sub
xchg
decl
ljmp
pop
cwtl
jl
xor
gs
stos
xor
jbe
jg
jmp
cmpsl
int
ret
in
jne
fcomps
in
mov
xchg
push
pop
mov
push
push
movsb
shl
push
xlat
adc
cmp
fisttpll
or
pop
jmp
jae
aam
jg
in
dec
mov
cli
mov
fwait
mov
repz
sahf
jno
or
xorl
lods
ja
pop
cltd
jno
imul
hlt
icebp
aaa
ljmp
aad
iret
or
rol
lcall
movsl
fcmove
lret
xchg
bound
sub
pop
cmp
ja
rcrb
mov
mov
mov
pop
ret
or
mov
mov
sub
call
fwait
out
mov
in
inc
inc
js
dec
or
inc
mov
lea
jno
fstps
stos
xorl
mov
cmc
mov
negl
mov
fcomps
or
mov
push
adc
or
adc
rcrl
popf
xchg
pop
pop
icebp
pop
dec
cmp
lods
jo
les
pusha
xchg
addr16
lock
push
dec
je
mov
xor
adc
mov
repz
data16
sahf
add
test
xchg
ja
orl
out
aas
dec
sbb
and
movsb
jp
inc
sbb
test
push
jmp
sub
cwtl
pop
mov
dec
clc
ficoml
filds
sti
sti
clc
xchg
xor
shrb
ss
fdivrl
fstps
push
ret
sahf
push
pop
nop
inc
lds
test
stos
imul
outsl
push
sub
loop
fldt
out
adc
xchg
push
dec
loope
shl
pop
jl
data16
fs
mull
jnp,pt
or
out
or
cwtl
in
push
sbb
lret
xor
jns
in
insl
orb
cwtl
scas
and
xchg
cwtl
mov
sahf
xor
lcall
rorb
fldcw
mov
dec
loope
mov
mov
or
jb
in
push
fdivp
cmpsb
out
jmp
dec
mov
xchg
or
dec
dec
repz
lea
call
mov
outsb
inc
out
add
stc
or
or
mov
cli
mov
ljmp
dec
and
outsw
push
or
into
pop
xor
add
test
mov
mov
lea
add
fwait
xlat
insl
lahf
sbb
subb
sbb
jae
addb
push
int
ljmp
nop
sub
stc
mov
xor
cmp
mov
divl
es
jbe
fwait
loop
loop
cmpsb
mov
out
lea
sti
push
mov
mov
aaa
or
mov
jo
mov
xchg
push
cmovne
lret
lock
jmp
or
push
xchg
push
sub
mov
xor
ret
sbb
push
mov
fs
rorb
jg,pt
sarb
and
xchg
stc
cmp
push
cmpb
adc
dec
js
int3
leave
jle
sbb
loope
data16
xor
mov
push
cltd
insb
lcall
jno
jp
in
fwait
mov
dec
in
test
cmc
add
add
and
loop
jnp
in
and
movsl
lahf
fcoml
cltd
pop
repz
jns
push
push
roll
jp
xlat
outsb
mov
aaa
rcll
push
dec
fidivrl
in
inc
mov
daa
rolb
insb
jne
push
sub
sbb
cmp
loopne
stos
fs
mov
and
roll
mov
lret
cmp
rcll
ds
sub
jnp
mov
sbb
jo
add
orl
inc
sbb
mov
jns
and
ja
mov
xor
outsb
jmp
push
sahf
xchg
pop
ds
dec
inc
push
in
insl
pop
dec
inc
mov
jecxz
jo
adc
cmp
insb
xlat
mov
and
lods
dec
cmp
cwtl
dec
mov
inc
mov
mov
dec
or
mov
lret
cmp
iret
mov
ror
insl
pusha
jge
add
andb
movsb
xchg
stos
pusha
outsb
fildl
xchg
xor
nop
add
dec
shll
mov
sub
aam
dec
in
loop
aad
or
test
and
std
testl
xchg
testl
fwait
or
outsb
push
stos
sbb
test
arpl
and
push
mov
insb
dec
xor
nop
cmpl
xchg
lods
sub
add
and
icebp
fs
inc
lock
mov
cmpsl
fisubrs
adc
call
cmp
les
mov
mov
push
in
daa
push
std
jmp
mov
out
mov
dec
imul
xchg
xor
scas
rolb
mov
negb
sbb
dec
aad
out
mov
out
dec
cmpsl
pop
add
push
imul
unpckhps
sub
nop
movsb
aas
mov
jne
dec
sarl
jb
sbb
rep
and
xchg
lahf
aas
out
jmp
int3
push
add
mov
mov
fwait
mov
into
loop
out
testb
jno
cmp
mov
jp
and
ss
call
pop
cld
std
fisttps
jmp
dec
pop
jb
xor
data16
add
jno
adc
lods
mov
icebp
imul
jbe
loop
jnp
out
jge
jmp
adc
mov
mov
sbb
aaa
mov
inc
aaa
pushf
add
ret
bound
pop
inc
pop
test
data16
leave
mov
ret
push
stos
jbe
orl
pop
sub
cmpxchg
jns
xchg
out
lods
add
out
stos
xor
pop
push
mov
ret
cmc
adc
repnz
cmp
imul
mov
and
pop
push
aad
movsb
fwait
jmp
dec
lcall
fisubs
inc
xchg
push
inc
push
inc
xlat
mov
and
jne
pushf
adc
fs
jle
and
mov
inc
out
mov
xor
loop
mov
add
pop
pop
jns
push
dec
xor
cwtl
jmp
mov
add
xor
sub
push
loope
lds
mul
pop
add
xchg
loopne
mov
push
lods
fnstsw
xchg
fdivs
out
outsl
lret
mov
push
and
imul
and
xor
push
cmp
sub
xchg
jle
aam
mov
fs
sarb
pushf
dec
into
dec
sub
test
mov
cmp
xor
cmpsb
push
cld
xor
or
nop
incl
js
jge
leave
test
adc
sahf
pop
aad
sbb
lock
push
rcr
sbb
mov
pop
sbbl
mov
jbe
or
and
xor
scas
pop
cmc
es
clc
push
aas
inc
jmp
fwait
xor
pop
jp
sub
daa
arpl
sbbb
enter
add
test
inc
or
mov
imul
jo
mov
jne
loope
adc
pop
pop
std
sahf
cmp
sarl
pop
ljmp
js
inc
sbb
xchg
aad
stc
cltd
pop
mov
into
jne
sbb
int3
addb
adc
cmpsl
mov
or
and
sub
add
sub
imul
cmp
or
xchg
icebp
mov
dec
scas
iret
jo
jecxz
inc
add
repz
push
cld
shll
icebp
scas
aad
add
stos
cmp
cs
push
jmp
test
popa
dec
adc
aaa
js
add
xchg
sub
clc
sarb
pop
push
mov
mov
aad
sti
pop
sub
inc
aad
pop
outsl
cld
shrb
inc
mov
rep
cld
in
sti
dec
xor
push
mov
and
fisttpl
mov
fs
shlb
cs
outsl
btcl
fwait
iret
sbb
sub
mov
clc
push
mov
cltd
mov
fdivl
jg
divl
mov
bound
jmp
stc
push
mov
mov
push
sub
loopne
or
cli
enter
sub
out
push
out
lds
jecxz
push
incl
cli
ret
cmp
sarb
sub
aam
sub
mov
xor
dec
das
aad
cmp
cmp
addr16
or
push
mov
inc
jp
hlt
ljmp
push
xchg
jno
jb
pop
sbb
cmpsb
and
jb
inc
movsl
mov
scas
arpl
add
cmp
aad
fldenv
add
in
outsb
dec
aas
fwait
jle
stos
bndstx
subl
sti
push
jbe
enter
fbstp
xchg
or
ret
cmpsl
sub
lret
andb
sbb
cmp
iret
and
lods
or
inc
jp
repnz
adc
xor
arpl
jo
jl
into
in
repz
fstl
insl
ret
mov
adc
or
mov
enter
fiaddl
bound
aam
mov
stos
lcall
fimuls
lea
in
je
inc
scas
push
jg
mov
push
mov
dec
repz
xlat
aad
cmp
adc
popa
push
mov
inc
pop
outsl
or
push
fs
inc
sbb
int3
dec
push
mov
gs
lea
sub
cmpb
mov
inc
push
xchg
mov
mov
shll
inc
push
rcrl
je
ret
mov
adc
mov
aam
xchg
cmpb
mov
dec
cmpl
sub
adc
jl
lods
pop
jmp
orb
iret
push
or
pop
cmp
jmp
xchg
popa
add
push
jge
fmuls
es
lret
mov
ret
test
inc
and
cs
lret
loopne
push
add
rcl
test
mov
iret
loope
add
ljmp
ljmp
in
cmpsb
lods
subb
notb
cmp
sbb
mov
sbb
mov
push
pop
push
jg
jno
repnz
or
or
or
inc
push
cwtl
imul
xor
les
dec
xchg
outsb
jnp
pop
lods
xchg
or
xchg
xchg
xchg
mov
sbb
mov
cltd
xor
dec
adc
mov
mov
sub
push
clc
out
scas
mov
ljmp
or
fiadds
add
mov
loope
sub
fisubrl
sub
les
sub
cmpsl
shll
divl
insl
cmpsb
mov
jmp
and
jns
fnstenv
inc
fsubrs
sbb
cmp
cmpl
inc
jmp
es
mov
and
ljmp
push
add
cli
add
push
aas
cld
xchg
out
push
out
add
and
fidivs
push
mov
xchg
aad
idivb
fstps
adc
pop
fdivrl
jle
mov
and
subl
shrb
lret
jno
pop
aad
mov
jge
xor
in
sub
popf
hlt
fst
cli
test
outsl
out
and
fs
test
sbb
std
push
das
pusha
jnp
out
cmp
outsb
sbb
cltd
adc
out
inc
cmp
fucom
dec
adc
push
cmp
les
ret
xor
cltd
cmp
inc
outsl
dec
jl
fistpl
adc
jge
inc
push
int3
mov
sub
sub
xor
adc
and
dec
or
and
out
adc
sub
sbb
cwtl
sbb
and
push
lods
and
orb
cmp
insb
and
hlt
and
out
dec
dec
hlt
push
shl
iret
inc
lock
push
ss
cmp
add
ds
or
dec
pop
pop
xchg
or
es
add
and
cmp
inc
subb
jmp
mov
loop
sub
addb
add
adcb
and
into
dec
push
leave
sbb
or
leave
mov
xlat
lcall
mov
xchg
sub
jl
out
dec
cmp
cmp
add
imul
jecxz
dec
mov
mov
push
push
mov
out
lret
test
rcr
incl
mov
push
pop
sub
sbb
cmp
xchg
fcmovu
push
dec
sub
data16
mov
cmp
enter
and
pop
mov
cmp
aad
mov
mov
repnz
mov
cmpsb
xchg
insl
jmp
xor
mov
xor
adc
xchg
or
sbb
fwait
mov
decb
das
xchg
insl
adc
inc
lret
stos
jnp
mov
xor
jg
imul
int
mov
mov
lock
mov
push
fdivrl
out
das
sbb
cmpsb
mov
sub
lock
xor
xchg
inc
xchg
incb
sahf
sub
push
aam
inc
xor
add
inc
loopne
jno
jns
arpl
icebp
pop
fs
inc
daa
pop
xor
ret
sub
idiv
mov
lret
mov
test
fwait
add
lret
orb
push
or
jecxz
sbbb
ds
aaa
lret
cmpsb
les
inc
xchg
jns
mov
or
lret
adc
enter
jmp
dec
sbb
imul
inc
in
add
mov
dec
jg
mov
ret
call
repz
jo
push
mov
cmpl
jno
pop
push
icebp
add
pushf
stos
ret
fistpl
mov
pusha
ljmp
xchg
out
inc
pop
sbb
xchg
loope
add
mov
pop
add
adc
jle
arpl
cmc
push
in
adc
outsb
cmp
mov
das
pushf
stos
inc
sub
adc
aam
mov
out
arpl
jge
mov
xchg
insb
outsl
dec
jb
dec
inc
scas
dec
stc
rol
xchg
xchg
stc
adc
mov
aad
or
sahf
fistl
push
addr16
lods
das
icebp
dec
stc
jae
mov
ja
or
jno
icebp
cmc
aam
xchg
dec
paddb
push
aaa
es
mov
mov
mov
mov
dec
sub
out
xchg
sbb
jge
xchg
lcall
orl
fstl
dec
outsl
dec
mov
jmp
sbb
xor
shlb
adc
add
or
in
enter
or
ja
jnp
lds
adc
in
inc
data16
mov
xor
subl
mov
cmp
lods
cmp
pushf
test
stc
pop
mov
shll
incb
addr16
jle
ds
sub
xor
push
or
pusha
mov
cmp
pop
rcrb
insl
add
jb
push
push
or
nopl
pop
iret
loope
mov
dec
add
ss
and
gs
repz
adc
and
adc
int
mov
aaa
jae
lret
faddl
dec
lods
sub
dec
sbb
dec
dec
lahf
adc
in
mov
jecxz
repnz
dec
scas
xor
cmp
in
aas
int
insb
call
pop
cmp
push
pusha
pop
shll
push
sbb
inc
imulb
push
inc
ret
jo
pop
clc
inc
aaa
dec
add
cmp
js
fildl
jecxz
lock
aad
out
cltd
popf
shlb
cmp
add
xchg
xchg
div
leave
rcrb
aad
sbb
mov
pop
mov
sub
jb
out
lea
xchg
dec
lahf
movsb
aaa
scas
pop
fisubrl
xor
xchg
mov
outsl
cs
into
fstl
cwtl
pop
or
orl
shll
imul
cmp
xor
mov
sub
sahf
jbe
xchg
jge
inc
pop
sub
mov
sbb
aam
test
stos
add
sub
pushf
fisttpll
test
repz
sbb
or
data16
or
add
repz
inc
loop
lods
push
sbb
xor
lahf
insb
push
xor
loope
push
pop
jbe
inc
or
cmpl
inc
mov
mov
fbld
jo
out
adcb
mov
sbb
dec
xor
cmp
jl
loope
jbe
or
push
sbb
mov
stos
dec
xchg
divb
fstpl
pop
mov
add
jo
das
repz
call
and
xor
add
sub
outsb
in
mov
dec
sbb
sbb
push
push
pop
cmp
xchg
add
rclb
lahf
jo
pop
xchg
test
fiaddl
mov
cli
or
jbe
mov
mov
aad
adc
or
sbb
mov
decb
adc
push
add
push
mov
xor
jo
adc
shll
xchg
out
aam
pop
loopne
es
mov
leave
mov
mov
scas
pop
stos
int
and
out
push
pop
andb
mov
dec
sub
push
sbb
sub
mov
inc
jb
dec
add
ds
in
or
cmp
mov
bound
pop
cmp
rorl
shll
dec
or
ljmp
test
sbb
cmc
out
and
push
and
xor
les
dec
push
and
loopne
adc
insb
adc
aad
inc
into
and
rolb
or
sub
and
adc
ja
cmp
repz
push
aaa
pop
or
mov
icebp
jbe
lret
daa
cmp
pop
pusha
cli
adc
cld
cltd
adcb
sub
sub
mov
add
xchg
push
and
scas
stos
les
cmpsl
jge
cltd
push
repz
das
inc
rcll
push
dec
subb
jbe,pn
inc
arpl
out
dec
data16
bound
out
les
mov
loope
pop
xchg
and
mov
mov
fs
in
push
sbb
mov
repz
aaa
imul
mov
stos
pop
pop
xchg
mov
push
repz
add
int
in
mov
cmc
mov
movsl
mov
test
and
or
or
ret
shlb
pop
movsl
pop
push
pop
jnp
inc
mov
std
ja
shrl
jmp
movb
mov
lods
adc
hlt
fnsave
xchg
add
pminsw
cld
mov
cmc
popf
jb
pop
popa
cltd
repz
cmp
nop
rclb
mov
push
push
mov
iret
fwait
jne
or
dec
jl
insl
lret
and
sahf
frstor
add
cmp
aad
test
pusha
int
loop
cwtl
xor
adc
push
and
pop
cld
dec
nop
sahf
mov
sbb
scas
push
movsl
hlt
popa
outsl
push
repnz
pusha
push
mov
loop
iret
mov
mov
dec
jge
mov
in
addb
jne
shll
es
mov
fdivr
out
call
lret
or
loopne
jns
hlt
xchg
jecxz
inc
rorl
into
test
or
lods
push
es
add
xor
inc
or
cmp
mov
aad
repz
popf
data16
and
out
iret
xchg
je
in
out
hlt
sub
cwtl
fimull
testb
das
sub
cld
sub
jge
xor
cmc
pop
adc
imul
pop
jb
push
sub
bound
mov
or
push
rcl
test
sub
adc
cmpsb
or
push
sbb
ret
pop
mov
scas
lock
cmc
adc
jl
rorl
scas
pop
test
mov
daa
out
jg
jge
pop
rolb
je
mov
sub
xor
fistps
inc
and
ljmp
repz
or
cmc
cmp
call
and
cmc
je
imul
mov
mov
dec
jp
xor
mov
pop
xchg
cmp
jle
aad
es
jecxz
add
pop
push
mov
xor
mov
jmp
xchg
push
mov
insl
fstps
xor
mov
jp
pushf
insl
pop
fyl2xp1
cmpsb
push
xlat
adc
mov
das
add
inc
and
das
fadds
adc
pop
in
and
xchg
pop
cmp
push
xorb
aas
or
xor
sbb
repz
xchg
repz
lcall
aam
mov
xorb
sub
and
jp
fildl
pop
ljmp
repnz
inc
out
insl
arpl
cli
pop
pop
and
pop
cmp
jmp
xor
arpl
adc
dec
push
lea
add
dec
imul
cmp
sbb
xchg
push
or
pop
cmp
push
mov
aaa
mov
push
shll
dec
inc
xor
jecxz
test
arpl
inc
fidivrs
das
pop
pop
adc
imul
push
push
ret
xor
adc
movsb
enter
xchg
inc
lds
outsb
les
pop
xor
nop
sub
clc
dec
inc
dec
js
jmp
push
in
mov
sbb
fstps
dec
loope
mov
lods
das
test
lods
out
lods
out
pusha
push
gs
pop
outsb
mov
push
xchg
mov
inc
xchg
cmpsb
lods
movsl
xchg
or
jo
shlb
les
mov
add
adc
cmp
pop
pcmpgtb
enter
test
and
out
add
popa
dec
fdivrl
int3
mov
out
jo
into
int
add
mov
pop
fiadds
mov
or
or
stos
imul
loope
sub
jns
call
xor
adc
adc
pop
mov
pop
fwait
rclb
lret
insl
push
mov
shrb
in
xchg
mov
clc
pop
int
sub
cmc
push
repz
les
sbb
lods
ss
in
jno
dec
test
lods
rorb
movsl
adc
pop
lods
sarl
sub
pop
in
dec
xchg
ret
in
aas
pusha
jp
xchg
add
or
sub
mov
les
or
sbb
pop
data16
cmp
xchg
ret
mov
fmull
pop
test
test
iret
insl
xchg
push
sub
lock
pop
mov
in
jnp
or
icebp
xor
popf
ja
mov
lods
popf
pushf
lahf
fs
push
ret
cmpsb
add
movsb
lods
inc
mov
fists
test
cmpsb
call
loop
adc
pop
inc
stc
add
add
mov
add
xchg
cmp
lock
sub
add
cs
inc
and
and
xlat
pop
pop
js
dec
ficomps
fcomps
bound
sbb
xor
dec
push
rolb
mov
mov
cmp
adc
and
pusha
push
jnp
jbe
sbb
sub
psubusb
lahf
stc
das
xchg
cltd
or
xchg
std
xchg
mov
cmp
in
xchg
cmpb
psraw
pop
cli
or
and
pop
jle
mulb
sub
xchg
mov
jae
lods
jno
push
xor
jg
aas
mov
xchg
enter
mov
sbb
hlt
ljmp
sbb
lahf
and
bound
inc
jns
add
xchg
pop
add
xchg
sbb
les
push
mov
in
sbb
fwait
push
xchg
sub
mov
or
jb
push
inc
mov
mov
dec
js
scas
mov
cmp
fsubs
call
pop
push
sub
sbb
jle
pop
mov
test
xchg
test
pop
mov
push
xor
add
push
jns
jo
stos
dec
dec
lret
shl
sbb
call
cmc
imul
pop
mov
icebp
sub
sbb
pop
pop
jp
nop
xor
mov
out
ret
cli
sub
dec
stos
scas
pop
aam
addr16
pop
xor
fldcw
mov
cmp
cmpsb
lea
jecxz
fstpt
adc
or
inc
clc
or
push
cmpsb
inc
fs
push
push
sbb
out
push
mov
inc
stc
pushf
xchg
sub
mov
and
mov
xchg
insb
add
jne
mull
sub
mov
pop
nop
push
cmp
mov
ret
ljmp
addb
pop
jle
dec
jecxz
cli
je
adc
jge
fimuls
in
out
cmc
faddl
cmp
cli
dec
inc
aas
outsb
jge
mov
repnz
push
xchg
outsb
xchg
lea
jl
sub
push
fildl
enter
fbld
fldt
mov
aad
mov
push
inc
hlt
xor
push
lret
pop
mov
cmp
sbb
shrl
call
mov
cli
addr16
cld
insl
ljmp
pop
int
cli
add
jno
adc
mov
sbb
enter
lahf
or
cmpsb
push
fdivl
inc
push
cmpsb
and
sarl
add
mul
insb
notl
sahf
sub
mov
add
jnp
xor
and
mov
or
rorl
bound
rcrl
fldt
add
sbb
adc
bound
dec
add
sti
jno
lret
fwait
xor
xor
push
sbb
add
sbb
pop
jno
daa
inc
test
xchg
sahf
inc
sub
rcr
mov
mov
ss
outsl
imul
pushf
lahf
xor
add
pop
stos
sub
jno
add
fs
push
ficoms
mov
xchg
sub
scas
fbstp
jge
pop
test
pop
and
js
into
mov
push
rcrb
inc
imul
inc
xor
pop
sbb
loopne
subb
dec
jno
xchg
pop
or
sub
lahf
xchg
inc
cli
jno
test
das
cmpb
pop
fld
and
xchg
jl
mov
push
dec
je
push
mov
lea
cmp
sbb
leave
ljmp
add
jl
in
fildl
and
gs
shl
movd
out
ret
mov
or
mov
ljmp
mov
ss
mov
inc
popa
icebp
push
out
les
adc
ss
cmp
mov
jl
mov
dec
cmp
mov
incl
mov
dec
sahf
shr
and
leave
or
adc
leave
daa
push
add
shl
dec
xchg
hlt
pop
adc
xor
cmp
jae
push
mov
push
jp
call
mov
lods
enter
imul
mov
iret
mov
push
pop
repnz
mov
dec
dec
adc
and
int3
dec
addl
sub
sbb
jno
adc
inc
and
add
and
cwtl
in
lea
aam
and
cli
mov
movsb
push
ret
icebp
xor
pop
or
lcall
clc
movsl
mov
mov
push
xor
popf
add
dec
mov
fdivs
dec
mov
mov
test
rcrl
push
cmp
int3
pop
xor
sbb
bound
mov
fbstp
jp
cwtl
sbb
push
mov
add
sbb
sbb
dec
xchg
xchg
inc
jo
loopne
int
xor
dec
fsubrs
ret
xor
imul
idivl
mov
mov
mov
fsubp
leave
int3
int3
push
xor
fsubs
lods
mov
xchg
inc
xor
xchg
add
push
dec
mov
cmc
repnz
mov
jp
mov
rcl
in
dec
add
jb
insl
xchg
lret
fstps
into
push
mov
jge,pn
je
movsl
xor
mov
jg
and
xor
stc
mov
inc
sub
xchg
add
pop
add
pop
xor
std
dec
lods
push
xchg
shlb
daa
mov
adc
xor
xchg
mov
jb
leave
pop
mov
lods
ss
ja
pusha
cmp
or
add
and
imul
outsb
inc
das
xchg
das
pusha
outsb
loope
imul
xchg
push
xor
push
jg
jmp
xchg
jg
jno
aas
sbb
cmp
loopne
xor
or
cli
ds
test
ds
std
sti
jecxz
hlt
mov
push
mov
int
mov
pop
pop
and
fucomi
push
jb
aad
cs
fwait
mov
jecxz
pushf
rcl
adc
sarl
movb
cmpsl
mov
out
test
clc
add
mov
fildl
popa
std
sarb
stos
push
adc
aad
jle
out
shll
in
inc
dec
sbb
stos
inc
jmp
and
addr16
cli
lcall
fwait
cmpsl
ffree
pop
std
xor
push
push
adcb
wbinvd
mov
es
and
dec
adc
xor
icebp
ret
push
mov
dec
ss
sub
cmp
imul
mov
add
add
jns
mov
add
addr16
mov
sbb
es
pop
leave
loope
imul
fstl
xchg
inc
mov
mov
stc
cmp
pop
mov
imul
xchg
std
xorb
mov
jp
sub
push
jmp
or
dec
and
fnop
popf
adc
sub
cli
jp
xchg
cmp
xchg
adc
and
outsb
ret
or
dec
cmp
mov
sbb
mov
int3
mov
je
sbb
cmp
cmpsb
stos
in
jae
or
imul
dec
call
repnz
pop
and
f2xm1
les
nop
mov
movsl
ljmp
adc
xor
sub
lcall
and
out
stos
int
xor
dec
xorb
dec
jmp
mov
add
and
inc
shlb
mov
jno
or
pop
mov
ret
mov
stos
roll
jge
std
sub
mov
es
adc
pop
sbb
dec
stos
xchg
inc
hlt
xchg
push
imul
push
cmp
fnstsw
pop
sbb
sahf
lcall
cs
lcall
jg
add
sbb
dec
or
cmp
outsl
pop
adc
lock
jecxz
lods
push
enter
push
adc
mov
out
mov
ljmp
jns
adc
mov
jnp
roll
stos
xor
shlb
stc
movb
ds
add
mov
push
les
pusha
jns
iret
mov
or
scas
mov
push
push
daa
xor
pusha
cs
inc
pop
movsl
xor
mov
jns
xchg
lea
aaa
sub
jno
lret
les
test
inc
inc
cmp
jl
jbe
inc
push
add
add
mov
jmp
movsb
mov
imulb
test
jle
sarl
dec
adc
mov
shlb
sti
pop
les
pop
mov
pop
shrb
pop
sbb
push
fadd
mov
xor
xchg
movsl
mov
in
lahf
adc
lock
clc
mov
add
fsubrl
xlat
scas
mov
and
rol
push
test
mov
cmpsb
test
mov
inc
dec
mov
and
jmp
in
fdivrp
push
das
inc
push
fidivs
sbb
daa
xchg
insl
loopne
cmp
dec
icebp
stc
cmp
jb
loope
repz
ja
xor
or
inc
pop
jle
cli
push
mov
lock
inc
cmp
mov
xchg
ljmp
shrb
push
push
lcall
mov
xchg
iret
mov
pop
ret
sbb
sub
jmp
divl
daa
jecxz
pop
cwtl
stc
sahf
xor
push
lods
or
divb
cmp
rorl
test
aad
scas
jl
cs
andl
test
jge
mov
aaa
les
mov
mov
and
mov
pop
stos
das
cltd
or
insb
test
xchg
stos
add
adcl
mov
mov
mov
pushf
lock
fdiv
jns
repnz
push
mov
adc
push
and
sti
cld
loopne
xor
stos
pop
or
mov
pop
dec
test
js
iret
fldcw
popa
mov
cli
js
notl
jg
sahf
popf
add
aam
sbb
in
fxch
out
or
sbb
and
daa
outsb
pop
jo
call
jmp
dec
sbb
lahf
into
outsb
std
dec
cmp
enter
js
and
cmpsl
iret
into
xlat
inc
insl
ss
push
les
popf
pop
shrl
push
insb
mov
jge
std
xchg
xchg
test
xchg
repz
shlb
aad
leave
shll
test
rcrb
out
lds
ja
fistpll
jb
fcoml
nop
jl
push
shl
iret
std
dec
xchg
lds
jl
mov
jp
loop
lahf
aad
pop
int3
sbb
cmp
mov
xchg
lea
ds
fimull
add
xor
mov
movsl
or
jp
movsb
cmpsb
nop
adc
cli
jae
cmp
movsl
push
xor
leave
divl
pop
or
loop
mov
into
outsb
leave
movsb
lods
xor
movsl
in
scas
xchg
arpl
or
xor
leave
aaa
aas
dec
js
stc
xchg
inc
enter
mov
ss
xor
loope
pop
inc
iret
test
sti
dec
insl
adc
and
pop
in
sbb
mov
inc
mov
dec
mov
das
mov
dec
sbb
cmpsb
sbb
sub
cmpl
into
ret
mov
sub
incl
mov
push
inc
mov
les
lods
es
push
int3
jb
ss
and
fs
jno
mov
pcmpeqd
dec
jne
pop
mov
cld
lret
shll
cs
mov
aad
push
cmpsl
mov
and
xchg
dec
rol
mov
mov
lds
test
cmpsb
mov
aaa
movsl
lock
jmp
test
cmpsb
xor
pushf
orl
and
std
sbb
fs
shl
lahf
aad
xor
push
int
popf
sbb
mov
std
mov
popa
inc
adc
cmpsb
and
loopne
sub
xor
test
and
je
daa
divps
pushf
sub
andb
ja
dec
pop
adc
inc
cwtl
xchg
shlb
inc
and
jae
loope
test
ror
cmpsl
lret
movsb
and
insl
cld
cmpsb
sbbl
inc
jnp
pushf
or
mov
mov
in
xor
pop
cmp
in
xor
in
cwtl
add
xchg
fdivs
mov
movsl
lret
and
jp
jg
fs
push
movb
xor
xor
out
mov
dec
int3
dec
mov
xchg
jl
je
rcrl
daa
pop
mov
outsb
mov
stos
int
add
ret
or
jge
dec
cmp
test
cmp
shl
dec
fisubl
subl
enter
adc
jp
adc
icebp
jns
popf
xor
daa
mov
sar
jp
sub
push
loopne
pop
rcl
adc
mov
or
push
jo
das
repz
sbb
lods
rcrl
hlt
mov
fstpt
aad
movsl
aas
insl
sbb
sub
adc
jo
mov
mov
mov
lods
bound
jmp
jle
mov
ret
ret
add
mov
fwait
lock
outsb
pop
sbb
push
call
out
adc
mov
lcall
mov
dec
sbb
ret
nop
test
mov
dec
push
enter
and
mov
je
mov
int
loope
ljmp
sti
inc
fnstsw
mov
cmc
mov
lods
scas
in
mov
out
mov
mov
das
nop
cmp
test
sub
es
mov
in
mov
mov
sub
lahf
jp
scas
xchg
inc
test
mov
popf
lret
adc
hlt
xor
xlat
fistl
or
enter
dec
into
lods
or
loop
lret
cmpsl
dec
les
out
in
imul
bound
iret
addb
jns
pop
inc
rclb
push
scas
cli
imul
and
jnp
enter
fucom
adc
sahf
call
mov
push
pop
lcall
and
jae
addb
push
imul
lock
mov
and
and
pop
adc
notl
ljmp
xlat
pop
cmp
add
jmp
cmpl
xor
js
into
pop
push
cmp
cs
jl
sbb
es
jnp
movsl
mov
mov
sahf
fwait
pop
push
or
ljmp
push
leave
fs
adc
ja
lret
int3
sbb
push
jo
xchg
inc
movaps
adc
pop
or
lcall
sbb
sub
xchg
aam
imul
hlt
xchg
imul
int
ss
dec
mov
push
rcrl
call
mov
imul
dec
js
mov
mov
popa
fstpt
dec
lds
xchg
out
cmc
js
or
jmp
mov
jle
imul
cmpsl
outsl
jns
mov
xor
fnstenv
ds
add
pop
jle
cmp
sub
cltd
mov
test
or
xor
loop
je
stc
dec
dec
clc
cmp
inc
inc
fstl
daa
addps
cmpsb
cmp
ficomps
shr
pop
fimull
jmp
fstpl
cmp
daa
jle
cld
fwait
int3
sti
test
pop
sub
add
mov
push
pop
js
cli
in
xchg
in
or
movl
sub
scas
shll
xor
lods
mov
add
lret
aad
mov
pop
jge
idivl
xchg
fs
push
mov
das
icebp
mov
js
mov
in
mov
mov
jmp
sbb
mov
mov
jb
movsl
in
add
hlt
mov
sub
pop
cmp
cmp
rcl
mov
add
es
xor
cmpsb
in
xchg
sbb
mov
add
mov
scas
cmp
sub
sub
popl
outsl
aas
mov
out
push
or
in
push
add
rcll
jp
lds
inc
test
mov
jge
imul
add
xchg
ljmp
fdivrs
add
dec
add
call
psadbw
enter
outsl
pop
das
inc
scas
add
out
xlat
mov
addr16
inc
invd
scas
xchg
div
je
or
jnp
lcall
out
arpl
rol
aam
std
or
aas
dec
fstpt
fs
stos
inc
mov
ror
outsl
je
dec
les
cld
jno
out
dec
loope
popa
mov
es
add
jg
leave
cmpsb
jge
imul
mov
add
or
push
int3
mov
cmp
jl
lods
jne
push
push
ret
pop
dec
cmpsb
filds
stos
push
scas
mov
mov
inc
sahf
mov
push
push
pop
xchg
cltd
xlat
fisubrs
test
outsb
cmp
popa
mov
add
adc
or
negb
ja
inc
push
std
pop
negl
mov
fnstcw
xor
dec
or
inc
jo
das
sbb
cli
mov
popa
xchg
movzbl
ror
das
fwait
cmpsb
push
mov
aad
faddl
xlat
mov
in
fsubl
lods
sbb
lret
pop
test
sub
or
in
lret
push
into
pop
cmp
mov
sar
js
or
ljmp
adc
pop
arpl
cmp
xchg
add
les
adc
outsl
stc
popa
mov
push
pop
add
mov
fidivrs
mov
shr
jbe
clc
jl,pt
je
cmp
int3
pop
and
xlat
mov
dec
lea
xor
fldl
rcrb
lahf
cmp
adc
and
or
es
data16
out
jge
nop
pop
dec
ret
dec
push
xlat
pop
adc
add
and
mov
mov
testb
xchg
ds
jnp
push
fmull
xchg
cmp
mov
test
insl
mov
sahf
mov
add
sub
pop
std
or
test
mov
push
and
cmp
adc
push
out
pop
jg
testl
dec
add
sub
adc
scas
ljmp
xor
fidivrl
aaa
sbb
repnz
add
mov
shl
pop
inc
lods
rorl
jnp
push
xchg
mov
mov
call
jnp
jge
cli
mov
into
cmp
mov
xchg
mov
push
push
lret
mov
push
imul
inc
cmc
jno
leave
and
push
inc
sbb
lahf
loope
and
je
ret
ljmp
sbb
fisttpl
sar
add
jge
mov
push
sti
jbe
dec
mov
les
dec
out
xor
mov
pop
aaa
jno
iret
push
in
test
int
lods
and
movsb
sub
jae
xchg
add
out
xchg
lret
out
push
in
add
out
mov
movsb
fisttpl
dec
dec
stos
icebp
testl
dec
loope
add
ds
fs
fnstcw
mov
dec
sbb
xor
scas
mov
mov
fisttpl
pushf
mov
mov
inc
scas
push
dec
mov
pop
jmp
enter
dec
mov
jbe
or
push
or
lods
sbb
sub
in
test
addr16
push
add
xchg
loop
in
clc
bnd
ret
mov
jno
je
daa
cli
cmc
mov
jp
dec
sbb
pop
push
mov
loop
and
jg
xchg
stos
lock
jecxz
adc
js,pn
dec
bound
mov
mov
into
outsb
add
mov
rcrl
xor
int
or
sbb
sbb
loop
cmp
push
fmull
cmpsl
scas
rorl
cmp
inc
jbe
int3
inc
jbe
xor
repz
dec
push
or
aaa
jmp
repnz
ljmp
insl
dec
cmp
and
inc
fwait
ret
jno
ror
xchg
mov
xchg
cmp
rdpmc
mov
cmpsb
iret
fdivr
add
jne
cmp
mov
out
neg
pop
adc
xor
mov
cli
repnz
mov
push
aad
xchg
jae
cld
and
jne
sub
shll
push
stc
xor
jl
xor
and
rorl
lods
mov
adc
pop
je
jle
add
mov
add
and
mov
ja
jbe
std
mov
ljmp
iret
loop
mov
pop
xchg
mov
cmc
jne
xchg
push
cmp
sahf
nop
cmp
outsl
out
inc
push
loop,pn
xchg
push
sbb
xchg
adc
out
out
cltd
pop
mov
adc
and
jg
fidivl
xchg
mov
jne
add
mov
sbb
sub
mov
int
mov
jo
sti
pop
jge
push
mov
mov
mov
xchg
push
push
xchg
lock
push
lods
addb
xchg
jmp
filds
pop
test
mov
aaa
dec
xor
adc
add
loop
mov
pop
movsb
bound
jnp
nop
in
insb
mov
dec
fsub
and
inc
push
lods
movsb
cs
add
test
cmpsb
cmp
mov
xor
cwtl
arpl
and
jns
xchg
push
pop
popf
sbb
fst
or
pop
lret
mov
sahf
jp
in
mov
fwait
mov
ret
mov
push
hlt
sbb
into
dec
push
inc
in
mov
cld
jbe
aam
data16
cld
add
les
std
bound
adc
xlat
dec
push
mov
cmp
push
sbb
cmpsl
mov
cmp
sbb
out
sub
or
lcall
pop
push
repz
adc
fiadds
xchg
xchg
fsubr
mov
xorl
cmp
in
pop
pop
stc
rorl
test
sub
in
push
fdivs
aas
es
imul
or
pop
or
mov
icebp
enter
push
add
daa
sub
fbld
inc
and
and
cmpb
push
sti
iret
xor
clc
push
push
lds
cmp
add
xor
movsb
imul
in
fstpt
mov
sbb
imul
cmp
loop
bound
inc
pop
and
pop
aaa
imul
cmp
add
mov
sbb
popa
jb
jge
lcall
and
in
ja
add
mov
add
mov
or
or
cmp
pop
jb
mov
mov
lods
sub
lahf
mov
mov
jg
inc
scas
popf
shlb
sub
or
lret
rcrb
pop
xor
jmp
pop
xor
push
jns
mov
into
mov
leave
aad
pop
push
pop
loopne
jecxz
sub
add
insl
inc
out
push
pushf
cmp
mov
jmp
push
mov
shl
pop
xor
fidivrl
pop
jne
lods
push
adc
daa
xchg
adc
mov
pop
lock
fidivs
ljmp
dec
pop
scas
imul
jecxz
mov
inc
fdivrl
lods
adc
test
jnp
xchg
lcall
mov
imul
inc
xchg
in
scas
hlt
jle
add
scas
cmp
add
jmp
jnp
xchg
cli
sub
lods
dec
sahf
xchg
jae
sbb
negb
mov
aas
dec
mov
dec
rcr
cwtl
cmpsb
mov
cmp
iret
fstl
lods
pop
jle
inc
adc
dec
loop
add
jecxz
or
jno
mov
dec
insb
fwait
push
push
and
addr16
int3
es
scas
out
mov
movsl
scas
shrb
dec
xor
lds
fcmovnb
imul
ret
jo
pop
jl
and
out
jb
xor
aam
push
push
div
call
dec
jb
fnstsw
cltd
push
sbbb
mov
sbb
dec
add
lret
fdiv
daa
aas
pop
das
scas
lods
pop
jg
xor
in
jl
adc
push
fidivrl
inc
sub
stos
and
inc
jg
sub
mov
test
push
das
stos
jno
jb
loope
cmp
test
stos
insb
loope
inc
out
ja
xor
lds
inc
add
xchg
fprem1
add
or
or
fidivl
sbb
gs
xchg
inc
jp
push
in
pop
mov
jnp
inc
imul
iret
jle
lock
mov
fxch
enter
xchg
into
mov
mov
sbb
call
or
jno
shr
add
in
add
iret
pop
sti
fnstenv
mov
out
xor
mov
clc
push
ss
and
test
lods
jnp
sahf
push
ljmp
inc
in
mov
sbb
cmp
aas
hlt
add
lods
push
fwait
mov
dec
xchg
xor
jle
mov
nop
dec
pop
jns
dec
imul
in
add
adc
rolb
sub
lret
pop
in
js
js
xor
ljmp
or
lds
pop
and
popf
pop
adc
pop
rolb
pop
ficompl
dec
shl
out
iret
addr16
js
add
imul
sub
xchg
loopne
push
inc
into
mov
xchg
test
int
pop
popf
pop
cmp
pop
xchg
or
mov
cltd
nop
rol
loop
add
mov
mov
out
vphaddudq
jmp
mov
xchg
adc
mov
out
inc
fmull
insb
popa
inc
mov
mov
daa
add
je
xor
pop
ja
scas
jb
pop
push
pop
cmp
ljmp
jg
xor
pop
or
sub
mov
adc
mov
into
out
sub
out
iret
jmp
push
sub
add
or
lret
out
movsb
push
cmpsl
mov
lock
jnp
or
mov
mov
dec
loop
fiadds
pop
repnz
mov
sub
sub
movsl
add
in
push
mov
push
scas
ret
push
sbb
jo
fisubrs
ds
or
test
iret
fucomp
fcoms
std
cld
lock
into
push
ret
pop
imul
jae
cmp
adc
inc
into
jns
loop
xadd
call
imull
rolb
dec
jmp
xor
add
or
lods
jb
aas
lods
push
adc
leave
out
pop
in
out
dec
pop
adc
shl
cmp
ret
or
leave
push
xchg
xlat
ljmp
push
jns
cs
cli
xlat
cmp
rcrl
sbb
jl
rclb
dec
bnd
add
loope
sub
push
inc
push
fabs
test
xchg
mov
cwtl
cs
dec
and
mov
xchg
mov
xor
jecxz
fistps
out
mov
jg
fimull
mov
sbb
push
add
cld
dec
mov
adc
push
push
mov
hlt
sti
mov
rcl
fsubrs
and
and
sub
shll
orl
adc
xchg
inc
ss
fbstp
ret
dec
movsl
leave
sbb
jae
add
dec
inc
rorb
pop
ds
repnz
push
mov
cmp
es
or
lcall
fs
orb
shlb
jnp
sahf
push
jecxz
addb
push
cwtl
inc
mov
test
cmp
jb
mov
cs
sub
push
cltd
push
push
cmc
iret
pop
push
jp
cmpsb
loop
icebp
xlat
add
shll
jge
mov
loop
mov
ss
xchg
int3
sti
popf
loope,pt
pop
mov
cs
stos
or
xlat
mov
fistpll
cmp
imul
pushf
mov
adc
adc
aad
int
push
push
out
add
pop
cmc
pop
pop
adc
ret
leave
sbb
adc
pop
dec
xor
mov
stos
loop
stos
xlat
lods
loop
sbb
fcmovnbe
sub
xchg
outsb
add
ja
clc
xchg
push
add
pop
or
or
popa
xchg
inc
cmp
icebp
loope
sbb
dec
int3
cld
mov
mov
fldenv
mov
scas
xlat
rcll
jno
dec
mov
loop
xchg
movsl
push
or
fwait
lcallw
lods
xor
jp
mov
adcb
enter
push
jl
popf
dec
mov
cmp
mov
out
cwtl
adc
and
repz
jae
je
stos
fwait
dec
or
adc
push
cld
js
or
xchg
imul
icebp
jne
sbb
imul
lcall
add
mov
add
fdiv
pop
pop
push
jmp
or
cmp
jo
imulb
or
sub
pop
shlb
jl
shr
hlt
mov
mov
push
cmp
mov
xor
imul
sbb
mov
fcomp
xchg
pop
test
cmc
std
test
xor
add
inc
outsb
repz
je
rolb
jp
ljmp
repz
cli
fsubrs
cltd
inc
cmp
or
lds
cmp
imul
add
or
in
insb
out
lret
push
push
movsl
mov
popf
loope
mov
xor
and
pushl
mov
aas
loope
xor
jp
lds
in
pop
sbb
mov
pop
mull
stc
es
push
xchg
pushf
dec
inc
xchg
out
mov
leave
or
jns
and
push
pop
cs
push
add
lcall
stos
push
cmp
xor
push
mov
pusha
cmovns
adc
cltd
mov
repnz
mov
addr16
adc
test
jle
icebp
repz
sahf
jnp
jecxz
test
out
leave
fisttps
cmp
add
jmp
hlt
push
mov
xchg
lahf
xor
scas
pop
lcall
das
mov
les
test
shrl
push
loop
add
aad
ja
mov
xor
lods
jmp
jmp
dec
xor
cs
pop
addb
aas
jnp
mov
xchg
js
in
cli
xchg
shll
cltd
add
mov
dec
xor
ret
arpl
loop
mov
popa
push
adc
scas
std
test
mov
pop
sbb
std
pop
cmpsl
aas
sarl
jmp
and
aas
imul
sahf
dec
out
ret
mov
mov
mov
inc
int3
pushf
hlt
mov
add
mov
sbb
cmc
test
mov
andl
push
lcall
sarb
rorl
lahf
faddl
ret
sbb
adc
fiaddl
push
push
movsl
push
ja
fs
lds
mov
je
loop
pop
out
fwait
aaa
aad
cwtl
fnstsw
push
lahf
jp
push
int3
mov
jb
ljmp
mov
mov
sub
push
gs
ret
lods
xor
into
fcomp
aaa
push
xor
test
js
sbb
cmc
cmp
cwtl
push
jo
jmp
popf
mov
pusha
hlt
push
fisttpl
cmpsl
stc
mov
mov
xor
sub
adc
or
jp
insb
inc
lea
mov
and
es
jp
ret
mov
xor
shl
cmp
fisttpl
sub
inc
add
pusha
and
sarb
fistpll
lods
mov
aas
bound
lcall
pop
sbb
push
gs
loop
sti
leave
jecxz
push
xchg
jmp
test
sub
mov
mov
iret
fcmovb
test
add
xchg
inc
push
je
sub
data16
push
push
mov
js
add
jno
movsb
stc
xchg
mov
adc
orb
int
sbb
ja
inc
dec
inc
imul
into
test
rcr
jo
mov
aaa
bound
jns
repz
dec
pop
loopne
flds
sbb
adc
pop
cmp
test
das
mov
loopne
rorl
mov
out
imul
hlt
dec
std
arpl
jne
ret
add
stc
sub
movb
test
dec
fisubl
add
xchg
int3
out
cs
pop
xor
push
adc
mov
nop
xchg
xor
xlat
adc
adc
fbstp
fsubrl
xchg
inc
popf
jg
pop
mov
call
xor
lods
out
leave
int
mov
sub
xlat
dec
sub
stos
pop
hlt
mov
sub
xchg
adc
mov
lods
ds
mov
neg
ret
xchg
dec
inc
mov
fildl
inc
call
mov
gs
rclb
xchg
mov
aam
cld
aad
out
outsb
xchg
loop
xor
dec
cmp
aaa
js
mov
jno
mov
jge
xor
jne
leave
lods
adc
fwait
dec
pop
jb
mov
pop
in
mov
mov
popf
jae
jbe
and
hlt
lret
and
lcall
fs
jmp
ja
add
xor
imul
inc
sub
sub
jmp
bound
mov
lock
mov
push
xchg
dec
jecxz
jge
xor
cmpsb
xchg
sbb
pop
sub
je
xchg
femms
call
aaa
gs
outsb
xor
jmp
push
negb
in
out
dec
add
jbe
sbb
mov
jb
lahf
into
leave
pop
es
pop
mov
cld
mov
cltd
lret
insb
dec
loop
gs
fiaddl
add
jp
scas
adc
out
push
int3
lods
add
test
repnz
dec
inc
mov
fnstcw
fists
in
add
rorb
push
addb
jo
xchg
sub
fwait
mov
mov
js
jmp
push
cmp
or
inc
and
and
clc
cmpsb
adc
mov
inc
jmp
hlt
fstl
xchg
mov
subl
fisubrl
lret
sub
cmpb
cli
and
rorb
jb
cld
jg
adc
int
cwtl
push
aaa
xor
jmp
dec
and
mov
imul
inc
mov
push
xchg
adc
mov
imul
lods
ja
call
ds
in
dec
gs
xchg
sbbb
pop
lock
xchg
std
mov
pop
nop
sub
sahf
and
mull
into
jb
fs
out
ljmp
stos
push
jp
push
loope
repz
adc
pop
mov
mov
push
pop
mov
repnz
xor
mov
ss
fcmovbe
mov
incl
push
pop
pop
mov
mov
testb
sbb
mov
mov
je
cmc
or
ds
and
in
and
mov
ss
and
jl
ret
xor
lcall
and
cmp
push
dec
divb
xchg
ficompl
pushl
aam
in
int3
dec
xor
arpl
dec
ljmp
dec
sub
in
mov
stos
mov
test
outsb
jb
and
cmp
push
mov
ficoml
push
pop
or
jge
mov
pop
fldt
mov
jne
inc
stos
shll
shr
adc
cmc
inc
popa
mov
xchg
sbb
loop
loopne
or
jno
mov
mov
and
mov
sti
pop
or
cmp
or
xchg
mov
ja
fistpll
xchg
xor
mov
sbb
mov
lds
inc
shrb
cltd
inc
xlat
lods
andl
sub
call
clc
cld
push
fcompl
rclb
ret
jp
jae
gs
bound
jno
mov
inc
mov
ss
out
xchg
lds
jno
or
push
sbb
insl
jae
adc
and
bound
clc
clc
inc
loop
neg
push
cs
jno
test
mov
fchs
stos
test
mov
mov
aam
jge
jle
jg
ljmp
shl
arpl
inc
xor
ds
fstpt
in
or
cmp
xchg
outsl
mov
mov
fstp
lret
or
fwait
inc
push
jecxz
lcall
or
nop
outsl
add
sbb
inc
mov
or
inc
adc
aaa
or
mov
xor
jge
and
adc
out
dec
das
sub
jmp
mov
lock
mov
data16
inc
xor
jecxz
idiv
jae
cli
jbe
push
and
out
out
rorl
xchg
push
sahf
bound
inc
cmp
outsl
cs
into
scas
outsb
mov
xchg
mov
adc
pop
xor
scas
jne
cmp
mov
clc
inc
imul
repz
cld
add
cmp
rcrb
pusha
icebp
push
sbb
cld
xor
ljmp
mov
jo
test
sub
out
cmpsl
stc
cmc
jne
je
loope
cmc
outsl
mov
xor
xchg
xor
aas
aam
cmpsb
add
maskmovq
testl
les
xchg
gs
ss
int
lods
js
jg
pusha
fimuls
push
mov
adc
jb
sbb
adc
pushfw
cltd
jecxz
jno
mov
sub
fcompl
add
adc
mov
or
nop
cmp
jmp
out
test
pop
in
loop
ret
mov
shll
fildll
data16
decb
mov
cwtl
push
leave
lea
icebp
lods
mov
loope
ljmp
lds
in
sub
jecxz
idivb
shll
sub
mov
es
sub
add
into
lock
dec
push
sbb
inc
jp
cmp
daa
pop
push
mov
lods
or
out
mov
in
inc
pop
or
aam
jge
cmp
xor
es
jle
das
movsb
pop
and
push
or
sarb
cmpl
outsl
or
js
xorl
mov
add
mov
lret
jp
lods
or
mov
packsswb
sbbb
pusha
xor
insl
in
daa
out
mov
dec
mov
shlb
push
xlat
inc
les
int3
addr16
mov
pop
add
iret
call
push
loop
leave
push
or
mov
es
adc
mov
and
es
push
addl
lahf
lods
jmp
scas
roll
add
mov
scas
jecxz
hlt
xchg
jge
outsb
xchg
shl
pop
in
fnstsw
js
xlat
negb
mov
icebp
mov
fisubl
sahf
pop
xchg
adc
enter
and
and
xor
sbb
adc
lahf
out
int
and
cmp
and
mov
inc
xor
rcrb
mov
mov
out
push
in
scas
fistl
mov
popa
dec
shlb
pushf
outsl
cltd
xor
cmc
into
jecxz
xor
adc
pop
lods
pushf
inc
lock
loop
push
jg
inc
lret
popl
jmp
lcall
push
mov
rorb
gs
push
or
aad
stos
sbb
rcrb
or
xchg
dec
sub
test
jmp
dec
iret
push
and
cli
movsl
or
inc
push
ficoms
mov
stos
loopne
and
jbe
orl
push
jmp
shll
sbb
dec
sahf
bound
jl
sub
sub
inc
rol
add
mov
adc
or
push
js
mov
lods
sub
pushf
push
in
and
mov
fildll
dec
movsb
shll
push
clc
sub
or
xchg
mov
push
adcl
data16
sbb
and
sbb
mov
sub
push
inc
inc
test
cmp
mov
and
pushf
cmp
sahf
mov
andb
push
stos
sbb
icebp
mov
mov
frstor
mov
pop
cmpsb
leave
inc
icebp
sub
outsl
pop
icebp
dec
out
jnp
xchg
push
mov
test
addl
enter
and
xchg
aaa
xchg
adc
movsl
jmp
cmpsb
loopne
loope
stos
and
jp
mov
js
sub
jmp
shrl
ret
and
jne
mov
mov
loop
or
ljmp
jbe
out
popf
outsb
arpl
pop
jle
xlat
or
outsb
cmp
test
mov
jle
xchg
adc
in
xor
mov
xchg
popa
dec
or
xchg
sub
mov
aaa
cld
mov
out
dec
decb
cmp
sbb
push
xchg
cmp
loope
sub
ficoml
or
jg
xor
push
lds
inc
push
ljmp
mov
sub
adc
repnz
jns
out
pop
scas
imul
insl
xor
icebp
xchg
mov
repz
pushf
inc
dec
pop
insl
mov
mov
xorb
fs
xor
fimull
pop
lcall
cmp
loope
negb
dec
pop
clc
jge
mov
push
mov
aaa
mov
push
out
in
dec
push
stos
out
fildll
push
lcall
add
dec
xchg
lret
push
cmp
pusha
xor
loopne
xchg
sbbb
std
leave
push
add
xor
jmp
mov
rorw
mov
ret
cmp
add
lcall
jge
xchg
jp
mov
scas
mov
and
ss
es
imul
mov
in
dec
fsubrl
mov
outsl
scas
jbe
or
js
fld
test
jo
lock
lds
or
repnz
out
pop
adc
inc
xlat
hlt
push
stc
hlt
jge
sub
mov
push
cmp
pushf
add
scas
mov
mov
stos
daa
mov
pop
push
testb
lock
insl
out
pop
lock
mov
jp
xor
mov
sbb
in
sub
push
xchg
mov
xor
add
out
dec
xor
movsl
xlat
ffreep
jae
sysenter
jnp
adc
loope
popf
adc
mov
mov
sbb
push
popa
sbbb
call
cmpsl
xor
add
push
inc
and
mov
lods
inc
mov
adc
addb
push
sub
jne
push
lea
and
push
mull
fsubr
hlt
lret
shll
pop
pop
dec
mov
cmp
lock
ja
imul
fistpll
dec
jns
adc
push
mov
cmp
icebp
add
dec
ficoml
xlat
jl
shlb
fidivrs
push
cmp
push
adc
cmp
jnp
dec
and
or
pop
test
mov
fmuls
ljmp
push
inc
repz
mov
jle
outsb
frstor
movsb
ret
stos
sbb
arpl
arpl
iret
push
push
sbb
inc
xor
or
add
inc
aas
test
mov
push
mov
in
sti
inc
cmpsl
push
pop
or
fiadds
cmp
cmpsl
fildll
fsubrs
sub
ret
repz
hlt
add
adc
sarl
jecxz
cmpsl
pop
mov
cld
ljmp
fbld
xchg
xor
ljmp
fldl
jg
or
jmp
dec
enter
divb
mov
dec
stos
adc
xchg
add
in
in
cmp
pop
xchg
sub
ret
imul
movsb
fcomp
push
cld
lods
xchg
and
pop
inc
cmp
aam
stc
aas
mov
xchg
out
mov
std
icebp
das
inc
pop
rorl
or
add
and
sub
mov
insb
aaa
inc
pop
mov
xchg
mov
je
rorb
and
in
pusha
loop
mov
xchg
lret
mov
adc
cmp
shlb
mov
js
cs
and
jle
lret
push
test
push
push
data16
inc
pop
jbe
int
push
add
negl
and
loope
pop
pushf
lods
or
inc
xchg
jns
jo
scas
xchg
mov
call
cld
add
adc
jnp
shll
repnz
into
push
xchg
testl
xchg
and
sti
jne
sahf
loope
fbstp
shrl
loope
insb
mov
push
sbb
incl
pop
cmp
inc
cmp
pop
fucomi
stos
lahf
icebp
fstpt
cmpsl
cmp
xchg
out
adc
andl
outsl
and
sbb
fmul
jle
and
bound
test
or
add
addb
inc
sbbl
sub
addr16
adc
cs
mov
jp
cltd
loope
mov
sub
xor
xchg
jp
mov
test
cmp
dec
mov
jbe
cmp
jnp
push
aad
add
xchg
mov
cmpsl
insb
imul
dec
xchg
jb
sbb
lret
mov
dec
inc
test
push
dec
cld
in
jge
sbb
push
xor
or
jb
add
add
stc
inc
mov
jb
aas
add
out
aas
mov
mov
push
xor
imul
push
outsl
jmp
in
testl
test
pusha
sahf
dec
clc
mov
fisttpl
in
sub
push
push
push
xor
push
lods
pop
inc
out
outsl
push
jmp
jmp
push
xor
adc
mov
nop
inc
stos
fistl
call
scas
lcall
pop
mov
push
mov
mov
push
lahf
pop
cmp
dec
out
adc
cmp
rcr
cmp
inc
adc
jl
int
xor
lret
js
mov
inc
push
pushf
aam
sub
fs
push
sbb
inc
stos
cmp
test
cmp
push
movsb
flds
ss
popf
inc
jle
dec
test
lret
jge
push
mov
push
insl
xor
popa
mov
pop
sbb
cltd
mov
adc
hlt
jge
sub
jecxz
add
mov
jne
sub
mov
inc
mov
insb
push
jmp
pop
pop
push
add
cs
mov
dec
fwait
lods
scas
sub
jmp
and
je
push
mov
push
cmp
pop
add
ss
lds
ljmp
or
push
xchg
mov
inc
sub
push
icebp
ja
inc
inc
imul
mov
leave
cmp
sub
dec
mov
dec
rorb
add
cmpsl
fistpl
xchg
js
js
js
imul
popa
dec
int
lock
cmp
pop
adc
push
mov
std
ds
lods
push
pop
stc
jnp
cmp
out
inc
aas
push
jnp
test
push
xchg
nop
sub
lret
mov
mov
in
xchg
mov
mov
pop
inc
push
ret
cltd
jbe
gs
movsl
out
jl
mov
fcomps
sub
xchg
repz
movsb
jo
je
inc
push
cmp
dec
cmc
mov
scas
push
sub
jg
lods
into
sbb
xchg
cli
xchg
jle
mov
mov
sbb
xchg
adc
fisttps
mov
jb
cltd
cli
out
mov
jle
xor
push
dec
push
iret
pop
push
nop
leave
mov
je
inc
sbb
dec
lods
in
sbb
add
fnstsw
mov
faddl
and
out
adc
inc
cli
insl
or
iret
adc
inc
jno
push
shlb
ds
ja
adc
mov
in
mov
movsl
mov
pusha
sub
xchg
mov
repz
push
jle
dec
dec
sub
push
jg
in
clc
lahf
inc
adc
ret
iret
into
int
or
fistpl
loop
test
pop
sub
jns
cmp
mov
mov
mov
out
jb
sti
add
and
test
mov
jl
fiaddl
and
fsubrs
mov
xchg
push
mov
ss
fidivrs
xchg
dec
ss
shlb
adc
imul
int
dec
xor
movsb
jbe
lret
mov
cmp
pop
lcall
add
fisubl
aaa
repnz
xlat
xchg
push
inc
leave
inc
push
rcrb
or
adc
jne
push
call
fwait
ja
sub
out
out
xchg
lea
leave
and
push
mov
xor
jbe
shlb
dec
or
pop
mov
jmp
mov
je
sar
out
mov
inc
aas
cmc
add
scas
int3
jg
push
pop
mov
pop
jae
mov
jno
fstps
imul
into
cmp
lcall
leave
dec
xor
pop
loope
repnz
mov
sti
dec
add
sbb
jb
das
gs
mov
mov
ss
adc
ret
pop
mov
or
repnz
jle
stos
orb
lahf
mov
and
decb
std
pop
rcrl
xor
mov
dec
lods
inc
cmp
lcall
std
fisubl
pop
int3
pop
or
aam
jae
cmp
cmpl
cmpsb
cmpsl
mov
jae
in
sub
inc
pop
cmpsb
insl
js
insl
jle
mov
test
mov
and
xchg
adcb
sbb
clc
adc
mov
sbb
xor
adc
and
push
scas
js
xor
xlat
jb
cs
add
mov
cs
fnstcw
sub
mov
add
into
ss
xor
jecxz
cld
xchg
sbb
into
mov
testl
cmp
mov
or
xchg
int3
mov
adc
dec
cmc
push
inc
inc
movsb
lock
arpl
lcall
adc
stos
mov
dec
imul
bound
add
mov
rclb
int3
outsb
or
xor
bound
mov
jnp
dec
pop
inc
in
rcrb
pop
pushf
ljmp
clc
xchg
xlat
cmc
mov
imul
adc
loope
cmp
pushf
out
cmp
out
insl
subl
call
xor
int3
or
scas
push
push
or
mov
in
lods
mov
cld
xchg
and
xchg
pusha
js
jmp
loopne,pt
leave
xchg
and
rorl
jns
popf
imul
lret
aaa
and
or
ret
in
fistpll
test
xor
cs
dec
and
xor
scas
movsb
aas
jp
loope
iret
inc
add
cs
repnz
addr16
mov
mov
lahf
xor
mov
inc
cld
mov
in
mull
es
in
sarl
cmovge
ds
mov
xor
push
orb
ss
icebp
aam
hlt
mov
bound
cwtl
cmp
and
push
add
push
loopne
cli
sbb
dec
jb
mov
shr
pop
jle
add
xchg
jnp
adc
aaa
dec
lret
mov
or
and
lods
xlat
je
in
fs
jle
inc
jnp
jmp
adc
out
int
jnp
sbb
stc
push
mov
sbb
pmulhuw
or
fmull
adc
adc
sbb
inc
xchg
cmc
mov
and
repz
jae
aas
mov
idivl
mov
pushf
lds
and
inc
inc
out
mov
mov
notl
lahf
mov
xchg
aad
pop
gs
jbe
xchg
data16
clc
out
pop
or
into
sbb
jo
movsb
dec
bound
xchg
mov
adc
push
cld
jmp
jecxz
lods
mov
and
stc
lret
sbb
in
jmp
push
outsb
sbb
imul
cmpsl
mov
popa
out
mov
jno
push
pusha
mov
pop
ja
mov
add
mov
mov
jnp
cmp
inc
popf
clc
cs
out
ss
sbb
and
out
dec
add
lret
mov
les
mov
or
dec
mov
add
pop
xchg
xchg
xor
push
push
lods
xchg
or
mov
test
repnz
cmp
pop
jle
mov
and
mov
mov
iret
inc
scas
xlat
mov
add
and
adc
ss
and
decb
push
sub
push
push
push
out
pop
fwait
sti
mov
inc
ljmp
add
mov
pop
inc
jge
mov
insb
inc
jbe
jns
pop
dec
pop
pop
sub
cltd
repnz
jp
test
in
out
sbb
xor
pop
push
sbb
and
jg
movsl
jne
scas
fisubrl
adc
repz
out
cmpsl
sti
mov
mov
lcall
and
inc
bound
sub
add
xor
fnstcw
cmpsl
xor
cmpsb
aad
or
clc
mov
jge
xchg
fcoml
push
sub
lds
cmp
jecxz
cmp
sub
push
out
inc
jo
in
push
adc
ror
iret
or
int3
rorl
mov
fidivs
outsl
clc
out
mov
pusha
in
adc
xchg
and
fwait
xor
fistpll
mov
in
add
and
rorb
das
mov
cmp
rorb
push
add
cltd
xchg
les
add
test
popf
adc
pop
jnp
cmpl
lret
mov
pop
lret
adc
imul
cwtl
ds
push
add
mov
cmp
xor
xchg
dec
fiaddl
push
push
cmpb
popf
xchg
test
pop
scas
pusha
mov
lds
dec
mov
out
sti
addr16
dec
and
imul
rclb
push
jnp
cld
mov
sti
dec
dec
cmp
lds
dec
pop
fs
dec
mov
ds
jbe
mov
pop
jns
mov
lods
and
ret
push
pop
push
fcoml
jno
test
mov
insb
jb
icebp
fldcw
inc
arpl
jge
mov
lods
mov
orl
pop
ds
mov
outsl
push
xor
int
cli
inc
pop
mov
xchg
pop
xchg
fs
scas
xor
in
out
xor
and
jmp
mov
add
outsl
stos
xchg
lahf
sub
ja
into
in
lcall
mov
inc
inc
bound
cmc
cmp
pop
jbe
xor
xor
mov
xor
mov
hlt
inc
sub
mov
cmp
mov
test
imul
cmp
jae
lcall
out
mov
test
loop
clc
lods
ret
pusha
in
stc
shlb
xchg
pushf
fstpt
jae
mov
mov
fisubrs
dec
ds
jecxz
js
fildll
push
outsb
dec
fstl
movb
push
inc
stos
add
aad
sbb
jne
push
xchg
repnz
js
mov
push
rclb
sub
pop
inc
xchg
xor
in
out
sub
xchg
xlat
arpl
cmp
pop
cmpsl
jecxz
add
scas
cmp
in
xor
adc
fidivs
cmp
mov
push
ficoms
shll
je
cmp
and
in
cmp
rorb
outsb
sbb
xchg
mov
lcall
lods
ja
and
mov
push
repz
pop
mov
nop
cmc
sub
mov
mov
xor
pop
pushf
push
jb
xchg
ljmp
cmpsl
imulb
std
inc
push
bound
andl
insl
arpl
rol
xlat
imul
in
data16
jnp
xchg
push
cli
andl
hlt
int3
push
pop
stos
mov
dec
ffree
das
shlb
dec
and
sub
sub
subl
daa
lds
aam
jne
insl
lret
jge
fmul
fcoml
mov
xor
pop
in
xor
dec
inc
clc
cmp
lcall
mov
mov
sqrtps
add
gs
inc
std
in
leave
or
add
es
hlt
xchg
add
stc
jbe
out
lret
stos
sbb
out
lea
cld
sbb
pop
and
ljmp
xor
or
inc
icebp
jnp
mov
hlt
call
inc
flds
mov
xor
sub
jmp
mov
aam
jne
cltd
pushf
js
loope
push
jne
sub
aad
add
cmc
aad
add
icebp
jmp
movsb
inc
lret
sbb
adc
jg
stos
stos
test
in
aam
test
xor
adc
fiadds
jg
or
inc
xor
rcll
add
cmpsb
mov
adc
test
jge
xorl
add
xor
movsb
mov
movsb
pop
add
inc
nop
mov
idivb
loopne
mov
adc
mov
out
jbe
mov
in
mov
jnp
je
loop
jmp
je
paddq
cmpsb
xchg
jg
mov
les
mov
and
push
leave
je
pop
std
jge
cmp
hlt
into
jl
clc
push
cwtl
in
lcall
dec
pop
rorl
push
mov
in
or
push
xor
cmpl
arpl
xor
adc
dec
xchg
cmovle
push
andb
mov
das
jb
inc
psrlw
or
sti
push
lds
out
test
xor
aam
or
inc
pusha
or
adc
dec
sti
sbb
jle
aaa
mov
add
loope
push
or
jp
out
mov
out
add
cmpsb
add
loope
ljmp
pop
std
leave
pop
pop
mov
dec
cmpsl
jno
mov
jnp
xchg
addr16
loopne
cltd
adc
lret
mov
repz
or
arpl
or
fwait
stc
push
sub
pop
sti
pushl
hlt
bound
lret
mov
cmc
std
xlat
adc
nop
jns
xchg
cmc
mov
out
wrmsr
push
mov
fcoml
repnz
add
lea
dec
jne
dec
xchg
xchg
pop
test
pop
push
mov
outsl
mov
loope
pop
repz
pushf
and
mulb
dec
and
push
dec
in
and
rol
imul
movsb
push
hlt
test
xor
repnz
in
cmp
mov
enter
and
jnp
cmp
cmp
mov
mov
outsb
jle
inc
pusha
and
or
out
xor
jl
pop
arpl
cwtl
jg
sub
mull
fmul
add
stc
sbb
dec
hlt
lds
subl
sub
in
sub
sbb
cmpsb
insb
mov
xor
mov
inc
mov
aad
pop
jge
out
gs
dec
cmpsl
xchg
mov
mov
mov
add
jns
in
and
cmp
xor
je
dec
in
mov
push
arpl
xchg
pop
leave
push
fmull
bound
in
movsl
mov
jno
fisttps
aaa
lds
jl
rolb
mov
pop
mov
inc
add
cwtl
fisubrl
outsl
imul
scas
ret
into
cwtl
ss
out
sub
jnp
lds
xlat
fldcw
and
int3
lods
in
pop
xor
jbe
inc
or
xor
repnz
jle
cmp
sbb
jae
nop
stos
jne
jl
xor
sub
adc
xor
nop
sbb
fisttpl
and
mov
mov
xchg
cmp
imul
dec
sbb
rolb
pop
jg
sub
adc
jae
push
scas
inc
jns
mov
lea
shll
xchg
dec
pop
and
jge
xchg
inc
xchg
cmp
inc
negb
nop
adc
pop
fwait
ror
aam
bound
mov
iret
sbb
xor
inc
jnp
insb
adc
in
in
rorl
cmp
pusha
lret
cmp
sub
cmp
dec
sbbl
movsl
xor
fstps
inc
pop
and
insb
pop
lret
xorb
pop
and
lcall
sti
add
jbe
rcrl
popa
sub
fnstcw
pop
sahf
or
inc
clc
enter
and
rcl
popf
or
sub
aaa
rcll
jmp
fsubrs
stc
mov
mov
add
fimuls
jne
out
add
mov
repz
adc
fucomi
inc
bound
lods
aad
adc
xchg
xchg
adc
repz
xchg
push
mov
xor
or
lret
lahf
fwait
add
sbb
test
jg
pop
push
push
in
int
mov
jae
icebp
idivl
shrb
data16
dec
fwait
push
xor
out
dec
idivb
pushf
jl
fadds
cmc
ret
jne
int
fwait
out
js
add
mov
test
jge
in
imul
nop
cmp
movb
mov
enter
rcll
bound
rcll
mov
shrl
jp
cmc
or
jb
adc
mov
cwtl
cmpsl
mov
movsl
test
mov
call
jl
frstor
lcall
aas
or
mov
jns
out
xchg
insl
xchg
out
movsb
clc
xchg
arpl
hlt
aas
scas
fcoms
out
scas
test
movsl
xor
inc
inc
or
cwtl
fdivrs
inc
push
adc
xor
add
in
inc
xchg
push
sub
std
out
lcall
jns
pop
push
push
sti
int3
stos
imul
xor
or
int3
mov
jl
mov
mov
jb
adc
push
xchg
sub
lret
lods
mov
adc
or
cmp
jl
and
dec
push
add
push
stc
das
inc
dec
iret
push
jg
adc
bound
jle
dec
inc
leave
xlat
xchg
out
jne
sbb
jmp
dec
cltd
scas
sub
lods
stc
lret
push
dec
adc
loopne
inc
xor
out
or
mov
outsb
lahf
lods
out
push
ljmp
addr16
pop
or
sub
loope
cmp
xchg
je
cmp
inc
mov
jl
mov
or
push
pop
xor
inc
sub
jle
pushl
adc
jg
ret
cmpsl
jp
movntq
hlt
data16
adc
cwtl
into
xchg
push
add
adcl
mov
gs
jle
dec
sub
jns
mov
shrb
mov
dec
jb
test
sahf
xchg
dec
enter
in
icebp
imul
inc
lea
mov
jae
cwtl
pop
mov
mov
ds
arpl
xchg
fdivrp
cmpsl
xor
fisubl
inc
mov
add
jae
imul
add
aam
fwait
paddb
cmp
sbb
ret
stos
nop
int3
lods
mov
stc
pop
mov
mov
adc
sbb
test
clc
push
ret
mov
loop
add
or
push
cwtl
inc
sbb
jg
dec
push
dec
scas
filds
repz
and
adc
aaa
cmp
mull
cld
lds
ret
stos
or
mov
dec
shll
int
mov
add
ljmp
jecxz
xchg
hlt
or
cmp
pop
lock
sbb
shll
adc
cmp
inc
js
sti
shlb
loop
sub
out
push
mov
movsb
aad
fcmovbe
pop
xor
jnp
popf
mov
cmp
mov
hlt
add
xlat
jb
movsl
pop
es
negl
xchg
adc
and
cmp
xlat
sub
cmp
pop
jg
adcb
adc
clc
jo
xchg
inc
test
js
jge
test
cmc
pop
int
cli
cltd
mov
push
push
in
push
xchg
jle
mov
call
mov
sub
repnz
sub
bound
push
mov
into
das
stos
loop
leave
cwtl
and
bnd
imul
push
xor
movsl
lods
mov
pop
add
xchg
loopne
jecxz
mov
mov
xor
mov
mov
jb
pop
mov
push
data16
mov
pop
jae
or
nop
into
or
cmp
xor
mov
mov
mov
or
mov
mov
mov
or
pop
pop
cmp
or
test
mov
icebp
subl
inc
and
add
jp
ret
sub
xchg
ds
pop
out
jns
sbb
lock
cmpsb
in
mov
shlb
push
jae
sub
pushf
jns
or
fldl
add
int
add
faddp
xchg
cmp
insl
adc
xchg
dec
fstpt
fucomp
inc
leave
ja
push
outsl
enter
in
xlat
dec
idiv
into
lcall
sbbl
in
and
adc
xchg
lret
xor
push
mov
add
in
mov
jnp
test
add
outsl
out
out
aaa
pop
mov
inc
movsb
mov
add
mov
sbb
dec
fsubl
fcom
stos
sbb
fsubl
sbb
sub
mov
arpl
push
loopne
insl
and
scas
pop
out
jmp
pop
push
push
lock
xor
or
cmpsb
mov
mov
push
sub
xor
mov
mov
mov
pushf
cmp
nop
mov
shl
xchg
out
cwtl
gs
loop
pop
jo
fcompl
in
xchg
dec
xchg
dec
arpl
sbb
in
adcb
outsl
aad
call
pop
data16
xor
movsb
pop
ret
mov
jo
lcall
add
lock
push
mov
lahf
daa
sub
nop
mov
mov
enter
push
sbb
es
mov
pop
xchg
adc
sbb
adc
mov
mov
cmp
inc
ljmp
daa
repz
sbb
addr16
xchg
pop
inc
fldcw
loop
sub
cwtl
cmpsb
clc
or
lahf
jecxz
fs
fcom
shr
mov
cmp
arpl
sub
aas
loop
repz
dec
icebp
jp
scas
sub
jle
cmp
fwait
call
outsb
adc
add
sti
stc
repz
popf
sub
cmc
mov
mov
pop
or
cmp
lds
sub
pop
lcall
xlat
lock
lret
cli
inc
test
outsl
xchg
jecxz
ret
pop
cwtl
scas
push
inc
adc
stos
add
outsb
and
xchg
push
cmp
lcall
jne
gs
cs
dec
and
xchg
push
test
shr
xlat
push
lods
lret
pop
pop
clc
push
push
add
je
shlb
movsl
xor
mov
cmp
jno
adc
inc
or
inc
pop
or
push
pop
mov
rolb
sbb
mov
aad
xor
mov
ja
das
mov
aam
ds
jmp
push
xor
fcom
mov
cmpsb
dec
jecxz
outsb
xchg
xchg
cmpsl
lcall
leave
pop
pop
int3
scas
out
and
in
mov
mov
push
movsl
pop
or
les
push
push
lret
mov
in
insb
jb
xchg
and
inc
or
nop
mov
pop
or
ljmp
mov
push
jg
dec
and
jle
sub
fucomip
leave
or
lock
repnz
mov
rcr
jb
inc
jecxz
inc
pop
jmp
mov
adc
xor
sub
sbb
jmp
cmpsl
inc
out
testb
loopne
cmp
push
mov
jl
roll
stos
cmpl
and
mov
sbb
mov
sahf
stc
cs
sti
fbld
xchg
or
fsubs
mov
das
push
sbb
repz
xchg
sarl
jae
aad
jle
dec
push
push
fidivl
mov
xchg
pop
xor
inc
mov
dec
lcall
push
out
lock
adc
inc
or
mov
in
scas
mov
push
jae
mov
inc
fnsave
or
sahf
iret
mov
xchg
insl
or
inc
rolb
hlt
add
jne,pn
js
stc
popa
bswap
xor
mov
and
pop
sbb
addr16
pop
sub
lahf
enter
mov
lahf
jbe
fsubp
cmpsl
cmpsl
xchg
jge
ret
mov
jno
test
dec
ficoms
dec
add
push
negb
aas
cli
jno
mov
enter
adc
aaa
call
inc
iret
addl
fs
jnp
sbb
je
inc
mov
int3
dec
fs
inc
xchg
insb
sbb
jnp
out
in
cmp
insl
daa
enter
or
loope
divl
mov
stos
and
jnp
jp
outsl
xor
loopne
pushf
mov
adc
mov
gs
push
loopne
push
fidivl
mull
xchg
lahf
int3
aam
push
mov
xor
inc
push
pop
testb
mov
dec
jp
orb
mov
or
rorl
lods
jl
mov
xor
adc
sbb
cmp
and
sbb
push
sahf
in
icebp
out
stc
in
std
lahf
fwait
mov
hlt
in
test
jle
mov
push
loopne
jecxz
into
xchg
ret
and
jg
mov
add
cmp
int3
inc
mov
jge
je
sbb
sbb
test
dec
add
fildll
sbb
les
push
divb
cmc
faddl
mov
pop
mov
add
sahf
mov
dec
je
lcall
adc
jo
dec
andl
xchg
dec
ret
hlt
andl
adc
mov
sbb
pop
jle
sahf
into
push
lcall
negl
cmpsb
int3
out
sbb
mov
sub
xlat
lock
aad
mov
inc
lea
fcomps
add
mov
scas
repnz
push
scas
dec
xchg
aaa
jns
mov
push
jle
ds
loopne
xchg
out
pushf
mov
push
adc
dec
test
dec
or
cmp
and
sub
sbb
and
cmp
dec
inc
in
ficoml
xchg
pop
aad
addr16
movsb
xor
ret
loop
popf
out
mov
mov
and
mov
mov
mov
std
rol
fistpl
dec
bound
push
pop
mov
pop
push
mov
lods
test
aaa
cli
mov
rol
jp
mov
lahf
cmpsb
push
outsl
sti
pop
lock
mov
and
cmp
xchg
pop
cmp
inc
mov
inc
add
jmp
test
aad
mov
inc
movsl
ret
in
xchg
mov
push
mov
sub
pop
xchg
imul
dec
outsb
call
scas
fsub
rorb
and
mov
inc
fs
cmp
pop
std
nop
xchg
push
mulb
jle
mov
test
sahf
xlat
stos
andb
inc
push
mov
mov
adc
or
adc
xchg
stc
add
repz
add
cmpl
mov
jae
dec
lret
fistl
notl
or
vpsraw
movsl
mov
movsl
xor
stos
jnp
adc
arpl
ret
fs
inc
push
adc
jo
outsl
ljmp
repz
adc
int
cmpsb
sbb
dec
push
jns
ljmp
das
push
icebp
xchg
fs
cmp
lret
dec
adc
mov
sbb
xor
leave
xchg
jo
out
pusha
mov
fnstcw
ds
push
mov
pop
push
adc
xchg
ljmp
sbb
mov
pop
sbb
imul
add
cmp
mov
lds
jne,pn
and
xor
sbb
or
aaa
mov
insl
ljmp
sbb
xchg
pushf
pusha
fwait
xor
ja
lods
pop
cmp
pop
pop
loope
xchg
bound
jge
pop
and
dec
inc
sbb
nop
popa
add
bound
cmp
add
mov
mov
gs
cltd
aad
push
jnp
and
sub
nop
pop
dec
es
dec
xchg
test
jle
lret
jmp
jae
inc
push
add
out
xor
mov
sbb
or
add
lds
das
xor
or
test
sar
dec
lahf
into
pushf
sub
xor
push
mov
and
test
mov
mov
in
xor
mov
sbb
lock
clc
insl
inc
gs
mov
rcll
movsl
divl
gs
rolb
adc
mov
stos
fdivr
outsl
loopne
test
test
cli
and
orl
mov
pop
lahf
imul
stos
loope
stc
jb
jae
lea
icebp
cld
mov
push
push
arpl
loop
push
into
icebp
jae
xor
push
aad
xchg
enter
push
ficoml
cmpsb
loop
push
push
dec
gs
mov
dec
icebp
fdivl
inc
pop
mov
out
dec
dec
jae
dec
sub
sub
cli
cld
adc
fcomps
xchg
push
add
push
jne
outsb
mov
loopne
movsb
out
int3
not
sbb
lcall
ja
fwait
jbe
or
out
in
jg
xchg
mov
imul
xchg
pop
call
in
push
xchg
aaa
aam
nop
cmp
sbb
and
decl
cs
push
movsl
fucomi
or
mov
xlat
fs
pop
call
orl
lea
add
and
testb
xchg
sub
dec
mov
sbb
xchg
and
and
xor
pop
and
jo
loop
sbb
xchg
add
pop
pop
and
mov
fnstcw
je
push
sub
gs
mov
call
loopne
dec
fldcw
nop
inc
push
sahf
cmp
imul
mov
xor
push
addr16
and
and
push
add
out
pop
mov
in
stos
pushf
jg
les
dec
ss
pusha
xor
int
cmpsl
fbstp
movsb
mov
outsl
mov
in
ljmp
mov
movsl
pop
test
sbb
jge
jge
enter
sub
mov
push
cmp
or
leave
push
notl
sub
push
sub
mov
ss
test
arpl
xor
jmp
mov
insl
or
sbb
fsts
xor
data16
xchg
push
ja
sbb
push
cltd
cmp
pushf
mov
test
stc
ret
dec
dec
xchg
scas
lcall
lock
shll
paddusw
pusha
loope
fists
dec
and
test
sti
fbld
mov
into
xchg
fcmovne
mov
mov
pop
cwtl
shr
lods
leave
adc
insb
inc
pop
mov
addr16
push
pop
pop
ja
out
add
js
sbb
xor
fs
adc
jmp
xchg
rclb
pop
fsubl
out
mov
mov
es
dec
std
sub
mov
pop
sti
sbb
ret
inc
in
dec
push
xchg
rclb
sbb
repnz
daa
push
cli
or
aam
jl
fidivrs
ljmp
lcall
push
sbb
je
lcall
popa
jle
lds
push
xchg
gs
lahf
xlat
sti
push
jg
mov
in
insb
adc
pop
add
bound
sub
sub
fildll
mov
jl
repz
sub
sarb
andl
sbb
mov
dec
movsb
pop
jmp
enter
repnz
scas
dec
imul
les
cmpsb
scas
and
push
mov
out
subb
push
jge
push
xchg
hlt
test
pop
je
in
cmp
orb
push
and
add
xor
xor
push
cli
jo
or
and
xchg
out
insb
rolb
outsl
mov
fsubr
arpl
negl
xchg
dec
shlb
mov
jo
sbb
jp
mov
mov
stc
jmp
outsl
fyl2x
lcall
test
sbb
ja
aam
nop
mov
jecxz
sub
mov
stc
xlat
sbb
xchg
aam
insb
push
mov
dec
in
mov
xchg
mov
lods
lods
cmpsl
shll
test
mov
sub
les
loope
inc
dec
sub
in
aad
sub
fcoml
xchg
notl
jg
pop
faddl
jge
lret
add
testl
jno
xchg
or
lods
pop
or
shrl
or
mov
mov
shr
popa
sub
pop
lea
dec
jne
sahf
ror
mov
insb
scas
ja
or
popa
xchg
out
in
xchg
fwait
lods
cmpsl
sbb
cmp
adc
imul
in
ret
in
fadd
xchg
xorl
test
xchg
or
lods
pop
cmp
out
popf
inc
cli
aaa
notrack
stos
cs
cs
stos
iret
sbb
stc
adc
xchg
xchg
mov
dec
mov
mov
cmp
cmpsl
mov
cmp
out
cmp
cwtl
jns
jle
add
sbb
mov
pop
xor
jle
pcmpgtb
mov
rorb
mov
mov
sub
dec
cld
fs
es
cmpsl
and
mov
rorl
call
dec
je
mov
outsl
shlb
sbb
mov
mov
cmp
into
pop
pop
dec
xor
sub
mov
ja
sub
adc
lods
pop
jae
xchg
subl
xor
loopne
clc
mov
syscall
mov
mov
dec
imul
fsubrl
cs
fdivl
jno
pop
sbb
out
iret
xlat
ljmp
and
mov
loope
pop
dec
sahf
pop
fadd
xchg
loope
mov
pop
xor
add
sub
mov
xchg
negb
popa
xor
jle
cltd
in
push
cmp
lret
shrb
and
jbe
jmp
mov
je
jl
cmp
inc
arpl
add
sbb
inc
jge
add
add
test
mov
shrl
pop
mov
push
sbb
aad
ret
test
mov
aas
xlat
out
test
or
popf
jp
sbb
out
sub
inc
jbe
bound
loop
mov
add
fistpll
inc
cwtl
jo
push
jo
lret
lahf
cmp
shll
popf
push
and
dec
inc
lods
cwtl
sbb
fsubs
shl
rcrb
dec
imul
cmp
fldenv
aas
push
push
sub
dec
lret
mov
push
test
and
mov
mov
out
pop
inc
adc
xchg
pop
out
push
sub
xor
cmpsl
adc
popa
shlb
adc
xlat
push
and
mov
lea
dec
les
push
test
mov
loopne
or
inc
mov
or
enter
mov
mov
in
dec
js
xlat
mov
ret
push
cli
cmpsb
test
sbb
lods
push
and
pusha
imul
mov
mov
scas
pushf
push
in
pop
ret
cmp
fnstenv
jg
dec
pop
cmc
jmp
imul
push
lds
or
fisubrl
lahf
jmp
aad
inc
inc
mov
test
sbb
push
repz
sub
call
lods
es
push
dec
jecxz
mov
call
inc
mov
pop
loope
sub
mov
outsl
push
dec
xor
jle
pop
mov
cmp
dec
mov
cmp
stos
pop
mov
or
dec
das
stos
cmp
shlb
ss
inc
test
and
in
cmp
int3
call
or
mov
pop
es
fdivrl
jmp
movd
iret
dec
mov
sub
dec
hlt
cld
insl
sub
aad
cmp
out
mov
in
loope
or
aaa
xchg
push
xor
repz
or
ja
mov
pop
shl
lret
ds
and
push
mov
outsb
mov
mov
pop
in
loop
pushf
dec
sub
xchg
dec
sbb
cmp
shr
fisubl
aad
pop
push
int
cli
jl,pt
fildll
sub
fbstp
andb
jg
lret
fstl
push
loope
mov
inc
xor
popf
mov
bound
cmp
and
sub
je
jbe
mov
stos
mov
sub
repz
inc
push
add
sub
cltd
sub
out
push
xor
mul
mov
hlt
jle
test
inc
mov
pop
ds
mov
and
mov
push
shl
and
jne
jae
mov
bound
je
sub
mov
filds
pop
rolb
mov
mov
inc
aam
dec
cmp
jmp
and
sbb
sbbb
and
repz
jmp
dec
in
je
inc
pushf
ret
mov
btr
pop
ret
and
fsubr
movsb
imul
in
and
sbbl
mov
mov
pop
nop
call
mov
xchg
push
mov
lahf
orl
into
fcompl
cld
pop
in
test
lret
roll
pop
xor
lds
and
jns
dec
push
jp
mov
xor
and
xchg
dec
mov
test
iret
iret
or
cmpsb
mov
lcall
ret
sti
add
scas
adc
cmp
jne
add
cmpsb
xor
dec
out
stos
lahf
sahf
mov
shll
pusha
sub
ja
test
mov
mov
jmp
xchg
dec
aaa
test
mov
jnp
gs
adc
pop
add
in
out
fdivrs
adc
dec
jne
lods
lods
cltd
fisubrl
push
fmull
fstpl
mov
outsb
pop
sar
mov
mov
test
lret
sub
les
cmp
jg
ret
ss
stos
repnz
mov
dec
sub
jne
repnz
ds
out
cmp
inc
sub
jb
fidivrs
lods
mov
out
pop
in
cwtl
cwtl
fstps
mov
insb
dec
fnstsw
repz
or
xor
insb
aad
jno
cmp
mov
push
xchg
lods
insb
sub
stos
adc
jge
and
andb
push
inc
push
adc
jo
test
mov
mov
or
dec
cmpsb
dec
sti
inc
cli
int
push
mov
in
or
push
sub
js
lock
ret
jmp
mov
popa
sub
pop
pusha
cmpsb
lods
pop
sub
mov
jns
and
xchg
roll
cmp
sub
mov
pop
ja
sub
arpl
cmp
scas
shl
add
push
mov
sbbb
cmp
pop
out
jle
push
pop
sbb
and
testb
iret
push
push
inc
shll
dec
sub
jl
pop
and
lds
outsl
lcall
scas
or
mov
rclb
mov
bnd
outsl
mov
sti
jae
mov
cmp
sub
mov
ret
mov
dec
xor
sbb
xchg
fmull
hlt
xchg
adc
enter
sbb
mov
jnp
inc
or
xchg
aaa
dec
out
stos
lds
pop
push
rcr
sub
xchg
jnp
pop
in
rolb
mov
inc
xor
and
add
xor
idivl
jnp
xor
adc
movsl
dec
xor
iret
lods
inc
cltd
cli
xor
lret
lahf
std
or
pusha
test
mov
or
cmpsb
mov
jecxz
ljmp
movsb
jmp
idivb
and
std
inc
and
jb
inc
sbbl
lret
dec
and
repnz
pop
lods
call
cmp
mov
push
fldt
inc
cmp
enter
cmp
mov
cmp
xor
enter
or
or
push
in
sbb
sbb
mov
arpl
xchg
xchg
mov
inc
incl
inc
lahf
out
mov
lods
loop
push
repz
shll
xchg
sahf
scas
pop
push
movsb
xorl
jo
add
mov
jnp
jl
jmp
dec
das
daa
ss
mov
pushf
jnp
in
xchg
add
add
test
mov
add
xchg
aad
lods
cmp
fimuls
push
sbb
jmpw
in
dec
sub
pusha
mov
cmp
test
lds
pop
out
pusha
popa
cmp
js
pop
leave
loop
jge
adc
icebp
loope
rcll
in
mov
call
stc
outsb
xor
xorl
lcall
ret
testb
in
sti
test
lret
scas
fldt
cwtl
enter
ja
xchg
mov
push
in
sarb
inc
das
int3
jmp
inc
jmp
lahf
pop
inc
pop
aaa
adc
add
mov
fdivrl
in
cmp
les
add
and
jmp
jne
inc
pop
sbb
aas
mov
pop
push
push
data16
sbb
push
popa
sub
jno
sbb
or
out
out
lcall
mov
xchg
xchg
mov
or
cwtl
mov
lods
pop
cmpb
fsts
icebp
pop
mov
fimull
xor
vcomiss
xchg
jle
out
ret
sbb
lahf
push
and
rcl
test
adc
cwtl
push
idivl
xchg
xor
cltd
push
nop
mov
imul
movsl
push
out
scas
outsb
outsb
scas
decb
ds
scas
ss
lds
shll
loope,pn
jns
or
push
xor
lods
sub
and
ss
lahf
outsb
shl
fs
pop
xchg
mov
fnstenv
xor
lcall
dec
jbe
mov
dec
dec
in
sub
adc
add
add
mov
gs
fs
xchg
adc
mov
cwtl
mov
cmp
mov
ds
mov
xchg
icebp
xor
sub
ljmp
mov
mov
aam
jg,pt
aad
subb
push
jbe
sbbl
cld
jne
fsubrs
gs
pushf
cmp
jle
jae
adc
ret
es
dec
dec
sarb
loopne
xchg
data16
push
gs
daa
add
mov
repz
sti
jnp
out
pop
js
mov
mov
fldl
addr16
leave
sbbl
push
add
add
lea
cmp
inc
cmp
mov
cmpsb
lods
jmp
jp
arpl
inc
pop
push
loopne
cmc
mov
insb
lcall
mov
add
out
ja
shll
add
negl
sahf
jne
add
pop
mov
stc
sub
jp
lcall
movsb
movsb
jbe
mov
pop
aad
jmp
sbb
sahf
push
ret
pop
mov
insb
call
adc
movlps
add
inc
lahf
roll
imul
cltd
popa
repz
inc
jecxz
arpl
or
ds
cmp
cmp
add
xchg
mov
mov
in
add
sbb
lcall
divl
lret
sub
jecxz
push
mov
push
movsl
push
test
out
insb
push
xchg
mov
push
cmc
or
adc
hlt
js
clc
lret
divl
lret
mov
add
ror
movsb
outsl
pop
xchg
out
das
jl
movsl
xchg
adc
sbb
fistl
cmpb
sub
inc
cmp
jg
inc
cli
lods
xor
pop
enter
movsb
xlat
movsb
testl
out
push
fnstcw
out
imul
push
jp
xchg
pop
lahf
cmp
clc
xchg
enter
jae
int
aad
sbbl
mov
out
mov
aas
rcrl
xlat
add
inc
js
xlat
cwtl
jl
push
jnp
mov
in
or
sbb
jns
jmp
xlat
pop
inc
and
lods
pop
xor
jnp
dec
sub
adc
shrb
iret
inc
sub
jo
int
insl
sbb
pop
ja
push
add
repz
decl
sbb
or
ret
inc
in
daa
jb
cmpsl
jp
fmulp
dec
mov
mov
add
and
jmp
or
in
loopne
mov
mov
lods
call
sbb
mov
push
pop
inc
popa
mov
pushl
lock
mov
fdivrl
arpl
shlb
mov
pop
insb
dec
pop
xchg
jp
shll
dec
pushf
enter
or
cmpsl
aaa
mov
jno
mov
jge
lods
fildll
cmp
pushf
push
jge
cmp
cs
mov
aas
aaa
adc
dec
sarl
lds
in
out
pusha
mov
nop
pop
pop
pop
outsb
dec
movsb
insb
mov
cmp
sub
arpl
pop
lahf
out
imul
lret
xchg
int3
sub
inc
mov
add
mov
gs
xor
fs
orl
out
mov
mov
sbb
fwait
and
and
xor
jb
mov
movsl
imul
rcll
sbb
lret
sbb
ljmp
jae
test
pop
or
inc
pop
jae
pop
jl
aad
andl
mov
adc
push
cmp
mov
fadds
mov
test
aam
sub
lret
sti
pop
fwait
add
in
cmp
das
test
inc
inc
sbb
or
fwait
and
sub
mov
sbb
pop
fcoml
push
sahf
xchg
loopne
jno
dec
xchg
sbb
or
xor
jnp
sbb
iret
or
sbb
adc
xor
add
je
sahf
xor
lcall
movsl
add
push
add
push
inc
mov
jp
adc
lock
std
mov
popa
sbb
ss
xor
dec
mov
aas
movsb
cwtl
inc
in
xchg
push
jle
dec
sub
sub
mov
push
in
in
jl
pop
test
mov
sbb
cmpsl
sub
xor
dec
or
fidivs
jb
rorb
ficompl
sbb
test
pop
repz
dec
sar
movsb
into
arpl
dec
mov
adcb
gs
popf
daa
shlb
inc
popf
mov
sub
fwait
mov
mov
mov
jbe
add
cltd
lret
jbe
mov
sub
mov
or
ffree
and
aaa
js
add
xor
add
test
dec
xor
jecxz
lods
insb
push
insl
movsl
sub
mov
into
push
cmp
push
arpl
push
pshufw
sbb
lcall
or
xchg
rcll
dec
jnp
ja
mov
xchg
fcmovne
ljmp
jb
jl
into
adc
or
pop
sti
cmpsl
ja
pusha
loope
inc
inc
inc
shll
mov
leave
jns
inc
outsl
sub
rcrb
jb
dec
pop
pushf
out
in
stos
mov
adcb
popf
mov
jg
in
test
pop
and
xchg
or
mov
inc
lock
ja
inc
lret
icebp
xor
or
arpl
jle
xor
jne
cmc
ds
std
dec
mov
adc
cmpsb
mov
inc
inc
jl
enter
jecxz
xchg
mov
popf
xor
push
ljmp
cmp
inc
cwtl
insb
ret
imul
push
xchg
leave
int3
push
pop
mov
adc
sbb
xor
shrb
pop
cmpsl
ss
jp
pop
or
pop
scas
adc
push
push
mov
pop
lcall
insb
insb
lea
cmp
pop
xchg
xchg
stc
aaa
ret
add
and
fwait
dec
cmpsl
cltd
ja
pop
cmp
loop
pusha
call
je
add
xor
popw
or
or
jmp
movsl
push
pop
les
adc
sub
testl
nop
inc
pop
fstpt
clc
push
xchg
dec
jnp
shrb
xchg
mov
insb
jb
in
idiv
aad
inc
cld
insb
insb
cmc
cltd
fists
fs
and
out
fwait
arpl
add
lea
clc
mov
mov
sbb
xchg
outsb
adc
sub
and
lahf
push
mov
les
mov
mov
push
xchg
xchg
in
xchg
cld
cmpl
jae
ficoms
aad
and
dec
inc
std
jb
inc
jle
xchg
loope
je
ret
jno
inc
inc
cmp
inc
arpl
out
nop
pop
inc
dec
cmp
adc
decl
push
pusha
xor
jb
dec
scas
js
fcmovu
push
shl
inc
mov
lods
loope
dec
lea
sbb
loope
mov
pop
icebp
xchg
ret
mov
xor
test
jge
stc
xchg
inc
sbb
in
inc
jl
jb
fucomi
inc
or
jl
andb
addb
fidivl
xlat
xchg
lret
inc
fwait
fnsave
jecxz
and
xchg
inc
jp
mov
fldenv
push
flds
cmp
insb
icebp
aam
or
iretw
jno
dec
push
pop
jecxz
jne
lock
jb
adc
mov
inc
sub
repz
cmp
rol
addb
cmp
add
jbe
aad
push
cmp
sub
in
cmp
loop
popf
loopne
fucomp
inc
pop
mov
mov
mov
jg
hlt
ljmp
fisubl
shrl
push
dec
je
and
out
dec
jl
flds
mov
jg
or
adc
test
cwtl
push
cmp
push
and
jnp
cmp
mov
orl
and
mov
mov
sbb
insb
dec
loop
jle
inc
popa
loop
das
or
pop
aam
dec
ja
jle
jge
sti
in
inc
push
clc
jae
pop
and
ds
in
mov
jg
dec
lock
inc
cmp
inc
xchg
cltd
in
cmp
test
subb
xor
repz
mov
cwtl
lods
fs
add
adc
repnz
mov
jp
je
das
lock
imull
fs
mull
sbbl
cmovge
push
out
ss
xor
repnz
loopne
mov
shll
std
jnp
std
xor
or
fsubrl
aaa
test
jle
loope
lock
outsb
loop
cwtl
cli
push
xor
mov
pop
or
rolb
mov
lretw
call
scas
std
push
xchg
movsl
mov
iret
mov
test
jmp
mov
push
js
dec
fnstsw
dec
shl
push
jmp
jp
sub
pusha
movsb
daa
cmova
std
inc
ds
lods
repnz
ret
xor
add
aad
cmp
mov
bound
sahf
negl
push
and
pop
repnz
gs
adc
negl
repz
movsb
cmp
pop
push
fsubrs
ret
cwtl
cwtl
mov
adc
pop
out
insl
cmpsl
adc
stc
mov
out
cli
cwtl
push
push
ljmp
int
fidivl
test
mov
jno
ror
ret
push
imul
cmp
mov
aas
cmpsl
fiaddl
fwait
jl
les
push
adc
pop
fcoms
push
addl
mov
push
mov
cs
add
jne
popa
clc
fsubs
in
mov
movl
in
sub
push
mov
push
repz
mov
push
repnz
mov
xchg
push
out
insb
imull
sub
dec
ret
shl
and
pusha
cld
jge
cmp
mov
cld
jo
stos
mov
aad
push
out
fldcw
dec
ret
dec
push
inc
test
aam
insl
outsl
fisttps
mov
je
pop
mov
jl
lret
xchg
jbe
sub
mov
rolb
cwtl
xor
jp
jmp
pusha
sbb
ljmp
cmp
inc
jge
in
mov
mov
mov
jg
add
adc
inc
ja
call
push
fstl
inc
pop
jae
mov
dec
jg
daa
pop
cmp
xor
cmp
dec
mov
loope
adc
push
movsl
sub
jno
fldcw
sbb
add
call
gs
pusha
fcomps
inc
enter
xchg
dec
mov
cmp
sbb
mov
lea
cmp
pop
incl
jg
jae
pop
add
or
sbb
shlb
jmp
pop
data16
das
sub
cwtl
outsb
xchg
xor
pushf
dec
hlt
jb
pop
add
jle
push
mov
cmp
mov
aas
push
mov
mov
and
and
push
std
dec
add
std
in
dec
int3
adc
mov
cwtl
ja
mov
jl
arpl
adc
mov
or
sti
es
int
push
jbe
imul
fwait
pop
popf
and
cmpsb
dec
mov
bound
adc
mov
imul
jnp
pop
push
xchg
jmp
leave
sahf
ds
cmp
icebp
shlb
and
adc
xor
push
popf
mov
or
jo
call
adc
movsl
or
das
and
cmp
in
push
mov
nop
in
adc
fwait
dec
data16
pop
jl
mov
push
sub
jp
or
cltd
xchg
pop
mov
test
clc
xlat
lds
sbb
adc
xchg
movsl
fs
push
loop
lds
mov
gs
test
repz
orb
insb
xor
loop
lock
jbe
and
mov
sub
sbb
or
aam
dec
stc
aas
mov
lret
jl
push
les
xor
mov
shll
hlt
xchg
int3
cld
imul
popf
mov
lds
ficoml
sub
test
loope
cli
push
out
lahf
lods
jecxz
out
out
add
mov
mov
cmp
mov
test
or
shrb
cmpsl
xor
sub
sahf
jb
mov
inc
mov
addb
push
sbb
mov
out
outsl
xor
addr16
aas
inc
xor
subl
stos
jmp
divb
repz
lods
jecxz
pop
imul
mov
les
xor
push
push
mov
fs
mov
cld
and
mov
addr16
sar
shl
in
mov
aas
pop
and
dec
jp
popa
pop
in
shrb
jno
les
sub
cmp
xchg
in
jne
add
stc
aad
mov
je
ret
adc
lods
dec
sbb
xor
lret
pop
das
scas
push
movsb
adc
or
jb
jae
jne
dec
and
add
cs
repz
and
mov
sub
cmpsb
jg
mov
cmpsb
xor
mov
sbb
sub
add
sti
and
mov
stos
insl
add
cmp
mov
mov
in
out
xchg
adc
lea
xchg
add
mov
mov
pop
adc
mov
shll
push
push
pop
lock
xchg
mov
sub
push
xor
das
push
xchg
loope
fs
fstpl
dec
xchg
addr16
insl
adc
xor
addb
repnz
mov
popa
jp
daa
sub
lret
xlat
in
cmp
decl
and
fsts
scas
mov
fcmovnb
leave
xor
out
pop
sbb
push
inc
xchg
hlt
leave
test
adc
lcall
fmull
xchg
mov
mov
jns
mov
mov
stc
cmp
cs
jecxz
outsb
aad
jmp
pop
jne
or
lea
lahf
fwait
shl
mov
pop
push
es
xchg
inc
repz
adc
adcb
gs
leave
test
push
adc
add
add
rcll
addb
rcrl
mov
pop
lcall
fs
dec
in
dec
mulb
in
test
nop
cmc
pop
push
clc
aad
lret
int
mov
sbb
push
les
sbb
mov
lcall
xchg
outsl
icebp
cmpsb
xchg
popa
cli
dec
or
dec
xor
push
mov
ret
inc
ss
fistps
xlat
imul
int
loopne
js
sbb
jne
mov
shr
jp
sub
mov
aam
push
mov
adcl
push
pop
adc
subb
jle
mov
inc
movsb
sbb
sub
jae
sbb
in
int3
sbb
xlat
addb
lods
dec
mov
gs
cmp
push
dec
orb
shr
xchg
inc
pop
inc
adc
push
test
and
jp
inc
lcall
imul
ljmp
and
cmp
repz
test
cltd
cltd
mov
inc
aaa
jle
mov
and
popa
jmp
cmp
sbb
stos
in
orl
faddl
jecxz
jecxz
shlb
ljmp
lret
mov
mov
dec
push
jae
cltd
xlat
dec
bound
inc
mov
xchg
adc
das
mov
js
pop
sbb
out
shrl
fadds
mov
mov
mov
aas
dec
mov
dec
mov
test
call
aas
xchg
sbb
mov
xor
dec
stc
icebp
sbb
pop
jb
nop
scas
push
jno
sub
pop
mov
xchg
sub
out
and
ja
test
cmp
in
mov
pop
mov
inc
idivl
test
lea
and
add
push
cld
fimull
test
fcom
push
dec
mov
push
test
cmp
in
pusha
jmp
pop
or
xchg
popf
ljmp
into
mov
fadd
insl
aam
inc
mov
fisubs
or
test
sbb
or
repz
inc
xchg
bound
call
dec
or
push
or
data16
movsl
js
lea
or
push
test
lret
f2xm1
cwtl
xor
push
std
jl
enter
addr16
mov
setnp
mov
xchg
ret
push
popa
fcoml
mov
mov
idivb
dec
mov
dec
dec
push
sub
in
decb
pop
out
sub
ret
inc
cli
lock
inc
dec
add
mov
pop
inc
adc
mov
hlt
pop
lods
or
loope
xchg
adc
jbe
inc
and
loop
inc
scas
enter
lcall
loop
lods
push
mov
xchg
sbb
push
xor
aas
jecxz
imul
and
popf
daa
sub
lock
or
in
cmp
mov
push
or
mov
inc
mov
jo
sub
outsb
adc
push
out
push
les
ret
cmp
rcll
jae
mov
mov
mov
lcall
cwtl
sahf
xor
fwait
push
adc
mov
sti
sub
cmc
pop
sub
stc
test
or
mov
xor
mov
sti
incb
inc
inc
inc
mov
add
jo
addr16
adc
xor
rcll
test
mov
dec
aad
push
jl
lcall
hlt
xorl
movntps
push
jo
dec
int
cmp
fstps
mov
xchg
jae
movb
xchg
xor
cmpsb
mov
adc
mov
mov
pop
or
jmp
clc
add
mov
push
inc
fs
pop
mov
scas
jg,pn
or
push
addr16
jge
cmpl
hlt
ret
rorl
cmpsb
lcall
fnstcw
pop
dec
inc
int
into
pop
lds
std
dec
test
cltd
jbe
fnsave
sub
adc
pop
das
fdivrs
cltd
pop
pop
fmull
xchg
fsubp
out
push
push
mull
les
sbb
lods
test
push
sub
sbb
testl
add
jmp
repz
scas
int3
rol
jmp
pop
cmc
das
fmull
cld
stc
add
or
or
mov
mov
inc
ds
or
add
push
adc
jp
and
ret
sbb
gs
into
adcl
inc
jne
inc
xchg
scas
mov
popf
je
das
fmuls
clc
addr16
stos
cld
fidivrl
scas
or
or
ss
icebp
fisubrs
test
pushf
dec
pushf
adc
lcall
lret
and
out
or
dec
pop
cmp
in
test
mov
ljmp
pop
rcr
movsl
mov
or
les
fisubrs
outsl
into
or
xchg
fstl
mov
push
xchg
xchg
std
cs
pop
xchg
jge
loop
dec
insl
mov
sar
inc
and
cmp
jg
sbb
and
not
jmp
add
insb
stos
mov
xchg
cmp
and
int3
push
mov
adc
mov
mov
adc
push
dec
lahf
movsb
rolb
shlb
cli
jmp
sarl
es
pop
ret
ret
imul
xor
sub
inc
mov
les
lock
lret
push
pop
mov
inc
int3
dec
mov
clc
cmpsl
xchg
insb
mov
lret
popa
or
rorb
cltd
pop
icebp
pop
andl
stos
xor
and
xchg
and
jbe
xchg
out
xor
sub
daa
mov
pop
sti
je
mov
cwtl
cmp
jmp
les
icebp
or
push
cli
scas
or
adc
mov
mov
jle
push
cli
ja
test
mulb
push
jle
test
loope
cmc
fwait
mov
test
mov
push
outsl
pop
sbb
aam
sub
stos
mov
xchg
mov
scas
push
jge
jl
mov
jae
jmp
out
and
inc
enter
xor
mov
jbe
out
test
mov
xchg
out
push
or
lods
out
mov
dec
mov
ret
sbb
in
fidivrl
imul
sbb
jg
mov
jnp
out
xchg
out
outsb
dec
sbbb
cmp
and
jge
dec
shlb
or
inc
mulb
push
pop
mov
sbb
std
dec
mov
jp
or
xor
imul
pop
cmp
iret
pop
xchg
jb
dec
and
icebp
adcb
sbb
addr16
cmp
or
adc
movsl
ss
inc
inc
sbb
ljmp
inc
push
out
xor
and
andl
test
stos
stc
test
jo
fadds
out
sti
popf
xchg
fadd
push
in
ror
mov
mov
or
inc
mov
push
int
adc
insb
insl
xchg
popf
push
adc
pop
or
iret
imull
add
fdivrp
dec
pop
push
pop
pop
pop
test
movsl
mov
mov
js
out
jne
ficoml
loop
sub
rorl
jae
mov
lcall
inc
lea
popa
pop
add
adc
lahf
inc
xchg
inc
call
loopne
in
sahf
je
outsb
popf
push
mov
popa
in
repz
aaa
xlat
xor
lds
xchg
in
cwtl
sub
add
xor
or
jo
add
ljmp
js
rcrl
add
je
push
out
cmp
jmp
out
outsl
stos
xchg
cmpsb
inc
dec
add
stos
push
sar
or
xor
adc
int
inc
xlat
mov
mov
jne
cmp
lcall
pop
push
push
cld
popf
cmpl
mov
pushf
pop
out
xchg
and
je
mov
lods
add
adc
mov
xchg
test
loope
std
sbb
jge
jmp
out
adc
and
dec
pop
std
mov
pop
outsl
stos
sarl
pop
fisttpll
or
imul
pop
dec
test
inc
mov
pop
cli
mov
pop
xorl
fcoml
jbe
test
sub
test
insb
jns
mov
js
ljmp
sbb
and
cld
aam
icebp
lahf
in
jns
push
stc
and
add
jae
aaa
xlat
sbb
cs
fistl
shl
lret
jbe
cmpsl
xchg
sub
push
mov
add
fnstenv
mov
or
scas
push
jb
into
cmpsb
sbb
leave
adc
int
ret
lahf
fiadds
fmulp
mov
xor
enter
jl
loope
cmp
jno
frstor
fldt
mov
lahf
jge
jo
dec
ljmp
cld
mov
push
cs
lcall
mov
pop
fmull
dec
sub
xchg
pop
adc
loope
rcll
aas
scas
dec
xor
sbb
imul
loopne
push
push
pop
pop
jecxz
mov
mov
or
bound
mov
fs
dec
xchg
mov
mov
out
repnz
mov
sub
sahf
pop
xor
xchg
hlt
aaa
mov
fisubs
dec
sub
cmp
mov
cmp
rcrl
pop
loop
stc
mov
loop
daa
mov
mov
es
fisubl
mov
inc
lea
fildl
and
and
add
das
cmpsb
aad
test
pop
mov
mov
xor
push
cmpsl
jae
cmp
outsl
add
jg
icebp
test
and
pop
negl
ds
pop
pop
mov
xchg
incb
hlt
sbb
xor
enter
push
mov
xchg
mov
iret
ror
jno
sub
push
dec
repnz
lret
and
les
and
stos
jp
ja
movsl
mov
pop
cmp
sub
xlat
jge
ja
les
mov
inc
dec
xor
mov
push
xchg
in
dec
lock
loope
cltd
stc
mov
movsb
int3
xchg
xchg
dec
test
mov
fs
pop
fisubs
sbb
add
fsub
icebp
hlt
mov
xchg
adc
stos
xlat
out
xchg
fdivrp
push
insb
in
jp
pop
mov
or
imul
imull
imul
hlt
xor
sbb
shr
addr16
insb
and
jg
adc
mov
lcall
lcall
jns
iret
stos
pop
push
in
add
imul
fcmovnb
mov
imul
pop
lock
mov
lods
jb
mov
lods
mov
push
and
aas
pop
and
mov
lcall
into
push
rcrl
das
inc
mov
dec
jle
add
enter
dec
fisubs
cmp
das
hlt
out
lret
mov
in
arpl
push
sti
lods
scas
jo
out
inc
push
fsts
stos
mov
jp
inc
dec
adc
push
pop
daa
cwtl
in
popf
mov
out
and
xchg
jmp
fadd
sub
push
fucom
jnp
mov
dec
cmp
inc
push
xchg
iret
sbb
or
enter
cli
cmpsl
js
sahf
in
repz
sub
xchg
imul
mov
rcll
iret
test
aaa
adc
sub
pop
in
insl
xor
scas
repnz
sub
xchg
lret
pop
or
jo
divb
movsl
cmp
aas
pop
cmp
add
imul
xor
sbb
jle
in
jl
xchg
call
jmp
pop
ljmp
sub
mov
xchg
mov
fmuls
dec
out
jmp
xor
dec
aam
sub
std
jecxz
xor
repz
fistpll
sbb
pop
mov
pop
iret
cs
pop
pop
dec
jo
or
insb
pop
cmpsb
fdiv
mov
and
insl
sahf
mov
xchg
icebp
pop
sbb
jae
inc
movsl
xlat
adc
aaa
mov
mov
sub
pop
frstor
sahf
divb
roll
in
pop
push
jne
std
mov
cs
push
push
or
cmp
les
fidivrl
repnz
mov
imul
inc
shr
xchg
notb
push
cmp
cltd
mov
mov
test
insb
mov
fwait
sub
xor
jp
imul
popl
mov
pop
inc
mov
xchg
insl
mov
mov
cmpsb
test
sub
hlt
stos
inc
mov
popf
ljmp
add
jle
mov
mov
jo
pop
or
lock
aam
in
fildll
ret
pop
or
cmp
ret
mov
cs
mov
lods
imul
push
pop
orb
pop
jmp
mov
mov
stc
jge
int
xchg
mov
dec
push
ja
add
cmp
xor
push
lret
xor
sub
add
mov
ss
lods
cmpb
sub
jmp
shr
aaa
lods
sub
and
aad
popf
xor
ret
divb
cmc
test
loop
sub
lret
pop
iret
loope
insb
mov
dec
jl
outsl
mov
ss
cmp
cmp
shrb
out
and
repnz
in
or
add
aas
bound
pop
jge
push
dec
sarl
andb
or
cmp
mov
xchg
push
leave
jne
push
inc
jnp
push
push
ret
out
enter
dec
int3
das
ljmp
addr16
ss
and
jo
cmp
push
fsubrs
nop
xor
push
ret
ljmp
icebp
add
dec
mov
mov
jns
gs
pop
and
stos
inc
daa
jae
xor
pop
out
pop
arpl
idivl
popa
sbb
dec
pop
ret
mov
pop
cmp
ret
orl
jo
xchg
scas
scas
mov
adc
repnz
scas
daa
pop
push
xchg
shlb
jmp
repnz
aad
mov
sub
jl
call
pop
ret
cmp
add
lret
shlb
sub
je
ja
add
jg
push
cmpsl
jne
mov
aam
or
mov
sub
stc
outsl
aam
stos
or
or
push
clc
loop
sahf
bound
lcall
pop
rorl
and
cmpl
lcall
jns
sub
sbb
mov
test
stos
fiadds
mov
sub
adc
dec
sub
out
mov
or
xor
mov
lods
sub
mov
xchg
or
sahf
repz
mov
and
pop
or
jmp
pop
les
fdivrp
push
fsts
xchg
rorb
int3
les
or
out
adc
or
cli
test
es
push
jl
into
icebp
les
cli
rol
popf
push
testb
in
out
hlt
sub
cmc
cwtl
ds
mov
imul
lahf
rcr
scas
into
sbb
add
ja
jle
inc
dec
cmp
shlb
push
fwait
lcall
push
and
xor
pop
dec
into
push
ja
jmp
popf
cmp
js
aad
insb
popa
mov
fwait
sbb
and
adc
pop
pushf
lds
adc
stos
testl
sti
push
popf
pop
out
enter
test
mov
cmpsl
push
fisubrl
mov
bound
stos
scas
pop
pop
jp
sub
int
lret
scas
push
daa
enter
jae
pop
lock
fdivr
adc
mov
test
sub
mov
cmp
or
aas
ficomps
aaa
pusha
lds
cs
add
mov
dec
push
mov
clc
jp
mov
gs
aaa
scas
lret
lock
mov
fs
push
int
or
fldcw
mul
fildl
sti
xchg
dec
in
jbe
mov
mov
jo
inc
adc
aaa
dec
or
dec
ret
xor
mov
cmpsb
adc
and
fs
fidivrs
ret
int
push
mov
dec
jne
push
dec
jb
dec
mov
dec
andnps
lods
sahf
sar
or
outsl
loope
sbb
inc
sbb
xor
lahf
lret
nop
xchg
inc
jl
int
sbb
shr
lea
jg
push
ds
pusha
sbb
imul
push
gs
stos
inc
push
popa
popf
push
int
inc
notb
mov
mov
jbe
xchg
pusha
addr16
xchg
add
loopne
add
subl
mov
inc
fmuls
dec
pushf
mov
ss
scas
push
lods
sub
movsb
xchg
jg
or
into
sbb
adc
scas
out
xlat
xchg
add
xchg
add
or
out
lods
mov
addr16
lret
lods
sti
dec
lods
add
loop
mov
out
xchg
outsb
xchg
sub
add
outsb
push
sub
adc
pop
xor
repnz
hlt
push
mov
adc
mov
adc
dec
inc
lds
ffreep
mov
lea
jge
cmp
fidivrl
and
push
sahf
push
fsubs
pop
cltd
cmp
jle
es
lods
shr
lods
push
call
push
inc
mov
mov
inc
jns
xor
pushf
fisubs
push
test
icebp
and
jg
sub
fidivl
jae
ficoml
int
adc
out
mov
xchg
xor
stos
push
les
and
cmpsl
jno
mov
cmpsl
xadd
sbb
popf
movsl
loopne
iret
mov
xor
movsb
xor
dec
cmp
fidivrs
push
lret
icebp
andl
xchg
xchg
xor
orb
jo
repnz
dec
mov
iret
jae
cmpsb
inc
pop
ja
mov
repnz
sti
test
cmpsb
pop
fistpll
mov
mov
sbb
out
dec
xchg
stos
mov
or
xchg
pop
out
xchg
mov
pushf
inc
xor
aas
in
and
xor
mov
xchg
loop
aaa
loopne
cwtl
into
movzwl
mov
mov
inc
loop
mov
jge
xchg
test
xchg
shrl
jle
fadd
or
adc
xor
in
pop
xor
add
in
cmp
sub
loop
arpl
cmp
mov
jbe
repz
jno
lcall
sbb
adc
mov
cmpsl
and
jo
ja
xchg
lds
inc
shll
ret
add
cs
rorb
insb
pop
sahf
mov
imull
repz
sub
and
aad
cltd
fwait
pop
les
mov
andb
enter
fstps
pop
shll
aas
adc
or
shl
jg
das
gs
std
cs
jbe
stc
add
fwait
mov
mov
mov
push
daa
out
inc
sarb
sub
aam
and
stc
rclb
mov
mov
and
aad
adc
test
daa
stc
je
push
jle
inc
jno
ljmp
mov
mov
fbld
cwtl
je
sub
outsl
cmpl
mov
stos
adc
or
out
mov
inc
mov
filds
dec
lock
mov
fdivr
xlat
dec
loop
push
pop
mov
and
sbb
leave
add
js
xlat
test
pop
adc
mov
shrl
sbb
fbld
jmp
iret
nop
or
add
je
clc
jl
fwait
add
xchg
pop
sub
arpl
cltd
sti
pop
mov
in
or
xor
xor
ljmp
and
pop
xor
fs
out
ds
xchg
popa
jecxz
pop
jae
mov
mov
jno
fimull
jo
int
pop
rcrb
call
sbb
outsl
sbb
gs
aaa
jmp
sub
cmpl
test
lods
jecxz
notl
and
dec
aaa
mov
sub
fs
xor
mov
jmp
daa
xlat
ja
xor
loope
inc
nop
stc
popf
add
or
data16
or
lret
cmp
mov
and
adc
xchg
aad
lret
mov
sbb
or
dec
and
pop
cld
mov
mov
rclb
incl
lds
push
sub
mov
sahf
or
jmp
mov
sub
xchg
and
insb
mov
lcall
dec
movsb
adc
ja
rcl
pop
in
push
xchg
sub
sbb
in
xlat
inc
test
mov
mov
clc
push
les
inc
popa
repnz
int3
cltd
adc
xchg
cmp
adc
push
repnz
popa
push
call
mov
sub
pop
lcall
frstor
out
loopne
jp
push
int
xchg
sbb
pop
add
das
jns
daa
push
icebp
rcrb
adc
xchg
les
out
mov
out
xchg
outsl
in
add
xchg
test
mov
sub
fdivrl
add
es
xlat
xchg
iret
lods
jae
scas
pop
int
jecxz
xchg
pop
les
adc
das
pslld
add
add
sbb
mov
addr16
ja
sbb
xchg
xchg
ja
cmp
dec
add
cli
pop
xorl
scas
aas
or
fwait
inc
jmp
cmpsb
mull
enter
inc
popa
cmp
push
int
loop
scas
push
inc
fwait
add
stos
lahf
push
aas
jno
xor
into
dec
inc
bnd
fnstsw
sahf
or
push
add
arpl
and
jg
pop
adc
adc
clc
arpl
cmpsb
pop
xor
lret
xchg
js
cmp
mov
inc
divl
outsl
jle
jb
mov
cmp
mov
mov
xor
mov
push
cmpsl
nop
sbb
pop
movsl
and
cld
sahf
push
fstps
sbb
cmp
push
bound
movb
aas
xchg
jle
mov
int
loopne
dec
insl
sub
adc
sub
ds
dec
stos
int
jg
imul
mov
xor
fstl
sub
outsl
jge
sbb
xchg
shl
shl
rcrb
jno
push
dec
inc
push
and
addb
or
pop
xchg
add
inc
jns
mov
idivb
js
lcall
jmp
stos
lods
sub
mov
dec
xor
dec
sub
outsb
push
stos
jl
enter
int
sub
dec
sub
leave
addl
dec
es
pop
cmpsl
push
jbe
loop
and
or
mov
lea
fnsave
mov
stc
or
fs
stc
clc
lcall
adc
arpl
jmp
dec
lea
pop
jae
arpl
pop
shrb
dec
roll
lds
mov
hlt
outsl
into
fs
push
xchg
jbe
popa
ret
stos
or
incl
shr
fcoms
rcll
das
adc
or
xchg
test
test
cmpl
xlat
jmp
andb
and
adcb
rcl
mov
mov
fs
movsb
int
push
scas
sti
cmp
pop
or
xor
mov
dec
add
mov
jnp
ss
jle
testb
fists
mov
popf
cmp
cmpsl
sub
cltd
bound
sbb
mov
sub
lea
jmp
dec
cmpsb
jg
jb
jns
mov
ljmp
xchg
mov
std
xor
xor
cmp
cmpsl
lock
imul
gs
dec
sbb
cli
xchg
in
jbe
into
pop
push
out
mov
in
das
add
mov
jne
cmp
nop
push
call
jg
pop
in
mov
call
xor
add
lock
out
sbb
sbb
jg
xorb
dec
movsb
add
repnz
dec
xchg
leave
xor
inc
out
cs
add
and
jae
pop
in
mov
pop
adc
mov
cmp
clc
add
rcl
into
scas
test
test
mov
mov
int3
out
and
mov
loopne
addr16
imul
int
inc
or
popf
adcl
mov
xor
mov
icebp
sub
pop
cld
aaa
push
xchg
subl
gs
xchg
push
cmp
ffree
js
mov
mov
adc
andl
inc
sub
andl
dec
stos
les
js
test
out
or
test
lock
insl
or
std
add
jne
in
addl
xchg
pop
movsw
incl
in
rcr
and
inc
subb
pop
dec
push
mul
push
pop
adc
push
mov
inc
jbe
lcall
sub
xor
cli
add
adc
test
test
enter
push
push
push
mov
icebp
sbb
into
push
mov
cs
mov
dec
es
or
adc
lahf
pop
call
dec
sbb
out
insl
sbb
orl
inc
dec
imul
inc
sub
sar
add
lock
out
cmpsl
icebp
sbbl
bound
fcom
pop
mov
jecxz
pop
xor
cmp
xchg
and
pop
sbb
mov
scas
xchg
iret
ret
enter
lods
sub
notb
gs
jl
xor
out
mov
xchg
outsb
xchg
or
and
and
sub
ljmp
cmc
sbb
mov
jns
shrl
mov
and
xchg
jp
lret
xor
aam
xchg
iret
sub
repnz
inc
stc
lods
mov
aad
jo
pop
aaa
repz
pop
es
shlb
dec
push
mov
add
ret
ljmp
sti
insl
pop
cmp
pop
xchg
inc
xor
mov
out
in
mov
test
xor
clc
data16
sbb
in
mov
cmp
push
cs
jle
adc
enter
loopne
and
cmp
mov
lcall
mov
sub
movsl
lret
mov
pop
inc
add
call
adcb
mov
rolb
dec
fsubs
cmpsb
push
pop
add
sub
idivb
xor
in
add
or
ret
jecxz
lea
and
test
mov
out
add
ret
mov
sub
dec
lcallw
insl
xchg
rcrl
inc
mov
sbb
sub
stos
dec
fmulp
pop
jns
and
aaa
xchg
pop
push
dec
xor
loope
mov
xor
xchg
inc
cmp
ret
outsl
add
push
jmp
sub
push
add
adc
xchg
je
cld
xchg
push
pop
mov
jo
adc
std
jns
decl
jl
clc
clc
dec
xchg
dec
lea
fisubs
push
mov
aas
push
pushf
mov
ja
jo
sbb
or
xor
in
jge,pt
fxch
jbe
call
lods
xchg
mov
movb
mov
rol
add
popa
lcall
repnz
rep
mov
and
sub
push
mov
lea
shll
rclb
fpatan
lahf
dec
inc
lret
ss
push
punpcklbw
push
mov
int
loop
mov
cmp
dec
dec
ljmp
les
frstor
lret
xchg
fmull
dec
popf
and
jo
pusha
fs
lret
push
mov
jp
das
mov
and
lods
clc
sub
movsb
dec
pop
jo
jns
pusha
std
inc
add
into
sbb
ss
and
fs
mov
fstpt
and
nop
std
sti
cs
addb
push
xor
or
gs
fsubrs
lods
jno
mov
cwtl
rorb
add
and
pushl
xor
mov
lea
call
mov
push
add
cmp
dec
fwait
insl
inc
push
push
dec
cli
sub
repnz
pop
jnp
rclb
rol
fs
mov
movsl
aas
fists
dec
out
sti
mov
mov
sub
pop
inc
or
fmul
add
insl
subb
push
mov
rcrl
jns
test
mov
fwait
rcl
ljmp
push
aaa
test
scas
add
hlt
aaa
xchg
popf
out
neg
test
jg
lea
xor
ficoml
and
jbe
not
pop
std
push
xadd
fists
test
ljmp
fisttpll
repz
ss
rcll
rclb
mov
mov
pop
and
push
das
pop
inc
hlt
inc
mov
pop
xchg
xor
fstps
sub
mov
push
dec
and
inc
xchg
cmp
add
and
inc
movsl
add
cwtl
dec
and
lcall
loop
inc
and
in
pop
cmp
cmp
in
push
ret
leave
add
push
lea
lock
fcmovnu
and
pop
sbb
push
push
and
cmpsb
and
inc
mov
push
repnz
sbb
jo
int3
scas
cld
cmp
push
aaa
adc
mov
outsb
sbb
lcall
mov
adc
pop
adc
or
or
aas
or
inc
stos
jl
and
int
stc
ljmp
aam
mov
lds
xchg
mov
wrmsr
jg
aam
fisttpll
imul
and
push
xchg
or
aaa
rcrl
out
jo
pop
lahf
pop
mov
jg
xchg
bound
lret
xlat
test
push
sbb
dec
pop
pop
add
int
cmp
adc
ret
push
insl
rcll
ret
sub
mov
rolb
mov
ficoml
leave
or
inc
ds
mov
bound
lock
test
jle
pushf
inc
jl
pop
pop
pop
add
gs
stc
mov
mov
cmp
roll
in
lret
xlat
pop
enter
lods
rcrl
lret
pop
hlt
mov
lock
xchg
cmp
cmp
adc
dec
jge
sbb
cld
jmp
cwtl
call
pushf
dec
mov
es
and
and
test
cwtl
jno
add
jbe
push
bound
xor
lds
popf
aad
mov
data16
push
sbbb
sahf
push
sub
repnz
mov
mov
test
addr16
pop
movsb
enter
fwait
sti
shl
in
push
jmp
inc
lret
or
jmp
in
dec
lods
sarl
sbb
ret
inc
dec
sbb
lds
pop
fiadds
push
insl
repnz
ja
sub
inc
scas
cmp
cmp
shll
es
sbb
loope
jle
sub
pop
sbb
data16
test
idivb
inc
mov
dec
add
mov
cltd
mov
adc
ljmp
inc
add
fldt
sahf
in
mov
push
rcl
shrb
pop
scas
inc
xchg
and
stc
in
push
outsl
outsl
xor
pusha
lock
add
xor
repnz
push
push
jns
mov
push
imul
cmp
push
adc
inc
mov
mov
and
inc
dec
mov
leave
fs
jl
enter
pop
movsb
ret
and
and
scas
fdivrs
fbstp
insl
jo
imul
out
dec
ss
mov
je
push
cwtl
repz
inc
xor
in
or
or
push
adc
outsl
or
mov
lahf
ljmp
es
leave
mov
loope
in
lcall
pop
cmp
clc
nopl
mov
fidivrs
jns
lcall
or
lret
jmp
jne
stos
mov
jns
ja
push
pop
adc
in
jle
adc
xor
pop
cmp
daa
movsl
cmp
pop
xor
rcl
cmpl
clc
sbb
imul
pop
out
test
lcall
add
mov
test
cmp
mov
pop
dec
mov
jge
insb
and
adc
mov
jne
js
adc
cmp
fisttpl
es
and
cmp
xor
es
test
mov
dec
push
jo
mov
stc
in
arpl
sub
and
stos
out
push
gs
and
inc
jne
lods
xchg
mov
mov
sahf
sarl
add
shr
ljmp
in
xchg
mov
mov
xchg
fdivr
sub
roll
push
out
aaa
sbb
fistps
add
lret
xor
sbb
adc
inc
leave
out
lods
lret
or
jg
sbb
jae
and
ds
gs
add
insl
mov
push
push
mov
dec
insl
push
rcll
jp
and
shlb
add
in
outsl
ret
aam
dec
scas
mov
or
pop
nop
lea
insb
lods
clc
or
popf
and
cmc
rdtsc
fisubrl
jb
ds
sub
push
cmp
inc
hlt
xchg
mov
cmp
cs
cld
insb
out
push
mov
push
sbb
and
or
les
cmpl
int3
sbb
aad
push
mov
dec
stc
subl
push
push
dec
mov
sbb
adc
mov
xchg
inc
xlat
icebp
add
or
aaa
clc
xor
cmp
ds
iret
mov
call
sub
mov
xchg
ret
jae
cwtl
scas
cs
or
insl
jno
test
cltd
mov
addb
mov
cmp
xchg
inc
inc
xor
call
outsb
shlb
mov
test
loop
mov
icebp
add
jae
mov
aad
mov
xchg
cmp
shrl
leave
xor
lahf
dec
lods
dec
push
dec
in
jbe
scas
push
mov
fidivl
out
jl
xor
dec
imul
cmp
cmp
and
mov
pop
cmp
out
push
pop
pop
cltd
jge
aam
inc
add
mov
loop
cmp
dec
push
push
cmovno
push
jg
xor
mov
jg
add
fsubrs
aaa
mov
jb
lret
dec
test
inc
ja
inc
jp
dec
stos
sbbb
mov
or
ds
push
mov
in
shlb
lods
repnz
jo
testb
mov
dec
add
cli
testl
dec
lds
inc
add
pusha
lcall
or
mov
lea
fsubs
std
inc
dec
scas
jo
inc
das
pushf
push
iret
call
subl
test
or
hlt
and
cmp
adc
mov
mov
add
mov
cmpsl
call
out
aas
xor
adc
push
adc
loopne
neg
pop
jbe
aad
js
pop
pop
xchg
dec
mov
mov
lea
cmovnp
xor
inc
jecxz
ja
mov
push
adc
adc
add
call
pop
cwtl
jge
ror
cmp
in
mov
sahf
cltd
movsb
iret
sbb
insl
test
daa
or
and
adc
cmp
lret
inc
cmc
shrl
fsubl
push
add
jmp
push
add
xchg
adc
mov
aad
clc
jnp
cmp
outsl
pop
bound
lahf
jae
cmp
leave
cmp
das
jbe
loop
les
xor
out
xchg
jmp
mov
fs
stos
push
imul
addr16
xchg
ficompl
mov
nop
inc
out
mov
leave
mov
and
add
pop
cld
add
adc
pop
sbb
fidivs
mov
cmpsl
mov
cmpsl
mov
jg
jl
and
adc
mov
cwtl
mov
std
stos
sbb
clc
imul
je
dec
or
sub
data16
repz
pop
aas
fidivs
jge
push
push
sub
loop
pop
jl
sbb
push
aam
fistpl
movsb
jne
mov
sub
inc
clc
adc
mov
cmpsl
das
imul
aaa
xchg
es
pusha
jmp
push
xchg
mov
adc
je
and
ds
loopne
or
fucomp
ljmp
add
add
loope
add
mov
enter
rorl
test
sub
pop
jg
xchg
mov
filds
xor
loope
mov
pusha
rol
mov
cmpsl
test
add
in
fs
js
test
filds
scas
aaa
jmp
mov
sbb
add
push
cmp
push
jae
pop
pop
rorb
sub
dec
adc
mov
arpl
imul
dec
jp
xor
repnz
pop
js
inc
sub
mov
lea
sbb
jo
xorb
pop
mov
leave
js
fdivrl
fisttpl
sti
sbb
or
mov
xchg
cmp
and
sti
test
dec
into
mov
nop
mov
testl
push
outsb
mov
jnp
or
push
jg,pt
icebp
adc
xchg
pop
jae
mov
xchg
int3
sub
into
jecxz
rclb
fisubl
mov
mov
push
arpl
push
jne
into
loop
and
lods
in
ljmp
lcall
repnz
push
push
inc
inc
xchg
in
mov
inc
adc
mov
arpl
lahf
xchg
out
in
je
movsb
xchg
int
cmp
arpl
outsl
sub
sub
xchg
movsl
or
pop
scas
cmp
fistpl
ret
adc
cld
push
or
daa
pop
xor
jl
mov
daa
mov
rol
jl
fmuls
jae
dec
inc
xchg
aad
testb
gs
jecxz
enter
js
pusha
jmp
lods
mov
mov
push
adc
push
mov
sbb
jbe
clc
insl
out
mov
mov
and
mov
loopne
cmp
ret
rcll
popa
jo
mov
push
imul
xor
inc
add
pop
jo
xchg
jmp
enter
insl
pop
in
loope
push
mov
in
imul
mov
f2xm1
imul
push
inc
lock
popa
jae
mov
ss
stos
adc
repnz
mov
push
aam
pop
loopne
jge
push
or
das
and
out
pop
xor
in
sub
shll
mov
clc
dec
xor
stos
lds
in
cmc
jae
xor
leave
mov
hlt
mulb
cmp
jnp
jge
in
push
insb
sbb
not
add
cmpsl
sbb
hlt
mov
push
fldcw
add
daa
jns
rorl
sbb
push
mov
test
xor
test
cmc
jae
aad
push
mov
sub
dec
out
mov
jmp
leave
xorl
test
push
pop
popf
mov
movsl
push
cmp
mov
cmc
jnp
pop
sbb
fwait
jmp
movsb
cld
cltd
jbe
enter
xor
sub
inc
in
xchg
or
daa
stos
mov
inc
and
sarl
mov
mov
adc
mov
inc
mov
push
out
aas
inc
sub
mov
pushf
pop
sub
inc
add
sub
pop
inc
xchg
movsl
dec
add
add
mov
testb
sbb
icebp
pop
sti
xlat
adc
inc
and
aas
lret
sti
mov
decb
adc
lods
push
aam
adc
mov
push
mov
cwtl
cmp
mov
mov
pop
out
popf
cmp
out
sbb
es
push
fstp
mov
mov
jne
nopl
add
lret
sub
or
push
adc
fidivl
rcrb
int3
stos
stc
jl
enter
rcl
stc
push
testl
ljmp
xchg
add
mov
inc
adc
pop
sub
dec
xchg
sbb
or
or
inc
shr
nop
testl
or
icebp
addl
jecxz
loop
iret
mov
pop
int3
inc
repnz
push
bound
ja
mov
sbb
jno
xor
aas
and
icebp
cld
jo
mulb
ljmp
mov
inc
nop
mov
add
insb
cmpsl
les
jl
cmp
ja
inc
cli
dec
in
ds
sub
aaa
incl
jle
je
sahf
or
inc
push
push
add
shll
sub
pushf
dec
test
js
lods
std
adc
sti
popa
inc
lods
mov
lods
aaa
xor
test
mov
jae
mov
pop
adc
test
push
adc
outsl
call
pop
out
aas
fscale
mov
dec
jbe
sub
and
leave
and
fiadds
or
mov
mov
mov
pop
sbb
aam
stos
sbbl
dec
or
jnp,pt
insb
cmc
jp
lcall
add
cmp
std
jno
lret
test
xchg
enter
add
dec
add
mov
xor
rcrl
or
sahf
push
fs
xor
cld
xor
ja
mov
rcrb
cmp
xor
mov
xor
int3
adc
outsw
xor
inc
and
mov
pusha
cld
mov
ds
js
ret
lds
ret
movsl
jmp
in
loopne
mov
mov
nop
filds
jle
jge
les
pop
and
fiadds
push
adc
jp
ljmp
fstpl
rorb
xor
cmpsb
jo
popf
push
gs
and
lea
ret
hlt
nop
daa
xchg
loop
lret
pop
jnp
pop
pop
xchg
pusha
xor
addl
hlt
test
mov
xchg
int3
pop
pop
jge
pop
adc
ret
cmp
push
nop
insb
insl
outsb
sbb
jle
sub
int3
imul
xor
push
out
pop
jb
test
jmp
add
sub
mov
addl
sbb
jae
dec
push
flds
push
pop
je
lods
pop
out
nop
cmp
cwtl
push
aas
andb
insb
imul
xchg
push
xchg
cmp
dec
or
or
sbb
add
ja
pop
stos
cld
outsb
sbbl
addr16
adc
mov
jge
pop
clc
cmpsl
pushf
cmpsb
push
add
cmpsb
int
mov
fidivl
jbe
pop
dec
xorb
inc
cltd
pop
or
std
jp
xor
outsb
dec
sub
lea
int
aad
mov
or
dec
ljmp
hlt
inc
xchg
out
pop
enter
fnstcw
mov
and
inc
fdivs
add
push
scas
mov
outsb
mov
adc
pop
fimuls
adc
popf
pop
mov
jne
sbb
cwtl
mov
and
push
nop
repz
stos
inc
adc
movsl
daa
xor
sub
ss
mov
loop
imul
push
pushf
int3
add
dec
int3
push
pop
stc
xchg
ret
out
push
push
add
and
add
pop
scas
stc
ficoml
sbb
dec
mov
jb
xchg
ljmp
xor
mov
jne
push
push
push
mov
aaa
inc
xor
fists
int3
nop
lods
orl
mov
cmp
add
fs
outsb
mov
or
test
scas
test
sub
neg
add
aam
pop
cld
mov
pop
cmpsl
dec
sub
mov
pusha
pop
pop
repnz
out
stos
repz
std
xchg
and
xchg
mov
mov
roll
repnz
loope
std
xchg
xorl
inc
sbb
inc
pop
in
inc
or
mov
imul
das
push
xchg
gs
jmp
cmp
sti
andl
xchg
mov
cmpsb
mulb
inc
mov
clc
fcompl
xor
jno
adc
gs
clc
cmp
xor
int3
cmp
ret
pxor
test
je,pn
adcb
sbb
stos
scas
xchg
xor
mov
xor
sbb
or
push
cmp
movsl
subl
lock
scas
push
ds
rorl
ss
jp
adc
and
test
pop
loop
mov
in
inc
movsl
daa
cs
fucomi
out
shll
xor
iret
lods
mov
sbb
test
mov
cmc
adc
mov
or
pop
daa
jns
jnp
push
dec
push
daa
cmp
and
and
sub
dec
mov
idiv
aas
mov
xorl
sbb
xor
leave
pushl
xor
jb
add
adc
and
ret
cwtl
xchg
mov
mov
dec
xchg
xchg
cmpb
or
cld
lds
das
fnstenv
cmp
ljmp
add
mov
mov
mov
inc
in
sbb
pop
loop
jno
daa
xor
stos
movsl
in
ss
je
push
cmp
or
or
arpl
add
mov
jnp
outsl
dec
iret
adc
xor
mov
imul
out
int3
and
xor
std
cmp
pop
sbb
sub
cmp
inc
mov
add
pop
mov
xchg
sbb
std
lret
xchg
or
outsb
outsl
cmp
mov
subb
sahf
add
ret
cli
cmpsb
outsb
adc
add
shlb
and
scas
mov
push
mov
das
es
scas
std
sbb
mov
adc
lock
inc
lods
sbb
mov
sub
lcall
lods
out
dec
out
jmp
cmp
dec
jbe
add
and
mov
mov
fwait
adc
test
inc
pop
mov
adc
adc
push
nopl
fcompl
pop
dec
int3
nop
ret
int
cwtl
mov
mov
repnz
and
stos
out
dec
push
sbb
or
arpl
fs
fdivrp
ficomps
xor
mov
xchg
cs
cmp
test
test
cmp
pop
adc
xor
popf
adc
mov
jbe
pop
pop
adc
enter
cmpsb
inc
jno
adc
mov
iret
ss
mov
cmp
ss
addb
outsl
lock
loope
cs
pop
jns
ds
fwait
arpl
out
and
mov
jg
sub
add
leave
outsb
cli
xor
and
and
pusha
out
test
add
xchg
lea
mov
xchg
scas
and
xor
int
lret
mov
sti
mov
and
and
ror
push
mov
xorb
mov
cmpsb
xchg
adc
mov
jmp
sub
aad
and
lret
push
and
mov
lret
outsl
hlt
mov
adc
ljmp
mov
fsubp
pop
or
fcoml
popa
mov
jbe
movsl
das
and
outsb
dec
hlt
js
dec
lods
mov
mov
loop
xor
in
add
cltd
out
adc
sub
lret
int
cmpsl
and
jae
cli
dec
lcall
xchg
rcrl
pop
rcrb
mov
jge
outsb
xor
ficoml
lock
sub
mov
jb
pop
and
dec
sbb
xchg
loope
dec
cmp
test
cld
inc
std
roll
sbb
hlt
mov
mov
and
lods
bound
push
inc
fldcw
es
fisttpll
into
inc
movsl
out
mov
mov
stos
push
xchg
jno
lret
int3
cmpsb
mov
rol
add
cmp
sbb
cld
outsl
pop
fwait
imul
xchg
pop
xchg
xchg
push
into
push
push
and
das
test
test
xchg
das
adc
in
ss
add
xchg
std
outsb
rclb
fcoms
cmpl
add
arpl
pop
xchg
adc
jae
adc
fnstsw
ds
push
test
mov
arpl
in
mov
adc
hlt
jb
jnp
xchg
or
enter
sbbb
xchg
ja
das
cld
ss
in
je
nop
sbb
test
js
cmp
or
icebp
adc
inc
cmpsb
movsl
or
push
or
pop
add
or
pop
mov
repz
inc
aam
push
xchg
in
fwait
add
icebp
push
in
orl
cmpb
sbb
dec
inc
jae
sub
jae
pop
push
lea
xchg
sbb
cltd
pushf
es
jne
outsb
xor
add
fadds
mov
ja
and
xor
adc
adc
pop
adc
dec
push
add
xchg
inc
cmpsb
xor
sub
fildl
roll
aas
mov
inc
mov
repz
dec
and
repz
jnp
pop
xchg
add
mov
pop
and
in
pop
jne
dec
and
cld
or
testl
mov
fidivs
das
cmp
pop
mov
nop
mov
iret
push
jns
sti
les
adc
pop
sub
in
pop
and
mov
add
ljmp
iret
inc
loopne
and
jmp
fisttpl
fisubrl
jl
icebp
jbe
mov
push
push
scas
xor
fiaddl
adc
imul
or
push
sbb
adc
mov
and
cli
dec
daa
cmc
mov
sub
push
mov
and
cli
xor
cmc
dec
or
jg
je
jbe
fdiv
insb
aad
pop
in
dec
fsub
inc
xchg
sti
add
sub
cld
pop
mov
adc
add
inc
xlat
nop
mov
sbbb
adc
sahf
inc
and
out
mov
fs
aaa
jne
sbb
mov
repnz
iret
cwtl
fisttpll
test
adc
js
out
jl
das
movsb
shl
or
and
sahf
sbb
mov
jg
fisubl
mov
mov
fidivs
xorl
jg
sbb
mov
push
es
icebp
cmp
ljmp
js
push
and
push
movsl
lahf
push
cmc
jl
jnp
sti
add
test
clc
and
fldl2e
nop
sub
adc
scas
pop
jae
in
jb
add
jne
incb
loopne
and
pop
pop
adc
jo
add
mov
popf
std
test
mov
cmp
pop
jl
test
ja
dec
jecxz
cs
mov
sahf
test
test
shlb
outsb
push
xor
dec
jae
fcoml
in
repz
mov
mov
into
xchg
push
cmp
mov
cmpsl
ds
mov
sbb
adc
sti
ds
int3
sbb
jo
ficoms
and
jecxz
into
test
mov
dec
cs
paddsb
mov
push
addb
or
lods
test
insl
mov
lds
jnp
sub
mov
pusha
std
sahf
jbe
fistps
jne
jae
cld
pop
jno
dec
cld
loop
xchg
push
test
clc
iret
outsb
imul
and
sub
lock
xchg
xor
cmp
push
mov
mov
xchg
add
popf
ss
push
stc
aam
push
enter
dec
cmp
sub
jle
xor
or
scas
mov
jmp
ss
mov
xchg
mov
xchg
mov
push
mov
incl
insl
jge
testl
inc
lcall
sbbl
add
adc
adc
int3
inc
outsl
fwait
int
inc
or
push
repnz
jmp
mov
xchg
imul
cwtl
inc
adc
xchg
and
adc
mov
cmp
popl
push
cmp
xchg
dec
pop
inc
cmp
mov
jns
mov
stc
push
inc
jb
and
mov
add
cmp
and
xor
push
sti
inc
rcrb
xor
xor
sub
adc
inc
sub
out
and
ljmp
lods
xadd
ret
sub
popa
push
jnp
add
xchg
mov
mull
mov
dec
xchg
xchg
imul
dec
pushf
push
gs
andb
sub
lcall
and
cmpsb
xchg
movsl
mov
push
ljmp
mov
data16
and
mov
push
fildll
xchg
push
sbb
call
push
push
in
movsb
and
jg
rcrb
mov
repnz
in
pop
rorb
popf
lret
cmp
fsubrl
iret
sahf
mov
xor
pop
dec
ss
adc
fdivl
xchg
psrld
inc
xchg
dec
xchg
mov
movsb
dec
iret
enter
fcoml
bound
xchg
dec
iret
fst
jns
push
cmpsl
icebp
rep
jbe
addb
mov
cmpsl
xor
dec
out
test
hlt
and
mov
sub
dec
dec
mov
sbb
dec
adcb
cmp
or
jnp
stos
mov
push
fld
xor
icebp
pop
sar
in
xor
dec
and
loop
int
pop
lret
adc
inc
push
insb
jmp
test
inc
fs
roll
leave
inc
inc
inc
jo
pop
or
outsl
add
hlt
cld
testl
push
xchg
fs
lret
sub
popf
outsl
xchg
dec
mov
mov
adc
aas
push
push
scas
xchg
mov
push
pop
rclb
jmp
inc
sub
jns
lds
add
xlat
repnz
fs
sarb
js
push
sahf
js
out
lods
adc
loop
or
pushf
xor
dec
or
mov
in
shrb
push
pop
push
in
out
adc
cmp
pop
js
insl
dec
nop
and
adc
sti
fists
xchg
fidivl
push
cmp
sbb
stc
pusha
adc
mov
or
cmp
jno
lcall
repz
and
inc
test
sub
and
push
dec
sbb
imul
fstps
insl
push
sub
mov
add
lret
mov
movsb
inc
and
xchg
mov
xor
insl
mov
pop
sbb
xchg
mov
fwait
and
pop
xor
aaa
mov
pop
dec
xchg
stc
adc
rcl
mov
into
into
ret
dec
xor
cmpsb
xor
insb
lret
mov
mov
mov
dec
mov
mov
icebp
icebp
out
jne
rep
adc
pop
mov
fcompl
scas
xor
or
and
sarl
pop
ffreep
push
iret
out
cwtl
mov
inc
xor
mov
enter
into
repnz
mov
pop
imul
push
and
dec
nop
in
cmp
jle
pop
test
push
mov
add
lcall
xchg
mov
icebp
push
shl
push
dec
insl
pop
xchg
fisttps
add
mov
sub
push
mov
mov
jle
add
add
dec
ds
jge
loopne
ret
cmpsb
mov
push
in
adc
mov
xchg
daa
mov
out
ds
stc
ss
push
jno
dec
cmp
xor
frstor
xchg
jae
sub
loope
xchg
xlat
dec
mov
mov
mov
adc
lcall
push
decb
std
out
or
fnsave
sub
pop
or
in
jmp
stos
sbb
lahf
mov
fs
and
testb
xchg
add
add
mov
dec
xchg
jge
iret
icebp
jno
out
dec
aam
fiadds
adc
ljmp
cs
dec
push
or
jmp
ficoml
mov
arpl
dec
add
mov
lods
dec
or
mov
mov
push
fisttpll
or
pop
cmp
imul
cmp
inc
imul
xor
add
in
xchg
lds
insb
fistps
fdiv
lods
mov
andl
and
sbb
sub
jb
lds
sub
fsub
arpl
adc
xchg
rcrb
je
inc
dec
ja
or
jbe
repnz
and
add
mov
roll
imul
pusha
orb
ss
dec
out
jmp
test
xchg
ss
push
imul
dec
sub
sub
insb
cmpsb
cmp
xchg
push
or
cltd
fisubrs
mov
cs
push
jge
xchg
dec
mov
insl
mov
into
mov
mov
add
hlt
sbb
dec
add
mov
mov
orl
mov
loope
mov
adc
into
and
imul
or
sets
mov
pop
data16
test
mov
jno
out
pusha
sti
lahf
dec
leave
bound
cmp
hlt
repz
std
pusha
or
ret
icebp
aad
dec
sub
mov
push
dec
push
clc
pop
xor
repz
inc
in
add
hlt
addr16
imul
xchg
mov
push
addr16
hlt
addr16
cmpsl
mov
pop
mov
scas
rcrl
in
xor
popf
inc
fcmovnb
jle
out
ljmp
les
xor
adc
dec
rcrl
mov
jp
gs
jnp
mov
sbb
cmp
repnz
cmp
dec
pop
imul
rorl
cld
mov
call
cmc
mov
test
into
mov
and
inc
push
iret
dec
aad
mov
jg
rclb
dec
add
in
fucompp
bound
icebp
sahf
sbb
je
sbb
out
jp
mov
arpl
fnstsw
adc
aam
mov
xchg
add
mov
divl
arpl
cli
push
test
mov
pusha
lods
out
popa
and
mov
mov
xchg
enter
fistpl
pop
pop
mov
or
and
dec
inc
iret
stc
dec
imul
mov
lcall
jbe
adc
ja
fwait
mov
mov
add
lret
popf
scas
pop
loop
int
cli
rorb
add
push
bound
scas
gs
push
push
and
movsl
mov
xor
shl
jae
insb
imul
inc
mov
inc
cmp
or
dec
xchg
xchg
fwait
mov
test
imul
fadd
fldcw
pop
sbb
fwait
dec
cmpl
or
jp
jbe
mov
pop
decb
push
rcr
xchg
or
sarl
pop
cltd
loop
xchg
cmp
xchg
inc
push
push
or
dec
inc
inc
mov
fldt
pop
pop
shlb
jae
push
mov
adc
mov
cs
xor
out
dec
pop
jb
shl
cmp
jns
cmp
repz
xor
push
bound
pop
popf
cmp
and
popa
stos
add
jb
ja
sub
cmp
fsubl
push
xchg
cmpl
inc
push
sbb
dec
ds
test
inc
inc
pop
mov
test
mov
xchg
dec
stc
fsubrs
inc
out
push
rcr
dec
insl
out
xor
inc
and
adc
cwtl
hlt
add
xchg
dec
sub
std
push
mov
or
outsl
sbb
test
stc
into
xor
cli
outsb
imul
aad
mov
lock
std
sahf
mov
in
icebp
std
push
fs
out
jno
loop
hlt
cltd
sbb
jae
xchg
dec
test
cwtl
es
aad
sub
lret
test
cli
mov
out
sbb
leave
test
scas
fsubl
mov
loope
add
data16
pop
cld
and
push
lret
adc
scas
jl
cmpsb
cmp
push
notb
lods
cmp
pcmpeqw
or
cmp
outsl
lds
or
cmpsl
jne
dec
out
leave
pop
pop
xor
sbb
add
lea
sbb
adc
and
sub
stc
std
loop
xchg
lock
dec
nop
and
loopne
in
sbbl
or
mov
nop
bnd
repnz
arpl
and
or
nop
adc
pop
popf
pop
xchg
or
adc
rcll
dec
cmp
lods
int
xor
pop
dec
xchg
or
sarb
add
nop
mov
sub
adc
cmp
pop
fisttpll
lcall
inc
mov
loope
outsb
outsl
and
pop
movsb
sub
and
icebp
leave
jecxz
fadds
sbb
mov
je
jmp
out
std
fs
aad
neg
rep
aam
loopne
mov
jno
mov
sbb
jmp
gs
or
out
and
inc
ja
mov
push
test
cmp
xchg
xor
arpl
jo
dec
pop
aas
aam
jmp
inc
xor
mov
ret
xchg
mov
jbe,pt
mov
mov
cmp
xchg
jns
xchg
aas
lods
sbb
into
mov
push
add
nop
pop
in
cmp
fistpl
cld
mov
std
adc
fiadds
inc
test
jae
xchg
adc
sbb
or
pop
test
int3
insl
sti
testl
mov
xchg
push
cmp
inc
or
xorl
add
stos
mov
jne
jecxz
adc
cmpsb
sub
xchg
mov
mov
mov
pop
in
pop
or
stos
push
xchg
leave
cmp
sbb
sbb
ret
lods
cs
iret
ja
inc
leave
test
xchg
popa
scas
aas
sbb
pushf
repnz
mov
repz
loope
std
es
pop
jg
push
cltd
adc
leave
adc
adc
in
shrb
filds
sbb
dec
gs
mov
in
push
sub
sbb
inc
jbe
lods
mov
jne
jmp
add
pop
sub
cmp
xchg
push
scas
lcall
sbb
lds
add
xchg
dec
jae
fisubl
xor
inc
ss
addl
lret
cld
lds
jp
sub
stos
test
lret
mov
cltd
ret
mov
aam
cld
dec
xchg
mov
cmp
push
jge
out
outsl
scas
cld
dec
lods
js
stos
loopne
push
lds
xor
lods
fdivrl
push
or
pop
inc
les
jle
call
xchg
jg
pop
sbb
lods
arpl
inc
mov
or
pop
pop
xor
xchg
inc
cwtl
inc
inc
scas
xor
out
dec
idivl
popf
sbb
aad
scas
clc
rclb
and
testb
pushf
in
and
adc
pop
ret
fldcw
out
sti
sbb
aas
insl
lret
clc
enter
cmp
ds
add
cltd
and
xor
in
inc
mov
sub
insl
sbb
xchg
or
nop
xor
dec
jmp
pop
sbb
xchg
jno
and
jo
in
pop
pop
pop
jle
jnp
stc
insl
jne
arpl
mov
push
pop
test
or
push
mov
test
jg
ret
inc
push
std
iret
test
hlt
mov
xchg
scas
insl
fcmovnu
aas
inc
sahf
movsb
dec
fs
ret
nop
idivb
daa
mov
or
pop
dec
fbld
or
test
movsl
add
arpl
enter
sub
neg
sub
cs
cli
jo
cmp
cwtl
jp
ficoml
xlat
loopne
push
out
je
mov
jmp
fisubrl
test
push
mov
xchg
cmp
incl
fisubl
adc
adc
js
test
sbb
popa
cmp
cmc
inc
dec
push
testb
out
jns
ud1
xchg
cmp
ds
roll
das
jnp
fldt
aaa
xchg
fbstp
mov
mov
cmpl
cli
mov
sbb
xchg
sbb
scas
jnp
inc
sbb
or
mov
int3
test
not
outsl
aas
jg
and
sbb
jecxz
inc
pop
xlat
stos
loopne
das
mov
outsl
cli
jl
lret
or
insb
mov
mov
adc
notl
es
mov
mov
cmc
aaa
out
sbb
fbstp
dec
iret
icebp
dec
sarl
push
mov
pop
loope
test
sbb
adc
add
idivl
aas
xchg
pop
loopne
lahf
in
sar
dec
adc
xchg
push
push
mov
jns
rcl
adc
push
add
xchg
and
sbb
call
inc
cltd
aad
or
cld
pop
cwtl
inc
shll
shll
jae
inc
xor
xchg
scas
mov
adc
in
out
sbb
jbe
mov
adc
mov
sbb
data16
fucomi
mov
adc
add
xchg
mov
fwait
jge
add
push
mov
les
sbb
js
outsl
xchg
std
lcall
imulb
nop
jae
or
add
pushf
movsl
inc
int3
test
dec
sbb
or
lods
fs
iret
movsb
jg
fiaddl
std
or
sub
jno
pop
pop
arpl
jbe
or
add
pop
push
jbe
cmpsb
into
inc
and
lret
int3
mov
data16
test
mov
arpl
sbbl
sub
jle
xor
mov
push
sbb
xchg
mov
scas
lret
lret
hlt
push
mov
push
inc
insl
jl
sbb
arpl
and
push
xchg
jb
xor
in
push
out
jge
add
xchg
sbb
cld
fisttpll
jmp
sbb
ds
adc
xorl
aas
sub
fst
ret
je
lret
jne
cs
jg
gs
pop
push
cmpb
cmpsb
cmp
dec
dec
leave
push
clc
dec
lock
push
push
push
popl
nop
fbld
push
push
test
scas
or
adc
std
test
mov
pop
pop
mov
push
mov
pop
xchg
ret
pop
cmpsb
ja
ret
outsl
stos
add
ret
or
push
mov
adc
inc
sbb
add
ret
test
push
repz
jno
push
cmp
sbb
sbb
stc
jne
sti
add
test
lcall
aaa
xchg
jmp
mov
sbb
mov
dec
jno
rolb
adc
add
mov
add
subl
xchg
nop
sub
and
and
sbb
lret
push
sbb
mov
xchg
dec
stc
sbb
mov
hlt
jl
cmpsl
movsl
push
sub
mov
or
push
ds
call
arpl
xchg
sub
sahf
and
dec
pop
dec
int3
cmp
ds
xor
pop
mov
cmp
or
pop
mov
dec
out
push
push
cmp
push
xchg
inc
ljmp
je
xchg
idivb
test
add
sub
xchg
jno
add
decb
xor
bound
inc
stos
les
sub
mov
lods
push
mov
popa
hlt
inc
xlat
xchg
sbb
mov
gs
mov
imul
sub
xor
lods
dec
push
nop
pop
pop
or
ljmp
add
and
fsubl
pop
rcrb
jbe
jecxz
and
lods
pop
imul
add
push
decl
sub
outsb
jge
xchg
inc
iret
inc
andb
or
xor
jecxz
pop
pop
mov
movsl
loopne
es
mov
sub
cmpl
fnsave
loope
push
fs
outsb
jle
push
mov
punpckhbw
inc
call
push
popa
lahf
or
sub
lods
adc
xor
jmp
and
sbb
fsubs
lret
xor
imul
testb
fwait
stos
sub
xor
cmpsb
das
lea
xchg
push
js
mov
in
push
in
and
lcall
movsb
sbb
sbb
xor
popf
mov
mov
push
or
sub
add
aaa
sbb
push
jle
repnz
and
in
sub
int
lock
aad
je
lods
mov
movsl
outsb
cmp
mov
sub
sub
inc
fmuls
inc
and
clc
adc
jge
mov
cmp
sbb
cs
imul
inc
adc
aam
pop
jmp
cmpb
stc
add
orl
xchg
xor
cmp
push
fdivs
mov
adc
sub
dec
dec
push
in
jae
mov
imul
cmp
or
sarb
push
or
pop
ficompl
rolb
add
clc
push
cmp
xlat
push
jo
dec
cmp
jae
aas
ss
pop
jmp
int
sbb
pop
mov
and
jns
or
sarl
jo
lds
sub
lds
and
adc
jl
ret
push
aad
inc
xchg
addr16
dec
inc
pop
xchg
add
cwtl
inc
adc
sub
subb
iret
adc
mov
cmc
fmul
jp
push
pop
cwtl
xchg
dec
je
stos
cmpsb
andl
xor
fbstp
xchg
aam
and
xchg
fcmovne
ret
cs
lods
aam
jle
xor
dec
sbb
push
and
xor
lods
jmp
inc
or
jno
loope
mov
cmpsb
cwtl
mov
out
filds
cmp
push
iret
insb
outsb
and
popf
push
pusha
and
fs
test
and
and
shlb
ss
ffree
loop
andb
mov
mov
mov
cs
lods
and
push
stc
push
or
int3
insb
push
pop
push
sub
out
mov
dec
push
or
loop
sahf
stc
je
jl
mov
jmp
test
push
mov
and
inc
cmp
lret
sbb
das
lds
pop
mov
xchg
dec
test
fmul
add
rorl
leave
cmpsl
sbb
push
or
mov
jecxz
das
mov
cmp
xchg
sbb
icebp
inc
int
mov
leave
push
out
cmp
movsl
stos
cmp
data16
ljmp
nop
sub
fcmovbe
mov
js
test
pusha
mov
adc
inc
pusha
popa
dec
lods
enter
cs
stos
cmpsb
cmp
dec
data16
push
jb
dec
mov
aam
xor
inc
dec
sbb
test
cmp
push
push
fiaddl
jge
xchg
fs
into
sbb
sahf
addl
bound
in
std
jae
adc
ja
mov
push
mov
dec
test
mov
pop
mov
jecxz
dec
fs
repnz
sbb
sub
fwait
cld
in
adc
mov
jmp
into
sub
xor
movsb
jmp
or
add
mov
dec
cld
mov
jmp
sub
fistl
cmp
icebp
movb
push
leave
cltd
jne
shrb
xor
roll
mov
dec
inc
pop
push
add
inc
add
cmc
mov
push
fnstsw
popl
add
rol
shll
lret
in
pop
outsl
pause
pop
shrl
inc
test
sahf
pop
je
pop
adc
loop
sub
clc
in
repz
mov
inc
mov
xor
pop
jl
subb
adc
sbb
push
repz
push
stos
lret
popa
addr16
mov
aaa
test
adc
add
mov
xchg
or
and
mov
pop
out
loop,pn
cmc
outsl
lcall
adc
and
fimull
dec
in
push
push
sarl
scas
rolb
lods
ja
jl
notb
cld
adc
dec
cmc
dec
ljmp
shr
push
mov
sahf
pop
in
sahf
jecxz
loopne
and
enter
mov
xchg
mov
jno
mov
mov
cli
or
popf
adc
sub
and
sub
in
jg
add
and
mov
adc
or
mov
mov
inc
cli
rcrb
orb
in
cmc
pop
dec
out
push
insb
xor
adc
testb
cmp
iret
and
push
cltd
scas
cmpsb
imul
scas
xor
stos
loop
test
add
enter
pop
repz
lahf
or
jnp
aam
in
test
xorb
aaa
sbb
ja
push
inc
into
leave
xchg
mov
dec
jnp
popa
incb
pop
in
pop
inc
push
lahf
push
addb
dec
dec
cmp
or
pop
and
inc
pop
jne
push
xor
adc
ja
xchg
cwtl
mov
pop
sub
in
pop
popa
fwait
arpl
push
mov
mov
cltd
bound
dec
lods
push
push
std
test
lret
adc
cmpsb
std
lods
pop
xor
loope
jo
das
mov
scas
xlat
ss
jb
push
test
jno
jbe
loop
mov
lahf
jmp
dec
fnsave
sub
adc
jge
scas
aaa
inc
and
cmp
xor
push
roll
idivb
mov
aam
dec
mov
ficompl
xor
ja
lods
cmp
iret
outsl
popf
push
dec
cmp
fadds
push
or
and
adc
sub
clc
call
or
mov
stc
mov
aaa
dec
cmp
test
cwtl
rcrb
cmp
dec
push
outsl
pop
add
mov
xor
inc
shll
fwait
or
mov
aad
and
test
mov
pop
pop
pusha
pop
mov
scas
mov
lds
pop
or
jb
pop
mov
pop
lods
jne
stos
mov
inc
cmpsb
gs
xor
dec
or
imul
pusha
imul
push
ds
xchg
mov
sbb
pop
cmp
fists
or
push
cmp
push
ds
imul
ss
mov
aad
pusha
lds
mov
or
das
orb
dec
sub
cmpsb
pop
movsl
pop
insb
dec
mov
lahf
out
add
jp
cmpsl
push
mov
popa
xor
or
jns
pop
mov
je
stc
jp
jo
adc
or
jg
popf
int
or
das
sub
daa
adc
or
faddp
orb
push
pop
mov
xor
shl
mov
dec
aas
rclb
ja
popa
jp
nop
xor
jae
push
dec
jge
push
mov
ret
sbb
adc
aam
out
pop
mov
sahf
sbb
jb
inc
and
mov
shlw
xchg
mov
insb
call
fmull
mov
push
mov
clc
xlat
shrl
lods
and
dec
js
jmp
jg
jnp
jmp
cs
cmp
mov
outsl
mov
fdivrl
idiv
or
jo
or
subb
jp
xchg
insb
leave
add
add
adc
sti
lahf
push
add
out
inc
dec
out
loope
or
movd
jle
cmp
or
dec
mov
pop
cld
dec
movsb
repz
pop
push
or
scas
into
adc
aaa
and
adc
cmp
push
mov
mov
xor
lret
lret
sub
jns
dec
xchg
push
jnp
push
xor
mov
add
mov
inc
dec
adc
mov
sub
popl
mov
jp
adc
adc
clc
in
cli
sbb
mov
into
or
add
mov
add
fildll
push
push
push
jne
cwtl
pop
jp
sahf
adc
sub
insb
cli
sub
mov
adc
xchg
enter
mov
push
or
add
sub
popa
cs
mov
sbb
inc
jmp
push
mov
pop
pop
cli
rorl
mov
rorb
xchg
ficomps
divb
icebp
fisubrs
ss
loopne
incb
or
cmp
pop
das
jecxz
outsl
mov
xchg
ret
addr16
jl
add
push
je
and
pop
and
pushf
sub
mov
xchg
hlt
xorb
mov
adc
jno
cltd
push
cmp
push
imul
loop
rorl
push
cmp
or
jae
mov
mov
sbb
repz
mov
in
ljmp
mov
sub
mov
stos
pop
xchg
data16
pop
jb
jg
adc
xor
inc
shl
inc
jns
xchg
add
fimull
mov
popa
inc
dec
mov
insl
adc
mov
cmp
into
cwtl
pop
jmp
inc
loop
dec
repnz
dec
pop
arpl
loopne
pop
jp
pusha
je
jnp
aaa
repnz
or
push
das
lock
mov
in
repnz
cmp
xchg
lret
icebp
pusha
lock
mov
xchg
into
xorb
enter
mov
jae
es
jge
out
inc
jbe
and
jae
sub
jo
faddl
mov
adc
xchg
cli
sahf
outsb
and
clc
or
testb
ljmp
sbbb
mov
mov
sub
push
mov
fwait
cmp
cli
push
in
out
add
xchg
adc
sbbb
jle
xchg
jecxz
cmc
push
test
insl
sbb
jp
andb
push
and
hlt
daa
hlt
push
add
xor
and
icebp
popf
push
mov
jb
lea
jnp
std
and
test
cmp
xchg
mov
daa
mov
enter
dec
cmp
ss
push
or
push
int3
cli
aad
push
movsl
mov
pop
jo
dec
mov
rolb
mov
pusha
adc
adc
mov
push
iret
std
mov
or
push
or
rclb
cmc
push
mov
push
sbb
xor
sbb
addr16
sbb
inc
sbb
push
inc
icebp
jecxz
sub
dec
in
xor
xor
cmp
scas
dec
test
mov
clc
sti
jnp
cmp
xor
push
mov
out
xchg
pop
andl
xchg
mov
mov
cmpsl
loop
outsl
or
xchg
xchg
xor
cmp
or
out
dec
sub
sbb
lcall
inc
xor
test
adc
fcoml
hlt
mov
and
pop
xchg
and
lods
xor
das
cmp
dec
addr16
xlat
cmp
xchg
jae
mov
cmc
mov
mov
or
cmp
pop
mov
push
nop
xchg
push
mov
imul
fcoml
cmc
lahf
enter
and
ja
jb
pushf
in
out
fsubr
jg
add
std
fiadds
jl
enter
insb
loope
sahf
cmp
inc
shl
mov
jne
jb
pop
sti
xchg
jo
nop
cltd
popf
mov
rcrl
ret
icebp
sub
pop
xor
je
test
sbb
pop
js
in
jp,pn
mov
stos
popa
int3
cmpsl
pop
enter
lcall
inc
cmp
fidivl
out
cmpsb
adc
subl
out
xchg
fcom
adc
popa
or
lahf
int
jecxz
mov
lcall
js
jge
mov
scas
jbe
and
add
shrb
sub
in
mov
push
inc
addb
xor
xor
add
es
ret
adc
adc
faddl
insl
imul
lods
cli
popa
repnz
pop
jecxz
push
cmp
or
sbb
std
xor
int
lahf
pop
cli
cld
sbb
imul
sbb
cmp
nop
inc
lds
push
mov
push
or
dec
shll
lea
out
mov
inc
cld
faddp
inc
mov
leave
adc
or
xor
xchg
ljmp
push
and
jbe
pop
and
jl
xor
das
jo
and
adc
jecxz
push
xchg
out
jae
jns
jecxz
fcomi
mov
mov
rcr
adc
int3
sti
push
jb
mov
icebp
clc
test
mov
jp
xchg
jge
ficoms
repnz
out
dec
sbb
push
pop
push
dec
das
cmpsl
out
shll
push
xlat
lret
cmp
xor
mov
jp
stos
cmp
add
fisubrs
xchg
sub
jo
sbb
ss
aaa
adc
ja
sahf
ret
sbb
or
pop
xchg
iret
lcall
adc
xorl
cltd
mov
cmpsl
mov
jo
push
shrl
mov
push
in
sbb
repz
mov
data16
nop
mov
pop
fildl
lcall
mov
nop
lret
cmpps
inc
outsb
inc
xchg
outsb
fidivrl
cmpb
cmc
adcb
int
cs
push
fnstsw
mov
lret
adc
xchg
les
jae
mov
stc
pop
aad
and
call
iret
in
sar
sbb
pushf
mov
or
stc
push
fisttps
xchg
dec
insb
dec
sub
inc
pushf
inc
ljmp
cmpsb
pop
sbb
or
mov
push
jp
cwtl
or
add
push
outsl
movsl
test
mov
fimull
pusha
adc
rorl
nop
jle
vpmadcsswd
arpl
xchg
xchg
push
push
sub
into
xchg
mov
cwtl
ds
xor
adc
jle
mov
pop
loopne
add
push
add
cmp
mov
push
mov
aad
add
clc
inc
nop
inc
dec
std
xchg
shrb
in
jbe
xchg
cmpsl
sbb
sbb
fdivrl
pop
mov
adc
mov
and
fucomp
iret
loop
or
cmp
jmp
jo
xchg
sbb
mov
into
out
lcall
cmp
xor
mov
es
adc
test
lods
addr16
call
mov
or
jle
aaa
push
and
inc
bound
es
xor
jmp
jecxz
jno
in
sub
repz
mov
mov
scas
ja
pop
gs
or
pop
push
pop
aas
xchg
out
std
jmp
and
mov
sbb
mov
je
lods
dec
addr16
out
sub
fwait
iret
js
cli
sbb
adc
jp
xchg
jns
pop
sbb
add
and
pusha
xchg
sub
push
enter
inc
dec
mov
ret
outsl
lcall
es
cld
in
je
adc
div
xchg
shrb
scas
sub
shlw
arpl
xor
push
xor
pop
clc
lcall
mov
loop
mov
into
inc
mov
xor
sub
dec
repz
movsl
add
leave
lret
dec
loop
imulb
mov
and
mov
dec
shll
jno
xor
pop
add
and
fnsave
out
leave
push
xchg
mov
cwtl
call
push
je
cli
sub
pop
movsb
dec
dec
mov
imul
inc
loopne
xlat
dec
popa
fcomi
rcrl
imul
fcomps
push
divb
scas
les
and
push
sbb
rorl
inc
aam
fstps
push
test
fsubrl
scas
shll
push
std
mov
div
ret
shll
adc
mov
inc
cmpb
push
add
adc
sub
rol
and
cmpsl
es
mov
push
stos
xchg
mov
and
mov
int
in
cmp
mov
jp
in
pop
lock
lahf
loop
xchg
pop
aam
clc
fsubrl
repnz
sbb
add
stos
lcall
hlt
jnp
push
loope
fdivl
cmp
push
shr
add
xlat
sub
gs
stc
test
xor
mov
dec
add
loopne
andb
bound
ret
rcl
out
cmpsb
xchg
hlt
fbstp
cmp
daa
xor
or
jnp
sub
dec
loope
xlat
mov
mov
stos
fcomi
dec
rclb
mov
dec
sbb
and
xlat
hlt
jmp
gs
mov
sub
fsubrs
sub
outsb
mov
cmp
arpl
push
std
sbb
mov
sub
mov
imul
cli
sar
adc
pop
das
pop
inc
push
ficoms
stc
inc
mov
and
adc
xor
int
in
dec
sub
sbb
mov
inc
add
mov
pusha
pop
mov
mov
pop
imul
jecxz
add
shl
cwtl
shrl
jle
daa
insl
call
cs
and
cmp
test
or
pop
adc
lock
fnstcw
addb
adc
enter
sub
adc
adcl
ss
cltd
es
call
test
inc
jecxz
inc
cmpl
sub
int3
mov
jecxz
sbbb
rolb
aam
cmp
mov
sub
xlat
xchg
insl
repnz
paddb
bound
mov
or
push
out
stos
mov
addr16
and
mov
cwtl
mov
or
lds
cmpsl
jbe
jg
in
into
adc
xor
je
dec
xchg
aad
ret
out
jno
dec
adc
hlt
in
jae
sub
jl
mov
loopne
push
sbb
inc
test
dec
push
jbe
repz
jb
rorl
imul
adc
push
test
fs
xchg
lcall
aad
ljmp
ss
xchg
inc
cmp
fs
adc
aaa
push
pop
aad
daa
jmp
push
pusha
fcoml
dec
fcoms
jp
popf
out
scas
lea
pop
mov
add
out
sub
pushl
mov
out
in
mov
jnp
xchg
popa
inc
fcoml
lcall
xchg
fs
fwait
mov
mov
dec
enter
into
cmp
ss
pop
fldenv
cmp
mov
fwait
and
sub
fdivr
out
nop
inc
push
leave
cmp
sub
or
loope
loop
jp
lods
addb
jg
out
jg
push
test
pop
pop
into
pop
inc
cwtl
xchg
mov
fildl
dec
rorb
mov
xor
push
pop
cmp
notl
push
bound
or
std
add
and
xchg
and
mov
add
lock
outsl
popa
cmpl
cmp
or
dec
fwait
mov
fisubs
sbb
jns
mov
lret
dec
sub
testl
push
ljmp
xchg
jge
or
or
fs
les
sub
aaa
xor
je
cmpb
sti
mov
cmpsb
pusha
and
jo
mov
lret
sub
sti
out
int3
mov
int
add
mov
adc
iret
sbb
mov
xor
xor
push
cltd
addr16
jp
jno
iret
and
inc
int
rcrb
jae
mov
lret
push
push
scas
cmc
call
xor
enter
sbb
xchg
add
jo,pt
stc
mov
pusha
push
decl
push
push
loopne
adcb
push
jp
cmp
push
mov
ds
cld
ljmp
les
ficoms
negl
loopne
outsb
push
mov
xlat
lea
xchg
ret
xor
inc
jae
add
aad
cmp
sbb
addb
insb
xchg
and
sahf
adc
imul
in
xchg
jno
dec
pop
adc
popf
leave
gs
scas
cmpsl
cwtl
xchg
push
xchg
stos
mov
and
test
ficoml
lock
add
push
mov
mov
or
mov
fnstsw
aas
mov
jae
pop
sub
and
jmp
cmp
and
movsl
xchg
push
sbb
popf
hlt
pop
and
xchg
jg
cwtl
int3
mov
mov
fsubrs
mov
sbb
lods
call
and
lret
push
pop
mov
inc
aam
notl
xchg
mov
dec
loop
pushf
cmp
and
jl
inc
mov
xor
jg
dec
jo
dec
test
ja
jae
cwtl
jmp
mov
mov
inc
cmp
xchg
mov
flds
sbb
lret
clc
lods
in
add
mov
push
add
iret
dec
addr16
sahf
lock
sti
sbb
test
ja
xchg
xor
insl
mov
cmp
je
adc
mov
dec
sahf
mov
mov
dec
in
cli
daa
or
mov
lods
jae
xchg
dec
dec
mov
mov
add
sub
sub
inc
cmc
xchg
cmp
addr16
test
sub
jecxz
hlt
cld
fidivrl
das
xor
adc
rolb
push
pop
cwtl
jge,pn
mov
pop
jge
mov
push
test
and
repz
inc
adc
test
stos
lods
jbe
cltd
push
shrb
pop
aam
nop
ret
repnz
or
fsubrs
rorl
and
icebp
mov
inc
pusha
and
cmc
and
add
fwait
xor
and
mov
aad
pop
sarl
mov
mov
insb
rorb
pusha
mov
icebp
xchg
ret
jnp
aas
pop
sti
lcall
push
mov
lcall
and
pop
add
cmp
leave
xor
xorb
test
pop
inc
arpl
sbb
jns
imull
xor
repnz
lret
cmp
cmp
push
je
sub
lahf
xchg
jnp
cwtl
sub
outsl
shr
inc
imul
aaa
adc
xchg
pop
sahf
shl
mov
mov
mov
inc
mov
imulb
in
add
popf
lods
test
jecxz
xchg
std
je
and
iret
popf
aas
jp
mov
dec
mov
mov
adc
mov
push
inc
sbb
gs
mov
jle
xor
adc
stos
sbbb
xor
xor
sbb
pop
or
cmp
or
movsb
lds
push
xchg
cmp
out
sbb
xchg
xlat
jno
rolb
jbe
and
xor
add
jbe
dec
ret
jb
mov
push
aaa
push
clc
je
push
push
cmc
pop
iret
jae
xlat
inc
sbb
xchg
xor
fistl
mov
insl
lret
jne
mov
scas
loop
dec
pop
insl
sub
dec
add
jg
dec
int
loopne
pushf
pop
ljmp
movsl
push
sbb
mov
mov
sti
push
arpl
pop
out
push
out
mov
fsubrs
imul
jg
jg
out
xchg
xchg
loope
adc
jg
xor
xchg
cmc
test
mov
daa
fidivrl
mov
cmp
inc
jno
call
imul
dec
lock
imul
dec
jecxz
pop
add
push
xlat
ret
enter
pop
push
addl
outsl
jp
push
push
xor
mov
inc
adc
sub
fs
push
ds
sti
and
clc
jge
xor
inc
pop
mov
pop
rolb
clc
cmp
sti
rclb
scas
inc
cmp
loop
pminsw
sub
lret
sub
or
in
pop
pusha
and
mov
lods
push
fs
into
push
fsts
or
and
sub
push
in
and
fwait
push
test
lahf
adc
pushf
adc
jle
lods
pushf
jne
push
sti
jp
pop
add
adc
add
adc
lcall
push
lods
push
aad
pop
pop
inc
sub
or
mov
outsl
cmp
hlt
repnz
stos
push
rolb
and
sbbb
mov
push
enter
fldcw
adc
mov
pop
xor
jns
movsb
enter
or
xchg
and
roll
xchg
les
imul
pop
daa
mov
dec
inc
aaa
cmc
dec
add
and
pop
cmp
fcoml
rcrb
inc
fsubrp
and
and
shll
ficoms
pop
sarb
mov
mov
push
push
pop
cmp
mov
paddq
ja
push
jg
adc
xor
nop
out
in
pop
adc
outsb
cld
xor
add
pop
leave
push
fiaddl
lods
dec
push
jno
cmc
imul
pop
pop
pop
or
sub
adc
and
sbb
sbb
inc
fstps
mov
add
mov
xor
lea
addl
repz
push
cmc
fnstenv
xor
out
stos
mov
xchg
xchg
loopne
xor
mov
xchg
or
inc
sub
stos
adc
stos
inc
sbb
testl
inc
or
stc
mov
lods
adc
xlat
xchg
repz
ds
hlt
xchg
dec
jecxz
jbe
bound
aas
int
or
push
rorb
sub
mov
pop
or
imul
mov
jns
push
in
adc
mov
sbb
inc
or
daa
test
lret
cwtl
outsb
inc
push
daa
or
leave
inc
mov
push
dec
xchg
cmpsb
ds
push
aas
fsub
fistpll
lret
inc
mov
lods
sbb
imul
cmc
pop
pushf
stos
pop
scas
in
add
jmp
mov
cmpsl
stos
rolb
outsl
adc
mov
es
outsb
xor
push
mul
mov
fidivl
fwait
insl
mov
add
jmp
pop
aaa
loopne
cmpl
sub
jno
cmp
fisubl
sbb
stos
icebp
repnz
pop
popf
xchg
pop
or
lret
xchg
push
mov
sbb
int
stc
imul
pop
es
loope
jle
or
mov
das
enter
push
xchg
std
jne
add
nop
jne
aaa
outsl
das
adc
psubusb
and
pop
adc
rcrb
xchg
cmp
sbb
lods
int
outsb
adc
xor
bound
aad
in
js
cwtl
mov
mov
and
sub
mov
gs
adc
push
jae
or
aaa
rcrb
add
leave
call
push
xchg
push
faddl
testl
jmp
cmp
andb
loop
mov
sti
push
jo
aad
fsubs
test
mov
clc
mov
lock
mov
les
xor
jbe
in
pushf
xchg
inc
ss
sub
scas
and
push
sbb
xor
xlat
jl
repz
push
sub
pushf
mov
mov
int
lds
lods
sub
je
jge
pop
mov
mov
fs
add
js
adc
mov
cmp
push
shrb
push
dec
sub
jl
jo
ja
push
sbb
pop
xor
insl
or
xor
push
lret
sub
jecxz
dec
inc
pushf
inc
icebp
ret
adc
push
fstpl
test
xor
adc
sub
dec
mov
test
mulb
fsts
and
das
insb
fisubs
cmpsb
sub
jbe
lds
ljmp
mov
nop
or
mov
cmp
xchg
bound
cmp
pop
lahf
mov
add
or
inc
in
test
fiaddl
out
lds
jge
lods
dec
clc
mov
sbb
mov
movsl
xsavec
inc
inc
jl
mov
xor
es
orl
out
test
mov
jb
and
push
dec
pop
inc
mov
andl
cwtl
inc
cmpsl
xor
mov
inc
loop
mov
sbb
movsl
dec
xor
sub
cmpsl
orl
mov
fwait
lret
and
dec
xchg
xlat
std
fcmovne
ljmp
add
pop
push
lods
push
cmpsb
clc
lret
pop
mov
sar
cmpsl
nop
cs
fsubr
pop
cmp
cmp
mov
or
shll
pop
mov
test
inc
xchg
xor
aad
lret
inc
inc
in
out
jo
cmp
or
insl
jmp
pop
push
sbb
les
pop
jp
xchg
lds
mov
fwait
pop
ja
adc
movsb
xchg
sub
jbe
enter
nop
inc
in
iret
jae
jge
jae
pop
and
inc
pop
push
dec
stos
fwait
xchg
adcl
dec
sbb
jmp
outsb
negb
sbb
in
jae
stos
jge
mov
neg
push
pop
daa
adc
movsb
sbb
rcl
mov
xchg
jg
lcall
sub
mov
mov
dec
xlat
repz
fldt
arpl
mov
adc
lods
hlt
jno
add
jp
xor
gs
jle
outsl
and
test
loope
xor
and
pop
sub
add
bound
xor
push
pop
mov
jl
sbb
out
jl
dec
dec
in
push
fldl
aaa
mov
mov
mov
jp
mov
std
mov
subb
jnp
and
dec
sbb
gs
imul
mov
cwtl
push
jns
pop
js
sub
les
cmp
push
or
and
imul
jae
fimuls
adcb
rclb
mov
cmpsb
sbbl
jecxz
mov
push
xor
fsubrs
mov
lods
xor
cltd
xor
mov
sub
jl
sub
subb
xchg
sbb
jae
dec
adc
and
cmpsb
f2xm1
enter
fisttps
clc
cmp
dec
cmp
pop
or
fiadds
mov
flds
xchg
push
add
sbb
addr16
push
outsb
les
fucomip
in
pop
js
imul
imul
mov
out
sub
jns
lock
xchg
mov
je
add
or
out
jo
pop
cmpsb
repnz
jb
add
les
pop
repnz
loope
pusha
pop
mov
xchg
dec
loopne
stc
xchg
mov
lcall
add
subl
jg
mov
ret
and
out
or
cmp
hlt
test
adc
cmpb
push
mov
je
mov
clc
outsb
adc
mov
xchg
out
rorl
jns
xor
divb
inc
xchg
push
es
cmp
iret
jl
cwtl
pop
pop
xor
mov
out
mov
adc
jp
xor
add
aad
xor
subb
loopne
pusha
pop
adc
and
cmp
cmp
fstpl
ret
lret
mov
add
icebp
pop
xchg
pop
mov
and
adc
mov
sbb
clc
mov
dec
test
and
fnstsw
mov
push
sbb
shrb
int
mov
fcoms
rol
fisubl
cmp
pop
pop
loopne
jg
sbb
movsl
or
loopne
lret
jno
inc
fnsave
outsl
test
rorl
inc
add
sub
cmp
mull
je
dec
and
aad
lahf
mov
loopne
inc
cmp
lcall
mov
jg
mov
lcall
pop
inc
or
sti
mov
push
mov
adc
mov
push
jge
jbe,pt
enter
xchg
dec
test
aad
sbb
sub
addr16
mov
sti
pushf
mov
and
popa
push
sahf
inc
mov
js
pop
push
dec
rcr
inc
insl
or
daa
inc
test
sbb
adc
adc
jns
mov
repz
cwtl
jecxz
push
sbb
mov
push
nop
sbb
jmp
daa
xor
add
std
cmp
cmpsb
inc
mov
sub
mov
adc
lret
add
sbb
mov
pusha
mov
jns
scas
pmulhrw
cmp
inc
jne
fistpll
cmp
jecxz,pn
mov
inc
pop
sahf
in
cmp
test
xchg
mov
sub
cli
sti
loop
pop
push
shl
mov
cwtl
into
rcl
icebp
call
icebp
and
sbb
ret
mov
inc
das
daa
shrb
insl
loop
sub
ss
push
push
fbld
int
stos
leave
jmp
loopne
xchg
incb
or
xchg
adc
cmp
or
bound
jns
loopne
jp
std
mov
aad
data16
pop
imul
pop
out
test
cltd
pushf
push
lahf
xchg
push
mov
pop
or
cwtl
roll
sarb
jae
and
shrb
xlat
cmpb
pushf
mov
jmp
daa
or
adc
inc
fistps
mov
pxor
in
shll
aam
xchg
lret
jl
or
popf
mov
xor
fwait
xchg
out
insl
push
xchg
lock
or
xchg
negb
pop
sub
xor
icebp
outsl
cmp
xchg
call
or
es
cli
mov
in
and
jg
bound
nop
cli
dec
aas
pop
dec
subl
jno
decb
stos
lret
xchg
pushf
cmp
add
push
orl
jmp
cmp
ljmp
stc
sbb
mov
fwait
repnz
dec
sar
mov
dec
push
rcl
gs
or
arpl
nopl
dec
adc
sub
lahf
or
js
ds
and
push
clc
and
cwtl
jp
movsb
cmp
mov
cmp
jecxz
xchg
or
add
mov
in
add
jb
lcall
or
frstor
cmc
jno
and
fcomps
sub
xor
outsl
aaa
adc
jo
outsl
cs
frstor
xchg
sbb
cld
adc
std
lret
mov
into
aam
mov
das
lea
dec
lret
lret
sub
dec
adc
out
jl
mov
mov
imul
cmp
push
movsl
xchg
cwtl
scas
je
rcrl
cmp
fadd
stos
sbb
aas
push
sub
pop
and
inc
or
fs
push
mov
inc
push
int3
dec
js
cmp
pop
cmovno
adc
push
jnp
mov
insb
addr16
in
cmp
out
scas
or
or
imul
xchg
jge
std
in
cmp
scas
push
icebp
sahf
adc
test
and
pop
inc
mov
cmp
testl
jp
mov
fbld
mov
xor
mov
mov
adc
fidivrl
xor
shl
xchg
mov
leave
rcll
dec
push
push
fcmovbe
adc
xor
arpl
mov
nop
cmp
in
int
sub
xchg
lret
out
stc
imul
pop
mov
ret
jb
inc
and
aaa
cmp
testb
outsl
dec
jo
faddl
pop
inc
outsb
inc
or
outsl
inc
into
mov
in
call
push
out
push
inc
mov
sub
les
test
daa
push
imul
cs
out
mov
lcall
data16
push
pusha
mov
and
push
outsb
repz
mov
mov
jmp
mov
mov
aaa
mov
and
inc
ret
rcr
cli
movsb
dec
ret
push
lock
jne
lock
lods
int
lds
arpl
test
and
test
jae
add
jnp
lea
or
jg
add
push
paddsb
push
in
push
jae
testl
add
out
or
adc
xchg
push
jnp
and
add
and
inc
pop
rorb
outsb
pop
dec
mov
icebp
sti
imul
xchg
mov
push
out
enter
negl
arpl
jp
inc
call
jno
loopne
sbb
mov
xchg
mov
mov
jne
ljmp
adc
mov
mov
mov
cs
xchg
mov
pop
out
cmp
roll
mov
push
xchg
adc
sbb
mov
stc
shll
cmp
fstl
adc
ljmp
stc
adc
push
mov
mov
dec
xor
outsl
jb
sub
push
fsubrs
sub
mov
lods
popf
sbb
jno
lods
rcrl
daa
jbe
jne
push
fcompl
dec
mov
push
add
and
ljmp
pop
mov
push
pusha
xchg
add
sub
cmova
das
out
push
mov
jne
notb
push
imul
shlb
inc
test
and
xchg
adc
pop
adc
sbb
inc
sub
imul
ss
lret
push
inc
mov
rcrb
mov
and
loope
sub
cmpsb
jae
mov
lods
arpl
stc
sbb
and
xor
repnz
sub
sub
scas
sti
sub
mov
xlat
lret
inc
xchg
dec
mov
subb
lods
add
fidivs
test
rol
lahf
mov
fdivs
xchg
stos
shlb
jns
mov
jno
icebp
bound
out
mov
nop
ss
out
cmpsl
cmpsb
enter
sbb
mov
xchg
sbb
mov
pop
stc
mov
cmp
xchg
push
pop
mov
pop
xchg
cmpsl
sbb
rsqrtps
push
inc
inc
xor
or
lea
jl
out
adc
sbb
add
roll
ficomps
fs
cmp
dec
das
sahf
pop
push
aas
mov
lret
mov
mov
in
mov
mull
lea
call
dec
push
mov
dec
nop
cmp
mov
fdivrl
mov
pop
scas
cmp
mov
jge
push
in
clc
sbb
push
outsb
idivb
jl
outsl
nop
pop
stos
out
aad
xchg
adc
fcomps
cmpsb
pop
xchg
inc
mov
adc
pop
push
or
xor
inc
push
jo
xlat
cmp
pop
sbb
adc
push
fnsave
rcrb
mov
push
xlat
clc
xchg
jmp
fmull
sub
mov
stc
insb
addps
cs
fnstenv
dec
in
push
out
pushf
movsb
out
das
movsl
es
push
outsl
mov
xor
js
pop
mov
add
mov
gs
push
or
shlb
mov
push
sub
jmp
mov
sub
inc
popa
or
add
aaa
xor
cmp
ficomps
popf
std
fadds
das
pop
dec
addr16
mov
bound
mov
ficoms
sbb
push
sub
sub
pop
in
icebp
mov
enter
inc
sub
pop
sbb
adc
mov
mov
jns
pushf
cmp
leave
test
sbb
cmp
cmpsl
in
clc
xchg
sar
inc
sarb
mov
popf
out
scas
stos
and
dec
repnz
shrl
call
cwtl
lahf
push
jle
cmp
mov
xorl
aam
sub
test
mov
mov
bound
sub
push
cmp
adc
push
std
ret
fmuls
in
xor
jne
jo
jecxz
sbb
loope
xchg
sub
and
scas
pop
mov
insl
sub
popa
fdivs
adc
mov
jo
cmp
out
jg
cmpsb
and
and
mov
push
jmp
cmpl
out
sub
ljmp
popf
push
into
int
mulb
inc
addr16
mov
add
inc
jg
fildl
mov
imull
ja
bound
xor
xchg
mov
adc
mov
testb
push
clc
jns
cs
rorl
jg
loope
pop
mov
add
popa
popa
xor
pop
add
xorb
popa
lds
sbb
ret
fstpl
xor
shlb
mov
or
rcr
shll
test
cs
xchg
ljmp
scas
mov
inc
mov
mov
gs
int
dec
scas
in
shll
aaa
sbb
ss
mov
xchg
sub
shlb
in
adc
add
push
cmpsb
sub
and
loop
rcrl
in
mov
mov
jle
or
shlb
shrl
loopne
push
daa
add
movsl
incl
movl
mov
mov
sahf
arpl
push
scas
xor
insb
mov
pusha
fdivrs
scas
and
bound
mov
and
bswap
mov
cmc
pop
aaa
xorl
dec
adc
enter
jg
xchg
or
lods
sbb
cmp
stc
sahf
or
add
or
pop
lcall
inc
pop
jns
inc
fsub
or
mov
push
and
jmp
jecxz
std
aad
aad
loope
jne
daa
ljmp
into
je
lcall
dec
pop
out
xlat
rcl
jb
pop
icebp
stos
out
fsubrs
mov
ja
mov
in
push
jp
daa
repz
std
fdivrl
sbb
dec
mov
pusha
xor
xor
in
and
sbb
nop
std
add
shlb
and
xchg
jae
stos
inc
repz
imul
jle
xor
loop
movsb
dec
leave
inc
bound
movsb
or
mov
insb
cmpsb
fsincos
in
xchg
cwtl
cmp
out
int
push
sub
or
sti
adc
imull
sahf
clc
sbb
or
cmpsb
adc
daa
repz
test
dec
pop
cltd
mov
jb
adc
adc
shrl
mov
or
testl
fnstsw
mov
inc
dec
sub
sbb
ja
jle
fyl2xp1
pushf
jmp
int
in
jnp
sub
jno
or
or
stos
cmc
ds
aam
cltd
test
mov
mov
sbb
mov
daa
repnz
pop
lret
jle
mov
add
hlt
sub
xor
fdivs
ds
sbb
mov
inc
outsl
mov
insl
ljmp
ljmp
cmp
adc
lret
jae
ss
mov
adc
mov
pop
aas
and
out
test
and
push
cmp
jmp
sub
pop
mov
push
sbb
and
fisubrl
pusha
inc
sbbb
push
sarb
mov
idiv
inc
ja
cmp
cltd
xchg
pop
outsb
int
fwait
ret
push
inc
inc
sbb
push
pop
pushf
dec
xchg
dec
xlat
mov
push
mov
jge
mov
mov
js
and
and
and
cmp
ds
mov
mov
test
pop
dec
or
ret
cmp
cwtl
gs
pop
movsb
mov
testl
jmp
add
pop
fnstenv
cmc
dec
mull
in
dec
vpcmpgtw
jecxz
mov
addr16
or
xorb
sti
scas
repz
repz
aad
mov
adc
fldl
xlat
fsubl
pusha
dec
lods
xor
push
adcb
adc
aas
add
or
repz
sub
enter
lret
pop
add
mov
dec
cmp
mov
in
shrl
bound
mov
mov
mov
out
push
outsb
cli
mov
cmp
mov
cmp
pusha
arpl
mov
cwtl
jp
into
cmp
sbb
push
mov
ljmp
test
and
sbb
lret
call
insb
idivl
cli
loop
pop
aam
mov
lods
rcrl
pop
adc
test
xchg
imull
xchg
add
xor
xchg
in
and
outsl
les
pop
rcrb
shr
int
cmp
aam
lock
stos
cmp
jae
pop
mov
aam
mov
stos
fwait
push
xor
cmp
enter
lret
mov
test
jmp
cwtl
enter
lds
loope
and
cmp
enter
xchg
test
inc
add
insb
movsb
sbb
in
adc
cmp
popa
push
cmp
cltd
inc
faddp
stc
push
mov
loop
inc
dec
out
test
push
xchg
inc
int3
sbb
mov
jmp
jmp
mov
testb
ja
iret
data16
scas
aaa
rclb
pop
in
jp
add
add
mov
adc
and
xchg
mov
mov
mov
pavgb
push
movsl
mov
inc
imull
jl
lods
cmc
fcompl
and
fucomp
out
xor
and
lds
mov
sahf
push
lret
adc
cwtl
imul
adc
mov
cmp
dec
push
jae
pop
sbb
inc
sarl
std
aad
mov
shrl
test
inc
into
mov
pop
and
add
lea
addl
adc
cli
mov
add
sbb
mov
jmp
and
pop
push
jle
lock
sti
loop
mov
adc
addb
fwait
add
aaa
clc
push
or
xchg
pop
mov
dec
and
dec
or
push
adc
movsb
xlat
cmp
test
iret
cli
int
pop
jecxz
and
and
sarl
cmp
push
xchg
mov
ds
movsl
add
xor
call
loopne
cmpsl
mov
jnp
sti
scas
jmp
fwait
xlat
out
push
pop
cmc
push
xchg
xor
call
mov
stos
cld
sub
adc
sbb
imull
mov
jecxz
sbb
movsb
pusha
xor
faddl
and
ret
fisttpll
add
rclb
stos
fsubl
push
bound
rolb
xchg
mov
fistpll
jmp
cwtl
sub
movb
adc
xchg
aam
leave
jge
in
rcrl
shrb
xor
clc
or
xorl
test
jge
mov
lods
jg,pn
je
leave
test
bound
sub
loope
cmp
fsubrs
rclb
lret
sub
mov
in
into
cmpsl
ljmp
xchg
test
mov
adc
xchg
lods
xor
inc
adc
rclb
mov
fdivr
xchg
movl
sub
mov
mov
cmc
inc
dec
pop
or
andb
mov
xor
out
sahf
pushf
xchg
daa
mov
into
or
push
leave
pop
in
rclb
jmp
pop
fdivrs
push
add
jl
push
in
xchg
mov
mov
inc
xor
mov
or
dec
testl
xor
mov
pop
xorb
in
fcmovnb
mov
sbbb
add
push
jge
nop
mov
pop
in
pushw
cmp
lcall
popa
ret
out
push
xor
icebp
dec
out
data16
dec
xlat
rcrl
pusha
bound
les
loope
sub
xor
and
aad
and
or
movsl
aad
push
dec
in
cmp
scas
js
ret
xchg
in
push
movsb
sahf
inc
daa
fnstenv
arpl
test
adc
dec
hlt
insb
cwtl
cmp
sbb
and
dec
lret
push
fildll
loop
mov
cmp
xor
gs
dec
cmp
aas
popf
out
and
jno
mov
sbb
or
lcall
xor
jecxz
dec
or
xchg
dec
jbe
pusha
jns
or
cmp
dec
add
popa
mov
mov
mov
pop
jnp
out
cmc
or
jae
sti
loop
mov
jmp
mov
and
cld
fmul
lret
idivb
push
lahf
jne
mov
sub
mov
or
dec
or
lahf
test
sub
stos
and
shlb
sub
repnz
add
imul
ror
imul
jnp
cltd
xor
movsl
stos
adc
loopne
xchg
pop
mov
jmp
jmp
jb
inc
sbb
adc
mov
bound
sbb
std
call
into
inc
aas
dec
inc
arpl
and
fists
xor
aad
sahf
lea
jne
add
hlt
push
jno
xchg
cmc
fdivs
lods
mov
pop
mov
mov
dec
jl
in
insb
adc
add
mov
js
lcall
cmp
add
inc
adcl
lcall
push
adc
inc
cmp
je
mov
add
test
aad
mov
mov
inc
xchg
aad
or
stc
and
jb
inc
gs
and
outsb
in
movsb
lds
aaa
call
addr16
cmp
jge
add
mov
loop
mov
xor
out
test
adc
inc
pusha
or
out
imull
lret
lea
sahf
rcl
mov
or
xlat
cmc
pop
pop
xor
xchg
push
rcrb
jbe
popa
push
fwait
mov
cmp
add
add
scas
int
sub
xchg
imul
cltd
pop
mov
dec
mov
hlt
js
jo
loope
jo
pusha
cmp
loopne
add
cmp
and
aaa
ret
cmp
mov
sti
cld
sbbl
shrl
or
sub
dec
icebp
gs
jl
adc
cmp
dec
pop
sbb
iret
lcall
nop
shll
pop
xchg
dec
mov
fidivrl
cmp
xchg
lret
and
ja
and
pushf
sub
lcall
inc
jb
insb
push
and
xor
xor
loop
xchg
xchg
mov
addr16
scas
call
out
jae
inc
push
push
insl
popa
imul
loopne
repz
sbb
repnz
xchg
jne
mov
hlt
jnp
push
ret
add
jbe
hlt
push
add
pop
sub
inc
mov
mov
jl
mov
cmp
test
mov
mov
xchg
xchg
or
pop
hlt
xor
aam
push
in
inc
pop
hlt
jge
xor
cmp
lahf
in
xor
mov
mov
push
jo
daa
pop
xor
push
subl
mov
out
xchg
add
inc
inc
jge
out
xor
leave
inc
mov
ficoms
andl
fs
xor
jne
gs
add
inc
sti
orb
cmp
jo
jmp
int
leave
lds
jnp
movsl
rorl
jbe
mov
stos
xchg
lods
xchg
and
or
test
cmp
cs
mov
jg
jno
push
jae
clc
xor
pop
cmpsb
pop
push
int
sbb
mov
and
hlt
jne
in
data16
fdivl
in
fwait
inc
rolb
mov
jecxz
adc
inc
dec
dec
inc
shll
xchg
push
scas
fidivrl
add
sbb
addr16
and
test
mov
adc
icebp
das
mov
aas
jge
out
xor
xor
xchg
repnz
inc
mov
pop
sbb
fcomps
jle
scas
xor
xlat
add
adcb
mov
ficomps
cmp
fdivr
mov
sub
push
lods
lea
hlt
cwtl
and
mov
int
jns
push
je
je
jne
fsubl
adc
out
push
xchg
mov
inc
xor
pop
lock
xor
enter
stos
inc
lea
addr16
into
jnp
cmp
lods
aaa
insb
fisttps
pop
adc
jnp
push
ret
mov
nop
sarl
mov
cmp
gs
insl
dec
add
adc
or
jns
int3
sahf
inc
fcoml
lret
scas
popa
repz
sub
inc
cwtl
mov
push
push
fs
shl
popf
adc
or
cld
int
adc
push
sbb
sahf
xorl
sbb
gs
mov
lahf
add
sub
add
cmp
lahf
pusha
jnp
test
jae
aas
add
push
inc
mov
jne
xchg
xchg
hlt
xchg
xchg
jge
daa
hlt
notl
push
stos
pop
mov
add
cmp
push
pushf
dec
xchg
clc
sbb
lock
iret
cmpsl
outsb
lock
das
sub
pop
cmpsb
push
push
lods
lcall
lods
popa
daa
add
fiaddl
mov
add
jp
je
xchg
dec
cmp
inc
xchg
inc
in
orl
popf
xchg
pushf
mov
adc
lock
ljmp
xor
xchg
fmuls
xchg
sbb
std
in
popa
cld
call
aam
repnz
mov
dec
add
aad
shll
inc
cmp
fldcw
leave
in
mov
pop
fisubl
jo
cmp
loop
cmp
push
sub
push
xchg
movsb
dec
cmc
pusha
xor
inc
mov
adc
lcall
cmc
outsl
int3
pop
imul
inc
inc
data16
xor
loopne,pn
dec
loope
cmpsl
pop
psubsw
sbb
sahf
xor
push
outsb
js
lahf
xor
xor
add
sub
fwait
sbb
add
or
lahf
loope
mov
inc
fnstenv
and
pop
mov
or
je
pop
sub
je
je
stos
mov
pop
push
repnz
movsb
and
stc
push
xor
pop
fstpl
and
dec
sbb
flds
stos
into
repz
orb
lret
sbb
lods
loop
sbb
outsl
mov
clc
jae
cmp
insb
inc
mov
xor
clc
and
sbb
hlt
push
das
jns
out
push
dec
test
popl
jle
push
lea
addr16
popf
mov
idivb
ret
mov
sub
cmp
in
mov
fwait
sahf
lods
push
orl
bnd
shlb
mov
sti
aad
push
imul
and
call
cmp
xor
mov
mov
xor
mov
fbstp
dec
pop
pop
mov
in
pusha
jns
insl
rclb
mov
hlt
add
addl
and
insb
adc
pusha
xchg
sub
loope
jne
das
lcall
dec
jns
jmp
add
jae
mov
daa
scas
sub
sbb
aam
and
loop
leave
aas
or
xchg
call
and
mov
in
pop
inc
adc
imul
lods
iret
sahf
inc
sti
push
das
mov
daa
icebp
add
lods
enter
adc
lret
ja
xchg
pop
pop
sbb
mov
sbb
imulb
popa
iret
dec
ljmp
mov
imul
jns
add
pop
add
int3
pusha
inc
or
cmpsb
hlt
add
inc
adc
vmaskmovdqu
loope
outsb
test
jmp
mov
jne
pop
sbb
stos
dec
jecxz
iret
aad
xor
pop
scas
xor
lock
mov
pop
sbb
inc
movb
mul
jle
fdivrs
sbb
add
sbb
sub
xchg
jecxz
scas
or
pop
out
imulb
je
sub
ret
jno
call
lods
hlt
dec
mov
dec
inc
das
mov
mov
fs
repz
adc
or
inc
movb
lods
data16
pop
sbb
mov
mov
sub
loopne
xlat
cmp
pop
add
inc
gs
out
insl
or
imul
pop
mov
scas
mov
xor
and
push
cmovs
test
stos
xor
cmp
pop
xor
scas
dec
or
xchg
xor
outsb
xor
loope
mov
pop
ds
in
mov
clc
test
mov
mov
in
loopne
scas
adc
ret
jle
rcll
in
lock
in
jg
push
cmp
and
enter
push
ds
jns
inc
rcrb
push
mov
movsl
or
scas
lods
adc
jb
jae
ja
xchg
mov
and
sbb
sbbb
ds
sbb
inc
sbb
jg
xor
mov
loopne
xor
das
sbb
push
xchg
ret
jle
jle
fcom
push
mov
int3
and
inc
cmpsl
mov
push
js
scas
mov
movsl
out
push
adc
push
mov
sti
cmc
aam
pusha
fldt
xchg
lahf
or
push
cmp
xor
xchg
cmp
sub
fcomps
jp
push
rorl
push
insb
xchg
fsubp
andl
mov
addr16
out
cmp
fs
add
popa
test
aas
push
ja
sbb
jp
jne
add
mov
or
pop
ret
outsl
or
ret
ss
xchg
mov
adc
jl
jecxz
das
adc
pop
rcll
sarb
adc
imul
or
cli
cs
bound
jle
sbb
inc
dec
arpl
out
test
pop
jmp
sub
aaa
push
pop
dec
cld
add
or
cmp
dec
scas
aas
dec
xchg
xchg
inc
push
test
jbe
jle
outsb
test
shll
lcall
outsb
pop
or
imulb
stos
jns
les
loope
scas
mov
inc
sub
testb
and
sahf
lea
xchg
ret
cmp
fwait
in
bound
jns
das
ds
mov
jp
sarl
cmp
pop
sbb
sub
sbb
das
push
pop
push
dec
cmpl
xchg
mov
dec
loop
xor
sbb
xchg
cmp
ret
sub
adc
inc
cmpsl
xchg
pop
sub
insl
and
adc
lock
inc
icebp
mov
fistl
push
sbb
dec
lods
inc
inc
std
sub
push
rcrl
ds
scas
insl
mov
xorl
aas
cmp
bound
jno
ret
les
or
dec
into
dec
cmp
cmp
movsl
int
imul
add
dec
xchg
mov
lcall
push
in
fdiv
sbb
movsb
and
data16
shl
and
out
data16
push
jmp
lods
sti
nop
jge
ds
dec
add
insl
mov
cwtl
cmp
mov
or
inc
mov
test
cmp
push
test
xor
mov
cmpsl
push
mov
test
cmc
cmp
jmp
ss
pop
icebp
sbb
fdivs
iret
jecxz
pop
in
fninit
in
mov
sbb
int
mov
pop
pop
push
aad
mov
and
insb
cld
std
adc
scas
or
aas
mov
push
cltd
lods
shlb
cmp
sbb
stos
out
das
adc
cmp
daa
inc
fmull
jae
pushl
or
xrelease
xor
mov
mov
std
in
dec
sub
fimull
clc
outsl
xchg
add
in
jo
inc
jno
cmpsb
or
stos
xchg
xor
jecxz
add
jb
in
aaa
xchg
out
pop
dec
rcl
in
sarl
test
push
sbb
nop
mov
lods
outsl
jae
cmp
cli
add
push
sub
sub
sahf
lds
cmpsb
sub
mov
movsb
dec
push
dec
mov
adc
pop
mov
pop
xor
insb
push
push
cmp
sub
aaa
mov
ljmp
cmpsl
dec
push
int
sub
iret
xchg
loopne
push
cwtl
lock
mov
insl
and
add
sbb
addr16
lock
jbe
lret
push
jno
clc
into
xchg
mov
dec
jge
cmp
dec
pop
rolb
arpl
icebp
ja
and
and
jnp
dec
xor
sahf
movsl
adc
or
mov
cs
test
and
call
push
pop
inc
mov
cmp
xchg
push
xor
addr16
testl
and
mov
or
xor
or
addl
mov
loopne
jl
lahf
adc
xchg
jne
sub
pop
inc
fldl
sub
scas
cmp
xchg
fs
xorl
inc
ss
test
test
inc
pop
pop
jae
dec
jp
daa
push
add
mov
into
xor
in
stc
add
cmc
mov
popa
jle
mov
mov
fwait
or
push
mov
clc
xor
xor
sti
jp
and
pop
cmp
or
sub
jb
inc
push
sbb
mov
lods
or
rorb
es
jnp
out
xchg
cmp
push
xor
sahf
and
mov
inc
repnz
jge
or
fs
jns
daa
jecxz
int3
push
or
xlat
cmp
jbe
push
scas
clc
adcb
jnp
xchg
popa
jbe
cmpsb
add
push
loopne
inc
dec
push
daa
push
insb
outsl
out
push
mov
sbb
mov
and
mov
mov
clc
jecxz
add
sti
dec
push
subl
cmp
loopne
jb
aad
mov
mov
add
sbb
xchg
imul
sbb
sub
mov
in
add
ret
add
cmpsl
mov
xchg
xchg
divl
data16
mov
insb
pop
mov
lahf
into
aad
orl
xchg
data16
sub
fs
sbb
sub
mov
sbb
push
and
pop
sarl
movsl
push
mov
in
mov
mov
stos
stos
dec
push
pop
int3
pop
inc
fnsave
jns
cld
sarb
push
jg
loope
mov
dec
dec
sub
xchg
in
outsl
or
icebp
mov
mov
pop
out
xchg
pop
pop
aad
dec
insb
jmp
clc
mov
inc
lahf
bound
or
push
test
cmc
jo
jne
out
push
xchg
movsb
hlt
aad
pop
fisubs
sbb
out
mov
sub
pop
and
adc
inc
xchg
xchg
sub
fldl
decl
test
xchg
pop
jmp
add
dec
hlt
arpl
jl
ficompl
lahf
pop
sbb
cmpl
negb
outsb
mov
adc
sbb
mov
mov
loope
push
inc
aad
movsb
stos
adc
or
ds
push
push
rcrb
addl
inc
inc
add
imul
and
mov
mov
bound
popf
and
sbb
out
adc
insb
push
jae
fsubs
jp
xor
incb
les
push
daa
lds
pop
into
cmp
out
je
adc
and
inc
fs
repz
addr16
sahf
aam
pop
mov
xor
xchg
and
pop
outsl
xchg
lret
mov
mov
lahf
mov
sub
std
mov
push
stc
addl
ret
xorl
inc
ret
fwait
shlb
cmp
inc
cwtl
xor
or
lods
xor
push
icebp
dec
repnz
lods
js
pop
cmp
sub
dec
outsl
sbb
arpl
push
xchg
in
jbe
incl
add
xchg
dec
insl
xchg
add
jp
pusha
push
jae
jmp
inc
popa
inc
push
ret
loop
sbb
xchg
jle
pop
inc
and
cmpsl
out
das
mov
fildl
les
inc
hlt
pop
xor
mov
rcll
jns
jns
outsl
popa
pop
mov
movsb
idivl
stos
push
cmpsl
mov
and
js
movsb
mov
xchg
xchg
mov
in
jge
fists
ror
push
jne
stos
sti
xchg
adc
out
mov
sbb
int
gs
push
divl
push
mov
adc
cld
mov
xchg
lock
cmpsb
imul
nop
fidivrl
lds
xchg
mov
dec
mov
ffree
pop
dec
jecxz
and
std
jl
xchg
mov
ret
je
cmpl
adc
sar
int
inc
mov
mov
jo
and
mov
movsl
or
dec
inc
loopne
insl
pop
cld
sbb
lea
adc
mov
dec
add
stos
rorb
lret
fdivrs
sbb
or
andb
pop
mov
outsl
add
mov
rcrb
les
dec
jnp
inc
test
paddsb
dec
in
mov
les
popf
jnp
or
outsl
imul
cmp
jne
xchg
sbb
xchg
xchg
out
cmpsl
int
jnp,pn
ljmp
mov
cmp
adc
fwait
lods
icebp
sbb
mov
sbb
pop
subl
enter
sub
xor
cld
sbb
and
je
lret
fistpll
outsb
fidivrl
mov
xor
por
add
or
insl
rolb
dec
sti
int
daa
pop
mov
les
lds
jg
mov
pop
in
ljmp
insb
xchg
daa
sub
repnz
xor
sub
cmc
mov
test
in
pop
out
fdivl
dec
hlt
push
lods
enterw
arpl
idivl
and
push
mov
pop
leave
es
mov
jns
inc
jmp
aaa
lret
leave
xor
and
sub
insl
popa
cwtl
iret
in
sub
andb
int
pop
xchg
push
xor
repnz
push
mov
xchg
loopne
jae
mov
add
mov
or
inc
jle
arpl
pusha
dec
mov
mov
push
pop
xor
pop
aam
out
cmpsb
loop
ss
mov
in
and
dec
imul
mov
lret
repnz
ss
data16
mov
loope
cld
cmp
gs
dec
arpl
adc
cwtl
xchg
sahf
pop
or
jle
pop
cmc
jmp
lods
xchg
int
dec
push
movsb
ja
es
dec
mov
mov
stos
push
movsl
adc
pop
adc
test
xchg
and
cmc
xchg
xchg
cmp
nop
test
repnz
fdivrp
xor
scas
xor
lods
or
pop
mov
sub
sbb
insb
cmpsb
sub
push
pop
cld
fs
ds
fnstenv
mov
and
mov
shl
or
sub
mov
mov
lods
adc
fiaddl
inc
fidivrs
das
push
and
out
orb
pop
js
scas
push
loop
pop
add
mov
adc
jecxz
cwtl
in
push
add
pop
add
fwait
enter
xchg
push
sbb
fisubrs
or
push
hlt
and
into
outsb
add
aad
dec
aam
sub
cmp
jb
roll
jnp
mov
ds
test
data16
fisttps
and
dec
push
mov
or
mov
mov
or
jge
mov
loop
andb
hlt
pop
iret
js
sti
cld
out
imul
nop
lcall
mov
mov
cmc
popf
sub
sti
xchg
xchg
push
bnd
jno
fwait
push
stos
aaa
enter
add
cmp
enter
xor
pop
fwait
int3
xchg
mov
and
jp
cmp
rorl
insb
mov
jp
imul
jl
xlat
or
mov
pushf
mulb
icebp
int
jo
jecxz
cmp
push
pop
out
mov
fcmovb
rcll
lods
pop
sti
xorl
jle
and
or
mov
mov
add
push
cli
cmp
xchg
sbb
mov
ja
ret
lock
call
cmpsl
and
pop
pusha
data16
add
sub
and
mov
dec
dec
push
lds
push
or
test
cmp
add
iret
sub
pop
test
cli
jne
add
test
xlat
and
sub
push
fs
mov
fucomp
mov
and
outsl
lods
pusha
dec
test
aaa
loopne
cltd
lcall
mov
sub
adc
and
cmpsl
or
repnz
lock
jecxz
xchg
jmp
outsl
push
mov
xlat
imul
cli
clc
add
mov
or
and
mov
stos
dec
stc
icebp
pop
int
cltd
and
inc
cs
inc
stos
pushf
mov
push
jo
lret
popf
adcb
lcall
lods
test
cltd
add
push
scas
mov
inc
xor
mov
ret
lret
or
xor
push
dec
xor
fldenv
xchg
xchg
inc
cwtl
rclb
lods
insb
mov
adc
jle
cmpsb
rclb
das
in
sbb
inc
mov
pop
mov
shlb
cmp
ficoms
aad
fiadds
fnstcw
cld
push
jmp
pushf
rcr
sbb
test
scas
enter
cmp
push
lcall
adc
mov
jae
cltd
push
mov
and
jbe
push
xor
jle
aad
jnp
mov
mov
push
adcl
sub
pop
mov
mov
icebp
xchg
loope
push
loope
add
sti
inc
xor
pop
dec
xor
ret
or
mov
arpl
lods
sbb
fbstp
add
mov
jl
sbb
mov
mov
ror
mov
stos
test
cmp
in
cli
jl
mov
shlb
cmp
out
lahf
fcoml
xchg
lcall
sbb
sbb
imul
push
repz
cmp
es
adc
cmpb
mov
adc
mov
test
aas
icebp
dec
arpl
mov
pop
xchg
je
inc
push
rcrl
jecxz
loope
mov
xor
popf
ret
pop
jl
sub
leave
out
clc
mov
les
fisubs
jecxz
clc
push
das
jo
hlt
imul
fstl
or
add
xor
test
mov
push
popf
xchg
iret
popf
xchg
aaa
subl
or
pop
sbbl
pushf
out
cmp
stc
adc
xor
or
add
xchg
js
sbb
sub
jle
mov
mov
jg
jmp
dec
repnz
xor
sbb
cmp
mov
mov
inc
xchg
test
ljmp
dec
aad
xor
push
cmp
rcrb
pop
push
outsl
jge
mov
popa
push
rcll
xchg
cmpsb
in
dec
clc
and
xor
or
xor
jge
xlat
mov
mov
xor
dec
js
xor
into
int
or
hlt
jl
cmc
push
or
test
xchg
pop
pusha
mov
fcomps
pop
fidivrs
cmp
addr16
imul
xchg
pop
aad
dec
xor
cmc
adc
fisttpll
lret
push
mov
and
int3
mov
shr
in
xor
cmp
or
pop
aas
fimull
xor
jae
lea
out
jb
pop
and
xchg
out
cmp
ret
lea
imul
and
push
in
lods
xchg
out
sbb
jne
aas
or
or
inc
pop
dec
lret
dec
mov
add
aad
dec
cmpsb
push
les
hlt
dec
bound
fs
jl
inc
adc
cmp
and
out
mov
lods
cmpsl
shrl
cmp
sub
pop
mov
mov
mov
xor
xor
inc
andb
adc
filds
jge
cmp
mov
xchg
mov
es
adc
repz
movsb
xor
icebp
int3
sbb
bound
xchg
lods
movsl
mov
pop
or
dec
adc
dec
test
lahf
cs
add
xchg
jne
cmp
xchg
fldcw
sbb
ret
dec
inc
mov
push
mov
dec
jo
dec
mov
sub
notb
ffree
push
shlb
adc
stos
sti
popa
scas
and
wrmsr
cmpsl
and
or
mov
stos
or
mov
pop
jb
orl
inc
int
mov
sbb
aas
stos
repz
pop
push
push
jae
pop
push
mov
loopne
ss
outsl
jo
dec
fxch
mov
dec
lahf
push
or
push
and
imul
notb
dec
call
push
clc
iret
jns
imul
aad
es
or
cmpb
lret
or
fs
test
dec
stos
shlb
cmp
aas
jb
sahf
je
in
sub
and
xchg
fisubl
push
rolb
mov
mov
jp
adc
ja
je
mov
pop
mov
rcrl
ss
add
mov
sahf
mov
scas
stos
push
xchg
sub
movsb
arpl
in
push
or
or
popa
add
dec
lock
test
fdivl
pop
jmp
fistps
inc
mov
insb
push
pop
hlt
xchg
push
sbb
fsubrp
add
movsl
inc
andb
popa
ljmp
shll
xchg
jae
in
shl
in
or
adc
mov
push
add
adc
lock
sbbb
popa
or
mov
out
cltd
cmp
stc
data16
push
ret
test
sub
bound
jle
cmp
jp
adc
mov
inc
fcmovnu
mov
push
mov
out
inc
pop
mov
or
inc
dec
and
push
jg
dec
pop
dec
jnp
mov
sarb
xchg
std
addr16
scas
mov
pop
or
jmp
shrb
lods
ret
jmp
cmp
in
fwait
push
arpl
cli
xor
in
adcl
imul
xchg
mov
sub
mov
rorb
test
loope
mov
cmp
jne
xorb
hlt
es
push
or
mov
xor
insb
push
jp
in
dec
push
add
jmp
imul
dec
fildl
xchg
sub
jne
xor
fldenv
pushf
scas
shll
das
rcr
cmp
xor
inc
enter
fisubs
inc
iret
sti
aam
dec
std
dec
sub
xchg
xorl
dec
cmp
je
ljmp
aaa
jmp
movsb
lcall
lods
jg
fldl
imul
cli
aad
aad
jle
mov
adc
movsl
repnz
sarb
jns
xchg
push
out
faddl
cmc
sub
pop
mov
xor
mov
inc
mov
pop
jo
push
aad
adc
jno
xchg
dec
xchg
cs
mov
mov
mov
icebp
inc
notl
push
dec
fcoml
test
add
lret
dec
dec
ror
mov
lock
pop
cld
mov
out
push
into
addb
call
sub
mov
mov
stc
push
shl
pop
sti
mov
and
enter
lds
jmp
or
idivl
sarb
stc
dec
cmp
das
test
mov
mov
call
test
je
call
repnz
sub
loop
push
imul
xor
add
mov
push
mov
pop
imul
dec
adc
inc
lahf
mov
lods
es
and
imul
imul
sbb
sbb
std
xor
decb
or
dec
stos
int3
jp
out
fadds
push
xorb
outsb
out
pop
push
std
mov
mov
xchg
dec
mov
cld
fsubrs
xchg
fstps
jge
xchg
adc
pop
stos
mov
mov
test
lret
scas
jge
cmp
sti
es
xchg
adc
xchg
jne
push
xor
push
jnp
xchg
adc
stc
xor
fstpl
mov
xchg
push
sbb
fadds
push
adc
adc
inc
adc
leave
cmpsl
test
xor
pushf
call
mov
test
push
sub
jle
nop
leave
adc
cmpsb
outsb
repnz
jns
mov
cmp
je
lds
lods
sbb
dec
icebp
mov
ljmp
jb
les
incb
xchg
lea
mov
cmp
lock
xchg
mov
push
mov
adc
cli
add
inc
cmp
or
fs
dec
test
fildl
into
rcrb
xchg
aad
xor
sub
in
shrb
mov
inc
lock
adc
xchg
out
dec
xor
mov
push
adc
cltd
xchg
stos
jl
arpl
inc
cli
pop
xchg
jno
inc
mov
mov
daa
shlb
jnp
dec
xchg
push
inc
dec
roll
sub
sarl
pop
fisttps
jb
in
div
inc
shlb
and
add
or
mov
adc
cmp
lahf
sub
jmp
mov
push
pop
fnsave
movsb
xchg
and
ficomps
mov
aad
push
into
pusha
mov
inc
fists
pop
jo
adc
cmp
xchg
add
pop
divl
sbb
incl
dec
in
add
out
xchg
out
and
inc
pop
std
push
push
pop
loopne
cmpsl
add
xchg
mov
pop
rclb
mov
test
fdiv
xchg
enter
nop
jb
test
sub
out
xchg
insl
add
lret
xchg
pop
lds
adc
loop
push
sub
pop
loop
push
mov
shrl
or
cmp
xchg
push
cmp
push
pop
or
cld
sbb
leave
push
mov
or
es
sbb
sub
popf
pop
imull
fwait
js
mov
mov
xchg
ficoml
xchg
add
jmp
rol
loope
jecxz
push
adc
imul
in
popa
pop
inc
pop
jge
adc
rcr
fs
lods
add
je
enter
mov
adc
sub
cmp
das
cs
push
inc
aad
sbb
adcl
clc
cmp
testb
orb
mov
rorl
adc
or
lods
lods
pop
push
add
add
cs
stc
loop
cltd
xchg
test
xorl
dec
push
mov
inc
ljmp
addr16
jbe
icebp
jl
pushf
dec
sbb
mov
jmp
sar
sbb
lds
sub
cli
jno
jnp
adc
sar
and
mov
popl
jne
lock
aad
push
sbb
movsb
and
in
dec
out
aam
and
mov
mov
cmp
fnstcw
add
pop
pusha
fidivrs
sub
fdivrp
jo
dec
mov
xor
mov
sbb
aam
es
xor
mov
or
hlt
inc
popf
jns
ljmp
jo
call
dec
mov
pop
and
aad
and
sbb
in
jne
xor
dec
out
arpl
ja
test
cld
inc
sub
leave
ja
pop
inc
adc
dec
cli
push
int3
pop
inc
inc
aaa
pop
scas
and
mov
aaa
cmp
cli
mov
loope
lods
inc
mov
insb
sbb
push
rorl
push
cmp
repz
cmp
push
imul
sbb
adc
popa
pop
or
fidivrl
jbe
dec
cmpsl
aam
fs
sub
cmp
idivl
sti
iret
int
out
mov
add
jge
pop
and
adc
push
xor
jne
mov
mov
sub
xchg
push
mov
or
test
imul
sub
or
pushf
subl
mov
adc
andl
pop
cld
pop
out
cmp
xor
clc
mov
stc
lahf
mov
ror
in
scas
andl
filds
adc
pushf
enter
adc
xor
jns
push
aas
xchg
ljmp
dec
popf
add
aad
push
test
call
cmovp
into
cmp
push
popa
cmp
dec
sub
je
adc
icebp
inc
rcrl
ja
test
sub
pop
add
or
inc
push
jae
inc
add
mov
pop
mov
stos
fwait
lret
aas
sbb
std
call
adc
add
cmc
lods
jne
shl
sarb
and
mov
jp
push
std
imul
movsb
mov
mov
and
sbb
sbb
and
mov
pop
rcll
enter
loopne
bound
sbb
cmp
nop
add
fildl
pavgb
popf
insb
push
iret
add
mov
stos
xchg
or
sub
fistpl
xchg
xchg
adc
ja
aad
dec
sub
sbb
mov
js
pop
les
xchg
pop
inc
insb
dec
dec
insl
pop
mov
mov
pop
insl
inc
fisttpl
lock
aas
push
lahf
cli
adc
jmp
jnp
xor
dec
fdivrl
jns
jb
mov
xlat
imul
shrl
jne
imul
pop
stos
fidivl
in
aas
shrl
repz
pop
mov
test
fwait
and
mov
cmc
jg
notl
and
icebp
pop
sbb
mov
out
mov
mov
pop
out
pop
or
aaa
fstps
mov
insb
ret
jb
mov
jmp
ja
cmpsb
aad
add
push
ss
cs
movsl
ss
aam
ja
rolb
test
xchg
push
lret
daa
or
pop
stc
imul
and
shl
pop
mov
in
xchg
jo
sub
dec
xchg
jno
adc
repz
push
mov
aam
adc
and
mov
js
ja
jno
and
jecxz
shrb
in
test
adcl
lcall
xlat
pusha
mov
nop
in
clc
pop
sbb
dec
aas
test
in
aam
ds
dec
insl
mov
cmpb
inc
mov
mov
inc
mov
cmp
dec
pmaxub
mov
mov
sbb
stos
lea
inc
cmpsl
nop
cltd
xchg
mov
insb
in
mov
aas
or
ret
inc
outsl
mov
shll
ljmp
mov
jle
push
dec
ret
iret
cld
icebp
mov
arpl
mov
nop
cld
xor
mov
enter
sbb
ds
xchg
pushf
xor
nop
xchg
icebp
into
push
mov
jb
daa
push
scas
dec
sbb
fldcw
pop
xchg
jae
jmp
sbb
lret
movsb
mov
rolb
dec
xchg
imul
jle
mov
push
mov
mov
fwait
sbb
imul
mov
add
adc
push
nop
pushf
nop
dec
sarl
fdivrs
xor
push
jmp
into
and
mov
testb
sbb
cli
and
or
push
mov
xlat
push
dec
addb
jbe
in
and
fs
test
rorl
fldenv
dec
inc
in
aas
je
int
mov
dec
push
mov
jno
sahf
pushf
rcrl
xchg
dec
sahf
xchg
ret
out
lret
out
sbb
adc
lods
arpl
sahf
lods
jle
xchg
lock
fistl
dec
dec
mov
pop
and
mov
fistpll
sbb
js
sahf
xchg
je
pop
mov
test
fidivrl
inc
xchg
ds
ja
daa
iret
push
mov
mov
adc
adc
shl
out
sub
jo
cmp
mov
xlat
aaa
cmp
frstor
and
jmp
ret
adc
jp
sub
into
call
aaa
mov
into
or
outsl
loopne
movsb
push
in
nop
jne
jl
mov
fs
jae
lods
or
fldl
jg
cs
lahf
leave
mov
les
push
push
and
in
sub
mov
mov
ds
mov
mov
sbb
adc
mov
xor
aaa
loopne
or
mov
out
ret
das
popf
shll
adc
dec
jns
adc
xchg
fsubrs
dec
push
or
add
jmp
adc
inc
xor
cmp
cwtl
insl
arpl
xor
test
test
mov
cmpsl
das
xor
rorb
inc
int3
shlb
add
pop
mov
test
pusha
cmpsb
add
mov
addr16
add
stc
push
insb
idivb
ds
jg
jge
mov
callw
aam
fdivp
xor
imul
adc
mov
imul
push
rcll
pop
xchg
jnp
or
jne
loope
xchg
jle
dec
sub
push
push
lea
gs
adc
add
dec
mov
mov
sbb
xchg
lock
cmp
cmp
pushf
sbb
movsb
xor
add
pop
cmp
and
cli
and
dec
imulb
cltd
cwtl
inc
out
add
fidivrs
pusha
and
stos
lahf
pop
xchg
mov
sbbl
adc
mov
add
mov
daa
dec
inc
and
je
sbb
mov
push
shl
adc
scas
mov
sub
jle
jge
pop
out
lock
inc
sbb
fnstenv
and
lods
repz
mov
ss
mov
popf
inc
loop
ss
lahf
pop
mov
rcr
jmp
cmp
cwtl
cmp
movsb
cld
xor
cmp
stc
in
pop
add
imul
or
sub
popa
mov
sbb
xchg
lret
mov
jmp
pop
aaa
stos
dec
lods
or
sub
mov
push
or
popf
add
dec
lret
sub
popa
jno
cwtl
clc
in
fists
push
mov
int3
frstor
jo
lock
lods
es
jae
jae
mov
xchg
inc
or
push
lds
outsl
bound
inc
sbb
jae
fdivl
fucomp
jmp
jb
jecxz
sbb
pop
xchg
mov
mov
cld
inc
pop
sub
add
jge
pop
mov
jge
lret
roll
outsl
mov
mov
test
aad
les
pop
push
cmp
jle
pop
mov
sbb
push
inc
mov
mov
cmp
shlb
push
stc
sbb
mov
shl
push
sbb
cmp
inc
push
jno
or
lahf
add
inc
mov
pop
xorl
andl
sub
cs
xor
addr16
mov
mov
and
lods
mov
or
mov
out
movsl
in
cmpl
outsb
sub
out
dec
mov
ficompl
and
adc
in
mov
cmpsb
add
sub
jnp
cs
add
xchg
xor
orl
rcr
mov
scas
cmp
out
mov
lcall
inc
jno
je
push
sbb
sbb
jg
into
sbb
dec
inc
pop
hlt
cwtl
add
or
daa
add
add
imul
inc
pop
add
jmp
pop
jnp
jp
and
mov
xchg
adc
fstpt
addr16
xor
mov
add
leave
mov
mov
into
add
xor
mov
sbb
orb
and
iret
aaa
pop
or
test
cld
pminub
sahf
fadd
pushl
das
add
test
repnz
inc
mov
pop
push
jbe
sbb
lds
xchg
popl
mov
dec
fstp
enter
bound
sub
sti
sub
lock
add
rol
xor
dec
jecxz
aam
mov
enter
sarl
sub
outsl
and
sti
mov
sar
mov
add
lea
dec
mov
jge
push
inc
fcompl
fdiv
xor
sarb
mov
sub
mov
push
shrb
lea
dec
pop
rcl
out
push
sarb
icebp
adc
rcrb
cltd
mov
cmpl
enter
jg
fcoml
int3
push
push
adc
repz
pop
cmpsl
lock
xor
xchg
or
call
add
mov
adc
test
xor
mov
loope
mov
jge
cmpsb
enter
mov
dec
mov
push
in
sub
push
lahf
and
xor
mov
stos
pop
call
mov
or
dec
and
fildll
fldenv
ss
and
sub
jno
es
cs
mov
stos
loopne
adc
sbb
lods
sti
lret
pop
test
scas
ds
in
fsts
pop
mov
dec
cmp
test
adcb
into
push
and
sti
roll
addb
aas
mov
sarb
cmp
pop
mov
fistpll
dec
adc
xor
shll
pusha
mov
mov
iret
inc
bswap
pushf
mov
or
pushf
lret
daa
test
cmp
mov
adc
xor
aas
adc
mov
arpl
lahf
inc
scas
xchg
test
lret
sahf
fiadds
push
ret
dec
sub
int
sbb
jp
sti
in
and
mov
dec
ss
sub
inc
mov
idivb
stos
jle
sarl
pop
push
lods
mov
fidivrs
xchg
mov
ja
mov
xchg
dec
ss
aas
notl
xor
rorl
xor
in
int
jp
cmpsb
fcmovnu
shll
sub
xchg
cmpsl
scas
lcall
cli
shlb
shll
sub
out
pop
xchg
mov
dec
mov
mov
mov
lcall
jne
push
cmp
push
cmpsb
rol
sti
cli
mov
add
dec
es
and
add
pushf
fistpll
mov
leave
or
xchg
mov
pushf
bound
lret
out
aam
mov
jmp
mov
sub
xor
cld
mov
jle
fmull
jbe
adc
or
dec
aas
movsb
or
loopne
mov
mov
fists
rcll
push
pop
or
lret
jbe
out
popf
and
cmp
loop
add
scas
cwtl
add
mov
subb
leave
pop
cmc
mov
pop
and
add
cltd
inc
xchg
jecxz
mov
sub
sahf
or
and
iret
xor
pop
xor
sub
aad
jne
fsubs
inc
fistps
scas
mov
enter
xchg
int3
mov
fnsave
ret
mov
mov
fiaddl
addb
and
in
ja
pop
add
aas
popa
mov
fs
cmp
cltd
mov
add
dec
dec
mov
arpl
pusha
adc
rcr
scas
add
into
out
loop
call
inc
adc
mov
sub
dec
and
shrl
adc
lcall
xchg
lret
sub
fnsave
sub
and
sub
stos
cmp
imul
scas
mov
jmp
ret
mov
cmpsb
push
xlat
inc
call
ret
roll
mov
das
pop
insl
push
jecxz
cmc
push
jmp
sbb
add
mov
data16
sbb
push
mov
sub
xchg
dec
xor
or
pop
mov
jns
movsb
call
or
notb
dec
cmp
inc
dec
repnz
pushf
xor
lods
movsl
outsb
es
or
sub
inc
out
or
mov
ret
test
and
aad
push
int3
loope
jnp
loop
jno
xor
and
stos
loopne
arpl
into
mov
fisubrs
add
push
jecxz
add
mov
jg
cmp
jg
adc
dec
loope
lcall
cltd
rcrl
testl
xchg
pop
fwait
daa
scas
push
mov
stc
push
cld
push
fcmovnu
adc
add
mov
mov
out
inc
clc
sub
inc
ret
notb
in
ret
mov
adc
mov
dec
xor
insb
aaa
cli
mov
xchg
fistps
test
xor
add
fldenv
xor
hlt
popf
test
call
js
mov
push
jne
int3
cmpsl
cmp
dec
mov
clc
stos
jmp
xor
or
jp
jmp
xor
arpl
pop
fs
loop
mov
dec
and
out
cmpsl
insb
sub
and
fildll
mov
jge
mov
jb
mov
xchg
adc
jbe
dec
mov
pop
lret
and
jo
xorb
lods
xchg
aaa
push
pop
fsubrs
decl
inc
lods
aaa
fcomp
int
sbb
test
stos
xor
hlt
xor
scas
inc
push
cwtl
and
jb
mov
xchg
xchg
xor
mov
fwait
inc
stos
mov
inc
pushf
ror
popa
mov
mov
xchg
imul
cwtl
sub
pusha
adc
insb
xchg
pop
mov
insl
aas
push
out
mov
adc
sti
cs
mov
movsl
mov
push
inc
xchg
push
xchg
in
rcrl
push
scas
lret
repz
or
movsl
lea
inc
inc
mov
jns
nop
sub
divl
xchg
in
dec
mov
pushf
sbb
jl
sbb
adc
mov
pop
xchg
in
in
lods
push
adc
push
ds
aaa
xchg
cmp
dec
aad
fldl
cmp
push
mov
out
adc
lret
add
test
and
jno
lock
push
fucom
insl
jl
mov
lahf
mov
out
icebp
in
sub
mov
fs
out
jbe
loope
adc
sub
into
fcmovbe
rolb
lods
test
lods
cmpsb
lds
inc
adc
jmp
push
arpl
or
in
iret
cmc
dec
test
mov
imul
or
sub
mov
shll
jnp
cmp
outsb
sbb
pop
cwtl
pop
pop
idivb
aad
mov
push
xchg
pushf
imul
cmpb
insb
push
add
leave
and
xchg
jo
iret
push
mov
es
insb
lea
dec
cmpsl
adc
xor
lods
pop
add
sbb
jae
adcb
cs
dec
pop
test
jne
pop
int
jo
rcl
cmp
cwtl
cld
xchg
pop
jp,pn
out
aam
in
mov
and
ror
add
lods
outsb
cli
ja
into
xor
inc
xchg
pop
rcrb
push
daa
push
add
lods
aas
mov
pop
icebp
loop
add
dec
cltd
mov
mov
mov
adc
rorl
sub
mov
aam
adc
in
int3
push
xchg
sub
in
nop
mov
inc
jnp
cmp
in
xor
pop
jl
aaa
stos
push
add
pop
mov
call
test
insl
or
lret
jp
and
mov
lds
in
mov
adc
pusha
jp
rcl
lret
in
sti
cwtl
jp
js
add
jmp
pop
add
test
fdivs
imul
cmp
insb
das
ret
push
fcomps
cmp
sbb
xor
jo
cwtl
cs
mov
lds
aas
mov
cmpsb
push
mov
mov
pop
clc
mov
scas
icebp
pop
add
loope
xor
or
loopne
sbb
sub
jne
fsubrp
push
sahf
dec
daa
mov
dec
icebp
ja
mov
xchg
shrb
or
lcall
pop
mov
mov
inc
fcmovnbe
dec
jo
out
lds
mov
inc
xor
adc
adc
mov
sti
mov
mov
pop
xor
xor
test
inc
jnp
jmp
mov
rcrb
dec
cmpsl
mov
divb
loope
mov
pop
mov
stc
dec
mov
push
movsl
movsb
jle
fstpl
dec
dec
sub
sub
movsb
negl
pop
daa
clc
push
dec
sbb
js
lret
mov
shll
mov
sbb
fbstp
fsubr
adc
das
push
test
in
cmp
int
popf
jnp
sbbl
sti
in
in
xchg
cmovb
or
mov
gs
sbb
pushf
sbb
iret
mov
fadds
js
sub
or
jl
xor
out
pop
cwtl
loop
rcr
mov
push
je
push
fnstsw
into
test
xchg
sub
ss
mov
cld
int
mov
ret
sbb
movsl
nop
adc
and
adc
push
scas
andl
ret
into
mov
stos
dec
outsb
or
je
ja
pcmpeqd
fsubr
jbe
mov
mov
repz
adc
in
stos
xor
shl
mov
loop
mov
sahf
pushl
jmp
loope
bound
adc
jns
stos
scas
adc
ret
pop
lea
push
into
cmp
dec
into
xchg
cli
fistpl
ljmp
pop
jns
lds
jl
fwait
and
sbb
lahf
jns
jg
lods
scas
xor
push
mov
in
sbb
pop
xor
mulb
fwait
add
jnp
push
jb
sub
push
pop
arpl
sbbl
js
jge
xchg
cmp
xchg
outsl
mov
inc
cmp
push
and
and
cmp
leave
inc
xchg
jnp
jmp
dec
cmp
dec
adc
loopne
sti
fidivrl
lret
popf
aam
test
adc
mov
inc
xchg
cld
sahf
jnp
add
or
jae
test
pushf
hlt
jge
sti
add
in
or
bnd
xor
push
dec
cli
xchg
jb
mov
sub
pop
test
jb
add
fiaddl
xor
sub
shll
ss
pop
test
or
sbb
add
jp
sbb
fcoml
adc
jb
mov
add
and
lretw
aad
dec
roll
mulb
lock
scas
mov
jno
or
sub
fimull
out
lods
data16
roll
jno
das
xchg
mov
enter
andl
fsubs
aas
addr16
and
call
sbb
loopne
jl
adc
pop
fildll
jb
cli
ljmp
addb
hlt
int3
sti
outsb
movsl
jno
pop
sbb
rolb
inc
cmp
enter
insb
xor
pop
scas
adc
sub
pop
mov
dec
repnz
pop
jbe
xor
rorl
out
mov
inc
sub
sbb
push
adc
sub
inc
scas
es
mov
jb
xor
insb
lods
pop
mov
cltd
in
mov
in
push
daa
and
cmp
cmpsl
xchg
xchg
fnsave
mov
ret
shrl
inc
loopne
fs
pop
jecxz
out
jl
push
push
mov
je
cltd
mov
pop
inc
cs
ss
and
inc
popf
enter
popa
pusha
dec
xchg
dec
subb
xorb
cli
cmp
push
add
jge
adc
in
mov
cmp
sbb
adc
push
jle
rorl
pop
daa
cvtpi2ps
ljmp
in
xor
in
and
sahf
js
scas
mov
into
dec
stc
lods
cwtl
mov
mov
sub
dec
adc
jbe
out
stc
and
ja
cmp
xor
pop
or
jbe
scas
sbb
iret
movsl
out
in
cmpsb
shll
pop
jnp
hlt
or
icebp
mov
and
xchg
divb
cmp
add
jne
adc
cmpb
jg
sub
ss
rep
andb
mov
mov
xlat
outsb
cwtl
and
repz
or
xor
stc
push
flds
pop
and
aam
cmp
pop
dec
inc
xor
lahf
mov
pop
mov
cmp
pop
xchg
add
sbb
loop
in
xchg
lret
xchg
popa
and
jp
fs
mov
jo
icebp
insb
mov
jnp
push
jo
movsb
in
std
jae
arpl
in
data16
pop
or
notb
inc
aaa
push
push
lds
dec
jg
dec
adcl
fcoms
inc
pop
outsl
adc
cltd
ss
fisubrl
pop
pop
mov
arpl
mov
popa
pop
jnp
mov
stos
es
test
lahf
rolb
popf
mov
std
outsl
jp
scas
rcrb
inc
xchg
jmp
jnp
push
insb
clc
mov
cmp
push
loope
fnstsw
adc
or
pushf
mov
arpl
inc
leave
pop
lret
xor
cmp
or
pop
cmp
pop
sub
call
aad
nop
pushf
repz
popa
dec
add
add
incb
fcmovnbe
jnp
fisttpl
cwtl
insb
and
push
mov
in
icebp
in
outsl
mov
ja
sub
into
jno
jo
mov
adc
push
and
std
xor
repnz
and
movl
push
gs
mov
addr16
sub
decl
data16
xor
or
loope
xor
push
in
mov
jns
stos
ret
cmpsb
jne
push
cli
mov
cmc
push
xorl
fs
jmp
jp
and
dec
fiaddl
cld
enter
rcll
arpl
jg
mul
lret
les
pop
je
and
dec
outsb
das
es
ja
das
inc
shl
dec
mov
xchg
mov
push
imul
xchg
jae
xchg
xor
xchg
mov
xchg
xchg
and
enter
hlt
add
mov
jl
in
jmp
push
sti
dec
cmp
aas
add
in
arpl
mov
and
sub
iret
shlb
leave
sahf
push
pushf
lea
adc
adc
mov
sbb
inc
adc
in
lcall
out
pop
sahf
jbe
cmp
jno
cmpsl
adc
xchg
or
test
mov
xchg
jmp
ret
sub
mov
mov
cmpsl
xor
scas
cmp
pop
fsubrp
add
pop
sub
xor
xchg
shr
mov
inc
or
jl
fsts
xchg
adc
sbb
dec
pusha
cltd
mov
pop
mov
push
popa
jns
insb
and
or
inc
cld
or
out
dec
sbb
mov
xchg
hlt
stc
je
jns
cld
xor
xchg
sbb
mov
mov
out
sahf
sbb
imul
in
cli
rorl
mov
ret
mov
testb
lcall
jb
mov
jae
add
fists
out
sahf
cmp
das
jmp
xor
xchg
sbb
popa
jg
test
iret
ffree
in
push
push
cmp
xchg
leave
push
nop
xchg
cmp
out
and
cli
in
imul
sbb
cld
jne
push
cmp
cmp
inc
mov
pop
out
fnstenv
notb
mov
mov
cmpsl
nop
das
out
clc
pusha
push
or
xor
fisttpll
push
jle
cmp
pusha
mov
pop
mov
add
mov
nop
sahf
push
pop
aam
jp
adc
mov
or
icebp
sbb
push
inc
inc
or
fs
jecxz
test
mov
inc
sbb
and
lret
push
and
adc
mov
int3
jo
imull
sbb
dec
inc
adc
or
into
cmp
cmp
inc
mov
mov
xchg
aas
adc
push
or
pushf
shl
in
xor
inc
xchg
stos
jmp
xlat
jno
ljmp
add
in
mov
mov
arpl
das
adc
xchg
mov
dec
push
sbb
addr16
xchg
inc
xor
and
ja
and
push
dec
inc
cmp
jb
jle
xchg
aaa
pop
mov
inc
js
sbb
and
outsl
mov
mov
cld
xor
in
add
sub
cmp
test
push
addr16
adc
loopne
push
mov
push
jmp
xor
ret
jno
in
cltd
pop
inc
test
lret
add
push
mov
negl
xchg
mov
in
xchg
outsb
jo
mov
leave
inc
icebp
dec
andl
and
subb
adc
aam
inc
mov
fsubrs
or
mov
daa
xor
pop
dec
les
jb
fadds
inc
pop
sub
ljmp
ljmp
sub
fsts
and
dec
mov
cmp
cmp
xchg
lds
lret
jle
push
push
pop
iret
test
or
push
pop
push
push
movsl
mov
fadd
lods
lahf
test
imul
xchg
fndisi(8087
pop
daa
arpl
call
pop
movsl
out
loopne
lods
mov
and
movsb
mov
fcmovnu
inc
fs
int3
mov
out
or
dec
and
add
mov
dec
stc
xor
inc
xchg
lret
mov
pop
jo
sti
mov
cmpsb
stos
xchg
jmp
imul
addb
movsl
cld
adc
mov
jae
cltd
jge
mov
fmuls
and
inc
mov
and
xor
jg
mov
testl
cmp
pop
mov
jbe
rorb
testb
and
std
cltd
inc
lea
out
pop
sbb
jmp
cs
jl
sbb
mov
das
jl
mulb
xchg
xor
es
insl
pusha
xor
shlb
adc
xchg
test
ja
cwtl
dec
adc
ljmp
movb
and
shlb
or
add
movsl
adc
dec
into
mov
jbe
sbb
push
xor
adc
and
jmp
dec
lods
mov
fsts
vmovntps
shl
sbb
mov
out
data16
sub
dec
push
push
inc
add
into
sti
fldcw
pop
fisttpl
or
cmpsl
pop
stos
lahf
mov
outsb
cmovge
test
out
ret
ret
push
sbb
jmp
lcall
fcom
and
mov
mov
mov
test
inc
mov
lret
mov
mov
decl
fcmove
pop
pushf
popf
xchg
pop
xchg
jb
sub
in
jge
or
or
mov
jno
out
and
ffree
repz
or
pop
adc
xor
pop
stc
inc
loop
into
es
adcl
movsb
shl
es
movsb
sub
push
mov
mov
in
sti
sub
jae
popf
fsubl
push
dec
inc
sub
stc
jle
cmpsb
in
add
pushf
jnp
test
andl
push
mov
mov
xor
jne
xor
clc
sbb
push
mov
cmp
add
push
movsl
jmp
fimull
repnz
js
sub
lcall
sub
sub
scas
dec
push
jl
int
scas
dec
add
adc
xchg
and
loopne
dec
xchg
lcall
xchg
in
in
jecxz
jnp
fucomi
ss
rcrb
add
cli
push
cmp
shl
inc
ret
cwtl
sbb
sub
pusha
push
inc
dec
sahf
push
jg
xorl
jg
mov
inc
mov
push
scas
jl
cmc
and
dec
lea
mov
mov
cmp
mov
cmp
in
mov
or
iret
cltd
data16
pop
and
mov
movsb
ja
mov
addr16
pop
push
bound
mov
jno
xorb
jp
js
and
dec
dec
push
mov
shll
movsb
add
adc
shlb
add
push
into
sti
pusha
test
jg
push
and
and
cmp
leave
xorl
xor
xchg
jp
mov
test
push
adc
cmp
nop
stc
sbb
mov
xor
xchg
sub
mov
movl
rcr
pop
cmp
pop
loopne
xchg
or
or
call
out
jb
mov
cltd
push
xchg
mov
xor
pop
inc
cltd
das
insl
decb
and
push
push
pop
inc
xor
inc
fwait
pop
jo
int
clc
mov
mov
xor
in
push
jle
inc
cmpsl
scas
pop
adc
pop
bound
arpl
xchg
xchg
aad
jns
mov
add
sbb
and
in
pusha
sub
aas
nop
andb
adc
shlb
and
sub
push
push
shlb
call
test
ret
xchg
push
scas
adc
arpl
in
jns
mov
sahf
pusha
sbb
daa
popf
leave
mov
call
push
imul
inc
addr16
aaa
or
push
test
test
cmpsb
xor
imulb
rcrl
xor
stos
in
add
cmp
add
pop
push
out
fstl
sub
aaa
add
jmp
cs
lods
rorl
stos
jb
push
mov
pop
mov
cmp
sub
sbb
xor
ds
ret
pop
jae
mov
add
out
and
cmpsb
and
cmpsb
mov
lods
xchg
prefetchwt1
or
push
sub
insl
mov
adc
inc
repz
fisttpll
adc
and
insb
push
dec
jp
and
fldt
xchg
sbb
stos
cmpl
mov
es
mov
and
push
jnp
add
daa
mov
popf
cmpb
ja
pop
xlat
stos
and
adc
lods
adc
and
add
in
aaa
sbb
adc
xchg
fstpl
pusha
sti
out
fwait
sub
outsl
push
mov
jnp
test
pop
jns
jmp
add
pop
gs
xchg
mov
adc
xchg
insb
cmp
adc
cmpsl
imul
andl
mov
fcmove
outsb
bound
testb
popf
rcr
int3
or
sub
sub
in
mov
cs
clc
mov
test
in
aas
lret
xor
add
cmp
sbb
daa
rorb
test
insl
movsl
int
int3
daa
sub
stc
push
das
mov
dec
cmp
jle
xlat
and
data16
push
jae
in
jmp
cmp
inc
xor
movsb
mov
dec
mov
mov
push
xor
pop
sub
lds
out
insb
aaa
mov
lcall
push
arpl
cmpsb
and
mov
mov
sub
sub
pop
jns
negl
loopne
shll
cmpb
jns
xchg
pop
xchg
adc
or
push
push
addr16
ret
jb
sbb
fadds
leave
sti
dec
scas
pop
and
and
shll
add
popa
enter
xchg
fwait
repnz
xor
cli
or
das
or
call
inc
in
mov
mov
push
jb
cmp
xchg
fnstsw
mov
pusha
or
aaa
mov
xor
pop
jl
mov
mov
lds
or
ja
shll
or
add
das
jb
lahf
jbe
pushf
prefetcht0
cmp
push
out
out
dec
push
icebp
sbb
pushf
inc
aaa
sarb
and
lods
test
popa
or
xor
adc
in
mov
xchg
mov
es
cmp
imul
push
inc
jge
cmpsl
arpl
jmp
outsb
negb
aad
mov
in
jae
popf
ret
inc
xlat
mov
sbb
jae
es
xchg
in
cmp
mov
jae
jb
pop
pop
int
shll
adcb
nop
fnstcw
jp
aaa
call
jecxz
pop
mov
mov
leave
xlat
jl
xlat
sahf
inc
in
mov
and
inc
xor
push
gs
in
in
xor
or
mov
bound
sbb
and
imul
cmpsl
mov
test
jge
jmp
pop
movb
adc
sub
lods
mov
test
sti
mov
push
insb
pusha
insb
mov
push
or
mov
popa
push
jno
sbb
or
inc
sub
xchg
mov
push
cmp
dec
and
insb
xchg
pop
mov
jmp
cmp
call
sub
lcall
rsm
loop
lcall
ljmp
rorb
dec
push
add
inc
daa
pop
cmc
mov
lahf
cmc
inc
jecxz
sub
es
iret
push
adc
xor
mov
dec
dec
into
lsl
mov
sti
out
jle
es
sbb
and
daa
mov
lret
push
mov
push
mov
lret
popf
xor
add
test
dec
sbb
mov
xor
inc
aaa
pop
inc
xor
cltd
gs
xchg
or
mov
movsb
jb
inc
mov
jl
ja
pop
sub
push
jbe
or
mov
xor
mov
mov
add
mov
lock
shl
push
mov
in
push
int
xor
cltd
les
xchg
jmp
outsb
ficoms
or
std
stc
and
jp
mov
mov
stc
call
shl
adc
xor
popa
aad
gs
popf
and
push
lret
loope
push
and
add
and
dec
ss
cs
out
or
adc
xor
jg
mov
mov
out
pushf
jmp
mov
mov
jle
push
shrl
into
jne
mov
in
inc
sbb
fxch
shll
fsubs
sbb
or
sbb
sbb
movsb
int3
bound
sti
and
repz
add
addb
pop
and
mov
and
sub
divps
movsl
push
in
dec
inc
leave
xor
mov
pop
pushf
mov
popaw
inc
scas
and
pop
ret
mov
sti
or
adc
rorl
adc
insb
dec
loop
add
loop
in
and
cmpsb
mov
pop
pop
cmp
shlb
in
pop
adc
cmp
int3
mov
dec
pusha
push
test
mov
pusha
or
aas
inc
push
cmp
xor
add
mov
int
and
aam
mov
cmpsl
fnstenv
out
push
lods
dec
add
in
mov
sahf
ret
outsl
push
push
add
pop
push
gs
lods
xor
adc
push
cli
push
stos
dec
mov
pop
pop
mov
add
inc
pop
and
repnz
sub
in
mov
dec
mov
add
jle
mov
out
enter
jno
fcmovne
mov
fmull
ja
jmp
loope
jp
sbb
imul
inc
push
bnd
inc
in
stos
mov
sahf
push
stos
xchg
or
xchg
ficomps
jno
pop
leave
lods
dec
fisubrl
or
testl
outsl
lcall
adc
or
mov
mov
das
pop
mov
dec
rorl
sub
faddp
push
add
xor
mov
mov
mov
test
pop
fisttpll
call
lods
jb
push
xor
mov
pop
push
adc
out
aas
sbb
daa
xchg
ret
xor
xlat
es
sbb
cwtl
into
sbb
scas
adc
xchg
or
sbbl
mov
or
mov
fs
or
insb
es
jnp
jmp
movsl
inc
les
rol
jo
fwait
daa
inc
xchg
fimuls
adc
sub
addl
incl
push
sar
adc
stc
push
lods
inc
adc
xor
std
dec
nop
mov
shlb
and
sbb
sub
pusha
shlb
ss
xchg
push
push
adc
dec
aas
std
dec
cmpsb
movsl
xlat
jg
iret
daa
xchg
xchg
daa
cli
test
into
cs
xchg
inc
dec
dec
jg
push
mov
jb
and
test
addr16
test
loope
arpl
mov
push
mov
imul
xchg
hlt
mov
sub
aad
pop
sbbl
das
cltd
mov
in
adc
cmp
cmp
mov
lea
mov
icebp
adc
inc
roll
popa
adcl
outsb
sarb
xchg
xchg
cmp
in
pop
dec
mov
add
xor
lret
lods
cmp
inc
les
clc
mov
xor
and
test
push
mov
lods
in
rcll
and
adc
mov
rcll
mov
sbb
xchg
cld
xchg
mov
leave
jl
into
daa
sub
cwtl
test
imul
mov
dec
jmp
xchg
enter
lcall
jno
cmp
lock
cmp
xlat
cmc
inc
into
rcl
fwait
xchg
add
inc
jl,pt
adc
arpl
outsl
jns
fs
cmpsl
out
nop
cmp
mov
push
cmp
xchg
mov
inc
adc
aam
fcomp
aam
mov
shrb
mov
and
xchg
je
jecxz
and
mov
mov
out
inc
cmp
pop
xor
cmp
add
test
push
loop
inc
jmp
xchg
outsl
push
xchg
cmc
dec
pop
xor
mov
and
test
jg
or
mov
jmp
stc
pusha
repz
cmp
and
jecxz
loope
stos
shrb
shlb
repz
mov
ss
add
mov
arpl
lds
or
insl
jae
es
add
adc
ljmp
test
orl
rclb
push
test
xchg
dec
faddl
mov
xchg
adc
fistps
jge
mov
cld
pushf
bound
xchg
rolb
rcrl
pushaw
ja
lret
adc
push
xchg
and
xor
cmpsb
mov
in
pop
sbb
mov
jp
push
sbb
sub
mov
jle
push
and
sti
jo
cltd
sub
shl
mov
or
xor
aas
jns
jbe
fimuls
mov
cmp
mov
xchg
test
das
jmp
je
xchg
jp
or
aam
jge
pushf
int3
ja
jmp
inc
sbb
inc
push
cmp
out
insb
mov
mov
mov
sbbl
xor
jg
sub
push
sarl
inc
shll
cltd
xchg
mov
pop
incl
dec
mov
jg
adc
pop
sub
inc
repz
call
je
fwait
adc
hlt
mov
les
mov
outsl
mulb
jmp
jg
xor
xor
mov
sbb
ret
pop
lahf
dec
xlat
inc
repnz
mov
sub
mov
cmp
pop
icebp
adc
adc
dec
pop
push
dec
xchg
or
cs
data16
insb
mov
or
pop
cli
pop
jl
add
sti
imull
addr16
out
or
mov
cli
fisubrs
fnsave
pop
hlt
dec
mov
repnz
dec
cmp
add
andb
pop
js
cmpsl
xchg
push
movsl
stos
test
push
push
orb
imul
fstl
inc
jge
push
stos
jnp
outsb
mov
adc
stos
rcrb
aas
enter
sub
js
sub
push
mull
lock
fdivrs
orb
and
outsl
sbb
in
and
or
popf
insl
std
add
out
hlt
fwait
adcl
push
loope
adc
mov
je
mov
shll
adc
scas
jo
mov
xchg
push
into
and
mov
xor
jb
gs
cltd
in
flds
sub
inc
int
fdivrl
inc
add
pop
movsb
xchg
mov
outsb
pushf
cli
js
sbb
and
mov
xor
dec
or
jne
cwtl
push
test
inc
jecxz
cli
js
dec
xchg
xor
in
add
sbb
sbb
rcrl
mov
aam
in
sarb
int
pop
std
hlt
in
dec
xor
mov
test
insl
inc
fidivrs
pop
xchg
pop
push
movsb
fsts
cmp
in
pop
or
lds
jae
pusha
add
adc
incl
hlt
pop
add
pop
in
int
lret
ret
fnstcw
xchg
mov
mov
xor
mov
jp
fwait
movl
test
xor
mov
loope
fnstsw
xchg
push
xchg
add
jo
gs
fidivs
js
xor
dec
mov
or
xor
adc
jb
dec
cli
mov
in
adcl
and
xchg
cmpb
xor
insb
mov
ljmp
ljmp
dec
ret
mov
adc
in
repnz
or
std
pushf
arpl
out
stc
repnz
add
data16
icebp
mov
fisubl
in
test
aas
fdivl
push
push
mov
pop
dec
int3
dec
arpl
inc
out
dec
dec
mov
ret
insb
adc
mov
aam
nop
fisttpl
repz
clc
adcb
pop
in
add
scas
dec
pop
imulb
and
inc
pop
sbb
jne
lea
pop
sti
dec
mov
fnsave
jl
sub
adc
ror
push
jl
cli
sarl
dec
bound
dec
mov
gs
sti
popf
xchg
or
es
push
fisttpll
jmp
push
xchg
inc
pop
loope
aam
mov
popa
in
and
addr16
push
mov
sbb
pop
push
mov
mov
cmp
mov
mov
je
mov
int
jmp
or
lds
jecxz
or
ljmp
test
jg
push
cmp
mov
scas
jge
and
inc
les
push
sbbb
sub
inc
sub
push
adc
push
inc
and
jle
gs
xchg
xchg
fs
inc
imul
cmpsb
sbb
mov
mov
fsubrs
cs
sbb
ret
sbbb
pushf
xchg
push
cwtl
and
negb
jmp
xor
dec
lahf
popa
mov
adc
nop
add
adcb
mov
incl
pop
mov
shlb
ds
lcall
mov
cmc
adc
push
or
jbe
mov
xchg
pop
nop
cmpsl
mov
mov
lret
inc
or
and
roll
jg
sub
movsb
push
dec
xor
inc
out
ror
ret
jbe
adc
jb
jle
and
out
mov
in
andl
cmpsw
dec
mov
out
sub
inc
imul
repz
cld
pop
xchg
push
cmp
insl
jp
fsubl
push
add
sub
or
int3
pop
and
mov
and
insb
rorb
xchg
xchg
mov
clc
push
scas
leave
and
mov
xchg
lea
xchg
stc
ret
xchg
fwait
lock
xor
push
pop
cmc
iret
scas
inc
fmulp
enter
add
or
in
dec
addr16
dec
adc
gs
test
inc
pop
fistpl
shlb
hlt
stos
jb
shll
jns
mov
mull
jo
and
pop
inc
imul
mov
cmc
inc
pop
xchg
movsb
dec
imul
cwtl
adc
mov
js
fdivr
test
imul
mov
insl
xor
and
adc
aad
fs
lods
test
xchg
mov
mov
jle
push
es
adcl
sarl
sbb
pop
fists
int3
sbb
mov
push
sbb
mov
mov
jne
jno
icebp
inc
pushf
sub
int
imul
shr
sbb
sti
imul
aas
sbb
add
jo
shlb
and
push
mov
gs
mov
xor
add
icebp
std
adc
mov
imul
xor
cmp
repnz
into
hlt
jle
aaa
sbb
mov
mov
lods
lods
ret
js
sub
dec
or
test
fistpl
push
stc
stos
rolb
pop
jb
jmp
lea
popf
fnstsw
cmpsb
sbb
aaa
fucom
mov
fwait
jne
xor
xchg
mov
jl
inc
xchg
cmpsb
mov
js
cmp
lcall
mov
fdivl
mov
pop
pusha
aas
je
cmp
dec
or
cwtl
push
jnp
test
fsubrl
adc
nop
out
in
mov
mov
mov
cmp
sbbl
clc
in
int3
inc
mov
dec
push
neg
dec
pop
push
lods
adc
jmp
out
shl
lea
jmp
adc
fcompl
dec
test
add
data16
cmp
dec
lret
outsl
inc
dec
in
push
outsb
insl
movsb
test
adcl
in
cwtl
pop
insl
aas
repnz
push
iret
or
jmp
cmp
sbb
push
out
xchg
push
mov
lahf
lcall
xchg
xchg
sub
fstpl
in
jae
nop
mov
xor
sub
aaa
je
repz
jb
inc
add
dec
adc
xor
fcmovnb
movsb
sbb
jne
push
mov
lock
xchg
xchg
movsl
movsb
adc
add
fists
lock
xchg
cmp
and
std
xor
pop
mov
adc
adc
xrelease
mov
lahf
pop
inc
dec
inc
in
mov
fnsave
icebp
fstp
push
lea
jne
inc
xchg
dec
repz
repnz
adc
pop
add
repnz
loope
andl
pop
andl
mov
pop
in
cmp
bound
jnp
ret
sbb
dec
or
je
stos
xor
sbb
popl
in
fs
xchg
test
das
or
lock
rcrl
push
icebp
cmp
push
mov
out
inc
xor
arpl
jecxz
pop
inc
fdivl
mov
xchg
call
jno
pop
aam
mov
jne
cmp
lods
stc
into
leave
daa
xor
into
push
sub
clc
ss
faddp
xlat
sbb
inc
jp
jecxz
shrl
ss
data16
mov
sub
in
xchg
int3
repz
mov
stc
sbb
iret
xorl
push
lock
scas
cld
les
stos
or
outsl
loope
ficoms
mov
adc
dec
sub
fistpl
popf
dec
fld
insb
insb
jns
xchg
stos
std
add
fnsave
insb
ret
and
pop
inc
stos
jae
ljmp
sahf
push
mov
fadd
aaa
icebp
les
mov
rol
es
adc
push
mov
pop
xor
push
adc
cld
inc
push
jne
test
xorl
fadds
movsl
stos
icebp
jp
mov
nop
insl
dec
push
lea
daa
cmp
cs
bound
ret
mov
das
imul
ret
shr
mov
add
jmp
mov
cli
fld1
je
aas
mov
push
adc
fwait
cbtw
int
arpl
nop
lds
pop
leave
sub
addr16
adc
inc
ss
imul
mov
cld
inc
push
jle
xchg
pop
stos
enter
arpl
pop
mov
mov
xchg
cmp
cmpxchg
sbb
cmp
adc
cmc
mov
sub
jl
int
jge
int3
or
aaa
inc
aas
int
or
ljmp
ja
xchg
test
xchg
inc
das
in
adc
loopne
pop
dec
mov
mov
jmp
adc
pop
enter
xor
push
and
sbb
xchg
adc
shrw
cmp
mov
mov
xor
repz
push
jmp
and
sarb
xchg
in
fwait
into
test
shll
sub
adc
mov
ret
mov
mov
jae
scas
popa
orb
popa
lds
cltd
add
cmp
dec
or
es
xor
js
lods
lret
pop
ss
fwait
sub
xor
dec
repz
jno
ret
addr16
leave
xor
rclb
and
sarb
sbb
add
sub
out
loopne
outsl
in
into
xchg
or
pop
mov
ror
dec
mov
sbb
push
das
or
mov
or
and
jmp
cmp
adc
daa
pop
cmpl
sahf
sbb
push
loopne
lahf
jg
xchg
pop
xchg
das
lcall
add
or
inc
test
mov
jne
test
jb
and
jb
xchg
adc
lahf
sub
or
aas
push
cmp
inc
pop
pop
xchg
cmpsb
push
xor
cmc
sub
xor
cmpsb
push
or
and
dec
pop
and
mov
jns
dec
adc
inc
call
xor
push
in
xchg
addl
out
pop
mov
aam
std
sarl
sub
or
xchg
mov
loopne
mov
pusha
dec
sbb
push
adc
add
fucompp
adc
fstpl
scas
and
aas
cmc
or
push
scas
lods
inc
xchg
adcl
rorl
mov
outsl
cwtl
or
or
and
push
xorl
test
jge
mov
ret
lods
mov
outsl
lock
cmc
cmc
movsl
ja
xchg
adc
lock
dec
pop
lret
cmp
cmp
in
lahf
push
sahf
jae
push
cmp
in
orl
mov
or
xchg
mov
int3
sbb
addr16
pop
xor
cmp
or
pop
or
xor
std
sub
in
loope
and
mov
ljmp
push
shrb
lea
loopne
std
pop
pushf
sbb
je
mov
not
xchg
inc
add
sub
stos
adc
mov
push
ss
repnz
daa
flds
inc
or
lea
cmp
mov
ds
lock
xchg
sbb
mov
insb
pushf
es
fs
in
xchg
dec
test
adcl
pop
mov
xchg
xor
divb
dec
fwait
incb
add
or
push
sbb
lods
push
adc
leave
mov
push
push
add
hlt
lods
pop
testl
sbb
mov
jb
shll
xor
fdivp
lods
adc
and
fistps
cmpsb
adc
out
jns
xchg
dec
adc
xchg
jb
xor
out
mov
imul
sub
out
jo
orl
pop
popa
mov
cltd
fwait
repnz
xchg
pop
aaa
cmpsl
mov
push
ss
cmp
stos
fidivs
lods
adc
ret
xchg
ret
cmpsl
adc
js
adc
push
add
insb
inc
jg
and
xor
push
jg
aas
addr16
inc
mov
call
mov
in
dec
int
outsl
xor
popa
mov
mov
pop
and
push
fdivrs
mov
popa
lahf
es
xchg
jbe
mov
dec
xor
mov
lods
aas
and
aad
lea
dec
or
lock
cmp
mov
sahf
into
ficompl
mov
gs
aam
sbb
sub
in
pop
test
inc
scas
aam
inc
sbb
push
scas
xor
adc
ds
push
mov
lods
sub
sub
mov
or
jmp
add
in
inc
sub
push
repz
repz
mov
test
inc
xchg
jp
jge
inc
rcrb
xchg
mov
add
popf
sahf
ficoms
inc
clc
mov
push
mov
outsl
das
mov
push
sbb
enter
cltd
cmpsl
lret
lea
inc
arpl
adc
mov
add
mov
shl
fistpll
adc
add
or
fs
push
adcl
push
int
int
xlat
adc
jb
ficoms
xor
mov
jno
ljmp
pusha
add
lds
sub
xchg
movsb
mov
cli
jae
add
dec
jl
outsb
and
adc
movsl
arpl
inc
stc
lret
dec
icebp
sarl
lods
push
nop
inc
push
adc
push
pop
out
psrlw
popa
jb
xor
xlat
jecxz
ret
jno
xlat
pop
pushf
cmp
daa
je
cmp
in
dec
mov
sub
and
mov
push
lea
push
push
lock
pop
fstl
sub
xchg
jecxz
jae
dec
jle
cmp
mov
fsubs
dec
or
in
sbb
sbb
jmp
stos
out
imul
mov
jbe
xchg
xchg
cmpb
adc
push
shl
mov
in
xchg
add
dec
inc
sbb
test
loop
jnp
nop
mov
ret
daa
xor
lret
push
pop
in
pop
shrl
insl
and
adc
cmpsb
mov
scas
sbb
mov
and
divb
xorl
adc
hlt
adc
xlat
ja
movsl
pop
xchg
sub
jns
sarb
pop
je
pop
loope
sbb
add
or
mov
jae
scas
sahf
mov
push
aaa
ss
push
xchg
in
jmp
shlb
adc
divl
pop
jg
adc
or
in
pop
ss
std
lock
pop
shrl
mov
xor
lea
rol
mov
daa
loopne
mov
loop
pop
and
clc
dec
mov
rcrl
fisubrl
adc
int3
mov
cmp
enter
test
xlat
inc
loop
imull
sti
pop
ds
mov
fwait
jle
lea
aam
push
mov
mov
jne
sub
lret
lret
adcl
inc
es
leave
fldt
idivb
mov
loope
mov
rclb
add
xchg
push
jmp
pushf
inc
imul
cmp
adc
add
mov
out
sub
xchg
lret
dec
sub
inc
sbb
inc
xchg
and
xchg
repz
test
sbb
les
ss
jnp
leave
jae
inc
add
test
pusha
mov
lods
adc
daa
in
pop
add
add
sbb
jnp
jo
jg
lcall
mov
mov
test
jbe
jne
cmp
cmp
icebp
sti
xor
mov
inc
jns
ja
fs
in
jnp
stc
pop
sbb
popf
dec
fstps
xchg
fdivr
mov
int
mov
outsl
ja
mov
push
nop
int
nop
mov
push
jl
cmp
ja
pop
mov
nop
mov
int
adc
aam
adcl
sbb
pop
pop
aaa
xlat
push
lock
inc
ss
leave
inc
push
out
call
out
outsl
cmp
or
push
scas
out
xlat
inc
sub
inc
iret
popf
mov
std
push
nop
mov
jae
lret
subl
in
aad
sbb
push
push
jb
movsl
aaa
xchg
ret
enter
sbb
jecxz
xor
popf
or
in
int3
adc
popf
imul
and
rclb
fcmove
cmp
sub
sub
inc
aad
leave
jns
insl
mov
jnp
xchg
stc
push
notl
push
scas
cmp
inc
ds
cmpsl
imul
mov
call
popf
int3
negl
sub
fcmove
movsb
mov
jae
sub
jmp
and
inc
iret
dec
scas
imul
mov
sbb
cmp
adc
jge
add
or
stos
loope
pop
pop
ds
mov
cmp
dec
call
dec
into
sbb
mov
mov
test
jae
adc
ljmp
sub
jmp
sbb
rorb
arpl
jo
movsb
dec
or
inc
mov
pop
mov
dec
mov
stos
push
adc
inc
xor
dec
mov
cltd
add
or
neg
dec
inc
sbb
inc
jp
dec
mull
loop
data16
or
lcall
sub
imul
cltd
jno
sbb
cmpsb
dec
or
lods
add
test
cmc
cs
pop
adc
mov
in
ror
test
sbb
mov
dec
mov
cmc
xchg
ja
rcll
pop
adc
sbb
out
adcl
sti
jne
in
jg
sti
addr16
sub
loope
pop
jmp
repnz
out
cli
adc
dec
mov
insb
loop
push
test
fdiv
not
xchg
lock
mov
mov
xchg
xor
pop
jb
aaa
jp
mov
push
pop
inc
orb
movsl
pop
xor
inc
sets
lds
in
or
fsubl
gs
stos
into
cmp
lock
sub
es
sub
sub
pop
cmp
gs
test
inc
outsl
or
jae
or
lock
aas
push
movsl
in
movsl
les
mov
adc
insl
loope
ss
popa
pop
mov
aas
pop
sub
imul
adc
mov
dec
in
inc
sub
shrl
mov
xchg
xor
outsl
xor
jg
daa
sbb
std
mov
shl
cmpsl
cmpsl
sbb
dec
leave
cli
mov
xorl
iret
orb
mov
xlat
fsts
jae
insb
addb
sbb
xlat
or
rorl
in
pop
add
repz
xor
jo
lods
push
out
popa
shlb
mov
jae,pn
sub
divl
adc
sbb
and
inc
mov
dec
add
rorl
jo
add
dec
lods
mov
push
push
mov
pushf
fidivrs
pop
mov
addl
push
sbb
mov
mov
jb
cmp
gs
add
test
inc
ljmp
fnstenv
push
dec
sbb
rcrb
jp
in
movsl
jb
pop
dec
in
pop
adc
pusha
adc
insb
gs
mov
scas
rep
xchg
push
rorb
xchg
loope
daa
fs
cmc
add
mov
xchg
fiadds
pop
scas
test
xor
out
inc
lret
add
and
mov
sarl
sub
and
out
rcll
adc
jae
inc
cmp
adc
outsb
and
divb
sub
xchg
sub
lods
andb
test
in
leave
add
fstps
add
push
and
sbb
push
cwtl
jns
dec
sbb
xchg
and
add
inc
sti
adc
scas
loop
or
ja
jmp
adc
pop
mov
add
push
sub
lahf
mov
outsb
inc
mov
in
decl
enter
push
pop
aam
jbe
push
nop
rcl
daa
cmovo
adc
lock
add
jp
push
in
sbb
imul
push
mov
in
ds
fisttps
fmull
inc
push
sub
jo
rorb
lcall
sub
cmp
dec
xchg
add
xchg
movb
scas
test
es
fxch
in
jl
jecxz
push
std
lahf
push
xchg
mov
push
mov
lods
in
cld
push
je
sub
dec
mov
push
lock
fidivrs
out
mov
mov
lcall
and
and
scas
fisubrs
xchg
dec
cmp
sahf
out
mov
test
data16
or
hlt
stc
ss
je
sbb
adc
loope
adcb
std
cmpsb
push
lock
dec
dec
sbb
mov
and
or
aam
jle
fucom
or
cmc
and
lret
pop
xchg
jmp
and
sahf
jmp
scas
outsl
dec
sti
cmp
adc
sbb
mov
rolb
sbbl
cltd
cmp
test
dec
data16
xchg
push
pop
ret
dec
or
in
pop
aad
testb
xor
and
test
push
imul
add
popf
bound
jne
das
sbb
pop
cmp
jns
cld
pop
pusha
sub
loop
hlt
test
out
flds
fists
jmp
lret
shll
mov
jns
inc
outsb
addr16
lret
adc
pop
mov
push
cwtl
dec
pop
outsb
out
out
sbb
fidivl
and
pop
push
ja
addr16
jbe
xchg
mov
sbb
cmpsb
pop
jl
incb
jmp
cmp
daa
gs
sbbl
sub
popa
lods
push
loope
lret
inc
loopne
push
mov
mov
mov
ficomps
rol
rclb
xchg
mov
fistpl
cmp
jmp
xchg
notb
outsl
cmp
mov
mov
add
jp
mov
popf
jno
add
std
lea
cmp
dec
push
inc
mov
sub
mov
adc
test
sub
stos
sarb
mov
add
jbe
aaa
leave
dec
dec
out
jecxz
stos
test
mov
pop
mov
popa
into
scas
lret
call
jnp
dec
testb
mov
bound
rcll
sbb
inc
inc
femms
hlt
out
jle
movsl
pop
stos
clc
sbb
popf
sub
clc
jg
ds
mov
dec
test
enter
push
insl
mov
negl
es
repnz
cmpsl
inc
aas
push
xor
call
cltd
mov
sbb
push
stos
fsubs
inc
pmulhw
inc
andl
pop
icebp
xlat
sbb
addr16
jge
xchg
xchg
ficoms
test
adc
xor
insb
loop
or
sbb
repz
dec
or
mov
insl
jg
ror
outsl
jb
insb
xchg
insb
enter
push
cs
mov
xchg
ret
sub
divl
dec
lock
cmpsl
cmp
stos
pop
aas
out
je
lods
mov
mov
pop
push
mov
jnp
sub
stos
adc
push
add
fldl
mov
mov
or
arpl
xchg
lock
pop
stc
mov
jnp
mov
sbb
cmp
in
in
mov
xchg
das
in
push
stos
and
adc
in
xchg
js
push
xchg
cmp
loopne
fsubrs
pop
ret
cmpsb
xor
sbb
cld
xchg
cwtl
gs
fwait
adc
xchg
in
jbe
out
mov
cmp
stc
in
mov
orl
movsb
dec
xchg
sbb
dec
and
test
mov
adc
cmc
jmp
mov
jno
mov
and
rorl
mov
les
stos
loop
stc
out
push
lret
xchg
lock
lret
pop
dec
cld
mov
xchg
aas
rcrb
xchg
add
test
xchg
addr16
dec
test
or
and
sbb
popa
daa
or
and
insl
mov
outsb
sahf
mov
cmp
loop
push
pop
inc
imul
adc
shll
push
dec
sub
jnp
xchg
jbe
sub
sbb
imul
repnz
push
pusha
scas
out
mov
insb
je
repz
mov
xchg
lahf
lods
pushf
arpl
dec
mov
jae
int3
js
add
and
lods
mov
adc
dec
adc
arpl
xor
dec
je
and
sub
mov
mov
jnp
outsb
add
imul
mov
add
jge
or
lret
xchg
mov
insb
pop
cmp
jecxz
mulb
les
aad
je
jae
cmc
fcomps
ja
xchg
inc
jo
stos
jge
pop
pop
xor
sahf
add
iret
es
sbb
cmp
push
fwait
sbb
in
outsb
pop
imull
mov
addr16
addb
rcll
fistps
push
push
dec
aaa
push
xor
sub
data16
push
push
cmp
or
fsubr
jnp
xor
sahf
dec
les
lar
test
mov
xor
pop
push
es
popf
jne
sub
mov
pop
xchg
pop
dec
xchg
sbb
fiadds
add
fsubrs
mov
icebp
jl
push
aas
out
call
inc
aad
add
adc
sub
cmp
pop
cmp
mov
dec
nop
jno
sub
push
jecxz
mov
pop
mov
js
int
cmp
add
push
mov
mov
xlat
mov
fisttpl
mov
xor
lret
xor
leave
xor
mov
dec
ror
add
fmull
mov
dec
xor
mul
jae
repnz
mov
xor
or
inc
push
jp
sahf
mov
mulb
popa
loopne
push
inc
popf
rcrb
mov
in
push
roll
and
in
mov
mov
add
inc
and
out
stc
and
pop
adc
fildl
sahf
pop
adc
cmp
adc
xor
das
data16
iret
inc
imul
ret
gs
int
stos
movsb
lds
sbb
pop
call
ss
or
pop
mov
subb
outsb
mov
aas
push
push
mov
push
push
push
inc
adc
dec
jecxz
cmp
mov
nop
sub
add
ljmp
aad
movb
ret
mov
shlb
loop
or
aaa
icebp
sbb
js
call
movsb
sbb
pop
imul
cmp
jp
popw
cmp
ljmp
imul
jns
xlat
loope
mov
sar
movsb
pusha
xchg
lds
in
mov
cs
mov
mov
sbb
cmp
shrb
jmp
inc
inc
rclb
sbb
xchg
lret
pop
repnz
or
pop
lret
mov
orl
pop
sbbb
jmp
jle
lret
in
cmpsl
pop
in
push
cmpl
lret
mov
aad
aaa
cltd
mov
jge
sbb
std
mov
les
cmp
mov
out
adc
nop
or
sti
loopne
lods
push
add
mov
inc
js
in
leave
out
ja
inc
imul
mov
aad
jns
xor
out
cmc
dec
sbb
and
sub
inc
xor
insl
mov
xchg
cwtl
bound
add
or
clc
outsl
sahf
mov
add
in
dec
jo
inc
adc
fwait
mov
sti
xchg
lret
push
mov
jo
call
jbe
jns
test
out
sub
call
or
lahf
sub
sbb
mov
jb
lcall
xchg
lret
jecxz
fbstp
ret
lds
cmc
ds
xchg
jbe
dec
mov
lahf
sti
xchg
out
and
pop
scas
dec
test
mov
mov
sub
repnz
fucomp
fs
scas
mov
test
ret
add
jno
imul
stos
lods
les
imulb
pop
fs
mov
push
or
sbbb
pop
and
push
mov
pop
cmpsl
lea
or
pop
mov
loopne
in
mov
stos
enter
pop
outsw
cmp
mov
dec
add
cmp
ljmp
decb
out
dec
jo
sub
jmp
cmp
jmp
xchg
xlat
mov
test
aaa
in
mov
and
pop
cmp
inc
clc
sbb
fstpt
or
sbb
xor
dec
std
bnd
insl
cmp
add
outsb
mov
call
stos
xlat
xchg
addb
movsb
dec
inc
bound
test
inc
inc
aas
loopne
pop
or
ds
sub
adc
jmp
testl
test
mov
pop
inc
xchg
lret
pusha
xchg
sub
xor
movl
xor
push
mov
mov
stc
fcmovne
leave
jg
fisttpl
mov
adc
fwait
pop
cmp
in
xor
mov
sbb
sarb
lock
test
jbe
xchg
in
cmp
js
jno
sub
fdiv
push
aas
mov
cltd
int
insl
mov
mov
dec
rorl
sahf
inc
mov
xor
jecxz
cld
pop
das
mov
jge
leave
xchg
push
push
aas
xchg
mov
push
adc
aad
cltd
mov
arpl
loopne
popa
int
dec
nop
int3
lds
ret
mov
jbe
jnp
sub
sub
xchg
sub
sub
dec
dec
les
hlt
hlt
divl
fstpl
jne
sub
mov
dec
outsb
popa
testl
and
xor
ret
add
lcall
adc
movl
hlt
push
and
and
push
shlb
sbb
leave
into
cmp
addb
sbb
sbb
dec
mov
add
int
aas
sbb
js
mov
shlb
xchg
cmp
or
popf
sub
or
cmc
sub
add
ret
xchg
and
andl
mov
mov
icebp
enter
xchg
push
rol
and
mov
pop
popf
clc
sub
std
fwait
lods
lods
or
jns
xchg
out
stc
push
adc
inc
insb
adc
test
jmp
pop
xor
leave
enter
mov
xor
aas
push
mov
out
push
sbb
push
pop
das
outsb
js
sub
imul
pop
fldcw
movsl
ljmp
addr16
dec
mov
jnp
inc
inc
sub
repnz
stos
test
mov
bound
out
push
bound
lret
in
rorl
iret
cmpsb
xchg
mov
mov
adc
mov
stos
sub
jns
cltd
ljmp
cwtl
or
int
ret
push
sub
sti
mov
lods
test
pushf
aaa
jle
dec
outsl
mov
aad
xorb
and
add
stc
or
jge
sub
jns
and
loopne
lcall
mov
push
cmp
mov
cmc
inc
jecxz
lods
dec
mov
cmp
add
pop
sub
iret
xchg
cmp
data16
mov
insl
int
pop
dec
and
es
test
xchg
loop
jmp
sbb
jp
sub
xchg
outsl
xchg
repz
inc
shll
cmp
inc
lea
jns
fbld
loopne
mov
mov
fimull
cmp
mov
pop
insb
out
out
rolb
aam
adc
xor
and
sbb
pop
add
test
pop
xchg
divb
stos
push
mov
cs
cmp
xchg
rorl
ror
dec
aad
cmp
ja
dec
lds
cmpsl
or
cmpsb
fimuls
or
mov
lret
xchg
adc
test
cmpb
sbb
adc
or
mov
int3
sub
daa
stc
adcl
clc
mov
jae
clc
or
repnz
jae
cltd
cmp
rcl
xor
cld
push
pop
lahf
hlt
leave
inc
adcb
jge
rorl
test
daa
stos
cmp
scas
js
cmp
outsb
aam
push
stc
clc
or
jmp
jo
test
inc
stc
movsb
or
and
push
mov
in
or
pop
inc
ficoml
mov
adc
xchg
inc
cmp
cwtl
aam
shlb
fadds
cmp
shrb
push
fadds
mov
in
cmp
push
inc
cmp
in
push
repnz
or
into
xchg
pop
sbb
push
repnz
mov
les
mov
sbb
mov
xchg
and
std
dec
jle
mov
adc
bnd
movsb
rcrb
adc
or
imul
ds
aam
xor
fld
ret
fcmovbe
test
jbe
inc
pop
dec
cmpsl
sub
cltd
xor
lods
push
push
xorb
and
ret
jne
mov
ret
pop
movsb
add
push
inc
in
aam
mov
fnstenv
push
xchg
mov
and
mov
add
lock
sbb
repnz
and
call
sti
add
push
push
into
push
inc
add
fcoms
sub
xchg
arpl
push
sub
out
push
fwait
or
loopne
jae
mov
imul
ss
incl
cmp
jg
aad
ret
les
sbbl
cmp
out
bound
js
jmp
xor
xor
pop
cmp
js
cltd
add
cs
inc
xchg
lcall
add
movsb
jecxz
pop
xchg
into
sbb
inc
inc
mov
pop
mov
sbb
cmc
sub
cmpl
in
loopne
in
rorb
mov
jp
pusha
push
sub
lcall
or
xor
jns
fsubr
lret
or
aam
xchg
push
jp
or
lret
or
dec
mov
mov
xchg
out
les
shl
hlt
roll
nop
pop
sbb
mov
dec
add
fildl
movsl
cmp
sti
in
xor
rclb
xchg
adc
lcall
xor
out
adc
out
push
outsb
movsl
push
rclb
ss
push
aad
xor
sbb
inc
pop
fwait
jg
cltd
push
sbb
test
push
pop
add
jb
rcrb
stc
addl
lret
inc
dec
sbb
sbb
inc
xchg
fs
mov
mov
adc
movaps
xor
push
ss
inc
imul
and
pop
inc
mov
testb
nop
cs
pusha
lcallw
test
jns
mov
cwtl
fdivr
sub
and
jmp
push
mov
data16
push
rcrl
ss
out
jecxz
inc
dec
xor
adc
inc
pop
mov
lds
and
icebp
mov
aad
mov
insl
xchg
test
lds
int3
repnz
or
mov
leave
dec
xchg
adc
je
sahf
movsl
filds
and
jecxz
xchg
sub
loopne
ds
jg
xor
repz
mov
xor
xchg
fdivs
pop
pushf
cmpsb
ret
std
out
fcmovnb
jo
dec
dec
ljmp
sarb
inc
mov
test
bound
inc
push
dec
iret
sub
push
mov
sub
or
mov
push
shll
js
xorl
and
adc
push
dec
add
imul
dec
lea
aad
mov
dec
dec
mov
addr16
pop
addr16
stc
and
data16
adc
inc
xchg
dec
aas
jp
out
in
shll
repnz
mov
xchg
lods
push
push
lcall
push
arpl
fs
lock
idivl
mov
movsb
cmpsb
inc
add
stos
popf
xor
in
out
add
out
inc
adc
jge
xor
ds
es
dec
mov
xor
push
in
aad
cmp
or
sub
fdivrp
idivl
xchg
push
mov
loope
jp
push
and
cmp
mov
sbb
inc
jmp
cmp
sbb
and
inc
mov
test
mov
adc
jo
jle
lods
mov
cmp
test
loopne
fbld
in
idivl
lods
and
fwait
add
add
in
cli
outsb
jnp
jmp
fistpll
sbb
leave
repz
jge
push
ret
out
jl
adc
push
inc
mov
icebp
je
sub
xchg
cwtl
lahf
sti
jno
add
mov
mov
push
jle
dec
pop
jp
cltd
sub
jbe
and
int
loopne
dec
icebp
jmp
bound
mov
dec
sahf
pop
xchg
lret
mov
or
mov
add
bound
pusha
pop
adc
je
mov
lds
pop
cmp
repnz
add
or
adc
xchg
int3
aad
clc
js
addl
add
mov
scas
in
inc
add
inc
arpl
mov
sbb
rorl
insl
fistl
pop
sbb
and
stos
dec
nop
out
pop
xlat
adc
movsl
jl
clc
sbb
inc
xchg
push
loop
mov
push
fcmove
push
and
xlat
xchg
add
out
xor
lahf
es
ljmp
ret
into
pushfw
ret
arpl
aaa
roll
ds
enter
pop
mov
clc
sahf
cmpsb
loop
mov
fildll
and
cmp
movsl
mov
inc
repnz
cmp
sbb
mov
and
in
shl
jmp
mov
movsl
ljmp
cld
xlat
call
cmp
aad
aaa
rep
pop
push
xchg
adc
and
fsubrp
sahf
fldt
aaa
scas
cmp
out
and
sahf
lds
pop
movsl
mov
enter
ret
and
icebp
in
sub
scas
leave
or
in
mov
add
outsl
loope
daa
inc
or
das
jns
icebp
ja
mov
push
stos
fs
mov
flds
data16
dec
out
lods
push
dec
add
jae
or
mov
push
or
ret
popl
inc
push
add
cs
add
jbe
xchg
or
es
mov
lods
jae
daa
clc
inc
lret
popa
orb
out
icebp
jo
or
setns
sbb
sbb
lret
xchg
inc
sbbb
sub
lds
push
mull
aas
push
cmp
rclb
inc
inc
xor
notl
mov
cwtl
rolb
xor
cmpsl
push
dec
jns
push
out
js
and
std
sar
subb
lods
arpl
adc
cwtl
subl
pop
jp
loopne
push
clc
mov
cmpsb
pop
clc
stos
ret
jae
push
or
sub
in
leave
shlb
cmp
push
push
inc
out
std
pop
popa
xchg
push
mov
xchg
loop
mov
test
stos
push
outsb
lods
insl
mov
dec
icebp
mov
arpl
sbb
mov
scas
arpl
movsl
pop
lcall
pop
rorl
add
jge
rclb
shlb
add
or
cmp
pop
or
add
daa
xchg
nop
sub
js
pop
stc
lret
loopne
add
dec
lahf
dec
or
test
jmp
sahf
dec
test
js
cmp
sar
inc
dec
ljmp
and
stc
je
xchg
mov
pop
mov
popa
inc
pusha
inc
inc
xchg
and
push
outsl
notl
das
xchg
cmpsb
data16
xor
mov
push
int3
aaa
scas
or
int
inc
jae
adc
cli
rcrl
lret
loopne
out
sbb
nop
mov
stos
xchg
data16
fimuls
cmp
clc
fisttps
adc
rorb
inc
lds
insl
xchg
and
out
imul
aad
mov
lds
mov
fwait
aas
clc
test
add
shr
cmp
inc
jo
les
xchg
push
es
mov
and
push
and
or
xchg
add
or
call
test
cli
mov
out
push
push
pusha
dec
imulb
aaa
xchg
jne
test
shll
xchg
jle
sar
test
fisubs
loopne
or
push
outsb
es
cmp
push
mov
cltd
dec
rorb
mov
ds
pop
setg
push
pusha
sbb
cld
aam
outsb
add
stc
dec
not
lea
push
sbb
mov
out
mov
mov
dec
inc
jb
cmp
adc
test
lret
push
mov
push
test
mov
rcr
lahf
in
push
fsubrl
cmp
inc
or
aad
stc
in
mov
xchg
push
jae
sub
mov
sbb
push
clc
cmpsl
outsl
add
stos
jno
push
sahf
daa
sbb
add
jge
adc
cmp
pop
sbb
movsl
sbb
iret
sub
shl
jg
adc
out
dec
adc
pop
mov
orb
sub
cwtl
call
test
jecxz
jae
ss
int
push
xor
mov
sub
sbb
pop
mov
jb
push
xchg
push
jle
cld
subl
cmpsl
or
mov
aas
push
sbb
test
gs
dec
cmc
and
inc
cmpsl
xchg
popf
mov
sbb
incl
clc
and
add
stos
pop
mov
mov
scas
dec
xor
xchg
andl
repnz
push
dec
mov
jmp
ret
testb
sub
cmp
je
in
scas
xchg
mov
add
xor
or
call
mov
sar
xchg
push
add
pop
xchg
stos
cld
roll
sbb
addr16
push
adc
jl
and
and
fcoms
or
addr16
inc
inc
sbb
popa
sbb
ds
ret
mov
push
inc
dec
aam
stc
or
sub
scas
or
lea
add
out
push
dec
mov
mov
in
push
popa
add
or
adc
fbld
adc
and
test
scas
hlt
adc
inc
addr16
jo
dec
popa
fnstenv
nop
insl
call
lods
xchg
mull
and
dec
xchg
pop
arpl
xor
push
loopne
cltd
pop
ffree
jne
jp
aaa
addb
cmp
inc
into
mov
lahf
int
das
in
jmp
xor
jo
test
inc
loope
mov
xor
adc
andb
psadbw
gs
addr16
push
xchg
dec
mov
jb
mov
lahf
imul
cmp
push
sub
jge
sub
or
nop
scas
out
mov
push
ds
add
aam
out
mov
rcrb
loop
out
test
adc
mov
jp
sbb
cmp
addr16
add
dec
push
out
jecxz
daa
aad
and
scas
movsb
mov
jnp
or
dec
int
fcmovnbe
jl
pop
xor
dec
popa
outsl
dec
cltd
loope
jle
rcrb
adc
popl
pop
adc
and
fadd
inc
pop
lcall
jecxz
cmp
inc
push
and
mov
xlat
xchg
pushf
mov
lret
popa
push
fcompl
or
mov
push
lret
xor
dec
or
jp
insl
mull
push
jmp
or
jnp
shr
repz
lock
stos
and
test
lret
lods
cmpsl
data16
add
mov
pop
test
ret
lods
mov
cmpl
push
mov
jp
or
jge
xor
dec
test
negb
lods
stc
pop
test
sbb
add
inc
out
and
es
cmp
in
mov
jbe
in
rorb
nop
or
pop
cmpsb
and
mov
sti
mov
sbb
inc
mov
pop
fsubrl
pop
or
pop
inc
mov
cmp
fs
test
add
fwait
and
inc
mov
jnp
lds
jmp
in
add
mull
add
xchg
repz
dec
cmpsb
out
jno
xor
inc
mov
mov
out
insl
mov
ss
insl
sbb
dec
xchg
inc
sbb
push
push
out
jnp
ret
hlt
aam
sbb
mov
fucom
sub
sbb
lret
stc
push
lods
neg
lods
mov
lods
or
jo
xor
xor
xchg
xor
mov
pop
sub
movsb
test
test
fcom
sbb
divb
xchg
inc
int3
cmpsl
pop
and
adc
fimull
scas
cmc
lods
or
xchg
cmc
mov
or
scas
les
push
loopne
outsl
es
and
mov
sbb
xchg
mov
and
call
out
jl
xchg
inc
jmp
or
push
mov
push
mov
jo
add
js
sub
rorl
out
fistpll
aam
sbb
fcmovne
mov
iret
cmp
adc
gs
jbe
mov
and
mov
data16
pop
subl
mov
lahf
shrb
push
clc
xchg
push
xchg
mov
dec
add
mov
mov
or
movsl
mov
mov
jne
sbb
and
cmc
jge
adc
and
clc
add
sub
dec
lret
ljmp
movsb
adc
xchg
mov
call
inc
adc
gs
pop
ret
sub
aad
adc
sbb
sbb
add
push
pop
cmp
sbb
test
or
cs
mov
sub
ja
xor
or
pop
pop
mov
imul
out
mov
addb
dec
cmp
fs
sbbb
mov
xchg
and
push
lea
outsl
mov
jno
sub
and
data16
lea
cvtpi2ps
pop
into
mov
cltd
das
mov
push
jecxz
mov
pusha
dec
imul
inc
xchg
mov
cmp
or
fst
dec
push
xchg
dec
jbe
cld
daa
ds
jnp
inc
push
dec
push
popf
jno
pop
dec
xor
pop
cs
push
mov
je
gs
adc
sahf
scas
in
hlt
mov
les
mov
nop
sbb
push
test
pop
gs
or
sbb
repnz
movsl
xchg
mov
fldpi
mov
in
jge
fnclex
gs
xlat
daa
je
mov
cs
lods
push
pop
mov
cmpsl
push
jecxz
push
xor
pop
arpl
sub
mov
xchg
in
repnz
imul
jno
lods
into
jne
xor
ss
mov
fwait
xchg
push
dec
lods
rolb
loopne
popl
mov
mov
pop
mov
daa
dec
jmp
adc
xchg
xlat
lea
xor
jb
mov
gs
jae
inc
test
cmp
notl
dec
and
lea
stos
lea
sub
and
fsin
dec
adc
in
scas
inc
repnz
lret
push
or
mov
outsb
or
cmp
push
xchg
inc
lea
ret
cs
loopne
xchg
inc
imul
lea
jns
mov
mov
jmp
mov
xor
or
arpl
les
in
jne
xchg
xchg
lea
data16
inc
movsb
cld
pop
jns
loop
lret
sarb
fidivrs
add
pop
mov
pcmpgtw
dec
in
xchg
mov
insb
pop
sbb
mov
mov
dec
sub
cmp
loop
mov
lcall
add
jle
or
in
fistpl
fildll
or
movsl
hlt
jp
subb
mov
sahf
scas
add
addl
adc
xchg
int
cmp
and
xchg
les
xor
out
and
loopne
mov
popa
or
loopne
xchg
add
inc
mov
std
out
mov
sub
add
dec
or
push
sub
dec
adc
mov
sub
jne
popf
add
pusha
lods
and
mov
in
daa
mov
dec
xor
mov
fdivs
xor
or
mov
and
pavgb
add
mov
jl
pop
cltd
pop
test
mov
fcmovne
int
loop
nop
js
dec
add
sbb
imul
jns
movsb
lea
sbb
push
jle
daa
sbb
movsl
and
into
lods
adc
dec
mov
dec
es
and
sub
hlt
popa
movsb
mov
ds
push
aaa
rorl
xrelease
jae
aas
pop
push
in
jl
mov
mov
cmp
popa
push
inc
mov
lret
mov
hlt
rcrb
daa
gs
cmp
ja
sti
push
je
mov
mov
xchg
or
flds
jae
or
sbb
insb
jp
and
pop
xchg
dec
lret
lret
mov
adc
cmp
adc
cmp
fdiv
jbe
xlat
out
test
adc
or
cmpsl
cld
pusha
adc
dec
jnp
push
push
jmp
movsb
pop
add
loopne
imul
push
fisttpl
jbe
popa
imul
sub
dec
cmp
les
gs
adc
sub
mov
pop
mov
xchg
mov
aam
cmp
adc
call
aaa
arpl
rol
push
clc
push
push
jmp
mov
jle
aaa
enter
test
jnp
in
imul
xchg
leave
dec
jae
ss
or
xchg
sub
adc
pop
int3
or
mov
push
mov
sub
xchg
test
movsb
sbb
test
mov
inc
movb
xlat
les
into
inc
cmpsl
adc
insb
sub
in
xchg
mov
lret
cmp
add
loope
cld
mov
dec
mov
mulb
pop
int3
mov
sti
adc
lock
outsb
lock
inc
jae
cli
clc
mov
cld
lods
adc
jo
mov
add
fadds
pop
in
mov
mov
sbb
sbbl
pop
pop
inc
or
add
lea
stc
or
fisttps
mov
inc
div
lcall
jne
outsb
cmp
pop
jl
pusha
out
xor
mov
xor
sar
pop
int
add
imul
push
push
xor
stc
push
fs
aaa
int
repnz
pop
or
test
sub
repz
lods
mov
dec
mov
mov
lock
mov
adc
fidivrs
push
mov
movsb
cmp
les
mov
inc
lods
push
loopne
ljmp
lock
lds
xor
and
rolb
cs
inc
sarl
adc
jmp
rclb
and
add
mov
jge
fwait
repnz
int3
in
ja
imul
lcall
jecxz
xchg
mov
sbb
data16
mov
pop
loope
repz
adcb
insl
add
aaa
js
jl
sarb
cmp
pop
and
add
xor
idivl
mov
das
add
inc
fs
je
lret
mov
jnp
insl
in
in
adc
popa
in
adc
lods
cmp
pop
push
dec
or
in
xor
pop
and
mov
xchg
cmp
mov
mov
in
int3
add
loope
pop
bound
cmpsl
lock
sub
test
cmp
pop
adc
sbb
pop
inc
jl
arpl
cwtl
mov
negb
mov
sarb
dec
int3
stos
mov
mov
or
into
mov
push
test
xor
dec
js
pop
ret
out
stos
out
xchg
mov
popa
mov
rcrb
pop
push
test
leave
cmpsb
lods
gs
rcr
mov
dec
pop
mov
inc
push
jmp
int
push
mov
xchg
mov
ds
test
int
fildl
cwtl
mov
lock
cmpb
push
pop
xor
incl
pop
xlat
pop
hlt
dec
inc
push
push
cwtl
or
xchg
xlat
shl
lret
inc
push
dec
pop
mov
sub
push
mov
hlt
scas
sub
imul
sbb
adc
xchg
mov
mov
aad
rclb
sar
mov
mov
in
pop
pop
xorb
movsb
jp
repz
jnp
pop
push
fs
mov
pop
sbb
ficompl
in
sub
repz
jg
jns
enter
fsubrs
push
mov
adc
cld
in
mov
sbb
enter
adc
filds
inc
add
lret
shll
out
inc
xchg
add
mov
cmp
xchg
xchg
out
cwtl
es
pop
imul
data16
mov
push
mov
xor
pop
sub
lret
pop
insl
xchg
repz
sub
aas
pop
sbb
push
fildll
mov
sbb
adc
add
adc
in
mov
pushf
cmp
lret
add
adc
mov
mov
cmp
mov
mov
es
cmp
add
push
fcmovb
cmp
xchg
cmc
jmp
mov
cli
ja
shrl
xchg
sub
jne
rolb
add
sub
push
cld
sbb
stc
sbb
fiadds
cmp
jbe
call
mov
adc
sbb
pmulhw
jae
in
in
cmp
add
jbe
jge
pop
ret
xor
dec
aam
sbb
dec
popl
jmp
or
addr16
lds
pmulhuw
pushf
das
mov
pop
dec
xchg
enter
mov
adc
mov
dec
idivb
push
out
mov
mov
jae
add
dec
xchg
jmp
dec
mov
mov
rclb
push
jle
dec
inc
aam
jb
jns
pop
je
inc
push
pushl
add
bswap
int3
inc
mov
sub
mov
jge
lods
lret
dec
mov
cmp
xlat
aam
hlt
aaa
cld
es
mov
add
push
imul
adc
push
pop
push
ret
mov
pop
ss
mov
nop
jmp
gs
out
mov
xchg
das
data16
jmp
loope
repnz
pop
pop
add
mov
movsb
mov
fwait
xlat
jg
or
push
mov
mov
jmp
pop
arpl
ret
mov
pusha
xlat
inc
cmp
int3
fnstcw
mov
and
std
ret
add
push
pop
cmp
scas
mov
adc
pop
mov
loop
dec
jno
cmp
push
in
jge
adc
mov
dec
mov
adc
andl
je
xor
loopne
cmpsl
addr16
lret
call
push
clc
cmp
insb
enter
call
call
mov
sbb
test
dec
ja
pop
dec
mov
pushf
mov
or
pop
inc
lcall
fistpll
stos
rolb
jg
sbb
leave
out
imul
mov
mov
scas
push
add
jg
mov
xor
in
dec
scas
mov
sahf
pop
xor
les
or
rcrl
cmp
add
xchg
mov
jb
push
jl
push
pop
cmc
aad
add
xchg
adcb
cmp
sub
nop
xchg
dec
idivl
push
xchg
test
daa
sbb
in
mov
mov
pop
jbe
pop
or
mov
xchg
jmp
inc
fcos
iret
enter
lds
mov
inc
movb
add
adc
bound
insl
mov
sub
insl
pushf
es
popa
push
imul
test
jge
adc
sub
lahf
adc
in
xor
aaa
mov
hlt
mov
dec
jmp
imul
fmull
je
jmp
jbe
loope
pop
inc
int
xchg
fdivrs
repnz
adc
push
mov
insb
or
mov
xor
jns
pop
jp
scas
add
mov
add
lods
ljmp
xchg
mov
dec
inc
push
or
push
add
jl
sbb
jg
jae
push
divl
test
fstpt
divl
add
push
push
clc
sub
jno
and
pop
jge
mov
jmp
mov
lahf
out
mov
pop
or
test
push
js
fdivs
js
cmc
push
jo
xchg
cmpsl
jns
mov
lods
jp
rcrl
iret
pushf
lahf
out
mov
incb
add
imul
movb
jb
sub
aad
repnz
adc
sbb
sbb
test
cmp
pop
pop
sti
call
mov
xor
jp
mov
mov
and
pop
out
test
cs
jnp
inc
xor
sub
push
or
and
xor
cmp
pop
push
dec
sbb
adc
cmp
aaa
je
leave
enter
inc
pop
sbb
adc
test
jl
dec
mov
lcall
mov
rclb
stos
jbe
dec
in
add
or
xchg
inc
jle
add
pusha
testl
scas
js
std
mov
add
push
out
inc
fimuls
jns
out
fisttpl
xchg
mov
mov
lea
mov
fbstp
leave
push
push
stc
jae
sbb
mov
into
movsl
add
sbb
imul
adc
pop
les
and
ds
call
addb
cld
stos
ja
jnp
adc
mov
inc
cmpsb
insb
fs
push
ja
notb
leave
fnstsw
lods
xchg
jb
mov
je
and
popa
fisubs
into
ja
hlt
sbb
imul
fnstenv
push
cld
shll
lods
setae
cmp
sti
mov
mov
sbb
js
mov
mov
dec
addl
inc
pop
lods
or
sbb
faddl
insl
cld
imul
dec
enter
push
jge
mov
cmp
cltd
add
or
lea
cs
jg
sub
and
psubusb
icebp
clc
or
fisttpll
dec
mov
push
inc
jmp
int3
push
cmp
ds
outsl
stc
adc
sti
aas
mov
mov
adc
jle
jnp
jl
mov
mov
aam
inc
jmp
mov
test
mov
or
jl
frstor
pop
std
xor
dec
fs
inc
dec
pushf
lcall
pop
test
jo
sbb
ret
inc
or
push
sbb
xlat
cmp
jp
jnp
mov
sub
js
push
sahf
popf
pop
xlat
push
lods
pusha
cmp
js
movsb
mov
adc
adc
jmp
data16
pop
movsb
mov
xchg
shl
repnz
in
stos
pop
icebp
fbstp
inc
pop
fnsave
fisttps
mov
pop
mov
sahf
jae
in
outsl
lods
mov
adc
in
mov
adc
sbb
pop
fwait
lds
jns
fmulp
push
in
cmpsb
lods
gs
outsl
cmpsb
decl
cmpl
mov
mov
bound
mov
cmp
pop
add
mov
out
mov
xorl
fldcw
jnp
lock
les
hlt
data16
push
repz
scas
jle
jecxz
mov
lret
xchg
or
and
push
pop
sub
cmp
fdivl
sbb
inc
cmp
adc
jge
sbb
xchg
mov
and
lods
sti
scas
add
lahf
adc
bound
add
enter
call
push
mov
xor
fldcw
js
je
xchg
push
pop
subl
loopne
mov
in
jbe
mov
cmp
add
add
popf
fistpll
imulb
fistl
sbb
and
movsl
sti
cltd
xchg
mov
bt
les
mov
sti
pop
push
cmp
popf
mov
mov
mov
pop
out
adcb
movsl
adc
ss
sub
dec
sub
sbb
rclb
test
fdivrs
fcoml
and
aaa
jge
pop
es
ss
xchg
mov
adc
stos
add
test
sbb
jp
inc
cmpsl
xor
ja
pop
test
filds
sahf
cltd
lock
add
fdivl
adc
sti
dec
push
neg
mov
cli
cli
mulb
nop
ljmp
pop
jmp
sbb
or
mulb
dec
lahf
mov
push
xchg
lea
or
ret
inc
push
lret
stc
ss
sbb
popa
dec
pop
je
in
loop
push
inc
sti
mov
sbb
mov
mov
insb
xchg
sbb
pop
addr16
or
sbb
inc
add
or
or
fnstcw
test
loopne
movsb
loope
sbb
cltd
dec
adc
clc
mov
nop
into
cmp
aam
lret
ljmp
dec
or
adc
cmpsb
mov
mov
jp
outsb
cmp
adc
mov
lcall
cmpsb
xlat
cmc
jb
fs
jmp
cmp
leave
lret
cli
adc
test
out
loope
lods
sub
jnp
sarl
and
sahf
inc
xchg
xchg
jg
adc
repz
cmpl
mov
shlb
fsubrl
inc
jmp
sbb
fdivs
test
cmp
push
pop
sub
sbb
pop
and
cmp
jae
jno
addb
cmp
inc
and
pop
mov
sbb
and
fldcw
jg
out
in
adc
int
mov
cwtl
mov
fnstsw
inc
std
bound
add
bound
out
sub
jmp
icebp
inc
dec
mov
in
xor
hlt
and
enter
mov
inc
mov
popf
sbb
addr16
shl
out
pushf
xchg
adc
loope
testl
lahf
jbe
cmp
cmpsl
test
cmpsl
pop
hlt
mov
push
xchg
aaa
pop
cmpsl
test
lret
jecxz
inc
fsubs
sub
ja
iret
sbb
push
sub
push
in
pushf
xor
out
movsb
mov
cmp
lock
shll
aas
xor
into
je
xor
sarl
adc
outsb
out
mov
mov
ret
sbb
sub
sub
out
shll
insb
aas
scas
and
cli
mov
cmpsl
xor
xchg
and
sub
aaa
mov
push
jl
les
lret
ficoms
pushf
and
lcall
call
cmc
loope
sub
aam
popf
orl
clc
and
out
mov
push
mov
sub
xor
pop
roll
aad
int
mov
jnp
inc
daa
cmc
rorl
fsubrs
xchg
dec
nop
jl
jns
inc
frstor
push
sub
daa
mov
push
mov
sbb
mov
and
js
xor
popf
subb
fdivl
stos
fcompl
sbbl
adc
xchg
pop
and
mov
push
ret
loop
inc
cld
jae
outsb
push
aad
imulb
and
test
push
push
push
xor
pop
lcall
jge
cmpsl
mov
mov
cld
in
lds
mov
jno
mov
js
push
stos
outsl
or
das
add
insl
xchg
add
mov
pop
mov
jno
sbb
lods
sbb
gs
push
xor
push
xor
mov
and
ja
fbld
in
push
out
mov
sbb
pop
out
ja
xchg
jb,pt
imul
ljmp
dec
cli
push
frstor
out
ljmp
ss
into
jecxz
pushf
inc
negb
inc
dec
mov
stos
jns
cmc
sub
mov
test
int
dec
mov
jp
dec
dec
xor
or
cmp
mov
mov
outsl
add
sbb
test
aad
xor
call
fs
cltd
pop
push
hlt
out
dec
cmp
roll
imul
mov
popa
dec
jae
test
push
in
xchg
fs
add
in
gs
push
dec
sarb
out
out
decb
jmp
push
add
mov
leave
xchg
mov
jae
mov
and
lods
inc
pop
test
dec
push
in
and
cmpsb
jbe
into
mov
dec
and
xchg
fcmovnu
mov
test
pop
inc
rolb
stos
pusha
cld
xchg
in
push
inc
fisttpll
scas
stos
sub
flds
imul
push
xchg
loop
aam
xchg
cwtl
ret
addps
mov
pop
mov
fnstenv
push
jmp
data16
testb
pop
std
outsb
jb
fcomps
jno
aam
mov
mov
inc
dec
mov
xchg
jae
lret
sub
mov
cmp
mov
mov
insb
ret
jo
lahf
sub
shll
xchg
lret
fsubl
scas
inc
lret
jns
fsts
es
add
or
jae
push
push
mov
mov
cmp
fdivl
repz
sti
push
popf
inc
or
xchg
xchg
xchg
add
outsb
shlb
idiv
test
dec
xor
push
jecxz
addl
in
lahf
adc
sub
xchg
pop
into
and
lods
mov
xchg
cmp
addr16
add
fcoms
xor
lahf
rclb
add
inc
add
push
and
dec
inc
push
mov
std
push
test
mov
stos
rcr
loopne
dec
mov
clc
sbb
iret
dec
hlt
fldt
xchg
sbb
daa
jle
or
and
mov
jno
outsl
and
mov
inc
jg
xchg
add
loopne
sbb
pop
inc
notl
push
and
rol
jo
mov
push
fisubrl
mov
push
pop
insb
mov
or
dec
fcmovnu
adc
movl
jl
push
or
inc
push
xorl
or
bound
orb
sub
adc
inc
into
xor
mov
shl
es
popf
ret
push
adc
lret
sub
push
lahf
or
jbe
pop
imull
xchg
cmpsl
in
adc
int
xor
in
dec
add
mov
xor
inc
fldt
fisubl
push
jp
sarl
in
aam
jl
or
jmp
push
jle
movsb
ret
test
cmpsb
xor
xor
mov
std
inc
lds
je
popa
popa
adc
cli
add
adc
nop
call
mov
fisubrs
dec
mov
imul
xor
mov
jo
push
subl
movsb
pavgw
pop
stc
mov
cmp
pop
in
push
test
iret
outsl
test
xchg
cwtl
cs
loopne
out
orl
xor
add
dec
sub
mov
rorl
fwait
push
or
or
inc
icebp
inc
addr16
inc
aaa
hlt
pusha
sti
mov
sahf
stos
jle
jmp
sub
adc
xor
jg
or
mov
les
das
jp
outsl
js
repz
push
fdivl
mov
jle
rorb
push
dec
sub
rclb
xchg
lods
cs
pop
jbe
dec
negl
xchg
cmp
dec
cmpsl
cli
adc
aas
call
push
fimull
sbb
mov
inc
ds
mov
or
mov
clc
adc
int3
jb
push
mov
div
sub
pop
pushf
loopne
cmp
or
add
mov
adc
pop
push
or
popl
ret
push
iret
outsb
outsb
ret
scas
sbb
add
lock
dec
jno
loop,pt
aad
and
jmp
mov
sar
xor
aad
stc
adc
pop
mov
cmp
imul
cmc
or
fldt
dec
adc
inc
add
daa
mov
xchg
cmpsl
cld
adc
jmp
add
push
cld
dec
js
dec
xchg
mov
popf
das
jg
sti
xor
and
sub
insb
aam
jmp
aaa
xor
pop
pop
jnp
pushf
ljmp
lods
inc
mov
lock
push
push
xchg
or
xchg
sbb
stos
pop
or
bound
inc
fs
inc
push
jbe
cmp
stos
bound
ds
add
xor
cmpl
adc
cmp
jp
loopne
adc
pop
pop
gs
es
movsl
dec
lods
jmp
aad
add
fidivrs
inc
inc
pop
addr16
jno
and
xchg
or
fldenv
push
mov
and
inc
loopne
test
push
cmp
test
daa
cmp
pushf
fsubrl
sub
jge
jp
int
aaa
cwtl
repnz
adc
jb
das
and
in
fdivrl
cmp
iret
lret
pop
out
fisttps
pop
pop
je
mov
icebp
sbb
loope
inc
ror
lods
faddl
imul
lods
and
cwtl
mov
cmp
subb
push
add
cmp
ja
notl
mov
shlb
xor
push
jmp
and
mov
insl
lahf
inc
imul
test
pushl
movsl
cmpsl
inc
shll
mov
inc
dec
stc
jne
lock
xchg
mov
jp
jae
or
cmp
xchg
inc
and
or
icebp
push
into
aaa
cmc
sub
jmp
push
and
xlat
aam
cmp
push
lcall
pop
cli
dec
fst
push
das
fistl
sbb
lret
xchg
sbb
call
clc
mov
js
push
dec
leave
out
jge
jbe
adc
push
xchg
adc
or
sbb
sbb
mov
rorl
xor
inc
lds
xchg
inc
xchg
insb
test
ds
repz
pushf
arpl
or
shlb
adc
popa
push
aas
stos
std
push
call
mov
xchg
nop
enter
add
xchg
stos
rcr
push
push
jg
xor
sbb
icebp
movsb
pop
adc
push
pop
lods
in
int
out
and
mov
insl
or
stos
lret
and
js
jne
mov
rcrb
jp
shr
push
dec
cmp
imul
lea
out
push
roll
mov
mov
cmp
mov
arpl
mov
popa
adc
pop
jmp
rorb
pop
leave
add
in
push
mov
pop
or
dec
adc
inc
mov
inc
xor
lret
inc
sahf
add
jl
jb
sub
lods
adc
push
push
das
cs
in
icebp
test
aaa
test
sub
andl
and
or
push
and
hlt
adc
dec
mov
movsb
bound
fstpt
mov
cmp
popf
sub
xchg
sub
mov
idiv
pushf
divb
call
in
inc
imul
jge
pop
jbe
data16
mov
mov
das
pop
mov
cmp
fiadds
cli
add
mov
jge
and
filds
xor
gs
out
test
push
fstp
mov
cmp
and
jge
movsl
sbb
enter
insb
add
test
pusha
xchg
aad
mov
adc
clc
out
test
pop
flds
fstl
inc
jnp
push
xchg
xchg
mov
lcall
mov
sub
xchg
lock
or
xor
inc
xor
sbb
dec
pop
les
dec
mov
das
xor
add
push
lret
mov
iret
scas
lcall
fisttps
inc
sti
push
jns
xchg
push
test
loope
mov
xorl
and
push
xchg
sarb
jmp
and
test
cmc
fisttpl
mov
cmp
lds
insb
mov
mov
xlat
stc
xchg
jmp
jae
or
loop
cld
rclb
out
xorb
stc
mov
cmp
push
nop
jmp
sti
into
jp
test
out
push
push
cwtl
rclb
addr16
aam
sahf
into
dec
stos
lahf
xor
pop
or
cmp
cmovae
or
mov
jb
insb
orl
or
mov
mov
lret
pop
lret
cwtl
push
sub
add
loop
cmc
inc
jp
cmp
mov
inc
les
cwtl
rclb
sub
or
rolb
lcall
push
xchg
ret
xor
mov
addl
aaa
je
call
jno
pop
fbstp
pop
cmpsb
push
arpl
out
cltd
ss
jne
outsb
lcall
loopne
sarb
xchg
mov
popf
cmp
or
sub
mov
nop
add
sarb
inc
das
inc
sbb
fdivl
pop
xor
mov
in
mov
out
dec
cmc
cltd
out
ja
insl
inc
adc
jno
repnz
sub
pop
dec
cmpsl
xor
xchg
enter
mov
cmp
mov
cwtl
test
out
shll
xor
fildl
cmp
testl
adc
inc
call
fs
cli
jge
loopne
mov
hlt
push
sbb
dec
jae
cmp
clc
and
inc
fnstsw
jmp
aad
imul
cltd
inc
repz
jns
pop
mov
in
inc
xchg
push
in
mull
pop
dec
inc
imul
mov
or
ja
xchg
dec
lds
jns
roll
mov
aas
pop
inc
or
fs
add
out
push
leave
mov
in
adc
pop
push
outsb
lods
push
jnp
jbe
dec
inc
scas
mov
inc
bound
cs
push
insl
mov
call
or
mov
pop
scas
shrl
pop
scas
std
add
push
adc
mov
call
clc
xchg
pop
sbb
sub
push
or
out
movsb
in
add
jno
cmp
inc
shll
cmc
addl
mov
js
xchg
cmp
sub
xlat
roll
decb
add
inc
push
dec
cmp
leave
jl
xor
push
std
fistpl
test
fcomi
add
movsl
into
in
stos
mov
push
pop
xchg
into
push
add
ja
popf
in
mov
add
adc
lahf
or
adc
lds
scas
sar
fldenv
pop
daa
jmp
daa
or
lcall
and
sti
cmp
adc
add
sbb
mov
mov
lahf
xor
dec
addr16
dec
mov
rcrb
pop
cmp
dec
and
mov
push
xor
shlb
clc
lahf
or
outsb
stos
dec
pop
or
gs
js
adc
cmp
insb
je
dec
jns
jns
adc
dec
xchg
push
je
pop
loop
sti
sahf
mov
lret
pop
lock
adc
lds
pop
lods
mov
sub
aas
ficomps
mov
notb
decl
out
addr16
and
fidivs
arpl
enter
push
ss
in
xchg
loopne
xor
mov
sub
or
pop
jae
jns
test
fldt
addb
in
in
inc
pop
rcll
jecxz
xor
mov
inc
mov
pop
out
inc
outsb
fdivrs
decl
lock
fistl
sti
xchg
es
mov
mov
jl
hlt
pop
cld
adc
das
iret
lds
mov
jmp
cmp
popf
mov
lcall
xchg
push
iret
notl
in
pop
jns
mov
loopne
mov
or
sbb
fmull
fstpt
fwait
aam
cmp
mov
mov
movsl
fmulp
push
xor
mov
xor
mov
cmp
bswap
lods
xchg
jmp
lret
mov
sti
jne
lods
filds
ret
pop
and
outsb
pop
nop
shll
push
sahf
mov
aad
scas
aaa
or
push
rorl
loop
dec
filds
aaa
cmp
ss
mov
dec
and
push
mov
inc
leave
inc
jnp
insl
or
fdivl
sub
jb
lock
xor
je
lcall
adc
dec
pushf
add
push
pushf
or
add
gs
jne
mov
outsl
fbstp
add
dec
cmp
xchg
cmp
mov
in
or
mov
clc
cmp
adc
xor
fdivs
movsb
movsl
fsts
push
sahf
ret
lret
cmp
fistps
cmpsl
pop
ds
and
mov
repz
mov
jbe
pop
xchg
sub
xchg
das
fistpll
test
movsl
pop
mov
cmp
inc
sbb
shlb
xorb
aam
mov
push
sub
lock
out
and
dec
pop
popf
fwait
es
push
shrb
dec
int3
mov
push
test
inc
mov
xchg
and
pop
pop
inc
outsl
adc
popf
je
lock
push
test
sbb
push
dec
ror
pop
jecxz
xlat
sbb
mov
enter
out
or
or
xor
mov
stos
ja
add
cmpsb
mov
cmp
xlat
inc
or
push
int
sub
movsb
pop
mov
or
shrb
lahf
adc
mov
cmp
jnp
or
fcomp
add
loope
pop
loopne
dec
push
add
jns
add
adc
jmp
test
gs
nop
arpl
lock
inc
xchg
push
or
xor
dec
addl
mov
or
cmovne
rorb
inc
lret
subb
test
test
dec
pop
cs
mov
jmp
ja
jne
cmp
in
xchg
add
invd
xor
fnstcw
jne
push
add
rorl
mov
cmp
in
rcrl
out
sbb
mov
mov
enter
fistl
fdivrs
andb
sub
push
movsl
push
pop
les
jns
pushf
dec
mov
sti
pop
and
fsubl
jmp
popa
mov
div
test
repnz
jp
cld
pop
test
cmp
fiaddl
jp
mov
adc
push
and
cld
fdivr
push
dec
pop
xchg
dec
hlt
ljmp
mov
in
mov
lds
inc
xor
outsl
dec
cmp
mov
xchg
scas
lahf
rcrl
pop
das
cmp
jae
push
cmp
bound
jbe
pop
jle
loope
pop
int
test
cld
dec
aad
push
mov
loope
es
jae
stos
add
pushf
and
gs
lcall
add
jmp
fistpl
icebp
lret
arpl
bound
call
sahf
loopne
pusha
pop
loope
push
or
aam
sub
fmuls
leave
in
shll
icebp
stos
adc
jmp
xor
outsb
xchg
aaa
decl
sub
leave
inc
in
jns
jne
jecxz
xor
repnz
sbb
xor
adc
test
sbb
ret
jns
fdivrl
cli
dec
push
arpl
mov
mov
xor
push
xchg
stc
pushf
adc
pop
orb
mov
jnp
mov
cmp
dec
pop
or
sub
cmp
jle
xchg
pop
pop
js
sbb
lahf
inc
ror
xchg
push
fldz
dec
pop
adc
nop
lds
push
call
cmp
inc
mov
sbb
sahf
push
push
mov
mov
xor
addr16
insl
jmp
idivb
dec
mov
mov
xor
mov
leave
or
sti
pop
push
inc
arpl
fnsave
xchg
jae
adc
cmp
pop
sub
jns
mov
fildl
fstps
adc
jmp
push
dec
popf
add
adc
inc
icebp
pop
or
sbb
add
inc
fwait
leave
mov
jmp
imull
push
push
mov
pop
iret
xorb
imul
jecxz
and
sbb
jbe
dec
addl
test
push
or
dec
sub
movsb
xchg
cmovno
movsb
mov
mov
repnz
fs
arpl
hlt
sub
jg
sbb
mov
pop
xor
pushf
icebp
cmp
mov
sub
sbb
fs
std
cmp
push
dec
adc
in
mov
adc
dec
jecxz
push
add
je
push
adc
int
adc
jno
test
stos
adc
stos
inc
inc
or
push
xchg
push
rcrb
lods
or
ss
and
or
sahf
leave
or
frstor
rclb
adc
loop
inc
les
jnp
outsb
pop
jecxz
outsl
inc
mov
sbb
push
add
inc
sub
push
push
and
ds
add
adc
push
or
jmp
ss
repz
imul
es
xchg
add
insl
loope
jp
negb
push
inc
mov
ret
and
pop
mov
stos
pop
xchg
ljmp
aaa
or
adc
movsl
sub
movsl
mov
xor
jnp
dec
mov
dec
push
and
movsb
push
stos
dec
dec
gs
pop
repz
daa
maxps
and
pop
lods
pop
mov
mov
xchg
leave
fs
cmpsl
addl
rorl
lock
mov
lock
out
sub
nop
cmp
nop
sub
mov
imul
inc
arpl
adc
aad
ljmp
mov
dec
sub
out
lahf
iret
pushf
sub
push
fistpll
jp
jae
je
je
mov
jg
out
add
sbb
xlat
adc
sbb
shrb
int
mov
cmpb
dec
lret
cmp
push
xorb
data16
ja
mov
cld
outsl
jo
inc
out
std
lret
cli
fs
daa
mov
pop
xchg
fcmovnu
fstpl
mov
js
mov
in
fs
lds
jmp
mov
inc
cs
mov
int
pusha
push
or
int3
push
pop
jecxz
push
inc
mov
push
cli
addl
pop
jne
cmc
rolb
pop
test
lods
outsl
lds
pop
fs
cmpsl
jp
jmp
fdivr
jb
lds
mov
mov
mov
sub
and
data16
jmp
push
ja
data16
shl
xchg
or
sbb
pusha
cwtl
adc
push
call
addr16
add
negb
cmp
cli
push
xor
xchg
mov
mov
sbb
filds
inc
push
adc
jg
roll
jnp
mov
xor
fiaddl
sub
mov
mov
mov
mov
pushf
xor
pop
shll
add
aas
aad
pop
les
or
pop
mov
popf
dec
jne
ficompl
push
ret
rcrb
hlt
lret
xor
add
mov
into
sbb
or
sti
and
sbb
mov
xor
test
data16
push
xorl
lock
xchg
out
lds
xor
xchg
ret
mov
mov
mov
faddl
jnp
adcl
lea
xchg
es
mov
je
jbe
imul
sti
sub
xchg
iret
js
js
or
std
leave
outsl
jge,pn
lods
stos
pop
mov
stc
dec
cmpsl
les
mov
in
mov
jnp
in
fwait
sbb
jg
jb
movsl
fisttpll
push
out
jno
mov
gs
insl
les
xchg
mov
scas
int3
add
es
enter
imul
imul
or
into
test
mov
mov
pop
je
push
ffreep
jg
jae
es
test
fwait
stos
das
sbb
cwtl
mov
adc
movsl
scas
sbbb
data16
sbb
push
rcll
add
jmp
adcb
es
jno
pop
mov
in
orb
mov
movsl
in
dec
adc
out
cmp
xorb
mov
loopne
in
iret
xchg
popf
mov
lods
jecxz
mov
push
adc
xor
mov
lock
call
fsubs
mov
daa
push
add
add
mov
pop
movb
ss
fstpt
jne
adc
cmpsl
aas
xchg
mov
cli
sub
mov
jo
push
inc
or
rclb
add
or
insl
xor
mov
and
hlt
xchg
xor
add
sti
daa
and
out
lods
loopne
ror
add
add
or
jp
mov
out
jge
cs
mov
and
sub
xchg
out
add
jmp
je
jnp
and
xor
loope
xor
cld
mov
out
or
push
dec
decb
cltd
loopne
pop
mov
les
sbb
add
push
std
rorb
cmpsl
push
push
pop
mov
es
fisttps
insl
loop
scas
lea
fldt
push
jge
daa
pop
neg
xchg
sub
dec
adc
adc
lods
ja
or
fidivrs
jmp
std
fsubs
fincstp
fldt
sub
and
stos
out
jne
inc
mov
and
mov
pop
loop
sbb
jo
adc
orb
jo
inc
sahf
pop
pop
je
lcall
dec
mov
jmp
out
mov
fcoms
push
fcomps
int3
xor
cs
out
push
adc
test
mov
dec
cld
mov
lds
fs
loopne
or
jne
pop
mov
and
push
jl
cmp
movsl
js
lea
pop
lds
push
cmpsl
outsl
mov
dec
push
into
sub
push
in
xor
mov
outsl
hlt
out
addb
adc
xor
push
sbb
out
inc
sbb
xchg
aaa
pusha
push
adc
jmp
xlat
mov
pop
mov
xchg
xchg
lahf
add
repz
inc
add
push
inc
and
push
cmp
inc
cmpsl
arpl
fiadds
cwtl
aas
rcl
rorl
jno
mov
rclb
adc
jecxz
fadd
sub
jle
mov
jge
xchg
xchg
bound
fidivs
lret
repz
repnz
cli
les
int3
add
cs
push
sbb
pop
pushf
into
or
jno
push
data16
movsl
fiadds
cmp
clc
sbb
xor
push
add
hlt
pop
and
or
lret
int3
mov
pop
hlt
out
inc
or
jl
mov
es
inc
jg
data16
lods
dec
fsubrp
push
fstpt
and
mov
jp
sub
mov
cmp
add
cmp
dec
jge
push
mov
inc
or
enter
fildll
jl
jl
mov
fnstsw
xor
mov
and
aad
daa
mov
gs
add
or
addl
add
push
sbb
data16
xchg
inc
orb
mov
adc
and
and
fdiv
or
xchg
mov
lea
sub
cmp
jno
std
dec
cmp
pop
outsb
cli
jb
and
repnz
push
faddl
pushl
fs
mov
inc
fs
inc
inc
ljmp
lret
mov
loop
xor
cmc
sarb
push
mov
mov
lret
js
andl
sub
mov
aaa
cld
xchg
xchg
cmpsl
and
fs
xlat
cli
push
mov
add
cmp
cmp
test
sahf
fimuls
pop
jns
icebp
jle
and
lcall
cld
cmp
out
shrb
pop
bound
xor
mov
jno
cltd
sahf
jae
pop
jno
sub
push
stos
push
daa
inc
movsb
mov
sub
xchg
ljmp
xchg
dec
and
insb
inc
mov
dec
js
push
fstps
lahf
jle
popf
pop
shr
ljmp
pop
sti
xor
mov
or
scas
jp
adc
stos
push
or
fstps
fidivs
leave
insb
xchg
fldt
movsb
jbe
xor
aaa
pop
fsubrl
out
setle
jne
cmc
stos
idivl
add
push
mov
jmp
xchg
mov
sub
insl
sub
and
nop
mov
pop
icebp
js
xor
fistpll
fildll
xchg
mov
xor
cs
frstor
pop
cmp
mov
sbb
pusha
jle
mov
repz
scas
inc
xchg
mov
dec
scas
dec
rcrb
test
rcrb
mov
adc
stos
sub
int3
add
dec
push
xor
sbb
movsl
and
popf
movsl
test
or
ret
xchg
jge
lea
outsb
ret
jno
cmp
imul
subl
daa
mov
sub
xchg
dec
add
ljmp
add
rorb
pop
out
ja
icebp
mov
push
sub
jg
xchg
test
out
jecxz
in
arpl
sbb
xchg
pop
mov
xor
cmc
inc
sub
je
mov
lods
aas
inc
pusha
in
mov
lcall
cmpsb
jmp
mov
out
mov
fs
lret
mov
xor
xor
pop
js
inc
pop
jmp
dec
test
add
ljmp
xor
jo
xchg
mov
pop
adc
icebp
mov
aaa
adc
and
jg
sbb
inc
dec
daa
mov
cmp
sub
cmp
stos
mov
outsb
and
gs
add
xchg
or
hlt
in
or
xchg
pop
jae
lcall
xchg
sbbb
mov
xrelease
sbb
mov
ds
cmp
rcrl
jmp
loop
lods
sub
sbb
pushf
f2xm1
rcl
mov
mov
xchg
cmp
xchg
shrl
mov
and
nopl
pusha
mov
cmpsl
fdivs
out
in
lods
rclb
movsl
push
pushf
cmpsl
movsb
inc
mov
cmp
rcll
or
cmc
bound
aad
jecxz
rorb
sbb
js
adc
push
cmp
fnstsw
and
scas
push
test
pop
or
xchg
cs
sub
push
xchg
test
stos
add
ret
pop
mov
push
arpl
pusha
in
dec
imul
xchg
sub
pop
and
aad
xor
rol
in
mov
jecxz
push
xlat
addb
cmp
xor
mov
pop
or
insb
sub
mov
inc
sub
mov
std
dec
lea
inc
arpl
mov
xchg
xchg
rcrl
mov
inc
inc
dec
inc
out
cmp
cltd
pop
pop
les
icebp
adc
stc
mov
dec
mov
and
addl
xor
sbb
xor
dec
arpl
inc
pop
outsl
ljmp
push
lea
fincstp
dec
jo
and
inc
fstpl
shrb
cmc
cmp
out
inc
inc
shl
inc
adc
adc
mov
add
xchg
ljmp
xchg
out
lcall
jne
adc
neg
jle
push
sbb
inc
scas
lcall
hlt
push
cmp
jae
pop
push
ficompl
rol
jb
mov
push
or
aas
icebp
das
hlt
aad
mul
adc
pop
adc
jne
pushf
mov
add
nop
movb
mov
sbb
dec
xchg
add
outsb
lcall
pop
loopne
push
ret
mov
mov
and
in
adc
fnsave
outsl
dec
adc
ret
mov
fwait
int
int3
movsb
sub
mov
xor
das
movsl
cmp
push
popf
jns
pop
mov
xchg
jmp
push
inc
lods
fs
aad
cwtl
pop
xchg
sub
rclb
sbb
jb
rclb
out
scas
push
xor
int3
fistpll
sbb
aas
sbb
inc
stc
rclb
sbbl
cmpsb
adc
mov
adc
cmp
push
mov
mov
xchg
mov
push
add
testl
icebp
in
sbb
xchg
insl
adc
les
js
sub
and
hlt
mov
dec
and
in
jle
dec
xor
jmp
inc
sub
cmpsl
xchg
mov
xchg
mov
jae
dec
sti
fnop
inc
or
or
mov
ljmp
push
mov
jg
pop
dec
pop
lea
stc
dec
dec
jp
xchg
dec
jmp
add
push
aas
repz
scas
pop
dec
push
test
xor
lods
sahf
mov
fiadds
insb
dec
cmpb
repz
sub
xorb
scas
pushl
cmp
leave
cld
sub
cmc
repnz
sbb
lods
je
sub
in
pushf
xchg
xchg
dec
int
inc
sub
cmpsb
or
pop
data16
rcl
lds
jg
into
loopne
mov
call
in
sbb
cmp
loop
jne
movsb
daa
xor
dec
test
das
aaa
jns
cmc
movsl
test
and
in
ss
adc
test
sub
jns
mov
fdivr
add
leave
and
outsb
in
pop
popa
inc
mov
popf
or
fldl
mov
bound
aas
imull
xor
mov
pop
outsb
mov
orb
jmp
pop
xor
push
inc
mov
push
outsb
sti
lds
aad
jl
inc
std
lods
sub
or
add
jne
jmp
fists
mov
mov
cmp
insb
fwait
or
and
xchg
mov
fsubrl
push
cli
popa
dec
aaa
fidivrl
ret
fisubrl
xchg
mov
jno
inc
jg
sbb
lret
fwait
mov
les
pop
adc
dec
xor
mov
xchg
cmp
mov
inc
xor
cli
movl
cmpsl
or
mov
cs
mov
push
xchg
insl
movsl
dec
dec
xor
sbb
push
mov
xor
pushf
mov
mov
aaa
adc
inc
fsts
out
xchg
andb
jae
cmp
repz
mov
popa
mov
sub
outsl
dec
int
rorb
jno
jns
mov
xchg
or
pop
adc
mov
cmpsb
shl
adc
sarb
add
insb
gs
cmp
push
xor
adc
lahf
and
add
add
pop
xor
dec
mov
dec
or
loop
out
xor
push
sbb
xchg
mov
test
fnsave
mov
imul
out
pop
dec
adc
push
insb
int
xchg
cwtl
sub
inc
lock
xor
jns
jo
inc
call
data16
lock
out
ds
aas
sbb
repnz
popa
xchg
inc
cmp
inc
lods
aam
sub
xchg
stc
dec
xchg
or
ret
cmp
mov
mov
inc
adc
cli
add
mov
out
xchg
inc
adc
sahf
sahf
scas
mov
outsl
push
insl
sbb
out
adc
lahf
mov
fisubs
xor
adc
push
inc
jg
push
jne
lcall
addl
xchg
jnp
sahf
cmc
mov
push
adc
jb
lods
sub
aas
vphaddubd
imul
dec
mov
imul
repz
in
push
pop
jg
rorl
sbb
cmp
inc
and
and
cmp
mov
es
scas
ja
repz
jmp
arpl
dec
mov
insb
lds
and
mov
scas
clc
shlb
sub
push
imul
adc
jg
jg
and
adc
add
jl
push
push
add
xchg
adc
pushf
push
add
jno
test
or
jge
int3
pop
mov
jle
cmpsl
dec
push
xor
stos
mov
hlt
in
push
xchg
loope
loopne
out
insl
lods
xchg
dec
stos
int
shl
scas
sbb
cmp
push
dec
xlat
addr16
loope
js
adc
gs
pop
sub
xchg
in
jnp
ret
sub
fcomps
mov
les
or
out
mov
jno
shr
mov
idivb
movsl
mov
adc
push
aaa
xor
dec
inc
shr
mov
mov
sbb
in
xchg
dec
jl
and
push
xor
pop
lock
xchg
push
loope
and
dec
stos
dec
adc
into
mov
mov
mov
xchg
aam
fdivrs
shlb
sub
int
das
mov
add
dec
ss
jle
test
in
jo
into
push
push
jp
pusha
in
shrb
pop
sbb
push
fadds
aam
in
es
sbb
sar
xchg
outsl
rolb
cmp
movsb
sbb
jmp
mov
xlat
sahf
out
pop
mov
lahf
pushf
xchg
adc
or
xchg
dec
or
pop
jmp
mov
push
aam
lcall
dec
fstpt
jb
cmp
add
lret
and
loop
or
mov
sbb
mov
cmpsl
out
inc
xor
sub
push
xchg
test
lds
xchg
sub
loopne
and
pop
sbb
or
mov
movsl
pusha
pop
pop
and
gs
mov
and
jge
lret
mov
and
enter
in
push
bound
cmp
icebp
jno
jnp
loope
fwait
jecxz
iret
inc
in
push
clc
sahf
popa
mov
mov
add
into
mov
in
adc
cld
cmp
pop
test
pop
pop
jmp
or
pop
push
mov
mov
adc
cmp
sti
sbbl
push
les
jb
lds
xchg
dec
mov
push
xor
cmp
fldenv
mov
xchg
loop
sbb
xor
jae
cmp
das
das
push
inc
test
xor
inc
cld
stos
add
inc
or
dec
sub
and
cmp
fldenv
idivl
adc
mov
into
pop
shrb
das
inc
ljmp
lds
xchg
push
mov
int
push
mov
popa
or
jg
adcb
sbb
xor
mov
ljmp
jmp
and
test
cmpsl
adc
dec
rcl
in
cmpsl
or
lds
ja
xchg
xchg
inc
test
adc
scas
add
push
mov
adcl
push
mov
push
inc
pop
test
cmp
inc
mov
xchg
jecxz
dec
test
movsb
inc
xchg
mov
js
lret
das
mov
lds
xchg
cltd
cmp
cmp
pop
mov
or
ljmp
dec
push
mov
arpl
popa
dec
push
pop
ljmp
aas
mov
cmp
insb
je
jbe
in
out
jne
cmp
enter
pop
cmp
push
arpl
mov
dec
fsubrp
sub
das
sbb
xor
shlb
mov
inc
dec
imul
pop
add
iret
xchg
in
mov
hlt
xor
mov
icebp
popa
inc
cmc
sbb
jl
fcoms
or
mov
sub
and
js
push
fstpt
adc
xchg
out
stos
mov
jns
insl
xchg
pcmpgtw
data16
in
dec
mov
popa
xchg
rorb
sub
mov
ljmp
xchg
je
push
xor
mov
pop
dec
sub
sbb
std
insb
ds
xorb
mov
and
xor
lcall
bswap
inc
out
add
and
cmp
jb
jo
pop
fnstenv
and
sti
loopne
js
dec
xchg
mov
loope
jmp
jb,pt
std
cmp
outsb
inc
clc
dec
or
fwait
add
jnp
mov
gs
jmp
inc
fiadds
cs
push
xlat
aad
dec
daa
mulb
sub
mov
xchg
xor
jle
inc
popf
mov
cld
xchg
xor
add
mov
sub
lds
stc
ja
js
loopne
fidivrs
movsb
imul
adc
js
out
movb
pop
xor
idivb
pop
xchg
pop
scas
imulb
inc
aaa
scas
imul
and
sti
xor
ja
or
movsl
mov
pop
call
push
je
cmpsb
call
pop
enter
mov
mov
mov
push
push
dec
gs
daa
sarb
dec
push
ljmp
pop
mov
fdivl
mov
mov
sub
cmp
lcall
outsl
push
cmp
inc
and
movhps
pop
xchg
mov
inc
xlat
jno
adc
inc
xor
bound
les
jb
aas
jecxz
mov
pop
aam
aaa
in
mov
sbb
cmc
jle
repz
divb
jmp
and
push
inc
in
push
ret
and
in
xchg
ljmp
movsl
mov
jns
xor
mov
stos
loope
cmp
fst
sbb
fisttps
inc
inc
sub
test
cmp
stos
pop
fidivrs
inc
addr16
mov
mov
pop
and
lock
sti
adc
push
lods
push
xor
xchg
out
out
bound
pop
and
mov
shrl
cmp
push
mov
shrl
popa
les
xchg
sbb
xor
orl
adc
decb
inc
and
inc
cmp
rcrl
and
in
mov
test
lcall
aam
pusha
sbb
cli
mov
jle
in
mov
adc
pop
mov
xor
and
fisttps
inc
js
dec
or
cli
out
and
push
sub
in
jno
adc
xor
mov
xor
cwtl
inc
push
jecxz
outsl
inc
jecxz
ds
jge
dec
aas
push
pushf
movsb
push
rcrl
out
inc
adc
out
and
push
jno
jg
orl
push
jb
jg
or
jo
movsb
das
sub
andl
sub
pop
pop
lods
stos
sbb
pop
and
outsl
loop
adc
sbb
daa
mov
sub
sbb
fstpl
mov
scas
popl
movb
addr16
push
std
add
xor
push
inc
outsl
or
fldenv
in
leave
push
push
aas
pop
lods
pop
sbb
sub
and
ret
repz
jle
mov
ret
cwtl
out
aas
negl
lret
cmp
fstps
ja
lcall
mov
pop
sbb
shl
lods
mov
fcomps
cmp
mov
jmp
rcr
sbb
call
add
cmpb
into
or
ja
jl
sub
mov
out
ror
push
int3
subl
adcl
aad
repnz
pop
or
in
sbb
xchg
sbb
and
lods
insl
negl
add
mov
adc
popa
jne
xor
cs
into
fwait
push
enter
test
jo
push
push
sub
imul
add
push
or
popf
add
idivl
scas
xchg
inc
scas
lods
jmp
xchg
pop
dec
jb
lods
test
jo
mov
sbb
cli
lahf
pushf
hlt
sub
subb
xor
pop
jecxz
lock
adc
cmpsl
int
into
test
scas
sub
add
xlat
pop
add
ja,pn
movsb
stc
cli
or
ret
loopne
and
out
xor
fwait
cld
mov
or
call
and
mov
movsl
adc
cmp
sarl
aad
and
pop
int
inc
negl
pop
cld
test
fiadds
dec
or
rclb
mov
fiaddl
cld
mov
and
inc
and
cltd
adc
int3
xchg
pop
mov
push
cmp
enter
push
mov
dec
cmp
pop
sbb
rol
push
out
xchg
lods
dec
imul
outsl
push
stos
push
pushf
jle
jl
sbb
xor
mov
inc
out
scas
in
notb
movsl
or
sub
fwait
nop
mov
sub
cmpsb
jne
and
stos
nop
sub
popf
sbb
rclb
sbb
pop
cli
push
fildl
testb
cmp
dec
flds
push
xor
cli
cmpsb
or
imul
hlt
repz
loop
add
dec
xor
dec
shlb
movsb
lret
xlat
addr16
test
out
or
or
push
mov
jo
inc
lods
push
fidivrl
xchg
or
or
xchg
fdivrl
jo
scas
sbb
pop
test
jne
inc
sti
push
pop
lods
loopne
mov
lea
and
xorl
xchg
fbld
mov
sbb
sbb
xor
pop
push
arpl
sbb
xor
mov
roll
xchg
adc
add
jecxz
or
rolb
jmp
fmulp
fdivl
mov
ja
ljmp
les
loop
inc
std
ljmp
rcrb
imul
stos
hlt
test
push
xor
jmp
xchg
push
test
mov
push
mov
push
dec
cmp
xchg
add
adcb
pushf
xchg
xchg
rolb
xchg
adc
nop
push
xlat
notb
push
scas
mov
jns
dec
pop
or
addb
es
push
test
scas
or
lcall
xchg
pop
jge
ljmp
in
xor
mov
inc
and
mov
dec
mov
aad
jae
aam
cmpsl
fwait
push
add
pop
mov
pop
ret
sbb
movb
aad
cmp
icebp
pop
pushl
fisubrl
cmp
xor
icebp
mov
cld
xchg
rcr
dec
adc
movsl
lcall
mov
aad
addb
sahf
mov
or
mov
hlt
repnz
lea
imul
push
pop
dec
imul
mov
sub
sbb
lcall
mov
cmpsb
jns
sbb
dec
clc
cmc
adc
pop
sub
mov
addl
loopne
aam
jo
cwtl
fxtract
xor
lret
add
xchg
test
addr16
xchg
lret
dec
loop
cmp
stc
shll
lds
push
shll
xor
pusha
mov
repz
jle
mov
out
jo
dec
cmc
inc
push
cli
dec
js
movsb
cltd
xchg
pop
lds
repz
rorb
loope
or
scas
shl
sbb
pop
mov
mov
pop
fwait
jle
out
sarb
leave
pop
out
inc
inc
ss
movsl
out
loopne
ret
int3
rol
imul
mov
and
mov
je
rcl
add
push
cmpsl
dec
inc
inc
ss
test
adc
and
add
jmp
mov
js
mov
dec
dec
repz
jg
out
test
iret
popf
orb
imul
and
sub
in
dec
in
data16
jno
xor
ja
dec
ffree
ficoml
lds
add
pop
cmp
and
xchg
xlat
add
cmp
lcall
stos
int3
into
jge
ret
push
lock
lods
ret
fnstcw
clc
inc
sbb
mov
xchg
ret
mov
xor
or
adc
cmp
aam
jle
and
jne
insl
or
sbb
fstpt
xor
roll
sbb
insl
insl
or
mov
or
jp,pn
xchg
fisubs
sbb
xor
cmp
movsb
adcb
call
push
lea
in
add
dec
add
add
in
aaa
icebp
adc
jmp
pop
add
fstpl
xchg
jmp
loopne
sbb
repz
pushf
push
inc
cmp
fs
xchg
jne
push
push
cmp
mov
dec
aam
lods
xor
enter
cmp
cmp
sub
daa
add
cmp
push
inc
dec
repnz
imul
mov
or
cmpsl
mov
xor
popa
jg
or
pop
add
xchg
cwtl
pusha
fisttps
mov
loope
or
idiv
cld
mov
lea
mov
out
dec
test
sub
mov
jmp
js
in
loopne
sbb
adc
lahf
fiadds
outsl
sub
xor
bound
rclb
outsl
icebp
sbb
ds
push
pop
push
push
add
rorb
lea
or
mov
xor
out
test
or
fmuls
mov
pop
mov
nop
push
popf
shlb
pop
add
xchg
mov
add
les
add
mov
lret
jne
inc
popf
push
lahf
adc
jno
xchg
xchg
es
rcll
or
aas
xor
test
mov
dec
xor
add
addr16
jge
hlt
cld
xchg
rorl
movsl
add
pop
push
sbb
inc
pop
imul
sti
aaa
cmpps
js
jo
and
lret
cmp
scas
or
aam
mov
jnp
mov
adcl
mov
jge
outsb
mov
int
sbb
shlb
or
xor
pusha
imul
int3
stos
mov
xchg
mov
sti
push
in
int
fisubs
inc
ja
dec
rorl
inc
jle
subb
cwtl
inc
lea
fmulp
sub
dec
loopne
push
arpl
jl
jnp
xor
fs
dec
push
in
pop
call
mov
push
in
mov
inc
xor
inc
pop
repnz
cltd
fsubs
imul
dec
pop
add
xchg
sar
xlat
leave
jge
enter
mov
sub
mov
mov
jb
xor
std
sub
aam
lods
sub
add
xchg
in
addr16
pop
ret
in
cmp
jmp
pop
mov
cmc
aaa
div
pop
and
stc
mov
and
ljmp
js
push
loope
movsl
mov
outsb
faddl
adc
insl
loope
ret
add
dec
cmp
insb
and
mov
jae
ljmp
andl
ljmp
jmp
mov
out
and
dec
iret
jae
lods
jo
out
test
push
inc
cmp
in
mov
cmp
les
imul
enter
dec
hlt
mov
cmp
mov
or
pop
into
jle
mov
xor
inc
cmp
in
scas
jo
cli
outsl
daa
and
inc
aam
adc
jo
ficoms
cmc
jmp
xor
out
pop
pop
sub
idivb
fisubl
aas
adcl
ficoms
hlt
and
jecxz
jle
ja
or
leave
loopne
xor
pop
out
daa
cmpb
ja
test
outsb
dec
es
loopne
in
pop
dec
and
mov
stos
inc
in
aam
repnz
loop
pop
imul
and
lods
dec
nop
lock
xor
push
ud2
adc
ljmp
or
pushl
jo
in
xchg
push
es
das
rol
es
xor
cmpsb
jp
je
jnp
negl
ret
cmp
mov
xchg
repnz
rcl
jo
add
lock
imul
pop
incl
adc
mov
out
and
cmp
xchg
sub
jge
xchg
daa
push
scas
cmc
sub
fists
out
sub
jl
push
pop
xchg
or
movsb
lahf
dec
jns
xor
fcoml
jle
inc
dec
lods
add
mov
sarb
call
inc
lods
fs
stos
add
in
out
roll
mov
mov
push
xor
xorl
lods
inc
data16
jmp
mov
mov
mov
pop
stos
scas
addr16
adc
and
insl
xor
dec
add
out
mov
ret
rcll
xor
aam
jo
xchg
mov
jbe
cmpsb
das
sbb
lcall
movsb
add
mov
sbb
je
sbb
fwait
test
pop
movsb
fstl
xor
pop
jo
ret
cli
bound
cltd
push
pop
inc
jge
outsl
xchg
pop
push
push
mov
into
jns
pop
int3
and
push
dec
sub
lds
jecxz
mov
dec
sbb
test
hlt
xchg
shrb
mov
mov
movsb
mov
ret
cmp
mov
mov
aas
std
rorb
cld
sti
pop
repnz
fwait
or
nop
nop
cltd
imul
lea
pop
int
test
stos
push
insb
aas
daa
xchg
adc
mov
jo
xor
aaa
dec
fyl2x
mov
sub
push
and
push
xchg
stos
daa
mov
mov
cmp
inc
pop
and
xor
fildll
inc
xchg
enter
lcall
sub
xor
and
fisubrs
fnstcw
or
push
fcomp
ja
js
enter
jae
or
xchg
pop
mov
mov
jne
insb
mov
fsubr
mov
idiv
jae
mov
out
cli
clc
xchg
movsl
mov
sbb
repnz
mov
jbe
aad
out
jb
idiv
jb
mov
mov
addr16
cwtl
mov
sub
cmc
xchg
jl
mov
test
les
inc
out
jl
sbb
fdivrs
cltd
adc
fsubl
pop
inc
push
mov
mov
ret
pop
out
jge
adc
fldt
add
sub
cltd
sbb
add
fisttps
pop
mov
shl
dec
ss
gs
or
arpl
or
cmc
aaa
pop
dec
lret
cld
icebp
stos
loop
jp
stos
les
jne
sbb
add
jnp
loopne
jo
jo
mov
or
stos
loopne
cltd
pop
and
and
inc
movsl
push
rcll
ret
es
sbb
test
fwait
and
pop
leave
aaa
icebp
lds
lods
mov
add
lea
mov
or
pusha
jno
mov
sub
lea
out
mov
xor
xchg
dec
je
enter
xor
pushf
dec
lock
ja
ja
subb
ljmp
dec
lods
inc
jb
dec
popf
fcoml
push
xchg
stos
mov
pop
ret
push
ja
rcrb
ja
ret
jbe
sbb
jnp
sahf
nop
or
aaa
in
test
dec
nop
stos
sbb
das
decb
es
push
jecxz
jbe
in
sarl
gs
cld
pushf
rol
mov
ljmp
cmp
movsl
stos
ja
add
fdivl
push
stc
jle
loop
lods
dec
mov
lock
dec
xor
pushf
mov
insb
xor
mov
sar
add
sub
stc
sbb
lock
roll
mov
inc
xchg
jbe
pop
jp
stc
jmp
pop
or
in
pushf
clc
pop
cmp
mov
push
loop
pop
loop
add
ficoms
sub
xor
stc
fsubrl
std
fcompl
push
jne
sbb
mov
notl
sub
mov
inc
sbb
sahf
lcall
or
pop
outsb
int
pop
pop
movsl
fcmovb
sub
sub
adc
push
daa
lret
pop
xchg
lods
ret
sti
das
adc
test
es
xorb
stos
mov
pushf
lods
pop
pop
adc
sbb
outsb
mov
ret
call
jle
loope
shrb
jl
inc
fists
les
lret
cmp
mov
inc
push
pop
cld
out
dec
imul
iret
inc
jge
into
cmp
lahf
cmp
xchg
mov
xchg
inc
mov
mov
xlat
loopne
sub
mov
hlt
pop
outsl
mov
sbb
xor
xchg
push
mov
mov
arpl
push
arpl
or
divl
notb
adc
mov
lock
imul
repnz
sbb
mov
clc
inc
xor
lods
cmp
insl
je
sbb
test
negl
mov
pushf
ja
in
leave
outsl
insl
aam
cld
and
jmp
add
in
out
mov
inc
xchg
cmp
jmp
mov
rcr
aad
rcrb
int3
mov
add
mov
dec
fcmovne
inc
ficompl
jle
sbb
dec
and
popa
jge
cmpsl
rol
fmull
push
jl
das
push
pop
inc
out
in
insb
mov
je
xchg
mov
mov
push
dec
loopne
pop
xor
arpl
outsb
inc
pop
stos
mov
mov
dec
test
or
pusha
pop
jg
push
imul
cmpsl
pop
adc
jmp
pop
cltd
daa
push
push
mov
pmulhw
mov
incl
and
push
mov
jnp,pt
pushf
push
push
jae
std
pushf
mov
xlat
outsl
add
xor
push
in
add
pop
jle
movsb
pop
fimuls
pop
or
cwtl
jns
mov
lcall
sbbl
inc
aaa
jns
push
dec
cltd
movb
push
movsb
push
mov
jo
scas
leave
inc
cltd
mov
jne
adc
lahf
pop
cwtl
cmp
mov
lret
add
add
lock
out
jne
sub
pop
dec
out
add
pop
push
mov
jecxz
fcompl
xor
lock
sbb
adc
mov
js
and
pop
pop
lods
mov
pop
and
cwtl
push
cmc
outsb
lods
repnz
mov
or
cmp
sub
xchg
mul
cmp
xchg
or
xchg
inc
dec
ljmp
sub
and
push
mov
or
das
or
mov
or
int3
pusha
cmp
cmpxchg
loope
cmpsl
mov
popa
inc
das
aad
fmuls
call
mov
pop
mov
pushf
cmp
or
in
fstl
sub
ret
cltd
jmp
nop
push
mov
xchg
arpl
cmp
out
cs
sarl
int3
movsb
cltd
push
in
insl
push
movsb
sbb
ret
jne
cmp
call
pushf
iret
nop
jbe
and
and
dec
cmp
sbb
ss
jns
sahf
inc
cmp
lret
out
jge
cmp
hlt
jmp
xor
or
pop
mov
jge
push
cmp
jecxz
test
mov
push
cmc
push
in
jge
adc
dec
testl
xchg
cld
popl
xchg
shrb
in
addr16
xchg
push
js
jns
data16
loop
pop
fs
add
or
cltd
push
dec
sub
dec
or
and
out
inc
rcll
maxps
and
js
das
jg
dec
cmp
in
push
jge
imul
clc
lret
push
rorl
call
or
mov
gs
js
fs
sbb
or
inc
adc
or
pop
test
dec
lods
jl
lfs
cmp
mov
sub
xchg
es
mov
cld
xor
push
pop
imul
int3
pop
push
and
mov
sbb
insl
insl
mov
push
xchg
add
cmpsl
or
ja
das
arpl
xchg
lea
repz
pop
cmp
sbb
pop
test
hlt
out
dec
sti
or
rcr
or
mov
sub
dec
push
pop
enter
jecxz
pushl
pop
add
leave
cmp
mov
mov
leave
movsb
inc
mov
dec
push
ljmp
sbb
mov
shl
pop
aaa
lods
mov
data16
ds
push
icebp
ffree
and
andb
stos
mov
mov
or
adc
fcmovnbe
mov
xchg
lret
cwtl
sub
mov
adc
clc
dec
xor
test
xchg
cld
dec
aaa
inc
lods
and
pminsw
and
push
hlt
enter
xchg
jg
ss
jmp
xchg
jle
scas
xor
lock
push
cmp
adc
add
sahf
test
adc
xor
mov
mov
pop
adc
add
fldcw
push
ret
loop
loope
loop
mov
jno
xchg
push
outsb
fsubl
push
jns
jns
out
inc
inc
mov
xchg
in
xchg
js
cmp
sti
mov
sarb
mov
mov
scas
and
jle
xor
sub
ljmp
inc
loope
jmp
rclb
mov
xchg
sti
repnz
adc
pusha
xor
divb
inc
and
fs
dec
das
arpl
pop
jge
loope
jb
jne
push
fdivl
pop
push
addr16
movsb
sarl
in
jne
add
in
leave
mov
sub
stos
punpckhbw
scas
mov
mov
xorb
fadds
jnp
pushf
cmp
xchg
and
mov
sbb
cld
stos
mov
xor
andb
mov
dec
dec
push
rorb
adc
imul
out
cmpsb
xchg
out
subl
std
jno
pushf
imul
into
fidivrl
mov
xchg
scas
and
in
dec
push
idivb
adc
pop
sub
xor
fdivp
inc
stc
dec
or
pusha
bound
push
std
sbb
je
push
ss
popf
ret
or
sub
mov
nop
dec
or
pop
fidivrl
fsub
sbb
test
paddd
xchg
gs
dec
cmp
std
in
out
bound
jmp
insl
xor
dec
movsl
fldt
push
pop
sbb
movsb
lcall
aam
xor
dec
fcmovu
sbbl
lock
xor
mov
sub
std
out
sbb
sbb
cmp
add
outsb
push
mov
push
cmp
and
clc
enter
mov
mov
jle
call
movsb
xor
xor
cmp
and
inc
loope
cmp
dec
or
enter
clc
pop
mov
cld
xchg
stos
lret
sbb
add
pop
stos
ja
out
fbstp
rorb
xlat
jne
adc
hlt
pop
xchg
sub
cltd
mov
out
sbb
repnz
movb
xchg
inc
inc
mov
out
or
or
or
stc
nop
mov
mov
sub
imul
negb
push
into
and
fwait
sub
cmpsl
sbbl
cmp
cmp
mov
out
add
inc
fcomi
ret
and
dec
inc
in
mov
lods
xor
pop
or
xchg
in
out
push
jmp
data16
xchg
sbb
sub
lcall
inc
orl
push
adc
push
in
cmp
les
push
sub
lea
mov
cwtl
ret
out
hlt
mov
mov
sbb
pop
int
sbb
stos
outsl
cmpsl
nop
inc
xchg
push
mov
push
sub
and
cmc
mov
dec
and
fiaddl
sbb
stos
cmc
int
dec
dec
jl
push
jb
mov
lods
movsb
je
xchg
mov
bound
sahf
pop
xchg
fldl
sbb
xor
and
incb
xlat
sub
push
call
push
pop
sti
jle
or
cwtl
lock
stos
out
mov
pushf
testb
sbb
xor
xchg
lock
rorl
adc
mov
out
xor
or
sub
sub
push
mov
lds
in
adc
in
int3
jo
scas
scas
jbe
les
adc
cmp
pop
push
or
dec
pop
mov
clc
jg
inc
push
mov
cwtl
sbb
les
loopne
mov
jp
push
fstl
outsb
adc
push
xor
testl
loop
les
sbb
xorb
stc
in
push
mov
pop
mov
sahf
stos
adc
xor
push
push
lret
pop
stc
int3
cmc
lods
jne
mov
or
stos
outsl
dec
mov
out
and
jp
and
arpl
dec
fiadds
cs
pop
shll
ret
and
jmp
dec
out
mov
pop
sbb
cmp
jmp
sub
pop
sbb
sahf
repz
rorl
out
imul
mov
aas
cli
mov
sub
xchg
stos
iret
cli
mov
stos
sahf
sbbl
shll
jl
pop
mov
inc
push
push
adc
push
incb
cli
mov
into
cmpsl
movsl
loop
dec
xchg
mov
imul
pop
mov
inc
jb
out
mov
xchg
jne
ja
and
inc
inc
pop
pop
ret
push
shl
push
push
fwait
mov
into
out
pop
scas
xchg
lods
js
mov
fistl
int3
lahf
xor
and
mov
imul
mov
int
mov
cltd
xchg
xor
inc
mov
repnz
fldt
outsl
test
dec
push
std
jge
rcrl
ret
les
mov
cmp
fadds
aad
mov
xchg
cmc
ss
jnp
std
jbe
mov
xlat
aam
sahf
dec
loop
xchg
pop
sbb
fisubrl
int3
cmc
xchg
sbb
and
into
xchg
cmpsb
mov
cmc
fnsave
loopne
mov
aaa
cltd
and
inc
sbb
xchg
mov
jge
mov
add
mov
gs
ret
mov
dec
aas
cwtl
inc
mov
xor
adc
mov
mov
xor
cmp
pop
shrb
scas
push
push
cmpsl
push
cmpsl
mov
push
jmp
cmp
mov
jno
inc
or
sbb
dec
jne
lods
nop
jns
lahf
cmpsl
arpl
mov
ljmp
mov
incl
fistpll
jno
call
mov
mov
cwtl
arpl
arpl
lret
pop
movb
repnz
jl
fmul
mov
mov
push
dec
mul
iret
hlt
mov
mov
sti
xchg
sbb
xor
push
xor
and
imul
fmul
into
cmp
mov
fidivrs
pusha
hlt
xchg
sbb
js
je
xchg
icebp
pop
loope
xor
and
dec
jb
aaa
icebp
add
push
mov
ret
ret
or
xchg
loop
push
mov
leave
jle
daa
aaa
push
fstl
cmp
clc
out
les
adc
pushf
mov
aaa
add
outsl
lret
mov
cltd
cld
mov
iret
pop
inc
rorl
xor
xchg
out
fwait
pop
cmpsl
mov
pop
cmp
mov
pushf
mov
sti
pop
cwtl
push
stc
std
test
imul
out
adc
push
mov
jp
fidivl
mov
roll
xchg
mov
sbb
insb
call
orb
loop
dec
sbb
mov
cld
sahf
shl
in
das
xor
pop
sub
mov
bound
aam
jg
in
sahf
fstpt
push
leave
or
sbb
mov
sbb
lahf
cmc
mov
mov
inc
cwtl
inc
iret
jl
shl
outsb
push
sub
jge
mov
add
arpl
dec
fs
push
cltd
addb
push
xchg
pop
and
push
imull
test
xchg
mov
inc
jecxz
jnp
jnp
sahf
sbb
repnz
xorl
lea
xor
or
xchg
lahf
imul
stos
imul
loope
nop
repnz
repnz
dec
pop
sub
add
repnz
push
scas
faddl
pop
mov
lock
mov
pop
inc
push
rorl
pop
cmp
outsl
mov
data16
data16
jae
out
cmp
roll
ret
test
call
xchg
mov
xor
xor
cmc
push
sahf
aaa
cmp
cmp
fwait
sub
jle
loope
mov
stos
das
int3
popa
sbb
pop
or
mov
loop
test
dec
xchg
iret
scas
aaa
cmp
js
mov
pop
pop
or
addb
gs
movsl
pop
or
cmc
pop
insb
mov
stc
pop
sub
adc
or
fidivrl
mov
or
clc
or
add
fisubrs
gs
mov
or
mov
mov
add
test
push
lock
jb
sbb
mov
and
dec
add
pushf
outsb
lds
jo
jb
fldl
sub
daa
mov
or
loope
jbe
or
es
scas
shr
lret
inc
lds
les
scas
pop
adc
mov
jecxz
shr
repnz
mov
mov
mov
lds
lret
pop
cli
imul
scas
mov
jo
cmp
cwtl
jp
mov
sti
aas
test
scas
loop
mov
push
and
enter
scas
or
cmp
fs
dec
in
test
jnp
inc
cmpsb
inc
adc
je
out
or
std
test
xor
xor
cmp
fwait
cli
dec
fistpl
in
inc
cmp
aas
adc
mov
cs
mov
inc
push
cmp
out
cmc
in
shl
lea
shll
inc
dec
add
jp
out
sbb
movsb
dec
xchg
sub
jns
mov
xor
dec
sbb
sub
test
dec
dec
cvtpi2ps
xor
fnsave
test
pop
xor
out
jns
sarl
fs
or
jnp
lcall
fnstsw
adc
movsl
push
lods
dec
pop
push
jno
mov
push
mov
loop
pushf
dec
mov
push
jp
adc
inc
idiv
lds
out
fists
adc
into
in
movsl
jae
out
das
scas
push
jb
and
mov
mov
lea
push
inc
xchg
aad
jl
icebp
sub
arpl
jl
push
add
repnz
xor
mov
div
loopne
jb
nop
and
cmc
xchg
sub
in
and
cmp
jno
xor
xchg
fwait
add
pusha
mov
pusha
popa
cmp
dec
addl
and
loope
mov
push
aaa
push
sbb
cmpsl
iret
mov
incb
in
mov
inc
scas
push
fsubrs
jl
cmp
dec
cwtl
lds
or
test
mov
push
stc
iret
cmpl
int3
mov
or
add
jmp
pop
outsb
jg
push
jl
jp
xor
movsl
aas
xchg
push
ss
dec
std
jle
mov
mov
outsb
rolb
lock
jns
xchg
xor
movsb
out
push
sub
imul
mov
xor
popa
outsb
mov
mov
mov
xchg
push
mov
sub
adc
cmp
adc
cmp
ljmp
rcrb
cli
mov
addr16
mov
pop
jmp
fcomps
xor
mov
imul
cltd
xchg
jg,pt
loope
cmp
int3
adc
mov
jno
inc
popf
cmpl
pop
js
xchg
xor
insb
or
imul
or
mov
int3
aad
daa
hlt
lods
nop
movsb
mov
repz
xchg
jns
pop
mov
nop
repnz
inc
xchg
mov
mov
inc
add
pop
leave
sarb
aad
pop
or
test
xor
mov
push
xchg
push
dec
xor
add
mov
mov
into
mov
mov
inc
shrl
mov
adc
dec
leave
mov
rorb
fsub
mov
adcl
rcr
cmp
mov
sub
ds
sbb
mov
push
rorl
stc
sub
dec
adc
outsb
push
out
mov
fldt
or
clc
dec
dec
mov
jae
loope
stos
pop
and
xchg
pop
or
or
outsb
push
mov
jecxz
adc
in
jnp
mov
mov
pushf
jp
xor
inc
xchg
lret
aas
cmp
icebp
xchg
std
mov
popa
test
lcall
nop
adc
jge
xlat
cmp
cmpsb
and
mov
lcall
mov
incb
jmp
xor
mov
sbb
jnp
insl
aaa
popf
int3
mov
lret
outsl
dec
fisttpll
jmp
mov
mov
sbb
call
jge
stc
and
lret
inc
mov
lock
ds
pop
outsb
scas
sub
mov
fistps
pop
fldcw
icebp
in
stc
mov
ret
xchg
sub
add
sub
fists
adcb
ds
fidivrl
imul
push
lcall
ljmp
jmp
imul
scas
pop
scas
jmp
movsl
xchg
jb,pt
sub
inc
pop
jnp
sbb
adc
jb
sbb
jle
xchg
scas
add
mov
out
pusha
pop
out
lret
or
xchg
bound
cmp
inc
ss
sub
sbb
inc
int
shrl
push
xchg
les
sarb
mov
pop
add
loopne
push
daa
xchg
add
push
enter
push
mov
lods
mov
outsb
das
adc
bound
bnd
adc
movsl
push
or
xor
daa
xor
adc
fadds
aaa
fstl
daa
mov
popa
mov
pop
jmp
mov
push
push
insb
jnp
cmpl
add
cmpsb
cld
adc
cmp
lds
inc
or
mov
lret
ss
cmp
mov
xchg
push
aaa
lea
and
and
fdivl
inc
orb
inc
cmp
inc
mov
cmp
imul
sti
push
in
ja
loopne
cltd
test
sti
jnp
addr16
call
mov
cmpsb
std
es
jl
xor
sbbb
gs
enter
inc
dec
dec
push
mov
dec
jb
jg
movsl
hlt
fcompl
fs
push
dec
mov
adc
lcall
loop
inc
mov
dec
cmpsl
jae
fdivp
fwait
popa
adc
xor
push
pop
xchg
imul
or
int3
pop
scas
outsl
negl
or
ret
test
lock
xchg
mov
enter
ret
in
and
fldl
fdivs
mov
cwtl
shlb
jnp
stc
ljmp
fmull
pop
scas
pop
inc
add
je
int
and
mov
add
gs
vlddqu
mov
jns
xchg
sbb
inc
push
lret
add
mov
lods
pop
ds
add
adc
jne
mov
dec
add
addr16
fldlg2
push
push
out
jns
xchg
insb
pusha
xchg
pushf
mov
dec
test
or
jns
cmp
data16
and
pop
pusha
mov
xchg
cld
jge
fsubl
dec
mov
leave
mov
mov
push
and
pusha
jg
lds
addr16
mov
xorb
sub
xor
stc
and
outsl
gs
pop
mov
icebp
jbe
cmp
and
or
enter
fadds
icebp
enter
std
test
data16
add
xchg
mov
aaa
push
or
inc
psrlq
in
and
lock
mov
sub
loopne
das
push
sub
mov
sub
sar
jns
fwait
int
loope
call
stos
mov
rorb
call
sub
das
sbb
test
mov
lcall
jg
jp
and
xchg
decl
cmc
ret
enter
imul
test
mov
jbe
mov
loopne
xor
into
arpl
push
aam
pop
je
mov
dec
jp
pop
shrb
pop
mov
xchg
shll
iret
adc
add
in
mov
mov
mov
pusha
xlat
push
jl
add
js
inc
int
cmc
test
test
stos
push
out
iret
fidivrs
sub
mov
pushf
mov
and
ja
inc
add
xor
enter
push
jae
ret
jmp
add
mov
pop
hlt
fprem1
rcl
and
inc
adc
pop
sub
adc
sbb
dec
mov
add
insb
and
push
push
mov
mov
in
stc
int
sbb
mov
jae
mov
inc
aad
sub
ret
and
enter
sbb
test
xchg
call
sbb
and
js
aam
sbb
xchg
lcall
xor
jp
dec
fldl
roll
mov
arpl
test
sub
das
imul
outsb
cwtl
cwtl
repz
insl
dec
out
mov
xchg
mov
pusha
push
rcrl
movsb
fmull
pop
arpl
fs
adc
cmp
inc
add
sub
cmp
sbb
sarl
adc
adc
dec
call
das
sbb
xor
mov
cmp
mov
adc
movsl
xchg
sub
pop
roll
and
pminub
xor
xorl
ljmp
cmc
add
xor
out
dec
xor
out
or
push
aam
cmp
sbb
mov
jecxz
fsincos
in
ljmp
lea
shlb
push
dec
sbbl
push
mov
jae
mov
lcall
sbb
ret
paddusb
mov
rcl
adc
cld
shlb
lds
add
lcall
cmpb
pop
add
mov
insl
cwtl
out
rorb
cmpsl
adcb
cli
xchg
rcrb
mov
adc
std
iret
pop
aaa
cmp
mov
sub
cmp
jg
sbb
js
jnp
popf
lret
pop
icebp
sbb
es
dec
adc
lods
pop
and
adc
outsb
xlat
xchg
dec
push
xchg
dec
pop
mov
imul
dec
push
dec
into
out
xor
leave
aad
les
pop
mov
pusha
jo
pop
sbb
lods
stos
cwtl
cmp
cmp
out
aam
jae
cmc
pushf
out
cmp
pop
outsl
mov
cmc
push
push
pop
gs
pop
mov
stc
fs
sub
stos
ljmp
add
mov
xchg
adcb
jns
lret
out
sti
les
in
or
jbe
xchg
push
jo
popf
dec
sbb
cld
sbb
jmp
in
lods
insb
into
ljmp
mov
adc
imul
hlt
and
ficoml
lret
std
push
rolb
scas
mov
mov
cmp
xchg
mov
or
cmp
movsb
ja
or
test
fnsave
sub
test
outsb
fisttpl
cltd
xchg
jle
ljmp
mov
mov
out
cmpl
or
movsl
push
sub
int
adc
ss
andps
arpl
cmc
mov
mov
aam
dec
xchg
imul
rorb
adc
loope
sub
inc
sahf
hlt
ja
das
shrl
dec
rclb
test
pop
inc
cmp
mov
pop
jo
push
cmp
dec
data16
inc
mov
add
xor
sbb
insl
cmp
or
push
mov
lcall
xchg
sbb
and
or
mov
jae
cltd
out
fisubs
je
arpl
mov
icebp
pop
xchg
push
sbb
push
pop
das
insb
jmp
dec
pop
cmp
fnsave
and
mov
movsb
bswap
xchg
adc
pop
testl
inc
or
int
stos
jns
xchg
jno
mov
rclb
out
mov
push
mov
test
inc
jmp
mov
xchg
test
jmp
mov
pop
and
and
lahf
and
add
xchg
out
jl
ljmp
sub
add
or
jl
add
jne
pop
pusha
jg
push
leave
dec
addr16
lcall
and
stos
loop
scas
xor
adc
add
fmulp
and
outsb
pop
pop
mov
xor
les
cs
or
rclb
adc
data16
push
pop
mov
sti
inc
cmp
int
test
sub
jbe
out
test
test
mov
in
mov
ss
or
enter
mov
insb
out
dec
dec
mov
mov
mov
lods
xor
pop
repnz
clc
inc
outsl
mov
xchg
enter
xchg
sub
xchg
fwait
jo
sub
xchg
lods
imul
mov
lret
insl
mov
pop
stc
mov
icebp
jge
inc
sub
or
repnz
lods
les
mov
or
push
rolb
mov
xchg
mov
loope
mov
or
loop
ror
mov
cmp
xlat
xor
test
jecxz
outsb
push
sbbb
pop
in
jno
ja
ret
clc
add
rol
icebp
es
xchg
xchg
pop
dec
xor
mov
mov
aam
imul
test
out
ror
leave
test
enter
leave
lret
fucom
pop
pop
stos
daa
ds
jb
aas
jo
int
lcall
adc
sbb
repz
sub
popa
fnstsw
ja
push
out
push
dec
icebp
sbb
sbb
adc
sub
cld
icebp
std
aaa
jb
pop
imul
push
icebp
loopne
scas
lret
sub
into
xor
push
push
or
jecxz
inc
lahf
sbb
sti
mov
mov
xor
mov
test
jmp
mov
addr16
mov
fsubr
sbb
arpl
loope
sub
lret
xlat
dec
fsub
mov
adc
adc
mov
add
mov
xorb
pop
fstpl
adc
imul
mov
sbb
inc
hlt
insb
sbb
xor
gs
push
les
in
inc
and
and
popa
push
cmp
sbb
outsl
fbld
dec
int
test
mov
aaa
push
fbld
movsl
cmp
stc
fs
test
inc
jno
mov
mov
repz
out
pop
xchg
lods
out
inc
ja
mov
sar
mov
pushl
jns
hlt
ljmp
mov
jnp
inc
adcl
mov
xor
cmpsb
cld
dec
mov
addr16
in
lods
xor
movsl
cld
adc
mov
adc
jge
add
out
int
nop
add
stc
pop
dec
icebp
sbb
or
jbe
and
div
je
pop
add
loopne
add
test
jne
jp
lret
or
xor
cmp
sbb
sbb
or
push
or
xchg
mov
int
dec
subb
stos
and
adc
das
xor
out
jb
and
push
int3
jl
mov
pusha
jo
fists
adc
mov
scas
add
jge
data16
jbe
int
xor
add
pop
jns
mov
jge
dec
sub
sbb
lock
jmp
dec
cmp
jnp
sbb
iret
jge
mov
daa
jno
ffreep
lahf
inc
out
and
or
movzbl
mov
in
stc
dec
cltd
push
mov
xor
inc
push
cmc
enter
mov
decl
mov
cmp
inc
mov
adc
and
sub
mov
arpl
repnz
mov
pop
fisubrs
or
sub
sbb
adc
mov
adc
jae
adc
and
repnz
or
insl
inc
outsl
sbb
out
addr16
inc
adc
xchg
cmp
dec
out
sbb
mov
test
shll
inc
mov
mov
sub
out
pop
aaa
movsb
fisubrs
push
push
add
lret
sub
mov
aas
ret
stc
pop
int
popa
mov
loope
xchg
pop
push
imul
mov
stos
jge
les
mov
pop
into
cltd
loopne
sar
out
add
roll
mov
scas
stc
mov
adc
arpl
jmp
fcoms
addr16
jnp
cli
nop
sbb
mov
je
dec
push
mov
mov
xlat
rcll
lahf
or
dec
adcl
adc
lret
test
inc
mov
ja
inc
mov
inc
test
mov
stos
xchg
stos
aam
dec
cmp
sbb
outsb
lds
repz
pop
loope
inc
adc
adcb
out
or
xchg
xchg
in
je
pop
xor
fldenv
addb
stos
rcrl
outsb
aad
add
aam
js
popa
push
lret
add
nop
add
pop
out
xchg
push
dec
or
aaa
fwait
stos
std
mov
out
lahf
pop
cwtl
popa
sarl
hlt
fs
adc
daa
addr16
pop
dec
ja
xchg
jns
imul
popa
jns
mov
sar
bound
push
adc
jg
sub
in
mov
add
fldt
cmp
cmpsl
pop
or
sub
andl
add
jge
fistl
and
and
jp
mov
push
add
ljmp
jns
mov
adc
leave
lret
inc
ret
ljmp
fistpll
xchg
scas
pop
clc
add
mov
mov
xchg
frstor
sti
pop
mov
xor
pushf
jge
insb
popf
sbbl
stc
mov
into
cltd
add
or
stos
xor
mov
pop
gs
dec
idivb
stos
jo
xor
out
mov
jb
jne
aam
repnz
xchg
jne
dec
jnp
cs
push
enter
lcall
jno
xchg
mov
push
xlat
in
cs
pop
xor
jg
add
int3
stos
mov
sbb
xor
insl
push
mov
xchg
cmpsb
mov
xor
xchg
out
loope
and
push
or
xor
pop
insb
test
and
inc
inc
xor
push
loop
inc
int3
add
and
xor
pushf
lods
inc
mov
cmpsl
je
fldcw
test
inc
cmp
xchg
bswap
imul
push
push
fwait
fwait
mov
sbbl
hlt
roll
xchg
gs
push
inc
adc
sahf
fisubrs
pushf
adc
aam
cmc
or
sub
aaa
mov
call
jns
jno
hlt
jge
loope
loope
mov
add
cmpsl
sub
add
inc
lea
std
xchg
pop
and
cmp
mov
jl
mov
pop
lock
jnp
sti
fidivrs
addb
mov
in
sbb
in
cmpsb
sub
sub
jle
sahf
aaa
cmp
mov
adc
mov
and
and
rcll
jae
fisubs
out
test
lods
aam
mov
scas
and
mov
scas
push
xchg
adc
jmp
xchg
das
sub
cwtl
in
cmp
sub
mov
cs
xor
or
enter
mov
cld
inc
cs
mov
popa
aad
or
into
xor
mov
lods
imul
xor
add
xor
cli
enter
adc
arpl
out
mov
pop
mov
sub
ficompl
inc
stos
dec
cld
mov
push
mov
pop
mov
add
mov
cmp
lods
inc
sbb
enter
aas
jbe
dec
mov
xor
push
shlb
jmp
or
cs
lcall
push
adc
xor
iret
cmpsb
cs
xchg
fwait
ja
sti
lcall
jp
mov
pop
arpl
pop
bound
and
shlb
mov
pop
stc
lcall
inc
xchg
cmpsb
lea
add
sub
cmp
sbb
cmp
fnsave
stc
push
loope
ljmp
mov
aaa
pop
out
addr16
mov
and
adc
xchg
jecxz
lods
mov
xlat
jo
cwtl
shrl
jno
loop
xor
dec
mov
sub
jno
mov
adc
scas
pop
xchg
sub
xor
stos
daa
into
cmp
xor
push
pusha
fisubl
push
lcall
pop
insl
cmp
and
sti
mov
popf
fmull
mov
fistps
out
fisubl
bndstx
aam
js
fwait
add
inc
popf
int
fwait
pop
xor
inc
scas
testl
dec
jmp
sbb
pop
mov
cmc
gs
xchg
mull
idivb
jno
fcoms
push
ret
decb
sub
fsubr
sub
imul
or
int3
into
shlb
xor
pop
mov
lret
mov
cltd
outsl
loope
dec
cld
es
push
sub
fisttpl
inc
jecxz
mov
arpl
xchg
dec
push
add
loop
rcrl
aad
std
or
jo
divb
rcrl
jbe
scas
push
add
mov
das
push
cwtl
xchg
lret
xchg
mov
test
mov
and
in
fildll
inc
xchg
or
icebp
mov
mov
fdiv
aam
push
jbe
orb
mov
ret
mov
popf
cmp
andl
adc
adc
sbb
pop
xor
test
ja
cwtl
xorl
movsl
dec
inc
mov
xchg
nop
mov
inc
adc
adc
rcrl
mov
dec
lea
out
mov
xchg
xor
cmp
fdivrs
pop
addr16
xchg
pop
jmp
test
arpl
in
cmpsl
ss
icebp
xchg
repnz
out
xchg
sbb
inc
pop
repz
fcmovb
stos
dec
pop
or
mov
jne
icebp
push
sub
cmpsb
inc
xchg
int
stos
push
inc
pop
push
clc
push
push
insl
jae
call
pop
sarb
leave
ds
lret
push
lods
xor
ljmp
mov
cld
jp
pop
jg
lds
inc
jne
or
data16
inc
aam
adc
ds
pusha
jmp
sub
popf
cld
test
cmc
call
cmp
lret
cmp
push
cli
push
jns
pushf
jge
inc
andb
out
and
mov
cwtl
mov
stos
add
push
push
push
repnz
pop
or
push
aas
jae
cmp
jae
cli
ja
push
fsubrs
loope
push
orl
push
xor
lahf
jl
and
jecxz
les
xchg
jg
xor
mov
dec
es
test
clc
and
in
xor
mov
and
loopne
test
dec
sub
xor
cmp
sahf
push
test
jmp
repz
add
test
int
pusha
push
lds
push
inc
stos
es
sbb
mov
or
lcall
leave
hlt
adc
outsb
mov
xorl
scas
filds
push
mov
sbb
dec
adc
jae
dec
negl
or
push
push
sub
push
cli
cmp
ja
repz
or
sbb
insl
add
pop
aam
icebp
aam
add
fildll
jge
and
push
bound
jp
and
pop
and
sub
repz
stc
cmpsl
int3
mov
lods
mov
sub
imul
out
or
shll
pushf
push
iret
mov
add
pushf
cld
dec
paddb
repnz
int3
pop
out
inc
fcmovu
xlat
mov
push
sbb
mov
cmp
ret
bound
xchg
adc
adc
push
or
mov
or
adc
ljmp
add
cld
push
cmpsl
jne
jge
enter
jo
fimuls
inc
sbb
mov
aam
popa
cld
bound
addr16
imul
add
xor
or
or
adc
fadds
or
stc
dec
jbe
adc
lret
jno
jle
push
and
adc
cmc
enter
test
inc
mov
lea
mov
adc
jp
mov
divb
jg
mov
out
inc
mov
xchg
sbb
mov
cmp
push
lea
ljmp
and
aad
mov
pushf
aad
mov
sti
xchg
sti
in
fsubs
mov
cmc
sub
push
cmpsb
dec
cmp
jno
cmp
dec
mov
popa
aam
mov
lahf
lods
test
les
out
inc
dec
fs
mov
ljmp
and
and
test
fidivs
and
ss
inc
aas
dec
sub
ror
lret
jmp
aas
sbb
or
movsl
jnp
call
xor
decb
mov
iret
add
fstpt
xchg
jbe
in
in
add
push
inc
xchg
bswap
rcrl
leave
dec
mov
ljmp
pop
lcall
mov
cmp
mov
dec
jecxz
inc
adc
jnp
es
dec
inc
adc
push
fldl
cmpsb
inc
push
xor
loope
in
daa
add
adc
mov
aad
pop
pop
jne
and
jmp
mov
add
addb
adc
jbe
cmp
lea
mov
mov
push
mov
sbb
leave
mov
pusha
inc
std
scas
arpl
int
in
adc
xor
mov
cmpsl
mov
add
lret
sarb
xchg
cld
test
jg
cmp
cmp
pop
mov
lret
daa
cltd
sti
pop
cli
in
das
jnp
pop
cmp
rcrb
mov
add
pop
rcl
aas
xchg
ljmp
or
movsb
pop
orl
in
pop
bnd
push
push
and
pushf
outsb
leave
stos
in
dec
mov
mov
ds
lds
insb
jecxz
les
fnstsw
out
pop
pop
icebp
jg
fnsave
sub
lock
pop
test
sbb
inc
mov
pop
cld
popa
xchg
dec
jnp
push
test
pushw
xchg
mov
es
fnstcw
sbb
pop
and
sub
xchg
fmull
outsb
sub
push
subb
outsb
and
mov
cmpsb
repnz
cld
ljmp
pop
or
pop
into
testb
mov
lahf
adc
cmpsb
js
pop
mov
call
jno
cmp
adc
sbb
add
inc
jge
inc
xlat
aam
in
scas
push
sbb
fs
out
stos
lret
xor
inc
jns
aad
aad
addr16
imul
fimull
mov
and
cvtps2pi
js
xchg
shlb
add
bound
push
dec
dec
loope
inc
loope
inc
cmp
sahf
push
jo
std
cmp
adc
dec
mov
jno
aas
or
hlt
enter
pop
movsl
int3
popl
std
and
clc
push
or
jb
sub
and
rcll
test
and
aam
and
gs
rcrb
shrb
sbb
mov
loopne
or
rcr
mov
fld
add
add
in
pop
lds
pusha
jno
sub
pop
test
dec
mov
mov
and
ret
stc
jo
out
sahf
mov
inc
test
sub
jae
leave
sbb
mov
or
inc
and
mov
imull
jno
call
cmpsl
pop
push
jae
push
fs
inc
cmp
imul
xor
push
pop
push
jl
sbb
cmp
hlt
jae
sub
movsb
pop
cmp
es
mov
loope
testb
dec
test
xchg
cmp
pop
cmp
fmull
shl
repnz
pop
mov
sub
mov
xchg
in
jae
sbb
jge
dec
dec
sub
cwtl
adc
sub
xchg
jge
fisubrs
inc
add
cmpsb
clc
jae
push
loopne
das
jle
adc
push
adc
xchg
inc
ljmp
fs
mov
push
mov
jo
mov
add
fbld
pop
mov
es
aad
inc
sahf
fstpl
cmp
inc
or
les
pop
push
scas
sub
lods
dec
jp
cmp
les
or
push
das
push
or
cmc
out
sbb
push
loop
add
test
push
or
cmpl
mov
rclb
dec
sub
sbb
add
pop
pop
pop
repnz
dec
dec
add
jo
aam
jg
push
mov
data16
sub
mov
xchg
aas
inc
cmp
mov
ficoms
ss
xor
lock
out
scas
mov
push
pusha
mov
pop
sub
cmpsl
ljmp
sub
incb
mov
fidivs
dec
add
inc
out
jge
fsub
cmpsb
push
push
jmp
subl
xchg
cmpsl
pop
out
and
pop
jg
pop
enter
das
stc
xchg
loopne
mov
adc
cmp
xor
adc
mov
push
mov
shlb
out
repnz
adc
mov
mov
jmp
jb
inc
stos
stc
xchg
xor
mov
pop
mov
popf
fs
sti
cmp
test
pop
incb
mov
inc
pusha
mov
jmp
mov
pop
xchg
add
inc
and
rolb
fimull
mov
dec
mov
pusha
stos
mov
shrl
push
je
jne
and
pusha
xor
hlt
inc
lret
pop
pop
add
jo
push
dec
hlt
and
sbb
dec
add
push
jmp
cmc
jnp
push
lods
aad
xchg
shrb
jbe
or
inc
sbb
pop
mov
movsl
push
mov
enter
jp
inc
mov
loopne
loop
ror
cs
sub
cmp
mov
dec
push
jns
push
jnp
and
ja
imul
dec
xchg
cmp
call
aam
pop
pusha
mov
pop
mov
dec
pop
jp
add
push
pop
rcrb
bound
add
shlb
xchg
jno
out
cmp
or
fdivr
and
mov
push
sub
lcall
jp
shlb
fcmovnbe
sbb
inc
mov
jbe
imul
xchg
mov
into
dec
push
cmpsb
mov
sbb
add
lcall
dec
mov
and
inc
mov
cltd
sub
sbb
cmpsb
imul
ja
in
adc
jno
cmp
test
dec
int
cmp
loopne
mov
fnstenv
jge
cmpsb
sbb
popf
lods
ljmp
cmpsl
jne
cmp
outsl
mov
mull
mov
loope
aad
stc
pop
cmp
and
popa
cmp
and
xchg
out
dec
call
inc
je
push
andl
lcall
push
in
je
push
or
mov
mov
std
int3
add
and
mov
bound
addr16
and
jmp
jb
push
xchg
sub
sbb
mov
inc
pop
adc
dec
lods
lahf
pop
push
nop
aad
or
sbb
dec
imul
add
jle
mov
sbb
mov
int
pop
stos
cmp
push
jg
mov
mov
sbb
adc
insb
in
mov
mov
pop
int
and
cmpsb
sbb
adc
dec
out
imulb
sahf
icebp
ret
stc
mov
cmp
fucomip
lret
add
cmp
mov
cld
jmp
sti
xlat
push
int3
imulw
xchg
rolb
popa
ds
cltd
lcall
daa
cmpsb
jmp
out
movsbl
lret
inc
or
jecxz
xchg
mov
divb
in
fldenv
inc
and
xchg
cli
out
push
cmp
stos
repz
inc
and
insl
sub
dec
mov
sbb
xchg
js
jl
inc
out
xor
xchg
dec
xor
mov
and
call
data16
dec
jge
dec
xchg
push
pop
dec
pop
popa
push
mov
insl
popl
out
clc
dec
sbb
sbb
lods
cmp
push
call
jbe
sub
mov
aas
mov
sbb
jg
xor
pop
and
clc
sbb
pop
aam
dec
inc
push
and
xchg
mov
aas
jno
sub
xchg
mov
cld
cmpsb
ja
jae
add
mov
pop
inc
xchg
xchg
lcall
mov
loopne
das
dec
pushf
jecxz
adc
and
and
test
gs
jne
aaa
call
std
fcoms
sbb
lret
fisttps
data16
daa
add
mov
and
pushf
xor
js
fs
jge
and
pop
push
add
inc
dec
inc
std
xchg
pop
sbb
add
and
jo
js
xchg
adc
ss
adc
popa
imul
scas
ss
sub
outsb
inc
adc
nop
push
out
cmp
mov
outsb
push
sub
mov
cmp
aaa
push
add
enter
pop
testb
inc
jb
dec
fwait
movsb
ss
stc
icebp
addr16
xchg
xor
test
mov
in
lods
nop
jns
lods
pop
mov
lret
das
sub
mov
xor
pop
dec
push
pop
mov
mov
mov
mov
jle
add
mov
mov
push
mov
or
cli
in
stc
aam
aad
sub
out
xchg
cmc
fisttpl
adc
xor
cmp
movb
addl
shlb
mov
and
bnd
push
xchg
shlb
pop
pop
jmp
inc
dec
fwait
jl
jmp
sar
mov
outsl
jge
add
adc
xchg
adc
hlt
lea
mov
repz
in
inc
sbb
into
push
ss
lcall
cs
leave
fnstcw
cmp
and
aaa
mov
inc
inc
lahf
sbb
jns
jnp
sbb
or
test
in
lods
icebp
stos
in
add
testl
or
adc
jle
dec
lret
push
pop
pop
scas
xor
dec
inc
andl
mov
push
ss
mov
int
enter
push
ret
arpl
and
sub
iret
and
in
inc
sbb
push
xor
mov
pop
inc
pop
sbb
mov
arpl
pop
jle
push
aas
cs
dec
cmp
pop
mov
push
add
sbb
sbb
sub
shlb
push
adc
mull
inc
jecxz
fs
xchg
insl
mov
pushf
mov
adc
flds
and
loop
daa
imul
xchg
in
dec
mov
pop
notl
cmp
cmpsl
scas
push
mov
popa
in
xchg
icebp
nop
xchg
pop
mov
dec
xchg
aas
mov
or
jae
in
jl
cld
or
jnp
inc
jns
cltd
adc
inc
jnp
or
xchg
sbb
adc
mov
loop
pusha
jg
dec
test
jg
jp
cmp
scas
mov
out
jne
fimuls
lahf
sbb
pop
jns
lods
bound
pop
das
sbb
xchg
clc
and
movsl
dec
cmp
sbb
fdiv
adc
stos
insb
or
out
out
dec
jmp
sarb
push
js
dec
cmp
mov
cmpl
in
cmp
xorb
mov
xor
fcoml
cmp
and
out
mov
sbb
xor
xchg
mov
lds
cmp
inc
lcall
loope
fldl
pushf
mov
scas
fs
fwait
test
xor
fsubrs
into
push
movsl
adc
lods
xchg
outsl
and
or
test
pop
into
fs
fmul
push
dec
cmpsb
jnp
mov
adc
push
jo
out
aam
add
or
add
nop
lods
mov
stc
sub
jne
add
test
in
jle
mov
in
cmpb
jae
lea
pop
inc
xor
call
outsb
add
sbb
out
movsl
fsubrp
jns
ja
fwait
add
adc
mov
push
pushf
cmp
jno
enter
push
aad
daa
cwtl
mov
popa
push
jae
in
sbb
add
mov
aad
inc
fs
pop
sbb
mov
mov
pop
push
or
je
stos
das
icebp
inc
pop
fiaddl
jg
idiv
or
rcrl
add
or
dec
sbb
and
dec
jnp
push
mov
stc
fadds
cmp
xchg
cmp
mov
ja
xchg
test
pop
mov
push
sub
push
sub
sub
shll
popf
repnz
jl
mov
sub
aam
out
ret
test
fildl
push
jne
stc
dec
icebp
call
outsl
mov
cmc
mov
or
movb
pop
popf
ret
mov
jo
dec
bound
dec
movsl
inc
mov
cmc
mov
push
das
sarl
mov
jge
pop
sarl
out
jae
fmuls
sbb
in
call
xlat
add
add
pop
imul
flds
cmp
and
xchg
hlt
add
push
pop
ds
ret
xchg
lahf
sub
pop
jnp
mov
fidivrs
dec
popa
mov
sub
push
movsl
mov
in
xchg
push
test
sbb
ror
xchg
enter
jge
push
adc
faddl
fstps
push
aam
mov
cmpsb
cmp
xor
add
push
xchg
xchg
rorb
es
inc
mov
stos
adc
test
cwtl
mov
push
push
jbe
sbb
out
int3
cmp
inc
repnz
ret
inc
loope
ret
jmp
mov
fwait
iret
dec
dec
hlt
negl
pusha
shlb
mov
test
ss
inc
push
mov
adcl
clc
insl
jmp
fdivl
xlat
pusha
jle
mov
jg
ss
mov
insl
mov
into
in
loopne
imul
push
xchg
add
push
outsb
gs
inc
scas
ret
call
fstl
adc
adc
pop
fsubl
fidivl
ret
jne
inc
insb
push
out
loopne
adc
push
jne
pop
mov
push
int3
pop
shl
stos
faddl
xchg
xchg
adc
jo
inc
imul
push
popa
rcr
mov
mov
and
mov
mov
inc
inc
mov
int3
jmp
push
cmp
or
das
sbb
add
movsl
add
add
js
mov
mov
stos
mov
iret
cli
mov
lret
enter
iret
scas
jmp
lds
xchg
fstl
daa
cmpsb
out
imul
sub
dec
mov
mov
adc
sbb
dec
jecxz
or
loop
pop
xchg
jp
aaa
inc
loopne
fadd
xchg
fistpll
hlt
push
fsubrs
or
pop
leave
push
jle
sbb
mov
icebp
rcr
cltd
cld
jns
xchg
mov
cmp
pushf
fnstsw
jg
jle
scas
mov
add
pushf
test
inc
sahf
dec
dec
pop
cs
sbb
push
mov
fmull
pop
add
mov
mov
js
pop
xor
push
popf
xor
mul
mov
fisubs
mov
jp
lods
ret
stos
mov
ljmp
leave
inc
mov
fldl
jne
push
fs
inc
lret
adc
daa
push
imul
jno
pop
arpl
cli
pusha
sbb
pop
scas
mov
mov
in
mov
lret
scas
dec
insb
int3
dec
lret
push
lds
ficompl
push
mov
je
push
sub
lret
rcr
mov
imul
mov
xchg
cmpsl
psrld
push
mov
xchg
cmp
inc
mov
xchg
jo
inc
ss
mov
ret
addr16
ror
outsb
mov
mov
int3
lock
movsl
shrl
jns
cltd
xchg
adcl
pop
test
mov
pop
movsb
xchg
mov
scas
ret
ds
ret
push
cltd
stc
pop
mov
movsb
aad
scas
jo
rolb
imul
push
xchg
std
fxch
jp
jns
adc
push
mov
mov
into
or
mov
cmp
sub
lret
xor
mov
jmp
shll
sbb
push
fiaddl
aaa
mov
jb
jbe
push
add
jns
push
mov
pop
clc
fildll
test
pop
or
shll
or
adc
movsb
mov
movsb
ja
repz
shlb
je
daa
sbb
mov
xor
push
xchg
insl
bound
cmpsl
xchg
cmc
pmaxub
scas
mov
mov
fnclex
stc
imul
mov
xor
ss
and
lock
pop
pop
movsb
arpl
xor
roll
sarl
dec
sbb
push
push
ret
mov
mov
clc
jb
lds
xchg
lea
jecxz
adc
or
dec
rclb
dec
push
cmp
imul
test
leave
out
xor
mov
fcmovbe
and
push
lods
lds
lods
rcll
sbb
pop
fwait
imul
xor
adc
aad
test
hlt
loopne
sub
popa
and
repz
loop
push
jae
adc
addr16
push
mov
jge
xchg
xor
mov
pop
mov
adc
aam
scas
add
add
cmp
loope
iret
xor
or
inc
imul
in
cmp
mov
sti
sbb
cmpsl
dec
cltd
inc
adc
mov
leave
xor
sar
xchg
adc
inc
stc
dec
and
fildl
sbb
aad
mov
cltd
xchg
test
pop
push
mov
cmp
ds
pop
mov
insb
add
pop
sahf
aad
cmp
rol
cmp
out
and
mov
cmp
cwtl
lret
ja
inc
mov
xlat
inc
add
mov
jno
inc
sbb
test
lret
jmp
and
outsl
enter
sub
and
inc
add
dec
out
sub
adc
add
loop
pushaw
adc
mov
or
jo
movsl
testl
and
aaa
leave
and
add
fstp
jbe
in
fcomp
jnp
std
scas
dec
in
aad
mov
push
add
les
push
call
enter
sti
dec
setae
mov
cmpsl
mov
add
mov
jg
or
ljmp
jns
or
cmp
ficompl
sti
xchg
dec
int
cli
stos
inc
jle
cmp
xchg
ja
out
pushf
aam
mov
ret
jb
push
add
push
dec
bound
add
cmp
ja
ss
mov
faddl
lahf
and
mov
mov
jo
xor
cmp
fst
arpl
fnsave
loope
adc
das
inc
outsl
mov
fucomp
test
repnz
ret
or
or
dec
push
mov
rcr
stc
inc
adc
jo
add
fisubrl
ljmp
jl
push
das
adc
sahf
mov
jge
syscall
pop
mov
jno
cmp
push
in
mov
ds
movsb
imul
dec
repnz
and
into
fcmovb
dec
and
out
push
mov
sbb
fdiv
mov
out
mov
or
sub
imul
xor
aaa
push
or
inc
repz
mov
and
sub
clc
dec
xor
test
cmc
push
test
sub
sarl
cmpb
leave
and
fcompl
lret
movsb
inc
push
mov
hlt
fiaddl
push
adc
mov
mov
test
fsubrp
and
mov
mov
sti
adc
int
sbb
jl
stos
movsl
hlt
test
mov
int3
jbe
in
notl
dec
xchg
in
enter
mov
insl
add
fsubl
cmp
mov
in
fmulp
fidivrl
outsl
fs
mov
or
pop
ss
cwtl
mov
adcl
jnp
jmp
jbe
fiadds
ret
jnp
lret
sub
or
xchg
movl
std
sahf
ljmp
inc
lods
mov
xlat
ret
inc
and
xor
in
jl
xchg
push
dec
cmpsl
roll
dec
dec
xor
push
int
push
cmpsl
lods
test
es
mull
repz
push
ja
mov
mov
jge
push
inc
push
mov
mov
lock
pop
icebp
pop
cmc
push
mov
jl
movsl
cmc
push
add
ret
popa
stos
das
popf
xchg
dec
dec
loop
or
jne
cmp
dec
dec
mov
fnstenv
cs
mov
dec
in
pop
mov
gs
inc
jnp,pt
inc
shll
or
jns
dec
xchg
fs
das
and
cmp
jae
xchg
sub
icebp
loope
out
push
xchg
inc
mov
xchg
enter
pop
cli
int
push
lcall
lcall
inc
pop
aas
pushf
inc
inc
mov
ja
movsl
sbb
sbb
movsl
stos
scas
adc
rcll
cmpsb
iret
orb
and
push
fst
sbb
movsl
jno
adc
jno
sub
and
movsb
push
pop
cmp
imul
xor
insb
lret
scas
cmp
mov
jb
fnstcw
mov
pushw
es
pop
cli
popa
xchg
pop
cmpsb
xchg
out
add
scas
pusha
test
clc
sub
das
lret
lds
sbb
xchg
pop
lahf
add
enter
mov
out
mov
je
sbb
cmp
rol
jb
testb
arpl
enter
inc
xor
adc
push
lret
cwtl
sarb
into
jae
rcl
sbb
bound
ljmp
or
iret
int
jnp
xchg
cltd
pop
loopne
sbb
cmp
push
lret
sbb
dec
dec
test
cld
ss
sub
mov
cs
inc
sub
pop
dec
outsb
add
cltd
dec
daa
dec
adc
stos
xlat
mov
inc
orb
ja
das
mov
mov
roll
adc
dec
cltd
dec
or
mov
push
push
inc
jo
sub
outsb
lret
cltd
cmc
jo
lock
mov
test
dec
popf
jge
or
and
nop
fst
dec
mov
stc
push
test
sub
mov
xchg
movsl
mov
mov
nop
cli
repz
xor
aaa
mov
dec
sbb
cmp
je
aaa
test
push
cmp
xor
addr16
jbe
mov
scas
cmp
mov
jmp
push
inc
cli
mov
dec
and
lods
je
xor
push
jno
pop
scas
mov
icebp
push
and
int
imul
out
aam
add
cmp
pop
dec
add
sbb
stc
mov
out
or
imul
add
inc
pop
xrelease
mov
or
hlt
shrb
cli
dec
jns
lods
inc
or
gs
dec
mov
loope
les
xor
lods
sarl
rcll
and
adc
lret
push
xlat
add
cs
jg
mov
mov
jmp
sbb
stc
cmp
fisttps
dec
int3
jmp
jo
popf
lock
mov
adc
ljmp
and
push
cmp
xor
nop
jno
mov
add
rcll
sbb
repz
hlt
inc
mov
push
xor
push
dec
or
aam
pop
adc
out
xchg
out
loopne
repnz
in
frstor
inc
cmp
pop
add
mov
cmp
shll
sub
push
or
psubsb
sbbl
jns
mov
or
cli
pop
aad
pop
xor
aad
pusha
push
jo
pop
aaa
or
out
fisttps
je
jbe
sahf
sbb
xor
int3
lcall
fimuls
fstps
push
jo
scas
mov
mov
mov
das
aam
rcl
sti
mov
add
cmpsl
fildl
stos
adc
idivl
or
and
dec
and
mov
and
push
repnz
je
mov
mov
icebp
not
or
sbb
lods
xchg
or
push
inc
mov
sbb
lahf
cmc
call
jnp
leave
lea
testb
pop
out
add
push
je
fisttpl
pop
add
lahf
dec
push
gs
ret
iret
mov
sub
xchg
or
push
or
lods
dec
sub
fsubs
pop
pop
jecxz
dec
ror
xlat
lods
mov
inc
in
sub
iret
adc
js
sub
in
jmp
stos
xor
pop
ret
or
icebp
mov
and
pop
call
cwtl
sub
mov
push
pop
xchg
test
in
push
cltd
cli
repnz
int
pushf
xchg
jmp
mov
repz
call
cmp
sub
mov
dec
setae
sub
push
cmpsl
es
lea
xor
or
xchg
fimull
scas
loop
insb
jl
and
cmpsb
popa
aaa
push
mov
cwtl
add
je
pop
out
jbe
sbb
test
sti
push
mov
mov
mov
push
popf
mov
mov
aaa
dec
es
dec
pusha
mov
insb
mov
mov
xchg
mov
dec
jo
pop
fwait
cs
jle
push
adc
cli
std
xchg
adc
int3
js
xor
sbb
inc
inc
test
std
aas
cmpsb
mov
dec
pop
or
ret
xchg
mov
je
fnstcw
mov
lret
sub
or
movsb
loope
fsts
int3
in
cli
lods
ret
and
mov
push
lds
or
sbb
insb
outsb
call
and
mov
inc
in
xor
pop
mov
xchg
aad
shlb
mov
subl
cmp
push
and
stos
imul
push
xor
lcall
insb
push
jnp
lock
push
mov
push
pushf
sbb
scas
pop
std
mov
shlb
push
jge
pop
les
jl
iret
insl
jle
push
mov
mov
andb
jns
adc
dec
in
jnp
sub
mov
dec
xchg
xchg
dec
jle
dec
pop
repnz
int
dec
adc
scas
mov
adc
stos
cltd
mov
repnz
pushf
xchg
push
adc
rclb
sub
popa
xor
shrb
lcall
pop
dec
push
cmpsl
xchg
sti
mov
push
pop
sar
int
xor
inc
loope
ljmp
cli
or
ffreep
shrl
dec
andl
test
adc
jg
jl
stc
fs
jnp
aaa
push
or
mov
gs
mov
lcall
ljmp
icebp
cmp
addl
dec
mov
push
pop
dec
out
cli
iret
aaa
push
sub
push
cltd
ljmp
inc
ret
sbb
negl
mov
pop
lret
and
xchg
dec
jl
movsb
rolb
pop
cwtl
mov
push
add
mov
xchg
dec
mov
xor
mov
jge
cmp
mov
outsl
inc
pop
push
ja
or
add
add
jp
test
mov
push
lods
aaa
ss
jb
fistpl
cwtl
push
and
loope
gs
aam
or
rcl
sub
lcall
mov
lods
and
push
adc
insl
out
data16
push
into
loope
inc
jp
cwtl
inc
fsubr
jnp
xor
jmp
mov
cmpsb
adc
std
inc
cmp
ds
test
stc
sti
or
dec
dec
hlt
pop
fstpl
cmp
repz
mov
stos
xlat
mov
mov
jmp
cwtl
lods
icebp
aaa
into
sub
mov
mov
test
xchg
mov
cmp
lea
xchg
inc
mov
or
movsl
stc
push
bound
fisttpll
nop
push
das
imul
inc
fldenv
xchg
xlat
repnz
push
js
jne
dec
pop
jl
insb
xor
sbb
push
inc
push
jg
rcrl
movsb
mov
daa
dec
aas
xchg
loope
iret
xchg
sbb
mov
sub
test
jmp
add
aaa
scas
test
cmp
inc
mov
mov
jmp
xor
push
popf
jbe
fdivrl
sub
jo
mov
or
adc
ss
xor
fstps
insb
xchg
mov
cmp
out
or
mov
ja
lods
inc
inc
fnstsw
mov
sub
cwtl
pop
fsubrs
mov
mov
ljmp
lods
pop
cld
ret
cmp
aaa
mov
enter
xchg
inc
or
cmpsb
jae
iret
loope
rclb
adcb
arpl
fsub
mov
jle
fsts
dec
push
push
mov
mov
jne
cltd
or
sub
sbb
subb
sub
mov
int3
addr16
jecxz
outsl
dec
sbb
aaa
dec
movb
das
sbb
jle
cmp
lods
mov
pop
cmpsl
dec
clc
ljmp
stos
fbstp
fistpl
lods
add
popf
pop
mov
sbb
mov
in
scas
pusha
dec
pop
cmp
stc
stos
ret
es
pushf
stos
push
ja
lock
popf
addl
xor
jmp
jp
mov
or
and
cmc
loop
inc
lds
pop
mov
pop
cli
xchg
push
xchg
mov
jmp
and
shlb
in
sub
vandnps
cmpsl
movsb
ret
mov
jecxz
adcl
jle
fstps
xchg
das
mov
imul
adc
pop
sub
out
frstor
cmpsl
sbb
fsubrl
or
jne
fsts
stc
cmp
inc
sahf
dec
icebp
mov
unpcklps
xchg
push
leave
push
sahf
pop
movsl
or
lods
xchg
jg
iret
adc
push
fidivs
push
loop
inc
sbb
xchg
jecxz
movl
out
cmp
push
and
lds
and
mov
fs
clc
push
daa
fmul
jecxz
iret
icebp
lret
mov
fwait
xor
fdivrp
mov
mov
shrb
test
rcr
push
mov
aaa
loope
aaa
lret
xlat
pop
xor
es
icebp
or
call
test
dec
inc
int
inc
shlb
sbb
ror
sub
scas
mov
int
or
fstl
xchg
popa
adc
xor
fldenv
mov
in
mov
mov
push
push
jl
int
cmp
in
add
push
ficoml
xchg
push
fcmovne
pop
push
iret
jg
lahf
sub
icebp
sub
push
loop
cmpsl
es
test
ja
lret
cmp
jge
adc
shrb
stos
nop
dec
push
mov
cmpsb
push
loop
sbb
addr16
scas
xlat
mov
mov
mov
out
inc
mov
lock
pop
jp
lret
dec
or
mov
xchg
fimuls
cltd
call
jae
cltd
mov
dec
dec
ds
daa
jnp
or
cmpl
lcall
icebp
sub
loope
add
mov
ss
mov
xor
xchg
xorb
xlat
roll
arpl
ret
jnp
and
push
push
add
jne
dec
ds
lea
repz
pop
inc
cld
push
jbe
fwait
jecxz
xor
fidivrl
sbb
rorb
cmp
xlat
jmp
sub
cwtl
call
sbb
pushf
pop
xlat
stos
test
daa
mov
cmp
inc
cli
call
or
mov
xchg
sub
pop
adc
jl
mov
rcr
mov
xchg
dec
sbb
pop
adc
push
inc
dec
enter
dec
leave
outsl
aas
andb
aas
inc
stos
cs
inc
shrl
add
xchg
push
adc
dec
adc
add
repz
sbbl
ds
sbb
nop
jecxz
sbb
pop
bound
sbbl
cmp
push
mov
jo
pop
cmp
call
jnp
mov
icebp
sbb
mov
inc
pop
movsl
stos
mov
jmp
outsl
xchg
adc
pushf
sub
cmp
xor
fdivs
sub
cmpsl
jmp
test
sub
and
aaa
mov
nop
pop
scas
inc
mov
add
adc
or
xchg
sub
add
xchg
dec
insl
mov
rolb
cltd
sti
jo
fprem1
stc
sub
jp
push
pushl
test
test
mov
adc
cmc
sti
dec
xchg
mov
movsb
test
pusha
fs
leave
xchg
mov
pop
rcpps
out
test
insl
cmp
and
ret
daa
and
adc
or
mov
inc
pop
stos
cltd
jae
or
das
imul
jns
loope
popa
xchg
adcb
subb
ljmp
ficoms
push
xchg
icebp
stos
adc
aaa
xor
lcall
bound
int
jecxz
imul
cmp
packssdw
orb
call
ficompl
inc
mov
stos
push
repz
addr16
scas
dec
jg
mov
mov
push
add
sbb
pushf
pushf
dec
ja
and
jg
pushf
imul
mov
xor
fiaddl
xchg
mov
sub
add
int
mov
cli
cmp
mov
xlat
jno
add
dec
arpl
sbb
mov
rorl
pop
lahf
cltd
rcrl
hlt
mov
ljmp
inc
cmp
inc
push
call
cmp
test
push
add
mov
mov
popf
dec
in
push
fcomps
cmp
jae
cmp
push
pop
adcl
mov
jbe
and
iret
inc
sbb
inc
call
push
sbb
mov
mov
jnp
lret
test
ss
adc
adc
adc
fsubr
leave
push
std
pop
incl
adc
and
shrl
gs
xor
loope
int3
fwait
repnz
sahf
repnz
das
ljmp
cmp
dec
mov
jecxz
pusha
adc
cmp
or
sbb
pop
inc
push
mov
jl
and
rorl
xchg
stc
mov
jno
fadds
jne
shr
sub
ret
out
cmp
test
pusha
and
jmp
or
jne
add
xchg
out
xchg
sbb
sub
pusha
roll
mov
mov
inc
sbb
jmp
jp
and
sub
fisttpl
dec
and
test
jmp
pop
int3
mov
sub
arpl
rcrb
jno
push
cmpl
daa
mov
jge
mov
int3
data16
inc
jbe
sub
and
xchg
dec
inc
or
mov
jae
and
outsb
sbb
or
lret
inc
rcrb
adc
aaa
pop
push
faddl
sub
pop
repz
jmp
in
shlb
test
mov
out
pop
or
outsb
movsl
mov
adc
dec
loope
xchg
dec
mov
rolb
sub
es
adc
dec
lods
fwait
dec
das
inc
xor
pop
lods
xchg
pop
fbstp
mov
push
cmp
addl
push
imul
cmp
push
fstl
les
push
out
testb
sbbb
in
cmpsl
mov
or
push
jo
jmp
stos
stos
xor
push
mov
subb
mov
bound
ljmp
outsl
adc
push
xchg
sbb
sarb
sub
lcall
or
jns
or
aas
pop
pop
test
cmp
es
sbb
fimuls
out
mov
test
es
mov
sbb
inc
or
jbe
sbb
sbb
and
sti
mov
mov
push
roll
cwtl
cld
lea
push
jnp
out
mov
push
mov
cmp
xor
push
stc
sbb
jne
add
inc
lret
in
inc
rcrl
cmp
push
push
xor
das
fstpt
pop
add
xor
into
xchg
insb
pop
addr16
int3
out
xorb
push
nop
adc
inc
mov
jecxz
mov
repz
lea
add
xchg
imul
jb
xor
push
jmp
mov
jg
stos
mov
pop
dec
add
xchg
push
push
fists
orb
xor
dec
aad
in
dec
in
cs
or
fsubl
xchg
push
and
sti
ds
xchg
sub
mov
pop
fcoml
loop
dec
lcall
mov
repnz
icebp
cld
imul
lods
je
xchg
push
mov
inc
pop
dec
xchg
sub
loopne
hlt
aaa
jecxz
or
lret
sahf
jmp
scas
std
js
sub
outsl
cmc
dec
mov
stc
jp
fwait
adc
jns
xor
test
cld
jle
pushf
xchg
inc
fwait
pop
and
jle
out
daa
mov
add
ficoms
mov
cmpsb
mov
lcall
mov
fsubs
push
add
push
lods
jnp
lock
inc
data16
scas
inc
fstpt
sub
xchg
test
cltd
test
xor
lcall
fidivs
jbe
mov
push
push
inc
jo
imul
arpl
and
sarb
adc
out
and
xlat
lock
xchg
daa
push
aas
dec
sub
out
and
mov
mov
and
push
and
mov
repnz
xchg
cmpsl
fcompl
scas
lock
push
pop
xor
push
mov
mov
mov
push
in
xor
cmpsl
xchg
pop
lods
push
xchg
imul
das
addr16
enter
cld
push
xor
sub
pop
shrb
bound
nop
jl
call
lods
outsb
sub
adc
xor
cmp
call
arpl
inc
dec
inc
mov
push
addl
ja
mov
sbb
add
cld
mov
jp
push
mov
pop
mov
lret
push
xchg
dec
inc
push
outsl
or
cwtl
cld
lahf
out
call
repz
sub
mov
cmc
outsl
fadds
jno
scas
mov
xchg
cmp
mov
cmp
mov
xchg
mov
repz
pushf
ds
mov
aad
mov
pusha
jo
mov
repnz
xor
cmp
arpl
out
jo
bswap
jb
out
mov
mov
insl
fdivs
cmp
xchg
mov
and
xchg
pop
mov
sahf
jne
scas
sbb
arpl
inc
pushf
mov
js
pop
adc
pusha
mov
std
push
adc
jl
inc
cmp
inc
lret
cmp
cs
jecxz
cmovne
mov
jl
ret
sbb
mov
inc
pusha
imul
orb
fsubrp
sub
jbe
movl
inc
das
mov
jo
sub
mov
mov
pusha
add
in
pop
xchg
cmp
mov
leave
pop
je
inc
jg
cmpsl
adc
scas
ds
subb
movsl
nop
or
orl
cmpsl
ret
fs
mov
xlat
loopne
or
adc
xchg
hlt
call
je
sub
out
inc
out
xor
jecxz
cmp
mov
cmc
in
fildll
dec
mov
jmp
xor
test
mov
stos
rcll
sbb
insb
push
roll
stos
lret
rol
mov
adcb
in
push
int
in
add
xchg
cmp
in
and
ljmp
pop
sbb
xor
subb
mov
jns
adc
insl
cmp
lock
negl
jecxz
pop
jbe
mov
ficoms
das
add
aam
out
pop
sub
js
xchg
xor
mov
sahf
fists
inc
add
out
scas
inc
push
lds
xor
stos
jbe
and
mov
addb
add
lcall
push
popa
push
test
fldl
xchg
pusha
xlat
js
mov
and
or
jnp
xor
sbb
shlb
push
dec
in
ret
je
push
incl
mov
mov
aad
inc
popf
jb
cli
push
cmpl
shrl
or
aad
ja
xchg
insl
or
mov
xor
rcrb
sub
sbb
dec
subl
jb
sti
xchg
lcall
repnz
push
lahf
ret
ror
push
dec
push
mov
fsubs
enter
xchg
cld
loopne
rcl
adc
stc
mov
sbbb
scas
rcr
dec
orl
jmp
inc
inc
fsubrs
out
out
inc
inc
movsb
jns
scas
dec
and
cs
xchg
cli
rcr
loop
lods
das
sbb
fwait
repnz
inc
inc
dec
adc
mov
xchg
mov
inc
xor
pushf
mov
or
xor
sub
pusha
lcall
pushf
xchg
jnp
fcmovb
leave
inc
iret
xor
in
and
xchg
lods
inc
xchg
stos
std
jmp
or
in
je
sub
jl
pop
pop
or
inc
fidivrs
icebp
jno
or
lahf
push
mov
stos
sub
mov
adc
and
dec
jnp
or
cli
int
dec
pop
out
xchg
push
divb
and
xor
inc
call
andl
and
jne
xchg
mov
inc
les
aaa
sbb
sub
add
movups
in
cmp
mov
sub
aad
add
stc
mov
popa
outsl
fstl
sbb
add
jl
cmp
xchg
xor
sub
push
sti
pop
stos
xor
in
aaa
repz
push
jo
inc
mov
adc
out
outsl
fdivrs
add
insb
lea
jge
clc
pop
imul
push
in
mov
dec
inc
call
add
xor
call
or
and
mov
mov
lcall
inc
cs
pushf
shlb
in
bound
ret
push
mov
enter
lods
cmpsb
push
push
fisubl
cli
test
cmp
add
push
inc
dec
ret
xor
dec
lret
mov
loopne
xchg
sbb
mov
clc
daa
jno
xor
xlat
je
mov
aaa
cwtl
out
les
or
pop
leave
popf
std
mov
mov
ret
dec
mov
jle
mov
pop
mov
gs
cltd
leave
aam
push
pop
mov
in
addr16
pop
ds
mov
push
je
jb
lods
jp
cmpl
ss
aad
add
ret
jg
dec
sbb
mov
std
mulb
mov
ss
pop
mov
aam
push
cmp
movsb
mov
mov
imulb
pop
aas
inc
insl
or
cmp
mov
inc
hlt
add
mov
rclb
lret
cmp
mov
lcall
daa
and
cwtl
fisubs
xor
adc
dec
mulb
out
sbb
dec
mov
jb
cmpsl
add
inc
cmp
aad
jp
icebp
mov
cmc
pop
xor
enter
dec
es
inc
sbb
push
xchg
enter
pop
push
mov
pop
dec
pop
adc
xchg
loopne
add
jb
cmc
xchg
sbb
das
stc
fisubrl
push
out
push
xchg
into
mov
out
shll
pusha
sbb
stos
cmp
and
adc
mov
dec
jns
leave
and
pushf
in
out
mov
testl
pop
addr16
iret
fnstcw
jmp
lcall
movsl
pop
rcrb
out
push
jns
push
pop
and
ficomps
pop
pop
fsubl
sti
jb
in
test
cmp
jmp
in
in
jmp
rol
push
sub
and
push
push
and
aam
pusha
xchg
pushl
sub
aam
incb
sbb
dec
add
nop
mov
inc
mov
cmp
mov
add
or
or
int
hlt
test
aad
sbb
jo
adc
sti
push
mov
sub
jl
stos
fcompl
cmp
aad
jmp
loop
bound
gs
adc
push
push
sub
xchg
sarl
dec
jns
shrl
xchg
pusha
fisubrs
or
pop
cmp
frstor
mov
in
pop
clc
jge
pop
mov
add
repnz
dec
cmp
mov
cmc
inc
push
repnz
clc
sbb
loope
mov
sar
sbb
jp
scas
test
dec
inc
and
fistpl
jle
aaa
jb
add
in
enter
ja
outsl
inc
stc
or
daa
dec
dec
hlt
ds
inc
das
ja
in
and
js
repz
lcall
sub
les
dec
gs
fmul
pop
loope
inc
dec
or
or
mov
inc
pop
adc
aas
call
lock
outsl
push
adc
scas
mov
cmp
inc
pushf
pop
sbb
adc
call
sbb
aad
cs
sub
xchg
jp
insb
jmp
add
adc
xchg
mov
icebp
nop
fcmovnb
jo
iret
pop
xchg
bound
and
faddp
aam
mov
push
fimuls
inc
xchg
mov
lock
adc
cmp
adc
cltd
ja
loopne
cmp
cmpsl
pop
iret
popa
adc
mov
das
push
shrd
fnstsw
mov
push
ret
mov
jp
push
scas
mov
push
shlb
insl
inc
pop
sbb
cwtl
or
filds
mov
adc
jb
fdivl
sub
les
add
emms
lcall
xor
shll
adc
imul
fnstenv
nop
mov
or
adc
dec
cmp
fwait
notl
xchg
or
sub
xchg
cmp
pop
jl
and
add
lock
pop
scas
test
lea
push
repnz
out
fistl
xchg
or
ss
rorb
dec
je
and
shrb
aam
test
test
aas
sahf
fwait
ror
pop
addr16
lds
push
imul
data16
pop
cmp
test
push
inc
js
repnz
lea
and
sbb
xlat
jecxz
shll
pop
add
adc
jmp
mov
in
cmp
scas
stos
mov
pusha
cmpsb
or
or
xchg
insb
xchg
cmpl
mov
sub
in
push
std
negl
jo
arpl
adcb
push
mov
cmp
and
jb
fcmovb
and
stc
hlt
cmp
xchg
push
cmp
orb
mov
pushf
jb
mov
dec
or
mov
and
cmp
cmp
data16
lods
mov
sub
mov
pop
iret
or
adc
jns
arpl
daa
ficompl
fstps
or
and
es
pop
int
out
fsts
in
out
dec
mov
mov
das
stc
int3
insb
adc
inc
xchg
mov
aas
js
or
mov
mov
jne
sarl
mov
fisubs
sub
repz
mov
xchg
lods
sub
icebp
ret
dec
subb
jmp
sbb
imul
xor
test
pop
jg
sub
xchg
push
and
bound
addr16
hlt
mov
sub
sbb
ja
jecxz
imul
push
push
es
divb
dec
push
jg
push
xchg
jbe
jecxz
jbe
and
ja
popa
cld
push
test
xor
test
movsb
test
push
loopne
inc
pop
jno
inc
in
sarl
dec
icebp
inc
add
lret
sti
pop
and
movsl
into
fisubrs
sti
inc
sbb
or
arpl
call
in
sub
mov
jle
outsl
mov
in
xchg
mov
add
inc
push
sub
lods
rcll
xor
rorb
icebp
jg
pop
lods
repnz
pop
test
pop
mov
int3
mov
lods
inc
add
inc
mov
mov
stc
faddp
mov
and
lret
jge
dec
icebp
adc
ret
ffree
jle
cmpl
jne
dec
jne
jge
pushf
inc
sarl
imul
mov
popa
xchg
adc
pop
xchg
pop
cmp
push
data16
sbb
jle
std
cmpsl
fnstsw
push
lret
cmp
pop
push
mov
out
cmp
sbb
inc
std
cmp
dec
movsb
or
pop
orb
sbb
adcb
jno
fisubl
in
leave
in
cmp
dec
sbb
adc
lds
test
daa
mov
pop
int3
pop
cmpsb
lret
push
mov
repz
jl
mov
call
shll
lods
aaa
cmp
fcmovbe
adc
addb
sbb
clc
jns
adc
aas
popf
xor
lods
std
inc
and
jae
les
loopne
sub
push
aas
dec
xor
or
jecxz
addb
insl
mov
dec
je
sbb
dec
or
mov
stos
out
push
imul
pop
nop
movsb
test
inc
pop
and
call
mov
sbb
lahf
das
stos
mov
js
dec
loop
mov
jl
stos
jno
jp
xchg
inc
loope
popa
jae
rorl
lcall
pushf
jmp
mov
jl
sub
fdivrs
and
or
sbb
xlat
jb
jl
data16
movsl
iret
add
roll
cmp
xchg
mov
or
inc
repz
xchg
cld
push
xlat
jnp
jae
push
adc
xchg
sub
popa
dec
mov
push
iret
mov
negl
xchg
push
mov
xchg
imul
aas
out
movsb
arpl
ss
int
lods
mov
scas
mov
xchg
mov
fidivrs
in
lock
iret
mov
dec
jp
out
imul
out
ds
sbb
push
test
jmp
push
fistpll
shrb
test
xor
inc
adc
ss
hlt
lcall
or
cmp
fs
lods
adc
or
psllq
add
das
in
sbb
or
xorl
jbe
in
lds
rcrl
push
outsl
xorb
push
addr16
mov
jl
or
mov
jns
in
push
pop
std
mov
pop
push
scas
add
es
push
out
in
mov
sarb
test
cli
sbb
inc
arpl
or
pop
xlat
jnp
sarl
das
cmp
loop
lock
push
popa
std
popa
aas
push
popf
fst
movsb
mov
push
adc
jmp
mov
testb
fmul
fcoms
jmp
mov
ljmp
xor
cld
add
pop
incb
ss
push
test
or
fcoml
inc
pop
pop
idivb
adc
fistpl
outsl
pop
pop
pop
ffreep
dec
rorb
push
repz
aaa
enter
and
sbb
lahf
cmp
sti
mov
xchg
fdivrs
leave
stos
lds
inc
sti
pop
jbe
and
jg
hlt
and
jns
mov
pushf
sub
test
daa
insl
sbb
mov
ss
scas
int
push
movb
aas
xchg
loope
aad
loopne
or
lahf
pop
mov
mov
daa
cmc
pop
insb
or
jmp
out
mov
gs
jmp
push
jb
fdiv
inc
pushf
lods
in
inc
mov
std
popa
movsb
adc
inc
xchg
adc
shlb
cmp
mov
shrb
or
push
out
sub
inc
ss
js,pt
xchg
ss
mov
cmp
cs
iret
loopne
lret
data16
inc
mov
out
imul
dec
mulb
xchg
cmp
pop
add
sbb
fcomi
roll
sbb
mov
mov
inc
xor
xlat
fsub
popf
daa
inc
mov
std
dec
push
outsl
aad
loop
pop
pushf
mov
mov
hlt
mov
nop
cld
ficoms
mov
out
arpl
iret
rcrb
das
movsl
sbb
nop
pop
sbb
dec
lcall
pop
sub
jbe
xor
int
and
in
and
xchg
dec
mov
inc
xor
scas
outsb
imul
repnz
aad
inc
pop
shrb
cmp
push
pop
bound
repnz
adc
aam
out
pop
mov
pop
mov
dec
in
ret
shlb
mov
mov
pop
fldl
testb
aad
xor
and
andl
mov
cltd
xchg
arpl
orb
cli
dec
mov
imul
int3
mov
or
hlt
sub
outsl
cltd
and
pop
outsl
sub
in
adc
out
in
mov
dec
fldt
movsl
movsb
popa
and
sti
dec
or
xorb
aaa
mov
popf
add
sbb
push
lahf
push
mov
dec
push
sub
jmp
in
adc
xchg
inc
lahf
mov
mov
fcompl
pop
jmp
sub
into
les
into
push
ljmp
fdivl
dec
cmp
mov
pop
jae
adc
adc
popa
lcall
sti
jmp
test
adc
enter
stos
daa
pop
bound
not
xchg
lret
pop
aaa
pop
jle
cwtl
xchg
lahf
sbb
fcoms
cli
pop
cltd
mov
bound
into
data16
pop
int3
lret
jg
adc
xlat
add
dec
int3
xchg
mov
hlt
movsb
xchg
mov
adcb
addr16
inc
aas
sbb
mov
mov
test
das
inc
adc
movsl
pop
bound
call
lea
jecxz
lock
pusha
cltd
rolb
fistps
pushf
sahf
and
aas
jmp
sub
into
in
ror
daa
ret
sub
xor
mov
enter
cltd
or
bound
pop
inc
xchg
pusha
sti
inc
push
scas
aas
stc
adc
xor
add
fs
xor
cs
pop
mov
lret
andl
push
pop
dec
jmp
lds
icebp
in
mov
xor
dec
fisubs
cs
iret
push
js
in
aam
insb
or
ljmp
jo
xor
ja
and
xchg
jmp
push
dec
dec
and
or
adc
lcall
insl
sbb
xor
mov
jne
cmp
fistl
hlt
mov
loope
mov
in
stos
outsl
dec
out
js
push
inc
jmp
dec
cs
pop
stc
inc
dec
adc
jnp
inc
hlt
xchg
scas
fcompl
cmpsb
or
mov
sub
jmp
out
pop
jg
repnz
and
mov
pop
jl
xchg
push
fcmovne
hlt
cmpsb
push
jbe
iret
or
nop
addr16
idivb
call
sarb
mov
mov
fistpll
sub
inc
push
sub
das
les
jbe
dec
jl
xchg
sahf
or
sbb
aam
dec
pop
in
je
or
push
inc
ljmp
inc
adcb
sbb
cmp
bound
jae
arpl
mov
adc
ret
jmp
lret
pusha
mov
ds
js
sarb
mov
aam
aad
popa
dec
xchg
imulb
mov
aad
or
adc
jo
jne
popf
stc
cli
xlat
push
push
in
sti
lods
jp
mov
mov
jmp
ret
adc
mov
mov
mov
mov
out
sbb
dec
aad
add
stos
xchg
mov
xor
mov
jecxz
mov
xchg
mov
dec
xor
enter
idiv
subb
and
xor
fdivr
and
sub
lods
mov
xchg
add
mov
fxch
scas
pop
stos
mov
jmp
je
clc
mov
sub
lret
or
xor
dec
arpl
lock
and
aad
insl
filds
mov
mov
out
popa
dec
call
mov
mov
push
pusha
push
fcoms
test
aaa
rcrb
sbb
ret
xchg
push
pop
and
xchg
dec
jecxz
aad
std
std
push
ja
mov
mov
and
jnp
fsts
clc
and
pop
cmc
sbb
ja
aam
jmp
aas
loope
in
les
inc
jo
mov
mov
xchg
fcoms
movsl
mov
lahf
loope
js
push
inc
jl
incl
dec
pop
dec
xchg
scas
rclb
outsl
scas
hlt
out
adc
mov
insl
or
sub
push
in
inc
mov
add
sub
icebp
fwait
pushf
cmpsl
movsl
aas
sarl
push
sub
shlb
stc
dec
lret
insb
xor
pop
stos
hlt
push
insb
jo
inc
mov
lret
add
daa
and
shll
cwtl
ds
out
cmovg
cs
ja
jg
push
sub
mov
in
arpl
dec
jns
test
push
sbb
lea
xchg
fwait
push
jg
push
mov
ffreep
mov
pop
sub
imull
enter
and
pop
out
mov
test
sub
jmp
pop
icebp
test
pushw
movsl
jl
inc
sub
scas
testb
aaa
and
ret
adc
sbb
and
test
aam
cmp
cwtl
and
sbb
shr
je
lea
ret
xor
dec
insl
pop
outsl
sbb
enter
mov
xchg
pop
inc
dec
movsl
or
jge
dec
adc
cmc
addr16
add
fbld
rcl
adc
imul
xchg
mov
xchg
push
sub
loopne
and
pop
jae
aaa
jne
or
movl
in
push
call
push
jmp
inc
sbb
icebp
push
fwait
push
test
ljmp
mov
cmp
adc
fwait
xchg
lds
repnz
or
mov
xor
aaa
mov
mov
cmp
negl
roll
mov
inc
aas
loop
add
aad
fs
mov
lock
es
popf
mov
movsb
add
in
xchg
xchg
in
rcll
cmc
or
mov
fwait
mov
sbbl
icebp
xchg
mov
xchg
pusha
xor
sub
sub
out
mov
add
fidivl
xor
or
movsw
xchg
pop
mov
mov
push
lods
xchg
lcall
pop
lcall
sahf
adc
imul
das
ss
lret
jns
push
xchg
push
pop
pushfw
ja
mov
pushf
sub
subl
into
icebp
xchg
xlat
fwait
mov
jp
cmp
pop
adc
jmp
mov
addb
sbb
pop
fsubs
xchg
out
xor
add
fistpll
popf
or
xor
jbe
jge
fildl
lods
fistpll
mov
cwtl
lahf
je
aad
scas
cltd
mov
inc
dec
aam
or
cmpsl
fnstenv
push
icebp
scas
push
hlt
sub
mov
cwtl
aaa
dec
nop
pop
fsts
sarb
mov
lods
sbb
push
stos
push
inc
and
mov
and
add
lods
cmp
jnp
xor
cmpl
adc
out
dec
inc
push
call
cmc
jge
push
in
jno
inc
shrb
insl
pop
and
push
int
adc
xchg
cwtl
jmp
xor
pop
hlt
into
inc
pop
mov
cli
into
enter
pop
xchg
movsl
push
mov
and
sub
push
cmp
inc
in
or
jl
jnp
dec
or
dec
pop
ret
cmp
xor
mov
inc
rcr
popf
sub
jl
les
addr16
sbb
xchg
iret
lret
xlat
jbe
push
ret
testl
jne
repnz
fs
pop
and
push
int3
pushf
movsb
mov
dec
das
scas
jbe
mov
scas
out
aad
adc
sub
arpl
aaa
mov
and
and
es
ret
rcll
push
lahf
out
sub
mov
fstps
shlb
adc
mov
xchg
int
and
ss
ds
pusha
mov
fidivrs
push
roll
sub
mov
repz
mov
mov
pop
test
xor
push
push
xchg
push
push
dec
xor
cld
jbe
xchg
sarl
cltd
sti
divb
mov
insl
mov
out
pushf
push
das
gs
mov
roll
fcomps
nop
daa
imul
scas
aad
cmpsb
rcr
call
cs
sub
icebp
jg
int3
sarl
dec
xchg
loopne
faddl
dec
inc
jecxz
out
jae
xor
fisttpll
les
sub
xchg
sub
jnp
xchg
xor
in
cmpsl
pop
outsl
sbb
fisttps
lock
jne
repnz
aad
push
testl
jns
lods
rorl
div
pop
stos
push
stos
fadd
sbb
jle
out
call
bound
xor
adc
mov
shrl
pop
fidivrl
or
fmuls
cmp
pop
sbb
mov
in
xor
jmp
pop
sub
test
pop
or
mov
in
dec
jo
ret
in
mov
xchg
jne
fbld
push
sub
and
rorl
lret
mov
fbld
or
or
out
lret
divb
lcall
lods
xchg
fwait
xchg
je
stos
div
push
push
hlt
dec
cltd
fnsave
or
or
dec
addr16
testl
les
pop
xor
sub
out
mov
stc
filds
dec
push
mov
push
xor
xchg
push
xor
and
ds
mov
dec
test
imul
daa
push
cmp
imul
xchg
mov
clc
jnp
std
insl
enter
or
pop
jbe
shll
dec
dec
pop
cmp
stos
mov
cltd
xchg
out
in
and
les
out
aas
jbe
lret
add
mov
xchg
aad
inc
sub
mov
jp
cli
cmp
mov
aad
adc
stos
dec
mov
push
mov
fistpl
fnop
add
mov
jno
pop
jae
sbb
lods
or
dec
or
push
lods
movsb
in
fdivp
pop
test
push
push
out
jae
adc
mov
add
mov
shl
fadd
push
lahf
mov
mov
shll
adc
fsubrl
in
aas
mov
ja
imul
xchg
jl
pop
repz
in
decb
adc
test
pop
imul
push
ret
fisubl
popf
jge
stos
push
js
cli
mov
adc
int
in
cltd
mov
test
pop
jae
cli
fucomip
test
sahf
dec
nop
mov
and
repnz
imul
loopne
lea
fsubrs
rcl
adc
mov
incb
cmp
cld
add
test
add
adc
repz
js
idivl
mov
mov
stos
dec
sahf
sub
push
pop
jno
mov
cs
jg
jns
jns
adc
jae
cmpl
pop
pop
shrl
jge
xlat
faddl
xchg
aaa
dec
or
pop
jmp
cmp
aad
xchg
ljmp
xor
pop
orl
out
js
adc
faddl
xchg
lock
shll
jp
xchg
sub
pop
inc
push
and
push
roll
sub
scas
in
sub
inc
cld
test
push
test
outsb
adc
clc
inc
and
jne
bound
je
jmp
mov
stc
je
cltd
mov
sub
xor
cwtl
xchg
mov
mov
pop
adc
mov
mov
mov
jecxz
rolb
jg
mov
ss
xchg
inc
mov
adc
dec
test
movsb
pusha
and
out
pop
loopne
xchg
fldl
in
pop
loopne
xor
dec
or
and
or
mov
add
adc
mov
fstpt
ficomps
rorb
aad
sti
push
dec
inc
in
or
stos
cwtl
mov
mov
les
lahf
xchg
push
pop
push
pushf
fisubrl
push
dec
lods
fldl
dec
and
idivl
stc
fisubrs
mov
xchg
add
jecxz
cmp
push
mov
sub
xor
repnz
ss
cmp
sbb
xchg
dec
push
jbe
test
lret
imul
xchg
popf
adc
dec
xor
jecxz
or
sbb
or
add
jg
xor
add
xor
ret
and
outsl
push
or
cmp
idiv
insl
cmp
push
xchg
es
rcll
sbb
sbb
outsb
lods
fs
xor
mov
out
dec
xor
fld
push
xor
lahf
aad
sub
ficoml
insb
outsl
xchg
dec
lret
cmp
pop
int
cwtl
or
xor
inc
call
out
cmp
stos
and
in
mov
pop
insb
push
movsb
add
ret
daa
ljmpw
add
mul
mov
dec
push
or
mov
orl
test
adc
fisttpll
loopne
xor
inc
mov
out
sarb
cmpsb
mov
mov
arpl
dec
sbb
sub
iret
lret
cwtd
mov
sbb
mov
lods
mov
xorb
and
mov
lea
lds
negb
mov
jecxz
jb
mov
sbb
cmc
pop
iret
ficoms
mul
cwtl
pop
das
je
out
xchg
add
cmp
jo
add
sbb
adc
rcrl
push
loop
adc
mov
cs
pop
cmp
dec
pop
xchg
pushf
rcr
pop
mov
repz
sbb
xor
inc
jle
and
sbb
push
icebp
mov
scas
into
test
in
call
jns
push
push
mov
push
mov
lahf
ja
xchg
adc
xor
imul
mov
mov
mov
pop
xlat
out
and
sahf
cmpl
ret
xlat
adc
icebp
je
out
mov
leave
jnp
sub
mov
push
faddl
and
gs
and
jae
xchg
xchg
or
ret
ss
pop
sbb
andl
mov
inc
jb
push
std
nop
idivl
insl
jb
push
std
loop,pt
js
loopne
fistl
andb
stos
hlt
inc
cmpsl
in
aas
jb
andl
std
xor
cld
dec
xor
lods
cmp
sbb
daa
out
inc
or
cmp
mov
out
les
dec
std
mov
pop
xor
mov
imul
je
dec
arpl
mov
lret
call
mov
lock
sbb
cli
fstl
sbb
sbb
xchg
fsubrs
jp
fs
sti
xchg
loopne
add
fadds
icebp
xchg
imul
inc
mov
xor
decb
fiaddl
jmp
scas
scas
aaa
test
xchg
jg
push
cmp
rorb
into
int
subb
insl
je
push
or
pop
test
cmc
adc
lret
cs
lods
jo
inc
push
rol
iret
pop
pop
jecxz
pmulhuw
lcall
mov
rolb
xchg
sub
call
lods
imull
dec
pusha
mov
sbb
inc
mov
sbb
jmp
add
daa
mov
mov
dec
jg
mov
dec
loope,pn
push
icebp
movaps
outsl
jecxz
ljmp
in
int
insb
inc
jae
push
pop
js
div
push
jno
add
insl
mov
out
fmuls
cmp
imul
data16
lret
lock
lret
push
add
xor
add
lock
gs
mov
dec
leave
pop
mov
sbb
std
push
std
aas
cltd
fidivs
cmc
add
jbe
cli
cmp
xchg
das
jl
lcall
enter
mov
nop
ss
lock
xchg
imul
pop
push
and
sahf
int
mov
adc
insb
mov
mov
out
sti
push
stos
push
js
in
cld
je
into
lods
sbb
testl
push
xchg
out
mov
sti
cmpsb
sub
cld
mov
aad
mov
xor
xchg
fnsave
dec
popa
fisubrs
xchg
pop
jae
fldcw
int3
das
xchg
dec
cmp
movsb
stos
add
test
jecxz
lahf
and
jge
pusha
and
imul
sbbl
out
inc
call
aas
add
stc
cmpb
xor
in
jp
cmpsl
sub
jmp
shlb
call
repnz
mov
lds
ret
or
shlb
adc
jbe
push
pop
jecxz
push
mov
cltd
push
push
dec
sub
mov
in
xchg
fimull
pop
jbe
xor
subl
unpckhps
sbb
adc
fadd
xor
jbe
cmpsb
or
inc
jns
push
insl
add
mov
jns
repz
dec
xchg
into
out
outsb
pop
gs
push
jge
xor
mov
pop
repnz
in
mov
mov
in
mov
sub
jns
repz
jl
mov
adc
mov
adc
test
cwtl
ja
dec
shlb
jecxz
adc
pop
mov
sub
pop
adc
xchg
xchg
insb
popa
pop
loope
inc
inc
jp
daa
cmc
out
ret
cmpsb
pop
les
mov
jmp
fs
mov
sbb
int3
cmpsl
rorb
adc
xor
lret
data16
add
mov
ss
mov
ss
cmp
sbb
push
mov
icebp
lcall
out
pop
std
orl
gs
jle
pop
data16
adc
xchg
leave
pop
push
push
xchg
cmp
cmpl
or
xchg
xchg
adc
test
add
ds
add
cmpsl
inc
mov
rcl
dec
iret
dec
inc
int
xchg
push
loopne
fdivrs
pop
sahf
mov
into
or
mov
jbe
xor
pop
inc
out
sbb
ret
cmpsb
es
test
iret
loopne
negl
lcall
xor
fnsave
call
pop
pop
stos
data16
pop
mov
xor
pop
mov
push
adc
rorl
xchg
ret
lods
pop
mov
and
or
lock
adc
jne
add
ja
mov
and
fiadds
mov
rcrb
inc
mov
daa
xorl
fistpll
imul
mov
pushf
mov
jnp
add
cmp
shrb
loopne
insl
xor
aaa
and
aas
add
imul
cltd
push
sub
in
push
sbb
mov
cmc
push
mov
dec
jo
imul
out
jno
mov
mov
mov
mov
and
inc
lock
arpl
scas
mov
add
xor
in
repnz
shrl
mov
adc
stos
cmp
fldcw
push
or
cwtl
lahf
cmc
adc
mov
test
jl
sub
jecxz
inc
xchg
xor
aad
adc
stc
nop
ret
xlat
cmc
pusha
lcall
jmp
xchg
and
lcall
dec
mov
lcall
test
lods
ja
pop
pop
dec
xor
xorl
outsl
and
mov
xchg
jb
sub
mov
xor
test
loope
jp
push
stos
jnp
testb
push
orl
mov
inc
push
cmp
pop
das
mov
push
add
and
lock
sub
movl
and
mov
sub
scas
sbb
dec
hlt
dec
aad
cltd
popa
jp
ficomps
mov
pop
sahf
jno
mov
add
js
das
inc
and
cmp
xchg
imull
jne
add
pop
data16
std
mov
pop
addb
fwait
das
mov
cmp
adc
mov
dec
fnsave
cmpsb
inc
addr16
out
xlat
loop
pop
cmp
adc
push
xchg
sub
pop
js
lods
add
pop
push
adc
in
repnz
ds
xchg
mov
xchg
jbe
call
push
xchg
dec
fadds
loope
mov
push
adc
imul
inc
mov
xor
test
pop
lock
loope
out
je
lock
pop
fucomip
and
adc
jl
jl
clc
push
mov
pop
mov
lahf
add
dec
add
movsb
dec
xor
ret
daa
inc
lods
jo
and
mov
cmp
sbb
sti
rclb
scas
xchg
xchg
mov
adc
les
jl
ja
ja
push
imul
and
xchg
imul
push
in
enter
scas
jge
and
movsb
hlt
add
xchg
mov
into
inc
cli
and
dec
push
adcb
dec
jb
leave
imul
xor
jl
jp
repz
inc
mov
mov
add
mov
unpckhps
push
jne
cmpsl
jnp
mov
ret
cmpsb
push
sbb
mov
bound
push
insb
aad
cs
mov
pop
add
jne
fldl
in
pop
push
inc
xchg
pop
dec
dec
movsb
inc
sub
pop
inc
cwtl
mov
inc
cli
xchg
pop
imul
int3
addr16
idivb
cmp
sub
fs
test
aam
insb
cmpsl
inc
dec
pop
sub
loope
jmp
mov
sbb
test
xchg
cld
and
or
cmp
sbb
push
fisttpll
xchg
inc
out
lea
gs
cmc
jmp
mov
hlt
dec
ds
iret
incb
xor
dec
adc
sub
out
inc
orb
mov
cmp
xchg
bound
jo
mov
out
fdivrs
fs
ljmp
std
addr16
sub
imul
xchg
jmp
inc
sbb
in
negb
aaa
mov
shl
scas
jo
movsl
sbb
sub
jge
fidivrs
or
xchg
jp
in
mov
cmc
jo
dec
mov
cmp
movzwl
jl
push
stos
lods
inc
xchg
insl
in
xchg
jecxz
pusha
ret
xor
imul
mov
pop
mov
xchg
xchg
jge
mov
stos
push
sbbb
cmp
pop
ret
dec
lock
jl
pop
push
mov
sbb
dec
add
push
stos
xor
jle
inc
push
lahf
insb
jbe
cmp
and
mov
std
ss
in
add
cld
mov
mov
aad
pop
daa
sar
lods
scas
out
push
lea
into
rcr
add
and
int3
sub
push
fwait
xchg
xor
call
push
in
sti
or
sbb
out
pop
arpl
mov
aaa
cmpsb
sub
push
bound
xchg
clc
stos
shlb
push
fwait
mov
sahf
xchg
filds
bound
cltd
inc
pop
xor
inc
cmpsl
sub
stos
sub
sahf
orb
push
les
cmpsl
out
div
jns
mov
jae
ljmp
shrb
lcall
mov
aad
mov
test
or
xor
jbe
inc
pop
lock
out
cmp
xchg
inc
push
jno
insb
js
or
sbb
lea
bound
aaa
and
daa
cmpb
cmp
mov
mov
repz
repz
inc
pop
mov
lret
hlt
push
stc
mov
inc
push
adc
movl
mov
rcr
loope
and
jnp
push
cwtl
jbe
inc
push
and
cmp
mov
rcl
xchg
int3
mov
in
fldcw
mov
push
lea
pop
inc
mov
lea
ljmp
sbb
jmp
xor
jle
mov
adc
mov
mov
mov
jl
pop
cli
push
sub
cltd
call
es
mov
popa
out
fsubrl
push
in
inc
inc
jle
repz
ficomps
push
int
test
repnz
imul
and
jge
mov
out
jl
adc
ja
dec
add
cwtl
imul
jmp
jne
pushf
ljmp
adc
aam
add
xchg
mov
in
bound
jecxz
mov
arpl
sub
inc
es
push
mov
pminsw
fadds
cli
dec
push
test
mov
xchg
xor
repz
inc
jmp
push
inc
mov
inc
adc
jmp
adc
js
sahf
pop
or
dec
mov
xor
push
aam
sub
daa
push
push
repz
push
lds
jge
mov
pop
pop
repnz
out
mov
divl
sbb
add
stos
call
sahf
dec
push
lahf
test
lea
pop
icebp
jo
lods
xchg
shlb
popf
fistpll
lds
repnz
out
sub
cmp
aas
inc
sbb
in
pop
das
sbb
cmp
arpl
mov
inc
aam
or
jnp
or
mov
repnz
popa
ja
xchg
sbb
adc
xor
outsb
ret
aad
cli
push
fcmovnu
or
pop
in
lea
cmp
xchg
mov
add
mov
out
push
xchg
les
cli
stc
dec
into
adc
inc
setnp
or
fldl
jle
jo
lock
fs
cltd
clc
inc
and
xor
out
mov
adc
test
jp
jle
jecxz
xor
mov
mov
imul
data16
and
mov
fadds
lea
sbb
dec
shll
and
fsts
lds
adc
ror
pop
dec
loope
pop
lahf
mov
adc
out
xchg
es
repnz
push
cmp
stos
cmpsl
andb
leave
divl
xor
xchg
push
mov
lock
cmp
lret
les
aad
jo
arpl
mov
cli
sbb
mov
loopne
std
roll
dec
push
adc
data16
xchg
sarl
iret
daa
lret
push
leave
xchg
pop
sti
cli
jb
aam
cld
bound
xchg
das
mov
jb
mov
fdivl
jb
subb
ss
jo
cmp
mov
in
in
push
mul
pop
outsb
add
sub
jbe
outsb
lret
lea
cmp
cmpsl
js
jbe
test
jno
shrb
mov
jne
xchg
cli
push
call
jle
fnsave
dec
leave
jl
insl
push
inc
jne
adc
pop
or
cmpsb
xor
sbb
mov
out
add
dec
shlb
lods
insl
repnz
js
daa
andl
dec
std
cs
aaa
into
gs
jb
in
push
mov
std
xchg
lret
mov
ret
push
aad
js
mov
inc
rcll
push
es
or
test
icebp
dec
sarl
jmp
subl
jb
call
cmpb
cmc
ja
pop
mov
icebp
mov
cltd
out
and
dec
xor
cmpsl
adc
sub
lock
lret
sbb
pushf
push
loopne
shl
popa
fstps
iret
mov
push
mov
out
xlat
scas
movsb
scas
jle
in
cltd
and
dec
outsl
mov
and
popa
sub
comiss
test
lahf
in
ljmp
sbb
dec
jnp
push
cmp
sub
xor
sar
sbb
aam
setbe
cmp
ss
cli
push
adc
add
sbb
push
punpckhbw
aaa
call
nop
enter
fldl
jns
and
loope
push
out
cmp
outsb
sub
addr16
jecxz
js
jmp
cmp
out
fmuls
pop
push
fcoml
fwait
pop
shlb
out
insl
sti
pop
in
mov
lea
jecxz
add
stos
cwtl
cld
cmp
xor
pop
inc
lahf
and
cmp
fistl
and
popa
popa
pusha
cmp
xchg
or
mov
dec
xor
or
xor
lds
ds
nop
pushf
pusha
nop
dec
insb
cmp
and
mov
lods
mov
lcall
jb
aas
imul
repnz
adc
out
add
repnz
out
imul
mov
fucomp
cmp
jne
out
subb
and
insl
mov
mov
dec
scas
inc
test
adc
cmp
gs
not
ficomps
mov
sub
xchg
sbb
jge
out
mov
pop
fists
loope
mov
mov
dec
sahf
xor
xor
shl
mov
nop
movsl
mov
enter
cmp
lcall
mov
rolb
xor
fstpl
dec
mov
inc
hlt
push
xchg
sbb
loope
popf
in
outsb
push
xor
cmpsl
aad
push
push
push
bound
fdivrl
test
or
lcall
pop
imul
lds
repnz
mov
mov
mov
pop
movb
subl
dec
loop
adc
stc
movsb
inc
mov
test
lret
push
ljmp
xor
aam
leave
frstor
mov
out
fistps
aam
js
xchg
addr16
std
cmp
jae
lret
nop
cld
adc
add
ret
cmpsb
jns
dec
push
test
pusha
and
popa
cmc
push
sub
popa
bswap
shl
mov
add
mul
repnz
in
out
leave
or
mov
mov
fs
xchg
mov
xor
shld
jle
mov
xor
std
into
lock
jo
mov
jns
dec
repz
sbb
test
push
xchg
scas
repnz
inc
mov
and
mov
bound
repz
sub
in
icebp
mov
add
xor
adc
lahf
lcall
jno
adc
aam
test
sbb
mov
mov
jns
xchg
lods
xchg
mov
inc
scas
cli
in
mov
int
icebp
ret
cld
inc
xchg
pop
mov
lods
es
pop
push
pop
js
xor
adc
sbb
dec
fidivl
pop
sbb
in
adc
ljmp
or
in
jnp
cmpsb
mov
imul
xor
in
imul
ror
test
lret
cld
out
pop
mov
int3
stos
stos
mov
push
add
mov
lds
mov
aad
iret
icebp
mov
or
dec
or
pushf
add
cmpsl
cld
push
aaa
adc
gs
pop
orb
call
and
xchg
movl
pop
shrl
icebp
sti
mov
repnz
stos
adc
int
sub
ficoms
add
cmc
nop
imul
xchg
mov
data16
in
add
jbe
imul
ja
pop
gs
sub
rcll
jns
mov
pop
rolb
cmp
jle
test
hlt
mov
mov
imul
sbb
push
scas
and
cltd
xorb
xchg
pop
adc
jb
jg
mov
cli
push
out
xchg
fbstp
jle
sub
scas
imulb
or
ljmp
xor
inc
sbb
ds
jge
and
mov
loopne
sbb
xor
xor
mov
cltd
adc
cltd
adc
pusha
repnz
fadd
pop
xchg
add
push
jno
push
jae
iret
xor
push
mov
push
bound
lods
and
in
jg
mov
cwtl
mov
jns
or
aam
dec
push
adc
rclb
xchg
and
dec
mov
xchg
inc
fistps
mov
mov
idivl
loopne
mov
sbb
int
jp
jo
lods
ret
gs
inc
inc
mov
fldcw
mov
xorl
add
lahf
xchg
or
ja
lcall
ss
and
xchg
or
movsb
in
lret
sbb
pop
insb
jmp
pop
ljmp
loop
fwait
push
or
mov
xchg
and
cwtl
int
mov
push
sbb
mov
lods
das
iret
lea
xchg
scas
push
ret
mov
rolb
in
mov
xchg
arpl
or
and
xchg
and
or
fwait
mov
mov
sbb
sti
push
loop
shl
sbb
push
aaa
outsl
sub
mov
mov
lods
out
or
pusha
dec
xor
fcoms
je
jnp
pop
cmp
cmp
and
ficomps
divl
push
ror
add
cli
or
mov
movsb
mov
pop
aaa
dec
cmpsb
pop
movsb
or
int3
sti
arpl
nop
xorl
xchg
shlb
popa
out
adc
push
sbb
js
das
fnstcw
push
in
std
cs
rcr
arpl
push
sbb
push
xor
adc
out
scas
jo
fnstsw
jp
xlat
test
iret
add
xchg
inc
push
mov
scas
or
xchg
add
inc
enter
out
or
out
jns
inc
add
fcomip
sbb
jle
inc
ret
ja
fwait
dec
les
aad
push
cwtl
sbb
add
mov
sub
pop
cs
xor
cmova
cmp
pop
jne
rclb
aaa
je
jno
mov
mov
xor
jne
dec
sbb
mov
jge
loopne
lret
push
pop
fisttpll
mov
adc
xchg
int
les
fsubs
pop
bnd
sbb
sub
fdivl
mov
mov
jnp
cli
ja
setb
ljmp
sub
rorb
cli
add
out
mov
aad
out
je
rdtsc
jp
xor
jno
pusha
bound
dec
ljmp
cmp
and
mov
test
jp
dec
and
mov
int
xlat
nop
das
test
imul
and
pusha
fsubrl
inc
inc
outsl
jae
ds
jne
cmp
add
nop
int
pop
int
inc
test
stos
insb
lods
sub
mov
sbb
fwait
vrsqrtss
rolb
dec
and
jno
cltd
iret
fwait
cld
shlb
repz
inc
mov
pushf
shr
test
inc
repz
mov
push
jo
fdiv
cmp
pop
shll
nop
lea
loopne
dec
inc
pushf
cmp
test
fldt
xchg
notl
shlb
adc
popa
bound
and
push
dec
stos
mov
sbb
inc
cmp
mov
sbb
mov
jl
mov
fimuls
dec
mov
or
pop
cmpsl
push
shlb
jl
pop
imul
out
sbb
add
pushf
cmpl
test
jns
aam
xchg
push
lret
cmp
inc
sub
mov
adc
inc
test
pushl
mov
mov
xlat
add
jo
jno
dec
sbb
stc
jo
fbld
ret
sahf
std
cld
bound
fildl
mov
mov
adc
outsl
pop
lahf
fs
pop
subl
mov
push
inc
ljmp
jo
inc
mov
js
cmp
int
mov
add
pusha
mov
fildll
outsb
push
imul
mov
out
xchg
daa
aam
push
int3
or
test
or
sub
mov
sahf
jp
cmpsb
movsb
mov
pop
push
push
dec
fwait
push
int3
adc
roll
sbb
pusha
cli
adc
mov
ljmp
std
mov
imul
pusha
scas
fisubrl
enter
pop
and
test
notl
and
les
mov
add
sbb
xor
sbb
pop
cmp
jo
flds
push
les
push
xlat
repz
ja
orl
fcoms
out
gs
lret
add
sbb
and
outsb
xor
jge
ja
cmp
or
inc
cmc
shl
dec
out
ljmp
dec
mov
xor
mov
pop
int
out
cltd
dec
pop
push
repz
mov
cmp
inc
stos
inc
test
ds
repz
inc
sbb
outsl
fildl
push
shrl
sub
and
imul
cmp
adc
pop
mov
inc
sbb
aas
dec
sti
xor
inc
ja
and
stos
cld
mov
sbb
mov
push
sarl
push
add
xchg
pushf
pop
mov
fs
popa
xor
stos
and
add
das
and
pop
mov
test
jnp
pop
mov
mov
cmp
adc
lods
out
rcrb
dec
lods
and
clc
aad
jmp
dec
je
jge
add
or
shrl
dec
scas
push
imul
push
test
sbb
lods
cmpl
movsl
dec
lods
mov
mov
stos
push
popf
inc
mov
push
hlt
push
in
into
pop
mov
movsl
sub
push
nop
daa
push
sbb
push
imul
xchg
leave
jge
adc
lods
enter
xchg
and
lds
stc
or
fwait
mov
jns
rcl
mov
jle
sbb
cmp
sti
jno
xor
cli
ja
lock
out
push
add
stos
nop
ret
fwait
and
das
shrb
pop
insb
jmp
je
movsl
mov
inc
dec
insl
sbb
sbb
lea
xchg
outsb
repz
mov
xchg
hlt
out
outsl
mov
ss
sbb
outsb
addr16
push
shlb
lods
xchg
repz
leave
pop
sbb
repnz
loopne
into
dec
fadds
xchg
addr16
inc
pop
int
sub
mov
mov
mov
and
mov
xchg
shlb
stos
repz
imul
repnz
mov
and
rorl
mov
xor
add
pop
adc
pop
pop
xor
cltd
ret
sbb
or
push
imul
in
loopne
xor
xor
cmpsb
push
popa
push
daa
xchg
clc
scas
lds
es
mov
xor
lahf
stc
jb
lods
and
int3
mov
and
jl
test
and
dec
mov
pushf
xchg
shrl
xchg
fbstp
or
push
cmp
int3
sbb
inc
jbe
insb
push
dec
std
enter
in
hlt
sbb
sbb
outsb
jns
push
jne
xorb
sbb
lods
sbb
data16
mov
jnp
sbb
push
or
jae
dec
sub
pop
mov
shl
enter
mov
sbb
jg
sbb
cmp
ljmp
xchg
out
lret
aam
fcomps
mov
mov
xchg
dec
and
cmp
sbb
mov
mull
mov
ds
movsb
mov
mov
mov
adc
mov
cmc
fnstenv
flds
push
push
mov
cmp
inc
mov
lods
xor
xor
cmp
mov
jae
inc
pop
in
subb
sahf
add
es
call
out
pop
orps
outsl
mov
bnd
repz
loop
push
cwtl
in
pushf
jnp
inc
inc
imul
xor
push
jle
rcr
fstl
add
adc
cmp
insb
sbb
cmpsl
push
push
arpl
xchg
sub
push
sub
sti
and
fstpl
sbb
adc
mov
popf
xchg
push
ror
movsb
mov
test
into
xor
fldz
loop
cmp
std
and
jbe
int
aaa
adc
sti
mov
and
cmpsb
and
scas
stc
cmp
add
aad
cmpsl
lds
pop
adc
inc
jbe
dec
cmp
aam
dec
call
mov
outsl
xchg
pop
dec
adc
mov
jge
mov
push
fstps
or
mov
mov
jo
jmp
das
push
fidivs
pop
lock
cs
lcall
imul
pop
loopne
mov
and
lods
xchg
test
movsl
aas
cmovnp
and
sub
cmpsb
fcoml
xchg
sub
xchg
pop
inc
mov
mov
aaa
hlt
call
loop
les
dec
scas
xchg
add
dec
sahf
fsubrp
adcb
xor
or
sub
or
xor
ret
add
jg
adc
inc
inc
fidivrs
or
push
or
sub
or
dec
dec
test
cli
pop
imul
insl
xchg
mov
xlat
mov
mov
sub
mov
jp
div
out
jge
or
jle
insb
cltd
ss
push
scas
fs
jmp
pop
cmp
lds
push
inc
mov
cmc
clc
dec
in
or
into
mov
lods
scas
push
push
outsl
inc
push
add
imul
pop
cwtl
mov
out
outsl
pop
outsl
ror
dec
enter
cltd
adc
pusha
test
pop
pop
roll
std
pusha
xchg
adc
xor
lock
pop
cmpb
bound
dec
pop
push
lahf
roll
cmp
jge
sub
and
and
test
stos
clc
pop
add
xor
pop
ficomps
aaa
imul
orb
push
xor
pop
inc
push
inc
jnp
fst
jmp
ss
adc
test
jno
outsl
mov
and
xchg
push
or
push
mov
sbb
pop
xor
arpl
shrl
sub
leave
dec
and
pop
int3
xor
cs
xor
imul
sub
mov
repz
mov
shrb
mov
mov
lret
cwtl
fwait
test
pop
mov
jnp
push
jle
gs
pop
push
mov
sub
pop
imul
lods
cli
xor
or
jne
aaa
and
clc
lret
in
in
push
sbbw
jo
jecxz
xchg
xor
pop
outsb
jg
sti
mov
jmp
addr16
mov
mov
mov
pop
sub
scas
adc
and
insl
mov
dec
add
push
push
jle
jnp
jne
stos
cmpsl
sub
inc
aaa
jl
adc
leave
jae
xchg
loop
cwtl
popa
in
inc
xor
pop
fisubs
ret
aad
or
mov
xchg
jae
aaa
pushl
add
ss
mov
imul
and
mull
stc
mov
xor
shr
xchg
xor
cmp
cmpsb
push
mov
aam
add
aaa
sub
or
xor
cs
mov
jecxz
push
std
lret
add
nop
jns
lahf
inc
repz
pop
ds
incb
fildl
sbb
rorb
cmpb
rol
push
aaa
pop
xchg
loopne
lock
data16
addr16
jno
aam
out
mov
push
repnz
mov
aam
fidivrs
mov
adc
jle
or
push
call
leave
mov
dec
fnstenv
movsl
or
dec
pop
cmp
mov
fistl
insb
add
or
pusha
enter
testb
push
nop
hlt
xchg
addl
stc
push
cld
call
loopne
lahf
sbb
xor
and
or
jg
stos
jae
push
les
nop
div
mov
jns
shll
push
ret
adc
cmp
ret
mov
jg
cwtl
mov
or
push
xor
jge
sbb
bound
sub
jns
mov
add
mov
dec
mov
js
roll
fistl
scas
iret
jp
mov
popl
push
popa
adc
mov
mov
adc
xor
das
in
jnp
std
repz
enter
sti
pop
mov
les
jno
cmp
pop
jl
and
dec
push
cmp
add
out
outsb
pop
sti
call
inc
adc
testl
xchg
or
ljmp
jae
sub
dec
cltd
js
push
pop
lods
sbb
mov
mov
movsb
aam
or
in
leave
mov
pop
cmp
mov
cmp
loop
jne
sbb
dec
cmp
push
out
or
into
data16
stc
jne
push
sbb
cltd
ret
cli
sbb
out
push
aaa
pop
ss
sub
pop
jle
ss
jp
out
inc
fdivrs
adc
cli
clc
xor
test
adc
das
ljmp
pop
mov
stc
iret
scas
ret
lret
sahf
add
or
dec
addb
mov
xor
or
sub
xchg
sarl
enter
jb
lea
dec
cltd
ret
mov
dec
lods
lret
mov
push
pop
adc
dec
cltd
jb
inc
cmp
and
movsb
jle
mov
lcall
ds
dec
and
mov
push
adc
and
sqrtps
mov
xchg
dec
xchg
outsl
inc
push
dec
push
xchg
lock
jp
imul
add
mov
xor
xlat
push
add
hlt
scas
mov
rolb
jle
incl
leave
in
xchg
xchg
inc
jg
xor
sub
repnz
jmp
xchg
push
clc
or
dec
inc
cmp
xor
cmpsl
cmpb
insb
adc
movsb
mov
lds
mov
lret
enter
jo
sbb
xlat
jg
or
in
arpl
stos
pop
sti
rclb
ljmp
jle
stc
andb
out
push
cld
push
pop
ss
pop
in
dec
cmp
mov
iret
rcr
sub
inc
lahf
xor
inc
adcb
xlat
mov
arpl
imul
rclb
movsb
and
ds
push
iret
mov
lods
mov
xchg
mov
dec
pop
sbb
and
sub
sub
outsb
xor
pushf
fcmovb
dec
test
sti
pop
adc
inc
push
push
or
push
cltd
pop
das
stos
mov
cmp
xchg
je
sub
imul
inc
inc
fwait
lcall
in
pop
adc
sub
pop
push
dec
sbb
mov
jecxz
imul
xorl
bound
dec
jle
cmp
pushf
cmpb
stos
in
aad
loope
adc
and
sub
mov
push
in
int3
xchg
aam
lcall
cmpsb
push
std
pop
inc
fsubrl
dec
lahf
nop
mov
clc
js
fs
das
mov
cld
mov
xor
adc
pop
cmp
pop
out
mov
jg
add
jns
adc
ja
adc
cwtl
push
sbb
cmp
pop
pop
xor
popf
shrb
ss
insl
pop
decb
dec
loop
xlat
out
jns
mov
test
imul
sub
cmp
cmp
aam
xor
ss
das
ja
adc
inc
mov
popf
and
ret
mov
xchg
inc
jp
fwait
cli
push
inc
add
and
pop
cmp
test
dec
fidivs
xchg
xchg
call
mov
pop
mov
in
mov
dec
xor
mov
repnz
mov
fldt
mov
pushf
sbb
shll
call
int
add
jge
pop
xchg
fldcw
movsl
cmc
dec
test
bound
jns
mov
movsb
aad
push
popf
pop
in
out
dec
jmp
mov
jge
mov
mov
orl
test
test
inc
iret
inc
int3
inc
fadd
fucomip
mov
mov
dec
imul
sti
or
mov
pop
pop
mov
pop
stos
mov
cmp
insl
and
rcrl
gs
and
adc
cmc
jbe
mov
into
jge
out
cwtl
pusha
pop
mov
lea
loopne
icebp
lock
mov
and
stc
into
mov
add
clc
int
movsl
call
leave
mov
aad
mov
mov
fsubrl
sub
push
xchg
pop
sub
lods
lcall
jg
jo
out
mov
sub
aas
sub
jnp
xchg
mov
pop
in
cmc
js
push
sub
dec
jg
xchg
fs
daa
jbe
xlat
fisubrs
fnstsw
mov
ja
in
ss
mov
mov
cmp
into
jg
mov
sbb
cmp
mov
sub
sub
push
inc
jo
test
pusha
nop
jl
jae
push
call
out
inc
push
or
xchg
mov
pushf
ret
fmull
jb
cmc
pushf
sarl
mov
arpl
shlb
dec
mov
test
mov
jg
es
push
cwtl
fisubs
aad
add
cmpsb
movb
pop
push
pop
jmp
pop
sub
ret
xchg
mov
lods
sbb
das
addl
jo
in
sub
dec
mov
cli
aad
mov
es
rcrb
idivl
loopne
dec
fwait
xchg
stos
sbb
adc
cmp
fcoms
addb
sti
and
and
aam
std
xor
mov
mov
add
out
adc
mov
adc
lcall
push
sbb
xlat
or
hlt
cli
rcll
std
mov
mov
call
sub
jle
jae
gs
iret
imul
push
roll
fmul
mov
push
int3
nop
clc
mov
mov
xchg
bound
loop
fmull
out
stos
rclb
dec
add
dec
xchg
push
in
jle
subb
xor
inc
insb
dec
in
lds
and
imul
pop
mov
cmpsb
ja
popf
shrl
lret
into
and
push
cmp
mov
aaa
decl
sub
xchg
das
test
mov
or
dec
cmp
pop
fists
push
push
mov
fstpt
in
push
pop
xor
aaa
hlt
or
push
and
push
jnp
cli
popa
jo
repz
adc
inc
adc
mov
clc
movsl
pop
mov
adc
xchg
inc
cli
stc
je
or
xor
roll
mov
push
movsb
call
xchg
sbb
nop
test
push
mov
add
scas
jo
shll
movsb
aas
dec
mov
mov
inc
cld
je
imul
shll
jge
mov
fs
jle
movsb
add
adc
push
jbe
pop
lea
fchs
inc
cmp
in
fwait
push
addl
cwtl
repz
je
or
loopne
xchg
xor
fdivs
cmp
push
push
ficomps
rcll
into
xor
xchg
add
jno
push
mov
hlt
rcrl
pop
jmp
addb
mov
push
divb
test
movsb
mov
xor
idivb
rcrl
cltd
rorb
mov
inc
lret
or
xor
jns
movsb
jbe
lret
jmp
xor
call
dec
in
mov
jecxz
rolb
adcb
dec
hlt
pop
sub
pop
lret
mov
inc
cwtl
cmp
out
dec
stos
mov
outsl
inc
mov
push
cmp
push
pop
repz
imul
jmp
add
xor
mov
sbb
arpl
out
popa
pop
pusha
cld
and
cmp
or
bound
iret
pop
mov
mov
xor
fcmovb
rcll
and
or
nop
mov
movsb
mov
jns
xlat
mov
mov
mov
pop
push
pop
xlat
movsb
inc
stos
cld
jae
shll
enter
testl
dec
mov
stos
or
cmp
outsl
mov
or
pop
sub
push
xor
sbb
sti
xor
rolb
mov
cmp
leave
dec
adc
ja
dec
fidivs
and
sub
fwait
lods
daa
jo
pop
adc
movsl
sti
fstpt
mov
lcall
fidivrs
mov
cmp
in
adcl
or
scas
out
add
xchg
icebp
pop
aad
sub
mov
push
xor
xchg
cmp
repz
fisubs
dec
sbb
fnstsw
add
mov
cmp
loopne
sbb
loop
int
mov
std
out
ss
adc
jo
mov
jg
or
or
int3
int3
sahf
mov
sub
sbb
mov
scas
pop
jl
mov
jae
out
or
cwtl
outsb
push
add
inc
loop
nop
jnp
dec
div
mov
mov
push
jns
push
inc
bound
jp
cltd
sub
mov
add
xchg
adc
mov
sti
mov
adc
rcrb
lahf
add
fcomps
jno
or
outsb
add
cmp
pop
cmp
in
aas
or
fstl
sub
pop
mov
movsb
movb
inc
arpl
xor
in
icebp
add
cmc
or
icebp
pop
push
pop
repz
repz
mov
dec
lods
outsb
sbb
rorl
mov
mov
aas
mov
aam
mov
inc
push
push
xchg
lret
mov
mov
out
pop
jae
or
mov
pushf
mov
push
in
or
pop
std
adc
push
pop
mov
lcall
aas
push
fsubrs
fcoms
gs
inc
cmp
aas
wrmsr
pusha
stos
rorb
xchg
scas
mov
lret
sti
lods
sti
mov
imul
xor
enter
cmpsl
jmp
imul
enter
lock
fisubs
xlat
fstl
inc
mov
push
mov
mov
dec
aaa
xlat
mov
fnstcw
sbb
popf
mov
pop
jae
push
sbb
mov
sub
adc
loop
cld
outsl
xor
lret
or
jnp
push
div
sub
dec
cmpsl
mov
inc
sar
cs
jmp
pop
push
imul
mov
or
push
repz
daa
subb
mov
jne
inc
pop
and
or
jle
shll
add
and
addr16
jge
dec
mov
or
clc
ret
lcall
bound
jns
dec
mov
push
mov
jge
loop,pt
out
shrb
pop
adc
or
rolb
mov
adc
loopne
outsl
in
mov
ret
repz
kandw
xchg
jno
repz
add
pusha
xchg
lahf
call
cwtl
scas
aad
int3
lret
mov
sbb
mov
or
push
loop
test
icebp
mov
mov
lea
jle
or
test
xchg
fsubs
sub
mov
mov
mov
adc
fwait
sbb
xlat
cltd
insl
mov
popa
cwtl
push
dec
mov
xor
std
adc
pop
cmc
cwtl
bound
les
fdivrp
fisubs
fcomps
les
inc
outsl
cmpsl
movsb
jmp
in
stc
push
int3
imul
je
cmpsb
lcall
jmp
mov
xor
and
push
xor
jmp
insb
or
jmp
or
mov
hlt
repz
dec
xchg
push
jno
pop
push
sbb
rorl
pushl
in
arpl
jno
ds
lahf
mov
shll
dec
nop
jnp
outsb
or
adc
movsb
jno
push
lea
sbb
inc
pop
pusha
sbb
ret
or
imul
shl
push
test
cmp
xchg
xchg
sarl
fmul
or
push
cmpsl
in
jno
cwtl
repz
push
imul
repnz
cmp
sub
xor
gs
sbb
fcomps
inc
xchg
mov
ret
outsb
popf
and
push
add
mov
ffree
shrl
jnp
inc
xchg
adc
push
pop
cmpsb
imul
jle
mov
aad
inc
stos
sub
push
xchg
repnz
lods
cwtl
inc
ljmp
push
mov
pop
lds
pop
jl
or
inc
sub
jns
adc
int3
sbb
sbb
mov
rol
or
mov
or
inc
test
add
sub
outsl
mov
decb
cmc
cmp
pop
jb
les
add
add
or
or
jns
dec
ret
xchg
lret
cmpsb
mov
into
pusha
icebp
pop
fwait
test
sub
faddl
outsb
sub
bswap
fcomps
dec
lret
sti
dec
jge
xchg
pop
or
mov
and
jmp
leave
imul
cld
ret
sbb
movb
fst
sub
adcl
cs
out
call
mov
cmp
addl
xor
pop
fsubl
and
cld
mov
add
notb
sbb
inc
push
jecxz
dec
fnsave
arpl
out
repz
push
dec
xchg
push
push
jno
pusha
jno
cmp
cs
aad
lret
add
insb
cmp
adc
cmp
in
in
inc
adc
iret
test
in
push
dec
xor
subl
out
and
ret
jbe
push
mov
xchg
aas
lahf
cli
push
mov
mov
cmp
push
push
std
lahf
pop
test
aam
lea
xor
sti
fmul
or
xchg
pop
dec
mov
mov
jl
and
or
out
mov
push
and
mov
pop
iret
nop
fldt
popa
xor
xchg
xchg
shrl
xor
scas
pusha
divl
lea
inc
xchg
add
clc
dec
cltd
mov
jne
add
jmp
icebp
ja
negb
call
add
xor
cmp
pop
stc
dec
cmp
mov
or
jae
in
mov
xchg
mov
pop
idivl
pop
ret
and
inc
cwtl
jnp
je
test
sbb
sub
add
sub
mov
test
movsb
pop
inc
divl
nop
add
aam
imul
or
mov
push
ds
jmp
and
rcl
jnp
jle
mov
sbb
mov
aaa
movsb
push
stc
xor
ficompl
cli
inc
ja
fcomps
das
inc
std
mov
mov
scas
lods
outsl
sbb
xchg
outsl
dec
mov
movsl
flds
push
sbb
out
mov
jp
scas
andl
mov
data16
scas
adc
lcall
jo
aas
idivb
sub
cmp
cmpsl
sub
in
inc
mov
and
push
mov
fimull
int3
icebp
insl
stos
imul
push
int
push
stos
and
pop
gs
sti
enter
jg
add
mov
jecxz
xchg
pop
sahf
cmp
mov
pop
mov
fadd
loop
and
fwait
shll
adc
mov
mov
xor
cmpsl
or
mov
push
mov
dec
loopne
or
jl
mov
mov
or
mov
push
fnstsw
jbe
jns
lret
fcoms
sub
sub
cmp
lcall
frstor
in
and
xor
mov
loope
mov
dec
xchg
rcrb
xchg
cmpsb
inc
xor
in
add
ja
jle
push
fstpt
shll
jp
push
or
faddp
repnz
cs
cmpsb
fwait
mov
lds
jle
mov
addr16
xor
lcall
add
scas
addr16
dec
loopne
fldl
push
popf
jne
add
mov
fcoms
sub
mov
pop
movsb
mov
addr16
imul
and
xor
pop
inc
clc
mov
shrl
cmp
cmpsl
jle
mov
cwtl
push
in
daa
dec
or
jo
sub
push
push
cmp
jle
mov
dec
fdiv
mov
and
fadds
push
pusha
or
stos
movsb
push
pop
arpl
into
pop
fucom
aaa
push
pop
arpl
xchg
lods
mov
mov
insl
arpl
jbe
mov
daa
jmp
out
cld
arpl
mov
cli
sub
loop
jecxz
orb
xor
insb
test
lret
cli
cmpsl
sbb
jae
jmp
loop
fimuls
out
jo
data16
xor
xchg
fdivrs
and
into
xchg
stos
cs
adc
mov
inc
in
push
xchg
fadd
outsl
dec
lahf
dec
shrb
cmpsl
sti
sahf
into
imul
stos
sbb
adc
cwtl
std
cltd
jp
pop
out
cltd
jmp
mov
mov
cmc
push
addl
aad
mov
leave
jbe
jns,pn
and
or
jbe
adc
xchg
clc
jge
xor
adc
or
loope
and
insb
cld
sbbl
sbb
imul
std
sub
push
adc
push
push
mov
inc
cmp
loope
jns
sahf
in
jne
outsb
push
int
xor
cmc
loope
int3
movsb
inc
dec
pushf
mov
jp
stos
adc
push
xor
adc
ret
stos
dec
cmpsl
inc
popf
push
push
xchg
lods
lods
xor
cmp
cmp
mov
sahf
sbb
mov
lock
nop
mov
shll
fwait
dec
mov
imul
jg
sub
aas
jmp
test
idivl
out
mov
jno
rorb
ss
ret
mov
outsl
aam
add
jns
inc
shrl
lods
xchg
shrb
and
lds
enter
cmp
outsl
or
xchg
and
xchg
adc
or
xchg
or
test
push
inc
xor
out
sbb
pop
lods
adc
inc
loope
push
adc
mull
push
test
clc
pop
jecxz
mov
out
dec
aas
aad
data16
mov
jg
mov
jnp
jp
sbb
xor
dec
xchg
add
inc
shrl
cmc
and
sub
ja
fucom
mov
mov
sbb
jmp
fidivrl
in
cmc
mov
inc
xor
jb
dec
loope
mov
mov
sub
ljmp
jmp
push
or
cld
out
and
dec
adc
sbb
dec
dec
pop
jecxz
sarl
movsl
inc
into
jle
sbb
in
psadbw
dec
mov
pop
lcall
es
ss
and
add
dec
lods
cmp
jmp
out
inc
and
jae
leave
cwtl
cld
xlat
das
sub
mov
sub
pop
jnp
xorb
cmp
mov
mov
jmp
test
pop
dec
and
fcmovb
xchg
lods
js
pop
outsl
and
into
stos
push
ss
push
aaa
fwait
out
into
inc
sbb
or
rorb
sub
out
out
fldcw
call
das
mov
mov
inc
push
gs
jmp
xchg
adc
xchg
cltd
cmpsl
fildll
adc
inc
jnp
jae
push
cli
pop
push
dec
pop
sub
andb
in
sbb
inc
cmp
or
pusha
shrl
pushf
ds
mov
pop
mov
repz
inc
add
push
shlb
adc
inc
cs
pop
idivb
sahf
pop
dec
mov
pushf
ret
or
ret
pop
aam
and
das
adcl
sbb
push
std
loopne
or
and
dec
jo
aaa
fldl
xchg
mov
mov
adc
xchg
and
imul
inc
adc
mov
in
es
push
and
lahf
hlt
sub
rorb
fdiv
push
adc
ljmp
dec
jnp
and
inc
dec
ljmp
jno
mov
jbe
add
pop
mov
sbb
mov
pushf
in
daa
sbb
add
adc
into
decl
movsl
mov
add
jbe
repnz
xor
mov
nop
std
rcl
dec
sbbb
mov
arpl
inc
add
out
mov
jb
lret
or
xchg
call
test
pop
lock
imul
ret
loope
pusha
in
mov
sarl
push
push
outsl
lods
push
jle
fwait
stc
outsb
xchg
push
ja
cmpl
rorb
mov
or
xchg
inc
in
into
mov
out
and
adc
je
mov
sbb
jbe
stc
fidivs
lods
push
outsl
adc
rclb
jle
push
je
xchg
popa
pop
mov
xchg
popf
mov
lcall
push
jmp
movsb
mov
mov
dec
pop
test
add
mov
jmp
jae
in
mov
into
jg
adc
and
push
cmpsb
xchg
sbb
je
xchg
lcall
es
add
push
xorl
mov
xchg
push
jb
or
xor
jl
sar
pop
jle
mov
mov
je
sbb
cli
decb
call
push
cs
pop
ss
mov
out
adc
or
sub
jge
in
push
jg
stc
xchg
andb
dec
stos
sbb
lret
inc
add
sub
dec
mov
or
dec
push
into
into
xor
out
clc
add
mov
or
pop
out
inc
dec
mov
addr16
call
mov
movhps
out
testb
mov
sar
xor
sahf
imul
rcll
fsub
jl
jnp
mov
sbb
xchg
imul
subl
pop
pop
out
hlt
test
dec
fisttpll
insl
inc
aas
xor
rolb
cli
lret
sti
cltd
and
into
fs
fsub
dec
cmpsb
mov
push
dec
push
dec
leave
xlat
add
cltd
mov
cwtl
pushf
inc
stos
jle
push
cmc
lea
ret
in
loop
icebp
inc
inc
addr16
jnp
out
adc
cmp
rolb
in
cs
lock
pop
hlt
add
subb
lock
push
mov
jecxz
cmc
pushf
leave
inc
leave
clc
iret
test
outsl
dec
jb
sti
or
xchg
mov
push
dec
and
leave
add
sub
jecxz
fnstsw
add
incb
aam
pusha
test
loop
mov
cwtl
into
mov
shl
xor
int
push
mov
addb
lods
lods
jne
xchg
loopne
cmp
jbe
adc
or
xlat
adc
cmp
xchg
sub
mov
int
rclb
insb
xchg
mov
imul
and
sub
in
add
or
dec
dec
add
stos
xchg
mov
es
xchg
mov
xor
fimull
daa
mov
lea
ret
xchg
mov
int
in
and
push
popf
in
dec
data16
xchg
xchg
cltd
cld
mov
cmpl
stos
mov
imul
outsb
jae
fs
mov
dec
fstps
pop
jmp
test
mov
pop
mov
sub
sbb
das
sub
imul
add
stos
jno
gs
jle
popa
in
cmp
repnz
lods
aaa
push
cmc
add
adc
sbb
fxch
xor
mov
sahf
movsb
js
mov
int3
test
js
cltd
fisttpl
pop
ffreep
mov
sbb
mov
sarb
adc
pop
push
and
btr
adc
sub
push
test
dec
mov
cli
dec
iret
lcall
mov
bnd
cmp
push
and
cmp
mov
push
lds
hlt
mov
dec
and
fisubrl
ljmp
add
std
cmp
push
js
cld
iret
fucomi
inc
test
inc
pusha
and
lret
push
mov
out
sbbb
and
lret
out
mov
inc
jns
leave
imul
xchg
add
jne
shr
nop
ficomps
inc
imul
fadd
aam
jne
lods
jle
cmp
stc
mov
test
aad
pusha
sub
sub
call
ret
mov
sub
imul
pop
cmp
faddl
jae
xchg
fisubs
inc
and
xor
or
cmpsb
inc
add
dec
fucom
jae
mov
mov
sbb
ss
int3
xchg
sbb
push
mov
sub
cmpxchg
mov
jmp
jecxz
out
imul
push
in
les
lret
movsb
sahf
les
push
mov
subl
fcompl
push
mov
outsb
subb
mov
cwtl
and
int
mov
daa
dec
ss
loopne
scas
mov
xor
jne
jne
mov
loop
or
fnsave
fsubr
jno
data16
pop
insb
lods
dec
sti
push
test
inc
fwait
pop
xor
xor
mov
js
roll
jbe
sub
push
mov
sar
mov
sub
dec
nop
ss
mov
dec
leave
call
shrb
jmp
add
dec
mov
popf
mov
xchg
mov
negl
dec
out
lock
hlt
xchg
into
les
dec
xor
les
jne
xor
fdiv
das
andb
dec
sahf
dec
cmpsb
imull
aam
push
cs
fs
jle
pushf
addr16
stos
dec
and
cmp
ret
pop
out
or
leave
dec
sub
jno
outsl
mov
pcmpgtd
adc
xchg
jno
pop
ss
lock
mov
cs
shrl
aaa
push
repnz
xor
adc
fstps
mov
clc
ljmp
repnz
iret
add
data16
and
cs
and
test
in
mov
xlat
inc
add
mov
outsl
aaa
inc
and
and
sub
stos
clc
mov
push
clc
push
shll
int
mov
jnp
fstpt
sbb
and
mov
jp
int3
dec
in
ss
sbb
outsl
mov
cltd
dec
push
roll
xchg
in
add
mov
ljmp
xorl
es
mov
jmp
fisubs
jg
lret
and
jns
sub
jne
ds
or
xor
test
xchg
fsts
out
test
mov
movsb
mov
shlb
xchg
jbe
sahf
addr16
push
push
ret
mov
test
sub
or
ja
pop
bound
jecxz
sub
outsb
and
in
and
scas
gs
insl
mov
cmc
sahf
mov
xchg
xchg
loope
aas
xchg
pop
dec
jb
jecxz
fadd
mov
sbb
rorb
lea
jmp
inc
js
clc
xor
dec
cmp
cmc
rol
cli
xchg
cmove
xor
xor
scas
xchg
mov
xor
cwtl
jg
in
outsl
jo
out
pushf
sbb
adc
inc
ficoml
loop
jne
rcr
adc
leave
xchg
cld
fildll
pop
cmp
in
cltd
dec
mov
mov
bound
pop
sub
adc
sbb
xchg
out
xchg
push
lcall
loopne
or
in
jl
popa
dec
mov
and
addr16
xor
in
stos
orb
rep
mov
adc
add
mov
lods
addl
out
movsb
cmp
jb
add
jbe
inc
sub
repnz
cmp
lret
pop
mov
lock
ja
xchg
jno
ret
popa
dec
pop
sbbl
mov
jmp
cmp
shlb
sbb
cwtl
lahf
add
and
sub
inc
mov
lahf
push
pop
mov
pop
ret
test
ret
ja
mov
mov
popa
pop
icebp
sarl
ret
call
adc
jg
and
push
orb
mov
ss
add
cld
cltd
and
and
addr16
pop
inc
xor
mov
rolb
push
shll
xchg
pop
inc
push
cmc
inc
inc
icebp
pop
sbb
loopne
sahf
xor
sub
repz
push
repz
push
push
imull
lock
ret
adc
inc
add
jbe
leave
imul
sbb
lea
fists
or
repz
push
pop
dec
push
sub
mov
test
push
sbbb
push
test
cs
inc
clc
je
test
push
mov
jo,pt
std
jno
and
add
jo
cld
lds
mov
nop
dec
hlt
or
lods
pop
int3
add
hlt
in
jg
push
mov
in
push
lock
xchg
cmp
hlt
mov
adc
shll
decb
lret
pop
pop
loope
jmp
out
lea
push
int3
mov
ss
jl
mov
pop
aad
sahf
mov
fnstcw
insl
pop
sbb
iret
sbb
and
inc
and
movl
adc
repnz
shrb
add
cmp
stos
xchg
out
aam
out
sbb
push
add
pop
and
adc
repnz
iret
mov
ja
outsb
mov
mov
push
push
repnz
movsb
xor
add
or
jbe
jo
outsb
cli
fs
iret
mov
xor
jl
jno
stc
pop
inc
shl
mov
push
pop
or
and
xchg
inc
sahf
inc
mov
pop
and
cmp
pop
stos
mov
stos
or
sbb
lret
dec
aam
sub
mov
fstpt
mov
add
push
or
mov
out
mov
fdivr
in
mov
mov
lods
push
inc
fstpt
mov
in
sarb
js
in
enter
iret
pusha
nop
test
cld
lea
jp
outsl
dec
test
rclb
fs
test
xchg
pop
adc
lcall
xchg
hlt
dec
push
xchg
pop
ret
aam
subl
rcll
test
call
aaa
adc
addl
mov
cmc
jno
lock
mov
xchg
repnz
mov
add
push
fstpt
cmp
movb
xor
jle
sbb
mov
xchg
stc
adc
mov
or
and
lret
hlt
or
mov
clc
cli
pop
jb
xor
pop
stos
sub
sti
xchg
stc
into
dec
fnsave
add
push
mov
cwtl
pusha
mov
xchg
adc
mov
adc
std
icebp
test
sub
dec
push
stc
icebp
lea
iret
push
pushl
inc
mov
shrl
xor
mov
pop
xchg
rcr
mov
pop
sti
pop
or
call
je
aaa
push
rol
test
pop
jne
nop
test
sahf
add
insb
imul
les
ljmp
xchg
dec
sbb
cmpsb
mov
or
dec
jb
xchg
pop
jnp
call
push
cmp
jae
or
cmc
sbb
out
jne
inc
test
mov
pop
mov
popa
aad
addr16
imul
movsb
into
int
jl
xor
mov
sub
xchg
stos
fxch
sbb
addl
xor
add
push
je
out
pop
xchg
jp
setnp
adc
mov
pop
shll
xor
lret
nop
sub
lret
xchg
xchg
ret
mov
adc
cmp
mov
push
fnsave
flds
sub
adc
fistpll
push
data16
sub
sub
cmpsb
fwait
or
pop
adc
dec
inc
xchg
or
pop
push
out
mov
int3
xor
ljmp
or
mov
sbb
sti
and
pop
test
sub
cmp
pop
pushf
aas
or
sbbl
jp
andl
popf
lcall
cmc
bound
mov
pop
jl
mov
ds
lret
xor
nop
gs
cs
clc
cmp
pop
fstl
mov
add
lret
mov
sahf
cs
mov
xor
and
lret
lods
mov
mov
or
ret
dec
pop
int3
aam
nop
dec
je
push
nop
pushf
je,pn
mov
mov
aas
cmpsb
push
sbb
xor
inc
mov
xchg
stos
movsb
jae
scas
sbb
jle
rorb
pop
xchg
and
or
lret
fs
and
aaa
iret
arpl
test
xor
mov
daa
dec
popa
outsb
ljmp
xchg
out
cmp
jge
push
lea
or
xor
xchg
ret
and
lcall
jb
push
mov
stos
ja
loopne
mov
mov
js
jns
loop
jecxz
fsubr
shll
mov
shlb
ret
fwait
jmp
pop
test
loope
scas
sbb
aam
ret
ret
shlb
inc
enter
loope
push
xor
pop
scas
mov
pop
fdivs
cmp
shll
cwtl
out
inc
pushf
or
pop
push
inc
and
cltd
test
dec
dec
lret
ror
xchg
bound
cmpsb
xchg
leave
mov
pop
jo
pop
jnp
clc
add
or
jecxz
mov
adc
jb
jns
adc
mov
mov
push
and
xchg
loope
stos
sbb
ret
into
mov
daa
adc
nop
jns
inc
add
data16
insl
mov
sarb
cmc
jmp
adc
mov
shll
xor
jecxz
and
repnz
xchg
xor
fsubs
sub
jl
xor
cwtl
mov
mov
ficoms
loopne
data16
and
je
sbb
in
inc
xlat
sub
stos
stc
mov
test
sub
lods
add
out
jbe
mov
dec
rcrb
cltd
xchg
pop
cmp
jle
dec
je
sbb
jecxz
addr16
dec
roll
sub
mov
scas
call
aaa
adc
inc
mov
movsl
fildll
mov
jmp
int
cmpb
sbb
inc
and
hlt
jne
dec
pop
sub
xchg
jns
sub
test
inc
fcoml
pop
stos
les
rolb
test
scas
push
dec
push
or
cltd
jp
loop
les
inc
insb
push
push
daa
or
push
and
fwait
jns
loope
adc
nop
sub
popf
aaa
xor
inc
mov
stc
pop
mov
xchg
xor
push
movsb
mov
mov
mov
lock
mov
mov
lods
repz
mov
int
dec
cltd
and
out
dec
repnz
or
fdivr
loopne
scas
fcmovbe
cmp
mov
or
inc
sbb
ja
popf
cld
in
xchg
cmc
mov
iret
inc
sbbb
ret
push
sub
scas
mov
mov
test
lahf
push
jo
fistl
adc
cmp
scas
cwtl
adc
ljmp
fdivrs
sub
shl
and
push
xor
jnp
dec
jb
repnz
scas
mov
ret
or
sub
fisttpll
xchg
cmp
fimuls
les
scas
mov
mov
mov
jp
fistpll
xchg
lret
lea
dec
lods
pop
mov
add
sar
pop
push
fst
xchg
mov
or
cli
dec
jge
or
push
push
addr16
xchg
daa
ret
push
xchg
xor
in
lret
mov
push
xchg
imul
jnp
lods
push
push
mov
jge
lea
push
sbb
push
and
push
sub
fs
mov
mov
and
aam
add
push
fdivrl
incl
jle
mov
ret
xlat
int3
push
das
into
adc
icebp
and
int3
sub
mov
xor
pop
dec
leave
pop
iret
xchg
fwait
mov
addr16
popa
dec
jl
sub
aam
mov
out
xchg
fwait
dec
add
dec
adc
leave
jns
push
sub
mov
outsb
lods
pop
jbe
pop
cmp
lea
adc
cs
jl
and
mov
cltd
pop
xchg
push
jecxz
out
fs
test
jp
jnp
jno
adc
or
push
leave
or
mov
dec
and
out
and
outsl
cmpsb
push
gs
jle
add
cwtl
scas
cmpsb
cwtl
aam
xchg
jno
insl
cwtl
popa
xor
pop
push
aad
cltd
jl
lret
xchg
fisubrs
jp
cld
cmp
popf
out
push
mov
jp
pop
std
jb
jne
xlat
movsl
popa
ficomps
xor
inc
or
add
pop
lods
push
sub
jne
inc
outsb
push
fdivs
int
in
aaa
mov
lahf
xor
cwtl
out
pop
cmp
push
or
xchg
sbb
ror
or
pop
pop
adc
cmp
xchg
loopne
pause
int
push
test
lcall
sub
ljmp
insb
icebp
sub
mov
rcrl
xor
shlb
xchg
jo
and
and
lret
push
and
jae
je
mov
aam
nop
jo
shl
cwtl
std
xor
inc
add
loop
in
popa
in
and
mov
ljmp
cs
imul
fmuls
faddp
icebp
sub
sub
pop
push
jle
loopne
rcll
testl
and
cmp
pop
pop
push
stc
push
cmp
add
push
mov
fs
pushf
lods
test
add
pop
xor
jg
inc
paddw
mov
es
iret
int3
sbb
pop
imul
inc
daa
pop
cmp
insb
add
jo
mov
sub
push
fadds
dec
sbb
add
cmp
loop
mov
ss
pop
popa
outsb
add
jecxz
dec
notb
mov
repz
adc
sub
out
add
xchg
cltd
push
cwtl
xchg
aaa
xor
insb
iret
pop
pop
mov
fadds
movsb
sbb
add
mov
movsb
mov
push
inc
xor
cmpl
jecxz
and
rcl
xchg
testl
sahf
imul
cmc
aaa
negl
dec
push
mov
pop
pop
jp
pop
pop
lcall
and
sub
jl
fidivl
xchg
in
leave
arpl
lahf
cmp
lods
sbb
xchg
push
push
xor
cmp
pop
aas
mov
jmp
scas
lahf
mov
lahf
mov
sub
inc
mov
andb
hlt
gs
scas
and
sbb
in
jl
out
sete
sub
aam
outsl
xchg
mov
add
clc
adc
xor
mov
jmp
stc
push
xlat
in
repnz
lret
mov
mov
rorl
es
mov
inc
jo
pop
mov
cmp
loopne
clc
in
adc
clc
std
ret
inc
popf
pop
sbb
mov
repz
or
aas
jbe
cmp
imul
xchg
es
jae
jmp
call
bound
daa
test
in
cltd
xchg
mov
and
hlt
addl
mov
push
bound
lcall
pop
cmp
iret
and
daa
nop
mov
xchg
arpl
clc
push
dec
dec
in
jg
rclb
dec
jnp
xchg
movsb
hlt
adc
call
cmpsb
mov
push
rorb
sahf
insb
cmp
xlat
mov
mov
sbb
outsl
xchg
mov
outsl
adc
test
test
pop
cmpsb
add
enter
sbb
mov
mov
cmp
mov
pop
sbb
pop
push
jb
rcll
xor
mov
shll
lock
cs
je
jnp
inc
mov
ljmp
sbb
movsb
xchg
push
push
sub
out
std
scas
fldenv
in
sbb
outsl
pop
sbb
xor
daa
push
adc
sub
push
add
jl
lcall
xchg
push
jno
call
jl
and
mov
outsb
push
adc
dec
stos
rcl
inc
gs
insb
push
and
jnp
push
addr16
inc
int
mov
jge
idivb
xlat
cmp
cs
add
xor
mov
and
pusha
xchg
sbb
nop
lock
jle
dec
into
inc
es
in
xor
xchg
stos
std
jo
lahf
and
cmp
in
imul
mov
cmp
xlat
loope
cmp
jg
sbb
xchg
sub
int
jno
lods
mov
in
mov
push
sub
mov
popa
pop
mov
lret
test
push
lods
inc
push
mov
outsb
lret
and
dec
inc
ds
mov
and
jle
popf
lret
jo
cmp
mov
mov
jb
mov
xchg
rcr
gs
sbb
pushf
pop
xlat
cli
test
push
xor
iret
and
cmp
pop
rolb
cmp
test
outsl
rorl
stos
or
fidivrl
mov
rorl
xchg
scas
add
shll
xor
movsl
fldcw
push
lods
mov
pop
jne
and
xor
push
jmp
cmp
pop
mov
aam
out
push
xchg
xor
pushf
mov
stos
cmp
mov
dec
cs
pop
push
push
pop
inc
sbb
imul
xchg
rorl
mov
int3
aaa
dec
jbe
sti
xchg
rclb
mov
aas
and
das
sarb
stos
lret
test
lock
dec
sub
outsb
and
ret
sbb
cmp
in
xor
andl
sbb
in
std
sarl
icebp
add
cmc
out
mov
push
out
pop
sti
fdivrl
inc
cmp
jge
xor
push
lret
cli
nop
jo
out
or
jp
call
push
mov
scas
ljmp
adc
push
xchg
pusha
pop
dec
and
pop
mov
fldl
mov
test
and
imul
dec
pop
and
mov
clc
pusha
sbb
sahf
popa
xor
imulb
sbb
insl
adc
sbb
jno
fldl
stos
dec
je
sub
sti
repz
mov
imul
add
data16
outsl
test
aaa
sub
add
jne
stos
shrb
or
cld
ja
subb
cltd
dec
sbb
push
dec
rolb
mov
in
mov
pushf
mov
leave
insb
sub
dec
sahf
jmp
ds
ss
or
sti
es
dec
stos
lea
and
lds
mov
ja
ds
jmp
sub
cwtl
pusha
mov
jecxz
and
add
cmp
and
pop
call
mov
pop
sbb
jg
clc
or
mov
aas
rol
pop
sbb
cmp
inc
jle
lret
cmp
xchg
push
out
gs
mov
or
or
callw
std
std
mov
pop
mov
xchg
bound
or
cmc
sti
je
scas
inc
into
cld
shrl
push
jns
xchg
loop
ficoms
outsl
sahf
in
adc
mov
sub
dec
cmp
mov
mov
cmp
and
mov
xchg
mov
ja
fimull
inc
mov
mov
out
fdivs
leave
fimuls
in
push
jg
cmp
cmp
ret
adc
mov
cmc
cmp
inc
cmp
adc
jnp
mov
mov
scas
add
hlt
and
aam
jg
pop
shll
ljmp
mov
in
lahf
insb
add
cwtl
loop
and
sbb
mov
mov
xchg
repz
push
xchg
push
arpl
addr16
add
pop
subb
jge
jge
imul
mov
outsl
dec
test
loop
jo
je
push
mov
xor
mov
sbbb
clc
dec
and
aas
or
icebp
loope
int
rcl
out
scas
sbb
out
pop
jmp
loop
push
aad
jge
inc
addr16
adc
xchg
and
int3
shrb
hlt
xchg
nop
gs
xchg
popl
aas
sbb
popa
pushl
pop
cmp
xor
int
sbb
push
pop
sti
fadds
out
lds
rorb
inc
push
sub
xlat
fmuls
sub
test
pop
adc
lahf
pop
cmp
filds
sahf
mov
iret
and
fwait
mov
shlb
mov
mov
testl
test
cltd
loop
cmp
das
mov
xor
and
mov
xchg
fadds
inc
or
out
adc
testb
sti
nop
vmread
push
inc
xchg
aad
ret
xor
fidivl
dec
add
adc
and
dec
push
dec
sub
mov
cld
clc
fs
jge
add
js
notb
xorb
gs
stc
push
pop
xchg
mov
xor
mov
inc
insl
and
imul
add
dec
stos
bound
cld
fisttpl
sbb
xchg
data16
push
xchg
jo
gs
mov
scas
cmp
pop
jecxz
cmp
xchg
lcall
mov
loop
les
add
movsb
stos
jb
xchg
aas
jns
imul
ds
mov
mov
test
pop
mov
push
stc
daa
sbb
add
push
mov
leave
movsb
repz
ljmp
mov
rclb
stos
pop
pop
xchg
fsubrs
xchg
cmp
imul
aaa
fstpt
mov
mov
cmp
bound
jg
mov
ja
std
lds
repz
push
push
jae
in
xchg
sub
adc
inc
dec
cmp
xor
stc
sbb
rorb
xor
cmpb
mov
loope
mov
push
xor
in
fisttpll
aaa
sub
pop
jns
pop
cmc
lods
mov
inc
std
fimull
and
inc
mov
inc
add
pushf
imul
leave
push
enter
lods
or
add
cmp
int
xchg
cli
daa
aad
cmp
add
adc
stos
sysexit
outsb
xor
scas
lods
cli
ds
add
fdivp
into
gs
stc
add
in
fcmovb
call
push
nop
cmp
mov
addl
test
test
pop
mov
xchg
jg
in
or
popa
fucomi
fistl
xchg
pop
out
pusha
mov
mov
test
mov
mov
or
mov
shl
out
clc
stc
pop
and
cltd
jnp
aam
inc
stc
jae
shrl
int
lock
mov
shlb
fwait
mov
int3
push
add
and
lcall
outsb
inc
fwait
nop
sbb
jno
call
nop
daa
je
jnp
sub
cld
hlt
lds
xor
or
out
rorl
add
mov
icebp
pop
fsub
and
adc
mov
jns
cmp
xchg
push
and
scas
pop
leave
gs
test
and
cmp
test
cmp
cmc
rcrl
xor
scas
fcomps
pop
in
out
divb
push
xor
pop
test
xchg
bnd
outsl
ds
nop
xchg
fists
stos
xchg
mov
fs
or
es
mov
adc
movsl
arpl
ret
addb
and
sbb
mov
test
sub
lock
lds
xchg
gs
jae
cli
out
jp
xchg
stos
iret
mov
mov
xchg
mov
push
and
mov
or
and
dec
sub
and
push
mov
dec
pop
int3
stos
jg
xchg
lahf
subb
xchg
stos
push
pop
addr16
adc
int
xchg
jno
int
ret
sahf
movsb
mov
or
ror
ret
mov
lcall
push
fstps
jg
in
cltd
xchg
lds
jmp
es
jae
push
jae
jg
mov
push
not
idiv
out
mov
pop
jae
cmp
inc
mov
hlt
mov
mov
adc
hlt
sbb
pop
fbstp
cmp
mov
push
sarl
into
mov
jb
dec
fiadds
test
cmp
leave
gs
popa
cli
inc
fstpt
shll
xchg
fcomp
cmp
push
in
filds
scas
mov
dec
push
lret
rclb
pop
lods
mov
in
xor
pop
cwtl
adc
cmpsb
xor
lds
push
repnz
adc
jne
pushf
add
enter
clc
xchg
inc
sbb
cmpl
inc
lods
imul
xor
out
fldl
andb
mov
lahf
and
fcomps
mov
popa
dec
mov
pop
or
scas
mov
out
fwait
or
dec
inc
in
sbb
testl
iret
popl
ret
arpl
xchg
jp
and
loope
ja
sbb
fistpl
lret
addr16
lods
jecxz
cmc
cltd
sub
repnz
aas
pop
cmp
decb
jp
cmpsl
fildl
add
sbb
pop
adc
out
and
mov
push
sbb
xchg
add
dec
fildl
cmp
test
lds
cmp
in
call
cmpsl
mov
inc
repnz
push
movsl
sub
jge
adc
dec
data16
mov
scas
fstpt
lods
xor
inc
stos
push
out
mov
fdivr
adc
les
adc
xor
dec
xchg
push
mov
cmp
jl
stos
or
dec
adc
mov
sbb
pusha
dec
pop
je
inc
mov
pop
andb
push
push
pop
dec
jg,pt
jne
mov
mov
xchg
addr16
iret
popa
mov
test
test
xchg
aas
fldenv
push
or
sub
add
aad
or
push
inc
add
inc
jge
mov
fnstenv
test
jmp
fstl
movsb
shl
lods
faddl
mov
daa
fwait
or
cltd
dec
fadd
mov
xor
lods
push
test
and
pop
add
or
mov
inc
xchg
fidivs
ror
in
cmp
inc
push
shrb
lock
bound
dec
dec
push
clc
fs
stc
xchg
iret
add
notb
test
fiadds
and
sub
adc
jmp
add
jne
bnd
lcall
arpl
cmpl
insb
dec
int
xchg
fldcw
int
sahf
jge
inc
jecxz
sarb
xor
stos
cmpsb
sub
cmp
push
jg
ret
daa
xor
pop
jae
orb
enter
jne
cmc
inc
adc
xchg
ja
stos
or
clc
ret
add
ds
jg
fstps
dec
and
jnp
scas
out
dec
xchg
and
dec
jecxz
bound
mov
stc
ds
and
add
push
data16
xor
aam
out
pop
out
jae
and
xchg
lock
or
pop
sti
popa
xchg
movsb
rcrb
mov
les
jns
mov
cld
push
pop
out
insb
adc
hlt
or
orl
cmc
rcrl
outsb
fwait
mov
pxor
push
add
ret
xchg
loop
ss
in
dec
mov
in
adc
xchg
and
out
jns
mov
fs
inc
rcrb
cmp
mov
dec
mov
push
xchg
sahf
nop
inc
stos
test
arpl
mov
push
scas
arpl
int3
mov
inc
jmp
mulb
ds
div
aam
fsubl
sub
xchg
xchg
enter
dec
mov
xchg
mov
ficoms
sub
push
outsb
jb
pushf
inc
rol
pusha
aaa
enter
int
cmp
dec
stos
xor
cmp
ret
sbb
mov
fdiv
push
rcl
js
xor
shll
mov
or
bound
dec
clc
inc
mov
sbb
adc
xor
pop
test
and
ds
lea
faddl
jmp
cmc
add
jbe,pt
into
je
mov
and
leave
jne
fbstp
sub
bound
inc
xor
add
xchg
icebp
aaa
loopne
xchg
jge
cmpsl
addl
shlb
inc
lds
gs
lods
je
sub
out
movsb
push
mov
xchg
push
jle
sbb
mov
stos
scas
jb
enter
jmp
add
int3
push
mov
fcmovnu
fwait
out
pop
ret
gs
addr16
xchg
in
out
mov
sarl
mov
cmp
mov
adc
sub
movsl
mov
mov
push
or
out
cwtl
inc
imul
mov
neg
dec
in
aas
pop
inc
add
pop
fisttpll
xor
lods
sbb
xchg
jns
inc
nop
addb
mov
mov
lret
sub
lock
ficoml
scas
mov
call
pop
loop
inc
movsb
mov
sbb
mov
push
mov
movsl
xor
scas
ljmp
in
push
push
pusha
testl
mov
ret
or
xchg
or
pop
cli
icebp
or
add
int
test
or
push
mov
adcb
pop
fbld
push
mov
xchg
cmp
jle
mov
loope
jns
clc
idivl
cmp
adc
in
mov
stc
mov
add
js
sub
or
inc
pop
push
cmp
les
adc
inc
fdivrs
pop
mov
sub
ljmp
notl
jge
sub
fwait
unpckhps
mov
scas
mov
xchg
inc
inc
sbb
lock
push
push
dec
jne
jae
leave
in
scas
movsl
dec
dec
pop
lds
jns
and
ss
std
jnp
push
push
mov
out
stc
xchg
inc
out
xchg
fimuls
out
xlat
jge
loop
inc
daa
and
bound
test
cltd
mov
cmpsl
push
adc
or
je,pt
push
mov
ss
outsb
mov
fildll
lcall
pop
out
adc
imul
mov
loop
pop
repz
shl
mov
xlat
pusha
movsb
icebp
adc
push
andl
cmp
push
mov
into
shrb
test
fcomps
outsl
mov
iret
push
frstor
push
lea
loop
sub
int3
test
jns
add
cld
clc
fdivs
in
imul
dec
aaa
add
push
repz
daa
adc
movsb
movsb
lea
add
loopne
xlat
cmpl
inc
outsl
sub
add
push
mov
mov
push
inc
dec
mov
pop
jl,pn
pop
jg
inc
scas
or
xchg
jge
dec
jne
roll
mov
outsb
mov
dec
push
lods
sbb
imul
cmp
nop
cmp
jp
cmp
sbb
and
mov
into
insl
divl
repz
jmp
daa
cli
adc
jbe
rorl
repnz
cmp
out
mov
bound
dec
shll
adc
adc
sbbb
push
sub
pop
or
jno
into
sub
mov
aam
or
movsb
pop
add
clc
pop
cmc
gs
lods
push
aam
dec
lds
andb
lcall
jns
shlb
mulb
pop
xchg
loope
aas
loopne
mov
cmp
or
push
ja
aad
and
inc
vpunpckhwd
cltd
dec
sbb
test
out
int3
js
gs
push
gs
dec
mov
stos
rcrl
and
out
inc
test
cmc
stc
scas
inc
ss
add
scas
xchg
sbb
xor
sbb
xchg
xchg
iret
shll
test
jecxz
leave
lcallw
fucomip
sbb
mov
fidivrl
in
push
add
lret
push
cli
xor
dec
call
mov
xchg
jnp
jnp
sbb
xchg
jo
lahf
stos
push
mov
mov
push
loope
dec
imul
cmp
mov
jecxz
sub
cmp
loope
push
ljmp
aad
cmp
cltd
cmpsl
add
xor
out
hlt
sub
cmp
add
enter
loop
jo
lret
xor
push
inc
add
dec
dec
xlat
mov
push
add
mov
mov
or
add
aad
sahf
adc
and
std
mov
xlat
filds
pop
cmp
jno
pusha
sarl
loope
sti
scas
sub
ds
insl
add
dec
push
and
cltd
stos
stos
movsb
mov
jo
jmp
inc
push
jp
mov
add
mov
add
ljmp
xor
out
int
mov
lret
pop
data16
jnp
adc
leave
test
js
xlat
jmp
das
lea
xchg
shlb
scas
xor
out
push
inc
xor
data16
movsl
ret
pop
push
jecxz
mov
dec
mov
adc
lcall
mov
mov
or
into
fsubr
rclb
pop
mov
cmp
xlat
shll
outsb
outsb
adc
mov
inc
and
pop
and
and
pushf
jl
mov
test
adc
mov
mov
out
fs
repz
das
or
es
gs
xchg
dec
jne
sub
push
std
mov
imul
xlat
cmp
in
clc
mov
cmp
inc
mov
out
xorl
into
inc
imul
test
cltd
mov
mov
sbb
sbb
or
xor
int
cli
mov
xorl
inc
mov
xchg
or
out
in
nop
push
scas
sbb
jno
scas
and
popf
out
fcomp
add
xchg
cltd
int3
hlt
push
pop
scas
out
sahf
sbb
notb
mov
push
out
test
movsl
adc
xchg
fisubrs
mov
jmp
ret
std
cs
ret
repnz
sbb
lock
hlt
imul
int3
ficoml
mov
and
push
inc
bound
jae
cld
sbb
stc
cmp
xchg
or
test
repz
in
cmp
xchg
jge
push
push
dec
out
int3
lcall
movsl
sbb
lcall
pop
sbb
ja
dec
jbe
inc
repnz
or
and
ret
sbb
jns
ret
sbb
add
push
or
mov
cmp
sub
popf
aam
mov
push
mov
pop
test
xchg
int
jmp
mov
jle
adcl
fucomp
jle
aaa
mov
lcall
or
inc
push
fmul
leave
push
sub
mov
push
xchg
ja
adcl
pop
loopne
xchg
mov
frstor
popf
mov
scas
push
push
dec
mov
fildl
mov
sbb
push
aam
mov
add
es
cmp
icebp
cmpsl
loop
mov
add
push
mov
push
mov
jp
dec
cmc
addr16
push
push
xchg
pop
mov
sbb
sti
pop
cmp
lahf
mov
into
dec
sbb
addr16
mov
push
popf
cld
ljmp
or
sbb
jbe
push
cmp
pop
aam
test
dec
pop
cwtl
jl
lock
adc
push
mov
adcb
sti
inc
add
xchg
lret
popf
inc
push
sub
add
nop
mov
add
xchg
mov
rcrb
sarl
loopne
add
jb
cmc
pop
jmp
fs
out
mov
lret
aas
fisubrs
xchg
popa
and
sub
gs
fbld
popa
mov
push
out
mov
cmp
cli
inc
sub
sbb
adc
leave
pushf
mov
cmp
nop
nop
xor
dec
scas
gs
sub
inc
or
rcr
into
lahf
mov
sub
out
cwtl
rcrb
jo
mov
add
stos
add
and
shlb
popf
mov
popf
lods
sbb
inc
ret
pushf
jmp
xor
stos
mov
jno
mov
sti
movsb
out
loope
push
jl
mov
out
jle
cmp
dec
cmpb
cs
inc
cmpsb
lret
push
outsl
imulb
stc
xchg
nop
mov
or
cmp
decb
xchg
movsb
stc
xor
mov
inc
pop
pusha
inc
stos
sub
in
push
jo
scas
test
out
popf
xchg
mov
add
add
xlat
cmp
jns,pn
push
sub
imul
pop
jl
pop
push
out
sti
jp
or
stos
adc
add
xchg
mov
or
stc
ret
mov
sti
cwtl
sbb
push
mov
or
cli
jae
scas
xchg
sub
sub
cld
lahf
pop
and
icebp
iret
or
mov
mov
sbb
jl
notb
mov
out
addr16
add
aaa
shrb
and
lds
cwtl
xor
add
jg
mov
bound
pop
or
pop
shr
cld
pop
call
sub
out
add
mov
or
fiaddl
cmp
xchg
pop
testb
sub
sbbl
gs
out
js
mov
push
mov
fidivs
stos
fcoms
cld
or
enterw
fmul
push
add
mov
dec
mov
into
mov
shll
push
xchg
sub
xchg
mov
jbe
bound
inc
mov
loopne
wbinvd
push
push
pop
or
xchg
and
dec
xchg
jns
arpl
rorl
das
loopne
imul
outsl
insb
ja
mov
addl
mov
mov
dec
cmp
xor
add
and
cs
cmpsb
insb
pop
loope
mov
movsb
sbb
sub
xchg
sub
xchg
xchg
aad
pop
jmp
int3
add
int
push
or
sub
cmc
mov
jg
xor
sub
fldl2e
ss
stc
mov
outsb
iret
in
repz
mov
xchg
mov
xchg
lods
inc
dec
sub
mov
push
add
jmp
mov
mov
jge
out
add
jnp
aas
or
xchg
inc
pop
xchg
cmp
test
pop
sbb
and
push
cltd
jb
or
mov
sarl
test
stos
icebp
lods
sub
aad
mov
mov
aad
enter
pop
push
xchg
push
test
xchg
jp
es
add
and
repz
and
repnz
mov
adcl
mov
sbb
lods
aad
push
aas
lret
dec
mov
sbb
add
shlb
mov
cld
fidivs
push
movl
cmpsb
and
test
sbb
scas
sub
or
sarb
cwtl
adc
cmp
sti
test
xor
dec
mov
movups
movsb
push
into
xor
sarb
es
jg
clc
testl
popf
lds
jne
and
rcr
cmp
stc
mov
inc
cmp
mov
jae
loope
aaa
test
into
test
inc
inc
mov
xchg
scas
jne
pushf
lods
or
xchg
js
cltd
scas
jo
out
clc
mov
add
xchg
jo
jmp
jg
cmpsl
nop
sub
add
pop
mov
dec
sbb
mov
inc
push
cmpl
rol
ret
sub
js
daa
aas
sbb
pop
sub
in
stos
mov
fisttpll
or
jecxz
inc
push
nop
pop
das
cmpsl
lahf
push
dec
jne
int3
sbb
push
int
cmp
xchg
fstps
das
loop
cld
mov
sub
sahf
fnsave
enter
loope
dec
and
jo
sbb
fwait
push
mov
inc
and
outsb
ss
cmp
push
imul
adc
and
fstpt
aas
or
cmp
push
mov
movsw
roll
sub
sarb
dec
and
mov
icebp
add
inc
in
xchg
add
pop
insl
inc
data16
flds
adc
shrl
ret
xor
scas
cmpsb
out
popa
inc
mov
mov
cmpsb
cltd
aam
xor
test
rcll
call
fistpl
mov
dec
inc
push
mov
add
inc
cmp
mov
jg
and
pop
int3
jb
pop
mov
ljmp
cmp
mov
cmc
and
lahf
in
ljmp
sub
es
sub
pop
test
push
jne
fisubrs
lods
xchg
cmc
inc
wbinvd
rcl
ljmp
and
adcl
jle
pop
lds
in
dec
pop
push
lock
mov
sbb
je
mov
push
jl
sub
jmp
ss
push
adc
lods
daa
sub
in
ficoms
jle
push
dec
jp
push
cmc
clc
in
lret
push
pusha
push
lcall
in
outsl
mov
pop
out
out
sub
lock
sub
add
mov
push
lret
push
push
inc
xor
mov
dec
and
int3
cwtl
add
js
or
adc
dec
mov
fwait
imul
mov
dec
sub
and
test
jl
mov
inc
xor
jle
sub
mov
sub
sbb
xchg
filds
push
xchg
push
push
adcl
ucomiss
decl
ficomps
outsb
push
add
xchg
mov
cmpsl
sub
sbb
daa
jmp
jmp
add
push
pop
add
push
ljmp
cmp
gs
jb
fsubr
aam
mov
xchg
into
and
pusha
and
je
inc
mov
aaa
xchg
or
xor
xor
mov
xchg
ds
enter
into
pop
sbb
cwtl
dec
pop
lret
push
mov
sub
fnstcw
adc
outsl
mov
jnp
or
sti
lret
xchg
mov
dec
pop
dec
in
rclb
daa
xchg
ret
push
push
test
xor
xor
mov
sbb
and
cmc
or
imul
inc
dec
inc
or
sbb
mov
ljmp
andb
ljmp
addl
orb
pop
pop
popl
ss
clc
pop
test
lods
sub
negb
test
mov
imul
xchg
outsb
mov
ret
mov
dec
pop
cmp
mov
mov
repnz
xor
jno
dec
nop
ror
in
mov
pop
push
cs
add
xchg
pop
popa
lret
inc
mov
dec
popf
js
fnstcw
xchg
adc
ret
or
aaa
and
jno
imul
lcall
mov
mov
sarb
pop
loope
ss
pop
stos
aad
sets
stos
sub
add
sbb
jno
adc
ss
ror
jle
jbe
movsb
cmp
mov
lret
xor
test
adc
xchg
xor
stc
pop
pop
cmp
sub
sbb
sbb
out
push
clc
xor
ret
mov
in
repz
mov
push
pop
jne
mov
xor
sar
sti
ja
clc
inc
lock
jo
xor
inc
push
out
fmull
ljmp
leave
mov
pop
adc
push
int
and
out
lds
add
pop
xchg
push
mov
xchg
mov
daa
hlt
push
shrl
and
cmp
inc
into
repz
xor
xchg
and
sti
sbb
gs
xchg
mov
and
jmp
popa
cmpsb
sahf
xchg
aaa
mov
sub
xor
xor
stos
mov
repnz
push
xlat
pop
fistpll
f2xm1
outsl
push
mov
leave
or
jmp
bound
fwait
add
cmpsb
dec
lret
scas
jmp
xchg
sub
inc
in
lea
pop
mov
mov
cmp
mov
insl
sub
fimull
push
pop
in
jmp
in
mov
clc
das
mov
rcrb
repnz
addr16
rcrb
xorb
fcmovb
pop
int
and
or
jno
es
popa
fcomi
dec
int3
int3
inc
cmp
add
mov
xchg
js
sub
mov
cmp
sub
out
imul
or
test
cmc
cltd
jbe
dec
inc
sub
int
imul
inc
icebp
push
xchg
idivl
cmp
xchg
arpl
cli
mov
cmp
cs
jbe
xchg
and
pop
inc
sub
ja
roll
inc
test
sbb
lods
xor
shlb
je
movsb
insb
jl
in
push
add
jle
mov
cmpsl
sub
dec
cmpb
push
jge
jecxz
jecxz
insb
xchg
js,pt
add
mul
and
or
popf
repnz
jae
imul
aas
sahf
cli
orl
jecxz
cmp
fwait
mov
or
jp
jne
xor
ret
add
push
iret
cmp
insb
adc
sub
mov
cs
mov
and
std
fisubs
fucomi
ss
adc
add
cmp
loopne
sbb
adc
xor
lret
mov
pop
jge
xchg
clc
ljmp
cld
lret
in
movntps
test
sbb
fadds
cmp
sbbb
fldcw
aas
cwtl
jmp
pusha
push
out
lahf
jne
inc
push
in
test
jnp
mov
cmpl
add
loop
fcompl
push
fmulp
inc
jle
jb
adc
sarl
and
push
cli
cmp
xchg
in
inc
push
cmp
test
mov
dec
cmp
mov
scas
int
sub
xor
push
movsb
push
add
loopne
mov
adc
gs
ljmp
mov
movsl
pop
mov
dec
cmp
sub
jns
stc
ret
add
sbb
pop
adc
insl
int3
jp
inc
sub
rorl
ja
cwtl
and
jb
cltd
lret
cld
into
repnz
mov
outsl
lcall
outsb
pop
add
out
aad
icebp
inc
mov
jne
ja
inc
je
or
pop
push
pop
and
test
ret
push
sub
sbb
mov
mov
rolb
rorb
xchg
cli
jg
out
adc
mov
push
xlat
dec
notl
popf
icebp
rcrl
cmp
shlb
lock
loope
sti
add
add
mov
cmp
loop
jl
rorb
or
fsubs
fwait
sub
cmp
adcb
sbb
mov
xchg
sub
sbb
aas
cmp
enter
popa
mov
int3
fildl
ds
movsl
out
mov
movsl
inc
xor
inc
mov
add
xor
xchg
ret
test
cltd
add
dec
mov
push
insb
ds
cmp
in
mov
xchg
and
int3
mov
popf
pop
das
xor
sbb
jns
shrl
movsb
cmc
inc
inc
or
dec
rorb
cmp
and
cmp
notb
ret
mov
mov
add
pop
idiv
pop
lret
test
and
cmp
mov
andb
pop
js
rep
out
sub
inc
xchg
xor
sbb
pop
mov
push
inc
pop
popa
lret
sub
sub
push
bound
fcmovbe
add
sarl
mov
or
sbb
push
insl
int
xchg
and
mov
sahf
jmp
mov
les
aam
movsb
fistpl
cltd
lfs
push
call
lahf
pop
adc
inc
scas
mov
enter
test
sub
sbb
lahf
daa
rcrb
ret
jge
and
jnp
mov
cmpsb
adc
jns
cmp
pusha
in
xor
cwtl
mov
xchg
xor
mov
fidivrl
add
jp
sub
sbbl
adc
sub
add
in
nop
sub
mov
gs
test
inc
xor
pop
lods
out
xchg
outsb
xchg
inc
xor
dec
jae
xchg
and
sarl
popa
std
or
scas
adc
jecxz
pop
jp
cmp
icebp
int3
int3
pop
ljmp
insl
jl
cld
add
loopne
shll
sub
adc
cmpsb
inc
call
loopne
lds
add
pop
jmp
loop
mov
es
cwtl
popw
dec
call
cmpsl
sub
jo
pop
jg
aas
imul
lea
pop
js
inc
jns
arpl
gs
or
sub
add
fisubrl
adc
push
cs
mov
cmpsb
test
pop
mov
sbb
mov
xchg
out
pop
jg
jb
rorl
leave
movsb
and
pop
lahf
cwtl
cmpsb
stos
pop
push
cmpsb
popa
or
test
mov
inc
std
out
add
pop
pop
fnstsw
push
push
cmp
cwtl
rorb
sub
sbbb
outsl
push
roll
popa
shrl
cmc
mov
sub
sub
or
shlb
inc
xor
ja
xchg
adc
push
pop
je
push
jno
mov
cmp
sbb
fcmovne
mov
ss
xchg
mov
je
cmp
jmp
inc
mov
movsb
sub
rcrl
inc
and
push
push
fcmovnu
sti
inc
lahf
repnz
repnz
repz
cmc
dec
popa
rcll
repnz
inc
sub
test
shl
or
scas
sbb
pop
push
xchg
inc
cmpsb
xchg
lds
daa
sbb
dec
push
jmp
push
fnsave
push
ss
icebp
pop
cmp
aad
dec
cli
out
mov
fdivrs
in
pusha
inc
rclb
iret
loope
mov
push
cmp
mov
cmp
movsl
je
push
jb
sbb
cmp
push
mov
dec
out
xchg
sbb
mov
jg
fisttpl
test
ljmp
xchg
mov
cmp
jo
dec
lods
cmp
test
jo
inc
dec
cmpsl
mov
jmp
inc
cmpsb
or
jbe
mov
fidivs
nop
xchg
inc
push
in
call
mov
scas
cmc
sbb
push
in
rcl
adc
lcall
cmpsw
or
jmp
push
inc
add
xlat
xchg
pop
adc
sbb
bound
inc
jg
cld
mov
mov
add
ljmp
jnp
cwtl
out
nop
mov
cmp
adc
jp
cmpsb
add
loopne
ret
sub
inc
xor
pop
loopne
adc
adc
adc
add
cltd
push
std
leave
cld
cmpsb
lcall
fcoms
xchg
popa
push
mov
inc
mov
repnz
orb
btc
inc
arpl
popa
das
jnp
fldl
xchg
leave
xlat
leave
test
push
addr16
test
mov
call
popf
lock
pop
jle
inc
xchg
iret
test
nop
bound
push
rorb
addb
loop
imul
or
adc
jno
xlat
mov
adc
xor
lahf
movsb
xchg
push
test
js
mov
adc
mov
hlt
cmp
xchg
mov
enter
ds
nop
inc
push
jo
in
jo
inc
push
ss
stos
in
or
pusha
xchg
fwait
jle
xchg
mov
fwait
mov
lds
inc
xor
cmp
popf
mov
pop
xchg
call
das
pop
fbstp
dec
mov
jnp
sar
int
dec
mov
cwtl
jns
cwtl
cs
sbb
and
les
add
lods
insb
jno
subl
dec
dec
mov
xor
rorb
jg
push
adc
xchg
lds
pop
adc
repz
test
scas
xlat
pop
popl
mov
jle
test
ss
xor
mov
inc
repnz
cmpsb
pop
mov
jge
daa
shll
inc
sbb
into
pusha
add
pop
int
movsb
lods
adc
mov
or
ja
mov
sub
imul
and
ret
mov
rcrl
add
cmc
mov
data16
movsl
xchg
in
out
lods
loopne
rclb
icebp
jmp
ljmp
cmp
xchg
push
stc
int3
enter
lods
xor
adc
jns
daa
sub
lret
jbe
outsl
mov
jecxz
addb
pop
fldcw
ss
in
ss
push
adc
xchg
xor
je
xor
mov
sub
lret
fdiv
xchg
add
mov
mov
in
cli
sbb
and
xchg
ljmp
insb
fadd
sarl
rcrl
gs
push
cmc
pop
loopne
xor
mov
andb
sbb
sub
shr
lcall
decl
cmp
mov
icebp
fbstp
sbb
lea
fisubrl
push
and
dec
ret
sbb
or
les
pop
inc
jg
mov
test
inc
ja
out
mov
jne
mov
xor
inc
mov
in
jp
lock
mov
fadd
lods
mov
clc
or
or
xchg
pop
call
mov
test
test
sub
jmp
std
mov
call
sub
pop
rcr
jmp
imul
mov
cmp
pop
xchg
cmp
ljmp
mov
mov
or
add
sub
mov
hlt
xchg
data16
nop
in
and
aam
xor
pop
mov
jo
jo
sub
mov
in
aam
pushf
xor
mov
test
cmp
xor
adc
adc
faddl
pop
dec
negb
rcrl
in
adc
mov
sarl
ret
inc
arpl
ss
lods
push
mov
mov
shrl
cmp
jbe
or
lock
mov
xchg
add
dec
mov
imul
mov
fbstp
dec
repz
mov
dec
les
lret
ficoms
add
jo
xor
fidivrs
cmp
and
out
and
lock
inc
loopne
mov
test
leave
ja
xor
dec
push
lds
fdivr
mov
sbb
mov
jns
mov
stos
dec
ret
leave
rorb
scas
sub
sbb
sbb
cmp
imul
cmpsb
sub
rolb
cmc
repz
lods
cs
lods
fadds
and
cmp
mov
leave
sub
outsl
jo
pop
cmpsl
pop
in
xchg
and
dec
pop
into
adcb
ficompl
sbb
fidivs
xchg
or
ja
dec
dec
jns
mov
mov
ja
addr16
cmpsl
lahf
mov
mov
push
lret
iret
xor
mov
popa
cmc
decb
enter
in
pop
xor
push
jae
xchg
aas
aam
xchg
stos
ret
in
add
in
ficomps
mov
adc
mov
nop
dec
cmp
pop
mov
lods
inc
mov
outsb
clc
scas
xchg
and
aam
lock
push
inc
jle
dec
add
test
testb
push
movsb
inc
les
jno
xor
enter
inc
js
push
ds
lret
sub
popa
in
push
addr16
aam
push
filds
pop
shlb
lods
push
mov
xchg
xlat
jno
iret
mov
mov
in
push
lret
movsl
aaa
jmp
or
out
sub
loopne
dec
push
cmc
icebp
nop
mov
cmp
add
outsb
ljmp
test
cs
add
outsb
inc
loop
stos
jo
inc
xorb
mov
push
xchg
out
pusha
cmp
sub
int3
imul
push
jns
repnz
xchg
in
sbb
stc
cmc
add
xorl
test
jecxz
ljmp
clc
ds
mov
inc
sarb
lea
cmp
call
cmp
lods
rcr
mov
aas
dec
mov
add
xor
loope
inc
orb
popf
sbb
test
test
inc
push
sub
jle
inc
and
dec
cmovp
rorb
shl
lfs
add
movsb
jns
jg
cmp
xor
and
pop
das
and
mov
stos
push
loopne
cmp
leave
adc
mov
into
mov
mov
push
mov
add
inc
sub
fucom
mov
push
jle
cmpsb
ret
pushf
sbb
dec
xchg
fnstcw
pusha
test
shl
ja
inc
mov
in
movsl
mov
add
aaa
jecxz
xlat
mov
mov
nop
js
sarl
std
adc
imul
imul
mov
xchg
push
dec
insb
imul
push
jle
in
jns
pop
jl
mov
jle
mov
add
xor
mov
aam
or
shrb
push
and
add
test
add
and
stos
dec
xor
lret
sbb
loop
cmc
mov
xchg
std
inc
push
outsl
xchg
mov
in
xchg
mov
cmp
xlat
ljmp
sbb
lcall
inc
sar
aaa
cmp
pop
decl
mov
insl
jne
jae
mov
xor
fdivs
fcoms
fwait
ret
mov
lahf
sarl
mov
pop
sbb
sbb
push
xor
or
out
push
mov
rolb
lods
mov
cmp
adc
jg
xor
mov
mov
js
mov
cmp
jne
insb
dec
into
hlt
xchg
xchg
push
jg
dec
loop
inc
sbb
repz
mov
xchg
cld
pop
test
adc
lret
push
in
std
shlb
rcll
jne
repz
movsb
add
mov
stos
out
ja
xor
iret
std
push
jmp
ljmp
pop
repz
stos
and
test
xor
or
xor
mov
dec
rorl
jb
shll
jecxz
imul
cmp
into
pop
lret
sub
fstp
test
push
popa
xchg
sbb
xor
jae
les
aaa
out
outsb
sahf
int3
xchg
mov
test
sahf
and
adc
sti
pop
test
flds
mov
nop
dec
and
pushf
jmp
add
xchg
add
pop
ror
dec
insl
inc
xor
mov
or
push
xchg
pop
inc
lahf
and
shr
push
ret
sahf
cmc
mov
adc
fsubl
mulb
dec
sub
jo
xchg
add
ljmp
les
bound
push
and
pop
ficoml
aad
push
xlat
mov
adc
repz
ds
stc
js
dec
sbb
insl
inc
es
cmpsl
push
sub
call
jl
repnz
jno
push
xor
testb
xchg
add
arpl
cmpsl
mov
inc
int
push
push
push
outsb
lsl
aam
ret
inc
jge
xor
xchg
scas
add
ror
xor
scas
and
int3
shlb
les
jo
loop
and
in
inc
aam
cmp
sbb
mov
out
mov
inc
out
xchg
xor
jg
or
aas
inc
mov
sbb
cli
xchg
cwtl
loop
adc
push
or
rcll
mov
push
dec
ja
lods
std
cmp
add
or
and
dec
mov
adc
adc
repnz
pop
pusha
push
jl
inc
ja
pop
scas
subb
xor
rorl
and
push
cmpsb
mov
inc
mov
fwait
xchg
cmc
aad
outsl
lahf
lods
roll
lahf
mov
mov
sub
xchg
lahf
gs
adc
pop
xchg
stos
add
arpl
xchg
push
nop
aas
popa
sbb
cmp
inc
shrl
out
fisubl
ret
ljmp
add
pop
pop
push
xor
add
push
nop
and
ja
call
shr
push
rorl
sub
mov
cmpsb
repnz
aas
fs
loop
movzwl
outsb
add
mov
cmp
pop
push
shrl
dec
sbb
push
nop
and
inc
vminsd
push
stos
mov
jbe
rorb
stc
mov
sbb
mov
sbb
movsl
loop
jns
mov
int3
test
cltd
js
shll
fmull
sub
mov
push
mov
or
add
mov
dec
adc
shr
push
xchg
and
mov
das
loope
cld
xor
addr16
imul
inc
fisubs
ja
jp
adc
movsb
xchg
outsb
push
popa
fsubr
fistl
adc
or
dec
pusha
movsl
xchg
xchg
imul
add
loop
lods
push
xchg
sahf
lock
js
sub
dec
xchg
and
int
fimuls
sbb
aad
sub
int3
mov
mov
test
xchg
mov
aas
cmpsb
mov
cmp
lods
cmpsb
lret
pop
into
mov
pop
sub
lea
sahf
ja
mov
add
mov
inc
pop
call
pop
sbb
outsb
mov
dec
and
ret
fwait
push
cmp
xchg
shlb
cld
jmp
sbb
sub
mov
repnz
inc
iret
push
add
xchg
mov
loop
ret
loop
sub
rcll
pop
movsb
jmp
push
mov
pop
mov
fstpl
lcall
rcr
popf
mov
pop
dec
xchg
xor
aaa
cmpsl
push
cmc
icebp
cmp
jbe
push
je
into
hlt
mulb
stos
mov
mov
add
in
push
adc
push
dec
in
je
mov
into
mov
ds
pop
adc
pop
sub
mov
cmp
notl
mov
pop
insb
mov
mov
dec
int3
pop
insl
sbb
or
cld
jae
jmp
jl
dec
jl
gs
xchg
out
scas
xlat
aas
pop
cwtl
pop
pusha
das
push
test
dec
int3
aas
lahf
iret
push
pop
sbb
xchg
testl
stos
out
stos
stos
out
cmp
add
int
std
aad
xchg
cs
dec
aad
add
lcall
clc
aas
pop
cmp
rol
fld
neg
xchg
dec
fcomps
fcomps
ljmp
pop
jmp
iret
pushf
sub
aas
in
sti
in
or
mov
test
in
mov
push
loopne
fs
push
movsl
mov
push
sub
lret
sub
inc
fisttps
fiadds
sbb
mov
test
jmp
mov
test
cld
divl
cmpsl
inc
neg
rcll
push
dec
jp
adc
dec
xchg
in
test
mov
push
inc
xchg
dec
fiadds
jmp
push
dec
xor
roll
xor
dec
add
fisubrs
or
test
leave
jo
or
xchg
dec
std
test
pop
mov
adc
cmp
in
and
and
mov
gs
push
add
filds
pop
inc
fs
cwtl
jl
je
push
or
in
xchg
fisttpll
adc
addr16
or
cmp
mov
mov
fcmovu
js
xchg
ja
jnp
mov
sub
shl
add
andb
lods
outsb
test
ret
lahf
jge
fnsave
fcoml
lock
cmpsb
dec
movsb
aad
lea
push
cmp
fs
mov
stos
out
test
outsb
lahf
lahf
xchg
fldenv
or
mov
popf
xor
add
out
fisubrl
movsl
pusha
pop
mov
icebp
dec
mov
adc
rorb
out
mov
sub
aaa
push
imul
push
lret
xchg
ljmp
pop
pop
adc
cmpsb
sbb
scas
adc
in
lcall
sbb
shll
xor
or
lock
xchg
sub
and
test
adc
int3
sub
inc
adc
out
pop
ja
push
add
sbb
xor
cltd
push
int
aad
add
jl
push
fcom
mov
js
push
xchg
mov
nop
icebp
mov
mov
add
xor
mov
xchg
add
test
xchg
jle
jns
pop
icebp
sub
in
jno
test
leave
lahf
shrb
mov
push
xor
sub
aam
dec
mov
and
adc
push
shll
je
fbstp
adc
mov
push
mov
sbb
pop
sbb
jns
repnz
inc
cmp
adc
push
mov
xor
neg
lea
or
psrlw
arpl
mov
shlb
mov
stos
mov
cmp
arpl
hlt
mov
repnz
scas
popa
xor
pop
into
lds
aaa
pop
xor
ljmp
sub
decl
outsl
pop
hlt
pop
xorb
sbb
jns
xchg
mov
dec
cmp
test
jne
inc
lock
nop
icebp
bound
rcl
sti
and
insb
sub
push
inc
fs
fs
not
xchg
adc
jle
insl
stc
sub
stos
inc
mull
or
outsl
sbb
call
test
or
data16
fcomp
leave
loop
int
add
jno
xor
add
notb
mov
rcrl
addr16
and
pop
ret
cltd
out
insb
or
sub
loop
inc
idivl
ret
nop
lret
fisttpl
sbb
xlat
pop
insb
cmpsb
add
jmp
std
adc
scas
push
adc
cld
and
movsb
xor
hlt
push
xor
loopne
fisubs
cmc
sbb
mov
into
jge
stc
mov
test
push
bound
inc
scas
xchg
arpl
pop
fsub
mov
mov
pusha
out
lock
rolb
aad
add
jge
cltd
je
stc
imul
push
xchg
ret
adc
cmp
repz
jle
push
adcb
aas
lock
into
ret
xchg
mov
ja
push
jg
xchg
loop
inc
add
aad
in
popf
sarb
jne
xchg
cs
sub
popf
mov
fwait
jno
jge
add
mov
xchg
mov
push
loope
xchg
mov
fistpll
or
rcll
rol
inc
push
test
sbb
or
push
xor
cwtl
add
jo
sub
add
mov
xchg
fsubr
or
fistl
ficoml
pushf
sbb
repz
cltd
fldcw
xor
popa
dec
test
inc
dec
cmp
aad
out
mov
test
movsl
cmp
cmpsb
loop
adc
mov
test
dec
rclb
jae
mov
pop
insb
leave
mov
pop
sub
popa
dec
ds
xchg
adc
testl
scas
hlt
cmp
pop
cmp
popa
or
push
cmp
mov
mov
sub
and
daa
cs
add
cli
push
sbbb
icebp
movsb
es
jb
xlat
repnz
movsl
icebp
or
dec
outsb
movl
adc
sarb
adc
dec
jne
xor
push
ret
push
dec
inc
and
es
add
test
or
loope
jns
push
loopne
xor
inc
idivl
aaa
imul
add
imul
or
std
mov
mov
aam
mov
loope
cltd
in
jae
ljmp
in
xchg
inc
in
mov
ret
xor
jbe
aas
add
mov
mov
sti
dec
test
pop
mov
aaa
fmuls
adcl
stc
and
pop
dec
je
rol
sar
test
sti
mov
mov
xchg
in
inc
aam
out
les
mov
test
pop
je
jmp
mov
mov
inc
icebp
mov
repnz
popf
or
mov
ret
mov
add
mov
stos
fcomi
xchg
lret
cmc
fcompl
xor
es
mov
push
std
lcall
incb
mov
or
push
add
pop
mov
mov
inc
push
mov
stc
cmp
ficompl
gs
aaa
cld
mov
pop
jmp
jmp
xor
push
lcall
xor
pop
mov
inc
pop
jb
sub
and
xchg
push
ds
mov
test
in
das
adc
mov
lods
repnz
xor
testl
pop
icebp
emms
cpuid
mov
out
lock
shrl
movsl
out
adc
jge
testl
xchg
add
dec
mov
cmp
dec
mov
cmp
jp
sti
add
or
je
rorl
loop
lcall
mov
stos
cmp
insl
js
aad
mov
pop
mov
iret
mov
adc
nop
push
push
pop
push
js
cmc
jle
fwait
mov
in
sbb
sub
sbb
cmpsl
jnp
mov
or
mov
mov
jg
inc
pop
aas
repz
jae
or
and
pop
adc
mov
pop
jnp
cmp
rcrl
mov
sub
sbb
sub
fbld
and
mov
out
mov
imul
sahf
out
or
cmp
mov
in
jle
aaa
into
mov
mov
cmpsl
pop
xchg
imul
popf
inc
pop
mov
adc
dec
xor
ja
sbb
les
mov
subl
mov
mov
inc
jne
das
outsl
pop
cmp
or
or
das
lret
imull
movsb
push
adc
ret
cmp
push
mov
jmp
xchg
lcall
push
test
inc
inc
dec
dec
jbe
mov
roll
adcb
and
shlb
mov
jecxz
and
jbe
out
loopne
mov
adc
jns
ret
inc
and
adc
sub
clc
rclb
call
mov
mov
push
pop
les
jl
xor
mov
sbb
mov
std
pop
fwait
cwtl
popf
sbb
cld
icebp
mov
loope
into
cltd
movsl
int
gs
dec
cli
jns
push
shll
jecxz
ss
mov
mov
ja
push
mov
push
inc
fdivrs
fistl
fidivrs
lds
mov
and
mov
sub
add
imul
mov
pusha
stc
stos
aad
push
adc
pop
lahf
cmc
mov
xchg
scas
clc
popf
fsubrs
addr16
int
insl
fdivrs
loopw
fists
dec
cwtl
sar
pusha
in
js
cld
aaa
stc
shlb
lods
cmp
add
fildll
cmp
insl
jge
fdivl
inc
es
jns
jo
lret
shlb
or
and
stos
xor
sub
sub
or
out
pushl
fmull
or
inc
xchg
imul
pop
jmp
out
jle
and
xchg
sbb
push
xor
ffreep
lock
sub
insl
cli
cltd
jp
jecxz
sarb
mov
in
xor
mov
xor
cmp
or
rcll
daa
ficomps
insl
inc
into
pushf
pop
out
adc
cmc
mov
mov
inc
inc
leave
dec
jbe
cmp
rcrl
fists
or
pop
pop
insb
aaa
clc
mov
test
mov
add
inc
add
out
push
clc
out
in
mov
add
in
push
xor
imul
sub
dec
mov
into
divb
test
shrl
popf
stc
mov
insb
cmp
fidivl
enter
xchg
aad
repz
xor
negl
cmp
test
mov
insl
add
rclb
inc
dec
sbb
mov
push
xchg
icebp
fwait
imul
cmp
xor
mov
pop
xor
adc
lahf
cmpsl
mov
into
cld
insb
addr16
mov
mov
inc
mov
sbb
adc
xor
adc
dec
push
push
inc
enter
dec
pop
inc
push
gs
jge
lods
cmp
push
push
or
gs
hlt
mov
into
inc
aad
mov
xor
or
cmp
mov
mov
jp
lret
gs
jb
inc
xlat
sub
insb
inc
mov
test
popa
cmp
pop
jp
and
jp
leave
cmp
cmp
pop
xchg
push
adc
outsl
pushf
clc
pop
lret
xlat
in
or
dec
lds
test
dec
into
jb
mov
and
adc
ja
dec
cld
sub
jp
jbe
pop
mov
insb
iret
cmp
je
je
aam
icebp
fs
xor
push
and
mov
mov
sti
mov
enter
xchg
int3
jno
push
daa
leave
sbb
and
neg
clc
movsl
notb
jne
cmpsl
cmpsl
scas
lds
icebp
push
add
xchg
adc
mov
das
fidivl
ror
sbb
inc
rcrl
popf
dec
push
mov
insb
jle
mov
iret
inc
lahf
out
xchg
xchg
pop
inc
out
and
jmp
aaa
dec
lret
sbb
lods
sbb
test
add
inc
outsb
dec
push
push
cmp
xchg
idiv
scas
daa
sbb
push
movsb
test
fisttps
sub
aad
sub
jnp
std
jns
das
cli
pop
mov
xor
push
dec
loopne
bound
movsb
pop
jle
push
xor
fildll
mov
xlat
stos
adc
lahf
mov
jne
pop
mov
push
clc
lcall
test
push
xchg
icebp
cmpsb
xor
push
fs
pop
and
in
daa
xor
cmp
insl
mov
pop
adc
cmc
shlb
addr16
test
push
mov
or
rol
leave
mov
inc
jb
adc
and
aam
test
xchg
fabs
pop
loop
xchg
inc
test
push
ljmp
arpl
sub
imulb
sahf
sub
clc
add
mov
xchg
push
insb
cmp
test
insb
jle
jne
shll
inc
xor
adc
pop
in
xorb
xchg
int3
push
rol
mov
add
inc
jl
mov
andl
push
paddsw
iret
sbb
dec
cmp
xorb
stc
insl
cltd
add
and
xchg
popa
mov
mov
or
mov
push
mov
loopne
dec
jge
push
pushf
xchg
mov
sbbl
in
push
pushf
cs
pop
test
mov
adc
lds
nop
xchg
testb
jge
loop
fidivl
ss
popa
adc
jne
into
hlt
cmpsl
outsb
dec
int
jmp
or
jmp
je
xor
lds
xchg
jbe
xor
pop
add
popa
ficompl
adc
aaa
out
sti
dec
pop
jg
fidivl
inc
dec
imul
jns
add
stc
arpl
mov
mov
mov
ss
pop
push
cmp
fs
and
ss
or
mov
dec
leave
loope
clc
mov
xor
adc
enter
or
sub
and
nop
jecxz
mov
hlt
dec
lea
or
imull
int3
sub
inc
push
dec
fwait
nop
xor
sub
jo
pop
loop
jno
xor
xor
pop
stos
xor
movsl
rorl
stos
xor
fsubs
pop
sbb
inc
mov
into
mov
popa
movsl
jp
push
and
mov
push
add
inc
negb
adc
pop
mov
scas
inc
leave
xchg
dec
xchg
sbb
mov
loop
fisttps
test
cmp
addb
dec
jnp
dec
add
mov
and
mov
dec
jmp
cmp
dec
ret
jnp
cltd
ror
testb
imul
mov
mov
cmp
mov
rol
rclb
pop
outsl
mov
addr16
inc
sbb
test
add
push
hlt
ret
in
fidivs
push
stc
mov
pop
icebp
mov
mov
subb
outsl
sbb
addr16
ja
or
xchg
jecxz
push
popf
cltd
aad
mov
aad
bound
mov
sar
jl
push
hlt
jle
mov
fcoml
bound
jbe
aaa
sbb
fwait
es
stos
xor
test
xchg
sub
out
jnp
std
xor
inc
jno
ret
jg
sub
and
sub
std
xchg
gs
push
push
push
lock
rcrl
arpl
fidivs
mov
test
out
pop
fwait
sub
xor
inc
loope
cs
push
fdivr
jecxz
push
punpckhdq
loop
lds
push
pop
pop
and
xchg
jmp
test
lret
addr16
dec
mov
jl
cmpsb
in
xchg
push
jl
das
test
pop
dec
mov
pop
adc
xor
popf
cmp
decb
and
popa
ret
jo
cmp
outsl
insb
fwait
cmp
mov
fisubl
cltd
in
xor
mov
jle
xorl
pop
loope
icebp
les
js
icebp
adcl
jg
out
adc
inc
daa
mov
sbb
lock
xchg
adc
mov
xor
je
addl
pop
xor
movsl
push
data16
stc
jae
jge
xchg
mov
mul
cwtl
mov
dec
or
mov
lret
inc
inc
pop
fnstcw
lret
add
mul
scas
jg
inc
fimuls
fcomp
adc
dec
ret
imul
addb
divl
sbb
lods
cmp
stos
std
in
mov
dec
adc
push
mov
out
jge
xchg
insl
push
loop
mov
mov
test
arpl
push
and
push
loope
and
jnp
xor
and
adc
mov
out
call
jmp
fldl
xchg
popa
cmpl
dec
aad
int3
jno,pt
ds
fdivrs
outsl
insl
mov
das
mov
call
xchg
pop
sub
jg
paddw
push
mov
repz
jno
and
dec
int
aam
bound
movsb
lods
nop
inc
mov
push
scas
sub
imul
push
pop
cmpsl
rclb
jecxz
fdivrl
mov
sbb
sahf
into
push
enter
mov
mov
cmp
push
in
in
cwtl
cmp
adc
push
xor
hlt
push
xchg
lock
mov
popa
aas
das
lahf
stos
push
jae
pop
push
inc
shrl
iret
jmp
das
seta
adc
dec
and
jbe
adc
jns
sbb
arpl
outsb
jo
cmp
mov
mov
fdivrl
or
mov
inc
sub
xchg
out
je
jnp
xchg
sub
jbe
adc
shl
jl
idivl
jmp
xchg
or
add
pop
push
in
pusha
pop
int
lods
sub
or
xchg
and
mov
and
sbb
mov
push
pop
mov
arpl
jl
xchg
shlb
shlb
jns
xor
dec
js
and
inc
and
es
inc
int
add
or
push
jle
cli
mov
cmp
inc
mov
push
push
pop
shlb
insl
and
arpl
or
push
add
adc
sub
fs
xor
in
cltd
jns
ss
sbb
and
addl
and
sbb
or
sub
ss
arpl
ja
stos
daa
es
aas
pop
aad
sbb
xchg
push
and
cs
movsb
aaa
shll
popa
cmp
push
jno
inc
ja
or
dec
shr
lds
insb
inc
test
push
inc
mov
out
into
orl
jmp
mov
test
jb
push
test
push
mov
cmpl
fs
aaa
cli
gs
popa
xchg
inc
ds
cli
movsl
sub
xlat
test
cmpb
xchg
jns
xor
sub
inc
daa
jnp
push
ret
adc
lcall
jmp
mov
or
dec
jl
gs
xchg
and
idiv
pop
movsl
mov
mull
scas
mov
push
pop
sub
adcl
add
outsb
xor
popf
push
stos
iret
mov
cmp
cmpl
inc
sahf
jbe
jmp
movsl
out
dec
sbb
jo
dec
dec
add
and
adc
fidivs
shr
je
cltd
pop
pop
mov
into
lea
jmp
loop
inc
scas
iret
cmp
mov
jno
dec
mov
in
mov
and
cmp
pop
sbb
adc
dec
shll
cmpsl
movsb
or
push
dec
jle
pushf
pop
ds
cld
inc
mov
and
sub
pop
imul
ljmp
lret
scas
inc
test
scas
jl
mov
lret
jne
push
dec
cmpsb
cmp
insl
test
mov
cmp
int3
sub
and
iret
fnstsw
xchg
xor
cli
jae
sbb
hlt
leave
dec
dec
jno
decl
jb
dec
ljmp
dec
clc
stc
loopne
adc
adc
xor
jb
sbb
cs
sbb
push
or
out
mov
mov
imul
mov
test
dec
mov
sbb
xchg
leave
pop
int3
jle
mov
mov
iret
cmp
rolb
jb
xchg
subb
lret
test
or
or
xchg
les
sbb
enter
stc
dec
lret
push
mov
ficompl
xor
pusha
and
sbb
sbb
jnp
pop
push
test
adc
push
push
iret
aaa
jmp
inc
xchg
push
pop
inc
mov
std
leave
xchg
aam
mov
ljmp
push
mov
jg
adc
imul
xor
mulb
cld
movsl
xchg
icebp
fs
lret
orb
in
aas
pushf
imul
out
push
sub
mov
das
movsb
call
icebp
rorl
inc
addb
fnstsw
push
or
leave
data16
xchg
call
sbb
dec
mov
hlt
mov
xor
loopne
push
inc
push
dec
dec
add
mov
sbb
cli
adc
sti
sbb
mov
push
and
insl
adc
xor
mov
push
lds
inc
add
cmp
mov
push
sti
pop
in
and
cmpsl
in
xor
les
mov
mov
mov
fldl
rclb
sub
inc
movsl
jae
fmull
lret
mov
fwait
jge
scas
mov
or
cld
or
adc
jmp
jae
scas
es
mov
adc
dec
mov
cmp
cmpb
mov
out
or
jl
shl
jb
mov
out
add
mov
test
dec
mov
rcrb
xor
shld
adc
lcall
outsl
sti
jnp
sub
lcall
aas
jle
sub
ret
jg
sbb
jl
or
leave
mov
outsl
adc
sbb
adc
mov
rcr
dec
outsb
ror
xor
adc
and
jnp
push
and
xchg
mov
cmp
ret
aam
mov
pop
jecxz
add
fwait
iret
scas
andb
mov
adc
add
inc
cmp
shlb
repnz
mov
cmp
jnp,pn
mov
lcall
pop
add
mov
dec
pop
push
call
jae
lret
lret
in
mov
push
in
aad
and
dec
js
js
adc
aam
mov
xor
icebp
in
in
cmp
xchg
je
xchg
mov
jns
mov
push
mov
aad
jno
mov
cwtl
xchg
adc
cwtl
cld
pop
jno
pop
lea
movsb
lret
and
call
test
push
dec
and
out
call
inc
movsb
cmp
push
and
sbb
mov
fdivl
arpl
movsl
lds
mov
push
psadbw
cltd
jne
pop
imul
cmc
mov
shrb
pop
cmp
faddl
inc
nop
or
mov
test
pop
jge
mov
cmp
ljmp
add
and
pop
mov
jmp
fstpt
sub
call
mov
xchg
or
int3
mov
mov
mov
call
push
fdivp
ret
int3
pop
ss
lods
mov
fisubrl
or
cmp
lock
pop
data16
sub
xchg
xchg
popa
jmp
mov
cs
aas
and
cmp
jmp
dec
cmp
imul
and
ja
mov
pop
imul
mov
cmpb
sbb
sbb
inc
xchg
adc
aam
es
cs
push
enter
cltd
in
xchg
or
lcall
xor
ljmp
jge
dec
inc
push
mov
dec
cmp
mov
movsl
sbb
std
lahf
mov
jle
in
aad
int3
es
push
dec
mov
xchg
pop
jae
mov
call
lds
ljmp
movsl
mov
inc
pop
mov
loopne
shrl
jl
xor
je
push
or
push
mov
push
ret
pop
push
sbb
lret
pop
xchg
sub
arpl
inc
movl
pop
cmp
fisubrs
jle
insl
sbb
push
dec
push
dec
ds
lods
out
fwait
add
pop
shrl
cmp
cli
xor
or
sub
in
addb
mov
push
xor
mov
push
push
andl
out
shlb
addr16
dec
or
lea
sbb
mov
setns
and
jle
arpl
pusha
mov
add
push
aam
hlt
pusha
lock
cmc
stos
xchg
jmp
add
popa
sbb
xchg
out
push
pop
test
xchg
push
xlat
test
jb
clc
out
jecxz
int3
gs
js
lret
add
mov
out
out
test
orl
cmpsl
add
ja
jo
xor
sub
sub
xchg
jg
mov
mov
loopne
jae
pushl
nop
mov
mov
adc
inc
lea
pusha
lret
inc
lds
out
movsl
jecxz
and
push
xor
mov
jg
jbe
lea
push
lock
out
fisubrs
mov
movsl
jns
dec
cltd
repnz
push
jo
add
push
ds
pop
or
jo
cli
inc
ja
pop
inc
mov
dec
mov
adc
xchg
mov
add
outsb
in
subl
xchg
pop
int3
lahf
nop
inc
in
loopne
inc
in
xchg
mov
jp
mov
jbe
inc
cld
pusha
pop
in
mov
xor
mov
sti
pop
aam
or
jo
pop
jo
xchg
sub
into
adc
cli
dec
mov
pop
outsl
ss
sbb
movsb
inc
sbb
mov
inc
inc
push
fwait
ret
or
daa
insb
mov
sub
adc
mov
lahf
jns
enter
xchg
test
rorl
ret
jp
adc
rcrb
pop
or
dec
out
jb
test
fcomi
int3
jnp
add
cmp
les
jns
and
and
imul
add
adc
fnstsw
pop
inc
mov
dec
and
sbb
and
jmp
in
and
out
or
scas
imul
loop
in
stc
popa
push
mov
inc
sbb
add
les
sub
das
mov
sbb
pusha
test
in
push
outsb
les
xorl
cmp
cmp
dec
push
push
inc
std
inc
dec
std
ljmp
aas
stos
insb
notb
inc
lds
cmp
or
jae
sub
sub
adc
das
fwait
xor
push
jp
pop
iret
pusha
filds
out
test
push
or
test
mov
icebp
scas
sahf
add
lock
stos
cmp
and
adc
mov
out
inc
daa
or
and
inc
mov
movsb
icebp
pop
and
mov
push
xor
in
insb
mov
xchg
mov
mov
mov
outsb
scas
outsb
mov
mov
xchg
push
repz
int3
xchg
inc
cli
jmp
out
test
pop
clc
hlt
pop
nop
es
hlt
fsubs
dec
jg
add
and
xor
pusha
cmp
xchg
push
cmp
xchg
out
push
ret
lock
insl
out
enter
inc
push
je
mov
scas
mov
xor
mov
cli
add
nop
rclb
scas
mov
push
test
cltd
pop
inc
xor
arpl
push
leave
xor
adc
in
daa
cs
cmp
push
fnstcw
pop
inc
dec
in
cmpsb
and
push
cmp
and
mov
iret
push
jp
enter
and
movsb
lods
ja
in
lods
fstpl
stc
js
fldcw
jge
mov
in
imul
into
popl
test
sahf
pop
push
test
outsb
fwait
popa
cmpsb
cmc
ja
add
out
lcall
lds
pop
sub
aaa
pop
cs
stos
aad
imul
cmp
inc
bound
inc
xchg
mov
dec
mov
cmc
fidivl
in
xor
mov
ljmp
dec
pop
or
in
ja
pop
test
fisubl
test
and
mov
jg
loop
icebp
or
aas
mov
push
push
repz
xchg
jecxz
mov
dec
add
ds
fldcw
in
setns
dec
cmp
jne
xchg
mov
cmp
push
int
dec
fmul
ja
cmp
pop
jle
leave
xor
cmp
mulb
and
push
and
jge
or
xor
dec
mov
outsl
mov
mov
mov
xchg
push
sub
add
mov
mov
popa
mov
sub
subb
dec
sub
arpl
fnsave
out
push
pusha
cmc
fistpl
cmp
out
add
mov
mov
adc
mov
testb
inc
in
cmp
sbb
nop
in
push
movsb
outsb
push
and
fs
sub
leave
mov
cmp
sub
xchg
mov
xlat
aam
nop
cltd
rcll
iret
jecxz
sub
mov
or
dec
stos
popa
mov
adc
sub
icebp
test
cmp
and
sub
or
leave
lods
inc
cwtl
xchg
ret
push
int3
mov
insb
out
mov
lret
ds
int3
ljmp
lret
gs
mov
sub
pop
addl
adc
pop
adc
xchg
shll
jle
and
std
gs
icebp
je
inc
fs
push
and
sub
sub
scas
jne
or
inc
repnz
mov
jge
cltd
and
inc
repz
in
lea
and
in
dec
lea
call
lret
mulb
cmp
insl
out
fwait
mov
cmovs
or
mov
mov
int3
aam
push
ret
jg
or
sub
or
cmp
std
mov
jno
xchg
rol
aaa
sbb
mov
add
sub
adc
ljmp
jno
jecxz
inc
jb
ja
mov
mov
cwtl
das
mov
jge
aad
or
shll
ret
mov
pop
xchg
mov
pop
mov
cmp
mov
jo
fidivrl
xor
mov
mov
addr16
push
out
aad
popa
xlat
dec
decb
cmp
int
mov
sbb
je
xor
dec
jecxz
test
dec
sub
clc
dec
jbe
push
ja
fistl
in
add
aam
mov
loop
mov
sub
test
or
or
ret
dec
cmp
fildl
subl
jecxz
fwait
push
std
movsl
xchg
ret
jns
dec
mov
lcall
imul
xchg
push
adc
ret
cltd
fcoms
out
xor
cmp
mov
imul
addr16
test
xchg
lahf
sti
ss
xchg
fisubrs
dec
ss
push
mov
adc
sahf
outsl
jle
xchg
es
push
dec
sti
in
push
adc
dec
stos
cmp
mov
jg
mov
and
ret
das
pusha
fcmovnb
or
mov
xchg
ret
rclb
addb
jo
in
out
andl
jge
fwait
call
mov
out
mov
cld
leave
jge
outsl
dec
lock
loopne
ret
mov
lret
ja
test
lahf
movsb
int3
pop
lods
cmp
stc
hlt
adc
dec
push
outsl
lahf
testb
mov
stos
mov
lods
neg
add
push
xchg
xor
aam
pop
adc
adc
movsb
incb
es
xchg
test
push
jge
dec
mov
mov
adc
add
das
xor
data16
lcall
ja
lods
xchg
mov
cld
orl
cmpsl
sub
gs
pop
dec
mov
inc
mov
lea
mov
mov
pop
cmp
add
fstpl
mov
repnz
sbb
pop
lods
cltd
out
scas
call
xchg
push
daa
sub
push
mov
jne
pop
mov
mov
outsb
fiaddl
cmp
ss
pop
and
rclb
dec
mov
loope
and
outsl
icebp
mov
std
scas
and
int3
and
and
fs
mov
daa
push
rorb
push
adc
cmp
or
inc
or
lret
pop
adc
bound
push
iret
jno
xlat
lcall
sbb
clc
push
adc
push
push
int
adc
adc
sbb
dec
pop
repz
cmpsb
es
add
adc
push
pop
in
pushf
stc
test
pop
test
ds
shlb
mov
stc
push
xlat
add
sbb
fildl
shl
bound
adc
das
aaa
lods
shll
sbb
rorl
sti
call
mov
scas
imul
pop
xchg
mov
repnz
xchg
mov
arpl
decl
jmp
mov
dec
adc
xchg
inc
fcmovbe
movsl
shrl
aaa
cwtl
push
jecxz
enter
pop
push
mov
xchg
arpl
cmp
shl
in
adcl
sub
lods
pop
mov
xor
mov
and
movsb
xchg
mov
gs
jnp
adc
movsl
lods
and
xbegin
je
das
not
gs
cmpsb
jecxz
add
xchg
xor
sub
xor
cmp
fs
cmc
inc
mov
addr16
ret
daa
rolb
push
pop
cld
cli
or
jae
pop
pop
mov
xchg
andl
ret
or
xchg
rcr
insb
movsl
rcr
rcrb
cmp
outsl
fistps
fcmovne
cmc
dec
pop
shl
repz
mov
cli
inc
lcall
sahf
int
inc
pop
adc
mov
adc
cmp
adc
add
repz
cmp
sub
xchg
inc
aas
and
jae
test
je
aad
stc
out
int3
pop
adc
or
outsl
cmpsb
cmp
int3
test
jae
or
jmp
lock
sub
sbb
in
adc
loop
dec
stos
das
mov
out
cmp
add
mov
mov
data16
in
xor
jg
mov
jno
scas
push
jmp
fisttps
jae
sub
pop
mov
outsl
jge
mov
xchg
mov
test
mov
enter
adc
lcall
ret
dec
jnp
ljmp
test
jmp
mov
mov
push
aas
jle
inc
pop
or
push
iret
bound
add
loope
jge
aam
inc
inc
or
sub
sti
xlat
gs
bound
xchg
mov
int
sbb
popa
rcrb
sub
sub
leave
cli
cmp
jl
inc
lret
inc
adc
sub
inc
add
xchg
insb
mov
aaa
pop
mov
cmpb
fcmovbe
push
sub
push
int3
and
dec
dec
jbe
sbb
mov
xor
addr16
push
imul
jg
and
sub
or
es
ret
mov
cwtl
mov
outsb
lods
xchg
or
mov
test
int3
jbe
lea
jae
push
pop
ficoms
std
mov
pop
mov
std
dec
sub
dec
imul
mov
dec
adc
sti
xchg
or
fnstcw
mov
mov
fsubrs
push
adc
inc
jecxz
mov
and
xorl
fld
lahf
hlt
arpl
mov
nop
adc
or
adc
mov
push
xchg
jo
and
or
fs
pop
loopne
insl
test
sahf
sbb
xchg
shlb
push
sti
js
stos
std
push
sub
mov
shl
inc
sub
imul
test
into
fstl
pop
bound
adc
push
movsb
and
bound
or
pop
cld
xor
jl
fcomp
addb
pushf
adc
mov
add
das
hlt
out
ret
in
int3
lock
xchg
fsub
cmp
add
mov
fadd
xor
sub
jb
je
push
les
mov
cmc
jg
jge
outsb
or
push
mov
rcrl
mov
pop
and
cmp
lds
imul
sbb
sub
push
in
add
ja
sub
test
nop
xchg
or
leave
inc
daa
jbe
pop
mov
push
jbe
push
ret
aad
sarl
pushf
ret
add
daa
sub
notb
in
jae
scas
push
adc
arpl
adc
movsb
clc
mov
sub
addr16
xchg
decb
dec
ror
lods
repnz
or
inc
pop
cli
push
dec
push
sbb
and
sbb
xchg
incb
cmpb
xor
inc
pop
dec
or
scas
dec
imul
test
jl
sbb
cmpsb
jbe
inc
push
and
inc
push
jge
sbb
sbb
and
pop
enter
loopne
mov
adc
pusha
cmpsb
aaa
pop
int3
sub
fcoml
ret
jbe,pn
sbb
fsub
repz
mov
lahf
div
std
inc
pushf
adc
mov
repnz
pop
ja
jno
es
cmp
dec
xor
adc
mov
mov
xchg
icebp
shrl
hlt
fcom
mov
je
push
sub
movsl
xor
push
cmp
add
jmp
in
aad
fsts
mov
cmpsb
repz
push
outsl
ja
jmp
add
adc
sbb
push
cmp
nop
push
adc
sbb
sub
ljmp
sub
xor
out
mov
dec
mov
mov
icebp
in
and
sbbb
insb
pushf
dec
movsl
jbe
push
insb
xor
jmp
xchg
test
mov
adc
sti
pushf
sbb
mov
insb
call
push
ljmp
push
sbb
sub
sub
and
imul
fwait
push
jo
mov
repz
clc
in
jmp
lahf
xchg
xchg
mov
and
adc
or
dec
mov
xor
ret
pop
shlb
decb
out
pop
cmpsb
mov
mov
ljmp
and
stc
test
mov
movsl
jmp
xor
or
inc
adc
and
xchg
clc
cmp
sub
or
adc
jb
es
sbb
movsb
push
push
pop
mov
test
call
xchg
jns
aas
lds
mov
cmp
cwtl
adc
pop
xchg
dec
jns
test
lods
addr16
sub
ds
psubq
fmul
orl
mov
outsb
loopne
jno
cmp
inc
mov
in
mov
mov
movsl
or
cmp
cmpsb
ret
mov
add
je
test
inc
fidivrs
popf
sub
sbb
in
adc
ja
mov
sub
mov
lods
add
icebp
mov
push
pop
cmp
lds
sarl
int3
push
lods
fsubs
les
int3
push
loop
sbb
dec
inc
insb
jle
fistpll
adc
xor
shll
fldl
shll
aad
and
pop
inc
pushf
dec
mov
and
pop
lods
jl
dec
jae
gs
daa
daa
mov
dec
push
imul
jp
cld
in
mov
cltd
mov
jae
add
cmp
cltd
pop
pop
jne
and
push
fdivl
out
fst
into
into
rorb
xchg
movsb
push
push
sub
aaa
pop
in
js
cld
mov
loop
pusha
repz
roll
adc
out
cmp
les
mov
je
out
sbb
aaa
add
jle
xorl
xor
and
jmp
add
mov
rcll
add
cmp
xchg
fwait
arpl
das
ja
and
sbb
repz
pop
inc
mov
sarb
adc
outsl
repnz
cld
stos
push
int
mov
xchg
cli
xor
test
jg
mov
shrl
aas
aas
inc
add
dec
sub
xchg
sbb
jns
cmp
push
mov
mov
push
out
add
repnz
push
sub
mov
jb
xor
in
test
fbld
inc
cmc
push
cmpsb
jl
aaa
addr16
aad
fdivrs
mov
jge
sub
roll
les
xchg
sahf
faddl
arpl
pop
iret
sub
dec
adc
and
and
push
pop
rcll
sbb
bnd
jmp
shrl
cmpsb
dec
in
push
adcl
xlat
ficoms
cmp
and
lock
pop
xchg
sub
push
jae
repz
loopne
pop
xlat
cmp
pop
sbb
cld
bound
and
or
sbb
out
xorl
popf
mov
xchg
cld
push
test
sbb
int3
outsl
add
jle
into
mov
add
in
adc
mov
out
leave
popf
sbb
sbb
push
fsub
test
xchg
or
sbb
les
inc
dec
mov
jb
and
xchg
sarl
dec
fcoml
add
lods
cmp
inc
cmp
add
aas
cmp
loope
ficoml
inc
arpl
fistps
sbbb
loopne
push
mov
dec
icebp
add
data16
scas
xchg
out
sbb
setg
jg
cmpsb
or
push
dec
leavew
push
inc
or
movb
or
xchg
add
and
jne
cmpl
frstor
sub
and
pop
cmp
xorb
inc
sti
push
js
and
jle
hlt
cmpsl
imul
adc
pop
inc
mov
mov
xlat
sub
push
stos
xchg
pop
pop
addr16
shrl
decb
pop
es
or
loopne
sbb
push
sub
dec
aaa
lock
pop
iret
xchg
cmpsl
lods
rorl
push
sub
leave
shl
jbe
int3
ret
cs
pop
mov
inc
sub
pop
in
pop
xchg
dec
lahf
ja
dec
and
fistpl
mov
aad
test
das
jnp
xchg
cmp
and
in
add
loope
leave
out
and
adc
cmp
popf
pusha
getsec
std
fistl
xchg
xchg
call
das
jo
push
and
aad
insl
negl
add
mulb
and
push
je
add
popf
ljmp
inc
imul
add
mov
mov
call
mov
movsl
lret
in
add
rolb
and
cmc
sti
mov
dec
stc
mov
add
mov
into
inc
in
subb
jl
inc
and
das
jecxz
repz
mov
lret
and
push
or
mov
shrb
lret
imul
pop
fsubrp
loop
mov
xchg
subl
xchg
mov
mov
cmp
xor
shll
jnp
xchg
cltd
std
add
pop
inc
pop
or
pop
scas
int3
pop
aam
pop
mov
mov
jecxz
jnp
call
pop
call
mov
movmskps
stos
sub
cld
stos
ja
mov
jae
movsl
and
addl
push
dec
pop
sbb
pop
scas
push
lcall
jb
ja
fnsave
loope
cs
sub
and
xchg
jns
or
or
jl
cmp
in
or
jl
adc
dec
mov
incb
sub
xchg
inc
xor
popf
ss
inc
shlb
cmc
jnp
dec
mov
add
inc
inc
inc
call
and
pushf
aad
adc
mov
mov
cli
jg
or
adc
std
js
in
or
xor
pop
push
mov
jle
incl
xor
jb
cli
and
test
sub
adc
mov
fwait
xor
push
rcr
mov
xlat
mov
cmpsb
inc
jg
nop
xor
sbbl
cli
stos
and
int
jb
and
adc
nop
loop
shrb
int3
push
adc
lret
xchg
add
add
sbb
mov
xchg
je
rorl
addr16
mov
sub
mov
loopnew
cmp
repz
sahf
fs
dec
pop
push
jp
lock
sub
mov
jle
sarb
inc
sahf
push
sbb
orb
mov
xchg
test
inc
and
enter
inc
pop
xor
xchg
and
popf
mov
jp
sbb
or
pop
insb
add
add
inc
push
push
or
dec
xor
rol
pop
cmc
adc
pop
ss
dec
ds
test
add
pushf
push
or
and
mov
cmc
add
fcompl
add
cmp
mov
xchg
push
xchg
loop
daa
mov
mov
push
sbb
adc
fwait
popa
inc
aaa
sub
ja
mov
cwtl
negb
or
fistl
subb
mov
mov
fsts
loopne
adc
inc
cmp
pop
cmc
jmp
imull
inc
hlt
jne
fimuls
sbb
xchg
scas
dec
push
dec
cmp
mov
pop
invlpg
div
fs
das
pop
scas
inc
xor
xchg
stos
cld
add
inc
mov
jmp
fcomps
cmpsl
add
pusha
jmp
pop
adcb
push
mov
pop
hlt
mov
dec
sub
jge
test
jg
pop
loopne
dec
xchg
aad
cld
inc
movsb
leave
push
mov
ret
jno
or
jmp
sub
dec
aaa
aad
repnz
aam
jnp
vpmacsww
cs
and
outsb
sbb
pop
mov
push
stos
mov
or
in
mov
clc
scas
jge
dec
and
fisubrs
cwtl
je
push
out
mov
je
out
jl
and
into
jg
dec
sub
js
aaa
push
jnp
xor
inc
jge
inc
mov
and
in
clc
jno
jge
jle
cmp
and
cmp
fs
mov
addr16
xchg
push
fidivrs
xor
js
arpl
mov
add
sbbl
xor
pusha
cwtl
xchg
ret
cmp
mov
incl
loope
mov
lods
cmp
lahf
imul
jle
xchg
movsb
in
loop
xchg
sbb
add
scas
out
add
or
aam
sub
xchg
or
jmp
adc
lea
xor
cmp
xchg
fwait
mov
xor
adc
cmp
xchg
fmuls
adc
fcompl
lods
jl
shr
roll
cmp
cld
jno
sbbl
scas
sub
cmp
mov
and
xchg
mov
push
mov
loop
in
mov
cmp
stc
or
or
adc
pop
insl
adc
scas
scas
jnp
jecxz
dec
mov
clc
adc
jnp
jno
aam
sbb
inc
lahf
mov
inc
insl
jbe
add
and
mov
push
in
dec
cmp
sbb
add
mov
sub
in
mov
xor
jle
sbb
pop
cmp
adc
cmp
loop
movsl
xchg
xchg
xor
loope
mov
nop
repz
lock
fists
push
cmp
xchg
cld
or
xchg
mov
lret
inc
mov
scas
mov
push
nop
sub
mov
daa
lock
cmp
cmp
and
lds
sbb
cs
cs
out
popf
je
inc
mov
fisttpll
or
lret
nop
xor
jo
rorl
pop
mov
push
pop
mov
in
xor
push
mov
lldt
ljmp
out
pop
jmp
pop
arpl
std
stc
lds
dec
push
dec
mov
sub
xor
or
pop
ret
ljmp
daa
mov
dec
sti
in
popf
pop
or
hlt
sub
outsl
decb
test
or
clc
ret
or
add
and
mov
pop
mov
repnz
mov
aam
stos
dec
std
cmpsb
in
push
js
or
lcall
arpl
adc
jno
mov
out
cltd
cmp
test
adc
sub
mov
add
hlt
inc
and
or
and
popa
mov
pop
les
and
pop
ljmp
mov
aas
jmp
adc
negb
aam
testl
pop
xchg
xor
mov
lret
pop
jae
mov
roll
jno
jecxz
push
pop
xchg
pop
stos
outsl
cld
loopne
inc
pushf
mov
mov
aaa
fnstcw
push
jecxz
add
push
sti
dec
dec
or
push
jnp
aam
test
ds
cmp
or
cmp
or
add
pop
push
aam
rcr
adc
dec
pop
sub
sahf
aaa
test
jp
insb
popf
inc
cmpsb
sub
add
mov
xchg
repnz
inc
ret
pop
loop
push
pop
cwtl
cmp
sbb
lcall
pop
leave
xchg
inc
cld
sub
test
les
andb
jp
and
bound
pop
insl
mov
arpl
sub
hlt
shlb
and
std
imul
push
jp
and
xchg
push
ljmp
mov
stos
andl
mov
sahf
adc
in
cld
cmp
push
mov
fcmovnu
ret
jb
mov
pop
movsb
movsl
mov
in
pusha
pusha
add
sarl
dec
shlb
xchg
es
rcl
xchg
call
mov
loop
xchg
and
cmc
mov
fstpl
mov
daa
out
lret
cmp
mov
or
test
test
stc
push
and
ret
or
sbb
lods
cwtl
cmovae
push
mov
subl
bound
sbb
dec
mov
jae
mov
cmp
mov
xor
lcall
xchg
aas
jae
les
inc
test
cmp
mov
repnz
movsl
mov
fbstp
mov
leave
mov
andl
or
cmp
ja
out
sbb
in
cmp
cltd
lock
cmpsb
dec
mov
jnp
sub
jo
mov
xchg
cmp
mov
mov
fdiv
lahf
pop
mov
cmp
jnp
push
cmp
dec
out
mov
pushl
cld
mov
mov
mov
fldcw
fs
mov
sahf
ss
mov
outsb
scas
xchg
mov
mov
pop
or
sub
shl
mov
ss
int3
add
pop
enter
mov
sahf
mov
xchg
and
std
lret
jp
dec
dec
mov
insb
das
adc
mov
push
sub
out
push
lret
push
shrl
outsb
insl
sti
push
daa
jmp
xor
lods
add
int
pop
lds
out
jl
lcall
add
and
pop
pop
shlb
lods
nop
dec
jne
cmpsl
gs
lret
lock
inc
adc
int3
sub
out
push
sbb
sbb
xchg
cltd
testb
pop
outsb
dec
dec
cmp
xor
push
roll
mov
adc
adc
ds
pop
lods
nop
mov
xor
inc
cs
dec
rcr
xor
push
xor
and
sub
adc
cmc
or
ja
sub
jge
and
scas
jmp
icebp
out
out
imul
or
or
sbb
mov
cmp
push
ljmp
cli
test
sub
adc
inc
insl
mov
cmpsl
mov
in
addb
adc
pop
dec
jb
jg
aas
shll
faddl
popf
add
or
jbe
dec
dec
and
mov
cmp
xchg
stos
das
sub
xor
xor
mov
movsb
out
call
add
adc
mov
xchg
cmp
popf
out
loopne
outsl
jbe
pop
mov
rclb
js
or
sbb
dec
bound
xor
jo
push
sbb
or
push
adc
jmp
pop
adcb
adc
aam
fistl
mov
adc
std
jmp
sbb
cli
inc
xchg
das
lods
lahf
inc
adc
dec
xchg
mov
sbb
mov
sarb
cmpl
inc
mov
outsb
inc
nop
sub
dec
std
stc
push
sbb
sub
cmp
or
lea
popf
pushf
pop
imul
daa
ss
pop
addr16
outsl
fnstsw
mov
negl
mov
jp
out
cld
xor
push
pop
push
outsb
sub
fsubrp
inc
jno
mov
inc
outsl
fmul
push
pop
cltd
and
add
pop
sub
movl
imul
mov
movsb
jne
add
aad
sub
pop
out
dec
popa
pop
xchg
or
mov
jmp
lcall
in
push
shl
ljmp
push
popa
scas
int
sbb
sub
ja
mov
divb
sbbl
inc
xchg
jne
jg
jb
pop
fdivl
xchg
xchg
ficompl
ret
xchg
xlat
insl
sti
adc
adc
or
fwait
in
imul
or
cli
push
icebp
ds
and
push
test
push
enter
sbb
adc
pop
lahf
pop
pop
mov
aas
xchg
inc
push
pop
aaa
add
sbb
cld
mov
pop
test
or
sub
mov
sbb
or
jle
lds
xchg
xchg
inc
sbb
cmp
divl
jecxz
adc
ja
and
ljmp
jg
pop
adc
jge
das
sub
jle
fstp
rcll
xor
push
out
adc
mov
sbb
adc
sub
nop
adc
sbb
out
cmp
enter
push
ljmp
cmp
adc
insl
js
dec
lea
push
cmp
lods
jle
jle
dec
adc
cmp
out
test
xchg
enter
pop
jae
lcall
sub
jl
xchg
xlat
add
xor
scas
inc
pop
aad
mov
jge
jne
mov
addr16
ja
lret
sbb
mov
aas
pop
cmp
rol
add
and
outsb
ret
lret
mov
movsl
xchg
dec
dec
push
sbb
push
imul
or
jb
sbb
adc
pop
or
testl
insb
inc
mov
mov
pop
dec
aam
ljmp
leave
out
inc
gs
mov
mov
insl
arpl
push
aas
xchg
std
mov
xchg
aam
lods
in
mov
pop
xlat
test
xor
xor
or
in
push
lock
jno
pop
mov
shll
mov
lret
mov
or
jmp
mov
xchg
and
sub
repz
pop
enter
jl
mov
mov
mov
push
or
dec
add
out
jb
movsb
xorl
nop
cli
test
jge
add
mov
aad
pushf
fcoms
sbb
lret
lock
cmp
inc
je
inc
test
or
or
jp
fxch
cmpsb
xor
in
pop
sbb
movsl
addl
imul
js
fildll
mov
outsl
bound
fildl
pop
cmpsb
and
inc
mov
aad
shl
push
add
push
ja
cwtl
jecxz
jnp
inc
cmp
or
daa
dec
adc
jmp
push
jbe
xchg
mov
sbb
call
repnz
push
cli
mov
mov
sbb
push
orb
jp
roll
and
ss
bound
psubb
hlt
mov
jnp
xchg
jb
cmp
push
stos
pop
jge
sahf
iret
jae
fstpl
jecxz
lock
pop
dec
jmp
xchg
icebp
add
imul
jbe
cmp
cmp
xor
das
dec
mov
and
fdivl
scas
mov
push
dec
jl
push
enter
in
fbstp
cmp
mov
xor
in
pop
std
incl
jo
xchg
mov
sub
aaa
rcll
jmp
cmp
call
cmp
outsl
sub
fstps
test
mov
cmp
xchg
fidivrl
sbb
lea
mov
mov
div
pop
lret
inc
cltd
xchg
outsb
or
scas
jle
lock
jae
cmc
sbb
icebp
dec
or
jne
movsb
xor
pop
push
notb
roll
sbb
sub
ret
jle
insb
outsb
mov
mov
jae
push
rcr
call
xchg
sbb
jns
mov
push
jo
aas
test
jo
dec
adc
push
enter
jge
jecxz
and
imul
add
aam
cmp
daa
push
cltd
nop
push
fidivl
data16
aad
dec
sbb
xchg
add
sbb
push
pop
in
mov
fldenv
jmp
ljmp
dec
and
icebp
inc
adc
pop
je
xchg
cmpsl
mov
jb
inc
xchg
and
and
loopne
ja
pop
adcl
sbb
loop
scas
adc
push
sbb
popa
mov
sub
lods
ja
inc
xchg
dec
cmp
jecxz
pop
decb
jae
hlt
not
jne
shll
popa
test
imul
mov
test
out
jne
popf
aaa
xchg
push
xchg
cli
ds
jmp
xchg
add
xlat
insl
mov
icebp
ja
and
dec
outsb
out
fld
leave
sbb
cmp
push
or
mov
cmp
inc
mov
mov
cmp
inc
out
and
ds
pop
sbb
dec
in
push
mov
mov
add
ljmp
mov
out
ret
filds
xor
and
xchg
dec
add
icebp
xchg
addr16
test
push
test
lock
aam
int
inc
mov
xchg
ret
push
enter
jne,pt
cmc
adc
mov
mov
sti
popa
bound
jg
push
orb
shlb
sub
loopne
mov
icebp
cmp
xor
in
xor
sbb
adc
cltd
lret
into
js
jnp
ljmp
lods
mov
xchg
jo
sub
lret
cmpsb
ret
lods
and
dec
jno
mov
sahf
lea
jns
dec
ss
sub
inc
addr16
mov
jecxz
dec
sub
xchg
cmc
arpl
enter
and
popf
jbe
outsb
xchg
fdivs
fcompl
daa
ss
sub
stos
sub
pushf
xchg
ret
push
fs
jno
mov
orb
cmp
pop
decl
rcll
push
fistl
repnz
mov
fsubs
inc
addl
shl
cmp
or
pop
inc
jbe
jmp
addb
or
mov
jg
outsl
xchg
xchg
movsb
sbbl
dec
es
es
push
pusha
mov
shrb
lea
icebp
xor
ds
into
sub
xor
in
sete
jge
jo
sahf
and
out
lahf
or
or
inc
in
movsb
fldenv
sub
out
pop
jl
enter
dec
mov
mov
xchg
jae
sub
dec
pop
xchg
pop
orb
mov
test
and
dec
daa
pushl
lahf
add
dec
out
das
cld
lods
movsb
clc
rol
xor
push
xor
out
lods
ljmp
test
dec
push
mov
clc
sbb
jge
dec
sbbl
popf
sbb
inc
cmp
xlat
mov
mov
stc
inc
out
sbb
add
jne
inc
add
aam
mov
daa
dec
std
aad
outsb
pop
ds
ss
mov
shlb
rcrb
mov
rorl
arpl
cmc
rorb
loopne
cmpsb
inc
outsb
mov
or
xchg
xchg
inc
mov
scas
pop
push
leave
ds
pop
das
flds
add
mov
mov
int
arpl
jno
xchg
sub
add
call
xor
es
out
xorl
sbbb
push
inc
mov
add
mov
mov
lods
or
mov
mov
bound
push
mov
test
push
inc
or
cmovl
and
inc
mov
and
xor
cmp
jmp
dec
mov
dec
or
lds
data16
ds
lea
or
xor
inc
inc
push
cmpsl
notl
ret
data16
add
ds
arpl
mov
insb
jns
dec
and
dec
push
cltd
int
jnp
mov
cmc
pusha
addl
fidivrs
push
add
lret
adc
pop
daa
inc
lock
and
pushf
mov
repz
pop
jl
jg
or
popa
pop
rcrb
popf
mov
into
dec
xor
popa
fcom
test
jns
pop
outsb
clc
nop
jecxz
jmp
xchg
add
scas
sbbb
xchg
popl
or
fcoml
enter
cmp
je
and
stc
pop
pusha
rcrl
fdivr
rol
cmp
fwait
mov
sub
addr16
sbbb
sti
push
sub
addr16
xchg
fldenv
cli
aaa
xlat
xchg
pop
sub
les
je
mov
outsb
in
mov
dec
outsb
dec
xchg
jecxz
cmp
fs
insb
push
jo
stos
sub
test
inc
je
out
cs
and
pop
out
add
fisubrl
inc
rcll
gs
ljmp
adc
sub
xorb
sbb
lret
sub
leave
add
icebp
in
bnd
adc
lcall
std
icebp
into
insb
js
data16
xor
jbe
add
inc
insl
xor
stos
xchg
andl
call
jns
rep
pop
xchg
mov
xor
sub
jno
jecxz
or
into
dec
leave
addr16
pop
std
mov
fwait
inc
pop
adc
daa
lods
not
add
into
xor
sub
and
push
xor
adc
pop
pop
shrb
pop
cmpsb
cmp
inc
das
mov
loop
mov
sbb
lods
xchg
ret
cmp
mov
jmp
inc
icebp
push
ja
push
jb
lods
push
jle
das
and
dec
or
pop
lods
repz
add
and
push
aam
in
xor
or
mov
bound
pop
push
punpckhwd
inc
ljmp
ficoml
xor
repz
jle
pop
xor
add
cmp
cmp
enter
or
call
and
stc
cmpsl
mov
adc
mov
sub
addr16
aad
inc
jecxz
jl
dec
lods
push
loop
movsb
jns
adc
cltd
loope
cli
in
int
xor
xorl
add
adc
fcoms
dec
pop
push
sbb
add
push
sub
jo
fucomip
xlat
or
xlat
jmp
aaa
in
test
lahf
imull
aad
pushf
scas
sub
idivb
in
enter
lea
mov
and
fldl
push
ljmp
dec
test
pushf
push
xchg
mov
jae,pt
shlb
sbb
and
sub
xchg
inc
cmpsb
or
jecxz
in
sub
add
and
xchg
cmp
outsb
add
pop
dec
mov
xlat
in
cmp
push
and
ds
out
inc
sbb
fcom
jno
mov
repz
ret
push
std
stc
jb
xchg
jns
pop
jmp
sbb
scas
ud2
adc
cli
sbb
jno
adc
les
iret
cltd
or
xor
xchg
outsl
test
pushf
xchg
or
mov
mov
mov
mov
repnz
xchg
xchg
popl
add
arpl
inc
inc
lock
arpl
or
sbb
les
cmp
pop
sbb
inc
lret
scas
pop
or
test
dec
popf
add
dec
mov
adc
push
xor
inc
dec
xor
mulb
scas
xlat
aam
or
out
std
inc
push
push
fwait
lahf
out
dec
cmp
ds
shlb
test
pusha
mov
shrl
jge
cmc
icebp
cmpl
jmp
xor
sub
test
push
dec
enter
inc
xor
xor
pop
push
shl
or
push
aaa
lea
aam
lret
push
push
in
jge
xlat
xchg
out
lds
inc
xchg
cmc
test
add
sub
test
adc
sub
lcall
je
test
jae
out
mov
pop
push
and
je
bswap
add
adc
in
mov
mov
cmpsb
dec
lret
or
repnz
xor
out
loop
arpl
xor
shrl
jle
mov
lods
push
jmp
mulb
fs
cmpsb
lret
inc
mov
and
push
cmp
xchg
jne
inc
ds
lds
ficompl
xchg
cmpsl
dec
inc
repz
pop
rcll
js
dec
jl
hlt
xchg
or
inc
mov
cld
push
ljmp
pusha
mov
mov
cli
addr16
push
sbb
or
push
call
mov
pop
in
es
and
inc
xchg
inc
fdivr
into
jecxz
xchg
mulb
push
inc
ljmp
cmp
inc
dec
jo
repz
fstl
in
pop
rorb
mov
xchg
add
popf
out
in
leave
sub
pop
mov
xor
sbb
lods
aad
jl
mov
rcr
jnp
xchg
push
push
pop
cmp
cwtl
add
dec
lds
imul
call
jmp
out
pop
push
jbe
add
jae
cld
jmp
hlt
cmp
mov
jb
lahf
pop
ret
sub
in
loopne
movsl
mov
push
lods
test
adc
dec
pop
in
es
jecxz
push
cmp
jmp
nop
inc
mov
out
test
mov
bswap
xor
ds
xlat
arpl
dec
fsubrl
stos
pop
aas
mov
sbb
sbb
lock
and
dec
push
push
arpl
insb
jno
adc
stc
xchg
pop
movl
out
aam
icebp
cmp
std
sbb
in
cmp
cmp
outsl
jge
popa
or
xchg
jmp
mov
into
je
addr16
movsb
stos
fisttpl
scas
pop
pop
ret
ror
orl
fisttpll
je
xchg
cmc
clc
and
fadd
mov
test
lahf
mov
push
cltd
lods
sbb
test
jmp
sti
les
int3
dec
lods
dec
sbbl
push
push
mov
push
test
inc
ljmp
lret
mov
and
dec
push
mov
int
and
in
out
sub
mov
or
inc
xchg
xlat
sub
mov
shll
lahf
bound
int3
jp
inc
iret
andl
jle
add
outsb
lea
cmp
insl
inc
in
push
decb
rcl
jl
lret
pop
loopne
sub
and
xor
mov
dec
out
lahf
push
mov
jle
mov
push
cmp
sub
dec
jne
ret
scas
lcall
pushf
mov
cmc
mov
mov
sbb
imul
mov
lahf
mov
jo
sbb
mov
mov
jo
or
test
mov
lods
out
or
xor
push
lea
or
das
xor
adc
or
int3
add
cmp
aas
xor
xor
pop
mov
pop
shl
mov
test
frstor
or
pop
in
out
roll
scas
xchg
out
pushf
into
pop
dec
je
ret
into
add
lcall
cmpb
aam
test
adc
clc
adc
mov
or
or
test
xor
movsb
pop
rorl
jbe
mov
push
clc
in
mov
pop
scas
mov
mov
or
ret
mov
dec
push
pop
pop
pop
jmp
daa
pushf
adc
shl
lods
mov
leave
mov
fwait
xchg
cli
jl
dec
addr16
cld
sbb
xchg
insb
xor
fildl
insl
sbb
stos
xor
cmc
jmp
fcomps
stos
fisttpll
inc
add
popa
mov
and
popf
arpl
lods
xor
std
push
cmp
hlt
push
and
pushf
stos
sbb
inc
push
sarb
scas
cmpsb
xlat
sub
push
cmp
inc
and
jg
fildl
cmpsl
and
lret
sahf
push
pop
xchg
aam
call
pop
call
dec
push
adc
adc
rcll
jns
push
inc
call
and
sub
fistl
sbb
mov
mov
xor
jp,pt
xlat
es
mov
hlt
push
xor
mov
bound
or
sub
sbb
cltd
cli
mov
ss
movsl
or
icebp
popa
mov
xchg
test
std
sub
xor
das
mov
pop
lcall
cwtl
mov
rorl
sub
nop
cs
lock
mov
inc
dec
pop
xor
fiaddl
mov
enter
adc
fidivl
pushf
mov
xor
jae
adc
inc
adc
lret
fnstenv
fstps
push
or
and
sbbb
pop
and
sub
test
pop
cmp
pop
push
pop
sub
push
mov
xchg
out
inc
push
das
mov
push
rolb
leave
push
add
inc
lahf
test
cmpsb
divl
cmp
pushf
xchg
aad
insl
adc
addb
std
out
mov
inc
insb
xchg
cs
insb
dec
and
int
in
jae
cwtl
xchg
loope
scas
imul
aad
sub
add
movsl
inc
stos
cmc
das
add
or
sub
pop
jo
push
mov
sub
mov
inc
sbb
jns
out
inc
loopne
add
mov
shll
shll
pushf
jmp
mov
mov
dec
adc
cmp
pusha
test
ss
not
jne
jmp
lahf
push
pusha
pop
daa
mov
mov
push
mov
dec
pop
pop
mov
mov
jle
add
push
inc
inc
test
mov
int
stos
roll
ds
jge
xchg
push
shlb
adc
ret
into
rolb
js
sbb
push
fiaddl
mov
jg
and
cld
das
insb
and
pop
or
cmpsb
jnp
in
mov
sub
clc
addr16
push
movsb
fs
cwtl
xchg
add
push
stos
ret
fs
lcall
jmp
push
cmp
or
pushf
cs
pushf
xchg
xor
loope
jbe
jb
test
cmpsl
mov
sbb
mov
push
jp
clc
outsl
les
iret
dec
xor
subl
stos
pop
add
out
xchg
es
call
insl
not
sbb
inc
mov
sbb
mov
push
and
mov
push
pop
nop
outsb
adc
mov
addl
jb
mov
mov
push
and
ds
aaa
loope
std
and
xchg
out
jo
arpl
fcomps
ljmp
add
aas
fmul
and
push
mov
mov
xor
cld
movsb
sub
or
mov
ja
dec
shll
or
popa
sbb
aas
or
jae,pt
mov
jne
lret
inc
dec
sbb
add
testb
mov
dec
jg
dec
outsl
mov
inc
sti
das
imul
lret
sahf
sbb
mov
sbb
arpl
or
in
jp
es
cmpsb
cmp
pop
mov
jmp
pop
pop
aaa
jl
push
cmpsb
mov
aam
jle
mov
arpl
leave
loopne
cmp
ret
in
dec
repz
lds
sti
lret
pushw
loop
jmp
jb
sbb
pop
lret
int
pop
sub
dec
imul
mov
mov
cld
cli
sti
stos
js
stos
xor
fdivp
enter
fnstcw
cltd
mov
jecxz
imul
adcb
and
imul
adc
cli
shll
and
outsb
aaa
int3
push
push
outsb
les
push
movsb
dec
mov
lods
xchg
lea
fs
mov
les
ss
mov
out
sub
mov
pusha
jle
cwtl
or
add
fisubrs
idivl
dec
dec
push
das
or
dec
and
aad
push
movsb
dec
mov
repnz
or
sarl
lds
sub
add
adc
mov
adc
lret
daa
or
in
sbb
push
add
xchg
sub
in
pop
sub
and
inc
pop
lahf
jl
mov
ja
out
jecxz
push
adc
xor
adc
outsl
mov
mov
int
xchg
ja
out
xor
push
in
jl
or
sbb
aas
and
in
out
sarb
jmp
das
nop
std
ret
mov
pushf
inc
sbb
inc
outsl
imull
push
xorl
jge
in
ja
and
mov
cld
popf
ljmp
mov
cwtl
leave
xchg
sbb
jmp
xor
or
mov
jl
push
imul
pusha
jo
andl
out
stos
mov
pop
jns
push
pop
cltd
dec
add
popf
call
rcrb
push
icebp
hlt
lock
das
mov
adc
mov
ror
sub
andb
rolb
dec
jge
dec
jae
fstl
xor
xor
fwait
jp
pop
push
gs
loopne
mov
test
push
inc
gs
aad
std
mov
mov
je
mov
xchg
ljmp
test
in
dec
mov
rorb
sub
pop
or
pop
in
cmp
jnp
or
pushf
and
cmc
in
shrl
xchg
shlb
addb
cs
scas
xchg
mov
fcmovne
mov
jg
out
or
cmp
push
inc
loopne
jg
jnp
and
add
sbb
mov
inc
xchg
or
insb
mov
sub
out
inc
arpl
js
or
out
mov
inc
lret
add
popa
sbb
mov
arpl
leave
out
test
jmp
add
outsb
testb
js
test
sbb
and
notl
lahf
or
xor
cmpl
imul
xchg
orb
jmp
aam
sahf
jp
xor
mov
push
sbb
xchg
mov
aaa
mov
sub
jge
dec
sarl
mov
jnp
or
shlb
mov
xor
mov
dec
fstps
std
or
jne
dec
mov
movsl
or
mov
fdivl
scas
cmp
fadds
outsb
jge
xor
mov
cmp
push
aad
mov
aaa
inc
ja
and
push
cmp
fldcw
sahf
sbb
jo
and
clc
movsl
insb
xchg
sarb
fdivrp
jl
rol
out
je
mov
sarb
jl
sarb
andb
jp
out
jge
jle
pusha
dec
pop
lret
call
fmuls
ret
outsb
dec
mov
rcrl
mulb
sub
pop
pop
int
inc
mov
lods
fsubr
xor
cld
xchg
scas
mov
inc
insb
hlt
in
ss
mov
dec
sbb
jge
icebp
mov
or
insl
push
sub
or
leave
outsl
in
imul
sub
pop
sbb
pop
adc
and
test
inc
mov
leave
stc
mov
xor
icebp
stos
mov
or
movsb
enter
cmp
std
in
cmp
dec
xor
repz
adc
repz
or
adc
lcall
mov
add
push
clc
inc
dec
outsb
subl
xadd
jne,pn
lds
shl
arpl
jns
leave
jno
push
addr16
xor
dec
shll
jne
pop
ret
inc
sbb
repnz
fldcw
iret
rclb
rcrb
outsb
jb
xor
stc
push
push
cmc
mov
ret
mov
bound
cmp
sub
inc
xor
ficoml
mov
ret
or
sub
fdivrp
inc
das
adc
jne
xor
lods
mov
mov
pop
call
mov
add
fldl
xchg
in
sub
fldenv
pop
mov
push
js
scas
jmp
ds
jecxz
pop
loopne
lret
add
das
or
and
inc
pop
cld
clc
in
hlt
enter
pop
out
dec
popf
clc
inc
ja
jg
cmp
push
mov
flds
lock
push
pop
adc
xchg
jmp
inc
lods
mov
icebp
lods
mulb
lahf
mov
fcoms
dec
adc
mul
sbb
push
loopne
cmp
mov
fnstenv
das
pop
adc
pusha
pop
sbb
fwait
add
scas
xor
xlat
sbb
sub
std
dec
push
mov
inc
add
ja
mov
stc
pop
scas
mov
std
mov
jno
test
ret
out
pop
mov
rcrl
notb
fs
lahf
movsl
out
call
shrb
xchg
sub
or
call
mov
rcrl
mov
and
jecxz
inc
xchg
jbe
pop
lods
out
addr16
sbb
jns
daa
lods
xor
cmp
dec
add
sti
mov
sbb
loopne
mov
mov
pop
mov
adc
fcmovb
pop
adc
in
mov
or
jo
repnz
insb
faddp
push
rcll
mov
dec
in
in
inc
adc
jg
repnz
fisubs
out
mov
mov
insb
push
pop
pushf
sub
orb
orb
std
repz
clc
add
pop
movsb
adc
pop
xchg
dec
lock
ror
push
pop
xor
pushf
mulb
cmpsl
adcl
ss
stc
in
sub
or
fcmovbe
dec
stos
repz
inc
aad
pop
repnz
stos
xchg
cmp
xor
cmc
cwtl
testb
push
cmpsb
jne
pop
and
test
aas
daa
popf
inc
out
push
lods
daa
dec
mov
fidivs
add
mov
mov
adc
ss
xor
js
mov
jmp
mov
sarb
push
fs
popf
inc
pop
inc
leave
xlat
push
cmp
stc
ds
mov
sbb
flds
in
cli
into
popa
idivb
fistpl
jge
imul
adc
ds
ja
mov
pop
lcall
push
push
int3
gs
cmpsl
ret
xor
xchg
jecxz
push
mov
and
test
push
ret
movsb
xchg
rcrb
jbe
cld
inc
movsb
push
movsb
icebp
repnz
add
mov
sub
mov
push
popa
or
xchg
movsb
inc
xchg
arpl
jmp
mov
dec
cmc
iret
mov
cmpsb
rolb
mov
push
xlat
das
push
jmp
fsts
xchg
test
in
jae
int
pop
push
cwtl
mov
add
arpl
xchg
int
and
cs
aam
jp
std
mov
lret
shrl
sbb
sbbb
sub
xor
jbe
and
cmp
mov
mov
push
add
loop
ja
sti
xchg
arpl
shl
call
ficoms
pop
mov
inc
push
inc
inc
sbbb
in
xor
mov
pop
jmp
mov
in
push
cmp
dec
dec
fiaddl
sbb
popa
jno
cmp
frstor
stos
xchg
jmp
jns
cmpsb
mov
sarl
daa
scas
cmc
lods
mov
cmp
fsubl
cli
int3
fpatan
fcoms
adc
pop
into
cmpsl
or
pusha
mov
xor
das
jmp
addr16
xor
jmp
inc
scas
into
aas
and
jne
xor
sti
pop
iret
test
mov
or
movsl
aam
in
jge
mov
in
adc
ud1
push
sbb
cmp
test
in
add
sbb
jnp
push
and
sbb
mov
or
fwait
push
iret
clc
mov
aam
push
enter
pop
mov
push
addl
mov
cmp
in
test
jmp
in
stos
and
xchg
sbb
mov
rcrl
or
mov
dec
inc
inc
jb
sbb
clc
lods
push
push
and
xchg
push
test
pop
fsubrl
sub
ljmp
cmpl
pop
mov
popa
mov
pushf
xlat
pop
sbb
jle
sub
pop
push
in
insl
mov
mov
or
mov
fnstenv
jb
mov
je
lods
pop
xor
rol
popf
insl
iret
and
outsb
mov
jge
adcb
xor
cmpsl
inc
pop
int
adc
mov
out
inc
and
lods
aas
fyl2xp1
xchg
dec
fs
inc
or
lret
les
xchg
cmp
xor
xor
xchg
xchg
or
or
repz
stos
pushf
loop
pop
add
scas
inc
sub
fildl
into
push
sub
lret
repnz
push
sub
jbe
out
loopne
rorl
push
pop
add
popa
sbbb
pop
add
sub
cltd
adc
sbb
repnz
aas
aas
xchg
inc
push
xor
imul
pushf
loopne
mov
cmpsb
fists
enter
pop
inc
outsb
lret
lahf
lods
sbb
int
mov
mov
popf
jbe
jle
or
test
mov
outsl
inc
inc
es
rcll
jle
xor
xlat
cld
fidivs
orl
test
or
cmp
sbb
rclb
rolb
filds
ljmp
out
xor
push
out
mov
frstor
mov
scas
cmp
lahf
mov
ss
cwtl
mov
ret
push
push
sub
mov
inc
add
dec
les
fsubl
jne
fsts
sarl
add
sub
xchg
loop
adc
in
xor
into
xchg
add
xlat
cmp
pop
rclb
adc
dec
and
je
xchg
push
jnp
in
stos
std
cmpsl
fst
int
inc
and
cmc
leave
cmpsl
aaa
fldl
ljmp
andb
xor
leave
xchg
sub
into
or
call
push
fadds
or
scas
enter
repnz
rol
sbb
out
pop
inc
mov
add
pop
cmpb
pop
xlat
xor
dec
or
inc
ret
sub
sahf
imul
mov
push
add
int
jmp
lret
scas
adc
icebp
rcl
ljmp
push
outsb
sbb
movups
loop
dec
scas
leave
mov
repnz
and
inc
jnp
and
sub
out
and
mov
popa
mov
mov
fstps
je
sub
iret
pop
les
js
repz
in
movsb
sbb
aaa
sbb
mov
sub
out
nop
inc
xorb
cmp
pop
xchg
mov
call
jge
xor
outsb
and
cmp
fldt
adc
sub
daa
pop
pusha
test
push
repz
jnp
js
and
or
mov
xchg
jo
pop
and
ret
or
fsts
out
pop
inc
pcmpeqb
sbb
mov
dec
mov
outsl
dec
jmp
es
mov
add
cmp
nop
xor
scas
leave
stc
and
cmp
mov
jmp
and
daa
cmpsl
movsb
aad
lea
in
sbb
ret
aad
in
adc
mov
cmc
mov
xor
or
aas
mov
gs
inc
and
jae
mov
or
mov
jae
rorl
pop
inc
mov
std
data16
addr16
mov
rcr
xchg
test
aam
jl
lods
and
jp
addr16
mov
pop
xchg
mov
pusha
lods
sub
xlat
lock
xchg
stos
loope
mov
push
jle
mov
and
mov
repz
push
mov
inc
out
inc
push
out
and
inc
xchg
dec
lcall
mov
stc
mov
fcmovu
iret
xchg
fistps
adc
jmp
push
fs
or
pusha
inc
push
mov
adc
idivb
fisubs
pusha
out
cmp
fnstcw
jns
lock
lret
pop
or
and
push
mov
ret
dec
icebp
outsl
sbb
aas
insb
or
repz
dec
mov
jo
mov
pop
push
cs
test
xchg
outsb
mov
mov
inc
mov
loop
and
scas
and
add
xor
xor
push
aad
shrl
shl
aaa
mov
sbb
test
fdivs
aam
in
add
xor
sbb
shll
std
movl
std
add
repz
out
test
fadds
xor
lods
lock
and
push
and
add
out
dec
push
sbb
movsl
lea
loope
int
addr16
int3
dec
pop
das
lahf
int3
cwtl
sti
lcall
pushf
adc
lcall
aaa
lods
push
fsubrs
add
fs
jecxz
pop
dec
scas
addr16
or
xchg
pop
xchg
mov
jns
mov
in
lcall
sbb
mov
rdmsr
push
push
in
adc
ret
int3
push
cltd
jno
sbb
sub
jnp
inc
mov
mov
lret
fs
js
hlt
out
sub
seto
stos
je
rcrl
cmp
loope
flds
popa
dec
insb
hlt
mov
sti
int
ja
sbb
xor
xchg
cmc
call
repnz
or
pop
mov
movsb
and
mov
daa
mov
cmp
adc
ret
add
push
fldt
lods
sti
movsl
outsb
sbb
mov
jne
enter
in
dec
push
jl
test
lcall
cmp
dec
repz
ret
insb
or
test
rcrl
mov
inc
adc
mov
mov
rclb
jecxz
leave
xor
and
pop
jbe
int3
sbb
mov
ljmp
imul
pop
sbb
push
repnz
sbb
or
mov
inc
iret
adc
test
sbb
incb
lahf
dec
sahf
mov
ljmp
movsb
push
sub
and
mov
or
sub
fwait
popa
stos
pop
adc
and
adc
fidivl
xorl
xor
xchg
out
ljmp
out
ss
jne
sahf
notl
movsb
pop
xchg
push
and
inc
jb
arpl
test
mov
rcrb
jae
add
pusha
adc
pop
fimuls
js
sub
lcall
fsub
loope
out
jo
dec
fistps
cmp
dec
xchg
add
in
inc
push
cmp
lods
adc
rolb
adc
xor
enter
inc
push
daa
nop
movsl
daa
gs
mov
cmp
or
lahf
rol
bound
fwait
pop
sub
jl
adc
xor
push
xor
popl
mov
iret
fxch
sbb
dec
lcall
mov
cmp
or
or
sbb
cmp
or
push
xchg
imul
push
xorb
push
jnp
bnd
push
and
repnz
sub
fwait
jle
inc
imul
clc
push
dec
jmp
test
adc
xchg
push
fwait
loop
ror
inc
or
xchg
rcl
repz
dec
std
dec
push
fildl
sbb
aad
cmp
sub
sbb
andl
jns
xchg
jb
pop
inc
or
pop
cmpsb
or
dec
mov
inc
and
out
adc
mov
insl
jbe
iret
test
jmp
je
ss
in
lret
jp
adc
fdivrl
mov
push
push
pop
lock
mov
sahf
insl
mov
add
imul
jg
in
fisubrl
cmp
xchg
frstor
ds
xor
out
jmp
sahf
es
mov
jo
loope
fisubrs
mov
daa
ret
push
push
sahf
fisttpl
jne
scas
jne
pop
inc
pop
push
iret
push
dec
pop
or
pusha
daa
fsubrs
loope
pop
rorb
sbb
scas
enter
pop
cwtl
xchg
pushf
repz
rorl
shlb
inc
pop
loope
add
jp
jmp
add
xchg
into
pop
push
and
arpl
mov
add
notl
pushf
dec
roll
data16
jbe
je
mov
jno
popa
xor
call
gs
mov
addb
xchg
xchg
rorl
pop
push
push
aas
xchg
push
or
jmp
jno
or
std
xchg
pop
mov
iret
sub
xchg
imul
ss
inc
pop
or
movsl
mov
movsb
psubsb
lods
lods
pop
iret
cmpb
or
pop
lret
add
in
xchg
adc
inc
mov
shll
cs
pop
cmp
das
push
jmp
int
mov
outsl
bound
xor
sar
ret
cltd
shlb
les
mov
fisubl
aad
cmp
xlat
out
dec
xchg
orb
mov
push
lods
mov
mov
cltd
mov
push
inc
shlb
aas
in
pop
push
stc
data16
and
or
out
add
rcrb
jg
or
and
repnz
rcr
jge
sub
xorb
ja
insb
cs
lea
jno
loopne
mov
test
cmp
inc
ret
cli
mov
or
cmp
push
dec
cmp
shrb
rclb
es
dec
orl
stos
mov
repnz
in
imulb
jecxz
push
int
aas
sbb
xchg
mov
outsb
and
dec
jge
sub
add
sbb
adc
adc
pop
xor
mov
lret
aam
inc
addr16
outsl
pop
inc
mov
fwait
mov
repnz
mov
jecxz
fiadds
sbb
cli
lods
loopne
ss
or
inc
dec
fsts
std
mov
pop
insb
lods
call
jnp
das
adc
test
repz
pop
dec
bound
mov
mov
xor
pop
mov
cmpb
test
test
push
and
dec
dec
add
xadd
dec
adc
add
rcr
stos
pop
mov
sub
jg
adc
sbb
and
call
or
pop
je
xchg
xor
xor
sbb
out
xor
addr16
mov
xor
and
pop
int
push
fs
mov
push
sub
aaa
dec
push
jl
push
cli
sub
jne
cmp
sub
or
or
scas
pop
rcll
fimuls
mov
jns
sbb
add
pcmpgtd
test
xor
push
push
adc
push
pop
dec
mov
addr16
xchg
sar
orb
mov
sub
jae
fwait
mov
repnz
dec
jbe
jbe
push
les
inc
dec
sbb
xor
hlt
or
loopne
mov
iret
jmp
xor
psraw
mov
iret
cld
out
mov
popf
pop
inc
lea
repnz
aam
or
loop
jbe
sub
push
std
mov
xor
sub
mov
pop
xchg
jne
push
call
out
mov
inc
aam
sbb
inc
jp
jmp
push
cwtl
pop
add
hlt
cltd
mov
pop
out
cmp
pop
xchg
jbe
test
das
dec
popa
into
xchg
outsb
enter
cmp
loopne
sub
gs
adc
je
dec
push
hlt
ror
mov
cmp
popf
hlt
push
int
stos
movsl
push
sbbb
pop
push
jno
jle
js
cmp
and
std
es
mov
mov
add
pop
mov
and
cmc
jne
mov
push
sti
dec
mov
mov
inc
icebp
fwait
mov
xchg
mov
out
aam
inc
sbb
out
sub
sbb
or
icebp
movsl
xchg
aas
sahf
int
pop
js
xchg
jle
leave
add
je
and
sysret
cld
ss
mov
sbb
fadd
leave
divl
adcl
mov
xor
dec
mov
gs
sub
sub
test
ret
sub
jle
scas
push
es
or
bound
mov
add
data16
adc
or
cwtl
mov
pop
dec
push
stos
arpl
fstpt
push
adc
pop
iret
aaa
daa
aad
es
sbbb
xchg
mov
stos
fs
dec
dec
ffree
mov
test
pushf
xlat
aaa
jecxz
jecxz
or
sti
imul
clc
decb
movb
scas
repnz
ret
mov
clc
lahf
repz
push
clc
int
in
and
bound
mov
sbb
gs
cmpsl
imul
add
ds
je
inc
mov
enter
push
and
insb
push
ds
popa
push
inc
data16
mov
call
cmp
outsb
inc
pop
sti
push
repz
lock
mov
lock
push
inc
mov
stc
cltd
push
mov
dec
dec
pop
push
ja
jns
sbb
lahf
outsl
lods
jnp
ret
dec
or
shl
xlat
dec
cmpsl
xor
push
test
jg
inc
jmp
or
add
lods
mov
loop
call
push
ret
fsubp
daa
loope
fnstcw
mov
cwtl
inc
jne
cwtl
jmp
lret
inc
mov
pop
jl
lcall
inc
mov
sbb
repz
jle
mov
push
insb
pop
popf
pop
dec
f2xm1
lea
loope
or
sbb
mov
rclb
and
loopne
lea
add
xchg
aas
ds
jnp
push
into
fcoml
pop
mov
and
aas
mov
cmc
dec
pushf
jo
rcrb
testb
daa
sarl
ret
cmpb
fsubs
inc
mov
mov
jbe
jno
mov
fisubs
push
adc
sub
xchg
ficoms
mov
mov
mov
pop
arpl
xorl
inc
shlb
pop
add
lods
popf
aad
pop
cld
xchg
mov
xor
inc
repz
cmp
addr16
clc
pop
cld
cld
pop
int3
mov
sub
pop
xchg
xchg
mov
and
mov
xor
pop
enter
jae
inc
cltd
and
mov
xchg
xor
mov
rclb
bound
mov
sub
das
clc
inc
jno
inc
icebp
mov
pop
neg
add
inc
mov
insl
push
test
lods
xchg
adc
cld
int3
fmul
sub
mov
mov
cmp
mov
lret
push
xchg
add
movsl
xchg
lret
mov
insl
xor
mov
and
clc
xchg
cmp
loop
xor
sub
pop
in
dec
jne
lcall
mov
rcl
push
test
scas
mov
fisttpl
dec
add
adc
and
fnstsw
inc
std
in
jae
andl
push
fnop
dec
push
xchg
xchg
and
mov
add
fucomp
xchg
mov
jno
mov
out
sti
add
pop
adc
inc
cmp
inc
aas
fidivrl
in
arpl
jb
cmp
dec
mov
adc
xchg
je
pop
mov
push
sub
gs
sbb
sbb
pop
mov
fs
jno
stos
xchg
shll
insb
xorl
fidivs
inc
fstpt
frstor
bound
pop
mov
and
pop
inc
scas
push
adc
xlat
or
add
hlt
leave
adc
faddl
out
negl
xchg
sbb
stos
adc
rdmsr
negb
loopne
imul
rcrb
ljmp
inc
cmp
test
dec
lods
mov
stc
mov
push
push
notb
into
scas
cmp
es
arpl
fwait
in
das
cmp
add
and
mov
cmp
and
cmpsl
outsb
negb
mov
hlt
cld
jecxz
loopne
xchg
repnz
les
fidivrs
lock
sub
call
sbb
test
sbb
iret
test
cwtl
sbb
mov
push
rcl
cmp
adc
popa
sbb
aam
jb
or
mov
outsl
lods
and
jns
or
hlt
cmp
mov
enter
ss
push
cmp
hlt
iret
xchg
gs
jl
jae
jmp
mov
jl
mov
sub
mov
movsb
dec
pop
pop
mov
fisubrl
mov
in
mov
cli
lahf
sub
or
sbb
pop
push
cmp
rorl
inc
gs
sub
ror
dec
adc
fsubs
sub
in
jo
fistpll
aad
jp
xor
pop
jne
ss
adc
jno
xor
roll
push
mov
fnsave
inc
cmc
popa
movsb
push
ret
add
pop
sbb
leave
sub
adc
ja
enter
and
test
ljmp
dec
lahf
popf
jle
lods
sub
dec
sub
adc
scas
insb
pop
and
je
and
test
test
aad
test
call
loop
cmp
dec
pop
das
or
dec
push
mov
js
push
inc
push
nop
bswap
popa
and
xchg
fsubrs
inc
xchg
mov
xchg
adc
mov
sub
mov
dec
adc
std
outsb
push
push
daa
lods
out
add
mov
movsl
sbb
and
lods
cmc
lods
jmp
lods
adc
xchg
jge
in
pop
rolb
jg
cltd
sahf
dec
pop
out
xchg
test
sbb
xlat
mov
pop
test
mov
push
loopne
imull
cmp
aam
dec
jb
xchg
mov
dec
xchg
lea
sti
adc
dec
loop
jb
pop
xchg
jle
inc
nop
mov
iret
lds
and
rorb
mov
sub
es
ret
mov
mov
mov
pop
push
xchg
add
lds
cwtl
and
ja
fbld
sub
xchg
jp
cmp
pop
jle
xor
push
cwtl
js
cwtl
jp
lds
mov
scas
outsl
clc
xchg
and
xor
mov
pmuludq
cmpsb
cmp
mov
xchg
repnz
je
pop
cmp
xor
in
push
out
outsl
fisttps
fmull
les
push
add
jmp
adc
lret
lea
orb
add
inc
mov
stc
fwait
fwait
std
nop
adc
test
or
mov
lock
imul
fcomps
lret
ror
add
lcall
int
push
cmp
sbb
cmp
jb
test
fldl
popa
sub
sarl
or
cmp
out
inc
outsb
mov
repz
scas
push
test
pop
push
ljmp
or
pusha
xor
xor
pushf
gs
sub
and
test
or
cmc
insb
cmp
inc
xlat
dec
cli
mov
push
call
daa
subb
xor
xor
push
xchg
jns
ljmp
cmpsl
jmp
sub
imul
dec
cld
mov
loopne
xchg
int3
mov
sbb
popf
sub
sahf
pop
imul
xchg
in
mov
into
nop
out
je
lcall
mov
cli
rclb
mov
push
jb
cwtl
cmovbe
jbe
adc
mov
xchg
out
cmp
jle
repz
xchg
mov
fnstsw
out
mov
pop
jnp
xor
arpl
mov
mov
pop
sub
sarb
in
mov
cmp
add
mov
sbb
test
mov
xor
jmp
mov
mov
stos
iret
mov
mov
outsb
dec
ljmp
cmpsl
cmp
loope
int
mov
pusha
sbb
add
js
jmp
imul
add
mov
jg
pop
fcoms
pop
ljmp
push
mov
fmul
pop
jge
mov
daa
movsl
mov
add
pop
or
data16
popf
mov
out
test
ljmp
lea
mov
add
movsb
hlt
push
scas
adc
loope
stos
ds
push
call
cltd
shlb
rolb
es
test
into
lods
mov
dec
scas
fsubrs
cltd
fisttpll
xor
neg
test
push
dec
pop
inc
enter
mov
out
inc
pop
push
inc
mov
in
subb
aaa
push
cmp
fiaddl
rolb
aas
adc
pop
int3
push
adc
cmp
je
adc
mov
out
push
or
stc
test
call
xchg
cmp
sbb
mov
out
jbe
pushf
shrl
rclb
pop
lret
mulb
inc
repnz
add
mov
data16
jp
and
mov
stos
pop
dec
or
mov
adc
imul
mov
lods
xchg
mov
scas
insb
fidivrl
dec
xchg
and
jnp
mov
clc
les
mov
jns
xchg
call
sub
push
and
and
mov
in
sbb
aam
xorl
mov
dec
outsb
push
fmull
mov
push
mov
dec
incb
jo
xor
sub
ret
lahf
mov
cld
add
test
mov
dec
xor
ja
aam
cmpsl
rol
mov
mov
xchg
lea
dec
xor
repz
idivb
cmp
and
dec
mov
xor
es
and
out
push
xlat
addr16
outsl
cmp
cmp
sub
dec
imul
pusha
adc
decl
xchg
lsl
fisubrl
add
pop
popf
adc
xchg
xor
loope
mov
lock
sahf
and
clc
sub
lds
pop
xchg
dec
cmpsl
dec
out
ljmp
fcmovu
out
inc
xor
adc
stc
inc
testl
aas
repz
std
jne
shl
cwtl
call
adc
push
sbb
mov
mov
cli
pop
sbb
pop
jmp
inc
subb
addb
and
xchg
unpckhps
push
ja
ss
ret
sub
repnz
cmpsl
xor
sbb
mov
push
xchg
movsbl
or
inc
testl
cld
in
movb
pop
ljmp
inc
or
or
loop
fmulp
pop
lock
mov
dec
dec
inc
inc
jne
xor
popf
or
add
cmpsb
mov
pop
mov
mov
movsb
add
or
int3
aaa
xchg
inc
ds
movsb
mov
jg
sub
dec
add
test
sub
aaa
xor
adc
sub
pop
xchg
iret
sbb
sbb
cmp
push
or
call
mov
lret
mov
and
push
loopne
imul
in
mov
jmp
xchg
mov
enter
jge
and
pop
cmp
dec
inc
pop
adc
mov
xchg
lret
adc
insb
std
test
sub
and
addl
sub
and
aad
into
andl
jle
push
sti
mov
mov
sub
mov
pop
test
sbb
fwait
shrl
sub
sar
mov
push
loop
shl
push
lret
loop
pop
int
mov
daa
sub
pop
xchg
mov
and
xor
adc
adc
jns
dec
push
mov
mov
lcall
inc
mov
jg
iret
dec
sub
sarl
aad
mov
addr16
movsl
sbb
mov
cmp
mov
mov
lock
cmc
xchg
clc
inc
adc
xchg
adc
push
subb
fimull
arpl
add
add
xchg
mov
push
push
mov
sbb
pop
lds
arpl
clc
push
and
fstpl
xchg
inc
adc
push
inc
jb
dec
add
mov
fbstp
aas
adc
jle
lea
mov
pushf
inc
pop
loopne
shll
or
inc
mov
jmp
push
movsb
pop
jno
xchg
out
inc
lds
bound
test
mov
in
sbb
add
push
mov
rorl
xor
mov
dec
sbb
popf
aas
pop
adcb
gs
out
pop
xor
push
ds
lods
or
mov
in
push
lcall
lods
push
stos
jo
cmc
subl
pop
jae
dec
aad
sahf
xchg
cmp
push
pop
std
sbb
sbb
sub
push
loope
cld
xor
fwait
ss
pop
enter
pop
xchg
add
movsl
add
push
ret
adc
repz
inc
jl
pop
addr16
pop
pop
test
pop
pop
mov
test
xchg
ljmp
dec
jo
shll
push
jbe
cli
or
or
mov
dec
in
jecxz
pop
inc
incb
jl
sbb
leave
xchg
rcr
out
inc
mov
ror
mov
out
or
mov
adc
pop
push
push
cmpsl
cmpsl
mov
adc
ficompl
enter
stos
fs
adc
fdiv
add
jmp
jae
jl
test
push
dec
repz
push
ret
push
outsb
cmp
inc
jle
add
testb
inc
dec
out
mov
mov
shr
sbb
mov
adc
daa
and
mov
jecxz
or
movsb
push
dec
fcoms
push
cli
int3
push
sahf
test
add
daa
inc
push
jae
pop
notb
mov
inc
stos
sub
cmp
cltd
and
jp
adcb
jle
mov
test
lcall
sub
pop
mulb
jmp
mov
sbb
adc
jno
and
add
adc
mov
jmp
add
arpl
or
mov
stc
pop
cmpsl
lret
sbb
cmp
repnz
pop
xor
movsl
push
push
repnz
add
inc
mov
lds
test
adc
jp
xor
cli
add
insb
es
popf
add
movsb
add
iret
in
sahf
les
pushf
inc
push
test
mov
repnz
xor
push
push
lods
mov
outsl
sti
or
cmp
je
mov
das
mov
sbb
int3
data16
nop
jae
iret
in
xchg
sahf
or
out
jno
jne
ss
data16
add
stc
stos
fs
lret
sti
cltd
test
mov
mov
or
in
push
xor
xor
jnp
or
push
push
fldt
clc
scas
leave
cld
push
repz
dec
call
arpl
fwait
sub
cmp
xlat
adc
adc
xor
dec
es
ja
cmovs
push
gs
lahf
loopne
mov
sbb
pop
sub
pop
in
shlb
in
mov
mov
fimuls
pop
dec
jns
int3
sub
mov
test
popf
adc
push
iret
mov
mov
dec
fistps
rcll
push
and
mov
leave
cmp
xchg
adc
bound
jbe
push
fcmovb
mov
and
mov
inc
fnsave
push
and
jae
shlb
mov
push
cmp
jmp
outsl
mov
add
or
xchg
push
push
loop
in
ljmp
mov
je
es
loop
jmp
or
and
test
ret
cmp
test
inc
std
jne
or
ss
jmp
or
fs
jmp
bswap
mov
clc
mov
ljmp
icebp
sbb
add
add
stos
inc
push
aaa
push
push
subb
stc
pop
and
xor
fmul
or
loop
sbb
aaa
push
cmp
jne
inc
fwait
stos
cwtl
mov
dec
jb
das
inc
mov
mov
add
ss
xor
out
lock
sub
and
test
adc
pop
push
mov
jl
arpl
sbb
cmp
mov
ljmp
data16
out
dec
out
iret
sub
jmp
addr16
xor
xor
pop
inc
ret
pop
xor
lods
xor
nop
dec
inc
ja
ficoml
cli
mov
mov
jno
push
lds
fucomip
arpl
aam
xchg
add
mov
mov
int3
out
mov
and
inc
lods
pop
das
jne
out
movsb
imul
icebp
sbbb
mov
in
push
ss
mov
mov
dec
daa
or
nop
push
fidivl
cmpl
pusha
mov
lods
cli
jbe
fiadds
mov
out
add
call
in
xchg
mov
adc
test
push
call
dec
cmpsl
lahf
test
mov
repz
jbe
xor
cmp
and
mov
pop
xchg
adc
mov
ljmp
popf
push
mov
rcrb
cld
int
mov
loopne
fcomi
add
outsb
jnp
jmp
sub
and
stos
push
test
fs
push
repz
call
jno
xor
cwtl
clc
test
data16
sbb
test
push
xorl
scas
mov
xchg
loop
inc
jg
pop
mov
inc
popl
and
or
imul
lret
sbb
aam
mov
jp
popf
push
mov
xchg
int
imul
popf
clc
cmpb
ljmp
cmp
cld
imul
repnz
rcrl
ret
add
nop
andl
jl
xchg
notb
movsb
test
cmpsb
adc
rolb
pop
pop
push
sub
rorl
xchg
or
mov
jbe
jecxz
sbb
push
xor
jle
popa
gs
imul
addr16
add
cli
test
mov
cld
pop
pop
cmp
pop
sbb
jge
fmull
or
hlt
bound
xchg
adc
mov
aaa
cs
and
push
adc
xlat
js
push
adc
bound
xor
cmp
decb
out
xchg
into
pop
insl
es
addr16
jnp
aam
add
pop
data16
sbb
inc
fstp
clc
call
lods
sarb
ret
sbb
jo
mov
std
pushf
and
mov
mov
movsl
js
jl
enter
jge
sub
or
cs
das
xchg
inc
js
fldenv
fsubs
xchg
in
fildl
mov
adc
ret
sti
dec
loop
cmp
sbb
mov
sub
and
inc
in
arpl
pop
call
insl
insb
xor
sahf
dec
mov
pop
lea
inc
inc
fisubrl
sub
mov
cmc
sub
dec
mov
cld
sub
rep
inc
in
push
popa
xchg
inc
mov
test
fisubs
mov
inc
call
imul
aam
add
xlat
inc
xchg
ret
mov
inc
iret
ret
ds
fnstsw
xchg
call
sub
mov
dec
mov
mov
mov
js
pop
sti
fadds
or
rclb
mov
add
cmp
ret
dec
mov
pusha
mov
inc
aas
xlat
sub
es
insb
movsb
or
fwait
insb
lret
stc
jb
outsl
ret
movsl
out
add
xchg
adc
call
cmc
jmp
ret
std
jg
std
inc
mov
mov
lahf
loopne
add
and
adc
nop
push
sub
punpcklbw
pop
jmp
or
bound
shrb
lcall
aam
lods
and
data16
fidivrs
push
inc
pop
pop
and
or
sbb
adc
jmp
xor
xchg
dec
filds
fcomp
mov
or
orb
or
insl
adc
pop
mov
xor
sbbb
call
jmp
shrl
jge
or
lods
cmp
jge
adc
adc
imul
orb
stc
lahf
sub
push
lods
pop
hlt
testb
arpl
test
bound
lods
mov
imul
push
add
pop
pop
or
sbb
sar
scas
cwtl
cld
clc
cwtl
push
and
pop
mov
fisubrs
int
add
cmc
adc
or
incb
or
aad
lds
imul
jge
mov
mov
push
pop
daa
aad
je
pushf
mov
xor
jne
mov
push
mov
int
aas
or
add
fisubs
cmp
repnz
xor
rorl
sub
in
loop
sub
pop
nop
pop
pop
adc
daa
popf
add
or
xor
jae
mov
pop
mov
cwtl
adc
data16
push
addb
ret
adc
mov
jnp
jbe
xchg
cmpsl
add
mov
in
and
pop
xor
imulb
ret
push
lcall
pop
or
test
mov
pop
cltd
sbb
cmpsb
mov
aas
mov
xchg
loopne
adc
mov
je
jg
xchg
sub
adc
rolb
xor
ds
cmp
sbb
xorl
je
cmpsb
jae
xor
pop
mov
shll
rcrl
fidivrs
inc
and
pop
repz
cmp
decb
xchg
and
adc
mov
mov
popl
mov
out
rcll
cmp
sbb
popa
xchg
dec
inc
leave
inc
pop
test
ds
sub
xor
nop
shl
jg
cmp
lahf
pop
in
arpl
push
sub
aam
adc
xor
jne
mov
jge
inc
push
mov
in
arpl
xor
hlt
jmp
call
ficomps
cwtl
and
push
call
adc
rcll
loope
xchg
jne
mov
push
mov
test
ret
call
rolb
sbb
sub
ret
in
cmp
push
lret
pop
pop
clc
jo
rolb
jnp
dec
and
gs
stos
iret
mov
int3
gs
pop
fsubrs
or
arpl
adc
mov
lahf
insb
jle
or
in
mov
inc
aam
cld
mov
xor
test
jmp
in
and
in
or
mov
sbb
fimuls
test
jnp
cmpsl
sahf
xchg
call
jns
fdiv
fdivrs
and
push
cmp
ljmp
xor
ret
pop
out
xor
lds
xlat
pop
sub
bswap
mov
mov
jmp
dec
rolb
out
cmp
negl
push
cld
cmc
or
pop
imul
sbb
inc
mov
cli
sub
fisubrl
mov
in
push
sub
dec
je
in
dec
stos
enter
aad
cmp
cmp
sti
or
das
add
test
cwtl
jnp
fwait
int3
stc
xchg
xchg
hlt
sbb
sub
orb
leave
fiaddl
call
push
out
test
fnstcw
daa
leave
add
jmp
sbb
sub
mov
jbe
loope
test
popa
adc
outsb
das
pop
mov
push
inc
ljmp
repnz
lds
push
mov
push
push
pop
xchg
or
movsl
xor
xor
test
xor
and
mov
dec
xor
inc
ficoml
jno
shr
sub
push
xchg
add
jnp
dec
call
jo
in
adc
sahf
sarl
aad
iret
ja
xlat
and
dec
lret
pop
push
imul
repz
mov
mov
leave
push
mov
pop
insb
adc
movsl
dec
insb
in
sbb
mov
mov
lods
sbb
dec
mov
add
xchg
jne
call
lods
mov
lahf
ret
xchg
fsubs
das
dec
dec
int3
mov
mov
xchg
jge
ret
dec
es
flds
out
pop
and
stc
shlb
pop
ret
shrb
stos
push
mov
clc
dec
test
icebp
push
jg
aas
push
push
push
ret
ret
or
dec
pop
xchg
adc
test
inc
mov
mov
ss
push
mov
lea
push
jp
in
xor
jle
fstpl
pop
ret
push
lods
aad
and
int3
loop
xchg
xlat
jp
pop
mov
or
popf
ja
icebp
add
add
cltd
xor
and
hlt
sub
outsl
inc
cwtl
inc
fcoml
dec
dec
pop
in
sub
ja
insb
sub
mov
mov
add
xchg
js
jl
mov
fwait
xchg
rcr
ja
icebp
cmp
icebp
cli
dec
inc
sbb
ja
test
dec
dec
loope
xchg
inc
and
fmuls
xor
or
scas
and
or
ret
xchg
cld
rol
xor
test
sub
sbb
lock
push
pop
ja
arpl
repz
js
mov
ds
or
inc
out
std
in
jecxz
fcmovnu
jge
pop
aaa
in
ljmp
cmc
ds
je
xor
xlat
adc
fcmovb
ss
mov
jle
mov
xor
arpl
push
xchg
mov
hlt
dec
out
adc
xchg
sub
dec
daa
mov
sub
xlat
sbb
cwtl
xchg
jne
adc
out
xchg
test
das
xchg
push
xlat
push
bnd
fcmove
mov
nop
ds
loopne
jae
in
or
dec
jp
mov
popf
push
sbb
and
sub
aaa
popa
std
sbb
xor
dec
dec
pushf
jbe
in
rol
sub
test
sbb
pop
push
popf
addr16
cmp
incl
js
call
push
sti
adc
popf
or
nop
sub
cmp
fwait
xchg
pop
div
pusha
test
xchg
jp
bound
in
outsl
subl
jo
mov
ss
push
mov
inc
xor
loopne
loopne
push
mov
jns
std
cmp
insb
rcrl
ret
mov
leave
or
or
ss
ret
cltd
bswap
pop
cmpsb
mov
cwtl
insb
push
ljmp
aam
das
mov
fsts
and
mov
fldl
mov
loope
sub
cmp
xor
lock
sti
add
fldt
aaa
mov
out
cmp
inc
jg
cs
ja
sbb
mov
mov
adc
push
mov
jg
jbe
aad
push
cmp
xchg
mov
dec
push
outsb
ja
ja
push
fmuls
push
xchg
xchg
pop
cli
or
shrl
fcomps
mov
stos
dec
jmp
mov
pcmpeqb
call
push
inc
push
cmp
push
pop
xor
in
pop
pushf
or
mov
inc
in
je
in
pcmpeqb
mov
mov
icebp
cwtl
mov
mov
mov
mov
sbb
inc
fmull
jecxz
sahf
push
insb
lods
mov
shll
push
jecxz
inc
inc
fcomps
mov
insl
cmp
sti
enter
adcb
les
mov
pop
or
and
test
test
fmul
pop
fisubrs
xchg
fidivrs
cltd
pop
cmc
call
mov
sbb
pusha
xor
lahf
dec
cmp
push
pop
in
push
cmp
inc
rcr
jo
adc
sub
es
mov
fmul
cmp
jo
insl
dec
pop
sbb
xlat
dec
outsl
movsl
and
aam
sub
cmpsb
ljmp
jae
adc
mov
xchg
movsl
inc
push
sbb
adc
into
repnz
fidivrl
ja
fdivl
iret
mov
scas
add
xchg
jl
gs
mov
popa
ljmp
mov
popa
xchg
fwait
nop
sub
pop
pop
dec
fs
cmp
push
mov
imul
push
insb
arpl
cmpsb
lahf
sub
xor
add
cmpsl
mov
std
std
xor
mov
mov
scas
pop
aam
push
and
cmc
mov
mov
dec
out
cmc
movsl
shlb
xchg
lahf
iret
mov
push
adc
lret
dec
push
popf
enter
inc
es
jnp
xchg
dec
std
stos
xchg
subb
push
mov
dec
sbb
ret
jae
fidivrl
sbb
mov
or
lahf
ds
es
push
cwtl
jg
lds
daa
out
leave
outsb
dec
jle
imul
imul
inc
sahf
pop
stos
outsb
lods
or
daa
fwait
jbe,pt
jg
les
cmp
dec
and
rorl
sbb
cmc
bound
xchg
hlt
xchg
xor
in
sub
mov
and
cmp
mov
inc
stos
xchg
push
add
push
mov
test
in
movsl
cmp
inc
push
mov
add
adc
addl
in
scas
iret
bound
mov
push
int
adc
dec
or
loop
pop
add
xor
jno
pop
or
iret
lock
cmp
or
push
xchg
lret
sub
xchg
fistpl
sbb
sub
cmpsb
inc
mov
cld
lds
mov
push
jb
mov
sub
pop
data16
adc
stc
jno
sbbl
jecxz
lret
in
imul
pop
loop
imul
stc
aaa
js
insb
insl
xchg
mov
jmp
repnz
or
movsb
and
dec
cli
inc
loopne
mov
dec
xor
ja
inc
pop
or
sub
sbb
test
std
pop
into
mov
fdivs
sbbl
mov
repnz
xchg
inc
mov
enter
aad
sti
inc
insl
xchg
dec
dec
or
mov
ss
dec
std
cmp
push
pop
icebp
mov
mov
xor
lret
aad
or
lock
mov
sub
shl
test
dec
shrb
leave
and
cld
aas
bound
ret
cmp
ret
les
rcrb
test
pop
popl
into
les
cmpl
or
ficoml
push
ljmp
call
popf
in
pushf
adcb
jbe
fwait
add
ret
dec
lock
fisubrs
mov
loope
cmp
inc
pushf
mov
inc
stos
ljmp
pop
cmpsl
fwait
add
shlb
mov
push
inc
cmp
jne
mov
stc
and
sub
inc
lods
xor
xchg
in
jno
int
scas
in
dec
sbb
add
and
pop
add
lods
addb
ja
mov
movsl
jge
inc
daa
mov
adc
and
dec
das
jo
rorb
js
xor
aam
jno
daa
scas
mov
sbb
jbe
leave
lcall
mov
or
and
cmp
sub
xchg
jmp
xchg
sbb
sub
scas
inc
mov
xchg
gs
add
inc
in
fisubs
lock
stc
dec
sti
nop
jl
jmp
cmp
jl
into
leave
movups
loope
cmp
dec
dec
sar
test
jl
and
cmp
mov
mov
popa
jl
cmp
mov
xchg
cmp
and
or
pop
cmp
fcmovnu
stos
cmp
shlb
lods
dec
cld
push
or
and
xor
or
ret
leave
stos
pushf
cmpsl
mov
loope
push
push
out
dec
fimull
js
es
lea
ret
adc
shrd
xchg
sahf
cmc
pop
xor
add
in
out
dec
test
sti
cmp
xlat
xchg
xlat
cs
inc
mov
pushf
mov
dec
lock
orb
xor
mov
inc
mov
dec
xchg
cmp
pop
cmpsl
push
xor
xor
adc
fcomps
aad
in
subb
add
scas
dec
sarb
inc
sbb
adc
xchg
gs
fdivrs
outsb
push
mov
cmp
out
mov
xor
sbb
xor
repz
into
xchg
mov
and
js
push
fildl
int3
xor
dec
xor
and
lcall
sti
jecxz
clc
lret
neg
mov
iret
push
shlb
fs
pushf
sub
imul
lock
popa
and
xor
push
idivb
jns
out
push
or
add
jge
andb
sub
push
push
add
insl
jp
mov
jecxz
icebp
mov
into
jae
andl
dec
pop
cmc
inc
lods
cmpsl
push
cmpsl
popa
scas
fwait
mov
mov
orl
push
dec
adc
adc
jp
cmp
jecxz
sbb
pop
test
dec
sahf
inc
outsb
fptan
aad
mov
adc
fwait
pop
test
addl
jne
daa
pop
test
xor
mov
popf
mov
lods
mov
jno
dec
ret
mov
jecxz
stos
lds
mov
cmp
ja
out
mov
dec
xchg
insb
cmp
das
adc
sub
mov
inc
mov
push
xchg
scas
mov
cmpsb
fs
sbb
mov
sub
lods
ret
mov
or
fldt
movl
pop
dec
call
xlat
daa
fsubl
les
insb
aam
pushf
dec
mov
and
xor
sbb
fisubl
daa
jo
lock
and
jge
mov
mov
dec
adc
push
mov
insl
inc
jbe
addr16
imul
mov
xor
jmp
sbb
mov
or
push
sub
mov
rcrb
adc
std
xchg
adc
mul
mov
push
sub
lods
sbb
lods
jns
xchg
lahf
lea
into
jne
lahf
popl
mov
xchg
rcrl
and
mov
sub
fcomps
call
leave
cmpsb
call
aam
mov
or
je
dec
jg
loope
icebp
fcomps
or
lahf
push
or
insl
xor
mov
and
pop
sub
fucomp
add
mov
push
mov
adc
or
icebp
sub
out
test
adc
sarb
ljmp
arpl
push
adc
inc
enter
in
outsl
cltd
aas
ljmp
inc
loopne
mov
push
call
dec
sub
cli
pop
push
cld
lret
pop
into
xlat
inc
or
inc
jbe
mov
es
enter
and
pop
stc
out
mov
scas
test
dec
add
push
cmp
scas
xchg
jne
fs
push
sbb
mov
fs
cwtl
std
inc
mov
test
push
in
lds
movsb
loop
push
sti
adcb
pop
lea
pop
push
inc
jl
outsb
mov
add
int3
pop
xor
pop
enter
or
dec
push
xor
mov
loope
pushf
daa
pop
pop
push
paddusw
or
insl
jle
lcall
sbb
into
xchg
movsb
push
push
sub
std
push
cli
adc
movsb
jnp
inc
push
adc
dec
inc
shrl
sti
fwait
out
out
sbb
inc
pop
insl
or
mov
mov
and
pop
xor
lret
aam
test
or
cmpsb
and
movsl
loop
jg
pop
mov
int3
jmp
add
ss
movsb
xchg
sub
hlt
mov
int3
pushf
outsl
decb
dec
push
adcl
or
jmp
sub
scas
dec
int3
outsl
cltd
sub
addb
fnstcw
or
ja
push
fidivs
test
fwait
into
pop
int3
mov
dec
mov
lods
adc
xorl
xor
pop
gs
dec
dec
sbb
aad
push
add
das
push
insl
xlat
mov
lea
sarl
inc
sbb
shlb
in
dec
insl
mov
popa
stos
rolb
bound
repz
dec
mov
sbb
or
imul
inc
pop
out
mov
mov
mov
cmp
jo
aas
and
push
mov
or
popa
mov
jbe
dec
mov
add
dec
jo
push
jl
pop
les
fmulp
int3
and
in
mov
fdivs
imul
shlb
inc
negl
test
shrd
adc
popf
and
outsl
mov
xor
push
sbb
loop
pop
stc
cwtl
fldl
test
test
out
adc
adc
lret
adc
scas
sub
loope
jl
iret
lret
insb
in
mov
push
gs
cli
mov
and
sahf
mov
orl
fs
mov
sub
sub
xorb
push
xlat
nop
inc
es
or
cltd
stos
outsb
jo
dec
lods
sti
mov
add
hlt
mov
cmp
sbb
inc
sub
movsb
push
adc
in
stos
addb
mov
mov
mov
cmp
add
mov
xor
xchg
data16
out
repnz
sahf
nop
and
popf
push
pop
add
adc
enter
in
pop
lods
popf
xchg
jbe
movsb
xchg
mov
cli
negl
ja
inc
lahf
shll
jno
or
mov
clc
cmp
sahf
and
hlt
cmp
or
push
cmp
insb
mov
push
lahf
in
lock
mov
pop
shll
sbb
in
or
sub
dec
subl
push
and
stos
push
insl
mov
mov
mov
imul
cmpsb
dec
inc
xchg
jge
or
js
add
lds
mov
sahf
mov
pop
test
mov
fbstp
sbb
and
xchg
jo
out
lcall
test
cmp
mov
push
loopne
movsb
popf
sbb
sbb
push
xchg
mov
imul
mov
add
pusha
pop
out
pop
into
and
int
out
dec
or
sbb
ljmp
or
not
test
test
mov
out
jns
and
rolb
adc
dec
mov
sti
sub
insl
fwait
scas
jg
subl
popf
mov
mov
in
stc
das
jnp,pt
mov
icebp
cmpsl
cmpsl
loope
enter
mov
lods
gs
insl
gs
sahf
jmp
je
pop
daa
iret
mov
cmp
pop
adc
xor
leave
cwtl
fs
push
inc
dec
dec
iret
cld
sub
jbe
dec
lods
sti
inc
add
and
jp
insl
xchg
cs
loop
mov
in
jne
jl
repnz
xor
dec
repnz
popa
clc
int
xchg
and
lods
push
dec
es
inc
cmp
mov
xchg
loopne
sarb
sbb
or
xchg
aam
popa
mov
scas
js
pusha
mov
jnp
lds
imull
ss
inc
lds
shll
add
cmp
jns
mov
mov
ljmp
fistpl
in
popa
pop
xchg
adc
mov
outsb
loope
popf
push
loope
int
cmp
sub
and
xchg
gs
arpl
repz
aaa
push
shl
sub
jnp
cmc
xor
mov
in
dec
inc
test
push
xchg
lods
sahf
loopne
out
lret
mov
inc
fistl
inc
mov
add
aas
and
or
das
add
test
stos
iret
in
inc
xchg
cmc
jbe
mov
int
es
nop
cld
cld
jmp
xchg
mov
js
mov
ret
aam
cwtl
in
arpl
in
cmp
jnp
int
cmp
dec
mov
adc
sbb
fs
cmp
rorl
pop
dec
adc
xchg
int3
or
mov
jb
rorb
mov
mov
sub
pusha
or
mov
ret
cwtl
lcall
aad
lods
mov
jb
xor
sub
das
jmp
mov
mov
fldt
jno
sbb
scas
setne
ficoms
and
out
push
push
jp
int
pop
test
jge
aas
dec
sub
sahf
or
push
mov
fisttpll
out
mov
jbe
das
out
push
mov
dec
inc
dec
add
or
out
fidivl
fidivs
int3
movsb
in
fcmove
xor
and
int3
inc
fmull
cli
push
mov
jbe
fwait
icebp
jp
and
jp
mov
fadds
call
inc
std
out
mov
mov
fildll
in
xchg
adc
mov
bound
xchg
mov
push
imul
bound
jns
push
xor
cmpb
xchg
or
inc
add
inc
imul
shr
fldl
inc
pushf
push
pop
aas
mov
inc
fsubrs
sbb
stc
lahf
call
mov
cltd
loopne
add
out
out
in
push
out
pop
jle
adc
xchg
cmp
pop
dec
mov
bound
cmp
fdivr
pusha
ret
ss
pushf
xchg
pop
ja
lret
and
inc
inc
in
leave
sub
movsl
add
mov
adc
adc
lods
scas
test
push
mov
je
bound
aam
pop
stos
sbb
lret
aas
into
pop
flds
xchg
sbb
imull
cmp
xchg
in
ret
dec
or
pop
icebp
addb
jmp
stc
xchg
and
dec
adc
jmp
mov
popf
jmp
inc
lods
mov
test
lods
push
push
cmpsl
cmp
sbbl
fs
lock
pop
and
cli
fwait
shlb
icebp
push
pop
cmp
xchg
or
movsb
cs
loop
shl
repnz
imul
jg
cli
lock
lret
xchg
mov
das
cmp
sbbb
adcb
adc
push
hlt
cmc
out
xchg
push
loopne
gs
lods
or
idiv
aad
xchg
ret
push
imul
push
sub
adc
adc
repz
enter
xchg
test
and
adc
fwait
imul
xchg
sbb
sub
sahf
bound
scas
cld
fisubl
cmp
push
popa
sbb
jb
into
xor
push
and
cltd
lock
in
in
lods
cmp
bound
in
rorl
dec
add
jne
jg
sti
push
inc
or
mov
push
mov
xor
xor
xchg
push
lret
mov
mov
or
mov
scas
push
popf
sbb
insb
bound
daa
test
movzwl
insb
lods
xchg
push
inc
add
add
fsts
mov
jle
mov
mov
mov
pop
mov
and
add
xchg
add
andb
roll
scas
fucomi
adc
mov
fmuls
movsl
sbb
stc
das
push
push
flds
mov
aam
loopne
mov
aad
lods
shl
push
in
lods
mov
xor
in
mov
int
mov
or
push
lcall
inc
loope
mov
cmp
mov
stos
and
mov
pop
mov
sub
mov
mov
dec
out
stos
in
cmp
loopne
test
cmp
jns
cwtl
add
mov
jns
mov
inc
aas
inc
xlat
inc
push
sub
or
jle
in
mov
jge
gs
pusha
mov
add
mov
loopne
ds
out
adc
shll
jl
adc
stos
lret
mov
arpl
add
jmp
push
fld1
loope
mov
mov
xchg
addl
aas
add
xchg
inc
push
cmp
int
rorl
cmp
sarl
push
jge
push
ds
push
pop
jno
xchg
jp
rolb
or
inc
in
aam
add
data16
stc
imul
xchg
test
mov
mov
loopne
xor
inc
or
lret
fcom
mov
dec
mov
scas
cmp
arpl
mov
mov
das
repz
in
mov
inc
in
insl
xor
fisubl
mov
lcall
dec
incl
fisubl
pop
or
insl
xchg
outsb
sarb
rcrb
mov
cmp
sbb
ret
or
dec
ds
and
cli
bound
ss
aad
sbb
or
movsb
repnz
outsl
in
js
adc
push
cmp
adc
adc
sub
into
enter
jbe
inc
bound
jle
xor
mov
fstpl
hlt
lods
hlt
fbld
sub
jp
adc
jno
and
mov
cmc
push
addr16
push
pop
xor
fcompl
jp
and
fcoms
arpl
std
aam
or
pop
loope
push
sarl
repnz
mov
adc
mov
repnz
mov
popa
cmp
inc
jo
movsl
sbb
stos
jae
loope
dec
pop
push
fnstenv
jle
mov
xor
and
and
cmp
xor
out
roll
dec
mov
xchg
cmpsl
mov
nop
cmp
outsl
jb
pop
enter
push
pop
fisubrs
pop
in
dec
mov
push
gs
decb
dec
pop
fildll
pop
pop
pusha
inc
xchg
leave
pop
mov
pop
inc
mov
andnps
mov
jb,pn
lods
stos
xor
jae
idivb
loope
cwtl
xchg
pop
mov
divb
shr
iret
fidivrl
or
xchg
fldl
mov
mov
nop
lea
insl
push
imul
add
adc
mov
fwait
xor
cmpsb
popa
xor
and
push
pop
js
aad
stc
push
push
fistl
lea
and
push
mov
sbb
dec
cmpsb
decl
test
xlat
leave
movsb
cld
sti
in
popa
test
in
fisttpll
movb
mov
jp
jle
inc
ret
pop
pop
pop
stos
nop
pop
div
pop
lods
adc
sbb
mov
xlat
insb
inc
push
lahf
xor
mov
loopne
addb
adc
call
test
push
fs
outsl
mov
mov
adc
or
mov
cmp
lea
push
fistl
or
in
je
ret
rcrb
test
mov
xor
sub
mov
dec
repnz
push
iret
xlat
shll
test
adc
ljmp
je
cmp
fsubrl
push
das
out
int3
dec
sbb
and
mov
fidivrl
sarl
mov
cmc
or
imul
maxps
jns
sub
or
mov
dec
pop
adc
addr16
xchg
and
push
mov
jnp
ljmp
test
fistpl
aas
mov
inc
arpl
ret
push
mov
insb
sahf
adc
mov
imul
push
mov
int3
int3
outsl
mov
ret
cmpsl
jg
dec
mov
fnstenv
popa
sub
ret
cmpl
ss
jge
lcall
cmpsb
xchg
xlat
into
mov
inc
cmp
stos
sbb
lret
pop
cli
insl
mov
dec
jle
mov
dec
mov
adc
aad
aad
add
xchg
cwtl
in
push
popa
jmp
movsb
test
add
lret
mov
cmp
and
mov
scas
aaa
neg
mov
dec
inc
test
mov
lock
add
mov
std
add
xchg
outsl
adc
xchg
dec
nop
push
sub
jp
pop
sahf
adc
or
mov
xchg
popa
sahf
aad
adc
aas
roll
lret
test
je
pop
sbb
das
outsb
in
in
movsb
fisttpl
int3
aas
adc
jo
jmp
dec
mov
push
cmpsb
in
pop
lahf
adc
sti
mov
jo
syscall
pusha
jno
ljmp
gs
fcmove
int
inc
bound
push
sbb
addr16
mov
insl
xor
std
pop
pop
push
fwait
jne
fcmovnbe
pop
test
sub
push
inc
adc
cmp
clc
imul
fcmovnb
dec
push
and
mov
into
pop
sub
mov
std
jnp
out
stos
mov
js
push
pop
test
shrb
clc
sbb
scas
jo
sbb
mov
pop
xchg
lea
loope
outsl
xor
sti
mov
cmc
jo
dec
sbb
jnp
movsl
mov
jo
mov
cmp
xor
add
hlt
rcr
dec
dec
fadds
cmp
test
fstpl
adc
push
mov
into
out
pop
dec
andl
jecxz
imul
aas
pushl
hlt
dec
pop
cmp
stc
dec
mov
mov
jbe
in
pop
xchg
jle
mov
jnp
xchg
xchg
add
rcll
nop
dec
inc
std
mov
pop
sbb
adc
jecxz
cmp
xor
pusha
mov
mov
aaa
out
sub
cld
int
or
pop
ds
cld
mov
dec
clc
jg
jmp
inc
fistpll
iret
inc
lret
repz
test
dec
push
cmp
insb
mov
inc
into
jb
fwait
divb
lahf
pop
int3
mov
setle
cmp
jmp
pop
ffreep
jno
mov
loope
cltd
loopne
pop
jge
xchg
xchg
ret
or
dec
pusha
mov
sub
pop
test
int
out
cmp
scas
add
int
gs
cmpsb
add
xor
xor
pop
popf
clc
push
lcall
adc
addr16
insl
test
cwtl
push
fldt
jle
mov
jb
leave
lock
int3
xchg
xor
xor
push
sub
cmp
ror
ss
jae
and
adc
test
jns
inc
jo
out
loopne
pop
inc
fstpl
cld
js
movsl
dec
and
add
dec
or
data16
fcompl
in
add
repz
das
add
inc
out
fcomp
adc
bound
dec
mov
insl
ds
fcmovb
scas
sub
lods
pop
mov
addr16
cmpsb
pop
loope
sub
sub
and
aas
mov
cmp
rol
es
mov
in
testb
gs
nop
mov
out
cmp
addr16
mov
cltd
mov
cmpsl
xchg
cwtl
adc
test
and
les
mov
add
ret
aas
cltd
movsl
dec
jbe
pusha
or
in
out
sub
ja
push
or
mov
xor
insl
enter
sub
pop
sub
xchg
dec
jecxz
jmp
cmc
ja
aam
cmpsl
data16
ja
mov
fsts
jo
dec
and
daa
and
aaa
sub
mov
add
push
dec
sbb
lods
inc
push
in
int3
mov
ljmp
in
or
pop
mov
hlt
sub
mov
dec
pushf
adc
pop
mov
scas
fcomps
mov
xchg
out
push
shrl
aad
arpl
inc
lret
dec
push
adc
loopne
lock
dec
addr16
shll
popl
out
push
fcmovnu
xchg
into
scas
xor
aam
sbb
xorl
in
jne
pop
push
iret
in
notl
out
subb
pusha
xchg
mov
push
call
repz
popa
sub
imul
sbb
push
gs
push
mov
and
dec
push
nop
lock
rclb
sbb
cld
dec
inc
addr16
popf
sti
and
fidivrl
inc
push
sbb
pop
test
aas
imul
jno
imul
cmp
sub
shl
mov
sarl
ljmp
pop
fildll
and
push
push
pusha
cmp
push
jp
xchg
or
test
call
jge
inc
daa
and
rorb
mov
clc
mov
fs
fcmove
and
pop
sbb
cmp
aad
out
add
enter
mov
pop
push
lock
out
mov
mov
mov
lock
sub
movsl
insl
rclb
mov
fsubs
popa
int3
and
stos
inc
add
aaa
ljmp
pop
imul
fcmovne
movsb
mov
push
jb
xor
repz
adc
lahf
xor
jge
xchg
pop
mov
in
andb
add
xchg
mulb
into
jns
ja
fwait
mov
sub
pop
or
xor
mov
fldt
movsl
ret
sub
mov
xor
cmp
pop
pop
ret
adc
inc
fstpt
mov
out
aam
adc
xchg
je
insl
addl
sbb
or
es
xchg
sbb
inc
pop
push
push
add
add
pop
push
mov
outsl
cmp
pushf
mov
fidivrl
mov
fisubs
out
arpl
shrl
gs
call
insb
insl
lods
lret
mov
stos
dec
out
xchg
mov
jp
xchg
insb
and
mov
sub
mov
sbb
adc
shll
inc
cmp
in
popf
jecxz
mov
cwtl
bound
fisubs
cmp
mov
les
cmpb
jecxz
jne
lods
ret
lods
hlt
idivl
pusha
pop
lock
xor
cmpsl
das
mov
adc
push
rol
dec
mov
add
cli
mov
leave
fcmovne
dec
cmp
call
xchg
or
jg
clc
and
or
cmovo
test
dec
and
sti
jl
cmp
mov
mov
scas
xor
hlt
popa
jmp
inc
stos
cmp
xchg
sub
fsubs
xor
adc
call
fnclex
xor
loop
loopne
sahf
xor
bound
ficoml
mov
cli
rcll
sahf
sbb
mov
negl
leave
adc
out
fsubrl
iret
jns
stc
mov
aam
xor
mov
icebp
jle
sub
fcomps
int
inc
rcll
adc
jmp
adc
xor
ds
and
scas
xor
xchg
test
repz
push
aad
pop
or
mulb
pop
in
jmp
aad
xor
cmpsl
push
pop
cmp
test
aas
push
push
add
pop
out
cmpsl
mov
cmp
ja
movaps
hlt
mov
adc
ret
jp
mov
enter
mov
je
popa
mov
push
mov
inc
aam
int3
add
sarl
roll
test
or
out
mov
imul
dec
scas
jne
enter
lds
jl
orb
icebp
sub
pusha
mov
lods
leave
jae
iret
jae
xor
or
inc
xor
jns
in
repnz
leave
jmp
mov
loop
push
inc
into
dec
nop
sub
xor
pop
pop
sahf
cmp
mov
jge
xchg
inc
push
xor
dec
out
jge
inc
stos
push
cmp
dec
movsl
ror
sbb
or
push
mov
rep
nop
arpl
jo
xor
call
les
sbb
cmpsb
add
mov
jb
mov
and
add
mov
cmp
cmp
sub
push
add
sub
out
arpl
adc
shl
leave
xlat
mov
pop
hlt
jbe
sub
pop
je
leave
or
js
repz
mov
xchg
outsl
pushf
jg
leave
loope
ljmp
push
ret
mov
shrl
add
push
jg
ds
int
jge
pop
insl
in
cmp
aaa
outsl
lahf
lods
popa
xchg
scas
es
nop
or
inc
sub
cmp
loopne
in
ficoml
push
aas
adc
xor
xlat
lret
loop
dec
push
mov
or
cmpb
inc
pusha
repnz
cmp
push
xchg
jne
shlb
xor
push
int3
shr
test
out
xor
inc
sbb
pop
adc
imul
jle
es
cli
test
mov
shlb
jg
popa
xchg
lcall
pop
push
rcl
pop
sbb
push
push
sbb
sbb
sub
or
xchg
jo
fnstcw
xor
fimuls
inc
popf
mov
imul
insl
cmc
into
lret
push
stos
add
xor
pop
or
ret
mov
pusha
jne
js
hlt
loop
scas
jnp
fwait
repz
push
mov
or
dec
xor
xchg
mov
inc
mov
cmpsl
int
dec
not
lret
lahf
dec
and
dec
jmp
and
insl
sbb
insl
lock
mov
ficoms
inc
fucompp
repz
ret
subl
add
adc
fwait
int
out
jmp
jmp
daa
outsl
xor
cmp
mov
fwait
push
stc
aas
pop
scas
pop
xlat
iret
sub
sti
push
dec
xor
out
je
inc
mov
and
fidivrs
mov
movsb
fsubp
jb
js
das
int3
nop
inc
or
jp
addb
movsb
outsb
addr16
mov
and
sub
inc
jns
cmp
jg
in
ss
in
mov
xor
xor
aaa
or
pop
push
outsl
popf
outsl
push
dec
push
in
push
inc
hlt
imul
add
and
cltd
inc
popf
movsl
mov
roll
shll
repnz
stos
add
enter
ja
mov
pop
cmp
mov
jmpw
push
push
mov
lods
or
leave
jnp
mov
mov
mov
outsb
push
rcl
fisubrl
sub
je
stos
cmpsl
dec
call
shll
cs
pop
inc
inc
push
pop
cmpsb
aad
js
pop
cmp
cmpl
divl
test
mov
fdivp
sbb
xor
pop
cli
jns
aas
push
sbb
mov
jbe
xor
cmp
jo
divl
mov
or
andl
pop
in
add
and
inc
and
stos
or
mov
mov
xchg
jmp
push
cmp
xchg
bound
jno
or
jbe
aam
dec
subl
mov
imul
pop
dec
shl
mov
test
pop
shl
bound
sbb
push
cli
mov
jae
pop
sbb
cltd
or
movsl
mov
cmpsb
sub
mov
stc
test
sbb
cmp
repnz
cli
jnp
in
repz
mov
or
daa
lds
and
and
jne
cld
jg
stos
ret
ljmp
jae
mov
leave
jnp
mov
inc
mov
pop
rclb
jl
jae
adcl
and
shl
imul
xchg
imul
cmp
hlt
cld
push
add
or
adc
mov
cmp
push
and
fsubl
inc
in
mov
or
sbb
leave
mov
leave
shl
js
ljmp
cmp
test
push
sarl
je
daa
mov
add
movsl
push
push
ret
lcall
and
jb
push
mov
jne
into
movb
add
sub
int3
das
xchg
inc
cmp
pop
add
stos
cli
add
arpl
dec
stos
addr16
mov
and
jge
je
mov
or
xor
insb
loopne
fisubl
call
inc
xlat
mov
jno
mov
movsb
jmp
ret
fnsave
arpl
stos
inc
pop
stos
or
fistpll
and
fcoms
xchg
fucom
es
out
xlat
in
fwait
mov
xchg
pop
mov
pusha
cmp
jb
ret
and
or
inc
adc
vucomiss
pop
jmp
dec
mov
addb
jns
push
xorl
les
jno
xchg
fs
pop
and
inc
test
shlb
xor
fistpl
adc
xchg
xchg
push
in
push
sub
mov
icebp
andl
cmpsl
les
ss
fstpl
cmpsb
sub
xchg
repnz
cmp
mov
movsl
or
daa
std
push
inc
pop
adc
cmpsl
data16
enter
xchg
dec
jo
fisubl
inc
shr
int
jge
outsb
and
jno
xchg
pusha
xlat
mov
mov
xor
sbb
cmp
mov
mov
and
adc
sbb
push
movsl
push
out
jmp
pop
imul
lds
test
dec
adc
lods
inc
xor
fstpl
pop
mov
dec
dec
cmp
sbb
mov
or
dec
pop
std
jae
fimuls
xchg
mov
mov
and
pop
out
test
add
repnz
xor
in
test
int
inc
lahf
push
call
cmc
out
test
pop
pop
andl
and
pop
sub
sbb
jno
cmp
pushf
into
stc
leave
mov
lahf
movsl
loope
push
iret
int3
shrl
movsl
cli
jbe
jbe
dec
lods
in
vmwrite
call
dec
mov
loope
pop
out
cmpsb
lock
mov
sbb
push
jb
push
arpl
fdivs
jge
cld
dec
enter
fwait
ja
fadd
jne
pop
cli
sub
imul
xor
fnsave
adc
dec
or
push
testl
adc
ror
out
cld
popf
stos
sbb
sub
sub
or
mov
adc
loop
aam
outsl
in
dec
inc
jge
addr16
xchg
add
fstpl
daa
and
fists
jmp
popa
add
cld
fwait
pop
out
push
inc
mov
dec
ss
pop
adc
sub
sbb
std
push
dec
nop
leave
fists
mov
mov
mov
push
int
rcrl
cmpsb
add
mov
jne
mov
mov
test
hlt
bound
push
imul
mov
xor
mov
pushf
jp
bnd
out
test
add
jmp
movsl
repnz
xchg
aaa
inc
add
cmc
pusha
mov
cmpsl
fs
inc
hlt
add
jl
addb
movsl
push
cmpsb
sti
mov
fpatan
ret
sub
cmp
gs
ja
dec
jnp
stc
add
push
and
movsb
enter
and
jno
ds
dec
inc
dec
inc
push
fidivrl
lret
pushf
pop
jmp
mov
push
test
cmp
ret
arpl
xor
sbb
in
rsm
fmuls
jae
xchg
adc
ss
cmp
scas
and
clc
mov
mov
mov
popf
adc
repz
call
jmp
fdivl
mov
push
mov
arpl
test
push
pop
jo
cld
mov
jb
cmovno
mov
scas
shlb
rclb
outsb
sbb
inc
add
int
out
pop
or
cld
fwait
sahf
push
or
xchg
inc
push
es
inc
rcrb
iret
cmp
notb
dec
iret
sbb
fdivs
jge
je
or
outsb
add
into
mov
mov
enter
sub
xchg
jp
outsb
and
sbb
jmp
push
out
int
stos
stos
mov
add
divb
out
dec
xlat
rcrb
xlat
inc
notb
rorl
xor
scas
int
inc
and
lock
mov
in
in
mov
sub
pushf
xor
xor
into
ljmp
and
mov
fnsave
or
scas
rolb
mov
lea
in
pop
lahf
stc
int
xor
lods
lahf
bnd
decl
and
insl
xlat
sbb
inc
aam
xchg
push
inc
mov
fnstsw
adc
shrb
jecxz
mov
dec
mov
stos
das
insl
lods
cmp
dec
addr16
and
mov
jmp
cmp
std
push
in
pusha
xchg
sbbl
cmpsl
andl
sub
mov
in
add
sbb
test
push
xchg
lret
in
loopne
mov
addb
xchg
pop
or
pop
out
cmpsb
popa
jbe
rorl
js
sti
js
dec
sbb
lahf
popf
ds
cmp
pop
push
ficoms
ret
cmc
sbb
ret
adc
test
jge
dec
inc
adc
jg
bound
cmp
sub
int
inc
mov
aaa
lcall
lock
ljmp
scas
lods
adc
les
jp
shlb
fcmovb
lods
push
icebp
divl
xor
and
adc
stc
sub
jecxz
cwtl
mov
fs
lcall
sti
and
in
xchg
add
cmpb
adc
jp
mov
mov
or
and
sbb
add
stos
dec
out
or
push
adc
push
mov
test
sbb
or
insb
mov
lret
jnp
jle
jo
cmc
or
mov
sub
mov
jo
inc
arpl
subl
push
inc
mov
jmp
orl
jmp
subl
sahf
xor
popf
into
cmp
adc
adc
inc
in
cmp
ret
pop
lret
and
xchg
or
test
popa
xchg
sahf
mov
mov
test
lcall
mov
cld
ss
lds
adc
dec
jns
push
fcompl
cmp
sub
data16
in
movsl
mov
test
xor
loope
inc
push
inc
xorl
imul
xor
push
daa
add
testl
jmp
inc
sbbb
add
lret
rolb
shll
or
push
movsl
lods
and
jmp
loop
fistpll
dec
test
xor
push
ret
mov
xor
dec
inc
lds
xchg
sbb
cltd
jns
shrl
jg
xchg
mov
and
push
test
mov
mov
adc
or
add
testb
mov
test
mov
xchg
jecxz
adc
mov
mov
cli
aaa
orb
stos
incl
aad
push
icebp
xchg
aam
cwtl
jp
sbb
cmp
sub
cmpsb
mov
sbb
insb
into
sbb
adc
fcomps
les
outsb
push
stos
push
mov
orb
xchg
jne
xor
sbb
jo
jmp
ret
dec
push
loope
push
pop
jbe
stos
dec
sbb
aas
adc
lcall
add
xchg
xorl
push
mov
je
test
push
or
mov
xlat
xchg
adc
push
mov
repnz
or
rcrb
mov
sbb
adc
sti
sbb
pop
mov
jle
imul
pushf
add
xchg
ja
or
and
ljmp
mov
std
adc
adc
rorl
cmp
in
cmp
jo
ret
test
add
adc
lret
xadd
js
ret
icebp
lds
push
test
cmc
and
out
pop
imull
mov
test
add
test
imulb
mov
mov
stc
hlt
xchg
in
ficompl
ret
jle
lea
cmc
xchg
sbb
je
mov
push
repz
push
lcall
rcrb
inc
mov
pop
lods
mov
add
jle
push
or
aad
mov
movsb
xor
icebp
repnz
lods
lcall
and
push
cmp
ljmp
sub
dec
outsl
add
jno
out
popf
scas
add
sub
sub
mov
push
pop
aaa
addl
clc
idivb
loop
xor
pop
pop
gs
push
pop
fldcw
outsl
enter
push
arpl
adc
xchg
cmp
jnp
and
or
lock
pop
into
xlat
jns
cmp
pushf
loop
pop
ss
mov
lds
push
les
inc
and
sti
and
popf
adc
xchg
scas
bound
push
pushf
fstps
mov
dec
pop
gs
inc
mov
movl
mov
adc
addl
rol
jb
jmp
shll
cmp
je
mov
lea
aam
imul
ret
insb
hlt
insb
fiaddl
adcl
fwait
sbb
ret
mov
add
xchg
mov
mov
mov
xchg
cmp
mov
xchg
jge
cmp
lods
gs
js
cli
lahf
sahf
cld
xchg
mov
outsb
loopne
pop
jnp
or
jge
mov
cmp
outsl
push
pop
jle
inc
addl
dec
sbb
orl
insb
aam
fdiv
add
cwtl
lret
push
inc
cmp
hlt
and
xorb
stc
pop
bnd
or
leave
lods
or
je
test
and
outsl
ss
lcall
mov
sub
mov
in
dec
mov
dec
lock
mov
xchg
lcall
sub
cmp
les
insl
cmp
jo
xchg
mov
mov
jg
testb
and
jmp
xchg
or
sub
push
adc
fs
dec
rolb
stos
and
in
fadds
pop
xchg
movb
out
mov
mov
icebp
je
loope
mov
sarb
sbb
mov
mov
lea
dec
in
mov
gs
cli
jne
les
arpl
push
gs
xchg
scas
std
adc
push
ljmp
xor
xor
pop
shr
ja
aas
fmul
test
andb
mov
or
popa
and
rcll
mov
push
xor
ja,pt
xchg
icebp
sbb
ror
mov
mov
inc
mov
add
push
pop
arpl
xor
cwtl
ds
test
adc
add
add
loope
mov
fucom
hlt
mov
or
jge,pt
int
add
inc
sahf
popa
push
fdivrs
mov
pushf
leave
je
and
dec
pushl
mov
je
stos
mov
or
cmp
push
pop
fisubrs
jmp
xchg
ret
xlat
sti
inc
nop
sub
mov
testl
out
xchg
nop
adc
movb
pop
or
mov
mov
int3
dec
repz
push
pop
xchg
mov
stos
mov
xchg
sub
dec
jmp
dec
icebp
sub
lds
lcall
push
pusha
inc
scas
pop
sbb
shl
mov
push
add
mov
cmp
or
scas
in
sbb
ret
dec
mov
jnp
dec
push
adc
mov
mov
rcrl
sbb
inc
clc
sub
sahf
fistpll
cmp
dec
mov
or
xorl
adc
xchg
int
mov
lea
jo
arpl
hlt
cmpsl
fisttpl
cs
cltd
dec
or
inc
mov
insb
scas
iret
sub
pusha
mov
pop
fdivrs
pop
enter
repnz
mov
jmp
out
cli
jbe
in
mov
out
mov
cmc
les
test
andl
addr16
movsb
mov
xchg
sbb
xchg
movsl
imulb
cli
mov
mov
mov
rorl
inc
fimull
xor
mov
sub
sarl
cmpsl
loop
xchg
lcall
addr16
enter
push
jb
mov
add
dec
cltd
jbe
xor
xchg
fisttpll
repnz
ja
xor
test
std
pop
cmp
adc
shl
xor
mov
into
xchg
imul
insl
lret
lahf
jb
dec
scas
or
mov
fistl
lds
in
flds
jp
push
mov
dec
xchg
clc
movsb
ja
mov
mov
enter
inc
lahf
and
repz
aam
in
push
stos
movsl
push
xor
mov
iret
fdivl
jp
and
push
sub
push
loopne
fwait
mov
xchg
jmp
push
into
push
fbld
loope
in
fucomp
imul
imul
adc
sub
pop
mov
cmp
bound
add
sbb
jg
in
pop
test
xchg
inc
mov
jns
cs
std
jmp
sbb
ljmp
loop
jbe
xor
adc
and
jmp
adcb
xorb
xor
stc
loopne
dec
sbb
push
aaa
ja
dec
scas
jg
dec
or
dec
cmp
push
aas
push
mov
cmp
ds
pop
out
or
jg
push
pop
fidivrs
les
dec
mov
fwait
add
inc
popa
or
imul
ljmp
mov
lret
mov
sub
aas
dec
cmp
fidivrl
jo
cwtl
mov
scas
movsl
xlat
cmpsb
aad
sbb
int3
lds
out
in
aam
or
bound
sti
ss
inc
mov
je
fidivs
mov
movsb
scas
xchg
push
iret
cmpsb
push
xor
sbb
mov
test
pusha
adc
push
iret
push
or
push
or
cmp
dec
add
cmp
xor
roll
dec
hlt
mov
in
cltd
ret
lea
enter
repnz
sbb
mov
jg
push
xchg
or
xchg
sarb
inc
sbb
pop
xchg
aam
popa
fidivrs
pop
adc
in
repz
je
push
push
sarb
fwait
fwait
xor
sub
lahf
cmp
into
xor
push
pop
arpl
mov
mov
scas
add
js
loopne
push
ret
inc
mov
test
sti
icebp
test
adc
outsb
vzeroall
hlt
cmc
insl
xor
mov
into
mov
fsts
push
fwait
out
push
imul
incb
aam
and
mov
aas
popf
jbe
les
fstps
adc
push
sbb
add
sub
push
mov
jmp
fidivs
sbb
mov
jno
pop
pushf
push
inc
lret
lret
repz
jp
lock
cmp
add
cli
xchg
and
mov
ja
inc
xlat
dec
cltd
rclb
fld
movsb
gs
xchg
or
stos
sbb
jmp
add
mov
push
lret
mov
jmp
mov
jo
push
xchg
adc
enter
and
daa
pop
iret
sti
pop
jle
outsl
cmp
in
pop
pop
les
jmp
movsb
sbb
aad
data16
mov
jge
imul
mov
cmpsl
cmp
mov
or
cli
les
fdivrs
daa
adc
insl
mov
cmp
aas
inc
test
and
daa
or
push
dec
cmpsl
scas
pop
daa
aaa
push
mov
aam
dec
push
mov
and
stos
decl
sbb
sahf
movsl
or
dec
sbb
lods
inc
jmp
xor
inc
fisttpl
outsl
cli
inc
call
cmp
mov
jne
push
insl
jae
and
sub
xlat
out
jl
adc
dec
jl
ljmp
es
aam
mov
mov
push
into
bound
push
pushf
inc
into
cwtl
aaa
mov
jl
or
or
scas
pop
fucomp
jg
fidivl
sub
out
xchg
je
xchg
inc
movsb
cmp
dec
jb
dec
xor
jb
in
push
in
jne
decb
push
int3
rol
and
xchg
push
xor
inc
rorl
out
push
lahf
mull
imul
sbb
sbb
pop
push
xor
call
push
lea
es
pop
sti
dec
dec
or
mov
je
jne
jnp
loopne
enter
inc
or
jl
adc
fstpl
xchg
xor
pop
inc
pop
rcll
mov
mov
lea
xor
jb
xor
and
adc
loopne
fiadds
outsl
lea
push
gs
sahf
or
xchg
lock
test
bound
sbb
leave
sti
insl
push
pop
add
lods
jb
lret
fs
or
aas
fcomps
sub
mov
inc
lahf
cmc
fdivrl
adc
int3
sub
and
lds
sbb
imul
lock
sbb
adc
lods
pop
out
ss
mov
pop
cwtl
dec
pusha
cmc
mov
test
jbe
mov
push
jb
push
insb
stos
push
add
sub
pop
in
mov
xchg
and
sub
arpl
data16
xchg
shl
or
hlt
mov
jge
pop
mov
inc
mov
loopne
fcmovne
lret
loope
inc
add
stos
sarb
sbb
mov
lock
sub
adc
loopne
jo
mov
test
out
xchg
pop
mov
adc
fmuls
add
or
cmp
and
repz
into
dec
jg
jo
das
clc
jbe
js
sarb
dec
mov
sub
decb
mov
repz
outsb
into
adc
js
sbb
jae
nop
int
xchg
mov
and
aad
xchg
ljmp
push
je
bound
push
mov
push
add
loop
in
mov
roll
mov
mov
mov
imul
sbb
sbb
icebp
jp
sub
aas
aad
jne
out
cltd
sbb
lods
pop
cmc
add
or
je
mov
xchg
add
mov
repnz
mov
sub
outsb
sbb
in
mov
popa
rcll
adc
fcmovu
into
add
pop
fs
minps
dec
pop
mov
daa
or
cmpsb
jnp
mov
push
outsb
insb
sahf
sub
nop
pop
dec
cmp
push
nop
jmp
pop
lea
cli
out
dec
iret
xchg
dec
or
jns
push
inc
data16
and
lock
test
xor
sbbl
outsl
lret
cld
or
aas
cmp
and
push
jle
jo
out
stos
inc
stc
loop
cmp
es
cmp
jae
sub
jmp
aas
cmpsb
cmp
movsl
imul
hlt
adc
mov
sahf
mov
sub
pushf
sahf
jae
mov
ret
hlt
and
mov
mov
jp
or
out
lds
and
int3
jge
icebp
pop
push
call
stos
test
out
shlb
jle
les
fstps
cld
push
xlat
cltd
pop
das
movsl
adc
jle
cmpl
pusha
sti
addl
jo
or
jno
adc
sbb
jge
lret
inc
cmp
inc
lods
jno
lods
push
lods
mov
pop
outsl
push
and
int3
mov
repz
ret
das
js
pop
add
adc
sahf
ljmp
jnp
pop
cmp
or
pop
ret
mov
mov
jmp
mov
rolb
inc
mov
addr16
ret
frstor
pop
add
enter
pxor
lret
jmp
sbb
ret
lea
mov
out
mov
lcall
cld
adc
and
movsbl
dec
fadds
sub
mov
pop
dec
mov
xor
xor
pop
sub
push
jo
rolb
clc
push
icebp
and
test
or
out
incb
cmp
cli
sbb
or
push
aas
fcomps
or
mov
push
insb
jp
ret
push
arpl
pop
inc
jne
lds
jp
jne
mov
mov
in
xor
notb
sarl
insb
dec
psubq
lcall
inc
sub
insb
cmp
jno
add
mov
imul
leave
jno
loop
shll
bound
subl
fs
inc
cmp
popf
sub
in
cli
mov
shll
jns
cltd
je
lahf
dec
lret
jb
push
sbb
push
xor
in
push
mov
cmc
push
scas
pop
rcll
add
lret
adc
push
ss
icebp
dec
outsl
mov
jns
jmp
ss
fildll
cmp
pop
ljmpw
inc
lcall
push
inc
and
jae
ljmp
push
inc
push
xor
pushf
imul
loope
loopne
push
addl
xor
jmp
enter
mov
add
cli
xor
insb
in
iret
das
shrl
jo
mov
repnz
inc
es
xchg
jg
aad
fwait
inc
repnz
in
cmp
adc
push
aaa
push
shrd
aad
movsb
xchg
mov
fsubrl
jno
cmpl
add
mov
dec
lds
sahf
cwtl
out
or
jp
jo
lcall
jbe
repz
stc
or
lcall
enter
mov
inc
xor
sbbb
push
cmp
shl
mov
lds
movsb
icebp
popf
inc
sbb
xorb
data16
sub
push
idivb
imul
outsl
dec
dec
nop
not
sub
test
loop
mov
dec
add
test
xchg
shlb
je
adc
add
mov
inc
adc
pop
stos
xchg
lea
pop
mov
enter
inc
fcmovnb
pop
subl
js
mov
mov
mov
dec
or
and
imul
jbe
icebp
scas
inc
xchg
add
push
outsl
shll
and
mov
jns
insl
test
testb
out
and
dec
aaa
in
push
mov
cmpsb
cs
clc
aas
es
ja
add
xchg
or
dec
shl
push
loop
fwait
and
lds
notb
daa
mov
add
jecxz
push
fwait
scas
xlat
out
jb
xor
and
stc
icebp
push
push
cwtl
daa
clc
mov
xorb
arpl
cmp
xchg
sbb
pop
loopne
lods
and
fwait
cmp
xchg
xchg
lret
insb
lods
and
xor
mov
addr16
ja
mov
push
outsb
out
ja
jp
add
dec
cmp
cltd
adc
sub
les
int
stos
sbb
add
xchg
inc
shlb
sub
xor
loope
sub
adcl
adc
add
push
mov
xchg
ret
les
insl
lea
scas
rcrl
addr16
sub
movsb
in
popf
dec
adc
cmp
jmp
int
jmp
scas
mov
iret
cmpsl
jae
xchg
push
data16
xor
mov
pop
sahf
pop
xchg
or
cmpl
icebp
dec
pop
loop
add
sub
addr16
pop
clc
mov
repnz
push
pushf
insl
dec
mov
imul
mov
scas
push
add
xchg
int
stc
popa
ljmp
mulb
cmp
or
daa
cmpsb
dec
dec
xchg
call
test
and
cmp
loopne
push
lcall
fs
loope
movsl
hlt
sarl
xor
aaa
add
xchg
fs
cmpl
sbb
jge
mov
loope
call
jg
pop
or
dec
js
shlb
js
das
mov
ja
inc
sbb
cs
outsb
adc
fnstsw
adc
mov
test
jne
lahf
cwtl
clc
cmp
iret
or
scas
add
sub
xchg
ja
insb
call
mov
or
sbb
sbb
sbb
pop
mov
dec
mov
jb
and
xor
rolb
cmpsl
loop
enter
xlat
push
cld
hlt
adc
mov
lahf
test
push
sub
mov
insl
sbb
rcr
pop
mov
and
cmp
repz
mov
jg
shl
pop
iret
lret
shlb
cmpsl
xchg
lock
insb
nop
adc
xor
pop
push
xchg
addb
pop
add
in
sbb
pop
lahf
or
and
or
stc
mov
lock
dec
adc
stos
mov
inc
pop
aad
add
in
xchg
xor
add
insl
rclb
movsb
adc
xchg
mov
in
mov
and
insl
mov
push
sbb
mov
and
sub
xchg
xchg
mov
inc
fldt
mov
mov
push
lahf
outsl
cmp
popa
in
mov
sub
lea
das
jno
stos
fistps
sti
daa
mov
out
cwtl
in
sti
xlat
push
mov
mov
lret
xchg
mov
adc
mov
pop
leave
and
jmp
stos
or
push
xchg
fucomip
or
out
xor
ret
sti
inc
lds
pushf
ficomps
outsl
mov
repnz
insb
ja
xchg
sbb
inc
test
cli
or
push
sub
xchg
loop
iret
xor
bound
pop
ds
pop
cltd
je
out
aad
inc
sbb
jno
cmp
sahf
pop
divl
xchg
sbb
xor
fcompl
mov
test
or
push
sbb
sarl
inc
mov
test
ss
dec
add
mov
loopne
test
lahf
adc
jne
pop
inc
jge
les
movsb
shrl
stos
mov
gs
add
and
imul
cwtl
cmpb
sbb
mov
mov
cli
cmp
or
idiv
mov
lahf
xor
cmp
mov
shll
jnp
cmp
jle
pop
lock
mov
push
push
jnp
xor
sub
enter
push
out
mov
lret
sbb
sahf
je
xchg
cmp
jbe
cmp
repnz
lahf
mov
lea
sub
divl
or
aam
cmpsl
movsl
cwtl
ds
and
pop
hlt
jl
out
rorb
mov
imul
inc
jecxz
out
push
out
ds
inc
daa
fstps
outsl
push
mov
imul
jmp
jmp
lret
push
xor
lods
add
fildll
adc
ds
adc
hlt
leave
ljmp
mov
pop
push
xor
xlat
stos
repnz
mov
jmp
sbb
mov
xchg
or
xorb
stos
mov
pop
inc
les
inc
int3
inc
pop
xchg
stos
repz
enter
idivb
repz
xorb
mov
push
lret
pusha
scas
cli
or
push
push
cmp
add
mov
jae
adc
add
incl
pop
pop
imul
pop
in
out
call
push
outsb
lds
pop
or
mov
fnsave
push
repnz
in
icebp
scas
jno
dec
adcl
sar
fistl
fs
nop
add
add
push
cwtl
push
in
cmp
jge
insl
and
adc
aad
mull
movl
sub
push
push
adc
out
dec
adc
into
leave
and
sub
ljmp
jae
lea
popf
push
xor
stc
push
idiv
rclb
ss
jnp
mov
xchg
inc
pop
jp
cltd
mov
xor
rorb
mov
lods
push
lcall
add
sub
pop
dec
mov
pop
jne
inc
dec
sub
push
movsl
test
xchg
ja
pushf
push
daa
mov
lock
out
cmp
shlb
lahf
dec
mov
ret
ss
jmp
cmc
add
ds
xor
pop
iret
xor
inc
xchg
repz
popa
icebp
add
or
ds
insl
in
rcrb
movsb
bound
lret
cmc
mov
fisttpll
pop
cmpsl
repz
scas
push
popa
mov
dec
xor
xchg
inc
and
mov
arpl
push
out
fmulp
push
adc
sbb
xchg
xchg
movsl
lock
mov
jns
in
adc
xchg
pop
in
mov
popf
iret
or
lret
jns
movsl
push
ja
push
aam
dec
jnp
in
and
shlb
cli
mov
fnsave
xlat
loop
out
scas
repz
or
roll
jbe
jecxz
sbbl
xchg
jb
pop
adc
test
push
arpl
cmp
or
inc
imulb
test
push
inc
enter
fcomi
and
int
in
addr16
mov
jge
add
icebp
add
sbb
sub
cltd
adc
popf
sti
std
mov
xchg
out
scas
iret
test
outsl
hlt
or
outsl
jb
xchg
pop
dec
push
push
rorb
jbe
js
mov
push
push
push
sarl
jmp
incb
mov
test
ror
stc
popf
jg
jmp
mov
je
arpl
push
dec
cmpsl
ljmp
mov
cmp
pop
stos
sbb
out
filds
adc
sarl
in
stos
pop
and
and
sbb
lahf
adc
popa
sbb
cs
adcl
mov
fidivrs
icebp
xor
movsb
loope
sbb
mov
rcrl
jmp
cmp
adcl
adc
adcb
ret
or
sarl
pop
push
out
cli
lods
mov
in
sub
ds
inc
jno
arpl
push
push
in
cmc
jl
lret
cmp
ja
pushf
xor
and
ss
insb
pop
pop
or
sbb
loop
sbb
sarb
jae
mov
xor
insb
sbb
push
imul
jmp
outsb
scas
rol
jno
test
hlt
stos
add
in
mov
in
or
in
xchg
jae
and
mov
lds
sti
arpl
test
inc
outsb
push
outsl
fstl
push
insl
das
inc
xor
js
ret
push
add
or
data16
push
icebp
loope
std
sahf
push
std
xchg
out
adc
mov
sbb
pop
push
mov
je
add
xchg
xchg
std
mov
push
clc
adc
rcrl
adc
pop
cld
pop
enter
xchg
pop
mov
pop
imul
sbbl
jmp
pusha
outsb
adc
mov
jae
clc
mov
lods
into
shl
xor
mov
test
stc
icebp
sahf
jmp
or
ljmp
inc
xchg
sbb
mov
xchg
mov
mov
jne
add
push
in
iret
in
fidivs
mov
imul
aaa
scas
push
cmpb
insl
fimuls
aad
sub
adc
jmp
out
idivb
aam
ds
test
inc
lret
popf
cld
fisubs
sahf
pop
mov
lods
scas
mov
fstps
sub
insb
fistps
clc
push
test
xor
pop
sbb
mov
and
lret
insb
clc
jne
lds
sbb
mov
jnp
insw
cltd
xlat
jmp
ja
arpl
mov
test
add
mov
bound
in
or
xchg
jo
lods
inc
pop
cmp
jle
mov
dec
ss
lea
adc
mov
call
dec
jl
cwtl
dec
push
mov
int
lret
inc
jo
call
sub
bound
and
sti
mov
fbld
adc
inc
push
cld
xchg
repnz
out
xchg
icebp
cwtl
je
xchg
add
mov
nop
sub
mov
cli
mov
add
ret
out
push
inc
ljmp
lods
hlt
or
push
gs
fdivr
repz
negb
mov
mov
dec
addl
jecxz
dec
mov
enter
out
add
jno
mov
sub
cmp
sbb
lcall
or
fidivrs
jmp
arpl
dec
notl
ljmp
mov
insl
subb
jb
sbb
bound
mov
pminub
faddl
pop
out
sub
repnz
xchg
xor
out
aad
scas
out
or
bnd
xchg
insl
and
rorl
pop
xchg
int
mov
or
push
dec
dec
out
cmp
push
xchg
out
clc
cmp
popf
mov
loop
pop
int3
out
xlat
jp
push
add
or
stos
mov
loope
or
or
daa
ss
jne
rcrl
inc
outsb
xor
add
add
push
jns
ss
push
insl
jne
cli
dec
clc
jecxz
into
cmp
sbb
sbb
bound
cltd
pop
lret
sbbl
pop
xor
xor
mov
inc
jp
leave
sti
fst
inc
cmpsl
insb
in
out
sub
aaa
sti
pop
mov
scas
mov
add
inc
mov
rclb
shl
mov
push
loope
movsb
in
icebp
mov
or
push
pusha
xchg
mov
sub
xor
enter
gs
outsb
and
adc
filds
mov
ret
jbe
sti
and
iret
aam
in
nop
insl
mov
in
mov
test
mov
fstp
aad
and
sub
sbbb
aaa
dec
ret
adc
jge
outsb
bound
add
xor
mov
les
push
ja
scas
clc
mov
sub
or
adc
scas
mov
aas
push
mov
or
dec
jno
in
dec
and
cs
clflush
outsb
xor
cmp
enter
sub
sub
ja
insl
mov
aas
mov
sub
push
sbb
loope
ljmp
pop
mov
dec
fwait
xchg
popa
sub
adc
sub
fldenv
insb
sub
imul
xchg
lea
mov
pop
lcall
test
test
sub
aas
iret
int
pop
cmp
sbb
aad
or
sar
or
dec
clc
cld
jmp
arpl
aad
xchg
inc
inc
repz
xor
imul
nop
adc
aad
aad
cld
imul
xor
data16
add
cs
aam
cmpsb
sbb
test
jecxz
ror
imul
inc
daa
pop
imul
inc
xor
adc
movsb
and
stc
iret
fisubrl
add
shr
sahf
stos
cs
cmp
mov
mov
jbe
loopne
push
ljmp
xchg
xor
lahf
sub
fimuls
and
mov
call
repnz
andl
add
pop
jno
fs
xor
aam
inc
shll
cmpl
mov
inc
mov
sub
icebp
jno
push
scas
jecxz
sbb
dec
or
push
in
add
call
xor
push
push
fwait
stc
sub
and
push
repnz
pop
add
jno
pop
or
add
push
dec
pop
test
andb
sub
mov
das
hlt
icebp
iret
mov
lea
and
xchg
ja
stos
adc
cltd
outsb
test
sub
ss
andl
es
xor
addr16
out
xchg
iret
dec
js
popf
pop
inc
pop
jae
and
add
shrb
pusha
mov
in
clc
xchg
movhps
cmpsl
cmp
adc
movsl
dec
mov
imul
mov
cmp
cld
mov
repz
mov
cmp
jp
test
mov
out
mov
gs
ret
lret
xchg
push
mov
sbb
sub
pop
addr16
clc
mov
mov
call
cwtl
dec
inc
add
pop
mov
sub
mov
nop
test
xchg
mov
jo
mov
inc
jne
mov
iret
sbb
jmp
les
adc
fadd
sub
cwtl
cmp
cmp
std
sub
mov
push
leave
pop
scas
repnz
xchg
inc
pop
lcall
into
jg
or
cltd
outsb
rcr
aad
imulb
xchg
pop
pop
cli
stos
insl
sbb
pop
sub
push
aam
adc
popf
pop
inc
adc
cwtl
ret
fildll
dec
fs
inc
lods
mov
outsl
mov
mov
fsubrl
xchg
adc
sub
pop
in
fiaddl
jle
insb
mull
mov
test
sub
dec
add
inc
xor
or
add
cmp
xchg
mov
loop
imul
jg
inc
cmp
adc
push
test
in
add
gs
adcb
pop
cmp
scas
dec
cmp
imul
inc
loop
pop
fisubs
loopne
aam
xchg
cmp
insb
fldcw
and
jg
jle
lret
mov
cmc
xchg
jnp
mov
daa
les
ss
out
adc
mov
or
nop
mov
pop
hlt
das
arpl
jle
mov
cld
add
add
inc
mov
xchg
fildl
mov
inc
inc
mov
xchg
loopne
cmp
bound
adc
or
sbb
hlt
inc
je
test
and
push
mov
push
jae
ror
jbe
xlat
ljmp
stc
add
dec
lods
or
rorb
pushl
or
std
cld
popa
mov
pop
and
xchg
testl
inc
mov
xchg
mov
popa
add
outsl
mov
andl
flds
std
jmp
dec
imul
pop
popf
stos
enter
push
data16
xor
xchg
push
daa
push
inc
xchg
sbb
add
dec
loopne
jae
jg
pop
and
mov
es
add
inc
or
inc
cmpsl
jno
ds
sub
jae
mov
xchg
cmp
test
icebp
cmp
xlat
ds
lret
in
lahf
mov
xor
popf
test
call
push
clc
insb
xor
pusha
mov
inc
pop
add
mov
inc
jl,pn
add
mov
xchg
jne
lcall
dec
fldt
cmc
cmp
adc
sbb
jb
adc
rep
icebp
scas
cmp
dec
fisubrs
fsin
repz
nop
or
and
aam
hlt
inc
push
leave
pop
loope
fnstsw
cmc
aad
clc
in
daa
outsb
lock
repz
or
jmp
std
mov
out
adc
mov
scas
sub
mov
addb
add
jb
fistps
xchg
leave
nop
xchg
inc
decl
leave
mov
lea
sar
das
dec
and
mov
sub
push
cltd
add
enter
cmpsb
or
cmp
or
rorb
add
scas
mov
test
adc
inc
mov
repnz
xor
push
mov
ror
inc
rcr
sbb
xchg
or
push
cmp
inc
cs
inc
aad
scas
sbb
sbb
xchg
stos
add
inc
ss
movsl
sbb
or
push
test
xor
test
xchg
shl
jl
stos
pop
xchg
pop
lret
icebp
jo
stos
adc
jmp
mov
lock
imul
or
fs
jnp
call
or
hlt
test
cmp
das
lret
add
sbb
sti
mov
jno
dec
ret
inc
inc
mov
mov
mov
pop
out
push
nop
test
mov
test
xchg
les
add
cmp
sub
adc
divb
mov
or
out
aam
push
rclb
push
dec
xor
jnp
cmp
mov
pop
int3
sub
add
push
inc
mov
fdiv
pop
aaa
scas
lea
divb
or
mov
lret
sub
iret
jmp
mov
inc
push
sbb
inc
test
dec
outsb
loop
cld
push
das
movsb
add
test
out
inc
andl
mov
mov
stc
out
cmc
lods
xchg
outsb
push
jo
pop
sti
push
mov
jecxz
mov
lock
cwtl
jo
jp
or
ret
movsl
add
and
xchg
add
into
adc
out
scas
stc
sbb
sbb
push
cmpsb
push
mov
int3
cli
insl
and
mull
xchg
fidivrs
bound
je
sub
mov
inc
or
lock
xchg
mov
add
cmp
mov
adc
adc
lea
sub
or
aad
adc
lahf
mov
cltd
aas
pop
pextrw
sub
test
repnz
out
aad
adc
out
testl
push
fnstsw
mov
icebp
cld
das
inc
dec
adc
push
mov
sarl
mov
push
lods
lretw
sub
popa
outsb
mov
ljmp
fldenv
mov
adc
xor
les
dec
push
in
mov
cli
aas
or
outsb
dec
fs
lahf
insb
pop
push
pop
add
push
sub
cmp
cltd
lret
out
sahf
push
push
mov
push
call
jg
inc
into
pop
daa
or
jmp
fcmovnb
jmp
sub
ret
pop
popa
or
aad
mov
or
cmpsb
mov
sbb
xor
push
sti
dec
nop
mov
in
mov
push
adc
xor
push
jmp
pushf
adc
xchg
cwtl
inc
cmpb
jg
jbe
rorb
mov
stc
scas
lds
mov
inc
out
popa
cmp
cmp
sub
pusha
hlt
stos
mov
jg
rorb
or
mov
mov
add
dec
scas
add
xchg
jnp
jae
aam
pusha
jno
jo
adc
jp
dec
xchg
add
dec
pop
clc
mov
jmp
outsb
xchg
adc
in
arpl
shll
scas
bound
mov
bound
fiadds
xchg
fnstcw
inc
scas
mov
inc
dec
enter
in
out
mov
divl
push
popa
or
jp
mov
xchg
lahf
mov
xor
sub
pop
fidivs
ror
or
enter
scas
or
cld
jl
sbb
inc
xor
xor
sub
imul
xor
pop
cltd
subb
cmpsb
mov
xchg
pop
mov
test
inc
cmp
cmpsb
pop
or
outsl
fcom
sbb
mov
inc
sarl
sbb
inc
xorl
sbb
repnz
and
xor
add
and
rcll
sti
push
andb
fwait
jnp
insl
dec
loopne
lret
ret
mov
cmp
out
leave
jmp
mov
add
pop
ret
cli
int3
adc
pop
popa
aam
iret
nop
aad
outsb
test
sar
fldl
jnp
inc
je
daa
xor
jmp
dec
inc
inc
push
fisttpl
dec
pop
push
repz
dec
add
cwtl
fsub
adc
jae
and
mov
xchg
xor
push
fbld
ret
or
and
movsl
mov
mov
ljmp
sub
or
inc
push
jo
mov
cmp
sub
xor
cmp
ret
push
dec
test
repnz
mov
aam
push
xchg
leave
aad
and
fisttps
xchg
xchg
push
add
inc
das
mov
mov
sar
rolb
jle
mov
add
fnsave
mov
imul
dec
pop
dec
xchg
push
iret
push
mov
ds
xor
xor
leave
xchg
jo
test
xor
loop
cmp
mov
push
cmp
leave
sbb
add
sub
pop
cltd
xor
movsb
outsb
push
inc
inc
std
lret
stc
lods
adc
or
push
or
call
add
sbb
fisubl
div
push
push
push
call
mov
push
xor
sar
jo
pop
out
cmp
in
pop
inc
jmp
mov
mov
jb
push
frstor
ffreep
test
ds
fstpl
jb
scas
jbe
xlat
test
mov
aas
cmpsw
sahf
inc
inc
jmp
jns
out
leave
inc
pop
sub
jp
pop
push
cmpsl
push
dec
mov
pop
push
inc
cmp
cmp
pop
cmp
stos
mov
jp
add
push
xchg
hlt
popf
pop
test
jne
bound
in
dec
mov
pusha
add
push
xchg
sbb
adc
pavgw
xor
pop
fcoms
or
ret
daa
sbb
cmpsb
or
jne
cmp
lahf
push
jge
lcall
leave
push
jno
ljmp
stos
push
push
sahf
push
pop
push
dec
int3
outsb
pop
pop
incl
mov
sub
jo
fs
call
adc
aas
sbb
adc
lea
mov
adc
lret
mov
add
xchg
mov
xor
cmp
inc
sub
pop
xor
out
fwait
dec
imul
mov
pop
data16
jns
aam
mov
pop
aaa
inc
addb
jnp
out
inc
xchg
loop
paddb
lds
inc
mov
push
stc
cltd
pop
sbb
fimuls
or
cmc
sbb
xchg
lea
push
fidivrs
mov
adc
xor
nop
or
fists
fidivs
out
enter
stc
sub
aad
inc
cmp
and
outsb
cmp
lods
dec
addr16
mov
xchg
rcrl
cmp
xchg
inc
add
xchg
pushf
dec
lods
fisttps
ds
in
int3
daa
loopne
xchg
popa
cmc
and
pop
imul
lods
insb
repz
pop
jo
sbb
pop
call
jmp
and
lea
fistl
cmp
jmp
jp
xchg
mov
ds
fsubr
rorb
je
out
adc
and
pop
pop
les
mov
mov
jnp
iret
mov
mov
adc
cli
adc
jle
roll
sub
mov
xchg
sbbl
sbb
or
and
mov
in
insb
es
mov
insb
subb
mov
xor
out
cwtl
pushf
sar
inc
push
or
jmp
popa
mov
clc
enter
mov
mov
mov
lods
push
jecxz
push
add
push
add
rcrl
jnp
std
out
sub
aas
inc
add
mov
cld
lock
pop
push
pop
into
add
stc
out
adc
nop
push
fdivrs
fldt
xchg
outsl
mov
mov
add
in
mov
jb
mov
pop
lret
es
stos
dec
add
test
or
add
iret
or
add
xor
lea
out
out
xor
out
mov
enter
jge
and
les
outsl
jle
jge
scas
xchg
dec
cmpsl
in
bound
sub
clc
std
adcl
and
lcall
ficoms
and
fnstenv
jnp
cwtl
inc
or
sbb
dec
adcl
shlb
jbe
add
cmp
xchg
adc
mov
sub
decl
xchg
push
clc
sbb
fcmovne
sbb
pop
jno
mov
inc
in
mov
adc
dec
stc
xor
sbbl
pop
nop
mov
int3
and
inc
std
les
mov
lods
pusha
adc
mov
or
cwtl
ss
xor
mov
leave
pusha
fiaddl
mov
rcrb
lds
iret
xor
lret
out
mov
mov
call
adc
add
jg
dec
repz
enter
shll
jge
cwtl
lods
shr
mov
sub
pop
dec
dec
aam
adc
ret
sbb
dec
in
les
fcoml
xor
push
jne
bound
pusha
popa
js
or
fsubrs
clc
cmc
frstor
fadds
les
adc
in
jnp
out
mov
mov
out
mov
insl
fidivs
insb
pop
movsl
mov
xchg
je
shll
cmpsb
jmp
xchg
out
repz
jg
lret
sbb
clc
addr16
bound
shll
adc
jecxz
mov
mov
leave
leave
mov
nop
jnp
aam
push
and
aam
into
leave
sub
inc
sbb
or
cmp
and
nop
inc
es
in
cltd
stc
cmp
dec
repnz
shll
push
dec
mov
fsub
movsb
std
dec
mov
or
shll
adcb
or
les
clc
mov
pop
xor
pop
leave
cld
jnp
mov
idivl
stos
dec
cmc
movsb
mov
pop
adc
in
mov
dec
stc
jae
mov
movsb
sub
js
xor
je
pop
cmpsb
fnop
leave
add
lods
xchg
les
inc
loope
fldt
test
stos
pop
ss
jns
xlat
dec
ds
or
stos
popf
mov
xlat
mov
jecxz
xchg
mov
cli
outsl
ret
push
xchg
push
std
adcl
inc
mov
fs
pop
mov
mov
in
cmp
push
arpl
cmp
mov
xchg
inc
xor
and
and
stos
push
adcb
jp
sbb
mov
or
adcl
test
dec
jmp
ja
cli
jg
sub
dec
pop
lret
mov
sti
jns
fstps
bound
pop
mov
lods
mov
add
pop
hlt
jbe
sbb
cmp
inc
loope
scas
mov
rcl
push
pop
subb
daa
mov
cwtl
arpl
xor
mov
shlb
ja
mov
mov
mov
scas
arpl
test
in
and
ds
divl
sub
lea
lods
xchg
cmc
es
jnp
loop
idivl
mov
mov
jbe
add
subb
aas
mov
enter
orl
inc
jge
pop
test
lods
pop
pop
or
mov
push
shll
pusha
xchg
pop
popa
inc
push
mov
push
test
xchg
xor
dec
add
adc
fincstp
or
fisubrl
push
test
mov
sti
popa
cmpsl
cmp
add
pop
xchg
cmp
dec
cmp
clc
clc
repnz
mov
xor
stos
fnsave
mov
movsb
jno
cs
inc
sbb
pop
lods
xor
lret
sub
mov
aaa
push
xor
insl
sbb
add
sbb
adc
jmp
cs
jo
fdiv
insb
test
mov
scas
les
push
jno
lcall
iret
xchg
adc
insb
fcomps
mov
ljmp
fwait
mov
add
xchg
sub
xor
jnp
push
ss
jne
gs
xorb
xchg
test
xchg
loope
cmc
fs
cltd
dec
in
in
cs
gs
jle
cmpl
cmp
sbb
adc
push
pop
dec
sub
xor
mov
mov
mov
outsl
stos
negl
mov
mov
inc
stc
jle
pop
mov
xchg
inc
lds
jb
adc
push
ficompl
and
dec
lcall
sti
mov
out
daa
fldenv
cli
dec
jl
aad
es
dec
movsl
aad
xchg
enter
or
pop
loope
sti
stc
mov
and
inc
dec
dec
mov
shlb
outsb
es
js
ds
lock
pop
jno
adc
mov
sub
ret
popl
fldt
jecxz
repz
cltd
jns
scas
and
sbb
faddl
cli
rcrl
pop
fiadds
pusha
daa
loopne
lcall
xchg
lds
add
cld
adc
mov
sbb
adc
outsb
call
inc
out
sub
nop
xchg
mov
or
mov
adc
pop
into
cltd
pop
sbb
mov
scas
or
aas
cmp
mov
std
ret
out
insl
mov
pop
lahf
adc
imul
jecxz
jmp
or
adc
cmpsb
push
dec
loope
cmpsb
ret
imul
pop
xchg
mov
push
dec
push
in
dec
les
xchg
mov
adc
repz
inc
addr16
aam
and
sub
shrl
dec
mov
push
xchg
xchg
aad
and
fcmovnbe
jno
jl
inc
imul
xor
enter
ja
xor
in
mov
sbb
out
sub
cmpsb
jg
or
fcomps
lcall
daa
or
mov
pop
in
out
add
mov
call
gs
cmp
xor
popf
xor
mov
cli
xor
in
dec
rcl
js
addr16
imul
pop
in
mov
cmc
adc
xor
xchg
mov
xchg
aas
dec
lcall
mov
and
pushf
loope
push
iret
dec
cmp
sbb
mov
jecxz
inc
cmp
int
mov
bound
leave
addr16
fyl2x
insl
shrb
stos
and
pop
jno
movsl
fwait
and
push
push
sub
mov
arpl
fsub
nop
xchg
and
rclb
ja
lret
cmc
sub
and
xor
jge
dec
adc
cmp
jge
mov
loop
loope
mov
push
ljmp
imul
bound
dec
ficomps
fdivs
mov
cmp
and
inc
lds
xchg
push
mov
in
lcall
nop
aam
jo
and
ret
sub
addl
xor
into
arpl
imul
mov
lcall
sub
inc
add
mov
lea
roll
jmp
shl
xchg
add
fistps
push
jge
pop
push
pop
in
imul
jns
mov
push
sub
xor
loop
inc
push
loope
and
mov
lahf
jmp
imul
stos
and
out
push
outsb
pop
or
call
ja
jb
shl
test
push
out
ljmp
gs
dec
and
cli
xlat
aam
cmpsl
fmull
into
jae
xor
clc
dec
inc
fdivrl
mov
dec
and
dec
mov
fsubp
push
shl
xchg
sub
pop
sub
rcll
jle
cltd
pop
adc
sub
iret
push
out
push
out
add
jmp
sub
repnz
outsb
xchg
adc
imul
sbb
xchg
xchg
movsb
mov
cmc
imul
and
mov
xchg
sarl
sub
mov
hlt
mov
xorl
dec
lds
adc
pushf
aas
jns
or
pop
xchg
iret
sbb
insb
in
cmp
mov
mov
loop
push
ljmp
push
out
xorl
mov
pushf
mov
sarl
cmp
dec
jns
pand
jl
push
pop
mov
pop
cmp
pop
mov
pop
jo
xlat
mov
fistpll
pop
lahf
xor
ret
out
push
add
xchg
sbbl
imull
or
lcall
sub
xor
cld
and
jno
mov
sbb
out
js
inc
pop
mov
lahf
mov
or
xchg
loope
jmp
outsl
mov
add
push
cltd
push
test
scas
lods
mov
test
sub
sti
mov
sarl
je
sub
add
mov
jbe
fwait
mov
inc
test
add
test
jbe
mov
mulb
pop
sarb
aam
cltd
cwtl
add
hlt
arpl
andb
add
clc
adc
lcall
subb
test
cmp
pop
or
mov
sub
inc
clc
hlt
inc
sbb
push
in
ss
mov
repnz
adc
and
jo
adc
insl
xchg
sub
or
les
inc
mov
mov
mov
pop
mov
out
ret
xchg
loopne
mov
lods
or
and
inc
loope
adc
jb
sub
push
jmp
add
aaa
pushf
or
adc
dec
icebp
insl
push
gs
insb
add
lea
std
fwait
xor
fbstp
mov
ss
dec
mov
cli
xchg
ljmp
dec
xor
test
mov
xchg
cmpsl
mov
mov
sbb
aad
cwtl
int
cmp
xlat
cmpsl
mov
jne
movsl
rclb
loopne
push
les
xor
mov
and
lret
sub
dec
cmpsb
clc
pusha
into
adc
xchg
into
mov
xor
leave
nop
icebp
jmp
pop
ljmp
in
push
pop
xchg
bound
pop
iret
sub
outsb
out
sub
out
mov
cmp
pop
mov
fcoml
push
push
inc
xchg
adc
pop
ret
add
xor
icebp
into
int
repz
jmp
xchg
push
dec
mov
xchg
push
jb
lcall
out
pop
pop
cmp
lcall
and
orl
mov
inc
push
outsl
pusha
adc
pop
push
icebp
mov
inc
repz
sbb
cs
and
inc
dec
jno
faddl
mov
inc
fnstenv
jnp
lds
sbb
inc
xor
fidivrs
xchg
push
in
push
mov
mov
push
mov
nop
cmpb
add
dec
repnz
aad
roll
xchg
jb
mov
push
adc
mov
mov
jo
int
inc
inc
mov
into
push
lahf
adc
test
repz
xchg
sbb
in
mov
jmp
imul
add
sub
mov
scas
mov
sub
testb
mov
mov
inc
xor
sbb
decl
pop
xchg
mov
push
mov
xchg
ljmp
js
mov
inc
xor
ljmp
inc
xor
out
ret
fucomp
sbb
or
lds
push
add
js
lods
stos
test
adc
cli
test
jns
clc
loop
mov
push
cs
loop
xchg
test
inc
cld
hlt
aas
xlat
cmp
push
je
or
xchg
pop
dec
push
pop
sbb
flds
dec
aam
xor
pop
lods
pop
cmp
or
mov
cli
mov
ss
push
xchg
mov
and
cld
std
mov
adc
std
inc
and
sahf
divb
xor
movsb
dec
dec
hlt
jg
sub
mov
push
aad
pop
enter
in
xchg
xor
lods
xor
lds
dec
ret
dec
out
out
popa
mov
arpl
adc
sbb
das
cli
xor
push
push
shll
sbb
dec
pop
add
ja
jnp
jne
imul
mov
xchg
lock
in
cmp
out
pop
outsl
dec
cld
cltd
fsts
popa
inc
adc
test
sub
jl
aad
hlt
sub
jge
push
or
cmp
movsb
mov
cmpsl
nop
imul
bound
inc
es
push
mov
cs
dec
pop
arpl
jno
int3
adc
lods
inc
repnz
imul
idivb
mov
cmp
pop
shrd
or
xor
loop
dec
dec
ret
xchg
add
test
pop
dec
adc
ss
adc
insl
cmpsb
arpl
mov
lahf
sub
and
aaa
mov
lods
loopne
add
lods
xchg
movsb
repnz
push
das
call
fistl
dec
lea
cmpsb
push
sub
lock
subps
or
sub
adc
call
add
xchg
pushf
jmp
rcll
dec
fnop
mov
jae
add
adc
sbb
fs
dec
mov
mov
outsl
jmp
stc
xchg
lods
rclb
shll
jnp
sti
add
jp
out
push
sub
and
adc
push
sub
jle
jne
mov
adc
sahf
add
inc
psubusb
add
xor
push
loop
push
dec
push
fwait
scas
inc
fcomp
or
mov
xor
lcall
xchg
jnp
jecxz
dec
and
dec
int
ja
mov
and
cltd
std
ss
push
and
lahf
jl
mov
xlat
fs
loopne
mov
pop
fs
inc
add
iret
xor
xor
out
xor
inc
inc
jge
jecxz
mov
ljmp
push
and
outsb
inc
cmp
mov
push
pop
mov
xor
push
jne
mov
call
lahf
sub
mov
bound
xchg
jl
pop
push
pop
mov
pushf
aaa
in
xor
xchg
ret
shll
imul
push
cmp
aas
jl
mov
ss
adc
ret
or
add
push
push
int3
jb
pop
mov
dec
pop
popa
sbb
leavew
pusha
orb
dec
and
stc
adc
push
pop
mov
push
xchg
cmc
icebp
inc
jmp
rolb
cmp
les
andb
mov
pop
repnz
call
leave
lret
or
std
movq
cmpsl
xchg
xchg
push
aas
div
aaa
xchg
add
ficoml
iret
pop
add
leave
mov
or
test
icebp
and
dec
dec
add
les
in
movsl
mov
or
sbb
or
inc
sahf
dec
mov
call
fistps
or
aam
rclb
pushf
ret
push
inc
fldt
xchg
clc
pop
xor
lods
add
mov
cmpsb
out
fldcw
int
cmp
iret
dec
pop
stos
pop
add
clc
ss
sub
mov
add
pop
push
xor
push
cmp
jp
in
inc
scas
pop
test
sahf
mov
xchg
insl
push
sub
sub
imul
js
test
mov
cmova
fldt
scas
xchg
mov
std
pop
adc
orl
jne
aad
and
inc
arpl
xchg
pop
lret
adc
ja
js
fldt
cmp
scas
xchg
int
icebp
mov
dec
cld
movl
xchg
dec
sub
jb
insb
lea
mov
inc
in
call
fdivrs
leave
cmp
pop
adc
push
inc
mov
nop
fistps
or
mov
mov
loopne
push
movsl
or
insb
jnp
outsl
add
out
fs
imul
in
ret
sahf
pop
jo
xlat
out
adc
adcl
mov
gs
cmpsl
fwait
add
cmp
dec
mov
dec
out
out
mov
movsl
mov
add
lods
or
or
sub
push
lods
or
pop
sub
outsb
sub
sub
outsb
push
repnz
or
pop
fdivrs
paddsb
mov
adc
mov
or
int3
push
jge
jle
fdivrl
js
jo
add
push
jne
jecxz
fisubrl
jno
and
aas
dec
cmpsl
mov
mov
scas
push
jecxz
lods
dec
cmc
jmp
movsl
iret
jno
cld
idiv
es
mov
movsb
mov
cmc
pushf
sbb
jecxz
sbbl
push
sub
xor
mov
popf
ret
mov
jg
jns
jo
mov
push
push
mov
xor
mov
adc
aad
dec
mov
loop
push
shrl
mov
mov
mov
or
push
xchg
jle
daa
cltd
lods
or
inc
cmp
test
imul
mov
dec
clc
pop
or
jne
mov
das
popa
dec
mov
scas
andb
sbb
adc
ja
xchg
push
mov
mov
dec
push
push
xor
je
dec
mov
adc
inc
adc
or
mov
cmp
lea
aad
jb
fsubrs
in
xchg
lds
jl
add
mov
out
roll
fs
push
gs
add
cli
or
xchg
divb
aas
cwtl
mov
xor
ja
xchg
cmpsl
shll
in
add
mov
push
mov
and
dec
push
bound
fcmovbe
push
xchg
mov
xor
in
imulb
ds
movsb
scas
insb
pop
xchg
inc
fwait
cmpsb
cmpsl
lcall
ljmp
sti
dec
shlb
mov
hlt
inc
mov
insl
push
aam
lret
sbb
add
dec
or
mov
adc
ss
mov
fcmovbe
cmc
mov
mov
jp
pusha
fdivrs
adc
xor
pop
fwait
pusha
xor
notl
das
shrl
stos
test
movsb
lds
xor
and
xchg
lret
lcall
push
push
jmp
or
jbe
add
lcall
jns
mov
dec
fs
xchg
nop
or
movsb
inc
aam
mov
jle
and
incb
push
imul
pop
shl
sbb
loopne
push
inc
popf
js
cmp
iret
sbb
leave
push
and
sbb
cmpl
test
pop
cmp
sbb
sbb
sbb
cmp
stos
sti
jmp
addl
jbe
fcmovb
cmp
in
cmc
adc
push
pop
adc
and
pop
mov
xor
cld
repz
mov
test
mov
sbbl
clc
nop
push
fs
inc
rcrb
cwtl
repnz
int3
es
arpl
inc
cmp
out
test
push
mov
clc
cld
pushf
and
lcall
pushf
mov
in
and
adcl
sbb
sbb
sbb
ret
mov
aas
addr16
arpl
xor
dec
insl
and
les
push
or
pop
mov
jnp
xchg
stos
out
ret
insb
inc
out
lahf
lock
or
mov
movsl
push
jmp
repz
inc
shrb
aas
arpl
out
xchg
hlt
cmp
lret
and
cmp
leave
fcomps
mov
flds
mov
or
add
sub
jnp
mov
inc
or
mov
cmpsl
xchg
xchg
jle
cmp
mov
ds
outsb
sbb
inc
in
jae
sbbb
mov
bound
test
sub
loop
setns
mov
into
sbb
add
lea
and
push
ficompl
testb
inc
push
adc
add
mov
movsl
or
mov
sarl
das
stos
mov
jno
les
add
imulb
inc
inc
add
mov
adc
std
ret
lahf
xchg
paddq
push
mov
insb
out
or
lahf
test
inc
loopne
andb
dec
fldl
js
test
in
pop
mov
adc
lahf
stos
ficoml
cmp
leave
mov
inc
int
dec
adc
pop
mov
mov
dec
xlat
loope
jmp
test
add
gs
and
hlt
add
aas
push
sbb
adc
mov
lret
mov
loopne
mov
xor
stos
add
jl
inc
add
int3
andb
loop
in
mov
xchg
stos
xchg
in
ss
sub
lods
cwtl
fsubrs
adcb
add
xor
fsubp
data16
aad
and
mov
jecxz
inc
test
cmc
lcall
fstl
scas
cmp
stc
jbe
aad
adc
lds
push
popf
cli
xchg
mov
aas
fistpll
pop
jge
push
rorb
mov
mov
iret
mov
sbb
or
jb
inc
lods
pop
pop
mov
adc
lds
sub
xlat
fisubrs
scas
clc
rcrl
pop
xor
add
dec
fidivs
inc
lods
cld
lret
push
pusha
lret
inc
dec
jle
bound
add
pushl
loopne
mov
mov
fsub
ficoml
cmpsb
lods
xchg
ljmp
movsl
mov
ret
push
imul
dec
je
iret
and
ljmp
fdivrl
and
fnstcw
pop
xor
mov
ficoml
mov
dec
es
out
out
ss
ret
xchg
adc
pop
movsb
in
xor
data16
inc
pop
pushf
xchg
xor
lea
js
lret
adc
cld
ffree
dec
add
arpl
testl
inc
mov
cltd
ret
cmp
ljmp
jne
decb
ret
add
push
iret
inc
xlat
dec
into
test
mov
lods
sbb
decb
jg
inc
cmp
out
mov
adc
xchg
gs
in
mov
insl
insb
jmp
push
adc
mov
sbb
pop
test
insl
mov
dec
fmuls
mov
lods
xchg
ss
cmp
ret
sbb
pop
fmul
dec
fldl
loopne
dec
push
pop
arpl
pop
in
dec
cmp
daa
fnstcw
lods
mov
adc
mov
es
cmp
neg
xchg
sub
lcall
push
ds
jnp
fiadds
dec
sarl
inc
xor
mov
dec
repnz
dec
leave
sti
stos
shrl
lret
xchg
aaa
dec
fs
out
sub
or
inc
sti
mov
dec
mov
data16
decb
add
pusha
and
test
div
ror
orb
jecxz
sbb
mov
sbb
mov
dec
add
fwait
xlat
stos
movsb
and
mov
sbb
xchg
inc
dec
iret
or
test
push
das
dec
push
stos
push
xchg
pop
stos
les
and
mov
mov
movsl
add
lea
sub
push
and
mov
sbb
iret
cmp
faddl
repz
rcll
mov
push
setae
mov
dec
dec
cwtl
mov
rcrl
or
aaa
clc
pop
xchg
push
lahf
add
int3
jg
jg
inc
jbe
lret
out
faddl
sub
add
out
sbb
jbe
mov
sub
mov
pop
adc
pop
push
inc
cltd
daa
mov
push
xchg
and
loopne
imul
push
pop
xchg
in
push
cmp
out
rclb
dec
mov
lea
and
insl
pop
cmpsb
xchg
sahf
push
sysexit
divb
mov
jmp
sub
sbb
ss
hlt
add
stc
mov
adc
sbb
shl
daa
push
mov
fs
adc
adc
inc
ljmp
mov
aam
sub
addb
je
cmp
push
inc
daa
loop
sbbb
push
jg
xchg
xchg
dec
jp
clc
mov
mov
jecxz
fs
loop
mov
sti
sahf
mov
cltd
les
xor
dec
push
pop
test
fs
jnp
sub
add
adc
mov
rorb
arpl
jae
mov
jae
in
clc
fdivrs
pop
test
pop
jmp
out
jp
std
cmp
loop
repnz
jecxz
xchg
adc
inc
shr
cmp
movsb
jne
push
loopne
xchg
and
aas
and
mov
fptan
add
in
repz
mov
das
lret
and
aad
in
in
mov
cmp
mov
jne
bound
rcrb
ss
decb
mov
pop
adc
sub
or
mov
outsb
dec
xchg
test
xchg
ds
outsb
cmpsl
push
sti
pop
xor
xchg
test
jp
sbb
or
mov
into
fucomip
loop
inc
jp
andb
test
adc
xchg
mov
jo
inc
stos
fisubrs
mov
int
mov
popa
jge
inc
data16
int3
add
pop
ss
stc
loopne
pop
xchg
lock
jge
mov
xchg
push
mov
jns
stos
out
cmpl
dec
cmp
mov
and
insb
cmovno
sub
add
cmpsl
cli
loope
push
pop
subl
ret
aas
ret
imul
shll
cmp
add
xor
mov
sti
leave
fcoms
fcompl
js
adc
sbb
xor
fwait
nop
dec
outsl
fs
mov
enter
mov
fisubrl
and
pusha
sar
ljmp
add
lret
cmpsl
hlt
jmp
pusha
adc
mov
shll
orb
jmp
xorb
icebp
enter
or
mov
dec
test
mov
shr
outsb
dec
repz
sbb
rolb
xchg
mov
nop
mov
popl
push
inc
jecxz
adc
repz
aaa
out
push
xchg
pusha
les
or
shrb
or
ret
add
mov
movsl
xchg
les
add
add
scas
mov
jmp
mov
outsl
mov
sbb
hlt
lods
xchg
movsb
or
int
imul
in
cmpsb
icebp
adc
cmp
mov
xchg
fwait
fists
pop
scas
cld
gs
into
movsl
jle
pop
push
test
lret
aas
jns
mov
cmp
div
sub
stc
dec
popf
les
test
les
sub
push
mov
lcall
nop
mov
inc
cmp
mov
mov
mov
mov
xchg
push
fstpt
loop
cmpsl
mov
stos
inc
inc
jp
int3
jnp
jle
or
push
fisubrs
fwait
jb
jp
sub
fmull
hlt
mov
mov
aad
mov
fidivs
inc
sub
sarl
xor
mov
aad
pushf
mov
adc
enter
out
mov
xchg
xchg
adc
stc
add
add
addb
push
adc
dec
pusha
push
sub
push
jge
jecxz
testb
fistl
pop
push
or
leave
jo
js
orb
mov
sub
out
sub
icebp
jp
pop
pusha
adc
inc
ret
sub
jecxz
fs
fidivrs
push
xchg
add
fsubrp
cltd
jle
push
or
jae
xor
cmp
xchg
jb
cwtl
xchg
test
out
and
push
stc
rcr
mov
outsb
pop
out
ret
sbbl
bound
and
pop
data16
pop
in
inc
std
mov
xchg
mov
ret
fldenv
sub
mov
dec
inc
fisubrl
out
xchg
cmp
xor
lods
scas
add
repz
in
dec
leave
imul
popa
movsl
es
xchg
syscall
shr
fs
fstl
pop
addr16
or
imul
push
lock
mov
xchg
es
add
lock
test
in
fmuls
mov
scas
notl
out
jnp
inc
in
int
adc
rcrb
pop
std
jno
push
lods
pushf
add
icebp
pusha
dec
imul
push
xchg
sbb
stc
add
out
int
rolb
jg
push
fstps
inc
dec
lahf
mov
hlt
cmp
mov
xchg
or
std
in
jmp
xchg
push
push
push
call
jne
fnstenv
rcrb
stos
sahf
dec
mov
mov
cld
test
popa
fcomps
bound
fsts
out
xor
sub
mov
outsb
mov
mov
lret
jae
stos
test
jle
jl
mov
xor
xchg
out
popa
es
ss
mov
popa
jl
cltd
mov
jl
loope
xchg
push
cmpsl
mull
cmp
xchg
xchg
xchg
cmc
push
push
mov
jmp
pop
stos
push
dec
shrb
inc
lret
mov
loope
orb
xor
stos
data16
push
je
adc
xchg
jnp
jle
mov
aam
jmp
mov
and
pop
pop
int3
push
cmpsl
jo
bound
cmp
inc
movsb
xchg
ja
leave
sbb
out
jbe
sahf
jne
sbb
popw
xchg
movsb
lods
dec
xor
js
xchg
mov
inc
adc
jle
or
clc
dec
mov
cltd
lds
xchg
xchg
int
leave
mov
mov
inc
nop
xchg
pop
daa
loopne
inc
bound
imul
es
pusha
test
fwait
adc
imul
mov
inc
mov
and
lahf
aas
loopne
or
xor
push
mov
push
push
dec
fisttpl
clc
dec
sbb
sti
rcr
sahf
push
mov
lea
lods
cltd
xchg
addr16
pushf
sbb
sub
or
xchg
out
lahf
xor
lods
out
js
aam
and
inc
sub
out
enter
adc
dec
push
in
adc
aaa
popf
jmp
inc
sbb
imul
aas
xchg
shlb
int3
inc
gs
cmc
add
adc
mov
mov
fmull
xlat
or
and
fildll
in
out
mov
jge
mov
pop
lds
xchg
loope
pop
and
movsl
int
cltd
or
jle
sub
push
or
sbb
push
adc
leave
outsl
dec
hlt
mov
sub
rclb
aam
mov
shlb
mov
pop
int3
scas
repnz
mov
loop
mov
rcll
enter
cwtl
cltd
data16
push
std
cmpsb
pop
push
mov
adc
into
sti
sbb
insb
ja
adc
jp
sahf
mov
xor
adc
les
in
aaa
pop
lahf
xchg
fisttpll
enter
sti
jl
fwait
push
or
in
sbb
mov
fildl
fdivrp
aas
inc
push
pusha
jge
xchg
and
ss
icebp
jge
xchg
push
pusha
jns
lds
adcl
inc
xor
mov
mov
xchg
inc
xchg
lods
bound
jne
pop
cmp
popa
in
adc
imul
mov
pop
arpl
xor
inc
jns
fs
sti
bound
lock
mov
iret
adc
cmp
push
sbb
popf
out
test
into
cmp
pop
in
sub
or
testl
js
outsl
fstl
sbb
fs
pop
xlat
adc
cli
imul
lds
mov
jmp
inc
push
out
shlb
push
add
ja
fwait
add
out
sbb
inc
and
mov
sbb
pop
lret
push
aam
loope
lret
int
and
in
outsb
or
fsubrl
mov
icebp
jecxz
mov
aaa
pushf
dec
mov
je
xor
jno
cwtl
mov
xchg
ja
dec
lahf
dec
out
les
call
daa
repz
sar
test
cmp
pop
mov
cmc
fisubs
arpl
es
inc
mov
insb
out
arpl
dec
out
xchg
mov
vpperm
ret
mov
in
jmp
push
scas
xor
sbb
insl
adc
insl
shl
imul
push
or
jg
add
push
jp
fistps
mov
and
test
js
out
or
inc
and
add
es
out
lahf
mov
add
into
pop
push
mov
mov
mov
inc
pushf
inc
rcr
mov
out
mov
push
pop
leave
mov
loop
lret
push
daa
adc
pop
add
pop
cmpsb
mov
inc
cwtl
jg
daa
sub
es
pop
dec
mov
inc
stos
in
stos
adc
jmp
fcomp
mov
shll
push
addr16
jnp
inc
xchg
mov
sti
mov
add
and
lock
inc
movsl
rcll
sbb
negl
sbb
imul
add
out
push
sub
sub
inc
icebp
fld
push
push
sub
mov
sub
popf
mov
dec
mov
jmp
outsl
lods
inc
pop
xchg
sbb
or
pop
inc
insb
xchg
dec
outsl
test
mov
jbe
out
enter
fldenv
sbb
outsb
push
clc
and
ret
add
dec
mov
push
scas
inc
ljmp
cmpsb
fmull
arpl
mov
hlt
jl
dec
push
in
cmpsl
insb
popa
es
movsb
xor
out
rcrl
sti
or
daa
sbb
mov
xchg
cmpsl
pop
mov
fdivrl
push
adc
push
psubq
pop
jbe
xchg
addr16
out
dec
test
cmp
adc
inc
dec
lret
inc
jle
sbb
out
push
or
lods
pop
sbb
jg
push
es
insb
movsl
int
aas
ds
mov
jge
mov
inc
xchg
mov
in
scas
xor
stc
orb
decb
loope
mov
xor
dec
sub
inc
mov
sub
mov
out
test
add
fs
add
fidivrl
sub
std
push
repnz
repnz
sub
popf
call
popa
pop
jl
add
push
sub
dec
jle
shll
scas
insl
sbbb
daa
ret
aad
xchg
mov
add
cs
bound
insb
and
add
jmp
jp
pop
enter
and
das
lea
push
xchg
loop
and
in
ret
cmp
out
push
jns
pushf
aad
loopne
jno
mov
lret
sarb
fcmovnb
out
mov
shr
mov
mov
sub
mov
loope
movsl
cmp
mov
adc
lea
sets
sahf
xchg
xchg
cmp
inc
jp
push
push
mov
ja
insb
aam
mov
mov
xor
in
xor
das
mov
xor
pop
negl
arpl
stos
cmp
into
and
xchg
rcll
testl
test
scas
pop
mov
sub
js
cltd
pop
sub
addl
das
inc
push
enter
add
push
in
mulb
xchg
lret
cmp
sbb
adc
stos
jb
loop
cmp
xchg
add
add
hlt
jge
sbb
add
fidivrl
xor
cmp
pop
or
pushf
xor
mov
inc
and
out
outsb
and
add
popw
js
jle
rcll
in
mov
dec
xrelease
cld
ret
inc
test
push
pop
push
cltd
mov
fadds
mov
jge
lock
push
pop
cld
mov
and
dec
push
xchg
loopne
fiaddl
subps
lds
mov
dec
xor
mov
pop
hlt
push
mov
test
mov
xor
jecxz
xor
in
xlat
jo
clc
pop
insl
rcrl
popa
sub
mov
aas
cmpsb
xchg
jnp
lds
sub
dec
push
or
aaa
test
mov
xor
insl
mov
adc
popa
test
and
call
pop
xchg
insl
pusha
leave
fists
das
ja
mov
jo
pop
mov
and
punpcklwd
fsubl
or
int3
subb
lea
xlat
lds
dec
ret
push
leave
addr16
jbe
mov
ret
xlat
js
adc
inc
test
pop
mov
mov
or
push
adc
stos
int
popf
dec
sbb
rcrl
mov
xchg
and
dec
push
mov
shr
repz
push
mov
mov
adc
and
mov
jnp
aam
aaa
sub
add
inc
add
mov
push
push
cmp
push
xlat
and
es
scas
loope
addr16
jge
or
aad
jp
lcall
add
outsl
ljmp
adc
aaa
fistl
shlb
jnp
add
js
outsl
cmp
scas
and
std
dec
ret
in
out
mov
push
push
mov
sub
push
mov
xchg
ret
xor
es
shr
ss
xor
insb
ja
sbb
adc
gs
jl
fldl
lds
stos
cltd
sub
cmpb
xchg
add
ja
dec
push
orl
sbb
push
jnp
dec
mov
jle
mov
aam
sub
arpl
and
out
push
loop
mov
mov
push
mov
int3
cmpsl
shrb
jae
xchg
inc
push
inc
scas
lret
xchg
aam
xor
outsl
cmpsb
mov
loop
jmp
cmp
mov
jnp
movb
xor
add
in
loopne
pop
pop
sbb
scas
and
cltd
pop
pop
ret
xor
in
lahf
or
fsubl
fldenv
jns
scas
mov
ret
orl
cwtl
bound
push
cmp
sub
mov
push
mov
xor
or
jle
dec
add
dec
push
movntq
xchg
nop
and
addr16
aas
into
mov
jae
ja
stos
cmp
pop
icebp
scas
sub
pop
pop
subl
mov
mov
xor
ds
dec
jge
or
sbb
push
inc
sub
icebp
sub
mov
xor
fidivrs
repnz
or
adc
test
jne
sbb
push
pop
cmpsb
pop
mov
add
sarl
or
das
jae
ja
aaa
sbb
dec
lret
ss
pop
mov
mov
rolb
fdivrl
cmc
sbb
js
jnp
mov
or
paddq
xor
ljmp
xor
add
jo
sub
gs
inc
adc
imul
cmp
dec
cmp
lea
or
mov
sbb
and
sbb
inc
lret
jp
leave
add
jecxz
lea
xor
ret
mov
div
and
cmp
clc
sbb
jo
repnz
and
popa
mov
pop
pop
lods
js
pop
jno
push
mov
pop
mov
xlat
icebp
adc
push
cmc
mov
lods
adc
mov
push
sub
push
add
sbb
mov
xchg
jne
inc
mov
cmc
fsubs
push
adc
sbb
aad
cmp
adc
sub
or
ficoms
pop
jnp
stc
mov
jns
cs
mov
or
mov
bound
rcrl
addl
ljmp
push
and
pop
movsl
fldt
jge
sbb
rorl
push
loop
sbb
ret
jmp
jae
call
gs
xchg
xchg
mov
xchg
mov
mov
ud0
jg
xchg
push
dec
or
cs
mov
ljmp
sahf
out
leave
ud2
adc
xchg
lcall
das
xor
into
sub
add
adc
jmp
or
loopne
mov
pop
adc
das
out
rcll
insl
xor
mov
data16
pop
fsubrp
mov
push
lret
scas
adc
cltd
ja
test
iret
sub
aas
adc
or
and
pop
push
jmp
loop
cmpb
mov
out
mov
jo
push
pop
sti
rcl
dec
dec
jecxz
xchg
les
push
mov
out
jl
mov
and
or
sbb
rcl
and
test
aas
inc
ds
jae
clc
xor
jl
sbb
fs
pop
mov
push
dec
xor
shl
ss
enter
popf
sub
adc
adc
shrl
in
jecxz
inc
push
xchg
push
dec
rcll
xlat
push
insl
mov
int
cmp
pop
cmpsl
aaa
or
outsb
or
dec
cmp
in
jmp
fsubs
je
add
cld
mov
sbb
add
mov
cmp
loop,pn
xlat
test
mov
jl
adc
xchg
dec
cmp
test
loopne
xchg
lahf
add
insl
scas
repz
movsl
scas
in
dec
pop
roll
adc
movl
aaa
ret
cmpsb
fiaddl
aaa
mov
mov
mov
inc
or
scas
or
mov
lods
mov
je
and
insl
out
ljmp
push
xchg
test
pusha
popf
cmp
decb
cwtl
cmc
and
ja
xor
shll
inc
pop
dec
enter
fisttps
fbstp
loopne
xor
xor
inc
lcall
aad
test
fcmovne
xchg
or
and
pop
aad
jp
test
pop
mov
add
clc
sub
addl
inc
adcl
scas
mov
pop
imul
cmp
andl
xchg
pop
xor
cltd
push
mov
push
jl
xrelease
loopne
mov
mov
xchg
fwait
pop
pop
and
push
dec
sub
or
fs
into
push
insl
mov
push
sub
cmpsb
jbe
lods
outsb
jecxz
les
xchg
fimuls
int
js
cmp
cmp
push
xchg
shlb
out
mov
xor
sub
popa
xor
outsb
pop
insb
out
in
ret
jne
fs
dec
test
cmp
mov
pop
arpl
jecxz
test
ja
and
xchg
icebp
push
out
ret
xchg
cmpsb
andb
rcrl
out
bound
sub
cld
or
sar
gs
movsb
imul
xchg
or
jle
xor
mov
enter
dec
sbb
mov
sub
and
inc
fwait
sub
ficoms
rorb
out
sbb
ds
mull
pop
psllq
inc
sbb
inc
clc
pop
out
movsb
cmp
dec
sbb
cmp
clc
cmp
icebp
ret
mov
flds
aam
in
loopne
data16
pop
and
es
aam
mov
push
lods
fists
mov
cli
leave
pop
rorb
add
and
out
mov
pop
sbbb
xor
fidivrs
addr16
test
dec
ret
jl
test
jle
push
jge
enter
pop
dec
in
aas
das
shlb
ja
dec
xor
xchg
cmp
adc
les
test
jle
loop
pushf
sahf
add
idiv
sub
sub
test
std
sbb
jp
pop
sbb
push
mov
mov
insl
ret
jle
test
enter
dec
adc
in
pop
out
fdivs
cwtl
sub
loopne
daa
cmp
hlt
xchg
movsl
popa
cmpsb
cwtl
mov
dec
pop
pushf
mov
sbbl
pop
pop
adc
jl
or
cmpsl
and
jecxz
cli
movsb
mov
inc
cmpsl
subl
add
push
loopne
adc
repz
sbb
fidivrl
jl
in
push
sbb
push
or
adc
es
negl
push
sbb
add
cmp
je
push
push
leave
fmuls
in
je
mov
mov
inc
jle
into
adc
pop
cmp
cwtl
movsl
push
stos
mov
mov
pop
adc
and
sti
mov
sub
test
aas
xchg
inc
arpl
dec
shll
mov
add
loope
pop
mov
dec
aas
in
mov
arpl
adc
sbb
pop
testb
inc
shl
and
das
cmc
cmp
test
pop
jno
sub
dec
sub
sbb
lahf
mov
js
pusha
adc
pop
pop
or
adc
pop
insl
pop
fcompl
sbb
js
jnp
mov
adc
test
repz
addr16
jno
lahf
pushf
cld
inc
shlb
aas
and
sahf
mov
rcrb
test
loopne
and
ja
iret
test
lds
repz
jmp
jmp
mov
add
push
dec
push
and
add
js
mov
lret
mov
ljmp
jecxz
jnp
push
stos
in
test
push
negl
pushf
loopne
mov
test
test
mov
sub
or
mov
hlt
add
fwait
and
mov
scas
and
mov
cmp
jg
lods
dec
roll
dec
sbb
test
lods
leave
dec
scas
xchg
cmpsl
into
fs
xchg
idivb
mov
push
rcll
and
shrb
inc
pop
inc
arpl
addr16
cmp
stos
cmp
dec
in
jl
mov
adcl
scas
ret
dec
jnp
insb
jp
in
gs
xor
fsubrs
ljmp
pop
loope
adc
int
pop
lcall
inc
sub
mov
call
push
sub
jg
nop
adc
arpl
dec
push
cmp
pop
imull
bound
jl
mov
add
addr16
or
inc
cli
push
xchg
pop
addr16
into
mov
dec
stc
pop
pop
add
mov
jnp
sub
insl
popf
call
push
cmpsb
iret
pop
pop
imul
icebp
out
lock
stc
int
sbb
rep
cmp
arpl
add
mov
leave
aam
out
push
aaa
fisubrl
enter
jmp
mov
inc
mov
sti
call
add
out
push
sbb
pop
fcomp
sbb
orl
push
xchg
xchg
dec
mov
add
adc
xchg
aaa
dec
bound
cld
add
subl
lock
jmp
jp
pop
orl
cmp
cmp
lock
inc
mov
inc
lea
and
pop
insl
jge
in
and
pop
mov
cmpsl
dec
repnz
jbe
rcrb
xor
lds
aad
mov
sbbl
loope
cs
cmp
loop
and
xchg
xor
sub
push
mov
jbe
movsl
loop
mov
mov
daa
mov
xchg
int
mov
outsb
out
stos
mov
repnz
sbb
in
jle
insb
mov
jb
mov
rorl
es
lret
pop
pop
push
mov
cli
mov
xor
jno
xchg
pop
cmp
mov
adc
xchg
adc
popa
push
jbe
das
lcall
mov
jl
and
mov
rorl
out
outsb
test
mov
adc
cmp
into
jbe
loope
lcall
in
inc
mov
xchg
out
cmp
scas
insl
lcall
pusha
mov
mov
cld
dec
mov
fdivr
icebp
add
mov
jbe
stc
xchg
xchg
jle
icebp
push
into
sbb
and
add
push
xorb
scas
aam
sub
xlat
cld
mov
les
pop
cltd
loop
mov
cmp
or
sarb
mov
aam
out
sub
shr
cmp
sub
cmp
push
xchg
fwait
ret
cmpsb
dec
je
lods
inc
mov
adc
roll
ret
aas
icebp
push
popa
shrw
out
andl
test
cli
and
dec
ljmp
cwtl
std
lock
enter
lock
jg
fisubs
sub
pop
ljmp
fcoml
or
out
jbe
cmp
ja
das
mov
aas
rolb
mov
xor
loop
scas
mov
fcoml
or
subb
scas
and
mov
jno
fnstcw
jno
push
mov
push
or
repz
jbe
push
ds
xchg
fadds
inc
leave
pop
sahf
mov
das
cmp
aam
cld
mov
loope
test
jbe
les
fsubl
inc
cs
jecxz
adc
addr16
in
inc
cmpsb
mov
or
or
test
jbe
mov
xor
cmp
fbld
add
and
and
mov
add
adc
and
pop
adc
xchg
mov
lods
test
daa
xor
push
jae
inc
dec
outsl
push
icebp
leave
in
or
mov
enter
popa
and
pop
push
fadds
insb
jl
add
sbb
jno
inc
sahf
sbb
pop
fs
jo
cmpsb
loope
mov
xor
push
pop
cmpl
xor
mov
adc
arpl
pusha
in
outsl
pop
or
pop
push
sub
push
push
mov
and
sub
sub
cmpsb
cmp
mov
lcall
pop
xchg
js
arpl
and
out
mov
scas
and
out
mul
sub
outsl
pmaxsw
push
lods
mov
cmpsb
xchg
fidivl
sub
jp
pop
aaa
push
sub
add
jb
xor
or
xor
clc
jmp
aaa
dec
daa
inc
cwtl
icebp
push
pop
jmp
addr16
hlt
or
in
cld
rcl
loop
out
arpl
dec
into
jns
cmpsb
adc
out
pop
cmp
mov
movsb
push
xchg
sub
add
xchg
dec
sbb
out
fmuls
dec
push
cmpsb
pusha
xchg
fisubrl
gs
ljmp
mov
arpl
cltd
jbe
out
jecxz
call
mov
add
fldt
mov
pop
jg
pop
bound
gs
xchg
in
lock
and
or
loope
ror
mov
arpl
into
dec
loope
int
mov
lds
add
jo
push
test
xchg
cwtl
rcrl
push
js
sahf
sub
adc
mov
mov
in
repz
or
cmc
push
iret
orl
out
pop
ss
call
push
mov
xor
aas
push
lock
push
or
xchg
out
push
add
push
cmp
dec
cltd
lods
lods
lret
mov
sahf
xchg
addb
adc
inc
aad
cmp
in
mov
cmp
cwtl
push
push
inc
loop
add
push
jmp
stc
xor
sub
adcb
inc
mov
insl
loope
adc
vcvttpd2dqy
jns
js
loop
jb
pushf
and
loope
pop
adc
divb
mov
xchg
sbb
data16
mov
jno
out
lret
inc
mov
or
addr16
xor
push
mov
decl
sbb
fcomps
jae
imul
adc
push
aaa
aaa
aaa
push
ret
in
imul
cwtl
jp
add
xchg
enter
xor
loop
mov
loope
xchg
mov
jae
xor
outsb
stos
mov
xchg
addl
dec
lret
mov
pop
sub
fwait
sub
ljmp
insb
xor
addr16
pop
cs
sbb
dec
jmp
or
lods
dec
xchg
push
mov
adc
sti
into
fdivs
dec
stos
lret
push
push
stos
lods
dec
lahf
xor
jp
iret
add
cwtl
mov
cmp
movlps
cmp
pusha
sahf
cmp
adc
or
lods
add
repnz
sub
fimull
mov
push
icebp
ret
test
sbb
push
cmp
or
mov
and
and
sub
or
out
es
leave
or
ficompl
adc
jns
out
sti
or
jbe
in
cld
sbb
xchg
mov
sub
outsb
into
sbb
jmp
cmp
or
mov
scas
cmp
shrl
in
xor
pop
test
ljmp
imul
jo
cmp
popf
lods
arpl
andl
inc
sub
pushf
sbb
sub
xor
inc
popf
xchg
fsubrl
dec
mov
adc
and
fldl2t
mov
out
push
mov
out
adc
jmp
sub
repz
insl
aas
push
jl
xchg
lcall
cmpsl
cmpsl
jno
push
ret
orb
aaa
out
add
cmp
pushf
enter
push
lock
and
add
mov
in
inc
add
inc
jmp
es
push
jno
aaa
scas
js
aad
subb
adc
or
cmpsl
mov
fnsave
push
aam
outsb
popa
xchg
shll
xchg
mov
int3
and
add
xor
imul
mov
imul
fwait
dec
dec
jbe
cmp
es
mov
jge
or
pop
inc
xchg
sbb
mov
lcall
push
adc
pop
dec
xchg
into
iret
and
inc
jp
push
insl
insb
jae
stos
dec
mov
mov
mov
outsl
stos
sbb
iret
dec
test
and
add
inc
add
popa
mov
lea
xchg
js
ja
dec
push
gs
sbb
loop
pushf
push
shl
mov
fadds
mov
mov
mov
and
in
sbb
sub
ja
cs
jae
mov
loope
inc
sti
test
inc
nop
push
outsb
pop
hlt
shl
lods
sbb
lds
popa
out
push
ret
dec
jns
mov
jae
fbld
jno
shlb
jp
sbb
cmpsb
cmp
shl
mov
mov
xor
sbb
mov
outsl
data16
xchg
push
out
test
aas
jl
fdivr
dec
inc
and
pop
scas
xchg
imul
cmp
push
loopne
nop
stos
das
jns
dec
dec
pop
and
ret
aas
pop
int3
mov
or
not
adc
sahf
mov
mov
xchg
dec
sbb
sbb
jg
addb
cmp
std
inc
lds
out
addr16
nop
outsl
dec
mov
push
xchg
xor
sti
ljmp
ret
xchg
inc
or
xlat
sbb
jmp
adc
fistps
mov
pop
sub
cmp
je
mov
daa
jne
inc
lods
fsubs
inc
inc
sbb
push
stos
pop
pop
hlt
cwtl
imul
pop
or
fs
adc
push
xor
adcl
std
adc
ss
loop
data16
pop
fucomi
xor
out
push
int3
push
negb
sub
scas
push
xor
jecxz
test
xchg
bound
pop
lret
mov
push
cmp
int
add
cmc
repnz
repz
std
xor
mov
push
out
or
xchg
sub
jle
mov
sti
push
pop
pop
fmul
pop
int
insl
stos
in
mul
ret
mov
enter
add
mov
fimuls
and
jns
test
push
out
push
jp
cld
sbb
rol
cmpsl
sub
xchg
xchg
mov
xchg
push
loope
call
push
mov
xor
sub
out
imul
daa
or
pop
scas
cwtl
pop
jo
cli
cmpsl
lods
aaa
shl
mov
dec
arpl
ficoml
mov
or
lods
lcallw
fildll
mov
gs
push
pop
lret
insb
pop
arpl
aam
mov
popa
push
mov
rclb
dec
add
add
mov
cmpb
push
pop
cwtl
mov
dec
bound
dec
imul
imul
or
push
inc
je
jl
sbb
jae
int3
lret
iret
or
push
movsl
xchg
push
out
fs
in
sub
mov
rcll
inc
mov
pop
ja
or
aam
loopne
mov
fwait
push
int3
jnp
insl
mov
in
es
mov
pushf
mov
mov
gs
repz
enter
ja
or
xchg
jno
jb
dec
repnz
and
in
mov
sub
jae
daa
push
aas
sbb
sahf
cmp
cmp
addr16
loopne
xor
sub
push
push
das
decl
dec
inc
stc
mov
fbstp
mov
ror
and
push
jbe
outsl
inc
xchg
and
adc
sub
and
leave
pusha
orl
test
xor
je
and
jecxz
jb
jbe
mov
aaa
faddp
adc
cmp
subb
fisubrs
fstps
in
les
test
push
test
lock
sti
ja
mov
dec
cs
jbe
in
cs
adc
insb
in
xchg
mov
bound
add
pop
aad
inc
adc
es
xor
xor
mov
sti
cltd
jbe
xchg
dec
pushf
mov
mov
xor
imul
sub
jge
mov
adc
or
cmp
mov
cmp
xchg
shrl
std
jle
out
shll
lahf
cmp
or
outsb
mov
inc
dec
pop
push
popf
sbb
into
inc
mov
cmpsb
adc
dec
cmp
pushf
push
sbb
mov
cmpsl
mov
xor
xchg
cwtl
imul
mov
test
xor
fistl
insl
jmp
or
pop
xchg
movsb
clc
and
pop
out
pop
lret
stc
hlt
xchg
pop
lods
push
in
adc
jg
push
test
dec
xor
popf
lahf
dec
enter
adc
mov
lock
loop
xchg
adc
jecxz
clc
cwtl
popf
inc
cmpl
add
adc
pop
adcl
lahf
das
sbb
cmp
addl
jno
inc
push
push
divb
or
cli
mov
loope
jecxz
xchg
push
mov
push
movsl
inc
sbb
adc
cmp
or
fisubl
sub
push
xor
iret
lcall
mov
push
das
outsl
mov
in
adc
xchg
test
mov
popf
sbb
icebp
test
sub
add
fisttps
and
sarl
mov
inc
adc
rcr
lock
cmpsl
ret
push
call
shll
hlt
call
imul
push
mov
in
mov
lock
jo
push
leave
mov
xor
sbb
pop
lods
outsb
test
cld
mov
ret
in
pop
jo
adc
out
fdivrs
pop
jg
mov
add
add
inc
inc
arpl
jl
mov
mov
cli
dec
mov
ljmp
sbb
pop
leave
outsb
bound
iret
jno
adc
loopne
jae
jns
adc
xchg
mov
loope
mov
incb
add
xchg
mov
fsubr
aas
iret
fwait
or
ret
dec
test
lock
popf
sub
sti
adc
adc
pusha
or
dec
nop
les
dec
jne
test
push
adc
ds
icebp
out
pop
mov
and
xor
fidivl
gs
lret
ss
xor
ret
pop
or
dec
jo
in
outsl
or
call
xchg
sbb
lahf
adc
pushf
mov
sbb
mov
push
push
mov
adc
sbb
jo
sarl
repnz
call
jl
in
inc
int3
leave
mov
in
dec
fiaddl
jne
sbb
xlat
rorl
inc
lahf
mov
popa
int3
jl
mov
mov
pop
adc
jle
mov
aam
cwtl
sbb
ret
or
cs
mov
jmp
dec
fs
outsb
push
push
xor
or
imul
mov
sbb
sbb
sbb
inc
add
jbe
push
sub
add
inc
jle
lret
pop
xor
cmpsb
clc
fwait
pop
cmp
movsb
icebp
std
jle
aam
insl
push
mov
mov
shlb
mov
fsubs
push
dec
notl
pop
scas
jnp
xchg
fildll
push
leave
adc
push
test
test
push
in
out
sarl
or
xor
jp
xor
dec
lahf
xchg
push
adc
rorb
out
das
adc
cmp
sbb
push
sbb
jne
movsl
dec
stc
inc
jge
clc
or
mov
movsl
jns
cmpsb
mov
test
ret
or
sub
dec
cmpsb
cltd
inc
leave
push
sarl
jmp
sub
ret
fnsetpm(287
scas
jno
jo
jo
mov
in
repz
orb
arpl
imulb
mov
mov
add
ds
xchg
jbe
add
mov
xchg
or
mov
ret
lahf
popa
pop
dec
and
testl
lods
lcall
or
cmpsb
cmp
pop
dec
clc
fdivrs
aam
push
jnp
push
mov
ret
fsubrs
jno
pop
lahf
add
dec
cmp
xor
out
jo
ret
scas
mov
movaps
adc
aas
pop
lds
scas
lock
cmp
cwtl
xchg
cmp
repz
sahf
xchg
xchg
push
sbb
mov
test
rcl
sub
lock
ret
dec
push
leave
add
lret
out
pop
pop
xchg
pop
mov
xor
je
cmp
in
dec
cmp
mov
mov
jno
pushf
call
mov
push
mov
cli
sbb
pop
jg
cmp
jnp
and
xchg
shlb
lahf
push
ret
xchg
adc
enter
sub
push
jae
dec
cmp
mov
xchg
mov
push
ja
dec
popf
in
inc
cmpb
cwtl
or
sub
pop
push
in
dec
sahf
cmp
mov
cmc
outsb
fdivs
mov
pop
adc
imul
sbb
into
insl
jno
xor
lds
mov
push
repnz
push
inc
test
test
push
rolb
dec
pusha
insl
andl
jo
push
or
jno
jne
out
mov
lods
mov
adc
sub
ret
and
push
scas
add
inc
push
insb
mov
and
scas
push
and
imul
push
jmp
es
fcomp
pop
adc
ret
xor
xchg
sahf
in
mov
push
push
bound
lcall
xor
das
int3
in
mov
and
sahf
add
add
addl
lock
inc
push
cli
pop
lods
clc
mov
js
in
inc
in
add
inc
rcl
xor
jle
rolb
out
fiaddl
scas
dec
add
in
sbb
iret
add
shlb
or
divb
mov
mov
xchg
mov
repz
imul
sub
jl
mov
xor
cmpsb
jae
pop
cmp
lcall
sti
outsl
es
lcall
sbb
cmpsb
lahf
push
xchg
lahf
mov
rorb
push
inc
sbb
xchg
clc
mov
and
jne
shll
cmp
sbb
imul
push
adc
cwtl
cs
cs
int3
add
psrlw
dec
test
jno
push
imul
cmp
jnp
jmp
gs
insb
xchg
outsb
xchg
dec
rcrl
out
les
jg
mov
nop
pop
ret
xchg
fimuls
clc
cld
push
into
sub
jb
aaa
xchg
or
mov
call
mov
fcmovnbe
and
mov
pushf
jne
xor
dec
pop
inc
aas
xchg
adc
inc
sub
cmp
sub
pop
cmp
sbb
js
pushf
and
jns
xchg
or
dec
outsl
jbe
enter
sbb
leave
fdiv
adc
and
fnclex
cmp
add
and
or
push
nop
and
fs
arpl
daa
pop
push
fnstenv
ljmp
mov
icebp
pop
lcall
aam
push
aaa
xchg
xchg
jl
in
sbb
into
add
ficoml
add
inc
mov
push
rcll
and
jge
and
adc
pop
lds
or
inc
inc
mov
mov
jge
add
loopne
repnz
mov
pop
lods
push
xor
sub
test
inc
loope
mov
jl
xchg
xchg
mov
iret
jne
stc
in
and
push
pop
cli
dec
insb
aaa
aas
test
lds
rep
xchg
xchg
pop
test
nop
xchg
mov
or
stc
divb
shll
nop
mov
out
cld
adc
daa
call
and
sub
dec
sbb
cmpsl
inc
adc
cmpsl
xor
jecxz
mov
mov
dec
cs
jo
lea
xor
add
add
mov
setl
js
jne
aas
lcall
popa
out
add
adc
mov
psubb
icebp
xor
pop
outsb
jmp
mov
jo
lcall
test
test
lods
mov
sub
mov
jmp
rcrl
xor
adc
mov
jecxz
pop
imull
jl
outsl
test
pop
mov
adc
dec
inc
sub
mov
sub
loope
aaa
stos
fs
loope
push
xor
loope
lock
inc
jle
imul
or
sbb
in
inc
in
and
inc
push
lock
sbb
or
sub
imul
shl
mov
xchg
inc
mov
loopne
xchg
sarb
jmp
jge
pop
push
cld
in
dec
loopne
sub
cmp
ret
iret
hlt
fwait
mov
push
mov
jecxz
test
add
sub
pop
xchg
jmp
adc
cld
sbb
lds
pop
mov
push
dec
jne
loope
or
or
incb
cs
mov
pushf
std
push
fldt
nop
inc
test
xlat
sub
push
loopne
pop
imulb
stos
ret
ljmp
xchg
jns
nop
aad
sahf
inc
andl
push
sub
inc
std
aam
fwait
pop
fstpl
sbb
mov
fldl2t
mov
call
jl
pusha
fptan
pop
xchg
push
push
and
pop
push
sbb
xchg
arpl
and
fildl
sbbl
push
addb
xor
arpl
jmp
outsb
test
mov
call
fsub
jge,pn
and
cs
into
cwtl
add
adc
jl
cmp
mov
aam
cmpsl
mov
lret
test
xor
push
dec
outsb
mov
repz
adc
inc
jmp
push
add
dec
mov
fs
mov
mov
push
or
mov
xchg
dec
adc
mov
test
xor
xor
sahf
fbstp
in
mov
loop
out
jecxz
pop
inc
loope
lock
cmp
mov
pop
les
aad
inc
enter
enter
push
repz
dec
arpl
and
loop
push
cmc
mov
pop
sub
mov
pop
mov
inc
cmpsb
addl
mov
cmc
or
xchg
mov
cmp
leave
iret
push
lahf
push
cwtl
pop
scas
adc
and
daa
std
push
int3
movsb
andb
stos
pop
shl
cmp
inc
dec
or
es
in
mov
ret
jmp
jmp
lock
mov
loop
je
in
inc
inc
jge
push
aad
fcoms
jge
and
push
popf
push
mov
outsl
test
fucomip
mov
in
sub
outsb
les
pop
jae
jmp
cs
mov
cmp
out
or
cmpsl
loope
xlat
dec
ds
fistl
xor
mov
xor
ljmp
mov
testb
in
scas
push
cs
or
push
scas
daa
xor
imul
js
xor
xlat
mov
lods
add
arpl
fldt
shlb
mov
mov
inc
pmaxub
push
push
inc
jne
add
repz
cld
pop
adc
cmp
or
jno
out
div
mov
shll
mov
pusha
call
int
or
dec
nop
push
mov
xor
lock
mov
dec
pop
mov
gs
popa
scas
je
mov
inc
outsb
outsl
sbb
mov
loop
add
fists
mov
std
fisubrs
xchg
inc
jle
or
cs
call
push
test
jl
cmp
in
mov
aaa
mov
cmc
mov
sub
mov
ss
xor
add
cmp
or
lock
movsl
sub
cli
sbb
pusha
movsl
incb
es
mov
inc
dec
loopne
jno
xor
ror
icebp
test
rclb
and
shlb
inc
pop
fsubs
outsb
fsub
out
xchg
cmp
testl
xchg
insl
mov
add
cmp
gs
pop
jl
fildl
testb
ficoms
shlb
ret
fcmovb
sbb
js
sbb
xchg
push
inc
add
or
out
clc
cmp
cs
adc
out
adc
cmpsb
jnp
add
scas
add
cltd
fxch
popf
pop
push
jb
sbb
rorl
push
jp
clc
inc
xchg
xchg
dec
xor
or
sbb
xchg
sbb
mull
pop
sti
fadd
test
dec
pop
jmp
xchg
mov
mov
cld
sub
cmp
subb
addr16
js
xchg
or
jp
sbb
jno
shrl
cli
cmp
xor
pusha
adc
es
rorb
jecxz
push
jmp
and
aam
jns
pop
pop
dec
or
jae
xchg
in
test
pop
jmp
stc
add
dec
xorl
icebp
mov
ljmp
jno
test
stc
mov
sbb
sbb
mov
stc
jge
cs
loopne
mov
adc
cmp
jo
int3
leave
insl
fwait
mov
xchg
xlat
sub
repz
mov
pop
dec
lcall
sbb
mov
cmp
pop
adc
rcr
into
push
cmp
lret
pop
fisttpll
repnz
cs
add
mov
push
test
ret
push
outsl
fiaddl
in
mov
out
gs
test
dec
pop
test
adc
fcompl
shrb
out
fnstcw
jle
in
out
enter
out
xor
icebp
pop
mov
mov
push
adc
dec
inc
dec
popf
cmp
jg
add
hlt
dec
rcrb
mov
xchg
test
dec
and
loopne
push
int
push
stos
adc
cs
enter
cs
aad
js
ret
cmp
dec
mov
and
imul
sbb
push
pop
jg
ja
call
push
push
push
add
movsb
mov
xor
clc
sub
push
aad
jmp
aam
cli
jl
enter
rcrl
dec
and
fildl
push
mov
ja
sbb
mov
lea
negl
fldenv
imul
dec
mov
adc
aad
in
mov
push
sub
inc
mov
cli
das
mov
flds
mov
or
pop
mov
test
inc
stc
test
and
push
jns
pop
in
ret
enter
lods
push
mov
inc
test
inc
popa
ds
jb
and
inc
lods
dec
sbb
outsl
pusha
or
aas
rorl
mov
sbb
dec
sbb
iret
mov
mov
stos
xor
add
or
popa
div
in
push
enter
call
sub
scas
iret
pusha
mov
push
xor
decb
or
mov
les
cmp
fidivrl
mov
mov
cmpl
mulps
mov
sarb
push
sbbb
pusha
xchg
pop
test
add
mov
and
bound
pusha
jns
pop
ja
pop
dec
sbb
mov
sub
pusha
movsl
nop
out
jae
jmp
pop
into
pop
pop
jecxz
arpl
jne
xchg
out
cs
cmpsb
push
adc
je
mov
out
adc
pop
sub
or
add
cmp
shlb
popf
cwtl
iret
dec
aaa
aas
xchg
imul
push
iret
push
ffreep
stos
mov
push
xor
lea
pop
std
add
ss
jne
outsl
inc
dec
bound
test
ret
dec
aam
lcall
dec
push
push
cli
pop
mov
jno
shlb
adcl
sub
xor
add
jle
xlat
fisttpll
dec
loopne
and
inc
add
add
mov
mov
push
clc
test
mov
xchg
icebp
repnz
inc
adc
lcall
ficoms
sbb
imul
inc
loopne
cld
movsl
mov
imulb
jne
sbb
push
shrb
lret
push
jle
cmp
xor
repz
cmp
lcall
cli
bound
outsl
aad
sub
or
dec
in
cmc
dec
xchg
jno
gs
mov
and
mov
stos
dec
sub
jne
push
and
rolb
push
insl
or
arpl
and
pop
in
mov
xchg
lahf
xlat
jp
add
xchg
adc
pop
jnp
xchg
mov
push
ret
mov
es
insl
mov
arpl
lea
jnp
sbb
jno
adc
inc
fwait
cltd
mov
lds
xchg
lods
loopne
dec
xor
in
shlb
fnstcw
fbld
dec
xchg
adc
js
push
cmpsl
ds
test
icebp
stos
cmpsb
xor
fsubl
mov
adc
scas
sub
jge
aaa
popa
mov
xchg
fmuls
push
mov
in
xchg
mov
or
mov
jmp
adc
lea
hlt
pop
sbb
add
mov
nop
mov
adc
enter
pop
sbb
cmp
jbe
sub
repnz
add
fcomps
cli
movsb
loopne
out
cwtl
and
rorl
sbb
lret
call
cltd
aas
data16
fmul
jecxz
pop
rcl
and
pop
ja
or
dec
pop
stos
ljmp
add
or
or
jns
jp
dec
jno
ljmp
pop
push
jge
xchg
fistpl
pop
push
loope
add
sbb
movsb
js
sub
roll
inc
jae
mov
cmc
mov
aad
fistpll
xor
shlb
sbb
adc
xor
js
shrb
test
xchg
sbb
addr16
add
dec
lea
dec
xchg
jmp
lcall
push
sar
cmpsb
push
xchg
fldenv
adc
or
leave
push
mov
jg
sti
mov
add
xlat
mov
fs
sbb
dec
insl
lods
insb
push
pop
popf
push
roll
dec
cmp
mov
popl
push
fcoms
add
jge
and
push
pop
call
inc
xchg
in
int3
movsb
sub
iret
clc
test
sbb
sub
psubd
outsb
loopne
jbe
pop
pop
in
and
test
push
inc
stos
dec
cld
call
shll
jns
ss
test
sub
dec
mov
add
dec
mov
pusha
daa
inc
or
jns
in
lds
dec
out
mov
cli
fisubrl
mov
mov
or
fnstsw
add
scas
sbb
adc
mov
fwait
adcl
stc
loope
mov
clc
push
and
add
mov
mov
outsl
or
adc
lock
dec
mov
fldenv
jg
negl
sub
addr16
das
fcom
fcmovb
ficoml
lret
jg
cwtl
dec
mov
mov
sub
xchg
mov
add
lds
out
dec
loopne
in
inc
cmp
inc
pushf
bound
cmpsb
mov
popa
jo
mov
mov
out
sub
imul
ja
jae
cmpsb
dec
mul
or
sti
dec
loop
in
push
mov
cs
mov
aam
ret
loope
aaa
xorb
dec
cld
cmp
jl
push
adcl
dec
rorl
insb
dec
push
sub
sarl
das
sti
dec
in
insl
test
rorb
add
test
mov
lcall
xor
stc
int
cmpsb
movsl
pop
movzbl
testb
aam
mov
fisttpll
or
fisttps
popa
mov
inc
jl
pusha
movb
pop
jmp
das
stos
pop
inc
sti
sbb
mov
repnz
lret
dec
sub
and
sub
imul
lret
flds
scas
jp
fidivs
cmovge
inc
pop
lret
cmp
lea
mov
ss
int3
mov
inc
cmp
cwtl
jmp
pop
jae
adc
aam
arpl
cmp
call
fmul
add
inc
call
cwtl
scas
mov
aas
icebp
loopne
cmp
out
lods
fwait
xor
dec
imul
fwait
hlt
pusha
pop
movsl
dec
cmp
adcl
fwait
orl
adcb
or
xchg
lods
jne
test
xchg
mov
and
cmp
lret
aaa
pop
xor
std
jns
lods
push
push
out
xchg
mov
fwait
mov
nop
or
xlat
sub
out
mov
xabort
and
sbb
inc
pop
pop
add
out
mov
dec
loopne
mov
cmpsl
xchg
inc
jo
ljmp
mov
push
daa
cmp
cs
push
sub
cmpsb
inc
stos
inc
insb
movsb
pop
mov
dec
push
adc
dec
xor
push
cmpb
pop
es
push
jae
ja
mov
adc
in
ds
add
push
mov
pop
adc
fiaddl
imul
jge
dec
xor
loope
popa
xchg
lcall
jge
inc
dec
bnd
sub
in
pop
outsl
mov
add
enter
push
jmp
mov
test
stos
mov
fs
js
pop
daa
ja
xchg
cmpsl
mov
sti
fwait
mov
lds
pop
test
push
dec
mov
xor
or
insl
sub
out
xchg
divb
leave
jg
subl
pop
mov
ret
jg
cmpsl
stos
mov
sub
test
lods
notl
cmpl
leave
rcrl
ds
push
sub
dec
mov
loop
andb
xchg
pusha
sbb
jmp
aad
mov
js
mov
cmpsb
mov
xor
pop
inc
push
dec
das
shll
dec
add
das
aad
lahf
xchg
cmpsb
xor
fs
push
dec
stc
mov
repnz
inc
sub
pushf
iret
pop
sbb
jecxz
cwtl
movsl
imul
inc
xor
mov
dec
iret
xchg
inc
ret
icebp
dec
in
xchg
mov
js
popf
jecxz
into
test
push
mov
lock
push
rolb
jecxz
clc
dec
pop
xchg
add
xchg
test
mov
add
sbb
fwait
hlt
sbb
fnstsw
into
daa
jle
imul
push
pushf
inc
cmp
xchg
arpl
lds
decl
test
loop
or
push
xchg
insl
test
xchg
dec
push
mov
or
mov
mov
jae
sub
nop
sub
dec
pushf
fstps
xor
outsl
and
pop
scas
out
lods
das
xor
shl
data16
js
sub
dec
add
jns
push
sbb
test
imul
bound
fs
ja
fildll
mov
inc
jg
cmc
mov
sbb
ret
add
mov
cli
shll
xor
aas
int
loope
inc
sub
mov
mov
or
enter
cmp
inc
fucomp
iret
sti
inc
inc
xor
movl
repz
out
inc
xchg
sti
push
sbb
mov
pop
shl
fdivrs
mov
movsb
xchg
push
fs
cmpsb
repnz
cwtl
xchg
pop
mov
rcll
xchg
sbbl
jns
or
and
sbb
ret
mov
out
test
pop
dec
cld
sti
fcom
sahf
xchg
ljmp
test
lds
cmp
xchg
nop
pop
push
add
sub
inc
and
dec
cmp
int3
and
xchg
imul
cmp
pop
leave
push
xchg
mov
mov
dec
xor
movb
fwait
inc
mov
bnd
jge
pop
xor
repz
loopne
sbb
mov
or
fistpl
xor
adc
mov
fdivr
enter
and
hlt
jns
lods
cmp
adcb
or
lcall
hlt
cmp
pop
shrl
rcll
sarl
sub
movl
mov
cld
popa
mov
or
rep
bound
pop
and
jge
nop
das
xchg
push
cmpsb
mov
cmp
xchg
and
int3
sbb
out
subl
jne
push
mov
xor
test
int3
stos
loopne
push
cs
or
sbb
clc
or
aad
jne
addr16
out
mov
call
sti
sbb
mov
cmp
mov
xchg
push
jnp
sbb
lret
add
sarl
ja
jecxz
or
mov
xor
push
incl
pop
mov
push
loop
movsb
test
sahf
jbe
or
pop
out
movsl
aad
or
push
mov
sub
shl
les
jo
lret
in
pop
mov
xchg
push
dec
outsb
add
fwait
stos
adc
int3
jp
sub
mov
cs
addl
xchg
sahf
add
sub
dec
out
flds
xlat
jbe
stos
int3
cmp
mov
adc
adc
ja
mov
cmp
adc
cmp
pop
xor
inc
shrb
xor
mov
xchg
popa
cmp
pop
test
jno
les
insb
test
or
xchg
push
adc
scas
out
and
dec
pop
xchg
mov
out
cltd
out
cld
in
lret
xor
popf
fwait
scas
jle
imul
sbb
jo
jns
inc
movb
imulb
xchg
loope
int3
inc
jle
push
inc
pushf
mov
mov
or
mov
lods
cli
pop
jne
inc
dec
aas
pop
jae
mov
call
add
cs
sub
mov
mov
movsl
sub
rclb
out
pushf
xchg
mov
xchg
cmp
lds
test
movsb
and
sarb
dec
sub
outsb
adc
addr16
and
stc
cli
push
jo
jg
inc
pop
pop
dec
addr16
fucomp
mov
insl
rcrl
outsl
jb
in
test
cmp
jg
lahf
mov
ljmp
fmul
xor
nop
cmpsb
mov
movsb
inc
and
push
in
jl
int3
xchg
sub
int
sti
into
sarb
dec
push
fldenv
dec
jle
cmp
sahf
adc
popa
inc
scas
inc
mov
jl
andb
xor
fcmovbe
dec
pop
cmpsl
repz
xorb
push
movsl
push
adc
mov
pop
outsl
in
das
cltd
je
cmp
xchg
mov
mov
loopne
cmpsb
pop
fmull
mov
fimull
nop
pop
or
add
fwait
inc
adc
movl
and
je
movsb
pop
xchg
lret
and
int
and
jo
xchg
jmp
xchg
repnz
xlat
push
insb
movsb
pop
jae
gs
sub
xorl
fldcw
pusha
fdivr
movsb
in
dec
in
fsubrs
aad
push
push
push
sub
push
push
pop
and
test
scas
push
mov
int3
push
daa
or
orl
inc
xchg
jg
aaa
jge
pop
adc
cli
pop
pop
lret
add
xchg
sti
loop
or
fdivs
aam
cmp
aad
pop
lods
ljmp
jbe
imul
xchg
pop
cld
or
cwtl
mov
lock
xchg
sub
loop
adc
testb
xor
lcall
mov
xor
xchg
mov
data16
test
pop
mov
je
fdivrs
ljmp
sub
cmp
adc
mov
mov
mov
push
incl
and
jne
dec
dec
xor
ds
fmull
jecxz
loope
xchg
jmp
push
rcrb
pop
out
out
xor
dec
pop
mov
icebp
dec
inc
iret
sbb
xchg
mov
mov
xchg
sarl
add
stos
aaa
sub
push
jp
mov
xchg
daa
out
sub
arpl
and
inc
or
xor
iret
pop
push
mov
mov
mov
mov
jp
and
sbb
dec
ficoml
mov
lret
xchg
std
jmp
loop
and
stos
inc
ret
lcall
and
jmp
xorl
bound
sbb
mov
out
in
and
xor
xchg
lea
mov
add
mov
inc
dec
dec
jmp
in
out
push
mov
xchg
jle
fists
or
adc
push
xchg
push
or
repz
mov
outsl
fisubl
imul
out
push
shll
pop
fidivrs
rolb
fs
stc
clc
push
mov
lret
jae
xor
or
push
test
or
pop
mov
mov
scas
cmp
mov
and
lods
add
mov
cmp
scas
mov
arpl
sub
add
push
in
mov
push
clc
jbe
clc
adc
nop
and
jmp
lock
push
push
les
in
push
rol
mov
shrl
push
imul
cmp
sbb
out
mov
xchg
push
pop
mov
inc
out
sbbl
push
and
mov
pop
sqrtps
iret
inc
bound
xchg
into
inc
mov
jne
shl
xor
cmp
daa
loopne
mov
fadd
xor
stos
mov
jne
push
aad
leave
cli
push
js
stos
repnz
popf
jmp
xor
loop
adc
pop
outsb
data16
stc
popa
lea
out
cld
sub
out
imul
fidivs
adc
shlb
pop
inc
dec
mov
cmpsl
in
dec
mov
pop
movsl
mov
fadds
rclb
lcall
or
aam
mov
movb
or
xor
scas
in
pop
test
and
adc
mov
mov
lock
int
scas
inc
imul
sbb
sahf
insl
inc
out
insb
dec
cltd
sub
stos
sti
mov
pushf
clc
mov
fdivrp
add
orl
mov
sub
mov
xchg
dec
repnz
cld
nop
mov
loope
sahf
sub
sbb
xchg
mov
fcomps
inc
daa
or
add
fwait
std
mov
pushf
dec
jg
xchg
and
push
mov
ret
shll
pop
mov
fwait
cmc
test
mov
mov
loopne
or
in
ret
outsb
shr
add
jns
or
lods
lret
insl
into
mov
mov
movb
movsb
aad
dec
mov
nop
lret
and
lcall
jno
adc
lret
cmp
das
dec
movsl
xchg
aam
es
les
pop
stos
mov
sbb
jae
rorb
stos
sub
sbb
movb
dec
je
arpl
inc
aaa
sub
popf
push
xchg
int3
mov
push
pop
fsubrl
scas
sub
jb
fnsave
cwtl
or
cmpsb
xor
cmpsb
adcb
aam
andb
mov
std
enter
xlat
insl
and
lods
mov
xchg
push
pushf
repz
out
mov
out
outsl
xor
lock
out
inc
test
decb
or
hlt
outsb
cmpsb
jle
xchg
cmp
or
inc
xchg
loopne,pn
popf
stc
dec
cmp
adc
sti
xor
test
mov
insl
mov
pushf
sub
adc
push
mov
ljmp
mov
push
adc
or
xchg
sbb
pop
xor
jbe
enter
nop
push
ret
sahf
push
movsb
lds
outsl
cmc
push
gs
stos
mov
lret
dec
test
xchg
scas
xor
cld
xlat
pop
xchg
in
addl
cmpsb
adc
inc
adc
inc
push
adc
femms
shlb
sub
dec
sti
mov
inc
or
dec
mov
jecxz
outsb
ficoms
or
into
mov
jl
das
mov
es
insl
jo
pushf
enter
lods
jp
cmp
sbb
fs
xlat
adc
pop
mov
dec
pop
ss
out
aam
pop
fisubs
and
pop
stos
aam
push
sbb
cwtl
dec
ss
icebp
add
dec
mov
jp
cmpsl
xchg
ljmp
daa
jbe
jne
movsb
pop
notl
jno
jns
subl
or
mov
or
inc
idivl
inc
xchg
dec
xorb
divl
sbb
and
cmp
sbb
loope
xor
ljmp
pop
sti
and
sub
cli
aaa
jb
in
xchg
cmp
adc
xor
pop
mov
pop
push
mov
insl
daa
adc
fcos
pop
sub
loope
pusha
sub
sti
mov
push
fsubl
sub
in
test
in
shll
push
jno
arpl
nop
out
sbbb
mov
loopne
outsb
sub
testl
jo
into
outsb
inc
hlt
inc
dec
jge
test
mov
subb
mov
ret
xchg
mov
je
push
or
or
pavgb
mov
cmpsb
xchg
xlat
mov
pusha
repnz
je,pt
fwait
lcall
mov
cld
cmp
dec
jl
cs
dec
imul
std
and
loope
and
xchg
xor
cltd
jb
cmpsb
aaa
cltd
test
lret
jl
add
push
mov
mov
sbb
jle
mull
lret
repz
addr16
dec
adc
insb
insl
or
ss
repz
sub
call
jne
add
jae
ja
lret
add
cld
push
xorb
lahf
dec
icebp
push
inc
in
sub
pop
lret
cmp
flds
cmp
cmp
add
stos
push
sub
xor
test
mov
inc
pop
dec
imul
dec
adc
and
sbb
test
sbb
jnp
ret
or
in
xchg
shlb
das
jmp
lods
not
or
mov
ss
and
mov
pop
popf
jns
imul
decl
jmp
ja,pn
or
sbb
ficoml
insl
mov
cmpsb
cmp
push
loopne
out
loope
ljmp
ficompl
dec
cmp
inc
test
push
out
ret
push
pop
not
jns
test
pop
jmp
fstpt
jb
xchg
mov
add
jg
xchg
int3
push
cmpsl
xchg
and
fldt
or
inc
push
push
ror
mov
pop
adc
sub
mov
push
stos
push
jg
mov
lods
or
outsb
test
cmp
mov
fwait
movsb
xor
cwtl
movsb
jle
test
shrl
or
xlat
sub
outsl
jge
push
lods
jne
fwait
bound
ret
sub
div
and
in
in
xor
xchg
xor
out
mov
mov
imul
lahf
xchg
and
rolb
enter
and
pop
xchg
inc
pop
jle
or
test
dec
xor
cmpsl
xchg
andb
mov
fs
jo
pop
shrb
out
mov
dec
push
xchg
sbb
jecxz
push
mov
in
inc
xchg
addr16
dec
pop
mov
sub
ja
cmp
cli
mov
repz
sub
pop
clc
push
push
pop
mov
lock
inc
imul
dec
bound
pusha
fs
pop
mov
int
pop
cli
or
or
scas
sub
xchg
lock
das
sub
ds
in
pushfw
mov
and
jle
inc
or
and
in
arpl
invd
mov
fcmovnbe
xor
insl
or
mov
lcall
push
es
sbb
mov
loop
test
stos
xchg
out
push
push
test
pop
jmp
cmp
clc
xchg
jmp
das
xchg
add
mov
mov
mov
push
add
inc
add
arpl
stos
cmpsl
mov
add
push
add
pop
xchg
xchg
mov
addr16
mov
sub
pusha
add
mov
test
enter
mov
cli
scas
int
push
push
push
and
sub
push
sub
dec
cmpsb
insl
in
ficoml
insl
rolb
outsb
inc
pop
cmpsl
sub
add
adc
xlat
adc
test
jno
pop
dec
push
mov
pop
pop
fisttpl
fwait
cmpl
xor
jo
jnp
pop
pop
cmc
mov
pop
mov
aaa
xor
mov
fisttps
cmp
push
dec
cmc
pop
scas
dec
fisttpll
dec
mov
stos
mov
cmp
cs
sbb
sub
imul
adc
mov
pusha
adc
stc
movsl
stos
idivb
lea
test
xor
cmp
cmpsb
mov
push
clc
aas
or
xchg
add
fbld
push
inc
incl
inc
cmpl
ss
rolb
fdivr
fisubl
cmp
sarb
mov
pop
inc
push
and
xchg
or
in
xchg
addr16
and
lods
enter
pop
clc
xchg
push
jp
clc
jb
sbb
cs
or
sub
sbb
lret
repnz
dec
sub
clc
cmp
pushf
out
movsb
lods
scas
mov
jge
stc
fsubp
in
ljmp
hlt
scas
mov
mov
idivb
icebp
cmp
out
mov
jae
mov
pop
inc
stos
adc
mov
xchg
fisubs
cmpsb
or
and
push
lods
scas
stos
add
jb
sbb
inc
push
xor
fsubs
test
repz
pop
andl
inc
xchg
int3
mov
pop
ja
add
das
sbb
fyl2xp1
loope
add
pop
xor
in
fldt
mov
sti
out
jne
and
or
sbb
decl
pop
lret
mov
out
mulb
inc
repz
ficomps
popf
mov
stos
cld
int
push
inc
cwtl
sbb
aad
lods
add
dec
adc
and
nop
pop
call
sub
mov
mov
push
in
jge
cmp
sub
or
popl
mov
mov
jg
loope
cmpsl
jecxz
adc
sahf
mov
clc
mov
pop
lret
pop
jns
mov
pop
and
insl
jle
pop
mov
inc
mov
jecxz
leave
push
cmp
jnp
lcall
jo
push
mov
mov
cmp
es
ret
sub
stc
sahf
imul
pop
and
mov
add
stos
movsl
sub
sarb
inc
test
fstpt
sub
add
test
mov
fwait
xchg
dec
mul
pop
or
sbb
lds
imul
lods
cli
test
mov
mov
push
dec
inc
and
and
jnp
and
pushf
adc
mov
mov
xchg
decb
iret
pop
push
js
xchg
jle
lods
xor
lahf
sbb
lcall
sbb
add
cmp
push
dec
pushl
inc
es
mov
cmp
pop
xchg
sbb
push
lahf
lret
mov
in
or
pop
test
rcll
dec
scas
iret
sbb
cld
cltd
push
das
inc
xor
pop
fwait
pop
inc
adc
and
dec
xchg
cmp
jno
ror
and
lods
rorb
repz
push
push
lea
repz
out
cmpsl
adc
lcall
mov
addl
fcoms
cmpsb
fisubrs
sbb
mov
cmpsb
cltd
das
cwtl
add
inc
out
sbb
pop
jnp
orb
mov
add
xor
or
mov
push
imul
dec
jp
xor
int3
pusha
push
pop
mov
lds
int3
sbb
scas
jp
add
fstpt
xchg
test
mov
xchg
mov
pop
adc
dec
and
jecxz
xchg
adc
or
cmp
out
cwtl
ljmp
sbb
outsl
idiv
stos
out
mov
sub
sbb
push
int
pop
sbb
stos
pop
mov
push
test
add
xchg
ficoms
cmp
lahf
jno
add
ror
adc
fs
lea
or
xor
sub
shrb
xor
sub
mov
mov
mov
add
repnz
pop
dec
mov
test
popf
decb
sub
xchg
or
addr16
push
lods
dec
inc
or
adc
sub
lret
das
cmp
frstor
es
iret
jl
or
fistl
test
dec
out
cmp
sahf
cmpsb
js
enter
jne
mov
xor
fdivrp
push
push
jmp
push
pop
std
xor
decl
dec
frstpm(287
pop
pop
je
push
adcl
inc
inc
cmp
mov
inc
insl
test
and
out
jne
push
mov
cmpsb
popa
aaa
lret
fidivrl
out
jmp
loop
pop
and
cld
gs
scas
hlt
sub
mov
aam
sub
push
enter
pop
cltd
inc
adc
xchg
gs
inc
jbe
stc
into
pop
jns
inc
push
cld
iret
repz
stos
insl
flds
je
stc
icebp
lods
mov
push
movl
inc
dec
xchg
xor
jge
mov
jne
sub
hlt
mov
or
scas
jmp
stc
cs
sbb
pop
in
jge
pop
fs
adc
fldl
jecxz
mov
mov
cwtl
sahf
ds
pop
xor
pop
fcmovbe
xchg
jp
rcl
ljmp
aas
mov
imul
jnp
out
inc
mov
pusha
sti
pop
scas
es
dec
leave
xchg
cmp
ja
adcb
pop
sbb
or
cmp
ss
push
mov
rcr
popf
clc
xor
arpl
mov
jl
stos
icebp
jl
or
jbe
inc
sbb
sarb
cwtl
cmp
inc
sub
mov
dec
jne
bound
push
push
movsl
shll
out
data16
insb
js
lods
mov
xlat
inc
push
fucom
jnp
adc
ja
inc
stos
fistl
lods
in
mov
xchg
pop
sub
bound
addl
xchg
sbb
repz
test
cld
dec
xor
rcrl
pop
fidivs
sbb
sbb
aam
hlt
pop
fnstsw
loop
outsl
xor
push
repnz
lahf
in
das
out
stc
push
lock
pop
nop
popa
sub
jp
cld
test
out
out
fwait
push
ss
out
pop
sub
xchg
add
sbb
push
push
mov
rorl
add
xor
jecxz
mov
enter
dec
bound
loopne
lret
popf
jns
and
push
sbb
in
cmpsb
sti
jl
adc
mov
cld
adc
pop
mov
outsl
pushf
mov
pop
mov
mov
add
dec
es
fcmove
adc
popf
sub
xlat
lcall
enter
stos
push
adc
and
push
push
dec
lret
inc
adc
jmp
fsubr
mov
div
lods
or
call
rorb
in
mov
arpl
aaa
pop
pop
mov
stos
lods
dec
mov
and
cmp
cmp
pop
addr16
arpl
les
and
cmp
in
stc
fcmovbe
or
movsl
jge
jnp
cmp
and
loopne
or
and
enter
sbb
repz
jns
dec
cmpsl
jnp
jg
out
jbe
stc
add
sub
push
fdivl
out
xor
ret
inc
imul
loope
fwait
pop
pop
mov
adc
or
xchg
lea
adc
pop
out
adc
stos
leave
leave
push
xchg
lods
add
fsubrl
adc
cli
or
idivb
sub
xor
dec
push
push
mov
jmp
out
in
jl
outsl
lds
xor
or
sbb
ss
cmpsl
add
pop
incl
xchg
addr16
add
dec
repz
xchg
xchg
or
pop
xchg
aad
mov
mov
rcrb
shll
out
cli
bound
leave
jae
mov
jp
cmp
push
sbb
cmp
dec
adc
sub
jp
out
xor
hlt
jecxz
lock
mov
xchg
cmp
scas
arpl
repz
mov
pop
cmp
shlb
loope
mov
cltd
cmpsl
test
ret
sbb
out
cwtl
mov
pop
dec
rep
lcall
adc
pop
mov
push
add
sbb
xchg
add
sahf
out
add
shll
or
and
add
add
push
flds
mov
mov
or
mov
push
mov
cmp
cmpsb
push
stos
pop
mov
or
das
mov
pop
sub
mov
mov
mov
jl
sub
lea
sbb
cmp
orb
hlt
push
pushl
div
or
cli
adc
jp
pop
push
push
nopl
xchg
inc
and
pop
jae
pop
scas
dec
cmp
dec
cmp
or
jl
sbb
fstp
rcll
pop
push
outsb
and
repz
mov
xchg
sub
cmpsb
jb
imul
ficoms
xchg
sbb
rcrl
xor
adc
insl
add
movsl
insb
fcompl
inc
push
jnp
loopne
inc
cmp
jge
sbb
lods
mov
jbe
pop
fs
in
fucomp
das
sub
shrb
mov
pop
outsl
int3
loop
movsb
push
or
bnd
out
dec
xchg
sub
and
daa
fstpt
mov
mov
loop
xorb
loope
mov
aas
out
lods
and
jmp
out
jb
and
adc
cmp
inc
jbe
pop
sub
jmp
mov
lea
fdivp
pop
jecxz
rcrl
push
and
popf
mov
insb
jb
xchg
sub
and
into
out
cld
inc
xchg
inc
sbb
jbe
push
add
add
pusha
pop
jg
adc
or
push
jnp
and
leave
lds
ficomps
mov
lret
push
int
popa
jae
mov
add
sbb
lea
out
mov
inc
icebp
mov
sbb
mov
aam
out
jg
lods
aam
shlb
mov
lods
dec
jne
arpl
test
xor
lock
adc
rdtsc
cld
popa
add
xchg
dec
mov
cmp
loope
ja
iret
movsl
ret
mov
fiadds
je
ds
cltd
push
jle
rcrb
or
test
adc
adc
cmp
mov
jge
adcb
ss
movsl
pop
xchg
xchg
xor
fsts
xchg
mov
cmp
sub
dec
ja
pop
xor
lods
mov
jle
push
mov
pop
loope
inc
jnp
arpl
xchg
cli
mov
mov
test
pop
ja
mov
sbb
dec
je
lods
dec
pushf
scas
push
test
decl
leave
scas
mov
inc
xchg
dec
xchg
data16
pop
imul
mov
mov
sbb
mov
js
add
xor
pop
xor
sarl
push
xchg
xor
inc
dec
sub
inc
out
lea
in
cmp
adc
loope
in
xchg
iret
sbb
cli
popa
andb
mov
sbb
cmpsb
cld
mov
xor
mov
mov
fbstp
jecxz
ds
xchg
aaa
sub
outsb
or
pop
int
nop
pop
ja
lock
subl
outsl
fs
rcl
sbb
ss
popa
inc
gs
fstl
xchg
pop
rcr
fwait
and
rsqrtps
and
cmpsl
shlb
xchg
test
addb
out
pop
dec
pop
sub
lods
pop
push
jp
cmpsl
inc
pop
pop
add
test
sub
std
icebp
cmc
orb
hlt
jns
inc
rolb
adc
sub
mov
loopne
into
sbb
test
in
orb
pop
pop
push
or
aad
cmpsl
xor
cmpsl
fwait
or
and
or
scas
out
or
int3
mov
dec
inc
lods
in
sbb
lret
js
imul
shrl
arpl
and
outsb
sbb
mov
adc
repnz
pop
xchg
xor
loop
mov
mov
in
pop
fwait
aad
jae
push
mov
xor
movb
inc
inc
and
jae
jne
testl
pop
xchg
mov
or
cmp
push
shl
aaa
bound
cmpsb
xchg
cmp
xor
js
xchg
sub
je
stos
dec
rorb
in
mov
mov
pop
int
scas
popa
fdivrs
push
fldenv
outsl
sahf
mov
lret
ret
mov
fsubrl
push
popa
cmpsb
aad
mov
or
jbe
inc
rcrl
mov
and
sub
cmp
aam
lods
adc
cmp
stos
test
mov
jne
sbb
cmpsl
lea
push
mov
mov
fdivrl
sbb
mov
enter
cs
lds
jb
dec
scas
xchg
pop
mov
mov
lahf
fistps
or
sbb
lcall
dec
fldcw
mov
loope
jge
jns,pn
sub
ja
iret
dec
sbb
pop
add
int
fdivl
xlat
xlat
inc
dec
imul
sahf
fcoml
mov
sarb
aaa
add
pop
daa
mov
test
psubusw
gs
aas
lret
and
xchg
and
mov
pop
pop
shll
adc
das
fwait
rcll
push
pop
sub
adc
adc
push
jnp
movsb
pushf
mov
mov
or
repz
fisubs
lcall
inc
shlb
push
lret
xor
cli
leave
inc
sub
cmpsl
fisubrs
pop
lea
and
jae
add
sti
lods
divb
stos
dec
cwtl
cmp
xchg
push
pop
aaa
adc
fbstp
pop
in
mov
neg
fs
es
cmp
inc
mov
mov
cmp
cmc
repz
push
idivb
pop
gs
cmp
cvtps2pd
mov
mov
xorl
cmp
add
test
std
xor
js
fnstenv
or
imulb
shrl
into
push
adc
fsubrl
cmp
pop
cmp
std
dec
cli
adc
mov
mov
int3
xlat
lock
add
scas
iret
enterw
inc
clc
mov
fisubrl
pop
pop
pushf
mov
pop
cmpsl
xlat
rep
enter
xor
push
mov
mov
fisttps
imul
inc
jns
mov
push
push
sbb
add
inc
bound
dec
js
mov
daa
adcb
pop
jns
add
push
mov
test
jmp
and
jb
cmp
fs
push
loop
jns
jns
push
push
sbb
lahf
mov
push
lods
inc
mov
push
cmpsb
push
sarl
cli
jb
dec
je
repnz
adc
stos
ret
mov
movsl
inc
push
insl
and
xlat
dec
shlb
mov
cmp
mov
lahf
xchg
shrb
das
jnp
bound
sbb
mov
push
cld
insb
loopne
sbb
hlt
xor
imul
movsb
mov
jle
cmp
fwait
mov
je
gs
sub
add
cli
cmp
aaa
in
cmpl
mov
mov
popa
sti
inc
jmp
push
mov
jl
sub
xor
push
inc
or
sbb
sbb
repnz
add
das
or
popf
int3
mov
cmp
fisubs
xor
push
fdivs
gs
inc
movsl
add
clc
scas
sbb
test
push
cmp
and
lahf
outsb
sub
movsl
push
xor
push
jnp
mov
inc
jns
cmp
js
xor
xchg
pop
out
xor
test
and
fucomi
mov
rorb
jne,pt
sub
fisttpll
aas
inc
mov
mov
jmp
jmp
inc
mov
sbb
std
call
fst
mov
mov
pop
test
push
call
add
cwtl
cs
fidivs
mov
inc
mov
repz
mov
jecxz
mull
push
fs
jmp
adc
adc
dec
test
insl
fidivrs
movsb
lods
xchg
lret
cmp
xchg
fdivrs
rclb
dec
addr16
iret
lods
cmc
outsb
jbe
mov
fsts
aas
mov
cmp
dec
fsqrt
movsl
cmp
add
jb
je
sti
rcll
mov
xchg
in
flds
mov
imul
inc
sbb
jle
pop
stos
push
cltd
push
adc
adc
ja
jecxz
pop
cmp
iret
dec
xchg
int
jle
dec
sbb
adc
out
pusha
dec
pop
adc
mov
sbb
mov
jmp
mov
lret
out
cmp
xchg
les
rolb
push
sbb
hlt
mov
xor
and
bound
mov
fisttps
xchg
and
mov
lock
mov
in
fs
xchg
sub
sti
xor
jmp
sbb
xor
inc
es
pop
add
jg
mov
cwtl
ja
mov
pop
pop
sub
cmpsb
mov
mov
aaa
fwait
inc
sti
xchg
outsb
out
cmpsb
cwtl
cs
js
lret
or
flds
sti
lret
daa
pop
pop
sub
mov
sub
lea
mov
mov
or
call
aas
sbb
mov
repnz
gs
int
pop
mov
jmp
repz
shll
or
loop
imul
mov
jl
rcl
and
shrb
test
cmp
xor
pop
jmp
mov
xor
icebp
enter
loopne
sbb
sbb
adc
fidivrl
xor
rol
cmpsb
mov
cs
xchg
sub
addr16
loop
cmp
adc
dec
jne
jp
shrb
push
out
aam
dec
dec
jecxz
scas
xor
clc
shlb
push
cmp
lods
cld
jae
pusha
mov
cmp
jnp
cmp
gs
rorl
jns
mov
cmc
xchg
mov
sbb
fs
aas
dec
loope
push
fmul
xor
mov
rolb
adc
adc
dec
and
lods
cmpsb
xchg
xor
inc
mov
insb
jl
cmp
cmp
jnp
pusha
jae
iret
and
scas
sbbb
mov
addr16
clc
inc
lods
inc
or
loopne
std
cmpsl
les
mov
pop
add
std
push
adc
shr
add
cmp
cmp
lods
repnz
ds
mov
into
test
cld
mov
scas
jmp
movsb
sbb
pmulhw
loope
or
shll
add
dec
inc
cld
arpl
fsubl
rclb
aad
iret
xor
in
xchg
loop
scas
mov
test
test
push
pop
mov
inc
add
sti
data16
mov
ss
pop
stos
add
jns
xor
out
aas
or
or
jecxz
mov
sbb
mov
mov
repnz
mov
loope
pop
cld
jnp
mov
mov
in
loope
xor
adc
sbb
out
mov
xchg
jae
insl
and
fdiv
push
aaa
popf
mov
gs
mov
jne
dec
outsb
cli
xor
pop
je
mov
mov
filds
push
movl
call
mov
pop
cmpsl
push
shll
movsl
ljmp
mov
jecxz
xor
mov
cmp
xchg
inc
jp
popf
call
stos
xor
push
aam
inc
scas
leave
fcomp
popf
push
add
push
insb
popw
xor
js
out
jno
mov
pop
cmpsl
std
insl
mov
mov
pop
xchg
lods
sbb
or
jnp
into
jo
inc
dec
cmpsb
dec
push
js
jns
js
popf
jbe
out
out
aaa
push
inc
adc
mov
jae
test
sbb
xor
jmp
gs
ret
outsl
add
aaa
push
cltd
pop
dec
shll
mov
mov
mov
xor
xchg
divb
addl
lcall
enter
es
out
scas
dec
hlt
add
stc
cltd
and
mov
stos
cmp
cli
push
or
push
inc
sarb
or
xchg
jmp
arpl
rolb
aas
mov
adc
adc
cmpsb
pusha
aad
jmp
mov
in
dec
scas
scas
test
pop
into
xchg
jp
das
adc
or
xchg
imul
sub
jmp
xor
pop
imul
xor
ss
addl
adc
fucomi
mov
pop
in
inc
bound
mov
ljmp
cmp
xlat
mov
sbb
dec
jge
mov
in
fucomip
sub
cmp
arpl
test
sbb
gs
mov
divb
movl
call
xchg
stos
daa
xor
push
daa
lods
fistpl
jecxz
pop
mov
in
gs
push
pop
xor
adcl
icebp
mov
add
ret
add
fiaddl
mov
mov
pusha
aad
jg
push
dec
push
pop
inc
sub
stos
dec
jp
mov
inc
insl
pop
mov
scas
cmc
in
adc
mov
or
in
and
mov
les
jle
out
mov
push
scas
xchg
jbe
int3
jno
out
test
add
aaa
enter
jbe
lcall
dec
in
mov
mov
mov
imul
or
mov
lock
repnz
icebp
mov
fadd
inc
lcall
and
jle
stos
xlat
mov
pop
jecxz
fidivs
push
shrl
xchg
pusha
popf
test
rorl
clc
dec
lea
cmp
aad
pusha
mov
fisttps
test
outsb
add
sarl
mov
mov
subb
std
push
add
jbe
xor
sub
out
leave
mov
xor
add
or
xlat
enter
jmp
cwtl
shll
mov
dec
mov
in
int3
jns
ljmp
fisttpl
cmpsb
imul
fs
subl
mov
addr16
inc
pushf
imul
jae
xor
movsb
nop
aam
inc
add
sarl
sub
lret
sub
xchg
mov
test
sub
nop
divb
imul
pop
add
outsl
xchg
mov
dec
pop
mov
sub
push
lret
adc
mov
sub
jnp
in
repz
outsl
pop
pop
cwtl
and
pop
nop
mov
lods
mov
outsb
push
jg
out
stos
sub
mov
lods
xor
lock
mov
jno
cmc
push
xor
push
adc
dec
iret
mov
dec
xlat
repnz
mov
dec
or
inc
dec
xorb
jo
ss
out
subb
xchg
inc
into
xor
jge
mov
mov
fcomps
fiaddl
cmp
fwait
addb
out
mov
sbb
fiaddl
call
out
bound
cmpb
mov
dec
mov
inc
cld
out
pop
mov
gs
pop
in
push
aam
movsb
xor
and
push
jp
jns
jnp
or
loope
or
xor
sbb
loop
lea
mov
fstl
mov
shrl
or
push
in
sbbb
mov
adc
les
xor
push
mov
cmpl
push
push
add
test
outsl
or
fisubl
add
lret
daa
push
je
andl
repnz
inc
xor
xchg
dec
aas
mov
dec
or
shrb
lret
mov
push
lds
sub
mov
xlat
jne
push
mov
push
mov
fbstp
dec
aam
rolb
ss
dec
sbb
into
dec
lods
mov
dec
add
xchg
xor
mov
lds
into
dec
out
daa
mov
mov
out
or
sub
cmp
sbb
jae
scas
rorb
lahf
cmpsl
mov
shll
sub
add
add
xchg
pusha
mov
pusha
ret
fs
addr16
pop
lea
shrb
dec
mov
inc
and
js
pop
xchg
dec
or
cmp
std
pushf
pop
dec
pop
sub
dec
jbe
sub
adc
cwtl
or
lock
sub
or
icebp
stos
cmpsb
push
jo
leave
pop
mov
sar
dec
dec
jmp
cmpsb
and
and
les
push
in
xchg
in
je
in
jns
ds
lcall
adc
and
push
mov
jno
or
mov
outsb
insl
jge
lahf
lea
jmp
or
cmp
shrb
add
mov
xchg
fs
inc
lret
mov
sbb
sahf
imul
jmp
xor
enter
movsb
dec
mov
push
out
xchg
and
add
aam
repz
xchg
push
sub
das
mov
rcrl
mov
cmc
popa
jle
sub
sbb
arpl
jae
inc
dec
pop
push
jl
fwait
pop
fwait
jae
push
shll
pop
insl
jge
xchg
ret
cmc
sbb
inc
movl
subb
mov
xor
push
je
mov
pop
aaa
cmpsb
pop
shl
pusha
sbb
inc
and
and
sub
inc
dec
inc
push
or
xchg
fadd
xchg
dec
ss
inc
sub
pop
jle
faddl
push
cmp
arpl
inc
mov
xlat
mov
push
mov
aad
xchg
sub
iret
imul
imul
int3
pushf
xor
sub
ds
loopne
hlt
repnz
ljmp
mov
cmc
test
arpl
in
pushf
fildl
fucompp
into
ds
repnz
decb
add
outsl
jae
mov
jne
ljmp
cmp
sub
cs
je
xchg
les
loope
mov
jg
lds
in
cld
dec
cmp
and
fstps
jbe
insb
aam
jp
test
pop
pop
loope
xor
gs
arpl
hlt
dec
insb
inc
lods
shlb
sub
or
lds
in
add
cmpsl
and
mov
imul
cmc
mov
xchg
push
ret
popf
rcr
imul
xchg
pop
lds
jg
sti
mov
outsl
stos
jge
mov
sbb
fists
lds
xor
jge
add
gs
les
add
aaa
lcall
out
push
sbb
arpl
mov
inc
sarl
lods
sbbl
rorb
mulb
inc
mov
push
adc
ljmp
rclb
xor
shl
popf
sbb
mov
leave
test
repnz
xor
cmp
in
loop
out
and
lret
dec
xchg
sti
adc
les
adc
ds
cmpsl
or
cwtl
cmpsl
xchg
mov
and
cli
cmovg
jae
inc
sub
lcall
sbb
xlat
inc
insb
out
loope
pop
lea
xchg
jb
xor
lret
add
push
inc
cld
inc
mov
and
divl
pop
call
int3
out
jp
xor
imul
popa
push
rcl
mov
mov
shll
mov
clc
call
out
sub
adc
xor
push
nop
in
xor
dec
faddl
and
imul
dec
adc
inc
cmpsb
pop
inc
cmp
andl
insb
pop
daa
enter
shll
out
or
scas
fcompl
jne,pt
jns
sbb
ror
in
mov
rclb
test
jbe
cmp
mov
lahf
outsb
jmp
aam
imul
pushf
jp
movsb
xor
push
mov
dec
lods
xchg
fsubr
sub
ljmp
popa
outsb
lods
cli
lods
imul
popa
jle
sub
xchg
and
outsl
les
andl
push
dec
dec
cmp
adc
inc
shlb
fwait
test
mov
insl
sub
aam
push
insl
shrb
lea
mov
pop
imul
dec
addr16
mov
xchg
ljmp
movsb
pop
or
ficompl
inc
scas
dec
mov
cmp
andl
pop
or
or
movsl
lds
addr16
mov
xchg
push
fmull
push
xchg
xchg
mov
push
push
mov
mov
fwait
fwait
addb
adc
cmp
fwait
push
add
test
mov
jg
sar
sub
xlat
inc
cwtl
and
jb
mov
shl
jno
roll
push
lea
fldt
xchg
ret
push
xlat
jg
add
xlat
jmp
adc
and
cmpb
inc
iret
dec
pop
cmp
xchg
ret
lods
icebp
cltd
repz
sub
ja
ret
add
js
sub
loope
or
cmc
pop
out
ljmp
push
dec
push
cmp
mov
mov
adc
cmp
mov
fwait
addr16
pop
and
jns
sarb
pusha
lea
mov
push
loopne
stos
in
jmp
mov
jecxz
xchg
mov
inc
mov
sub
xchg
push
dec
mov
into
out
fstps
fcmovu
mov
cltd
push
insb
mov
test
sbb
or
out
cmp
mov
pop
and
xchg
mov
pop
mov
mov
jo
inc
stc
insb
mov
int
loop
fidivrl
test
outsb
in
imul
jb
int3
xchg
jg
fs
test
mov
ficoml
inc
inc
or
orb
stos
mov
inc
je
sbb
popa
cmp
sbb
inc
pop
mov
je
and
out
insl
mov
negb
data16
jbe
or
lahf
mov
mov
rep
aaa
push
mov
pop
push
testb
scas
je
cmp
xchg
dec
sub
je
mov
add
call
push
pop
pop
fldcw
outsb
aad
jp
dec
insl
mov
fstpl
jbe
insb
cltd
jbe
push
repnz
add
xor
dec
nop
mov
int
cmpsb
jo
cmp
ds
outsl
lret
cmp
sti
imul
or
fldenv
sti
pushf
xchg
push
and
mov
in
fidivrl
xchg
out
jp
js
mov
mov
scas
pusha
testb
dec
dec
in
daa
repz
daa
push
je
sub
or
rcrb
pop
leave
lods
lds
imul
inc
pop
inc
fwait
jmp
xchg
cs
mov
xchg
int3
xor
push
mov
add
xlat
pusha
loopne
sbbl
pushf
ja
ret
push
testl
mov
sub
pop
push
cmp
or
sub
jae
out
repnz
notb
das
test
mov
mov
jae
sub
lds
outsl
mov
std
jnp
mov
mov
les
fwait
jp
mov
xadd
das
xchg
jg
stc
jb
add
sbb
lea
sbb
bound
xchg
aam
mov
sub
les
fmulp
push
inc
loope
roll
or
imul
mov
xchg
shll
leave
cmp
fld
daa
sti
and
jecxz
insb
mov
rorb
dec
mov
dec
xchg
xchg
xor
je
loop
ss
sub
cmc
jae
jmp
xchg
push
scas
out
movsb
loope
lods
xor
dec
adc
nop
test
loope
xchg
imul
mov
fdivl
cltd
push
mov
push
mov
xor
push
ds
pop
in
mov
mov
sbb
sub
adc
xchg
xor
push
push
push
out
lcall
cmp
adc
loope
imul
das
lahf
movsb
mov
pusha
int3
fwait
mov
aas
rcl
sbb
push
mov
adc
xlat
or
sub
jl
fst
in
mov
push
insb
xchg
push
call
mov
pop
cmpl
or
ret
mov
or
push
push
xor
mov
imul
fnstsw
call
and
dec
out
jae
mov
push
adc
movsb
and
sub
sbb
sbb
push
into
mov
dec
push
rcl
std
adc
jno
jns
sub
mov
test
rol
mov
mov
lea
enter
shlb
mov
add
mov
call
cmpb
clc
inc
iret
es
mov
push
add
mov
outsl
sub
andb
out
inc
xchg
adc
arpl
push
pop
xor
in
push
out
std
xlat
or
es
pop
mov
mov
push
push
fiaddl
popa
xchg
xor
rclb
cmp
rorl
sti
test
push
pop
daa
add
or
test
sub
cmp
or
sub
inc
sbb
jge
pop
enter
icebp
push
jle
lret
addl
mov
enter
fs
cmpsl
loopne
or
mov
cmp
lret
push
testb
mov
mov
fwait
lret
inc
fisttpll
mov
mov
cmc
aaa
mov
add
ficompl
sbb
mov
add
mov
xlat
into
mov
xchg
lds
int
jge
in
mov
jle
test
jns
out
inc
adc
add
pop
sbb
iret
xchg
lods
lcall
xor
push
sarb
cmp
jnp
scas
xchg
inc
mov
sar
jge
cld
jmp
pop
sbb
xchg
fisubs
in
negl
pop
inc
daa
movsb
adc
pop
rcrb
mov
dec
fcomps
pop
xor
loop
dec
aaa
xor
dec
dec
in
cmc
shll
insl
cmp
in
jns
outsl
repnz
insl
test
xchg
fistpll
xor
cmp
fistpl
jo
fwait
hlt
and
inc
push
insl
lock
jbe
add
test
jno
std
aad
aam
ds
mov
add
sub
dec
repnz
dec
pusha
ds
mov
jno
mov
dec
lea
clc
fiaddl
pop
repz
adc
in
push
popaw
popf
dec
pop
dec
pop
bound
cmp
sbb
adc
jmp
popa
shll
andl
pop
test
int
or
orl
push
dec
inc
test
push
sub
xchg
sbb
inc
jge
and
jbe
ljmp
daa
cmp
sbb
ret
sbb
sub
ja
cmp
cli
push
jnp
scas
inc
rcrl
rorl
mov
faddl
dec
sub
cmpsb
jbe
int
jnp
xlat
mov
and
je
ret
mov
scas
ret
cltd
movsb
jo
mov
sbb
push
rcr
pop
sub
cmp
dec
and
jl
out
and
lret
push
inc
pop
into
mov
sub
adc
dec
mov
or
inc
cmpsl
inc
insb
andb
scas
or
nop
mov
jb
dec
lahf
stos
or
dec
je
fdivs
js
adcl
push
out
addl
jae
cmc
sbb
data16
jbe
inc
jecxz
mov
outsb
jge
jecxz
hlt
sub
xorl
and
ss
xchg
mov
mov
outsb
push
adc
sahf
push
mov
in
xchg
test
jecxz
mov
stc
hlt
xchg
xchg
xor
jo
mov
jno
es
loopne
sahf
loopne
jno
xchg
les
lods
or
imul
jp
sbb
out
imul
inc
and
sbb
paddusw
jbe
aaa
add
jl
adc
subb
pop
xchg
mov
ret
jno
pop
js
dec
pop
cli
mov
mov
lods
fs
nop
inc
rcrl
mov
cs
push
xchg
cs
popf
std
push
or
movsl
fdivs
sbb
cmpsl
imul
out
stc
lods
pop
xchg
nop
add
add
push
cmp
loop
or
pop
jno
lret
dec
lahf
aas
ljmp
push
xchg
or
aas
adc
add
out
xchg
mov
push
push
inc
mov
xor
xor
mov
mov
pop
mov
imul
enter
adc
jp
repz
sub
add
inc
jno
xchg
jmp
xchg
jp
mov
out
pop
roll
and
rcll
stos
pop
test
xorl
jne
test
idiv
push
or
and
push
jo
pop
stos
movsb
push
xchg
or
in
add
cmp
out
les
scas
popf
xchg
movl
mov
mov
xor
jae
cmp
mov
xchg
inc
or
sub
rcrl
fsubrl
sub
dec
out
arpl
push
pushl
repz
fsubrs
xchg
xchg
sub
sbb
ljmp
mov
dec
mov
imull
or
adc
mull
popf
rolb
sub
lcall
sti
sarb
daa
mov
mov
and
xchg
dec
cwtl
jb
insb
mov
xor
and
sub
fs
xlat
mov
out
or
stos
fld
inc
fsts
inc
mov
pop
aam
sub
out
mov
jo
std
orb
outsb
imul
jns
outsl
leave
inc
test
push
sub
lods
and
test
fldenv
pusha
addl
mov
push
cmp
stos
repnz
mov
out
fisttpl
pop
popf
pop
daa
iret
pop
out
mov
mov
xor
push
mov
cmp
out
xchg
inc
cmpsb
scas
sub
inc
test
or
add
outsb
mov
push
mov
rcll
xchg
mov
clc
movsb
push
mov
pop
jo
sub
jne
jge
or
arpl
rcrb
sub
mov
in
cmp
lahf
cmpsb
xchg
test
jmp
loopne
aas
sub
mov
dec
jge
mov
push
rcrb
sbb
mov
fwait
xchg
stos
sub
cli
sbb
bound
cmp
repnz
ja
cmpsl
sub
push
in
lods
push
pop
daa
pusha
xlat
fwait
divb
loopne
jb
pop
and
insb
scas
push
mov
daa
jo
xchg
adc
sti
cmp
pushf
cmc
aaa
inc
jle
jae
test
call
popf
rclb
sahf
test
pop
or
lret
or
ss
mov
xor
lret
jle
jl
cli
add
sbb
mov
or
in
or
sub
push
ljmp
mov
jmp
fwait
insl
dec
add
mov
dec
arpl
out
xor
or
cmp
into
lret
fimuls
push
push
or
aad
nop
xchg
gs
mov
icebp
mov
ret
inc
mov
xchg
jb
mov
jg
je
xchg
inc
loopne
fnstsw
shl
sbb
xchg
push
std
fs
xor
aad
push
pop
xor
mov
adc
icebp
jecxz
push
cmp
stc
sbb
stos
gs
push
fwait
sahf
andl
xor
in
mov
push
push
insb
pop
inc
xchg
sbb
shlb
leave
mov
fsubs
xlat
and
pop
and
lea
mov
fildll
push
mov
mov
movlps
push
mov
jb
dec
push
cmp
out
cwtl
shrb
push
and
xchg
test
repz
jge
fldcw
lock
hlt
xchg
out
push
sbb
imulb
sub
dec
clc
cmp
xor
aam
sarl
shr
pop
or
push
xchg
sub
push
int3
adc
xor
inc
movsl
xchg
push
jae
push
lret
lods
and
mov
pop
pop
mov
fmull
xchg
fcomps
and
clc
mov
inc
fsubrs
adc
xchg
in
scas
rcl
popf
ja
mov
mov
sbb
shlb
dec
and
xor
stos
sub
adc
mov
lea
and
mov
or
les
movsl
jne
inc
sbb
out
clc
fbstp
aam
inc
cmp
add
sub
sbb
out
jle
xor
cmp
cld
les
leave
pushf
lret
fisubs
mov
xchg
sub
sub
mov
mov
into
pop
mov
sub
in
rcrl
inc
push
adc
inc
rol
xchg
loopne
mov
mov
loope
enter
mov
xchg
push
es
or
push
sbb
and
and
sbb
jecxz
adcl
lea
mov
lahf
fimuls
sahf
rep
pop
test
jo
mov
mov
sarl
push
fsub
push
sub
mov
xchg
ljmp
lret
jns
rcrb
or
jb
adc
jb
cli
dec
add
inc
lcall
or
or
scas
repz
mov
out
pop
mov
cltd
ret
push
xchg
call
mov
push
aam
add
and
or
lock
je
sbb
mov
decb
sub
rol
jo
fdivr
stc
add
lock
mov
aas
fisubrl
or
push
js
xor
lret
das
mov
je
sbb
nop
sub
lods
push
repz
push
les
repz
mov
rorb
fbld
mov
popa
sbb
and
push
dec
lea
daa
jp
fidivrl
je
cmp
aad
xchg
push
and
hlt
mov
and
lea
xor
insb
arpl
test
pop
xchg
jg
push
xchg
ret
enter
ds
inc
adcb
dec
outsb
mov
sar
inc
mov
push
imulb
into
xchg
mov
or
stc
mov
test
in
mov
lret
in
cmpb
xchg
xchg
xchg
inc
mov
lods
dec
mov
icebp
gs
pop
jno
pop
out
and
adc
xor
fidivrl
push
jecxz
cmp
daa
add
ja
pusha
ret
call
cs
call
in
addr16
hlt
lods
push
jbe
jmp
fdivr
ljmp
jnp
add
insl
sbb
sub
mov
filds
xor
sbb
inc
sti
pop
pop
jl
inc
jns
out
xchg
sub
clts
movl
out
xchg
into
test
stc
xchg
mov
ljmp
shlb
das
bound
je
inc
mov
icebp
repnz
popf
cmpsb
js
lea
inc
xchg
sub
jge
and
mov
cmp
xor
adc
xor
repnz
test
leave
add
push
lock
data16
jno
inc
imulb
gs
mov
fcmovnu
mov
sbb
ja
or
aas
sti
dec
jmp
jmp
fwait
push
lds
scas
imul
cwtl
adc
push
inc
movl
mov
adc
std
xchg
and
lods
inc
mov
je
jnp
scas
mov
push
lret
fstl
aaa
mov
cmc
aam
in
add
fimull
fcomp
pmuludq
shr
loop
sub
mov
inc
add
xor
mov
dec
mov
scas
pop
jg
loope
xchg
inc
xorl
jmp
sti
aam
stos
call
inc
push
clc
sahf
repnz
sarb
mov
jge
mov
sub
clc
int
pusha
xor
mov
mov
das
mov
leave
int
fimuls
popf
lahf
enter
aad
add
pop
into
adc
cltd
mov
mov
lahf
jb
mov
test
movsb
scas
leave
insb
add
call
inc
ds
ret
in
or
cmp
lods
fistpll
test
inc
and
adc
aas
and
xchg
mov
dec
pop
jbe
pop
or
inc
xchg
loopne
lods
std
dec
xchg
stc
jbe,pt
push
pop
in
or
cmp
pushf
add
mov
mov
pop
jmp
rorb
mov
add
and
mov
or
gs
and
add
mov
sbb
mov
jge
movsl
gs
mov
mov
test
and
test
leave
cmp
in
rorl
add
jle
fistpl
cmp
movsl
jns
and
jp
cmpsl
stos
pop
xorb
nop
xchg
cmpl
jo
mov
mov
sbb
xlat
mov
aas
pop
dec
lcall
arpl
sbb
dec
add
mul
pop
add
or
add
and
add
jg
adc
test
push
jns
imul
adc
pop
jne
andb
movsl
dec
dec
mov
adc
int
in
lea
jge
or
xor
pop
ret
addr16
jmp
sbb
int3
test
xchg
and
popa
pop
pop
xor
pop
repz
xor
lahf
xchg
test
lds
cmp
add
add
movsb
fnstenv
jno
mov
add
mov
lahf
test
leave
cmpsb
repnz
sub
jecxz
mov
sarl
iret
scas
adc
cmp
faddl
xor
sbb
rep
insb
or
imul
inc
loope
or
out
movsb
fld
loope
dec
movsl
and
add
pushl
fimuls
cmp
outsl
into
sbb
cmpsl
pop
pop
jecxz
sbb
push
ficoml
movsl
fs
add
pushf
or
test
popf
shl
stos
push
aad
shlb
sahf
or
sahf
or
sbb
js
js
and
xor
stc
insb
or
iret
into
insl
gs
les
sahf
mov
jb
and
sbb
sbb
dec
or
mov
icebp
mov
fiadds
popf
int
cltd
jno
or
adc
outsl
mov
cmp
mov
adc
push
fiadds
sbb
clc
les
jecxz
pop
mov
xor
push
pop
inc
pushf
cmc
ficompl
mov
sbb
lret
in
mov
sbb
inc
insb
adcb
add
or
pop
or
push
dec
iret
sbb
enter
outsb
jp
xor
xchg
subb
mov
cmpsl
and
aaa
out
and
shrl
test
sub
nop
jp
push
adc
push
pop
xor
int3
movsb
jb
jmp
mov
jo
into
pop
add
popa
fisttps
test
shll
adc
mov
xor
and
stos
outsb
jp
add
jmp
mov
dec
std
scas
daa
cmp
or
adc
addr16
push
dec
mov
mov
iret
push
xor
hlt
dec
jl
ret
xor
fwait
push
stos
or
movsl
add
xor
test
fimull
ror
sub
aaa
leave
lret
lea
loope
jge
ss
xchg
shl
icebp
cmp
push
inc
pop
push
in
dec
mov
inc
cltd
inc
mov
test
rcrb
aas
cmpsl
stos
push
clc
jo
jecxz
out
sub
mov
lods
lock
mov
bound
pop
in
icebp
loop
sub
pop
out
ljmp
or
scas
jmp
lret
lahf
cmpsb
jo
mov
mov
js
add
adc
sub
or
jecxz
scas
popf
jnp
mov
xchg
fldenv
inc
rcl
push
lcall
inc
adc
push
lret
adc
clc
dec
sub
mov
les
xlat
adc
push
pop
repz
orb
adc
aad
shll
cmp
inc
sbb
repnz
and
mov
sbb
stos
jb
lea
decb
fsts
mov
dec
aad
jp
out
mov
flds
inc
cwtl
cmpb
push
roll
fucom
push
pop
imul
xor
in
sub
lcall
mov
ja
push
shll
or
mov
es
shlb
sub
cmpsl
sub
imul
cld
add
aam
dec
scas
cmpsb
aaa
inc
jne
jnp
clc
mov
js
pop
mov
into
rep
lods
repz
aas
or
lods
inc
icebp
xchg
fistpll
cmp
insb
or
xchg
insl
cltd
loop
cwtl
iret
fdivr
mov
adc
sbb
andb
and
pop
push
sub
push
imul
in
addr16
sbb
mov
in
stos
cmpsb
test
icebp
lret
jo
jbe
xlat
jb
es
sub
in
loop
cmp
inc
add
cmp
test
cld
cwtl
adc
mov
scas
xor
fwait
xorb
jecxz
cs
lds
adc
and
out
mov
mov
and
ret
xor
cmpsb
xchg
cmp
out
push
push
shrl
loopne
repz
leave
repz
repz
sub
add
outsl
ds
test
fwait
pop
cmpsb
or
inc
pusha
stos
mov
lods
jecxz
out
in
ret
jns
sbb
das
xor
out
mov
imul
in
cli
nop
outsb
fidivs
test
je
or
inc
loop
addr16
pop
push
mov
stc
jecxz
into
xor
testb
jmp
mov
fisubrl
stos
in
fbld
aaa
leave
xor
mov
add
sti
js
fwait
outsb
pop
jecxz
nop
aam
dec
cmpl
aad
xchg
loopne
jge
mov
fs
inc
jns
pop
cmpsb
ss
or
sbb
adcl
xor
lret
xor
push
repnz
addr16
xlat
aaa
mov
pop
jno
icebp
movsb
lahf
stos
hlt
adc
sub
icebp
in
in
mov
and
leave
test
ja
pop
les
push
sbb
fstl
inc
jl
rorl
stos
call
xor
cli
data16
cmp
iret
lea
and
inc
cmpsl
rcrl
xchg
sbb
and
test
dec
pop
adc
pop
pminub
mov
jl
stos
push
add
sbb
xor
mov
loope
cmp
call
cli
jg
and
sbbl
pop
aas
mov
in
fwait
jecxz
mov
idiv
int
dec
outsb
or
das
inc
push
in
cmp
xor
cmpsb
xchg
pop
jne
push
and
xchg
loope
insb
fisubrs
push
popa
out
mov
push
ret
cmpsl
mov
cmpsl
and
loop
cmp
popa
jo
xchg
sbb
test
out
shrl
push
and
cmpsl
dec
pop
scas
dec
add
cmp
push
fcoml
pop
push
pop
and
fdivr
ljmp
push
cli
js
je
les
cmp
xchg
cmp
jae
es
push
in
dec
gs
roll
push
lret
push
data16
push
daa
pop
mov
addr16
loopne
lcall
mov
lea
nop
cld
mov
sub
sarl
shlb
sbbl
xlat
mov
jg
std
mov
ljmp
and
test
movsb
adc
iret
cmp
adc
adc
sbb
sub
cmc
pop
lahf
add
pusha
xlat
push
add
xchg
leave
jno
mov
fucom
push
hlt
loop
fwait
outsb
adc
mov
jno
inc
jno
sbb
mov
dec
push
mov
nop
insb
pop
adc
mov
cli
ds
fisubrl
cmp
test
pop
jecxz
clc
push
pop
cwtl
sub
popa
andl
test
add
test
idivl
adc
mov
push
cmp
mov
push
rcrb
push
fldenv
cmp
mov
mov
adc
add
xchg
mov
cmpsb
iret
sbbl
jno
add
imul
aad
mov
push
mov
hlt
movsl
mov
pop
xchg
cmp
ljmp
adc
outsl
leave
fbld
out
mov
cwtl
or
adc
xchg
popf
sbb
shrb
data16
mov
fcoml
jge
repz
mov
gs
stc
movsl
jle
jo
jbe
jmp
dec
jnp
adc
fistps
or
and
xchg
pop
ss
das
and
push
in
rol
incl
mov
add
push
inc
imul
dec
mov
and
dec
inc
pop
cmp
cmpsl
fstpl
push
push
lahf
in
rcr
xchg
movsl
pusha
lret
inc
sti
push
push
mov
lods
mov
in
adc
inc
pop
lock
cmp
inc
jle
int
push
or
mov
xor
int
pop
xchg
fs
stos
jmp
mov
incl
push
ljmp
adc
fisubl
inc
inc
and
xor
add
mov
popa
out
add
movsl
dec
mov
fs
mov
lret
dec
mov
mov
inc
or
mov
sbb
stos
mov
sub
data16
xlat
int3
mov
jo
std
lcall
cmc
es
xchg
push
aas
pop
mov
jb
push
addb
outsl
push
jp
cmp
mov
fsubrs
sahf
leave
or
cmpsl
pop
pop
fsubs
cmp
push
rcr
data16
cmpsb
pop
add
insl
mov
sub
aaa
mov
adc
les
bound
mov
icebp
adc
in
scas
push
lods
call
adc
sbb
or
lods
cmp
cltd
pop
jnp
xchg
lods
pop
aas
push
sti
mov
std
shl
jecxz
pop
mov
adc
jmp
fstpl
inc
pop
and
mov
mov
stos
pop
loope
stos
inc
fnstcw
dec
sub
cli
mov
mov
jp
imul
jo
add
out
inc
rcrl
loopne
or
jns
xchg
cmpsb
jne
xor
cmp
fucomi
dec
and
call
movsb
jmp
lcall
mov
xchg
movb
pop
loopne
mov
and
xor
in
mov
or
sub
test
mov
insl
or
sub
sub
dec
push
pop
bound
push
imul
gs
xlat
or
loope
dec
xor
pop
adc
mov
iret
popf
inc
add
mov
daa
lahf
mov
sbb
jnp
cmp
mov
xor
icebp
jnp
add
jle
jle
aad
adc
insl
pop
psubusw
mulb
jnp
scas
stc
sbb
scas
leave
movsl
sbb
mov
ljmp
and
std
sbb
mov
repz
mov
push
or
mov
dec
jl
test
imul
lds
sbb
mov
xor
hlt
popf
and
insb
lcall
js
xor
mov
lods
dec
pop
and
psllq
pop
cmp
lods
js
incl
lods
jb
pop
les
mov
dec
test
int
and
cmp
fisubs
out
pusha
rorl
lods
pslld
xchg
or
fistl
mov
jbe
popa
add
aad
dec
add
cli
dec
xor
inc
fisubrs
inc
jge
jne
test
jb
and
aam
stc
sti
adc
leave
sbb
in
jmp
sub
out
mov
or
cmp
xor
or
insb
mov
mov
xchg
mov
push
push
inc
je
pop
out
es
jb
or
mov
mov
aad
scas
cltd
jo
ja
mov
add
sahf
scas
xor
jecxz
jl
jmp
push
outsl
fsubrl
inc
adc
out
pop
aas
icebp
ss
in
or
dec
fadd
lcall
adc
cld
mov
inc
inc
frstor
scas
inc
icebp
adc
xor
sub
pop
xor
cmc
push
arpl
not
mov
les
and
fldenv
lahf
mov
jb
cmp
cmpsb
cmp
pop
xor
test
das
shll
stos
adc
sbb
jo,pt
mov
lret
inc
jg
das
jno
gs
cli
xchg
jae
jle
xlat
fsubrs
sahf
in
and
push
js
gs
cmp
sbb
push
lret
dec
xor
sbb
ret
imul
xorb
and
popf
lcall
lret
sub
js
pop
stos
jbe,pt
pushf
cmpsl
push
sbb
dec
mov
mov
xchg
daa
adc
adc
xchg
loopne
loope
sbb
pop
ds
rcll
adcb
popf
cmpsl
popf
or
aam
or
jae
bound
xchg
je
bound
mov
ja
pop
push
fucomi
and
dec
fisttpl
pop
sbb
or
sub
mov
movq
lret
mov
xchg
push
push
call
pop
pop
cmpsb
or
ficoms
sahf
jnp
adcl
int3
arpl
lret
ds
lds
inc
xorb
aas
cmpsl
xor
aas
xchg
lds
mov
cmc
clc
jge
mov
rcr
in
adc
xor
sub
dec
sti
fdivrl
or
mov
push
mov
aaa
cwtl
pop
movmskps
shll
dec
mov
inc
mov
sbb
mov
shl
ret
pop
sbb
cmc
rorl
cli
add
jne
xchg
mov
iret
fists
jne
xchg
pop
scas
flds
movsl
in
mov
adc
mov
imul
addb
sahf
mov
pushl
jg
mov
sbb
mov
cltd
inc
push
or
rorl
pop
es
add
das
sti
or
sbb
push
mov
inc
loope
jl
dec
sbbl
icebp
sbb
lea
shlb
fsub
fmuls
int
sub
push
shlb
int
lret
jg
mov
jns
sbb
mov
fsubrl
xchg
dec
jp
fiadds
int
fisubrs
hlt
adc
rolb
mov
cmpsl
adc
dec
clc
adc
ljmp
mov
lock
popa
outsb
xorl
repnz
add
gs
iret
jmp
repnz
stc
push
shlb
fs
xor
cwtl
mov
mov
jmp
mov
pusha
ret
mov
fs
popa
mov
mov
fsubrl
or
jne
and
pop
outsl
insl
fcmovbe
outsl
pop
outsb
addr16
mov
mov
push
leave
scas
push
cmpsb
shrb
jmp
arpl
cmp
cli
loop
jo
ficoms
subb
cltd
adc
mov
call
gs
or
icebp
jp
fwait
mov
lahf
jae
out
mov
inc
fnstenv
push
adc
cmp
imul
jb
mov
or
or
sub
jmp
daa
adc
fidivl
and
mov
pop
into
shlb
xchg
pop
lcall
push
sub
jae
hlt
call
dec
add
test
sub
rcrb
hlt
jg
push
cld
icebp
push
mov
mov
push
stos
scas
adc
or
test
mov
mov
mov
les
testb
rcrl
or
lcall
in
mov
les
adc
and
add
dec
xchg
mov
mov
test
add
add
into
sbb
inc
sarb
mov
mov
lret
mov
stos
rcll
stos
sbb
shlb
mov
lret
xor
xchg
cmp
jnp
dec
lcall
popl
dec
ja
dec
repz
push
push
sbb
rcll
int3
xor
cmpsb
rcrb
xchg
cmp
mov
loop
paddd
shlb
mov
loope
sti
push
addr16
xchg
and
push
in
hlt
mov
and
addr16
lock
push
jecxz
mov
cmp
xor
and
cmp
hlt
hlt
mov
sub
imul
lcall
and
rcll
pop
adc
add
in
loopne
add
ljmp
cmc
outsl
or
pop
in
mov
popa
jno
sub
dec
lods
outsl
add
rclb
paddsb
jo
push
mov
xchg
insl
jae
push
test
ret
stos
mov
fistpll
xor
inc
inc
xchg
jne
fxch
repz
mov
lret
out
outsb
xchg
int
pop
push
sub
xchg
int3
add
in
shr
xchg
xchg
iret
cmp
lret
mov
ret
sub
cmp
test
jp
test
cmpb
repnz
dec
mov
jmp
adcl
xor
pop
xchg
movsl
sub
pop
push
add
dec
fdivr
xchg
add
test
sub
dec
test
lahf
popf
xchg
pushf
xor
mov
inc
loope
std
mov
lcall
xchg
pop
xchg
xchg
test
mov
pusha
mov
sbb
or
dec
fidivl
inc
aaa
mov
pop
stos
les
pop
ss
jnp
lcall
sbb
xor
add
sub
mov
lock
aam
popf
or
mov
jnp
gs
push
sub
and
scas
dec
push
mov
and
xor
aaa
jns
pop
sbb
pop
inc
mov
mov
pop
test
lcall
and
jnp
xchg
cmpsb
out
repz
imul
popa
mov
aas
push
dec
cmpsb
pushf
mov
mov
es
mov
adc
jae
ss
roll
sbb
inc
jo
sub
dec
shll
dec
aaa
and
addb
push
inc
push
loopne
in
imulb
fsubs
sub
dec
bt
xchg
jb
cli
push
movl
aas
ja
shrl
xchg
fs
push
and
sbb
inc
int
dec
test
xchg
xchg
dec
rorb
dec
push
enter
pop
push
cmp
mov
push
mov
xchg
aad
add
dec
dec
fisubrl
sbb
shrl
ds
xchg
mov
fcmovnu
scas
leave
decb
and
outsl
sahf
sti
pusha
push
subl
adc
lds
xor
cmpsb
xchg
jns
add
in
add
or
test
icebp
dec
fbld
test
adc
inc
sub
les
stos
push
xlat
inc
push
pop
cmp
loope
mov
movb
dec
lret
shrb
int
mov
push
lods
sti
pop
popf
pushl
sbb
aaa
cmpl
repz
enter
loopne
mov
sub
test
gs
dec
test
mov
wbinvd
push
aas
or
or
cmpsb
cmpsb
jge
add
dec
movsb
fidivs
leave
push
out
pop
psrad
scas
sbb
or
out
jp
jae
sbb
jl
add
imul
lods
jno
and
xor
mov
mov
shrl
xchg
icebp
call
pop
mov
sub
inc
cmp
into
ror
mov
pop
jb
inc
sbbl
sbb
movb
mov
and
jmp
jmp
in
shll
shll
ja
into
cltd
and
icebp
gs
and
jb
cli
dec
sub
fsubp
mov
mov
fisubrl
insb
je
icebp
aad
mov
adc
jo
mov
mov
push
cmpsl
fidivs
int3
cmpsl
jb
mov
jecxz
stos
add
mov
hlt
movsb
das
loope
push
loop
sub
mov
into
mov
push
add
mov
xchg
push
es
lret
fisttpll
scas
ret
jae
mov
pop
aaa
xor
mov
mov
clc
add
into
push
mov
add
mov
mov
in
inc
int
int
jae
lea
inc
mov
loopne
mov
jns
pop
mov
les
dec
jmp
mov
pop
and
in
ja
or
movsb
xor
cmp
mov
sub
cwtl
xor
movsb
das
sbb
nop
xchg
les
cmp
aam
faddl
push
fbstp
in
in
gs
pop
loopne
mov
jb
jb
and
ja
inc
push
inc
aas
sub
add
sub
loop
stos
mov
hlt
mov
push
popa
sbb
pop
ficoms
jns
mov
inc
enter
pop
lock
mov
dec
shlb
mov
jbe
leave
or
adc
jp
out
orb
jns
ret
mov
insb
xor
test
jno
sahf
jne
inc
sahf
imul
mov
out
jg
mov
inc
inc
mov
mov
ret
sarb
lret
fdivrs
aam
in
xchg
aas
pop
ljmp
add
pop
lds
xchg
cmp
stc
ret
fiaddl
lcall
stos
pop
push
or
add
inc
stc
pop
adc
and
into
es
mov
fsubrs
xor
frstor
dec
cwtl
jno
xchg
or
cwtl
push
lods
cmc
adc
mov
gs
lods
or
sbbl
movsb
and
dec
inc
add
cmp
jp
cltd
push
mov
dec
pop
adc
lea
in
jo
mov
aaa
cli
cs
aam
cs
rcl
movsb
xchg
stc
mov
repz
xchg
push
pusha
mov
iret
mov
ljmp
mov
cmc
cmp
mov
shrb
sbb
adc
aaa
cmpsl
dec
lds
cmp
pop
iret
add
push
lods
jne
xor
and
test
push
test
xor
xchg
push
or
xchg
push
dec
fisttpll
adc
aaa
and
pop
mov
mov
lock
xor
fldl
sbb
ret
fiadds
mov
push
je
mov
mov
sbb
mov
xor
and
fs
imul
insb
fs
movsl
mov
xor
xlat
push
mov
push
jnp
out
loop
cmp
fstps
sbb
push
sbb
mov
mov
jp
xchg
sahf
cltd
aas
iret
and
or
xlat
jnp
mov
and
and
lcall
fiadds
pop
aam
shrb
paddsb
push
pop
cli
sbb
and
test
not
jl
push
mov
lcall
dec
xor
mov
pop
sbb
in
lret
xlat
and
or
lods
std
jo
mov
jae
push
pop
lahf
mov
aas
mov
add
jge
out
icebp
xor
in
insl
ljmp
push
xor
pop
das
mov
repnz
hlt
mov
mov
ret
lcall
les
push
adc
loop
mov
fnsave
daa
dec
pop
xlat
and
test
mov
pop
push
bound
adc
test
sbb
popa
fs
jne
sub
test
out
insw
imul
xor
add
mov
push
push
ret
js
movsl
outsl
enter
push
ret
xchg
insb
xchg
test
dec
ret
jg
mov
sti
imul
mov
aam
inc
push
or
and
fsubr
and
les
sahf
mov
mov
push
ficoms
pop
dec
lret
std
outsl
jnp
sub
adc
icebp
pusha
push
or
hlt
cmpsl
sub
lods
aas
mov
and
mov
into
pop
cmp
jo
and
sbb
xor
out
roll
rorb
ss
std
out
or
and
jns
xlat
adc
dec
arpl
bound
pushf
dec
mov
mov
or
or
lock
push
push
mov
pop
roll
jecxz
jae
pusha
scas
mov
int
adc
cmp
sub
push
ror
mov
dec
mov
or
jo
adc
sbb
push
rcl
jb
mov
pop
lret
les
repnz
mov
or
and
ss
inc
mov
scas
pop
jb
sbb
mov
sbb
adc
cmp
rcll
mov
or
dec
lret
xchg
shlb
dec
rorb
inc
cmp
lds
push
inc
stos
and
push
jecxz
jns
push
adc
mov
div
push
mov
mov
xchg
es
pop
imul
sub
jecxz
push
pop
incl
bound
jmp
inc
xlat
or
stos
imul
or
fwait
add
popf
mov
jb
mov
icebp
dec
dec
pop
mov
dec
jecxz
mov
and
mov
out
or
insb
mov
in
push
cs
xlat
lea
insl
adc
and
xor
fldcw
in
jo
or
lods
jmp
gs
sqrtps
fiaddl
in
sbb
push
pop
xchg
or
mov
mov
aad
loope
xchg
mov
ficoml
adc
and
dec
push
shr
mov
mov
mov
sbb
mov
or
xor
sbb
or
add
dec
mov
pop
fs
in
push
xchg
ret
mov
mov
test
cs
or
and
leave
sahf
inc
pop
push
addr16
aas
lcall
add
aas
dec
lds
push
movsl
sbb
mov
pop
jbe
cmp
and
add
cltd
mov
mov
push
sub
cmp
insb
ss
cmovbe
sbb
pop
mov
std
adc
cwtl
into
ret
loop
lods
jl
or
stc
nop
mov
dec
push
je
in
add
sub
push
test
call
xor
pusha
sbb
adc
lods
or
popa
iret
cs
pop
cmp
hlt
mov
ror
out
xor
mov
push
or
test
fmull
adc
nop
xchg
ljmp
add
int3
dec
call
pop
sub
aas
aad
cmpsl
aaa
push
int
out
xor
inc
test
cmovp
and
and
inc
test
and
into
dec
pushf
test
dec
or
push
icebp
stos
subb
clc
stos
cli
leave
xchg
out
push
pop
mov
pop
cmp
pop
mov
sbb
aas
and
add
add
loop
iret
fstps
add
adc
dec
cwtl
dec
pop
mov
mov
into
mov
and
mov
outsb
xor
inc
dec
lcall
fldenv
outsb
or
mov
xchg
jmp
pop
icebp
ret
aad
clc
mov
inc
mov
mov
les
push
stos
je
repnz
xchg
andb
push
xor
jo
icebp
mov
into
mov
sbb
or
pop
jle
cmp
inc
stc
xchg
in
clc
jae
xchg
adc
int3
cmp
dec
testb
jbe
pop
out
xor
mov
sub
dec
xlat
or
mov
mov
and
outsl
cmp
or
fsts
sbb
out
js
cmp
mov
and
jle
inc
loope
mov
xchg
fcoml
outsb
stc
jne
mov
xchg
jo
pop
nop
sbb
lods
popf
xlat
out
in
mov
add
repnz
test
movsb
push
dec
lahf
dec
lret
arpl
jmp
ljmp
mov
lret
push
dec
call
add
sub
lods
and
fbld
jg
call
sbb
push
lods
cwtl
add
sub
loope
xor
or
mov
sbb
insb
xchg
xor
movsb
and
mov
roll
out
add
lcall
xor
adc
insb
mov
fwait
mov
repnz
pop
sarl
jne
jne
ret
mov
inc
scas
mov
push
dec
inc
mov
rcrl
cmp
clc
mov
mov
and
adc
cmpsl
xor
jo
adc
iret
int3
xor
scas
mov
pop
test
dec
out
fnstsw
mov
push
adc
dec
sbbl
lret
inc
mov
mov
sub
push
decb
dec
out
mov
adcl
scas
adc
dec
mov
fisttps
cld
test
xchg
loop
dec
std
or
cmpsb
mov
push
lcall
daa
out
rcrb
inc
cmp
and
adc
dec
loopne
xor
xchg
add
out
add
dec
lock
lret
mov
jae
xchg
in
jg
add
sub
mov
paddsb
and
pop
pop
das
jge
repz
dec
mov
frstor
pop
rcll
sub
loope
cltd
inc
lcall
mov
mov
cs
cmc
inc
sbb
mov
inc
out
mov
dec
sub
pop
sbb
sub
xchg
push
addb
add
sbb
test
js,pn
test
pop
sub
pop
sub
stos
pop
mov
adc
les
pop
and
xor
cmp
pop
addr16
xor
cmp
cmpsb
std
mov
stc
imul
sub
outsl
enter
ja
lret
scas
out
jmp
outsl
pushf
rolb
scas
insl
pop
xor
orl
mov
fmull
pop
xor
ss
and
fwait
push
sbb
cmp
xchg
mov
lret
dec
mov
add
adc
aaa
sbb
call
mov
or
loope
fstpl
hlt
jg
cmp
fwait
pop
scas
fmull
xchg
iret
frstor
popa
inc
clc
xor
push
fnstsw
and
insb
loop
popa
testl
lods
int
mov
stos
inc
jge
enter
dec
jbe
push
dec
lret
in
jle
jne
pop
frstor
stos
sarb
dec
inc
xchg
cmpb
insb
push
push
test
ds
dec
call
mov
sbb
pop
mov
mov
ror
rclb
push
test
out
sub
or
pop
sub
sbb
or
mov
mov
fcom
movsl
jno
adc
movsl
pop
int3
sbb
int
push
popf
fucom
test
aam
add
xchg
test
push
xor
std
mov
flds
cmp
mov
sbb
or
scas
fsubrl
enter
mov
pop
out
push
xchg
rolb
lret
test
sbb
out
in
and
ja
lods
mov
fsin
aad
out
leave
xor
xchg
adc
icebp
shlb
hlt
push
cmpb
and
loope
div
or
adc
mov
popa
mov
orb
or
ja
mov
jg
cmp
aaa
test
int
cmp
stc
cld
adc
mov
sbb
test
pop
xchg
hlt
mov
in
stc
addb
notl
jno
cmp
xor
or
sub
hlt
xchg
aam
or
sub
sbb
pop
push
aam
jae
cmp
adc
inc
stc
push
xchg
clc
sub
loopne
sar
jns
outsl
ss
mov
lret
lods
pop
lds
aam
sbb
sbb
push
pushf
pop
sub
pop
and
mov
ljmp
sub
adc
and
or
push
xor
sub
cmpsb
cltd
or
cmp
jb
stc
adc
scas
cmp
pop
icebp
and
xchg
loopne
cmp
inc
adc
sbb
not
aaa
adc
aas
mov
push
out
xor
mov
movsb
inc
adc
loope
xor
in
cli
stos
push
jl
aad
aad
pop
stos
mull
or
mov
in
xor
cli
scas
xchg
xchg
cmp
rcll
sub
lcall
dec
aaa
icebp
mov
imulb
add
ljmp
scas
xor
pusha
push
loopne
pop
xchg
adc
push
aad
sbb
cmpl
mov
sahf
arpl
jp
fstl
sub
jns
aaa
outsl
xchg
push
mov
lods
dec
fstp
ficomps
cmpsb
lods
jle
pop
cltd
and
movsb
jbe
lea
sbb
jnp
cmpsb
pop
or
cmp
in
dec
pop
hlt
mov
jae
xor
adcl
test
movsb
jp
lea
leave
adc
test
ja
cli
outsl
test
aad
lods
mov
faddl
mov
cld
pushf
js
sahf
out
mov
nop
mov
jl
add
outsl
jecxz
push
stc
int
push
xchg
ret
rcrb
scas
repz
scas
cltd
dec
mov
call
jnp
test
adc
lock
dec
sub
inc
xor
push
push
dec
cld
mov
jp
adc
push
mov
repnz
cltd
xchg
cmpsb
pop
ficompl
in
repnz
cs
lcall
or
shrl
nop
roll
xor
dec
ds
add
stos
jno
pop
gs
rclb
mov
inc
in
stos
repz
mov
xchg
inc
fwait
lock
jg
cmpsb
scas
enter
cmp
imul
pop
leave
mov
mov
xor
pop
or
clc
mov
divb
repnz
pop
fsub
adc
inc
inc
pop
mov
push
out
bound
filds
and
stos
fmull
mov
andl
shll
add
push
or
xorb
mov
cld
pmulhw
mov
push
test
repnz
loopne
arpl
push
sbb
xor
in
cld
and
adc
push
or
jne
decl
mov
imul
push
cmp
aaa
dec
dec
cmp
add
fmul
add
popa
push
xor
leave
add
scas
xor
cmp
cli
ja
sbb
xor
inc
push
push
pop
into
push
inc
pop
stos
pop
cs
sbb
and
adc
jns
push
repnz
push
adc
popf
repnz
dec
push
int3
push
loop
test
sti
mov
nop
fadds
dec
sbb
mov
mov
jecxz
cli
inc
int
loopne
stos
sbb
pop
inc
out
into
cli
data16
push
inc
sub
in
ror
data16
pushf
jae
mov
jbe
pop
loop
lock
cmpsl
fs
xor
test
out
ficompl
pusha
popa
pusha
int3
and
mov
mov
in
je
in
xorl
test
jb
sarb
cmpsw
repnz
aad
jl
iret
iret
sub
test
and
jmp
sbbl
rorb
rcll
add
add
pop
jmp
and
jo
sub
js
cs
or
es
les
lcall
out
push
mov
jmp
adc
mov
cwtl
outsb
dec
popf
insl
or
jbe
mov
add
mov
cmp
add
imul
adc
icebp
invd
hlt
pop
adc
fldenv
jecxz
mov
pop
lock
popf
sbbl
out
sub
ja
ds
add
push
cmp
mov
out
test
ss
getsec
fdivr
cmp
sbb
loopne
mov
pop
dec
loope
jge
and
mov
push
push
shlb
iret
lcall
pop
cmp
js
fiaddl
popf
mov
loope
fmuls
into
and
mov
loop
jg
dec
lret
or
out
mov
push
push
cmp
dec
sub
jg
shrl
mov
adc
mov
aaa
test
cltd
in
fistl
into
cld
into
jg
add
das
test
pop
pop
lret
movsb
lahf
push
dec
inc
inc
mov
repz
idivb
js
pop
sti
out
push
mov
repz
or
mov
pushf
xlat
or
lcall
repnz
or
pushf
test
xlat
xor
mov
fcompl
push
imul
push
push
dec
mov
lods
cmp
fsub
mov
repnz
notb
xchg
push
push
pop
mov
mov
push
stos
pusha
inc
rcrl
ret
pop
addr16
pop
outsl
mov
push
add
ljmp
outsl
adc
scas
xor
inc
xor
pop
or
mov
xor
adc
sbb
add
cmc
fs
mov
aam
call
jg
xchg
ja
ljmp
into
in
xchg
movsl
dec
inc
xchg
sbb
mov
stc
nop
inc
adc
xor
ds
add
push
push
jns
mov
and
in
mov
lock
sbb
xbegin
xlat
mov
test
clc
or
scas
jae
push
ss
adc
mov
push
mov
pop
add
push
sub
lcall
es
pop
je
dec
bound
mov
repz
pop
add
sbb
loop
mov
inc
mov
dec
pop
xor
cmp
cld
call
mov
movsb
jmp
cs
add
repnz
add
xor
lods
sbb
jmp
cmp
addr16
and
mov
test
pop
and
mov
ds
push
mov
dec
clc
or
xlat
stos
or
pop
in
jmp
jo
std
inc
fs
mov
dec
shl
loope
gs
mov
shll
in
ret
jg
ljmp
push
clc
das
and
jb
jle
in
inc
xchg
xor
and
pop
shll
shlb
popf
mov
sbb
std
aad
push
lods
lods
int
gs
cmp
cmpsb
adc
adc
mov
xchg
stos
add
mov
pop
sbb
clc
or
popf
xchg
cmp
cmp
push
jbe
jo
fsts
xor
mov
mov
jle
fisubs
cmc
dec
test
adc
addl
shlb
test
aam
leave
adc
dec
or
sbb
icebp
cmp
bound
fsubrl
jecxz
fiaddl
dec
sbb
cmc
shlb
jmp
cmc
jb
push
icebp
jae
pushf
lods
adc
gs
sbb
arpl
lods
outsl
pusha
add
xlat
and
pop
jecxz
dec
mov
and
push
sub
in
add
addr16
xchg
loope
mov
jne
mov
int3
fildll
jbe
popa
mov
sbb
fcompp
or
test
pop
push
pop
movsl
adcl
mov
aam
rcll
push
pop
mov
mov
push
insl
orb
out
out
jl
jle
or
mov
sub
fisttps
mov
aas
pushl
cmc
enter
loope
das
mov
xor
adc
insb
iret
stc
push
jmp
ror
les
sub
andb
stc
mov
jnp
push
js,pn
push
inc
jnp
fnstsw
cld
pop
xchg
loop
cmp
xor
jns
std
xor
fs
test
pop
movsl
mov
sub
stc
es
sub
in
insb
mov
cwtl
xchg
sahf
dec
in
arpl
dec
sub
sub
adc
push
fsubs
fdiv
mov
mov
push
fcomps
xchg
nop
ret
ljmp
aad
lods
sbb
popf
arpl
into
pop
lea
dec
jo
push
sahf
cmp
pushf
pop
ja
mov
hlt
mov
and
dec
stc
lret
mov
mov
mov
xor
inc
sbb
xchg
jb
mov
add
jae
ljmp
sbb
push
dec
sub
js
aam
mov
sbb
xchg
push
pop
jbe
aad
cmpsb
je
sub
xchg
sbb
sti
jbe
sti
test
stc
lods
pop
push
movsb
cmpsl
push
push
insb
cmpsl
mov
adc
dec
cmp
fwait
mov
aam
mov
adc
xchg
and
in
into
decb
or
sbb
mull
ss
cmp
xchg
jb
ss
hlt
xchg
jnp
std
mov
leave
outsl
mov
jecxz
imul
fisubrs
or
movntq
inc
rcrb
adc
xchg
jmp
or
pop
jns
scas
data16
pop
pop
sti
cld
test
insb
sbb
dec
pop
enter
repnz
hlt
mov
xchg
xor
sub
flds
lods
push
mov
mov
mov
mov
mov
imulb
and
mov
int
in
ret
loopne
enter
addb
cmp
xchg
cmp
loopne
aaa
sub
pop
pop
dec
rcll
in
pop
jg
pop
repnz
movsl
mov
mov
jle
jecxz
iret
stc
add
dec
or
nop
push
outsb
test
in
fwait
xlat
add
jmp
fsubr
lods
mov
add
test
out
xchg
jp
lahf
xor
pop
dec
pop
xor
or
rcr
ss
jno
mov
sub
loopne
pop
cmp
mov
xor
cmc
mov
pop
xchg
adc
psraw
jmp
sbb
scas
sarl
jae
imul
popf
jbe
in
rcrb
pusha
xchg
popa
fwait
addr16
data16
stos
in
out
or
adc
call
mov
aad
push
lock
or
jl
dec
and
mov
mov
and
inc
xor
aaa
xchg
pop
xchg
addr16
mov
bound
je
pusha
push
mov
or
ja
out
dec
out
iret
and
es
scas
inc
fldt
sahf
mov
inc
pop
add
fsubs
fwait
jl
add
adc
sub
scas
inc
imul
dec
inc
dec
dec
xchg
insb
loopne
sub
movhps
mov
push
inc
ret
cmp
int
adcb
je
test
and
sbb
jl
stos
mov
pop
sbb
in
outsl
cld
jnp
adc
mov
mov
push
iret
sbb
xchg
xor
pop
jge
ret
mov
sti
xor
inc
repz
push
inc
mov
in
adc
test
into
adc
dec
scas
mov
addl
stc
fistps
sub
jecxz
xor
dec
jge
bound
dec
out
mov
sub
shlb
adc
ljmp
shll
nop
push
jb
stc
mov
mov
shl
adc
rcrb
scas
ljmp
push
add
fimull
rorb
adcl
aam
ljmp
xor
outsb
mov
mov
inc
movd
loopne
or
and
test
outsl
js
aam
jl
aad
mov
out
sbb
sbb
xor
cltd
and
ror
fnstenv
pop
imulb
movsl
dec
mov
insl
repnz
test
mov
fisttpll
mov
push
aas
lcall
out
pusha
add
and
int3
js
or
xlat
into
leave
shrb
cmp
inc
cmpsb
push
push
push
aaa
inc
test
lea
or
adc
fidivrs
mov
push
mov
imul
and
sub
inc
xchg
push
adc
add
dec
xchg
xor
lds
mov
mov
add
movsb
add
mov
mov
dec
je
fsts
and
xor
mov
fdivp
mov
nop
pop
fisubl
gs
lret
lods
sarb
data16
insl
cmpsl
adc
lahf
icebp
sbb
js
test
jno
outsl
cmp
jo
not
xchg
push
cmp
orb
add
add
and
fbstp
or
jb
into
jecxz
aas
jns
and
inc
out
cmpb
ss
lock
push
xchg
sbb
xor
lods
pusha
xchg
into
test
cmp
lock
loope
or
pop
pop
in
sub
fisubl
push
fldcw
sbb
shlb
loop
cmp
jae
jl
xchg
movsl
cmc
lods
lods
mov
pop
int3
push
mov
adc
jecxz
sar
pushf
das
shrb
pusha
in
fildl
imulb
xchg
xchg
je
sbb
or
adc
in
rolb
dec
sbb
imul
xchg
push
pop
jne
icebp
cmp
xchg
dec
xor
setne
sti
jmp
cwtl
sub
cmc
jbe
popf
mov
in
into
mov
lret
jnp
cs
inc
rclb
cld
add
cld
sub
in
outsl
pop
pop
and
arpl
das
pop
cmp
sub
jae
cmp
push
xlat
neg
jge
ja
cmp
and
mov
hlt
data16
mov
scas
dec
add
jmp
xchg
xchg
insb
aaa
rcr
xchg
call
adc
cli
addr16
out
xor
pop
pushf
pushf
leave
or
xchg
sbb
dec
call
lahf
bound
mov
loop
mov
fnstsw
lock
push
xor
push
mov
dec
das
xor
into
out
cmp
rorb
and
test
sub
test
push
sbb
jnp
cmp
inc
rolb
add
lahf
stos
sbb
test
andb
fbstp
jo
scas
ja
lock
addr16
xchg
pop
orl
push
popf
leave
mov
lods
in
das
adc
add
imul
push
call
gs
or
xchg
ret
cmp
pop
sbb
cmp
test
or
fs
bound
sub
fimuls
add
pop
xchg
iret
xchg
dec
pop
sti
xor
jecxz
in
out
loop
int
fdivl
cli
fs
aas
pusha
pop
add
xor
pop
or
stc
sbb
dec
test
jnp,pn
xchg
dec
icebp
xor
lods
leave
popf
imul
enter
or
lcall
int3
jp
push
lds
push
mov
in
stos
xchg
pop
test
dec
pop
shl
jb
mov
sub
ret
xchg
adc
mov
adc
ret
test
or
imul
mov
cmp
stos
insb
dec
scas
movsb
xlat
clc
popa
jbe
jecxz
lea
push
enter
or
jne
xor
xchg
ret
rolb
jo
and
mov
push
in
insl
sub
cli
sbb
inc
inc
stc
cli
pop
cmpsb
and
mov
sbb
xchg
adc
dec
inc
jg,pn
push
mov
lds
or
lret
in
xchg
icebp
jnp
sbb
cwtl
and
je
inc
mov
sub
out
imul
loopne
xor
pushf
ljmp
mov
in
es
cwtl
inc
inc
mov
jb
jmp
mov
push
shlb
dec
aaa
cmpsb
fs
or
xor
mov
jg
mov
sbb
pop
jae
movsb
xor
jl
xlat
test
add
push
retw
fidivs
xchg
mov
or
mov
push
sbb
xor
or
in
flds
pop
mov
or
mov
in
xchg
inc
adc
negb
jmp
xlat
adc
mov
jge
jnp
inc
pop
mov
mov
arpl
xchg
stc
cltd
jecxz
mov
jl
sub
push
xor
movsb
jmp
xor
mov
fistpl
dec
imul
push
aam
cmp
adc
pop
in
std
repnz
mov
shl
fsubrs
pop
es
cmp
insl
jnp
frstor
test
inc
repz
xchg
out
mov
lods
push
mov
jne
mov
mov
in
int
mov
sub
inc
frstor
insl
jmp
push
pop
dec
insl
pop
mov
dec
dec
cltd
mov
in
add
dec
inc
mov
insl
das
insl
sbb
pop
add
sub
sub
or
and
dec
adcb
mov
leave
xchg
or
xchg
push
in
stc
mov
add
push
nop
aas
push
or
ds
mov
aaa
in
or
and
repnz
inc
push
nop
or
inc
ss
dec
and
mov
mov
and
cmpb
inc
outsb
pop
data16
lods
inc
inc
adc
test
cmp
movsb
scas
nop
sbbb
xor
jecxz
dec
xchg
sbb
fldenv
mov
dec
dec
cmp
add
int
jmp
mov
aas
imul
loop
mov
or
sbb
mov
int
addr16
and
pop
dec
mov
add
sub
mov
mov
shl
dec
or
dec
hlt
jo
xchg
pop
lea
and
inc
sbb
dec
xor
adc
outsl
mov
pop
or
adc
cmp
rclb
cltd
fists
jns
sub
ss
shlb
clc
imul
iret
rclb
adc
sbb
mov
pop
xor
ja
add
xor
and
cmp
xlat
sahf
das
mov
es
and
xlat
cmp
ds
mov
call
mov
or
xchg
push
out
in
pop
adc
repz
mov
dec
mov
cmp
in
xchg
int
fs
jecxz
jbe
and
das
lods
pop
orl
loop
repnz
mov
push
fbld
rclb
jg
scas
sub
decl
neg
push
dec
enter
fsubrp
out
jl
out
cmp
lcall
sub
xchg
shlb
add
xchg
repz
ret
mov
imul
aam
push
cmpsl
pop
leave
dec
std
mov
cmpsb
cmp
cmp
push
and
les
sti
push
pushf
sbb
sbb
leave
push
popf
stos
adcl
daa
add
pop
xchg
data16
sbb
adc
je
out
addr16
iret
sub
fwait
mov
pop
mov
andb
sbb
into
cmp
loop
inc
jg
cmp
movsl
insl
stos
fistpll
jns
mov
out
nop
mov
roll
subb
mov
jl
insb
dec
sahf
mov
cmp
jl
cmpsb
cwtl
xlat
or
sbb
shlb
xlat
ljmp
roll
inc
das
mov
push
mov
mov
mov
popa
test
sub
in
mov
add
ja
dec
xchg
addr16
jl
jnp
mov
sub
pop
out
ljmp
dec
aam
lock
in
pop
cmp
mov
xor
jg
sbb
mov
pop
pop
and
push
aas
cmpsb
ja
sub
dec
sahf
pop
pop
fldl
xchg
gs
shl
or
ret
outsb
les
dec
and
test
ret
xchg
mov
negl
call
or
fsubs
cmp
les
sbb
mov
notl
jg,pn
push
or
or
sti
pop
and
fmuls
jne
ja
movsb
lock
rep
mov
imul
fwait
push
dec
pop
leave
mov
jl
sbb
and
add
jg
mov
push
insb
push
inc
inc
and
cs
mov
adc
jg
jecxz
sub
sbb
outsl
scas
les
inc
lret
mov
pusha
push
daa
in
pop
adc
notl
add
mov
arpl
sbb
pop
mov
jp
pop
in
clc
in
xor
ljmp
cmp
pushf
int3
sub
pop
push
ss
inc
adc
icebp
pop
mov
xchg
jb
ret
cmp
lds
mov
mov
into
sahf
ss
and
fwait
mov
pop
inc
add
jnp
call
cmp
jmp
sbb
xchg
ljmp
rcll
rcrb
add
inc
jle
dec
mov
or
and
insl
cmp
jle,pt
clc
ja,pt
outsl
push
inc
and
sbb
loop
xchg
sti
sbb
call
adc
mov
inc
lods
push
jnp
sbb
das
mov
out
add
std
lock
jbe
in
inc
jnp
outsl
mov
and
and
daa
fwait
push
outsb
cmp
cli
ss
sbb
insl
mov
or
popf
loope
dec
jmp
mul
rolb
push
pop
sbb
fistl
rcll
xchg
scas
faddl
jg
cld
add
sub
jne
jnp
pushf
jo
lret
cmpsb
scas
cmp
push
jmp
sahf
jne
mov
adc
or
mov
push
xchg
cld
pop
out
lcall
add
sub
les
popa
es
das
dec
cmp
mov
ror
rorl
jp
inc
jge
inc
ljmp
rolb
sbb
jg
fldcw
iret
lahf
int
in
into
mov
pop
test
mov
sbbb
xor
push
inc
dec
mov
jae
cmp
dec
rolb
test
lcall
mov
pop
movsl
mov
push
sahf
aas
cs
mov
push
jno
mov
dec
add
ja
fdivrs
sahf
lret
inc
cmp
rcr
push
pop
insl
in
nop
jno
outsl
jl
iret
cmpsb
mov
dec
popa
mov
cmc
jnp
mov
lods
dec
fsubl
xor
mov
mov
data16
movzwl
mov
mov
sarl
mov
push
andb
das
fwait
pop
cmpsl
incl
loop
gs
xchg
leave
jo
dec
xchg
scas
mov
cmp
loope
xchg
dec
not
std
mov
outsl
mov
dec
pop
sahf
push
lods
cmpsb
mov
push
ja
orl
pop
shll
or
stc
jmp
cmpsl
sbb
adc
add
mov
std
fwait
cs
aad
lea
clc
adc
icebp
mov
inc
in
xor
sti
jmp
mov
adcb
cmp
out
push
mov
ret
push
ret
cmp
mov
mov
mov
fldt
mov
in
pop
cmp
sbb
gs
inc
cmp
sub
adc
cmp
xchg
xor
mov
in
pop
mov
and
loopne
push
fimuls
pop
bound
icebp
mov
fildl
dec
cmp
loopne
xor
adc
inc
mov
xchg
imul
fdivr
or
cmp
sbb
leave
mov
mov
cmpl
push
enter
pop
adc
addr16
and
ret
ds
add
pop
subb
in
jae
mov
out
add
push
dec
jmp
cltd
scas
cmp
push
into
mov
fwait
mov
into
outsb
sbb
jno
leave
cli
xlat
xchg
sbb
mov
mov
and
test
rcrl
cld
pop
stc
subl
add
je
outsb
nop
cmp
adc
pop
imul
notb
adc
add
cld
mov
mov
cmpb
lahf
pop
jmp
jbe
shlb
sti
fisttpll
frstor
dec
nop
inc
lods
inc
mov
fildl
xchg
inc
xchg
out
xchg
je
cmpsl
xor
dec
mov
mov
int3
ret
imul
ljmp
ret
push
loopne
leave
push
std
call
mov
adc
test
test
inc
mov
push
repz
jmp
ret
xchg
aaa
sbb
sbb
es
bound
sub
jmp
xor
outsl
lock
sti
xchg
aad
jne
outsl
pop
dec
xchg
mov
mov
xorb
decb
ds
andl
adc
cmp
adc
mov
pop
inc
jecxz
insl
lods
call
mov
cmpsb
jmp
push
mov
pusha
je
sahf
es
int
adc
xchg
xchg
push
and
data16
test
outsl
xor
sarl
test
cmp
sbb
mov
fdivs
or
xor
dec
das
pop
pop
mov
loopne
cmp
les
inc
pop
and
mov
xor
jns
push
test
dec
or
mov
sub
add
push
push
dec
hlt
sub
push
adc
mov
fists
dec
cmc
in
cmp
pop
icebp
ror
pop
faddl
loop
hlt
ss
lea
push
xor
pop
loope
ja
int
stos
xor
or
jmp
inc
or
stos
jnp
pusha
call
or
das
cltd
cmp
add
adc
dec
out
sub
lods
cli
jmp
dec
sub
insl
gs
mov
inc
xchg
lahf
enter
rclb
inc
sbb
imul
fdiv
fcom
orl
rsm
aaa
or
xchg
xor
pop
pop
jp
loop
adc
aaa
push
movl
mov
out
sub
push
mov
test
cltd
lret
sbb
subb
jp
lea
mov
cmp
sub
test
test
or
stc
call
pop
jnp
fdivrl
jae
ret
fisttpll
test
mov
jo
or
lock
fists
mov
das
repz
aas
jnp
roll
mov
fucomp
sub
push
dec
cmc
push
and
ror
push
add
rorb
movsl
xchg
imul
loope
pushf
enter
out
xchg
mov
adc
ret
ficomps
cmp
sbb
xchg
and
dec
faddp
call
mov
jns
vmwrite
or
movsl
das
movsl
mov
and
push
mov
fstpt
mov
xor
mov
xchg
mov
mov
xchg
xor
add
inc
icebp
or
popa
daa
and
aad
sbb
adc
stos
pop
mov
pushl
dec
inc
sub
cwtl
xor
repnz
insb
or
and
cmpsb
xor
xchg
dec
loop
and
add
add
in
frstor
ficompl
inc
vmovss
push
and
std
dec
xchg
test
enter
cmp
ret
ds
aas
jo
sbb
inc
bound
mov
cmpsl
rcll
mov
mov
cmpsl
pop
cld
mov
adc
pop
lcall
jmp
dec
jle
inc
sbb
mov
xchg
or
call
pop
cmp
jg
sti
fwait
adc
test
out
in
sbb
je
outsl
dec
push
enter
imul
xchg
pop
sbb
loop
dec
lret
inc
icebp
fldcw
imul
ss
fistl
cmp
or
mov
push
loope
icebp
mov
and
ficompl
dec
shlb
mov
imul
std
scas
movsb
pop
lods
and
sbb
mov
or
xchg
je
cli
cmp
fistl
cwtl
movaps
popf
pop
xlat
xchg
jae
daa
sbb
in
add
push
lea
jne
xchg
jnp
mov
fcmovne
dec
loop
inc
inc
inc
dec
movsl
std
mov
test
push
push
outsb
rcr
clc
pop
lods
sarb
and
dec
and
loope
cmp
xor
xchg
test
cli
mov
push
and
or
or
dec
jg
popf
pop
aas
xorb
sbb
push
pushf
addr16
dec
lret
aad
adc
ficoml
into
mov
enter
dec
dec
ret
dec
jns
shll
push
xchg
jnp
out
into
adcl
push
nop
mov
test
cltd
dec
dec
std
cmp
jbe
imul
inc
and
push
movsb
cmc
repnz
cs
mov
fistpll
cmp
xchg
add
xor
inc
add
ljmp
adcb
xor
pusha
jmp
and
and
push
std
push
cmp
sbb
push
adc
inc
rorl
xor
inc
ret
jecxz
push
bound
sub
repnz
xchg
outsl
jo
enter
dec
adc
adc
dec
push
out
or
or
mov
icebp
movsb
jmp
insb
test
fidivrs
xchg
in
push
imul
nop
and
ljmp
and
inc
pop
inc
cmp
pop
mov
adc
adc
inc
inc
push
imul
jae
fdivrl
cmp
mov
and
test
loopne
icebp
add
ja
mov
inc
scas
mov
int
fs
lret
or
pop
gs
mov
out
movsb
aam
jb
xor
xor
dec
lds
cltd
pop
ss
out
push
jge
and
fsubrs
inc
inc
push
sub
jno
cmpsb
ds
sbb
push
push
scas
pop
xor
cli
pop
sbb
in
jmp
mov
inc
push
in
out
mov
leave
or
sbb
jmp
cwtl
les
jecxz
cmp
cmp
pop
mov
push
adc
pushf
mov
in
shl
mov
inc
sbb
ds
push
pop
jno
call
push
loopne
aam
sub
push
mov
dec
in
sbb
inc
adc
out
add
push
pop
xchg
pop
mov
add
pusha
fiadds
mov
data16
dec
xor
fidivs
inc
fidivrl
fidivrs
addr16
dec
or
inc
inc
filds
nop
in
sub
push
push
mov
push
sti
mov
xchg
popf
enter
dec
jp
test
movb
call
es
negb
loop
push
pop
jle
test
xor
dec
jns
in
fwait
addb
adc
jmp
loope
xabort
and
xchg
cmpsl
lret
add
pusha
in
in
push
jp
cwtl
fs
push
push
fcmovnu
cmpsb
sbb
sub
xchg
xorl
int3
inc
je
test
fwait
int
push
xchg
push
adc
int3
xor
iretw
adc
fimull
mov
jbe
mov
push
loope
sbb
jecxz
addr16
sub
mov
sti
insl
push
pop
outsl
sarl
adc
mov
mov
dec
xor
mov
or
xchg
ss
xor
sahf
imul
inc
stos
popa
push
xor
push
inc
sti
sub
lds
fwait
lcall
mov
fs
inc
or
mov
pop
push
dec
mov
loop
adc
pop
sub
xchg
pop
stc
scas
out
shr
int
push
loopne
clc
inc
pop
or
add
push
push
in
outsl
ret
arpl
aam
loope
push
push
xchg
testb
repnz
jae
lods
inc
mov
sbb
imul
add
rolb
push
addr16
arpl
mov
out
mov
cmpsl
push
push
shl
popa
shll
add
lock
test
gs
insl
fsubrs
inc
fdivp
mov
out
dec
or
mov
es
pusha
xor
xchg
scas
nop
mov
test
es
xor
adc
inc
jns
mov
dec
cld
add
jp,pn
addl
xchg
cmp
dec
int
pop
mov
pop
fwait
mov
pop
insb
inc
inc
jb
xchg
lret
inc
dec
adc
fwait
push
ja
dec
pop
icebp
test
push
pop
mov
inc
mov
dec
add
sbbb
push
and
mov
xchg
push
inc
xchg
xchg
in
loop
push
xlat
lds
fwait
xchg
dec
mov
mov
lods
adc
mov
std
cmp
aas
sbb
sub
xchg
pop
adcl
push
jecxz
arpl
hlt
ret
push
aas
repnz
pop
inc
xchg
jo
lea
cmp
dec
add
in
inc
jecxz
call
xor
jmp
adc
or
fwait
shlb
inc
sub
iret
sbb
jge
and
aam
mov
sarb
xor
pop
dec
xchg
cmp
cmpsl
nop
es
dec
cld
out
and
inc
jb
in
insl
adc
cmc
in
in
dec
mov
imull
inc
mov
push
xchg
out
mov
mov
incl
or
push
test
fimuls
mov
les
xor
aaa
sbb
fstpl
sbb
cmp
inc
int3
xchg
mov
mov
lods
das
mov
dec
add
inc
sub
push
adc
sbb
ret
lock
ret
cmp
or
xchg
dec
xor
mov
push
and
aas
mov
cld
imul
or
push
repz
inc
out
fldl
mov
sbb
add
cmc
xchg
dec
jnp
jmp
fs
movsl
outsl
xchg
dec
pop
ficomps
call
pop
push
and
sub
cmpsb
inc
xchg
cld
push
pusha
pop
int
nop
pop
out
popa
jae
iret
fisttpl
fwait
cmp
mov
popa
inc
jmp
or
scas
sahf
lea
shlb
xchg
out
fwait
out
mov
aaa
bound
outsl
sti
out
mov
filds
dec
pop
pop
out
imul
mov
fnsave
dec
mov
mov
addb
lds
fidivrs
in
xchg
cmc
mov
addb
xor
cmp
pop
icebp
xchg
cs
mov
inc
cmpl
cltd
xchg
pushl
gs
mov
jno
jb
cmp
push
push
test
out
add
fisubl
sbb
push
mov
sbb
mov
adc
dec
and
inc
adc
dec
pop
push
pop
fisubrl
mov
bnd
jb
mov
push
cmp
iret
jp
bound
inc
sub
aas
jnp
jp
andl
rorl
loopne
mov
adc
stos
stos
aam
test
adc
sarl
fisttpl
sbb
jecxz
cltd
or
mov
in
fsubrp
pop
adc
mov
mov
daa
mov
loop
out
push
mov
mov
and
decb
xchg
loopne
shlb
push
sub
xchg
arpl
ds
jge
mov
cmp
xchg
and
add
push
clc
je
sub
aas
mov
or
out
das
mov
push
or
outsb
test
mov
jns
xchg
mov
xchg
inc
xchg
arpl
jg
add
pop
mov
popa
dec
xchg
mov
pusha
clc
push
mov
subb
enter
adc
pop
sub
lret
xchg
lods
or
fcmovne
mov
scas
cmp
leave
xchg
mov
jnp
fmull
hlt
js
jbe
fwait
xchg
mov
andl
xor
pop
mov
ss
push
les
das
scas
jb
stos
push
fsubrs
pushf
push
push
rorb
stc
fistpll
push
flds
push
popf
in
fidivs
add
test
push
je
rorl
call
mov
sub
adc
roll
pushf
xchg
lods
dec
in
xchg
inc
loop
xchg
pop
add
pop
or
test
dec
push
xor
jecxz
sub
ret
dec
jmp
push
cmp
fstpl
pop
das
mov
cmp
lcall
out
imul
cwtl
nop
in
aas
inc
mov
repz
rorl
cld
mov
cmpsl
in
out
and
test
push
ret
ret
call
mov
cmp
inc
sbb
cmp
or
cmp
out
popa
daa
jnp
pop
mov
imul
sub
sub
or
daa
mov
mov
std
gs
xor
push
add
rclb
fs
pop
ficoml
jb
push
adc
scas
cmpsb
xchg
cwtl
jl,pt
movsl
sbb
sub
aad
add
setno
mov
sbb
outsb
dec
cli
xchg
leave
and
add
inc
sbb
mov
xor
adc
lods
inc
dec
rorl
jno
mov
pop
pop
sbbl
pop
push
sbb
jns
cmp
pusha
pop
xor
scas
aas
test
cmp
decb
xor
iret
jmp
out
loopne
insl
lock
fsubl
lret
mov
mov
jae
ds
popf
pushf
xchg
xchg
pop
and
sbb
lret
rcrl
int
sub
mov
jmp
aaa
mov
pop
sbb
test
scas
aaa
mov
stos
xchg
je
filds
and
js
fcmovnb
pop
cmc
xor
xor
stos
xor
and
sbb
cmp
ds
lret
call
shlb
popf
cmc
pop
aas
add
dec
stos
and
loope
or
and
mov
into
sbb
cmp
push
cwtl
ficomps
xor
xchg
sbb
push
iret
jmp
or
andb
and
jno
xchg
or
dec
xchg
dec
mov
sub
les
xor
mov
test
test
test
bound
add
pushf
jg
addr16
inc
push
cmp
jb
dec
mov
push
inc
xor
cltd
stos
mov
dec
or
popf
add
jnp
dec
arpl
outsl
loope
fsubs
push
rcll
add
xor
pop
adc
add
loopne
inc
movsl
loopne
mov
pop
mov
test
ljmp
cwtl
inc
aaa
scas
mov
jmp
xchg
mov
pusha
mov
lods
or
imul
inc
aaa
rcr
sbb
mov
cs
test
stos
das
lock
xchg
imul
inc
test
sub
pushf
dec
mov
adc
pop
inc
mov
sbb
mov
out
movb
xor
clc
dec
lcall
add
push
pushf
push
xchg
jnp
cltd
pop
insl
add
mov
mov
jge
inc
mov
movsb
cmp
xor
cmp
cmp
iret
cmp
das
je
add
ljmp
dec
xchg
test
mov
js
mov
xor
pop
jmp
cli
fisttpll
mov
fmull
fsubrl
and
test
pop
ficoml
add
mov
mov
pop
sub
dec
std
adcb
fimull
shlb
bound
roll
push
dec
shrl
ljmp
mov
sub
sbb
mov
and
stos
adc
pusha
cmpsb
test
mov
loopnew
inc
adc
xor
pop
push
stos
subb
aad
or
pusha
filds
jmp
pusha
les
loopne
mov
or
cmp
add
repz
jle
lods
popf
mov
shlb
jl
push
push
fmul
or
js
ds
call
nop
push
cmp
leave
jo
ret
add
pusha
fwait
xchg
sbb
add
sub
pop
xor
stos
adc
arpl
jno
jmp
popf
sarl
xchg
mov
mov
or
push
lds
imul
push
xchg
dec
push
movsb
jge
leave
aad
jl
es
mull
les
stos
fcoml
jb
outsl
jns
imul
xchg
icebp
cmpsb
aaa
sbb
sub
jg
clc
xor
push
subb
je
cmp
dec
out
pop
xchg
mov
fldl
add
in
xor
mov
cmpsl
ret
sbb
dec
xchg
pop
xchg
dec
ret
or
adc
int
jbe
lahf
push
sahf
or
sbb
mov
cmp
movsb
inc
out
outsl
mov
mov
sbb
xchg
stc
mov
testl
adc
lods
mov
iret
notb
test
push
out
stos
repz
cltd
mov
and
es
jnp
push
clc
test
ss
and
sub
add
and
sub
sbb
and
mov
xor
add
les
dec
pop
mov
repnz
jns
subb
cmp
xchg
out
cmpsb
popf
dec
repnz
pop
inc
aad
out
sub
mov
lock
dec
pop
adcl
mulps
dec
daa
and
loopne
fisttpll
sbb
pop
mov
jecxz
stos
sbb
cmp
xchg
mov
pop
sub
idivl
lock
add
mov
and
stos
outsb
into
adc
jbe
xlat
fisubs
lds
out
xor
outsb
pop
add
push
std
ljmp
pushf
in
jl
push
jae
dec
ljmp
xchg
sub
test
pop
add
lds
push
bswap
sbb
mov
push
cmp
sub
mov
aam
fs
xor
sbb
fildl
inc
adc
subl
daa
cmp
cmp
mov
sub
insb
in
pusha
cld
add
pop
gs
pushf
mov
lret
jae
insb
iret
inc
and
xorb
std
insl
mov
dec
sbb
dec
push
test
lret
pop
xchg
pop
push
stc
adc
sub
inc
push
lock
cli
mov
jne
cmp
mov
in
mov
adc
mov
mov
sbb
cmp
sbb
xchg
or
imul
arpl
mov
rclb
mov
lds
mov
lea
rclb
icebp
add
inc
xor
movsl
test
in
sbb
xchg
andl
xchg
cmpsl
jge
gs
inc
jbe
inc
leave
test
sarb
pop
pop
push
mov
jp
fnsave
and
mov
movsb
inc
inc
push
pushf
jns
pop
dec
inc
repnz
jnp
cmp
and
lock
xor
push
lea
fildll
adcl
popf
inc
addr16
jae
out
cmp
sub
stos
xor
jge
xor
test
inc
adcb
pop
jge
out
ret
mov
mov
mov
jmp
repz
data16
dec
pop
mov
movsl
mov
das
jae
sbb
and
xchg
pop
xchg
cmp
inc
lods
loop
addb
dec
insb
xlat
jns
sub
push
mov
lret
mov
sub
mov
call
sahf
xor
rorb
pusha
cmp
mov
loope
fwait
pop
sbb
test
xchg
and
xchg
mov
mov
and
stc
cmpsb
or
cmc
mov
adc
mov
inc
inc
push
arpl
shr
divl
aas
mov
lock
mov
out
lock
xor
out
das
cmc
fnstcw
xor
mov
xorb
idivb
shrl
int
das
inc
xor
mov
popf
dec
shrl
inc
cs
pop
mov
aas
push
out
rcr
imul
pop
pop
mov
jb
mov
fisttpll
test
cld
out
push
pop
sub
ljmpw
xchg
sub
dec
pop
mov
xchg
cmc
pop
and
push
loop
aad
pop
cld
cmpsb
je,pn
jp
sahf
neg
repnz
sub
gs
and
inc
arpl
sub
sbb
jne
xor
cmp
cmpsb
pusha
mov
inc
stc
jecxz
mov
cmpsl
arpl
fildl
imul
pop
add
mov
sbb
jg
mov
int
mov
leave
xor
sbb
xor
xchg
or
adc
mov
dec
mov
mov
aaa
mov
mov
mov
jbe
cmp
lcall
jnp
mov
aam
pop
stc
les
pop
sti
jl
mov
es
loopne
aaa
fisubl
dec
lds
cmpsl
enter
pop
mov
mov
pop
lods
insl
rclb
push
cmpsb
or
xchg
pop
les
push
rcl
std
dec
pop
shll
lea
jl
std
dec
ficoms
jecxz
mov
lcall
cli
pop
mov
mov
add
icebp
jp
fstl
xchg
jne
addr16
sub
inc
enter
rcll
je
mov
fwait
imul
ret
adc
fstpl
std
insb
test
lods
out
sbb
in
push
mov
sub
or
jge
add
and
xchg
iret
dec
dec
movsb
insb
call
mov
xor
and
imul
adc
jg
je
dec
sbb
sub
push
sbb
ja
mov
out
lods
sub
and
jg
cld
arpl
dec
adc
sbb
repnz
mov
mov
cltd
test
jmp
in
std
div
fwait
push
fwait
add
pushl
cmpsl
push
add
testb
insb
test
aam
push
adc
cltd
sbb
mov
fsubrl
cmp
cmp
repz
pop
testb
test
pop
mov
cwtl
outsb
inc
pop
push
sbb
cmp
jge
fsubs
sbb
test
leave
test
rcll
pusha
je
ljmp
mov
sub
cmc
pop
adc
sbb
pop
or
fwait
jbe
fidivrs
nop
pop
push
push
sbb
std
ljmp
add
scas
push
mov
call
xlat
das
fs
enter
inc
cltd
stos
dec
flds
loope
xchg
loope
addr16
jecxz
lock
mov
jo
lss
hlt
in
pushf
add
cmpsb
pusha
jb
push
jge
add
mov
paddw
push
push
jmp
cmp
dec
mov
ja
mov
jo
rcrl
aas
imul
adc
push
subb
or
jb
into
mov
jecxz
iret
test
jns
sub
call
push
jecxz
pop
mov
imul
incb
mov
push
or
daa
inc
or
daa
mov
add
cmp
xor
jo
or
jns
pop
fs
jmp
inc
std
cmpsl
or
es
pop
enter
lahf
ljmp
sbb
jb
sar
jg
fstpl
fiadds
sub
shrb
subb
inc
push
ret
pop
pop
mov
xor
jle
out
jmp
fldl2t
or
addr16
test
fcmove
mov
xchg
stos
or
push
lea
or
mov
mov
hlt
xchg
cld
mov
hlt
das
mov
das
cmp
and
shrl
sbb
fstl
xor
ljmp
add
pop
mov
push
xorl
sbb
fmull
out
xchg
movsl
mov
xor
mov
loopne
mov
divl
pop
jnp
fnstenv
push
mov
lock
xchg
push
or
jmp
incl
jecxz
outsb
popf
push
push
aad
jbe
enter
fs
jmp
lahf
inc
fidivs
or
pop
mov
clc
cwtl
insl
and
jns
jo
push
lcall
sarl
cmp
repz
clc
loop
movsl
test
in
sbb
imul
lods
push
pusha
fsubrs
and
or
sbb
lock
stos
jne
decb
or
pop
or
aam
xlat
fnstsw
add
push
movlps
add
push
jb
xchg
xor
in
rcl
cwtl
mov
pop
mov
test
lret
cltd
roll
dec
push
jp
jne
xor
xor
jp
test
call
dec
pop
test
push
adc
int3
or
fsts
pop
mov
cmc
lcall
repnz
insb
xchg
fsub
pushf
faddl
and
xor
mov
mov
push
xchg
aad
inc
movsb
pop
and
les
lret
xchg
xlat
fists
push
pusha
fidivl
add
out
cmc
popa
mov
cmp
and
xchg
sub
enter
sbb
cltd
mov
rcrb
xchg
cli
fbld
es
fsubp
push
mov
inc
and
cmp
clc
mov
jo
sub
xchg
aad
sbb
fs
cld
push
pop
mov
lods
jmp
mov
mov
les
es
mov
xchg
xor
stos
imul
sbb
mov
mov
pop
xor
dec
rclb
jae
notb
sub
gs
aam
movsl
adc
cmp
xor
cs
or
xchg
jle
mov
mov
jae
mov
add
lds
hlt
std
jmp
ja
fisubs
ljmp
jbe
fisttpl
sub
push
inc
ret
cmp
int
push
mov
in
sub
or
pop
sub
push
pop
and
and
dec
fidivrs
push
out
add
mov
mov
outsl
insl
push
push
pushf
lcall
ja
rcrl
mov
sti
or
mov
adc
dec
push
test
int3
or
dec
pop
mov
or
fidivrl
popf
push
shl
movsb
out
mov
sbb
mov
ss
cmp
sub
lret
mov
xchg
cmpsb
shlb
inc
test
je
mov
push
test
push
enter
scas
fucomi
xor
loop
xchg
xchg
sbb
ret
std
in
mov
arpl
sbb
add
shr
mov
sub
push
dec
mov
insl
jno
sub
stc
add
push
sub
dec
rcr
addr16
enter
in
js
or
xchg
addr16
inc
test
pop
jb
mov
mov
and
out
jecxz
in
in
pop
xchg
jne
and
and
les
sub
adc
mov
sbb
mov
lods
or
cli
loope
js
outsl
int3
stc
insl
pop
fcompp
fstpt
int3
out
pop
int
xor
mov
jl
xor
mov
pop
imul
shrl
cmp
fisubs
sbb
adc
sti
jno
mov
minps
pop
arpl
outsl
loope
lods
in
in
inc
out
mov
sti
les
mov
push
dec
das
dec
xor
inc
test
mov
out
stos
arpl
icebp
popa
cmp
push
jecxz
mov
sbb
mov
mov
scas
ljmp
rcrl
push
in
jmp
inc
js
mov
jmp
or
mov
add
mov
jmp
or
add
out
cmp
jb
pop
int3
insl
outsl
movsl
icebp
loop
ret
iret
shrl
rorb
imul
inc
jle
das
or
sbb
cld
movsb
pop
or
push
dec
mov
aad
sub
push
mov
adc
dec
push
pop
xchg
imul
in
jne
push
in
enter
cpuid
add
jecxz
mov
mov
jl
ljmp
lret
loop
mov
pop
cmp
scas
das
iret
mov
jmp
pop
jo
adc
clc
lret
inc
xchg
cs
jns
dec
pushf
sahf
es
std
cmc
mov
push
sub
iret
mov
inc
decb
xor
mov
dec
and
js
lcall
mov
fcompl
cmp
ret
cmp
adc
add
jbe
adc
push
hlt
xchg
clc
xchg
orl
daa
sbb
jo
aaa
lret
xchg
cmpsb
hlt
jg
add
in
pushf
mov
xchg
mov
dec
test
out
lock
hlt
shlb
sbb
ljmp
pop
jno
sbb
lds
adc
ret
fcmovbe
es
or
ljmp
mov
cli
inc
int3
adc
rorb
and
jae
lret
arpl
mov
push
ss
cmpsb
sbb
mov
je
adc
mov
arpl
push
dec
int3
jle
nop
dec
test
xchg
mov
jae
test
push
fwait
mov
movsb
mov
es
mov
sub
enter
sti
addr16
rcrl
test
sarb
pop
fiadds
jl
idivl
inc
loop
pop
imul
push
insl
in
or
or
dec
jmp
cmp
sub
outsb
sbb
cmpsl
or
mov
inc
stos
clc
mov
divb
inc
push
es
sbb
fwait
in
xor
sbb
movsl
adc
dec
je
xchg
add
or
and
push
mov
pop
adc
ds
negl
add
xchg
aaa
je
mov
push
mov
or
sbb
shl
jae
adc
adc
sub
and
pop
jecxz
and
daa
pusha
ret
gs
sub
in
add
fs
mov
movsl
ret
lretw
fistpl
jae
pop
clc
cmp
or
adc
js
add
adc
sbb
or
pop
push
into
pop
mov
sbb
iret
and
popl
inc
and
pop
mov
jp
xor
dec
stos
je
dec
out
xor
repnz
sbbl
push
stos
mov
loop
add
or
ror
mov
xor
push
cmp
outsb
jae
shlb
rolb
sbb
sbb
xchg
jns
fisttps
jg
push
sbb
into
pop
test
xchg
fistpll
pushf
addl
dec
mov
or
call
xor
leave
jecxz
std
scas
xor
lods
sub
int3
inc
and
mov
add
or
adc
xor
daa
subl
jge
insl
std
xchg
xchg
inc
aas
xchg
out
sbb
test
mov
mov
xchg
mov
insl
arpl
pop
je
repnz
jne
pop
cmc
push
xlat
dec
jl
add
sub
out
add
shlb
into
test
jp
jns
sub
ja
scas
lret
dec
call
ljmp
sar
sbb
sbbb
inc
push
pop
ja
scas
jge
out
cmp
outsl
orl
in
mov
add
mov
test
aas
xor
sbb
lret
ja
sub
mov
sub
inc
bound
js
popf
pop
rcll
pop
pushf
sbb
push
jl
xchg
jle
cli
cmp
lret
sarl
das
in
idivl
pop
repz
int3
cmpsb
test
add
ret
mov
xor
fmull
call
mov
addr16
out
addb
ja
mov
mov
outsl
jecxz
xor
insl
test
mov
add
stos
xor
subl
sub
shrl
mov
inc
pop
sbb
or
leave
and
repz
stos
or
xchg
sub
mov
inc
cld
loope
sti
cmp
imul
pushf
inc
fildl
sti
movsl
stc
lcall
clc
ror
hlt
jl
stos
push
pop
jmp
sbb
roll
pop
and
pop
cli
mov
push
cmp
cmp
dec
add
dec
imul
push
ljmp
outsb
lcall
jle
cmc
xchg
repz
and
mov
scas
or
xchg
test
les
ficompl
pusha
jge
dec
push
mov
inc
mov
in
xor
cmp
aad
into
push
adcl
mov
gs
cld
hlt
jge
arpl
fisubrl
jbe
push
or
sbb
push
pop
push
loope
mov
adc
repnz
sub
pop
add
cmpsl
lock
popa
add
mov
ret
cmpsl
sbb
fstpl
add
push
call
push
xor
insb
orb
and
mov
sub
pop
lds
sbb
sbb
jg
lods
in
test
push
xor
mov
pop
push
mov
and
xorl
loop
adc
cmp
rsqrtps
or
and
outsl
push
popf
push
sbb
scas
incb
clc
inc
addr16
pusha
mov
idiv
test
inc
stos
xor
push
lock
dec
mov
jmp
stc
shll
or
stos
cmp
popa
pop
inc
inc
sbb
subb
inc
popa
sbb
shrb
shr
adc
jae
fdivl
stc
jmp
push
xor
mov
aas
and
cld
loop
mov
sub
jl
pop
sub
pop
mov
sti
dec
enter
adc
icebp
push
imul
fcmovu
add
mov
or
adc
mull
ja
lea
out
jno
xlat
and
mov
pop
jle
outsb
and
sub
jp
mov
cmp
and
xchg
jle
mov
xchg
cmp
and
call
lock
xchg
ror
add
test
fistpll
mov
incb
aad
mov
mov
pop
rclb
ficoms
rep
xchg
fwait
pop
pop
pusha
ljmp
jnp
dec
outsl
imul
iret
imul
dec
sbb
xchg
cld
jno
cs
movsl
dec
es
add
inc
icebp
test
into
adc
ljmp
sub
stc
mov
fisttps
outsw
mov
sbb
jne
cmp
shll
int
test
adc
xchg
push
pop
out
mov
or
adcl
mov
cmp
mov
scas
stc
mov
subb
jae
inc
inc
out
call
adc
xorl
shlb
inc
mov
jecxz
int
stos
aas
ljmp
pop
xor
mov
pop
cmp
lret
sbb
aaa
int3
cld
test
inc
push
push
mov
adc
insl
jp
adc
lret
into
and
leave
mov
push
mov
loope
xor
push
push
cmp
sbb
pop
mov
fnsave
pop
or
jno
add
fucomip
jp
mov
shlb
mov
ret
hlt
clc
repz
and
xlat
mov
nop
int3
inc
inc
adc
and
sbb
jp
lods
rcrl
mov
mov
jbe
lock
movsl
loope
dec
shl
sarl
inc
dec
mov
add
add
push
fsubrl
dec
add
pop
xor
jmp
add
jge
push
sbb
dec
jg
add
mov
int3
je
dec
pop
or
test
pop
sub
xchg
mov
add
inc
ret
loop
adc
pop
bnd
add
ja
loop
mul
dec
fstl
sbb
xchg
pop
jg
pop
rol
xor
ja
push
dec
xor
lret
xor
mov
outsb
test
push
cwtl
xchg
arpl
ds
adc
enter
imul
dec
pop
sarb
stc
imul
sbb
adc
das
in
jl
xor
cltd
mov
xor
lret
xor
or
mov
or
test
cmc
push
mov
cwtl
test
stos
setle
stc
cs
mov
test
sub
insb
pop
xlat
sti
int3
dec
mov
jae
gs
and
xchg
push
sub
daa
mov
fcoml
movsl
mulb
enter
in
pop
xlat
aaa
sti
jno
mov
xlat
or
xor
cld
insb
mov
mov
dec
jl
jmp
dec
nop
push
repnz
iret
jbe
adc
push
jns
push
insb
inc
in
cmp
sbb
add
cltd
xor
pop
test
outsb
testb
insb
jne
das
das
sbb
mov
and
notb
adc
decl
adc
xorl
stos
adc
out
addr16
pop
lds
fmuls
add
sub
sub
cmc
repnz
rcrl
jmp
xchg
inc
es
stos
cmpb
xchg
sbb
adc
test
push
and
orb
adc
mov
push
sbb
mov
push
aam
lods
cmc
loopne
dec
aad
hlt
pushl
push
int
sbb
or
ret
insb
mov
out
or
sbb
in
cmp
adc
shlb
ljmp
mov
inc
push
scas
icebp
cmpsl
aas
or
insb
mov
inc
inc
mov
pop
sbb
sub
cld
bound
orl
cli
aad
cmp
shr
pop
aad
jbe
push
in
push
sti
loop
movsb
aad
xlat
pop
or
push
adc
push
lods
dec
call
or
loope
test
pop
cwtl
dec
test
sbb
xor
push
adc
mov
jo
inc
cmp
in
negb
sbb
fsubrs
adc
mov
pusha
and
sbb
mov
mov
inc
jle
cltd
sahf
jle
js
out
mov
add
stos
and
pop
cmp
ja
adc
xchg
push
imul
jmp
ja
mov
ret
mov
jo
sbb
iret
sarb
inc
daa
movsb
loopne
add
pop
sub
sub
arpl
mov
inc
inc
fcoms
and
pop
dec
sub
mov
cltd
mov
orb
and
pusha
out
add
mov
pop
clc
inc
ds
pop
mov
mov
jmp
xchg
inc
int3
mov
imul
push
scas
movsl
stos
fcmovnbe
pushf
fsub
or
jle
arpl
push
inc
inc
dec
xor
leave
pop
in
mov
cmpsl
jmp
push
jo,pt
or
xchg
mulb
int
mov
or
pusha
mov
daa
pop
stos
xlat
jmp
pop
fsts
je
push
xor
inc
daa
imul
mov
mov
cmc
scas
aaa
int3
sub
lret
mov
mov
mov
mov
add
xchg
xor
or
add
push
aas
dec
repnz
mov
stos
pop
adcb
mov
pop
inc
popa
call
aam
scas
xchg
rorl
test
ds
jp
mov
xchg
and
fidivl
jbe
add
pop
lcall
cmp
arpl
add
lret
mov
dec
mov
jo
pop
insl
test
arpl
dec
cmp
and
add
xor
fdiv
out
shlb
xchg
ss
mov
push
je
and
or
andb
adc
xchg
add
or
test
jb
movsb
dec
sbb
push
loop
cmpsb
fbld
in
ror
or
js
notl
mov
lock
in
inc
mov
aad
fistps
lahf
pop
dec
lods
pusha
lahf
sub
lahf
mov
adc
adc
lahf
data16
popf
nop
stc
pusha
int
adc
outsl
jecxz
out
push
xchg
sbb
cmp
lock
ret
enter
add
xor
daa
ljmp
fstpl
cmp
cli
testl
jns
sub
or
cwtl
int3
and
popa
cmp
jnp
jnp
mov
movsb
stos
lds
jne
cmpsb
shrl
fdivr
fwait
movsl
std
fdiv
mov
lea
mov
push
or
push
mov
shrb
mov
lock
aas
lock
xor
sub
ja
popl
stc
stc
and
jns
fmulp
and
adc
fcmovb
fwait
inc
or
int
fidivrl
xchg
pushf
jmp
orb
shrl
lds
ja
je
dec
push
lea
xchg
jno
mov
push
ljmp
in
sub
cmp
js
aam
push
inc
push
inc
popf
push
xchg
jnp
pop
test
mov
gs
mov
mov
lea
mov
and
imul
in
mov
aaa
pop
lds
mov
andb
jmp
mov
sti
jmp
adc
push
mov
jnp
mov
fdivr
and
push
sahf
xor
lret
movsl
adc
add
jecxz
mov
cwtl
push
push
fadds
add
es
inc
add
xchg
xchg
and
lock
mov
push
or
jg
mov
shll
les
mov
xchg
and
cmp
fsubs
sub
int3
add
in
adc
in
pop
aas
xor
stc
inc
lock
sbb
dec
enter
xchg
popf
daa
sub
push
cmp
outsl
rorl
in
jae
add
cld
popl
cmpsb
cwtl
or
js
inc
dec
push
dec
jmp
mov
cli
dec
mov
in
xchg
push
or
pop
sub
pop
lahf
xchg
sub
repz
jecxz
fists
dec
cmpsl
cltd
jmp
aad
adc
mov
or
mov
out
mov
push
hlt
pop
push
xchg
jl
movsb
xor
and
shrl
mov
pop
roll
inc
inc
shll
into
negb
inc
lret
nop
sub
faddp
add
cmp
lds
jmp
and
ljmp
addr16
adc
mov
gs
mov
jns
xor
push
mov
inc
cmc
adc
and
and
push
add
imulb
out
lods
xor
ret
enter
adc
ljmp
adc
rcrl
movl
add
out
push
rcrb
les
popa
rcrl
jnp
clc
ret
cs
stos
xchg
add
mov
popa
in
mov
pmulhuw
jb
push
inc
xchg
out
outsl
xchg
cmp
xor
mov
in
ficoms
jne
mov
xor
fnsave
iret
fmull
or
jbe
testb
fsubrl
in
jl
daa
ja
fnstsw
inc
xor
ds
mov
xchg
loope
fmulp
xchg
fldt
push
jg
push
push
rcrl
jnp
mov
lcall
sbb
push
pmullw
inc
cmp
pop
adc
cltd
lock
or
dec
sub
movsl
stos
inc
pop
stc
je
les
call
dec
push
aam
cltd
daa
lret
data16
popf
stos
adc
cmp
push
pop
and
ret
xchg
rcrl
call
dec
fstl
mov
daa
mov
jnp
in
callw
mov
ror
push
lahf
add
divl
or
xor
add
loop
jmp
mov
fdiv
repz
inc
dec
cmp
xchg
scas
adc
xlat
or
lods
inc
xchg
mov
icebp
imul
cmp
or
mov
inc
cmpsb
dec
je
sub
das
jmp
push
xchg
lock
inc
xor
je
mov
dec
lea
lods
out
arpl
movsl
outsl
dec
shl
push
cmc
cltd
repnz
iret
or
sar
lods
mov
enter
sub
pop
fs
orl
sub
adc
loop
adc
cmp
arpl
data16
push
jns
xchg
je
push
jae
shrd
mov
jp
out
adc
out
lods
scas
adc
jne
jecxz
xor
mov
test
sub
jmp
outsl
xor
outsl
inc
xchg
shll
in
dec
mov
mov
jmp
dec
push
jecxz
ja
xchg
dec
imul
mov
ds
rorl
shll
mov
and
adc
cmpsl
dec
xchg
dec
lret
hlt
dec
test
fsubrl
dec
outsb
inc
jnp
stc
cmpsl
arpl
fisubs
std
mov
lods
fisubl
push
push
adc
push
mov
dec
imul
in
dec
andl
testb
outsb
xchg
xor
push
sarl
cmc
inc
and
jae
loope
pop
ss
dec
jmp
dec
xor
mov
lock
inc
inc
mov
into
scas
mov
add
or
dec
and
shrb
test
test
push
ja
test
aam
movsb
rcrb
push
mov
imul
pop
jge,pn
test
push
iret
out
sbb
or
ror
sub
das
mov
push
rorl
mov
xchg
rcll
dec
imul
pop
sbb
and
jp
cmpb
push
insl
dec
jmp
sub
dec
lret
push
xor
les
fiadds
jmp
pop
jb
push
inc
frstor
xor
addr16
jp
or
mov
sbb
dec
xchg
mov
pop
lock
mov
xchg
fildll
in
mov
cmp
and
sub
xor
popf
pop
add
out
js
popa
test
imul
lret
or
pop
dec
and
int
popf
jo
loopne
cld
shrb
inc
inc
jns
sub
les
push
push
jo
ja
dec
test
xor
aas
aam
test
inc
mov
in
fs
push
jb
lret
jmp
pop
imul
or
or
fists
icebp
or
mov
ja
xchg
pushl
movsb
popf
or
pop
call
jl
cmc
adc
aas
cwtl
insl
mov
jmp
ja
hlt
mov
xchg
dec
jbe
stos
out
sub
push
movsl
dec
mov
notl
pop
sub
or
add
push
scas
rorb
cmc
fwait
inc
sbb
mov
sub
movsl
mov
fucomip
test
addr16
mov
das
scas
cltd
mov
fstpl
pop
xlat
fcomip
fwait
push
pushf
xchg
ficomps
cld
mov
adc
test
stos
insb
adc
xchg
testl
dec
add
xor
ds
imul
and
mov
mov
mov
cmp
or
jp
add
jb
rcll
push
xchg
std
add
or
ja
mov
pop
jg
addl
test
cmpsb
sub
ficomps
xor
push
pop
inc
mov
and
push
in
adc
mov
cmpsb
jp
xchg
fiaddl
dec
inc
test
in
das
leave
lret
jmp
cli
addr16
cmpsb
lret
jno
test
jo
cmp
fld
pop
mov
inc
mov
cmpsl
lret
pushf
ficomps
ljmp
movsl
aaa
dec
xor
xchg
dec
jecxz
dec
adc
mov
frstor
pop
pop
dec
arpl
sub
xor
stos
insl
push
das
stos
call
flds
mov
enter
cmp
push
outsl
shl
in
mov
jae
call
jae
inc
movsb
pusha
cmp
sub
cmp
or
cs
or
mov
cli
or
add
es
inc
popl
popf
scas
in
scas
sub
or
hlt
les
sub
dec
xchg
pop
rcrl
inc
jne
fs
dec
mov
repnz
outsb
lock
jne
ror
push
add
mov
pop
lock
scas
mov
shll
imul
mov
push
mov
inc
mov
scas
xor
lahf
in
pusha
test
xor
mov
pop
mov
push
movsb
popf
xlat
sbb
ret
inc
into
push
jb
pop
stc
decl
jae
gs
sub
push
movsb
lods
jo
fistpll
mov
loop
sbb
sbb
jne
rolb
push
gs
pusha
mov
test
push
sub
rcll
pop
movsl
cmp
ds
iret
imul
inc
inc
mov
lahf
loope
int
test
mov
ss
fstps
push
out
enter
jns
mov
pop
fmuls
jbe
ljmp
decb
xor
inc
or
enter
inc
in
lea
str
scas
push
lcall
out
jae
addl
sbb
rol
imul
pop
loop
mov
pop
pop
sub
loopne
std
adc
cmp
lahf
mov
mov
jne
or
push
mov
mov
or
mov
push
popa
add
int3
fisubrs
cmpsl
sbb
iret
aas
fwait
adc
inc
pop
xchg
cmp
shrl
adc
xor
and
mov
inc
sub
lret
addr16
jmp
adc
push
add
into
or
mov
xchg
test
dec
iret
push
jge
mov
add
inc
push
mov
mov
sbb
cli
cwtl
int
xor
scas
push
mov
jg
cmc
dec
setno
ljmp
int3
mov
mov
inc
mov
inc
inc
mov
pop
and
inc
lds
dec
xchg
cmp
lret
jns
pop
stc
div
xsha1
cmpsb
dec
in
dec
loope
andl
loope
in
iret
lea
lret
jge
sbb
mov
xchg
outsb
iret
das
and
dec
sub
in
xchg
std
leave
xchg
sbb
xor
pushf
lret
outsl
in
les
in
clc
sbb
repz
roll
mov
inc
scas
sbb
insl
cmp
insl
rol
fisttpll
add
push
mov
xchg
push
xchg
gs
sub
cmpsb
sub
xor
daa
loope
sub
and
jne
mull
push
adc
fcmovbe
cltd
fcoml
xor
sub
sahf
mov
or
mov
je
out
xchg
pop
or
out
lcall
sub
jae
add
and
icebp
arpl
lods
push
cmpsb
push
loopne
inc
sbb
jp
cmp
in
clc
push
inc
mov
mov
adc
push
push
loop
adc
and
xor
stos
add
lea
sub
inc
dec
inc
cmpb
stc
mov
push
or
jmp
enter
lock
xor
push
insb
mov
cmp
dec
enter
jbe
pop
jmp
xchg
mov
pusha
les
int
xorl
mov
pop
dec
int
leave
add
in
inc
jnp
addl
inc
ret
andb
inc
pop
xor
pop
jns
or
movsb
dec
mov
xchg
fsubrl
pop
jns
xor
xchg
loopne
mov
cmp
jo
or
mov
nop
jo
in
and
cmp
sahf
xchg
mov
das
cmc
pop
lret
das
leave
jns
leave
push
rcl
imul
sbb
xor
imul
bound
jmp
jecxz
sbb
repnz
jmp
mov
push
and
test
inc
sarb
iret
out
pop
ss
fisttpl
jle
test
lods
pop
lcall
inc
jl
xchg
jo
aaa
and
inc
cmpsl
test
imul
filds
ljmp
and
pop
mov
sbb
pop
push
test
jae
jmp
add
mov
sbb
jnp
and
jmp
fs
hlt
xchg
scas
xchg
jae
add
sub
mov
xchg
push
pop
sahf
les
insl
fistps
add
sbb
mov
loope
imul
cld
imul
lahf
stc
aas
dec
les
lret
icebp
fistpll
jne
xchg
sbb
inc
jbe
mov
dec
scas
fisubl
cmp
sbb
sbb
and
popa
sbb
ljmp
adc
int
add
xlat
pop
pusha
jbe
stos
inc
mov
rcrb
dec
lret
sub
xchg
xor
sub
shr
loop
iret
mov
adc
ss
cmp
orl
xlat
ret
test
cwtl
xchg
fnstsw
cmp
xchg
in
enter
cltd
mov
push
ljmp
std
or
nop
jbe
fwait
pop
iret
sub
jb
jno
push
pop
and
ljmp
jnp
pusha
les
add
dec
adc
adc
int
inc
mov
dec
pop
mov
xchg
xchg
pop
js
or
sub
add
sub
xor
negb
icebp
jp
int3
gs
jl
fmuls
loop
js
cmp
sbb
jbe
dec
inc
cmp
jp
mov
test
mov
jbe
daa
notl
repnz
fsubrl
dec
stos
add
movsb
int3
mov
or
push
push
mov
cmp
mov
mov
cmc
aas
int3
enter
sbb
push
subl
les
lahf
in
cli
iret
push
jmp
jnp
ss
hlt
push
sub
adc
arpl
lock
icebp
push
and
loopne
jno
aaa
dec
nop
jns
pushf
stc
push
mov
lds
aam
pushf
inc
jno
cwtl
idivb
push
pop
in
lds
fidivrs
jp
shrb
ljmp
sbb
jns
inc
int
jecxz
es
ficoml
pop
add
and
imul
mov
leave
mov
mov
or
and
popf
jae
xchg
mov
mov
leave
fcoms
xchg
dec
imul
xorl
jno
mov
mov
inc
push
int3
scas
fdiv
push
cmp
cli
leave
push
pop
loop
sub
push
das
or
add
cmc
add
jge
lahf
lods
add
sub
lcall
mov
dec
inc
decl
sub
in
push
xchg
cltd
dec
sahf
call
movsl
movsb
xchg
cs
sbb
push
xor
add
sahf
mov
and
rcl
or
xchg
ljmp
or
arpl
outsl
dec
mov
les
jnp
addb
xchg
hlt
or
sbb
pop
insl
aad
inc
sbb
jl
aam
call
mov
mov
xor
scas
dec
sbb
in
aad
movsb
sbbl
lret
rcrb
jmp
jl
notb
filds
shrl
xchg
sub
aas
dec
mov
push
ret
imul
xchg
jne
xorb
aad
mov
popa
mov
int
outsb
xor
rcll
fdivrl
arpl
fbld
aas
add
push
cwtl
or
sub
xor
xor
out
ja
cli
rep
mov
lods
es
insl
jmp
cmp
add
or
dec
pop
mov
cmp
insl
mov
lods
jne
aas
fdivl
push
push
push
hlt
pop
jle
and
pusha
cmp
mov
cli
pop
mov
stos
pushf
dec
push
popa
mov
add
movsl
pusha
sub
jge
xchg
xor
pop
cmpsl
or
out
dec
ss
mov
pop
loope
inc
inc
popf
aam
js
xor
mov
xor
pop
out
or
mov
mov
sarb
add
cld
int3
xchg
rcl
xor
ljmp
add
bnd
add
sbb
push
leave
jae
cmp
shll
jecxz
xor
or
std
dec
cmp
fimull
jbe
aas
scas
fisttpl
push
sbbb
pop
jg
mov
cmp
lcall
xorb
push
mov
mov
mov
add
in
fcmovnb
sub
add
push
aam
div
mov
jo
sbb
jmp
jb
inc
std
jns
push
mov
clc
sub
mov
xor
xlat
lret
xchg
les
and
pop
jecxz
std
pop
fcoms
fiadds
fisttpl
cmp
or
ret
mov
mov
js
jne
add
pop
adc
dec
insb
xor
xchg
inc
jne
in
loope
sub
sub
leave
in
sbb
outsl
sub
and
dec
add
cpuid
mov
jecxz
jl
std
dec
push
sub
cmp
and
mov
lcall
and
or
lret
add
popa
push
out
mov
adc
nop
scas
cmc
and
mov
push
jo
or
adc
jle
loop
mov
lock
int3
ljmp
mov
adc
add
popa
and
and
cld
std
jmp
inc
shl
lods
mov
ss
mov
mov
push
sbbb
cld
lahf
loopne
xor
out
cli
ds
ss
jbe
mov
mov
mov
cmp
jae
dec
adc
pop
mov
out
dec
nop
outsl
mov
pop
test
and
xchg
into
movsl
mov
decl
pop
dec
xor
repnz
dec
mov
nop
sar
pop
adcb
sbb
test
in
stos
idivb
arpl
sub
and
and
jb
ss
addr16
jle
push
xchg
adc
pushf
inc
mov
cmc
dec
movsb
mov
mov
imul
jo
or
inc
xchg
ret
jae
repnz
dec
mov
sbb
cltd
stos
fisubrs
xorb
sbb
es
dec
bound
iret
scas
inc
ja
jmp
movsl
iret
repz
mov
push
mov
xchg
xchg
rol
cmp
xchg
cltd
in
ljmp
dec
out
xor
or
dec
dec
enter
mov
fmuls
cmpl
inc
cmp
lods
jb
popa
inc
lods
bound
jmp
in
lret
and
jge
andl
pop
fisubrs
mov
mov
and
stc
paddusw
sahf
movsb
adc
xorl
cmp
mov
xchg
fs
ficompl
in
add
cs
stos
mov
jb
fs
mov
les
les
jmp
pop
xor
inc
pop
in
addr16
mov
jno
leave
pop
adc
into
adc
xor
pop
xchg
addb
rol
cli
cmp
pop
mov
lock
icebp
rolb
je
in
pushf
push
jg
add
das
mov
in
mov
dec
jp
fiaddl
push
xor
mov
sbb
lret
in
shll
enter
inc
jae
out
push
mov
add
jns
mov
mov
fnsave
mov
faddl
in
imul
dec
or
mov
divb
mov
neg
pop
sbb
xor
jo
dec
into
fsubrp
scas
mov
shrb
push
mov
lock
fdivr
popf
xor
push
add
lea
pop
and
pop
subb
popa
cmc
xchg
push
lods
pop
jp
inc
out
or
repnz
sbb
jp
dec
jne
add
and
pop
xor
pusha
stos
pop
push
mov
cmp
adc
mov
hlt
sub
xchg
push
add
push
cltd
jae
dec
stos
out
scas
scas
fstps
add
shr
push
iret
rcrl
in
inc
push
inc
fdivp
lods
notl
stc
mov
mov
mov
xlat
rcl
dec
das
cmc
sti
ljmp
fwait
or
push
data16
push
xchg
xchg
mov
in
and
lods
mov
xchg
inc
dec
push
cli
in
mov
push
in
jno
pop
sarb
aad
cmp
jl
dec
pop
pop
fcoms
cmp
and
mov
out
lret
rcrl
mov
mov
push
icebp
dec
mov
mov
in
xor
sub
pop
pop
inc
mov
mov
push
inc
subb
fwait
pop
xor
fwait
aaa
adc
adc
pop
fdivrs
lds
cli
and
inc
push
xor
mov
shr
jns
push
popf
ja
add
mov
jecxz
inc
mov
mov
rorb
popf
adc
add
test
ja
and
mov
dec
push
insb
jbe
mov
inc
cwtl
jae
sahf
ja
in
mov
cs
adc
hlt
jle
loopne
add
pop
fbld
sarl
ss
cli
and
xchg
rolb
pusha
movsb
push
push
xchg
int
sub
insl
addl
push
jo
test
sub
pop
sbb
stc
cld
frstor
dec
inc
add
test
mov
push
outsb
mov
hlt
adcb
fs
fidivs
popf
aas
cltd
dec
gs
sbb
jo
xchg
aaa
jno
ror
in
mov
pop
xor
pop
mov
leave
adc
pop
hlt
pop
pop
jno
test
hlt
inc
adc
lahf
imul
push
fwait
imul
jno
pmullw
add
ja
inc
adc
cmpsl
mov
sub
mov
mov
xchg
int3
adc
mov
mov
daa
push
mov
orb
loope
mov
mov
inc
or
enter
xchg
lock
xchg
adc
or
adc
mov
add
sub
or
sbb
rcrb
jo
jl
mov
into
cmc
add
push
or
addr16
pop
xchg
shlb
adc
popa
cld
push
push
xor
call
and
adc
mov
fisubrs
dec
fists
sarl
lods
push
cmpsl
enter
out
and
into
fadds
adc
sar
mov
addr16
inc
imul
jbe
adc
dec
pop
lret
fwait
repnz
gs
pushf
add
mov
ret
ret
dec
ret
movsl
dec
pusha
shrl
dec
mov
xor
add
add
push
or
jo
out
fists
out
sahf
arpl
pop
mov
cli
sbb
cld
test
ret
int3
dec
dec
cli
imul
xchg
and
imul
mov
cmp
pop
add
dec
outsl
inc
hlt
inc
inc
fwait
xchg
and
inc
in
dec
shll
or
xor
bound
add
scas
je
daa
lret
pop
mov
lret
push
cmpsl
sbb
cltd
push
sbb
push
cmpsl
cld
pop
and
aaa
cmp
addr16
aad
je
or
outsl
mov
arpl
and
xlat
cmpsb
je
in
jmp
pop
out
push
scas
out
sti
dec
loopne
test
lock
xor
leave
ret
xchg
cmc
inc
aam
inc
mov
fs
cmpsl
movb
ret
jae
into
mov
jge
dec
lea
adc
jmp
sbbl
ss
rcll
daa
add
and
push
aaa
ss
lret
cmpsb
cmp
sub
pop
mov
int
addr16
push
xor
std
and
dec
and
cmp
aaa
movsl
repz
inc
outsb
sbb
dec
mov
xchg
sub
adc
dec
aas
insb
sub
push
and
out
inc
leave
dec
out
xor
cmp
insl
dec
pop
les
aas
nop
sbb
cs
xor
mov
ja
push
or
ret
ror
sub
sbb
and
and
push
loopne
shrb
mov
movsb
les
insl
repz
mov
lcall
mov
sub
orb
inc
mov
jno
ljmp
shll
loop
mov
outsl
fidivrl
jo
cmpsb
and
mov
lea
int3
test
out
push
mov
push
movb
jne
sahf
jbe
ds
sbb
add
push
in
pop
and
scas
cltd
mov
repnz
mov
mov
xor
or
stos
das
push
dec
mov
arpl
jb
mov
cmp
bnd
dec
pop
adc
cmpsl
jge
mov
xor
dec
insb
mov
orb
mov
arpl
das
jl
imulb
jle
cmpsl
sub
or
loopne
rcrb
add
data16
xor
adc
pop
cmpb
adc
push
push
pusha
dec
mov
mov
test
arpl
xchg
aam
lods
mov
repz
lock
mov
inc
cli
mov
cmpsb
sbb
ljmp
xchg
scas
xchg
pop
push
orl
cs
inc
arpl
mov
and
aaa
inc
imul
jle
ret
cltd
inc
and
sub
testl
andb
jne
mov
mov
icebp
mov
sbbl
adc
mov
lods
nop
pop
je
call
ret
ds
dec
adc
es
fstpl
sub
lret
je
imul
pop
and
xchg
adc
xchg
ja
adc
xchg
cmp
aam
pop
cltd
add
cli
insl
xchg
and
cmp
sbb
push
jge
out
hlt
popa
xchg
xchg
dec
lret
sub
mov
dec
or
ret
xchg
mov
sub
and
lds
leave
gs
or
push
dec
in
lahf
ja
sarb
imul
enter
inc
mov
pop
mov
test
out
or
adc
and
fdivrl
push
jne
adc
cmpsb
and
sbbb
iret
or
aas
cmpsl
pop
sti
pop
push
js
in
inc
and
stos
sbb
clc
fsubrl
pusha
pushf
add
loop
mov
icebp
mov
mov
pop
data16
xor
lods
outsl
imul
movsl
stos
and
sbb
fdivl
fdivs
add
out
sub
pop
and
xor
lods
mov
pop
int3
sbb
out
fidivs
jne
nop
xor
add
sahf
imul
xlat
jmp
push
lcall
in
cli
ljmp
scas
inc
fnstenv
xchg
lods
ds
adc
xchg
push
gs
and
sbb
test
out
cmp
adc
dec
aaa
cltd
or
lods
fucom
pop
mov
das
sahf
mov
cmpl
aad
shr
sub
mov
insl
sbb
cld
dec
sbb
mov
inc
fsubrl
icebp
into
dec
gs
out
sbb
ret
in
mov
daa
adc
adc
cmpsl
aaa
insl
push
dec
imul
sbb
xchg
arpl
jg
pop
push
cld
jne
ja
aam
or
repnz
sti
dec
dec
sbb
loope
test
outsl
sbb
mov
push
fstl
sub
mov
inc
and
sub
and
push
ja
es
mov
mov
add
sti
adc
cmp
mov
xor
pop
es
iret
rclb
in
pusha
mov
out
sub
cwtl
js
push
outsl
dec
in
push
movntq
out
in
push
and
cmp
lcall
cli
arpl
dec
pop
scas
lcall
ss
mov
mov
add
xchg
cwtl
mov
pop
clc
dec
mov
je
out
cmp
fdivr
movsb
pop
dec
pop
xchg
jnp
or
xchg
push
jns
loope
in
insl
dec
xchg
mov
mov
cs
dec
inc
test
data16
jne
adc
subb
jmp
pop
orb
orl
pusha
inc
and
inc
ret
and
insb
jecxz
mov
pop
cmp
in
mov
adc
outsb
call
daa
mov
outsl
pusha
mov
test
mov
dec
sub
inc
cmp
cld
popa
sub
aaa
sub
hlt
fs
dec
or
cmp
xchg
sub
lds
jne
cmp
inc
and
mov
fcoml
lds
and
and
sbb
rorb
in
pop
push
js
pop
shlb
in
test
cli
cmp
pop
repnz
pop
scas
add
rcll
div
mov
lahf
lea
inc
ret
mov
cmp
mov
pop
fdivrl
pop
gs
ret
fstpl
sahf
mov
adc
mov
dec
cmp
lret
lds
mov
add
lret
cld
addr16
sbb
lret
push
dec
sbb
push
push
test
xlat
pop
inc
add
cld
jecxz
jo
inc
jb
pop
sub
pushf
sahf
ret
sbb
dec
hlt
data16
mov
xchg
ds
and
cmp
cs
inc
inc
fiaddl
and
fisttpl
sahf
and
add
cmp
mov
or
jle
fcoms
shl
xlat
clc
stos
std
or
or
push
cmp
or
mov
inc
mov
enter
ficomps
fdivrl
xor
mov
pop
adc
fidivs
add
xchg
sti
shlb
jno
push
xchg
dec
pop
lea
pop
inc
xor
inc
push
pop
ds
out
jge
inc
leave
inc
outsl
lods
mov
inc
jb
adc
pop
pop
into
or
dec
shlb
or
or
or
testb
pusha
arpl
xor
mov
mov
or
push
ja
lock
lea
fs
xchg
int3
jg
xor
sbb
mull
lret
addr16
stos
jle
cmp
mov
ds
mov
mov
jmp
inc
or
mov
xchg
ds
push
push
push
movsl
imul
insb
mov
xchg
jne
dec
jg
ds
and
jl
push
aam
jb
out
sbb
pop
nop
mov
jl
push
sahf
jp
cmpsl
adc
mov
push
mov
aas
imul
sub
sahf
movsb
xlat
scas
xchg
pop
sub
in
jl
aaa
mov
icebp
adc
mov
imul
rolb
sbb
xchg
push
xlat
int3
push
lds
pusha
xor
mov
popf
push
loope
dec
dec
pop
cmp
fsubrp
dec
je
cmpl
scas
test
xchg
fistps
shrl
push
dec
lret
jecxz
inc
cmp
popl
fdivrl
cmp
xchg
pusha
xchg
push
cwtl
adc
inc
sub
jne
fsubrs
fildll
inc
out
xor
insl
push
das
shll
je
test
lret
movsb
jge
outsb
ja
loopw
pop
cmp
xor
loop
roll
push
jmp
mov
adc
mov
hlt
dec
xchg
cmp
push
adcb
mov
and
cmp
xchg
push
xor
xchg
cli
push
fsub
cmp
loop
push
or
push
fwait
scas
and
mov
jno
int
push
das
dec
sub
cltd
sbb
hlt
mov
or
sbb
cmp
outsl
push
jg
pusha
push
add
test
fadd
sahf
push
and
or
or
sub
mov
add
add
sub
sub
sahf
das
mov
sub
and
outsb
and
lock
mov
addr16
pusha
xchg
pop
xor
js
xchg
mov
aam
out
inc
lods
inc
jg
xor
mov
divl
jle
sub
sbb
pop
push
jecxz
ficoml
xchg
add
push
xor
fists
or
lahf
fucomp
inc
daa
aaa
out
shl
ljmp
xchg
jbe
ss
adc
and
jp
push
repz
dec
test
xchg
into
or
out
add
fildll
and
fistpl
inc
xor
outsl
push
decb
jns
enter
mov
xor
gs
adc
sbb
aam
leave
dec
mov
adc
or
jns
sbb
mov
bound
pop
jne
ljmp
jne
sub
fldl
shrl
je
cltd
loop
jbe
jne
add
repnz
icebp
pop
arpl
adc
xor
xchg
bound
cld
xchg
jno
sarb
popf
sub
push
pop
xor
jle
jb
in
hlt
fisubs
shl
call
xor
lds
push
int3
mov
push
pop
add
fwait
pusha
add
sub
cs
sahf
stos
push
sbb
jne
mov
dec
fcoms
xchg
stos
dec
cmp
ret
insl
ss
sti
test
sahf
fiadds
aaa
sbbl
test
mov
addb
lea
push
cli
imul
pop
das
inc
or
sub
ror
mov
cli
test
loope
sbb
insb
dec
add
pop
data16
mov
pop
lcall
les
xchg
xor
lahf
jae
mov
mov
scas
insb
lcall
mov
rcrb
aam
loopne
mov
push
js
cs
jg
dec
jg
ljmp
imul
test
test
leave
and
adcl
mov
adc
cmp
xorb
call
sub
pop
je
cli
sbb
outsb
loope
cmp
or
pop
adc
pop
push
les
pop
shlb
iret
jb
cmpsl
dec
and
jp
push
cmp
adc
mov
popf
cmpsb
int3
adc
xor
jp
std
nop
inc
push
fnstenv
aad
std
jne
mov
push
rclb
jne
insl
inc
jg
or
xor
lret
movsb
test
push
sub
cli
shrl
insb
sub
inc
fmulp
les
push
popf
gs
xchg
pop
stc
sub
mov
adc
imul
mov
hlt
pop
add
xlat
inc
pop
mov
dec
push
xchg
cmp
inc
push
cmp
add
in
dec
mov
sti
pusha
jmp
jg
mov
pusha
int3
das
mov
pop
sti
or
pop
add
std
add
dec
fwait
mov
leave
stc
jb
dec
fstps
xlat
out
insl
and
jle
ret
insl
inc
pop
shlb
dec
dec
out
push
ja
repz
xor
fsubs
push
fnsave
xchg
cmp
lea
mov
mov
pop
push
rorl
mov
or
cld
xchg
pop
out
movsl
xchg
cmp
hlt
mov
push
insl
mov
or
xchg
cmpsl
sub
cmp
dec
jg
lahf
call
xor
adc
negl
jne
cwtl
test
xchg
mov
sub
push
pop
das
xorl
cmp
cltd
test
scas
ret
mov
enter
int3
test
jbe,pn
adc
or
or
cwtl
pop
sub
pop
push
mov
pop
xchg
outsl
cmpsb
ds
lahf
pop
test
jp
and
add
fucom
cltd
push
popf
mov
dec
pop
adc
sub
jb
sbb
jns
loope
jb
inc
mov
cltd
cli
and
mov
test
leave
push
sbb
lds
xor
cmp
pusha
push
mov
push
mov
mov
push
divb
popf
pop
mov
sti
push
or
push
cmp
lds
push
in
aad
addr16
jb
nop
fwait
jp
sub
into
stos
imul
push
movsl
sub
fmuls
lret
dec
incb
rol
outsl
in
incl
jmp
or
cld
testl
cmpsb
clc
in
jmp
pushf
mov
dec
hlt
test
sti
test
out
lods
xor
das
stos
test
cmpsl
jno
es
in
and
and
xchg
fs
lret
filds
add
mov
sub
sbb
xchg
add
mov
leave
push
and
pop
cmpsb
ljmp
mov
push
mov
cmc
sti
mov
push
mov
scas
jo
sbb
test
sarb
in
dec
or
and
sub
inc
adc
andb
ficompl
outsl
xlat
data16
jmp
and
fs
lret
test
add
test
xchg
pop
push
jb
xor
inc
inc
movsb
add
jle
rcrl
decl
dec
pop
inc
ror
mov
jne
sahf
inc
xorb
fsubrs
daa
xor
jno
xchg
mov
jb
xchg
faddl
dec
sar
ja
dec
inc
push
in
pop
adc
rclb
jmp
sub
mov
repnz
leave
and
or
in
inc
mulb
and
stc
call
or
scas
cmp
dec
sbb
outsb
ret
push
xor
fs
jle
dec
std
jg
pop
jne
and
dec
push
cli
imul
loope
mov
or
std
je
outsb
inc
inc
insl
iret
out
ficoml
filds
xchg
jne
out
jns
xor
pop
xchg
sub
fildll
sbb
fwait
inc
xchg
xlat
in
cmpsl
enter
jne
enter
sub
mov
scas
inc
repz
jb
pop
mov
shl
cli
scas
mov
cmpsb
push
pusha
stos
cmp
adc
jmp
mov
xor
add
fwait
mov
xor
and
xor
mov
iret
mov
sahf
ficoml
mov
dec
popf
scas
xor
pop
lods
outsl
aaa
or
fisttps
in
and
inc
push
cli
mov
xor
loope
inc
leave
push
xchg
push
data16
cwtl
hlt
cli
and
adc
cmp
sbb
fadd
mov
sbb
fldcw
and
xor
mov
popf
arpl
cli
xchg
xchg
xchg
fwait
adc
popa
sti
pop
inc
mov
pop
arpl
cmc
add
test
in
in
mov
pop
rcrl
shll
pop
pop
jno
cmp
cmc
ja
sbb
mov
shrl
cmp
jno
mov
std
lock
mov
sub
outsl
add
movsb
mov
xchg
inc
test
inc
cli
push
jl
cmc
sub
js
adc
in
push
mov
or
stc
adc
std
mov
dec
xor
push
cmp
mov
fidivl
jne
or
sbb
bndldx
rep
mov
push
repnz
call
test
mov
cmp
das
fcmovne
lcall
ror
xchg
cmc
dec
lahf
out
fwait
add
and
shll
push
in
inc
cmp
popa
sbb
xchg
sbb
ss
sub
addr16
shl
outsb
test
adc
sub
mov
stos
daa
push
xor
nop
inc
push
fwait
push
stc
jp
adc
mov
and
and
push
xor
mov
mov
jne
xchg
push
out
out
xor
imulb
loope
icebp
icebp
xor
hlt
xor
pushf
scas
daa
stos
xchg
mull
adcl
int3
xchg
faddl
cmp
fistps
cmp
cld
subb
inc
adc
cs
sub
popf
sbb
test
inc
pop
gs
push
sub
sti
mulb
pop
sbb
fmull
fldenv
nop
mov
sub
adc
adcl
mov
inc
sbb
fisubrl
or
mov
loope
sbb
stos
div
mov
out
in
jmp
push
xor
pop
mov
mov
in
pop
js
and
ss
push
cli
add
pop
cmp
mov
inc
jmp
enter
jmp
or
cwtl
jns
pop
mov
xchg
cmp
cmp
pop
mov
sbbl
push
xchg
add
xchg
rolb
in
fldcw
pusha
cmpsb
das
scas
shll
dec
adc
pusha
mov
lahf
jp
xchg
rolb
aad
add
es
pop
pop
cmp
scas
mov
mov
clc
popf
fwait
jno
cld
mov
cmp
cmp
adc
lods
mov
cmp
mov
dec
aam
in
and
add
cs
shll
ljmp
pushf
xchg
mov
or
lods
in
jns
add
push
push
xchg
pop
dec
xor
fcom
mov
sub
xchg
dec
decb
cmc
push
flds
push
xor
cmp
jnp
cmpsb
jno
inc
fsubs
mov
jmp
push
adc
mov
lahf
sahf
adc
add
sbb
out
xor
orl
xor
jb
jne
sub
inc
push
mov
cmp
xchg
test
jle
add
stos
fbstp
sbb
xor
mov
scas
mov
jns
jl
xor
out
inc
call
xchg
scas
lods
sahf
mov
xlat
sub
push
mov
je
xchg
insb
sbb
insb
insb
jno
insl
movl
or
pop
mov
push
mov
testl
adc
sbb
fsubs
add
sub
mulb
inc
popa
mov
inc
push
sbb
xor
mov
adc
pop
popa
mov
paddq
jne
sbbl
mov
outsl
hlt
push
jo
lods
adc
es
mov
mov
clc
pop
pop
insb
pop
cwtl
pop
pop
test
or
ja,pt
mov
dec
andl
jne
dec
xchg
dec
or
stos
fisttpll
push
js
cmp
loop
orl
testb
es
xor
popf
add
repnz
cltd
push
add
int
shr
lock
inc
push
ficoml
dec
dec
sbbl
fistpll
adc
jg
pop
fstl
mov
jl
cld
andl
and
and
mov
add
dec
add
jns
mov
add
xchg
dec
add
push
mov
sahf
js
mov
adc
test
sub
cli
ret
cmp
or
pop
sub
adcb
mov
inc
sbb
sbb
pushf
push
mov
add
inc
xor
push
sub
jne
dec
adcb
test
loope
xchg
adc
push
in
fadds
xchg
ja
pushf
xchg
ss
jmp
mov
je
ret
out
xor
pop
das
push
adc
sbbl
mov
loop
cmp
loope
scas
dec
push
push
std
cs
rorl
inc
subb
add
and
jo
push
add
stc
jl
adcb
out
fdivrs
sbb
jo
pusha
out
mov
dec
xchg
lods
es
mov
push
loopne
xchg
daa
sbb
xchg
xchg
xor
rcr
inc
mov
fidivl
xlat
and
push
icebp
cmp
kmovw
clc
jp
mov
pop
dec
aam
js
inc
push
shrl
scas
lods
sahf
xor
fldt
and
jnp
mov
ds
and
movzwl
outsb
jns
cli
or
out
rcl
pop
mov
mov
xor
test
lret
ljmp
pusha
mov
adc
dec
ljmp
dec
leave
clc
jmp
mov
and
inc
xchg
sbb
pop
jge
mov
sbb
xor
xchg
jns
imul
mov
ficoms
pop
mov
in
es
mov
rcrl
cli
mov
inc
jecxz
out
fucomi
inc
rcll
sahf
inc
in
daa
sbb
fmul
sbb
jp
bndstx
test
xchg
dec
jns
pusha
mov
jbe
sbb
ret
outsb
frstor
sub
pop
mov
arpl
xor
leave
popf
or
repnz
mov
dec
jae
iret
es
or
adc
das
fistpll
das
stc
push
pop
mov
mov
sub
stos
jne
push
adc
pop
pop
pop
faddl
xchg
fcoms
mov
stc
in
adc
sub
sbb
out
leave
jle
repnz
aam
inc
test
adc
mov
fs
xchg
lea
or
sbb
xor
jmp
out
sub
call
das
jl
je
out
pop
out
push
lcall
sar
int3
jp
rcr
xor
shlb
loope
fsubrs
push
push
mov
imul
stos
ret
push
scas
and
mov
cld
mov
jg
sbb
mov
scas
jb
movsl
sub
dec
adc
push
std
xor
call
jl
test
sbb
in
xorl
xchg
xor
push
fcmovne
ret
sub
or
add
clc
loop
inc
add
xchg
sub
and
xchg
ret
rcrb
loop
jg
cmpsl
pop
mov
in
cmpsb
pop
scas
test
daa
add
cs
movsl
repz
in
fstl
or
repnz
movsl
xor
adc
add
daa
mov
xor
lds
loop
stc
out
jo
push
add
popa
xchg
dec
mov
add
pop
and
mov
lret
in
jnp
ret
divb
rcl
adc
cltd
push
or
popa
mov
nop
les
aaa
push
dec
sub
ret
data16
pushw
inc
test
test
add
sub
in
inc
jb
add
xchg
pop
lret
fbstp
dec
push
push
lods
insl
sub
loopne
sub
subb
sub
inc
aaa
fadds
aad
int
and
add
jecxz
sahf
popa
mov
ret
add
mov
aad
sbb
adc
or
push
jns
jl
fists
out
or
mov
sub
dec
test
mov
es
mov
adc
push
jecxz
jmp
mov
mov
mov
insb
popf
cltd
mov
xlat
jns
inc
out
push
insb
mov
dec
lahf
repz
inc
sbb
push
sub
pop
lahf
sahf
sbb
jle
cmpsb
leave
cmp
add
stc
sarb
sbb
cmp
push
mov
jecxz
xor
lcall
xor
lcall
cmpsb
mov
or
call
int
sub
dec
mov
mov
lcall
jno
cmp
fwait
push
cmp
movsb
jne
jl
fnstenv
pop
push
mov
out
dec
enter
lcall
mov
icebp
out
add
sub
in
jmp
addr16
into
lds
movsl
jb
pop
outsl
push
aas
data16
mov
adcb
dec
lods
xor
call
and
js
cld
and
stos
inc
lahf
pushf
scas
jmp
jecxz
imul
fstpl
in
dec
xlat
aad
ret
imul
and
ds
mov
fsubs
inc
inc
loopne
fnstcw
ss
add
lret
pop
push
dec
xchg
cli
and
inc
lock
sbb
cwtl
rcl
mov
dec
das
lock
das
out
in
lcall
fs
push
insl
jmp
mov
push
cmp
movl
fsub
mov
lods
ja
ljmp
cltd
lods
shlb
enter
jb
sbb
adc
pop
aam
leave
mov
sbb
iret
add
add
icebp
sub
popa
dec
dec
jmp
enter
call
cmp
push
mov
sbb
movsl
mov
jle
int
ss
test
mov
fildl
or
pop
and
inc
ss
mov
les
sub
fcoml
add
stos
and
pop
subb
mov
jbe
pop
rorl
aaa
or
mov
xchg
stc
jae
mov
xchg
dec
xor
mov
mov
cmpsb
test
je
fsubrs
pop
in
jp
imul
jo
cmp
push
push
add
push
and
fdivrl
aaa
sub
mov
lret
lock
xchg
aad
lret
jns
pop
ss
pop
dec
sub
adc
jno
and
mov
xchg
jle
or
iret
push
xor
mov
mov
inc
ss
popf
clc
dec
sub
aas
cmp
lods
mov
addr16
orb
cli
ss
movsb
and
mov
fmulp
std
mov
push
push
jo
enter
popf
lcall
adc
dec
add
mov
adc
aas
clc
inc
outsb
push
jae
pusha
shl
mov
mov
sbb
add
sti
pop
lahf
flds
jnp
aas
pushf
xlat
mov
jecxz
test
or
aaa
cli
dec
hlt
or
ret
out
stos
mov
adc
clc
das
dec
adc
jb
push
test
jl
out
fisubs
cmp
cwtl
lret
mov
add
mov
lcall
jge
dec
popl
xchg
dec
fdiv
clc
cli
pusha
idivb
outsl
cli
scas
imul
push
pop
push
pop
aad
sub
cmp
es
inc
xchg
pop
pop
pop
cld
mov
insb
jge
jbe
sahf
sbb
dec
mov
push
mov
mov
and
cmpsl
mov
xor
sub
jmp
and
rcrb
cmp
leave
xlat
jle
adc
inc
pop
gs
mov
out
call
bswap
arpl
ret
mov
jl
sbb
inc
daa
push
fiadds
jge
dec
leave
fstpl
inc
jecxz
cld
test
out
ret
and
or
add
mov
cmp
jbe
stc
pop
in
add
gs
iret
sbb
bound
xchg
lret
dec
sub
shl
outsb
mov
cmp
or
inc
stos
outsb
or
insl
mov
loope
sti
xchg
jecxz
jecxz
aaa
es
call
mov
push
je
add
iret
adc
sub
jl
ret
cs
cmp
shll
mov
sbb
in
out
out
test
imul
inc
push
xor
test
ret
dec
mull
adc
movsb
into
nop
shlb
iret
mov
fmul
das
xchg
xor
sti
xchg
adc
inc
or
jle
jo
loopne
mov
adc
add
cltd
stos
add
adc
cmp
add
loope
sbb
mov
in
jmp
rclb
roll
js
jmp
bound
inc
inc
divb
scas
enter
fildll
aad
xchg
adc
cs
sbb
and
popf
or
je
leave
icebp
stc
out
inc
mov
push
in
push
pusha
push
popf
mov
lock
add
loope
xlat
and
sahf
or
cmp
pop
mov
std
pop
scas
xor
movsb
xlat
orl
or
or
pusha
sbb
xchg
aam
lock
sub
push
xchg
mov
imulb
ficoml
and
lods
add
push
outsb
sbb
js
or
pop
fcmovbe
aad
daa
jg
mov
jne
out
aaa
push
daa
xchg
fcmovbe
sbb
jo
jbe
mov
xor
push
cli
jns
pop
sub
add
test
push
sbb
sahf
shl
out
in
cmp
dec
or
inc
mov
stos
stos
mov
adc
movsb
pop
xchg
push
mov
xchg
and
stos
and
mov
lcall
push
in
jno
push
push
jmp
push
jecxz
jno
xor
std
pusha
add
cmpb
icebp
mov
repz
inc
aas
add
in
dec
jns,pn
lods
xchg
and
enter
mov
mov
test
int3
mov
push
push
push
inc
int
mov
rcl
shll
mov
cld
jp
push
add
stos
call
js
cmc
lret
jg
mov
push
push
xorb
loope
xor
xchg
push
push
call
popa
add
popa
adc
sbb
test
iret
sahf
out
das
stc
sub
sub
or
xor
sub
scas
outsl
cld
inc
xlat
repz
je
jmp
and
xor
jae
mov
jl
mov
dec
mov
pop
subl
aam
sbb
loope
loopne
in
push
mov
mov
xor
inc
mov
push
cmp
or
lret
sti
ss
mov
dec
in
mov
or
mov
inc
xchg
pop
dec
xchg
xlat
shll
sbb
dec
cmc
mov
test
mov
hlt
or
lahf
dec
fs
arpl
sbb
and
mov
cs
das
scas
and
sahf
add
pop
jmp
sub
inc
rclb
roll
pop
sub
les
mov
lds
mov
add
dec
mov
push
mov
xor
xchg
dec
sahf
or
imul
fnstcw
add
mov
inc
sbb
sarl
xchg
mov
mov
add
push
lcall
xor
adc
cmc
sbb
arpl
push
leave
ds
imul
sub
fidivrs
cmpsb
std
inc
push
dec
repnz
jge
repz
adc
sbb
add
mov
push
setge
sub
shlb
jo
sbb
or
enter
cld
jg
out
adc
in
push
sarb
in
enter
jecxz
shrb
add
pop
cmpsl
les
inc
mov
aas
in
jns
pop
push
test
xor
inc
insb
add
lods
inc
movsl
mov
mov
inc
dec
icebp
xor
pop
xchg
pop
lods
jle
push
in
nop
sub
pop
int3
xor
rolb
mov
lahf
and
test
cmp
mov
cli
outsl
xchg
or
ret
sbb
daa
pop
lds
mov
movsl
xchg
sbb
and
xor
and
mov
insl
loope
mov
imul
jbe
jp
adc
lods
pop
mov
sub
ljmp
inc
frstor
adc
dec
bound
xchg
pop
xchg
sbb
imul
test
fildll
jo
sub
clc
pop
sbb
inc
in
and
je
cmpsl
lods
mov
inc
pop
sub
sbb
adc
int3
fidivrl
rcll
jbe
and
icebp
inc
test
sti
test
jno
push
adc
and
push
fucom
into
and
shll
xchg
xorps
xchg
inc
ljmp
jecxz
dec
outsb
leave
mov
pop
enter
push
jo
enter
inc
or
mov
outsb
pop
jg
jae
iret
push
pushf
push
dec
imul
ja
stc
inc
jecxz
leave
mov
cli
movsb
sbb
pop
das
jo
jge
vpmadcswd
xchg
sbb
push
into
aad
int3
cmpsb
xchg
xchg
adc
xchg
or
cmp
sbb
sarb
mov
pop
insb
lret
mov
repz
stos
cmc
xlat
sub
mov
lods
and
stos
subb
adc
imul
ret
or
mov
mov
mov
in
scas
xchg
jg
push
adc
dec
lock
ficoml
adc
mov
pop
cs
leave
icebp
aam
lret
xchg
lret
rorb
push
into
cmp
mov
mov
jmp
test
mov
xor
xor
xor
pop
add
xchg
pop
mov
xor
adc
sahf
lret
xchg
adc
in
in
push
in
xchg
cli
aad
cmp
jp
out
movsl
jg
and
sub
push
xchg
imul
xchg
dec
gs
mov
ljmp
sub
push
xchg
cmc
mov
pop
jbe
sub
movsb
daa
fisubl
aaa
mov
xor
xchg
popf
and
add
cmp
lret
sahf
pop
mov
cld
je
push
je
cmp
jb
push
lret
es
pushf
push
loope
call
es
ret
lea
jmp
dec
mov
movsl
xchg
mov
lock
stc
mov
mov
outsl
push
cmc
mov
push
test
mov
stc
sbb
cs
stc
sbb
mov
cs
ds
sbb
clc
mov
dec
xor
ficoms
mov
xor
icebp
add
fisttps
pop
stc
cli
lods
adc
xor
sub
lret
insl
das
shl
fwait
stos
cmpsl
mov
inc
addr16
lea
hlt
xchg
pop
lods
xor
push
jmp
adc
pushf
inc
jle
icebp
push
xor
push
xor
outsb
fistpl
sahf
arpl
jg
iret
loope
cmp
mov
lods
fs
push
movsb
dec
cmp
stos
stos
aaa
pushl
lds
mov
in
inc
jns
jl
adc
fsubrs
and
fisubrl
sub
cmpsl
pop
js
stos
in
add
cmc
xor
insb
push
cmp
xor
hlt
lods
ljmp
push
sti
fwait
sbb
mov
les
aam
pop
adc
dec
clc
push
out
cmp
popa
push
pop
xor
mov
mov
mov
imul
call
fildll
pop
outsl
xchg
cld
mov
xchg
lds
gs
cld
xchg
mov
test
test
lahf
sbb
push
push
add
lcall
cli
sbb
lods
mov
aaa
and
std
ja
out
adc
cmpsb
push
das
mov
not
sub
jns
je
add
sub
cmpsl
pop
jns
sbb
push
arpl
mov
sbb
rcrb
pushf
pop
adc
ficoms
mov
add
or
or
mov
dec
mov
aam
cltd
rep
mov
jle
jmp
fstpt
adc
ret
ljmp
jle
add
stos
test
push
mov
and
std
xchg
divb
pop
xor
push
call
jle
sub
cmpsb
xor
or
mov
inc
sbb
mov
add
test
xchg
jno
imul
xor
push
fsubrl
sub
out
jb
xor
dec
aad
rcll
jge
sbb
adc
data16
xor
outsb
mov
test
repz
mov
mov
in
inc
mov
xchg
push
sahf
cmp
mov
aad
mov
mov
dec
adc
scas
out
int
sbb
pop
ret
adc
mov
adc
and
mov
jge
xlat
popa
iret
adc
or
mov
inc
mov
push
cmp
icebp
mov
std
in
pop
and
lock
lods
jge
movsb
mov
jns
cmp
js
add
sub
add
dec
dec
shrb
cltd
in
movsb
ficoms
jecxz
nop
out
cmp
jp
push
in
lahf
dec
pop
es
pop
mulb
test
lods
mulb
xchg
subl
rorb
jo
xchg
mov
mov
xchg
inc
xorb
xchg
push
jbe
cmp
fisubl
fcmovbe
stos
cs
aad
mov
mov
mov
xchg
stos
rcrb
cmp
and
cmp
scas
fwait
rorl
lods
inc
pop
jns
insl
das
addr16
pushf
rcr
xor
test
pop
dec
sub
push
scas
iret
lea
mov
int3
cmp
add
ret
or
mov
rcll
lret
test
and
stos
sub
mov
insb
nop
lcall
test
push
into
pop
fcoms
xchg
mov
je
mov
dec
xor
push
sbb
jae
xor
xchg
and
mov
push
insb
mov
sbb
add
mov
xor
cli
lds
cmp
xor
fidivrl
jne
or
inc
cmp
push
ja
push
std
addl
pop
mov
shlb
push
mul
sbb
in
mov
jle
mov
mov
adc
outsl
rcrb
jmp
push
loop
jg
shll
xor
sub
xchg
jg
sub
popa
sub
jmp
and
in
fdivrs
call
jl
imul
pop
into
adc
xchg
subl
nop
dec
or
inc
ds
xchg
mov
int3
xchg
in
or
cltd
mov
xor
leave
xor
xchg
in
jo
push
mov
dec
out
cmp
push
rcr
aas
pop
or
xchg
ja
or
sub
xchg
stos
insb
mov
mov
push
and
mov
or
idiv
lea
lcall
loopne
int3
xchg
ret
cltd
arpl
adc
push
jp
mov
daa
inc
sbb
hlt
and
popf
mov
sbb
cmp
insl
fldenv
push
sti
jb
dec
mov
cld
addr16
shl
sbb
outsb
inc
mov
and
inc
repz
fimull
mov
sbb
lret
sbb
xchg
in
or
lods
call
mov
mov
mov
xchg
cmp
cmc
mov
xchg
iret
push
rol
arpl
jb
repz
jl
arpl
mov
icebp
jae
xor
sub
clc
cwtl
sbb
cmp
in
cmp
inc
in
leave
push
push
inc
dec
jecxz
xor
push
daa
or
mov
mov
das
shl
aad
inc
mov
mov
xchg
clc
jno
lods
add
icebp
out
call
call
xor
insl
pop
jne
mov
inc
push
in
dec
inc
pop
pop
pop
fadds
hlt
enter
add
add
or
movsl
sbb
addr16
in
popa
jns
outsb
sub
dec
mov
xchg
cmpsl
cmp
jno
or
rol
adc
mov
lea
cmp
jns
stos
stos
mov
sbbb
xchg
stc
popf
add
cmp
inc
pop
sub
fidivrl
jae
mov
xchg
dec
es
cmp
sahf
nop
or
shl
sahf
arpl
mov
or
xor
dec
jecxz
repnz
lret
push
dec
jno
push
pushf
sub
popf
or
clc
imul
or
sub
inc
arpl
push
cmp
push
inc
lock
lahf
pop
iret
add
add
xchg
and
and
mov
std
lahf
pop
test
lret
jbe
jnp
mov
add
dec
cmpsb
pop
xor
shrb
adcl
sub
adc
ljmp
dec
xor
xor
mov
or
dec
pusha
mov
sbb
pushf
or
jb
sahf
scas
xlat
xor
pop
fdivrs
es
div
int
cltd
arpl
cld
in
pop
push
cld
and
dec
cwtl
cmp
pop
clc
in
or
inc
ss
das
mov
push
out
or
add
sbb
fwait
repnz
in
jo
add
push
sar
in
jecxz
fimuls
sub
push
cmp
mov
pop
jnp
and
sti
mov
mov
sbb
test
pop
addb
push
mov
in
stos
sub
add
lret
pop
jo
or
lock
sub
pop
jo
add
xchg
mov
xchg
sub
or
push
mov
sar
mov
pop
push
test
into
cmp
jae
pop
mov
inc
jne
mov
add
jbe
test
mov
mov
lods
and
mov
mov
fidivrl
inc
out
inc
jo
dec
xchg
repz
sahf
arpl
movsl
and
fs
sti
mov
jge
pusha
sbbl
lock
ljmp
or
push
iret
adc
int3
testb
test
sub
pop
rorb
adc
test
sbb
test
sub
sarl
inc
repz
xor
dec
xlat
pop
nop
rclb
es
jge
repz
pop
xor
jae
data16
add
lcall
je
scas
mov
sarb
fs
sub
pusha
insl
pop
gs
sbb
cmpl
test
sub
enter
dec
xor
popf
xchg
ja
imul
bound
cmpsb
adc
and
inc
mov
dec
or
shlb
scas
jae
daa
pushf
inc
scas
or
pop
arpl
push
xlat
out
sarb
out
into
pop
jns
push
aas
in
xor
xlat
jns
fs
xor
pop
test
jge
or
in
fadds
movsb
jg
es
and
mov
test
jmp
mov
mov
mov
mov
sahf
dec
dec
or
sub
jp
aad
out
popa
sbb
mov
popa
mov
leave
stos
xor
repz
adc
imul
add
xlat
jmp
shll
cld
push
inc
push
push
jle
cmp
divb
push
jecxz
inc
mov
push
incb
or
imul
cmp
mov
cmp
cmpsb
les
add
xchg
or
aaa
mov
ret
xlat
pop
inc
adc
repz
jnp
xchg
mov
sub
cltd
sarb
enter
jle
ret
sub
in
sub
mov
mov
arpl
out
xchg
aas
mov
lret
push
imul
outsl
test
and
int3
mov
shlb
dec
jp
out
adc
test
dec
dec
cmpsl
repz
add
outsb
and
aas
bound
mull
ret
cwtl
loope
enter
jnp
test
jb
pop
fldcw
cmp
aad
decb
stos
pop
inc
incl
frstor
mov
in
jle
rorl
push
hlt
xchg
push
jecxz
xchg
xor
inc
aaa
pop
jl
or
sbb
movsl
xor
or
xchg
les
sub
pushf
xor
inc
lahf
fsubl
ds
lret
in
adc
fcmovne
mov
sti
and
fs
clc
mov
inc
movsb
mov
inc
fcomps
pop
in
dec
ds
subl
mov
dec
push
lcall
incl
cltd
and
dec
or
decb
mov
mov
cmp
mov
rcrb
popa
sahf
je
push
cmp
fstl
or
ljmp
addr16
fmuls
out
xchg
mov
xchg
hlt
fcompl
sti
or
add
cld
pusha
shlb
adc
scas
add
test
add
movl
ret
xchg
fdivs
pop
cli
and
lret
or
push
add
pop
out
xor
rcl
add
sbb
imul
push
mov
dec
xlat
out
sbb
bound
fsubs
cmp
and
out
jb
das
arpl
out
ret
mov
mov
cltd
popa
call
or
ja
fadds
xchg
outsb
xchg
sbb
out
adc
xor
lock
push
adc
sbb
push
rcr
movsl
xchg
and
int
repz
cmp
adcl
nop
punpckldq
fcomps
sub
adc
imul
test
cmp
mov
sub
and
jge
inc
jae
sub
fldcw
push
clc
testb
aad
lcall
jmp
clc
push
jecxz
pop
cmp
cmp
icebp
inc
xchg
mov
imul
and
cld
fiaddl
fcompl
adc
cwtl
inc
cmc
cmpsb
or
push
cli
inc
jg
imul
mov
mov
aad
outsb
inc
xchg
into
mov
and
dec
inc
push
into
cmp
push
or
sbb
inc
pop
subl
adc
xchg
dec
mov
jo
or
andl
insl
imul
aaa
lret
mov
xlat
jnp
xor
jno
xchg
cmpsl
xchg
sbb
outsb
icebp
psubsb
or
in
push
out
xor
xor
jb
mov
not
sbb
sbbb
test
pop
xchg
inc
jg
adc
add
dec
dec
jno
aas
out
jne
sub
outsb
roll
rolb
add
jb
mul
mov
mov
or
seto
out
pop
xor
jbe
lods
cmpsb
popa
lods
pop
add
mov
cmp
xchg
pop
mov
add
fisubl
lret
mov
xchg
ljmp
data16
inc
or
insl
adc
push
jecxz
mov
adc
push
jl
std
xor
repz
popf
test
hlt
inc
xchg
xlat
enter
xchg
rcll
jmp
ljmp
push
sahf
jecxz
pop
adc
loope
andl
mov
xchg
stc
mov
dec
mov
div
sub
cmp
flds
mov
sub
and
sub
jg
mov
fisubrs
std
das
and
rcll
pop
adc
test
rcl
lcall
mov
into
cmp
cmp
in
in
adc
data16
and
xchg
xchg
mov
push
jp
fmuls
jmp
xchg
cmpsb
push
mov
leave
ja
ds
daa
sbb
das
and
push
xchg
es
fstpl
out
xor
push
sbb
enter
imul
stos
loop
loopne
ret
sub
imul
jno
fidivl
push
js
jno
sub
clflush
cmpsb
or
pop
int
pop
lcall
jbe
mov
enter
std
mov
push
and
out
mov
gs
cmp
mov
xorl
pop
fincstp
in
xchg
sub
cmpsb
adc
subl
sahf
test
xor
iret
cwtl
cld
xor
pop
es
push
add
sarl
jg
sbb
jmp
cmp
not
push
out
nop
cmp
and
sbb
xchg
jbe
in
mov
fsubp
sub
std
fcomps
loope
call
mov
lock
loop
jge
xor
cmp
movd
pop
and
xchg
pusha
clc
jb
mov
es
pop
scas
add
insb
fnstcw
and
inc
jge
mov
inc
fdivp
scas
popf
test
xchg
sub
rclb
sbb
cmc
inc
sti
int
mov
cmp
cmpsl
sbb
and
pop
add
imul
int3
xchg
ds
jns
test
sub
jp
dec
movsl
fistpl
out
js
dec
outsl
add
je
fadds
aaa
mov
cmc
xchg
fildl
pop
orb
adcb
filds
mov
pop
add
les
movl
sbb
pop
int
movsl
repz
or
arpl
out
cmpsb
addr16
xor
push
and
add
cmp
addb
sub
arpl
mov
dec
mov
dec
stos
or
rcrb
add
adc
stc
xchg
adc
xor
jg
mov
cwtl
jbe
cmpsb
sbb
mov
or
je
mov
aad
test
pop
rclb
dec
push
out
jnp
out
mov
movsb
jno
push
gs
sub
fisubl
xor
cli
leave
inc
flds
dec
pusha
call
mov
and
mul
push
cmc
movsb
cmp
lods
and
xchg
test
cmp
pop
ja
adc
dec
outsl
mov
mov
clc
jmp
clc
ret
into
inc
push
cld
dec
mov
mov
jae
popa
push
cmp
xchg
cmp
adc
cwtl
lods
sbb
or
out
add
push
cmpsl
pop
cmp
lret
cmp
lahf
mov
scas
xorl
in
mov
in
or
int3
dec
in
das
dec
sbb
or
push
rcl
or
pop
pop
sbb
pop
push
mov
jo
std
xchg
iret
std
xchg
lods
call
js
xchg
lahf
test
mov
in
jmp
int3
adc
jns
in
pop
add
jg
sbb
pop
cmp
test
mov
pop
or
push
xchg
mov
mov
aaa
sbb
daa
cmc
or
cmp
adc
mov
jecxz
mov
das
fwait
mov
and
lea
icebp
gs
fwait
inc
mov
jl
fsubs
and
push
call
sub
jecxz
sub
loop
inc
mov
iret
sarb
shl
pop
lods
shl
call
adc
or
daa
lret
in
fsts
and
or
insb
shlb
std
add
dec
pop
xor
pop
or
sti
add
xor
cmpsb
loop
sbb
int
jg
jge
push
bound
mov
popf
dec
cmp
jge
dec
sub
in
mov
mov
pop
xchg
testl
call
push
adc
aas
mov
adc
xchg
das
dec
xor
add
add
or
add
jbe
mov
rolb
push
xor
mov
add
out
in
and
pushf
cltd
notl
adc
mov
lret
pop
jmp
mov
int3
and
cmp
pushl
loope
or
pop
addr16
enter
addr16
repz
ficoml
das
ljmp
mov
iret
mov
nop
push
sbb
pop
inc
xchg
mov
test
int
sub
xacquire
xchg
shll
pop
bound
jb
lcall
gs
fcomps
xchg
sbb
roll
xchg
dec
mov
jbe
outsb
test
outsb
into
es
pushf
or
sbb
lock
mov
mov
out
out
orb
mov
test
inc
lahf
push
incb
cmp
mov
pop
jae
scas
xor
lahf
loope
push
in
lods
negl
sti
sub
sub
lahf
inc
lea
ss
rolb
xchg
pop
test
movsb
pusha
es
jne
inc
adc
ljmp
pop
jne
fwait
les
and
inc
fldl
sub
inc
ds
imul
bound
lods
aam
data16
sbb
ss
in
insl
inc
fadds
mov
enter
and
addb
dec
jbe
jns
adc
xchg
and
or
jns
repnz
push
push
loop
addr16
dec
cmp
or
notb
push
pop
jmp
pop
fwait
push
lret
insl
and
lcall
dec
inc
in
lret
xor
xlat
push
shll
repnz
cli
arpl
ja
xor
mov
dec
fsubs
xchg
mov
out
out
and
sub
cmp
repz
sub
movsl
test
sub
iret
dec
nop
mov
inc
jl
ss
call
or
jl
dec
call
ret
adc
cmpsb
adc
addr16
test
jp
sub
out
cwtl
test
rcrl
test
lea
pusha
and
aaa
and
lret
jl
cld
pop
cmp
push
and
and
inc
push
mov
sbb
xchg
inc
mov
in
pushf
push
je
pop
and
mov
enter
push
sti
or
dec
dec
jo
dec
and
lods
adc
flds
dec
mov
xorl
mov
push
adc
pop
pushf
in
mov
fwait
outsl
mov
imul
sbb
jge
iret
arpl
jb
lcall
pop
and
push
cmc
sub
pop
and
and
mov
inc
enter
aas
je
dec
pushf
out
inc
sub
xor
xor
inc
xchg
into
das
test
std
and
movsl
jnp
cld
xor
mov
in
dec
outsb
sbb
dec
nop
and
fistps
ret
jbe
addl
in
push
dec
js
mov
dec
sbb
sub
popf
mov
lret
push
lret
scas
ja
in
lods
mov
aad
add
pusha
mov
stos
push
pop
test
insb
mov
outsb
fstps
cmp
sbb
and
xlat
or
mov
xor
js
xchg
inc
mov
inc
shlb
popa
sub
cmp
and
xchg
fcompl
icebp
fcmovnu
xor
fs
mov
pushf
insb
xchg
out
dec
addr16
mov
mov
ljmp
jl
cmp
test
xchg
ret
mov
add
ss
imul
xchg
pushf
out
xorb
testl
mov
push
leave
push
mov
jmp
not
testb
loop
stos
jo
adc
daa
popf
hlt
test
inc
cmp
sbb
mov
sub
nop
cltd
sub
jnp
call
sbb
mov
or
dec
and
jmp
inc
lods
mov
rcr
ret
cld
mov
inc
cmp
arpl
push
mov
jns
mov
mov
out
pusha
jne
pop
rorl
cmpsb
ret
add
leave
inc
sar
loope
str
mov
insb
mov
xor
mov
and
testl
pop
enter
pop
movsb
pop
scas
push
pop
jns
dec
push
cmc
add
loopne
sub
into
loope
stos
push
sub
cs
or
cs
outsb
and
shr
mov
cmp
pushf
pop
and
sub
lods
fisttps
insl
out
imul
jnp
iret
dec
xchg
dec
xlat
dec
cmp
mov
sbb
mov
loope
leave
xchg
movsl
pop
test
push
rolb
aaa
repnz
rcll
xchg
fildl
or
adc
out
imul
pop
in
mov
rcll
aad
clc
lods
hlt
in
jne
leave
icebp
adc
int
stos
xchg
mov
cmp
cmpsb
mov
lcall
pop
xchg
xchg
mov
sbb
scas
cltd
fwait
insl
out
scas
or
cmpb
jns
pop
cmpl
out
clc
jno
stos
push
push
fucom
es
mov
sbb
pop
and
nop
jge
lods
clc
and
in
cmc
xchg
stc
mov
mov
pop
ficomps
mov
xchg
dec
cmp
int3
mov
jmp
mov
cs
icebp
jle
sti
xchg
popf
pop
outsb
xor
xor
hlt
jl
and
adc
sahf
cmpsl
push
in
push
mov
sub
add
ja
bound
mov
mov
shr
sub
jno
inc
mov
addr16
xchg
jo,pn
shlb
lahf
call
jns
divb
jmp
adc
cmp
and
fs
add
adc
mov
push
jae
dec
or
aaa
jge
push
movsb
cmc
dec
cltd
stc
jns
mov
sub
jne
cwtl
cmp
sub
in
or
inc
sti
int3
fsubr
mov
mov
sbb
into
pop
rol
adc
notb
movsb
sub
pop
inc
rorl
loopne
xor
repz
ljmp
adc
arpl
rcrl
js
sub
clc
xchg
into
or
and
cwtl
jbe
cmc
xchg
xchg
test
out
js
mov
lret
lea
nop
dec
adc
jbe
dec
movsb
loopne
out
or
aaa
mov
jnp
ss
lahf
fs
push
mov
js
mov
and
out
jb
ss
in
xor
xchg
daa
int
pop
xlat
or
scas
in
xor
cmp
pop
mov
ret
adc
push
into
ror
out
mov
and
leave
leave
jmp
jae
pusha
mov
dec
push
data16
mov
subw
cltd
cmpsb
mov
push
xlat
xor
ss
adc
leave
pop
scas
xchg
xchg
pop
outsl
add
cmp
fidivl
mov
or
into
mov
mov
iret
cmp
or
mov
mov
sbb
pusha
inc
fldt
xchg
add
cmp
mov
leave
xchg
pop
test
stos
xchg
jl
andb
add
int3
pop
mov
jmp
xchg
lock
cmpsl
pop
cmp
enter
mov
ror
daa
sub
add
sahf
loope
jge
popa
push
imul
cmc
inc
inc
sbb
or
int
add
sub
fists
inc
divb
mov
rorl
or
pop
sub
cmp
fcomp
jne
jne
rorw
out
test
mov
and
mov
loopne
dec
sbb
in
jnp
add
aas
mov
xor
dec
outsl
insb
mov
jae
pop
mov
jg
jns
xor
call
mov
jl
add
gs
push
mov
cmpsb
iret
mov
mov
mov
shrl
sar
mov
mov
shll
sub
add
xchg
pushf
sub
push
ret
add
mov
adc
adc
orb
insb
js
mov
in
sub
fiaddl
stc
adc
dec
mov
xchg
int3
shrb
sub
or
mov
xchg
lret
mov
out
scas
scas
mov
lret
mov
aam
adc
pop
jnp
dec
sub
cmp
push
cmp
jmp
mov
cmp
xchg
push
mov
test
les
push
sub
in
shlb
pop
int
fdivl
clc
add
and
aam
pop
aam
pop
push
mov
ret
pop
push
dec
js
lods
bound
jg
hlt
push
lods
iret
mov
mov
lods
lds
jb
sbb
add
mov
mov
out
movsl
sbb
mov
push
ret
out
out
cli
or
xchg
test
and
mov
dec
lea
sti
test
sub
cpuid
jp
out
stos
movsl
mov
stos
scas
push
add
push
push
or
xchg
stc
mov
js
adc
sub
test
mov
and
inc
js
push
fsubr
lahf
daa
pop
cmp
and
movsl
sbb
sub
push
dec
push
add
in
adcl
loop
insb
push
leave
mov
sti
xor
fildl
aam
shlb
xchg
shll
add
push
into
or
into
ja
jnp
inc
adc
pop
int
jmp
rcrb
xor
sub
sti
insl
push
ljmp
call
jb
fisubrs
cmp
sub
add
ret
je
jle
pop
mov
jbe
sub
push
adc
xchg
arpl
pop
rcl
fs
lock
adc
mov
jmp
pop
push
loop,pt
and
lcall
xlat
jbe
mov
inc
mov
and
jbe
dec
les
pop
insb
popa
icebp
stc
jl
pop
aad
das
lret
xor
lret
fmuls
out
loopne
es
cli
pushf
mov
or
add
xor
repz
xchg
push
pop
stc
push
push
es
sbb
mov
or
or
mov
mov
into
jecxz
std
or
in
les
andl
movsl
mov
cltd
mov
dec
sub
xor
sbb
add
mov
mov
inc
or
dec
jns
add
mov
inc
mov
imul
in
mov
pop
pop
xor
dec
lea
into
xchg
add
fbld
stc
mov
jns
push
mov
shlb
js
xorl
rorb
pop
push
xorb
fsubl
movsl
mov
add
cltd
sbb
aaa
jns
lcall
cld
mov
das
pop
adc
push
lods
mov
xor
dec
sbb
stos
add
lret
push
fstpl
or
mov
test
sbbl
mov
dec
xchg
jbe
add
fisttpl
push
pop
in
repz
imul
sbb
movsl
adc
mov
sub
pop
pop
arpl
xlat
jp
xchg
sub
imul
shll
das
or
add
sub
sub
ljmp
dec
shll
mov
xchg
outsb
loopne
ret
xchg
inc
mov
cmc
in
push
stc
out
scas
mov
pop
in
xchg
or
js
cwtl
test
and
add
idiv
add
cmpsb
mov
mov
in
leave
and
add
hlt
out
lret
pop
int3
dec
pushf
add
inc
fldcw
mov
adc
or
out
pop
inc
or
ss
push
inc
jp
in
loope
sub
adc
lock
or
lods
hlt
sub
sub
aas
leave
not
mov
lock
jecxz
fisubs
iret
jne
pop
xor
je
imul
jmp
sbb
shrl
and
cmp
cli
jle
in
aaa
movsl
subb
stos
inc
aad
dec
cltd
xchg
cs
cmp
sti
test
jg
lock
sub
roll
and
xchg
pop
pop
xchg
add
adc
adc
cmp
lret
shlb
dec
pop
xor
inc
out
test
out
xor
popf
sbb
pop
xor
sbbl
sub
xor
cmc
cmp
das
loop
inc
dec
fisubrl
and
add
jle
pop
mov
ret
rcrb
inc
jge
and
fcomps
sahf
js
leave
adc
jb
cmp
push
iret
addb
es
sub
push
lea
and
popf
out
test
mov
movsl
out
cmpsl
and
dec
xchg
cmpsl
test
adc
fistpl
loope
push
cmpsl
push
xchg
stc
jge
daa
dec
jle
lahf
push
and
loop
repnz
jg
std
add
pop
lcall
sti
cmpsl
fiadds
sub
add
int
fidivrl
iret
xchg
mov
xor
push
popa
adc
xchg
popa
mov
lret
xor
mov
out
push
inc
mov
mov
push
push
std
add
fdivl
adc
bound
or
xchg
out
xchg
fisubrl
mov
push
xchg
lods
popa
mov
das
xchg
jnp
mov
xchg
and
shl
inc
in
std
push
daa
inc
dec
dec
mulb
pop
lahf
xchg
outsb
aaa
mov
mov
shrb
cmpl
pushf
jmp
fiaddl
dec
shlb
fwait
mov
push
or
sbb
sti
cmp
int
stos
mov
out
jne
mov
testb
and
das
repnz
cmp
push
imul
inc
pusha
jge
mov
lods
and
js
ret
nop
xor
ljmp
cmp
adc
push
mov
mov
sbb
or
clc
add
inc
dec
jp
sar
cmp
in
fistpll
lods
adc
pop
imul
in
stos
cs
sbb
mov
sub
mov
dec
aas
dec
aam
shll
mov
popa
pushf
and
fcompl
dec
xchg
xchg
cmp
inc
jno
sub
mov
adc
xchg
mov
adc
adc
or
sbb
out
and
movsb
inc
adc
inc
dec
jno
mov
mov
pop
leave
shr
iret
test
pop
roll
xchg
bound
clc
in
jp
ljmp
adc
cli
fiaddl
mov
sar
shll
rcl
insb
test
in
sub
jecxz
mov
ffree
adc
pushf
mov
adc
imul
push
jb
mov
cltd
mov
stos
mov
mov
jb
js
lods
fwait
je
mov
rclb
xchg
ds
orl
loop
inc
lcall
pop
clc
rorl
pop
mov
int
fld
and
mov
sbb
aad
add
dec
jae
xor
inc
hlt
sub
or
dec
add
rcrl
xchg
lahf
dec
adc
aas
xchg
es
test
enter
or
loop
data16
pop
and
nop
ds
fstps
push
pop
aas
jae
scas
cwtl
xor
jle
aam
inc
gs
leave
jno
fdivl
adc
inc
in
cmp
mov
cmp
mov
ss
shll
mov
sub
or
in
mov
add
mov
add
arpl
cmpsb
loope
adc
test
ret
add
jl
fs
inc
testl
add
and
inc
push
testl
ret
dec
mov
std
and
pcmpeqb
add
jns
mov
adc
testb
gs
and
jl
lret
pop
jg
mov
cmp
rcrl
divb
imulb
sbb
ret
push
mov
xor
add
adc
xchg
lret
je
clts
mov
add
hlt
stos
adc
xchg
mov
movsl
dec
and
das
fidivl
jae
xchg
push
mov
jns
test
push
adc
lock
lock
mov
mov
push
ja
jae
lret
insb
sbb
iret
outsb
int
and
push
xor
dec
shl
xchg
pushf
sbb
jne
or
cmp
mov
or
sbb
push
jo
push
mov
int3
lahf
scas
lahf
mov
xor
int
adc
cwtl
lods
jge
pop
lock
inc
aas
xor
mov
mov
mov
sar
mov
xor
and
nop
icebp
pop
fisttpll
cs
xlat
jae
xchg
mov
stos
sub
adc
mov
and
mov
in
rorb
fildll
xchg
jle
sbb
adc
out
adc
jnp
fisubl
adc
shll
bound
cmp
leave
jo
cmp
je
or
adc
lods
xchg
xchg
cld
dec
mov
dec
shlb
xor
int
and
xchg
imul
cmp
rcrb
ret
test
xchg
cmc
sarb
imul
pop
xchg
mov
pop
shll
jle
lret
sbb
xchg
enter
adc
push
mov
iret
mov
mov
nop
mov
or
fldl
shll
loope
mov
pop
mov
xchg
call
xlat
jle
repnz
cmp
mov
loopne
pop
shr
setb
xchg
sarb
movsb
je
sub
xchg
aam
dec
pop
pop
outsl
into
rcrb
or
sbb
xchg
sub
lds
imul
shrb
int
push
push
jno
xchg
and
es
xor
push
inc
jl
hlt
inc
or
pop
adc
cmp
jmp
and
ja
insb
cltd
cli
and
mov
loopne
mov
roll
insl
stc
mov
xorb
jge
test
js
xchg
les
and
bound
pop
and
fs
sbb
jge
cld
pop
or
or
add
fistpl
ljmp
lret
rol
cmp
push
mov
push
sahf
jb
lods
push
aaa
dec
jmp
cmp
lods
adc
cli
scas
and
jg
pop
cmp
ret
bound
dec
cs
mov
lods
inc
jbe
mov
mov
inc
inc
inc
xchg
test
mov
dec
or
mov
mov
adc
mov
cmp
mov
stos
and
sbb
mov
test
rclb
shll
cli
mov
inc
lds
push
rorb
cmp
pusha
mov
xchg
add
stos
inc
ljmp
ret
and
jmp
mov
daa
jns
movsl
repnz
xor
shll
mov
add
ret
cld
push
imul
cmpl
mov
jecxz
jecxz,pn
fwait
xchg
jae
in
aad
dec
out
test
push
outsl
loope
cmp
sbb
mov
push
cmpsb
inc
push
cmp
mov
test
sti
adc
popa
mov
cmp
mov
cs
xor
das
mov
dec
mov
mov
ja
xor
xor
jo
shlb
jns
cmp
adc
loope
push
sub
test
sbb
out
mov
fcomps
inc
lock
pop
subb
jecxz
push
xor
test
cmp
aaa
cmp
shl
fdivl
mov
out
pop
push
pusha
xor
popf
xchg
sahf
int3
daa
push
xchg
test
popf
adc
cmpsl
pop
mov
jle
repz
rorl
add
sub
fidivrs
sarb
in
pop
jb
and
lods
xchg
popf
imul
jle
or
fmuls
shll
pop
loopne
loopne
testl
stos
fwait
adc
inc
and
add
or
xchg
mov
sub
cmpsl
loopne
rcrl
mov
jae
mov
arpl
bswap
sarb
lods
sbb
fimuls
jmp
and
bound
pushf
jle
fisubrs
adc
scas
mov
mov
into
cli
shll
lahf
mov
cmp
sarb
mov
cld
test
pop
int3
add
or
out
mov
js
add
add
lock
mov
jbe
dec
push
xor
cli
or
xchg
dec
inc
mov
cld
inc
and
pop
sub
sbb
pop
pop
mov
inc
data16
rol
ret
jnp
mov
outsl
mov
jae
into
jecxz
lea
pop
mov
ficoml
loop
inc
sahf
rorb
xchg
jno
mov
lea
xor
and
adc
mov
sbb
out
test
adc
cmp
es
push
leave
and
into
pop
ss
arpl
into
jg
inc
sbb
sbb
sbb
lds
pop
adc
rcrb
push
cmpsb
pop
adc
rol
fldcw
addr16
pop
and
xchg
pop
xchg
jp
aaa
and
mov
add
cmp
mov
in
sub
shrl
push
xor
and
mov
inc
mov
add
and
push
add
xchg
mov
shl
or
mov
cmp
cmpsl
into
lods
lahf
cmc
data16
imul
mov
and
adc
mov
into
fnstsw
xchg
dec
shrb
mov
mov
std
lods
mov
mov
pop
mov
into
dec
nop
pop
sbb
js
mov
imulb
cwtl
lods
call
push
lods
jae
mov
xchg
lods
sbb
imul
icebp
adc
xor
mov
push
cmc
negb
in
inc
adc
mov
orl
fmull
inc
xchg
call
cmp
pushf
jle
or
repnz
icebp
pop
xor
in
adc
mov
adc
jno
popa
out
insb
sarb
ss
data16
je
lea
push
inc
add
dec
sbb
ljmp
mov
push
cmp
pop
and
mov
mov
test
jo
sbb
mov
sbb
push
nop
adc
push
movsb
adc
or
ljmp
jle
fwait
scas
xor
insl
add
or
cld
clc
loop
pop
std
movsb
push
aaa
dec
sbb
into
fnsave
or
xchg
cs
add
mov
jge
ljmp
push
xor
ficoms
cmp
mov
mov
mov
xor
iret
out
hlt
cld
pop
or
clc
sub
ss
ds
mov
jp
jbe
roll
lds
out
sub
pusha
add
test
mov
rcr
jmp
xlat
lods
pop
mov
mov
xor
sbb
cmp
mov
and
fs
xchg
inc
fs
mov
std
pop
pop
in
popa
cli
inc
push
icebp
pop
lret
push
mov
cmp
pusha
sub
mov
pop
rclb
dec
or
lods
sub
sbb
adc
and
outsb
push
xorb
push
xchg
mov
ds
inc
adc
or
loope
nop
push
inc
in
add
dec
or
sbb
push
fs
and
jmp
out
sub
fdivl
or
adc
push
mov
cmp
cwtl
jbe
push
fs
adcl
les
call
adc
pop
movsl
pusha
ja
lcall
call
insb
je
mov
or
gs
cmp
push
ljmp
lods
and
push
bound
push
mov
mov
in
insl
sub
popf
cld
dec
pop
repz
xchg
fldcw
rorb
push
cltd
daa
sbb
xchg
xor
jg
unpckhps
out
mov
xorl
repz
mov
push
lret
stos
out
mov
or
cmp
jae
in
mov
dec
cld
bnd
mov
addr16
jae
out
mov
push
and
into
pop
int
push
aas
jmp
and
cmp
jl
mov
push
cmp
shrb
aam
push
sub
cmpsl
mov
mov
shlb
fsub
repnz
xchg
scas
dec
sbb
mov
rcrb
xchg
mov
insb
sbb
notl
mov
xor
ljmp
jns
test
mov
cmpsl
jo
xchg
out
xchg
inc
add
pop
push
jno
in
insl
pusha
xor
ja
pop
int
push
push
ret
test
pop
or
jecxz
add
fsts
ret
sahf
push
dec
jle
cmp
mov
push
mov
sbb
dec
outsb
aad
mov
dec
mov
pop
lahf
out
push
sub
dec
mov
jo
mov
loop
lahf
lea
or
jp
and
jns
xchg
dec
pop
inc
out
stc
popf
fcomip
sbb
sub
mov
repnz
test
test
shrw
and
aaa
scas
cwtl
dec
xchg
icebp
inc
dec
cmpsl
push
imul
das
loop
mov
cli
daa
fisubrl
adc
jnp
scas
sbb
cltd
adc
gs
sbb
and
and
dec
sub
sub
fisubrs
add
jo
test
xor
mov
or
mov
mov
or
testl
xor
or
xlat
sti
push
sbb
and
push
adc
orl
out
out
dec
idivl
lcall
sahf
ja
and
mov
mov
jge
in
xor
fstpl
call
outsl
add
push
jmp
xchg
cmp
popf
js
js
fiadds
sarl
push
insb
sub
cmpsb
or
sbb
das
in
das
dec
icebp
mov
clc
sub
pop
int3
jp
jecxz
xchg
jns
mov
loop
js
sahf
cld
mov
pushf
mov
jbe
idiv
lds
outsb
std
test
sti
jp
ljmp
lret
jnp
pop
push
aaa
adc
test
hlt
jecxz
rcrl
mov
pushf
push
mov
popf
pop
add
add
mov
push
push
add
jmp
push
inc
xlat
mov
inc
inc
cmc
sbb
xchg
mov
ficomps
mov
xchg
sub
mov
outsb
fcomp
lock
movsl
loope
pushw
pushf
movb
sub
mov
cmp
add
and
sbb
dec
jno
scas
lods
and
mov
add
add
mov
shll
sbb
jg
ljmp
lret
pop
imul
xchg
loop
sbb
xchg
andb
push
mov
pop
pop
adc
and
mov
and
popf
sbb
fistpl
fcompl
sti
lahf
jae
jle
sub
push
sub
cwtl
push
xchg
xor
aad
xor
insl
clc
pop
mov
or
int3
or
pop
popf
push
jbe
mov
push
pop
sbb
shll
cmp
rorb
push
jle
jmp
xor
sarl
in
dec
sarb
stos
lds
push
out
addr16
call
rclb
shlb
fiadds
popf
pusha
xor
inc
add
mov
ja
repz
outsb
cmp
dec
add
imul
or
push
popf
push
add
out
iret
loope
gs
lcall
mov
push
arpl
lret
insl
scas
dec
pop
das
test
sbb
sub
data16
outsl
xchg
enter
cmpsb
or
add
xchg
dec
xchg
push
addr16
xchg
call
push
loopne
loop
faddl
push
sbb
dec
incl
scas
xchg
filds
test
or
subl
cmp
sbb
mov
push
lahf
mov
adc
sub
aam
mov
sbb
popf
nop
stc
xlat
jge,pn
ret
cmp
mov
stc
mov
fnstsw
movl
inc
mov
sbbb
nop
mov
out
dec
fisubrs
icebp
movsb
in
cmp
into
jnp
jge
and
sti
addr16
lcall
adc
push
out
iret
mov
ret
scas
outsb
outsl
stc
enter
pop
mov
sub
loop
pop
inc
mov
out
dec
shl
cmp
jmp
jbe
adc
pop
arpl
or
push
push
loopne
jmp
popf
lods
popf
push
adc
idivb
sbb
adc
cld
rol
push
dec
xchg
pop
xorl
movsl
shl
lods
and
or
loope
jns
xor
add
out
loope
dec
xchg
rcrl
or
xchg
push
dec
dec
out
jmp
int3
mov
dec
clc
call
cwtl
shll
fsubrs
pop
push
sbb
mov
xlat
mov
adc
dec
push
cmpsl
arpl
test
mov
les
jmp
insl
mov
jmp
rclb
sub
push
xchg
es
xchg
adc
cld
popf
gs
into
sbb
mov
lods
xor
inc
mov
sbbb
enter
stos
mov
or
push
sbb
push
cmp
popf
out
ss
mov
out
int3
push
jge
repz
pop
mov
pop
loopne
fstpl
inc
cmp
pushf
mov
mov
ret
mov
int3
sbb
lods
sahf
xchg
test
sub
mov
cmp
push
loope
aam
std
lcall
pop
out
mov
fs
pop
pop
mov
ss
in
imul
sbb
push
mov
imul
lds
or
xchg
sarb
lds
hlt
add
movsl
test
and
fwait
add
ds
cltd
xor
pop
fadd
cmp
mov
sub
popf
adc
mov
or
sub
movsl
jmp
sub
pushf
sub
not
mov
pop
dec
mov
push
jo
jae
fisubrl
hlt
xchg
push
and
jle
add
repnz
mov
inc
std
sarl
xchg
nop
das
imul
out
and
lods
xor
mov
mov
gs
sub
mov
mov
pushf
popa
xchg
imul
out
icebp
jbe
es
lods
adcb
add
push
scas
stos
inc
lret
movsb
pop
or
rclb
jno
clc
adc
xchg
add
sub
cmp
sbb
nop
sbb
pushf
add
push
xor
dec
bound
and
out
push
cmc
rol
push
out
into
movsl
enter
push
aas
inc
dec
jo
or
lock
push
fs
in
pop
lret
sub
mov
lods
push
cltd
mov
sub
mov
jae
add
pop
pushf
jnp
jmp
mov
rcll
cmp
jmp
je
arpl
pop
cmpsl
ja
outsl
sub
sub
mov
mov
inc
sbb
xorl
push
aam
jmp
shrb
mov
lcall
pop
inc
mov
jecxz
inc
sub
stos
push
xor
fwait
add
in
lret
nop
test
es
and
mov
incb
sbb
lcall
cmp
xor
sar
lods
cli
mov
int3
xor
stos
cmovle
cmpsl
push
adc
call
lods
push
mov
clc
jnp
mov
scas
inc
je
sahf
sbb
sub
cmpsl
stos
in
jb
sub
nop
xchg
mov
mov
cltd
jge
jle
add
mov
jnp
data16
add
cmp
lret
mov
in
cltd
sub
mov
cmpsb
xchg
shlb
ret
inc
xchg
lahf
or
jne
cmc
xor
fstpl
les
push
jg
ret
out
pop
icebp
mov
pop
repz
dec
sbb
fadds
push
sbb
xchg
or
faddp
pushf
rcrl
loop
jl,pn
xor
ret
sbb
push
push
and
fimuls
cwtl
or
fcomi
push
jle
lcall
popf
in
fwait
pop
push
or
jno
cmp
xor
dec
add
sbb
cmp
mov
pop
int
pop
dec
std
inc
adc
les
push
mov
add
cmp
popf
insl
cmp
arpl
pop
cmp
int3
jnp
mov
add
aad
and
outsl
daa
aaa
xchg
mov
movsl
pushf
push
dec
int3
xor
test
fimuls
fsubrs
leave
sahf
and
xchg
sub
xor
rorl
dec
in
cmpl
dec
and
xor
mov
movsl
sub
stc
jg
pop
arpl
in
add
jne
mov
mov
xor
lods
in
jg
sahf
sub
inc
jo
mov
dec
add
push
inc
mov
sub
mov
cmp
jb
pop
dec
mov
lcall
pop
or
movsb
sub
mov
js
data16
lret
std
mov
inc
mov
mov
xor
out
ja
and
and
mov
or
lods
repnz
popa
mov
stos
scas
insl
dec
inc
fcom
cmp
repz
push
xlat
movsb
xchg
imul
push
outsb
dec
pop
xorb
sbb
add
testb
add
arpl
mov
mov
scas
sahf
les
inc
mov
xchg
or
jne
sbb
fnstsw
cli
popf
int3
aad
aas
xchg
out
and
movsb
mov
pop
xor
add
xchg
or
and
mov
mov
dec
jno
or
mov
pop
mov
inc
mov
pop
pop
popa
cmpsl
sub
imul
mov
outsb
addr16
js
es
add
adc
in
addr16
lcall
test
jge
jmp
cs
push
test
mov
cmpsb
mov
pop
movsl
add
mov
dec
pop
push
mov
mov
xor
jbe
lahf
add
fs
dec
push
nop
outsl
xor
cmpsb
push
sub
add
push
aaa
lcall
ss
lret
loope
pop
mov
cmpsb
sahf
dec
xchg
sbb
and
inc
cs
cmc
orb
jbe
push
add
cmc
adc
push
das
movsb
push
xchg
sub
aad
add
add
and
mov
fcmovnu
subl
es
and
mov
push
clc
icebp
jge
mov
imul
test
inc
mov
jle
aad
icebp
jb
movsb
dec
stos
les
mov
sti
lret
pop
mov
rcrl
jnp
testb
sarl
or
lods
loopne
loope
aas
ja
push
xchg
mov
mov
dec
pop
mov
pop
ret
cmp
add
push
mov
xor
sub
enter
out
mov
std
xchg
inc
adc
dec
xchg
in
and
mov
sbb
push
pop
mov
jae
mov
inc
add
add
in
adc
aam
xchg
or
nop
mov
sahf
pop
or
xchg
lahf
and
pop
xor
push
mov
outsb
lret
sbb
xorb
push
pop
in
loopne
push
jno
cltd
add
cld
sbb
adc
jle
cltd
sbb
repnz
lret
scas
inc
aad
lret
sub
enter
adc
fmull
push
fbstp
into
mov
int3
daa
inc
dec
cld
adc
andb
rol
ret
mov
push
dec
dec
adc
incb
out
jo
maxps
cli
and
xchg
insl
push
and
mov
jge
fadds
jne
sbb
jnp
adc
int3
sbb
push
das
add
or
lods
lret
clc
cs
xchg
mov
push
xchg
imul
fwait
out
pop
jg
push
mov
aaa
pop
and
fcmovbe
out
enter
bnd
dec
adc
aam
cltd
aaa
cmp
addr16
jmp
lods
mov
scas
xor
iret
daa
dec
fisttps
xor
notb
dec
pop
roll
pop
pop
mov
adc
dec
or
adc
test
jo
push
jp
incl
mov
std
mov
mov
adc
and
adc
cmp
test
and
jne
mov
aam
scas
adc
and
push
dec
cmc
dec
fisubrs
in
xor
fdivs
push
sahf
out
jge
movsl
xor
pop
pop
sbb
jg
cmpsb
xor
cwtl
jp
xchg
repnz
lock
sub
sti
leave
pop
ljmp
dec
jnp
push
add
fs
mov
int3
jl
mov
pop
inc
mov
ret
sbb
cwtl
rcll
mov
out
mov
add
fsts
push
lret
out
mov
inc
cmp
push
addr16
clc
push
outsl
out
dec
int
mov
lods
scas
xor
sbb
mov
mov
les
jnp
fisttps
arpl
enter
xchg
mov
sub
call
or
in
pop
or
push
mov
scas
out
mov
test
clc
jns
insl
pop
shl
insl
bound
dec
dec
fisttpl
in
cwtl
jno
movsb
and
mov
int3
scas
scas
call
or
loop
or
ds
arpl
and
lcall
shll
orb
cmp
jbe
out
cmp
sahf
jecxz
mov
add
jmp
mov
or
ret
bound
icebp
lcall
pushl
sub
and
adc
pop
sbb
scas
sub
push
leave
in
stos
push
pop
and
mov
das
bound
inc
faddl
push
gs
jns
dec
mov
daa
inc
test
sti
add
inc
pop
inc
sub
inc
mov
add
add
mov
or
mov
bndldx
test
jo
rol
xchg
cmp
stos
xchg
adc
stos
gs
rcll
jl
push
stc
sti
inc
jae
xchg
mov
jno
lods
dec
push
push
xor
pop
repnz
in
push
or
gs
mov
xchg
mov
add
rcll
loop
sbb
loopne
or
mov
or
pop
ret
insl
or
lcall
add
sub
movsl
mov
and
inc
andb
mov
xchg
pushf
xchg
dec
out
mov
mov
sub
xchg
push
sub
aas
mov
dec
xlat
inc
pop
outsb
mov
xor
xor
push
scas
mov
or
mov
xor
out
sahf
add
and
sarl
xor
enter
inc
inc
cmp
adc
push
adc
out
sub
sub
inc
add
dec
sbb
setb
push
mov
sbb
push
adc
push
dec
mov
pop
inc
dec
movsl
lret
xchg
mov
stos
xchg
lds
push
adc
pop
andl
mov
pushf
rorb
popa
sahf
add
cwtl
cwtl
push
dec
arpl
add
sub
sbb
mov
shrb
xchg
or
mov
jns
jno
sbb
fsts
xchg
lea
mov
xchg
leave
lods
sbb
inc
lds
pushf
push
into
and
push
fwait
push
cs
or
push
sbb
push
push
sbb
xor
inc
jo
pusha
aam
cltd
out
mov
jne
daa
fwait
in
xchg
cld
dec
mov
aas
ds
sahf
outsl
iret
test
cltd
sbb
jo
in
mov
inc
xchg
fadds
mov
lods
jg
subb
mov
cmp
mov
sar
inc
xor
add
js
out
mov
jmp
adc
enter
mov
in
push
inc
jg
aam
in
sbbb
xlat
or
xchg
xor
adc
rcl
pusha
xor
sub
add
clc
adc
stos
mov
nop
test
rorb
ret
movsl
mov
shl
push
in
sub
mov
rcll
rcl
or
int3
cmp
icebp
jne
xchg
add
jge
das
mov
push
daa
test
in
orb
in
cmc
add
std
push
sti
mov
add
jb
insl
mov
lret
cmpsb
cmp
and
test
lahf
aaa
push
lods
test
shlb
mov
cmp
sar
fstl
les
jmp
pop
ja
nop
movsb
int3
popa
pusha
fistpll
sub
cmpsb
mov
dec
or
mov
int3
jge
aad
fcoms
mov
push
pop
das
call
pop
addb
jns
mov
in
bound
shrb
and
xor
std
sahf
inc
mov
mov
sbbb
loope
notl
mov
pop
movsl
mulb
fimuls
or
inc
sbb
jmp
sub
xchg
mov
and
aaa
mov
inc
fistpll
call
repz
das
jp
outsl
in
sbb
scas
mov
sub
out
dec
addr16
sahf
xchg
add
dec
test
out
dec
cmpsl
pop
cmp
inc
xor
into
out
pop
push
adc
xor
pop
cmc
xchg
int
pop
psubsb
popa
adc
adc
leave
loope
mov
and
sti
push
adc
outsb
aas
add
xchg
and
mov
mov
cmpsb
filds
sbb
lea
jle
mov
cmp
fildll
add
adc
testl
dec
and
adc
push
xchg
jo
std
xor
add
cmp
jecxz
pop
xchg
mov
popf
aad
jo
jbe
addl
pop
mov
lock
push
fcmovnb
out
mov
test
cmp
int
lret
push
lds
inc
jae
inc
push
test
mov
ljmp
movsb
dec
jl
stc
jno
push
push
scas
cmp
fwait
adc
arpl
test
je
lcall
out
sub
adc
test
jmp
lret
mov
cmp
add
out
pushf
adc
arpl
leave
outsl
in
or
ss
push
lcall
jb
ljmp
aam
femms
adc
xchg
sub
ret
imul
xor
nop
mov
jno
xchg
lret
xchg
clc
xor
daa
les
cld
orl
sbbl
dec
mov
pandn
jb
push
cs
cltd
sbb
add
aam
sbb
mov
ja
xorl
leave
ffree
addr16
cltd
iret
in
pop
stc
jge
and
loop
mov
pop
imul
repz
addr16
mov
jo
cli
jmp
mov
test
repnz
outsl
jne
sub
xor
fstpl
and
push
sbb
ficomps
sbb
jle
ja
mov
adc
mov
xor
lahf
xor
shufps
pop
insl
push
imul
lret
inc
mov
ss
out
lcall
inc
lahf
cmc
push
insl
mov
xchg
lret
daa
icebp
imul
mov
and
repz
mov
lret
cmp
mov
xchg
mov
cmpsb
popa
jmp
into
add
pop
int3
enter
scas
jae
arpl
data16
outsb
repnz
cmpsb
dec
adc
fiadds
lret
pop
adcl
jae
dec
push
repz
test
imul
out
stc
out
inc
sub
lcall
data16
xor
sub
mov
adc
xchg
in
aas
sub
sbb
fsts
fdivr
push
mov
mov
loope
insl
xchg
dec
sbb
or
les
inc
push
mov
cwtl
and
test
or
out
lods
out
addb
and
pop
lock
inc
testb
mov
add
clc
daa
xor
cmp
gs
lahf
in
add
pop
mov
test
xor
jo
mov
add
sbb
add
push
add
pop
push
sub
icebp
bnd
sbb
pusha
pop
sub
sub
cmpsl
es
fildl
push
jmp
js
xor
mov
lods
movsb
mov
hlt
hlt
pop
lahf
cli
stos
pop
aad
mov
clc
push
mov
fldl
push
xchg
xchg
mov
int3
pop
mov
add
lock
arpl
xor
add
inc
je
call
xchg
int
pop
mov
cmp
jno
outsb
jp
cmp
add
lods
jnp
mov
lds
loope
into
mov
xor
movsl
mov
les
mov
lret
xor
pusha
ljmp
mov
cmpsl
jp
mov
dec
jmp
addb
mov
out
ja
adc
cmpsb
fcmovnb
call
lret
int3
daa
jbe
or
mov
or
inc
mov
sbb
xchg
call
mov
xchg
mov
mov
cld
loope
cmp
clc
ds
or
shl
jns
push
cmpsb
popa
test
pop
add
push
in
and
pop
inc
sti
push
stc
push
dec
shr
inc
loop
or
mov
mulb
andb
dec
or
mov
mov
cmpsb
hlt
xor
outsb
xlat
mov
pop
sbb
test
clc
fdivrs
aad
dec
movsb
adc
jle
sub
sub
inc
lret
pop
das
mov
jmp
adc
sbb
rolb
shll
xchg
push
int3
sub
dec
cs
enter
out
xor
or
push
aaa
dec
push
sub
and
mov
scas
loope
loopne
adc
xchg
jne
sbb
jno
leave
mov
mov
xor
ljmp
mov
push
lret
mov
icebp
sbb
adc
jb
jnp
xchg
stos
nop
add
dec
frstor
cld
ja
or
repz
stos
es
in
in
lds
sub
mov
xchg
jo
icebp
pop
leave
pop
pushf
pop
cmp
jl
mov
or
mov
inc
sub
int3
les
test
cwtl
dec
ja
sub
outsb
pop
repz
fistps
jmp
dec
add
cs
mov
jae
lods
jbe
or
xor
pop
adc
jne
notl
jl
sub
xchg
jecxz
mov
sti
add
scas
dec
int3
lods
inc
push
mov
pushf
ja
or
and
push
dec
jnp
cmc
mov
xor
dec
popa
jge
dec
jns
int
jge
xor
cmp
lret
cmc
add
dec
inc
sub
adc
jmp
mov
imul
mov
rorb
popa
jo
daa
mov
ja
mov
mov
adc
pushf
add
xor
xor
js
mov
push
stc
pop
dec
cmp
test
fistps
xchg
aam
je
jecxz
movsl
sbb
outsl
loop
sub
dec
es
jb
inc
xchg
push
lds
jnp
mov
cltd
push
jmp
mov
aad
fcmovnbe
pop
je
adc
shl
adcb
in
jecxz
push
push
repz
inc
jmp
shrl
cmp
jge
adc
inc
dec
dec
xchg
push
rcrb
cmpsl
addb
jo
pop
ljmp
fsts
dec
cltd
sbbl
and
cli
xchg
xor
push
fldenv
pop
enter
adc
pushf
arpl
cmp
xchg
aam
or
negb
xchg
gs
iret
mov
js
fdivrl
repz
mov
cmp
fcomi
xlat
xlat
in
xchg
scas
jecxz
add
cld
pop
daa
push
push
nop
push
bswap
sub
in
fcoml
or
call
movsl
jg
adc
adc
cmp
add
jnp
mov
inc
inc
es
je
nop
add
mov
out
cltd
in
or
sbb
jecxz
add
or
cmp
jb
adc
sahf
lea
sarb
sti
movsb
hlt
push
jl
pushf
mov
cmpsb
and
in
loope
dec
mov
mov
jmp
and
cmpsl
ret
mov
xor
fidivs
aad
pop
mov
outsb
dec
mov
call
in
icebp
sub
cwtl
lods
xchg
into
mov
rcrb
pop
and
das
cmp
push
sbb
lds
cmc
mov
pop
inc
xchg
jnp
cld
xchg
inc
or
rcll
jmp
and
mov
mov
sub
jns
sub
lret
insb
fadds
push
cwtl
out
cmp
xchg
fsub
ret
cli
push
filds
jns
xchg
outsb
mov
cmpsb
nop
repz
xchg
loop
and
mov
das
in
lock
xchg
xchg
lods
add
adc
fiaddl
jns
jno
repz
dec
mov
pop
stc
sub
sbb
mov
dec
cwtl
jnp
cmpsl
dec
lret
cmpsb
loop
xchg
inc
jmp
mov
dec
enter
pusha
xor
sbb
ficomps
out
lea
cmpsl
mov
xor
das
pop
jg
int
sahf
lcall
add
in
fdiv
aaa
cltd
mov
sub
ds
das
add
in
scas
ljmp
dec
ret
lods
add
pop
scas
sub
sbb
xor
mov
shlb
mov
mov
notl
outsl
or
push
cli
dec
xorl
push
enter
iret
mov
or
int3
ds
in
ret
inc
fbld
flds
dec
xor
pop
push
fldenv
or
hlt
push
jmp
xchg
cld
iret
push
jle
pop
pop
sub
xchg
out
daa
es
shlb
ljmp
mov
nop
fisttpll
out
ja
jge
jae
cmp
loope
daa
xchg
loop
and
mov
xor
call
mov
cmpsb
cmpsb
jae
roll
cmpsb
add
cmp
pop
dec
adc
aam
lret
hlt
xchg
pop
nop
orb
fmuls
xor
ds
mov
and
pop
jl
test
popf
cli
mov
or
outsb
push
sti
dec
cmpl
ds
je
test
and
test
inc
shll
shrl
mov
ror
jle
fdivrl
pop
push
mov
mov
inc
push
cwtl
rcrb
push
cs
addr16
sbb
repz
ja
adc
sarb
jno
fisttps
jnp
flds
dec
orb
mov
xlat
sub
jp
sbb
xor
xchg
push
inc
stos
mov
xchg
mov
jmp
repnz
sub
scas
dec
dec
dec
pop
daa
inc
lret
mov
xchg
mov
push
mov
lret
jecxz
pop
cmp
fnstsw
aaa
shl
xor
push
pushf
loopne
pop
inc
fsubrs
pop
cld
dec
scas
xchg
pushf
push
mov
test
es
lea
divb
inc
clc
pop
and
mov
outsb
mov
dec
push
stos
add
and
adcb
mov
mov
jae
ljmp
sub
push
push
lock
mov
push
leave
aam
test
cli
ffree
imul
xchg
jne
test
fnstcw
ja
or
mov
push
push
ss
aaa
movsl
or
or
stos
jnp
test
push
or
icebp
inc
push
pop
mov
jnp
and
in
movsb
sbb
jg
addr16
in
in
and
gs
icebp
ret
test
jne
jb
gs
cmpl
lret
repnz
loope
filds
cmpsl
std
add
jecxz
jmp
insb
movsl
xchg
jl
jp
shrl
cwtl
push
loope
sub
ja
je
cmp
cmc
xchg
imull
mov
and
adc
adcb
mov
cltd
push
sarl
lds
add
jb
call
adc
mov
mov
or
ljmp
negl
or
xor
sub
test
out
jg
add
mov
es
mov
rclb
shl
dec
xchg
push
icebp
pusha
mov
mull
pop
or
repz
dec
fnclex
fs
and
mov
insl
cmpsb
cwtl
push
add
sub
dec
push
cmp
or
out
cmp
mov
inc
addr16
pop
sbb
call
imul
jae
lea
pop
repnz
jb
sub
jo
ss
scas
sbb
imul
ds
adcb
pusha
xchg
push
adc
cli
push
inc
out
push
mov
mov
inc
mov
jmp
dec
sub
shl
aad
inc
and
cmp
mov
push
out
negb
cmc
inc
out
imul
add
lds
cli
add
lcall
jp
dec
sar
inc
jp
jbe
jae
lea
push
test
adc
sahf
jno
sbb
and
les
rep
sub
xchg
push
cmpsb
adc
mov
push
neg
test
dec
fcomi
mov
dec
jo
or
shrb
loop
mov
outsl
xchg
push
int
mov
and
aas
cmp
jae
shrb
lret
pop
mov
stc
pop
test
mov
inc
aas
jno
push
pop
or
cs
insl
mov
popa
ja
rcll
inc
shl
pop
pop
data16
and
cmp
adc
js
sbb
jns
loope
cmp
jb
ds
fsubl
mov
cmp
adc
inc
pop
sub
sbb
cmp
imul
pop
test
out
shrb
xchg
or
xchg
inc
cltd
adc
xchg
test
out
xor
shll
call
fcomp
out
les
inc
cmpsb
inc
and
push
ja
in
add
push
mov
insl
mov
cltd
rolb
cmp
fiaddl
out
and
mov
mov
adc
mov
mov
repz
adc
shll
or
cmpsl
ficoms
or
add
jecxz
xor
mov
cmpl
cmc
out
sbb
call
aam
cmc
and
adc
lcall
adc
mov
int3
cld
mov
cmpsl
add
jne
gs
lods
sub
pusha
jg
add
xchg
mov
jmp
fdivl
jbe
and
out
mov
and
sbb
or
add
fsubrl
stc
das
or
cmp
mov
xchg
repnz
lcall
add
jg
and
out
inc
xor
jp
pop
ror
xor
popf
aaa
sub
imul
pop
jbe
test
pop
pop
sub
test
push
shr
dec
and
in
xor
pop
dec
inc
test
lahf
nop
mov
cmp
in
xor
add
in
adc
cltd
scas
xlat
lods
ret
insl
jge
addr16
mov
sbb
mov
int
or
insb
adc
jl
cmp
sbb
lahf
lret
xchg
out
xor
mov
in
pop
lods
ds
sub
ret
dec
testl
dec
mov
dec
out
out
mov
xor
lea
in
in
jb
testb
in
imull
xorb
sub
push
jle
fstps
mov
out
push
insb
mov
movl
cmp
sub
ficoml
jecxz
push
data16
cmc
jae
aaa
in
shlb
jno
lock
and
addr16
add
jne
shlb
mov
mov
aad
adc
xor
inc
and
cmp
fidivl
lcall
jg
mov
mov
ss
xor
test
mov
or
mov
aaa
add
inc
loope
andb
int3
xchg
shrl
outsb
movsb
xor
loopne
adc
cld
ss
add
adc
pusha
xchg
imul
pop
sbb
xor
flds
pop
adc
outsb
inc
jle
test
into
mov
jle
popf
ficompl
repnz
insb
xchg
or
mov
mov
dec
adc
inc
in
in
sarb
sub
or
adc
loopne
addr16
dec
sbb
pop
push
sub
sub
inc
and
stos
jmp
sbb
push
shlb
xchg
jne,pt
cmp
fbld
mov
pusha
mov
clc
clc
sahf
pusha
pop
sbb
push
imul
or
and
in
lahf
pop
mov
push
jb
push
xor
jmp
dec
add
pusha
jo
sub
test
dec
cltd
pop
xor
mov
pop
mov
or
mov
xor
xor
or
inc
jecxz
test
mov
or
out
std
loope
aaa
mov
imul
inc
dec
dec
in
pusha
clc
mov
lret
test
pop
push
xor
pop
test
sti
sub
sbb
xlat
cwtl
js
cmp
gs
xchg
popa
cli
mov
fisubrl
cmp
enter
inc
repnz
lahf
sub
adc
or
xorb
aam
sti
adc
je
out
mov
mov
jle
xor
fs
jecxz
jle
xchg
adc
xchg
lret
xchg
scas
mov
iret
pop
add
fwait
scas
imul
fisubs
add
cmp
je
cmp
sbb
mov
xchg
in
sbb
out
loop
mov
pop
lods
mov
push
mov
add
data16
mov
negl
dec
outsb
cwtl
xor
in
or
xchg
pop
movsb
mov
popa
stos
sub
rcr
in
sbb
lahf
xor
lahf
mov
popf
inc
or
outsl
and
lods
fldt
jbe
scas
mov
inc
faddl
lret
xchg
test
les
sub
xlat
push
movl
imul
mov
jecxz
into
xor
sub
push
xor
cltd
out
popa
push
mov
xor
jl
das
daa
gs
into
sbb
adc
in
jmp
fs
xchg
sbb
cmp
in
mov
push
or
and
arpl
mov
add
rsqrtps
and
mov
icebp
lods
mov
jae
pop
cld
in
sub
dec
enter
imull
dec
rcll
lcall
mov
jae
fnstsw
jo
inc
insb
push
ret
jnp
into
sbb
mov
inc
xchg
lahf
jge
mov
fidivrl
jne
dec
mov
stos
adc
ret
loop
loop
fadd
jbe
test
cwtl
sub
or
les
movsb
or
aaa
or
mov
dec
shlb
outsb
jl
popa
sahf
mov
xor
adc
scas
loopne
adc
and
pop
add
into
push
in
xor
mov
jno
gs
mov
pop
jno
and
lret
inc
jge
ljmp
jg
lock
cmpl
xor
sub
push
dec
xor
movsb
pusha
xchg
and
fstps
xchg
jmp
shrb
jle
and
popa
sub
add
sbb
sbb
add
leave
sbb
lods
pop
xchg
mov
ljmp
in
cmp
add
loop
lds
pop
enter
inc
add
jae
xchg
sub
fwait
movsl
popf
and
daa
inc
sub
xor
xchg
ss
fisubrl
jl
insb
cmp
jnp
movq
jmp
adc
mov
mov
testb
push
sub
mull
stc
lods
test
idiv
push
dec
sbb
push
lret
int3
jno
xor
pushf
or
imul
test
fcomps
inc
rcrb
imul
xchg
sti
mov
imul
and
push
loop
mov
push
test
push
and
das
imul
out
xor
cmp
std
jmp
and
lds
daa
or
jp
or
or
aaa
cmp
std
imul
mov
es
or
xchg
adc
mov
dec
outsl
insb
sub
jne
adc
daa
jbe
sbbb
mov
sahf
and
mov
imul
inc
shrb
dec
xor
jo
xchg
shll
rorl
test
jecxz
or
les
out
mov
psllq
orl
int3
or
xchg
repnz
call
xchg
xor
out
jg
popf
or
aas
test
out
adc
sbb
imul
push
inc
xchg
add
js
pop
ret
add
push
pop
xor
mov
xchg
push
ficoms
in
cmp
es
cmp
mov
aad
xlat
and
mov
test
inc
out
insb
movsb
fnstenv
sub
loopne
movsb
cwtl
fmull
push
push
into
sub
dec
jne
dec
aad
leave
ror
fidivrs
in
inc
mov
push
push
mov
jmp
and
in
adc
pcmpeqw
int3
fcompl
das
lahf
jnp
dec
dec
fwait
push
inc
mov
inc
daa
xchg
sti
popa
cmp
push
mov
cmp
mov
pusha
sub
loopne
sbbw
push
dec
mov
aad
sub
mov
pop
mov
fdivs
cs
or
mov
inc
rolb
jecxz
xchg
fwait
cmp
jp
stos
or
mov
aam
or
sti
sub
push
clc
repz
mov
push
mov
fs
shl
sbb
ret
movsb
mov
sbb
pop
xacquire
mov
sub
xchg
sbb
data16
repnz
lcall
inc
sub
imul
je
push
jecxz
lds
add
inc
mov
pushf
mov
scas
clc
xlat
mov
iret
imul
sub
mov
xor
jo
or
fbstp
push
dec
in
or
inc
test
fbstp
out
fsubp
dec
sbb
cld
cmp
sahf
push
adc
fidivs
rcrb
push
inc
stc
loopne
idiv
mov
sti
jns
lcall
pop
jle
pop
imul
cmpsl
rcrl
pop
sti
call
into
mov
test
mov
sbb
jne
jb
subb
pop
xchg
add
aaa
push
lahf
arpl
xchg
adc
mov
mov
nop
mov
sti
in
mov
gs
adc
sub
scas
cmp
jp
popf
push
adc
ja
jb
jbe
push
push
or
cmp
jg
xor
bnd
cmp
mov
xchg
mov
or
movsb
cltd
pusha
ljmp
sti
gs
mov
leave
lods
pop
pop
add
gs
fmuls
inc
adc
dec
xchg
cmc
push
les
les
lds
in
je
ljmp
in
mov
fdivrl
lret
xchg
inc
adc
out
or
scas
cltd
add
dec
jl
mov
sub
fistl
sbb
lock
jbe
push
std
pop
jae
stc
roll
sbb
mov
in
add
and
test
add
hlt
mov
jmp
push
repnz
hlt
mov
xchg
pop
xchg
shr
ja
aam
imul
cmp
add
in
and
dec
adc
mov
outsb
mov
fldl
test
out
ret
push
mov
push
sbb
mov
mov
xchg
or
jns
xchg
inc
dec
push
adcb
iret
fs
ja
sarl
xchg
push
fisubrl
push
cmp
cmc
xor
cltd
pop
push
out
inc
idiv
jnp
movl
add
rol
ja
xchg
dec
pushf
adc
pop
mov
cltd
scas
sbb
es
or
and
inc
jo
in
call
pop
call
mov
imul
mov
in
ficoml
or
adc
jmp
pop
pushf
adc
fists
pop
test
push
jo
enterw
jecxz
les
mov
push
stc
movsl
xchg
out
sub
idivb
xchg
lret
lods
cli
adc
inc
addl
mov
scas
mov
lods
fcmovnb
xor
std
mov
or
push
clc
and
inc
and
mov
xor
dec
mov
fsubrp
icebp
jg
xchg
leave
xchg
cmp
adc
pop
mov
popa
or
call
les
test
mov
pop
mov
dec
jge
cmp
push
pop
push
daa
repnz
sub
pop
fwait
jae
mov
fmull
data16
dec
sbb
adc
xchg
dec
inc
leave
dec
xlat
subb
cs
mov
lcall
sbb
xchg
out
push
pop
or
xor
aas
lcall
mov
ret
inc
loope
sub
or
inc
out
hlt
mov
lret
xor
mov
pop
dec
outsl
add
jge
jbe
pop
outsb
insl
pop
or
xor
lock
ret
mov
lcall
int
jmp
aam
enter
sti
mov
in
shlb
call
xor
in
shll
mov
imul
cmp
pop
push
ds
xor
sbb
xor
jle
adc
pop
fcoms
sbb
push
int3
dec
push
xor
shlb
sub
fldenv
and
shrl
inc
cmp
mov
jg
lcall
sub
lods
out
add
cmp
sub
les
hlt
mov
movsb
mov
loope
es
jl
push
fbld
dec
dec
scas
mov
loopne
sub
pop
jg
inc
shrb
jno
sbb
jl
xchg
add
xor
cmc
mov
lret
and
push
out
aaa
ret
xor
pop
pop
fs
xor
arpl
mov
or
test
rol
idivl
cli
clc
pop
popl
inc
nop
cmc
daa
mov
insb
es
adc
hlt
and
push
mov
mov
js
jecxz
insl
in
xor
pop
push
lahf
insl
stos
mov
xorb
daa
pop
mov
xchg
decl
test
push
cmp
xchg
fildll
pop
sti
pop
push
xchg
ret
xor
or
nop
lods
inc
cmp
test
mov
pop
flds
adc
sahf
push
rcll
shlb
stos
mov
ds
jecxz
sti
cmpsb
add
jg
js
jp
jl
mul
push
mov
push
es
jbe
xor
int3
sub
sbb
sub
lahf
and
nop
mov
out
adc
xchg
xor
cmp
cmp
in
leave
xlat
dec
cmc
in
pop
iret
mov
xor
test
sahf
xor
pop
mov
ljmp
idiv
outsb
rorb
lock
jg
lock
add
xor
lds
add
imul
cmp
jl
cli
aas
cli
sub
mov
fsubs
clc
cli
loop
les
mov
inc
pop
dec
add
mov
push
or
popf
outsl
sub
fwait
insl
sbb
or
addr16
push
pusha
dec
movsl
adc
out
mov
push
cmp
inc
and
lret
xchg
inc
lret
mov
stos
ret
jecxz
push
lahf
lea
clc
fcompl
sbb
xchg
add
insb
jae
cli
mov
fistpll
or
outsl
shlb
jg
dec
loop
inc
rorl
popf
sarl
dec
cli
or
cmp
sti
cmp
lods
das
mov
fistpll
addr16
in
adc
dec
jg
push
les
mov
insl
dec
jo
sub
jb
mov
push
mov
fstpl
aam
push
fisubrs
lods
push
in
xchg
mov
sub
test
xchg
push
cmpsb
or
jl
popf
in
sbb
aam
lods
int
pop
adc
cld
ret
aaa
and
rolb
xor
push
sti
sub
sahf
mov
jecxz
test
push
push
xchg
cmp
sbb
pusha
shrb
cmp
jae
cld
orb
stos
push
sahf
xchg
xchg
das
or
daa
fsubl
xor
cmpsb
cmc
hlt
nop
mov
flds
mov
add
add
mov
aam
lret
pop
test
lcall
out
ds
lods
les
inc
dec
ret
inc
mov
pusha
sahf
ret
je
sbb
jl
push
ljmp
stc
in
inc
mov
pop
add
dec
jae
pop
cmpsl
lret
aaa
push
enter
lret
push
jp
xchg
jmp
mov
mov
push
loop
lahf
dec
and
jle
or
and
xor
das
xor
sub
adc
iret
shl
iret
jge
outsb
stos
push
movsb
lods
ljmp
aad
jbe
sbb
test
inc
ret
dec
incl
fnstcw
mov
gs
movl
cs
dec
mov
mov
in
jl
sbb
scas
push
popa
xor
sbb
rcll
xor
xchg
push
sti
mov
xchg
cmc
sahf
lock
addr16
cwtl
xor
filds
sub
ret
jne
out
inc
aam
xchg
xor
imul
fisubrl
and
lds
mov
fnstenv
cmp
mov
push
ljmp
or
mov
pop
mov
push
je
mov
push
outsl
ds
popf
stos
sbb
lods
js
and
inc
jbe
inc
ficoml
jno
xlat
cli
ds
fimull
jl
ret
cmp
dec
pop
rolb
and
mov
repz
mov
fiaddl
or
out
idiv
je
inc
cld
xchg
cmpl
jge
lahf
out
aam
in
les
mov
pop
ljmp
lea
cltd
xchg
or
movsb
mov
sub
add
inc
jl
repz
call
push
imul
fisttps
cli
xor
sbb
sub
dec
xchg
lret
pop
cmpsl
or
fiaddl
mov
push
xchg
and
sbb
jle
inc
mov
cmc
repnz
stc
xchg
stos
jle
movsl
push
cmp
in
cmp
adc
leave
adc
fdivrs
pusha
mov
sbb
je
ret
xor
movsb
pop
fmul
inc
into
sub
enter
inc
mov
pop
mov
inc
push
mov
jecxz
ret
pop
shl
push
lret
ss
cmpsl
and
mov
adc
mov
test
dec
cmp
shr
test
xchg
cmp
dec
push
mov
sarl
stc
xchg
scas
cmp
mov
push
xchg
mov
jl
jp
sub
xor
into
imul
pop
sarl
mov
sbb
mov
stos
push
and
push
xchg
lock
lods
xchg
lret
cld
jl
inc
into
jecxz
dec
test
lods
movsl
xor
mov
cmc
movsb
xchg
cmp
aad
lret
xchg
xchg
lods
stos
pop
mov
inc
mov
pop
outsl
pushf
mov
es
sub
lods
ja
sarl
mov
clc
jnp
std
adc
add
xchg
cwtl
lret
enter
xor
in
les
sub
jae
add
and
sbb
sarb
hlt
rcrb
dec
xor
inc
lods
mov
popa
test
frstor
dec
loop
dec
xor
fcom
jecxz
push
jb
leave
or
add
push
rcrb
push
ljmp
pushf
push
mov
cli
leave
xlat
xchg
sbb
fdivrl
sub
std
mov
mov
sbb
sahf
mov
push
cmp
dec
in
ret
lock
sti
sub
mov
push
aaa
scas
add
and
sahf
mov
jo
shrl
ljmp
cmc
filds
xor
xor
mov
dec
lea
sub
adc
xchg
lods
jl
push
push
mov
push
lds
pop
push
add
lods
test
jns
push
xor
mov
je
ljmp
bnd
jmp
enter
pop
frstpm(287
fiadds
lock
sbb
loope
lods
dec
sub
lea
mov
cmp
addr16
pop
shlb
mov
pusha
cld
and
adc
dec
test
adc
xchg
push
push
inc
dec
xlat
cs
out
shll
xor
inc
icebp
dec
lock
mov
aam
mov
stos
pop
mull
jg
cli
stos
mov
lods
ljmp
mov
jae
adc
stos
jns
pop
cmp
inc
adc
mov
or
dec
mov
pop
insb
sub
mov
pop
sub
pop
stc
jl
adc
jbe
lods
iret
cli
sbb
sbb
outsb
adc
mov
cmp
aas
fsubl
icebp
mov
lock
out
adc
fistpll
int3
sbb
jecxz
push
or
mov
jge
test
mov
mov
mov
inc
das
xchg
cmp
es
pusha
bound
in
jmp
lods
push
insl
hlt
cmp
outsl
call
lds
jl
stos
jnp
cmp
divl
leave
xor
mov
push
pop
mov
add
pop
xchg
mov
insl
cmp
lahf
push
push
cmc
bound
insl
dec
jae
push
scas
aam
pusha
andl
jno
lret
xchg
stos
mov
sbb
sub
shrl
xor
das
test
sub
pop
jmp
sar
mov
sbb
pop
test
and
faddl
pop
mov
mov
push
test
scas
mov
add
or
mov
mov
cld
sbb
lahf
stc
xor
out
pop
sti
xchg
xchg
lcall
cwtl
cmp
fisubs
dec
out
push
outsb
pusha
addr16
repnz
xchg
mov
jg
xchg
aas
into
jbe
dec
test
pusha
cwtl
cmp
sbb
jmp
sbb
push
inc
jge
xor
fxch
in
out
cmc
push
xchg
pop
or
inc
mov
add
mov
outsb
mov
sub
jae
fisttpll
sub
rcrb
inc
mov
addl
test
mov
insb
js
sbb
es
mov
imul
sbb
lret
jge
mov
inc
test
pop
mov
and
adc
movsb
xor
cmc
ja
push
adc
cmc
shrb
xchg
jg
xor
and
pop
pop
pop
sbb
adc
jl
out
data16
call
push
loope
hlt
ret
cli
popf
pop
insl
fnstenv
movsb
mov
nop
sti
dec
scas
adc
mov
cwtl
sbb
jno
out
inc
outsl
mov
push
nop
in
and
mov
sub
mov
cli
mov
mov
fcmovbe
push
imul
mov
fwait
mov
push
lea
xor
jae
fisttps
gs
out
push
jmp
fdivs
repz
dec
cmp
popf
jle
pop
sahf
aad
pop
xchg
or
pop
and
jle
or
fnsave
mov
cmpl
cmpl
jbe
push
mov
xchg
rcll
outsl
clc
in
movsb
dec
push
mov
add
mov
hlt
ss
inc
clc
push
jp
cltd
lcall
inc
rcl
stos
sub
cmc
push
xchg
and
or
cmp
add
xor
mov
sti
mov
and
ljmp
out
das
mov
sbb
xchg
fucom
jnp
sub
pop
pop
jge
mov
decl
rorb
pusha
sub
in
and
push
test
inc
inc
xchg
xchg
sub
shrl
pop
inc
das
stos
cli
dec
outsb
adc
mov
xchg
inc
add
push
loop
sub
add
and
enter
packsswb
cmp
aas
mov
int3
test
jg
outsb
aad
pop
xor
loope
or
dec
mov
mov
fsubrs
cmp
cli
mov
xor
fisttpl
sahf
xor
loopne
add
push
cltd
je
jbe
jp
scas
push
add
pop
out
dec
lods
cmp
dec
cld
int
mov
in
repz
inc
ret
add
cli
or
movsl
inc
pop
mov
test
fisubrl
xchg
sbb
mov
cmp
jno
rcrl
repz
ss
lds
and
popf
icebp
ret
xchg
cmpsl
in
add
fidivrl
sbb
pop
xor
push
dec
fldcw
adc
and
imul
and
push
push
xor
out
push
cmp
sub
fsts
out
xor
xor
inc
test
addl
rcl
or
pushf
cli
jo
test
sti
mov
clc
jae
push
loop
add
dec
sbb
push
mov
sub
repnz
loop
pusha
ficompl
cmp
fimull
pop
in
or
jl
pop
hlt
xor
jmp
movsb
sbb
add
and
lock
xor
jae
xchg
popa
and
add
push
sbbl
adc
xchg
cmpsb
cmp
ds
inc
rorb
mov
add
dec
mov
dec
cmc
sub
addb
xchg
insl
ja
in
pop
jae
aam
or
mov
add
mov
in
add
enter
out
shlb
sarb
out
out
scas
imul
sub
pop
dec
jnp
mov
imul
xchg
mov
dec
enter
pusha
xchg
lock
int3
std
lcall
aas
cmp
jg
xchg
leave
mov
mov
pop
cmc
lock
lods
xchg
jnp
bnd
test
jecxz
lods
fbld
sub
lea
stos
stos
mov
and
fldcw
xlat
sbb
in
sub
inc
andps
mov
xchg
cltd
mul
or
add
inc
sub
cmp
adc
stc
pop
in
push
xchg
in
add
inc
push
mov
xor
cmp
adc
dec
daa
in
push
sub
adc
pusha
incb
push
push
incl
sub
sti
xor
cltd
jnp
pop
repz
int3
fwait
ret
fistpll
cld
xchg
je
mov
jl
xchg
repnz
or
pop
adc
lock
pop
adc
xor
push
and
test
mov
ret
es
cmp
rcl
int
jmp
cmp
stos
and
xchg
scas
inc
xlat
sti
jle
nop
xor
add
xchg
pop
leave
fwait
ja
add
xchg
push
dec
inc
lret
xchg
jle
and
pop
enter
xor
or
sub
addr16
mov
cld
jb
data16
cmc
ja
sub
stc
xor
ja
inc
je
repz
ljmp
sub
jno
push
rcrb
into
inc
es
add
aas
push
dec
inc
push
dec
pop
inc
pushf
pop
dec
ja
sub
in
dec
outsb
leave
shrb
or
xchg
push
ja
ret
dec
outsl
into
lea
xchg
lock
js
xor
jmp
pop
imul
test
repz
dec
xchg
mov
test
and
xor
lods
test
bound
ret
hlt
ja
mov
inc
push
or
sti
sbb
inc
inc
dec
mov
push
lret
sub
lahf
out
jg
sbb
hlt
sahf
call
jae
iret
jbe
or
rol
xchg
cltd
inc
loope,pt
js
mov
in
leave
fwait
insl
pop
jbe
add
leave
out
out
movsl
pop
mov
add
xchg
test
cwtl
mov
fildll
cmp
mov
pusha
arpl
int3
call
and
test
cmp
cmc
jg
mov
fimuls
cmp
jbe
adc
pop
lret
dec
xor
add
sti
in
inc
mov
push
in
notl
out
lods
ss
insl
lds
push
sub
mov
mov
pop
ret
ja
lcall
mov
repz
sub
hlt
imul
lahf
int3
jnp
cmp
loopne
andl
addr16
stos
into
lea
mov
int
jg
mov
rorb
pop
add
adc
sub
pop
push
jo
mov
push
adc
inc
stos
xchg
sbb
arpl
inc
mov
push
loopne
ret
loope
pop
jle
or
push
jb
and
sahf
mov
aad
jecxz
scas
cmp
cld
add
sub
fidivs
cmpsb
or
pextrw
or
loop
aaa
mov
outsb
ret
inc
insb
pop
and
lret
cmp
mov
in
xor
movsb
and
setno
inc
mov
sub
and
mov
fistl
lret
inc
dec
cmpsl
call
xchg
shll
cmp
clc
pop
cmp
enter
jecxz
or
inc
inc
dec
and
insb
test
in
inc
pop
jmp
push
idivl
jg
scas
les
into
xchg
and
aam
aas
push
sbb
mov
xchg
xchg
ljmp
dec
loope
aaa
sub
int3
xchg
out
adc
adc
sbb
ja
andl
push
mov
jl
cmp
dec
xor
leave
in
xchg
das
scas
icebp
dec
loopne
mov
mov
fs
xchg
or
fnstsw
nop
inc
or
or
js
jne
push
mov
inc
cmp
or
push
or
orl
fstpt
pop
xchg
in
xor
outsl
pop
shr
fcomps
sub
xor
aad
stc
jns
popa
and
sub
pop
xchg
xchg
push
imul
pop
scas
aaa
andl
imul
das
je
mov
cwtl
mov
testb
push
jbe
add
pushf
mov
mov
xchg
mov
adc
ret
dec
xbegin
add
pop
or
jne
cmpsb
in
sub
mov
std
arpl
xor
mov
mov
fstp
fisttps
dec
filds
mov
xchg
orl
adc
daa
jecxz
push
mov
in
jb
sbb
xlat
or
sub
adc
and
xchg
addr16
inc
js
push
inc
ljmp
insl
push
in
push
inc
adc
cltd
jmp
fsub
jns
scas
or
adc
test
mov
cltd
fisttpl
mov
clc
add
pop
adcb
mov
lds
addb
jne
loopne
xlat
out
lock
xor
popf
mov
mov
out
shll
mov
mov
cmpsl
out
xor
iret
pop
movsl
xor
ss
mov
pop
lods
pop
sbb
xor
addr16
sub
mov
mov
and
and
or
jno
inc
sbb
sub
jb
mov
addr16
push
sti
int
popf
shll
lahf
push
mov
adc
test
or
add
lret
push
lods
rclb
ja
pop
dec
cwtl
ja
cmp
xlat
mov
cld
cli
lcall
adc
mov
mov
cmpb
pop
fcmovu
mov
jae
fisubs
es
stos
into
mov
sub
cmpsl
mov
iret
sbb
in
es
aaa
mov
push
jb
gs
jecxz
jno
dec
add
sub
ss
pusha
inc
lds
sarl
fdiv
dec
das
scas
or
push
ja
add
in
inc
popa
pop
or
movsl
out
mov
nop
mov
mov
or
out
testl
push
leave
call
add
mov
pop
rdmsr
popa
out
pop
pop
hlt
call
mov
in
jns
mov
in
call
shl
test
idivb
and
insl
sbb
xor
ljmp
inc
push
aaa
rclb
cli
ja
dec
add
repnz
scas
xchg
ret
lcall
mov
pop
sub
jl
xor
mov
rcrb
add
cmp
nop
xor
cmpsb
and
xchg
test
xor
pop
ficoml
cmc
sbb
aas
shlb
arpl
xchg
push
mov
lods
add
aam
je
dec
mov
fisubl
enter
cmc
in
xlat
and
aaa
fs
cld
dec
fs
adc
xlat
dec
mov
lcall
push
sub
faddl
out
pop
loopne
ja
pop
cltd
test
jbe
sarb
insb
mov
inc
pop
push
scas
test
test
adc
pop
pop
jl
sub
sbb
pop
lock
pop
push
pop
sar
mov
pop
pushl
and
clc
ret
mov
cmp
xorl
xchg
clc
pop
cmp
sub
test
dec
loopne
add
ret
fidivrl
and
mov
adc
cs
aad
jecxz
test
pop
cltd
pop
mov
inc
ljmp
movsb
aas
or
pop
push
jle
cmp
int
or
xlat
lea
mov
mov
jg
inc
out
mov
leave
sub
adc
cmp
dec
addr16
pop
inc
jbe
pop
dec
cmpsb
push
out
setg
gs
mov
jnp
push
enter
push
into
loop
ret
xor
mov
push
sub
scas
sub
sti
lret
fistps
pop
xchg
xchg
mov
es
pop
lds
pusha
insl
call
jg
arpl
jl
adc
pop
stc
inc
call
out
lcall
stos
test
lret
arpl
dec
out
lcall
aam
fcomip
dec
jno
insl
hlt
sub
decl
inc
enter
and
sbb
ljmp
pop
pop
jg
lret
adc
push
sub
std
xchg
push
mov
rcr
je
xchg
jb
xchg
cmp
fnstenv
xchg
test
in
fwait
xchg
dec
jmp
je
or
test
and
mov
ljmp
and
add
fistps
mov
loop
push
pop
aas
ror
xor
and
push
sub
mov
pop
jmp
mov
ret
xchg
repz
pop
sarb
push
dec
mov
rorb
cmp
sub
ss
adc
inc
jle
mov
push
ja
les
das
xchg
ljmp
sbb
jae
push
rcrl
or
fisubs
clc
andl
std
imul
aam
push
mov
pop
fstps
adc
aad
dec
lret
push
jne
mov
cmc
xor
fdivrs
jl
idivb
or
test
pop
push
pusha
scas
hlt
jne
pop
mov
stos
loop
jg
jl
and
mov
movsb
xchg
and
fs
dec
mov
jp
test
mov
or
lahf
addl
sbb
outsl
xchg
repnz
in
cmp
push
aas
adc
cmp
lcall
xor
adc
push
mov
out
insb
pminsw
shr
cwtl
xor
mov
es
sub
mov
enter
push
sub
jecxz
roll
test
sub
mov
jle
pop
outsl
add
scas
call
imul
movsl
aaa
es
add
mov
ret
mov
popf
pop
mov
jo
push
jge
dec
mov
push
pop
and
aam
lods
shll
icebp
inc
and
scas
mov
xor
lcall
leave
fidivrl
add
mov
lret
lret
std
mov
mov
testb
mov
jne
int
mov
add
cmpsl
xor
adc
dec
pop
xor
lock
outsl
push
jmp
sbb
cld
popf
aad
int3
push
mov
enter
arpl
fwait
mov
mov
jg
add
mov
sbb
jns
and
cwtl
incb
and
jns
jmp
sarl
insb
rclb
fdivrl
insb
enter
sbb
loopne
lret
inc
pop
xchg
mov
dec
adc
je
ds
mov
dec
insb
div
mov
sbb
inc
nop
sbb
push
cli
sahf
leave
mov
pop
dec
mov
test
push
or
adc
inc
aas
bound
imul
in
jl
test
mov
pop
rorb
push
nop
jl
divl
test
mov
stc
aaa
negl
ss
loope
scas
imul
test
out
imul
cmp
hlt
popa
movb
push
pop
lcall
data16
ret
clc
dec
inc
cltd
mov
outsb
lds
and
pop
fwait
sti
pop
leave
in
add
aad
xor
dec
xor
ret
push
cld
mov
jns
rol
xchg
cltd
mov
out
sub
dec
mov
sbb
fists
pop
mov
clc
sub
outsb
push
mov
mov
sub
xor
arpl
inc
cmc
out
shrb
jnp
mov
push
dec
lock
jmp
es
cmp
cld
mov
fnsave
mov
jae
push
jne
in
and
ret
test
pop
pop
xor
fimull
test
xchg
sub
scas
in
jmp
push
imul
and
adc
stc
mov
jno
add
or
ret
mov
shl
lods
xorl
inc
ret
data16
dec
push
add
xlat
dec
cmpsb
and
jnp
andl
imul
fadds
push
jmp
mov
in
data16
sbb
inc
pop
cli
xor
dec
and
hlt
pop
stos
test
add
fdivrs
mov
mov
sbb
lock
cld
dec
jbe
gs
mov
movsl
push
adc
loopne
movsb
mov
in
and
pop
jmp
add
ds
sar
mov
pop
repz
lahf
xchg
push
sti
jae
xor
jnp
ja
popf
sbb
pushl
in
in
dec
pop
xor
movsl
cmp
push
adc
test
push
push
pop
daa
mov
pop
mov
inc
push
add
push
rorl
sub
stos
divl
adc
ds
mov
test
sbb
int
test
xchg
test
push
lahf
out
cmp
jg
and
jnp
cmp
cmp
aas
inc
push
inc
dec
mov
push
cs
fsts
xchg
dec
xor
pop
xchg
ret
mov
aad
pushf
and
jp
pop
jb
sbb
iret
mov
dec
repnz
test
jp
sbb
lcall
scas
pop
mov
pop
add
add
sub
scas
pop
cmp
out
call
pop
in
xor
or
in
ja
lds
dec
test
dec
loopne
movsl
xor
clc
dec
inc
jecxz
and
repnz
pop
pop
fimuls
push
pop
movsl
icebp
aam
roll
sbbl
ds
xchg
or
aas
gs
sbb
outsb
lea
cmp
les
jns
add
and
adc
adc
aas
iret
stos
or
in
mov
dec
fsubs
loop
fisubs
and
mov
popa
push
cs
cmp
or
filds
jmp
stos
xchg
or
into
fwait
xor
lret
lock
dec
push
or
aas
cld
jne
xor
push
sbb
xorb
cmpsb
and
xlat
in
loopne
mov
imul
inc
out
int
mov
std
xchg
lock
ds
loopne
clc
pop
mov
movl
xor
jmp
adc
int
cmp
xor
lret
jmp
test
cmpsb
push
sbb
push
push
push
and
sub
adc
sbb
xchg
cld
mulb
mov
lret
sub
mov
dec
movsb
mov
pop
dec
pop
mov
and
icebp
pop
mov
mov
mov
mov
xor
fbstp
iret
xorl
mov
mov
inc
cmp
pop
imul
mov
pop
bound
sbb
scas
jmp
mov
jb
xchg
iret
rcll
in
mov
inc
add
in
out
inc
bound
je
ficoml
sarb
inc
rorl
cld
pusha
fidivrl
inc
or
add
pop
push
xor
lret
pop
jns
mov
xor
int
dec
jp
sub
adc
fidivl
lcall
add
movsb
dec
cs
cmp
sub
fwait
lret
mov
rclb
ret
sahf
inc
aad
pop
push
dec
sti
or
adc
push
mov
sbb
mov
xchg
decb
adc
mov
data16
pop
mov
push
popa
mov
daa
sti
or
dec
popf
scas
xchg
jg
sub
adc
inc
jl
mov
sub
lods
dec
adc
push
rcl
addr16
arpl
pop
add
mov
add
mov
cmc
xchg
pop
cs
movsl
icebp
mov
cmc
push
sar
inc
imul
fcos
bound
push
roll
lcall
pop
outsb
mov
cmp
push
xchg
or
pop
inc
adc
aam
leave
jns
outsb
movsb
pusha
inc
lcall
je
sbb
ja
push
and
ror
mov
ret
fistpl
addl
in
xor
int3
or
dec
imul
movsb
dec
aas
popa
cmpb
insb
cmpsl
test
xchg
pop
pop
in
out
mov
aad
loop
jnp
mov
add
ret
pop
shrb
fistpl
sub
cmp
sbb
push
ficomps
in
adc
cltd
mov
jno
loope,pn
mov
int
outsl
das
aad
dec
jmp
out
cmp
sti
js
fadds
loope
mov
pop
cmp
cs
leave
es
pop
daa
rcl
pushf
aam
aaa
push
mov
sbb
push
pop
mov
icebp
inc
xchg
popf
push
out
fbld
xor
jge
test
xchg
jmp
cli
push
pop
sub
or
int
adc
xor
jae
dec
popa
out
ret
push
cwtl
movsl
cmpsb
pop
aas
les
jbe
repnz
dec
push
jle
orl
xbegin
out
shll
xchg
add
sub
test
icebp
jl
push
insb
adc
xchg
jg
test
out
xchg
xchg
stos
pop
bound
daa
pop
test
es
daa
shr
jnp
mov
dec
inc
mov
push
or
ss
dec
popf
jnp
or
push
testl
pop
cmp
cs
xor
pop
das
pop
mov
fwait
cmp
imul
xchg
pop
outsl
pop
js
dec
adc
xchg
xchg
pop
sub
mov
push
cmpsl
aad
aam
iret
mov
shrl
pop
add
fildl
dec
sub
push
ret
mov
mov
lea
ja
mov
fnstcw
sbb
imul
aam
xor
mov
xchg
sub
mov
inc
leave
cmp
inc
jl
movsl
mov
arpl
jno
faddl
pop
push
mov
lret
ret
test
bound
sub
xchg
push
jbe
cmp
cmp
iret
jae
push
fwait
lahf
adc
ss
loop
das
outsb
imul
lret
mov
mov
leave
popf
cmp
ss
lods
stos
imull
or
adc
push
sbb
or
add
clc
lea
inc
loopne
pop
dec
jae
cmp
jae
fisubrs
aam
mov
insl
cmp
pop
jge
mov
adc
dec
stc
jmp
and
or
aaa
stos
fwait
test
jecxz
xchg
out
mov
mul
out
mov
mov
jbe
jo
aaa
xchg
pop
jns
xchg
daa
iret
inc
mov
lahf
and
dec
test
imull
sti
sti
lods
adcl
and
rcrl
and
mov
xor
add
repnz
call
sub
pop
jmp
scas
dec
mov
pop
mov
call
outsl
mov
pusha
and
clc
and
adc
ret
dec
jge
fdivrs
mov
jnp
add
and
mov
mov
sub
bound
sbb
and
clc
negl
xchg
cmp
negb
xchg
push
push
pop
xor
stc
and
ss
add
daa
rorb
add
add
jno
sarl
lret
xchg
popf
sub
cmc
or
jno
mov
jmp
bound
dec
roll
adc
mov
dec
aad
inc
xchg
mov
leave
or
jo
cli
scas
cmpsl
ficoms
popl
dec
mov
shlb
push
subl
nop
lahf
inc
loope
lock
add
mov
inc
insb
popf
jne
data16
mov
mov
cmp
cs
jno
adc
or
int3
mov
mov
into
dec
lods
aas
and
cli
and
mov
jnp
shrb
pop
in
dec
sub
call
jns
dec
dec
stos
add
push
rclb
rcrb
test
and
lds
or
mov
jg
jno
fmull
repz
lock
pop
xchg
inc
sbb
lcall
loope
iret
aaa
imul
xor
daa
stc
adc
jne
mov
mov
sahf
leave
mov
idivb
rcrb
clc
in
fs
and
push
cmc
fisttps
loop
outsb
jb
inc
in
aad
mov
mov
jmp
adc
xchg
cmp
jg
lock
cli
xchg
rolb
test
subl
dec
mov
test
dec
data16
lea
mov
push
pop
iret
fisttps
cmp
bnd
imull
fldt
jg
dec
mov
fisubs
mov
cmpl
repz
data16
xlat
call
loop
cwtl
inc
sahf
jecxz
inc
shrl
mov
fldl
in
out
mov
and
pop
nop
pop
lcall
fdivrs
orl
aaa
push
sbb
cwtl
inc
or
dec
sbbl
mov
rcrb
inc
push
adc
inc
mov
or
movsl
mov
flds
jns
sahf
pop
mov
push
xchg
outsb
pop
sub
pop
stos
adc
or
rorb
mov
mov
cmp
push
shlb
jbe
adc
jne
shll
jne
daa
test
insb
cmp
cmp
cmpb
sbb
jmp
sub
movl
popa
adc
punpckhwd
dec
daa
push
jge
mov
es
mov
push
mov
jbe
int
push
lea
or
mov
sahf
pop
adc
jne
jb
imul
pop
hlt
gs
jbe
ljmp
inc
mov
enter
fcmovnb
lds
sahf
rolb
jnp
xchg
pop
out
jmp
cmc
flds
ljmp
cli
push
int
push
cmp
pop
mov
faddp
jg
loop
clc
popf
fwait
jmp
mov
repnz
ja
fimuls
mov
lea
lcall
mov
push
enter
rcr
push
dec
aas
shrb
push
mov
cmp
xchg
pushf
dec
cmpsl
xor
cmp
jp
cmc
enter
in
callw
sbb
xor
das
loop
insl
stc
sub
popa
hlt
push
ret
lahf
or
mov
push
jl
int3
or
or
xchg
cld
jg
pop
and
inc
testl
pop
pop
or
push
jle
lock
sbb
adcb
fistps
mov
pop
push
or
inc
test
and
imulb
aaa
adc
xor
clc
mov
int
stc
loopne
in
xchg
loop
lods
loope
push
shll
or
add
sub
add
or
and
and
and
xor
push
dec
sbb
shl
lahf
dec
int
out
pop
test
jmp
incb
inc
mov
outsb
int3
inc
imul
xor
aaa
sub
aas
jae
jnp
mov
cli
scas
fistpl
rcll
imul
dec
and
dec
adc
out
ror
lahf
mov
les
mov
shr
xor
pop
mov
cs
mov
pusha
mov
cmp
dec
pop
xor
mov
imul
mov
adc
sti
xlat
mov
mov
cmp
pop
ss
daa
popf
shll
stc
in
jb
in
inc
hlt
mov
ja
sub
push
mov
inc
and
and
fwait
inc
rorl
add
mov
adc
mov
push
hlt
dec
jl
iret
pop
ss
call
fidivrl
dec
mov
lahf
mov
fucomip
aaa
fdivr
adc
fnstsw
dec
mov
cwtl
cld
pop
aad
xchg
test
sub
loopne
sub
add
push
shlb
sbb
mov
jns
sub
jge
cmp
xor
loope
sbb
xchg
scas
std
xchg
xlat
push
push
and
inc
notb
test
cmp
aaa
out
lret
dec
mov
mov
mov
and
frstor
fmuls
rcrl
sarl
call
test
aaa
mov
insl
sbb
ja
sbb
mov
add
ret
lods
popa
loop
in
pop
pop
pop
cli
testl
sbb
repnz
mov
leave
push
mov
push
jae
jae
test
mov
and
lds
lret
push
das
imul
push
scas
test
test
or
pop
push
push
pop
int
jg
mov
rcrb
shll
or
mov
loope
mov
or
lods
ficoml
push
daa
imul
stos
repnz
in
push
rolb
sbb
and
sub
pop
pop
cwtl
jg
inc
in
dec
stos
popf
aam
adc
add
addr16
pushl
fwait
testl
and
test
repz
push
fwait
das
ljmp
js
sub
mov
jle
mov
or
and
fwait
jle
add
loop
mov
push
lods
es
and
in
xor
sbb
enter
cmc
add
iret
frstor
ss
movsl
outsl
dec
ds
dec
roll
sahf
xor
popl
mov
aas
inc
push
jl
push
pop
fcomps
sbb
mov
outsb
sbb
xor
add
roll
jo
pop
mov
sub
loopne
pop
clc
test
sbb
mov
lock
jbe
mov
rolb
popa
test
cmp
sbb
rcrl
cmp
jge
push
mov
in
aad
add
sahf
sub
push
jbe
dec
shlb
outsb
pop
sbb
shlb
fmull
cli
push
push
aaa
mov
sub
or
mov
or
dec
sub
and
push
pusha
jbe
jl
dec
insb
sub
pop
sbb
push
mov
push
and
sub
add
sub
pop
mov
aam
sub
sahf
test
sbb
cmp
je
push
andps
cmp
dec
loope
mov
sbb
cli
or
or
or
cmp
and
cli
dec
add
fstps
aad
cmpsl
and
shl
pop
xchg
scas
ud0
adc
jae
sub
popf
rorb
fstl
jbe
sbb
into
shll
mov
push
test
iret
sub
pop
ret
jo
push
insl
mov
das
xchg
dec
mov
add
pop
sub
cmc
cli
mov
out
cmp
adcb
adc
sbb
nop
inc
aam
out
sub
push
xchg
ror
jg
push
adc
sbbl
xchg
test
ja
xchg
lahf
cld
mov
or
call
add
outsl
mov
jnp
cmp
jmp
push
lahf
ret
and
mov
xchg
or
jge
inc
jl
xorl
dec
inc
push
xchg
xor
loopne
test
dec
dec
push
sub
addr16
popf
dec
mov
xchg
jnp
clc
movsl
xor
sub
test
jge
cli
mov
add
repz
je
dec
jns
push
pop
test
ffree
jmp
call
jns
scas
sub
clc
sti
push
aas
add
cwtl
das
cmp
push
sti
pop
xor
das
push
jnp
ucomiss
xor
sbb
mov
add
xlat
dec
out
mov
push
inc
cwtl
arpl
add
and
mov
xor
xor
lods
hlt
cmp
sbbl
sub
sbb
mov
daa
ficoms
mov
mov
repz
out
inc
mov
pop
ljmp
das
pop
sub
mov
sbb
sub
rcrl
inc
out
mov
pop
loope
push
and
fwait
enter
arpl
sarb
xchg
cltd
push
dec
packssdw
push
insb
imul
pop
xchg
sub
jnp
nop
inc
cmp
jno
inc
pop
mov
mov
stc
out
sbb
mov
cmp
jnp
fcompl
out
jae
sbb
scas
shlb
or
outsb
loope
push
lret
mov
inc
imul
mov
andl
add
in
in
das
int3
mov
or
into
pop
add
add
fcomps
cmc
add
mov
lea
push
das
and
push
jo
ja
test
or
repnz
cmpl
addr16
jge
fsubrl
xor
mov
jae
add
mov
ljmp
test
shlb
cmp
scas
jmp
out
push
push
ficoms
aas
mov
les
jl
bound
adc
push
call
push
mov
es
cmc
rcrb
data16
addr16
nop
dec
xor
sub
popa
sbb
push
roll
call
sahf
mov
stos
clc
adc
push
dec
jno
jo
push
and
jl
mov
xchg
in
out
mov
mov
fcompl
push
pop
inc
and
dec
mov
insl
sbb
pop
test
pusha
lods
dec
pop
jo
and
sub
mov
dec
push
incb
nop
das
inc
cmp
sub
push
push
sbb
shrb
shrb
iret
cmpsb
xchg
mov
pop
pop
in
je
jbe
inc
or
lcall
mov
bound
mov
lds
sub
mov
push
inc
aad
add
ljmp
push
mulb
cwtl
jns
push
idivb
movsb
pop
dec
pop
or
int3
pop
rcl
adcb
rcrb
imul
pop
repz
push
cmp
push
fs
or
nop
jecxz
fimuls
sbb
xor
adc
aas
popf
jb
aaa
add
fwait
push
jbe
outsb
mov
cmp
neg
jns
fisubrl
mov
ss
mov
je
scas
push
ss
pop
sbb
sarb
xlat
adc
mov
mov
inc
pop
sbb
xchg
fdivp
cmp
sub
aaa
cmpb
lret
movsb
jne
sub
jnp
in
mov
call
fbstp
push
dec
xor
xor
pop
daa
cmpsl
dec
and
and
fldl
lahf
pushf
lcall
jns
and
ja
stc
mov
adc
jb
mov
mov
xor
mov
mov
imul
sbb
pop
cwtl
mov
and
cltd
addr16
pushf
mov
pop
add
sub
mov
push
mov
add
push
adc
xchg
shrl
and
test
push
add
mov
add
je
push
cld
dec
push
pop
ret
and
sub
mov
cli
add
cltd
and
pop
jnp
lds
je
adc
xchg
inc
sub
jb
inc
add
mov
xlat
jg
daa
cmc
sbb
insl
fisttpl
es
or
or
jo
loop
gs
aas
test
out
mov
jle
or
insl
pop
scas
mov
sahf
cmpsb
lods
sub
inc
adc
or
inc
mov
dec
inc
aam
xor
imul
dec
xchg
and
inc
pop
xchg
and
xchg
insl
adc
loop
adc
imul
adc
sub
aam
pop
fidivrl
cli
dec
xchg
and
cmp
lds
inc
fadds
cmp
or
in
xor
xchg
mov
jmp
push
insl
shlb
sub
dec
lods
xor
sbb
popf
lahf
popf
repnz
push
incb
mov
push
popf
pop
dec
jae
inc
dec
mov
pop
shlb
ror
inc
sbb
xchg
inc
lea
pop
inc
xchg
imul
xchg
das
insb
pushf
xor
sbb
jb
outsl
xor
xchg
pop
loop
mov
mov
arpl
aad
out
cs
stos
pop
sahf
push
ss
xor
es
sbb
mov
std
and
cmp
or
xchg
sub
xchg
addr16
cs
sub
bound
stos
clc
rcl
repz
or
jns
ljmp
imul
iret
jmp
lcall
inc
sub
inc
scas
xchg
mov
sub
outsl
sub
ret
fidivrl
punpckldq
ret
movsl
scas
loope
add
out
inc
mov
in
cmp
loopne
dec
fdivr
lret
cmpsl
adc
push
sbb
enter
jge
rorl
xchg
xchg
and
cmp
sbbl
push
pushf
push
outsb
mov
iret
or
call
dec
xchg
lcall
add
test
adc
sbb
fwait
jl
shll
cmp
mov
jg
fs
jg
adc
shlb
inc
dec
mov
mov
enter
popf
xor
lahf
je
xchg
sbb
scas
jle
int3
pop
data16
out
cmp
test
shrl
in
lods
lods
inc
add
lcall
add
in
xchg
mov
incl
xorb
push
imul
mov
push
orl
mov
pop
rcrb
cmc
push
mov
sbb
and
cmpsl
cmp
jmp
rcrl
repnz
xchg
loope
aas
sub
shl
mov
and
xor
mov
jno
lcall
push
jge
push
sub
push
xchg
pop
sub
ret
lods
ret
lds
push
fistps
mov
mov
imul
or
push
faddl
arpl
dec
or
xor
sub
xchg
mov
loopne
and
aam
pop
mov
icebp
popa
adc
repnz
or
stos
nop
inc
bnd
cld
shl
loop
cmp
js
outsl
pop
jl
cld
jmp
jmp
inc
mov
cltd
stc
lcall
std
pop
add
ja
fs
insb
jge
push
cmp
cwtl
xor
push
sbb
cmp
fiadds
out
and
xchg
mov
mov
cltd
andl
and
mov
sub
inc
ljmp
test
mov
cmpsb
shlb
add
cmp
addl
testb
lret
and
in
pop
xchg
sub
cmpsb
or
adc
dec
hlt
xlat
adcb
test
stos
cmpsl
push
cltd
stos
and
shr
or
adc
mov
jl
jmp
stos
jecxz
je
shl
cmp
scas
dec
test
dec
mov
clc
loop
lahf
insl
dec
ljmp
pop
sub
or
or
mov
aas
in
subb
leave
pop
add
sub
jne
ds
mov
jmp
xchg
jg
inc
mov
mov
sub
pop
cs
xor
fcmovnbe
mov
mov
inc
imul
xor
jecxz
adc
gs
sbb
adc
push
sarl
lods
insb
insb
mov
js
lods
mov
out
fdiv
xchg
stc
pop
adc
and
xchg
test
cmp
pop
push
stos
and
shll
lds
sti
adc
xor
xor
add
xchg
mov
xchg
mov
mov
aam
mov
or
cli
mov
mov
insb
jb
lea
popf
add
in
stos
cmp
mov
mov
push
stos
mov
cmpsb
in
sub
outsb
fwait
call
and
jb
popa
std
cmp
stc
sbb
daa
movsb
aam
fidivrs
dec
push
sub
xchg
mov
hlt
push
jb
movsb
fstp
cmc
movsl
adc
dec
jp
jno
fbstp
repz
test
fldln2
cs
aad
adcl
jmp
out
sarb
sub
pop
mov
fistl
pop
or
out
lret
mov
fldl
add
stos
iret
cli
pop
cmpsl
nop
loope
movsl
cmp
popf
add
push
pop
push
add
stc
pop
add
jle
jns
ret
outsl
fsubrl
and
mov
inc
and
sahf
loope
jne
dec
and
adc
aam
sub
xor
inc
sti
sub
rorb
hlt
aad
cltd
out
adc
push
pop
gs
adc
mov
dec
faddl
jb
sti
fbld
std
jmp
in
les
andl
mov
push
out
rclb
sub
add
shlb
mov
push
or
xchg
xor
repnz
sub
nop
pushf
mov
push
mov
insb
inc
add
pop
inc
fidivrl
add
test
jb
dec
jno
aas
mov
sub
clc
mov
idivb
sbb
mov
inc
fcom
das
clc
cli
pop
push
loop
add
mov
pop
jmp
push
xor
leave
add
cltd
push
repnz
dec
jb
cmp
out
inc
adc
push
iret
push
rcl
pop
sbb
mov
jno
and
and
aam
mov
bswap
leave
cmp
repnz
push
test
mov
iret
cwtl
xor
rclb
xchg
fs
out
fdivs
cmp
or
push
add
and
dec
fisubl
jge
mov
lcall
pop
cli
xchg
in
cltd
addr16
inc
pop
push
jns
imul
test
jae
jmp
cld
xor
in
daa
mov
shrb
mov
adc
mov
lods
in
in
lock
mov
mov
bsf
mov
mov
inc
add
addb
cmp
dec
push
cmp
out
out
push
movsb
mov
sbb
mov
lret
pusha
sbb
je
xor
into
dec
cli
jbe
push
rol
outsb
mov
into
andl
daa
jnp
fistps
test
dec
xchg
pop
jl
loope
jbe
sbb
std
dec
push
stos
inc
cld
cmp
leave
hlt
inc
sahf
cld
xchg
aam
mov
icebp
or
mov
test
jns
inc
push
aas
bnd
jge
movsl
stc
inc
add
mov
lret
fists
in
jnp
dec
imul
push
cld
in
popa
out
lock
call
ss
mov
sbb
lret
mov
mov
mov
cmp
mul
sarb
dec
mov
push
lods
fstpl
jno
adc
js,pt
scas
or
jo
push
mov
mov
mov
mov
ljmp
cmpl
jae
mov
xor
cli
sub
sarb
push
mov
stos
daa
sbb
add
dec
cmp
dec
addr16
testl
ljmp
roll
stos
dec
sbb
pop
dec
adc
outsb
mov
push
sub
cmp
push
fiaddl
cmp
insb
or
push
cmc
ljmp
and
stc
jnp
and
sbb
push
cmpsl
fistpl
js
inc
outsl
mov
pmaddwd
loop
fwait
and
mov
xchg
movsl
sub
cld
dec
mov
add
pushf
nop
lahf
jle
add
sbb
fdivrl
mov
add
or
mov
or
insl
sbb
pop
cs
mov
cli
pop
mov
pop
out
xchg
movsl
sbb
adc
and
faddp
xchg
orb
inc
pushf
rolb
add
rcrb
pop
dec
ror
xor
or
movl
mov
jecxz
jb
cmpsb
addl
or
fmul
pop
scas
push
mov
push
mov
xchg
cwtl
pop
lahf
pop
or
inc
stc
test
scas
push
out
roll
xchg
xor
outsl
inc
mov
ljmp
cmpsl
adc
in
sbb
mov
stc
xchg
sub
insl
add
cmp
cltd
orl
sub
cltd
inc
xchg
sbb
setns
inc
outsl
daa
in
in
sub
idivl
pop
jbe
push
int3
lds
sub
int3
jmp
jmp
or
ja
push
imul
lret
inc
outsb
cmp
pop
loope
cli
cs
repnz
sub
mov
inc
or
nop
push
out
mov
leave
dec
jmp
push
mov
data16
jle
pushl
dec
scas
gs
pop
dec
sahf
sbb
xchg
std
rol
in
scas
jo
push
scas
adc
adc
and
dec
int3
sub
out
inc
ja
movsb
dec
xchg
movsb
xchg
stc
imul
push
mov
and
pop
roll
fnstsw
jne
pop
push
xor
mov
adc
repnz
cwtl
jbe
subl
cltd
adc
das
sti
xchg
rclb
or
cmpsb
xchg
adc
xor
adc
pop
mov
repz
cmp
jno
test
or
fcompl
movsb
xor
imul
sbb
or
cmp
mov
sub
scas
test
mov
into
in
pop
lea
adc
outsl
sub
push
dec
insl
mov
mov
pop
fadds
lds
push
scas
mov
test
aad
fisubl
daa
loop
adc
cmc
push
xor
adc
cmp
xchg
push
mov
and
xchg
divb
xor
push
mov
jnp
test
ja
mov
and
jo
xchg
inc
push
jb
adc
mov
je
cltd
adc
push
out
or
mov
mov
add
int
ja
push
xor
sub
gs
mov
jl
pop
dec
stc
enter
pop
mov
outsl
jmp
sbb
bound
add
lret
leave
push
addl
pushf
add
jbe
jle
jge
clc
push
test
mov
sub
inc
aaa
mov
mov
dec
xor
jg
scas
jle
enter
dec
xor
adc
sbb
fsubs
out
xor
jne
or
es
sub
xor
sub
sub
jge
scas
rcll
or
pop
sub
xor
mov
in
enter
cmpsb
shlb
sbb
sub
sub
leave
jo
mov
call
adc
cltd
adc
xorb
or
mov
lea
int3
je
inc
adc
lods
sbb
jb
inc
data16
cmpl
nop
xor
in
cs
iret
sub
sbb
pop
add
jp
dec
pop
xor
dec
pop
sbb
xchg
cltd
call
mov
sub
xor
sbb
cmp
pusha
pop
movsb
push
aas
repz
jae
and
sbb
cmpsl
lock
push
jmp
sbb
repz
mov
dec
and
xor
and
addb
nop
bound
and
out
xchg
push
inc
stos
rep
sbb
mov
mov
fs
stos
dec
pop
aaa
shlb
pop
movsl
adc
or
cmp
out
or
and
add
or
cld
repz
dec
jne
js
repz
cs
loopne
enter
mov
pusha
movsb
in
mov
add
and
adc
fs
pop
inc
push
cmpb
or
and
adc
ret
jbe
icebp
sarb
popl
push
out
inc
cmp
push
ja
xor
jae
cwtl
mov
arpl
pop
xor
mov
insl
pop
jns
jbe
and
add
fldl
cmp
mov
ret
inc
scas
fdivs
or
pop
cmp
pop
les
scas
xchg
jp
cmp
test
mov
xor
xchg
out
inc
cmp
cs
mul
in
or
int
inc
sti
sti
and
jnp
test
adc
pop
inc
add
mov
cmpsl
pop
es
pop
les
loopne
outsb
clc
jge
pop
or
sbb
push
fldt
std
or
sbb
xchg
enter
xchg
or
test
test
shll
cltd
clc
xor
add
mov
es
sbb
fldcw
add
es
jae
mov
push
push
call
lahf
xchg
fimuls
or
popf
add
add
out
loope
shrb
add
push
add
cmpsb
ljmp
in
ja
shl
dec
ss
push
jmp
das
movsb
inc
adc
cmp
lods
pop
add
dec
imul
out
mov
pop
insb
jge
js
mov
sub
pop
adcb
gs
sahf
sti
mov
dec
in
sub
push
mov
lret
cmc
mov
jmp
sub
pop
mov
lret
sub
lret
fwait
dec
aam
movsl
repz
inc
sahf
jecxz
int
test
xor
adc
pop
inc
and
aam
pop
ffreep
inc
pop
pushf
cli
arpl
aas
and
jge
adc
test
dec
xchg
stos
sub
cmp
test
pushf
lds
pop
sub
adc
jmp
or
push
sub
push
out
jo
pop
call
inc
sbb
cli
push
sub
mov
inc
cmpsb
pushl
inc
lods
out
jl
mov
insb
lahf
jo
pop
dec
inc
sbbb
push
repz
test
add
test
fwait
or
pop
hlt
popa
pop
lock
test
fs
and
jns
ret
inc
pop
xchg
mov
in
inc
inc
dec
lods
dec
pop
jae
sbb
xchg
cmp
aam
adc
lock
mov
mov
jmp
jl
das
cwtl
fnstsw
push
ss
leave
pop
push
cli
sti
and
mov
filds
xor
outsb
fwait
imulb
xchg
sbb
aaa
sahf
fwait
mov
mov
and
push
sub
aaa
lret
mov
cmpsl
pop
imul
xor
lods
mov
lahf
enter
pushf
jb
push
dec
or
jns
xchg
and
dec
cmpsl
mov
lods
lods
test
ss
int
mov
lahf
repz
xlat
outsb
std
mov
xchg
js
cwtl
inc
mov
rcrb
sbb
dec
stos
jl
sbb
aaa
or
fbld
or
int3
icebp
cltd
mov
push
andb
and
cmp
jl
mov
jle
push
and
xchg
jb
sub
repnz
cmpl
or
sti
mov
mov
or
pusha
jecxz
sbb
loopne
js
mov
iret
setns
sbb
mov
cld
iret
bound
mov
dec
inc
adc
xlat
xor
push
clc
jge
push
mov
mov
ja
ljmp
and
adc
mov
test
sbb
lret
or
xor
mov
cmp
jne
daa
pop
out
fwait
and
mov
repnz
mov
and
nop
out
dec
mov
or
sub
mov
and
outsl
sub
iret
out
adc
aas
jmp
mov
mov
xor
cld
cmp
gs
repz
cmp
movsl
dec
rcll
add
dec
mov
aas
iret
std
movsb
fiadds
xchg
shr
pop
sub
push
outsl
fidivrl
jnp
and
or
jo
pop
jp
push
xor
mov
addr16
sbb
jecxz
or
out
jne
ja
lcall
cmp
enter
ret
jbe
test
cmpxchg
idivb
clc
push
cwtl
sahf
adc
push
das
dec
ja
dec
mov
mov
shrb
dec
imul
inc
insb
cmpsb
dec
add
sub
inc
inc
lods
lcall
mov
xor
insl
fnsave
jecxz
add
aam
add
fs
xchg
sbb
jge
scas
jmp
jmp
mov
push
fwait
cmp
pop
shl
ret
cmp
fs
mov
adc
xor
aad
inc
xchg
outsl
mov
fildll
and
xchg
jge
xchg
sbb
imul
pop
mov
loope
insb
inc
push
xchg
push
pop
ret
bound
aaa
fadds
add
sub
sbb
imul
push
loop
adc
in
jmp
loope
and
inc
sbb
mov
mov
jns
pop
pop
xor
sub
jne
inc
lahf
xchg
xchg
mov
mov
push
inc
std
roll
in
jb
pop
add
cwtl
inc
out
ja
loope
in
xchg
or
lea
mov
sbb
mov
lcall
xchg
ret
test
xchg
sub
jo
cltd
mov
into
cltd
dec
data16
sub
leave
xchg
inc
testb
popf
pop
mov
jecxz
jnp
lea
dec
cmpl
inc
test
lock
leave
xor
adc
xor
outsb
int
cltd
or
and
mov
mov
clc
xlat
cwtl
mov
xchg
push
push
pop
ficomps
shrl
repz
in
sub
mov
es
pop
je
sbb
cld
dec
mov
cmpsb
xor
into
outsb
mov
xchg
outsb
add
std
jnp
pop
push
sub
jo
out
cmpsl
fwait
xor
test
jae
sbb
dec
call
xchg
enter
stos
push
xor
icebp
and
xchg
sti
or
insb
adc
dec
dec
mov
fcoms
jno
imul
push
mov
cmc
test
add
mov
scas
xchg
sbb
cmp
fildll
add
int3
pop
call
in
xor
insl
es
push
push
xchg
inc
mov
lds
mov
outsl
fimuls
in
stos
into
push
mov
or
popa
fprem
lds
in
pop
scas
sti
xlat
push
into
add
mov
inc
je
outsl
push
xchg
pusha
fwait
lock
cmpsl
mulb
and
sbb
sahf
sbb
out
dec
sub
xchg
mov
jne
or
nop
push
mov
roll
iret
mov
cltd
pop
lahf
xchg
sbb
mov
or
mov
inc
bound
scas
iret
adc
js
dec
dec
dec
sbb
sbb
adc
pop
dec
inc
pop
and
inc
cli
sbb
cmp
add
xor
fisttpll
pop
cmp
mov
mov
push
mov
cltd
adc
sar
xor
leave
and
stos
test
or
push
xor
push
xchg
or
stos
mov
fsts
icebp
or
xor
xor
roll
xchg
jnp
loope
subb
inc
lcall
dec
cmp
push
jo
movsb
stos
dec
scas
sub
sub
arpl
jp
mov
iret
push
xor
jmp
inc
daa
and
jnp
out
and
pop
pop
adc
popf
negl
pop
xchg
pop
mov
jecxz
pop
lret
inc
sahf
ficoms
cli
cmpsl
mov
push
jbe
pop
cltd
cltd
add
cwtl
mov
movsl
mov
sbb
out
adc
xor
lods
adc
mov
scas
mov
out
imul
cmp
and
jb
test
fimuls
dec
pop
mov
mov
test
out
popf
dec
or
jb
fs
aad
stos
mov
xor
add
cmc
lcall
shrb
fstpt
addb
fcmovbe
jle
pop
add
arpl
mov
xchg
push
lods
mov
fistpll
adc
sub
adc
stos
mov
mov
ret
dec
jnp
paddsb
mov
pop
icebp
mov
mov
fs
jmp
je
loopne
add
test
lods
mov
push
cmc
icebp
imul
fldl
cmc
sbb
ret
stos
mov
mov
add
mov
rcrl
dec
div
pop
sbb
imul
lcall
or
loope
mov
testl
enter
pop
xchg
mov
negl
int3
mov
mov
aam
sarb
aaa
in
cmova
out
adc
ret
and
xchg
push
xor
aam
cli
sti
notb
push
aad
sub
jnp
lds
cwtl
jae
dec
xor
or
aas
int
cmc
test
repz
sti
push
loop
cld
mov
lret
mov
mov
jmp
inc
dec
and
mov
xor
adc
ja
movsl
mov
adc
je
int
sbb
arpl
mov
xchg
sbb
lret
in
jns
sbb
cmp
dec
std
xor
mov
sub
das
test
pop
adc
or
mov
mov
push
loopne
push
push
sub
inc
xchg
inc
jns
ret
adc
push
mov
mov
dec
mov
orb
jp
sahf
jl
push
add
pop
repz
les
xchg
xor
push
pusha
or
jnp
andl
pop
pop
jmp
in
pop
inc
pop
and
repnz
int3
cli
lret
mov
out
jg
in
inc
pusha
mov
cld
mov
xchg
nop
loope
hlt
jb
lea
mov
xorl
cli
mov
daa
add
dec
into
cmp
jns
mov
cwtl
cmc
sbb
movsb
pop
mov
rolb
inc
pop
pop
fistps
adc
jge
lds
lret
jg
clc
insb
lods
hlt
sbb
sub
ret
mov
jmp
push
sar
ljmp
sub
adc
and
cmp
popa
jo
faddp
inc
sub
adc
ljmp
inc
push
test
cmp
cli
cmp
cmc
insb
sub
mov
mov
and
sbb
sbb
clc
and
and
outsl
dec
movsb
jbe
pusha
sbb
out
ret
push
inc
and
sbb
repz
xor
lret
int
jno
mov
xchg
orb
pop
and
cwtl
jne
push
mov
mov
xor
cmp
add
leave
les
and
inc
inc
or
sbb
or
jbe
imul
lds
lcall
mov
dec
xchg
dec
adc
popl
les
lcall
xlat
xchg
inc
xchg
push
outsl
fmuls
mov
jmp
pop
jmp
add
stc
and
cmc
in
xor
mov
push
xchg
push
sub
sbb
sbb
inc
lahf
rcll
lods
dec
shll
hlt
jge
sbb
nop
inc
repz
push
inc
inc
mov
adc
sbb
cmpsl
outsl
dec
inc
xor
cli
ljmp
and
mov
in
fwait
mov
jae
or
add
call
mov
popa
daa
jae
pop
mov
xchg
popf
pop
call
sbb
lds
adc
mov
cmp
fdivrs
sub
mov
in
leave
add
shl
ljmp
rolb
jnp
cltd
mov
inc
cmp
pop
ljmp
dec
les
add
loop
xor
pop
testb
hlt
leave
push
jle
push
mov
sub
cltd
mov
jns
arpl
aam
scas
inc
add
push
push
adc
dec
push
add
mov
call
xlat
add
push
je
aas
sub
adc
pop
dec
fildll
sbb
xchg
cmp
mov
cld
xchg
repnz
push
cwtl
inc
cli
sbb
hlt
ss
mov
push
js
outsl
in
mov
dec
xor
adc
loope
sub
hlt
decb
cmpsb
sub
or
or
in
out
xchg
and
in
xchg
push
add
lcall
adc
sbb
cwtl
enter
push
fsubl
pop
mov
adc
pop
xchg
xlat
push
mov
mov
pop
sub
pop
push
and
mov
movsb
movsl
test
les
push
jg
sti
sbb
sub
dec
push
repnz
sub
adc
xor
decl
ja
loop
std
sub
or
mov
pop
movsl
mov
pusha
fdivrs
cmp
gs
popa
xchg
xchg
cmp
cmp
or
push
push
int3
loop
cmpsb
sbb
mov
cs
nop
insl
stc
test
xchg
pop
pop
dec
sub
lret
sub
cmpsb
idivb
cmpl
sbb
hlt
aam
in
stos
repnz
mov
outsl
scas
mov
cmpsl
mov
out
mov
cmp
xor
movsl
push
shl
test
pop
sbb
mov
daa
jo
sub
pusha
call
fwait
xchg
loope
pop
fiaddl
das
popf
loopne
mov
sbb
cmp
in
cltd
test
xchg
aam
inc
inc
leave
les
mov
lods
jne
je
push
xor
stos
xlat
xchg
inc
dec
mov
leave
jmp
add
das
bnd
push
repz
repz
ljmp
push
in
sub
test
mov
xchg
mov
push
sub
mov
scas
jbe
dec
xlat
mov
loopne
adc
jne
sbb
mov
rcll
add
fs
mov
sbb
push
mov
sub
call
ja
mov
mov
xor
cmc
fists
mov
pusha
rol
shrl
addr16
je
adc
dec
mov
jecxz
popa
ret
cmpsb
call
outsb
xchg
xlat
js
fs
addb
mov
sbb
jne
push
ljmp
call
jp
sub
jp
fidivs
outsb
movsl
rcrb
jno
test
pop
in
adc
fwait
mov
adc
mov
jmp
adc
jbe
sub
in
sbb
mov
pop
mov
mov
in
mov
movsl
sub
cmc
and
push
xchg
das
dec
movsl
cli
and
shlb
jnp
out
and
pushf
daa
loopne
jb
inc
out
push
in
inc
dec
ja
or
jae
les
push
bound
psrlw
pop
push
push
les
pop
loop
push
outsl
ficompl
push
mov
push
cmp
pop
pop
arpl
add
pop
sub
pop
out
cmpsb
cltd
cwtl
repz
shrb
test
push
repz
sar
fidivl
stos
push
movsb
inc
and
out
loop
inc
jo
pop
clc
mov
leave
fucomp
jp
cmp
mov
jno
xor
add
popa
or
mov
sbb
add
mov
adc
insb
je
adc
lds
xchg
xlat
sarb
lcall
push
das
out
mov
xchg
jne
xor
xchg
frstpm(287
cmp
cmp
scas
push
push
and
push
jns
xchg
cmp
mov
int
cmpsb
jmp
jecxz
leave
push
filds
xor
mov
out
mov
dec
xor
add
subl
push
and
mov
adc
repnz
xchg
fidivrl
pop
popa
inc
popa
sbb
fdivrs
jmp
ja
mov
jo
cs
or
and
dec
mov
in
sub
lods
xchg
dec
cmpsb
mov
mov
fsubrs
push
loopne
push
mov
xchg
inc
push
jg
fwait
pop
add
sbb
jge
inc
mov
add
aam
aaa
push
jbe
pop
pop
or
iret
jecxz
sahf
lret
cmp
cld
sti
pop
xor
addr16
mov
lret
dec
sbb
jecxz
mov
add
pop
xchg
stos
test
es
sbb
iret
and
fildl
jecxz
dec
push
cmp
ljmp
fnstenv
repnz
push
mov
pop
in
cli
mov
das
jo
scas
jl
xchg
inc
cmp
data16
rorl
stc
stos
cltd
ja
movsl
imulb
pop
jmp
test
stos
pop
into
shll
xchg
lcall
test
xor
sbbb
jo
sub
sbb
arpl
mov
or
inc
loop
and
and
mov
push
cmpl
idivl
scas
mov
popa
in
pop
xchg
fwait
pop
fadd
sahf
js
xchg
adc
or
enter
inc
adc
push
mov
pop
mov
mov
jl
mov
repz
cltd
mov
cmc
mov
data16
dec
cwtl
jp
jecxz
adc
in
divl
add
xor
dec
or
test
and
or
ss
cmp
stc
xorl
xor
inc
daa
push
xchg
adc
inc
dec
push
inc
cli
add
bound
push
loop
or
jp
push
lods
dec
inc
cmp
jg
dec
fwait
jmp
in
or
add
push
scas
or
fdivrl
ljmp
mov
jge
in
mov
aas
iret
mov
jno
push
and
jecxz
mov
xchg
in
mov
sub
call
movsl
je
lret
sbb
mov
js
and
inc
jecxz
std
adc
mov
std
cmp
lock
and
gs
insb
xor
das
cmpsb
add
fidivl
in
push
jo
or
jmp
and
push
sub
mov
cmc
fistpll
mov
dec
or
inc
add
mov
insl
adc
inc
inc
iret
ljmp
aad
pop
arpl
fistpll
imul
jo
pop
add
xor
jmp
pop
and
jecxz
mov
out
in
aam
or
test
xchg
ja
jle
or
inc
arpl
jno
mov
add
mov
mov
lahf
jb
test
xchg
test
test
sbb
sbb
add
xor
xor
xor
jno
or
mov
ljmp
mov
push
jg
sti
cmpsl
sub
sub
cmp
lret
loopne
inc
cmp
mov
icebp
ljmp
scas
and
add
call
sbb
cwtl
movhps
das
cmc
ljmp
sar
enter
mov
cmp
data16
cwtl
es
inc
mov
and
mov
xchg
insl
lahf
xor
test
sbb
fiadds
ret
cmp
call
leave
adc
adc
xchg
cmp
gs
sbb
jo
and
inc
and
add
or
or
fnstenv
dec
hlt
cld
sbb
pusha
lds
mov
or
mov
lret
pop
mov
js
mov
cs
sub
cmp
pop
sbb
or
daa
mov
add
cs
pop
xchg
das
jg
pushf
jns
mov
out
ret
jnp
cmp
pop
fidivs
das
xor
test
popf
pop
jae
ja
xor
pop
out
mov
cmp
cwtl
punpckhbw
xor
inc
xchg
xor
pop
fcoms
or
push
jle
pop
ss
mov
fsubl
cwtl
ret
sub
push
dec
jg
xor
mov
sysret
movsb
pop
or
cltd
add
lods
ret
stos
or
fnstcw
or
inc
mov
test
cmp
repnz
or
pop
jnp
mov
in
adc
fs
pop
adc
mov
xor
pop
inc
mov
cmp
jge
imul
and
fisubrs
in
negb
cmp
inc
pop
dec
lahf
cmp
cmp
icebp
fmull
stos
xorl
ret
cmpsb
cmpsb
xchg
and
mov
xor
dec
mov
sbb
sbb
out
movsl
push
bound
bound
pop
lods
dec
cmp
andl
xacquire
mov
pop
cwtl
cmc
pop
adc
sbb
mov
add
pushf
sbb
lock
jne
sub
leave
pop
mov
out
or
mov
out
loop
or
cmpsl
push
sub
stos
pushf
sub
push
clc
orl
test
pop
mov
ja
push
sub
pop
adc
out
nop
fsts
pop
lcall
mov
out
jg
push
filds
lret
subl
cmp
pop
pop
aaa
testl
lods
adc
mov
iret
int3
push
lret
add
lock
push
xorl
repz
xor
cmp
imul
mov
lods
mov
sbb
inc
test
xor
enter
xor
pop
dec
fdiv
jae
jmp
mov
xor
sub
popa
pop
cli
xor
idiv
rorb
sub
out
and
roll
or
inc
push
push
cmpl
test
push
pop
sti
sub
jge
scas
lret
std
pop
add
gs
ficoms
test
test
adc
mov
dec
push
mov
xchg
mov
aaa
popf
popf
mov
rcrb
out
add
sbb
das
mov
push
mov
hlt
xchg
xor
sub
sub
xor
dec
gs
jo
adc
data16
ret
jnp
mov
xchg
adc
gs
fwait
mov
cmp
divl
inc
ja
lea
or
pop
sti
in
xor
or
inc
mov
iret
fs
lods
pusha
inc
dec
subl
inc
data16
xor
adc
dec
loope
adc
pushf
imul
or
mov
dec
adc
imul
and
stos
test
enter
int
or
dec
and
rol
je
loop
inc
push
ret
push
inc
add
in
lds
jmp
cmp
rcrb
xorb
cmp
sub
shl
sbb
sbb
push
and
and
int
hlt
outsb
cmp
push
lock
call
xor
push
or
inc
mov
addl
scas
sbb
pusha
mov
scas
shrb
fdivrl
sub
ret
loopne
arpl
mov
mov
sbb
sbb
fildl
lret
out
sbb
push
sub
push
push
into
nop
movsb
lahf
das
push
mov
lea
andb
int
xorl
aaa
aam
insl
mov
negb
sbb
sub
adc
adc
cmp
shrb
pop
sbb
iret
mov
dec
out
mov
in
dec
push
daa
test
hlt
fisubl
or
jno
mov
out
out
sbb
inc
and
es
test
mov
inc
ds
in
jecxz
repnz
iret
fcmove
popf
sub
imul
mov
mov
inc
and
push
out
and
fcompl
inc
mov
fadds
fsubl
or
xchg
movsb
push
xchg
adc
pop
xchg
aas
pop
fsubrl
rorb
sbbl
push
push
mov
xor
xor
scas
add
add
jbe
enter
repz
mov
mov
dec
dec
push
inc
push
sbb
mov
pusha
pushf
mov
add
icebp
scas
cmpsb
mov
fstps
cmpsb
inc
cmp
jp
xor
stc
jo
jge
sub
xchg
lcall
mov
inc
ljmp
cmp
scas
fdiv
bound
add
xchg
mov
fwait
arpl
lods
cwtl
jno
push
insl
enter
leave
test
xchg
icebp
test
mov
cwtl
push
adc
ret
adc
stc
xchg
mov
mov
loopne
jmp
aad
repz
iret
push
xlat
lret
jl
idivb
cmc
pop
cld
out
aaa
shlb
fistps
add
hlt
or
jp
lds
xor
test
push
fdivrp
xor
lahf
stos
mov
sbb
pop
mov
dec
sub
push
hlt
fwait
sub
clc
dec
dec
ret
fucom
mov
xchg
or
iret
popf
xor
jno
pop
push
pop
loopne
mov
pop
xchg
xchg
and
cmpsb
dec
cmp
icebp
clc
lret
pop
sahf
and
hlt
dec
je
xchg
push
scas
divl
lock
cmp
jge
inc
aad
movsb
fdiv
pop
insl
xchg
bound
scas
inc
mov
sbbb
jae
nop
cmp
leave
sub
xchg
mov
lcall
shrb
mov
fistl
push
ret
xchg
pop
or
pop
outsb
ja
pop
add
test
inc
filds
push
mov
xor
inc
dec
add
ret
inc
aad
sbb
add
and
imulb
adcb
jecxz
fidivs
and
pusha
ja
outsb
push
mov
imul
sbb
insb
ss
dec
cld
aam
xlat
add
and
sbb
sub
roll
aam
mov
sub
lahf
sbb
dec
mov
ljmp
push
mov
sbb
fwait
jb
pushf
or
sub
sbb
ja
es
mov
pushf
int
movsl
stc
fwait
pop
aaa
iret
cmc
or
add
dec
clc
addb
pop
adc
cmc
mov
or
dec
jl
push
mov
pop
inc
fldt
popf
test
shll
shll
movb
cmp
cmc
loop
in
jge
push
call
into
xchg
inc
push
xchg
add
push
add
and
pop
rorl
mov
movsl
dec
inc
sub
popf
jo
add
adc
xchg
das
jo
scas
or
pop
cmpsb
adc
mov
pop
push
test
lahf
test
sbb
pop
dec
pop
pop
or
push
xchg
addr16
rclb
push
mov
adcl
xor
xchg
movsb
pop
outsb
cwtl
nop
cmpsb
test
and
jl
movsl
fdivp
leave
pop
jg
imul
sub
loope
test
cmp
std
sub
stos
aaa
push
pop
repnz
pop
aas
cmp
xor
rcl
push
xor
in
js
insl
push
pop
pop
fstpt
or
xchg
inc
push
int3
pop
jo
les
sahf
repnz
aad
add
gs
rcr
jmp
mov
cmp
cli
dec
cwtd
and
popa
in
cltd
sbb
jg
out
or
mov
mov
popf
push
cmpsl
cmp
mov
xchg
adc
xor
cli
ja
aaa
cli
rclb
xchg
inc
sbb
sbb
dec
fdivrs
or
repnz
mov
sub
movsl
cltd
leave
lds
imul
ret
sbb
testb
cmpsl
scas
push
xor
pop
lret
push
pop
orb
push
add
dec
pop
xchg
jne
jb
imul
dec
cmpsl
fsts
rclb
mov
das
into
shrb
add
push
pop
inc
inc
inc
mov
hlt
and
jnp
insl
pop
fldt
add
xchg
jp
or
push
sub
and
rorl
or
add
in
mov
sti
push
dec
int3
add
rep
mov
jmp
cli
mov
xchg
and
mov
xor
and
lock
xchg
push
jmp
push
mov
mov
das
push
dec
lret
sahf
mov
aaa
jle
lock
cmp
mov
xchg
cltd
lcall
stc
stos
sbb
mov
xchg
jb
dec
scas
in
insb
jae
out
push
sahf
push
pop
iret
sarl
leave
dec
xchg
movsl
jnp
fstps
and
jbe
dec
push
xchg
shrb
in
mov
stos
sbb
cwtl
cmp
imulb
fucomp
add
pop
xchg
xor
xor
lahf
cmpb
fstl
sub
xchg
and
jo
hlt
adc
lock
ljmp
dec
out
lea
sahf
jmp
or
repnz
into
andl
push
stos
lods
ret
int
xor
xchg
jns
sbb
call
push
sub
cmp
outsb
daa
addr16
stc
xor
sti
cmp
or
mov
fbstp
mov
ret
pop
ss
adc
in
ljmp
mov
adc
pop
ret
lret
pusha
inc
mov
jb
lret
mov
addb
out
stc
add
and
mov
data16
ljmp
lods
fisubl
sub
sub
push
adc
out
daa
filds
jge
dec
loope
xchg
icebp
bnd
fiaddl
sbb
mov
std
addb
sarl
jecxz
xchg
fldcw
jl
mov
ss
out
and
iret
int3
out
ret
rcr
jecxz
cmpsl
mov
dec
mov
arpl
push
shlb
popf
out
loop
sahf
or
mov
and
pop
fdivrs
es
and
push
mov
add
daa
popa
icebp
cmp
js
repnz
dec
push
lock
imul
pop
inc
lcall
fwait
sub
cmp
inc
pop
ja
into
addb
mov
mov
xchg
xchg
jge
mov
int3
ja
mov
jecxz
je
pushf
dec
pop
pop
and
push
inc
sbb
and
dec
addr16
inc
loope
cmpsl
rolb
fildl
data16
stc
xor
es
xchg
lahf
and
aaa
fdivs
xchg
fs
aaa
mov
xchg
loopne
cmp
cmpsb
imul
data16
cmp
ss
inc
mov
lds
add
jb
xor
cmp
cmp
lcall
aad
jecxz
mov
test
in
push
addr16
sub
mov
pop
icebp
ljmp
jae
adc
or
cmc
icebp
jne
add
and
fcos
xchg
mov
repnz
lret
call
mov
xor
inc
int
or
shll
lret
and
cld
add
es
rcr
repz
xchg
sub
lds
xchg
std
subl
in
cltd
push
sarl
arpl
out
dec
insb
pop
push
cmp
xchg
mov
scas
pop
dec
cwtl
shld
pop
shlb
scas
sbb
push
test
mov
push
xlat
idiv
mov
int3
dec
pop
mov
add
add
push
loopne
lcall
fidivs
subb
mov
stc
push
lret
add
jge
sbb
sbb
xor
xor
imul
notb
out
adc
std
or
jl
pop
adcl
adc
mov
ds
xor
gs
jge
outsl
cmp
aas
or
repz
jnp
jo
sub
rcrb
jl
pushf
dec
fnstenv
arpl
shll
fidivrs
jecxz
jge
mov
adc
jmp
push
cmpl
loop
out
mov
inc
pop
cmp
fucomi
or
cmc
les
scas
mov
in
sbb
push
sti
ljmp
je
pusha
cltd
lret
xchg
push
ja
and
inc
int3
and
aas
and
jns
pop
jne
adc
fnclex
xchg
stos
pusha
gs
fwait
dec
dec
inc
push
mov
mov
push
test
outsb
cmp
add
movsb
jmp
mov
aaa
adc
imulb
mov
popf
mov
fcomps
mov
push
inc
test
cmpsb
inc
push
adc
clc
add
mov
adc
mov
jmp
mov
add
sbb
cli
jnp
mov
add
jb
cld
xchg
dec
xor
mov
cld
lods
xchg
enter
push
aas
and
pop
lret
arpl
and
gs
mov
mov
mov
push
cmc
jae
mov
mov
lret
adc
test
push
push
iret
and
test
mov
rorl
loope
jnp
cs
movsl
cmp
divl
dec
pop
out
std
movsb
sbbl
movsb
jo
or
cmp
push
fstps
fwait
inc
cli
orw
jg
push
push
mov
cmp
rcll
arpl
and
sti
adc
fisttpl
pop
mov
and
test
in
pop
das
shlb
mov
loop
cmp
mov
push
std
fnop
in
movsb
xchg
dec
pop
outsl
mov
mov
stos
addr16
jp
adc
popf
xchg
int
pop
xor
shrl
and
mov
hlt
dec
sbb
jge
dec
mov
jno
int
push
push
inc
movhps
push
xor
push
fisubrs
xor
jns
add
mov
xor
call
daa
dec
in
enter
cmp
cmp
mov
jo
sbb
arpl
dec
shlb
xchg
enter
cwtl
inc
fmull
cld
and
aam
adc
pop
inc
and
das
sahf
enter
xor
mov
sti
jb
out
add
or
mov
mov
mov
mov
lret
enter
enter
pop
mov
ja
push
dec
movsb
jns
jbe
filds
jl
stc
dec
adc
sti
dec
jmp
mov
loope
cmp
mov
mov
mov
jb
adc
push
jge
jns
repz
mov
add
mov
mov
jmp
jmp
inc
add
xchg
sbb
push
shrl
les
add
out
sahf
jnp
or
js
xor
insl
xchg
gs
jge
add
jae
lcall
outsl
pop
jnp
lcall
lea
pusha
adc
jb
bound
inc
lcall
or
push
cmp
mov
cmpsl
fcomi
test
pop
add
mov
fidivrl
dec
sub
incw
mov
popf
dec
xor
adc
cmpsb
sarb
shl
cs
les
xor
std
mov
mov
hlt
xor
and
movsl
scas
cmp
ss
jle
sub
lahf
ret
repz
mov
dec
out
pop
aaa
ja
data16
les
call
add
pop
out
pusha
mov
imul
popa
cmc
test
lcall
pop
or
aas
movsl
xor
push
push
sbb
sub
dec
pop
and
insl
jnp
mov
mov
pop
xor
or
mov
test
inc
fs
inc
push
idivl
sub
sbb
rolb
icebp
lcall
xlat
mov
sub
loopne
stos
fmuls
popf
mov
mov
imul
sbb
sbb
loopne
shl
add
out
push
pmaddwd
nop
or
pop
ret
inc
xor
mov
pop
icebp
lea
aad
or
and
jno
rcr
fldl
dec
push
fwait
sub
pushf
jecxz
xlat
sahf
cmpb
sysexit
ds
xchg
sbb
popf
icebp
enter
mov
xor
jno
fisubrs
and
call
push
mov
adc
fwait
sti
iret
jg
mov
cs
mov
add
andb
pushf
mov
jbe
int
mov
popf
rcrl
test
insl
and
sub
jo
push
fldt
js
sub
lahf
insb
hlt
faddl
jae
pushf
adc
cmp
cld
mov
cld
cmp
xor
push
mov
ds
sub
scas
add
mov
inc
scas
add
out
sub
jecxz
test
sub
xor
cld
das
gs
push
cmp
cwtl
hlt
in
xchg
dec
insb
mov
push
pop
into
xlat
push
repz
xchg
paddusw
cmc
xchg
popa
icebp
ret
add
mov
lds
pop
loop
fs
imul
mov
das
mov
inc
int
dec
ror
mov
iret
nop
ficoms
mov
cltd
ret
aas
stos
jae
sub
addb
mov
or
fs
dec
push
mov
add
xlat
addr16
cmp
cmp
jbe
lcall
mov
les
dec
inc
fidivs
mov
cld
insb
rcll
lods
or
push
cmc
loop
ret
sahf
test
popa
test
adc
enter
js
pop
push
adc
cwtl
leave
xchg
dec
mov
xchg
pop
mov
xchg
pop
push
insl
out
dec
adc
outsl
add
cmpsl
sbb
and
js
mov
sti
push
test
lcall
jmp
rcrl
dec
mov
movsb
shll
mov
jmp
mov
roll
sub
test
arpl
scas
stc
push
in
arpl
inc
mov
inc
xor
mov
mov
mov
sbb
cltd
out
or
fidivrs
inc
and
dec
sarl
jmp
rcr
hlt
fsub
fidivs
movsb
inc
push
in
scas
push
push
repz
jecxz
stc
pop
cltd
repnz
pop
popa
or
out
in
insb
hlt
outsb
idivl
dec
les
out
mov
sysret
adc
ljmp
cmp
test
movsb
loop
ljmp
push
or
popa
mov
scas
in
lret
mov
sbb
daa
dec
push
sbb
or
popl
ja
sub
repz
scas
fidivs
inc
stc
mov
jl
fadds
loopne
adc
fistpll
jle
inc
mov
lock
add
dec
mov
fs
jmp
scas
test
test
sbb
cmc
jb
push
pusha
and
icebp
js
xchg
jp
inc
loopne
sbb
jmp
pop
or
movsb
movsl
mov
xchg
rcr
adcl
xchg
popf
xchg
mov
mov
enter
test
or
js
sbb
mov
shlb
inc
test
loopne,pn
and
popa
jb
faddl
pop
arpl
and
mov
dec
out
inc
xchg
movsb
mov
sarb
in
es
and
mov
cli
xchg
mov
push
push
xor
inc
mov
sbb
outsl
inc
stc
out
cmc
push
scas
subl
cmpsb
leave
xor
fdivrs
mov
lret
icebp
pop
in
int
xor
cmp
or
inc
mov
or
es
std
mov
dec
aaa
mov
sub
outsb
mov
fwait
lahf
pop
mov
cli
mov
lock
xor
je
add
mov
adc
pop
sub
repnz
and
stc
xor
mov
xor
aas
push
push
jmp
repz
addr16
jno
outsl
leave
cli
sbb
les
int
mov
dec
fistpl
int
mov
xlat
mov
cmp
mov
add
adc
outsb
sbb
lret
sub
enter
test
xchg
adc
and
jle
lods
jnp
pop
inc
xchg
fwait
lods
cmp
sub
rcr
and
cmp
js
std
xor
add
fs
sub
xchg
or
push
mov
int3
pop
inc
mov
in
inc
sub
xchg
add
pop
xor
out
xchg
xchg
xor
cmp
cmpsl
mov
push
add
movsb
out
testl
and
bound
aam
add
icebp
xchg
mov
mov
nop
mov
fnstsw
pop
dec
jg
cltd
lods
inc
dec
mov
bound
xchg
push
pushf
mov
mov
cmp
test
cmp
cmp
adc
loop
jnp,pt
loopne
mul
out
daa
pop
and
cmp
xor
cli
or
add
in
jl
mov
ljmp
cmpsl
scas
add
adc
cmpb
mov
mov
sti
push
xor
cmc
inc
lret
lods
mov
xchg
mov
push
xchg
mov
jne
ficoms
mov
imul
gs
mov
jmp
mov
cmp
sbb
mov
push
cmp
cmc
sbb
stos
sub
int3
sub
inc
xchg
or
sar
mov
xor
mov
dec
dec
ror
pushf
clc
or
jge
shrl
pusha
mov
and
sahf
mov
jne
es
xor
adc
scas
test
call
xor
jp
mov
add
xchg
mov
seta
subb
out
push
lret
cmp
mov
cmp
jmp
push
out
loopne
lods
repz
or
add
sbb
pop
jle
mov
cmc
clc
sub
cmpsb
sbb
xchg
dec
aad
mov
adc
lods
outsl
das
cmpsl
dec
lods
in
dec
sbb
test
xor
dec
js
jnp
mov
fwait
mov
inc
out
add
adc
int
negb
ljmp
add
mov
fisubrl
or
std
out
js
push
fmuls
fs
fsub
inc
inc
inc
pop
push
js
xchg
sbb
sbb
push
enter
xor
lods
es
mov
imul
sub
cmp
jmp
je
push
mov
ret
adc
out
inc
rcpss
stos
mov
loopne
arpl
xchg
xor
aas
xchg
mov
or
add
mov
icebp
mov
push
cs
and
jno
scas
push
into
xchg
ret
add
into
or
dec
imul
xchg
iret
and
in
dec
mov
out
out
adc
sbb
pop
sub
push
negl
xlat
pop
mov
jge
nop
vorpd
mov
cmpsb
loop,pn
rcr
icebp
icebp
aam
enter
xchg
scas
loop
xchg
ds
icebp
out
push
inc
ret
call
out
outsl
icebp
stos
jae
data16
int3
add
sbb
jno
iret
jae
inc
dec
lods
sub
push
push
mov
mov
insb
inc
lea
pop
pop
jno
push
xor
test
movsb
mov
mov
sbb
lahf
jae
lcall
stc
jne
cmp
out
push
push
dec
and
repz
js
bound
loop
and
mov
mov
push
out
jl
sub
movsl
mov
lock
pop
popl
inc
test
adc
bound
arpl
in
outsb
inc
mov
push
cmpl
add
ret
mov
shl
and
ror
pop
rolb
imul
ficompl
dec
jno
add
xor
cmp
mov
cmpb
inc
dec
add
xlat
xor
idivl
pop
xor
and
leave
hlt
mov
outsl
mov
mov
imul
add
xor
jecxz
cmp
iret
sti
out
or
xor
scas
sar
dec
test
sahf
mov
mov
cs
jp
xlat
iret
lret
imul
dec
pop
push
sub
mov
nop
inc
mov
and
dec
mov
insl
pop
lods
adc
jmp
js
inc
xor
aad
idivb
std
jl
sub
add
divb
scas
incl
or
enter
pop
mov
dec
stos
mov
movsl
ss
xchg
in
xor
sbb
mov
outsl
ret
pushl
mov
and
adc
fcmovnbe
cmpb
xor
clc
mov
or
inc
push
mov
and
int
jge
pop
call
jge
repz
fsubl
loope
dec
mov
push
cmc
sahf
cmp
or
xor
aam
jbe
loop
xchg
mov
js
fsubrl
cmc
and
pop
xor
add
xchg
xchg
or
shlb
outsb
push
adc
or
lcall
jp
mov
jle
loope
fidivl
aaa
fwait
andl
sub
pop
mov
clc
ds
lcall
repz
xlat
lret
lret
mov
jmp
mov
pusha
in
xchg
and
inc
aam
gs
ds
jge
into
mov
jg
inc
lahf
outsl
mov
in
imul
mov
cs
cmpsl
adc
aam
lods
pop
aam
mov
pop
cwtl
shll
inc
dec
adc
pop
fwait
mov
mov
xor
xchg
inc
lahf
adc
jmp
push
and
insw
ds
jmp
jne
cmp
stos
vpaddusb
adc
pop
loopne
xchg
mov
call
bound
aam
add
push
and
jno
std
or
jmp
mov
clc
push
dec
insl
xor
add
inc
pop
stc
xchg
mov
and
lods
es
mov
movsb
arpl
push
cmpsb
xor
mov
pop
cmpl
cmp
jp
shlb
imul
push
or
aaa
mov
call
mov
sbb
mov
push
or
pop
repnz
arpl
push
aam
pop
data16
xchg
pop
cli
js
mov
inc
inc
test
insb
fs
xchg
int
js
cmp
sbb
adc
sub
out
push
mov
rcrb
mov
mov
out
insl
repnz
and
fists
shl
add
and
pop
lods
popf
push
adc
test
and
sub
mov
mov
xchg
andb
sub
cmp
cwtl
jo
mov
mov
repnz
sub
xor
mov
das
scas
push
outsb
dec
push
mov
xchg
adc
insb
sbb
xor
jne
rorb
outsl
mov
mov
mov
sbb
jecxz
adc
jle
pushf
mov
push
xorl
into
bound
mov
and
fldl
shrl
mov
mov
int
ret
int
add
add
jl
ffree
clc
mov
stos
xor
faddp
ljmp
dec
mov
ljmp
sbb
or
pop
outsl
dec
test
sti
pusha
sti
push
jnp
push
add
out
cmp
push
mov
outsb
and
pop
ret
pushf
mov
lahf
pop
xor
lods
ljmp
jge
dec
test
pusha
add
outsl
cwtl
push
dec
shll
dec
data16
push
jmp
xchg
push
stc
sbb
jmp
sbb
mov
outsb
mov
flds
gs
xchg
in
fs
jle
daa
rclb
shrl
dec
popw
fidivl
lret
imul
xchg
out
inc
and
mov
jno
stos
das
jp
insb
mov
nop
or
add
push
xor
daa
ret
or
push
add
pushf
jns
jns
std
mov
jmp
jne
jae
imul
jne
jb
add
out
adc
mov
sahf
iret
pop
push
aas
and
jg
pop
lret
adc
sbb
jecxz
shlb
ja
add
xor
test
dec
scas
jp
leave
movb
bound
mov
xor
fldcw
xchg
mov
add
dec
adc
ficoml
sbb
loope
add
or
mov
mov
sahf
xchg
and
pop
movsl
sbb
shll
xor
out
sbb
out
popa
jg
aas
cmc
or
and
icebp
int3
pavgw
push
or
lahf
sub
push
outsb
cli
push
jo
dec
xchg
iret
icebp
xor
push
imul
xchg
std
insl
jg
adc
cli
mov
cld
inc
inc
hlt
cmpsb
in
icebp
loope
pusha
loopw
xchg
pushf
pop
or
loope
pop
pusha
xchg
jnp
mov
insl
sbb
out
loop
movsl
sub
aaa
cmp
adc
or
repz
negb
mov
subl
lods
es
push
jnp
mov
int3
movsl
adc
cmp
out
inc
pop
cli
sbb
or
lods
jg
cwtl
int3
push
sub
fmull
and
cmpsb
cmp
aam
mov
mov
push
in
ljmp
movsl
in
cmp
in
xlat
jbe
aad
mov
inc
test
dec
add
fldenv
scas
hlt
push
adc
aaa
std
popa
daa
cmp
xchg
loop
dec
lret
and
sub
cmc
int
dec
mov
lcall
mov
add
xlat
loope
push
stc
push
and
mov
adc
push
clc
incl
push
sub
mov
daa
xor
in
movsl
cmp
mov
dec
in
adc
lods
inc
xchg
sbb
pop
sub
dec
or
inc
in
or
sbb
xor
loop
int
rol
es
es
jg
xor
pusha
xchg
out
mov
fildl
jp
dec
in
pop
aaa
cmpsb
jge
out
in
fwait
mov
push
cmpsl
push
dec
mov
clc
out
lcall
mov
jecxz
and
inc
loopne
xor
rcll
cs
andl
mov
and
push
jle
popa
push
lock
xor
adc
jb
xor
push
jns
mov
leave
mov
mov
fiadds
mov
and
adc
xor
push
push
push
cmp
cltd
mov
sub
fldcw
sub
test
push
jno
pop
mov
insb
enter
cltd
jns
stc
popa
pusha
call
ljmp
jle
lret
mov
xchg
add
sbb
or
rcll
push
cltd
pop
mov
xor
aam
inc
pop
in
mov
cwtl
imul
and
mov
sbb
lea
shrl
mov
loope
dec
addb
sub
iret
xchg
lods
dec
popf
popa
fwait
dec
lds
nop
add
mov
pusha
ret
or
mov
mov
mov
rclb
hlt
divl
xorb
dec
push
dec
ja
ja
xchg
int3
iret
in
ret
inc
cmp
int
add
adc
cmp
pop
cmpl
lret
movsl
sbb
in
sub
cwtl
cltd
clc
outsb
mov
mov
movsl
dec
repz
loopne
imul
into
stos
std
outsl
xor
out
push
pop
fstl
mov
pushl
dec
fwait
aaa
and
mov
sbb
addr16
adc
out
andl
mov
loop
adc
sbb
fmuls
mov
js
xor
neg
mov
cmp
cli
out
into
notb
push
out
rcrb
fsubrs
ret
mov
adc
inc
mov
sub
jecxz
loopne
lret
pop
pop
daa
arpl
pop
fs
fsubrp
rclb
out
popf
adc
addr16
xor
push
arpl
repz
jne
test
mov
cmp
add
pushf
add
lock
repz
fadd
scas
lahf
adc
cmpsb
mov
sti
and
arpl
clc
bound
jbe
out
push
decb
popf
daa
ljmp
clc
inc
push
imul
daa
arpl
jne
shlb
add
rol
mov
int3
dec
sbb
pop
add
lods
jmp
dec
jbe
mov
pop
int3
mov
or
mov
pop
out
xchg
insl
mov
imul
pop
mov
loopne
into
xchg
add
ja
repnz
xchg
add
pop
or
or
cmp
fwait
and
xchg
sub
clc
mov
inc
shrl
cmpsb
pushf
push
sbb
lahf
adc
jns
out
pop
aad
or
faddp
ret
inc
push
ljmp
mov
jl
hlt
push
lcall
and
xchg
ds
cmp
cmc
cmp
jge
cmc
mov
aaa
and
sbb
add
iret
mov
ss
jmp
aam
push
jle
push
inc
mul
dec
lock
xor
iret
cmp
shlb
stos
xor
xchg
sti
scas
xchg
mov
lret
mov
shl
orb
xchg
out
test
and
repz
dec
jnp
cmp
mov
dec
jmp
nop
fsubl
in
inc
xor
cmp
mov
std
nop
cwtl
inc
cmc
popa
inc
pop
rcl
aas
and
or
rolb
lods
mov
inc
inc
bound
pop
mov
popl
jecxz
cmp
int
xchg
ds
dec
mov
imul
rorl
jp
lret
xor
sbb
push
cli
popa
mov
pop
aaa
fsubl
shrb
das
xchg
mov
inc
sti
pop
mov
das
or
xlat
push
fstpl
aas
or
adc
add
lahf
jmp
dec
imulb
cwtl
mov
add
fnstenv
scas
ljmp
stos
cmp
lret
push
insb
push
sub
xchg
push
xchg
cmp
stos
repz
mov
cli
dec
and
jne
loopne
lods
out
mov
xchg
push
outsb
or
jmp
insl
jmp
loop
les
mov
jmp
loop
daa
das
rcl
add
cltd
lret
pop
jp
dec
and
sahf
cwtl
mov
in
sbb
ljmp
xchg
or
xor
sar
icebp
fldl
cmp
xchg
imul
cmp
mov
out
fsubs
sbb
push
mov
jo
xchg
sbb
ret
int3
sarl
fwait
or
sbb
mov
mov
subl
inc
cwtl
insb
sti
xchg
sub
jg
adc
daa
jecxz
mov
pop
sbb
mov
inc
mov
push
jg
mov
mov
outsb
mov
imul
jo
push
sub
dec
xor
setnp
int3
pop
movl
scas
iret
mov
cmpsb
xchg
out
mov
push
js
sbb
and
sub
xor
cmpb
lret
pushf
add
inc
mov
xchg
pop
roll
dec
inc
test
popa
rcrl
loopne
and
repz
push
inc
idivl
adc
and
imul
test
mov
xor
cmp
scas
add
pushf
dec
or
test
cltd
xchg
les
sbb
rcrl
adc
xor
in
in
aam
adc
inc
cmp
cltd
cmp
movsl
dec
cltd
fwait
loope
sbb
jge
mov
or
inc
mov
nop
xchg
lret
test
cmp
roll
aam
sbb
icebp
scas
mov
popa
shrb
movsl
cmp
in
fsubs
cmpsb
or
cli
add
test
mov
inc
push
int
lret
cmc
bound
testl
mov
mov
and
flds
dec
and
inc
dec
mov
jb
add
lock
ficompl
and
mov
mov
popa
mov
cltd
add
aam
bound
arpl
mov
out
aaa
and
daa
mov
cli
in
push
lahf
pop
and
mov
jno
fiadds
and
mov
in
jge
bound
xor
dec
mov
loopne
call
xor
dec
or
inc
pop
aaa
lea
adc
icebp
mov
jecxz
sbbb
out
lods
mov
adc
inc
mov
push
xchg
push
lock
dec
mov
ja
jp
cwtl
cld
cli
outsl
xchg
mov
popa
lods
shr
sbb
add
cld
or
sbb
inc
testl
dec
hlt
nop
and
rolb
xchg
pop
lret
cwtl
pop
dec
mov
jbe
shlb
out
or
pop
daa
or
cmpsl
pusha
cmp
testb
add
mov
fs
lods
stos
lods
mov
out
xor
jp
mov
push
sbb
jecxz
pushf
mov
cmp
lret
mov
cmpsb
stos
sbb
push
adc
sbbl
lods
lods
mov
mov
add
into
out
cmp
xor
out
mov
mov
scas
push
loopne
cmp
xorl
js
cmp
out
fisttps
jl
mov
lods
test
cli
cmpsb
xchg
cwtl
outsl
out
xchg
cs
add
daa
lods
push
js
mov
add
in
imul
movsbl
inc
cmpsb
andb
push
xor
cmp
enter
dec
cltd
jl
adc
int
and
sub
je
ljmp
fidivrs
add
xor
out
push
cmp
lds
add
test
push
xchg
xorl
mov
std
test
xor
cmpsl
lcall
xchg
push
push
lcall
out
push
add
xchg
test
and
mov
mulb
mov
sub
and
shlb
push
mov
imul
iret
fwait
jmp
inc
inc
stos
iret
add
mov
rorl
and
and
lock
sbb
add
movsb
push
or
lcall
shlb
mov
pop
dec
ret
icebp
push
lds
jl
jnp
xor
loopne
mov
fisttpll
sbb
jo
add
lahf
pushf
pop
or
jno
push
sbb
pop
js
xor
push
mov
xchg
aad
mull
and
xor
jno
aam
cmpsl
ror
xor
rcrl
xor
adc
sbb
rcr
push
adc
stos
shl
xor
dec
stos
cmpsb
stos
sub
testl
sbb
jb
rcrb
mov
hlt
push
lret
sbb
mov
xor
push
dec
cmpb
shll
jecxz
cmpb
repnz
xchg
push
sbb
mov
cli
inc
xor
mov
sub
sbb
fs
dec
andb
aam
aaa
xor
mov
push
js
or
mov
fcoml
dec
outsl
loope
aam
scas
fst
push
aad
cli
sbbl
cld
and
pop
pushf
icebp
data16
cmp
pop
jb
orl
fldcw
cmp
outsl
inc
imul
or
sbbl
push
push
les
jl
push
cmpsb
push
xor
mov
movsb
add
gs
mov
xchg
clc
sbb
sbb
sub
es
outsl
mov
adc
sub
push
repz
ss
mov
jp
out
dec
icebp
lock
mov
jl
iret
xchg
xchg
cmp
jbe
sub
ljmp
mov
ljmp
push
lds
and
sbb
cli
jbe
push
push
fsubl
jecxz
sahf
std
idiv
gs
push
fstl
or
outsl
mov
mov
call
imul
aad
scas
test
xor
push
cmp
jge
sahf
lock
jecxz
pop
and
mov
jbe
jg
rcrb
sbb
ja
push
sarb
fistpl
cmp
jmp
cmp
push
push
dec
add
imul
test
test
xor
imull
xchg
jno
sbb
sbb
mov
lret
lock
and
daa
out
jbe
or
dec
addl
push
inc
pslld
xchg
jp
xor
jge
test
or
inc
ss
xchg
test
repnz
repz
mov
int
stc
mov
lahf
shll
imul
int
jne
mov
inc
push
in
lahf
xor
add
bnd
pop
pop
xor
insl
xor
icebp
xchg
shll
fs
xchg
stos
mov
pusha
ja
fbstp
repz
mov
pop
adc
and
inc
push
mov
mov
repnz
mov
lods
mov
pop
icebp
stc
ret
gs
adc
out
call
pop
pushf
mov
jne
call
in
xchg
clc
pusha
aaa
rclb
sbb
dec
cmp
ffree
fadds
mov
jbe
add
outsl
mov
subl
xchg
xchg
and
out
pop
mov
call
stos
sbb
pop
aas
arpl
daa
fwait
popf
sbb
xchg
pop
arpl
imul
ja
add
subl
add
xor
in
mov
cmp
and
lret
in
movntq
aad
bound
dec
mov
outsl
out
call
fs
cmc
dec
pop
or
aaa
lea
sbb
sarb
push
ret
mov
pushf
arpl
jbe
and
cwtl
push
xorl
in
clc
test
push
pop
hlt
fs
xchg
lds
xchg
sarl
cs
mov
mov
fcmovnu
scas
pop
push
push
pop
andl
fmull
ja
outsb
dec
es
movsl
cmpsb
mov
cmp
mov
pushf
ret
push
mov
cmp
add
pop
mov
mov
xor
cmp
inc
mov
and
subl
xlat
cmp
cltd
mov
push
adc
dec
adc
mov
mov
out
scas
fmulp
in
jnp
sti
cli
pop
dec
ja
mov
in
rclb
daa
mov
adc
hlt
ja
btr
outsl
sub
dec
lcall
int
jp
sti
addr16
pop
fstp
repnz
add
aad
mov
lcall
xlat
ror
lods
subb
push
ss
adc
dec
std
xlat
jmp
pop
sti
roll
sub
pop
or
jmp
xchg
push
lds
js
sbb
fbstp
cmp
push
call
loope
inc
rorb
mov
xchg
adc
cmp
dec
push
loopne
test
fiadds
repz
cmpb
imull
pop
sub
cmpl
mov
fstpl
addr16
sbb
nop
jmp
mov
scas
arpl
test
cli
or
je,pt
movl
out
dec
shlb
or
nop
inc
and
les
sub
xor
cmpsb
or
movsl
js
repnz
pushf
enter
mov
jne
aam
int
add
cmpsb
out
mov
icebp
rorl
xor
adcl
les
imul
xchg
out
stc
sti
ds
dec
insl
hlt
xchg
cmp
notl
mov
sar
dec
dec
scas
ret
mov
jge
dec
outsl
popf
and
pop
xchg
aam
dec
dec
cmp
testl
aad
fiaddl
hlt
mov
push
add
lcall
outsl
xchg
or
loopne
test
iret
leave
add
jne
sbb
fmulp
inc
push
imul
jl
pop
jmp
repnz
or
mov
sbb
mov
inc
gs
pop
pop
mov
pop
fidivl
out
xchg
sub
jb
or
mov
mov
jno
out
iret
adc
movsb
mov
adc
icebp
pop
jg
ljmp
jae
in
jno
in
mov
aad
dec
adcb
cmpsl
imulb
jne
repnz
xchg
insb
push
lock
outsl
arpl
aad
pop
mov
mov
cmp
out
cld
loop
ret
std
imul
and
es
add
mov
lods
test
dec
add
lret
sbb
negb
mov
xchg
or
inc
or
adc
in
inc
cli
repnz
cmp
and
xchg
add
push
test
fstp
and
mov
ljmp
dec
lea
xor
mov
push
cmp
or
mov
cli
xchg
mov
or
mov
sub
cmc
movsl
fsubrp
xchg
imul
ret
std
and
xchg
xlat
aaa
fcoml
movsb
mov
mov
test
adc
and
shlb
add
mov
das
pop
out
dec
xchg
stos
ljmp
out
lock
cmpsb
js
imull
adc
push
dec
in
testl
enter
mov
mov
leave
ret
or
mov
fbstp
adc
dec
xchg
sahf
xchg
sub
mov
test
pop
addl
pusha
dec
add
andb
cmp
out
cmp
xor
pop
shrl
addr16
enter
dec
je
push
pop
sub
jae
add
mov
pusha
xor
or
and
jmp
inc
test
adc
fcoml
and
and
jne
and
mov
dec
bound
dec
mov
ljmp
and
jae
scas
pop
je
mov
mov
je
cmp
imul
mov
inc
adc
jmp
mov
adc
add
inc
push
mov
and
mov
sbb
jl
cmp
dec
not
mov
or
and
mov
fists
outsb
mov
lahf
or
cwtl
jge
sub
mov
add
mov
xor
bound
mov
cmp
out
xorl
decb
cmp
cli
ljmp
dec
jns
push
cmp
xchg
cmp
aad
pop
lods
add
mov
test
aas
mov
js
dec
addb
push
fwait
dec
cmp
pop
jg
push
loope
mov
mov
xor
popf
dec
dec
inc
xchg
pushw
dec
sub
out
mov
movsb
std
mov
out
and
in
nop
ja
fidivl
popf
push
xlat
aad
mov
pop
gs
decl
outsb
sbb
pop
imul
test
xchg
jns
leave
push
mov
lret
and
push
dec
pop
sub
mov
push
fisubl
fsubl
push
dec
pop
inc
cmp
adc
test
push
fbstp
adc
scas
or
pop
jmp
out
fs
repnz
addb
mov
mov
adc
jns
js
repz
xchg
in
or
sub
xorb
in
xchg
push
mov
xor
or
outsb
fmuls
rorl
inc
and
stc
push
lea
jb
sbb
push
sub
addr16
mov
mov
sub
cld
inc
test
or
inc
sub
dec
scas
cmpsb
lods
push
pop
popf
movsl
imul
lock
fisttps
mov
mov
cld
xchg
inc
push
or
aas
popf
pop
lods
pushf
fcmovbe
pop
or
decb
sub
jb
or
lret
aas
roll
pusha
int
jae
pop
mov
push
xchg
int3
stc
movsl
push
cmpsb
push
mov
dec
push
push
movb
adc
fildll
mov
xorb
rol
pop
cmc
cmp
jae
jo
and
mov
mov
push
xchg
and
enter
es
gs
xchg
lods
ljmp
js
pop
out
shll
push
cmpsl
mov
jle
mov
add
push
or
cmc
add
pop
shll
bound
subb
pop
fs
and
xor
les
cmp
pop
push
ret
nop
xchg
push
outsb
jno
jbe
std
lds
shl
xchg
xchg
and
inc
add
fwait
or
les
out
jae
cld
fistpll
stos
push
push
fnstsw
rorb
or
loop
call
and
sti
lret
push
lock
mov
outsl
dec
sbb
xor
decl
mov
xchg
xor
and
adc
adc
iret
pop
popf
jmp
pop
outsl
push
xchg
pop
adc
out
fisubrs
sti
enter
iret
lret
or
sbb
lods
xchg
mov
inc
sub
fisubs
cld
gs
idiv
xchg
or
outsb
lods
cld
call
ret
mov
or
cs
lcall
fwait
and
ficomps
ljmp
shrb
cmp
sbb
xorb
mov
sbb
pop
aad
mov
leave
pop
movsb
lret
fmulp
inc
pop
push
mov
or
lahf
sti
or
scas
jl
or
sbb
leave
or
cltd
cmpsb
mov
pop
dec
icebp
fcoms
or
mov
jbe
adc
fwait
int3
stos
inc
testb
jl
stos
int3
fs
ret
lret
mov
jnp
mov
sub
inc
loopne
subb
sbb
jo
stos
scas
dec
and
std
xor
fucomp
lods
mov
push
shrl
aad
add
fcompl
jecxz
mov
mov
int3
adc
and
fs
mov
mov
inc
out
test
push
lods
pushf
inc
in
scas
jecxz
adc
push
stos
jge
popa
adc
pop
fcmovu
or
add
scas
xor
jmp
int
mov
loopne
pop
mov
cmpl
push
push
add
imul
and
mov
mov
push
mov
inc
inc
mov
xor
push
ret
fistps
sbb
xchg
xchg
loope
mov
dec
push
leave
dec
aad
sbb
int3
jne
fstps
repz
divps
mov
mov
add
sub
imul
dec
int3
push
mov
cmp
jle
pop
cltd
add
sub
rol
pop
ljmp
filds
cmpsl
jecxz
hlt
rcl
mov
ss
add
cmp
mov
pop
es
mov
push
iret
outsl
jnp
imul
add
clc
fcomps
sbb
add
pusha
mov
sbb
sub
pop
mov
sbb
add
inc
imul
sbb
psubb
mov
aas
xor
mov
lret
and
xchg
xchg
lea
movsl
xchg
or
xchg
mov
popf
dec
addr16
push
insb
sbbb
lock
aaa
scas
mov
hlt
loope
xchg
mov
adc
jmp
mov
imul
pop
clc
pushf
mov
pop
jmp
inc
je
push
mov
xor
movsl
sub
in
test
mov
mov
hlt
xchg
enter
add
lods
out
lcall
dec
cmpsl
lret
int
add
and
sub
xchg
imul
adc
cld
es
jl
dec
pushf
int3
pop
fwait
pop
les
call
push
adc
aas
push
mov
cmp
mov
xorl
cltd
idiv
add
sub
dec
ljmp
jmp
push
repnz
sbbb
shlb
push
mov
daa
mov
mov
dec
pop
sub
add
sbb
std
movsl
xor
push
data16
xchg
inc
rolb
adc
loop
push
testl
rcr
xor
and
ss
sbb
in
and
das
ret
xor
pop
add
daa
fs
pop
data16
fsubrl
and
jg
jno
dec
std
xor
pop
setg
ds
jbe
fxtract
outsb
pusha
adc
adc
lret
mov
insb
leave
js
or
movsb
push
push
pop
lret
mov
jmp
push
pop
or
xchg
xchg
pop
mov
sub
or
aaa
push
inc
mov
popl
sub
sbb
mov
mov
repnz
cmpsl
mov
idivl
mov
mov
cmp
out
cs
inc
mov
pop
jo
push
sarl
jg
test
ljmp
cmp
call
or
ds
and
add
test
pop
xchg
sub
jmp
fs
mov
jecxz
push
je
mov
inc
inc
jg
or
test
sti
or
gs
lret
out
lods
jg
into
mov
scas
in
push
jnp
xor
loope
rorl
cmp
or
mov
jns
aas
popa
sti
into
aad
ror
lds
test
jmp
test
add
and
outsb
out
or
jge
shlb
int3
mov
addr16
ja
mov
scas
mov
inc
pusha
outsl
or
out
mov
imul
and
lods
push
mov
lcall
push
test
insb
jb
pop
sub
cmc
fidivs
add
adc
ss
aam
mov
fbstp
loopne
jnp
or
mov
jb
addb
subb
faddl
mov
jl
pusha
mov
daa
ret
enter
scas
add
xchg
xor
jne
es
fdivrs
daa
insl
dec
insl
lods
lahf
mov
pusha
sahf
add
outsb
in
or
pop
ss
push
pop
sbb
cwtl
xor
or
dec
add
aaa
push
jno
xchg
xchg
or
mov
mov
dec
xchg
xor
mov
jns
cmp
dec
cmpsl
dec
nop
rcl
sbb
rcr
cmp
cmpsl
bound
mov
clc
leave
icebp
je
pop
cli
sbb
push
adc
stos
int
mov
jb
pop
lret
lods
dec
fisubs
mov
or
sub
ror
mov
jecxz
repz
in
mov
test
int3
sub
out
push
cmp
or
dec
shl
xchg
mov
xor
in
jo
push
add
test
jns
ret
xchg
adc
xchg
jle
inc
incl
fisubrs
cltd
mov
js
out
sbbb
inc
pusha
aas
shlb
arpl
and
shlb
test
rorb
mov
lods
rclb
mov
adc
push
jle
xchg
jp
loope
dec
lret
sub
loope
push
cmpsb
lret
fwait
xchg
inc
jp
sbb
or
pop
and
adc
pop
xchg
xchg
cmp
ja
inc
je
scas
pushf
push
inc
cs
test
imul
fiaddl
adc
sbb
inc
cmpsb
xchg
mov
ret
jo
pop
xor
test
xchg
mov
std
add
loop
shll
movsb
lods
sbb
mov
and
aaa
cmpsl
pop
fwait
repnz
cli
mov
push
push
ret
or
xor
dec
scas
sub
insl
lods
pop
mov
lret
loopne
out
jo
push
push
or
lahf
movsl
in
mov
push
push
pop
jmp
popa
test
das
mov
mov
sbb
sbb
insb
add
subb
mov
adc
and
and
ljmp
adc
push
adc
sbb
inc
repnz
cs
loop
mov
and
in
xchg
clc
inc
jns
inc
popa
dec
lret
xor
andl
push
push
sub
push
ljmp
sub
outsl
pop
fisubl
jb
pop
test
daa
pop
ss
and
test
test
cmp
and
loop
cmpsl
mov
jno
push
mov
sbb
cmp
daa
movsl
stc
div
xor
sbb
sub
xchg
adc
dec
lock
imul
sbb
and
in
push
jbe
leave
xor
or
or
fs
jp
outsb
bound
rorl
inc
sub
dec
popf
rolb
sub
fmul
and
adc
adc
pushf
xchg
subb
mov
cmp
ljmp
cmp
lock
lds
xchg
fstpl
rorb
mov
out
js
stos
sub
jle
sub
aaa
into
dec
cli
out
popa
push
stc
inc
mov
insl
xor
shll
aad
frstor
mov
sbb
outsb
pusha
daa
hlt
mov
add
cmpsb
addr16
mov
cmpsb
push
mov
lock
nop
dec
imul
xchg
and
and
leave
movsb
iret
mov
xchg
adcb
sar
dec
push
add
test
cmc
lahf
cs
xchg
sub
fwait
stos
xor
lret
and
push
jmp
dec
adc
mov
mov
mov
adc
sbb
pop
in
inc
icebp
cmc
mov
mov
pusha
mov
push
rcll
xchg
nop
lret
and
adc
mov
ret
jae
cld
push
add
lods
push
and
jne
cmp
aaa
stc
loopne
or
dec
push
push
mov
xchg
push
xchg
pushf
mov
int
fcmovb
dec
into
jp
adc
clc
mov
fisttpl
xchg
int
xor
or
stc
lret
ja
into
xchg
iret
fisubrl
ss
insl
js
shrb
in
enter
rolb
push
push
pop
into
xor
popa
inc
xor
pop
repz
pop
jg
or
cmpsb
je
mov
cmp
cld
fmull
bound
std
or
xchg
and
popf
jns
bound
leave
stos
insl
jns
aad
adc
arpl
inc
cwtl
mov
dec
insl
mov
sbb
aad
push
fsub
lds
imul
xchg
idivb
push
push
cmpb
int3
mov
mov
stos
int
sub
jl
adc
cmp
push
add
jl
push
jns
dec
loopne
movsl
inc
or
out
popa
outsl
insb
fndisi(8087
mov
clc
cli
sbb
push
js
test
dec
push
xchg
xor
loop
fnstenvs
ss
sarb
push
out
mov
jle
cld
jmp
movsb
cld
push
sbb
mov
bound
sub
xchg
in
and
fldenv
inc
mov
movsl
or
fadds
int
mov
jl
cli
insb
inc
das
pushf
add
sbb
xchg
repnz
leave
insl
mov
jge
fs
push
subl
adc
shrl
adc
or
cmpsb
adc
cmp
cmp
dec
lret
test
dec
incl
jl
ss
scas
pop
or
mov
das
pop
dec
xchg
mov
icebp
mov
xchg
inc
mov
scas
call
mov
xchg
push
jle
rcr
mov
adc
loope
add
dec
fdivrl
hlt
sub
push
adc
xrelease
cmp
adc
rolb
dec
aaa
and
insb
rclb
mov
push
jo
sbb
in
in
cmc
xor
int
jno
sub
jae
movsl
add
push
cmp
or
fstp
jae
sarb
lea
mov
andb
or
shl
pop
adc
and
dec
sub
mov
out
leave
notb
fmulp
imull
push
pop
inc
jmp
jp
add
push
aam
in
inc
fnstcw
movsl
loope
je
cmc
lods
jmp
mov
cmp
sbb
cwtl
jge
stc
andl
or
pop
sub
adc
xchg
adc
rorl
das
or
add
cltd
xlat
lods
imul
negl
cmpsb
lret
push
test
subb
and
pop
pop
and
stos
data16
scas
xchg
stc
into
push
ret
mov
dec
scas
jge
test
or
adc
xchg
jge
mov
sbb
cmp
push
jns
and
adc
xchg
add
test
sbb
pushf
sub
fimuls
in
ds
add
les
cmc
inc
add
and
push
loop
fimull
sub
ficoms
push
aaa
std
repz
xlat
shrl
lea
repz
add
shrb
bound
arpl
xor
cmc
pop
sub
inc
and
nop
cltd
cwtl
jge
cmc
mov
clc
scas
adc
psubusb
adc
fstpl
gs
mov
addr16
mov
cmp
jae
outsb
inc
cmp
arpl
aas
add
inc
sub
fiadds
fcomip
hlt
sbb
and
clc
aas
lret
pop
insl
in
mov
rcrl
pop
lods
inc
aam
std
ljmp
lret
in
jnp
loopne
cmp
adc
pop
push
adc
repz
enter
xchg
add
iret
cld
mov
aas
insb
mov
je
gs
dec
lods
sbb
cltd
dec
aam
mov
es
mov
iret
ss
sub
push
jae
mov
and
insl
movsb
push
pop
mov
out
dec
cmp
pop
push
leave
jne
jb
movsl
daa
imul
add
les
sarb
mov
cmpsl
push
pop
loope
inc
xchg
icebp
bound
jecxz
lret
fxch
mov
sub
pusha
jae
dec
push
aam
adc
jge
imul
inc
push
mov
data16
mov
adc
fwait
aas
mov
xor
dec
push
mov
sbb
xchg
ja
aad
loopne
mov
mov
and
or
push
loope
dec
and
lcall
lods
ljmp
mov
mov
pushf
jle
push
int3
adc
xor
add
mov
pop
hlt
call
mov
ljmp
aaa
jno
hlt
mov
adc
xchg
cmp
xchg
outsb
mov
push
pusha
add
cli
mov
xor
insb
jmp
shlb
repnz
int3
das
or
pushf
inc
in
mov
cltd
jns
popf
push
ja
popf
loope
sub
mov
movsl
push
shl
xchg
mov
popf
pop
cli
cmpsl
repnz
pop
enter
sbb
iret
imul
fs
fs
daa
inc
adc
sti
mov
sub
add
call
imul
push
mov
jg
mov
mov
shrl
andb
outsl
or
pusha
pop
js
inc
popa
aaa
push
mov
mov
inc
icebp
rcl
mov
mov
lret
jmp
leave
jl
jno
and
jns
xlat
xor
mov
and
icebp
mov
data16
mov
ret
imul
dec
push
jmp
or
pop
rcrl
flds
xor
mov
cmp
xor
addr16
pop
sub
cwtl
test
lret
mov
stos
fistpll
in
xor
pop
or
mov
pop
stos
sbb
pushf
es
xchg
cmp
ss
lcall
mov
loop
lock
or
push
jle
out
sbb
popa
sbb
sub
sub
adc
pop
aaa
mov
cmp
or
adc
mov
orl
ss
and
mov
sub
lea
inc
sbb
jns
das
das
testb
pop
or
xchg
les
mov
js
repz
fsubp
loope
push
cmpsb
dec
jnp
push
hlt
mov
clc
fs
std
jmp
adc
or
ret
xor
testb
movsl
ret
lcall
xchg
int
sarl
loop
push
push
pusha
aaa
rcll
insb
cmp
mov
rolb
push
inc
ret
push
push
sbb
xor
pop
cltd
pop
xchg
push
mov
mov
fistps
mov
in
push
repnz
lds
push
ja
mov
sub
inc
push
stc
jo
fisttpl
jmp
dec
add
icebp
addr16
fcmovnb
fbld
sub
adc
mov
icebp
fcmovnbe
shll
repz
fistpll
js
mov
xchg
rorb
jno
xor
mov
push
leave
js
stos
dec
lahf
sub
lds
fildl
and
hlt
pop
ss
push
jo
jb
and
frstor
sbb
sub
jbe
rcll
sub
or
xchg
in
mov
loope
mov
push
es
adc
arpl
lods
sbb
incb
call
aaa
stos
test
and
jle
aaa
push
cmpsl
mov
inc
mov
in
jae
mov
pop
iret
inc
aam
jmp
cmpsb
pop
xchg
cmp
test
pusha
shlb
out
xchg
test
mov
mov
jmp
rcl
test
push
cmpsb
mov
cmp
mov
mov
and
cmp
pop
jae
or
cmp
or
xchg
jae
xchg
loopne
cld
subb
sub
cmp
lods
divb
jmp
mov
xchg
pusha
mov
pop
dec
xchg
icebp
stos
inc
cmp
jge
xchg
mov
sbb
lods
or
push
push
les
je
ret
add
pop
aas
bound
xchg
outsl
orb
outsb
shll
pop
notl
or
add
push
mov
jne
pusha
repnz
and
pop
iret
and
pop
dec
or
dec
fdivrs
pop
fildll
add
loope
dec
stos
sbb
pop
in
pop
orb
data16
pop
push
fists
and
into
dec
mov
cmp
scas
outsb
jnp
push
cmp
les
xchg
or
pusha
icebp
mov
mov
ret
rcll
dec
stc
add
cmp
mov
mov
fnstsw
adc
sub
adc
arpl
lret
aaa
push
sub
cmc
pop
rcrb
and
xchg
in
sbb
je
in
int3
lea
stc
add
je
mov
cmc
xchg
int3
roll
stos
xlat
les
fbld
and
or
xchg
sbb
jnp
mov
sti
arpl
mov
stc
mov
mov
pusha
fwait
test
jmp
mov
dec
add
enter
ret
mov
xor
mov
inc
or
leave
sbb
ljmp
pop
cmp
fsubl
and
push
subb
mov
vmovaps
in
loope
outsb
js
xchg
pop
jae
mov
mov
test
mov
hlt
icebp
sub
sahf
adc
jns
orb
jp
movsb
movsl
jle
and
or
pop
daa
mov
lods
xor
lea
ror
decb
scas
shl
xlat
sbb
ljmp
rcrl
sbb
cmp
fisubl
mov
std
out
mov
sbb
outsl
add
mov
in
and
push
adc
sub
cwtl
sbb
cwtl
fadds
sbb
mov
add
push
push
and
mov
jp
mov
ljmp
int
jle
and
pop
test
dec
rcll
mov
mull
cmp
ds
sbb
jl
push
jo
jg
imulb
lock
sbb
inc
je
or
sub
ret
cmp
adc
dec
dec
invd
mov
mov
xchg
jp
jo
js
inc
mov
pinsrw
icebp
dec
inc
js
fisubl
dec
pop
sub
cmp
in
add
mov
shrl
jns
imull
lods
jge
mov
ficomps
ja
imul
cs
pop
mov
andl
add
xlat
dec
inc
xchg
sahf
lds
fmulp
fmull
cmpsb
xor
inc
imull
inc
push
jns
repnz
dec
adc
mov
and
push
scas
mov
pop
mov
call
dec
stos
dec
sbb
into
jg
loopne
fdivs
int
arpl
adc
mov
js
jo
into
xor
mov
movsl
adc
push
mov
jno
lret
lret
nop
lea
jmp
mov
mov
inc
mov
int3
push
and
out
jmp
insl
aam
paddb
and
pop
xor
iret
incb
stos
dec
cs
jl
js
mov
ret
dec
rcr
sbbb
mov
pop
cmp
in
jo
or
je
mov
push
push
inc
mov
cmp
in
and
shlb
lahf
iret
fldl
jp
xor
jo
mov
cmp
push
mov
cmp
push
sub
addr16
call
dec
clc
sbb
fists
inc
xlat
jno
jecxz
mov
in
xor
cmc
xchg
stos
nop
pop
fwait
sub
add
fnstsw
bound
ja
repz
and
insb
js
notb
add
lea
sbb
jb
in
pushf
ds
push
shlb
dec
pop
sahf
fnstsw
loopne
inc
dec
sbb
or
dec
test
adc
push
addr16
mov
sbb
dec
or
lahf
cmp
xor
mov
testb
aas
dec
outsb
fdivr
mov
jo
arpl
adc
sbb
cli
cld
int3
movsl
cmp
inc
mov
out
mov
pop
or
in
cmp
xor
test
fldenv
mov
push
fcompl
mov
int
fstp
sub
dec
lock
test
addb
mov
test
sti
inc
adcl
movsl
push
stos
mov
push
dec
gs
sub
push
jl
xchg
or
sahf
adc
push
mov
in
jle
xor
xor
sbb
mov
mov
mov
and
pop
arpl
mov
and
dec
test
push
imul
mov
sbb
add
adc
ljmp
in
aas
ret
cmp
sub
cmp
mov
lret
push
add
fcoml
xchg
hlt
xchg
out
cmpsl
mov
xor
adc
lea
mov
jo
inc
lock
rcrl
sub
es
data16
ja
jmp
mov
inc
mov
sub
pop
xchg
dec
adc
popl
jnp
jne
packssdw
push
xchg
imul
and
aam
xchg
add
in
pop
cwtl
mov
cmpsb
and
xchg
cmp
testl
sub
mov
jl
and
push
mov
and
mov
inc
xchg
maxps
ss
lret
xchg
iret
call
aas
jle
dec
cs
out
jno
scas
mov
das
inc
or
ret
fsubl
jg
ljmp
sti
xchg
dec
sub
loop
in
shl
cmpsl
cmc
and
or
in
pop
mov
and
xor
adc
ss
stos
mov
pop
iret
fnstenv
mov
xchg
lahf
lods
pop
test
jo
ret
mov
lcall
push
xor
or
sub
lock
repz
fisttpl
fldcw
loop
js
stos
mov
jge
jl
movsl
xchg
mov
mov
push
in
adc
jmp
xchg
test
subb
into
setl
push
into
dec
mov
jmp
bound
fdivs
lds
sub
xor
pop
loope
xor
lret
sub
inc
xchg
push
fsubrp
stos
out
add
or
mov
in
cld
mov
mov
lods
je
lahf
sbb
add
hlt
jmp
sbb
inc
jbe
cmc
cmp
xchg
movsl
and
int
jbe
lret
cmp
cmpsb
in
stos
out
mov
enter
push
jb
out
sub
rcr
mov
daa
cli
mov
jge
lods
shlb
jb
xchg
inc
in
and
sbb
xchg
adc
ja
inc
addr16
sti
je
and
add
and
jle
mov
push
push
pop
mov
xor
stc
scas
rolb
lds
inc
nop
iret
lret
cs
fwait
pop
push
out
sahf
pop
mov
sub
add
xor
mov
xchg
inc
xchg
push
and
cmp
dec
mov
dec
aas
xor
lret
sti
mov
jg
jecxz
adc
pop
je
sbb
adc
dec
aad
xor
lcall
gs
cmp
or
sti
cmp
pop
stos
mov
insl
xchg
in
addl
jecxz
mov
pusha
icebp
jmp
sbbb
int3
jg
scas
out
mov
pop
dec
xchg
outsl
mov
adc
mov
imul
dec
mov
je
add
jl
cltd
adc
aaa
jmp
jp
jmp
mov
dec
mov
adc
push
test
push
lret
jo
xor
into
add
jbe
jg
adc
inc
repnz
mov
ret
int3
and
insb
in
mov
cmc
fdivrl
or
fwait
dec
into
mov
or
cs
inc
cltd
sbb
ds
nop
dec
fstp
stc
cltd
xchg
and
mov
dec
adc
fisubl
or
adc
std
outsl
movzbl
mov
aam
lea
inc
push
push
cli
popa
dec
dec
stos
pop
ss
add
inc
dec
rcll
cmpl
sarl
pop
ret
enter
xor
pop
dec
or
jne
cwtl
cli
inc
pmullw
fistpll
aam
push
cmp
mov
out
loopne
xor
loope
adc
pop
pushl
fsubl
pushf
or
sbb
bound
adc
mov
sbb
cmp
sub
testl
jmp
xor
jp
push
jp
inc
xor
sbb
and
or
mov
sbb
fsts
xchg
lahf
and
loopne
xor
addl
and
dec
push
pop
mov
inc
stos
in
sub
add
mov
das
xchg
mov
mov
and
stc
jno
pushf
dec
scas
lret
ljmp
and
imul
xchg
push
cmp
pop
push
dec
adc
outsl
negb
lods
int
iret
addl
cwtl
jl
movsl
pushf
dec
mov
and
test
jne
dec
jle
xchg
mov
cmpsb
xchg
pop
das
mov
clc
daa
mov
adc
subb
clc
pusha
enter
push
mov
pop
lods
jl
fwait
inc
cmp
sub
mov
pushf
xlat
cli
lods
popl
cmp
sbb
aad
bound
jmp
pop
movsb
cmp
push
mov
dec
push
repnz
inc
mov
push
mov
sub
ss
push
pop
sbb
stos
lods
hlt
and
lods
mov
cmp
icebp
stc
fwait
sti
sarb
xchg
sbb
repnz
xor
sbb
jp
jne
cmp
fmuls
mov
ret
push
add
push
imul
aam
daa
rclb
pop
inc
scas
push
jecxz
pop
insb
sbb
stos
aad
sub
iret
push
cwtl
dec
pop
and
xchg
ja
mov
stos
jp
testb
xchg
test
out
lcall
add
inc
aas
int3
adc
imul
gs
test
call
gs
jne
jmp
sub
call
movsl
ret
pop
jno
loope
std
dec
jae
xchg
push
sti
add
push
mov
push
jbe
mov
push
push
mov
adc
test
inc
ss
add
mov
adc
jns
jle
dec
jb
jae
xchg
adc
into
loope
cmp
push
pushf
inc
jmp
insl
out
lods
scas
pushf
pop
mov
inc
repz
mov
call
fs
lds
xor
scas
repz
stc
mov
jg
add
jb
push
dec
ds
ret
sub
jae
xor
inc
sub
outsb
pop
fmulp
sub
adc
lods
dec
arpl
sbb
jo
mov
cltd
sub
jns
lea
or
ss
add
cs
jle
mov
mov
and
cmpsb
stc
ds
or
out
xlat
lahf
sbb
shlb
adc
pop
adc
sbb
rcr
jns
dec
pop
adc
cmpsb
mov
rcrl
mov
mov
lret
lods
xchg
in
cwtl
and
movsl
mov
in
xor
dec
sbb
dec
fmuls
cmp
push
xchg
mov
pop
dec
es
and
xchg
es
std
fwait
ds
dec
pushf
inc
pop
fs
or
sbb
pop
or
dec
cmp
movsl
loopne
sarl
por
add
jp
sub
mov
shrl
mov
dec
jecxz
and
sahf
xchg
stos
fcoml
pop
jbe
mov
enter
jecxz
push
xor
in
add
fcoms
mov
xor
inc
cmp
pop
or
lds
and
test
cmpsl
lahf
addb
xchg
sbb
mov
lds
cld
sbb
mov
imul
and
xor
xlat
adc
mov
out
aaa
lahf
push
insb
mov
or
fsubl
orl
aas
xor
lods
in
out
stos
dec
jno
imul
dec
pop
push
test
dec
movsb
fst
flds
adcl
arpl
outsb
cmpsb
mov
sub
pop
push
imul
fcomi
subb
mov
push
push
jbe
or
mov
out
fadds
dec
shlb
bnd
ret
push
cltd
adc
add
gs
js
jnp
popf
repnz
ss
loop
imul
sub
dec
pop
clc
cld
push
xor
xor
sahf
fistl
or
fdivrp
enter
fwait
inc
mov
das
cmp
mull
sarb
sbb
out
pop
dec
add
push
addr16
int3
testb
and
dec
mov
xchg
outsb
lcall
movsl
dec
mov
mov
xchg
pusha
imul
mov
sahf
sbb
lods
cmc
js
popf
jge
pusha
mov
cli
stos
lods
js
xchg
shrb
aas
mov
and
cmp
xor
or
repz
dec
or
fs
nop
jle
dec
lret
dec
fidivrl
clc
or
sbb
mov
out
cmp
pop
push
loop
push
push
fwait
out
ss
ffree
lret
jle
add
pop
jle
ret
enter
cmp
test
das
in
je
repz
sbb
jns
xchg
pop
imul
sbb
push
fwait
sub
fs
jb
inc
mov
negl
xchg
inc
mov
xor
or
lcall
pushw
sbb
cmpsb
pop
and
fwait
hlt
lcall
xor
mov
jb
ja
rolb
icebp
rolb
adc
ret
ds
dec
ret
mov
iret
outsb
fdivs
jne
mov
cmp
ret
adc
pop
scas
or
jge
pop
out
bound
xchg
imul
add
xor
add
pop
push
and
xchg
cli
sbb
outsb
mov
insl
mov
into
sahf
dec
push
push
sbb
adc
push
jb
fidivrl
icebp
cmp
or
insl
test
push
jae
mov
jl
jbe
rcrb
dec
or
cs
jb
fstpl
mov
cmp
push
hlt
movsb
mov
lahf
mov
add
inc
repz
or
cmpsl
and
fwait
dec
popa
icebp
dec
jnp
jl
adc
shr
inc
dec
sbb
jge,pt
hlt
ds
mov
xor
cwtl
leave
pop
cmp
pop
es
bound
mov
sbb
pop
and
repnz
rcrl
jne
adc
ret
icebp
addr16
jp
push
and
inc
xor
xor
lea
dec
mov
or
pop
mov
mov
and
xchg
xchg
leave
mov
test
add
test
mov
insl
test
push
les
jnp
xor
push
ljmp
repnz
xchg
inc
lcall
outsb
jae
cli
xchg
sbbb
xchg
jl
inc
cld
jmp
jae
jnp
pop
sub
or
adc
adc
fsubr
loopne
inc
fwait
push
in
insl
xchg
test
repz
push
shlb
mov
lret
add
sahf
clc
stos
sti
jns
sbbb
enter
lds
push
mov
lock
movsb
cmpsb
sbb
xor
add
adc
cwtl
call
ja
add
or
stos
mov
je
adc
and
sub
in
fwait
sar
mov
sbb
adc
jge
dec
popf
mov
gs
sbb
rorl
pop
push
jno
inc
outsl
mov
mov
loop
dec
arpl
mov
das
adc
xorl
lahf
ficoml
movsb
dec
outsb
pop
push
adc
xchg
cltd
mov
push
mov
clc
or
inc
sti
jmp
mov
inc
or
decl
sarl
cmp
movsb
push
andb
xchg
mov
pop
and
clc
mov
pop
sti
dec
sub
lahf
jge
xchg
add
dec
cmp
adc
xlat
pop
ds
sbb
mulb
pop
out
in
lock
in
mov
lcall
mov
ret
fcmovbe
add
xor
or
sbbl
aam
fs
pop
inc
mov
xchg
sti
movsl
movsl
jmp
cmc
or
add
xchg
xchg
add
test
inc
pop
push
es
stos
adc
mull
mov
jb
aaa
movsl
lcall
inc
push
int3
test
ss
in
jge
lods
outsl
mov
aaa
outsb
cmp
enter
movsl
mov
ljmp
outsb
cmp
fidivrl
aam
jp
test
icebp
inc
insl
cmp
ret
xorl
jmp
daa
cmc
and
and
mov
dec
push
dec
mov
arpl
jge
add
mov
aas
push
xchg
jg
sub
fcoml
sbb
clc
cmpl
in
outsb
mov
bound
sbb
fcmovnbe
mov
subl
jmp
pop
add
hlt
jbe
js
roll
add
cli
inc
out
pop
jo
fisubrs
les
stos
roll
cmpsl
test
daa
adc
add
mov
popf
push
inc
jle
data16
orb
cmpxchg
popa
hlt
iret
pop
pop
leave
sbb
negb
mov
sbb
lahf
jge
dec
hlt
fisttpll
xchg
xchg
xchg
push
int3
and
fmuls
xor
daa
xchg
cmpsl
add
sbb
rcrb
in
ret
inc
and
into
or
mov
notb
ficoml
es
lea
int3
outsb
pop
das
test
xlat
lret
cmpb
add
push
xchg
mov
jmp
jne
insl
hlt
loope,pt
movsl
mov
dec
mov
mov
jno
jb
adc
je
movl
mov
xchg
mov
scas
and
fbstp
in
insl
test
lock
jne
insb
lea
mov
jl
es
lods
pusha
lock
mov
cmpsb
jmp
fwait
loope
jb
xchg
stos
jl
add
rcl
jecxz
push
sbb
xchg
repz
fisttpl
lahf
mov
ds
mov
mov
out
loop
cmp
sub
mov
add
mov
xchg
stos
lods
bound
repnz
and
dec
sub
inc
push
pop
cmp
aas
sub
dec
cwtl
mov
shrb
shll
lock
dec
insb
fmuls
mov
push
inc
and
inc
dec
fbld
das
test
fisubs
push
dec
pop
loope
sbb
iret
cs
xchg
pop
shrb
mov
cltd
mov
iret
dec
dec
or
in
sub
push
or
add
pop
and
xor
fisubs
pop
add
jecxz
hlt
into
sbb
rorb
imul
xchg
mov
cmpsb
out
mov
cwtl
mov
rcrl
mov
ret
add
out
fldt
adc
xlat
pop
cmpb
arpl
mov
jno
dec
sbb
movsl
int3
imul
and
sub
mov
gs
jae
ja
jno
xchg
dec
fsub
sbb
xor
jg
rorl
fstpt
xchg
pop
loop
adc
dec
sub
icebp
inc
icebp
jg
adc
stc
scas
mov
iret
xchg
dec
fcom
sub
mov
jmp
ds
test
jo
push
repz
int
lods
mov
imul
daa
jnp
xchg
test
lcall
fildl
cmp
lea
inc
pop
jecxz
incl
sti
scas
adc
les
sbb
push
jmp
pop
in
jbe
out
mov
jmp
adc
rorb
test
add
sub
xchg
xor
in
sbb
decl
xchg
test
sub
push
pop
in
mov
cmpsl
movsl
mov
pop
es
test
bound
ret
lret
adc
in
iret
cmp
sub
je
fistpl
aaa
dec
orb
adc
adc
sbb
es
in
ret
mov
cltd
arpl
push
bound
inc
popf
mov
xor
or
bound
fidivs
or
iret
enter
or
pop
xchg
test
mov
out
xchg
push
inc
mov
daa
lods
add
movsb
test
and
mov
out
mov
dec
ficompl
sub
jnp
pop
xchg
add
cmc
or
dec
adc
out
cmp
or
cli
addr16
xlat
sahf
mov
mov
fs
sahf
inc
inc
mov
popf
arpl
mov
mov
stc
xchg
mov
and
jmp
mov
and
mov
fcoml
ja
mov
iret
inc
push
cmp
bnd
and
lock
sbb
ds
leave
mov
sbb
cmp
sub
jb
fs
lock
push
pop
push
mov
pop
lods
insb
add
lret
push
into
adc
and
inc
stos
pop
outsl
pop
fidivrs
dec
in
imul
jae
cld
dec
cmp
pop
fcom
xor
loop
inc
pop
jle
xchg
aas
or
addr16
icebp
cmc
xor
cmp
adc
jb
nop
mov
sub
xor
jle
mov
sbb
jbe
jge
fsubp
mov
push
repz
mov
xchg
mov
xor
xor
rcrb
xchg
test
xchg
xor
cwtl
xor
icebp
jnp
aaa
daa
jne
mov
dec
popa
repnz
pop
pop
and
jne
inc
cs
jmp
fiadds
sub
lahf
adc
jl
push
outsb
or
or
jl
pop
sbb
data16
shl
lods
mov
add
sub
in
sbb
lock
add
in
jne
xchg
sti
xchg
sbb
clc
dec
icebp
inc
pop
push
stos
mov
dec
add
fs
or
pop
pusha
leave
inc
ljmp
cmpsb
add
sub
ret
mov
xor
xchg
add
pop
jle
and
in
cmc
push
fldl
push
pop
insb
nop
sti
dec
scas
icebp
sub
or
popf
mov
mov
cli
lret
neg
int
nop
sahf
sbb
sbb
es
mov
fldcw
adc
cmp
sub
aas
out
or
mov
cmc
and
push
cmc
cmp
aas
mov
lret
js
pop
dec
mov
insb
xor
dec
push
and
xor
jno
xor
or
sub
sarl
repz
ss
mov
xorb
out
fstpt
mov
divb
int
add
lret
xlat
repnz
lahf
mov
pop
adc
imul
sub
jge
dec
dec
push
push
jmp
mov
mov
aas
push
mov
lcall
mov
fidivrs
or
nop
mov
mov
lods
dec
and
adc
inc
fsubr
or
xchg
sub
mull
sub
dec
cmpsl
data16
iret
xchg
jmp
cmp
nop
out
mov
lahf
sbb
or
sub
mov
add
jge
movsl
push
cltd
movsb
cmp
sbb
out
popf
pop
fwait
pop
cmp
inc
cmp
jae
mov
iret
adcl
or
sub
pop
gs
cs
jo
jp
xchg
jae
pop
jns
pop
stos
sbb
insb
xor
es
push
jge
cmpsb
sub
pop
mov
xor
push
fwait
jmp
fiaddl
test
jge
bsr
jo
add
int3
sub
test
pop
cld
cli
hlt
xor
das
pop
test
mov
xchg
sbb
xor
jnp
pop
jno
test
cmp
cli
hlt
cs
mov
shrb
pop
cmp
lock
ds
enter
sub
inc
ss
fdivs
mov
dec
imul
adc
popf
jnp
les
sub
mov
pop
mov
fucom
mov
or
add
sub
daa
sbb
add
fs
push
fs
lret
into
movsw
and
mov
mov
xor
mov
jne
jl
adc
push
pop
inc
inc
sahf
arpl
lcall
or
sbb
add
and
ja
xor
or
mov
and
cmc
fstps
je
jns
pusha
ret
data16
xor
and
and
lahf
stos
fwait
xchg
fstpt
out
outsl
and
push
mov
sarb
jnp
cltd
shlb
frstor
xlat
mov
cmp
xchg
out
mov
std
loop
gs
bnd
fisubs
fiaddl
js
jp
inc
testb
mov
add
jmp
jns
test
roll
add
cwtl
sub
repnz
imul
dec
inc
inc
test
test
jp
js
es
mov
xor
cmp
mov
sbb
or
inc
sub
fdivrs
push
sbb
test
jg
or
adc
adc
mov
cli
jp
inc
call
jg
shrl
xchg
jp
test
in
mov
cmp
dec
sbb
add
ljmp
jo
push
or
fidivl
int
mov
cmc
pop
lcall
adc
sub
xchg
shll
and
push
pop
mov
cmp
jne
rolb
in
pop
insl
cmpsl
inc
jmp
inc
xor
push
hlt
add
push
clc
cmp
xchg
icebp
ja
adc
or
mov
cmp
rcrb
jne
inc
sub
mov
jno
sbb
dec
pop
out
add
xor
subb
or
or
clc
inc
push
je
cmpsl
clc
dec
arpl
cli
mov
insb
add
push
loop
jp
inc
hlt
xor
adc
xchg
idiv
loopne
pop
loop
cmp
test
and
pop
and
push
test
dec
jne
or
and
rolb
std
inc
loope
mov
ret
xchg
lds
cld
das
pop
sarb
inc
cmp
jae
push
sub
xchg
out
push
cs
and
fdivrp
sub
jb
jle
xor
icebp
pop
xchg
les
lods
repz
inc
ffreep
adc
insl
fimuls
pop
jb
inc
fistpl
cmp
push
push
add
lret
inc
ret
jno
loopne
add
push
inc
in
aas
cmp
in
fs
pop
jo
add
and
clc
mov
ss
xor
movsl
mov
sub
adc
cmpsl
addr16
jmp
outsb
popa
fdivs
dec
xchg
data16
jmp
mov
xchg
push
xchg
lret
outsl
call
sub
add
add
push
clc
push
lock
jae
movsb
dec
adc
jmp
mov
cld
inc
cmpsl
mov
push
je
in
mov
jl
je
mov
dec
stos
lahf
mov
or
pop
add
dec
data16
xor
insb
aaa
icebp
jg
xchg
pop
jb
pop
scas
jle
data16
icebp
inc
ror
arpl
jo
sbb
pop
rcrl
pop
rcl
pop
insb
dec
pop
jno
stos
loop
lret
clc
push
pop
push
loopw
enter
rcr
mov
and
sti
cli
jge
mov
inc
sub
movsb
mov
jp
notb
loop
je
adc
out
jbe
jg
mov
mov
xor
xchg
cwtl
xchg
push
test
hlt
and
dec
lock
dec
rcrl
and
push
jnp
sbb
pop
sbb
pop
or
xor
dec
push
xchg
test
loop
add
xchg
mov
inc
add
aam
vldmxcsr
cmpsl
push
xchg
sahf
outsb
out
xchg
sub
dec
out
mov
pop
mov
or
cmp
push
jb
cmovae
stos
adcb
sub
cs
add
pop
adc
dec
push
mov
nop
mov
test
mov
xchg
pop
xchg
xorl
mov
stos
loop
stos
mov
jg
roll
add
push
rolb
xor
cmp
jb
sti
shlb
jle
movsb
or
add
push
inc
push
mov
scas
mov
mov
fwait
mov
cmp
xor
mov
out
xchg
es
aad
outsl
mov
cmp
jne
pop
arpl
adcl
jae
push
xor
xor
mov
in
inc
lcall
inc
add
repz
shr
mov
fidivs
rcll
inc
xor
pop
fmull
cmpsb
jecxz
jmp
test
mov
mov
add
sbb
adc
inc
enter
addr16
dec
cmpsl
ret
sub
pop
jne
jp
mov
je
jae
add
movsb
cld
pop
sub
dec
test
inc
shl
lock
add
lods
xchg
adc
sub
xchg
fisttps
shll
xchg
push
xor
fstl
adc
xor
pop
xchg
pop
ja
imulb
fimull
scas
pop
pop
push
outsb
scas
sbb
or
push
fdivl
push
rol
pop
int
jg
mov
add
dec
loope
loop
xchg
jg
call
imull
rorb
jo
aas
push
ja
nop
dec
lds
fmull
add
imul
leave
pshufw
pusha
xor
sub
out
enter
xlat
mov
fstp
aad
lea
insl
mov
adc
or
mov
imul
mov
dec
fxch
das
ret
ljmp
sahf
jb
mov
popf
mov
outsl
pop
push
sarl
adc
ret
dec
mov
and
xchg
xchg
sbb
mov
outsl
dec
xchg
mov
adc
pop
add
loope
push
mov
stc
adc
outsb
shl
inc
aad
movsl
add
out
out
lea
test
mov
cli
mov
scas
insl
mov
cmpsl
fcompl
addr16
ja
pushf
mov
imul
sarl
in
cld
push
fadds
and
sbb
mov
cmpsl
push
push
insl
outsb
mov
xchg
mov
jle
mov
xchg
add
ret
mov
mov
ficompl
inc
adc
adc
out
dec
scas
cmp
xor
push
mov
jle
enter
data16
mov
push
inc
dec
scas
inc
mov
pop
xchg
xor
push
std
pushf
fs
add
cli
adc
lahf
ret
jmp
iret
aam
fcompl
fidivrl
and
pop
dec
insl
ret
mov
inc
inc
fs
adc
into
pop
mov
pop
js
mov
jg
push
mov
leave
sbbl
jne
sbb
mov
jbe
xchg
icebp
shl
das
sbb
addr16
cld
push
ja
jle
outsb
jnp
adcl
mov
ret
add
jne
pop
jb
out
xchg
cmp
frstor
xchg
inc
cmp
adc
lret
bound
out
arpl
std
mov
fisttpl
or
cmpsl
js
call
mov
ret
shll
mov
sub
xor
sbb
push
decl
lods
jmp
or
mov
sub
test
je
cmpl
lods
scas
mov
std
lret
xchg
cmp
repnz
test
sub
sub
and
dec
adc
and
sbbl
ljmp
xchg
ljmp
data16
mov
ficoms
push
push
xchg
les
mov
loop
cs
lret
out
jns
cli
xchg
imul
or
xchg
call
pop
aas
frstor
mov
pop
push
push
out
inc
daa
sub
sti
daa
lea
lds
scas
ss
lds
mov
pop
xchg
jbe
adc
and
and
jnp
xor
icebp
test
or
mov
shlb
je
lahf
addr16
imul
mov
cltd
loope
leave
and
testl
rcrl
xchg
es
dec
arpl
xor
pop
pushf
outsb
rcll
in
sub
or
into
dec
adc
pop
fsubs
inc
mulb
insb
loopne
add
inc
cmp
sbb
pop
push
adc
test
sub
xchg
mov
pop
or
dec
mov
cmp
aas
int3
pop
ret
cmp
sub
or
insl
scas
call
mov
xchg
icebp
leave
sub
mov
call
push
jge
in
mov
sahf
gs
add
mov
dec
test
adc
mov
sbb
and
in
iret
or
lea
xor
xchg
ficomps
add
mov
xchg
add
jecxz
mov
sub
cmpsb
adc
sub
jbe
push
imul
aad
add
stos
imul
adcb
stos
xorl
outsb
mov
adc
push
out
es
ret
adc
adc
cmc
repnz
jne
mov
andl
dec
insl
stos
call
leave
ss
mov
cli
inc
movsl
cmpb
mov
or
cli
xor
mov
cmp
int
aad
fsqrt
stc
fimuls
adc
or
rcrl
and
test
or
leave
adc
xchg
adc
xchg
daa
aas
fwait
sti
popa
inc
push
repz
int3
inc
mov
lds
xchg
jg
data16
fcoml
push
inc
test
faddp
dec
push
leave
fsts
enter
or
inc
sbb
pusha
or
xchg
scas
fiadds
and
mov
loop
mov
outsl
jg
outsl
sar
xor
imul
lret
adc
and
jg
adc
inc
pop
daa
push
add
lret
shl
mov
jge
or
mov
subb
sbb
mov
cmp
sar
sahf
and
sbb
shrb
loope
icebp
in
adc
lock
lcall
jg
ret
cmp
ja
sbb
testl
bound
inc
fwait
or
or
daa
stos
jb
es
faddl
mov
mov
and
push
jecxz
xchg
push
add
cmp
fistl
dec
xchg
mulps
adcb
and
rorl
jnp
jns
pop
xor
inc
test
hlt
dec
pop
pop
mov
fisubl
xchg
cmpsb
clc
aaa
popf
fwait
mov
stos
int3
scas
mov
or
mov
dec
xlat
jmp
push
hlt
rcl
cwtl
push
cmp
adc
lods
ja
mov
push
repnz
push
xchg
mov
imul
cld
mov
sbb
xor
mull
or
pop
mov
add
adc
jns
js
mov
pop
imul
cltd
mov
sub
mov
jle
cmp
xor
push
dec
or
out
and
push
or
loope
div
cwtl
pop
rcrl
sarl
inc
mov
rcl
push
bound
and
sarb
cmp
push
insl
test
add
cmp
pushf
test
push
sti
jo
mov
mov
push
sbb
push
inc
mov
cmp
xchg
cmc
movsb
popa
clc
fucomp
stc
pop
sarl
pop
dec
fistpl
in
or
cwtl
sbb
cs
sahf
call
adc
adc
jl
test
frstor
mov
aam
sub
adc
imul
out
loope
and
call
ret
and
sub
mov
lods
out
xchg
push
or
xor
inc
cld
ret
jge,pn
in
test
inc
adc
adc
cmp
jge
add
add
outsl
jno
ss
mov
mov
loop
sbb
xchg
cmp
lea
scas
in
mov
xor
jno
sub
sub
in
or
lock
push
dec
pop
xchg
add
mov
jne
add
rcl
cmpsb
ret
fstps
and
add
aad
mov
mov
adc
pusha
pop
loope
pop
imul
jb
cs
xor
jns
or
mov
rclb
and
out
sbb
mov
fdivrp
aaa
add
outsl
dec
sub
xchg
fildl
lahf
pop
and
push
sub
pop
cld
in
fxtract
cmp
sbbl
jne
lods
jecxz
mov
add
dec
in
arpl
rcll
xchg
aaa
pop
into
stos
jns
into
inc
adc
es
mov
pop
cmp
cli
push
xor
mov
xor
push
xlat
popf
or
scas
pop
das
arpl
repz
insb
sbbl
mov
int3
pop
sahf
fs
mov
pop
cmp
lret
push
lds
loopne
lods
mov
movsl
pop
int3
fcom
inc
scas
inc
push
testb
adc
repnz
push
aam
fistl
xchg
sti
add
xadd
mov
sbb
hlt
pop
push
in
orb
add
dec
push
sbb
inc
mov
jns
push
push
and
fadds
mov
int
push
fstl
leave
int3
ja
rol
mov
fs
cmp
dec
mov
mov
sub
mov
leave
fcmovnu
push
mov
and
xor
push
adc
inc
ja
or
and
dec
loope
cmp
or
ds
inc
data16
lods
adc
loope
push
or
int3
shr
ret
and
push
and
out
mov
outsb
ds
es
mov
dec
jae
push
and
inc
inc
jl
shlb
idivb
xor
xchg
add
fsubl
mov
fisubs
lcall
outsl
adc
aam
add
or
cwtl
data16
jns
add
leave
dec
push
fmul
mov
in
xor
xchg
mov
or
sub
inc
nop
adc
fcmovb
stc
xor
cmp
xchg
movsl
mov
xor
lcall
or
sub
cmp
sbb
je
repz
pop
mov
adc
dec
sub
jle
push
mulb
and
roll
xor
fwait
cwtd
and
and
mov
jns
add
test
xchg
xor
stc
xchg
icebp
ss
arpl
test
lods
jg
cmp
mov
sbb
aad
cmp
pop
mov
jno
daa
xor
mov
mov
sub
push
mov
pop
push
sti
sbb
mov
iret
into
cmp
sbb
icebp
popf
pop
mov
test
frstor
adc
jp
pusha
mov
int
test
mov
stos
sub
pop
or
mov
nop
mov
xchg
mov
pop
je
and
aas
xchg
bound
lret
faddp
xchg
cmp
and
mov
pop
or
lea
mov
enter
adc
mov
iret
adc
out
ficompl
movsb
mov
push
dec
pusha
cs
inc
xor
fucom
adc
dec
cmp
add
cltd
data16
xor
adc
add
aad
sarb
or
test
mov
push
sub
or
sbb
cmp
lods
sahf
jb
xchg
mov
and
or
outsl
cmp
sbb
inc
add
add
lret
adc
mov
stos
mov
hlt
push
xlat
in
mov
cmp
mov
stos
sbb
out
mov
push
out
lock
mov
cmp
jbe
pushw
lret
leave
sub
out
jle
jae
out
in
dec
mov
pusha
xlat
arpl
mov
add
mov
mov
aas
hlt
pushf
pop
lock
sbbl
mov
mov
push
add
mov
add
les
ljmp
mov
xor
and
subl
loope
cmpsl
and
xchg
cmpsl
inc
cmpsb
jmp
dec
out
jb
loop
das
push
stos
inc
ret
lahf
push
cltd
movb
out
movsb
mov
addr16
fistps
jnp
das
sub
or
ljmp
pop
shll
pop
push
dec
movsl
fsubrs
pop
out
std
lods
mov
cmp
push
mov
mov
out
push
mov
push
push
popa
test
lock
adc
shll
es
jle
cltd
gs
call
jae
imul
add
test
and
negb
lods
rorb
mov
cmc
xor
imul
mov
loopne
ss
cltd
push
sub
out
cwtl
dec
or
test
adcb
aaa
inc
outsl
mov
mov
int3
sbb
xor
jne
fs
test
pusha
movsl
mov
sub
js
lahf
inc
daa
mov
jmp
ja
mov
cmp
mov
pop
dec
loope
adc
or
enter
jge
repz
rorb
xchg
js
push
inc
or
mov
das
lds
popl
cld
das
nop
insl
movsl
fmull
lahf
push
mov
sbb
mov
lods
in
movb
bound
inc
and
inc
push
and
sub
jns
push
es
sub
popf
test
dec
jecxz
andb
sbb
ljmp
pop
jno
dec
inc
mov
jns
inc
push
icebp
xchg
mov
dec
pop
ret
roll
lret
ficompl
pop
rolb
insb
lods
add
sbb
aas
shld
in
sbb
addl
les
or
jae
clc
mov
fbld
mov
mov
cmc
add
lods
push
xor
test
mov
icebp
stos
ss
pop
outsb
sbb
dec
movsl
jbe
sbb
imul
fidivs
jp
dec
iret
xchg
lock
pop
xor
idiv
mov
fimuls
jmp
cli
xchg
pop
sarb
test
nop
xor
fnstcw
gs
mov
int3
into
pop
xchg
pusha
xor
ja
sti
inc
inc
dec
cli
popa
addr16
mov
fidivl
or
dec
in
dec
icebp
sbb
fisubrs
jge
cmp
jns
inc
push
and
dec
jg
ljmp
sbb
sbb
outsl
xor
sti
adc
xchg
pop
roll
mov
xchg
push
add
mov
pop
push
jno
and
cwtl
lret
stos
rol
xor
scas
shrb
sbb
inc
xor
lock
hlt
lret
scas
jecxz
outsb
jne
xchg
cs
je
test
xchg
dec
inc
or
nop
dec
push
fwait
push
je
repnz
psrld
dec
xor
aad
add
xchg
stos
jo
hlt
mov
jnp
sub
scas
int3
inc
xchg
jge
jmp
fs
jo
cwtl
outsb
arpl
mov
push
sub
and
mov
out
aam
mov
xchg
add
cmp
stc
add
inc
jp
mov
lahf
mov
xchg
int3
adc
ljmp
pushf
jp
out
cmp
push
push
vpcmpgtw
xor
enter
clc
add
pop
push
insb
cli
test
add
jle
adc
mov
jae
mov
and
fst
hlt
enter
ret
xlat
sbb
mov
into
js
jae
xor
pop
lods
mov
jge
cmp
adc
inc
mov
out
mov
add
flds
sbb
add
or
into
xchg
imul
xchg
push
push
ds
fimuls
les
pop
and
add
push
push
ret
mov
xor
jg
xchg
adc
push
push
nop
je
xor
je
push
lods
in
xor
add
stos
or
scas
bswap
je
ljmp
aam
sbb
jno
mov
js
out
out
pop
mov
sub
sbb
cmpsl
int
je
mov
mov
gs
cmp
outsl
repnz
in
mov
adc
fsubrs
je
iret
mov
rcrl
pop
test
jle
mov
adc
imul
push
sbb
or
repz
adc
fsubrl
js
ret
xchg
in
mov
fs
push
pop
add
dec
mov
out
mov
and
mov
jmp
push
jno
aam
arpl
repnz
shlb
fstps
pop
rol
xchg
and
dec
and
aad
leave
push
push
andb
mov
add
mov
mov
inc
mov
loope
jb
dec
add
mov
xor
dec
dec
push
cmpb
xchg
sub
adc
xchg
pop
mov
push
jno
imul
sbb
jnp
leave
jnp
cmp
or
jge
or
es
lret
xor
inc
les
inc
rcrl
inc
lods
adcl
dec
dec
jae
ds
jo
les
addl
sbbl
fdivrp
inc
aad
mov
clc
xor
mov
aas
push
int3
xchg
mov
loopne
mov
sub
mov
pusha
dec
and
adc
pop
cmp
loope
inc
or
jb
test
push
les
iret
imull
shlb
into
xchg
and
jmp
cmpsb
popf
jl
out
repnz
movsl
lret
pop
pop
sbb
js
add
cmovle
addr16
xchg
xor
xchg
stos
stc
sbb
ret
push
ss
repnz
add
mov
and
loopne
popa
sub
out
aaa
sbb
ret
dec
mov
int3
loop
add
adc
scas
mov
in
pushfw
push
imul
xor
push
mov
js
std
jns
adc
adc
dec
es
imull
inc
out
or
leave
push
adc
mov
dec
sbb
jae
stos
and
std
xor
and
repz
repz
or
cmp
clc
inc
cld
jb
fldenv
incb
mov
pop
int
imul
xchg
sub
mov
aaa
pop
test
test
ja
mov
out
pop
cmp
xlat
inc
leave
and
lock
dec
mov
stos
dec
orb
add
xchg
push
cmp
push
push
cwtl
mov
jno
or
mov
pop
orl
repz
xchg
sbb
popf
insb
or
gs
in
jnp
mov
mov
or
jnp
mov
js
xor
sbb
sub
inc
sahf
scas
add
stos
adc
jmp
push
push
add
lock
mov
lock
mov
cmp
data16
jmp
data16
lret
xor
mov
cmpsb
mov
push
lds
pop
outsl
fmuls
idiv
jecxz
xlat
out
nop
push
sbb
jp
ds
addl
sub
stos
int
ret
idivl
lods
add
mov
cmpsb
fdivl
lret
sub
jbe
test
bound
jle
mov
add
jg
add
mov
es
mov
and
adcb
clc
xacquire
and
cmp
sub
pop
je
lods
jnp
adc
dec
scas
mov
pop
test
js
pop
sub
dec
xchg
xlat
xlat
mov
jb
fistpl
mov
aad
out
mov
mov
imul
pop
mov
and
or
cwtl
mov
sub
inc
mov
mov
in
popl
insb
fmuls
pop
push
add
sbb
lock
xchg
adc
pop
out
out
adc
imul
mov
pop
cld
push
or
push
mov
nop
push
cld
cld
add
inc
add
push
fists
cmpb
insb
jmp
or
cmc
inc
push
jbe
cmp
sub
adc
jb
andb
leave
cmpsl
pop
dec
pop
movsl
mov
adc
icebp
outsl
pop
cmp
xchg
push
pop
cmc
lds
into
adc
leave
mov
add
adc
and
filds
sub
lods
push
add
shrb
popf
cli
mov
dec
es
icebp
addl
sti
clc
repnz
xchg
inc
jae
inc
sub
mov
or
outsl
adc
scas
lret
inc
mov
dec
mov
stc
ficompl
dec
movsb
push
clc
xor
dec
mov
dec
hlt
push
fmull
lods
loope
outsb
lea
loop
fdivrl
xchg
xlat
ret
dec
lods
fbld
sbb
mov
pop
aas
and
xor
mov
subl
xlat
adc
adc
add
push
leave
cmp
push
in
push
sbb
inc
addr16
dec
adc
fidivl
sbb
mov
aas
ljmp
mov
aad
sbb
or
jo
sbb
and
xchg
pop
cmp
out
test
das
enter
insl
dec
pop
sbb
dec
mov
enter
lock
cltd
xor
test
lahf
in
dec
cpuid
sbb
adc
aam
mov
lcall
pop
cmp
pop
sub
pop
lret
mov
jecxz
leave
xchg
je
adc
cmpsb
outsb
or
std
mov
xchg
fisttpl
hlt
lock
idiv
mov
ja
popa
inc
pop
imul
xor
mov
arpl
inc
mov
mov
jle
pop
mov
push
inc
pop
mov
inc
sub
inc
cmp
add
mov
ret
rcr
insl
popf
mov
testb
lret
xor
mov
clc
mov
xchg
jle
pop
push
push
iret
sub
pop
add
cmp
xchg
out
rorl
or
jecxz
sub
xchg
dec
push
adc
out
cmp
cmpsb
nop
dec
ret
xchg
loope
inc
dec
sub
lcall
mov
lret
or
dec
mov
sub
or
jo
loop
xor
and
shrb
pop
sbb
push
mov
test
xchg
or
out
push
dec
jp,pt
fwait
push
add
ret
ljmp
icebp
arpl
and
sbb
mov
std
iret
outsb
addr16
push
mov
imul
fwait
push
xlat
aas
sar
lock
and
mov
mov
mov
jns
or
mov
xchg
mov
adc
jl
dec
pop
xchg
out
mov
shll
xchg
pop
addr16
std
enter
push
iret
sahf
inc
into
cmp
mov
loop
xor
fstpl
mov
adc
test
shlb
mov
mov
mov
fwait
inc
cwtl
test
xor
rcl
jb
mov
lret
mov
div
sub
imul
jb
out
mov
test
jecxz
imul
mov
js
outsb
cmp
and
adc
mov
repz
or
inc
sub
mov
jecxz
inc
pop
lock
cmp
dec
sub
mov
cltd
and
jge
mov
ljmp
adc
fsubs
adc
bound
push
pusha
lods
stc
inc
arpl
adc
stos
negl
loopne
cmc
jno
ret
stc
push
add
xchg
push
out
pushf
push
sarl
push
mov
stos
mov
push
inc
in
jle
testb
lahf
rcr
adc
rolb
insb
test
fsubrl
cmp
push
push
in
xchg
imul
addr16
mov
push
fincstp
aaa
jbe
scas
jno
dec
push
rcrl
mov
cld
mov
ret
sbb
xor
inc
mov
inc
mov
sbb
dec
jg
repz
or
mov
adc
jmp
shlb
cld
xchg
sub
pop
xor
ljmpw
test
jecxz
les
xchg
mov
cmp
imul
jecxz
sbb
add
xchg
xor
scas
insb
push
rolb
in
incb
cmp
lcall
sbb
and
stos
lret
sbbl
out
push
inc
aam
lcall
push
jg
mov
sub
mov
leave
mov
sub
mov
dec
jge
popa
or
jp
lahf
cmc
ljmp
decb
cmp
in
xchg
repz
sub
xor
mov
roll
sub
xchg
mov
cmp
repnz
shrb
xchg
inc
rcr
pop
sbb
add
jle
cwtl
xorl
xor
mov
test
ss
clc
mov
jecxz
mov
adc
in
mov
andl
cs
pusha
cmp
sbb
sti
aaa
xor
dec
bnd
mov
cmp
mov
stos
jbe
jmp
lods
dec
mov
jo
cwtl
jmp
jne
aas
das
or
mov
xchg
je
push
sub
inc
aam
inc
mov
mov
dec
sbb
cmc
add
ret
mov
adc
xor
inc
cld
pop
pop
in
arpl
mov
fdivrl
jns
push
mov
cwtl
sbb
sbb
ljmp
xor
cwtl
lods
mov
mov
jecxz
je
pop
jnp
ljmp
aam
mov
and
adc
shl
in
cli
mov
add
cmp
rcrl
in
xor
pop
les
push
sub
xor
mov
test
lret
mov
lods
cwtl
icebp
mov
jae
fwait
sub
test
ret
cs
jmp
outsl
mov
test
sbb
addps
mov
dec
mov
out
push
pop
icebp
dec
lods
inc
aas
cmp
jl
sub
xlat
mov
sub
aad
and
arpl
mov
sub
push
out
rorb
jnp
cli
cmp
jae
sub
inc
jg
mov
mov
mov
pop
out
pop
adc
jae
stc
loop
adc
movq
and
jl
lods
ret
fistl
sub
loope
ss
loope
dec
mov
loopne
xor
ds
icebp
pop
jbe
mov
sbb
sbb
xchg
push
sbb
xchg
loop
repz
fisubs
fnstsw
repnz
xor
mov
dec
scas
cld
push
ret
pop
ret
jg
test
mov
sub
jo
movb
mov
mov
aam
mov
xchg
call
cwtl
mov
xor
lea
add
jno
add
dec
lds
andb
push
scas
out
inc
in
xchg
xchg
mov
push
mov
xlat
pop
dec
ds
cmc
pop
xchg
aam
add
jno
dec
sub
and
mov
mov
or
cmp
and
xor
leave
xchg
into
cmp
mov
in
xor
jg
push
adc
mov
mulb
les
cmpsl
sbb
imul
insb
pop
lods
sbb
dec
jo
fisubs
mov
dec
add
aaa
shrl
push
xorl
jp
fisttpll
shl
cs
mov
out
mov
std
and
sbb
js
cmp
out
leave
and
mov
lock
mul
push
mov
dec
xor
push
sbb
jae
lods
xchg
scas
jno
xchg
push
movsl
call
jno
addr16
push
test
add
xor
dec
pop
pop
movsb
fnstenv
pushf
adc
aam
xchg
mov
test
daa
or
js,pt
daa
inc
xor
fnstcw
dec
mov
inc
mov
push
cmp
push
sbbb
push
pop
scas
leave
add
adc
in
mov
sbb
mov
hlt
mov
icebp
in
adc
sarb
lds
add
mov
lds
lods
pop
cmp
scas
scas
mov
or
stc
fldlg2
ficoml
and
pusha
inc
loope
sbb
mov
aam
add
test
bound
scas
aaa
aam
sbb
push
inc
pop
xchg
jns
lcall
les
mov
add
idivl
pusha
mov
cmc
jae
test
fldcw
daa
lahf
test
inc
or
add
test
xor
mov
js
lcall
lock
in
mov
movsl
lds
mov
loopne
inc
addr16
dec
jae
int
mov
fistl
fnstsw
movsl
icebp
aas
inc
lock
mov
mov
clc
dec
jecxz,pt
in
jne
loope
fisubrl
js
push
outsb
hlt
or
insb
jmp
iret
push
jne
das
or
ja
mov
out
lcall
mov
and
xchg
shll
pop
or
xlat
xor
repnz
jle
or
scas
mov
mov
lret
inc
jmp
sbb
cmpb
jmp
xchg
lahf
jmp
inc
and
sbb
cmp
sbb
leave
subb
cmp
cmp
push
push
mov
mov
mov
push
mov
and
mov
mov
inc
sub
sub
push
sbb
push
lock
jg
ficomps
outsb
push
aaa
and
pop
xchg
add
out
std
fsubrs
pop
mov
push
sub
sub
xchg
and
daa
popf
xchg
cmc
push
into
sub
ds
cmp
nop
imul
mov
inc
scas
daa
mov
sbb
xchg
pop
loop
test
sarb
mov
mov
push
and
scas
sub
sti
add
arpl
leave
push
movsb
xchg
jo
mov
in
mov
cld
adcb
mov
cmpsb
jg
aam
insb
adc
mov
nop
fiadds
es
sahf
lahf
push
aas
bnd
clc
cmp
inc
rcll
fadds
imull
jge
xorl
inc
fimuls
test
sbb
push
pusha
pop
sbb
mov
sub
pop
stos
add
xchg
mov
arpl
clc
jnp
xchg
je
lods
icebp
data16
aad
fpatan
inc
pusha
movsl
aas
lods
shrb
packssdw
or
mov
mov
adc
sub
pop
lret
mov
insl
fimuls
xchg
push
shr
mov
push
loope
sbb
adc
lods
fsub
cmpsb
mov
cli
and
mov
fwait
in
jp
and
xorb
aam
out
pop
inc
and
inc
cmc
imul
cmp
adc
in
in
lret
sub
xchg
cmp
fnsave
mov
lahf
loope
stos
push
out
cmp
ret
ds
xchg
idivl
inc
sbb
xor
ss
sub
sarb
jmp
xchg
fisubrs
add
push
pop
sbb
lds
and
sub
pop
rclb
das
movsbl
pop
sbb
push
adc
cld
inc
in
mov
gs
lahf
popf
subl
cli
sahf
in
and
flds
cmp
dec
mov
fcmovb
mov
mov
mov
add
sarb
push
mov
jae
cld
test
jbe
mov
push
ds
xchg
data16
inc
dec
imul
push
xchg
rclb
loop
add
xor
shl
lahf
jae
notb
pop
je
fimull
inc
sbb
imul
rcll
sub
sub
aas
lcall
movsl
adc
mov
pusha
dec
add
mov
cmp
ss
fnstsw
nop
adc
push
js
add
leave
pop
arpl
sbb
and
cmp
stc
or
fcomi
out
push
sub
cmpsb
loope
mov
and
fiadds
pop
jge
cmp
push
mov
sub
sbb
fdivs
jae
stos
repnz
in
cmp
out
cmp
bound
mov
or
add
and
rclb
mov
pushf
xor
and
scas
push
mov
xchg
shll
repz
in
cmp
jno
int
fcmovne
xchg
pop
jmp
xor
mov
mov
pushf
imul
mov
mull
push
imul
call
clc
or
mov
out
in
lods
push
or
fmuls
inc
fs
cmpsl
pop
lret
xor
xchg
pop
out
icebp
jo
cmpb
fcomp
sbb
dec
or
icebp
stos
xor
lret
aam
test
lock
xchg
fisttpl
es
cmp
sub
jbe
mov
push
call
test
sub
pop
imul
shl
sub
xlat
fldl
xor
jle
mov
fnstsw
push
and
imul
cwtl
sbb
and
jecxz
call
dec
inc
call
sbb
adc
sbb
mov
add
xchg
xchg
std
cwtl
sti
dec
imul
add
ret
lods
loope
pop
mov
mov
lods
sbb
sti
jmp
add
jmp
xor
loopne
or
iret
std
sbb
cmp
std
pushf
inc
dec
fwait
cwtl
popa
sbb
adc
lret
sbb
cmp
lgs
lret
scas
daa
jne
hlt
mov
xor
test
cmp
ljmp
pushf
xchg
add
add
outsb
test
dec
cmp
mov
or
jno
dec
test
cmp
xchg
imul
test
sahf
push
cmc
and
mov
scas
nop
ja
lods
mov
jno
stc
push
add
adc
xor
push
iret
mov
jbe
sbb
sub
sahf
pop
mov
mov
pop
cmc
jne
jmp
jle
push
xchg
in
in
add
mov
cmp
rdpmc
int3
ja
pop
add
js
xor
imul
out
movsb
cmp
ds
test
and
lods
stc
jns
jge
mov
and
cmc
and
xchg
mov
ret
mov
mov
add
bound
jp
jno
jns
lods
adc
xchg
inc
rcr
cmp
adc
rcr
dec
add
outsl
dec
pop
jmp
mov
jo
lods
call
cmpsb
add
ret
jne
insb
dec
mov
das
mov
scas
sub
xor
adc
jle
or
inc
ss
ret
stc
pop
orl
scas
out
mov
mov
jb
jnp
mov
add
out
mov
mov
jge
fcompl
pop
rcr
shld
and
pop
addr16
in
cwtl
and
fidivs
addb
fsts
or
mov
fwait
mov
int3
mov
push
out
inc
jge
adc
out
pushf
or
js
leave
insl
sub
mov
pop
jle
stos
icebp
rorb
pop
mov
shl
aaa
or
ss
mov
xor
cwtl
mov
into
dec
mov
in
push
push
and
adc
lcall
sbb
test
adc
xlat
add
loopne
popf
movsl
and
add
mov
and
push
fsub
push
push
pusha
repnz
jle
mov
in
push
push
or
aam
lea
lea
imul
mov
push
push
jp
int
jbe
pop
jmp
test
sbb
mov
cmp
aam
jbe
inc
push
cld
add
enter
dec
out
ljmp
cwtl
aam
mov
mov
rcrl
push
sbb
stos
outsl
fadds
inc
mov
mov
pop
fistps
bswap
shrb
in
and
pop
or
mov
mov
rcl
mov
mov
sbb
nop
pcmpeqw
pop
xchg
mov
pusha
scas
cli
stos
cmc
push
sbb
mov
mov
pop
sub
cmp
ret
jbe
insb
dec
xlat
subl
lds
inc
jbe
mov
arpl
out
xor
movsb
divb
sub
xchg
jne
lds
xor
enter
aad
mov
jo
in
push
repz
mov
movsl
dec
dec
push
or
jp
jbe
arpl
mov
mov
fcoms
xchg
shl
cwtl
jae
and
out
sbb
sbb
lahf
dec
in
into
mov
sub
jb
aaa
loopne
sub
jp
cmp
mov
push
sbbl
dec
daa
adc
adc
push
dec
es
push
lcall
repnz
pop
and
repnz
inc
inc
leave
aaa
fmull
ja
out
cmp
out
push
inc
sti
aam
rol
data16
xchg
ds
or
pop
add
sbb
in
dec
pop
mov
sbb
xchg
in
test
jns
call
movsl
xchg
repnz
out
data16
sub
mov
jno
imul
sarl
and
adc
pop
cli
add
and
cmp
and
and
sbb
add
test
sub
lcall
into
lods
mov
gs
inc
jle
popa
lcall
lods
repnz
lret
xor
mov
mov
pop
imul
cmp
xchg
into
inc
loope
cwtl
mov
les
jne
sbb
pop
ja
icebp
imul
mov
movsb
or
and
dec
or
sub
outsl
gs
push
push
dec
repnz
cmp
xor
or
int
je
cmp
or
addr16
sahf
mov
pop
mov
sub
push
ja
subb
out
icebp
pop
inc
mov
jnp
xchg
adc
push
cmpl
rcr
jge
out
cmpsb
push
fs
inc
mov
cmp
dec
jnp
fcomps
add
sahf
ds
popf
call
xchg
negl
adc
stc
popa
sahf
das
dec
mov
adc
pushl
jmp
enter
pop
out
dec
cli
outsb
loopne
cmp
loope
insb
jb
fadds
lods
sub
sub
in
mov
xchg
lahf
cmp
cmc
popf
sub
iret
mov
insl
xorb
into
loopne
rcrl
scas
cmpsl
ja
jnp
mov
pop
std
cwtl
push
daa
push
arpl
das
add
lret
push
and
and
xchg
push
jp
scas
jno
cmp
jns
out
or
xchg
mov
inc
inc
pop
je
push
cmp
int3
pop
cmc
inc
leave
jle
je
push
mov
adc
mov
filds
lods
mov
push
jecxz
shll
push
in
test
mov
mov
mov
adcl
int3
xor
or
lcall
dec
shlb
lret
ljmp
dec
xchg
pop
mov
push
cmp
pop
or
cwtl
xchg
in
jns
sbb
sbb
xor
hlt
cmp
dec
aaa
mov
ja
test
inc
jecxz
mov
pusha
cmp
cltd
std
jecxz
xor
jb
mov
push
dec
inc
repz
or
fwait
push
and
loopne
aad
shl
jmp
repnz
adc
mov
cmpsl
iret
and
or
sbb
pusha
cld
cltd
mov
in
mov
idivb
push
loop
xor
xchg
xor
movsl
mov
gs
and
mov
movsl
aas
and
ffree
dec
cmp
xlat
xor
xchg
ss
jae
test
sbb
jmp
jp
imul
cmpsl
mov
dec
loope
cmp
adc
sub
fmuls
fsubr
cmc
lock
cmp
cwtl
add
cs
jg
addb
xchg
out
inc
pop
or
ret
inc
mov
inc
in
outsl
cmp
adcl
sub
daa
mov
xchg
mov
hlt
test
jge
dec
xlat
fcomps
push
aas
lods
stc
movsl
cmpsl
mov
adc
mov
xor
mov
aaa
jno
push
or
pop
les
jmp
sub
jns
sbb
loope
std
and
jne
and
daa
mov
dec
sarl
call
push
mov
in
ja
mov
xchg
xor
inc
aad
mov
pop
mov
and
scas
xchg
inc
cmp
mov
aaa
arpl
test
hlt
mov
dec
adc
jae
rclb
gs
cmp
test
mov
jl
push
mov
inc
ljmp
push
sub
mov
dec
mov
fs
inc
dec
pop
sub
lret
lahf
and
push
mov
lahf
test
lea
mov
int3
xor
push
in
lcall
decb
pop
push
mov
mov
sti
scas
je
jne
or
cmp
in
das
adc
insb
or
jno
push
add
jp
leave
aas
inc
xor
push
mov
push
jecxz
fnstsw
add
xchg
je
ss
and
jne
jg
iret
mov
iret
jl
cmpsl
jno
addr16
push
sbb
gs
movsl
in
es
and
fiaddl
fnsetpm(287
push
cmp
sbb
je
cwtl
sti
scas
arpl
pop
pop
aam
out
cli
xor
mov
ljmp
imul
insl
insb
cmp
adc
pop
hlt
sarl
jno
mov
data16
inc
fisubrl
xchg
add
adc
nop
xchg
imul
js
push
dec
fsts
icebp
xor
aad
aas
adc
dec
mov
mov
dec
int
mov
das
mov
push
movsb
in
inc
lea
enter
inc
stc
dec
rol
dec
sub
dec
fnstsw
sbb
or
jge
shll
bound
cmp
mov
addl
push
out
add
jbe
dec
nop
rclb
lods
dec
cs
add
nop
aad
jb
dec
sbb
clc
stos
movsl
insb
inc
in
pop
dec
cltd
push
cmp
push
test
jge
in
fiadds
inc
insl
mov
cmp
es
adc
clc
xor
orb
rcll
fwait
je
cmp
jmp
xchg
into
dec
pop
rorl
aas
mov
ret
stos
rcl
popf
sarb
ds
sub
in
es
sbb
mov
aaa
pop
fcmove
loop
repnz
xabort
xchg
inc
pushf
aaa
stc
cmp
lds
mov
sub
rcrl
dec
mov
fnstcw
cmp
sub
bound
push
or
mov
xor
mov
insb
repz
outsb
or
add
dec
sub
sti
imul
mov
mov
notl
cmp
clc
jb
dec
inc
loopne
pop
sbb
jge
fwait
dec
dec
mov
and
imul
and
fisubrl
jne
xor
fsubrl
inc
loop
ljmp
lret
add
push
cmp
inc
fs
push
fcomi
mov
mov
out
es
fdivr
dec
iret
mov
arpl
out
fwait
scas
cltd
mov
and
cli
test
cmc
clc
mov
mov
arpl
aad
mov
sbb
ret
push
in
out
outsb
inc
cmc
imul
or
cmpsl
push
jge
les
sub
out
lcall
fnsave
mov
mov
mov
inc
mov
je
lods
sahf
leave
push
jecxz
out
and
push
negl
lcall
mov
mov
lret
or
lock
mov
mov
mov
mov
push
in
cmpsb
inc
mov
idivl
pop
pusha
sahf
or
mov
push
adc
insl
int
clc
sar
ret
mov
add
cmp
lahf
dec
inc
in
xor
and
jno
xlat
inc
adc
jne
hlt
imul
test
movsl
sbb
dec
sar
iret
imul
ss
lock
fdivs
lret
fildll
sahf
fldcw
hlt
sub
mov
sbb
repz
loop
arpl
xor
ljmp
sbb
xor
cmp
out
ja
aas
ds
push
xchg
insl
lret
lret
bound
leave
sub
dec
jl
mov
cmp
lds
xchg
fwait
xchg
mov
xor
mov
xchg
xchg
gs
xchg
sbb
in
jns
test
aas
push
imul
adc
in
or
cld
and
and
pop
or
adc
repz
cli
std
xor
mov
pop
jg
adc
out
in
push
jg
clc
xlat
or
jbe
mov
addr16
pop
cmp
xor
pop
out
repnz
push
xchg
jo
add
pop
xor
daa
jp
cmp
push
jmp
in
sub
int
ljmp
cmp
cmp
sub
roll
pop
sub
ret
fildl
orb
leave
sub
jb
xor
jns
cli
jbe
add
in
dec
cmc
out
insl
std
or
insb
cli
mov
loope
fs
mov
icebp
dec
jno
orl
xchg
mov
pop
cwtl
iret
mov
push
add
inc
rcll
pop
mov
mov
shrl
push
sbb
push
out
dec
pop
cli
sbb
cli
rol
adc
mov
push
xchg
lahf
clc
mov
mov
insb
mov
jge
add
jmp
lret
pusha
stos
popa
and
aas
pop
enter
xchg
cmp
cmp
pop
pop
push
test
std
sbb
test
int3
test
popa
xchg
test
sbb
xor
xor
les
in
mov
addr16
fadd
leave
das
xor
fldcw
scas
sub
mov
je
das
add
das
mov
jns
push
orl
aad
rorb
sbb
aas
xor
sbb
call
jns
mov
loope
jecxz
xor
aaa
call
test
loopne
inc
xchg
hlt
mov
jne
push
push
pop
sbb
sub
sub
or
or
jp
outsl
mov
imul
sbb
mov
hlt
xor
xchg
ljmp
out
push
ljmp
outsl
or
adc
in
mov
push
pop
jb
inc
lahf
je
dec
lret
fcmovb
insl
in
jmp
pop
mov
add
popa
or
ja
sub
out
adcb
inc
mov
jle
movsl
inc
mov
ret
int
pop
cli
gs
and
jae,pn
pusha
das
sbb
lcall
mov
test
test
dec
sbb
test
and
in
push
jns
mov
stos
cmp
mov
test
dec
cmp
lea
push
xchg
mov
dec
out
push
insl
xchg
out
xchg
xlat
and
pop
push
adc
xchg
mov
lds
push
fstps
push
adc
out
mov
sti
outsb
cmp
xchg
dec
leave
adc
addb
inc
jne
jns
or
sbb
and
fsubl
js
scas
mov
push
shlb
inc
dec
xlat
push
das
or
mov
rcrl
sbb
mov
imul
movsb
mov
aas
test
or
mov
inc
arpl
push
je
push
push
push
or
sub
push
adc
add
scas
fistl
xor
dec
lods
dec
fs
xchg
repz
sbb
mov
adc
cmp
push
xlat
lods
pop
pop
lret
insb
add
lods
cmpl
jbe
outsb
test
stos
adc
dec
xlat
nop
dec
cmp
push
cmp
dec
mov
jl
xchg
inc
fwait
xchg
mov
ret
adc
fcmovbe
jae
xchg
sub
mov
sub
in
xor
mov
dec
inc
cmpb
lea
push
push
scas
jge
lret
mov
mov
icebp
ret
pop
mov
mov
mov
lret
push
scas
inc
test
imull
cmp
mov
stc
aas
or
pop
inc
xor
mov
lahf
ja
adc
test
lds
mov
lds
rorb
mov
add
sub
mov
mov
push
cvtps2pd
mov
sub
inc
cli
ret
aas
cmp
xor
jl
les
dec
or
cld
testb
negl
lds
stos
push
in
pop
mov
and
mov
jmpw
scas
add
xchg
nop
jl
inc
fs
xchg
out
pushl
sbb
add
daa
mov
arpl
xor
inc
xchg
adc
ret
dec
les
nop
mov
mov
push
pop
pop
adc
or
rclb
jns
das
in
xor
jl
cli
mov
movsl
loopne
inc
sub
imul
or
rol
pusha
fnstcw
jbe
or
imul
mov
sbb
ljmp
mov
pop
lods
pop
sub
js
push
pop
ret
push
cmc
xor
lods
lret
mov
push
ret
cli
cli
adc
test
out
inc
sub
aas
out
and
mov
xor
enter
lret
divl
xchg
pop
xlat
movsb
insl
stc
xor
cmp
out
cmpsb
jno
sti
adc
into
fs
fiadds
jmp
movsl
jno
mov
mov
fcompl
xchg
push
fstl
out
loope
call
mov
xchg
test
setle
sbb
and
adc
fwait
inc
scas
adc
jno
push
lahf
add
push
mov
popf
mov
or
mov
cmp
and
stc
pop
xchg
inc
frstor
call
inc
mov
outsb
std
mov
aad
xchg
movsl
push
jmp
push
popf
lock
clc
daa
es
insl
cmp
enter
pop
inc
loop
leave
sbb
rcrl
cmp
jb
or
push
cli
mov
sub
or
adc
and
dec
xchg
inc
jnp
pop
adc
fucomp
dec
lds
sub
lods
mov
fisubrl
loop
mov
cmp
pusha
sarb
pop
out
or
lds
icebp
push
mov
pop
pop
push
pop
push
sub
sti
xor
mov
cld
sbb
xchg
push
jnp
cmc
sbb
mov
orl
xchg
cmp
out
sub
inc
cmp
aad
jmp
and
add
xchg
and
mov
imul
scas
dec
add
jmp
adc
iret
fsubl
mov
xor
jp
es
out
inc
jne
push
std
or
repz
js
out
push
or
shr
mov
cmpsl
loope
movsl
push
or
std
loopew
imul
pusha
lods
mov
jle
mov
addr16
pop
ja
xor
imul
pop
movsl
subl
fmulp
push
pop
and
pop
cmpb
xchg
imul
add
lds
pop
roll
cmp
pop
bound
enter
ja
addb
sub
sahf
stc
sbb
pop
pusha
mov
test
sub
sahf
ja
inc
adc
push
mov
xor
inc
mov
cld
je
jecxz
iret
push
fisttps
test
ljmp
push
xor
cmc
in
dec
jo
or
mov
ds
aaa
fs
ss
xor
sub
mov
pop
mov
adc
cld
mov
xchg
clc
enter
rorl
sbb
mov
es
jns
repz
sbb
jle
and
mov
and
rol
repz
sub
push
jae
xchg
dec
inc
sbb
sub
stc
mov
jnp
in
mov
push
dec
adc
jmp
stc
cld
loope
ja
cli
js
shll
xor
xor
aaa
pushf
dec
pop
dec
shl
sub
jmp
insb
adc
out
jo
mov
popf
repz
inc
popf
adc
mov
dec
fnstenv
sbb
pop
or
or
mov
push
imul
pusha
ds
ret
les
or
fs
fldl
jae
jl
dec
je
idivb
insl
cli
jbe
outsb
jg
cmc
mov
lock
mov
adc
mov
jne
jne
pushw
sub
cli
add
ljmp
cmp
lret
mov
xchg
bound
jp
in
pop
mov
inc
imul
ror
fstpt
and
mov
ljmp
test
jnp
loope
mov
xchg
xor
xor
cld
jmp
mov
into
fnstsw
sahf
dec
aam
loop
inc
stos
pop
push
loope
out
xor
sbb
fs
mov
sub
dec
and
and
daa
daa
test
mov
fsin
test
inc
pop
into
dec
jle
adc
stos
leave
rcrb
pop
out
jbe
fs
sub
xor
jo
dec
iret
add
into
lock
jbe
data16
in
inc
cmp
in
cmp
mov
jecxz
popa
push
add
or
out
insb
sbb
mov
mov
pusha
push
sub
test
pop
nop
lret
adc
out
jecxz
cmp
ficomps
mov
cltd
test
aam
scas
push
fisubrl
rcrl
pop
sahf
xchg
cli
cmp
sbb
add
pop
inc
std
sbb
jle
jmp
cmp
pop
xchg
jo
jp
into
inc
mov
push
sbb
insl
mov
pop
fmuls
or
in
dec
push
push
add
les
jle
and
jb
outsl
push
xchg
jnp
mov
fdivr
mov
or
loop
loopne
lea
pop
inc
pusha
push
mov
arpl
shl
into
shr
cmp
jne
popf
shl
mov
jne
nop
dec
test
addl
enter
shr
push
xchg
pop
and
mov
push
ret
sbb
jns
adc
mov
test
pop
lret
ret
and
inc
cli
ds
lods
xor
cmp
stos
scas
adc
jecxz
ss
paddb
inc
lcallw
aam
repnz
stos
pop
pushf
pop
mov
mov
mov
xchg
sar
push
pop
jle
je
cmp
adc
sbb
pop
adc
xor
call
jmp
in
inc
dec
mov
imul
mov
or
sub
fisubrl
sahf
lock
pop
cmp
lods
iret
adc
jbe
pop
lods
push
stc
sarb
mov
cmpsl
mov
jmp
push
hlt
pop
out
fldl
rol
xor
xor
fldl
aam
pushf
dec
push
js
inc
adc
cmpsb
mov
aam
push
inc
ljmp
addl
ss
test
andl
push
into
loopne
or
lcall
xor
push
lcall
and
jle
daa
push
mov
sbb
xor
rcl
sbb
mov
ret
pop
aas
mov
dec
lock
insl
cwtl
push
cwtl
sub
lea
bound
xor
movsb
pop
sbb
dec
and
cmp
cmp
jmp
sbb
gs
dec
push
xchg
cmpsl
pop
inc
jns
les
nop
adcb
inc
inc
cmp
arpl
fwait
mov
cmpsb
push
push
in
mov
adcb
push
fs
hlt
xchg
in
cmp
xchg
inc
scas
mov
push
sbb
test
repnz
and
mov
xlat
push
xchg
fdivrl
sub
cmp
lock
std
jbe
adc
push
sub
mov
add
xlat
or
xor
cmp
aaa
dec
faddl
pop
movsb
jae
jl
mov
mov
mov
mov
daa
dec
and
mov
mov
jo
fisubrl
push
ficoms
icebp
push
push
push
int3
outsb
loopne
adc
lea
sbb
int
push
sbb
dec
mov
add
push
int
loopne
xor
cmpb
or
mov
push
add
roll
mov
cmc
jb
cmp
les
xor
fidivs
fxam
mov
adc
ja
xchg
adc
rcl
fnstcw
jl
std
scas
adc
or
lds
mov
mov
inc
mov
jp
xchg
jl
arpl
je
pusha
lcall
sahf
std
repz
sbb
pop
dec
out
xor
leave
leave
dec
jb
pop
push
ficoml
jecxz
sbb
stos
outsl
outsl
jecxz
mov
mov
scas
mov
sub
inc
push
lret
xchg
or
jb
repz
xor
jg
jmp
dec
paddd
dec
sub
mov
or
shll
test
pop
xchg
imul
ret
in
mov
lahf
or
fwait
adc
mov
in
cmpsl
xor
fsubs
push
xchg
push
into
mov
mov
dec
hlt
inc
sbb
mov
lods
sbb
sub
mov
out
pop
mov
xchg
aaa
or
pushf
mov
adc
jecxz
adc
repz
inc
jl
fnstcw
cs
or
or
mov
push
aaa
xchg
pushl
cmpsb
or
bswap
mov
and
jb
sbb
cmp
inc
mov
insl
cmp
sbb
inc
jmp
xchg
dec
sub
xchg
dec
cmp
aas
xchg
rorb
test
cmp
jb
jg
xchg
fcoms
movhps
icebp
xor
mov
lret
imul
adc
cmp
and
fcoms
imul
shrl
int3
scas
cld
into
push
js
jno
or
dec
mov
cld
ja
bnd
pop
mov
xchg
sub
cs
mov
sub
mov
mov
adc
xor
jl
xchg
pop
xor
and
icebp
mov
ss
pop
jb
ret
mov
icebp
std
lds
or
inc
xor
jns
jns
mov
and
mov
repz
je
je
fsub
mov
inc
cli
sahf
mov
or
jecxz
add
mov
cltd
cmp
mov
inc
jge
fdivs
jnp
rorb
xor
dec
idivl
enter
pusha
mov
movsb
adc
mov
sti
jne
adc
gs
pop
push
pop
divl
int
addl
push
push
adc
pop
popf
int3
adc
pop
loope
push
cmc
mov
int
stc
sti
sub
in
es
fiaddl
idivb
mov
out
lea
das
stos
scas
dec
jno
sub
fmull
sub
pusha
push
or
jbe
jge
push
arpl
adc
xchg
dec
xor
xchg
pop
rol
lds
xchg
pop
mov
pop
add
mov
jnp
add
sub
sbb
mov
and
mov
nop
sbb
idivl
insl
add
lods
adc
cmpsl
xchg
sbb
shrl
sbb
inc
dec
lahf
enter
xor
pop
jae
fwait
sbbl
xlat
jecxz
insb
mov
sub
dec
or
test
xlat
cmpl
fcomps
cmp
fdivl
fimull
repnz
xchg
dec
nop
scas
test
out
sbb
xchg
outsl
sarb
and
cmp
push
jle
mov
add
cmpsl
je
jne
mov
in
in
fs
jp
jne
mov
cmpsl
or
sbb
xchg
sub
enter
aaa
push
adc
dec
inc
popf
sti
dec
cmp
out
xchg
add
jecxz
sub
sub
inc
stos
inc
add
jl
ja
in
in
jo
jmp
pop
push
in
sbb
xchg
pop
shrb
sub
lret
mov
pop
jne
mov
xchg
xchg
push
cltd
inc
test
arpl
aas
orb
sbb
jb
dec
and
xchg
std
int3
xor
in
das
inc
mov
movl
mov
sbb
mov
cmpb
jns
inc
jne
movsl
daa
mov
xchg
adc
and
gs
rclb
arpl
xor
ret
mov
push
inc
mov
pop
fwait
jbe
cmp
mov
xchg
subl
push
sub
ret
jecxz
push
js
sbb
outsl
pop
pop
jg
cwtl
mov
lods
popf
test
cmp
xchg
or
xchg
fisubrl
outsb
in
push
add
jmp
cmp
arpl
jge
cli
fwait
mov
mov
loop
fadds
shrb
repz
jg
les
sbb
mov
mov
std
sub
test
jno
pop
fidivrs
jne
fsubl
and
dec
out
jno
lods
cmp
arpl
dec
cwtl
addr16
outsl
movsl
adc
pop
mov
pop
xchg
and
lds
fcompl
pop
mov
imul
int3
dec
jp
cmp
adc
and
xchg
movsl
out
dec
xchg
sti
lcall
sbb
xor
jno
or
sub
leave
pushl
movsl
mov
xchg
out
fistpll
pop
cmp
loop
dec
aaa
and
xor
push
mov
jp
ficoml
pop
mov
sub
or
scas
cmp
mov
loope
sarb
fwait
clc
and
ss
roll
test
dec
jg
orb
push
push
and
xor
jl
push
ficomps
dec
add
test
test
cli
das
mov
fcomps
xchg
les
inc
jo
icebp
stc
sbb
cld
imul
jae
dec
adc
cli
sti
and
inc
xchg
aam
ss
fidivrl
or
jmp
popa
or
mov
and
int3
xor
fnstcw
add
cmp
mov
rcr
inc
cli
xchg
data16
jb
pushf
push
mov
pop
push
xchg
dec
add
or
adc
xor
push
ret
push
dec
xor
clc
paddsb
cmpsb
pop
sahf
cmp
inc
xor
inc
shrl
dec
push
xchg
sbb
mov
cmpsb
jo
lahf
pop
add
mov
dec
inc
xor
cmpl
add
mov
add
repz
aas
and
xchg
test
xchg
push
sub
roll
mov
adc
in
lahf
push
das
sub
movsw
xor
cmpl
dec
or
add
cmpsb
inc
mov
sbb
mov
in
ret
orb
jl
fucomp
mov
jecxz
push
xorb
mov
sbb
into
push
and
cmp
pop
ljmp
repz
and
add
ret
repnz
cmp
sbb
ret
and
js
mov
mov
call
and
fsubs
xor
xchg
pop
in
dec
mov
lock
imul
jecxz
cld
fcos
jno
sbb
je
in
das
lahf
add
pop
dec
ja
or
pop
mov
mov
pushf
xchg
addl
mov
pop
xchg
inc
scas
xchg
adc
or
rclb
jge
insb
mov
mov
fdivl
test
jle
lods
dec
int3
lds
adc
fsts
test
mov
push
push
hlt
fcoml
sbb
pop
cmp
popa
jnp
mov
inc
jns
enter
cmp
push
sti
addr16
mov
in
shll
mov
mov
test
mov
fidivrs
xor
xor
outsl
fsub
lds
push
stos
mov
std
lret
push
loop
lock
ja
mov
outsb
or
test
inc
jg
fdivl
mov
jmp
pop
cltd
enter
das
mov
orl
adc
jno
cmp
orb
xorl
xchg
cmp
adc
mov
mov
sub
dec
cltd
sbb
xor
sarl
jmp
sti
adc
stos
cs
push
es
inc
xor
pop
insb
enter
test
arpl
mov
xor
pop
ja
dec
mov
mov
pmulhw
in
adc
xor
cmp
and
nop
and
and
jns
dec
mov
jae
lret
lea
fisubs
lea
loopne
rclb
adc
pop
xchg
out
jmp
test
cs
and
pop
jno
or
cmp
sbb
xchg
aas
jl
cmp
lods
mov
mov
ljmp
mov
or
sub
sbb
outsl
fnstsw
fcomip
std
loope
xchg
repz
cld
jb
das
xchg
movsb
push
or
and
mov
cmp
dec
inc
lods
mov
rcrb
pusha
jecxz
fists
fsubl
push
xchg
push
mov
dec
pusha
inc
xchg
adc
or
pop
sbb
inc
jg
jle
inc
sahf
inc
pop
lock
lds
sbb
fstl
imul
daa
int3
mov
xlat
fwait
and
dec
inc
push
mov
push
push
int
adc
lret
popl
jle
mov
xor
popa
dec
fbstp
in
je
mov
mov
je
push
lret
divb
mov
mov
adc
mov
mov
insl
sbb
sbb
and
xor
adc
cmp
pop
out
pop
cmp
out
jns
into
and
and
push
mov
xor
imul
jae
fisubrs
mov
lret
fadds
pop
add
cmp
sbb
cmp
faddl
inc
setns
inc
lods
mov
out
xor
sti
push
push
push
push
andb
imul
jne
lock
fidivs
gs
jno
rcll
sub
pop
jmp
cmpsb
push
mov
inc
test
test
gs
dec
mov
arpl
stos
in
lret
mov
mov
add
mov
mov
scas
insb
loopne
aad
fsubl
cmp
nop
loop
push
mov
sahf
fimuls
test
cmp
fisubs
or
lock
xor
dec
lds
idivl
fldt
mov
pusha
ficoml
incl
pop
xorl
sub
inc
xchg
jmp
enter
jg
pop
cmp
int3
icebp
nop
cmp
fnstsw
outsb
outsb
sbb
pop
icebp
ljmp
adc
adc
dec
fsubrl
jle
movsb
mov
leave
scas
or
or
fisubl
mov
add
inc
es
fnstsw
stos
repnz
and
test
movsl
lods
pop
cmp
cmp
dec
pop
stos
les
popf
nop
scas
in
out
sahf
sbb
cmc
xor
mov
incb
test
and
and
fnstenv
cmpsl
xor
aam
cmp
lret
fcoml
adc
dec
insb
in
mov
dec
push
add
mov
dec
leave
test
pop
mov
fldenv
rclb
or
lds
les
sbb
mov
inc
mov
popf
nop
lret
int
push
pop
loop
mov
sarl
ja
sbb
jg
scas
fsubr
lods
repnz
pop
sahf
mov
aam
enter
cmp
adc
dec
mov
cs
das
popa
or
push
jbe
jne
sbb
jno
fstpt
addl
cmpsb
adc
pop
test
pop
jnp
in
shlb
adc
cmc
out
inc
repnz
mov
shrb
lock
outsl
mov
sarl
sub
es
lds
andb
dec
cmp
or
ds
mov
sbb
ljmp
mov
pop
mov
sub
repnz
scas
inc
in
jecxz
out
push
cmp
sti
mov
pop
out
bound
fisttpl
cmp
cmp
sbb
movsb
jecxz
or
enter
sub
dec
ret
pop
mov
xor
inc
push
aam
or
add
ret
xor
pop
or
scas
adc
ret
mov
cmpsb
out
adc
pop
xor
aad
jge
mov
xchg
outsb
fsubl
jl
xor
arpl
repnz
cmp
pop
aad
push
nop
daa
mov
adc
dec
imulb
fnsave
test
jg
push
into
push
adc
dec
imul
cltd
inc
push
js
aas
je
sbb
cltd
sub
push
int3
cmp
xchg
fwait
into
xor
xchg
xor
std
and
mov
rcll
xchg
in
sub
cmpb
lods
sbb
mov
aaa
jecxz
xchg
sbb
stc
shrb
jmp
dec
cwtl
mov
pusha
fcoms
xchg
or
stos
pop
xor
push
jbe
ds
pop
out
xor
and
xchg
add
leave
and
stc
stos
inc
and
mov
out
push
in
lcall
in
xchg
sbb
dec
stos
mov
xor
test
cwtl
insb
imul
sub
mov
xor
aam
jle
ficoml
rclb
cli
and
push
xchg
test
pop
sbbb
mov
in
lret
cwtl
sbb
cmc
pop
das
sub
mov
dec
gs
mov
dec
dec
xchg
jmp
loope
adc
mov
fsts
xor
cmp
jbe
ja
cltd
or
mov
js
aad
push
pop
popa
bound
add
inc
ja
jecxz
cmp
rclb
pop
std
in
xor
mov
repnz
adc
mov
cmc
jmp
lcall
pop
stos
sbb
cwtl
popf
stc
pop
mov
pop
fstpt
cld
push
jle
and
cmc
das
jbe
aad
cld
adc
fildll
add
xor
scas
into
fidivl
fsubl
subl
mov
ss
push
sub
aad
adc
xor
outsb
push
fistps
scas
cmp
mov
jmp
arpl
or
xor
lds
pop
and
mov
out
push
sarl
aaa
popf
inc
dec
sbb
mull
add
push
cmp
call
xor
pop
push
xlat
repz
pop
xchg
stc
test
xchg
fisubrl
sbb
lods
lret
pop
subl
or
or
inc
fistl
fmuls
adc
popf
hlt
push
push
inc
pop
adc
push
outsl
or
inc
ss
adc
xor
lock
js
mov
push
push
xor
out
mov
lea
roll
or
mov
dec
dec
cmp
push
push
int3
imul
cmpsl
adc
mov
enter
test
lea
sti
xchg
mov
sbb
inc
mov
out
fstl
jp
ss
fisubrs
jmp
xchg
add
pop
fsubs
es
lahf
jmp
fldl
out
shrb
mov
cmp
cltd
xchg
or
es
jbe
imulb
fwait
and
test
mov
mov
xchg
fstpl
pusha
out
ror
insl
jae
push
push
in
push
shrl
cs
cli
ret
leave
rol
pushf
inc
inc
lea
lods
shlb
imul
popf
aaa
insb
inc
stc
xlat
pop
push
push
xor
clc
ds
add
test
aaa
lods
jae
cli
or
push
mov
jle
pop
jns
sbb
stos
jle
cmc
popf
addr16
rcr
fs
data16
jbe
xlat
filds
pop
dec
fwait
lock
dec
or
cmp
test
and
add
test
cmp
lahf
ljmp
loopne
or
adc
mov
pop
sub
scas
lods
sti
mov
sbb
sbb
stc
sub
jnp
mov
push
push
decl
xor
inc
sub
xorl
cmpb
stc
adc
jb
inc
out
cltd
inc
scas
shl
in
pop
jge
aam
arpl
add
jns
sub
leave
mov
push
je
test
or
push
adc
adc
ljmp
xor
xchg
cmp
pusha
jo
cwtl
repnz
fwait
cmp
and
test
int
jp
lods
pop
mov
movsb
pop
or
add
out
push
cwtl
scas
cmp
lods
stc
cmpb
mov
mov
lods
test
outsl
movsb
inc
pop
fnstenv
xor
out
xchg
add
pop
outsl
lahf
mov
jno
mov
dec
cmp
shlb
mov
add
lds
js
sarb
dec
and
add
sbb
idivl
icebp
and
imul
loop
in
cs
loopne
and
movsl
mov
jnp
xchg
imul
add
scas
outsb
mov
pop
cmp
jnp
or
mov
and
push
leave
and
jbe
fadds
adcl
ror
stc
cmp
pop
in
mov
test
inc
pop
aad
pop
nop
push
flds
push
out
xchg
and
push
push
and
addr16
push
push
out
lock
mov
in
icebp
xor
mov
out
or
ss
ljmp
sbb
jno
lahf
lds
stc
mov
sbb
sub
jmp
cld
fisubl
cmp
insb
dec
out
pop
in
or
stc
and
sti
mov
sub
pop
jl
in
outsb
jae
mov
mov
xchg
fisubrl
xor
pushf
ret
and
mov
stc
andb
sub
movsl
es
aad
cltd
imul
jae
sub
dec
jge
mov
clc
sub
ficoml
lea
mov
jle
inc
mov
xacquire
mov
shlb
mov
sub
xchg
movsb
cltd
pop
in
mov
pop
push
je
adc
leave
and
cltd
leave
xchg
std
xor
out
sbb
xchg
push
pop
repnz
mov
push
insb
mov
dec
pop
cmp
in
push
out
inc
fnstsw
insl
pop
push
stos
bound
out
push
test
mov
scas
sub
orl
fcmove
adcl
pop
cli
cmovnp
and
xor
andl
or
xchg
mov
pop
enter
fnstcw
sub
xchg
std
aam
jecxz
jl
push
adc
add
sbb
dec
in
sbb
jno
adc
push
fldcw
or
or
lea
dec
xor
dec
inc
and
outsl
push
mov
cltd
push
int
dec
ds
xchg
cli
mov
enter
sub
xchg
xchg
pop
xchg
stos
in
insb
mov
adcb
lods
fabs
in
add
dec
add
xchg
stc
pushf
sbb
add
repz
int3
jp,pt
das
sbb
inc
sub
dec
aaa
mov
or
rolb
cmp
and
jmp
call
cmp
aad
in
stc
jns
data16
cltd
cmp
fcoml
mov
test
pop
out
xchg
push
test
push
xchg
cmp
mov
enter
dec
dec
inc
fs
fs
dec
stos
ja
out
ret
inc
adc
fnsave
in
imulb
mov
jmp
inc
or
imul
fidivrs
pop
push
out
sbb
scas
push
sbb
lret
inc
push
mov
and
mov
dec
fadd
and
mov
pop
cmp
xchg
scas
xchg
fstl
pop
mov
xchg
push
jne
out
dec
ror
jnp
pop
and
pop
adc
stc
sbb
xchg
pop
cmc
ret
shll
testb
add
roll
popa
ss
int3
pop
jbe
inc
push
in
push
xor
jno
lds
adc
add
cs
out
lcall
push
push
lods
xor
rcll
add
cmp
jb
or
icebp
out
lcall
outsl
jge
or
bswap
push
sbb
or
push
out
jle
dec
cli
out
shrb
xor
lods
push
xor
inc
dec
push
cmp
or
cmp
or
mov
cltd
and
fmuls
fmull
loopne
xchg
repnz
in
cmp
std
stos
stc
das
inc
inc
aad
jne
or
mov
jb
aad
test
push
lret
pushf
mov
xorl
xchg
movsl
or
dec
ljmp
jp
arpl
and
jo
out
clc
fdiv
ja
jp
dec
jecxz
mov
cmp
jecxz
and
sub
enter
mov
inc
pushf
push
cmp
lret
popa
jae
bound
int
mov
mov
ret
es
in
mov
ret
popf
xor
xchg
fnstenv
dec
cmp
mov
pop
sub
lret
push
orl
idiv
adc
iret
inc
icebp
sti
sbb
dec
cmp
scas
aaa
xorb
mov
cld
push
mov
mov
mov
pop
sub
pop
fstpl
cmp
outsb
or
xchg
aad
cmp
jmp
xor
call
pusha
lcall
lret
xchg
je
mov
dec
xchg
xlat
inc
mov
or
jo
shll
xchg
or
push
jg
mov
cmp
js
mov
scas
sbb
clc
cmp
dec
movsb
pop
fxch
xchg
cmpsl
xor
movsb
or
insb
loope
pop
inc
sbb
pop
mov
sub
dec
repz
and
pop
xchg
mov
nop
mov
scas
sbb
sarl
push
push
rorl
mov
aad
lods
sbb
sub
xchg
addr16
mov
mov
xor
mov
std
or
repnz
sbb
xor
push
xor
pop
mov
cmp
movsl
fstps
mov
mov
iret
ljmp
clc
xchg
cmpsl
and
mov
jbe
les
je
or
push
xchg
imul
dec
out
mov
test
mov
iret
les
jge
sub
into
daa
fadd
inc
and
push
nop
cld
fidivrs
out
pop
std
mov
loopne
adc
mov
jne
test
xor
push
sub
ss
jne
int3
xchg
call
fcomps
mov
pop
lret
sub
adc
push
test
push
aad
adc
or
ljmp
cli
xchg
mov
cmp
push
mov
dec
add
push
cmp
movsl
cmp
cmc
pushf
adc
daa
mov
xor
xchg
es
fidivrl
jnp
je
ficompl
ficompl
ret
xchg
dec
xchg
and
cmc
sub
sbb
mov
int
sub
idivb
out
xchg
clc
cld
out
or
aad
push
or
subb
inc
fidivl
xchg
dec
into
jmp
add
popa
sub
int3
inc
aam
es
and
test
adc
int3
push
in
std
inc
in
add
inc
sbbb
popa
inc
xor
xor
lret
push
adc
lods
adc
cmp
imull
cs
pop
icebp
sti
aas
lea
mov
cli
fwait
sti
clc
jmp
mov
and
add
mov
xchg
sbb
xor
test
loopne
mov
jl
push
out
sbbl
clc
jb
movsl
adc
popa
push
fs
les
pop
flds
or
test
mov
mov
rcrb
inc
xchg
jge
mov
push
hlt
push
fidivs
aam
insb
mov
cmpsb
clc
sarl
daa
inc
syscall
sub
das
push
and
jmp
adc
push
and
pop
scas
daa
loope
ficoms
sbb
pushf
imul
dec
push
xchg
add
fsts
cmpsb
in
dec
test
jmp
sub
pop
fisttpll
mov
sbb
popf
outsl
dec
sar
mov
sub
inc
jle
mov
stos
inc
out
mov
aas
pop
das
jns
rcll
sub
pushf
xorb
add
jae
push
xor
and
leavew
mov
dec
cld
cmp
leave
pop
out
sub
sub
sbb
cmp
pop
int
inc
rorl
sub
add
push
add
stos
mov
jmp
xor
sbb
xor
es
cmp
pop
dec
inc
outsl
insb
into
push
xor
stos
popa
mov
push
andb
jns
std
and
pop
stos
fs
mov
sub
and
pop
daa
add
sub
adcb
lock
enter
xor
push
xchg
test
mov
and
jb
shlb
mov
fs
xchg
fst
call
in
or
lea
jbe
lcall
mov
rol
dec
mov
push
ret
test
leave
mov
cmp
or
xchg
mov
les
push
jno
and
loope
rcr
sbb
sbb
push
in
enter
lods
mov
sub
xor
sbb
or
push
lock
fstl
xor
jg
and
inc
mov
jb
lret
lods
outsl
pushf
xchg
push
adc
inc
in
scas
xchg
mov
xchg
mov
mov
adc
mov
inc
int3
enter
aaa
xor
shrb
stc
sti
out
sahf
outsb
outsl
mov
dec
mov
sub
lock
sti
fisubrs
xor
arpl
xor
xchg
mov
cmpsb
aam
mov
xchg
into
mov
cmp
jg
cmpsl
push
sbb
fisttpll
xor
fmull
fwait
enter
push
push
push
mov
jmp
stc
xchg
cmpsb
aad
dec
mov
shll
out
mov
cmc
test
stos
xor
or
and
neg
sbb
sub
out
loope
lods
cmp
jmp
mov
cwtl
jle
mov
sbbb
loope
ret
inc
cmpsl
insb
lret
adc
push
mov
packuswb
ret
out
scas
nop
mov
xor
adc
cmpsb
loop
add
int3
push
jmp
es
sub
mov
repz
sub
pop
sub
add
out
adc
mov
inc
ror
fcomps
xchg
or
idiv
ljmp
cs
inc
mov
filds
pop
fwait
push
fcmove
lds
push
pop
test
jb
or
push
cld
jae
jmp
dec
in
fs
pusha
mov
cmp
addr16
sub
or
push
leave
test
in
and
mov
outsb
mov
ficoml
shll
aas
mov
jg
jns
pop
das
mov
into
pushf
jb
mov
incl
xchg
cltd
cltd
pusha
js
jmp
lds
xor
fwait
jne
es
stos
and
inc
push
jbe
inc
jo
cli
sbb
xchg
test
stc
mov
inc
pop
push
dec
test
xchg
mov
fbld
test
icebp
and
mov
lock
add
dec
adc
cmp
ds
jmp
cmc
imul
push
movsl
loopne
mov
ja
out
call
in
lahf
cs
int3
mov
sbb
push
jmp
cli
stos
nop
dec
add
jl
or
in
in
out
ljmp
push
mov
out
or
mov
pop
sbb
lock
mov
cmp
aas
pop
es
push
lods
in
mov
aad
shrb
jg
fnstenv
imul
pop
jb
inc
ret
fcmovu
pop
stos
mov
imul
cld
xor
ret
mov
xchg
scas
sbb
cmp
or
fwait
jns
fucom
loopne
and
adc
push
xchg
test
lea
ja
shrl
imul
cmc
and
cmpsb
add
inc
mov
in
inc
jle
xlat
mov
loope
lahf
push
and
imul
add
inc
mov
mov
js
lods
es
xchg
pcmpgtw
sbb
popf
fld
addr16
divl
in
sub
xchg
mov
and
iret
mov
fcmovnb
xchg
loope
push
daa
mov
repnz
cmp
or
movsl
shlb
rclb
pop
daa
test
mov
lret
or
je
nop
daa
xchg
inc
loope
mov
cli
negb
or
mov
jae
jns
add
shrb
cmp
and
cld
add
xchg
fucomip
cmp
insl
mov
mov
cmp
push
jg
pop
adc
cmovae
jae
push
and
andb
loop
add
mov
push
pop
in
cmp
adc
cld
xchg
jne
mov
jmp
arpl
sbb
je
and
sub
ss
inc
push
mov
enter
cmp
lahf
xchg
mov
rclb
pushf
lds
xchg
inc
addl
push
xchg
in
jb
addr16
std
popa
adc
sarb
rorb
or
mov
cmpb
jae
xchg
or
leave
or
aas
sbb
add
popa
add
nop
andl
rolb
pushl
dec
aas
dec
or
xor
inc
ljmp
mov
testb
mov
jo
rolb
or
mov
mov
movsb
xchg
and
les
stos
clc
sti
mov
test
sti
gs
cmpsb
dec
in
mov
fs
out
int3
mov
dec
and
cmp
jne
push
pop
lret
inc
mov
jmp
lods
xchg
repnz
sub
jmp
ds
mov
stos
fisubs
cmp
pop
aaa
jo
loope
rol
loop
aas
cmpsb
arpl
adc
ret
fdivrl
mov
test
and
sahf
jns
clc
cmp
jg
mov
or
adc
and
arpl
pop
daa
pop
cltd
shrl
cmp
in
call
push
sbb
imul
aaa
jmp
roll
xor
outsb
pop
ss
add
mov
int
daa
sub
cmp
imul
es
and
stc
jne
jg
push
xchg
sub
add
mov
pop
push
and
mov
pusha
inc
or
movsb
or
sahf
inc
xor
dec
push
cmpsb
xchg
mov
pop
loop
loope
scas
pop
cmp
sbb
repnz
push
in
sti
les
aaa
fisubs
data16
mov
lcall
cmp
cmc
cltd
add
ret
mov
mov
gs
xchg
aaa
sub
and
fsub
fimull
inc
push
dec
add
inc
fs
pop
and
and
nop
mov
lret
sarb
jg
mov
jl
pusha
inc
dec
mov
mov
ja
loope
addr16
subl
in
cmpsl
aas
cmpsb
bound
aaa
gs
cmpsb
sbb
out
iret
lds
sub
shll
cmp
jle
jno
xchg
xchg
je
loop
mov
mov
pop
shlb
sahf
int
xchg
lret
push
cs
notb
lret
xchg
leave
xor
repz
pusha
or
fiaddl
sbb
push
rcr
fstpt
jns
jae
ret
lret
adc
add
adc
pop
dec
xchg
dec
mov
data16
imul
xchg
xlat
pop
jle
les
test
sbbl
dec
sbb
cmc
out
adc
addr16
dec
rolb
xor
leave
jmp
addr16
gs
xchg
aam
sub
insl
ds
sti
adc
inc
push
aas
rcll
mov
dec
xchg
movsb
cmp
ss
loopne
push
xchg
mov
mov
or
add
dec
outsb
cmp
lret
inc
sbb
jecxz
dec
adc
stc
popf
push
adc
in
xchg
jae
add
add
pop
addr16
mov
loope
inc
mov
cmpsl
cmp
xor
sbb
xor
mov
rcll
mov
clc
sub
in
icebp
dec
fnstsw
ss
fdivrs
data16
or
pusha
inc
adc
and
movsb
dec
mov
inc
adc
jmp
out
xor
arpl
jns
dec
xchg
dec
testb
jg
sub
xor
andl
mull
mov
jle
mov
test
push
nop
mov
into
jbe
adc
mov
hlt
jno
inc
dec
aam
mov
mov
sbb
jge
mov
and
push
push
jne
add
pop
adc
mov
add
dec
cmpl
iret
xchg
fucom
in
push
or
xor
xchg
shlb
push
lods
pop
jo
sti
nop
lret
lret
rcll
fst
cli
sub
mov
vmwrite
int
add
in
and
pusha
or
bsr
cmp
mov
push
sbb
mov
and
cmp
xchg
adc
std
repnz
into
xlat
les
ja
in
jecxz
inc
addr16
lcall
and
sub
lcall
push
lahf
mov
ds
ret
daa
or
and
inc
jno
stc
sub
imul
xorb
push
push
sub
and
mov
popa
call
outsb
xchg
push
push
pop
xlat
jecxz
cmp
jnp
adcl
lods
popf
and
data16
out
pop
mov
popf
aas
sub
stos
sahf
ret
fisubs
ret
outsl
mov
outsb
add
aaa
sti
gs
jg
sahf
or
rclb
ljmp
std
ret
stc
and
pop
fwait
mov
sbb
scas
pop
push
mov
shl
cmp
pop
loop
ja
xchg
aad
dec
jle
mov
jae
ja
movsl
and
das
add
daa
dec
dec
mov
loopne
xor
xlat
aad
xchg
rcrl
sbb
and
fisubl
jns
and
fcmovnu
loope
mov
and
ss
sub
repnz
sub
movsb
pop
aad
adc
fdivrl
fwait
arpl
js
aaa
jb
add
dec
pop
jno
in
xor
xchg
and
sbb
rol
jle
insb
js
or
fstpl
aas
xor
or
lret
jnp
cmp
pop
mov
xor
xchg
jge
jmp
aam
push
dec
adcb
and
andb
jecxz
or
in
sub
cmc
ja
sub
shll
ret
push
nop
inc
mov
pop
std
int
int3
push
pop
cmp
ja
dec
and
in
hlt
stos
out
lret
mov
fcomp
roll
je
popf
out
jp
fldl
dec
dec
sub
xchg
adc
jbe
movzbl
icebp
fidivl
out
fisttpl
inc
mov
or
pop
enter
lret
popa
mov
add
cs
sahf
fnstcw
mov
lods
push
sbb
int3
push
xchg
cmc
adc
enter
outsl
dec
xor
dec
leave
lret
cltd
int3
xchg
dec
out
imul
xor
and
inc
ljmp
dec
repnz
mov
hlt
and
mul
cltd
sub
xchg
fsubrl
fimull
sbb
sbb
and
mov
add
xchg
pop
pop
faddp
jecxz
sbb
or
ja
jg
mov
ss
xchg
enter
cmp
xlat
lock
ja
adc
dec
adc
pop
and
pop
pop
xor
fwait
cmp
jb
int3
push
mov
into
mov
aam
push
xlat
mov
enter
lea
jg
bound
dec
out
lcall
xchg
dec
add
sarb
shl
adcl
xchg
push
xchg
dec
fs
ret
ret
dec
mov
fmuls
int3
pop
aad
loopne
sub
xor
jl
scas
mov
or
idivb
aas
cmp
je
lcall
daa
sub
dec
adc
xorb
cwtl
and
dec
fwait
push
or
icebp
notl
push
xchg
adc
aas
fwait
mov
xor
leave
jl
pop
inc
or
mov
popl
lahf
xchg
jmp
dec
test
fcompl
cmp
and
jecxz
pop
push
leave
lcall
mov
push
inc
dec
jb
outsl
cmpsb
sub
int3
xchg
cmpsb
js
mov
mov
pop
imul
sarb
and
dec
fldcw
mov
or
add
adc
mov
ret
xor
enter
loop
pop
xor
xor
dec
and
arpl
push
sti
cld
sub
dec
xchg
lods
jle
pop
ja
cmp
dec
cmc
pop
ljmp
ret
push
push
inc
xchg
sub
pop
adc
mov
jp
cmp
divb
xchg
lods
mov
xlat
jmp
cli
sbb
movsb
inc
cmp
je
repz
push
dec
cltd
jecxz
push
adc
push
sub
and
inc
repz
loope
adc
repz
mov
loopne
dec
sub
mov
push
mov
mov
stc
mov
sbbb
icebp
jae
int
in
mov
subb
cmp
imul
push
stos
test
shlb
and
rcrl
arpl
or
mov
xor
xor
andb
sti
mov
pushw
in
mov
jl
iret
xor
inc
test
jb
inc
pop
testb
cmp
insb
cli
out
movsb
xchg
imul
or
sub
pop
sbb
not
nop
popa
rcll
ljmp
xor
gs
lahf
or
test
jns
mov
popf
fadds
in
or
lods
jecxz
mov
mov
sub
clc
into
hlt
sub
xchg
cmp
jl
pop
out
mov
rolb
subb
pop
insb
popf
mov
into
or
movsl
mov
ja
push
stos
popa
pop
nop
fwait
lret
ss
xlat
mov
es
mov
jg
cld
dec
pop
test
imul
add
push
pushf
pop
test
jne
and
pop
lahf
sub
pop
testb
sti
sub
push
mov
mov
push
into
pop
mov
pop
xchg
mov
mov
flds
fcoms
cmc
out
scas
cmp
shrl
mov
subl
mov
jecxz
cmpsl
or
out
or
xor
push
inc
adc
lods
fadd
sbb
leave
or
mov
push
pop
rcll
push
imul
sbb
push
pop
inc
xchg
iret
mov
iret
add
xchg
mov
movl
inc
jno
mov
cmpsl
and
xor
inc
cs
in
out
jg
rorl
sub
les
subl
lcall
enter
pop
lea
out
lods
push
cmp
dec
cmpsb
rcll
pop
cltd
mov
jno
in
pop
aad
rclb
bound
cltd
mov
fs
pop
mov
insb
jmp
pop
in
add
push
out
xchg
mov
pop
push
xor
imul
xchg
mov
pushf
dec
mov
dec
jle
cmp
jle
lret
push
xor
cmc
or
inc
push
push
int3
out
xchg
iret
pop
mov
aam
lea
dec
iret
jl
xchg
xor
xchg
mov
aam
jp
dec
and
jnp
inc
call
fstpt
into
and
imul
jns
mov
mov
xor
inc
xor
js
dec
mov
stos
ret
mov
lret
xor
aaa
enter
mov
into
and
push
leave
arpl
dec
xor
jle
cld
daa
xchg
inc
sub
jecxz
mov
cmp
mov
jp
jbe
out
xchg
cmc
loope
sbb
push
pop
mov
pop
mov
arpl
div
jo
cmc
es
test
pop
push
inc
xlat
jl
fnstenv
jmp
insb
shrb
adc
dec
outsl
inc
push
lods
push
xchg
leave
je
cs
movsb
lds
mov
shlb
shrl
inc
cs
mov
inc
imul
sbb
push
outsl
jnp
imul
mov
xlat
and
or
pusha
mov
mov
dec
push
mov
aad
xchg
scas
das
xor
ds
movups
adc
shlb
es
ds
and
movsb
in
xlat
mov
mov
inc
xchg
outsl
loopne
sbb
sub
push
inc
jecxz
test
daa
loopne
pop
int
inc
movsl
test
mov
repz
test
jg
aas
pop
mov
rcl
orl
add
dec
imul
cmpb
cmp
and
sbb
ljmp
sub
adc
in
jle
xchg
cwtl
pop
xchg
sbb
aas
xor
push
mov
xor
addr16
aam
arpl
or
clc
mov
jmp
push
aam
xchg
movb
mov
push
outsb
repnz
mov
mov
leave
fdivrp
call
idivl
pop
inc
mov
pop
mov
std
mov
andb
cmp
jbe
bts
addr16
sub
shlb
and
mov
inc
lock
loop
mov
or
or
sbbl
inc
push
jno
sbb
leave
add
out
sbb
push
inc
pop
xor
frstor
aam
xchg
cmc
enter
inc
inc
call
adc
repz
cmc
jns
daa
xor
inc
or
stos
cwtl
dec
negl
adc
stc
mov
or
mov
dec
or
cs
jno
mov
out
sbb
and
dec
aaa
arpl
push
push
add
mov
sbb
fildl
pop
mov
jp
and
pop
adc
adcl
mov
and
leave
mov
adc
popf
lods
testl
in
call
dec
jle
out
jp
sbb
jecxz
sbb
stos
int3
shlb
mov
rorb
mov
fdiv
jmp
mov
cs
aas
out
mov
data16
sbb
jbe
xor
mov
pop
repz
mov
xchg
lret
push
adc
mov
mov
push
mov
dec
add
dec
es
lods
cltd
aaa
neg
jmp
ss
sub
jb
nop
ret
jns
ret
lret
mov
cwtl
pusha
add
jp
sub
xchg
jae
jbe
jge
xchg
dec
xor
daa
cltd
sar
inc
adc
jnp
addb
sub
jbe
xchg
mov
sbb
lods
or
push
out
shlb
lods
dec
push
aad
ret
jge
xchg
pop
jbe
ret
dec
pop
les
shr
xor
jb
dec
push
jl
mov
pusha
dec
sub
add
push
and
push
jnp
add
sbb
mov
xchg
lds
and
shr
xchg
and
add
or
pushf
sub
addr16
mov
xchg
ljmp
out
jle
aas
mov
call
dec
ss
iret
jl
push
mov
gs
sbb
bound
and
ds
jle
mov
dec
mov
mov
je
xor
hlt
fnstsw
and
pop
xchg
fs
in
dec
cmp
push
jns
shll
inc
push
movsl
dec
sub
cmpl
call
popf
lods
mov
jne
dec
jno
xlat
adc
test
inc
mov
cld
pop
mov
mov
mov
shlb
cwtl
cmc
push
and
pop
jmp
clc
idivb
sub
sub
mov
xchg
cmp
cld
dec
and
sahf
jno
out
lea
fsubs
pop
sub
in
cmc
cmc
cmp
jle
mov
jb
pop
mov
pop
push
sub
push
and
jg
mov
movsl
insl
adc
cwtl
scas
loopne
cli
dec
and
out
mov
push
daa
xchg
dec
xchg
je
add
out
mov
pop
push
sbb
jmp
push
push
cli
sub
add
pop
push
and
mov
std
pop
cwtl
adc
dec
daa
es
fcmovbe
mov
loop
adc
add
inc
stc
out
mov
sbb
lahf
in
int3
pop
pop
daa
lock
pushf
xchg
imulb
int
outsl
ljmp
push
adc
jne
mov
push
inc
div
aas
and
pop
mov
jb
push
dec
xlat
dec
fiadds
pop
sahf
enter
cmpsl
ss
mov
lahf
xorb
dec
int
arpl
xchg
jne
mov
xor
or
mov
jo
mov
mov
or
mov
jp
lds
pop
xchg
sub
xor
ret
cltd
or
or
dec
lea
cmp
sbb
mov
into
sub
fsubs
je
jnp
inc
sbb
sbb
pop
cmp
jge
mov
dec
jne
dec
xchg
jb
sbbl
pop
sbb
insl
jle
nop
push
xchg
rcl
inc
aas
aad
shrb
iret
mov
mov
pop
push
in
push
test
lahf
in
push
sbb
xchg
in
loope
ss
lods
shrl
mov
sub
lds
fistpl
push
sahf
imul
testl
fs
mov
andl
mov
rcrl
fisttpl
sub
stos
popf
mov
push
adc
xchg
inc
movsl
jecxz
scas
icebp
mov
dec
or
inc
sub
xchg
aam
andl
push
dec
scas
out
loopne
frstor
adc
dec
loop
les
sbb
dec
fs
outsb
mov
mov
outsb
sbb
mov
or
shl
push
push
adc
sbb
adc
dec
mov
mov
cs
mov
xor
loopne
xchg
in
xor
sar
loopne
in
aam
das
inc
imul
xchg
out
int
adc
fbstp
add
ja,pn
xchg
stos
push
inc
dec
jg
mov
pusha
pop
mov
fstps
loope
movsl
mov
ret
arpl
mov
adc
out
jbe
jge
stos
mov
mov
sti
bound
mov
leave
add
test
sbb
mov
push
inc
daa
mov
dec
adc
xor
push
and
repz
sbb
bound
out
push
scas
into
and
mov
xor
stos
and
cmpxchg
dec
mov
je
imul
repz
cmpsl
cmpsb
push
das
loop
daa
push
push
mov
or
mov
lock
in
ss
mov
add
mov
sbb
sub
add
add
and
mov
push
jb
test
mov
inc
inc
bound
int
clc
cmp
push
in
and
inc
lock
in
xchg
jmp
mov
adc
fucomi
xchg
mov
sbb
rcll
pop
mov
rolb
rcl
je
fs
pop
dec
loopne
hlt
mov
sbbb
mul
scas
xchg
cmp
jecxz
cli
mov
pop
pop
and
push
not
loope
insb
mov
out
out
popf
in
or
dec
inc
xchg
inc
inc
insb
jb
sbb
pop
pop
cmp
mov
and
xchg
mov
andl
inc
add
push
mov
jl
add
lds
pushl
push
jo
jo
push
sub
sbb
aam
outsb
mov
inc
adc
jb
call
outsb
xchg
sub
pop
add
sbb
dec
dec
ja
pop
cli
mov
test
popl
and
je
aas
cmp
adc
lret
mov
push
mov
mov
adcl
fnsave
dec
fs
nop
mov
sbb
xchg
mov
insb
dec
push
xor
movsl
pop
xchg
xor
or
sbb
push
add
movl
inc
push
jne
mov
lret
xchg
fldenv
sahf
sti
jne,pt
lahf
insl
mov
pop
fwait
dec
fs
or
jb
popf
es
xor
mov
jp
pop
dec
int3
test
jle
dec
sub
out
add
jmp
jo
fwait
sti
addb
push
adc
adc
nop
jge
sti
outsl
xchg
push
shrl
out
cmp
adc
hlt
popf
jp
and
dec
or
test
cwtl
add
outsl
sahf
jecxz
lods
add
pop
inc
sar
out
adc
cwtl
push
mov
push
mov
ret
pop
mov
adc
mov
bound
push
xor
loopne
insl
icebp
aam
fistps
dec
in
cli
ret
in
mov
xlat
data16
or
lcall
or
jb
mov
lret
cmpsl
cmp
pop
push
add
xor
push
jge
and
orb
nop
jmp
cmp
in
sbb
push
dec
clc
adc
mov
cltd
cmpsb
cmp
adc
add
inc
aas
shll
aaa
fucom
mov
int
xlat
mov
adc
enter
mov
mov
mov
les
mov
pop
mov
jb,pt
ja
in
push
add
xor
movsb
lock
ficoml
insl
xchg
mov
sbbl
mov
pop
or
in
gs
stos
scas
jo
or
jne
sbb
test
lods
sub
aad
or
in
xor
mov
dec
and
mov
jge
lds
lret
mov
cltd
shl
cld
adc
int3
fcmovbe
negl
or
test
cli
xor
jl
xor
inc
imul
rcrb
jle
cmp
adc
sarb
pop
js
adcb
movsb
shr
ljmp
lahf
sbb
jmp
cld
xor
testl
lahf
pop
repnz
xlat
add
enter
daa
mov
push
sub
sbb
jg
lods
outsb
push
cltd
push
jle
fwait
arpl
out
in
dec
push
test
sub
fwait
mov
and
mov
inc
cli
push
out
mov
mov
jge
cmpsl
ss
ja
jno
pop
xchg
push
push
fisubrl
int
adc
sub
pop
fistl
inc
jle
incb
mov
mov
out
imulb
fmull
ret
ret
stos
mov
cld
mov
icebp
pop
das
sbb
aaa
dec
push
imul
mov
xchg
jp
dec
sub
subb
cmc
inc
shll
add
push
mov
pop
mov
push
ss
xor
jb
outsb
stos
pushf
xor
rolb
sbb
cli
inc
xor
push
and
push
push
pop
mov
rclb
xchg
shr
out
add
cmp
mov
push
jnp
pop
fs
add
dec
bound
subl
jp
mov
out
das
out
sarb
inc
sub
ficomps
inc
rol
lcall
or
xchg
divl
mov
popf
push
lods
add
outsb
cmpsb
jo
mov
lods
imul
xchg
outsb
imull
sbb
pusha
pop
sti
add
loope
cmp
xchg
hlt
popf
inc
adc
insb
cmp
xchg
andb
mov
loopne
ret
or
les
cmp
cmp
sbb
repnz
fisubrl
ss
rcl
jecxz
daa
cmovne
xorl
mov
mov
aam
aaa
mov
mov
imul
icebp
inc
repnz
adc
xor
add
or
sub
adc
pop
jo
decl
pop
lcall
jle
inc
jl
push
outsb
mov
into
scas
dec
add
hlt
inc
loopne
inc
xchg
in
xor
stos
out
sbb
mov
sub
rcr
adc
into
mov
xchg
arpl
jb
jl
xor
iret
rcll
stc
push
pop
xor
adc
pop
xor
inc
popf
mov
lret
lret
test
inc
bound
arpl
mov
not
imul
stc
push
arpl
xchg
andb
rolb
js
dec
xchg
testb
das
js
cmovb
mov
jmp
adcb
mov
call
ljmp
test
sbb
inc
aaa
data16
loope
outsl
mov
xor
adc
arpl
cs
fcomps
test
mov
jge
test
push
subl
scas
fildl
add
push
xor
xor
hlt
insb
cmc
push
dec
out
mov
or
jmp
mov
xchg
and
jmp
jae
push
aas
sarb
adcb
in
daa
adcb
out
push
andl
fwait
push
idiv
or
mov
stos
pop
es
mov
mov
das
cmp
movsb
int3
stos
adcl
call
inc
sub
ret
push
lret
add
push
push
stos
or
push
jp
rcll
jb
xorl
enter
daa
and
orb
mov
fwait
mov
mov
loopne
orl
jnp
aad
lods
push
pop
loop
mov
mov
mov
xchg
push
cmp
out
mov
in
jg
add
fistl
mov
negb
lret
mov
test
insl
std
shrb
cmpsb
rcrb
ss
pop
rorb
stc
call
inc
mov
mov
ret
out
push
inc
mov
ret
cwtl
pop
mov
mov
in
andb
mov
jns
and
xchg
roll
dec
out
add
nop
neg
xlat
mov
xor
icebp
cwtl
icebp
test
mov
repnz
repz
xchg
mov
xor
push
jl
or
jbe
push
out
loop
jns
sbb
jmp
popa
dec
or
mov
sub
insb
lock
pop
xchg
lret
rol
bound
daa
ss
lock
fbld
jnp
andb
je
mul
repz
inc
mov
fdivrl
repnz
push
dec
fstpt
insb
popf
pushl
jge
ja
pop
pop
jb
aam
lahf
mov
adc
scas
out
add
in
rcll
or
and
lret
adc
jae
sarb
sahf
pusha
arpl
int
std
or
jecxz
mov
test
xor
xchg
inc
jno
pop
adc
aam
sahf
push
repz
inc
aam
insb
xchg
lock
lahf
rolb
sbb
mov
and
mov
xor
sbb
icebp
mov
in
adc
enter
insb
fdivrl
inc
ret
stos
add
adc
jae
loop
ss
hlt
scas
lahf
cmp
lcall
push
jmp
ja
jmp
jg
lods
ja
xor
mov
xchg
lret
outsb
pop
pop
pop
repnz
mov
popa
fwait
pop
fldcw
push
idiv
std
dec
or
clc
jmp
fdivl
ret
cltd
xchg
push
fisttpll
into
hlt
movsb
cmp
aad
lcall
inc
inc
push
push
call
mov
insb
push
mov
ror
or
add
sarl
sbb
xor
sbb
sbb
add
popf
mov
jb
aam
adc
pop
aad
mov
test
lds
in
dec
mov
test
out
fdivs
lret
pop
shll
adc
mov
and
push
mov
cmp
addl
push
pop
or
mov
lods
scas
sub
sub
cmp
dec
std
and
or
rcrb
cmp
add
test
sub
sbb
or
push
mov
repnz
subb
loopne
out
sbbb
js
arpl
nop
jg
inc
out
xchg
jl
mov
bound
shrb
in
xchg
push
mov
push
sbbl
scas
test
jae
mov
sub
das
mov
jg
xchg
ja
xchg
js
sbb
and
stos
mov
push
cmp
push
cmp
xchg
loopne
xor
lahf
mov
add
xchg
sarb
repz
pop
test
jns
je
cwtl
add
enter
scas
movsl
push
stos
and
sub
scas
cld
mov
out
pop
sub
fcmovne
aad
rcrl
mov
cs
pop
ljmp
add
sub
jl
or
sbb
jb
mov
cld
pop
and
mov
cmp
sti
fnstenv
iret
dec
test
pushf
loopne
or
or
adc
int3
call
pusha
test
inc
sub
rclb
les
repnz
movsl
out
lret
in
scas
ret
add
fidivrl
mov
cmpsl
aas
xchg
ds
dec
mov
add
arpl
push
cld
sbb
iret
frstor
inc
incl
sbb
dec
movsl
sbb
xchg
std
add
push
lds
pop
pop
mov
mov
mov
pop
push
das
cwtl
inc
xchg
shlb
adc
iret
sbb
decb
dec
repnz
push
add
pcmpgtd
ret
dec
addr16
xlat
mov
jge
pop
cmp
cltd
test
push
jecxz
jecxz
iret
cwtl
cld
fs
jecxz
out
xor
cmp
xchg
and
add
mov
call
or
cli
es
je
sub
adc
loope
jne
fsub
testb
stc
popf
dec
rcrl
ja
push
in
sbbb
jno
addr16
push
xchg
fidivs
arpl
sbb
loop
mov
cmp
xor
mov
mov
xor
test
cmpsl
add
in
sub
jecxz
dec
lds
iret
lods
test
cmp
xchg
mov
ja
push
add
mov
xchg
call
aad
pop
push
dec
das
inc
lret
jge
pop
iret
aam
and
leave
pushf
stc
aaa
sti
or
inc
inc
popa
outsb
xchg
or
push
loopne
mov
ss
cmp
ljmp
lahf
call
rcll
roll
loop
mov
repnz
pop
mov
dec
loope
mov
clc
out
dec
imull
call
inc
repnz
pop
inc
xchg
sbb
sbb
add
mov
cs
mov
arpl
stos
adc
sub
cmp
xor
mov
pop
mov
cmp
add
mov
mov
pop
and
pop
add
mov
pushf
inc
cmpsl
data16
sbbl
es
cmp
loopne
inc
sahf
inc
and
pop
repz
das
popf
out
and
outsb
clc
xchg
ja
fcompl
fadd
add
test
dec
fwait
mov
hlt
loop
pop
cld
jmpw
lret
in
cmp
stos
cld
cmp
test
js
int
mov
ds
push
bound
rolb
shll
push
add
add
popa
xor
inc
push
rclb
mov
stos
sbb
ja
das
sbb
xchg
jge
fcmovnb
push
add
xchg
pop
test
adc
cltd
xchg
add
lock
xchg
and
aaa
test
push
es
adc
dec
lret
test
fimull
stos
jo
sbbl
sti
loopne
jne
test
les
inc
lods
jnp
clc
add
mov
xor
pop
ret
xor
xchg
cltd
out
mov
cltd
mov
or
cmp
mov
push
repnz
sub
pop
sbb
lods
iret
sbb
movb
xlat
adc
enter
cmc
cmp
dec
pop
push
pop
pop
jp
cmp
sub
push
inc
push
lcall
cmp
fsts
xadd
movsb
mov
sbb
clc
and
push
cwtl
mov
js
pop
add
dec
loop
test
loopne
cmc
inc
cmpsl
jecxz
and
mov
mov
aas
sahf
jge
pop
fstpt
jo
inc
test
lcall
cli
push
xchg
or
fidivs
sarb
jp
cs
icebp
sbb
inc
push
xor
cmc
aad
mov
lret
lcall
mov
ljmp
xchg
lds
inc
or
push
mov
mov
cmpb
push
sub
inc
mov
imul
fwait
mov
cmp
mov
and
cmpsl
mov
jae
sti
pop
adc
xchg
push
movsb
cmp
sub
cmp
jmp
lock
xchg
fiaddl
out
movsb
mov
outsb
pop
aas
imul
or
int
push
push
push
cmp
les
test
es
inc
xor
mov
cmp
fiadds
inc
inc
jnp
pushf
dec
dec
lahf
adc
mov
repz
lret
dec
mov
add
add
jno
ss
imul
sub
out
jg
cltd
mov
rol
sbb
jecxz
subl
rclb
sarl
cmp
bound
and
fs
cmpsb
cld
sbb
jl
inc
or
push
ret
add
xor
sbb
rorl
fnop
aad
outsl
shlb
xor
test
test
fisubs
jge
inc
ljmp
mov
lods
jmp
js
fistpll
sahf
cli
das
mov
mov
cltd
cmpsl
neg
sti
movb
jmp
xor
into
dec
in
mov
addb
out
pop
icebp
notb
sbb
push
das
das
push
into
pop
mov
in
xchg
dec
xor
pop
repnz
jns
test
add
xor
inc
mov
jnp
xchg
cmpsl
xchg
xor
inc
jns
loop
outsl
adc
jb
cmc
outsb
xorl
nop
cmc
insl
and
sbb
pop
push
adc
pop
mov
mov
add
test
mov
hlt
or
xchg
and
pop
outsl
ret
clc
insl
clc
sahf
rclb
dec
xor
repnz
icebp
dec
add
fidivrs
out
adc
jno
rorb
mov
ret
adc
ss
jne
aas
das
insb
testl
aas
in
add
in
sub
dec
in
adc
stos
pop
bound
or
bound
xchg
mov
pop
pop
inc
popa
inc
inc
rclb
mov
fbstp
jns
clc
gs
shlb
shr
jne
xlat
or
pushf
data16
data16
xchg
out
stos
push
xchg
es
adc
ljmp
pop
popa
je
mov
in
add
push
adc
cmp
dec
test
ja
or
ret
bound
aad
shl
pop
das
in
cltd
enter
gs
push
sub
xchg
push
pushf
enter
dec
cmp
outsl
add
push
sub
sbbb
popf
jmp
dec
ss
ficomps
insl
adc
aam
out
bound
in
ljmp
sbb
or
pushf
pop
aaa
dec
adc
iret
sub
leave
push
leave
popa
xchg
mov
incl
cmpsl
jmp
jge
dec
fwait
dec
shll
lods
inc
cltd
pop
and
dec
std
les
mov
xchg
jns
in
iret
pusha
je
mov
rorb
jbe
xorb
mov
call
nop
sti
pop
xchg
dec
inc
sbb
idivb
cmp
adcl
mov
mov
out
scas
jbe
sarb
fs
ret
aad
std
ret
imul
cmp
das
dec
push
and
mov
jns
cmp
aas
fistpl
incl
gs
test
cmp
popa
icebp
pop
fsubs
sub
and
xchg
sub
adc
pop
jno
sti
outsb
enter
sbbl
jle
aam
dec
lret
adc
or
inc
dec
iret
cmp
inc
inc
ja
lahf
fisubl
push
add
xchg
cld
insl
jecxz
mov
les
adc
loop
cmpsl
push
test
or
adc
fsubl
cmpsl
out
shlb
push
out
or
add
icebp
or
xlat
aaa
fistpll
idivl
in
xchg
or
nop
in
sti
push
and
sahf
and
cwtl
lret
mov
into
or
outsl
lret
cli
sbb
ja
in
pop
lock
and
cmp
mov
clc
inc
mul
andl
idivl
jge
jae
enter
mov
xchg
in
lret
or
dec
call
fs
repz
jb
push
popa
jle
lret
scas
adc
mov
imul
and
stos
inc
js
loop
fisttpll
push
sbb
pop
push
jp
push
enter
dec
divl
clc
movsl
lds
in
andb
add
testb
cwtl
or
inc
andl
and
pop
adc
cwtl
cmp
push
or
cmp
dec
sub
mov
sbb
int
shlb
pop
pop
jecxz
hlt
pop
sbb
pop
cmpsl
push
das
lds
xchg
insb
int
add
mov
les
jl,pn
cmp
call
inc
add
jb
lds
and
shlb
cltd
cmp
pop
leave
inc
mov
fdivrs
in
popf
fisttps
clc
rcr
mov
push
mov
sub
pop
fs
shl
mov
xchg
pop
movl
mov
xchg
mov
pop
fstps
sbb
and
add
rclb
pop
icebp
adc
test
xor
out
mov
mov
or
mov
inc
push
ret
mov
enter
inc
mov
add
mov
adcl
push
xchg
insb
jecxz
fcompl
pop
es
das
mov
mov
addr16
popa
xchg
hlt
out
jo
jnp,pt
cmp
push
pop
out
mov
stc
aas
test
xlat
arpl
mov
stos
orb
cmc
cli
sbbb
les
push
lret
mov
cwtl
jg
and
push
mov
enter
mov
mov
sub
pusha
sbb
cwtl
fnstcw
push
mov
push
dec
xlat
or
inc
sub
dec
out
fmul
push
movsl
cmp
fsts
mov
xor
cli
mov
lods
pushf
rorb
mov
pop
xchg
aas
pop
test
arpl
loop
outsb
sub
into
mov
sahf
mov
sub
lock
pop
mov
pop
jge
fdivr
xor
or
sti
popa
xor
xchg
and
gs
jmp
and
push
mov
inc
push
adc
or
or
int
xchg
imul
dec
add
fidivrs
mov
in
out
sbb
pushf
mov
repz
outsb
mov
and
jmp
jg
push
in
push
movsb
into
fldz
dec
fildll
dec
jge
jno
arpl
mov
mov
adc
ljmp
bsf
pop
push
leave
aam
inc
xor
outsl
push
js
push
lret
push
outsl
mov
rorl
mov
lcall
and
nop
dec
pusha
inc
jg
fwait
mov
addr16
jle
or
inc
push
mov
inc
stc
es
ficoml
xchg
mov
push
ja
movsb
insl
sub
das
lret
xor
inc
lds
dec
in
repnz
dec
push
xchg
jno
sub
into
fwait
push
arpl
or
movsl
fisubrs
loopne
out
in
leave
mov
es
xor
popa
clc
stos
push
mov
jo
sbb
mov
push
pop
aam
aas
xchg
scas
loopne
rcrl
call
hlt
jmp
les
mov
mov
jmp
outsl
lret
repz
mov
in
inc
cmc
pop
enter
mov
pop
xor
aas
test
mov
sub
lea
sbb
jg
repz
fwait
xor
cmc
pop
mov
cmp
pushf
cmp
pop
pop
mov
mov
int
cmc
push
lret
mov
cwtl
mov
lahf
loop
ja
inc
and
push
mov
outsb
lcall
int3
int
push
mov
push
dec
hlt
sub
adc
xchg
sbb
or
push
mov
push
andl
jl
cmc
notb
push
fdivs
aam
jo
mov
outsb
jl
jmp
mov
sub
inc
xlat
mov
loop
lea
sub
mov
out
sub
mov
sbb
test
xchg
fisubrl
sbb
popf
inc
movsb
in
cld
hlt
outsb
inc
rcll
cmp
cltd
fistps
test
dec
addr16
sub
push
mov
into
xor
sahf
loop
add
sahf
mov
jle
add
sbb
xchg
cli
or
xchg
mov
sbb
jmp
and
das
mov
lock
into
fs
mov
ret
xor
cmp
and
add
inc
loope
cmp
imul
aam
xor
fmulp
fimuls
pusha
add
lock
hlt
in
int3
mov
sbb
and
ljmp
std
fsubr
rclb
lahf
aam
push
pusha
dec
mov
push
or
in
mov
dec
sub
jl
ficompl
fs
mov
shrb
aas
gs
cli
scas
shlb
aad
adc
jle
sub
popf
dec
mov
jmp
xchg
mov
divb
rcll
outsl
fiadds
and
push
mov
mov
testb
xlat
xchg
adc
xchg
jno
xchg
cmpl
sahf
add
repnz
imul
push
leave
sub
xchg
cmp
pop
sub
in
orl
popf
aam
sbb
inc
outsb
sbb
shl
jecxz
mov
push
aaa
loop
cmpsb
lock
dec
ficompl
add
fldcw
repz
jecxz
notb
and
cmpsl
mov
imul
lock
dec
es
test
lret
dec
pop
mov
push
mov
xor
dec
loopne
cwtl
push
in
push
xchg
jle
movsl
or
mov
push
jno
cmpsl
and
push
js
pop
sub
lods
jp
mov
leave
loope
cmpsl
xor
leave
test
cmp
outsl
data16
mov
js
ret
das
xchg
mov
sbb
lcall
mov
dec
sub
mov
daa
inc
mov
or
int3
insb
leave
das
fcoms
daa
sub
add
and
add
xor
orl
pop
dec
or
popa
jb
cmp
mov
sahf
jp
or
mov
sahf
xor
lahf
or
pop
push
inc
in
push
jo
cmp
lcall
stos
sbb
mov
push
icebp
int
ja
push
mov
inc
inc
mov
stos
sub
out
or
sbb
lahf
mov
mov
sub
xchg
stc
sub
mov
add
out
daa
out
dec
dec
or
mov
test
jle
dec
mov
lods
jb
push
repnz
dec
les
sbb
lahf
mov
adc
xor
popa
cmp
adc
mov
adc
push
js
sub
mov
sub
loop
mov
pop
and
xchg
or
ret
mov
out
jmp
repz
add
cmpsl
imul
sbb
scas
jp
dec
shlb
mov
lods
enter
dec
pop
inc
or
jo
pop
pop
sub
xor
inc
pop
jns
or
mov
daa
sub
out
sbb
shrl
pop
in
jb
rcr
mov
sahf
leave
ds
imul
es
push
mov
mov
cmp
jg
clc
mov
stos
mov
xor
fiadds
pushf
mov
add
xor
cmp
sub
add
arpl
jo
push
xchg
or
jg
push
or
inc
mov
fdivrp
sub
xchg
stc
testl
add
dec
pop
inc
cli
mov
jmp
sbb
or
mov
std
or
jle
jle
test
pop
aam
jno
mov
mov
imul
idivb
dec
ss
dec
mov
hlt
mov
and
fistl
dec
sbb
fbstp
xor
mov
or
sub
rolb
adc
xorb
mov
push
inc
push
test
jae
adc
dec
loop
enter
add
in
stos
cld
lret
cmc
sub
mov
clc
data16
jmp
dec
loopne
es
adc
roll
faddl
xchg
push
sbb
sbb
cli
add
inc
int
test
loop
pop
xchg
push
add
and
test
stos
xchg
push
outsl
es
ret
sarb
sub
mov
aam
jmp
mov
sub
sbbl
mov
mov
es
iret
imul
nop
addb
ljmp
rcl
add
jecxz
jecxz
fs
push
push
icebp
cmpsb
xchg
push
loope
mov
out
xor
movsl
out
icebp
inc
sbb
ja
pop
movl
test
mov
int3
dec
xor
and
lcall
inc
jl
ss
add
into
decb
lcall
push
mov
sub
add
cmpsl
jle
mov
add
cmpsl
in
and
out
inc
mov
xchg
sti
jne
addr16
stc
cmpb
dec
mov
push
adc
sbb
jg
jne
cwtl
dec
dec
test
sbbb
sahf
mov
insl
stc
xlat
dec
mov
std
cmp
dec
and
jno
xlat
lods
stos
int3
dec
jecxz
add
cld
cmp
inc
and
jle
jmp
je
push
out
cli
dec
jl
cmpsl
icebp
add
jb
inc
mov
in
or
inc
sarb
ljmp
xor
sub
cmp
dec
jp
clc
in
icebp
pushl
sbb
mov
sub
lcall
mov
cs
fimuls
jp
mov
and
pop
pop
mov
test
jmp
popa
jl
call
hlt
jnp
es
sub
das
xchg
mov
cmpsl
movsb
adc
imul
and
adc
sub
sub
lret
push
lods
fistpll
xor
jge
data16
pop
push
scas
repnz
cmpsb
imul
int
stc
pop
jp
add
clc
and
or
popa
mov
andb
lods
popa
inc
xor
test
mov
hlt
sbb
insb
jge
sub
imul
mov
repz
std
ljmp
jle
sbb
outsl
adc
pop
dec
lcall
add
outsl
cli
jb
retw
dec
jo
mov
push
das
pop
mov
popl
movsl
sti
mov
mov
in
adc
push
or
repnz
cmp
cmp
cltd
push
push
xchg
imul
sti
push
test
fisttpll
aad
add
jle
push
jl
xor
add
fisttpll
push
into
call
arpl
inc
out
adc
and
push
mov
mov
bound
aam
mov
lods
add
movsb
mov
or
xlat
jg
add
sahf
movsl
push
test
aam
es
and
cwtl
ds
push
test
push
inc
xchg
dec
sub
jg
pop
sbb
or
jmp
adc
xchg
jp
lcall
es
sbb
lods
mov
addl
lret
dec
jmp
pushf
popf
leave
lods
aam
movsl
test
pop
pop
xor
ret
shlb
bound
or
adc
push
mov
mov
hlt
mov
mov
arpl
mov
mov
jge
ud0
push
dec
cmp
mov
pop
lods
lea
pop
pop
jb
sbb
loop
scas
xlat
sub
cmpsl
mov
inc
mov
aas
cmp
pop
leave
cmp
jg
fbstp
lods
pushf
mov
xchg
neg
gs
cli
out
adc
inc
push
scas
jg
sbb
loope
test
aaa
test
in
insl
mov
jns
mov
cltd
push
sbb
jnp
gs
add
daa
js
nop
mov
ss
fidivl
in
les
inc
pop
daa
pushf
call
arpl
sub
int3
or
jp
push
xchg
les
adc
clc
leave
repnz
push
xchg
cmp
sti
sar
shl
ret
adc
outsb
xchg
test
or
mov
jmp
push
aam
xchg
sahf
mov
dec
out
dec
xlat
sbb
gs
test
jmp
jb
rcrl
movsb
push
and
push
push
test
test
pop
sbb
jge
lods
orl
or
xor
pushf
lock
out
adc
jnp
pop
add
xlat
mov
test
inc
inc
subb
hlt
and
dec
nop
ss
insb
icebp
icebp
pop
xchg
xchg
enter
inc
popa
cmp
enter
jae
mov
clc
jl
loop
out
jbe
mov
xlat
pop
xchg
jl
es
cmp
jb
sub
shlb
es
xchg
cmp
mov
outsl
xor
mov
les
sub
shlb
mov
pop
adc
jne
jae
jae
test
mov
adc
mov
in
faddl
fisttpl
dec
push
in
loopne
cwtl
cld
ficoml
pop
mov
add
add
pop
cli
arpl
scas
push
fwait
movl
mov
push
jge
ss
mov
icebp
cmpsl
gs
sbb
push
je
std
xor
mov
fistpl
rorl
stc
dec
daa
cmc
pop
mov
mov
idivl
mov
push
add
ret
cmpl
rclb
dec
add
dec
repz
int3
test
cmpb
arpl
jmp
fnstsw
arpl
or
ds
pop
or
inc
jns
outsl
pop
repz
out
jle
inc
xchg
sub
mov
inc
pop
dec
mov
in
nop
sub
mov
xchg
pop
dec
pop
add
push
aam
cmp
lret
pop
lcall
pop
ss
mov
das
jp,pn
call
xor
dec
inc
mov
mov
mov
jae
movsl
lods
inc
aaa
clc
sbb
push
mov
out
pushf
push
xchg
add
jg
movsb
pop
sbb
das
lret
je
in
fwait
inc
add
pop
sbbb
jnp
and
xchg
les
fsubs
push
sar
lret
lock
subl
mov
mov
dec
test
fld
rcl
fwait
xchg
fldl
and
jmp
mov
pushf
inc
cmp
repz
cmp
inc
enter
pushf
je
cmpsb
pop
cmpsb
pushf
in
pop
icebp
popf
push
subl
clc
dec
pop
xor
push
dec
imul
std
jnp
ror
ja
mov
add
pop
clc
dec
stc
int
cmp
sub
loope
nop
inc
leave
jnp
out
sbb
cmp
push
xor
lods
test
fldenv
push
inc
dec
xchg
outsb
testl
push
test
and
adc
push
cmp
test
fistps
in
testl
mov
aaa
jns
lods
arpl
cmpl
subb
lea
mov
subb
sbb
cwtl
rorl
stc
out
add
movsb
jnp
mov
decl
jle
adc
sub
xor
pop
sbb
inc
sbb
loop
or
add
pop
inc
idiv
sub
out
addr16
fisttps
jmp
inc
xorl
sbb
cmpsl
je
dec
jno
xchg
int
push
cmc
and
lods
je
dec
fstps
iret
mov
jno
fadd
imul
inc
filds
lea
add
pop
enter
mov
arpl
jmp
xor
popf
cmp
sbb
pushf
and
xchg
mov
arpl
xchg
shrl
jl
fistpll
adc
cmp
es
and
les
sbb
cmp
xor
lahf
sbb
xor
aaa
nop
addb
out
and
dec
xchg
jmp
daa
dec
jle
scas
pop
sti
cli
add
mov
mov
imul
dec
mov
les
mov
cmp
pusha
int3
outsl
ja
jge
dec
xor
repnz
pop
ret
lea
rorb
push
popf
test
ret
xchg
in
movsb
or
and
dec
insb
cmp
mov
sarl
xor
dec
ror
adc
jmp
inc
fs
imul
jae
pop
out
and
test
js
jl
cs
jo
aas
imul
adc
in
mov
test
repnz
sahf
mov
movsb
outsb
cltd
aad
push
popf
sahf
mov
nop
dec
sub
lock
push
clc
fisubrl
cmc
divl
sbb
sub
or
iret
adc
xor
es
clc
mov
loopne
mov
mov
lods
clc
fwait
xor
jge
aam
test
and
dec
outsl
push
pop
mov
pop
jae
xor
int
enter
mov
adc
sbb
mov
cmp
cmpb
xlat
mov
aaa
mov
mov
loopne
andb
sub
cltd
inc
shrb
sbb
mov
cmpsl
lods
inc
mov
call
mov
sbb
repz
mov
or
insl
in
sahf
in
push
jne
push
movsb
aam
mov
cmp
pushf
push
arpl
mov
out
imul
sbb
mov
lcall
mov
sti
ljmp
pop
cmp
stos
pop
insl
xchg
dec
xchg
fidivrl
or
test
bound
cmp
and
movsb
addl
inc
rclb
cs
inc
mov
orb
jb
jp
aad
addr16
loop
jb
scas
es
sub
or
xor
scas
fs
add
scas
pushl
or
add
fbld
dec
push
adc
sbb
loope
push
aaa
xchg
aas
xchg
mul
lret
popf
cmp
pop
push
sbb
inc
dec
insb
sarl
jnp
adc
push
push
imul
lods
test
add
or
lcall
sub
divps
sahf
sbb
adc
jmpw
or
das
push
lret
sbb
imul
jb
das
shrb
mov
mov
mov
mov
icebp
cltd
ret
sub
jb
pop
cmpsb
iret
sar
sti
popf
fs
dec
adc
or
inc
movsb
or
mov
iret
xchg
mov
jp
subb
pop
xor
mov
pop
inc
insl
inc
push
dec
cmpsb
inc
shl
mov
fcompl
arpl
mov
nop
jo
lods
add
bound
out
loope
jb
lock
test
adc
jne
popa
movsl
xchg
xchg
gs
ljmp
js
push
sahf
out
not
ja
mov
test
xlat
ror
pop
sub
xorl
stos
mov
add
in
add
sub
loopne
dec
push
mov
dec
adc
pop
mov
push
std
fadds
les
cltd
jne
cs
lods
scas
lret
mov
add
and
or
mov
rorb
cwtl
ds
jne
add
loope
mov
xchg
xchg
xor
je
iret
rol
fs
btr
lret
mov
jl
xor
mov
into
xlat
lret
test
clc
sbb
rclb
fdivrl
je
cmp
out
xor
shlb
jle
rcll
stos
in
pop
sbb
or
bound
arpl
idivl
rcll
mov
repnz
mov
sbb
jge
loope
inc
shrl
adc
lret
out
mov
faddp
cli
sbb
aaa
dec
fnstcw
sbb
insb
pop
xchg
inc
mov
xlat
sbb
fs
jae
les
scas
sub
inc
jo
mov
xchg
lods
jl
pop
inc
cld
push
push
mov
lods
pop
push
pop
jae
loop
cwtl
daa
lods
aas
adc
add
lods
and
adc
or
inc
mov
add
adc
fstpt
daa
lret
clc
popa
and
jle
loop
jl
out
sarl
xchg
push
push
cmp
inc
mov
pop
scas
sub
mov
xchg
je
inc
stos
add
test
mov
adc
xor
dec
aad
pop
push
aaa
jne
mov
or
add
and
addl
xlat
popf
dec
pop
inc
fs
rorl
cmp
cmp
test
enter
mov
mov
data16
xchg
js
jne
lcall
pop
jns
cmpl
int3
mov
xchg
adc
push
daa
dec
ret
ds
test
add
ljmp
inc
sbb
idivl
loop
out
mov
shll
adc
imul
push
push
mov
inc
xor
mov
xor
xchg
jne
shrl
das
test
pushf
pop
cmp
stos
adc
sbb
bound
lret
jl
ret
cmp
cmp
mov
cmpsb
sarb
jo
inc
pop
mov
insb
push
cmp
es
jae
or
jae
ja
jne
rcrb
repnz
stos
mov
sub
adc
or
leave
adc
or
fst
mov
pop
popf
outsl
mov
dec
inc
cmp
mov
mov
push
push
add
sbb
xor
or
aas
cmp
cli
mov
dec
mov
jnp
cmp
mov
pop
daa
leave
or
in
in
mov
dec
xchg
xchg
mov
fbld
push
fisttpll
mov
and
mov
ljmp
addr16
dec
dec
int3
add
ds
pusha
outsl
popf
xor
mov
imul
dec
jle
pop
gs
jns
pop
addb
mov
les
pop
xlat
push
add
flds
inc
mov
mov
dec
sahf
loop
mov
fsubs
dec
xchg
leave
divb
xchg
sbb
dec
lods
popf
shll
or
jecxz
dec
mov
sti
sbb
pop
push
dec
mul
gs
ret
pop
lock
lds
mov
lret
xchg
imul
popa
in
int
adc
bound
mov
ja
mov
xchg
pop
fstpt
push
adc
jmp
and
push
cmp
mov
daa
jns
mov
imul
jne
lds
add
xlat
mov
mov
add
push
mov
sub
test
cmp
outsl
or
cltd
or
xchg
shr
jge
jle
cmpsb
xor
cmp
push
int3
leave
fidivl
mov
out
sti
sub
jbe
daa
push
enter
mov
mov
sub
jg
call
rcl
out
pop
jl
xchg
add
pop
sbb
cmp
std
loopne
adc
or
test
daa
sbb
repz
push
loop
mov
repnz
scas
movsb
cmpsb
jae
out
int3
xor
add
pusha
lods
xchg
jne
dec
out
sbbb
rcll
adc
xchg
daa
fcmove
out
in
push
dec
sbb
ret
inc
aas
xchg
or
pushf
inc
jp
inc
lcall
jae
sub
dec
cmp
push
mov
int
fdivl
cwtl
adc
xor
pop
push
movsl
mov
fistpll
push
jp
mov
rorl
data16
movsb
cltd
dec
pop
fwait
in
divb
lds
cmp
push
mov
cld
sub
xchg
dec
xor
or
insb
jecxz
or
aas
cld
movsb
pop
test
push
pop
xchg
pusha
inc
push
jns
and
mov
insb
fwait
cmp
mov
mov
sbb
out
fsqrt
es
jae
mov
jne
fwait
data16
ja
loop
and
rclb
sub
mov
sahf
iret
jge
stos
fwait
xchg
stc
jp
adc
out
cltd
cltd
sti
xchg
test
pop
push
loopne
dec
jecxz
es
adc
mov
and
fmulp
mov
fs
or
sub
fistpll
sbb
outsl
push
push
orb
cmc
inc
dec
jae
fdivr
movsl
loop
mov
bnd
push
inc
inc
lods
cmp
xchg
add
sbb
xor
shlb
push
mov
adc
inc
loopne
imul
inc
jo
jmp
or
push
mov
sahf
cld
jp
dec
jl
fs
and
jae
jp
xor
push
fcoms
cmp
je
iret
aam
cmp
push
cmpsb
xor
test
xchg
in
mov
outsb
mov
jne
mov
jbe
test
cmp
xor
imul
mov
popa
xchg
mov
bound
call
push
aaa
mov
out
jb
fsubp
cmc
je
mov
iret
fmuls
push
mov
cmpsb
sbb
add
sbb
fiaddl
add
roll
push
cs
aaa
xchg
xor
mov
inc
out
add
mov
mov
into
stc
or
jl
adc
xlat
xchg
mov
stos
mov
std
adc
loope
jbe
mov
adc
cltd
dec
je
dec
jae
jmp
std
ficoms
les
nop
call
push
and
cmpsb
jg
mov
xchg
lea
sbb
lcall
sbb
cmpsb
test
inc
fmul
adc
loope
cmpsl
fwait
jne
sub
in
inc
gs
xchg
inc
sub
or
out
mov
inc
jo
jl
xor
mov
xchg
into
addr16
jle
jns
pushf
insb
sub
pop
jne
dec
xchg
push
push
jecxz
mov
dec
push
out
scas
fwait
mov
scas
cmpsb
push
dec
mov
or
jge
mov
into
sbb
fptan
iret
sub
in
xchg
dec
push
jmp
push
xor
pop
pop
repz
stos
fiaddl
lcall
cmp
outsb
out
les
hlt
mul
call
sub
fdivs
inc
jns
sbb
or
inc
sbb
jl
in
daa
mul
jmp
push
add
jae
inc
bound
mov
pop
cmp
sub
int
dec
mov
mov
test
out
and
cmp
and
cld
arpl
std
hlt
ja
test
adc
call
lds
fcoml
imul
imul
add
lahf
jp
fdivp
daa
inc
or
push
ret
fsubr
and
mov
divl
js
sbb
pop
push
clc
in
xchg
pop
cli
clc
inc
push
xor
push
mov
mov
pop
fadds
mov
mov
or
stc
mov
mov
insl
and
mov
sbb
inc
shll
jns
sub
mov
pop
pop
mov
dec
wrmsr
jnp
adc
lods
bnd
mov
add
push
xchg
cs
sti
xchg
js
test
sti
and
lods
lret
pop
fcom
lds
fdivrl
stc
cmp
ljmp
subb
mov
inc
lods
into
lahf
shrb
data16
add
in
fwait
push
mov
popa
mov
mov
cmpl
mov
into
push
pop
enter
xchg
or
call
adc
mov
push
test
sbb
ss
jbe
push
dec
enter
popf
dec
push
pop
mov
inc
ljmp
aas
rorl
fs
test
xor
cmp
aas
push
shl
pop
fnstcw
sbb
mov
dec
daa
xor
loop
sbb
sub
xchg
adc
fs
push
xchg
lahf
add
in
fdivr
lods
test
sbb
leave
mov
and
mov
mov
lods
pop
lret
lahf
add
in
pop
or
xor
pop
sub
xor
dec
xor
test
cmp
into
loope
repnz
xor
mov
inc
nop
notl
sub
in
sbb
lahf
mov
lds
dec
lret
sbb
dec
xchg
lea
pop
push
inc
fistpl
xchg
lcall
xor
jae
icebp
pusha
sub
cmp
cmpl
cwtl
add
cmpsb
insl
repz
mov
mov
add
popa
sbb
cmp
cmpsl
int
test
lock
into
loop
jmp
push
lcall
cltd
push
std
or
mov
pop
adc
xor
inc
mov
pop
aam
push
pushf
mov
pushf
pusha
loop
or
sti
mov
xorb
push
inc
cmp
imul
dec
shll
xchg
xchg
mov
push
pushf
and
dec
push
push
and
lahf
sbb
mov
lods
addr16
push
adc
add
lret
sub
xchg
enter
sub
sbb
test
lds
addb
xchg
fisttpll
pop
iret
test
mov
adc
dec
jbe
xchg
repnz
jns
add
xchg
adc
dec
arpl
xchg
fsubrs
push
dec
push
xchg
lds
mov
cld
mov
int
lods
or
sub
je
int
and
push
adc
xchg
lock
adc
mov
add
into
std
test
hlt
popf
mov
lock
pop
stos
shrb
int
mov
ficoml
idivb
mov
lahf
nop
add
mov
stos
loope
jg
and
clc
and
mov
mov
ljmp
in
movsb
std
xchg
inc
outsb
clc
jecxz
adc
hlt
mov
movsl
inc
cltd
inc
pushf
push
inc
dec
inc
out
loopne
mov
mov
cmc
dec
mov
inc
xchg
mov
and
hlt
and
sub
ss
addr16
daa
aaa
mov
inc
js
dec
punpcklwd
xor
shr
shrb
cmp
in
pop
fidivl
mov
fdivr
adc
lods
mov
mov
aam
add
adc
call
cmp
enter
mov
rcrl
pop
jnp
cwtl
inc
mov
in
cmp
mov
nop
test
insb
gs
int
mov
mov
inc
shr
jl
clc
pusha
movsb
jge
in
xor
insl
cmpsb
cwtl
xchg
ret
push
scas
inc
aaa
shlb
sbb
sub
xchg
faddl
je
inc
and
fwait
sub
lds
shrb
mov
roll
pop
xor
push
sbb
fcomip
dec
out
mov
loopne
test
push
insl
mov
sbb
cmpsl
fcoml
mov
in
daa
xor
jmp
addr16
push
push
xlat
int
ror
leave
push
stc
ret
lret
xchg
xlat
ret
iret
imul
outsl
xchg
mov
dec
imul
fisttps
or
fidivrs
test
loop
add
aas
enter
popf
add
push
dec
fisubs
cltd
or
pop
rol
mov
mov
xor
lds
dec
into
mov
repnz
addr16
ljmp
stos
andl
in
sub
repnz
mov
and
push
fwait
mov
es
sub
pop
mov
add
adc
inc
and
or
lcall
push
insb
xor
ljmp
out
sysexit
push
adc
mov
bound
mov
pusha
cmp
push
xchg
pop
dec
sub
push
in
push
daa
in
mov
pop
and
xchg
imul
addr16
jo
pop
sbb
test
push
scas
mov
int
fcmovne
loopne
loope
loop
sbb
pop
cmp
insb
or
nop
cmp
or
lret
xchg
repnz
rcll
and
fwait
inc
sti
mov
jge
test
lret
aaa
add
bound
push
gs
flds
cmpb
movsl
sub
nop
dec
cs
outsl
out
or
xor
mov
cs
call
and
int3
fwait
rcrb
roll
inc
sti
loopne
int
add
ret
cmp
sti
push
addr16
std
jae
mov
repz
and
in
and
sbb
in
push
push
aas
js
sub
xchg
sub
xor
or
enter
push
inc
push
insl
in
out
push
test
daa
sahf
cwtl
cmc
orb
ljmp
mov
add
or
iret
jae
xchg
daa
push
ficompl
imul
xchg
negl
imul
jns
rcr
push
out
pusha
cwtl
movsb
mov
mov
insb
clc
lret
ss
sbb
sbb
icebp
lock
lcall
cld
icebp
dec
sbb
das
aad
roll
sub
mov
xor
push
xor
imul
inc
test
push
movsb
push
lods
outsb
push
mov
test
aam
int
jmp
adc
je
mov
hlt
pop
mov
inc
popa
movsl
jecxz
in
dec
lock
movsb
cld
mov
pop
or
lret
sahf
dec
imul
xchg
dec
mov
mov
imul
call
divl
jg
aam
enter
sub
shrl
scas
sub
addb
roll
sti
xor
in
push
cmc
xchg
mov
negl
int
sub
jecxz
ja
push
xor
mov
cs
scas
lods
mov
mov
jecxz
inc
xchg
nop
push
fnstenv
repnz
imul
popa
sub
std
int3
sbb
icebp
ss
out
setno
xchg
fmull
and
or
lahf
iret
sti
push
sub
mov
lods
iret
enter
jno
mov
cmc
fsubr
push
aaa
jo
mov
loop
fists
adc
mov
iret
aad
pop
or
jecxz
notl
push
scas
lock
lret
icebp
xchg
dec
in
xor
cmp
jmp
cs
cmp
sbb
inc
sbb
mov
push
adc
cld
and
pusha
and
jo
int3
cmp
mov
xor
pop
pop
ret
repnz
out
iret
sbb
sub
mov
inc
push
bswap
xchg
xor
lods
sub
fdivrs
shll
popf
adc
out
xchg
push
popf
fists
lods
inc
call
rcrl
jnp
fstpt
jno
aam
data16
jl
xchg
pop
jnp
mov
je
jge
mov
xor
mov
dec
or
insb
jb
pop
jbe
lock
lock
cmp
push
xchg
imul
xchg
jle
mov
or
bound
out
cs
enter
fidivl
in
push
frstor
and
repz
sub
in
inc
adc
jnp
rcl
mov
insb
inc
add
cmc
fistl
jb
adc
cld
adc
pushf
mov
push
popa
mov
ret
mov
push
aas
inc
dec
dec
ss
and
mov
adc
out
mov
mov
mov
cld
pop
fadds
insl
mov
in
addl
push
ffreep
in
mov
jge
dec
push
sub
test
je
push
cwtl
pop
int3
je
push
es
out
addl
aad
mov
test
fidivrl
shrl
les
popf
pop
rcrl
fisttpl
inc
call
imul
sub
roll
jnp
insb
in
jp
inc
jns
pop
fdiv
sub
pop
sub
xchg
les
add
push
insl
rorl
pop
mov
int3
cmpsl
loop
je
jno
pop
mov
adc
inc
bnd
pop
fs
faddl
shlb
mov
pop
fisttpl
cmp
rclb
loope
cmp
sub
dec
fiaddl
push
cmp
xorl
dec
and
inc
sbb
jnp
inc
cmpsl
pop
test
push
orb
sub
cmp
popf
jmp
xchg
jmp
and
mov
test
push
jb
popf
fsubrs
pushf
pop
or
add
imul
xor
mov
fnstcw
add
loope
sti
add
inc
inc
leave
jae
roll
push
cs
lcall
mov
mov
or
rolb
aaa
xor
pop
stc
add
in
loopne
stos
push
jb
push
mov
mov
mov
cs
es
xor
mov
stos
or
loop
xor
mov
and
fdivrs
jns
cmp
movsb
sub
xchg
jge
sub
cld
push
push
out
add
xchg
fistpl
xchg
int
aam
insl
mov
mov
xor
cli
roll
pop
lahf
mov
or
jne
xchg
cmpsb
push
xor
insb
lock
cld
jl
jp
pusha
pop
rcr
jo
iret
mov
push
push
outsl
dec
xchg
inc
in
add
xchg
or
pop
test
sub
ret
imul
js
les
dec
jb
cmp
loopne
in
fucomp
rcrb
int3
rcr
add
pop
test
cmp
fnsave
test
fst
push
cmpl
inc
adc
fdivl
mov
sbbb
cmp
lea
sub
inc
lds
imull
ret
xor
add
shrd
xchg
das
xor
pop
mov
lods
fwait
xchg
mov
idiv
and
jns
fwait
mov
orl
les
and
dec
dec
testb
mov
lret
mov
cmp
imul
andb
sahf
loopne
scas
movsl
out
shll
mov
test
add
enter
inc
jo
mov
push
sub
ret
ljmp
in
jg
sti
outsl
and
pop
mov
pusha
push
aam
mov
cmp
pop
bound
dec
xor
lods
test
call
xor
ret
adc
push
hlt
mov
out
mov
cmp
call
cmovge
mov
rorb
int3
mov
pop
adc
cli
imul
jbe
cld
sub
xchg
dec
je
sub
push
mov
jge
dec
insl
xor
scas
sarb
jl
mov
jg
fldcw
enter
nop
pop
dec
jns
pop
fcomi
pop
lret
sbb
dec
sub
or
lods
lock
or
or
negb
fcmove
mov
dec
push
iret
rcll
gs
mov
sbb
xor
mov
movsl
loop
dec
aaa
jecxz
xchg
sbb
lods
or
loop
or
xchg
pop
iret
push
jne
loopne
sbb
fstpl
mov
mov
sub
add
scas
outsl
ret
and
cmp
daa
push
mov
push
inc
or
jno
mov
adc
xchg
ljmp
mov
xchg
mov
or
cmp
fisttpll
mov
sbb
xorb
jmp
jno
lds
pop
shrl
cld
pusha
shr
xor
xchg
push
out
sub
mov
rolb
cltd
sbb
sbb
test
xchg
fsincos
cmp
movl
ja
clc
lods
dec
sbb
xchg
int3
lret
sub
dec
pop
cltd
dec
test
scas
xchg
sub
xchg
repz
sbb
adc
loop
mov
or
pop
cmp
mov
push
aad
call
xchg
jbe
add
or
mov
lods
in
outsb
push
mov
mov
not
imul
sub
shlb
mov
repz
popf
sbb
movsl
fistpl
pop
sub
jp
cmc
add
out
testl
dec
fsubrl
insb
in
or
int
lock
inc
push
sahf
jo
loopne
int
test
sbb
mov
adcb
movsb
xor
je
lods
xchg
ret
imul
mov
in
xchg
insb
leave
jge
sahf
int3
mov
mov
mov
add
xchg
sbb
pusha
push
fs
push
call
mov
sbb
lock
into
scas
sti
xchg
xchg
xor
sbb
jb
lea
sti
lods
das
das
xchg
cltd
xchg
loope
or
lret
fbld
les
ds
mov
aam
xchg
cmp
adc
gs
icebp
pop
aas
gs
fistpll
mov
adc
ret
in
into
add
push
mov
ficoms
pushf
add
into
aam
sub
jbe
aaa
sub
test
pop
push
mov
jge
sbb
mov
loopne
pop
sbb
hlt
pop
xor
lea
popa
push
push
movsl
das
jno
out
push
jle
lods
loop
and
mov
mov
mov
push
mov
push
mov
push
or
aad
xor
test
fwait
sub
xchg
sub
jb
cmpsb
sti
mov
out
js
inc
pop
adc
pop
sbb
add
in
xlat
cmp
jecxz
insb
and
sbb
sbb
out
mov
inc
pop
js
sub
es
pop
add
mov
inc
int3
sti
lahf
nop
imul
jle
push
insl
test
popa
div
jg
jbe
mov
js
adc
vxorps
mov
mov
decb
mov
add
mov
and
enter
push
cmp
int3
cwtl
scas
inc
aad
dec
and
jp
inc
in
fs
dec
jno
lods
je
arpl
cwtl
mov
cmp
lock
jne
dec
fiaddl
xchg
arpl
jnp
and
jne
ja
test
xor
out
lock
jnp
push
push
pop
out
xchg
xor
daa
push
shlb
imul
imul
test
xchg
and
imul
and
pop
push
jno
pop
cmp
shl
lds
xor
lret
or
and
cmp
popa
adc
mov
sar
fsubl
lock
mov
aaa
jo
ret
add
xchg
add
mov
enter
hlt
movsb
xchg
cmp
insl
dec
ret
inc
push
aas
inc
push
int
push
sti
dec
mov
lds
dec
mov
jnp
fcomps
rol
shlb
xor
test
pop
or
sbb
jmp
lahf
or
mov
stc
mov
pop
xchg
loopne
push
lret
testb
sahf
lea
je
jg
and
xlat
add
xlat
fdivrs
test
add
add
dec
push
mov
scas
add
inc
gs
pushf
jge
sbb
lahf
sbb
imul
jecxz
jne
ret
jmp
std
push
mulb
cmp
dec
xchg
cltd
fmull
cmp
dec
stos
xchg
mov
push
lock
add
divb
jmp
mov
pusha
stc
ror
xchg
sub
adc
dec
jne
aad
add
test
dec
les
in
imul
adc
xchg
xor
popf
cwtl
sbb
int3
sti
gs
mov
addr16
sbb
outsl
xchg
pop
jne
out
stc
test
sahf
pop
dec
and
xor
dec
jl
jb
xor
popf
mov
inc
or
orb
in
xorb
int
fisubs
dec
outsl
push
rcr
sbb
bound
mov
xchg
mov
jg
pop
inc
fcmovnb
push
das
jae
sub
repz
repnz
aaa
adc
in
loop
inc
mov
mov
bnd
xchg
mov
adcl
js
mov
es
jmp
fstpt
mov
inc
lods
mov
mov
mov
in
mov
outsb
pop
mov
fld
addr16
cli
adc
push
xchg
or
mov
cmp
bound
andps
roll
andl
ret
rorb
dec
hlt
ss
js
jns
inc
xchg
mov
sbb
cld
sub
adc
test
movsl
inc
sbb
xor
ljmp
cmp
mov
sbb
push
ret
testb
fwait
test
lahf
jp
push
mov
cld
jl
xchg
cmp
xor
lret
call
push
mov
fisttps
sbb
jae
jge
adc
cmp
cmp
xchg
in
mov
nop
inc
lock
add
dec
call
and
fildll
sbb
mov
mov
mov
stos
scas
sbb
adc
adc
lret
pop
popf
lock
push
les
or
adc
or
movsl
aad
aam
xlat
dec
cmp
mov
das
ss
adcl
pop
rcr
addr16
cmp
push
or
xchg
daa
xchg
mov
inc
cs
sbb
adc
leave
mov
sbb
jo
cmp
gs
data16
in
jns
and
lahf
dec
cmp
cmpsb
aam
sbb
addr16
fnstcw
push
in
in
lds
shrl
cwtl
shll
push
rcrl
jns
sub
inc
sub
mov
xor
in
jl
rclb
pop
xor
xchg
lcall
mov
pop
sub
pusha
cltd
pushf
lock
out
add
aam
orb
aad
push
subl
xchg
pop
dec
mov
push
jbe
or
jl
sub
aam
fsubs
mov
sbb
dec
xor
outsl
sub
cli
out
cmpsb
push
push
mov
cltd
lods
adc
mov
mov
xor
push
and
xor
stc
ret
inc
addr16
addb
dec
pop
or
pop
or
sbb
inc
and
add
pop
rorb
subb
mov
or
out
popa
or
or
push
and
sub
mov
out
add
xchg
out
mov
lret
adc
andl
jno
clc
fwait
in
xchg
inc
or
xchg
cmp
enter
icebp
call
stos
bound
pop
and
stos
pushf
movsl
outsb
jle
cmpb
ror
sbb
inc
pop
pop
cli
enter
xor
add
popa
imull
add
push
jbe
xor
call
lcall
dec
aam
jo
adc
push
rolb
mov
out
mov
dec
inc
dec
out
mov
int3
pop
inc
jmp
mov
lds
je
loope
xchg
stos
scas
lret
push
xor
aas
mov
xchg
sub
mov
mov
xchg
or
rcll
test
sbb
lahf
fisubs
in
loop
cmp
dec
aam
xchg
ss
pop
fbld
mov
mov
and
mov
fsts
adc
cmpsb
adc
cmc
ljmp
outsl
push
movsb
cld
enter
add
jnp
sbb
call
jg
adc
enter
fbstp
ret
sub
and
insl
jecxz
cli
mov
mov
enter
add
shl
mov
int
pop
pop
mov
stos
insb
adcl
add
outsl
icebp
test
cmc
dec
iret
xchg
xchg
sub
push
int
mov
jmp
xchg
adc
mov
scas
jecxz
mov
jno
loopw
jle
cld
mov
mov
addr16
outsl
js
negb
clc
dec
xor
pop
lds
add
push
pusha
mov
movsl
dec
insb
popa
leave
repnz
cwtl
xchg
pop
out
pop
aam
je
xor
sub
sti
test
and
jl
mov
std
cmpsl
xchg
sub
out
jbe
ficomps
pop
mov
ret
mov
mov
sub
loopne
or
rorl
gs
mov
mov
jns
push
xor
rorl
imul
imul
and
sbb
pop
cmp
repnz
lods
pop
or
sbb
ljmp
enter
jl
loop
jb
mov
sub
mov
jo
sub
cli
mov
pop
aas
les
and
fimuls
mov
adc
cmp
enter
aas
movsb
or
or
adc
clc
mov
mov
and
jnp
cmp
xlat
lods
out
loope
iret
mov
in
cmp
dec
mov
xchg
mov
add
add
adc
pop
loopne
movsb
mov
pusha
movsb
xchg
notl
dec
pushf
xchg
dec
popf
js
and
push
dec
stc
mov
pop
xlat
rcrl
push
sarl
cmp
popf
pushl
ss
sbb
push
and
cltd
add
aad
insl
ss
xchg
inc
arpl
test
sti
in
xorb
fcoml
lock
cltd
fcompl
adc
push
dec
mov
mull
sbb
js
mov
jb
add
pop
loop
sub
push
mov
bound
cld
mov
rcrb
jb
inc
or
std
push
mov
xchg
push
js
arpl
pushl
push
sbb
cli
xor
dec
xor
cmc
lahf
les
xchg
jge
and
inc
insl
adc
cmp
addr16
or
pop
inc
push
mov
cmpsb
lock
add
loope
xor
or
push
mov
xchg
rcl
dec
sub
dec
pushf
fsubrs
jne
movsl
xor
sbb
mov
out
fdivrl
je
add
cmp
mov
out
mov
in
ret
and
mov
cltd
mov
push
test
lahf
fsubs
aad
enter
xchg
cli
xor
fldl
dec
aaa
sbb
and
cwtl
pop
pop
jmp
shrb
shl
cmp
sbb
je
aam
jne
dec
out
or
xor
divl
imull
sub
push
jnp
xor
lods
test
xor
jl
or
dec
mov
fs
or
and
ja
fstpt
int3
and
repz
insb
cld
aas
add
roll
iret
sub
mov
pop
or
jns
dec
cltd
leave
fnstenv
leavew
clc
dec
inc
xchg
fmull
in
xchg
or
shll
movsl
inc
push
bound
xchg
lods
movsb
jle
fwait
adc
jecxz
ret
inc
add
cltd
jae
jle
sahf
mov
int
arpl
fsubs
or
or
jo
push
fisubrl
daa
pusha
rcl
jnp
xchg
jo
in
jl
idivb
cmp
popa
enter
out
lcall
lds
stc
pop
push
mov
xor
lahf
ftst
push
iret
xor
es
mov
mov
push
out
ss
push
jl
xor
sub
scas
das
adc
pop
out
and
and
lods
cmp
xchg
cmp
jl
jne
std
ficoml
scas
jl
and
shll
push
jne
fs
xchg
ds
pop
or
stos
adc
shrb
add
sub
lods
xor
sbb
cmp
sbb
push
mov
scas
push
lret
jge
push
subl
loope
int3
repz
cmp
mov
mov
sti
stos
xor
sbb
pop
adc
lcall
imul
or
xchg
push
xchg
test
cli
dec
mov
jl
inc
icebp
inc
inc
xorb
and
lods
xchg
lods
movsb
and
iret
cmc
mov
aaa
mov
sbb
xchg
loopne
ret
mov
pop
mov
sbb
pop
sub
enter
push
in
rcrl
imul
push
xor
mov
fisubl
subb
popa
jbe
push
xchg
push
dec
mov
xor
mov
out
pop
mov
adc
and
fldln2
sbb
div
aas
outsb
xchg
in
adc
xchg
push
popa
fnsave
aam
xchg
push
es
jmp
lahf
xchg
push
or
daa
fisttpl
out
aam
mov
pop
mov
or
xlat
jle
test
gs
rcrl
xchg
mov
insl
int
imul
dec
jo
dec
sub
mov
mov
jnp
imul
xchg
call
in
cmpsb
gs
imulb
push
and
xchg
cmp
mov
orb
enter
jae
pop
insl
jo
lods
stos
xchg
adc
cmpsb
inc
or
jg
jns
dec
imul
cli
inc
lahf
js
shrb
stos
and
test
lods
push
dec
pop
daa
xor
xchg
mov
adc
cmp
fidivrl
test
fists
mov
pop
mov
inc
arpl
dec
cmp
lcall
lods
insl
mov
mov
mov
or
mov
mov
dec
push
fs
fmull
sti
pusha
hlt
xchg
loope
lds
push
or
les
call
sub
inc
pushl
xor
loop
int3
sbb
in
jbe
mov
sar
jle
sbb
not
xor
jmp
inc
jle,pn
rcrb
enter
push
xchg
jae
mov
and
sub
dec
fiadds
adc
mov
push
imul
and
or
jne
dec
xrelease
arpl
mov
les
pop
xchg
hlt
mov
mov
xor
clc
shll
adc
pop
fst
out
sbb
clc
sti
cmc
cmpsl
push
or
int
imul
into
stos
dec
data16
shl
icebp
outsb
popf
mov
jmpw
movsl
adc
sub
bound
pop
push
lock
mov
or
sub
std
adc
cmp
movsb
mov
dec
mov
mov
dec
lods
bound
lods
sbb
outsb
int
dec
and
mov
sbb
add
cwtl
cmc
aas
movsl
cld
mov
add
xor
test
push
mov
mov
pop
outsl
icebp
cmp
test
xor
in
mov
ss
dec
cmp
adc
movsb
cmp
inc
mov
cmp
adc
adc
dec
push
dec
ja
in
push
js
mov
or
cmp
sub
repnz
lret
sbb
gs
mov
shr
jg
out
lret
dec
nop
xchg
pop
and
mov
pop
pop
les
sti
mov
or
sbb
jns
dec
jno
popa
xchg
pusha
jle,pn
xor
out
jb
mov
adc
dec
mov
adc
sbb
xchg
stos
mov
in
aaa
fildl
bound
aas
fnstcw
push
adc
push
mov
cmp
mov
jns
and
xor
sbb
dec
push
andb
dec
popa
push
sbb
fnstenv
mov
rol
subb
out
xchg
adc
dec
je
adc
pop
pop
push
scas
mov
das
jbe
mov
inc
inc
push
mov
cmpsl
popa
xor
jbe
inc
push
mov
pop
sbb
loop
cmp
jae
mov
cmp
mov
mov
xor
xor
mov
outsb
or
cmp
xorb
aas
push
pop
push
movsl
sub
in
dec
push
fs
and
push
sbb
mov
shll
addr16
pop
mov
outsl
adc
rep
repz
das
sbb
pop
inc
adc
pop
ss
cli
mov
cs
and
mov
inc
cltd
rep
arpl
or
loope
mull
shlb
iret
jge
pop
aam
or
add
mov
or
lret
cs
xlat
push
cmp
rcll
ret
mov
leave
fisttps
loope
or
and
cmp
sbb
pop
xor
rcll
iret
rcrb
sbb
push
stos
and
push
iret
dec
pop
and
daa
sub
pop
bound
push
fists
mov
cmc
jne
dec
xlat
nop
jno
outsl
add
xchg
add
sarl
insl
and
into
outsb
into
mov
test
sbb
sbb
cmpsb
sub
roll
and
out
loopne
push
ds
fxch
sbb
daa
stos
aad
outsb
fwait
push
cmp
out
cmp
add
sbb
lock
xorb
inc
jo
mov
cmc
add
pop
scas
xchg
cli
shl
or
cmc
insl
icebp
mov
xchg
loopne
dec
mov
mov
cltd
lea
push
xor
imulb
sub
cs
fcomi
hlt
xchg
xchg
push
adc
cltd
sbb
rclb
or
leave
das
pop
adc
das
mov
fisttpll
cmp
pop
xchg
fidivs
stos
clc
sbb
jle
nop
adc
inc
rorl
xchg
lret
or
push
pop
jmp
xchg
insb
je
int
mov
add
std
and
pushf
adcl
cs
adc
std
imul
fwait
cmp
mov
outsb
push
syscall
dec
xor
fisttpll
das
and
or
jecxz
mov
dec
int3
dec
sbb
inc
push
aad
das
sbb
inc
ret
xor
loop
mov
xchg
out
push
std
test
jnp
pop
and
mov
ret
cmp
movsb
int
xorb
or
xchg
dec
fists
push
mov
sub
out
dec
in
jle
sbb
fstpt
dec
cmp
scas
or
idiv
xor
mov
out
cmc
sub
xor
ja
xchg
inc
sti
les
out
insl
test
cltd
dec
inc
lcall
das
cmc
sbb
adc
fildll
lock
cmp
jecxz
xchg
rolb
push
into
pop
push
adc
cli
call
or
addr16
dec
mov
in
mov
adc
dec
xchg
loopne
xchg
jae
and
scas
mov
ror
mov
push
fisubrl
cmp
scas
mov
pushf
jle
sbb
xchg
cmpsb
popa
sbb
sub
int
lods
ss
les
leave
test
dec
mov
stos
pushf
and
xchg
pop
orb
jne
or
fcompl
push
xchg
pop
jo
ret
sbb
fildll
scas
add
aad
xchg
enter
mov
xor
xor
mov
pop
sbb
lods
ljmp
xor
push
cmp
mov
loope
in
es
icebp
mov
pop
inc
leave
cmp
or
xor
mov
xor
xlat
ja
mov
enter
stos
jl
icebp
dec
sub
test
int3
jecxz
out
into
mov
out
xor
jmp
movsl
xorb
jl
pop
mov
and
lret
jle
nop
insl
testb
rsm
pop
xor
ss
ljmp
cmpsl
js
jl
adc
mov
push
sub
icebp
in
in
scas
adc
fimuls
popf
cmpl
ret
adc
jle
dec
jns
movsb
push
mov
and
mov
ljmp
and
jb
lahf
lods
testb
xchg
std
test
sbb
out
rorb
lds
gs
dec
cs
xor
pop
rclb
push
sar
pop
pop
and
lret
jecxz
lods
xor
xor
sub
adc
mov
xor
jns
sub
fdivs
je
xor
jne
aad
jle
xchg
jle
fcomps
mov
fs
js
inc
jl
inc
test
lock
es
cld
mov
xchg
mov
cmp
call
shlb
rorl
sbb
mov
xor
mov
ror
in
push
cltd
pop
movsb
stos
stos
dec
out
lods
push
jg
pop
adc
push
jo
dec
addb
or
sub
dec
loop
sbb
sbb
pushf
sub
sub
dec
mov
add
or
or
dec
add
jnp
gs
push
mov
inc
xchg
ds
aam
jg
insb
mov
cmpsb
repnz
push
lea
sarb
daa
dec
jmp
add
mov
inc
xchg
and
cmp
lret
call
pop
sub
call
push
jb
push
cmp
push
inc
jno
jo
jp
push
jmp
in
push
and
mov
push
shll
orl
adc
or
mov
pop
push
call
mov
jbe
mov
sub
mov
imul
ss
ret
sbb
mov
jo
push
mov
inc
adc
push
cld
sub
mov
dec
push
scas
int
cwtl
test
jo
push
mov
cmovge
inc
sbb
push
cmp
sahf
and
int
jge
pop
lret
in
mov
lock
pop
or
fbstp
cmpl
dec
mov
sbb
inc
imul
lock
mov
rclb
andb
enter
xchg
bound
data16
mov
mov
mov
outsb
cld
fdivrs
es
inc
cmp
push
cwtl
and
stc
pushf
hlt
ret
jo
aam
mov
adc
arpl
out
into
imul
jns
into
mov
jno
xchg
stc
xor
add
adc
mov
je
adc
mov
xchg
sub
das
mov
int
cltd
out
push
cwtl
in
push
xlat
shrb
aas
xor
mov
pop
mov
jl
dec
fwait
ret
xor
clc
adc
data16
cld
add
movl
std
outsl
hlt
hlt
stos
cld
scas
and
mov
popf
mov
pushf
pop
mov
popa
test
mov
test
jae
xor
mov
sbbb
pop
mov
pusha
mov
cmp
sub
test
idivb
mov
mov
push
pop
push
pop
into
push
pop
insb
jae
addb
or
mov
xor
dec
mov
clc
icebp
sbb
sub
lea
jno
or
imul
mov
jo
sarl
fbld
sti
js
adc
les
daa
sti
and
jbe
rcrl
sahf
cmc
scas
popa
inc
mov
test
shll
pop
add
sub
in
call
cltd
xor
jbe
lods
pushf
outsb
rclb
jo
out
push
sub
jge
adc
dec
aam
in
and
cmc
cmp
in
int3
je
je
cmp
sub
mov
sub
insb
out
xchg
sbb
dec
leave
mov
adc
insb
out
mull
dec
adc
iret
jecxz
or
xor
jo
push
ret
leave
adc
test
enter
mov
lcall
and
cmp
and
orb
out
inc
or
pop
sbb
aam
and
js
xchg
and
icebp
xchg
decb
and
les
adc
mov
inc
in
and
and
pop
dec
xlat
lods
pop
sbb
mov
or
sbb
xlat
sahf
sub
xor
repnz
sbb
andb
xchg
cltd
push
cmp
mov
retw
lods
imul
fs
add
push
out
ss
mov
cmp
lahf
sub
dec
int3
cmp
test
out
pop
hlt
mov
in
cmpsl
adc
xor
sbb
xor
sub
fsub
rorb
sub
popa
rorl
stos
ret
jl
mov
mov
mov
xor
pop
ret
sub
insl
jae
adc
cmc
clc
cmpsb
adc
arpl
mov
sahf
pop
dec
roll
roll
pop
inc
fidivrs
mov
jp
loop
out
xor
xchg
ficoms
jp
pop
mov
test
hlt
stos
xchg
jb
and
js
or
push
or
inc
js
in
in
dec
fcoml
lret
lcall
add
cli
cmpsl
sbb
adc
push
mov
loope
push
xor
jns
ror
enter
stos
fmuls
mov
pop
outsb
xor
xor
outsb
jg
sub
mov
cmp
or
jns
lcall
sarl
dec
mov
xor
mov
mov
cmp
jl
fbld
out
jmp
mov
or
ret
and
cld
add
fmuls
cmp
inc
rcrb
push
cmp
or
mov
mov
dec
inc
aam
aaa
sub
sub
aas
add
in
push
cltd
adc
jecxz,pt
sub
xor
sub
fucomip
xlat
test
mov
sbb
mov
xchg
fcoml
pop
cld
negb
jnp
arpl
pop
incb
pop
popf
xor
xchg
das
imul
imul
inc
lret
ret
test
sbb
mov
add
mov
std
sbb
stc
mov
lcall
dec
xor
xor
xor
popf
sti
ret
aas
push
dec
ds
cmpsb
mov
fisttps
push
pop
inc
xchg
or
inc
es
cmc
xchg
push
outsl
mov
sbb
adc
dec
jp
stos
popa
aam
push
out
cmpsb
cmp
mov
inc
popa
mov
jo
and
outsl
jmp
or
jl
adc
dec
mov
pop
test
cmpsb
pop
enter
movsl
cmc
and
adc
mov
negw
fwait
jle
sbb
push
arpl
dec
cmpsb
rorl
cld
dec
jle
jg
popa
pop
mov
lret
sahf
jl
leave
fldcw
das
das
sbb
sbb
orb
rcrl
shl
pop
leave
rcl
fists
pop
cld
sub
pop
add
pop
cwtl
xlat
lods
or
cmpsb
cld
push
sbb
test
shlb
pop
in
xlat
add
sti
xor
mov
xchg
inc
push
jno
add
into
data16
sahf
mov
repnz
shrb
xchg
mov
and
enter
adc
test
dec
daa
add
into
pop
lcall
cmp
out
inc
or
leave
and
mov
push
sbb
sti
sub
lcall
mov
mov
cmpsl
int3
test
pop
push
push
push
mov
cmp
mov
xchg
xchg
sub
mov
mov
fmul
fldt
push
jno
add
push
arpl
ja
imul
push
ljmp
xchg
test
repnz
push
scas
mov
mov
fisttps
push
pop
push
aas
pop
maxps
out
add
and
pop
lds
divb
dec
gs
sbb
inc
fstl
ja
mov
fistl
addr16
lods
lds
cmp
mov
daa
vmread
outsl
mov
pushf
or
mov
xchg
push
xor
push
stos
mov
cmp
repz
lods
jp
sub
ja
fdivl
lds
adc
jp
mov
out
imul
jp
sti
pop
clc
xor
add
lcall
pop
int
xchg
test
jle
pmaddwd
leave
cmpsl
in
mov
jge
or
dec
fld
xor
and
push
arpl
inc
cltd
cmp
js
out
adcb
add
jmp
adc
push
mov
idivl
sub
ret
lret
xchg
dec
lret
repz
jecxz
scas
and
cli
and
pop
aad
fcompl
cmpsl
fmulp
out
jg
pop
sub
fldenv
test
mov
cld
jp
sti
outsl
lahf
fdivrs
push
cmc
aas
mov
daa
mov
push
inc
mov
lds
cwtl
jmp
and
dec
daa
out
icebp
leave
nop
jmp
push
das
shll
or
pop
call
test
lds
pop
jnp
and
xchg
popf
test
hlt
sub
aaa
mov
push
mov
xrelease
push
xchg
jno
nop
das
lods
adc
lcall
in
jo
adc
jl
dec
int3
std
loopne
mov
xchg
cmp
xorps
ret
dec
push
imulb
sub
outsb
push
xchg
xor
sub
sbb
es
dec
push
or
push
sub
cmp
aam
jmp
mov
pushf
xorb
xchg
push
rorl
popf
add
sbb
test
xor
add
mov
in
lock
and
pop
outsb
add
lcall
adc
jnp
sahf
sub
cmp
sub
mov
pop
mov
add
jp
test
adc
dec
sahf
lcall
shll
sbb
pop
or
inc
mov
out
xlat
test
cmp
cld
and
inc
xchg
icebp
outsb
mov
dec
xor
mov
inc
jg
movsl
cmpb
push
mov
mov
lods
dec
add
enter
jno
push
jmp
add
in
push
jns
cmp
movsl
test
out
sbb
out
les
jecxz
fcomps
daa
jno
in
aaa
cmpsl
push
vpsadbw
add
xor
imul
sti
sbb
push
and
and
pushaw
shlb
push
ja
inc
mov
aam
ret
loope
or
cmc
adc
rcrb
ss
xchg
push
jnp
mov
add
inc
push
aas
stos
in
stos
test
mov
bound
pop
cli
dec
lret
ja
int3
mov
movsl
ljmp
inc
pop
lret
mov
out
jb
xor
loopne
and
fsubs
shl
cwtl
les
das
cmp
mov
scas
es
xor
aam
ret
rcll
jecxz
add
cld
and
mov
sbb
cmc
arpl
dec
icebp
sub
cmc
mov
xor
dec
mov
repnz
pop
adc
and
mov
mov
pop
fstl
push
sbb
pop
orb
jns
outsl
pop
cmpl
call
fucomp
les
clc
into
mov
xor
popa
dec
fs
add
mov
pop
pop
dec
or
rorl
jmp
jg,pn
push
xor
jb
stc
sbb
dec
push
adc
icebp
xchg
jnp
jbe
mov
test
add
pop
aas
and
mov
jb
das
or
xor
sbb
sub
mov
rolb
cmc
movsb
clc
pop
jl
aaa
imul
roll
incl
jb
leave
mov
inc
bound
sti
xchg
test
mov
rclb
mov
dec
mov
push
add
scas
push
int3
add
mov
test
xor
mov
xchg
aaa
xchg
or
sahf
cld
push
stos
lea
xlat
ret
imull
in
jmp
jns
dec
test
pop
je
push
movsl
add
jmp
push
pop
cltd
and
or
ljmp
popf
mov
push
repz
rcr
fcmovu
rclb
inc
sbb
enter
pop
sbb
dec
pop
popa
jne
inc
pop
or
inc
mov
and
int
ret
add
cmp
lahf
mov
cmp
movsb
sbb
sbb
push
mov
adc
pop
outsb
lret
incl
mov
inc
jns
ret
arpl
jb
clc
scas
mov
lods
rcr
jl
cmp
sbb
movsb
jl
push
jmp
pop
push
push
xor
stc
repz
pop
mov
xchg
push
push
adc
or
ja
rcrb
dec
adcb
mov
or
aaa
add
insb
scas
arpl
mov
push
jo
popf
mov
dec
dec
jo
pop
scas
cmp
cli
sub
mov
jecxz
outsl
and
das
imul
inc
pushw
dec
test
or
mov
adc
pop
mov
std
push
sbbb
xchg
jmp
jns
xchg
test
mov
int3
in
sbb
jae
js
rcr
push
fnstenv
pushf
mov
mov
out
xor
jb
addr16
adc
bound
or
jge
cli
add
xor
call
icebp
pop
jno
sbb
mov
xchg
imul
lock
test
cmp
inc
mov
popa
pop
mov
or
shlb
scas
lods
and
mov
adc
pop
aas
sbb
jmp
stos
adc
les
scas
clc
push
dec
adc
test
adc
ret
and
aaa
ljmp
movsb
cmpl
pusha
pop
and
ss
out
loop
popf
cmp
rclb
movzbl
imul
aaa
fsubrs
xchg
scas
push
lcall
insl
int3
cmpb
idivb
pop
in
leave
cmp
iret
pop
adc
mov
xchg
xor
shlb
stos
xchg
daa
daa
push
inc
or
or
jle
inc
push
enter
or
into
pop
fisttpl
pop
imul
inc
cmpsb
in
add
push
lea
pop
sub
sub
loope
out
lods
and
adc
or
sbb
jbe
cltd
nop
stos
in
sub
and
or
cmpsl
das
mov
adc
aaa
dec
mov
and
idivb
mov
ret
outsl
xor
dec
dec
adc
cs
ficoml
dec
sbb
sub
loope
xchg
rorl
test
jns
leave
bound
movsb
fisubs
add
ret
sbb
hlt
and
adc
out
fildl
mov
jnp
stc
testb
popa
imul
int3
dec
and
outsl
jb
pmullw
ja
adc
shrb
lcall
xchg
mov
mov
je
adc
sbb
push
xchg
mov
call
push
or
lods
dec
sahf
imul
lods
shrb
and
mov
push
iret
pop
les
mov
mov
sahf
jo
ja
inc
fs
cmc
in
lds
les
push
pop
hlt
out
inc
jge
push
mov
mov
lret
loope
leave
fidivrs
xchg
nop
dec
loopne
and
fiaddl
add
mov
clc
jle
pusha
mov
stos
daa
ret
cmc
jecxz
mov
inc
xchg
xchg
mov
and
scas
push
xor
and
nop
ljmp
mov
mov
fistps
inc
or
das
repz
popa
cmpb
sub
cmp
cmp
pusha
ss
les
outsl
mov
pop
sbb
into
xchg
xchg
mov
notl
sbb
dec
outsb
add
mov
jno
dec
and
mov
jge
mov
sub
lds
imul
push
mov
das
cmp
lahf
lock
je
cmp
rolb
imul
inc
leave
insb
cli
adc
inc
sbbb
test
push
xchg
sub
scas
cwtl
popa
mov
rcrb
outsl
repnz
add
icebp
mov
sub
push
jl
dec
dec
and
adc
insb
xorb
je
xor
jge
out
das
sbb
nop
cmpsb
push
mov
mov
das
insb
js
xchg
push
out
xchg
lock
mov
pop
xchg
mov
mov
or
das
fimuls
pop
or
adcl
and
stos
push
in
dec
lods
pop
pop
add
pop
xchg
cmp
sbb
pop
xchg
repz
test
and
sbb
jns
lock
hlt
sbb
xchg
fdivrl
mov
movsl
sub
pushf
pushl
add
push
sbb
enter
ja
inc
int
mov
rol
imul
mov
into
cmpsb
cmp
pushf
insl
jns
fstl
or
mov
jge
js
loop
roll
imul
or
sub
push
push
jnp
icebp
push
test
pop
and
inc
je
outsl
pop
stc
xchg
icebp
dec
jae
sbb
mov
cmp
mov
jns
add
dec
mov
aam
add
repnz
loopne
xchg
jp
jecxz
aad
addr16
insb
sbb
sbb
sub
inc
cwtl
imul
sahf
sbb
es
mulb
js
loopne
test
jecxz
adc
sbb
bnd
mov
push
jg
cltd
hlt
jg
pop
mov
cli
ret
inc
icebp
and
cmpsl
pop
mov
jbe
jp
jo
ljmp
cmpsb
or
sbb
or
pop
jb
add
fcoms
pop
outsl
stc
sbb
mov
mov
mov
fcmovu
jnp
ljmp
les
xor
enter
mulb
sbb
dec
push
sahf
dec
in
adc
push
inc
fnstcw
int3
js
sub
dec
psubd
sarb
fistps
loop
cmp
adc
das
sarb
push
xor
cmp
push
add
mov
rcrb
in
or
xor
clc
push
mov
pop
add
pop
aas
inc
sub
xor
call
pop
lret
sbb
inc
fdivp
mov
sub
lods
lret
stos
push
fnstenv
sub
mov
mov
cmp
subl
lods
das
push
out
cmc
adc
mov
jbe
popa
inc
add
jae
mov
jno
cmpsl
imul
pusha
xchg
cmp
cmp
aam
adc
insb
call
fxch
mov
in
mov
xchg
call
repnz
gs
mov
mov
mov
movsl
and
mov
sbb
in
or
xor
fbld
pop
push
ret
pop
stc
jb
mov
inc
cmp
rcrb
jge
inc
sub
sub
fstpl
call
add
or
inc
popf
dec
ficompl
gs
std
pop
fs
push
mov
xchg
xor
xchg
push
jmp
aam
ljmp
jmp
fimuls
cmpsb
bound
and
fistl
add
cmp
or
in
cli
jno
adc
imul
xchg
xchg
scas
cmpsb
cltd
test
dec
sbb
pushf
arpl
add
xor
or
lret
xlat
mov
add
jo
rcr
pusha
mov
dec
pop
add
shlb
mov
fsubrs
add
jmp
adc
cmc
mov
fstpl
psubq
xor
insl
inc
sbb
dec
add
orb
push
xchg
fwait
sbb
xlat
push
filds
dec
xchg
or
or
dec
pop
mov
and
inc
aam
lret
into
jecxz
cmc
out
jae
testb
cmp
ljmp
or
idivl
mov
neg
xor
stos
call
popa
lahf
js
pop
es
cmp
lea
and
sbb
rclb
xor
dec
push
aad
fadd
rclb
cmp
pop
je
sahf
add
inc
lret
inc
adc
jnp
dec
das
push
sahf
cmp
cs
int
dec
mov
push
xor
fisttpll
cld
in
jge
adc
sbb
cmpsb
pop
cwtl
mov
cmp
push
das
int
out
pop
js
mov
cmp
or
fs
outsl
sbb
add
xchg
xchg
aad
mov
stos
lahf
nop
inc
jb
push
outsb
adc
mov
addr16
add
xchg
sbb
xchg
dec
jne
sbbb
mov
cltd
and
enter
sahf
dec
mov
push
jmp
incl
mov
mov
xadd
adc
inc
hlt
add
dec
cltd
mov
sbb
mov
inc
mov
fidivs
out
cs
test
and
inc
cmp
sub
addr16
push
mov
jno
call
pop
mov
out
jl
xor
test
jl
mov
test
pushl
in
mov
xchg
and
mov
xor
mov
out
cmp
or
dec
pop
xchg
and
sti
push
fs
cld
pop
ret
dec
sbb
add
xorl
mov
push
insl
pop
dec
and
jg
xchg
popa
mov
pop
xor
stc
add
add
ret
xor
cmp
aas
test
push
jp
cmp
lret
push
push
out
repz
arpl
mov
xor
test
cmp
mov
pop
push
xorl
push
jecxz
mov
gs
fcompl
inc
jnp
jne
lahf
mov
inc
in
xlat
dec
push
loopne
mov
addr16
mov
jo
fs
or
gs
push
mov
push
xlat
cmp
cmc
jns
push
pop
es
shrb
mov
sbb
movsb
inc
scas
inc
jae
pop
inc
mov
or
xor
xor
push
repnz
xor
cmp
jne
dec
xchg
cltd
loop
push
add
add
pushf
pop
push
push
shl
push
inc
adc
stos
inc
sub
loopne
sub
fisttps
cmp
and
orb
jae
popw
add
insb
mov
jno
jne
lcall
in
sub
icebp
dec
mov
out
pop
mov
pop
pop
inc
in
add
inc
ficoms
mov
push
ret
xor
data16
lea
shll
jnp
xchg
add
clc
xchg
xor
lret
mov
inc
and
add
insb
rclb
xchg
pop
sub
loope
cmp
test
pop
fmull
sub
mov
xchg
cltd
test
mov
lds
lret
cmp
push
sub
mull
sbbb
push
mov
mov
add
push
xchg
imul
inc
xchg
stos
push
push
mov
mov
jl
hlt
mov
cmpsb
stc
inc
jnp
mov
mov
lods
out
or
les
adc
sub
ret
dec
mov
cmp
mov
add
stos
xorl
mov
push
or
out
je
sbb
ficoml
cltd
mov
int
push
stos
xor
mov
ss
cmp
sub
xor
or
andb
lds
cltd
sub
in
sub
out
addr16
inc
ret
shlb
mov
mov
push
in
sbb
pop
shld
xchg
sbb
dec
leave
inc
sub
jmp
sbb
pop
adc
mov
mov
mov
jno
add
push
enter
and
jbe
stc
inc
call
scas
hlt
sbb
adc
in
leave
add
sub
mov
or
cmp
test
lock
mov
das
fcomp
jae
hlt
in
divl
push
adc
aas
inc
in
or
lea
dec
sub
aas
popf
imul
jno
cmp
call
cwtl
aaa
es
data16
rolb
in
xor
jne
add
lret
pop
loop
mov
inc
nop
int3
ds
push
add
lret
xchg
inc
dec
pop
sub
add
lahf
daa
fisubl
push
into
fldenv
sbb
add
leave
dec
mov
insl
push
lahf
lahf
stc
adc
sbb
push
gs
sub
fdiv
adc
jns
in
out
and
mov
fiaddl
and
mov
daa
inc
mov
call
jb
push
and
dec
jge
mov
cmp
sbb
and
std
add
xchg
das
push
adc
inc
out
inc
pop
add
cltd
push
insb
push
mov
insl
outsb
cmp
pop
jle
outsb
mov
sbb
jns
push
int3
and
or
sub
sub
mov
mov
jecxz
cltd
mov
gs
push
xchg
jp
push
jmp
push
jmp
xor
add
movsl
in
mov
adc
sub
pushf
add
mov
stc
shrl
and
seto
lret
pop
dec
dec
jnp
push
mov
mov
cld
mov
sub
pop
pop
testb
xor
sbb
jp
mov
sub
push
imul
out
mov
mov
cmp
sub
mov
iret
pop
mov
lods
or
out
scas
sbbb
mov
lret
gs
int3
aaa
in
in
sub
rclb
clc
outsb
aaa
mov
lret
inc
outsl
pop
mov
sbb
leave
and
andl
cmp
loope
cmp
inc
pusha
movsb
ljmp
mov
hlt
dec
mov
adc
add
js
jno
bound
jae
rcrb
lret
stos
fcoml
cmpsb
xchg
into
adc
ss
sub
cltd
addr16
sbbb
jne
xlat
repz
push
pop
inc
sub
cld
loop
mov
or
mov
cmpl
jg
lcall
jl
xchg
decb
fwait
or
mov
xchg
push
popf
add
jbe
imul
mov
sbb
mov
pop
sub
js
jl
fucomi
sbbb
xor
or
push
pop
jp
rorl
dec
sub
aas
inc
popa
or
and
xorb
call
inc
stos
pop
cmp
dec
sahf
add
out
dec
loope
test
jae
cli
sbb
cmpl
fidivrs
daa
jg
loope
push
leave
dec
dec
cwtl
cmp
rorb
cmp
push
dec
mov
outsl
pop
andb
cmp
cmpsb
xor
dec
clc
mov
out
sub
cltd
and
or
jae
jb
pop
sahf
adc
subb
fnstcw
push
inc
jp
int
sahf
shr
inc
mov
enter
cmp
pusha
stc
or
push
movsl
xor
std
xchg
mov
fisttpll
aad
and
pop
mov
in
imul
xchg
lock
fmull
sti
cmp
jo
in
push
pop
enter
gs
aam
xchg
xchg
daa
or
mov
in
loopne
mov
pop
lcall
popf
out
mov
out
push
sarb
cmp
andl
dec
shrb
dec
test
xchg
divb
mov
stos
or
mov
lds
cmp
or
push
andb
into
sub
xor
imul
pushf
jg
out
push
dec
test
int
sbb
ds
sbb
and
daa
pushl
lock
sub
daa
mov
loop
jp
sub
cmp
icebp
xchg
ret
aas
scas
adc
sbb
xchg
jae
ret
inc
jge
mov
loopne
push
sub
insl
jb
push
cmpsb
push
cmp
fiadds
or
jbe
subb
js
xchg
cli
lea
movsl
insl
lahf
fstpt
fstl
fcomi
in
stc
xchg
adc
sub
jmp
data16
fs
push
bound
xchg
and
jno
jmp
mov
push
test
push
popf
xor
pop
mov
mov
and
js
outsl
gs
push
adc
clc
fisubs
fisubrl
leave
pop
pop
idivl
inc
stos
xchg
dec
ljmp
jno
enter
mov
aad
mov
jmp
or
and
dec
mov
gs
sbb
imul
outsb
inc
jecxz
icebp
push
mov
nop
movsl
mov
push
jl
mov
sub
jge
xchg
sbb
jp
stc
add
fdivs
sarb
clc
loope
dec
rcl
ja
xchg
in
mov
insb
mov
push
movsb
xchg
fwait
js
jge
arpl
push
je
call
sbb
jmp
imul
and
repz
pop
lds
sbb
or
lahf
iret
add
ja
sbb
ljmpw
xchg
mov
pop
std
repz
dec
in
add
mov
mov
pusha
cwtl
push
adc
xor
test
fistl
and
cli
mov
dec
cmp
outsb
xchg
mov
xchg
mov
mov
and
jg
loope
cwtl
xchg
sub
sbb
xchg
push
jp
sti
pop
sbb
stc
loop
mov
cmp
in
shr
out
mov
sbb
xchg
pop
add
push
sbb
in
jg
idivb
out
and
pop
repnz
scas
inc
insl
test
xlat
lods
lahf
sarb
adc
orl
ds
fisttps
pushf
xchg
pop
pop
lcall
int3
pop
cmpsl
scas
lcall
in
cmp
repz
cld
jp
popa
cmpsb
imul
stc
scas
and
dec
push
sbb
mov
jnp
or
add
inc
jmp
das
aam
xchg
or
push
aam
fcoml
pop
out
stc
pop
movsl
cmp
jg
dec
shlb
fsubrl
or
push
pop
push
sub
xchg
jle
jb
rorb
fsts
dec
shll
push
sbb
in
fstpt
andb
dec
lds
shll
shll
inc
dec
or
sbb
fsubr
jle
fcompl
push
xchg
xor
outsl
shll
or
jl
aam
and
push
push
ret
inc
adc
lods
sarl
xor
pop
lds
pandn
inc
fcoml
insb
ret
jne
shll
imul
cld
push
pop
sarl
mov
notl
movsb
neg
push
test
inc
test
cmpsl
jmp
addr16
mov
inc
loop
jns
pop
push
in
aam
mov
add
sub
scas
ljmp
or
shll
icebp
pusha
test
imul
filds
sbb
push
lods
push
call
dec
jp
mov
pusha
ret
ljmp
adc
inc
scas
sbb
pop
out
dec
sbb
cmpsl
adc
push
jne
shrl
jo
lret
pop
xchg
xchg
dec
popa
ljmp
fistl
mov
into
jmp
or
lds
and
cmp
lods
movsl
jmp
shlb
mov
pop
faddp
movb
xlat
mov
inc
out
cmp
rorl
xor
in
push
inc
in
xchg
call
push
clc
outsl
jnp
cmp
rolb
and
xchg
push
cmp
js
push
mov
clc
xchg
xchg
int
dec
call
inc
ficoms
sub
dec
mov
ljmp
push
push
mov
scas
iret
add
pushf
pop
arpl
or
rorb
dec
adc
nop
sti
sub
pusha
sti
xchg
stos
xchg
cmp
and
xchg
push
das
jmp
xchg
cmp
jns
mov
cwtl
jp
loope
addl
insl
sarl
out
mov
jno
iret
mov
mov
jp
dec
shl
lcall
scas
push
xchg
and
call
sbb
arpl
jnp
and
sub
cwtl
xor
and
adc
and
ret
xchg
cmp
scas
adc
idivb
dec
test
xchg
push
dec
fadd
jb
push
mov
popf
andl
xchg
add
xchg
xor
xorb
hlt
xchg
test
es
and
or
int3
jmp
loope
pop
push
or
scas
jp
iret
into
std
popa
scas
jae
cltd
dec
mov
pop
mov
or
fistpl
cmpsl
adc
mov
and
daa
pop
out
jge
punpcklwd
sbb
inc
out
fwait
adc
xor
imul
sti
add
pop
movsb
data16
dec
lea
xchg
hlt
mov
push
sahf
dec
xchg
mov
stos
jg
ret
aas
push
inc
push
sub
mov
mov
add
lcall
into
xor
dec
sub
js
cwtl
mov
scas
js
faddl
pop
cmp
sub
std
jmp
jb
andb
ret
sbb
jl
fnsave
je
cmp
lret
leave
push
out
mov
icebp
jb
js
xor
pop
dec
adc
fidivl
iret
mov
cmp
pop
push
out
and
dec
push
test
sub
mov
movsl
imul
add
adc
fmul
outsb
pop
add
pop
sbb
aas
sahf
movl
jns
cmpl
jle
jl
dec
test
incb
pop
xchg
mov
add
xchg
pusha
xor
scas
pop
mov
insb
jbe
cmp
xchg
jne
pop
aas
lea
loopne
mov
lea
jecxz
mov
fs
xchg
sti
jge
call
lods
mov
jo
cli
inc
push
ret
daa
adc
xor
fs
scas
adc
push
insl
jl
sub
sti
push
sbb
xor
enter
xchg
dec
mov
pop
mov
jg
and
fsubrl
data16
pop
adc
cmp
xchg
and
cmp
ljmp
xchg
aas
sti
inc
jg
int3
jne
jmp
incl
inc
in
xchg
lret
std
iret
jge
fdivrs
xor
fcmovnb
xor
inc
jne
jl,pt
jnp
cmpsb
jo
dec
cmp
pop
inc
pop
sahf
lods
jg
nop
mov
xor
pop
lods
daa
cmp
fwait
cmpsb
shrb
sub
pop
fwait
xor
rcr
cli
cli
or
fmuls
mov
xchg
mov
loopne
pop
sub
push
inc
test
cmpsl
sub
mov
lret
out
cmp
aam
popl
lock
stc
pop
or
cmp
adcb
fnsave
inc
cltd
jbe
test
fmull
fsts
test
jae
add
mov
scas
int3
xor
and
ret
xchg
xor
mov
add
add
push
in
push
loope
push
repnz
clc
aas
mov
or
std
add
stc
push
cwtl
ret
sbb
stc
inc
in
push
pop
inc
loop
inc
xchg
repz
popa
movsl
fistl
inc
loope
adc
xchg
sub
push
sub
mov
jno
xor
jmp
clc
sub
enter
adc
fsts
lock
ds
orb
jae
dec
popf
test
inc
ret
mov
add
jae
repnz
and
mov
dec
xor
and
mov
aas
xor
jge
in
mov
mov
jecxz
jg
dec
sub
mov
lea
in
inc
sbb
dec
pop
cmpsl
dec
pop
shrb
pop
jnp
repz
imul
and
adc
mov
pop
testb
pop
mov
ds
fimull
cmp
pop
repnz
int
mov
ret
jle
mov
push
das
mov
mov
ljmp
lahf
jae
pop
mov
lods
repnz
dec
sbb
jg
sub
cmp
jge
mov
rol
adc
and
cmp
and
or
adc
cltd
pop
push
rolb
adc
or
jmp
cmpsl
repz
adc
dec
push
shrl
push
xchg
inc
loop
sbb
test
mov
push
mov
test
cmpsl
or
mov
mov
mov
pop
add
push
mov
fidivs
mov
ds
cwtl
mov
adc
popf
push
sbb
imul
or
inc
pop
cmp
xchg
push
or
mov
sbbb
loopne
xchg
xchg
stos
out
scas
cmpsl
xchg
dec
lret
loopne
mov
and
pop
cmpsl
clc
cmp
cmp
je
sbb
and
es
or
addb
repnz
jmp
lcall
adc
xchg
out
sub
dec
push
dec
jnp
push
call
add
cmp
ret
sub
cmp
sbb
mov
jb
imulb
les
push
jo
aas
sbb
cmc
dec
lcall
fildll
arpl
and
jno
cwtl
lods
pop
xor
add
push
lods
dec
setge
dec
push
dec
das
sub
out
push
insb
insb
dec
jp
sub
outsl
test
jno
add
push
mov
inc
fisubl
xchg
dec
inc
mov
sub
add
dec
xor
push
popf
int3
mov
lds
ret
ljmp
decb
or
rcl
push
mov
pop
and
stc
aas
or
cmpsl
pop
movsl
out
call
outsl
ret
xchg
mov
and
or
mov
mov
dec
sub
mov
popa
jb
push
jo
aaa
vpaddusw
in
lcall
cltd
mov
jb
ss
ja
jle
cwtl
mov
not
push
into
arpl
add
mov
xchg
cmp
out
mov
repz
and
fcmove
insb
mov
add
push
je
jae
mov
cltd
fdivl
insb
jno
test
add
sbb
inc
jbe
lock
jle
cltd
int
mov
pop
out
add
inc
sbb
les
pusha
add
cld
lock
jnp
mov
pushf
sbb
les
jle
and
jle
mov
mov
hlt
add
adcl
rclb
rcrb
xor
push
inc
imul
jns
dec
lds
cmpl
lahf
lahf
add
je
add
out
cmp
loope
sbb
lds
iret
je
add
adc
popf
mov
pushf
xchg
push
adc
es
pop
push
test
or
je
sub
mov
popf
cmp
jge
sbb
ret
stc
call
push
dec
and
adc
aaa
insl
xchg
jb
dec
sbb
push
outsl
jecxz
sub
cmp
jmp
xchg
lret
xor
popa
fimuls
jl
and
stc
and
outsb
pop
sbb
flds
rep
pop
push
pusha
dec
inc
xor
or
sbb
cmpsl
lea
cmc
adc
mov
jno
add
xor
in
aad
inc
iret
out
pop
testb
cwtl
std
sbb
jp
out
adc
fnstsw
loopne
mov
es
mov
in
loope
into
lret
mov
leave
stos
xor
adc
adc
int
mov
idivl
stos
aas
jae
pop
in
mov
xor
test
add
pop
ds
inc
push
mov
cli
pop
xchg
stc
mov
cwtl
adc
cld
inc
pop
rcll
and
sbb
mov
lea
out
ret
sbb
popf
adc
aam
je
xor
add
aas
add
jbe
inc
mov
in
pop
jno
cvtdq2ps
push
xor
push
pop
hlt
mov
fmull
cmp
jb
aaa
addb
add
jl
cs
mov
out
call
xorl
push
xor
lds
daa
movd
or
sbb
orl
push
insb
out
pop
das
or
xlat
xchg
int3
xchg
fwait
sbb
std
js
std
dec
xor
push
aad
jno
push
leave
divl
icebp
or
pop
xlat
adc
or
mov
dec
jg
mov
imulb
out
loop
sbb
std
lret
push
cmpsl
leave
jecxz
cmp
imul
mov
add
sub
push
or
xchg
jp
enter
pushf
cmp
mov
cmp
sbbl
dec
repz
stc
xor
lods
and
aad
push
lea
cmc
mov
arpl
frstor
test
adc
andb
cltd
xchg
or
loopne
std
insl
add
jns
mull
mov
xor
cmpsb
xor
jo
or
test
data16
int3
adc
jmp
pop
dec
mov
clc
les
ss
push
sub
xchg
jns
xor
sbb
xchg
xor
daa
addr16
inc
mov
or
in
add
insb
or
lcall
les
faddl
test
fwait
repz
addr16
sub
shll
xor
clc
ficoms
jecxz
jbe
cmp
mov
inc
mov
mov
push
cmpl
push
push
xorb
aaa
pop
scas
or
insl
xor
subb
xchg
pop
dec
adc
jmp
xchg
repz
jl
lods
cmc
lahf
inc
mov
mov
jge
pusha
sbb
cmp
sub
adc
adc
fnsave
dec
sbb
pop
add
jne
andb
mov
imul
lea
daa
sbbb
dec
mov
mov
pop
fisubrl
mov
in
mov
fimull
inc
push
stos
pop
push
rorb
aad
fsts
xor
sub
lods
xor
lds
dec
sub
loope
popa
imul
dec
lock
out
inc
mov
cmpl
adc
pop
or
enter
push
inc
push
jb
lcall
mov
sub
and
lahf
lahf
jecxz
arpl
outsl
xchg
loope
push
lods
iret
ljmp
test
aam
push
jg
and
sub
test
lods
icebp
das
ret
cmc
pop
fs
push
pop
mov
xor
xor
xchg
aas
or
mov
sbb
and
movsb
rcll
les
mov
cltd
js
jno
mov
jg
out
out
ret
test
rcrb
inc
enter
ret
sahf
js
scas
in
mov
fdivl
cmp
add
sahf
dec
sbb
ret
lcall
xor
sbb
jno
inc
fwait
andl
add
mov
jo
in
outsb
mov
mov
mov
lods
add
or
jae
jae
stos
daa
shr
inc
dec
mov
arpl
rcl
rclb
mov
xchg
out
inc
mov
mov
lods
fsubl
adc
cwtl
mov
test
pop
jbe
mov
xor
es
fdivrs
xchg
and
push
xor
cmp
and
rcll
add
mov
aaa
pusha
xor
jns
xor
pop
sarb
pop
testl
sub
jecxz
push
add
xchg
out
in
imul
test
sub
cltd
jo,pn
fnstenv
stos
jno
scas
ljmp
mov
pop
jnp
jp
push
dec
mov
out
in
inc
xchg
adc
pop
je
push
xchg
sbb
inc
lds
aad
popf
pop
push
add
xchg
mov
faddl
or
jno
cld
cmp
cltd
and
ja
outsl
rolb
and
in
push
dec
fnstsw
sbb
in
add
xchg
mov
xorl
fisubrl
xor
jno
mov
xor
shlb
sub
push
fistpl
es
adc
dec
jmp
or
and
xchg
in
lea
repz
mov
dec
iret
xor
or
scas
add
sbb
call
test
call
scas
lret
cmpl
push
out
dec
mov
and
pop
icebp
das
leave
fcomp
das
or
lahf
sbb
mov
mov
inc
mov
cmpb
inc
dec
sbb
lret
and
pop
mov
je
ja
int3
jne
lahf
mov
std
push
jae
es
xchg
mov
cmp
out
les
imul
push
in
out
jnp
ret
xor
or
loop
loop
dec
rorl
lock
cmpsl
outsl
outsb
nop
push
adc
xor
inc
mov
xchg
into
loope
fwait
sahf
scas
xchg
inc
movsb
lret
movsb
aam
add
movsb
cmp
jb
pop
adc
fimuls
jge
jnp
adcl
test
mov
mov
add
mov
sub
imul
mov
jp
cmp
orb
jl
out
xor
hlt
mov
cmp
mov
xchg
stc
push
jns
pusha
jae
or
sbb
push
dec
repz
mov
fmuls
inc
cmp
jp
sub
sbb
adc
sub
adc
or
fnsave
add
cli
ret
mov
xorl
dec
adc
les
inc
xchg
ret
out
fwait
push
pop
and
daa
ljmp
mov
mov
std
xor
ror
cmc
adc
scas
push
xchg
cltd
in
cli
stc
jno
jle
aam
lea
or
add
push
xor
mov
mov
repnz
mov
pusha
or
arpl
daa
ss
outsl
push
ss
test
subl
sbb
mov
fwait
lods
js
mov
inc
sub
jb
mov
sarl
lahf
adc
bound
xchg
aaa
push
into
xchg
pop
mov
xchg
sbb
xchg
lret
test
sub
xchg
push
mov
and
in
pop
add
insb
or
dec
bound
push
je
lods
mov
inc
xchg
outsb
fsub
dec
cmp
nop
outsl
sub
faddl
insl
lods
mov
enter
sub
js
clc
pusha
icebp
out
push
frstor
cs
or
add
loope
sbbb
es
popf
jl
mov
jae
pushl
push
pusha
loop
mov
push
xchg
or
xor
adc
or
enter
and
sub
inc
fistpll
into
sub
aaa
xor
lret
sbb
add
repnz
jecxz,pt
sysenter
dec
lcall
inc
stos
popf
cmc
xor
pop
popa
rep
and
insl
sbbb
sub
cmpsb
dec
shll
push
or
lock
xor
loope
mov
lods
cmpl
rcrb
dec
aaa
imul
or
loope
mov
into
clc
int
mov
in
lcall
add
popa
insb
xchg
adc
sbb
repz
dec
pushl
inc
fistps
stos
mov
pop
test
pop
add
add
loopne
jle
rol
repz
or
fidivrs
push
mov
inc
shrb
sub
fsubrp
cmpsl
repz
into
outsb
inc
cmp
mov
sti
and
push
nop
arpl
in
aaa
xchg
jb
inc
sbb
xchg
fucomi
jno
mov
stc
jle
mov
test
and
xor
inc
pop
sarb
jo
dec
inc
jmp
xchg
mov
mov
stos
xchg
stos
bsf
popf
mov
cmp
in
xchg
jg
push
aam
xchg
push
cmpsb
mov
xchg
call
fwait
mov
push
mov
loopne
outsb
aaa
jp
test
lods
mov
or
pop
ret
push
stc
xor
incl
mov
cld
inc
add
negb
mov
stc
push
aam
lcall
cld
sub
mov
dec
popa
sub
es
lcall
pop
decb
jmp
push
inc
pop
pop
stos
fildl
je
dec
mov
push
xchg
sub
or
or
fs
jb
inc
push
dec
push
lcall
out
test
push
cmp
sbb
aad
test
or
sub
mov
popa
jle
add
idivb
xchg
std
fisubs
xor
fisubs
lcall
jns
pop
mov
mov
ret
xor
out
cmp
int3
test
jnp
data16
sub
push
xchg
notl
in
mov
xchg
jmp
mov
cmpl
nop
and
lea
out
popa
inc
mov
sub
fildll
lds
popf
xlat
out
dec
pop
dec
jge
sbb
xor
mov
sbb
pop
popa
pop
xor
push
data16
scas
push
jbe
imul
aaa
sub
jg
test
fstps
stc
nop
jl
sbb
adc
movsl
jnp
pop
mov
sub
in
xor
sbbb
push
nop
movsl
loope
aaa
cmovp
xlat
jg
mov
inc
mov
shll
lea
std
jae
adc
mov
test
mov
movsb
fmull
lret
mov
repz
cmp
ret
iret
dec
cmp
enter
dec
inc
imul
leave
xlat
jae
or
aas
mov
jae
repz
mov
loop
dec
idivb
aad
mov
syscall
xor
mov
mov
jne
out
pop
jae
pusha
or
fidivl
mov
das
lock
scas
mov
stos
fs
cmp
fdiv
and
shll
jne
inc
iret
imul
mov
insl
xorb
cmp
cltd
pop
cs
mov
push
push
subl
aas
mov
mov
mov
mov
pop
fcmovbe
sbb
test
jg
je
xor
add
inc
into
mov
xchg
xchg
adc
ja
xor
stc
dec
jl
adc
dec
sahf
and
lock
xchg
mov
xlat
inc
out
bound
sub
xor
ljmp
or
vgetmantss
rcrl
xchg
fwait
push
pop
push
mov
jbe
lret
inc
jbe
leave
xchg
into
iret
cmp
fs
bnd
je
or
fadds
dec
mov
and
out
inc
fdivs
push
jl
into
pushf
cmpb
pop
test
std
push
testb
out
cmp
sub
loopne
loop
loope
mov
inc
mov
pop
xor
jns
push
call
lock
int
mov
dec
jne
testb
mov
pop
fisttps
xor
sahf
sub
pop
aad
and
dec
cwtl
mov
jl
fdivrl
sub
or
jo
adc
lea
push
int3
and
mov
push
push
sub
lcall
and
ss
test
pop
std
in
imul
out
outsb
jl
inc
push
inc
cmp
shl
fs
repnz
adc
push
seto
mov
push
fmull
popa
cmp
aas
push
xor
mov
inc
add
loop
mov
leave
mov
jmp
mov
xor
bound
cltd
pop
pop
stos
insl
out
inc
mov
xchg
rcrb
mov
pop
pop
hlt
rcll
inc
clc
mov
push
les
sub
aaa
sbb
or
add
fdivs
cmp
pusha
stc
adc
cmp
iret
jae
movsl
pop
push
movsl
push
pop
xchg
insl
adcb
mov
xchg
pop
mov
mov
repz
ret
int
lret
fsubrl
push
xor
cs
mov
testw
dec
jecxz
lret
adc
xchg
pushf
call
inc
test
add
out
sub
lahf
cmc
add
xchg
add
insb
call
fwait
push
and
mov
and
jecxz
gs
mov
jp
jnp
repz
cld
mov
xchg
in
aad
dec
testl
and
sbb
test
pop
inc
pop
push
push
out
ds
mov
fists
mov
dec
pop
mov
movsl
xchg
pop
sahf
inc
daa
jne
xor
or
inc
mov
xchg
xor
mov
imul
and
test
repz
mov
pop
and
sbb
add
push
dec
adcl
flds
mov
adc
or
push
xor
leave
cwtl
loopne
push
mov
cltd
popa
mov
ja
dec
or
xchg
lods
or
push
lea
mov
sbb
or
scas
imull
dec
pop
lods
ja
sbb
add
ds
dec
jge
fidivl
call
pop
sbb
mov
les
mov
mov
cltd
sbb
xor
divb
idivb
test
and
icebp
adc
jo
fidivs
out
jmp
pushl
inc
pop
sbb
lret
add
stos
xor
cli
inc
or
xlat
pop
cmpsb
cmpl
or
and
xchg
mov
push
cmpsb
cltd
dec
pop
adc
loop
adc
mov
cmp
inc
cmp
adc
cltd
xchg
push
add
and
or
sbb
xor
xor
push
imul
pop
xchg
mov
jne
add
sbb
or
mov
mov
icebp
repnz
dec
clc
pop
repnz
adc
pop
push
cmp
int3
rcr
clc
outsb
dec
mov
scas
sahf
imul
push
pusha
movsb
pop
push
in
fsts
mov
mov
sub
pop
and
pop
mov
mov
xchg
adc
or
jp
mov
lock
pop
mov
and
call
push
orl
cmc
or
lock
in
hlt
insl
xlat
cmpl
icebp
call
xchg
cmc
mov
push
dec
cmp
aaa
das
push
dec
pop
sub
xchg
sbb
lret
fstps
movsl
in
mov
cmp
or
jl
mov
or
addr16
push
cwtl
push
bnd
incb
ret
lods
jns
pop
add
jmp
mov
xchg
push
or
fildll
mov
adc
sti
pop
loopne
mov
sbbl
lods
jnp
adc
add
lods
repnz
sbb
jno
scas
adc
outsl
stc
out
sbb
les
ret
les
loopne
js
movsb
lret
mov
push
fnstsw
popf
mov
mov
sbb
inc
pop
xchg
test
xchg
pop
jp
sub
xchg
test
cmp
mov
daa
add
push
int3
cld
mov
fwait
dec
add
mov
pop
sub
fsubrl
adc
aas
and
repz
loopne
fdivp
testb
push
lds
add
sbb
and
int3
mov
add
pop
fiaddl
loopne
mov
into
and
mov
mov
aas
xchg
mov
dec
int
stc
in
sti
loopne
sub
cmp
out
dec
pop
ror
sarb
add
sub
enter
dec
jecxz
fs
mov
xor
cmc
fcomps
mov
pop
ljmp
jmp
sbb
push
stc
cs
add
inc
xlat
sub
cmp
jmp
fwait
xchg
test
mov
adc
mov
es
fsubrl
adc
fcomps
pop
iret
sti
push
pop
bound
jo
fldcw
jp
lock
bound
out
push
sarb
shll
jp
or
in
cmpsl
or
or
inc
mov
adc
fcmovu
rcrl
std
dec
mov
cmp
cmp
cwtl
adc
sbb
cmp
pop
out
push
inc
outsb
call
cwtl
mov
jmp
dec
pop
ja
shll
hlt
arpl
xor
call
lock
mov
cld
inc
js
dec
dec
pop
jb
jno
xor
pop
fldl
mov
ds
lock
add
push
ret
outsl
push
imul
adcb
pop
leave
jb
inc
cmc
loope
repnz
mov
mov
ja
sbb
cwtl
dec
lahf
xor
pop
enter
incl
notb
cmp
push
mov
or
clc
jae
gs
adc
mov
inc
ja
int3
addr16
in
shlb
pop
movsl
mov
out
cmp
loop
rcr
adc
shrb
test
out
and
sub
inc
jb
xchg
cmp
test
cltd
rcrb
add
sub
pop
push
add
insl
data16
daa
sbb
mov
or
add
dec
inc
mov
push
pusha
mov
pop
fcmovu
adc
js
sub
test
jbe
jno
lds
or
aas
mov
js
xor
arpl
push
xor
loopne
pop
outsb
loop
or
je
mov
stc
mov
push
xchg
insb
fstpl
adc
sbb
int
repz
sbb
lahf
mov
sub
ljmp
std
adc
dec
fistl
jecxz
fistl
and
shlb
sbb
push
into
cmp
movsb
push
movsb
sbb
out
jae
fstpt
fstps
fidivl
sub
jno
xor
jl
mov
ficoms
inc
mov
add
pop
cmpsl
sbbl
daa
mov
mov
push
lcall
les
ss
mov
imul
int3
test
insl
stos
jae
push
pusha
xchg
push
into
inc
sub
mov
mov
inc
jle
inc
cmp
in
mov
jecxz
sbb
lods
mov
sarb
mov
inc
mov
mov
dec
notb
cmpl
fnstcw
mov
mov
pop
xor
pushf
pop
xchg
sahf
sbb
push
dec
mov
lret
cmc
mov
movsl
push
add
lcall
sbb
je
mov
jg
push
cmp
adc
in
inc
repnz
xchg
mov
jg
scas
and
xchg
cld
es
ljmp
lahf
dec
ret
imul
pop
pop
pop
jle
scas
adc
pop
jle
and
xchg
in
jmp
aam
hlt
cld
mov
loopne
test
xchg
adc
shll
repz
inc
dec
push
repnz
icebp
subl
out
adc
push
lret
or
imul
add
or
dec
popf
push
push
dec
xchg
mov
nop
dec
jmp
pop
pop
jle
cmp
cmpl
adc
and
or
enter
out
and
or
sbb
sbb
les
out
pop
popa
adc
dec
jg
jle
xorl
clc
out
into
inc
loopne
sbb
loopne
xchg
fsubrs
adc
out
push
and
jg
sub
loop
cmp
inc
jae
pop
std
mov
mov
push
cwtl
frstor
test
pop
xchg
decb
scas
ljmp
pop
repnz
sbb
es
je
add
dec
pop
adc
mov
pop
pop
sti
or
dec
mov
stc
test
inc
mov
mov
loopne
cmp
pop
xorb
mov
mov
or
push
sbb
sub
inc
dec
inc
adc
inc
lods
or
mov
aaa
mov
mov
pusha
flds
scas
mov
mov
mov
addb
mov
or
mov
push
cmp
xchg
sbb
mov
insl
and
sub
and
cmp
mov
stos
in
lds
jne
cmc
bound
push
ret
popf
sbb
call
or
sahf
addb
js
cwtl
cmp
in
stc
daa
push
sub
rcrb
jg
inc
inc
pop
dec
pop
cmp
jecxz
dec
rolb
or
int
fisubrs
adc
sub
int
jmp
or
je
popf
xor
mov
out
mov
sub
pop
xchg
int3
jb
lock
hlt
mov
xchg
insb
ds
cmp
adc
pop
fninit
cmpsl
cs
mov
xchg
sbb
xor
jb
div
sysret
add
lods
push
xchg
push
push
lea
rcrl
mov
fwait
stc
sbb
pop
push
adc
mov
xor
testb
sbb
mov
lds
repz
adc
mov
movsb
inc
xchg
popa
jecxz
pop
and
jmp
fists
std
pcmpeqd
push
lods
mov
jns
pop
mov
test
sti
int3
movsl
mull
xchg
pop
aas
icebp
fsubs
xor
mov
cwtl
fcompl
jb
pushf
addr16
out
jle
repz
push
cmp
mov
das
dec
in
dec
or
push
cmpsl
push
mov
pop
jo
lds
ffree
outsb
inc
cmpsl
das
pop
test
dec
mov
inc
adc
jmp
mov
jg
xlat
sbb
mov
adc
mov
cmpsl
push
imul
arpl
xchg
pop
mov
mov
xor
xchg
push
shrb
lcall
in
mov
xchg
dec
xchg
sub
dec
xchg
mov
cltd
cltd
es
jecxz
lods
test
and
sbb
sub
xlat
popa
aas
in
iret
cmpl
mov
sub
add
mov
sbbl
test
and
ljmp
fidivl
aas
cmp
cwtl
or
out
sbb
mov
inc
mov
popf
aad
and
repnz
xchg
into
add
cltd
pop
jg
sub
shl
or
jle
jo
cld
stos
mov
dec
addr16
mov
mul
cmp
jecxz
pop
lret
movsl
popl
bound
adc
push
or
dec
xchg
mov
nop
ret
stos
jnp,pt
or
inc
fwait
dec
out
stos
push
or
dec
popf
add
cmc
xchg
jo
aam
pop
out
inc
pop
aas
std
or
aas
daa
add
xchg
out
mov
neg
sti
outsb
sbb
xchg
xor
test
pop
sahf
loopne
cmpsb
inc
adc
and
lahf
ljmp
sbb
mov
add
adc
int
jge
popa
dec
movsb
insl
adc
push
push
popf
xchg
test
fcmovu
jo
jg
jno
push
ret
popf
mov
sbbl
sbb
dec
loopne
xchg
pop
cmp
push
pop
movsl
mov
imul
push
push
jp
dec
orb
inc
dec
bound
push
cmp
or
movsl
iret
ss
push
or
hlt
push
cli
push
push
popf
sbb
stos
jo
adc
sahf
movsl
shlb
dec
cmp
inc
sahf
mul
mov
dec
pop
sbb
dec
or
jnp
push
cmp
mov
adc
dec
jb
test
outsl
xor
stos
sbb
push
stc
mov
dec
orl
daa
mov
mov
jo
jne
xor
and
adc
popa
xor
push
jg
cs
push
daa
mov
mov
bswap
flds
mov
push
inc
add
filds
repnz
lret
insl
pop
ja
adcl
call
pop
dec
push
mov
jl
pop
mov
jne
cld
cmpsl
loopne
loope
mov
test
mov
ret
mov
lea
inc
mov
sarl
jne
test
movsb
into
icebp
mov
out
or
add
adc
inc
imul
push
dec
cltd
jb
fcom
add
cmp
mov
mov
icebp
lret
mov
push
cwtl
jle
push
push
mov
inc
jge
sarl
xchg
jb
popf
notb
or
push
adc
lahf
add
pop
sub
jb
jns
mov
xchg
mov
xchg
add
int
xor
mov
jge
mov
rep
test
push
jno
or
ss
cld
xchg
test
aam
or
inc
mov
cmpsl
daa
test
and
in
into
pusha
test
jns
aam
sbb
ficomps
jl
jne
notl
adc
mov
lds
mov
lcall
fstl
icebp
cltd
aaa
test
xor
push
pop
cmpsb
int
xchg
dec
jecxz
jo
or
dec
push
lods
and
mov
lcall
add
imul
cmp
mov
dec
test
cltd
movsb
decb
jne
pop
fsubp
dec
jb
xor
test
cmc
add
or
loope
jbe
stos
pop
test
push
out
cmp
xchg
int
outsl
xchg
jecxz
jp
adc
dec
sbb
fsts
jns
jge
cmp
sahf
shll
push
daa
in
sub
ret
or
inc
push
inc
mov
push
testb
cli
xor
insl
add
add
or
mov
mov
cmc
flds
fs
mov
pusha
sbb
mov
dec
inc
mov
and
push
add
imul
add
rcr
xor
jae
adc
setns
lea
mov
lret
push
lods
sub
jp
scas
andb
sub
jg
jmp
inc
dec
loope
std
jb
push
sub
call
divl
popa
jge
push
or
jne
fstpt
roll
push
test
jge
push
daa
fcoml
insl
push
std
decl
mov
ljmp
lahf
nop
or
push
jp
das
int3
add
mov
jae
jnp
lock
das
test
add
loop
out
ss
cmp
jmp
es
in
ffree
mov
daa
xchg
aaa
adc
jne
push
mov
push
hlt
jno
mov
gs
pop
jmpw
dec
aam
mov
cmp
inc
sub
fsubrs
and
std
leave
pop
mov
or
loope
pop
repz
jne
movsb
jbe
dec
mov
inc
shll
pop
cmc
push
jecxz
xchg
out
or
adc
xorb
test
cmc
mov
add
push
adc
mov
mov
adc
cmpb
push
jmp
fmul
aad
inc
push
icebp
rcrl
or
adc
scas
dec
mov
or
xchg
cmpsb
rol
xchg
aad
dec
std
and
imul
push
enter
jae
bound
jge
cmp
jge
ja
rclb
or
in
mov
mov
xchg
std
push
adc
or
cwtl
and
sbb
xchg
out
int
outsb
inc
inc
mov
sub
pop
orps
jle
aaa
add
icebp
cmp
or
jp
out
idivl
pop
push
roll
push
filds
and
fs
aad
cltd
mov
daa
or
push
cmpsl
into
xor
add
pop
flds
adc
cli
cmpsb
fst
es
and
inc
icebp
loope
mov
rolb
lret
lods
cmp
sbb
xchg
xor
sub
cmp
ret
cmc
lret
push
dec
inc
jne
mov
insl
pop
mov
dec
daa
insl
xchg
cmc
xchg
mov
in
outsl
rcrb
in
in
fiadds
or
insb
xor
push
pop
mov
mov
push
dec
stos
mov
fwait
dec
out
mov
lock
popf
inc
cwtl
dec
aam
xor
pop
rorb
sarb
imul
adc
nop
and
pop
dec
sahf
sub
pop
call
push
lods
sbb
cltd
test
jb
test
jbe
jns
cli
cmpsl
jmp
fwait
push
mov
test
cld
or
mov
test
push
jo
mov
sbb
sbb
rcll
scas
daa
shlb
mov
js
notb
cli
cmp
rolb
add
inc
jno
popf
cmpsl
das
dec
cs
sub
test
in
sub
adc
aas
shl
dec
out
jb
jge
and
or
mov
ljmp
add
mov
adc
sahf
into
inc
fs
imul
xor
stos
sbb
decb
fimull
pushf
push
inc
sub
ret
mov
sbb
mov
andl
dec
imul
and
outsl
cmpsb
lret
jnp
and
and
inc
movsl
cmp
lahf
inc
xor
cmp
int
xor
fnstsw
and
scas
add
stc
mov
loopne
push
inc
imul
or
data16
add
dec
cmp
out
rcrb
and
pop
inc
fmul
mov
call
cs
pop
mov
push
push
fstps
mov
movsl
das
inc
repnz
pop
les
test
push
andl
das
xchg
sbb
or
lret
mov
push
dec
fst
pop
iret
sub
jae,pn
out
adc
push
add
pusha
add
js
addr16
movsb
ret
in
dec
gs
test
or
or
std
test
call
and
aaa
insb
cwtl
xlat
ret
inc
mov
push
xchg
insb
mov
push
and
sbb
fistps
ficoms
jl
lea
adc
enter
fdivr
insl
in
loop
cmp
int3
hlt
push
leave
dec
cmpsb
dec
push
sub
and
add
inc
gs
sbb
test
js
xchg
ss
out
push
out
bound
jns
into
mov
fildll
cli
jmp
popa
inc
pop
test
in
inc
dec
and
lods
loopne
inc
xchg
mov
add
pop
dec
add
cmc
imul
lods
xchg
mov
jle
mov
jbe
rcrl
fcoml
test
cwtl
cld
test
adc
enter
mov
insl
push
mov
insb
push
ficomps
mov
gs
xor
and
and
daa
popf
or
test
fnsave
pop
push
in
sub
mov
int
push
and
cmc
mov
mov
cmpsl
lahf
es
cmpsl
pusha
out
insb
dec
js
push
jmp
push
inc
push
add
bound
mov
shlb
pop
sets
pop
lret
mov
adc
pop
test
xorb
pop
orb
mov
out
test
mov
lods
push
roll
cmp
xor
in
daa
repz
xor
adc
movb
cmp
jmp
cmp
adc
mov
lahf
push
mov
inc
add
cwtl
or
sub
mov
jmp
add
enter
rcrb
lods
ss
push
loope
or
or
sbb
lock
push
dec
dec
jle
lahf
and
add
ret
shl
cld
adc
dec
adc
sbb
push
xchg
pop
sbb
sbb
stos
push
daa
fldenv
mov
jge
cmp
in
push
xchg
scas
jbe
xor
fidivs
jae
or
in
popf
out
push
loope
jno
insl
push
xchg
lahf
adcb
repnz
jnp
addr16
cmc
add
dec
xor
stos
add
jp
mov
cli
out
push
je
jae
jle
or
inc
imul
xchg
shl
inc
stos
mov
push
stos
cmp
add
daa
pop
and
add
jb
cmp
mov
mov
xchg
mov
cli
shr
push
pop
or
negl
sub
xchg
ror
jp
enter
sub
dec
imul
pop
mov
repnz
fidivs
lock
imul
cld
es
sub
xlat
and
xor
xor
addl
arpl
and
dec
xor
xorb
arpl
movsl
mov
sbb
fimuls
cmp
sub
scas
imul
mov
push
add
jae
movsb
frstor
ficoml
sub
mov
mov
sti
jbe
in
inc
jne
sbb
aam
pushf
jp
std
sbb
call
xchg
popl
add
add
add
cltd
mov
pop
xor
inc
add
adc
mov
mov
push
sub
cmp
push
mov
lods
mov
xlat
mov
or
xor
or
lea
neg
or
or
sahf
push
dec
cmp
fnsave
es
sahf
shlb
adc
xchg
adc
bound
mov
add
and
je
dec
jo
das
fidivrl
aam
popf
sbb
movsl
push
fidivs
sbbl
mov
sbb
notl
push
test
hlt
ja
adc
xchg
fsubp
shll
jno
movsb
pop
out
push
arpl
out
out
dec
push
jae
mov
insl
out
jle
movb
repnz
frstor
pushf
cmp
push
sbb
xorb
push
jmp
xor
dec
mov
jl
loopne
xchg
fsubrl
inc
cmpsl
mov
push
xchg
test
dec
pop
mov
loopne
and
mov
mov
push
psubsw
aaa
mov
js
xchg
mov
and
adc
pop
andl
mov
fcmovnu
fstps
cmp
insb
clc
bswap
sub
dec
lret
fists
xor
aad
add
insb
cmp
fnsave
stc
and
mov
push
mov
cmp
add
mov
sbb
ret
cltd
lea
scas
xor
xchg
xchg
in
loope
bnd
test
ss
leave
sti
sti
cmc
repnz
dec
pop
mov
mov
mov
fisttpll
lds
je
stc
add
cmpsb
and
mov
aam
nop
xor
call
fmul
out
inc
mov
xlat
mov
fcomi
mov
adc
outsb
in
push
mov
mov
sahf
jecxz
fstpl
fsubp
mov
lds
loop
pop
stc
adc
and
mov
mov
push
icebp
cld
mov
or
jge
adc
inc
cmp
adc
iret
mov
sub
xor
enter
stos
sahf
pop
jp
sbb
jmp
sarl
xchg
int
testl
sti
or
mov
sbb
imul
add
popf
repz
pop
mov
insl
xor
inc
mov
mov
lcall
dec
jo
push
aas
imul
sbbl
sub
push
test
test
fisttps
cmc
outsl
cli
pop
dec
aam
xchg
add
pop
push
sbb
add
adc
xchg
xor
mov
addl
mov
xchg
cmp
jne
add
xor
loope
add
dec
imul
sub
xor
or
inc
lods
fidivrl
enter
les
dec
aam
jno
pop
jb
jmp
cmp
fisttpl
xlat
shl
xchg
pop
dec
mov
clc
cmp
jo
mov
inc
hlt
pop
imul
aad
mov
xor
pmaxub
mov
leave
jno
sahf
push
cmc
push
aad
pop
push
cld
jmp
fidivrl
mov
mov
mov
or
cltd
or
cs
std
mov
testb
add
cmp
dec
iret
push
stos
xchg
dec
mov
dec
fsubrl
xchg
xor
inc
sbb
xchg
pop
aam
lods
jno
data16
test
dec
jnp
adc
fs
sbb
mov
repnz
pop
mov
fistpl
push
cmpsb
sbb
gs
std
jle
dec
mov
bound
pop
out
pop
les
pop
or
roll
mov
xor
adc
out
and
mov
sahf
xor
fcmovnbe
sub
mov
sub
fs
sarb
pop
mov
jg
loop
inc
bound
call
inc
lock
insl
test
lock
cld
add
movsb
fidivrs
adc
or
jbe
movsl
insb
stos
clc
std
push
scas
jecxz
jp
mov
roll
push
sub
icebp
or
cmp
jne
sub
iret
fsubp
push
aam
pop
fisubrs
lret
adc
int3
ja
mov
loop
push
cmc
lret
repz
mov
mov
xor
int
pop
push
push
push
shll
fcoml
inc
jle
jb
mov
adc
movsl
arpl
movsl
aad
push
idivb
or
repz
xchg
adc
test
aad
divl
lods
adc
out
iret
adc
add
idiv
out
fcomip
mov
dec
push
or
inc
pop
fnstenv
aaa
arpl
std
rol
gs
dec
xor
daa
inc
mov
jnp
sub
mov
or
sub
push
adc
and
push
mov
inc
mov
lret
ret
cmp
pop
test
xchg
or
iret
ret
xchg
je
aad
mov
sarb
into
lcall
sbb
pop
and
std
sbb
pop
mov
push
dec
push
mov
loop
inc
or
push
bound
xchg
or
pop
fldcw
mov
arpl
lds
test
sti
push
ret
jge
enter
fwait
dec
loopne
mov
out
inc
sbb
add
or
sub
add
fisubs
sbb
in
shll
sti
adc
xchg
clc
dec
add
push
lock
sub
testl
add
cmpsb
pop
decb
std
jns
add
mov
dec
or
xchg
cmp
jle
mov
jg
int3
stos
in
jle
test
adc
mov
lcall
das
orl
fwait
mov
gs
push
lods
adc
sub
push
push
adc
mov
into
je
mov
or
and
mov
in
push
add
mov
pop
inc
sub
aas
lahf
loopne
loop
jge
jno
push
mov
sub
jb
test
in
pushl
sbb
pop
inc
or
lahf
cmp
inc
xchg
sbb
dec
fbld
xchg
cli
cmp
inc
shr
sarl
cld
jl
orl
cld
sahf
or
fwait
xlat
sub
fimull
flds
xor
cmp
in
hlt
mov
out
repz
shrl
cmpsb
xchg
std
jl
mov
mov
xor
popf
xor
loopne
or
jle
mov
xor
sti
fidivrl
xlat
push
or
jae
dec
out
cmpsb
call
inc
sbbb
xorb
fldcw
aas
lods
dec
lods
cmp
jecxz
dec
repz
movsb
pop
push
push
sarb
pop
sbb
push
in
nop
push
aad
in
je
ja
ds
ret
hlt
and
push
dec
in
mov
lcall
mov
ds
push
jno
cmp
fwait
mov
fsubs
add
mov
in
cmp
xchg
jae
jae
mov
adc
scas
adc
and
rcrl
cmp
aaa
fsin
inc
std
movsb
cmp
int3
adc
out
and
adc
inc
lcall
adc
jnp
int
lds
mov
aas
repnz
dec
and
jnp
out
adc
stos
push
jg
es
leave
cmp
and
test
cmp
adcl
xchg
neg
pop
pop
pop
lea
negl
out
andb
lods
sbb
insl
add
xchg
fadd
mov
sbb
ljmp
pop
idivb
lret
in
sti
add
insl
pop
mov
sub
xchg
sbb
aas
inc
and
and
pop
shrb
pop
or
dec
pop
pop
jmp
fcom
sub
mov
or
int3
mov
sbbl
insb
xchg
mov
mov
ja
xchg
or
imull
jg
xchg
data16
decb
xchg
sti
cwtl
sbb
inc
xor
shl
stos
mov
push
insb
or
test
xor
rcrl
push
jb
popa
push
mov
cmpsl
jbe
push
inc
cmp
ljmp
xchg
add
mov
sbb
insl
sbb
imul
xchg
pushf
ror
xor
sbb
outsl
testb
leave
add
call
cwtl
mov
add
inc
mov
test
dec
test
outsb
adc
push
in
push
loop
mov
sti
fs
push
jae
push
arpl
fmul
repnz
jle
mov
sbb
adc
add
mov
sub
hlt
clc
das
pop
inc
mov
jbe
outsl
or
push
mov
inc
mov
add
ss
dec
lret
push
mov
mov
or
jbe
mov
inc
inc
push
int3
in
lock
and
pushf
mov
mov
daa
pop
pushl
fwait
xchg
inc
xchg
fildll
jns
call
repnz
lods
daa
or
call
adc
jo
test
push
es
jo
iret
test
and
scas
xor
mov
add
dec
loopne
fcomps
jo
js
push
dec
mov
xorl
xor
xlat
or
dec
jg
testl
mov
addl
adc
jge
and
push
jmp
mov
cmp
in
mov
clc
dec
xchg
inc
mov
and
mov
xchg
in
adc
hlt
xchg
in
sti
xchg
dec
and
cmp
insb
add
out
aaa
xor
xchg
cmpsb
jae
dec
pop
dec
xchg
ds
jg
cmp
adc
xchg
lods
test
movsb
test
popf
testl
or
in
enter
add
sbb
enter
push
pop
cmp
pop
fs
and
adc
arpl
ss
js
jmp
sub
mov
xchg
add
sub
fisttps
mov
lock
pop
xchg
mov
lea
ret
xor
add
adc
iret
fidivs
std
decl
push
lea
add
mov
jae
out
mov
xor
sahf
subb
mov
dec
out
mov
sub
nop
lods
mov
jl
fcoml
sbb
test
and
lret
mov
out
ss
imul
call
add
lretw
gs
mov
push
inc
repz
ret
sbbl
pushl
sbb
xchg
mov
xchg
jecxz
dec
adc
mov
js
repnz
mov
popf
jbe
dec
loopne
cld
pop
aad
push
stos
shlb
jo
sti
add
fiaddl
movsl
movsl
or
mov
loopne
push
xor
aas
pop
adc
jne
mov
xor
sbb
clc
scas
in
cmpb
push
lods
jmp
out
pop
adc
mov
inc
lock
in
pop
das
ss
ljmp
mov
clc
pop
xchg
shrl
mov
adc
cmc
mov
xor
test
sub
dec
pop
dec
mov
cmpsb
shrb
jb
fwait
je
jmp
jmp
stos
push
xor
dec
push
rclb
sbb
xorb
mov
push
and
clc
jge
xchg
stos
stos
test
push
ficoml
les
dec
gs
stos
or
out
stos
out
fs
fs
cmp
ret
push
pop
std
mov
aam
dec
inc
div
xchg
hlt
push
inc
test
mov
out
cld
sub
into
ret
mov
stos
push
xor
xor
xchg
lea
imul
test
icebp
push
sub
pushf
inc
fdivs
addr16
mov
divl
loopne
push
lahf
xchg
xchg
stc
cld
pop
xchg
cmp
jne
fsubs
scas
mov
data16
popa
je
inc
sbb
xor
cld
stos
fwait
repz
shll
dec
adc
jge
mov
or
xchg
mov
rorb
sbb
pop
xchg
lds
sbb
cwtl
notb
js
arpl
rorl
push
or
xor
add
stos
adc
fstpl
or
lret
sub
cld
lods
xchg
repz
imull
imul
ja
mov
and
jb
cmp
ficoml
test
mov
xchg
std
pop
jl
inc
pop
and
dec
int3
cmp
clc
and
and
mov
aas
fidivrl
inc
mov
jp
imul
fdivrl
dec
adcl
xor
cmp
jg
jge
jmp
sub
in
xchg
ljmp
fs
les
xor
in
sbb
std
inc
sbb
xchg
loope
push
scas
mov
pop
aad
push
insl
xchg
leave
lods
dec
inc
mov
sarl
xchg
jnp
adc
xchg
xchg
inc
scas
loop
sarb
sahf
lahf
xchg
jecxz
pop
jbe
loop
dec
mov
sub
jmp
cltd
out
notl
pmaxub
inc
icebp
mov
xchg
outsl
fldcw
fadds
adc
mov
xchg
xlat
sbb
jnp
or
pop
add
scas
mov
cwtl
cmp
jo
pop
dec
iret
push
cmp
dec
pop
or
loop
out
xchg
je
mov
nop
pop
add
and
push
aaa
retw
aam
cmpsl
ljmp
and
sub
lahf
dec
in
cmpsb
lods
test
dec
push
push
ret
pop
lahf
rorl
mov
popf
hlt
mov
rol
ds
mov
cmp
inc
shrl
in
xchg
or
push
push
inc
lds
push
xor
fs
jp
xchg
nop
mov
jb
or
mov
lret
call
sbb
scas
fadd
popa
pop
notl
ficoms
push
sbb
shrl
popf
clc
jl
xor
stc
lea
in
inc
adc
mov
xchg
pop
stos
mov
outsl
mov
scas
jl
lds
pop
es
add
enter
enter
ficomps
jp
repnz
jmp
adc
in
jle
push
stc
sub
aam
imul
aad
mov
sbb
mov
mov
inc
in
xchg
mov
imul
call
leave
or
adc
pop
add
test
inc
add
jae
mov
mov
test
in
mov
int
sub
insb
test
test
pop
sbb
dec
test
cmp
test
mov
mov
or
add
mov
or
inc
push
jmp
sbb
out
mov
cmpsl
divb
lcall
lahf
add
fwait
aam
iret
lret
cmc
lea
xchg
aad
rcl
inc
jb
fs
nop
in
shlb
test
lcall
pushf
xor
scas
mov
xor
pop
jle
lcall
in
popa
xor
pop
sbb
fbld
out
hlt
mov
inc
popf
test
sub
shl
fildll
sbb
mov
cmp
into
jmp
dec
std
dec
lea
dec
sti
mov
fldenv
inc
test
mov
adc
sbb
aas
mov
jmp
xchg
jl
movl
enter
inc
add
movsl
bound
mov
adc
pop
inc
incb
aas
popf
dec
jb
pop
adc
test
pop
dec
flds
out
int3
cwtl
inc
sub
mov
sub
dec
add
inc
push
xchg
data16
in
and
inc
gs
and
aas
xchg
repz
je
in
inc
or
out
outsb
icebp
lds
or
inc
jo
setb
arpl
stc
aad
andb
les
les
sbb
mov
pop
mov
xchg
add
xchg
sbb
test
sub
in
mov
outsb
inc
lahf
gs
inc
gs
fbld
mov
add
scas
test
jnp
div
sub
iret
add
adc
fildll
mov
mov
mov
sbb
jmp
outsb
mov
jg
mov
fadds
mov
fcompl
sub
inc
and
add
in
mov
loope
pop
outsb
mov
inc
inc
dec
push
mov
jge
push
push
movsl
mulb
lock
cmc
stc
cmpsb
outsb
pusha
sub
sub
fucomp
cmpsl
push
js
cmp
js
inc
or
mov
add
pop
mov
mov
shlb
out
xor
out
xchg
mov
xor
mov
add
push
insl
sbb
push
popa
inc
mov
adc
jle
mov
push
or
xor
sub
test
adc
fimull
out
mov
aaa
xor
dec
aad
add
loope
mov
sbb
lea
aad
xchg
xchg
add
and
or
lcall
mov
lret
lcall
gs
sub
fiaddl
loopne
xchg
stos
add
adc
pop
push
xchg
jno
inc
or
jnp
mov
dec
push
rcl
xchg
loop
stc
std
mov
mov
aaa
mov
cmp
cmp
es
insl
and
adc
mov
lods
fistl
aaa
push
pop
push
adc
jno
scas
sub
imul
int
mov
ret
xchg
shlb
outsb
xchg
out
ja
into
pop
push
cmpsl
testb
jecxz
cmc
leave
push
adc
outsb
xchg
dec
inc
adc
add
jo
cwtl
out
stos
in
testb
fs
inc
sub
pop
sub
adc
andl
xchg
mov
addr16
sbb
nop
int
mov
jle
adc
xchg
adc
lods
xchg
stos
push
pusha
sbb
mov
outsb
sbb
jecxz
sbb
sahf
mov
push
arpl
cmpb
out
mov
push
je
jns
mov
and
mov
mov
mov
scas
sub
inc
mov
sub
es
out
mov
ret
jg
or
pop
push
jb
cs
mov
in
inc
movsl
sub
fstp
ljmp
lods
jle
and
cmp
movsb
inc
hlt
arpl
add
lea
sub
dec
test
push
jp
fisubrs
leave
fwait
pop
sbb
xchg
nop
repnz
xchg
pop
sbb
mov
test
and
xchg
movsb
and
in
and
push
icebp
stos
cwtl
insl
sti
mov
xor
fs
sti
push
jae
int
jmp
je
dec
jns
xlat
jae
add
nop
andb
pop
fldl
mov
pop
sbb
rorl
pop
xor
pop
dec
xchg
test
jno
xchg
mov
xorl
enter
gs
mov
add
xorb
push
mov
xlat
ret
push
loop
pop
test
xor
push
int3
sub
cmp
cmp
push
mov
cmp
push
add
in
mov
pop
movsb
dec
ret
icebp
sti
cmp
clc
movsb
dec
inc
cmp
jb
les
and
lods
pop
cmpsl
cs
sti
roll
cmp
bnd
mul
mov
xchg
mov
mov
outsl
and
es
xchg
pop
mov
sbb
cmpsb
and
jle
add
hlt
clc
pushf
in
ja
leave
fwait
lock
mov
push
stos
and
jmp
xchg
pop
mov
stos
adc
push
add
sbb
arpl
in
jmp
dec
ret
arpl
cs
sub
sub
test
fwait
fwait
mov
inc
movsb
jae
jg
arpl
mov
sub
jecxz
push
ret
aam
movsb
adc
mov
mov
int
dec
dec
popf
das
sbb
jg
sbb
mov
arpl
popf
cwtl
stos
js
loope
xchg
push
psubd
ljmp
bound
cs
cld
xor
mov
nop
nop
or
sbb
sub
lock
pusha
shlb
cmpsl
adc
mov
loop
or
call
test
mov
push
push
xor
loope
lahf
push
sub
xchg
sub
mov
lds
mov
xchg
sbb
js
sub
jns
data16
or
lea
pop
xchg
lret
sbb
sbb
enter
ss
lcall
xchg
mov
outsl
andl
lods
loopne
aad
pusha
mov
divb
das
js
xchg
ret
jmp
test
cs
or
repz
mov
test
add
xor
sbb
inc
ret
add
mov
and
loopne
lods
mov
jge
mov
or
insb
aam
shlb
imull
jmp
mov
ret
stos
sub
jno
mov
wbinvd
jmp
roll
ljmp
out
and
adc
and
jne
cmp
pop
fisubrs
jbe
cmp
and
mov
mov
xlat
jp
out
xchg
test
and
pop
pop
jmp
pop
pop
and
iret
inc
lea
pop
sti
sub
int3
pop
ret
mov
cmp
dec
xchg
fildl
push
dec
sbb
insl
int3
cmp
stos
mov
popa
fs
decb
adc
into
dec
in
lahf
jg
push
stos
dec
add
and
inc
or
mov
fwait
cltd
popf
leave
sahf
add
cmpsb
lret
enter
sub
sbb
mov
push
sub
bound
add
in
or
pop
jae
and
jbe
push
mov
adc
jb
adc
out
mov
fmul
jmp
pop
call
mov
sub
xlat
jmp
ss
mov
imul
mov
inc
addr16
insl
movsb
int
ja
lea
sub
pusha
inc
push
mov
bound
mov
add
insl
in
cwtl
mov
push
mov
xor
push
rcll
fistl
negb
fildll
rorl
mov
aad
mov
add
or
out
incl
testl
cmp
nop
fistpll
mov
fsubrl
add
lods
arpl
push
movb
pop
daa
mov
bound
sbbb
cmc
xchg
scas
sub
and
hlt
lcall
shrl
dec
push
test
popa
inc
iret
loopne
push
ds
pop
xchg
mov
ja
xchg
fcoml
dec
jnp
dec
inc
pop
mov
xchg
fs
inc
inc
inc
mov
sbb
std
pop
in
mov
in
sub
mov
enter
fwait
fs
rolb
test
movntps
jb
lahf
xchg
pop
sbb
mov
jecxz
mov
push
xor
xlat
loop
popf
ljmp
clc
jg
loop
pop
mov
ficompl
inc
imul
cmp
scas
mov
call
dec
pop
inc
clc
stos
test
sbb
ljmp
std
push
jg
push
push
mov
inc
fsubr
and
fs
push
pop
in
dec
or
push
xchg
out
xchg
jnp
sbb
clc
stc
lret
nop
mov
push
push
mov
fwait
xor
jmp
xchg
adc
pop
int
popa
push
mov
push
out
mov
vsubpd
cmpsl
cmp
dec
and
out
inc
mov
es
outsb
cmp
out
mov
out
jecxz
jle
cwtl
addr16
mov
addr16
stc
sub
cli
sub
repnz
push
repnz
inc
call
adc
enter
adcl
push
inc
pop
mov
mov
adcl
testb
mov
aaa
in
push
jo
popf
repnz
sub
or
push
repnz
sbbb
sub
mov
sub
add
cmp
mov
outsl
dec
cld
push
inc
pushf
mov
lock
test
out
std
sub
dec
add
outsl
stos
test
lret
cmp
push
bound
or
fistl
idivb
out
scas
sub
ljmp
les
xchg
mov
sti
and
xchg
lods
mov
mov
ja
push
sub
jecxz
pop
xchg
pop
mov
cmp
clc
push
cmp
xchg
cmp
test
in
xor
mov
fstp
cld
cmp
pop
or
pop
mov
and
jmp
adc
sbb
sbb
push
nop
inc
dec
lds
add
xor
dec
adc
leave
daa
cmp
cmp
cmp
jp
daa
fnstcw
push
mov
add
call
jb
scas
outsb
mov
jl
sub
cmpl
push
mov
jns
hlt
pop
xchg
subb
popa
or
sbb
repnz
mov
mov
jnp
jnp
jmp
push
jge
mov
in
lret
mov
rcrl
pop
jl
je
push
lcall
push
pop
adc
lret
mov
stos
scas
leave
inc
outsl
mov
mov
fiaddl
xlat
lcall
lahf
pushf
leave
xchg
out
test
adc
pop
sar
les
enter
aad
enter
adc
in
out
in
mov
push
mov
int3
or
pop
call
xchg
aaa
mov
mov
popf
xchg
adc
mov
repnz
ret
and
cs
loopw
insb
dec
dec
popa
mov
jl
arpl
xor
ficomps
sti
cs
mulb
popf
cmp
xor
jp
sahf
xchg
cmp
mov
cmp
dec
adc
vprotb
adc
cmpsl
stos
push
enter
ljmp
inc
sbb
pop
inc
or
ds
lods
movsb
adc
repz
loope
cmc
jne
outsb
jle
fildl
lds
fistpl
sub
repz
cmp
pop
mov
mov
mov
jp
inc
ljmp
push
pop
sti
and
repnz
ljmp
mov
mov
jae
outsl
outsl
xor
dec
sub
adc
insb
dec
sbbb
cmp
push
mov
mull
mov
add
pop
mov
add
jns
sahf
lea
shll
mov
adc
hlt
int
ja
cmp
loop
mov
mov
test
mov
cs
in
outsl
mov
lods
mov
in
mov
mov
sbb
rclb
loop
cmp
push
sub
sahf
in
fxam
xor
movsb
xor
mov
jg
aaa
pop
sti
jg
mov
in
icebp
mov
inc
pop
stc
ljmp
gs
std
xchg
popf
bound
aam
das
pop
push
xchg
mov
add
fwait
cmc
dec
cmp
idivl
fldt
inc
adc
test
ljmp
jae
sbb
lea
js
jmp
lods
and
fisttpll
pop
xchg
scas
iret
jnp
addr16
or
xchg
sbb
out
loop
lods
rclb
and
mov
dec
push
and
mov
hlt
mov
sahf
cld
sbb
bound
inc
div
lds
sbb
dec
push
fwait
adc
xor
je
inc
adc
pop
inc
cmp
fiaddl
movsl
lods
xor
into
and
mov
lcall
shl
outsb
dec
adc
inc
jmp
add
cmp
loopne
lret
popa
jmp
ret
into
lods
cli
insl
inc
push
fs
lods
aad
mov
push
shr
mov
popa
add
pushf
mov
cwtl
gs
sub
ss
push
pop
pop
inc
mov
rorl
push
add
add
sbb
push
mov
xor
insb
xchg
jbe
mov
push
and
xor
adc
in
sub
negb
xor
push
push
xorb
push
push
inc
xor
aad
and
fsts
test
fdivl
xor
push
int3
mov
cmp
pop
mov
out
mov
cmc
enter
aad
divb
movsl
ljmp
and
mov
mov
xchg
or
dec
adc
jnp
out
jne
mov
loop
sub
insb
mov
xor
dec
xlat
or
or
fmuls
ljmp
roll
into
push
adc
inc
inc
fidivs
jnp
mov
out
loop
add
dec
inc
sub
leave
fimull
test
cmp
jae
cmp
fcmovbe
and
add
cmpsb
mov
cltd
and
idiv
push
mov
pop
add
outsb
jg
push
test
bnd
xchg
jns
aam
punpcklbw
xchg
clc
ljmp
lcall
sub
xchg
sbb
imul
cmp
filds
jnp
dec
iret
pop
pop
xorb
mov
jge
mov
push
dec
adc
fistpl
pop
js
hlt
cmc
pop
nop
insl
mov
sahf
sub
cs
bound
mov
cltd
or
ja
or
lock
sbb
les
add
add
shl
es
lds
sbb
fcompl
sahf
in
je
ret
cltd
out
or
fdivl
push
add
lods
out
lahf
insb
xchg
mov
lock
pop
and
xchg
push
mov
aaa
jnp
xor
js
mov
adc
fildl
jge
lret
fldcw
in
shl
push
adc
cmpsb
add
cmp
aas
in
xchg
leave
fdivp
dec
push
fnstsw
movsl
xchg
add
sub
push
jno
imul
mov
adc
xor
mov
inc
lret
stc
lea
insl
inc
fildll
ret
repnz
mov
test
fisttpl
int
aad
test
movsb
add
inc
or
imul
ljmp
push
das
cli
dec
movsl
mov
cmp
jae
inc
popa
insb
rcrl
roll
pop
stos
or
in
shl
inc
mov
lahf
fwait
mov
test
lret
cltd
jmp
pop
js
add
fwait
pop
hlt
gs
pop
cli
loop
jno
cmpsb
jae
pop
fisttpll
clc
xlat
lock
push
sbb
jns
jge
stos
mov
xchg
gs
cmpsl
out
jo
mov
lcall
out
xor
add
xor
inc
sub
outsl
lcall
mov
icebp
stos
lock
aam
xchg
test
push
dec
out
push
push
push
ss
mov
pushf
xor
sub
aam
gs
loopne
mov
sahf
loope
call
mov
mov
jne
mov
xchg
and
jg
test
aaa
push
pop
add
cmp
or
jae
pusha
out
pop
or
mov
pop
mov
push
std
enter
xchg
add
outsb
sub
daa
and
ja
jl
cmp
fcoms
aad
xor
packuswb
shr
or
pop
mov
jg
call
mov
hlt
lahf
push
out
push
aaa
add
fucomip
cmp
cld
cwtl
xchg
xor
imul
xchg
mov
sbb
fisubrs
and
jp
push
repz
ds
fwait
cld
into
fdivl
and
jo
pop
test
out
insb
mov
pop
scas
push
adc
data16
repnz
popf
sbb
mov
test
xchg
mov
cltd
std
push
jecxz
ret
xchg
inc
dec
fcom
sub
repnz
add
out
or
jp
mov
lcall
enterw
fnsave
or
lea
jb
adcb
data16
aas
and
and
adc
mov
mov
mov
lcall
sbb
mov
dec
mov
sahf
sbb
out
xchg
daa
movsb
mov
xor
pop
cld
lods
movsl
cli
adc
movsl
xchg
daa
inc
push
rcll
push
xchg
pop
add
shlb
das
fcmovb
outsl
out
adc
xor
dec
mov
xlat
popf
adc
imul
jg
test
jg
cmp
lret
sub
adc
jb
inc
xchg
xor
mov
ss
mov
nop
pop
rcll
lods
mov
mov
lods
sar
lods
mov
lret
cmpsl
or
cmp
cltd
xchg
jp
cli
iret
movsl
pop
mov
push
jge
orl
add
jl
lds
push
sub
or
adc
arpl
outsl
jl
jg
dec
jne
cltd
add
mov
out
scas
push
mov
jecxz
jl
icebp
mov
mov
lea
mov
stc
sarl
outsl
lds
std
push
leave
rclb
jge
inc
je
cmp
cld
mov
pop
cwtl
inc
ret
mov
mov
jg
push
in
sub
call
jp
jg
sahf
ss
or
cmp
enterw
int3
fiadds
popa
mov
mov
daa
aas
out
add
xchg
mov
fcmovnb
insl
rcl
adc
fistps
lods
sbb
and
pusha
fwait
stos
xor
jns
test
push
jns
push
outsl
orb
cmc
jp
cmp
call
jp
lret
sub
inc
push
xchg
ja
mov
in
cmc
cmp
push
cld
rolb
call
test
mov
and
fs
loop
cmp
push
or
jns
add
into
pop
push
les
aaa
imul
mov
fnstcw
cmc
dec
repz
mull
out
insl
jno
aad
test
lahf
pop
sarl
jg
cld
notl
inc
xor
xor
mov
push
outsb
mov
pop
xchg
inc
jno
lcallw
lods
fwait
cmp
test
ljmp
mov
test
cmp
into
es
iret
cmpsb
adcl
sub
cmp
push
test
mov
xor
insb
scas
inc
pop
pop
xlat
ret
rorb
ficompl
mov
cmp
xchg
lods
lea
arpl
std
out
inc
clc
xchg
dec
cli
jle
aas
push
push
xor
popa
enter
aas
push
or
jbe
into
push
jne
stos
sbb
int
xor
nop
push
cwtl
test
mov
stos
daa
and
and
mov
inc
ffreep
cmp
push
jle
out
rol
jne
push
adc
out
outsl
outsl
dec
cs
popf
pop
fldenv
pop
cmp
mov
pop
dec
arpl
adc
fistpll
add
pop
cmpb
lock
cmp
mov
dec
sub
jae
test
inc
sarb
sub
or
mov
sub
decb
aad
xchg
xchg
or
in
lret
sbb
lcall
push
mov
je
rcrb
insl
mov
dec
xchg
iret
mov
insl
mulb
mov
cmpsb
push
jmp
inc
or
jne
mov
divb
sub
or
add
and
cld
push
sub
clc
mov
movsb
ljmp
pop
xor
pop
clc
mov
mov
mov
popf
cmp
lret
push
mov
das
nop
icebp
jns
adc
inc
sar
pushf
es
ss
insb
cwtl
cmp
pop
test
in
movsl
inc
les
jns
push
mov
orl
jae
leave
mov
or
shll
and
mov
lock
mov
push
xchg
inc
mov
int3
inc
pop
and
push
int3
inc
xor
je
mov
shll
in
mov
out
js
loopne
sbb
fildl
test
mov
pop
iret
les
scas
cltd
popf
jl
add
jge
loopne
add
cmc
push
xor
pop
jle
add
jge
cmp
fwait
adc
xchg
out
pusha
fsubrs
or
dec
mov
fiadds
sub
pop
adc
jnp
dec
sbb
push
int
dec
pop
int
lods
ja
dec
jns
pop
jecxz
lods
lods
test
shl
outsl
add
test
mov
sub
dec
jmp
loopne
xor
in
into
mov
stos
pushf
into
push
cmp
pop
mov
xchg
fstpt
pop
test
jbe
pop
repz
xchg
repnz
push
stos
jb
jnp
jp
sbb
nop
and
sbb
fidivs
lcall
or
movsb
add
mov
icebp
pop
das
jge
and
or
and
push
ljmp
fisttpl
cld
and
std
cmp
mov
and
jecxz
inc
enter
mov
sbb
loope
cmp
sub
cmp
push
cmp
arpl
in
adc
jae
push
jbe
fs
sub
xor
mov
lods
mov
jp,pt
mov
inc
iret
shr
jbe
mov
adc
rcrl
hlt
sbb
pushf
movsl
jmp
push
ss
insl
xlat
int3
pop
mov
rorl
cmp
fldl
cmp
sbb
jmp
pop
hlt
subl
out
inc
fwait
bound
sub
pusha
testl
push
jecxz
icebp
jl
mov
cmpb
popf
cltd
push
push
pop
out
aaa
pop
loope
out
aad
in
test
imul
mov
jg
add
cmpl
stos
das
xchg
mov
xchg
xchg
sbb
ja
push
aad
sbb
push
das
shlb
in
dec
jnp
movb
mov
mov
lock
cmpb
fneni(8087
xor
xchg
int3
xchg
and
imul
adc
call
cmp
jae
xchg
xchg
lods
or
add
or
into
mov
or
shrb
mov
push
cmp
xchg
ljmp
jno
push
shr
pop
push
mov
jbe
inc
inc
jo
or
mov
test
push
mov
sbbl
sub
int
cmpsb
in
test
out
and
dec
enter
les
scas
sahf
mov
sub
leave
fs
push
pop
jge
push
lahf
xor
sbb
mov
push
mov
insb
mov
fisubrl
cmp
pop
add
popa
fs
sub
mov
lods
test
push
ds
ret
push
outsb
jns
pop
imul
out
insl
adc
imul
lds
out
jecxz
adc
adc
mov
into
ja
pop
cmc
pop
or
sub
adc
xchg
xchg
aad
mov
dec
mov
cmpsb
xchg
mov
data16
sub
dec
in
mov
xor
in
push
push
mov
or
outsl
ret
push
stos
es
arpl
jp
add
cmp
outsl
jmp
xchg
jmp
das
jae
fadds
arpl
add
shll
jg
insl
mov
cli
out
xchg
add
test
push
fldt
sbb
jo
out
pop
addb
ret
or
enter
testl
dec
jl
in
fwait
xor
sbb
movsb
mov
xor
mov
push
test
fisttpl
or
mov
inc
imul
pop
add
xor
lods
xor
lea
and
out
jle
and
das
lret
stos
jb
xorb
cmp
mov
sub
aaa
idivb
inc
idivl
mov
imul
sbb
lods
jg
in
icebp
lock
fwait
dec
pop
lahf
dec
rol
jg
xor
or
ja
push
and
push
aas
dec
dec
ss
xor
add
cmp
fsubr
push
movsb
les
ss
xchg
sub
ja
jne
mov
movsl
adc
pop
or
notl
xor
addr16
sarl
sbb
inc
movsl
or
repz
mov
mov
push
arpl
insl
xchg
mov
cmpsl
add
pop
xchg
ror
aas
add
repnz
and
in
add
shlb
xor
cmp
imul
in
fmull
subl
pop
aas
xchg
mov
pop
add
jae
sbb
jo
clc
stos
xor
sahf
adc
mul
scas
sub
data16
xchg
in
stos
dec
jg
xchg
fistpl
fldcw
inc
test
aam
push
ficompl
stos
mov
mov
xor
pop
push
sbb
mov
push
aas
dec
push
ret
mov
mov
xlat
or
cmc
cmp
fdivs
dec
pusha
lods
into
sarb
mov
mov
dec
insl
sub
xor
mov
stos
add
inc
fstl
cs
icebp
aas
aas
sub
mov
loopne
in
push
mov
int3
jnp
sarl
fwait
je
xor
push
outsl
jg
add
movsl
gs
repz
adc
es
sub
aas
push
xor
std
push
icebp
pop
add
mov
aad
clc
xchg
dec
cld
in
mov
sahf
lret
popa
xchg
int3
stc
sbb
dec
lods
imul
cmp
cs
shrb
mov
inc
push
inc
insb
scas
cmp
adc
adc
jge
les
mov
push
xor
sub
into
pushf
js
les
mov
mov
rcll
adc
sub
test
loope
mov
cmp
nop
jle
sarb
push
push
mov
int
fsub
and
xchg
loop
xchg
fcmovu
fprem
repnz
imul
sbb
aad
data16
lcall
lea
ds
icebp
ss
or
sub
adc
pop
sub
dec
cmp
test
mov
out
pop
jbe
adc
pop
neg
jno
jbe
mov
frstor
and
sbb
sub
pop
jo
pop
jae
popf
arpl
and
es
stos
xor
lcall
sub
ss
cwtl
cmpb
jb
inc
loop
lahf
mov
mov
repz
or
and
dec
xorb
in
nop
in
cli
fwait
push
cmp
xchg
dec
pop
add
pop
mov
stos
push
jns
add
and
dec
js
pop
inc
cmc
lcall
fwait
jnp
fisubs
stos
sub
xor
dec
dec
mov
xchg
int3
mov
or
xor
sub
cs
xchg
mov
lods
call
push
pusha
stos
pop
add
subl
pop
push
jl
xchg
mov
jle
cs
ret
push
roll
lret
mov
add
cs
push
sbb
cmp
sbb
rcl
lret
fildll
pop
inc
icebp
shlb
adc
outsl
and
shrb
pop
push
sub
sub
mov
cld
lcall
cmp
push
mov
and
ret
dec
rcr
add
scas
add
dec
shrb
cmc
inc
lcall
or
repnz
lahf
into
mov
push
cmc
je
xchg
xchg
inc
bswap
fsubrl
lock
cmp
xor
mov
or
aaa
negb
mov
pop
sti
les
jne
sub
xchg
shlb
shlb
sub
push
xlat
cmp
nop
mov
in
inc
push
cli
test
pop
ja
mov
inc
sub
dec
jp,pt
jl
cmc
push
push
mov
pop
icebp
int
jp
sbb
roll
add
xchg
or
shll
pushf
je
xor
xchg
outsb
or
cmp
pop
cli
ficompl
vpsubd
shlb
loope
outsl
js
pop
sar
sub
sbb
or
push
mov
fwait
mov
push
in
icebp
mov
out
orl
sub
jb
test
mov
mov
xor
xor
pop
jae
fsubrs
jl
add
jecxz
jl
test
sub
jns
push
or
fdivrs
xchg
and
mov
fwait
cli
mov
add
cmp
jl
inc
cmp
dec
or
and
movsb
lahf
mov
movsl
sbb
mov
pop
mov
mov
or
sbb
or
pop
mov
adc
mov
sbb
jle
jp
jecxz
arpl
push
cld
mov
enter
stc
rcrl
loop
std
loopne
adc
xor
shrb
sub
sbb
mov
ss
adc
fs
movsb
dec
test
das
mov
jl
or
ds
sub
xchg
clc
pop
test
or
add
dec
jns
or
mov
test
mov
jg
imul
imul
jne
sub
sbb
fnstsw
dec
mov
cld
pop
or
subb
repnz
inc
das
in
sarl
add
ficoms
lods
cmp
repnz
iret
xor
cmc
pop
push
sbb
pop
movsl
orl
or
pop
imul
and
jg
xchg
out
jb
inc
and
loope
pop
cli
sub
dec
loopne
xor
pop
ja
inc
mov
mov
inc
pushf
std
adc
lods
cmp
xor
cmp
lahf
mov
pop
cmc
pushf
cmp
cwtl
es
filds
and
dec
ljmp
inc
mov
in
nop
or
add
inc
shrl
jno
in
sbb
loop
xor
mov
fiaddl
loop
pop
pop
mov
dec
lret
dec
sbbb
gs
xor
pop
enter
dec
jno
iret
shlb
mov
dec
jne
pop
movsb
aaa
mov
add
std
or
leave
mov
xor
jge
pop
cmpsb
nop
outsl
lret
mov
push
jge
fnstenv
fidivrl
add
stos
xchg
jnp
mov
push
test
int3
xchg
pop
and
and
cld
or
loop
call
ja
push
int
push
add
or
adc
adc
lret
rolb
lret
paddw
sahf
cmp
test
dec
sbb
out
sahf
sbb
insl
inc
pop
push
and
xchg
jmp
sub
sub
jge
mov
insl
jecxz
add
hlt
orl
aaa
xchg
dec
pop
sub
jle
mov
push
xor
pop
adc
jecxz
insl
adc
sbb
or
enter
inc
xor
mov
scas
lods
push
xor
cmp
pop
mov
add
in
adc
cmp
mov
mov
fldcw
inc
fcoms
cmp
subb
mov
aam
cli
jbe
not
cmp
popa
mov
xchg
push
jp
loopne
pop
int
fsubl
mov
push
jo
add
push
pushf
imul
int3
imul
push
dec
adc
pop
xchg
out
sbb
fcoml
ficomps
pop
lea
sarl
jae
mov
in
mov
out
or
jnp
sbb
jb
xor
movsl
and
adc
pop
adc
test
add
cmc
in
js
xchg
sub
es
pop
add
jae
adc
test
fwait
pop
dec
mov
dec
pop
mov
adc
out
sti
test
xchg
push
vpackssdw
cmp
cmp
and
mov
mov
and
lds
and
leave
inc
sbb
mov
pop
lahf
adc
je
cmp
dec
fs
mov
mov
sub
clc
sbb
mov
or
pop
imul
mov
outsl
inc
jb
enter
mov
mov
iret
sbb
pop
pop
leave
xor
jns
pop
pop
inc
xor
xor
out
mov
je
mov
inc
aad
cli
jge
inc
cmp
pop
mov
jne
ret
pop
xchg
inc
sahf
imul
mov
xchg
loopne
or
or
xchg
dec
jg
sbb
les
jne
movsl
jle
inc
shrb
xchg
aas
dec
rcll
jne
mov
pop
cmp
ret
subl
sahf
lods
sub
movsb
or
cwtl
ja
leave
data16
pop
pusha
cmp
std
dec
in
out
jae
xlat
add
mov
mov
bound
sbb
std
adc
jb
xchg
mov
mov
mov
scas
pop
fldl
mov
in
mov
jmp
in
jge
cltd
pop
pop
xchg
repnz
mov
addr16
lret
adc
xchg
mov
les
mov
repz
mov
test
imul
jp
jne
shll
mov
mov
mov
push
mov
inc
adc
lret
ljmp
aam
in
pop
jb
dec
push
inc
push
testb
leave
push
xor
jae
mov
or
jge
jle
sub
pop
ficoms
push
ucomiss
push
pushf
xchg
fnsave
and
dec
loopne
rcl
sbb
xor
pop
and
hlt
mov
sbb
adc
add
loop
daa
mov
loope
mov
push
gs
lret
and
nop
adc
mov
mov
jg
sub
lret
inc
jp
xor
mov
and
mov
pop
mov
push
add
notl
jmp
or
mov
pushf
les
inc
nop
ret
hlt
imul
out
pop
int
or
pushf
dec
mov
xor
inc
jmp
cmp
movsb
cmp
sbb
aam
mov
jbe
xchg
push
mov
mov
and
cmovo
fadds
cvtpi2ps
sbb
ss
mov
and
test
mov
sbb
inc
loope
repz
jmp
adc
adc
push
mov
lret
and
leave
aaa
popa
rcrl
gs
xor
dec
lods
mov
xor
jnp
in
into
push
repz
pop
inc
je
push
jle
sub
mov
mov
fucom
sbb
adc
cmp
cltd
dec
mov
pop
int
sbb
test
insb
cmp
and
add
repz
test
movsl
repnz
mov
out
add
inc
add
mov
fcmove
hlt
jno
pushf
iret
sarl
inc
enter
test
out
gs
push
jb
stos
repnz
mov
dec
sbb
cmpsb
push
lcall
dec
jbe
lcall
sbb
cli
inc
cmp
jmp
dec
mov
repnz
add
and
xchg
rcr
les
xor
hlt
or
or
pop
mov
and
aaa
push
dec
jle
fucom
stc
xchg
add
in
jnp
call
into
pushf
adc
sub
push
sbb
sub
lret
or
mov
fldt
mov
test
mov
fdivrl
cmpsb
push
adc
sub
dec
or
clc
pop
push
and
sub
mov
or
dec
pop
shll
enter
push
movsl
jle
test
test
cmp
arpl
or
dec
rolb
fdivs
jp
daa
push
add
xor
mov
inc
adc
gs
ret
sbb
inc
sbb
add
inc
int3
fsubr
dec
xchg
loope
out
and
mov
push
and
sbb
sub
je
loope
dec
cmp
mov
pop
test
repz
shl
mov
mov
jo
cmp
add
icebp
or
ja
push
or
loop
roll
cli
adc
jmp
ret
jp
movsl
jmp
fs
or
xchg
out
dec
jle
rol
in
cmp
ret
fiaddl
mov
sbbb
push
orl
sub
jge
test
push
and
sub
fs
push
mov
pushf
mov
mov
xchg
imul
in
and
mov
insb
or
pop
xor
cmp
mov
imul
xchg
je
loope
les
inc
outsl
jle
cmp
mov
push
mov
adc
or
aaa
push
jg
fs
push
mov
outsb
sub
jo
cmpb
sbb
scas
or
pop
shrb
xor
mov
pop
mov
nop
jno
aam
in
pop
push
mov
adc
push
sahf
sysexit
clc
out
sarl
adc
ja
mov
rclb
mov
push
mov
loope
mov
push
andb
xchg
or
test
cltd
adc
mov
shll
xchg
lock
sub
jmp
mov
jecxz
repz
roll
sub
adc
sbb
sub
mov
push
cmp
add
and
dec
mov
sub
xchg
push
int3
push
mov
scas
std
mov
sti
fcmovb
test
fistl
cmp
scas
push
xchg
test
nop
and
call
cli
sub
ljmp
je
lcall
leave
dec
icebp
mov
or
and
mov
mov
into
mov
repz
andb
ret
add
rclb
ror
enter
adc
ljmp
mov
mov
js
xor
pop
es
mov
mov
pop
mov
jl
or
movsb
lcall
cmp
xorb
imul
rorb
ficoml
fdivs
repnz
mov
jmp
inc
inc
mov
aas
in
adc
sbb
cmp
insb
and
pop
jmp
fdivl
sub
stos
mov
cmp
push
adc
jge
out
cmp
call
lds
fs
add
pop
mov
push
lds
cmp
stos
jg
xlat
ja
jmp
add
dec
bound
arpl
imul
mov
xor
je
cmp
jne
negb
cs
adc
pusha
dec
mov
cld
std
or
je
adc
cld
xchg
or
stc
dec
add
pop
adc
arpl
push
mov
repnz
lock
lods
jecxz
xor
lock
ja
in
lret
lcall
shll
mov
lahf
mov
loop
jo
pop
test
cltd
je
xchg
adc
aad
aam
push
mov
repnz
xchg
inc
mov
xor
fs
sbb
call
add
std
xchg
jle
mov
inc
mov
mov
xor
lea
jp
ret
fs
hlt
push
mov
call
call
cmc
xchg
nop
shl
bound
and
sbb
leave
stos
in
add
add
in
mov
fs
dec
inc
dec
push
ljmp
test
adc
pop
stos
xlat
xor
int3
sub
push
imul
gs
icebp
sbb
sub
push
push
out
in
cmp
cmpl
pop
ljmp
inc
testb
add
je
lea
aad
mov
or
or
jae
adc
in
pop
add
rcrl
push
ret
shlb
pop
or
stos
jg
or
add
mov
pusha
xchg
pop
ret
loop
mov
ficomps
clc
mov
push
fists
inc
cmpsl
jle
sub
dec
test
adc
popf
inc
push
dec
incl
lds
push
int3
inc
shr
xor
fldl
push
fidivrs
out
jns
push
ljmp
leave
aam
movsb
or
dec
jns
jae
test
inc
test
test
and
push
xchg
imul
mov
xchg
ja
cli
rolb
into
repnz
sbb
movlps
push
push
jne
lret
lcall
xlat
cmc
dec
jo
sbb
jo
es
out
mov
ret
ja
aam
lods
js
nop
gs
cmc
lock
and
push
mov
scas
mov
inc
sbb
push
int
mov
enter
xchg
adc
mov
jle
adc
dec
rcrl
sbb
pop
in
adc
es
pop
mov
in
sub
popf
sub
insl
push
xchg
push
xor
mov
jno
movsb
mov
les
push
bound
mov
enter
test
pop
sub
jno
mov
dec
add
mov
adc
or
scas
jo
mov
pop
arpl
addr16
jmp
movsl
mov
pop
dec
inc
arpl
dec
iret
incl
je
jns
je
pop
bound
arpl
out
mulb
lock
stos
xchg
movsl
fisttpll
add
shll
mov
inc
lahf
js
lds
cli
repz
scas
call
out
cmc
data16
dec
mov
xlat
leave
test
add
xor
xor
inc
or
mov
aas
cmp
popl
dec
je
subb
call
clc
cmp
out
flds
and
jl
in
xlat
inc
popf
int
mov
push
dec
ret
jo
aas
push
pop
mov
and
mov
cmp
push
pushf
pop
jg
dec
in
jne
inc
jp
xchg
jle
lret
sti
mov
in
xchg
jne
ret
sbb
outsb
rcll
sbb
shll
fcompl
nop
idivl
inc
dec
push
divb
out
jb
lods
and
aas
repz
out
aaa
subl
or
and
nop
mov
sub
xchg
and
pop
js
jg
aaa
int
scas
jecxz
mov
pusha
cmp
xor
lret
and
or
rolb
mulb
inc
mov
push
sti
js
cld
cmp
mov
or
lahf
xor
inc
test
adc
or
icebp
mov
jns
cmpsb
mov
add
aad
adc
cmp
xchg
je
loope
or
inc
test
lods
jne
inc
or
gs
lcall
out
in
xor
and
xchg
daa
hlt
jmp
add
mov
pop
ss
add
sub
call
aaa
and
aaa
addr16
sub
mov
mov
test
lret
inc
jg
fs
in
mov
pusha
jmp
push
inc
and
push
stos
rorb
lods
xchg
add
mov
adc
jp
jo
movsb
lea
and
xchg
popf
jle
or
pop
iret
stc
es
aaa
jb
push
in
mov
adc
pusha
dec
sar
mov
and
pop
xchg
inc
push
outsb
inc
mov
cmc
jbe
fdiv
out
push
mov
cmp
gs
pop
cld
cs
xchg
insb
xchg
pop
insb
rclb
ja
ret
in
clc
cld
pop
xchg
pop
sbbl
mov
jle
xlat
adcl
xor
add
jb
add
insl
jg
jge
push
jnp
enter
xor
ljmp
stc
sbb
jecxz
cmp
inc
inc
pop
mov
cmp
push
xor
jbe
mov
add
adc
rcll
in
jmp
fxch
stc
fs
mov
or
sub
mov
jp
push
mov
jbe
sahf
sbbl
and
inc
jl
int3
outsb
mov
orb
xchg
push
push
xchg
inc
test
jb
sub
add
scas
or
jle
cmpsl
pop
pop
mov
lahf
mov
push
aam
push
mov
cmp
pop
incb
stos
jno
ret
jae
push
mov
insl
mov
ljmp
fcmovnu
movaps
stos
mov
xchg
cmp
jge
in
out
mov
clc
shll
xor
sbb
mov
sub
outsl
jl
inc
stos
leave
and
jmp
push
lods
lds
in
fs
mov
es
add
mov
mov
lahf
lds
or
cmp
fnstcw
jbe
imul
xlat
dec
lea
inc
mov
lds
fsubp
out
js
xor
mov
gs
mov
push
push
imul
add
cmp
xchg
ja
es
inc
addr16
sbbl
sub
data16
add
sub
cs
inc
and
imul
loopne
adc
push
xor
andb
mov
mov
leave
or
mull
sahf
pop
imul
lods
fisttpl
inc
sbbb
fisubs
popa
pusha
loop
jbe
dec
mov
mov
ret
pusha
jbe
cli
mov
mov
cwtl
dec
pop
call
push
and
pusha
popa
enter
nop
leave
test
movsb
xlat
out
fistl
iret
out
sbb
fnstenv
jg
cld
xor
cmp
add
ds
and
mov
dec
adc
test
push
mov
mov
xchg
push
and
cmp
jnp
lods
lret
sub
pusha
scas
in
lcall
gs
adcl
leave
mov
fistpl
fisubs
mov
dec
sbb
or
push
outsb
jnp
incl
lret
outsl
adc
jle
mov
and
jmp
push
add
int
fdivrp
or
int3
mov
mov
cld
pop
aaa
and
addr16
cmp
pop
idivb
bound
into
pop
cwtl
mov
sti
orb
jl
arpl
adc
mov
gs
cmp
pop
inc
sbb
fistl
scas
adc
ss
dec
aas
pop
push
incl
pop
fstpt
pop
data16
push
push
mov
sub
cmpl
dec
cmp
sbb
call
or
sti
lods
jle
xchg
daa
sub
pop
add
push
xor
jbe
push
mov
jnp
in
sub
aaa
push
mov
ljmp
mov
adc
jge
jg
mov
push
mov
mov
xchg
sub
imul
aas
outsl
mov
gs
jnp
mov
das
out
lret
mov
sbb
lea
add
mov
mov
sub
push
sahf
jbe
adcl
negl
add
mov
invd
pusha
cmp
pop
psllq
inc
mov
push
cmpsb
push
pop
and
stos
inc
add
ret
xor
push
xchg
push
and
pushf
mov
mov
fadds
lret
in
inc
es
mov
icebp
adc
adc
lret
fld
addl
dec
aad
mov
rolb
add
adc
mov
outsb
mov
testl
push
aad
xchg
push
shlb
or
mov
mov
aaa
jae
mov
imul
dec
xor
inc
jnp
sub
mov
pop
sub
mov
pop
popf
pop
mov
ds
jle
push
pop
cli
mov
pop
into
jbe
jp
clc
push
push
mov
mov
or
mov
cld
push
cmc
out
or
pop
and
mov
add
push
js
fidivrl
sbb
xlat
arpl
popa
push
sahf
dec
mov
iret
sbb
pop
adc
movsb
rol
dec
outsl
xor
mov
adc
mov
loopne
out
sub
lds
rolb
add
lahf
sbb
cmpsl
les
insl
loop
mov
jle
in
lcall
fsubrs
ret
pop
ds
imul
jmp
inc
adc
testl
xor
push
mov
ret
pop
das
inc
mov
pop
fincstp
ja
push
mov
adc
xchg
subl
pusha
mov
loopne
mov
and
movsl
jns
xchg
in
jo
jl
mov
jecxz
xor
mov
shl
aam
ret
pusha
and
jp
cli
iret
lds
cmp
add
mov
add
mov
adc
mov
fdivrl
cmp
pop
adc
add
jecxz
adc
push
xchg
fwait
pop
sub
pop
mov
mov
test
mov
inc
aad
aas
pop
xor
cmpsb
test
cmp
and
lock
inc
xchg
dec
roll
in
fdiv
cmp
fadds
out
jge
and
and
mov
rcrb
xchg
outsb
sbbb
ret
enter
push
inc
imul
mov
mov
sbb
jmp
lea
stos
imul
add
les
gs
loope
inc
mov
and
lea
cld
repz
adc
lahf
rcl
jns
into
push
cwtl
mov
ss
outsb
mov
xchg
sub
loope
mov
nop
stos
ret
push
jne
out
loope
cli
fildl
fdivr
out
in
stos
and
jns
mov
out
fisttps
mov
cli
nop
decl
subb
adc
add
insb
js
cmp
cli
cs
sbb
outsl
cmpl
test
pop
and
int3
je
dec
gs
int
add
in
adc
in
outsb
mov
ror
mov
fs
and
fs
mov
out
cmp
sub
rorb
ror
sub
mov
dec
sub
sub
pusha
loopne
mov
test
xchg
cmp
pop
das
aas
mov
stos
iret
push
fistps
jp
arpl
cmp
ficomps
repnz
jmp
push
rorl
movsb
ffree
pop
jge
and
xor
insl
movsl
fistps
int3
popf
repz
popf
mov
mov
cmp
mov
sar
push
xchg
fdivrl
insb
das
xchg
pop
adc
add
cli
int
aas
push
dec
outsl
inc
xor
xchg
lock
mov
int3
xor
ds
insl
divl
orl
sbb
jb
lock
adc
pop
pop
aad
insb
or
jg
adc
je
rclb
mov
fs
outsl
arpl
xchg
loope
jbe
rclb
test
xchg
pop
ret
jge
fcomps
sub
xchg
lods
pop
imul
sbb
pop
test
jno
add
add
test
lret
mov
add
pop
and
mov
mov
cmpsl
cmpsl
dec
pop
jge
jne
mov
sahf
inc
ss
shrb
mov
je
or
in
inc
jno
sub
fisubrs
subl
mov
sub
pushf
push
lods
mov
ret
xor
xor
adc
loopne
in
jns
repz
xchg
and
or
sarb
mov
mov
jl
xor
cmp
popf
and
cmpb
mov
xor
mov
mov
inc
sti
jne
push
xlat
mov
pop
scas
div
jo
bound
xchg
pop
add
sbb
dec
ret
sub
mov
add
mov
in
mov
sti
dec
and
lahf
push
andl
scas
jnp
cmp
andl
mov
cmpsl
not
cmpsb
push
xor
sahf
mov
cmp
fdivrl
gs
rorl
arpl
and
movsb
lret
or
sahf
add
jne
inc
add
outsl
outsl
add
mov
lea
ja
dec
xchg
xor
dec
lcall
nop
mov
insl
sbb
xchg
mov
mov
jne
push
fisubrl
leave
cwtl
loope
leave
sub
push
fcoms
clc
pop
jae
iret
xchg
jo
movsl
cmpsb
push
pop
xchg
testb
push
pop
xor
leave
dec
mov
lds
lahf
ret
inc
sbb
nop
jmp
fwait
aaa
lea
push
roll
cmpsl
or
jo
mov
pop
shrl
inc
add
pop
pop
stos
loope
daa
cmp
dec
cmp
scas
and
xchg
pop
inc
pop
add
add
jno
sbb
dec
ret
mov
in
xlat
lcall
dec
inc
jg
enter
cmc
pushf
dec
adcb
xor
cltd
test
xchg
rolb
out
in
ja
imul
and
jns
cmp
nop
xlat
sbb
cmovle
push
mov
arpl
mov
fisubl
jg
dec
and
or
dec
mov
movsl
push
lahf
faddl
les
lahf
imul
fidivl
push
and
loope
cwtl
and
mov
push
inc
push
add
arpl
mov
test
jae
dec
cmp
xor
loope
fdivr
sahf
push
data16
adc
and
lds
add
cmp
mov
and
lock
inc
stc
rorl
das
fcom
lahf
popw
push
aas
jno
sub
pop
jl
jp
xchg
js
jae
rclb
leave
or
push
inc
hlt
es
aas
rcrb
fildl
out
lods
sbb
dec
and
and
or
xor
mov
std
adcl
xchg
test
jle
inc
cltd
sbb
and
push
subb
inc
and
jp
subl
cs
add
fisubrl
push
cwtl
fs
and
ljmp
push
sti
fadds
std
sti
daa
and
das
jno
adc
sbb
sbbl
and
into
mov
fsubl
cmpl
stos
and
dec
enter
xchg
fidivrl
ss
enter
inc
adc
xchg
aam
leave
mov
sub
not
add
adc
pop
fcmovu
push
sbb
sub
inc
cli
jns
push
mov
aad
scas
lret
sbb
aam
jge
icebp
jo
cmpsb
xchg
test
mov
das
adc
movsl
fdivl
xor
test
roll
repnz
mov
pop
fcomi
nop
rorb
cltd
cmp
xchg
icebp
xchg
loope
pusha
imul
cmp
scas
in
shl
lcall
inc
xchg
xchg
adc
fs
imul
rcll
popa
addr16
pop
cmpl
pop
xorb
lret
out
dec
or
sbb
pushf
jmp
xor
cmpsb
shl
fdivl
push
jmp
mov
pusha
sbb
in
mov
mov
xchg
outsb
pop
mov
shll
loope
xor
add
mov
cmp
mov
les
fwait
cmp
xlat
mov
pop
cmpsb
test
inc
mov
fnstcw
mov
cmp
jmp
or
mov
push
enter
and
dec
shrl
notl
arpl
inc
sbb
push
fs
jns
pop
ds
add
or
fsubs
sub
sbbl
cmp
lock
and
in
aas
sbb
mov
leave
js
popf
cs
add
push
pushf
addr16
nop
push
mov
mov
insl
std
or
cmp
mov
push
jmp
add
out
in
addr16
jo
adc
outsb
into
out
or
jge
shlb
fstl
xchg
pop
lea
cli
sub
cwtl
mov
aaa
rcl
test
repnz
xor
xchg
in
cmc
dec
mov
sbb
repz
movb
push
jno
stc
fs
xchg
push
adc
insl
in
stc
stc
or
add
cli
pushf
pop
xor
push
mov
and
cmpsb
imul
pop
cmpsb
stos
pop
ss
jmp
cmpsl
mov
xor
jbe
xor
dec
pop
xchg
mov
sbb
orb
push
lock
outsl
mov
lcall
sbb
jb
cmp
push
or
aam
mov
xchg
inc
jecxz
stos
xor
movsl
and
xchg
sbb
mov
push
test
adc
mov
cmp
add
lret
clc
dec
mov
stc
push
cltd
lcall
jnp
addr16
mov
jbe
fnstenv
ljmp
stos
or
push
orb
rcll
dec
xchg
gs
mov
jbe
lahf
jo
imul
push
sbb
or
jp
dec
sub
inc
or
jg
xor
mov
and
and
repnz
pop
aam
add
or
repnz
jmp
pop
mov
xor
imul
push
movsb
dec
push
dec
leave
dec
mov
xchg
dec
mov
and
stos
adc
mov
std
push
aas
loop
fcmovu
cmp
mov
mov
sarl
jb
popf
xchg
or
das
int3
jle
popa
pushl
inc
push
sbb
cmpsb
inc
out
pop
sub
or
jne
fidivrl
outsb
int
mov
xchg
pop
push
add
lods
imul
cmp
rcrb
jae
cmpsl
shl
mov
mov
add
xor
pusha
daa
adc
movsl
cmp
ret
mov
mov
repnz
jg
dec
cmc
cltd
lods
jg
leave
mov
lcall
movzwl
jb
push
mov
push
lcall
int3
sbb
pushf
dec
lods
xchg
xor
andl
std
inc
ss
jne
in
test
jp
hlt
cwtl
mov
int
outsb
stos
jno
jp
inc
push
aam
sbb
mov
popf
adc
push
sbb
gs
cli
repz
in
lea
ret
aaa
cmp
aam
loopne
or
cmpb
push
cld
shll
cs
cmp
adc
mov
xchg
enter
sti
cmp
mov
nop
fistpll
or
les
imul
stos
and
orl
or
insl
lods
leave
fldl
inc
mov
int
pop
test
push
loopne
fdivs
in
cld
pop
sarl
xchg
test
push
sub
adc
ret
aam
nop
inc
je
scas
inc
icebp
and
mov
enter
jmp
or
iret
fsubrl
push
icebp
cmpsb
sbb
in
aas
fdiv
cli
les
dec
lret
test
cltd
inc
in
ret
fisttps
jno
jmp
pusha
or
and
jnp
and
jg
mov
push
pop
rolb
push
inc
mov
xchg
aaa
push
aaa
or
jnp
pop
cs
out
mov
lret
mov
xchg
or
ret
stos
pop
pop
adc
adc
xchg
lea
push
and
out
and
hlt
mov
cmp
and
movsb
lds
loop
add
sti
clc
test
lcall
add
and
mov
dec
cmp
mov
gs
pop
std
pop
mov
or
cmp
lret
jns
mov
cmp
xchg
and
or
xor
roll
or
mov
xchg
push
popf
push
sbb
jno
jge
jp
pop
xchg
dec
sbb
hlt
push
lret
xor
hlt
add
inc
lret
mov
push
scas
dec
in
or
jnp
push
push
scas
ret
in
ljmp
cmp
inc
add
fisttpl
mov
aas
xor
das
sub
mov
push
fldenv
pushf
jne
test
push
xchg
pop
pop
in
push
roll
xchg
imul
icebp
xchg
dec
xchg
sarb
movsl
stc
negb
jge
cmp
mov
or
pop
push
inc
or
enter
ds
dec
mov
scas
sbb
ljmp
xorb
xchg
ret
iret
inc
and
sbb
int
xor
cld
sub
sbb
popf
enter
jno
pop
jno
stc
sub
enter
and
push
mov
jb
jge
lds
mov
std
mov
or
add
push
btr
fcoms
fcomps
cmp
mov
mov
xor
push
mov
pop
push
in
ss
leave
stos
fs
inc
push
clc
cmp
xchg
sub
sbb
dec
out
push
sub
in
fistpl
sbb
dec
daa
shlb
mov
enter
ljmp
and
jp
xchg
xor
lods
mov
mov
dec
dec
xor
add
and
sbb
push
repnz
push
jp
and
pop
pshufw
test
sbb
pop
mov
nop
and
jge
push
clc
out
cltd
xor
fadds
subl
sbb
pop
push
pop
sub
sahf
dec
sti
out
cmp
adc
mov
inc
cld
aaa
js
out
ret
lds
mov
fidivrl
sub
xchg
iret
iret
xchg
push
cmp
lahf
mov
jnp
mov
push
in
and
mov
dec
mov
loopne
cmc
push
sbbl
cltd
and
jge
in
leave
push
out
test
dec
mov
or
push
add
mov
shr
jg
fisubrl
mov
or
cmpb
jmp
rcrl
pop
push
imul
fstl
xor
sbb
stc
mov
sbb
fsubrs
subl
xor
js
sub
mov
ja
pop
push
in
sbb
cltd
cmp
or
outsb
loopne
jae
pop
pop
sub
and
sti
pop
pusha
cs
sbb
dec
dec
in
pop
dec
mov
fwait
sbb
frstor
jns
jo
call
test
jnp
dec
call
fadd
fildll
data16
pop
imul
loop
inc
fldcw
scas
jge
jno
push
mov
push
mov
leave
cltd
sub
pop
push
mov
call
setno
jae
aad
int3
mov
jge
es
stos
mov
sub
test
add
cmp
mov
pop
mov
jo
jge
add
mov
fiadds
sbb
sub
cmpsb
mov
bound
adc
and
jl
xor
add
add
jl
sarl
mov
hlt
popa
push
imull
sub
mov
enter
cmp
lds
mov
nop
int3
push
sub
clc
inc
pop
add
arpl
outsb
adc
mov
inc
and
data16
es
mov
lcall
out
cmp
hlt
pop
rol
stos
ds
add
aam
daa
cs
xchg
inc
out
or
push
add
and
mov
jbe
sub
jle
orb
jl
test
rcrl
ljmp
es
mov
jae
xor
jle
pusha
xchg
and
mov
or
sahf
mov
je
aam
flds
dec
stos
rol
mov
xor
lods
out
sbb
push
mov
adc
push
jmp
ret
mov
add
insl
jno
push
ss
and
adc
clc
test
shufps
cs
rorl
faddl
clc
je
cmpsl
sub
dec
or
xor
insl
fcoml
enter
cs
inc
push
lods
jae
mov
and
testl
test
ret
xor
mov
xchg
ljmp
mov
pop
mov
nop
fisubl
and
es
jmp
cmpsb
ja
popa
inc
pusha
mov
lcall
adc
shl
hlt
sbb
int3
jle
xlat
add
or
adc
xor
fucomi
xchg
push
mov
pop
push
mov
adc
mull
fcmovne
stc
scas
pop
push
dec
jo
mov
in
pushf
mov
test
cmpsl
psubw
add
bound
icebp
sti
je
dec
adc
negl
iret
pop
out
lods
insl
push
xchg
stos
cmpsl
mov
dec
es
filds
pop
or
cmp
inc
adc
mov
jno
cmp
lds
adc
sbb
fildll
ds
out
xchg
mov
push
lds
clc
xchg
or
add
adc
pop
pop
sahf
test
jnp
mov
lods
mov
push
mov
or
rol
aad
mov
xchg
mov
icebp
bound
stc
xor
ret
sbbl
push
jmp
out
sbb
add
add
jecxz
outsl
xchg
xchg
icebp
or
popf
xor
jle
push
sbb
or
lret
stos
mov
xorl
and
fisttps
fwait
cmp
push
sbbl
push
rcll
popf
mov
sti
add
jnp
dec
test
pop
add
push
and
les
pop
and
in
mov
mov
ret
ret
add
mov
outsb
or
outsl
jb
ljmp
mov
mov
dec
mov
mov
mov
and
cmpsb
push
insl
xor
mov
mov
sub
push
pusha
inc
dec
mov
inc
pop
and
xchg
aam
dec
inc
inc
cmc
add
add
pusha
sub
jo
mov
aam
inc
out
xor
mov
push
mov
popf
cmpsb
dec
out
mov
outsl
pop
rcl
xchg
adc
jbe
mov
jne
cld
loope
sub
test
js
in
sub
popf
dec
mov
and
mov
mov
sahf
pop
mov
loop
sbb
pop
and
adc
nop
mov
jmp
testb
int
mov
xor
out
fstl
adc
mov
lret
push
adc
fwait
adc
popf
inc
cmp
xchg
lcall
test
sbb
adc
mov
std
or
out
scas
mov
sahf
jo
int3
dec
mov
mov
xor
shrb
jp
rorl
and
sbb
sub
mov
dec
jae
imul
vpshab
cmpsb
in
out
mulb
adc
xchg
and
jg
jmp
scas
mov
idivl
fistpl
push
ret
and
sub
fwait
mov
inc
shlb
and
cmp
test
shr
pushl
sub
pushf
add
sbb
sub
jnp
cmpsl
das
les
aas
fcmovnb
pop
xor
mov
ret
sbb
or
sub
mov
pop
sub
ljmp
sbb
ret
dec
clc
inc
int
push
ror
jns
loope
xor
or
imul
push
outsl
call
movsl
or
inc
fs
ret
or
movsl
mov
mov
jl
xor
mov
mov
mov
sbb
jae
pop
lret
stc
mov
pop
xchg
xor
pop
push
add
stos
mov
cmc
stos
jo
fnstenv
xchg
and
ret
sbb
lock
push
xchg
cli
sub
lret
sub
sub
and
mov
add
pop
mov
adc
push
inc
xchg
in
xchg
call
dec
push
call
cmpl
movsb
sti
aas
sub
inc
lcall
pop
xor
addr16
test
mov
mov
xchg
iret
sub
movsb
mov
mov
sub
ds
lret
sbb
dec
sbb
push
out
and
adc
xchg
cmp
stos
sub
add
dec
pusha
ffree
fbld
xchg
sbb
roll
jnp
bound
jle
enter
mov
fiadds
pop
xor
pop
cmp
insb
or
jbe
xlat
pop
or
sub
sub
mov
std
mov
mov
gs
push
cmpsl
cmp
sub
insl
rorl
add
mov
in
call
aas
faddl
imul
negl
cld
popa
xchg
outsl
or
out
enter
gs
mov
daa
inc
push
loopne
in
sub
jmp
pop
dec
mov
stos
loopne
ret
cmpl
push
xchg
loop
cmp
js
push
add
and
sub
cmc
dec
test
or
cmp
out
mov
in
sub
cmp
lds
adc
and
pop
mov
out
jge
jge
or
sbb
cmpsb
popa
mov
jo
add
je
js
xchg
pop
aas
push
push
dec
cmpsb
sbb
arpl
mov
cmc
sbb
sub
call
inc
adc
pop
daa
jp
mov
nop
andl
xchg
pop
outsl
cltd
inc
loop
mov
jbe
lods
in
inc
cltd
fbstp
inc
imul
dec
pop
cmc
fistps
dec
dec
aad
pop
leave
aam
sbb
in
xchg
mov
push
and
cmp
daa
dec
in
adc
xchg
imull
jge
dec
sub
xchg
sbb
cltd
add
scas
das
mov
lahf
inc
roll
sti
adc
in
pop
mov
maxps
cmpl
xor
pushf
test
push
pop
xor
xchg
mov
testl
push
and
sub
add
cmp
mov
jg
pop
outsb
jbe
mov
test
test
aad
and
iret
dec
adc
repz
pop
sub
xor
cmp
stc
pop
jns
jae
test
bound
dec
adcl
xor
jnp
jo
or
je
aam
dec
cmp
and
xchg
mov
loope
or
andl
aas
cmpsb
mov
jp
cmp
cmp
sahf
jnp
add
into
sbb
nop
jb
lods
mov
stos
cld
add
push
pop
mov
je
cli
lret
test
cmpsl
mov
fwait
mov
jmp
or
popf
cmpsl
les
stos
and
icebp
inc
push
cwtl
scas
sub
andb
arpl
insb
push
mov
cld
flds
cmpsl
insl
inc
push
jns
dec
shrb
jmp
mov
outsb
or
add
and
pop
frstor
in
or
jmp
mov
fistpll
inc
lcall
jae
lcall
shlb
inc
cld
cmpsl
mov
orb
and
hlt
and
ljmp
ret
xor
sbb
cmp
adc
inc
cmp
mov
pop
mov
rorl
xor
out
loopne
imul
fdivrl
test
das
mov
out
xchg
fimull
jg
lcall
imulb
in
xchg
shlb
and
mov
inc
gs
mov
add
cld
aad
jne
fidivl
fs
nop
loope
jns
pop
push
idiv
repnz
testb
call
mov
cwtl
lock
aas
mov
or
push
ficomps
push
mov
leave
gs
scas
push
sub
push
das
mov
and
mov
xchg
dec
mov
pushf
popf
out
or
mov
inc
sub
insb
ss
enter
cmpsl
mov
insb
fstp
jne
roll
in
pop
lret
dec
cmp
pushl
add
mov
mov
push
stos
rclb
int
and
in
sub
push
jbe
xchg
jne
add
or
sub
jne
jecxz
out
sub
add
pop
loopne
inc
push
push
cmpsb
push
or
shlb
enter
dec
popa
in
jl
push
lahf
jae
fcompl
cltd
pop
jb
loop
jbe
hlt
mov
and
repnz
fstl
movsl
dec
inc
jmp
xchg
fdivl
sbb
fsubl
lcall
loop
loope
repz
mov
lods
xchg
pop
jb
cwtl
imul
or
mov
loopne
cmpsb
adc
sub
push
and
push
jae
jge
jecxz
adc
jmp
and
jbe
mov
popa
pop
mov
mov
cmp
iret
scas
es
shll
fimuls
js
icebp
mov
ret
sub
mov
fdiv
insl
cmp
lcall
test
jmp
and
dec
ror
repnz
pushf
xor
daa
dec
in
mov
pushf
dec
movsb
iret
push
scas
popf
ja
lock
xchg
and
aas
mov
lock
bound
sub
lret
bound
imul
sbb
dec
xor
mov
idiv
adc
xor
sbb
xchg
rcll
sbb
dec
mov
xchg
mov
mov
popa
pop
outsb
fs
jl
fadds
jo
mov
js
ret
push
nop
xchg
pop
pop
in
sub
pop
fwait
jns
aad
in
aam
cmp
pop
sbb
lds
ja
inc
sti
pop
jg
or
sbb
subb
int3
inc
mov
xor
scas
push
rolb
xor
leave
pop
pop
dec
sub
pop
dec
mov
in
pop
mov
jb
test
fisubl
mov
loopne
insl
cwtl
jge
cmpl
clc
test
mov
mov
mov
mov
mov
xor
pushf
and
test
ror
inc
mov
adc
inc
push
getsec
aad
dec
testl
enter
push
out
aad
cmp
out
or
adc
pushl
lret
in
iret
and
and
fcmovne
out
cmp
lods
mov
insb
jg
mov
aas
clc
mov
test
xchg
stos
and
pop
xorb
mov
pop
roll
cmp
arpl
jle
mov
push
pop
sub
xchg
lea
lea
fcoms
jns
add
xor
bound
cmp
loope
xchg
adc
icebp
cli
pop
enter
push
mov
xchg
addr16
adc
mov
add
pop
or
mov
hlt
pop
sti
imul
sahf
adc
push
stos
cmp
stos
lret
jb
nop
xor
mov
pusha
jnp
js
jecxz,pt
pop
jnp
fsubrp
popa
cltd
lret
lods
sbb
pop
aas
fiadds
ret
push
js
mov
movsb
jns
or
or
jne
mov
inc
nop
sub
shll
mov
add
sti
jne
sbb
mov
dec
pop
loop
lods
and
cwtl
test
and
sbb
rcrl
in
movsb
xor
dec
fdivrp
ss
mov
mov
mov
sbb
decb
cmp
clc
or
inc
pop
dec
cmc
xchg
lods
mov
inc
fbld
icebp
sub
lcall
add
xchg
lret
fadd
es
adc
and
mov
fnstenv
dec
pop
jle
das
out
mov
add
je
insb
jnp
popa
cli
inc
inc
cmp
jp
stc
mov
xor
in
pop
cwtl
push
push
je
sbb
mov
hlt
xchg
mov
cmp
add
xor
cmp
and
mov
adc
xor
scas
sub
enter
mov
xchg
in
outsb
xor
lds
or
fildll
addr16
lds
nop
pop
rolb
inc
mov
add
cmp
into
pop
pusha
fcmovne
ss
jge
pop
mov
inc
loop
sbb
jb
stos
mov
cs
push
test
push
mov
outsl
cwtl
cmp
adc
xchg
xchg
test
jne
xchg
enter
jb
cmpsb
sar
int
popa
bound
jge
cmpsb
cltd
mov
xor
lods
cmp
mov
test
pop
mov
and
xchg
js
outsl
fwait
xchg
add
imul
test
cltd
dec
aaa
hlt
and
sub
mov
pop
mov
xor
adc
int
scas
cmp
cmpsl
inc
inc
movsl
inc
test
shlb
lret
push
push
mov
jg
cmp
push
int
ljmp
test
cmc
push
dec
lods
sbb
in
xchg
push
stos
sub
cmpsl
add
mov
dec
bound
imul
add
ds
or
je
rclb
and
mov
mov
aaa
lods
sbb
into
jns
or
imul
imul
testl
cmpsb
pop
jnp
je
push
ljmp
jnp
push
ret
hlt
mull
xchg
sub
pcmpgtw
inc
xchg
lea
add
xchg
and
adc
sub
inc
lods
xor
je
std
cmp
das
dec
xchg
rcl
adc
sub
pop
dec
sub
mov
push
mov
jge
loope
enter
mov
pop
cmp
pop
sbb
or
lret
pop
push
jp
or
test
pop
ret
sbb
stos
or
ret
xlat
mov
push
push
sbb
icebp
xchg
cltd
or
nop
out
rcrb
rclb
xchg
in
sub
jns
in
bound
add
into
push
mov
lret
daa
das
lods
xor
jmp
in
cmp
mov
adcb
or
lahf
jb
cmpsl
ds
cltd
jmp
pop
dec
sub
icebp
add
jo
stos
stc
nopl
push
sbb
inc
xor
sub
aam
or
adc
push
sub
fdivrs
dec
fmul
push
orb
int3
dec
add
fildll
retw
rclb
sub
push
je
pop
xlat
adc
movsb
adcl
aas
out
hlt
pop
push
push
out
int
add
leave
ds
xor
dec
mov
in
shll
out
sbb
enter
arpl
out
int
out
xorl
ss
dec
pushf
mov
cmp
xchg
rcrb
pushf
xchg
mov
loop
shlb
in
stos
cmpl
test
sbb
mov
push
pop
sub
ss
add
xchg
adc
mov
fs
or
iret
mov
or
rolb
aad
iret
sahf
das
faddl
sub
xchg
in
adc
inc
adc
nop
push
mov
push
add
or
mov
sub
pusha
js
or
xchg
jns
adc
mov
pop
push
idivl
sub
sbb
adc
inc
insb
aam
outsl
and
mov
adc
shll
xchg
pop
and
xchg
push
xchg
xchg
pop
and
insl
out
xorb
add
loopne
test
movsl
stc
jecxz
sbb
add
xor
mov
movsb
add
lahf
dec
jno
cmpsl
shrb
dec
push
dec
je
adc
add
push
and
sbb
adc
add
repnz
pop
jnp
mov
sbbb
push
outsb
mov
or
jno
dec
cli
xor
arpl
test
dec
sub
test
add
jmp
outsb
jne
cltd
mov
mov
cmpsb
test
sbb
xor
mov
inc
mov
into
aas
pusha
out
out
push
lea
mov
scas
cmp
push
cli
lret
enter
lcall
add
inc
mov
test
and
data16
mov
stc
stc
movsb
jmp
xchg
mov
mov
mov
jne
mov
ret
cmp
dec
push
add
pop
lock
mov
fstl
or
out
in
cmpsl
enter
ret
shl
jo
mov
push
adc
aaa
push
jle
mov
call
gs
sbb
fiaddl
mov
lock
dec
test
inc
ret
pop
adc
icebp
sbb
add
lods
bound
lcall
jnp
call
out
shlb
mov
mov
mov
mov
lret
pop
out
fbld
in
sarl
or
les
xlat
push
mov
mov
cmpsb
data16
and
mov
push
push
sub
out
stc
jnp
adc
fistps
mov
cli
movsb
dec
leave
jle
mov
ret
scas
lods
jno
jmp
cmpsb
and
clc
fldt
inc
aad
sub
cmpsb
sbb
add
or
std
clc
inc
popa
mov
fwait
lret
cld
mov
add
daa
adc
dec
inc
mov
mov
xchg
sub
leave
sahf
adc
das
fstps
pop
sbb
pop
xchg
inc
push
test
push
jp
pop
mov
mov
or
or
dec
lods
int3
test
in
leave
insl
push
xor
lods
add
push
sbb
push
cmp
sub
ljmp
jp
lahf
push
test
add
dec
rorb
mov
cwtl
int
mov
jno
lds
and
mov
xchg
pushf
pop
push
rcrb
push
pop
xlat
imul
push
pop
ljmp
jmp
mov
subb
sbb
cmc
stos
adc
pop
arpl
adc
adc
notl
cmpsl
out
mov
jnp
fs
sub
incl
xchg
clc
mov
nop
data16
xchg
xchg
xchg
xor
add
jb
mov
es
xchg
adc
cmpsb
enter
stos
std
fwait
xor
shrl
jecxz
mov
cltd
xchg
ret
or
or
bound
and
stos
push
iret
lock
jge
bswap
jnp
enter
jne
and
test
int3
xchg
adc
push
jns
loopne
add
rolb
xlat
shl
jb
cmp
fldt
jecxz
add
cwtl
sub
fsubrs
inc
mov
add
dec
add
nop
push
jne
repz
cmp
push
add
sub
outsl
stc
mov
jno
les
sub
mov
jp
mov
add
dec
lcall
xchg
push
pop
dec
jge
add
cs
and
mov
inc
cltd
cmc
xor
je
pop
mov
fsubr
xchg
jle
shrb
or
cwtl
xor
adc
mov
test
loope
xchg
sbb
std
insb
and
pop
pushf
inc
out
test
mov
pop
in
ficoms
ficoml
je
shr
pop
push
insb
xor
mov
pop
movsl
push
filds
imull
flds
das
loop
cmp
xor
ds
sahf
lea
mov
mov
push
sub
xlat
mov
ljmp
hlt
sub
push
inc
fidivs
out
test
mov
mov
jnp
in
and
ret
int3
lods
dec
jecxz
xchg
sahf
nop
movsl
test
sub
jbe
incl
mov
int3
xchg
mov
fcomps
sub
subb
ds
into
in
mov
mov
stos
shlb
in
mov
push
pop
stos
jnp
xchg
mov
out
iret
sub
sbb
inc
imul
jecxz
or
out
inc
push
enter
mov
pushf
leave
aas
jbe
sbb
add
xor
and
jae
test
xorb
je
push
loope
dec
adc
pop
cmp
cmp
hlt
test
pop
sub
scas
add
rolb
xorb
cwtl
insl
in
adc
or
ret
int
and
and
sbb
aad
xlat
jae
movsb
pusha
ljmp
push
push
cmpsl
xchg
jb
gs
ret
rolb
jb
push
out
push
pop
or
bound
adc
pop
xor
sbb
xchg
lret
jecxz
inc
sub
hlt
xor
aas
jne
mov
ljmp
add
insb
ljmp
xlat
sarb
es
push
sbb
pop
outsl
mov
repz
aam
gs
xchg
inc
and
mov
xor
in
inc
out
inc
bound
std
out
ss
arpl
in
dec
mov
mov
loop
pop
stc
pop
ds
sbb
cli
mov
mov
jo
inc
add
ret
cs
fucomi
lret
or
insl
and
push
pop
repz
js
sub
bswap
mov
jns
and
and
mov
add
sti
cmp
xchg
lods
jae
out
sub
mov
pop
mov
xchg
call
sbb
inc
movsl
and
push
pushf
mov
dec
push
out
shrl
dec
or
and
inc
fisubs
jbe
lds
xchg
pop
jl
mov
cmpsb
sub
pushf
js
cmp
stos
fnstsw
lock
aad
pop
inc
add
in
shl
aam
in
movsl
push
or
gs
push
fidivs
int
push
mov
xor
sub
push
and
cmp
fnstcw
imul
mov
pop
mov
xchg
xchg
pop
mov
adc
mov
cmpsb
and
mov
pop
adc
rorl
mov
pop
add
stos
jl
add
stc
mov
inc
xchg
and
inc
aam
out
sub
ljmp
lret
xor
arpl
sub
mov
sub
xorl
lahf
xchg
mov
add
and
ja
pop
hlt
pshufw
loop
into
aam
push
cli
notb
rolb
add
push
enter
xor
mov
cli
and
dec
push
pop
xor
enter
xchg
out
pop
pop
xchg
mulb
loope
popf
inc
int
mov
jbe
inc
lahf
div
xchg
push
sar
fdivr
inc
cmpsb
test
repz
push
pop
inc
mov
fmull
test
nop
xchg
or
or
jnp
push
cld
fldt
dec
shrl
mov
inc
es
dec
cmp
and
sub
mov
sahf
jl
xchg
popa
negb
dec
outsb
and
aad
adc
mov
stc
aaa
stc
mov
sbb
sarl
lea
dec
sub
cli
mov
pop
inc
xchg
sbb
sub
leave
adc
sub
or
imul
outsb
jae
lods
rorl
mov
mov
enter
in
cmp
pushf
mov
imul
test
add
sub
pop
or
test
outsb
testb
inc
jo
or
shll
in
fists
cmp
dec
push
jge
movsb
xchg
mov
or
sub
cmp
cmp
flds
test
pop
icebp
lret
or
ja
mov
mov
bound
cmpsl
gs
movl
ss
push
add
adc
push
xor
test
negb
pop
in
and
icebp
roll
in
shlb
fiaddl
mov
insl
inc
and
je
push
test
dec
out
mov
mov
daa
pop
jb
dec
xlat
pop
std
imul
lret
push
cmp
in
out
xchg
pop
ret
ret
ja
xchg
mov
pop
repz
out
sub
cmc
mov
in
loop
inc
insb
jmp
sub
leave
aam
rcrb
push
xlat
add
nop
je
pop
decb
outsb
jno
add
mov
frstor
mov
sbb
lahf
aaa
or
fdivrl
ret
add
mov
std
dec
lahf
jb
pop
int3
ljmp
or
push
arpl
inc
movb
rolb
sbbb
and
repnz
icebp
sub
clc
xor
cmp
popf
lcall
inc
push
orb
fiaddl
ds
lea
cmp
sar
bound
cld
cmpsb
cltd
mov
repz
out
mov
sahf
xchg
and
ret
mov
push
sub
push
ja
ljmp
ds
mov
dec
stc
mov
cwtl
inc
subl
cmp
daa
pushf
inc
cmp
out
push
add
int3
xchg
mov
roll
int
push
mov
adc
xchg
xchg
es
lahf
lods
dec
out
jp
cmp
inc
and
mov
adc
and
sti
ret
add
fistps
cmc
stos
cmpsb
iret
sahf
inc
mov
xor
pop
xchg
mov
faddl
fs
ret
and
and
movsl
repz
movb
mov
adc
decb
and
repnz
ret
mov
insl
hlt
adc
fwait
mov
jecxz
inc
lods
inc
pushf
ljmp
dec
push
adc
mov
pop
rorb
sub
inc
es
xchg
cmp
cmp
cwtl
jg
or
mov
adc
ror
inc
into
cmpsb
mov
mov
and
jae
push
fiadds
pushl
ljmp
repnz
in
loop
lds
xor
jmp
xor
sub
cld
add
imul
test
jmp
fisttpl
insl
mov
jl
sbbl
outsl
mov
push
and
mov
jne
sbb
jno
mov
int
ret
adc
loope
xchg
adc
jp
mov
ficompl
imull
test
roll
out
sub
mov
das
lret
and
cli
mov
ljmp
pusha
data16
or
sbb
pop
in
int
lods
or
dec
dec
pop
popf
cmp
inc
xchg
dec
stos
cwtl
add
dec
sarl
mov
or
xchg
fs
sub
notl
adc
sbb
sbb
test
sahf
cli
xchg
and
mov
psrlw
sub
pushf
hlt
jle
jl
popf
js
sti
std
je
mov
mov
outsl
data16
xor
cmpsb
lods
in
push
hlt
sbb
lahf
and
adc
dec
scas
lods
push
jnp
lods
stos
xor
inc
push
xchg
cmp
inc
fldlg2
out
pop
jae
repnz
push
ja
xor
push
push
scas
or
xor
xor
adc
adc
cs
imull
mov
popa
inc
lret
add
ljmp
addl
jge
xchg
sbb
cmp
pop
repnz
mov
inc
or
insb
inc
fnstenv
stc
shll
into
mov
jnp
sbb
scas
fs
pusha
jns
or
dec
lods
cs
sub
sarl
xor
push
inc
fucom
in
jb
test
cmp
dec
push
stos
sbb
shlb
jae
pop
sahf
mov
push
dec
add
out
xor
sarl
sarb
out
mov
jp
mov
inc
bound
push
sbb
into
ret
push
insl
xor
push
dec
and
fiaddl
add
cld
jae
push
loopne
dec
inc
adc
push
dec
push
pop
ljmp
cmp
fcoml
mov
pop
adc
rolb
jb
std
mov
xlat
pop
push
aaa
js
in
pop
xorl
lods
sarl
mov
or
jbe,pt
jbe
push
dec
scas
jb
in
bound
test
jmp
scas
sbb
add
or
packsswb
mov
cmpsl
inc
std
jmp
add
shlb
mov
add
inc
pop
lea
cld
rcrl
imul
movsl
std
pusha
cld
in
leave
or
gs
xchg
or
in
sbb
mov
lock
cmpsb
add
testl
add
adc
xchg
cmp
inc
add
jmp
lea
lahf
jmp
and
aas
test
sar
shl
xchg
emms
add
sarl
pop
addr16
cld
mov
mov
out
dec
jne
cmp
test
in
int
nop
cmpsb
cmc
inc
iret
lock
and
cmp
in
addr16
or
add
mov
push
mov
mov
inc
xchg
fs
out
sbb
mov
lret
pop
and
push
shr
jg
cmp
icebp
inc
mov
sub
inc
cmp
jae
adc
push
xchg
mov
sbb
shlb
jecxz
mov
xchg
xchg
in
sub
or
or
mov
jnp
pop
les
sti
mov
out
aas
es
pop
mov
sbb
enter
jge
ljmp
inc
scas
push
adc
fs
aad
mov
out
outsb
jge
add
sub
js
mov
lahf
xorl
or
add
xchg
movsb
in
sub
sub
mov
shr
cmp
icebp
mov
negb
xchg
mov
fsubr
mov
jb
js
mov
xlat
fnstcw
sbbl
lea
js
or
vmptrld
and
jp
mov
lods
sbb
clc
loop
outsb
movsb
push
lcall
mov
jl
mov
push
lds
mov
cltd
add
lret
cs
or
or
xor
jp
pop
xchg
push
outsl
adcl
mov
jge
inc
xor
test
mov
add
sbbl
shll
cmpsb
arpl
insb
icebp
jmp
in
movsb
sbbl
sbb
mov
scas
sub
cltd
xchg
mov
bound
neg
imul
xor
pusha
notb
data16
cmp
mov
in
add
push
mov
adc
mov
loope
pop
pop
xchg
pop
sub
sub
rorb
cmp
outsb
push
xchg
setge
xchg
jecxz
outsb
xchg
divps
sub
mov
xchg
lea
les
pop
lds
inc
pop
seta
gs
adc
call
aad
or
movb
xchg
shl
fistps
ret
sub
add
add
test
mov
out
push
xchg
fidivs
dec
dec
add
sbb
cmp
xlat
fldl
pusha
xchg
inc
jle
add
imul
insb
jo
dec
lock
and
push
and
xchg
in
pop
in
push
mov
ret
dec
mov
sub
or
inc
push
je
lret
cmp
inc
pminsw
and
mov
mov
jl
mov
dec
sbb
sbb
cmp
test
iret
decb
jb
cld
and
push
aas
and
out
shlb
cmp
cmpsb
mov
or
cld
mov
inc
or
aad
les
je
lock
inc
inc
cmp
cmpl
rcr
or
sub
jno
xchg
aaa
daa
push
jge
dec
test
testl
sahf
dec
mov
mov
add
aam
mov
adc
nop
fsqrt
xchg
in
jle
enter
and
or
mov
lret
dec
insb
sub
xchg
rorl
mov
or
sbb
mov
fistpll
popf
arpl
call
cmpsl
loop
or
mov
clc
xor
negb
adc
sarl
nop
stos
jl
adc
std
push
fistps
or
dec
push
push
dec
sbb
sub
sbb
adc
je
ss
in
mov
lock
pop
mov
repz
mov
lods
outsb
inc
inc
movsl
cli
push
mov
push
add
add
mov
dec
mov
rol
aad
push
push
xlat
sub
xchg
adc
das
pop
cmc
mov
test
adc
bound
and
and
jb
push
adc
repnz
outsb
or
insl
hlt
mov
and
push
imul
repz
iret
loop
pop
pusha
lock
xlat
pop
rolb
pop
xor
mov
jl
int
add
inc
push
add
ret
popa
mov
push
mov
mov
pop
dec
outsl
cltd
fldt
jl
push
das
lock
mov
jbe
rcll
xchg
push
imul
cmp
shr
jae
int3
or
imul
into
mov
jno
jmp
jnp
lods
push
fcomps
int3
mov
das
and
jp
clc
jbe
cmp
pop
mov
jno
xor
in
jb
or
mov
pop
mov
cmpsl
leave
push
inc
popf
imull
mov
mov
out
imul
cmp
adc
lods
xor
mov
inc
iret
jns
mov
lds
shll
push
iret
daa
icebp
mov
outsb
std
jmp
nop
fsubl
mov
sti
push
int
push
mov
in
dec
pop
pop
lds
lret
scas
inc
out
pop
jge
mov
jns
add
je
sub
ret
pop
daa
cmp
call
or
adc
inc
out
incl
cmp
jmp
add
les
push
mov
test
decl
lock
mov
mov
add
cmp
in
mov
inc
fists
push
test
cmp
push
aad
push
in
sbb
jb
int
cld
jmp
js
push
fwait
in
mov
call
xchg
data16
mov
test
mov
mov
xor
push
daa
inc
jl
je
fyl2x
sub
and
push
sbb
mov
sbb
jns
pop
sub
push
jns
mov
aad
mov
sub
js
es
das
inc
in
jmp
pop
inc
arpl
pop
jae
sahf
push
jecxz
cmp
sub
jle
adc
jmp
xor
fimull
jl
push
mov
sub
xlat
or
repz
mov
das
jbe
mull
lret
cld
es
mov
imul
jno
jns
mov
aad
fwait
push
xchg
sahf
rcr
mov
int
leave
call
jg
sbb
ficoms
dec
int
jae
das
push
add
pop
arpl
out
mov
push
dec
jg
jl
outsl
fstl
cmp
ljmp
jo
daa
fcmovne
cmp
add
mov
pop
push
xchg
adc
mov
sahf
leave
fadd
sbb
xchg
cmp
sub
jmp
dec
push
insl
mov
nop
sbb
push
mov
xchg
lock
xchg
adc
sub
ljmp
and
adc
push
call
xor
mov
out
or
sbb
dec
add
xchg
sbb
sub
out
pop
mul
jnp
jecxz
inc
adc
dec
mov
or
inc
mov
ficoml
mov
imul
mov
into
bound
mov
sbb
arpl
outsb
fdivrl
adc
mov
push
push
in
jo
insl
xor
rcll
jg
lods
dec
ret
mov
in
inc
push
call
lods
mov
jno
inc
loope
daa
lods
fbld
pushf
cmp
cmp
enter
dec
and
test
pop
push
pop
loop
mov
push
pop
mov
push
dec
and
imul
mull
inc
mov
sahf
adc
addr16
shrb
xor
std
adc
and
ss
pop
dec
insl
loop
std
cwtl
or
mov
lock
out
in
mov
int3
jo
push
pop
loope
imulb
mov
xlat
jo
in
dec
daa
jne
dec
add
dec
sub
orl
push
lods
push
fistps
imul
mov
pushf
int
ficompl
push
and
adc
stos
push
cmc
arpl
icebp
lods
add
jb
xor
and
loop
loop
fadds
std
dec
xlat
outsl
fistpl
inc
dec
xchg
jg
sbb
jo
and
pop
rclb
xor
push
das
sub
cmp
int3
faddp
lcall
rcrb
mov
movsb
stos
outsb
nop
das
lods
lock
inc
test
loop
sahf
cmpsb
sub
add
aas
inc
cli
mov
imul
pusha
pushf
inc
lds
sbb
in
sbb
nop
ret
out
loope
insb
push
insl
ljmp
out
adc
inc
loope
mov
sub
cld
cmp
lcall
enter
push
fmull
cs
je
dec
loopne
ret
and
cld
pushf
xor
adc
add
add
sub
pop
pop
mov
inc
jns
jno
xor
push
push
xchg
inc
or
jne
dec
lahf
dec
mov
hlt
rcrb
cmp
cmc
gs
adc
xchg
ja
pop
and
or
scas
test
mov
and
lcall
cmp
inc
js
loope
int3
xor
pop
sti
add
cmp
xor
mov
test
xor
loope
aam
mov
mov
loopne
push
dec
jbe
fcomps
sub
xlat
pop
pop
inc
add
or
stos
jbe
push
insl
or
or
icebp
adc
scas
mov
jne
movsl
dec
rorb
jg
pop
and
sbb
pop
je
outsb
lock
mov
mov
add
insb
jno
dec
jae
arpl
mov
gs
popf
inc
leave
fnstenv
repz
daa
sbb
xchg
add
pushf
and
ret
xor
sbb
shrb
popf
test
xchg
mov
enter
adc
das
ja
decb
push
fmulp
rcrb
in
xchg
dec
lock
mov
dec
pushf
stos
xlat
lods
das
xchg
in
mov
cs
mov
rolb
je
repnz
xorl
je
lds
int3
shlb
fmull
mov
xor
out
and
das
jg
mov
pushf
xchg
cli
in
xchg
mov
rol
gs
out
jge
cmp
mov
inc
scas
sbb
pushf
jo
in
dec
push
mulb
and
fadds
sahf
pop
cmp
cmp
fimuls
add
in
test
shlb
les
cmc
mov
cmp
insl
mov
in
and
sbb
lcall
outsl
addr16
shrb
sub
ret
repz
mov
pop
push
mov
xchg
cmpsb
jne
push
cmp
dec
jle
jb
jo
mov
jmp
push
ret
pop
lcall
call
add
fsub
ljmp
testb
clc
pop
or
or
pop
dec
mov
js
shr
fisubs
fsubrp
ljmp
imul
mov
std
pop
inc
add
clc
roll
lahf
cmpsb
insl
mov
pop
jbe
mov
xorb
jae
dec
dec
or
mov
jnp
call
daa
outsb
cltd
xchg
mov
mov
inc
stos
mov
cmp
aaa
aas
popa
push
lea
pop
lods
out
xchg
add
dec
xchg
pop
stc
mov
jmp
cmp
cltd
ss
mov
pop
iret
out
xor
pop
test
jbe
or
jmp
jl
adc
pop
nop
xchg
fsub
pop
cmp
cmp
sbb
lret
push
out
cmc
push
xchg
decb
pop
push
push
cmpsb
sbb
and
iret
jns
out
pop
fbstp
push
add
cs
jno
clc
pop
out
sub
sub
sbb
rcrb
push
sub
dec
and
aad
mov
test
scas
xchg
dec
pop
and
or
rorl
bound
call
sbb
ds
xchg
mul
scas
adc
lret
add
xchg
fstpl
insl
scas
xchg
movsl
in
mov
cmp
pop
ja
and
add
fcmovnb
mov
push
repnz
sbb
daa
cld
mov
mov
jbe
mov
cmp
cmpsb
repnz
and
cmp
test
loop
lods
sbb
cld
xor
pop
add
add
mov
arpl
xchg
out
cmp
mov
xchg
ljmp
and
lods
cmp
cmp
fcoms
outsb
mov
repz
mov
int3
sub
pusha
cltd
inc
sub
mov
jbe
sub
cmp
ds
ljmp
push
and
jp
call
fs
hlt
or
out
jb
loopne
scas
jno
jg
flds
inc
fwait
jg
mov
xor
out
fwait
add
jl
shl
pusha
notl
cmpsb
dec
xor
in
pop
jo
mov
pop
mov
aaa
sahf
ja
mov
into
and
pop
loope
mov
sbb
push
fdivrs
mov
inc
mov
inc
gs
or
mov
ds
adc
push
xor
add
gs
popl
sub
dec
mov
mov
mov
mov
cli
cmp
xchg
fmull
incl
cli
push
push
push
pop
inc
les
xchg
mov
cmp
mov
cmpsb
int3
mov
enter
filds
popa
inc
sbb
repnz
sbb
mov
dec
insb
popa
loopne
sub
nop
out
loope
loop
aad
add
pop
mov
out
aad
icebp
inc
push
scas
cmp
sbb
xchg
push
fcmove
jl
sbb
out
mov
lods
xchg
dec
jmp
fisttps
sbb
test
cli
fisttps
jmp
mov
dec
cmp
xor
mov
adc
stos
mov
scas
jp
fsubrp
mov
jg
push
push
xchg
imul
insb
cmpsl
inc
sub
adc
out
mov
test
lahf
int
mov
sub
popa
xchg
adc
and
inc
jg
js
fisubl
xchg
scas
pusha
insl
fisubs
push
add
inc
test
sbb
aam
gs
cmp
daa
pop
jp
cwtl
cld
fbstp
pop
leave
jle
sub
cmp
dec
in
popa
mov
or
jns
push
sbb
and
push
aam
andl
ret
movsb
iret
rcrb
add
lret
inc
pop
push
sub
cmpsl
lock
xor
pop
sub
aaa
mov
xor
icebp
dec
inc
loop
pushl
xchg
mov
test
jge
or
outsl
addr16
sub
jb
xchg
jge
in
dec
inc
je
and
in
jno
hlt
pop
ret
mov
jo
call
cwtl
sub
mov
push
jl
jnp
xchg
sbb
jl
mov
inc
cld
popf
pop
push
pop
ja
and
sub
jg
and
or
dec
or
aas
test
loop
test
inc
rorb
jbe
inc
cltd
sub
and
dec
test
adc
mov
mov
sub
mov
dec
mul
mov
scas
adc
mov
rorb
test
dec
jns
inc
push
jg
push
sbb
ss
pop
push
or
mov
test
dec
rcl
cmpsl
out
pop
pop
add
sahf
xchg
pushf
jns
jne
cltd
mov
js,pn
xchg
hlt
repz
inc
ja
pop
scas
adc
mov
cmp
je
jne
subb
and
inc
pushf
inc
xchg
inc
negl
roll
enter
fadd
test
mov
dec
fistpl
cli
fwait
les
ret
loop
clc
test
push
cmpsl
sub
adc
cmp
ss
scas
test
or
fwait
js
scas
or
out
int
pop
lahf
xchg
or
add
cltd
ror
roll
push
sbb
mov
mov
jp
stc
ret
pop
add
push
cmpsb
shrb
inc
jne
mov
test
in
adc
roll
pop
push
pop
xchg
mov
mov
inc
sahf
lea
sub
mov
mov
test
int3
mov
jmp
loop
cs
ficoms
rolb
mov
xchg
cmc
out
test
repz
push
in
xchg
jb
cmp
mov
pop
push
xor
push
addr16
sub
leave
scas
pushf
fsts
mov
adc
xor
mov
cmp
outsl
repnz
pop
pop
and
scas
sbb
cmpsl
mov
push
lret
and
and
loope
jecxz
ja
push
mov
pop
push
or
push
inc
add
dec
push
push
push
cmp
int
loopne
enter
dec
adc
sub
dec
and
push
jl
fmul
and
push
sbb
stc
add
gs
std
xchg
mov
sahf
iret
fldt
cmp
repz
outsl
fsubs
add
mov
jbe
mov
adc
insb
jl
int
mov
test
push
fbld
cmp
ss
jmp
mov
cld
pop
aam
lock
int3
js
or
inc
les
imul
xchg
test
outsb
and
cld
and
jbe
push
dec
cmc
scas
sbb
fisubrl
test
vcvtdq2ps
mov
rorb
jmp
movsl
pop
or
mov
je
sti
fidivrl
xchg
outsb
sbb
xchg
pop
pop
xor
push
inc
popa
cmp
js
loop
adc
sub
push
nop
in
jns
les
pop
cmp
pop
fbld
xor
imul
xor
adc
or
imulb
push
mov
sbb
pop
xor
lea
jnp
or
out
mov
sbb
mov
push
cmc
pop
push
into
roll
inc
movsl
scas
mov
mov
insl
out
jp
in
fnstcw
pushf
scas
mov
flds
xor
cmpsb
xchg
cmc
sub
popa
scas
ds
pop
ret
jl
dec
or
idivb
outsl
test
dec
out
or
sub
out
loop
inc
out
fstpl
ficompl
sbb
lahf
cmp
sub
jb
jnp
movsl
notl
pop
mov
idiv
movsb
sbb
test
sub
inc
shl
mov
or
xchg
sub
mov
mov
test
in
fsts
jecxz
and
fisubrs
cmp
rorb
push
test
aaa
and
fdivr
jle
jnp
push
jge
mov
or
loop
inc
sub
in
mov
mov
jle
loope
out
pop
je
sbb
mov
out
sub
fistpll
das
mov
scas
scas
imul
xor
inc
ret
jge,pn
popl
mov
mov
and
popa
dec
aas
out
ror
mov
loopne
add
push
mov
sbb
lds
loopne
ret
xchg
fstpt
sbb
cli
adcb
inc
push
bound
and
scas
ss
xor
dec
lds
jp
xor
jno
xchg
mov
pusha
cld
icebp
xchg
jo
inc
add
sarl
push
sbb
cwtl
mov
or
ds
lock
mov
and
adc
push
outsb
nop
mov
jns
in
push
or
stos
mov
mov
push
lods
push
add
or
push
push
sub
das
js,pt
lret
ja
sub
or
insl
jb
in
add
inc
lret
out
movsb
xor
fbstp
xorb
xor
mov
mov
sub
inc
pushf
mov
in
xlat
cld
push
adc
jne
gs
cmp
or
call
xor
pop
pop
cmp
mov
pusha
lock
mov
sub
lods
push
mov
sbb
popf
xchg
jne
es
in
xor
int3
pop
push
lret
out
and
and
rcll
mov
inc
xchg
repz
adc
in
inc
mov
sub
xor
aas
and
mov
mov
imul
scas
push
scas
rol
cltd
push
add
sar
icebp
xchg
inc
pop
cmpsl
aaa
fs
xor
sahf
xchg
fistpll
xor
sbb
sub
nop
lret
jno
shrb
xchg
dec
mov
or
inc
add
cmp
je
mov
push
jecxz
xlat
push
js
stos
pop
cltd
ljmp
jl
sbb
mov
insl
jb
cmp
sub
wbinvd
dec
mov
sbb
adc
scas
scas
repnz
arpl
cmp
mov
testb
lods
xor
scas
mov
mov
sbb
cmp
ds
loop
iret
cmpsb
mov
jns
rcll
les
gs
ret
popa
aad
cmp
xorl
or
push
in
cmp
xchg
xchg
insb
outsl
imul
out
fstpl
popf
jns
int
push
mov
out
cmp
adc
sub
movsb
iret
xchg
in
pop
cwtl
leave
dec
rorl
cmp
mov
lcall
pop
or
test
call
xchg
out
inc
fs
sub
es
iret
jmp
loop
hlt
imul
and
pop
inc
cmpsl
inc
inc
lods
cltd
sbb
ret
lods
sti
mov
push
push
adc
stos
imul
mov
jmp
and
sbb
dec
fs
insl
lret
shll
dec
std
sub
gs
jae
inc
adc
lods
outsb
add
ds
dec
sti
inc
dec
mov
inc
sbb
insl
adc
jmp
rorl
repz
inc
mov
push
lcall
repz
cmp
sbb
lea
cwtl
or
nop
in
push
dec
std
maskmovq
testl
push
jae
outsb
mov
imul
lret
add
jbe
add
popl
loope
sub
mov
mov
cli
push
rorl
cmp
arpl
jecxz
sbb
push
loop
std
or
scas
sub
or
in
lahf
cmp
insb
lcall
sbb
andl
or
xchg
sub
stos
inc
inc
cmp
add
xchg
jge
shrl
in
jae
xchg
popf
inc
negl
pop
or
pop
dec
fistps
gs
scas
add
movsb
xchg
sbb
jno
rorl
push
pop
in
enter
scas
hlt
adc
jne
xchg
push
arpl
mov
jmp
cmpsl
xchg
in
add
nopl
aas
xor
ljmp
add
sarb
das
lret
mov
cmp
lcall
fs
inc
std
jp
jo
adc
in
js
out
inc
or
bound
out
jle
add
adcb
xorb
xor
mov
lcall
enter
jmp
hlt
gs
cltd
inc
xchg
in
ds
int
xlat
push
mov
dec
mov
js
shll
shlb
xlat
or
vmwrite
xchg
pop
cmp
mov
shl
push
stc
fistps
and
or
add
add
adc
in
xchg
and
mov
push
inc
xchg
mov
dec
enter
les
and
pop
xchg
daa
cmpsb
addr16
das
xchg
mov
rcll
in
scas
and
or
mov
cltd
cwtl
xor
jg
lock
mov
scas
lock
mov
enter
aas
xchg
jge,pn
fiaddl
xchg
clc
sbb
mov
xor
cmpsb
pop
ret
xor
pop
xchg
les
js
ljmp
sarb
sbb
xor
rorl
or
push
repz
icebp
and
into
adc
or
nopl
mov
pop
mov
outsb
xchg
loop
mov
mov
jbe
mov
mov
repz
jae
or
and
push
insl
out
shlb
test
cmc
into
rcll
rorb
ret
jb
push
adc
mov
mov
fistps
pop
pop
fs
push
lcall
push
dec
cmp
lret
jecxz
dec
fidivl
std
cmp
out
lahf
inc
ret
rcrb
adc
pop
mov
or
mov
jno
fwait
fwait
cmp
mov
mov
negb
addr16
pushf
mov
sbb
pop
xchg
sub
ret
dec
adc
add
test
in
into
ret
push
ss
dec
in
rcr
jnp
loop
shll
sbb
mov
inc
addr16
sub
push
cs
cld
or
clc
fwait
add
jbe
mov
cld
into
mov
outsl
push
aas
testb
adc
pop
fldl
mov
sti
mov
sbb
out
mov
fldt
xchg
mov
add
mov
outsl
out
or
xlat
dec
in
imul
cmp
fsubrs
gs
mov
xor
mov
roll
ss
xchg
mov
sbb
out
mov
xor
sub
mov
scas
loope
shlb
xchg
mov
inc
cmp
shr
dec
xchg
and
adc
dec
je
scas
dec
insl
xchg
mov
jl
mov
jae
adc
or
jbe
xchg
popa
lret
pop
add
add
xchg
sbb
mov
adc
scas
jno
mov
loop
dec
cwtl
mov
xor
aaa
rorb
cmp
cltd
sbb
bound
hlt
xor
jne
jb
dec
bound
sub
inc
lods
or
jg
mov
add
push
add
in
icebp
iret
rclb
ficoms
daa
andl
jg
aaa
pop
mov
jl
mov
int
fidivrs
push
inc
cmpsb
xor
js
sbb
or
loope
test
mov
lret
and
out
daa
mov
cs
dec
imul
mov
xchg
ret
retw
sbb
pop
dec
icebp
push
pusha
mov
les
mov
aam
cmpsb
xor
add
cwtl
sub
repz
rolb
adc
stc
fstps
jbe
out
jnp
outsl
mov
addr16
lock
arpl
int3
pushf
sti
frstor
cmpb
std
dec
std
ljmp
jno
shll
dec
adc
pop
movsb
bnd
in
jmp
push
lahf
pop
xor
sbb
jno
sub
mov
pop
out
leave
bound
jb
and
shrb
outsw
scas
stc
test
int3
fimuls
inc
and
jp
sub
xor
adc
js
or
jmp
test
shll
cmpsl
ss
ret
lcall
call
push
mov
push
mulb
mov
mov
jle
shl
jo
cmpsb
repz
push
ret
xchg
aad
outsb
sub
sbb
dec
ret
mov
movsb
insb
out
mov
cmp
add
lds
pop
lret
aad
push
jge
mov
imul
jne
pop
add
stos
inc
lcall
push
ja
xor
mov
sarl
push
push
or
adc
cli
and
push
mov
cmp
and
sbb
imul
ja
mov
aam
cs
pop
pop
sub
sub
dec
dec
testl
adc
dec
mov
lds
xlat
mov
orl
jne
xchg
fs
out
mov
inc
imul
cmpsb
jmp
pop
ljmp
push
xor
or
mov
sub
lret
test
insl
arpl
push
jnp
mov
popl
rolb
iret
mov
pusha
cmp
sub
insl
cmpsb
mov
mov
mov
jo
loop
pop
lahf
dec
and
jns
pop
pusha
mov
pop
or
adc
lds
outsl
aad
fiaddl
push
and
mov
xor
les
xchg
outsl
pop
mov
lods
inc
mov
pop
sbb
pop
clc
lret
std
xchg
outsb
cli
lret
add
int
sbb
cmp
fs
xor
cmp
cltd
jne
sub
pop
in
into
outsl
stos
or
adc
int3
bound
cmpsb
sarb
pop
add
shll
xchg
adc
clc
push
push
call
adc
das
xchg
and
xorb
adc
lock
mov
xchg
scas
loop
popf
and
movsb
mov
cwtl
or
or
sahf
insb
test
stos
ret
repz
pmulhuw
aad
dec
sub
aam
dec
lods
hlt
dec
je
sub
cld
ljmp
enter
dec
aam
mov
ret
sub
sub
dec
js,pt
iret
jecxz
add
pop
mov
add
rol
pop
int
arpl
sbbl
jbe
popf
inc
mov
pop
test
outsb
js
loop
push
adc
in
or
cli
and
in
lahf
clc
xor
inc
insb
pop
aas
push
scas
hlt
lret
in
dec
and
cmp
imul
push
shl
add
pop
outsl
fmull
in
lods
lds
jns
cmpsl
or
ret
cld
cmp
leave
ljmp
outsb
push
xchg
lea
je
loopne
or
addl
out
push
pop
test
cmp
push
out
jae
and
stos
inc
cli
sbb
xor
xlat
sahf
push
out
paddb
or
movsb
push
stos
je
inc
mov
xor
dec
movsb
mov
outsb
imul
sbbl
icebp
loopne
cltd
fildl
mov
in
mov
inc
out
lcall
test
loope
lret
sub
pop
dec
icebp
lret
push
mov
pop
dec
adc
jb
sbb
gs
xchg
das
sub
loope
pop
dec
nop
xor
or
xor
fs
sbb
and
sub
fadd
incb
lcall
xor
fldl
mov
pop
mov
imul
shr
sbb
xchg
adc
pop
and
aas
sub
insl
clc
sub
cs
pop
sub
pusha
push
sub
push
adc
xchg
push
push
lods
ds
inc
lahf
push
lds
and
dec
sub
jae
in
xchg
out
mov
loop
ret
or
movsb
les
addr16
mov
dec
ss
rsqrtps
subb
icebp
adc
push
sbb
or
mov
pop
in
xchg
nop
into
dec
mov
lods
idiv
dec
mov
stos
mov
les
push
xor
jnp
sub
xor
push
pushf
cmpsl
out
cmc
cmp
inc
test
xor
test
out
bound
adcb
pop
cmp
pop
insb
daa
and
ret
jbe
aaa
cmp
out
ror
nop
out
shrb
pop
jo
mov
fucomp
adc
or
into
xchg
push
sub
int3
es
ss
add
jne
jne
and
popf
out
repz
sahf
mov
inc
fwait
pop
mov
add
pop
bound
xor
jp
mov
mov
fs
adc
cmc
xchg
dec
mov
add
add
mov
xor
fisubs
cmp
jp
stos
inc
mov
mov
out
mov
push
and
int
movsb
add
out
jo
or
xchg
pop
jo
cmpsl
shll
cmpsl
outsl
mov
pop
mov
jbe
cmpsb
cs
ja
adc
jmp
ror
mov
dec
pop
jg
test
stos
mov
xchg
sahf
leave
jbe
scas
xlat
lods
ljmp
jo
cmp
les
stc
sbbl
insb
pushf
jecxz
push
mov
jnp
nop
add
sbb
mov
fcmovne
daa
sub
mulb
stos
inc
out
mov
mov
cmc
xchg
push
xchg
jle
push
and
dec
xchg
jle
popl
imul
ljmp
sbb
push
cmpsb
addr16
adcb
xor
rorb
popl
movsl
scas
std
hlt
jbe
pop
cli
addr16
add
jp
inc
dec
cmp
dec
mov
pop
xchg
mov
xchg
arpl
or
mov
pop
adc
add
xchg
sbbl
add
loop
mov
rcll
lods
fwait
ret
jle
xchg
test
outsb
dec
pop
jbe
ds
mov
mov
jl
rcl
push
out
xchg
jle
sbb
das
int3
pop
pop
jge
idiv
inc
adc
js
inc
xchg
xor
adc
shlb
xor
dec
lret
jno
mov
pop
orb
data16
push
movsl
lods
les
in
jg
decl
es
cltd
mov
dec
mov
cmp
ljmp
pop
popa
xchg
adc
je
cmpsl
push
es
cli
dec
sub
push
jmp
pop
int
repnz
mov
lods
movsb
aad
adc
or
dec
inc
and
stc
sub
pop
lea
andl
pushf
std
out
les
xor
gs
movsl
mov
push
sbb
gs
mov
pop
int3
into
inc
lret
pop
popa
gs
mov
clc
arpl
stc
dec
mov
mov
popa
xchg
fldenv
scas
jmp
lods
inc
pop
push
sahf
faddp
rolb
cmp
pop
xor
add
mov
mov
addr16
xchg
jp
and
or
loope
loop
cs
cmp
xchg
mov
mov
nop
sub
pop
cmpsl
fcmovnbe
mov
pop
orl
rcrb
out
push
andl
add
insl
push
xchg
cli
xor
hlt
jl
div
lea
mulb
mov
lods
lret
pop
outsl
idiv
inc
jecxz
dec
sub
pop
mov
mov
push
data16
test
mov
or
mov
add
mov
jmp
ljmp
int3
adc
packssdw
je
in
sub
sbb
mov
jbe
roll
push
fildll
sbb
inc
dec
mov
mov
and
test
addr16
leave
inc
cmp
inc
push
adcb
cwtl
xchg
pop
mov
xor
test
shll
pop
xor
les
pushf
lods
sbb
in
lock
insb
lock
dec
adc
jp
push
mov
mov
out
xor
push
xor
dec
add
cld
pop
enter
lock
stos
das
mov
cli
and
push
aad
int3
jg
jl
xlat
dec
lret
out
aas
cld
adc
push
push
xor
mov
cmp
cmp
loop
imulb
int
pushf
sub
xchg
inc
xor
mov
lods
subb
mov
xchg
push
rcll
pop
mov
cwtl
cmc
push
xchg
push
add
sub
out
push
test
mov
scas
into
mov
jge
mov
xchg
aam
or
das
or
jle
jb
repnz
ljmp
mov
test
aas
dec
sbb
adc
mov
cmpsb
iret
jb
clc
scas
xchg
mov
inc
cmc
jae
andb
lcall
call
jae
fcmovu
adc
cmp
sub
bswap
jl
pop
leave
mov
loope
sub
add
mov
cmp
sbb
inc
push
mov
cwtl
push
xchg
js
fidivl
dec
pop
ja
or
push
add
movsb
inc
ret
xlat
cltd
push
inc
mov
ja
add
pop
aaa
hlt
je
movsl
sub
xor
aas
add
xchg
lret
push
and
add
addr16
test
jnp
stos
xor
scas
mov
mov
mov
xorl
loopne
idivb
dec
lods
and
fwait
xor
mov
nop
xor
mov
cmc
iret
shll
andb
jp
dec
dec
ja
xchg
outsb
clc
icebp
inc
std
into
mov
addb
out
imul
mov
shr
jae
xlat
cmp
bound
mov
hlt
pop
jbe
and
inc
sub
sub
push
or
sub
ret
cmc
roll
movl
mov
pop
cld
xchg
xor
inc
roll
pushf
fisubrs
movsl
test
lcall
push
xchg
cltd
roll
push
cmp
push
or
lahf
jnp
xor
fwait
inc
push
leave
popf
xchg
jecxz
xor
mov
shll
loope
xchg
dec
inc
lcall
icebp
fwait
add
mov
sub
test
lcall
jp
loope
push
xlat
or
or
test
adc
rcrl
and
scas
mov
fildl
call
int3
mov
out
cs
sub
dec
and
lods
je
cli
sar
dec
roll
ljmp
arpl
lods
mov
mov
adcl
xchg
dec
dec
stos
cmp
repz
xchg
xchg
jecxz
sbb
add
aaa
push
shl
inc
enter
mov
mov
xor
outsb
xor
xor
ret
cltd
cld
mov
or
jecxz
lds
stc
in
js
push
adc
mov
pop
add
inc
and
pop
arpl
jne
or
ret
sbb
cmpsb
and
movsl
stc
dec
xchg
dec
jbe
test
imul
sbb
pop
ljmp
icebp
insl
mov
lret
xor
movsl
into
jecxz
imul
add
lock
mov
lcall
addr16
into
pop
cmpsl
or
inc
leave
test
mov
adc
cmc
mov
xor
sub
fwait
jno
sub
lret
out
add
fmuls
or
aas
cmpsb
pop
shl
lock
lods
out
arpl
aas
cwtl
xchg
in
cld
addr16
pop
xchg
subb
fwait
mov
cmp
pop
cmpl
je
xlat
pop
stos
dec
pop
cwtl
std
loop
movsl
inc
xor
shufps
pop
loop
pop
fimuls
fistpl
mov
ret
ret
inc
sahf
mov
and
add
int
xor
push
andl
or
loopne
in
mov
in
mov
xor
pop
sub
sahf
aam
mov
call
fiaddl
push
mov
insl
jmp
mov
mov
fisubrs
mov
mov
vhsubpd
or
mov
jle
ljmp
repz
fbstp
xchg
hlt
leave
movsb
sub
jecxz
push
shrb
push
int
out
sar
cmp
mov
cmp
inc
sbb
pop
cmp
test
dec
push
and
insl
adc
mov
dec
mov
mov
fsubs
jae
std
xchg
scas
jp
loope
repnz
or
mov
scas
sahf
push
fs
fnstsw
ss
cs
dec
shrb
inc
pop
bound
push
cmp
jg
push
or
adc
cltd
sub
add
je
xchg
in
popf
icebp
mov
popa
loope
scas
clc
ret
push
pusha
inc
sbb
sub
inc
xchg
xchg
push
sub
xchg
mov
push
mov
fstp
mov
mov
addr16
scas
mov
bound
and
push
inc
pop
jge
lock
mov
movsb
scas
sub
sub
mov
sbb
mov
inc
mov
rorl
inc
xor
or
imul
or
sti
es
arpl
sti
lea
add
add
out
ljmp
lds
or
test
movsl
xchg
bound
adc
inc
add
mov
and
iret
pop
mov
rcll
outsl
cmc
lock
or
xchg
jbe
cs
fcmovne
lahf
lods
loopne
lahf
fisttpll
mov
inc
lcall
in
lods
mov
add
cmp
loop
cmpsb
jo
mov
std
sub
adc
jbe
adc
lret
pop
ffree
cmp
movsl
mov
repz
mov
and
lock
fmuls
arpl
out
rorl
xchg
das
mov
out
push
aaa
push
dec
outsb
mov
add
test
cld
fiadds
mov
mov
push
mov
outsl
push
xor
sbb
and
mov
xchg
call
fidivrl
pop
and
inc
cmc
add
fldenv
lds
xchg
inc
sbb
dec
xor
sub
and
push
xchg
push
fcmovu
incb
cs
mov
pop
in
insl
jo
jae
int3
aaa
add
and
loope
cmp
dec
lods
jg
into
js
stos
inc
adc
and
sub
and
push
push
mov
xlat
mov
int3
out
in
in
leave
pop
xchg
lock
jle
iret
xchg
cltd
push
sahf
push
fsubl
imul
fsts
mov
in
movsb
lcall
clc
shrl
xchg
mov
pop
xor
cmp
rclb
fnstsw
mov
fimuls
push
dec
push
adc
xor
iret
mov
mov
add
adc
push
inc
loop
rclb
xchg
testl
fucomi
xor
xchg
sub
stos
cltd
xor
cmpsb
ss
cmpsb
in
xor
or
jp
pop
inc
stos
aad
iret
icebp
sti
or
add
fisttps
add
mov
or
pop
js
or
mov
push
mov
jmp
fs
scas
stos
into
icebp
sbb
add
xor
dec
xchg
push
mov
fsubr
sub
mov
jecxz
in
mov
push
leave
pop
push
and
sbb
imull
cmp
jb
cmp
test
cmp
int3
fwait
inc
dec
into
addb
push
fistpll
les
and
unpcklps
push
push
pop
xorl
lods
adc
loope
cli
adc
jp
jl
or
filds
test
lret
push
xchg
push
idivl
es
jo
mov
aas
mov
jl
out
mov
cmc
and
xchg
sub
push
shrl
sahf
xor
xchg
sub
or
pushw
pop
push
arpl
push
nop
push
sub
ffreep
jns
push
xchg
sbb
push
stc
xchg
sub
jle
xor
push
andl
test
pusha
sub
dec
mov
cmp
mov
ss
mov
push
popa
in
leave
in
rcrb
leave
push
cli
pop
lds
add
jle
push
fsubp
pop
dec
pop
jp
jnp
decl
cmpsb
cmp
loop
jns
inc
rorl
push
arpl
je
lcall
loope
aaa
in
aad
hlt
dec
aas
jno
popf
jne
jl
rorb
xor
sbb
arpl
adcb
loopne
pop
adc
outsb
jnp
std
mov
jae
xor
xor
sbb
cmc
aas
sbb
dec
ja
test
pop
cmp
sub
mov
xchg
loopne
xchg
popf
nop
mov
push
in
pushf
ret
pop
cmp
ficompl
pop
ret
sub
xchg
cmpsl
mov
dec
pop
xor
xchg
or
ret
jae
cli
inc
ret
imul
mov
cmpsl
sub
jmp
cmp
and
sbb
je
mov
fsubrl
push
test
push
ret
mov
repnz
and
push
sbb
mov
or
repnz
outsl
mov
sbb
pop
mov
stc
inc
arpl
shl
inc
adc
les
pop
repz
and
mov
mov
ljmp
insl
pop
ret
push
stos
mov
jbe
popa
dec
push
daa
push
and
jge
sbb
sub
pop
jne
sub
pop
setge
shrl
cld
shll
and
pop
dec
idivb
shrb
mov
in
jno
xlat
icebp
mov
pop
lock
jae
push
jae
add
or
mov
shrb
push
cmp
shll
sub
adc
scas
mov
ret
xchg
xchg
rclb
xor
sub
adc
inc
or
add
inc
xchg
rolb
out
push
nop
add
dec
push
mov
push
sub
push
sbb
jp
inc
mov
cld
cmpsb
inc
mov
lcall
fistpll
stos
mov
add
call
std
xor
sbb
fmuls
into
and
pop
shrl
fucom
fstl
scas
decl
loope
sub
call
xchg
fwait
stos
in
test
pop
xchg
xchg
xlat
jo
xchg
cmc
push
dec
inc
push
sub
push
fstl
inc
xor
push
cmp
gs
gs
xchg
aas
push
inc
inc
dec
call
xor
imul
in
mov
xor
cmp
jb
add
pop
or
jmp
pushf
pop
xchg
pushf
jmp
call
pop
das
mov
into
repz
xchg
push
xchg
and
jecxz
js
fisttpl
mov
in
lret
inc
imul
movsb
repz
pop
adc
xor
sub
and
ret
jle
pop
add
fisttps
outsb
fbld
ja
shl
mov
loop
inc
add
hlt
inc
pop
test
xor
mov
hlt
or
dec
jg
push
pop
scas
sub
ja
push
rcrl
or
inc
cmpl
fs
shrl
fstps
scas
jecxz
daa
sbb
inc
sbb
flds
fidivs
add
lret
cmpsl
pusha
mov
aas
pop
dec
mov
in
sub
lahf
and
mov
cld
psllw
xchg
add
sahf
pop
xor
xchg
and
or
mov
lock
cmp
ss
jne
push
cmp
leave
jge
mov
push
jae
adc
add
pop
pop
sub
push
ds
int
push
add
iret
test
roll
push
aam
inc
mov
inc
and
and
xchg
faddl
push
or
mov
ret
pusha
or
mov
leave
jecxz
push
sub
jl
jo
xor
add
stos
loopne
incl
dec
cmp
add
lret
fsub
pop
adc
subb
push
push
pop
sub
lea
cmc
lock
dec
sar
dec
ljmp
sub
and
jle
fnop
push
mov
xorb
imul
je
jbe
paddusb
pop
mov
dec
jl
xchg
jne
lock
xor
mov
mov
dec
jo
out
popf
push
lods
and
in
adc
sbb
inc
sbb
mov
xor
popf
mov
mov
fldt
add
jo
scas
cwtl
mov
lea
bound
scas
lock
cmp
xor
xor
movsl
lds
push
jb
sarb
adc
or
cli
and
mov
push
out
sub
clc
jp
loopne
addr16
cmp
stc
mov
or
xor
flds
adc
stc
ficomps
xchg
sarl
lds
lret
lret
std
jl
mov
out
arpl
push
pop
cmp
call
cmp
pop
push
push
std
cmpsb
rcrl
mov
jns
xor
rorb
mov
lods
ja
in
lods
test
cmp
enter
jg
stos
mov
mov
fsubs
adc
xchg
pop
mov
dec
dec
and
or
sbb
mov
sub
addr16
mov
pusha
and
mov
lahf
pop
dec
push
lret
sbb
inc
inc
add
outsl
out
sti
out
mov
mov
pop
popl
mov
repz
and
icebp
mov
test
mov
test
adc
loop
or
jp
push
and
lcall
cmp
stc
mov
fdivr
faddp
mov
fwait
enter
cmpsl
mov
adc
jno
sub
lea
xor
mov
nop
xor
jg
xor
ror
jnp
adc
xchg
jbe
pop
hlt
loope
mov
cs
jae
push
sti
fcomps
test
dec
nop
sub
cltd
and
xor
outsb
dec
popa
dec
das
int
pop
cld
pushw
fisubrs
int
cmp
xchg
xor
dec
adc
sbb
and
push
fidivl
addr16
pop
cmpsl
lds
test
std
dec
adc
dec
insl
test
sahf
fcoml
pop
fsubr
xchg
stos
push
dec
icebp
loope
pop
add
jecxz
cmc
aas
jae
jb
dec
mov
xor
sbb
pop
std
jne
push
sti
push
pop
es
mov
mov
push
rcrl
jb
fcompl
out
xchg
insb
mov
pop
insl
fnstenv
adc
adc
dec
dec
in
mov
ljmp
pop
adc
jns
imul
daa
dec
mov
sbb
lds
fimull
stos
clc
jecxz
pop
cmp
rcll
lret
mov
mov
cli
addr16
in
lods
jnp
xor
cmp
imul
xor
mov
adc
mov
jl,pn
adc
mov
lock
lds
lahf
arpl
sub
int
leave
fsubrl
rcrb
mov
mov
test
fisubl
xor
scas
xchg
adc
pop
out
add
test
ja
gs
push
add
out
rol
fwait
cli
les
popa
inc
subb
xchg
pusha
add
fisttps
adc
dec
arpl
adc
es
push
mov
push
into
mov
leave
sarb
lock
mov
push
push
mov
jecxz
scas
push
inc
inc
or
fmuls
sti
pop
lods
in
pop
sub
cmp
addr16
lods
sbb
aas
adc
inc
popf
sbb
mov
jo
mov
stc
aam
out
lds
xor
xor
sbb
jae
sub
mov
lds
dec
or
xor
inc
cli
mov
mov
inc
lret
push
xchg
addr16
enter
mov
xchg
int3
mov
in
fwait
dec
hlt
leave
icebp
push
xchg
lock
pop
sub
jmp
shlb
ds
xchg
push
lock
sub
adc
xor
add
out
mov
lcall
adc
or
cmp
int
sub
mov
out
pop
pushf
popf
test
jle
mov
out
pop
dec
sbb
mov
cmpb
test
clc
pop
inc
sbb
pop
sbb
call
repz
mov
add
stos
or
shrl
dec
je
pop
or
inc
cmpsl
leave
sbb
or
neg
lock
cmc
and
mov
or
iret
jns
push
and
jo
or
fidivrs
lcall
dec
int
add
bound
or
jne
fwait
or
xchg
sbb
in
jmp
ja
cmpl
mov
loop
cmp
arpl
mov
mov
mov
jns
nop
sti
inc
aas
ss
out
enter
mov
jecxz
pushw
dec
fcoml
mov
gs
cmp
mov
or
ret
js
xor
jl
or
leave
roll
jo
xor
loope
out
sub
movsb
mov
enter
xchg
sub
cmp
jp
dec
dec
cs
jle
jno
inc
push
push
dec
pop
cmp
leave
fs
jge
sub
pushf
cltd
or
lret
sbb
int
xor
mov
mov
test
lock
xor
test
inc
into
enter
incl
jno
inc
jecxz
mov
cmc
sbb
nop
jo
and
xorb
fcoms
xorb
ss
out
pop
xor
xchg
ss
fnstcw
sub
lock
mov
loop
aaa
add
into
in
dec
sub
push
pop
jmp
sbb
pop
loop
push
stos
lcall
cmp
ja
inc
mov
mov
fcoml
lret
inc
cmp
cld
data16
aaa
add
sbb
cld
inc
fdivl
push
aaa
xchg
daa
mov
xlat
cmp
push
js
inc
cmpb
jmp
xlat
divb
cmpsl
pop
pop
inc
jmp
pop
or
jmp
or
pop
add
loope
and
cli
mov
adcl
loopne
jmp
jg
adc
loope
ret
enter
and
jecxz
mov
cli
xchg
push
repnz
imul
pushf
sub
mov
mov
sub
int3
jb
shrl
movb
leave
lret
inc
jae
mov
das
fdivp
dec
xor
xorb
or
sahf
inc
push
out
lock
sub
inc
adc
mov
fcomip
loop
mov
ja
out
adc
sbb
pop
push
fldl
int
and
imul
inc
fmul
dec
sbb
repz
add
push
mov
cld
and
aad
popf
jle
sub
fdivp
pop
and
push
aam
push
popf
mov
test
sbb
sub
stos
push
pop
inc
jns
cmp
inc
ja
addl
sbb
lret
push
out
popf
pop
cltd
rorb
movsb
mov
jbe
or
pop
or
mov
xchg
dec
mov
dec
inc
add
loop
loopne
rcll
loope
push
ds
fisubrs
lods
leave
popa
jmp
inc
mov
test
mov
or
rcll
sbb
mov
jp
pusha
stos
mov
hlt
dec
cmpsl
sahf
cmpsl
and
mov
cmp
lods
rolb
daa
xlat
jmp
dec
xchg
jecxz
fidivrs
jno
xchg
scas
out
cmp
pop
add
sahf
pop
sarl
jb
loope
ss
popf
lock
iret
xchg
scas
push
or
mov
sar
sbb
fstl
adc
hlt
fiaddl
lock
add
cmp
test
pmaddwd
pop
cmpsl
mov
or
xchg
cmpsb
pop
add
cmp
stc
and
fiadds
orb
scas
sbb
cmp
aas
test
xlat
movl
dec
in
mov
or
out
cld
xchg
jb
and
xchg
jns
test
lock
sarl
lcall
cld
fwait
lods
test
and
sub
mov
idivb
aas
mov
xlat
test
sub
imul
leave
incb
inc
enter
xchg
bound
inc
inc
adc
adc
mov
lea
fists
pusha
mov
sbb
andl
or
loope
mov
pop
shll
sahf
add
sarl
push
in
loope
inc
or
icebp
add
out
shll
cmp
fcoml
dec
pop
pop
xor
pop
inc
test
jae
inc
or
xchg
xor
mov
roll
dec
pop
insb
mov
inc
adc
ljmp
stos
call
into
and
out
shlb
int3
jo
sub
inc
fisubl
sbb
shlb
aad
lahf
icebp
xchg
test
lahf
jbe
sbb
cmp
mov
xchg
gs
fs
outsb
mov
mov
cli
mov
add
mov
push
stos
into
jo
cmc
jge
mov
popf
aam
popa
in
and
push
dec
xchg
mov
call
push
movsl
mov
mov
add
aaa
test
mov
lods
push
sbb
loopne,pn
sub
cmp
fucomp
jb
mov
xchg
or
fisttpll
mov
dec
mov
repnz
leave
push
mov
mov
dec
mov
adc
fwait
es
paddw
lret
in
jne
jl
data16
pop
inc
push
addr16
push
inc
push
pop
pop
sbb
cmp
call
call
lds
pushf
int
jno
pop
test
pop
fiaddl
fsubs
not
sbb
pop
pop
and
int3
stos
push
jbe
jb
bnd
push
cmc
loop
repnz
push
into
data16
data16
pop
and
mov
movsl
std
in
popa
push
cli
xchg
std
aad
fcompp
into
mov
adc
dec
arpl
jle
xchg
lods
xor
xchg
jmp
je
jb
mov
and
divb
daa
adc
daa
stos
cmp
and
pop
mov
movsb
dec
and
imul
sub
inc
sbb
mov
sti
aas
in
mov
setge
xor
mov
les
jne
dec
add
andb
add
fcmovbe
cmp
addb
shlb
js
xchg
mov
cmpsb
xor
and
rcr
xor
push
jae
ja
loopne
sbb
nop
fwait
icebp
xchg
xor
hlt
push
xchg
outsb
arpl
insl
lret
int3
andl
outsb
shll
cmpsb
or
or
pop
rorl
push
dec
das
ret
sub
adc
jmp
sbb
mov
sti
lahf
aaa
sub
jmp
gs
andl
fnstcw
dec
xchg
imul
cmp
add
pushf
mov
nop
int3
pop
lods
int
inc
pusha
inc
ja
xchg
jle
fldcw
sbb
mov
pop
push
pushf
and
lea
cmp
imull
xor
push
loopne
adc
lods
in
arpl
adc
sbb
and
push
lods
pushf
test
lcall
dec
cmp
stos
sub
inc
jne
inc
insl
out
adc
pop
adcl
aas
lcall
test
sub
cli
mov
ret
mov
movsl
ja
aas
int
mov
negl
lods
sbb
cmp
in
and
and
insl
scas
and
mov
xor
sarl
dec
cmp
andb
xchg
ret
stos
dec
xor
mov
add
stos
outsl
xchg
addb
push
ja
or
sbb
sahf
sbb
movsl
adc
mov
jo
shlb
pop
in
dec
rcrb
nop
call
rcr
nop
js
lret
pop
cld
dec
pop
xchg
scas
imul
or
nop
pop
shl
movsb
jo
sbb
mov
mov
mov
ret
pop
lods
and
inc
mov
push
or
outsb
ficompl
sbb
or
fiadds
fs
push
dec
mov
or
push
push
add
scas
pop
idivb
mov
add
adc
das
icebp
add
push
dec
jo
in
lods
cmp
ds
sbb
inc
lds
gs
push
lret
push
aas
pop
loope
dec
scas
pop
or
lock
pop
dec
in
faddl
in
jecxz
jo
es
lods
imul
fbstp
popf
xchg
in
test
mov
pushf
xchg
xorl
subb
xchg
jnp
out
cmp
fisubrl
mov
sbb
push
pop
int
mulb
mov
lret
repz
mov
scas
fisttpl
cmp
lods
lea
orl
roll
mov
xor
push
adc
hlt
jle
mov
ss
vpcomd
lock
mov
repz
mov
mov
aam
push
add
mov
pop
test
pop
cmp
ljmp
in
fidivrs
mov
insb
out
in
cmp
pusha
mov
mov
mov
ret
dec
mov
roll
in
imul
dec
push
add
dec
adc
pop
pop
sbb
dec
shlb
inc
cmp
push
adc
inc
or
inc
sub
add
mov
and
mov
mov
push
sbb
les
mov
mov
loop
arpl
fs
sbb
ret
fidivs
clc
jp,pn
shll
ljmp
pop
fcmovb
xchg
nop
push
push
sahf
xchg
jmp
fcompp
mov
sti
insb
std
fimull
fdivrs
mov
pop
in
push
xor
pop
jnp
and
sub
movsbl
ds
out
mov
repnz
sub
int
sub
jge
divl
lret
and
ds
loopne
stc
push
test
repnz
mov
push
push
mov
xchg
aam
cmc
insl
add
jp
push
push
xor
in
popf
mov
loopne
negb
cmp
dec
jge
inc
test
mov
mov
fildll
scas
pop
sar
cmp
sbb
icebp
jnp
or
add
test
and
loop
es
add
fwait
sbb
mov
fs
std
mov
push
jo
loopne
lcall
ss
insb
test
add
lahf
lahf
pop
mov
hlt
les
jg
sbb
jae
push
insb
add
out
je
adcl
lds
jecxz
xchg
xchg
rcrl
pushf
iret
leave
lds
pop
pop
pusha
je
aam
inc
enter
xor
les
mov
sti
push
movsl
lock
sub
xchg
pushf
xadd
inc
ljmp
pop
add
sub
mov
cmc
xor
jne
xchg
test
dec
sbb
mov
and
mov
sti
jae
mov
pusha
cli
movsl
cmc
fldt
mov
int
push
xchg
test
outsl
inc
mov
mov
xor
adcb
cltd
popl
xor
movsb
mov
push
je
add
pop
dec
or
cmp
lret
mov
push
sbb
cmp
push
rorb
mov
shlb
les
fmul
mov
out
sbb
add
stc
into
or
cs
push
add
mov
clc
jmp
xchg
je
pop
and
data16
ds
notl
dec
fwait
sahf
mov
nop
je
cmp
aam
stc
addl
aaa
mov
ljmp
loopne
xor
mov
shrb
fadd
insb
cmpsl
xor
cmp
ret
jbe
cli
xor
dec
ficoms
jb
js
imul
xchg
cmp
adc
test
jbe
jmp
call
ja
into
test
fimuls
lret
jp
inc
repnz
adc
aas
ret
sub
fcom
lods
or
or
out
mov
xchg
push
cli
data16
lods
sub
push
pushf
jl
les
dec
ja
ficoml
cld
and
fcoml
mov
xlat
or
jo
mov
cmp
in
dec
or
push
in
ret
sbb
out
out
imul
mov
sbb
sarb
mov
cmp
or
sub
mov
clc
sbb
jno
andb
test
sub
push
jmp
outsb
xchg
add
fwait
es
into
fs
or
sub
mov
sti
xor
or
scas
xor
xchg
adc
cmp
ja
cmp
insl
add
call
cmp
daa
xchg
adc
jecxz
or
add
andb
push
add
popf
jecxz
and
imulb
data16
insl
lahf
es
jle
fisubrl
jno
add
jo
mov
xlat
sbb
xor
xlat
xchg
test
sbb
shrl
mov
insb
mov
pusha
or
repz
or
push
mov
in
mov
mov
jg
cs
or
mov
addr16
dec
outsl
rcl
idivl
mov
inc
sub
mulb
jne
adc
test
jno
jne
orb
call
in
push
cvtpi2ps
nop
xchg
mov
xchg
js
lcall
mov
ja
js
jae
inc
jle
hlt
xor
dec
or
xchg
nop
hlt
cwtl
mov
imul
stos
xorl
and
sarb
and
das
add
int
decb
ret
inc
mov
add
test
aas
negl
xchg
jecxz
sbbb
pop
cwtl
mov
cld
fdivp
test
xor
stc
test
and
cltd
repnz
outsb
dec
dec
inc
shl
mov
in
aam
shr
mov
jns,pt
xchg
icebp
or
inc
imul
adc
mov
mov
xchg
xlat
icebp
fcoms
xchg
dec
jb
addb
pop
sub
dec
dec
out
inc
lds
push
mov
pop
mov
and
adc
pop
aad
or
xchg
push
jns
jp
out
xlat
inc
test
and
sahf
lret
mov
imull
xor
mov
popf
mov
int
les
ljmp
les
jbe
mov
roll
sub
and
add
mov
arpl
loope
inc
addb
mov
outsb
dec
sarb
ret
dec
daa
jnp
adc
aam
mov
fistps
xor
std
sub
sbb
iret
sti
repz
lds
add
lret
dec
scas
jecxz
xchg
js
outsb
or
mov
jo
call
jnp
jp
inc
test
leave
sbb
mov
sbb
jnp
pop
add
lret
push
iret
loope
std
dec
cltd
push
cli
loop
jns
cld
lret
sbb
call
test
jg
test
xchg
sahf
cmpsl
xor
in
lock
cmp
mov
dec
fs
xor
repnz
out
xor
pop
scas
cwtl
stos
shrl
or
push
mov
xchg
sarl
push
and
or
repnz
ds
into
int3
rcrl
or
sub
sbb
mov
aad
pop
jne
insl
xchg
adc
add
xchg
iret
loop
dec
imul
pop
inc
jg
pop
and
xchg
or
cli
arpl
mov
popl
add
iret
dec
enter
pop
add
add
adcl
inc
jge
movsl
cwtl
jmp
cli
in
sub
pop
adc
cmp
mov
sub
pop
std
aad
fdivl
xchg
movsl
and
adc
lahf
out
ret
push
cmp
pop
and
inc
cmp
add
shr
xor
aas
lahf
stos
pop
out
in
cmp
mov
sahf
lret
jnp
ss
adc
ljmp
dec
wrmsr
dec
and
inc
mov
loope
mov
jne
cmp
pop
mov
dec
pop
dec
mov
jae
push
push
movb
gs
xor
dec
mov
push
mov
lds
gs
dec
aad
popf
mov
lcall
in
outsb
cmpsb
cld
cltd
mov
out
xchg
sub
jnp
subb
dec
inc
popa
xlat
je
or
pop
mov
ss
mov
cmp
lods
push
or
pop
push
mov
cld
jmp
in
add
add
mov
xchg
push
mov
mov
call
js
and
outsl
xorb
lret
add
out
cli
mov
sbb
inc
mov
fsub
aam
push
lods
add
lea
mov
cmp
test
popf
push
mov
jecxz
or
mov
bound
xchg
mov
or
push
sar
rolb
scas
or
insl
adc
jae
fsubrs
daa
add
mov
mov
lds
leave
je
adc
mov
fwait
push
push
stc
ss
sub
or
pop
mov
inc
cmc
mov
push
xchg
nop
jns
xor
movsl
outsb
dec
push
ss
orl
test
std
cmpsl
sbb
xor
pop
cmp
ss
mov
jmp
sub
out
lock
adc
jno
push
xchg
push
cmp
int
repz
push
jmp
loop
xor
inc
movsb
push
imul
and
jno
xor
pop
lea
out
or
pusha
into
xlat
mov
xor
stos
ss
pop
xor
jb
add
fildll
mov
pop
xchg
mov
insb
js
add
jae
shll
je
ret
and
inc
gs
add
jb
mov
sti
cmp
dec
andb
lods
push
jge
out
mov
fcoms
test
testb
mov
sbb
popa
test
or
arpl
ret
jge
fcompl
inc
sahf
xor
cmc
mov
test
jo
out
xlat
loope
lret
loopne
inc
scas
add
xchg
outsb
inc
and
lds
xchg
jge
jmp
incl
dec
aas
es
inc
or
pop
mov
add
jae
cmp
in
mov
xchg
or
mov
call
out
daa
cmp
mov
pop
push
xor
and
jo
and
or
add
or
out
fmull
outsl
aas
fadds
xorb
mov
pop
mov
mov
outsl
sub
pop
out
or
loope
dec
gs
inc
mov
mov
mov
cld
not
xchg
mov
cli
lcall
adc
arpl
mov
fxch
daa
std
test
pop
ficomps
in
in
aad
jae
loop
pop
js
hlt
imul
mov
sub
inc
sbb
jb
pusha
mov
pop
cmp
mov
mov
xchg
mov
mov
sub
push
iret
dec
out
lods
cs
test
add
aas
ret
cltd
subl
movl
leave
mov
dec
sahf
xchg
xchg
test
mov
fwait
jne
rep
insl
jmp
cmp
mov
push
out
and
pop
push
push
inc
cs
mulb
inc
pop
lock
inc
pop
das
jno
cmc
ja
dec
cmp
fsubrs
jl
pushl
cld
xchg
jb
icebp
enter
sbb
xor
pop
adc
pop
popf
repz
popa
movsb
rclb
insb
xchg
push
inc
aam
fs
nop
xchg
leave
fadds
int
cld
or
dec
adc
pop
in
fwait
mov
loopne
add
incl
aas
cltd
cli
and
incb
dec
cmp
mov
mov
mov
lea
cmp
xchg
cmp
outsl
pop
cmp
xor
pop
mov
jb
push
or
add
jecxz
push
imul
jge
mov
mov
inc
loope
movsl
xor
mov
xchg
iret
pop
mov
push
pop
jl
mov
jnp
mov
cmpxchg
jg
mov
call
pop
repnz
xchg
mov
xchg
pop
pop
xchg
xlat
xor
xchg
icebp
sbb
adcb
jge
dec
add
mov
cmpsl
cmpsb
out
and
test
pop
gs
xorb
cltd
repz
das
xor
rclb
pop
sub
cmp
sub
pop
push
cwtl
rorb
or
xchg
mov
dec
mov
mov
jb
mov
insl
push
pushf
repz
addb
and
push
lcall
mov
mov
imulb
xor
sub
lods
sub
pop
jne
pop
popa
std
sub
pop
cmpsl
jno
mov
lea
movsl
adc
and
add
iret
testb
outsb
jbe
andb
add
scas
lret
jo
cltd
fimuls
js
xor
js
stos
in
adc
sbb
ret
xchg
popa
jbe
insl
jge
stos
dec
pop
ret
loope
xchg
jns
dec
adc
enter
jb
xchg
std
test
mov
mov
jo
pop
dec
stos
les
sbb
cmpl
or
dec
clc
or
dec
fsubs
inc
or
hlt
pop
je
mov
push
imul
add
push
mov
popa
scas
jbe
mov
aaa
xor
gs
rcl
sub
mov
enter
cmp
mov
xchg
jns
out
icebp
loop
pop
lods
repnz
and
pop
and
inc
sbb
adc
cld
push
lcall
negl
or
lret
mov
mov
out
push
sar
cli
ljmp
add
aaa
add
rorb
or
mov
rcrl
mov
frstor
or
shrb
das
inc
movsb
rolb
ljmp
or
inc
fldenv
test
jo
sbb
mov
add
pusha
lea
mov
sub
mov
or
int3
leave
cli
dec
xor
lret
and
loop
stos
mov
or
idivb
or
xchg
pop
divb
dec
fwait
jecxz
std
rcrb
cmc
gs
mov
das
pop
mov
xchg
inc
mov
fstl
daa
jno
jne
repz
and
movsl
jl
pop
and
movsb
stos
sub
shlb
les
sbb
inc
cmp
mov
dec
fimuls
sbb
or
inc
xlat
pop
and
add
sbb
cmp
ds
insl
sbbb
cmp
sbbl
mov
push
mov
xor
cmp
push
adc
movsb
inc
fdivl
xchg
ret
fildl
cmp
into
out
push
test
in
sub
jge
into
pop
mov
popf
inc
lods
add
cmp
xchg
jecxz
bound
xchg
into
out
and
and
mov
mov
hlt
shrb
xchg
inc
loopne
ja
push
jp
adc
push
cmp
push
rcll
out
leave
sub
ljmp
scas
xchg
cltd
sarl
pop
leave
fadd
aam
gs
sbb
loopne
lret
out
sbb
in
lret
jno
mov
xchg
add
cs
leave
inc
jb
into
jnp
mov
cmp
int3
adc
ljmp
lret
frstor
xchg
insb
inc
jno
rcrl
or
mov
cs
repnz
adc
push
lcall
outsl
dec
pop
out
scas
push
movl
stos
mov
mov
xor
aaa
and
insb
add
leave
ret
cs
std
loop
xchg
popf
adc
test
into
dec
nop
and
sub
sub
mov
inc
pop
fistps
mov
imul
aaa
mov
adc
addr16
adcl
lret
mov
dec
cmp
mov
scas
fcomps
add
adcb
popf
lods
jg
inc
test
jno
shlb
divl
adc
int3
fmuls
sub
lret
ret
sbb
test
adc
cmp
pop
or
test
jmp
mov
subl
leave
aas
mov
pop
repnz
lret
pushl
out
sbb
test
cmp
mov
iret
dec
inc
test
adc
cld
xchg
fwait
add
push
repnz
in
jo
enter
ficomps
mov
dec
arpl
mov
adc
sbb
xchg
es
jge
gs
adc
cmc
call
pop
fistpll
ja
dec
inc
andl
mov
mov
pop
es
dec
fcompl
mov
jge
movsl
mov
dec
pop
cli
dec
mov
ss
inc
sbb
lock
xor
adc
jle
sahf
dec
sti
imul
mov
mov
push
sbb
push
cmc
and
inc
pop
ljmp
jne
fists
test
in
movsl
mov
stos
jle
cwtl
aad
das
xchg
and
push
jle
xchg
leave
xor
xor
xor
scas
shrb
fdivrl
mov
into
xchg
or
psubb
push
mov
imul
and
sbb
out
roll
sub
out
and
mov
leave
repz
mov
mov
out
leave
cmp
xor
imul
jbe
and
fwait
arpl
mov
negl
xchg
insl
call
mov
and
and
jge
repz
pop
pop
jmp
cmp
mov
pop
cmp
mov
rcl
ja
addl
dec
mov
add
pop
mov
repnz
repz
dec
and
fidivrs
pop
outsl
faddl
aad
aad
fdivr
dec
ficompl
cwtl
gs
lea
mov
adc
dec
cmp
pop
cmpl
mov
ss
push
add
lret
xlat
cmp
rolb
and
cmp
fidivs
inc
sub
insl
push
dec
push
in
roll
jge
xor
rclb
fiadds
rcll
and
imul
fsubs
in
pusha
mov
std
adc
add
es
jne
roll
xchg
jb
in
mov
stc
cltd
insb
xchg
lods
xchg
clc
popw
loope
mov
aas
cmp
rcll
sbb
cmp
daa
jecxz
and
sub
mov
mov
movsb
xor
mov
lcall
xor
push
mov
lret
push
xchg
lcall
mov
sub
orl
push
out
fisubl
stos
cltd
mov
repz
jno
in
fwait
jb
mov
cmp
add
outsb
sbb
or
lock
xchg
mov
sub
lret
jbe
or
jne
dec
cmp
xchg
daa
cmp
adc
cmpsb
ljmp
cli
aad
lods
jns
and
or
test
repnz
sub
pop
cmp
cmpsl
cmc
pop
push
xchg
outsb
sbb
mov
pop
push
push
inc
jne
mov
paddsb
push
add
jecxz
stc
xor
jmp
jne
or
dec
inc
loop
xchg
je
outsl
xchg
jns
bound
pusha
es
dec
jecxz
popa
sbb
test
mull
jno
repz
js
push
mov
push
xorb
push
mov
pop
push
insb
jo
sub
ja
rorb
push
imul
inc
inc
inc
mov
loopne
fs
dec
fsubrl
push
hlt
test
dec
sub
mov
push
lahf
xor
or
and
adc
out
aad
sub
cmpl
pop
es
fnstsw
stc
or
jmp
jnp
shl
in
jecxz
repz
cmp
xor
mov
daa
inc
mov
pushf
jne
add
jne
int
pop
mov
rolb
lock
xchg
cs
mov
mov
pop
cmp
leave
sub
cmp
pop
inc
mov
mov
add
mov
cmp
add
popa
das
jae
or
dec
dec
xlat
pop
ficompl
push
add
andl
sub
sahf
lret
push
jmp
andb
push
sub
mov
fcmovu
repnz
mov
inc
es
je
orl
insl
sarb
cmc
ret
je
and
sbb
in
xor
out
mov
test
sub
jp
pop
mov
cs
and
or
scas
mov
add
cwtl
icebp
jo
adc
aas
inc
mov
xchg
mov
stc
scas
sahf
and
mov
fbld
test
mov
fwait
out
xchg
pop
jg
insl
aaa
pop
hlt
xchg
pop
insl
das
pop
cli
xchg
aaa
jle
les
adc
dec
jg
jno
dec
out
aas
scas
lds
fwait
pusha
mov
decl
mov
ja
cld
jno
je
add
subl
outsb
jne
fwait
xor
mov
add
out
mov
push
and
fists
lret
xor
leave
sbb
add
xor
push
mov
push
dec
ret
inc
repz
or
xor
push
pop
jle
nop
push
mov
adc
enter
mov
cmp
fs
lods
test
mov
jb
jne
add
or
in
mov
test
adc
ljmp
cs
pop
jp
mov
jecxz,pn
imul
lret
dec
out
loop
mov
loopne
mov
adc
mov
xlat
int3
xchg
xchg
inc
movsb
xchg
cwtl
push
negl
mov
cld
mov
xor
iret
mov
in
adc
cli
pop
mov
subb
in
lea
ljmp
lods
cmc
or
fst
xchg
inc
xchg
mov
mov
call
fwait
rcrl
stc
jnp
pop
mov
cs
jmp
cmpsl
fcompl
adc
pop
jne
lcall
aam
pop
mov
inc
sbb
mov
inc
ljmp
sub
out
test
mov
repnz
mov
push
popa
call
inc
or
lds
adc
rcrl
int3
or
insl
lock
mov
js
lret
in
addr16
lahf
in
dec
sub
ror
daa
mov
ja
push
mov
fcomip
fnstcw
cmp
in
data16
jl
loope
int3
or
add
add
xor
mov
sbb
pop
in
add
bound
sbb
hlt
stos
mov
jnp
or
shl
sti
adc
adc
xor
add
sbb
test
ret
je
jg
stc
and
cs
lock
mov
sub
xchg
xlat
cltd
push
and
lahf
sbb
clc
dec
test
shrl
sarb
lods
lods
es
pop
ds
repz
mov
sar
xor
mov
inc
mov
call
push
cwtl
mul
and
xsha1
cmpsb
or
push
mov
loope
mov
and
sub
mov
adc
test
rcrl
xchg
fwait
mov
mov
push
mov
popf
shrb
add
lret
pop
repz
divb
mov
sub
adc
mov
dec
adc
and
add
sub
mov
in
lea
pop
outsb
outsl
xor
xchg
lock
aas
pop
fwait
mov
xchg
mov
inc
pop
cli
fsubrs
adc
and
je
adc
dec
sarl
mov
and
cmp
cli
in
fwait
in
pop
xor
sahf
xor
push
sub
jnp
jecxz
jbe
cwtl
in
jb
fwait
mov
das
rcr
lods
fisttps
push
aaa
xor
sub
es
bound
or
push
pop
les
adc
mov
xchg
and
cmp
popa
inc
loop
ficomps
push
fdivrs
sub
aam
rcl
ljmp
xchg
out
jle
pushf
add
mov
push
and
adc
out
test
adc
negl
out
gs
les
adc
outsl
orl
mov
scas
inc
sarl
stc
inc
sbb
ds
cmc
xor
jae
aaa
and
mov
arpl
mov
sbb
test
push
jmp
xchg
jecxz
mov
loopne
cmp
insb
or
xor
and
out
jns
xchg
outsl
cmp
jecxz
adc
dec
jb
adc
fimuls
jle
cmpsb
or
fs
loop
mov
adc
add
pop
adc
popf
push
mov
ds
sub
cmp
je
stc
fwait
mov
dec
jbe
jo
xor
mov
or
ds
fldt
ds
dec
push
push
fsubl
xchg
lea
cld
sbb
push
adc
mov
and
adc
push
push
adc
xor
jno
scas
cltd
rolb
in
mov
loope
cltd
insb
xor
jmp
push
push
xchg
pop
loope
lock
pop
cmpsl
in
pop
xchg
aad
arpl
push
sub
or
es
ja
cmp
add
sub
cli
test
and
mov
pop
xor
in
jle
push
fiadds
mov
add
cltd
jge
pop
add
dec
mov
pusha
sbb
sbb
pop
sub
mov
insl
inc
test
add
int
mov
nop
sub
add
push
in
mov
xor
out
stc
sbb
inc
mov
mov
and
jmp
clc
mov
mov
imul
call
push
in
mov
add
mov
test
mov
test
divb
out
iret
inc
je
or
push
xchg
int3
in
inc
adc
in
loopne
clc
enter
cmp
mov
jnp
iret
mov
inc
mov
mov
pop
into
bound
push
lods
call
sub
xchg
and
mov
xor
push
cld
daa
shl
cmpb
push
lds
testb
mov
pop
stc
fcomip
mov
push
sbb
aam
out
mov
xor
lahf
xchg
adc
int3
or
cltd
or
into
loop
dec
cltd
rclb
xor
leave
push
adc
jo
cmpsb
mov
jl
lods
xchg
push
mov
and
xchg
notl
mov
or
add
mov
movsb
divb
adc
inc
test
dec
xor
sub
sub
lock
sub
rcrb
mov
mov
pusha
adc
push
in
das
push
insb
movb
sub
xor
add
mov
inc
dec
movsl
outsl
pop
sti
clc
cmp
js
into
pop
and
add
dec
add
adc
mov
push
aaa
jbe
hlt
jne
lahf
in
sbb
pusha
dec
in
and
test
or
jbe
or
mov
and
loop
pop
push
pop
push
mov
insl
push
movsl
mov
xor
rolb
or
gs
push
arpl
or
jge
cmp
scas
fisubl
ss
data16
push
and
cli
pop
iret
xchg
push
and
jbe
jae
std
sub
adc
inc
push
clc
into
pusha
adc
lods
push
mov
xchg
sub
lea
ljmp
and
sbb
mov
lahf
icebp
fnstcw
arpl
mov
cmp
bound
adc
xor
aam
mov
ljmp
push
lcall
popa
xor
or
adc
ja
lahf
mov
orb
jg
mov
test
cltd
mov
fs
cmc
ja
xchg
push
xor
ret
xchg
loop
icebp
sub
sahf
negb
pop
add
xorb
mov
es
fcmovbe
dec
out
adcb
in
xchg
push
sahf
arpl
sbb
addl
jbe
mov
insl
nop
leave
sub
std
dec
mov
fisubrs
mov
push
or
addl
aad
cmp
or
movsb
pop
and
xchg
test
sub
and
mov
mov
xlat
lock
int
sub
mov
adc
pop
jl
xchg
lret
mov
xor
fsub
fiadds
or
aam
mov
out
or
mov
push
mov
repnz
fdivrs
sub
xorl
jl
add
out
or
hlt
scas
add
nop
cmc
sub
shrb
fcompl
sahf
sbb
sub
scas
dec
bound
testl
jmp
xchg
sbb
xchg
xchg
mov
sub
adc
inc
sub
mov
push
outsl
test
jno
xchg
mov
mov
jnp
cmp
jmp
jb
incb
sbb
mov
mov
cmp
int
xchg
enter
pop
rcrl
push
mov
imul
stc
shl
test
jae
ja
stos
adc
adc
mov
fsts
imul
dec
mov
mov
in
mov
jmp
add
lds
sbb
xchg
ljmp
repnz
mov
jno
call
push
add
sahf
mov
enter
rcrb
popa
cmp
or
xchg
push
lahf
adc
adc
pop
inc
fistpll
sbb
aaa
popf
jbe
sbbl
xlat
pop
cmp
mov
and
sub
mov
fsts
mov
push
fimuls
sahf
cmp
xor
inc
mov
sbbb
outsl
out
jl
fidivs
mov
or
jne
stos
in
mov
ds
lret
lret
xchg
mov
lds
scas
pop
xor
push
mov
sbb
outsb
cmpl
pop
rolb
pop
or
movsb
out
leave
sbb
in
in
and
xor
jle
dec
push
and
jge
stos
lods
ret
push
inc
clc
jae
mov
shlb
sub
jno
jb
nop
xchg
out
ljmp
lahf
sub
inc
adc
jg
insl
jno
sbb
xor
insb
dec
outsb
mov
add
jg
sarb
add
lock
lea
xlat
cli
mov
mov
inc
or
dec
cmpsb
push
jmp
push
push
push
dec
mov
xchg
sbb
fscale
js
pusha
enter
sub
jle,pt
add
xor
add
jbe
cwtl
push
addr16
xchg
mov
lea
and
dec
cmp
push
xor
std
inc
ds
out
mov
and
aad
jl
cmpsl
sbb
cltd
lods
out
pop
int
ljmp
cmp
add
mov
pushf
mov
pushf
push
mov
rclb
pop
fcoml
popa
ffreep
and
cmp
hlt
in
inc
cmp
jg
add
cltd
ja
or
mov
in
mov
push
dec
add
stos
dec
ret
jmp
push
dec
sahf
mov
lahf
xor
ficoml
jecxz
in
lods
out
cmp
sbb
jl
sub
cmp
out
and
xlat
inc
lret
orb
or
jl
das
test
std
jmp
aas
cmp
testb
mov
jnp
fmulp
sarl
shlb
xchg
xchg
rorb
fstl
subl
xchg
push
fsubr
into
popf
aas
out
jmp
and
insl
in
add
mov
orl
mov
and
in
mov
push
xchg
dec
jo
cmp
sbb
test
mov
lods
inc
sarb
imul
out
mov
in
cmp
dec
sub
mov
les
pop
sbb
enter
call
xor
mov
adc
mov
rclb
mov
xchg
ljmp
pop
scas
mov
dec
fdivrs
jbe
dec
jne
dec
mov
inc
into
mov
inc
jg
adcb
pop
jg
jge
and
pop
ja
add
sub
jbe
aaa
xor
mov
push
shrl
sbb
mov
dec
ljmp
sbb
inc
mov
fsub
aas
aad
leave
insb
sbb
outsb
mov
incb
and
cld
les
mov
xlat
bound
fcompl
cmp
xchg
and
rcl
lods
inc
aaa
leave
xchg
pop
addb
cltd
push
push
call
and
inc
inc
inc
xchg
push
cmp
add
mov
jne,pn
je
frstor
sbb
and
inc
popa
sub
js
sub
aaa
int
ret
sub
mov
cmpl
jp
inc
inc
jns
push
in
inc
mov
imul
and
out
andl
sub
icebp
lea
cld
popf
sub
push
fldcw
sbb
xchg
out
jg
roll
sub
push
mov
dec
dec
mov
add
sbb
mov
jb
out
rcrl
or
fwait
jmp
cmpsl
xor
dec
or
movsb
mov
cli
sbb
jle
int3
xor
pop
es
mov
cmpsl
mov
jp
or
daa
sahf
lret
mov
lahf
xchg
jle
pop
push
pop
mov
sub
mov
inc
sub
clc
and
mov
xor
mov
mov
stc
out
mov
ret
int
arpl
pop
popa
pop
mov
loop
cmp
iret
sub
ja
mov
test
addl
outsl
pop
push
ljmp
push
mov
ror
repz
inc
lret
cmpb
cs
inc
lods
adc
leave
jns
jg
mov
out
outsb
hlt
fisttpll
data16
frstor
cmp
movsb
sub
xor
repnz
lods
dec
push
ret
clc
test
lret
sub
pop
push
dec
lahf
sbb
jp
cmp
sub
in
stos
add
insl
test
in
cmp
adc
xchg
mov
fdivl
out
cmp
sbb
cmp
sbb
cmp
inc
dec
push
mov
outsb
outsl
push
mov
incl
stc
or
mov
dec
fwait
outsl
lcall
xor
sub
mov
pop
jge
in
in
stos
push
xchg
xchg
clc
shlb
bound
add
int
test
in
iret
js
iret
adc
pop
insb
mov
bound
ret
int
mov
test
movsl
xchg
or
add
fcoms
in
js
add
mov
filds
clc
gs
mov
mov
adc
repnz
adc
xchg
pop
push
cmp
test
jo
push
cmp
mov
mov
cmpsl
mov
jb
and
out
fmuls
xchg
stos
incl
xor
mov
xchg
and
and
push
pusha
cmp
dec
ja
inc
jle
jl
xchg
lcall
outsl
gs
inc
jae
dec
add
stos
sub
and
lods
cltd
ror
enter
dec
aad
mov
rcrb
dec
jle
mov
inc
cli
mov
dec
nop
je
mov
insl
nop
out
popf
popa
mov
adc
pop
lea
fdivrl
mov
outsl
je
push
push
insl
push
and
stos
and
mov
mov
ret
lea
add
push
adc
mov
pop
les
adc
cmp
pop
test
inc
movsb
push
push
pop
idivb
cmpsl
fldenv
in
ljmp
stos
ret
mov
and
add
dec
inc
mov
inc
daa
andb
ficoms
repnz
notb
arpl
sub
fucomip
js
jae
int3
mov
sub
cli
jnp
lahf
or
into
lods
sbbl
ds
xchg
xor
out
sub
scas
cmpsb
jge
inc
mov
imul
jae
or
filds
adc
cmp
popf
push
or
adc
push
dec
popf
aas
pop
and
lahf
out
outsl
scas
ss
lahf
mov
xor
fnstsw
jge
jmp
mov
xchg
adc
sbb
or
test
xchg
sbb
test
movsl
stos
sbb
rcr
fdivrl
dec
dec
xor
fs
rcl
scas
rclb
dec
bound
loop
scas
icebp
xchg
cmpsb
dec
adc
fdivrp
rclb
dec
stos
pop
lret
or
jg
mov
and
and
mov
xchg
xor
imul
sahf
xchg
fwait
sbb
adc
push
dec
js
testl
xor
test
les
sub
mov
popa
dec
test
mov
cmp
pop
repnz
and
fsubrp
mov
xor
or
mov
stc
jg
add
lahf
push
or
mov
push
mov
loopne
in
sbb
pop
pop
push
push
andb
dec
push
rcrb
dec
cmp
cmp
sub
xor
xor
adc
test
xchg
mov
push
movb
and
cltd
scas
cmp
xchg
cmc
dec
jg
loopne
xor
lea
aaa
fincstp
not
push
jno
popf
mov
popf
insl
scas
push
adc
andb
into
and
ret
adc
in
fsub
adc
and
adc
in
das
xchg
mov
xlat
js
test
repz
es
dec
pop
ficoms
add
data16
in
inc
andl
jno
mov
scas
ja
adc
mov
jecxz
call
mov
pop
test
gs
in
push
rep
mov
xor
xor
fdivrs
cmp
stos
test
leave
and
xchg
mov
aam
lds
dec
or
nop
adc
inc
adc
mov
negb
sbb
insb
shr
jge
fs
es
xor
sets
popa
ret
gs
fisttpll
cmc
fs
ret
and
ffree
into
jp
out
mov
in
push
jle
movsl
and
cmp
push
cmc
jle
dec
mov
adcl
aaa
dec
repnz
sbb
lods
push
dec
sub
dec
jnp
loopne
in
movsb
les
xchg
push
adc
pop
jle
push
dec
mov
pusha
call
jl
add
imul
idivb
dec
and
jbe
sub
sahf
or
in
jo
push
jl
jo
cmp
mov
add
gs
fstps
aam
xchg
add
idivl
daa
test
scas
sbb
ja
lods
in
lcall
test
icebp
mov
repnz
in
stos
adc
les
jp
std
scas
in
mov
in
or
or
push
mov
sbb
jl
rcrb
mov
jle
dec
or
add
jp
push
cmp
loop
mov
mov
xchg
dec
in
mov
mulb
jle
xchg
dec
das
jge
push
loopne
mov
daa
sub
xchg
gs
sbb
dec
aam
pop
ret
out
xchg
ret
and
sub
lcall
ljmp
ds
fwait
cmpb
orl
es
adc
cmpl
in
repnz
mov
add
adc
jg
cmpsb
sub
pop
shl
lret
adc
call
jae
scas
push
and
push
rcr
push
dec
xor
iret
and
pop
xor
and
ret
sbb
mov
lret
push
cmp
cmp
je
mov
xchg
pop
cwtl
lods
jnp
cmpsl
push
cmp
or
jo
or
aas
mov
pushf
loope
clc
in
push
popa
push
inc
arpl
mov
hlt
addb
inc
add
mov
shlb
xor
add
in
xchg
out
xchg
add
mov
fbld
sub
into
das
inc
mov
dec
mov
aaa
inc
into
vpunpcklwd
pop
testb
loopne
jl
stc
mov
push
into
push
sbb
mov
call
inc
push
push
inc
fcomp
out
test
daa
adc
sbb
in
dec
jl
or
push
mov
dec
lret
jne
mov
lods
push
and
scas
push
out
cmpsl
mov
lods
icebp
ss
cmp
pop
lods
xchg
loope
stc
dec
pop
pop
cmc
mov
sub
jecxz
mov
fdivrl
add
cmpsb
fdivrl
add
lcall
mov
push
mov
mull
adc
push
xchg
cmp
mov
push
loop
push
adc
out
scas
int3
in
cmp
pop
cs
movl
fidivrl
sbb
lcall
out
repz
xchg
adc
imul
or
shlb
mov
out
movsl
inc
jnp
inc
add
pop
cmp
cltd
into
sbb
jbe
mov
es
or
aam
mov
pushf
rclb
xchg
cmp
lea
gs
cld
xchg
int3
mov
mov
pop
push
xchg
jnp
pop
fwait
sbb
mov
clc
xchg
ss
rolb
cmp
mov
mov
arpl
lret
adc
pushf
mov
imul
mov
addr16
loope,pt
xchg
inc
mov
mov
in
mov
jns
fucompp
inc
or
mov
into
nop
xor
and
dec
sub
add
push
inc
xchg
fwait
mov
push
push
leave
mov
push
jecxz
pop
jnp
scas
xor
in
dec
sbbl
cmc
scas
push
mov
test
xor
test
rorb
lds
xchg
adc
mov
mov
out
dec
std
fstps
bound
jg
jns
fs
jae
out
sbb
rcl
mov
pusha
mov
cld
pop
pop
and
jg
sub
fwait
in
lea
xor
enter
movsb
xor
stos
movsb
test
or
xor
lods
pop
mov
xor
jp
and
pop
sub
mov
inc
clc
pushf
negl
out
stos
call
or
fsubp
incb
fistpll
mov
inc
mov
lock
lods
mov
aad
ljmp
xor
push
dec
test
cwtl
or
orl
sbb
lret
int
and
jne
push
popf
je
cltd
dec
or
adc
in
rcrb
sub
cld
jmp
push
jb
aam
cmpsl
outsb
nop
pop
xchg
test
repz
les
lock
push
movsl
and
and
fwait
xorl
or
sbb
addr16
pop
mov
adc
int
xchg
adc
push
mov
mov
enter
pusha
or
lods
out
and
and
iret
std
aas
scas
xor
icebp
xor
mov
ja
mov
cwtl
incl
js
ljmp
clc
inc
sub
mov
sbb
jnp
cmp
jp
xor
cmp
ret
andl
cld
jnp
sbb
sbb
mov
lds
cmp
xchg
mov
jmp
cmpsl
dec
mov
lahf
das
leave
mov
ret
into
inc
imul
inc
push
mov
andb
ljmp
pop
pop
adc
incb
xor
cld
dec
int
lods
icebp
and
inc
lea
shlb
xor
out
imul
xlat
xchg
pusha
pusha
push
sarl
leave
and
mov
push
xchg
movl
jg
adc
in
push
sub
sbb
dec
mov
leave
outsl
xchg
loop
loope
xlat
daa
mov
into
dec
cmp
inc
adc
jnp
rcrl
sbb
pusha
and
enter
mov
js
mov
cli
fildll
fmull
out
mov
inc
rcr
subl
fwait
shr
adc
mov
dec
cli
inc
cmc
push
js
scas
push
sub
ret
mov
pop
les
jns
aaa
inc
insb
jno
push
ds
popl
jb
call
xchg
movsl
fisubrs
sarl
lods
loopne
aas
add
test
stos
add
mov
cmp
mov
mov
scas
adc
cmpsb
or
and
jbe
test
mov
pop
push
mov
sbb
call
or
dec
add
mov
sahf
jmp
jns
or
addr16
insb
cmp
or
mov
lahf
xchg
xorl
sub
mov
loope
daa
aas
gs
aad
imul
jl
sar
inc
out
cwtl
js
add
pop
sbb
pop
stos
mov
mov
dec
dec
cmp
dec
in
add
xchg
es
ja
pushf
or
in
leave
cmp
dec
sbb
sub
mov
push
mov
stos
or
xchg
mov
inc
add
mov
cltd
pop
aaa
imul
dec
fisubrs
pushf
pop
push
dec
repz
das
sti
lcall
test
and
xchg
mov
sub
add
mov
push
jo
jecxz
dec
lea
jle
push
dec
sbb
addr16
jb
cmp
mov
inc
cmp
mov
mov
mov
fs
add
mov
push
mov
pop
shrb
lret
xchg
jae
jl
out
loope
sahf
sub
cmp
cmp
pmulhw
mov
fsubrs
sub
and
outsb
push
jle
xorb
sub
jmp
aam
ficompl
std
xchg
pop
aam
sub
out
iret
xchg
mov
jmp
out
push
add
pop
cmpsl
push
in
sbb
lods
hlt
add
rol
push
iret
push
push
xor
pop
jl
ds
in
out
aaa
xor
mov
xor
popa
cld
imul
push
rorb
push
daa
xchg
loop
cld
push
jmp
mov
or
jbe
aaa
bound
jmp
stos
and
scas
push
popf
aas
cmc
shll
jno
jns
sbb
insl
pop
mov
pop
push
xchg
push
test
inc
xor
mov
inc
dec
pop
add
idivl
jmp
lcall
pushf
add
jbe
pop
or
ret
or
dec
inc
sbb
lea
cld
mov
or
mov
filds
bound
add
sbb
sub
stos
stos
jns
pop
scas
add
lret
and
pop
mov
mov
cmpb
add
sarb
pop
pop
int3
inc
mov
rcr
push
push
inc
pop
ja
out
sub
into
jmp
daa
jbe
or
jg
lret
clc
not
sub
or
push
rorl
push
bound
mov
mov
xor
and
popa
mov
xlat
cmp
aam
push
dec
dec
and
push
test
fisubl
mov
push
gs
xchg
test
stc
js
dec
sub
in
mov
sbb
cmp
jnp
lcall
pop
enter
or
ret
ficomps
out
dec
fnstenv
adc
pop
imul
fmull
jle
jnp
add
lret
sbb
dec
mov
dec
cmpsb
dec
fdivrs
out
icebp
lds
xchg
mov
shl
insb
xchg
or
inc
push
jnp
or
addr16
mov
pop
xchg
jl
shll
cmp
push
popa
xchg
or
add
in
cmp
dec
aam
adc
xchg
xchg
cmp
test
movsl
pop
pop
int
cmp
fwait
inc
sti
jecxz
jg
icebp
daa
aas
loop
inc
test
jne
iret
push
sub
stos
sbb
movsb
lret
call
lds
pusha
jg
cmp
lea
mov
mov
xchg
int
jecxz
jnp
push
and
lea
test
mov
lahf
jmp
addr16
sahf
add
pop
sub
dec
notl
stc
cmp
push
insb
aas
cmc
ljmp
sub
mov
sbb
mov
sahf
push
mov
lods
inc
das
aad
fistpll
fcomi
cmpsb
inc
sbb
ljmp
pop
std
pusha
lahf
add
jl
cmc
mov
mov
cmpsl
fld
mov
or
xchg
push
jle
jp
fdiv
popa
cmp
leave
inc
int3
push
push
mov
pop
mov
jb
xchg
or
ljmp
in
imul
xchg
add
jno
cmp
pop
inc
out
aad
cmpsb
add
mov
push
jmp
mov
push
adc
sub
mov
pop
jmp
in
inc
mov
push
mov
les
xor
xor
mov
lea
test
mov
ret
sbb
sub
jecxz
xchg
and
enter
lea
xchg
popa
movsl
leave
outsb
repz
cmc
in
les
add
cmp
jo
inc
xchg
ja
and
mov
scas
int3
cmp
mov
sbb
jecxz
mov
movsl
and
fldl
pop
jl
push
stos
push
es
cmc
jo
fs
mov
inc
outsl
test
jbe
push
mov
mov
in
popf
inc
inc
mov
fsts
movsb
push
out
outsl
and
aaa
mov
inc
jmp
stc
cmp
inc
or
nop
xor
push
imul
aaa
jge
mov
or
aam
mov
ret
xor
div
inc
shr
jg
pop
sub
scas
hlt
sub
mov
xchg
shrb
pop
in
mov
sub
js
fs
gs
shr
or
add
popf
incl
rcll
adc
xor
dec
jo
mov
sarb
ret
mov
sub
repz
and
jp
jle
or
inc
mov
inc
out
jo
xchg
shlb
faddl
insl
aam
xrelease
loop
loop
rclb
cmpsb
mov
cli
dec
or
xchg
jmp
dec
adc
inc
test
or
icebp
mov
fdivl
push
jmp
jns
in
insl
pop
cmp
testl
dec
jno
in
mov
outsb
or
cmp
dec
bound
mov
xchg
adc
cld
sub
sbb
sti
sti
in
or
dec
fistpl
out
cmp
leave
jecxz
bound
jbe
in
faddp
xlat
sbb
call
loope
stos
xor
inc
xchg
inc
popa
or
stc
repnz
les
adc
fsubrl
sbb
imul
cmp
fnstenv
movsl
gs
rcrb
adc
dec
and
ss
or
push
sahf
mov
mov
fstpt
inc
das
pop
sub
mov
fucomp
iret
xchg
sbb
loop
andl
repz
popf
pop
or
mov
cmc
jmp
push
and
or
mov
popf
or
mov
lret
cmp
ret
lea
add
leave
insl
lds
adc
cmpl
call
std
test
mov
xchg
sub
adc
stc
out
cmp
push
mov
cmp
mov
mov
cmpsl
loope
aam
shll
in
test
push
fdiv
mov
push
int3
inc
in
popl
test
aaa
push
inc
adc
cmpsb
sub
shlb
loop
sbb
cli
jecxz
cli
test
pop
jle
daa
cmp
inc
repz
xor
jo
sub
pusha
push
xor
mov
mov
xchg
jns
lea
sub
in
test
or
insb
sarb
rcrl
mov
add
cmp
dec
test
lret
mov
daa
movsb
push
test
shl
mov
push
add
lds
outsb
inc
adc
lods
jge
cmc
fistpll
cmp
std
sub
lahf
push
pop
idivb
adc
dec
bound
ret
xchg
rorb
in
xchg
mov
adc
lods
into
pop
adc
ljmp
cmc
add
cmp
test
sti
in
jmp
sti
fildll
mov
lods
cmp
lret
movb
jg
push
xchg
mov
es
cmp
mov
mov
lods
gs
movsb
sti
dec
stc
push
pop
mov
adc
mov
sbb
jmp
js
test
jns
mov
xchg
and
dec
lea
mov
push
mov
popa
inc
mov
cmpsb
mov
cltd
scas
add
push
xor
dec
popa
repnz
mov
repz
mov
or
jno
inc
aam
push
and
movsl
pop
sub
pushf
sub
js
or
pop
mov
cmc
xor
xchg
cmp
imul
push
fistpl
imul
arpl
cwtl
or
into
or
leave
sbb
sahf
icebp
xchg
in
and
or
dec
sub
cmp
es
xchg
out
mov
sbb
icebp
jne
aam
lea
fsubrs
test
pop
es
sbbb
pop
adc
mov
and
aad
jecxz
pop
and
nop
xchg
pop
pop
jmp
subl
mov
movsb
sub
mov
in
out
daa
adc
sub
push
inc
dec
ss
add
xchg
sahf
pop
ds
mov
ficoms
add
movb
mov
push
insb
rcll
mov
outsl
xchg
insl
test
rol
les
shlb
add
dec
and
mov
les
mov
out
mov
pop
cmp
mov
pop
add
data16
xchg
lock
aaa
inc
cmp
lea
adc
fsubrs
stos
pop
jbe
notl
pop
sbb
xchg
adc
adc
scas
test
lods
pushf
mov
sahf
jge
sub
push
mov
jo
jmp
mov
xor
nop
mov
cltd
pop
xor
lret
dec
ljmp
mov
xchg
inc
fs
mov
ljmp
fcmovne
add
test
cmp
mov
aaa
jg
inc
cmp
fxsave
scas
fs
cmp
and
inc
push
out
std
mov
pop
cmc
aam
clc
mov
xor
enter
or
pop
cmp
jno
sbb
add
movsb
xor
mov
call
cmpsb
fisubrs
pop
movsl
icebp
add
ja
out
call
or
xchg
mov
jnp
pop
cli
fstp
ljmp
jecxz
sub
addr16
stos
pusha
dec
pop
fisubs
int
cltd
cmp
push
add
xor
sub
pop
in
movsl
mov
mov
call
repz
faddl
dec
imul
lahf
dec
pop
add
and
mov
in
xchg
push
pusha
pop
adc
and
sbb
repz
cmp
add
lock
sbb
ljmp
mov
mov
adc
aad
mov
xchg
lods
xchg
repz
mov
das
pop
cmp
xor
cmp
pop
pushf
cmp
je
int3
repz
cmpsb
mov
frstor
shl
mov
xor
ret
or
punpcklwd
aad
ret
push
xchg
or
popf
and
jl
inc
fists
fnstenv
pop
xor
jnp
rcll
divb
lods
loope
jge
xor
cmp
lods
pop
aad
stos
adc
and
xchg
mov
sub
sub
push
xor
cmp
sub
add
ds
popf
adc
xor
sub
jl
mov
hlt
xchg
inc
sub
sub
push
aaa
pushf
adc
test
jnp
stos
gs
xchg
or
mov
push
xchg
push
std
lea
insb
cld
out
push
daa
sbb
outsl
addr16
xor
add
add
gs
pop
cwtl
sahf
mov
std
xchg
cmp
lcall
into
jmp
les
add
aam
push
and
test
sub
add
mov
insb
dec
insb
sub
nop
mov
ds
lds
sub
and
xchg
shl
sbb
test
cmp
sub
fidivrl
loop
xchg
pop
out
jg
pop
mov
xchg
das
sub
xor
xchg
rorb
mov
mov
jge
lret
sub
test
or
arpl
pusha
adc
lods
pop
insl
in
stos
mov
inc
cld
mov
sbb
push
es
xchg
or
sahf
sub
sti
sbb
stos
add
insb
nop
adcl
push
or
fs
in
adc
and
push
xchg
iret
or
es
xlat
aam
xchg
push
cmpsl
lret
into
dec
rorl
shlb
andps
jno
lods
lahf
jae
sub
arpl
sbb
gs
xor
add
decl
cltd
push
mov
jle
popa
addr16
pop
cs
mov
pop
int3
cld
aas
cmp
lds
pop
mov
subb
movl
push
lock
test
cs
mov
jo
imul
pusha
add
stos
inc
jno
out
outsl
hlt
stos
dec
add
clc
adc
movsl
fldl
lret
jecxz
es
in
push
lea
xchg
sahf
aaa
movsl
cmp
xchg
int
push
cltd
mov
pop
or
lahf
aam
jmp
in
mov
xor
shlb
pop
pop
lahf
adc
adc
jmp
mov
stos
mov
fnstcw
jb
loope
leave
jb
jle
icebp
xchg
pop
loop
out
fnstenv
push
mov
and
or
push
jne
jo
fadds
scas
sbb
fdivrl
xchg
not
mov
cmpsl
cld
jns
sbb
shrl
cmp
fdivr
out
adc
inc
push
mov
push
jmp
adc
mov
and
sbb
movsl
pop
cmp
in
add
aas
jbe
pop
push
sbb
outsb
xor
subb
ljmp
and
lods
sub
into
iret
inc
add
std
adc
push
jbe
sbb
ss
dec
cmp
inc
movsb
dec
jmp
sub
xor
or
loopne
push
xor
adc
cmc
loop
jne
mov
and
or
les
inc
popa
mov
jb
mov
sti
sub
in
fistl
add
fisttpl
ds
push
push
movsl
mov
mov
ja
sahf
xchg
or
leave
push
xor
mov
jmp
jno
xchg
imull
mov
pop
test
cmpsb
mov
std
or
xor
scas
test
inc
cmp
cld
xchg
jno
js
dec
test
popf
ret
bound
jns
cltd
xchg
movsl
sub
test
dec
mov
pop
cwtl
pop
test
cmpsb
repz
mov
aam
and
scas
lea
mov
sbb
or
jbe
sbb
jne
in
stos
push
mov
pop
lret
in
dec
lds
mov
dec
adc
daa
xor
mov
test
or
add
or
push
ret
cmp
dec
pop
pop
jne
xchg
pop
adc
mov
mov
nop
and
or
pop
fcmovnbe
sub
test
loope
add
repnz
xchg
mov
jnp
pop
and
adc
sbb
repz
ds
cli
mov
sub
les
push
and
das
ret
nop
loope
iret
jbe
pop
xchg
imul
xchg
inc
data16
subl
push
sub
idivb
pushf
cld
call
out
stc
push
ja
sbb
inc
mov
insl
and
mov
sub
fsubs
sbb
fildl
xchg
pop
sub
into
icebp
movsb
test
nop
ja
push
pop
outsb
shr
int3
aaa
pop
decb
pop
call
inc
push
addl
stos
push
xlat
in
cli
mov
vpunpcklwd
jmp
dec
je
addb
fmull
mov
jecxz
xlat
incb
push
daa
push
mov
test
cmpb
pop
imul
xchg
hlt
push
push
push
scas
and
imul
aaa
jge
or
cld
aas
jl
inc
into
sahf
in
jle
ljmp
mov
stos
icebp
push
hlt
mov
pop
push
dec
xchg
cld
and
aam
js
out
outsb
arpl
nop
or
mov
sarl
mov
cli
imul
pop
dec
repz
xchg
in
outsl
fldl
push
add
pop
pop
dec
fs
rcll
leave
jp
cmpsl
out
movsl
notl
test
mov
nop
inc
jmp
js
test
sub
imul
sub
sub
add
and
jno
int
enter
and
xlat
fldl
lods
jnp
sbb
mov
jge
xchg
lea
xlat
ret
and
add
mov
mov
cmp
call
pop
pop
loop
xchg
test
adc
add
cmp
testl
adc
push
inc
loopne
ret
lock
jo
mov
sti
test
push
mov
mov
xchg
lcall
lret
add
idivl
test
stos
les
fstl
rcrl
inc
dec
mov
pop
jle
addr16
subb
in
sub
cmpsb
cld
sub
insb
or
scas
inc
mov
xchg
push
mov
mov
cmpsb
into
data16
mov
xorl
jae
or
pop
mov
sbb
cmpsb
xor
pushf
pop
fsubl
push
pop
adc
add
or
sub
subb
sbbb
lcall
cmp
sbb
in
mov
inc
rcll
inc
subl
das
inc
push
out
sbb
push
pop
imul
stos
jg
in
push
xor
mov
mov
jne
xor
adc
in
mov
sub
int3
mov
inc
das
xchg
xor
mov
dec
fistpl
pop
add
sub
jmp
jmp
std
or
cwtl
mov
pop
or
data16
mov
stc
sub
xor
shll
daa
mov
pop
jmp
lds
inc
pop
adc
adc
decb
orl
fdivrs
cmpsl
push
mov
xor
inc
sbb
in
sub
cmp
adc
aas
xor
add
sbb
ret
jle
rolb
pop
xor
adc
xchg
insb
dec
test
jbe
adc
mov
mov
iret
sti
in
lods
popa
or
hlt
popf
adc
pop
fldenv
xchg
hlt
add
push
ret
fcmovu
les
xchg
xor
pop
cmpsl
cmp
jns
fnstcw
jno
push
mov
jbe
loopne,pt
rclb
sbb
lea
outsl
shl
arpl
mov
mov
icebp
test
cmp
in
or
ret
inc
pop
aam
aam
pusha
jo
icebp
jp
jb
in
pop
jbe
loopne
inc
add
icebp
pop
nop
jne
daa
xor
rolb
jo
std
cld
int3
push
sbb
and
fldenv
lock
push
xchg
add
xchg
xor
out
pop
push
and
xchg
fisubs
xor
repnz
mov
xor
insl
je
push
negl
mov
fs
pushf
call
repz
jns
sahf
xchg
repnz
sub
test
je
push
or
loope
xchg
or
lock
sbb
cmpsb
jno
xchg
dec
jnp
pop
fisubl
call
lret
mov
in
inc
mov
xchg
clc
xor
xchg
in
arpl
dec
and
iret
aaa
mov
dec
stos
aaa
cmp
nop
push
mov
and
jp
pop
cltd
outsb
cwtl
inc
sub
mov
ficoml
mov
mov
and
es
arpl
pop
testl
xchg
nop
addl
push
or
xchg
jmp
mov
jp
sbb
inc
jg
sub
test
rorb
icebp
and
push
or
stc
push
icebp
pop
shr
clc
repnz
xor
adc
push
nop
pop
pop
mov
fstl
push
inc
arpl
test
mov
mov
fidivrs
xchg
mov
loop
xchg
fstpt
addr16
push
dec
ret
rcll
jae
fldenv
jg
sub
add
pop
scas
mov
scas
adc
push
ficoms
fadd
push
push
in
outsb
cltd
fsubs
ja
adc
fucomi
mov
jle
mov
pusha
push
xor
addr16
in
push
jb
xor
lret
inc
jno
movsb
fs
leave
icebp
cwtl
movsb
dec
fnsave
cmp
push
push
xor
mov
add
jb
test
cltd
cmp
pop
or
cwtl
sub
xor
xchg
lahf
aam
lcall
jo
xlat
pop
int3
lret
dec
cmp
push
test
in
lods
int
fs
push
xchg
pop
insb
test
or
and
or
push
xchg
movsb
dec
shrb
jg
fldcw
adc
pop
jbe
add
scas
cmp
lret
mov
mov
mul
and
push
lcall
or
pop
sub
movsb
push
loop
and
dec
roll
cmp
loop
dec
and
inc
movsl
mov
rolb
inc
sub
mov
dec
mov
cld
adc
mov
bswap
jne
xchg
or
xor
mov
add
cmpsl
push
clc
mov
adc
inc
bound
cld
fldenv
push
pusha
sbb
adc
mov
sti
jns
inc
test
imul
mov
out
lahf
xchg
cwtl
int3
or
cmpl
sub
pmulhw
mov
adc
bound
or
aaa
inc
jno
sbb
pop
mov
xchg
ds
scas
clc
push
lret
push
cmc
cld
mov
push
pop
xchg
aas
frstor
sbb
dec
push
or
sti
pusha
adc
push
out
stos
hlt
xchg
fdivrp
or
aam
sti
jnp
mov
push
and
pushf
arpl
shlb
out
test
and
mov
movsl
fnstenv
sbb
xchg
and
push
imul
loope
sahf
cmp
xchg
xor
cmp
inc
adc
sbb
xchg
mov
jae
xorb
lret
rolb
dec
sahf
daa
push
push
aad
out
pop
insl
lods
or
aaa
loop
mov
call
mov
jecxz
mov
sti
repz
xchg
mov
cmc
or
sahf
cwtl
int
stos
pop
sbb
je
mov
cmp
cmp
and
mov
addr16
push
test
insb
dec
sbb
jge
xchg
les
aas
inc
clc
nop
mov
add
ja
sbb
lods
adc
xchg
into
lds
and
inc
addl
outsl
mov
or
imul
xchg
out
lahf
add
cmp
pop
inc
out
sti
adc
and
jne
sarb
shl
mov
mov
ss
outsb
imul
ret
mov
mov
xchg
push
jo
test
mov
or
push
loopne
out
xchg
xor
mov
mov
mov
lds
add
dec
mov
stc
aam
les
inc
add
push
or
or
insb
lock
pop
inc
xchg
xchg
imul
sub
rol
and
dec
inc
or
jp
mov
pusha
mov
aad
pushf
aas
xchg
pop
cltd
lcall
shrb
xor
sbb
push
xchg
and
sbb
cwtl
addr16
outsb
cmp
dec
pop
sub
mov
or
mov
or
hlt
push
dec
dec
lods
lods
andl
pop
sub
test
scas
fsubl
push
sub
vmovq
xor
add
jecxz
sbb
mov
jo
sbb
xor
aaa
ss
aam
fs
sbb
mov
lret
repnz
and
sub
and
icebp
stos
inc
int
pop
sub
and
aad
ret
inc
xor
test
test
jb
aaa
loopne
sub
imul
jp
inc
js
icebp
adc
jle
inc
jl
adc
popf
lcall
test
add
lock
pop
mov
mov
fnsave
inc
loope
add
jno
js
inc
sbb
loopne
mov
dec
jne
es
pushl
bound
push
and
push
mov
and
xchg
jae
jne
jnp
dec
sub
jl
nop
or
mov
ficoms
out
inc
ret
lret
test
rcll
ljmp
mov
stos
sbbl
movsb
dec
xor
mov
fdiv
repnz
jmp
popa
rol
gs
in
dec
leave
xchg
and
negl
xchg
add
sub
sub
mov
lcall
pop
push
mov
add
sbb
outsl
xchg
sbb
inc
and
xchg
push
mov
stos
and
push
xchg
int3
sub
sbb
dec
xor
ljmp
out
setnp
and
push
cld
jno
push
dec
jl
mov
pop
rcrb
arpl
xchg
daa
push
lret
das
insl
dec
push
out
cmp
cmp
addr16
add
mov
jge
rcll
es
rclb
mov
xor
cmp
fsubr
cmp
push
cld
dec
jae
imul
lock
and
lahf
roll
jl
xchg
call
es
in
jle
imul
lcall
flds
dec
mov
in
repnz
imul
add
mov
mov
out
in
rclb
fsubs
daa
mov
repz
jle
mov
cmp
fisubs
daa
pusha
jp
shrl
sbb
and
mov
mov
xor
mov
mov
jle
popa
outsl
sub
daa
cli
clc
xor
stc
add
add
jne
ror
in
jnp
mov
inc
inc
fwait
inc
xchg
shll
jns
pop
aad
imul
jle
xchg
sarb
andl
dec
out
jp
iret
lods
in
test
or
sbb
jmp
mov
and
mov
pop
cs
pop
cmp
setge
popa
aam
adc
jno
push
xor
nop
push
mov
jge
push
or
mov
push
mov
out
sub
xchg
repnz
adc
das
stos
pop
dec
rcl
jno
mov
sbb
or
loop
jle
fisubs
out
and
dec
cmp
mov
or
push
jp
pop
and
stos
jp
push
loope
sbb
repnz
inc
and
sbb
lret
shlb
jns
and
scas
repnz
lea
xchg
jno,pt
cmp
lds
sbb
in
repz
mov
arpl
nop
pop
add
stos
cld
orb
pusha
mov
xchg
add
sub
fidivrs
enter
sub
mov
inc
and
inc
cmp
in
pop
dec
aad
xchg
jl
fdivs
shr
int3
add
out
rcrb
mov
arpl
idivb
mov
cld
xor
mov
movb
sub
icebp
add
sbb
jge
push
aaa
inc
outsl
add
int
add
mov
stos
out
inc
push
push
dec
dec
mov
imulb
aaa
push
cmp
jb
sahf
lret
xor
or
pop
es
hlt
mov
lock
cmp
or
sbb
loopw
out
in
mov
cli
add
pop
dec
hlt
lcall
mov
jecxz
rcrb
out
jl
orl
std
fildl
int
add
lods
stos
push
cli
or
mov
mov
adc
aaa
aam
int3
andnps
add
fucomi
lret
inc
pop
sbb
outsl
imul
sub
roll
push
ficomps
xor
test
lock
lock
sahf
xchg
flds
enter
cmpsb
mov
sar
es
and
or
mov
aam
sbb
add
xor
repz
push
jp
addr16
mov
std
inc
dec
dec
movsl
nop
inc
mov
mov
jne
rorb
repnz
jmp
mov
jnp
cmp
mov
movsl
jbe
jmp
andl
sbb
cmp
stos
jo
adc
or
push
fs
in
test
mov
jae
repnz
pop
sub
xor
xlat
or
sub
iret
dec
insl
dec
and
sbb
pop
ret
pusha
jno
cmpsb
fld
cwtl
std
and
or
pop
dec
lret
or
stc
fwait
jns
pop
cmp
icebp
mov
inc
mov
mov
xchg
in
pop
lret
lock
push
nop
sub
ljmp
pop
outsb
xlat
mov
testb
cltd
cmp
adc
shlb
mov
push
and
push
and
leave
div
insl
js
in
mov
test
push
sbbl
rorl
pop
in
out
adc
jecxz
out
push
pop
adc
add
jae
imulb
mov
je
repnz
xchg
aad
add
dec
loop
ljmp
mov
mov
into
test
fists
aaa
pop
jae
scas
xchg
orb
ljmp
cmp
sub
adc
arpl
mov
adc
loop
inc
mov
iret
xchg
sub
jo
dec
lds
mov
int
inc
mov
movsl
inc
outsl
push
sbb
xor
sbb
movsl
hlt
sbb
lahf
and
push
in
shll
in
add
or
jo
add
xchg
fadds
scas
ret
mov
cmp
fistps
pop
aas
push
xchg
fsts
outsl
push
or
and
inc
adc
adc
pop
pop
gs
dec
mov
dec
fcomps
jnp
xlat
mov
ljmp
jecxz
sub
dec
ds
xor
adc
push
mov
cmp
xor
ret
jle
lds
out
mov
mov
mov
and
xchg
or
cmp
sub
sbb
test
push
and
jecxz
push
sbb
fnstenv
pop
in
jae
jno
shll
xchg
fldl
icebp
negb
ljmp
mov
call
popf
popa
add
fcomps
aas
cmpsb
push
mov
sub
inc
and
push
inc
clc
stos
clc
jnp
cwtl
xchg
dec
push
data16
xor
je
inc
mov
nop
jmp
aad
jl
add
jp
repnz
push
mov
mov
push
repz
stc
out
add
test
push
xor
loop
sbb
and
sbb
add
cwtl
stc
sub
lea
int3
in
pop
pop
xchg
fldt
xchg
test
jae
adc
sbb
pop
xor
aam
test
scas
xchg
sub
xchg
ss
movsb
iret
and
and
add
jecxz
dec
jmp
imul
pop
jb
lods
add
imul
sub
test
decb
fs
aaa
xor
incb
jbe
jae
outsb
stos
cmpsb
movsb
stos
adc
mov
mov
cmp
pop
sbb
int
rorb
push
iret
fs
inc
repnz
es
mov
adc
insb
cmpb
popf
sub
xor
aad
bound
insb
jnp
pop
push
cmpsb
dec
mov
sbbl
adc
jbe
fisubrl
cli
xor
rep
sub
mov
daa
sahf
inc
push
aas
sbb
jmp
inc
stos
and
xor
pop
jbe
sbb
adc
rol
cltd
mov
xor
sbb
mov
iret
cmpsl
mov
int
lock
in
mov
cmpsl
mov
js
aad
js
adc
andb
adc
bound
inc
xchg
addr16
aam
call
add
xchg
aad
mov
sbb
sub
and
mov
lods
icebp
or
mov
insb
and
ror
inc
aas
cs
jns
or
shl
pop
decl
mov
repz
ljmp
dec
leave
jbe
mov
pop
lret
push
push
out
xor
mov
push
fiadds
sbb
subb
pop
cltd
lret
mov
dec
or
fstps
gs
lahf
sti
test
std
jmp
lock
cmp
adc
stc
aas
inc
insb
mov
popa
jbe
hlt
pop
xchg
jb
cld
xor
popf
lds
dec
mov
mov
gs
push
repnz
popf
xor
mov
push
call
fsts
cmp
cmp
cmp
inc
sbb
aad
adc
int3
or
xchg
sti
jbe
mov
adc
pop
pop
mov
dec
or
pop
sbb
daa
jge
pop
sbb
xor
out
js
cmpsl
ja
pop
xchg
or
xchg
pop
mov
pop
out
xor
into
arpl
jecxz
movsl
mov
pop
subb
dec
mov
fmull
mov
push
in
lock
jmp
push
cmp
fisttpl
es
loop
jnp
jl
lods
and
xor
cmc
or
xchg
sarl
dec
xchg
push
jno
hlt
jl
fs
cmp
mov
in
scas
mov
lods
add
xor
xchg
xchg
dec
mov
xchg
mov
pmulhuw
loopne
mov
int3
pop
push
lods
xor
aas
fwait
inc
sbb
mov
add
sbb
xchg
mov
shl
add
insl
mov
xchg
scas
pop
pop
adc
mov
dec
mov
daa
xchg
sahf
ss
and
mov
pop
xchg
mov
push
lahf
sub
movsb
xor
fsub
cmc
xor
adc
sbb
cmp
xlat
stc
sahf
xchg
mov
bsr
pop
jmp
pop
push
and
fs
pop
cmp
imul
dec
inc
loop
sbb
movb
lds
push
xor
aam
push
add
repz
jb
lods
shr
xchg
out
add
mov
bnd
dec
imul
push
cmp
push
cmp
jo
push
mov
sbb
lret
mov
hlt
mov
dec
cld
mov
mov
cld
dec
adc
call
sbb
jo
and
or
add
mov
add
imul
sbb
mull
aaa
dec
sub
mov
in
sbb
in
push
mov
cmpsb
xor
leave
into
cmp
mov
cli
jb
add
test
scas
inc
mov
xchg
stc
adcb
cld
outsl
adc
int3
push
in
ss
leave
loop
mov
in
inc
jp
outsb
push
fs
aas
jno
and
or
test
inc
addr16
jns
in
xor
test
add
sbb
mov
mov
lahf
ljmp
and
mov
mov
stc
or
arpl
adc
or
es
bound
test
dec
adc
movsb
dec
xchg
out
daa
stc
mov
xorb
jmp
dec
pop
repz
movsb
inc
movsb
out
inc
push
lret
mov
and
or
incl
jnp
mov
in
xchg
icebp
jge
bound
and
mov
hlt
sub
outsb
adc
imul
cmpsl
jae
jne
dec
xor
fisubl
pop
jnp
jns
ret
mov
jb
inc
xchg
ficomps
shl
sub
cmc
sbb
mov
cld
lods
dec
dec
fiaddl
sbb
imul
lods
into
xor
push
js
popf
es
push
jmp
push
xchg
add
dec
sub
or
scas
popf
pop
cmp
mov
ss
pop
and
mov
jbe
jmp
ja
push
adc
push
inc
mov
syscall
push
jne
mov
cmp
jne
mov
mov
imul
repz
cmpsl
mov
test
bnd
lret
rcll
jbe
fidivrs
xor
and
xor
mov
imul
test
lcall
ja
mov
and
imul
jg
pop
fidivs
cltd
das
mov
dec
or
dec
sbb
jb
cmc
dec
push
jae
les
sbb
test
jp
sub
std
repnz
dec
sub
mov
sub
dec
nop
add
mov
inc
and
jmp
mov
and
inc
push
pop
aas
adc
rcrb
gs
ds
hlt
repnz
shll
and
add
icebp
cltd
pop
aam
sbb
adc
in
mov
pop
add
and
in
sti
pop
xlat
stc
repz
out
aad
dec
fcoms
pop
out
pop
mov
adc
int
add
push
pop
mov
repnz
ret
dec
lock
and
adc
jbe
iret
jae
adc
stc
sub
xchg
aaa
mov
mov
loopne
mov
jge
add
jb
movups
movsl
xor
insl
mov
loope
rcll
mov
xor
sahf
inc
push
bound
cmp
pop
add
jno
dec
mov
call
loop
bound
lock
or
sbb
pusha
cmpsl
enter
stos
jge
subl
mov
inc
inc
jb
push
push
mov
inc
std
mov
mov
popf
mov
jb
dec
je
ret
xlat
jbe
test
int
fwait
sub
inc
dec
out
imul
dec
or
jp
xchg
lock
inc
test
mov
add
jo
dec
cltd
cmp
ds
imul
adc
lret
sub
subl
pop
jecxz
movsl
mov
lods
pop
call
adc
pop
adc
push
push
fwait
shlb
cmp
cltd
and
or
mov
mov
pop
mov
push
push
movsl
fisubs
js
fwait
dec
lahf
jg
fucomip
push
or
cvttps2pi
stc
lret
push
push
adc
mov
mov
mov
rcl
arpl
ds
ljmp
dec
mov
sub
cmp
cmp
pop
pop
std
movsb
add
fsubrp
adc
mov
push
test
sti
scas
xor
popf
insl
inc
fisttpll
mov
call
sti
adc
add
outsb
add
xor
and
out
xor
loope
stos
cmp
mov
or
cmpsb
pop
jns
mov
fchs
repz
lret
sarl
jbe
aam
inc
mov
pop
push
test
aad
aaa
push
and
divb
add
inc
sub
jl
hlt
sbb
repz
insb
inc
fbstp
sub
mov
mov
dec
int3
mov
push
inc
fnsave
mov
rorl
fwait
in
cld
dec
xchg
cs
pop
cmp
nop
mull
sub
push
sub
pop
loope
test
cmpsb
inc
arpl
jg
ljmp
and
and
rcll
lods
xor
fildl
adc
gs
rorl
sti
pop
hlt
sahf
mov
int
dec
addr16
aas
iret
dec
pushf
inc
cmp
adc
add
jmp
and
mov
push
dec
imul
dec
repz
xchg
push
das
test
icebp
outsb
loope
popa
cmp
sub
push
shrl
jo
loopne
pop
sub
idivl
call
movsb
adc
lret
mov
xchg
shrb
pop
push
rcrb
shlb
shrb
jns
js
daa
add
adc
jle
push
jle,pn
push
or
mov
add
cmp
addb
mov
xor
cmp
pop
jno
push
mov
imulb
mov
pop
leave
fdivrs
fsubrs
add
popf
pop
sbb
aad
loope
movsl
es
das
ret
xchg
test
testl
jg
testb
ret
pop
xor
in
push
mov
sbb
xor
dec
scas
sarl
jp
dec
cmp
ret
xor
and
int3
lods
inc
mov
imul
ret
test
push
fcompl
push
mov
jno
pushf
stos
sub
imul
jo
dec
sbb
inc
fdivrs
push
sbb
add
movsb
push
add
into
sub
cmpsb
outsl
inc
pop
or
mov
xlat
adc
cwtl
fs
xor
sar
gs
leave
iret
mov
mov
jl
pop
outsb
adc
push
ss
jae
ret
loope
pop
sub
test
cmc
sub
das
std
lds
ja
insl
push
ror
movsl
out
jb
adc
dec
pop
ljmp
test
jno
or
nop
outsl
daa
sub
inc
fcompl
hlt
fs
lock
xchg
es
sahf
jg
test
pop
dec
scas
pop
pusha
lret
jns
mul
dec
in
ret
adc
add
add
xchg
dec
push
mov
sbb
xchg
ds
out
mov
insb
cmp
cmpsb
push
jp
add
ret
int
jb
imul
jne
pop
xchg
into
dec
fldcw
lahf
cmp
sti
movsl
sub
sub
jbe
mov
mov
push
push
sub
jg
lods
test
pop
das
pop
scas
nop
mov
push
xchg
lret
ds
pop
adc
pop
cmp
mov
cmp
dec
and
mov
dec
pop
or
dec
int3
push
add
out
or
jns
stos
sub
sahf
inc
out
rcrl
and
ror
push
sti
jns
push
aam
js
sarb
dec
faddl
push
mov
add
jp
popf
fdivrs
int3
mov
sub
sti
rorl
fsubrs
add
js
and
outsb
test
movsw
out
mov
ljmp
fdivl
xchg
inc
das
mov
fmul
outsb
push
sbbb
iret
inc
in
adc
and
imul
insl
jne
ja
aaa
mov
ret
shrb
sbb
xchg
push
int
jmp
test
cmp
mov
int3
fnstenv
push
jge
mov
inc
push
cltd
sbb
je
out
inc
jge
adcl
xor
mov
cld
jp
in
pop
cltd
ficompl
loop
dec
mov
mov
cmpb
repz
jp
cmpsl
mov
negb
fidivrl
stc
xchg
mov
add
lock
test
inc
pop
loope
sub
cmpsl
jno,pt
push
xchg
in
and
stos
or
std
and
nop
sbb
cmp
xor
xchg
inc
cmpsb
mov
xchg
data16
loop
sbb
scas
call
jmp
ljmp
sbb
or
and
rorl
mov
cmp
arpl
or
mov
xchg
mov
jl
or
or
sub
out
pop
stos
fwait
jnp
movsb
lret
in
ror
sbb
inc
push
sub
cmp
pop
pop
ljmp
push
push
ficompl
fs
jo
add
dec
call
jge
addr16
clc
jno
or
push
mov
mov
xor
add
pushf
mov
push
inc
jmp
xchg
jge
dec
xchg
jno
in
scas
xor
sti
inc
mov
pop
mov
test
mov
enter
lock
stos
hlt
jl
inc
xchg
cli
mov
cld
in
mov
pop
sub
mov
inc
sub
aam
mov
testb
jp
adc
add
mov
aam
ret
xor
lret
notl
pushf
mov
out
mov
mov
ds
in
in
fcom
leave
adc
rclb
or
decb
and
jg
cwtl
and
or
mov
pop
sbb
or
sbb
pop
adc
fsubs
push
repnz
lods
jno
insl
jg
je
add
cld
push
bound
or
lret
mov
mov
cmp
mov
pop
pop
pop
push
ret
into
mov
clc
jbe
cmpsl
xlat
nop
xchg
sub
repnz
mov
cmpsb
outsb
pop
sub
xchg
xor
pop
jl
mov
mov
in
leave
jb
xchg
mov
push
lods
sahf
push
gs
adc
and
fbstp
enter
in
scas
mov
jne
dec
or
cltd
nop
push
testb
jae
adc
or
pusha
rcll
leave
jle
add
loop
sub
mov
jae
cltd
pop
ret
decl
sub
lods
ja
test
or
xchg
repz
movsb
or
fadds
pop
lret
int3
dec
into
sbb
loop
lret
push
or
test
fcoms
sub
movsb
insw
imul
jle
inc
popa
mov
in
adc
int
xchg
jp
or
out
enter
push
jp
jmp
loope
sub
inc
movnti
push
xchg
fistpll
fwait
mov
xchg
pushf
in
mov
loop
sarl
mov
jo
mov
xor
cwtl
test
aam
push
test
fldcw
nop
cmp
or
adc
shll
push
sbb
negb
jb
inc
adc
addl
clc
pop
mov
hlt
js
ret
mov
mov
ret
inc
inc
aas
mov
xchg
dec
cmp
mov
xchg
mov
pop
gs
shlb
call
push
lea
nop
in
test
sbb
std
dec
lret
out
inc
test
int
cmpsl
xor
push
lods
les
add
mov
add
cltd
jne
cwtl
mov
mov
es
add
pop
jo
jo
gs
bound
popf
jae
stc
push
les
pop
jmp
lock
adc
cltd
pop
ja
popa
xor
sub
lock
or
aas
dec
out
inc
dec
and
inc
divl
or
jne
and
push
dec
and
xchg
cli
dec
scas
addr16
xor
enter
push
sub
xor
out
sub
mov
mov
xor
mov
adc
movsb
inc
test
mov
dec
or
and
jno
std
cmp
xor
std
sub
inc
and
out
out
mov
cwtl
sti
or
out
adc
mov
xchg
repz
adcb
push
mov
dec
add
lods
push
ljmp
lods
es
insl
push
xchg
xor
insl
add
mov
int
mov
dec
stc
mov
test
xchg
loop
push
lock
rclb
lcall
cltd
add
push
fstl
aam
icebp
sub
adc
cmpsb
pop
push
sub
ja
repnz
out
inc
add
add
jl
imul
xchg
inc
loope
imul
jae
cmp
mov
js
and
xchg
mov
mov
imul
fidivrl
mov
sbb
push
push
mov
sub
rorl
sti
pop
test
jno
mov
dec
mov
jns
shll
sbbl
xchg
dec
or
pop
out
in
mov
inc
add
xlat
or
mov
mov
aas
cli
bound
andb
xchg
pop
out
daa
pop
pop
inc
addr16
push
pop
iret
lock
dec
adc
and
push
lods
ljmp
repz
icebp
stos
popf
addr16
addb
push
imul
fsubp
repnz
jge
test
loope
pop
push
cmp
cmp
fiadds
or
mov
repz
insb
popa
inc
xchg
das
aaa
cmc
shrl
mov
lret
mov
neg
inc
jge
ret
enter
sub
push
cwtl
dec
dec
inc
push
mov
xor
movl
aas
and
sub
repnz
mov
clc
sti
pop
pop
bswap
cmp
out
outsb
lcall
popf
out
mov
sbb
mov
mov
or
scas
test
dec
or
rclb
jg
and
subb
cs
mov
addr16
pop
or
xchg
lcall
inc
pusha
loope
mov
loope
cmc
ret
daa
jbe
pop
mov
add
out
xchg
jp
pop
pop
xor
icebp
call
add
les
mov
jnp
jecxz
push
mov
push
add
dec
arpl
popa
test
push
sbb
inc
pop
loopne
mov
mov
inc
in
nop
cmpl
nop
jle
push
xor
pop
imul
pop
jge
push
or
and
push
fwait
ret
std
jnp
aaa
jbe
lret
fstpt
mov
jbe
sub
fiadds
dec
jbe
sbb
push
pop
push
int
dec
repnz
xchg
adc
aaa
jg
push
jno
aam
outsl
mov
xchg
jg
pushf
cmp
and
leave
cmp
cmpsl
xchg
stos
dec
andl
xchg
or
insb
inc
jae
rol
out
je
dec
dec
into
adc
mov
daa
fsubrl
mov
xchg
fdivs
xchg
jo
sbb
push
xor
xchg
push
popf
fwait
ss
pop
fdivs
loopne
add
test
push
ljmp
fmuls
cmpsb
les
daa
sub
js
popa
or
cmp
pop
mov
in
pop
nop
jge
mov
push
mov
movsb
mov
iret
mov
fnstsw
push
ja
or
cmp
imul
sbb
imul
loope
lret
loope
sbb
cli
xor
xchg
jecxz
xchg
lods
push
pushf
mov
adc
in
lods
stos
sbb
int
fst
jb
cwtl
out
push
test
not
idiv
addb
loope
call
mov
jo
jge
test
int
adc
dec
cmpsb
cmp
int3
int
call
dec
sub
xor
adcb
sub
insb
arpl
inc
add
icebp
jae
xchg
int
mov
cmp
mov
pop
adc
push
mov
iret
jae
xor
jb
mov
fwait
xlat
inc
mov
fistps
loop
inc
push
shll
cmpsb
dec
mov
jno
or
and
sti
ret
in
decl
mov
lods
or
arpl
stos
lds
aad
adc
mov
icebp
mov
add
rcll
mov
adc
stos
push
cmc
jle
push
or
lods
jns
fistpll
pop
pop
cmp
cli
ljmp
into
sub
ja
and
mov
pop
cltd
test
stos
scas
sahf
enter
mov
scas
shrl
aad
loope
fdivrl
ja
adc
xchg
pusha
and
push
push
js
add
push
xchg
sbb
scas
adc
clc
inc
out
scas
mov
cli
fwait
sub
cmp
call
scas
mov
popa
pop
cmp
lret
pop
jae
sbb
in
aam
push
stc
ret
jne
and
push
leave
subl
push
sbb
sbb
jmp
xlat
stos
pop
and
adc
out
fstp
sub
ljmp
test
push
data16
mov
cwtl
adc
mov
mov
call
add
dec
imul
icebp
pusha
dec
test
test
js
ret
scas
or
clc
cwtl
xchg
xor
mov
dec
loope
adc
pop
call
add
dec
jae
mov
mov
sbb
sub
mov
mov
or
jb
mov
stos
xor
addl
out
xchg
jo
xchg
movsb
loope
insl
xchg
add
sbb
ret
lock
mov
inc
pop
jmp
pop
adc
mov
test
mov
mov
cmp
add
bound
aam
lock
jo
cmpb
leave
stc
mov
jbe
shl
out
jno
test
daa
cs
or
adc
outsb
or
xchg
add
loope
insl
sub
inc
or
repz
and
stos
int3
pavgw
hlt
out
sub
adc
inc
popf
pop
outsb
xchg
test
gs
jo
push
sbb
jmp
fidivl
sub
mov
test
out
dec
jmp
mov
xchg
les
in
insl
and
dec
dec
clc
and
jg
xchg
jg
mov
mov
mov
mov
pop
mov
test
insb
cltd
mov
xchg
subl
cmp
mov
cmp
iret
push
adc
inc
sti
dec
sub
push
fistps
jo
sbb
pop
mov
in
push
inc
in
push
arpl
loop
fildll
js
add
jecxz
in
dec
mov
out
popf
pop
fcompl
pop
jbe
push
adc
sub
adc
fdivl
nop
inc
fwait
xchg
and
lahf
add
push
push
cmpsb
lcall
sub
fnstenv
inc
or
add
mov
lcall
pushf
mov
filds
pop
flds
mov
or
mov
pop
mov
pop
adc
aad
inc
icebp
fidivrs
add
mov
hlt
add
repnz
mov
inc
out
out
add
push
jb
jg
mov
push
xchg
daa
and
and
pushf
cs
push
jmp
push
dec
xchg
hlt
dec
jbe
and
xor
push
push
jo
daa
pushf
inc
ret
jo
in
jno
arpl
cld
outsb
adc
jge
xchg
xchg
dec
jb
jno
xor
repz
mov
cltd
mov
sarl
mov
xchg
and
fcoms
and
push
sbb
shlb
adc
adc
mov
shll
lock
pushf
dec
mov
faddp
ret
test
add
pushf
sti
jmp
loop
or
mov
add
insl
jmp
scas
adc
mov
test
or
xchg
xlat
add
stc
outsl
xchg
inc
insb
lret
shll
or
pushf
and
xor
xchg
and
and
lods
pop
lock
in
push
dec
lcall
xchg
ljmp
cwtl
inc
or
adc
nop
je
jp
enter
push
xchg
push
jae
push
clc
in
shlb
lret
push
adc
daa
ffreep
jae
out
fs
lret
or
scas
mov
inc
jbe
add
in
xchg
mov
inc
mov
or
aaa
add
or
push
test
je
inc
out
nop
xchg
xor
xchg
sub
dec
pop
sub
das
or
imul
mov
les
cmp
movsl
jge
outsl
add
mov
push
cmp
in
jno
js
xor
outsb
cltd
es
iret
lods
lret
rclb
clc
cmpxchg
cwtl
sbbb
cmp
add
fwait
xchg
jnp
popa
insb
jnp
jb
jmp
xor
pop
sbb
xor
das
mov
scas
pop
and
addr16
inc
jo
in
jnp
add
or
jo
mov
adc
xchg
and
cmp
sbb
jb
or
push
sbb
and
fcmovne
gs
push
mov
out
gs
cmp
aas
dec
inc
dec
dec
pop
inc
sbb
pop
outsb
sbb
fs
lods
mov
and
dec
das
mov
dec
js
xchg
xor
cmpsl
jns
push
mov
test
ret
sbb
mov
pop
xchg
in
mov
in
test
sub
push
leave
sbb
lcall
dec
push
sub
jb
out
inc
and
imul
push
stos
out
out
cs
push
mov
or
fistps
iret
lods
imul
and
xor
rorl
daa
outsb
pop
ds
xchg
adc
sub
ss
movntq
sarb
scas
jb
mov
arpl
ficoml
cmpb
cmp
jb
std
pop
dec
idiv
mov
xchg
cmc
fcoml
push
rorl
daa
and
je
ret
sti
fsubrs
and
sti
and
cs
mov
frstor
mov
sbb
cmpsl
cmpsl
ret
loopne
mov
gs
xlat
mov
jecxz
jae
paddusw
push
pusha
xor
enter
pop
pusha
imul
or
into
inc
fnstcw
mov
xor
jns
ljmp
xor
mov
subl
int
add
jae
jmp
push
dec
lahf
add
pop
aad
cmp
iret
mov
add
repnz
sub
cld
adc
push
fcmovnu
mov
or
test
decb
add
xor
in
shll
add
in
ret
sbb
pop
je
cli
jl
ja
cltd
or
push
push
fnstenv
stc
in
or
xor
scas
xlat
mov
test
aad
rclb
movsl
jle
mov
jb
in
cltd
jg
movb
pushf
outsb
adcb
fnstcw
out
movsb
push
cwtl
dec
mov
sub
mov
repnz
aas
sbb
mov
sbb
int
cmc
and
push
xor
inc
repz
inc
jg
incb
sbb
adc
cmp
mov
xlat
push
cmp
and
push
lret
repnz
or
aad
mov
push
or
dec
mov
rcr
out
mov
mov
out
out
adc
ret
pop
paddsw
jno
push
daa
cmc
push
mov
fwait
push
xchg
in
jmp
out
neg
inc
popf
divb
mov
xor
clc
cmp
jmp
mov
or
mov
xor
push
aaa
xchg
cmp
inc
or
scas
or
sahf
adc
xchg
cmp
mov
stos
push
adcb
inc
cli
adc
pop
rcrl
lret
push
sbb
jb
push
inc
mov
pusha
mov
aaa
flds
mov
push
in
scas
ret
pop
fnstenv
xor
mov
mov
aad
out
adc
adc
dec
cmp
mov
mov
adc
pop
adc
jnp
sub
fidivl
inc
push
inc
sbb
xchg
cmp
dec
push
lds
fisttps
or
stos
xor
cmp
out
and
xor
add
jp
jnp
xlat
lock
adc
cmc
in
ds
es
mov
jg
fnstcw
mov
push
mov
mov
iret
test
or
shlb
div
ss
jns
push
loopne
divb
mov
add
mov
cmovle
dec
loope
pop
popa
stc
fistpl
cmp
jno
sub
pop
std
sbb
sub
rcl
cwtl
jb
xchg
movsl
xor
std
and
dec
mov
ret
pop
push
xchg
scas
jecxz
sbb
and
jns
sub
ret
bound
cmp
pop
pop
xorl
lret
sbb
jg
xor
mov
mov
ret
jmp
and
test
negl
jmp
loope
sub
cmp
popa
or
out
stos
fisttps
xchg
push
xchg
add
and
int
imul
sub
fucomp
xor
repz
cmc
mov
repz
push
sub
mov
fsubrl
jno
push
shl
sbb
pop
aam
repz
push
ss
out
out
jbe
mov
shrb
pop
das
out
adc
sbb
repz
std
cld
ret
rcl
mov
xor
std
repz
adc
lods
push
push
push
xchg
jb
mov
lahf
cs
aaa
insl
fs
push
nopl
adc
test
sbb
test
jmp
sbbb
fs
jp
leave
faddl
mov
mov
js
pop
mov
cmp
pop
scas
daa
stos
out
insl
andb
test
movsl
mov
sub
loopne
ret
pop
xchg
xor
inc
into
mov
adc
pusha
lret
cmpsl
xor
leave
mov
mov
lret
lret
outsl
push
ss
scas
rorb
adc
xor
or
lea
nop
adc
inc
mov
mov
out
xchg
stc
mov
shlb
ficompl
jns
or
mov
xchg
dec
insl
jmp
dec
mov
xor
leave
jmp
insl
inc
aaa
adc
shr
xorb
lcall
and
scas
cmp
xor
xchg
or
pusha
jne
rcrl
jmp
insl
xor
cmpsl
inc
in
and
mov
rcr
pop
std
push
xlat
subl
pop
nop
mov
lock
push
clc
ds
mov
sbb
dec
add
jecxz
and
movsb
in
std
stos
orl
jne
repnz
inc
mov
jne
jno
popf
ds
push
scas
lcall
mov
es
xor
push
xor
mov
iret
push
dec
sbb
in
adc
shll
popl
call
pop
cmp
clc
mov
adc
lret
shl
enter
mov
dec
xchg
sbb
test
das
and
call
pop
cmp
inc
mov
lock
push
jecxz
dec
pop
shlb
mov
fiadds
popf
jmp
ss
inc
pop
xchg
xchg
pop
lsl
movsl
gs
in
push
mov
pop
jns
xchg
fdivs
push
push
add
adc
mov
add
inc
mov
mov
push
xchg
xchg
in
push
mov
loopne
or
int3
pop
xor
imul
inc
data16
push
jg
xchg
xchg
add
xchg
scas
xlat
cs
in
inc
sub
loopne
jnp
or
xor
lea
push
push
mov
dec
and
sub
push
in
mov
fdivrp
je
repnz
inc
sbb
rcr
mov
adc
std
push
sbb
imul
fcoms
gs
imul
add
xchg
xor
jmp
ret
cmpsb
shlb
fldl
mov
sbb
push
fs
loope
data16
scas
mov
pusha
insl
ljmp
loopne,pt
adc
xor
daa
ffreep
sub
scas
lods
insb
ret
sub
push
outsl
cmpb
rorb
ret
je
xor
add
xor
scas
xor
or
xor
mov
fs
push
out
sub
jl
add
jp
aaa
xor
push
es
push
jecxz
mov
ss
js
jg
jg
jp
lods
xchg
shlb
cmp
push
sahf
add
jne
fs
cwtl
mov
jle
imul
pop
and
rorl
ss
add
cmp
repz
ja
ret
lods
xor
jle
repz
divb
lods
cmpsb
push
pop
int3
cmpsl
mov
nop
inc
xchg
sub
sub
pop
call
mov
cld
add
jno
pop
mov
rol
mov
pop
sbb
loopne
push
inc
xchg
ret
jmp
jmp
jno
inc
hlt
es
sbb
xchg
adcl
mov
aad
dec
mov
cltd
add
inc
and
icebp
pop
aam
fnstenv
dec
dec
fdivrl
movsl
es
pop
add
push
xchg
js
adc
cltd
jns
out
xchg
dec
lds
jg
int
and
add
push
pop
mov
jge
cmpsl
lock
push
pop
sub
sub
ljmp
int
rcl
out
cmp
je
cmovbe
mov
push
test
pf2iw
or
pop
in
fs
imul
or
jl
xchg
subb
sbb
dec
mov
mov
jmp
test
cs
xlat
in
push
lcall
mov
dec
addb
add
imul
movb
jle
xor
and
push
mov
in
xorb
pusha
xchg
xchg
cmp
aam
es
mov
int
sub
jnp
outsl
push
loopne
mov
mov
fwait
enter
push
xchg
adc
addr16
sbb
sub
jo
into
out
in
into
sub
mov
inc
push
filds
sahf
dec
cmp
sub
mov
cmpsb
movsl
push
dec
inc
andl
cmp
push
je
insb
dec
xor
fistl
lods
inc
jno
push
lret
and
xchg
jae
pushl
xlat
loop
scas
dec
adc
mov
loope
pop
inc
and
outsb
xchg
std
xor
test
add
jae
push
push
xor
jmp
loopne
push
daa
sbb
jecxz
leave
push
cmc
test
jo
fcompl
rep
test
sahf
sub
inc
mov
std
dec
inc
jg
cmp
repz
add
popf
jmp
dec
fs
pop
in
mov
xor
sahf
jl
in
sub
jns
cld
jnp
jns
mov
cmp
inc
pop
or
dec
mov
pop
and
cmp
daa
outsb
push
rorl
daa
imul
nop
mov
xchg
adc
dec
jnp
out
push
insl
inc
mov
xor
das
jbe
fcompl
xchg
mov
dec
push
jns
mov
das
in
sub
inc
ret
lds
pop
int
iret
push
pxor
vmovaps
dec
jne
mov
stc
inc
adc
fstps
jle
jne
scas
out
cli
repz
xor
pop
std
in
pop
xor
dec
fisttpll
ret
mov
push
orl
ss
push
cltd
cmp
loope
sbb
nop
dec
sub
sbb
or
inc
scas
in
icebp
jmp
sub
xchg
std
sbb
into
mov
stos
push
fs
cltd
rcll
mov
adc
int
jecxz
mov
ss
aad
popa
jge
jnp
pop
and
clc
dec
mov
scas
js
and
in
shrl
jno
push
dec
daa
add
stc
andb
in
ja
hlt
sti
repnz
je
flds
stos
and
ljmp
testl
fcomi
aad
xchg
or
rcr
mov
inc
das
mov
out
xor
das
sub
sbb
fbstp
stos
jne
arpl
jns
mov
cmp
fnstsw
insl
jle
cmp
sbb
push
jle
pop
mov
loop
roll
sub
pop
push
jbe
cli
adc
loope
pop
adc
cmp
mov
imul
sub
ljmp
mov
fdivrs
mov
shl
addr16
or
sub
xor
mov
std
nop
xchg
fiaddl
ljmp
mov
or
popa
jnp
cmp
push
or
dec
fldcw
cmc
and
sbbb
notb
imul
out
or
mov
cmp
add
aam
adc
sbb
push
sub
sbbl
sub
sub
inc
test
adc
mov
sbbl
leave
jbe
addr16
mov
xchg
xlat
push
jmp
sub
inc
inc
sbb
push
leave
and
out
popa
cmpsl
mov
orl
test
lods
push
jne
lea
loopne
setb
sbb
and
add
adc
lods
dec
out
imul
lret
jns
xchg
das
add
mov
pop
xor
testl
sub
adc
out
movsb
mov
push
into
xchg
rolb
jmp
xchg
mov
adc
stos
add
mov
dec
out
push
mov
mov
pop
cmp
je
push
add
inc
loopne
sub
stos
xchg
add
dec
adc
jl
inc
imul
push
sbb
aam
sbb
dec
sbb
pop
js
and
cwtl
out
jmp
jo
cld
out
shll
xchg
jnp
jmp
mov
cmp
mov
inc
popa
pop
xchg
icebp
cmc
cltd
cld
jns
mov
dec
scas
add
lret
jg
xor
dec
imul
add
test
and
jbe
rolb
ret
jbe
push
sbb
dec
push
aad
cmp
push
nop
add
idivb
cmp
bound
pop
icebp
aas
sub
mov
xchg
shll
cli
int
xchg
cmp
lret
dec
lret
popa
loopne
test
adc
iret
push
pop
cmp
popa
mov
movsl
lret
fnstenv
jns
mov
mov
dec
mov
xchg
insl
inc
gs
mull
mov
push
or
les
inc
add
arpl
nop
test
cmpsb
mov
or
rol
shlb
xor
add
sub
adc
rcl
or
mov
pusha
out
jg
in
cmpsb
fnstenv
fstpt
call
dec
mov
fisubl
pop
mov
in
out
clc
xor
mov
lock
stos
shrl
fisttpll
push
mov
sub
fidivrs
lods
lea
ja
xor
ret
shrl
sbb
dec
in
xchg
sbb
or
scas
mov
lods
mov
sbb
mov
xchg
adc
sti
inc
add
outsb
mov
pop
aaa
enter
mov
xchg
xchg
fwait
repz
mov
inc
inc
in
mov
fs
iret
das
push
inc
outsl
pop
dec
sbb
jno
mov
sti
fmul
or
sub
in
ja
mov
outsb
lret
dec
jecxz
shrb
rcl
push
dec
sub
sub
xchg
lret
cs
inc
arpl
sub
add
xchg
pop
lret
cmp
rclb
aam
dec
inc
mov
lahf
xchg
stc
inc
dec
or
add
xor
out
in
inc
les
pushw
into
movsl
mov
xchg
mov
xchg
xor
sti
xchg
movsb
mov
ret
fimull
push
xchg
enter
bound
stos
mov
gs
decb
movsb
sbb
sub
cltd
aas
mov
test
daa
je
sub
mov
mov
xchg
adc
inc
lds
cmpsl
out
jecxz
jge
mov
dec
pop
cmc
cmpsb
int3
pop
jmp
js
inc
push
cmc
jl
add
xchg
jbe
addr16
sub
insl
sub
into
mov
das
rep
outsl
cltd
push
and
sarb
xchg
or
xlat
lcall
sbb
sarb
in
out
lret
ja
pop
cmp
adcl
push
in
mov
adc
add
daa
dec
in
and
clc
stos
loop
daa
xchg
fwait
xlat
rol
add
fsubl
scas
inc
je
push
stos
fists
cmp
and
pop
pushf
cmc
lcall
sub
mov
sub
push
fwait
or
icebp
cmp
pop
mov
ret
cmp
lcall
fisubrs
xor
outsl
mov
jae
inc
and
stc
outsl
sbbl
and
scas
jae
imul
mov
enter
mov
call
sarl
jno
fidivs
jg
mov
cli
sarb
xor
xor
add
inc
pop
adc
inc
andl
outsb
xchg
dec
jbe
js
cmpsb
mov
dec
repz
xor
and
mov
push
decb
out
mov
mov
hlt
jns
not
ficomps
decl
and
add
push
stos
push
mov
pop
std
movsb
dec
subb
lahf
inc
fbld
stc
frstor
ds
pop
loop
imul
pop
mov
pop
pop
movsb
pop
out
js
mov
cmp
adc
mov
dec
push
insb
sub
fwait
jb
stos
and
das
and
dec
notl
in
dec
add
sub
ss
test
loope
das
loope
push
in
sub
lcall
sbb
pop
pop
pop
sub
cmc
dec
sarb
pop
mov
mov
in
dec
sub
add
inc
mov
fwait
andl
jg
stos
sub
ffree
lcall
mov
fistpll
mov
aam
xor
xor
or
xchg
gs
pop
lds
inc
shrb
cmpsb
xchg
add
hlt
xlat
mov
imul
pop
mov
add
mov
mov
push
fnsave
xchg
fcoms
ljmp
mov
push
and
dec
add
ja
call
loop
push
in
rcll
stos
mov
cwtl
rcrb
push
lods
mov
in
xchg
xor
ud2
fs
rcrl
mov
xor
dec
xchg
and
or
add
adc
es
mov
imul
add
in
xlat
pop
jne
push
aaa
sarb
cli
mov
sbb
loop
sbb
inc
les
sub
aad
ret
mov
adc
xchg
dec
cmp
adc
mov
int
jnp
rcrl
js
fdiv
cmp
push
ficoml
loope
cmpsb
jne
mov
repnz
push
mov
jle
jge
es
xchg
out
out
lds
cmp
ljmp
shl
or
inc
nop
dec
iret
mov
pop
outsl
xchg
mov
fadd
mov
lods
loopne
push
pop
xchg
jo
jp
jns
push
mov
dec
dec
pushf
in
sbb
jbe
xor
inc
adc
mov
sbb
jns
mov
push
movsl
sub
clc
arpl
pop
push
ds
mov
flds
call
jae
push
jbe
xorb
imul
fildl
lods
mov
mov
sbb
sub
add
mov
push
je
imul
jle
rorl
test
lcall
test
adc
jbe
cmp
cmc
push
sti
imul
loopne
pop
pop
shll
cmpsl
jne
and
jae
popf
jl
pop
pusha
into
mov
adc
jne
cmp
mov
jl
cmp
adc
xchg
dec
movsl
sti
mov
xor
sbb
ret
lret
cmp
lods
das
fidivrs
xchg
pop
sbb
jp
dec
inc
dec
lods
adc
pop
jns
mov
sahf
mov
leave
adc
xchg
daa
and
mov
cld
in
adc
jns
pop
mov
into
sub
cmp
in
es
fisubrl
xchg
dec
and
lods
jns
rolb
sti
pop
and
pop
scas
ljmp
inc
icebp
cmc
aas
push
cmp
pop
lea
fdivrl
lods
cmp
rclb
daa
popa
bound
imul
dec
inc
adc
lock
or
loop
rcll
lea
pop
mov
ret
mov
lret
push
ja
jne
test
and
dec
in
dec
mov
jae
sub
push
dec
inc
jne
pop
or
dec
xchg
push
and
xchg
fisttpll
jg
mov
cmp
adc
mov
scas
push
adc
dec
pop
mov
jecxz
mov
fbstp
ret
movsl
cmp
xchg
cmp
addr16
push
add
cmpl
repz
push
mov
aad
jmp
xor
fmuls
cmp
fstpl
scas
and
js
dec
jmp
or
or
xchg
dec
stos
js
push
loope
fdivrl
inc
mov
add
xor
scas
movsl
push
jge
inc
add
fnstenv
mov
and
xlat
push
insb
pop
es
mov
dec
sti
mov
test
or
lds
pop
xor
aad
in
mov
mov
xchg
and
iret
fs
das
dec
sbb
or
sbb
dec
clc
in
les
xchg
rorb
mov
lds
pusha
pop
or
pop
mul
or
subl
cmp
add
sub
jg
and
inc
sbb
jecxz
lret
adc
xor
cs
dec
cmp
cwtl
stos
call
clc
insl
adc
test
subb
or
adc
adc
gs
mov
shlb
jg
setnp
and
xchg
mov
pop
gs
cmp
shll
in
outsl
test
adc
imul
js
sub
sub
outsl
insb
mov
mov
jecxz
adc
shll
sbb
push
xchg
pusha
inc
scas
es
nop
mov
das
fistps
into
cltd
and
adc
int3
shrb
imul
or
xor
dec
rcll
inc
or
xchg
pop
in
adc
bound
adc
jecxz
jo
mov
sub
cli
mov
xor
xor
or
inc
jae
mov
xchg
mov
add
mov
add
test
pop
adc
cwtl
in
mov
inc
das
daa
sub
adc
cwtd
rclb
and
sub
in
push
pop
jb
cltd
decl
push
xor
in
xchg
pop
mov
push
cmp
or
jo
dec
mov
sub
data16
fyl2x
leave
mov
movsl
push
lods
dec
mov
push
aad
jp
or
cmp
notb
add
iret
ljmp
daa
mov
cli
adc
in
and
daa
cmpl
jmp
je
gs
sbb
add
adc
sti
inc
pop
loopne
das
cmp
ficoms
xchg
dec
and
push
push
loop
movsb
mov
jmp
in
mov
and
push
sbb
and
ja
mov
lahf
add
mov
loope
aaa
dec
and
xchg
test
pusha
dec
pop
jns
into
fisubs
ret
mov
cmp
dec
outsb
into
dec
cmp
rep
pop
es
test
lock
outsb
stos
sahf
jmp
pop
sub
fbstp
jae
and
jae
pop
pop
and
daa
imul
pop
mov
js
lret
rolb
test
cli
fcoml
ret
and
dec
jne
pop
lcall
test
pcmpgtd
aam
dec
loopne
pop
inc
cmpsl
jb
mov
or
ror
in
das
jmp
and
scas
pushl
mov
mov
stc
fwait
dec
divb
sub
push
arpl
mov
inc
notl
or
mov
rcll
pop
icebp
sub
negl
fstps
je
test
cmp
aaa
inc
shll
fcoml
clc
sbb
and
xchg
loopne
mov
and
out
arpl
test
imul
movsl
lds
add
out
popf
fdivp
xor
in
inc
fldenv
push
push
xor
stos
ret
shlb
mov
cmp
or
cltd
loopne
and
in
pop
inc
push
insl
jge
daa
loope
sbbl
add
lahf
lahf
test
les
mov
popa
rorl
jb
and
push
jp
out
dec
add
sub
imul
push
sbbl
js
adc
in
pop
mov
or
push
loop
movsb
pop
dec
or
stc
push
push
test
push
out
and
jno
add
pop
dec
pop
js
aaa
or
cwtl
mov
scas
jl
ss
push
dec
lret
pop
push
mov
or
bound
ficomps
mov
jno
add
mov
stos
and
pusha
outsl
cmp
ss
push
ja
fnsave
pop
in
insb
inc
lods
mov
daa
jge
adcl
jle
cmp
pusha
push
sub
adc
std
and
push
push
aas
jno
fsubp
out
out
push
add
divl
or
pop
push
movsb
mov
mov
mov
pop
xchg
lret
jmp
inc
enter
cmp
jle
fimuls
cmp
mov
out
int3
pusha
and
cmp
inc
mov
scas
loopne
jo
jmp
sbbb
out
xchg
popa
lcall
jns
mov
or
subb
gs
mov
mov
js
sarb
stos
push
push
fcomps
pushf
xor
jo
int3
in
fnsave
clc
test
lcall
iret
icebp
dec
push
repz
or
insl
adc
adc
scas
in
mov
mov
push
jae,pt
mov
jb
mov
mov
loope
ja
push
aaa
mov
add
aam
jae
shr
push
or
out
pushf
pop
and
push
gs
inc
xchg
subl
jne
push
iret
jp
push
pop
lea
mov
mov
cmp
add
adc
adc
pop
push
bound
xchg
or
cmc
mov
std
sbb
sahf
push
or
scas
inc
cmpsb
lods
pushf
fildl
stc
daa
sbb
out
sub
dec
sarl
jecxz
out
xchg
fwait
jb
push
jl
fsubrl
int
jo
xchg
and
aaa
xor
mov
mov
jl
xchg
mov
add
jp
add
out
xchg
mov
dec
lods
jl
mov
cmp
shr
pop
test
shrb
std
add
dec
xorl
fists
movsl
sbb
push
add
movl
aad
sahf
sahf
or
mov
or
push
repnz
rorb
test
lret
jbe
xchg
out
pop
mov
push
sub
repnz
aas
sub
add
andb
leave
xchg
push
out
aam
cli
mov
push
lods
sub
sub
pop
jmp
aas
call
pop
lret
add
or
push
ret
rorl
sbb
xor
and
and
iret
inc
jae
mov
xchg
pop
andl
sarl
pop
jb
scas
fiaddl
gs
or
sbb
ret
mul
out
mov
mov
lods
push
out
xor
dec
stos
add
inc
inc
mov
pop
lcall
clc
jnp
ds
out
pop
roll
inc
push
les
xchg
xchg
pop
iret
push
dec
in
inc
cltd
test
inc
pop
fstps
fdivrs
or
jl
and
int
cmp
aaa
and
inc
call
loope
and
loope
fistpll
or
add
cmp
jbe
movsb
sbb
xchg
jecxz
sti
stos
mov
sub
pop
lcall
sub
jb
mov
ja
mov
arpl
ret
mov
pop
mov
dec
in
or
add
inc
sub
jbe
xchg
lcall
inc
xor
pop
cwtl
stc
cli
inc
dec
sbb
out
cs
adc
and
push
pop
and
add
popa
in
mov
sbb
int3
shll
inc
push
in
sbb
jp
xchg
sub
cmpsb
adc
mov
lods
push
cs
insl
stc
xchg
lods
cmp
push
test
pop
xor
aad
cmp
or
addr16
jne
mov
mov
xor
int3
add
out
jno
dec
lea
cmp
sub
sahf
divb
xor
pop
aad
lds
xor
aad
add
or
insl
add
in
push
xchg
pop
lret
test
fsub
into
and
cmpsl
ja
and
mov
sar
push
int
lds
xchg
jno
mov
das
pop
and
inc
test
data16
push
movsl
jnp
pop
pop
xlat
cmpsl
xchg
push
ret
mov
xchg
bound
xchg
mov
vorps
pop
movsb
fdivs
xor
pushf
lahf
dec
fs
xor
push
cmpsb
mov
gs
xchg
inc
push
add
lock
inc
mov
xor
outsb
imul
pop
out
aad
xor
mov
cmpsb
fbstp
stos
pop
dec
icebp
mov
push
push
adc
pop
adc
sub
and
jae
sarl
lretw
mov
push
pop
dec
out
idivl
mov
xchg
outsl
dec
jmp
mov
test
and
std
xor
push
and
jo
clc
or
lods
imul
cmp
addl
or
jp
cmp
fisttpl
cmpsb
inc
out
scas
push
insl
inc
push
subl
loopne
lcall
mull
cwtl
das
stos
pop
mov
cmp
mov
test
jle
mov
popa
imul
cmp
insl
lret
inc
inc
jo
mov
scas
int
adc
stos
aam
fwait
push
ret
repnz
mov
imul
mov
add
mov
roll
scas
adc
pop
inc
nop
cmp
adc
aam
aaa
lods
enter
xor
shlb
bound
add
shrl
loopne
inc
jo
pop
loope
outsl
js
int
xor
pop
test
cwtl
sub
xor
insb
repnz
mov
adc
icebp
adc
iret
and
cld
roll
dec
outsb
repz
mov
xchg
popf
inc
insb
xchg
in
pop
sti
aam
jge
es
shlb
fcompl
sahf
mov
repnz
insl
mov
xchg
in
outsb
test
dec
ret
scas
lock
sbb
xor
jp
repz
mov
mov
loopne
add
sti
sbb
pop
addr16
jo
in
sbb
jle
xorl
mov
lcall
aas
loop
cs
inc
mov
xchg
inc
fcoml
sbb
dec
or
dec
sbb
mov
popf
and
sub
xchg
push
xlat
push
xchg
stc
xor
ja
add
jle
data16
bound
aaa
adc
xor
rorl
and
xchg
vpsubw
scas
lock
movsl
fildll
lock
sub
notl
xchg
test
lock
mov
inc
dec
xor
fdivrl
int3
xor
roll
into
fcmovnb
pop
cs
mov
and
add
dec
shll
pop
jnp
leave
jg
sahf
sub
out
mov
mov
les
cmp
popa
mov
imul
pop
pop
mov
cmpsb
mov
mov
flds
outsl
cmpsb
dec
fadds
scas
and
pop
iret
subl
sbb
dec
push
popa
nop
pop
fidivrs
imul
pop
push
mov
pop
pushf
or
out
jl
iret
mov
xchg
shl
fucomp
pop
xchg
cmpsb
ljmp
mov
inc
flds
in
icebp
adc
icebp
inc
push
and
inc
js
jmp
test
popa
lods
js
cltd
sub
in
jp
xor
cmp
xchg
clc
cltd
jl
dec
push
popf
or
push
add
mov
cmp
push
pop
or
push
test
xor
mov
xchg
sbb
out
pop
mov
flds
dec
inc
mov
or
popa
aaa
call
xor
data16
add
mov
ljmp
icebp
mov
mov
xor
dec
jecxz
fwait
movsl
jge
and
test
mov
into
scas
sbb
nop
jmp
adc
mov
inc
xor
mov
cltd
out
sub
or
fisttpll
pop
sub
ss
popa
call
inc
or
les
mov
lahf
xchg
lret
sbb
fdiv
fdivp
adcl
xor
ljmp
leave
mov
jg
stos
adc
add
xor
das
jmp
mov
inc
icebp
iret
jno
inc
mov
lcall
add
cmc
out
xchg
push
sarl
jb
jne
xchg
inc
jno
in
jge
add
into
jecxz
stos
jmp
in
call
pop
xchg
sbb
mov
daa
pop
in
pop
lret
sbb
xor
push
or
ja
lret
lock
inc
fildl
sub
xor
jp
jae
adc
pop
dec
xor
inc
rclb
in
insb
push
push
leave
outsb
out
push
push
in
filds
popf
sahf
pop
cmp
movsb
ljmp
sub
dec
hlt
cs
adc
shrb
jmp
push
xchg
addr16
cmpsl
loop
xor
loop
out
ret
add
lods
push
mov
push
cmp
andl
add
stos
dec
mov
scas
cmpsb
pop
clc
or
cs
sbb
add
adc
adc
cmovl
fimull
pop
sahf
cs
pop
cmp
xor
aam
fwait
int3
inc
jo
cs
mov
mov
cmpb
jmp
std
aas
push
movsb
mov
ss
pop
out
pop
adc
add
pop
imull
mov
fisttpll
push
mov
push
in
jb
cmp
nop
outsb
xchg
and
cmp
scas
mov
mov
push
call
lahf
syscall
jge
jge
std
sbb
and
ljmp
das
out
sbb
mov
and
mov
mov
xor
repnz
or
jne
lret
gs
fnstsw
dec
jns
mov
xor
cmpsb
repnz
fs
je
lds
add
popf
aam
adc
out
dec
les
nop
xchg
into
andl
and
inc
or
fstps
push
loopne
shr
aas
dec
adc
mov
pop
mov
mov
or
push
push
mov
rcll
xorb
xchg
call
mov
ja
inc
popf
mov
daa
push
das
leave
inc
scas
js
adc
push
fnsave
cli
roll
iret
repz
fists
or
out
int3
sub
or
mov
repz
push
ror
test
out
cmc
dec
sub
imul
icebp
mov
xor
leave
fwait
lds
sarb
imul
in
push
xchg
cwtl
sub
inc
xchg
adc
add
cli
aam
dec
xchg
lods
inc
iret
pop
lret
adc
mov
push
movsb
inc
cmp
aam
adc
cli
mov
out
ficomps
int
xchg
loop
or
jne
mov
sti
jb
fimull
les
cmp
jae
shrb
and
inc
in
and
sub
fsub
inc
in
int
dec
push
mov
lea
push
sub
jae
pushf
sub
cmp
jmp
popa
jno
in
in
jg
jae
mov
stc
adc
pop
addb
cmp
jmp
es
pop
sub
push
xchg
mov
mov
gs
push
mov
ja
jno
push
add
push
jp
or
push
sub
mov
cli
cmp
push
jle
push
cltd
dec
in
adc
rcrl
je
sbb
push
cld
stos
sub
xor
cmp
sahf
bound
jle
jmp
jno
icebp
sbb
lcall
imull
and
cmpsb
push
jge
enter
sahf
pop
fistpll
out
dec
cmp
jmp
sbb
push
dec
cmp
incl
xchg
sbb
xorl
enter
test
jns
adc
punpcklwd
shll
out
add
test
sti
imul
mov
jl
cwtl
sbb
sbb
push
mov
and
dec
out
push
out
mov
push
mov
fisttps
or
cltd
pop
push
fisttps
or
hlt
mov
inc
popa
cmp
je
mov
dec
icebp
cmp
sub
mov
sbb
in
fs
pop
fwait
pop
push
inc
into
add
repz
push
dec
mov
arpl
push
lcall
cmp
out
addr16
xchg
adc
repz
loopne
loop
jg
xor
pop
jle
xchg
mov
in
push
or
xlat
dec
mov
cmp
or
ret
mov
lahf
or
sti
stc
flds
test
push
sbb
or
or
adc
cltd
mov
cmp
jmp
dec
xchg
cwtl
pop
in
mov
shll
xor
cmp
push
fs
jne
mov
js
lods
pop
mov
sbb
adc
add
ja
imul
mov
lods
gs
loop
xor
outsl
ret
inc
ret
cmp
fldl
mov
notl
pop
inc
popa
dec
lret
mov
int3
pop
sarb
bound
mov
rol
dec
nop
jle
outsl
push
jbe
pop
leave
stos
inc
out
imul
lret
aas
inc
dec
jge
sbb
push
push
jecxz
lahf
xchg
push
test
aaa
mov
fsub
sbb
fcmovnbe
inc
push
add
push
adc
pop
sbbl
inc
add
ret
cmp
jmp
jmp
jo
inc
pop
mov
mov
fucomp
ja
adc
dec
sub
push
add
push
les
subl
cmp
cld
mov
add
or
sbb
xchg
iret
test
jmp
push
cmp
mov
not
lods
xchg
clc
fst
movl
ret
inc
nop
sub
pop
mov
ss
fistps
inc
int
bound
and
test
push
sub
daa
or
push
and
mov
mov
out
adc
cmpsb
adc
data16
add
xchg
jmp
pop
into
lret
mov
hlt
mov
int3
rol
mov
push
push
int3
popa
sub
and
in
dec
mov
pop
scas
or
push
lret
sub
test
sub
sbb
popf
add
xchg
or
dec
mov
dec
add
jo
mov
add
or
fdivl
jge
movl
out
add
stc
push
daa
or
sbb
test
roll
outsl
lahf
clc
mov
mov
and
aad
testl
aad
mov
sub
std
push
mov
mov
adc
dec
shl
mov
adc
pop
mov
xlat
sub
push
arpl
push
xlat
dec
xor
rcl
pop
adc
movsl
fwait
and
inc
add
rcrl
mov
test
das
cli
cmpsl
fs
jno
sbb
pop
sahf
jo
scas
repnz
addr16
fidivrs
outsb
mov
mov
out
mov
int
mov
aam
dec
filds
sbb
dec
das
fcoml
repz
mov
jl
mov
jb
xor
pop
lods
push
mov
ret
mov
negb
cs
hlt
popa
test
pop
jl
sub
addl
adc
mov
or
dec
lods
mov
sub
or
rcl
push
xor
xchg
addr16
mov
lret
jp
xchg
lods
and
pop
mov
lods
sub
aam
ss
cwtl
shlb
lea
jge
dec
sbbl
cmpsb
nop
in
test
pop
cmp
or
ljmp
sub
jnp
inc
pop
in
xchg
pop
dec
mov
pop
cs
push
andb
jbe
mov
mov
mov
nop
mov
ret
arpl
nop
cmc
bound
out
ret
lret
add
stos
insl
out
or
daa
cltd
sub
cmpsb
xchg
mov
adc
xorb
arpl
or
addb
cmp
or
sarl
and
pop
pop
std
sub
sbbb
insl
dec
mov
jb
movsb
mov
testb
mov
cmc
or
mov
out
lods
jecxz
xor
inc
or
jmp
add
and
lcall
push
call
sub
in
push
shrb
fcmovu
jb
ja
mov
jae
mov
dec
repz
pop
jns
push
dec
lcall
pop
xchg
pop
add
pop
ds
rolb
jae
jl
lea
int3
xor
pop
hlt
mov
loope
jg
in
sti
jecxz
ret
out
scas
pop
inc
add
lahf
sbb
inc
daa
lcall
je
xchg
and
clc
in
pop
in
loopne
nop
mov
sbb
pop
sub
mov
push
movsl
fimuls
jecxz
mov
inc
sarb
dec
daa
mov
int
les
sub
or
das
xchg
fsubp
pop
in
insb
and
fisttps
add
push
ljmp
push
shr
fildl
jb
lret
cwtl
imul
dec
jns
pop
jnp
psubw
addr16
push
pop
lret
xchg
adcb
adc
in
lea
pop
movsl
pop
aam
xor
stos
js
inc
xchg
sub
jg
push
push
mov
out
mov
mov
pop
js
imul
inc
out
int3
fisttpl
enter
sub
in
mov
push
ss
mov
imul
addr16
rcrb
dec
add
pop
lea
aas
cmp
add
inc
outsb
stc
mov
xchg
std
jne
imul
or
inc
cld
fnstcw
sub
outsb
mov
mov
push
adc
es
sbb
clc
insl
mov
mov
stos
or
cmpsl
xchg
lcall
add
xchg
lea
gs
xchg
in
push
jmp
and
ret
fildll
xchg
scas
fildl
shlb
scas
mov
mov
out
push
cmp
cltd
shll
inc
cs
test
xor
test
mov
mov
pop
pop
ret
lock
push
adc
sbb
sbb
call
cltd
sub
mov
xor
loopne
and
and
push
loope
out
stc
aaa
cmp
xlat
inc
or
in
pop
mov
sbb
arpl
push
loopne
es
xor
popf
sbb
or
insb
pop
and
mov
cs
mov
cli
and
out
mov
mov
inc
cltd
js
rcrb
inc
xchg
leave
outsb
push
and
inc
push
ss
pushf
mov
testl
jle
sahf
shlb
lods
mov
or
scas
xchg
andl
xchg
push
or
mov
aas
push
add
scas
pop
mov
repz
mov
orl
sub
adc
in
xchg
xor
test
shrb
dec
ret
sti
loope
das
repnz
adc
popf
inc
mov
mov
je
push
jecxz
jo
fmuls
sbb
popa
arpl
xchg
es
mov
adc
fstp
fsubl
cmp
notb
gs
ret
mov
sub
inc
pop
pop
push
sbb
adc
add
int3
ret
out
dec
dec
adc
test
rcll
mov
and
je
jae
arpl
xchg
xchg
mov
cmp
add
inc
lock
sbb
pop
inc
sbb
sarl
fmull
sbb
sub
or
js
push
lahf
mov
sbb
dec
dec
imul
in
daa
je
loopne
mov
fmul
js
mov
mov
pop
sbbl
inc
mov
mov
insb
xchg
push
mulb
adc
in
or
out
insl
cmc
xor
jmp
cmp
movsb
dec
std
and
sub
jne
mov
jmp
pop
mov
pop
shrl
es
jno
mov
inc
xor
ret
rep
movsb
js
orl
xchg
mov
jg
mov
outsl
mov
dec
pop
mov
push
outsb
inc
out
outsl
pop
pop
push
or
xor
adc
mov
cld
movsl
add
xchg
pop
jg
push
in
push
pushf
adcl
mov
inc
gs
dec
test
mov
scas
and
imul
nop
cltd
sub
adc
nop
pop
scas
insl
mov
mov
sbb
xchg
imul
lods
icebp
sbb
inc
je
push
sub
cmpsl
pop
stc
test
faddp
out
ficomps
xchg
cmp
add
push
pop
xor
inc
out
addb
dec
adc
fisubrl
push
repnz
lea
sti
out
pop
fistpll
mov
sub
dec
inc
mov
in
sbb
inc
dec
sbb
lcall
inc
mov
scas
outsl
nop
pop
stos
cmp
lahf
push
imul
imul
fwait
pop
sbb
jne
fbstp
adc
inc
pop
out
iret
push
cwtl
sub
sub
cmp
cmc
xchg
sbb
lds
mov
out
mov
push
push
xchg
xlat
cltd
xor
mov
movb
enter
cmp
popf
test
enter
cmp
pop
mov
mov
imul
cmpsb
cmpsb
xchg
lcall
pop
frstor
in
mov
out
stos
jo
xbegin
repnz
aaa
cmc
clc
push
mov
add
dec
and
and
add
popf
dec
ficomps
das
fdivl
push
inc
test
xchg
and
push
push
lea
xchg
sahf
fdivs
push
cs
pop
or
push
pop
sbb
mov
pop
push
mov
in
cmp
dec
popa
call
cltd
lret
xor
xor
fucomi
jns
jl
pop
scas
cmp
push
mov
out
sub
and
adc
sub
icebp
sub
nop
pop
inc
loopne
adc
sub
jb
mov
jge
jmp
movsb
cmc
shll
mov
inc
rol
mov
lock
div
mov
xchg
stos
rclb
and
mov
ljmp
mov
or
push
mov
arpl
mov
neg
hlt
dec
icebp
sub
out
mov
mov
aam
push
dec
and
in
loopne
insl
in
negl
sub
jg
push
sub
mov
in
ds
enter
mov
fcmovu
mov
jo
xchg
inc
mov
stc
sbb
sbb
mov
cmpsb
loop
roll
push
adc
xchg
sub
add
adc
fistps
adc
xor
jno
dec
shl
lods
ljmp
mov
cmp
dec
inc
cmpsl
add
mov
insb
and
dec
les
outsl
push
je
pop
loope,pt
aam
fstps
adc
xchg
xor
mov
mov
dec
and
xor
dec
add
lock
aaa
fcmovnb
jmp
inc
loopne
call
inc
or
rcr
testb
jge
push
add
sub
rcr
arpl
dec
and
ret
pop
pop
cmpsb
adc
push
inc
push
imul
xchg
push
sub
sahf
jecxz
xor
xorl
or
mov
xor
pop
icebp
aaa
clc
idivl
xchg
daa
or
ret
and
cmp
outsl
xchg
push
jno
iret
jnp
mov
stc
xchg
in
xchg
out
cmp
cmp
pop
lods
xor
stos
in
mov
push
mov
sbb
insb
cmpsb
outsb
inc
test
je
cli
dec
rorl
in
mov
dec
push
clc
sbb
or
outsb
pop
in
jo
sbb
nop
fs
or
popa
push
jbe
fistl
push
sti
xchg
push
adc
arpl
lret
dec
dec
sub
push
and
pop
push
shlb
dec
js
into
mov
add
shl
push
push
sbb
jae
test
bnd
mov
setl
jg
push
pop
add
pop
out
jne
add
add
out
les
insl
out
inc
sarb
pop
movsl
xchg
test
aaa
mov
dec
sbbl
js
inc
push
xchg
jb
sub
js
sub
dec
xchg
inc
mov
and
cli
mov
adc
and
xchg
mov
sbb
cli
nop
pop
and
mov
cltd
and
mov
hlt
test
lret
lret
pop
mov
call
mov
fisttps
mov
pushf
lds
int
rcl
mov
push
and
xchg
dec
repnz
pusha
icebp
dec
daa
jne
out
inc
je
sub
and
pop
call
xchg
pop
aad
add
mov
xchg
xlat
add
sub
int
idivl
js
mov
fs
pop
das
hlt
sub
loop
scas
sbb
xchg
jae
in
cmp
sub
ret
xor
outsb
push
jns
ror
add
ss
and
rorb
xchg
dec
mov
mov
adc
inc
add
pop
adc
ds
dec
and
dec
pop
add
jmp
dec
icebp
mov
xchg
xchg
jae
jg
push
pop
dec
and
ja
je
push
fwait
push
aaa
push
mov
mov
fcmovnbe
add
xchg
jmp
jle
add
stos
in
cmc
jnp
xor
insl
fcmovne
add
jno
roll
ret
pop
cltd
or
popa
sarb
ja
addr16
lar
cmc
add
pushf
hlt
dec
mov
ret
test
pop
das
sub
adcl
jg
popa
aas
mov
pushf
in
test
push
inc
xor
lds
in
pmaxsw
or
inc
lret
das
and
mov
icebp
xlat
cmpsl
cmc
xchg
pop
lds
pop
cli
arpl
lods
mov
or
mov
sbb
push
xor
sub
jns
outsb
sbb
imul
xchg
es
sarl
xor
xchg
xor
add
lods
xor
jnp
push
popf
ja
fs
add
cwtl
rol
inc
in
out
test
sahf
mov
mov
call
dec
xor
push
loopne
in
test
sub
arpl
das
shrl
mov
pop
push
pusha
mov
test
cmpsb
je
push
cltd
cwtl
cmc
pop
sub
adc
xor
fsubs
add
inc
sub
push
mov
inc
hlt
or
aam
bound
push
mov
outsl
cmp
inc
lcall
out
or
sub
xchg
dec
lods
mov
arpl
add
mov
add
push
sbb
mov
mov
push
cmp
movsb
mov
xchg
aaa
cmpsb
lcall
pushf
aad
inc
jmp
daa
pop
mov
ss
out
jl
pop
jge
sti
push
shll
mov
mov
test
mov
jnp
test
out
and
arpl
sub
insb
xchg
cli
or
inc
jecxz
sbb
sahf
sbb
mov
mov
add
or
rol
enter
push
push
jecxz
mov
dec
push
xor
jo
hlt
sub
and
outsb
in
gs
movsb
jae
lahf
mov
testl
in
fmuls
or
sbb
pop
ret
fisttpl
mov
push
pop
mov
xchg
mov
xor
jle
xchg
and
daa
mov
fmull
fidivs
inc
call
and
inc
mov
js
bound
in
xlat
dec
jecxz
sub
jmp
mov
mov
jae
in
sub
and
pusha
push
lock
gs
push
test
push
add
movsl
mov
and
rcrb
shrb
fstpt
ret
loop
and
and
and
inc
fcmovu
test
mov
in
std
xchg
inc
outsb
inc
adc
xchg
cmc
push
lods
xor
xor
mov
cmp
cmp
sbbl
test
loopne
or
cmpsb
sub
cmp
dec
jb
xlat
xchg
mov
lods
fisubl
lock
inc
dec
leave
inc
outsl
mov
jmp
mov
enter
sbb
dec
das
movsl
mov
push
inc
mov
adc
xchg
js
push
sarb
jno
roll
xor
add
cmp
scas
je
xor
fldl2t
and
push
xor
and
push
inc
xchg
inc
dec
push
decl
lods
js
sub
dec
les
push
fisubs
lret
mov
bound
sub
bound
lock
xor
das
and
icebp
push
jne
lea
into
xor
test
sub
insb
pusha
stc
push
fildl
clc
add
repz
jg
and
fdivrs
lds
xor
std
cld
mov
add
mov
jp
int3
imul
clc
fwait
sahf
fs
test
ret
xor
jae
sti
roll
jo
mov
jno
adc
in
dec
ficoml
push
adc
push
mov
lods
in
pop
dec
enter
mov
sbb
stos
lds
adc
cmp
jno
or
push
out
dec
mov
and
test
dec
in
xor
aam
inc
pop
aaa
rol
or
mov
push
push
cld
xor
ja
arpl
jo
stos
dec
rcrl
aaa
cmp
pop
fdivrl
xor
sti
stc
gs
je
dec
mov
cmp
dec
mov
in
imul
repz
iret
outsl
movsl
cmp
push
mov
popa
les
testb
ret
sbb
pop
incl
scas
fs
add
push
push
pop
or
inc
ljmp
mov
and
int
je
mov
push
and
psubsb
leave
xor
flds
lea
hlt
cltd
adc
inc
dec
sbb
lahf
inc
and
sub
test
ficoms
and
adc
and
add
jbe
pop
mov
xchg
addb
aam
sahf
add
adc
mov
lods
inc
and
push
jae
out
push
xchg
popf
mov
add
inc
rorl
add
sub
cmp
scas
insl
test
mov
stos
xor
xchg
mov
add
lcall
aam
mov
imul
sub
nop
or
xor
push
mov
js
cmp
cld
add
and
cs
xor
arpl
xor
or
push
aas
jp
scas
and
push
dec
into
test
test
xchg
out
std
push
into
mov
dec
aaa
jg
sarl
fs
cmp
inc
shrl
mov
mov
sbb
ret
pop
ror
adc
pop
ja
lods
lds
popa
daa
inc
inc
cmp
imul
cmpsl
outsb
mov
sub
aaa
jno
daa
stos
adc
mov
inc
sbb
into
ds
out
xor
stos
movsb
sbb
in
bnd
cmc
insl
adc
sahf
outsl
mov
fs
mov
fwait
mov
fnstcw
les
inc
fildl
addr16
ja
mov
leave
decl
fistps
dec
xchg
sub
xor
movsl
cmp
pop
fs
mov
out
mov
adc
ljmp
jmp
cmp
fildl
insl
ja
repz
xchg
cmp
push
aam
xchg
inc
lods
mov
push
dec
jb
xor
ljmp
iret
xchg
cld
fistpll
jno
cmp
repz
or
or
cmp
rorb
push
ret
push
sti
stos
mov
sub
jp
ret
test
push
xchg
pusha
rolb
movsl
gs
sub
inc
mov
leave
or
in
cs
fimuls
sbb
xor
aam
aad
jg
loop
or
mov
mov
or
popf
mov
fimull
ret
jb
and
cli
mov
test
mov
fadds
xchg
hlt
jg
and
lds
dec
cmp
sbb
add
inc
cmpsl
rcrl
mov
pop
add
push
int3
loopne
mov
imul
out
and
mov
or
mov
mov
pop
xor
leave
addr16
xor
js
inc
aam
in
sti
or
jnp
sbb
mov
jg
rolb
negb
cmp
xchg
jp
aaa
mov
push
cmp
adc
loop
jnp
sbb
sub
adc
add
orl
mov
les
push
outsb
loop
mov
shlb
pop
aas
push
sbb
ljmp
lcall
in
ds
dec
lds
adc
scas
bound
cmp
cmc
popa
xorl
lods
aad
loope
adc
mov
fcomi
push
stos
xor
testb
dec
sbb
or
daa
insb
mov
into
and
jno
cli
test
addr16
or
insl
das
inc
mov
pusha
xchg
cmp
pop
les
aam
mov
push
incb
lock
pop
and
jae
fwait
cmpsb
wrmsr
fadds
mov
jne
push
cmp
negb
sarb
imul
jg
push
enter
jl
fwait
ror
add
inc
lret
mov
pop
mov
sbb
stos
or
in
and
js
mov
add
test
mov
lret
jp
inc
jnp
outsl
mov
add
inc
hlt
inc
and
fsubrl
std
lds
pop
loope
cmpsl
mov
in
test
out
negb
lods
mov
lds
rorb
or
push
loop
fstl
popa
out
add
adc
inc
scas
or
lcall
and
sbb
dec
jecxz
or
xchg
jbe
jp
add
out
mov
incb
xchg
mov
stos
push
and
push
mov
push
dec
sub
fdivr
icebp
xchg
mov
cwtl
mov
add
mov
cmp
cwtl
and
sbb
pop
or
stos
push
sarl
sub
jns
and
ficoms
xchg
movsl
inc
xor
movsb
fwait
ret
ret
sahf
sub
test
or
mov
or
ljmp
icebp
jmp
inc
inc
or
mov
pop
int3
leave
mov
les
pop
adc
das
jb
jp
into
sub
imul
mov
sbb
pop
out
nop
sbb
ret
pop
ja
inc
jle
pop
in
stos
addr16
xchg
sbb
jmp
hlt
dec
out
sbb
dec
mov
je
int3
incb
std
mov
fmull
outsb
cli
mov
pusha
lret
lock
stos
fisubs
jnp
idivl
ffreep
pop
sub
outsb
stos
add
push
pop
push
bound
xchg
in
add
push
ss
ljmp
push
outsb
mov
push
mov
xor
or
sbb
ret
decl
pop
sub
sar
cmp
dec
arpl
packuswb
subl
pop
nop
adc
or
or
lock
shrl
jbe
loopne
repz
shll
or
fdivrp
cmc
cwtl
push
aas
sub
lcall
sbb
pop
xor
jnp
outsl
mov
sete
adc
fsts
mov
xor
mov
jecxz
mov
adc
and
jmp
push
cld
add
push
in
test
dec
add
mov
les
loop
jo
jl,pn
fnsave
adc
loop
cmpsl
mov
cltd
mov
jne
mull
adc
adc
mov
mov
xchg
or
mov
mov
cmp
aad
mov
mov
or
ja
dec
add
fs
sarl
imul
call
insl
sbb
jecxz
mov
insb
addr16
and
ja
mov
into
iret
mov
insb
pushf
push
out
lock
out
clc
jle
mov
inc
in
sub
fdivs
or
repnz
imull
or
pop
adc
call
aaa
mov
stos
andps
push
rorl
mov
cmp
dec
pop
adc
ja
cltd
ffreep
dec
jge
sbb
jnp
enter
aad
sbb
popf
lcall
sbb
pop
jle
dec
stc
dec
cmp
ja
push
fcmovb
sbb
sub
jnp
mov
mov
out
xchg
aam
pop
fcoms
popa
lcall
cmp
fistpll
out
data16
and
adc
pop
pop
test
outsb
add
xchg
dec
ffreep
and
popf
sti
fwait
test
push
xchg
mov
fstp
pusha
xchg
push
out
xor
push
xchg
push
das
enter
xor
xchg
mov
pop
nop
adc
or
xor
mov
pop
cmp
in
dec
cmp
mov
or
insl
dec
iret
adc
lds
jbe
pop
mov
jmp
testb
out
xchg
dec
shl
hlt
cmpsl
and
mov
repnz
inc
int3
pop
sbb
mov
or
dec
maxps
fs
clc
repnz
cld
push
pop
xor
jne
cmc
int3
jecxz
adc
push
popf
pop
pop
push
pop
ret
idivl
test
int
adc
lods
xor
cld
sbbl
xor
loop
push
mov
hlt
xchg
inc
rorl
dec
stc
fsubp
lret
test
dec
cmp
cmc
fstpt
mov
jp,pn
lret
ds
bound
add
cmp
sub
pop
lea
lds
mov
sub
movsl
lods
mov
pop
sub
push
sti
sub
pop
xchg
roll
shl
mov
outsb
cli
and
pusha
or
mov
enter
fldt
jge
mov
int
or
xchg
jne
sbb
sti
repnz
and
ret
dec
push
cmpsl
lcall
mov
push
mov
leave
and
shrb
cmpsb
pop
pushf
pop
out
and
int
or
xchg
or
push
push
ljmp
ret
fcoml
int3
add
xchg
fwait
repnz
ss
mov
cltd
xor
fisubl
sub
aaa
pop
js
cmp
movsl
cmp
sbb
push
mov
and
mov
push
xor
adc
inc
sbb
loopne
dec
nop
in
cltd
rclb
test
sub
clc
bound
in
scas
pop
loope
test
cmpsl
rol
lock
imul
xchg
jmp
sbb
sub
icebp
push
dec
xchg
pop
lods
jno
les
mov
movsl
addl
adc
in
daa
pop
fisubrl
sbb
sbb
idiv
out
cmp
das
jge
outsb
dec
push
ljmp
cmp
push
mov
xchg
sub
add
and
ja
lea
in
test
mov
inc
popa
js
xorl
inc
adc
sbb
popa
xchg
sub
mov
push
pop
adc
or
sahf
add
mov
sbb
popf
and
in
cmpsb
jge
dec
cmp
cmpb
std
mov
sub
jmp
pop
outsb
jmp
out
jl
cltd
dec
das
add
scas
xchg
das
test
mov
dec
and
or
pop
push
jnp
pop
cmp
in
and
jp
sti
sbb
aaa
in
cmp
clc
ret
jle
sub
mov
loope
outsl
pop
jae
scas
pushf
sbb
push
push
shll
pushf
sbb
lds
pusha
pop
pusha
in
adc
push
cmp
cmp
movsl
mov
std
sti
xor
lahf
int
pop
or
cmpsb
movsb
sub
je
sub
jecxz
je
jl
lret
andl
ljmp
pop
into
cwtl
lret
dec
xor
inc
push
loop
mov
pop
xlat
dec
sahf
scas
pop
loope
orl
orl
xor
arpl
cwtl
rolb
inc
pop
test
testb
sti
xchg
sbb
lods
cmpsb
gs
inc
jmp
and
xchg
pop
push
sub
mov
xor
push
jp
push
mov
cwtl
pop
es
lret
mov
ss
cltd
fstl
iret
aam
xor
popa
push
sbb
lret
lods
hlt
jmp
and
shrb
es
mov
adc
adc
dec
pop
pop
inc
outsb
sub
mulb
jae
jl
out
cmp
mov
orl
test
test
dec
mov
fnstcw
fs
pushf
sub
inc
sbb
gs
into
stc
in
mov
ss
xor
push
adc
cmpsb
cli
pop
scas
xorl
jmp
push
ret
mov
out
sub
rcl
es
mov
lahf
push
xchg
xchg
xor
movsb
leave
pop
cld
push
or
aas
sub
inc
xchg
mov
neg
aas
jne
inc
inc
arpl
mov
jo
pop
dec
pop
enter
push
fbld
mov
mov
int3
fldenv
xor
jb
lock
jno
add
leave
pop
rcr
ficomps
stos
lods
pop
push
mov
jae
sbb
mov
cmp
inc
mov
inc
rcr
pop
and
mov
and
out
bswap
sahf
into
fimull
cmp
stos
les
cld
repnz
aas
ja
pop
sahf
xchg
xchg
aaa
sbb
mov
out
push
add
sbb
cld
call
adcb
stos
rcrl
pusha
or
gs
ja
mov
mov
or
imul
pop
push
adc
scas
dec
mov
fnsave
or
outsb
les
sub
xchg
call
or
sub
dec
inc
aas
lret
cmc
pop
int
mov
add
pop
in
inc
lahf
movsl
mov
rcll
lret
mov
mov
sbb
add
cmpsb
bound
fwait
push
popa
je
push
into
fsubl
dec
nop
add
imul
pop
lret
fcmovu
sbb
add
cmpsl
outsl
jecxz
pushf
fists
mov
pushf
inc
or
aas
mov
incl
adc
pinsrw
iret
int
out
sub
mov
sahf
roll
fadds
int3
inc
cs
insl
push
pop
xor
mov
fisttps
add
push
notb
js
repnz
mov
cmp
mov
mov
pop
sub
cmpsl
enter
push
push
std
fists
mov
mov
mov
xchg
jno
in
push
cltd
das
sbbb
dec
and
daa
sub
in
out
lds
push
mov
frstor
jge
mov
ds
in
stos
int
jno
aad
jecxz,pt
ret
add
imul
cmpsb
and
cwtl
mov
dec
popa
dec
orl
int
repnz
xchg
sbbb
clc
lret
rcrb
mov
jb
pop
stos
sub
inc
dec
push
mov
rcr
dec
std
or
stos
add
loopne
test
mov
addb
and
fmuls
daa
ss
in
pop
roll
int
pusha
push
mov
in
sti
push
iret
fcmovnb
and
adc
dec
aam
mov
stos
imul
data16
jns
loop
stos
xor
adc
sti
xlat
outsl
jne
mov
pop
negl
xor
xchg
in
imul
and
and
add
aam
sub
pop
sub
test
mov
cld
jo
adc
pushf
adc
inc
pop
dec
enter
ss
pop
out
stos
imul
lcall
mov
loope
idiv
pop
cli
mov
scas
sarl
scas
lcall
outsl
push
cmpsl
or
ficomps
pop
repnz
adc
mov
sub
inc
xchg
push
fnstcw
and
mov
in
mov
sub
fsubs
dec
std
std
push
cmp
ret
scas
pop
push
mov
mov
fmuls
dec
push
dec
sahf
add
repz
pusha
adc
into
sub
push
adc
sbb
push
mov
xorl
sbbl
mov
sahf
and
sub
add
dec
sub
iret
or
jne
mov
push
jle
and
mov
scas
and
lods
inc
add
mov
xchg
sahf
mov
scas
xchg
add
loopne
xor
and
jmp
and
cs
xor
out
xlat
rclb
adc
fsubl
in
push
lods
iret
add
adc
stos
mov
or
sbb
outsb
dec
clc
xor
xlat
in
pop
cmp
aad
movsl
negb
notb
jnp
sti
ss
sbb
cmp
rcll
lret
pop
ret
shlb
gs
fs
daa
and
inc
push
pusha
dec
test
mov
lahf
add
shlb
jl
sub
popf
std
or
sub
jecxz
loope
xor
add
or
cmc
push
add
and
sub
aaa
dec
loope
sbbb
sbbl
dec
jb
int
arpl
test
dec
int3
mov
ja
sub
fcmovnu
push
test
sub
cwtl
and
notl
sbb
arpl
mov
rol
push
adc
sahf
xor
shl
imul
imul
sub
or
clc
jno
frstor
or
sub
fwait
mul
pop
mov
mov
adc
scas
ds
xchg
mov
mov
stc
xchg
push
js
add
jne
jl
lock
and
or
pop
push
fwait
ss
mov
sbb
cmp
xchg
test
jecxz
imul
xchg
add
xchg
testb
fistpll
jbe
iret
inc
popf
aam
fidivrl
cltd
arpl
out
imull
std
lret
dec
roll
inc
lock
in
add
rcr
in
insl
sub
fldenv
fdiv
jge
ljmp
inc
imul
sbb
mov
mov
jmp
into
cmp
push
shll
adc
aam
add
lret
mov
lret
outsl
cmc
push
ljmp
push
cmpsl
xchg
cld
and
xorl
cmp
clc
popf
pop
into
cwtl
aas
out
js
cmpsl
xchg
or
mov
cwtl
inc
adc
mov
jb
mov
fnstenv
push
psubd
outsl
xor
pop
dec
div
sub
addr16
add
cmp
movsb
dec
pop
pop
inc
lds
push
push
jge
dec
pusha
sarb
daa
sbb
sbb
scas
jg
sahf
loopne
repz
fldt
jle
or
mov
jg
sbb
dec
imul
js
sub
adc
imul
std
in
aam
sub
sub
xor
fcoml
es
or
pop
or
adc
out
push
and
xor
and
push
mov
mov
ret
adc
xchg
push
ficoml
inc
push
aas
popa
mov
sub
movsl
lret
cltd
pop
or
popf
cmp
mov
stos
push
jg
or
repz
dec
mov
xchg
push
xchg
mov
mov
sub
cli
mov
xor
push
out
dec
sti
xchg
sub
and
sbb
sub
mov
iret
dec
sbb
mov
push
sub
stos
fcomps
shl
jae
iret
sbb
aad
int3
popf
or
fisubrl
fsub
push
int
xlat
inc
imul
mov
int
jae
sbb
push
sub
and
call
mov
fdivrs
lret
lea
jmp
sub
dec
xchg
dec
sbb
adc
aas
sbb
arpl
xor
xchg
dec
mulb
inc
mov
sbb
sahf
inc
iret
inc
mov
lods
jle
push
jecxz
push
hlt
popa
dec
lds
repnz
add
and
push
insb
sbb
clc
adc
addr16
adc
xor
and
dec
mov
add
cmp
cmp
rorl
lret
out
jmp
aaa
cmp
add
adc
test
cmpsl
or
jl,pt
ja
inc
pusha
push
mov
jne
lds
xchg
es
xor
lods
mov
fcoms
jns
rol
clc
shl
pop
adc
pop
mov
mov
pop
inc
lret
dec
hlt
jns
addr16
rorl
push
fcmove
xchg
call
pop
sbb
ds
mov
jno
and
addl
jge
hlt
adc
js
imul
fldt
das
and
sbb
mov
cmpsb
lret
loop
fadds
cmp
and
arpl
stos
jge
jle
push
test
push
outsl
inc
adc
cld
and
adc
jns
outsl
dec
mov
into
xor
lret
fcom
aas
lret
popf
imul
loope
mov
ds
or
scas
mov
ret
push
enter
notb
aas
fiaddl
push
daa
inc
scas
stos
lea
mov
xor
bound
movsl
in
jnp
cmpsb
in
sbb
mov
ret
push
sub
sub
mov
cmp
pop
cmp
mov
jo
adc
icebp
fldcw
dec
push
sub
mov
loope
xor
dec
fwait
testl
lahf
sti
int3
pop
cmp
insl
scas
mov
xchg
mov
pusha
nop
nop
xorl
mov
je
cmpsb
inc
in
mov
das
ret
dec
push
scas
mov
cmpsb
mov
mov
pushf
mov
mov
xchg
fs
mov
jnp
repnz
inc
dec
pop
and
pop
lds
dec
jbe
js
shl
add
mov
cwtl
sub
cmpsb
push
pop
cld
mov
imul
inc
sub
mov
imul
cmp
fildll
fsubrl
je
ret
xor
data16
fcoml
mov
test
cmp
cmp
and
xor
insb
in
imul
pop
xor
les
mov
popf
cmp
fidivl
mov
leave
in
test
sub
dec
popw
rolb
aas
mov
ljmp
fmulp
cli
pop
hlt
ret
sbb
in
dec
out
jp
rcl
xchg
mov
in
push
test
push
cltd
in
push
or
inc
mov
jl
jmp
mov
shl
hlt
sub
in
loop
adc
fcomps
pop
push
mov
push
or
pop
cmp
inc
push
movsl
cld
test
in
daa
inc
mov
jnp
adc
sbb
test
into
add
sbb
mov
or
mov
xor
sbb
lds
data16
push
adc
test
dec
jo
xor
cli
cmc
insl
arpl
aas
test
mov
test
mov
cld
shll
sbb
stos
cmc
adc
xor
into
mov
push
outsl
and
add
aam
push
loope
aaa
xor
adc
scas
or
jle
inc
iret
mov
dec
xor
jne
mov
call
xor
outsb
gs
jno
xchg
ret
loope
mov
sbb
xor
inc
pop
jb
add
fisttps
mov
pop
pop
jnp
call
leave
fs
inc
cmp
xchg
imul
mov
pop
rolb
jo
pop
imul
ljmp
in
aas
mov
mov
mov
mov
add
cwtl
notb
inc
mov
inc
mov
in
orl
mov
rcr
pop
xorl
in
loopne
add
test
nop
sub
inc
cwtl
nop
lea
icebp
dec
pop
inc
cmp
mov
jns
sub
arpl
lret
lret
jge
jmp
xor
lcall
and
sbb
leave
mov
pushf
test
stos
mov
cmc
jbe
dec
lahf
xor
pop
pop
scas
dec
das
jno
cmc
sbb
mov
mov
out
mov
call
rorl
movsb
cmp
mov
loopne
into
ficompl
fsubrp
pop
push
sbb
mov
lds
jne
mov
sub
add
pop
test
sub
test
fnstenv
add
xor
call
mov
xor
push
popa
and
sbb
daa
cmp
test
repz
jecxz
mov
inc
xchg
mov
cmp
iret
es
mov
in
addr16
dec
inc
ficomps
jecxz
and
pop
lea
leave
mov
test
mov
stos
push
or
cmp
loop
xchg
ja
adc
pop
push
scas
mov
out
in
and
loope
inc
cmp
lret
cmp
xchg
or
lods
ret
out
clc
pop
inc
cwtl
jns
inc
test
push
fildll
and
fneni(8087
fwait
insb
fsubp
insb
addr16
push
rorb
movsl
mov
sti
jb
xor
push
inc
push
sub
jnp
sub
loop
jmp
inc
scas
or
scas
test
leave
inc
stc
scas
lds
fwait
ret
or
xchg
xor
add
mov
sbb
xchg
push
fistps
pop
pop
adc
mov
inc
jge
jne
cmpsb
inc
ds
adc
dec
mov
enter
fidivl
adc
out
out
pop
lock
mov
das
cli
mov
fldt
addr16
sti
push
xor
pop
dec
repz
pop
xchg
pop
xlat
adc
mul
sbb
jecxz
in
cwtl
ret
pop
mov
xor
mov
popf
cs
mov
or
mov
xchg
jecxz
stos
lods
cmp
adc
ret
and
mov
lret
push
pop
jl
jmp
loop
out
aad
out
inc
dec
fucomp
or
into
lock
inc
pop
loopne
fisttpl
fisttpll
enter
inc
jb
mov
cs
sub
in
ds
xor
mov
imul
daa
or
push
call
dec
mov
cmp
xchg
dec
or
aas
icebp
lret
clc
dec
rol
push
or
push
arpl
clc
js
fisttpl
push
roll
ljmp
push
dec
popa
inc
loope
lock
aaa
cwtl
sbb
or
cmpsb
mov
xchg
dec
sub
lods
ja
mov
dec
int
lds
lock
orl
lods
stc
in
pushf
add
aas
mov
les
push
aad
das
push
lret
arpl
aaa
xor
cmp
pop
fwait
push
and
sub
xchg
dec
sbb
in
iret
pushf
xor
in
push
leave
scas
call
stos
lods
mov
push
aam
fcoml
sbb
inc
adc
jae
lahf
add
mov
in
pushl
xor
pop
and
les
enter
subb
andl
inc
cltd
mov
stc
mov
or
scas
cld
inc
mov
addb
movsb
dec
icebp
and
sbb
in
cmp
and
dec
or
ret
out
shrl
pop
pusha
mov
jp
jb
push
and
xor
std
int3
loope
dec
sub
and
or
ret
sbbb
clts
jge
cmp
mov
ja
xor
xchg
xchg
dec
cmpsb
arpl
dec
push
dec
fidivl
mov
mov
sub
xchg
int
xchg
jno
inc
adc
enter
add
inc
mov
push
mov
cmp
push
push
mov
adc
nop
xchg
inc
push
ret
mov
sub
fisttps
aas
testl
mov
cltd
mov
jns,pt
stos
loopne
xchg
cmc
push
mov
outsl
push
or
jbe
js
fs
test
aas
mov
sbb
mov
xchg
jecxz
and
iret
inc
fiadds
mov
icebp
jmp
and
xchg
sub
push
fdivp
movsb
dec
sub
js
test
pop
pushf
mov
in
stos
je
push
jnp
xchg
aas
int
lods
mov
fists
ficomps
inc
xchg
inc
jmp
mov
or
stos
pop
shl
andb
mov
ds
or
pop
lret
les
xor
aas
or
or
rcr
sub
pushf
sarb
inc
xchg
mov
and
xchg
lds
and
pop
add
fwait
push
cmp
mov
jns
icebp
ljmp
mov
fildl
loope
and
inc
jne
jns
cmp
cmp
into
lcall
shlb
insb
xor
push
xchg
and
shr
xor
xor
stos
test
dec
sahf
adc
mov
pop
add
frstor
test
dec
push
outsb
inc
cld
popf
push
movsl
out
push
cvtdq2ps
jnp
xor
daa
mov
sbb
idiv
jnp
cmp
icebp
rcrl
ljmp
sahf
or
aad
mov
xchg
mov
int
mov
gs
in
aad
dec
or
enter
shrb
aas
xor
add
sbb
adc
outsb
mov
fs
sbb
inc
fdivrs
out
xchg
xlat
inc
mull
loopne
leave
add
out
lcall
cmp
aas
pop
jmp
out
jg
fldlg2
aaa
daa
dec
cmp
and
or
jae
push
rclb
and
out
mov
lahf
push
xchg
mov
test
or
pop
adc
or
sbb
mov
mov
add
mov
icebp
addl
sub
mov
or
or
cmpsb
stos
mov
jnp
mov
sub
mov
inc
out
pop
lds
in
cmp
movsb
lock
fildl
inc
inc
cmp
mov
cmpsl
fstl
mov
insl
mov
cltd
pop
je
add
push
add
adc
push
into
inc
insl
xor
jbe
sbb
sbb
dec
cld
mov
sbb
sahf
stos
shrl
das
mov
cmp
push
mov
rcl
mov
jae
cmpsl
repnz
cmp
pusha
pop
insb
mov
bswap
out
shlb
dec
in
ret
push
daa
dec
mov
dec
pop
movsb
push
push
dec
jmp
add
repz
cmp
push
sarb
arpl
iret
mov
mov
adc
pop
adc
gs
and
sbb
pop
sub
arpl
scas
filds
out
jl
and
dec
xor
and
xchg
push
pop
pop
scas
xchg
movsb
bound
scas
xchg
les
rcrb
push
cmpsl
dec
cmp
js
scas
cmpl
ret
dec
cmp
imul
sub
mov
push
jp
pop
aaa
addr16
push
mov
sti
xchg
lahf
sarb
mov
daa
fstpl
mov
add
aas
jae
jbe
cmp
sahf
out
arpl
idivl
cs
ds
ljmp
sti
lret
sbb
ret
and
xorb
jne
pusha
loope
dec
xchg
jecxz
push
and
jp
cli
push
push
incl
inc
jo
lods
jg
push
pop
pop
lret
imul
sub
add
xor
lds
inc
int
adc
fmuls
or
or
mull
mov
loopne
mov
push
xchg
push
ds
adc
and
push
inc
int3
mov
inc
cmp
sbb
loope
shlb
and
mov
inc
sub
lcall
mov
adc
adc
mov
mov
cmpsl
jb
loopne
dec
mov
popf
or
bound
add
imul
mov
or
sbb
ret
and
pop
cmp
js
mov
sbbb
movsl
test
xchg
sbb
test
js
xor
adc
fsubrl
jge
cmp
sbb
xchg
inc
adcb
clc
test
cld
aad
shr
fnstcw
cli
pop
mov
pop
test
test
fdivrp
rorl
aas
stc
int3
xorb
pop
scas
push
mov
pop
adc
call
sbb
ja
in
pop
xor
popf
fistpl
out
and
dec
or
jg
pushl
adc
adc
pop
mov
imul
inc
test
cs
push
ror
mov
mov
addl
push
enter
push
sub
push
mov
fldl2t
dec
repz
jmp
shll
imul
adc
into
or
in
lds
pop
jle
out
icebp
dec
sub
jo
cli
out
inc
xchg
mov
imul
lods
push
inc
pop
mov
testl
sbb
mov
loopne,pt
js
xor
jae
subl
in
test
rorb
adc
rorb
popf
mov
add
and
in
or
cld
repz
adc
cli
loopne
fsts
sbb
sub
mov
rep
inc
push
cmpsb
sbb
jnp
cmpb
xchg
jge
cmp
fsubrs
xlat
mov
cmpb
int
cmpsb
push
insb
iret
insb
pop
lcall
jno
mov
fcomp
and
jmp
xchg
and
nop
mov
mov
test
cmp
push
stos
mov
xor
ljmp
jnp
adc
jmp
push
filds
loopne
fstl
popa
stos
ljmp
dec
push
fidivrl
add
pop
cs
push
rol
mov
jl
cmp
and
mov
cmp
adc
dec
daa
cmp
push
adc
aas
scas
mov
and
add
xchg
sub
mov
or
push
rcrb
les
movsl
out
mov
popa
dec
mov
popf
mov
decb
add
push
mov
add
cli
push
mov
xchg
in
js
push
scas
jnp
sub
push
lds
push
cmp
or
lahf
inc
jl
mov
nop
mov
mov
outsl
jne
das
adc
or
out
lret
cmp
rcrl
ljmp
jg
adc
xchg
out
push
xorb
lock
mov
insl
sub
adcb
jno
mov
fldenv
pop
cmp
mov
inc
rclb
clc
jmp
sbb
arpl
clc
ljmp
adc
cmp
adc
mov
mov
rcrl
cmp
jge
lods
imul
pop
sub
mov
addb
pop
add
xchg
jns
jg
pushf
aaa
and
push
sub
cmpsb
decl
add
pushl
loopew
mov
loop
lret
jae
mov
in
mov
ds
fisubrs
clc
mov
dec
leave
aad
aas
jp
jno
mov
push
lahf
ds
cs
pop
add
sbb
rolb
add
movsl
leave
pop
jecxz
jge
insl
jno
mov
ja
mov
xchg
jmp
jno
mov
mov
mov
cmp
add
loope
ja
cmp
xchg
scas
xchg
adc
pusha
repz
cmpl
jns
push
mov
dec
mov
jno
addr16
pop
hlt
mov
int
leave
data16
sub
add
mov
lods
data16
les
arpl
in
inc
leave
sahf
or
mov
push
es
aas
dec
jl
jnp
jge
xchg
cmp
rcrb
dec
mov
inc
dec
sub
pop
add
sub
inc
sahf
cs
jb
imul
dec
rcrb
hlt
or
sbb
xchg
rclb
jge
ret
pop
roll
je
test
mov
out
insl
xor
inc
aad
clc
xor
pushf
out
xchg
mov
test
push
lea
enter
ljmp
negb
jl
push
xlat
mov
mov
fistl
in
outsl
xchg
int3
and
clc
cmp
lcall
or
mov
addb
and
mov
xlat
mov
or
xor
xchg
xchg
cwtl
sub
add
loopne
int3
mov
pop
aaa
pop
xor
inc
pop
push
xlat
dec
xchg
pushf
push
imull
mov
pop
dec
fidivl
pushf
data16
sbb
push
sub
jmp
jecxz
xchg
and
lods
cmc
pop
xor
aad
pop
adc
xchg
xchg
mov
clc
push
push
or
stos
je
std
mov
fcoml
cli
ja
cmp
pop
pop
sti
mov
loop
xlat
push
jle
or
mov
sbb
fwait
adc
sub
and
lds
mov
out
fdivl
mov
jno
jnp
dec
leave
mov
sub
or
mov
cmpsb
repz
push
inc
push
loopne
cli
add
fsubl
movsl
dec
sbb
int
mov
push
mov
dec
sbb
xchg
jle
mov
inc
push
ljmp
jecxz
aas
xchg
ds
das
bound
in
ret
imul
call
pop
fisubl
addr16
inc
jle
mov
jne
push
rcrl
and
sbb
inc
dec
aaa
mov
jmp
push
aad
xchg
inc
or
and
push
int3
sbb
dec
sbb
mov
jne
or
mov
aad
sti
scas
pop
daa
mov
mov
outsl
inc
jns
call
sti
xlat
sub
push
popa
push
call
fcompl
lahf
or
xor
iret
cmpsl
xor
fs
add
adc
outsb
mov
pop
jne
loop
xor
test
sub
insl
mov
sbb
mov
imul
cmp
push
test
mov
jmp
cli
dec
in
fstl
jle
push
decb
shll
and
rol
sahf
inc
mov
push
mov
mov
adcl
pop
xchg
mov
cmp
cmpb
stos
fucom
cltd
xchg
xchg
cmp
ret
or
lcall
rcrl
sub
out
push
insl
sti
dec
xchg
fdivrs
sahf
fs
mov
mov
mov
cmp
mov
and
out
insl
pushf
insb
pop
mov
push
mov
iret
notl
stos
sbb
jb
movsl
add
sbb
add
inc
sbb
fisubrs
int
imul
cmc
sbb
cwtl
lret
test
inc
xchg
dec
jne
add
xchg
insb
inc
or
iret
xchg
outsb
adc
sub
pop
andl
inc
inc
dec
and
outsl
das
pop
and
es
xor
sub
adc
jecxz
stos
inc
and
pushf
adc
or
cmp
cwtl
push
jno
xlat
jo
jae
xor
test
jp
int
xchg
das
shlb
sbb
inc
stos
insb
mov
fsubl
bound
inc
adc
shll
ljmp
adc
lea
cmp
mov
and
push
nop
sbb
xchg
int
cltd
daa
mov
iret
dec
dec
rol
outsb
repnz
jnp
movsb
xchg
mov
jo
sub
pop
sub
xor
mov
add
enter
cmpsl
lcall
filds
mov
or
ffreep
ljmp
ds
push
mov
jae
clc
out
add
in
dec
insb
mull
jno
cmp
or
mov
movsb
rorb
add
movsb
pop
adc
xchg
pop
std
or
xor
into
jmp
or
roll
mov
scas
sbb
in
mov
fwait
cmpb
mov
fwait
mov
xor
out
mov
orl
sub
pushf
sarl
je
rcll
test
jp
jge
and
aad
push
in
gs
mov
add
pop
sub
out
cli
std
xor
or
xor
xchg
or
shr
xor
nop
fstpt
cs
mov
movsb
inc
ja
fimuls
mov
loope
jmp
js
add
pop
push
adc
push
sbb
jo
xchg
and
mov
stc
mov
icebp
xor
loope
outsb
rorl
fildl
jno
aad
rcl
test
test
mov
lret
shrb
mov
push
xchg
sub
and
rolb
inc
push
xchg
fdivr
mov
xor
test
dec
stos
test
jne
mov
push
movsb
ja
loop
mov
jle
and
xlat
adc
pusha
or
inc
xchg
and
pop
cmpsl
jle
mov
cmp
aas
fmuls
adc
pop
jb
testl
into
out
dec
std
sub
sub
lret
mov
inc
jl
cmp
push
and
in
das
pushf
and
cld
cmpsl
out
cld
nop
stos
adc
pusha
sarb
ljmp
inc
mov
push
and
jg
loope
sbb
repnz
imul
sub
jbe
fwait
cmp
in
cld
push
mov
sbb
addr16
lret
or
cmpsb
das
cmp
movsl
cmp
ret
sub
pusha
dec
and
jmp
add
mov
sub
jmp
fbstp
sub
sub
pushf
decl
sbb
push
add
test
shrb
push
fiadds
test
or
add
and
ljmp
movsl
push
leave
cmc
sbb
loope
xor
and
or
adcb
icebp
mov
or
add
cmp
xor
in
sub
fimuls
enter
or
mov
xchg
add
into
sti
push
popa
jbe
in
adc
jmp
pop
sbb
lods
mov
adc
out
lock
mov
and
cmp
lock
std
dec
outsb
outsl
ficompl
cmc
xchg
in
scas
sbb
arpl
shll
or
adc
mov
xor
inc
nop
scas
out
sbb
stos
movsl
fcoms
in
or
fidivrl
inc
call
data16
leave
or
rorb
cmp
hlt
sbb
xchg
pop
fcomp
push
adc
pop
sub
adc
adc
xchg
mov
ss
repnz
in
sbb
mov
dec
or
inc
stos
and
xchg
push
sbb
rcll
imul
fdivrl
lret
sub
das
push
cld
and
lret
vcvtdq2ps
hlt
inc
cli
push
inc
or
jo
lret
cmpsl
fwait
jle
push
popa
cli
jo
nop
stos
int3
and
pop
aam
pop
mov
mov
jl
iret
cs
out
sbb
jo
and
jg
pop
and
gs
xor
mov
mov
xor
jbe
nop
aaa
es
sub
std
sbb
add
push
ja
stos
mov
inc
or
les
cwtl
adc
call
jns
mov
dec
fdivr
push
cmp
or
shll
mov
dec
cmp
mov
imul
nop
mov
cmp
mov
loope
repnz
dec
dec
or
inc
mov
mov
ret
pop
inc
ret
ljmp
cmp
push
fimull
sbb
xorl
dec
jno
sbb
das
mov
hlt
sub
lock
and
mov
sbb
outsl
inc
push
test
nop
into
pop
mov
inc
cmc
into
push
cwtl
in
push
pop
pop
jne
or
out
push
aad
mov
dec
dec
mov
xor
xchg
iret
popf
scas
adc
adc
movsl
call
xor
jne
shrl
jg
testb
ret
mov
subl
shll
add
and
arpl
xor
push
test
insl
mov
leave
enter
ficompl
cs
gs
cmp
pop
gs
outsl
or
xlat
xor
xchg
sbb
outsb
adc
ret
out
cmp
mov
test
push
aad
xchg
add
xchg
xor
dec
cld
es
stos
xlat
and
lock
cwtl
std
jge
adc
cld
cmpsl
jmp
imul
inc
lods
or
or
outsl
sti
mov
arpl
lods
shlb
sub
enter
incl
mov
shrd
push
pop
or
xchg
mov
pop
aas
fadd
add
dec
xchg
push
les
dec
pop
lock
fadds
push
mov
lret
sub
imul
dec
xchg
sub
sbb
xchg
xchg
jmp
mov
das
les
sahf
adc
adc
xor
stc
mov
pop
insl
imul
fsubs
jns
leave
mov
jl
pop
and
jb
inc
or
mov
out
shll
add
jge
sub
push
sbb
and
bound
addr16
rorb
dec
add
add
add
insl
dec
cmpsl
popf
mov
ret
repz
outsl
mov
out
cwtl
sub
cmp
adc
and
pusha
push
pop
pop
or
mov
jp
icebp
cmp
mov
data16
adc
cmp
aam
inc
es
sub
adc
jae
mov
sbb
jecxz
in
mov
sahf
lret
and
add
cmp
ja
jecxz
les
pop
mov
test
push
xor
mov
push
cmp
cmp
inc
clc
and
mov
push
jmp
popa
sub
cmc
xchg
sarl
xchg
pop
clc
mov
or
mov
and
bound
out
insl
fadds
xchg
sub
mov
xlat
cwtl
dec
xor
mov
insb
dec
xchg
pop
push
xor
das
cmp
or
filds
fmulp
js
gs
cld
outsl
jle
mov
sub
xchg
rcrb
jbe
repz
orl
adcl
xchg
pop
push
pop
jmp
insb
mov
call
out
ja
lock
jbe
sarb
jle
ss
insb
movsb
out
add
jnp
icebp
add
jl
gs
mov
dec
dec
sti
test
fsubp
filds
popa
push
in
add
cmpsl
or
je
loopne
test
or
or
adc
jg
adc
pop
push
shll
jno
xor
cmc
imul
sub
ljmp
push
sub
addl
call
mov
jo
xor
pop
jecxz
sub
mov
jmp
cli
std
mov
sub
ja
add
jp
hlt
dec
push
jae
push
sbb
daa
loope
and
in
cmp
pop
lds
rclb
insl
adc
das
rolb
adc
cs
cmp
mov
movsb
xor
fldt
loope
test
rorb
push
aad
daa
out
adc
jae
lret
repnz
pop
aam
cmc
cwtl
or
push
add
push
lahf
loope
cwtl
testl
inc
xor
push
outsl
imul
push
outsb
into
xor
adc
and
inc
or
addr16
xchg
pop
push
mov
lcall
lret
adc
outsb
sub
std
jmp
jnp
cwtl
and
in
fisubs
test
f2xm1
jne
dec
sarb
test
dec
adc
mov
and
test
fwait
mov
adc
mov
jae
jmp
inc
cmp
icebp
mov
popl
xor
shl
dec
and
les
add
faddp
add
push
mov
repnz
cmp
movsb
test
hlt
add
jecxz
and
hlt
sub
pop
insb
loop
test
loope
sbb
mov
inc
outsb
sahf
int
fwait
mov
arpl
ds
jge
pop
outsl
push
hlt
icebp
xor
mov
pop
addps
dec
mov
mov
jnp
sbbb
mov
or
adc
iret
pop
jo
dec
adc
das
ljmp
mov
mov
out
roll
adc
xor
or
pop
dec
sbb
fcoml
and
lcall
ja
mov
push
pop
ss
add
xchg
rorl
sahf
inc
test
adc
cmpsl
ja
pop
lock
icebp
cmp
dec
popf
add
xchg
sbb
cmpsb
pop
es
dec
mov
inc
sbb
aam
rcr
dec
testb
sub
adc
ret
fucomi
and
jns
rcrl
xchg
jo
mov
fwait
xor
cmc
mov
add
fildl
test
fcmovnbe
mov
mov
pop
ljmp
mov
lods
out
inc
addr16
push
fildl
sbb
imul
and
cmp
popf
adcl
xor
mov
jecxz
cmp
mov
dec
sarl
fwait
pop
fxch
pop
cmp
jge
test
xchg
test
loopne
aad
mov
jb
cltd
mov
adc
mov
mov
test
bound
loop
data16
lds
ljmp
out
mov
iret
idivb
fwait
dec
pop
push
aas
push
decl
outsb
jge
fcmovnbe
jb
test
rclb
xchg
aam
es
pop
cmp
mov
std
shll
mov
roll
mov
jge
adc
das
test
add
mov
aas
jne
enter
and
int
pop
outsl
xor
jmp
out
shrb
cli
xchg
inc
mov
xor
popf
or
cmp
mov
xchg
inc
cltd
call
imul
and
cmc
pusha
cmp
bnd
outsb
xlat
leave
scas
push
and
mov
ret
mov
addr16
shlb
and
push
and
mov
scas
out
es
int
mov
sahf
clc
ret
add
and
pop
sub
add
mov
inc
xchg
push
pop
add
or
or
inc
data16
cld
lcall
lods
xor
jb
cmp
mov
xchg
dec
imul
test
fidivrs
pop
cmovl
push
lahf
cmpsb
test
xchg
dec
scas
clc
adc
xchg
rorl
in
inc
lods
dec
in
inc
and
xchg
xorl
or
dec
push
push
stc
push
repnz
mov
addb
xchg
xchg
dec
sbb
int3
inc
add
mov
fildll
push
pop
cmp
enter
xor
mov
sub
bswap
sbb
mov
or
fs
inc
push
xchg
and
mov
movsb
mov
mov
and
stos
xchg
xchg
xchg
mov
stos
daa
fbstp
cld
or
rol
pushf
cmp
loope
xchg
loope
adc
outsl
mov
pusha
jo
addr16
xchg
test
sbb
push
push
das
cltd
out
lods
inc
push
es
pop
sti
dec
outsl
and
movsb
add
cmp
mov
outsl
jl
or
bound
jo
les
ficompl
jcxz
rcrb
mov
int3
ja
adc
sbb
fsubrp
shl
scas
scas
xor
mov
add
mov
dec
xor
xchg
scas
lahf
or
neg
jge
ja
pop
jbe
mov
sbb
or
fmuls
shrb
cmp
adc
adc
push
inc
fwait
je
inc
pop
stos
adc
or
jecxz
jns
shl
push
sarb
stc
gs
fcmovnu
or
mov
sbb
and
loopne
cs
jb
dec
push
xchg
loope
pop
rclb
pop
and
push
cmpsb
das
xchg
push
cmp
insb
aaa
icebp
jbe
jnp
dec
jo
or
leave
inc
cmp
and
dec
movsl
es
arpl
or
dec
adc
adc
mov
scas
lods
arpl
iret
pop
shlb
lea
mov
shl
push
pop
and
inc
cld
mov
in
pop
mov
sbb
std
jp
mov
daa
push
inc
test
inc
push
lret
aas
xchg
xor
ss
push
jmp
push
push
sar
fadds
cmc
xor
into
fs
movsl
cmp
push
sub
into
imul
inc
leave
cld
mov
leave
enter
mov
cwtl
inc
aam
sbb
add
push
ja
popl
xor
cmp
xor
cltd
sbb
insl
xchg
fwait
add
jle
adc
iret
dec
push
pop
lock
sub
add
dec
inc
out
out
cmp
and
in
jnp
jno
mov
sub
mull
repnz
fs
cmp
mov
xor
es
cmpsl
icebp
add
sub
push
std
ds
ss
lock
sti
hlt
mov
fs
subb
aaa
stos
out
mov
dec
subb
shrl
mov
xchg
mov
sbb
out
mov
and
mov
cs
mov
xchg
jo
scas
xchg
mov
sub
sbbl
aam
adc
mov
mov
add
cmpsb
sbb
decl
xrelease
pop
jo
mov
lds
fcomps
push
loopne
loope
and
mov
out
in
popf
pop
pusha
xor
lods
push
movsb
fdivrl
stc
enter
push
notb
fnstsw
insl
out
lcall
je
arpl
sub
dec
dec
fs
push
xorb
push
or
fdivr
mov
mov
sub
lahf
aad
adc
mov
sarb
rcl
mov
sub
ror
mov
or
into
jp
test
lret
clc
enter
jg
aad
movsb
aaa
xchg
pop
push
subl
and
lret
adc
pop
jg
mov
fldt
xchg
or
ret
sub
int3
lret
mov
icebp
rolb
cmc
dec
in
lods
inc
popf
mov
aaa
outsb
mov
cld
neg
in
jb
test
or
je
aas
lea
cld
cmpsb
subb
xchg
loopne
or
and
ja
xchg
stos
push
mov
push
sub
pop
rolb
xchg
cmpsb
stos
lock
pop
pop
inc
xchg
stc
ror
imul
cmp
add
push
xor
cltd
inc
rolb
and
sub
dec
repz
mov
or
add
repnz
iret
xor
jno
add
xchg
mov
and
shl
jg
add
sub
jecxz
dec
xor
imull
add
orb
add
xchg
pop
push
addb
mov
push
repz
mov
cmpsl
mov
jb
dec
ret
push
xor
shrb
jne
cmc
jg
pop
mov
cltd
push
xor
jb
jno
push
pop
push
hlt
cli
nop
int3
imul
pushw
rep
jb
and
jno
outsb
rcrw
aad
clc
lds
xor
push
cmc
jg
les
jno
xchg
cmp
inc
repnz
or
inc
bound
dec
dec
inc
push
ljmp
lods
loop
jecxz
enter
lods
adc
out
lock
cmp
pop
jle
pushf
cmc
xchg
push
xchg
cmpl
jmp
stos
add
icebp
cmpsl
cmp
jecxz
xchg
lods
fisttps
push
loop
dec
stos
mov
cmpsb
andl
sahf
xchg
cmp
fdivs
adc
ljmp
mov
inc
jae
clc
rcll
lods
sahf
xor
scas
lds
push
sbb
jge
loope
xlat
mov
pop
je
int
cwtl
call
push
fmul
imul
mov
sbb
or
mov
ja
daa
cmpsl
cs
push
pop
outsl
cmp
or
adc
jle
mov
cwtl
mov
add
outsl
out
gs
push
xchg
shlb
mov
pushf
add
cmp
xchg
sbb
fstps
dec
cmp
add
gs
test
mov
or
mov
and
cmpsl
insb
imul
dec
rcll
gs
in
inc
sub
das
xchg
mov
out
pushf
push
nop
sub
orl
lods
cwtl
into
sarl
sti
add
das
cmc
jb
js
jge
mov
mov
lock
in
pop
adc
mov
cmp
xchg
test
enter
mov
nop
inc
outsl
int
test
lcall
scas
jo
imul
dec
cli
sbb
jae
into
adc
outsl
mov
sbb
insl
cwtl
sbb
outsb
int3
add
movsb
popf
out
pop
popf
sub
sub
mov
aaa
inc
push
nop
mov
add
imul
push
inc
sbb
push
or
and
aas
rol
cltd
pushl
cmp
sahf
lods
pop
and
and
jecxz
push
fnsave
mov
leave
jmp
popf
inc
popa
ds
add
sti
jae
adc
pop
cld
add
mov
inc
or
inc
mov
scas
loop
mov
xor
arpl
popa
loop
pop
jge
mov
rcl
jns,pn
add
ret
jmp
mov
mov
adc
lods
pop
adc
pop
flds
sbb
lea
dec
gs
or
test
ss
dec
jge
jge
xchg
stos
add
ss
lea
push
inc
lret
xchg
in
jb
push
sub
mov
inc
push
sub
cmp
dec
mov
bound
loopne
pusha
mov
fisubl
xor
mov
cwtl
imul
and
imul
lock
fcoml
push
fwait
dec
mov
rclb
imul
mov
lcall
out
js
fcoms
fiadds
pop
mov
xlat
xchg
mov
out
fsubrs
and
mov
cwtl
pushf
xor
dec
push
mov
out
cwtl
or
inc
orl
cld
out
int3
push
push
in
jae
ja
inc
stc
adc
jl
subl
sti
out
xor
lret
sbb
pop
or
and
sub
or
add
and
xchg
lock
adc
sarl
xchg
es
ficoms
data16
orb
repz
or
imul
cwtl
data16
mov
mov
ret
xor
xchg
popa
addr16
lret
mov
es
fildl
mov
sbb
addb
test
or
and
stc
pop
das
cmp
rcll
pushf
std
or
lods
jmp
packssdw
push
test
push
enter
enter
fsubs
xor
bnd
cltd
pop
and
fninit
rcll
push
push
lods
dec
mov
clc
mov
mov
pop
mov
jle
pop
and
mov
dec
outsl
js
in
clc
shrb
and
jl
es
push
ret
in
popa
loop
jmp
dec
sub
mov
cmp
les
dec
mov
shlb
jb
inc
rcll
mov
mov
lea
dec
or
or
xor
or
add
repnz
pushf
mov
ror
pop
xchg
int3
outsl
dec
push
fldcw
or
nop
push
sarb
repnz
ss
movsb
shrb
gs
sbb
and
sub
popa
push
sub
lcall
fsubr
test
hlt
xor
and
daa
test
enter
cmp
jmp
sub
jecxz
daa
std
mov
gs
mov
das
stos
dec
aas
mov
inc
test
mov
and
lcall
inc
js
pop
xchg
outsl
or
rorb
or
xor
jns
dec
dec
pop
fldt
cmp
mov
add
shr
adc
pushf
inc
stos
xor
adc
ja
and
jl
sub
xor
lret
dec
dec
sub
cmc
adc
in
add
push
daa
and
cmpsb
mulb
push
jno
xor
aaa
lret
rclb
jle
pop
movsl
push
aas
mov
mov
xchg
les
mov
idivb
xor
lret
lcall
jmp
xchg
xlat
mov
int
mov
mov
sbb
mov
push
cwtl
fsubr
add
dec
inc
pop
and
jae
adc
sbb
aam
mov
adc
push
pop
js
mov
mov
ret
push
call
lcall
push
loope
rclb
sub
addr16
or
fmull
cmp
mov
repz
or
stos
dec
movl
mov
mov
xor
push
fwait
jnp
fisubrl
adc
mov
pop
xchg
stos
ficoms
into
inc
in
mov
lret
insl
mov
stos
jp
xchg
int3
pop
and
pop
fldl
out
int
pop
orl
lcall
cwtl
cmp
fidivl
sub
mov
imul
pop
ja
movsb
mov
cli
push
pusha
cli
fsubs
pop
mov
adc
lods
sbb
dec
xchg
es
mov
jnp
ja
jl
jnp
fsubl
test
cmp
jno
fwait
pop
enter
sbb
jno
inc
insl
mov
and
push
jno
push
mov
in
in
gs
mov
add
fdivrs
out
out
stc
fiadds
pop
pop
leave
aas
into
inc
mov
nop
mov
in
movsl
pop
int3
xor
adc
push
inc
jmp
inc
cmp
push
cmp
inc
nop
pop
and
sub
jmp
mov
inc
push
sbb
andps
loope
std
clc
es
dec
mov
push
insl
sub
jae
push
sub
imul
pop
jg
lock
pop
lahf
jnp
mov
sbb
push
and
imul
mov
dec
aaa
pop
add
jbe
or
lods
out
pop
jge
dec
pop
scas
ja
mov
cmp
in
dec
push
push
jbe
push
inc
cmp
ss
iret
dec
or
imul
mov
js
sub
lcall
xor
sub
inc
aam
mov
inc
inc
icebp
fmul
dec
pop
sub
test
xorb
pop
dec
and
and
imul
push
cld
mov
daa
rclb
inc
sbb
jno
insl
mov
lods
fwait
pop
pop
lea
les
scas
sbb
mov
bound
fadds
add
sub
sbb
or
xor
leave
inc
popa
sub
jno
gs
into
es
adc
jae
mov
repnz
mov
nop
sub
fwait
loop
mov
or
mov
xor
dec
xchg
les
sahf
adc
pop
bound
mov
iret
mov
or
fdiv
fldt
lret
mov
pushf
mov
push
sbb
test
and
mov
fwait
add
mov
push
xchg
repnz
jle
sahf
pop
pop
push
jno
mov
mov
repnz
roll
insb
data16
shll
dec
fimull
xchg
push
sub
mov
and
mov
xchg
mov
mov
dec
xchg
pop
jl,pt
or
mov
cmp
loope
add
in
add
imul
mov
add
xor
pop
adc
jmp
outsl
mov
sarb
daa
sub
stos
inc
add
test
lods
jg
or
lods
in
popa
push
mov
xchg
imul
jg
or
icebp
sti
mov
andb
xor
mov
ljmp
add
or
mov
aad
fwait
adc
mov
and
mov
into
xchg
push
out
lock
sbb
loopne
lret
sbb
adc
and
ret
mov
daa
jnp
pop
ret
iret
and
inc
xchg
cmpsl
cmp
adcb
das
loop
or
add
adc
mov
aas
or
jmp
das
dec
es
or
cmc
xor
in
xchg
in
arpl
mov
and
clc
mov
daa
out
sub
imul
lret
mov
add
push
cmc
inc
mov
dec
gs
sub
push
push
dec
jbe
dec
in
fildll
leave
in
push
jle
ds
mov
insb
mov
fs
std
cli
jae
stos
int3
jo
loope
shlb
sub
jmp
enter
and
xchg
push
cmp
and
jge
lods
fildll
xor
js
inc
mov
mov
daa
scas
divl
sbb
mov
inc
ret
or
in
test
les
xchg
xor
imul
xchg
ss
jnp
push
xchg
xor
xchg
xor
jnp
sbb
sarl
enter
jle
cltd
sbb
js
inc
cmpsl
dec
pushf
insb
jns
lret
xor
add
test
ljmp
insl
adc
fidivrl
bnd
int3
jmp
lahf
out
cltd
setp
mov
mov
xchg
js
push
roll
or
xchg
aad
rcl
pop
pusha
xor
mov
sub
popf
lret
lock
gs
lcall
cmp
lock
mulb
push
pop
fucomip
pop
test
pop
add
mov
cmp
arpl
cltd
jae
xchg
ret
lret
pop
cmp
out
faddl
test
mov
negl
int3
movsl
cmc
push
cmc
loope
xchg
cs
xchg
out
fsubrs
pop
shrb
adc
lds
sbb
in
lret
push
mov
xchg
xor
rolb
push
ljmp
sub
jge
rorl
das
pop
out
xor
jb,pn
mov
push
push
icebp
lret
cmc
lret
pop
adc
mov
pop
repnz
xchg
sub
movsb
inc
pop
movsb
or
ds
dec
fistl
pop
cmp
cmp
dec
nop
xor
rclb
jp
arpl
push
je
in
cmp
ja
aas
cltd
or
addr16
les
pop
scas
pushf
jne
test
mov
and
push
xchg
mov
mov
loopne
cltd
push
pop
or
repnz
cli
sub
fmull
insl
ds
jmp
jge
dec
ja
adc
enter
clc
sub
mov
test
ss
mov
andl
lock
sub
mov
sbb
xor
adc
push
mov
mov
jns
inc
cmp
xchg
cmp
or
repz
aaa
imul
pop
loop
lock
push
mov
pop
push
inc
jg
dec
pop
scas
pop
lahf
dec
sub
xchg
push
sbb
pop
pop
rorb
xor
jecxz
jecxz
sbb
int
es
mov
xchg
sub
addr16
push
sub
fstl
sub
xchg
and
or
int3
dec
xor
into
stos
push
cmp
or
jp
jle
js
sysenter
inc
lds
cwtl
js
sub
leave
jbe
lea
dec
movsb
or
lea
out
add
outsl
and
lret
mov
sarl
xchg
push
add
jp
inc
push
dec
add
and
pop
cmc
dec
loop
in
fisttps
mov
dec
add
sub
mov
lods
xchg
mov
ss
aam
sbb
mov
cwtl
or
testb
xor
out
mov
int
into
daa
into
sti
inc
movsb
mov
dec
fistpll
cmp
lock
mov
daa
xlat
cwtl
sbb
sub
pop
sub
xor
mov
mov
jmp
xor
xor
cmpsb
mov
jmp
sbb
jle
sub
sub
fmul
test
subl
imul
je
push
in
push
or
mov
clc
add
ret
popf
mov
adc
bnd
lods
add
mov
call
push
cmp
adc
adc
pop
cmp
push
repz
sbb
mov
jnp
mov
jnp
pop
cmp
cmp
xchg
push
pushaw
mov
and
loop
popa
cmpsb
mov
sbb
mov
mov
or
push
fwait
mov
rcrl
dec
push
push
or
xchg
out
adc
or
dec
and
in
in
aaa
lret
mov
testb
bound
imul
mov
lods
aaa
lret
pop
jmp
add
subl
jnp
sub
lea
add
jae
loopne
mov
movsl
bound
mov
cmpsl
mov
inc
data16
lcall
or
in
mov
push
mov
inc
loope
sti
lock
ds
push
xor
sbb
xchg
stc
or
push
adc
adc
xchg
and
push
test
push
jae
mov
mul
mov
ret
xor
outsb
cmp
sub
ret
fs
push
in
test
fsubs
inc
jo
idivl
mov
pusha
jmp
add
or
out
push
stc
loope
jns
and
in
or
xchg
leave
dec
add
jno
movsl
mov
and
mov
mov
clc
mov
mov
pop
jmp
decb
jmp
or
ja
lret
loopne
in
aad
cltd
out
push
xchg
adc
sahf
popa
jge
sbb
out
movsl
int3
mov
out
mov
cli
repnz
and
stc
xor
mov
fdivrl
scas
dec
mov
inc
and
inc
dec
ret
xor
and
cmpsb
sbbl
push
sbb
ficoml
subl
inc
ss
aaa
repz
jp
sbb
mov
jo
aad
dec
and
imul
pop
pop
adc
or
pop
arpl
inc
push
sbb
jecxz
imull
mov
xor
das
cmp
loope
adc
mov
aaa
sti
lods
pop
jl
out
mov
jns
insl
xchg
sbb
inc
es
push
adc
mov
cmp
fisttpl
sbbl
cwtl
call
hlt
jge
sub
push
xor
mov
jo
sub
dec
mov
mov
dec
jbe
push
xor
gs
cmpsb
cmp
daa
inc
and
xor
in
jno
push
inc
mov
inc
cmp
js
mov
lea
push
ror
clc
cltd
xor
repnz
push
int3
lret
stos
cmpsl
mov
mov
add
dec
cmpsl
sub
inc
pop
pusha
jo
fs
mov
cld
popa
icebp
lds
dec
les
adc
test
out
ljmp
and
das
sbb
cmc
shlb
add
mov
icebp
xchg
mov
testb
mov
mov
mov
sti
fidivl
fcmovne
in
cmp
cmp
mov
lcall
jo
mov
pop
dec
jecxz
mov
xchg
dec
mov
inc
nop
mov
mov
dec
ds
cs
xor
fsubl
arpl
xor
or
int
pop
jle
arpl
les
sti
loope
jge
mov
cld
scas
loop
mov
cmp
fldcw
sbb
andb
push
enter
push
jb
mov
pop
add
es
adc
int3
inc
inc
adc
pop
sbb
call
enter
pop
hlt
xchg
mov
pop
repz
hlt
xchg
sbb
fnstsw
cmpsl
cli
sbb
addl
test
and
cli
lods
and
lret
addl
mov
pop
jns
push
notl
adc
sbb
ljmp
push
in
cmp
ljmp
adc
test
pop
ficoms
and
push
xchg
loope
int
jp
jg,pn
xchg
mov
add
cmc
icebp
sbbl
mov
add
ret
mov
sbb
test
lock
cltd
push
mov
repnz
jo
cld
mov
out
lcall
stos
push
lcall
xchg
push
cld
jp
insb
lock
sti
outsb
sub
icebp
mov
adc
xchg
cmp
arpl
ljmp
push
fwait
pop
mov
test
mov
cwtl
jmp
lahf
mov
sbb
aaa
cmp
jge
cmp
mov
mov
cmc
inc
mov
mov
sub
and
dec
stc
jmp
adc
inc
iret
mulb
fs
pop
cmp
bound
lods
inc
cmp
push
cmp
mov
xchg
jno
mov
test
shr
inc
and
in
shll
sar
scas
and
es
xor
add
lret
or
mov
pushf
and
pusha
inc
std
mov
dec
or
or
pop
sti
ret
add
int
es
mov
and
mov
inc
inc
push
pop
movsl
sbb
pop
pop
into
clc
adc
das
pop
fs
add
fidivl
orl
push
movsl
inc
or
pop
out
mov
popa
bound
dec
fs
push
or
popa
or
inc
mov
jae
mov
adcl
cmp
shr
mov
add
cmp
sbb
add
jg
bound
mov
push
mov
cmp
ja
jl
lahf
test
sbb
jp
outsl
mov
jo
lret
xchg
aaa
pop
loop
and
xor
cs
decl
decb
leave
popf
cld
shlb
adc
push
adc
fsubr
aad
sub
test
or
ret
test
inc
jo
mov
xchg
pop
std
pop
push
das
int3
lret
mov
jge
xorl
loopne
dec
jno
cmpl
in
data16
test
sbb
mov
pop
jg
icebp
pop
rcrb
jno
xchg
or
mov
mov
fs
scas
fildl
loopne
dec
push
xchg
dec
jle
push
lahf
push
lods
loope
mov
pop
call
xor
xchg
ror
popa
dec
and
or
xorl
lret
in
and
enter
xchg
or
inc
out
mov
mov
sbb
clc
gs
adc
insl
into
popl
mov
dec
loop
pushf
push
adc
aas
jp
sbb
cmp
or
idivb
jecxz
or
insb
cld
mov
mov
sbb
fs
xchg
xchg
aas
pop
jmp
fmul
jp
jae
scas
insl
popa
dec
push
mov
aas
mov
lahf
jbe
ret
adc
imul
sarl
jl
push
lods
stos
jp
out
add
subl
dec
xor
push
pushf
mov
das
dec
out
insl
mov
ja
nop
jp
imul
pop
lret
ja
pop
add
or
sub
cmp
fcomps
lods
aas
aam
arpl
pop
inc
fisubl
shrl
mov
dec
dec
daa
mov
das
dec
jecxz
cmp
sub
lahf
add
movsl
mov
pop
inc
mov
inc
fstpl
scas
test
sbb
xchg
outsl
lods
sbb
or
xchg
lock
ds
arpl
add
sub
call
cltd
loop
in
jecxz
cmpsb
dec
mov
in
popa
add
ret
mov
mov
push
test
outsb
movsb
push
xchg
hlt
jne
or
add
or
bound
push
mov
test
push
pop
inc
push
mov
lahf
sbb
in
scas
cltd
aad
sbb
out
xchg
clc
movl
jo
fistpll
movsl
dec
movsl
inc
xchg
mov
cwtl
xchg
mov
sub
shlb
pop
mov
arpl
into
mov
loopne
or
dec
push
pushl
test
jl
sbb
outsl
mov
adc
inc
jecxz
mov
stos
push
in
mov
in
mov
push
sbb
shrb
lds
cmpb
cmp
sbb
sti
ffreep
sahf
push
inc
enter
pop
add
xchg
xchg
sbbb
jle
std
push
dec
cmp
pop
arpl
test
mov
pop
push
fwait
xchg
clc
dec
int
and
mov
jg
adc
cltd
pop
aad
int
push
mov
fcoml
inc
insl
ljmp
rcr
mov
mov
xor
jnp
add
imul
in
hlt
pusha
lea
cli
icebp
pop
loopne
push
mov
insl
add
xor
dec
add
stos
push
or
in
push
push
xlat
pushf
lret
insl
in
adc
sbb
out
xor
mov
pop
sti
push
orb
sub
in
mov
adc
rcrl
repnz
pop
adc
mov
imul
sar
inc
mov
pop
jg
aaa
cmp
fwait
scas
insw
mov
int
scas
test
mov
aaa
mov
cmp
inc
inc
sbb
add
sbb
xchg
mov
ja
mov
movsb
inc
lea
push
insl
pop
sar
xor
adc
dec
xor
xor
addb
frstor
loop
shll
lods
outsb
iret
out
out
cmc
es
push
push
pop
sbb
cmpsb
adc
dec
push
loopne
movsl
and
sbb
and
cmpl
sub
or
test
push
push
insb
mov
pop
xorl
rcl
dec
test
out
imul
mov
int3
xchg
or
pop
in
and
subl
faddl
sbb
or
inc
add
push
testb
hlt
out
push
jecxz
inc
pop
mov
dec
xchg
inc
sbb
add
jo
shrb
arpl
and
dec
negb
lods
push
adc
mov
loop
sbb
dec
imul
jno
xchg
pop
jge
test
jne
lods
iret
std
push
jns
out
adc
add
pusha
pop
stc
stc
repz
push
cmp
stos
adc
or
cs
cmp
cmp
push
addr16
test
mov
icebp
pushf
clc
cmp
mov
testl
and
and
insb
in
incb
shl
push
and
cwtl
inc
jl
fisttps
in
inc
dec
jns
add
inc
scas
push
jp
cs
loop
fst
jns
xchg
inc
repz
dec
xor
xor
test
ret
iret
orl
cmp
test
pop
sbb
or
mov
sbb
out
xor
xchg
and
or
and
mov
scas
mov
and
aam
and
and
pop
imul
in
and
xchg
ds
sahf
pushf
pop
push
pop
imul
adc
xchg
lret
cs
sbb
out
in
inc
jmp
sbb
pop
out
xlat
movsl
lds
je
xchg
inc
sbb
jecxz
add
inc
dec
xor
push
push
add
dec
push
fwait
mov
fsubr
adc
cmp
icebp
int
mov
sub
adc
xor
insb
addr16
gs
dec
push
outsl
addr16
js
fsubrl
je
call
test
push
loope
insl
xor
adcl
jns
aad
pushf
mov
arpl
nop
cmpsl
jnp
mov
mov
adc
nop
or
pop
dec
frstor
xlat
sahf
mov
mov
xor
flds
dec
push
pop
mul
shl
shr
les
and
sbb
jle
incb
push
push
inc
jmp
mov
popa
sbb
loope
pop
jb
ficoms
arpl
pop
mov
repz
nop
pusha
test
daa
dec
cmp
add
push
out
rorl
in
inc
cmp
data16
pop
sahf
cmc
or
sar
sbb
cmp
xor
mov
xor
adc
push
fmull
mov
pop
outsb
rcrl
ret
lods
jns
mov
mov
jne
daa
or
dec
mov
and
xchg
push
sbb
sub
add
push
dec
mov
dec
fldcw
fmulp
imul
pop
push
cmpl
xor
in
push
xchg
sti
repnz
sbb
add
fsub
mov
inc
jp
test
mov
mov
xchg
jo
ljmp
call
add
and
mov
mov
into
subl
push
test
fsubrp
pop
xor
pop
outsl
mov
cmp
lods
xchg
fnstsw
int
jnp
imul
mov
int3
sahf
cmp
movsb
pop
inc
mov
insl
data16
stos
cld
out
test
push
mov
mov
mov
outsl
mov
stc
push
sarb
adc
pusha
add
popa
and
jb
and
adc
push
and
mov
loope
in
les
andl
push
outsl
insb
in
push
dec
imul
sub
mov
jns
fnstenv
push
jnp
icebp
outsl
pop
iret
out
and
mov
fwait
cmp
jne
or
cli
fsubrl
adc
fistl
loope
lods
loope
xchg
or
sbb
in
mov
add
aad
aam
fldl
movsl
out
rcll
xor
mov
jbe
sbb
scas
hlt
fs
lds
push
cltd
data16
jnp
push
add
mov
popf
pop
cld
jb
mov
mov
test
nop
mov
fdiv
pop
out
mov
mov
mov
and
addr16
dec
add
xchg
nop
cs
cli
in
xor
push
into
pop
clc
arpl
cld
and
mov
icebp
lock
pop
xor
mull
jnp
push
fadds
pop
aaa
add
adc
push
arpl
lret
test
out
fimull
test
sbb
subb
mov
push
rcrl
xchg
sub
sbb
xchg
adc
in
xchg
dec
loopne
ja
fbld
fidivrs
inc
or
jp
fnsave
andl
cmp
mov
stos
loope
cld
int3
ljmp
push
mov
iret
aaa
jmp
loope
or
cmp
lea
rorl
cmpl
xor
or
sub
cmp
sub
sbb
xchg
pusha
xchg
cmpb
out
scas
iret
mov
mov
push
cmc
push
cmpsb
xlat
out
movsb
mov
fwait
dec
xchg
es
clc
in
lea
sbb
in
jmp
imul
sub
aad
mov
outsl
cmp
out
or
xchg
mov
shld
jnp
ret
fmuls
stos
mov
popf
stos
sub
rclb
lock
and
popa
scas
pop
nop
rorl
data16
push
movsl
mov
inc
add
or
inc
push
ds
xor
jae
jecxz
cmp
xor
insb
sub
mov
pop
loope
mov
outsb
jnp
sub
daa
add
xchg
mov
cli
scas
dec
fwait
mov
cmpl
lret
dec
or
mov
int
outsl
push
mov
lods
bound
rorb
notl
sbb
in
in
shr
dec
jmp
sbb
sti
hlt
rolb
jo
fcompl
inc
ss
jl
mov
xor
sbb
iret
sbb
xor
mov
push
shrl
into
sub
movsl
adc
jecxz
inc
and
data16
lret
pop
pop
leave
shll
push
cwtl
loope
notb
cmp
inc
push
rcl
scas
and
adcl
popa
mov
pop
daa
xchg
add
jecxz
call
dec
stos
ss
add
test
test
scas
pop
jge
xor
and
or
mov
leave
xor
mov
xchg
push
enter
mov
jmp
jge
out
in
insl
lods
cli
mov
jge
stc
movsb
and
pushf
lcall
ret
pop
mov
adc
aaa
in
mov
pusha
or
hlt
xchg
les
mov
push
and
test
sub
jmp
pop
into
fs
mov
or
roll
test
or
jmp
or
or
dec
ljmp
in
mov
stc
cmp
js
shrd
lock
data16
adc
mov
sub
sbb
jecxz
out
xchg
mov
xchg
push
in
flds
jnp
outsl
mov
fiaddl
inc
sub
push
or
mov
cwtl
loopne
adc
int
or
mov
pushf
jbe
stc
jl
inc
dec
ret
adc
dec
shrl
ror
cmp
xchg
stos
lret
and
clc
into
dec
push
mov
test
test
jns
jp
and
lea
xorb
mov
adc
lods
cld
mov
fwait
inc
jg
sub
pop
pop
shl
inc
add
sbb
lods
bound
popa
pop
cwtl
movsb
lcall
loope
mov
mov
imul
into
fs
cmp
inc
jo
sub
xor
popf
andl
mov
push
ret
or
lods
notrack
stos
in
push
mov
repnz
pusha
loop
jecxz
test
sti
cltd
xchg
mov
ficompl
mov
add
mov
mov
stc
cmp
lret
jg
xor
cmp
das
es
mulb
push
pushf
add
aaa
bound
shr
imul
cmpsl
cmc
addb
cmp
vshufps
sbb
enter
dec
clc
int
aaa
push
cltd
push
pushf
xchg
mov
sahf
push
imulb
daa
pop
fstpl
fcomps
push
scas
fcmovne
add
loope
jnp
inc
and
xchg
std
mov
push
jno
mov
inc
cltd
xchg
fcoml
mov
imul
leave
sub
jae
mov
inc
divb
xor
xor
shrl
xchg
mov
or
or
add
je
int3
inc
add
adc
xor
add
push
jg
mov
rcrl
xor
adc
jmp
cltd
ljmp
sub
xchg
repnz
sbbb
adcl
pop
cmp
fadds
xchg
mov
jb
test
xchg
and
into
mull
mov
add
sbb
jae
std
dec
push
mov
lock
jno
jne
in
int
fidivrl
push
fdiv
stc
hlt
mov
arpl
out
out
jnp
cmp
and
or
das
clc
cmpsl
cmp
push
in
sub
lods
cltd
sub
dec
aam
pop
xchg
rorb
test
xchg
ficomps
mov
jo
in
sub
cltd
adc
adc
push
iret
inc
jo
lods
jmp
and
jl
and
ljmp
add
xor
ds
sub
sub
or
leave
push
jmp
mull
ljmp
out
bound
mov
mov
adc
dec
mov
cmp
or
fcomps
ds
jo
pop
in
gs
arpl
inc
dec
push
test
fs
ss
push
inc
xor
lret
lods
out
jno
xchg
jb
or
jg
jb
jb
addr16
cmp
cmpsb
pop
inc
fisubl
shll
inc
dec
push
push
mov
push
adc
add
push
call
pop
and
push
test
jb
ljmp
les
xlat
pop
test
outsl
mov
popf
xor
test
sub
inc
mov
pop
stc
pop
aad
out
bound
les
sub
sqrtps
shrb
rcrb
jecxz
pop
xchg
xor
fistl
push
fwait
fwait
jnp
icebp
push
int
test
jl
sahf
mov
inc
popf
enter
jnp
xor
xchg
add
arpl
lahf
xchg
adc
ret
addr16
arpl
out
fs
cs
aam
pop
outsl
andb
dec
and
push
xchg
lods
pop
insb
movsl
jl
cmp
in
js
movsl
jns
mov
adc
aas
leave
cmp
lods
pop
ficomps
and
mov
loop
adc
mov
push
mov
xor
mov
mov
outsl
lret
lahf
in
fldenv
pop
xor
cmp
jb
push
xchg
cmc
lock
lretw
and
jae
sahf
sbb
outsb
fstpl
pusha
in
popa
jno
xchg
pop
rcr
das
push
mov
xchg
inc
xorb
icebp
rorb
subl
lods
adc
mull
sub
push
push
push
or
iret
sbb
rcrb
sub
jmp
stc
enter
ret
test
cmpsb
jno
sbb
xchg
cmp
sbb
push
sub
add
scas
jle
fs
daa
shl
jnp
inc
in
lea
or
cld
cmpsl
and
mov
or
sahf
mov
jmp
jge
xor
fiaddl
ret
sti
out
xchg
dec
mov
jp
mov
adc
fcomp
je
fwait
enter
sbb
in
and
insb
pop
jb
std
inc
lret
jle
sarb
mov
pop
cmp
or
or
cmpsb
fwait
mov
jp
xor
orl
add
or
mov
out
aad
fldl
aad
push
daa
or
adc
push
cmp
nop
aam
adc
mov
movl
add
cmp
push
aas
iret
imul
cltd
or
insb
lahf
sbb
mov
pop
shl
popf
cmpsl
pushf
mov
inc
lcall
push
inc
mov
lock
mov
jns
xor
or
test
cli
es
dec
icebp
push
dec
and
cld
sahf
decb
inc
jb
inc
sbb
mov
push
jae
adc
pop
add
pop
fs
into
out
sbb
imul
mov
and
test
dec
xchg
xchg
mov
cmp
xor
xchg
ss
cltd
roll
add
lahf
aad
stos
adc
mov
cmp
cwtl
mov
inc
push
cmp
aad
outsb
mov
mov
daa
inc
cltd
daa
jbe
dec
clc
out
push
lds
sbb
mov
data16
cmpsb
cwtl
icebp
cltd
cmpsb
xchg
sbb
cld
mov
jbe
xchg
loop
stos
xchg
std
jo
cwtl
dec
dec
jb
leave
cmp
add
xchg
jmp
xor
sti
sbb
test
das
jp
test
xchg
mov
bound
pop
fimuls
add
jne
dec
jne
jecxz
fcmovbe
popa
xor
xor
adc
scas
notb
jbe
in
outsl
push
pop
dec
testb
enter
adc
in
push
cwtl
negl
mov
ret
cmp
test
fdivrl
rcr
dec
test
jbe
mov
adc
imul
ds
cltd
pop
rcll
xlat
xorb
inc
lds
mov
mov
sbb
mov
pop
jnp
fsub
aas
mulb
sub
clc
mov
push
pop
and
cwtl
xchg
fcomps
xchg
cmp
dec
add
pop
imul
fdivrs
gs
out
cld
dec
pop
cltd
fldt
clc
lds
fs
adc
and
popa
pop
cmp
enter
stos
or
movsl
sub
pop
pop
xchg
sub
xlat
jge
arpl
mov
cmp
sub
and
shrl
shl
test
mov
es
outsl
sub
dec
add
sbb
xorb
cmp
mov
std
or
popa
imul
mov
cmpsb
dec
or
mov
pushf
pop
inc
ja
cmp
lods
data16
sub
lret
hlt
jnp
out
sbb
scas
adc
dec
lret
fdivs
pop
adcb
xorl
add
ret
pop
ret
fisubl
inc
cltd
sbb
add
ljmp
xor
in
add
out
mov
mov
mov
mov
inc
cmp
aam
adc
imul
stc
stos
lret
mov
xchg
rcrb
repz
mov
test
mov
cld
movsb
add
mov
cwtl
cld
xchg
rcl
or
call
dec
or
mov
int
mov
add
xor
pop
enter
mov
fdivl
xchg
pop
lret
ss
test
ds
call
xchg
push
and
mov
inc
cld
add
push
iret
fidivl
pop
mov
jns
push
mov
test
into
push
jno
int
push
sbb
jmp
cmp
rcrl
dec
or
or
test
ljmp
sbb
stos
add
adc
rorb
push
pop
pop
xor
fdivs
dec
adc
in
or
mov
fcoms
shll
mov
jg
ljmp
loopne
pop
aas
xchg
and
push
xor
pop
mov
push
cmp
inc
cmp
mov
or
add
rcl
imul
flds
push
repnz
cwtl
or
jne
in
cltd
jo
bound
or
adc
xchg
cmp
cmp
bound
jb
inc
jecxz
stos
mov
push
test
push
add
cwtl
xchg
cmp
cltd
popf
sbb
xchg
aas
outsl
sub
outsb
adc
lods
xchg
mov
pop
pop
mov
test
ret
xchg
xor
ret
enter
inc
imul
jb
adc
dec
sub
ret
xchg
in
js
mov
gs
fcomps
cmpsb
insb
cli
sbb
jb
andb
aas
and
pop
rorl
lahf
inc
fadd
repz
pusha
bound
jp
push
and
sbb
mov
mov
sbb
adc
aad
mov
shlb
xor
push
arpl
mov
sti
mov
xor
push
sti
push
sbb
lea
outsl
push
jg
nop
popa
ret
nop
cld
mov
iret
jl
out
jo
sub
lahf
jae
pop
inc
scas
lcall
lret
mov
cmc
mov
ljmp
push
js
sbb
push
cld
inc
jne
sbb
fs
push
sbb
rcll
enter
stc
jnp
fs
cwtl
clc
int
xchg
pop
sbb
sbb
mov
lea
sbb
in
jmp
stos
xor
adc
mov
jne
out
mov
add
fs
add
aas
dec
jl
xor
jmp
mov
sti
pusha
adc
xor
xor
mov
xchg
xor
sub
sbb
pop
sbb
test
cmpsl
leave
les
lea
ja
cmp
aad
lret
rclb
and
int
or
push
push
mov
add
sbb
rcrb
push
cmp
insl
int
push
mov
mov
add
leave
outsl
adc
inc
push
pop
sbb
pushf
add
xchg
inc
jge
imul
xchg
outsl
add
test
adc
push
pop
mov
mov
add
sahf
dec
push
in
sbb
sub
das
movsb
sub
mov
sti
out
adc
add
push
xor
jns
adc
mov
ss
sub
sub
in
push
add
fisubrl
sbb
sub
dec
popa
leave
xor
pop
mov
inc
mov
out
in
push
mov
aam
xchg
jmp
ds
loopne
aas
inc
sbb
rcl
jo
insb
and
or
loopne
sbb
int3
inc
pop
shll
sub
testb
sbb
dec
pop
movsl
push
push
jecxz
push
mov
mov
in
push
or
sbb
xchg
or
add
lret
fwait
lods
mov
add
and
js
and
leave
out
fiadds
cltd
mov
roll
cmp
nop
enter
out
outsl
or
jno
stos
ret
pusha
xchg
loope
mov
mov
std
mov
mov
xchg
stos
sbb
xchg
xor
out
xchg
jb
popf
jl
mov
xchg
fisubrl
lcall
inc
inc
repz
dec
pop
or
fcmovbe
jb
dec
bound
add
pop
shrl
mov
jecxz
repz
shl
sbb
cmp
mov
jl
rcll
cmp
dec
xlat
push
loope
jnp
mov
pop
arpl
jecxz,pn
mov
sbb
dec
sbb
repz
aam
adc
daa
int3
push
inc
mov
mov
subl
scas
jo
and
sarb
stc
inc
inc
movsl
in
add
dec
lock
mov
push
cmp
pop
popa
adc
pop
imul
xchg
jg
xchg
movsb
arpl
in
test
loop
repnz
dec
ss
inc
pushf
or
dec
adc
pop
add
call
pop
adc
inc
test
sub
mov
pop
dec
imul
or
mov
imul
outsl
call
adc
xchg
push
mov
aaa
mov
fadds
or
and
lcall
pushf
aaa
jge
mov
mov
fs
pop
mov
lea
dec
imul
lret
aad
movsb
add
xchg
fwait
pop
addr16
and
pop
mov
cmp
je
mov
adc
jmp
lock
sti
dec
outsb
mov
push
push
in
loopne
push
daa
adc
jmp
pop
push
int3
adc
pop
sbb
fdivrl
out
or
aad
cmp
push
mov
mov
insl
aaa
push
dec
mov
fldcw
jns
aas
xor
enter
dec
mov
xlat
push
cmc
cmpsb
add
jb
sbb
xchg
clc
cmpsl
mov
xor
stos
insb
les
into
jns
add
hlt
outsl
mov
jnp
mov
inc
nop
sar
adc
fiaddl
mov
and
jae
hlt
mov
or
sub
fcoml
std
xchg
xlat
out
aas
out
dec
add
dec
jne
icebp
jmp
xchg
mov
xor
lret
out
jmp
out
cmp
xchg
lcall
jb
mov
int
xchg
cmpsl
mov
push
in
sub
mov
lds
ret
std
fdivrl
and
clc
push
add
mov
xchg
adc
pushf
je
fmuls
inc
ss
ljmp
lret
test
mov
pop
sbb
stc
adc
or
xor
cld
cs
hlt
ret
dec
lea
inc
dec
popf
jns
push
sbb
idiv
push
pop
or
lahf
or
mov
jae
mov
lret
gs
jnp
sub
test
add
test
lret
mov
fisubs
bswap
push
jle
add
mov
inc
xor
popa
rcrl
xchg
orl
adc
inc
sahf
outsl
sbb
push
dec
xchg
sti
lea
int
jmp
add
dec
or
aaa
cld
test
shll
mov
fnsave
cmp
loope
int3
or
aam
xchg
lods
pop
aam
inc
jo
sbb
adc
loop
lods
in
pop
inc
aam
and
cs
mov
subl
lret
dec
jnp
ds
pusha
repz
aaa
pusha
and
add
gs
inc
jne
sbb
fisttpl
cmp
jno
or
jne
adc
clc
js
test
or
fistl
xchg
inc
push
adc
jle
sti
leave
and
sub
fsubrs
push
jae
mov
je
add
popf
jbe
divl
xorb
add
cmpsl
inc
mov
mov
add
mov
and
rcrl
ds
dec
mov
add
or
icebp
mov
rcll
int3
lods
bound
pop
pop
addr16
inc
icebp
scas
shr
in
lret
jg
dec
mov
cli
je
jle
imul
mov
lret
mov
int3
xchg
sub
fnstcw
mov
push
mov
int
push
fistl
and
arpl
fimull
mov
jns
out
mov
lock
xor
dec
insl
pop
imul
imul
bound
enter
pop
cmp
push
pop
incb
notl
pushl
cli
lods
shr
fidivs
push
test
dec
or
dec
dec
fistps
imul
fstl
pop
xchg
cwtl
and
outsl
int
incb
inc
or
lock
cmc
adc
aad
lret
mov
loope
xor
test
lds
push
jns
sub
xor
mov
push
test
jae
adc
adc
loop
push
jmp
jnp
mov
ret
xchg
mov
ds
insb
fimuls
jge
pop
in
mov
add
xchg
subb
aad
lods
and
popf
aas
inc
clc
scas
fsubrs
adc
in
push
cli
push
adc
sub
sbb
hlt
jnp
hlt
push
imul
cld
int
pop
shlb
xor
loop
jns
jns
xchg
jle
lret
jbe
loopne
lcall
pop
loop
das
ficoms
add
push
repnz
imul
ljmp
dec
dec
mov
dec
test
sub
ficoml
mov
xchg
jbe
loop
mov
mov
into
sbb
push
jne
cmp
scas
roll
or
pop
lcall
adc
xor
add
shlb
fst
js
ficoml
aas
push
sbb
sbb
dec
mov
mov
sub
pop
out
into
ret
jge
inc
add
fldenv
leave
in
cli
push
dec
mov
sbb
lods
je
daa
xchg
or
lock
stc
fadd
pop
je
and
adc
pop
daa
fiadds
aas
and
jg
in
inc
sbb
enter
push
scas
gs
neg
inc
push
ja
sub
test
wrmsr
mov
out
imul
pop
lret
jmp
sbb
lods
dec
dec
sbb
jbe
lcall
adc
pop
fildl
js
imul
movsl
xor
daa
in
jle
call
push
push
ljmp
int
inc
leave
fs
mov
jno
mov
imul
adc
repnz
push
jo
lea
into
xchg
add
test
cmp
fs
mov
mov
mov
shlb
push
fsubr
in
iret
sub
ret
movl
arpl
push
xchg
dec
into
loop
mov
push
lock
dec
sub
mov
insl
add
cmp
fsubrl
lea
mov
fwait
ret
out
mov
into
push
mov
ds
cmp
mov
push
inc
cmp
sub
xor
cltd
test
cs
outsb
sahf
mov
pop
push
cmp
lods
scas
jecxz
movsb
xchg
adcl
xor
sbb
pop
adc
add
int
ljmp
jno
jmp
mov
popl
xlat
icebp
sub
ss
jnp
inc
jg
adc
sub
and
in
nop
lea
pusha
xchg
in
and
adc
sub
or
repnz
iret
and
fstpl
dec
pop
popf
and
neg
pop
sbb
adc
ljmp
faddp
sbb
cmp
jmp
mov
mov
jmp
adc
push
fdivr
scas
lods
aaa
adc
push
xor
jbe
subl
xchg
data16
push
or
mov
movsb
mov
dec
or
sub
xor
push
xor
mov
and
fidivs
shlb
jge
arpl
popa
pop
sub
add
cmp
jmp
and
cmp
or
sub
jb
test
cmpsb
and
lcall
push
mov
lds
inc
inc
add
xchg
cli
push
xor
xchg
push
icebp
jge
xlat
lahf
dec
daa
popa
movsb
mov
jb
outsl
stc
stc
sub
inc
fwait
push
test
jno
push
call
add
ja
fwait
lret
sub
fcoml
aaa
and
dec
jmp
mov
into
in
mov
ret
sub
out
lock
xor
mov
rorl
stc
or
xchg
arpl
cmc
call
movsl
xor
out
or
jb
pop
adc
stos
xor
mov
inc
jb,pn
fnsave
pop
ret
das
inc
push
add
adc
mov
test
mov
subb
or
and
pop
loop
in
icebp
repnz
mov
cmp
icebp
nop
or
lahf
adc
sub
mov
xchg
outsl
mov
mulb
and
mov
test
dec
fsubl
mov
sub
rcr
push
notl
lock
add
xor
mov
fisttpll
les
cmp
shlb
or
test
sub
mov
dec
push
pop
out
lret
dec
push
lea
loope
push
das
repz
in
mov
orb
addl
addr16
lods
popa
std
scas
fnsave
adc
xlat
decb
ja
pop
mov
aam
mov
pop
inc
insl
fisubs
in
loop
cmp
ljmp
jb
aaa
and
je
jle
scas
push
jno
aas
adc
push
and
test
shll
jno
pop
mov
sub
dec
call
sub
ret
adc
sbb
test
dec
xchg
arpl
js
subb
sahf
xlat
xchg
faddp
inc
clc
aas
mov
aaa
lods
xor
dec
rcll
es
cs
ja
aaa
fwait
xor
jge
and
sahf
enter
scas
int
sub
mov
mov
shrb
mov
pop
lods
movsb
repnz
jmp
jbe
cli
jno
add
loope
push
mov
aad
dec
fbld
and
xor
leave
xchg
lods
fidivl
divb
pop
push
jmp
push
push
or
xor
popf
loope
push
xchg
out
insl
and
xchg
mov
shl
add
pop
mov
xorl
fsubrl
cmp
sub
sub
xlat
aad
std
repz
mov
arpl
enter
fwait
inc
cmp
adc
mov
mov
pop
add
test
add
mov
xchg
push
pop
mov
push
mov
jle
mov
xchg
cmp
push
mov
stc
inc
sub
call
dec
mov
lods
push
popf
push
addb
out
mov
jg
inc
addr16
and
testb
sub
xorb
rolb
fwait
mov
inc
enter
pop
scas
dec
fistpll
mov
scas
cmp
pop
or
push
imul
xchg
mov
mov
xchg
mov
xor
mov
fsubrs
loopne
sbb
mov
mov
or
xor
push
aad
adc
hlt
aas
es
sbb
dec
and
adc
xor
sarl
sbb
into
out
aaa
inc
das
cltd
jp
negl
fcoml
pusha
xchg
nop
jl
push
fstpl
loopne
lret
arpl
pop
sbb
int3
fisubrl
dec
stc
rorl
movsl
dec
cs
ljmp
stc
mov
sbb
cmp
lahf
cmp
mov
or
sub
add
or
popa
inc
sub
push
pop
cwtl
sub
cmp
es
xchg
lods
add
jp
sbb
jnp
mov
sub
repz
cmp
mov
ljmp
sub
lods
mov
sbb
lea
pop
stc
adc
sub
mov
mov
rcrb
lea
mov
inc
js
movsl
jns
inc
lods
pop
sub
pushf
lret
mov
pop
js
inc
pop
pop
mov
movsb
lea
xchg
sub
cmp
lods
lret
loope
movsb
pusha
mov
nop
dec
dec
push
arpl
jne
push
fdiv
xchg
andb
xor
aam
outsl
or
sbb
mov
subl
loopne
mov
int3
loope
stos
pop
adc
push
sbb
jmp
testb
and
push
outsb
movsb
fistpl
popf
into
nop
adc
mov
push
xorl
sub
popa
int
mov
loopne
movsl
dec
lds
and
cli
outsb
push
or
cmp
mov
cmovno
mov
fidivrl
sub
sti
dec
push
call
dec
or
jne
sahf
lds
aaa
pop
in
pop
fildll
mov
leave
pop
adc
mov
inc
pop
out
loope
jecxz
movl
in
sbb
sbb
cmp
sbb
test
dec
push
ror
cmovnp
cmp
push
sbb
das
adc
hlt
repnz
fiadds
lret
fwait
dec
sahf
adc
ret
imul
loope
cs
sbb
sbb
lcall
iret
dec
xchg
ja
dec
push
or
jo
imulb
pop
xchg
xor
sbb
out
test
outsb
inc
aad
lea
addr16
sub
cltd
pop
mov
pop
pop
loopne
push
push
scas
pop
xorb
stos
add
mov
in
mov
add
xor
pop
filds
fcomps
les
mov
data16
test
mov
popf
js
jo
fisubl
movb
repz
mov
xchg
bound
adc
sub
lds
fmuls
cmpsl
adc
push
mov
pop
rolb
or
inc
test
out
lret
cltd
push
jge
imul
imul
or
mov
icebp
mov
insb
jb
or
sub
jno
jecxz
cmc
stc
mov
call
push
fwait
out
xor
std
or
cmc
test
ret
into
jle
in
in
fcom
fiadds
mov
mov
fptan
sub
in
adc
scas
mov
icebp
outsb
cli
push
popf
lcall
out
arpl
sub
std
pop
xchg
sbb
insb
adc
mov
and
cmp
cltd
mov
cmc
outsl
cld
push
lods
test
dec
sbb
sahf
fucomip
mov
and
dec
test
dec
dec
js
in
test
mov
cmp
sahf
push
inc
in
cs
sti
out
lock
mov
inc
adc
xchg
dec
sahf
int3
mov
movd
fcoms
mov
and
xchg
sbb
mull
or
lret
test
sbb
xor
sbb
sahf
mulb
inc
fidivrs
cmc
pop
dec
mov
jbe
mov
pop
stos
pop
push
mov
mov
out
ret
daa
loopne
xchg
ja
push
out
pop
cmp
push
xor
rorl
lock
andl
mov
rcll
jmp
or
xchg
jg
xor
sub
push
cli
les
ljmp
cmp
xchg
mov
xchg
ljmp
xchg
aaa
popl
mov
mov
in
sahf
lret
icebp
push
jbe
lods
push
imul
push
icebp
popf
pop
adc
adc
or
or
popa
inc
sbb
in
dec
dec
and
inc
adc
lret
int
sahf
cmp
dec
xor
and
mov
sub
jne
bound
addr16
xor
mov
inc
push
andb
sub
jp
test
mov
lock
mov
retw
dec
dec
cwtl
jae
addb
push
xorl
sbb
test
dec
lahf
xchg
add
out
mov
xchg
mov
jg
loope
cmp
and
adcl
pop
jns
jo
jae,pn
add
in
scas
insl
imul
mov
xchg
adc
xchg
cld
sbb
jne
cltd
cmp
movsl
sbb
cmp
mov
mov
clc
fiadds
jp
or
aaa
dec
fisttps
add
push
mov
outsl
insl
xchg
xor
outsl
pop
mov
mov
lret
ret
mov
pop
jo
add
jl
add
insb
xchg
cs
add
sbb
cmpsb
shlb
cmp
js
or
mov
in
fldcw
mov
sbbl
mov
jmp
ret
scas
sbb
ja
sbb
pop
jnp
xchg
dec
pop
mov
clc
jecxz
lods
inc
imul
in
mov
xchg
leave
test
inc
enter
aam
ficomps
and
jnp
pushf
imul
add
add
dec
mov
mov
add
cltd
fstpl
enter
sarb
lret
paddsb
mov
pop
xor
sarb
push
fidivrl
les
movsb
fcmovnbe
inc
push
sub
jns
jge
push
mov
and
rol
jns
pop
pop
scas
cmc
xchg
mov
cltd
shl
cmpsl
xor
and
ret
or
loope
xchg
xorl
jnp
rcrl
xchg
add
fisubl
and
dec
imulb
cwtl
and
into
mov
sub
add
pop
imul
loopne
pop
cmpsb
mov
mov
in
xchg
fcmovnu
push
xchg
and
ret
dec
inc
inc
inc
fcom
jbe
and
mov
xor
xchg
lods
xor
sub
mov
pop
mov
fists
cmp
jo
xor
xchg
ljmp
sbb
stos
int3
jb
pusha
cwtl
data16
icebp
mov
mov
daa
cmp
jb
pushf
xor
mov
jl
pop
xchg
and
inc
sub
xchg
psubusw
add
mov
lock
cmp
jns
inc
dec
hlt
push
out
push
mov
push
mov
cmpsb
jno
ret
sub
loop
add
jns
dec
sbb
ljmp
pop
data16
sbb
cmp
inc
out
daa
ljmp
pop
mov
ror
insl
jbe
sub
pusha
adc
das
in
test
fiadds
shlb
rcrb
fistl
dec
lret
cld
pop
je
dec
std
cwtl
popa
xor
pop
push
cmc
adc
push
test
jg
ljmp
jge
sbb
mov
jecxz
lret
or
lock
inc
dec
test
mov
insb
xor
xor
dec
push
mov
popf
lret
xchg
ja
out
addb
cmpsb
sbb
push
cli
jp
cld
mov
stos
insl
adc
add
xchg
xor
rolb
out
or
movsl
mov
pop
dec
inc
lea
jo
mov
dec
js
sub
call
lea
fists
sub
xor
jno
insb
js
nop
or
xchg
and
push
xor
inc
jecxz
out
shll
popa
mov
test
fidivl
mov
pop
je
xlat
xchg
push
outsl
sbb
cwtl
and
pop
adc
push
mov
xchg
pop
outsb
dec
sbb
sti
lret
push
es
dec
fidivrl
and
mov
sbb
xchg
mov
mov
fisttpll
lret
daa
add
sub
ja
and
xchg
mov
adc
adc
sbb
int3
jae
sbb
inc
scas
cmpsb
jb
jns,pt
xchg
imul
lret
mov
enter
sub
xchg
mov
imul
pusha
in
das
sub
sbb
pop
push
inc
js
pop
ss
push
cmpsb
jge
push
pop
rcr
out
loop
xchg
or
and
test
xor
mov
adc
cmp
int
cld
push
jecxz
sub
pop
dec
rorb
mov
pop
mov
xor
fdivr
stc
and
push
inc
dec
add
dec
subl
mov
push
cmp
and
and
mov
mov
icebp
jecxz
pop
xchg
sub
xchg
sub
mov
inc
ss
fsts
daa
repnz
repnz
je
push
andl
xchg
dec
sub
dec
fsubrs
push
in
mov
rcr
mov
xchg
popa
xor
sti
jp
and
fnstenv
xchg
cmp
sub
mov
ret
mov
mov
cld
aaa
repnz
or
stos
dec
jo
push
subl
xlat
fisttpl
movsb
or
mov
pusha
xlat
into
mov
add
test
xchg
mov
inc
in
nop
out
mov
imul
mov
push
int3
sub
in
jbe
xor
mov
sbb
aad
adc
push
xchg
fcoms
dec
sahf
push
in
and
push
mov
inc
loope
mov
inc
add
cs
enter
sahf
push
push
adc
fs
jg
cmp
std
mov
mov
xchg
pusha
mov
movsl
xrelease
xchg
and
and
in
jg
dec
ljmp
rclb
pop
xchg
cs
leavew
test
xchg
outsl
add
jmp
dec
sbb
test
mov
mov
dec
sbb
sbbb
sarb
dec
jp
mov
cltd
fs
inc
push
adc
repz
test
add
dec
add
in
out
cli
adc
shlb
xchg
sub
push
fistpll
ss
mov
dec
das
xor
or
push
in
test
jg
iret
inc
loopne
xchg
je
and
cli
add
pop
jp
xchg
sbbl
dec
loopne
push
mov
sub
aaa
insb
in
push
dec
or
pop
xchg
mov
mov
mov
stos
int3
hlt
les
mov
jle
mov
sti
push
lea
sub
jl
loopne
xchg
adc
add
pop
stos
data16
cmp
and
scas
mov
sub
jecxz
pop
mov
jno
mov
pop
int3
les
xlat
adc
add
scas
mov
loope
movsl
adc
mov
mov
mov
jmp
adc
sbb
stc
mov
cld
and
mov
dec
mov
stc
shrb
pop
cmp
out
jl
ret
sbb
iret
push
mov
test
fsubl
add
pop
andb
push
or
xchg
aas
lret
sbbb
ljmp
pop
jle
test
insl
out
and
enter
xor
out
stc
lods
jp
iret
cmp
imul
pop
push
sbb
enter
and
xor
aaa
cs
aad
hlt
add
mov
es
ficomps
insl
movsl
inc
push
mov
inc
inc
iret
repz
inc
cs
int
dec
cmp
repz
hlt
je
shll
lcall
pushf
inc
push
dec
in
pop
lods
xchg
out
imul
insb
xorl
mov
jns
push
leave
shll
insl
and
aad
inc
cmp
data16
or
pop
mov
shlb
pop
ror
add
popa
lret
insl
mov
and
mov
mov
dec
pop
es
data16
inc
roll
dec
lds
jnp
sbb
mov
jns
sbb
je
aas
jno
adc
pop
leave
xor
add
fwait
mov
out
dec
mov
roll
adc
push
fwait
ds
outsl
xor
out
in
outsb
pop
mov
push
push
mov
inc
addl
mov
out
fildl
mov
orl
sbb
or
stos
popa
cmp
xor
loop
daa
in
in
jns
mov
pop
outsb
or
bound
enter
add
jg
and
lock
mov
pop
ret
mov
out
lret
cld
rcl
cmpsb
lahf
test
inc
jo
ret
arpl
mov
fisttpll
sbb
adc
ret
push
stos
mov
test
sub
push
jno
push
andl
mov
mov
enter
inc
jecxz
or
rolb
lahf
sti
out
cmp
loope
into
scas
inc
xor
dec
nop
add
sbb
inc
inc
pop
dec
mov
jbe
fisubl
xchg
lcall
sub
movsb
pop
lahf
inc
xor
lahf
inc
in
mov
lret
mov
bound
scas
mov
roll
imull
stos
imul
sbb
loop
and
lea
lods
xchg
pop
jecxz
cli
stc
fistps
es
mov
add
mov
pop
es
mov
je
cwtl
lea
mov
push
inc
adc
imul
dec
push
arpl
iret
lcall
out
jbe
jl
cmpsb
int3
inc
sub
inc
out
cmpsb
jns
adc
xor
jae
push
adc
push
scas
cmp
mov
sub
out
sub
add
push
rcrl
stc
sub
or
pop
in
cs
mov
in
add
mov
pop
fdivl
addr16
push
ret
xchg
fistps
dec
push
enter
jb
sub
je
push
inc
mov
loop
notb
mov
dec
fimull
xorb
jmp
xor
xor
aad
jbe
or
dec
add
shl
mov
and
fucomip
and
fisubs
push
adc
xchg
aas
das
jb
fnstsw
inc
movsl
inc
mov
fcmovu
mov
in
orl
xor
stos
mov
sbb
pop
xor
mov
add
xor
andl
and
mov
pop
movsb
push
or
and
out
dec
or
jle
imul
icebp
dec
adc
andb
push
iret
xchg
pop
shll
jo
jg
pop
mov
addr16
ljmp
xor
cmp
jae
pop
subb
ja
sarl
lods
inc
add
xlat
jbe
add
repnz
push
mov
xchg
xlat
mov
shll
jmp
mov
loope
add
lret
mov
mov
and
fdiv
jne
mov
add
mov
pop
pushl
jle
sbb
mov
es
cmpsl
add
ret
pop
div
pop
jo
sub
sbb
lahf
xchg
in
jecxz
jo
sbb
orb
js
mov
sbb
mov
das
push
iret
inc
sub
arpl
sahf
cmp
xchg
dec
xor
lret
mov
mov
call
out
in
mov
in
test
inc
shll
sbb
jno
lcall
aaa
mov
test
xor
das
mov
test
jb
add
stc
inc
leave
fisttps
fldl
push
xchg
xor
push
mov
xchg
and
sub
cmpsl
lea
fsubrl
add
out
and
push
inc
lock
adc
push
jnp
insb
sub
stos
add
sbb
or
in
and
bound
fidivs
dec
aad
call
xchg
jecxz
xor
loope
push
and
cmpsl
push
xor
and
fwait
jnp
and
mov
or
add
jb
sbb
lahf
ss
inc
icebp
mov
mov
jg
fisubs
dec
in
inc
sub
movsl
sbbb
add
sbb
loope
outsl
mov
cmp
cmpsb
out
push
mov
inc
jg
fimull
scas
mov
call
jle
lret
imul
adc
mov
not
jp
mov
or
push
pop
inc
shrl
push
ret
pusha
std
xchg
in
jg
aam
clc
mov
insb
mov
shll
into
fstps
ss
mov
cmp
fists
fwait
inc
inc
daa
push
leave
mov
cwtl
outsb
mov
inc
mov
xchg
jmp
leave
jbe
dec
mov
inc
inc
rclb
jbe
and
mov
xor
inc
aam
lds
into
movsb
pushf
icebp
into
stc
xor
jns
insl
leave
mov
rolb
repnz
pop
pop
mov
test
rol
jge
repnz
jo
loopne
or
mov
sbb
subb
dec
outsl
mov
incl
andb
vminps
cmp
xchg
mov
negb
aas
test
jno
lcall
lods
and
cmp
test
test
cltd
insb
cmc
jecxz
dec
shr
add
sbb
inc
imulb
cli
sub
ret
nop
data16
popf
shll
inc
mov
mov
dec
adc
loopne
movsl
pop
jge
mov
and
int3
fcoms
xchg
jmp
or
dec
push
adc
leave
jecxz
sbb
fs
popf
sbb
fists
inc
add
mov
test
jae
inc
movsb
mov
nop
xchg
scas
mov
add
cmp
push
repz
sub
adc
lock
mov
xor
add
push
enter
ret
or
jp
add
push
ret
cltd
sub
es
mov
lods
inc
sti
lock
iret
jl
enter
in
cmp
push
popf
mov
push
mov
cmpsl
jno
hlt
xchg
call
xor
push
aas
loop
jge
les
dec
xor
addl
out
ss
xor
push
xlat
icebp
and
imul
icebp
mov
pop
faddl
jo
sub
mov
loop
pop
cmp
or
lret
cltd
pop
stc
out
lret
cmpsl
sub
sub
push
das
push
jb
into
inc
mov
adc
ja
gs
inc
test
std
jl
jnp
loope
pushw
pushf
aaa
clc
push
sti
mov
sub
xor
cwtl
xor
test
add
fdivr
xchg
sahf
stos
mov
mov
loopne
or
and
cmp
xchg
shrl
cltd
pusha
mov
aas
add
loopne
add
je,pt
out
xor
outsl
cwtl
and
adc
jge
test
in
mov
orl
fidivl
sbb
sbb
orl
ja
push
lret
xlat
pop
inc
pop
ret
pusha
dec
mov
test
call
loope
pop
pop
pop
and
and
insb
jge
sub
popf
add
jnp
test
iret
xchg
inc
sbb
cld
testl
les
int
int3
dec
xor
cmp
inc
mov
adc
lock
notb
and
das
mov
sub
lret
mov
popa
gs
mov
scas
cmc
add
pop
jae
or
sar
sub
jle
push
push
push
inc
sub
push
test
sub
add
fbld
in
dec
inc
mov
push
sub
scas
lds
sub
dec
mov
jno
lret
inc
add
inc
mov
sub
cmp
out
sbb
int
mov
sbb
int
xor
pop
sbb
aaa
mov
fwait
int3
cld
mov
push
cmp
inc
lcall
cmp
and
inc
inc
fldl
or
adc
fdivrs
add
xchg
sub
inc
das
xor
adc
xchg
test
push
cltd
push
adc
sbb
xor
jae
add
sbb
mov
das
insb
pop
fmul
adc
and
pop
outsl
adc
data16
das
jge
ret
sbb
stos
mov
and
dec
mov
pop
mov
sub
pop
xchg
inc
shrl
xor
pop
sti
xchg
das
xchg
repz
lds
js
inc
push
and
jb
das
inc
xchg
rol
dec
jp
push
push
sbbb
jge
xchg
add
add
adc
test
inc
push
cwtl
push
aam
xor
out
xchg
fsubrs
pushl
xor
aaa
cmp
pop
xchg
in
aas
xor
fs
sti
cmpb
dec
pop
cmp
xchg
mov
xor
inc
fldenv
sbb
cwtl
jecxz
jle
add
scas
stos
jg
sub
mov
dec
dec
out
mov
std
push
xor
jns
jmp
mov
scas
imul
pop
jb
or
mov
push
int
or
xor
xlat
lret
sub
leave
loope
xchg
dec
push
mov
push
fnsave
xor
push
in
call
mov
mov
or
and
mov
mov
cmp
outsl
push
pop
call
sbb
jge
stc
lds
lods
fisubrl
les
pushf
test
andnps
std
orb
jne
xchg
sub
mov
sub
scas
xor
jo
fldl
xchg
xchg
fnstcw
or
lret
faddl
mov
mov
pop
fucomp
iret
cltd
adc
xor
mov
xchg
add
fisubl
je
cli
pop
dec
push
jo
xchg
or
jbe
aad
push
push
mov
push
inc
das
sahf
and
in
mov
xchg
test
push
or
pop
mov
lcall
inc
adc
pop
mov
rcll
add
lcall
sbb
lock
jne
aaa
add
int3
mov
jge
pop
xor
mov
lea
imul
in
adc
and
jb
imulb
aam
jecxz
test
lods
jno
mov
aas
mov
pop
js
out
sbb
push
mov
jmp
cmp
cmp
mov
dec
repnz
ror
call
dec
push
lods
add
mov
mov
imul
leave
mov
cld
pop
or
mov
mov
dec
sti
pop
jp
mov
xor
lock
maskmovq
push
pop
cmp
ds
mov
hlt
jge
test
and
or
or
sarb
pop
jns
inc
sub
outsb
arpl
sbb
or
inc
ja
jg
lret
xchg
push
sub
and
out
pushf
and
sbb
daa
insb
sub
xor
inc
flds
lret
test
cmp
leave
pop
mov
inc
mov
sbb
dec
inc
mov
sbb
insb
sbb
jle
outsl
push
lret
mov
xchg
sub
push
mov
mov
pop
jle
jl
bnd
add
cmp
out
js
arpl
pop
pop
add
pop
rol
jo
pop
loope
pushf
pop
mov
out
xlat
pop
cwtl
nop
popa
mov
fwait
lock
dec
test
push
mov
mov
notb
arpl
inc
jne
add
in
mov
pop
clc
jecxz
add
dec
inc
test
add
xchg
xchg
or
fistl
or
test
and
fwait
mov
nop
test
stc
shlb
ds
cld
addr16
or
out
fs
lcall
std
mov
dec
mov
push
call
out
inc
cs
mov
jo
jb
aam
pushf
and
sbb
leave
add
xchg
cmp
and
jbe
fnstcw
imul
jo
cmp
sbb
cs
ret
push
clc
mov
jo
or
rcr
in
jno
pop
push
pop
jne
addr16
repz
movl
imull
test
popf
loopne
pop
xchg
mov
loopne
movsl
adc
jg
int
push
das
pop
push
and
or
out
in
inc
sbb
jle
dec
adc
imul
jp
dec
adc
stc
sbb
inc
lahf
add
mov
les
ss
jmp
push
sub
or
jae
andl
rcll
dec
pop
test
bound
rorb
lretw
mov
stos
cli
mov
out
and
outsl
jmp
jecxz
inc
movsl
xor
and
mov
ljmp
lock
adcb
push
mov
nop
pop
repnz
lahf
lret
jae
pop
insl
xchg
in
andb
pop
in
jecxz
clc
dec
sbb
lahf
push
adc
cltd
nop
loop
cmp
inc
or
mov
push
dec
and
repz
pop
inc
pop
fimuls
sub
pop
dec
pop
xchg
dec
loop
or
in
mov
inc
inc
push
outsb
push
iret
xlat
clc
enter
push
out
dec
and
inc
iret
and
adc
cli
repnz
lahf
nop
inc
push
pop
jo
movsl
mov
xchg
push
scas
push
push
push
or
cltd
aam
xchg
mov
push
ficoms
dec
push
lahf
xor
push
cmpsb
sbb
insb
frstor
mov
push
data16
xorb
imul
pop
xchg
lcall
mov
cmpsl
das
mov
push
lret
push
mov
xor
in
dec
xchg
fistpll
sarl
rolb
cmpsb
rcrb
popa
nop
nop
or
add
push
jp
mov
aas
cmp
arpl
popa
loopne
mov
cmp
jecxz
sub
rcrb
sbb
outsl
pop
cmp
xchg
popa
mov
dec
dec
out
lods
loopne
sbbl
divb
js
mov
dec
mov
insb
movsl
lahf
jmp
xor
sub
inc
pop
ret
mov
sbb
out
movsl
in
jne
inc
pop
push
xorl
insb
setl
add
loop
repz
adc
cmp
fdivrl
out
in
lcall
and
jae
xor
subb
pushf
mov
sbb
push
out
pop
cwtl
cmp
dec
jl
add
inc
mov
imul
add
outsb
xchg
clc
gs
mov
push
mov
ret
es
stc
mov
call
pop
cmpsb
cmp
mov
jae
int3
pop
ljmp
popf
xchg
out
add
lock
jecxz
scas
pushl
rolb
push
cmp
je
push
jne
pop
push
int
or
out
pop
mov
or
gs
aam
imul
cmpsl
lods
cmp
fs
jne
jl
and
push
xchg
adc
popf
inc
out
and
sbb
xcrypt-cfb
cmpsl
and
adc
mov
mov
ret
and
addb
push
xor
jo
insb
ret
mov
jne
mov
mov
and
adc
mov
or
mov
or
dec
movsl
xchg
je
test
cmpsl
insl
es
adc
pop
mov
sbb
arpl
xchg
out
cmp
stos
push
cmp
stos
fwait
dec
push
xor
shl
iret
out
stc
ret
sti
cli
xor
jns
jno
push
xlat
mov
mov
add
scas
xchg
cmp
cmpsl
sbb
outsb
xor
popa
sar
rorl
xchg
nop
or
scas
mov
jl
inc
add
stc
xor
mov
ja
pop
cld
test
or
loop
cmpsl
sbb
movsl
cld
daa
adc
pop
imul
add
add
push
mov
xchg
dec
hlt
gs
mov
inc
out
sub
push
ror
mov
jo
ljmp
ds
lods
pop
xor
push
aam
imul
fld
adcl
mov
sbb
stc
inc
push
xchg
xor
loope
xchg
daa
inc
push
iret
push
insb
xchg
jg
sub
xor
popf
negb
mov
nop
xchg
out
int
std
fwait
scas
push
jl
pushl
sub
or
movb
mov
dec
stc
dec
data16
and
outsb
int3
lock
mov
or
fs
cmpsb
lahf
leave
sub
fcoml
add
roll
test
jg
jae
sbb
push
js
xor
and
lods
lods
adc
mov
adc
ficompl
cmpsb
xchg
push
ret
xchg
xchg
fsubr
xchg
js
mov
mov
rcrb
cmp
pop
fdivrl
inc
inc
pop
push
xchg
pusha
and
inc
xchg
add
xchg
xor
dec
out
xor
jle
and
popa
and
fs
or
mov
jge
xchg
xchg
xchg
scas
xorb
stos
adc
out
xchg
stos
mov
mov
jl
pusha
aam
mov
jae
push
sub
stos
cmpsl
shrb
test
xrstors
mov
jp
xchg
sub
pop
sub
mov
jnp
insb
push
fidivrl
mov
push
fistpl
lods
test
jp
movsb
push
cmp
and
xor
lret
outsb
xchg
shlb
loopne
into
fildl
mov
inc
adc
imul
fwait
and
jle
pop
fwait
adc
push
jge
cmp
mov
mov
jbe
inc
push
lcall
roll
std
sub
xor
xchg
int
mov
mov
fildl
xor
sysret
add
stos
inc
aam
sbb
push
mov
sub
gs
addr16
stos
mov
pop
clc
imul
hlt
inc
data16
xor
adc
ficomps
jbe
dec
mov
popa
push
test
arpl
or
stos
or
or
sti
popl
push
loopne
das
iret
imul
dec
or
ret
cltd
adc
adc
push
pusha
test
repnz
lds
xor
dec
test
pop
les
enter
imulb
dec
adc
fucomip
in
dec
call
daa
xchg
movsl
adc
and
cmp
stos
sbb
sti
icebp
bnd
jo
dec
pop
daa
loop
mov
fxrstor
mov
pop
xorb
loop
jnp
adcl
xor
adc
je
sbb
sbb
adc
pop
adc
daa
dec
mov
ja
outsl
sub
insb
int3
loope
movsb
pop
or
pop
sbb
pop
or
push
or
sahf
and
fs
ljmp
ret
and
shl
data16
jae
loope
mov
in
loopne
sti
xchg
fildll
add
mov
lods
pop
pop
into
out
aad
imul
mov
or
push
jl
roll
dec
dec
jno
insl
inc
es
subl
scas
and
pop
fs
in
jg
mov
in
movsb
push
pop
negb
mov
cwtl
adc
test
int
and
popf
mov
jmp
cmp
mov
mov
dec
mov
dec
inc
imul
les
rclb
insl
pop
xlat
jns
stc
xchg
mov
fucomip
xchg
pop
dec
add
nop
mov
mov
sahf
dec
out
or
mov
jg
push
lds
fists
fisubrl
cmp
xorb
dec
aad
dec
lds
xor
cs
jne
data16
xor
scas
adc
loopne
push
xchg
lods
test
fwait
je
lds
dec
pop
cwtl
in
dec
addr16
push
fwait
ret
xchg
or
out
addb
push
imul
and
insl
xlat
nop
mov
cmpl
adc
or
inc
lods
sbb
xor
insb
cmp
repnz
imul
adc
out
clc
sbbb
addr16
scas
mov
shrl
push
pop
mov
push
dec
lret
mov
loopne
pop
in
adc
daa
mov
push
adc
sub
jmp
cmpsl
lahf
aaa
movsl
xchg
in
es
out
ja
dec
mov
std
sti
adc
sub
cmc
xor
jb
out
push
xchg
mov
pop
mov
es
mov
mov
sbb
inc
cmp
lea
repnz
mov
jno
mov
ds
addr16
scas
pop
mov
sbbb
pop
fsubrl
popa
ret
inc
pop
loop
sub
lods
xor
rcrl
and
jo
inc
jo
and
cmpsl
insl
adc
out
divps
xchg
call
xchg
std
ficomps
cmp
cli
cld
fstl
mov
sahf
inc
stos
push
nop
pushf
sbb
dec
clc
fdivrl
push
jle
leave
mov
push
rcrb
pop
xor
or
add
in
rol
jae
lahf
das
ss
ret
sbb
or
push
rorl
mov
int3
jle
cwtl
mov
fstps
ror
stos
loopne
fistpl
stos
scas
mov
and
mov
sbb
sbbl
into
sbb
in
inc
jge
ljmp
fistl
add
je
ficoml
lea
movb
iret
jae
mov
mov
fwait
cwtl
jo
mov
sbb
mov
jecxz
lret
add
xor
insb
xor
pop
cmp
gs
mov
fadds
loopne
loop
xorl
jno
imul
jmp
or
aas
or
mov
push
mov
scas
sbb
sbb
inc
pop
adc
sub
sbb
push
das
out
js
loope
hlt
addr16
rorb
leave
shll
lret
sbb
dec
test
cmp
xlat
adc
cld
int
push
cli
pop
out
andb
push
push
push
xor
imul
cli
mov
aas
ja
jns
pop
dec
mov
or
arpl
mov
stos
dec
pop
cmp
ret
rorb
or
lret
and
test
addr16
subl
xchg
dec
dec
adc
cmp
je
in
loop
orl
jbe
popa
je
or
add
pop
insl
jg
loop
dec
pusha
outsb
aam
xchg
adc
dec
adc
mov
aad
sbb
push
jecxz
cli
dec
sbb
mov
mov
pop
dec
or
fcoml
dec
cltd
je
mov
pop
insb
into
stos
test
add
test
ret
xor
dec
add
jle
pop
lods
and
hlt
cmp
stos
sub
cmc
lahf
pushf
mov
mov
xchg
loope
adc
jg
fidivrl
lock
call
loop
inc
inc
jbe
jmp
enter
fidivs
cmp
cmp
fmull
mov
push
hlt
rorl
xchg
imul
ds
sub
roll
movb
add
js
push
cmpsb
jl
outsl
popl
rclb
cmc
test
ljmp
lods
xorl
mov
cmp
mov
cmp
ret
std
punpckhbw
jp
aaa
pop
aas
mov
out
add
icebp
lret
cmpsl
ja
inc
dec
dec
xor
and
cmpsl
jns
sbb
xor
mov
mov
adc
dec
mov
pop
out
pop
or
scas
insl
mov
push
mov
or
insl
fists
shl
dec
sbb
push
push
add
push
sar
divl
lret
addr16
shll
scas
jecxz
pusha
xor
push
fsubrl
push
add
xor
and
into
sbb
out
lea
enter
sti
ds
fisttpl
mov
lock
lcall
scas
xchg
xchg
inc
ret
cmpsl
push
dec
mov
cmpsb
and
push
out
mov
add
loope
or
xor
pop
ds
js
push
lock
add
clc
mov
ds
icebp
std
sahf
lea
stos
dec
les
and
arpl
outsb
mov
out
dec
hlt
dec
and
scas
cmp
sarl
int
adc
adc
pop
mov
push
sub
aaa
add
dec
stos
mov
lahf
mov
or
push
mov
xchg
jae
cld
std
pop
fsubs
xlat
jne
hlt
mov
inc
add
mov
dec
push
dec
sbbl
sub
lock
xchg
ficoml
icebp
xor
dec
insl
hlt
clc
sbb
test
add
jo
push
xor
xchg
jp
shrl
mov
xchg
inc
dec
inc
dec
inc
mov
shrl
xchg
jp
xchg
ss
dec
sub
cld
ficoml
push
adc
jno
lods
ror
cmpsl
mov
movsb
xorb
arpl
xor
popa
arpl
aas
and
mov
cli
xchg
jns
les
stos
dec
jp
adc
push
cmc
lcall
aam
or
ljmp
adc
xchg
insb
mov
arpl
xlat
jns
dec
pop
pushf
popf
xor
push
and
mov
inc
lods
sub
xchg
adc
add
xor
sub
ss
xchg
cmpsb
lock
push
lcall
lcall
xchg
idiv
aam
mov
sbb
lods
loope
test
cmpl
xchg
push
add
sub
push
rclb
push
fwait
xchg
mov
xchg
pop
sub
cld
inc
sbb
icebp
or
inc
std
pop
mov
out
shlb
les
xchg
fs
scas
inc
add
bound
pop
movsb
ret
popf
pushaw
xlat
or
insl
sub
dec
in
loop
push
jl
cwtl
mov
or
adcl
inc
fcmovnbe
dec
push
mov
fists
sub
data16
fimull
mov
mov
xor
inc
ds
or
add
pop
or
inc
sub
add
clc
and
out
ja
dec
fs
test
cmp
jle
orl
adc
push
sbb
out
add
lods
lea
jbe
or
push
les
orl
jle
push
cld
je
imull
xchg
out
imul
pop
pop
lods
sub
mov
xor
mov
lret
jecxz
jl
mov
cmp
pop
mov
test
add
xor
jnp
daa
add
aam
fdivl
fsubrs
fisttpl
jns
mov
unpckhps
out
pop
mov
lods
fwait
or
out
mov
call
add
cmp
fwait
test
sbb
cwtl
cld
mov
sub
mov
or
xchg
xchg
mov
xchg
and
jo
jl
mov
add
scas
jg
push
stos
mov
mov
lea
mov
and
ds
add
scas
or
repz
push
out
mov
pushf
mov
inc
xchg
hlt
xchg
dec
dec
stos
lods
push
pop
int3
stc
mov
jnp
jmp
adc
popa
sti
mov
xor
pop
mov
hlt
add
mov
jne
add
and
fsubrs
ret
sbb
sbb
es
mov
cmp
adc
push
push
or
popa
std
add
test
fs
inc
xchg
push
sahf
jp
cmp
pop
mov
push
mov
jecxz
push
shll
and
xchg
mov
mov
mov
sub
sbb
cli
xchg
icebp
sar
inc
fwait
xlat
xchg
inc
aaa
push
cmp
dec
and
lret
popf
loop
ror
mov
mov
imul
cwtl
test
mov
lea
sbb
fadd
xor
or
flds
inc
and
repz
cld
jnp
fs
adc
sub
mov
pop
aad
dec
loop
mov
jge
arpl
movsb
xor
cmp
and
bound
mov
cmpl
xchg
push
mov
jge
xor
lret
adc
popa
xchg
add
cltd
or
popa
inc
push
inc
stc
stc
ljmp
lret
jbe
jno
jne
pop
movsl
dec
sub
jl
add
mov
mov
push
sahf
mov
or
cmp
lret
jmp
inc
pop
and
in
andb
mov
repz
fidivl
xchg
rorb
sarl
jno
mov
outsl
and
dec
pushf
fisubs
testb
outsb
or
add
sub
xor
gs
mov
lcall
jbe
inc
mov
push
jl
xor
icebp
xor
mov
lock
fsincos
adc
xchg
imul
add
outsl
ret
and
aaa
scas
dec
inc
push
mov
pop
push
sub
jno
rolb
rcr
or
push
or
jl
into
mov
xchg
ljmp
negl
mov
mov
fldenv
fisubrl
dec
xchg
lods
test
or
jns
adc
repnz
or
bound
loope
lods
sbb
dec
xor
lahf
pop
adc
mov
xor
cmpsb
outsl
jg
sbb
ds
xchg
pop
adc
jns
arpl
imul
xor
pop
js
dec
jg
test
mov
add
dec
xor
dec
or
mov
iret
icebp
mov
or
mov
arpl
sub
in
cltd
jnp
int3
pop
jbe
mov
stos
mov
adc
cmp
sbb
xchg
cmp
sub
inc
adc
sbb
pop
out
mov
pop
and
mov
xchg
cmp
adc
roll
pop
outsl
dec
aam
jb
ds
adc
sub
sub
adc
frstor
jo
jecxz
cmpl
fs
test
jge
adc
dec
jns
xchg
pop
xchg
enter
std
jl
mov
jb
in
sti
cmc
int
call
or
push
sbb
pusha
cs
sbbb
mov
mov
dec
push
add
mov
mov
cld
sub
popa
into
cmp
mov
sbb
addr16
pusha
xchg
pop
adc
cmc
pop
inc
cmpl
insb
mov
mov
push
mov
add
cmpsl
xchg
aaa
jg
push
sbb
jb
ret
pminub
into
mov
ror
aam
mov
pop
cmpsl
fs
imul
mov
popa
xor
jle
fistl
cmp
mov
and
loop
repz
cwtl
xor
mov
pop
loope
lods
dec
lods
mov
pop
pop
jo
jbe
dec
mov
call
push
push
sbb
bound
pop
mov
sahf
pop
inc
sar
push
scas
mov
add
call
jge
push
pop
inc
arpl
or
dec
cmp
cmp
fcoms
push
aaa
jge
in
adc
in
outsb
xlat
sbb
and
and
icebp
shll
xchg
lods
insb
mov
ss
push
mov
ficoms
pop
imulb
neg
inc
push
aaa
mov
push
ficoml
xchg
push
fisttpll
out
mov
out
stos
push
lcall
ficompl
dec
push
sbb
enter
or
or
ljmp
fcmovb
movsb
xorb
xor
int
sti
and
push
jmp
pop
xchg
mov
ret
or
push
cmp
xor
mov
or
imul
loopne
divb
rcll
inc
test
test
daa
pop
sbb
jae
imulb
sbb
mov
in
add
dec
rorl
dec
xor
mov
inc
jno
das
cmp
xchg
popa
cld
sub
sub
sub
inc
xchg
std
cltd
sbb
cmp
mov
int
or
xlat
icebp
jmp
sbb
cmp
subb
nop
lock
icebp
add
push
mov
shl
fsubrl
imul
pop
lds
adc
mov
or
mov
in
jmp
dec
adc
lret
sti
repnz
mov
mov
repnz
push
xchg
push
xchg
imull
adc
lock
lods
scas
ret
xor
mov
dec
fadds
xchg
loope
sahf
movsb
sbb
jmp
addr16
scas
pop
int
xor
jbe
fisttpl
das
xchg
sbb
and
mov
fisubs
adc
stos
ljmp
cmpsl
mov
das
mov
gs
and
shlb
vmovaps
push
and
jns
xor
sahf
xchg
jnp
xchg
pop
push
rorl
cmp
lods
mov
sbb
es
push
fsub
bound
rcrb
in
or
pop
sbb
jne
sub
pop
xchg
pop
loop
or
mov
sbb
add
mov
test
cmpl
ja
daa
rolb
pop
adc
nop
push
lea
add
sbb
push
test
mov
jne
loope
pop
push
mov
cmp
xchg
jmp
mov
push
loop
mov
add
into
jae
pop
lret
jbe
insb
or
mov
jbe
cwtl
popf
xor
into
icebp
leave
dec
sbb
push
pop
jne
mov
add
out
sub
xor
ja
repz
movntq
out
jae
imul
pop
out
aas
push
push
sbb
leave
or
xchg
fcoml
clc
fdivs
rcr
rcl
dec
xchg
pop
int
xchg
pop
arpl
outsl
pop
rep
jb
pop
out
mov
jge
shrb
lods
cmpsb
inc
xor
push
stc
jp
cmp
cmp
inc
sub
fldenv
pop
scas
test
inc
pop
add
pop
nop
ja
stos
mov
xchg
push
add
add
mov
inc
push
pop
xor
mov
fsubl
push
mov
sbb
stc
divl
ret
or
cld
in
lret
ljmp
movsb
rcrl
test
pop
jnp
in
sbb
mov
shl
sbb
pushf
int3
pushf
sbb
sbb
test
test
bound
ds
lea
add
and
lds
loop
test
push
bound
das
cmp
cld
jg
sbb
mov
mov
pop
int3
dec
fcoml
lret
dec
push
scas
mov
lods
jg
or
add
cmp
xchg
pop
inc
pop
and
pop
into
cmp
jno
dec
out
jmp
mov
jmp
cmp
push
mov
cmp
test
cmpsb
imul
jbe
adc
xor
cmpsl
or
loopne
out
push
test
pop
mov
aas
ja
xchg
inc
pop
int3
inc
outsb
bound
aad
dec
repnz
xchg
push
or
roll
dec
push
shl
jno
loop
out
lcall
xchg
xlat
adc
sub
test
insl
pcmpgtb
jecxz
arpl
test
cmp
jmp
mov
imul
jg
xchg
sbb
push
popa
jb
push
mov
dec
and
jle
xchg
adcl
add
cld
add
and
dec
int3
inc
pusha
and
pop
inc
pop
inc
push
lods
sbbl
out
and
mov
jle
into
out
mov
xor
fwait
enter
insl
loopne
sbbl
add
dec
fincstp
mov
or
add
jno
xchg
iret
sbb
hlt
xor
push
rolb
clc
jmp
rorl
dec
mov
test
push
jo
cmp
adc
mov
adc
es
xor
cmp
push
addr16
fucomip
ljmp
dec
fwait
jg
mov
mov
mov
push
cld
mov
shlb
sbb
ljmp
orb
js
pop
mov
lds
fsubrl
sub
shl
sub
or
bound
cli
notb
int
fistpll
inc
test
mov
movsb
imul
mov
js
dec
sub
ss
fwait
outsb
repnz
addr16
xor
ret
rep
cwtl
mov
sbb
ret
roll
cmc
mov
mov
pusha
cmpsb
dec
mov
and
and
mov
out
ret
pusha
mulb
sarl
xor
movq
mov
mov
and
xor
inc
clc
je
cvtpi2ps
std
out
inc
rolb
fs
jl
sbb
dec
test
or
es
test
push
loopne
and
outsb
push
shll
mov
sbb
jns
les
and
xor
sti
stos
push
je
cltd
or
xchg
mov
xchg
pop
jle
sub
pop
mov
enter
mov
in
inc
into
and
notb
imulb
mov
pusha
cmp
rol
dec
mov
pop
data16
jg
pop
fisubrl
jmp
roll
out
push
pushf
adc
jg
mov
push
push
lea
or
inc
repz
push
addr16
push
mov
stos
loop
out
les
stos
shlb
pop
leave
pop
ja
xor
es
testb
in
sub
mov
int
push
jmp
leave
add
cmpsl
stos
xor
add
xchg
mov
xchg
nop
sbb
leave
pop
out
lcall
push
das
and
test
pop
pushf
pop
cmpsb
std
push
jmp
shrl
dec
sar
sbb
jl
jecxz
dec
movsl
mov
loop
add
lods
dec
or
arpl
push
ret
dec
rcl
pop
fnstenv
inc
mov
mov
xchg
push
imul
inc
sub
and
fwait
pushf
imul
fistpl
xchg
shlb
pop
jp
add
mov
imul
fwait
cwtl
popa
fdivr
sbb
mov
subl
jg
leave
popa
daa
inc
mov
sti
cmovg
pop
mov
inc
mov
xor
enter
cmp
mov
xchg
int3
inc
and
cmpsb
or
cs
out
test
jo
pop
push
ja
jp
mov
sub
fdivs
xchg
jge
cmp
fwait
pusha
les
sub
xor
fistl
cmp
cmc
pop
hlt
pushf
js
sti
int
fistpl
cmpsl
cld
mov
xorb
cld
bound
push
test
out
cmpsl
cmpsb
dec
add
stos
cltd
in
pop
inc
aam
lret
sbb
movsb
stos
xor
and
xchg
mov
mov
mov
jne
gs
pop
out
and
aas
push
dec
dec
xor
in
leave
xor
xor
jmp
cmp
and
sbb
lret
jne
sarl
mov
sub
add
mov
ret
push
in
xchg
loopne
jns
testl
or
jb
mov
mov
insb
sub
sub
rclb
mov
ficoms
loope
fs
aam
pop
push
leave
sar
scas
popa
cmp
xlat
aad
mov
adc
mov
fisttpll
ret
daa
lahf
call
fstl
js
loope
sbb
fs
imul
scas
call
clc
xchg
xchg
ds
das
in
loopne
sbb
sub
cmp
shl
popa
movsb
push
aas
loop
mov
roll
pop
adc
ja
mov
xor
pop
fcmovu
or
inc
pop
inc
nop
lret
and
inc
push
aad
stos
xor
cmp
inc
loope
std
mov
std
pop
incb
mov
cli
fcmovnu
inc
repz
jns
mov
mov
sub
inc
repz
shr
xchg
cmp
insl
mov
pushf
xchg
jnp
stc
xor
dec
dec
xor
in
shll
cmp
cmpsb
cwtl
lods
cwtl
cmc
cmp
sti
rcl
pop
xchg
adcl
cmp
ds
sti
add
cmp
mov
nop
dec
cmp
inc
vucomiss
xorb
adc
clc
dec
mov
or
repnz
imulb
les
imul
add
cltd
push
je
movsb
test
adc
xchg
xchg
cltd
ljmp
lret
add
adc
es
sub
xchg
pop
sbb
pop
mov
andl
mov
inc
cmp
int3
xchg
addr16
in
add
aaa
sbb
mov
sahf
popf
mov
sti
push
fstpt
pop
pop
pop
rcrb
jbe
cmpsb
js
jmp
push
shlb
mov
std
subb
cmp
pop
popa
sbb
imul
outsb
cltd
inc
dec
cmp
fdivrp
pop
out
sbb
vmovsd
adc
jne
es
mov
and
sub
push
sbb
out
add
mov
inc
adc
movsl
or
mov
out
insb
call
js
pop
inc
lcall
or
sub
out
adc
ja
jmp
ss
xchg
sub
dec
push
cmp
push
sbb
add
mov
jge
lret
aas
push
jmp
and
cmp
and
jmp
stos
or
mov
sub
gs
push
or
or
insb
sbb
xlat
mov
insl
sub
jmp
jo
mov
es
and
inc
xlat
sar
add
push
jbe
nop
adc
pushf
fimull
sub
es
pop
xchg
pop
fcmovnb
outsl
lods
pusha
adc
xchg
das
dec
jp
iret
scas
push
xchg
mov
mov
or
mov
adc
add
fildl
sub
cmpsb
sub
cld
movsl
xchg
xchg
testl
test
dec
add
icebp
jne
ficompl
int3
aad
lret
sbb
stc
dec
lahf
dec
popa
test
pop
lock
mov
pop
int
pop
fisubs
mov
add
dec
sti
mov
xor
push
out
push
and
faddl
and
mov
popa
pop
out
sbb
jecxz
push
sub
pop
mov
xchg
push
pop
jo
jo
mov
push
add
fistl
loope
push
arpl
in
cmpsb
mov
out
ljmp
mov
lret
in
popf
sub
mov
pop
into
test
jns
push
pop
nop
inc
ljmp
loop
sub
into
sbb
insl
aam
repnz
and
xchg
xor
cmp
aad
cmp
mov
bound
ljmp
xchg
popf
mov
add
repnz
aaa
fwait
dec
inc
mov
dec
push
out
in
lods
imul
pop
mov
cmp
xchg
mov
xchg
dec
leave
jmp
mov
and
test
fadds
lods
ss
push
add
aad
or
test
or
mov
lcall
push
add
loop
filds
and
adc
ret
in
mov
mov
cmp
mov
sbbb
fistps
ret
or
jb
lret
sahf
fcos
testl
dec
mov
ret
push
and
bound
lret
mov
test
sbb
push
insb
fucomp
adc
loop
sub
jmp
mov
mov
xchg
pop
xchg
xor
addl
aam
cmpsl
dec
mov
test
clc
jns
xchg
push
mov
cwtl
repnz
ds
fstps
insl
daa
or
pop
xchg
sbb
adc
jo
cltd
ja
hlt
xchg
xchg
adc
lods
in
push
fisttpll
negl
pusha
cmp
lahf
sub
or
push
stos
and
inc
or
xor
mov
xor
aaa
mov
aas
sti
mov
mov
jns
aam
push
out
das
mov
inc
xchg
dec
jne
xor
aas
pop
cmp
add
pop
xchg
mull
mov
cmpsl
push
cmpsl
xor
rdtsc
sbb
cwtl
mov
mov
fsubrs
ds
jge
ret
push
xchg
cmovs
jle
clc
xor
push
aam
mov
sub
pop
fiadds
sub
push
lods
push
inc
pop
and
outsl
pop
sub
lods
repz
je
and
sbb
iret
and
cmp
scas
push
lods
pop
sub
cld
cmc
ret
mov
sub
cmpsl
ss
and
push
lods
movb
jge
outsl
xchg
xchg
xchg
fdivrl
dec
sbb
ljmp
insl
jmp
test
jp
cmp
push
aas
mov
push
out
xchg
cmp
pop
rcr
repz
pop
xchg
fidivl
in
imul
cmpsl
loopne
dec
xor
cld
jnp
insl
push
test
or
add
adc
inc
jns
xorb
xor
xor
dec
xor
lock
push
ret
mov
sti
dec
sub
cmp
mov
and
cmp
mov
fidivrs
xor
iret
pop
sub
cli
mov
test
push
xchg
and
push
cmp
mov
cli
loopne
and
cmpsl
rcrl
jno
ss
aam
xchg
jns
sbb
and
cmp
sti
outsl
inc
push
push
nop
jecxz
in
aam
xlat
mov
pop
xchg
pop
ds
push
xchg
xchg
test
dec
nop
mov
pop
mov
stc
xchg
sti
inc
test
xchg
or
out
jb
stc
js
sub
movsl
js
adc
movsl
scas
add
enter
in
mov
bound
aad
insb
lcall
daa
mov
mov
lahf
insl
dec
adc
hlt
std
mov
xor
div
push
push
and
and
sbb
std
cmp
push
sbb
and
xchg
repz
subl
xchg
mov
add
jmp
shll
fs
mov
dec
test
test
mov
in
mov
push
ficomps
movsl
into
cmp
in
stos
out
int3
inc
mov
aaa
lods
xchg
push
mov
addr16
push
adc
sub
call
arpl
iret
add
test
cmp
mov
repnz
sti
pop
cmp
subb
mov
cmp
jo
xchg
pop
cmp
pop
rolb
inc
out
xchg
jb
xor
les
dec
movsb
mov
imul
addr16
scas
lcall
out
ret
and
iret
jnp,pt
inc
mov
xor
add
out
mov
adc
jns
incb
pop
fwait
outsl
insb
shrl
les
dec
push
sub
leave
cmp
mov
das
mov
xor
mov
hlt
in
xchg
pop
sahf
jb
lcall
and
sub
adc
xchg
into
daa
add
dec
or
jne
push
and
adc
movsl
xchg
and
mov
loop
cld
test
mov
cmp
jg
or
pop
mov
and
fabs
cwtl
mov
mov
mov
dec
push
sub
xor
pop
insb
cwtl
xchg
inc
in
test
mov
fistps
dec
in
or
add
and
or
adc
inc
push
dec
pushl
jl
xchg
jmp
mov
push
cltd
jo
call
push
loop
xchg
in
push
les
ljmp
or
and
and
dec
mov
popa
mov
push
out
cmc
dec
sti
test
jge
add
push
dec
inc
shll
loopne
fidivrs
pop
movsl
sbb
stc
add
xchg
cmpsb
jecxz
dec
test
mov
cmp
orl
inc
fwait
xchg
and
jo
lea
sti
xchg
mov
clc
imul
sbb
pop
pop
cmp
sbb
xor
pop
in
ljmp
inc
mov
jne
jbe
jmp
sarl
call
test
pushfw
scas
xchg
cltd
sub
sbb
push
pushf
es
mov
add
pop
js
and
add
mov
lahf
mov
lods
inc
das
xchg
ja
or
imul
mov
jp
push
jmp
fildl
pop
icebp
and
imulb
cvtpi2ps
repz
data16
popf
mov
das
scas
mov
shlb
cwtl
outsb
jg
imulb
mov
ds
test
add
push
shr
or
sti
stos
out
out
adc
outsl
xchg
les
popf
scas
lret
ds
push
and
inc
scas
outsb
sbb
sbb
push
in
in
test
cwtl
fidivrl
sub
adc
mov
pusha
jno
adc
adc
mov
mov
cmp
or
push
aas
add
dec
mov
push
shr
lds
pop
push
loope
rorl
js
std
xchg
icebp
lret
jmp
cmp
jnp
jbe
add
jp
imul
xor
adc
pop
hlt
mov
lret
xorb
pop
and
mov
aas
icebp
loop
inc
aad
aaa
inc
mov
imul
xchg
imul
daa
out
push
loopne
add
and
mov
insl
sbb
lock
add
jecxz
jnp
mov
push
push
loope
xor
push
adc
or
xlat
mov
repz
jmp
adc
add
and
mov
xor
ret
sbb
shll
adc
out
mov
adc
xchg
mov
push
adc
call
lahf
lea
mov
sub
int
mov
cwtl
sbb
lret
outsl
fwait
lods
jne
aad
sub
jno
jae
mov
sub
outsl
xchg
rcll
sbb
cmp
and
mov
jae
cli
jl
inc
pop
shll
mov
jae
fmuls
pop
mov
jnp
pop
dec
or
jae
out
push
or
jge
sbb
dec
rorb
je
push
mov
and
sub
adc
push
hlt
jp
sbb
cmpsl
mov
push
stos
popf
dec
aas
movsl
mov
je
adc
xchg
insb
pop
sbb
sar
dec
out
jg
pop
in
mov
add
fidivl
lret
mov
add
pop
cmp
jmp
mov
ljmp
lret
push
repnz
dec
pop
in
sbb
in
push
adc
sahf
cmpsb
or
adc
icebp
ljmp
orl
cltd
fidivs
iret
test
pop
and
lea
addr16
mov
xor
pop
mov
mov
popa
das
cmp
add
cmp
jae
pop
mov
pop
sub
and
lret
jne
push
divl
cld
cmpb
mov
cs
adc
sti
cmp
and
sti
lret
push
dec
lds
lea
inc
es
js
jp
data16
xchg
ret
bound
lds
xchg
scas
jle
outsb
sub
jnp
dec
ret
mov
add
and
push
movaps
mov
fisttps
push
inc
dec
xchg
xchg
iret
jo
lock
and
enter
sub
clc
pusha
loopne
push
jne
mov
icebp
pop
jo,pn
into
sahf
or
push
mov
es
or
sarl
add
xlat
mov
pop
icebp
sbbb
xor
mov
test
xor
fldl
push
fwait
mov
fabs
out
fmuls
jns
mov
or
lea
xor
inc
or
jl
es
aas
push
lea
iret
fsubrl
gs
lcall
icebp
cmp
in
scas
push
test
lods
pop
cmc
push
nop
and
fsts
repz
xchg
jb
ja
dec
pop
dec
lahf
adc
shll
mov
lods
mov
fstpl
sbb
xor
test
les
notb
add
fmulp
aam
out
stc
stos
pop
xchg
shrl
fdivs
cmp
por
pusha
js
ss
test
repnz
inc
out
or
add
rcll
int
jne
insl
aam
or
jno
and
std
aaa
hlt
loope
cmpsb
push
outsl
into
pop
hlt
fistpl
fildl
pop
sbb
or
and
mov
xor
in
cmp
aad
test
jnp
push
mov
das
sahf
dec
ret
or
pop
jb
mov
add
jb
jae
jp
in
mov
and
ss
imul
xchg
dec
pop
es
add
mov
and
inc
push
and
cltd
pop
inc
fmull
ljmp
sub
out
inc
arpl
or
scas
jmp
dec
lods
cmc
mov
scas
pushf
outsb
xchg
mov
lea
fstp
mov
test
hlt
aam
jno
aaa
in
push
stos
pop
test
sbbb
insl
jb
pop
sbb
testl
push
das
inc
insl
ror
xlat
push
cmp
je
jmp
cli
pop
dec
sbb
mov
in
mov
insb
dec
movsb
jns
ja
sbb
cwtl
mov
jecxz
jae
push
sub
xor
lods
outsb
push
popa
out
shrb
fcoms
xchg
jp
repnz
cs
push
pop
outsb
fwait
sbb
sub
dec
xor
cmpsl
pop
sub
test
lahf
cmpsb
dec
lret
test
pop
sbb
ja
jg
xor
sti
jecxz
out
sub
mov
push
push
pop
cmp
cmp
push
lahf
jle
das
mov
inc
jb
pop
arpl
ret
xor
push
xchg
dec
xor
dec
int3
sahf
push
mov
int
sub
sbb
fs
pushl
sbb
mov
cmp
mov
es
lret
scas
fildll
insb
lds
ret
inc
ret
and
lods
sbb
inc
sahf
test
cmp
or
cmp
rolb
ret
das
inc
mov
fidivrs
cmpsl
jb
stc
mov
insl
clc
mov
hlt
fiadds
mov
dec
add
in
lret
push
lock
inc
ficoms
outsb
cmp
sbb
push
ljmp
or
adc
dec
and
mov
subl
push
and
sahf
negb
outsb
sbb
movsb
stos
jp,pn
pop
in
imul
sub
xchg
inc
das
mov
sub
xchg
sub
andl
xor
lret
imul
add
out
stc
ficomps
hlt
test
lcall
cmp
pop
mov
fwait
outsb
ds
fabs
pop
repnz
std
aam
inc
je
cmp
data16
fisttps
cmp
inc
scas
fmuls
ljmp
push
in
les
shll
adc
loopne
xchg
sarl
insl
inc
and
jp
and
sbb
das
mov
adc
pop
lcall
outsb
mov
outsl
iret
pop
or
std
stc
push
lods
xchg
xchg
push
stc
popa
lea
jns
subb
mov
pop
cmp
insl
mov
aas
or
mov
dec
in
icebp
jb
or
lds
out
mov
adc
mov
dec
dec
jecxz
ljmp
xchg
fldl
add
fmuls
into
sti
xchg
dec
addb
cmpsl
outsb
mov
jge
add
or
xor
cmp
icebp
test
adc
jae
adc
cld
mov
mov
stos
popf
mov
dec
jbe
repnz
mov
iret
sti
and
add
imul
xchg
and
stos
shl
sbb
dec
in
stos
aaa
sbb
cli
addl
xchg
push
cmp
notl
sarl
mov
insb
pop
in
cs
dec
das
xchg
jbe
sti
dec
inc
and
and
sbb
xchg
sub
cs
jnp
add
cmc
mov
enter
cld
jmp
add
stos
fsubr
and
mov
xor
mov
dec
rcll
sbb
fldcw
ret
aaa
xor
or
lods
enter
cmp
mov
mov
out
mov
push
test
idivl
mov
ja
mov
xchg
push
mov
jo
jg
fmull
mov
cld
push
jle
or
fldl
and
mov
mov
int
test
inc
cmp
test
jae
das
xor
jmp
fucom
sbbb
iret
nop
inc
xchg
nop
pop
push
jecxz
sbb
cmp
mov
lods
jo
int
mov
ret
leave
mov
mov
arpl
or
jl
jo
lock
push
jecxz
fstpt
popf
cmp
js
add
addr16
call
mov
xchg
mov
clc
scas
mov
dec
in
rcl
dec
rcrl
loope
xor
jmp
cmp
or
xchg
outsl
add
mov
fdivs
popf
mov
cmpsb
fidivrs
xor
rcrb
xchg
xor
nop
fidivrl
fstpt
pop
jmp
rcl
lods
push
repnz
out
jns
cltd
cmpsb
xchg
xor
mov
jle
sub
jbe
jnp
sbb
loope
ja
inc
jbe
sbbb
out
popf
test
xor
rorb
mov
aad
sub
mov
fistps
lock
lret
cmp
outsl
int3
scas
and
mov
push
mov
hlt
aam
mov
sete
pop
sub
aaa
fs
mov
xchg
mov
fistpl
hlt
scas
lods
adc
lods
popf
push
loopne
pop
mov
sbb
int
mov
mov
push
inc
xchg
push
mov
cmpsl
jg
add
dec
cmp
nop
lret
sbb
and
mov
mov
adc
lcall
and
sti
mov
test
sub
rcll
imul
lock
push
cwtl
stc
das
mov
sub
adc
popf
imul
bound
outsl
popa
mov
push
bnd
adc
jge
sub
inc
loop
out
mov
push
std
dec
ret
pop
jg
daa
cmpsl
je
mov
into
push
mov
mov
mov
fnsave
add
leave
lods
mov
jge
dec
shlb
aas
ljmp
or
into
stos
pop
or
pop
pop
cmpl
jp
pop
mov
aas
mov
scas
ret
or
daa
jmp
fdivrl
fcos
cwtl
je
adc
fsubrs
mov
in
mov
xor
aaa
orl
enter
push
insl
dec
daa
pop
adc
loopne
pop
lods
inc
lcall
cmpsb
or
sbb
sbb
sahf
arpl
outsb
loope
sbb
mov
inc
out
iret
hlt
data16
adc
adc
in
add
arpl
ffree
adc
les
mov
dec
xchg
cmpsl
xlat
mov
jns
and
out
loop
or
cmp
xchg
cmp
nop
xor
insb
mov
leave
jg
fcoml
xor
push
push
aas
jo
add
mov
sbb
mov
push
movsl
add
add
sub
or
sub
and
jecxz
aam
cs
sti
push
pop
rolb
cmc
push
add
sbb
mov
push
xchg
xor
mov
scas
imul
push
aaa
out
dec
mov
jecxz
ret
repnz
ds
addb
push
lcall
mov
es
sar
mov
fistps
adc
inc
rcrl
in
lret
cld
in
pushf
stos
int3
add
sbb
mov
cmc
inc
aas
push
add
cmp
mov
in
mov
jecxz
jecxz
ja
add
addr16
mov
jmp
cmpsl
imul
and
mov
push
cmpsb
sub
mov
fistpll
fnstcw
cmpsb
pop
aam
xchg
push
clc
jle
add
mov
fwait
aad
mov
iret
outsb
into
cmp
cmp
cld
add
cmp
jae
movsl
stos
jmp
mov
fld
xchg
scas
dec
enter
and
divb
clc
cmp
push
mov
icebp
sub
mov
cmp
xchg
ss
inc
fisubrs
xlat
mov
out
xchg
aas
loope
xchg
inc
pop
and
xlat
sahf
mov
pop
mov
scas
sub
das
das
hlt
xor
mov
push
pop
imul
loopne
andb
dec
fldl
pop
sbb
fnstcw
mov
fsub
outsl
push
shrl
mov
add
xor
add
sti
loop
int3
shl
pop
in
jno
sbb
sarl
dec
mov
add
mov
test
sbb
mov
stc
popf
cmp
mov
jl
in
inc
enter
jge
test
arpl
xchg
hlt
add
push
addr16
clc
jmp
pop
xchg
and
mov
push
sbb
fdivrs
cmovae
sub
inc
adc
push
lds
fsubrs
ret
mov
mov
adc
and
dec
cmpl
mov
adc
mov
jno
loope
pop
mov
jo
les
or
xor
pop
cmpb
push
movsb
and
push
lea
gs
pop
adc
pop
and
jle
cmp
enter
xchg
movsb
jl
bound
lcall
fdiv
mov
adc
mov
xor
js
test
mov
dec
mov
push
cltd
sub
inc
mov
cs
fcompl
rorb
iret
pop
cmpsb
pusha
ds
or
dec
jae
push
popf
adc
movlps
movl
imul
mov
and
jnp
pop
clc
scas
add
out
mov
outsl
mov
lahf
dec
mov
pop
push
leave
ret
int
and
pop
leave
jno
sub
fists
or
jecxz
push
pop
xchg
cltd
movzwl
mov
out
mov
cmpsl
jmp
arpl
gs
jge
dec
cmp
movsl
mov
cmp
insl
loope
jecxz
mov
lret
fwait
lret
pop
push
push
mov
dec
js
cwtl
mov
inc
mov
inc
test
push
mov
push
insl
fwait
ret
jns
mov
pop
js
das
mov
mov
shll
lea
jns
cmp
les
dec
jg
push
lahf
cmc
out
mov
imul
mov
aad
scas
lock
push
pop
xlat
xor
scas
enter
mov
int
jecxz
mov
fwait
loope
or
jns
sub
dec
mov
sbb
outsb
rol
inc
sbb
out
cmpsb
lsl
inc
ljmp
aas
add
ficompl
mov
mov
icebp
ljmp
lcall
jb
pop
scas
pop
dec
insl
mov
mov
sub
sbb
push
cmp
loopne
popa
push
out
push
stos
ljmp
jb
pop
mov
mov
in
ja
hlt
repz
inc
or
setle
or
inc
out
add
rcll
pop
cwtl
arpl
sub
jo
jae
add
out
jne
aaa
push
inc
cmpsb
into
fmul
dec
rorb
jne
enter
push
add
adcl
insl
inc
cmp
les
movsb
mov
test
cmp
dec
pop
leave
add
mov
out
mov
mov
push
dec
testb
rcrb
jbe
dec
mov
lds
aaa
icebp
xchg
sbb
je
mov
inc
sahf
bound
lret
sbb
and
loopne
sub
mov
into
push
scas
testl
insl
mov
dec
fstpt
test
pop
outsb
or
jnp
jle
xchg
shrb
sbb
cmp
jmp
aas
sbbb
scas
in
or
jp
rorb
mov
shrb
cmp
cmp
sahf
push
mov
jmp
aaa
add
mov
clc
jmp
lods
jno
mov
xchg
hlt
xchg
xor
sbb
push
mov
out
ret
jle
mov
int
jg
psrlw
bound
clc
mov
leave
or
mov
jbe
push
lret
and
xor
mov
enter
into
pop
and
and
in
arpl
xor
les
push
pop
push
and
pop
ret
pop
data16
fstpl
and
sub
push
sbb
je
adc
jmp
subl
out
sahf
test
dec
mov
pop
mov
jmp
int
cld
pushf
fbld
push
outsb
add
mov
add
mov
pop
push
and
sahf
call
sbb
addr16
lret
arpl
mov
call
sub
lods
adc
je
js
mov
repnz
je
movsl
repz
cli
mov
adc
fadd
or
lcall
and
les
aam
addl
mov
lahf
std
aas
std
ljmp
out
inc
dec
test
inc
inc
jbe
pop
notb
cmp
adc
sbb
in
stos
into
adc
jmp
pop
mov
jge
sub
lock
stos
pop
mov
adc
pop
sarl
lcall
icebp
jae
out
cmp
lret
push
add
das
cmp
cmp
in
enter
dec
stc
pop
call
dec
lret
and
jmp
pushf
ja
subl
mov
jl
xchg
fbld
and
mov
daa
cmpb
inc
jmp
and
add
xchg
xor
nop
jmp
rcrl
jns
mov
test
mov
push
cmc
mov
cmp
imul
mov
xor
mov
dec
movsb
pop
adc
adc
and
mov
sub
add
cmp
gs
rcll
sti
jmp
shrl
nop
das
jnp
cmp
inc
xchg
mov
sbb
inc
shl
loop
es
mov
xchg
fs
sahf
or
insl
xchg
push
dec
push
lock
pop
or
test
dec
imul
xor
fs
jb
bnd
cmpsb
fmul
or
lahf
mov
sub
ss
das
adc
mov
test
jae
sbb
xchg
sbb
fucom
sub
push
movsl
insl
adc
movlps
aaa
ja
inc
and
aad
sahf
scas
popa
jl
push
mov
sbb
addr16
rorl
lods
dec
inc
fmull
mov
cmpsb
adc
inc
cmp
adc
pushf
adc
gs
out
adc
mov
ja
dec
fwait
dec
xchg
jg
loopne
xor
inc
jl
jae
pushf
sub
mov
xor
cli
sbb
mov
lods
stos
push
shlb
in
div
cs
leave
outsl
mov
xor
push
dec
loope
pop
pop
aas
pop
xor
jne
leave
xor
adcl
cli
sbb
call
pop
cmp
insl
call
push
push
test
fisubrl
xlat
jp
sbb
pushf
shll
gs
mov
xlat
cli
push
movsb
jle
cmpsb
sbb
xlat
clc
jecxz
xchg
xor
aad
mov
fsubs
popa
clc
into
dec
mulb
lods
push
mov
mov
dec
cmpsb
jg
push
push
out
sbb
cltd
cmp
jb
or
xor
iret
lods
stos
ja
cmp
enter
jo
pop
mov
add
or
or
inc
in
movsb
test
jns
mov
jecxz
push
push
sbb
add
mov
or
ljmp
mov
fsubs
nop
adcl
jae
lret
xchg
inc
mov
sbb
inc
mov
ljmp
aad
enter
fnsave
jnp
mov
out
push
sub
sbb
jnp
jne
mov
es
xorl
or
adcl
data16
xor
shlb
sbbl
ret
push
fdivrp
fs
sbb
push
cmp
sub
pop
loope
mov
int3
js
dec
xor
sub
mov
add
add
xchg
pushf
mov
mov
cmp
and
push
jg
and
enter
push
ds
inc
dec
sub
daa
popa
into
pop
pushf
pop
dec
lahf
xchg
shrb
popa
in
xchg
mov
and
data16
jo
ljmp
daa
dec
ja
repnz
out
dec
nop
out
jno
mov
mov
sbb
adc
or
xchg
pop
icebp
test
mov
int3
dec
call
rorb
pushf
xor
add
fwait
xor
adc
sti
dec
out
pop
push
sbb
loop
jmp
mov
cmpsl
xchg
pop
add
cltd
outsb
fisubrl
push
pop
add
hlt
stos
xchg
xor
cmp
imul
push
inc
aad
stos
nop
dec
jo
adc
cmp
sbb
and
jge
mov
mov
xor
add
jg
je
inc
cltd
in
imull
ds
or
mov
xor
jo
fyl2x
jb
dec
shrl
jno
es
data16
andl
mov
dec
xor
arpl
leave
jb
lods
icebp
arpl
jecxz
push
fcmovbe
imul
or
xor
xchg
push
in
push
scas
sti
push
arpl
xor
fiaddl
cmp
fsubp
fstl
shrb
shll
sub
adc
cmp
push
xor
aas
pop
dec
push
pop
sbb
cli
sub
sti
and
fxch
jge
ja
test
inc
into
adc
pop
push
lods
scas
mov
les
repz
push
mov
xchg
inc
or
call
jne
adc
pop
aas
push
out
lods
iret
pop
mov
shrb
push
mov
int3
inc
out
adc
arpl
stos
sub
pop
inc
jmp
pop
aaa
gs
ret
mov
add
mov
jp
push
mov
lods
cmp
into
dec
jno
mov
jp
or
and
scas
pop
sbb
fdivp
gs
or
sahf
ret
jb
xchg
add
or
push
pop
jmp
mov
sub
xor
cld
jge
test
inc
or
or
and
mov
xchg
daa
and
add
xchg
ja
test
int3
dec
ret
push
xor
pop
imul
clc
dec
imul
neg
add
push
stos
pop
jge
push
in
and
lret
es
in
loope
inc
mov
lret
and
imul
xor
mov
pop
fcmovb
mov
movsl
sub
push
ljmp
inc
sbb
cli
sahf
scas
cld
fsub
out
dec
add
adc
cmpsl
repz
std
mov
das
pop
inc
mov
and
scas
jecxz
arpl
fistps
pop
mov
mov
push
repz
jae
aas
cmp
insl
fld
out
jg
jle
cmp
fiadds
clc
imul
pop
cmpb
sbb
cmp
std
nop
aaa
inc
mov
or
mov
sbb
shll
dec
cmp
lahf
in
adc
adc
insb
out
jmp
ret
movsb
mov
popf
xchg
jl
pusha
inc
jp
jmp
pop
sahf
movsl
orb
repz
jl
mov
testb
mov
or
jge
pop
lods
scas
cmp
sbb
test
std
jb,pn
mov
orl
in
dec
fs
popa
xor
dec
adc
xor
sbb
stos
adc
clc
pusha
repnz
pop
imul
cmpl
xchg
adc
lret
mov
scas
in
sub
xchg
stos
idivl
lock
and
aas
cs
pop
adc
or
cltd
addb
adc
fstpt
xchg
sarb
cld
push
and
mov
dec
add
addb
enter
push
stc
mov
loop
xchg
jb
test
es
jge
aam
lret
test
in
fsubrp
cmp
scas
xor
nop
jne
inc
shll
push
dec
loope
icebp
mov
fidivs
rclb
fiadds
loop
add
mov
pop
cmc
decl
pop
add
push
pop
outsl
test
mov
mov
loope
mov
jbe
pop
arpl
roll
lods
jb
push
les
incb
and
stos
lahf
jnp
xchg
xchg
and
andb
in
lahf
mov
stos
dec
pop
ficoml
in
sub
sub
int
adc
mov
xor
xchg
clc
inc
ja
orl
sbb
cmp
pop
mov
jge,pt
add
pop
les
ret
les
xlat
mov
xor
or
in
xchg
dec
dec
add
mov
or
lret
dec
jmp
test
xlat
jno
push
or
enter
mul
jb
inc
push
sbb
push
pop
sub
les
in
inc
jb
repnz
arpl
pusha
mov
pop
clc
mov
sub
not
fbstp
test
and
enter
fs
mov
mov
cmp
mov
gs
xor
iret
lods
dec
push
cmpsb
fildl
popa
movsl
adc
pushl
dec
arpl
lock
mov
cld
mov
jecxz
loope
jmp
rcrw
pop
ljmp
sahf
shrl
inc
jmp
and
and
cmp
cmovge
cmpsb
fidivl
xchg
mov
imul
jno
sub
push
decb
xchg
mov
int
fdivp
or
aas
xchg
out
pusha
sar
mov
stos
scas
icebp
enter
adc
fsubrl
xchg
or
addr16
es
sbb
mov
push
xor
jle
jecxz
pop
cmp
mov
clc
iret
push
int3
mov
data16
jg
and
pop
fisttps
cli
cmpsl
in
add
push
loop
ficoml
pop
or
fildll
movsb
test
mov
xchg
add
cli
scas
dec
fiaddl
inc
dec
sub
xor
out
repnz
pop
cld
iret
cmc
pop
lods
repnz
adc
sti
push
loop
lods
mov
mov
push
push
fwait
push
add
mov
jb
jb
imul
inc
fs
mov
pop
or
fadds
les
scas
inc
addr16
or
mov
loop
aaa
sub
dec
pushl
arpl
dec
dec
or
stos
xchg
xchg
mov
push
lret
and
xor
lods
pop
inc
lret
inc
out
les
jmp
or
jb
ljmp
jg
js
or
xchg
pop
fidivl
cld
out
fcmovnb
sbb
pop
push
or
cmpsb
xor
icebp
jae
pop
std
xlat
pop
dec
pop
aas
dec
xlat
cmpsb
repnz
sub
mov
int
mov
stc
dec
inc
mov
ss
pop
in
mov
jns
mov
stos
in
pop
pop
mov
test
mov
adc
mov
or
aad
lea
lahf
sahf
cmpsl
cmp
mov
cmpsb
dec
popf
xor
fsubl
push
addr16
dec
mov
sti
daa
nop
arpl
sbb
daa
scas
andb
lock
fwait
fs
mov
cmpsl
movsb
pop
mov
fisttps
pop
lret
into
shll
cmp
js
movsb
fmuls
test
jns
lock
adc
xchg
inc
ds
ljmp
in
lods
dec
jp
mulb
imul
test
out
stc
xorb
adc
add
les
push
jl
and
shlb
cmc
cmp
out
movsb
aaa
sub
mov
jno
stos
pop
push
jp
sub
mov
cmp
adc
cltd
xchg
into
insl
outsl
imul
aas
leave
cli
inc
mov
ljmp
in
jecxz
mov
hlt
pop
cmpsl
inc
pushf
stos
jno
pop
mul
movsl
sbb
lea
stos
scas
xor
jg
add
mov
out
xlat
cmp
je
sub
cmp
popf
lret
or
mov
jo
mov
or
mov
sub
leave
dec
add
loope
mov
stos
mov
aaa
mull
dec
lea
mov
jle
out
cmpsl
and
and
mov
jae
sahf
and
mov
mov
dec
mov
aas
clc
mov
mov
nop
jmp
or
arpl
jns
fcomi
daa
imul
jae
lock
movsb
sub
aam
cmp
hlt
xchg
or
call
enter
or
inc
dec
jge
dec
ss
andb
xchg
rcr
and
mov
lock
xchg
and
adc
loop
dec
filds
rcl
xchg
add
stos
hlt
xchg
pusha
xchg
out
xchg
ret
gs
fmul
std
lock
lcall
adc
push
movsb
rcll
sub
sbb
insl
fstpl
pop
pop
push
inc
test
outsl
movsb
lock
sahf
fnsave
xchg
mov
fistl
fsubr
lahf
hlt
sbb
or
in
fldl
push
mov
movsl
mov
xchg
mov
and
mov
adc
sbb
iret
mov
xor
xor
mov
mov
mov
aaa
dec
push
dec
cmc
jno
in
iret
cli
stos
push
lret
jl
subl
adc
lret
jae
xor
xor
mov
sahf
adc
sub
and
xor
cli
push
add
adc
std
mov
ljmp
and
cmp
out
jbe
notb
or
mov
out
sbb
lahf
iret
data16
mov
in
cmp
add
jae
mov
pushf
sub
and
xor
adcb
out
add
mov
lcall
lret
lock
sub
ja
dec
lretw
nop
ds
aam
jne
jno
push
call
pop
pop
or
leave
in
sbb
inc
lock
sub
and
sti
add
mov
dec
cmpb
arpl
xor
mov
dec
jmp
xchg
mov
fisubrs
dec
adc
add
in
jp
push
mov
push
dec
into
aaa
sbb
out
aad
hlt
xchg
fwait
popf
dec
push
sub
adc
cmpsl
scas
mov
in
rclb
mov
xlat
rcr
sbb
or
lea
bound
ds
arpl
mov
sub
into
aam
cwtl
push
jns
sub
dec
sbb
es
xchg
sbb
adc
pop
sub
mov
adc
mov
mov
xlat
sub
test
dec
loop
sub
jp
jle
mov
outsb
adc
cmp
cwtl
add
sbb
jmp
pushf
cltd
sbb
test
jne
lret
cld
jnp
outsb
push
sub
push
in
in
sbbb
lret
enter
dec
cli
std
cmp
fnstsw
xchg
jmp
jg
pop
dec
leave
sbb
loope
std
lret
sub
lret
mov
fistps
subb
scas
push
in
ljmp
mov
or
rcl
push
sub
loope
push
jge
jecxz
push
and
aas
or
sbb
mov
xor
sbb
push
jno
mov
mov
out
scas
or
mov
es
fnsave
cmpsl
mov
and
jno
inc
jge
ret
adc
lcall
lea
cmp
mov
sub
push
jo
inc
jecxz
inc
cmc
sbbb
pushl
repz
adc
pop
loopne
aad
lret
inc
jge
push
sbb
xchg
dec
mov
add
roll
in
inc
adc
in
pop
push
cli
arpl
das
inc
gs
mov
jo
adc
xchg
sahf
or
loopne
iret
sbb
mov
repz
je
sahf
aaa
push
cwtl
or
orb
xor
divb
les
adc
iret
dec
js
sub
fistps
ss
xor
cmp
ja
adc
js
ja
push
sbb
pushf
psubusb
dec
inc
xor
or
loope
movsl
lock
stos
mov
push
push
jnp
mov
mov
test
sarb
into
adc
xor
or
std
ljmp
sahf
imul
popf
roll
fsubl
push
jle
insl
push
push
xchg
es
push
cmp
rcll
mov
add
lods
sub
xchg
jmp
xor
adc
lahf
adc
notb
int
cmc
lret
inc
js
jno
aad
xor
dec
add
mov
mov
arpl
and
out
cmpsb
xchg
sub
mov
pop
sbb
aas
sarb
lock
and
add
mov
xor
lret
xor
pop
lods
mov
popa
mov
and
fisubl
stos
outsl
pop
stos
inc
sbb
jp
sti
dec
mov
ljmp
xlat
adc
push
push
mov
push
sarl
shl
adc
xchg
sub
test
fsubl
mov
arpl
mov
clc
cwtl
dec
xor
cmp
xchg
sti
mov
scas
cmc
push
pop
xchg
lcall
cmp
xchg
mov
add
mov
js
push
mov
adc
adc
clc
mov
movsl
shll
fisubs
out
xchg
cmp
mov
jae
subl
cmp
sbb
sahf
mov
inc
rorl
arpl
mov
sbb
adc
in
subb
mov
or
fldl
dec
pop
das
mov
inc
outsl
mov
push
xor
cmpsl
mov
push
push
test
lret
movsl
roll
mov
jb
add
and
mov
aaa
xor
mov
adc
add
js
jae
aad
pop
jecxz
repz
cmp
rorl
lock
outsb
mov
fwait
stc
sub
into
cs
inc
push
fists
pusha
xor
sbb
inc
add
adc
in
pop
and
jne
sbb
outsb
add
ss
lods
stc
pop
add
or
pop
jno
mov
mov
ret
imul
xchg
mov
dec
push
out
mov
lock
cmpsb
lock
call
negl
lahf
mov
cld
add
or
adc
jge,pn
aas
jl
jno
les
and
dec
movsl
jmp
dec
in
fwait
pop
pop
ret
mov
rorl
leave
or
dec
pop
andl
or
jb
jle
push
sbb
dec
lods
cmpsb
jns
pop
push
cmp
jae
push
gs
and
in
mov
jmp
xlat
sub
fsubrs
into
pop
mov
sub
jl
inc
jecxz
lds
stos
out
mov
xor
dec
and
or
ficoms
enter
js
js
loop
adc
dec
es
imul
push
aas
add
negb
fcomp
out
sbb
push
add
pop
sarb
aam
pop
out
dec
sbb
jno
push
sbb
outsb
repnz
mov
cmc
lods
pop
inc
xchg
pop
aam
inc
ljmp
sti
sbbb
orb
mov
jmp
repnz
or
dec
inc
push
add
aas
xor
xchg
jl
movsb
mov
jne
mov
popf
sub
mov
nop
xchg
mov
adc
dec
sub
lea
cmp
repnz
ss
mov
xlat
mov
add
mov
inc
cmp
xor
aam
int
pop
lods
fsubs
pop
jmp
dec
and
aas
arpl
repnz
xlat
or
enter
ljmp
pop
and
loope
push
repz
sti
mov
int
adc
add
pusha
rclb
sub
push
insb
les
mov
pop
gs
nop
fiadds
je
pop
mov
push
push
sbbl
aaa
js
scas
jl
jg
int3
pop
push
idivb
adc
cmc
mov
and
mov
xchg
popa
xchg
pop
add
mov
out
inc
jae
push
lods
sub
call
adc
fidivrl
lret
rolb
fsubl
enter
ljmp
or
loope
shr
clc
fbld
les
jl
in
stc
lahf
mov
fldcw
mov
and
mov
cmp
aaa
frstor
xchg
pop
divb
fdivrs
in
insl
fs
or
or
cmp
test
add
cs
add
push
test
int
push
lahf
lods
dec
cmpsb
sarl
aam
mov
fwait
outsb
adc
add
push
rcr
and
pop
rcrb
notb
jae
sbbl
out
xchg
pop
sti
pop
xchg
std
movsb
int3
int
les
scas
or
nop
imul
mov
xchg
nop
xor
add
hlt
fisubrs
loopne
fiadds
leave
xchg
popa
cmp
adc
adc
popa
loopne
cmp
dec
ja
push
movl
xchg
in
xlat
repz
idivl
cmp
scas
push
sub
cltd
mov
and
mov
stos
pop
daa
mov
cld
fldcw
push
jmp
cld
cmp
mov
push
dec
mov
xchg
hlt
add
push
cmp
xor
cmp
nop
imul
movsb
enter
and
je
cmp
pop
xchg
xchg
mov
std
sahf
push
cmpsb
jnp
movsl
clc
repz
sbb
sub
mov
xchg
out
xchg
icebp
push
jns
out
and
lock
inc
add
loope
hlt
in
push
mov
mov
out
hlt
mov
lcall
out
aam
pop
jle
mov
mov
cmp
fldl
cmp
inc
hlt
push
jae
sbb
adcl
xlat
loop
jne
aam
test
adc
bnd
adc
lock
inc
sbb
iret
add
adc
int
rorb
jno
add
xchg
es
sub
add
pusha
mov
mov
push
jecxz
jge
in
icebp
dec
or
mov
lcall
out
dec
adc
iret
out
nop
rcrl
in
push
mov
fbld
cmp
xor
add
repz
xchg
jge
mov
sub
mov
sbb
cmpsl
out
iret
les
mov
or
std
stc
sbb
pop
xchg
adc
mov
es
push
lods
je
cmpb
mov
insb
pop
add
xor
adc
inc
fcompl
inc
sub
add
fisttps
xlat
mov
xor
test
jmp
les
aaa
push
mov
sbb
adc
push
xor
gs
scas
pushl
lret
xchg
jno
and
mov
inc
xor
pop
fwait
bound
push
scas
inc
cwtl
xchg
mov
insl
cmc
or
add
popa
stos
je
and
sub
gs
adc
xchg
push
js
xchg
cs
aaa
dec
cmc
int3
cmp
or
pop
and
xchg
dec
and
popa
cld
movsb
jg
sub
andl
not
dec
gs
sti
cltd
fsubr
jo
pop
in
sub
mov
mov
add
cmp
and
data16
xchg
xchg
popf
xor
xchg
movsb
add
and
fsubl
add
ss
into
dec
jo
mov
xchg
int3
add
mov
mov
push
mov
xor
ja
mov
addl
push
adcb
jae
and
xor
xor
push
insb
cmpsl
add
fstps
mov
jno
push
adcb
cltd
inc
movsl
pop
adc
sbb
jnp
mov
arpl
adc
push
mov
add
inc
lret
in
pop
mov
jg
and
push
cmp
out
insl
dec
arpl
mov
adc
in
fldenv
cli
hlt
add
mov
pop
arpl
add
mov
mov
jae
push
hlt
pop
aam
iret
fxch
xchg
sub
lods
jbe
dec
cmp
hlt
adc
cld
popl
pop
jge
repnz
sub
add
jno
add
aas
hlt
adc
add
inc
mov
xchg
out
icebp
in
inc
sti
and
inc
lock
xchg
sub
jge
popw
dec
jle
in
lcall
mov
pop
pop
ja
loopne
arpl
aas
push
mov
xorl
lods
mov
fildl
fiadds
dec
push
orl
xchg
mov
push
mov
into
roll
dec
test
adc
les
xor
dec
jns
adc
movq
std
lds
mov
xchg
mov
mov
aam
lods
jp
xor
add
pop
test
sahf
jmp
xchg
inc
mov
and
insb
mov
shll
out
mov
mov
jmp
mov
xchg
ss
outsl
outsb
adc
sub
cmp
scas
movzwl
ret
lods
mov
jns
aas
out
xchg
stos
inc
pop
inc
outsl
rcrl
rorl
pmaxub
push
push
iret
rorb
jmp
push
fwait
pop
testl
xchg
lcall
adc
xchg
fcompl
ja
test
daa
int
cmp
push
inc
jle
loopne
into
inc
pushf
mov
arpl
lock
cmp
mov
pop
enter
in
mov
icebp
into
adc
add
fstpt
dec
pop
icebp
push
pop
pop
push
fwait
loopne
pop
sub
outsb
jmp
mov
out
test
pop
pop
das
adc
xor
xor
push
addr16
mov
fildll
mov
mov
mov
cmpsb
xor
pop
inc
jecxz
incb
xor
iret
mov
imul
mov
pusha
push
jmp
gs
jl
push
inc
xchg
test
test
jecxz
inc
mov
dec
or
xor
bnd
aam
lods
inc
test
fwait
js
inc
sti
and
aad
push
and
sub
sub
cmp
push
jb
inc
mov
add
andb
inc
aad
mov
inc
scas
or
iret
xor
inc
stos
lret
int3
adc
icebp
outsl
mov
xor
cmp
std
push
clc
xchg
fs
cmp
fidivs
jne
jl
mov
sub
ja
out
jno
iret
sub
or
xlat
hlt
outsl
mov
dec
jb
bound
imul
cmp
in
lods
xor
les
mov
lods
orl
inc
and
aas
adc
sahf
mov
mov
dec
addr16
jne
cmp
pop
jmp
and
push
jle
sub
xchg
and
lds
add
jle
pop
dec
ss
out
shll
push
ss
sub
pop
nop
mov
pop
leave
out
sub
dec
insb
or
adc
dec
cwtl
dec
repnz
fisttpll
xlat
popa
sbb
int
jne
mov
xor
and
lea
das
je
fstl
enter
mov
aam
pop
cld
sub
cmp
and
popa
clc
sbb
pop
mov
loop
cwtl
andl
arpl
and
xor
xor
clc
inc
imul
pop
push
jno
mov
dec
ja
cmc
ds
add
mov
arpl
clc
dec
inc
inc
call
popa
add
jbe
lret
clc
and
in
or
inc
xchg
xchg
adcb
pop
adc
add
popf
pop
or
pop
mov
inc
mov
das
mov
insl
or
cmp
iret
push
aaa
hlt
mov
daa
dec
shrb
xor
dec
sub
icebp
or
out
pop
push
aas
es
push
das
sub
fildll
jmp
insl
mov
xchg
ja
out
xchg
or
cmp
xchg
insb
add
dec
sbb
es
popa
pushf
or
fs
pop
lods
sbb
rep
xchg
push
pop
mov
inc
sti
mov
push
jnp
inc
add
push
in
mov
pop
pop
call
jnp
shlb
cmpsb
ret
and
jg
sub
rcl
addb
es
sub
add
xor
int
and
cmp
lret
popa
andl
pop
ds
xor
je
dec
sbb
in
dec
push
xor
les
dec
jge
xchg
das
mov
mov
mov
mov
add
lahf
daa
in
lds
cmp
lahf
loope
bound
insb
lret
mov
cmp
stos
cmp
aam
xor
in
je
nop
and
std
mov
sbb
xchg
fildl
pop
mov
push
fcomps
pusha
push
rcll
jns
lods
cmc
imul
mov
mov
hlt
rorl
add
cltd
xchg
mov
mov
mov
mov
imulb
xor
cmp
pop
pmaddwd
or
sbb
xlat
jmp
xchg
and
loop
adc
pop
or
arpl
adc
adc
ja
scas
inc
xchg
and
sub
adc
scas
mov
mov
jg
cmp
mov
movsl
pop
out
mov
popf
push
or
mov
dec
mov
stos
push
popf
dec
dec
pop
dec
jle
dec
aad
sbb
ficoms
fwait
pop
pop
dec
movsb
push
fdivrl
sub
divb
test
int
icebp
pop
cmpsb
es
cmc
jg
stc
loop
lea
adc
enter
std
insl
loopne
rcrl
sbb
sub
push
jle
mov
cmpsb
pop
insb
pop
mov
loopne
mov
jae
cmp
cmp
lahf
dec
jge
push
cmpsb
ljmp
stos
aas
orl
ret
mov
sbb
inc
xor
imulb
jno
gs
add
push
mov
ds
aam
xor
mov
mov
or
jmp
push
in
mov
hlt
int3
dec
aas
push
or
aaa
shrb
rcr
movsl
negb
mov
adc
and
frstor
mov
stc
and
hlt
cmp
adc
das
mov
or
dec
mov
ret
sub
sub
push
lcall
mov
inc
push
call
in
lret
imul
sbb
les
add
xor
adc
sub
mov
subb
inc
and
adc
ret
scas
scas
loop
mov
clc
pop
lock
mov
or
les
cs
jecxz
rclb
loope
xlat
or
jnp
sbb
loopne
xor
ficoml
ja
repz
mov
mov
mov
in
mov
adc
fcmovb
jbe
sahf
inc
scas
add
mov
into
mov
aam
cmpsb
cmp
xchg
xor
daa
jb
shlb
pop
cwtl
mov
xchg
pop
push
mov
inc
xchg
sti
xor
add
xor
je
mov
and
fs
adc
stc
sub
inc
push
sub
push
icebp
jle
push
or
lods
lds
jb
cmpb
jmp
scas
dec
mov
add
dec
lahf
loop
jb
xchg
cli
cmpsl
leave
sub
xor
rorb
sub
ror
jbe
mov
mov
sub
or
inc
cmpsb
cmp
stos
test
jae
adc
pop
lods
and
pop
insl
push
inc
mov
in
inc
dec
insl
or
repnz
test
gs
and
xchg
pop
jo
adc
jb
into
xor
push
sub
xchg
sub
shl
shl
push
mov
inc
ror
int3
cmp
or
sbb
hlt
addr16
push
sti
inc
sub
loopne
cld
lock
push
mov
mull
insb
cld
pop
scas
xlat
scas
cli
push
jns
pushf
push
jo
ss
mov
or
and
insb
stos
cs
fisttpl
testb
popf
mov
dec
int3
das
insb
lock
in
scas
or
adc
cmp
jmp
adc
pop
xlat
stc
imul
pop
stos
lret
loope
ja
adc
sub
sti
mov
into
inc
into
adc
cmc
xchg
rcrb
sub
xchg
sbb
mov
pop
sarl
or
inc
or
mov
jecxz
leave
sbb
push
sbb
sahf
push
mov
push
mov
js
fldlg2
call
stc
jmp
mov
aaa
dec
jg
fdivl
adc
ljmp
jp
and
lods
mov
pop
mov
jb
cmp
and
imul
dec
sub
fdivs
cmpsl
sti
cli
xchg
lret
lcall
repnz
inc
outsl
std
or
cmp
dec
daa
jg
and
fnstsw
das
call
push
mov
push
loope
mov
inc
adc
xchg
and
aad
mov
mov
sbb
popf
inc
and
outsl
or
popa
aaa
adc
clc
out
xor
cli
mov
loope
sti
push
adc
cs
push
call
jae
push
outsl
cli
in
push
lret
jg
jecxz
cmp
lahf
ret
dec
hlt
pop
mov
int
add
jae
insl
pop
loopne
xor
fmul
or
je
subl
lahf
push
hlt
mov
mov
sbb
cmp
dec
mov
adc
mov
push
pop
in
and
sbb
xchg
add
push
mov
cmpsb
jbe
enter
neg
insl
test
stos
push
rcrl
inc
daa
mov
mov
loope
add
es
mov
ret
adc
scas
push
cld
fwait
add
jmp
cwtl
sub
and
push
mull
int3
cmp
rcr
mov
cmp
jbe
int
xchg
pushf
mov
mov
xchg
flds
push
push
mov
sbb
jl
clc
inc
cli
push
subl
jne
add
xchg
sbbb
jge
mov
lret
fdivrs
add
mov
je
mov
sarl
xchg
ljmp
neg
rcr
pop
fstpl
dec
sbb
and
lods
lock
jno
pop
mov
xor
out
mov
sbb
push
dec
nop
xchg
push
sahf
jne
add
pop
mov
test
test
xor
ret
mov
out
dec
mov
inc
mov
add
into
push
push
push
mov
mov
pop
jae,pt
lcall
jmp
push
xor
xchg
ds
adc
ds
das
test
jb
jg
mov
in
popf
fisubs
cli
ljmpw
mov
mov
lock
push
neg
pop
and
pop
xchg
dec
push
mov
rolb
mov
adc
popf
stos
sub
subl
inc
enter
test
je
lods
adc
outsl
lods
push
push
xlat
cltd
sti
jecxz
fdivs
loop
adc
rorb
sub
cmpsl
leave
aam
stos
mov
movsb
fisubrl
orl
test
mov
xchg
sub
jo
xchg
inc
ror
lods
adc
sbb
cltd
mov
adc
xor
ljmp
pop
push
inc
test
sub
out
xor
stos
mov
or
lock
test
test
ret
cmp
out
pop
fcmovnbe
jae
xchg
push
push
call
popf
mov
jnp
sub
je
or
pop
push
sti
mov
push
sub
lcall
std
cwtl
es
stos
faddl
push
arpl
and
inc
or
and
pop
dec
add
mul
fidivrl
and
mov
dec
ret
arpl
mov
notl
mov
fisubs
add
testb
iret
sbb
fdivrl
mov
cli
adc
lds
adc
cmp
fidivrl
adcl
xchg
jbe
mov
test
shl
sbb
lret
fld
dec
sti
ja
aam
jb
jg
mov
das
cltd
fnsave
fcompl
out
push
pop
lea
imulb
xor
test
incb
sub
bound
pop
gs
shrb
pop
cli
and
je
imul
pop
adc
repz
ss
test
sub
movsb
pop
adc
adc
sbb
scas
stc
or
lock
sub
mov
dec
enter
outsb
mov
sbb
outsl
pop
dec
mov
cmp
or
aad
jbe
pop
fs
pusha
ja
jl
std
jmp
fsubrs
adc
shll
sub
arpl
shrl
lea
sbb
dec
push
clc
test
inc
mov
dec
push
cmpl
pop
xor
ljmp
pushf
pop
pop
hlt
pop
push
add
xchg
out
inc
adc
add
inc
push
dec
push
adc
cmp
sahf
and
add
jle
push
mov
aad
in
out
sub
pusha
lahf
fisttpll
stc
or
test
scas
pop
pop
aam
push
test
lods
cltd
mov
sub
mov
addr16
adc
add
jecxz
add
and
incl
daa
xchg
jne
cwtl
xor
sbb
ficomps
cld
les
inc
sbb
out
sarl
mov
mov
pop
insl
xor
push
movsb
leave
and
stos
mov
clc
outsb
sub
dec
int3
inc
and
arpl
sub
mov
pop
mov
ljmp
xchg
xor
mov
lret
pop
push
cmc
sub
stc
mov
and
scas
and
jno
add
cli
cli
sbb
inc
movsb
aaa
fldcw
out
add
mov
xor
cwtl
cmp
fiaddl
xchg
in
imul
fstps
lods
sbb
adc
mov
cmp
rcr
inc
fisubrs
inc
fsubrl
dec
sbb
xor
sar
loopne
xor
cmp
xor
lahf
shll
push
lret
xchg
subb
sbb
jb
or
bsr
popa
ret
imul
sbb
xchg
out
xchg
jle
adc
push
jae
fdivrp
mov
pop
bound
dec
inc
or
fucompp
mov
sbb
sub
mov
and
xchg
mov
imul
loop
mov
out
mov
addl
xlat
iret
divl
rol
cmp
adc
test
and
pusha
inc
push
in
repz
jb
mov
mov
mov
hlt
inc
pop
and
pop
daa
push
push
dec
lea
in
pop
std
dec
mov
lods
movsb
lret
orb
and
mov
or
popa
add
sub
imul
mov
push
jge
fdivs
scas
cmp
movsb
adc
xchg
push
dec
add
sub
movb
iret
les
inc
out
data16
xchg
dec
jns
mov
jno
push
adc
xchg
jp
popa
lret
std
add
jg
mov
dec
and
sbb
mov
pop
push
sub
or
adc
stos
or
adc
mov
jnp
fildll
mov
orl
or
jb
rcl
shrb
sub
aam
cmpsl
es
je
mov
in
add
sub
push
mov
inc
jmp
pushf
mov
loope
sahf
cs
mov
cmp
cmpsl
in
out
or
lods
xor
rorb
adc
dec
lcall
mov
stc
dec
ret
int3
test
xchg
scas
xchg
xor
sbb
xchg
adc
jnp
mov
mov
ret
cmpsl
out
xchg
mov
pushf
xchg
dec
leave
push
xor
sbb
mov
jnp
adcb
insb
ja
movsb
das
xchg
out
sub
mov
dec
sahf
push
cmpl
pop
shl
push
fistps
cs
cmp
mov
lock
bound
imul
mul
mov
fcomip
mov
jp
insl
mov
pop
xor
adc
pop
mov
cmp
sub
mov
lcall
jbe
pop
adc
xchg
rcll
mov
in
xchg
cmp
js
add
aad
aaa
xor
pushf
pop
repz
cmc
je
push
and
mov
lods
mov
cmp
mov
cmp
leave
jno
sahf
cmp
pop
in
push
lret
inc
call
mov
dec
push
add
shl
adc
movsl
loop
int3
jecxz
dec
push
mov
jne
mov
daa
call
push
enter
and
fsubrl
fiadds
xchg
int3
lods
adc
lods
push
dec
frstors
xlat
mov
jne
mov
pop
clc
and
fwait
cmp
push
test
sbb
mov
jb
adc
push
mov
inc
lahf
popa
insb
cmp
lods
int
sub
aaa
cmp
add
jle
les
imul
inc
mull
scas
movsb
stos
and
hlt
imul
pop
cmp
xchg
pop
scas
adc
in
movsl
lret
jle
cmp
arpl
cld
xor
outsl
cli
jno
int
dec
or
sti
dec
rcll
lock
dec
insl
jne
arpl
adc
int
pushf
mov
push
popa
jle
and
pop
imul
sub
shrl
call
jle
adc
xor
mov
data16
push
push
adc
xchg
inc
sbb
xchg
xchg
lret
popf
rcll
jb
mov
pusha
cmp
mov
sbb
adc
cmp
int3
insl
aad
cwtl
ret
repnz
mov
pop
push
jno
sbb
add
inc
popf
das
xor
xor
or
je
push
inc
sub
mov
push
pop
int3
data16
or
mov
mov
js
rcrb
imul
dec
lahf
cmp
mov
add
jb
daa
popf
shr
inc
add
test
inc
mov
into
in
jmp
or
int3
mov
call
mov
shlb
in
mov
xchg
push
sub
scas
and
hlt
add
adc
and
call
clc
test
inc
pushf
push
imul
in
pop
jb
sbb
int
lea
cltd
rclb
fcom
pop
aaa
xchg
aaa
adc
jae
pushf
sbb
je
push
movsl
mov
inc
das
je
jg
add
mov
xor
sti
stos
fidivl
mov
sti
pushf
addr16
ljmp
mov
dec
rolb
mov
aaa
test
and
mov
cmp
xchg
pop
loope
fadds
fsubs
pusha
mov
cli
sub
mov
sub
ret
jecxz
xchg
sbb
pop
cltd
test
mov
add
movsl
pop
mov
adc
pop
repnz
cmp
iret
out
aas
ss
lret
out
lods
out
gs
adc
arpl
insb
stc
fxch
mov
push
push
cltd
out
sbb
test
dec
dec
mov
or
push
es
int
divl
adcl
mov
push
push
cmp
sbb
mov
cmc
in
sub
test
enter
add
push
jle
movsl
xchg
ret
ret
outsl
lods
or
mov
jns
lahf
test
cmc
mov
shlb
xor
xor
jge
fwait
out
stc
lods
rcr
mov
test
ret
sbb
add
leave
mov
mov
movsb
push
lret
xor
or
stos
jns
ds
in
mov
push
sbb
aam
cmp
ret
icebp
ljmp
add
ds
sub
test
ds
jp
lds
adc
daa
push
adc
ss
call
cs
cmp
and
pop
mov
filds
shll
pop
cltd
or
fsubrp
out
mov
out
outsl
and
out
pop
mov
push
ss
xchg
popf
call
ss
lods
shl
adc
imul
sarb
mov
mov
cmp
scas
sbb
jae
mov
out
sbb
aam
push
mov
enter
enter
mov
stc
jge
mov
clc
aad
push
add
jno
inc
adc
mov
cmp
push
cmp
hlt
scas
clc
out
inc
in
out
mov
mov
mov
lcall
rcrb
inc
mov
adc
lahf
mov
sbb
sub
xor
shrl
adc
jg
sbb
pop
xchg
out
je
xor
sub
dec
ds
fwait
push
adc
negl
pop
sbb
dec
incl
addl
adc
ja
test
and
sub
aaa
les
jge
or
cmp
or
test
ljmp
pushf
jle,pn
mov
ss
in
hlt
mov
loope
int3
xor
jnp
jecxz
jbe
jmp
xchg
icebp
insb
inc
mov
xchg
cmp
rcrl
cmp
adc
dec
lods
ficoms
jo
inc
aas
sub
leave
fistps
movsl
test
idivl
sahf
out
inc
mov
bound
inc
fstpl
shrb
idivb
shlb
lret
dec
lea
sbb
dec
push
loope
jb
push
lea
aam
xchg
aas
stos
and
in
push
cli
jb
sbb
das
int
ss
push
and
add
test
int
dec
pop
mov
std
fs
jle
dec
add
repz
pop
pop
out
jecxz
sbbb
pushf
push
mov
ja
jp
aam
ss
faddl
jge
xchg
ljmp
inc
es
inc
loopne
mov
mov
mov
push
and
into
sbb
push
sbb
fbstp
xor
xor
stc
jns
fstps
jle
lea
and
repz
sub
dec
push
loope
and
xchg
ds
int3
cmp
hlt
jmp
out
xchg
pop
movsb
adc
icebp
jl
frstor
push
mov
loope
ja
std
mov
push
ja
pop
cmp
int
sarb
loopne
mov
mov
das
rcl
xor
pop
scas
sbb
pop
jbe
lcall
jbe,pt
sub
out
add
mov
xchg
and
push
inc
rclb
vpunpcklwd
outsb
iret
ret
test
test
xor
ret
enter
push
daa
and
stos
mov
xchg
outsl
pop
pop
lds
add
lock
adc
push
and
and
sub
test
jnp
sahf
fcomps
mov
enter
cs
dec
jle
ja
aad
jae
dec
sarb
mov
mov
hlt
mov
inc
cmp
pop
jp
sub
loope,pt
jge
cmp
sbb
stos
dec
mov
repnz
dec
mov
push
test
sbb
sub
mov
inc
movsl
and
jne
push
inc
adc
pop
inc
pop
fxch
sbb
pop
movsl
push
fcoms
lods
hlt
gs
dec
sub
add
fs
mov
fmull
xor
pusha
cmp
out
mov
mov
xor
jo
mov
push
xchg
test
lods
shll
jnp
nop
pop
xor
dec
cwtl
push
pop
je
clc
clc
add
cmpsb
shll
mov
cli
repz
mov
pusha
aad
add
sub
out
xchg
pop
cmp
rorb
mov
adc
or
push
cmc
or
call
vandps
cmp
fs
idivb
xor
dec
pop
test
loop
dec
sub
and
fstpt
fwait
pcmpeqb
mov
mov
jb
pop
mov
repnz
xor
int3
mov
mov
lcall
lcall
mov
mov
inc
sub
jg
sbb
test
and
cmp
in
lods
gs
xor
pop
mov
inc
cs
cli
shl
pop
add
andl
daa
add
jo
xabort
add
fstps
ss
mov
out
inc
aam
jae
inc
cs
mov
push
cmp
or
xchg
cld
add
imul
or
and
mov
adc
mov
out
sub
push
sbb
sarl
out
adc
mov
adc
je
xor
daa
pop
fnstcw
ret
jmp
sub
cld
loopne
stc
push
cmp
fwait
sahf
dec
jle,pt
icebp
pop
inc
js
dec
pop
mov
rolb
into
dec
add
movsl
lahf
not
lea
jae
pop
or
sub
cmp
push
push
lahf
je
sahf
ds
inc
ret
push
mov
cltd
sub
iret
ds
imul
mov
push
cmp
mov
nop
jno
pop
lret
adc
mov
or
cs
and
pop
dec
out
jg
adc
mov
fcmovnbe
aad
les
push
cmp
push
pop
jo
rcr
rclb
pushw
lock
arpl
xor
push
mov
lds
jb
movsb
pop
adc
in
mov
dec
inc
testb
cmp
repnz
ret
lahf
mov
into
pop
lret
pop
js
sbb
dec
and
aas
pop
outsb
std
pusha
sbb
pop
ja
leave
adc
insb
push
orl
rolb
adc
xor
add
mov
cmpsl
call
fstpt
mov
xor
jg
jg
ficoml
call
jp
xor
pop
cmp
outsw
push
xchg
aam
insb
js
mov
adc
popf
psubw
xor
xor
in
jmp
dec
and
loope
arpl
and
mov
fdivrs
scas
in
mov
jns
push
roll
in
int
xchg
rclb
pop
adc
int3
call
mov
mov
push
dec
xor
jecxz
clc
in
loope
mov
xor
cltd
cs
push
testl
jle
xchg
sub
cmp
xor
push
scas
inc
and
mov
xor
test
insb
loop
sub
pop
jne
subb
and
mov
andb
inc
mov
fnstcw
outsb
add
adc
mov
xchg
cld
imul
xor
xchg
daa
cmc
adc
sahf
lea
mov
cmpsb
imul
adc
rcl
sub
dec
aad
sub
cltd
mov
movsb
cli
xchg
les
test
scas
mov
pop
pop
fidivrl
stos
mov
mov
xchg
or
enter
mov
sbb
call
fbld
ljmp
mov
dec
adcb
dec
int3
ja
push
loopne
aas
mov
int3
pusha
jno
lock
clc
lods
xor
push
sub
je
ficoms
loope
ret
pop
loop
pop
ret
pop
test
jge
addr16
pop
idivb
in
cwtl
pop
nop
pavgw
push
dec
jbe
mov
mov
in
aad
pusha
insb
cmp
sbb
cmp
loopne
movsl
mov
and
xlat
push
cmc
mov
jb
ss
rclb
pop
lea
arpl
aam
or
cs
cmp
mov
mov
pop
inc
dec
ror
pop
and
pop
popa
push
sbb
fnstenv
dec
cmp
inc
setp
xlat
lds
push
dec
andl
mov
cmpsb
rcrb
sub
loop
mov
stos
repnz
cmc
inc
popf
leave
mov
mull
push
js
xor
dec
push
aas
xchg
push
movsb
fsubrl
jnp
cmp
cli
pop
loope
mov
cltd
lret
sbbl
clc
jnp
push
mov
fidivl
inc
lock
mov
jne
sub
jp
insb
or
push
xor
in
inc
push
jge
es
xor
lret
mov
mov
cmp
aaa
ss
and
fdivs
sub
loopne
dec
mov
cmp
leave
and
jg
hlt
movsl
cmp
imul
mov
or
cmp
daa
or
sub
push
or
test
ret
cmp
neg
insl
cmp
pop
inc
dec
je
add
push
mov
pop
or
out
and
xor
xchg
dec
sub
sub
out
cmp
jb
mov
mov
cmc
dec
pop
xor
test
test
dec
icebp
mov
andb
and
arpl
sub
pop
lcall
mov
mov
xchg
mov
xorl
lods
pop
stos
scas
outsb
add
rcrl
imul
and
iret
and
into
lcall
mov
cwtl
insl
push
fadd
lods
leave
div
outsl
mov
xor
cmp
into
out
xor
inc
js
dec
call
pop
inc
fdiv
sarl
or
cmp
mov
add
ljmp
sbb
mov
aam
push
dec
enter
inc
push
push
sub
cmp
xor
pop
and
mov
or
dec
sub
lret
mov
std
mov
cld
lcall
imul
rcrb
scas
js
push
mov
sbb
xchg
ss
movsb
sub
aaa
sbb
pop
std
gs
or
scas
xchg
pop
dec
movl
xchg
pop
test
xor
mov
push
test
popf
pop
sbb
hlt
xchg
xchg
inc
and
out
adc
les
and
push
test
inc
xchg
mov
mov
in
mov
out
shlb
stos
aad
jmp
or
aaa
sahf
dec
mov
test
std
pop
scas
lock
aas
mov
ret
loopne
xchg
jns
rclb
xchg
sub
push
jmp
nop
aam
insb
rdmsr
fsubrl
sbb
loopne
jmp
mov
mov
fstpl
and
xchg
dec
pop
mov
pop
cmp
rolb
adc
sub
push
mov
fdivl
repnz
daa
xchg
cmp
std
sarb
mov
jno
scas
push
in
jnp
faddl
nop
insb
xchg
push
imul
ret
iretw
lahf
push
add
mov
icebp
js
sahf
mov
sub
add
out
adc
jo
aad
lock
sub
pop
mov
jo
and
adc
inc
dec
int3
xor
xchg
pop
add
fdivrs
mov
insl
ds
fldt
movsb
aad
int
xor
pusha
rcrb
inc
aaa
orl
lret
pop
das
in
mov
push
fsubrs
push
stos
jo
adc
or
dec
push
or
inc
mov
adc
and
in
fcmovnb
pop
jmp
xor
jmp
adc
outsl
cmp
js
js
add
push
aam
icebp
xchg
add
jmp
add
push
fadd
mov
jne
jns
pop
xchg
mov
divl
out
pop
ds
fistps
add
shl
add
or
sub
mov
mov
sbbl
js
push
xchg
scas
mov
sub
out
dec
leave
xchg
movsl
cld
ja
outsl
lret
mov
or
jnp
ja
or
icebp
hlt
push
and
pop
inc
in
popf
and
jno
xlat
xchg
into
icebp
inc
sub
jge
movsl
jno
notb
pop
sbb
or
arpl
aaa
xor
and
fnsave
sbb
cmpsb
sahf
subb
xor
leave
cmp
mov
dec
or
jbe
stc
push
xor
arpl
or
inc
push
cmp
loopne
xor
pop
mov
mov
fwait
popa
xchg
dec
pop
or
jno
icebp
mov
fistpll
add
jle
add
in
das
popf
jb
cld
ljmp
add
sahf
sbb
sub
push
test
mov
mov
je
repnz
jbe
mov
push
mov
daa
jae
leave
push
inc
push
cmp
push
dec
and
fs
push
dec
data16
icebp
jae
and
jns
fs
popa
std
es
jmp
call
repz
or
mov
mov
cwtl
ret
and
aaa
ljmp
icebp
xchg
sbb
mov
scas
mov
fldenv
pop
adc
movsb
inc
and
sbb
push
stos
pop
sbb
mov
cli
ret
out
in
mov
mov
sahf
cmc
sbb
or
shrb
push
insb
mov
cmp
imul
out
imul
pop
insl
adc
loopne
orl
sbb
mov
cmc
es
xchg
xor
dec
insb
add
ja
mov
bound
pop
mov
sub
adc
subb
idivl
daa
add
xchg
fiadds
cmp
mov
adc
shlb
jo
xchg
and
andl
mov
jnp
flds
aad
adc
test
rorb
outsb
enter
icebp
or
fmul
jge
or
cmp
es
sub
jae
aas
icebp
push
aas
xchg
push
lret
in
test
adc
insb
jecxz
cmp
pop
and
mov
add
jae
adc
gs
ja
mov
mov
or
and
outsl
cld
testb
pusha
dec
mov
test
nop
nop
and
icebp
mov
xchg
jnp
xor
shl
push
and
mov
les
in
pop
int
fwait
pusha
add
jl
popf
data16
xorl
icebp
cltd
push
mov
inc
lds
or
aas
ret
mov
pop
dec
mov
gs
xchg
xchg
sub
mov
frstor
mov
andnps
inc
scas
xchg
mov
jecxz
xchg
sub
jg
pop
jecxz
dec
push
mov
jae
daa
jns
cmpsb
xor
and
out
mov
adc
lahf
sti
mov
xlat
xor
adc
push
cld
xor
jbe
jns
xchg
outsb
je
scas
push
ret
xchg
push
jmp
mov
ds
dec
fsts
mov
out
movsb
xor
int3
sub
xlat
push
leave
stos
xchg
stos
jne
xchg
inc
out
fnstsw
fcomip
jbe
jo
lea
jbe
je
adc
cs
jo
outsb
sbbb
icebp
sbb
inc
mov
pop
inc
push
fbld
push
es
inc
xchg
push
jmp
cmp
and
inc
icebp
jmp
and
mov
sub
imul
fidivrs
movsb
push
adc
and
fistl
cmpsl
data16
pop
aas
in
xchg
js
fucomp
je
in
push
cs
das
mov
pusha
xor
or
enter
orb
imul
lock
pusha
popa
pop
mov
cs
or
aas
gs
outsl
dec
pop
stos
mov
and
ljmp
sahf
add
mov
xor
pop
push
arpl
subb
aaa
sub
cwtl
sbbb
xchg
inc
repnz
sub
jns
and
dec
cmp
fidivl
mov
push
int3
inc
daa
stc
and
mov
cmp
mov
mov
adc
and
loope
sub
bound
or
sti
dec
mov
or
adc
loop
jo
mov
ljmp
mov
aad
repz
outsb
mov
xor
inc
xor
push
dec
mov
adc
push
mov
scas
push
outsl
daa
into
push
es
ss
mov
insb
cmpsl
addr16
sahf
and
roll
adc
stos
jae
push
mov
test
into
pop
lcall
out
pop
ret
stos
sub
cmp
mov
jbe
xor
and
stos
push
bound
out
xchg
push
ret
aam
push
repz
sub
fnstenv
rcl
dec
adc
in
cli
add
imull
xchg
sbb
decl
xor
leave
cmp
mov
lea
leave
push
push
adc
adc
adc
movlps
in
jge
mov
add
adc
pop
xchg
leave
jge
pop
sbb
sub
jecxz
dec
push
les
push
ret
in
and
mov
scas
test
in
cmp
jg
xor
and
dec
fdivrs
push
xlat
xor
mov
and
clc
cmp
lahf
xchg
int
xchg
jl
cmpsl
mov
cmp
mov
ficomps
in
adc
adc
and
loopne
dec
in
xor
dec
xchg
adc
cmp
arpl
or
or
mov
lret
cli
out
aaa
dec
jle
and
dec
or
mov
clc
mov
fisttpl
pop
testl
lcall
mov
mov
enter
test
inc
push
lret
sbb
mov
adc
movsl
ret
aaa
sbb
pop
push
imul
jle
les
sbb
xchg
lods
xor
dec
mov
mov
sub
adc
push
in
inc
sbb
add
fs
cmp
daa
rorl
movsb
mov
cltd
add
xor
or
jno
cmp
arpl
xor
in
daa
lock
push
outsb
push
pop
clc
movsl
mov
dec
loope
cmp
push
cmp
scas
mov
pmovmskb
fimull
call
xor
add
in
lds
inc
hlt
mov
rol
or
cwtl
fdivr
ret
dec
or
jno
sub
out
cmp
xchg
dec
aad
fcomps
rol
mov
in
push
mov
mov
and
test
loop
cmp
and
fisttps
xchg
aam
sbb
fwait
out
subl
mov
adc
and
testl
das
xchg
xchg
mov
mov
sbb
test
test
int
inc
loopne
in
mov
fistpll
sbb
inc
out
repnz
cld
mov
insl
jbe
loopne,pn
mov
stos
push
call
cmp
sub
popf
mov
inc
aad
aaa
addr16
pop
mov
bound
push
cmp
mov
lods
cmovbe
sbb
stos
int
jnp
push
xchg
cld
out
out
mov
and
inc
sub
mov
aaa
repz
out
movsb
xor
in
cmp
stos
aam
pop
cld
add
cmp
cwtd
mulb
clc
sub
lods
shl
add
push
xor
pop
dec
mov
jle
xor
jne
shl
js
mov
adc
pop
insb
outsb
inc
popa
push
test
scas
aaa
shll
mov
arpl
lret
mov
fisttpl
lds
jecxz
jne
outsb
mov
jecxz
mov
lcall
pop
add
daa
pop
sahf
xchg
rclb
loope
out
inc
jp
ja
mov
mov
cmpsb
and
xchg
loopne
lods
sbb
fldt
mov
je
call
dec
xor
mov
test
sbb
adc
jg
cmp
das
gs
jnp
mov
pop
xchg
outsb
inc
mov
adc
lods
mov
mov
mov
add
mov
cli
mov
repnz
outsb
cmpsb
push
ret
mov
fidivl
fstl
aas
or
inc
and
out
push
cwtl
rolb
xor
scas
fisttps
mov
inc
out
loop
insb
mov
ret
xor
xchg
clc
cli
aas
addr16
xchg
mov
fwait
mov
add
leave
and
andl
loopne
not
loop
dec
int
sub
aas
fmuls
out
and
add
rcr
jl
decl
push
jecxz
insl
add
push
cwtl
and
pop
cmp
and
imul
data16
dec
or
std
pop
sahf
aad
bnd
ds
sub
out
inc
in
push
repz
pushf
pop
cmp
clc
mov
ds
cmp
jg
jl
xor
fcompl
mov
cmp
sbb
fsubl
add
nop
mov
pop
xchg
xchg
adc
aad
mov
aas
jmp
mov
mull
mov
cwtl
mov
in
sbb
xor
push
lock
cltd
jbe
sub
in
lea
push
jmp
sti
lods
or
push
repnz
arpl
adc
cld
outsb
mov
lret
loope
icebp
mov
cmp
pop
popa
xchg
jp,pn
loope
es
mov
mov
movsl
cmpsb
xchg
int
xor
pop
lret
ja
dec
jns
test
xor
out
xchg
mov
mov
adc
aaa
mov
sub
mov
add
cli
insb
out
dec
call
popf
mov
jmp
test
pop
or
stc
pop
jecxz
pop
aas
sbb
jecxz
jp
je
adc
sub
es
gs
stc
sub
jo
jl
sahf
jns
jo
outsb
mov
arpl
out
ja
clc
inc
mov
leave
cmp
test
cli
lcall
jne
pop
lret
lahf
inc
push
sbb
push
and
cmp
xor
scas
fsubrs
xlat
sbb
pop
pop
jne
lods
testl
movsl
inc
popa
mov
mov
adcl
lods
cltd
mov
movsb
mov
jbe
pop
rolb
push
mov
mov
adc
outsl
test
les
cwtl
les
cmp
mov
inc
inc
sbbl
movsb
push
pop
jle
orb
cmc
out
je
das
pop
push
jge
dec
sbbb
roll
je
push
int3
push
sbb
cmc
mov
test
xor
mov
mov
gs
push
cwtl
outsl
cmp
adc
mov
out
rcll
pop
dec
icebp
ret
fdivrs
in
mov
jo
jns
outsl
call
mov
lcall
addb
fdecstp
add
das
sub
xchg
pop
fwait
inc
nop
cmpsl
lret
call
ficompl
sub
mov
dec
loope
pop
xchg
hlt
mov
inc
pusha
data16
push
dec
mov
jge
and
push
je
xor
or
xor
and
test
add
stos
fisubrl
cmp
sti
or
dec
cwtl
adc
stos
jl
subb
shlb
dec
mov
rorl
xor
pop
pop
xor
add
aam
movsb
fsub
or
andps
sub
pop
pop
or
add
lret
mov
imulb
xor
adc
cld
out
iret
xchg
mov
xchg
lds
mov
sbb
and
imul
pop
jbe
inc
adc
shr
push
push
sbb
mov
mov
js
mov
and
sbb
es
sti
cwtl
arpl
adc
rorb
mov
adc
adc
negl
std
jmp
cmp
rolb
pop
inc
mov
or
sbb
dec
pushf
push
adc
push
ss
std
dec
adc
adc
add
cwtl
push
icebp
stc
dec
adc
push
push
mov
pop
pop
push
mov
mov
inc
jb
dec
fmul
fsts
ror
fcmovnbe
insb
and
hlt
pop
ja
in
mov
cmp
jns
movsl
out
mov
test
and
adc
jge
cmp
vpunpckhdq
daa
cmp
mov
jo
dec
outsl
and
xchg
out
mulb
imul
stos
push
cltd
cmp
inc
push
push
push
cmovp
xorl
lret
es
and
sbb
push
fisttps
jb
loopne
add
pop
movsl
pop
xor
mov
dec
inc
test
lahf
inc
add
cld
aaa
push
inc
dec
leave
sub
sbb
push
hlt
movsl
inc
jo
xchg
lcall
lret
insb
xchg
mov
dec
mov
or
or
out
lock
ljmp
pop
leave
cli
insl
outsb
cmp
xchg
sarl
mov
xchg
inc
fstpl
in
ja
xor
imul
pop
orl
add
cmp
sub
inc
xchg
std
sbb
sub
cmc
xchg
fs
inc
dec
stc
aaa
leave
lock
out
sub
push
mov
xchg
push
add
ja
shrb
cltd
pusha
stos
ds
inc
scas
xor
lock
xor
push
in
andb
stc
push
lret
mov
andb
dec
mov
imul
add
les
sub
push
aam
mov
and
cli
xor
test
aad
mov
pop
loop
inc
jl
movsb
std
lcall
fildll
sub
push
mov
xor
adc
xchg
imul
pop
clc
sub
xchg
iret
outsl
mov
andb
lcall
call
les
sbb
xor
inc
pushl
repz
imul
xchg
femms
push
mov
sbb
stos
add
pop
into
insl
or
mov
push
pop
and
mov
out
rol
or
aam
pop
lods
add
out
mov
ljmp
and
mov
into
test
inc
repz
or
mov
push
inc
pop
inc
mov
and
mov
into
ds
xchg
mov
ret
and
and
repz
mov
popf
lea
add
jns
mov
dec
loop
add
dec
imul
or
mov
lcall
mov
mov
mov
aad
fisttpl
push
or
inc
ss
bound
rorl
adc
pop
filds
pop
test
pop
icebp
and
scas
dec
clc
mov
cmp
cmp
lcall
ss
sar
pop
dec
mov
mov
fldl2e
jo
jp
xchg
rorb
test
xchg
push
ljmp
jno
xchg
lahf
jns
addr16
jnp
aam
inc
sub
pop
fimull
clc
ret
mov
lods
sahf
pusha
scas
into
adc
add
sbb
daa
hlt
add
ljmp
jns
sub
pop
push
sub
adc
ret
mov
push
or
loopne
fwait
ljmp
push
outsb
adc
mov
pushl
lcall
mov
test
ds
cltd
scas
sub
mov
push
mov
xorb
out
sbb
fdivrl
pop
add
sbb
push
xor
lods
in
cmp
imul
push
jg
das
mov
jp
in
sub
adc
int3
push
xor
rclb
or
pop
cmp
or
mov
cmp
mov
pop
in
mov
aam
out
outsb
cmpsl
xchg
insl
inc
lods
stos
pop
cld
sbb
adc
and
push
pop
in
aam
filds
lret
xlat
jmp
rorb
lahf
aad
jno
add
jno
or
add
xchg
mov
int
sbb
arpl
mov
adc
addr16
inc
inc
in
pop
pushf
jae
imul
sarb
inc
push
xchg
movsl
imul
stc
adc
test
jo
sbb
fwait
movsb
repnz
jge
cmpsb
insl
cmp
lret
mov
adc
add
iret
mov
jae
mov
push
into
jp
lahf
lcall
pusha
jo
enter
cwtl
int3
inc
inc
addr16
dec
push
dec
or
fistpll
sbb
int3
jb
cmovs
mov
push
and
lods
in
outsl
sahf
adc
pop
xchg
inc
shl
testl
test
rorl
lcall
fistl
mov
mov
addr16
icebp
cwtl
aaa
add
jle
xchg
nop
andl
mov
bound
inc
test
gs
push
into
inc
jno
mov
aas
fwait
push
adc
mov
xor
push
sub
pop
arpl
pop
popf
adc
movsb
outsl
rcr
shrl
or
sbb
xchg
cld
dec
out
or
xor
dec
cmp
mov
push
jmp
jns
js
cltd
int3
imul
or
inc
psubusw
fmul
aas
fcompl
inc
fmull
mov
lds
adc
int
adc
inc
fistl
lea
pop
mov
add
xor
int3
insl
into
sbb
cmp
inc
sbb
lds
sarb
inc
jnp
mov
push
into
ja
xchg
mov
cmp
push
movsl
sbb
ret
mov
xor
sub
dec
push
pushf
lret
outsl
jbe
adc
xor
shlb
xorb
cmp
popa
mov
mov
mov
dec
stos
icebp
test
mov
test
mov
xor
scas
dec
rcll
mov
jns
push
inc
lret
sahf
jae
hlt
add
xchg
sahf
push
repnz
daa
dec
xor
punpckhbw
leave
jmp
aad
popa
cmc
cmp
adc
sbbl
push
pop
push
inc
sub
or
ss
mov
loopne
aam
sbb
add
movsl
xor
mov
xchg
insl
inc
inc
pop
rolb
lret
inc
pop
fldcw
ret
daa
jl
jbe
push
adc
and
lahf
bnd
xchg
ret
or
push
pop
iret
mov
pop
sub
stos
add
adc
sub
adc
jmp
cmpsl
insl
dec
stos
insl
ljmp
ds
adcb
or
inc
arpl
fistpll
push
dec
sub
jno
xor
sub
in
imul
cltd
fdivrs
sbb
orb
xor
pushf
sarb
xor
das
xor
repz
pop
lcall
xchg
xchg
scas
inc
add
cld
mov
push
xchg
pusha
mov
fcomps
add
pop
nop
xchg
cmp
xor
xchg
call
sbb
xchg
imull
ds
movsb
ja
int3
loope
cld
arpl
xor
cs
dec
inc
lret
mov
outsl
fisubrs
and
sbb
jg
fisttpll
sub
jmp
lcall
sbb
push
psrad
out
notb
pop
daa
ss
std
pushf
mov
rolb
sub
mov
mov
dec
xor
lea
ffree
xor
cmpsl
ret
push
fdivs
aam
insb
fsubl
icebp
xchg
imul
xchg
ds
jg
lret
aam
lahf
aad
push
call
adc
xlat
sub
mov
pop
and
and
lock
cld
push
mov
xor
stos
sahf
dec
push
outsb
inc
and
and
push
add
stos
xchg
jmp
pop
pop
movsb
fisubrs
inc
dec
cmpsb
cmpb
push
int3
push
enter
cmc
xlat
push
stos
dec
push
mov
leave
scas
xchg
cmp
mov
clc
cmp
lock
push
arpl
and
pop
xchg
lret
inc
push
divb
dec
std
pop
icebp
mov
jecxz
sarl
jns
adc
lds
fmull
cmp
jge
insb
cmpsl
orl
stc
or
adc
iret
mov
dec
shll
gs
push
mov
les
imul
dec
xor
sub
cmp
jno
mov
pop
out
leave
xchg
cmp
jo
ret
jo
add
xor
mov
xchg
pushf
jo
push
js
add
inc
pop
add
mov
sti
inc
sub
inc
gs
aas
inc
add
mov
push
idivl
daa
and
xchg
ret
xor
pusha
and
dec
jp
in
dec
cmp
sbbb
sub
aad
out
inc
cltd
popl
fistl
hlt
jg
jno
mov
sub
cmp
pusha
movsl
push
adc
leave
cmp
or
mov
orb
sub
call
inc
lret
sbb
ret
adc
xchg
in
jl
jbe
daa
or
adc
dec
xor
loop
scas
xchg
pop
cltd
sbb
xchg
cmc
jnp
cmc
jge
mov
cld
daa
sub
adc
sub
push
imul
jle
xor
cwtl
lret
shrl
dec
mov
push
xchg
push
mov
enter
test
ss
cmpsb
adc
outsb
lods
or
pop
pop
mov
push
adc
xor
push
iret
fistl
add
lods
xorl
jnp
movsl
dec
sbb
inc
or
lahf
in
fists
inc
js
cmpsl
push
mov
in
sbb
jo
mov
je
cld
mov
iret
inc
cltd
sbb
shlb
mov
and
add
xchg
fstp
cmp
cmp
movsb
pop
pop
sbb
cmp
test
iret
and
adc
mov
leave
push
mov
pop
lds
inc
in
push
into
es
push
fwait
clc
jbe
push
jnp
push
es
cld
xor
mov
xchg
push
and
out
les
or
rolb
roll
aaa
mov
push
mov
inc
in
mov
xchg
sub
push
mov
ljmp
sub
mov
fiaddl
cmp
add
adc
mov
push
lret
push
push
mov
or
test
dec
cwtl
mov
sub
leave
pop
jge
sbbb
xchg
inc
mov
dec
or
xchg
aas
mov
xor
dec
push
aaa
dec
xor
out
addl
sub
outsb
lea
sbb
loopne
mov
lds
or
popf
outsb
mov
in
aad
sub
jecxz
out
pop
fwait
mov
shll
mov
mov
dec
xor
int3
and
loope
push
fs
pop
ja
pop
mov
or
cwtl
mov
and
jp
cmpsl
adc
jnp
and
arpl
adc
mov
loop
sti
xor
outsl
mov
test
mov
faddl
shrb
mov
test
in
inc
imul
xor
sti
in
xor
int3
pop
lret
and
fisubrl
inc
mov
adc
pop
pop
push
std
mov
lcall
mov
fistl
mov
negb
xchg
mov
xchg
icebp
sub
movsl
dec
inc
and
gs
push
dec
lcall
sbb
stc
inc
inc
mov
ds
data16
repnz
stc
cmp
inc
fsub
or
imul
ljmp
mov
popa
inc
jnp
cli
loop
or
mov
push
mov
pop
iret
xchg
mov
sub
les
or
xchg
pushf
add
out
gs
pusha
jp
jnp
popa
movsl
inc
pop
push
sti
mov
adc
loopne
arpl
jle
dec
push
jbe
or
dec
fstps
sub
ret
xchg
xlat
ja
nop
xlat
jno
add
je
dec
jmp
jmp
test
mov
xor
mov
jo
push
sub
clc
jb
jmp
jmp
js
imul
sub
sbb
or
push
mov
xor
fldenv
cmc
rcrl
mov
mov
add
cli
loopne
push
orb
mov
cltd
push
mov
xchg
xchg
mov
imul
or
add
or
lahf
mov
mov
loope
or
aaa
mov
je
dec
or
jo
mov
pop
xor
imul
jnp
xor
pop
js
clc
mov
push
cmc
hlt
bnd
push
xor
dec
ja
mov
xlat
push
fcomps
das
pop
dec
push
mov
fnsave
es
dec
pop
repnz
les
pop
pop
lcall
aas
mov
push
sbb
lret
sbb
mov
repnz
jmp
shrb
mov
lock
aaa
std
in
mov
add
cmc
iret
jp
fs
cli
out
sbbb
mov
adc
sub
sbb
and
aad
push
add
out
insb
dec
adc
or
aam
cmp
and
jbe
arpl
xchg
push
push
dec
adc
xor
scas
sbb
aad
lds
adc
movsb
sbb
stos
into
xchg
popf
dec
add
push
jae
xchg
adc
dec
and
sbb
fbld
push
les
int
dec
aas
xchg
rorb
repz
aaa
lds
cmp
pop
mov
fs
inc
cmp
sub
repnz
inc
dec
call
popf
insl
rorl
pop
cmp
pop
or
dec
repnz
imul
xchg
repz
stc
shrb
inc
icebp
out
in
push
pop
lahf
call
and
hlt
testb
fst
push
scas
pop
mov
xor
out
movl
xchg
cmp
filds
push
push
das
or
mov
push
push
lea
dec
arpl
es
or
xlat
dec
mov
xchg
xchg
mov
pop
push
call
ss
imul
add
dec
ret
outsb
aaa
jge
cmpl
xchg
adc
shld
pop
xchg
enter
daa
ficoml
stc
mov
and
stc
aam
xchg
lods
and
imul
xchg
sub
out
add
loop
stos
loopne
jb
in
inc
pop
inc
getsec
enter
pop
mov
int3
push
into
hlt
cmpsl
ss
mov
adc
pop
leave
lods
data16
mulb
cmovl
pop
mov
jl
outsl
in
enter
sub
push
int
cmp
xchg
clc
fdivrl
ljmp
lods
insl
ret
pop
daa
inc
ret
into
push
jge
push
setbe
mov
pop
push
divb
outsl
repnz
aam
push
dec
mov
out
mov
loop
or
cmpsl
dec
mov
movsl
xchg
xchg
test
lods
scas
sbb
rorl
in
and
mov
xor
or
push
hlt
or
pop
fisttpl
add
inc
pop
gs
mov
pop
repnz
and
mov
sti
leave
mov
xchg
mov
out
adc
pop
xchg
les
pop
repnz
jns
je
testl
mov
lds
push
cmp
data16
pushf
mov
and
sub
mov
les
push
notl
loope
xchg
xchg
and
repz
jae
or
inc
inc
lods
lahf
and
push
sub
push
push
cmp
mov
andb
cs
sbb
iret
test
adc
or
rorl
sahf
test
cwtl
jae
ljmp
test
filds
xchg
adc
adc
mov
std
xor
sub
cld
std
test
movsb
lods
adcl
inc
push
xor
mov
rcrb
dec
jne
jp
or
sub
lahf
dec
xchg
call
sub
cmpsl
out
sub
sbb
movsb
arpl
pop
sub
aas
jp
int3
mov
inc
jp
add
adc
lods
lock
cmp
or
xchg
pop
inc
push
mov
stc
xor
jne
push
inc
ja
in
mov
push
jecxz
jb
sti
shl
sti
ret
and
push
sbb
cmp
iret
inc
cltd
shrl
cld
adc
or
mov
fimull
jb
pop
mov
stos
dec
js
mov
mov
std
cmp
cmp
jp
dec
xor
aas
arpl
jo
out
jle
test
push
imul
dec
fstps
clc
popf
dec
mull
dec
shlb
push
sub
shll
sbb
test
dec
sub
and
popf
int3
mov
inc
xchg
mov
lahf
and
aas
dec
inc
pusha
lods
sbbb
inc
fwait
pop
sbb
scas
lret
cmpl
mov
inc
icebp
or
les
xchg
out
sbb
cwtl
fstps
jle
jnp
adc
mov
insl
mov
andb
mov
hlt
ds
add
sbb
movl
adc
sbb
xor
mov
jl
out
lahf
arpl
jb
stos
mov
adc
add
push
push
fsubs
repnz
jge
outsb
stc
std
jae
aaa
cmp
std
hlt
xor
mov
bound
out
insl
das
xor
adc
test
fisttpll
push
icebp
mov
mov
mov
pushf
jb
in
dec
push
in
pop
andl
pop
and
adc
and
test
pushf
sbb
jge
addr16
daa
adc
es
jg
fcoms
sti
add
jo
shrb
aas
dec
frstor
popf
mov
add
repz
push
jbe
in
or
lods
add
insl
sub
icebp
push
outsl
pop
xor
or
leave
sti
mov
or
fcomp
sub
mov
lahf
gs
sub
fisubrs
in
and
sub
call
pop
add
dec
or
mov
leave
cmpb
sub
jg
cmp
das
loopne
push
and
mov
push
incb
cli
mov
sbb
rolb
insb
cmpsl
xbegin
movsb
sbb
mov
mov
mov
pop
subl
rcrl
push
shl
fnstcw
dec
popf
fwait
adc
mov
adc
push
pop
pop
cltd
aas
sahf
mov
mov
cmp
stos
mov
and
jnp
sbb
stos
test
fstpt
outsb
mov
decb
xchg
fldcw
sbb
dec
iret
jb
into
iret
adc
jecxz
inc
add
cs
jb
xlat
aam
mov
int
dec
imul
fsts
mov
js
out
dec
jecxz
or
and
push
xor
mov
filds
in
add
adc
xor
rorb
hlt
mov
in
jno
pavgb
lcall
dec
sbb
mov
addb
add
push
sbb
popa
or
nop
repnz
pusha
sub
jecxz
mov
lds
xorl
xor
enter
sbb
testb
push
rclb
jecxz
mov
and
scas
jp
rdtsc
lock
scas
push
pop
jmp
lcall
xchg
push
pop
stos
aas
mov
psraw
test
sub
ret
inc
push
aad
add
lock
in
mov
jge
jne
pop
dec
inc
lods
movsl
repz
repz
fmul
stos
lgs
mov
jnp
mov
cmp
cmp
dec
nop
mov
sub
pop
add
pushf
inc
mov
sub
push
cmp
in
cmp
sti
movsb
push
mov
in
sub
ret
inc
jns
adc
pop
loopne
cmp
jmp
fdiv
test
jo
push
je
cld
data16
jno
jge
push
imul
shrl
insb
inc
in
jg
je
ss
xchg
sbb
sbb
push
push
out
cli
mov
insl
lret
pop
mov
add
imul
cli
lcall
push
xchg
test
xchg
aas
mov
loopne
and
cmp
pop
adc
dec
sub
lret
or
and
mov
nop
adc
pushf
pop
mov
movsl
pop
mov
jae
jp
das
mov
out
arpl
inc
rcrl
shll
cmc
nop
mov
jae
or
push
cmp
sti
stos
out
mov
pop
or
xor
xchg
imull
cmp
jg
mov
test
scas
sub
jbe
sbb
mov
andl
pop
scas
mov
and
cmpsl
fmul
or
adcl
jnp
cmpsb
jg
sti
add
jmp
xor
sbb
sub
cmp
jmp
mov
inc
dec
int
add
enter
add
stc
stc
mov
in
or
jnp
pushf
inc
push
int3
and
sbb
or
in
out
movsb
dec
ficomps
push
pushfw
in
imul
cmc
jle
and
or
xchg
pop
adc
sbb
xchg
xchg
js
sarb
inc
push
or
lea
mov
int3
sbbl
or
int3
dec
aad
dec
loop
push
icebp
xchg
fadd
out
ljmp
data16
in
dec
mov
dec
mov
es
aad
sbb
inc
sub
xor
pop
sbb
jbe
icebp
inc
pop
subl
mov
scas
pop
cmp
push
loopne
sahf
fcmovnb
mov
je
jae
mov
add
jl
adc
lds
inc
aas
sahf
pop
ljmp
lods
add
in
push
or
mov
outsb
add
arpl
iret
xlat
sub
push
add
mov
dec
out
xor
jl
mov
jmp
pop
mov
outsb
lods
enter
push
test
adc
cltd
jb
imul
leave
icebp
push
mov
xchg
insl
ja
cmp
xchg
or
fbstp
test
sub
enter
fucomp
or
mov
pop
push
xchg
push
rol
mov
sub
lret
mov
xor
sub
ljmp
cltd
xor
or
mov
mov
mov
rcrl
adc
int
test
and
cltd
int
bound
cmc
mov
aas
out
push
and
lods
imul
sbb
outsl
and
mov
or
mov
sahf
popa
push
negl
add
in
ret
jb
pop
mov
pop
fisttpl
cltd
test
sbb
aad
jle
lcall
mov
xchg
dec
push
lock
repnz
popf
mov
or
push
outsb
dec
in
imull
fwait
add
mov
push
add
cmp
dec
test
inc
mov
cmp
fldcw
sub
sti
inc
call
jnp
mov
int
divl
jl
lock
imul
jbe
fistpll
bound
mov
insb
sub
ret
mov
fildll
out
sub
dec
loopne
aaa
popa
adc
mov
xchg
pop
cmp
cmp
ret
int
dec
imul
iret
mov
shlb
cmp
fidivrs
addr16
std
shll
hlt
push
mov
pop
fidivrl
lods
loop
mov
lods
fwait
and
adc
sbb
dec
popf
in
cmp
lods
cs
daa
push
jo
mov
rclb
mov
iret
pop
lds
repnz
test
or
cmpsb
test
or
das
xchg
repz
or
jp
fwait
pop
aas
shlb
enter
imul
sub
test
jecxz
ret
sbb
or
push
addr16
or
xor
jno
ja
cmp
push
add
test
adc
sub
or
sub
mov
push
pop
pop
negb
movsb
sbb
mov
sbb
jbe
mov
cmc
mov
push
es
cmp
add
sub
pop
jmp
bound
sbb
lock
outsl
outsl
inc
in
jl
je
jae
scas
shl
inc
lcall
out
mov
popf
mov
jno
test
cmpsl
mov
inc
mov
cltd
test
cltd
inc
mov
xchg
faddl
inc
fsubp
rcll
aas
jp
gs
xchg
lret
mov
dec
jle
imul
hlt
push
test
int
ret
mov
xchg
movsl
js
shlb
push
ds
sti
pop
and
shl
pop
icebp
sbb
movsb
adc
cwtl
pop
and
dec
ja
imul
push
pop
sti
mov
sbb
lret
std
adc
mov
lods
out
cs
pop
cmp
mov
lods
add
and
addr16
push
adc
push
cmp
aad
or
sbb
push
in
movsb
jge
cmpl
cmp
outsb
sbb
ret
sub
add
inc
cmp
xchg
mov
arpl
jo
add
insl
xchg
xchg
and
push
mov
pop
fidivs
bound
jp
rolb
mov
out
inc
xchg
sub
push
test
mov
jnp
sub
bound
jmp
fidivrl
icebp
lea
dec
xlat
lock
xorl
and
jo
mov
jle
mov
mov
dec
repz
jo
fldenv
mov
push
jecxz
ret
ret
xor
aas
push
test
aam
jnp
pop
out
jo
sti
mov
negl
stos
mov
in
mov
mov
add
dec
pop
arpl
mov
in
fdivrs
shrl
mov
fldt
push
pop
push
stos
mov
mov
pop
sbb
or
xorl
push
mov
out
aad
xor
daa
add
shlb
pop
pop
cs
in
pop
enter
adc
xor
jmp
lahf
or
ret
adc
ss
ret
adc
dec
call
dec
fcmove
rclb
test
sub
sub
inc
cmpsl
mov
inc
lret
mov
push
add
in
push
pop
adc
insb
adcl
or
stos
mov
and
pop
out
cmc
sub
mov
sbb
mov
xchg
addr16
sub
pop
arpl
std
in
pop
fistpl
sbb
jnp
inc
dec
xor
loop
inc
push
ss
clc
mov
push
js
call
stos
lods
push
aas
arpl
sub
or
ja
lock
int
pop
inc
add
cmc
test
sub
insb
aam
and
loope
sbb
gs
imul
push
push
leave
jmp
jb
push
insl
fidivs
gs
push
add
dec
inc
adc
jp
int3
xchg
cld
fimull
ror
sarb
scas
lahf
aaa
mov
dec
nop
jg
out
mov
ret
or
cmp
std
add
adc
mov
shl
repnz
cmp
out
inc
ret
inc
repnz
rcll
and
sahf
repz
popa
shl
mov
mov
xchg
repnz
mov
add
iret
add
xor
ret
xchg
add
in
hlt
sub
addr16
sub
jp
push
sahf
cmp
cmp
fnstcw
popf
adc
dec
subb
pusha
jo
pop
stos
add
js
mov
test
stos
sahf
sub
xchg
outsl
jg
repz
cmc
sub
repnz
insl
mov
pop
mov
pop
loop
stc
data16
loop
mov
insl
cltd
mov
dec
ja
fisttps
ret
cwtl
fldt
jo
mov
mov
test
gs
push
mov
fstpl
je
and
fcompl
fcoms
cwtl
xor
inc
cmpsb
loopne
popa
call
jmp
mov
subl
int3
int
dec
jge
mov
xchg
sub
and
fwait
xchg
dec
pop
enter
inc
loop
stc
jge
cwtl
push
lock
xor
daa
fidivrs
inc
pop
sub
pop
xchg
popa
jecxz
cmp
xchg
stos
add
xor
cwtl
xchg
in
jo
mov
leave
rcrl
and
pop
sbb
mov
push
push
sub
nop
loop
push
pop
adcl
ja
push
scas
aam
cmp
scas
mov
jo
xlat
je
and
mov
jg
ljmp
mov
mov
or
add
mov
sub
mov
negl
and
pop
add
cmp
das
push
into
test
inc
test
loop
mov
aaa
lret
ds
mov
fisttpl
push
out
adc
clc
in
inc
aas
popf
sbb
xchg
outsl
xchg
cmp
jge
jno
loopne
inc
or
mov
sub
ficompl
fists
stc
xchg
xchg
loop
or
nop
xchg
loopne
mov
pop
inc
sahf
jnp
xlat
data16
jbe
int
push
mov
inc
inc
inc
adc
or
filds
xchg
xorl
jne
cld
mov
inc
cmp
das
and
inc
lea
sbb
inc
out
ljmp
xchg
inc
xchg
pusha
je
sub
mov
std
sbb
sbb
mov
cmp
dec
xchg
xchg
mov
mov
jne
sbb
push
inc
and
add
pushf
clc
leave
pop
sti
add
adc
call
adc
xchg
popw
js
dec
or
adc
adc
fildll
push
xlat
add
sub
dec
test
sbb
test
mov
mov
push
xor
mov
lds
push
mulb
cltd
insl
inc
inc
pop
xlat
divl
cmc
xchg
sbb
lods
and
shrb
mov
cmp
addr16
cltd
mov
mov
out
imul
cmp
fstpt
add
mov
mov
std
mov
mov
into
icebp
mov
popa
pminub
push
mov
fldenv
test
sub
pop
out
push
cmp
jns
mov
jns
cmp
and
out
or
dec
mov
mov
add
xlat
repz
jge
sub
rorb
pop
sub
xor
imul
mov
shlb
inc
dec
sub
mov
insl
insl
xchg
clc
mulb
ja
dec
rclb
jl
push
repz
mov
dec
aas
lret
mov
movsb
outsl
out
jo
cwtl
rorb
push
mov
sbb
fdivs
xchg
sub
out
pop
dec
adcl
aad
in
pop
les
xchg
mov
cs
in
cmc
in
or
lea
ja
pop
xchg
sub
ret
lock
sahf
adc
je
xor
mov
out
rcl
int3
cmp
jge
subl
in
xchg
aaa
cwtl
push
fistl
push
adc
imul
adc
jle
sbb
and
fstpl
ret
sbb
or
pop
imul
addr16
mov
outsb
mov
push
clc
sti
cld
cmc
mov
add
and
clc
jp
ljmp
stos
sub
mov
xchg
mov
rcrb
cmp
arpl
out
mov
sub
cmp
lcall
push
test
mov
mov
in
stos
aas
ficoml
fldl
push
repz
sbb
fstl
in
enter
test
or
adc
out
dec
or
mov
jl
and
out
fs
mov
dec
push
and
add
jl
es
inc
inc
fstl
push
or
dec
push
test
test
xchg
push
push
movsb
xchg
setl
hlt
repz
and
jbe
sarb
cmp
fxam
pop
das
pop
fbstp
xchg
stos
or
adc
jno
daa
mov
call
push
xor
adc
mov
call
adc
out
mov
and
or
xchg
fisubrl
ja
add
jb
or
mov
push
dec
aas
dec
cmp
hlt
sub
pop
popa
movsb
gs
jle
and
xchg
cmp
ljmp
pop
fistpl
movsb
adc
sub
js
dec
push
push
repnz
loope
mov
js
jmp
and
imul
cmc
pop
int
pop
jmp
stos
jbe
fisttpll
dec
scas
mov
orl
push
mov
mov
cmpb
adc
xor
push
filds
xor
jbe
cmp
push
mov
jecxz
sub
dec
lea
or
aaa
js
in
test
cmpb
mov
mov
and
cli
lock
xor
cmp
mov
xor
daa
clc
ljmp
inc
xor
fdivr
call
mov
iret
xchg
std
lds
roll
test
push
nop
sti
xor
xchg
rolb
je
leave
dec
lcall
push
or
jae
push
add
aam
mov
sub
ljmp
xor
mov
push
inc
jo
lods
mov
push
lea
push
mov
or
lcall
mov
pop
orb
leave
jb
sahf
imul
adc
mov
pop
roll
jne
xchg
inc
popl
xor
fwait
nop
daa
cmpb
mov
add
xchg
sub
pop
adc
scas
pop
cld
push
into
cs
stos
or
and
iret
cmp
in
pop
sub
in
stc
push
inc
pop
or
xchg
popa
sbb
mov
cmp
pop
push
and
sbb
sbb
xchg
jp
insl
outsl
clc
push
inc
shrb
mov
mov
mov
iret
sahf
xlat
sar
lea
dec
add
pop
dec
cmp
jbe
out
pop
stos
mov
bound
cs
jo
in
addw
jns
pop
hlt
test
clc
sbb
add
testb
sub
xor
lcall
rol
jg
jae
mov
inc
jo
adc
loope
stos
loope
and
jl
xchg
movb
out
jbe
jno
inc
sbb
and
not
adc
sarb
push
xchg
daa
sbb
stos
gs
push
and
dec
xor
sar
cmp
xchg
sti
pop
lds
mov
xor
xchg
int3
sub
mov
ja
mov
lcall
push
xlat
std
loop
xor
fldcw
adc
pop
out
je
add
pop
mov
or
scas
das
aam
or
test
sbb
push
idivb
sub
clc
and
cmpl
enter
adc
sbb
aam
aas
mov
imul
inc
push
push
mov
sbb
arpl
lret
and
pop
xlat
movsl
loopne
scas
pand
fcmovbe
jg
lods
mov
mov
add
test
add
pop
rcrb
cld
int3
in
enter
outsb
fninit
test
lcall
lahf
mov
cld
negl
repnz
iret
pop
cli
adc
mov
xlat
add
shrd
mov
arpl
fwait
aas
dec
roll
insb
dec
and
add
stc
pop
push
adc
outsb
jnp
jnp
repz
and
shrb
cmpsb
movb
add
inc
push
es
pop
enter
sub
int3
mov
divl
sbb
lahf
pop
dec
decl
mov
fwait
ss
mov
lcall
out
xchg
jp
fcomip
pop
push
popa
add
sbb
or
push
mov
xchg
sbb
in
ret
shlb
repnz
inc
and
mov
loop
sti
mov
leave
xor
lret
jecxz
pop
mov
sbb
xchg
mov
daa
fbld
mov
fwait
dec
adc
adc
mov
mov
dec
push
ret
pop
sti
arpl
icebp
mov
jg
es
xchg
lahf
sarl
xor
mov
mov
in
out
mov
pop
sub
orl
mov
arpl
mov
mov
mov
out
addr16
inc
push
push
addb
arpl
cmpsb
outsb
jl
ss
adc
iret
xor
scas
rorb
es
jb
adc
and
pop
nop
es
mov
lods
pusha
jmp
inc
adc
push
and
xor
inc
in
push
xor
into
cmp
imul
stos
or
scas
int3
xor
ret
mov
adc
mov
lret
jb
std
les
stos
adcb
aam
lea
in
in
xchg
cmp
pop
pop
test
and
mov
xchg
call
cld
notl
pop
ffree
cmpsb
cmp
daa
pushf
pop
test
mov
insl
push
subb
les
imul
clc
subb
lods
mov
mov
sbb
add
imull
es
ss
stos
push
mov
xchg
scas
push
push
sbb
xor
push
ucomiss
jbe
dec
add
fisttpl
outsl
loopne
mov
std
inc
pop
push
iret
call
inc
jmp
sub
scas
xchg
stos
popa
fstpt
popf
lret
adc
mulb
scas
ret
loopne
mov
bound
scas
adc
cwtl
sahf
add
ja
jmp
fucomi
push
imul
sbb
cmp
pop
fisttps
enter
lcall
repz
push
jecxz
pop
mov
push
cmpsl
scas
divb
ret
dec
inc
inc
jmp
fsubr
out
jge
test
repnz
lock
std
add
cmp
popf
lods
aaa
sbb
stos
mov
push
sarl
sbb
xor
fcompl
rcrl
stos
push
ss
lret
rolb
or
adc
jp
rol
jbe
and
pop
mov
daa
fs
neg
icebp
mov
sub
sbb
leave
out
imul
or
fs
daa
xor
mov
fst
mov
jo
sahf
mov
faddp
mov
mov
pusha
mov
sbb
fs
pop
xchg
sti
pop
aam
scas
add
lcall
movsb
xchg
xchg
ljmp
filds
adc
pop
xor
xchg
adc
mov
or
sub
out
mov
inc
incb
insl
fidivrl
inc
and
add
ret
inc
add
in
stc
jnp
mov
lret
orl
sbb
mov
addb
mov
cltd
shll
stos
adc
xor
dec
outsl
jae
mov
ret
push
sbb
and
rcrl
cmp
outsl
dec
bound
or
pop
add
inc
push
adc
in
add
orl
mov
aad
into
out
push
ds
sbb
sub
pop
add
jg
sub
inc
aad
aad
orl
fs
push
jno
rolb
push
test
cmp
into
dec
rcll
xchg
sti
cmpsl
aam
or
mov
jle
adc
mov
mov
jmp
popa
lahf
dec
std
shrl
roll
inc
lock
cmp
pop
nop
lcall
rclb
xchg
jecxz
hlt
mov
cmp
mov
sub
dec
in
cli
sbb
add
in
sbb
inc
cmp
push
out
daa
pop
dec
clc
rclb
push
mov
mov
es
or
out
dec
in
mov
stos
mov
das
pop
jg
scas
popa
scas
mov
shlb
aaa
movl
es
jmp
jne
sbb
cmp
xchg
leave
push
icebp
xchg
lock
shll
jmp
insb
cs
sbb
cltd
clc
inc
cltd
xchg
jmp
xlat
out
inc
adcl
sbb
or
inc
in
sub
sbb
inc
movsl
mov
xchg
adc
or
cmp
dec
jbe
lret
scas
mov
pusha
mov
into
es
xor
cmpsl
inc
add
mov
or
icebp
in
fwait
jo
arpl
dec
xor
jp
mov
cmp
cmp
inc
mov
incl
stc
outsl
sti
pusha
inc
negl
pop
adc
mov
in
mov
mov
movsb
mov
dec
xorb
push
jne
das
push
mov
mov
sub
mov
inc
dec
mov
adc
pop
daa
je
enter
popa
dec
sub
add
sbb
mov
jno
inc
aaa
mov
xor
js
daa
and
mov
sbb
test
adc
cmc
out
mov
pop
xchg
in
mov
mov
mov
dec
insb
mov
push
aad
ror
sub
sbb
add
ljmp
sbb
inc
mov
xchg
mov
fnsave
mov
adc
leave
xchg
and
add
arpl
dec
insb
xlat
das
fiaddl
rcrb
sti
pop
fildl
mov
inc
mov
jnp
fdivrs
xlat
push
cmp
lods
inc
ss
add
or
stc
in
or
into
and
daa
in
inc
cmp
pop
sub
pushf
clc
jl
mov
sbb
mov
lret
xor
and
cmc
sbb
data16
jp
jae
in
inc
jmp
sub
dec
adc
je
jnp
add
and
jne
hlt
jbe
or
stos
inc
add
roll
xor
fldenv
outsl
push
jl
in
ss
daa
je
xchg
mov
mov
push
sti
push
or
push
fcoml
xlat
pop
movsb
rcll
sub
cwtl
out
jle
push
xchg
mov
ficoms
lret
ficoms
xor
xor
xor
dec
mov
clc
aas
add
and
push
mov
xor
mov
sti
sub
xor
in
adc
loop
sub
mov
push
dec
xorb
fistpl
mov
ret
stc
jo
popf
pusha
cmc
add
cltd
shll
roll
jg
jmp
add
insb
scas
sub
aaa
push
add
enter
inc
mov
test
mov
push
mov
pop
or
aam
push
in
outsb
xchg
cltd
mov
xor
push
sub
addl
pushw
xchg
lret
push
sub
mov
adc
or
inc
test
add
mov
shll
int
lcall
leave
jge
xchg
fwait
inc
sti
jnp
cmp
call
add
idivb
jmp
in
cmpsb
movsb
mov
push
xor
pop
and
ja
pop
sub
sbb
dec
dec
pop
add
sbb
push
rcr
xor
dec
movsb
inc
mov
or
out
imul
dec
js
data16
mov
pop
or
pop
jne
rcl
inc
add
xchg
test
std
cmpsl
ret
lcall
arpl
lock
lock
jecxz
cmc
pushf
jl
sub
fistpll
arpl
fisttps
negl
mov
mov
rclb
lret
mov
inc
sbb
xchg
push
push
adc
mov
scas
jne
sbb
pop
icebp
xor
pop
stos
pusha
fisubrl
xchg
loopne
js
mov
iret
je
mov
adc
jg
jns
sbb
and
outsb
lret
stc
pusha
dec
int3
push
clc
rorl
andl
pop
adc
jno
mov
mov
and
lahf
mov
dec
jae
subb
cmp
mov
subl
sbb
aam
arpl
popl
ret
cmpsb
outsb
out
lods
jns
fstpt
add
mov
ret
fwait
or
pop
mov
add
push
ret
mov
jge
push
push
add
xor
addr16
out
add
flds
push
add
clc
and
sahf
and
outsl
imul
adc
cmp
and
adcl
stos
lret
or
fwait
pop
xlat
push
cmpsl
dec
add
jmp
sbb
mov
push
shll
sub
aam
push
out
frstor
sbb
and
xchg
or
xor
mov
orl
mov
push
jns
jle
push
in
pop
cmc
jge
adc
sub
xchg
ss
mov
test
out
rclb
insb
adcb
inc
fcoms
mov
xchg
xchg
pushf
dec
clc
push
es
mov
and
mov
fbstp
ljmp
push
xchg
xor
adc
ss
jp
movsl
mov
inc
sbb
xor
inc
fs
jl
in
lds
clc
adc
jp
mov
pusha
and
xchg
mov
add
and
pop
cmovns
cmc
fsubp
out
xor
or
mov
mul
sarb
gs
mov
mov
mov
cmpsl
lea
js
sti
and
push
bound
into
ljmp
adc
ficoms
xchg
fnstenv
fistps
xor
dec
lea
add
enter
mull
sbb
pop
movsl
roll
and
push
sbb
jae
cmpsb
cmp
icebp
cmpsb
pushf
aad
in
lret
fcmovu
into
nop
and
mov
mov
cmp
cmp
pop
or
xchg
pop
aam
popl
sub
inc
cld
dec
in
imul
jmp
dec
inc
addb
cmp
jmp
dec
stc
fadds
push
and
dec
cmp
and
nop
pusha
addr16
sub
xchg
pushw
adc
fs
or
pop
int
mov
in
mov
cmp
pop
mov
add
or
inc
fs
aas
rcll
push
jge
cmpsl
das
xchg
lock
popf
jl
fsubrl
jecxz
push
scas
clc
dec
js
push
repz
pop
ret
push
dec
xor
add
mov
ret
fldl2t
mov
xor
imul
jge
scas
mov
inc
loope
inc
xchg
enter
xor
and
inc
roll
dec
loop
dec
outsl
je
mov
xchg
dec
leave
movsl
lahf
jno
pop
inc
adc
mov
clc
jae
ja
dec
fimuls
jmp
adc
xchg
cmpsl
push
xchg
cltd
jmp
aaa
ss
dec
enter
jae
ret
add
iret
sbb
ret
inc
gs
mov
sub
lock
loopne
aam
cmp
scas
fidivl
adc
push
decb
inc
in
or
out
add
in
in
pop
lret
inc
ja
dec
mov
cld
mov
inc
and
add
lods
ffreep
adc
inc
xchg
xchg
push
and
popa
cmc
lods
xchg
subl
jnp
jg
sbb
xchg
pop
and
mov
pop
jecxz
cmp
xor
sub
push
call
and
cmpsl
iret
pop
sbb
xor
mov
xor
dec
xor
sahf
xchg
xor
scas
xchg
inc
or
xchg
jns
xchg
xor
stos
or
mov
mov
lahf
push
jae
dec
jle
lcall
mov
popf
pop
test
and
add
lods
shl
jl,pn
push
sub
sub
frstor
pop
push
jle
cwtl
aad
or
mov
xor
xor
repnz
fildl
rorb
jg
aaa
hlt
or
in
call
imul
jmp
xchg
xlat
pop
outsl
or
pop
jg
enter
out
loopne
inc
mov
scas
call
mov
stos
ret
je
out
cmp
pop
jge
pop
push
roll
mov
jbe
nop
divb
sbb
mov
sub
aaa
and
addr16
jge
xchg
mov
sbb
adc
jno
lds
outsl
pop
push
out
cmpsl
pop
arpl
cli
stos
int
cmpsl
ficoml
push
or
lea
jo
jecxz
cwtl
test
leave
mov
pop
int
xchg
pop
call
std
scas
cmpsb
sub
outsl
mov
sti
inc
xchg
movsl
sti
fists
lods
jle
or
add
add
mov
pop
mov
inc
mov
mov
xchg
out
xchg
out
outsb
andb
jmp
pop
mov
imul
ljmp
cmp
fidivl
push
cmc
pop
out
pop
roll
enter
sub
dec
jmp
jne
push
push
pushf
pop
mov
pop
push
outsb
lahf
insb
xor
icebp
lock
mov
sahf
or
sbb
sub
clc
popa
jge
sub
fstp
in
lcall
aam
push
push
lea
out
pop
shll
pushf
fldcw
jne
or
sbb
popa
push
insb
subl
pop
pop
in
jne
stos
mov
pop
lock
into
jns
and
loopne
rclb
and
int3
jne
sub
jge
or
pusha
mov
or
adc
xchg
pop
add
xchg
jae
mov
mov
rcrb
mov
adc
dec
rorl
cld
mov
adc
add
popf
push
mov
jo
push
popa
imul
jge
iret
aad
lea
bound
sbb
sub
cmpsl
pushf
fisttps
ret
lahf
dec
addr16
addr16
je
mov
iret
or
outsb
loopne
adc
pop
jne
fsts
xor
sti
xchg
push
add
sahf
loop
fprem
out
dec
xor
mov
dec
pop
sbb
jb
push
rclb
js
lret
orb
push
mov
ja
imul
lcall
cmp
or
cs
cmpsl
sti
fwait
jb
cmp
cmp
int
mov
push
cli
sub
stos
sub
mov
jmp
out
lea
outsl
mov
stos
ljmp
movsb
or
das
inc
into
les
iret
js
scas
dec
ljmp
nop
ss
pop
cmc
cmp
adc
sub
stos
add
pop
inc
mov
das
rol
hlt
int3
jle
mov
dec
xlat
and
imul
cmp
sbb
lods
out
push
jmp
sbb
out
inc
sbbb
and
decb
rol
ja
leave
xchg
fwait
nop
out
aam
inc
aaa
idivl
sub
int
mov
lcall
sbb
loope
dec
roll
sub
ljmp
ret
adc
push
in
loope
insl
jecxz
pop
add
in
cltd
dec
or
sub
aas
and
xor
inc
scas
xchg
int3
pop
jecxz
fbstp
adc
fucom
and
xchg
fnsave
jg
roll
jmp
idivb
sbb
sbbl
addr16
add
lods
fnstcw
popa
push
call
push
adc
cmpsb
add
loopne
ret
es
fimuls
imul
mov
inc
scas
xchg
adc
clc
push
push
fidivl
xor
inc
and
stos
xor
jbe
push
mov
push
fdivp
sbb
dec
add
adc
ljmp
fidivl
in
lea
pop
je
out
fisttps
jae
scas
call
sub
mov
cmpsl
mov
xor
push
push
inc
sub
adc
xor
jecxz
xchg
add
jmp
stc
enter
pop
pushl
mov
stos
scas
lods
jae
lds
mov
ljmp
in
aas
nop
jge
jge
add
jg
sbb
movd
movl
rclb
adc
test
into
ret
sbb
in
inc
fimull
lods
fwait
pop
sbb
scas
push
jo
push
fldenv
scas
testl
ret
sub
icebp
add
pop
stc
es
mov
adc
or
cli
fidivs
sub
in
test
cltd
cmp
and
dec
jns
in
nop
cld
pop
daa
fdiv
lret
push
and
mov
push
decb
dec
sbbb
mov
sbb
push
pop
mov
hlt
jp
xchg
ss
mov
mov
adc
xchg
or
mov
aam
rcrl
pop
jne
dec
adc
mov
sub
mov
in
mov
dec
ds
loopne,pt
cltd
xchg
aad
enter
cwtl
jmp
cmp
adc
or
pusha
mov
std
sub
xchg
subb
aas
mov
data16
vunpcklpd
pop
lahf
leave
sti
inc
jmp
es
xchg
test
cmp
imul
es
adc
rcrb
sub
mov
inc
cmp
mov
repnz
clc
mull
mov
pusha
les
xor
jno
lcall
xor
inc
xor
iret
sbb
dec
fucomi
mov
stos
pop
out
jge
stos
push
repz
sbb
xor
pop
inc
lret
out
xchg
cwtl
fidivrs
stos
cltd
ret
adc
dec
mov
loop
pusha
xorl
pandn
ret
stc
loope
xchg
push
sbb
push
dec
xchg
in
jb
dec
ds
lock
je
arpl
sar
insb
adc
jmp
in
or
xchg
and
jmp
insl
mov
rcrl
enter
jno
js
shll
sbb
adc
ljmp
or
push
xorb
nop
xchg
insb
add
test
xchg
addr16
pop
sub
out
push
insl
insl
jnp
jp
into
mov
mov
aad
in
stos
inc
dec
rol
addb
add
xor
dec
mov
pushf
int3
stos
loope
jge
push
push
test
mov
pslld
mov
ss
enter
lds
jmp
pop
mov
pop
cmp
push
xorb
popa
xor
pusha
push
xchg
int3
out
fildl
dec
add
daa
es
adc
push
mov
stc
pushf
mov
mov
jbe
pop
jp
push
in
cmp
cmp
pop
inc
mov
icebp
xor
imul
pusha
es
sahf
jecxz
out
and
stc
loope
mov
hlt
push
fildl
mov
ret
ja
xchg
arpl
test
jb
fstl
sbb
jne
movsl
hlt
pop
push
xchg
sbb
sbb
add
out
adc
xchg
or
hlt
dec
repnz
mov
test
scas
xlat
loopne
in
inc
adc
out
test
mov
stos
in
mov
adc
mov
inc
lods
aam
cmp
or
cld
lret
mov
pusha
fnstenv
sbb
sub
adc
jne
fildll
enter
inc
cltd
in
mov
test
and
inc
mov
xor
push
adc
stos
xorl
dec
fnstsw
add
mov
or
jbe
arpl
sub
inc
shlb
pop
js
scas
mov
xchg
ret
movb
mov
xlat
mov
sub
xchg
movsb
pop
sahf
leave
cs
test
mov
mov
js
xchg
into
icebp
cmp
int3
mov
dec
out
or
insl
lret
lret
ja
out
lods
fdivrl
jae
dec
je
inc
imul
cmp
les
jge
jb
shll
repnz
mov
pop
jmp
cmp
jmp
add
les
iret
adc
sub
or
out
cmpsb
and
dec
insl
xchg
popf
mov
pop
xchg
arpl
pop
mov
xor
call
in
mov
arpl
push
dec
frstor
aad
cmc
dec
fsub
jne
cltd
fs
lret
add
inc
lret
ficompl
xchg
dec
dec
fdivrs
in
pop
addr16
or
mov
mov
frndint
cli
cmovo
lods
xchg
sbb
out
xchg
mov
rorb
adc
adc
xchg
clc
in
pop
push
or
divb
sbb
lods
pop
or
int3
aaa
sub
das
xchg
cmp
insb
xchg
rol
lret
test
out
jecxz
xchg
mov
inc
mov
and
pop
call
ss
dec
adc
lcall
pushf
andb
dec
loope
mov
mov
gs
push
ficoml
xor
cmp
cmpsl
dec
inc
dec
bound
pop
mov
ret
xchg
cmpl
xchg
pop
fsubp
leave
sub
popf
cmp
fisubrl
or
in
push
into
lret
ret
repnz
xchg
ficompl
int
mov
in
lahf
pop
adc
mov
mov
xchg
mov
cmpsl
fwait
sub
add
ret
sub
popf
xchg
lds
xchg
mov
push
sub
xchg
imul
sahf
push
mov
jecxz
sbb
mov
and
inc
xor
xchg
callw
cld
pop
subb
sub
cli
rorl
dec
mov
xchg
scas
iret
dec
insl
lret
scas
nop
outsb
sbb
daa
fs
jge
pop
jecxz
das
push
inc
cli
cmc
or
movsl
dec
addr16
and
fwait
ficoml
dec
mov
push
movsl
cmpsb
iret
sub
pop
push
dec
xchg
lahf
sbb
insb
fnsave
and
lret
imul
pop
or
or
out
ljmp
cmpsl
jge
jl
mov
out
push
cmc
pop
and
xchg
mov
inc
out
rclb
movsb
mov
out
jns
cmovl
xor
mov
test
cmpsb
jns
ror
int3
push
int
lods
nop
mov
and
leave
push
aas
cs
and
enter
leave
mov
dec
or
add
xor
fwait
cmc
ficoms
sbb
or
rcr
sub
ret
mov
ljmp
add
in
movsl
or
jne
inc
or
nop
jge
dec
jo
imul
loope
push
stos
xor
mov
jae
popf
in
mov
push
dec
jns
cs
in
test
rcll
jle
xchg
ss
hlt
or
hlt
pop
sbb
cld
and
pop
in
cwtl
fbld
aaa
lea
jg
pop
jnp
inc
lret
shl
or
push
adc
fldenv
sbb
bnd
push
test
jo
adc
sub
addr16
lret
into
sbb
dec
daa
call
lahf
xor
mov
push
sbb
repz
data16
outsl
lods
sbb
int
ja
fadds
cwtl
lahf
frstor
inc
das
jae
or
adc
pop
jp
test
sub
lfs
inc
push
mov
aas
fimuls
add
rorl
push
mov
cld
out
popa
inc
add
stos
pop
in
mov
mov
add
je
add
cmp
xor
arpl
aas
mov
icebp
insb
fists
jmp
insb
out
aam
inc
cld
fsubrs
sbb
stos
inc
stos
mov
movsl
xchg
stc
sbb
xor
cmpsb
addr16
jno
fidivs
xor
daa
and
cmp
lock
loopne
jmp
stos
jne
fnstsw
add
test
int3
sbb
xlat
mov
outsl
xchg
mov
push
push
dec
cld
mov
ljmp
push
sbb
cmp
outsl
mov
roll
sbb
xchg
es
add
ret
hlt
push
lret
sub
popf
scas
lea
daa
shll
mov
jo
push
jl
or
arpl
sub
jo
jns
mov
movsl
out
out
dec
into
dec
push
out
jo
dec
and
enter
xchg
xlat
pop
xchg
insl
div
push
mov
mov
push
adc
dec
loopne
repz
stos
int
into
jmp
dec
leave
outsb
inc
ret
sub
lahf
dec
pop
jmp
sub
pop
push
fcoms
popa
stos
sbb
das
fdivl
inc
popa
jae
fmulp
fmull
decl
int3
inc
scas
inc
jl
xchg
jl
and
scas
add
cli
clc
daa
into
clc
insl
lock
add
jae
aad
cli
test
rcrl
out
adcl
lcall
jle
cld
cli
movsb
sub
mov
or
fldcw
jecxz
clc
push
rcll
dec
pop
jp
pop
loop
lock
shlb
pop
lods
in
push
xchg
imull
scas
lea
out
movsb
dec
leave
pop
and
push
rcrl
xor
jb
popa
xor
or
xchg
les
rclb
mov
repz
outsb
test
aaa
sbbb
loope,pn
lock
stc
add
pop
xchg
loopne
xchg
in
jb
imul
aad
shlb
push
popa
mov
sub
into
mov
bound
and
fadd
and
pop
dec
add
or
mulb
xchg
data16
leave
repnz
jmp
xor
or
popf
jns
mov
inc
lcall
push
inc
push
aas
mov
dec
add
push
sahf
mov
je
lds
pop
out
dec
test
repnz
pop
sbb
rcl
leave
adc
cs
mov
sbb
inc
adc
lcall
xchg
sbb
popf
in
sub
fisttpl
cmp
call
pop
idivl
mov
shl
nop
enter
mov
mov
mov
testb
aas
ljmp
pop
fs
test
mov
es
adc
push
insb
les
divl
fwait
sub
je
jp
cmp
and
mov
or
ja
mov
dec
push
or
jge
jecxz
dec
enter
xor
ja
mov
cwtl
fldenv
shll
cmpsb
pop
pop
add
xchg
leave
mov
int
shlb
or
jecxz
add
aaa
fisubrl
test
scas
loop
and
cli
mov
and
xchg
cmp
ret
inc
fstl
cmp
int3
dec
xor
push
mov
ret
loop
add
fdivs
jno
dec
cld
mov
pop
pop
cmc
pop
mov
rorb
insb
ret
push
bound
test
pop
clc
sti
cmp
cmp
ret
mov
mov
repz
fisubrl
adc
test
dec
jbe
dec
inc
cwtl
loope
aam
les
jo,pn
imul
adcb
mov
sub
hlt
and
pushl
out
xchg
bound
test
jmp
and
es
cltd
cmp
insb
or
int3
idiv
or
push
mov
jae
subb
rcll
jo
push
cmpsl
mov
das
xor
jmp
cs
out
jns
sub
push
mov
dec
bound
das
loop
aad
push
xor
xchg
push
ret
pop
xor
out
loopne
xor
ljmp
lock
mov
cmpl
dec
jl
roll
jmp
out
jecxz
test
sbb
data16
push
sub
mov
out
aad
lret
cltd
out
call
sti
xor
dec
fsubp
mov
pop
dec
arpl
ss
mov
and
or
hlt
popa
int3
fimuls
repnz
mov
xchg
mov
jns
fiaddl
addr16
push
push
leave
aad
sub
aas
push
sti
sbb
xchg
or
or
dec
stos
out
rcrb
push
cwtl
push
lods
mov
cmp
testb
mov
xor
sbb
jge
int3
repnz
jl
mov
mov
mov
fldenv
cltd
outsb
loope
sub
push
cmp
sbb
xchg
or
lea
add
and
sbb
push
mov
lods
pop
pop
jecxz
xor
or
sbb
cmpsl
inc
loopne
por
dec
idivb
stos
test
mov
jbe
push
ljmp
sbb
ret
mov
pop
or
mov
gs
call
and
scas
mov
into
lret
in
push
dec
push
mov
cmp
nop
push
iret
aam
inc
movsb
mov
pop
mov
push
dec
sti
mov
int
cli
mov
and
call
xchg
xchg
sbb
in
das
sub
or
pop
inc
aaa
pop
push
pop
jae
hlt
in
sub
daa
cld
xorl
cmp
fsubrs
jle
xor
lea
leave
mov
xchg
mov
outsb
lock
or
fwait
jl
lds
mov
sub
pop
xchg
ja
insl
jnp
mov
mov
and
or
scas
cltd
lods
cwtl
cld
scas
add
dec
loop
mov
pop
jae
icebp
in
adc
rcll
out
or
xlat
inc
movsb
hlt
xor
das
imul
xchg
lods
ja
add
adcb
fisubrl
cmp
ficomps
or
fcoml
push
mov
or
out
aas
cwtd
or
mov
popa
adc
push
pop
ss
jno
xchg
adc
ja
test
xchg
addb
lret
lret
fnstenv
popa
pushf
mov
enter
iret
notb
jnp
mov
or
or
std
pop
dec
push
push
inc
push
rorl
cmpsb
es
mov
lods
xor
push
shll
cmp
push
xchg
dec
jmp
push
mov
jns
inc
sar
in
call
stos
cwtl
mov
popf
or
adc
popa
sbb
jne
xchg
pop
adc
clc
ljmp
push
mov
mov
dec
mov
jle
dec
dec
and
aas
inc
es
xor
mov
or
stc
mov
das
adc
and
out
jbe
inc
cmpsb
daa
cmp
mov
jns
sub
sbb
inc
sub
insb
scas
xchg
ds
adc
xor
mov
jnp
push
jb
mov
sbb
cs
add
daa
inc
jae
cmp
mov
ljmp
popa
mov
lods
pop
mov
lret
mov
inc
into
in
shll
push
or
stos
cmc
lds
push
add
std
ds
push
sbbb
cld
mov
negb
adc
jmp
push
movsb
scas
and
roll
push
mov
in
test
fs
shrl
sub
test
jo
mov
xchg
jl
jae
je
addr16
jno
pop
stos
xchg
sub
xor
or
in
fwait
addr16
and
out
repz
xlat
in
adc
push
imul
add
mov
adc
push
push
cmp
xor
cli
inc
jo
jg
xor
pushf
imul
xor
loop
pop
nop
jne
push
aaa
aaa
push
mov
out
xchg
cmp
fwait
adcb
js
xchg
push
mov
iret
dec
mov
push
sarl
into
int
add
pop
and
jo
sbb
mov
sbb
mov
js
fists
push
stos
pop
mov
mov
dec
sbb
mov
dec
adc
lret
cmpl
aad
test
cltd
int
rolb
int
imul
daa
je
rorb
rolb
jne
xor
xchg
mov
inc
daa
push
xchg
rorb
push
cmp
and
mov
int
xchg
in
adc
mov
std
es
sub
test
xchg
or
mov
ljmp
push
lret
pop
sbb
in
orl
test
pop
clc
xor
hlt
ret
leave
mov
fs
push
pop
cmp
popf
cld
out
pop
imulb
jae
hlt
out
mov
and
adc
dec
fldt
shl
inc
imul
xor
lcall
lea
cmp
mov
adc
mov
inc
and
jge
stos
add
add
adc
lret
xchg
inc
cs
rcrb
and
int
sbb
inc
jo
cmc
jne
sar
in
sbb
mov
lret
sub
int
stos
inc
frstor
sub
fwait
adc
jno
inc
fcomi
sub
pop
push
dec
fs
mov
outsb
mov
in
shrl
push
inc
bound
cmp
rcrl
mov
jne
insl
fisubrs
ret
mov
pop
add
inc
lcall
mov
and
jae
int
sarl
push
lods
adc
ljmp
or
popf
inc
imul
mov
add
sbbb
xchg
pop
sbb
jb
cld
out
cs
xchg
xchg
push
jae
or
push
adc
loop
cmp
adc
jnp
push
dec
sahf
arpl
inc
sub
and
push
jno
shrb
adc
in
repz
sbb
push
repnz
sahf
dec
sbb
inc
mov
xchg
call
pop
nop
out
clc
dec
jne
inc
sub
popa
adc
cli
mov
out
xlat
mov
pop
shrl
ss
test
push
lea
sbb
adc
cmpsb
movsb
jge
sbb
outsb
xchg
in
xor
push
iret
bnd
fidivrs
push
loope
sarb
xchg
push
mov
mov
je
into
orb
mov
pop
jmp
add
pop
ret
dec
stos
xor
arpl
cmp
test
push
push
dec
lods
adcb
nop
movsl
inc
dec
divl
push
lahf
mov
std
enter
cmp
mov
out
lods
into
push
fistpll
fwait
popa
ret
mov
clc
dec
and
mov
jg
or
push
pop
mov
cmc
movsb
jmp
dec
push
mov
shrb
mov
xchg
sbb
lods
adc
fimull
ljmp
mov
mov
xchg
mov
imulb
sbb
pop
dec
pusha
mov
jae
pop
add
mov
out
mov
add
fs
mov
ja
jbe
and
loope
push
push
sbb
in
push
cmc
cwtl
and
iret
mov
icebp
pop
pop
mov
sub
or
subl
push
adc
push
mov
rol
cwtl
jno
aad
lret
push
ret
xchg
lds
adc
dec
dec
push
push
push
cmpl
sub
sbb
mov
or
xor
dec
xchg
mov
pop
test
cld
xor
dec
inc
jp
fstpt
xor
repz
adc
sti
mov
bound
mov
mov
jbe
clc
into
mov
sbb
xchg
outsb
lock
insl
out
dec
dec
divl
jge
pop
xchg
clc
dec
push
jg
jecxz
jbe
scas
xchg
xlat
add
dec
xchg
pop
and
icebp
test
inc
in
xchg
mov
leave
adc
push
sbb
repnz
lret
inc
lock
lahf
add
adc
out
inc
jo
xchg
out
ja
push
dec
les
inc
mov
jnp
push
iret
pop
xor
in
pop
fisttpll
push
dec
mov
ds
fistpll
gs
sub
xor
lods
cmp
add
in
push
daa
andl
rcrb
in
sub
adc
jnp
xchg
out
push
aas
test
loop
fisubs
adc
mov
add
je
jae
outsb
ss
loopne
jne
aam
mov
cmc
rorl
push
add
daa
fnstsw
shrl
or
add
es
add
out
push
cmp
add
pushf
jns
jmp
shl
sbb
fcoml
and
pop
mov
xchg
mov
fisubs
hlt
movsl
ret
ljmp
sub
jg
mov
aas
dec
jp
xor
and
push
fs
mov
test
repnz
pop
pop
or
scas
sub
aaa
loope
push
xchg
test
cltd
pop
incl
xchg
enter
jp
int
adc
or
push
pop
loop
in
add
ret
dec
xor
adc
jno
bound
xchg
int3
das
xchg
xor
inc
mov
popf
mov
xor
repz
push
cmp
jmp
adc
add
mov
inc
test
or
mov
add
ret
xchg
test
cld
adc
adc
sbb
test
mov
adc
xor
and
roll
adc
in
xchg
and
dec
and
enter
push
fisubrs
das
shlb
hlt
dec
xor
sar
and
int
lcall
mov
mov
sbb
adc
pop
jp
dec
leave
adc
mov
and
test
mov
cmp
and
andb
and
jnp
sbb
ja
add
inc
push
jge
insb
stos
sub
push
adc
aam
jnp
cmp
or
pop
adc
in
out
mov
repnz
call
jo
imulb
inc
in
cmp
mov
sbb
xor
insb
test
sbb
hlt
add
je
xor
lahf
jae
or
push
in
ja
call
rolb
adc
sbb
test
xlat
in
arpl
and
roll
sahf
stos
sub
push
xchg
fidivl
imul
push
lret
or
fnstcw
clc
aad
jp
mov
shll
inc
sbb
sbb
loope
int
shl
add
test
mov
jge
or
mov
jnp
into
data16
rcrb
cmp
or
mov
cmp
or
or
pop
out
ficoms
add
roll
xor
xchg
add
stc
pop
test
jecxz
hlt
call
aaa
sbb
pusha
pop
dec
jmp
shlb
sub
cltd
out
jge
sub
mov
repnz
iret
imul
jle
add
rol
ret
jecxz
lret
adc
cltd
xchg
inc
pop
loopne
sub
mov
mov
xor
das
dec
imul
inc
leave
mov
ljmp
jb
mov
mov
ds
xor
pop
imul
dec
inc
push
aam
and
pop
push
das
aam
pop
mov
xor
jbe
xchg
fwait
sub
add
xchg
cltd
adc
push
mov
jle
push
pop
daa
insb
out
pop
or
movl
mov
xorl
shl
xchg
cld
add
stos
dec
jg
rorl
xchg
ljmp
jecxz
stos
push
mov
push
cmp
xchg
adc
pop
andb
ret
sti
repnz
cmp
xor
sub
je
push
xchg
dec
xlat
push
stos
fisttps
in
xchg
jnp
cmp
mov
and
lret
pusha
and
sub
data16
int3
adc
int3
movsb
mov
js
lret
cmp
rclb
dec
xor
mov
xor
ret
lret
dec
cmp
xor
mov
aaa
xor
outsb
out
pop
or
in
in
mov
pop
dec
lods
fdivrl
and
in
jge
pop
fwait
imul
repnz
xchg
push
mov
std
or
lret
fisubs
shll
jo
xchg
call
xchg
imul
cmp
bound
and
inc
out
pop
inc
or
sub
push
das
push
movsl
lods
jno
and
in
add
jmp
pop
cli
jb
sub
lods
sarb
cwtl
pop
loopne
sbb
and
out
mov
stc
pop
and
mov
lahf
or
cltd
cmpsl
adc
popf
mov
dec
mov
jbe
inc
ret
sahf
add
orb
lcall
fsubs
or
xchg
outsb
mov
push
sbb
les
xchg
push
les
mov
jnp
or
cmp
inc
xlat
dec
cmp
fbld
push
jnp
cmp
mov
mov
dec
scas
xor
fistl
repnz
out
mov
jecxz
or
lret
pop
mov
or
mov
mov
lcall
push
iret
and
pop
and
cwtl
aad
pop
rcrb
ror
in
inc
or
mov
inc
dec
adc
add
or
pop
jno
mov
and
imul
and
imulb
imul
mov
lret
in
push
aaa
jne
and
into
or
xchg
loop
int3
das
cld
andb
push
mov
and
adc
fucom
and
push
insl
into
or
pop
mov
push
xchg
push
push
mov
call
ficoms
in
mov
sbb
inc
movb
dec
cltd
sbb
in
insb
inc
pop
ja
lds
bound
sbb
cmp
fiadds
jne
repnz
xchg
je
adc
flds
jae
jmp
cmpsb
in
test
fbstp
enter
and
xor
cmp
mov
inc
inc
loopne
adc
mov
leave
dec
movsl
fnsave
addr16
cwtl
add
cmpsb
xor
dec
mov
sbb
xchg
aaa
xchg
sbb
jns
mov
jg
dec
fdivp
mov
gs
cmp
and
mov
pop
fdiv
mov
test
gs
jl
or
jl
pop
leave
pop
pop
loopne
je
or
ss
sub
clc
std
jno
jmp
aam
cmp
sub
add
test
push
jge
adc
push
adc
fstl
adc
nop
xor
or
mov
int
and
or
sub
add
and
push
lcall
mov
or
fcoml
fisttpll
xchg
mov
cwtl
inc
mov
mov
add
jecxz
js
test
jmp
adc
adc
fisttpll
mov
jmp
inc
jecxz
jl
jmp
adc
cmp
cltd
sahf
hlt
shl
call
sub
cs
out
xlat
addr16
xchg
jecxz
test
sub
sub
inc
add
test
pop
test
into
or
mov
ljmp
sbb
repnz
adc
pop
int3
xchg
lds
cmp
lods
dec
and
cmp
lods
mov
push
or
jge
cmpsl
inc
xchg
add
lcall
mov
jbe
push
and
fs
dec
cld
jg
adc
mov
fnstenv
xor
ret
daa
mov
std
sbb
jbe
shlb
mov
inc
in
push
sahf
aam
pop
and
inc
movl
push
cltd
out
dec
mov
xor
jmp
mov
ret
scas
mov
movsl
cmp
jge
xchg
test
pop
out
push
add
in
adc
call
frstor
std
out
xor
int
mov
and
inc
orl
enter
es
pop
dec
scas
mov
fstps
icebp
jge
ja
pop
sub
xchg
cli
add
sbb
sub
push
sbb
addl
insb
mov
jne
lcallw
cmpsl
sbb
add
out
fimull
mov
add
lret
adc
ljmp
jb
mov
icebp
sbb
lods
test
fstpl
ret
sub
into
adc
mov
lds
or
and
adc
fnsave
mov
fcomps
in
jne
mov
lahf
ret
aam
inc
nop
sbb
sub
push
scas
inc
jno
insb
inc
or
sahf
mov
shl
jae
sub
inc
add
sbb
mov
faddp
fsubl
and
xor
push
sub
out
lods
ja
ds
mov
or
insl
iret
sti
std
add
jbe
or
dec
dec
pop
into
shlb
pop
stos
rcrl
or
xchg
push
adc
lods
fnstcw
lods
frstor
dec
mov
sbb
test
loopne
aas
test
iret
inc
nop
aaa
js
lcall
mov
adc
inc
addl
push
out
lret
stc
jmp
dec
xchg
xlat
mov
and
leave
mov
push
cmp
inc
pop
or
movsl
or
leave
sti
rclb
fidivrl
push
lods
repz
sbb
adc
das
mov
std
cmpsl
adc
and
push
xor
adc
adc
fsubs
xorl
sbb
in
sub
push
fisttpl
sub
jmp
fldcw
in
into
pop
jne
inc
stos
dec
cmp
daa
lahf
repz
mov
leave
movsl
cmp
lahf
jmp
sbb
ret
shlb
bound
les
imulb
jbe
imul
or
bnd
gs
mov
outsb
mov
cmp
mov
sub
dec
jg
movsb
dec
jge
out
adc
pop
jmp
lods
mov
imul
push
sbb
daa
push
or
adc
pop
adc
in
inc
clc
mov
mov
fiadds
mov
daa
mov
mov
xlat
push
xlat
ss
add
mov
insb
mov
inc
dec
and
out
sbb
hlt
out
pop
and
cmp
cmp
mov
sub
dec
jecxz
jae
clc
jle
scas
outsb
jl
dec
test
sbb
cmpl
pop
rorl
out
jb
jne
test
lcall
push
pop
sub
pop
je
jno
lea
xchg
push
add
sbb
test
cld
out
mov
push
jecxz
cli
xchg
lret
push
xchg
insl
jg
loopne
outsb
lea
sbb
subb
dec
dec
mov
pusha
adc
and
popl
imul
shrb
fisubrl
push
push
lcall
outsb
lock
out
add
push
cmp
jmp
sbb
scas
hlt
xor
pop
stos
or
scas
fisubl
loope
int3
ljmp
stc
mov
imul
adc
cld
sub
aam
bound
jge
sbb
fisttpll
in
loope
mov
mov
lcall
js
mov
add
xchg
sbb
and
icebp
insl
add
stos
daa
push
incb
shll
enter
xor
jbe
inc
fistps
shll
cmp
jp
sbb
arpl
enter
lret
jmp
enter
aaa
xor
add
push
roll
or
jno
sbb
jg
mov
lret
fwait
stc
inc
mov
xchg
sub
stos
jmp
or
fs
shrl
cmp
data16
adc
int3
fs
jecxz
cli
fbstp
mov
add
cli
cmp
jne
loope
clc
decb
out
or
sub
push
call
lcall
outsb
clc
ja
cmp
add
sub
rclb
dec
gs
mov
enter
xchg
test
das
imul
adc
insl
mov
push
loop
or
addr16
stos
adc
mov
pop
sti
jno
pushf
decl
movsl
lret
cmpsb
mov
xchg
mov
mov
cmp
clc
mov
addr16
pop
mov
push
or
fiadds
addb
xor
test
jg
pop
and
mov
mov
sbb
xchg
test
fisubl
jle
push
cmp
adc
sub
call
sub
cli
pop
push
pop
xor
int
lahf
mov
lcall
test
mov
insb
xchg
in
push
jns
cmpsb
adc
push
push
xor
js
clc
mov
js
nop
add
push
out
push
ss
cltd
sub
cmpsl
cmp
lret
add
sbb
fwait
jae
xor
xchg
out
cltd
in
jl
xlat
movsl
adc
popa
gs
pushf
xor
cli
add
cmp
mov
and
sub
jno
leave
fsubs
push
call
das
dec
popa
xor
testl
add
push
lret
sti
decb
cmpsb
test
pop
test
lcall
cmp
pop
es
imul
mov
adc
in
xor
aam
ss
lret
sbbl
and
clc
add
and
test
popa
inc
push
jb
sub
adc
sbb
insb
dec
inc
fbstp
stc
aam
adcb
and
jnp
xchg
dec
pop
and
jecxz
data16
mov
lcall
push
repz
dec
dec
mov
cmpsb
test
sub
js
movsl
jmp
add
mov
loope
xor
arpl
jmp
dec
jg
stos
push
xor
mov
or
inc
loop
mov
in
cmp
push
mov
pop
jle
ss
mov
subb
inc
dec
leave
hlt
xor
jnp
or
xor
xor
lds
pop
paddusb
lds
xchg
sti
or
dec
mov
inc
mulb
ss
xchg
push
aad
mov
lcall
addb
mov
jnp
cld
jecxz
leave
scas
lret
push
cmp
or
dec
clc
pop
dec
jecxz
outsl
and
movsl
mov
or
insl
arpl
mov
xchg
out
std
std
jle
out
dec
imul
stos
mov
shrl
add
mov
stc
rorb
ret
je
push
addr16
jg
mov
xor
sub
jns
idiv
shrb
and
mov
jmp
repnz
and
testb
lds
aas
jg
scas
add
xchg
cmp
pop
mov
arpl
roll
mov
and
or
or
les
subb
xchg
ss
or
add
sub
sbb
insl
xchg
pushf
jge
nop
xchg
addr16
xlat
je
mov
or
es
jns
dec
adc
test
jg
popa
sbb
popa
mov
jne
pop
jg
inc
jmp
lahf
jbe
mov
sub
xchg
mov
pop
push
cmpsl
add
ss
js
mov
xor
out
pop
push
cmp
mov
mov
push
decb
jo
rcl
sbb
xlat
shrb
mov
adc
shlb
mov
ljmp
push
xchg
out
dec
outsb
and
jns
inc
push
inc
sbb
aad
les
test
dec
int3
sbb
sub
sbbl
leave
hlt
inc
test
insb
fmulp
mov
pop
call
fidivs
gs
cmpsb
sub
or
jecxz
jg
adc
push
test
jecxz
gs
push
pop
xchg
cwtl
daa
bound
pop
cmp
sub
rcr
aam
add
mov
dec
in
mov
testl
xor
es
xchg
push
int3
add
dec
mov
jge
push
jmp
es
mov
inc
mov
int3
ljmp
mov
cmpsl
movsb
mov
mov
jae
pop
xor
imul
rcr
std
mov
lds
sbb
lret
test
sbb
repnz
and
dec
leave
xchg
icebp
loope
jp
test
mov
mov
and
sbb
bound
mov
aam
dec
stc
jge
xchg
loope
pop
inc
pop
lret
xchg
in
and
xchg
pop
scas
je
mov
stc
cmp
pop
pusha
sub
out
fsubr
mov
fldt
adc
push
push
or
jl
int
push
enter
fnop
pushw
fisttps
sub
push
xchg
jno
jnp
imul
leave
pop
out
xor
dec
or
mov
mov
cmp
dec
dec
ret
dec
pop
lret
dec
es
subb
popa
dec
dec
cmpsb
outsl
jp
inc
cmp
xor
lcall
inc
mov
sbb
xorb
sar
pop
popa
out
mov
arpl
dec
imul
add
push
mov
scas
sub
mov
adc
push
push
xchg
dec
jl
mov
pop
cs
movb
leave
adc
dec
test
int3
xchg
mov
mov
push
dec
xor
data16
xchg
in
adc
add
aad
mov
insl
lahf
inc
in
stos
push
notb
adc
fsubrl
dec
ds
sbb
cmp
and
movsb
and
pop
clc
mov
cmpsl
and
fdiv
mov
cli
pushf
test
fcmovnu
jmp
shrl
dec
imul
pop
push
in
pushf
and
loope
into
sbb
xchg
or
sbb
cmc
addr16
sbb
inc
inc
js
adc
and
xchg
jle
lods
fnstenv
lods
and
ret
adc
call
icebp
pop
dec
sub
xchg
lret
daa
lods
sahf
add
xchg
movl
sub
adc
loop
push
cwtl
xor
mov
aaa
or
jnp
push
cwtl
bound
imul
pop
les
rorl
movsl
in
cltd
clc
cmpsl
jmp
mov
pop
fstl
mov
lahf
int3
cmpsl
jne
imul
das
dec
mul
mov
lds
sahf
rcll
dec
jne
outsb
popa
mov
jbe
rol
sbb
sub
jp
addr16
ljmp
out
out
insl
pop
ret
adc
pop
push
cld
push
test
push
inc
and
ljmp
and
dec
bswap
inc
insb
into
movsl
movsb
mulb
in
cmp
mov
xor
push
leave
leave
shll
jnp
stos
mov
std
rorb
sub
imul
insb
int
inc
in
jg
je
cmp
lahf
inc
call
loop
mov
mov
clc
fnstcw
jbe
push
sub
cwtl
outsl
ficoms
imul
shll
xor
ja
insb
sti
fildll
sbb
cmp
mov
dec
or
cmpsb
push
and
jae
in
test
pop
pop
inc
sti
lcall
es
cwtl
sbb
movsb
xchg
fisubrs
or
sbb
nop
sub
inc
rcrb
mov
cmp
popl
and
jno
sub
adc
and
inc
add
mov
sahf
push
cmp
sub
test
stos
pushf
sbb
cld
pop
mov
sub
xchg
popa
insb
sbb
mov
mov
int3
cmovb
aam
stc
xchg
mov
loope
xchg
js
out
adc
xlat
test
int
xchg
dec
data16
fldl
out
adc
sub
ds
xor
inc
lds
push
iret
cmp
mov
into
xchg
popa
cmc
xor
popa
mov
mov
jbe
pop
enter
lock
mov
and
mov
in
test
inc
sbb
push
jnp
push
inc
dec
add
cltd
jle
lret
outsb
xchg
mov
cwtl
push
pop
outsb
push
enter
std
arpl
lea
xor
mov
ds
fnstcw
enter
jnp
std
or
xchg
jecxz
cmpsb
mov
mov
es
es
cld
sub
dec
sarl
push
mov
mov
imul
push
gs
scas
rclb
addr16
dec
popa
imul
mov
xchg
push
push
sar
dec
inc
icebp
mov
and
push
push
dec
mov
fdivr
jno
sbb
dec
in
pop
push
mov
stos
int3
in
pand
rol
scas
fadds
rcrb
decb
and
imul
push
push
test
clc
nop
mov
jg
sbbb
decl
push
inc
in
fcoms
push
jo
dec
xchg
fsubrl
xor
mov
fists
test
fadds
push
xchg
icebp
shl
inc
push
arpl
out
fldenv
repz
push
rorl
push
adc
lret
cmp
loopne
and
sbb
sahf
lods
mov
out
stos
xor
mov
enter
in
mov
adc
mov
enter
cltd
nop
rcrl
test
outsl
cmp
test
inc
and
js
cld
and
or
jmp
fs
pop
cmpb
pop
lahf
sub
loop
mov
ds
xor
xor
dec
pop
enter
adc
imul
sti
fs
mov
rep
decl
dec
xor
jl
push
sbb
add
dec
jnp
jno
sbb
sbb
sbb
push
mov
or
std
popf
push
xchg
insb
dec
jge
arpl
bound
push
fldt
mov
dec
sbb
es
sub
inc
mov
jg
xchg
mov
cmc
fdiv
vpcmpeqd
xlat
loopne
rorb
cmp
imul
adc
movsl
jns
pop
sub
sti
pop
int3
rcrl
mov
pop
dec
mov
in
dec
mov
fisttps
xchg
mov
xchg
xchg
sbb
pop
adc
cmp
xchg
pusha
mov
add
jl
aam
js
je
dec
lds
xchg
xchg
push
dec
mov
inc
cmp
inc
ss
xor
inc
mov
inc
scas
stc
dec
inc
jnp
negl
xchg
adc
cmp
mov
inc
pop
pop
dec
dec
insl
xlat
loop
mov
rorl
mov
and
es
dec
jno
clc
or
cmpb
sub
sbbl
rcrl
sarl
cmpb
sbb
es
daa
mov
mov
sub
int3
mov
repz
pop
jnp
pop
stos
hlt
adc
mov
stc
ret
lods
jle
adc
shl
jnp
fwait
cmpsb
pop
imul
cmp
fildll
into
sbb
cli
sub
push
test
aaa
test
push
aam
mov
adc
and
cmp
push
sbb
and
addr16
lcall
dec
in
and
jp
pop
push
icebp
xor
iret
mov
sbb
adc
fldcw
sbb
pop
bound
repnz
loope
push
cmpsl
xchg
in
mov
lds
insl
data16
push
btr
mov
mov
mov
hlt
call
es
ljmp
sub
sub
in
inc
push
cmp
jae
out
lds
es
mov
xor
sti
dec
xchg
scas
clc
mov
sbb
xchg
mov
xor
mov
pop
mov
and
andb
xchg
mov
iret
push
loopne
mov
and
addr16
inc
call
bnd
inc
cmp
mov
rcrl
out
xchg
sbb
repz
jge
cmp
push
or
fstpt
cmp
iret
imulb
mov
dec
loopne
cmc
mov
add
cmc
out
dec
hlt
out
cmp
scas
pop
xchg
mov
and
aad
push
std
dec
push
inc
dec
sub
sub
xchg
jp
mov
fnstsw
sbb
out
lock
imul
mov
repnz
adc
out
and
shl
mov
sub
adc
jmp
jle
xor
test
insb
xlat
xor
lsl
ret
out
inc
lods
lcall
xor
push
sbb
add
pushf
push
inc
subb
xchg
add
fwait
test
stos
movsl
cmp
push
repnz
push
mov
fs
jl
roll
sahf
scas
add
pushl
fwait
xchg
addr16
cli
jne
xchg
fst
notl
pop
fldl
or
pop
jecxz
mov
fiadds
test
jecxz
sub
int
push
lea
stos
jmp
jp
lods
cmp
xchg
cli
sahf
aam
std
pop
adc
scas
and
dec
jecxz
add
push
test
lahf
and
push
xor
sub
gs
leave
addr16
inc
mov
sti
in
inc
dec
pop
lea
out
inc
jno
sarb
rcr
call
jp
jle
jb
mov
dec
lods
iret
xor
inc
leave
clc
lock
xchg
addb
adc
push
lcall
mov
loop
dec
es
xor
sbbb
fsts
xchg
fs
jno
cmp
cmpsb
out
lock
or
mov
in
mov
dec
pop
in
shlb
xchg
mov
sub
je
aam
cmp
pop
sub
lods
aas
int3
shlb
sahf
fdivl
lods
test
dec
mov
push
imul
adc
aas
mov
add
inc
andl
fistl
and
push
jge
outsb
jnp
dec
testb
aam
addr16
dec
mov
xchg
dec
mov
call
jbe
cs
or
out
push
push
mov
or
inc
cmp
cmp
push
shll
movsl
sbb
dec
ss
adc
mov
fnstcw
push
dec
nop
pop
movsb
inc
jle
xchg
outsb
test
pop
lahf
adc
pop
cmp
xchg
xchg
ljmp
adc
adc
jbe
mov
lahf
and
imul
lret
jecxz
pop
out
mov
pushf
inc
popf
outsb
std
cmp
mov
pop
pop
xor
fldl
adc
pop
ret
jns
mov
fists
cmpsb
push
mov
push
aad
shrl
add
mov
sbb
loope
lcall
sbb
leave
adc
mov
cmp
jg
sbb
xor
es
xchg
fs
loope
xchg
test
std
movsl
mov
mov
bound
mov
outsb
addr16
push
repz
jnp
adc
scas
dec
shlb
push
in
push
lods
mov
mov
dec
in
je
and
in
out
jl
aad
xor
stos
out
movzbl
push
in
inc
xor
repnz
pop
push
ljmp
js
pop
xor
cmpsb
popf
fisttpll
xor
stc
out
mov
cld
sbb
pop
mov
hlt
ljmp
adc
hlt
xor
push
es
mov
mov
jle
push
adc
je
in
movsb
cmpsb
or
lret
insl
arpl
xor
and
push
pop
mov
cmp
xor
je
shll
push
out
adc
or
dec
add
ret
dec
xchg
movsl
repnz
shlb
clc
pusha
std
mov
pop
dec
xchg
data16
xor
fisttps
lea
inc
add
mov
in
fwait
sbb
push
daa
cmpsb
push
std
sub
xchg
push
adc
mov
lock
test
out
insl
in
lods
pushf
sub
rcrl
sub
sub
dec
push
in
pop
dec
xor
inc
hlt
scas
xchg
mov
cmp
xor
std
inc
icebp
js
xchg
scas
dec
nop
stos
xchg
sbb
push
push
cmpsb
loopne
add
and
fidivrl
dec
xchg
mov
iret
imul
push
inc
jbe
icebp
je
and
mov
dec
sti
and
and
mov
nop
cmpsl
jns
bound
ljmp
and
mov
push
sub
xchg
push
outsl
cmp
cmp
dec
fildl
lea
ret
shlb
imul
mov
stos
mov
push
in
cmp
mov
cmpl
lock
in
das
and
or
mov
pop
dec
xor
mov
leave
jo
fwait
out
ja
movsb
in
adc
fidivs
insb
leave
inc
adc
add
stc
fdivr
cltd
es
or
stc
cltd
sub
mov
notb
sahf
pop
iret
xor
iret
gs
jne
adc
in
inc
xchg
push
icebp
in
mov
scas
sub
fidivs
inc
xchg
repnz
cwtl
and
add
mov
and
call
test
mov
pop
inc
push
cmp
or
out
hlt
dec
std
popf
shrb
add
adc
jmp
xlat
jl
outsl
leave
repz
dec
imul
pop
out
pop
xorb
lods
add
and
rcl
adc
cmp
int
push
sbb
sbb
adc
cmp
or
test
sub
subb
scas
cld
icebp
jbe
and
push
inc
sbb
ds
and
aaa
jp
fnstsw
pop
dec
cs
xor
enter
repz
fimuls
xchg
pop
mov
push
or
cltd
mov
xor
push
popf
je
icebp
stos
mov
fisubs
es
jmp
add
sub
or
arpl
jle
cmp
xor
jne
lcall
jno
test
ljmp
cmpsb
xor
mov
xchg
add
cld
cld
and
imul
ret
arpl
sbb
into
jne
scas
xchg
sbb
jnp
ja
xchg
jg
outsb
xchg
js
ljmp
sub
mov
repnz
sbb
shll
or
sub
sbb
arpl
scas
outsl
jno
iret
imul
movsb
outsb
mov
xor
sub
pop
mov
pop
xchg
jg
out
mov
out
mov
xchg
and
test
les
xchg
cmpsb
adc
in
xchg
push
mov
daa
mov
mov
inc
int
xchg
shlb
or
and
in
xor
cld
xchg
jo
ss
jl
scas
push
xchg
dec
push
lcall
sub
dec
jbe
mov
push
insl
mov
imul
test
mov
loopne
stos
jp
ror
inc
inc
xchg
cmp
inc
fmuls
or
sub
in
cmp
mov
dec
sub
dec
xor
push
pop
mov
test
cmpsl
and
fdivrl
and
movsl
push
jb
fisubl
mov
pushf
push
dec
sbb
cmp
jnp
lahf
sbb
sbb
adc
push
pop
adc
push
aas
aam
adc
sub
mov
std
lods
push
fisttps
sub
fstps
jae
pusha
and
xor
sub
mov
mov
lret
notb
addr16
test
xor
mov
jne
sti
iret
xor
inc
outsb
cmp
repz
cmp
std
hlt
shll
cmp
mov
outsl
cmp
jge
cmp
in
and
mov
dec
scas
cmp
test
xchg
jo
jmp
pop
test
mov
adc
sbb
pop
iret
xchg
aam
add
mov
add
js
movsb
dec
iret
push
or
sbb
jp
lcall
mov
pop
enter
addl
jl
mov
or
add
mov
pop
adc
cmpsb
mulb
sbb
or
jns
mov
sub
out
inc
push
adc
ret
nop
sbb
test
adcb
xchg
and
es
sbb
dec
loope
add
and
lds
popa
xchg
out
xchg
scas
add
ljmp
add
mov
and
cli
pop
pop
into
add
aad
cwtl
cmp
iret
lcall
cmp
xchg
out
orb
gs
mov
mov
nop
loopne
pushl
rcr
push
cmp
mov
mov
loop
sub
jle
or
addb
test
xor
sbb
sbb
push
stc
iret
std
cmp
popa
sub
call
adc
mov
lods
mov
leave
iret
stos
fildl
fsub
enter
pop
xchg
fldenv
iret
adc
xchg
int3
xchg
cmp
in
pop
push
fadds
jnp
rcrb
and
mov
in
sub
pushf
dec
mov
pop
lret
imul
ds
cld
xor
cmpl
sub
fs
add
jae
and
scas
mov
insl
mov
arpl
mov
mov
jp
cs
and
lret
sbb
loop
or
frstor
aaa
es
jle
or
fidivrl
dec
jl
aaa
add
mov
faddl
out
adc
or
and
loopne
mull
lcall
ja
xchg
aas
lret
and
lahf
out
push
sbb
inc
mov
cmp
sar
push
outsb
ret
jecxz
jp
add
xchg
jo
popf
or
cmp
mov
arpl
fs
push
dec
xchg
gs
nop
mov
out
test
out
ljmp
mov
mov
inc
sub
lock
xlat
mov
push
or
sahf
mov
clc
mov
jnp
jge
bound
or
stc
ljmp
aas
adc
xchg
in
pop
mov
sbb
and
mov
jae
pushf
loope
mov
rcrb
cmpb
loop
aas
ljmp
int3
cmp
push
insb
jl
pop
add
fsts
push
push
or
dec
sub
cli
pop
inc
jae
das
and
cmp
mov
mov
fisttps
addr16
mov
dec
xchg
mov
fdivs
jp
pop
loope
lds
pop
cmp
sub
out
data16
popa
add
icebp
and
dec
xchg
dec
je
and
in
push
ret
ret
dec
fldt
aam
jo
jmp
push
jl
rcrb
lock
jmp
mov
test
sbb
arpl
push
sbb
push
mov
add
sbb
mov
mov
popf
in
pop
nop
mov
xor
dec
outsb
mov
sub
cli
inc
std
addr16
and
cwtl
sahf
int3
pop
push
outsb
cmp
cld
mov
and
stos
dec
les
push
push
imul
sbb
fdivrl
xchg
add
gs
scas
je
adc
mov
mull
rcrl
fbld
movsl
lods
sub
int
push
daa
out
jge
jmp
stc
cmp
lods
and
out
mov
stc
ljmp
ret
add
cmp
loop
mov
adc
mov
test
add
jmp
xchg
retw
loop
adc
mov
ret
and
xchg
jmp
mov
pop
pop
mov
xor
jae
jbe
ljmp
daa
push
pop
es
subb
dec
push
mov
es
fldcw
add
std
sub
pop
xchg
lds
inc
les
add
clc
or
cmp
popa
movsl
jmp
sbb
fildl
in
pusha
jae
aaa
mov
lea
iret
xor
aad
jge
and
cmp
test
aam
rolb
or
sub
sbb
mov
mull
xchg
dec
das
xlat
movsl
mov
push
aas
shld
les
insb
ret
rorb
dec
pop
dec
dec
cmp
mov
jno
or
lret
jo
xchg
mov
dec
push
bound
jo
adc
clc
adc
mov
loope
adc
push
pop
and
mov
xchg
icebp
into
sub
xor
add
adc
pop
push
and
popa
out
push
das
sbb
lods
addr16
aas
xchg
fsts
fimuls
jecxz
pop
testb
nop
iret
lods
aas
adc
sub
inc
stc
sub
test
jae
mov
jp
div
xchg
fld1
xchg
pop
stos
test
mov
outsb
jae
inc
dec
or
jns
cmpsb
adc
fs
cmp
ds
rcrl
add
cld
inc
cmc
pushf
push
xor
xchg
xchg
incl
inc
dec
int
mov
negb
clc
lret
enter
sbb
mov
sbb
xchg
sub
add
jns
mov
movsl
insl
xlat
scas
stos
insl
rcll
ss
jno
fiadds
out
adc
pusha
pop
imul
cmovae
jnp
iret
ret
dec
or
cwtl
fdivs
pop
cmp
mov
or
sbb
adc
ljmp
mov
xchg
nop
adc
xor
push
jl
add
push
pop
mov
push
in
sub
mov
pop
cwtl
cmp
inc
mov
mov
sub
xchg
ja
ret
push
inc
xor
pop
test
fcomi
jge
lods
loop
jno
push
les
das
xorl
fcomp
dec
stc
sub
fiadds
int
pop
into
xchg
sub
iret
or
mov
rcl
add
mov
push
pop
mov
notb
fmul
icebp
loope
mov
xchg
cmpl
das
xchg
pop
jne
jae
xchg
xor
rcrb
dec
lret
cmp
inc
ds
xlat
andb
inc
xor
ja
xor
stos
or
jl
cmpsb
es
pop
push
or
or
inc
inc
ret
dec
add
mov
cmp
call
xor
call
lahf
int
mov
imul
lahf
in
and
and
in
xor
sbb
aad
stos
add
mov
sbb
dec
out
ret
js
leave
mov
xchg
pushf
js
gs
push
movsb
mov
xor
dec
mov
ja
ljmp
jnp
mov
mov
out
add
inc
xchg
mov
cmp
jg
adc
movsb
stos
mov
pop
jmp
add
inc
push
inc
mov
iret
addb
mov
cmp
mov
dec
cmpsl
lahf
mov
fs
or
repnz
cwtl
ds
pop
pop
dec
jmp
repz
jmp
dec
jp
xchg
loop
jp
jb
mov
imul
adc
or
hlt
mov
in
fistpll
jae
stos
adc
repnz
lods
in
not
mov
lock
int3
pushf
xor
movsb
mov
xorb
pop
into
leave
repnz
or
xor
push
or
dec
pop
dec
jg
adc
mov
sub
pop
push
adc
dec
aaa
or
jmp
mov
int3
mov
leave
push
cmc
add
in
jg
pop
sbb
scas
in
cmp
lock
insb
mov
xor
imul
sbbb
sub
mov
mov
ret
loope
std
mov
lods
add
push
mov
or
lret
fmulp
call
or
insl
inc
jae
mov
or
mov
adc
cwtl
jg
ljmp
mov
std
fstl
fsubp
insb
idiv
cwtl
int
stos
sub
adc
pop
pop
outsl
and
sbb
inc
dec
sbb
mov
scas
sub
testb
pop
pop
lret
ljmp
jo
sub
pop
xor
mov
jbe
insl
addr16
xchg
out
hlt
pop
pop
test
pop
in
in
xchg
push
stos
das
fldenv
aaa
aam
addb
lahf
dec
test
mov
adc
scas
loope
out
clc
in
or
std
std
xor
lock
les
mov
mov
push
or
xor
gs
pop
mov
dec
popf
insb
mov
sub
iret
sahf
push
push
loope
xchg
or
loopne
mov
adcl
xor
dec
or
stos
dec
mov
pushf
notb
inc
xchg
lret
jne
fwait
jge
mov
scas
inc
fsubl
xor
and
call
mov
sbb
dec
cltd
and
test
jle
imul
out
xor
mov
mov
ljmp
test
and
cmpl
rclb
mov
jo
adc
loopne
lahf
aas
cmpsb
xlat
adc
in
sub
ret
mov
inc
sbb
popf
xchg
xchg
in
mov
lcall
std
sahf
cmp
mov
xor
dec
addb
xor
stos
lret
push
adc
add
dec
pop
inc
push
adc
and
subl
dec
mov
and
xchg
mov
sbb
inc
cmp
inc
mov
lods
push
pop
fdivr
cld
cmc
pusha
ud1
test
mov
les
imul
cmp
movsl
jg
movsl
cltd
push
stos
repz
lock
xchg
movb
loopne
popf
inc
mov
jae
int
adc
and
cwtl
adc
add
fisttpl
sbb
inc
out
mov
xchg
lods
pushf
inc
sbb
jo
cli
fdivs
xor
or
xchg
or
imulb
daa
jne
bnd
xor
out
pop
stos
sbb
int3
in
les
jmp
push
mov
push
lods
push
add
xchg
loop
pusha
lods
or
xor
mov
mov
push
and
xchg
sbb
addr16
jmp
movsb
out
push
lret
and
sbb
mov
push
scas
fmull
movups
or
xchg
and
sbb
pop
mov
aad
xor
or
test
in
sbb
jbe
in
xor
sarb
pop
pop
push
insl
test
push
jmp
in
and
jae
xor
loop
lret
dec
inc
cmp
mov
mov
adc
pusha
mov
outsl
dec
adc
inc
hlt
rcrb
int
lcall
cld
mov
test
and
loope
scas
sbb
gs
jnp
and
pushf
imul
outsb
xor
aas
jle
pop
mov
and
in
inc
fmull
mov
fmul
mov
cli
adc
inc
mov
and
push
les
mov
stc
roll
daa
add
sub
or
test
pop
push
fnsave
cmpsl
mov
pop
imul
push
mov
add
pop
dec
ss
ljmp
pop
sub
out
int
jne
negb
outsb
xlat
adc
add
push
and
fnstcw
repnz
sbb
xchg
js
stos
adc
in
subl
ficompl
paddsb
or
and
mov
xor
cmp
sti
insb
stos
sub
icebp
pop
fs
and
mov
dec
cmp
pop
ss
add
lock
cltd
fnstsw
fidivrs
pop
ljmp
sarl
jge
in
addr16
ja
pop
sbb
cwtl
arpl
mov
mov
mov
jo
mov
lods
and
movsb
xor
jns
je
shl
popf
hlt
shll
call
outsb
jbe
ds
pop
or
or
std
in
push
sti
imul
mov
stos
out
iret
jo
sbb
sub
scas
es
adc
int3
pushf
jnp
iret
fwait
xchg
jns
sub
dec
dec
lds
adc
dec
sbb
sub
xchg
mov
jo
out
jl
inc
push
fcmovb
jecxz
fildll
adc
lock
jnp
out
mov
repnz
jb
mov
dec
test
mov
imul
stos
bnd
push
or
adc
std
fidivs
enter
dec
push
test
bnd
or
cmp
pop
int
or
dec
bound
fldcw
out
int
call
xchg
mov
xlat
pop
loopne
jmp
sahf
or
lods
dec
xchg
arpl
mov
popl
es
inc
ja
cmpsb
push
test
pop
sbb
mov
pop
pushf
add
jmp
inc
add
mov
push
xchg
data16
sbbb
test
inc
cmpsl
jne
andl
out
divl
jge
cwtl
fisttpll
insl
stos
jl
or
mov
test
xor
ret
fcomps
mov
lcall
sbb
lret
push
cmpsb
insb
sti
jle
dec
xor
jno
fs
mov
pop
out
mov
mov
hlt
mov
mov
xchg
adc
adc
and
mov
sub
lret
cld
xor
and
test
inc
ret
xchg
sub
cmp
ljmp
enter
inc
fstps
out
sbb
shlb
js
mov
and
inc
or
push
push
adc
ret
shlb
sub
sbb
push
push
out
xlat
xorl
sbb
xor
out
sti
mov
or
stos
imul
fistpl
sbb
and
movsl
xchg
push
adc
inc
mov
out
xchg
xor
sarl
lods
push
pushf
scas
mov
jl
not
xor
lret
jl
and
out
in
add
in
movsb
xor
arpl
mov
sbb
mov
dec
sub
or
xor
out
xchg
sub
xchg
mov
add
xchg
or
cmp
xor
push
scas
popa
pop
lcall
mov
ss
lods
daa
xor
fldenv
inc
loope
adcb
lods
mov
mov
add
push
arpl
insb
or
mov
mov
cmp
test
stos
enter
repnz
outsl
push
hlt
int3
jg
movsl
adc
or
out
cmp
mov
jg
mov
dec
mov
mov
loopne
or
dec
ljmp
mov
cmpsb
imul
push
jl
nop
cmp
orb
cltd
imul
bswap
sub
rclb
jmp
and
imul
adc
imul
pop
and
nop
ficoml
xchg
clc
popa
leave
mov
pop
mov
xor
dec
test
jae
enter
cmc
fwait
jge
ds
xor
push
stos
js
mov
jno
mov
adc
enter
and
shr
and
fwait
mov
clc
pusha
in
lcall
sbb
inc
clc
inc
ja
xchg
clc
fsts
add
mov
std
loopne
adc
lea
stc
fdivs
xor
inc
jnp
pop
xor
mov
cs
packuswb
or
pushf
jae
or
push
or
xchg
cmpsl
cmc
inc
add
frstor
dec
dec
push
sti
mov
and
push
push
fwait
pop
or
mov
pop
mov
movb
mov
mov
xor
js
test
out
mov
or
jle
icebp
out
jle
push
pop
mov
lods
fsubrs
cmp
cmpsl
xchg
stc
and
xchg
adc
gs
test
mov
test
stos
int3
mov
mov
fnsave
fimuls
fsubrs
das
pop
ss
testl
cmpsl
mov
adc
sub
jnp
push
push
icebp
mov
ss
repz
mov
add
rorb
cmpsl
add
mov
ret
add
adc
pop
jae
dec
add
and
jnp
unpckhps
cltd
push
sahf
jg
cmp
in
cwtl
ret
imul
inc
mov
and
hlt
lods
pop
lahf
insl
cld
clc
mov
arpl
lods
sub
sub
fidivs
fucomi
jge
inc
ss
pop
xchg
test
repz
cmp
inc
xchg
dec
mov
out
in
arpl
outsl
sbb
xchg
mov
cmpsb
inc
fs
mov
ss
and
adc
fwait
push
inc
xor
pop
mov
call
pop
test
xchg
orb
jl
vxorps
dec
loop,pn
pop
inc
push
inc
lds
sbb
outsb
js
lods
rclb
arpl
nop
out
std
pop
xchg
scas
pop
xor
push
xlat
pop
ljmp
push
sbb
mov
pop
jbe
mov
iret
jmp
push
aam
sub
stos
enter
clc
icebp
mov
jmp
jno
inc
push
pop
add
leave
jb
into
lds
add
iret
shrl
adc
mov
and
leave
sub
loop
insl
sub
daa
jmp
mov
lods
cltd
and
aas
scas
cmp
jge
mov
jae
test
repnz
mov
add
mov
cmp
mov
ror
cmp
inc
cmpsl
sbb
mov
icebp
std
push
mov
movsl
add
nop
in
pusha
cmp
data16
je
stc
mov
sub
push
jns
in
jl
push
inc
add
aad
es
int3
xchg
push
or
or
insb
or
jbe
lock
jns
imulb
cmp
sarl
cmp
mov
sarb
pop
nop
mov
ljmp
push
lods
ss
push
adc
insl
cs
sub
push
into
pop
adc
sbb
sbb
cmp
adc
enter
not
push
mov
call
jle
push
mov
ret
cs
dec
mov
loop
xorb
pop
mov
cmp
push
sbb
pusha
repnz
xchg
mov
pop
xor
or
pop
cmp
pop
sarb
xchg
inc
call
insb
pop
out
jmp
push
pusha
test
test
adc
cmpsl
and
mov
in
pop
jb
inc
movsb
lea
add
popa
in
pop
lock
inc
movsl
mov
sbb
dec
into
xchg
iret
sti
gs
cmp
inc
xor
icebp
jmp
jno
pop
xchg
inc
out
in
dec
out
sar
int
xchg
mov
icebp
pusha
xor
jbe
xor
test
insb
xchg
sub
mov
inc
cwtl
jo
loope
cmp
xlat
xchg
push
stos
mov
adcb
repz
sub
add
jbe
and
mov
fimuls
cmp
je
rep
fwait
dec
gs
inc
lods
rorl
mov
aaa
add
mov
mov
pop
lods
mov
sub
pop
andl
cmpsl
call
sbb
dec
dec
lock
cmpl
out
sub
lcall
sbb
xchg
popf
sbb
jge
mov
sti
in
test
sbb
scas
test
pop
in
sti
frstor
mov
imul
adc
repnz
inc
insb
or
mov
aas
mov
ds
ror
shl
shrl
sub
popa
cld
sub
push
aad
and
test
cmp
add
cmp
xorb
movsb
sbb
cmp
in
std
cmp
dec
pop
add
and
cmc
or
cwtl
loope
fcmovnbe
fnstcw
jecxz
add
dec
je
lds
sahf
mov
imul
sti
xchg
dec
push
gs
ret
lods
push
mov
sub
cmp
test
cmp
dec
xchg
or
adc
pop
add
pop
add
cmp
cmp
cmp
mov
hlt
hlt
or
jb
pop
add
cmp
in
sub
xchg
jnp
mov
leave
dec
scas
cmp
lods
jae
xchg
lahf
not
out
rcll
xchg
and
fdivrl
xchg
fisttpll
std
xor
stc
inc
inc
pop
mov
xor
nop
xchg
xor
sbb
mov
dec
fimull
xchg
xchg
lock
je
push
es
jb
fs
mov
negl
nop
cli
inc
cmc
push
popf
sbb
mov
daa
xor
xchg
mov
mov
push
lahf
fisttps
mov
in
push
inc
jg
push
idivl
adc
fcmovbe
push
mov
test
popf
std
mov
adc
movb
sbb
push
adc
lea
pop
xchg
iret
pop
pop
mov
dec
sbb
mov
nop
addr16
imul
xchg
sbb
mov
add
xchg
push
xorl
jo
and
cld
cwtl
cvtpi2ps
pop
sbb
popf
mov
mov
mov
out
and
mov
jg
pop
lret
jmp
ds
cmc
xor
inc
add
sbb
ret
or
ret
jns
jp
dec
push
pop
or
mov
sbb
test
je
imul
sub
add
cmp
call
cld
subb
sar
arpl
stos
fadds
jmp
inc
inc
divb
add
mov
mov
outsb
lea
nop
fnstcw
gs
jnp
cmp
inc
ficoml
out
popf
inc
cmc
xor
pop
jnp
cmpsl
inc
cmp
dec
sbb
jnp
in
add
lods
fcmovne
and
push
in
imul
mov
dec
sbb
and
mov
xchg
xchg
fldz
mov
mov
orb
orl
imul
lcall
mov
test
fistps
and
xchg
ficomps
push
mov
imul
cs
cmpsb
ret
and
popf
fidivl
sti
xor
js
mov
cmpsl
xor
in
and
test
inc
movsb
js
dec
popa
sti
jo
ljmp
ljmp
pop
xchg
scas
mov
mov
addl
sar
aas
xchg
int3
sub
mov
pop
mov
pop
cmpsl
les
in
cmp
movsb
bound
ret
adc
xchg
push
push
mov
or
pushf
popf
mov
xchg
push
push
dec
sbb
jae
out
stos
rclb
jmp
es
dec
outsl
fisttpll
das
shlb
cmp
mov
lock
mov
imul
inc
insb
mov
iret
xor
sbb
loopne
lods
pop
fwait
xchg
testb
stc
push
pop
mov
addb
jnp
sub
cmp
into
aas
mov
xor
dec
jle
mov
xchg
lea
jo
loopne
out
call
icebp
ret
scas
fistpll
aaa
jp
addl
dec
pop
cmpsb
imul
jge
mov
push
rol
mov
adc
jne
ret
add
out
js
mov
loope
lcall
mov
shll
dec
es
lcall
mov
mov
pusha
fidivrs
fisubl
into
addr16
mov
jno
mov
mul
sbb
pop
mov
dec
add
sub
jl
mov
push
movd
or
cmc
popa
icebp
push
inc
mov
jl
ret
out
xor
sarl
test
int
and
mov
loop
movsl
ss
lahf
adc
sahf
pop
mov
call
pop
cld
movsl
scas
mov
jge
sbb
xor
aam
sbb
rcl
sub
sub
add
lock
xor
sub
inc
test
xchg
testl
or
int
adc
int
xlat
pop
jnp
adc
xor
cli
and
dec
jno
in
push
movq
aas
pushf
lds
notl
mov
jnp
cmp
loopne
jne
inc
ficoml
cltd
jno
out
or
cmp
adc
lods
movsb
and
jne
pop
loope
mov
xchg
cmp
cmpsb
mov
or
in
in
sar
into
popa
jno
fs
xor
jne
scas
inc
aas
cmp
rorl
out
mov
cmp
pop
sbb
mov
iret
cmpsb
aaa
test
insb
daa
fiaddl
stc
and
aaa
in
or
cmp
jno
fstl
cltd
or
mov
cmp
movsb
popf
cmp
and
push
push
insb
lock
mov
clc
jmp
pop
or
or
adc
in
inc
xor
aad
push
inc
clc
sahf
cmpl
jmp
jg
mov
dec
imul
stc
mov
mov
mov
aaa
cld
testb
mov
ret
fdivl
rolb
decb
jns
repnz
sub
xchg
out
pop
je
cli
mov
push
push
jae
das
mov
stos
pop
sti
sub
jo
movsl
mov
loope
sub
inc
pop
push
rcr
inc
and
loop
xchg
orl
sarb
mov
adc
adc
leave
sbb
out
pop
adc
xor
jns
hlt
jne
adc
cmpsl
push
jp
das
lcall
int
addr16
add
cmc
ds
push
inc
daa
add
ret
lods
sbb
daa
jp
xchg
xor
cmc
mov
pop
jae
add
insb
pop
rol
test
xor
sub
mov
les
stos
insl
xchg
mov
dec
leave
sub
movsl
push
outsb
aam
pushf
xchg
fxch
test
pop
nopl
jae
pop
adc
popa
adc
xchg
adc
jae
sub
pop
sub
out
cmp
mov
stos
push
andl
inc
push
pop
sbb
mov
jb
iret
mov
cmp
in
fisubrs
orl
dec
inc
mov
mov
arpl
in
xchg
stos
in
xor
ja
jp
dec
inc
std
insl
mov
fninit
push
adc
xor
pop
mov
aam
mov
rolb
mov
and
dec
arpl
les
inc
mov
xor
cmc
fdivs
inc
popa
pushf
stos
push
sub
loope
scas
jo
shll
inc
out
imul
mulb
jg
pop
xor
mulb
xchg
cli
cmp
popf
sbb
les
adc
stc
aaa
xchg
cmpsl
clc
enter
addl
lahf
and
out
test
scas
push
or
jno,pt
ficoml
mov
cmp
arpl
stos
test
pop
mov
repnz
addr16
add
pop
gs
ret
sub
sbb
in
outsb
gs
mov
adc
xchg
outsl
cmpsb
cmc
mov
imul
stos
fs
inc
out
fadds
pslld
lods
negb
sbb
stos
jns
in
cwtl
pop
lret
sub
add
mov
gs
jge
push
add
cmpsb
shlb
insb
xchg
repz
cmp
and
fld1
jg
cs
jmp
jmp
and
sbb
push
add
in
idivb
iret
jne
jmp
repnz
xchg
push
les
push
inc
jb
add
add
xlat
xchg
adc
aad
arpl
cmp
push
or
mov
jae
pop
pop
dec
mov
movsb
out
ljmp
nop
mov
sub
dec
jns
pop
xchg
sub
push
and
jbe
lods
or
arpl
cmc
jle
mov
sti
shrb
mov
xchg
fwait
pushf
ss
daa
xchg
lea
bnd
mov
pop
sub
int3
xchg
push
cmp
inc
add
ficoms
add
insb
loopne
pushf
adc
negl
hlt
pop
pop
xorb
add
addr16
xchg
or
in
adc
xor
sti
ljmp
sub
xchg
dec
lahf
pop
daa
pop
adc
jno
pop
push
aaa
dec
jmp
pop
xchg
loope
aas
mov
int
in
mov
push
ds
mov
mov
mov
pusha
mov
flds
cmp
adc
adc
push
callw
ficoml
cs
or
incl
xchg
add
adc
test
popa
enter
decb
ror
cltd
mov
push
lahf
mov
dec
shll
es
push
sbb
leave
test
adc
xlat
repnz
adc
sbb
shlb
pop
adc
ja
loopne
xchg
daa
adc
adc
xor
pop
in
xchg
adc
pop
jb
dec
mov
aad
xor
pop
mov
adc
movsl
int3
and
adc
dec
add
ret
lds
cmpl
loop
cwtl
test
js
adcb
jno,pt
sbb
enter
fsincos
test
or
int3
xor
pusha
call
lret
nop
cmp
aad
xor
sbb
jmp
imul
icebp
lds
cmp
fnstcw
xchg
shll
lock
xchg
jg
xor
movl
enter
test
ss
roll
lods
data16
enter
inc
hlt
push
mov
mov
push
outsb
cmp
mov
icebp
xlat
lock
outsb
and
dec
inc
mov
cmp
mov
lea
mov
mov
fwait
and
add
push
push
lret
add
mov
inc
cmp
or
pop
cmp
les
loope
jecxz
mov
and
adc
pop
sub
or
xor
out
mov
test
pop
arpl
lods
dec
les
mov
mov
push
adc
inc
xchg
adc
push
lret
jbe
jo
xor
inc
inc
jle
pop
cmp
pop
out
cs
jl
pop
leave
loop
rol
cmpsl
loop
push
cs
xor
sub
mov
stos
fistpll
insl
mov
ja
inc
push
jp
lods
call
inc
cmp
scas
push
fwait
sbb
mov
shrb
mov
into
mov
movsb
cmp
or
sub
cmc
dec
adc
rorb
adc
add
sub
cmpsl
adc
pushf
aas
aam
mov
sub
jbe
jg
cmpsl
int3
dec
and
filds
cmpl
cvtps2pd
in
xchg
icebp
push
lds
dec
fdivrl
lock
fisttpll
arpl
add
push
arpl
push
nop
cli
mov
push
xchg
aad
clc
sub
push
mov
scas
iret
add
add
inc
outsl
insl
stc
mov
int
fadds
pushf
jg
fldl
cmpsl
push
daa
mov
mov
add
or
dec
pop
mov
sub
cmp
fistl
mov
lds
add
sbb
movsb
enter
lcall
cltd
xchg
ds
mov
sub
or
mov
scas
sbb
jmp
jmp
loopne
push
loopne
adc
pusha
rcrl
les
jmp
loopne
pushf
dec
dec
or
insb
fadds
push
and
jb
push
ret
mov
xchg
lahf
push
stc
mov
stos
dec
cmpsb
loopne
ds
fisubs
fildl
xor
cwtl
in
pop
imul
pop
lret
mov
xchg
ja
fnstcw
cwtl
mov
pop
sub
adc
into
aaa
pop
movq
and
dec
loopnew
mov
loop
movb
dec
jecxz
pop
stos
cmc
push
gs
or
pop
xor
loopne
dec
stos
mov
or
loopne
jp
rcrl
jne
adcb
jo
scas
in
mov
fsub
test
call
imulb
lret
jnp
arpl
loopne
mov
mov
cld
jge
loope
xchg
aam
mov
ret
dec
jp
icebp
inc
rolb
and
cmp
inc
loop
mov
cmp
lods
sub
sub
imul
mov
stc
pop
mov
arpl
enter
push
imul
pop
pushf
cmp
and
and
mov
movsl
sbb
dec
arpl
cld
pop
and
mov
push
aad
sub
cwtl
pop
fildll
imul
cli
cmc
xchg
out
sub
pop
push
add
test
dec
push
mov
inc
dec
loopne
lret
int3
mov
dec
add
push
lretw
lods
orb
mov
cmp
fildll
pop
inc
lahf
arpl
clc
mov
xorl
mov
add
or
or
jecxz
test
sbb
cmpsl
lret
cmp
daa
xor
in
mov
push
jg
fnsave
add
js
aaa
and
mov
ljmp
adc
scas
mov
xchg
into
scas
xchg
mov
xchg
in
inc
popf
mov
popf
xor
fisubrs
mov
xor
clc
mov
fcoms
cmp
inc
mov
fldenv
lret
cmp
mov
sarl
sub
scas
add
xchg
mov
loop
dec
lock
loope
fsubs
fmul
fistl
add
xchg
rclb
daa
adc
sbb
jl
mov
pop
and
aaa
push
fstl
jae
xchg
mov
lcall
popf
add
xor
fcmovb
stos
jp
jg
mov
into
iret
fidivl
mov
fists
cli
jns
daa
pop
mov
lcall
iret
and
fistpll
push
dec
adc
xorb
jb
mov
or
mov
hlt
mov
in
pop
mov
push
imul
jne
outsb
jae
push
mov
mov
fwait
in
cmpsb
xchg
lds
outsl
ja
int3
aam
mov
mov
test
sbb
sbb
xor
mov
xor
mov
mov
fwait
loopne
push
push
mov
fs
push
repnz
fwait
dec
dec
das
les
popa
popf
jnp
jge
out
or
shrl
arpl
mov
shlb
inc
sbb
jmp
lret
cli
js
xchg
movsb
push
fstl
pushf
cwtl
pop
out
popf
add
popf
inc
mov
fdivrl
int
mov
mov
andl
inc
push
push
gs
cmpsb
clc
push
add
cs
sub
sub
jl
mov
sub
dec
adc
mov
mov
insl
outsl
xor
jno
xlat
insb
out
xchg
mov
shlb
movsb
mov
inc
into
mov
clc
lahf
inc
and
test
inc
or
mov
and
test
sti
bnd
shlb
dec
push
inc
inc
sbb
mov
and
inc
xchg
mov
movsl
iret
mov
scas
adc
add
or
jge
mov
dec
insl
mov
push
pop
pop
xchg
pop
push
xchg
xchg
movsl
dec
movsl
clc
pop
push
inc
fmul
cld
call
movsb
adc
out
out
arpl
popa
stos
ss
iret
pusha
and
sbb
jns
pop
and
addr16
in
inc
mov
dec
add
repz
lock
xchg
ret
pop
outsb
testl
dec
inc
lods
lahf
add
fsub
push
mov
pop
sbb
in
out
jge
lock
push
jae
lods
push
ljmp
loopne
fwait
aas
jae
gs
outsb
loopne
or
pop
fistpl
jmp
in
out
ret
mov
and
cli
xchg
ja
mov
jo
mov
add
sahf
outsb
pop
arpl
mov
std
pusha
mov
fldcw
inc
or
scas
mov
sbb
fidivl
subb
addl
mov
mov
xor
rep
push
loope
inc
mov
ror
out
loopne
adc
sub
mov
daa
inc
popa
mov
sub
jns
push
or
or
mov
scas
mov
sbb
and
fadds
rep
and
fiaddl
repnz
clc
out
nop
icebp
js
xchg
xchg
dec
jecxz
and
mov
mov
or
mov
lahf
push
lds
mov
scas
inc
bound
insb
jno
push
sub
xchg
mov
fisubl
cmp
loope
inc
iret
pop
loope
mov
stc
push
pop
das
xchg
cmp
xchg
outsb
sbb
sbb
xor
mov
ret
pop
clc
sbb
xchg
inc
fisttpl
sbb
mov
rcrl
sbb
leave
lret
pop
and
add
pushf
enter
les
fs
jecxz
out
mov
mov
fdivrp
adc
and
scas
mov
aaa
and
mov
push
mov
or
adc
fimull
clc
inc
sub
pop
movsb
adc
mov
mov
dec
lods
addr16
daa
mov
leave
push
fldl
hlt
inc
daa
or
incl
adc
or
jl
or
int3
sbb
mov
jns
insl
outsl
mov
inc
int
jg
cmp
push
mov
push
and
adc
and
out
push
jmp
or
or
add
dec
push
outsb
es
mov
or
sbb
mov
and
jg
xorl
data16
rorl
add
pop
mov
mov
into
scas
mov
xor
push
inc
jg
add
pop
mov
mov
mov
push
pop
repz
movsl
jle
add
mov
dec
hlt
mov
or
clc
pop
mov
hlt
push
add
rcl
xchg
cmp
pop
inc
hlt
outsb
in
mov
out
lahf
and
mov
mov
psllq
or
int
mov
int
test
mov
xor
shrl
scas
shr
cwtl
jp
dec
xchg
mov
adc
xchg
in
cmp
movsb
inc
ret
movsb
ror
mov
mov
mov
cmpb
mov
and
mov
mov
ret
insb
mov
sahf
pushf
sbb
pusha
jne
sbb
int3
add
mov
test
out
pop
in
push
push
sahf
out
sub
pop
mov
pop
mov
outsb
arpl
xchg
arpl
sahf
ds
jns
sbb
mov
les
sbb
mov
mov
sahf
xor
or
loop
lock
rorl
mov
pop
adc
cmp
lret
mov
pop
jmp
scas
or
inc
cmp
adc
repnz
imul
add
cwtl
mov
ljmp
std
out
out
pop
ficoms
imul
into
or
loop
fsubrl
pop
pusha
and
sarl
xor
mov
push
call
jge
dec
popa
rcrb
out
mov
scas
inc
sbb
test
pop
sub
scas
or
int
mov
dec
imul
inc
fldenv
or
jmp
scas
stos
fcmovne
push
mov
or
sub
lret
xor
mov
mov
shr
nop
xor
add
imul
and
push
mov
xlat
nop
loope
lock
add
add
lret
mov
mov
cmp
or
inc
cwtl
mov
pop
enter
out
jecxz
ljmp
pop
fdivrs
ljmp
jge
adc
push
push
xor
add
push
dec
dec
cld
mul
dec
jmp
mov
fnstenv
dec
add
jl
aad
hlt
shl
lds
xlat
aas
pop
sub
jnp
add
cmp
xchg
mov
dec
clc
fwait
js
lods
jmp
pop
fimull
loope
lcall
sub
mov
loop
fwait
data16
daa
inc
sbb
sub
and
icebp
xor
cmp
jecxz
repz
lock
cmpl
popf
pop
fildl
fdivr
mov
sbb
out
fcmovnbe
fadds
and
insl
dec
out
pop
lock
out
xchg
jnp
dec
sbb
mov
add
mov
enter
loope
sti
xchg
cltd
je
sbbl
add
and
adc
loop
pop
xchg
shlb
cmp
sbb
sbb
loop
mov
addr16
ficoml
cmpsl
and
lods
push
sbb
jmp
ja
or
jmp
xchg
and
mov
mov
jbe
xchg
adc
pop
mov
or
dec
shl
lcall
xor
pop
dec
sub
test
mov
in
outsb
jne
insb
inc
and
fnsave
cmp
test
test
cmc
xchg
pop
mov
xchg
in
dec
insl
sahf
xchg
xor
inc
push
daa
les
inc
aad
jb
sbb
adc
dec
dec
mov
aaa
jmp
sub
xor
xor
dec
call
sbb
add
call
leave
clc
bound
inc
sbb
cmp
add
mov
mov
dec
cmp
sub
inc
ret
pop
addr16
xchg
adc
sbb
jl
ret
rcrb
jl
loop
jbe
popf
sub
lret
or
rcrb
ja
mov
or
dec
mov
sbb
pushl
and
pop
sbb
scas
jg
lods
fadds
insb
mov
pop
stc
and
insb
push
out
and
and
inc
mov
ja
dec
fisubs
xor
fildll
out
lret
inc
mov
xchg
mov
test
mov
ljmp
jo
sub
outsb
mov
push
push
scas
or
fidivrl
dec
fcompl
jge
fstpt
jb
pop
mov
jnp
mov
xchg
add
lret
into
outsl
xchg
imull
jbe
ret
insb
adc
or
fistpl
push
mov
pushf
or
outsl
data16
insb
divb
out
popf
xchg
scas
out
and
cmpl
data16
jne
or
dec
ret
cs
ljmp
mov
xchg
aaa
scas
jbe
sub
mov
repnz
add
in
cmp
aad
inc
out
xchg
test
std
mov
jp
insb
scas
push
les
push
shll
jecxz
pop
cli
mov
dec
push
scas
fstl
ror
mov
cld
inc
mov
movsl
mov
mov
jmp
outsl
mov
stos
xor
push
lds
mov
sub
aas
sbb
js
inc
sub
rcrb
push
pop
mov
jle
xchg
xlat
mov
pusha
sbb
mov
dec
jno
div
push
jbe
ret
lds
adc
mov
jno
mov
sbb
adc
add
or
pop
mov
shl
mov
pop
stos
bound
notl
lods
mov
sbb
dec
movsb
adc
repnz
jnp
hlt
cmpsb
stos
into
jmp
jge
mov
pop
popa
mov
push
inc
test
adc
add
test
mov
or
cs
sahf
in
fldl
fiaddl
stos
mov
js
data16
sub
add
insb
and
push
clc
and
mov
in
push
in
test
fisttpl
insl
scas
fldl
test
scas
scas
sub
or
ret
xchg
out
daa
lds
dec
cli
mov
leave
inc
sub
inc
push
jmp
es
mov
mov
or
xchg
fldt
inc
cmpsb
aam
dec
adc
rolb
push
xlat
mov
sbb
xchg
sbb
shrl
jno
movsl
push
xchg
popa
cmc
lock
out
jg
xchg
xchg
repnz
xor
push
add
adc
bound
pop
inc
sbb
popf
into
push
inc
and
and
clc
jae
fnstsw
add
push
cs
push
js
mov
mov
mov
repnz
pop
lret
xor
cmp
xor
fiadds
mov
pusha
jl
mov
cli
mov
iret
mov
test
dec
mov
pop
pop
cli
push
cmp
push
daa
xchg
dec
jle
repnz
mov
and
int
inc
lret
ret
push
lods
sbb
into
cmc
sub
call
sub
fistpll
iret
int
repz
push
gs
addl
add
push
and
int
mov
xchg
push
insb
mov
sub
insl
pop
push
hlt
arpl
cmpsl
cmpsl
sti
shrb
dec
lods
push
push
inc
shl
sub
pop
add
ds
xor
ss
test
jge
or
dec
subb
inc
xchg
adc
xchg
or
daa
mov
inc
daa
push
sti
sub
mov
mov
xchg
lahf
nop
mov
mov
imul
pop
inc
fwait
push
data16
sti
sub
jne
clc
icebp
pop
repnz
sarb
insb
aad
outsl
testl
jne
mov
fiadds
mov
sbb
popa
xchg
imul
sub
outsl
and
push
mov
pop
mov
and
ret
fists
mov
in
data16
lea
sbb
adc
mov
mov
jbe
xchg
pop
ljmp
js
jb
cmp
out
scas
mov
push
dec
cmpps
inc
add
dec
fildll
jno
out
je
mov
add
in
mov
sti
lea
cmp
lds
in
adc
aad
pop
cs
cld
xchg
jnp
lahf
jae
ljmp
push
jg
jge
sbb
sub
push
dec
test
pop
cmpb
out
add
xchg
jae
adc
ficoms
jecxz
mov
mov
and
shlb
stc
mov
push
inc
arpl
mov
pop
add
imul
or
jb
cmc
cltd
frstor
dec
std
mov
sub
sbb
xchg
mov
fsubs
add
add
xchg
decb
js
sbb
in
dec
pusha
std
sbb
jmp
mov
xchg
add
or
cmc
pop
and
cmp
mov
sahf
jmp
fs
imul
ja
jle
in
inc
jl
push
fwait
dec
fisttpll
call
dec
mov
js
cltd
mov
sbb
rcrb
mov
sbb
sbb
pop
inc
mov
pop
fs
mov
jno
and
xchg
divl
sub
adc
outsb
push
leave
push
shll
and
fisubl
outsb
push
xchg
mov
sub
cmpsb
cs
int
pop
add
enter
mov
fs
jecxz
movl
adc
inc
jae
repz
mov
dec
xlat
les
push
jno
int
pop
sub
mov
lahf
add
mov
repnz
leave
in
xorl
add
pop
mov
inc
mov
iret
adc
nop
or
or
js
decl
clc
push
sti
test
mov
lds
inc
sub
bound
mov
adc
lahf
lret
ja
dec
or
push
movsl
mov
xchg
or
jb
push
cmp
loop
cmp
aad
mov
push
or
out
into
cmp
hlt
mov
push
call
cmp
push
int
jecxz,pt
sub
fwait
lea
cmp
ss
clc
cmp
rclb
jae
sub
sub
push
ds
sbb
pop
das
cltd
rcl
push
mov
mov
jae
add
std
adc
scas
push
pop
pop
adc
lods
in
inc
test
jb
inc
cwtl
cwtl
mov
mov
adc
nop
xor
jb
adc
call
xorb
lds
gs
and
xchg
pop
pop
fwait
aas
jl
lds
lods
lock
sub
cmp
mov
je
mov
lock
arpl
add
dec
sahf
test
std
fsubs
add
push
push
xchg
std
cld
sbb
cwtl
pop
dec
mov
movsb
sub
inc
in
pop
xchg
int3
fistl
xchg
nop
jbe
adc
dec
mov
inc
mov
ret
test
jp
adc
sub
inc
enter
xchg
pmullw
test
aaa
sahf
ds
test
pop
das
push
jne
push
pushf
mov
sub
pop
push
movswl
rorb
fdiv
or
add
ds
into
xchg
jnp
testb
add
push
addb
mov
popa
sbb
sub
jmp
dec
push
js
push
sahf
jmp
insl
push
outsl
mov
inc
push
sbb
mov
push
push
xchg
push
inc
aad
dec
push
lea
js
pop
mov
out
pop
je
xchg
xchg
orl
mov
inc
jmp
call
jge
and
pusha
and
add
addr16
or
je
pop
and
and
scas
push
imulb
add
mov
ret
dec
rolb
push
or
test
jg
adcb
mov
lret
aas
lods
xchg
mov
pop
dec
add
lcall
dec
rcr
dec
jns
mov
insb
nop
ficomps
aaa
inc
nop
inc
cmpsl
mov
add
add
mov
mov
xchg
mov
jbe
xchg
dec
mov
mov
push
jnp
stc
pop
pop
hlt
nop
cmp
sbb
testb
js
mov
pop
mov
arpl
je
in
or
cmp
jnp
cmpsb
push
outsb
cmp
in
div
mov
mov
inc
dec
int
push
iret
and
add
add
jns
dec
mov
pop
test
inc
je
adc
dec
add
push
mov
sub
fstl
xorb
gs
dec
int
aad
cmp
mov
call
add
aas
dec
negb
pushf
or
sub
pop
dec
not
cmovg
xchg
adc
mov
das
mov
xchg
mov
and
fisubrl
xchg
xchg
xchg
mov
aas
shll
fstl
xchg
aas
xlat
push
int3
stos
arpl
xchg
stos
xchg
rcrl
jb
xchg
add
push
jno
gs
lods
sbb
add
mov
jp
lcall
fwait
jne
cmp
add
mov
jmp
shr
stos
leave
pushf
repnz
sbb
adc
adcb
enter
xor
xchg
nop
lret
fldpi
push
fistpll
rcr
insb
xchg
das
test
imul
xor
into
cs
call
jne
mov
adc
scas
test
xchg
fwait
mov
repnz
xchg
sbb
rclb
push
adc
arpl
mov
inc
adc
xchg
adc
rorl
ljmp
dec
pop
mov
jb
sbb
adc
in
dec
lcall
cmpsl
ljmp
and
mov
pop
scas
adcl
orb
sbb
xchg
sub
dec
insl
mov
gs
in
pop
fldenv
mov
lods
fdivl
addr16
cmc
jmp
lock
mov
push
jns
sti
jae
push
mov
xor
enter
pop
inc
lret
in
dec
mov
add
dec
jl
clc
pop
movsb
sti
xchg
pop
cwtl
lret
adc
arpl
clc
insb
jnp
imulb
icebp
push
xlat
sti
mov
aas
cli
test
sbb
xchg
push
inc
repz
sti
loope
imull
xchg
or
add
jp
sbb
adc
icebp
or
mov
mov
call
push
adc
pop
xor
dec
mov
dec
add
notb
out
xchg
fisubl
cmp
sub
scas
jl
push
lcall
jecxz
jo
fdivrs
xor
dec
int3
inc
das
inc
cmpsb
icebp
xor
out
mov
adc
addr16
dec
stc
sub
mov
ja
and
or
inc
rcrb
lock
inc
cmpl
mov
adc
scas
jl
negl
sbb
pop
adc
imul
add
pusha
push
cmc
dec
int3
in
hlt
add
push
cmp
sbb
xchg
mov
jno
sbb
leave
pop
repz
out
sub
or
aad
jecxz
cmp
inc
shl
ljmp
xchg
sub
sub
mov
fs
stos
dec
arpl
inc
jmp
jne
or
mov
jge
push
sahf
push
sbb
jmp
xchg
fwait
out
andl
adcb
test
jl
lods
gs
adc
in
add
xor
ljmp
jno
or
ret
fmull
xor
data16
imul
xchg
inc
dec
and
sub
or
mov
xor
sarl
push
filds
push
xor
aas
jle
pop
push
stc
ret
pop
cld
imul
sub
loop
dec
sti
outsl
adc
lods
fimull
xor
lret
aas
mov
pop
lahf
aaa
mov
bound
inc
mov
jp
push
mov
shll
mov
movsl
jecxz
dec
add
mov
xor
jns
in
fwait
ljmp
xor
fsubrl
stc
into
inc
dec
jle
fsin
pop
push
and
jp
lret
push
and
pop
lahf
mov
out
xchg
in
cmpl
pop
or
add
bound
loop
cmp
mov
push
mov
xchg
cmp
out
xchg
mov
xchg
arpl
test
ret
sub
mov
loop
call
cmp
xchg
test
inc
roll
sbb
jecxz
adc
and
sub
enter
pop
inc
xor
lock
insb
sbb
pushf
mov
pusha
jae
push
les
cmpsb
xchg
push
jp
add
adc
mov
push
popa
lcall
test
mov
je
sbb
imul
dec
sbb
ljmp
or
movsb
out
lods
outsl
jl
fldcw
mov
push
std
cmpsb
push
push
push
enter
jne
mov
out
inc
outsb
addr16
addr16
call
or
shll
je
xchg
fwait
es
sbb
lahf
enter
xor
movsb
aas
xchg
push
repz
fwait
mov
push
jbe
cmp
int3
sub
popa
mov
cld
dec
rclb
lea
mov
sbb
sub
pop
mov
pushf
mov
hlt
xor
dec
adc
add
cmp
or
idivl
out
xchg
cld
lods
enter
xchg
cli
popa
clc
movd
ret
mulb
repz
sbb
js
push
and
jnp
sbb
dec
cli
aam
dec
repz
mov
iret
movsb
ss
mov
fldcw
outsl
dec
sub
mov
insb
fldcw
sbb
popf
and
dec
into
mulb
dec
loop
jns
and
inc
mov
in
popl
fcmovne
jecxz
xor
scas
lcall
stos
push
cwtl
or
xchg
pop
clc
xor
inc
dec
push
push
jb
mov
lret
loop
repnz
push
shr
cmp
inc
and
fmulp
daa
or
cmpsl
inc
pop
std
insl
jp
cs
ja
adc
lods
out
sub
call
movsl
pop
push
fstl
call
sub
movsb
xor
xchg
add
loop
lock
pop
rol
dec
retw
enter
inc
inc
push
ja
pop
push
push
arpl
scas
or
fmull
scas
or
mov
fwait
bound
cmp
bound
cltd
mov
in
hlt
int
sub
in
inc
jo
pop
cmpsb
fbstp
repnz
cmp
mov
divb
and
mov
les
adc
rol
sbb
xchg
adc
push
dec
outsl
xchg
jae
xchg
or
test
xchg
dec
push
pushf
mov
clc
dec
outsb
pop
rcll
add
aaa
loop
sahf
mov
pop
xor
test
subb
mov
test
or
daa
out
dec
hlt
stc
add
push
cmpl
jb
out
lods
pop
or
mov
loopne
daa
push
ja
xlat
or
loopne
and
movsl
add
xchg
cmpb
ja
loope
push
pop
or
or
cltd
push
sbb
mov
or
sub
lock
and
fwait
pusha
push
mov
mov
pop
gs
dec
cli
movsb
push
je
mov
mov
cmp
mov
lahf
pop
pop
outsl
test
jmp
das
inc
dec
lds
icebp
stos
pop
shl
repnz
xlat
ja
cltd
dec
jbe
sahf
lods
xor
dec
loope
xchg
lret
ret
lret
xor
cmp
dec
mov
xor
fwait
sbb
into
loop
dec
scas
outsl
loopne
divb
and
fsts
pusha
insb
xchg
lahf
pop
fldl
aas
and
push
xor
cmp
sahf
hlt
pop
dec
mov
sbb
mov
test
dec
mov
sbb
subb
lods
cwtl
sbb
or
mov
jne
dec
push
in
xor
xchg
pushf
insl
fldt
addr16
mov
sub
test
out
fstpl
adc
pop
in
mov
rorb
in
push
test
sbb
rcrb
outsb
sbb
inc
push
mov
in
sbb
out
aas
mov
bound
loop
and
fdivrs
add
and
dec
stc
xchg
cmpsl
clc
imul
mov
cli
mov
std
xchg
pop
test
push
and
mov
push
and
lods
mov
pop
sub
aaa
dec
ret
dec
fmuls
int
out
dec
pop
sti
jns
leave
pop
in
mov
push
mov
and
pop
testb
stos
sarb
aad
popa
push
adc
xor
sbb
das
sub
and
inc
mov
fwait
addr16
aas
in
sbb
inc
jae
sar
int
jns
push
int3
jo
sbb
push
sahf
xor
cmpsb
mov
stos
in
xchg
inc
scas
out
in
sub
gs
jno
pushf
testb
pop
sub
into
stos
mov
cltd
leave
inc
sub
inc
cmp
cmpsl
cwtl
fmulp
dec
or
es
out
jge
lds
repz
xor
sbb
and
pusha
push
cltd
sbb
fsubrs
bound
mov
add
xrelease
xchg
and
sub
mov
or
nop
mov
lock
pop
push
sub
cmp
cwtl
xchg
test
jp
clc
les
insl
jecxz
mov
sarl
outsl
adc
cmp
push
dec
and
mov
clc
jle
xchg
cmp
stc
aad
js
jmp
lods
enter
cmp
inc
adc
mov
cmp
aam
jp
mov
add
inc
push
scas
mov
ret
mov
ljmp
mov
subb
filds
cwtl
repz
xor
adc
das
pusha
jne
xchg
repnz
dec
loopne
pop
ds
xchg
imul
and
ljmp
push
mov
fsubp
jns
clc
push
xadd
shlb
iret
add
test
push
lret
aaa
insl
cmp
daa
or
orb
dec
ret
pop
or
loop
mov
jmp
dec
or
sbb
cmp
lea
mov
in
xchg
lods
sbb
and
or
hlt
and
inc
or
push
or
xchg
hlt
mov
add
enter
cli
in
jg
sub
mov
daa
xchg
mov
push
imul
xor
adc
push
lret
push
jle
in
xchg
int3
enter
insl
xlat
xor
das
mov
scas
cmp
mov
outsb
mov
sub
sarl
hlt
push
jo
and
lods
fucom
cli
test
stc
sbb
mov
cli
es
in
push
shrb
pop
mov
leave
loope
imul
out
cwtl
push
jne
rcrl
ss
lods
dec
jae
jne
inc
dec
jmp
dec
dec
call
js
cltd
mov
mov
enter
lock
loope
jl
add
xor
cmpb
sub
inc
pop
fcmovne
xor
cs
imul
inc
leave
lahf
xlat
fadds
mov
sub
daa
fsubp
sub
adc
sbb
nop
inc
addr16
hlt
and
mov
and
xchg
adc
mov
mov
in
xor
mov
dec
cmp
inc
inc
in
lods
hlt
dec
inc
add
jbe
test
sub
lods
cmpsl
or
cmc
adc
push
fsubs
fstpl
out
leave
push
or
lahf
cmp
add
mov
fdivp
scas
dec
mov
mov
add
outsl
popf
sub
out
stos
into
movsl
lahf
push
call
adc
mov
lock
lods
popa
lcall
fwait
inc
out
inc
mov
adc
fnstcw
fdivrs
push
dec
repz
int3
stc
jbe
cld
imul
mov
pusha
dec
or
dec
popf
push
lret
or
mov
out
mov
push
lahf
cli
filds
cmc
xor
mov
pop
dec
mov
ret
push
inc
int3
adcb
in
sbb
in
adc
adc
fmul
sbb
sbb
mov
sub
sbb
dec
imul
jmp
mov
lcall
dec
adc
add
mov
addr16
sbb
sahf
aas
mulb
jg
loop
in
push
cmp
nop
mov
mov
sbb
rcr
mov
pushf
cli
stos
xchg
inc
add
lock
sbb
xor
call
push
cmp
divl
adc
negb
rcll
int3
add
into
jg
scas
shlb
cmc
jns
mov
notl
xor
lahf
dec
and
dec
jmp
rcrb
scas
loope
xor
enter
in
sbb
outsl
sarb
pushf
lock
sbb
pop
pop
mov
sbb
adc
mov
lahf
and
mov
popf
lock
inc
cmpsb
popf
sbb
and
stos
pop
and
adc
hlt
sbb
mov
es
sub
sbbl
jb
out
loop
outsb
movsl
popa
hlt
pop
aam
roll
inc
sub
add
les
jge
shll
out
mov
fadd
adc
test
push
xchg
dec
int3
lret
out
sahf
inc
dec
inc
pop
mov
mov
jle
sub
rclb
arpl
mov
or
or
cmpsb
ja
add
xchg
adc
and
xor
roll
dec
add
add
jae
lea
mov
sti
jg
jecxz
mov
call
xchg
faddp
cmc
shrl
pop
stos
inc
and
pusha
out
mov
mov
pop
hlt
loope
gs
xor
mov
push
pushf
xlat
jb
sub
xor
xchg
or
dec
out
push
pop
add
loope
dec
dec
push
sub
xchg
test
ss
fisubl
sbb
mov
push
loopne
inc
aaa
add
lods
mov
add
lods
ret
ret
jb
cmp
xchg
fisttpll
jl
xchg
stos
sbb
test
sub
daa
jmp
ss
mov
pop
out
mov
adc
fwait
gs
push
adc
sbb
adc
scas
das
jge
int
out
push
mov
out
arpl
sbb
int
and
and
pop
add
push
xchg
sbb
fucomip
xor
pop
jne
or
shll
insl
outsb
stc
mov
dec
in
jb
xor
mov
jmp
ficompl
addl
inc
cltd
cwtl
mov
dec
jecxz
xchg
outsl
mov
ret
data16
xor
add
and
stos
nop
ss
xchg
nop
dec
cs
or
or
les
dec
xchg
fsubs
ffree
push
jmp
push
aad
aas
popa
mov
sbb
dec
or
dec
movsb
xchg
dec
inc
cmp
push
sub
fwait
mov
rcll
push
jle
push
inc
jnp
movsb
fwait
cmp
test
jo
mov
ret
jp
mov
outsl
xchg
xchg
or
dec
xchg
lret
cmp
outsb
xor
ret
into
sbb
push
cmp
mov
dec
push
jns
jae
inc
mov
adc
stos
xor
jne
movsb
insl
fwait
cwtl
pop
jno
int
rcrl
frstor
cmp
fnstsw
in
xor
add
xor
fdivl
inc
xchg
mov
push
lods
dec
fcmovne
repz
rolb
or
mov
leave
mov
adc
cwtl
loopne
and
pop
and
mov
repnz
xor
or
or
mov
pop
mov
jecxz
inc
cmpb
add
jge
cs
and
aad
jl
pop
mov
sub
imull
stos
push
jns
or
jb
add
roll
cmovl
or
imul
pop
add
xor
insb
or
pop
mov
xchg
nop
cs
rcr
js
stos
stos
add
out
push
scas
jb
fucom
push
and
xor
es
sahf
mov
sub
enter
sti
pop
inc
mov
repnz
xchg
out
sbb
jb
push
mov
repz
sub
lods
xchg
or
test
movsl
dec
das
xchg
push
andb
test
mov
fs
out
jl
sub
push
and
fistpl
ret
and
idivb
mov
pop
int3
lcall
cmc
rclb
mov
mov
shlb
jmp
repnz
adcl
lahf
sbb
or
xchg
scas
cld
cmovns
sub
cmpsl
rolb
xor
cmp
mov
jle
cmc
jo
ljmp
ss
movsl
pop
scas
sbb
out
push
mov
sub
scas
add
fsubrs
xchg
adc
lods
divb
dec
cwtl
pop
mov
int
xorl
fbld
cld
inc
adc
xlat
nop
js
xchg
mov
stos
sub
shlb
divl
jno
and
mov
std
add
jge
jp
call
cmp
xor
call
insl
lret
enter
jo
push
lds
pop
adc
jo
pop
insl
repnz
fcomps
lea
scas
or
xor
cwtl
inc
jp
outsl
add
push
cwtl
add
fwait
xchg
cmp
mov
icebp
mov
push
pop
mov
pop
push
xor
add
pop
push
fwait
and
adcl
divw
rcrl
lea
sahf
stos
loop
mov
bound
ret
in
push
and
add
adc
mov
mov
pop
sbb
test
cltd
rcll
les
cmp
dec
jae
enter
addr16
movnti
cmp
mov
ret
sbb
ds
ljmp
sbb
ret
js
jbe
add
cmp
jecxz
or
mov
dec
ret
xor
inc
jnp
or
add
dec
repnz
mov
hlt
dec
loopne
clc
fbstp
imull
mov
enter
int3
lahf
pop
push
dec
addb
leave
in
dec
xchg
addr16
test
test
rorb
pop
add
xchg
mov
call
fcomi
lea
xor
xchg
clc
pop
jp
imul
mov
push
fistps
out
fwait
add
push
adc
and
cltd
adcb
fldt
pop
cld
mov
mov
sarl
mov
faddl
push
jae
add
in
jns
mov
movsl
and
out
scas
cmp
dec
repz
sbbl
popa
inc
mov
mov
jno
cmp
fdivrl
pusha
dec
call
xor
push
sahf
add
data16
loop
clc
xor
dec
mov
sbb
fcmovnu
cmpl
pop
stos
push
out
nop
scas
cs
push
push
test
lcall
fstl
std
mov
cld
aam
test
cmp
loop
das
jbe
movsl
mov
imul
or
push
in
pop
fimull
xlat
fildl
scas
mov
stos
dec
fcmovne
adc
pop
xorl
fcmovnu
inc
mov
sbb
cli
push
jp
ret
xchg
lea
mov
sbb
jo
jl
dec
fbld
inc
ficoms
arpl
mov
dec
push
mov
cmp
add
and
adc
ljmp
popa
xchg
jnp
xor
xor
or
cmpsl
dec
and
mov
adc
push
rorl
sbb
mov
xor
mov
pusha
imul
aam
and
insl
in
sbb
outsb
xchg
sbb
aam
cld
pop
and
fimuls
icebp
mov
add
dec
int3
lahf
fmull
mov
sbb
lock
clc
lock
out
pop
bound
sub
add
inc
pop
or
flds
popa
popa
ljmp
or
jl
cmpsl
repnz
ret
xorb
xlat
loope
mov
push
jge
xchg
test
mov
xor
xchg
iret
adc
negb
scas
notb
fcoml
push
and
mov
and
mov
push
pop
fidivs
jae
lret
mov
sbb
fwait
das
jo
push
fs
iret
inc
ficompl
jl
mov
push
lcall
mov
leave
dec
imul
mov
mov
cmp
popf
out
out
mov
in
pop
adc
daa
lods
mov
and
push
pushl
loop
jne
xlat
sti
fiaddl
enter
pushf
cld
ss
test
push
out
scas
xor
in
mov
sbb
sub
lea
aad
aaa
jmp
fisttpl
dec
mov
mov
daa
or
jecxz
into
cmp
in
pop
and
enter
or
pop
in
outsl
sbb
mov
neg
mov
sbb
mov
lods
or
sbb
aaa
cmp
cmc
xchg
mov
sahf
sub
aas
mov
lock
or
pop
mov
and
fwait
sbb
insb
cld
mov
cmp
les
daa
adc
add
cs
inc
movaps
bnd
xchg
rcll
xchg
pop
adc
fbstp
test
outsb
jnp
push
sub
ljmp
xchg
cs
insl
mov
mov
leave
sbb
das
mov
shll
int
shrb
xor
xor
xor
mov
xchg
jg
aad
stos
push
push
imul
fstpt
movsb
or
mov
adc
push
mov
aaa
insl
sbb
jo
das
jl
jae
scas
inc
imul
rcll
mov
mov
xlat
add
and
ljmp
xor
aas
mov
or
or
mov
cmp
loop
repnz
call
adc
sbb
loope
mov
jmp
dec
std
popf
ficompl
and
or
out
or
and
mov
into
mov
jl
call
orl
add
xchg
mul
add
adc
cmpsb
icebp
icebp
xchg
jg
enter
jns
outsl
push
cmp
addr16
push
into
sub
jp
sahf
dec
ret
in
fmulp
sbb
xlat
nop
cmpb
test
pop
loopne
mull
out
aad
aam
sbb
orb
out
ss
jae
add
stos
int3
or
push
jae
and
cmp
out
push
imul
movsl
push
or
sub
ja
adc
mov
xchg
mov
mov
sbb
shlb
dec
and
ror
lds
dec
clc
mov
jmp
shll
aas
adc
movnti
aas
nop
dec
fwait
dec
add
and
pusha
mov
jo
inc
insb
out
jmp
mov
xchg
push
rcrl
shrl
jb
xor
xchg
js
push
add
xchg
sbb
mov
or
push
mov
ja
jge
jnp
push
and
inc
push
out
insl
inc
xor
or
test
jmp
or
sbb
sub
shlb
mov
or
push
stos
pop
sub
mov
jno
cltd
hlt
dec
cli
lods
mov
cld
data16
outsl
adc
dec
xchg
fs
push
in
dec
mov
jmp
cli
mov
and
mov
and
add
sub
xchg
adc
push
pop
shl
xchg
mov
cld
pushf
out
out
in
sub
xor
shrb
pop
fsub
xlat
pushl
mov
sbb
sahf
jne
lret
aas
adc
mov
aaa
cmp
mov
mov
outsb
enter
cli
out
call
add
mov
loop
mov
dec
add
mov
pop
cmp
pop
mov
push
xor
jp
push
dec
xchg
in
push
in
outsb
mov
faddl
sub
sti
cmovnp
jne
insl
in
inc
xor
scas
test
cmp
push
mov
mov
bound
out
dec
lds
ljmp
popf
push
pop
and
lret
cmp
mov
jo
nop
xor
sub
ror
mov
mov
sbb
jbe
pop
jp
rep
and
cmp
int
push
cmpl
jbe
in
std
and
inc
lea
insb
dec
xchg
and
xchg
lret
fisubs
lahf
lcall
push
cwtl
roll
jle
xchg
mov
mov
sub
dec
sub
or
inc
mov
pop
rcrl
icebp
aaa
inc
sub
cmp
out
popf
mov
add
adc
jae
jecxz
aas
adc
mov
mov
jge
jno
mov
fistps
push
ss
fildl
sarb
cmp
stos
pop
les
inc
cmp
adcb
ss
repnz
daa
leave
mov
push
les
pop
nop
mov
sub
insb
cmpsb
in
daa
mov
jmp
js
js
push
imul
ret
andl
inc
and
jns
out
jecxz
add
and
mov
loop
dec
mov
shr
pop
cmp
mov
fdivs
sbb
fnstcw
sbb
push
and
fmul
push
jae
mov
push
lret
jmp
cmp
cmp
scas
mov
and
xchg
jl
and
and
push
addr16
in
pop
sub
push
scas
popa
popa
adc
and
xor
push
imul
or
dec
call
inc
adc
aaa
sbb
out
adc
ss
push
and
push
adc
add
data16
ja
dec
fs
aam
jbe
stos
aas
hlt
jno
and
iret
dec
lcall
cmp
jmp
into
jno
orb
les
lahf
push
test
stos
mov
pop
lcall
bound
pushf
mov
scas
or
cmp
push
iret
adcb
or
mov
lods
aaa
gs
sub
xchg
xchg
cmp
bound
xchg
lea
push
ja
mov
xchg
add
bndstx
jge
fldl
test
stos
repz
fsts
xchg
loopne
outsl
adc
and
ljmp
mov
dec
push
stos
int
in
push
xor
mov
or
cmc
and
nop
fstps
shll
xchg
gs
sbb
xchg
cmp
addr16
insl
comiss
push
xchg
sbb
sub
mov
xor
out
xor
mov
dec
cli
cmpl
cwtl
loopne
inc
int
dec
andl
sahf
cmp
mov
jae
clc
xor
pop
xor
or
xor
in
fdivl
mov
jnp
add
fidivrs
dec
and
lock
lret
shr
in
cltd
jnp
sub
xchg
inc
jne
bound
xor
adc
xchg
ss
data16
shlb
ljmp
addr16
dec
adc
cmp
sbb
sub
aad
cmp
in
sbb
inc
push
mov
xchg
fistl
repz
xchg
sbb
mov
mov
add
daa
dec
imul
negb
in
test
into
ror
inc
adc
daa
xchg
sub
xchg
fldenv
push
incb
sub
ja
mov
sub
pop
fldt
test
mov
fiadds
cmp
mov
ja
stc
sub
xchg
jno
or
shl
int
hlt
mov
xor
ret
in
std
std
ret
lahf
fsts
mov
push
jns
repz
lret
in
ret
ljmp
xchg
mov
fcom
mov
out
adc
xchg
into
push
xor
ds
cmp
test
rcrl
rcrb
sbb
pop
js
cwtd
jmp
push
adc
pop
int3
sbb
mov
jmp
or
add
jb
mov
cmp
jp
cmp
xor
rol
sti
sub
xchg
dec
ret
and
fadds
cmpsb
inc
inc
cmp
enter
mov
adc
inc
mov
cmpsl
out
jb
je
add
cmp
fnstenv
mov
incb
mov
xchg
test
or
or
imul
sbb
bound
ret
xchg
dec
adcb
xchg
sub
mov
dec
xor
mull
pop
movsb
stos
mov
xchg
cmc
sbb
fisttps
xchg
gs
lret
ret
test
cmp
fistl
or
mov
enter
add
xchg
jno
add
xor
push
int3
jle
mov
dec
je
xchg
dec
sbb
gs
les
nop
lcall
ljmp
fstpl
inc
stc
mov
push
sbb
push
rcll
pushf
int3
push
pushf
fcompl
sub
and
mov
mov
push
push
pop
lret
fimull
fisubl
adc
js
rolb
push
dec
inc
dec
mov
mul
and
ja
mov
xor
icebp
insb
scas
das
or
pop
lahf
jae
negb
mov
jb
sti
push
lods
fwait
mov
adc
rol
or
ret
in
lods
add
je
cmpl
je
ds
std
and
lret
jb
cld
push
pop
adc
and
stos
push
ret
leave
push
aaa
bound
pop
push
lret
and
es
cltd
sub
inc
lods
mov
pop
jns
rcrb
lods
sub
or
pushl
push
cs
pop
aam
jo
dec
push
push
mov
inc
inc
sub
xor
jno
lods
ljmp
out
jge
out
and
adc
fisttpll
cltd
stc
jecxz
sbb
push
dec
in
in
outsb
notl
loope
push
stos
inc
in
arpl
push
nop
sbb
dec
nop
cli
jmp
and
or
xchg
jmp
outsb
fcoms
xor
addb
cmp
jb
mov
arpl
lock
sbb
add
push
out
sub
inc
jbe
insl
mov
sbb
jae
sbb
fadd
cld
loope
cmp
mov
inc
ja
adc
add
fildll
cmp
lea
xchg
cwtl
xor
mov
cli
fldcw
and
mov
sbbl
mov
fisubrs
das
mov
ficomps
mov
das
je
ljmp
pusha
sub
mul
push
pusha
lahf
xchg
subb
sub
pop
mov
aam
or
cwtl
shlb
xchg
cmp
xchg
push
push
faddl
sub
jg
lahf
faddl
clc
jge
jns
pop
dec
divl
imul
das
arpl
and
fs
sub
popf
out
in
loopne
sub
push
sbb
daa
xor
insb
pop
test
in
jmp
dec
mov
test
mov
hlt
nop
pshufw
mov
insl
test
and
xchg
sub
testl
cmp
push
mov
cmp
mov
sub
pop
test
add
sub
sbb
mulb
jle
add
xor
mov
or
cmc
and
addr16
or
pop
xor
test
jbe
cmpsb
or
pop
push
push
pop
xchg
xchg
ljmp
mov
js
add
iret
das
test
dec
lcall
loopne
sbb
jne
jbe
inc
ret
in
mov
ja
pop
xchg
inc
in
lods
dec
add
push
push
dec
push
cmp
xor
flds
push
cmp
ret
fnstsw
js
xchg
testl
sbb
scas
cmpsl
in
cltd
push
shr
repnz
inc
out
cmp
into
mov
pop
push
mov
mov
and
adc
jns
lock
xor
idivl
xchg
adc
jmp
leave
stos
and
fninit
arpl
movsb
jmp
pop
add
nop
sub
mov
jp
out
call
cmc
xchg
imul
fs
stos
arpl
test
inc
mov
cmpsb
or
clc
fsubl
cmp
shrl
imul
rcll
inc
pop
sub
scas
jecxz
aad
add
jmp
fs
repz
push
lds
mov
push
jg
pop
mov
adc
sahf
rorb
repz
sbb
mov
push
lret
push
mov
cmpsb
dec
out
test
xor
sbb
dec
push
xchg
je,pt
inc
outsl
lret
or
mov
jns
or
push
mov
cmp
and
or
adc
mov
addr16
addr16
mov
and
push
lock
xchg
jp
adc
dec
lods
mov
push
cmp
in
push
push
in
inc
mov
fsts
xchg
push
push
arpl
lods
xchg
or
stos
inc
adc
fnstsw
jae
or
mov
jbe
and
pop
bound
iretw
push
std
or
popa
cmp
mov
pop
fs
jnp
or
lea
fistl
pop
push
pusha
faddl
lcall
add
push
daa
out
or
les
pop
fidivrs
xor
dec
sub
sbb
jl
pop
mov
pop
and
stos
mov
mov
repz
cwtl
and
lock
and
int
hlt
pop
mov
cmp
fs
xor
mull
xchg
push
jb
lods
lret
adc
mov
xchg
pop
cmp
push
fdivrs
mov
lds
xlat
test
xor
rclb
repz
dec
dec
cwtl
test
pop
push
addr16
sbb
and
cltd
inc
jle
hlt
adc
js
fs
lcall
mov
mov
cmp
or
jg
sbb
mov
stos
xchg
lahf
sub
add
and
in
inc
cmp
insb
cmpsb
shrl
jne
pop
xor
jb
jb
test
loope
mov
notl
xchg
int
sbb
sbb
jmp
into
mov
lea
cwtl
xor
mov
inc
mov
sub
xchg
mov
imul
push
enter
xchg
movsb
iret
int
shlb
or
lcall
insl
lea
sub
push
outsl
pop
adc
mov
push
data16
test
lea
mov
pop
adc
mov
xchg
sub
jae
pop
repz
jmp
cwtl
xchg
in
xchg
jns
mov
jbe
pop
jg
adc
inc
rol
sbb
cli
and
fwait
jmp
or
movsb
xchg
mov
jecxz
pop
test
push
xchg
mov
loopne
ss
push
mov
mov
pop
cmp
mov
jnp
mov
jo
pop
lret
cmpsl
push
out
ret
add
das
adc
fdiv
sbb
int3
hlt
cmpsb
pop
jmp
push
sbb
push
stos
sbb
xchg
repz
loopne
and
popf
xor
lahf
gs
loope
ja
push
and
negl
mov
rolb
lods
cmpsl
insl
mov
jecxz
jmp
xchg
inc
mov
movsl
push
dec
adc
dec
in
test
mov
sub
out
jnp
in
jno
scas
xor
inc
lret
es
mov
imul
imul
fs
inc
fcomp
xlat
enterw
scas
jle
fcoms
hlt
mov
cmp
mov
and
ficompl
fisubs
ljmp
inc
sar
fmull
fcmovbe
dec
aad
daa
mov
sahf
mov
mov
stos
aam
inc
rolb
xchg
in
in
cmp
lock
ss
gs
adc
in
sub
push
testb
pusha
loope
xchg
imul
fildl
xchg
mov
push
fwait
xchg
pop
mov
addb
or
add
stos
scas
int
mov
push
lret
mov
push
stc
aam
sbb
test
sub
pop
in
jp
push
mov
mov
out
jae
outsb
mov
fwait
pop
shll
out
jecxz
adc
cmp
adc
sar
int3
cmp
sbb
outsb
dec
int3
shll
popf
scas
mov
dec
push
mov
lret
sbb
divl
sarl
push
dec
jmp
mov
mov
punpcklwd
add
cmp
push
movsb
aam
jmp
sub
mov
adc
dec
ret
sub
mov
test
lods
dec
outsl
lret
mov
das
ret
je
mov
sti
ret
ret
or
cmp
pop
xlat
mov
adc
lahf
push
ficomps
stos
xchg
outsl
in
das
inc
or
push
push
nop
push
cwtl
cmpsl
leave
xchg
sbb
xchg
adc
cmp
ret
xor
jmp
mov
in
mov
hlt
jmp
cmp
mov
test
sub
sbb
subl
lock
movsb
mov
lret
adc
mov
xchg
jmp
test
pop
frstor
out
shrb
xor
repnz
adc
dec
scas
clc
cmc
sarl
push
inc
inc
bound
pop
sahf
pop
cmc
in
jecxz
inc
insb
pop
pop
stos
xchg
repnz
mov
cmp
or
add
pusha
adc
mov
test
pop
jno
sbb
sub
xlat
adc
outsb
mov
jae
lds
push
es
in
lock
add
and
cmpsb
and
and
cmp
xor
orl
cmp
stc
lods
fsubrs
push
pop
enter
xchg
in
jo
sbb
mov
add
add
test
icebp
ret
pop
imul
in
inc
popf
mov
mov
or
test
mov
or
sub
xchg
fldt
addr16
jae
gs
xor
jae
cmpsl
testl
adc
xor
lahf
and
push
in
mov
cmp
xor
pop
add
xor
xchg
outsl
xchg
pop
xchg
adc
bound
pop
pop
cs
adc
and
loop
xchg
insl
ljmp
adc
iret
jmp
jle
lret
sub
inc
loop
jns
fisubrl
inc
sbb
inc
decw
inc
pop
out
neg
sar
xor
push
and
or
lcall
jge
jmp
adc
sub
xchg
cmp
pop
rol
mov
dec
sub
add
sahf
ror
movsb
sahf
xor
lea
xchg
dec
sbb
pop
clc
sbb
out
popf
add
cmc
rorl
push
lcall
inc
sbb
sub
subb
mov
lods
and
inc
add
test
and
mov
add
inc
add
sub
cli
cmp
pop
push
push
insl
aad
jp
sbb
ljmp
jbe
int
jmp
jae
clc
test
cmp
dec
and
pop
pop
cld
sub
xchg
push
xor
or
xchg
into
adc
add
cmp
inc
orl
mov
imulb
mov
movsb
orb
pop
ret
in
mov
add
xor
stos
sbb
mov
dec
bound
fisttps
test
add
or
inc
ficomps
int
in
lods
and
mov
pop
fwait
mov
int
inc
dec
mov
ss
int3
dec
cmpsl
sti
xchg
rcrl
mov
push
or
aad
cli
mov
pop
dec
les
xor
test
sub
jbe
fcoml
pop
dec
mov
loopne
mov
mov
imull
fistpll
mov
and
ds
decl
mov
pop
push
fcoms
movsl
addr16
add
lods
std
cmp
jno
insl
loope
movsb
xor
icebp
cld
imul
insl
sub
mov
xchg
and
pop
mov
repnz
push
and
pop
mov
pop
test
cltd
aaa
mov
stos
mov
sub
jmp
iret
xchg
cltd
mov
fmulp
inc
cmp
mov
sub
adc
test
std
cmpb
mov
cld
xor
or
adc
sub
mov
cmpl
pop
leave
mov
mov
shlb
dec
test
stos
cwtl
adc
fimuls
dec
ret
scas
in
xorl
adc
xor
movsl
mov
pop
subl
cmpsb
pop
pop
dec
xchg
cwtl
arpl
mov
int
test
jno
fldl
ds
xchg
pushf
xchg
cmpsb
sub
mov
nop
jns
out
lods
mov
rcrb
xorb
call
les
mov
and
mov
test
jle
inc
outsb
mov
push
movsb
cwtl
mov
data16
imul
sub
es
or
sahf
pop
shl
cmp
sbb
ss
cmp
lahf
fsubl
sub
mov
push
add
dec
add
hlt
loopne
popf
xlat
jl
sbb
sbb
dec
jge
adc
add
inc
bts
js
xor
int3
stc
test
ljmp
fs
js
inc
dec
cmp
mov
pop
or
popa
sti
sbb
jge
jnp
xor
sbb
aaa
dec
stc
mov
dec
dec
pop
stos
lahf
outsb
call
push
mov
adc
scas
fmull
push
dec
dec
push
xor
sbb
mov
cmc
scas
clc
and
and
and
or
lret
pop
add
mov
sbb
fcoms
mov
idivl
mov
mov
sbbb
ret
lds
js
hlt
sub
inc
mov
ret
jmp
lret
sarb
hlt
inc
stos
add
loope
pop
inc
mov
inc
jp
and
adc
outsb
fwait
andb
jne
inc
mov
mov
es
and
daa
and
push
sbb
gs
loope
cmpb
mov
je
jmp
cmp
rcll
mov
add
fdivl
and
mov
lret
pop
push
mov
and
xchg
into
rcr
popa
xor
cmp
or
jg
mov
pop
dec
add
jmp
jne
loope
rcll
aaa
aam
cmpsl
sub
cmc
push
mov
in
adc
clc
push
dec
dec
push
or
jecxz
and
adc
div
sub
add
jge
repz
mov
xchg
loopne
push
cltd
sahf
stc
mov
addl
pusha
test
push
push
xchg
add
stc
repz
mov
push
clc
dec
inc
popa
pop
nop
sub
sarl
adc
andb
sub
mov
lea
push
sbb
jbe
ljmp
insl
sbb
xchg
push
loopne
aas
jle
add
sbb
scas
popa
mulb
and
cmp
iret
in
adc
xor
jmp
dec
insb
dec
xlat
adc
pop
out
aaa
mov
std
test
data16
mov
cmp
into
stc
pop
dec
xchg
jne
fldl
cmp
out
xchg
lods
xchg
mov
adc
ljmp
and
outsb
xchg
cmc
repnz
fsubrl
stc
int3
popf
aas
adc
sub
outsb
mov
fsub
das
adc
jne
test
filds
stos
xchg
dec
clc
testb
or
xchg
pop
cmp
sbb
dec
in
mov
mov
sbb
rol
jmp
push
jns
loop
ljmp
jno
ret
mov
loop
leave
aaa
xchg
loope
xchg
loope
notb
outsb
faddl
sub
cmp
mov
adc
loope
push
add
inc
push
adc
in
pop
inc
cmp
cmp
jmp
dec
aaa
std
cld
sbb
addr16
mov
fsubl
lods
pop
xor
scas
jecxz
cmpsl
lds
mov
sahf
cwtl
fisttps
outsb
jle
gs
xchg
adc
sub
and
cmp
lods
or
mov
fimuls
mov
and
push
test
lret
lds
mov
jl
out
insl
outsb
mov
int3
push
frstor
jae
adc
jl
into
xchg
sub
mov
xchg
xor
fwait
xchg
xor
cs
pop
mov
test
mov
loopne
mov
lds
or
adcl
daa
clc
cmp
popa
push
push
fs
xor
inc
mov
mov
je
ret
mov
adc
scas
add
pop
and
fdivrl
insl
cmc
cmp
test
std
push
mov
mov
push
jnp
jmp
mov
rolb
adc
das
jl
add
cwtl
pop
imul
add
sti
mov
add
imul
into
fcomps
stos
in
sarb
repnz
push
mov
adc
fisubrs
in
mov
xor
xlat
rol
fs
push
mov
xor
mov
cwtl
jg
pop
xchg
cmc
add
lds
and
mov
mov
into
cwtl
xchg
or
xchg
mov
cmp
lahf
mov
xor
adc
mull
dec
jp
pop
xor
jb
sbbl
mov
dec
out
popa
jne
bound
lcall
sbb
xor
in
int3
cmc
jle
mov
ret
in
and
in
mov
gs
push
push
add
sbb
xor
loope
fisttpll
inc
sub
dec
pop
fldcw
loop
add
addr16
adc
mov
sub
jno
loope
lods
lea
xchg
jle
js
mov
mov
pop
xchg
push
pusha
pop
outsl
in
push
insl
dec
lds
ret
in
dec
xchg
pushf
test
int
xor
sub
testl
sub
pop
push
and
repz
dec
mov
jg
inc
pop
adc
xor
gs
cmp
mov
cmp
push
cmp
pop
jmp
dec
cld
mov
sbb
push
cmpsl
data16
fisubl
cwtl
clc
cmpsl
or
mov
subb
and
outsb
jb
and
ds
cmp
repz
xchg
notl
pop
push
xchg
stc
pop
es
cli
jge
mov
cmp
jns
test
push
dec
orb
or
sub
cmp
mov
test
dec
hlt
mov
test
xchg
stos
sete
adc
cltd
inc
xchg
jns
int
nop
outsl
negb
xor
iret
push
ret
popf
dec
outsl
es
sbb
jg
fisubrs
push
jecxz
call
xor
push
leave
imul
pusha
in
sub
xchg
ficoms
mov
int3
into
push
dec
shrb
mov
cwtl
cmc
sbb
push
lods
sahf
push
popf
and
mov
ret
imul
leave
jns
leave
pop
jo
push
stos
mov
mov
and
test
xchg
filds
into
adc
repz
mov
adc
cmp
push
dec
mov
xorl
rclb
push
adc
rcl
or
jmp
dec
xor
lea
dec
mov
pushl
sub
sets
mov
fnstsw
and
imul
fwait
add
pop
sbb
sbb
or
mov
jne
jmp
or
std
xor
test
not
pop
jb
sub
pop
jl
mov
outsl
out
push
arpl
xor
inc
insb
mov
cmc
dec
pop
loop
lret
fisttpl
pop
and
or
adc
jmp
fistpll
leave
mov
push
movsb
jne
les
movsl
or
inc
jae
ror
jbe
cmp
fbstp
in
sub
outsb
adc
testl
xor
hlt
sub
bound
sbb
arpl
shlb
xchg
dec
and
out
cmpsb
or
arpl
data16
add
bound
inc
lock
rorl
clc
sub
mov
loop
and
push
and
test
lods
pop
nop
and
enter
orl
subl
and
push
pop
mov
lods
lods
out
cwtl
movsb
or
jo
cld
xor
jg
daa
and
insb
push
lock
mov
ds
loope
fs
popf
and
iret
sbb
out
cmp
cs
xchg
xor
add
insl
or
iret
stc
enter
into
xor
add
and
in
inc
add
sti
jg
nop
inc
add
lcall
xchg
sub
cli
xor
aaa
sub
mov
call
sub
idivl
data16
push
cld
popa
sbb
lahf
dec
pop
mov
cmpsb
call
lret
xor
push
ja
nop
inc
and
cmp
mov
jg
daa
loop
jae
out
push
add
in
fistps
pop
ljmp
push
fsubrl
push
ss
inc
sbb
cmp
leave
mov
xchg
aaa
mov
dec
pushf
test
dec
and
in
dec
mov
inc
stos
lret
mov
cmp
push
jae
jmp
cmp
stc
add
daa
hlt
shll
or
les
xor
inc
fxtract
cmp
icebp
sbb
xchg
fldt
addr16
inc
lods
add
push
out
pusha
push
jmp
mov
sub
rorl
out
xlat
jo
bnd
or
jecxz
pushf
loope
arpl
lds
arpl
mov
loop
mov
ret
adc
push
aas
cld
movsl
add
inc
pop
ljmp
jp
dec
push
enter
mov
movsb
and
mov
repnz
stos
add
xchg
xlat
scas
nop
mulb
mov
movsb
sbb
lahf
sbb
jp
and
js
fisttps
pusha
pushf
fchs
popf
pop
dec
pop
mov
xlat
fs
jl
outsb
mov
jno
jo
jg
mov
sti
adc
pop
insl
int
jg
fimull
fmulp
or
in
adc
jg
popf
cmpsb
and
scas
inc
and
sbb
mov
int
pop
in
std
or
push
push
shll
mov
pop
and
and
or
aas
pop
test
add
or
out
in
and
inc
push
int
cmp
jl
andl
ja
pop
andl
fiaddl
subl
dec
out
mov
cmp
iret
repz
pop
icebp
xchg
adc
js
mov
cld
outsb
out
js
mov
pop
xorb
xchg
repz
sbb
sub
xchg
cmc
xchg
add
fdivrs
enter
dec
and
popa
cmpsl
mov
sub
inc
ficoms
add
popf
sarb
jo
inc
mov
mov
popf
jp
ja
std
xchg
mov
mov
lds
mov
cld
imul
add
dec
ljmp
or
sub
out
lret
lods
jnp
xlat
divl
sub
pop
dec
cmpsl
adc
mov
outsl
or
xchg
test
cmp
fldenv
aas
fwait
xchg
jns
xor
inc
pop
xchg
jmp
mov
mov
jecxz
lret
pushf
movsl
or
jo
push
lods
sub
enter
hlt
mov
sbb
pop
adc
cmp
xor
sbb
popf
xor
xchg
lock
inc
sub
mov
cmp
insl
icebp
std
dec
push
gs
mov
fadds
dec
sbb
mov
mov
mov
test
fistps
sahf
sar
push
in
popf
dec
bound
out
imul
mov
mov
nop
cmp
pop
mov
fnstcw
xor
gs
xlat
pop
inc
mov
jne
daa
das
cmp
and
cwtl
enter
js
add
jo
ret
stos
nop
pop
fsub
sbb
fwait
xor
lcall
and
inc
insb
jbe
iret
aam
sub
hlt
aam
mov
mov
gs
subb
jecxz
add
out
cmp
cmp
cltd
insb
in
jbe
jmp
push
out
sahf
and
add
popf
hlt
lods
inc
push
nop
cmpsl
sbb
rcrb
mov
pusha
je
shr
test
loope
mov
fcoml
test
sbb
sub
xor
into
out
lea
jae
int3
cmc
xlat
aad
popf
inc
test
cltd
inc
dec
and
call
shr
inc
cmp
push
dec
jb
jne
shlb
push
push
movsb
mov
and
ds
mov
add
ja
mov
js
test
ja
test
ja
mov
loop
or
lods
cld
dec
je
and
push
pop
cmc
rol
inc
div
pop
mov
jnp
mov
pusha
xchg
adcl
loope
xchg
dec
adc
adc
inc
add
pop
jno
mov
mov
mov
mov
adc
dec
stos
fsubs
sub
xlat
lea
inc
subl
inc
ja
test
iret
sub
pushf
xchg
adc
pop
test
insl
push
inc
mov
mov
arpl
mov
int
outsl
mov
rcrl
ret
xor
sbb
daa
sti
sti
pop
cs
inc
stc
ret
cmp
movsb
iret
push
or
adc
xor
xor
cmpsl
cmp
adc
sbb
vphaddbw
mov
or
test
inc
mov
mov
cmp
fldln2
fimull
or
mov
dec
js
push
push
loope
dec
jl
mov
pop
xor
stos
imul
mov
inc
out
shll
mov
xor
mov
or
or
imul
xchg
or
and
xchg
push
loop
xchg
lods
cmp
jg
jb
sub
lods
push
fsts
call
push
mov
stos
stos
and
dec
mov
popf
pop
jne
enter
cmp
sbb
fiadds
push
fnsave
in
fwait
adc
dec
xlat
mov
adc
icebp
dec
repz
sbb
pop
je
cmc
int
push
fwait
mov
push
bound
and
xchg
cmp
lahf
das
frstor
jns
fbstp
orb
std
out
dec
jne
push
outsb
add
pushf
mov
sbb
out
fdivrl
add
std
push
add
ret
nop
xor
bound
ja,pt
xor
push
ds
das
mov
inc
out
inc
add
inc
sub
sarb
dec
imul
fisttpl
sbb
adc
cwtl
pop
mov
xchg
sbb
bound
std
dec
pop
jae
jp
mov
inc
lods
insl
cmp
mov
jae
cmpsl
dec
add
sbb
lahf
cmp
insl
push
call
loopne
jle
push
mov
and
sub
insb
inc
dec
bound
insb
dec
inc
call
gs
pop
mov
lahf
xchg
call
jb
imul
shl
sbb
arpl
mov
sbb
jbe
inc
addr16
or
push
inc
test
stc
dec
lods
mov
lahf
pusha
cwtl
and
pop
jle
adc
mulb
movsb
mov
addl
mov
jne
popa
cmp
fwait
arpl
in
push
xchg
insb
out
lea
cwtl
pop
mov
divb
loop
inc
pop
rcrl
mov
mov
dec
pop
pushf
cld
iret
fisubrl
orb
enter
or
inc
das
jmp
loop
loopne
aas
or
je
mov
mov
mov
jnp
cld
and
movsl
loope
sbb
hlt
adc
fldcw
sbb
mov
dec
cld
cmp
repnz
cmp
bound
rcl
xchg
or
fadds
dec
mov
std
hlt
loopne
and
mov
stos
stc
fsubs
and
xor
mov
dec
jae
jmp
sbbl
inc
mov
cltd
std
enter
scas
stc
stos
add
es
cli
push
pop
cmp
arpl
cwtl
jbe
adc
push
popf
xchg
dec
outsl
adc
insl
cmp
xchg
fildll
or
pop
in
mov
fsubl
jecxz
pop
mov
dec
add
test
notl
mov
cmp
mov
pop
add
jl
add
cmp
add
pop
jecxz
mov
dec
test
data16
repnz
pop
mov
lahf
cltd
ds
hlt
jmp
out
into
ss
jmp
mov
pop
add
je
push
inc
sbb
popf
mov
loope
rcl
jo
inc
les
insb
sub
add
popa
les
hlt
loope
push
cmp
adc
loopne
mov
inc
lock
fs
jecxz
pop
or
sbb
lods
sbb
mov
insl
enter
or
cmp
cmpl
stc
jnp
je
pop
mov
loope
xor
sub
test
sbb
xchg
push
and
lods
add
cmp
in
out
mov
stos
stc
mov
fs
imul
lods
aad
push
push
orb
push
xor
xor
jmp
mov
stos
pushf
aam
dec
shr
insl
pop
aad
dec
pushf
outsb
pop
out
mov
push
pop
movsl
or
dec
repnz
or
inc
leave
mov
cltd
add
ret
nop
and
dec
movsl
cmp
ljmp
fwait
ja
repz
in
fistl
sahf
mov
outsl
push
dec
inc
mull
push
lahf
jmp
ljmp
ljmp
fidivrs
jbe
mov
iret
push
cmp
stc
test
adc
int
cmp
mov
xor
lods
mov
jle
movsl
pusha
jle
decb
mov
subl
sti
shr
jle
inc
push
push
fildl
or
leave
adc
mov
and
push
popf
cmp
mov
lcall
jbe
and
cmp
jns
in
cmp
xor
and
sub
es
sub
aas
pop
sub
fldl
stos
add
dec
scas
ja
sbbl
cld
mov
lock
sub
not
imul
into
loopne
pop
js
cli
rcrl
outsb
or
sbb
xor
push
cmpsb
das
mov
or
xchg
loopew
rcrl
aaa
lds
pusha
das
lret
int
add
sub
aaa
fnstsw
out
adc
lret
loopne
negl
adc
repnz
cmp
cltd
test
xor
stos
mov
sbb
add
and
mov
jge
imul
pop
loopne
lds
jle
jl
mov
psrlq
mov
mov
and
push
aam
mov
jecxz
xchg
pusha
or
jmp
mov
cwtl
rclb
and
mov
push
inc
cmp
adc
push
dec
popf
in
in
addb
daa
testl
pop
push
xchg
push
push
lods
adc
mov
and
lock
rclb
add
data16
mov
iret
jae,pt
adc
flds
int
pop
in
sbb
jns
mov
adc
or
mov
dec
das
pop
inc
cmp
mov
jl
jecxz
dec
sub
sbb
mov
lds
xchg
dec
fidivl
loope
lahf
and
loopne
cmp
cs
jbe
ret
push
xchg
sub
ljmp
adc
scas
popf
or
jle
popl
loopne
gs
and
fs
cmpl
pop
outsl
js
push
popa
sbb
jp
lahf
jl
int
adc
fwait
pop
inc
jno
mov
pop
xorb
out
cmp
adc
mov
mov
cmpsl
out
xor
fidivl
bound
roll
call
mov
add
mov
jb
mov
push
push
mov
cmpsb
divl
jmp
fwait
xchg
addr16
rolb
lret
mov
inc
inc
xor
mov
sahf
call
ljmp
sarb
push
js
adc
or
add
inc
inc
outsb
scas
in
mov
sarw
xor
jbe
lret
fiaddl
and
cltd
mov
in
sbb
pop
in
and
icebp
jle
stos
pusha
inc
test
ret
pushf
add
xor
imul
scas
aas
dec
add
and
cli
dec
cmpsb
and
adc
lea
repnz
push
fcmovnb
data16
cli
and
xor
rcll
xchg
popf
test
push
out
mov
sub
lds
inc
std
sub
xor
inc
add
iret
faddp
arpl
cmp
aam
mov
loopne
mov
sub
in
lea
ret
jns
cmp
jo
mov
push
or
insb
sub
lods
data16
cwtl
mov
dec
mov
sub
data16
jge
sub
jecxz
cmp
jmp
jp
xor
inc
push
aam
cmp
cld
pop
insl
out
xor
in
ffreep
sub
sub
adc
stos
fisttpll
jg
cld
imul
dec
mov
lcall
push
cmp
inc
fimull
or
pop
jno
jmp
mov
jae
sbb
iret
jge
inc
loope
push
dec
stos
sbb
xlat
lods
clc
enter
arpl
pop
in
insb
sub
fadds
push
push
inc
rcl
addr16
mov
mov
mov
mov
les
adc
iret
inc
popf
ja
das
mov
add
nop
cmp
cli
call
sbb
lret
sub
bswap
data16
insl
jl
or
xor
xor
inc
shlb
daa
mov
jmp
pusha
mov
orl
sbb
and
cmp
iret
loopne
lea
mov
add
test
push
mov
sub
push
fdivs
test
inc
adc
push
stos
arpl
lods
dec
subl
test
rolb
mov
mov
dec
mov
fstpl
jl
sbb
inc
stos
jo
fdiv
xor
dec
fisubrl
mov
cwtl
sbb
lret
popf
in
lret
jmp
movsl
das
lcall
jne
dec
add
inc
xchg
loop
cld
push
xchg
aam
aas
dec
sbb
cmpsl
imul
cmp
fildl
cmc
movups
pusha
jmp
sbb
xchg
cmp
in
jecxz
mov
mov
test
cmpsb
cld
out
and
jle
sub
lds
xchg
cmp
cwtl
pop
inc
sub
inc
sti
lods
jnp
pop
xchg
pushf
ljmp
jp
jmp
and
rolb
subb
es
dec
popa
loop
add
mov
mov
xor
dec
add
pushf
je
xor
imul
jnp
sti
push
inc
mov
inc
or
subl
mov
stos
sub
xor
and
lods
stc
dec
cmp
dec
imul
clc
push
and
loopne
adc
aaa
nop
sbb
scas
sarb
movsl
enter
flds
pop
test
lret
sbb
dec
test
xor
pmaxub
repnz
jno
cmpb
pop
gs
mov
push
orb
sub
xchg
into
mov
pop
cmp
dec
cs
pop
jge
sbb
pop
gs
js
cmovge
jecxz
mov
inc
int3
test
ljmp
jmp
or
shrl
mov
faddp
stos
lret
cmp
mov
pop
push
into
out
mov
cmp
inc
nop
insl
push
adc
rcrb
mov
into
jl
push
imul
dec
popa
adc
test
push
sar
mov
cmp
iret
outsb
xchg
into
lret
cmp
out
test
inc
arpl
and
mov
sub
add
push
mov
outsl
or
xor
or
roll
insb
test
cld
jnp
mov
imul
lock
cmpl
jp
jb
push
cmp
xlat
int3
mov
inc
inc
ret
mov
and
fistl
or
xchg
test
lock
jp
xor
movsb
mov
mov
fs
cmp
sbb
pop
repz
mov
cmc
xchg
dec
or
push
pop
ja
mov
xor
add
xchg
test
call
shr
cmp
dec
addr16
inc
xchg
lea
mov
adc
xor
mov
and
out
fwait
out
and
cmp
bound
pop
jnp
scas
aaa
mov
movsb
inc
and
das
xchg
cld
jo
xor
or
mov
or
pop
call
add
pop
mov
std
mov
icebp
hlt
mov
cmpsl
pushf
mov
into
rcrl
dec
mov
ljmp
out
add
std
clc
inc
jmp
lret
mov
popa
ljmp
ljmp
in
mov
cmp
or
adc
lcall
jl
mov
scas
push
fisubl
jb
shrd
pop
mov
clc
insb
in
fisubs
inc
pop
push
or
ret
jnp,pt
sub
inc
inc
jmp
dec
roll
jl
fcompp
sub
jns
ret
pop
pushf
fistl
mov
jecxz
mov
pop
push
packsswb
jne
cmpsl
pop
shl
mov
loopne
cmpsl
mov
mov
jne
jae
int3
sbb
mov
push
push
jae
xor
sbb
cld
std
test
push
stc
jns
mov
pusha
add
lds
ja
push
and
mov
ss
fcoms
sub
test
and
xor
inc
inc
aam
push
sbb
aam
cs
mov
fsubrl
or
cs
rol
pushf
fsubrl
mov
fwait
xor
xchg
bound
ss
cmpsb
faddp
jb
add
mov
mov
sbb
pusha
or
jae
xor
lods
push
ljmp
fsincos
xor
or
sub
push
pop
jmp
xor
shll
sbbb
sub
ss
xchg
fisubl
dec
outsl
in
scas
push
jg
jbe
and
leave
shll
outsb
cmp
dec
dec
je
fidivrl
imul
stos
and
andl
scas
mov
stos
xchg
cmp
nop
scas
mov
loop
flds
add
push
jns
cmp
inc
frstor
je
imul
mov
xor
mov
push
pop
push
imul
or
mov
loop
and
jbe
dec
stos
or
adc
call
cmp
push
repz
push
and
jecxz
mov
cmp
adc
sub
and
inc
sub
xor
test
pusha
call
or
iret
daa
push
adc
xchg
push
notl
in
push
mov
out
inc
sub
lea
test
xchg
ret
pop
dec
mov
push
cmc
jns
testb
imul
sbb
outsb
pop
out
leave
daa
pop
iret
rcll
adc
pusha
imul
push
jge
fwait
sbb
fmuls
and
inc
movsl
fists
mov
pop
stos
iret
lods
xor
push
push
mov
sbb
push
out
cltd
or
cli
scas
into
xor
stos
outsl
iret
add
outsl
pop
imul
xchg
mov
cmpsl
shrb
adc
imul
cmp
lcall
push
sub
adc
dec
fidivrl
fsub
arpl
sahf
jmp
mov
push
pop
mov
sahf
jmp
in
stos
xchg
movsl
js
mov
in
fnstenv
add
repz
imulb
pusha
inc
inc
pop
fsubs
cmpsl
loope
shlb
or
push
mov
mov
fsubrl
call
xchg
push
adc
jmp
movsb
adc
cli
pop
notl
xor
fisttps
aas
fidivrs
fwait
rolb
rorb
aam
mov
adc
cmp
mov
repz
sarl
insb
ficomps
loope
mov
sub
jg
popa
xchg
push
imul
push
cld
mov
sub
mov
jnp
push
stc
mov
nop
mov
in
cmp
rcrb
push
push
pop
std
aad
hlt
je
fdivrl
add
mov
popfw
das
lods
or
xchg
or
pop
cmpsl
inc
iret
add
mov
and
mov
xor
lcall
addr16
pop
or
xchg
push
dec
cmp
fildl
xchg
pop
mov
repnz
push
mov
das
out
aaa
repz
mov
dec
outsl
addr16
push
push
sti
arpl
sbb
push
xchg
je
or
stos
inc
out
inc
rcll
in
mov
jecxz
insl
mov
mov
mov
and
inc
xor
pop
push
mov
dec
mov
into
cmp
push
mov
dec
and
test
arpl
cs
mov
mov
js
cmp
rcll
cmp
jns
push
adc
sti
lods
dec
sub
add
fidivrl
out
sbbl
fiadds
outsl
jb
jle
mov
pop
inc
icebp
mov
ret
data16
outsb
jp
lahf
cmc
enter
mov
dec
loopne
stc
jmp
outsb
sbb
pusha
mov
dec
sbb
std
adc
pop
mov
ds
or
cwtl
mov
xchg
loop
jmp
mov
jg
mov
out
push
add
cmp
mov
pop
add
adc
or
add
xchg
cmp
aad
pop
dec
mov
push
jnp
mov
hlt
loop
imul
ret
movsb
adc
out
cmc
or
sub
stc
or
mov
sub
aam
outsl
mov
jp
je
jg
faddl
hlt
fidivl
push
inc
stc
xor
mov
push
shl
cwtl
jb
clc
mov
mov
mov
mov
or
int3
mov
pop
lock
cmp
xor
rsqrtps
les
mov
push
dec
sbb
inc
jno
mov
sbb
push
mov
adc
or
jl
outsb
ljmp
or
push
push
mov
jl
xor
jnp
lret
lahf
lcall
rcr
mov
ficompl
stos
shl
pop
lds
mov
sub
or
pop
fdivrs
orl
inc
inc
cwtl
cmp
xor
jnp
test
bound
jl,pt
mov
or
sbb
dec
or
cmp
mov
inc
push
hlt
aas
xor
jbe
aaa
and
mov
sahf
iret
out
or
pop
add
mov
pop
test
adc
pop
pop
shlb
inc
pop
mov
jge
movsl
mov
div
xchg
div
mov
outsb
lahf
stc
stc
push
pusha
lods
cmp
fxch
orl
or
ret
or
and
and
fwait
aaa
jne
incl
jl
inc
xchg
cmpsl
mov
fnstcw
sbb
test
or
movsl
and
movsb
mov
sbb
pop
incl
jg
mov
xchg
add
sbb
and
pop
sbb
adc
push
addl
filds
pop
out
and
in
add
fsubs
mov
jecxz
insb
inc
je
mov
mov
lock
jae
sete
inc
pop
adc
xchg
addr16
andb
das
add
pushf
cli
mov
mov
sbb
pop
js
repnz
in
aam
sbb
jbe
mov
ret
mov
ja
mov
pop
leave
sub
sahf
arpl
push
sub
jbe
stos
xor
cmc
in
cmp
push
xchg
and
js
or
std
mov
push
lahf
add
push
popa
popf
jmp
dec
cltd
xchg
jbe
adc
fisubs
jae
outsb
adc
add
aaa
jmp
sbb
cwtl
mov
shrl
jge
mov
xorb
mov
dec
lock
fstps
mov
leave
jbe
cmp
inc
push
lds
aam
xor
add
and
add
sbb
inc
push
mov
jecxz
lcall
pusha
sub
mov
jb
std
dec
lcall
pop
sub
cld
pop
lds
push
fldenv
leave
sub
jecxz
stos
out
jg
or
and
je
pop
mov
popa
test
xchg
pop
cli
push
incb
mov
dec
inc
adc
pop
dec
and
mov
xor
xor
mov
test
arpl
insl
icebp
in
aam
inc
call
movsb
cmp
dec
lods
dec
and
sub
sbb
jmp
popf
and
jo
rcrb
mov
add
xor
pop
aad
mov
xchg
lahf
inc
sbbb
rcl
mov
cmpl
ficoml
sub
mov
repnz
dec
outsb
ja
fsubs
push
fmull
mov
cltd
dec
adc
leave
push
adc
dec
xchg
pop
push
mov
add
push
xor
aas
jne
jae
jnp
cwtl
in
sbb
mov
mov
sub
xlat
hlt
cld
xchg
pop
arpl
push
ret
xor
dec
addl
outsb
test
and
imul
cltd
out
ljmp
add
jo
push
repnz
sbb
lods
fildll
sbbl
cs
outsb
and
faddl
mov
jecxz
inc
je
mov
jne
xor
ds
or
mov
pushl
clc
ds
jmp
int3
daa
push
mov
test
push
jbe
pop
add
outsb
sbb
adc
dec
pmaxsw
pop
andb
mov
add
sti
out
test
sahf
fistl
mov
add
loopne
shlb
sub
and
push
sbb
rorb
sub
loope
mov
in
testb
cmp
jb,pt
dec
fs
movsb
push
in
mov
aas
inc
mov
fimull
ss
inc
mov
jp
arpl
cwtl
loope
sbb
push
fwait
je
and
lcall
ss
ds
bound
or
pushf
js
mov
lds
push
test
xor
aad
or
int3
mov
add
lods
push
faddp
jo
mov
jbe
mov
mov
sub
add
mov
add
xchg
dec
sub
mov
sahf
lret
cmpsb
cwtl
ja
push
pushf
in
in
push
push
cmp
or
sbb
lea
incb
js
or
test
test
rcr
jo
std
stos
inc
cld
jno
mov
add
dec
adc
sub
dec
adc
repnz
ret
cli
mov
and
inc
jne
shll
jbe
inc
mov
ftst
or
cmp
sbb
inc
inc
sub
andl
imul
iret
sbb
add
push
mov
stos
inc
push
cmc
pop
shrl
jb
xor
in
icebp
inc
pushl
xchg
xchg
pop
add
inc
cmc
lcall
test
push
addr16
mov
mov
call
scas
rol
cmp
mov
mov
jb
cld
inc
inc
mov
fimuls
movsb
arpl
fcomip
out
xor
sahf
and
mov
popa
data16
cld
mov
in
sbb
dec
sub
adc
push
enter
imul
addr16
dec
icebp
xchg
xor
sub
hlt
and
int
rolb
aaa
xor
cmp
fsubrl
sub
mov
add
mov
push
pop
jp
ret
cmpsl
fbstp
inc
jo
pop
js
xchg
in
popa
mov
nop
and
pop
xchg
ffree
fsubrs
adc
aaa
sti
fimuls
mov
lods
dec
jecxz
int3
std
arpl
xchg
push
int3
jns
pop
inc
inc
sub
lahf
dec
cwtl
mov
mov
pop
icebp
in
aam
jmp
jnp
pop
pop
je
jns
mov
bound
shr
mov
enter
out
sub
fisubrl
adc
mov
add
aam
loopne
int3
sahf
imul
add
mov
or
add
mov
aas
nop
testl
pop
outsb
jg
pop
pop
insb
sub
mov
and
ljmp
jno
inc
cltd
movsl
inc
xchg
std
mov
mov
mov
mov
mov
pop
mov
jmp
out
sti
cmp
testl
rclb
loopne
mov
divb
ljmp
lea
or
loop
push
adc
es
xchg
in
incb
cld
xchg
mov
dec
mov
pop
mov
cmpsb
adc
and
mov
lahf
out
adc
and
push
pop
and
push
fcomps
js
lods
cmp
aam
push
sbb
lret
loope
cmp
pusha
out
imul
or
gs
stos
insl
call
fbstp
push
lret
push
jge
cmp
out
rclb
or
add
pop
adc
sbb
mov
push
jbe
repnz
dec
inc
std
rcrb
setne
lock
adc
arpl
frstor
lret
mov
push
or
data16
jo
add
aad
pushf
das
xchg
int
push
xor
push
push
js
shlb
jo
pop
orl
int3
mov
dec
mov
adcb
fmull
adc
dec
scas
push
stos
sahf
in
in
pop
and
push
lods
movsb
inc
jge
push
jae
in
inc
xchg
pop
mov
jp
ret
mov
repnz
mov
je
in
xor
push
adc
test
sbb
roll
xchg
fstpl
xchg
cmp
and
cld
out
addl
xchg
pusha
in
mov
jb
sbb
aam
pushf
dec
mov
xor
aam
sbb
cwtl
cmp
mov
jl
sbb
shr
jno
jno
xor
aam
mov
outsl
add
insl
inc
mov
push
xor
dec
mov
jo
cmp
cmp
sub
enter
pop
mov
idivb
cmp
pop
sbb
out
out
sahf
fucomip
jecxz
int3
mov
cmp
nop
push
subb
addr16
jnp
mov
sahf
pop
bound
sub
shl
push
out
insl
ljmp
das
testb
movsl
cmp
xor
stos
js
outsb
pop
mov
lret
inc
jp
in
aam
js
dec
sub
xor
mov
jnp
leave
cmc
or
sbb
dec
xchg
or
jbe
shrb
xchg
adc
adc
shll
xchg
adc
movsl
adc
dec
fadd
push
call
cmp
divb
and
loopne
mov
iret
sbb
mov
cmp
fwait
lret
sarb
inc
jl
in
outsb
repz
adc
popa
xchg
or
test
push
adc
mov
test
add
ljmp
insl
xchg
lock
mov
pop
outsl
outsb
mov
lcall
out
stos
sub
fwait
xor
dec
pop
mov
xchg
dec
or
leave
jge
jnp
add
rcrl
cmc
xor
subl
and
pop
mov
lock
push
adc
inc
xor
and
inc
and
xor
mov
mov
roll
imul
and
push
mov
ret
out
scas
xor
sbb
repz
fwait
pop
or
adc
mov
movsbl
jge
stc
cltd
dec
xchg
mov
inc
sub
push
inc
out
lock
pop
cmp
psubusb
ja
lods
push
sub
cmp
movsl
idivb
sub
mov
dec
add
jle
std
jle
mov
mov
mov
rcr
pop
cmp
or
or
std
subl
mov
jecxz
xor
es
mov
test
aam
mov
movsl
lss
test
mov
dec
insb
fists
mov
lds
mov
mov
pop
jmp
aad
mov
insb
inc
pop
mov
sar
sbb
cmpsb
push
mov
ja
fs
rclb
ror
inc
cmp
inc
push
add
and
or
adc
jo
je
aad
xchg
add
fsubl
adc
add
cmp
dec
rorb
mov
push
push
sbb
mov
out
pop
cmp
scas
popa
lds
dec
xchg
jl
inc
or
or
dec
adc
mov
sub
sub
out
std
jae
popf
lahf
repz
push
mov
inc
ret
mov
movsb
sub
dec
push
push
mov
sbb
pop
stos
push
jb
jmp
mov
push
adc
fildl
leave
cmpsl
add
push
mov
ljmp
xorl
push
sti
std
jns
pop
dec
aas
push
or
addr16
sbb
leave
or
pop
popf
inc
or
inc
xor
adc
mov
dec
leave
shlb
push
pop
ret
sub
in
loopne
out
mov
xchg
jge
ss
ret
out
mov
mov
cmpsb
jne
push
push
cmp
xor
mov
pop
xor
clc
push
push
imul
inc
push
mov
add
je
jecxz
adcl
inc
push
sbb
cmp
jns
xor
add
xor
xchg
cmpsl
out
xchg
orl
mov
stos
inc
pop
or
stos
mov
outsb
xor
sbb
xor
lods
scas
mov
out
fistps
scas
adc
jns
cli
xchg
pop
fistps
ds
js
mov
lods
jae
test
pusha
je
add
outsb
mov
das
mov
out
xchg
in
je
inc
sti
lret
shll
inc
pusha
and
xchg
jge
repz
aas
mov
ja
cmp
dec
sub
pop
mov
mov
xor
das
inc
popl
jmp
or
ljmp
inc
pop
pop
or
cmp
jne
lcall
push
push
dec
inc
push
cmpsb
sub
jno
lds
xchg
add
fcoml
mov
cmp
mov
or
addb
and
adc
or
test
push
jl
je
idivb
push
popf
cmpsl
or
adc
mov
iret
inc
fldcw
ret
lock
enter
ja
xchg
cld
loope
andb
daa
int
adc
sub
loope
push
and
mov
cmp
jnp
sub
pop
adc
sbb
fildll
mov
lods
lret
cmp
cwtl
out
or
stos
pop
add
fisubs
xor
pop
add
mov
jp
fisttpll
inc
sub
add
loope
lock
mov
daa
mov
add
data16
pop
in
xlat
inc
frstor
mov
mov
mov
pusha
mov
mov
jo
xchg
cmc
cmp
dec
jg
or
es
mov
push
iret
and
aas
push
push
scas
pop
xor
psraw
adc
xlat
xor
inc
js
xchg
insl
sarl
fisubl
out
xor
cmc
cwtl
nop
mov
lcall
ret
fisttpll
in
hlt
sbb
stos
out
xchg
sub
jno
mov
cmpsl
xor
outsl
inc
imul
movsb
sub
ret
int3
ss
dec
jo
das
test
mov
out
jp
popa
cwtl
and
pop
or
sub
in
cmpl
lods
ja
mov
fildll
adc
rorb
out
insb
jb
sbb
jne
in
xchg
stos
test
jg
mov
pop
ss
into
nop
push
leave
das
mov
lahf
lods
jl
fdivrs
lahf
movsl
mov
outsb
sub
mov
pop
wrmsr
icebp
cmpsb
insl
bound
dec
jae
xchg
aam
adcb
sbb
and
scas
mov
lds
xchg
mov
cmp
repz
incb
das
adc
test
mov
arpl
push
xchg
cmp
cmpb
mov
jmp
fs
mov
xchg
and
pop
test
inc
dec
push
lcall
cmpsb
cltd
scas
shlb
sbbl
out
mov
add
xor
and
pop
mov
scas
cmc
test
fsubr
pop
insb
or
pop
inc
push
and
sub
pop
add
cs
subl
inc
adc
sub
dec
mov
mov
rcrl
in
sbb
sub
insb
jp
lret
xchg
lods
insl
inc
je
adc
jno
mov
push
push
adc
mov
add
sbb
bound
push
out
dec
vphaddudq
mov
cmpsb
push
lock
xor
mov
add
out
jmp
sti
or
mov
insl
outsl
push
fsubr
or
cld
fcmovnb
mov
pop
add
cmc
cmp
xor
lock
mov
sub
pop
xchg
subb
jle
das
les
imul
pop
lahf
cli
sbbl
push
aam
pushf
push
mov
repz
cmpsb
pusha
sbb
mov
push
scas
pop
ljmp
cmp
push
outsl
lods
mov
jp
pop
imul
inc
cltd
pop
shrb
or
stos
inc
icebp
out
cltd
and
in
xchg
xor
mov
testl
out
mov
jbe
mov
shll
sub
mov
fiaddl
sub
mov
cmpsb
les
cmp
in
test
mov
push
stos
jbe
and
add
sub
cmp
ja
sbb
pop
xor
outsb
xor
stc
pop
xchg
lock
ss
rol
push
imul
hlt
in
les
xor
jge,pn
ror
mov
gs
sub
cli
out
add
add
xchg
dec
lret
inc
lret
call
xor
les
in
push
sbb
jmp
xchg
rcrl
into
inc
aaa
loopne
in
cs
jae
test
sbb
pusha
btrl
xchg
out
push
cmp
popf
mov
fnstsw
xorl
mov
or
mov
scas
mov
mov
mov
inc
int3
aaa
sub
cli
out
lds
stos
mov
pushf
std
cli
insl
mov
fcmovne
xchg
outsl
jecxz
out
inc
sub
out
cmp
push
sbb
mov
push
add
jae
daa
pop
out
cli
adcb
fists
lods
xchg
push
lods
inc
pop
fldcw
enter
xchg
pop
mov
arpl
add
sahf
push
lea
xor
sub
xor
sbb
lods
cld
sub
pop
sti
mov
push
dec
or
or
mov
xor
gs
adc
cmp
inc
mov
inc
and
jl
dec
mov
mov
adc
sarb
inc
stos
pop
sub
lea
loop
fisubs
or
xor
fidivs
cmp
movsl
sti
ret
cmp
sti
movsb
dec
fildl
xchg
pop
pop
ss
fwait
mov
lahf
insb
push
pop
jno
fidivs
lahf
xor
sbb
push
rclb
out
add
dec
jns
fs
dec
sbb
jno
push
push
push
mov
lds
push
inc
aas
dec
adc
mov
cmp
xchg
jg
in
movsl
push
sti
js
enter
jp
push
and
negb
in
mov
rolb
es
dec
adc
and
inc
jbe
push
test
pop
pop
mov
jg
push
jge
mov
leave
and
push
aaa
or
mov
iret
push
xor
push
paddq
mov
mov
clc
lods
xlat
aam
dec
lcall
rolb
xor
aad
mov
cs
sub
push
cmc
sti
fcom
push
dec
in
xchg
adc
mov
push
dec
sub
pop
mov
clc
mov
sbb
lcall
filds
jecxz
out
cmp
pushf
cmp
jge
and
ss
popa
lods
lock
or
pop
jg
scas
dec
mov
outsb
or
adc
jns
out
xchg
xor
ja
sub
push
inc
jecxz
rcrb
loop
test
sbb
jp
call
lock
jle
mov
lods
sub
mov
mov
adcb
push
xlat
mov
push
mov
mov
scas
cmp
sahf
mov
lock
shll
frstor
leave
xorb
aas
enter
lret
sar
and
and
push
in
rorl
test
sub
and
ret
add
mov
negl
and
test
iret
mov
push
or
jnp
xchg
pop
dec
adc
dec
sub
adc
mov
xchg
nop
push
mov
adc
xchg
xchg
adc
jp
sbb
adc
jo
pop
popf
jbe
aad
inc
das
ja
mov
gs
cwtl
push
push
stos
mov
fwait
rol
push
dec
inc
cmpsl
test
pusha
xchg
adc
cwtl
adc
mov
pop
test
imul
xor
adc
or
inc
std
cwtl
clc
movsb
dec
in
out
fwait
sbb
jo
push
sub
test
inc
lret
jecxz
sub
jle
gs
xor
adc
inc
pop
adc
xchg
adc
das
xchg
ret
adc
or
cltd
jmp
and
mov
int3
imul
das
lods
stos
push
sub
out
fwait
mov
inc
loop
out
mov
or
mov
incl
mov
decl
jecxz
stos
cmp
out
jmp
jp
or
push
cld
mov
ss
jmp
icebp
pop
mov
push
into
add
mov
inc
fcoms
mov
jb
js
jnp
fcmove
fistpl
dec
sbb
mov
cmp
andl
adc
adc
imul
mov
popf
mov
dec
push
mov
add
bound
pushf
imull
jl
inc
push
movsl
sbb
jg
movl
scas
jmp
xchg
paddw
clc
enter
sbb
cmp
xchg
add
sbb
mov
and
mov
leave
sub
rcrl
mov
hlt
jnp
jl
xor
and
xor
sti
xchg
pop
mov
mov
push
gs
sub
jnp
or
lods
rcrb
repz
add
mov
xorb
adc
rolb
je
lahf
cmp
add
rcrb
imul
mov
addr16
and
add
jne
adc
push
in
cld
push
mov
ja
dec
xor
das
push
adc
in
cld
mov
in
sahf
cmpsl
lahf
add
cmpsb
fld
xchg
mov
sub
xchg
push
jns
lahf
and
shlb
mov
sub
xchg
ds
bound
pop
push
dec
inc
mov
mov
mov
lods
pop
lret
add
pop
add
lret
add
aad
jmp
push
leave
std
aam
mov
cld
dec
jl
sbb
test
cmpsl
and
call
in
mov
stc
rolb
pop
popa
pushf
into
lahf
mov
jnp
test
or
out
cmpsl
jg
dec
inc
test
aad
push
xchg
or
add
xor
jmp
add
cli
cmp
enter
test
lods
les
loop
lea
cmp
cmp
ss
push
sahf
inc
addr16
or
xor
mov
repnz
in
mov
jmp
xor
rcl
jge
scas
dec
add
in
lea
ss
lock
jno
pusha
mov
mov
fs
or
or
push
scas
push
pop
std
jecxz
inc
mov
jne
fimull
pop
es
lret
aad
popa
stos
jl
iret
js
sub
stos
int3
cwtl
inc
ror
gs
ss
test
icebp
jle
sbb
mov
push
lds
sub
sbb
mov
gs
cmp
movsb
call
sub
movsl
or
ja
repnz
aas
sti
scas
fcomi
push
loopne
jecxz
and
inc
aas
mov
mov
and
sub
sbb
sbb
cld
jbe
stc
repnz
or
iret
pop
mov
outsl
lock
lahf
pusha
jge
jecxz
or
sbb
stc
ds
jne
rcrl
aad
iret
push
repz
jb
add
in
cmovge
add
out
aad
loop
mov
js
mov
mov
mov
pop
or
pushf
push
jle
dec
jae
imul
sub
push
repnz
jne
je
mov
stos
in
xchg
in
movsb
fcmovu
sbb
inc
mov
out
out
xor
lret
mov
imul
sub
call
dec
pushf
in
adc
xchg
movsb
xchg
cmp
dec
xchg
es
into
test
shlb
push
and
mov
add
sub
repz
stos
sub
and
xor
mov
test
or
or
jae
enter
push
inc
xchg
jle
mov
fwait
xchg
cmpsb
or
fcom
dec
inc
lods
cltd
arpl
push
adc
pushf
out
adc
clc
sbb
clc
cld
lock
jbe
pop
cmc
push
enter
int
aam
roll
pop
hlt
pcmpeqw
mov
call
sub
or
fs
mov
cmpsb
mov
pop
jbe
and
outsl
test
shrl
push
push
push
jo
repz
clc
jmp
cli
sub
fsubrs
sub
dec
inc
cmpsl
push
cmp
xchg
jbe
cmp
sbb
clc
notl
or
xchg
cs
in
mov
mov
int
mov
jo
mov
inc
addr16
dec
in
mov
cwtl
jno
xor
js
sub
loopne
push
xchg
xchg
pop
mov
push
push
xorl
cld
ds
mov
ret
mov
dec
cmc
outsl
sahf
outsb
push
cmp
xchg
outsl
sub
xchg
cmpsl
scas
ss
add
lods
lret
xor
push
add
into
mov
loop
nop
mov
je
or
mov
rolb
sahf
add
cmp
push
js
cltd
inc
ss
mov
sbb
loope
mov
fiadds
repnz
clc
jno
xor
fwait
pop
inc
add
xorl
xor
jae
sbb
das
push
mov
push
enter
sub
mov
iret
in
inc
xchg
aam
mov
add
pop
or
adc
inc
shrb
mov
add
dec
push
lods
xlat
fstpl
fcompl
push
shlb
and
mov
pusha
je
xchg
adc
jle
stos
sub
ret
xchg
inc
push
jns
leave
or
dec
shrb
cltd
push
add
rcrb
ficoml
xlat
dec
inc
fsubrs
adc
sbb
leave
pop
lret
and
ret
sbb
pop
mov
push
js
test
data16
pushf
inc
add
test
out
jb
cmpsl
pop
and
cmc
push
ficoml
stos
leave
ja
xor
dec
mov
fbstp
sub
cmp
mov
outsl
push
insb
add
addr16
add
in
int3
stos
adc
mov
test
out
cmp
xchg
loopne
or
sub
add
ss
or
sub
pop
inc
mov
pop
int
dec
add
sub
test
pop
int3
subl
pop
in
jmp
mov
shl
jmp
aas
jns
dec
stc
mov
lea
iret
das
bound
or
clc
mov
ficomps
lahf
mov
fwait
in
inc
pop
mov
push
add
inc
ret
fisubl
cmc
jns
je
mov
xor
outsl
mov
cltd
add
int
test
inc
loop
jbe
push
into
lea
sub
lock
imul
test
scas
sbb
dec
daa
das
xchg
sbb
mov
xor
or
xchg
xchg
push
adc
fwait
and
bound
enter
mov
jecxz
pusha
adc
cmp
das
insb
test
decl
notb
scas
gs
ret
mov
sbb
stc
pop
dec
jmp
dec
push
lret
mov
xchg
int3
iret
sahf
inc
mov
sub
add
enter
cld
lock
jne
sti
popf
cmp
push
xor
cwtl
xlat
in
adc
lods
sub
pop
loop
sub
nop
dec
sbb
sbb
adc
popf
lahf
mov
add
rolb
movsb
dec
mov
push
mov
adc
enter
push
or
test
mov
sbb
xchg
stos
cmp
xor
adc
dec
icebp
inc
aaa
inc
adc
xchg
mov
test
lock
dec
cmc
inc
and
std
adcb
inc
loopne
and
pop
sbb
xor
sub
mov
sbb
mov
push
ljmp
bound
lahf
fs
jge
mov
xchg
cltd
daa
jne
mov
mov
xchg
inc
xor
xchg
jecxz
mov
xor
inc
mov
mov
and
lret
mov
lahf
push
lret
rcr
sarb
into
iret
xchg
test
int3
push
xchg
add
jbe
and
mov
xchg
lods
addb
jmp
popf
insl
cs
insb
clc
mov
sbb
xchg
mov
es
pop
fnstenv
dec
adc
or
adc
shlb
out
mov
inc
outsl
xor
sbb
cli
imul
aaa
and
mov
in
inc
pushf
sub
imul
adcb
mov
push
inc
mov
jge
pop
jmp
mov
dec
loop
arpl
sbb
xor
push
jecxz
sbb
pop
xchg
out
int
jo
pop
inc
adc
add
popl
imull
enter
or
daa
mov
pop
fcmovbe
jl
xchg
push
cwtl
lods
lods
leave
lock
test
daa
fidivs
pop
xchg
mov
lret
mov
pop
xor
and
jns
pop
pop
leave
mov
cltd
scas
int3
loopne
push
loope
dec
sbb
jbe
test
ret
sbb
lea
pushf
pop
pusha
and
jge
adc
sbb
insb
cwtl
cmp
mov
insb
mov
mov
addr16
xchg
pushf
and
dec
mov
mov
mov
mov
popa
in
subb
push
dec
nop
sub
mov
and
aaa
xor
rolb
dec
imul
andb
out
in
inc
fldenv
push
mov
pop
into
jl
dec
sbb
movsl
xchg
and
sbb
sbb
inc
into
jmp
stos
shrl
adc
add
fs
jg
mov
inc
lret
popf
xor
lods
push
mov
mov
add
dec
ret
iret
xor
add
cli
cmovo
lds
pop
pop
mov
mov
iret
lret
test
or
clc
int3
ja
dec
jp
pop
fisubrs
mov
pop
push
mov
xor
fwait
mov
push
cltd
dec
pop
scas
sbb
dec
inc
mov
das
leave
cltd
xchg
je
adc
aaa
rcl
and
jns
pop
imull
lret
or
dec
adc
scas
xlat
das
inc
js
add
push
imul
xchg
or
testl
xor
dec
sbb
repz
sti
mov
inc
mov
xchg
and
rol
test
cmp
mov
test
pop
mov
dec
imull
inc
push
cld
mov
xor
repz
pushf
jecxz
scas
or
push
rcrl
mov
hlt
test
xor
xor
bnd
and
sarb
mov
or
mov
mov
pop
lahf
inc
iret
dec
mov
ret
xor
inc
inc
inc
xchg
pop
jno
call
sub
dec
mov
stc
mov
mov
testl
cld
or
lock
and
inc
xor
icebp
mov
lea
add
push
sbb
jg
addr16
mov
xor
jno
xchg
inc
dec
sub
bound
pushf
xor
int
add
imul
adc
inc
lret
sbb
out
jp
notb
aaa
add
mov
xor
jnp
push
imul
inc
dec
dec
add
inc
hlt
ja
pop
pusha
dec
inc
adc
jnp
dec
shlb
push
push
or
mov
mov
lahf
jp
test
adc
inc
jge
inc
push
and
sbb
jbe
push
nop
mov
and
mov
dec
sbb
das
or
cmpsl
das
push
mov
aad
xor
pop
mov
cs
jg
adc
std
insb
jecxz
and
xchg
xor
xor
or
mov
or
idivl
xchg
xlat
ja,pt
arpl
xor
or
ffree
pop
pop
scas
jb
addr16
ret
mov
xor
dec
popa
xchg
rcll
fcmovbe
mov
add
mov
xchg
cmp
rcrb
jmp
sbb
pop
jg
out
jl
sub
cmpsb
pop
jnp
sub
mov
mov
mov
enter
xor
add
enter
or
adc
adcl
jmp
dec
sub
imul
leave
mov
in
inc
sub
mov
sub
jecxz
sub
dec
and
xor
mov
xchg
insl
ljmp
xlat
clc
and
push
imull
cmp
fs
inc
inc
adc
add
mov
icebp
mov
repnz
xchg
xor
data16
jbe
pop
insl
and
aam
in
cmp
cwtl
enter
sti
lcall
jmp
and
mov
fldl2t
call
jle
stos
inc
inc
mov
std
push
pop
cmpb
or
xor
and
std
and
lcall
aas
jge
insl
scas
add
jae
and
js
push
mov
ret
in
ja
stc
jne
shrb
cmp
mov
aas
cli
xchg
adc
sub
sbb
cmp
or
xchg
enter
or
mov
test
out
xchg
shll
pop
ret
fsubl
push
adc
adcb
jo
sbb
and
ret
orb
pop
not
add
lea
stos
adcb
mov
scas
pop
pusha
jp
cmpsl
cli
or
pop
fsubr
bound
xor
gs
pop
pop
sbb
shll
rcl
jl
jb
push
mov
dec
dec
mov
inc
adc
cltd
add
xor
mov
aas
jg
out
push
lahf
dec
inc
hlt
test
xlat
add
dec
es
int3
lea
or
xor
clc
ret
push
cmp
jg
mov
insb
std
and
call
cli
dec
lock
xchg
and
sbb
outsb
loop
xor
fwait
bound
aad
jle
sbb
ret
mov
test
sub
into
lods
inc
adc
and
push
add
insb
push
in
aam
or
aas
mov
xchg
add
jmp
fwait
lcall
cmpsb
jns
cli
fs
mov
loopne
not
aam
out
mov
icebp
push
or
jge
and
inc
and
xor
adcb
adc
jecxz
mov
cmpsb
and
mov
cld
lea
dec
mull
xchg
sbb
call
jle
imul
pushf
xorb
jge
lock
lea
es
and
push
pop
push
call
js
push
mov
xchg
jb
cmp
out
adc
or
mov
shl
out
jecxz
rcll
dec
push
addr16
scas
mov
enter
mov
pop
pop
jl
sbb
imul
sbb
int3
mov
xor
pop
or
icebp
sub
cmpsl
fisttpll
ljmp
xchg
fcmovbe
cmpsb
lds
loop
mov
ret
daa
pusha
rorl
xchg
mov
into
cltd
scas
loope
pop
lahf
cmpsb
int
jne
pop
imul
add
movsb
addr16
roll
xchg
adc
xchg
or
dec
sbb
out
adc
fyl2x
cwtl
and
and
sarb
popa
sub
xchg
int3
jmp
push
jo
out
push
rcrl
pop
jle
xchg
scas
mov
push
jne
push
adc
imul
pop
xor
subb
enter
jns
jecxz
fdiv
fadds
shrl
add
pop
or
pop
ljmp
sti
sub
pop
loopne
punpcklbw
faddl
jg
int
inc
es
lock
jp
add
jmp
test
sahf
shlb
je
adc
dec
loopne
push
sarb
test
fdiv
inc
ret
xchg
outsl
mov
insb
inc
xor
inc
lods
bound
test
shr
stos
outsl
dec
arpl
test
mov
xor
and
into
das
xchg
mov
jecxz
xchg
inc
or
and
xchg
repnz
push
xor
xchg
push
push
in
push
imul
dec
lcall
ss
por
or
fistl
pop
xchg
stc
mov
clc
push
xchg
or
les
pop
divb
push
test
lret
sbb
adc
stc
fildll
jecxz
loopne
faddl
xchg
sub
xchg
add
pop
sbb
push
mov
lods
fs
les
sub
stos
insl
mov
xchg
xchg
xorl
add
inc
inc
pusha
cld
jecxz
sub
notb
into
ficoml
cmp
rolb
inc
into
fcomps
xchg
outsl
mov
scas
cmp
inc
leave
and
movsl
jecxz
xor
loop
mov
out
push
movsb
mov
lret
lds
sbb
mov
stc
pusha
loop
mov
imul
es
mov
jno
imul
dec
lcall
test
cs
push
or
sbb
lret
adcb
ret
jecxz
mov
loope
pushf
add
mov
fisubl
int
jg
data16
mov
mov
sti
into
mov
inc
popl
cs
mov
punpckhdq
xor
scas
mov
inc
js
stc
mov
sbb
sbb
xlat
shr
adc
lods
mov
pushf
cld
rsqrtps
add
inc
mov
cltd
test
sarl
add
mov
push
test
push
jb
add
test
fidivrl
sarl
loop
in
aad
cmpsb
push
mov
jl
hlt
fsubs
ja
lea
std
movsb
adc
mov
faddl
das
xor
ja
cmp
out
fidivrl
xchg
mov
adc
sahf
adc
insb
ret
mov
xchg
xchg
jmp
inc
icebp
push
enter
rol
and
mov
sbb
inc
cmp
test
repnz
aaa
add
sub
push
scas
sub
sbb
daa
or
enter
fisttpll
js
repnz
repnz
mov
cmp
rcrb
add
push
push
movsl
xchg
adc
test
cmp
decl
pop
cmpb
cmp
jle
xchg
push
in
sbb
sub
stc
outsl
sub
mov
add
mov
jbe,pn
or
jle
jno
in
shl
push
inc
shlb
mov
inc
adcb
xchg
pop
mov
loop
aam
fbstp
xlat
mov
mov
lret
add
pop
xor
into
shlb
mov
pop
jb
and
mov
jns
nop
test
fsubrl
sbb
popf
cmc
cmp
iret
es
cli
jae
popa
idivl
lods
fdivl
sbb
fcompl
jo
inc
mov
jmp
mov
jns
fs
clc
sub
lds
std
pop
imul
sbb
dec
fisttpll
pop
sbb
sbb
mov
jno
ret
dec
jmp
enter
lods
sar
popf
inc
inc
add
loop
xchg
icebp
mov
jg
call
mov
pop
cmp
stos
sub
mov
dec
jp
jnp
ds
push
data16
ljmp
jo
stc
scas
rclb
nop
xchg
push
dec
cmp
and
mov
mov
ret
daa
bound
mov
les
movb
mov
outsl
jns
cmpsl
jne
push
mov
sub
popa
call
inc
nop
and
cld
aaa
push
xor
inc
es
push
push
jecxz
ljmp
xchg
fidivrl
mov
add
push
fsubr
inc
xchg
nop
sbb
out
adc
or
push
fwait
cmp
pusha
ljmp
std
in
push
adc
mov
movsl
test
jge
cmpsb
pop
mov
lret
jae
movsl
and
dec
add
lods
cmp
jne
jmp
aaa
repnz
rcl
pop
jmp
xchg
mov
adc
syscall
pop
pop
ret
sub
ss
cmp
adc
xor
xor
cld
sub
push
subb
mov
shll
push
cmpsb
mov
fnstenv
mov
sbb
sub
call
fcmovbe
pop
in
jo
stc
pop
xchg
adc
and
leave
dec
icebp
cmp
in
insl
mov
mov
dec
or
cli
hlt
mov
fs
xchg
sahf
mov
mov
inc
jle
aas
mov
xchg
sub
cmp
cmp
xchg
jb
xchg
addl
popa
std
insb
push
and
xor
inc
fs
sub
mov
pop
lea
push
lods
push
xchg
lahf
repz
cltd
jne
andb
push
hlt
xchg
push
and
pop
lcall
ret
cwtl
sahf
pop
add
lods
pcmpgtw
xchg
inc
outsl
outsl
jae
out
enter
dec
push
push
dec
lock
js
pushf
adc
inc
jge
sbb
cld
add
in
sbb
mov
push
sub
mov
sahf
or
cmpsb
int3
inc
outsb
daa
push
js
jmp
inc
and
call
cld
movsl
jle
cmp
pusha
sbb
shll
mov
dec
mov
pop
movsl
repz
inc
je
cmp
iret
pop
xor
das
fs
xchg
dec
je
int3
leave
inc
add
dec
mov
dec
bnd
test
fildll
inc
jb
ret
mov
xchg
fs
sub
push
inc
xor
loop
js
cltd
inc
loop
aas
es
ja
mov
fisubs
lea
sub
sub
sahf
xor
in
sub
scas
rol
stos
daa
icebp
sub
fcoms
sub
xchg
popf
sbb
mov
push
lret
nop
inc
mov
mov
fldcw
jb
sar
subl
test
mov
xchg
jge
add
add
ljmp
idivl
cmp
jns
in
ja
cmp
mov
pop
leave
mull
in
cs
loope
push
sub
leave
or
in
xor
push
flds
mov
xchg
bound
cmpsl
aad
cltd
iret
lods
xchg
mov
stos
nop
dec
mov
or
cmp
je
push
jl,pt
dec
ficoms
pop
mov
mov
mov
aam
add
ja
mov
cmp
pop
cltd
sub
sbb
in
jp
pop
cmp
add
repz
punpcklwd
int
cmc
sbb
dec
daa
jge
dec
mov
movsb
and
repnz
xchg
mov
sub
rolb
fidivl
cmpsl
fstps
sub
add
iret
fwait
push
inc
enter
and
push
xor
or
daa
nop
pop
pop
mov
or
cmp
mov
add
and
fcmovu
add
mov
cmp
addr16
es
and
int
les
lea
inc
in
xchg
cs
mov
sbb
mov
xor
sarb
sbb
push
cmpsb
mov
lods
out
mov
in
int3
stc
jmp
mov
jnp
and
sub
jbe
aad
dec
pop
pop
or
mov
cmc
xchg
pop
xchg
lds
inc
shl
mov
mov
rclb
push
cmp
arpl
sub
lds
divl
or
dec
cwtl
divb
mov
test
push
pop
lods
test
out
aam
call
adc
dec
popa
stos
inc
lock
mov
test
ret
pushf
inc
inc
icebp
jmp
in
data16
mov
insl
idivl
stc
mov
adc
jns
dec
add
lret
or
inc
dec
push
adc
mov
fimull
dec
pop
pushf
cmpb
inc
xor
data16
pop
push
inc
sub
nop
popa
xor
xchg
jae
mov
ret
out
lock
xor
ss
xor
mov
int3
mov
cs
push
ljmp
int3
inc
sahf
sbb
inc
lea
sti
call
pop
es
sbb
mov
int3
or
ja
fsubl
sbb
dec
xchg
sub
ljmp
add
repz
lea
mov
and
movsb
sub
inc
sbb
mov
in
or
ret
lret
cmc
cltd
pop
push
dec
nop
fisubs
mov
lahf
sbb
imul
jg
in
adcl
icebp
mov
fxch
xor
mov
sti
cmp
fwait
mov
cmp
or
cmp
out
adc
mov
pop
cli
mov
mov
insl
xor
xchg
insl
sti
inc
or
jbe
add
sbb
push
in
mov
dec
rorl
js
lahf
cltd
cmp
xchg
add
aas
jecxz
dec
mov
std
stc
enter
jecxz
adc
push
hlt
andb
cmp
iret
cmp
imul
dec
test
dec
ss
jae
xchg
push
loope
xchg
dec
and
mov
clc
mov
xor
out
cltd
xlat
je
mov
or
jae
jbe
cmpl
shl
int
xchg
orl
arpl
scas
rorl
push
inc
shrb
cmp
push
xchg
das
mov
lds
pop
xchg
rcll
mov
xchg
fldlg2
ljmp
add
pusha
cltd
xchg
lahf
scas
into
sbb
stos
lret
fidivs
bound
jge
shlb
sbb
stos
push
pop
fstpt
nop
cmpsb
cwtl
or
insl
mov
fidivs
mov
mov
xchg
adc
es
push
adc
mov
daa
sbb
sti
scas
cmp
inc
in
xorb
xlat
lahf
xchg
inc
ja
cmp
movsb
sbb
lcall
cmp
idivl
mov
mov
nop
fdivl
mov
nop
mov
and
pop
jle
fstpl
dec
push
mov
adc
jle
stos
and
pop
pusha
popa
arpl
loop
leave
mov
jle
adc
or
pop
pop
fnstenv
lods
push
dec
out
mov
cwtl
out
cmpl
cmpsb
lcall
mov
test
loopne
push
sub
xor
adc
lahf
or
fcmovnb
or
pushf
cmpb
inc
cltd
sub
pop
inc
mov
mov
movsl
daa
test
insl
mov
stos
mov
popf
popf
addl
popa
sbb
loopne
cmpsl
mov
fs
fwait
loopne
adc
push
test
popa
test
pusha
imul
xchg
jbe
ret
daa
stos
daa
xor
pop
idivb
dec
popa
ror
ss
insl
mov
lock
adc
int3
mov
sbb
inc
pop
subb
mov
lock
repz
int3
cmp
mov
fildl
cmpsb
jl
int
incl
dec
repnz
mov
pushf
outsb
lret
jnp
call
sbb
mov
lds
loopne
or
add
or
into
fidivs
sbb
movsb
jmp
out
test
add
jb
push
push
sbb
mov
sbb
scas
inc
mov
and
or
cmp
mov
jae
cld
aad
ret
push
std
add
std
jo
int3
outsl
xchg
xlat
sahf
push
in
jnp
fnstenv
xchg
mov
mov
inc
imul
or
aam
sub
jns
shlb
xlat
xchg
pop
pop
leave
filds
test
stc
mov
pop
out
cli
adc
stos
fdiv
fbld
add
mov
cmp
pop
test
mov
cwtl
int3
mov
fnstcw
test
enter
into
jnp
addr16
mov
push
incl
sbb
adc
loopne
sbbl
pop
lods
dec
sti
cmpsl
pop
dec
inc
in
mov
clc
loope
add
xor
pop
mov
out
push
das
icebp
mov
icebp
dec
adc
pop
mov
lcall
sub
fstpt
inc
xchg
test
mov
cli
jp
push
outsl
adc
gs
sbb
dec
lods
dec
jecxz
mov
outsb
push
test
daa
aam
cmpsl
andb
dec
insb
or
ficoml
fdiv
ja
pop
nop
cmpsl
sub
xlat
xchg
pop
loop
dec
xchg
jno
lds
bound
push
andl
cwtl
mov
icebp
out
insl
insl
and
int
inc
jg
test
jl
fsts
leave
mov
dec
or
mov
mov
mov
jecxz
enter
pop
ja
icebp
in
mov
rcll
dec
push
arpl
xchg
daa
mov
xchg
into
push
lea
mov
xchg
push
push
pop
hlt
xor
mov
mov
mov
jge
pop
or
mov
push
mov
cli
pop
dec
addr16
dec
gs
cmpsl
shrb
sbb
cmp
popa
inc
int
inc
pop
push
xor
push
mov
mov
add
es
and
stos
fiadds
add
andb
xchg
imul
fsts
ss
xor
mov
push
or
and
jg
scas
cld
adc
sahf
or
mov
loope
ret
repnz
dec
pusha
mov
dec
sub
daa
xor
lds
movsb
xor
sbb
adc
sysexit
loop
ret
fildll
andl
insb
data16
xchg
aam
sbb
adc
pop
xchg
jo
pop
jecxz
jo
push
aam
scas
mov
cli
aad
scas
xor
in
jb
cmp
pusha
call
dec
int3
stc
rclb
mov
jp
aaa
aas
push
cld
cmp
mov
xchg
in
xor
je
pop
mov
adc
inc
loope
mov
xchg
cld
pusha
test
aas
or
stc
lcall
sub
dec
ja
mov
cmp
add
adc
enter
repz
paddd
jp
stos
sub
nop
stc
fidivrl
pop
in
nop
test
push
mov
sub
and
mov
or
jo
ficoml
sbb
inc
ret
scas
mov
pop
mov
push
and
inc
cmp
test
mov
iret
xchg
movb
out
and
lret
les
lods
xchg
push
mov
gs
jb
popa
push
sbb
adc
mov
fdivrp
mov
cld
std
or
jmp
jg
adc
enter
call
adc
jnp
bsr
pop
pop
outsl
dec
in
mov
adc
fistl
xorl
pop
loop
clc
pop
dec
dec
or
cs
pop
mov
test
aad
push
jae
xchg
pop
movsl
xchg
in
jg
and
mov
clc
inc
inc
jb
movsb
arpl
xchg
sarb
cs
mov
in
sbb
lret
cwtl
dec
icebp
or
cmpsl
stos
xchg
push
addr16
adc
or
xor
leave
and
mov
loope
hlt
inc
jecxz
testb
fistpll
fldenv
mov
stos
or
jl
inc
adc
sti
add
stos
ret
shll
xchg
daa
and
or
stc
daa
and
ret
mov
bswap
mov
sbb
clc
mov
lea
sub
inc
add
mov
in
stc
jg
push
mov
ret
sbb
and
in
lock
gs
shll
jecxz
mov
stos
imul
inc
int
je
and
shll
and
lods
jle
dec
fwait
or
mov
mov
popa
mov
scas
adc
add
bound
jbe
pushf
jne
sub
xchg
repnz
mov
or
mov
xchg
enter
pop
sub
bound
push
xchg
lds
xor
mov
repz
cmp
ljmp
lds
popf
pop
ss
push
and
cmp
mov
mov
add
sub
mov
push
sbb
inc
mov
mov
sbb
jns
push
xor
jno
pop
into
cmp
cwtl
jmp
pop
in
sahf
add
enter
popf
pop
icebp
adc
xchg
mov
adc
or
sarb
push
jp
xchg
adc
fs
adc
pop
test
xchg
out
xorb
push
test
call
mov
inc
roll
pop
and
xor
xchg
jle
jecxz
or
ss
std
cmp
popa
xchg
imul
dec
out
movsl
and
in
out
push
fcomip
jg
or
adc
xchg
roll
xchg
push
std
fsubs
jae
mov
mov
std
movsl
sbb
stos
sbb
adc
and
ljmpw
stc
push
pop
inc
cmp
daa
fsubrs
jo
ds
push
adc
mov
mov
push
adc
pop
cwtl
or
fdivl
dec
cli
cli
stc
and
mov
sub
dec
or
test
mov
jp
loope
and
mov
add
mov
js
test
push
sbb
push
mov
mov
int
jno
sbb
jbe
pop
push
dec
insl
and
mov
lds
push
mov
mov
arpl
fnsave
mov
shll
mov
add
lret
enter
fdivrs
push
sahf
stos
dec
and
or
adc
pop
add
enter
les
loop
xor
or
dec
cmp
out
pop
int
sub
adc
shlb
ljmp
mov
sub
aad
imulb
gs
nop
pop
cmp
inc
stc
xchg
sbb
xor
mov
xchg
or
stos
jmp
scas
addl
lock
xchg
ret
lret
fistpll
leave
mov
and
into
push
fwait
or
jle
adc
mov
adcl
mov
cltd
imul
test
push
or
pop
sbb
loopne
jp
push
add
cmp
stos
ss
jbe
add
sar
aam
fs
lods
jp
xor
out
sub
dec
rcl
shl
xor
mov
iret
pop
scas
sbb
mov
xchg
sbb
inc
imul
and
cmp
cmp
repz
dec
cwtl
dec
mov
adc
sbb
mov
mov
mov
int
incl
andl
jmp
inc
mov
js
sub
xchg
mov
nop
mov
insb
out
and
mov
adc
inc
and
lcall
push
xor
xchg
in
adc
mov
addr16
lret
movsl
cmp
out
add
insb
imul
pop
mov
fmull
leave
sub
mov
movsl
scas
mov
rcrl
pop
mov
cmc
fstps
push
imul
mov
cmpsb
sub
nop
pop
pusha
out
inc
cmp
outsl
in
sub
jae
mov
pop
cmp
push
ss
lods
test
popa
mov
pop
pop
dec
daa
lret
sti
jb
mov
ja
xor
shlb
pushf
and
jl
jno
xchg
pop
int3
jne
mov
push
pop
sub
ljmp
in
addr16
lock
cmc
incb
insl
fsubl
test
sub
shll
dec
jg
jmp
movsb
inc
xchg
jo
mov
xchg
std
pop
fs
sub
inc
push
stc
loop
shl
mov
dec
cmpsl
xchg
push
mov
push
clc
xor
xchg
in
shrl
mov
mov
push
pop
dec
lret
sbb
lock
add
or
dec
push
in
cmp
dec
into
stos
shll
and
cmp
ss
aam
inc
sbb
and
mov
into
repnz
jnp
push
adc
notb
add
arpl
leave
jns
flds
sub
lods
push
cli
call
ds
mov
test
imul
ret
jge
shrl
add
arpl
jge
fsts
push
sub
neg
push
out
lret
sub
xlat
clc
arpl
mov
push
test
aad
out
lahf
mov
ljmp
mov
and
je
cwtl
stc
in
jnp
out
inc
sti
test
jl
sti
cmp
sbb
add
sbb
repnz
or
ret
ret
insb
in
push
rcll
test
jmp
pcmpeqb
clc
popa
inc
pushf
mov
sbb
hlt
es
push
jns
fst
dec
sbb
mov
xchg
xchg
pop
std
sub
sbb
mov
mov
stc
clc
xor
adc
cmp
xchg
or
jae
xor
xor
sbb
xor
in
mov
daa
js
push
mov
mov
ljmp
imul
ds
es
push
mov
add
out
dec
in
cs
xchg
inc
mov
or
cltd
ja
sbb
lahf
icebp
and
mov
push
push
in
push
ds
out
pop
rcrb
in
or
cmp
clc
repz
in
pushf
sbb
jge
push
int
and
ljmp
xchg
jns
or
and
or
add
mov
outsb
inc
push
jge
and
sub
cwtl
or
push
adc
pop
leave
and
xor
inc
mov
mov
push
mov
arpl
aad
gs
fwait
inc
mov
adc
sbb
inc
aaa
jle
jmp
jecxz
mov
rcll
mov
jg
xor
into
jnp
inc
fiadds
mov
add
dec
mov
nop
dec
stos
test
ja
stos
les
sub
shr
fnsave
das
popa
shrl
pop
pusha
imul
mov
push
mov
dec
or
rcrl
jo
pop
icebp
les
lcall
frstor
int
or
iret
pop
incl
shll
mov
add
and
dec
rcr
xor
mov
movsl
mov
test
push
jge
clc
and
push
xchg
pop
pop
jnp
mov
and
cmc
jp
pop
mov
dec
icebp
cltd
call
dec
mov
push
std
jb
mov
cmp
sbb
and
push
mov
sub
pop
and
add
movsl
adc
movsb
adc
xor
push
sbb
mov
repnz
cmpsb
lcall
push
xlat
test
mov
xchg
dec
jno
xorl
ljmp
nop
adc
and
push
and
ds
scas
push
mov
loopne
int3
aad
mov
in
adc
jmp
in
es
sahf
data16
fnstenv
xor
flds
aam
sub
sbb
movsl
pop
testb
or
cmp
das
insl
adc
inc
sbb
gs
push
xor
jno
ret
sbb
pop
sub
pop
pop
sbb
jmp
lret
hlt
sub
cltd
pushf
in
daa
mov
sub
int
ss
sahf
mov
popa
fldenv
fidivrs
jns
push
sbb
test
in
aam
loop
fiaddl
cmpsl
mov
mov
dec
enter
dec
into
aad
mulb
leave
add
dec
inc
fdivrp
in
mov
sbb
sbb
xchg
and
pop
xor
xchg
jae
sti
mov
int
movsl
inc
daa
xchg
push
xor
in
sbb
or
xor
cmp
xchg
jmp
hlt
xchg
push
push
insl
fldenv
xor
insl
gs
adc
pop
xor
fbld
inc
jno
stos
mov
jb
jle
jge
sbb
xchg
in
adc
mov
mov
mov
shl
and
das
mov
push
out
cs
loopne
pop
sub
mulb
inc
nop
cwtl
mov
ret
repz
mov
pop
pop
aas
fdivr
mov
and
cmp
mov
add
mov
pop
adc
lea
inc
movsl
fdecstp
xor
dec
hlt
push
adc
and
jne,pt
inc
mov
push
adc
filds
in
js
int3
pop
rolb
pop
insb
fdivr
jmp
ret
push
or
dec
roll
data16
das
mov
inc
jge
clc
pop
in
fstl
jb
lret
outsl
xor
push
xchg
xchg
es
in
or
mov
frstpm(287
push
jbe
imul
sti
ficoms
icebp
inc
ret
insl
in
push
shr
push
pop
aaa
outsb
push
inc
push
in
and
sub
cmp
test
jo
insb
popf
mov
sub
and
mov
imul
xchg
leave
mov
mov
pop
xor
bnd
mov
xor
mov
stc
sub
loop
fs
out
add
push
pop
xor
dec
aas
sub
and
mov
pop
mov
loop
out
int
sbb
jo
add
sub
imul
flds
test
and
in
lcall
jne
xlat
jmp
sub
cmp
mov
jo
test
out
or
aas
popf
xchg
xorl
xlat
fists
call
mov
cmp
shrb
push
xchg
sbb
inc
mov
ror
sub
movsb
xchg
stos
enter
mov
pushf
je
inc
stos
mov
cltd
mov
gs
mov
mov
popf
push
into
mov
dec
mov
stos
adc
lods
push
shrl
adc
and
ret
xor
dec
add
ljmp
jl
adc
cmp
xor
rorl
dec
mov
js
xchg
outsl
test
jae
mov
mov
ds
call
fbstp
popa
outsb
xchg
add
jns
cmp
push
mov
daa
clc
xchg
push
xchg
pop
scas
cli
lcall
push
mov
and
sbb
push
or
xor
pop
add
cli
call
xor
push
sahf
cmpsb
int
pop
xor
shrl
cs
sub
add
into
fists
mov
std
call
sbb
movsl
or
roll
push
pop
push
or
cmpsl
roll
and
incb
mov
push
or
sbbl
add
nop
lcall
sub
sbb
jns
out
sbb
adc
ficompl
pop
add
mov
jmp
cmpb
adc
pop
cmp
out
adc
mov
movl
cmpsb
sub
pop
mov
fbstp
aad
push
push
cli
dec
ret
int
popa
push
cwtl
and
pop
and
ret
dec
int
movsb
dec
test
rclb
loop
mov
stc
inc
inc
jns
fdivr
fs
xchg
bound
inc
mov
xchg
pop
sub
insb
negl
popf
in
call
stc
adc
in
lahf
in
ljmp
pop
or
mov
roll
push
and
sbb
sbb
cmc
ret
lea
std
shrl
xor
out
pushf
sbb
repz
jbe
enter
andl
xchg
aam
gs
cli
pop
out
mov
jg
sub
sub
nop
test
pop
mov
insl
insl
testb
or
gs
adc
hlt
ficoml
and
sub
sti
sbb
cmp
mov
rol
loope
bound
and
aad
insb
aaa
icebp
push
push
jo
xchg
aad
adc
add
repz
les
sbb
lds
mov
leave
aam
push
sub
jns
mov
push
and
bound
mov
mov
push
and
aad
cmp
orl
sub
shll
cli
mov
scas
data16
insl
fwait
jo
cs
outsb
fisubs
sub
or
sbb
fbld
jnp
mov
pop
rcr
js
sub
or
leave
clc
dec
mov
push
mov
and
gs
push
jge
xchg
cmp
sbb
dec
lret
es
lahf
test
xchg
add
in
loop
or
dec
dec
mov
and
or
xchg
lock
call
add
sti
pop
xchg
mov
mov
sub
jl
xchg
adc
mov
dec
cmp
icebp
dec
cmp
sub
push
movsl
adc
mov
outsb
gs
scas
add
jge
mov
or
lods
inc
mov
shlb
subb
add
les
mov
daa
fdivrs
imul
dec
sbb
mov
add
pop
add
xor
xchg
add
xor
jmp
in
sub
and
jg
clc
xor
movsl
xchg
lahf
or
into
and
add
pop
push
lods
add
pop
pop
adc
or
inc
xor
addl
leave
mov
sub
orl
pop
adc
sbb
loope
inc
out
sub
lock
and
outsl
mov
add
or
jo
pop
pushl
fs
sbb
and
aad
jle
mov
fidivrl
inc
rclb
cmp
enter
push
cltd
mov
jbe
push
dec
inc
sub
fildll
cmp
pop
bound
cmpsb
sbb
addr16
enter
adc
sub
cli
mulb
jmp
xor
divb
or
aad
jge
out
subl
js
sbb
js
addb
aas
das
bound
xor
pop
aam
pop
pusha
jnp
out
push
mov
jecxz
mov
orl
pop
pop
lahf
fsubr
pop
jle
gs
rolb
mov
into
clc
aam
stc
notl
push
loop
jmp
jbe
hlt
fnstenv
adc
mov
xchg
adc
fldenv
cmp
fistps
sbb
pop
and
outsl
dec
add
test
jbe
mov
lcall
pop
negb
jecxz
push
xchg
push
adc
mov
mov
xlat
xchg
daa
and
les
or
mov
les
or
push
icebp
mov
mov
lret
movsl
jge
pop
call
fsubrp
aaa
mov
sub
stos
jp
aas
js
leave
fwait
mov
push
pusha
mov
add
test
sbbb
pop
das
inc
inc
jecxz
jp
adc
repnz
pop
cmp
int3
xor
jne,pn
stc
roll
pop
add
or
stos
lock
sahf
adc
sahf
test
insb
notb
movsb
out
cld
das
lret
push
stos
pop
movsl
jae
fwait
dec
sarb
or
add
addr16
mov
fstpl
loopne
inc
dec
mov
dec
imul
out
dec
insl
andl
jg
inc
popa
add
xorl
cmpsl
repnz
mov
mov
push
lds
mov
and
cli
inc
lods
out
mov
mov
movsl
out
ja
mov
popf
and
inc
xchg
pop
ret
addb
adc
fcmove
dec
adc
movsb
mov
sub
mov
cwtl
push
enter
jge
lret
xor
ja
sti
mov
testb
xchg
pop
fmuls
bound
lahf
aad
std
sbb
mov
cs
inc
dec
out
imulb
push
xchg
sarl
jmp
cmp
popf
sbb
xchg
xor
jne
hlt
sar
push
mul
faddl
xor
fiadds
repnz
xchg
xchg
lods
aaa
mov
xor
mov
movsl
idiv
hlt
mov
xor
lea
mov
lock
ja
outsl
in
popf
sub
push
fisttps
mov
inc
in
mov
xor
push
movsl
pop
mov
in
jp
mov
jmp
cmp
sahf
lock
jae
in
pop
xchg
mov
or
dec
js
repz
sub
call
cmp
cmp
enter
push
inc
movsl
and
push
xchg
pop
bound
xchg
pop
dec
pop
fwait
fwait
or
cmp
sbb
popa
rcl
stos
ret
cltd
jmp
data16
inc
aam
cmp
pop
js
js
ds
scas
or
adc
js
push
imull
enter
jne
lahf
jg
call
dec
sub
xor
divl
cmp
mov
add
shl
pop
dec
mov
mov
xchg
push
dec
sar
pop
mov
mov
in
mov
sub
push
ja
cs
fldenv
cmpsb
in
mov
lods
mov
lcall
movsb
adc
sub
or
adc
mov
or
loope
fisubrs
inc
pop
mov
and
imul
lret
ret
or
cmpsb
mov
mov
pusha
int3
pop
icebp
or
je
xor
loope
not
adc
push
xor
pop
popa
lock
ficompl
stc
into
adc
test
xchg
adc
mov
rcrb
xchg
jne
leave
loopne
push
aas
pusha
mov
mov
mov
sbb
mov
aad
xchg
inc
frstor
dec
push
dec
or
sbb
ss
or
adc
dec
mov
inc
subb
stc
sahf
std
xchg
push
push
shll
dec
mov
sbb
imul
mov
adc
inc
pop
popa
pop
mov
push
jle
jecxz
inc
imul
add
push
mov
lret
adc
jge
enter
es
and
int3
sbb
arpl
mov
iret
add
push
cmp
xor
inc
cwtl
aaa
jecxz
aad
xchg
dec
ds
sub
fcmovu
cmp
sbb
mov
jmp
loope
add
cli
pop
mov
push
sub
fimull
lret
jnp
adc
stos
mov
lods
cld
xor
fwait
cmpsl
and
adc
dec
xchg
push
add
mov
jecxz
lods
sub
fcompl
nop
int
add
or
rcll
inc
mov
xor
stc
dec
xor
dec
das
dec
movsl
pop
in
and
lahf
movsw
xchg
or
cmp
pop
pslld
or
and
outsb
test
fidivrl
lahf
loope
fmuls
test
sbb
je
sbb
sub
pop
mov
push
enter
or
add
rcl
sub
mov
mov
notb
push
icebp
xor
adc
or
mov
cmp
addb
pop
lds
test
xchg
push
call
adc
mov
jge
adc
popa
lcall
stos
popa
leave
add
jmp
push
lods
xor
xor
sbb
in
and
ljmp
and
mov
pop
inc
bound
mov
xor
std
nop
mov
sbb
cmp
out
outsb
or
movsl
aam
jge
les
mov
xchg
sbb
and
push
lock
repz
mov
cmc
adc
sbb
inc
adc
jo
dec
xchg
pop
rolb
add
pop
bound
shr
fs
jo
push
cmpl
xchg
mov
or
push
mov
imul
xchg
and
imull
add
out
stc
jne
int3
mov
aad
shlb
sub
cmp
into
mov
hlt
cmp
sti
pop
cmp
dec
mov
nop
rorl
mov
mov
lahf
cmp
in
in
mov
xor
ljmp
in
mov
icebp
inc
mov
cmp
out
sub
pop
pop
insl
shrl
pop
jne
mov
sub
dec
inc
inc
pop
iret
cld
jne
out
sub
jle
and
sbbb
push
xchg
cli
pop
call
add
dec
ljmp
loopne
outsb
xchg
dec
orb
insl
and
mov
fst
in
sbb
ljmp
imul
ds
hlt
pop
jle
mov
dec
mov
aad
and
lcall
inc
xchg
lret
adc
jge
xchg
push
or
lret
fistl
mov
xchg
xor
sbb
xor
or
pop
ret
sahf
fwait
outsb
mov
dec
or
ja
pop
push
cmpsb
push
sbb
das
sub
pushf
imul
aas
xor
cld
push
sbb
fs
sbb
jg
adc
ret
push
popf
and
loopnew
pop
scas
pop
cwtl
out
pusha
fxch
stos
sub
add
inc
xor
sub
sbb
inc
ficomps
pusha
leave
shll
aas
and
or
jmp
sbb
loope
repnz
jb
das
add
mov
sub
sbb
lret
lret
out
push
out
test
sti
or
lock
shll
dec
cmp
aam
push
sbb
iret
add
inc
dec
lret
inc
les
cld
cmp
cmc
lea
push
repnz
pop
cmp
jecxz
fisubs
loopne
test
nop
pushf
repnz
add
mov
adc
lea
pop
dec
sahf
sub
andl
in
fidivs
xchg
lret
jae
cmpsb
mov
pushf
sarl
and
add
xchg
pop
dec
stos
mov
mov
jnp
fwait
mov
popa
xor
leave
cmpsb
repnz
mov
jne
fs
fstl
scas
lds
adc
insb
int3
cltd
lret
je
inc
and
lcall
rorb
sbb
and
jbe
xor
and
dec
mov
jecxz
xor
cmp
cmc
pop
bound
sahf
icebp
loope
push
jb
jns
or
cmp
add
jle
or
adc
pop
dec
int3
in
test
sub
je
bound
xchg
repz
fdivrs
mov
sub
mov
push
jecxz
in
enter
jg
fstpl
push
rcrl
push
cmp
xchg
ret
xchg
xor
aas
jbe
adc
fwait
imul
lods
mov
clc
or
call
sbb
inc
mov
push
sarl
xchg
dec
mov
fisttpl
into
sti
mov
xchg
test
ss
inc
aam
sarb
push
aaa
fistpl
push
movb
imul
stc
jl
insl
insb
fsubl
push
mov
test
jl
add
lret
repz
inc
sbb
add
loop
jnp
ds
fidivl
jge
sub
fwait
mov
sbb
lret
or
xchg
into
push
in
jecxz
shlb
pop
adc
push
xchg
std
cltd
mov
xchg
lock
cmovne
xchg
push
and
sub
int
push
inc
pop
in
adc
adcb
xor
xlat
in
jno
mov
inc
sbb
es
adc
or
jno
enter
dec
push
xchg
daa
push
out
ds
push
dec
imul
mov
lds
stos
imul
rclb
xchg
push
or
pop
adc
rcrl
movsb
bound
adc
mov
jbe
push
pop
mov
push
jns
lret
rol
cltd
cmc
loopne
dec
ret
testb
aaa
bound
and
mov
sbb
push
xchg
daa
insb
xor
in
mov
push
bound
mov
add
lods
stos
or
jnp
movsl
cmc
adc
hlt
jae
push
mov
fs
fbld
sbb
or
jmp
jge
pop
and
cmp
jmp
int
cwtl
dec
les
lret
fisttpll
jl
or
icebp
pop
out
lods
out
outsb
das
pop
repz
add
cltd
fdivrs
and
pop
mov
outsb
xor
add
addr16
inc
push
aaa
ss
std
hlt
mov
dec
pop
lcall
inc
insl
clc
sahf
jmp
gs
inc
dec
insb
mov
fstpl
mov
fsub
into
orb
pop
cmp
mov
jg
mov
ja
ret
cli
mov
movsb
aaa
arpl
inc
push
addr16
cs
dec
jno
test
loope
mov
adc
mov
test
pop
adc
lcall
test
or
jno
mov
xchg
fstps
lcall
mov
lods
push
sub
pop
mov
or
sub
push
cmpsl
repnz
mov
xchg
movntq
test
sub
dec
cmp
and
sbb
push
ud0
push
xorb
ficomps
mov
jbe
sti
jae
pop
mov
loopne
cmp
xchg
push
jmp
outsb
cmp
fisttps
mov
mov
test
add
dec
xor
jl
inc
adc
push
xor
jl
sub
and
mov
test
cmp
xchg
ret
out
mov
push
lret
cmovns
call
out
lea
push
xor
push
lds
jmp
fidivrl
jge
imul
mov
insl
mov
scas
in
jge
mov
push
xchg
pop
aaa
in
aad
cmp
lds
mov
xlat
push
mov
lock
sbb
lods
pop
xchg
cmp
int3
icebp
mov
ds
loope
add
push
inc
std
movsb
bswap
fsubr
mov
popa
xchg
dec
jne
cmp
int
sbb
jge
push
addl
imul
pop
jg
and
dec
sub
nop
lcall
pop
push
jmp
lahf
fcoms
cmpl
popa
adc
push
int3
jne
inc
aaa
outsl
push
xlat
ret
push
pop
lcall
notl
mov
hlt
cmp
fbld
sub
dec
and
fdivl
adc
dec
call
fidivs
xchg
inc
rcrl
mov
add
divb
fsubrl
adc
or
xchg
xor
jns
xchg
mov
or
adc
lods
inc
cwtl
pop
in
mov
pop
das
fdivs
xor
pop
mov
dec
xchg
movsb
repz
incl
aaa
and
or
dec
int3
dec
mov
iret
xchg
mov
repnz
lea
xor
fnsave
and
mov
shrb
pop
adc
sub
jge
mov
into
mov
push
shrl
jno
in
adc
rcrb
mov
and
popf
js
imul
int
cmp
push
idivl
testb
fcmovnbe
fs
notb
vpaddsw
cmpsb
inc
mov
test
dec
pop
mov
psrld
stos
pop
shl
xchg
cmp
pop
pop
mov
and
dec
stos
inc
sub
nop
ds
aas
fcompl
mov
test
mov
xchg
dec
sbb
sub
out
mov
std
ss
inc
addl
icebp
mov
inc
lds
sahf
mov
int
js
lahf
xlat
frstor
add
fldl
les
or
dec
mov
push
and
cmp
test
mov
jnp
sbb
push
xchg
iret
sbb
and
sbb
rorb
fwait
or
mov
inc
pop
lcall
fwait
pop
hlt
inc
icebp
rcrb
arpl
or
jno
sub
int3
repz
xchg
ret
sbb
and
mov
movsl
in
std
sub
aad
pop
fldcw
xchg
mov
sbb
add
je
sti
mov
sbb
je
dec
cmp
std
movsl
cltd
movsl
mov
sti
leave
in
sub
and
insb
sti
mov
sub
inc
rcl
scas
xchg
push
mov
test
xor
insb
add
int3
fstps
jne
dec
jl
aaa
jae
mov
cmp
xor
adc
popa
jns
shlb
xor
mov
cmp
ret
or
mov
xor
in
and
jb
addr16
pop
add
ror
sahf
sbb
cmpsl
pop
dec
enter
dec
ja
pop
dec
sub
lahf
rcl
pop
fcomps
xchg
push
cld
add
xor
movsb
mov
dec
add
stos
sti
push
movsl
pop
jmp
fldl
in
dec
mov
xor
lret
stc
std
adc
sbb
mov
pushf
mov
stc
add
fisttps
jo
sub
cs
outsl
addl
add
xor
mov
add
mov
aad
push
sub
push
ret
adc
pop
aas
in
stos
add
scas
and
xchg
das
js
pusha
dec
xor
ret
push
mov
xchg
cmp
lret
and
mov
jo
or
dec
adc
mov
imul
ret
lods
cmp
mov
jl
lcall
xor
push
add
pop
ficoms
adc
push
outsb
xchg
adc
addr16
add
push
int
and
and
mov
sub
nop
test
jmp
adc
out
rclb
cwtl
add
out
sub
stos
addr16
inc
jmp
push
aaa
sarl
lcall
and
push
jnp
push
cmp
add
pop
jmp
jp
cmpsl
loop
out
insb
mov
pushl
and
shlb
lcall
or
rolb
pusha
adc
fisttps
daa
test
inc
sbb
lret
pop
test
xchg
ja
aaa
fdivrs
push
xor
inc
or
pop
and
or
cmp
jae
pop
sbb
xchg
sbb
lock
push
imul
and
aas
mov
sub
add
aaa
in
mov
jge
test
sbb
fucomi
jecxz
push
cli
mov
addr16
sub
sub
int3
push
and
mov
lods
lret
add
shll
dec
sub
inc
in
rcll
lods
bound
test
adc
test
pop
aam
push
ret
enter
cmpsb
jns
in
xchg
sahf
jae
mov
in
and
insb
xlat
mov
dec
mov
mov
hlt
fimull
cmp
mov
aaa
sub
shl
lea
movsb
clc
mov
nop
popf
outsb
fcompl
test
push
fwait
add
cmc
in
in
mov
xor
jl
fcomps
pop
mov
stos
xlat
push
cmp
mov
cwtl
ljmp
sbb
and
adc
push
sub
mov
jecxz
or
pop
scas
adc
jne
pop
rorl
repz
cwtl
enter
add
cmpsb
nop
push
popa
inc
push
notl
iret
js
inc
test
int
aas
xchg
xchg
mov
dec
repnz
scas
enter
cs
popa
mov
stos
push
pop
test
jns
xor
or
cmp
inc
mov
test
cli
dec
sbb
xor
push
xor
push
daa
jns
jmp
cltd
aaa
cmp
cli
bound
adc
loop
add
pop
dec
cs
in
idivl
mov
aad
lret
mov
int
sbb
dec
mov
scas
popl
mov
stc
jae
mov
stc
shl
jbe
addr16
cmp
inc
dec
xchg
push
in
cld
xchg
or
enter
add
inc
test
test
inc
cmp
mov
test
push
pop
test
adc
mov
push
sub
sahf
xlat
int3
mov
les
and
cwtl
cli
enter
outsb
or
jmp
adc
xlat
sbb
outsl
shlb
dec
rorl
loope
mov
dec
or
inc
stc
pop
popf
pop
cmp
xor
mov
popf
aam
or
cmp
rclb
mov
test
adc
mov
clc
inc
gs
mov
xor
cmp
xchg
push
sbb
stos
pmaxsw
adc
int3
mov
sti
lret
push
dec
ljmp
jnp
popa
bound
adc
aam
test
mov
mov
jne
pop
cmpl
sarb
fwait
xor
add
pop
mov
push
pop
inc
lea
notb
lcall
jae
dec
pop
mov
jle
enter
test
xchg
in
jp
and
adc
clc
or
fs
or
mov
cld
sub
aam
lret
lods
aaa
loopne
sarb
sbb
arpl
rcll
inc
jbe
adc
jmp
and
xlat
dec
in
aaa
rorb
sub
lret
push
mov
add
pop
pop
ret
aas
rclb
jmp
lret
dec
enter
xlat
outsl
outsb
jbe
pushf
cmpsb
xchg
inc
adc
fsubp
push
mov
sub
push
lock
aas
push
lea
mov
fisttps
pop
push
dec
movsb
cmp
sub
cmp
xchg
lret
dec
cmp
xchg
fcmovbe
std
push
push
pop
lods
scas
or
push
mov
adc
cmpsb
and
addr16
popa
push
test
push
ljmp
pop
jne
jge
repz
fisubl
or
out
jge
sbb
cmp
xchg
cmp
adc
std
fsubp
test
push
cmc
pushf
js
out
mov
mov
sbb
inc
or
jno
adc
pop
loope
sub
jne
push
jle
mov
gs
pop
add
je
sub
jns
fists
cmpsl
sti
and
sbb
loope
into
fldcw
mov
xor
xor
shll
jge
dec
jle
movsl
stos
cmp
sub
xchg
in
or
mov
pushf
lods
mov
movl
push
sti
sub
xlat
sarl
and
subb
inc
in
push
daa
jl
and
adc
rclb
or
xchg
inc
cmp
jmp
ds
cmpsb
cltd
fwait
jmp
push
out
or
addps
mov
imul
mov
adc
adc
jl
push
in
cmp
xchg
cmp
dec
mov
jbe
xchg
mov
enter
cltd
pop
adc
push
add
gs
or
mov
fmuls
in
jge
xchg
push
in
push
inc
pop
pop
in
rol
dec
je
mov
xchg
or
jne
std
push
lret
fwait
jb
aam
add
pop
in
lods
cmp
jae
stc
into
and
mov
push
jb
fstl
jbe
insl
insl
iret
stc
inc
mov
cmpsl
insl
mov
cwtl
sti
int
rclb
push
addr16
movsb
mov
mov
jge
out
fldz
jnp
push
mov
addl
cmp
test
xlat
add
cmp
add
jmp
and
loopne
insl
adc
jae
imul
jp
xchg
adc
pop
xchg
mov
in
push
add
cwtl
leave
mov
pop
cmpl
jmp
push
iret
das
lret
xchg
xchg
add
or
pop
stos
lcall
insb
add
jbe
out
push
loopne
test
jo
inc
sub
mov
add
stos
pop
cltd
cs
sbb
ret
lock
movsb
repz
sbb
daa
sub
aam
cmp
or
es
add
mov
in
cmc
adc
xchg
sbb
fmuls
lods
lahf
dec
xlat
test
shlb
cmp
out
push
pusha
inc
popf
les
sahf
push
dec
xor
jb
push
xor
mov
jle
dec
ret
xor
popa
pop
popa
push
imul
test
xchg
lcall
add
das
divb
cmp
mov
lock
push
xchg
xorb
cmp
movsb
scas
leave
dec
out
cli
mov
and
xchg
jno
dec
and
scas
push
push
mov
shll
lret
dec
fdivr
pop
lods
or
jo
jg
mov
add
push
stc
push
mov
out
sahf
and
sub
ss
jmp
mov
and
add
mov
sub
pushf
sbb
mov
add
adc
sub
sti
in
jmp
pop
cld
daa
test
xor
mov
cmc
cwtl
cltd
test
mov
loopne
mov
jbe
jbe
add
andl
jmp
xchg
mov
xor
inc
cltd
int3
insl
mov
add
cmc
inc
out
int
das
pop
ds
sbb
cmpsl
hlt
iret
lds
lret
xor
mov
scas
jnp
leave
xor
or
push
jns
mov
cmp
xchg
repnz
and
adc
sbb
xor
add
mov
xchg
push
lcall
jmp
jp
test
pop
cmp
mov
repz
fists
dec
or
popa
dec
icebp
adc
lea
arpl
jg
mov
lods
and
sti
pusha
or
lods
xchg
or
rcrb
inc
adc
jns
cli
jmp
lcall
cmp
clc
leave
hlt
push
leave
mov
mov
push
es
jo
es
fcomps
xor
add
cs
jmp
in
stos
cmp
sbbb
add
mov
push
xor
jae
out
mov
jmp
ds
pop
pop
imul
dec
inc
push
inc
xchg
insw
xchg
jecxz
outsl
push
int
faddl
ficomps
out
ljmp
pop
mov
hlt
inc
xor
aas
jb
fmulp
xchg
jb
xchg
test
ret
mov
cmp
lods
cmp
scas
fidivrs
mov
and
sti
jl
mov
movsl
in
lock
adc
jne
sub
fbstp
out
inc
sbb
repnz
xor
fcmovne
cmp
dec
out
dec
inc
cld
outsb
dec
xchg
mov
mov
scas
pop
or
jns
test
loopne
aaa
cmc
sub
daa
shlb
push
adc
adc
dec
fbstp
xchg
lahf
mov
stos
popf
aas
xor
lock
movsl
add
and
cmpsb
jno
and
pushf
lods
or
push
and
or
int3
and
mov
sahf
mov
cmc
push
adc
loopne
andl
std
adc
pop
imull
cmpsl
dec
add
cwtl
insl
test
hlt
repnz
push
decb
std
pop
pusha
mov
mov
mov
mov
mov
jae
jge
mov
push
ret
and
imul
sub
scas
jecxz
mov
xchg
cmc
jle
cmp
aad
add
shrl
pop
sarb
out
arpl
cmc
sbb
xchg
sub
mov
scas
sbb
push
popf
cmc
sub
mov
stos
cmp
adc
lea
popa
inc
ss
repnz
insl
jle
fwait
ljmp
aam
pop
xor
push
lret
int3
push
mov
jge
jno
mov
and
clc
lret
cmpl
or
push
das
or
test
pusha
xchg
scas
aam
dec
shr
dec
loope
loope
div
push
arpl
js
and
mov
jg
out
test
ret
pop
mov
cs
into
lds
xchg
jl
push
sub
imul
jo
pause
mov
xorb
mov
xchg
pushf
addr16
jae
aas
dec
sub
or
ficompl
imul
fnstenv
xchg
lods
mov
jecxz
mov
cmc
jne
inc
sub
mov
jo
test
pop
ret
mov
push
cmp
sbb
and
subl
xor
mov
cwtl
or
pop
inc
aam
mov
or
push
mov
mov
dec
fidivrs
popa
int
xchg
loope
fsubs
lret
cmp
imul
jns
cmc
mov
gs
add
dec
dec
pop
adc
inc
fists
lret
fistpll
pop
out
push
push
aaa
out
lahf
inc
pop
out
inc
repnz
mov
repz
jg
mov
test
push
jle
dec
int
in
push
addr16
lret
mov
xorb
test
sbb
je
ficomps
popa
jo
dec
scas
sbbb
inc
out
cli
clc
jl
dec
dec
sbb
imul
pop
jg
int
mov
sarb
lea
test
les
sub
data16
popf
xor
adc
testb
adc
mov
cltd
and
lock
and
mov
loop
movsl
sbb
xor
pop
shlb
mov
mov
pop
mov
ss
xchg
mov
sub
xchg
pop
add
or
and
dec
test
int
rclb
push
mov
mov
pop
xchg
jns
sub
and
mov
adc
shrb
push
loopne
mov
xorb
insb
jno
ss
or
mov
push
inc
push
gs
adc
hlt
cwtl
nop
cmp
or
fsts
dec
jle,pt
call
jg
je
mov
xor
flds
aad
push
xor
sbbl
pop
dec
jnp
sub
push
lret
lods
or
mov
outsb
loope
pop
push
lcall
xor
idivl
adc
jmp
shrb
popl
leave
sar
repz
sahf
js
jge
loopne
or
outsl
inc
in
aad
sti
cmpsb
daa
outsb
dec
cs
sub
sbb
sbb
mov
jp
cmp
jl
adcb
ja
ljmp
aam
inc
stc
cmpsl
ret
mov
test
cld
call
out
ret
inc
add
shr
mov
jmp
xor
aas
xor
and
sub
sub
dec
jo
into
es
movsb
pop
cwtl
mov
cmpsl
mov
adc
int
or
orl
push
adc
cmp
jmp
mov
mov
fstl
push
inc
sbb
int3
mov
inc
cmp
imul
stc
imul
imul
pop
gs
push
adc
in
cmp
xlat
in
mov
xchg
push
fwait
cmp
mov
jge
shr
inc
cmp
and
lahf
cmp
adc
cmp
xchg
cld
xchg
aaa
ss
shll
cld
cs
lea
xor
mov
jg
fisubrs
jb
cltd
push
iret
jecxz
cltd
out
mov
sbb
lock
out
repz
xor
movsl
mov
lret
adc
pop
push
nop
adc
out
cli
cld
xchg
inc
add
and
sbb
xchg
push
mov
cmc
sub
mov
mov
out
lock
inc
lods
dec
xchg
mov
lock
dec
push
sbb
and
jl
sbb
cmp
popa
aaa
sbb
dec
test
jns
repz
inc
movsb
loop
sub
fnstenv
lahf
cwtl
add
jle
push
stos
cli
adc
jmp
cmp
push
and
icebp
mov
sbb
aas
test
and
mov
jno
push
or
push
cmp
ljmp
insb
cmovp
mov
mov
cmp
in
mov
inc
xchg
mov
test
inc
out
xlat
js
push
popa
mulb
sbb
push
jo
stos
js
cmp
xlat
idiv
daa
mov
hlt
inc
xchg
mov
inc
and
sti
and
sti
pop
xchg
int3
sbb
sti
ds
push
and
push
xchg
or
dec
lock
add
xchg
mov
adc
in
movsb
enter
rcrl
push
movsb
cmp
xchg
pop
sbb
adc
stos
sbb
test
stos
dec
cwtl
pop
inc
pop
sti
add
add
aad
sbb
add
mov
in
mov
shlb
ss
and
jno
inc
mov
js
push
cmp
mov
mov
shlb
inc
sub
loopne
cmp
cmp
or
leave
mov
hlt
cmpsl
or
lret
or
loop
xor
mov
es
stc
ss
into
aad
or
pop
xor
loope
cwtl
into
and
inc
jns
ret
inc
jo
movsb
aas
xor
in
flds
add
pop
mov
sbb
movsl
lods
js
dec
icebp
or
repnz
cli
call
aaa
int3
xor
add
dec
add
dec
mov
pop
pop
mov
jbe
or
lea
pushf
xor
fidivrl
xor
ljmp
int
pop
push
sub
int3
pop
mov
fwait
aam
dec
sti
sub
xchg
or
mov
push
insb
lods
push
test
add
inc
mov
outsl
aam
xchg
inc
adc
test
sub
icebp
aaa
lds
ret
scas
jno
and
test
outsl
sbb
ljmp
pop
and
jnp
incb
jns
xsaveopt
in
sbb
cmp
shrb
jle
sub
ror
rolb
inc
mov
imul
sar
sub
movb
push
xchg
inc
xor
xor
lret
push
call
mov
jno
mov
mov
rorl
addr16
inc
cmpsb
rcll
dec
fcomps
adcl
add
inc
lds
rcr
sbbb
dec
and
sbb
push
fldl
test
lret
mov
mov
inc
xchg
ret
repnz
aam
jo
xor
and
and
sbb
dec
xchg
icebp
aam
inc
test
adc
fsts
iret
adc
sub
scas
mov
popa
jno
in
iret
or
mov
inc
mov
popa
adc
add
push
mov
cwtl
inc
lret
in
stc
or
push
inc
xor
call
ja
mov
pop
push
xchg
mov
test
mov
and
push
bound
repz
dec
insl
pop
jnp
jle
dec
in
bound
movsb
iret
es
push
and
jns
decb
jnp
loope
clc
jge
or
and
hlt
sar
fmul
cmp
push
test
fs
pushf
xor
shlb
fs
pop
popf
rcrb
stc
and
cmpsl
pop
mov
insb
sbbl
mov
push
dec
mov
scas
push
ss
sbb
push
push
aaa
push
mov
xor
adc
xchg
out
cmp
sets
push
xchg
pusha
mov
fiadds
and
movsb
add
testb
imul
loop
push
mov
jo
add
push
xchg
lcall
jmp
jg
sub
ret
pop
mov
je
xor
mov
vpunpckhbw
or
mov
pop
lret
cmp
je
mov
icebp
ret
aam
mov
pop
mov
sbb
pop
not
cwtl
xchg
and
repz
cmc
icebp
jle
mov
pusha
fistpl
idivb
jnp
inc
xchg
fmulp
popa
cmc
sbb
es
fldl
fbstp
mov
scas
adc
fidivrs
sub
mov
loop
mov
xor
jg
sub
cs
cld
loop
adc
cmp
stos
fs
pusha
jl
outsl
mov
pop
clc
xor
fs
push
fdivrl
fildll
mov
outsb
jle
push
xchg
movsb
fadd
divl
adc
or
mov
mov
loop
add
jl
fsubrs
les
pop
imul
inc
nop
xchg
xchg
cs
test
test
mov
test
mov
ja
pop
mov
inc
jns
lret
loopne
cmp
std
jmp
pop
push
mov
jno
cmpsl
mov
inc
es
lret
sub
fstps
inc
dec
imul
mov
jle
imul
icebp
aaa
outsb
push
out
shlb
stc
js
xchg
dec
push
dec
into
loopne
pop
sbb
or
mov
adc
xlat
bound
rorb
les
pusha
cs
nop
int3
push
and
movsb
jae
adc
rorb
jnp
adc
jl
daa
les
jge
stc
pop
std
mov
aad
scas
mov
test
or
std
mov
fildl
in
loope
sub
jns
lea
add
aad
loopne
stc
int3
jle
sarb
mov
mov
jmp
bsf
pop
jmp
mov
rorb
dec
les
or
cmp
xchg
rclb
scas
and
popw
ljmp
adc
js
movsl
or
cld
in
pop
jecxz
adc
loop
jmp
dec
sti
add
sahf
clc
cmp
bound
inc
mov
and
pop
mov
stos
loop
or
push
int
or
leave
cmp
mov
sti
sub
and
insl
jle
xchg
xor
adc
rolb
dec
fisttps
shll
int
adcl
sbb
adc
push
fiadds
enter
repz
adc
lods
test
leave
js
jmp
mov
unpckhps
call
inc
icebp
sub
jecxz
negl
push
push
jg
push
pop
push
jns
xchg
xchg
dec
fists
movsl
or
jnp
add
in
cmp
cmpsl
pushf
mov
push
arpl
test
call
mov
jae
sbb
mov
mov
inc
mov
mov
sub
xchg
push
jns
js
nop
lahf
xchg
or
sub
rclb
jo
mov
dec
cmp
repz
cmpsl
jp
push
pop
out
sbb
cmp
push
and
outsb
iret
cwtl
cmp
pop
inc
lahf
dec
xlat
mov
sbb
xchg
xor
xchg
mov
fucomp
sbb
sub
push
or
add
iret
mov
sahf
mov
jmp
sbb
roll
jo
mov
mov
jl
gs
mov
adc
orb
push
ljmp
ret
aad
mov
xchg
push
scas
lcall
xchg
out
adc
sahf
mov
adc
inc
mov
add
loope
pop
cmp
and
ret
in
enter
sub
xor
mov
pop
cwtl
fsubl
movsl
push
xchg
mov
sub
jne
imul
sbb
xchg
leave
shll
cld
mov
sbb
mov
ret
sub
jb
xor
in
xor
xchg
push
mov
ds
push
in
pop
imul
aaa
or
arpl
cmpl
sub
jae
xor
jae
imul
mov
dec
mov
fs
xchg
push
sub
xchg
xor
cmp
mov
lods
das
mov
lret
cs
jecxz
xor
push
adc
pop
and
dec
jns
mov
adc
aad
xlat
adc
fistps
jae
add
sbb
mov
or
pop
and
or
xor
insb
jns
mov
or
je
cltd
shlb
or
cmp
mov
and
in
cmp
add
out
fisubl
inc
insl
mov
push
or
rcrb
aaa
and
sub
jge
cmc
push
xor
jbe
sahf
pop
xchg
insb
sbb
nop
ljmp
ss
inc
or
xchg
jnp
pusha
mov
push
dec
test
add
popa
cs
push
push
sti
cmpsb
pop
xchg
xor
int
jb
test
jg
mov
ja
std
popf
sbb
push
enter
sete
fstpl
add
sub
jl
clc
jl,pt
fwait
stc
inc
or
lock
sbb
push
imul
and
sub
sub
bts
adc
mov
mov
xchg
xchg
sbb
and
xchg
stc
adc
aas
xchg
int3
cltd
das
pop
das
or
ffree
call
enter
xor
pop
adc
push
sub
loope
loopne
sub
mov
cltd
sub
cwtl
fsubs
pop
dec
cmp
mov
cs
stc
push
loopne
pop
pop
out
mov
js
dec
dec
movsb
popa
xchg
push
push
jae
mov
sbb
pop
cli
fmulp
lods
addr16
aam
nop
add
mov
movsl
xchg
pop
movsb
cmp
ja
mov
aaa
push
pop
add
cli
in
cmp
adcl
and
fwait
push
add
xor
jb
cwtl
push
aaa
mov
cltd
cmp
rclb
mov
sbb
ljmp
cmc
push
mov
xor
dec
lea
adc
mov
mov
sbb
mov
jae
adc
mul
sub
xor
movsl
push
mov
notb
cld
outsl
xchg
movsb
mov
mov
jb
push
mov
in
add
xlat
inc
lods
icebp
push
sbb
test
fiadds
jmp
jl
pop
mov
dec
mov
test
adc
popa
sahf
repnz
imul
addr16
movsb
xchg
mov
mov
imul
sahf
idivl
cmpsb
into
ljmp
enter
push
test
or
out
sti
lahf
cmp
push
add
in
daa
pop
fisubrs
mov
aas
mov
lods
bound
jbe
fwait
in
popf
jae
fwait
jmp
jb
nop
js
sar
adc
lods
inc
mov
stos
orl
mov
cwtl
ss
int
sti
push
xchg
aam
push
or
popf
rol
or
and
mov
lods
lret
ja
mov
outsb
push
outsl
call
daa
jnp
and
pusha
clc
leave
rolb
lcall
das
pop
sti
xchg
or
sbb
pop
fisubrs
lea
stos
call
mov
add
nop
ret
outsb
lods
or
popf
jmp
push
enter
cmp
insl
xchg
sub
xor
xchg
dec
cli
lods
cmpl
fsubl
movsb
and
cmpsl
cmc
xchg
test
xchg
cwtl
shlb
pop
push
arpl
popf
xor
aas
or
sbb
shlb
xor
xor
loopne
push
sbb
jbe
jo
adc
pusha
cmp
jmp
in
test
scas
bound
sbb
pop
aam
int
lods
ret
leave
fstps
mov
divl
ss
cmp
push
jno
fucomi
and
cmp
pop
sbb
js
lea
inc
xchg
test
push
imull
inc
das
and
mov
push
pushf
mov
add
or
push
cmpsb
rclb
inc
dec
stc
adc
test
pop
inc
jb
mov
xchg
test
test
mov
test
cmpsb
out
pop
iret
xor
jbe
lds
insb
xor
aam
cmp
dec
cmp
jmp
jge
jmp
or
jg
sub
fdivrl
adcl
cmp
std
pop
jmp
push
cmp
aam
mov
pop
inc
into
xchg
push
movsl
jae
push
mov
cwtl
xor
adc
cmpsl
jo
insb
loope
dec
and
sbb
daa
outsb
clc
or
mov
dec
push
mov
out
push
repnz
ja
sbb
xlat
push
jo
and
mov
xor
mov
cli
inc
sub
popf
nop
sub
sbb
ds
imul
adc
push
mov
adc
sub
push
pusha
pushf
mov
push
cmp
pop
leave
repnz
stc
rclb
add
and
jno
scas
fbld
or
push
sbb
lods
addb
sbb
xor
xchg
cmc
shrl
adc
mov
push
mov
lahf
lcall
sub
jge
int
sub
outsl
pop
mov
mov
inc
andb
mov
add
push
jns
ret
push
insl
out
inc
sbb
push
mov
add
aad
add
cld
add
aam
add
insl
or
shrl
mov
lea
push
xchg
dec
movsl
jge
adc
dec
fsubrl
in
mov
psllw
aad
xor
jns,pn
sub
and
repnz
lcall
in
lods
push
add
xlat
popa
cmp
cmp
jge
aam
mov
jns
mov
data16
fwait
lahf
rolb
int
jle
xor
mov
int3
xor
and
js
cltd
cmp
and
pusha
add
imul
mov
mov
sbb
aas
lret
ror
or
lret
aad
test
dec
and
or
pop
ficoml
xchg
sahf
xor
fists
fsubrl
loopne
jb
out
pop
inc
sub
mov
jmp
inc
gs
mov
adc
lods
aad
or
js
push
adc
int3
pop
ljmp
mov
mov
sahf
sbb
or
ljmp
lea
lods
or
jle
ficoms
roll
mov
sahf
inc
adc
mov
mov
jle
out
lods
imul
in
lret
lcall
daa
push
es
cld
and
icebp
insb
xor
add
iret
stc
sahf
and
fdivrl
push
xchg
lahf
icebp
push
xchg
mov
fistpl
stc
in
pop
adc
ja
adcl
xor
lcall
push
mov
addr16
pop
adc
xchg
inc
fiadds
cmp
and
xchg
fldt
cwtl
inc
out
jns
jo
lcall
int3
sub
stos
sbb
add
cs
mov
scas
into
cltd
sub
pop
mov
jge
adc
loopne
jae
lock
mov
adc
xor
fisubs
mov
adc
xchg
pop
lods
dec
fwait
lods
jle
repnz
repnz
pop
mov
cmp
xor
pop
mov
inc
stc
in
and
in
insl
pusha
or
lods
jo
or
prefetch
adc
or
dec
aas
jo
pushf
popl
or
inc
lahf
jno
mov
jnp
je
xor
dec
hlt
inc
mov
popl
arpl
mov
or
jg
loopne
lods
aam
divps
icebp
es
cltd
dec
dec
movsl
lock
cld
lods
mov
bound
pop
ss
lock
ss
arpl
je
flds
arpl
orb
testl
sti
adc
jl
out
movsb
aaa
cld
and
loope
out
cltd
stos
cmp
pop
dec
push
sarb
mov
cmp
adc
in
xor
adc
mov
repnz
rolb
lock
xor
push
jnp
jge
cmp
cmpl
cmpsb
mov
es
xor
push
faddl
pushf
dec
mov
inc
dec
sub
pop
iret
lock
cs
sahf
jecxz
or
mov
and
rcll
dec
dec
xorps
and
rcll
clc
mov
adc
inc
push
bound
sub
cwtl
fcomp
cmp
je
or
pop
fwait
scas
imul
out
push
inc
and
sub
int3
xchg
jl
sub
xor
adc
sbb
and
test
les
loope
ret
push
addl
adc
out
std
mov
insl
ficoml
mov
lahf
aam
sbb
jle
notb
xchg
aas
add
mov
or
lods
je
mov
jno
lds
fisttps
mov
mov
nop
popf
jl
and
mov
arpl
mov
leave
ja
xor
jp
jg
ds
clc
adc
std
dec
aad
ret
sti
cmp
les
popf
pop
pop
cmpb
mov
iret
inc
addr16
mov
pop
jns
jg
and
xchg
out
push
xor
adc
mov
pop
mov
int
jns
xchg
shrb
pop
xchg
push
int3
fsubs
rorl
pop
xchg
inc
insb
adc
inc
fisttps
mov
mov
cmp
and
fsubs
enter
shr
lods
out
fsubs
mov
inc
in
xor
test
inc
push
dec
out
int
movsl
pop
or
subl
inc
dec
add
xchg
push
jae
xor
in
js
shl
loopne
mov
xchg
add
mov
jle
add
pushf
mov
repz
jae
sub
data16
adc
mov
mov
cmp
hlt
mov
xchg
mov
les
daa
loope
jge
subl
cmp
mov
lds
sub
or
and
xchg
xchg
xchg
push
adc
dec
mov
push
push
jb
aam
out
add
sbb
cmp
sbb
std
add
cmp
ss
stos
lds
mov
mov
mov
subb
xchg
js
jbe
fisubrs
test
push
xchg
cmp
movsb
inc
sbb
imulb
aas
out
mov
cmc
pop
sub
and
stos
insb
xchg
mov
std
js
es
sub
or
adc
fistl
push
cmp
sbb
pop
mov
pusha
cmp
mov
pushf
jge
sub
jns
cld
fdivr
icebp
mov
sub
mov
mov
pop
mov
pop
int3
lcall
sbb
mov
ja
mov
mov
add
mov
in
and
cmp
hlt
push
mov
sub
rcrl
inc
or
push
and
in
outsb
mov
adc
insl
mov
inc
mov
ss
lahf
adc
icebp
clc
mull
push
aaa
and
add
test
rcll
xor
iret
jl
sbb
add
testl
add
sub
mov
mov
frstor
cmp
aaa
mov
cltd
aaa
jnp
cmp
inc
pop
inc
xchg
stc
jae
sub
mov
cli
mov
mov
cmp
jne
out
lret
and
xor
arpl
sti
aad
sub
push
push
mov
jmp
push
inc
pop
fisubs
mov
add
sub
push
jl
mov
mov
test
loop
loop
jge
mov
leave
enter
icebp
jne
iret
fcoms
push
data16
and
cmp
in
sub
daa
scas
in
es
xor
out
push
cmp
mov
movsb
mov
xor
bound
xor
ret
out
in
mov
into
jge
in
test
insl
icebp
fmuls
mov
out
mov
or
xorl
inc
lods
cli
mov
icebp
scas
sbb
cld
lods
cmp
call
fmul
insb
add
pop
pop
add
xchg
mov
fldt
fnsave
repz
lret
add
push
mov
rcrl
daa
repnz
pop
test
sarl
xchg
mov
xchg
dec
insl
mov
clc
sub
push
adc
das
pushf
movsb
and
mov
ret
fdivrp
xchg
push
leave
loope
ljmp
xor
add
aam
fucomp
sub
aaa
fwait
cs
insb
cmp
stc
lods
es
adc
cmp
pop
inc
mov
and
loopne
lods
add
popf
mov
sbb
bound
subl
fisubrs
pop
mov
clc
ret
or
sbb
pop
mov
cwtl
into
inc
mov
cmp
loopne
jbe
mov
mov
cmp
add
dec
daa
mov
mov
xor
mov
iret
and
pop
enter
fistps
or
int
lahf
in
ljmp
xchg
xchg
fyl2xp1
repz
stos
scas
pop
mov
std
lret
cs
mov
rorb
imulb
mov
adc
mov
push
in
rcr
add
into
mov
stos
test
enter
and
adcb
dec
cli
cmp
nop
and
push
or
add
xchg
and
int3
pop
mov
jbe
outsb
mov
das
mov
call
lds
aaa
mov
std
and
sbb
mov
add
ss
and
stc
adc
push
push
push
push
enter
aaa
add
scas
mov
dec
inc
shlb
sarb
jp
add
nop
dec
jnp
sbb
in
xchg
aam
shrl
cmp
inc
test
aad
lds
and
in
push
into
jle
and
cmpsl
inc
sbb
push
fsubl
xor
jb
lea
push
mov
cmpsb
rorl
or
inc
iret
movups
adc
je
mov
pop
rclb
jnp
sub
roll
rcrl
mov
int3
mov
push
xchg
push
mov
mov
and
mov
mov
mov
int3
addr16
mov
aad
js
fcoms
jmp
jmp
loopne
jb
dec
cmp
cmp
je
xchg
subb
mov
sbb
in
lahf
cmp
arpl
into
gs
jge
mov
imul
mov
inc
scas
jb
xchg
inc
ja
lods
push
sub
mov
popa
push
fisubrs
cs
fs
mov
cmc
popa
loop
xor
mov
or
dec
add
dec
sbb
cmp
sub
push
push
adc
push
out
jno
push
push
mov
push
dec
push
add
decb
insb
sbb
dec
pop
inc
das
stc
jle
jb
xor
cmc
fisubl
cli
shrb
hlt
jmp
mov
das
or
jnp
hlt
sbb
push
fistpll
push
cli
into
cmp
out
fnstsw
jp
pop
fnstcw
loop
clc
jp
lret
pop
cli
add
roll
pop
scas
pop
sbb
sub
pop
dec
mov
js
lfs
sarl
cmp
xor
mov
pop
inc
add
xor
lret
mov
aad
int3
inc
sahf
not
fcomip
xchg
push
jo
js
stos
idivl
fimull
mov
hlt
pop
xchg
cmp
test
push
mov
adc
jo
inc
and
lock
mov
leave
or
lock
add
adc
push
pop
pop
in
mov
pusha
rcl
aam
sub
in
outsb
pushf
mov
add
cs
popf
rol
dec
into
imul
lret
adc
dec
and
mov
addb
sti
ljmp
or
jle
add
push
and
aaa
push
dec
js
adc
pop
adc
call
stos
cmp
add
mov
push
sbb
sub
pop
mov
sub
dec
jo
daa
clc
mov
jmp
fiadds
bound
gs
rcl
in
in
pop
aaa
mov
xor
je
pop
or
pop
adc
xchg
loopne
ret
mov
out
int3
cli
pop
mov
nop
sbb
mov
and
mov
orb
loope
mov
cmpb
dec
mov
hlt
test
imul
cmp
adc
and
adc
jmp
repnz
sub
xor
mov
stos
pop
hlt
cld
cs
push
and
in
and
scas
dec
aaa
arpl
cmp
mov
xlat
push
xor
addl
pop
push
enter
in
cs
mov
push
idivb
shll
xchg
jmp
inc
pop
jbe
gs
and
aam
xchg
in
dec
jne
dec
movl
out
sbb
ss
fcoms
movsb
mov
lock
loopne
jp
dec
xchg
xchg
cwtl
ret
inc
mov
fildll
mov
orb
leave
and
pop
dec
inc
lea
stos
sub
sub
pop
mov
outsl
xorl
subl
mov
or
lcall
fisubrs
sbb
bound
push
mov
fiaddl
lret
cld
test
loope
push
xor
incl
inc
push
adc
jnp
aad
jns
push
lods
add
ret
jns
in
repnz
push
or
xor
sahf
fs
imul
bnd
aas
lods
loope
jns
in
xor
push
adc
imul
icebp
xchg
test
xchg
loopne
test
movsb
ret
pop
mov
neg
ja
pop
cli
icebp
mov
mov
jae
or
jb
fdivrs
in
cltd
and
sbb
ljmp
notb
in
jg
fimull
insl
or
lret
adc
cmpl
xor
pop
mov
mov
pusha
lock
popf
sub
loope
rcll
jmp
gs
and
shr
cmpsl
in
push
pop
out
sti
xchg
jo
lods
rolb
and
xchg
cmp
stos
add
and
jno
sub
xlat
in
std
out
mov
gs
cmp
jg
mov
pop
addr16
pop
std
orb
mov
sbb
push
in
ja
cmp
push
mov
jmp
and
sub
or
int
sbb
popf
jno
adc
repz
cmpsb
push
xchg
adc
xor
push
jno
xchg
repnz
sbb
dec
xchg
lahf
jle
inc
scas
jmp
mov
mov
movsl
sub
notl
or
and
or
mov
out
inc
scas
test
xor
ljmp
stos
jns
mov
test
rol
sub
in
add
adc
or
or
add
rorl
mov
or
nop
shll
fsub
push
sbb
movsl
push
aad
pop
mov
cmp
pop
xor
jg
jle
pop
adc
add
test
jnp
shll
add
sbb
stc
dec
pop
or
xchg
out
aad
dec
pop
fsubs
jp
pop
xchg
pushl
pop
jp
and
scas
fimuls
lahf
add
mov
lret
rolb
add
adc
dec
dec
push
xchg
adc
in
xor
pop
into
lods
in
jb
ret
jno
sub
adc
mov
dec
sbb
jne
notl
sub
adc
xorb
xchg
mov
jnp
mov
lds
ljmp
fmuls
bound
pop
lret
cli
das
push
inc
fwait
ljmp
sub
andb
push
ds
inc
xchg
mov
icebp
lods
pop
add
mov
push
aaa
push
xchg
sbb
fwait
in
jbe
rclb
mov
jb
adc
xchg
push
mov
pop
ficoml
add
xchg
pushf
arpl
addr16
ror
fsubr
jnp
sti
addr16
movsb
adc
cwtl
cmp
flds
ja
mov
cmpsl
cmp
in
fcomi
and
out
loop
fists
lret
mov
shlb
add
sub
xor
repz
xchg
add
insb
xor
inc
mov
repnz
fistpll
loop
in
pushf
lahf
push
sti
ret
and
vcvtsd2ss
mov
insb
cmpsl
mov
test
cmp
xchg
cmpsb
aam
lahf
pop
mov
in
in
pop
mov
adc
cmp
push
xor
fisubrs
ljmp
icebp
mov
sub
add
add
xchg
sbb
jno
push
int
xor
test
sub
jp
imul
std
and
or
cld
cmp
mov
cmp
or
lds
mov
movsb
inc
test
jl
test
or
pop
nop
cwtl
adc
xchg
xchg
inc
jnp
fwait
mov
mov
aaa
mov
push
scas
sub
decb
xor
dec
inc
or
out
cmc
test
mov
mov
outsl
adc
xor
adc
out
add
mov
xlat
sub
or
cmp
popa
inc
add
mov
sub
xchg
sub
lcall
jge
and
mov
aam
or
sti
fsub
cmpsb
ret
lods
mov
xchg
push
stc
pushf
hlt
lds
xor
jecxz
jns
mov
mov
push
xor
add
repz
pop
mov
jb
into
icebp
add
cld
sub
mov
sti
or
rcrb
add
jmp
inc
fiadds
dec
mov
dec
dec
adc
xchg
mov
mov
sahf
jg
pop
aaa
insl
outsl
dec
int3
dec
clc
cmp
or
add
cmp
adc
push
pop
sub
push
pushf
fnsave
hlt
jne
idivb
inc
dec
popa
mov
loopne
sbb
cmpsl
push
and
test
mov
pop
daa
fcoms
xor
or
cmp
lods
cld
and
push
dec
xor
hlt
lods
pushf
sbb
shll
pop
push
mov
cltd
adc
lods
push
mov
xor
in
push
fcmovnb
jb
lret
mov
fs
mov
mov
aad
or
cmp
xor
lea
and
jmp
out
mov
dec
cltd
jge
push
push
jne
stos
push
call
in
jmp
xchg
jp
scas
cltd
mov
sub
lods
mov
in
lea
jnp
mov
fsubrl
inc
add
sbb
ds
aas
pop
or
fdivl
int
cli
js
enter
mov
data16
out
ss
adc
and
mov
cmc
push
pop
xchg
jmp
clc
or
inc
jp
mov
xchg
jecxz
xchg
mov
pusha
jg
pop
int
mov
lret
push
xchg
mov
adc
adc
jo
push
jg
xchg
lret
xchg
outsb
xchg
push
stos
rcrl
cwtl
test
mov
loope
imulb
lcall
inc
dec
imul
cltd
xor
test
cmpsb
cmp
lea
push
adc
pop
adc
dec
lret
fcmovb
icebp
add
lods
mov
adc
mov
mov
mov
lcall
push
sub
jo
lea
and
ljmp
neg
outsb
fldenv
lods
xor
dec
sbb
sbb
push
lods
sbb
inc
les
test
push
ss
adc
addb
loop
push
imul
enter
dec
sbb
mov
outsb
xchg
xor
dec
sbb
ljmp
cmp
inc
psrad
add
mov
inc
test
jge
mulb
lock
cmp
add
xor
out
mov
mov
push
cmpsb
mov
xchg
mov
roll
movsl
inc
pop
mov
test
add
ret
or
adc
outsl
pop
outsb
sti
jmp
xor
inc
cmc
lds
aam
push
sahf
xchg
aaa
push
rorl
mov
jno
movsb
jns
jp
scas
and
add
ret
jl
sbb
sbb
jae
sarl
or
bound
xchg
ret
sub
clc
into
mov
jg
pop
pop
sbb
pop
mov
mov
and
cmp
lds
mov
jne
dec
push
xchg
cmc
lock
inc
push
int3
push
shlb
mov
xor
lret
jnp
xchg
ret
cmp
test
fldcw
pop
dec
lahf
and
clc
sub
sbb
add
cli
jne
adc
jl
mov
bound
hlt
hlt
bnd
pop
sahf
sbb
jmp
push
loope
jnp
xchg
mov
pop
xchg
insl
cmpb
adc
jne
push
xchg
dec
push
clc
cmp
pop
das
dec
popf
jecxz
js
cltd
pop
mov
mov
xchg
scas
mov
jge
jmp
xor
sub
cmp
fiaddl
das
lret
bound
das
punpcklwd
sub
add
xor
dec
leave
loop
pop
adc
inc
les
in
mov
movb
cmp
inc
aam
add
outsl
out
shr
addr16
rolb
dec
test
shll
test
out
mov
push
push
xchg
mov
and
mov
lret
shl
test
mov
into
stos
test
mov
fcom
not
and
js
dec
lods
push
fstps
std
mov
push
sub
test
das
pusha
stos
mov
stc
repz
sub
jl
xchg
sub
and
hlt
pop
jbe
jmp
push
xchg
push
jmp
rolb
dec
or
out
insb
jnp
add
push
cmc
std
push
add
leave
loopne
mov
dec
dec
scas
clc
cmp
ljmp
sbb
mov
notb
imul
xchg
mov
xchg
imul
out
mov
sbb
aad
jnp
mov
fcompl
mov
pop
pop
sub
and
data16
daa
jl
adc
xchg
shlb
cs
add
mov
add
or
in
in
xor
sub
adc
dec
das
push
jle
out
or
in
in
pop
fs
lods
mov
jo
cmp
int
cli
cmp
adc
outsb
dec
cmp
cmc
pop
mov
sbb
sub
add
lock
mov
inc
pop
push
and
sub
cli
xchg
arpl
and
test
jl
mov
sub
hlt
popf
outsb
mov
mov
data16
jno
daa
or
ror
mov
imul
inc
ljmp
add
enter
or
or
in
mov
gs
lahf
std
pusha
jb
add
or
imul
mov
aas
add
push
js
fbld
popa
xor
rcrb
mov
or
loopne
xorb
out
or
je
subl
bound
imul
cmp
xchg
lods
and
scas
fs
outsb
push
ffreep
mov
test
fbstp
shrl
jbe
fistpl
js
pop
popf
mov
inc
popa
sub
jle
out
ret
std
push
std
les
sub
int
cmp
pop
mov
mov
xor
notb
pop
xor
int
cltd
shl
out
jnp
push
mov
in
sub
jbe
loop
test
pop
int
mov
dec
jge
arpl
pop
lock
lods
int3
js
add
xor
sbb
cvttps2pi
pusha
jmp
push
int
cmp
sub
pop
es
adc
mov
fidivrs
adc
inc
xor
lcall
push
cld
aam
outsb
or
fdivrl
mov
sub
hlt
mov
mov
cmpsb
popa
lret
testl
sbb
inc
mov
scas
faddp
sub
cmpsb
pop
je
leave
pop
insb
cmp
jge
rcr
mov
dec
fs
mov
add
mov
mov
mov
xchg
mov
add
push
sub
outsb
cmc
cwtl
sbb
ljmp
push
jae
dec
or
repz
dec
jnp
iret
icebp
inc
dec
fcomps
mov
push
pop
cwtl
fs
insb
xchg
mov
or
jb
xor
cmp
or
adc
out
adc
pop
cmp
lods
cmc
mov
jns
stos
int3
out
add
sbb
sub
inc
pushf
cmpl
out
and
adc
repnz
fcmovne
or
icebp
xchg
hlt
int3
or
icebp
and
push
pop
shlb
rclb
push
mov
mov
in
dec
inc
pop
jle
dec
xchg
cmpsb
dec
or
pop
addr16
dec
xchg
lods
pop
mov
popf
js
add
cmp
movsb
mov
aad
add
call
movsb
nop
push
orl
jecxz
add
push
stc
jmp
scas
call
cwtl
out
and
sti
sbb
aam
pop
cmpsb
lds
xorb
inc
test
jecxz
xlat
xchg
and
test
sub
sti
lret
sbb
sbb
mov
daa
sbb
and
leave
inc
popa
cmp
mov
xor
lahf
mov
push
daa
repnz
icebp
jno
mov
inc
call
mov
inc
ja
leave
xchg
add
mov
jbe
jp
mov
cmp
jnp
and
pop
xchg
jp
mov
rcl
or
stos
lds
xor
fwait
xchg
or
jp
icebp
push
and
or
mov
insl
mov
cltd
mov
lret
mov
pop
jge
iret
cltd
lods
pop
loop
pop
dec
jmp
jg
push
adc
ret
in
lods
mov
das
mov
sbb
sbb
adc
cmp
arpl
adc
cld
test
outsl
sar
jnp
pop
mov
int3
andb
fmull
xchg
cltd
out
ljmp
sub
sub
xchg
pop
xchg
popa
xor
dec
jnp
into
les
push
pushf
pop
or
cmc
pop
mov
jb
inc
mov
cmp
cmp
cmpsl
sub
in
or
mov
aas
push
testb
jb
movsl
adc
repnz
cli
xchg
aad
adc
cwtl
xchg
pop
movsl
mov
nop
hlt
scas
and
sub
lcall
inc
or
xor
adc
call
mov
jns
push
push
mov
and
jno
mov
and
inc
sahf
sub
stc
mov
inc
push
pop
enter
xchg
repnz
ja
mov
push
inc
xor
test
out
outsl
pushf
out
cmp
sbb
int
add
cli
cmp
cmp
xor
xchg
sti
push
mov
and
into
push
lods
stos
xchg
jbe
in
add
ja
push
or
push
jne
scas
pop
jo
aas
dec
push
and
push
ljmp
shr
inc
bound
mov
dec
ljmp
and
clc
dec
xchg
shr
fistpll
sub
sbb
test
sti
mov
inc
xchg
mov
inc
pushf
std
aas
es
popa
and
pusha
inc
push
pop
int
cltd
inc
and
ffree
out
xor
nop
inc
mov
inc
xchg
lock
push
lret
loop
movsl
cltd
adc
inc
or
outsl
int
inc
xchg
icebp
clts
loope
out
mov
call
jl
sub
mov
adc
cld
xchg
mov
xchg
mov
jo
pusha
in
stc
xchg
pop
pusha
mov
cmpsb
pusha
rcrb
mov
imul
xor
push
test
jne
inc
aad
push
enter
fwait
lods
loope
jl
pop
xor
gs
xchg
into
push
or
cld
call
pop
pop
and
and
sarb
push
andl
imul
loopne
or
lock
add
pop
xlat
lret
lret
sub
add
in
jge
pushl
je
fbstp
es
jb
shl
dec
std
movsl
cmp
sub
loopne
or
cld
lret
jb,pn
dec
xchg
aas
ds
loop
imul
dec
push
inc
insl
or
shll
out
adc
clc
push
inc
pop
adc
imul
xchg
cmp
rclb
push
shr
add
push
clc
sub
adc
pop
add
mov
mov
mov
sub
pop
cmpsl
lds
cmp
dec
sbb
not
nop
pop
sub
push
add
int
or
mov
fbstp
xchg
add
pop
mov
adc
arpl
les
rclb
dec
enter
cld
std
std
mov
div
push
icebp
pusha
pop
test
push
out
mov
push
add
stc
mov
icebp
and
push
cmpsb
adc
sti
push
cmp
mov
mov
sub
ja
out
aad
es
fwait
cmpsb
lcall
pusha
add
pop
in
rcl
popa
jp
sar
dec
stos
and
xchg
cld
push
fbld
mov
jae
dec
imul
loop
pushf
hlt
push
mov
cmp
fsin
and
dec
sbbl
pop
iret
add
jmp
lret
mov
pushf
xchg
mov
pop
mov
ficomps
push
cltd
cmp
cld
pop
rcll
mov
ret
jge
cmp
jbe
sti
mov
push
int
fcoms
or
and
push
pop
shlb
loope
adc
sub
dec
sbb
mov
sti
mov
ss
add
xchg
icebp
push
loopne
jnp
and
pop
sub
js
xchg
jmp
scas
push
adc
pop
mov
scas
test
jmp
cmp
push
fcompl
out
lahf
pop
outsb
push
fistpl
dec
movsb
mov
iret
pusha
jg
rcrl
pop
repz
dec
sti
je
push
xor
ss
jg
stos
fwait
push
or
and
sbb
cs
or
xchg
push
addr16
mov
push
shlb
arpl
iret
dec
jbe
xchg
xor
adcw
idivl
int
inc
test
insl
sbb
ds
iret
add
test
inc
sbb
push
mov
mov
inc
jnp
adc
dec
daa
xor
ret
fstpt
or
lds
fucomip
push
popa
out
sub
scas
mov
jo
jge
mov
pop
pop
sahf
push
test
icebp
sbb
xor
jp
loope
dec
add
idivb
orl
out
sbb
cmp
sub
mov
stos
mov
std
adc
lods
and
shrb
mov
pop
in
daa
aam
xchg
sbb
cmp
jp
shll
lret
bound
jns
pop
es
incb
rcrb
pop
mov
bound
in
insl
dec
out
and
inc
pop
daa
cmp
push
xchg
mov
je
lea
out
pop
sbb
dec
int
in
scas
mov
jae
xchg
mov
jge
insb
xor
mov
xor
push
sbb
xchg
push
roll
shl
or
xlat
iret
mov
xchg
mov
fwait
jns
cli
popf
fst
into
sti
inc
mov
push
call
inc
dec
js
or
mov
jno
leave
mov
xor
mov
sahf
sti
mov
dec
lcall
mov
xor
push
dec
xchg
pushl
stos
mov
aad
pop
mov
out
imul
fwait
pop
add
or
xchg
adc
je
inc
inc
mov
mov
jl
insb
inc
inc
and
jne
add
add
das
fiaddl
dec
outsl
repz
push
push
adc
mov
pushf
sub
ss
xor
sub
jecxz
shlb
pop
or
mov
lret
push
mov
xor
jmp
mov
adc
cs
sti
inc
inc
add
inc
ds
rclb
push
xor
repz
lret
in
or
cmp
pop
or
cmp
jne
test
inc
shll
roll
mov
dec
xor
loope
pop
movsl
xchg
xchg
sbb
cmp
mov
dec
loopne
jecxz
xor
jns
out
jne
loop
sbb
aaa
lahf
sub
stc
shrb
xchg
movsb
jae
jecxz
addb
jl
and
adc
dec
push
in
mov
sbb
jge
cli
outsl
std
push
sbbb
pop
lea
loopne
ficompl
sahf
mov
jo
inc
cmpsb
push
dec
mov
stc
aad
ljmp
jne
mov
sub
push
mov
jecxz
add
mov
xor
dec
jecxz
cmpsb
or
sbb
inc
subb
into
rcrb
xchg
push
jne
and
sti
outsl
loop
fldl
out
inc
add
movsl
cmpsb
adc
cmp
jmp
ja
lahf
out
lods
nop
shl
in
ss
mov
sbb
stc
mov
cltd
xchg
rcrl
add
xabort
lds
mov
inc
out
cmp
sbb
lock
sbb
popa
sti
dec
mov
ret
bound
sub
mov
loop
cli
push
sbb
pop
pop
inc
movsb
aam
aas
popf
sti
loope
cmp
lea
mov
cmp
out
fsub
rcll
cmp
lahf
fldt
and
xor
xchg
inc
pop
adc
cmpsb
jg
cwtl
aas
mov
repnz
pop
and
aas
push
in
mov
imulb
mov
inc
xor
xchg
sbb
pop
adc
arpl
and
xor
ficomps
pop
faddl
pop
inc
add
arpl
sub
add
and
lahf
adc
into
loope
add
imul
nop
or
add
mov
gs
inc
jb
mov
lret
mov
sbb
inc
push
mov
adc
push
mov
mov
js
jns
idivb
mov
das
cs
int
movsl
push
sbb
call
and
xchg
insb
and
jo
lock
ds
xor
aas
xchg
data16
ret
add
inc
shll
std
or
cltd
pop
pop
scas
repz
push
loope
cld
pop
push
js
jns
jl
mov
ret
imul
lcall
mov
iret
xchg
mov
out
mov
cmp
push
cmpsl
fs
pop
lret
mov
add
sbbb
in
loope
les
add
test
pop
aaa
dec
cmp
insl
sub
mov
sub
mov
scas
cltd
add
xor
push
adc
test
negb
push
mov
mov
mov
xlat
xchg
loopne
push
outsl
xchg
loopne
mov
mov
pushfw
xor
sahf
insb
mov
test
pop
int3
fildll
and
add
repnz
mov
adc
fsubp
mov
test
fcoms
mov
das
mov
scas
stos
sbb
and
arpl
loope
jb
inc
pop
rcrb
cmp
xor
or
test
cmp
mov
add
popa
repnz
aam
das
fistl
test
dec
push
jae
jl
xor
cwtl
mov
xor
sti
add
inc
dec
out
not
les
pop
mov
push
ss
test
movl
hlt
mov
cmp
pop
loopne
mov
arpl
aad
bound
jle
in
or
insl
and
stos
bound
add
mov
int3
pop
adc
or
jnp
push
xor
cltd
imul
test
sub
out
mov
or
adc
inc
scas
out
popf
bound
dec
pop
inc
push
addr16
mov
add
jp
mov
cmpsl
stc
cs
cmc
leave
push
mov
sbb
bswap
repnz
sub
xchg
cwtl
mov
lods
test
cmp
dec
xchg
sub
pop
lods
loope
add
js
loopne
rorb
push
data16
xlat
xor
in
jmp
mov
loopne
lods
es
adc
push
repnz
push
pop
add
or
test
andb
lret
mov
sarl
in
das
cmpsl
std
lahf
pushf
test
push
pop
ret
icebp
jp
imul
test
mov
jno
inc
aad
push
add
push
sub
sbb
sub
imul
jb
lods
stos
aas
nop
lods
adc
ret
mov
xchg
or
jnp
outsl
into
std
fstps
mov
fisttpll
mov
pusha
adc
jmp
jle
bound
es
xor
jb
and
mov
movsb
and
clc
push
stc
outsl
or
sahf
fidivrs
dec
imull
adc
lods
rorb
sbb
dec
shl
jge
leave
jo
test
pop
jmp
inc
mov
jge
rol
notb
imul
mov
in
adc
mov
mov
and
mov
sub
hlt
sbb
addb
xor
cmp
mov
xor
cmpsl
mov
add
dec
and
jg
out
je
or
and
nop
pop
out
xor
mov
or
lret
inc
pop
and
jns
ja
pop
mov
xchg
jmp
into
cmc
mov
xchg
jno
hlt
in
adc
aad
mov
mov
stos
data16
int3
sub
or
inc
insl
push
pop
jb
sub
cmp
fdivrp
xchg
pushf
pop
pop
sbb
rolb
movsb
mov
pop
and
mov
xor
outsl
loop
es
jns
lcall
mov
mov
mov
xor
fstp
negl
gs
scas
inc
shrl
inc
sahf
push
lea
fstps
xchg
out
mov
jmp
or
pushf
fimuls
lret
mov
sahf
sub
repnz
push
mov
or
rsm
sbb
inc
pusha
stos
sub
and
mov
xchg
out
cwtl
add
test
pusha
lock
push
clc
popa
test
and
loope
pop
xchg
jno
outsb
cmpsb
movsl
sarl
pop
arpl
jnp
jle
inc
out
lret
jne
pop
mov
mov
mov
lds
insb
test
add
xlat
int3
mov
cld
stos
popa
loopne
sub
fnstenv
rolb
sbb
ficomps
lcall
cld
push
xchg
and
jne
lret
mov
inc
ss
xlat
mov
sarl
pushf
adc
inc
inc
cmpsl
mov
clc
popf
insb
cmp
dec
push
and
ja
inc
fisubl
arpl
push
inc
mov
dec
mov
dec
lock
xchg
or
jecxz
xchg
xchg
xchg
les
popa
call
bnd
mov
pop
mov
mov
loope
outsl
sbb
adc
mov
or
add
adc
in
mov
jp
adc
frstor
int
fsubrl
in
stos
cltd
inc
mov
mov
lods
xchg
aaa
cmpsb
mov
inc
pmovmskb
es
inc
scas
pushf
scas
cmp
mov
jp
push
push
sbb
mov
lret
jno
pop
sub
jle
mov
into
push
js
pop
cmp
or
inc
movb
lock
je
xchg
pop
dec
sub
push
sbb
scas
inc
xchg
pop
sarb
iret
cmpsb
cmp
inc
jp
mov
push
inc
iret
cltd
arpl
fwait
sub
lahf
aaa
push
xchg
in
fildl
mov
mov
hlt
fwait
inc
outsl
je
cld
mov
dec
sub
sub
pop
fildl
cmp
add
jle
sarb
test
out
push
aad
mov
xchg
add
and
clc
or
cmp
mov
scas
mov
pop
sbb
jge
push
and
cmp
push
lret
mov
outsl
aam
mov
stos
inc
mov
negl
scas
negl
push
popf
rcrl
inc
rep
sbb
enter
cmp
pop
mov
ret
push
add
mov
arpl
pop
outsl
lcall
mov
push
sarb
mov
push
push
xor
repz
mov
cmp
xchg
jl
out
and
jae
jge
xor
decl
cmpsb
cmp
mov
ret
or
push
mov
cmc
cmp
inc
loop
rcrb
cmp
pop
xchg
sub
ja
pushf
pop
repz
ds
add
pop
movsb
fcompl
inc
jb
mov
lods
cmp
call
mov
add
jbe
xchg
fisttpll
xchg
jno
add
adc
loope
shrb
aad
ss
lahf
js
loop
pop
adc
mov
lret
mov
inc
es
and
sub
icebp
push
jle
inc
dec
les
popl
outsb
cmpsb
or
ja
pop
sub
ljmpw
fsubrs
mov
mov
aaa
shrb
sahf
inc
sub
dec
ss
inc
call
add
dec
shll
scas
test
mov
fdivrs
sub
test
adc
pop
mov
sub
movsb
cmp
js
mov
jbe
inc
rolb
push
jnp
sub
stos
and
mov
cmpsb
cmp
test
pop
jmp
inc
inc
fmuls
call
cmp
dec
add
nop
lock
test
cmp
aad
pusha
jae
jmp
movb
pop
lods
icebp
and
cmc
push
dec
jo
hlt
xor
push
pop
push
into
jnp
imul
push
loope
cmpsb
mov
inc
das
pop
xor
movsl
mov
fimull
icebp
adc
adc
dec
jne
out
adcb
jl
xchg
lods
in
lret
adc
push
cmpb
loop
fsubr
pushf
sbb
sbb
mov
adc
dec
lcall
mov
push
in
mov
push
cwtl
loop
les
bnd
mov
mov
sub
xchg
jae
stos
and
das
xchg
jecxz
push
movsl
scas
outsb
inc
rcrb
sahf
pusha
lret
cmpsb
aam
fsubp
fcom
in
leave
sbbb
cli
arpl
cmp
test
inc
sub
aam
xchg
clc
add
scas
out
or
dec
ja
je
cmp
and
ss
das
mov
push
and
add
cld
xchg
lods
daa
cmp
jns
push
imul
jp
lods
icebp
lods
jmp
bound
ret
mov
sub
insb
push
enter
popf
mov
popf
add
decl
and
push
adc
push
lds
sbb
das
adc
pop
add
mov
or
push
cmp
outsb
addb
sbb
jns
cli
mov
mov
adc
inc
mov
rcrl
adc
nop
sbb
mov
push
stc
loope
sti
xchg
out
scas
mov
jge
ja
int3
inc
rorb
stc
and
sub
fisubl
pop
add
push
mov
popf
pop
inc
sub
dec
ret
repnz
fidivl
stc
jmp
cmp
sbb
cmp
ds
add
aam
clc
mov
ficompl
inc
repnz
mov
xor
in
sub
lods
daa
dec
mov
stos
jmp
sub
mov
gs
and
pop
mov
add
btr
mov
mov
mov
addr16
push
cmp
xchg
xchg
hlt
jb
dec
inc
push
add
mov
cld
insb
xchg
stos
cmp
mov
xor
cld
sub
pop
out
adcl
std
mov
add
scas
adc
dec
xchg
xchg
push
xor
fucomi
lea
mov
sti
sti
cmp
nop
je
mov
jns
int3
popl
jnp
out
sbb
int
jmp
jg
xor
aam
mov
mov
aam
mov
fxch
outsl
or
xlat
pop
mov
imul
sub
iret
dec
sub
lds
imul
lds
scas
adc
and
sti
sub
shll
ret
stos
sar
aad
rorb
pop
inc
pop
inc
stos
fcmovnu
xor
pop
jbe
cmp
jecxz
cwtl
sub
in
pop
pop
xor
and
adc
movsl
lods
enter
xor
mov
stos
ret
bound
sarl
insb
xor
in
jno
mov
movsb
loope
inc
inc
int
mov
cltd
out
xchg
push
inc
inc
rolb
xchg
xchg
fs
bound
mov
imul
ret
pop
dec
rcrb
adc
call
test
aas
cmp
aam
test
dec
in
mov
jp
fnstcw
cmp
not
mov
cmp
lods
sbb
insl
and
pushf
call
lods
fcmovnb
xlat
call
push
add
inc
and
mov
iret
mov
lods
lods
cwtl
sbb
or
gs
pop
sbb
and
xlat
cmp
xlat
enter
out
mov
jge
sbb
mov
fwait
mov
enter
in
nop
fcoms
jbe
aaa
xchg
lea
mov
xchg
mov
lahf
popa
xchg
jno
outsb
scas
filds
cld
aas
test
xorb
bound
push
mov
and
xor
jae
dec
addr16
fldt
into
xchg
lods
push
xchg
nop
fistl
mov
negb
es
enter
aam
mov
aas
xchg
sahf
mov
inc
and
adc
cmpl
lahf
arpl
scas
dec
addr16
and
and
lret
push
out
dec
lret
lret
out
leave
cmp
jns
enter
fcmove
mov
rorl
es
or
in
pop
std
add
sbb
sahf
or
movsb
pop
loope
pop
iret
je
pop
cmp
imul
and
test
xchg
dec
mov
and
pusha
subl
cmp
shlb
pop
jo
cs
dec
mov
imul
xchg
fnstsw
mov
xchg
test
scas
imul
adc
insb
cmp
sarb
sub
hlt
mov
adc
std
add
pop
dec
pop
push
or
pop
cwtl
jl
je
push
jge
out
mov
push
call
js
sti
jle
pushf
jmp
loop
push
pop
mov
add
or
pop
sbbl
sub
xchg
and
out
rol
scas
icebp
inc
and
outsl
push
adc
lret
movsl
gs
aas
icebp
inc
add
test
cmp
inc
push
popf
pop
scas
pop
lahf
xchg
in
sbb
push
sub
lret
sub
jne
pop
fildl
pop
imul
pushf
xchg
sbb
dec
ret
cmc
stc
and
popa
mov
adc
cmpl
out
test
ret
lcall
sub
fcoms
stos
scas
ljmp
xor
aam
nop
and
enter
mov
add
xor
ljmp
push
sbb
sub
test
fisttps
sahf
sarl
dec
icebp
fidivs
push
mov
test
dec
shlb
test
cmp
push
pop
jns
sub
mov
daa
mov
cmp
jge
clc
js
sub
lds
in
dec
decl
scas
ds
icebp
mov
add
mov
nop
jne
daa
push
mov
lret
sahf
lahf
jge
push
add
jecxz
sbb
mov
ds
gs
jmp
loop
ret
sub
stos
imul
pop
pop
jecxz
bound
push
inc
pop
out
push
fsts
in
fs
notl
inc
inc
lds
ljmp
subl
std
popa
mulb
cmpsl
xor
push
imul
push
dec
adc
mov
mov
fnstcw
sub
outsb
cmc
imul
xchg
jmp
int3
pop
inc
mov
pop
or
push
aaa
push
aas
es
jns
push
fistpll
jne
xchg
outsb
dec
push
sbbl
cmp
loopne
add
dec
mov
jnp
data16
test
or
es
test
mov
aaa
inc
repz
stc
sub
mov
xchg
pusha
outsb
xchg
sub
subl
or
scas
jecxz
inc
add
and
sarb
sbb
mov
push
or
ret
mov
jb
inc
bound
loope
or
jae
xchg
fiadds
add
ljmp
out
jmp
sub
cmpsl
xor
stos
out
or
shl
out
inc
sbb
cmp
jecxz
jp
add
lcall
xchg
out
push
in
fdivrl
pop
push
mov
in
stos
inc
sub
push
xchg
imul
ja
std
js
jle
jno
arpl
shlb
and
rol
or
xor
mov
arpl
sti
jle
loopne
mov
sub
xchg
stc
lret
sub
pop
popa
jno
pop
xchg
repz
xor
and
mov
test
and
in
mov
shr
cmp
test
mov
cmpsb
movsb
stos
pop
repnz
roll
scas
inc
rorl
imul
pusha
subb
lea
mov
rcrb
lock
subb
into
shlb
movl
ds
rcll
add
and
push
jo
sbb
push
push
mull
dec
out
imul
jp
and
mov
and
push
ljmp
into
mov
mov
mov
ror
xor
xchg
in
xor
roll
test
push
insl
and
lea
int3
in
aad
inc
and
add
inc
pop
bound
mov
je
sbb
mov
ret
hlt
inc
lcall
mov
mov
push
mov
xchg
or
mov
inc
addr16
daa
sbb
ss
jg
aad
inc
adc
enter
in
dec
subl
cmp
mov
sub
outsl
mov
outsb
pop
xchg
cmp
push
out
lods
pop
mov
mov
lock
xchg
sbb
mov
pop
shrl
dec
jae
sub
fidivrl
fucomip
xchg
lds
cmp
movsb
sahf
mov
mov
cs
jle
dec
addr16
mov
or
das
stos
test
shl
adc
mov
bound
cmp
mov
in
inc
or
ja
fisttpll
and
mov
or
rcrb
jno
or
inc
push
pop
jae
add
add
mov
faddl
inc
outsb
xor
and
je
into
xchg
ret
cmp
xor
or
jmp
jo
mov
or
aas
rol
sbb
adcb
leave
xchg
inc
pop
adc
add
aad
gs
lret
cmp
es
movsl
iret
or
test
das
or
adc
sub
lahf
fiaddl
mov
xor
cmp
loop
leave
jmp
faddl
mov
add
ja
inc
enter
push
js
push
imul
lods
jne
adc
outsl
mov
pop
inc
lcall
in
add
out
mov
add
dec
mov
xlat
xor
jo
lods
dec
jmp
das
push
fidivrl
ja
and
xchg
mov
cltd
mov
jecxz
sbb
fwait
aaa
cmpsb
and
jno
add
dec
xor
out
movsl
pop
xor
pop
lea
xchg
inc
pop
or
hlt
sub
hlt
add
jae
mov
add
dec
push
in
push
push
cmp
jecxz
add
mov
adc
js
mov
loope
push
cmpsb
andl
push
arpl
mov
sbbl
call
mov
inc
repnz
mov
mov
inc
xchg
mov
jecxz
movswl
ja
rcpps
dec
sub
rol
lcall
dec
or
jb
pop
dec
xor
mov
scas
inc
pop
push
repnz
mov
pop
test
shlb
lret
loop
jge
shll
pushf
lods
pop
mov
std
xchg
fucomi
js
cli
push
pop
jecxz
mov
dec
shrb
push
cmp
lahf
clc
adc
xchg
add
loope
mov
imul
outsl
sbb
lret
arpl
test
fs
xchg
sahf
lret
mov
add
arpl
fistl
sbb
or
xor
mov
adc
orb
inc
pop
sbb
scas
int
mov
push
pop
push
into
jbe
lcall
outsb
gs
stos
in
pop
xchg
xlat
push
push
xchg
add
pop
xor
cmp
adc
lds
adc
lods
mull
pop
notb
mov
dec
jl
gs
cli
xchg
xchg
xchg
cmp
mov
jmp
cmp
dec
jl
das
and
add
mov
out
mov
sub
pop
test
push
pop
jns
jge
imulb
fstp
mov
or
mov
sub
mov
push
or
in
mov
jo
sub
or
pop
and
xor
mov
jnp
mov
add
into
arpl
rorb
mov
cld
push
mov
stos
in
pop
je
pop
mov
out
sti
std
and
int3
sbb
imul
mov
mov
or
cltd
aam
adcl
or
aaa
ds
lea
outsl
cmp
movsb
push
jg
fsubrs
jae
call
icebp
mov
xchg
inc
pop
xor
movsb
fs
lcall
adc
add
dec
or
xchg
lahf
loop
lods
jae
jg
in
nop
out
or
pop
cwtl
cli
out
jns,pn
rcrl
pop
jne
push
das
fwait
cmp
out
lods
mov
test
cli
xchg
dec
scas
lcall
xor
jp
sar
nop
dec
xchg
std
std
sub
pop
dec
stos
mov
jg
ds
or
in
imul
cmpsl
inc
mov
insl
ficompl
mov
and
sbb
sbb
fistpll
lret
fs
bound
jo
cli
xor
xchg
in
push
sub
pop
inc
dec
or
pop
popa
jle
and
rorl
mov
aas
push
sbbb
xchg
cmp
iret
scas
mov
outsl
rolb
mov
adcb
neg
xor
pop
adc
cmpsb
mov
out
push
popf
cli
sbb
int3
loopne
jmp
out
xor
mov
mov
ss
add
repz
leave
dec
pushf
sahf
lahf
and
xchg
test
pusha
mov
mov
jmp
sub
xlat
mov
sbb
int
arpl
push
xor
loop
add
xchg
cmp
pushf
xchg
or
xchg
push
mov
mov
jp
jge
jl
xlat
mov
imul
mov
push
pusha
mov
cld
mov
mov
out
sub
dec
sahf
aaa
push
or
push
mov
push
pusha
cmp
scas
xchg
int3
sub
lea
cmp
sub
cmpsb
mov
in
inc
cmp
test
mov
jmp
mov
scas
mov
stos
cmc
sbb
or
push
icebp
in
out
dec
mov
js
adc
sbb
lods
xor
add
sti
mov
stos
rcrb
jp
iret
pop
adc
int3
jns
dec
sbb
subl
cwtl
push
in
push
sti
mov
cli
in
xor
xchg
adc
iret
data16
ret
imul
xchg
orl
orl
push
mov
imul
int
test
in
sbb
lea
imul
cmp
dec
dec
inc
in
dec
leave
movsl
lcall
mov
inc
loop
movsl
test
adc
cmp
js,pt
add
cmc
push
lahf
js
insb
aam
xor
ret
notl
popf
jnp
cltd
cltd
iret
inc
xlat
pop
sbb
mov
lcall
andb
jo
icebp
mov
loop
sti
imul
stc
je
pop
mov
inc
stos
push
mov
and
add
test
mov
push
xchg
call
push
test
enter
loope
jg
inc
sarl
pop
mov
jne
xchg
sub
mov
bound
add
jae
outsb
jge
and
lahf
dec
or
and
xchg
sbb
jmp
sub
mov
fbld
mov
cmc
cs
jl
das
fcoms
lods
push
push
or
xor
xor
pop
mov
jg
or
xchg
inc
jbe
and
cmp
inc
push
add
mov
lret
jp
xor
mov
jg
xchg
cwtl
pop
movsl
xchg
add
jmp
or
jo
pop
push
lods
daa
inc
pop
jmp
pusha
cmpsb
mov
inc
adc
sarb
aam
scas
loopne
sti
inc
test
pop
cmpsb
mov
lcall
pop
jae
mov
sbb
divb
or
dec
rorl
imulb
lods
and
es
jl
push
in
cli
out
fimull
pop
hlt
daa
ja
xchg
jnp
jp
mov
and
dec
bound
mov
jecxz
outsb
out
icebp
js
push
inc
mov
xor
test
sub
fisttps
inc
and
ja
ss
mov
ret
inc
or
xchg
adc
cmp
pop
leave
out
add
mov
andb
lcall
imul
cmp
push
pop
subb
pop
mov
rorb
daa
sarl
insl
out
fidivrl
aad
movl
push
aas
fsubrp
scas
loopne
pop
in
popf
fs
shl
lret
mov
pop
unpcklps
fwait
pop
cs
jns
push
push
xor
add
mov
mov
or
test
inc
pusha
xchg
push
in
pop
add
pusha
xor
daa
sbb
icebp
fisttps
mov
lret
lock
je
sbb
aaa
mov
and
popa
fstpl
adcl
test
or
pop
pop
out
jbe
test
dec
xchg
clc
cmpsl
mov
cmp
les
xor
inc
adc
ficompl
adc
es
insl
and
mov
cmpsb
add
adc
xchg
movl
or
scas
bswap
arpl
aaa
loopne
dec
out
mov
rorb
pop
pop
mov
in
sub
lahf
dec
cwtl
fcoml
mov
daa
xchg
ds
cmp
pop
dec
and
daa
cli
push
icebp
cmc
sbb
push
jns
jmp
cmp
cmp
fstpl
xchg
xchg
inc
addr16
lcall
stos
cld
xchg
xchg
cmp
pop
nop
lahf
ss
repz
push
imul
cltd
mov
sti
ss
push
jl
shll
rcll
jb
scas
shlb
repz
cmp
leave
inc
sub
jno
sti
xchg
cmc
mov
int3
pop
inc
test
inc
mov
mov
jecxz
xchg
push
lods
test
jge
mov
pop
loop
xor
mov
ret
mov
dec
xchg
xchg
xchg
lods
or
andb
mov
pop
jbe
lods
subb
xchg
fdivl
mov
xchg
adc
xor
jno
add
dec
push
das
mov
lods
jle
adc
jl
jmp
xchg
and
call
push
iret
fidivl
out
pop
int3
pop
adc
mov
unpckhps
or
mov
or
cmp
push
rclb
jb
xchg
subb
insb
xchg
dec
cwtl
mov
aam
scas
sbb
jmp
int
shlb
adc
aas
xor
jmp
mov
shll
ss
out
mov
or
pop
cmpsl
cmp
push
ljmp
les
out
daa
subb
shrl
mov
mov
and
orw
add
ret
cmpsb
sbb
ret
daa
cli
jo
mov
popf
mov
movsl
jge
xchg
sbb
mov
rcl
loopne
enter
mov
outsb
popa
lret
js
jns
rcrl
das
imull
bound
inc
imul
push
shl
mov
test
pop
outsb
movsb
movsl
frstor
subl
inc
insb
sbb
clc
jns
lahf
addr16
ffree
shlb
pushf
push
aad
mov
cmp
imul
aam
cli
mov
jnp
lahf
loop
xor
and
xchg
loop
dec
popf
push
inc
pop
jl
jae
jmp
icebp
sarl
xchg
sbb
fsts
add
mov
jl
fistpll
repz
das
dec
out
gs
push
rorb
sub
bound
push
clc
add
pop
sbb
adc
in
outsb
xlat
lods
enter
mov
popa
pop
fiaddl
imul
int
xchg
shrl
cmp
testl
imul
or
xchg
mov
push
stos
jecxz
mov
sub
lcall
das
jb
push
push
movsl
stos
addr16
adc
js
push
or
sahf
rol
lcall
dec
jo
mov
insb
adc
adc
scas
movsl
loop
orl
cmpsl
mov
shrl
dec
jae
xchg
leave
add
movsb
jae
or
push
imul
lods
insl
fidivl
repz
out
iret
push
xchg
in
pusha
sahf
xchg
mov
sbb
jp
out
mov
enter
xchg
daa
sbbl
cmp
push
outsb
dec
aas
dec
hlt
popa
cmp
add
sub
inc
dec
mov
pop
scas
sbb
pop
push
inc
popa
push
adc
aas
add
lret
xor
xor
jne
sbb
push
mov
jl
pushl
xor
fcmove
arpl
addr16
outsl
push
push
nop
xchg
or
push
xor
inc
nop
adc
inc
insb
inc
jg
jmp
fstl
dec
sub
fstps
loop
pop
or
jb
out
idivl
sub
push
in
sub
outsl
lcall
mov
clc
movsl
loopne
cmpsb
ljmp
sub
jbe
cwtl
and
xchg
sbb
xchg
add
mov
add
cmp
jo
arpl
push
xchg
adcb
and
jo
test
add
pop
repnz
ds
iret
push
mov
clc
fninit
in
adc
nop
ja
sub
lret
add
outsl
aad
or
in
int
sub
cmc
lea
lea
int
stos
cmc
mov
cmp
stc
lahf
jl
push
out
mov
adc
mov
add
js
inc
mov
xor
pop
outsb
aaa
test
sbb
movsb
gs
pop
lcall
mov
aas
sbb
shr
mov
cmp
dec
mulb
sti
int3
loope
adc
mov
mov
ficoms
rorb
orb
sahf
inc
clc
xchg
jle
insl
mov
sub
cmp
pop
inc
repnz
fnsave
insb
dec
pop
add
dec
jl
adc
sub
fadds
ljmp
es
out
lret
inc
in
or
pop
push
sbbb
jo
xchg
daa
push
sub
inc
pop
out
movsl
gs
cs
adcl
and
popf
sbb
jno
shlb
lahf
pop
sarb
xchg
sbb
shrb
in
sub
adc
inc
repnz
shrl
jge
cmc
lea
fsubs
fwait
cmovns
xchg
callw
mov
divb
shll
push
mov
dec
sbb
hlt
leave
lret
fcompl
lret
add
adc
iret
cmpsl
movsl
sahf
outsb
nop
xor
dec
lahf
add
shlb
cltd
push
fstpt
push
bound
leave
fwait
inc
int
fcmovbe
movsb
cmp
or
mov
scas
hlt
shlb
push
mov
mov
test
mov
test
push
jne
jge
cmp
scas
lcall
sbb
jl
mov
aad
int
inc
mov
mov
insb
test
in
push
mov
mov
xorb
out
clc
xor
mov
sbb
sub
aam
adc
das
ds
push
clc
into
sti
fsubrl
xchg
and
call
jnp
pop
and
negb
repnz
lcall
mov
js
push
cld
xchg
xchg
or
aam
lock
cltd
das
popf
enter
stos
fists
cmp
lret
not
pop
out
sub
lea
addl
aam
aas
testl
xchg
negl
jne
and
and
lds
mov
ja
ljmp
adcl
popa
mov
testl
push
iret
je
adc
push
cs
pop
or
lds
adc
sbb
inc
push
ja
pusha
xor
loope
xchg
aad
in
jmp
jmp
lret
outsl
cld
adcl
mov
push
ret
xchg
fnstsw
mov
sub
push
jp
aad
mov
add
jae
and
mov
shll
dec
and
adc
inc
adc
in
jo
test
std
out
sbb
rorl
cltd
out
cmpsb
lods
mov
cmp
jne
inc
lods
insb
jae
out
fcomps
subl
dec
push
mov
inc
stos
test
dec
jp
cmp
jb
sub
mov
les
mov
pop
bnd
sub
fcoms
dec
xchg
lods
mov
es
mov
add
insl
xchg
cld
adcl
ds
pusha
mov
inc
xchg
jae
int
mov
mov
negl
popa
xor
fld
and
add
ja
frstpm(287
and
clc
xchg
dec
cld
aad
adc
ficoml
call
mov
inc
movsb
mov
call
mov
out
sub
inc
cmp
pop
pop
xchg
test
jge
pusha
mov
inc
xor
rcrb
cmp
jmp
adc
adc
dec
repnz
test
cltd
in
mov
adc
insl
scas
shll
fimuls
fbstp
sub
mov
dec
and
lea
jge
cmpsl
insb
cmpsb
and
or
imull
hlt
sub
lods
fisubrl
call
pop
dec
mov
nop
or
push
mov
xor
rcrl
leave
mov
std
push
movsl
enter
or
inc
adc
icebp
ljmp
jecxz
add
out
iret
pop
lret
lds
aad
negl
pusha
rcl
inc
push
sub
data16
dec
push
mov
pusha
popa
pop
out
mov
sbb
pop
mov
imul
and
rcr
loop
and
cmp
roll
inc
mov
mov
stos
ret
outsl
mov
gs
adc
ret
mov
repz
inc
imul
in
fnsave
pusha
push
adcl
mov
les
in
rcll
psadbw
sti
push
inc
or
insb
sahf
lret
outsb
push
sub
mov
andl
fwait
sub
pop
lea
lock
ret
and
add
push
rcl
outsl
jns
hlt
xor
and
jb
add
insb
es
adc
lods
std
repz
sub
inc
push
xor
sbb
ss
lods
add
fnstcw
bound
pop
decl
cmpsb
add
push
es
and
xchg
sbb
cmp
push
movups
xor
xor
iret
loop
inc
or
stos
enter
fcomps
lret
subl
movsb
pop
inc
jmp
inc
mov
xchg
out
sbbl
sbb
dec
add
push
dec
aas
ss
mov
push
movsl
push
xchg
pop
rorb
or
dec
test
lods
push
push
in
pop
mov
inc
filds
sub
test
movsl
sub
mov
les
inc
popa
inc
call
test
cli
movsl
rclb
jno
lock
stc
mov
pop
xchg
xor
std
int3
filds
stc
ret
addr16
add
loopne
add
fs
fxam
jp
mov
mov
mov
cs
xchg
mov
clc
imul
and
int3
mov
add
test
dec
daa
inc
stos
ficomps
cld
xchg
cmpsb
dec
mov
mov
mov
daa
cs
inc
fsubrs
sti
cld
fmull
shrl
jne
mov
mov
xchg
ljmp
cld
lea
icebp
lcall
loop
aad
insl
push
push
mov
push
popa
sbb
xor
xchg
and
jae
mov
cs
repnz
jge
mov
or
ljmp
aaa
dec
insl
repz
dec
pop
movsb
pop
orl
in
push
testb
leave
shrl
pop
and
push
and
sti
jge
ljmp
push
rcrl
rclb
mov
cmp
mov
xchg
mov
mov
out
pop
js
ret
mov
es
in
shrl
cmp
xchg
and
arpl
pop
jnp
mov
out
imulb
mov
pop
hlt
xchg
add
mov
or
cwtl
loopne
lock
add
xchg
inc
std
rcr
out
sbbb
lods
loopne
fsts
int3
repnz
aad
cmc
in
mov
shl
sub
push
cmp
jecxz
mov
cmp
add
lds
jae
andl
and
dec
or
mov
xor
mov
fdivrs
push
fldl
mov
xor
lret
outsb
cmp
jns
jmp
sbb
cmp
cmp
pop
mov
adc
xlat
dec
imul
mov
mov
and
sbb
arpl
mov
aas
sbb
push
rcr
subb
pop
mov
insb
mov
xor
movsl
mov
popa
or
and
cmp
es
popa
mov
stc
and
adc
mov
or
out
xor
jne
lret
cmp
xchg
je
in
cmpsb
xchg
xchg
cmpsb
cmp
sbbl
in
jae
sub
sbb
lcall
push
in
pop
add
mov
mov
out
push
jno
and
pop
js
mov
and
cmpsl
test
scas
and
ljmp
cld
jne
lods
mov
mov
xor
decb
jne
add
pop
xor
inc
mov
in
pop
push
mov
inc
pop
pop
test
rorl
imul
xlat
rcll
mov
iret
sahf
adc
xchg
pop
jecxz
fdivrp
mov
push
insl
cmp
out
and
fwait
clc
out
aam
repnz
xor
xor
push
aad
cmp
ds
pop
dec
dec
bnd
mov
pop
and
add
lahf
xchg
repnz
js
aas
jp
xor
lcall
idivb
loop
push
add
loope
aam
iret
scas
xor
sbb
mov
adc
and
mov
sarb
scas
inc
imul
cmp
sbb
les
push
mov
clc
iret
out
lods
mov
pusha
or
and
orl
popw
movsb
dec
cmpsl
shll
dec
iret
or
sbb
xchg
mov
negl
inc
scas
faddp
push
es
gs
subps
das
ds
xchg
fcos
add
scas
xchg
inc
lret
ljmp
fnsave
push
das
in
adc
xlat
mov
pop
add
mov
lret
std
jmp
test
pop
movl
push
inc
sarb
cmpsb
test
fdivp
and
dec
sub
lods
dec
add
xchg
iret
pop
mov
mov
mov
repz
nop
sub
fwait
xor
stos
je
push
fsubl
jge
mov
cmp
add
pop
das
sub
adc
imul
dec
mov
cmp
xchg
addr16
sbb
icebp
mov
lret
inc
out
into
jae
mov
out
cmp
and
mov
sbb
daa
loope
xchg
ss
cmp
aad
push
dec
ljmp
or
clc
stc
mov
mov
cli
imul
add
and
jge
enter
sbb
gs
aaa
gs
xchg
cmp
push
mov
lds
test
outsb
push
repnz
test
push
pop
mov
rcrl
ja
mov
fadd
sbb
xor
push
out
cmpsb
inc
mov
sbb
mov
cli
jae
jp
jno
lock
mov
iret
mov
xorl
mov
roll
pop
xor
sbb
lods
in
adc
nop
icebp
loopne
sbb
jg
call
jo
jge
jnp
sub
ret
xor
pop
push
inc
xorb
iret
pop
add
fs
sbb
pusha
jmp
shlb
int
and
inc
mov
popa
or
repz
pop
ds
fcomps
sbb
les
sub
add
daa
mov
adc
fstpt
sarb
cmp
test
mov
xchg
not
mov
das
or
push
testb
mov
jmp
jg
pop
fldcw
out
cs
sbb
aam
imul
daa
pop
aad
cmp
mov
out
pusha
in
xchg
add
mov
in
mov
xor
int3
mov
sub
ja
lea
mov
sub
das
lods
rcl
push
push
out
or
mov
and
adc
push
shld
cmc
or
fcoms
push
jno
pop
xor
pop
das
add
add
jmp
sub
push
mov
jne
xor
ficomps
ret
rorb
in
mov
cmp
lods
aad
shr
inc
cwtl
mov
inc
repnz
idivl
jp
insl
dec
cmp
sub
push
fstps
shll
cmp
es
lds
adc
mov
mov
movsb
and
or
add
mov
cmp
or
shrl
inc
fcmovb
stos
cmp
adc
mov
in
outsl
sub
pop
jmp
xor
cmpsb
jge
and
sbb
xor
lds
or
rcrl
jb
jecxz
rcrb
aad
add
adc
aaa
cmp
sub
or
lret
jnp
jp
aaa
sbb
lods
mov
sarl
popa
and
xor
cmp
sub
add
mov
mov
lret
testb
test
add
dec
mov
data16
jbe
fsubrs
cmpsb
cmpsb
sbb
fimuls
mov
inc
pop
xor
adc
iret
jle
hlt
jae
cmp
adc
sbb
inc
cmp
push
dec
icebp
idivl
aas
mov
cmpsl
movsl
pop
mov
jp
pop
xchg
jbe
push
xor
sub
inc
dec
inc
push
inc
sti
arpl
pop
std
test
arpl
mov
dec
notl
test
mov
cli
jbe
arpl
mov
dec
rcr
cmpb
push
movsl
icebp
in
mov
fnsave
cmp
popa
pop
or
ss
lock
pop
es
mov
mov
scas
mov
adc
aaa
scas
std
lods
jne
pop
mov
adc
pop
mov
in
out
xchg
mov
cld
jns
in
jne
inc
repz
xchg
shlb
push
cmc
pop
mov
js
test
cld
js
mov
sbb
inc
jle
cmpsb
fsubl
sub
jp
les
xchg
daa
test
sbb
mov
mov
mov
into
jbe
pop
out
mov
mov
push
loop
sub
adc
fucom
sub
outsb
jle
mov
es
js
loopne
pop
mov
movsl
push
es
jno
icebp
jle
sbb
lods
adc
mov
jbe
ljmp
aas
xor
mov
cmpsb
push
aas
inc
sarb
xor
xchg
push
sar
cmp
mov
daa
lods
in
fldt
insb
cmpb
push
aas
mov
ja
testb
hlt
push
les
in
mov
mov
test
popl
push
ds
xor
pop
mov
push
sub
mull
and
dec
into
imulb
lea
test
sahf
cmpb
jb
nop
push
rcrl
jecxz,pt
sbb
mov
xor
mov
xor
lahf
addr16
sbb
jb
out
cwtl
pop
je
mov
daa
ja
jecxz
jnp
ljmp
xorl
dec
clc
out
call
jb
ret
adc
jecxz
jl
pop
push
pop
cmp
adc
gs
pop
sti
mov
inc
cmp
dec
call
fstps
les
add
pop
mov
arpl
pop
mov
mov
in
inc
ret
scas
gs
cmc
xor
pop
lahf
jb
xor
and
adc
popa
xchg
fistps
jmp
movsb
sub
lret
sbb
inc
xchg
mov
inc
and
pop
insb
push
test
in
add
bound
adc
xchg
jge
inc
mov
xchg
std
es
push
cmp
mov
mov
insb
repz
fistpll
daa
xor
pop
scas
jmp
dec
sbb
mov
add
in
shl
sub
movsl
lods
call
cmp
jge
adc
cli
cs
in
xchg
int3
jecxz
mov
jns
xor
xchg
flds
sbb
or
je
xchg
xchg
ds
jo
jbe
bound
and
inc
or
iret
jmp
sub
and
mov
leave
popa
push
xor
mov
jnp
jmp
or
jnp
push
jecxz
loop
outsb
ret
add
mov
inc
repz
sbb
movsb
sub
add
jp
mov
add
sbb
imul
or
xchg
dec
call
rol
sbb
add
mov
and
rcr
ret
cwtl
xor
add
cmp
or
popa
insb
cmp
pushw
dec
and
xorb
jp
pushf
test
mov
loop
or
xchg
orb
pextrw
aas
cltd
hlt
or
sub
or
and
push
out
push
dec
call
notb
jmp
push
mov
cmp
loopne
pop
jg
cmp
in
lret
fisubrl
fistps
out
stos
ret
int3
fdivrp
call
fisubrs
pop
in
push
stos
scas
lret
test
std
cmp
jmp
mov
out
jae
xor
xchg
and
and
push
mov
insl
sbb
sub
mov
ds
lods
add
jecxz
push
ljmp
sub
xchg
sbb
sbb
sbb
hlt
cmp
cmpl
repnz
pop
mov
or
xchg
lcall
loope
ljmp
mov
jp
jecxz
xchg
xor
loope
icebp
jge
push
jnp
lods
jg
push
int3
or
add
dec
and
mov
jmp
jle
xlat
or
stc
jl
pop
les
shlb
rorb
int3
or
or
cld
mov
loop
add
loop
lods
inc
add
dec
add
aam
inc
gs
outsb
mov
movsb
aas
pop
sub
je
dec
push
mov
pop
sti
jmp
pusha
sbbl
xor
push
or
and
adc
stos
std
fisttpl
rcrb
sub
sub
or
jmp
rcr
sbb
xor
cmp
iret
add
mov
mov
mov
cmp
jge
cmp
jbe
sarw
inc
int
clc
cwtl
mov
fisttpll
fisubrl
imulb
mov
repz
insl
push
xchg
dec
mov
add
sbb
lods
inc
add
test
jle
add
sti
cmp
popa
jae
call
push
mov
fwait
xchg
pop
mov
sti
lret
clc
xchg
call
and
xor
mov
pop
inc
xor
sbb
icebp
inc
inc
fprem
mov
in
leave
fcomi
movsb
jae
xor
insl
rol
aad
xchg
or
mov
mov
push
clc
or
int3
adc
iret
loope
ja
pop
repnz
stc
gs
mov
or
mov
test
loopne
aam
aas
fldt
sub
mov
add
in
jp
push
aad
lcall
mov
sbb
popf
pop
sub
cmp
mov
add
xchg
adc
andl
cltd
dec
inc
bound
cmp
pushf
jno
dec
dec
jae
out
pop
add
sbb
mov
out
fs
jo
mov
scas
and
mov
xor
and
jmp
xor
add
stc
out
fsubrl
fdivr
dec
xchg
inc
insl
add
hlt
subb
lcall
inc
mov
and
cmp
sub
subl
shlb
pop
sub
ljmp
xor
push
or
adcb
xchg
pushf
or
pop
in
mov
xchg
fstps
ja
ja
jne
scas
lret
ds
ret
xor
adc
lea
mov
andb
int
cmpl
inc
mov
and
lea
aam
cltd
and
sbb
jecxz
pop
icebp
xchg
cld
and
dec
imul
in
or
push
dec
rcrb
leave
scas
rorb
adc
les
shlb
cwtl
dec
sub
and
stos
jo
jle
pusha
xchg
mov
enter
cmc
push
or
sbb
fsubl
pop
pusha
jbe
fmull
xchg
inc
xchg
ljmp
outsb
aaa
jle
mov
xchg
lods
iret
in
add
andl
jmp
dec
jl
pop
js
push
push
jnp
add
pop
leave
xor
sbb
fmul
jg
sbb
or
es
or
les
or
imul
pop
xlat
xor
adc
pop
scas
mov
dec
cwtl
jl
ss
notl
in
jl
mov
push
fsts
loopne
and
xlat
cld
aas
pop
clc
sbb
imul
pushf
mov
dec
push
sub
pushf
xor
insl
and
jno
in
jb
add
xchg
loop
mov
out
xor
xchg
rcll
ss
popa
xbegin
ret
ja
frstor
lret
dec
fimull
negb
or
mov
mov
stos
push
in
inc
lods
es
cmp
cltd
repz
sub
repnz
dec
clc
xchg
cld
ds
inc
or
mov
inc
fwait
ret
sub
or
ljmp
daa
test
cmp
jmp
filds
or
push
and
xchg
daa
inc
pop
add
inc
xlat
or
add
or
mov
sahf
gs
mov
or
aaa
xor
push
xchg
and
out
mov
xor
inc
inc
or
mov
mov
pop
dec
push
push
mov
push
xor
mov
or
jmp
push
inc
out
popa
mov
jo
xor
pop
movsl
jo
hlt
adcl
jle
repnz
xor
dec
xchg
jnp
pop
popa
dec
sub
lea
xchg
and
scas
sub
test
mov
push
adc
mov
in
int
cmp
mov
imul
pop
aaa
sbb
mov
jmp
bound
fisubrl
mov
fistps
inc
pushf
das
xchg
adc
int3
xor
fadds
dec
dec
aaa
call
mov
imul
jbe
lods
fimuls
or
sub
lahf
in
cmp
test
pop
sbb
sub
mov
dec
or
std
addr16
pusha
cld
cmpsl
insl
mov
and
sub
cmp
xchg
jmp
cmp
push
mov
sub
les
inc
add
fs
sbb
ret
int
loopne
jns
sub
outsb
inc
shlb
and
rorl
add
add
xor
inc
scas
mov
popw
movsl
scas
pusha
and
ret
and
mov
xchg
movsl
scas
int
lea
movsl
xchg
and
inc
pop
pop
insb
jmp
rcrl
stos
or
fisubrs
fists
sub
aaa
mov
imul
jge
enter
cltd
jecxz
jg
loopne
lods
std
or
xchg
xchg
negl
mov
loope
cld
rcrl
cwtl
fbstp
imul
dec
mov
xchg
iret
mov
aad
jg
clc
xchg
ljmp
or
jp
js
lods
add
xor
jge
xchg
ss
inc
xor
xorl
xchg
test
mov
push
sbb
gs
shl
bnd
es
pushl
test
mov
iret
mov
test
xor
mov
je
jnp
xor
hlt
add
or
pop
and
inc
mov
cmp
add
xchg
aas
mov
lahf
icebp
adc
jle
mov
push
mov
xor
mov
cmp
sbb
jns
fisttps
fucomp
and
aam
das
and
cmpsl
mov
pop
push
movsl
jecxz
push
out
cmp
in
add
das
cmp
inc
or
jno
add
add
aad
xor
and
ret
dec
adc
fisttps
cmp
loope
sbb
cmpsl
sbb
addr16
subb
pop
fisttps
mov
idivl
cmpl
stos
push
repz
pop
fisubrl
add
filds
adc
repnz
cmp
mov
jo
lahf
repnz
shrb
jno
and
test
loope
roll
pop
mov
cmp
fldenv
outsb
loopne
je
lods
mov
mov
and
xor
jmp
testb
fists
xchg
and
popf
cmp
cmp
pop
fldcw
xchg
test
shrl
ljmp
movsb
and
jp
gs
cld
sahf
and
mov
scas
jle
rcl
sbb
subb
xor
push
hlt
jmp
xor
insl
hlt
dec
icebp
xchg
sub
es
inc
ds
add
int
jo
stos
sahf
scas
outsl
sbb
adc
and
subb
faddl
imul
test
or
dec
dec
stc
push
pusha
sbbl
cli
ja
dec
mov
rcrb
inc
out
jp
add
inc
decb
cmp
mov
add
push
in
fmull
add
mov
sarl
adc
mov
test
pop
ficoml
add
bound
dec
cmp
push
jg
xor
jno
push
inc
lock
pop
pop
pop
fldl
dec
repz
mov
mov
and
sbb
adc
and
inc
out
out
insb
sub
jae
or
rorb
mov
xor
jb
lock
add
adc
push
push
in
loope
cwtl
outsb
jmp
in
lcall
xor
pop
cmp
add
mov
pusha
jnp
mov
push
dec
sbb
jg
out
das
pop
les
inc
dec
movsl
add
mov
and
aad
add
shll
popa
adc
insb
imul
adc
jnp
idivl
addr16
int
pop
push
and
pop
adc
xor
pop
or
adc
mov
stos
mov
out
jge
xor
dec
call
push
iret
notb
pop
sbb
shrl
imul
cwtl
inc
lock
adc
enter
xchg
in
dec
outsb
aam
inc
in
mov
pop
out
sbb
and
sbb
sti
cmpsb
jb
dec
sahf
ljmp
shrl
loope
mov
xchg
pushf
sbb
jb
stc
cmp
lret
test
fwait
les
js
int3
cmp
mov
fmull
jb
adc
das
pop
xchg
mov
xor
jmp
xadd
jb
cmp
movsl
in
fstpl
mov
or
push
sub
adc
ficompl
and
push
scas
xor
xchg
mov
sbb
dec
cli
and
lea
mov
inc
pop
xor
lcall
loop
pop
in
cmp
push
cmpb
xchg
dec
prefetch
and
jne
ds
add
clc
movsb
xchg
xchg
decb
mov
icebp
popa
enter
movsl
push
adc
xor
adc
sar
adc
ljmp
rcll
lret
mov
mov
scas
sbb
aam
inc
cmpsl
mov
pop
das
ljmp
push
mov
repz
xchg
hlt
mov
gs
scas
xchg
xor
repz
scas
pop
jge
insl
xor
stc
cmc
add
cld
aas
call
xchg
popf
xchg
sbb
push
in
inc
lcall
mov
pop
in
or
mov
int
sbb
push
repz
notl
stos
ss
xor
add
scas
mov
rorb
fildl
xor
mov
incb
xor
jle
pop
dec
loope
aad
aaa
mov
cmp
mov
inc
sub
jge
push
and
pop
outsl
push
les
js
mov
push
push
outsl
mov
jb
inc
lods
andb
sub
mov
xor
or
out
jns
inc
mov
jae
dec
test
mov
cmp
push
cmp
dec
sbb
jne
scas
sbb
sbb
aaa
sbb
cwtl
pop
mov
mov
sub
xchg
data16
repz
mov
sub
je
pop
fcmovne
add
cmc
inc
and
push
cmp
add
leave
push
mov
jae
xlat
mov
dec
xchg
mov
stc
les
sub
jnp
dec
arpl
jne
xor
and
mov
in
mov
push
out
das
or
loopne
lds
test
push
fcmovnb
mov
dec
mov
jecxz
xor
ret
sbb
cmp
push
push
and
bound
fistpl
mov
add
call
cmpsb
es
mov
movsb
aad
int3
aas
mov
fimuls
xor
in
sbb
mov
loope
push
sbb
push
sahf
pop
xor
and
shrb
jle
pop
loop
in
lret
stc
adc
xchg
lret
push
xor
jle
loop
icebp
in
cmp
aaa
jo
repnz
js
inc
lret
mov
cmp
roll
into
pushf
inc
lea
lods
or
ficomps
ljmp
push
mov
mov
xchg
bound
jne
xor
add
into
push
ret
pop
out
and
cmc
cmp
adc
adc
mov
pop
imul
mov
lods
fidivrl
divl
int3
int
pcmpeqd
lods
inc
push
sbb
in
sbbb
shll
and
std
jl
imul
ret
xor
inc
or
popa
add
std
leave
adc
jg
ret
mov
das
call
mov
sbb
aad
test
stc
jle
jmp
iret
repz
push
dec
jmp
arpl
xor
and
mov
test
dec
addr16
pop
dec
in
dec
or
cmp
sbb
aaa
lret
xor
test
flds
xchg
arpl
mov
repz
adc
push
xchg
mov
xchg
jle
jne
pop
inc
adc
mov
sbb
je
or
loopne
lock
xor
push
and
mov
sti
jl
mov
popa
int3
ljmp
jb
and
stos
inc
xor
inc
or
cwtl
loope
daa
sar
test
loop
lret
sti
stos
in
fiaddl
pop
into
push
sub
jnp
imul
repnz
mov
pop
pop
xchg
js
enter
in
xor
pop
and
outsl
sbb
sahf
jb
mov
add
ror
push
mov
mov
and
cmpsl
movsb
test
or
lret
daa
test
lret
xor
ret
push
add
mov
mov
sbb
in
and
or
iret
and
pop
cltd
sub
clc
cld
cli
dec
mov
jno,pn
fistps
stos
inc
xlat
int3
ret
and
add
and
jbe
push
pop
mov
test
pop
cld
nop
sub
lods
push
push
test
mov
gs
inc
inc
adcb
sbb
add
dec
test
xor
pushf
xchg
mov
mov
int
xchg
jns
pop
push
jmp
inc
push
mov
lds
add
add
jne
loope
hlt
mov
fwait
mov
fldl
push
std
jmp
mov
ss
andl
xlat
aam
cmc
popf
aas
insl
into
loope
notl
inc
mov
fimull
xor
inc
stc
sub
stos
cwtl
xor
push
sahf
movsb
stc
f2xm1
or
mov
jecxz
test
jne
pop
fsubrs
lahf
pusha
int3
mov
dec
shrb
imul
outsb
jae
mov
int3
divb
testl
or
push
cwtl
xor
aaa
xor
fs
lea
ds
rorb
out
js
inc
push
push
nop
js
lods
mov
inc
popa
shrl
xchg
mov
dec
pop
cmpsb
pop
mov
lahf
inc
imul
xchg
sub
sbb
push
mov
call
sbb
mov
repz
ficompl
icebp
sub
ljmp
aad
or
sahf
cli
testb
loope
push
adc
mov
insl
mov
xchg
push
leave
loop
sbb
xor
xlat
push
push
xchg
xchg
sbb
push
add
pop
xchg
das
out
dec
out
pop
adc
xor
leave
fsub
fistps
cmp
outsb
les
or
addb
les
jmp
wrmsr
cmp
lret
pop
bound
fs
lret
es
and
lock
lock
mov
sarb
push
inc
pop
xor
pop
pop
or
adc
stos
mov
mov
callw
cmp
mov
fisubl
add
arpl
or
ret
mov
or
pop
cmp
jo
test
adc
pop
hlt
aaa
scas
in
fnstsw
loop
fidivl
insl
jno
mov
xchg
push
cmc
fiadds
jle
xchg
pop
mov
dec
sbb
scas
or
lea
nop
data16
ljmp
add
dec
call
sub
in
dec
jecxz
mov
pop
out
decb
sub
sub
xchg
jmp
ds
lret
mov
jbe
lret
adc
pop
repnz
or
mov
lds
decb
pop
leave
movsl
push
sub
scas
mov
es
cmp
jge
mov
and
sub
scas
mov
mov
adc
jne
loop
adc
mov
pop
sbb
leave
int
adc
lods
mov
out
mov
rorl
js
test
ljmp
xor
push
dec
popa
dec
hlt
push
jae
insl
testb
dec
push
mov
sbb
sub
scas
jae
fs
test
mov
aas
aad
or
xchg
aas
or
pushf
cmpsl
outsl
or
or
cld
test
mov
inc
mov
push
pop
test
dec
jo
adc
cmp
mov
adc
ds
fcmovnu
push
lea
je
add
push
int3
inc
pusha
and
subl
mov
xchg
test
popf
popa
jbe
fdivrl
or
sub
mov
jo
mov
rcl
pop
fsubrl
inc
jp
jle
shlb
arpl
loop
dec
xchg
mov
mov
cmc
in
icebp
stos
pusha
pop
stos
sbb
xlat
mov
ret
dec
scas
mov
xlat
pop
popa
pop
pop
jnp
sbb
jne
sarl
jl
or
lods
mov
pop
jge
test
andl
popf
aas
and
shll
loop
push
stos
push
nop
adc
jmp
loopne
inc
sbb
xchg
arpl
mov
cmp
or
xchg
mov
mov
pop
and
js
add
je
pop
js
xor
rcrl
jne
pop
push
jmp
mov
stc
add
cwtl
loop
sbb
aad
inc
icebp
add
in
ret
test
push
clc
loopne
lret
jno
jae
pusha
xchg
test
pop
and
ficoms
movsb
or
cmp
pop
test
dec
inc
xchg
pushf
push
cmp
sbb
mov
in
daa
and
xchg
leave
fistl
inc
popa
cs
adc
outsb
divl
pop
add
loope
icebp
jmp
mov
aaa
call
std
inc
ret
imul
xchg
mov
lods
repnz
adc
push
pusha
cmc
sahf
insb
sbb
jo
call
jmp
push
mov
ret
insb
add
cmp
dec
or
mov
mov
repnz
jecxz
cmp
jo
out
shrb
sub
pusha
cli
jp
sub
push
jno
pop
jb
or
sbb
add
test
inc
fnsave
inc
cmp
fnstenv
pusha
jnp
aad
test
fcmovb
divl
repnz
mov
mov
mov
pop
push
sbb
inc
int
mov
pop
dec
dec
fcmovbe
iret
bound
sbb
fwait
sub
and
rcrb
cmp
pop
outsb
and
inc
push
cltd
add
sub
lcall
cs
add
xor
scas
and
jb
mov
lahf
outsb
rcr
out
ds
es
lods
jg
lcall
lods
fsubr
cltd
outsl
or
popl
pop
ss
in
push
mov
xchg
data16
lods
xor
push
pop
dec
push
mov
stos
nop
sbb
cmp
or
jecxz
jl
idivl
adc
push
fldcw
mov
lcall
and
add
push
outsb
or
inc
imulb
or
inc
and
push
mov
and
hlt
xchg
mov
ficoms
cmp
stos
leave
adc
fs
pop
xchg
xchg
out
movsb
add
mulb
pop
rcrb
insb
cwtl
pop
inc
mov
jp
aaa
push
mov
mov
sub
inc
cmpb
ret
ficomps
or
cmp
mov
jno
xchg
enter
mov
insb
push
xchg
inc
sub
mov
push
imul
lea
scas
add
insb
lret
xor
aas
pop
sbb
mov
js
jle
jmp
aas
push
loop
push
or
adc
push
push
les
push
repz
fadd
and
dec
imul
lea
lahf
test
call
pop
mov
jl
ret
ljmp
roll
inc
shll
xchg
pop
cmp
sub
lea
mov
xor
or
jno
out
ret
je
xchg
cmpsl
popa
outsl
sbb
xchg
rolb
mov
mov
jbe
cltd
cmp
jnp
sarb
inc
cld
nop
sbb
and
gs
lcall
out
cmp
sub
dec
int
rol
sbb
ds
push
and
js
cmp
pop
and
xor
sub
or
filds
in
pushf
pop
sub
ret
jg
add
dec
jo
mov
fs
mov
in
xor
sub
and
push
mov
xor
gs
test
adc
negl
jecxz
mov
adc
cld
shlb
and
aam
cmp
int
outsb
gs
cmpsl
mov
and
jp
scas
mov
inc
imul
test
jecxz
add
cli
cs
inc
outsb
mov
lds
pmaxsw
mov
pop
sub
jg
cwtl
mov
jnp
pop
push
xor
and
stos
mov
cmpsl
jp
dec
push
xchg
jne
xor
in
les
inc
ret
add
or
hlt
cmpb
mov
fs
pop
sub
rorb
test
shll
daa
fstpl
push
andnps
cmp
dec
test
xchg
out
add
mov
dec
out
sbb
mov
pop
mov
or
cmpsl
mov
sub
jmp
insl
mov
adc
and
xchg
daa
gs
and
mov
call
cmp
std
add
data16
mov
pop
or
or
mov
xchg
add
xchg
lock
mov
scas
xor
dec
jns
pminub
fsts
push
test
movsb
mov
xchg
ret
mov
mov
push
adc
dec
inc
cmpsb
cmovne
dec
sbb
xor
push
mov
fs
xor
push
out
and
mov
adc
adc
sbb
loopne
js
xchg
cmpsl
mov
mov
sub
mov
lret
fiaddl
mov
pushf
pop
lret
inc
xor
jne
xor
pop
jge
fidivrl
enter
pusha
fstpt
test
test
mov
test
imulb
pop
hlt
xchg
repz
cmp
inc
test
inc
fsubl
outsl
inc
imul
sti
mov
cmp
and
cwtl
sbb
into
dec
sub
xor
hlt
ret
or
sub
or
iret
xchg
mov
ljmp
xchg
rep
add
je
xchg
and
xchg
inc
jne
imul
xor
add
cmc
pop
scas
inc
cmp
dec
fcmovnu
hlt
inc
mov
lret
mov
mov
and
popf
pop
sbb
mov
jb
ss
jmp
pop
mov
repnz
iret
mov
movsb
inc
jbe
dec
jbe
ss
mov
cmp
arpl
sub
dec
pop
lcall
rorl
mov
in
or
xor
adc
ljmp
xchg
xchg
jo
push
fcompl
sbb
lret
pushf
cmp
xchg
xchg
add
xlat
outsl
stos
push
das
and
test
movsb
push
dec
push
and
mov
addr16
push
stc
or
cli
in
imul
fidivl
xchg
lock
lock
pushf
adc
adc
adc
push
mov
cmpsl
into
ds
scas
out
lahf
jle
sbb
inc
pop
mov
adcb
mov
pusha
ret
lret
clc
push
test
cmp
xchg
xchg
jbe
sub
jns
sub
dec
mov
data16
leave
push
xchg
ret
cmp
call
pop
lods
addr16
mov
xlat
sub
std
ftst
out
mov
mov
scas
pop
jnp
lods
mov
jns
movsb
pop
jo
sbb
pop
cmp
flds
xor
test
out
pop
and
inc
mov
outsl
clc
xchg
push
sahf
into
jnp
sub
mov
pop
sti
jle
ds
pop
push
iret
dec
mov
fcoms
hlt
fwait
sub
in
pop
mov
push
rcrl
repz
inc
out
add
stos
pop
aam
adc
inc
addb
sub
add
neg
lods
push
pop
fnstcw
inc
lcall
mov
ds
sub
cld
and
add
push
inc
xchg
pop
sbb
sbb
andl
lock
adc
call
push
lret
mov
outsl
inc
lret
push
out
and
pushf
and
ja
and
into
push
pop
pop
xor
dec
pop
mov
hlt
clc
mov
cmp
bound
scas
ret
lret
cmp
rcrl
sub
repnz
pushf
push
rolb
jb,pt
movsl
cmp
mov
inc
push
xchg
popf
stos
or
pushf
clc
push
xor
sbb
pop
test
sbb
out
std
xor
mov
cmp
sbb
call
adc
lods
cmp
les
jge
es
cmp
lret
cmp
movsb
push
clc
push
insb
and
test
test
sbb
xchg
add
or
es
cmc
xchg
out
pushf
lret
mov
outsl
xchg
fnstcw
xchg
dec
mov
push
and
mov
xlat
inc
fs
push
inc
sub
sti
stos
push
inc
sahf
cmp
roll
je
xchg
lock
lds
jp
fsubr
jae
ss
aam
leave
pushf
xchg
insb
xchg
cmp
dec
insb
adc
lcall
mov
icebp
lret
insb
test
pop
jb
roll
test
daa
es
das
mov
faddl
sbb
mov
sbb
pop
and
sub
mov
leave
mov
xlat
jb
dec
scas
cmpsl
lock
lahf
sbb
movsl
sub
pop
outsb
lahf
lods
mov
jne
in
mov
sahf
sub
mov
stc
add
daa
push
loopne
and
rorb
arpl
jo
insl
lret
jns
push
aam
popa
and
pop
push
loop
shll
push
pop
push
push
call
ljmp
movd
fcomi
jle
loop
icebp
cmp
test
push
add
sub
push
xchg
add
stos
jge
or
test
push
sbb
sub
and
xchg
test
push
push
inc
clc
pop
cmp
fisttps
ret
inc
iret
xchg
mov
rcrb
ja
sahf
mov
jle
movsb
inc
add
out
and
push
push
push
fdivp
scas
out
lds
pop
cwtl
pop
inc
mov
add
out
pop
lock
dec
scas
loop
les
cmpsb
pop
inc
int
icebp
popa
pop
into
jo
inc
fwait
loope
or
in
outsl
jns
leave
mov
jne
mov
dec
mov
fisttps
xchg
cmpsl
ficoms
fsubs
mov
pop
mov
pusha
adc
mov
lds
pop
and
inc
test
dec
fisubl
push
lea
xor
mov
hlt
test
push
shll
pop
sub
sub
sub
lcall
xchg
xchg
xor
sbb
xchg
sub
test
out
jmp
out
inc
mov
dec
sub
fistpll
and
test
mov
test
jne
adc
inc
xlat
arpl
lret
mov
dec
ficompl
push
addr16
inc
fs
shl
pop
inc
push
inc
mov
popf
push
lock
insl
xchg
mov
mov
shrb
fmull
call
xchg
sbb
test
and
push
sbb
movsb
add
das
mov
lock
jl
les
mov
push
sub
push
xor
xchg
mov
scas
push
and
add
and
xchg
pop
outsb
hlt
cmpsl
sti
mov
xchg
movsl
lcall
lahf
cmp
cmp
add
int3
mov
mov
lahf
dec
sti
nop
stos
dec
mov
in
sahf
cmovns
mov
stc
inc
cmpsb
jno
sti
and
pop
mov
pop
jne
lods
and
push
pop
xchg
xor
dec
ds
pop
movsb
cmp
xor
pop
shll
mov
ljmp
jge
or
stos
mov
clc
fnstsw
in
dec
and
jge
pop
paddsw
iret
and
loopne
enter
sbb
fwait
dec
mov
es
push
push
test
mov
out
cs
in
sub
mov
lcall
sub
push
push
inc
pop
jae
mov
stc
adc
add
or
ret
lcall
jg
adc
jmp
daa
mov
test
out
andl
dec
pop
cmpb
orb
clc
xchg
mov
pop
scas
jmp
cvtpi2ps
jg
mov
xor
in
out
add
insb
mov
daa
jecxz
nop
or
lret
in
adc
pop
insl
push
jl
push
ss
mov
push
mov
ljmp
push
fs
cltd
jle
rclb
mov
jge
int3
pop
inc
sti
adc
mov
mov
cmpsb
pushf
adc
inc
test
inc
push
dec
cmp
sahf
icebp
enter
mov
sub
hlt
std
cli
add
inc
stos
mov
shlb
push
cwtl
out
popa
mov
jne
in
mov
lods
rcll
and
jbe
std
je
push
int3
or
cmpsl
aad
fsubr
dec
call
dec
adc
cmp
or
xchg
in
xor
sub
push
mov
outsl
sub
pop
jo
cwtl
outsl
data16
cmp
xor
or
mov
clc
lret
pop
push
aad
iret
adc
je
cmpsl
mov
xchg
cmc
jb
out
mov
lds
hlt
sbb
es
xchg
dec
dec
mov
repnz
hlt
lods
jl
outsb
inc
test
jge
cs
sbb
shll
xchg
xchg
addr16
xchg
into
insl
stos
pop
cmp
jne
scas
jg
adc
push
cmpsl
sub
inc
or
add
cmp
push
mov
mov
ss
mov
xlat
adc
pop
add
pop
mov
pop
xchg
lods
int3
add
and
adc
mov
push
sub
je
ret
push
adcb
imul
mov
daa
pop
data16
movsb
testl
in
iret
shr
adc
shrb
or
and
aad
sub
scas
push
dec
fsubl
xchg
xchg
dec
pop
scas
shlb
xor
pop
xchg
test
mov
push
push
fldl
add
sub
fs
pop
je
mov
or
push
add
std
clc
cwtl
adc
sub
and
xchg
jmp
sbb
or
inc
adc
or
imull
insb
cmp
sbb
jmp
and
xorb
outsb
lret
push
pop
imul
or
sub
daa
gs
stc
add
cmpb
rorl
test
mov
shrl
fisubrs
ss
xchg
and
inc
mov
movsl
aaa
sub
push
inc
cs
insb
xlat
or
mov
jo
or
jmp
adc
ret
loope
jnp
jl
push
test
push
mov
sbb
jb
rcrl
and
arpl
clc
push
push
xor
pop
push
mov
push
pushl
push
mov
xchg
ficoms
ljmp
hlt
mov
xor
icebp
popf
cld
out
sub
dec
pop
in
jno
jecxz
and
sbb
jnp
add
movsl
and
jle
push
dec
or
lods
dec
sub
arpl
mov
jmp
xchg
push
lret
xor
cld
cmc
adc
xor
mov
shll
test
xchg
xchg
jg
add
sub
test
mov
push
data16
pop
cmp
sarb
mov
mov
and
push
cmpsb
fildl
test
jge
jle
jecxz
rcr
rolb
das
push
push
mov
xor
stc
imul
fiadds
stc
in
xor
pop
sbb
mov
cli
subb
sbb
insb
stos
testb
jl
ds
or
ret
add
int3
int
mov
andb
sbb
inc
in
cld
push
lock
mov
aam
pop
aad
lods
or
inc
aad
jg
rclb
push
jle
inc
mov
inc
jbe
push
dec
mov
adc
in
dec
jb
dec
xlat
inc
add
scas
mov
out
mov
push
add
mov
js
sbb
hlt
les
fadds
movsb
lea
fs
xlat
fwait
in
lret
in
in
shlb
and
xchg
aad
xchg
dec
jmp
out
xor
or
stos
fs
xchg
ja
mov
xor
int3
lods
add
fisttpll
in
int
jbe
or
out
out
popf
dec
sbb
mov
push
aaa
mov
sbb
and
sbb
daa
clc
int3
xchg
push
sbb
push
cmpsb
cmp
in
adc
insl
cmova
sbb
xchg
enter
xor
mov
in
int
fnstenv
pop
orb
pusha
mull
lods
cmp
pusha
imul
shlb
mov
ss
jg
mov
jo
es
popa
lret
fsubr
inc
ret
xchg
dec
insb
dec
ficoml
xchg
je
mov
call
in
loope
mov
enter
sub
xor
aad
lcall
dec
cmpsb
in
sub
call
outsl
dec
adc
add
mov
push
fcomi
mov
stos
cwtl
in
nop
xchg
aam
es
cli
ja
aad
je
mov
xchg
imul
in
fadds
data16
mov
nop
xor
addr16
xor
cmp
sbb
les
cmpsl
xchg
fwait
mov
sbb
push
cmpsl
xchg
pop
push
insl
or
sub
mov
and
ret
out
rol
shl
mov
stos
pop
jecxz,pn
adc
mov
jmp
sub
jne
andps
addr16
movsl
dec
cmp
std
push
imul
pop
nop
loope
rcrl
pop
mov
dec
into
dec
inc
fimuls
shll
mov
lret
rcl
dec
jb
mov
insl
sub
sbb
push
rcrb
shlb
push
shlb
jbe
in
mov
mov
mov
in
jns
pusha
movsl
sbb
fwait
ror
jp
test
mov
and
and
stc
mov
mov
xchg
xchg
bound
popa
dec
fnstsw
ja
mov
push
aaa
xor
bnd
xchg
movsb
inc
xchg
mov
sbb
lods
sbb
xor
testb
mov
aas
inc
or
cmpsl
dec
jl
mov
pop
div
in
jecxz
shrb
jnp
rcl
cmp
push
shlb
mov
icebp
jns
leave
aad
mov
jbe
sahf
mov
or
jnp
gs
imul
addr16
into
loope
push
inc
fidivs
pop
fidivs
out
scas
sub
mov
pop
xchg
hlt
jae
cmpsb
leave
mov
imul
lds
lret
add
add
scas
push
inc
push
inc
and
pop
fiadds
cltd
dec
sbb
pop
iret
cmp
incb
outsl
scas
pushl
dec
jns
and
outsl
cltd
sbb
icebp
xchg
jb
jle
repnz
cmp
fildl
push
loop
sub
divb
mov
decl
cmc
add
mul
jecxz
push
shll
lock
add
push
rcr
iret
fmull
lcall
dec
sub
imul
adc
jge
lea
pop
lcall
jmp
lock
andb
inc
cltd
or
inc
aam
sub
mov
push
out
leave
iret
dec
add
sub
and
iret
mov
arpl
ds
push
add
mov
out
int
and
push
xorb
xor
push
cmp
lahf
add
imul
sbb
xlat
mov
sbb
int3
mov
sti
in
ds
cli
mov
aad
inc
jbe
mov
and
sbb
xor
xchg
jo
sarl
push
add
aam
mov
fiaddl
aad
imul
push
insl
push
movsl
popa
adcl
mov
dec
cmc
orb
sub
push
aam
daa
push
sub
adc
data16
cmp
dec
scas
je
xor
add
jbe
popa
or
call
shll
dec
shrl
pushf
popf
in
je
insl
adc
mov
fisttpl
mov
adc
xor
aaa
cmc
cmp
loopne
dec
mov
clc
jmp
mov
nop
aas
pop
les
xor
sbb
daa
jno
pop
mov
fiadds
jo
insl
mov
mov
popa
stc
rcrl
or
nop
mov
sbb
mov
mov
push
fnsave
sub
cmpsl
mov
decb
ljmp
mov
jecxz
stos
lahf
pop
insb
loop
popa
sti
dec
pop
adc
hlt
inc
xor
inc
int3
pushf
pop
cs
dec
xchg
dec
or
mov
cltd
shl
fwait
sbb
mov
jns
dec
neg
and
fimuls
test
jmp
dec
lahf
out
pop
out
pop
mov
push
sub
int
adc
fidivl
into
mov
jecxz
or
bound
xor
sbb
pop
or
mov
push
leave
ret
orb
adc
mov
loop
into
add
out
jmp
push
fdivp
inc
mov
fwait
or
sahf
adc
adc
xchg
mov
jp
ja
popa
jb
mov
xlat
cmpsb
test
arpl
cmpsl
hlt
rorb
popf
imul
cld
movl
sbb
pop
pop
add
xchg
cmp
shrb
sbb
xchg
sarl
mov
mov
mov
and
or
adc
pop
jecxz
mov
xchg
sub
mov
xor
call
pop
inc
xchg
mov
jmp
in
test
adc
xlat
jmp
cs
sbb
push
adc
and
sbbb
xchg
mov
xor
jno
adc
mov
adc
shrb
gs
sbb
adc
adc
dec
test
push
adcb
std
rclb
lea
loopne
je
cltd
pop
imulb
or
add
xor
iret
mov
fwait
inc
decb
pop
mov
icebp
pushf
mov
sub
adc
and
lea
xor
jmp
xlat
dec
aaa
jbe
jle
push
mov
std
or
and
repnz
xchg
stos
sub
loop
les
mov
xor
jge
xchg
imul
cmpl
push
test
mov
jp
call
and
cli
inc
and
clc
pop
jae
jo
jno
pop
jb
mov
or
ret
out
mov
pop
movsl
pop
test
pop
shll
cmpl
and
lods
add
pop
stos
rorl
inc
and
fimuls
mov
dec
add
push
gs
and
insl
rorb
lret
dec
and
addr16
push
loop
mov
aam
mov
mov
js
lret
mov
inc
addr16
ret
push
or
add
or
push
std
jnp
pop
adc
mov
dec
cmp
stc
imull
fbld
mov
ds
cmpsl
mov
jbe
in
mov
sbb
inc
inc
stos
lea
sbb
jb
insb
pop
fadds
or
jp
lret
dec
pop
cmp
ja
xchg
inc
in
loope
and
inc
imul
adcl
cmp
mov
jle
scas
shlb
fmulp
in
ds
push
inc
mov
fisttpl
pushf
sti
xchg
test
dec
jbe
push
cmp
jmp
les
add
add
mov
jmp
daa
push
xchg
inc
sti
push
out
sbb
and
xchg
dec
xorl
cltd
decb
andb
jle
dec
sub
cmp
ffreep
jbe
cmp
jmp
out
lock
pop
sub
rcr
fbld
cmp
mov
cmc
xlat
jns
mov
xor
loope
xlat
pushf
aam
jo
sub
outsl
sub
imul
jnp
push
sbb
frstor
outsb
and
inc
adc
addr16
dec
popf
push
testl
dec
js
out
sbb
cwtl
je
movsb
bswap
xor
sti
scas
push
les
push
push
out
lret
pusha
in
loopne
and
ret
popa
mov
mov
orb
aad
loop
and
add
mov
xchg
pusha
push
dec
cld
or
test
ljmp
shll
inc
movsl
in
js
notb
rcrb
fldl
clc
push
sbb
jne
mov
jp
mov
daa
pop
out
pop
arpl
clc
and
push
nop
outsb
fimuls
inc
lret
inc
jecxz
xor
push
call
mov
enter
or
movsb
lods
fcomip
shr
sbbl
in
cmp
cmp
mov
jle
mov
mov
mov
adcb
mov
dec
cmpsl
call
mov
sahf
std
dec
cmp
xor
gs
xchg
cld
repnz
fisubrs
inc
in
aaa
push
add
movsl
imul
adcl
fidivs
hlt
dec
mov
fistl
sbb
pop
lods
pop
popf
sub
cmpsl
cmovo
or
fildll
jno
add
aam
and
ret
sbb
sbb
mov
xchg
add
int3
mov
stc
and
fnstcw
imul
mov
daa
pop
sub
idivl
or
dec
ret
add
mov
shrb
loope
xchg
push
xchg
cmp
rcrb
nop
ret
push
push
inc
aaa
cld
les
push
cmpsb
movsl
mov
cwtl
push
pop
mov
cs
out
fs
mov
or
lcall
pop
cld
aaa
das
push
jg
cmp
cmc
mov
outsb
popf
mov
scas
push
cmp
pop
cmpsl
imul
mov
fsts
lret
loop
cwtl
cmp
out
rorb
jmp
or
test
and
mov
dec
repnz
cmpsl
mov
mov
insw
mov
fwait
pop
int
aad
add
inc
insb
movsl
scas
push
call
xchg
lods
pop
mov
int3
pop
pop
mov
clc
ret
gs
inc
ds
xchg
and
insl
insl
cmp
dec
out
mov
mov
arpl
jp
pushf
dec
add
dec
add
push
scas
or
dec
jp
mov
cs
lods
rcll
and
in
das
shll
sbb
sti
ljmp
mov
js
push
pop
dec
add
inc
xor
lahf
test
jo
mov
rorb
pop
adc
xor
sub
jbe
mov
imull
xor
cmc
xchg
and
jns
fwait
xchg
in
or
imul
hlt
sbb
add
or
testl
and
mov
outsb
xor
xchg
jae
test
fistpll
aam
mov
sbb
jecxz
mov
push
dec
in
out
push
fsubrs
sbb
and
cld
adc
dec
sub
add
jbe
loopne
adc
push
add
lods
pop
arpl
mov
scas
xor
decb
loopne
jno
jns
or
pop
pop
add
push
sub
je
mov
cmp
shl
pop
enter
nop
insb
push
les
popa
xchg
rcl
lahf
adc
into
jle
ss
jb
repnz
jle
pop
lahf
mov
das
pop
mov
addb
mov
lods
xchg
pop
adc
gs
outsb
fdivr
inc
sti
push
sbb
mov
lahf
ds
and
out
in
xchg
roll
sahf
or
jecxz
stos
jbe
push
fadds
cmp
sub
andl
lods
add
lods
repz
mull
mov
mov
xor
mov
mov
mov
into
shlb
enter
xor
sub
insl
cmc
cld
xchg
mov
hlt
sar
out
add
std
mov
int
scas
mov
pop
std
ficompl
out
pop
sbb
outsb
in
add
sub
gs
pusha
notl
test
mov
in
ja
mov
xor
mov
push
mov
inc
pop
push
loope
icebp
stc
fistl
jge
test
and
scas
movsl
fucomip
loopnew
dec
out
aaa
jb
xor
pop
dec
push
pop
xchg
sbb
cs
and
flds
and
jno
mov
or
cld
inc
sbb
mov
sub
loop
add
cld
add
pop
popa
mov
imul
or
cmp
cmp
xor
jge
das
mov
repnz
jge
mov
inc
inc
mov
stc
and
cmpsl
mov
aam
cs
cmp
sub
cmovle
xchg
add
lcall
jp
xchg
mov
not
pusha
mov
imul
lds
and
mulb
ss
pop
jle
jne
fistl
mov
dec
dec
sub
jmp
sub
addb
jno
dec
sub
mov
leave
leave
sbb
test
add
sbb
and
pop
lret
lods
mov
dec
dec
data16
aaa
add
ja
jb
imulb
jnp
andb
scas
or
sbb
or
pop
inc
arpl
xchg
mov
jg
xor
and
loopne
loop
jecxz
rolb
cmp
xor
dec
mov
aas
sarb
sub
cld
mov
pop
sbb
or
pop
add
lock
sbb
pop
insb
lcall
movsb
sbb
mov
in
movsb
repnz
push
mov
xor
jle
or
movsl
sahf
rcrl
jle
cld
daa
hlt
push
je
sahf
int3
push
add
xor
mov
and
ljmp
mov
xchg
jbe
mov
jne
rcr
stos
lds
mov
inc
aad
test
inc
jnp
sbb
inc
mov
mov
cltd
pop
int
cmp
rcll
dec
push
daa
sub
push
jg
popf
mov
xchg
icebp
mov
add
stc
sub
mov
pop
outsb
ja
fsubl
out
jp
push
jg
mov
ljmp
pop
cmp
add
ficoms
imul
dec
mov
jp
fstpl
lret
inc
jb
stos
xor
xlat
dec
xorb
loopne
adc
pop
push
add
jnp
out
out
jne
jb
orb
mov
cmp
mov
es
add
cli
pushf
mov
mov
fsubrl
cs
imul
dec
adc
sub
push
outsl
lcall
ret
js
dec
xorb
xchg
xchg
add
mov
sub
fldt
pop
imull
insl
sbb
out
in
fldt
inc
and
xchg
rcrb
iret
ljmp
adc
ss
mov
shrl
ret
mov
lahf
dec
mov
pop
in
mov
xor
mov
test
in
sub
xchg
ret
pop
xor
arpl
dec
sbb
test
pop
movsb
add
test
push
test
xor
jne
cmp
fisubl
cmc
rcll
nop
cltd
imul
cmpsb
les
adc
xlat
mov
adc
das
mov
std
push
aam
mov
pop
mov
mull
outsl
push
outsb
xchg
pop
stc
inc
pop
rol
or
aas
movsb
popa
push
pop
dec
leave
fidivrs
pop
dec
and
lret
imul
sub
add
iret
lds
and
dec
icebp
push
sub
stos
or
mov
sub
aad
outsb
mov
and
cwtl
xchg
sbb
lret
xchg
xor
pop
mov
jbe
dec
jecxz
adc
mov
jbe
out
push
sub
loop
mov
pop
adc
jne
or
mov
dec
divb
push
rorb
and
or
cmpb
iret
scas
sub
es
movsb
cmp
inc
div
pop
pop
scas
pushf
mov
add
push
mov
lea
sub
stc
mov
aad
lahf
dec
stos
jnp
mov
cmp
and
fdivr
or
and
sbb
fs
lret
pop
sti
or
cli
pop
xchg
jno
sbb
orb
push
dec
dec
fwait
mov
pop
in
mov
xchg
mov
dec
xor
sub
add
jmp
pop
fsincos
sti
add
mul
xchg
cld
and
enter
lock
cmpsb
hlt
and
in
cltd
fldcw
adc
push
and
fisubrl
sahf
dec
xchg
jae
lods
cltd
cmc
pop
cmp
mov
xor
pop
cmpsl
sub
inc
sahf
sti
xor
pop
imul
jne
pop
mov
jle
xchg
sti
sub
dec
fisubrl
call
inc
mov
cmp
xchg
push
mov
inc
jmp
mov
push
push
pop
lods
push
inc
lcall
xor
pop
call
and
or
jl
sub
cmpsb
xlat
inc
and
fidivrl
push
ja
stos
mov
stos
jbe
lret
pop
mov
je
push
in
mov
loope
ret
shll
insl
sarl
call
fisttpl
or
insl
addl
addb
in
pop
fcoms
and
push
cmp
data16
je
xchg
inc
push
les
decb
aam
cmp
test
and
cmp
icebp
fildll
icebp
sub
es
xchg
out
inc
loop
repz
add
jp
inc
out
cwtl
fisubrs
jge
push
mov
fistps
mov
idivl
stos
mov
pop
xchg
or
dec
lahf
or
pushw
leave
mov
lcall
mov
fisttps
das
sub
push
and
add
dec
mov
jne
cmc
ftst
nop
push
pop
xchg
shll
adc
lds
mov
jl
lods
int3
in
add
int3
pop
adc
xor
mov
ss
push
inc
mov
push
scas
push
jp
jecxz
xchg
add
movsl
popa
xchg
out
daa
mov
lcall
add
jmp
xchg
mov
xchg
add
mov
sahf
adcl
dec
sbb
rcll
in
icebp
lds
scas
add
enter
movl
cmpsb
and
inc
xor
dec
rcll
lret
inc
out
mov
mov
pop
xchg
mov
lahf
jp
xchg
mov
xor
test
sub
clc
ds
mov
in
je
cmp
sbb
rorb
test
jno
push
jl
loopne
xchg
mov
cmpsb
xchg
sub
loopne
jns
dec
rclb
dec
pop
adc
ss
push
jecxz
push
nop
insb
xchg
sti
lret
mov
xchg
add
mov
mov
adc
and
repz
bound
mov
fmulp
insb
cmp
cmpsl
scas
out
sbb
adc
xchg
pop
sbb
dec
arpl
enter
inc
xchg
or
mov
repnz
mov
pop
xor
sub
std
and
int3
xchg
mov
jno
mov
xchg
sub
lock
jp
pop
mov
pop
sbb
roll
adc
enter
push
inc
scas
and
mov
popf
adc
sbb
cmp
lods
sti
jbe
incl
lds
mov
scas
imul
lods
fs
pop
push
sub
decl
sub
aad
adc
xchg
inc
lock
cld
xor
sti
sahf
cmp
shll
sbb
jl
fwait
adc
mov
jg
xor
and
call
or
dec
add
insb
rcrl
call
sub
adc
mov
mov
pop
stc
cmpsb
inc
loope
mov
pop
dec
test
dec
outsb
mov
jmp
jae
sbb
in
push
mov
les
rclb
dec
movb
cmpsb
jle
fistps
xchg
arpl
call
lea
mov
out
or
clc
adc
fidivl
stc
pmulhuw
dec
pop
fs
or
shl
jmp
inc
call
cmp
popa
mov
xchg
fs
lods
mov
xchg
std
and
int3
sbb
loop
bsf
sub
xor
push
int3
push
je
sub
cwtl
push
or
push
push
enter
jg
add
stc
dec
xor
lods
mov
push
xor
movsb
and
jmp
fstpt
and
xor
dec
xchg
cs
sbb
push
push
popa
jae
movsl
mov
rcl
push
stc
or
shrb
dec
test
shlb
push
aad
lds
movsl
jne
imul
jns
push
test
push
jl
push
mov
sbb
jno
dec
out
push
test
jg
inc
pop
insl
mov
inc
push
xchg
aas
mov
stc
lret
cltd
loop
in
jp
lret
push
cltd
mov
adc
int3
xchg
lds
push
in
loopne
loopne
xor
enter
and
jg
stos
nop
or
rorb
movsl
sub
sbb
popa
inc
int
xor
sub
mov
clc
cld
fnstenv
add
ret
in
out
add
addl
lock
ljmp
daa
lahf
pop
outsl
cmpsb
shlb
mov
pusha
ret
sbb
adc
in
xlat
or
paddb
imul
test
cmp
das
dec
push
xchg
fcoms
cmpsb
add
das
ds
icebp
xor
insb
dec
fisttpll
or
outsb
movsl
in
in
test
subb
and
jl
jne
data16
jmp
push
pop
lds
aaa
jp
xchg
mov
adc
insl
lods
lds
jbe
daa
inc
popf
icebp
jp
nop
in
push
and
or
jb
xchg
adc
mov
mov
inc
cmpsl
cmp
xchg
sahf
nop
push
xchg
testb
cltd
cmc
dec
icebp
sbb
xchg
jns
add
and
movsl
clc
std
stos
out
fwait
je
push
or
push
sahf
imul
pusha
ds
in
mov
pop
dec
adc
xor
aam
dec
stc
imul
movsb
imul
mov
pop
and
mov
jecxz
dec
insl
cli
xor
ja
gs
test
sub
adcl
add
dec
xchg
test
push
pop
imul
sbbb
cmp
cmp
les
popf
outsl
test
lahf
pop
add
mov
inc
mov
cmp
push
and
xchg
mov
dec
iret
movsl
or
testb
push
imul
pop
out
shr
fwait
add
sbb
sub
lahf
xchg
fnsave
push
mov
xchg
into
outsl
inc
add
xchg
jns
push
push
mov
insb
sbb
pop
movsb
xor
aam
mulb
sub
test
into
pop
mov
cltd
sub
subl
test
pop
xchg
mov
jecxz
inc
inc
jecxz
aad
inc
adcb
jnp
add
test
mov
push
mov
cmc
ss
mov
xor
mov
pop
jae
jno
int3
das
daa
xchg
mov
pushf
shlb
push
lret
xchg
mov
outsb
leave
mov
bnd
push
mov
bound
icebp
in
je
inc
pusha
pop
push
inc
out
pop
bound
jle
pop
jb
aad
push
xchg
xor
inc
enter
and
loop
mov
sahf
std
xchg
mov
mov
stos
add
lahf
lret
push
shll
outsb
sub
jg
arpl
fdivs
mov
lret
pop
es
pop
and
mov
aad
lock
mov
add
fstpt
mov
and
imulb
mov
cmp
shrb
stos
dec
adc
fildll
inc
jmp
cmp
add
xchg
dec
lods
cwtl
ret
mov
frstor
mov
or
fwait
cmpsl
ret
arpl
imul
lret
or
leave
repz
pop
mov
adc
mov
or
roll
xchg
push
dec
adcb
mov
out
imul
fcomp
sbb
inc
rdpmc
stc
orb
pop
data16
xchg
pop
cli
stos
xlat
icebp
fwait
sub
push
sbb
push
in
repnz
sbb
sub
push
aad
shlb
mov
pop
inc
sub
sbb
int3
test
push
icebp
gs
lea
ret
adc
jmp
lahf
inc
nop
fdivrl
and
je
loop
aam
jle
or
adc
inc
fwait
pop
sbb
addb
mov
jg
repnz
adc
js
inc
xchg
pop
dec
add
inc
jecxz
sahf
cli
psubw
insl
mov
xor
ror
call
pop
loopne
insl
adc
cld
std
push
repz
inc
dec
adc
es
pop
fcmovbe
jle
xlat
jb
mov
adc
xor
xlat
add
mov
pop
dec
jl
or
int3
cmp
cmp
push
xchg
jae
xor
cmp
jmp
mov
ret
jecxz
adc
adc
sub
mov
pop
dec
and
test
sub
fsubrs
jo
outsl
adc
jae
in
mov
leave
mov
mov
sub
dec
test
xor
in
jnp
inc
daa
fsubl
jg
add
lock
xchg
add
and
jno
movsb
xchg
cmpsl
movl
std
sub
pop
push
dec
or
fidivrl
push
jno
jo
repz
mov
mov
test
and
add
pop
sbb
mov
popf
pushf
jmp
ret
fcmovu
cmp
imul
push
stos
push
sub
adc
cltd
inc
test
cmp
dec
sbb
mov
and
jmp
aam
adc
adc
les
inc
repnz
mov
in
mov
cli
inc
mov
sbbb
xor
jmp
sub
je
cmp
je
push
jecxz
cmpsl
mov
xor
dec
scas
xor
test
xor
xor
std
adc
popf
shlb
push
lock
imul
test
sbb
je
ss
pusha
enter
imul
dec
sti
rclb
add
and
cmp
xchg
sbb
ret
movsl
adc
xchg
or
inc
lcall
xor
dec
fmull
sbb
cmp
ja
inc
jno
enter
scas
cmp
movsb
cltd
adc
mov
cli
pushf
cmp
adc
push
sahf
ret
leave
shll
pop
pop
push
je
scas
xchg
mov
mov
jns
jbe
add
int3
aaa
jle
dec
xchg
imul
mov
leave
sti
mov
or
sbb
mov
lret
pop
out
pushf
lret
mov
popf
rcrb
xlat
sub
cli
inc
fldl
sbb
xchg
sahf
std
bound
adc
cmpb
add
sti
icebp
stc
cmp
in
add
dec
pop
loop
jp
rcrl
push
fwait
pop
dec
dec
rorl
fs
loope
insb
jmp
xor
mov
push
push
push
add
repz
push
mov
jbe
jne
adc
scas
xorl
and
pop
push
lock
xchg
inc
std
and
test
ret
xchg
push
mov
cmpsb
out
xchg
loope
in
xrelease
push
or
insl
adc
dec
mov
push
cmp
aam
fidivl
outsb
in
outsb
cld
lods
xchg
push
ja
sahf
jle
push
xlat
adc
shl
sbb
sub
push
pop
stos
xor
adc
inc
fdivr
js
das
lock
cmp
sbb
movsb
out
test
mov
lods
int3
add
ret
int3
into
aam
cli
lahf
mov
jne
fdecstp
daa
jle
inc
adc
mov
ja,pt
fstpt
gs
inc
nop
dec
push
test
cmpsl
neg
mov
mov
add
lret
or
fwait
add
rcll
jp
pop
fimuls
aam
aad
adc
cmc
aam
pop
shr
and
xorb
shlb
stos
push
rol
pop
pusha
sub
rcrb
popl
stos
hlt
out
sub
inc
rorl
push
into
prefetch
pop
fists
sbbl
std
pop
mov
pushf
xchg
or
je
sbb
pop
push
movsl
dec
mov
xor
sahf
dec
adc
jp
pop
xlat
addr16
loop
out
fcoml
pop
sti
xor
adc
and
jno
in
test
xor
cmc
stc
mov
movsl
popa
leave
imul
mov
test
mov
iret
mov
adc
clc
fnstcw
and
mov
push
lds
push
add
mov
out
cmp
cmc
sti
int3
mov
outsl
in
jno
repnz
out
testl
les
mov
fidivl
int
addb
fs
mov
pop
cmpsl
jae
mov
aas
pop
push
mov
pop
lods
shll
ret
out
dec
pop
xchg
bswap
push
mov
jns
lock
xchg
mov
scas
or
sbb
das
fistps
or
fidivrl
pop
jge
cmpsl
scas
ljmp
inc
jp
sbb
sub
xchg
cmpsb
rcrl
mov
ret
out
dec
add
lcall
cmp
push
movsb
cli
cmp
ds
shrb
xchg
sbb
mov
jmp
jbe,pn
add
out
clc
jmp
fdivs
push
mov
cmpsl
jo
jl
popf
in
fsubl
cmpb
sub
test
xor
aad
cmp
cmp
inc
xor
mov
fwait
sbb
push
lods
or
sarb
fnsave
and
mov
xor
cmp
sbb
sbb
repnz
outsl
lods
outsl
popa
pop
adc
mov
scas
divl
mov
pop
in
jne
dec
sahf
addr16
jl
stos
fisttps
lock
xchg
pop
imul
fwait
adc
rcrl
clc
cs
adc
mov
mov
or
mov
mov
subb
lcall
xchg
and
fbld
pop
lret
jg
cmp
sub
xchg
pop
or
outsl
push
xchg
jle
xchg
dec
sub
loopne
lock
ret
pushl
mov
cmpb
clc
nop
dec
icebp
jp
push
mov
test
rcrl
shl
and
mov
jo
lret
adc
adc
ss
repnz
aaa
inc
clc
jl
out
cmc
addb
push
pop
fsubrs
orb
lahf
dec
stos
ja
fs
nop
std
dec
popf
inc
into
mov
fimuls
movsl
out
icebp
push
in
ret
mov
push
mov
sbb
rorb
sub
ja
dec
add
fbld
lods
cmp
mov
imul
fs
addr16
je
fstps
pop
cwtl
je
adc
dec
movsb
in
mov
fsubrl
mov
pop
mov
cmp
cwtl
mov
aaa
adcb
cmpsl
jns
and
clc
sti
adc
xor
xchg
out
pushf
pop
popf
cmp
es
lret
mov
popf
bnd
pop
stos
cmc
shrb
push
jmp
ficoms
mov
pop
push
rcrb
xlat
xchg
icebp
jmp
xor
and
into
scas
pop
stos
and
loope
xchg
out
adc
sub
and
jmp
cld
push
pop
cli
lret
add
repnz
sbb
xor
mov
mov
orl
and
rcl
aaa
or
std
jg
dec
jle
xlat
push
jae
sub
sti
fiadds
cmpsb
fldcw
jle
inc
xchg
ds
jmp
nop
test
mov
aaa
shl
and
pcmpgtd
xchg
mov
pushaw
mov
adc
neg
mov
pop
imul
or
cmpsb
pop
fs
mov
pop
and
negl
inc
push
and
outsl
mov
cmp
aad
dec
test
sub
cld
daa
es
mov
cltd
xorl
xlat
jmp
jo
cli
jb
sbb
imul
rorb
sub
xchg
and
jg
sbb
insl
in
inc
std
jo
adcl
scas
shl
int
pop
cmp
cmp
adc
cmp
daa
lods
mov
mov
sti
adc
adc
pop
mov
mov
sbb
adc
push
pushf
inc
mov
std
call
outsl
pushf
fcomps
fcompl
or
hlt
adc
ja
rol
and
cmpsl
pop
pushf
xorb
or
pop
imul
mov
jge
jmp
testl
lret
push
ja
lea
out
aad
icebp
xchg
mov
sbb
movsb
sbb
push
gs
imul
pop
arpl
jmp
lock
pop
xor
fdivr
pop
dec
mov
lret
in
je
xchg
mov
imul
scas
cmp
xchg
imul
jmp
imul
inc
dec
dec
jns
push
jmp
fwait
dec
push
jg
sahf
hlt
rorl
lahf
mov
mov
lahf
inc
in
jno
pop
jge
cmp
jmp
leave
push
int
mov
jb
imul
sub
das
jg
xchg
jae
cli
aaa
das
jb
shrb
mov
xchg
cld
dec
sti
xlat
xchg
or
pushf
cmpsl
sub
out
adc
fstl
xchg
int3
pop
xor
cs
mov
icebp
test
jnp
mov
je
sub
jns
in
insb
adc
sbb
popf
divl
dec
mov
inc
pushf
sbb
rorb
and
inc
sbb
ficoms
push
pusha
mov
out
aaa
stos
cmp
fwait
xchg
add
mov
mov
adc
add
xchg
pop
adc
ja
mov
mov
add
cwtl
dec
or
push
sti
aad
leave
jnp
sbb
pop
mov
cmp
sarl
scas
sbb
and
push
adc
and
sbb
lret
jecxz
add
pop
lret
jno
jle
push
fs
hlt
fldcw
add
out
jno
sahf
aad
out
jg
push
and
xor
or
loope
rolb
inc
aas
sub
cmp
aam
scas
jbe
outsb
or
cmp
add
xchg
in
dec
subb
pusha
test
jbe
lods
div
mov
sbb
out
in
imul
dec
or
out
mov
push
cmp
mov
cmp
int
loope
ret
in
mov
lods
add
mov
imul
mov
add
pop
imul
stc
pop
sahf
pop
cmpsl
in
call
sub
lods
testl
xor
das
xor
pop
cmp
add
aad
stos
add
cli
cltd
cmp
or
jg
xchg
pusha
push
dec
cmp
cmp
push
mov
cmpsl
arpl
inc
push
pop
movsl
push
cmp
in
aad
dec
iret
addr16
pop
pop
dec
fcompl
xor
xchg
imul
pop
inc
push
ret
ret
shrl
addr16
sahf
mov
push
mov
mov
mov
ljmp
xor
pop
mov
pop
adc
gs
cli
or
mov
push
into
and
gs
lret
loop
mov
cmp
movsl
jecxz
mov
addr16
pop
in
lahf
adc
mov
adc
jbe
inc
rolb
xor
push
add
and
xlat
add
mov
xlat
lret
or
xor
inc
push
add
jns
scas
insl
mov
jecxz
cltd
data16
pop
sub
loope
shlb
shlb
mov
test
mov
push
pop
cmp
jp
das
lods
fadds
ficoml
ficompl
subl
fdivrl
shrb
jmp
pushf
test
aaa
mov
push
mulb
out
xor
pop
repnz
cwtl
add
lret
fwait
adc
jne
stc
jp
xchg
xchg
test
pop
cld
out
adc
cli
sbb
mov
xchg
repnz
sbb
jnp
cmp
sbb
xor
jo
hlt
daa
lcall
loope
mov
sbb
push
cmp
andl
divl
shll
cmp
mov
jbe
mov
mov
ror
or
fdivl
adc
xor
ret
test
decl
subb
sbbl
or
mov
sub
or
add
rorl
adc
sub
cmp
dec
outsb
pop
push
mov
jo
adc
pop
pop
mov
adc
fiaddl
sti
sub
dec
adc
inc
clc
ja
rolb
lods
cs
imul
in
add
sub
cmp
insb
inc
sub
dec
imul
aas
lea
pop
loopne
mov
adc
daa
jp
xchg
mov
or
pop
cmpsl
in
cmp
call
sub
aaa
lods
dec
cmc
pop
pop
adc
mov
xlat
incb
xchg
aam
jne
lahf
xchg
ffreep
adc
lret
sbb
icebp
ds
pushl
mov
mov
inc
jecxz
mov
imul
aam
push
mov
mov
xchg
xchg
int3
out
fiadds
or
adc
mov
lret
leave
add
xor
or
out
push
int
jle
jp
gs
add
cmpsb
fistps
test
loopne
mov
shlb
and
fstps
xor
sbbl
or
sbb
jg
adc
mov
adcb
jne
mov
cmp
orb
flds
mov
lret
pop
cmpsb
pusha
or
loopne
sbb
ss
jmp
leave
loopne
rcll
outsl
and
xor
sub
mov
test
fsubrs
jo
in
lret
sahf
stos
sbb
aad
popf
dec
cmpl
pop
push
leave
ja
cli
ret
cmp
divl
push
ja
into
sub
in
ret
aaa
notl
pop
gs
orl
adc
xchg
test
movsl
jecxz
jmp
push
rcll
mov
add
pand
dec
mov
shrb
nop
xchg
adc
mov
sahf
cmp
push
sub
add
fsubp
shrl
test
pushf
or
cmc
mov
jge
int
mov
cltd
jnp
je
call
rcrb
cmp
adcb
xchg
push
pushf
xorl
push
xchg
bound
pop
lea
pop
cmc
add
push
jae
negb
rorl
jg
lods
push
int3
jnp
pop
iret
hlt
cmp
xor
lea
pop
mov
sarw
pop
xchg
insl
daa
or
repz
out
sbb
mov
inc
xchg
inc
std
das
xor
xor
xor
data16
mov
lods
and
xor
or
lret
popf
cli
mov
cwtl
dec
adc
pop
les
mov
sbb
and
adcb
jne
jns
add
rcl
xor
pop
in
pop
cld
inc
and
arpl
mov
addr16
ss
sub
inc
mov
ficoml
mov
mov
insl
push
pop
mov
or
mov
cmp
adc
icebp
xor
mov
out
jnp
mov
mov
bnd
mov
clc
push
add
mov
adc
inc
push
ficoml
icebp
movsl
adc
xor
jo
leave
lcall
cmc
fidivs
loop
lds
das
and
aaa
adc
rolb
lods
inc
inc
jbe
lods
shll
das
xor
popf
hlt
push
mov
es
xchg
stos
andb
shrl
out
sbb
mov
movsb
test
cwtl
push
sti
inc
aam
inc
fdivl
xlat
push
in
jae
xchg
scas
frstor
cld
jb
mov
or
sub
mov
aad
sarb
push
pop
push
ror
mov
fdivl
push
mov
into
dec
leave
sqrtps
push
sub
js
sub
pop
push
jbe
mov
sbb
jae
bound
push
or
adcb
xchg
loop
lods
scas
ss
aad
pushf
in
test
dec
aad
sub
lds
pop
xchg
lcall
mov
aam
or
sti
inc
jb
cmp
adc
pusha
or
daa
xor
out
jmp
dec
arpl
in
dec
adc
outsb
iret
mov
test
mov
inc
push
pusha
push
jp
lods
fwait
cmp
sti
mov
outsb
rorb
dec
sub
add
fimull
dec
inc
mov
or
pop
stc
gs
cmp
rorl
je
sbbw
lods
sub
xor
push
insb
adc
inc
pop
pop
lock
dec
dec
jbe
mov
mov
pop
inc
mov
fstps
cld
imul
sahf
or
lcall
cld
fcom
jae
cli
xor
sahf
inc
add
repnz
dec
adc
cmp
popf
gs
lods
movsb
push
jne
fs
lods
in
cmc
xor
subl
push
mov
repnz
aas
sbb
test
jmp
mov
scas
sbb
ds
pop
out
lds
je
nop
lods
mov
add
lods
int
ja
movsl
dec
adc
sbb
pop
jle
lock
pop
jmp
xor
xchg
mov
sbb
jne
jmp
or
mov
aas
sbb
xor
push
add
daa
ret
jno
mov
xchg
jecxz
xchg
ror
pusha
dec
fcomps
hlt
and
xchg
mov
add
jnp
mov
mov
pop
fucomi
decl
enter
aad
scas
imul
inc
movsb
loopne
mov
mov
call
jecxz
aad
and
bound
shlb
enter
dec
jae
jnp
movsb
addb
das
jle
jns
fwait
pop
repnz
les
push
jg
gs
or
mov
int3
sbb
cmc
cmp
mov
jge
push
test
xchg
pop
xorl
dec
sbb
sbbb
add
add
mov
pop
repnz
fstps
lds
push
sti
push
cmc
mov
sarl
cmpsl
and
mov
test
int
insl
mov
mov
adc
or
and
negl
scas
scas
inc
sbb
add
pop
mov
inc
mov
les
dec
xlat
cwtl
fcoms
jl
aas
notb
test
lea
rorb
imul
adc
mov
aad
sbb
jle
fwait
ds
dec
mov
jns
dec
dec
filds
leave
call
mov
jmp
fldcw
pop
dec
jbe
cld
sahf
push
cmp
ret
and
push
repnz
add
push
push
aam
daa
pop
hlt
sub
out
das
fmul
rorl
das
jge
pop
mov
xchg
mov
or
mov
mov
lods
jle
iret
das
shll
mov
rcrl
data16
add
mov
adc
icebp
test
inc
mov
out
push
fidivs
adc
in
aam
cwtl
mov
sub
mov
xor
sub
xchg
sub
jle
bound
xchg
xor
inc
je
sub
stos
and
mov
inc
cmpsb
sbb
push
aam
cmpsl
pop
rep
fdivrs
dec
push
and
mov
push
mov
mov
stos
nop
inc
test
es
scas
outsl
ret
sub
lret
stos
mov
mov
scas
ss
sub
sar
aad
lahf
aaa
into
ja
xchg
sbb
stos
stc
xor
mov
lods
lods
dec
jno
jl
xchg
icebp
ja
outsl
inc
lods
out
sbb
lret
iret
in
jmp
orb
sub
outsb
stos
loope
leave
or
dec
or
sbb
scas
add
push
ja
cmp
stc
dec
movsw
adc
mov
out
ljmp
inc
pushf
jnp
sbb
scas
mov
pop
outsb
lret
pop
mov
mov
int
mov
push
mov
andb
pop
mov
sub
js
mov
sbb
dec
mov
rolb
fimull
xchg
repz
fisttpll
push
adc
add
dec
and
leave
xor
mov
add
shrb
pushf
mov
cmp
inc
cmp
jle
cwtl
cltd
sbbb
imul
jmp
sbb
adcb
mov
imul
mov
imulb
in
into
mov
pushf
or
xor
jno
sti
add
out
fwait
mov
xchg
dec
outsb
test
test
or
aad
movsl
mull
je
or
orb
mov
addr16
test
mov
sti
test
push
lret
inc
sbb
sub
out
push
inc
std
inc
xchg
mov
mov
jo
dec
push
sub
xchg
push
cli
inc
popa
pop
or
hlt
jp
mov
and
pop
adc
xor
jg
xor
sbb
or
mov
jle
fcmovne
das
xchg
cmpsb
out
jle
or
mov
imul
jl
xchg
xor
bound
std
add
and
call
fcomps
and
push
pushf
ds
movsb
mov
mov
mov
sbb
insl
pop
aad
push
mov
inc
or
xchg
imul
inc
sub
pop
xchg
ljmp
jp
in
add
outsl
mov
lods
push
adc
and
fcoms
sbb
repnz
mov
cmovns
stc
mov
inc
inc
jae
lock
lods
cld
mov
ror
inc
pop
push
and
jmp
aas
aaa
mov
cld
fdivl
pushl
xlat
jp
pop
adc
ja
cli
fcmove
subps
ljmp
ret
push
mov
lods
dec
test
test
pusha
pop
sub
ret
pop
cmp
xchg
fisubrs
sub
movsb
stos
adc
movsl
or
fnstenv
mov
dec
out
add
ror
pop
jle
bound
mov
cs
aad
sbb
mov
dec
fxch
test
mov
cmp
push
shlb
or
push
insb
add
lock
xchg
cmp
adc
and
mov
push
adc
mov
jle
adc
sahf
xorl
add
mov
push
lcall
andb
fnstcw
cmp
mov
jnp
push
incl
mov
outsl
and
dec
movsb
inc
jecxz
sub
xor
sub
mov
sub
and
push
jmp
movsb
int
xchg
adc
fnstenv
std
xchg
mov
icebp
popa
cli
jns,pt
push
pop
and
outsl
add
sar
insb
sbb
mov
push
ds
and
imul
fistpl
mov
cmp
push
mov
mov
mov
cmpsb
popa
mov
sub
xchg
mov
popf
pop
lcall
test
mov
mov
mov
sbb
sub
outsb
fstps
dec
adc
daa
mov
inc
fimull
ss
insb
iret
ss
cmp
mov
mov
adc
push
ja
addb
jne
mov
cwtl
sub
jno
pminub
adc
xchg
sbb
mov
jno
cmp
in
lcall
cltd
fidivs
jecxz
dec
mov
outsb
sub
pop
cmp
in
inc
pop
dec
cld
out
mov
in
ret
das
mov
and
sbb
negb
and
sbb
mov
xchg
mov
addb
icebp
sub
inc
dec
icebp
outsb
xchg
mov
xchg
mov
push
fildll
jmp
daa
into
cs
and
sbb
jmp
incl
mov
xchg
push
aas
xchg
add
bound
addr16
out
ja
mov
aaa
shl
stos
jns
xchg
cmp
cltd
xor
sub
test
mov
or
push
lahf
jbe
push
mov
fmuls
jo
outsl
or
rcll
jle
sbb
fwait
pop
mulb
incb
test
lods
in
pop
push
or
pop
mov
cmp
fnstsw
mov
fwait
hlt
push
int
push
jno
cmc
xchg
std
pop
xor
imul
inc
popa
or
xchg
xor
test
addr16
sbb
std
push
cmpb
loop,pn
ret
stos
leave
and
push
pop
dec
adc
ds
adc
xchg
add
xchg
nop
das
xor
xor
repnz
sbb
jns
aaa
inc
pop
xchg
std
je
sarl
jbe
sbb
xchg
mov
mov
out
sbb
xor
and
cmp
movsl
mov
sahf
or
sahf
into
mov
push
dec
push
adc
jae
sub
inc
test
mov
movsl
mov
pop
bound
pop
ret
mov
sub
hlt
adcl
sub
and
push
fwait
mov
mov
adc
js
fisubs
cmp
sbb
mov
inc
jge
popa
adc
clc
fsubrl
cmpsl
pusha
orb
addr16
neg
movsb
xlat
sbb
inc
xchg
xchg
xchg
dec
fstpl
add
mov
rcll
adc
jns
and
in
les
arpl
mov
andl
cld
mov
je
shll
mov
mov
xchg
divb
dec
adc
arpl
push
cwtl
xor
ret
dec
lret
push
adc
cmc
mov
imul
sbb
jl
inc
cmp
cmpsb
mov
scas
mov
push
stos
test
in
pop
enter
stos
pop
and
xchg
daa
pushf
and
mov
stos
sub
call
arpl
movsl
cld
sub
scas
xchg
pushf
cmp
mov
push
std
xchg
xor
daa
pop
fwait
das
std
pushf
test
test
xchg
cmpsb
cmp
lahf
dec
adcl
call
adc
inc
ja
and
inc
push
adc
jo
mov
dec
pop
mov
scas
jb
jg
pop
mov
jnp
ljmp
cmpb
jge
and
xchg
fidivs
or
stos
push
sub
add
data16
fwait
mov
adc
loopne
rorb
ss
jno
and
lret
sub
sbb
fiadds
jb
aas
bound
ret
xor
testb
inc
sahf
mov
inc
mov
cli
insl
mov
shll
repnz
pop
repz
mov
xchg
stos
xorl
ljmp
dec
daa
icebp
adc
jo
jp
adc
test
scas
movsb
scas
les
incl
test
into
hlt
xchg
or
and
out
push
lahf
fdivrl
push
loopne
leave
sbb
ret
sbb
cltd
xchg
mov
int
cmp
push
xchg
cmp
mov
insb
incb
push
push
jae
rcl
cmp
and
push
jge
pop
mov
in
jb
sub
pop
cwtl
cltd
aaa
pop
mov
gs
push
cmp
cmp
fst
lret
cmp
jne
inc
loop
out
lret
lds
aad
and
test
test
xchg
sbb
fnstenv
or
pop
mov
stos
ffreep
cli
xchg
xor
jecxz
jl
repnz
sub
cmp
roll
jno
test
stc
negb
push
dec
and
movsl
mov
dec
and
mov
dec
lahf
jg
insb
fimull
adc
push
sbb
fldcw
jns
stc
fs
xchg
lret
mov
shl
sbb
dec
add
adc
js
dec
ds
bound
inc
imull
call
insb
jp
cmc
enter
fdivrs
test
in
inc
push
mov
xchg
xchg
test
cmp
and
gs
loop
test
sbb
enter
mov
cmc
scas
std
jno
out
into
push
popa
push
push
mov
repz
sub
and
jmp
sar
iret
lock
and
and
pop
jnp
add
rclb
sub
or
ficompl
bound
push
movsl
push
into
adc
mov
add
arpl
enter
xor
and
shrl
ret
iret
mov
sti
in
pop
xlat
xchg
aam
dec
sbb
hlt
push
les
cmp
stos
mov
mov
jecxz
decb
aas
jmp
test
mov
sbb
add
xor
cwtl
bound
test
das
orl
sub
test
and
dec
es
dec
out
jns
insl
xor
ds
xlat
filds
push
call
bound
stc
xor
ja
push
jo
push
pop
cwtl
enter
fsubrs
mov
pop
pop
test
fcomps
lea
leave
push
test
enter
dec
pop
repnz
loopne
jne
mov
mov
cmp
pop
or
cmp
jl
outsb
add
in
sub
leave
xchg
add
xlat
pop
mov
pop
gs
mov
mov
addb
rorb
inc
jmp
cwtl
xor
push
sbb
cmpsb
dec
lods
ret
mov
mov
movsb
and
imul
arpl
fcmovnbe
repnz
lahf
lods
dec
and
out
sahf
fs
xchg
mov
or
out
popa
outsl
xor
pop
adc
dec
mov
ljmp
lea
lock
lcall
jp
leave
jg
xchg
xor
lret
fcompl
jg
and
ss
fdivs
call
daa
add
push
cs
push
push
das
xchg
xchg
inc
cltd
mov
mov
xchg
icebp
pop
aad
fldt
jle
aaa
outsb
aad
mov
push
fildl
fwait
adc
xchg
pop
push
lcall
mov
std
mov
shl
rcrb
jo
loopne
cmp
jno
mov
pop
mov
mov
stc
bound
dec
xchg
mov
lock
mov
outsb
or
jmp
jg
loope
test
inc
out
mov
adc
out
jmp
pop
outsl
js
rclb
jno
push
dec
in
sbb
insb
loop
jmp
mov
sbb
inc
ja
mov
sahf
jg
divb
ss
les
data16
movsb
loope
sub
mov
mov
mov
nop
pushf
out
ret
neg
adc
lret
add
fnstenv
jle
fs
cmp
in
xchg
mov
sbb
dec
or
int3
mov
push
fucomp
es
inc
mov
lcall
and
jnp
or
xor
int
and
or
dec
push
xor
loop
and
cmc
fs
or
jo
daa
add
aaa
repnz
sahf
push
aas
mov
adc
es
xchg
ljmp
fwait
push
push
out
mov
xor
sbb
sbb
mov
jbe
jb
mov
push
popw
adc
movsb
leave
pop
loope
int
call
std
andl
ja
push
mov
push
in
sbb
push
imul
xchg
cwtl
rol
mov
fwait
adc
lret
push
test
inc
inc
sbb
push
jae
push
xchg
aas
pop
pushl
pop
adc
mov
jmp
cmpb
cwtl
clc
push
pop
sub
jno
adc
lret
sub
cmpsb
or
jns
sub
dec
mov
lahf
add
ljmp
mov
cmp
push
sti
movsb
jo
jmp
bound
dec
pop
mov
xchg
sub
aas
mov
icebp
sti
mov
aad
inc
js
out
mov
pop
push
incl
pop
sti
mov
cmpsb
dec
dec
cli
sbb
jae
cmpsb
cmp
roll
je
arpl
lcall
sar
or
scas
cld
fidivrl
push
inc
call
mov
lods
adc
mov
adc
aas
dec
xchg
movsb
test
popf
ror
arpl
in
out
pop
push
sub
shr
js
cmp
cmpsb
push
call
jecxz
add
sarb
dec
jg
enter
xchg
inc
jae
mov
jo
fsub
inc
arpl
aaa
jmp
adc
sbb
mov
jns
mov
adc
gs
rclb
int
sbb
insl
add
sub
sar
lock
hlt
mov
dec
xlat
rolb
push
insb
cld
ja
rcll
jmp
jge
dec
ds
push
in
sub
adc
leave
jns
mov
fdivs
test
ficoms
pop
leave
add
out
fwait
mov
jno
test
lcall
xor
lret
testb
push
pop
sbb
mov
mov
ret
pop
fcoml
cmp
jle
mov
aaa
cs
imul
xor
aad
idivl
pop
xor
lcall
fcomp
repnz
mov
add
dec
aam
daa
fwait
mov
dec
movsb
fistpl
jecxz
jg
aam
push
fcompl
lods
jbe
add
notb
movsb
hlt
mov
push
in
mov
fcoms
dec
add
mov
out
and
mov
subl
inc
cmp
xchg
add
ljmp
mov
fistl
leave
lahf
loope
sbbl
pop
hlt
mov
out
jl
inc
out
jecxz
outsb
inc
cmp
into
mov
pop
lahf
sahf
inc
in
lock
das
pop
jns
add
push
or
pop
adc
fsts
or
stos
shr
add
fimuls
xor
or
or
je
mov
mov
xlat
xor
cmp
fstpl
dec
cmpsb
std
adc
sbb
mov
popa
sahf
fildll
adcl
push
xor
jle
mov
sbb
inc
xchg
pop
push
cmp
inc
sbb
shll
testb
pop
dec
dec
mov
lods
jne
jl
testl
jno
mov
sub
cmp
shll
test
and
lea
test
mov
sbb
jno
adc
push
arpl
insl
sbb
sahf
cltd
imul
jl
jb
call
pop
repnz
jg
cmp
push
push
inc
jge
push
xor
inc
jnp
jae
mov
pop
aad
insl
test
pop
push
sahf
aaa
inc
sbb
addr16
ret
data16
mov
outsl
adc
lret
push
add
mov
les
fisttpll
sbb
sbb
jmp
decl
sbb
sti
dec
push
mov
xor
icebp
dec
or
or
pushf
jg
fdivr
inc
pusha
cmp
push
lret
stos
shll
dec
mov
dec
push
ret
push
mov
out
nop
mov
jecxz
loop
xchg
movsb
jns
jno
popf
add
mov
insl
xchg
sti
mov
push
jns
shlb
in
xchg
push
ljmp
outsb
add
sub
mov
aad
imul
fs
fcmovnu
roll
adc
rorb
daa
or
dec
hlt
outsb
add
lods
mov
scas
dec
loopne
or
cmpl
rorl
mov
or
ljmp
insl
imulb
rcrl
dec
test
cld
inc
pop
aaa
fwait
pushf
xchg
push
jmp
jo
inc
insl
xchg
add
and
stos
add
cmp
das
adc
push
xlat
add
and
lahf
gs
cmp
loopne
sub
dec
cmpb
leave
sti
pop
fiadds
push
mov
cli
push
jl
or
push
jp
cltd
inc
lahf
and
stos
sbbl
clc
jl
cmp
pop
mov
ss
cmpsb
xchg
repnz
insb
mov
enter
mov
in
mov
test
lret
dec
jae
jge
jg
clc
aad
popa
xchg
fsubrs
or
daa
mov
jne
mov
pop
xor
loopne
call
scas
fimuls
addr16
sbbb
pop
mov
sub
or
and
mov
pop
icebp
mov
cmp
mov
jnp
icebp
in
out
iret
cmp
lods
adc
cwtl
test
stos
out
dec
test
inc
push
jae
dec
icebp
lret
out
mov
movsb
inc
stos
add
jae
pop
fcoml
repz
dec
in
jo
fisttpll
pop
xchg
cmp
jne
xor
sub
sub
pop
aaa
push
cmp
pop
mov
jle
cli
mov
icebp
aad
push
add
jmp
push
icebp
jae
cmp
or
push
mov
and
leave
xor
jnp
mov
sti
sub
arpl
je
and
dec
rcrl
sub
imul
and
je
aaa
mov
xchg
xor
jmp
mov
in
es
xchg
and
pop
fs
outsl
js
sub
fists
in
test
mulb
imul
mov
cmp
scas
mov
dec
xlat
cmp
inc
lret
mov
jp
ret
loopne
popa
add
lods
lods
sub
sahf
ds
jae
imul
or
adc
fimuls
xor
cld
loope
cmpb
mov
inc
mov
pushf
insl
nop
cmp
push
imul
sbb
inc
stc
sbb
addr16
popf
inc
insb
xchg
push
mov
orb
mov
sbbb
loop
push
js
ja
pushf
lock
push
sub
out
xchg
in
out
aas
movsl
mov
push
popf
inc
and
outsb
gs
dec
pop
and
mov
push
loopne
xor
lock
aad
mov
and
lods
aam
jl
xchg
and
inc
inc
cmp
loop
decb
hlt
mov
inc
lcall
pop
jle
add
pop
lcall
jl
and
dec
dec
xor
add
gs
adc
sti
jne
sbb
les
mov
adc
adc
push
stos
or
or
je
cmp
cmp
cltd
jb
lods
call
xor
ret
adc
mov
jnp
mov
and
lahf
iret
aaa
pop
xor
dec
scas
jmp
sti
sahf
sub
aad
div
subb
cmpb
xor
in
dec
dec
mov
jle
pop
xchg
test
arpl
test
jbe
add
or
scas
fwait
push
pop
mov
bound
rolb
lea
sub
iret
jle
xchg
mov
or
xlat
pop
out
push
cmpsl
rcrl
mov
push
test
xchg
mov
mov
mov
dec
bnd
ljmp
out
andl
fs
mov
cs
adc
cmp
add
xchg
icebp
out
add
inc
and
leave
xlat
pop
sub
jmp
pop
inc
shr
cmpl
shrl
push
test
ss
aam
push
push
ja
dec
and
cmpsl
pop
and
pusha
cmp
dec
sbb
push
cmpsb
out
cli
jb
shr
sub
inc
mov
lret
jns
vmovq
jne
clts
adc
xchg
scas
pop
popf
in
inc
cmc
fucom
lods
lret
stos
clc
addl
loope
dec
xor
dec
mov
nop
jle
sbb
cmp
subb
dec
in
push
sti
mov
add
das
jo
stc
filds
pop
inc
mov
xor
test
jo
imul
mov
dec
jg
stos
das
sbb
pop
xor
lea
cli
push
aas
push
fdecstp
jb
aaa
arpl
adc
iret
sub
pop
mov
loopne
scas
stos
out
mov
sub
lret
jne
mov
push
cmp
xor
add
aam
push
push
adc
sbb
mov
add
andb
fs
push
lock
mov
inc
adc
test
enter
std
dec
sbb
ljmp
clc
and
repz
pop
and
popf
mov
out
cwtl
adc
xchg
mov
in
and
push
in
cmpsl
ffree
or
bound
fcmove
test
shrb
orb
stos
mov
dec
jp
lcall
or
ror
into
jns
dec
sbb
mov
cmc
negl
mov
insl
aam
bound
xchg
lahf
ja
mov
mov
cmp
push
mov
adc
cmp
movsl
jae
sbb
aas
xchg
pop
and
mov
and
ficomps
mov
pusha
push
xor
push
int3
dec
nop
pop
adc
pop
push
rep
mov
repz
pop
lret
push
mov
rclb
jg
fisttps
rclb
mov
or
xlat
mov
jo
cmp
pop
popl
xor
inc
cmp
clc
mov
xlat
ficoml
jb
test
loopne
mov
cmp
mov
loope
std
cmpsl
xor
cld
pop
xchg
sbb
iret
jb
lds
adc
add
int3
into
cmp
sbb
inc
sub
adc
and
stos
int
push
push
pop
push
loopne
sbb
aad
lods
test
xor
add
out
cltd
pop
clc
push
cmpsl
mov
jle,pt
jmp
jle
and
int3
jb
stos
popf
sbb
bnd
lds
or
dec
push
mov
pop
dec
dec
roll
cmpsl
aaa
jecxz
inc
pop
scas
xchg
aas
jmp
je
aaa
cmc
and
fcoml
out
imul
mov
and
loope
xchg
outsb
gs
mov
add
out
fstps
aaa
pushf
das
mov
lods
scas
sub
das
mov
push
inc
ss
sub
lods
hlt
mov
xorb
ja
lods
xor
lahf
andb
dec
pop
roll
pop
ret
xchg
pushl
outsb
cmp
xchg
push
mov
pusha
dec
pop
test
cmp
or
mov
jbe
pop
pop
sub
imul
in
rcrl
in
cmp
mov
or
jnp
xchg
cli
hlt
xchg
cmpsb
dec
movsb
sbb
fs
dec
push
push
cmp
dec
lods
lea
jbe
aas
dec
cs
stos
imul
and
roll
xchg
adc
ss
divl
aad
pop
cmp
icebp
cli
or
sbb
fcomip
mov
nop
adc
jnp
dec
pop
stc
mov
outsl
jle
bound
fs
in
repz
pop
inc
imul
loopne
adc
gs
aas
sahf
mov
sbbl
adc
jecxz
or
inc
push
lds
fcom
addb
daa
out
cmpsl
imul
push
insl
dec
cmc
cwtl
sahf
in
mov
mov
jecxz
push
fldcw
loop
xor
mov
das
jbe
pop
fdivrs
enter
xchg
add
inc
dec
cs
mov
add
arpl
loopne
das
cmp
cltd
sub
mov
adc
negb
pop
mov
in
enter
push
sbb
mov
mov
addr16
cwtl
fs
bound
ds
jne
add
lcall
ret
movsl
arpl
jecxz
sahf
in
clc
jl
iret
std
sbbb
push
cmpsl
or
xchg
xchg
adc
rorb
jno
adc
jb
fs
rorl
call
in
jp
ss
or
push
mov
outsb
stos
notb
mov
mov
orb
jbe
mov
outsl
dec
sbb
bound
inc
dec
inc
xchg
mov
mov
mov
imul
enter
cwtl
roll
je
and
mov
xchg
lods
push
dec
push
mov
sub
dec
ss
push
test
mov
enter
loope
sbb
lahf
std
clts
loop
pop
mov
stos
stos
ja
cltd
adc
adc
lods
sub
sbb
dec
cmc
and
push
int
lods
mov
pop
add
dec
or
jns
imul
ror
hlt
jne
add
or
sub
sbb
out
sbbb
adc
js
das
lret
mov
cwtl
add
adc
xor
mov
in
sub
fists
ret
lcall
arpl
loopne
movsb
pushf
mov
cmpsl
pop
or
aas
mov
test
adcl
jo
xchg
test
sbb
jnp
xchg
jb
mov
stc
add
movsl
rorl
shlb
scas
xlat
and
jge
lea
jecxz
int3
cmp
andb
lret
ret
bound
xchg
test
test
lcall
jae
adc
sbb
sar
inc
rolb
lods
dec
gs
and
out
xchg
adc
js
sbb
cmp
jmp
hlt
mov
int
filds
xor
inc
lahf
cwtl
call
cmp
ficoms
mov
leave
lret
rolb
test
inc
dec
out
cmpsl
jbe
shll
aaa
pop
cli
fwait
in
sub
imul
shll
jmp
or
xor
fs
jns
cwtl
xorl
outsb
push
push
sub
dec
xor
outsl
idiv
xchg
ds
inc
sbb
insb
test
cli
cmc
rep
fs
cmpsl
loopne
aas
mov
scas
dec
push
pusha
in
roll
int
fwait
es
fnstcw
data16
cmpsl
enter
lret
adc
and
lds
cmp
mov
push
jo
mov
pop
and
xchg
scas
ja
fildll
adc
icebp
push
or
jl
mov
movsb
xlat
enter
imul
mov
or
cmp
cmpsb
and
mov
imul
negl
cmp
jns
mov
cmp
and
inc
dec
lods
mov
outsb
fsubrl
in
test
lcall
jo
arpl
mov
out
inc
test
sahf
cmp
inc
idiv
xchg
loope
std
sub
cmp
mov
mov
inc
nop
lea
test
xor
outsl
mov
dec
xor
pushf
hlt
repz
arpl
or
inc
cmpsb
test
push
sub
or
popa
movsl
sbbb
jnp,pn
mov
mov
ret
out
cmp
loopne
cmp
mov
out
sub
js
in
divb
repz
loop
shl
js
mov
fs
mov
inc
pop
sbb
in
jecxz
jns
inc
pushf
adc
loop
push
push
mov
push
cld
out
cmp
xor
insl
xchg
insl
jp
rcr
add
xor
pop
and
lahf
es
mov
stos
mov
hlt
in
dec
ret
loopne
or
and
xor
sbb
movsb
dec
daa
pop
inc
int3
dec
into
stos
cwtl
pop
mov
mov
jl
leave
xchg
sub
jl
jmp
inc
mov
add
in
push
jb
cmpl
push
in
mov
cmp
dec
adc
pop
into
mov
pop
sbb
roll
mov
mov
xchg
xchg
outsb
imul
dec
in
imul
icebp
lea
lret
jg
mov
fwait
ds
movsl
jno
and
pop
jns
xchg
fwait
pop
sub
or
andb
mov
xchg
sbb
rorb
mov
lods
js
repz
mov
movsb
jp
stos
cwtl
pop
lods
and
cmpsb
mov
and
dec
fcomps
andb
je
scas
stos
jno
aas
inc
cld
fnstcw
xchg
and
mov
scas
mov
xor
mov
or
test
fcomp
inc
jne
mov
or
cmpsl
test
xor
add
pextrw
inc
andl
jo
popf
mov
sub
lock
cmp
mov
push
in
jno
stc
pop
pusha
xchg
adc
pop
pusha
jle
pop
aad
fsubrs
enter
mov
mov
out
xlat
es
mov
hlt
cli
fidivrl
in
jmp
scas
push
xchg
stc
xchg
repz
addr16
enter
sbb
jno
sbb
popf
insl
jecxz
push
adc
call
incl
in
mov
pop
jecxz
popl
test
pop
pop
cwtl
cmp
repz
sub
sbb
sub
out
leave
sbb
loopne
cltd
sti
mov
jle
mov
dec
idivl
sbb
sbb
rolb
es
dec
push
jp
xor
xchg
into
and
std
aam
adcb
jae
push
ja
pop
scas
mov
sbb
movsl
jp
cmp
mov
mov
sbb
xor
ret
fisttps
mov
sbb
push
shlb
pop
cmp
or
insl
aam
mov
pushf
sbbb
jbe
sbb
inc
scas
data16
subb
es
ljmp
or
mov
test
adc
add
fs
pop
pop
or
push
add
rorl
sti
les
sub
sub
test
pop
xchg
adc
punpckhbw
push
test
pop
push
repnz
sbb
ret
jns
lcall
test
fstps
js
iret
sti
je
cmpsl
std
jno
jle
and
jnp
or
mov
push
lahf
pop
jbe
lret
pusha
jb
out
adc
or
insl
sbb
xchg
mov
pop
add
ljmp
cmp
lret
scas
or
ljmp
sub
das
jmp
leave
into
push
inc
dec
xlat
cmp
pusha
dec
dec
mov
or
insl
icebp
pop
test
jne
icebp
scas
add
xchg
mov
cmc
lods
cltd
mov
add
cli
fs
sub
sub
add
aam
out
push
mov
push
mov
pop
out
fwait
fwait
je
sbb
clc
ret
nop
unpckhps
mov
hlt
mov
cmp
xchg
repz
cmc
or
je
xor
loop
std
and
fists
call
mov
mov
jo
xchg
push
and
jl
loopne
into
cmp
xchg
push
mov
mov
xor
scas
hlt
lea
shrl
sub
bnd
sub
shr
ret
push
or
rorb
push
in
sub
jne
lret
lret
aas
in
rclb
inc
push
mov
fiaddl
cmp
cvttps2pi
cld
mov
lock
mov
and
or
addl
pop
dec
sub
stc
xchg
filds
inc
repz
hlt
loopne
fldenv
int
cmp
lret
mov
fsubs
imul
call
mov
push
in
shl
sbb
xchg
cmp
insb
add
dec
mov
ja
fnstsw
mov
stc
mov
sub
xor
into
das
mull
inc
inc
clc
mov
xchg
jmp
inc
js
loop
lods
cmp
cmpsb
jb
into
lea
std
scas
inc
jns
addl
dec
adc
add
xor
lea
fwait
lret
popa
mov
aam
adc
stc
jp
mov
outsb
shll
nop
cmp
xchg
xchg
jb
jno
mov
xor
sbb
sub
sahf
outsb
mov
sbb
and
sub
or
mov
mov
aad
rclb
out
push
mov
jno
or
fnsave
mov
outsl
pop
lods
lods
mov
mov
xlat
nop
jnp
or
sbb
insb
ret
fnsave
cmp
mov
imulb
pop
pop
call
jb
mov
jmp
sbb
mov
addb
jbe
into
in
pusha
xor
stos
mov
imul
iret
pop
fnstenv
jbe
or
lock
outsl
jne
jmp
jmp
push
insl
xchg
sbb
dec
jo
and
ret
mov
push
push
push
jne
jg
out
and
ljmp
cmc
xchg
or
push
push
mov
inc
fdivr
lods
cmp
insl
mov
out
sub
xchg
pop
leave
push
xchg
jbe
clc
ja
aaa
cmpsb
dec
in
leave
sbb
cmp
test
ret
cmp
lcall
dec
push
sahf
and
pop
jle
fnsetpm(287
leave
enter
in
imul
sbb
pop
lcall
out
inc
sbb
mov
sub
pop
mov
dec
int
push
add
cli
xchg
mov
stos
or
jle
pusha
mov
lret
jg
jl
jl
shlb
mov
aam
daa
inc
jecxz
jge
pop
pop
push
ficomps
addl
and
pop
in
or
dec
mulb
mov
pop
aam
lods
fcmovu
clc
or
in
fcompl
sbb
jg
mov
pusha
mov
shll
mov
clc
lcall
adc
pop
dec
mov
push
add
mov
dec
and
mov
add
jne
pop
stos
cltd
inc
adc
cltd
dec
cmp
dec
stc
sbb
cmc
cmpsl
loop
insl
mov
jge
loop
jg
dec
pop
jae
add
test
icebp
shl
mov
mov
or
mul
sbb
mov
in
aaa
dec
aam
mov
imul
or
movsl
xor
outsl
add
repz
sub
push
repz
popf
sub
xchg
je
stc
mov
jmp
xor
jl
push
sub
jmp
inc
pop
fsubrl
int3
cmpb
rcrl
mov
inc
int3
or
test
movsb
subl
mov
outsb
stos
stc
or
cli
gs
ds
stc
rcr
mov
pop
mov
and
insl
push
mov
mov
faddp
je
add
xchg
stc
add
ret
mov
dec
daa
mov
mov
movsl
push
negl
cwtl
hlt
loopne
xor
je
inc
inc
or
inc
fcoml
xchg
dec
mov
xor
cltd
mov
jge
repz
gs
sbbb
xchg
mov
inc
xchg
and
in
je
push
cmc
dec
outsb
adc
loope
aaa
shll
cli
or
and
pop
inc
jo
jge
mov
cmc
add
or
jle
push
mov
mov
add
mov
add
jae
das
out
push
jp
dec
outsb
bound
js
and
xchg
or
sbb
adc
jmp
imul
lods
std
clc
in
imul
ret
mov
mov
push
ficoml
add
cwtl
adc
andb
ret
test
mov
cltd
insl
sarb
fnsave
sarb
cmpl
je
xor
cmp
cmpsl
sub
cmp
stos
enter
ja
inc
add
ret
push
pop
jne
popa
loop
call
int
cmc
mov
push
add
or
xchg
push
dec
or
pop
movsl
adc
inc
es
and
cmp
nop
shl
and
mov
sarl
jp
inc
xchg
and
sahf
aas
xchg
mov
ffree
mov
jmp
mov
in
imul
inc
das
leave
rorb
adc
mov
icebp
push
nop
and
adc
mov
dec
mov
pop
mov
das
sub
xchg
pop
fucomip
pop
adcl
jg
jb
mov
pop
lods
ds
jnp
mov
sti
push
stos
in
test
stos
test
cld
xor
out
lahf
cs
dec
add
ret
push
insl
push
int3
mov
sbb
sub
cmp
stos
or
out
or
mov
int3
lahf
jl
pusha
jmp
push
sub
mov
ljmp
push
std
mov
mov
stos
mov
js
iret
test
cmpb
movsb
mov
inc
in
mov
inc
xchg
adc
inc
mov
repnz
inc
clc
and
mov
pop
ja
out
jnp
cmp
shlb
lods
cld
cltd
sarb
xchg
orb
push
pusha
jle
ds
adc
divb
loopne
orb
xchg
sbb
jl
push
stos
fcomps
inc
jb
xor
add
loop
mov
pop
mov
in
mov
insl
sub
jnp
jmp
lret
xchg
jns
iret
mov
push
ret
arpl
loop
sbb
out
push
cmp
push
in
imul
in
cmp
rclb
lock
leave
pop
into
xchg
mov
push
dec
call
add
adcb
jne
mov
addr16
sbb
in
enter
pop
insl
out
es
iret
pop
fidivrl
lahf
push
adc
xchg
cmp
jo
into
pop
xchg
bound
jmp
sbb
cwtl
mov
push
push
stos
dec
test
xchg
dec
push
adc
notb
xchg
push
je
jae
cli
add
test
push
xlat
xchg
mov
test
xor
in
mov
pop
xchg
mov
xor
test
gs
ficoml
mov
mov
pop
dec
sub
xchg
in
das
sbb
mov
jl
aas
out
add
mov
rorb
repz
xor
repz
nop
inc
mov
ss
pusha
adc
xor
fbld
add
cmp
sub
dec
xor
xchg
cs
leave
fidivrs
cltd
std
push
cltd
pop
jle
fistl
into
mov
lock
loopne
mov
xor
inc
lods
push
fcompl
iret
add
gs
call
pop
daa
lret
ja
add
pop
rcrb
mov
jmp
lock
cmp
inc
adc
adc
and
stos
sbb
sbb
pop
push
aam
outsl
scas
mov
cs
imull
divb
mov
std
adc
or
out
push
repz
pop
adc
sahf
mov
fs
mov
jae
shl
sahf
icebp
scas
repz
adc
pop
sbb
stos
test
adc
fidivs
ljmp
cli
into
push
add
aas
js
adc
pop
pop
ss
push
dec
in
inc
jns
test
fistpll
push
add
xchg
xor
in
xor
lods
xorb
cld
int3
pop
ret
in
fs
test
jno
or
jecxz
sbb
or
mov
icebp
imul
mov
movl
stos
insb
fdivrl
imulb
inc
inc
jmp
sub
sbb
leave
lret
xchg
sub
jbe
in
mov
aam
stos
orb
lret
faddl
and
pop
repnz
xchg
mov
or
add
add
repz
aas
fstp
xchg
add
mov
inc
or
or
xor
out
hlt
sub
dec
jl
lods
test
inc
jle
out
mov
inc
cltd
pop
aas
adc
xor
pop
or
jo
push
jmp
mull
pop
mov
lret
or
ret
pop
in
mov
insl
call
push
jb,pn
jmp
jo
mov
icebp
inc
lock
hlt
lds
enter
mov
jge
sbb
cs
aas
subb
push
in
lds
je
shl
cmp
inc
out
idiv
push
repz
lea
push
jge
mov
xchg
insl
jns
iret
repz
mov
sar
dec
orb
jbe
movsl
mov
test
testl
add
xor
push
mov
ret
dec
inc
push
loop
aas
or
popf
clc
mov
pop
push
or
dec
sbb
mov
fdivrp
sub
sbb
cmp
adc
and
addr16
or
call
es
ljmp
sub
and
mov
stc
jne
ds
and
das
and
push
dec
je
lret
mov
or
push
pop
dec
adc
xchg
std
inc
pusha
negl
cmp
fsubrl
mov
stos
rep
imul
sub
ret
mov
ror
frstor
lret
rcr
outsl
in
jnp
fs
push
movsb
mov
testl
lret
and
outsl
push
ja,pn
test
mov
dec
cmp
push
mov
addr16
movsb
sbb
jo
xchg
jnp
cld
xor
mov
pop
cmc
jg
fcmovnu
aas
mov
cwtl
inc
adc
mov
mov
test
add
and
jbe
mov
fadd
or
jge
enter
ljmp
les
jmp
pushf
lcall
ds
and
and
imul
loop
inc
cwtl
mov
push
gs
xlat
stc
push
clc
rcll
or
inc
sub
pop
sbb
jns
adc
push
pop
cwtl
xor
aad
roll
lcall
push
rclb
xchg
or
jb
rorb
stc
out
popa
lea
cli
loopne
int
pop
sbb
push
xchg
xchg
lcall
jecxz
lcall
xchg
pushf
or
sbb
outsl
jl
das
and
movsl
mov
nop
sub
push
pop
insb
mov
mov
and
movsb
pop
add
out
jmp
xchg
lcall
adc
out
loop
in
movsl
push
xchg
pop
addb
in
jp
aaa
testb
aam
insl
cltd
pop
xchg
movsb
sub
enter
sti
in
jne
jo
inc
scas
lahf
push
mov
mov
aam
fisubs
les
sti
mov
cmp
sbb
add
cmpsb
cmc
xchg
andl
pop
dec
xlat
and
fstpl
sbb
aam
iret
fnstenv
mov
in
frndint
mov
and
mov
je
shl
inc
insl
mov
cld
out
fsubrs
mov
fcomi
imul
pop
add
les
scas
lret
add
out
push
adc
mov
cmp
mov
jl
mov
jbe
dec
add
std
nop
into
loop
outsl
mov
ror
sub
mov
push
mov
movsb
lret
mov
fdivl
cmc
fwait
dec
fcmovbe
cmpsb
push
and
into
pop
in
lahf
shll
xorl
fisubl
push
rcrb
inc
je
popa
push
sbb
leave
sbb
dec
idivl
mov
scas
or
mov
mov
sbb
aaa
mov
dec
stc
mov
outsb
daa
inc
repnz
scas
cli
jp
imulb
or
inc
sbb
pop
add
cmp
add
or
mov
mov
lock
add
jbe
stc
scas
mov
inc
inc
xabort
les
scas
mov
jbe
xchg
movsb
addl
dec
jle
icebp
push
push
setns
inc
leave
dec
jae
mov
cmpsb
popf
push
repz
pop
test
inc
lahf
sbb
fisubs
scas
pop
or
ret
ret
xchg
decl
sbbl
jno
mov
adc
add
jae
mov
loop
add
inc
out
lret
and
lahf
shl
lea
repnz
sahf
cmpsb
daa
or
adc
scas
add
adc
loope
sbb
mov
rcrb
andb
insb
jmp
cltd
jmp
sub
xchg
dec
loopne
ss
pop
sbb
xor
mov
sbb
rcll
mov
jle
xchg
lret
fbld
mov
and
jnp
rcrb
cmp
sahf
fstl
xchg
xchg
adc
pop
xchg
push
mov
std
cmpsl
call
lods
dec
jns
mov
xor
cmp
adc
jmp
push
lret
dec
notb
dec
outsb
lcall
xor
or
cmp
notl
fistpll
sub
imulb
inc
and
dec
or
roll
sbb
push
icebp
adc
adc
adc
inc
add
sub
mov
xchg
push
dec
aaa
dec
xchg
cltd
xor
xchg
negb
mul
add
inc
adc
push
arpl
xchg
inc
js
lahf
mov
imul
cs
popa
cli
dec
sahf
test
sbb
ljmp
rcll
daa
fisttpll
fldcw
mov
xchg
cs
popa
jb
lods
push
insl
jp
push
outsl
daa
insb
sub
push
cmp
sbb
cmp
es
pop
xchg
dec
aam
mov
mov
sub
rorb
xchg
push
cwtl
mov
fnsave
dec
cs
call
scas
loope
cmp
mov
fcmove
clc
add
ljmp
dec
fidivs
outsl
jb
inc
aas
scas
inc
jle
and
aad
in
xor
mov
mov
or
lret
mov
popa
or
pop
movsl
das
jl
pop
or
call
cmc
iret
add
subl
repz
xchg
je
mov
push
adc
cmpsb
xorb
adc
leave
xchg
pop
xchg
lea
outsl
repz
cwtl
loop
dec
cmc
cli
test
aas
pop
cmc
push
cmp
sbbl
inc
enter
push
mov
sbbl
dec
pop
mov
adc
xchg
mov
loopne
arpl
dec
jno
mov
jl
xchg
dec
pop
push
mov
daa
data16
pop
or
and
jnp
jb
std
and
pop
int3
les
outsb
cli
mov
repz
and
sbb
ret
push
nop
jae
push
mov
ljmp
inc
enter
lcall
mov
jb
pop
jnp
mov
push
in
aam
lahf
push
inc
lods
lods
outsb
test
mov
imul
sbb
movsl
sub
dec
cmp
inc
out
iret
jnp
xor
loope
fsub
mov
mov
int
jg
cmpsl
adc
mov
push
int3
sbb
out
mov
mov
add
pop
xchg
mov
out
push
stos
mov
cmpsb
out
les
mov
sub
je
xchg
mov
sub
out
and
ficompl
cmp
xor
push
pop
jo
mov
xchg
lods
hlt
aad
jae
mov
imul
imul
scas
or
into
and
add
jae
lods
xchg
add
mov
cli
scas
xor
repnz
int3
inc
cmp
add
jmp
mov
mov
mov
sub
je
jmp
push
ret
sbb
and
rclb
cmpb
cmpsl
call
sbb
pop
std
scas
icebp
inc
cmpsl
or
shlb
xor
push
fstp
xor
shlb
outsb
xchg
data16
and
sahf
push
push
and
dec
adcb
repz
dec
sbbl
pop
xor
js
or
mov
pop
mov
data16
das
mov
xchg
aas
in
outsb
jmp
jmp
inc
add
ret
sbb
push
repnz
mov
js
cwtl
inc
aaa
fldenv
mov
hlt
pop
in
mov
lret
dec
push
mov
mov
imul
lahf
mov
and
pop
shll
mov
mov
and
add
adcb
ds
push
test
mov
add
and
push
inc
mov
pop
pop
test
aas
lahf
xchg
sub
dec
dec
in
cmp
mov
test
movsb
push
int
and
inc
cmpsl
jae
adc
mov
dec
inc
loope
mov
pop
fs
push
mov
inc
int
push
xor
push
push
out
stos
sbb
pop
jl
fiadds
lahf
cmp
das
imulb
mov
and
mov
movsl
jg
inc
lds
iret
das
dec
fs
call
sahf
outsb
sbb
mov
inc
call
sbb
popf
pop
inc
stos
xchg
or
lock
dec
ljmp
xor
imull
or
push
xchg
cltd
mov
fcomps
pop
adcl
xchg
mov
mov
fisubrl
repnz
addb
ds
cmp
shll
inc
cmp
outsb
gs
loope
call
jmp
mov
lret
jp
mov
loope
add
pusha
ljmp
dec
dec
loop
les
ss
loop
and
xchg
mov
frstor
sub
mov
xchg
hlt
xchg
cmp
jbe
sub
add
push
popa
sub
addr16
xchg
lea
jmp
lods
vpsadbw
adc
fs
in
or
lahf
mov
pop
mov
aaa
or
cmp
shlb
shll
xor
inc
or
jge
in
or
mov
shlb
test
orb
repz
sub
sub
mov
mov
mov
sti
test
mov
mov
jnp
xlat
push
or
cs
cmp
xor
nop
push
or
mov
lea
clc
out
xchg
mov
sarl
jge
rcll
inc
fwait
into
fbld
push
dec
mov
sub
les
inc
push
jge
adc
mov
mov
imul
adc
clc
push
popa
mov
fs
sub
inc
xchg
out
icebp
negl
pop
cmpsb
repz
pop
mov
int3
pop
fxch
xchg
pop
mov
add
sbb
shrb
jo
dec
aad
lea
and
push
add
xor
hlt
cmp
decb
std
sbb
add
sahf
stos
outsl
fistpl
movsb
insl
dec
js
rcrb
popf
movl
push
or
icebp
push
ret
inc
push
pop
sub
inc
mov
push
cli
pop
lds
lcall
pop
loope
imul
mov
cmpl
repz
mov
mov
icebp
mov
lret
or
dec
jne
test
xchg
push
xor
inc
mov
js
clc
js
test
mov
mov
test
pop
clc
mov
xor
adc
mov
nop
push
cmp
dec
adc
dec
lcall
cmp
cmc
inc
loope
push
shll
cmp
insl
lods
push
xor
daa
icebp
and
sub
cltd
addl
cmp
jne
or
pop
jg
imul
push
fmulp
insl
arpl
lea
or
sbb
lcall
push
mov
pop
xchg
inc
cltd
jnp
idivl
hlt
pop
jg
sbb
repnz
gs
je
xor
xor
push
mov
xchg
sbb
pusha
xor
rol
imul
xchg
and
in
mov
leave
nop
dec
push
mov
and
xor
icebp
loop
insl
adc
popa
loop
jo
inc
packsswb
mov
or
fwait
sbbl
mov
andb
dec
int3
loope
ss
stc
xchg
aam
sbb
clc
xchg
xor
sub
inc
rcr
or
out
rclb
inc
xor
mov
js
shlb
cmc
lea
push
xchg
dec
cmp
rcrb
jne
mov
outsb
in
mov
cli
loope
rol
daa
ja
push
lods
push
std
ret
mov
imul
je
dec
push
sub
out
aaa
in
mov
xor
notl
push
mov
sahf
cltd
in
fistl
pusha
idiv
orps
sbb
mov
inc
sbb
sbb
pop
xorb
add
adc
enter
out
sub
je
sub
sahf
mov
fisttpl
push
int
xchg
outsl
idivb
clc
jge
sbb
mov
pop
in
scas
test
cwtl
jecxz
loop
adc
rorb
inc
fisttpll
mov
setge
lret
pushf
inc
inc
gs
in
test
imul
xchg
dec
add
cmpsl
mov
sbb
daa
xor
pusha
cltd
out
sti
mov
sub
or
shlb
fwait
jnp
loopne
cli
scas
mov
pop
add
shll
fmul
cmc
or
push
sbb
outsl
stos
pop
insl
xchg
adc
icebp
ret
mov
rcl
adc
aas
aad
es
sub
cmp
cld
jnp
lock
int3
sub
insb
insl
jae
lret
repnz
adc
xchg
pop
ja
loope
push
fiadds
stc
movsl
and
or
or
lret
push
push
cmp
icebp
stc
out
pop
bound
jl
jo
loopne
cmpsb
test
inc
push
jl
out
popa
rcrb
out
addr16
cld
stc
mov
out
mov
cmpsl
sub
add
arpl
dec
cltd
shlb
subb
xor
xchg
sub
fistps
inc
enter
fnstcw
push
insb
adc
hlt
fildl
in
movswl
mov
mov
ja
mov
stc
jle
or
mov
aad
sbb
lcall
pop
repnz
mov
mov
inc
jge
sbb
iret
inc
push
mov
stos
ret
mov
sbb
arpl
test
decl
adc
fwait
aaa
mov
and
sub
negl
dec
and
push
mov
jae
sub
cmp
dec
adc
lahf
inc
lahf
hlt
sub
xchg
xor
hlt
mov
inc
inc
or
testb
add
ljmp
sarl
inc
lret
sahf
push
lahf
out
dec
lret
mov
add
and
iret
in
loopne
add
or
mov
lahf
xor
subl
lcall
imul
dec
daa
jnp
pop
cmpsb
stc
popf
adc
and
insb
js
dec
cmc
clc
stos
jl
clc
jnp
jmp
jno
outsl
andl
mov
imul
leave
fimull
sbb
cwtl
and
mov
cmc
das
pushf
adc
adc
lahf
mov
push
cmp
and
add
cs
arpl
rcll
aas
cmp
sub
pop
xchg
es
push
loope
mov
test
sarl
hlt
in
mov
out
mov
push
lods
loope
add
cs
jns
inc
add
xor
lcall
and
jno
or
cwtl
imul
das
push
mov
iret
shrl
testb
in
ret
pop
jmp
dec
or
jnp
and
pop
jmp
pop
xchg
daa
jbe
cmp
shlb
hlt
add
shlb
mov
fisubl
fldt
add
fimuls
test
inc
jnp
inc
cmp
mov
jmp
inc
cmp
mov
icebp
jp
mov
xor
pop
lock
insl
adc
and
mov
push
sarl
movsl
pop
add
shrl
pop
push
cmp
in
pushf
repnz
js
adc
and
and
adc
lcall
iret
dec
sub
mov
jl
scas
into
or
btr
add
insl
mov
gs
add
jmp
ret
orb
addl
vmaskmovdqu
loope
movsb
loope
sub
pop
add
lret
test
je
xor
popl
lods
mov
cmp
mov
pop
jb
into
sbb
pop
sbb
scas
fisubrl
push
pop
and
rcll
mov
loopne
mov
lods
rol
inc
hlt
fincstp
jecxz
jb
add
inc
jnp
sahf
mov
push
out
add
adc
sub
in
mov
xor
inc
xchg
dec
js
sbb
dec
mov
lock
sti
leave
mov
push
inc
jbe
lahf
pop
imul
push
mov
aam
push
aas
jl
jnp
repz
outsb
sbb
aad
into
out
jmp
ljmp
sub
cmp
add
pop
sbb
cmp
jo
fisubrl
xchg
jne
cmp
imul
stc
inc
pop
dec
and
and
pusha
jbe
cmp
mov
add
inc
xor
addr16
mov
ret
mov
test
fildl
push
das
and
add
push
rcrb
cld
sarl
adc
xchg
mov
mov
int3
int3
lret
sbb
ret
xchg
sub
mov
out
aam
test
cmp
mov
mov
jae
and
outsl
hlt
push
pop
sub
hlt
scas
shll
xor
aad
inc
xchg
rcl
and
es
cmp
int
pop
sti
mov
cmpsb
data16
add
ficoml
ljmp
or
das
mov
je
stos
ret
add
imul
cmpsl
out
cli
pop
dec
add
jmp
in
mov
inc
movsl
mov
sbb
aad
inc
dec
mov
rsqrtps
adc
mov
stos
pop
scas
iret
pop
loopne
call
inc
jl
sbb
cmpsl
fsub
hlt
loopne
fisubrs
xor
inc
sbb
or
sbb
sahf
adc
cvtdq2ps
sub
push
je
push
in
and
add
jecxz
cmp
xchg
dec
incb
lret
shrl
fimull
int3
xchg
or
mov
hlt
pop
mov
pop
or
adc
mov
jb
mov
cltd
daa
mov
pop
int
fadd
imul
cmp
adc
and
pop
mov
scas
sbb
cli
mov
dec
mov
mov
cmp
test
cmpsb
mov
pop
pushf
je
mov
fs
push
mov
iret
jnp
add
cmp
jp
imul
add
fucomp
inc
add
andl
push
pop
cmp
jmp
or
add
pushf
xchg
sbb
jmp
push
sahf
mov
sbbl
jno
mov
cmc
or
jno
cmpsb
sbb
sbb
and
inc
pop
push
dec
clc
sti
lcall
cmp
mov
mov
into
mov
test
fistps
xor
aaa
cmpsl
pushf
lret
adc
mov
test
fiaddl
mov
stos
jno
mov
lods
jb
sub
int3
jne
loop
mov
aad
ror
adc
test
xchg
push
rorl
lock
outsb
push
call
shl
push
mov
repz
aas
negl
mov
sbb
adc
iret
lahf
call
mov
stos
loope
mov
out
mov
lods
clc
rcl
push
in
cmp
inc
and
lret
scas
inc
mov
ror
pop
cld
xchg
xchg
cmp
jle
shll
xchg
or
in
inc
add
push
mov
mov
cmp
push
in
data16
pop
xchg
push
mov
jnp
pop
shl
sub
mov
xchg
andl
jl
in
push
test
arpl
xchg
cmp
filds
int
je
cmp
and
mov
loop
mov
repz
decl
add
addr16
outsb
mov
or
cwtl
jno
cwtl
and
mov
ja
test
imul
dec
sahf
pop
cmp
inc
xchg
or
enter
insl
hlt
stos
xor
push
cltd
cmp
rolb
pop
sahf
inc
mov
jno
xor
sub
inc
mov
notl
xchg
leave
sub
std
dec
in
xchg
sbb
loopne
push
sub
lock
insb
mov
mov
inc
jae
lods
pop
stc
mov
xchg
test
cltd
sahf
cltd
int3
mov
mov
orb
or
sbb
fidivrs
xchg
sbb
mov
in
stc
mov
xorl
xlat
adc
testb
arpl
pop
dec
xor
xlat
inc
in
push
scas
mov
pop
outsb
sbb
jl
outsb
cmpsb
or
adc
xlat
jg
cmpl
into
mov
or
mov
bound
sar
test
pop
add
ror
imul
inc
add
adc
out
pop
jecxz
push
jmp
dec
pop
movsb
outsl
jo
out
and
addl
jle
push
push
enter
sub
outsl
add
ss
out
repnz
arpl
push
cmpsl
bndldx
mov
push
or
ret
in
cwtl
and
push
call
inc
xor
pop
rcll
or
inc
cli
and
mov
xchg
xchg
xchg
jmp
push
iret
out
pop
nop
xchg
dec
push
pop
jle
imul
push
ja
sbb
icebp
rcrl
cmpsl
jbe
lret
jge
in
mov
cs
cmp
outsb
inc
xlat
sti
fcmovnu
lock
inc
cmpsb
cs
popf
mov
pushf
and
pop
cli
cmpsb
ret
rorb
fstl
xor
adc
lcall
fwait
xchg
jnp
mov
repnz
loopne
cwtl
xchg
sub
mov
icebp
out
and
test
xor
dec
sub
xchg
xchg
insb
jle
clc
int
outsl
add
mov
sarl
mov
mov
pop
shll
ret
add
jmp
enter
pop
or
out
enter
sti
cli
enter
notb
shlb
fbstp
test
scas
sbb
js
sbb
or
outsl
std
in
xchg
test
push
bnd
aas
sbb
adc
mov
cmp
xchg
fiadds
and
lcall
dec
xchg
loope
or
dec
pop
aam
incb
mov
mov
out
mov
iret
pop
ret
pop
mov
mov
in
dec
sbb
clc
repnz
jo
xchg
or
mov
movsl
mov
inc
shrl
lcall
or
enter
clc
cltd
loopne
pop
jp
sbb
push
and
push
mov
cmp
xlat
mov
xchg
dec
addb
loopne
push
lret
lcall
ret
jne
jo
xchg
shll
rol
pop
test
mov
lea
mov
xchg
aad
mov
mov
push
add
cmp
sbb
js
push
xlat
out
mov
mov
xchg
pop
insb
insl
aam
sub
loopne
shrb
sbb
push
mov
gs
sub
sti
mov
int3
mov
xchg
push
fcompl
ror
into
je
jl,pt
es
push
inc
dec
imul
jmp
dec
push
or
enter
pop
inc
xor
nop
jecxz
sbb
fstps
and
cld
mov
cmp
mulb
mov
sbb
int
mov
jbe
push
imul
or
mov
push
sbb
int
cwtl
inc
push
das
fsubrl
push
aaa
mov
jg
dec
xor
int
adc
push
mov
rcl
shrl
je
loop
das
rcr
sbb
ret
inc
outsl
mov
lcall
aaa
enter
inc
or
stos
mov
mov
stos
xchg
push
inc
movsb
ret
andb
inc
popf
les
scas
or
adc
jecxz
jecxz
pop
xlat
test
ror
mov
es
pop
add
in
mov
ss
ret
lahf
mov
fcoml
rorl
movsl
lcall
loopne
pop
js
mov
sub
cli
xlat
popf
scas
push
inc
pop
lock
mov
mov
mov
rcl
mov
push
sarl
sub
cmp
roll
jo
cmc
and
mov
inc
fisubrs
sti
jns
arpl
ret
pop
je
std
pusha
inc
xor
into
js
jle
and
je
fiadds
repnz
mov
cmc
scas
push
xchg
sbb
mov
mov
pop
or
fldl
loope
mov
cld
xchg
push
in
mov
out
stos
sbb
mov
out
daa
inc
in
sbb
jle
sub
in
mov
mov
lahf
mov
daa
lea
sbb
aas
jle
sarb
aaa
push
push
stos
pop
cwtl
jno
add
in
movsb
das
push
push
dec
jl
or
out
pop
push
outsb
or
out
dec
subb
jae
outsb
mov
mov
ds
jmp
imul
add
sub
sub
cmp
cmp
sub
sbb
lock
mov
pop
rcll
xor
and
call
adc
push
cmp
xor
lcall
out
xchg
inc
jnp
push
jb
xchg
push
imul
popa
push
mov
imulb
pop
popa
hlt
jb
fs
xchg
pop
icebp
xorb
pop
push
aaa
sub
pop
out
shrl
jmp
mov
jle
std
mulb
outsb
mov
sbb
or
out
xchg
xorl
icebp
stos
imul
xor
movsl
xchg
lea
lods
adc
or
jno
mov
je
fmulp
xchg
cld
sub
movsb
and
cli
inc
insb
xor
fwait
call
mov
cltd
mov
ja
cwtl
jno
add
mov
adc
dec
push
lock
into
loop
fdivs
inc
and
mov
jae
fdivr
and
enter
stos
pop
movlhps
out
pop
fstpl
push
xchg
ret
xor
daa
adc
push
cmp
dec
lds
outsl
stos
xchg
dec
push
and
mull
lcall
push
out
or
mov
pop
fistps
in
xlat
fs
cmp
insl
mov
std
fidivrl
mov
lcall
insb
stos
jp
pop
arpl
sbb
js
in
sbb
cmp
or
sahf
adc
jle
adc
ljmp
xchg
icebp
xor
incb
es
ljmp
push
push
inc
xor
sbb
mov
addl
loop
xchg
dec
fadds
movsl
sbb
push
adc
cmp
andl
ljmp
sub
sbb
mov
and
clc
adc
mov
jnp
subb
sbb
movsl
int3
andb
pop
and
mov
push
scas
add
rcrl
lock
imul
mov
inc
movsb
aam
int3
mov
adc
movsb
icebp
stos
mov
clc
shrl
sbb
or
sub
inc
int
cmc
mov
push
inc
cltd
out
xchg
sti
dec
outsb
lods
dec
pushl
repz
add
lahf
out
pop
incl
or
sub
or
rolb
and
mov
mov
xchg
pop
add
push
mov
scas
aaa
pop
mov
loop
shr
adc
mov
fwait
sub
fistpll
out
sbbb
dec
clc
jb
es
cmp
nop
push
push
cmc
jle
cwtl
cmp
dec
xor
loop
into
sbb
xchg
movsb
pushf
mov
sbb
and
add
aad
popf
mov
or
jo
mov
sbb
fucom
test
in
repz
shlb
mov
aaa
adc
mov
adc
lea
dec
call
subl
negl
popa
mov
ljmp
pop
pop
in
std
stos
aas
mov
jge
rep
cltd
pop
jmp
sti
pop
call
inc
pop
mov
or
inc
mov
es
fwait
out
jmp
adcl
cmpsl
das
mov
iret
aas
xor
push
push
or
outsl
xchg
out
in
push
sbb
pusha
dec
in
add
and
add
sahf
xor
pop
lock
xor
dec
pop
out
lods
ss
push
test
mov
out
jb
jno,pn
lcall
dec
mov
popf
sub
daa
mov
or
dec
pop
inc
test
cmp
leave
into
xchg
xchg
mov
lds
xchg
ret
test
xchg
jecxz
insb
scas
mov
ret
fdivrl
shr
std
mov
lahf
out
mov
icebp
cwtl
scas
lahf
ja
or
lret
add
and
mov
and
mov
sbb
jno
xor
push
aam
scas
inc
sub
in
adc
dec
mov
cmp
sahf
enter
push
movsl
and
mov
in
les
ja
dec
cmp
iret
inc
or
pop
enter
fmull
pop
pop
mov
mov
fsubr
das
jns
and
mov
mov
fstpt
popf
push
outsb
orl
cmp
add
vpxord
fisttpll
jmp
and
cmp
mov
icebp
fwait
aas
or
fcmove
mov
jae
insl
pop
cmpsl
push
arpl
movsl
mov
fwait
mov
pop
sub
or
push
pop
lcall
add
icebp
daa
lods
jp
dec
mov
xor
daa
js
jns
push
adc
mov
adc
adc
mov
pushf
mov
daa
jnp
flds
addl
jle
mov
sbb
add
push
cmpsb
pop
mov
sahf
aad
cmp
lea
pop
cmp
sbb
sub
jb
les
cmp
xlat
gs
dec
cltd
std
xchg
xchg
pop
adc
sti
mov
hlt
cs
adc
jno
xor
jmp
psrlw
cli
jmp
jne
xchg
clc
hlt
and
loope
fwait
mov
xor
mov
pop
xor
or
gs
lahf
push
inc
xchg
into
inc
mov
lcall
fldt
mov
or
or
hlt
mov
dec
cld
das
or
mov
scas
leave
xorl
adc
or
movsl
test
lret
or
xor
mov
insl
jge
out
insb
mov
dec
ret
and
pop
pop
fisubrl
imul
ss
aam
mov
or
daa
inc
cmp
scas
insl
daa
addr16
jg
aaa
gs
adc
lods
jb
popf
add
jp
push
jne
je
fisttps
add
aas
push
or
push
mov
aam
jmp
inc
lcall
pop
shlb
xor
or
adc
cltd
mov
out
push
dec
adc
dec
xlat
jge
icebp
sub
inc
into
push
pop
ljmp
mov
mov
mov
das
in
dec
dec
shlb
inc
jb
int3
insl
popa
mov
xor
test
test
push
pop
cmp
and
mov
push
test
add
scas
dec
sub
xchg
insl
daa
ds
jnp
stos
scas
mov
divl
add
sub
inc
icebp
arpl
adc
bound
xchg
pop
lods
inc
mov
dec
and
push
cmpsb
imul
or
cmp
sbb
test
jbe
xchg
adc
mov
sub
lock
repnz
aas
add
sub
mov
shll
shlb
outsb
mov
hlt
gs
rclb
sbb
jo
fldcw
mov
add
push
push
ss
or
ja
xchg
leave
mov
cwtl
nop
dec
stc
xchg
outsb
inc
insl
cwtl
mov
push
sub
bnd
insl
mov
mov
aas
sub
xor
add
data16
push
xchg
shl
jp
movsl
cmp
arpl
cli
xchg
inc
cmpsb
xchg
pushf
shrb
dec
inc
lahf
push
add
mov
dec
push
push
aad
push
adc
pop
dec
push
imul
sub
fsubrs
xchg
test
dec
push
sbbl
push
push
dec
mov
jle
jo
inc
xchg
fcoml
jmp
das
lret
xchg
das
push
dec
or
jns
xchg
fnstsw
mov
adc
arpl
jnp
jge
and
and
add
jecxz
mov
stos
cwtl
sbbl
test
jb
divl
mov
lret
ficomps
imul
and
xchg
pusha
inc
aam
dec
inc
jnp
cwtl
lods
push
stos
stos
jbe
insl
das
jg
imul
cmp
in
lds
rclb
ja
sarl
and
es
mov
in
arpl
out
out
and
xor
mov
xor
lock
cwtl
repz
jmp
cmovle
mov
jno
inc
push
into
mov
scas
xor
mov
jae
inc
jne
or
push
sub
inc
jg
cmp
mov
jecxz
mov
leave
into
out
jge
dec
mov
sti
dec
test
fimull
out
stc
aas
adc
adc
jnp
cmp
pop
sarb
add
das
pop
mov
or
push
jecxz
jmp
push
xchg
sti
add
movsl
mov
or
aas
or
jp
push
test
jmp
pushf
loop
xchg
mov
je
fs
out
dec
nop
xchg
call
scas
fsubrs
outsb
dec
adc
jmp
das
jbe
jnp
insb
cmpsl
add
test
lcall
cli
repz
cmp
lret
and
sbbb
cli
or
xor
sbb
adcl
jl
das
dec
movl
movsl
lret
fldt
adc
sbb
outsb
lods
push
imul
add
repnz
or
cld
aad
mov
pop
les
inc
cli
aad
or
hlt
mov
sbb
inc
pop
push
jno
or
outsb
jbe
out
sbb
push
pushf
and
in
rol
dec
lahf
aad
imul
jns
and
movsb
sbb
mov
testl
hlt
daa
std
dec
mov
mov
dec
fsubrs
xchg
ror
mov
xlat
jbe
and
and
xchg
inc
adc
out
icebp
xor
xchg
cmc
pop
lock
loop
lods
push
pop
xchg
repnz
mov
scas
push
pusha
xor
add
popa
lret
sbb
sub
sbb
and
ljmp
pop
jb
movsb
mov
jno
and
loopne
js
idiv
out
sub
bound
mov
mov
cltd
fstpl
inc
jle
dec
sub
cmp
lcall
mov
xlat
sub
movsl
jne
push
test
and
out
data16
in
movsl
add
pop
aam
cmp
add
int3
aad
outsb
lret
pop
loope
movsb
decb
test
xchg
leave
or
xor
imul
add
inc
cmp
pop
sbb
sub
and
fsubl
lret
cmp
inc
aas
mov
pop
and
cmp
std
mov
push
xchg
inc
rorb
daa
xchg
push
in
or
ljmp
fistps
cmp
scas
js
fsubrs
mov
mov
les
mov
int3
push
mov
and
mov
push
xchg
fs
lahf
jmp
mov
push
fwait
bswap
daa
popfw
fists
push
sbb
insl
sahf
ja
mov
jecxz
les
out
mov
mov
pop
inc
gs
cmp
fs
std
nop
xlat
jo
rol
add
je
test
mov
or
inc
insb
dec
mov
push
jno
or
out
dec
xor
pop
inc
scas
fildll
insl
imul
out
inc
mov
clc
jne
add
js
push
fsubrl
jecxz
cmp
cli
pop
into
sub
das
inc
sahf
frstor
movl
cltd
lock
dec
aaa
stos
stos
mov
xchg
fs
mov
push
test
dec
mov
inc
cmp
adc
scas
mov
daa
leave
inc
xorps
mov
xchg
stos
daa
inc
aam
cmp
push
leave
hlt
cmp
xor
xchg
bound
std
mov
push
mov
push
mov
jb
jmp
mov
sahf
mov
sbb
fs
add
push
andb
pop
shll
sbb
in
leave
jp
das
pop
cwtl
frstor
std
subb
sbb
js
movsb
jbe
push
hlt
out
popa
dec
xchg
inc
mov
xchg
pop
xchg
mov
mov
dec
mov
sbbb
xchg
rorb
lret
mov
test
aas
xor
test
pushf
rcrl
push
push
fcoms
mov
inc
or
fisubl
loop
lods
sbb
and
push
push
jnp
adc
add
ret
mov
fs
rorl
jecxz
push
inc
orb
shrb
fcomp
mov
scas
jle,pt
mov
dec
sar
fldt
popf
jb
out
adc
ficompl
mov
outsl
out
sbb
fs
icebp
insl
in
bound
adc
pop
push
xchg
in
adc
push
inc
ljmp
sti
int3
mov
push
cmpsb
dec
xlat
or
mov
push
lods
and
sub
mov
xchg
jmp
mov
xchg
mov
inc
rorb
sub
push
adcb
jnp
push
xlat
jmp
andl
pusha
xchg
outsb
xlat
int3
and
shrb
ja
ds
sbb
or
mov
fildl
out
push
ret
xor
xchg
adc
jbe
xor
stc
jg
cli
jp
sub
mov
imul
cld
or
sbbb
and
xor
pop
arpl
xchg
aaa
or
aam
add
cmpsb
mov
into
jmp
and
sti
idivl
imul
fcomps
pop
jae
lret
test
ja
ja
adc
lret
inc
enter
xor
insl
mov
stos
test
cmp
jne
push
jnp
int3
call
jns
sbb
mov
mov
push
fdivs
in
test
pop
scas
rcrl
mov
nop
bound
test
scas
mov
mov
in
fnstenv
cwtl
mov
mov
push
cmpsb
mov
xor
push
xchg
out
cs
inc
adc
push
lret
addb
jmp
mov
mov
test
jns
jno
push
jp
js
cmp
dec
arpl
dec
iret
dec
rcll
ljmp
push
in
outsb
pop
jle
into
xchg
les
ss
mov
or
jle
push
lret
dec
into
cmp
dec
jnp
loop
adc
xor
jnp
lock
xor
xchg
cmp
aaa
and
and
loope
test
sbb
lret
outsb
rorl
mov
inc
xchg
push
jnp
cs
lcall
dec
or
pop
movsl
push
aaa
out
jno
test
pop
pop
insl
sub
xor
pop
decl
lcall
xchg
push
and
dec
pushf
arpl
arpl
xchg
and
popa
jb
mov
ja
adc
in
les
xchg
adc
mov
ret
cmpsb
pop
loop
das
test
push
or
push
mov
add
packssdw
jg
mov
adc
adc
jl
cmp
int3
lea
adc
push
fbstp
psrad
xchg
fildl
out
outsl
dec
mov
or
inc
test
cmp
fildl
adc
sti
lods
mov
jle
or
ja
push
xor
add
inc
add
adc
xor
rol
mov
push
inc
mov
push
mov
sbb
xchg
imulb
mov
cmp
or
das
add
movsl
push
sub
andl
jg
or
push
or
xchg
insb
mov
notb
mov
push
push
push
inc
scas
adc
cli
or
stos
subl
cltd
adc
inc
jo,pt
cmp
js
test
cmp
lock
inc
nop
icebp
mov
mov
inc
push
mov
inc
xor
popf
xor
mov
das
leave
or
test
mov
adc
lods
out
pop
sbb
ret
add
fdivrs
in
movsl
in
xchg
repz
clc
or
in
pop
es
test
rorl
mov
ret
leave
pop
loop
js
sbb
push
jae
lret
sbb
inc
sbb
and
mov
mov
jnp
adc
mov
dec
f2xm1
pop
adc
ljmp
push
sub
or
mov
adc
sbb
pop
pop
mov
push
lret
fadd
add
dec
mov
fldl
sbb
adc
addr16
xchg
movsl
out
cmp
js
outsb
ficoms
ss
mov
int3
aaa
xchg
test
cs
test
sbb
sbb
xor
pop
push
andb
shrl
loope
xor
lea
cli
and
lds
popa
out
movsb
bound
push
shll
scas
hlt
xchg
shrl
fwait
jmp
addl
je
inc
pop
hlt
mov
sbb
push
cs
jle
and
ret
mov
loop
in
push
or
notl
sahf
fbstp
mov
mov
mov
sbb
cmp
scas
xor
imul
stos
xlat
xchg
imul
sbb
xor
std
mov
andb
les
rclb
cmpsl
aaa
and
jns
or
setl
push
inc
in
sub
inc
js
sbb
dec
mov
cs
mov
xor
mov
xchg
lret
fs
inc
or
jg
push
cwtl
push
out
inc
xlat
sub
incl
and
inc
stos
aam
cmp
ds
push
xchg
cmp
xchg
pop
mov
in
fcoml
lahf
push
or
dec
loope
aam
inc
inc
mov
xchg
dec
jmp
jns
jge
jmp
repnz
pop
pop
idivb
fdivr
and
add
jp
mov
in
dec
sarb
loopne
mov
or
cmpsb
movsl
mov
std
gs
inc
hlt
std
xchg
cmp
push
in
inc
and
push
in
jns
or
xchg
ja
and
scas
shl
or
divl
jge
jg
mov
pop
les
lods
and
fcomip
testl
adc
mov
sub
les
sub
sub
lods
adc
pop
enter
prefetchw
scas
add
mov
mov
clc
push
add
xor
or
mov
pop
lds
ja
mov
les
mov
icebp
inc
jmp
cltd
ret
adc
mov
insl
pop
hlt
fidivs
imul
sbb
clc
pop
xchg
das
fcmovu
lret
cmp
dec
stos
dec
pop
mov
insb
fisubrl
and
outsb
xchg
push
nop
negb
insb
xor
push
out
sbb
pop
mov
xor
sub
adc
cwtl
mov
lcall
mov
adc
stc
into
and
mulb
std
mov
fistl
mov
aas
lods
add
mov
pop
rcll
add
negl
or
xor
ljmp
mov
sub
push
dec
outsb
ljmp
outsb
in
cmp
push
or
outsl
testb
imul
jp
pushf
pop
mov
cmp
cmc
add
pusha
stos
xor
scas
in
xchg
test
sbb
mov
stos
inc
lock
push
arpl
dec
out
enter
ljmp
pop
daa
xchg
push
imul
sub
not
loopne
pop
and
aas
in
or
mov
shrl
push
cmpsl
out
test
aaa
or
les
push
in
mov
add
sub
pop
pop
cmp
lods
ljmp
sbb
ficoml
call
sub
mov
call
cld
fcmovnbe
sbb
hlt
orl
cli
ror
pop
mov
push
out
div
ficomps
jae
scas
mov
scas
stos
mov
xor
outsb
and
outsl
dec
mov
pop
jns
outsb
jmp
movsb
cmpsl
sub
cmp
mov
dec
cld
fcomps
ret
dec
cltd
hlt
or
cmpsl
xchg
add
ja
add
outsb
jmp
inc
bound
fidivs
lods
mov
adc
mov
pusha
pop
movsl
adc
adc
or
scas
out
sbb
popa
jl
cmp
mov
xchg
sbb
and
iret
popa
shrb
cli
lds
dec
mov
cwtl
enter
pop
aad
fsincos
fs
das
mov
and
mov
shld
pusha
xor
ret
pop
jp
sub
pop
std
add
out
in
and
xor
mov
cmc
loop
push
jp
ret
cmc
fucomp
dec
nop
fstp
dec
sub
into
adc
jne
jle
loopne
mov
cmp
jo
test
and
adc
pushf
jae
leave
mov
jns
imul
or
mov
aad
lea
out
notrack
xchg
outsl
adc
testl
and
imul
push
cmp
imul
ja
xor
icebp
iret
add
test
insl
xor
clc
inc
or
js
gs
subb
jo
jbe
pop
lret
adc
aaa
or
adc
sub
ret
push
xor
add
leave
xor
sub
in
adc
pop
mov
dec
jecxz
fwait
out
repnz
xchg
push
ror
add
pushf
clc
xor
adc
in
sbb
fsubrl
jne
pop
mov
push
pop
or
push
fidivrs
adc
shr
pop
sbb
in
mov
and
enter
jns
mov
inc
ds
ja
test
fs
or
push
and
push
adc
pop
or
lods
sub
imulb
and
or
aas
lret
add
mov
mov
pop
add
insl
cmpsl
xchg
les
mov
push
mov
hlt
ret
cltd
orb
dec
sbb
push
xor
jo
mov
pushf
xchg
insb
dec
lret
jmp
out
addb
cs
das
dec
cmp
stos
xbegin
sub
mov
sub
mov
es
adc
push
and
ja
mov
jmp
xchg
mov
cld
mov
xor
mov
js
sbb
movb
cmpsb
add
out
int
pop
pop
add
roll
push
adc
mov
mov
or
leave
or
push
mov
or
or
dec
mov
mulb
push
fucomi
adc
pop
out
cmp
push
sti
hlt
das
aaa
std
rcrb
dec
lods
aad
jne
out
pop
jb
aad
rcr
ljmp
cmp
jp
xor
enter
jb
int3
cli
nop
jb
adc
xchg
push
dec
sbb
ret
xchg
test
pop
or
adc
addr16
outsl
adc
insb
iret
loopne
jg
inc
enter
cmpsl
push
sub
nop
movsb
lret
hlt
rclb
sbb
mov
or
into
inc
and
ljmp
add
idivb
mov
jne
dec
push
scas
sbbl
sbb
xor
inc
xchg
cmpsl
ret
dec
adcb
insb
addb
mov
scas
push
or
push
or
xor
xchg
cs
leave
push
mov
je
xor
pop
mov
jg
jmp
scas
outsb
clc
jmp
mov
cmp
pop
ror
aas
popa
out
push
imul
mov
out
popa
pusha
out
sbb
dec
lret
movsb
cld
push
inc
adc
or
sub
jp
out
mov
mov
inc
push
or
aad
dec
enter
stos
fists
mov
jbe
xchg
jnp
enter
cmpsl
dec
xor
add
movsb
repnz
sbb
xchg
or
sbb
sbb
mov
ljmp
popf
fs
mov
lods
pop
orl
orb
adc
mov
ret
push
add
xchg
bound
inc
mov
pop
enter
je
pusha
pushl
cmovbe
pop
mov
out
jmp
sub
and
push
ds
xor
push
leave
and
adc
leave
sub
sbb
movsb
add
cmp
cwtl
clc
filds
dec
int
jge
pop
in
xor
dec
addr16
clc
and
jp
fadds
mov
mov
dec
push
sbb
andb
repnz
bound
xchg
xor
push
jecxz
lret
inc
or
xor
adc
sbb
in
arpl
fildll
fbstp
mov
and
lsl
sbb
pop
loope
enter
orb
mov
adc
addr16
pop
int3
jge
lock
popa
lods
out
xchg
push
nop
push
add
push
andl
arpl
xor
cmpps
lods
mov
lods
faddl
scas
jmp
pop
dec
xor
scas
imul
push
movsl
or
pop
cmpsl
sub
dec
inc
cld
pushf
cmp
in
div
push
xor
xchg
ja
sub
popf
inc
mov
push
and
movsb
jge
adc
xor
out
mov
push
jbe
mov
push
pop
nop
orl
mov
clc
ret
push
clc
inc
ja
xor
fsubrs
das
fldcw
adc
pop
adc
jg
adc
daa
test
mov
loope
hlt
in
mov
mov
push
add
jle
jae
inc
mov
dec
js
mov
push
mov
inc
cmp
mov
cwtl
cmp
sub
dec
std
sar
jecxz
push
aaa
ret
out
ret
push
jne
cltd
int
xor
stc
sub
stos
lret
jmp
in
or
js
mov
leave
xor
jge
and
in
aam
es
mov
adc
or
fs
cmc
jp
fisttpl
pusha
call
lea
aad
jp
testw
out
lock
pop
sarl
jp
dec
ret
rcl
or
pop
imul
outsb
pop
nop
cmp
lcall
or
insb
push
pop
jecxz
add
mov
xchg
dec
sbb
sbb
mov
shlb
mov
inc
sub
fcomip
stos
and
jne
mov
pop
cld
ljmp
pusha
mov
lods
push
mov
mov
push
in
cmp
scas
scas
in
das
mov
mov
popa
repz
inc
sbb
pop
jno
jge
mov
or
in
adcl
fstpt
test
and
arpl
mov
das
fwait
mov
rcr
test
or
mov
jae
test
pop
out
mov
fmul
cld
sub
test
xchg
mov
shrl
add
stos
pop
jbe
stos
mov
in
dec
push
dec
and
xchg
xor
cmp
sahf
fisubs
add
xchg
xchg
mov
jbe
sbb
xchg
js
push
dec
leave
std
lods
jns
aas
incb
fiaddl
xchg
xchg
fxch
push
or
outsl
test
inc
cmpsl
sbb
jbe
ficompl
js
mov
sbb
lods
sbb
test
gs
cmp
mov
stos
push
add
iret
xor
daa
test
out
gs
sub
mov
fisttps
repz
mov
gs
mov
iret
adc
scas
xor
adc
je
or
sub
jae
push
ret
pop
xor
into
lcall
ljmp
rcll
push
ja
xor
xor
mov
or
js
nop
lods
fstl
cltd
shll
pop
and
inc
or
adc
sbb
or
push
ficoml
scas
inc
orb
jne
sbb
sub
cmp
inc
scas
stos
sbbl
xchg
shll
jl
imul
add
fdivs
fcmovu
shlb
adc
aas
fsts
mov
sub
fsubrp
jbe
inc
test
leave
lcall
into
in
inc
xchg
mov
pop
dec
pop
inc
dec
jle
outsb
addb
push
imul
push
push
sub
jge
adc
mov
fiaddl
ss
pop
cmp
add
je
dec
fnstcw
jmp
mov
fstps
sub
xchg
push
dec
mov
fs
push
inc
xchg
repnz
xor
cmp
xor
cmp
jg
cmc
push
cmp
mov
movsb
mov
ljmp
mov
mov
fwait
cmpb
popa
inc
mov
push
mov
dec
std
mov
adc
xor
mov
pop
lea
push
cld
dec
cmp
stc
jg
ret
int
shl
adc
rolb
je
cmp
aaa
mov
into
cld
mov
stos
aaa
rol
jae
lea
pop
or
push
push
pop
add
mov
sahf
shll
sbb
daa
aas
outsb
mov
loopne
sahf
cmpsb
xchg
mov
pop
adc
and
roll
jne
or
shrb
les
add
test
fistpll
mov
pop
lea
sbb
pushw
inc
xor
inc
es
sahf
out
xor
enter
jno
pop
sti
pusha
outsb
dec
jmp
into
js
and
das
loope
sub
cltd
fdivl
stc
push
in
dec
ljmp
outsl
mov
fwait
sarl
sub
dec
inc
scas
aam
sub
pop
fistpll
shl
xor
lret
adc
lret
pushf
sub
mov
popf
mov
inc
mov
push
and
cmc
push
cltd
loopne
arpl
lahf
xor
dec
fwait
out
fcomi
pop
xchg
or
sbb
dec
js
pop
cmpsl
icebp
add
je
je
pop
in
iret
inc
and
hlt
pop
jo
imul
lcall
fidivl
cmpsb
out
adc
pop
jns
xor
push
sbb
sbbb
mov
inc
pop
sbb
push
popf
xchg
sti
jg
jge
mov
push
dec
lret
enter
cmp
test
sbb
mov
and
push
push
stos
push
aam
int
movsb
hlt
mov
xor
movsb
shll
lock
fs
and
inc
ret
mov
push
sub
mov
pop
faddl
sbb
icebp
ljmp
cld
cltd
jle,pn
out
ljmp
push
dec
icebp
icebp
enter
sub
scas
packuswb
pusha
cmpsl
cwtl
inc
add
jg
out
loop
shr
push
nop
mov
adc
out
jg
movsl
jl
jp
sub
jnp
cmp
mov
clc
into
iret
data16
cmp
or
scas
scas
ljmp
sbb
add
or
test
mov
jns
or
xchg
test
push
pop
out
ret
adc
mov
jne
pushf
xchg
sbb
shr
mov
enter
sub
adc
mov
push
push
push
jbe
add
inc
sbb
imul
adc
mov
out
scas
adc
mov
mov
test
bound
inc
sbb
in
sarl
arpl
jmp
or
in
adc
push
int
adc
out
das
sbb
outsl
jle
sub
ljmp
sahf
fmuls
repz
mov
lods
stos
mov
dec
pop
push
insb
inc
pushf
divb
cmp
mov
push
and
dec
mov
gs
xchg
mov
insb
mov
aam
mov
xor
xchg
lods
inc
rolb
dec
inc
ret
imul
push
fdiv
sbb
iret
and
add
jmp
push
and
movsb
sub
dec
rolb
adc
pop
out
jle
int3
push
dec
clc
divb
inc
adc
inc
lods
and
int
lea
movsb
out
ret
sti
push
int
shrd
xchg
std
pop
jne
sti
mov
fnstenv
movsb
bound
jg,pn
setge
jmp
ds
xor
rcrb
lret
jge
popl
push
roll
push
pop
addr16
pop
push
or
pop
outsb
pop
add
stos
or
mov
iret
nop
mov
ja
test
jne
mov
mov
aam
push
ret
fwait
cld
sub
inc
sub
dec
int3
rclb
out
and
addr16
adc
es
and
sar
dec
push
dec
xchg
mov
dec
xchg
lcall
repnz
mov
mov
stc
sti
cltd
stos
imul
or
ljmp
pop
into
cvtdq2ps
mov
mov
mov
sub
addr16
push
xchg
inc
in
sbb
mov
jp
mov
faddl
fdivrp
cwtl
mov
mov
mov
bound
push
pop
cmpsb
out
popa
inc
and
add
push
jge
sub
or
es
in
addr16
loop
mov
jecxz
loopne
imul
mov
xchg
fxch
popa
nop
loope
mov
call
js
or
hlt
jno
movsl
pop
add
imul
mov
sub
xchg
or
jno
mov
push
push
addl
inc
ds
lds
sbb
nop
mul
pushf
aas
fnstsw
stos
fidivl
sub
lahf
test
inc
add
mov
push
add
adc
adc
mov
pop
cmp
fisttps
add
xchg
scas
mov
loope
addr16
loope
fisubl
and
mov
cli
xlat
mov
das
bound
dec
movsb
jge
jb
ja
scas
xor
xor
lods
in
or
mov
mov
mov
repnz
lock
cmp
dec
ss
stos
cvtdq2ps
inc
leave
push
push
xchg
inc
dec
dec
sbb
roll
or
ljmp
nop
rcll
jne
push
push
xor
clc
inc
cmc
sti
repnz
pop
jno
adc
xor
add
push
mov
adc
mov
xchg
xor
sub
into
mov
out
adc
push
jmp
push
cvttpd2pi
test
sub
insb
push
data16
in
repnz
outsb
xchg
xor
outsb
or
xchg
imul
or
fidivs
je
sub
xchg
paddusb
lahf
xor
gs
cwtl
push
push
mov
ret
sbb
cmp
jmp
lods
sub
imul
jmp
ljmp
push
outsb
mov
xorb
and
in
cmpsl
xorb
arpl
sub
test
cld
cmp
cmp
push
arpl
out
pop
sub
popa
int3
pop
pusha
sbb
or
shlb
jb
push
test
pop
movsb
push
dec
pop
mov
mov
mov
mov
out
fimuls
daa
dec
mov
insl
cmp
jmp
sbb
inc
and
pop
and
dec
cld
ret
mov
mov
or
addr16
or
push
lods
imul
pusha
xor
mov
mov
xchg
hlt
mov
loop
fsubp
or
jl
sub
or
and
sbb
cld
adc
js
decb
or
btc
sub
and
jmp
imul
xchg
inc
or
shlb
ficompl
fdivrp
or
js
dec
gs
sub
jne
sbb
adcb
test
rorb
inc
cmp
pop
lock
rorb
push
dec
pop
dec
pop
out
pop
or
mov
rol
movsb
loopne
mov
fndisi(8087
mov
out
cli
xchg
adc
cmp
jo
push
scas
insb
xchg
notl
and
adc
aam
jo
adc
bound
into
lahf
fisttpl
pop
xchg
xor
ret
out
and
jmp
test
popf
pusha
aam
subl
cmp
scas
or
jl
rorl
adc
mov
sahf
testb
lret
mov
les
cmp
mov
inc
outsl
sbb
push
dec
lds
mov
adc
popa
mov
mov
imul
push
dec
popa
popf
push
sbb
out
fcomi
outsb
test
aam
bswap
in
test
jnp
mov
mov
or
xchg
mov
in
lods
inc
aad
dec
shll
inc
call
inc
ljmp
hlt
pop
mov
lds
lds
enter
ret
es
test
ss
push
mov
mov
arpl
push
mov
test
pop
dec
nop
or
and
les
inc
insl
xchg
and
xor
xchg
sbb
shlb
clc
mov
movsb
inc
and
mov
test
sub
icebp
mov
insb
les
dec
xor
test
and
data16
xor
out
imul
inc
adc
clc
cmpb
lahf
and
es
popf
jle
fwait
xchg
incl
xor
and
sub
sbb
mov
lcall
jp
sbb
mov
inc
data16
sbb
adc
push
sbb
mov
dec
dec
sbb
loope
fcmovnb
cwtl
out
sub
popl
lret
cs
int3
inc
fisttps
dec
push
adc
cmpsl
aam
push
popf
ja
jne
jns
pusha
adc
sti
xor
sbb
and
sub
cmp
test
loope
out
xchg
cmp
inc
pop
roll
inc
mov
sub
push
pusha
sbb
xchg
iret
sbb
adc
pop
sub
lret
pop
insb
dec
outsb
iret
aaa
mov
imul
cld
arpl
mov
cltd
adc
ljmp
xchg
add
leave
stos
inc
xchg
pusha
fs
jnp
adc
dec
sub
in
jecxz
inc
lahf
repz
sarb
mov
adc
movsl
cmp
rol
jge
jp
scas
clc
mov
fistpll
mov
push
out
xchg
mov
xor
jnp
in
push
xchg
jne
pop
loop
xor
or
fcoms
xor
or
movsl
cmp
insb
pop
inc
jge
sbb
out
mov
xlat
sub
inc
test
outsb
cmp
ret
fsubrl
sub
mov
inc
lahf
scas
lcall
xchg
adc
xlat
cmp
imul
push
dec
test
push
adc
sbb
and
adcb
add
fs
in
sbb
and
mov
mov
leave
push
subb
push
mov
cmc
mov
adc
jge
xchg
cmp
pop
mov
mov
push
stos
jl
sub
pusha
fs
repnz
sbb
sub
fucomip
or
ja
pop
sbb
ret
movsl
xor
aam
dec
scas
push
js
inc
mov
dec
js
or
fistpll
mov
push
sbb
and
in
cli
and
enter
insl
loop
call
push
inc
cmp
pop
push
lock
insb
cmp
call
cmpsl
push
sub
sub
shlb
mov
scas
mov
lret
xor
sbb
dec
test
arpl
cmp
add
shlb
pop
sub
decb
pusha
sub
inc
test
and
sub
in
mov
sahf
shrb
mov
pop
sbb
xchg
push
mov
xor
dec
xchg
call
xchg
xor
stos
mov
lods
lcall
loopne
dec
cmp
mov
fisttps
inc
push
push
add
fnstsw
xor
xor
fndisi(8087
xor
jl
push
mov
popf
adcl
hlt
outsb
lods
push
ljmp
push
out
mov
mov
xchg
adc
fwait
cmp
adc
inc
cld
aam
loop
and
ret
push
pop
inc
shrl
mov
dec
push
inc
inc
cmp
into
sbb
icebp
push
and
ss
fimuls
sbb
pusha
mov
push
and
mov
mov
shrb
mov
xor
mov
push
mov
lock
test
sub
and
xchg
mov
or
inc
inc
popf
je
pop
push
loope
les
mov
push
imul
sub
jg
mov
xor
popa
adc
xchg
mov
pushf
aas
mov
cmp
and
fsub
and
out
stc
adc
mov
dec
lds
andl
dec
aam
pop
xorb
arpl
cld
test
fcompp
rolb
leave
add
lds
ja
and
faddl
mov
push
cmp
mov
bound
adc
test
cmp
xchg
adc
scas
add
cmpl
sub
popf
pop
outsl
fwait
clc
fwait
xchg
fsubr
cwtl
ret
lret
and
mov
push
and
cld
mov
shl
mov
cmpb
aad
or
cmp
ljmp
or
push
daa
xor
push
mov
push
inc
cmp
inc
jae
mov
and
adc
or
xchg
pop
scas
add
adc
sar
push
aad
rcll
add
xor
pop
cmpsl
xor
repnz
sbb
xor
xchg
push
cmp
mov
dec
cmpl
cmp
pusha
pop
xchg
jmp
andl
and
in
insl
and
mov
xor
add
shll
test
xchg
inc
fwait
adc
movsl
mov
xor
sub
pop
adc
lahf
push
xor
xchg
daa
and
dec
fwait
pop
mov
cmpb
add
dec
pushf
jb
repz
int
pop
mov
loope
cmp
andw
es
scas
sbb
inc
or
lahf
and
fistpl
insb
in
leave
jnp
insb
lret
icebp
repnz
inc
adc
int3
lcall
xor
add
stos
xchg
dec
sbb
xor
cmp
pop
or
push
je
cwtl
and
mov
add
mov
pop
push
xor
into
jnp
mov
adc
add
mov
mov
xchg
xor
adc
push
sbb
add
cmp
mov
stos
incl
sbb
xor
cmp
add
push
loopne
cwtl
fninit
jae
cs
int
xor
push
push
into
pop
mov
cmpsb
mov
mov
mov
aam
mov
pop
and
or
daa
sbb
data16
jmp
test
push
std
push
xlat
cs
fbld
push
les
dec
ficoms
das
dec
xchg
int
inc
test
decl
aad
popf
xchg
pop
into
mov
adc
push
dec
outsl
sub
adc
and
gs
stos
lods
loope
fbld
daa
push
mov
push
pusha
add
rcrl
and
mov
ds
sub
fs
push
mov
lahf
das
in
push
cli
sbb
lahf
in
fistpl
out
in
mov
in
push
jmp
or
inc
jp
sbb
add
push
push
aas
ljmp
cmp
shll
into
mov
gs
stc
popf
sbb
jne
jb
pop
fimull
fnsave
test
bound
dec
lods
push
dec
fistl
sub
inc
sbb
dec
loopne
jge
stc
loope
ret
sbb
sar
add
inc
gs
mov
dec
dec
adc
adc
repz
mov
cmp
out
xchg
aas
mov
sarl
lahf
push
jmp
negl
loopne
lcall
sarb
inc
sub
pop
cmp
je
jb
xor
lret
mov
xor
mov
les
aas
sub
pushf
xchg
sbb
or
fwait
lret
int3
sub
cmp
je
xlat
out
mov
sub
xchg
pop
ja
rorb
cltd
popa
sbb
mov
cltd
pop
int
sbb
imul
jns
sbb
mov
push
aam
and
cmp
int
ret
stc
fld
push
adc
es
div
push
daa
sti
sarb
sbb
inc
jo
sub
pop
imull
cmp
adc
das
enter
push
insb
cli
mov
lock
es
je,pt
jp
push
lods
mov
push
jle
jns
xor
mov
in
addl
pushf
std
rcll
sbb
sub
cwtl
cld
cmp
in
nop
add
lods
imulb
inc
dec
scas
sub
lahf
xchg
or
mov
xor
cmp
imul
in
inc
sbb
test
jae
mov
ret
pop
mov
dec
scas
mov
repnz
adc
add
add
xlat
iret
aam
cmp
cmp
not
jno
clc
jae
jb
mov
repnz
lods
pop
add
stc
jp
lock
and
dec
push
arpl
aam
imull
loopne
pop
or
pusha
mov
ror
and
call
pop
dec
out
cmpb
test
outsb
add
sbbl
cmp
xor
mov
testl
and
xor
sbb
hlt
mov
lahf
mov
cmp
mov
inc
xor
popf
pop
and
mov
insb
pop
callw
cli
add
out
imul
dec
mov
inc
dec
mov
inc
mov
xchg
ret
in
mov
stc
leave
or
cmp
ja
ficoml
hlt
add
xor
pop
movsl
dec
sbb
sub
lret
test
adc
mov
adcl
cld
mov
pop
jp
pop
pop
mov
jg
jl
fxch
cmp
add
add
loopne
fistl
arpl
sbb
fs
dec
les
push
stos
mov
movsl
adc
fst
and
mov
cmpsl
sbb
add
sbb
mov
test
mov
hlt
inc
das
lcall
test
int3
stos
in
sub
aas
mov
mov
aaa
inc
or
sbb
movsl
sub
sub
inc
push
xor
inc
std
adc
push
sbb
dec
popa
push
popl
test
jl
inc
xor
cmp
lret
or
mov
iret
ja
cmp
rol
sbb
mov
ds
xor
xchg
repz
lcall
sub
aaa
or
dec
mov
adc
nop
clc
rcl
movsb
xchg
cld
xor
or
or
out
push
jg
mov
sahf
test
sbb
add
cltd
dec
dec
xor
xchg
loopne
xchg
or
shrl
adc
push
mov
cltd
shll
adc
cmp
int3
ret
stos
shll
xor
lock
mov
and
push
jp
push
xor
mov
pop
shl
cmp
pop
dec
loop
pop
cmpl
fs
dec
xchg
out
lods
adc
scas
fdiv
loope
add
mov
xchg
xchg
test
loop
xchg
cwtl
push
out
outsb
loopne
out
les
icebp
nop
xlat
sbb
mov
popf
cli
arpl
std
sti
lret
cli
xor
jg
mov
repz
jmp
outsb
xchg
cmpxchg
push
inc
mov
jno
and
dec
inc
into
mov
insb
cs
jb
mov
mov
fdivs
cmp
xor
xchg
bnd
hlt
add
xor
xchg
adc
aad
int3
rorl
inc
leave
xchg
fisttpll
cli
lds
mulb
mov
test
mov
pop
in
adc
mov
subl
mov
push
inc
adc
fstps
jp
push
xor
cs
xor
add
rorb
fwait
int
ss
dec
inc
push
dec
js
mov
sub
mov
daa
xchg
push
popa
scas
shl
inc
imul
sub
push
fidivrl
rol
dec
pop
adc
dec
shll
movb
divb
je
pushf
dec
rcr
cwtl
ret
jo
jns
dec
mov
cmp
in
jp
mov
lcall
add
mov
fidivs
xchg
cmp
stos
jmp
mov
mov
xor
xor
jmp
fwait
mov
out
add
cs
test
or
and
pop
fwait
cmp
out
rcrb
pop
or
arpl
testb
fdivrl
cld
int
push
jmp
xor
aam
leave
jg
mov
arpl
mov
jb
sbb
push
out
or
sbb
outsb
out
sbb
sti
dec
mov
mov
pop
enter
inc
sbb
fisttpl
loope
dec
pusha
test
mov
inc
mov
mov
cmp
cmp
inc
std
jecxz
add
mov
and
rclb
scas
add
mov
pop
push
dec
in
imul
inc
xchg
js
int
in
cmp
ljmp
popa
ret
sbb
ret
xchg
in
iret
xchg
xor
daa
xorb
lea
icebp
in
insl
cwtl
subb
inc
shlb
mov
out
xor
mov
sub
int
ja
das
in
in
ret
jmp
sub
mov
test
idiv
jge
xchg
in
mov
je
test
adc
test
push
inc
mov
nop
jmp
dec
jge
or
aas
adc
cmp
push
push
sbb
and
adc
in
xchg
dec
sti
add
cld
sarb
ret
dec
xchg
sarl
push
sbb
add
mov
jge
lods
add
jo
push
adc
ds
push
xor
pop
lods
push
mov
flds
sub
sti
ds
hlt
mov
in
mov
push
ja
out
or
sub
add
jmp
int3
fsubp
mov
lds
cltd
xchg
sbb
add
imul
pop
sbb
lods
xor
cmp
inc
lods
es
jbe
mov
ret
adc
xchg
and
cs
sub
fwait
cmp
or
dec
xchg
pop
mov
cwtl
cli
test
repnz
mov
ficompl
mov
xchg
cmp
inc
scas
sbb
add
mov
imul
and
mov
pop
mov
sub
leave
clc
imul
and
cld
mov
adc
enter
xchg
mov
jbe
mov
pop
scas
xchg
scas
outsl
xor
fimull
and
mov
dec
push
fisubl
dec
xor
jno
mov
add
sbb
mov
data16
out
sbb
push
dec
add
fwait
xchg
into
jb
adcl
mov
stc
push
xchg
cld
adc
clc
mov
push
jge
lret
popa
mov
cmpb
xor
flds
fs
aaa
xor
std
lock
std
mov
add
scas
sbb
loope
jg
xchg
cmp
jmp
and
leave
pop
lea
xchg
and
call
add
dec
std
push
xor
mov
stos
sub
mov
mov
test
adc
mov
ds
shrl
xchg
inc
adc
arpl
adc
dec
clc
lret
bound
jle
in
dec
jnp
subl
jne
inc
imul
rcl
sub
cs
dec
jae
std
pop
adc
push
jno
imul
imul
add
gs
hlt
rorl
cmp
xor
dec
push
mov
jo
insl
repz
mov
outsb
xor
ljmp
aaa
cwtl
out
js
pop
aas
icebp
pop
sub
out
loope
fistpll
js
or
pop
fcomps
cmp
add
cli
pop
adc
mov
les
fidivrs
adc
lea
les
push
xchg
push
mov
pop
sub
push
pop
sub
xchg
subb
pushf
cmp
mov
adc
inc
mov
cmp
add
cmc
dec
nop
loopne
imul
xchg
lods
mov
insl
mov
lret
ss
and
sahf
sub
push
jg
aam
testl
lahf
test
test
repz
faddl
inc
jno
add
or
int
push
xchg
pushf
dec
lret
pop
and
in
or
int3
rolb
adc
in
stos
fdivrl
sti
daa
dec
mov
movsl
dec
inc
jle
sti
lds
ficoml
mov
inc
mov
mov
imul
lcall
cmp
subb
mov
ret
shl
mov
xchg
mov
imul
or
sbb
repz
ffree
pop
pop
push
cwtl
pop
fs
cmc
into
dec
push
popa
sbb
inc
mov
lock
pop
jb
jne
sbb
in
scas
push
mov
xor
push
fwait
hlt
pop
scas
pop
xchg
mov
push
push
mov
jmp
push
mov
sub
dec
xor
stos
aaa
push
cmc
loop
out
test
sub
jbe
mov
mov
mov
mov
js
inc
in
mov
outsl
pop
jmp
sub
test
jge
movsl
cltd
or
sub
or
dec
je
mov
cmp
inc
adc
cmp
jo
and
push
ja
cwtl
and
enter
inc
jbe
js
push
jle
xor
dec
xchg
jo
cmp
subb
scas
mov
push
cmc
push
lods
push
call
leave
repz
mov
sbb
inc
sbb
adc
xchg
fiadds
xchg
xor
lea
mov
mov
inc
jecxz
push
lcall
add
sbb
add
push
outsb
pushl
inc
fisttpl
push
loopne
mov
inc
pop
pop
xchg
out
repz
fs
inc
sub
bnd
out
sti
loope
pop
lea
jne
sbb
mov
fdiv
ja
sbb
jmp
pop
inc
test
loop
mov
sub
push
mov
fs
dec
aam
in
cwtl
push
mov
repz
shl
or
mov
push
dec
mov
sbb
lahf
pop
mov
jno
gs
jno
adc
daa
xchg
mov
mov
push
adc
xor
push
pop
loop
xchg
je
rcr
inc
sub
jno
push
xor
shlb
mov
or
daa
test
jno
lods
jge
and
nop
in
mov
jecxz
mov
inc
aaa
rorb
lds
movsb
int3
xchg
sbb
dec
cli
jmp
loopne
sbb
lods
loop
xor
mov
or
out
pop
add
outsb
dec
imul
shl
adc
shrb
xchg
addb
xor
adc
sub
push
leave
pop
cltd
loopne
sbb
push
loopne
jmp
xchg
push
insl
adc
std
insb
push
sub
dec
adc
scas
pop
pushl
sbb
mov
scas
xor
push
or
ret
xchg
lret
sub
inc
stos
push
add
dec
xchg
or
push
push
icebp
sbb
pop
jo
ret
call
fwait
out
xor
push
push
pop
pop
pop
push
inc
xchg
fistl
jns
mov
sbb
add
or
push
cmp
dec
aam
jp
and
inc
cltd
jp
inc
hlt
daa
dec
std
add
sbb
mov
out
or
stos
out
add
test
mov
xor
or
arpl
or
or
mov
mov
in
mov
add
aaa
mov
adc
mov
in
arpl
mov
int3
or
popf
add
mov
inc
mov
into
push
xchg
rcrb
lahf
jle
adc
outsb
mov
hlt
jl
in
sub
notb
subps
stc
jmp
dec
insl
cmpsb
mov
shll
sub
mov
ja
pushf
or
xor
jne
mov
lea
mov
push
cld
inc
dec
loope
add
hlt
push
push
inc
xlat
pop
cli
flds
adc
jae
pop
cmc
jl
repnz
pop
les
mov
or
sbbb
sahf
lock
repz
int
sub
xchg
inc
and
in
xor
mov
imul
jno
sbb
adc
add
xor
and
adc
rorl
iret
push
lea
mov
cmpl
pop
inc
jmp
outsl
mov
xchg
leave
icebp
push
outsl
sub
fadds
lea
or
pushf
and
in
test
pop
stc
lods
aad
push
loope
cmp
push
lret
pusha
dec
mov
inc
dec
inc
sahf
lock
fwait
std
push
out
popa
xchg
push
iret
mov
aam
sbb
jno
dec
mov
adc
out
pusha
bswap
push
sub
les
pushf
adc
xor
xlat
xchg
pop
jbe
jne
mov
dec
loop
sahf
or
inc
repnz
ds
shl
and
js
xor
ljmp
mov
inc
repz
add
cmp
out
das
imull
ja
push
cmp
ds
inc
mov
jns
sbb
cmpsl
cld
jno
xchg
std
addr16
mov
fwait
iret
mov
loop
xchg
cmp
or
adc
xor
dec
cmpsb
pop
adc
cli
out
cmp
and
fs
xchg
mov
mov
sbb
pop
stc
pop
add
pop
pop
ljmp
xor
lds
mov
or
es
scas
pop
insb
lea
mov
xchg
sbbb
loop
addr16
shl
or
aad
out
popa
dec
mov
mov
ds
in
sub
fdivr
jg
test
and
mov
iret
or
lods
cmp
fstl
ficoms
and
mov
fcoml
mov
mov
xchg
repnz
mov
fsubs
cmp
push
xchg
mov
daa
and
or
xchg
imul
dec
push
and
or
sub
add
movsb
sbb
pop
sub
xlat
sti
repz
in
testb
and
movsl
adc
jnp
xchg
stos
mov
out
pusha
xor
es
incb
mov
dec
scas
stc
pop
ret
or
ss
xchg
mov
imul
xor
jne
out
adc
xchg
rcrl
push
push
test
mov
loopne
into
xlat
cltd
mov
les
cmp
test
sbb
inc
sbb
js
jmp
aaa
jmp
hlt
bt
out
add
outsl
sbb
outsl
outsb
mov
dec
mov
imul
xchg
pop
ss
shlb
les
and
sub
repnz
mov
hlt
or
push
cmp
push
test
jl
or
inc
mov
aad
push
adcl
arpl
adc
cltd
xchg
movsl
add
pusha
enter
push
sub
lods
dec
xor
xchg
mov
out
pop
out
mov
loop
dec
shl
ret
ret
ja
xor
xlat
je
and
mov
ja
jl
inc
pop
fstpt
adc
mov
in
outsl
scas
jle
xchg
lret
hlt
pop
xor
pop
sub
lods
cmp
pop
add
test
sarl
and
mov
push
je
decb
xor
mov
mov
iret
sysexit
les
mov
imul
imull
imul
fidivrs
test
push
sti
je
xor
fs
repz
sbb
add
ja
sbb
icebp
jg
xor
jl
push
xchg
test
or
push
mov
xchg
add
push
mov
cmp
jle
push
sub
dec
enter
mov
pushf
add
fwait
and
nop
adc
pop
test
je
xor
call
push
leave
xchg
imul
sti
out
inc
jecxz
pop
cwtl
sar
cmp
imul
add
data16
mull
adc
mov
pop
sahf
push
std
add
mov
rorb
shl
sbb
dec
jg
stos
ficompl
fiaddl
sahf
fistpll
push
inc
xchg
inc
dec
adc
cmp
hlt
test
push
lea
add
xor
push
xlat
flds
push
lds
lcall
inc
pushf
repnz
sbb
or
les
xor
arpl
push
or
push
or
or
pop
and
sub
shll
jmp
outsl
lcall
les
dec
mov
sub
cld
fcomp
push
jo
cli
mov
fucomip
or
push
adc
addr16
mov
adc
adc
scas
and
jmp
mov
por
sbb
pop
sub
in
mov
imul
and
scas
fdiv
mov
stc
pop
mov
fstpl
dec
popl
jo
js
aaa
int
gs
je
dec
test
adc
aad
cltd
popf
inc
xchg
xor
cmp
shll
and
lea
push
popf
xor
jo
leave
loopne
sub
push
dec
cmp
sbb
fsubs
sub
adc
pop
dec
jbe
fisubrl
sbb
inc
pop
mov
jecxz
push
sub
mov
pusha
xlat
xchg
mov
sahf
in
sarl
inc
or
cltd
pop
orl
rcrb
icebp
mov
pop
jne
pusha
xchg
inc
addr16
je
mov
outsl
inc
lret
lock
shl
jl
mov
test
mov
addr16
cmpl
popf
lods
sub
xchg
sub
repnz
sub
dec
sub
lret
cmpl
les
js
pop
mov
imul
popf
lahf
inc
sub
int3
imul
jno
ja
in
icebp
jo
inc
jbe
lret
cmp
xchg
adc
lret
std
in
add
sub
rolb
fstpl
pop
mov
aam
inc
arpl
pop
cmp
mov
jmp
jne
ret
mov
sti
jbe
jbe
and
jle
ret
es
push
ret
imul
movsl
cmc
cltd
in
loopne
ds
pop
push
jg
in
std
int
jmp
aaa
adc
or
scas
stos
stc
adc
flds
sbb
ret
or
push
pop
lea
loope
call
jge
scas
rcrb
loop
clc
pop
jl
sar
pop
push
mov
jb
inc
mov
mov
cs
xor
mov
lea
and
xchg
dec
popf
pushf
repnz
lahf
aam
in
push
sub
mov
arpl
ja
stc
jge
mov
add
flds
adc
mov
add
jmp
jp
push
mov
test
or
in
lods
shlb
clc
lods
or
je
push
insl
or
aaa
sti
or
jmp
enter
in
and
pop
cmpsb
inc
xchg
jl
mov
sbb
lds
push
add
clc
or
cwtl
lods
inc
call
adc
mov
inc
inc
or
mov
adc
das
mov
fwait
add
pop
xor
or
call
inc
adc
push
insb
add
jae
cmp
das
cs
dec
ljmp
push
cs
mov
movsl
in
xchg
push
imul
inc
cmc
and
ja
out
cld
mov
into
stos
cmp
hlt
sbb
testb
push
mov
pop
cltd
in
inc
inc
mov
imull
pop
sbb
mov
push
sbb
sub
ss
push
cmp
dec
adc
inc
adc
out
push
xchg
add
xchg
pop
cwtl
insb
insb
mov
adc
dec
inc
jge
inc
and
sbb
outsl
mov
mov
mov
jbe
movmskps
sbb
mov
xchg
cli
xor
adc
fcompl
xor
xor
mov
ds
mov
repnz
push
adc
xchg
lcall
pop
lret
pop
xchg
movsb
mov
mov
adc
hlt
cwtl
das
adc
pop
sbb
out
adc
jnp
sbb
or
repnz
cmp
je
lret
cmp
stos
out
or
fcomps
add
sub
xorl
cmpb
mov
mov
stc
stos
cltd
rcl
aam
cld
scas
mov
add
pop
les
fwait
mov
push
push
jae
ja
adc
scas
roll
outsb
pop
cmp
mov
orb
cmp
inc
mov
pop
mov
xor
dec
cmpsl
push
jno
or
in
dec
cmp
adcl
inc
sbb
or
inc
clc
in
pop
in
xchg
dec
xor
shrb
sbb
fbld
bswap
andl
mov
int3
mov
cmpsb
mov
jecxz
incl
pop
loope
mov
mov
sbb
mov
or
stc
cld
mov
mov
lcall
out
lds
or
pop
xchg
outsb
xor
pop
mulb
aam
in
pop
mov
or
cltd
icebp
in
mov
adc
sub
push
and
lods
or
push
xchg
jae
xlat
sbb
xchg
lahf
mov
push
imul
mov
aas
add
filds
stos
shlb
push
sub
mov
jne
cmp
leave
lods
fwait
dec
nop
dec
xor
hlt
dec
sub
mov
add
and
sub
dec
stc
roll
stos
pop
insb
pop
daa
lahf
pop
and
mov
repnz
iret
jnp
xchg
and
adc
popf
push
push
addr16
rclb
popf
test
aaa
stos
nop
shll
mov
je
shll
or
testl
mov
out
adc
in
or
lock
lods
jns
and
jmp
jnp
ss
rolb
inc
xchg
xchg
xlat
sarl
mov
inc
push
icebp
jecxz
pop
and
add
lahf
shlb
addr16
adc
xchg
xlat
cltd
xchg
pop
lea
add
dec
nop
mov
mov
mov
ret
out
pop
cld
shrl
add
and
add
and
sub
pop
jg
clc
mov
jle
push
and
ljmp
movsb
adc
and
addl
jo
cmc
ja
xchg
dec
popl
xchg
test
pop
cmp
ficoml
and
xor
stos
out
jnp
mov
cli
loopne
shl
mov
inc
and
mov
pop
pop
dec
xor
pushf
repnz
push
inc
mov
loope
jb
sub
add
inc
xchg
xchg
pop
jg
das
push
dec
fldenv
sbb
mov
inc
or
nop
loope
cmc
jp
push
xor
mov
enter
or
lods
insl
jp
movsb
idivb
leave
adc
icebp
pushf
jns
in
es
sahf
rclb
je
les
imul
adc
mov
pop
jle
push
or
pushw
pop
mov
push
imul
aad
mov
jbe,pn
popa
lds
dec
into
mul
add
inc
or
xchg
or
std
out
push
outsb
outsl
shlb
fsubl
pop
xor
rol
and
mov
jle
and
pop
push
pop
mov
imul
dec
les
inc
repz
imulb
mov
inc
mov
xchg
in
cwtl
in
mov
mov
dec
jmp
in
xchg
jbe
or
sbb
sub
cli
cmp
mov
and
arpl
jge
roll
mov
xchg
cli
scas
incb
add
dec
leave
mov
mov
lret
js
std
movb
les
insl
inc
jbe
std
cmp
and
sub
inc
dec
shr
pop
std
sub
scas
cld
add
out
and
jbe
arpl
fbld
inc
into
mov
xor
xor
xchg
dec
out
add
test
in
xor
and
jmp
out
std
ret
dec
sbb
pop
inc
dec
fisubs
sarl
shl
add
sbb
xchg
ljmp
lods
addr16
lds
ret
mov
sidtl
push
cwtl
in
jmp
jno
xor
mov
stc
jne
loopne
jae
test
inc
mov
mov
xor
repnz
cmp
lods
in
divl
ds
adc
ja
inc
pop
fnstcw
sub
aad
daa
push
fsubl
jo
popa
out
jge
mov
add
fwait
cwtl
cmp
mov
insl
cmpsl
int3
stos
jnp
rcr
je
pop
mov
mov
inc
cld
push
dec
mov
push
or
in
xlat
mov
lret
xor
lea
in
jae
mov
mov
cltd
mov
add
inc
test
repnz
sti
addr16
inc
adc
or
and
mov
addr16
xlat
outsl
xlat
out
orb
jmp
imul
loop
stos
jg
loopne
jle
bound
aad
mov
aas
imul
dec
in
pop
or
adc
lret
xchg
push
aaa
mov
test
push
and
dec
jnp
xor
xor
decl
cmp
pop
push
pushf
and
adc
int3
mov
les
mov
lahf
dec
xchg
lods
xchg
dec
jns
das
cmp
lock
js
int3
xchg
cs
cs
mov
xor
jg
sub
push
int
and
adc
dec
jg
mov
mov
sub
stos
pop
xchg
loop
sbb
ret
push
mov
add
sti
into
dec
aaa
add
inc
stc
jg
or
and
pop
cli
fs
xor
xlat
mov
mov
xlat
daa
das
inc
insl
leave
mov
pop
inc
dec
dec
jb
lcall
sub
sbb
jo
shrb
in
xor
mov
jg
push
push
lock
cmp
rolb
inc
loop
pop
imul
jp
and
inc
inc
in
sarb
and
not
lock
lods
cmpsb
mov
repz
and
push
outsl
add
faddl
sbb
inc
or
test
js
nop
rol
push
sub
add
push
icebp
mov
xor
enter
dec
push
std
push
pop
movsl
jecxz
repnz
push
rcrb
mov
enter
ss
push
inc
popa
cmp
aaa
in
sbb
jl
xor
xchg
cmp
mov
cli
ret
mov
jae
test
sti
jmp
mov
cmpb
jno
xor
pop
hlt
int3
daa
push
fadd
and
push
sbb
fwait
movsl
mov
xchg
sub
dec
das
pushf
daa
outsl
lea
push
fidivrl
sub
test
jge
sub
add
pop
push
aas
mov
xchg
inc
lret
cmp
xor
ret
mov
mov
fdivrp
shll
fsubs
inc
fldt
lock
cwtl
movsb
push
sub
dec
loopne
push
pop
clc
out
push
xchg
movsl
pop
insl
xchg
push
out
in
idivl
sub
mov
out
mov
cmp
and
dec
push
xlat
or
xlat
sbb
pusha
icebp
cmpsb
lods
test
call
enter
sub
and
les
shrb
cwtl
dec
push
iret
daa
sahf
inc
loopne
je
push
cwtl
popa
outsl
cld
cmc
shll
dec
loop
mov
fmull
jecxz
addl
push
stc
rcl
ja
and
cmp
jl
adc
insl
cmp
outsb
scas
rcrl
add
or
fwait
jno
pop
mov
test
inc
jmp
ss
add
and
mov
and
lret
es
add
test
lret
ljmp
dec
cmp
mov
pop
lcall
adc
out
ret
arpl
sbb
xchg
mov
test
stc
out
mov
fimull
sbb
pop
into
lea
das
and
mov
lret
mov
and
jle
jg
xor
outsl
in
jge
popf
jno
stos
in
jne
test
and
and
gs
mov
pop
out
push
lods
ss
or
ja
repnz
std
loopne
xchg
mov
insl
rclb
add
sarb
jecxz
sbb
pop
pop
je
in
pop
push
iret
push
jecxz
mov
add
fcomps
xchg
mov
or
lea
jl
mov
fadds
loopne
loop
mov
popf
sbb
and
out
jnp
inc
rcpps
jg
jge
out
adc
rolb
push
fucomip
mov
test
and
sbb
jle
xor
dec
stc
xchg
ret
leave
pop
ret
add
mov
and
hlt
mov
lods
std
call
xchg
pushf
add
clc
cli
popf
repz
inc
es
mov
mov
inc
cltd
test
and
or
test
mov
iret
jns
mov
jl
inc
jmp
mov
iret
out
sub
lahf
jge
cmpsl
js
mov
mov
xor
add
cmp
sbb
dec
or
and
jle
sub
nop
movsb
sbb
lea
out
js
outsb
mov
cli
add
inc
cmpsl
pop
test
ljmp
popf
adc
adc
pop
jae
cmp
lods
lea
and
add
cmp
adc
in
pop
aam
add
in
mov
push
cwtl
mov
and
sti
or
jl
mov
xchg
popf
lock
mov
inc
add
fmull
daa
mov
ret
mov
sub
mov
test
stos
add
jb
cwtl
inc
stos
cmp
hlt
aaa
test
fisubrs
lret
test
or
movsb
lods
or
movsl
sub
lret
cwtl
or
fidivrl
push
cmpsb
adc
test
dec
mov
dec
ret
lods
mov
xor
jmp
mov
scas
push
pop
xor
das
mov
mov
es
cld
fwait
movsb
sbb
xchg
and
xor
push
test
rorl
ror
rol
fistpll
fdiv
pop
mov
inc
add
aaa
int3
pop
cld
cmpsl
addb
xor
inc
and
leave
pop
push
or
aam
mov
sbb
mov
mov
int3
push
adc
subb
xor
mov
mov
icebp
in
or
aad
sub
mov
aas
mov
sbb
push
xchg
popa
lods
ja
popf
cmp
cli
rolb
lret
mov
sub
lret
lret
movsl
pop
movsb
pushf
xor
test
adc
and
arpl
out
pushf
repz
jge
aam
mov
mov
rorb
popf
dec
inc
push
cmpsl
out
sub
mov
lret
or
leave
mov
je
js
mov
add
adcb
fbstp
arpl
cmp
nop
ret
mov
sbb
xchg
push
inc
pusha
dec
das
inc
dec
xchg
mov
inc
mov
mov
addr16
in
mov
add
mov
in
pop
sbb
rcr
sub
aam
add
xor
inc
dec
aaa
cmp
subl
movb
mov
repnz
in
test
sub
and
lods
into
lahf
in
or
sbb
outsb
push
ret
leave
push
pop
pushf
aad
xchg
jo
mov
mov
mov
lahf
mov
mov
lret
es
inc
int
wbinvd
ds
outsl
aas
mov
jno
mov
dec
frstor
flds
pop
adc
xchg
mov
cmp
push
push
mov
pop
js
outsl
inc
cs
and
pop
cmp
insb
sbb
test
das
inc
test
mov
push
mov
scas
popf
fdivrl
ret
adc
aad
repnz
fldl
in
popf
jns
and
insl
cmp
fdivs
arpl
push
mov
daa
cmpsl
xchg
aam
fs
fld
push
in
loopne
js
mov
lock
inc
inc
dec
push
scas
fstps
data16
adc
xchg
jl
jne
aaa
xchg
adc
sub
add
jl
push
mov
push
mov
mov
jl
lcall
jmp
sub
or
xlat
lds
dec
sti
shr
ret
or
push
or
or
add
xor
rdpmc
sti
repz
sub
mov
ss
rorb
xchg
adc
adc
ljmp
xor
dec
fs
aam
lods
and
adc
or
ss
inc
aas
adc
fdivrl
fdivrl
aaa
dec
xchg
lret
dec
out
cmp
ljmp
adc
pop
xor
or
dec
cltd
imul
stos
test
push
imul
cs
test
enter
in
invd
add
jbe
insl
popa
jae
mov
and
out
push
mov
dec
fnsave
xchg
mov
or
push
sbb
in
rcll
fcompl
mov
insb
mov
test
aas
sbbb
inc
jae
mov
ja
aas
mov
ljmp
outsb
fwait
outsb
xor
mov
add
sbb
lcall
mov
jne
xor
lret
scas
jecxz
push
add
scas
mov
shrb
nop
scas
and
leave
mov
shl
xchg
cmpsl
sti
lret
xor
outsl
out
sbb
data16
add
push
lret
xor
dec
sbb
cmp
pop
mov
sbb
push
push
mov
out
mov
jbe
sbb
dec
jmp
xor
jo
mov
mov
cwtl
xor
jbe
and
and
int
icebp
popa
sbb
jecxz
fwait
outsb
mov
jg
push
xlat
js
pop
mov
rorb
mov
cs
jmp
lea
ljmp
dec
fwait
out
xchg
mov
push
pop
xchg
leave
cmp
stos
jp
and
add
std
mov
cs
sub
sbb
ret
cmp
ljmp
pop
xor
mov
push
dec
sbb
sub
mov
or
jl
mov
xorl
xchg
dec
loopne
in
xchg
sbb
fs
dec
arpl
cmpsb
lods
rorl
es
imul
push
mov
fwait
pop
inc
jecxz
jmp
mov
and
mov
jmp
loopne
insl
insb
iret
jge
nop
test
push
jns
push
adc
mov
loop
sahf
mov
sub
loopne
sbb
push
sub
pop
stos
mov
push
pop
lcall
xor
pop
arpl
and
jle
scas
adc
int
fistpl
fadds
xchg
hlt
cmc
inc
push
xchg
dec
fidivrl
and
shl
je
in
jp
iret
dec
push
aam
ret
fsubrl
or
sbb
aas
mov
or
lods
xor
scas
cli
fst
rcrb
pushl
scas
fildl
clc
rorl
ljmp
rcl
cmp
mov
inc
lahf
shr
idiv
or
xchg
push
xchg
xor
inc
sub
mull
or
adc
lock
aas
int3
setg
loopne
and
mov
aas
repz
push
fidivrs
dec
dec
lods
inc
sahf
xchg
loope
movsb
inc
dec
cmp
push
xor
in
xchg
lcall
popf
cwtl
fnstenv
cmc
sahf
mov
fwait
cmp
inc
int3
cs
jb
dec
dec
into
scas
add
jl
push
push
add
mov
add
jp
scas
fimull
cmp
sub
fwait
jecxz
xlat
in
or
sbb
add
es
iret
lock
jne
mov
das
mov
xchg
cs
and
pop
bnd
xchg
dec
mov
jmp
mov
idivb
and
push
call
data16
sbb
xlat
jb
imul
dec
xchg
push
sub
mov
mov
icebp
inc
mov
jmp
mov
fsts
fiadds
lahf
popf
add
push
ret
cmp
push
cs
sbb
call
test
hlt
cltd
adc
std
unpckhps
push
pop
sbb
jg
mov
lods
add
mov
ss
scas
xchg
xchg
sti
scas
jae
jb
jl
sarl
pop
push
mov
popf
xchg
sub
cltd
adc
idivl
xor
shrb
adc
rolb
jg
nop
out
hlt
or
xchg
add
xchg
test
ja
add
hlt
sti
push
or
pop
pop
lahf
jbe
sbb
ret
xor
mov
mov
pop
test
out
leave
add
ljmp
dec
and
push
sub
test
imul
xchg
incb
fisttpll
mov
cwtl
push
mov
pop
mov
mov
xchg
outsl
scas
push
lcall
mov
leave
mov
xchg
mov
cmc
stos
jmp
call
je
std
loope
fists
xchg
lret
inc
shlb
dec
cmp
sbb
jnp
add
shl
mov
xchg
jge
inc
push
jbe
lahf
aad
movl
sbb
xor
addr16
fcomps
test
pop
dec
sub
jno
jnp
jne
pop
push
dec
mov
test
mov
int
jge
sub
adcl
out
repnz
or
xor
mov
bndstx
jge
mov
dec
sbb
imul
cs
sbb
dec
movsb
popa
in
data16
das
mov
sub
ret
push
ds
je
dec
loopne
adc
mov
mov
xchg
cli
cwtl
jmp
addb
inc
or
push
pushl
mov
pusha
jge
xor
cmc
pop
sub
sti
dec
testb
ret
add
and
js
adc
inc
pop
stc
or
jne
or
lret
lret
inc
nop
into
movsl
je
outsb
dec
mov
pushf
inc
jne
nop
mov
stc
xor
pop
fsubrs
add
lea
cmp
mov
or
add
push
roll
insb
js
test
test
data16
push
adc
pop
and
cld
mov
jne
mov
andl
nop
or
mov
shrl
mov
in
mov
movsl
xchg
fwait
jnp
lock
stos
nop
and
push
dec
pop
add
shl
call
mov
addl
es
aam
jb
push
lret
sbb
rorl
mov
rorl
repnz
sti
sub
adc
into
aam
cmp
mulb
add
mov
adc
test
dec
and
call
or
adc
xor
adc
pushf
add
fxch
sbb
jmp
sub
pop
mov
movsb
imul
jl
sbb
mov
dec
lcall
push
lods
cmc
add
sarl
lahf
ljmp
rcll
repz
jne
repnz
xor
inc
clc
sbb
xor
ds
mov
incb
mov
imul
lahf
push
mov
shrb
add
dec
pop
mov
cld
sub
lret
sbb
inc
jns
adc
add
or
fidivrl
mov
cmc
dec
call
xchg
mov
adc
je
dec
movsb
insb
gs
mov
or
sbb
sbb
sahf
stos
mov
jge
sbb
call
dec
fiadds
adc
or
pop
lock
ret
or
cmp
add
jo
xchg
hlt
adcb
adc
jns
adc
xlat
mov
sbb
cmp
adc
clc
pushf
xchg
hlt
push
or
and
jl
lret
test
fsubr
shlb
adc
jmp
testl
mov
xchg
fstpl
xchg
cli
icebp
cmc
rolb
xchg
push
pop
mov
movl
sbb
sub
cmp
mov
js
jb
imull
mov
shlb
or
mov
sub
mov
cmp
pop
xor
rcrb
dec
xchg
decb
int
aad
mov
xor
les
jmp
mov
dec
mov
fs
cmp
jp
mov
jmp
ret
mov
cmp
shlb
push
mov
mov
popa
lods
and
sysret
xchg
sub
dec
sbb
push
cs
xorl
xchg
adc
icebp
push
jmp
sub
shlb
sbb
imul
adc
jl
cmp
sbb
rcr
cmpsb
nop
mov
mov
data16
stos
mov
lcall
cld
xchg
rolb
leave
in
int3
pop
push
jae
cmp
repz
push
loopne
shr
inc
add
shll
jno
outsl
push
aas
sbb
xor
xchg
add
in
sub
inc
jecxz
add
out
jecxz
js
push
lret
stos
dec
pusha
imul
cli
mov
sbb
add
outsb
cmp
sub
xor
xor
rorl
push
push
scas
xor
lret
xchg
mov
std
mov
ret
xchg
pushf
aad
xor
aad
fists
mov
dec
xchg
inc
dec
and
sti
mov
insb
mov
mov
shll
call
iret
cmc
ja
mov
or
inc
xchg
ficompl
xor
insb
jno
mov
stos
lret
cmp
out
adc
pop
pop
sub
js
push
cld
out
dec
inc
adc
arpl
ljmp
xchg
jbe
mov
dec
ss
or
jb
inc
cmpsl
mov
ds
popa
in
dec
pop
jnp
gs
popf
pop
inc
add
in
test
lods
je
mov
xchg
mov
mov
shrb
add
idivb
xorb
cmc
xor
stos
mov
add
imul
mov
andl
scas
inc
jne
mov
and
jge
loop
push
xchg
stc
mov
int
xchg
in
rorl
rcrl
pop
inc
or
test
loope
cmpsb
push
push
loope
cld
ljmp
jecxz
sbb
mov
mov
outsb
sarb
mov
jp
popaw
iret
inc
lods
ret
xchg
inc
insb
cmc
test
adc
imul
dec
mov
dec
mov
dec
mov
fimull
in
sub
xchg
lods
test
clc
dec
fisttpll
xchg
adc
add
movsl
cmp
nop
rorl
mov
aaa
or
jp
loope
stos
test
sub
fidivrl
lods
bound
stos
and
push
mov
sbb
pop
and
push
adc
xor
adc
lea
inc
repnz
mov
inc
mov
mov
mov
push
lods
fwait
cmovge
cmp
fistpll
add
cmp
inc
setne
and
jl
jnp
dec
loop
popa
inc
mov
lods
mov
fsubr
iret
xor
cmp
mov
add
xor
sbb
mov
mov
push
xchg
push
test
mov
lods
sub
pop
jae
arpl
push
xor
sub
jnp
sbb
jp
test
cmpsl
nop
insb
lea
int
mov
cmp
arpl
rclb
sub
ficomps
jae
jle
test
scas
mov
pop
xor
sub
das
cld
aam
orl
lret
mov
dec
adc
jecxz
stc
inc
cli
movsb
aaa
jecxz
sahf
or
movsl
loop
push
imul
pop
push
xchg
leave
adc
sub
mov
and
mov
das
pop
or
addb
inc
leave
cmpsb
sbb
add
add
outsl
sub
js
pop
lret
dec
push
pop
mov
data16
ret
shll
cs
in
mov
adc
jge
jmp
or
pop
outsb
shlb
sti
push
ljmp
lock
adc
push
add
jp
cmp
sarl
sub
xor
mov
test
call
jl
pop
les
aad
daa
pusha
push
cmp
add
pop
incb
fidivl
adc
lods
ds
mov
popf
imul
mov
mov
adcb
dec
imul
gs
mov
leave
adc
rol
sbb
and
adc
and
jno
cmp
cmp
mov
pop
lahf
inc
lcall
sahf
jge
fwait
lock
les
xchg
fcoml
insl
nop
das
xor
add
pusha
dec
sub
cld
dec
ficomps
adc
mov
push
addb
add
mov
shlb
std
xor
mov
jle
scas
dec
dec
xchg
sbb
mov
inc
xchg
dec
or
popa
aas
jle
in
ss
jge
mov
jmp
dec
repnz
shr
add
and
ljmp
sarb
xchg
movsl
fdivr
pop
lea
js
dec
or
pop
loope
insb
adc
loop
stc
imul
dec
and
pop
rcl
add
outsl
mov
cmc
movl
xor
in
mov
pop
mov
inc
fcom
push
jl
jns
cmpsl
cltd
inc
lods
xlat
in
das
xor
xlat
fistpll
outsl
mov
cld
add
mov
jl
dec
scas
cli
lahf
popa
aad
imul
or
mov
pop
xchg
push
xchg
loopne
xchg
ss
sahf
sbb
fmul
int3
mov
imul
icebp
mov
jnp
inc
xor
jae
mov
int3
test
jno
ljmp
clc
cmpsl
lock
int3
xchg
inc
fwait
push
sbb
aaa
push
mov
sub
sub
out
mov
ret
or
js
arpl
inc
int
push
cmc
push
in
movsl
hlt
adc
rolb
adc
sahf
lcall
add
inc
xor
aas
ljmp
adc
inc
repnz
icebp
mov
or
fidivrl
jp
sub
inc
ret
mov
fdivs
add
lods
cmp
ds
push
lret
xor
xor
lcall
lret
lds
ja
icebp
push
push
push
test
cmp
cltd
pop
movsb
in
fnsave
negb
xor
push
mov
fiadds
xor
out
movsb
xchg
stc
sbb
stc
dec
xlat
lock
add
mov
mov
lods
fcmovnu
clc
push
pushf
fdivr
call
sub
adc
icebp
outsl
gs
mov
outsb
sbb
pop
call
xlat
sub
ljmp
cltd
fsubrl
jo
cmp
loop
in
cli
push
pop
inc
mov
adc
aad
jle
xor
jnp
sub
stc
mov
and
shlb
sbb
jmp
sub
jg
insb
jbe,pn
inc
pop
and
dec
sar
sub
iret
xor
add
mov
movsb
movsb
test
roll
xor
aas
or
decl
cmp
jecxz
insb
lds
sub
dec
push
sbb
jmp
or
stos
dec
jmp
jle
xchg
inc
sbb
sub
mov
aaa
imul
ret
imul
je
insb
inc
push
xchg
or
add
cmp
mov
or
inc
xchg
into
inc
xor
xchg
repz
lcall
nop
ja
inc
mov
add
xor
xchg
shll
enter
pop
pop
js
xor
aad
lea
shrb
pop
xchg
lock
sbbb
dec
mov
push
and
movsb
xchg
imul
xchg
lods
nop
cmpsl
mov
pop
push
jbe
stos
and
xchg
aam
adc
cltd
enter
dec
ret
pop
and
test
leave
lods
mov
mov
jbe
adc
out
js
fcmovu
pusha
jnp
nop
or
out
mov
push
shll
mov
aam
in
or
cs
or
ret
pop
cmp
loope
xchg
mov
or
fisubrl
cmp
ds
push
int
in
inc
hlt
push
cltd
aas
xorb
jle
maskmovq
imull
insl
sbb
mov
pop
sbbl
jne
or
xor
mov
xchg
pop
movsl
les
pop
imul
test
jnp
das
sub
mov
sub
mov
pop
jnp
mov
jnp
mov
xorb
negb
mov
inc
and
xchg
outsb
repz
sbb
jbe
sub
gs
outsb
inc
mov
movsl
popa
mov
jle
fdivr
push
popl
scas
mov
loope
xlat
inc
and
jo
adc
mov
lds
cmp
xchg
add
push
push
aad
popf
out
ljmp
adc
and
cmp
inc
cmp
ds
jg
clc
dec
fmul
stos
push
mov
mov
mov
mov
stc
pop
stos
lods
push
std
pop
jns
test
ss
pop
aad
push
or
xor
mulb
stos
cmp
sti
mov
in
jge
jecxz
mov
iret
ja
xor
mov
loope
adc
insb
or
cmpsl
push
push
mov
dec
inc
aas
inc
repz
mov
inc
mov
inc
hlt
mov
push
pop
push
and
inc
ficomps
mov
clc
out
ret
jno
int3
clc
scas
mov
sub
js
adc
jecxz
push
inc
loop
mov
push
xor
mov
lods
stc
push
and
push
aas
mov
adc
sub
lods
push
stos
mov
xor
cmpsb
or
xor
xchg
das
mov
and
cmp
sbb
loop
mov
mov
sti
loopne
cmpsl
adc
aam
fstps
stos
mov
cli
out
js
fs
jl
popa
aaa
sahf
or
in
cmp
push
fildl
hlt
nop
or
mov
or
fnsave
push
loopne
pop
xchg
repz
inc
outsb
push
add
mov
imul
in
cmpsb
lea
mov
int
add
inc
mov
ficoms
or
scas
inc
adc
test
pop
pop
je
mov
cmc
ja
add
sub
test
dec
sbb
pop
mov
mov
mov
xchg
into
enter
fnsave
mov
dec
nop
ret
lret
jne
jo
shll
push
jle
adc
aam
popf
sub
jbe
mov
ret
popa
pushf
cmpsl
fiaddl
mov
mov
cltd
mov
pop
aaa
test
inc
popf
aad
add
jl
and
xchg
mov
jmp
bound
push
loopne
pop
stos
pushf
sbb
cmp
mov
mov
push
je
notb
cmpsl
mov
sbb
push
mull
popa
jle
mov
adc
adc
xor
arpl
add
arpl
nop
fistpll
hlt
es
mov
hlt
push
cmp
sbb
dec
dec
iret
pop
jo
stc
call
mov
decl
or
jo
iret
ja
flds
fcmovb
mov
mov
and
mov
sbb
ret
es
ljmp
ja
fs
adc
pop
jle
push
dec
jp
dec
loop
jp
mov
aas
fnstcw
mov
loop
sbb
jns
add
fwait
cmc
mov
outsb
sub
xor
jns
subb
push
pop
loope
sub
orb
or
xor
xchg
in
dec
xor
cmp
cmp
out
pop
movsb
fcom
and
add
jmp
ljmp
scas
adc
mov
stc
and
fisubrl
mov
mov
nop
icebp
xor
adc
inc
leave
adc
sub
daa
sub
mov
subl
adc
rclb
ss
xor
push
sbb
jg
mov
mov
mov
test
shll
sbb
xchg
insl
cmc
xchg
es
in
mov
cmc
or
imulb
cmpsl
add
das
test
jle
mov
jmp
test
fnstsw
pop
fs
sub
or
cmp
mov
dec
icebp
cmpsw
mov
mov
icebp
jecxz
mov
and
out
jp
mov
arpl
sahf
out
insb
ficoms
pop
cs
dec
cmp
cmp
int3
mov
pop
and
cwtl
cmp
fcom
cmpb
daa
enter
call
movsb
inc
lea
pop
jnp
rcrb
negl
mov
fisubrs
jmp
cmp
sbb
addl
les
nop
mov
mov
mov
push
add
and
and
jge
mov
ficompl
cmp
jae
stc
cld
jge
aad
cmp
mov
jbe
push
shrb
xor
les
xchg
or
and
mov
addr16
add
loop
rcrl
sub
adc
jmp
jmp
xchg
rolb
addb
insb
add
xchg
subl
cmp
rcrl
push
lret
dec
sbb
iret
mov
js
push
dec
int
popa
dec
in
push
subb
imul
xadd
mov
imull
inc
sub
insl
and
lahf
adc
pop
rol
inc
or
mov
xor
arpl
mov
je
aam
shl
cmp
shrb
popa
or
inc
repz
ljmp
push
imul
test
sbb
out
aas
insb
jbe
cmp
xchg
mov
rorl
test
inc
pushf
add
and
popf
sbb
clc
jb
and
clc
ss
std
and
push
iret
fldenv
sub
pop
sub
pop
fsubrs
loop
inc
arpl
scas
hlt
xlat
orb
in
adc
jle
inc
sub
sub
rclb
xchg
fistpl
imulb
cld
outsb
int3
and
jne
push
outsl
xchg
xor
mov
jne
clc
popa
mov
in
leave
clc
adc
nop
jp
mov
pop
sub
xchg
mov
push
jo
stos
std
jge
jae
xchg
xor
out
minps
jl
scas
mov
fcomps
mov
adc
mov
jnp
enter
testl
je
test
dec
dec
mov
pop
mov
add
je
mov
jle
jle
jl
fisubl
inc
fiadds
fwait
or
cmp
dec
loop
sbb
xchg
rep
push
dec
clc
daa
lahf
mov
aaa
xchg
pop
in
arpl
rclb
pushl
nop
sub
cmp
dec
bound
or
or
xor
pop
push
ss
fst
lock
rorl
imull
das
pusha
loopne
imul
sbb
push
ss
push
jmp
pop
jae
xchg
testl
and
mov
insl
jg
mov
push
inc
lea
xchg
adc
fsubl
dec
inc
shr
and
sbb
or
call
sbb
push
sbb
and
jecxz
das
jp
jnp
and
push
out
out
or
push
lds
mov
stc
aas
cmp
cwtl
fidivs
and
add
mov
dec
aaa
xor
scas
sub
repz
clc
sbb
sbb
stos
mov
das
std
sbb
jae
and
mov
jno
dec
repz
pusha
ret
mov
jno
loopne
dec
rcrl
fisttpll
fstpl
jp
inc
shll
xorl
lods
jl
popl
pop
les
cwtl
mov
mov
mov
xchg
insb
movsl
mov
sub
push
mov
imul
shlb
pop
stos
clc
iret
push
scas
inc
mov
cmp
pop
xchg
mov
std
inc
mov
dec
push
sub
popf
std
inc
ja
mov
hlt
sub
sbb
xchg
mov
fsubs
xchg
outsl
xor
lods
push
sbb
add
aam
scas
mov
inc
aas
adc
jmp
ja
inc
sub
xchg
lahf
xchg
setae
adc
sbb
aad
jmp
adc
lcall
add
outsb
cmc
loop
and
and
push
lods
add
test
or
mov
shll
fistps
stc
fwait
inc
add
aaa
push
jns
hlt
loop
aad
test
int3
jo
js
lods
outsl
pop
loopne
dec
mov
sbb
loope
xor
mov
cmp
add
scas
push
or
pop
pop
dec
test
or
inc
inc
jecxz
scas
mov
inc
push
inc
xchg
add
clc
push
ljmp
adcb
adc
dec
popa
je
nop
inc
sbb
mov
cltd
in
mov
push
push
inc
push
xor
call
jecxz
cmp
inc
ja
jg
lahf
and
insl
jmp
xchg
mov
dec
inc
sub
stos
lcall
inc
test
outsl
add
out
test
test
fs
ds
or
mov
xchg
dec
pushf
imul
jbe
push
cmc
bound
xchg
out
jno
adc
enter
nop
xchg
jns
mov
stos
cmpsl
mov
pop
add
pop
sbb
sbb
in
pop
data16
pusha
inc
xchg
notb
into
outsl
stos
jmp
and
jae
adc
sbb
imul
loopne
xlat
pop
shll
inc
in
pop
mov
xchg
jle
lret
orl
adc
lahf
aam
mov
cld
inc
ret
push
pop
mov
nop
je
dec
push
cmc
jp
mov
cmpsb
mov
jb
jge
push
xorl
push
icebp
outsb
hlt
sub
fs
daa
es
pop
and
pop
push
outsl
pop
mov
add
aas
pop
cmp
sbb
inc
insb
testl
sar
sub
jmp
jge
addr16
rcrb
sub
and
nop
repz
mov
sbb
lock
js
rcrb
pop
mov
jno
sub
aas
daa
leave
stos
or
shr
mov
int
jne
xor
repnz
and
cmc
into
pop
scas
pop
or
mov
push
or
lret
pop
mov
jns
push
mov
ds
mov
out
lret
jne
fidivl
inc
aaa
test
stos
mov
pop
inc
xor
sahf
adc
out
sbb
popf
mov
push
push
jecxz
mov
xor
push
sti
mov
imul
call
mov
pusha
push
aas
push
mov
mov
dec
xlat
pop
pushf
movsb
and
fstpt
leave
je
iret
xlat
inc
adc
dec
jo
fwait
cmpsl
and
mov
ja
jnp
push
sarl
xor
lahf
orb
sub
insl
pop
mov
fldl
sbb
and
shll
mov
push
push
xor
fidivl
pushf
inc
loope
add
dec
addb
or
adc
jl
stos
clc
inc
dec
movsb
dec
adc
pop
jns
push
cltd
xor
xchg
dec
dec
pop
xor
adc
pushf
jmp
jmp
call
sarb
into
pop
insb
sti
adc
xor
pop
mov
push
cli
jbe
lcall
mov
stos
add
inc
scas
or
int
subl
pop
push
in
daa
icebp
and
pop
shld
cwtl
pop
jmp
pushf
adc
mov
dec
loope
jg
in
dec
pop
push
ficoml
cmp
rclb
adcb
jmp
ja
ljmp
aam
shr
mov
lahf
fwait
mov
es
mov
cmp
push
fnstenv
or
mov
aam
leave
test
sti
xor
pusha
cltd
shrb
push
and
int3
xchg
popf
inc
loope
mov
mov
pushf
cmp
mov
outsl
clc
mov
leave
scas
push
inc
rcll
loop
mov
cmp
idivb
cs
push
jae
lods
test
sahf
xchg
pop
sbb
scas
cld
js
lcall
and
daa
mov
pushf
and
push
push
lcall
repnz
scas
stc
mov
ja
xor
movsl
jb
imul
push
mov
ficoml
ljmp
dec
push
dec
ja
nop
jp
call
cmp
or
cmp
popf
pop
pushf
int3
adc
arpl
sub
mov
sbb
cmpsb
lret
dec
das
scas
repz
mov
mov
loopne
xor
jb
fdivrl
inc
adc
jns
jp
out
dec
xor
shlb
nop
mov
js
sub
cmp
xlat
scas
ljmp
decl
xor
jnp
aad
xor
adcb
cmp
xor
mov
daa
xchg
ljmp
adc
and
cmpsl
xor
cmp
daa
ds
hlt
in
scas
dec
nop
xchg
xchg
mov
sbb
add
cs
test
adc
pop
mov
sbb
iret
lret
adc
stc
mov
jnp
add
adc
ficomps
cli
xor
lock
out
rcr
push
pop
int
mov
fbld
mov
scas
xor
sbb
lret
sahf
js
int
ja
loop
inc
xchg
in
stos
fsts
mov
mov
sub
mov
insl
or
mov
mov
fcoms
out
movsl
and
aas
lods
fwait
dec
sbb
push
jns
rorb
dec
mov
pusha
sti
stc
lods
or
push
pop
loop
mov
jo
stc
outsb
clc
mov
cmp
rorb
dec
cltd
addr16
leave
pop
aam
mov
pop
mov
ljmp
push
ret
push
cmc
or
push
pop
mov
mov
pop
movsl
push
xor
or
add
arpl
test
addl
push
adc
or
inc
pop
ds
inc
pop
cmc
andb
cld
xor
in
outsl
lds
inc
cmpsb
movsl
test
jnp
scas
cmc
into
call
pop
mov
enter
pop
jne
sub
push
bound
mov
subb
cmp
addr16
mov
and
sahf
jno
dec
inc
aaa
mov
cmc
sbb
fldl
xchg
dec
nop
mov
pop
xlat
lods
mov
pop
jp
mov
divl
pop
in
xor
mov
jo
or
mov
cwtl
pusha
loop
push
test
andl
add
xchg
leave
inc
add
lods
mov
xor
fwait
jns
pop
xor
jmp
push
aaa
pop
fldcw
xchg
cmp
in
lock
jmp
insl
jg
and
pop
pop
mov
jno
jns
ret
cmpsb
les
inc
daa
pop
mov
mov
add
fwait
xor
mov
cltd
dec
bound
mov
pop
andb
test
mov
pusha
mov
movsl
lahf
movsb
push
mov
jp
lret
gs
adc
xchg
fisttpll
call
aaa
ror
negb
mov
jno
and
mov
sbb
lds
inc
xor
pushf
fisubrs
sub
jb
loopne
inc
xchg
dec
out
ja
mov
or
add
mull
mov
adc
inc
out
fnstenv
xor
xor
add
jb
inc
pop
mov
aad
mov
mov
and
sbb
in
scas
arpl
lods
and
pop
push
stos
repz
push
pop
inc
cltd
xchg
es
fptan
add
outsl
gs
pushf
cmp
aam
pushl
cli
xlat
jle
shlb
pop
push
in
mov
mov
test
push
pop
leave
aaa
aaa
leave
xchg
std
mov
aaa
inc
sub
push
ret
shrl
stos
fwait
mov
mov
out
jae
incl
lcall
and
pop
rcll
xchg
mov
rorb
mov
jmp
ds
push
out
cwtl
push
adc
jae
sub
adc
sub
ret
into
mov
add
jo
inc
push
sti
movsb
or
inc
addr16
cwtl
into
out
jbe
mov
mov
stc
fstpl
mov
mov
data16
dec
out
push
mov
mov
das
popf
jmp
sbb
insl
push
dec
dec
gs
push
pop
lea
cmpsb
pop
lret
fists
js
mov
clc
popa
push
jb
xchg
xchg
roll
rclb
mov
pop
int3
or
imul
pop
pusha
incl
cli
inc
lahf
aas
inc
jl
pop
dec
outsl
stos
jg
mulb
jmp
mov
pop
cmp
int
jp
or
cli
push
mov
or
cltd
inc
cli
lret
adc
adc
and
xchg
out
leave
pop
movsl
push
pop
sbb
fdivrl
pop
popf
les
inc
mov
outsb
push
sub
icebp
lcall
and
and
iret
pop
cltd
xor
sub
outsl
loop
js
leave
adc
dec
jbe
pop
in
cwtl
iret
dec
and
int3
lea
rorl
inc
pop
rolb
aad
fldenv
aaa
cld
dec
repnz
xchg
sub
add
call
test
shlb
adc
adc
jns
mov
inc
xchg
lret
sbb
aaa
xchg
mov
sub
aam
or
sbb
pushw
dec
ret
mov
sub
dec
push
mov
push
mov
loopne
into
aam
or
cltd
cwtl
je
out
mov
jle
xchg
pop
arpl
pusha
xchg
mov
jle
mov
stos
in
insl
cmpsl
cmpsb
fisubrl
lret
scas
adc
xor
sbb
dec
inc
out
and
mov
aaa
into
daa
adc
mov
sub
jno
cmpsl
arpl
lret
pop
inc
inc
adc
pop
sbb
ret
jb
loop
pop
in
shrl
adc
pop
lcall
lcall
add
dec
fimull
mov
popf
mov
leave
mov
pusha
je
xchg
adc
repz
adc
adc
ljmp
in
call
movsb
lds
int3
inc
jmp
aam
cmp
adc
xlat
lock
clc
das
insb
clc
pushf
pop
in
dec
in
ljmp
bound
ja
add
ret
mov
inc
xchg
adc
fincstp
xorl
adc
pop
mov
pop
push
fldenv
lods
out
pop
add
pusha
int
jecxz
clc
cmpsb
outsb
xor
mov
mov
push
js
dec
out
shl
mov
cmp
mov
cld
mov
inc
xchg
nop
sub
jp
xor
in
add
test
jle
mov
fsubrl
dec
cmpsl
inc
scas
xchg
js
repz
jno
and
dec
sti
mov
out
dec
lds
mov
or
int
lock
push
repz
cltd
test
fdivs
adc
popf
adc
sbb
push
adcb
lret
outsb
pop
mov
lds
cld
dec
cli
lret
jl
iret
pop
hlt
xchg
mov
insl
mov
mov
aas
out
gs
adc
iret
les
mov
movsl
mov
mov
push
mov
cmc
mov
jae
dec
or
mov
subb
cmp
dec
stos
outsb
xor
inc
and
mov
push
mov
mov
sub
cmc
inc
push
ret
loop
sbb
push
xchg
fcoms
rcrl
call
jg
cmp
cli
imul
call
addl
mov
shrl
repz
js
mov
fisubs
lret
sub
outsl
xchg
jne
jb
sub
sbb
lock
adc
das
out
pop
mulb
loope
mov
test
std
adc
sub
fcmove
jnp
xchg
pushf
push
outsl
icebp
jo
in
add
xchg
cwtl
xchg
mov
pop
jecxz
cmp
xchg
arpl
rclb
sbb
pop
or
dec
aaa
adc
add
pushf
mov
lahf
or
lcall
lods
aad
mov
mov
ret
testb
or
inc
push
inc
cmp
and
push
mov
inc
fucom
arpl
xchg
shl
xchg
lahf
scas
inc
in
mov
faddp
icebp
push
stc
lock
out
scas
mov
les
mov
inc
xor
mov
imul
mov
push
bound
jp
xlat
or
mov
or
in
ja
mov
fxtract
cwtl
cwtl
mov
push
in
mov
repz
jo
xor
jl
mov
into
aaa
loopne
add
aad
sub
and
out
cmp
sub
dec
adcb
cmp
pop
loopne
mov
xlat
repnz
xor
and
mov
mov
movsb
mov
aaa
xor
lsl
mov
mov
mov
gs
bound
call
inc
test
leave
push
shrl
mov
xchg
push
add
adc
into
jbe
or
adc
dec
aaa
movl
aaa
cs
shlb
cltd
mov
inc
or
pusha
scas
rcrl
gs
popa
mov
xchg
shl
loop
and
in
stos
bound
pop
sub
mov
popf
mov
lock
jmp
and
jmp
icebp
lds
cmp
repnz
jle
cltd
fistl
das
shll
mov
aam
mov
jo
outsb
cmp
xchg
xchg
jge
jle
and
ljmp
mov
xchg
add
lods
xchg
mov
repz
loopne
iret
sti
sub
jns
lea
xor
jg
sub
iret
dec
jl
int
pop
bound
xchg
sub
add
mov
out
mov
mov
ret
lods
lea
xchg
test
cli
mov
xchg
cmpsl
mov
sub
insl
inc
in
in
sub
and
fistl
or
add
mov
test
sti
jbe
fmull
cmc
jp
decb
and
pop
mov
mov
loopne
stc
aad
mov
xchg
jp
out
std
xchg
cmp
enter
ss
push
or
xor
repz
xchg
ret
inc
mov
sti
push
cmc
fdivrl
add
mov
jp
sbb
jmp
cltd
nop
sub
dec
adc
out
rcl
pop
sbb
dec
push
aad
add
int
jmp
xor
jns
mov
in
rdtsc
test
nop
int3
test
aaa
xchg
fs
dec
sbb
or
xchg
fildll
aas
in
pop
push
sub
xchg
mov
mov
dec
cmpsl
outsb
cli
mov
mov
inc
xor
xor
xchg
dec
sbb
nop
dec
test
pushf
mov
jo
fnsave
pop
lock
movsb
ud1
daa
sbb
test
aad
push
lret
pop
enter
adc
and
das
cmp
push
sub
lock
mov
inc
ljmp
ja
movsb
cs
sbb
push
lock
filds
mov
dec
mov
lahf
fwait
scas
std
test
dec
inc
xchg
mov
jge
arpl
inc
lahf
jbe
jns
jne
test
dec
push
mov
ja
xlat
pop
test
imul
sbb
jle
popf
iret
sub
pop
jbe
std
mov
jl
lea
aaa
jl
and
jg
movsl
fdivs
pop
cmpsb
rolb
push
mov
shlb
mov
xor
inc
jb
xchg
add
xor
pusha
adc
scas
jns
sub
inc
jmp
sbb
fsubrl
mov
mov
mov
clc
pmuludq
sub
xor
rorl
add
xor
cmpsb
int
mov
jle
push
xor
adc
or
or
jmp
xor
inc
jnp
cmpsb
inc
movsb
fisubrs
fisttpll
xchg
dec
cld
xchg
ret
leave
or
adc
add
daa
push
sub
fldl
insb
or
fwait
mov
jmp
fmul
ret
pusha
add
xor
mov
bound
shlb
jl
mov
je
ljmp
push
int3
test
dec
ds
dec
xor
jo
lret
inc
mov
jno
pop
add
aam
push
mov
mov
cmp
clc
ja
adc
mov
aad
sub
xchg
stos
xchg
jmp
inc
dec
dec
jnp
sub
loope
mov
in
leave
pop
lods
lcall
ret
aad
into
mov
lret
jnp
test
stc
outsl
orl
mov
and
sub
cmc
sbb
dec
arpl
bound
and
add
inc
adc
dec
mov
adc
pushf
mov
repz
aas
aad
jg
push
or
aas
xchg
add
add
sub
fsubrp
jle
shrb
lahf
mov
xchg
cli
pop
inc
dec
cli
mov
push
dec
lds
add
dec
fucomip
ficomps
mov
push
aam
decb
dec
das
cmp
fmuls
push
rolb
mov
out
cmp
es
jns
or
push
pusha
dec
jecxz
cmc
cmpsb
inc
shlb
into
sbb
jo
mov
pop
data16
sbb
xor
movsl
loope
pop
add
push
xchg
and
mov
add
pop
outsb
out
jne
bound
add
adc
loop
push
push
pop
mov
pop
test
add
into
insl
or
ret
jmp
fiaddl
lret
repz
mov
lcall
cltd
fildll
lret
lds
inc
out
push
add
cwtl
popa
cmpxchg
add
push
xchg
stc
js
mov
xor
xor
loop
iret
mov
mov
push
xor
dec
xor
sbbl
cmpsb
pop
and
and
add
cltd
sub
ja
hlt
and
icebp
mov
es
jmp
pop
xchg
jnp
dec
xor
cltd
gs
add
std
xchg
pushf
jo
pop
inc
int3
loope
push
adc
inc
mov
lret
jl
jle
je
imul
dec
icebp
jns
pusha
data16
jns
out
cld
in
addr16
mov
stos
shll
ja
outsb
popl
mov
cld
into
sub
adc
fstpt
fiadds
movsl
das
cld
cwtl
and
push
in
or
xchg
insl
insb
xor
fidivl
mov
movsb
addb
jle
test
dec
pop
test
inc
jne
mov
dec
sub
fidivs
sub
outsl
xchg
mov
dec
mov
cmp
cmp
pop
adc
adc
push
pop
xor
sub
out
xor
insb
outsb
xor
pop
inc
adc
insb
mov
sub
inc
mov
jp
jno
lret
jno
ljmp
mov
ror
repz
inc
aam
in
fisubs
test
loope
das
les
stc
scas
push
sbb
mov
mov
ljmp
scas
pop
xchg
adcl
ficomps
cmp
mov
out
and
ret
xchg
fidivrs
pop
cmp
push
or
pop
addl
gs
pusha
push
pop
xor
xchg
loope
rcll
sbb
or
pop
push
or
and
lods
mov
pop
or
push
jle
je
incl
xor
imull
xor
sarl
adc
dec
mov
out
jp
pop
lcall
mov
ficompl
xor
dec
jl
jl
flds
insl
addr16
lds
insl
subl
xchg
shlb
mov
dec
adc
jb
sbb
xor
fldl
jecxz
lahf
jno
addr16
mov
fsubp
push
push
fs
mov
and
jae
mov
jmp
mov
shrl
mov
rcr
mov
rcr
sub
loop
pushw
adc
cwtl
cmp
jl
aaa
ucomiss
xchg
jae
adc
clc
xchg
mov
cs
dec
or
pop
out
jne
call
test
sub
lret
out
jecxz
cmp
dec
xchg
lods
cmp
rcll
insl
dec
scas
movsl
sub
cmp
xchg
stos
mov
dec
lock
pop
jnp
cmova
icebp
les
xchg
mov
iret
notb
iret
mov
clc
clc
and
sbb
xor
js
out
std
ret
rclb
adc
push
pop
daa
fsts
mov
and
cmp
dec
add
fld
xorb
lock
add
int3
jecxz
or
sub
daa
sbb
lahf
xor
xchg
icebp
sbb
sbb
repnz
lahf
adc
cmp
xor
xor
dec
mov
or
cmp
sub
mov
out
and
xchg
mov
test
sbb
fildll
out
pop
fbld
and
filds
movsb
sbb
in
add
fsubs
fdivl
jo
xchg
mov
jb
test
dec
ss
sti
push
dec
mov
xchg
js
inc
jmp
mov
cmpsb
sbb
addb
adcl
adc
lea
call
push
push
inc
xor
mov
lods
test
outsl
mov
aas
adc
pop
fstpl
and
cwtl
in
lahf
mov
or
xchg
pusha
or
movsl
jle
inc
push
inc
mov
aaa
push
add
ja
jbe
sub
xchg
int3
and
ds
test
pop
or
mov
int
dec
push
cmp
sbb
decb
inc
sub
pop
sti
sub
cld
aad
mov
test
or
push
jno
sbb
cmp
mov
jo
stos
icebp
sub
fsubs
pusha
scas
lods
call
imul
xchg
mov
cmp
shl
cli
inc
sahf
jnp
mov
js
out
cwtl
sbb
and
loop
scas
mov
repnz
mov
insl
mov
in
das
pop
lea
mov
cmp
imul
dec
jl
sarb
ljmp
mov
daa
add
hlt
jno
insl
mov
mov
push
cmpsb
shr
or
jg
jns
addr16
aaa
or
mov
xchg
lahf
fstpt
rolb
add
sub
push
mov
fsubrp
sub
add
arpl
inc
mov
loope
sbbl
out
repz
arpl
aas
jle
xor
mov
jnp
dec
rolb
sub
pushf
mov
add
cmp
mov
mov
mov
pop
das
pop
fmull
lds
jl
addr16
mov
cmp
inc
push
add
or
mov
mov
lods
ljmp
addr16
xchg
test
dec
jecxz
in
shl
and
in
mov
mov
xchg
outsb
push
popf
jg
xchg
into
cmp
jbe
lcall
push
aas
int
or
test
inc
pop
add
dec
dec
fsubs
dec
insb
push
sbb
rorb
shr
xabort
int3
add
jns
sbb
mov
dec
mov
pop
mov
mov
mov
pop
sarb
cs
pop
add
dec
jecxz
cmpsl
test
adc
mov
hlt
insb
jl
jbe
mov
shrl
rcrb
and
call
ret
cmp
scas
or
or
push
xchg
sub
ljmp
xor
or
sbb
inc
sbb
and
xorb
daa
insl
aam
or
lods
push
sub
aaa
add
fnsave
mov
pop
cmp
jnp
jl
in
cmp
lock
sti
xor
mov
inc
std
scas
cmpsb
popa
inc
cmp
xchg
leave
push
pop
mov
lods
xor
cmpl
mov
call
adcl
push
enter
pop
loopne
xor
sti
testb
stc
mov
and
jb
add
fmull
sahf
loope
addr16
push
jg
mov
loop
imul
xor
push
xchg
add
loopne
sub
imul
arpl
outsb
sub
or
mov
mov
and
dec
mov
iret
inc
int3
mov
sub
mov
mull
xchg
add
jne
std
gs
push
jae
hlt
adc
pop
pop
dec
divb
push
push
xor
and
icebp
inc
cmc
loop
in
sbb
negb
sbbl
imul
sub
jae
out
enter
jb
xchg
in
js
jb
jg
stc
arpl
jmp
mov
insb
sbbl
mov
insl
cs
cmp
repnz
pop
arpl
das
or
fnsave
mov
lods
inc
or
sahf
imul
adc
leave
pop
shll
xor
daa
in
jp
test
inc
sub
dec
test
xchg
dec
mov
add
mov
mov
test
pop
jg
nop
cmpsb
mov
sbb
test
jmp
repnz
cmp
andl
dec
mov
cmp
sbb
adc
lock
cmp
cli
or
add
xchg
loop
ss
mov
mov
pushf
dec
pop
mov
loop
decb
push
sar
and
in
xor
iret
xor
mov
popf
nop
adc
mov
lahf
inc
subl
and
dec
lret
enter
jns
xchg
sub
shrl
push
ficoms
out
popl
lods
cmc
and
lret
xchg
add
jmp
popf
jmp
xchg
adcl
cltd
mov
adc
test
rorb
mov
jp
and
push
pushf
mov
xchg
fs
pop
pop
pop
mov
dec
mov
push
sarb
sbbl
jns
jle
shrb
sub
mov
or
orl
stc
lods
pop
pop
xor
and
mov
pop
into
mov
fisubl
add
xor
decb
push
mov
push
sbb
adc
ret
pop
imul
or
or
inc
loope
mov
mov
lods
js
or
jmp
nop
lret
mov
leave
test
or
enter
outsl
movsl
daa
sti
dec
sahf
or
mov
adcb
ret
sub
repnz
inc
fdivrs
or
test
inc
pop
aas
aas
xor
int3
mov
fcomps
repz
insb
fadds
dec
shrb
mov
sub
jne
subb
push
pop
jg
and
test
or
pop
jmp
add
sbb
dec
or
xlat
mov
jmp
sarl
jo
xchg
ret
or
and
jne
movsb
jge
mov
jle
sbb
rorl
dec
sbbl
stc
or
ljmp
pop
mov
mov
cli
or
jae
adc
stos
loopne
jle
call
lds
add
or
adc
lret
in
jecxz
adc
pop
dec
aad
cmp
data16
mov
ljmp
push
push
sub
outsl
dec
add
je
mov
add
and
cmpl
push
dec
mov
fdivs
mov
dec
jge
and
call
clc
xor
dec
arpl
cld
add
addb
xchg
jge
xchg
mov
je
lods
arpl
loopne
pop
or
leave
out
push
and
push
or
inc
aaa
mov
mov
les
mov
mov
push
and
inc
push
cmp
add
aam
loop
and
xorl
mov
dec
sahf
and
and
lret
adc
int
rcl
dec
mov
push
mov
xor
dec
inc
xor
rclb
sbb
push
ret
cmpsl
sub
xlat
lahf
decb
in
xchg
mov
jb
mov
cs
scas
sbb
mov
dec
hlt
push
xchg
sub
insb
lcall
sbb
fbstp
push
cmp
jae
mov
ret
jb
cmp
pusha
and
and
ljmp
aam
cmp
sarl
sahf
cmp
add
push
mov
mov
pop
les
lea
scas
loope
loop
das
add
adc
arpl
out
in
mov
cmp
jge
negl
pop
cld
jo
pusha
iret
test
adc
mov
dec
ds
mov
lods
push
and
push
ja
jns
mov
mov
and
pop
test
fwait
lods
push
cmp
mov
out
pop
subl
push
stos
sbb
xchg
fsubrs
add
xchg
jns
cmpsb
mov
loop
pop
dec
ds
and
and
stos
cmp
mov
push
int3
mov
cmp
jmp
popa
orl
adc
loopne
stc
sub
sub
lock
scas
andb
mov
ret
sbb
pusha
push
in
movsl
push
cmp
push
mov
loop
sub
dec
cmp
sarb
stos
jae
lds
push
scas
mov
sub
loopne
lcall
push
insb
dec
in
or
mov
dec
mov
pushf
js
call
inc
insb
cs
imul
and
pop
xor
inc
mov
push
push
jmp
jecxz
mov
mov
cmp
dec
push
inc
push
jb
lock
jl
jno
out
jmp
mov
imul
sub
cltd
fistpl
push
add
stos
into
mov
adc
insb
fwait
movsb
test
and
test
or
enter
mov
mov
loop
testb
or
or
out
sub
and
pop
jle
or
xchg
cli
mov
add
mov
addr16
pop
xchg
jmp
add
cmp
adc
xchg
push
or
sbb
ds
int3
fadd
mov
stc
frstor
rcrb
aam
subl
shlb
outsl
jb
pop
enter
ljmp
mov
mov
mov
iret
fsubrl
dec
push
mov
push
lret
mov
sbb
pop
push
xlat
jp
movsl
mov
add
dec
sub
push
push
inc
add
fistl
in
faddl
mov
jmp
jg
sbb
loope
fiadds
stos
data16
mov
sbb
popa
jmp
dec
xchg
dec
movsb
mov
scas
inc
inc
sbb
push
sti
mov
test
fbstp
iret
in
mov
mov
jle
aad
xor
sub
ja
rorl
je
leave
test
sbb
test
inc
mov
out
aas
xor
roll
fadds
daa
inc
int
inc
xor
sbb
into
clc
popf
cltd
scas
subb
push
inc
mov
mov
sbb
pmaxsw
and
push
icebp
adc
xchg
lcall
fistpl
xchg
into
pop
xchg
push
decl
cmp
in
jecxz
sub
pop
ret
inc
xchg
mov
add
pop
insb
push
mov
cmpsb
pop
shlb
adc
insl
xor
cmp
es
js
inc
jecxz
mov
test
jbe
daa
mov
loopne,pt
sub
aam
cmp
ds
lods
inc
loopne
fstpl
inc
ret
add
stos
negb
mov
fadd
cwtl
jb
jl
je
ret
cmp
push
pop
jbe
adc
mov
jb,pt
outsb
and
cmpsb
sbb
dec
out
out
mov
cmp
pushf
and
adc
fmulp
pop
std
push
push
xor
fsubrl
fmul
repnz
sub
pop
cmc
add
jbe
shlb
add
insl
mov
repz
gs
sub
add
sub
stc
adc
jle
add
and
adc
roll
mul
and
cwtl
push
loopne
mov
pop
insl
fidivl
xchg
adc
cs
in
ja
mov
repnz
push
aad
enter
fnstsw
jne
fnstcw
in
or
lret
mov
mov
stos
xchg
rol
pop
lcall
jae
and
js
mov
adc
insl
repnz
push
ret
xchg
lods
je
jge
adc
and
push
xchg
and
stc
and
and
sbb
imul
test
cmpsl
test
rcrb
lcall
cmpsb
inc
jp
xchg
leave
or
in
inc
and
shll
pop
pushf
lock
hlt
sbb
stos
push
xchg
dec
cltd
mov
pusha
mov
fidivrs
loopne
push
cmc
xchg
cmp
dec
push
sub
sub
rorb
add
mov
cmp
xchg
push
into
mov
mov
dec
fsubs
xor
inc
inc
push
in
clc
mov
mov
sub
pop
stos
or
mov
or
fsubrs
insl
and
mov
fisubl
and
or
fdiv
sub
fisubs
dec
xchg
lcall
repz
movsl
jp
mov
test
xor
shlb
cwtl
xchg
mov
mov
mov
cmp
or
pop
insb
insb
les
repz
cmp
pop
popf
mov
movsb
inc
push
or
popf
and
jbe
ffree
and
fidivl
daa
mov
pusha
push
sbb
addr16
into
cmp
addr16
inc
and
fsts
mov
or
inc
es
pop
fldl
jno
mov
lahf
ficoms
cltd
in
js
jns
mov
push
enter
das
dec
push
mov
pop
pop
push
add
mov
cmp
push
ret
adcb
mov
push
cmpsb
fisttpll
jge
mov
xchg
lds
push
xchg
jae
test
jecxz
pop
rolb
cmp
or
jne
add
xorb
cmp
mov
cmp
addr16
in
inc
aad
call
lock
cmp
loope
sbb
sti
add
mov
lds
and
push
push
stc
mov
mov
arpl
ljmp
mov
adc
shrb
out
sbb
pop
cmpsb
mov
jo
sub
lock
mov
outsb
lahf
xchg
cmpsb
ja
sarl
lods
fnstsw
xchg
scas
aas
jl
mov
pop
cmc
in
mov
push
js
xchg
mov
xor
inc
add
xchg
add
push
adc
sbb
pop
mov
jne
test
sbb
mov
xchg
sar
arpl
iret
repz
pop
cli
xchg
pop
push
icebp
jae
mov
insl
les
int
in
ret
mov
mov
push
fisubl
sbb
cwtl
xchg
popf
jnp
inc
push
jno
add
cmp
and
out
into
mov
sti
into
lret
leave
pop
test
mov
jo
sub
sub
sbb
fs
mov
push
outsl
cmp
lds
dec
push
sub
xchg
cwtl
mov
outsb
sub
jge
xchg
hlt
aas
out
adc
into
pushw
es
xor
js
jg
lods
mov
dec
imul
sbb
mov
sub
xchg
jle
daa
mov
lea
lcall
add
aaa
xchg
sbb
aad
sbb
ret
pop
test
jno
sub
hlt
sub
arpl
adc
mov
mov
stos
test
cmp
test
in
lods
aad
push
das
pop
inc
and
popf
push
imul
lods
jmp
cmp
lock
popa
outsl
mov
dec
cmp
test
sbb
jle
outsl
cmp
sahf
insl
insb
aad
add
add
sbb
stc
lret
sti
das
sar
leave
or
jecxz
sub
adc
sbb
pop
jle
ja
sub
jns
ret
cmp
jmp
inc
mov
stos
cmpl
into
lock
sub
and
mov
push
inc
pop
sbb
xchg
nop
pop
or
cmpsl
adc
in
aad
sbb
repz
mov
dec
clc
pop
fadd
js
jmp
adc
test
push
lock
loop
js
adc
sub
jno
xor
mov
lret
or
inc
loopne
cmp
inc
mov
xor
push
jne
push
jne
jb
mov
cmpxchg
xor
pop
adc
lret
xlat
sub
mov
xchg
inc
movsl
push
push
jge
in
mov
shll
mov
das
or
mov
inc
mov
xchg
jo
jo
test
mov
je
cmp
push
fisubs
into
loop
leave
stc
loop
jns
pop
mov
mov
int3
sbb
mov
jge
aas
divl
repnz
test
push
mov
stc
lret
roll
dec
adc
addb
data16
loop
jns
mov
pop
out
mov
lret
adc
xlat
push
arpl
pop
clc
sub
es
fbld
jg
leave
jle
mov
add
xor
adc
mov
lock
mov
and
cli
pop
xchg
mov
dec
ljmp
mov
inc
das
lods
lret
xor
mov
cmp
daa
adc
push
xchg
or
sbb
jecxz
into
jmp
rorb
icebp
and
movsl
mov
stos
dec
popa
out
and
jp
ja
or
cld
jbe
mov
dec
push
dec
mov
push
es
loopne
sbb
sarl
mov
pop
cmp
push
arpl
lds
sub
shlb
test
cli
push
movsl
xor
bound
or
or
xchg
push
outsl
out
into
fmuls
fcomp
xlat
xchg
lods
cmp
sub
sbb
lock
mov
jae
and
imul
ljmp
call
xchg
jbe
dec
jo
jns
imul
mov
mov
push
daa
ret
scas
cmp
sub
push
sbb
fimull
mov
cltd
movsb
das
das
and
mov
jne
fstp
bound
add
jle
jae
stc
push
fisubs
test
imul
es
jns
in
xchg
fmull
loop
push
inc
push
int3
jns
lret
dec
sub
mov
scas
adc
dec
jno
mov
push
pop
inc
jecxz
stos
fmull
in
mov
mov
mov
sbb
mov
or
arpl
add
into
push
or
loopne
mov
adc
mov
cld
push
rcrl
in
cmpsb
or
shrb
pop
aas
inc
add
fstpl
jbe
push
jle
jo
cmp
iret
mov
or
punpckldq
ficompl
jae
and
out
or
push
push
sbb
std
bnd
bound
das
pop
dec
stos
adc
jge
test
dec
push
sti
jo
movsl
xchg
pusha
imul
mov
lods
fs
popf
sti
rorb
pusha
mov
xchg
jl
ja
or
push
mov
adc
sub
loope
cwtl
pop
les
adc
pop
mov
mov
push
pop
push
iret
add
push
lcall
and
mov
shl
jl
adc
ss
push
cmp
or
out
insl
out
sbb
in
fwait
aam
sbb
aad
call
add
mov
aas
std
decb
jle
mov
orl
pop
stos
adc
shll
dec
sub
clc
fisttps
jns
add
lds
cs
ficoml
jno
insb
test
xlat
cmp
cmc
sbb
cmp
icebp
or
xor
jns
sbb
jnp
xor
in
in
pop
inc
addb
pop
pop
mov
jns
or
iret
pop
fdivrl
inc
fwait
mov
and
inc
xchg
inc
push
mov
push
adc
jns
or
mov
mov
xchg
out
push
jbe
rcll
cmp
mov
cltd
xchg
jle
ds
fwait
sbb
push
mov
in
fistl
xchg
clc
adc
jb
stc
int
mov
cmp
pop
mov
arpl
mov
xchg
add
jo
out
sub
dec
pushf
adc
andb
test
inc
add
mov
into
fildll
push
ret
or
iret
sarl
test
test
fidivrl
xchg
insb
mov
in
scas
or
adcl
add
loopne
push
sub
ss
fwait
lret
mov
ds
add
and
pop
pop
jg
pusha
jle
sub
lods
fcoml
icebp
xor
enter
mov
pop
xor
pop
add
je
sti
imul
inc
aaa
dec
popf
cmovge
jecxz
push
test
jae
je
cmc
sar
xchg
inc
add
sbb
sub
ficompl
outsl
lret
mov
mov
mov
mov
movsb
mov
mov
incb
pmulhuw
out
mov
mov
jno
xchg
and
sub
movsl
dec
inc
test
pop
xor
enter
loope
sub
imul
pop
dec
adc
rolb
insl
mov
xchg
jnp
jg
pop
sbb
push
add
sub
xchg
arpl
and
jns
jl
daa
xor
fcomps
enter
mov
gs
jae
out
out
inc
rclb
or
pop
lcallw
nop
dec
adc
clc
outsb
jno
push
or
adcb
xor
in
push
or
rcll
nop
dec
in
push
cli
insl
es
push
lcall
in
and
subb
add
shl
lret
mov
orl
mov
or
out
out
cmp
adc
inc
ffreep
mov
outsb
mov
out
sbb
add
mov
cli
pop
cmp
shrb
jge
mov
push
test
dec
dec
js
scas
xor
jg
pop
sbb
lds
loopne
loope
out
cwtl
pop
mov
jp
xorl
int
push
outsl
fdivr
dec
adc
cmp
aam
or
push
push
leave
adc
in
pop
repz
test
daa
mov
adc
ret
out
outsb
fs
or
xor
mov
inc
jno
adc
popf
cs
je
mov
jo
mov
ja
cwtl
out
in
mov
sub
and
test
sbbl
add
and
loop
pop
repz
lods
incl
xlat
sarl
mov
andl
inc
mov
rcll
and
cmp
jno
cmp
xchg
popa
or
xlat
mov
and
adc
cmp
jecxz
fs
mov
mov
jno
bound
lds
xchg
hlt
sbb
lds
ror
pop
pop
mov
lahf
push
into
sbb
or
cwtl
and
pop
es
daa
into
pop
pushf
xchg
mov
sti
jmp
ret
mov
mov
pop
sbb
push
push
lea
popa
mov
lods
popf
add
cmp
sub
icebp
clc
push
mov
fnstenv
cmp
push
pop
je
jp
das
into
dec
dec
sbb
pushf
lret
sub
inc
paddb
mov
mov
std
jle
pushf
xchg
addr16
inc
rol
dec
mov
and
cmpsl
push
fistpl
out
sbb
sbb
test
repnz
mov
xchg
mov
cmpsb
bound
sub
sub
add
inc
gs
jmp
aaa
push
nop
push
xor
mov
cmpsb
or
sti
xor
and
sbb
ret
jl
jb
mov
mov
jecxz
mov
in
inc
movsl
xor
lret
add
mov
add
in
mov
loopne
loopne
and
fisubrs
int3
scas
push
daa
addr16
movsb
pop
in
dec
xor
mov
or
int
testl
jae
xor
popf
xchg
lret
mov
out
mov
std
xor
ss
fwait
out
das
inc
mov
and
mov
roll
push
andb
mov
aam
out
in
out
in
jb
cld
or
lods
push
movsb
xchg
jge
or
inc
and
into
into
mov
pop
xchg
mov
push
dec
inc
sbb
out
lahf
jne
arpl
scas
mov
push
test
movb
xor
inc
insb
out
inc
add
jb
push
push
lret
outsl
sbb
push
pop
lea
and
pushf
test
das
imul
pop
mov
lcall
mov
ret
ret
lret
push
lcall
cmpsb
test
fidivl
repnz
jno
imul
and
imulb
loop
shll
pop
scas
mov
push
mov
ficomps
push
mov
rclb
jne
sub
add
imul
sarb
test
push
repz
fcmovb
adc
aas
leave
sti
enter
push
pop
pop
or
jle
jmp
push
push
dec
and
jmp
add
xor
arpl
jmp
in
pushf
pop
mov
dec
pop
mov
cs
cmp
mov
add
jg
xorb
cmc
push
in
arpl
cmc
cmp
in
cmpb
mov
mov
repnz
mov
or
inc
push
frstor
or
jl
xchg
js
pop
pop
inc
in
je
je
add
out
add
push
sub
jecxz
stos
data16
push
cmpsl
jmp
insb
lods
cmpsb
bsr
xor
mov
xor
aaa
jmp
ret
mov
inc
ret
add
pusha
xor
stc
mov
xchg
stc
and
cmpsl
cmc
mov
les
and
cmp
gs
loopne
sbb
test
clc
repnz
mov
mov
and
inc
in
out
nop
shl
push
or
out
lods
ss
push
imul
jle
mov
addr16
incl
inc
mov
pop
lea
mov
iret
mov
std
push
xlat
in
mov
orb
scas
popf
stc
into
fcmovu
jnp
dec
xor
fwait
push
notl
out
ja
mov
sbb
flds
outsl
mov
push
aad
out
pop
js
outsb
mov
cli
push
lret
mov
in
fidivrl
push
int3
shlb
xor
pop
sbb
pusha
repz
in
push
mov
push
dec
sub
jge
leave
push
popa
hlt
mov
jge
pop
cltd
push
inc
mov
jl
dec
sub
arpl
adcb
ficomps
aas
loopne
test
sarb
mov
dec
fs
jns
insb
pop
sbb
add
andl
mov
aam
mov
jne
mov
xor
dec
push
pop
ss
cld
sti
fs
adc
jb
idivb
sarl
es
shr
orb
push
mov
cld
popa
out
mov
in
fcompl
and
dec
mov
push
xor
lahf
add
sbb
xor
addb
jp
filds
push
mov
sahf
daa
int
scas
or
lock
in
add
add
rolb
sbb
aaa
out
loop
jl
repz
dec
js
inc
lcall
pop
mov
into
aad
mov
jge
pushf
pop
shl
inc
xchg
leave
adc
jg
out
nop
cmpsl
insb
mov
imull
ss
mov
inc
scas
lock
jb
dec
xchg
inc
insl
sbb
in
scas
lahf
xchg
sbb
mov
rclb
push
into
and
inc
sub
ret
mov
mov
lret
cmpsl
jno
xchg
in
dec
jg
sahf
mov
mov
test
jbe
nop
hlt
in
mov
xchg
or
mov
in
xor
mov
cmp
pop
jnp
pop
lss
cmp
mov
pop
inc
or
fwait
push
jns
ss
sbb
inc
imul
stc
fists
add
clc
or
lahf
or
mov
jl
ret
fsubs
jp
in
fisttps
lcall
pop
jmp
sbb
std
jg
mov
ret
pushf
mov
add
ja
call
add
adc
xchg
out
push
jg
push
sti
jle
adc
les
sbb
into
cmp
and
mov
dec
mov
ret
decb
fists
int3
and
in
rorl
call
sub
mov
jo
stos
fldl
add
aaa
out
or
test
sbb
mov
mov
sub
out
sbb
xchg
jbe
pop
mov
sbb
fisttpll
into
dec
ljmp
rorb
sbb
cmp
mov
jg
push
lret
cmp
and
repz
jo
lcall
arpl
xchg
cli
dec
or
adc
dec
pop
jne
loop
loope
shrb
xor
xor
mov
test
fidivs
xchg
push
repnz
mov
push
movsl
dec
lock
out
pop
and
shlb
inc
cltd
pusha
scas
pop
jnp
cmp
jno
lods
or
iret
mov
cmp
add
lcall
pop
call
outsl
ljmp
pextrw
cmc
imulb
xchg
lock
cmp
icebp
ret
mov
or
stos
add
jae
sbb
sarl
rdmsr
add
sbb
lods
inc
inc
or
stc
int
pop
sti
mov
cmpsb
sub
cltd
outsl
cli
inc
orl
inc
push
fdivrs
mov
jae
inc
inc
lahf
mov
mov
mov
hlt
and
adc
inc
aas
push
push
test
scas
in
gs
ret
aad
xor
gs
mov
stc
lea
ss
andl
aam
inc
les
unpcklps
sub
sbbl
push
nop
jl
bound
pop
jmp
sbb
mov
inc
insb
sti
push
dec
pop
shrb
faddl
lods
enter
stos
pop
adc
sub
mov
std
pushf
mov
les
jmp
adc
xor
call
jecxz
pop
pop
cmp
hlt
push
xchg
add
pop
lock
out
popa
jb
popa
xchg
es
mov
or
fistl
dec
push
inc
push
xchg
js
jns
int
push
mov
cmp
inc
cmpsb
mov
sub
and
enter
mov
into
xchg
xchg
loopne
or
ret
xor
xor
daa
add
outsb
out
dec
hlt
mov
ss
out
mov
or
adcl
into
jae
fidivl
pop
inc
dec
outsl
push
jbe
push
and
out
dec
divl
push
enter
pop
outsb
imul
mov
aad
jmp
icebp
sbb
call
nop
cmp
les
clc
sub
loopne
dec
testl
mov
imul
fisttpll
insb
add
jge
sub
cltd
stc
fadds
out
fmul
shl
push
mov
xchg
mov
loope
jns
aaa
dec
out
lods
fsubr
andl
pop
les
dec
cmpsb
scas
mov
xor
xchg
push
xor
cmpsb
pop
das
outsl
sahf
subb
insb
xchg
xor
pop
push
add
mov
movsb
mov
mov
pop
push
mov
dec
je
lods
xchg
jae
xchg
and
sub
xchg
mov
aad
lock
ds
dec
push
cmpsl
addr16
out
fcmovnbe
aam
mov
fwait
lea
dec
andl
out
je
mov
iret
stos
jp
or
dec
mov
repz
insl
pop
lods
negl
pop
outsl
jl
add
idivb
out
in
or
sbb
ljmp
jnp,pn
lret
aad
ret
jp
jmp
and
cmpb
ret
push
adc
arpl
push
loop
jecxz
xchg
xor
adc
or
adcl
adc
aam
xchg
rcrb
mov
dec
mov
jb
aam
popa
lods
popa
push
jns
lahf
jns
arpl
cmp
inc
ret
mov
push
pop
xchg
ss
clc
pusha
jns
and
jg
nop
stos
imul
pop
sbb
push
pop
push
push
xchg
add
cwtl
mov
loope
inc
ja
jecxz
add
gs
and
scas
xor
push
jns
mov
mov
cltd
movsb
xchg
pushl
ja
test
scas
jno
imull
mov
loopne
inc
insb
into
inc
inc
into
dec
push
cwtl
pop
fldl
pop
aaa
or
cmpsl
out
cmp
mov
sbb
cwtl
push
fmuls
cmpsl
inc
push
popf
outsb
inc
lea
arpl
add
dec
loopne
stos
or
movsb
sarb
mov
sbb
lret
ljmp
or
adc
jne
jae
jbe
sahf
push
push
cmp
cwtl
js
call
add
adc
add
roll
inc
lahf
mov
imul
pop
xchg
xor
xor
ja
leave
mov
adc
fwait
sub
fidivrs
xor
das
lret
sub
xchg
jae
cs
mov
jmp
cmp
mov
pop
xor
movsl
mov
xor
push
xor
mulb
test
lahf
lods
dec
sbbb
sahf
into
dec
inc
mov
mov
mov
cmp
mov
mov
sbb
out
push
int
mov
sti
pop
lods
sarl
dec
push
sbb
jl
xor
pop
mov
js
test
notl
sbb
add
push
out
adc
cmp
xchg
test
lret
pop
push
add
sub
cmpl
loope
inc
lret
jl
fs
jmp
and
es
fwait
imul
cmp
mov
sahf
inc
jp
in
xchg
into
sbb
mov
xchg
rol
das
mov
cmp
repnz
or
fmuls
sub
mov
jns
test
cmp
push
imul
iret
imul
adc
sub
in
mov
push
cmp
and
cmp
lods
pop
andb
xor
stos
dec
push
mov
std
jmp
mov
adc
ret
cmc
and
popf
lods
sbb
rol
sbb
pop
into
and
insb
int3
jo
inc
mov
push
call
jbe
js
inc
aam
push
notb
divl
sahf
fldcw
fidivl
test
add
pop
xchg
ds
ret
sahf
inc
sbb
or
xor
icebp
mov
push
in
pop
data16
jge
mov
or
into
mov
rol
lret
mov
fstps
test
cmpsl
into
push
jmp
pop
adc
stos
push
jl
xchg
jge
dec
sub
in
fwait
xchg
lea
xlat
aam
cmp
sub
lahf
mov
out
pop
add
getsec
jne
fwait
cld
xlat
pop
daa
dec
outsl
je
dec
cli
ss
cmp
mov
lret
sub
sub
mov
cmc
bound
fsubs
cmp
lret
push
out
fstl
xchg
jb,pn
lock
cmp
cmp
lret
jno
jge
push
aad
push
ds
or
mov
inc
adc
pop
jl
call
in
push
mov
mov
add
xchg
ja
jg
dec
notl
testl
ret
js
push
stc
into
xchg
dec
add
in
out
out
out
movsb
ljmp
xor
xor
cmp
mov
addr16
mov
clc
jns
data16
aam
aaa
shrb
sbb
adc
mov
inc
enter
adc
mov
movl
xchg
lods
inc
shrl
pushf
adc
jl
push
sub
enter
dec
mov
xchg
bound
and
push
movsb
and
push
stc
cmp
and
sahf
out
or
push
fwait
add
push
cmc
fistpl
push
xor
cmp
push
mov
xchg
xlat
push
pop
pavgw
sbbl
mov
mov
dec
rol
sbb
inc
xor
dec
cmp
or
add
pop
movsb
lock
mov
imul
adc
aaa
gs
push
adc
shr
shrl
lahf
popa
pusha
bnd
in
leave
loope
ret
ret
push
arpl
out
inc
in
inc
jbe
loop
out
cs
shlb
xor
add
sbb
mov
xor
arpl
popf
mov
pop
in
and
ja
jno
mov
xor
repnz
sub
out
out
mov
ds
add
and
adc
or
cld
outsb
ljmp
aas
in
lock
test
out
das
int
js
pop
lods
lods
jnp
es
call
mov
or
ds
outsb
fcomp
leave
inc
pop
pop
mov
cltd
add
mov
in
pop
insb
out
push
sub
les
add
add
sbb
ds
enter
add
mov
cli
xchg
adc
sbb
adc
mov
leave
push
ljmp
pop
inc
add
pop
mov
pop
jle
mov
xchg
xor
pop
pop
aad
push
loopne
sub
jg
xchg
lods
inc
cli
push
lahf
dec
jbe
sub
rcrl
cwtl
jle
add
jno
inc
push
bound
mov
insb
arpl
iret
mov
test
aad
stos
dec
dec
in
xchg
fnstcw
test
sbb
xor
test
push
push
inc
les
mov
jl
les
ljmp
lock
in
push
dec
ljmp
jp
push
mov
leave
jnp
jae
scas
xchg
inc
jno
dec
mov
cmp
aad
pop
jno
clc
loop
dec
fwait
xor
sbb
sbb
jno
jnp
clc
arpl
mov
mull
mov
inc
in
cltd
shrb
test
jae
sahf
adc
push
out
arpl
aad
inc
cmp
test
cmp
aaa
pop
pop
lret
add
lret
sub
inc
xchg
add
mov
sar
ret
mov
lock
xor
pop
push
enter
add
gs
iret
idivl
cmpsb
nop
stc
pop
int
mov
push
inc
sub
mov
jne
out
mov
inc
mov
xchg
ret
testl
xchg
mov
icebp
iret
jbe
rorl
inc
pop
popf
push
xor
dec
adc
pop
xchg
xor
dec
push
sbb
xchg
rclb
aad
adc
cli
fisubrs
lds
xor
aam
test
iret
cwtl
fbld
add
or
stc
int
loope
dec
xor
xchg
movsb
dec
test
jb
cwtl
loopne
add
test
fisttpl
xchg
repz
mov
mov
xlat
rcrb
loope
pop
loopne
push
lock
push
jo
push
adc
lret
lret
mov
cli
jo
sub
stc
nop
mov
push
push
or
jno
loopne
aad
lcall
mov
rcll
and
inc
lret
jbe
scas
ljmp
mov
lds
inc
mov
loope
cltd
xchg
adc
sbb
xchg
lret
push
sbb
add
mov
ds
ds
imul
int
or
stos
cmp
dec
idivb
shrb
and
sbb
ret
push
inc
roll
ret
xor
pusha
push
xor
mov
xlat
or
sub
sub
jge
xchg
jg
xchg
lea
rcrl
lahf
cwtl
enter
rep
pusha
mov
aam
xchg
pop
pop
add
in
bnd
sub
xor
and
idiv
scas
test
test
sbb
shrb
and
pop
cmp
inc
push
nop
or
sbb
inc
paddd
std
and
or
outsb
data16
sub
iret
mov
pusha
jns
xchg
popf
adc
inc
movsl
pop
pop
and
fiaddl
mov
pop
popl
dec
iret
dec
ret
aad
in
cmpl
sub
adc
cmp
loopne
mov
pop
push
mov
mov
sarb
push
and
loop
cmp
test
inc
loop
fdivrl
push
cmpsl
mov
jmp
inc
loop
in
in
lahf
adc
mov
adc
leave
dec
xchg
sub
sbb
inc
sub
inc
push
dec
push
lcall
add
popa
add
cwtl
cwtl
leave
xor
inc
out
rcll
hlt
mov
les
push
dec
cmp
inc
loop
outsb
loop
imul
jb
int
lret
leave
xor
dec
aad
andb
cmc
cs
movsb
pop
cmp
and
loop
ret
xlat
out
out
or
push
sbb
ljmp
mov
div
out
adc
out
mov
and
push
xlat
xchg
and
xchg
in
movsl
sub
rorl
inc
jg
adc
repnz
inc
xor
scas
push
insb
scas
test
stos
jmp
mov
add
sbb
mov
and
xor
stos
adcb
scas
fstl
mov
pop
loopne
repnz
pop
mov
idivb
mov
out
inc
rolb
arpl
in
inc
adc
jnp
shrb
lods
insl
xor
push
test
xlat
in
sub
lret
popa
pop
and
dec
loopne
roll
daa
mov
push
outsb
or
out
xchg
mov
sbb
cmp
inc
cmovo
test
pop
orb
fstpt
xchg
int3
lock
and
inc
pop
arpl
icebp
pop
test
and
popf
jg
in
pop
repnz
mov
addr16
xchg
push
icebp
add
mov
test
nop
loope
xlat
call
stos
xor
lods
and
mov
ds
je
loopne
in
int
jmp
jecxz
test
out
pushl
rolb
add
loopne
rcll
jg
test
sbbb
flds
cmpsl
mov
xchg
inc
push
leave
sti
int3
cmp
shl
rclb
xlat
rol
and
mov
push
or
adc
imul
push
in
xlat
or
sahf
jl
shll
mov
or
cmpsl
and
sahf
int3
faddl
cmc
mov
push
repz
mov
push
cmp
loope
mov
jbe
push
dec
jae
arpl
in
das
pop
cmp
xchg
jae
ljmp
into
pop
push
scas
and
sar
shll
sub
lock
cmp
mov
outsl
subl
push
lods
loop
adc
fcoms
add
mov
sbb
out
xchg
mov
insl
mov
sahf
bound
or
mov
and
mov
pop
repnz
or
add
pop
pushf
push
nop
ja
add
stos
xchg
jbe
call
lods
stos
bound
add
dec
sarl
or
cwtl
mov
sti
and
mov
and
push
push
sbb
adc
push
xorb
cmp
in
shll
jb
pop
xchg
mov
addr16
jmp
pop
mov
and
jns
ds
dec
std
mov
std
sub
pop
sub
mov
movsl
push
lret
mov
or
les
outsb
xchg
ret
xchg
jge
push
imul
add
mov
or
lret
cld
xchg
push
mov
push
and
sbb
out
mov
xchg
addr16
int
or
out
les
dec
out
pop
pusha
xchg
xchg
lcall
sti
jecxz
ja
lods
add
test
add
hlt
in
pop
xchg
enter
mov
cmpb
sub
xchg
push
mov
std
pop
std
inc
pop
dec
cmp
popf
inc
jge
fwait
adc
pop
fistpll
add
push
mov
xchg
into
and
mov
push
mov
xchg
mov
movsl
sbb
sahf
repz
nop
out
inc
lret
pop
mov
inc
pushf
rorb
and
xchg
aaa
add
add
cmp
xchg
and
loope
cld
jl
jecxz
mov
push
cmpsb
pop
sub
lea
and
aaa
mov
xor
pop
mov
push
shrl
inc
pminub
cmp
cld
cmc
jb
dec
add
adc
pop
jne
call
xchg
dec
je
xchg
scas
pusha
stos
cmp
dec
pop
int
jo
insl
and
imul
stos
fildll
into
pushf
jbe
in
outsb
mov
fists
mov
dec
push
xor
add
imul
stos
sub
cmp
sub
jnp
and
add
aam
pop
and
cmp
adc
shrl
jae
loop
or
testb
fs
aad
mov
xchg
mov
in
loopne
mov
mov
push
mov
retw
xor
xlat
pop
dec
repnz
stc
divl
jne
adc
les
and
pop
leave
pop
test
or
mov
xlat
jnp
mov
nop
mov
sub
push
sbb
pop
call
ror
cwtl
shrl
xchg
mov
sahf
lods
sbb
pop
cwtl
mov
popa
xor
lea
movsb
leave
orb
adc
mov
lret
and
movsb
stos
sbb
xor
bound
pushf
jno
daa
xchg
and
ss
jp
jbe
fwait
jp
xchg
xor
push
pop
in
out
sub
jp
pop
mov
sahf
xchg
jnp
jns
fsubr
and
loopne
dec
outsb
fcomps
push
add
inc
pop
add
add
cld
sahf
subb
cld
xor
out
fwait
push
add
xchg
sub
cmp
sbbb
mov
mov
pop
jge
mov
scas
sbb
xlat
xchg
dec
cmp
push
inc
jb
jecxz
inc
stos
pop
mov
xlat
xchg
inc
ljmp
mov
pop
mov
mov
xor
in
sbb
mov
or
and
aad
int
clc
cmpsb
js
cmp
pop
dec
shll
insl
sub
das
push
push
jl
enter
jbe
pushf
cmp
mov
aas
adcl
daa
inc
pop
fnsave
aam
out
stos
adc
movsb
clc
test
jnp
fdivrs
mov
shl
jl
stos
jge
das
and
dec
sbb
xchg
scas
movsl
xchg
fldenv
sub
dec
scas
push
in
fbstp
sub
test
cmp
xchg
mov
mov
in
mov
in
xor
lret
dec
adc
adc
lods
pusha
icebp
and
iret
test
sbb
adc
shlb
iret
mov
jp
mov
imull
imul
ret
jae
lock
sbb
or
sbb
push
inc
push
or
mov
adc
pusha
xor
mov
and
xorb
mov
fwait
sti
push
mov
outsb
mov
and
arpl
dec
jecxz
or
and
les
js
mov
imul
insb
pop
mov
loopne
xchg
dec
sub
inc
ret
imul
scas
fcompl
repnz
xchg
pop
cld
iret
jecxz
das
sti
push
out
mov
repnz
and
push
xor
in
test
cmp
rclb
mov
outsl
xor
mov
and
loope
stos
inc
xchg
je
adc
add
outsl
decb
add
popf
stos
rolb
or
in
pop
push
or
shrb
dec
inc
lods
mov
or
sti
jl
push
test
insb
jmp
aas
inc
js
scas
int3
rcl
fcmovb
adc
jl
arpl
fdivs
out
call
pusha
lods
mov
rorl
pop
mov
jp
scas
lahf
mov
dec
clc
cltd
aad
pop
arpl
aad
cmpsb
xor
mov
mov
popf
dec
cld
nop
and
stc
pop
daa
and
daa
out
fwait
xor
dec
push
jbe
push
push
add
inc
ret
sbb
sub
dec
dec
jle
std
pop
or
pop
add
dec
sbb
push
sub
lods
outsl
or
cmpsl
mov
addb
sub
ficomps
mov
dec
push
xchg
outsl
cs
fidivrl
lds
mov
cmp
cmp
jmp
inc
and
shl
adc
jge
lahf
push
xchg
inc
stos
xor
sti
xor
ret
pop
rcl
push
out
dec
sub
dec
dec
pop
cmpsb
pop
sbb
out
stos
xchg
sub
cs
sbb
hlt
inc
xchg
jbe
pop
add
dec
enter
daa
or
cwtl
scas
mov
lock
jae
cmp
je
enter
rcl
fdivr
mov
lea
jl
dec
enter
ret
mov
add
mov
dec
adc
mov
stos
pop
or
ret
mov
mov
jecxz
cltd
dec
or
add
mov
dec
cli
ret
jne
stos
xchg
je
loopne
mov
dec
cld
je
xor
stc
jne
cmpb
mov
popf
adc
and
and
and
or
jl
ret
imul
lock
psubw
xchg
enter
imul
xor
cmp
lcall
jbe
das
scas
pop
dec
jbe
test
out
jne
and
xchg
mov
or
mov
out
and
mov
xor
ljmp
mov
insl
or
inc
pop
inc
dec
rcrl
insl
ja
cld
sub
xchg
jbe
lret
xchg
add
xchg
in
test
fadd
xchg
jb
xchg
jle
mov
pop
addb
addr16
jne
sbb
inc
jno
dec
mov
jle
stos
xchg
gs
cltd
iret
mov
repnz
dec
sti
jb
or
loop
dec
lea
adc
add
hlt
mov
pop
sub
les
clc
stos
je
jno
das
or
jecxz
push
sbb
repz
dec
inc
adc
loopne
sub
cltd
fs
outsl
lds
dec
fcomps
cmp
xchg
dec
lods
mov
mov
pop
or
je
loopne
jp
popa
in
aas
push
xchg
aas
cld
inc
push
mov
fs
out
push
pop
frndint
xor
push
and
jle
das
outsl
in
js
add
rclb
push
mov
or
sub
pop
mov
ret
enter
or
sti
jb
inc
jg
lret
and
sbb
xor
loope
ss
push
aam
pusha
mov
xchg
je
dec
iret
repnz
hlt
pop
and
sub
call
stos
outsl
mov
mov
mov
push
imull
popa
incl
mov
pop
dec
pop
leave
fstpl
sub
stc
cmp
pop
in
mov
daa
fwait
cmp
int3
nop
fs
ficomps
push
jae
daa
loopne
dec
xor
fcomp
cmp
dec
dec
mov
sub
cwtl
enter
jb
cwtl
mov
clc
lret
decl
aad
mov
mov
or
stos
dec
mov
cmp
loope
out
ljmp
lods
enter
inc
out
xorl
xor
sbb
mov
mov
int
outsb
fsubs
sub
insb
test
cs
rcr
xor
pusha
add
rol
or
xchg
out
push
jp
fistps
push
in
sub
add
divb
call
adc
add
ss
jge
outsb
sub
mov
movb
rclb
inc
aad
rcl
or
std
dec
add
cmp
imul
cld
mov
dec
mov
inc
lock
pop
add
or
hlt
enter
aas
and
fwait
std
in
mov
add
shl
mov
daa
cmp
insl
jae
jno
adc
push
lods
scas
mov
xchg
cwtl
cs
inc
gs
repz
inc
mov
call
adc
lret
aam
inc
xor
push
pop
fisubrs
into
xor
mov
inc
sub
in
jae
dec
jns
aas
into
fdiv
and
xchg
pusha
sub
xor
shl
lea
push
fsts
leave
shl
or
arpl
dec
mov
add
insl
ss
push
xchg
push
xchg
pop
xchg
mov
adc
pushf
ds
aaa
cmp
sbb
push
leave
and
lcall
std
addr16
lock
or
mov
mov
int3
and
adc
daa
sub
push
aam
fists
and
sub
push
cltd
inc
mov
jae
xchg
call
cld
int
push
dec
testl
pop
mov
inc
mov
cmp
std
stos
decb
pop
sbb
insb
les
sbb
pop
call
jle
xchg
and
mov
xor
add
test
xlat
loop
lret
movsb
xchg
insl
lds
data16
pop
fdivs
pusha
push
push
pop
fcmovb
xor
jp
in
or
inc
cmp
add
ss
out
ret
push
inc
outsl
fdivrs
xor
mov
nop
jl
jae
lcall
pop
mov
sbb
mov
ss
and
jnp
test
push
sbb
leave
mov
shrb
mov
adcl
mov
pop
pushw
pop
fs
mov
je
dec
push
outsl
push
cs
hlt
daa
scas
mov
cs
sbbb
mov
ja
jno
fucomip
mov
cs
xorb
cmpsb
jb
gs
fimuls
adc
sbb
lret
dec
inc
std
mov
push
mov
sub
subl
xor
lret
fisttpll
push
sbbl
sub
ret
shlb
loope
dec
rcl
xchg
pop
mov
shl
sub
xchg
lds
add
ljmp
push
lds
mov
add
daa
pop
jecxz
pop
addr16
fbstp
gs
es
xor
sub
ja
jnp
cltd
sub
xchg
sahf
sub
push
cld
loopne
rcll
mov
fmuls
in
jo
mov
pop
add
scas
cmp
sarl
lahf
mov
xchg
xlat
jae
adc
adc
xlat
bound
dec
add
mov
xchg
inc
movsl
and
push
movsl
sarb
jns
mov
popf
movsb
in
pop
insb
add
outsl
testl
sbb
pusha
cwtl
or
in
ret
sbb
test
inc
bound
sbb
dec
jne
addb
ljmp
outsl
pusha
inc
faddl
adc
stos
or
jae
ds
xchg
sub
addr16
xor
inc
sarl
pop
jmp
les
add
jae
and
mov
mov
andb
jg
movsb
push
faddl
lea
pop
sti
xchg
dec
lahf
jecxz
cmpsb
cmovbe
pop
adc
cmp
inc
or
test
repnz
into
push
into
addr16
test
or
in
dec
repz
xor
fcomps
icebp
sbb
shrb
cmp
mov
mov
pop
jp
mov
jp
sbb
orb
sub
ret
dec
mov
cmp
xchg
fucom
jecxz
mov
bound
es
mov
cmp
outsb
jno
sbb
enter
cmp
inc
inc
or
and
popl
jecxz
dec
pop
dec
pop
je
out
pop
mov
aaa
mov
pop
push
cli
dec
cmp
add
fbld
out
test
jnp
jmp
cmc
pop
jp
cwtl
fsubs
mov
xor
fsubs
xor
push
fwait
imul
push
jnp
push
cwtl
test
and
hlt
les
push
clc
roll
jo
mov
dec
insl
jge
xorb
or
popa
sub
mov
popa
test
and
fnstenv
mov
lret
mov
stos
insb
cmpsl
push
das
or
fld
rcrl
hlt
clc
or
movb
jp
pop
jge
frstor
dec
mov
lcall
mov
or
mov
iret
push
imul
cmp
mov
xchg
ljmp
arpl
pushf
jge
lret
outsb
adc
cltd
ret
jae
js
and
xchg
in
mov
pushf
add
mov
inc
and
jnp
std
mov
ja
or
dec
sub
sbb
ds
cmc
enter
xlat
and
sbb
dec
test
inc
mov
sub
lods
mov
shrb
push
insl
push
sub
lods
xor
and
lods
lea
scas
ja
hlt
inc
and
loopne
cmc
push
enter
ficompl
cmpsb
repz
mov
or
push
ds
f2xm1
mov
xchg
mov
out
sub
jg
mov
or
inc
popa
insb
adcb
inc
or
repz
adc
test
add
xchg
stc
jae
and
pop
das
xchg
mov
sar
sub
mov
pop
movsb
xor
shll
addr16
cs
subl
sbb
les
lret
cmp
inc
mov
xchg
add
rsm
pusha
rol
push
jecxz
popa
dec
rolb
pop
in
pop
stos
fstpl
sbb
arpl
repz
push
dec
into
pop
cltd
mov
out
adc
jle
sub
scas
lds
xchg
and
and
loope
lret
mov
dec
sub
xor
scas
lods
les
cmp
lahf
cltd
mov
cmp
filds
adc
in
popf
lahf
mov
sbb
inc
shll
cmp
mov
sarb
jl
adc
mov
iret
sahf
dec
gs
sbb
fbld
push
iret
lahf
push
cmp
out
scas
push
mov
js
xor
xchg
and
cwtl
xchg
mov
cli
rcll
mov
shll
lcall
in
popa
add
and
mov
or
fsubs
fisttpl
xor
out
ja
repz
mov
ret
add
rcl
jno
test
adc
add
cmp
dec
dec
add
or
popa
out
jno
subl
mov
loope
adc
or
pop
mov
mov
xlat
push
inc
cmp
add
or
dec
rclb
mov
shl
and
mov
xor
test
into
aam
pop
scas
outsb
pop
add
jg
dec
lods
cmpsb
mov
adc
cmp
repz
mov
dec
nop
outsl
outsb
push
add
pushf
sbb
rcrl
mov
outsl
movsl
rcrb
dec
jbe
jno
sbb
hlt
pop
inc
sti
out
testb
cli
jge
ss
mov
movsb
shlb
xchg
mov
aad
or
mov
movsb
arpl
push
rcll
mov
cmp
addr16
jl
cmp
int
mov
mov
ljmp
mov
pop
fld
fistpll
sub
mov
mov
nop
adc
push
out
xchg
int
mov
add
adc
or
test
jbe
rorl
daa
mov
fnsave
out
xor
mov
mov
push
mov
movsb
icebp
cmp
clc
fistl
rcrl
mov
daa
cwtl
lret
push
inc
test
sbb
mov
jnp
iret
leave
mov
imul
sbb
popf
in
sbb
pop
xchg
sub
aas
push
jg
xchg
xchg
mov
xor
add
xchg
xchg
jp
push
movsb
clc
mov
cld
sti
and
push
mov
insb
icebp
xchg
jns
ss
into
xor
or
push
call
mov
cmc
jns
xchg
xor
lret
movsl
aad
adcb
inc
xchg
or
sbb
lcall
movsb
add
scas
imul
push
dec
and
lock
mov
sbb
sbb
test
pusha
sahf
dec
dec
fdivs
sub
loope
or
add
addr16
sub
push
jge
test
xchg
mov
mov
sub
jbe
das
lea
cli
jg
push
dec
scas
out
lea
adc
in
mov
inc
test
mov
xchg
push
xorb
pop
filds
cmp
daa
dec
xor
push
push
jo
push
push
cmc
jle
fcmove
cmc
mov
imul
add
cs
addb
in
jp
xor
faddl
dec
fwait
inc
push
cli
int3
scas
mov
in
inc
xchg
mov
push
add
mov
imul
js
push
lods
mov
addb
lcall
fsts
imulb
sbb
cmp
add
fnstcw
mov
lods
pop
ret
iret
sti
sbb
adc
inc
jge
or
push
ret
xor
fcompl
push
inc
mov
xor
push
fistpl
popa
lods
xchg
into
stos
outsl
xchg
dec
test
popa
sbb
mov
pop
mulb
punpcklbw
lock
imulb
and
cmc
jo
push
ret
dec
pop
push
lret
outsb
notl
or
ljmp
setns
cmp
jbe
mov
adc
jo
push
jge
push
add
mov
shl
mov
mov
ja
mov
mov
ja
mov
test
mul
xor
sub
std
inc
jle
sti
pusha
inc
hlt
leave
or
ret
inc
pusha
orl
or
ud2
pop
fs
jo
fs
sbb
cmp
sbb
mov
jno
jle
mov
cmp
test
mov
pop
add
into
shll
xchg
xor
aad
add
jns
push
dec
xor
cmp
adc
int3
cltd
jo
popa
call
add
lea
lea
loopne
jecxz
ret
mov
enter
cld
xor
je
push
enter
or
cmp
fwait
and
cmp
cmpsl
fwait
xorl
xlat
cmp
cmp
je
xchg
leave
jbe
xchg
sbb
loopne
pop
jecxz
loopne
outsb
inc
jg
shrl
leave
sbb
jge
insb
out
aad
cmp
and
sbb
lock
mov
adc
jnp
test
sbb
in
xchg
dec
imul
jbe
bound
jmp
repnz
test
push
mov
ljmp
outsl
outsl
loope
push
xor
outsb
mov
icebp
add
out
insb
aad
cmp
mov
jae
or
movsl
cmpsb
pop
mov
xor
push
outsl
in
fnstenv
sub
or
lods
pop
sub
adc
lret
aad
int3
mov
xchg
paddb
dec
fnstsw
hlt
jmp
stos
mov
add
ss
aam
push
xchg
jno
ficompl
mov
imul
rol
cmp
insl
xchg
xorb
xor
jae
mov
ret
test
jl
loope
pusha
jp
pop
mov
adc
adc
data16
push
cmp
xor
int3
addr16
xor
dec
hlt
aam
movsl
stos
test
sbb
je
lret
and
movmskps
pop
das
stos
or
fisubrl
adc
xchg
movsl
xor
js
mov
je
jg
js
mov
adc
mov
push
pop
stos
cmpsb
inc
jno
sbb
add
pusha
sub
mov
test
aam
test
jle
jl
xlat
add
bnd
xor
pop
xchg
sbb
pop
mov
sbb
test
imul
xchg
int
nop
fsubp
pusha
and
clc
pop
jecxz
push
pop
movsl
jae
jno
cmp
push
mov
jle
add
les
adc
inc
dec
mov
int
lcall
mov
sub
inc
iret
dec
mov
inc
frstor
minps
add
sbb
pushf
repnz
sar
popa
pusha
addb
sub
sahf
das
jno
mov
push
xchg
cwtl
mov
es
test
xchg
iret
in
mov
je
sbb
sub
scas
es
loope
jl
mov
dec
lods
inc
xchg
mov
dec
negb
lret
popf
inc
icebp
inc
daa
daa
test
add
cmp
fcmovne
adc
or
cwtl
outsl
aam
dec
test
test
add
mov
mov
cmp
lahf
fldt
dec
cld
dec
cld
pop
adc
test
and
iret
rolb
jmp
xlat
lods
std
scas
add
stos
testl
cld
arpl
cmpsl
xchg
xor
cmp
in
mov
push
mov
xchg
push
cltd
sahf
insl
cmpsb
push
popl
sbb
inc
icebp
fucomp
in
and
xchg
loope
jns
das
push
dec
in
lahf
lret
dec
in
aam
or
nop
mov
mov
sub
stos
das
cmpsl
cwtl
stos
push
fildl
xchg
in
iret
mov
mov
mov
test
push
imul
lea
adc
gs
cmp
dec
or
imul
cld
lods
pop
add
aaa
push
test
cmp
pop
and
pop
je
cltd
sti
leave
pop
push
mov
hlt
xchg
jmp
and
mov
data16
aas
pusha
addr16
xor
dec
pop
mov
cmpsl
dec
push
mov
outsb
xchg
sub
jmp
shrb
xor
jle
pusha
jecxz
das
dec
mov
xchg
aam
outsb
pop
cmp
add
push
adc
cmpsb
jb
cltd
rcrl
ds
or
cmc
ret
mov
inc
cltd
sbb
cmp
jp
shlb
push
mov
xor
xor
adcb
xchg
jp
in
sar
cmp
scas
lret
xor
testb
nop
pushf
pop
adc
xor
pop
lock
mov
sub
lret
stos
sbb
mov
pop
mov
mov
cs
mov
dec
cwtl
daa
sbb
mov
add
xchg
cs
loopne
push
aaa
inc
cmp
in
ss
sbb
clc
jo
js
xor
sbb
sbb
dec
and
jnp
inc
mov
or
daa
push
or
popf
in
xchg
mov
mov
fwait
dec
xchg
cld
dec
xchg
sbb
popf
in
inc
mov
inc
stc
jg
das
push
adc
outsb
insl
daa
dec
inc
imul
in
fnsave
xchg
sbb
jl
test
call
and
xlat
mov
stos
mov
fwait
mov
xchg
js
xor
sbb
imul
and
repz
adc
cmp
inc
ds
iret
lds
pop
call
adc
sbb
out
mov
inc
paddsw
and
pop
jl
fidivrl
or
lods
out
add
mov
lds
movsb
mov
dec
enter
mov
and
mov
jge
mov
jmp
sahf
mov
dec
pushf
ja
daa
push
pop
aaa
jl
mov
push
lock
in
fcmove
into
rolb
jno
mov
adc
data16
cwtl
jno
jb
out
cld
sti
mov
jno
xchg
add
test
sub
movsl
gs
jb
ljmp
enter
arpl
adcl
cs
push
ret
das
ror
mov
inc
fisttps
in
pop
lcall
xchg
stos
mov
push
mov
testb
lock
add
mov
xchg
sbb
xor
ljmp
decb
cs
stos
jmp
iret
xchg
push
cs
xlat
cmp
cmp
leave
inc
push
lret
aad
jns
add
stos
imul
hlt
test
add
je
ffree
mov
clc
xlat
lods
sub
inc
mulb
call
aam
rcrb
enter
sub
loopne
sbb
movsl
dec
push
xchg
icebp
jmp
lods
sahf
push
cltd
mov
pop
xor
icebp
pop
lcall
mov
sub
mov
xchg
xchg
xlat
daa
sbb
addb
scas
call
inc
mov
add
add
mov
cmc
loopne
stos
cli
test
addl
pop
or
stos
out
inc
push
pop
sbb
jp
call
and
ss
sub
sahf
es
cmp
movsl
data16
popa
data16
sub
out
rcr
rcr
mov
xor
push
jge
std
lret
sbb
dec
pop
xchg
fwait
or
xchg
andl
adc
mov
scas
inc
subb
out
lods
cmp
icebp
idivb
jmp
push
leave
push
gs
jb
mov
dec
mov
cmp
imul
sbb
sbb
jecxz
fwait
jge
in
sti
testl
int3
add
fwait
sub
icebp
pop
inc
lret
lock
icebp
xor
jl
lret
adc
icebp
in
notl
lds
in
xchg
imul
movsl
sub
cmp
inc
fst
cmc
stc
cmp
mov
add
cmp
push
push
pushf
ds
fistpl
dec
fiadds
cmp
ret
out
jg
push
jge
fnsave
cltd
cmpb
int3
jno
mov
into
les
xchg
pusha
test
ja
xor
std
or
push
jno
shlb
sbb
xchg
push
push
div
inc
mov
xlat
mov
push
pop
movsl
int
in
ret
popa
dec
bound
mov
enter
or
iret
in
push
out
nop
ss
cli
adc
adc
shl
cmp
test
xchg
ficoml
int3
dec
bound
xchg
ss
sbbl
cwtl
fildll
daa
mov
xor
testl
sub
icebp
xchg
xor
inc
in
inc
xchg
addr16
cmp
xchg
std
adc
or
add
repnz
std
movsl
popf
stc
mov
xchg
push
mov
cwtl
inc
ja
add
mov
push
push
cmpsb
mov
repz
xchg
ljmp
xlat
push
stos
test
cmp
or
push
and
lahf
hlt
dec
push
loope
scas
rcrl
inc
push
mov
cmp
jne
jle
out
pop
push
sbb
push
mov
sbb
inc
xchg
jae
xchg
pop
repz
xchg
cmp
sub
inc
push
call
orb
or
inc
mov
jge
leave
in
movsb
and
add
xchg
jmp
out
and
or
mov
sbb
dec
inc
clc
pop
mov
hlt
jne,pn
cmp
lea
jb
lret
in
fwait
cmp
xchg
cmpsb
enter
in
xchg
sti
fs
xor
iret
mov
and
hlt
scas
dec
das
xchg
ja
testl
and
inc
cwtl
movsb
jp
out
mov
subb
push
xchg
pop
push
fs
xor
out
lods
enter
addr16
outsl
dec
push
cmp
lret
cmp
pop
int3
into
sub
sub
xchg
or
mov
add
cmp
and
jl
mov
push
sbb
lcall
lods
inc
xchg
shr
in
insl
sbb
push
inc
xor
xchg
stos
fisttpll
addr16
shl
mov
fisubrl
pushf
movsl
xchg
inc
cmp
cmpl
aad
mov
xchg
clc
pop
inc
push
rcrl
add
popf
lea
shrb
mov
fadd
sbb
stos
cmpsl
stos
ror
movsl
ret
nop
inc
pop
mov
mov
les
sbb
imul
pop
loop
pop
sub
adc
sahf
xorb
mov
aam
pusha
ret
jp
mov
lea
ja
jo
xchg
inc
push
push
xchg
daa
push
repz
in
mov
inc
add
dec
enter
xorl
and
inc
sarl
mov
repz
adc
hlt
pop
mov
icebp
or
fstl
or
int
xchg
std
fstpt
add
test
bound
pop
sbb
sbb
add
adc
popf
fisttpl
outsl
add
sbb
loope
shr
ret
fcom
faddl
cmp
xchg
cmpsb
sbb
and
sbb
add
loope
orl
dec
or
rsm
pushf
das
xchg
jns
addl
enter
stos
call
push
lcall
daa
xchg
fsubrl
les
xchg
push
jp
inc
ds
insl
mov
aas
out
in
loope
inc
mov
in
cmp
inc
pop
lods
fdiv
jmp
test
jge
push
stc
adc
repnz
cmp
orb
jle
cmc
leave
dec
pop
in
fisubs
xlat
jp
imul
dec
fsubrs
fildll
imul
adc
idivb
mov
test
decb
int
mov
mov
shl
sbb
inc
fisubs
in
xor
repz
outsb
inc
push
cmp
mov
imul
pop
dec
shll
inc
pop
out
xor
xchg
push
test
or
divb
and
push
ret
xchg
pop
imul
int3
mov
sub
push
sbb
mov
or
stc
insb
mov
inc
push
sbb
cwtl
mov
shrl
mov
push
movsl
subb
rcrb
test
cmp
pop
aam
in
sbbl
add
fs
xchg
outsl
mov
imul
add
popf
fnsave
insb
arpl
pushf
mov
xor
or
cmp
out
ss
inc
int3
pop
lea
pop
mov
cmpsl
fistpl
pop
push
jno
push
lods
push
adc
xchg
add
jg
shl
je
adc
out
jae
sub
lahf
push
popl
cld
dec
int3
sahf
pop
xchg
dec
int3
stos
shll
nop
pop
out
hlt
jecxz
arpl
mov
and
dec
dec
test
dec
and
and
lea
dec
cs
es
in
std
insl
mov
lret
pop
mov
cmc
in
pop
mov
es
sbb
test
daa
out
xchg
mov
cmp
inc
js
mov
push
inc
push
cli
lds
or
jae
lahf
fistps
or
popa
push
cmp
add
lods
dec
mov
outsl
push
clc
push
sub
cmp
adc
test
rorb
enter
shl
sahf
mov
in
sub
fs
popa
dec
jle
xchg
lock
cmpsl
mov
ss
push
pusha
lcall
mov
out
pop
loop
loopne
mov
pusha
mul
jmp
fisubrl
xchg
mov
fisubs
adc
dec
adc
xor
dec
pop
fadds
stos
enter
jbe
sbb
in
frstor
cmp
cmp
setne
lods
cmp
jae
cmp
xchg
pushf
cltd
lea
sbb
cmovb
jno
addr16
inc
xor
inc
xchg
and
in
ja
add
adc
adc
mov
inc
add
mov
mov
mov
clc
cmp
push
fisttpl
fcompl
mov
jmp
inc
fsubrs
push
ficomps
jne
pop
cmpsb
xchg
push
push
pop
push
adc
push
movsb
test
dec
push
xchg
jo
in
or
jnp
dec
mov
hlt
sbb
mov
pop
loopne
or
push
mov
add
inc
mov
add
sub
xchg
ret
sbb
cmovge
xor
call
add
std
lahf
fnstcw
test
outsb
lods
js
pop
out
mov
bound
mov
mov
popf
sub
xor
mov
sbb
adc
addr16
ret
mov
mov
ret
in
xor
jmp
dec
sub
fldt
call
jecxz
mov
sub
mov
gs
ret
pop
arpl
push
jp
jle
jns
mov
mov
pop
sub
pop
push
lds
sub
cmp
insb
sub
add
mov
adc
aaa
pop
sub
pop
into
xchg
fsubl
lods
and
mov
pop
lahf
pop
stc
inc
fidivl
mov
pushf
dec
push
pop
mov
and
pushf
mov
cmp
inc
sbb
aaa
movsl
dec
clc
mov
push
cmc
cmp
cld
int
sub
movsb
ljmp
jp
mov
or
pop
mov
hlt
sti
or
out
sub
dec
jbe
test
fdivrl
rcll
jmp
sahf
out
mov
mov
in
adc
mov
js
mov
inc
inc
add
andb
sub
cli
in
in
and
sbb
call
push
movsl
mov
sbb
into
push
lret
repnz
push
add
daa
popf
pop
jge
xchg
hlt
xchg
sbb
clc
cs
lahf
fs
mov
pop
sub
in
mov
jp
mov
inc
and
loope
push
xor
push
popf
mov
in
xor
jp
pop
adc
xchg
mov
adc
xlat
mov
fsubl
outsl
jne
loop
mov
lock
mov
mov
or
icebp
sub
shlb
sbb
ror
aaa
sbb
dec
lea
mov
inc
xor
xchg
sbb
int3
inc
repz
test
leave
movsl
sbb
adc
dec
test
fdivl
out
dec
sub
inc
inc
jl
xchg
out
xor
pop
dec
dec
out
bound
mov
fdivl
pop
pop
sub
sbb
pushf
adc
pushl
and
jecxz
aas
or
push
push
and
add
cmp
je
sub
cmp
xchg
xchg
cmpsb
mov
pushf
in
icebp
and
cvttps2pi
out
dec
shl
fs
dec
cmp
ficompl
arpl
fucomip
dec
push
insl
mov
dec
adc
in
adc
mov
addl
pop
scas
or
mov
cmp
or
mov
xor
jae
jno
add
aad
dec
pop
pop
sub
add
divb
ret
push
lahf
fbstp
jp
js
and
imul
fs
aas
sub
cmp
mov
addr16
clc
sahf
hlt
push
dec
movsl
out
inc
and
rorl
jp
sahf
bound
in
sub
mov
or
jmp
in
fwait
add
xchg
pop
addr16
add
jge
sub
mov
test
addr16
push
daa
dec
imul
movsb
sbb
mov
add
inc
and
inc
cmp
jge
andb
shr
cli
mov
test
mov
loop
sbb
test
push
pushf
jmp
inc
in
loop
lock
and
mov
pop
dec
cmpsl
jo
or
xchg
and
pop
repz
nop
or
in
xorl
push
xor
mov
xchg
cmp
xchg
xchg
int
iret
mov
push
xchg
rcrb
mov
xchg
test
push
cld
jmp
das
sarl
test
fsts
in
ret
in
fildl
jp
loopne
iret
scas
aam
push
or
dec
cmp
cwtl
scas
lock
jge
cltd
movsl
in
pop
xchg
mov
fwait
int3
mov
addr16
in
out
add
xlat
in
mov
aaa
push
int
shl
xor
test
aad
es
mov
xor
scas
in
cmp
xchg
imul
mov
insb
mov
pcmpeqb
inc
dec
or
adc
leave
jb
sbb
inc
push
in
ficoms
ds
andl
cmc
mov
cwtl
lcall
push
lcall
adc
sahf
jle
mov
pop
push
adcb
ss
xchg
in
cmp
pusha
shll
xchg
push
dec
push
in
add
fisttps
stos
sub
pop
aas
mov
inc
cmp
ds
mov
cmc
pop
xchg
pop
push
mov
popa
push
popa
in
push
cmp
pop
mov
jo
nop
fiaddl
push
lods
or
or
ret
push
in
pop
sub
mov
scas
adc
push
out
imul
cmpsb
push
and
xchg
outsb
int
mov
cmc
leave
dec
sbb
push
cmp
sub
dec
add
jp
mov
push
jecxz
lea
sbbb
adc
les
cwtl
adc
jae
jl
arpl
into
fists
lret
cmp
jno
cmp
rolb
sub
add
sahf
jbe
mulb
in
pop
push
subb
je
fcompl
pshufw
add
sbb
mov
data16
mov
push
jae
sti
ret
lahf
inc
mov
lock
popf
xchg
jg
sub
mov
jnp
pop
jo
push
xchg
adc
mov
ja
popa
mov
rorl
cmp
lret
int3
enter
dec
cmpsl
in
pop
add
test
mov
sahf
pushf
out
mov
mov
scas
sbb
test
and
loope
cmc
xor
fists
xlat
push
dec
pop
pop
fldenv
into
cmp
je
ja
mov
jmp
test
xchg
push
or
loopne
lds
std
lret
out
iret
mov
pop
sub
mov
and
nop
movsl
xchg
adc
ret
in
jbe
adc
jg
inc
push
dec
lods
pop
outsb
lret
aaa
sub
hlt
fldcw
dec
repnz
cmp
repz
pop
pusha
adc
testb
inc
inc
mov
pop
mov
sbb
cs
daa
xchg
mov
roll
popf
div
fsts
inc
jne
test
cli
xchg
sahf
jg
push
xchg
pop
ftst
xor
out
popa
xchg
rcll
sbb
lcall
inc
iret
arpl
cmc
fwait
mov
js
xchg
adc
lock
mov
push
xchg
je
rorl
jp
lea
sbb
push
jle
data16
jge
call
in
gs
movsl
clc
aas
or
clc
in
mov
add
xchg
sub
mov
aaa
rorl
mov
pushf
std
lret
jmp
push
jecxz
fists
lahf
into
inc
in
popf
out
std
add
inc
cltd
cmp
fs
mov
adc
iret
js
or
xchg
xor
gs
xchg
push
int3
and
shll
rclb
loope
dec
jae
sbb
push
arpl
jl
sub
adc
fsubr
add
xchg
mov
lock
cmc
inc
mov
test
pop
scas
faddp
jbe
xorl
xor
sub
mov
sbb
sub
or
cwtl
inc
roll
xor
or
lret
leave
mov
hlt
mov
adc
jne
push
xlat
scas
stos
sti
in
jb
sbb
mov
add
cld
in
push
nop
out
insb
in
add
arpl
addr16
add
scas
push
dec
scas
stc
pop
arpl
daa
cld
sbb
push
mov
mov
mov
pop
popf
enter
push
jno
nop
lods
cmpsl
in
push
mov
imul
and
cmpl
shlb
mov
pusha
test
adc
sub
in
cmp
or
call
cld
loope
in
cli
xor
repz
mov
jge
rcll
pop
mov
pop
test
hlt
jns
sub
cmpb
jecxz
pop
dec
cmp
aaa
mov
daa
rolb
int3
pop
mov
push
repnz
sbbb
ret
scas
out
inc
cmp
mov
jg
push
add
adc
or
inc
out
cmp
stos
push
insl
ljmp
pop
ffreep
aas
mov
add
add
les
aaa
or
add
sub
sub
xchg
jmp
insl
cltd
push
lds
jmp
adc
fdivrl
push
sub
sahf
divb
add
iret
addl
mov
push
test
aam
sarb
insb
sbb
jbe
mov
pop
cmp
and
pop
cmpsb
jns
repnz
sbb
call
xchg
ds
cmp
jle
into
sub
sbb
xchg
adc
jae
aaa
mov
mov
xlat
inc
mov
pop
sbb
loopne
xchg
inc
sbb
or
faddl
fs
dec
mov
mov
cmp
mov
jl
add
xlat
inc
and
inc
fcomps
in
jmp
ss
repz
scas
enter
mov
jbe
mov
je
subb
cmovbe
xor
xor
orl
push
jle
loop
xor
mov
xor
lcall
jg
cltd
add
xlat
xor
aam
ljmp
inc
lahf
pop
adc
mov
cmp
pusha
sbb
lret
das
push
fs
movsl
and
ror
gs
lea
push
mov
xchg
adc
pop
mov
or
jp
adc
rorl
fnsave
repz
pushf
std
sbb
repnz
bound
int3
popa
mov
sbb
push
aas
cmp
xchg
push
mov
add
cmp
aaa
xchg
dec
lahf
push
pop
outsl
cli
xor
inc
dec
mov
je
xchg
xchg
loope
jnp
xorl
jmp
sub
xchg
aaa
add
xor
xor
adc
push
lea
sub
or
push
cmp
xor
ret
inc
jbe
dec
mov
mov
xchg
push
xor
and
xor
xlat
add
push
cli
ss
fld
adc
js
ss
data16
jge
sub
cmp
fldl
jnp
popa
lcall
popl
aam
roll
mov
inc
push
ffree
adc
test
stc
or
sti
jmp
fiaddl
jl
iret
outsl
or
mov
jg
loopne
dec
dec
outsb
adcb
inc
cmp
js
cmp
movsl
inc
outsb
jge
fdiv
loop
ja
inc
jge
cmp
jge
movsb
sbbb
sbb
and
int
or
add
repz
aas
jo
add
pusha
xor
inc
std
aam
dec
push
mov
fisubrl
add
repnz
xchg
mov
ds
gs
sub
rcll
push
mov
rorl
cwtl
scas
cmp
int
adc
mov
int3
adc
dec
je
fcoml
repz
sub
lock
insb
fwait
es
or
stos
test
cmpb
pop
popf
mov
push
mov
push
cmp
add
cmc
pop
jo
aad
std
push
iret
sub
test
aad
in
movsl
leave
scas
jge
push
inc
xor
lcall
mov
and
pop
mov
repnz
xor
or
dec
push
add
rol
in
out
mov
mov
popa
dec
or
cmpsb
xchg
add
aas
xor
into
adc
pushf
loope
xor
xchg
mov
in
mov
lret
sbb
cmp
ljmp
mov
pushf
mov
cmp
in
es
mov
or
xor
cltd
xorb
dec
xchg
mov
arpl
mov
push
test
adc
push
call
loopne
xchg
cmp
mov
dec
mov
fildll
test
cmp
xor
jae
rcr
cmp
bound
push
movsb
fistl
cltd
mov
stos
xchg
push
mov
adc
inc
js
and
nop
jb
push
sti
cmp
mov
push
xchg
in
movsl
popl
pop
mov
xor
in
shrb
mov
aaa
mov
shrl
je
dec
sbb
bound
sbb
mov
and
pop
add
and
jae
test
add
fs
mov
data16
mov
xchg
mov
pop
push
popa
aad
push
lock
in
shlb
jne
fsubrp
in
into
call
cs
icebp
or
push
out
movsl
outsb
loope
aas
adcl
pop
pop
sbb
sub
mov
repz
or
icebp
int
add
push
pop
std
jnp
sti
out
or
gs
mov
inc
pop
jnp
mov
cld
mov
mov
xchg
into
jbe
jge
push
shlb
inc
int
in
loope
flds
insb
sbb
pop
das
sahf
cld
popf
jnp
cmp
inc
movsb
mov
test
insb
xor
jmp
mov
dec
clc
imul
lret
dec
ljmp
sub
and
movsl
mov
cli
fwait
sahf
mov
insb
mov
xor
ljmp
inc
dec
or
je
mov
push
test
aas
cmc
xchg
push
test
sbb
and
rcrl
repnz
mov
adcb
repz
sub
pop
jl
cmove
mov
xor
roll
adc
xor
out
les
out
xchg
fnstcw
jo
sbb
sahf
movb
inc
mov
shrb
add
aam
or
je
push
mov
cli
fs
inc
test
sbb
mov
scas
mov
lods
jecxz
xchg
shrl
jmp
sub
fcmovu
push
mov
xor
aaa
push
xor
jae
lret
mov
sub
cmp
mov
ficomps
repz
test
test
jmp
fcomip
jecxz
addr16
jbe
in
xchg
adc
and
mov
jo
adc
or
lods
and
pushf
cmp
sub
pushf
pop
jge
lods
push
lahf
cltd
in
fsubr
push
mov
cmp
in
sub
inc
push
xor
or
mov
jns
inc
adc
gs
cmp
call
sub
icebp
cwtl
pop
lret
xor
xlat
pop
adc
add
lcall
in
dec
rcl
int
pop
jge
es
cmpsl
sbb
in
mov
cltd
add
push
inc
mov
jg
arpl
sub
pop
sarb
mov
or
mov
jp
call
sbb
lret
fsubr
dec
dec
jae
mov
lds
pop
push
aam
fcmovnb
mov
push
xchg
or
sahf
outsl
mov
xchg
gs
sbb
test
out
das
rcrb
mov
xchg
push
test
aas
imul
jge
inc
dec
xchg
or
or
push
arpl
xchg
ljmp
cmp
das
or
sub
bound
cwtl
push
ljmp
ss
loope
cmpsb
mov
adc
rcrl
stos
xor
push
xchg
sarl
sub
dec
push
cmpsl
sub
test
or
in
jns
mov
jb
outsl
out
iret
push
xchg
es
and
pop
jne
out
adc
fisubrl
out
aas
mov
pop
sbb
ret
and
jge
icebp
in
xchg
pop
ret
xchg
fistpl
loope
xchg
lret
dec
sahf
sub
sub
pop
push
in
cltd
insl
and
or
scas
cmpsl
adcb
stc
cwtl
adc
add
roll
lret
rolb
lret
mov
mov
mov
xor
cmpsb
lea
xlat
push
popa
push
pop
das
push
enter
adcb
cmp
push
lret
out
adc
iret
icebp
pop
outsl
cli
test
arpl
insl
xchg
add
xor
aam
cmp
sbb
pusha
fwait
lea
fldt
imul
inc
add
mov
mov
jp
push
fwait
sti
imul
mov
and
mov
inc
inc
in
in
ds
bound
jo
je
push
cmp
fs
gs
andb
dec
inc
enter
cltd
pop
enter
sarl
popa
les
mov
add
aam
or
and
mov
jecxz
mov
pop
or
mov
mov
sti
dec
mov
pop
jae
push
xchg
add
or
jle
xchg
mov
xor
ficomps
xchg
xor
cmp
mov
mov
std
in
push
in
adc
xchg
out
mov
pop
jbe
xor
push
aad
lret
mov
aaa
outsb
push
out
into
scas
sbb
idivb
roll
inc
dec
subb
push
jo
add
fcmovb
jg
dec
clc
cmc
push
aaa
loop
pop
mull
dec
push
jg
inc
jb
imul
jl
lret
mov
sbb
xchg
cld
roll
sarb
insb
in
repz
or
mov
cmp
xor
inc
mov
into
xor
inc
jmp
or
movsb
mov
xchg
call
xchg
xchg
shlb
and
ljmp
xor
mov
or
adc
adc
aas
cmp
xlat
fcompl
movsb
rol
leave
ss
mov
outsl
ret
cltd
scas
push
inc
dec
add
mov
in
push
sub
pop
jle
fdivrl
test
mov
out
cmp
in
and
test
movsb
sub
jmp
sbb
mov
pop
nop
insl
jnp
pop
xchg
inc
cmp
inc
pop
cmp
xchg
dec
pusha
add
cmp
cmp
xor
mov
jo
repz
ss
cmp
pusha
mov
out
lret
add
push
dec
xor
xor
and
mov
test
cmp
fldenv
inc
loopne
jnp
and
lcall
or
or
ficoms
shrb
xor
data16
adc
lods
or
ret
mov
mov
mov
arpl
or
outsl
imul
mov
loopne
jns
sbb
arpl
sarl
icebp
push
dec
gs
mov
mov
mov
neg
mov
adc
out
scas
fucompp
push
and
inc
cmpb
add
mov
fistpll
cmp
dec
pop
in
leave
aad
xlat
iret
int
pop
push
inc
or
rcl
fisubrs
xorl
jle
push
xchg
fsubs
aaa
push
mov
mov
push
jae
sub
stos
add
mov
mov
dec
mov
addr16
dec
addl
xor
aam
scas
movsl
arpl
pop
jle
sub
xor
outsl
in
cltd
pusha
xor
inc
sbb
jb
and
rep
daa
aam
aad
mov
mov
dec
xchg
pop
mov
ljmp
jnp
dec
lret
mov
and
inc
add
add
xchg
test
ja
dec
int3
inc
loop
push
in
clc
pop
mov
mov
js
mov
mov
fcmovnbe
jle
int
in
mov
mov
xlat
stc
xchg
daa
and
ja
rcrb
fimull
mov
jl
cmp
repnz
mov
pop
std
fnstenv
jecxz
out
adc
stc
mov
or
lods
fimuls
mull
subl
push
cmp
dec
jb
pop
test
cld
push
addr16
test
enter
lea
pop
xor
xorb
jb
dec
adc
popa
sbb
or
ss
push
add
fld
movsb
ss
ficompl
stos
dec
lds
ret
decb
out
mov
mov
push
lret
out
mov
mov
mov
xor
fs
mov
repnz
dec
mov
mov
sahf
outsb
sub
jno
into
sbb
pop
aas
dec
push
pushf
bound
test
hlt
gs
out
add
mov
cmp
xor
jle
adc
push
push
adcl
or
addr16
xlat
not
int
pop
sbb
cmp
idiv
test
mov
mov
push
xor
xchg
mov
cmp
jbe
push
test
or
inc
add
int3
test
mov
push
cmp
inc
xchg
jl
out
aam
xchg
arpl
loope
mov
mov
into
push
mov
xor
inc
cmp
subb
rorb
lods
lds
insl
bound
stc
jnp
xor
inc
loopne
loopne
mov
push
call
jno
jae
lahf
or
jmp
mov
mov
mov
jle
sbb
xorl
lods
add
cmpsb
sub
sub
jge
xor
push
add
xor
mov
out
or
pop
sti
loope
dec
lods
aaa
dec
dec
xchg
mov
or
lret
or
ljmp
push
push
mov
or
notl
mov
push
cld
dec
inc
dec
jne
and
push
xchg
dec
mov
sahf
outsb
lcall
xchg
ljmp
sbb
mov
dec
daa
dec
inc
mov
sbb
dec
sbb
sbb
mov
popl
mov
aas
mov
arpl
or
mov
inc
and
cwtl
sbb
pushf
fisubrs
pop
cmp
dec
rolb
pushf
arpl
mov
push
pop
xlat
dec
cwtl
enter
lods
and
popa
cmovb
mov
out
xchg
adc
insl
pop
sti
outsl
sbb
fisubl
xchg
cmc
rcr
dec
ljmp
or
jg
mov
fwait
push
mov
fwait
imul
es
outsl
dec
mov
inc
adc
pop
mov
shl
andl
fimull
xchg
rorl
mov
aaa
icebp
push
sarb
idivb
stos
scas
jo
fldl
push
xchg
cld
xchg
andl
mov
stos
pop
mov
repnz
das
or
std
mov
repz
mov
or
mov
fs
aaa
xchg
lea
mov
cmp
rol
scas
int3
jns
push
and
jae
mov
or
in
and
cmp
sbb
popf
adc
aad
add
data16
mov
sbb
das
outsl
out
mov
sbb
xchg
push
js
mov
mov
inc
bound
movsl
ss
fldt
fwait
or
shll
loope
mov
es
frstor
pushf
test
xchg
mov
je
xor
xchg
inc
inc
jle
mov
dec
or
lret
es
adc
mov
add
mov
mov
shlb
and
je
push
sub
jecxz
stc
lods
call
xor
roll
mov
shl
popa
ret
jecxz
add
jb
mov
push
xchg
mov
adc
adc
mov
lahf
lcall
push
ljmp
movsl
nop
in
push
sub
movsl
mov
jb
pop
mov
sahf
mov
push
dec
int3
and
fdivrs
enter
mov
dec
out
mov
rorl
iret
sar
mov
push
xchg
add
imul
hlt
push
push
std
fsubp
aam
fildl
ret
rorl
pop
outsl
arpl
or
clc
mov
sub
lock
ficoml
xchg
push
push
push
and
adc
dec
inc
sub
jge
xor
cmp
cmc
mov
push
jmp
shrl
mulb
add
cs
mov
dec
and
ret
inc
fld
lds
aas
or
ljmp
sub
inc
insb
pushf
push
mov
push
lret
out
fildl
pop
or
mov
sbb
pop
lds
add
adc
or
std
adcl
mov
bnd
add
inc
cs
mov
or
repz
ljmp
fmuls
popf
int
popa
jne
jp
mov
fstl
push
mov
sub
mov
mov
inc
mov
mov
mov
negb
and
repnz
jne
movq
sbb
xor
jno
dec
scas
cmp
test
nop
mov
aaa
inc
or
jae
aaa
cltd
xor
lock
inc
icebp
mov
jno
sub
jae
js
cmp
fsubrs
inc
enter
jne
fs
out
shrl
in
cli
sbb
out
ret
sbb
lods
jmp
add
fwait
add
dec
sub
jp
push
cmpsb
imulb
xchg
mov
xor
fidivl
xor
inc
push
cli
addr16
decb
push
add
rorb
jne
push
jge
cmp
rorl
fdivl
or
sbb
jge
adc
mov
add
inc
dec
xchg
mov
cmp
vmovaps
pop
out
scas
pop
insb
push
gs
fnstsw
jae
ljmp
push
adc
ds
sbb
xor
or
add
cmpsl
xchg
in
jne
stos
loopne
nop
xor
xor
push
and
pop
xor
stc
pushf
sbb
push
mov
scas
arpl
lods
loopne
mov
bound
hlt
add
jnp
cld
push
mov
jo
lret
repz
add
test
sub
lea
xor
cli
add
adc
mov
fs
or
bound
jmp
push
clc
jecxz
lret
cmp
jge
dec
push
jne
pop
mov
in
jns
mov
lcall
sbb
inc
ss
sbb
pop
pop
enter
or
xor
popf
wrmsr
cld
ljmp
push
cmp
shlb
push
bound
test
sub
cmp
lret
sbb
adc
add
and
cmpsl
notl
or
push
xor
jbe
clc
xor
les
stos
jg
sub
mov
or
int
lods
dec
mov
pop
add
xchg
jecxz
neg
test
or
mov
xchg
cmp
mov
xchg
jl
or
movsl
xor
fsubrs
fldln2
cli
mov
sub
xchg
push
out
scas
mov
xlat
lret
addr16
rorb
pop
out
or
stc
pop
cmp
fcmovbe
jecxz
test
add
inc
jo
out
xchg
adc
repz
adc
or
sbb
push
test
std
adc
xchg
and
les
incl
cmp
sbb
lret
movsb
pop
or
jl
roll
mov
sub
in
inc
bound
aam
nop
dec
outsb
sub
push
mov
xlat
pop
push
xchg
dec
mov
out
inc
cmp
fildl
in
mov
je
adc
jb
insb
es
push
negb
shrw
jns
mov
mov
test
inc
pop
mov
adcb
andb
adc
sbb
subb
dec
cmpsl
cli
push
mov
addr16
mov
jbe
testb
arpl
add
push
xor
mov
push
cmp
addl
inc
and
sub
shll
add
push
add
rorb
lret
test
sub
scas
pop
lds
popf
icebp
and
mov
sti
adc
cmp
inc
mov
jecxz
idiv
test
aad
ljmp
xchg
jnp
imul
outsl
decl
stos
sub
inc
fmull
and
mov
inc
push
adc
lods
xor
ja
xchg
xchg
aad
shrl
xor
orl
sbbl
inc
std
decl
mov
push
dec
add
faddl
sub
jnp
jl
pop
ljmp
in
test
cmpsb
xchg
pop
jo
ljmp
data16
and
jo
icebp
cmpl
adc
push
dec
xchg
jne
test
movsl
imul
mov
das
aas
push
cwtl
jmp
leave
sbb
aam
add
jge
clc
push
cld
movsb
cmpsb
adc
fists
es
es
lret
std
push
jno
jle
lret
mov
aam
cmp
push
lcall
push
jl
mov
push
inc
xlat
ja
or
cmp
in
div
enter
outsb
mov
pop
jge
neg
push
or
xchg
sub
gs
jns
int3
or
test
xchg
scas
pop
popa
cwtl
jo
fimull
adc
popa
cli
inc
sbb
pop
cmp
jno
negl
arpl
xor
into
jle
int
mov
test
push
jbe
cld
cmp
xor
mov
inc
fsub
push
xorl
and
xchg
pop
faddl
cwtl
cwtl
je
cmp
inc
movsb
mov
les
rorb
test
insl
cmp
xor
insl
cltd
gs
lock
pop
test
mov
cwtl
aad
cs
aad
sbb
inc
mov
push
push
inc
pop
and
test
pop
adc
popa
inc
outsl
loope
enter
inc
outsb
aam
shrb
push
ret
int3
and
insb
jmp
mov
movsl
hlt
in
stos
in
push
jge
or
and
movsb
sub
imul
jo
ljmp
mov
sbb
sub
push
lds
stc
jle
movsl
sub
cmp
sti
loope
das
lahf
sub
sahf
sbb
sub
jb
and
and
sar
outsb
cmp
or
sub
int3
in
stos
lea
scas
lds
int3
dec
add
cltd
xchg
mov
imull
inc
fisubrl
mov
mov
push
lret
and
iret
or
dec
mov
scas
mov
repnz
mov
mov
fsubl
pop
lods
dec
movsb
unpcklps
cmp
loope
mov
hlt
pop
xchg
pushl
dec
int3
push
xchg
and
cmc
xchg
sbb
add
dec
out
xor
pusha
std
adc
popf
adc
push
js
inc
mov
xchg
cmp
pop
shrl
sub
fcom
daa
pop
js
popa
repnz
nop
xor
lock
mov
fsubrs
ljmp
or
xor
xor
mov
sub
icebp
sub
cltd
test
sbb
sbb
sub
sub
stc
das
add
popa
pop
testb
push
sahf
iret
divl
and
push
jnp
insl
sub
ljmp
loop
shlb
scas
sbb
mov
xor
pop
adc
cld
cmp
lods
out
xor
mov
push
mov
pop
pop
cmp
daa
sbb
add
frstor
je
mov
adc
cld
int
inc
test
mov
sub
inc
mov
push
adc
inc
push
daa
fld
ret
inc
jecxz
xor
js
fcompl
test
mov
aad
rcr
dec
lret
cmp
std
add
push
inc
aaa
and
mov
sub
imul
adc
pusha
imull
cwtl
jg
mov
or
xchg
jno
mov
hlt
inc
pop
in
pushf
sub
adc
fs
shlb
inc
lea
ret
inc
stos
adc
pop
mov
aad
dec
mov
dec
mov
add
scas
adc
push
outsb
mov
mov
cli
insb
adc
ret
mov
mov
test
adc
mov
leave
cmp
movsb
fmul
pop
xchg
add
cltd
ret
lds
pop
and
add
xor
lock
fwait
dec
push
cmp
fs
add
divb
rcrl
cltd
xor
pusha
xchg
sub
cmp
mov
adc
hlt
and
inc
lods
cltd
cmc
fistps
mov
out
mov
inc
cmp
pop
mov
in
insl
add
inc
jmp
bound
cmp
cmp
push
in
jbe
iret
and
ficomps
std
fstl
je
sbb
popa
pop
pop
in
xor
stc
in
sub
fldl
arpl
shrb
pop
ja
rol
xchg
or
mov
sbb
into
add
or
pop
les
leave
add
das
lret
bound
adc
movsb
js
in
pop
and
pop
loope
add
mov
push
xchg
xor
cmp
inc
push
gs
test
fldcw
jbe
jo
outsl
pop
or
add
shlb
xor
jno
push
sub
int3
cs
mov
dec
cmp
push
lea
mov
stc
decl
jmp
fcmove
fs
aad
mov
push
test
sti
lcall
clc
hlt
cmp
and
jmp
subb
jbe
mov
jmp
addr16
fwait
xor
into
data16
stos
or
add
xor
sub
mov
inc
pop
xchg
mov
mov
cmpl
jns
xchg
adc
xchg
ds
call
jle
sahf
jle
jecxz
dec
push
push
pop
or
dec
mov
aad
pop
push
in
lods
repnz
cmp
leave
jle
xor
fidivs
pop
and
add
mov
sub
sarb
jg
xchg
call
mov
ljmp
fcoms
out
mov
ss
ss
mov
mov
mov
push
xor
std
xor
pushf
sbb
jbe
idivl
scas
call
in
lret
xchg
adc
test
js
sbb
jae
lret
cmpsb
sub
adc
imul
jne
mov
lds
mov
mov
adc
dec
mov
mov
sbb
iret
leave
add
imul
sub
cmpsl
mov
push
bound
mov
pop
es
adc
push
and
sbb
std
push
rcll
dec
movsl
stos
dec
dec
xchg
pop
adc
ja
je
xor
xor
or
andl
cmc
mov
jnp
das
and
add
icebp
inc
rolb
adc
cwtl
xor
mov
mov
dec
add
mov
test
mov
mov
jl
jl
leave
sub
push
pop
cmpsb
push
mov
insb
sbb
sbb
dec
or
or
mov
inc
or
out
and
adc
sub
int3
enter
adc
sbb
xor
out
add
les
mov
out
mov
cmp
lret
inc
aam
loop
daa
int
push
movsl
imul
lcall
pop
or
dec
sti
hlt
cmpsl
dec
leave
cmp
lods
mov
pop
cmp
fwait
das
loop
std
push
lcall
pop
hlt
fsub
mov
mov
jge
push
mov
lods
cmpsl
pop
adc
push
jnp
mov
add
les
pop
shr
xor
push
cmpsb
cmp
scas
and
pop
cmp
cmc
adc
stos
nop
push
jbe
out
imul
and
mov
pop
in
enter
pusha
ljmp
gs
fs
xor
push
int3
sbb
mov
stc
lahf
popa
les
cs
jmp
in
aad
data16
arpl
add
inc
cmp
pusha
pop
sbb
dec
movsb
dec
push
sbb
mov
nop
ss
adc
cmpl
jne
inc
shll
sbb
filds
lret
jne
je
add
and
fnstcw
stc
call
and
xchg
nop
cwtl
ja
es
push
lret
push
adc
test
pop
popa
std
out
xor
addb
nop
out
adc
push
psllq
iret
fisubrl
adc
cmp
add
jecxz
and
xor
xor
jg
sub
xchg
test
stos
int
sbb
aad
sub
xchg
lods
jmp
pop
add
clc
outsl
into
push
movb
sub
jbe
sbb
icebp
outsl
mov
sti
xor
xchg
ret
and
and
test
inc
inc
fwait
jp
cwtl
cmpsb
xor
mov
cmc
fwait
push
arpl
in
push
add
shlb
inc
inc
and
fildl
push
fdivrl
popa
mov
pop
sub
jecxz
mov
fwait
jnp
add
adc
int3
out
in
shrl
inc
push
lret
stos
mov
sbb
cs
mov
and
jns
insl
push
xlat
rorl
mov
lcall
std
and
xor
cmp
ds
pop
test
push
jmp
sub
leave
call
pop
mov
or
pop
inc
pop
push
dec
sub
mov
sbb
pop
inc
and
sbb
cli
in
xor
repz
movb
and
push
or
out
xor
fcmovnu
mov
adc
clc
lea
push
je
call
xchg
loope
ret
sub
xchg
insb
les
xlat
int3
adc
jno
test
jb
dec
push
ror
and
pop
cmp
rclb
into
outsb
enter
je
ss
hlt
loope
in
nop
cmp
shr
or
gs
sarb
mov
push
xor
call
scas
pop
push
add
pop
in
fisubl
add
shl
mov
dec
insb
ja
fcompp
call
popa
sbb
push
loop
jge
shl
outsl
inc
xcrypt-ofb
cmpsl
jmp
inc
push
push
lods
mov
xor
dec
xor
bswap
mov
mov
xor
or
es
xor
fstpt
leave
pop
pop
test
inc
pop
orl
push
jns
push
fcoms
call
xchg
arpl
dec
iret
test
out
cmpsb
jmp
insl
jno
mov
fucomi
loope
and
add
jae
cmp
shlb
pusha
es
push
dec
shll
stos
push
rcrl
mov
push
ss
pushf
push
push
mov
cmp
mov
mov
fidivrl
sahf
inc
dec
mov
fwait
mov
addr16
sbb
roll
cmpsl
or
clc
mov
mov
mov
add
or
or
fisubrs
lods
fcom
popa
cltd
stc
push
je
iret
shl
pop
fwait
arpl
loope
cmpsl
mov
xchg
or
xchg
xor
ja
cmp
pop
pusha
ja
sbb
shrl
adc
lock
mov
mov
les
xchg
xchg
cmpsl
push
dec
pop
sub
push
rcrb
mov
xchg
dec
into
loope
xchg
push
rclb
sub
cmpsl
in
repnz
ret
pop
adc
inc
dec
xchg
fwait
les
xlat
push
or
ret
or
cltd
jno
stc
mov
enter
pop
dec
push
xchg
sub
mov
cmp
or
inc
sub
not
or
dec
lcall
neg
add
fistps
dec
adc
push
lods
mov
push
fimull
xchg
add
les
mov
aaa
jg
push
cmpsl
fnstenv
cmc
shlb
or
sti
add
xchg
sub
mov
dec
cmp
and
mov
push
sbb
push
cwtl
aad
push
iret
int3
jge
js
psubb
xchg
pop
add
cmpsb
mov
adc
jecxz
stos
push
pop
lahf
inc
sbb
out
add
adc
dec
cld
js
xchg
notb
lea
and
loop
pop
das
and
inc
dec
gs
sti
push
lret
xchg
pusha
loope
push
cmpsb
aas
cld
js
inc
adc
outsl
ljmp
fwait
and
out
adcl
xor
stc
inc
cmp
add
add
jp
adc
inc
jns
es
pusha
popf
in
mov
inc
loope
inc
mov
inc
mov
or
in
mov
mov
insb
sbb
fbld
dec
mov
insl
das
sbb
ret
scas
out
inc
jmp
pop
into
mov
das
adc
push
movsb
add
in
inc
fs
jbe
arpl
adc
jge
ja
xchg
fsubr
stos
xor
pop
sahf
pop
push
jbe
popf
int
lods
jle
push
ss
in
cld
ja
and
push
insb
push
pop
add
mov
xor
jno
sti
imul
push
sti
sub
stos
lods
call
repnz
orb
out
mov
lcall
cmp
js
mov
dec
push
bound
rorb
mov
ss
xchg
jns,pt
stos
fcomps
movsl
roll
cmpsb
shlb
pop
mov
mov
xchg
add
mov
sub
xor
fstp
mov
adc
sbb
fcmovu
jmp
sahf
xchg
pop
xor
xor
movsl
cwtl
push
mov
cld
jge
test
mov
and
outsb
js
xor
push
adc
outsl
cmp
ds
pop
decl
xchg
ret
mov
adcb
popf
mov
pop
pusha
enter
fstpl
sub
jo
push
imul
mov
xor
push
dec
loop
cmp
clc
dec
out
xor
mov
lods
dec
jge
mov
mov
mov
add
inc
aaa
enter
add
pop
inc
inc
xlat
xchg
repz
mov
mov
sti
incb
jge
pop
xchg
cmp
scas
or
xor
sub
mov
test
in
cli
imulb
add
sub
pusha
mov
aad
jbe
in
xor
stos
lret
lds
jno
insl
lcall
jg
andb
jb
aad
stc
xchg
bound
outsl
mov
sbb
cmp
insb
jmp
jne
in
repz
lret
sub
or
and
inc
push
push
jmp
add
push
leave
test
fadd
xchg
ret
lea
cmpl
addr16
loopne
mov
jns
and
push
or
xchg
rcl
dec
stos
pushf
and
mov
pop
outsl
sub
es
loope
outsl
into
inc
ljmp
push
mov
ret
jmp
and
pop
lcall
imul
sbb
cmpsl
inc
mov
xchg
dec
push
mov
sub
jne
clc
mov
fisubrs
scas
cmpsl
repz
cmpl
popa
pop
scas
add
adcl
ror
in
fmuls
jns
lret
jg
inc
mov
gs
mov
decb
cmp
lods
loop
cmp
adc
cmp
and
mulb
pop
xor
xchg
push
push
out
jge
scas
xchg
hlt
lahf
jnp
push
lahf
divb
pop
cld
mov
lods
mov
or
les
pop
mov
push
sti
fisttpll
out
in
or
add
fldl
adc
cmp
jl
movsl
jecxz
addr16
fdiv
out
push
shl
cli
call
fsub
adc
cmp
insl
icebp
ret
pop
mov
out
inc
add
mull
ds
stos
imul
and
add
pop
cmp
adc
mov
dec
cmp
sbb
cs
nop
fisubl
push
fldl
in
mov
push
mov
mov
xchg
add
mov
mov
and
xor
pop
pop
ret
dec
dec
sub
push
sar
xchg
outsb
xor
fcomp
mov
ljmp
sbb
mov
enter
aaa
stc
push
dec
lods
and
les
mov
sbbb
mov
xor
push
adc
xchg
out
xchg
mov
and
fwait
mov
mov
cmpsl
or
test
pop
or
aam
fsubs
cmpsl
in
add
scas
jns
mov
push
movsb
stos
mov
int
xchg
test
mov
pop
fxch
outsl
inc
mov
shld
mov
leave
cmp
push
sbb
idiv
sub
jne
add
icebp
scas
in
jbe
outsb
push
imul
hlt
int
xor
popf
xchg
outsl
sub
roll
les
push
xor
cmpsb
xor
out
lcall
sbb
mov
out
or
sti
inc
xchg
movsl
xor
fsubs
cltd
jmp
add
loopne
out
mov
mov
cld
push
add
div
push
fs
lret
xlat
mov
mov
inc
aad
ja
leave
push
add
outsl
sarb
mov
sub
mov
rclb
fistpl
sahf
js
cmp
push
in
fisubrs
testl
test
sbb
push
loop
gs
pop
bound
cmovno
test
and
jg
icebp
add
inc
mov
mov
sbb
mov
outsl
or
xchg
daa
dec
in
loop
xor
jne
cs
or
dec
mov
popf
or
push
scas
mov
xor
imul
pushf
cli
add
pushf
mov
adc
push
dec
into
sub
sti
and
out
enter
inc
lock
push
jno
and
and
jl
dec
mov
dec
dec
out
push
jns
hlt
test
xchg
mov
mov
es
mov
push
add
sbb
ficompl
shll
inc
dec
cli
in
ffree
xchg
inc
pop
rolb
lret
adc
sub
movsl
mov
in
lret
pop
popa
dec
fcompl
and
pusha
mov
push
fwait
es
fimull
sbb
lea
push
ds
int
aas
dec
xchg
hlt
cmp
mov
inc
arpl
inc
cmpsb
dec
icebp
dec
mov
dec
ja
js
sbb
push
push
xor
inc
sbb
add
ret
mov
pop
sbb
dec
mov
stos
xlat
xor
mov
dec
or
mov
negb
es
shr
sub
xor
stc
test
or
mov
push
sbb
lea
pop
push
lahf
jp
inc
xor
out
popa
sti
jb
fdivrs
rol
mov
sbb
cmpsl
js
pop
dec
ficoml
mov
or
repnz
fbstp
test
test
jl
mov
pop
pop
fsubr
cmp
loope
push
cmp
loopne
arpl
sbb
out
pop
xchg
jns
stos
addr16
sbb
out
repnz
dec
cwtl
mov
insb
rorb
jbe
dec
mov
cwtl
jecxz
jbe
lret
or
int3
clc
cli
sub
movsl
fwait
pop
lods
mov
dec
mov
out
js
or
pop
data16
cmpsb
sbb
mov
sbb
ficoms
jmp
out
ror
test
push
movsb
cli
mov
shll
inc
or
jns
xchg
test
mov
push
mov
sbbb
xchg
mov
into
add
sarb
add
loop
fsubr
dec
xor
aas
ret
lret
mov
dec
mov
cmpsl
ret
jns
lods
dec
cmc
and
mov
dec
dec
sub
shll
hlt
out
outsb
add
add
mov
out
push
sub
adc
or
ljmp
insl
out
mov
movd
lcall
or
mov
fistl
test
cwtl
dec
or
adc
inc
aas
test
jecxz
mov
lcall
lahf
cmp
mov
xor
jecxz
jmp
dec
pop
cs
and
xchg
cld
xchg
xchg
sbb
push
xchg
mov
jb
or
sbb
adc
sti
sbb
subb
arpl
push
mov
cltd
pushf
fisubrs
int
inc
xor
pop
lcall
pushf
in
std
lret
inc
lret
outsb
and
inc
sub
push
pusha
subb
outsb
jne
outsl
out
imul
mov
dec
mov
add
scas
lret
mov
imul
jg
fwait
leave
ljmp
and
jmp
xchg
nop
dec
aas
add
call
cmp
mov
sub
ret
test
cmp
dec
push
adc
arpl
lret
or
pop
out
lahf
out
sti
xchg
inc
sbb
sub
cmpsb
repz
add
jno
outsl
push
sbb
shll
fs
add
aaa
test
jo
scas
xchg
jns
mov
aam
aas
in
fisttpll
in
jne
cmp
inc
out
add
and
leave
adc
aad
sbb
cmp
cwtl
sub
jns
mov
fiaddl
out
mov
push
popa
and
add
xchg
mov
push
scas
cmpsb
stos
out
in
cltd
inc
addr16
adc
enter
adc
mov
ret
push
push
repz
inc
cwtl
pop
push
pop
mov
in
cmp
add
jae,pn
aaa
in
sbb
cmp
xlat
push
push
ret
std
adc
push
xor
test
fdivrs
popf
xchg
int3
loopew
mov
imul
pop
lds
sub
lods
push
mov
shl
xchg
mov
arpl
cmp
add
stos
mov
mov
cwtl
xchg
cmpsb
xor
shr
loop
inc
popa
mov
jmp
in
imul
mov
rorb
jmp
js
scas
xor
adc
inc
outsl
shl
popa
subb
jbe
in
mov
outsb
out
test
xchg
aas
nop
mov
push
ss
in
rcrl
mov
adcl
pop
add
shrb
sub
cli
iret
pop
ss
rcr
and
movsb
aaa
repnz
pop
outsl
leave
ss
leave
adc
add
pushf
adc
push
jb
cmp
jl
shlb
and
mov
enter
mov
mov
dec
mov
dec
out
xchg
inc
test
andl
sub
cwtl
enter
cli
jb
ret
mov
imul
aad
mov
out
mov
fwait
add
cmp
mov
mov
pop
inc
sbb
mov
push
ja
enter
call
dec
cmp
xor
mov
jns
pop
shlb
jle
lret
adcl
cwtl
es
xchg
aas
adc
sbb
dec
pop
mov
lods
test
out
push
adc
bound
xor
mov
negl
cmp
cmpsl
pop
das
adc
aad
repnz
into
test
mov
adc
add
repnz
fdivrl
imul
mov
or
into
mov
dec
dec
cld
dec
outsb
xor
cmp
jle
pop
cmp
jns
xchg
rorl
ret
out
mov
xor
sub
daa
push
cmp
dec
orb
or
mov
inc
into
int
mov
aaa
idivl
jno
sbb
adc
jno
cmp
add
and
add
test
pop
nop
or
sbb
jle
cmp
pop
push
scas
inc
addr16
lods
adc
dec
and
ret
in
cmpsb
xor
dec
add
mov
and
mov
fucomp
divb
cmp
push
das
sbb
mov
push
imul
inc
mov
cmpsl
xor
sub
and
in
les
aam
arpl
xchg
lods
cs
fs
mov
mov
gs
mov
adcl
cmp
in
cmp
dec
dec
shl
push
jg
xor
pop
lea
cmp
lds
jmp
mov
jmp
clc
sbb
dec
mov
femms
into
push
sbb
xchg
fistpl
sub
ljmp
cmp
mov
pop
or
lock
sbb
ret
pop
add
in
loope
sub
mull
mov
shr
andb
iret
pop
je
stc
dec
outsb
dec
ss
mov
dec
sub
lods
sbb
int3
add
iret
movups
arpl
in
aas
mov
cmp
ret
inc
cli
cmp
adc
xor
sti
push
sbb
les
mov
inc
mov
daa
test
sahf
sbb
jmp
mov
sub
rorb
rcrl
xchg
leave
es
or
je
mov
fdivr
ror
sub
fldenv
push
dec
mov
nop
data16
push
dec
jge
mov
fs
mov
popa
push
mov
mov
arpl
xchg
push
mov
pop
std
pop
push
gs
and
andb
test
xchg
push
cmp
xor
les
cwtl
dec
cmc
pop
loope
mov
add
inc
jo
enter
iret
repnz
into
cwtl
ss
ljmp
dec
ljmp
je
movsl
mov
adc
dec
into
fdivrs
inc
fsubs
xchg
mov
mov
xorl
test
and
add
cmp
xlat
jmp
test
data16
inc
fs
xchg
mov
out
push
push
rolb
jecxz
gs
fisubl
cs
xchg
shl
xchg
nop
orl
loop
stos
fs
mov
outsb
jmp
xlat
cmp
fdivr
pop
mov
scas
jae
cmpsb
gs
pop
adc
subl
jl
xchg
aad
ret
cmc
push
mov
bound
hlt
into
and
cld
xor
inc
push
jecxz
js
mov
jecxz
icebp
fcomps
pushf
cltd
mov
pop
das
xchg
push
imul
adc
adcl
popa
bound
push
jl
sti
xchg
add
cmp
mov
movsb
nop
push
lods
in
iret
xor
mov
cmp
jbe
pop
js
sub
or
clc
shlb
cs
or
push
xchg
jbe
clc
mov
in
jnp
dec
xchg
nop
out
das
ret
mov
ret
jb
push
fcomps
fidivrl
jge
push
clc
mov
cmp
jae
jnp
dec
scas
push
fildl
mov
divl
filds
jbe
sbb
call
and
cs
ljmp
push
notb
dec
cmp
andl
fadd
insl
cltd
out
mov
rorb
jo
ss
cwtl
negl
lods
sbb
push
cli
jge
ret
sub
push
push
stos
sahf
dec
pop
and
xor
out
push
pop
mov
sub
cmp
aaa
into
sub
imull
cmp
push
es
jb
lret
mov
orl
scas
jno
jbe
daa
lret
aad
or
shll
inc
sbb
add
or
pop
repnz
loopne
adc
addl
sub
or
nop
bound
jmp
jae
inc
stos
pop
inc
jo
shr
push
dec
scas
sub
mov
fidivs
es
adc
jl
test
inc
lods
or
add
mov
xchg
mov
clc
pop
aaa
and
add
or
std
fwait
xchg
daa
rcrl
fiadds
les
lds
adc
add
mov
and
jno
movsl
xor
add
sbb
add
sbb
push
imul
inc
sub
inc
mov
stc
push
and
stos
dec
repz
pop
mov
repnz
mov
int3
iret
mov
cmp
sbb
das
fmuls
jo
repnz
mov
pusha
insl
add
adc
pop
scas
and
push
mov
pop
std
negb
loopne
lods
dec
push
sbb
xchg
push
rcll
fstpt
push
into
pop
dec
push
bnd
idivl
out
test
es
pop
and
sbb
mov
arpl
push
in
dec
adc
ljmp
mov
fwait
xchg
bound
insl
push
fildl
sub
push
lock
push
push
loopne
pop
neg
jle
pop
pushf
jo
shl
push
push
pop
and
ja
jne
push
jecxz
stos
popa
mov
push
loop
adc
push
xchg
lret
cmpsl
aaa
subl
addb
push
jp
push
pop
dec
cmc
mov
sbb
sub
xchg
push
imul
dec
jg
mov
adc
ja
cmp
pop
movsb
push
push
jl
push
xchg
dec
lea
mov
aaa
xchg
stos
sbb
pop
and
push
inc
out
mov
jp,pt
xor
dec
shrl
je
sbb
popl
mov
xor
pushf
pop
rclb
test
push
cmp
js
add
mov
popf
and
mov
mov
fsubrl
scas
sub
lret
mov
xor
mov
pop
sub
sbb
aad
sbb
adc
pop
mov
mov
adcl
or
adcl
sbb
out
sahf
aam
jnp
xor
mov
ds
mov
gs
ficoml
inc
fstl
inc
or
out
inc
xor
inc
push
mov
jbe
mov
pop
leave
movsb
jmp
mov
cmp
and
and
pop
sbb
lods
icebp
icebp
in
cmp
iret
aaa
out
in
dec
push
lahf
jbe
shll
or
mov
sbb
ficomps
sbb
fs
scas
js
test
test
mov
cmp
aad
dec
sbb
icebp
inc
xor
ret
lret
popa
xchg
js
cmpsl
fldl
out
dec
push
in
shrl
add
inc
xor
xchg
add
mov
call
mov
push
imul
imul
in
or
sbb
jmp
inc
pop
clc
js
xchg
pop
adc
call
inc
xor
fwait
pop
cmpsb
and
shl
dec
xor
ss
and
in
jne
and
hlt
iret
mov
movsb
dec
mov
mov
sbb
push
xor
lods
mov
pop
pop
outsl
sbb
and
cld
or
mov
repnz
push
mov
jmp
test
ja
xchg
mov
push
pop
ja
push
mov
pop
xor
sbb
or
mov
mov
fnstcw
cmp
sbb
jle
addr16
push
dec
aam
sti
jnp
addr16
rclb
test
js
in
mov
jmp
sub
mov
in
xor
notb
mov
loopne
mov
loopne
push
out
pop
movsb
lods
mov
jns
clc
sub
push
shr
es
cmpsb
dec
loopne
idivl
mov
imul
jecxz
jne
mov
das
add
jle
cmp
lret
mov
mov
imul
je
fcomip
faddl
xchg
fwait
imul
push
cmpsb
fisubs
inc
mov
jle
or
aam
ds
mov
ds
push
insl
and
and
push
sarb
lods
rcrl
aas
inc
iret
mov
or
pop
fsubp
pop
or
jmp
mov
or
sarl
outsl
xor
mov
lock
inc
int3
mov
sub
inc
push
loope
push
push
adc
xchg
iret
push
ss
jmp
repnz
push
hlt
enter
out
jp
lock
loope
xlat
movsl
les
inc
out
cmpsl
leave
adc
jbe
mov
js
test
in
fdivrs
jbe
dec
jle
adc
add
push
and
xor
push
xlat
add
sub
jge
mov
xchg
pop
mov
in
jge
xor
sbb
mov
pop
xor
or
xor
cmp
mov
cltd
cmp
fldcw
idivl
hlt
inc
pop
mov
into
mov
cmp
inc
loopne
out
ret
les
sub
pop
jge
xor
popa
cmp
fs
sbb
loop
and
or
gs
dec
sub
sub
mov
lock
jmp
movntps
arpl
mov
mov
pop
and
and
and
cli
adc
iret
sub
jl
pop
or
mov
mov
jge
add
jno
push
mov
dec
inc
or
mov
psubw
push
mov
push
xor
and
jecxz
pusha
jecxz
or
dec
stos
xchg
andl
dec
jp
adc
aaa
pop
lahf
jp
les
sbb
add
pop
rcr
inc
jbe
xor
push
jno
and
sub
mov
xorl
xor
xchg
mov
fnsave
mov
jp
inc
mov
out
and
lcall
pop
push
jno
dec
xchg
sbb
gs
cmpsl
adc
ja
xor
cmp
push
and
adc
pop
adc
imul
dec
out
in
out
xchg
scas
jecxz
jge
pop
xchg
and
test
inc
cmp
sub
out
imul
rcr
xchg
and
and
nop
mov
cmp
jae
fisubrl
lret
lea
pop
xor
xor
pop
jbe
and
jb
lret
pop
mov
ret
add
jno
ja
jne
or
lcall
or
in
lret
lea
and
xchg
cmpsl
ja
and
sub
or
jb
xchg
cwtl
xor
inc
ljmp
cmp
cmc
add
ljmp
xchg
push
xchg
sub
xchg
jg
pop
mov
xchg
pop
or
mov
lock
adc
jg
cli
movsl
int3
insl
xor
mov
lret
inc
mov
in
push
and
and
fidivrs
adc
mov
sub
pop
dec
outsl
divl
sub
adc
fistl
pop
testb
pop
dec
sub
add
xor
test
xorb
hlt
lods
sub
jns
mov
mov
push
inc
sub
inc
test
aaa
ret
push
out
jl
mov
dec
xor
aad
push
mov
xlat
test
scas
lahf
mov
movsb
adc
cmp
push
inc
jle
add
out
in
xchg
xorb
sub
mov
jge
sti
sbb
mov
and
lcall
out
ljmp
les
das
jmp
scas
gs
adc
outsl
ret
xchg
sbb
out
enter
xor
fwait
mov
jg
stc
mov
push
sub
daa
sub
inc
rdpmc
push
movsb
add
push
or
pop
pushf
stc
andb
jmp
lods
push
test
xchg
int3
or
adc
cmp
or
and
mov
in
test
mov
ja
scas
push
lret
fbstp
mov
dec
mov
test
jne
iret
mov
rorl
jp
mov
mov
cmp
scas
das
mov
repz
inc
and
jnp
xor
loop
mov
jmp
aad
or
cmc
lret
cmp
idiv
xchg
adc
add
sti
jmp
xchg
mov
xchg
aam
lds
inc
adc
adc
add
aas
pop
mov
pop
pop
dec
call
inc
inc
pop
push
push
cmp
xor
mov
xchg
mov
out
rol
or
mov
push
aad
mov
or
out
shl
pop
dec
cmp
fwait
add
ss
jae
lods
imul
fsubr
jg
add
pusha
sbb
daa
push
mov
sub
push
adc
mov
pop
xchg
out
mov
xchg
cli
cmpsb
out
xchg
movsl
or
sbb
pop
dec
pop
fcmovne
lret
mov
jle
subb
ljmp
cmp
mov
mov
and
lods
ret
les
and
test
adc
fcomp
lock
repz
std
xchg
and
cmp
jecxz
xchg
jno
scas
sub
imul
push
or
jmp
movzbl
aam
push
add
or
mov
hlt
pop
pop
cwtl
test
adc
lcall
inc
inc
test
jp
pop
add
out
pop
ja
insl
xchg
int3
lds
int3
inc
mul
in
popa
into
idivb
sbb
xchg
mov
mov
dec
in
jne
cmp
outsl
and
enter
pusha
mov
sbb
xor
leave
mov
and
test
push
mov
jns
pop
jns
divb
hlt
popf
xchg
adc
fst
iret
aam
fbstp
push
add
sub
mov
lcall
cmp
cld
pop
mov
pushf
into
mov
dec
sub
lcall
mov
ds
cmp
dec
mov
mov
ds
stos
sbb
lcall
inc
push
cmp
mov
adc
loopne
jle
adc
jp
cs
sub
sbb
repnz
push
repnz
adc
lcall
add
lock
in
mov
xchg
xchg
pushf
sub
xor
xchg
in
popf
mov
loope
xor
in
cmp
cmp
in
sbb
in
mov
jae
stos
pushf
or
push
in
xor
push
repz
push
popf
out
pop
cmp
cli
ljmp
out
out
ret
aad
icebp
pushf
mov
xchg
test
and
jo
rorl
shr
xorl
add
or
aaa
xor
mov
or
lret
sub
iret
dec
jmp
loop
nop
fdivl
aaa
cmp
sbb
orl
fwait
jbe
sahf
push
sbb
pop
mov
sarb
inc
ds
cwtl
mov
arpl
sbb
loop
lods
and
out
sbbl
fcoml
xchg
repz
sbb
jb
dec
adc
pop
mov
adc
in
pop
push
add
fldl
mov
rolb
mov
pop
push
jge
xchg
int3
nop
outsl
mov
hlt
sub
div
arpl
and
test
imul
inc
cmpsl
fnstsw
cmp
mov
insl
in
sahf
sbb
xchg
cwtl
inc
ja
cli
dec
ret
out
icebp
push
sbb
lcall
leave
add
out
cmp
jno
sbb
sub
push
dec
dec
push
aaa
cmc
xor
pushf
xchg
mov
lods
out
adc
ds
fistpl
xor
filds
pop
shl
sarb
mov
dec
outsb
in
pop
sahf
pop
gs
lds
jmp
push
out
fpatan
addb
popa
mov
out
cmp
repz
mov
add
scas
out
outsl
xchg
popa
sub
pop
jg
lods
push
mov
dec
mov
xchg
push
adc
rorl
sub
mov
arpl
fs
mov
popa
inc
jb
pop
xor
mov
daa
xchg
loope
loope
jne
mov
cltd
add
cld
leave
cmc
push
xchg
mov
push
xchg
int3
repnz
aas
popf
xchg
and
mov
xchg
push
and
xor
push
std
mov
mov
dec
sti
dec
mov
fisttpll
dec
push
bound
fstpl
jmp
or
in
insl
push
repnz
sbb
adc
test
mov
sahf
jno
lcall
aad
jnp
xor
insb
test
add
xchg
xchg
inc
mov
out
jl
adc
cmp
scas
stc
neg
cmp
dec
sbb
mov
mov
dec
in
ret
xchg
add
xor
cmpsl
dec
dec
das
mov
iret
mov
lds
pop
js
sub
mov
pop
xchg
jne
jge
add
scas
cmp
sbb
out
rcrb
mov
jg
lods
repnz
dec
lock
xchg
out
dec
iret
mov
imul
sbb
daa
push
or
push
push
or
out
mov
adc
ret
and
mov
jnp
and
out
inc
lahf
or
orl
pop
cmp
mov
lcall
out
fisttps
xchg
pop
cmp
dec
xchg
add
in
mov
dec
push
pop
icebp
sti
cmp
mov
dec
xchg
dec
xchg
std
aad
mov
add
mov
inc
repz
aaa
adc
repnz
repz
mov
xor
popa
popl
cmc
repz
xor
lret
sub
jo
orl
xor
enter
cmp
addr16
out
mov
fs
lahf
xchg
test
dec
mov
into
adc
outsb
pop
xor
jge
sbbb
cmp
pop
add
inc
insb
ret
inc
int3
adcb
push
adc
stc
imull
rcrb
and
push
popf
add
jecxz
fnstenv
movsb
xchg
jecxz
repnz
jmp
jle
idivb
push
add
loope
movsl
mov
push
jge
test
mov
cmc
pusha
xchg
fstpt
dec
movsb
repz
rcll
bound
mov
sbb
add
and
in
lods
aaa
das
pop
add
scas
scas
cmp
ss
mov
es
xchg
movsb
mov
fcomp
or
sbb
mov
inc
pop
or
aaa
xchg
pop
ss
push
jmp
push
in
mov
jmp
loop
mov
fdivs
movsb
push
ljmp
mov
test
loop
out
fbld
pop
popa
sub
mov
push
aas
out
push
jno
popa
fists
popf
mov
xchg
jecxz
rcl
loopne
addr16
and
or
cld
shlb
enter
popf
add
adc
xor
sub
adc
dec
je
ret
pop
adc
jbe
dec
push
adc
xchg
aas
movsl
dec
add
pop
cmpsb
loopne
jmp
loopne
out
cmp
popf
mov
dec
ror
leave
mov
test
cs
addr16
adc
insb
cmc
sbb
jl
and
jg
ja
shlb
jae
mov
mov
aaa
mov
jbe
xor
std
push
faddl
cmp
jo
cmp
and
js
or
push
movsl
adc
inc
imul
dec
sub
inc
data16
pop
add
mov
aaa
shlb
test
or
cmp
cli
lahf
stos
test
into
popf
ret
add
mov
testb
push
pop
inc
cmc
xchg
jecxz
cmp
pop
call
mov
jo
dec
imul
mov
in
lods
test
imul
and
pop
mov
mov
mov
xor
jae
push
popl
xor
jno
mov
inc
dec
xchg
adc
rcl
aas
sbb
arpl
sub
jb
push
out
aad
mov
or
push
or
sub
test
pop
lahf
xor
push
repnz
mov
sub
dec
dec
mov
loope
sub
lahf
into
loopne
sub
test
sub
fwait
mov
lret
es
push
add
xlat
aas
pop
popa
push
inc
inc
lea
or
test
repz
lods
leave
mov
mov
clc
arpl
fists
js
icebp
dec
loop
js
iret
sbb
dec
sbb
add
pop
push
cmpl
jge
shll
inc
mov
add
mov
jne
mov
mov
fwait
pop
jo
fisubrl
in
lret
mov
push
mov
repnz
repz
push
xchg
jne
dec
cmpsl
pusha
out
ret
xchg
cmc
adc
cmp
std
mov
stc
cmp
jae
popa
add
sub
cmpsl
pop
sbb
test
xchg
sub
mov
xchg
add
cmpsb
sub
bnd
test
jp
sti
mov
push
push
xorb
insb
jo
sbb
scas
bound
add
imul
movsl
pop
push
and
dec
iret
fsts
aas
or
jbe
xchg
mov
or
rcrb
pop
leave
sahf
cmp
jl
pop
jns
imul
iret
leave
jbe
int
das
sbb
push
adc
pop
popa
insb
rol
mov
ret
out
mov
jmp
xchg
int3
lds
aam
mov
je
data16
loope
gs
in
test
jne
push
int
lods
in
data16
idiv
inc
icebp
js
xchg
jecxz
and
push
inc
push
stos
aad
add
cld
add
fistl
jl
pop
fstpt
and
mov
sysret
out
xor
decb
mov
loopne
mov
repnz
inc
cmp
mov
jmp
mov
and
mov
enter
push
daa
lock
nop
dec
or
inc
inc
or
outsl
xchg
jmp
mov
mov
inc
and
xor
mov
inc
int3
fmuls
mov
mov
test
test
mov
lcall
out
inc
inc
je
decl
cltd
in
mov
push
push
loope
out
lea
lcall
inc
dec
sti
adc
jo
dec
mov
jecxz
addr16
jno
xorl
in
mov
mov
es
ja
push
dec
xchg
popf
jp
das
enter
dec
or
adc
sbb
mov
pop
movsb
loope
mov
xor
pop
ret
mov
lock
xchg
inc
adc
jo
cwtl
mov
ds
add
mov
int
jnp
pushf
int3
outsl
fidivrs
push
push
sub
stc
push
pop
add
xchg
outsl
add
addr16
push
push
push
repz
push
rorl
sub
pop
repz
and
ja
dec
jl
hlt
divb
adcl
clc
mov
lods
mov
jg
or
pop
data16
inc
xor
xchg
jge
popl
push
mov
cwtl
jg
dec
ss
add
sbb
cmpsb
cmc
jle
sahf
ljmp
icebp
jp
mov
cltd
jae
cmp
loope
andl
pop
pop
shlb
add
xor
aas
pop
add
insl
xchg
or
test
gs
mov
xor
scas
jb
int3
pop
adc
jmp
mov
inc
scas
mov
push
sub
add
mov
xchg
cmpsb
stos
and
cs
dec
jne
in
jns
push
dec
xchg
xchg
aaa
xchg
cmp
movsb
inc
dec
pop
sub
lods
repz
hlt
insl
xor
test
scas
xchg
mov
push
rolb
xchg
jmp
mov
lods
movb
mov
les
adc
frstpm(287
pmaxsw
push
dec
cwtl
subb
out
mov
dec
int
xchg
cmp
shlb
sub
cmp
lods
xchg
ret
lret
cmp
cmp
push
xor
cmpsl
adc
pop
testl
fildl
std
sbb
pop
shll
clc
iret
nop
fistpl
mov
add
and
jns
fldenv
inc
shll
imul
adc
pop
jae
push
push
loop
mov
push
mov
or
xchg
or
adc
add
mov
lds
xchg
cmpl
sbbl
xor
cmp
out
sub
and
xchg
stos
pop
repz
sub
test
ret
jg
or
sub
movsl
rolb
or
mov
cmp
test
cwtl
sti
shl
aam
push
lds
aaa
mov
mov
push
sbb
sub
fiaddl
jbe
sbb
adc
jo
fistpl
dec
lret
push
sbb
add
dec
popf
and
inc
cmp
inc
mov
jecxz
sbb
jecxz
cmp
mov
push
mov
jmp
stos
mov
xchg
popa
into
in
loop
daa
adc
mov
popf
getsec
fisttpll
adcb
adc
xchg
cs
ficoml
mov
std
jmp
dec
scas
and
sub
mov
sbb
or
jge
sahf
or
dec
mov
ss
push
jmp
testl
mov
or
adc
push
mov
xchg
stos
fldenv
fnsave
inc
pop
xlat
cld
mov
jge
sahf
addr16
pop
and
sti
inc
out
sub
lock
rolb
call
xchg
jmp
insl
popa
pop
hlt
int
test
out
in
daa
xor
push
cmp
pop
rcrb
or
aad
xor
push
sbb
push
cmp
iret
adc
xchg
fwait
lcall
mov
movsl
rcrl
shr
arpl
add
popa
xor
jae
arpl
adc
mov
cmp
adc
faddl
push
mov
pusha
mov
sbb
mov
pop
and
into
cmpsl
inc
xlat
cli
pop
sbb
stos
pop
jmp
arpl
popf
sbb
ret
lock
add
js
aas
xchg
andb
shll
fcomi
mov
xor
adc
push
fsts
mov
pop
mov
fiaddl
mov
push
mov
aam
negl
mov
fbld
testb
nop
in
mov
sbb
stc
mov
mov
and
cmp
mov
mov
or
lods
pop
add
or
push
fnstenv
sbb
sub
test
add
pop
and
aam
repz
inc
aas
mov
dec
iret
mov
fcomps
jle
jmp
push
mov
mov
pop
jo
jne
jb
clc
cmpsl
jbe
adc
inc
mov
je
ret
push
icebp
jo
inc
sti
mov
test
jno
add
sub
mov
test
sbb
into
and
sbb
pushf
xchg
jecxz
xchg
aam
pop
xchg
outsb
or
add
jmp
xor
sub
sbb
stc
shrb
and
inc
stos
aad
push
sti
mov
cli
mov
cmc
imul
add
stos
stc
ret
cwtl
xor
mov
daa
in
push
divl
sbb
or
subb
adc
push
ret
rorl
xchg
mov
xor
divl
mov
jae
bound
movsb
stos
out
fwait
std
pop
sti
inc
cmp
and
in
or
inc
xlat
jle
in
inc
dec
dec
dec
jg
neg
xor
lcall
shr
fcom
mov
sbb
sbb
push
scas
mov
aas
lea
push
decb
mov
jae
push
mov
iret
push
iret
or
and
in
push
inc
or
jo
enter
push
cs
and
lods
xlat
adc
testl
into
push
jns
popa
xor
addl
mov
fnstcw
movsb
jbe
and
jl
lahf
jae
fnstenv
cmp
jg
in
cli
sbb
adc
pop
insb
movsb
sbb
rol
sub
std
stos
outsl
mov
xchg
push
cmc
aam
loop
jns
sahf
lds
out
int
in
mov
xor
mov
hlt
movsb
popa
decb
adc
sti
xchg
insb
jle
dec
mov
insl
dec
fs
cmpsl
xor
loope
cwtl
adc
jae
rcr
dec
ret
push
mov
cli
add
into
mov
jmp
mov
mov
repz
js
xchg
sti
rorl
adc
aas
jp
ret
repnz
movsl
je
jle
xor
stos
idivl
mov
inc
les
pop
rclb
repnz
dec
pop
popf
xchg
lds
and
pop
cltd
cmp
mov
fmull
ret
lods
hlt
shl
in
mov
mov
jno
jle
fs
push
jg
mov
imul
jo
aam
mov
test
enter
mov
cs
sti
dec
in
lods
ret
mov
push
push
lods
push
loop
mov
push
lahf
adc
dec
bound
push
test
flds
iret
aas
or
cmp
jg
hlt
aam
dec
cmc
and
push
jns
inc
repz
xchg
sbb
sub
and
pop
aaa
bsf
jle
fiadds
xchg
and
fwait
xchg
cmp
pop
sbb
arpl
shll
mov
cmp
jb
loope
xor
rcl
jo
jbe
outsl
pop
mov
jecxz
and
out
add
call
lcall
loop
enter
jp
dec
in
push
loop
mov
in
pop
cmp
pop
jnp
xor
xchg
pop
mov
and
cmp
xor
out
dec
mov
push
or
std
adc
mov
sbb
addr16
ss
sub
outsl
popa
int
int3
mov
push
dec
inc
test
jns
ret
pop
push
mov
das
jecxz
iret
or
fucom
frstor
call
rcr
dec
in
clc
rcll
imul
jno
adc
and
jo
inc
pop
stos
cld
mov
push
jl
pop
inc
mov
push
addl
jge
mov
inc
pop
sub
inc
mov
pop
push
ret
jns
in
xchg
mov
adc
js
dec
mov
xor
xchg
and
sbb
js
aad
insb
cmp
and
pop
adc
fistl
xchg
and
pop
mov
daa
sbb
imul
jp
jb
push
sbb
ja
dec
mov
or
inc
pop
es
push
sbb
jg
hlt
sbb
jmp
inc
cmp
cmp
add
sub
fisubrl
test
js
xor
cmpsl
dec
daa
rcrb
into
pop
aad
inc
adc
stos
or
mov
or
fmul
sbb
outsb
mov
insl
dec
push
out
aaa
push
xor
push
adc
inc
jb
fwait
mov
or
pop
dec
mov
xlat
cmc
test
or
jecxz
cmp
mov
xlat
ja
cmp
cld
mov
jl
push
jns
pushf
push
xor
xchg
in
cltd
loop
pop
ror
imul
cmp
jb,pn
shrb
imul
and
inc
loope
stos
pop
outsb
inc
cmp
inc
push
ret
cli
lahf
testl
sti
dec
sbb
xor
pusha
xchg
lds
jnp
add
mov
jns
ret
pop
sub
pushf
or
pop
popf
fisubl
dec
and
lret
jo
inc
jns
add
and
add
in
cltd
mov
jnp
push
dec
out
mov
or
jle
push
pop
out
icebp
add
or
cmc
in
mov
jns
movsl
cmpsl
sbbl
xchg
cmp
and
jnp
push
and
push
push
add
xchg
cs
test
outsl
mov
orl
pop
shl
out
sti
mov
movsb
adcb
js
push
jle
fsubr
shrl
cltd
xchg
mov
ds
arpl
jns
mov
pop
bound
adc
jns
leave
sahf
fstps
or
rcrb
jmp
rorl
adc
jns
loope
and
clc
jno
data16
sub
sbb
or
fldl
loopw
dec
sbbb
mov
insb
pop
outsl
mov
fsubr
mov
push
push
mov
jge
xchg
fnstsw
mov
shll
inc
cmpb
nop
stos
repz
outsl
xchg
push
das
push
movsb
xchg
pop
pop
mov
shl
push
jns
aaa
xlat
std
aad
std
mov
int
adc
addr16
xchg
je
and
mov
jp
jp
and
jb
stos
popa
and
xlat
sahf
xor
out
pop
fisubrl
xchg
xchg
push
xor
cmp
lock
daa
sub
popf
ss
jns
stos
xor
pop
sti
and
movsl
adc
push
scas
mov
sub
testl
movsb
adc
xor
jp
cmpsb
add
cld
dec
xor
sbb
jbe
sub
mov
jmp
pop
mov
sbb
dec
sub
jo
add
lahf
mov
lds
jecxz
enter
mov
lods
ljmp
enter
dec
jge
scas
fildl
in
xor
xor
cs
xchg
jb
xchg
or
add
cmpsb
xor
data16
ror
push
icebp
sbb
inc
pusha
ss
adcl
mov
pushf
call
out
push
jb
sbb
pop
adc
xor
lret
cmpsl
insb
and
aam
in
mov
pusha
fs
mov
or
lods
movsl
jnp
pop
shll
push
cmp
loop
icebp
das
dec
push
inc
fidivl
aam
xchg
mov
mov
and
out
shlb
mov
iret
imull
std
cmp
xchg
gs
bound
popf
xchg
adc
pop
xchg
mov
jnp
dec
fsts
inc
pop
push
insl
pusha
mov
pop
jo
inc
xchg
bndldx
shlb
mov
cwtl
mov
cld
bound
or
sbb
xorl
arpl
adc
push
outsb
jmp
add
out
fldpi
loop
orl
sub
cmp
jg
and
loop
mov
nop
insl
ret
loopne
push
sahf
icebp
mov
dec
mov
fisubrs
dec
jmp
loope
addb
out
cmp
inc
fwait
mov
stos
inc
mov
loope
xor
jns
imul
sub
push
mov
jecxz
add
inc
ss
add
xchg
mov
push
icebp
shll
dec
int3
insl
call
in
mov
sti
inc
outsb
lock
out
lods
ss
aaa
in
jo
popl
sub
xor
mov
repnz
fnstcw
out
inc
xlat
or
jns
arpl
sbb
andl
pop
push
jne
icebp
jge
xchg
test
popf
mov
decb
in
imul
dec
repnz
out
test
jmp
jne
les
or
sub
pop
out
repz
sub
push
push
in
push
inc
mov
push
outsl
push
fcom
push
pushw
xchg
ja
lock
mov
cs
cmpsl
sbb
and
cmp
xchg
inc
and
adc
jno
enter
cli
mov
xor
push
lock
repnz
inc
sbb
push
out
fwait
push
add
enter
or
dec
shll
xchg
jnp
loop
cltd
jo
add
clc
pop
jo
je
mov
std
cltd
push
inc
dec
jl
push
jge
mov
jl,pn
sbb
cmp
push
mov
movsb
pop
fnsave
lret
push
xchg
stos
test
push
mov
add
and
mov
push
adc
and
mov
gs
out
fimuls
and
push
add
add
push
inc
je
mov
xchg
int
xor
jnp
xchg
subb
mov
inc
movsl
inc
fs
test
out
frstor
or
mov
jb
cmpsl
sbb
xor
inc
jae
sbb
std
addr16
add
repz
xchg
nop
add
cmpsl
leave
jmp
xchg
ja
lcall
mov
or
add
test
or
scas
mov
push
sbb
stos
repz
lahf
mov
loope
int3
testb
movsl
pop
repnz
cmp
push
lahf
mov
cmpsb
xchg
lret
rcll
hlt
pusha
or
loop
fistpl
inc
pop
mov
mov
in
dec
jecxz
clc
mov
add
lahf
xchg
je
rcrl
shrb
cmpsb
inc
clc
sbb
xchg
cmpsl
cmpsl
sti
mov
int
or
das
pop
dec
lock
dec
int3
std
add
lea
out
and
adc
das
ror
inc
inc
mov
fisubl
sub
or
sarb
mov
mov
addr16
sbb
add
add
lcall
movsl
rcll
or
roll
int3
xor
fwait
xor
enter
fwait
inc
shll
mov
push
mov
out
dec
loopne
cwtl
orb
das
lret
jmp
jb
je
push
jb
mov
pusha
leave
jnp
xchg
dec
xor
lret
mov
in
loopne
dec
into
push
adc
dec
js
ret
int
mov
std
inc
icebp
movsb
cmc
mov
jbe
iret
jbe
dec
inc
test
fstp
adc
add
dec
lret
dec
out
add
leave
fwait
dec
xchg
out
es
insb
data16
and
add
fidivrs
pop
mov
mov
jne
xchg
repz
pop
or
pop
push
insl
pop
ljmp
mov
adc
mov
and
insl
cmp
icebp
add
shlb
cmp
jne
mov
faddl
inc
loopne
jb
sbb
sub
mov
clc
stos
in
fsubl
subl
lods
hlt
mov
lods
cmp
sti
popa
inc
stos
rcrl
movsl
jg
in
pop
je
or
sub
insb
ja
insb
mov
dec
cmp
lcall
mov
nop
shr
out
push
stos
pushf
rclb
dec
fs
pop
mov
test
mov
mov
movsl
xchg
dec
push
sar
adc
iret
cld
or
jmp
mov
flds
push
pop
sub
lods
cli
leave
xchg
mov
fdivs
dec
pushf
cmpb
stos
sahf
xchg
xchg
mov
sbb
push
enter
aam
push
sub
xor
insl
xor
xlat
mov
mov
sbb
pushf
cmp
divb
mov
aad
roll
push
fidivrl
loope
sub
into
movsb
lea
insb
inc
or
lahf
xor
sub
push
inc
scas
pop
mov
mov
mov
jle
out
js
dec
sbb
xchg
sbb
je
sbb
inc
repnz
daa
or
inc
lahf
or
pop
rcl
cwtl
repnz
pop
and
jp
mov
cs
mov
movswl
in
xor
outsl
mov
call
xchg
popa
dec
sarl
aad
inc
add
sub
bound
push
jmp
inc
fstl
push
call
repnz
jmp
or
add
insl
mov
nop
xchg
push
jg
ss
popa
mov
push
pop
fsubl
pushw
jns
add
int
cmpsl
aad
dec
mov
repnz
rcrb
sbb
cwtl
faddp
add
fwait
seto
push
bound
sbb
mov
rcll
lcall
inc
push
or
sub
mov
rcr
and
jb
decb
mov
pop
out
hlt
mov
sarl
jne
pushf
add
std
dec
cmp
idivb
scas
sbb
xlat
fidivs
add
gs
arpl
in
or
ss
cmpb
imul
and
es
adc
in
pop
jecxz
push
and
fcmovne
xchg
sbb
ficomps
cmp
jmp
mov
mov
mov
pusha
adc
dec
push
sub
inc
xor
jmp
xor
dec
push
cli
cli
jb
and
out
sub
mov
pop
pop
ds
ficompl
or
pop
push
mov
outsl
stos
iret
rolb
inc
lret
std
pop
int3
neg
aas
cmp
adc
lahf
mov
cmp
inc
adc
or
lods
cmp
fwait
push
adc
sahf
mov
adc
popf
es
jmp
into
add
imul
or
mov
mov
es
movsb
push
xchg
add
pop
std
xlat
pop
pop
jle
pop
jns
test
das
dec
hlt
or
int
fisubl
mov
in
cmpsl
ss
sti
hlt
sub
push
cmp
dec
or
mov
enter
xor
xchg
das
xchg
push
mov
mov
lcall
fmul
push
in
push
add
dec
xchg
fnsave
aas
adc
aam
ss
mov
push
xchg
adc
lahf
and
ret
xchg
adc
ja
lods
popa
xor
jo
repz
into
loop
int3
pop
dec
push
and
inc
movsb
mov
xor
pop
dec
mov
repnz
push
aaa
sub
loope
xchg
cmp
adcl
pop
push
popf
push
sub
mov
push
cmpsl
adc
int
sbb
sbb
mov
cmp
push
scas
sbb
mov
in
mov
hlt
daa
aaa
xchg
mov
ljmp
cmp
push
add
jne
pop
xchg
add
and
cmp
loop
enter
repz
push
dec
out
movsb
nop
adc
and
xchg
sbb
jno
jg
sbb
lret
and
aas
scas
test
lcall
and
fidivrl
movsl
ljmp
inc
out
add
and
movsb
mov
iret
mov
lcall
out
in
rolb
or
mov
shr
lret
imul
movsb
int
pop
dec
add
jnp
out
das
and
ret
xchg
mov
roll
clc
fcomp
out
adcl
inc
jns
add
pop
pop
test
push
andl
pop
pop
sub
adc
ds
jns
sbb
outsl
inc
jl
push
int3
pop
sbb
cmc
push
mov
cmp
popa
and
clc
dec
cltd
repnz
xor
sub
inc
and
cmpsl
adc
adc
test
mov
aaa
out
out
inc
fadd
jp
iret
das
cwtl
pop
push
lcall
sbb
mov
add
mov
nop
dec
pop
jp
jle
push
dec
jns
cld
add
jns
in
pop
bts
insl
aad
mov
cmc
outsl
lcall
outsb
mov
mov
add
mov
sbb
dec
hlt
out
push
mov
xchg
hlt
adc
rcrl
jne
mov
fmuls
sti
jb
mov
sbb
jecxz
test
out
jne
xor
fs
nop
movsl
stos
addl
nop
pop
xor
mov
fistpl
sarl
in
push
or
je
jbe
loop
mov
das
dec
out
enter
add
cmpsb
out
mov
push
call
mov
xor
cmp
adc
push
dec
jne
sbb
sbb
push
ds
sbb
jg
cld
test
fbld
and
and
push
arpl
clc
pop
data16
int3
jae
cmp
inc
ret
dec
mov
loope
mov
dec
lea
ss
adc
lods
add
mov
mov
sub
jge
push
add
add
cs
push
arpl
cs
push
mov
xor
sbb
test
imul
ljmp
mov
sbb
jb
sub
out
adc
push
dec
sub
push
scas
fstps
xchg
aas
fs
mov
dec
add
fbstp
sbb
dec
test
inc
xchg
pushf
leave
in
movsl
jle
stc
mov
ret
jnp
sub
orl
scas
mov
ret
sub
lcall
aad
xchg
or
or
xlat
mov
pop
pop
loopne
jne
loope
ret
cmpsl
xor
xchg
jecxz
mov
and
push
cld
popa
pop
cmp
iret
mov
mov
cmp
xchg
mov
inc
mov
mov
sbb
dec
pop
sar
xchg
adcb
push
dec
outsl
repnz
dec
aaa
or
aaa
loop
lods
xor
sbb
adc
enter
aad
cmp
lea
mov
mov
xor
sbb
add
cmc
push
jp
push
test
lcall
xchg
rcr
pop
sub
clc
xchg
flds
arpl
aas
xchg
aaa
add
test
sahf
add
adc
mov
out
data16
push
data16
xchg
test
call
arpl
roll
mov
mov
cmpsl
leave
daa
jae
mov
sub
cmp
dec
loope
sub
std
jne
and
jne
sbb
inc
ret
arpl
sbb
and
push
mov
inc
int
jb
lahf
ljmp
in
mov
pop
xor
pop
mov
jle
mov
and
sub
popa
int
xor
pop
jmp
stos
adc
lret
jp
lcall
shr
inc
mov
cmp
int3
clc
insb
xor
and
mov
test
cmc
mov
sbb
pop
and
andl
scas
add
mov
jae
aas
xchg
add
inc
imul
cmp
and
daa
push
dec
loop
scas
testb
mov
lcall
test
pushf
repnz
dec
loop
out
or
add
cmp
outsl
sub
andb
pop
fucomip
mov
movsl
sub
pop
lret
jl
pushf
not
or
adc
adc
and
stos
popa
js
mov
fwait
ret
punpckhwd
pop
clc
pop
addr16
jge
mov
dec
jge
mov
jmp
std
aaa
movsl
and
jne
das
sar
andl
lods
adc
cmc
dec
loope
decb
js
imul
jo
enter
push
nop
decl
pop
inc
outsb
enter
jnp
stc
stc
lock
push
sbb
jecxz
fcmovb
xchg
out
lods
sbb
sti
add
call
bound
xchg
out
sub
pop
outsl
xchg
inc
movsl
push
cmp
lahf
fsubrs
sar
or
lock
dec
cs
in
loope
fisubl
cmp
shlb
and
fcmovne
shlb
jno
andb
mov
cmp
rcrb
in
jp
paddq
mov
movb
rorb
pusha
frstor
loopne
insl
add
adc
add
sti
cmp
lock
sbb
and
addl
and
jne
cmpsl
lods
fsts
int
jno
push
insb
mov
add
inc
xchg
sbb
outsb
cltd
xor
fwait
inc
loopne
mov
push
pop
cmp
sub
pop
mov
movsb
jl
or
fistl
push
adc
fsubs
cmpsl
add
sbb
lods
orl
push
sub
sti
dec
aad
in
aad
and
mov
stc
xor
add
pop
mov
xchg
mov
mov
cs
mov
pop
fidivl
mov
divl
int
pop
or
pop
add
sub
test
loope
dec
push
add
push
jbe
mov
psubq
mov
xor
or
xchg
rorb
push
stos
cmp
dec
cmc
in
int
xchg
loope
fistl
aam
jnp
shr
and
inc
dec
out
inc
repnz
movl
xlat
pop
add
inc
imul
push
sub
xor
jmp
sub
push
inc
data16
sub
fstp
push
out
aad
or
sbb
jge
clc
pop
or
pushf
insl
add
sub
aam
mov
fidivs
xchg
adc
js
mov
push
aas
xor
arpl
rorb
mov
and
repz
adc
jo
mov
pusha
inc
hlt
adc
in
sub
pop
orl
add
jae
dec
pop
sbb
xchg
xchg
push
sub
dec
movsb
dec
gs
sbb
push
enter
out
icebp
lock
pop
mov
shll
pop
rorl
shll
mov
sub
pop
fbstp
orb
mov
test
ret
xor
mov
adc
sub
test
sub
out
mov
xchg
pop
jae
out
clc
xor
inc
decb
mov
out
out
push
jae
cmp
dec
pop
cltd
jl
fs
pop
xchg
ficoms
inc
inc
call
pusha
out
cmp
in
out
cmp
push
jo
hlt
mov
ret
rol
jnp
cmp
icebp
push
mov
hlt
mov
in
and
add
dec
cmp
leave
faddl
mov
push
push
loop
aam
or
xor
fwait
pop
ret
in
into
or
int3
lea
ret
adc
xor
pop
cld
out
clc
pop
pop
icebp
lods
aaa
or
sub
xchg
dec
stc
or
or
fistpl
xor
cmp
xchg
jl
enter
movsb
mov
mov
sub
xchg
lds
mov
test
cs
mov
jle
add
repz
int
lretw
adc
les
push
push
or
fisubl
dec
add
shll
xor
loopne
add
sub
scas
push
adc
jmp
lods
mov
adc
out
sub
iret
pcmpeqb
cmp
into
adc
push
mov
in
mov
and
inc
sbb
shrl
pushf
rcr
loopne
movsl
pop
popa
push
cmc
mov
pop
into
mov
cld
sbbl
lahf
push
in
sbbl
dec
sub
scas
movsl
loop
pop
incb
jno
outsb
pop
jae
cs
mov
int
mov
lret
inc
push
inc
push
lret
or
lret
call
dec
pop
sbbb
fdivs
cmp
cs
push
xchg
outsl
mov
jae
xchg
test
stos
fs
xchg
sbbl
pop
aas
aas
fs
out
cmp
lea
mov
iret
ret
rorb
push
lock
adcl
cmp
loop
push
int3
inc
iret
xor
insl
jg
xor
fwait
jae
mov
imul
and
xchg
mov
mov
inc
and
cli
mov
cmp
std
ror
jmp
jns
outsb
jmp
pop
test
shlb
jns
cld
fildl
mov
add
sbb
out
fadd
das
nop
les
fistpl
adc
mov
add
cmc
subb
fsubrs
push
push
jge
adc
into
loopne
fdivp
cmp
shlb
jae
fbld
mov
or
ja
daa
testl
jb
insl
shlb
push
xchg
xor
repnz
rol
mov
xchg
mov
fldcw
inc
cld
xchg
push
and
imul
and
lahf
stos
je
xchg
pop
ret
hlt
and
sbb
fsubl
rdmsr
jmp
mov
adc
inc
fdivr
pop
push
adc
mov
sbb
push
dec
add
pop
pop
mov
push
mov
mov
cmp
xchg
sub
sbb
cmp
test
clc
sub
inc
sarl
sbb
add
sarb
es
sar
mov
aaa
stos
inc
js
mov
mov
sarl
stos
sbb
shl
jecxz
cmp
jbe
hlt
or
call
nop
lret
cmp
xchg
inc
std
idiv
mov
jmp
or
ret
out
sti
inc
out
jb
leave
or
jecxz
mov
mov
aad
jge
idivl
out
dec
or
fsubrl
inc
dec
jbe
ja
mull
cltd
dec
push
int3
and
add
hlt
std
aad
les
inc
loop
out
sti
xor
push
leave
test
sar
pushf
cli
xchg
add
sub
jmp
xor
pop
mov
bound
mov
and
jmp
repz
arpl
popf
outsb
xchg
test
push
mov
or
adc
cltd
xchg
cmp
sbb
cmp
popa
and
xor
add
add
int
xchg
fadds
and
and
outsb
adc
rcrl
cmpsb
cli
mov
cld
pop
pushf
mov
imul
std
cwtl
iret
testl
inc
in
xchg
mov
mov
cmp
cwtl
mov
imul
lahf
test
cmp
popa
idiv
pop
stos
jg
pop
push
leave
jae
pop
popa
add
mov
push
mov
adc
mov
inc
xor
imulb
cmp
js
xor
mov
in
inc
ds
rclb
negb
inc
xchg
add
adc
inc
divb
cmp
fwait
pop
stos
push
pop
jg
mov
xlat
fcmovnb
test
jb
shlb
aaa
stos
sbb
xchg
ret
push
sbb
sbb
pop
insl
or
sbb
std
lret
push
aam
scas
mov
ljmp
ss
inc
inc
jb
repnz
adc
out
cmp
xchg
mov
es
scas
dec
or
mov
shll
stc
fsts
push
rclb
jmp
inc
xor
mov
pop
adcb
jle
xchg
out
aaa
ss
push
ret
pushf
add
xchg
les
out
jb
out
mov
in
jmp
out
stc
daa
xchg
jle
arpl
xor
cmpb
mov
ds
pop
push
dec
cmp
nop
mov
stos
ds
jle
js
imul
fucomp
call
fnstsw
and
lds
cltd
lret
stos
loope
xlat
add
mov
mov
stos
out
xchg
cwtl
mov
xchg
pop
adc
clc
mov
repnz
mov
fwait
xor
push
mov
aad
jmp
test
jmp
add
mov
and
push
sub
popa
int3
inc
mov
lods
out
stc
ja
inc
ds
enter
push
pop
mov
repnz
pop
or
hlt
add
divl
mov
sbbb
push
ss
aam
out
mov
nop
adcl
ja
sbb
sahf
add
add
jmp
adc
dec
in
shr
adc
rcll
out
push
dec
inc
sub
push
xor
xchg
sub
cmp
xor
push
lret
test
push
ret
jns
xlat
into
repz
movsl
dec
push
sbb
dec
adc
dec
lds
cltd
fstps
lret
mov
out
enter
cmp
mov
dec
and
aas
scas
mov
out
lods
mov
xor
xchg
mov
fldt
arpl
gs
cld
insl
cmp
inc
push
je
and
jle
fmuls
xor
pop
mov
iret
add
and
sub
jne
loop
aas
fldt
mov
push
cli
int3
jne
and
mov
push
lods
mov
scas
dec
adc
mov
jg
lea
mov
sbb
and
in
stos
lcall
gs
mov
fsubrs
aaa
jecxz
jmp
in
ljmp
jb
stc
loopne
inc
push
add
inc
fs
inc
mov
add
cmc
xchg
and
sub
sub
lret
and
mov
xor
call
and
test
lods
inc
aad
fildll
mov
roll
jg
les
fs
mov
arpl
jne
lret
subb
push
mov
mov
loopne
enter
int
jmp
in
inc
loope
insl
xor
ficoms
jb
pop
or
mov
lock
xchg
mov
pop
repz
nop
push
adc
mov
cmp
out
std
in
add
dec
adc
push
notl
addr16
aaa
xchg
cmpsl
inc
scas
icebp
inc
insb
add
jae
xchg
cli
dec
sub
sarb
push
sub
mov
adc
out
cmp
dec
in
push
or
inc
mov
sub
jmp
add
mulb
loopne
fwait
cmp
cltd
cltd
and
jnp
rcl
cmp
adc
data16
adc
pop
icebp
in
les
push
shrl
push
push
cmpsl
dec
jge
inc
pushf
jecxz
daa
orb
cmp
jo
ljmp
sub
ss
lea
fmull
pop
outsb
sub
sbbb
sub
inc
push
adc
or
inc
pop
cmp
and
sub
cmp
or
lret
add
outsl
out
mov
lds
addl
pop
jecxz
out
fdivs
pop
sbb
mov
bound
adc
testl
or
dec
pop
mov
sbb
cld
add
inc
and
stc
sbb
scas
mov
dec
inc
pop
rcll
test
cltd
sahf
dec
adc
xlat
xor
std
mov
fisttpl
or
jnp
pushf
mov
daa
loop
bswap
xchg
movsb
ficomps
mov
mov
xchg
dec
xchg
mov
sbb
ds
and
std
ret
cmp
inc
xchg
inc
fistl
fiaddl
sub
mov
mov
inc
xor
jns
cmpsl
xor
inc
std
mov
or
inc
cmp
in
xchg
jl
push
repnz
inc
xchg
cld
mov
push
adc
stc
scas
dec
fists
test
sub
in
push
jno
jnp
mov
iret
or
shrl
jg
xor
jne
std
mov
push
popa
fbstp
dec
call
pusha
iret
nop
jns
xchg
das
mov
mov
push
jno
repz
inc
and
mov
cmc
sbb
xchg
jnp
sahf
push
in
xor
mov
pop
sbb
out
loopne
outsl
fistl
and
mov
push
sahf
es
jo
push
in
out
cld
shll
iret
inc
movsb
fsubrl
out
add
fwait
dec
pop
fdiv
jo
sub
aad
add
aaa
and
repz
fcoms
fs
xchg
lock
xor
pop
sub
inc
outsl
jno
shrb
xor
sbb
inc
adc
push
adc
stos
dec
jbe
or
mov
push
dec
or
xchg
fdivl
cmc
inc
scas
xor
dec
mov
jo
daa
or
fistps
movsb
fsubrs
and
push
daa
and
xchg
add
int3
aaa
int3
in
mov
adc
sahf
shlb
sarb
in
pop
decl
popa
xchg
loop
sub
pop
fxch
sub
fsubs
out
rcr
daa
or
jns
leave
test
psrad
jne
cmpsb
stos
andb
into
jmp
inc
cmc
iret
jbe
rcr
or
lahf
pop
xor
dec
dec
cltd
movd
mull
out
cmpps
mov
adc
xor
popf
movsl
jmp
add
je
xlat
mov
push
sbb
sub
repnz
sbb
scas
das
arpl
jge
stos
out
ljmp
and
dec
sub
sahf
mov
mov
jb
xor
mov
bnd
xor
je
loope
bound
ret
mov
pop
repz
mov
je
jge
int3
test
adc
mov
mov
loopne
jg
repnz
xchg
ja
std
outsb
jmp
aam
inc
ficoml
jg
xchg
ret
insl
das
mov
inc
xchg
ss
push
mov
mov
ja
ja
int
movsb
and
xor
je
sbb
jno
movl
or
xchg
inc
orb
lea
or
add
test
and
fiadds
dec
mov
int3
add
jo
cmp
in
sbb
faddl
les
pop
fisttps
xor
insb
jns
fwait
jg
adc
out
mov
xchg
ja
push
mov
das
push
nop
and
mov
adc
ja
pop
mov
jge
inc
push
rol
xchg
imul
in
popa
icebp
jne
inc
mov
js
lods
or
sbb
or
fmuls
jno
insl
push
pop
jecxz
mov
cmp
pop
aaa
insl
pop
lds
adc
xor
or
adc
mov
xchg
fstpt
sbb
stos
fs
sub
dec
cmp
rcrl
out
push
je
ljmp
sbb
ficomps
jl
jl
push
outsb
adc
adc
and
nop
mov
rcrb
dec
and
cmp
js
add
push
daa
sbb
xor
sub
test
mov
cmp
xchg
sbb
xchg
mov
pusha
sbb
mov
aas
sbb
stos
sbb
clc
and
lds
pop
xchg
xor
jl
loopne
movsb
mov
in
dec
xchg
test
push
inc
and
pop
outsl
bswap
mov
mov
nop
bnd
jnp
movl
dec
aam
pop
jne
movsl
xchg
shlb
subps
insb
jecxz
cmpsl
jmp
data16
pop
das
enter
in
push
lea
mov
pop
outsl
mov
sub
ss
push
js
xor
kmovw
or
imul
xor
xchg
inc
les
int3
sub
sbb
lods
in
cltd
in
cltd
js
push
mov
push
sarb
adc
jp
es
nop
mov
in
push
negl
cmp
jne
ds
repz
mov
adc
subb
push
add
iret
jae
mov
or
stos
shrb
adc
imul
es
add
mov
aad
movl
add
loope
inc
add
and
sbb
dec
or
jecxz
rcl
cmp
adc
in
sbb
nop
ds
lret
fwait
sub
int3
cmpsb
sub
mov
push
aaa
pop
aas
shlb
dec
dec
or
or
insl
add
lds
imul
sub
cmp
fadd
repz
rcrb
dec
cs
push
xor
outsl
sbb
mov
pop
lret
add
and
sbb
xor
les
insb
andl
pop
lahf
ret
pop
lahf
imul
data16
dec
mov
pop
notb
aam
out
xchg
jl
dec
aaa
in
sbb
movsb
fbstp
sti
mov
cli
or
leave
repnz
cltd
mov
adc
jp
mov
or
iret
and
or
out
cmpsb
mov
and
mov
lock
mov
call
and
sub
push
pop
cmp
int3
sahf
arpl
scas
jnp
lret
xor
push
xchg
test
insl
cmp
dec
sub
pextrw
dec
sub
fcoml
add
lret
mov
repnz
xor
mov
cs
inc
sub
pop
mov
scas
clc
mov
sub
dec
dec
pop
jge
adc
mov
add
push
mov
repz
pusha
push
lret
add
fadds
jg
jne
shrb
pop
lret
dec
and
iret
pop
mov
out
sbb
inc
stos
js
add
loop
hlt
test
and
xchg
js
pop
jge
rcll
push
or
dec
aam
mov
filds
xor
xchg
mov
adcb
lods
pop
push
pop
sbb
pop
sub
mov
pop
inc
ja
mov
adc
inc
pop
jns
ds
loope
xchg
or
add
negl
xor
jo
cs
test
sub
bnd
pop
push
sub
into
inc
sbb
inc
fucomp
xchg
or
cmpsl
push
nop
in
add
jmp
xchg
mov
sbb
ss
push
fidivrl
das
lds
mov
jg
cmp
out
fmulp
idivb
jne
inc
lock
sbb
push
add
out
mov
sub
mov
dec
lods
xor
subl
jb
mov
insb
adc
jp
out
movsl
inc
cwtl
mov
int3
mov
cmp
pusha
inc
stos
call
jmp
sahf
xlat
scas
ja
je
cld
add
das
aas
test
push
test
pushf
test
addr16
pop
repnz
andl
push
cld
mov
rorl
out
cltd
jl
or
mov
mov
jge
inc
fmulp
or
mov
pop
out
pusha
aaa
inc
into
or
jmp
in
or
inc
mov
nop
pop
pusha
and
cld
mov
jb
xchg
into
add
pcmpgtw
pop
test
push
adc
mov
in
inc
stos
push
mov
dec
jo
in
push
mov
inc
stos
cmp
sub
adc
test
popa
mov
cmp
xchg
sbb
xchg
push
rcr
jb
sbb
int3
xchg
inc
push
cmp
sub
jo
mov
icebp
loope,pn
loop
add
cmp
stc
pop
or
aaa
cmp
mov
movsb
jns
in
xchg
xchg
dec
mov
jo
sti
mov
insl
int
cwtl
xor
jns
jnp
jecxz
repnz
adc
add
pusha
scas
lret
imulb
fimuls
cmp
mov
cmp
call
daa
xchg
xchg
mov
mov
inc
add
inc
dec
jo
call
xchg
xchg
dec
pop
imul
xor
xlat
mov
cwtl
sar
add
adc
pop
pop
cmp
orb
jg
aam
out
repnz
decb
mov
inc
sub
fidivl
or
mov
lods
mov
loop
js
lds
stos
push
rcrb
push
lock
ja
repnz
jne
outsb
jle
nop
adc
mov
xchg
call
lret
scas
loope
adc
cmp
adc
out
dec
stos
pusha
mov
jge
xchg
mov
dec
int
pop
sub
adc
sbb
dec
mov
lret
les
inc
icebp
xor
lret
insl
dec
call
cmp
pushf
push
fstp
xchg
xor
and
fcomps
pusha
movsl
cmp
inc
jg
out
pop
je
aad
adc
cmpsb
or
jo
cmp
dec
mov
in
push
cltd
xor
cli
or
lods
in
jbe
xor
fdivrl
js
adc
cmp
jbe
sbb
pusha
sub
add
je
cli
push
sbb
adc
lea
mov
add
test
mov
test
adc
sti
jb
xchg
mov
sbb
jp
xchg
pop
inc
and
jecxz
jne
dec
std
imul
xor
and
in
aad
pop
cld
jne
add
addl
lret
add
jge
loop
mov
inc
sysexit
mov
dec
inc
out
jns
nop
sub
adc
fstpt
add
adc
mov
mov
jb
mov
sbb
adc
add
fisubl
or
mov
dec
es
insl
fucomp
pop
fwait
push
mov
fwait
ror
stos
push
lock
adc
dec
ss
outsb
xor
adc
in
ret
loop
mov
adc
mov
jmp
inc
cltd
lock
in
mov
add
push
lret
aaa
jmp
inc
cwtl
or
insl
sbb
dec
adc
push
fwait
inc
mov
dec
mov
testb
and
adc
bound
std
mov
push
rcl
mov
lea
xchg
mov
adc
sub
pop
outsb
push
addb
jb
sbb
jo
sub
jge
ja
gs
test
or
pop
ss
clc
jbe
lret
nop
adc
aad
stc
add
aas
jl
inc
adc
sar
fwait
sbb
inc
arpl
es
rcrl
push
add
jl
mov
lods
mov
pop
dec
cmp
in
arpl
enter
mov
fbstp
xor
or
ja
in
ret
add
shll
pop
mov
mov
jmp
xor
xlat
cld
dec
jae
jbe
int3
cmp
in
mov
mov
movsl
jne
aaa
dec
inc
fcoml
mov
xchg
popa
fcompl
clc
and
cmc
pop
sub
push
mov
pushf
jbe
aaa
xchg
lods
mov
movsb
loop
cmp
ljmp
or
out
jns
pop
int
and
adc
enter
movsl
lods
daa
cld
mov
call
jle
push
sub
cld
jmp
xorl
bound
xor
int
out
sub
in
add
mov
cmpb
jo
sbb
es
pop
jae
test
lods
jbe
daa
mov
adc
jp
mov
adc
popf
sub
cmovbe
fwait
xor
int
lret
addr16
jo
inc
xor
dec
cmp
inc
or
jmp
stos
stos
push
sbb
mov
inc
mov
data16
cwtl
pop
test
xchg
adc
pop
cmc
and
fwait
insl
push
mov
mov
lahf
rcll
pop
int
jg
js
js
jb
sub
out
xorl
aas
daa
mov
shll
add
inc
cmp
or
add
ss
sbb
mov
stc
mov
repz
mov
add
sub
xchg
xchg
mov
test
sbb
inc
mov
dec
rorb
lds
jbe
push
dec
pop
xor
mov
shll
mov
sti
mov
add
mov
xchg
or
ret
or
test
outsl
add
xor
jecxz
out
inc
push
lcall
lds
add
push
pop
enter
mov
cwtl
xchg
imul
push
cmp
sbb
out
es
cmp
stc
jns
cmp
ret
loope
dec
jecxz,pt
and
es
cmp
mov
mov
push
andb
ficompl
inc
adc
mov
mov
gs
xor
in
lods
ds
iret
out
outsl
stos
aaa
mov
inc
add
adc
gs
mov
loop
jbe
icebp
inc
fwait
mov
out
push
pop
fwait
pushf
xchg
push
insb
scas
call
sbb
dec
mov
xchg
test
imul
cmpsb
mov
lods
xor
xor
mov
dec
sub
dec
and
les
pop
mov
out
dec
rorb
int3
xorb
sbb
mov
je
sbb
xlat
lret
shl
dec
mov
fdivl
fs
mov
add
scas
pop
insl
out
jae
movsb
xchg
hlt
ss
arpl
test
jnp
out
out
jns
pop
leave
out
clc
cmp
stos
jp
popf
mov
bound
sub
pop
pop
movsl
cmp
mov
roll
cmp
aas
cmp
js
xor
rcrb
rorl
xor
or
mov
bound
aam
sbb
sub
inc
cmpsl
adc
and
add
leave
dec
and
sub
insb
repnz
aaa
cmpsl
stos
mov
addr16
xchg
xor
jae
jmp
mov
sarb
dec
sbb
xchg
mov
mov
sbb
jbe
jb
and
outsl
clc
jl
sbb
lods
scas
mov
mov
popl
fdivrl
pop
mov
in
pop
cmp
mov
jmp
out
inc
lods
add
and
rorb
jle
ss
notl
loop
jbe
enter
push
scas
cmp
movsl
sbb
jns
in
int
jo
jnp
or
xchg
shll
adc
ficoml
cld
inc
and
sbb
addr16
pop
jle
dec
popf
shll
mov
mov
imul
push
mov
fdivrl
xchg
loope
xor
jmp
pop
dec
lcall
mov
lahf
ficompl
insb
cwtl
shll
or
xor
test
fs
loop
rclb
arpl
mov
pop
je
xor
sub
or
and
fcom
jns
ss
inc
jns
clc
mov
mov
cs
nop
out
sub
loope
push
jo
popa
ljmp
adc
scas
add
jmp
stos
mov
bound
xorl
adc
lcall
in
jnp
rcrl
insl
pushf
adcl
xchg
xlat
imul
scas
push
mov
inc
or
out
jo
push
xchg
popf
jo
imul
lock
bound
jne
sar
stc
jle
cmp
add
mov
mov
popl
jmp
jmp
jle
idivl
dec
in
ja
test
in
push
gs
adc
jle
arpl
inc
cmp
nop
sub
int3
stos
or
xchg
jb
js
dec
fdivrl
push
inc
jmp
mov
mov
push
adc
cmp
push
jno
push
mov
push
lahf
adc
int
das
jecxz
mov
fsubl
mov
lds
js
inc
pushw
and
lcall
jp
xor
dec
test
lcall
stc
scas
lds
bound
fcoms
adc
xchg
pop
xchg
pop
pop
cmp
add
stos
pushf
or
mov
xchg
std
jns,pt
push
xor
subb
pop
enter
out
or
xchg
addr16
sbb
test
dec
popf
push
int3
daa
lret
sbbl
ret
aas
jnp
notb
loope
xchg
cmc
xchg
adc
mov
cs
push
pop
add
pop
daa
cmp
shrb
scas
inc
das
mov
adc
or
and
inc
movsl
sub
insl
in
add
inc
aad
dec
mov
push
dec
xor
push
adc
lahf
push
or
or
daa
mov
xor
xchg
pop
xchg
repz
lahf
xchg
mov
lcall
mov
push
sbb
aad
xchg
std
imul
fwait
out
jno
mov
mov
stc
xchg
es
push
lret
ficompl
dec
pop
mov
push
or
fisttpl
cld
mov
adc
in
int3
test
sub
out
or
and
lahf
shll
pop
cltd
fmuls
cmp
or
mov
add
pop
inc
xor
fs
and
call
and
subb
pop
cmpsl
std
rol
xor
jo
mov
jbe
mov
dec
sbb
mov
ret
xor
jne
and
repz
fists
gs
cmc
out
xor
pushf
mov
jno
sbb
mov
bound
test
gs
sub
lods
cmc
mov
cmp
cmp
xchg
cltd
jo
adc
inc
jecxz
mov
jno
subb
inc
jl
inc
mov
xor
sbb
ja
xchg
or
push
out
aad
inc
in
mov
xchg
cltd
xor
mov
cli
in
mov
pop
or
sub
shlb
cmp
in
hlt
in
cwtl
jnp
inc
dec
add
push
pop
mov
sbb
cli
xor
jmp
testb
test
inc
inc
in
adcb
cmp
fwait
ret
jmp
lods
xorb
jp
fsubs
cs
or
or
push
test
sbb
pushf
adc
mov
cmp
mov
jmp
repnz
jmp
out
dec
outsb
mov
nop
int3
incb
call
pusha
inc
pop
bound
shr
js
xchg
fsubrs
mov
cmp
test
subb
test
nop
add
inc
push
xor
sti
es
mov
cli
xchg
jg
xor
cmp
xchg
repz
xlat
jns
rclb
adc
sub
in
mov
xor
testb
enter
xchg
or
and
adc
fcompl
cmpsb
nop
roll
loopne
cltd
jmp
mov
jne
or
push
lods
icebp
cmp
divb
mov
test
lahf
jmp
insb
orw
outsb
and
or
lods
jmp
lds
and
push
inc
insb
add
inc
test
stos
iret
sub
xor
jg
icebp
popa
mov
je
dec
das
icebp
lahf
out
repz
jge
loopne
xlat
mov
shr
sbb
jle
fisubl
repz
xor
out
push
das
es
xchg
jecxz
bound
cmp
push
int
bound
inc
outsl
cmpsl
jne
sub
add
stos
pop
sub
int
sub
push
mov
xor
sbb
cwtl
add
cwtl
divl
nop
xchg
pop
cltd
sub
das
mov
mov
daa
cmp
xor
icebp
jecxz
jns
int
cltd
rorb
out
pop
push
sbb
mov
aad
xchg
addr16
cltd
hlt
push
dec
scas
mov
hlt
adc
lahf
xchg
mov
repz
imul
and
push
std
enter
pop
cmpsb
mov
jmp
and
sarb
mov
and
iret
dec
inc
call
cli
jne
stc
or
jmp
pop
shll
and
push
lcall
pop
ja
pop
cmp
insl
jb
pop
cmpsl
dec
sbb
add
xor
add
sub
jae
data16
add
mov
out
inc
fsubrs
fcmovbe
jb
pop
ror
dec
fs
dec
xor
jnp
or
pop
data16
mov
add
mov
sub
or
pop
fistl
xlat
adc
mov
mull
fdiv
jmp
data16
push
jne
popa
out
mov
mov
in
pop
inc
mov
sahf
data16
clc
sbb
pop
xor
stos
jns
cld
or
jo
pop
test
das
jp
sbb
xor
imul
push
in
or
xor
sub
mov
xor
add
mov
add
add
inc
outsb
in
in
jl
fdivp
jl
ss
push
mov
push
mov
fs
or
mov
xor
push
mov
jnp
dec
mov
adc
sbb
out
push
add
mov
inc
push
xchg
lods
cs
xchg
cmpsl
stc
xor
sub
les
jbe
mov
pushf
mov
add
and
cmc
insl
adc
adc
mov
adc
ja
mov
loop
sbb
test
mov
xor
jl
pop
nop
pop
dec
rcl
cmpsb
pop
je
sarb
or
mov
shll
lret
inc
popf
cmp
dec
sub
roll
sahf
mov
pushf
push
xchg
mov
repnz
xchg
cs
sbb
xchg
lret
pop
push
mov
imul
push
jnp
mov
or
jno
add
inc
jne
jbe
das
xchg
xor
mov
outsl
ds
mov
mov
jnp
dec
and
dec
mov
or
addb
mov
mov
jle
mov
adc
in
jo
xchg
mulb
repnz
scas
push
leave
mov
jbe
pop
sbbb
data16
pop
mov
inc
mov
mov
pop
pop
jno
jp
fcompl
cli
xor
sbb
push
sub
push
movsl
shrl
mov
mov
out
rcrl
mov
sub
pop
mov
test
or
insl
hlt
jo
cmpsb
lods
sbb
shll
inc
inc
loope
xlat
mov
in
addl
iret
rorb
ss
jp
push
pop
fcoml
mov
push
es
loopne
out
fstpl
out
das
out
mov
pop
dec
inc
in
dec
xor
int3
mov
inc
pop
scas
jns
pusha
in
and
push
sbb
data16
js
jns
pop
add
aam
add
lods
scas
xchg
das
add
sub
dec
stos
mov
and
sarl
std
mov
enter
mov
add
scas
mov
cmp
and
push
js
inc
xchg
int3
ficompl
imul
pusha
inc
push
or
pop
cs
js
in
or
pop
shrl
test
xor
iret
jae
sahf
xor
cwtl
mov
mov
sub
scas
sub
inc
lods
lcall
fwait
xor
jo
xor
xchg
pusha
in
mov
mov
inc
ficompl
rcrl
shrb
ret
mov
in
ljmp
jne
ss
sub
stc
jno
mov
insl
add
out
stos
inc
flds
cmpsl
lcall
or
cmpsl
popa
xchg
addr16
int
lret
or
sbb
lret
and
xor
adc
aas
or
fstpl
in
push
xchg
jnp
mov
lods
and
dec
mov
aas
insl
fldt
adc
dec
inc
pop
add
jnp
inc
mov
les
sti
cmpsb
xchg
outsl
xchg
test
and
xchg
pop
push
fldl
add
out
mov
sti
inc
mov
cld
inc
push
jnp
xor
mov
push
xlat
push
xchg
sbb
cltd
out
mov
insb
or
push
movsb
clc
jno
loope
ljmp
shrb
xchg
xchg
and
jnp
and
xor
cmp
cltd
mov
sub
test
mov
out
mov
push
loope
mov
pop
iret
add
in
add
ljmp
popa
pushf
mov
shll
mov
jecxz
push
jecxz
adc
int3
mov
fs
mov
xor
mov
xchg
sbb
fistl
push
ljmp
or
fs
or
cmp
fnstcw
dec
and
jno
adc
outsb
lods
cwtl
aam
cmc
popa
lods
nop
push
or
add
out
ss
xlat
pusha
daa
push
pop
aad
shll
insb
adc
xor
sbb
sti
sbb
movsb
insl
js
adc
dec
lock
jns
push
mov
sub
bound
cs
or
scas
fisttps
adc
xor
inc
push
inc
pop
sub
dec
jmp
jp
aad
idivl
sub
iret
aam
xchg
mov
fwait
or
or
sub
xor
das
jl
out
int3
cwtl
add
cmc
mov
xchg
lcall
xchg
out
loope
mov
in
inc
loope
cmp
push
lds
or
cmp
mov
je
bound
and
in
mov
push
je
dec
push
xchg
pop
sbb
lods
mov
stos
ss
in
or
jge,pt
daa
das
popa
sub
mov
addr16
or
inc
xchg
sahf
pop
xchg
shrb
cmp
iret
mov
lds
inc
nop
push
mov
jno
sub
test
enter
sahf
pop
insl
xor
and
push
inc
pop
std
stos
cmp
and
pop
pop
push
xor
jmp
xor
xlat
jg
lods
jb
add
shlb
test
popa
inc
dec
inc
pop
push
pop
cmpsl
push
sub
sahf
fistps
fwait
jge
xchg
inc
loope
insl
jae
je
test
lcall
push
push
pop
jl
cwtl
sub
mov
ja
lods
jo
fucomp
mov
xlat
push
lock
dec
mov
push
ror
cmp
add
shlb
shrl
cmp
je
sub
mov
shlb
insb
jo
call
imul
pop
ja
dec
in
rorl
shll
lea
cmp
cmp
push
clc
outsb
mov
lret
jno
int
jl
pxor
jl
mov
imulb
pop
fadd
inc
in
or
xor
cs
inc
xor
push
mov
xchg
aad
js
mov
aas
js
jae
jmp
push
les
push
lret
cmp
je
mov
jge
fcomp
cltd
cmpsl
out
in
or
or
dec
and
out
jmp
pop
push
dec
push
inc
test
push
stos
xor
xchg
jbe
mov
and
lds
incl
js
js
push
imul
xchg
xchg
test
xchg
mov
cmpb
inc
lods
and
int
cmp
fnstcw
jl
fld
mov
cmp
aam
adc
into
addr16
add
scas
sub
add
inc
je
adcl
mov
fnstenv
cs
addr16
inc
jae
fwait
scas
sbb
jl
in
xchg
pop
ds
jmp
mov
loope
mov
sbb
aaa
js
pop
adc
mov
push
fwait
jp
inc
dec
es
andl
test
sbb
fbstp
xor
xchg
pop
mov
add
jmp
repz
add
mov
lea
sbb
pop
lock
mov
insl
nop
sti
mov
mov
pushf
mov
enter
mov
cmpsl
insl
sub
inc
sub
pop
lds
or
push
int
lods
or
out
loope
mov
test
fnstcw
and
ficomps
mov
sbb
lahf
enter
xor
subl
dec
sahf
adc
pop
mov
ret
je
mov
add
ret
in
xchg
aam
inc
push
fistl
inc
dec
movb
aaa
rcl
push
pushf
or
sub
jne
sti
les
hlt
push
insb
add
fwait
push
jne
pop
fiaddl
in
inc
outsl
hlt
sbb
jp
adc
cmp
aaa
addr16
cmp
add
test
imul
push
mov
adc
push
xor
pop
popf
mov
sbb
inc
fdivrl
lock
cwtl
stc
adc
in
and
add
ja
mov
add
inc
add
jp
sub
add
lods
sbb
shll
add
imul
push
gs
push
fsubr
loop
decb
dec
sub
in
call
fisubs
sti
mov
lahf
icebp
jo
dec
pushf
cmpsb
es
adcb
subb
gs
inc
fcmovbe
pop
andb
add
xor
ret
xchg
shrl
notl
inc
pop
popf
rorb
iret
pop
ds
scas
xorl
or
in
jl
cmp
movsb
sub
mov
push
fucom
aam
and
mov
gs
mov
insl
jno
int3
sbb
pop
stos
xchg
fisttpl
xor
dec
jae
bound
mov
mov
add
lahf
mov
add
inc
xor
popf
pop
fidivs
aaa
mov
testb
pop
or
jg
sbb
mov
sub
cmp
lock
mov
sub
rolb
in
mov
mov
pop
cwtl
pop
or
add
outsl
stos
and
lods
xchg
mov
dec
push
bound
lods
lea
rcrl
push
je
jmp
lea
imul
push
push
push
mov
adc
cmp
jmp
loope
pushf
fs
les
xchg
ljmp
test
mov
fildll
insl
sti
insb
pop
pop
test
inc
enter
fldt
dec
inc
cltd
imul
cmp
bound
jg
add
jg
jle
sbb
jmp
mov
inc
aaa
fisubrl
ret
sub
mov
xlat
cmp
sub
enter
xchg
test
mov
and
add
sahf
aad
inc
daa
out
stos
push
dec
mov
mov
jl
jne
ret
pusha
adc
ja
mov
push
xor
xchg
inc
into
mov
loope
fistl
ja
bound
xchg
inc
das
adc
loopne
sub
pop
repz
jo
jae
lods
inc
in
pop
into
sti
xchg
outsb
xor
sbb
jnp
arpl
dec
push
negl
mov
pop
push
bnd
stos
scas
movsl
dec
jo
sbb
in
lahf
out
jne
aam
out
pop
dec
jnp
lea
lcall
xchg
sbb
xchg
mov
movsl
lcall
lret
inc
push
dec
push
repnz
adc
sub
push
or
push
push
add
mov
pushf
loopne
or
adcl
push
jbe
dec
sub
xor
call
or
pop
pop
jns
les
sub
call
mov
sub
or
cmp
sub
cltd
rclb
push
andl
in
jmp
in
mov
daa
mov
mov
jo
rcrb
sbb
inc
xor
jno
insb
pop
add
mov
aad
xchg
jnp
aam
ret
sub
inc
clc
mov
imul
pop
repnz
fisubl
aad
scas
push
xchg
dec
push
push
lret
mov
sbb
adc
sub
pop
xorb
roll
add
jge
or
popaw
mov
mov
dec
mov
rorl
je
jns
test
into
ficomps
mov
push
mov
add
lahf
mov
push
dec
loope
and
xchg
inc
and
dec
bound
lret
jbe
int3
aad
loop
notb
sbb
xchg
pushf
loop
stos
in
sbb
sbbb
jmp
inc
test
int3
dec
pop
cmp
mov
add
push
sbb
or
into
test
cli
sbb
sbb
or
fldz
stos
xlat
pushf
mov
xor
sbb
adc
in
or
or
dec
mov
and
sbb
lds
cmp
pop
mov
mov
loopne
addr16
xchg
jp
mov
push
sbb
lods
pop
int3
mov
addr16
enter
scas
movsl
sub
xchg
xchg
jp
jp
xchg
sbb
mov
push
ret
dec
lds
mov
and
test
clc
lods
cmp
and
adc
inc
clc
fcompl
enter
loopne
test
stos
push
adc
jle
ret
jle
cmp
fnstsw
mov
inc
inc
in
mov
iret
sub
mov
dec
dec
loopne
int3
jg
push
mov
jp
sarb
test
cmp
push
or
cmp
pop
dec
mov
setae
sub
pop
push
inc
jle
cmp
shrl
push
addr16
jmp
push
xchg
sbb
or
imull
rorb
imulb
jle
sbb
and
xchg
aam
into
jae
inc
mov
hlt
inc
jns
leave
loope
mov
lock
rorl
ficomps
int3
mov
fdivrs
call
or
cmpl
jns
sub
and
out
clc
mov
aam
push
mov
add
fidivrl
mov
fmul
mov
pop
lret
pop
sub
mov
das
pop
cmp
xchg
lods
push
in
dec
leave
ds
gs
mov
cmp
jbe
xchg
iret
mov
cmp
je
sarb
ret
ds
lea
out
das
jmp
xor
mov
lods
push
ljmp
dec
iret
sbb
fdivrs
jbe
std
jae
adc
jp
popa
xlat
fcoms
pop
add
stos
into
std
mov
push
dec
push
xor
pop
and
dec
popf
jno
pop
jae
icebp
insl
pop
jb
std
sbb
hlt
out
pop
sbb
in
mov
fs
adc
mov
cmp
add
cmpsb
sar
mov
lahf
mov
pop
addr16
push
pusha
pop
adc
push
ret
nop
movsl
cmp
inc
pushf
xchg
adc
imul
mov
daa
js
and
lret
add
outsb
bound
push
jecxz
test
outsl
test
imul
sbb
inc
mov
fbld
out
nop
pop
cld
test
cmpb
clc
adc
je
cmp
insl
lret
pop
movsb
addl
ds
push
mov
sub
sub
xchg
push
xchg
mov
and
mov
test
stos
nop
rorb
mov
dec
push
or
jg
jp
jg
pop
xor
fists
test
and
test
and
scas
js
xchg
popa
sub
jl
movsl
paddusb
jnp
lret
int
loope
mov
pop
push
lods
xchg
mov
jns
cmp
or
movq
sarl
lret
push
fwait
inc
jge
int
jmp
pop
push
dec
pop
into
enter
and
jae
daa
jge
mov
lret
and
adc
xor
out
mov
or
jbe
sbb
inc
cmpl
rcrl
add
jae
rol
nop
ret
cltd
xor
pop
jmp
jmp
jmp
push
cmp
cli
inc
in
fisttpll
inc
pop
int3
lcall
mov
add
adc
push
scas
pop
dec
cmp
lahf
or
pop
jmp
stos
xlat
inc
dec
data16
popf
fcoml
cmp
adc
mov
sub
adcl
mov
leave
pop
push
aam
mov
pop
clc
sbb
mov
dec
sbb
lods
insl
pop
scas
iret
push
sub
or
sbb
sub
nop
das
xlat
xchg
push
int3
lock
sbb
sbb
fdivrs
add
mov
sarl
mov
lds
imul
jmp
inc
leave
jne
aas
push
test
pop
push
in
in
cmpsl
inc
and
mov
add
xchg
in
int3
scas
jmp
inc
dec
pushl
dec
sub
xor
xor
rolb
pop
adc
aam
jp
fildll
jge
mov
jmp
fsubrs
popa
dec
lds
clc
add
xchg
test
push
sub
sub
sub
adc
in
data16
adc
in
push
iret
add
mov
mov
sub
fdivrp
pop
xor
push
sub
test
imul
add
out
shlb
xor
jbe
cvttps2pi
or
push
jo
jno
and
mov
lods
fildll
sub
fstps
out
popf
mov
push
sub
xchg
push
repz
xchg
insb
movsb
out
fimull
xchg
test
mov
stc
inc
or
filds
mov
loope
mov
gs
movsl
aaa
sarb
sahf
pop
outsl
sbb
cltd
mov
mov
outsl
add
mov
out
jle,pn
int3
xchg
stos
or
and
mov
sbb
mov
jnp
ret
push
pop
loopne
jmp
and
lea
aas
push
xor
sbb
sbb
arpl
repz
imul
sti
jns
sub
sbb
push
loop
jge
lods
cmp
mov
cld
jg
jae
or
mov
stos
push
xor
sbb
leave
xchg
pop
daa
and
dec
mov
push
mov
hlt
aas
push
das
in
dec
xchg
out
cmpsl
push
jbe
in
fs
and
adc
out
xor
xlat
and
sub
bswap
sub
out
push
lock
cmp
dec
scas
add
ljmp
add
pop
inc
dec
cmpb
bound
aas
pop
fsub
xor
cmpl
mov
inc
jl
dec
jg
sti
mov
dec
filds
in
dec
push
cmpsb
or
mov
cmp
bound
jae
push
jne
fstl
dec
aaa
dec
or
lret
into
repz
and
dec
jl
xchg
mov
push
add
jno
mov
mov
aas
mov
popa
add
mov
je
lods
repnz
test
sub
scas
int3
les
mov
jecxz
push
jne
adc
dec
sub
jge
cmp
adc
into
or
sub
xchg
dec
add
jge
dec
lahf
and
out
das
dec
inc
popa
dec
testb
sbb
lahf
pop
imul
sbb
xchg
inc
lds
outsl
fdivs
and
cmp
cmp
add
or
sub
and
mov
jmp
inc
mov
xchg
bound
push
addb
xchg
pop
fadd
je
lret
cmp
xchg
mov
lret
sub
push
stc
cmp
mulb
insl
adc
arpl
xchg
adc
add
cmp
and
inc
out
lcall
mov
sbb
dec
loope
xor
int
push
pop
xchg
cli
popa
mov
cmp
in
xchg
adc
imul
stc
pop
cltd
adc
push
arpl
push
jge
sub
push
outsl
bound
ja
mov
adc
test
aas
push
gs
inc
push
nop
jbe
push
push
enter
xchg
test
mov
in
or
popf
bound
fdivrs
inc
es
gs
outsb
or
es
mov
add
dec
and
xchg
mov
lods
and
insb
sti
in
jmp
dec
push
pushw
mull
jns
inc
adc
xor
hlt
aam
leave
lret
or
lea
das
aad
jmp
cmpb
sbb
movntq
out
test
jae
push
cltd
cli
mov
jmp
loop
push
insb
imul
xchg
pushf
push
jle
and
aaa
add
xor
mov
sti
repz
cmp
jmp
xchg
inc
cmc
jle
out
adc
lds
pop
pop
dec
mov
ret
lds
xchg
es
arpl
int
popf
rcll
clc
stos
insb
ret
and
cmp
lock
add
xchg
outsl
fwait
stos
lret
mov
xchg
addb
or
jae
cmpsb
dec
popf
repz
mov
mov
faddl
cmp
cmp
mov
loop
ror
push
add
addr16
mov
cmp
iret
lock
push
mov
xchg
pop
repnz
mov
jp
pop
stos
mov
das
add
pop
mov
shlb
mov
inc
jb
mov
lods
mov
sub
call
stc
sbb
mov
add
inc
push
mov
pop
daa
data16
hlt
mov
out
adc
push
xchg
push
fcomi
sub
aas
mov
adcl
call
mov
lea
push
xor
popa
mov
lods
aas
out
int
subb
add
enter
sbb
inc
je
rorl
sahf
xchg
ss
ret
mov
xor
scas
and
insb
xchg
sbb
pop
into
pop
inc
dec
inc
jmp
inc
stos
and
sbb
pop
mov
pop
cmp
fcoml
inc
lahf
jge
loopne
test
add
cmp
push
jp
jae
add
sahf
scas
push
add
iret
jg
cltd
ss
das
sub
mov
mov
mov
jmp
cmp
incl
aad
rolb
jbe
cmovge
jnp
ds
push
lahf
push
imul
lock
add
mov
pop
inc
sbb
pop
ret
lea
lret
arpl
mov
mov
in
das
mov
sub
pushf
mov
mov
dec
bound
add
cvtpi2ps
scas
int
fidivs
scas
mov
lods
dec
cld
rolb
adc
xchg
sbb
sbb
and
cmc
jae
xchg
mov
sub
stos
mov
mov
mov
mov
pop
inc
imul
mov
add
ret
sbb
scas
je
mov
mov
pop
mov
inc
xchg
jecxz
test
stos
fwait
data16
daa
cmc
sub
stos
adc
or
xor
sbb
fcmove
cmc
leave
mov
pop
test
xchg
cwtl
xor
xor
and
mov
cmp
lret
and
xchg
daa
fsub
adc
std
sub
jb
cmpsl
mov
mov
fiadds
adc
mov
dec
rep
dec
jb
repz
xorb
xchg
fsub
sbb
nop
xchg
fists
jb
cmp
sbb
popf
cld
imul
movsl
sbb
jbe
inc
adc
sbb
pop
jns
fistpll
cmp
xchg
xchg
push
ljmp
mov
dec
out
adc
inc
inc
sbb
cld
shlb
enter
cmpsl
push
sub
fs
fidivrl
or
mov
inc
jl
fsub
inc
inc
add
push
fsubrs
leave
repz
daa
lret
das
lcall
in
rcrb
push
aas
imul
pop
jns
jns
mov
xchg
rcr
movsl
rcr
movsl
stos
inc
es
push
imul
adc
les
fidivrl
jp
jmp
mov
mov
les
ljmp
addr16
mov
xchg
dec
push
cltd
out
mov
fs
jge
int
xor
cmp
push
push
mov
repz
in
loopne
lods
dec
push
cmp
add
mov
mov
loopne
xor
jge
and
gs
ljmp
sub
mov
movsl
mov
push
jmp
stos
ljmp
jl
ret
enter
popa
ds
popf
push
cmc
mov
repz
icebp
push
mov
push
in
sbb
stos
push
xor
out
les
mov
stos
mov
lret
mov
mov
push
lods
aaa
pop
fs
dec
xor
xchg
xor
mov
movsb
into
lcall
hlt
sub
add
sbb
movsl
pop
pop
mov
push
pop
dec
jno
aad
xchg
les
inc
jecxz
cmp
ds
inc
das
push
mov
pop
test
fsubrp
mov
leave
push
lret
ja
shlb
sti
lea
in
mov
dec
cltd
mov
sub
outsb
xchg
xor
or
lahf
xlat
fucomip
fsubs
push
out
in
mov
xchg
add
sbb
pop
cltd
or
shl
add
add
sub
push
ret
sbb
mov
testb
aaa
xchg
and
xchg
or
sbb
mov
ror
jmp
push
push
cmpsl
nop
add
movsb
xor
sub
call
pop
push
xor
jecxz
add
test
or
enter
cmp
imul
lret
sub
out
mov
cmpsb
cmp
cmc
sbb
lock
ret
ror
int3
cli
ret
and
add
jae
in
imul
iret
dec
repnz
add
insl
repnz
dec
cs
call
cmpsl
or
ret
shlb
sbb
shll
cmp
cmc
mov
dec
pushl
add
aaa
or
push
inc
call
mov
xchg
or
pop
jge
shlb
inc
mov
fwait
push
mov
loope
pop
in
sub
xor
xor
fst
fadds
adc
sarl
imul
xlat
test
pop
arpl
test
xlat
mov
xor
pop
sti
es
clc
ret
movsl
rcrl
arpl
popf
out
ljmp
pop
push
out
adc
add
movsl
rcl
add
and
or
pop
scas
jne
jb
push
idiv
inc
mov
decb
cmpsb
imul
pop
nop
xor
mov
insl
cmpl
sbbl
in
and
loope
dec
test
jbe
popf
push
adc
sbb
or
jl
mov
shrl
xchg
aas
adc
or
mulb
scas
dec
int3
jnp
sub
out
test
or
xor
sbb
ss
push
xlat
jmp
pop
jbe
je
xor
sub
ljmp
testl
jl
aas
iret
adc
cmp
mov
rol
popf
scas
mov
sbb
inc
test
and
inc
inc
mov
xchg
loop
test
xchg
lret
ret
pop
sub
push
xor
push
pop
fiaddl
mov
in
cmc
jnp
mov
test
fs
add
test
and
aam
mov
add
xor
stc
adc
stos
sub
cmp
push
aas
mov
xor
in
je
xor
les
adc
and
mov
arpl
out
or
adc
jl
int3
cmpsb
cmp
cld
add
xor
cli
mov
and
mov
xchg
stos
pop
mov
jmp
or
icebp
mov
mov
sbb
jo
or
push
mov
add
mov
mov
add
in
cwtl
int
imul
and
push
inc
loope
xor
mul
je
rcrb
push
sub
push
pusha
pop
pop
cmp
and
cs
fadds
jge
xor
xor
scas
mov
rcrb
push
ljmp
add
lcall
scas
sub
ret
out
ljmp
call
adcl
xor
out
movsb
cld
push
ljmp
std
jmp
jnp
repz
cmpsb
push
fldcw
cltd
loop
jge
data16
popf
lds
loop
loope
ret
aaa
jge
xlat
imul
out
imul
mov
clc
jge
jno
cmc
xor
pop
sbb
mov
ss
into
iret
push
mov
xchg
push
mov
insb
add
adcl
push
les
push
sub
aas
in
roll
mov
xchg
out
xorb
xorl
repnz
mov
jae
xchg
loopne
in
mov
sub
sbb
iret
mov
stos
ficoms
inc
add
sub
ds
das
mov
and
sbb
push
sub
lahf
arpl
dec
adc
std
xor
stos
cmp
imul
int
push
inc
js
das
mov
or
pop
shll
xor
xor
es
push
jne
mov
pusha
or
lret
pop
repnz
sub
push
fnstsw
loop
cld
sbb
cmp
xor
jno
push
pop
les
push
loop
mov
ret
mov
fldl
adc
hlt
aas
rcll
data16
aas
inc
or
add
fdivrl
hlt
pop
jp
adc
or
stc
lods
sub
test
add
mov
xchg
cmpsb
pusha
ds
jg
int3
push
repz
sti
fistl
repz
sbb
jge
jmp
imul
testb
ss
outsb
popa
push
sub
rol
pop
cmp
cmpb
clc
mov
lock
cltd
insl
pop
dec
xor
fimull
lods
icebp
jl
cmp
mov
rclb
lods
aas
sarl
mov
and
mov
cs
lcall
mov
fs
out
lret
fidivs
rorb
xchg
push
sahf
inc
test
mov
push
ficoml
es
jl
lea
mov
jo
in
push
jns
fsubrl
test
mov
pushf
jnp
mov
std
int3
sub
or
nop
mov
xchg
daa
sub
push
popa
lock
jl
mov
lods
or
lods
imul
fidivrl
mov
cmp
jmp
aas
mov
pop
and
jbe
iret
pusha
cwtl
rol
mov
hlt
test
pop
jle
inc
lahf
inc
lods
test
adc
or
xchg
xor
lcall
popa
mov
mov
push
mov
mov
add
data16
lods
in
in
stos
add
sbb
adc
push
fsubrs
push
adc
dec
jmp
aad
xor
cli
pop
mov
xchg
loope
icebp
mov
mov
mov
mov
shll
dec
pushf
test
jae
shlb
sbb
int3
pop
jo
add
lock
inc
aad
mov
or
imul
adc
fbld
test
stos
cmp
mov
pop
clc
inc
jmp
repz
ja
movsl
rcl
rcr
push
jp
into
popf
adc
and
or
jnp
pusha
jns
mov
scas
push
ds
insb
daa
in
xchg
dec
pop
arpl
xchg
bound
cmp
jle
pop
xor
dec
xchg
cmp
cmp
test
mov
xchg
and
inc
sbbb
pop
push
sub
jb
les
cld
shr
and
imul
jbe
outsb
aas
mov
shll
add
jp
xor
cltd
fdivrl
push
push
inc
lds
sbb
movsl
out
iret
rorl
xor
data16
outsb
repz
pop
negl
jg
fsubl
sub
test
addr16
jp
jle
sub
imul
out
add
ds
push
cmp
pop
rcrl
adc
out
cli
into
ficoml
or
xchg
xchg
jl
inc
jnp
sti
mov
mov
js
mov
mov
lret
push
call
les
lods
cli
jno
inc
lods
cmpsb
mov
in
cli
fwait
out
xchg
lock
movsl
lods
push
fsubrl
dec
idivb
mov
pop
in
jecxz
imul
cmc
jle
sub
pop
pop
sbb
mov
scas
arpl
mov
cltd
loopne
mov
int3
outsl
push
mov
jno
and
mov
push
lds
in
scas
pushf
push
adc
xchg
push
mov
push
xchg
lds
cmp
sahf
jno
out
push
cmpsb
sub
dec
cmc
or
mov
cltd
adc
and
int3
sbb
imul
mov
lods
out
je
jbe
xor
das
xorl
add
jae
arpl
mov
mov
or
repz
mov
into
mov
inc
or
sub
sub
mov
jno
in
pop
xor
mov
or
xor
pop
xchg
icebp
lods
lods
lret
inc
sbb
subl
dec
cmpsb
ret
and
mov
aad
cwtl
ja
out
sbb
push
mov
stos
adc
xor
jno
pop
inc
stos
adc
les
aaa
or
loop
pop
roll
stos
xchg
xchg
out
inc
enter
inc
mov
jmp
imul
mull
notl
ficoms
pop
jp
aaa
push
and
dec
test
loopne
mov
pop
fidivl
int3
stos
inc
cmp
mov
cltd
shrb
push
sub
js
xor
test
ja
sub
dec
mov
dec
sub
call
in
cwtl
mov
pop
inc
jnp
sbb
sbb
mov
sbb
rorl
and
mov
and
es
mov
add
mov
pop
cmp
push
scas
stos
sub
ja
adc
pusha
mov
cmpsl
jnp
popf
lcall
mov
aam
call
cmp
sbb
mov
mov
cmpsl
and
xchg
add
xchg
push
xor
push
sub
push
mov
popa
rorl
dec
dec
loop
sahf
dec
dec
testb
cld
mov
pop
cmp
jp
sbb
cmp
and
cmpsb
popa
jo
mov
or
outsl
scas
loop
shll
mov
cmp
ret
dec
mov
and
rorb
call
lret
stos
dec
clc
ja
xchg
dec
and
add
data16
shr
jecxz
dec
adc
imul
sbb
mov
or
xor
aad
cmc
ja
test
dec
xor
hlt
mov
inc
ret
jmp
or
data16
jmp
mov
or
xlat
inc
pop
jle
jo
aad
dec
mov
shl
cli
scas
mov
xchg
rclb
jne
push
push
xorb
lods
rorl
add
scas
ljmp
ficompl
lds
daa
loop
out
inc
rorl
mov
mov
daa
and
cmp
test
das
leave
in
sub
or
js
mov
inc
mov
sti
adc
cmp
jns
mov
mov
fadd
test
xchg
test
push
ret
gs
cwtl
add
inc
clc
jg
mov
stos
clc
js
out
jno
mov
stc
adc
pop
mov
xchg
cmp
lahf
nop
icebp
insb
jecxz
int
add
lcall
and
cmp
xchg
push
sbb
mov
mov
cwtl
into
popf
js
cs
or
adc
test
pop
and
and
pop
inc
jnp
incl
add
sbb
fistl
mov
inc
pop
pop
fs
sbb
or
shlb
lret
cld
or
fiaddl
or
lock
lock
and
mov
std
int3
test
sub
xor
decb
push
leave
ljmp
repnz
cmp
adc
mov
inc
and
insl
cwtl
adc
dec
or
push
dec
into
scas
cmp
xchg
and
int3
add
je
inc
fwait
xchg
push
sub
fwait
mov
mov
daa
into
lock
pop
mov
aam
dec
sbb
out
sbb
pop
push
push
fdivrl
inc
xchg
dec
ja
test
aas
enter
scas
sbb
push
dec
shll
out
pop
test
pop
mov
aam
nop
xchg
lods
loop
jbe
clc
fsub
nop
inc
in
pop
addl
sbb
jl
daa
out
lds
scas
iret
gs
and
xor
push
cs
and
divl
inc
xor
mov
loop
xor
mov
jle
xor
shll
cmp
outsl
insl
jge
and
sbb
in
xchg
inc
dec
arpl
cmp
arpl
test
and
jmp
dec
flds
es
ffreep
mov
nop
shl
pop
dec
mov
lret
pop
loop
test
dec
pop
add
dec
iret
lods
xchg
inc
pop
clc
dec
xchg
dec
in
xchg
dec
sub
cmp
pop
rolb
and
adc
scas
sbb
or
fwait
cmp
inc
dec
fisttpll
cmc
imul
rcr
pop
clc
xchg
xchg
cltd
inc
jecxz
adc
fdivrp
aaa
or
cmovp
daa
mov
aad
std
lret
jmp
loopne
je
lahf
loopne
push
loopne
jl
pusha
inc
sbb
cmpl
or
sbb
push
notb
insl
test
mov
sahf
es
jge
cmp
pop
into
stos
stos
mov
push
mov
lret
cmpsb
ja
fs
dec
sti
xor
mov
cwtl
xor
fists
and
fwait
sti
mov
daa
cmc
daa
scas
push
sbb
fnstsw
outsl
sub
or
push
rcrb
repz
clc
jns
push
xchg
sbb
push
inc
stos
into
cmp
inc
jp
mov
mov
add
mov
sub
cmp
inc
or
or
lahf
inc
mov
mov
and
mov
out
leave
inc
rclb
xchg
mov
push
xchg
or
test
test
jno
test
dec
dec
repz
imul
adc
adc
mov
mov
xor
sub
inc
pop
inc
pop
xchg
pop
add
xchg
aam
stc
and
and
push
or
insb
clc
test
push
jg
imul
push
dec
mov
test
movsl
fisubrs
sub
pop
inc
jg
cltd
in
jl
mov
push
es
fbld
xchg
mov
jne
lcall
mov
test
cmp
inc
scas
add
nop
mov
pop
sub
jl
in
cs
cmpsl
imull
and
xchg
adc
mov
mov
xchg
jnp
scas
xor
pusha
dec
popa
xchg
and
xchg
or
cld
mov
loope
jae
call
repnz
imul
gs
sub
les
sub
mov
out
lods
adc
negl
push
add
xor
xchg
mov
xchg
shlb
pop
outsb
outsb
sti
push
mov
dec
cmp
sub
aas
fisttps
sti
scas
test
dec
dec
repz
popa
sbb
sbb
subb
ds
push
or
cmp
movsl
adc
aaa
cmpsl
inc
xchg
out
inc
xor
mov
leave
mov
pop
sti
and
testb
mov
cltd
shrb
ss
sub
pop
aam
sbb
lret
jg
jmp
or
mov
nop
ret
jp
imul
add
sbb
movsl
push
lret
inc
stc
iret
repz
mov
or
mov
shll
mov
or
push
aaa
dec
clc
or
inc
dec
icebp
mov
dec
pusha
adc
push
loop
or
cld
sub
fimuls
xor
rorb
mov
popf
mov
dec
out
outsl
shll
or
jnp
out
outsb
jnp
add
push
cltd
ljmp
and
aad
cld
sti
mov
incl
idivl
fmuls
adc
lock
sub
and
scas
adc
or
lods
addr16
jge
pusha
std
or
sbb
pop
cmp
sbb
out
test
fistps
or
adcl
mov
inc
movsb
jl
js
lea
stos
xor
pop
adc
jo
add
xchg
adc
mov
scas
repnz
xor
jl
jecxz
push
loope
fsubs
mov
mov
nop
dec
dec
popf
mov
xor
in
xchg
ja
shrl
sbb
push
call
dec
clc
xchg
cwtl
pop
aad
nopl
mov
mov
cmc
dec
mov
mov
push
xlat
out
cmp
shll
ja
sbb
repnz
lcall
inc
movsl
pop
int
int3
jb
xor
in
push
xor
mov
hlt
shr
arpl
cld
push
sbb
pop
orb
sti
hlt
cmp
mov
pop
pop
dec
push
dec
icebp
shll
in
es
mov
aad
sub
std
push
cmpsb
and
lahf
pop
xchg
call
lcall
inc
and
jg
std
push
rcl
int3
scas
adc
adc
cli
sbb
push
mov
loopne
mov
mov
fcomps
sub
mov
inc
rcl
mov
test
mov
push
jbe
nop
push
call
mov
push
cmovl
mov
or
jns
xchg
aam
adc
xor
rcrb
mov
pop
dec
mov
popa
adc
aam
lcall
and
add
fstl
paddq
push
mov
out
adc
jg
test
xchg
mov
aas
xlat
rclb
popa
cltd
cld
fadds
ret
hlt
sahf
addr16
inc
jg
pop
mov
arpl
dec
out
je
imul
pop
dec
sub
adc
dec
cmp
pop
jb
out
fistps
test
andb
sar
enter
in
xchg
mov
pop
rcrl
cmpsl
pop
lock
in
mov
inc
jbe
or
jp
mov
mov
mov
int
aas
sub
or
mov
mov
mov
neg
pop
movsb
ja
movsl
movsb
mov
rol
arpl
dec
and
mov
or
stos
mov
mov
lock
jge
rorl
mov
imul
lret
int3
or
inc
mov
and
jnp
cltd
js
fstps
or
jns
push
xlat
neg
push
mov
js
add
and
mov
cmp
sahf
in
mov
dec
add
sub
iret
or
dec
adc
pop
push
jp
jp
adcl
js
roll
cmp
pusha
ja
pop
sub
dec
lret
stos
pop
xchg
sbb
mov
sub
test
cld
dec
mov
call
dec
ss
int3
fildl
push
jmp
mov
decb
test
cmp
pop
mov
cmp
xchg
fisttps
dec
sbb
inc
sbb
loope
fstps
adc
movsl
mov
shl
stos
inc
and
lret
push
sbb
or
sbb
dec
dec
sub
out
or
imul
jecxz
aaa
adcl
fiadds
es
xorl
cld
aas
cmp
pop
fcomps
push
cwtl
cmp
mov
aas
loop
orl
cwtl
inc
adc
mov
push
stos
and
repnz
fsubl
cvtpi2ps
fisubrs
loop
sub
push
in
push
jge
cmp
jecxz
stc
push
mov
popf
or
stos
mov
sahf
jns
push
jo
clc
lcall
or
add
icebp
push
inc
push
add
fisubrl
jge
out
xchg
mov
in
mov
js
fwait
jnp
xor
test
lahf
xchg
imul
adc
or
xchg
mov
dec
cld
or
pop
mull
mov
xchg
cmp
jle
mov
push
iret
xchg
cmpsl
loope
fisubl
xchg
cs
add
fidivrs
aaa
jo
xchg
call
dec
adc
jne
push
add
mov
adc
push
mov
pushf
mov
call
aad
mov
xchg
push
mov
push
and
xchg
ljmp
inc
insb
push
add
inc
sub
pop
push
roll
fs
das
aad
push
stos
sub
je
push
mov
jp
flds
idiv
add
fdivs
push
roll
inc
jns
xlat
dec
dec
or
test
ljmp
sub
sbb
xchg
iret
gs
pop
jnp
lods
fmull
outsb
lret
test
pop
or
in
dec
sub
loope
pop
and
je
sub
cmp
sub
jmp
inc
jae
push
out
pop
adc
jmp
aam
outsb
mov
dec
popf
jae
out
mov
dec
ja
fwait
and
lahf
fnstenv
sti
loope
fnstcw
dec
cli
sub
rclb
mov
hlt
sbb
dec
sub
dec
sbb
test
jno
mov
mov
and
mov
jns
js
aam
dec
scas
push
stc
xor
and
sub
pop
or
pop
xor
adc
mov
jae
leave
test
cli
hlt
pop
ficomps
cmp
xchg
repnz
jle
loope
inc
mov
mov
js
or
pop
cmpl
and
mov
jbe
adc
idivb
clc
fisttpll
call
push
pop
enter
insl
push
testl
xor
pop
aad
cmp
ljmp
mov
jg
pop
jbe
xchg
std
pop
ss
mov
push
jno
rcr
and
mov
xor
jp
jbe
mov
jle
stos
pop
mov
mov
aam
jns
cli
or
fistl
cwtl
push
movl
sub
fwait
pop
push
sbb
sub
sub
add
mov
xchg
iret
push
add
movsb
cmp
pop
aaa
lea
pop
jp
icebp
and
sbb
dec
mov
ja
xorl
out
xchg
and
nop
pop
and
aam
add
js
loop
neg
pop
es
insl
add
arpl
dec
repz
cmp
outsl
sbb
in
pop
mov
js
jmp
ret
stc
cmp
xchg
out
in
cmpsl
addl
in
enter
mov
cwtl
out
mov
inc
stos
out
dec
push
mov
push
cmp
push
add
repnz
push
sbb
fs
arpl
fstpl
outsl
ret
xchg
dec
sub
jl
cli
loopne
push
push
push
jge
and
loope
push
outsb
nop
movsb
dec
pop
xor
xor
pop
pop
loope
repz
shlb
mov
xchg
cs
mov
cmp
and
ds
inc
and
push
dec
aam
xor
push
test
hlt
inc
sbb
loopne
adc
outsb
cmc
jo
ret
lret
rolb
jne
gs
mov
ds
into
xchg
lcall
hlt
out
test
add
pop
pop
inc
leave
push
pushf
stc
enterw
mov
fcoml
imul
je
repz
pop
and
popf
rclb
in
lock
sahf
lret
orb
mov
test
pop
mov
mov
inc
test
fistpl
popl
arpl
int3
add
lret
jle
movsl
jno
dec
cmpsl
test
xchg
hlt
ds
pushf
cmp
lods
or
cmp
setge
lcall
or
lds
or
mov
pop
mov
dec
mov
cmpsb
xchg
add
mov
movsb
ret
push
push
dec
xchg
push
mov
lret
stos
lahf
aam
cs
movsl
sahf
lods
cmp
cmc
add
xor
xor
lret
aad
inc
mov
add
aad
xor
add
jbe
push
sub
rorl
fadd
sub
enter
xchg
fucomp
js
or
dec
popf
jmp
or
nop
ret
push
or
push
idivb
insl
cmc
add
sub
mov
lret
loope
dec
gs
int3
jle
sub
or
jno
push
mov
insb
aad
cltd
dec
cwtl
in
adc
iret
xor
mov
or
sbb
pop
not
pop
mov
mov
xchg
or
out
js
aas
hlt
jnp
add
adc
sbb
and
jle
orb
jmp
dec
inc
stc
outsl
out
inc
insb
push
ja
call
movsb
cmp
adc
scas
inc
lret
and
sub
ds
movsl
jl
lahf
cmp
jecxz
lcall
and
cwtl
test
jns
mov
sub
jg
push
call
lcall
ss
rcrb
inc
out
daa
jns
cmpl
rcl
aam
sbb
jmp
fwait
clc
and
hlt
fcompl
mov
and
lods
std
sub
ja
cmp
adc
and
movsl
out
lods
outsb
ret
sbb
jl
loop,pn
sub
adc
lahf
pop
fidivl
pop
pop
mov
ljmp
jae
fs
aas
sbbl
scas
insb
push
mov
mov
rcl
and
adc
xor
pop
sbb
scas
in
inc
call
mov
adc
inc
mov
mov
lds
push
jnp
push
inc
sbb
mov
fcmovnbe
push
mov
mov
loope
pop
pop
mov
sub
pop
inc
iretw
sub
push
add
push
mov
mov
add
pop
mov
pop
loop
lcall
out
jno
mov
cmpl
inc
or
jb
scas
vmovshdup
lcall
or
addr16
dec
pop
repz
aam
mov
mov
jo
mov
daa
inc
mov
cmc
jnp
fstps
shlb
push
enter
outsb
pop
lcall
lods
inc
adc
rolb
dec
mov
mov
out
or
frstor
push
mov
and
jo
fnstenv
dec
mov
push
stc
mov
xor
jg
ljmp
jge
addr16
int3
fisttps
inc
pop
sti
mov
std
jo
mov
and
mov
fcmove
test
aaa
pop
mov
dec
mov
ret
test
xor
out
in
adc
bswap
xchg
and
or
ljmp
push
jmp
pop
fwait
mov
fidivl
arpl
inc
divb
hlt
mov
cmpsl
inc
into
sub
sbb
fucompp
and
das
stos
stos
outsb
test
repz
xchg
or
mov
out
incl
cmp
rcrb
popf
and
ljmp
test
ljmp
or
dec
leave
jg
pop
sbb
int3
jae
push
jo
cmp
mov
jb
clc
xor
gs
stos
mov
sub
pop
xchg
icebp
adc
mov
int3
scas
mov
lock
std
pop
lahf
popf
xchg
cmp
imul
sbb
pop
lcall
test
adc
cmpsb
jmp
mov
dec
mov
fs
dec
inc
pop
sar
and
in
mov
xor
xchg
movsb
mov
push
inc
xchg
push
cmpsb
add
call
cmpsl
push
jno
dec
aas
push
psubsb
dec
pop
sub
cld
xchg
stc
sbb
push
sahf
aas
add
mov
neg
fldenv
cmc
mov
mov
sbb
jne
dec
dec
popa
pop
jno
inc
dec
arpl
mov
jbe
dec
int
scas
sbb
fwait
popa
fdivs
dec
and
gs
inc
fmuls
xor
out
and
inc
mov
cmpsb
push
adc
adc
js
gs
dec
mov
mov
xor
xchg
daa
and
lea
addr16
adc
lcall
cs
push
daa
add
add
or
and
insb
sti
dec
dec
daa
cmp
xor
scas
ds
and
scas
testb
dec
push
mov
cmp
push
clc
in
and
sahf
into
mov
xchg
pop
pop
mov
test
xchg
sbb
and
add
jl
sbb
mov
mov
dec
mov
nop
les
push
mov
sar
scas
fs
inc
imul
fldenv
push
js
in
cli
cmpsl
in
testb
xchg
mov
jnp
mov
and
mov
adc
ret
dec
cmp
sbb
sbb
inc
popf
testl
aas
in
pushf
sbbb
or
inc
call
push
hlt
inc
out
lock
mov
or
cmp
sbb
pop
jp
xor
ret
add
out
stos
sub
jmp
shll
in
mov
mov
in
jns
cltd
xor
add
xchg
push
push
stc
dec
movl
into
xor
pop
cwtl
and
push
sub
popa
int3
and
xor
mov
adc
add
repnz
lea
leave
jnp
dec
test
neg
sbb
pop
cmp
mov
rcll
adc
lret
test
dec
subb
rcr
test
mov
lea
aaa
pop
or
xor
jl
rolb
dec
je
int3
jmp
fs
jnp
jb
sbb
fwait
adc
mov
mov
push
inc
jne
mov
lock
loopne
arpl
mov
sub
jmp
cmp
lcall
lcall
xchg
add
out
std
xlat
pop
mov
cltd
mov
loope
push
dec
hlt
push
cwtl
mov
mov
xchg
sti
inc
cmp
aad
ficoms
rcr
mov
out
lahf
mov
mov
js
push
push
inc
popf
mov
cmp
or
or
cwtl
fdivs
daa
ficoml
cmc
xchg
mov
sub
or
push
notl
rcll
nop
inc
jne
fistps
sbb
jecxz
xor
sbb
sub
dec
dec
xchg
push
jno
push
cmp
jmp
mov
out
rcrl
test
push
inc
popa
and
jnp
sub
cld
insl
mov
mov
sbb
pop
mov
xchg
adc
jb
jg
lret
sti
and
pop
pop
cld
and
mov
mov
xchg
out
xchg
mov
inc
jecxz
dec
push
and
pop
out
add
or
mov
cmpsl
jp
sub
js
inc
cwtl
cli
and
pushfw
and
push
mov
test
loope
ret
out
lods
aad
lahf
imul
lcall
clc
add
jo
xchg
scas
or
mov
cltd
and
inc
sbb
icebp
jno
cmp
dec
pop
dec
add
scas
mov
sahf
dec
sahf
pop
add
hlt
fs
inc
mov
jecxz
mov
mov
jge
fdivr
push
push
push
stos
popf
cld
les
std
push
pop
pop
lcall
jmp
stc
pushf
jl
outsb
fcmovnu
cmp
mov
sub
inc
shll
clc
push
aas
jmp
pop
and
dec
in
cmp
cmp
bnd
adc
loopne
lcall
add
lods
call
mov
mov
push
or
and
xchg
fcompl
cmpsl
or
mov
shlb
or
popa
fsubs
or
mov
sbb
lret
mov
or
mov
fs
mov
ja
jmp
scas
leave
in
add
insl
adc
ss
in
imul
pushf
mov
push
fisttpll
inc
xor
orl
and
aas
sbb
mov
dec
loope
lock
fcmovb
movaps
mov
aaa
add
ss
leavew
add
cmc
xor
mov
fildl
js
int
test
and
or
das
lcall
outsl
pop
adc
push
pop
push
imull
ss
add
hlt
adc
sbb
ja
fs
lock
stos
fwait
mov
das
inc
jmp
push
ljmp
popa
xor
loope
call
es
sub
pop
notl
rcr
stos
pop
lods
icebp
xchg
dec
cmp
ja
adc
fisubrl
jecxz
jmp
js
jmp
es
cmpsl
push
pop
hlt
jle
mov
pop
inc
inc
icebp
add
and
adc
sbb
idiv
ficomps
pop
rorl
pop
cmp
stos
add
popf
dec
inc
test
inc
ret
enter
pop
xchg
xchg
sbb
sbb
repz
test
lds
or
dec
mov
xor
push
lcall
pusha
mov
in
pop
stos
push
xor
scas
out
clc
andl
jbe
and
je
lods
jbe
rcrb
lds
in
jnp
aas
aam
aad
mov
jmp
scas
or
mov
cmp
dec
pop
popa
jne
loopne
sub
ljmp
push
leave
cmp
sahf
or
cltd
xchg
jecxz
mov
out
in
sbb
mov
jb
xor
mov
cmp
jns
xchg
mov
mov
push
or
and
js
push
adc
fldcw
push
sub
sbb
xor
sahf
cmc
xchg
arpl
flds
aam
pop
jne
sbb
xor
in
xchg
inc
fxch
jae
lahf
sub
int
sbb
into
xchg
cmpl
into
stc
sub
cmp
cltd
loopne
imul
shrl
xor
leave
ljmp
jmp
fwait
sahf
loopne
jno
inc
into
imul
cmp
icebp
fisttps
inc
sub
movsb
subl
fldcw
inc
out
gs
cmp
les
mov
adc
mov
adc
lods
cmp
sbb
jge
sbb
xchg
push
icebp
xchg
sub
add
loop
fildll
ret
mov
pop
jg
jbe
pop
shrl
xchg
jmp
idivl
adc
and
idivl
sub
stos
iret
dec
cmp
pop
push
movb
push
pop
in
mov
adc
loop
mov
lea
inc
cmp
jp
int
imul
bound
sub
mov
adc
pop
fstl
push
cmp
aad
loopne
stos
mov
mov
and
xchg
test
xchg
in
aam
out
and
xchg
cld
in
mov
and
jmp
adcl
pop
je
cmpsb
in
es
xchg
ds
mov
or
fdivrl
inc
sbb
inc
hlt
pushf
mov
call
loope
int
arpl
push
add
pop
fisubl
mov
insb
dec
push
aam
and
leave
xchg
ljmp
cltd
mov
fadd
pop
bound
mov
aad
inc
mov
mov
pusha
or
adc
push
scas
aaa
pop
jns
xchg
adc
leave
add
insl
add
int3
std
inc
popf
inc
shl
popf
add
jbe
jmp
fcomps
imul
inc
mov
mov
lcall
fwait
movsl
sub
mov
adc
add
xchg
xchg
movsb
pminub
xor
sbb
fbld
mov
adc
faddl
in
or
sbb
lret
mov
adc
cltd
jmp
sahf
into
jp
andl
push
gs
mov
loope
cs
mov
out
jae
aad
jp
negb
push
scas
scas
jbe
inc
xorl
out
sub
int
inc
shlb
sub
or
jae
in
dec
hlt
mov
xchg
pop
mov
and
inc
adc
addr16
les
stos
cmpsb
dec
mov
insb
aas
ja
mov
mov
pop
xchg
pushf
mov
add
mov
jne
xchg
mov
pop
stc
shlb
mov
mov
ret
aas
mov
mov
push
xor
sahf
fnstenv
in
pop
push
mov
adc
xchg
loopne
outsl
and
mov
jmp
shl
adc
and
roll
subl
mov
mov
sbb
stos
cltd
xchg
pop
out
inc
ja,pt
mov
in
imul
mov
add
mov
mov
lret
test
or
leave
or
ss
push
sbb
int3
adc
imul
fcomi
imul
outsb
in
pop
movsb
jmp
mov
or
jo
fs
sub
jmp
pop
movsl
and
dec
out
mov
mov
mov
pop
xor
sbb
nop
jecxz
enter
test
pop
xchg
out
xchg
adc
cmp
pop
xor
jmp
dec
mov
nop
or
pop
loop
loope
fsubrl
or
xchg
mov
xor
xor
jp
bound
pop
outsb
or
xorl
clc
imul
xchg
movsb
jmp
inc
scas
sbb
dec
test
loopne
inc
gs
pop
sub
out
adc
inc
cmp
cmp
cmc
fs
clc
sub
lods
lahf
lret
mov
push
shrb
fldl
sbb
out
mov
out
xor
push
add
std
enter
sub
repz
loope
xor
scas
adc
or
rolb
iret
repz
cmp
sahf
dec
dec
cmp
and
dec
cmp
add
dec
inc
xchg
ss
adc
lahf
inc
loopne
push
cmpsl
mov
or
xchg
mov
pushf
loop
sub
enter
pop
outsl
push
fmuls
aad
ljmp
scas
xchg
xor
fnstsw
aas
pop
pop
out
in
repz
or
dec
push
cmp
mov
inc
inc
jno
push
jmp
mov
add
std
popf
adc
dec
pop
adc
nop
out
inc
loop
lods
mov
insl
cmpsb
cmpb
jmp
ret
sarl
jae
popf
add
adc
outsb
jb
pandn
imull
pop
inc
and
adc
out
dec
test
jp
aad
add
or
aam
lret
insb
rolb
xor
fs
xchg
subb
mov
es
pushf
aad
xchg
addr16
test
testl
pop
js
hlt
scas
pop
push
sbb
or
inc
in
movsl
mov
jo
jl
fistpl
add
pop
mov
int3
test
testl
add
pop
loopne
mov
int
cmp
jp
jp
and
flds
pop
cmpsl
add
cmp
lcall
std
es
adc
daa
or
scas
mov
xchg
insb
aas
aad
loope
xor
stc
and
adc
in
lret
les
sbb
mov
push
xchg
pushl
dec
cwtl
inc
sub
ds
lock
xchg
enter
fsts
stos
arpl
mov
mov
mov
lcall
mov
mov
clc
jp
je
push
out
xor
ret
dec
xor
lret
or
es
pinsrw
repz
push
lds
mov
lahf
sbb
in
pusha
hlt
sub
and
mov
cmp
cli
and
pop
and
jecxz
add
arpl
lret
xchg
aaa
mov
imul
and
mov
test
lock
das
jmp
insl
stc
xchg
in
ss
fisubs
aas
testb
sahf
adc
push
jle
mov
and
mov
cmp
jp
pop
or
pushf
call
in
cmp
sti
rolb
mov
dec
or
mov
sub
pop
pop
addr16
scas
es
std
pop
pop
add
stos
pop
idivl
popf
xchg
lahf
jle
and
dec
leave
std
mov
add
mov
mov
enter
mov
mov
fstpl
lods
outsb
ss
push
xorb
mov
insb
shrl
loope
mov
mov
out
cmpl
int
mulb
fnstcw
out
mov
adc
xchg
fstp
shll
pop
loope
nop
cmp
add
out
add
inc
jno
movsl
and
xchg
std
pop
orb
incl
jg
loope
or
loope
mov
pop
mov
rcr
xor
sbb
andl
orb
sbb
stos
repz
xchg
std
dec
mull
fs
sbbl
popa
pop
inc
dec
cmp
pop
lea
sub
jne
or
orb
repnz
out
dec
mov
mov
pop
ficompl
xor
mov
int3
movsl
imul
das
add
lea
mov
icebp
outsl
mov
insl
test
mov
sbb
in
xchg
xor
add
lret
cli
xchg
rcrb
mov
dec
cmp
insl
jge
and
pop
mov
pusha
addb
ss
cmp
push
mov
ss
jo
icebp
adcl
fnstsw
icebp
ja
jbe
adc
sub
sub
cmp
dec
in
imul
mov
notl
sbb
xchg
push
and
fs
loop
sbb
inc
fdivs
mov
rcr
cmp
jecxz
pop
push
mov
and
and
mov
jne
cli
cmpsb
pop
sbb
push
adc
cmc
adc
pop
mov
notl
and
cmp
in
add
cmp
push
and
xchg
lcall
pop
mov
test
xor
lods
int
adc
nop
lahf
ficoml
rolb
icebp
out
enter
mov
sbb
push
popf
mov
or
pop
mov
lret
adc
mov
adc
stos
cmp
mov
or
push
adc
pop
push
mov
mov
sub
jae
and
pusha
mov
testl
fs
mov
and
pop
aaa
xchg
add
xor
mov
fistps
xor
sbb
push
testb
adc
rcr
ja
sub
push
add
xchg
inc
pop
dec
jno
lods
test
scas
inc
add
push
sub
xor
cmc
sub
gs
ficoml
inc
push
jo
pop
mov
mov
in
ja
int3
nop
mov
rol
in
jo
jl
mov
cmp
push
sbb
sub
sub
fucomp
sar
cld
seta
push
mov
sti
mov
sbb
adc
idiv
jns
mov
test
in
aam
cmp
jo
and
jb
dec
into
jecxz
insl
stc
fwait
sub
mov
out
jne
pusha
push
xor
jge
jge
imul
dec
jns
inc
mov
mov
les
dec
js
sbb
les
xchg
test
lock
inc
lea
sub
xchg
dec
scas
call
movsb
into
rolb
mov
jle
test
js
ret
gs
sbb
mov
mov
shll
clc
and
xor
mov
inc
push
in
push
dec
addl
mov
sub
dec
mov
arpl
dec
std
cld
jo
mov
inc
cmp
cmp
xor
pop
push
call
mov
xchg
aam
sbb
xchg
push
cltd
or
scas
inc
jo
cmp
call
data16
testb
nop
adc
jp
and
fwait
push
fwait
mov
mov
iret
inc
imul
lret
movsl
call
loopne
mov
jb
bound
cli
mov
and
pop
movsl
pusha
cmpsb
sbb
and
add
or
es
adc
mov
movsl
jae
adc
fs
adc
add
jl
pop
inc
loope
sub
pushf
sbb
jge
insb
xchg
mov
repz
mov
out
lods
sbb
push
std
imulb
int
add
and
xchg
in
mov
int
loope
cltd
int
std
adcb
addr16
xchg
cld
rcr
lds
loope
sub
test
and
jb
enter
mov
jp
mov
hlt
aas
cmpsb
sub
test
sbb
xchg
fnstsw
xchg
inc
dec
jae
stc
and
enter
pop
fmull
mov
and
sti
mov
pop
mov
inc
inc
xor
orb
test
push
out
dec
jne
sub
inc
jno
sarl
mov
pushl
gs
sahf
mov
outsl
add
jb
mov
sbb
sbb
cmp
cli
mov
orl
rcrb
add
outsl
lcall
sbb
rorl
dec
out
popa
ss
ds
cmpsb
arpl
sahf
sub
enter
push
pop
cs
mov
popa
or
pusha
stos
adc
fiaddl
mov
xchg
sub
push
fcompl
daa
out
lahf
mov
enter
dec
int3
and
call
cmp
sbb
testb
out
fidivrl
mov
or
popf
int
or
bound
jge
pushf
shlb
fdiv
je
mov
movsl
into
sbb
ds
sahf
and
xchg
jmp
arpl
jl
aaa
aam
ds
sub
jno
xchg
pusha
xchg
ss
sbb
add
and
clc
repnz
xchg
neg
inc
insb
in
xor
arpl
jecxz
push
adc
add
and
ljmp
cli
inc
pop
pop
jecxz
es
cltd
jns
lock
flds
dec
pop
dec
jl
mov
icebp
dec
xchg
jo
xor
jnp
lods
pop
das
out
cmpsl
and
jl
jbe
adc
jne
pop
test
sarl
fcmovnb
int3
pusha
add
mov
adc
mov
inc
mov
dec
les
pop
stos
std
icebp
xchg
loopne
pusha
in
push
dec
dec
test
and
jge
xchg
lret
push
aad
mov
in
xor
ljmp
andb
jp
cmp
insb
in
scas
fbstp
mov
lods
divb
pusha
data16
icebp
mov
inc
mov
pop
mov
fstps
mov
adc
inc
and
and
or
leave
jge
ljmp
in
and
pop
fldcw
jns
pop
sbb
adc
jns
xchg
dec
rcrb
pusha
sbb
aas
adc
pop
leave
jp
mov
into
push
out
xchg
xorl
rcrb
out
add
cs
andl
and
dec
push
xchg
lret
iret
sarb
mov
mov
in
pop
pusha
fdivrs
in
adcl
in
sub
or
xorl
fdivrl
pop
in
inc
or
mov
subb
inc
loope
aas
shll
and
das
or
inc
and
subb
pop
jp
in
into
lret
shll
cmp
push
pop
jge
and
lods
push
sbbb
inc
mov
sub
iret
mov
test
in
scas
mov
push
push
push
or
sub
or
imul
enter
dec
dec
pushf
loopne
fsubrl
and
hlt
and
daa
cmc
add
push
jg
fnsave
mov
int3
lea
clc
call
mov
inc
or
push
push
das
sbb
popa
int
test
icebp
sub
xor
in
out
ljmp
ss
idivl
jno
ds
xlat
inc
dec
xor
mov
adc
add
fmull
jl
clc
pop
pop
enter
mov
jnp
ljmp
ja
inc
adc
ficompl
iret
mov
jae
push
or
inc
or
sub
inc
mov
mov
test
es
pop
push
dec
inc
loop
dec
pop
push
mov
mov
jmp
add
std
inc
mov
rorb
in
sarb
mov
sub
push
jp
sub
dec
sub
negl
xchg
xlat
sub
outsl
jg
fwait
push
fs
add
xor
push
leave
dec
sahf
sbb
bound
mov
ja
sub
mov
mov
daa
mov
adc
jl
call
jns
cmp
and
xchg
cwtl
leave
adc
pop
inc
insb
pop
fmull
cld
push
stc
mov
notl
leave
sbb
mov
and
push
sub
mov
inc
mov
cwtl
stos
xchg
mov
mov
or
xchg
fdivrs
pop
mov
cwtl
xor
outsl
fdivr
pop
adc
adc
jbe
push
xchg
jmp
or
adc
mov
test
out
xor
push
pushf
mov
mov
es
ret
scas
xor
push
or
jnp
int3
adc
icebp
mov
fwait
aad
dec
mov
stos
out
lret
iret
loopne
fsubr
lods
es
jle
repnz
fdivs
xchg
pop
fwait
mov
mov
shlb
sbb
clc
jae
inc
mov
xchg
pop
mov
dec
stc
xchg
pop
pop
sarl
lods
xchg
add
and
std
add
pop
lds
stos
outsl
enter
xchg
cltd
jl
xor
mov
aam
out
sbb
scas
sub
sub
in
inc
add
xor
cmp
hlt
les
push
mov
fdivrl
push
dec
clc
imulb
mov
fistpl
inc
pop
fsubrs
mov
mov
outsl
mov
and
inc
test
cmp
call
ds
jbe
test
mov
aam
rorl
imul
dec
pop
ficoms
mov
sub
xor
stos
test
pop
jle
adc
mov
insl
in
mov
subl
stc
xor
mov
repnz
aad
daa
sub
jbe
push
inc
mov
mov
popa
rcrl
aam
daa
pop
jg
or
fwait
ret
pushf
inc
sbb
or
cltd
je
jns
inc
dec
sbb
repnz
jg
outsb
or
test
xor
sub
sbb
xorl
mov
pop
es
or
mov
and
ffree
jg
aad
addr16
push
mov
call
sti
cwtl
js
sub
scas
jmp
scas
fnstcw
dec
cmp
push
xlat
in
add
or
pop
jmp
jnp
inc
jbe
push
faddl
inc
and
imul
cltd
xchg
mov
push
shlb
fidivrs
aaa
lds
shl
fidivrs
jae
or
push
in
jae
add
mov
outsl
push
push
rcl
nopl
ljmp
stc
cltd
mov
leave
push
xor
call
jne
mov
lret
xor
adc
rcrl
push
pop
mov
mov
lret
sbbl
lock
adc
sbbl
jmp
lahf
or
push
rcrb
in
or
mov
stc
les
in
xor
xchg
xchg
sub
pop
mov
cmp
adcb
jbe,pt
mov
ss
aam
test
lahf
xchg
or
fldl
bound
adc
or
sub
imul
popa
sbb
imul
sub
sbb
jmp
push
mov
jmp
mov
cmpsb
or
sbb
lret
imul
xchg
add
and
cmp
mov
lcall
add
in
add
pop
adc
fisubs
jno
mov
ja
mov
dec
jg
rol
dec
ss
pop
daa
rcrl
push
fs
leave
mov
sar
lods
pop
repz
mov
mov
add
inc
inc
inc
and
bsr
vpaddsb
cmp
and
ss
call
stos
inc
xchg
mov
inc
cwtl
add
and
test
jp
mov
ljmp
adc
jae
push
jmp
adc
mov
aad
mov
arpl
xor
sub
sub
xchg
adc
push
test
fistpl
inc
bound
bound
aam
lcall
mov
bound
arpl
mov
stos
or
lret
pop
jns
mov
jnp
dec
loop
push
lea
retw
movhps
scas
iret
es
pop
cmpsl
imul
xchg
cmpsb
mov
les
das
imul
ret
xor
pop
jge
xor
std
inc
ja
pop
mov
lcall
mov
mov
jp
cmpsb
xor
test
cmp
and
inc
add
sub
mov
subl
lret
add
cli
bound
imul
xor
in
push
adcl
test
cltd
arpl
in
mov
xchg
mov
orb
std
aad
or
mov
cwtl
jmp
dec
adc
xchg
add
outsl
xor
fwait
sub
dec
xchg
mov
movsl
lret
xor
movmskps
cmp
jb
jp
daa
pop
adc
adc
cmpsl
lret
rclb
mov
cmp
sti
xchg
loopne
push
out
imul
sarb
outsl
popf
pop
aaa
ss
mov
aaa
adc
fcomi
and
test
xchg
mov
idivl
imul
out
sub
popf
cmp
cmpsb
loop
dec
addr16
pop
or
pop
into
into
mov
xorb
xlat
negl
pop
mov
insb
xor
repnz
cli
mov
xor
mov
dec
and
xor
push
dec
dec
into
xor
loopne
mov
mov
shrl
aam
jbe
ja
call
data16
sub
test
ds
nop
pop
xor
cli
push
cmpsl
pop
dec
addr16
sar
adc
xchg
pusha
sahf
or
scas
jmp
sarb
adc
out
sbb
insb
test
jge
pop
dec
daa
add
xchg
xor
xchg
cmpsb
inc
pop
into
icebp
inc
cmpsb
mov
inc
sbb
divl
push
adc
repz
nop
outsb
mov
insb
dec
aas
sbb
shl
add
xor
mov
push
mov
aaa
jns
outsb
jge
in
xor
push
clc
iret
lods
jns
ficoms
pop
insb
test
fwait
xchg
nop
xchg
or
leave
lea
in
dec
ret
cmp
loopne
mov
mov
imull
push
cmp
imul
pop
into
push
vmwrite
mov
xor
pop
iret
inc
xor
cmp
push
cwtl
jo
insl
mov
jnp
rorl
adc
cmpsl
mov
outsl
mov
mov
lret
sahf
ljmp
inc
mov
rcrl
mov
data16
inc
data16
jb
inc
ds
jae
rclb
xor
out
jb
roll
mov
xchg
jns
dec
sub
jecxz
push
test
inc
stc
fnstcw
sbb
inc
jns
out
xor
jae
jmp
mov
push
push
mov
test
outsl
dec
in
adcl
or
out
xchg
clc
mov
jo
call
and
and
push
test
push
ret
xor
addr16
lods
xchg
je
xchg
in
ret
cmp
cwtl
data16
jecxz
adc
dec
jne
mov
scas
mov
pusha
sbb
jbe
xchg
or
jb
bound
aas
icebp
shlb
pop
and
pusha
inc
ss
mov
mov
and
enter
xor
cmp
mov
fmuls
xor
pop
aam
jecxz
sub
lret
mov
ss
push
mov
xchg
jae
jmp
mov
sti
push
and
mov
push
xchg
das
add
cli
push
imul
inc
imulb
nop
mov
call
lahf
cwtl
sub
cwtl
pushf
mov
add
jl
stos
int
daa
cmc
xor
inc
movswl
loope
add
sub
ja
inc
aad
push
mov
insb
ret
incb
mov
hlt
mov
scas
mov
fs
xor
push
mov
push
or
inc
in
dec
lahf
inc
and
popf
jg
sbb
loop
add
pushf
push
pusha
dec
fidivrl
lea
lds
outsl
and
fnstenv
cmpsl
les
jne
xor
mov
pop
lcall
test
lcall
loope
test
jne
adc
repnz
pop
cmpsb
lods
dec
ret
lea
lods
sahf
pop
sti
mov
xchg
call
xor
jmp
xor
or
jmp
imul
fisubs
dec
jge
mov
push
ds
adc
loop
scas
ss
push
aaa
push
ljmp
dec
adc
imul
mov
ret
fcoml
inc
jle
jge
scas
imul
dec
ja
js
flds
adcb
lds
sti
daa
adc
add
pushf
mov
lret
pop
mov
cli
fwait
adcl
jmp
jns
jecxz
movzbl
push
push
test
test
and
mov
enter
outsb
pop
les
mov
aaa
ds
xchg
pop
adc
inc
nop
mov
sbb
dec
push
cmp
cmc
jmp
xor
sbb
dec
mov
pmulhw
es
shrb
mov
lods
stc
mul
sbb
xlat
lds
mov
in
sbb
aam
in
jmp
out
sbb
loop
sub
mov
aas
sarl
push
mov
clc
add
xchg
popf
in
fsubrs
jnp
dec
dec
popf
dec
cmp
mov
xlat
sbb
pop
mov
add
gs
enter
fcmove
push
push
jge
pop
adc
nop
clc
addr16
movsb
orb
pop
dec
cmp
add
and
imul
xchg
jno
and
sub
push
aad
add
sub
lret
or
leave
in
mov
cs
das
jmp
nop
ds
aad
sahf
xchg
sub
lcall
test
nop
inc
in
and
push
rep
clc
cmp
adc
pop
jo
int
icebp
ja
aaa
or
mov
dec
popa
scas
scas
aad
les
cmp
out
arpl
scas
fs
adc
add
pusha
test
outsl
push
sbb
stos
in
fucompp
sbbl
add
jne
es
mov
add
fdivrs
lock
insb
mov
jbe
mov
loope
jle
pop
in
lea
ss
out
push
mov
leave
loop
popf
jle
xor
add
mov
dec
sbb
mov
mov
jp
sub
mov
daa
loop
push
and
pusha
imul
out
dec
dec
inc
adc
cmp
arpl
push
and
mov
mov
cmpsb
jmp
rclb
mov
jo
jge
adc
enter
call
adc
xchg
push
sbb
jecxz
push
call
cmpsb
lods
mov
adc
pop
les
mov
fsubrs
xor
inc
xchg
mov
ret
push
jnp
stos
clc
popf
inc
and
pusha
pop
test
les
repnz
rcrb
and
mov
inc
pop
mov
mov
cmpl
sbb
ret
pop
negb
xor
push
pop
jo
cmc
xchg
pusha
add
hlt
popa
push
cmp
dec
mov
mov
aas
in
add
out
js
dec
push
or
andl
and
imul
mov
enter
and
and
push
jne
or
repnz
xor
fcomp
pop
aam
sahf
pandn
cmp
movsb
mov
imul
test
mov
loopne
lea
push
push
pop
idivb
xor
and
push
out
or
xchg
adc
jp
lods
insb
popa
push
leave
dec
addl
and
xlat
gs
adc
iret
mov
stc
fcoms
fsubr
xlat
push
lcall
stos
pop
data16
iret
sbb
or
iret
cs
data16
ja
leave
mov
push
arpl
jl
mov
aaa
lahf
mov
push
shl
mov
dec
lea
test
adc
stc
xchg
cmp
scas
movsb
cmp
mov
or
dec
push
sti
dec
pop
mov
mov
cmc
cmp
ljmp
std
mov
or
pop
insl
mov
lret
inc
lea
mov
sub
stc
daa
ljmp
and
push
and
jg
sub
sbb
jle
mov
insl
mov
or
das
pop
int
and
mov
dec
pop
mov
pop
xchg
je
call
jp
dec
lods
cmp
pop
les
aaa
jmp
mov
dec
sub
ret
jb
lods
mov
cmp
mov
fs
fsubs
fnstsw
jecxz
mov
cli
shrb
pop
cmpsl
jg
lcall
gs
lcall
cmpsl
repnz
aad
cmp
or
bound
push
scas
dec
lahf
sub
fdecstp
subb
rcrl
sbb
jne
adcl
push
jl
insb
mov
inc
push
add
fsubrs
fisubl
in
leave
cmp
sub
sbb
jmp
mov
insb
ret
mov
inc
enter
jge
inc
jb
aam
sub
and
mov
dec
imul
push
mov
push
and
les
inc
and
xor
imul
dec
inc
cmp
jno
cs
call
xlat
decl
mov
adc
mov
xor
jecxz
push
in
addr16
push
stos
xchg
or
pop
adc
or
outsb
pop
sbb
stc
inc
pop
mov
das
movhps
iret
cmp
push
dec
cmpl
sub
imul
test
outsl
dec
cmp
jo
fndisi(8087
leave
hlt
mov
int
cltd
or
jg
das
jp
jle
push
enter
or
arpl
push
sahf
or
inc
xchg
mov
mov
mov
aam
pop
das
not
jg
pop
pop
xchg
dec
rclb
adc
icebp
cltd
ja
int
cs
dec
lods
cmp
mov
cmpsl
xor
sbb
xchg
sbb
push
lods
mov
sub
and
int3
push
in
mov
adc
outsl
lods
mov
mov
pop
fldl
xor
lahf
sub
rol
imul
cmpsb
iret
das
rclb
test
movsb
pop
inc
push
rclb
fstpt
jg
aad
pushf
ret
and
es
push
mov
fwait
in
xor
xchg
xchg
ret
cmpsl
fwait
jle
xchg
sub
sarb
push
daa
jne
mov
shl
popf
xchg
jns
fxch
sbb
lcall
mov
and
mov
es
test
pop
daa
inc
push
or
adc
and
fldcw
push
push
sub
xchg
push
dec
adc
mov
cmpsb
sbb
push
cwtl
call
or
loope
adc
jnp
adc
lock
sub
sub
push
xchg
cs
lods
add
insb
xor
cmp
mov
or
mov
add
dec
jg
push
rorl
aas
lret
cmp
jnp
cmp
pushf
ss
and
jp
fmulp
sbb
xor
scas
inc
jmp
lcall
enter
cmp
jb
xchg
insl
int3
mov
cmpsb
aas
iret
lret
pop
jno
fidivrs
mov
rorl
mov
movaps
scas
mov
mov
mov
and
stc
mov
outsl
jmp
stos
dec
xchg
mov
stos
sbb
and
pop
leave
dec
pop
leave
popa
mov
adc
push
movsl
in
ja
jno
call
sarl
ss
pop
fwait
in
lds
cmp
add
xchg
stos
insl
test
xchg
sub
xor
fcmovne
jge
nop
pop
or
lods
mov
and
rorl
pop
mov
out
aaa
popf
lea
cwtl
mov
daa
push
mov
repz
adc
jne
rcll
xor
cltd
cmpb
pop
xor
outsb
jmp
push
mov
insb
rcrb
jge
pandn
orb
jno
fdivrs
push
addr16
jne
int
sahf
pop
pop
arpl
ret
out
jns
jg
sbb
pop
loopne
xchg
cld
mov
fdivr
cmpsl
adc
inc
bound
and
ljmp
subb
dec
cs
xchg
orl
lods
cmpsl
cmp
leave
xor
push
and
ret
xchg
jge
and
mov
push
mov
jecxz
out
push
sbb
insb
jge
cmpsb
stc
into
cmp
arpl
sub
jo
mov
lds
xor
xor
jo
jp
jl
out
in
aad
scas
mov
mov
call
dec
imul
jg
xchg
mov
jae
mov
fs
mov
sub
test
sub
pusha
cld
stos
aad
xor
cmc
dec
stos
aam
out
push
and
nop
mov
test
movsl
inc
adc
and
xchg
jbe
and
adc
and
ljmp
test
cmp
imul
xorb
and
sub
mov
mov
lods
sbb
jno
fidivrs
sahf
mov
outsl
aad
nopl
jnp
dec
inc
iret
fs
lret
fs
cmp
sub
fiadds
stos
mov
dec
sbb
in
bound
xor
mov
xchg
stos
je
push
add
pop
jbe
xor
and
pushf
mov
pusha
sub
ret
fdivl
jmp
or
mov
or
pop
cmp
add
stc
lods
pop
jb
mov
sbb
jb
and
sbb
ds
imull
inc
dec
call
or
jmp
and
inc
jl
jno
and
dec
iret
inc
dec
fstl
stos
sub
xchg
insb
in
sahf
or
mov
mov
jecxz
insb
dec
test
xor
adc
and
xchg
push
xchg
jl
outsb
xor
push
jp
jae
cmp
inc
dec
test
leave
cmp
xchg
mov
mov
das
and
popa
out
push
sarb
xor
shrl
cmp
hlt
pop
jb
jno
fs
add
test
dec
jg
mov
xor
std
and
inc
xchg
jmp
sbb
js
in
and
sub
inc
mov
inc
xchg
dec
test
lods
pop
das
out
in
cmp
daa
ljmp
mov
sbb
cltd
ja
stc
mov
sbbl
xor
rorl
cmpsl
mov
outsb
sahf
jo
sub
nop
bsr
jb
fldl
lds
shrb
scas
lcall
lds
jg
dec
mov
dec
lret
sub
sub
js
push
jge
adc
push
sub
push
xchg
cli
cs
mov
in
push
cltd
sbb
icebp
xor
jl
jl
iret
xor
pop
add
sub
push
or
sub
jne
cmpps
shll
jge
repz
or
loope
test
repz
ja
push
add
fwait
sbb
out
repz
mov
sbb
popa
sahf
inc
and
aad
inc
add
push
xor
xchg
xchg
pop
push
test
iret
pusha
push
sbb
mov
add
mov
jbe
les
lods
inc
fsubs
js
sbb
mov
mov
inc
add
sbb
add
scas
add
sbb
out
out
and
adc
icebp
xchg
int3
mov
add
cmp
mov
ja
sbb
dec
jle
mov
jge
push
pop
in
mov
xchg
fildl
dec
sahf
test
fsub
lock
mov
fucom
dec
pop
mov
lock
sub
rolb
bound
fs
sti
repnz
daa
jo
int
imul
int3
dec
mov
lahf
in
mov
xchg
dec
cmc
lods
sti
dec
popf
xchg
dec
sub
pop
jns
or
or
or
lea
in
cltd
sub
inc
cmp
push
les
sbb
data16
jo
sub
cmp
inc
cmp
imul
inc
push
pop
pop
lods
inc
mov
arpl
adc
imul
xlat
dec
test
out
into
push
vpsubusb
pop
mov
xchg
sbb
or
int3
popa
fcompl
fldl
mov
cld
cltd
mov
mov
jle
mov
out
int
push
xor
dec
enter
add
popa
dec
pusha
jno
inc
mov
sbb
sahf
jae
pop
std
mov
sbb
mov
xchg
or
into
call
inc
fisubs
lret
and
aas
fdivr
dec
jno
mov
pushf
dec
leave
rsqrtps
adc
push
pop
and
cltd
mov
cmp
sbb
xchg
or
mov
sub
sub
jne
pop
call
push
adc
stos
add
rol
pop
icebp
xchg
mov
pop
lea
test
aaa
mov
pop
jo
mov
adc
pop
rcrl
cmp
or
int3
outsb
icebp
jbe
pop
mov
inc
fcoml
xor
inc
jno
repnz
lret
ds
and
push
fisubrs
pop
or
adc
addb
cmpsl
dec
movsb
movsb
push
loope,pn
stc
adc
dec
addr16
push
out
mov
xchg
ret
inc
fistl
hlt
in
or
mov
push
fldt
sub
xchg
aas
dec
xor
cs
jb
or
fs
add
lods
loopne
mov
and
fstpt
test
xor
imul
sarl
sub
push
or
mov
mov
scas
out
fxch
cmp
scas
xchg
fsub
in
daa
pop
jo
push
jae
je
imulb
shll
push
xlat
movsb
pusha
nop
mov
cmp
xchg
and
dec
in
mov
push
sub
lret
outsl
xchg
fidivrl
and
popa
fnstenv
icebp
ss
imul
daa
and
cmp
dec
testl
and
ffree
sahf
inc
sbb
inc
movsl
cwtl
mov
cltd
test
push
out
mov
push
insb
test
cli
dec
add
cmp
cmp
or
mov
sub
shll
test
dec
mov
arpl
sbb
pushf
xor
fldenv
repnz
mov
fcomps
in
and
adc
pushf
popa
inc
mov
test
jno
in
fildll
pop
aaa
push
ss
loop
ja
mov
adc
add
sbb
sub
inc
mov
fsub
sarb
mov
lock
and
shrl
inc
arpl
xor
push
push
pop
popa
std
xor
dec
jl
ja
rcrb
push
push
xlat
nop
js
push
and
leave
into
daa
mov
sti
adcb
dec
inc
xor
xchg
jne
and
das
jl
scas
mov
add
push
cmpb
rolb
je
adc
xchg
cmp
jg,pt
pushf
sub
and
jo
out
popf
jo
lods
sbbb
insb
scas
mov
in
dec
loopne
fcmove
or
pop
pop
addb
scas
testl
sahf
jnp
lock
sub
pop
fcmovu
mov
push
int
popf
mov
movsb
out
call
cmpsl
pop
dec
adc
cmpsl
pop
jl
cwtl
rcrb
imul
jae
movsl
popf
es
and
fdivrs
mov
adc
sahf
adc
mov
sub
lahf
test
cmc
iret
dec
lods
cld
test
push
push
inc
cld
xchg
cmp
int
divb
mov
mov
pop
pop
roll
xor
add
push
adc
cmpsl
jo
mov
push
jle
or
cmp
jmp
add
cmpsb
sub
stos
in
movsl
enter
xchg
pop
mov
cmp
pop
mov
mov
call
andb
nop
mov
push
xlat
sarl
mov
es
fs
or
cmp
mov
mov
enter
idiv
xor
test
fdivl
push
push
jo
js
xchg
xchg
sbb
lahf
cmp
stc
pop
les
jae
push
cltd
mov
xchg
outsb
out
mov
xor
aaa
imul
leave
cmp
addr16
and
or
rolb
test
jbe
lods
mov
or
and
pop
ret
mov
mov
lret
cmpsb
dec
xchg
aaa
sub
icebp
jecxz
sbb
ss
lahf
dec
insl
cmp
fdivrp
or
jl
rorb
jno
leave
mov
lret
rclb
mov
mov
push
bound
aad
xchg
xor
sbb
mov
jle
push
cmp
cmc
fdivrs
cmp
cli
jle
aad
stc
cmpsb
mov
ss
sahf
jecxz
xor
popf
cmp
pop
push
repnz
clc
mov
rorb
clc
push
sbb
rorl
jns
lods
clc
scas
xchg
xchg
add
and
aam
push
or
ret
push
mov
add
call
lods
inc
jmp
pop
notl
add
andl
mov
adc
lret
scas
adc
mov
pop
nop
add
xor
repz
push
imul
jmp
ss
mov
pop
mov
adc
inc
popa
iret
inc
cs
pop
pop
dec
cld
fsubl
xchg
cld
mov
insl
int
mull
add
je
loopne
dec
jo
rcrl
push
push
jl
xor
xchg
pop
psubd
adc
add
mov
lds
lock
mov
jmp
cmp
sti
sub
imul
aam
pop
test
mov
mov
gs
stos
mov
pop
mov
dec
popl
pop
xor
and
test
test
fdiv
sti
lret
pop
mov
xlat
arpl
push
sub
test
mov
pushf
dec
or
xor
dec
popa
push
ljmp
out
pusha
int
outsb
psubusw
call
sti
xor
notb
stos
cmp
rclb
cli
xchg
cmp
pop
cs
std
shll
mov
scas
shll
xchg
adc
shl
sbb
sete
or
cmpsl
mov
pop
push
mov
push
lea
mov
cmpsl
fs
in
movsb
sti
ljmp
mov
rcll
outsl
subl
add
fcoms
dec
lret
aam
dec
sub
xchg
xor
xor
nop
mov
addb
and
loope
push
jmp
adc
push
out
sub
sbb
xchg
mov
sub
and
mov
pop
test
or
jbe
std
adc
push
sbb
adc
sub
sarb
dec
push
out
in
lods
pop
imul
adc
xor
jp
aad
pop
jnp
pop
or
pop
fcomip
dec
stos
aaa
fldz
jmp
je
pop
sub
mov
jae
stos
scas
outsl
cs
ret
out
mov
mov
dec
outsb
aaa
inc
test
into
fistpl
fimull
outsb
xor
outsl
insb
lds
lahf
rcl
scas
xor
mov
idivl
es
rcl
arpl
movsb
or
xor
sub
cld
mov
inc
cmp
fisubrs
adc
mov
jmp
cmp
fiadds
push
jp
faddl
lahf
movsb
testb
or
outsl
mov
sbb
aas
lock
jne
fsub
inc
insl
jp
dec
dec
jne
dec
popf
gs
push
ds
push
sbb
adc
cmp
in
jmp
jmp
adc
lret
lahf
and
fisttpl
inc
ret
sarb
and
aad
cmc
call
push
jl
aas
cltd
mov
ja
lcall
hlt
fldl
fwait
mov
mov
ret
stc
push
into
xlat
adc
fstpl
sbb
cltd
xchg
scas
mov
sahf
out
push
sub
jae
and
mov
sbb
jp
mov
idiv
jmp
xchg
cs
mov
into
jle
shll
or
icebp
mov
or
add
push
subb
mov
xchg
mov
xlat
repz
ret
nop
cmpl
lret
cmp
pop
sbb
push
ds
pop
test
stos
test
arpl
jg
jno
push
jb
mov
jl
cmp
push
add
mov
xchg
bound
mov
insl
sbb
ret
fdivrs
cwtl
inc
jbe
aam
out
jmp
pop
in
add
mov
xor
pop
in
loopne
jne
out
repz
das
lret
inc
xorb
xchg
jno
xor
push
and
ljmp
outsb
mov
cwtl
sub
xor
xor
fdivp
and
outsb
jecxz
pmaxsw
mov
push
and
pop
popf
repnz
add
and
ljmp
fcomip
cltd
jecxz
mov
mov
sub
movsb
fdivl
repnz
insl
xchg
mov
fs
cltd
push
adc
push
xchg
nop
dec
cmp
push
aas
int
jge
mov
mov
jns
and
or
fdivp
fcomps
inc
push
dec
mov
mov
xor
push
sti
iret
fists
scas
in
pop
cmpsb
in
push
mov
push
nop
dec
in
mov
aas
gs
lods
jg
adcb
jne
push
sbb
jae
stos
and
pop
sub
sarl
cwtl
lds
mov
xchg
popf
hlt
mov
mov
call
mov
fmul
ret
sbb
sub
je
cmp
xchg
gs
sub
bound
cmp
jnp
xchg
cmp
xor
cwtl
shl
nop
pop
xchg
leave
ds
or
scas
icebp
cmc
sub
adc
aam
push
sahf
mov
lds
jns
les
jg
mov
mov
push
adc
fwait
pop
ds
in
js
push
xor
fwait
ljmp
in
pushf
enter
cli
jp
mov
flds
cmp
sar
rclb
pop
call
sub
fimuls
mov
fwait
repz
mov
fs
aam
and
cmp
xchg
jp
pop
cmp
mov
cwtl
lret
inc
mov
xchg
stc
repnz
pop
jp
cmp
insb
jbe
xor
add
cmp
pop
lcall
inc
push
enter
popa
mov
and
inc
sbb
push
push
mov
push
hlt
hlt
gs
inc
jae
jo
test
xor
test
inc
mov
scas
mov
imul
mov
ja
mov
loopne
xchg
lods
ja
pop
in
jb
leave
ret
inc
jmp
sub
ja
xor
shr
lcall
dec
xchg
pusha
add
sub
lock
add
out
loope
stos
in
adc
push
cs
xchg
jge
adc
adc
jg
and
or
addb
subb
lds
mov
cmp
push
xorb
jb
push
cli
push
popf
xchg
iret
int3
add
jae
jae
mov
mov
sbb
mov
sub
jl
jp
sahf
pop
inc
and
xor
inc
jnp
xchg
lcall
adc
cmpsb
add
dec
fnstenv
je
js
das
push
or
pushl
rorb
aad
ja
xchg
lods
jmp
push
dec
add
add
xchg
lea
cli
push
dec
cli
ficoms
mov
adc
jbe
cmc
push
in
loope
xchg
xchg
xor
push
mov
mov
fidivs
jnp
fs
paddb
inc
cmp
jge
enter
jne
push
leave
jns
pop
dec
out
jl
fisubrs
ljmp
jecxz
pop
ds
scas
pusha
dec
sbb
arpl
in
sarb
push
je
pop
sarb
jl
push
ja
sti
les
cltd
or
push
das
add
fwait
lahf
lock
sub
and
mov
xor
iret
cmp
sub
aad
sub
popf
outsb
nop
test
cmp
lock
iret
mov
xchg
std
fdiv
fistl
imul
mov
mov
aam
mov
jns
jecxz
xor
mov
ss
fs
mov
pushf
mov
sarl
daa
or
mov
jnp
out
loop
js
mov
xchg
mov
sbb
out
jb
icebp
jae
das
into
jmp
in
test
adc
push
xchg
adc
leave
ja
xor
pop
adcb
xchg
push
inc
jg
or
loope
and
mov
mov
fdecstp
dec
loopne
mov
push
push
push
mov
leave
adc
nop
insb
ficomps
push
adc
movsb
jge
xlat
outsl
mov
push
out
sub
mov
arpl
or
fcomip
cmp
jae
add
jnp
aam
in
cwtl
jg
xchg
test
jbe
and
dec
xchg
jl
loopne
orb
ss
les
sub
popa
out
push
dec
adc
xor
pop
je
rorl
lea
jb
stos
shrb
jns
aas
arpl
sub
clc
shlb
sbb
jo
loopne
cmp
or
dec
xlat
loop
inc
mov
int
int
sbb
jg
mov
dec
cmp
xor
popf
popf
ljmp
fisubs
adc
push
dec
pop
fwait
dec
cld
and
dec
mov
push
lds
inc
icebp
sub
stos
adc
push
repnz
jno
aas
mov
lcall
cs
scas
xchg
cmpsl
jp
sub
jecxz
idivl
iret
cwtl
cmpl
leave
cli
ljmp
cmp
inc
jns
or
das
or
cvtdq2ps
pushf
add
cwtl
xchg
pop
mov
sbb
aam
add
adc
inc
test
dec
hlt
mov
sarl
jmp
sub
js
js
xchg
push
in
fsub
in
push
mov
imul
pushf
sti
movsb
ljmp
push
sarl
cmp
out
xor
or
mov
cmpsl
data16
rcll
pop
pop
cltd
lea
jbe
adc
jns
adcb
cmc
mov
je
fldcw
pusha
sub
movsb
in
add
mov
cmpsb
aas
sbb
push
adc
lret
nop
mov
sbb
das
push
or
mov
sbb
adc
fldcw
loopne
inc
fwait
mov
lea
xlat
pop
jns
addl
or
hlt
mov
mov
inc
xchg
ja
sahf
mov
add
push
inc
lcall
xlat
mov
mov
repz
mov
dec
adc
repz
call
mov
aas
mov
in
jp
push
push
popa
imul
enter
loop
in
aam
scas
in
sub
lds
and
inc
jge
cltd
adc
jae
jae
insl
sbb
jle
in
add
fmull
leave
xorl
iret
inc
lds
cmpsl
out
inc
repz
jb
adc
pop
mov
mov
push
and
push
bound
test
sub
jne
pop
ljmp
int
fstpt
jne
pop
outsl
js
sti
lcall
gs
scas
xor
mov
and
pusha
jns
or
xor
jbe
int3
aad
loop
push
mov
cmp
fsts
out
mov
push
dec
cmpsl
pop
fs
movb
sbb
xchg
addl
hlt
lahf
lcall
cli
dec
je
mov
lods
dec
jmp
bound
sti
xor
jl,pn
popf
imul
cmp
ret
xchg
mov
xor
pop
dec
call
inc
push
jbe
jl
sbbl
add
test
add
inc
nop
mov
push
jns
dec
fildll
subb
inc
sbb
jne
push
xor
add
in
and
push
push
xchg
mov
clc
dec
fsubl
xchg
cmc
push
mov
dec
aam
jo
cmpsb
push
pop
fwait
loopne
mov
xchg
or
rcl
scas
jmp
fmull
adcb
cs
mov
int3
aad
push
mov
stos
shlb
mov
nop
pop
pop
and
jecxz
movsb
loope
xlat
add
mov
rcr
jmp
js
adc
lcall
ljmp
aaa
mov
dec
in
or
and
cmp
divb
nop
das
sub
adc
and
adc
fs
shr
ret
add
jle
cmp
lods
popf
out
pop
test
bnd
popl
into
popaw
lahf
cwtl
xchg
std
add
cmp
mull
cwtl
test
fisttpll
and
setb
lea
sbb
cmpsl
lea
sub
sbb
mov
cmp
das
ss
sahf
scas
shrb
ror
out
fdiv
in
and
mov
sub
insl
clc
mov
jne
sub
mov
mov
test
mov
ficomps
stos
jg
xchg
lods
fucom
and
adc
fdivs
dec
rolb
xchg
adc
cmp
ss
mov
pop
cmpsl
push
jle
xchg
pop
or
enter
jnp
jbe
push
pop
pop
imull
iret
xchg
adc
js
aas
dec
sbb
lret
cmp
xchg
jne
push
fisttpl
sub
add
jl
cmp
sbb
mov
in
pop
pop
fisttps
sahf
fbstp
xchg
dec
loope
cmp
mov
aas
in
fisubrl
inc
cmc
mov
mov
dec
push
iret
pop
mov
scas
rorl
rorb
movsb
hlt
cmpsl
mov
mov
push
lds
sub
out
stos
cmp
mov
mov
inc
mov
inc
adc
fcmove
lock
shrb
push
ss
push
cmpsb
jge
out
imul
sub
jp
sbb
lock
imul
imul
or
push
into
in
add
shr
js
std
sub
xor
jmp
xchg
mov
fistpl
mov
pop
pushf
jmp
and
add
incb
jo
outsl
fidivs
icebp
lds
cltd
lahf
in
inc
stos
pop
cmpsl
push
lea
loop
pusha
daa
dec
ss
addl
mov
jae
nop
or
js
push
es
or
push
pushf
cmp
loop
into
loopne,pn
imulb
movsl
rclb
pusha
inc
sti
lret
add
nop
mov
sahf
xchg
jae
mov
repz
cmp
add
cmp
push
test
push
mov
sarb
mov
xchg
cli
sub
subl
pop
push
and
jp
mov
dec
fdivl
hlt
sarl
push
sub
out
loopne
sbb
rcll
xchg
inc
fisubs
mov
cmp
out
adc
stos
sub
mov
imul
ss
leave
aaa
iret
add
add
jne
cvtpi2ps
pop
and
push
adc
adc
xor
add
mov
aam
clc
pop
cmp
aas
repz
cwtl
lret
jnp
lret
cli
mov
leave
mov
rcrl
js
or
jl
in
sbb
jo
jg
nop
out
fisttpll
jmp
or
lods
fildll
cmp
push
jle
clc
repz
mov
movsb
sbb
fs
das
stos
jg,pn
fs
inc
cmp
xchg
mov
scas
addr16
out
mov
out
cmpsb
popf
jb
imul
stos
mov
jno
sub
cwtl
mov
addr16
cmc
pop
inc
push
dec
sub
bound
testb
lds
inc
xor
push
xchg
xchg
sbb
dec
pop
orl
jmp
insb
mov
sub
pop
or
push
fidivs
js
dec
jo
pop
ja
jns
mov
das
lods
ljmp
push
or
push
scas
lea
movsl
lock
ds
lahf
sbb
ja
adc
call
popf
dec
push
fs
stos
ret
std
or
and
and
sbbl
ds
in
fisubrs
mov
xor
mov
jnp
push
mov
enter
xchg
cwtl
fs
or
or
loopne
jle
fidivrl
sbb
loopne
adc
cmp
push
and
insl
push
sbb
mov
or
and
stos
fdivl
cmp
add
mov
data16
mov
sbb
out
ja
mov
cmp
jns
pop
daa
push
orl
cltd
in
fnstsw
mov
cmp
dec
sbb
dec
xchg
push
adc
inc
cmp
outsl
in
xchg
jge
jno
and
and
sti
cmp
cmp
daa
clc
shlb
test
sti
sbb
and
out
sbb
out
mulb
int3
xor
mov
cmp
repnz
iret
mov
mov
cmpl
repnz
sti
adc
cmp
pop
mov
cmp
xchg
ret
inc
les
lock
sub
cs
leave
push
or
mov
sahf
fisubs
insl
inc
sub
pop
mov
call
mov
rcrb
fcomp
jle
aas
test
cmpsl
out
scas
in
mov
test
mov
and
ljmp
and
or
jecxz
in
int3
adc
add
xor
pusha
sub
shlb
cmp
dec
ss
and
stos
hlt
insl
mov
out
push
std
mov
sub
xchg
addr16
or
pusha
lahf
subb
loope
ret
les
mov
dec
jne
dec
js
add
push
std
jae
sub
pop
and
dec
fsubs
push
cmc
out
daa
mov
out
test
es
mov
in
jp
pop
lret
or
mov
add
scas
bound
mov
inc
lds
lea
mov
inc
cmp
stos
mov
imul
cltd
or
inc
xor
ja
inc
rol
sub
cltd
and
xchg
pop
sti
orb
repz
xchg
pop
es
fs
test
xchg
iret
add
out
sbb
fcomps
bound
lahf
popa
imul
rorl
nop
lock
ss
mov
xchg
popa
push
xor
xor
sub
mov
mov
xor
sub
testl
jp
jg
mov
outsb
ds
adc
insb
pop
loopne
inc
pop
add
repnz
xor
scas
cmc
sbb
outsb
int
cmp
adc
movsb
int
stc
sbb
dec
xchg
mov
shll
lds
imul
cmp
push
sub
popf
pop
and
rorb
bound
lods
mov
shl
push
and
pop
or
and
cmp
jecxz
mov
xchg
fwait
dec
scas
iret
dec
sti
punpckhwd
xor
das
out
sahf
shll
dec
mov
sub
movsl
aam
jne
xchg
fstl
adc
mov
pop
mov
int3
mov
shrl
adc
push
cmp
push
lods
je
mov
jae
testb
popa
jae
jb
xchg
xchg
data16
xchg
test
cmpb
icebp
sub
ret
test
loope
dec
shlb
sbb
xchg
nop
jo
andl
mov
es
imul
add
test
ret
mov
xchg
jp
jl
insb
fwait
clc
and
pop
sbb
fcmovbe
lods
xor
shl
fbld
xchg
jmp
popa
sarl
xchg
xchg
daa
mov
push
es
aam
movsl
popa
cltd
cmpsb
aam
pop
jg
push
lock
outsl
fdiv
subl
mov
xchg
xor
rorl
std
push
cmp
cmp
mov
es
adc
insl
cmp
popf
fwait
adc
insb
aad
cmp
enter
cltd
pop
or
fisubrs
mov
ljmp
pop
jae
xchg
mov
and
cwtl
ret
mov
movsl
pusha
pop
cmc
pop
mov
loop
std
sub
mov
cltd
sub
mov
fs
es
shl
adc
sbb
jp
pushf
and
int
loope
fstpl
xchg
pop
test
adc
pop
scas
jle
bound
xchg
idivl
fstpl
jbe
inc
out
cmp
or
dec
lods
or
adc
inc
das
and
or
shrb
mov
pop
mov
jb
out
pusha
xchg
test
cmpsl
push
pop
aam
push
mov
cltd
inc
adcl
xor
lods
jo
fwait
add
je
addl
incl
sar
xor
sysexit
jp
je
decl
pop
loope
dec
jle
cmp
mov
in
lea
scas
mov
test
aam
xchg
sub
mov
shrb
mov
xchg
in
repnz
add
rcr
fildl
cmpl
xchg
pop
repz
dec
lret
mov
iret
ficoms
adc
pop
out
xor
dec
xchg
mov
lock
ja
mov
pop
lods
hlt
jns
jb
mov
test
cmp
and
add
sti
cmp
xchg
adc
aaa
adc
scas
jmp
sahf
add
ret
or
cmp
in
das
mov
push
lcall
push
je
lret
cmp
sbb
inc
mov
mov
int
mov
cli
pop
cld
jb
add
into
or
or
cli
xchg
pop
hlt
mov
adc
fwait
lods
les
xchg
ja
call
dec
jecxz
mov
cmp
or
xchg
or
or
in
rclb
xor
std
or
adc
shr
mov
pop
mov
sub
pop
shlb
test
daa
int3
fidivl
andnps
bound
push
mov
imul
fwait
xor
int3
aas
adc
adc
dec
mov
xchg
insl
inc
hlt
test
out
jmp
push
shrl
xchg
jo
gs
jns
mov
push
cwtl
loopne
rcll
pop
inc
adcb
mov
pop
das
and
and
lock
pop
pop
imul
bound
pop
aaa
cmp
je
stc
in
rcrl
bound
mov
mov
add
es
adc
cmpsl
inc
test
cltd
test
fdivs
data16
dec
lret
sahf
jno
sbb
iret
xchg
add
xchg
es
mov
divl
mov
int
jge
or
mov
or
and
pop
lret
addr16
fiadds
pop
inc
clc
in
add
xchg
fdivrs
mov
fsubrs
jl
and
lds
sbb
inc
je
xchg
mov
sub
mov
dec
cmp
add
pop
cmpsb
sbb
ja
add
mov
clc
das
call
faddl
xlat
mov
push
fidivs
mov
xchg
push
push
in
loop
test
mov
scas
cmpsb
repnz
mov
jg
jmp
fcompl
mov
dec
movsl
jb
mov
mov
sbb
daa
sbb
movl
xor
subb
xor
je
mov
mov
sbb
call
fwait
push
mov
pushf
leave
ret
out
and
xor
in
mov
push
imul
aad
push
lahf
jo
pop
aam
int3
push
jge
sub
dec
mov
push
addr16
xchg
pop
in
jae
cmp
sbbl
cli
mov
pop
test
mov
bnd
add
jp
out
in
sub
sub
xor
je
sahf
mov
out
rol
repnz
shll
mov
popa
jle
outsb
popf
pop
ret
dec
and
xchg
jns
lahf
mov
cs
and
mov
or
lahf
test
lock
in
or
mov
icebp
loop
xor
adc
sbb
lods
jecxz
lcall
lret
loop
arpl
adc
cmpsb
ret
jne
or
pop
dec
pop
dec
rorl
xor
sbb
inc
insl
cmp
out
and
ljmp
lret
loope
stc
scas
roll
jnp
adc
dec
pop
mov
mov
push
mov
or
std
pop
fs
bound
setg
dec
xor
pop
je
mov
out
testl
lret
mov
lods
cmpsl
fwait
bound
dec
aam
dec
inc
in
cltd
push
xor
pop
test
mov
rcrl
dec
sbb
aas
negb
loope
fucomi
lret
shlb
pushf
xchg
das
int3
call
jns
or
ret
and
gs
shll
sbb
cltd
out
mov
sbb
ljmp
add
jo
pop
push
dec
add
mov
mov
daa
xchg
xchg
lret
into
mov
xor
jb,pt
inc
test
dec
push
rcrl
add
in
inc
mov
cwtl
repz
push
push
test
test
ret
cmp
mov
mul
add
push
sub
enter
cmp
and
dec
imul
in
lret
fsubrs
mov
loop
or
jo
jnp
push
add
not
sub
mov
loop
adcl
inc
inc
or
mov
scas
jp
arpl
into
push
inc
or
mov
out
shll
rcl
push
cmc
ret
fdivp
in
sub
mov
ret
outsl
push
push
rcrl
fldenv
sub
adcl
stos
jae
push
xor
mov
add
sbb
or
std
cmp
aaa
or
cmpsb
or
xchg
into
nop
jp
dec
insb
ret
sahf
ret
inc
xchg
subb
mov
out
jo
lock
mov
sbb
push
dec
ss
stos
cmp
push
mov
push
sti
or
inc
ret
movsl
int3
cmp
dec
push
sahf
pop
add
xchg
xchg
xor
xor
sbb
stos
mov
faddl
aam
lea
ret
add
inc
sbb
mov
sub
dec
pop
arpl
push
inc
sahf
mov
sub
lahf
mov
sub
sub
sahf
aad
lock
push
fstpl
mov
xor
movsl
adc
scas
cmp
inc
testb
mov
ja
outsb
sahf
and
sub
insl
lods
ljmp
loopne
outsb
call
pop
imul
jno
xor
and
mov
ja
add
loopne
icebp
mov
int
push
xchg
cwtl
push
inc
repz
jbe
jno
push
lds
jge
sbb
dec
lahf
repnz
xor
mov
bound
inc
jb
lods
or
xor
sbb
xlat
sub
add
cs
ja
pop
lret
iret
daa
adc
push
pop
cmp
or
push
int3
add
mov
mov
ret
ss
sarl
push
jo
xchg
add
push
popa
das
test
dec
hlt
arpl
sub
leave
push
xor
popa
movsl
mov
iret
imul
ret
dec
mov
cmpsb
popf
cli
testb
aas
fdiv
shr
test
fs
pop
daa
aas
pusha
sbb
out
movl
push
popf
loope
ljmp
cs
pusha
inc
sahf
cwtl
popf
popf
imul
push
mov
add
xchg
stc
pop
or
mov
fdivs
mov
addr16
pop
sti
cmp
faddp
testb
jle
jmp
addr16
in
pop
ljmp
and
shl
testl
xchg
enter
mov
mov
shrb
bound
nop
stos
mov
dec
test
fs
fimull
fnstcw
pop
mov
jp
mov
repnz
sub
add
mov
out
xorl
jns
and
cmp
xlat
cmc
pop
sub
icebp
xchg
ret
jbe
mov
pusha
data16
push
push
ja
inc
or
jmp
loope
mov
or
pop
add
pop
xchg
out
and
cs
fsubl
xor
xchg
in
in
pop
in
shll
inc
mov
pop
lcall
mov
dec
das
clc
dec
xorl
push
cmp
sub
movsb
adc
sbb
ja
xchg
and
inc
scas
pop
jmp
lds
push
lret
inc
pop
jl,pn
jmp
mov
sbb
cmp
imulb
jecxz
cmpsb
xor
jle
xor
ds
pop
in
cs
repnz
push
mov
push
mov
inc
jo
jmp
fstps
loopne
push
les
jmp
dec
or
jecxz
add
mov
loope
sub
inc
ja
cmp
push
loop
popf
jp
cmp
mov
jne
add
testb
cmp
pop
and
fwait
popa
inc
mov
dec
adc
test
push
and
mov
sti
cli
push
and
lods
jns
pop
xchg
push
fs
adc
xchg
mov
jmp
mov
repz
inc
mov
das
mov
orl
or
pushf
inc
in
ret
mov
mov
sbb
and
cmp
push
rcrb
pushf
lret
mov
sub
jne,pt
xchg
cmp
adcb
pusha
and
jp
test
xor
jns
xchg
std
addr16
jns
into
xor
out
leave
mov
fimuls
jbe
fstps
add
and
dec
xor
lea
push
lret
std
pop
pop
testl
sbb
sub
inc
sbb
ljmp
out
ja
scas
inc
xchg
or
adc
aas
cld
je
mov
das
dec
mov
cli
push
roll
mov
mov
loop
fldenv
cld
out
jo
test
jae
out
daa
sti
and
pop
cmc
sub
sbb
mov
fisubrs
jno
add
shlb
push
pop
dec
mov
popf
nop
sbb
dec
xchg
call
push
cli
stos
mov
clc
push
adc
popa
mov
ss
xor
xor
iret
out
test
pop
dec
mov
or
rcrl
lock
out
loopne
jbe
dec
rolb
push
cmpsb
fisttpll
push
lds
cli
pop
or
jnp
xlat
lods
std
lock
arpl
scas
jle
ret
test
addr16
xchg
andb
pop
out
mov
mov
mov
or
adc
es
add
mov
loopne
mov
ret
fdiv
imul
ret
add
jg
mov
fadds
faddl
mov
jae
xor
adc
lret
sahf
bnd
bound
enter
fsubl
cmpl
pop
lods
xor
in
pop
pop
pop
jmp
daa
mov
jmp
test
inc
ja
sub
bound
and
ljmp
popf
mov
sbb
xchg
frstor
cmc
outsb
ret
ljmp
das
imul
or
test
mov
std
push
cmp
call
or
lret
in
movsl
xor
mov
push
outsb
inc
sbb
lret
lods
xchg
mov
and
or
pop
pop
and
scas
and
or
dec
sub
addr16
adc
outsb
movsb
mov
mov
jno
pop
sub
mov
test
les
add
mov
add
sbb
mov
mov
ret
pop
data16
insb
xchg
inc
gs
pop
xor
pop
push
ss
inc
lds
les
or
rol
mov
inc
cmp
fsubl
clc
test
stos
loopne
push
gs
cwtl
adc
and
dec
sub
jge
addr16
xchg
cmp
in
mov
mov
mov
aad
xor
clc
dec
shrb
std
test
test
pop
loope
fstl
getsec
clc
decl
dec
pop
pop
outsb
arpl
push
xchg
outsb
jp
cli
cld
icebp
testb
jnp
add
inc
jae
in
imul
jp
sbb
out
jmp
into
xchg
aas
imul
data16
xchg
pusha
push
jb
mov
sbb
int
mov
jne
cli
ret
jecxz
xor
cwtl
pop
push
jae
adc
shrb
test
aaa
je
icebp
roll
cmc
test
cmpsb
test
inc
or
int
xchg
and
mov
ret
sbb
aam
jmp
ds
dec
push
cmp
clc
pusha
nop
sub
sub
add
les
xor
mov
outsb
xchg
mov
xor
mov
mov
push
cmpsl
movsb
xchg
lret
test
hlt
pop
imul
fnstcw
xchg
aas
or
scas
inc
mov
xchg
jle
daa
jg
xorb
scas
gs
inc
jns
cmpsb
hlt
daa
inc
mov
jl
bound
lds
lret
cmp
mov
xchg
mov
ss
jmp
dec
cmp
nop
aas
mov
adc
adcl
sbb
pop
addr16
or
sbb
cmpsl
mov
xchg
es
addr16
dec
dec
mov
pop
adc
or
add
sarl
dec
orl
movsl
sub
mov
adc
scas
cs
pop
cmpsb
mov
aad
shrl
push
push
cmp
das
push
lcall
sti
clc
or
fwait
xor
imul
enter
rorb
out
cmp
aas
arpl
cmpsb
xlat
mov
cwtl
push
pop
stos
lret
sub
ds
mov
ss
ret
dec
hlt
jl
lcall
mov
addr16
decl
out
mov
inc
and
pop
rol
push
lock
cs
ja
fisttpl
inc
push
sub
shr
mov
sbb
sbb
es
sbb
sub
xchg
sbb
xor
push
aad
push
imul
cmpsb
sbb
pop
fcoms
push
call
pop
pop
push
in
jmp
dec
jno
cmp
dec
cmpb
or
loopne
jmp
or
jbe
cmp
xchg
add
sbb
sub
stos
sub
jb
xchg
mov
and
ss
stc
adc
sti
adcb
gs
cwtl
inc
in
enter
lahf
nop
loope
fbstp
enter
cmpsl
mov
mov
sbb
leave
push
jo
cmp
into
add
adc
outsl
outsb
test
orl
mov
cmp
xor
inc
mov
das
jns
inc
and
jecxz
cld
jb
iret
push
out
jle
push
pop
or
lea
aas
movsb
inc
aad
sbb
jbe
xor
sub
adc
jno
bound
subl
je
or
jns
and
add
push
imul
sbb
inc
jp
push
popa
pop
mov
mov
mov
and
rolb
mov
addl
lret
jne
sub
cmpsb
stos
call
jp
xor
mov
push
and
das
mov
xorb
into
jp
aaa
lret
pop
mov
loopne
inc
add
ret
rcr
das
out
sub
ds
aas
sbb
pop
cmpb
xor
and
sbb
cld
insl
mov
adc
pushf
adc
xchg
adc
add
or
in
lods
fnstsw
popa
inc
lods
lds
push
mov
lock
pop
mov
out
insl
dec
mov
movsl
aas
mov
shrl
pop
popf
notl
ffreep
and
enter
push
xlat
xor
or
fstpt
and
xchg
popf
push
xor
shrl
fstpl
in
popf
movaps
cltd
jp
aaa
imul
add
push
test
and
cmp
adc
xchg
dec
xlat
push
popf
jbe
flds
pop
fwait
pop
out
sub
xor
or
shrl
xor
call
dec
push
and
fiaddl
es
enter
pop
add
scas
xor
in
shll
pop
push
mov
xchg
test
mov
mov
test
pop
mov
mov
dec
sbb
cwtl
and
pop
lods
mov
std
push
xchg
jle
pop
add
popa
push
call
push
fists
mov
push
mov
jle
hlt
shlb
cmpsb
inc
leave
or
push
pop
ret
dec
mov
imul
jle
lds
jne
add
xor
pop
adc
mov
inc
cmpsb
aad
jmp
sti
in
or
mov
decl
push
or
dec
out
push
arpl
in
out
imul
lahf
cmp
adc
inc
test
xchg
push
jo
pop
outsl
mov
in
pushf
aas
cld
jno
dec
inc
fwait
and
adc
adc
push
les
sub
cmpl
decb
in
sbb
dec
pusha
adc
and
cli
add
adc
cld
or
jg
dec
fucomi
pop
unpcklps
es
sbb
pop
jmp
cmp
jmp
test
cmpsb
hlt
cwtl
xchg
dec
adc
insb
mov
mov
imul
pop
loope
mov
mov
pop
gs
mov
fmull
sbb
add
jne
sub
lcall
add
mov
mov
mov
mov
xchg
fsubrs
repz
xor
orb
xor
sbb
enter
div
cmc
std
push
sbb
mov
and
pushf
inc
mov
pop
jge
ret
and
test
inc
popa
mov
insb
dec
push
dec
inc
je
xchg
jg
repnz
push
in
int3
jns
pop
push
fistps
movsl
mov
and
sarl
adc
and
fdivrl
lcall
push
sub
jecxz
es
es
mov
cmp
loop
jbe
sub
loopne
xchg
xor
inc
in
out
ret
add
adc
ja
iret
inc
rclb
xchg
dec
ficomps
std
add
je
js
pushf
pop
mov
test
lock
mov
dec
adc
sub
mov
lods
out
jns
sti
lods
iret
mov
fs
xchg
pop
adc
dec
push
test
inc
fwait
xchg
and
push
jg
xor
xor
mov
mov
loopne
xchg
dec
test
jo
jge
sub
dec
inc
test
fwait
jl
movb
pop
aad
xor
cmp
pop
in
iret
sti
xchg
push
jle
loope
outsb
test
sbb
push
jp
inc
inc
push
cmpsl
movntps
mov
pusha
add
push
out
jmp
xor
mov
out
mov
push
and
sub
push
mov
and
mov
mov
xor
dec
sahf
iret
and
rol
cmp
lods
and
jno
lock
pushl
push
negb
mov
push
pop
frstor
push
xchg
cmp
divb
mov
lret
cmp
add
adc
shlb
xchg
xor
clc
lahf
fbstp
push
dec
cmc
pop
lods
push
xor
insl
or
sahf
dec
std
dec
adc
insb
jle
in
movsb
sub
mov
mov
fs
ficomps
cwtl
lods
dec
push
jl
outsl
neg
pop
mov
gs
and
mov
test
adc
fiadds
gs
xlat
out
outsl
cmpl
xchg
arpl
or
ret
out
movsb
mov
jae
pushf
push
push
jmp
jne
repnz
sti
clc
add
mov
rorb
inc
cmp
fdiv
jno
adc
ret
add
fwait
xor
and
imul
jecxz
xchg
cld
mov
das
fsubs
push
mov
mov
xchg
push
aas
insb
cmc
inc
dec
xchg
inc
nop
mov
or
jp
subb
stc
xchg
in
ret
sbb
dec
out
adc
outsl
mov
or
jnp
stc
loopne
scas
outsl
in
xchg
cmc
sarl
sbb
cmp
sub
mov
pushf
addr16
call
cmc
into
daa
int
sub
cld
pop
sti
pop
outsb
xor
lods
push
and
or
push
icebp
jae
mov
add
jae
add
inc
xchg
mov
jle
xor
insl
mov
nop
push
xchg
loope
xorl
mov
mov
sub
test
sbb
jno
push
jnp
sarb
push
xchg
add
fwait
inc
mov
clc
jmp
inc
jnp
jo
je
add
insl
pop
jb
shl
mov
sbb
xchg
insb
push
loop
stos
add
inc
fs
neg
pop
insb
add
and
mov
cwtl
add
aam
or
fsts
test
test
cmpsl
xchg
mov
hlt
js
lahf
inc
jnp
cli
push
push
mov
jle
cmc
cmp
pop
sub
out
jecxz
xlat
mov
lahf
xchg
int
xor
push
test
scas
lods
push
add
add
add
inc
sbb
mov
mov
push
xor
sub
je
movsb
imul
les
test
outsl
cmc
jae
pop
jbe
shlb
loopne
pushf
sub
inc
jb
push
fiadds
mov
movsb
cmpsl
push
std
add
stos
lahf
movsb
cwtl
lea
pusha
push
mov
lret
mov
or
bound
mov
and
outsb
cmp
ret
sbb
test
fcmovne
inc
sub
imul
imul
adc
jo
sbb
sub
aad
sub
loop
outsb
rolb
xor
mov
loopne
push
sbb
popa
test
inc
lods
mov
xchg
and
xor
nop
lret
mov
imul
test
ljmp
repz
cmpsl
xchg
xor
bound
mov
icebp
jmp
mov
mov
cmp
jmp
das
jb
dec
sbb
cli
out
bound
adc
cmpb
jo
dec
fcmovnb
lret
dec
mov
xor
int
movsb
adc
jbe
cmc
and
loope
dec
mov
andl
jp
lahf
movsl
or
fs
jae
ljmp
mov
jnp
xor
xor
fildl
xchg
pop
insl
push
sub
add
cmp
mov
mov
adc
jns
mov
mov
cld
imul
lock
pop
xchg
out
jne
fidivl
mov
lds
into
sub
cltd
in
pop
call
mov
and
or
addb
or
les
push
inc
or
iret
xchg
aam
xchg
or
nop
cmp
mov
repnz
cmp
or
jle
sti
into
in
adc
cmp
cwtl
loopne
cmpsl
daa
inc
adc
jl
pusha
cld
mov
insl
stos
pusha
add
movsb
sub
fdivs
inc
hlt
outsb
inc
pusha
subb
sbb
inc
fmul
xchg
popf
insl
lods
mov
xor
int3
cmp
and
jb
xor
ret
ret
xchg
rorl
lods
sub
xorb
cld
jecxz
hlt
orb
imul
sub
das
add
sbb
nop
clc
rolb
call
je
test
push
adc
fcoms
fisubl
xchg
pop
xchg
outsb
add
mov
xchg
rcl
bound
imul
dec
pusha
iret
loop
xchg
nop
dec
out
mov
pop
push
adc
inc
in
xor
js
dec
xchg
in
mov
pop
xor
outsb
push
stc
int3
xor
push
je
pusha
push
jnp
mov
sub
outsb
enter
ja
dec
dec
dec
pop
cmpb
or
sbb
jmp
xor
adc
push
movsb
fmuls
mov
sbb
in
jb
cmp
pop
xchg
leave
outsb
imul
xor
int3
dec
lock
jns
nop
mov
mov
lock
push
subb
arpl
inc
cmp
jle
es
ret
sub
js
jo
aas
fs
add
out
outsb
arpl
scas
xor
inc
cmp
add
aaa
cltd
fwait
xlat
adc
shrl
and
mov
adc
mov
out
rolb
cmp
fmul
cmpsl
push
pop
sbb
mov
mov
xchg
les
pop
adcb
sti
xchg
cwtl
lcall
int3
cmpsb
add
dec
adc
jecxz
pop
mov
xchg
lahf
mov
rorl
jnp
jg
out
or
faddl
jo
cltd
imulb
add
adc
fsubs
cltd
ljmp
mov
arpl
lds
call
aas
cmp
cmp
out
adc
lret
mov
lahf
inc
aad
outsl
inc
mov
leave
call
insb
push
cmc
xchg
mov
lcall
mov
xchg
icebp
push
push
aad
fisubrs
cmp
in
test
ds
lahf
mov
mov
insb
es
dec
or
out
in
pop
lret
hlt
incb
xchg
js
in
dec
xchg
int3
sub
iret
loope
and
dec
lods
sbb
sbb
or
jae
ja
jmp
xor
iret
in
ds
push
sahf
cwtl
xor
pop
inc
sub
mov
scas
mov
push
dec
and
arpl
xchg
cwtl
fidivrs
int3
es
or
lods
imul
lret
xchg
fidivrs
jnp
ja
pop
mov
mov
and
jae
mov
out
sti
xchg
jle
dec
roll
jmp
cmp
lods
cmp
mov
outsl
xor
dec
int
int3
sub
test
out
out
or
dec
cmp
inc
inc
pop
add
sbb
inc
inc
fcoml
sbb
sbb
iret
std
add
es
jbe
fidivs
cmpsb
notb
fdivs
pop
out
push
cwtl
test
xchg
mov
dec
dec
jle
and
lods
sub
xor
mov
pop
out
cmp
jl
push
adc
test
add
or
ljmp
lods
sbb
bound
add
in
dec
and
or
fstl
mov
cmpsb
loop
pop
mov
aam
test
imul
mov
mov
jbe
xchg
ss
test
sbb
mulb
dec
dec
outsl
aam
scas
cmpsb
gs
jge
jecxz
pop
pop
sub
pop
cmp
mov
jne
shlb
lahf
pop
push
sarl
adc
xor
push
loope
add
lcall
das
inc
movsb
popa
xchg
leave
sub
cltd
and
hlt
mov
sbb
fldl
jmp
jle
adcb
insb
not
inc
mov
dec
int
inc
or
cmpb
js
sub
push
and
stos
dec
pop
push
imul
bnd
mov
push
shrb
push
mov
scas
fsubrl
cmp
mov
inc
jge
pop
adc
fs
pop
and
sbb
or
iret
pop
mov
adc
xor
rcr
ret
xchg
fistpl
lret
mov
and
xchg
jp
push
mov
repz
in
lahf
mov
call
push
outsl
jg
out
repnz
ficoms
jno
out
loopne
pushf
bound
and
pop
int
ret
pop
pop
mov
addr16
clc
stos
fsub
sub
jo
orl
jmp
pop
addr16
cmp
push
add
pop
push
mov
popf
clc
les
shrl
or
xlat
imulb
imul
dec
scas
jne
test
adc
inc
push
or
fbld
cmp
test
ficompl
or
or
mov
push
mov
loop
test
adc
loopne
add
and
cmp
out
insb
pop
repnz
stos
inc
fistl
mov
sub
fsubrl
xor
jbe
movsl
ret
andb
pop
sub
ret
mov
stos
insl
pop
jg
in
xor
int3
ds
int
and
xor
lods
push
xor
jmp
sbb
pop
push
incb
imul
and
mov
pushf
out
test
adc
test
pop
lret
xor
mov
rclb
add
mull
push
test
jl
mov
or
into
add
js
aaa
nop
pop
sub
fldenv
lcall
ret
insl
cmpsl
and
in
mov
pop
mov
or
ret
pop
repz
sbb
dec
popl
frstor
addr16
icebp
pop
mov
adc
mov
in
lret
mov
int3
fdivrs
js
mov
rol
xor
imul
out
push
icebp
mov
lret
nop
roll
rcrl
adc
dec
fisubrl
jmp
jge
pop
repnz
repnz
andl
sbb
xchg
inc
cli
jbe
mov
in
in
les
and
mov
out
mov
pop
fmulp
test
or
outsb
cmpsb
cmp
fwait
cmp
cmpsb
dec
sahf
ret
or
inc
jno
insb
stos
xor
pop
inc
mov
out
pusha
mov
addr16
sub
insb
pop
lods
clc
or
jb
imul
bswap
mov
aad
xchg
push
push
rcll
xchg
hlt
fisttpl
dec
imul
push
sbb
pop
sti
pushfw
in
pop
jle
mov
sub
xchg
pushf
and
lret
push
imul
outsl
push
in
aas
xchg
call
test
notl
mov
pop
lret
sti
jne
neg
xor
mov
jp
ret
mov
data16
xor
les
and
inc
popa
push
mov
jne
stos
or
sbb
adc
sbb
add
mov
pop
xor
insb
js
lahf
subb
jecxz
aas
mov
xchg
jp
xchg
inc
adc
fbld
dec
in
sbb
push
pop
es
sbb
add
aam
mov
fcomip
mov
into
cmp
or
hlt
xor
lret
jle
pop
lods
mov
xchg
jne
mov
sti
lret
xchg
les
lods
shll
sbbl
mov
xchg
out
and
xchg
pop
out
divl
xor
sar
mov
or
loop
sbb
es
adc
and
fwait
aaa
lock
fbstp
mov
cltd
ror
xchg
sbb
sbb
cmp
in
bound
jbe
jecxz
ss
mov
pop
inc
jge
push
push
rorl
xchg
cwtl
adc
and
push
push
push
and
jbe
in
and
inc
adc
hlt
push
inc
cs
ja
imul
and
inc
push
pop
pop
jb
or
push
inc
sti
fnsetpm(287
inc
lret
loope
es
jne
rcrb
adc
pop
dec
push
fdivrl
jae
shlb
mov
stc
xor
inc
jl
push
icebp
test
les
and
cs
ret
xor
mov
cs
dec
int3
mov
adc
push
add
and
xchg
nop
addb
sub
lods
ret
das
lds
movsl
pop
mov
fdivl
in
xlat
imul
mov
pop
mov
mov
daa
and
aas
negl
cs
lods
inc
jmp
mov
fistl
or
mov
adc
add
xor
adc
aas
add
pop
jns
das
aam
cmc
addr16
fidivrl
inc
mov
push
pop
cwtl
dec
ds
mov
lahf
sahf
xor
in
mov
cli
jne
push
push
jae
xor
pop
adc
push
mov
sbbl
cmp
out
int
push
sub
sbb
outsb
out
mov
and
ljmp
jne
xchg
jbe
data16
dec
and
and
out
in
pop
jmp
out
pop
or
loopne
mov
mov
dec
or
mov
insl
call
pop
or
xchg
xor
jge
xlat
dec
repz
lcall
movsl
dec
aad
incb
jmp
je
push
inc
in
mov
xor
lret
addr16
cwtl
sbb
inc
push
mov
stos
jp
hlt
lods
jns
pop
mov
repnz
sub
jae
inc
outsb
xchg
cmp
mov
lds
lods
pop
sub
int3
and
subl
mov
int
adc
cmp
and
mov
mov
mov
pop
push
mov
hlt
cld
sbb
push
mov
jnp
mov
xchg
shrb
clc
in
cld
in
sbb
inc
out
pusha
jmp
out
mov
or
fcmovnbe
out
push
movsb
adcl
pop
push
dec
imul
lret
xchg
or
pusha
adc
scas
and
out
cltd
fucom
cmp
enter
inc
mov
dec
rcr
jns
es
cmc
and
cld
pop
or
xor
push
icebp
neg
fcoms
rcll
jae
pop
fst
adc
mov
mov
sub
mov
dec
xlat
shrb
jmp
xchg
in
push
xlat
xchg
lods
add
gs
mov
jne
fcomps
dec
in
lcall
adc
arpl
addr16
mov
xor
sbb
scas
push
adc
iret
ret
nop
adc
lahf
mov
add
jmp
mov
adc
xor
fucom
push
add
cwtl
in
push
lcall
pop
clc
and
push
add
ret
mov
ljmp
jle
mov
jmp
pop
loope
and
fcmove
enter
cmp
repz
sub
sbb
mov
je
add
or
cli
adc
jo
sub
mov
jb
int
outsb
pop
stos
ret
lods
mov
sub
repnz
fidivrs
inc
dec
enter
data16
jns
ja
lret
pop
test
loopne
sbb
out
in
mov
jo
xchg
test
cld
pusha
pop
dec
inc
in
cmp
mov
lret
cmp
movsb
and
mov
ss
mov
sub
subb
test
or
xor
fwait
xlat
mov
hlt
scas
push
mov
loop
jae
fs
ss
sbb
loope
cmp
bound
adc
xor
xor
out
loope
or
xchg
add
mov
aaa
sbb
ds
pop
in
cmp
data16
insb
mov
cli
scas
mov
cwtl
push
add
frstor
jg
add
inc
cwtl
ss
imul
xchg
cmp
icebp
rorb
repnz
iret
rclb
push
pushf
addr16
mov
aaa
add
pop
loopne
in
and
cmp
cmpl
lods
sahf
hlt
xor
lret
sub
sbb
fcmovu
inc
adc
lds
cmp
mov
cli
addr16
xor
out
sub
faddl
fidivrl
mov
mov
test
cmc
pop
cmp
cmc
in
mov
add
xchg
xlat
pop
dec
or
jecxz
insb
ds
xor
jle
test
or
xchg
and
push
mov
adcb
outsl
aad
mov
mov
pop
loop
jo
or
daa
sub
dec
and
lahf
cmp
add
push
sbb
dec
imul
push
outsl
xlat
adc
mov
insl
lock
enter
inc
inc
xor
ret
out
ljmp
call
insl
inc
nop
and
sub
fmull
enter
hlt
jg
push
notl
fcomp
mov
add
divb
sbb
dec
mov
xor
dec
jl
stos
mov
movsl
imul
jne
add
or
cmp
bound
mov
lods
insl
leave
mov
shrb
call
or
jl
and
adc
push
fistpll
popf
sbb
js
add
or
stc
nop
stos
mov
cmp
ss
adc
mov
add
mov
repnz
lock
and
cmp
jp
test
int
or
inc
mov
fsubl
pop
ljmp
test
jmp
push
mov
hlt
mov
lahf
in
es
daa
cmpsl
add
mov
iret
xchg
pop
and
pushf
xor
outsl
fildll
pusha
cmp
imul
test
popf
adc
sbb
call
or
clc
scas
and
js
cli
push
sbb
push
in
xor
inc
cwtl
ret
jecxz
push
push
mov
sbb
ret
cmp
jmp
push
ja
push
or
gs
xlat
pop
adc
xchg
pop
mov
xchg
and
mov
pop
jns
repnz
data16
mov
std
lea
bound
repnz
stos
push
inc
xchg
inc
sub
xor
ret
or
lock
aad
push
je
add
jnp
lods
jge
and
push
out
dec
xorl
cld
and
mov
movl
jecxz
or
mov
fidivl
jmp
xor
mov
es
or
aaa
ficoms
push
out
cmpsb
and
add
pop
out
cli
mov
out
xor
sub
je
cmp
data16
cmc
dec
shrl
dec
into
ficoml
mov
xor
and
out
and
push
std
dec
inc
into
sbb
fwait
dec
aad
mov
adc
xor
int3
xor
out
in
ljmp
jne
popf
test
mov
cld
in
dec
aas
pause
sub
cmp
rorb
push
cld
out
aam
push
int
sbb
sahf
test
loope
daa
stos
pop
fst
jl
mov
das
mov
cld
ljmp
jo
rol
adc
or
sub
and
inc
or
sbb
ja
stos
xlat
add
stc
and
xchg
jecxz
push
push
fs
fsubl
lret
cmp
inc
cli
dec
cmpl
nop
test
movsb
inc
inc
icebp
push
icebp
rcl
cmc
inc
call
das
rolb
push
sub
adc
cmp
push
xchg
lahf
push
xchg
inc
loopne
loope
dec
movsb
cld
arpl
loopne
stos
push
sub
cld
mov
loopne
cwtl
sbb
iret
outsl
sub
int3
xchg
stc
mov
mov
cmc
insb
idivl
mov
or
icebp
pusha
xor
fwait
xor
mov
loop
jnp
xchg
addr16
popa
loop
sub
ret
insl
mov
bound
jne
cmp
and
mov
fimull
cmp
in
or
push
imul
xchg
rolb
jp
dec
outsl
ljmp
negb
stc
mull
stos
pop
jno
lret
or
cmp
inc
xchg
pushf
fdivp
cmp
xchg
cs
xchg
mov
in
mov
push
dec
push
enter
lcall
cmpsb
out
scas
ret
xchg
dec
pusha
shrl
jge
gs
inc
aad
ficoms
or
xchg
call
into
mov
jae
jno
xorb
mov
xor
add
hlt
adc
jg
lods
fucompp
pop
add
fcmovb
jp
in
cwtl
pop
push
mov
fdivp
mov
stc
cmp
scas
test
jae
mov
adc
nop
xchg
mov
rcrb
iret
cmc
ja
mov
dec
mov
cmp
mov
add
mov
xchg
fstpl
xchg
mov
pop
adc
push
shrb
imul
shll
sarb
mov
cmc
aam
in
mov
sub
lret
mov
jbe
or
enter
mov
sbb
lods
inc
xchg
mov
in
cli
mov
pop
and
sbb
pushf
cs
popa
mov
aad
inc
and
jno
rorl
sahf
lret
xchg
and
shrb
rclb
jns
subl
push
ljmp
mov
into
jns
mov
jbe
rol
and
cmp
add
inc
jle
js
rcr
out
xor
or
mov
sbb
adc
pop
mov
cmp
cmp
outsl
jmp
les
dec
fwait
push
loopne
cmp
push
add
fsubrl
mov
push
cltd
ficoml
dec
cwtl
pusha
pop
fwait
test
mov
int
sub
cmp
cld
testb
jmp
inc
push
add
lret
scas
leave
add
sub
cltd
mov
outsb
prefetch
inc
mov
dec
inc
dec
divb
sarl
sahf
negb
fsubs
arpl
cmp
divb
push
xchg
xchg
shll
mov
xor
add
sub
jmp
pop
cmpb
movsb
es
dec
mov
mov
xlat
daa
lea
xchg
sarb
mov
insl
out
ret
mov
cmp
ret
adc
xchg
lock
inc
or
xchg
test
mov
jo
sbb
mov
cmp
push
ret
dec
mov
jo
inc
test
gs
out
add
sarb
xor
ja
cmp
rcr
add
jns
aam
or
cli
and
daa
pop
adc
jne
xchg
repnz
xchg
mov
cmc
sub
test
or
scas
stos
int
fcmovnbe
xchg
jb
jae
mov
sbb
sub
orps
stc
and
in
mov
aas
mov
iret
and
sbb
mov
xor
dec
mov
scas
aaa
and
xor
insl
mov
jo
push
push
clc
sub
rcll
or
jge
sbb
xor
sub
pushw
out
std
pop
cmp
inc
aam
orb
test
orb
lret
and
pop
mov
fdivl
ds
and
les
lods
outsb
jge
push
ja
imul
push
and
xor
jnp
aas
stos
ret
or
lock
cmp
push
fstps
shll
ds
mov
push
inc
ljmp
and
into
lahf
sbb
hlt
adc
push
xchg
in
bound
adc
daa
xchg
dec
cmp
mov
insb
sub
jo
das
dec
pop
jmp
jg
ja
xchg
lds
enter
inc
or
xor
mov
test
call
fucomip
inc
push
cmp
jg
loopne
outsl
sbb
fisttps
jle
and
mov
mov
outsb
sbb
mov
out
and
cwtl
call
cmp
stos
ret
mov
stc
mov
std
push
sbb
sar
mov
inc
mov
xchg
or
xor
mov
cmp
aas
dec
jle
mov
cmp
scas
adc
ds
sahf
xlat
ror
xchg
mov
or
lods
es
scas
or
jle
rolb
add
out
inc
outsb
mov
sub
lret
pop
dec
mov
cmp
fsin
dec
sti
xlat
lcall
fwait
pop
and
cmp
cmp
lret
adc
jbe
incl
insl
js
es
push
addr16
out
pop
mov
lret
sbb
adcl
cwtl
fiaddl
mov
icebp
mov
movsl
into
js
test
dec
lea
fdivs
jmp
pop
sub
aad
mov
xorb
test
lock
andl
bound
sarb
mov
fstpt
sbb
test
test
dec
cmc
sbb
sti
dec
jl
aas
ljmp
lods
and
movsb
test
repnz
jmp
add
xchg
mov
dec
xchg
cmp
cli
sbb
jl,pt
stos
xchg
add
fwait
dec
test
rcr
pusha
ret
inc
call
pusha
mov
add
jo
pop
ret
movsb
ljmp
fimuls
pop
dec
aas
pop
jge
fisubl
in
jp
loopne
out
and
push
addr16
jo
outsl
stos
loopne
mov
xlat
mov
adc
sbb
mov
fstp
insl
sub
jmp
sahf
jns
mov
xor
adc
inc
fxch
mov
fcoml
test
ret
sub
xor
or
fsts
mov
decl
dec
push
xchg
xor
cmp
shrl
add
loopne
arpl
inc
scas
sbb
add
mov
cmpsb
in
sti
arpl
pop
jno
pop
push
xchg
add
loopne
into
inc
mov
adc
sbb
mov
test
lret
push
mov
fadd
dec
or
jbe
mov
cmp
in
xor
movsl
sbb
add
lock
xor
sbb
bound
and
xchg
adc
push
aas
add
push
xor
and
pop
fimuls
sub
ja
push
add
outsb
or
or
add
xchg
inc
lret
vpsrad
or
lods
jp
xchg
sahf
push
test
in
push
popa
test
into
pop
push
outsl
pop
cmp
idiv
or
jno
inc
mov
jle
lock
pusha
pop
idiv
lods
lds
daa
sub
push
shr
cmp
xchg
fsubs
out
stc
dec
lahf
adc
jns
test
mov
movsl
sbb
lods
pop
jns
in
int
mov
leave
imul
pop
jle
cmp
lahf
and
cltd
sub
sbb
mov
or
cmp
push
jle
adc
ftst
stos
test
shl
outsl
rcrl
push
ret
lret
int
vunpckhpd
push
loopne
imul
mov
pop
mov
jne
push
into
cli
sub
jo
inc
in
dec
rolb
clc
jp
aas
bound
sahf
testb
xchg
es
ret
mov
sub
jmp
push
call
rol
add
hlt
jnp
loope
hlt
iret
and
gs
mov
push
sub
pop
lret
pop
loop
inc
fs
sub
loopne
shlb
xlat
jo
jo
addl
or
inc
jb
test
iret
int3
push
daa
loop
aad
sbb
ss
cmp
mov
add
pop
enter
js
sbb
icebp
gs
jecxz
test
jne
and
in
mov
push
lret
shr
movsl
leave
add
sti
cld
notb
fmull
add
ss
pop
xor
in
mov
cmp
test
lahf
inc
mov
movsb
xor
mov
in
mov
data16
cli
xor
or
jae
rcr
mov
cmc
or
and
divb
popa
mov
mov
test
fninit
sub
or
stos
cmp
push
push
daa
mov
fs
dec
add
jb
adc
loope
ret
mov
lock
test
mov
imul
add
aas
cmpsb
dec
lcall
int3
adc
mov
push
sub
fldt
push
pop
insb
mov
imul
roll
jge
jo
mov
mov
or
int3
test
pop
out
xchg
cmpsl
or
imul
andb
and
push
jl
insl
ljmp
ret
xchg
jne
mov
or
movsl
insl
and
pop
dec
push
es
push
pusha
test
xchg
adc
std
mov
xchg
inc
negl
test
adc
pop
xorb
clc
and
xchg
repnz
scas
fcoms
mov
stc
lret
mov
clc
xor
imull
pop
add
fmuls
mov
pop
pop
dec
data16
jb
sbb
arpl
stc
jp
and
pushf
pop
jns
mov
iret
xchg
aaa
dec
fldenv
clc
inc
mov
mov
and
call
lds
int
ja
icebp
fcompl
dec
lahf
imul
sub
sub
int
leave
or
popf
mov
jg
andb
lret
adc
in
int
gs
subb
lock
test
add
xchg
cmp
out
call
or
cwtl
pop
cmp
cmp
or
out
sub
mov
mov
mov
push
mov
fldl
insl
pop
ljmp
out
add
movb
xchg
int
inc
fists
es
sbb
stos
es
push
sbb
and
xchg
ret
clc
and
pop
xor
push
add
mov
int
or
add
cmp
jmp
pop
lods
xor
pushf
xchg
lahf
xchg
test
jbe
int3
fisttps
cmp
push
cs
repz
push
fcoms
mov
xlat
movsl
les
movsl
mov
fimuls
inc
inc
jmp
jecxz
incb
xchg
inc
jg
pusha
push
imul
aaa
out
inc
test
rcrl
mov
clc
jp
fistpll
popa
xor
cmpsl
mov
leave
das
test
test
push
mov
mov
idiv
xor
jmp
sahf
sbb
add
mov
cmp
cmp
adc
popf
insb
xor
bound
test
xor
xchg
mov
jae
pop
cmpsl
cmp
out
inc
outsb
repz
push
xchg
nop
icebp
xor
fstpt
insl
fnstenv
xlat
loop
mov
stc
mov
outsl
scas
jg
outsb
iret
jns
xchg
mov
outsl
jp
je
mov
ss
lea
out
loopne
dec
jmp
sbb
mov
pushf
jle
xor
stos
in
xlat
stos
add
js
lret
lods
pusha
xchg
push
xchg
fwait
data16
inc
pop
imul
mov
sti
inc
pop
jge
cmc
loop
subl
xor
mov
shlb
rclb
pop
sbb
mov
xchg
mov
add
insl
and
push
cmpsl
lock
cmp
fimull
es
mov
fcmove
mov
mov
flds
les
addb
mov
dec
jns
inc
fcoml
mov
fwait
mov
jmp
mov
and
mov
cmp
stc
sub
inc
ret
das
out
scas
stos
xchg
xchg
out
or
mov
sti
popf
or
int3
dec
pop
loope
fildll
gs
iret
sbbl
push
fnsave
fidivs
clc
mov
cmp
std
inc
cmp
mov
add
icebp
fcmovnbe
out
mov
cmpsl
movsl
test
or
mov
sub
mov
adc
jnp
push
js
sub
jo
jo
mov
mov
arpl
lods
int3
std
out
adc
lret
jp
addr16
std
cmp
pusha
imul
sarb
out
jns
out
jge
int
test
mov
call
addr16
add
aaa
lds
lds
int
add
pop
test
adcl
sbb
cld
mov
test
xchg
mov
fcmovnu
jp
inc
add
lret
rcrl
stos
pop
je
jo
xchg
mov
dec
test
xchg
iret
adc
mov
sub
lcall
aad
fstpt
je
fldl
adc
outsl
jne
mov
hlt
es
mov
adc
inc
sti
sbb
and
add
mov
jne
pop
push
jmp
pop
jg
cmp
in
in
movsl
in
lods
es
pop
jns
insl
nop
popa
in
cmp
pushf
xchg
sbb
std
xchg
jmp
jne
xor
push
jecxz
sub
roll
xor
jl
lret
bound
push
inc
xchg
adc
data16
gs
in
sbb
outsb
xor
or
test
xor
ja
sbb
jo
inc
xchg
fdivrp
mov
push
jle
stos
xor
jbe
mov
add
enter
add
cmp
dec
jle
jl
jmp
mov
mov
pop
lock
lret
popa
sub
mov
ficompl
test
inc
rcrb
xchg
lods
pop
rcll
sub
xor
cld
and
out
jg
loope
push
pop
cmp
mov
shlb
sub
xchg
pop
inc
jb
push
test
es
or
xor
fildl
jbe
sbb
bound
aam
loopne
insl
jmp
imul
jns
loope
or
fidivs
dec
sbb
insl
mov
jnp
std
in
loope
jl
mov
test
xor
or
sub
lahf
sbb
lcall
or
and
or
jns
in
sbb
cld
cmpsl
jecxz
adc
xchg
ret
pusha
cmp
mov
iret
insl
cli
std
dec
loope
xlat
push
pop
push
in
cli
mov
loopne
aas
mov
pop
dec
push
in
int3
dec
jmp
pop
stos
shl
xlat
inc
mov
and
addr16
lods
subl
decl
das
dec
adc
lar
fwait
adc
xchg
add
stos
jecxz
push
test
testl
hlt
and
mov
cmpsb
push
jnp
sbb
cmp
jno
fsubrl
adc
xchg
stos
xchg
aad
fdivrl
pop
push
sahf
push
cmp
ja
inc
adc
rcr
pop
ja
inc
cltd
dec
push
clc
fsts
sub
push
pusha
cld
xchg
out
cmp
sbbl
lods
gs
cli
lods
jns
cmp
dec
mov
inc
jno
repz
jne
sahf
pushf
push
or
pop
xor
outsb
and
fidivrl
add
enter
imul
loope
adc
icebp
mov
sub
inc
imul
outsl
iret
dec
lock
push
jecxz
les
mov
sbb
loop
lea
insl
movsb
fnstcw
aaa
mov
inc
sub
push
subb
xorl
repnz
iret
mov
pop
push
popf
insl
xchg
outsb
add
push
fildl
or
mov
jbe
sub
mov
xchg
pop
mov
inc
sub
fisttpl
stos
or
xchg
jb
ret
pop
sub
sub
push
rcrb
and
sahf
mov
mov
jo
mov
outsb
sbb
shlb
jle
fisubs
sub
loop
xchg
ret
xchg
adc
cmp
cli
jns
lock
adc
fdivl
in
jmp
xchg
insl
out
jno
sbb
jge
xor
mov
cmp
push
sbb
test
xchg
sti
inc
jle
les
lods
ret
inc
in
mov
sahf
divl
scas
push
sbb
sbb
ror
jg
lahf
ljmp
mov
xchg
mov
jns
inc
sbb
jge
pop
pusha
xchg
ljmp
xchg
lcall
mov
je
dec
jmp
and
enter
or
sti
jo,pt
inc
lret
sbb
push
aas
imul
roll
xchg
mov
pop
daa
lcall
bound
sub
sbb
mov
cmpxchg
loop
pmuludq
stos
xchg
jne
movsl
adc
pushf
add
ret
fnstcw
xor
pop
out
add
jo
loop
ds
sbb
iret
xchg
loop
pusha
testb
aaa
sti
pop
mov
lock
or
mul
or
sbb
dec
adc
pushf
lods
push
mov
leave
sbb
xor
xchg
aam
insl
xchg
dec
sub
dec
movsl
pop
mov
addr16
int
inc
sbb
aas
test
add
and
cmp
sub
punpckhbw
test
std
out
push
push
scas
push
or
rol
aam
out
stos
rcrb
sahf
jno
sub
stc
push
int3
pop
pusha
jge
add
cs
cmpsl
push
in
into
pop
dec
addr16
fnstcw
scas
xchg
out
cmp
mov
xor
sbb
adc
jge
hlt
out
sbb
xchg
sbb
clc
mov
pop
mov
xchg
shrl
lods
mov
mov
les
rcrb
aam
int3
mov
and
add
mov
ror
pushf
lret
fildl
sahf
adc
dec
jb
mov
jp
pop
lret
fsubrs
xlat
sub
fildl
rorb
inc
lods
cs
dec
gs
paddsb
sahf
bound
xor
mov
inc
dec
dec
xlat
push
mov
jo
push
add
fsts
pop
cmp
js
fdivl
inc
sete
jl
mov
pop
ss
sub
push
enter
fmulp
cmp
jb
je
mov
mov
out
inc
jo
stos
test
out
push
hlt
pusha
ja
add
ja
cs
xlat
xchg
inc
incl
mov
bound
jg
pop
loopne
lret
mov
sbbl
rcr
clc
jae
pop
sub
repnz
push
dec
xor
xor
orb
push
dec
std
lea
outsl
gs
xor
mov
iret
cmp
cmc
lea
stc
movsl
or
mov
ja
pop
sbbl
cwtl
scas
pop
int
repnz
insb
aad
xchg
inc
int3
fdivrl
fdivrl
outsb
mov
sahf
or
mov
es
imul
mov
fcomps
xchg
jmp
mov
int
push
adc
sbb
sbb
xchg
pop
icebp
icebp
int
pop
es
dec
aas
sbb
xchg
sub
aas
int
orl
inc
test
mov
neg
push
mov
cltd
jbe
push
or
pop
pop
cmp
out
insl
clc
rcl
adc
pop
shrb
jmp
mov
mov
mov
leave
aad
jns,pn
fidivs
inc
ret
cwtl
push
inc
imul
push
or
out
movsl
lods
outsl
shrl
jge
push
mov
loop
cltd
loope
mov
or
sbb
mov
ljmp
xchg
add
shlb
das
outsb
xchg
shrb
adc
pop
xor
xor
rclb
pushf
mov
cmp
add
call
int3
pop
push
sub
lods
pop
sbb
test
xor
pop
rcr
mov
mov
xor
sub
test
dec
or
scas
bound
jno
test
nop
jno
mov
and
outsb
adc
inc
pop
dec
out
mov
mov
mov
xchg
add
xchg
adc
push
and
pusha
push
mov
test
arpl
mov
out
dec
pushf
in
mov
mov
jg
pop
lahf
pop
dec
xchg
xor
adc
xchg
sub
push
dec
ret
mov
add
rorl
mov
ljmp
gs
dec
mov
sub
icebp
dec
popl
loop
mov
cmp
push
add
and
ds
movsl
adc
pop
adc
cmp
pop
pusha
jmp
test
jns
push
and
or
inc
in
push
negb
jmp
inc
or
cmp
mov
inc
jg
add
in
jb
or
jo
repnz
inc
punpcklwd
sub
rcrb
popf
icebp
mov
jbe
jb
sub
ret
daa
minps
popa
bound
ret
cwtl
ds
xor
fcoml
xor
mov
add
xchg
push
in
pop
inc
push
xor
int
mov
cmc
inc
jle
pop
or
push
cmp
enter
nop
test
add
pop
sbb
imull
imul
xchg
xor
cltd
push
mov
adc
mov
in
arpl
outsb
dec
dec
lea
mov
je
stc
aad
fisubl
cmp
aaa
xchg
pushf
sbb
iret
sub
rcrb
jecxz
jmp
les
xor
divb
mov
ret
cltd
mov
ss
dec
mov
mov
faddl
push
int
fldenv
out
push
add
mov
inc
jbe
xchg
in
adc
hlt
xlat
jl
sub
cmp
lcall
jne
xchg
pop
adc
ds
or
cwtl
mov
testb
push
add
dec
xchg
test
dec
push
add
lock
adc
fdivr
mov
test
jge
test
jno
mov
std
sarl
nop
adc
sbb
xchg
mov
xchg
jo
xchg
and
imul
test
dec
pop
adc
push
jmp
and
repz
jne
es
outsb
mov
sahf
test
lret
repz
idiv
pop
movsl
cs
fcmovbe
enter
xchg
or
add
cld
into
int3
rolb
pop
jle
xor
test
jmp
enter
xor
hlt
fld1
xlat
xor
int
xor
adc
mov
into
mov
mov
xchg
push
imul
add
inc
push
scas
push
cmpsl
adc
adc
add
sbbb
xlat
jb
sub
push
push
jecxz
int
aas
inc
mov
leave
outsw
ds
sarl
cmp
mov
iret
or
shrb
stos
testb
dec
add
out
stc
popa
js
mov
sub
sbb
pop
jecxz
insb
cmc
cmp
sahf
leave
jbe
jo
fcoms
lock
pop
test
out
call
imul
sub
lods
mov
push
test
xor
stc
cltd
or
repz
out
push
shr
or
mov
adc
dec
shlb
lcall
cld
pop
bound
pop
std
dec
cli
cld
js
mov
mov
je
pushf
popf
xor
aaa
xchg
add
sbb
stos
dec
int
mov
scas
lea
adc
pop
pop
xchg
add
xchg
mov
xchg
xchg
sbb
enter
lock
mov
and
insl
xor
mov
popa
xchg
imul
test
mov
insl
push
adc
je
xchg
out
vpor
add
cmp
push
mov
fdivs
leave
and
in
push
test
adc
adc
fisubs
xor
or
popa
int
ljmp
lret
lcall
and
dec
and
test
adc
pop
pop
lea
shlb
jle
mov
sub
mov
sub
lock
mov
or
add
jo
inc
aam
or
aad
sbb
xchg
and
lea
movsb
mov
and
sbb
xor
jb
mov
sbb
repnz
gs
es
pop
pop
mov
jnp
lods
push
je
xor
sub
loope
dec
mov
push
jmp
push
mov
sbb
ja
xor
push
fsubl
xor
pop
aas
roll
xor
inc
push
cmp
or
or
mov
lcall
jmp
sbb
rcll
addr16
clc
jle
pop
mov
inc
mov
dec
cmpsb
fcoml
ja
jp
mov
inc
fimuls
out
sub
outsb
cmp
in
jne
add
pop
inc
xor
les
subl
mov
push
dec
enter
push
pop
push
cmp
data16
push
es
pop
pop
in
repz
mov
mov
mov
call
mov
mov
add
adc
pop
imul
mov
or
and
mov
popf
gs
dec
pop
movsb
mov
insb
loope
adc
hlt
into
jae
xlat
jle
popa
sub
add
movsb
shr
push
in
mov
scas
inc
inc
xlat
ss
ret
mov
mov
mov
xlat
jnp
sub
popa
jmp
push
fcmovb
rcll
inc
dec
push
ficompl
mov
and
cld
fdivl
mov
jmp
pop
or
insl
push
dec
mov
or
int3
pop
cmpb
clc
dec
adcl
shlb
jl
push
mov
sbb
cwtl
lock
push
mov
add
push
cmp
and
dec
inc
adc
mov
xchg
ret
std
sbb
inc
pusha
test
nop
jae
loopne
jge
and
xor
ret
sahf
pusha
subb
in
xor
jbe
sbb
jge
dec
cwtl
rolb
sub
or
sub
cmp
nop
addr16
inc
in
popf
xor
cmp
pop
insl
cmpsl
jle
dec
daa
icebp
add
es
push
inc
xor
mov
stc
push
inc
sarl
gs
scas
add
aam
add
and
push
in
pop
xchg
les
adc
rcl
add
mov
sbb
sub
or
dec
adc
xchg
mov
ret
push
inc
pop
mov
pusha
test
pop
add
lods
pop
scas
fbld
clc
dec
movsb
jb
int
gs
adc
cmpsb
je
mov
pop
xlat
divb
nop
add
adc
cmp
out
cmc
rcll
mov
and
dec
jbe
push
jp
inc
inc
add
pop
cmpsl
les
sub
mov
mov
mov
mov
shrl
shl
cmp
mov
adc
pop
dec
pop
int3
and
pop
cmp
sbb
mov
adc
adc
loope
in
incb
fldl
sbb
out
fcoms
ret
sbb
mov
dec
and
jb
sbb
mov
cmpsb
jb
push
or
and
call
sub
xor
pop
push
add
mov
xor
dec
mov
inc
in
mov
lods
rcrl
int
and
pop
mov
je
sbb
arpl
pop
addl
inc
xchg
mov
lods
cmpsb
jns
pop
mov
dec
daa
loopne
sbb
shr
cltd
dec
pop
or
mov
mov
mov
add
stc
es
in
out
clc
movsb
adc
aas
repnz
and
cmpl
imul
cmp
out
aad
in
outsl
out
jns
and
out
mov
sbb
test
push
ljmp
or
cs
xchg
es
dec
repnz
add
sub
test
in
adc
add
add
jecxz
in
sbb
adc
push
adc
cmp
fdivrl
sub
movsb
xor
xchg
mov
add
into
ja
leave
js
nop
push
sub
cmp
jecxz
mov
inc
push
pop
xchg
aam
incl
or
fdivrl
hlt
xchg
fcmovnu
jnp
push
mov
es
mov
insb
jno
out
lods
mov
cli
sbb
sbb
inc
cmp
or
loope
clc
and
iret
and
mov
mov
inc
stc
sub
xchg
jl
add
cmp
je
pop
loopne
stos
jo
mov
push
aad
xor
icebp
lds
lcall
push
and
xchg
xchg
addr16
cmp
outsl
scas
rcl
pop
jb
jno
js
repnz
sbb
mov
in
jp
outsb
sbb
aam
fs
adc
hlt
sub
loope
mov
inc
lods
lock
sbb
imul
das
xchg
pop
cli
lock
jns
cmp
ds
popf
ficoml
fisubrl
xor
add
mov
sahf
xor
adc
inc
ja
jo
sbb
mov
mov
inc
pusha
out
xor
sbb
movsb
cmpsl
dec
lret
enter
pmulhuw
pop
mov
jp
jae
push
out
aad
push
mov
push
out
sarl
jl
adc
pushf
jmp
fldt
in
aad
cmp
lahf
xchg
xor
std
inc
in
decb
outsb
xor
dec
xchg
mov
mov
xlat
jae
lahf
mov
or
ret
gs
xchg
push
fsubrs
sub
shll
dec
into
frstor
sbb
push
call
jg
fldcw
push
test
into
mov
mov
std
bound
fisubs
xchg
repz
jl
jo
call
push
fisttpll
sub
scas
mov
mov
addl
mov
movsl
inc
data16
iret
mov
mov
pop
data16
adc
leave
xor
popa
cmpsl
or
fidivs
jns
adc
push
repnz
lret
push
sti
jbe
test
adc
clc
ja
stc
scas
ret
mov
sbb
pop
vpaddusw
xchg
js
outsl
stos
in
sbb
rorb
add
ficoml
outsl
cmp
xor
and
inc
ss
xchg
aad
sbb
call
or
das
aad
lcall
outsb
lcall
ss
pop
int
mov
cmp
in
add
je
inc
inc
fcmove
pusha
jle
icebp
pop
ljmp
lcall
cli
insb
xor
cmpsb
adc
xchg
aad
dec
fldl
xor
outsl
mov
or
shrl
imul
ss
add
movsl
pop
cmpsb
bound
es
jmp
sbb
jecxz
jl
xchg
nop
cwtl
sti
or
pop
fsts
cld
fildl
mov
loope
xchg
shll
shrl
lcall
mov
mov
inc
xchg
mov
fbld
int
subb
mov
or
and
in
dec
adc
cmp
push
pop
xchg
leave
add
add
add
aaa
pop
pop
mov
dec
mov
jp
stos
bound
in
adc
mov
dec
lods
outsl
loop
push
fsubr
xchg
jge
test
in
outsl
sbb
insl
add
mov
push
stc
add
pop
fdivrl
or
sub
and
push
fucomi
mov
jge
lret
and
es
pushf
loopne
fucom
loop
mov
pushf
pusha
call
pop
test
mov
xlat
in
arpl
jmp
icebp
scas
lahf
stos
mov
ss
cmp
in
push
ret
stos
test
mov
jbe
push
inc
mov
dec
rolb
dec
xor
dec
sbb
es
jl
sbb
out
sbb
sub
outsb
pop
inc
pop
inc
mov
or
xchg
leave
sbb
adc
call
paddsw
test
stos
cmp
push
inc
mov
cmp
notb
push
aas
inc
shr
pusha
adc
fwait
shlb
je
imul
addr16
sbb
loope
inc
inc
adc
xchg
cmp
test
in
nop
in
mov
add
push
jns
in
pusha
add
imul
cltd
jns
push
pushf
mov
cmpsb
push
jecxz
jae
xchg
imul
and
sbb
dec
pusha
push
loop
pushf
leave
cmp
addb
mov
je
daa
or
pop
imul
push
sub
xchg
xor
mov
xchg
mov
shll
icebp
outsl
notl
lea
push
push
hlt
loop
mov
sbb
movsl
dec
imul
aas
mov
mov
jge
jmp
lods
cs
jno
jle
popa
mov
insl
je
dec
sub
push
insb
push
pop
sbb
adc
subb
mov
sub
dec
scas
imul
lock
jae
repz
sub
imul
xchg
mov
ljmp
andb
clc
std
adc
in
cld
or
fs
dec
xchg
push
insb
clc
mov
xor
popf
push
mov
aad
fcompl
and
rcrb
data16
xchg
movsl
mov
xor
icebp
xor
push
xor
xchg
call
sub
or
adc
jo
and
arpl
dec
dec
mov
jbe
cli
inc
bound
js
add
push
mov
stos
cmp
sbb
aad
push
pop
push
jno
or
or
mov
inc
xchg
clc
mov
and
pop
popf
int3
loopne
fadds
jae
or
xor
dec
dec
sub
mov
mov
insl
cltd
add
rorl
mov
mov
and
mov
cltd
movsb
xchg
les
mov
gs
test
add
xorl
mov
outsb
xor
mov
aam
lcall
add
sub
pop
xchg
jge
mov
cmpsb
gs
mov
push
inc
adcb
outsb
add
loopne
xor
inc
mov
adc
adc
mov
out
mov
inc
insb
mov
mov
arpl
mov
repz
je
mov
test
sbb
push
fisttpll
orb
push
mov
out
jns
dec
adc
fimuls
adc
xchg
jecxz
sbb
stos
cmp
mov
mov
add
sti
sbb
pop
movsl
pop
mov
cli
mov
fwait
pop
fidivrl
cmc
loopne
inc
ret
repz
mov
xchg
lret
adc
add
xor
stos
jo
mov
or
mov
mov
pop
out
mov
test
mov
and
clc
push
sbb
mov
test
xchg
scas
dec
sub
addr16
stos
adc
jle
out
xchg
ljmp
int3
cmp
nop
in
std
mov
filds
pop
in
push
and
cltd
add
mov
dec
xor
pop
nop
mov
sbb
mov
dec
dec
mov
push
aam
jle
iret
jmp
test
lds
pusha
pop
test
pop
xchg
ret
push
mov
xor
out
mov
mov
cmp
mov
rcl
or
cmp
lock
scas
push
lods
sti
out
std
or
push
mov
mov
div
addr16
shlb
repz
nop
lret
sub
xchg
bound
push
xor
dec
jge
stos
jle
jle,pt
xchg
cs
out
lcall
adc
push
push
jnp
mov
and
xor
sub
hlt
ja
sbb
pop
out
int
lret
test
iret
xchg
mov
arpl
xor
adc
scas
sarl
add
sub
call
movsl
mov
icebp
into
mov
sti
fmull
inc
test
stos
mov
mov
mov
clc
jns
pop
push
dec
mov
pushf
mov
sub
rcr
jl
stos
push
cmp
fimuls
xchg
pop
jg
mov
lock
mov
dec
inc
fidivs
xchg
mov
mov
push
shll
xchg
arpl
test
enter
and
push
inc
push
ret
lret
das
xchg
xlat
pop
bound
cmp
bound
test
mov
test
loop
int
pop
xchg
sbb
in
cmp
mov
xchg
scas
daa
data16
je
test
add
push
push
mov
mul
or
jne
aad
into
push
sub
lods
je
outsb
add
arpl
adcb
or
lock
dec
inc
add
fsubrl
push
fidivl
inc
jb
inc
pop
pop
adc
inc
mov
lea
push
cmp
aaa
push
mov
sub
dec
sub
insb
mov
lea
dec
push
shlb
daa
mov
fistpll
add
in
xchg
leave
mov
gs
jb
ficoml
mov
insb
or
adc
sarb
jbe
and
and
fisubrs
rcll
inc
or
lret
inc
lds
jp
sbb
popl
push
adc
aaa
jno
out
mov
xor
nop
int3
jle
jo
rolb
add
adc
add
jno
or
xchg
test
mov
icebp
cmp
xor
ds
fwait
outsl
pushf
push
sub
sub
out
aad
jo
mov
lret
movsl
mov
jmp
push
lret
pop
push
push
lods
int
leave
cmpsb
cmp
cmp
cmp
and
dec
or
ret
aas
iret
test
jbe
add
into
mov
sub
aas
adc
ss
and
xchg
adc
mov
dec
arpl
bound
cs
push
mov
jl
into
rclb
shl
outsb
aaa
out
out
insb
cmp
pop
js
sti
pop
xchg
rcrb
mov
jle
shl
nop
in
popf
aas
push
imul
fisttpll
das
xor
aaa
mov
clc
pushf
or
lea
adc
push
nop
mov
cmp
mov
mov
fwait
repnz
push
add
xor
out
mov
sub
xchg
add
or
jecxz
out
or
pop
pop
pop
pusha
jmp
add
cmp
stos
sbb
xchg
sub
inc
sub
cmc
inc
push
lcall
xchg
push
stos
and
daa
jae
dec
hlt
pop
xchg
dec
ja
ja
push
mov
ljmp
dec
fcoml
negl
mov
hlt
das
cmc
imul
mov
and
push
add
push
cmpsb
sbb
xor
daa
data16
mov
sbb
ret
sbb
mov
xlat
add
loop
movsb
aad
pop
mov
mov
in
fidivrl
mov
out
hlt
push
out
outsb
outsl
xor
adc
pop
repnz
sub
aam
mov
in
fucompp
xchg
xor
inc
sub
add
das
ret
or
lods
fimuls
test
repnz
fistl
or
mov
xor
pop
add
inc
xorb
imul
out
or
shrb
rclb
xchg
movsl
aad
pop
std
nop
fnstcw
jecxz
hlt
das
pop
sub
adc
add
roll
les
push
std
dec
movsl
cwtl
cmp
inc
mov
jg
jbe
cmpsl
int
jnp
push
xchg
imul
in
fildl
ficompl
sub
xor
pop
fs
adc
mov
scas
push
push
mov
outsl
add
xor
inc
out
jns
pop
aam
dec
fucomip
xchg
outsl
jo
xor
ljmp
xlat
cld
idivb
mov
add
pushf
jmp
pop
and
mov
mov
shll
sub
jl
outsb
adc
push
mov
push
loop
xchg
sub
dec
pusha
add
je
cmp
sub
mov
xchg
gs
sbb
test
lcall
sbb
mov
sub
iret
lods
imul
cmp
jbe
xor
leave
xlat
out
push
sub
jecxz
pop
imul
pop
bound
lea
cs
push
cmp
int3
pop
fsubrl
adc
or
mov
mov
jge
aad
je
imul
sub
jge
mov
pop
movsl
sbb
mov
mov
or
enter
cmc
cmpsl
jno
lcall
mov
and
loop
push
shr
inc
cmp
test
les
aad
mov
inc
fildl
mov
test
add
push
pop
xchg
pop
es
ret
jns
loop
mov
cli
dec
sbb
push
fisttpl
dec
inc
xchg
stos
push
repz
dec
or
cs
mov
cmpsb
lahf
mov
ficomps
les
movsb
outsl
jae
bswap
in
jl
test
xlat
sub
dec
lock
mov
cmp
out
sub
scas
adc
and
int
xor
scas
sbb
daa
cmpsb
es
sbb
fmuls
or
fisubl
fnstsw
loop
push
orb
or
and
mov
fs
fs
arpl
xor
ja
sub
arpl
rorl
test
push
dec
add
in
in
pop
aas
ret
push
imulb
arpl
jne
and
push
imul
fildll
pusha
sbb
add
pop
pop
icebp
aam
test
cmpb
sbb
outsl
xlat
and
cmp
hlt
mov
stos
mov
inc
popa
iret
lcall
and
cmc
xchg
dec
push
inc
movsb
mov
jno
orb
add
dec
cs
sbb
mov
adc
sahf
sub
cmp
popf
insb
mov
or
mov
xchg
adc
imul
dec
sub
stos
sub
xchg
loopne
mov
inc
cld
scas
mov
fs
push
hlt
dec
rclb
mov
movsl
push
adc
add
or
or
test
js
ss
in
xchg
push
push
jp
enter
bound
daa
enter
pusha
test
frstor
in
xor
xor
push
sub
fistl
mov
xbegin
pushf
fbstp
dec
jbe
adc
push
fcompl
jecxz
mov
aad
sbb
test
imul
inc
or
or
add
push
adc
push
pop
mov
mov
shlb
in
call
daa
mov
push
push
and
std
add
mov
cmp
imul
out
pop
out
outsb
idiv
call
and
sub
mov
int
jle
mov
int
inc
cmp
add
pop
lds
dec
mov
cmp
sub
pushl
js
ret
mov
xlat
addl
je
mov
les
xchg
cmp
jmp
or
js
and
jp
mov
push
mov
ds
std
mov
imul
or
dec
cmp
push
loop
add
mov
sahf
in
xchg
cltd
mov
lods
repz
add
repnz
imul
sub
aam
add
cs
dec
iret
enter
fildll
roll
inc
ja
pop
xor
and
in
cltd
push
jp
bound
lea
push
int3
mov
or
push
inc
gs
movl
cli
inc
cld
xlat
enter
arpl
scas
ffree
cmp
lret
insl
inc
mov
lcallw
pop
sub
ss
fldenv
dec
int
stos
add
repnz
xchg
filds
sub
cmpl
dec
movsl
sbb
xlat
test
inc
and
insb
cmc
repnz
jl
mov
jge
sub
movsl
ja
cmpsb
xor
adc
out
in
cmpsl
ret
xchg
pop
sbb
and
mov
shll
in
lds
loope
sub
roll
pop
mov
loop
sub
out
mov
sub
pop
repnz
out
and
cmp
sub
push
lea
cli
xchg
test
or
xor
lods
cmc
cmpsb
dec
sbb
add
mov
mov
jl
push
es
push
cmp
add
adc
incb
adc
add
js
sti
and
adc
sbb
and
leave
addb
shll
jae
js
lds
sti
adc
xor
adc
int3
pop
lods
inc
test
cli
dec
jnp
pop
dec
fwait
dec
push
inc
or
lods
imul
xor
inc
imul
jle
popf
add
lret
pop
lock
add
popf
lea
jnp
insl
loope,pt
imul
test
lret
cmc
sbb
int
jmp
xchg
sub
insb
sub
xchg
dec
loope
cwtl
jnp
js
pushf
mov
fmuls
out
repnz
fwait
add
bound
sbbb
stos
jge
xchg
mov
nop
add
out
enter
sub
sti
lcall
loopne
pop
pop
lret
lret
out
mov
add
fmuls
ret
pop
stos
jge
mov
lock
add
test
adc
jmp
test
mov
inc
aad
jecxz
in
scas
push
lahf
insb
adc
ret
jl
push
push
xchg
mov
mov
push
mov
xchg
push
pmaddwd
aas
lret
jmp
pushf
sub
xlat
in
and
out
jnp
insb
ror
lods
push
dec
sub
fdivrs
repz
inc
jne
pop
call
cmp
stos
xchg
insb
insl
aaa
and
mov
adcb
mov
mov
jo
xchg
lret
jne
imul
imulb
push
int3
jge
pop
paddusb
push
dec
xchg
addr16
test
dec
cmp
mov
imulb
xchg
nop
adc
aam
das
imul
mov
testl
call
sbb
ss
or
jb
or
pushf
ffree
ret
fwait
outsb
iret
ds
lods
into
inc
and
push
das
addr16
enter
arpl
lahf
add
pop
into
dec
cltd
subl
popf
aas
cwtl
stos
sbb
mov
or
aas
or
movsl
fwait
push
add
shrb
mov
inc
fisttpl
and
add
lahf
cmpsb
into
addl
lods
xchg
imul
or
mov
adc
push
or
pop
mov
cmp
out
cmp
sub
cltd
outsb
and
add
fsubs
scas
fildll
fldl
add
fwait
pusha
lcall
xor
shlb
and
push
inc
cwtl
sbb
and
pop
movsl
call
aaa
sbbb
clc
inc
incb
cli
or
jbe
or
inc
in
or
les
push
int
lock
subl
xchg
sub
add
mov
test
add
movsb
mov
stc
gs
pop
add
push
push
nop
adc
call
jl
xchg
mov
data16
shrb
outsb
into
roll
in
xchg
add
cmc
jge
dec
adc
add
lahf
jecxz
popf
adc
mov
sub
lret
mov
in
sarb
std
fiaddl
and
mov
push
out
jno
or
push
mov
scas
xchg
xchg
lock
mov
mov
inc
mov
ss
test
and
pop
push
cmpsb
dec
cli
xor
or
jnp
rolb
xchg
test
jbe
push
inc
aas
dec
cmp
call
jne
push
bound
shll
sbb
jmp
stos
imul
mov
adc
mov
lods
cld
hlt
fs
in
les
xchg
pop
int
lods
adc
dec
jnp
outsb
pop
cmp
mov
mov
sbb
sbb
add
in
sbb
mov
test
negl
movsl
out
and
add
jmp
jp
and
xchg
out
xchg
jae
pop
xor
lret
lods
push
mov
or
mov
scas
inc
int3
lahf
or
xor
in
rep
and
int
and
inc
shr
loopne
push
add
aaa
lods
and
aad
loopne
stos
cmp
loopne
jge
mov
lcall
loopne
dec
fs
mov
aam
mov
int
mov
xlat
cwtl
lret
sarb
pop
mov
sbb
jbe
sub
jno
shrb
mov
sub
fldenv
xor
cwtl
test
pushf
jno
xor
outsb
clc
pop
aad
hlt
int3
lods
cmpb
std
xchg
push
jecxz
out
pop
push
xor
mov
aam
pop
rcl
mov
sbb
cmp
or
push
xchg
enter
cmpsl
lret
out
pop
addr16
notb
data16
nop
xor
xor
arpl
sub
xor
jp
sbb
shll
add
cmpsl
or
pop
adc
loope
inc
mov
in
mov
and
pop
test
add
cltd
scas
fnstsw
cmp
mov
add
push
mov
aad
in
and
xor
int
jne
and
dec
cmpsb
pop
mulb
imul
bound
mov
aas
mov
jne
imul
imul
cltd
xchg
add
cwtl
outsb
jbe
dec
add
xor
pop
sti
adc
rcll
and
mov
jle
or
push
pushf
rorb
mov
xchg
shl
jge
pushl
dec
mov
loop
orb
arpl
leave
repnz
adc
mov
movsb
pop
jbe
rcrb
shrb
lods
cltd
mov
test
out
lea
add
inc
jo
jg
daa
or
inc
outsb
fwait
mov
dec
and
cmpsl
add
enter
or
dec
push
mov
xchg
sarb
dec
mov
imul
lcall
cmp
jnp
hlt
test
dec
movsl
lods
lods
fcoms
cwtl
mov
movsb
push
insb
fimull
cltd
dec
cvtps2pi
xchg
add
cmp
imul
cmp
adcb
xor
cwtl
ds
mov
cmpsb
xchg
mov
xchg
idivl
lahf
sbb
or
or
rorb
mov
inc
push
xor
mov
jno
pop
inc
outsl
add
push
xchg
fisubs
xchg
cmp
inc
push
push
or
pop
cs
nop
dec
and
ds
sti
daa
in
push
mov
xchg
sub
push
pop
jbe
fimuls
push
ficoml
push
aam
js
dec
icebp
xchg
imulb
xor
jnp
mov
aas
out
pop
push
xor
cmp
and
movsl
ss
mov
push
nop
les
sarl
mov
sub
jne
lock
jecxz
cmpsb
lcall
xchg
add
add
sub
fwait
adc
or
mov
std
aas
cmp
push
mov
ret
aas
imul
push
insb
mov
push
sub
push
sub
xchg
dec
push
subb
jb
cmpsl
cmpl
sub
push
jb
xchg
xchg
repnz
pop
push
mov
in
cmp
das
jle
push
push
ljmp
inc
in
jecxz
jns
jp
or
ljmp
push
cmp
pop
or
push
pop
add
cld
nop
ds
rorb
ja
cmp
fcoms
out
sbb
add
popf
fisttps
mov
or
inc
add
je
add
das
mov
pushf
pop
lret
mov
lods
jno
out
sub
scas
and
mov
push
adc
cmp
pusha
add
inc
in
sarb
in
sub
dec
cwtl
arpl
sub
repz
mov
adc
dec
xor
sti
push
push
mov
inc
xabort
loope
dec
es
movsl
xlat
ljmp
stc
dec
je
jmp
push
xchg
js
jnp
iret
test
leave
jl
jge
jp
lea
fcompl
les
icebp
inc
movl
insb
divb
imul
jecxz
sbb
in
xor
shr
or
adc
push
and
dec
adc
fsubrl
fiaddl
mov
add
call
jo
inc
sahf
fistpl
jmp
jne
xor
mov
pop
out
adc
mov
mov
xlat
sbb
test
adc
jae
stos
fbstp
data16
bound
mov
cmpsb
lock
gs
jmp
push
ljmp
xchg
cmp
cs
adc
dec
fists
lahf
xchg
clc
cld
sahf
in
sti
je
lret
pop
loop
dec
inc
fists
fidivrs
hlt
jae
sub
lods
cmpsl
in
inc
dec
mov
and
dec
mov
dec
push
and
clc
jno
ljmp
aam
xor
rcrb
cmc
jmp
push
mov
lahf
aaa
sti
mov
loopne
insb
sahf
movsl
mov
inc
fidivs
cmp
lods
sbb
sbbl
call
pop
shll
xor
sahf
xchg
jo
dec
out
sub
push
pop
jns
in
xchg
hlt
add
movsl
mov
xor
flds
jo
pop
ret
add
sbb
leave
jb
stos
stos
mov
mov
mov
xchg
fisubl
pusha
lods
sub
and
xchg
fimull
sub
push
mov
iret
cmp
sahf
dec
enter
or
lock
and
enter
pop
mov
sbb
and
sarl
or
js
or
mov
push
repnz
mov
push
mov
out
or
test
stc
xchg
dec
pop
sub
loope
pop
loopne
int3
mov
test
fdivs
sub
dec
rcr
in
and
cmp
and
jle
xchg
xchg
or
add
dec
xor
dec
push
and
mov
bound
rclb
jg
mov
xchg
aam
popa
fs
data16
jmp
mov
mov
or
rcr
sub
sahf
sub
icebp
test
cmp
push
iret
sti
xchg
std
add
add
mov
adcb
sub
jno
mov
or
push
push
jae
mov
lods
jae,pt
iret
push
xor
rcl
mov
jbe
icebp
mov
arpl
adc
or
sub
pop
test
aam
loope
cmp
mov
int
mov
add
adc
std
jbe
inc
sahf
xchg
cmp
mov
or
push
lds
iret
push
shr
pop
lea
in
jl
out
mov
cmp
loop
icebp
xlat
or
ja
dec
or
sbb
shll
push
mov
lahf
adc
jo
inc
xchg
orl
stos
call
jge
in
in
dec
fmull
fstpl
inc
clc
sti
repz
mov
pop
int
mov
popa
mov
push
pusha
push
cmp
and
stos
divl
hlt
or
in
adc
mov
testb
fbld
mov
xor
inc
or
pop
adc
fwait
mov
dec
xor
fistl
enter
stos
mov
daa
out
clc
fucom
mov
gs
int
dec
xchg
xchg
mov
pop
dec
fadd
push
dec
mulb
sbb
jns
jg
jecxz
lds
ja
popl
and
lock
arpl
jle
movsb
in
xchg
pop
mov
add
fcomps
nop
and
push
fs
adc
dec
stc
addl
pop
out
jmp
fdivl
in
jo
pop
icebp
lcall
adc
popl
in
repnz
mov
xchg
mov
fsubp
mov
movsb
notl
pop
cmp
das
push
aad
xchg
or
icebp
fimull
lcall
push
lret
dec
xor
popl
sbb
pop
cmp
mov
shlb
mov
mov
hlt
adc
jl
push
push
out
call
adc
movsb
iret
push
in
out
adc
inc
fimull
jge
ja
fistpl
sub
add
jb
call
pop
xchg
leave
insb
jmp
dec
incb
sahf
clc
andb
cmpsl
inc
sub
jbe
cltd
fimull
and
mulb
mov
and
fdivrl
fxch
fisubl
pop
and
aad
mov
mov
aam
jmp
pop
pop
pop
cmp
aaa
repnz
sbb
lock
stc
arpl
add
cmc
mov
fdivrl
popf
leave
pop
daa
cmpsl
adc
popf
clc
xchg
shll
ret
push
iret
cmp
pushf
dec
push
xchg
inc
jl
outsl
xchg
mov
hlt
jle
int
cwtl
push
jg
pusha
ficoml
jno
or
sub
add
jo
add
rcrb
pop
xor
test
sbb
cld
jbe
data16
dec
shrb
aad
xor
sub
repnz
cld
aas
lods
enter
in
sti
mov
test
jne
pop
stos
xor
mov
pop
fcompl
ss
mov
jne
aad
lods
stos
dec
push
xlat
movsb
loope
mov
loop
in
int3
shrb
ja
xchg
mov
lods
xchg
adc
jle
mov
fstl
les
or
insl
lds
pop
mov
push
out
lret
add
aas
aaa
ja
mov
andb
inc
dec
pop
aam
aad
xchg
and
jo
mov
sbb
test
cmpsb
sub
clc
push
xchg
mov
dec
inc
xlat
lds
or
out
dec
sahf
imul
sbb
mov
cld
add
fucomip
sub
cli
xorl
inc
ret
push
test
aaa
test
dec
test
jecxz
loopne
inc
fadds
rclb
jne
filds
pop
fcmovb
sbb
xchg
and
ret
mov
cmp
cld
mov
nop
mov
iret
add
sarb
test
xchg
mov
jl
ja
push
pop
scas
xchg
stos
stc
into
test
pop
hlt
mov
aam
mul
jecxz
inc
loopne
or
lods
adc
cmp
pop
or
ljmp
lock
sub
arpl
pop
mov
push
inc
mov
mov
andl
jne
loop
and
dec
call
std
pushf
jp
add
sub
inc
ss
push
mov
stos
sbb
leave
push
mov
testb
and
test
mov
mov
pmaxub
ljmp
adc
fwait
cmc
adc
inc
xor
mov
dec
mov
lcall
rol
xor
jmp
pop
mov
mov
es
imul
mov
cmp
scas
cmpsl
loope
pop
xor
fnsave
popa
sbb
fistpll
daa
sub
or
lahf
arpl
and
in
sub
sub
sbb
clc
aaa
xchg
cmp
or
notb
sar
es
mov
aam
and
bound
pop
out
jmp
jnp
addr16
repz
inc
xchg
mov
mov
jmp
dec
pop
jns
cltd
lret
mov
push
jecxz
decl
sbb
fs
push
aam
sub
add
push
gs
sub
push
shll
rcrb
lret
or
mov
sahf
nop
notl
jge
inc
clc
jne
mov
movsl
pop
xor
and
adc
push
nop
jmp
mov
jne
sub
pop
xchg
or
insb
sub
in
adc
leave
sbb
popf
or
and
js
mov
jne
xchg
jne
cmp
mulb
sbb
pop
sbb
ret
je
test
xchg
jmp
xchg
jecxz
jae
xchg
and
add
idiv
dec
icebp
push
adc
scas
xor
and
repz
mov
mov
js
inc
das
lret
imul
or
scas
scas
pop
jno
lret
cmpb
add
mov
sbb
test
mov
or
mov
movl
mov
xor
aad
mov
sub
sbb
adc
xchg
shr
add
outsl
or
jo
iret
and
rol
test
mov
cli
cmp
add
pop
iret
outsb
out
aas
fnstcw
mov
pop
xchg
push
and
and
or
or
xor
jge
loop
iret
pop
or
xchg
scas
xchg
jecxz
insb
daa
movd
call
xlat
imulb
xchg
es
sub
cs
push
sti
xor
scas
xchg
daa
shll
loope
xchg
cvtdq2ps
pop
repnz
push
rclb
push
jp
mov
or
xchg
push
int
jae
daa
mul
clc
xorb
cwtl
xor
sbb
xchg
sbb
jne
mov
cmp
add
into
movsb
push
int
and
fcom
fsubl
push
ror
xlat
jnp
div
mov
pop
mov
jnp
xchg
sbb
adc
adc
fimull
xor
pop
loope
xchg
jp
insl
mov
sub
sbb
fsubs
sub
jmp
push
mov
mov
call
jb
dec
daa
lret
add
hlt
fisubs
pop
add
mov
out
jp
sub
mov
jne
lret
inc
fidivrl
inc
xchg
lret
push
dec
mov
shl
fyl2xp1
xor
cmpsl
cli
clc
inc
setne
loop
dec
aaa
inc
cli
mov
add
sbb
leave
sbb
fimull
test
fidivs
dec
pop
ss
int
das
pusha
xchg
mov
push
push
lfs
xor
out
bound
push
mov
in
in
arpl
in
inc
cld
dec
fmulp
inc
iret
in
jmp
ret
jle
cwtl
outsb
jbe
pop
aaa
push
cltd
jb
pop
or
adc
rcrl
adc
aaa
cltd
adc
popa
xchg
and
fnstsw
js
adc
push
dec
jbe
paddq
lahf
faddl
pop
jb
mov
pop
and
pop
sbb
fiadds
fiaddl
jns
lock
mov
and
add
je
enter
aad
add
in
jno
mov
sbb
lock
and
dec
cmp
call
test
dec
cltd
ret
and
imul
inc
mov
daa
dec
cmp
mov
or
sarl
sub
mov
pop
cltd
fcomip
fmuls
pop
sub
imul
pusha
push
or
push
or
sbb
rcr
sti
push
push
clc
inc
loop
cld
shlb
jb
and
sbb
jge
imul
daa
and
push
jge
outsl
jle,pn
push
mov
xor
scas
mov
push
xor
xchg
jae
push
xor
inc
sub
loope
scas
add
or
mov
pop
stc
dec
jno
jmp
je
insl
add
pop
or
sub
xor
mov
popf
xor
outsb
mov
mov
adc
movsb
add
inc
ljmp
lods
mov
repz
dec
sub
xlat
mov
aaa
pushf
mov
lret
sub
pushl
mov
jle
push
jns
jne
mov
cmpsl
xchg
pop
lret
rcrb
or
into
arpl
and
ja
scas
jmp
decl
loope
lret
pushf
cmpsl
in
cmpb
addr16
adc
repz
test
inc
pushf
int3
pushf
xchg
icebp
inc
dec
andb
inc
mov
scas
push
sub
xor
mov
push
cmp
lcall
jle
mov
jge
mov
bnd
add
loop
cmovne
repz
scas
mov
mov
aad
adc
pop
sub
mov
enter
add
int3
mov
cltd
les
es
mov
cmpsl
inc
xchg
mov
adc
mov
movsb
pop
mov
shlb
call
pop
mov
lock
pushf
dec
and
cmpsb
cmp
sti
int
out
mov
fnstenv
cmpsb
pop
in
addl
std
jecxz
sbb
jb
les
pop
sub
mov
or
mov
outsl
test
lcall
iret
xor
add
adc
mov
mov
dec
lret
hlt
bound
lods
or
push
cmc
pop
sbb
xor
std
lgs
sbb
rcll
mov
pop
das
dec
aaa
mov
mov
jge
enter
sbb
mov
mov
pop
pop
and
push
fcmovne
and
hlt
das
testb
xor
xor
int
cmc
xchg
mov
dec
mov
js
add
push
insl
lret
cmp
cmp
lahf
popf
xor
cmp
dec
inc
jns
sahf
cmp
lret
or
sub
pop
in
fsubrp
movq
lods
cld
aaa
dec
fs
jnp
sbb
jnp
xchg
push
imul
push
xor
add
mov
addr16
cmp
in
jp
popf
arpl
mov
movsl
dec
mov
or
cmpsb
ret
imul
ret
sub
jecxz
stos
xchg
icebp
cmp
push
adc
ret
cmc
aaa
pop
xlat
mov
ja
cmp
dec
inc
pop
xchg
cmpb
xchg
xchg
lret
sub
xor
push
out
jl
jle
hlt
cmc
divl
xor
xor
sbb
call
xchg
add
jb
outsb
iret
and
push
pop
xor
sub
je
pop
mov
xor
into
pushf
adc
jmp
dec
call
mov
jno
jnp
jg
fs
sub
into
hlt
and
clc
push
mov
add
pusha
push
ret
testb
aam
mov
loopne
fisttpl
repz
mov
cld
mov
lcall
pop
push
pop
movsl
shl
daa
push
mov
mov
lret
xchg
adc
ror
push
mov
inc
insb
hlt
sub
pop
adc
xor
cmp
loop
jno,pt
push
sar
xchg
mov
aas
mov
andl
hlt
out
das
nop
aad
orb
icebp
loop
add
pop
and
jl
fistl
into
mov
mov
push
pop
push
push
adc
mov
shrl
add
aaa
aaa
mov
push
and
jo
subb
pop
jo
cwtl
push
xor
lea
repz
sbb
xor
es
jecxz
pop
scas
lretw
sti
imul
pop
lret
aad
lcall
mov
jns
leave
inc
imul
mov
inc
lret
cld
cmp
repnz
jg
mov
test
pop
push
lcall
bound
adc
add
jno
push
jecxz
or
xchg
or
int3
es
call
add
shrl
push
dec
xrelease
out
xchg
daa
or
out
js
outsl
outsb
jnp
repnz
das
xchg
stos
cld
sti
mov
and
lret
mov
enter
es
mov
stos
sbb
jae
adc
jl
rol
stos
scas
mov
imull
ds
mov
decl
sub
cmp
mov
push
jns
xor
push
adc
cmp
xchg
sub
stc
sbb
ret
mov
sahf
pusha
lds
jl
adc
jl
mov
pushf
adc
call
pop
mov
mov
push
dec
jg
lods
adc
xor
jecxz
mov
sarb
popa
xlat
dec
mov
mov
pop
imul
bound
js
sub
mov
sbb
frstor
data16
inc
push
cmp
aam
dec
fstpt
rcrl
or
cmpsl
ja
pop
cmp
icebp
dec
jp
imul
sbb
jl
mov
icebp
push
pop
fldt
xchg
mov
lcall
cmp
inc
mov
mov
hlt
inc
aas
aaa
cld
cmc
jns
loope
or
mov
and
add
in
mov
add
mov
pusha
mov
mov
repz
insl
mov
movsl
mov
mov
arpl
dec
sub
fidivl
dec
fldpi
loopne
pop
insl
in
or
movsl
sahf
pop
out
push
outsb
and
mov
insb
test
sbb
call
out
jecxz
mov
ret
out
add
add
xchg
pop
cli
xor
pop
in
scas
shl
xor
mov
clc
dec
pop
arpl
fdivl
dec
shlb
mov
and
add
mov
xor
shl
movsb
or
push
mov
pop
xor
out
pop
into
ljmp
xchg
shll
insl
add
xor
or
mov
and
dec
jbe
les
and
xlat
dec
in
in
mov
icebp
mov
scas
ficoms
push
push
lret
fstpt
jp
dec
loopne
mov
pop
xchg
pop
mov
pop
push
sbb
movsl
lock
sti
jle
jbe
hlt
mov
js
loopne
mov
pop
stos
shll
dec
jge
movsb
inc
test
hlt
leave
icebp
push
xchg
fnstcw
into
jmp
or
xor
inc
out
cwtl
out
popa
xor
stos
repz
ret
sub
sbb
push
adc
pop
cmc
jle
lahf
cli
adcb
pop
cltd
lea
test
xor
nop
fbld
jno
out
inc
int3
rolb
ja
jge
or
dec
xchg
fldt
mov
enter
popa
nop
lret
jae
repz
xchg
sbb
movsb
data16
dec
add
addl
pop
nop
dec
mov
std
dec
scas
sarb
sbb
push
into
sbbl
add
testb
xor
sti
in
cmc
add
xor
xor
adc
dec
test
lcall
xchg
ret
ljmp
inc
mov
mov
add
or
lock
rcrb
jg
and
mov
push
jge
jae
sbb
or
je
neg
push
adc
or
lcall
sub
and
xor
shrl
pop
mov
add
jl
lea
leave
pop
rorb
xor
cltd
sub
out
push
push
fwait
pop
push
stos
jne
mov
mov
jmp
pop
pop
das
add
push
xor
cmpsl
sub
js
outsb
shll
pop
dec
inc
mov
cmp
outsb
movsl
pushw
cld
dec
inc
pusha
repz
push
inc
jno
xor
ret
outsl
mov
mov
test
mov
stc
xor
mov
gs
or
inc
sbb
mov
jb
rcr
popa
inc
lret
push
data16
inc
jg
mov
mov
test
inc
fisubrl
or
sbb
jge
push
pop
mov
inc
pop
fiaddl
pop
jne
pusha
push
mov
ss
jbe
rcrb
push
out
mov
dec
or
adc
xlat
push
cmp
mov
addb
shl
adc
adc
and
mov
add
jecxz
out
pop
mov
xchg
lock
mov
jg
movsb
icebp
in
outsl
subb
add
adc
inc
fstpt
lods
lcall
fsubp
mov
mov
out
jne
inc
push
dec
jl
loope
incl
insl
inc
cmpsb
stc
jl
sahf
mov
mov
pop
insl
das
stc
sti
dec
lret
icebp
movsl
loop
repnz
pop
mov
addl
xor
jnp
mov
dec
xor
or
cmpsl
xor
xor
cmc
and
jmp
push
jbe
test
push
fnstenv
fmul
dec
add
int
xchg
lods
jg
add
mov
mov
test
cltd
xor
pushf
nop
inc
jecxz
ret
bound
outsl
cmpsb
pusha
sahf
out
popa
and
xor
xchg
adc
sbb
bound
sub
arpl
stos
or
mov
inc
jb
push
or
mov
out
out
adc
fsts
adc
pop
cltd
xchg
push
mov
and
pop
pusha
push
negl
mov
pand
fmulp
out
push
cltd
mov
push
mov
mov
scas
jb
inc
or
dec
push
add
mov
inc
sbbb
xchg
popf
mov
ror
jl
iret
les
into
outsl
test
jg
ret
aam
sub
adc
testb
stos
les
pop
call
lods
adc
nop
pop
rorb
pushf
or
test
enter
sahf
and
ljmp
lds
mov
leave
loopne
push
mov
test
dec
movsb
inc
cli
je
test
ss
shrb
cs
jbe
lahf
lock
in
push
fwait
into
xor
aaa
jg
repnz
iret
fistpl
inc
xchg
loopne
popf
dec
imul
mov
aad
pop
push
punpcklbw
add
imul
jbe
pop
dec
mov
mov
cltd
iret
cli
push
cmc
add
lea
push
adc
or
adcb
xchg
imul
cmp
enter
dec
rcrb
subl
ss
test
push
sti
adc
lods
add
mov
call
addr16
and
inc
mov
pop
hlt
arpl
sbb
jb
in
test
pop
shl
ja
mov
mov
xchg
pop
jae
and
pop
sub
jge
outsb
hlt
lds
ret
add
lods
dec
outsb
xchg
imul
std
lcall
rorb
cli
mov
and
mov
dec
xchg
mov
dec
add
cltd
je
cmp
addr16
mov
hlt
cmp
test
mov
idivb
loope
sbbb
mov
jb
dec
mov
sub
lods
stc
lahf
repnz
pop
jecxz
sbb
clc
or
and
add
das
adc
stos
jmp
mov
ficoml
xchg
push
add
aad
xchg
and
fstpt
and
jnp
fnstcw
jo
out
mov
xchg
mov
xor
sub
mov
mull
outsl
addr16
outsl
cmp
xchg
or
int3
inc
xor
add
push
ficoml
in
sarl
ja
mov
xchg
mov
mov
mov
inc
push
fisttpll
test
add
mulb
pop
push
call
add
mov
stos
adc
cltd
mov
jmp
mov
cs
rorb
lret
addb
inc
jno
and
leave
cmp
test
cld
arpl
pop
xchg
push
inc
xor
jg
mov
adc
adc
decl
and
stc
jge
jns
mov
jmp
shll
cmpsb
push
pop
enter
divb
pop
jne
cltd
mov
push
xchg
cmpsb
mov
mov
push
and
out
sahf
in
nop
cmp
decb
cmp
and
scas
arpl
lret
jmp
mov
movsl
fst
pop
mov
pop
jo
sbb
jb
outsl
adc
es
dec
pop
mov
mov
fcmovbe
adc
test
cmpsb
push
mov
add
pop
dec
adc
mov
and
pushf
aaa
inc
stos
mov
xchg
mov
icebp
sbb
push
lcall
mov
mov
rorb
add
or
push
test
shlb
cmp
xchg
ror
fnstenv
pop
inc
pop
xchg
scas
pop
orb
mov
sbb
movsb
cmp
ds
fbld
scas
push
xchg
and
aam
cmp
sahf
int
push
cmpsb
dec
ret
inc
or
hlt
cmc
std
jbe
and
jl
jl
adc
ficomps
adc
jge
testl
ja
adc
xor
push
paddusw
pop
fistpl
and
cmpl
popa
and
sbb
icebp
xchg
inc
xor
lds
ret
inc
scas
push
lods
icebp
nop
mov
mov
pop
out
pushaw
shrb
je
cmp
repz
push
fadd
jbe
insl
outsl
jno
les
bound
jnp
push
mov
dec
add
sahf
jns
lds
fisttps
push
push
mov
ja
adc
ljmp
jl
or
add
test
adc
jne
mov
push
pushf
ret
pop
mov
call
stc
push
sahf
and
mov
ljmp
leave
pop
adc
fcmovbe
dec
sahf
add
xor
inc
xor
xchg
jge
les
pop
fbstp
imul
xor
sub
dec
inc
pop
pusha
sbb
ror
out
push
fucom
pop
pop
xchg
ret
test
ss
out
mov
inc
lods
cmp
in
inc
adc
xor
jp
movsb
out
out
pop
adc
adc
cli
aas
out
jmp
push
aam
lcall
xchg
lock
jp
pop
in
out
push
filds
xchg
out
mov
je
fistpll
adc
fcmovb
lods
mov
jns
rol
shrl
fidivl
pop
lcall
pusha
filds
and
int
or
xchg
cmp
and
and
ja
mov
jle
add
add
fmull
adc
cmc
inc
fdivs
jae
mov
add
pop
mov
rclb
pop
inc
data16
and
in
and
scas
clc
aad
push
out
jb
dec
dec
daa
inc
mov
mov
push
push
mov
cmp
int
cwtl
fdiv
call
lret
scas
cmp
adc
cmp
jnp
dec
movsb
push
sbb
push
popf
sbb
test
mov
push
out
les
ret
xchg
or
fsubrp
mov
pushf
fs
aaa
mov
xchg
popf
dec
stos
enter
push
pop
lret
and
pop
test
mov
xchg
leave
inc
repnz
lods
jmp
mov
ja
xchg
ret
addr16
mov
dec
repnz
push
cs
inc
movsb
sub
adc
test
sti
loop
push
mov
outsb
lret
cmc
jmp
call
inc
ret
out
add
mov
icebp
ja
test
push
sbb
lods
stos
mov
mov
aas
dec
arpl
out
bound
cmp
xor
repz
dec
movq
ret
clc
lods
cmc
icebp
sub
jmp
ror
cmpsl
sarl
sub
jne
and
sub
imul
shlb
add
stc
popl
and
cli
aas
cs
and
sbb
add
imul
inc
cmp
rcll
scas
movsb
pop
stc
lods
ret
outsl
dec
shll
push
xor
into
jge
ud0
fs
out
in
push
inc
fs
mov
mov
push
fwait
mov
mov
cmp
pop
rorb
adc
mov
pop
cmc
fldenv
nop
rcl
stos
repz
lock
nop
adc
mov
jl
cmp
clc
cmpsb
sahf
mov
sbb
fwait
out
data16
push
dec
mov
aam
push
sbb
push
mov
ret
lret
int3
in
dec
repz
in
mov
ss
mov
push
in
dec
in
inc
ret
cmp
mov
xchg
xchg
mov
lea
and
ret
inc
cmpsb
lods
test
mov
fstl
test
outsl
daa
mov
mov
or
shl
pop
lock
mov
cmp
jb
adc
int
js
repz
push
sub
and
sub
jo
or
push
xchg
jne
dec
test
stc
lea
push
push
and
push
mov
aas
loopne
cmp
lcall
sbb
add
sbb
mov
push
loope
mov
inc
push
test
mov
jge
dec
dec
xchg
cld
fdivs
jns
xor
mov
lock
das
out
dec
mov
mov
stc
aad
mov
gs
mov
xor
mov
mov
cmp
or
pop
jecxz
add
enter
int
outsl
int
lods
orl
or
jne
xchg
scas
pusha
inc
jb
cltd
insb
sub
jmp
pop
jg
scas
sbb
sub
push
sarb
sbb
fistpll
mov
je
sbb
nop
je
inc
lods
fidivs
aas
adc
push
ret
mov
adc
xor
pop
lcall
sub
and
or
fstpt
loopne
mov
mov
ds
lods
jg
stos
lahf
pop
adc
mov
jno
lds
out
mov
mov
cmp
xor
adc
fs
jg
shlb
inc
adc
xor
in
fxch
mov
sbb
push
mov
imul
mov
lcall
push
cltd
push
test
ljmp
lods
lods
jp
mov
xchg
scas
sbb
cld
pop
xchg
jbe
cmc
mov
in
orl
pop
jecxz
shrb
add
sbb
jne
mov
mov
cmp
in
stc
test
test
mov
jmp
pushf
incl
js
mov
jnp
pop
mov
sahf
and
lret
sub
push
repz
loop
push
or
icebp
test
popf
push
int
pcmpeqb
out
insl
add
in
call
push
inc
mov
insl
mov
pop
add
add
fcoms
popf
or
lock
shll
cmp
adc
sbbb
jl
add
fstpt
ss
add
neg
scas
push
mov
lds
mov
push
scas
jmp
pusha
loopne
stc
inc
loop
adc
xchg
or
jg
pusha
inc
inc
leave
ret
push
add
cltd
cmp
push
or
mov
fwait
or
mov
sbb
mov
xlat
sbb
adc
push
mov
leave
rcl
xor
cmpsl
sbb
jnp
push
dec
call
arpl
cli
lfs
push
adc
jl
call
adc
imul
repnz
dec
ret
xor
add
rclb
vpavgb
push
dec
sbb
sbb
fs
call
dec
jge
mov
add
adc
insb
xor
divl
icebp
arpl
nop
pop
aas
inc
pop
icebp
mov
sahf
xorb
adc
scas
add
add
lea
adc
inc
add
subl
xor
pushf
jns
aad
pusha
xor
rorb
pushl
push
ds
push
fbld
das
popa
cmp
inc
js
in
icebp
lahf
jle
sub
mov
fistpl
call
iret
or
imul
xor
adc
frstor
dec
fwait
and
repz
sahf
cs
mov
xor
icebp
xorb
lea
add
inc
jecxz
mulb
fisubl
inc
sbb
xchg
xor
push
test
xchg
cmp
popf
mov
add
adc
out
test
adc
stos
mov
dec
dec
adc
in
sbb
sbb
xor
adc
mov
dec
sbb
push
cmp
jae
cmp
xchg
out
fnsave
loopne
add
stos
and
outsb
mov
pushf
cmp
fcmovbe
mov
pushf
add
xchg
mov
mov
push
fisttpll
jno
cmpsb
or
mov
mov
adc
and
shlb
sti
and
or
pop
cmp
xor
adc
aaa
mov
hlt
sub
je
mov
dec
out
sub
je
xor
xchg
mov
lods
push
dec
and
imul
int3
fiaddl
cmp
in
dec
cmp
inc
mov
les
add
std
fidivrs
dec
or
gs
ret
incb
je
or
fildl
cmp
rclb
inc
adc
aas
inc
popa
aam
test
dec
int3
mov
sub
inc
popa
push
xchg
cmp
out
jno
je
or
fstps
cli
xchg
hlt
das
out
testl
mov
xlat
movsl
stos
push
fldt
dec
ret
xchg
fnsave
mov
mov
fdiv
add
arpl
sbb
mov
call
push
pop
test
adc
mov
push
ret
jg
fiadds
stos
outsl
cmp
sub
or
or
xchg
aam
es
add
fadds
push
sti
adc
jecxz
add
pop
mov
adc
sub
xor
mov
test
imul
jno
repz
shll
dec
jns
pop
add
adc
scas
or
pushf
insl
lock
enter
jge
jle
push
sbb
bound
add
ret
stc
dec
clc
fwait
clc
mov
inc
lret
and
sub
mov
sub
sub
fwait
or
andb
mov
rcrb
test
call
out
lret
testl
mov
sub
int
std
adc
rclb
loop
fldl
sub
jbe
lods
pop
mov
jbe
femms
in
push
repz
divb
es
adc
pop
lock
mov
pop
xchg
fsub
mov
cmpsl
jbe
mov
lock
xchg
hlt
bound
sbb
rclb
in
dec
lcall
sub
or
push
test
mov
add
push
xchg
lret
hlt
aad
add
and
cmp
fdiv
aad
lods
cmp
in
scas
cmp
ja
sub
xchg
int3
fcomps
push
xor
loopne
and
jp
stos
ja
sbb
jbe
dec
xchg
outsb
mov
cs
fiaddl
rcrb
cmp
xchg
lcall
sbb
call
ja
aad
ja
mov
mov
jl
xchg
push
int
cltd
roll
loope
mov
sub
sbb
or
push
jne
cs
vpminub
mov
sbb
std
jne
jge
add
jmp
cmp
xchg
shll
test
mov
cld
sub
and
popa
shll
outsb
sahf
and
stos
xlat
xchg
addr16
in
and
out
sbb
stos
pop
sti
ss
lds
add
mov
cmp
push
int3
movsl
out
test
or
pop
pusha
dec
sub
movb
inc
out
test
or
call
push
and
aad
push
insb
daa
add
dec
cli
xor
push
push
or
imul
in
popf
out
adcl
xor
orb
sarb
cmp
lahf
loope
sub
cmpsl
in
mov
jo
insb
xchg
pop
iret
cmp
jae
push
movsb
xorl
sub
xor
jns
inc
lcall
push
xor
mov
sub
aas
or
cs
jne
cmc
out
jne
ljmp
repnz
push
cmp
daa
add
shlb
sub
fstl
dec
mov
pop
mov
test
adc
std
mov
jecxz
or
mov
scas
test
adc
pushf
jl
popa
bound
sbb
mov
test
jg
icebp
cmpsb
leave
repnz
hlt
add
in
cmc
int
fwait
roll
cmpsl
add
pop
push
stc
cmp
cld
xchg
mov
fistps
xchg
stos
xchg
pop
stos
jmp
call
sbb
aaa
ret
mov
pop
jecxz
mov
les
lds
pop
sbb
lret
xchg
sub
shll
insb
pop
ret
push
dec
pop
mov
sub
dec
push
iret
jg
in
lcall
movsl
pop
xor
and
xor
mov
es
sarb
mov
mov
adc
filds
fs
mov
push
dec
lahf
pushf
loope
inc
lock
mov
sbb
repnz
daa
xor
mov
xor
cmp
mov
sbb
jecxz
in
cmp
xchg
aaa
mov
jl
aas
adc
fldt
sub
push
fs
subl
mov
or
les
fcompl
fisttpl
aam
bound
jae
push
fcoms
cvtdq2ps
sub
scas
shlb
add
sahf
mull
movsb
dec
dec
mov
out
and
pop
cmp
mov
push
mov
inc
out
outsb
or
bound
xor
push
inc
add
sbb
inc
sub
mov
mov
pop
icebp
cltd
insl
cmp
loop
sbb
mov
inc
jb
add
mov
std
or
push
xorl
clc
lret
mov
cmp
jnp
cltd
and
inc
test
je
movsl
repz
sbb
mov
and
push
and
popa
xchg
cwtl
jno
ja
xchg
xlat
and
roll
xchg
ficoms
dec
adc
gs
xor
xchg
xor
js
mov
enter
gs
pop
sub
out
sub
jo
jecxz
enter
or
push
pminsw
adc
add
pushw
xor
in
stc
inc
cmp
pop
pop
lock
test
lock
jo
sbb
pop
sub
dec
push
andl
mov
inc
xchg
das
mov
lds
jle,pt
lods
cmpsl
jp
mov
sarl
jne
xlat
or
pop
push
jnp
add
into
pop
mov
icebp
and
push
xchg
push
pop
outsl
aam
imul
or
mov
jb
pop
inc
xorb
dec
add
and
out
and
stos
movsl
pop
pop
incl
sub
inc
pop
out
cmpb
iret
pop
mov
pop
xor
or
dec
mov
add
lcall
adc
and
dec
dec
test
xor
cltd
xor
insb
inc
push
ljmp
push
fidivl
push
mov
inc
in
das
lret
aaa
jno
add
or
add
jno
enter
mov
sti
adc
push
jo
add
aam
xor
push
mov
lock
add
sbb
pop
into
mov
mov
and
xchg
inc
in
cmp
fwait
ret
jp
std
sbbb
shll
push
cmc
pushf
ljmp
and
loope
xchg
mov
jge,pn
fwait
adc
mov
add
sbb
cmpsl
push
movsb
and
test
pop
cmpb
into
jbe
lock
nop
pop
xchg
sub
aas
jg
push
sbb
xchg
daa
cli
out
mov
mov
les
pushf
sbb
sub
enter
bnd
adc
inc
push
lcall
pop
daa
fimuls
fcompl
shlb
lock
cmp
ds
gs
mov
mov
pop
rep
jnp
or
test
adc
fnstcw
sub
orb
in
sbb
mov
push
xor
push
addr16
cli
test
or
cmpsb
mov
add
xchg
movsl
push
pop
xchg
cs
mov
dec
fs
lock
push
adc
xchg
cmpsl
jecxz
sub
into
scas
test
push
mov
add
stos
in
pop
lea
mulb
xor
add
inc
pop
cs
in
sbb
jo
pop
mov
and
cwtl
loope
jecxz
fmulp
dec
push
testl
inc
sarb
push
daa
stos
xchg
inc
rcl
xor
sbb
pop
cli
es
test
xlat
mov
adc
aas
out
inc
mov
push
mov
add
sub
push
pop
jle
mov
mov
lahf
ret
imul
gs
inc
outsb
repz
dec
int3
rorl
aad
jno
sti
jmp
mov
roll
test
icebp
ja
rolb
std
sbb
xor
sbb
fnstcw
sbb
add
fst
xor
fiadds
notb
inc
in
adc
call
add
or
adc
pop
out
jns
loopne
sbb
mov
data16
sbb
stos
ficoms
sti
jl
pop
aaa
jg
xor
jge
testb
popa
int
js
pop
push
or
pop
lds
sbb
lcall
add
sub
mov
std
das
push
cmp
cld
jge
out
push
sub
adc
rolb
adc
insb
jae
addr16
push
rorl
int
popa
pop
fisttpll
lods
icebp
mov
shlb
inc
mov
loopne
pop
movsl
sti
pop
mov
jo
sub
mov
xor
pop
popa
pop
jmp
cli
cmp
jo
mov
push
push
les
push
pop
pop
or
add
xor
not
cmp
sbb
sti
push
lods
push
pop
or
or
fcomps
mov
pushf
cmc
cmp
xchg
dec
nop
sahf
push
cmp
roll
adc
test
mov
xchg
popa
cmp
daa
daa
or
sti
mov
pop
jne
and
clc
pop
xor
testl
pop
xchg
pop
or
mov
and
inc
nop
aaa
std
inc
mov
jge
repz
jl
hlt
push
adc
hlt
mov
test
cwtl
fs
or
mov
ds
push
sub
aad
mov
xchg
mov
rorb
arpl
and
mov
cs
out
lahf
dec
enter
sub
mov
fisttps
filds
mov
sub
or
mov
push
nop
mov
xor
mov
je
push
jecxz
jb
jns
ja
xchg
ficoml
addr16
repz
cmpsl
ficoml
and
sahf
sahf
dec
addl
sbb
daa
mov
xchg
push
test
xchg
jo
call
aaa
scas
cmp
cs
pop
es
repz
ljmp
rolb
inc
sbbb
inc
push
scas
pushf
add
addb
jecxz
into
mov
sbb
dec
sub
sub
add
dec
dec
repz
mov
mov
daa
fnstsw
cmp
scas
imulb
jnp
gs
jp
and
cli
cli
jbe
pusha
or
lds
les
mov
cmp
iret
inc
xchg
and
ret
lret
xor
lock
jne
inc
into
scas
outsb
or
and
int3
mov
inc
mov
pushf
hlt
loop
mov
outsb
adc
pop
sbb
sbb
sbb
notb
gs
shlb
sbb
insl
xor
or
fs
insb
fsubrs
mov
sbbb
add
inc
and
xor
sbb
jb
xchg
inc
sahf
arpl
stos
aam
jne
fdivs
xchg
push
push
ret
cmp
enter
inc
xchg
loope
dec
sti
jmp
out
add
les
pop
pop
jl
adc
cmpsl
movsl
test
fldlg2
test
inc
imul
loopne
ss
movsb
sub
cmp
ds
outsl
push
jmp
push
sbb
mov
mov
leave
pop
xchg
cmp
xchg
push
jnp
scas
call
xor
jnp
adc
gs
push
or
mov
sbb
repnz
push
push
stos
arpl
dec
sbb
popa
out
outsl
aam
fscale
push
idivl
aam
call
xorl
xor
iret
stos
jnp
sbb
loope
jle
xchg
rol
add
cmpsb
cli
insb
in
loope
sti
ret
mulb
stc
daa
or
push
arpl
fbstp
push
inc
pusha
ret
int
pop
rorl
pop
loope
jle
jno
or
sti
push
jmp
in
in
test
shlb
dec
shlb
imull
mov
dec
dec
push
popf
mov
mov
fsubrs
jns
cmpsl
add
stos
sub
xor
cwtl
mov
inc
js
movsb
adc
lods
in
push
stos
movsl
lock
inc
daa
ffree
jbe
push
add
dec
jmp
sbb
les
imull
lods
inc
out
xchg
and
mov
out
xchg
jp
pop
loop
sti
xorl
cmc
push
dec
lret
adc
and
cmp
xchg
and
mov
std
pop
mov
aam
mov
cmpsb
sub
inc
add
into
ror
int
jb
pop
xchg
bound
xchg
fisubrl
notl
daa
aam
fsubl
notb
pop
xchg
add
sti
sub
in
arpl
rep
shlb
pop
push
lret
call
arpl
jge
sub
hlt
lods
mov
insl
test
add
scas
lret
cmp
fstl
jnp
stos
jns
mov
cmpsl
jl
sti
out
jmp
int3
xchg
sub
add
mov
mov
cld
cltd
in
loopne
les
test
and
inc
push
xchg
fs
das
popf
mov
sub
and
imul
out
les
pop
mov
push
push
rcr
jmp
sub
dec
lds
sbbb
xchg
mov
cmove
xor
mov
sbb
in
fs
hlt
sbb
test
sbb
shr
jo
std
lock
adc
in
fistpll
pop
popl
push
ja
dec
mov
out
inc
mov
xchg
jne
lcall
xchg
mov
popf
flds
mov
mov
scas
nop
popl
into
mov
data16
push
pop
jg
push
jp
outsl
clc
pop
or
stc
std
push
outsl
ja
push
sti
jecxz
push
mov
or
mov
cmpsl
mov
aam
sti
ja
in
and
xchg
sbb
cli
lds
addb
into
pop
es
adc
cmp
mov
dec
imul
inc
dec
jb
and
loop
inc
fs
aaa
xchg
push
repz
cmpsb
out
lea
mov
dec
and
jns
pop
or
je
xlat
add
insl
xchg
pop
pop
push
testl
outsb
xor
rcll
xchg
dec
push
js
outsb
idivl
xor
movsb
dec
push
dec
js
aad
into
addr16
adc
lods
imul
or
in
fistps
out
xchg
jno
sbb
test
cmp
insb
adc
into
and
fucomi
pop
insl
je
neg
mov
mov
sbb
xchg
xlat
sahf
xchg
xor
icebp
pop
ljmp
sbb
xchg
fnstsw
mov
add
leave
cmc
xor
jl
je
jp
test
sub
ljmp
cmp
mov
adc
rclb
lahf
inc
adc
test
jl
dec
adc
rcll
pop
int3
rcr
jg
push
nop
mov
pop
sub
stc
mov
call
sbb
imul
adc
loope
add
sti
inc
bound
sti
into
fmuls
mulb
cli
mov
jnp
orl
jecxz
pop
inc
lcall
cmp
cld
and
jge
mov
jnp
pop
pusha
dec
and
sbb
jns
repz
popa
mov
inc
or
sbb
dec
sbb
sbbb
dec
scas
out
push
jmp
dec
lret
cmpsb
cmp
sub
fsts
rclb
cmp
push
add
nop
fildll
shlb
jl
cltd
sub
pop
test
jns
int
xchg
loop
test
sti
jbe
inc
stos
mov
popf
xchg
inc
or
jbe
or
movsb
mov
mov
inc
movsb
sbb
mov
mov
bswap
cmpsl
xlat
into
jns
pop
cmp
enter
mov
sub
rorl
popa
insb
or
mov
insl
dec
out
mov
add
push
cvttps2pi
xchg
push
mov
movsl
and
rclb
inc
or
xor
aam
cmp
out
incb
mov
xlat
push
unpckhps
test
fcompp
mov
imul
pop
xchg
das
xchg
stos
cmp
inc
sarb
dec
sar
cmp
or
jge
stos
sub
xchg
icebp
xchg
xchg
sbb
mov
and
loope
or
inc
and
aam
or
aam
or
cwtl
js
pop
aaa
and
xchg
fs
aaa
mov
outsl
pop
std
jmp
shr
sbb
jno
mov
sub
pop
add
loopne
lea
test
mov
cltd
mov
pop
sbb
jb
xor
pushf
inc
fiadds
ret
lods
push
push
xchg
pop
sbb
cmc
fadds
inc
jnp
int
xor
mov
add
dec
cwtl
mov
push
add
lret
int3
sub
dec
in
push
dec
scas
dec
and
xchg
jmp
mov
es
mov
push
in
mov
mov
sub
xchg
dec
adc
push
mov
rcll
inc
pop
gs
add
sbb
mov
xorl
push
push
js
stos
test
pop
xchg
xor
push
mov
ret
adc
aad
jae
add
test
cmp
xlat
adc
xchg
or
invd
out
lea
push
inc
stc
xchg
mov
dec
dec
int
mov
loop
imul
push
out
cmp
add
shlb
jae
xor
jne
push
jg
pop
dec
cmc
sub
int
cs
rclb
pop
test
or
les
out
ja
mov
in
mov
scas
xor
cmp
pop
adc
js
sub
cli
mov
dec
cmp
pushf
insl
push
add
std
pop
sbb
mov
insl
cmp
and
or
pushf
imul
mov
test
dec
iret
lahf
insl
stos
mov
insb
push
cmp
xchg
leave
or
jns
adc
rcrl
xor
insl
jge
and
int3
or
cmp
mov
or
out
mov
insb
push
insl
pop
arpl
xor
rcrl
inc
aad
lods
cld
sbb
push
sbb
push
xchg
inc
dec
movsl
mov
xchg
bound
sbb
aam
sti
cmpsl
es
shrl
mov
in
cmpsb
cmp
sbb
mov
lods
add
sub
mov
sbb
out
dec
cwtl
mov
mov
lret
pop
insl
jo
cmp
icebp
divl
jnp
add
hlt
sahf
jns
add
cli
testl
rcl
iret
cmp
mov
jle
xchg
test
xchg
dec
sub
repnz
and
pop
js
ja
pop
mov
sahf
mov
in
mov
mov
adc
stc
sti
add
pusha
das
outsb
xor
psrlq
fldl
lcall
sub
imul
jmp
mulb
fs
jl
mov
int
call
outsl
xor
addb
pop
icebp
sbb
push
jb
ja
jb
testb
and
jl
or
mov
push
rcrl
jb
lods
fdivrl
nop
call
dec
pusha
or
jae
inc
icebp
es
xchg
in
pop
shll
dec
stos
mov
add
pop
mov
and
sbb
rolb
push
and
pop
or
mov
adc
les
fisttpl
push
sub
insl
add
adc
addr16
stos
pop
mov
dec
pushf
insl
xchg
jp
test
idivl
cmp
popa
int3
nop
call
leave
ret
aaa
inc
jno
jne
clc
fsubrl
arpl
cmpsl
or
pop
stos
inc
sub
inc
pop
test
push
push
or
inc
pop
repz
mov
or
xor
push
std
out
sub
subl
std
cmp
std
jle
pop
loop
or
jns
jle
xor
mov
mov
jb
xor
pushf
pusha
sub
popf
mov
inc
push
inc
imulb
cltd
in
mov
ljmp
adc
leave
fistl
ja
adc
push
aad
sub
daa
and
fcoms
mov
test
nop
jl
dec
xor
lds
sub
jle
stos
ljmp
cmp
inc
xchg
cltd
ja
mov
inc
inc
in
imul
int
sub
inc
mov
andl
mov
cvtpi2ps
shlb
test
xlat
das
test
outsb
lret
jns
fdiv
hlt
sbbb
cmp
mov
mov
push
xor
icebp
test
and
aas
fcomp
xor
das
xchg
pop
xor
or
or
pop
imul
dec
cmp
push
mov
pop
imull
cwtl
dec
out
sbb
insb
pop
sbb
ljmp
add
xor
jmp
dec
cmpsl
mov
jge
mov
push
sbb
shrl
jg
roll
dec
cwtl
mov
push
mov
pop
filds
mov
enter
cmp
cs
push
xchg
int3
sub
inc
dec
arpl
out
lahf
xor
daa
fcmovne
jg
call
mov
jle
xor
inc
mov
adc
inc
jnp
adc
push
arpl
fs
mov
fs
sub
sub
lea
add
and
sbb
mov
pusha
lock
call
fidivrl
aaa
mov
mov
adc
jae
test
addb
and
sub
cs
dec
stos
inc
sbb
icebp
subl
stos
int
pop
inc
adc
loopne
xor
xchg
add
or
dec
cmc
stos
test
fs
stos
add
mov
ror
jecxz
jae
call
arpl
pop
fucom
xchg
jns
cmp
add
clc
inc
mov
aam
ds
add
mov
and
sahf
and
out
sub
mov
fbstp
xor
pop
out
add
es
cmp
push
sbb
ss
or
imul
push
and
adc
sahf
adc
fwait
ret
ljmp
in
mov
inc
icebp
cmp
mov
inc
int3
in
add
enter
xchg
jnp
mov
xchg
push
inc
pop
mov
lret
or
cld
repnz
jb
xchg
push
outsl
aas
notb
test
jnp
loope
cmp
mov
or
jne
sarl
mov
cmp
cs
push
xlat
dec
stos
inc
push
jb
mov
and
fwait
and
fiaddl
icebp
mov
jb
mov
cmc
mov
dec
push
add
xor
lcall
movsl
test
mov
leave
pop
cmp
test
mov
sub
outsb
dec
xchg
push
mov
aas
cltd
xor
mov
mov
xchg
les
lahf
in
test
clc
sub
pop
dec
decl
xor
lcall
mov
xor
add
rclb
jp
imul
add
aam
jb
imul
test
jne
or
fistl
xchg
sti
mov
mulb
mov
pop
sub
jno
mov
sbb
xor
frstor
fsubl
mov
lea
pop
mov
adc
int
test
push
jecxz
push
in
add
inc
cmp
out
shl
test
sbb
xchg
pop
adc
sub
or
dec
les
inc
aam
movsb
add
call
push
lock
xor
lods
xchg
cmp
aad
arpl
incl
or
mov
sbb
ds
jbe
and
aaa
lods
outsl
sbb
mov
mov
fidivrs
xlat
inc
imul
or
notl
adc
fwait
imul
sub
mov
cmp
pop
jl
or
jecxz
sub
add
lds
cmpsb
and
repnz
jne
loope
stc
lcall
sub
xchg
cmpsl
pop
fisttpl
lock
clc
dec
sub
jno
insb
mov
out
cmp
ret
sub
or
cmp
lock
push
cmc
jae
push
cmp
aam
subl
push
xchg
icebp
push
int3
les
sub
data16
pop
imul
mov
push
call
or
jge
scas
xchg
pop
adc
cmp
ds
js
and
dec
ss
je
jb
jnp,pt
jo
loop
inc
push
cld
add
mov
insl
popl
xchg
mov
pop
mov
test
push
lods
jge
pop
mov
and
ljmp
and
fbld
sub
imul
cmc
mov
imul
sub
stc
pop
push
fnsave
or
fmuls
fsts
mov
lahf
rolb
jmp
data16
ror
cmp
shr
and
cwtl
xchg
push
imul
lret
xchg
cmp
xchg
int
push
sti
mov
shlb
in
jmp
lods
shlb
adc
lds
mov
loopne
cli
pop
sti
mov
mov
or
lret
cmc
out
imul
pop
push
fnstcw
stos
cmc
push
pop
pop
pushf
mov
sarl
ret
ljmp
out
pop
mov
push
lahf
lods
sar
and
sahf
push
jae
rcrl
test
jo
scas
xchg
jl
jg
push
fsubrs
scas
subb
xchg
cmpsl
js
loopne
outsb
mov
inc
filds
test
xor
xor
pop
push
mov
push
scas
or
pop
data16
addr16
insb
les
mov
and
add
mov
les
or
adc
inc
clc
mov
outsl
cmp
and
mov
or
out
fmulp
xchg
ss
sbb
push
leave
movsb
es
or
inc
push
gs
jnp
mov
mov
mov
jle
ss
inc
and
inc
xor
or
and
sub
jae
lret
in
in
mov
add
int
cmp
jecxz
xchg
mov
sahf
and
sbb
pop
shll
shrd
fcomps
jp
add
sub
push
add
lods
xor
mov
negb
pop
clc
leave
inc
or
in
pop
xor
mov
push
in
xchg
popa
inc
add
int
and
xor
popf
dec
lods
mov
push
mov
jg
insb
push
shrl
xorb
stos
jae
js
pop
inc
scas
dec
bound
push
mov
jl
nop
dec
mov
jne
add
mov
push
test
add
test
jnp
cmpsb
call
dec
addr16
in
add
loope
call
imul
ja
fdivrs
gs
and
imul
pop
mov
xor
adc
lods
dec
push
push
imul
lcall
ljmp
push
repz
jg
repnz
stos
xor
sub
fwait
xchg
cmpsl
int
outsl
int3
out
into
sub
arpl
pop
aas
leave
or
rcrb
jecxz
pushf
das
mov
cwtl
sbb
jecxz
mov
outsl
sarl
cld
sbb
cld
sbb
add
insl
xor
mov
fwait
push
mov
cmp
loope
daa
inc
and
xor
fwait
and
fimull
loopne
movsb
inc
cmp
stos
sbb
fmul
push
xchg
xor
data16
mov
jp
lahf
sbb
mov
xchg
addb
ljmp
mov
pop
sbb
in
arpl
xchg
or
fdivrl
cmp
xor
jnp
pop
out
adc
lahf
fstpt
cwtl
push
idiv
js
or
push
cmp
xchg
inc
mov
cmp
or
out
pop
or
sub
add
jnp
ds
xor
nop
jge
pop
and
int
xchg
gs
mov
in
fsts
lods
jle
std
xor
das
dec
sub
pop
or
add
pop
add
sbb
lret
mov
rcll
mov
push
in
jl
shr
mov
leave
movsl
add
fmul
inc
push
sti
movsl
sti
push
xor
aad
shll
mov
jno
jmp
jle
or
jge
jne
in
into
test
cmpsl
inc
cltd
aaa
sub
add
outsb
or
dec
jnp
mov
leave
iret
adc
xor
pop
add
dec
xor
lret
mov
fsts
fstps
subl
cmp
iret
mov
mov
mov
mov
cs
iret
push
sahf
popa
mov
adc
cmp
add
jb
cltd
int
xchg
mov
shrl
add
jp
icebp
mov
and
xchg
mov
sbb
lret
icebp
std
mov
mov
add
mov
xchg
or
jbe
mov
push
jns
js
cmpsb
xchg
into
or
xor
fdiv
cmp
mov
ds
mov
rorl
adc
sti
sti
ret
leave
push
test
mov
adc
cltd
inc
cmp
jno
outsl
in
push
and
jmp
test
loop
fnstenv
popa
and
adc
push
fst
sbb
inc
scas
lock
leave
sub
lcall
mov
inc
daa
stos
cli
mov
scas
mov
sti
add
ljmp
add
inc
aas
sbb
out
pop
or
sbb
insb
push
inc
dec
lahf
idivb
jbe
adc
lret
jne
and
movsl
sbb
fbld
push
push
out
lahf
in
jp
imul
adc
dec
lods
sarb
ror
cmp
xorb
xchg
mov
sbb
mov
daa
dec
test
mov
dec
test
sahf
xchg
pusha
and
das
mov
pusha
test
push
pop
addr16
mov
outsl
mov
es
push
mov
or
xor
bound
sbb
fists
mov
xor
dec
dec
push
js
out
mov
inc
push
adc
pop
pop
popa
mov
leave
test
pop
iret
pop
push
push
mov
inc
dec
pop
dec
push
xchg
fsts
inc
rcll
jae
outsb
gs
jne
je
shll
sahf
stos
push
mov
adc
bound
jne
dec
test
pop
bound
dec
sub
xchg
imulb
pop
lret
add
xchg
mov
dec
push
into
jae
pushf
not
jmp
xchg
push
test
movsb
cmp
outsb
or
cmp
mov
mov
add
cwtl
add
shll
out
add
movsb
mov
scas
xlat
gs
movsl
test
ja
in
xor
adc
or
jne
adc
cld
adc
ljmp
out
push
loopne
xchg
cmp
push
xchg
pop
bound
rclb
ficomps
gs
mov
dec
inc
mov
notl
fwait
cmp
out
mov
mov
out
mov
jnp
sarb
cmp
push
xor
xchg
sub
stc
cmc
es
dec
lret
push
sub
mov
mov
in
jge
mov
call
push
pop
xchg
add
leave
shlb
jmp
out
test
nop
push
out
cmc
lods
add
aad
loopne
fadds
sub
sbb
sbb
dec
jecxz
fwait
call
inc
cli
dec
mulb
jle
lahf
das
sbb
ffreep
inc
flds
cmp
leave
mov
dec
jecxz
sbb
negb
hlt
shrb
cmp
or
out
icebp
mov
lcall
and
rclb
imul
xchg
sbb
mov
mov
mov
cmp
in
dec
push
cmp
inc
dec
imul
mov
paddusw
jmp
xchg
adc
test
mov
pop
push
ja
clc
xor
mov
cmp
cmpsb
lock
and
xor
xor
data16
xlat
mov
lods
nop
jle
adc
int
mov
sarl
xchg
sub
into
pop
jbe
testl
sbb
lds
shll
repnz
jno
lahf
adc
and
mov
outsb
movsl
loop
outsl
push
repnz
lcall
or
int3
js
dec
xor
cmp
outsl
shlb
shlb
mov
es
mov
bound
andb
test
fucom
loopne
jnp
sti
mov
sbb
dec
scas
aad
rorl
cmp
push
sbb
xchg
jg
sbb
inc
fisttpl
adc
nop
dec
sub
mov
hlt
shrl
add
in
and
sbb
test
xchg
lock
test
out
push
test
sub
add
call
icebp
or
mov
andb
pop
xor
shrl
outsl
sub
negl
jle
dec
imul
mov
movsl
mov
jg
fdivrs
xchg
xor
jg
ss
fsts
into
or
rol
dec
mov
movsl
and
daa
mov
popf
and
add
jg
mov
ja
int
aad
mov
mov
loopne
jnp
out
jg
es
and
int3
adc
sub
cltd
pop
in
inc
cmp
jle
push
aas
gs
dec
xor
xor
dec
pusha
fmulp
xchg
jg
out
adc
adc
ljmp
shlb
mov
or
adc
add
out
jne
sar
insl
xor
pop
add
movsl
cmp
test
loopne
lods
push
jnp
and
mov
adc
ljmp
orl
inc
pusha
pop
shrl
clc
xchg
insl
lret
cmp
xchg
movsb
clc
insb
movsl
data16
cmpsb
je
xchg
jo
jae
mov
cmc
enter
test
and
dec
and
jmp
xchg
and
adc
into
add
cmp
fmull
out
leave
jp
ljmp
das
add
movsl
xchg
addr16
jl
jmp
and
pop
test
xchg
xchg
out
data16
and
jne
repz
or
xorl
aam
mov
and
xor
fstps
add
insl
cld
test
mov
add
testl
xor
adc
push
bound
adc
arpl
mov
and
imul
add
inc
dec
out
cwtl
jne
mov
lret
sub
and
pop
out
cmp
movsl
add
xlat
and
sbb
rcrb
pop
cmpxchg
dec
sub
sbb
ficoms
je
pop
jae,pn
xor
cld
jg
inc
outsl
mov
xorb
or
pop
xchg
pop
movsl
xchg
fcomps
cmp
push
addr16
push
scas
sbb
sub
ror
aam
aaa
adc
xchg
hlt
loopne
pop
push
ja
int
jp
lret
fidivrl
ds
stos
push
push
arpl
loop
ss
sub
scas
jle
jmp
fidivl
adc
fs
and
das
sbb
lock
insb
fiaddl
jne
push
ljmp
push
mov
and
repnz
imul
or
loop
and
hlt
sub
mov
mov
xchg
lea
mov
stc
stos
fistpll
inc
dec
xor
ds
sarb
into
incb
loope
mov
mov
dec
add
adc
pop
test
jl
cmp
icebp
std
and
push
cmp
sbb
push
scas
xlat
cmpsb
sub
mov
std
movsl
add
test
mov
xchg
lea
cmp
sub
mov
mov
adc
jo
pop
mov
add
sub
and
outsb
repnz
sbb
inc
imul
fildll
fcmove
mov
add
pop
push
jle
icebp
mull
iret
jo
aaa
leave
cwtl
adc
ret
les
outsl
inc
mov
jns
xlat
pusha
or
les
mov
jmp
mov
mov
jnp
aas
mov
inc
inc
mov
aas
imul
cmp
inc
pop
into
out
inc
push
rcr
push
mov
out
xorb
fidivrs
cs
stos
cwtl
aas
jnp
mov
adc
or
jle
mov
int3
and
mov
pop
lds
mov
icebp
inc
pop
pop
xchg
xchg
fidivl
repz
divb
fwait
or
aam
fisubrl
fnsave
mov
adc
dec
dec
shlb
inc
pusha
bswap
int
fimull
mov
cld
frstor
jno
fistpll
nop
setle
sarl
jge
fistps
andb
jge
xorl
xor
xchg
add
lods
les
mov
jnp
lock
popa
inc
xchg
aam
mov
lods
adc
mov
sbb
pushf
loopne
cmp
les
inc
mov
jle
test
das
mov
add
dec
jnp
divl
out
or
pusha
in
out
movsb
stos
jae
xor
adc
enter
cmp
xchg
mul
mov
iret
cmp
add
xorl
dec
mov
imulb
in
faddp
xchg
in
ja
daa
sti
xchg
jnp
dec
sbb
les
inc
mov
add
adc
mov
aam
pop
jnp
jmp
dec
lret
mov
jge
xchg
popf
or
xor
xchg
in
xchg
cmpb
into
aam
inc
fsts
inc
inc
js
loope
rcrb
js
stos
cmp
jb
hlt
clc
cltd
fsubrl
or
add
xchg
push
xchg
mov
data16
ja
mov
pop
dec
mov
dec
add
fnstcw
roll
repz
mov
dec
pop
rcr
pop
jbe
inc
repnz
rcrb
jmp
lret
inc
shlb
test
in
push
fdivs
pop
jge
or
les
ret
add
das
aaa
push
data16
sti
lret
je
inc
xlat
das
cmpb
int
mov
inc
cld
adc
mov
cli
mov
scas
push
lods
inc
pop
aad
sub
loopne
mov
jnp
xor
sarb
jecxz
das
movsl
jnp
push
cli
push
dec
sub
sbb
gs
push
sub
sti
xor
testb
push
add
mov
adc
popf
scas
adc
cwtl
sub
sub
sahf
mov
push
fldcw
push
and
es
les
sbb
dec
int3
pop
xor
mov
shl
mov
jmp
sub
fs
inc
int3
mov
jne
jl
jbe
mov
cmp
bound
xchg
mov
lret
mov
push
int3
rol
and
fdiv
imul
and
inc
xor
pop
mov
pop
push
out
loopne
pop
pop
xor
sti
cld
or
pop
shl
std
lcall
js
cwtl
mov
push
cmp
xchg
cmp
loope
sti
hlt
test
in
int
popf
stc
pop
fcmovne
clc
nop
mov
lds
loop
pop
mov
inc
stc
fimuls
aad
pushf
popa
data16
jbe
notb
lea
loop
or
xchg
mov
pop
jge
xor
jns
mov
mov
pop
sub
cmp
xor
push
nop
sbb
push
pop
mov
pop
fists
mov
push
xchg
mov
out
jnp
js
mov
pop
pop
mov
ja
sbb
loop
adc
shlb
cmpsl
pop
dec
lahf
mov
dec
stos
jl
mov
jle
gs
bound
lret
aaa
inc
test
push
repz
pop
jp
dec
icebp
lret
mov
fcoms
push
loop
xchg
in
xchg
or
push
sbb
mov
adc
add
push
cwtl
jg
sub
mov
fimull
pop
ror
pop
test
cmp
xchg
int3
sbb
and
leave
rolb
mov
loope
adc
mov
sti
cmp
sbb
lods
test
xor
aas
adc
cmp
adc
loop
decb
push
and
xchg
loop
les
push
arpl
stos
stos
das
call
add
xchg
xchg
dec
in
std
mov
popa
push
mov
xlat
cmc
out
aad
push
push
nop
mov
push
insb
jp
mov
in
fcmovnbe
add
jns
fldt
jnp
sub
cmp
clc
aas
shr
cmc
and
addr16
adc
push
sub
addb
inc
fmull
imulb
and
cwtl
fmul
int
ljmp
add
jle
pop
or
aas
jb
ljmp
lods
gs
jns
dec
loope
mov
outsb
into
scas
cltd
mov
sub
imul
pop
mov
es
push
add
xchg
dec
call
mov
ds
sarb
adc
adc
je
or
movsl
xchg
ret
push
arpl
mov
xchg
mov
jle
mov
cltd
add
and
jl
or
push
aad
or
push
aas
scas
fildl
xchg
lds
mov
rclb
sti
lods
shlb
cmpsb
mov
jne
femms
fcompl
cmc
add
push
inc
xchg
adc
mov
mov
mov
iret
iret
loopne
xchg
fistpll
mov
mov
test
or
scas
jb
sbb
pop
xchg
mov
jge
or
xor
and
ret
movsb
mov
sbb
sub
cmp
xchg
lods
insl
sbb
leave
shll
and
jmp
dec
sbb
sub
sub
xor
ret
lcall
test
inc
inc
inc
adc
in
jg
shll
sub
leave
or
adc
mov
xchg
jge
daa
adc
cld
adc
push
xor
pushf
pop
mov
sbb
pushf
addb
cmp
jne
push
pop
cmpsb
loopne
lahf
mov
add
in
mov
pop
call
add
sub
inc
cmp
jmp
daa
ja
pop
js
mov
cmpsl
or
out
in
sti
or
lret
jmp
xchg
test
jnp
add
mov
jnp
adc
sbb
aam
push
fs
or
subb
gs
inc
and
push
dec
cwtl
call
cwtl
jne
dec
mov
push
jnp
and
or
jg
push
cld
mov
xor
sti
test
jnp
loope
lods
push
xor
pop
pop
inc
add
repz
mov
mov
lock
pop
jecxz
and
adc
lds
imul
pop
add
sub
aaa
mov
movsb
out
push
inc
mov
gs
ss
or
pop
or
mov
bound
push
cli
movsl
sub
gs
and
int
out
adcl
cmpsb
sub
sbb
lods
jno
lcall
and
fcmovnu
or
fwait
mov
shl
cltd
hlt
fucomi
inc
push
test
sub
and
and
aaa
cld
sub
insb
notb
cmp
mov
out
mov
xor
xchg
packuswb
lds
gs
rcl
mov
pop
in
cmp
out
out
lds
es
adc
push
or
inc
cmp
jne
sbb
call
testb
fwait
jmp
arpl
pop
inc
inc
jns
and
hlt
push
popa
dec
and
push
cmp
into
repz
adc
scas
nop
cmpsb
dec
fstpt
mov
outsb
xor
std
push
cs
xchg
pushf
sbb
dec
sub
mov
or
mov
mov
pop
dec
mov
or
shlb
movsb
jp
push
shll
jae
mov
jle
ret
cmp
nop
adc
mov
fsts
xchg
loop
loop
test
jle
xor
popl
inc
inc
pop
dec
stos
or
fcoms
popf
insl
dec
xchg
xlat
mov
mov
dec
cwtl
shlb
call
ret
cmp
push
push
push
imulb
push
dec
repnz
dec
popf
sbb
dec
adc
divl
add
sbb
scas
ficomps
call
cmpsl
addl
mov
mov
dec
int3
cli
and
mov
xlat
push
sar
cmpsb
adc
sarl
lahf
jae
rcrb
cmp
jns
loope
sub
mov
sub
sub
sahf
loope
mov
addr16
mov
hlt
and
push
fistpl
mov
adc
push
movsb
lahf
imul
ret
xlat
das
pop
insb
cmc
pop
sbb
aam
inc
stos
jb
and
fsubp
fsubrp
and
mov
test
iret
pop
shll
dec
fucomip
test
xchg
jle
insb
popa
inc
sbb
cmpsl
fistpll
and
lds
sbb
shll
sub
movsb
sbb
pop
iret
adc
pop
xchg
sbb
inc
aad
mov
popa
sahf
pop
lahf
inc
call
aas
sti
inc
mov
dec
ret
rorb
mov
aad
lea
cmc
dec
or
mov
mov
push
ljmp
jmp
jb
lahf
aas
iret
xchg
jl
leave
xchg
loopne
iret
jbe
loop
nop
pop
imul
pop
lret
adc
sub
cmp
and
insl
mov
rcr
add
daa
repnz
adc
cmpsl
mov
cmp
call
jnp
test
adc
hlt
popf
mov
jl
pop
sbbl
and
pop
xchg
push
scas
mov
movsl
test
rclb
cmp
rcrl
aaa
mov
adc
movsw
ficompl
xchg
cmp
dec
lea
mov
popf
mov
mov
adc
pop
xor
add
push
aad
in
test
lret
xchg
xor
sub
out
test
call
adc
or
xor
cld
sub
add
jno
xchg
jb
mov
roll
pop
sarb
jne
pop
add
inc
push
cmp
mov
enter
jnp
lret
jo
jp
jnp
pop
push
in
sbb
mov
sub
aaa
push
mov
mov
sti
mov
xor
in
pushf
movsl
jecxz
mov
dec
jbe
das
add
xor
xchg
xchg
lret
cwtl
pop
iret
pop
loopne
filds
inc
notl
rcl
or
movsb
imul
jmp
mov
mov
in
xchg
inc
inc
cmpsb
pop
mov
and
pop
xlat
aaa
rorl
shl
gs
push
cltd
add
out
mov
fimull
roll
out
inc
shrb
into
inc
dec
je
dec
and
jle
xchg
mov
or
cmp
inc
push
movsb
out
andl
add
ret
pushf
mov
int
shrl
sbb
loope
adc
lea
jg
jle
sahf
and
sbb
xor
xchg
adc
sti
push
pop
pop
jl
je
xor
cmp
je
fistpll
cltd
and
push
bound
dec
pop
sbb
mov
pop
jmp
lods
dec
fstl
movsl
push
xchg
jl
adc
js
inc
push
push
call
dec
mov
push
inc
cwtl
push
cmc
jb
stos
or
or
cmp
add
xchg
inc
cmp
daa
add
mov
cltd
mov
push
scas
mov
push
shl
xchg
mov
mov
fisttpl
in
mov
sahf
jbe
mov
add
cmp
stc
inc
out
aam
repz
fs
mov
xchg
push
movsb
xor
aad
or
adc
std
inc
aas
jmp
jmp
push
jecxz
mov
sub
mov
push
push
cmpsl
sub
push
xchg
inc
movsl
fldt
adc
fiaddl
and
dec
cs
fcmovb
add
sub
or
orb
jne
or
out
or
dec
xchg
stos
mov
insl
icebp
push
xor
pushf
mov
sbb
std
xchg
jnp
cwtl
cli
movsl
inc
mov
sub
mov
roll
and
mov
adc
dec
mov
xor
into
adc
dec
push
jge
push
fs
pop
push
repnz
mov
pop
pusha
push
mov
movsb
andl
nop
mov
aas
mov
out
dec
jge
cmc
mov
mov
movsb
add
ret
leave
mov
add
xchg
call
dec
clc
xchg
les
cmp
sahf
sbb
dec
lret
inc
shlb
fmuls
in
popf
sti
mov
cmpsl
and
and
movsl
and
aaa
lret
mov
xor
fildl
roll
in
faddl
sub
jbe
xor
daa
js
add
jno
push
jnp
dec
xlat
fildl
and
mov
scas
ret
test
out
pop
or
jmp
mov
pop
lret
pop
mov
lea
and
int
movsb
rcrl
fistl
icebp
adc
pop
jg
adc
enter
ja
mov
insb
ret
pop
testl
daa
adc
fimuls
ja
mov
jle
or
out
divl
mov
fldenv
mov
push
into
push
shlb
pop
mov
loope
add
pushf
add
jne
and
sub
add
sbb
xlat
and
jns
inc
mov
test
pop
jae
inc
xor
push
out
popa
add
ljmp
das
shll
jp
aas
stos
sub
stos
test
inc
jb
sub
popf
jmp
andl
push
lods
fs
enter
inc
lcall
xchg
pusha
lods
out
pop
add
into
mov
inc
xchg
jp
or
fwait
mov
lock
in
or
es
cmp
pop
mov
xchg
xchg
push
pop
out
jmp
rclb
aaa
mov
adc
jmp
mov
shll
call
xchg
mov
ja
iret
cmpsl
ljmp
add
mov
insl
adc
pop
dec
xor
ret
lds
fcomi
addr16
jle
loop
and
jg
test
scas
xor
shlb
sbb
inc
mov
arpl
jl
sub
mov
flds
fdivr
jae
icebp
and
out
pop
pop
pop
dec
inc
in
push
dec
xchg
dec
add
sub
std
adc
or
adc
cld
xlat
invd
sub
dec
subl
xor
pop
add
mov
outsb
out
xorl
call
mov
scas
mov
andl
dec
nop
out
or
pop
add
xor
mov
xchg
adc
mov
sbb
addr16
mov
ret
sti
add
mov
shrb
out
inc
dec
and
inc
xchg
jl
adc
xchg
clc
push
mov
fsubl
test
xchg
jo
or
cmpsl
int
fidivrl
sub
pop
bnd
push
jo
jae
clc
fcoml
and
fdivp
and
insb
inc
out
mov
shrb
fistl
pop
sbb
fwait
leave
out
push
mov
mov
faddp
push
dec
jo
lret
jle
and
dec
int
decb
push
mov
pop
adc
sbbb
repz
or
pop
addb
pop
test
icebp
mov
dec
cmp
dec
jle
loop
jg
sbb
sbbl
cltd
push
loope
adc
push
insb
or
into
jl
or
aaa
je
in
push
mov
cmc
imul
iret
int3
xchg
sbb
add
int
xchg
mov
mov
shll
add
sbb
jbe
cltd
sbb
sub
pushf
jb
mov
mov
inc
xchg
xchg
aad
cmp
repz
lods
sbb
xor
lea
popf
xchg
mov
mov
mov
mov
adc
notb
inc
xchg
cmp
mov
inc
push
inc
lahf
jl
addl
mov
dec
cmp
enter
test
iret
aas
and
mov
cwtl
nop
fincstp
lods
adc
xchg
int3
mov
mov
mov
mov
sub
pushl
push
ficoml
scas
mov
mov
fimuls
sbb
lods
fisubs
add
addr16
dec
sti
shlb
push
xchg
lcall
mov
xchg
inc
jmp
stos
mov
inc
out
in
mov
lcall
aam
stos
stos
mov
daa
aad
pusha
outsb
cmpxchg
ss
xor
sub
dec
jno
lds
cli
jo
mov
jns
xchg
add
cmpsl
popa
and
ss
aas
iret
adc
sub
jns
mov
hlt
mov
aad
pop
imul
lcall
and
add
mov
das
dec
cld
stos
subb
dec
insb
lret
loope
imul
or
or
adc
dec
adc
cld
push
add
clc
dec
xor
ss
test
lcall
push
leave
fstpl
push
dec
push
xor
nop
push
or
xor
xor
insb
inc
mov
pop
clc
mov
int
lods
xchg
adc
xchg
pop
mov
je
or
mov
inc
imul
pop
loopne
andl
scas
sub
jmp
or
cmp
push
fnstcw
mov
scas
xlat
std
pop
ficoml
stos
pop
scas
pop
add
push
cld
iret
fbld
lea
daa
or
fdivrs
pop
fists
lret
or
sub
xchg
dec
dec
lods
iret
jp
mov
sahf
jbe
cmp
lea
imul
jge
in
push
cmpsl
subl
mov
mov
ljmp
mov
cld
imul
jg
mov
int3
in
inc
xchg
stos
aaa
std
inc
push
sub
mov
repz
lret
jl
cmp
cmp
bound
gs
sti
das
mov
push
cmpl
mov
rcrb
push
add
push
jmp
stos
in
ret
and
cmp
pusha
cld
dec
inc
cs
ret
pop
fisttps
jmp
add
cltd
add
push
mov
jns
frstor
mov
mov
xor
sub
ret
mov
test
jne
sub
push
xor
dec
arpl
sbb
xchg
mov
fdivs
data16
cmp
push
ds
dec
xor
shrb
cvtps2pi
or
rorl
pop
inc
jmp
pop
mov
sub
sub
inc
scas
in
cmpsl
pop
ja
movsb
imul
outsb
popa
in
cltd
inc
sub
insl
inc
arpl
cmpsl
aad
movsl
mov
adc
cli
imul
add
nop
in
loopne
push
or
jnp
sahf
sbb
inc
sbb
decl
lcall
cli
out
push
insl
insl
jne
ja
push
cmpsl
fisubrs
adc
or
mov
shl
jecxz
je
dec
lret
cld
loopne
ss
push
xchg
inc
sub
rcrb
icebp
ljmp
ds
pushf
mov
sub
cmp
cvtpi2ps
push
fs
shl
jnp
mov
in
in
dec
pop
stc
mov
lcall
mov
jecxz
std
jecxz
lods
daa
ja
lods
cltd
pop
cli
add
mov
repz
cmpsl
cld
lret
add
jge
jp
xchg
xchg
and
cmpsb
repz
ljmp
mov
ss
jne
or
pop
orb
icebp
cwtl
fstps
daa
pop
fs
and
in
dec
jb
add
cmc
fcmovu
imul
push
jge
bound
test
movsl
push
mov
xchg
ds
add
xor
or
clc
sbb
out
pusha
adc
lods
push
cmc
fdivr
aad
xor
push
in
sbb
gs
pop
or
or
mov
mov
ficoms
imull
das
and
loopne
xorb
jmp
leave
xchg
jle
call
leave
xor
cmp
xchg
jno
pop
adc
cwtl
cltd
rorb
shll
lret
outsl
sbb
cmpsb
pop
icebp
xor
xor
mov
int3
cs
inc
bswap
xchg
xor
dec
or
jb
loope
inc
aam
fbstp
sahf
sbb
inc
test
inc
cltd
lcall
pop
dec
int
sub
xor
pusha
jmp
mov
outsl
cmp
mov
jno
xlat
rol
das
nop
and
jnp
add
aad
mov
scas
mov
test
out
lahf
ret
push
push
repnz
aad
insl
sub
rcrl
orl
imul
sub
jecxz
cli
outsl
sbb
or
paddw
int
orl
lret
popa
and
out
ret
push
xchg
outsl
inc
aam
hlt
repz
jg
leave
sahf
jg
ljmp
sbb
xchg
inc
jbe
mov
jne
loope
fisubrl
mov
inc
fists
cmp
cld
mov
pop
insb
mov
cli
fstpt
mov
mov
xor
sbbb
jb
mov
addr16
push
jecxz
aam
fldl
movsb
enter
sti
mov
add
test
pusha
scas
div
jns
jmp
cmp
sub
sbb
test
mov
sbb
divl
push
mov
ds
lods
add
outsb
lret
xor
rcrb
add
ret
push
test
orb
xchg
mov
mov
cli
add
mov
in
sub
cmp
daa
pop
lds
xor
sub
rorb
mov
or
shrb
shrl
clc
jno
cwtl
mov
and
mov
ja
sbb
rolb
cld
jne
mov
fwait
pushf
pop
lret
inc
xor
data16
aam
out
leave
adc
es
inc
jns
orl
pusha
mov
je
add
adc
sub
cvtpi2ps
mov
add
jnp
repnz
pop
sbb
sbb
inc
push
cmp
xor
cmp
mov
sbbb
shrd
in
cld
lds
cli
arpl
xor
mov
outsl
int3
fucompp
movsb
fcompl
xor
maxps
insb
and
jp
mov
in
mov
movsl
sub
inc
mov
cmpsl
or
data16
jo
mov
repnz
scas
mov
add
jl
inc
loop
xchg
pop
add
loopne
insb
or
dec
ja
cmp
inc
movsl
xchg
xchg
out
andb
pop
cmpsb
and
fnstcw
js
mov
xchg
pop
or
cltd
jno
push
add
mov
inc
dec
inc
pop
jmp
ds
in
in
mov
mov
jo
add
or
sbb
pop
in
mov
mov
add
cmc
pop
int
movsb
inc
pop
inc
add
mov
pop
and
jmp
into
lods
fs
sub
or
sbb
xchg
cmpsb
pop
dec
adc
and
js
lret
mov
and
inc
fldt
fcmovnb
or
add
inc
lods
or
mov
and
or
push
inc
xchg
arpl
cmp
fs
and
push
pop
in
gs
lods
jbe
repz
icebp
rcrb
cmp
adc
lfs
outsb
adc
and
sub
je
pushf
out
stos
stc
xor
in
push
mov
sbb
jecxz
mov
jmp
cmpsb
and
pop
mov
out
enter
cmp
ljmp
loopne
mov
and
imul
push
lock
push
xor
add
dec
sahf
jnp
cmp
pop
out
dec
add
dec
mov
stos
jns
jno
pop
shlb
and
xor
dec
cltd
fbld
lret
add
pop
add
ss
gs
sti
dec
add
iret
ja
lds
adc
mov
je
sbb
inc
inc
out
lea
dec
orb
xor
sti
add
loope
loopne
pop
push
daa
pop
xor
push
movsl
mov
sub
lret
push
mov
and
sub
fidivs
lea
sbbb
sbb
xchg
push
test
shr
sbb
inc
lcall
mov
jmp
mov
add
add
mov
ror
stos
xor
ror
push
lret
and
inc
imul
rclb
push
jb
dec
sbb
stos
mov
notb
push
pop
lret
fnstcw
mov
sbb
push
ds
gs
in
xchg
mov
mov
and
jmp
pop
andl
and
popf
add
imul
jo
mov
repz
and
jns
bound
pop
pop
push
push
and
mov
sub
jle
push
mov
or
jp
ret
push
addr16
mov
jb
ds
cmp
aaa
or
push
stc
dec
jbe
or
mov
pop
push
dec
out
jl
lcall
push
out
pop
or
jnp
dec
out
lea
pop
sbb
push
fisttpl
outsb
sbb
mov
push
mov
into
add
or
roll
xor
sub
add
jg
pusha
out
fiaddl
fs
push
and
xor
sbb
jecxz
scas
fs
pop
mov
jl
dec
sub
test
jb
in
out
ror
lock
dec
jp
jns
sub
mov
dec
and
pop
stos
mov
scas
xor
sbb
inc
pop
cmpsb
rorl
les
leave
sarb
loop
jmp
push
pop
aam
dec
and
enter
pop
test
pushl
sub
xchg
div
add
xchg
sub
or
inc
add
lds
test
int3
mov
sub
xor
push
jl
ljmp
xchg
and
and
js
arpl
ficomps
aaa
andl
xchg
cmpsb
rclb
iret
pop
mov
das
push
adc
cmp
orl
mov
fxch
fsts
sub
inc
loopne
aaa
mov
call
out
push
mov
mov
aaa
leave
push
fstpl
cld
cmp
std
push
mov
std
movsb
sbb
or
movsb
push
or
mov
sub
cmp
shll
jp
mov
inc
and
push
in
mov
daa
mov
fisttps
rcrb
gs
rcrl
imul
inc
mov
loope
shll
ljmp
cmp
in
xor
pop
in
bound
pop
sbb
ss
adc
xchg
in
add
inc
arpl
dec
jl
jnp
mov
cmp
mov
adc
add
push
dec
mov
test
out
dec
js
adc
xchg
popf
jno
fwait
das
stos
xchg
iret
cli
aam
cli
dec
lods
cmp
lret
push
cmp
mov
and
push
xor
add
xor
and
stos
lea
jecxz
cmpl
dec
in
dec
cmp
clc
push
inc
stc
cmp
sbb
jle
inc
xchg
add
pop
stc
int
xor
push
aaa
aam
or
adc
add
data16
sbb
jns
jb
push
in
cmp
xchg
loope
inc
pop
orb
xor
out
ljmp
cltd
imul
jl
addr16
lahf
test
dec
rcl
and
push
imulb
lcall
dec
push
xchg
orl
mov
mov
push
xchg
adc
ja
loop
lods
cltd
jns
sbbl
setae
and
ja
andl
stc
out
mov
cmpsb
int3
push
and
je
mov
xchg
jp
lods
or
test
sar
cmc
pop
ds
ret
shlb
je
movsb
push
push
adc
push
or
xor
push
jg
sub
out
mov
add
cmpsl
sbb
in
test
xor
nop
out
insl
inc
mov
stos
rolb
push
je
and
mov
shll
into
mov
inc
xlat
adc
xchg
adc
stc
jecxz
jne
addr16
ss
es
outsl
clc
jl
mov
push
sub
push
cwtl
cmp
test
loope
fdivr
popa
movsl
dec
enter
enter
add
inc
int
xchg
daa
ret
adc
push
or
out
out
rcrb
sub
cmpsb
stc
xchg
push
jb
imul
outsl
stos
push
in
leave
inc
std
insb
xor
inc
and
xor
cmp
sbb
out
ds
cwtl
adc
cmp
jmp
xchg
mov
push
pop
les
cmp
ret
stos
ljmp
push
arpl
sbb
add
jmp
pusha
pusha
stc
sbb
scas
gs
add
adc
jns
gs
test
outsl
in
push
xorl
or
xchg
scas
lock
mov
dec
jns
test
arpl
and
sarb
mov
rorl
fsub
test
mov
fbld
fs
cmpsb
dec
mov
push
dec
xchg
pop
and
popa
mov
scas
cmovnp
inc
or
pop
push
cmp
dec
insl
cmp
stos
cmp
incb
jb
jmp
mov
iret
mov
fucomip
rcrb
xor
cmp
aad
cld
and
inc
push
sarb
jecxz
jne
shrb
add
test
sbb
dec
mov
subb
pop
add
iret
in
nop
mov
bound
dec
sarb
add
adc
mov
insl
mov
addr16
loop
inc
adc
jge
sub
add
sub
out
xlat
mov
stc
aaa
adcl
andb
mov
fcompl
and
add
lods
ret
clc
sbb
dec
scas
mov
mov
ss
subb
mov
jmp
pop
shrl
shrl
dec
lret
or
mov
out
push
cmpsb
out
mov
outsb
sbb
sahf
mov
jmp
sbb
xchg
jmp
jno
fs
fistpll
cmpsl
adc
je
xchg
mov
xchg
jnp
bound
xor
pop
loopne
xchg
adc
xchg
push
pop
jl
sub
rcrb
xlat
mov
nop
add
mov
pop
ja
pop
ret
mov
or
sbb
xor
xor
xor
sub
lods
das
ds
cmp
dec
dec
stc
mov
sub
or
pop
pusha
push
ret
mov
popf
jb
mov
xor
dec
fldcw
insb
push
outsb
mov
jg
jle
imul
and
cmpsl
stc
or
jnp
push
fs
test
fisttps
xor
pop
pop
push
xor
aam
jmp
push
inc
shll
cmp
mov
sbb
inc
add
mov
fldt
test
dec
dec
pop
and
in
inc
push
adc
incb
cld
popf
leave
loopne
ret
loope
inc
inc
pushf
lret
push
cwtl
xchg
test
mov
fcomip
enter
sbbl
sub
in
mulb
pop
mov
mov
jp
loopne
push
xchg
sub
jmp
inc
push
sti
lods
jne
adc
lods
stos
icebp
sub
call
pop
push
pop
jmp
mov
push
scas
out
inc
inc
lcall
pop
mov
push
pushf
xchg
sahf
xor
sbb
xchg
repnz
dec
push
mov
test
or
mov
push
outsb
std
int3
scas
mov
cmpsb
inc
loopew
out
inc
std
enter
inc
pop
js
xchg
scas
das
lahf
hlt
pop
inc
fcomps
aas
loopne
call
mov
sbb
or
mov
pop
popf
in
adcl
ficomps
xlat
punpckhdq
cld
test
mov
adc
inc
push
or
mov
push
and
into
lret
out
inc
sub
aad
dec
cld
sbb
fs
push
cmp
or
xlat
cltd
jns
mov
sub
imul
and
add
and
push
outsb
and
int
outsb
jge
mov
loopne
sbb
rclb
divb
lcall
daa
out
jbe
inc
out
jno
cmpsb
push
aaa
popf
jns
pop
aam
push
jge
int3
shlb
mov
mov
andb
mov
mov
sub
add
stos
jnp
xchg
cltd
out
cmp
lcall
jo
enter
push
push
inc
push
ja
stc
mov
add
push
popa
cmp
push
in
je
and
xchg
ss
inc
lret
mov
xchg
mov
std
lock
inc
mov
arpl
mov
mov
dec
in
or
jb
xor
add
cmp
xchg
mov
jmp
shlb
ljmp
movsl
push
xchg
sub
xor
add
test
les
push
jbe
sarl
or
or
or
lret
mov
mov
xchg
sub
movsl
or
fsubrs
sbb
jb
xchg
or
inc
sbb
dec
mov
imul
sub
sub
mov
inc
daa
mov
data16
and
arpl
pop
je
inc
add
cmp
cmp
rol
xor
into
add
and
movsb
pop
adc
jno
movsl
cmpsb
popf
mov
and
addr16
sbb
popa
stc
cmp
jmp
fucomi
adc
daa
movsl
inc
adc
out
push
sbb
add
scas
add
cmp
sub
fadd
and
mov
xor
jmp
xor
jbe
push
in
sub
gs
adc
mov
shlb
in
repnz
and
xchg
fcomip
loopne
pusha
sub
fcmovbe
xchg
aad
sahf
data16
mov
test
xlat
mov
jge
inc
js
nop
cs
push
out
rorl
imul
ss
mov
jns
lods
cwtl
push
movsb
adcb
call
xchg
mov
sub
sbb
pushf
fldt
mov
outsb
lcall
dec
or
mov
mov
push
fisttpl
aam
dec
repz
out
lahf
cs
add
mov
dec
mov
pop
lahf
or
sub
pusha
xchg
cwtl
and
mov
xchg
aas
dec
mov
scas
idivb
sarb
pop
xor
cmp
out
add
push
push
shll
repnz
cmp
xor
scas
lret
pusha
lea
jbe
jns
push
movsb
xchg
mov
mov
insb
outsb
pop
or
adc
push
std
mov
out
xor
jecxz
xlat
clc
pop
gs
ret
sub
dec
arpl
test
out
mov
cwtl
adc
arpl
and
ret
sbb
rcll
loopne
mov
outsl
push
ja
outsb
xor
jp
mov
lods
jl
jp
jb
ja
ss
mov
scas
mov
fildll
jle
mov
testb
fiadds
jnp
jg
into
pop
pop
adc
aas
jne
sub
jno
not
sbb
mov
gs
sarb
xchg
jmp
sub
cmp
jp
popa
ljmp
mov
in
popl
lret
sbb
xchg
xchg
aad
inc
scas
jns
xchg
mov
call
sbb
lea
ds
xor
std
mov
popa
pop
aam
outsl
bound
push
shlb
push
add
pop
pop
shlb
or
jbe
call
push
mov
das
cmpsl
pop
sbb
jbe
ret
sti
mov
push
push
add
sahf
mov
int
negb
bound
loop
call
hlt
outsl
mov
out
pop
push
out
pop
add
jl
add
mov
mov
subb
adc
mov
jnp
daa
sub
mov
add
cmp
mov
jb
pusha
mov
or
mov
push
add
sbb
cmpb
pop
addr16
jecxz
pop
stos
cmpb
adc
push
test
leave
sub
and
addr16
push
pop
rcl
mov
inc
xchg
inc
xchg
push
fimull
enter
rorb
loope
adc
ja
mov
pop
insb
mov
and
addr16
test
cmovo
mov
xor
mov
insb
mov
jae
xchg
inc
fistpl
out
lcall
xor
fcoml
icebp
lret
lds
sbb
mov
mov
inc
lods
outsl
movsl
mov
adc
daa
imul
add
mov
push
adc
mov
rol
sbb
out
adc
lock
in
lret
add
sbb
bound
mov
and
mov
pop
sbb
push
jnp
lods
xchg
cmc
mov
sbb
ficoml
jmp
test
imul
mov
xlat
nop
mov
mov
push
les
adc
test
out
insl
mov
mov
insb
dec
xchg
sbb
dec
jb
push
outsl
fwait
imul
adc
arpl
push
scas
int
clc
pop
push
neg
mov
or
sub
mov
sbb
rolb
inc
idivl
jg
jno
in
inc
pop
dec
jmp
pusha
xchg
test
cmp
inc
insl
push
es
loope
cld
pop
outsb
fcmovu
mov
cmp
pop
mov
mov
loopne
loopne
jnp
mov
xchg
fs
jecxz
xchg
sbb
mov
aam
sub
pop
add
adc
lods
sub
data16
adc
inc
inc
outsl
std
shl
and
jge
jb
test
sub
rcr
mov
out
test
and
add
mov
leave
cmc
push
push
push
pop
sub
fwait
xlat
imul
outsb
xor
out
stos
add
ret
and
das
daa
repz
bound
and
hlt
mov
push
ficoms
pop
loop
pop
push
lahf
pop
pop
cmp
inc
int
adc
sub
pop
mov
outsb
in
or
scas
insl
adc
mov
xchg
or
sbb
adc
getsec
scas
jbe
and
mov
and
insl
sbb
popa
and
jnp
xor
out
adc
data16
mov
enter
mov
push
dec
pop
lds
fisubrs
sub
or
mov
cmpsl
jge
jg
xor
clc
adcb
and
lahf
sahf
loop
mov
sub
push
xor
dec
mov
push
xchg
dec
es
lods
mov
fiaddl
mov
bound
xchg
push
cltd
mov
adc
scas
cmp
lods
sub
sbb
xor
shr
cmp
pop
jmp
fldenv
outsb
jge
stos
sbb
dec
xchg
clc
inc
or
lcall
adc
ficompl
mov
push
xchg
push
ret
arpl
fstpl
movsl
out
mov
inc
aam
enter
push
sbb
sub
sub
mov
sbb
insb
hlt
or
int
or
cmp
mov
xchg
jne
mov
fisttps
xchg
sbb
mov
arpl
jb
lea
aad
cmp
les
mov
pop
shl
out
popf
jge
fldenv
mov
and
and
push
pop
cmpsl
and
and
shr
xchg
in
mov
sbb
pop
adc
push
mov
pop
fldenv
imul
les
mov
sub
cmc
push
pop
aam
decb
ds
cltd
jne
ja
lahf
xor
inc
daa
mov
fidivl
add
add
cmpsb
movsl
sub
mov
dec
add
divl
xchg
in
xor
int
dec
sbb
mov
imul
scas
pop
and
cs
insb
mov
add
sub
jle
push
loopne
out
imul
cmp
push
dec
clc
int
inc
stos
pop
mov
scas
mov
push
rolb
cmp
mov
cmp
repnz
pop
dec
int3
nop
cltd
mov
add
stos
out
rcll
loope
pop
in
outsl
mov
ljmp
insl
mov
cmpsl
or
daa
adc
into
stos
repnz
daa
insb
sbb
fsub
pop
mov
test
movsb
push
loop
cli
jb
jbe
sub
into
and
mov
push
xchg
in
sub
xchg
jmp
add
sub
test
ss
insl
testb
inc
mov
xchg
mov
jb
mov
jle
sbb
adc
cwtl
push
push
out
add
push
mov
fmull
fadds
pop
dec
lods
adc
mov
iret
jle
inc
insb
push
mov
pop
mov
cmp
hlt
cmp
popa
adc
pop
icebp
rcl
add
pop
cld
loop
and
push
enter
inc
add
xchg
test
jge
stc
dec
mov
movsb
pop
shll
mov
aam
jb
movsb
mov
cs
sbb
lcall
inc
test
inc
jnp
mov
cmp
pop
enter
xlat
aad
xor
std
in
mov
addr16
out
pop
adc
xor
dec
xor
sbb
push
je
lret
xor
cmc
je
aaa
insl
out
rorb
mov
xlat
adc
out
repnz
lods
mov
data16
dec
pop
sub
mov
push
sub
mov
jns
sti
cmp
inc
mov
add
in
jbe
std
shlb
push
retw
cltd
push
mov
cs
and
movsl
xor
aad
add
popa
scas
sbb
daa
divl
sub
and
xorl
bound
jmp
nop
mov
push
popa
enter
rorb
out
adc
sbb
ja
loope
jl
push
in
lods
inc
pushf
out
sub
jp
sti
sbb
and
xchg
push
jg
sbbb
add
imul
das
mov
pop
jp
lods
in
out
lods
out
imul
mov
fs
psubb
cmpsb
add
dec
xchg
mov
xlat
syscall
mov
insb
insl
les
xchg
inc
clc
shl
ja
push
adc
lcall
adc
dec
push
sahf
ljmp
inc
pop
shll
adc
ffree
jae
cmpsb
and
jge
out
inc
test
cltd
pop
fcoms
sub
or
push
xchg
mov
pop
rcrl
pop
sti
jns
lds
push
mov
jne
jecxz
sub
inc
insb
xchg
xchg
sub
xchg
shr
add
dec
js
movsl
scas
sub
mov
pop
or
int3
out
or
mov
insl
lds
repnz
pop
mov
cmp
xchg
mov
into
cmp
aas
movsb
lea
lds
jmp
mov
lret
sahf
in
stos
pop
pushf
jbe
test
nop
iret
cmp
mov
fsubs
sbb
push
aaa
sti
sbb
fildl
xchg
push
push
mov
and
movsl
dec
shlb
inc
push
mov
and
pop
pslld
jbe
mov
add
dec
arpl
push
pop
das
pop
sbb
mov
arpl
leave
adc
mov
inc
loop
arpl
jg
jge
leave
push
in
sbbl
js
xchg
xchg
rcl
mov
sub
xor
into
icebp
js
movsb
xlat
sbb
outsb
push
repnz
fisubrs
ror
lret
inc
or
les
mov
jno
sbb
fnstsw
xchg
pop
movsl
inc
mov
lock
lods
in
pop
mov
sub
fildl
push
popf
sbb
xchg
or
pusha
lods
push
cmpsl
test
and
push
fisubrs
out
cmpsb
fistl
or
cltd
inc
addl
mov
mov
xchg
mov
pop
icebp
incb
and
flds
clc
idivb
push
test
subl
cmp
adc
push
rcl
mov
sbb
imul
lods
shrl
dec
lods
fsubs
xchg
jle
sbb
imul
add
pop
and
cmp
lret
cmpl
pop
addr16
dec
out
cli
into
xor
rcll
addr16
popa
add
lcall
popa
jmp
outsb
push
xchg
leave
cwtl
aad
jnp
mov
cmp
movl
fwait
iret
inc
sti
in
sbb
or
fisttps
dec
in
jl
fisubrs
cmp
arpl
jg
setge
push
outsb
iret
jae
add
lods
jmp
mov
int3
gs
in
add
xor
or
mov
outsb
cli
pop
std
xlat
jmp
outsb
mov
imul
es
inc
pop
and
jecxz
xchg
jle
sti
int
gs
enter
or
push
lcall
dec
push
lock
test
push
das
addr16
cmpsl
insb
cmp
rolb
mov
push
sbb
movsb
in
test
mov
or
or
clc
push
movsb
inc
jge
jl
lret
jl
cmc
push
cmp
repz
js
push
ret
dec
out
andb
lret
fsubrl
sub
inc
and
loopne
lods
add
cmp
mov
popf
and
mov
or
sbb
bound
mov
lods
repz
int3
mov
pop
fs
push
cmp
mov
inc
push
lcall
dec
test
hlt
add
js
in
mov
jb
push
aad
cli
fsubrl
bound
mov
lret
in
xorl
sahf
mov
ljmp
add
push
in
mov
pop
xchg
sbb
push
mov
cs
lods
std
push
flds
sub
iret
rolb
into
pop
xor
ja
ffree
push
xor
xchg
in
push
and
std
mov
test
fs
mov
test
stos
insb
imul
flds
lcall
pop
mov
call
rcrb
in
cmpl
sahf
sub
rcrb
ror
dec
xor
push
push
dec
mov
aaa
jns
mulb
sub
dec
lcall
mov
insl
aas
xor
adc
push
push
sbbl
sub
push
mov
sub
mov
das
popa
jl
sub
incl
xchg
mov
insl
idivb
push
jne
bound
cmp
in
mov
in
rorb
pop
mov
das
ret
or
cmp
xlat
mov
sub
adc
shlb
jo
pop
dec
xorl
repnz
cmp
enter
or
sub
xor
pop
fs
push
sbb
and
jae
rorb
mov
inc
mov
jns
push
stc
insl
dec
sbb
inc
jae
std
dec
adc
dec
out
xor
scas
mov
stos
cmp
pop
in
xchg
inc
jne
push
pop
sti
testl
test
xchg
in
add
inc
pop
and
jl
pop
subb
mov
les
adc
push
mov
imulb
sub
scas
rol
cmc
js
sub
push
or
lcall
scas
fistl
adc
adc
rcrl
mov
shrb
xor
jbe
or
dec
enter
loope
mov
pop
js
pop
aad
lods
xor
daa
push
xor
shlb
add
push
cs
jecxz
push
out
fcomps
adc
in
imul
mov
les
push
adc
pop
lcall
xor
imul
jmp
adc
inc
pop
cmp
pop
jo
push
cmp
test
sbb
notl
test
jp
aam
lock
mov
insb
test
movsl
sbbb
xor
sbb
mov
mov
cld
jns
ss
clc
movsb
dec
jecxz
jbe
ds
inc
aam
mov
push
xchg
dec
lea
jo
sbb
push
push
inc
add
ror
leave
mov
xor
push
fdivrs
xchg
mov
fnstenv
inc
cmp
rorl
xchg
cmpsb
and
scas
lock
add
sti
push
pop
or
and
aas
push
jecxz
imul
and
bound
lods
jo
call
repnz
test
enter
pop
add
xor
std
add
insb
add
xchg
push
jne
addl
mov
js
test
test
mov
addr16
dec
negb
out
adc
jge
pop
adc
lods
pop
sbb
pop
clc
dec
pop
je
sbb
out
sbb
xchg
inc
jl
xor
out
testl
std
dec
test
inc
loope
lahf
xlat
adc
cmp
push
pusha
add
mov
jno
lret
outsl
inc
sbb
sti
fistps
or
out
pop
dec
orb
push
dec
push
add
mov
cwtl
sub
xlat
addr16
cmp
repnz
jnp
cli
cmp
dec
js
cmp
stos
testl
cld
adc
jns
jno
adc
ja
je
lcall
insb
cmp
mov
fistpll
test
loope
jp
ljmp
insl
mov
inc
clc
push
push
ror
jbe
insl
les
or
dec
test
mov
sbb
mov
repz
adc
mov
stc
cmpsl
rol
fstps
push
bound
not
lea
mov
sbb
cmp
and
into
stc
cltd
js
push
hlt
sbb
aam
in
adc
out
jg
and
sti
adcb
push
enter
cmp
push
cmp
add
mov
sbb
or
fldcw
iret
or
leave
std
icebp
jge
push
mov
mov
jne
sub
icebp
aaa
push
cli
xchg
fildl
pop
push
int
mov
and
movsb
or
mov
mov
lea
mov
loopne
mov
mov
subl
push
sub
lcall
cli
das
adc
in
sub
jne
jno
sub
mov
push
jl
mov
daa
adc
in
int
inc
dec
xor
gs
shll
pusha
mov
mov
sub
xor
movb
loopne
dec
orl
jns
pop
repnz
setl
imul
push
lahf
jl
arpl
loop
insl
fsub
lds
fs
jmp
pop
test
or
jp
or
gs
jp
cmc
fsts
push
and
out
xor
jl
mov
cmp
push
lods
push
rcrl
adc
push
sub
adc
push
xchg
aas
mov
cmpsl
hlt
aaa
cmp
pop
xor
outsb
loop
mov
mov
mov
movsl
cmp
in
fisubl
jae
call
mov
cmp
or
add
loopne
ja
in
mov
es
jo
divb
xchg
pop
jb
or
sub
and
test
ret
pop
out
push
aas
xor
jp
jae
push
cli
dec
adc
cmp
lods
popa
fsubl
out
loopne
mov
ret
sub
sub
mov
xchg
push
xchg
or
xor
dec
out
mov
data16
nop
imul
in
pop
pop
std
lret
xchg
adc
pushf
inc
addl
and
int3
imul
decb
xchg
arpl
pusha
in
roll
test
nop
mov
call
repz
dec
push
jl
xchg
xor
leave
or
xorb
lock
out
es
repnz
xlat
pop
jmp
pushf
adc
mov
add
dec
add
jbe
icebp
sahf
dec
mov
pop
jbe
mov
sub
mov
jp
in
movsb
test
pop
mov
or
and
jo
das
inc
ljmp
gs
les
push
mov
and
out
dec
cli
dec
mov
sbb
rcll
dec
data16
xchg
outsb
fiaddl
xchg
adc
ja
pcmpeqd
lret
lock
inc
cmp
xchg
clc
mov
ret
in
stc
mov
mov
xchg
scas
repz
scas
push
mov
lds
dec
pop
push
push
push
ds
pop
adcl
and
sti
shrl
mov
scas
mov
pop
sub
je
enter
inc
mov
mov
cmp
or
decl
cmpsl
and
orl
fwait
je
adc
push
mov
pop
outsl
mov
out
pushw
lret
jle
mov
ret
dec
scas
daa
xchg
in
loop
daa
fmull
adc
lods
test
inc
mov
test
xchg
lods
push
sarb
sahf
pop
aad
fisubrl
test
add
add
or
xor
or
pop
aas
mov
cld
xor
icebp
sbb
and
cltd
and
rcll
push
loop
adc
add
test
adcl
mov
das
jne
call
ret
inc
ljmp
xchg
sbb
ficoml
mov
sbb
mov
pop
jmp
xlat
rcrl
test
stos
punpcklwd
jl
xchg
sbb
sahf
xchg
fwait
mov
bound
adc
sub
das
xor
js
mov
xchg
popf
xchg
stos
pop
cwtl
fstps
sub
in
out
fsubs
hlt
and
ror
loop
das
in
fnsave
lret
jae
sahf
mov
mov
shrl
mov
and
imul
pop
arpl
je
addr16
loope
lret
int3
cmpl
xor
jecxz
stc
int
mov
cltd
cwtl
sbb
dec
lret
scas
enter
push
leave
jnp
dec
lret
xchg
inc
vpxor
imul
aam
mull
adc
inc
dec
loopne
loope
push
je
dec
outsb
add
xchg
mov
mov
or
sub
mov
movsb
adc
lret
sbb
imul
push
xchg
cmp
lods
dec
sub
shll
lcall
bound
mov
dec
sub
scas
mov
test
icebp
sbb
frstor
outsb
dec
jg
jno
dec
stos
repz
les
test
add
push
mov
test
ljmp
sub
shll
xchg
sub
sbb
cmp
mov
jb
push
dec
mov
jns
inc
fmull
sbb
fnstsw
fstpl
sub
push
nop
jp
pop
stc
xor
xchg
jp
ret
or
hlt
mov
dec
mov
pop
mov
nop
dec
jl
out
repz
in
aad
popf
lds
lahf
add
xlat
pop
mov
sbb
dec
adc
addr16
lods
mov
test
jne
pop
add
imul
adc
add
addr16
pop
je
leave
orb
sub
push
and
in
push
ret
xchg
mov
inc
dec
andl
mov
xchg
stos
push
sub
xchg
adcl
hlt
and
mov
cmpsb
movb
je
int
loope
pop
xorl
adc
fs
cmp
pop
ds
xor
and
fstpl
inc
stos
lods
push
mov
in
int3
adc
rorb
xchg
sub
dec
and
dec
scas
jg
dec
cmp
mov
inc
inc
test
inc
lahf
repz
xor
int3
sub
outsb
and
out
push
repnz
fsub
xorl
aas
stc
mov
mov
hlt
jg
addb
sbb
call
pop
jno
mov
int3
lds
pusha
cwtl
dec
inc
jae
sub
aad
inc
stos
leave
daa
mov
cli
mov
mov
mov
xor
xchg
xor
mov
mov
aad
and
gs
fnstcw
pop
rolb
xchg
hlt
push
scas
rcl
div
inc
jno
inc
sbb
outsl
aam
xchg
fisubrs
add
add
sub
cld
std
add
leave
push
fldt
and
push
subb
cltd
dec
cs
inc
mov
sub
push
mov
pop
insl
outsl
push
mov
xchg
cmc
cmp
fdivrl
cmpsb
jle
pusha
or
lds
sti
adc
in
pop
call
jns
sub
xor
hlt
lock
rcr
inc
xchg
xor
shl
xchg
fiadds
dec
movsl
and
lea
push
add
pop
xchg
push
jns
pop
ror
add
pop
jno
adc
jnp
dec
xor
sarl
arpl
pusha
push
cld
in
xor
in
pop
out
mov
mov
test
iret
cltd
adc
js
sbb
loopne
pop
cmp
adc
shrl
int3
test
jno
xchg
in
loop
inc
loopne
nop
daa
fistl
lahf
hlt
inc
daa
sti
icebp
popf
rorl
fisubrl
mov
jae
mov
addr16
jg
push
inc
sub
ljmp
xchg
test
mov
out
add
outsb
dec
push
in
dec
inc
inc
and
js
mov
jmp
push
xchg
mov
ret
aaa
sub
rolb
adc
ret
cmp
mov
std
mov
mov
pushf
jl
fistl
xchg
mov
adc
sub
jbe
cmp
shlb
sbb
aaa
loop
sbb
mov
ljmp
adc
in
xchg
or
repz
stos
test
stc
movsl
mov
or
das
mov
add
movl
clc
adc
inc
loop
test
pop
aaa
bound
inc
fistpll
shll
das
imul
adc
mov
sti
imul
pusha
push
push
imul
mov
adc
push
pop
sbb
popf
outsb
cmpb
pop
es
pextrw
sbb
cmpsl
adc
insb
push
js
int
pop
aad
push
out
fsubr
sub
inc
popa
pop
mov
movsl
push
xor
mov
in
push
cmpsl
jmp
les
adc
rclb
repnz
inc
fidivs
mov
mov
xor
negb
lret
pop
enter
rorl
lods
jmp
and
das
xchg
insl
loop
je
pop
test
imul
cmp
data16
inc
aaa
or
shlb
setnp
mov
xchg
adc
imul
pop
stc
push
inc
test
pop
jle
cwtl
mov
idivl
out
loope
fisttpll
mov
sbb
inc
ficoms
pop
mov
mov
nop
arpl
lods
movsl
xor
push
pop
sub
sbb
enter
shll
es
sub
or
add
mov
enter
lods
mov
cmp
jne
and
mov
rclb
inc
popa
sub
xor
inc
mov
push
push
and
or
mov
jno
pop
aad
stc
addl
sbb
pop
cmpl
sub
mov
je
mov
aas
sbbl
push
cmp
int
inc
clc
test
jbe
xor
mov
nop
add
inc
lret
stc
rorb
add
lea
mov
sbb
shr
inc
xchg
shll
push
pop
add
dec
jmp
pop
cmc
lret
out
js
in
sbb
mov
inc
cmp
loopne
sbb
or
pop
push
sahf
pop
in
mov
push
cmpl
inc
push
cs
adc
out
loop
adc
inc
jne
push
pop
ret
lgdtl
out
sti
sbb
jle
loope
add
push
add
or
jmp
loopne
add
mov
adc
push
bound
pusha
loope
push
dec
xor
mov
aam
pop
add
popa
stos
mov
pop
sbb
mov
and
fs
mov
jecxz
test
sti
aad
std
push
mov
mov
pop
cwtl
or
dec
addr16
test
adc
call
pop
dec
ljmp
and
dec
lock
pop
call
or
jecxz
mov
fbld
mov
imul
sub
scas
cs
sahf
movsl
test
mov
outsl
nop
xchg
movsb
adc
fldenvs
jnp
cmp
repz
pop
mov
iret
sub
aad
sbbl
adc
cmpxchg
jnp
jae
lcall
jnp
lret
sti
repz
cmp
outsb
sub
push
push
out
dec
loop
je
xchg
push
sbb
ret
cmp
pop
add
pop
cmc
and
xchg
lahf
lods
inc
adc
and
daa
xorb
dec
ficoms
or
jge
mov
pop
cmpsb
jl
cmp
pop
adc
hlt
and
cltd
xchg
fdiv
mov
mov
xchg
addr16
xor
pop
push
es
in
andb
mov
fsubl
inc
sarl
addr16
add
adc
pop
mov
inc
push
loopne
das
pop
pop
xchg
push
ljmp
xchg
ficomps
xorl
fldt
mov
lret
rcrb
repnz
roll
sbb
cld
inc
mov
sarl
out
lcall
in
push
pop
rcrb
stos
imul
xchg
pop
ja
push
jmp
push
incl
mov
and
add
lahf
sbb
aam
jbe
push
mov
stos
inc
imul
xor
movsb
and
nop
mov
lcall
rcr
push
rclb
in
and
dec
mov
or
mov
jmp
mov
out
loope
cmp
popa
mov
adc
mov
cmp
adc
mov
scas
and
ss
scas
xor
mov
ds
stos
push
jecxz
pop
adc
std
inc
xchg
xor
and
fwait
es
and
lock
lods
out
sbb
adc
mov
std
push
mov
aam
mov
mov
cmp
jmp
adc
dec
pop
xor
mov
or
into
imul
cmp
insb
clc
mov
ss
adc
pop
ss
ljmp
or
dec
push
fiadds
mov
jmp
js
out
les
sarb
push
inc
mov
ficomps
mov
xchg
adc
jb
fwait
movsb
test
cs
out
adc
or
dec
loope
cmp
xchg
lock
sub
inc
fisubrs
cs
js
mov
sub
pop
test
xlat
cwtl
or
imul
xchg
std
jns
push
mov
es
movd
pop
adc
mov
fisttpl
push
adc
adc
outsl
jae
mov
add
testb
rcrl
fistps
pop
cs
out
lahf
dec
fildl
pop
jbe
jns
icebp
mov
repnz
popl
pop
push
stos
adc
fs
or
cs
sarl
daa
dec
xor
push
push
xor
into
popf
ss
or
mov
or
mov
nop
fbstp
aad
clc
cmp
aaa
sbb
in
lods
lods
loop
in
ljmp
jns
out
xor
rorb
mov
mov
sbb
sbb
std
pushf
das
outsl
sbb
xchg
ja
inc
mov
stos
mov
vpcmpeqb
push
add
sbb
xchg
xor
clc
movl
cmpl
popa
sar
inc
dec
sbb
test
cmp
js
pop
ret
jmp
cmp
fs
mov
in
addr16
addl
and
out
jmp
pusha
addb
pop
mov
loope
clc
inc
xor
xchg
and
es
push
lds
outsb
lock
inc
pop
sar
test
lods
data16
add
adc
adc
xor
adc
push
or
dec
xor
out
and
jnp
fst
repz
aaa
inc
jmp
stos
dec
addl
pop
adc
cmpsl
mov
lret
mov
mov
mov
jo
push
cmpsb
inc
insb
or
fisubrs
cld
lea
sub
cmpsb
pop
push
mov
int
je
out
dec
dec
lahf
add
shrb
pop
mov
loope
imulb
mov
mov
ljmp
icebp
lea
sbb
pop
stos
cmp
stos
bound
nop
jp
pop
and
fstpl
and
std
xchg
arpl
pop
mov
mov
lds
loop
hlt
push
or
pusha
test
mov
or
jbe
mov
mov
jecxz
add
dec
adc
jns
mov
adc
sbb
jo
andnps
inc
add
push
inc
fidivs
inc
movsb
and
rcrb
adc
dec
inc
inc
mov
das
dec
repnz
or
ficompl
xchg
gs
xchg
dec
cmp
dec
inc
shl
and
mov
mov
dec
pushf
repz
pop
dec
push
fcoml
adc
shll
data16
cltd
add
shll
andl
jns
addr16
outsl
push
mov
lea
or
icebp
pop
adc
in
mov
rcrl
pop
jb
dec
inc
jb
cld
sbb
shll
fstpl
fsubrl
cld
push
in
int3
adc
xlat
adc
aaa
cmp
mov
inc
fldt
fs
xchg
loop
mov
sub
iret
enter
cmpsb
sub
mov
inc
jg
xor
ss
adc
test
sub
movd
mov
iret
xchg
pop
gs
stos
mov
push
pushf
call
xchg
adc
shr
lcall
push
mov
inc
cmc
lock
jne
in
cmpsl
and
mov
ja
pop
inc
mov
lods
test
dec
mov
push
mov
sbb
pop
jae
in
xchg
lods
lods
cli
mov
pop
jge
rorl
sbb
push
sbbb
das
push
mov
push
cwtl
mov
fucomi
outsl
xchg
scas
mov
mov
xor
mov
pop
gs
arpl
jae
xor
sbb
sbb
xor
mov
ret
push
testl
and
mov
lock
je
or
push
ret
out
xchg
fdiv
pop
testb
nop
push
aaa
movsl
in
fadd
test
jmp
and
fsub
aaa
xor
rorb
xchg
in
out
js
xor
mov
out
inc
xlat
add
adcb
cmpsb
xlat
int
xchg
and
ficompl
mov
pushw
xchg
jmp
pop
leave
jnp
cld
bound
mov
push
fstpt
int
inc
loopne
shrb
jbe
add
and
jne
loopne
pop
int3
cmp
cmp
or
add
lock
call
outsl
lea
addl
sbb
les
xchg
scas
pop
and
pop
scas
xchg
decl
adc
jmp
outsb
or
dec
cmp
push
outsb
cmp
mov
cltd
cmpsb
xchg
xchg
lods
jbe
push
xor
lods
lds
into
out
rolb
arpl
jno
cmp
shrb
insb
mov
mov
mov
pop
div
fstl
mov
outsl
test
cwtl
pop
cltd
jl
lret
inc
aas
mov
mov
jl
cmp
or
add
or
and
push
sahf
imul
stc
pop
cs
pop
inc
jg
xor
mov
sbb
sbb
or
sub
mov
fistpl
fldt
xchg
adc
in
adc
in
and
mov
and
xchg
lock
jmp
scas
jnp
in
mov
cwtl
cltd
xor
rcll
js
inc
add
insb
scas
xchg
lods
repz
jns
dec
jmp
mov
mov
sbb
lds
sub
adc
ja
inc
mov
ds
shrb
popa
sti
and
daa
mov
ljmp
mov
and
xchg
xchg
mov
adc
mov
cmp
out
jg
fxch
cmp
test
mov
enter
inc
push
aas
test
add
mov
sbb
std
out
sbbb
rorl
arpl
data16
arpl
dec
or
cs
das
add
call
in
dec
loop
iret
frstor
stos
iret
pop
bound
scas
or
outsl
mov
shrb
daa
ja
jb
out
hlt
inc
dec
enter
hlt
lds
pop
cli
int3
add
fdivs
movl
les
xchg
inc
sbb
cmp
or
xor
fcomp
xchg
stos
and
sbb
flds
lcall
ficompl
scas
pop
jmp
sbb
or
push
inc
inc
jbe
lods
inc
xchg
scas
mov
mov
aaa
adc
test
xchg
mov
cwtl
mov
rcr
ret
jno
aam
shlb
int3
sbb
sbb
loope
pop
mov
aaa
test
inc
stos
arpl
imul
mov
out
or
clc
test
or
int3
pop
scas
sahf
pop
les
jge
iret
mov
jns
or
ds
mov
inc
xchg
cmp
adc
sbb
mov
xor
and
imulb
in
jp
mov
xchg
mov
xor
sahf
data16
lcall
mov
mov
mov
testb
imul
and
in
dec
pop
push
dec
out
fs
aam
adc
sbb
lahf
std
shll
mov
sahf
fdivrl
add
daa
aam
insl
shl
mov
push
and
add
mov
inc
aas
mov
gs
dec
js
jns
outsb
xchg
data16
xchg
dec
jnp
int
cs
add
inc
jne
mov
fcomps
jne
jo
xor
call
ljmp
scas
inc
sub
push
sti
fnstenv
out
adc
in
adc
pop
imul
pop
scas
pop
sti
push
frstor
fwait
adc
stc
inc
push
mov
jle
xchg
adc
out
test
punpckhbw
outsl
xchg
add
insb
mov
std
lahf
movsb
cld
fadd
lahf
stc
call
cmpl
xchg
adc
pop
xchg
and
sbb
jle
xor
inc
fsub
jb
mov
test
outsw
aam
shlb
mulb
les
lahf
mov
orb
outsl
js
cmpl
repz
add
pop
jns
adc
ja
or
xor
and
mov
xchg
jae
jecxz
dec
in
in
dec
push
push
cmp
cs
xchg
jno
fwait
fs
scas
lods
les
cwtl
mov
cmc
dec
movsl
adcl
mov
call
enter
push
std
cmpsb
xchg
ficompl
mov
xlat
sub
ljmp
mov
out
ja
out
ret
movsl
xchg
push
xchg
or
fildll
xor
dec
and
sbb
pop
bound
jbe
scas
ljmp
ret
sbb
gs
mov
push
lcall
je
and
adc
dec
pop
movsl
call
ficoms
mov
cld
push
inc
cmp
xor
loopne
push
pop
decl
sub
sub
inc
je
inc
ret
cs
sub
pusha
and
fdivl
or
xchg
pop
or
and
sahf
push
mov
into
shrb
inc
ret
dec
push
into
insl
shlb
shlb
ret
pusha
push
xor
inc
or
ret
fnstsw
mov
and
xor
dec
dec
popf
and
lcall
pop
cmpb
arpl
movsb
push
popf
jne
or
mov
ljmp
fimull
mov
in
in
mov
inc
aas
test
mov
xor
adc
cwtl
dec
jp
or
test
enter
mov
pusha
or
cmc
sbb
inc
popa
dec
cmp
loop
sbb
xchg
push
mov
pop
sbb
pop
dec
xchg
cs
dec
outsb
mov
dec
arpl
xor
das
scas
inc
push
js
les
cmp
es
dec
stc
hlt
adc
push
sub
sub
pop
mov
mov
add
es
cltd
jo
movsb
xchg
incb
xchg
sarl
out
shrb
mov
stos
daa
adc
or
dec
lock
ljmp
test
jecxz
jp
pop
dec
pop
in
shll
movsl
mov
cmp
lahf
push
stc
mov
or
xorb
out
shrl
dec
les
clc
mov
adc
pop
sbb
jge
out
jg
jae
pop
adc
iret
pop
sub
dec
inc
add
mov
out
xor
cli
mov
cmp
jecxz
sbbl
mov
pusha
sub
inc
xchg
xor
mov
xlat
push
mov
scas
inc
ss
jg
cmpsb
clc
dec
cli
add
xlat
inc
jns
daa
aas
add
pop
jne
add
add
jp
mov
push
mov
enter
cmpsb
dec
mov
or
loopne
mov
add
dec
pop
rclb
scas
cmp
push
fstpt
push
pop
out
dec
jp
jmp
popl
lahf
mov
loopne
fdivs
mov
imull
test
int
sbb
mov
inc
add
xchg
imul
cmpsl
pop
dec
mov
ret
push
pusha
sbb
lods
dec
xor
cmp
add
cmp
xor
push
mov
mov
xchg
test
repz
push
xor
das
xchg
xor
in
movsb
cmc
cli
dec
fstps
xor
shlb
jbe
sbb
jb
out
sub
pop
outsb
nop
imul
dec
mov
push
leave
stos
pop
fwait
leave
cmpsl
push
cmc
pop
cmp
out
pop
out
inc
sbb
call
jecxz
cld
sti
jmp
cmc
mov
xor
pop
outsl
fiaddl
call
outsb
sub
mov
insb
pop
push
add
mov
or
adc
xchg
pop
sub
insl
out
jge
daa
push
dec
fidivl
cmpsl
outsl
in
dec
pop
jmp
push
negl
aaa
mov
xchg
sarb
mov
pop
mov
cltd
mov
mov
cmp
out
jne
cmp
mov
push
out
inc
push
ds
mov
cmp
push
fwait
test
sarl
outsl
pushf
jge
xchg
fidivs
mov
cs
fldenv
fiadds
test
push
imul
dec
repnz
inc
and
xchg
rolb
test
sti
sub
and
sbb
cmp
out
xor
pop
mov
std
int
push
push
mov
xor
sub
out
mov
int
xlat
add
adc
xor
push
stos
sbb
xchg
lcall
ficompl
push
addb
xor
adc
outsl
jmp
aam
cmp
sub
pushf
sbb
arpl
or
xor
dec
stc
inc
sub
jl
sub
and
shrb
call
fs
cmp
js
or
mov
add
pop
in
push
jbe
int
dec
xor
pushl
int
cmp
loope
fstpl
push
loopne
pop
mov
and
push
cs
pop
outsl
sbb
dec
sub
mov
push
dec
je
addl
enter
push
iret
in
enter
dec
stos
xchg
pop
pushf
dec
jp
scas
sbb
out
and
dec
ret
xchg
data16
insb
cmpsl
inc
cwtl
cmpsl
and
pop
push
ret
inc
iret
repnz
pop
push
mov
fs
imul
mov
xor
and
jl
sbb
mov
lods
push
fidivrl
and
out
mull
and
adc
rcl
mov
das
test
xchg
pop
and
test
mov
inc
std
xchg
pop
pop
loopne
push
sbb
sbb
pcmpeqd
mov
sub
arpl
fucomip
jmp
mov
jne
loopne
test
jns
jl
jnp
into
adc
pop
test
stos
mov
inc
add
mov
nop
in
sub
xchg
cli
sub
ds
xlat
mov
nop
xchg
fisubrs
xchg
pop
scas
ljmp
pusha
gs
jmp
cli
pushf
ret
xor
sti
scas
movsb
sub
sbb
jl
push
rolb
in
push
call
pop
pop
push
push
cmp
arpl
adc
push
cwtl
cmp
js
jne
or
adc
shr
cli
lcall
adc
rol
repnz
mov
mov
in
push
or
jecxz
aaa
aas
sub
adc
imul
test
xor
push
pop
xor
flds
pop
imul
xchg
aam
outsl
cmpb
repnz
sub
mov
fistps
pop
or
shrb
mov
xor
stos
cmpsl
and
repz
adc
inc
dec
pop
enter
loop
sub
xor
inc
cmc
mov
inc
jne
fstpl
mov
mov
jnp
mov
inc
scas
dec
out
sub
xchg
xor
inc
adc
dec
mov
adc
inc
pop
adc
leave
cli
das
dec
aam
or
jg
mov
mov
mov
xor
xchg
frstor
psubq
addr16
jo
fcmovb
jle
mov
ficoms
div
sbb
mov
mov
mov
push
sub
in
push
imul
mov
imul
loope
popa
jo
clc
test
stc
mov
jae
mov
inc
test
call
rclb
enter
movsl
mov
mov
push
pop
ljmp
int3
cmp
fwait
xchg
clc
movsl
cmp
pop
mov
push
jbe
in
popa
ds
dec
sbb
pop
outsl
aaa
cmp
fs
jmp
pop
into
test
les
mov
mov
jne
fadds
nop
mov
nop
dec
xchg
bound
mov
imul
lds
popf
mov
inc
jbe
sti
cmp
and
aam
stos
cmp
sbb
xor
sbb
enter
pusha
mov
icebp
mov
loopne
int3
ret
push
xchg
pop
xchg
mov
cmp
fmull
imul
add
jae
outsb
mov
sbb
ja
mov
adc
in
icebp
push
add
or
pmaxub
outsb
sbb
pop
insb
xorl
xchg
pusha
or
push
and
imul
pop
xchg
add
mov
cmpsl
sbbl
test
mov
xlat
cmp
lahf
out
push
push
int3
cmp
push
je
jns
dec
or
and
sub
div
xchg
mov
mov
dec
jne
bound
cmp
jnp
add
cld
ftst
cmc
stos
ljmp
jbe
mov
sbb
xchg
lds
xor
iret
push
ret
in
hlt
mov
and
call
fdivr
adc
rcll
jmp
rcll
mov
push
popf
jo
mov
sub
divl
sbb
and
adc
filds
push
mov
and
addr16
jg
or
lcall
insb
xchg
fs
sub
in
ds
dec
jns
out
mov
pop
sbb
pusha
test
sub
sahf
xrelease
jbe
hlt
mov
out
lahf
enter
xorb
aas
mov
add
push
filds
ret
cld
sti
repnz
loopne
jg
fnstenv
push
or
stc
mov
das
inc
repz
adc
mov
add
scas
insb
lret
fbstp
push
xchg
inc
xor
test
jae
adc
cmpsb
insl
jno
sbb
divl
pop
ret
and
mov
and
in
pop
fcoms
pop
jle
adc
xchg
jecxz
call
or
mov
cmp
repz
xor
into
push
ret
cli
push
fmull
adc
out
jle
into
cmp
test
jl
mov
xor
adc
icebp
xchg
fs
jecxz
mov
repz
inc
pop
mov
jns
xchg
lcall
inc
fidivl
xchg
adc
pop
push
cmp
dec
push
cmpsb
cmpsb
clc
dec
loop
push
ret
mov
aad
jg
test
mov
mov
xor
push
inc
lcall
movsb
xlat
pop
mov
xor
call
or
jae
jb
fdivrs
sbb
insb
adc
xor
popa
daa
add
xlat
lcall
xor
test
popf
or
pop
push
adc
outsl
int
clc
dec
add
je
push
push
test
jl
xchg
and
js
or
mov
jbe
cmp
shrl
movb
dec
in
addr16
adc
fisttps
push
push
stc
push
or
cwtl
inc
shrb
shl
clc
jns
adc
subl
jp,pn
xlat
les
xchg
inc
pop
test
dec
or
xchg
stc
sub
enter
fldl
into
adc
lret
idivl
add
icebp
aam
cmpsb
cmp
js
testb
pop
loope
xor
inc
add
dec
jnp
push
fucomip
sub
mov
fisttpll
inc
cmp
jecxz
mov
or
idivb
rorl
mov
lret
adc
add
xchg
and
shrb
adc
adc
fsubrl
and
jae
pushl
sbb
stc
loopne,pn
ljmp
sub
cmp
clc
pop
pop
es
inc
sbb
xor
add
pop
int
xchg
pop
lods
in
xchg
and
pusha
jbe
mov
pop
les
mov
leave
cmp
hlt
xchg
paddusw
nop
cltd
std
add
inc
mov
xor
add
lods
negb
push
cmp
into
cmp
test
rorb
mov
and
je
sub
xchg
cmpsl
jle
stc
mov
mov
sbb
or
pop
fnsave
data16
inc
in
push
outsl
cmp
adc
sub
outsl
insl
and
xor
xchg
fs
mov
mov
lret
and
cmp
sub
jl
push
iret
xorb
inc
test
sub
cltd
dec
adc
adc
pushf
pop
fimuls
dec
sar
jp
mov
jno
aad
inc
inc
and
push
cmp
aad
add
sarb
mov
xchg
jl
shl
push
pushf
xchg
es
cmp
or
cli
push
sbb
fs
xor
xchg
cltd
cmpsb
rorl
mov
stos
jae
cld
push
sub
roll
movsb
iret
push
add
jbe
outsb
mov
iret
popa
sbb
fisttps
adc
push
jmp
pop
jno
mov
fwait
push
xorb
mov
jle
pop
inc
jne
xchg
push
sub
sub
dec
icebp
stc
ja
popf
cmp
ror
iret
rcll
js
mov
fwait
adc
in
mov
fs
out
out
xchg
hlt
xor
mov
idivl
jg
and
pushf
dec
jecxz
push
add
arpl
adc
ret
mov
test
inc
inc
popf
mov
das
fstps
jl
cmp
cli
add
out
xor
sub
adc
mov
cmpsb
jb
idiv
arpl
push
dec
or
cwtl
iret
rcll
dec
fildl
or
popa
insl
adc
shrl
test
jp
inc
or
fildll
aas
add
xor
sbb
pusha
leave
sti
sbb
jno
adcl
mov
divl
ljmp
test
sbb
sub
fwait
outsl
pop
repz
push
or
sbbl
jbe
outsl
repnz
jnp
mov
out
inc
adc
test
add
xor
pop
mov
cltd
jmp
and
inc
inc
cmp
adc
jl
out
mov
sub
dec
jno
lret
les
shlb
insb
dec
cmp
mov
xor
xor
lcall
es
jns
xor
nop
xor
adc
nop
repnz
lret
push
mov
xchg
lahf
mov
add
lock
in
cld
in
sub
scas
scas
mov
faddp
icebp
mov
mov
mov
push
ret
repz
hlt
and
xchg
aaa
outsb
fisttpll
aaa
scas
aad
sti
stc
fs
adc
ficoml
adc
sub
inc
pop
mov
push
shll
mov
loopne
out
sub
xchg
ja
lods
out
pop
lds
pop
sbb
adc
or
cwtl
mov
cmpsb
ss
insb
sub
mov
inc
jmp
popa
fldcw
jbe
subb
ret
repz
mov
rclb
add
repz
lahf
and
adcl
fidivs
ljmp
cli
inc
xchg
xchg
and
sbb
mov
lods
jno
or
lea
in
push
add
shrl
xchg
mov
mov
push
cld
test
lds
repnz
dec
mov
pushf
imul
arpl
xadd
insl
mov
fstps
cmp
xchg
xchg
push
adc
xorb
fdiv
jge
xor
ljmp
xchg
add
mov
sub
sar
inc
xchg
stos
cmc
cmp
std
fisttpll
es
push
inc
ret
cmp
sbb
adc
ret
in
xlat
das
dec
loope
xchg
loop
ret
adc
icebp
xchg
xchg
ror
fidivs
out
and
pop
mov
sub
mov
xchg
fnop
leave
sbb
xor
das
xchg
fnstenv
push
pop
addr16
shlb
sub
jecxz
scas
xchg
jl
cmpsl
sub
subb
ljmp
std
adc
push
aaa
nop/reserved
and
fisubl
push
movsl
inc
cmp
xchg
les
movsb
push
adc
sub
sti
adc
or
in
add
jecxz
lds
lds
jge
std
orb
lods
mov
je
xchg
sub
push
je
pop
ds
pop
xor
xchg
fs
addr16
inc
add
jnp
or
xchg
inc
or
repnz
test
sbbb
pop
cwtl
outsb
std
add
cs
int
and
mov
lods
xlat
popa
pop
and
fildll
add
mov
arpl
cmpsl
daa
push
inc
xor
lds
xchg
mov
push
shrb
dec
lods
repz
xchg
xchg
xor
dec
dec
sets
iret
popa
jne
aaa
loopne
push
sub
mov
pop
insb
dec
lret
stos
in
clc
ret
rcrl
add
dec
repz
arpl
and
cmpsb
rorl
push
repz
lret
mov
faddp
into
popa
cwtl
jmp
rorb
mov
repz
lods
inc
js
jle
daa
outsb
cmp
jle
lea
aad
in
cli
pop
ja
jecxz
into
imul
mov
inc
sbb
mov
outsb
fnstcw
or
out
or
mov
or
loope
add
or
dec
in
sbb
enter
cmc
jb
jmp
add
or
adcb
inc
outsb
nop
push
sti
incl
xchg
daa
or
push
inc
add
movsb
lods
stos
jle
pusha
push
scas
add
or
push
clc
mov
bound
pop
fcmovb
das
cli
popf
stos
or
mov
cmp
push
sub
in
cmp
inc
je
cmc
ljmp
cltd
aad
fstpl
out
xlat
inc
rcr
sti
fistpll
cmp
mov
icebp
mov
sbb
xchg
repnz
jmp
in
popf
push
adc
lods
dec
jle
lahf
push
mov
pushf
jg
adc
out
adc
sub
stos
aas
inc
shll
lods
leave
or
sar
dec
fstpt
js
fcomi
push
cmp
test
dec
jge
hlt
dec
adc
outsb
fbld
stos
cmp
cltd
ss
push
xchg
stc
test
mov
sbb
lcall
sahf
and
les
mov
je
mov
mov
hlt
cld
adc
jne
fbld
jbe
push
out
sub
mov
scas
push
loope
bound
pop
jge
cmpsb
fiaddl
pop
in
jae
push
stos
in
mov
jmp
or
fwait
mov
fsts
pop
movsb
jmp
jle
pop
popf
sbb
sbb
xchg
jp,pt
pop
add
jp
sub
dec
xchg
cmp
xchg
mov
adc
add
xor
in
imul
or
sbb
jns
push
int3
and
dec
scas
cmc
inc
mov
cmp
gs
mov
jnp
xchg
xchg
push
lea
inc
push
xor
scas
mov
in
in
dec
mov
mov
cmp
orb
in
jmp
lock
cltd
mov
pop
or
repnz
fcoml
pushf
pop
aas
es
rorl
add
stc
je
lret
push
pop
adc
jmp
jle
repz
inc
jmp
pop
xlat
mov
mov
pop
and
mov
adc
ss
add
jne
stos
mov
cmp
subb
mov
jns
cli
cmp
push
lret
out
repnz
inc
mov
cmpsb
dec
and
inc
mov
arpl
mov
pushf
push
test
test
and
mov
shl
lcall
je
lcall
ficompl
lds
sub
inc
mov
icebp
add
adc
sbb
stos
inc
sarb
adcb
jns
mov
jge
inc
pop
test
dec
scas
lret
insb
xor
mov
sub
test
fstps
icebp
lret
rorl
push
addr16
aas
lcall
fsubl
pop
xchg
in
in
dec
repz
push
mov
xchg
fs
repz
imul
sbb
push
je
sub
js,pt
in
push
int
sahf
jb
fldenv
jp
cmp
icebp
je
and
add
dec
or
popf
sbb
mov
fbstp
pop
js
aaa
pop
dec
testb
jae
int
loope
mov
imul
lods
pop
in
into
jns
and
into
cmc
xchg
ficoml
ret
add
jae
lcall
scas
push
sub
add
shl
ret
je
nop
cmp
xchg
jp
inc
xor
push
push
je
stos
lret
sbb
stos
cmp
pop
aam
iret
push
in
lds
clc
cmp
mov
sbb
mov
ds
iret
arpl
cmpsl
es
cmp
xor
mov
mov
into
loope
push
sbb
lock
inc
add
lods
movsl
inc
pop
sub
inc
and
ret
mov
lcall
aam
pusha
ds
sbbl
mov
mov
adc
jns
fldl
arpl
mov
jbe
pop
jb
or
inc
adc
xor
arpl
and
and
and
xor
fimull
mov
icebp
stc
js
aam
test
iret
mov
mov
repnz
jb
sub
or
xor
or
data16
sarl
jg
pop
pop
mov
fs
icebp
pop
pop
in
pop
shrb
mov
xchg
loop
inc
xor
mov
xor
dec
sbb
movsb
mov
pop
outsb
outsl
adc
or
dec
rcrl
repz
adc
push
lods
dec
pmaxub
inc
cmpsl
nop
out
pop
push
je
fcoms
mov
xor
lcall
iret
rol
cmp
in
mov
sbb
push
mov
sbb
bound
outsb
loop
mov
leave
ss
and
xchg
div
mov
cld
fistpl
std
fs
pusha
shl
xchg
push
cmp
xchg
or
sbb
addl
dec
mov
ret
dec
mov
fwait
sbb
lods
data16
inc
test
mov
call
mov
sbb
mov
rolb
or
scas
sbb
pop
xor
cmpsl
out
xorb
or
std
pop
mov
gs
sbb
cmp
jle
mov
and
cmpsb
fidivs
adc
inc
inc
aas
ret
movsl
lods
xor
or
loop
pop
inc
add
cmp
adc
fwait
mov
hlt
pop
jecxz
daa
mov
repnz
pop
in
testl
or
mov
popa
pusha
xchg
iret
lods
popa
adc
shlb
xor
mov
cmp
int
les
mov
rep
inc
aad
clc
pop
mov
lahf
mov
xlat
mov
setnp
mov
movsb
xchg
imul
cltd
sbb
sub
test
inc
in
and
icebp
inc
cmc
push
jbe
lcall
out
mov
xchg
sti
xchg
and
xor
stos
push
push
sti
adc
lcall
loop
arpl
adc
ret
insl
xor
push
aaa
jmp
mov
cmp
popf
mov
test
fldenv
mov
push
cmp
push
add
pop
pop
and
or
sub
orb
dec
xor
movsl
mov
xor
std
arpl
movsb
clc
or
add
jecxz
jge
repz
and
test
imul
aam
outsb
lcall
push
loopne
push
jo
cli
cmp
std
pop
pop
inc
fisttpll
inc
mov
outsb
xor
mov
or
dec
movsb
xchg
dec
fsubrs
inc
xor
lahf
lret
int
push
fdiv
and
ljmp
lret
mov
push
add
add
cltd
out
test
mov
and
mov
adc
dec
imul
xchg
dec
stos
add
adc
shrl
and
scas
gs
aaa
or
ss
fdivl
sbb
mov
add
ss
stos
daa
fdivrs
jecxz
sbb
loope
repz
cmpsl
repz
push
rcrl
jae
mov
pop
and
sbb
add
in
call
lea
dec
inc
aas
inc
std
add
xor
lods
ja
aam
into
fndisi(8087
adc
ljmp
enter
xor
js
push
cli
adc
out
push
lahf
rcrl
sbb
dec
pop
int
jb
mov
sbb
jg
pop
mov
xchg
inc
insb
mov
sub
cmp
jl
das
xchg
jecxz
test
cmp
aad
loope
shll
daa
ret
mov
mov
out
and
mov
xchg
repnz
dec
xorb
pop
insl
and
jb
jp
adc
out
adc
xor
jge
sbb
ss
and
sbb
push
cmp
lods
pop
cmp
xor
mov
jmp
add
mov
leave
sbb
hlt
xor
loope
or
sub
sbb
lods
ljmp
in
dec
loopne
enter
mov
and
jnp
or
inc
xchg
into
out
mov
push
and
mov
xchg
mov
adc
xchg
cld
or
mov
lock
ss
jp
les
mov
shlb
pusha
in
xchg
sbb
stc
sbb
in
inc
aaa
stc
and
lods
mov
push
call
rorb
or
sbb
cltd
or
test
sub
sbb
imul
sbb
das
outsb
movsl
push
pop
fadds
xor
pop
mov
setle
int3
cmp
mov
repnz
dec
push
mov
nop
popf
jge
jg
sbb
fwait
xchg
sub
roll
nop
les
in
fucomip
in
adc
sub
jg
call
test
loopne
sub
lea
mov
jbe
je
xor
push
pop
jae
je
mov
or
push
adc
inc
xor
push
imull
jbe
rcll
xlat
xor
mov
sti
xor
pop
jl
insb
stos
enter
mov
pop
test
js
lcall
ret
mov
pop
jle
cmpsb
inc
cmp
mov
in
cmpsl
nop
push
clc
cwtl
jmp
xor
outsl
sbb
shlb
clc
cmp
fst
movsl
pop
push
push
jo
scas
mov
in
cmp
jle
adc
add
sbb
cwtl
lret
cwtl
sbb
cmp
jns
push
cs
out
pop
cmp
and
stos
outsb
cmp
sbb
daa
or
imul
out
addr16
mov
jbe
push
add
out
xor
aam
cli
sub
scas
xchg
sbb
sub
cmp
outsb
in
push
fnsave
mov
addr16
add
and
lcall
loop
ja
mov
sub
mov
xchg
cmpsb
rol
mov
outsb
mov
mov
jns
mov
enter
sub
pop
lods
push
stos
movsl
and
mov
insl
lods
push
test
dec
jge
loop
pusha
xor
sub
lcall
sbbb
shlb
xor
cmp
push
fwait
fwait
pop
jle
cld
inc
outsl
add
or
fisttpll
and
mov
jnp
int3
hlt
cltd
int
mov
cwtl
adc
cld
mov
icebp
popf
outsb
ds
mov
outsl
cmc
mov
xor
nop
leave
xchg
lods
and
push
je
scas
int3
jp
add
cmpsb
into
add
xorb
mov
rclb
add
mov
dec
xlat
sti
mov
push
scas
shl
inc
pop
sbb
sub
jecxz
int
push
out
or
and
lods
push
sbb
loope
in
sbb
ret
in
cmp
cli
loope
mov
mov
fsubr
adc
test
orl
test
mov
cltd
lret
adc
add
push
pop
pop
mov
ret
and
mov
stc
icebp
mov
jmp
lock
je
fsubrl
adc
scas
pop
aaa
or
sbb
dec
rcrb
pop
pusha
mov
out
loop
lret
std
fnsave
in
inc
pop
loope
sti
push
pop
inc
mov
add
in
adc
loop
int
pop
scas
mov
jp
int
push
nop
mov
daa
mov
data16
ljmp
int
jle
orl
or
outsl
cld
hlt
jno
xchg
adc
movsb
mov
mov
mov
arpl
adc
jl
dec
jp
sub
cs
fimuls
imul
jb
xchg
xor
cmp
notb
arpl
mov
and
fs
dec
mov
aam
adc
lret
inc
lea
shlb
jo
cmpsl
jae
push
lret
jecxz,pn
scas
jmp
jecxz
jns
ds
notl
adc
jl
jle
jle
jnp
cmc
test
cmp
scas
in
scas
push
ja
mov
test
sbb
inc
xlat
cmp
jg
cmc
ljmp
cli
xlat
out
in
xor
mov
pusha
xor
mov
cli
stos
sub
mov
mov
and
ret
stos
mov
enter
mov
push
mov
shll
cmp
fldt
daa
xor
in
ret
or
mov
push
xchg
xor
push
mov
cmp
inc
clc
sbb
test
and
add
push
test
sub
dec
popf
sub
ret
and
aam
cs
and
adc
leave
pop
jno
dec
popa
inc
ds
mull
pop
mov
jnp
arpl
imul
fstpt
mov
call
lock
and
cmp
dec
adc
push
orl
lcall
inc
popf
outsl
pop
push
arpl
jne
and
jb
cmc
cmp
es
ljmp
out
cmp
mulb
gs
sbb
roll
rolb
mov
cmpsb
add
and
leave
out
inc
enter
xor
pop
sub
lret
es
jb
mov
mov
cmp
dec
xchg
pusha
sbb
ljmp
ret
sub
les
mov
dec
push
push
mov
sbb
sbb
adc
imul
lret
sub
imul
push
mov
cmp
rcrb
mov
sub
subl
pop
sbb
leave
test
int3
insl
mov
xchg
mov
das
adc
push
nop
or
pop
mov
pop
cmp
add
or
jbe
loop
mov
sub
mov
sbb
aam
ds
fnstsw
lcall
inc
out
std
cld
cmc
sbb
push
mov
enter
out
xchg
mov
cli
and
test
out
in
je
or
jo
js
sub
outsb
inc
push
int3
sbb
scas
loopne
mov
mov
jns
rcr
push
test
mov
popa
sbbb
clc
or
mov
lds
je
jmp
dec
notl
or
arpl
popf
orb
insl
test
xchg
add
xchg
outsb
ss
icebp
jo
daa
js
repnz
add
sbb
out
cld
fwait
xchg
stos
add
popf
adc
imul
pop
pop
lret
pop
std
or
mov
repnz
hlt
jp
shlb
arpl
fsubrs
aam
inc
add
xchg
sti
push
mov
clc
push
inc
call
adc
dec
sbb
push
outsl
or
ret
cmp
jo
mov
jns
mov
ljmp
je
rcr
jmp
dec
cmpsb
xor
mov
dec
into
lahf
pop
call
sti
mov
inc
jae
fwait
sub
adc
sub
fwait
lea
sbb
ficomps
push
sub
jns
pushf
rcrb
add
jg
jecxz
mov
inc
stos
fstps
aaa
mov
fs
movsb
rcrl
sub
and
movsl
xchg
scas
lret
push
inc
andl
mov
mov
xchg
mov
add
cwtl
add
fbld
jg
adc
call
lock
imul
mov
jno
cmp
pusha
adc
xchg
adc
mov
push
push
shll
int3
mov
imul
add
decb
add
push
mov
daa
pop
sub
jl
inc
or
in
add
popa
mov
fldt
pop
xor
push
fidivrl
adc
inc
jns
push
inc
xchg
mov
stos
inc
xchg
inc
fmul
add
fbld
mov
xchg
std
dec
rorl
sbb
dec
fs
int3
add
sbb
push
arpl
inc
and
inc
data16
loope
in
imul
add
mov
cmp
stc
shlb
insb
add
push
sahf
mov
pop
dec
stc
shll
icebp
push
xchg
adc
test
je
sbb
stc
or
js
push
jnp
pop
cltd
and
sub
bound
int3
jge
xor
push
int3
xor
dec
xor
daa
nop
xor
sbb
mov
sbb
repz
aaa
push
dec
call
jb
lock
inc
stos
data16
pop
incl
fcmovnb
mov
in
cmpsb
sbb
cld
lret
rcrl
ljmp
test
dec
das
pushf
push
test
lods
sbb
popf
xchg
dec
cmp
cmp
dec
bound
das
repnz
nop
stc
ds
inc
lret
xchg
push
pop
sbb
pushf
sub
push
inc
sbb
adc
fucomip
andb
inc
imul
jnp
pop
cltd
jg
outsb
in
repz
ds
mov
addb
popa
jae
aad
pop
jp
out
fidivrs
addl
push
or
pop
pushf
loop
jne
fiadds
test
push
push
push
push
dec
ficoml
xor
test
lods
jle
push
pusha
cmp
loopne
iret
imul
add
jp
xor
inc
xchg
jl
mov
push
ds
inc
dec
jb
std
pusha
loope
sbb
pushf
mov
repnz
shrb
mov
repz
fisttps
stos
or
clc
in
xor
dec
je
xor
inc
mov
mov
dec
inc
andl
xor
xor
hlt
mov
aaa
jo
cltd
add
in
popf
xor
shll
sbb
mov
and
popa
inc
fwait
jge
sub
int
xchg
fbld
adc
sub
and
loopne
mov
sar
fsts
mov
cli
push
jno
pop
sub
or
mov
js
das
dec
data16
adc
out
and
stos
outsl
enter
and
sbbb
inc
push
xor
jne
lahf
adc
ret
cmp
push
and
repnz
push
xchg
jecxz
into
inc
lods
rclb
out
fnstenv
out
xchg
jle
scas
and
dec
outsl
cltd
dec
out
pusha
mov
jp
daa
sbb
pop
jmp
scas
adc
fildl
jle
sub
jmp
cmpsl
cmp
repz
mov
in
pop
dec
pop
pop
shrb
inc
adc
xchg
fldt
and
rolw
icebp
sbb
in
lds
pop
pop
or
and
lods
ljmp
hlt
fnsave
in
mov
sub
rcrl
pop
sub
adc
mov
bnd
mov
popa
cmc
lds
test
arpl
jl
push
mov
push
in
fnstcw
adc
cmp
or
push
xor
xchg
dec
mov
arpl
cli
pop
jmp
push
aas
cmpsl
stc
into
loope
rcll
mov
mov
loope
out
cmp
mov
pop
push
add
popa
stos
cmpsb
cmp
mov
sub
lods
push
cmpsl
sub
out
jmp
sti
fbld
shlb
jns
cmp
dec
jg
aas
push
mov
into
out
mov
mov
jecxz
pop
mov
aad
inc
mull
aam
movsb
pushf
imul
stos
or
ds
add
sub
push
mov
rcrl
lret
dec
pop
mov
addl
dec
jmp
inc
lahf
cmp
push
xorl
pop
test
in
xor
sub
or
clc
gs
or
fldl2t
repz
mov
fidivrl
or
pop
jecxz
adc
xchg
je
dec
clc
xor
adc
cmp
push
mov
js
push
jne
fadds
loop
jns
cli
stos
cltd
bound
push
add
shl
fistpll
movsl
dec
mov
mov
mov
sbb
pop
int3
mov
mov
add
inc
repnz
cmpsb
aam
cmp
js
mov
jp
sbb
outsl
clc
sub
addr16
lds
and
fbld
mov
repz
jo
jno
or
out
orl
mov
test
lcall
aas
push
sub
xchg
inc
std
std
cmovo
jg
and
pop
roll
pop
rcl
push
or
js
sbb
popa
mov
out
int3
xchg
mov
cli
aad
xchg
sbb
push
lahf
sbb
ret
arpl
xchg
cmpsb
jg
pop
ret
fcomp
jbe
out
add
loop
push
fcmove
xor
leave
mov
cmp
out
cmpsb
fldt
daa
cltd
ret
mov
mov
pop
dec
sub
push
in
sub
stos
dec
xor
lcall
xchg
enter
add
inc
jecxz
jecxz
rcl
sbb
mov
pop
cld
ret
dec
cltd
gs
sti
lds
push
jns
cmpsl
mov
dec
je
bound
addr16
xchg
xor
fldcw
push
inc
cmp
clc
add
or
push
cmp
mov
xchg
out
mov
ret
fstl
stos
and
mov
imul
pop
sbb
data16
sbb
push
cmpsl
xchg
cmp
adc
mov
or
mov
insl
out
mov
adc
hlt
xchg
ret
sbb
cmpsb
divb
mov
adc
sbb
imul
lret
lds
iret
idivl
fldl
les
mov
pop
in
mov
pop
fwait
cmpsl
int3
cmpsl
xchg
mov
cmp
xchg
xor
lods
insl
push
dec
jne
ret
adc
and
adc
pusha
loop
adcb
adc
hlt
gs
pop
push
cmp
es
scas
pop
inc
xor
mov
stos
jno
nop
clc
dec
jbe
stos
ss
jmp
and
sahf
pop
or
rcrl
mov
pavgw
mov
xchg
daa
push
push
pop
pop
inc
mov
ret
lods
cmp
inc
xchg
inc
inc
mov
lods
aad
mov
and
mov
lret
mov
push
in
cmp
sub
jo
adc
xor
fnstsw
repnz
inc
xchg
std
popf
jecxz
rcrl
stos
adc
cmp
sub
sub
mov
mov
xor
xchg
rolb
enter
int
inc
lcall
sbb
icebp
and
loopne
mov
xor
jbe
out
mov
pusha
ds
jge
dec
or
cmp
pop
xchg
pop
jb
cwtl
les
xchg
fucomip
mov
in
test
fcomi
aad
push
imul
stos
xor
imul
in
inc
adc
xor
mov
sbb
xchg
add
fadds
or
inc
xchg
xchg
arpl
lods
cmp
jge
stos
pop
push
fimuls
std
lock
ret
nop
bound
cmp
mov
shlb
int3
add
jb
mov
cwtl
hlt
adc
aas
js
add
outsl
std
xchg
lds
test
das
inc
xchg
fucomp
test
clc
push
das
adc
push
pop
les
rcr
push
add
aaa
sbb
xchg
jmp
jb
jnp
dec
insw
inc
hlt
arpl
sti
mov
pop
mov
pop
scas
dec
sahf
xchg
push
adc
xorl
add
enter
rcr
and
jno
daa
lahf
and
clc
cmp
loop
sbbb
fcompl
imul
ret
out
mov
xchg
pop
arpl
mov
mov
xor
sub
xchg
das
ds
jmp
scas
add
enter
ljmp
jmp
loop
jnp
or
lods
sbb
int
aam
lods
inc
jae
mov
out
jae
jl
pop
test
aas
xchg
sarl
dec
rolb
ja
xor
xor
cmpsl
loop
pop
xor
or
subb
cld
addr16
sahf
insb
lea
xorl
and
and
add
repz
sbb
xlat
ret
pop
add
data16
push
cmp
cmc
xlat
jne
gs
jl
out
je
ret
and
mov
xchg
fcoml
mov
xchg
arpl
jle
mov
or
fisubrl
les
jne
push
jg
and
lea
stos
addr16
adc
jg
shlb
pop
pop
xchg
cmp
xchg
bound
mov
and
add
push
movsl
jbe
aaa
ss
movsl
xchg
xchg
enter
fidivrs
sarl
mov
jp
push
add
mov
add
push
dec
arpl
xchg
dec
sub
cmp
mov
dec
mov
cwtl
aad
iret
lock
mov
pop
andb
cmp
jle
add
mov
cmp
mov
fnstsw
and
mov
dec
ja
subb
and
popa
aad
pop
inc
and
idivb
sub
inc
adc
push
rorl
xchg
xchg
sub
xor
mov
sahf
sahf
and
jbe
clc
in
push
cld
xor
sahf
push
rcll
cmp
push
nop
fmuls
mov
inc
lret
dec
outsw
add
xor
rcr
fidivrs
xchg
sarl
out
sbb
adc
or
sub
cwtl
sub
and
mov
cmp
cld
movsb
lods
adc
loopne
andl
cs
arpl
cld
push
cltd
adc
rcl
rcr
ficoms
stc
mov
dec
in
sbb
in
mov
je
mov
inc
sbbl
add
jecxz
sbb
cmp
mov
fisttps
push
or
addb
jmp
pop
fwait
or
lods
jmp
jl
xchg
jo
ficoms
dec
add
out
outsb
and
js
loop
cld
pop
arpl
fadds
cli
add
jnp
dec
adcl
fsubl
xchg
shr
popf
jp
add
xchg
adc
test
cmpsb
mov
decl
push
mov
insb
loop
fstps
fstps
mov
inc
aad
insb
iret
les
stos
jl
push
mov
test
jmp
adc
shll
insb
pushl
mov
pop
lods
xchg
lret
mov
cmpsl
test
sub
push
insb
repz
fists
jno
push
or
inc
lods
mov
shl
or
pop
sub
fadds
and
aam
mov
sbb
fistpl
sub
push
push
adc
das
mov
cld
mov
js
sbb
jae
ficoms
push
adc
jae
outsl
inc
push
cmpsl
push
dec
or
sahf
sbb
sbb
ret
loopne
sti
fdivl
bnd
repnz
das
jmp
lods
repnz
leave
std
lods
adc
sbb
leave
fnstcw
out
add
mov
inc
jecxz
loope
insl
jne
or
or
scas
mov
ja
gs
and
push
dec
int3
in
nop
mov
sbb
lock
pop
mov
lds
push
aas
test
push
iret
push
xchg
and
mov
shr
jle
test
les
push
setne
cmp
lcall
out
pop
lea
and
inc
sbb
aas
mov
sub
inc
mov
scas
les
outsb
sub
xchg
mov
rcpps
inc
movsl
out
daa
push
das
out
pop
mov
movsb
cmp
push
cwtl
fidivs
sub
pushf
fcompl
pushf
fyl2xp1
popf
and
hlt
pop
jae
incl
shl
mov
and
into
cld
shrb
push
push
xchg
push
imul
bound
or
inc
hlt
mov
or
cltd
repnz
mov
js
mov
lahf
inc
lret
std
and
jecxz
rcll
cmp
jno
cwtl
cmp
or
into
mov
xor
dec
xlat
cmp
or
shl
sti
cmp
fwait
shlb
jg
xlat
in
cmp
fsubrl
scas
lea
imull
stc
outsb
sub
js
cmp
mov
jp
rorb
cmc
lods
push
dec
and
or
and
cmpsl
cmp
push
sub
mulb
js
es
jne
lea
cmp
std
addb
ds
xchg
aaa
das
lret
or
aaa
in
or
push
das
repnz
bound
in
cmp
push
jo
sahf
or
push
mov
or
pushf
push
ds
mov
inc
cmpb
rol
sub
into
add
push
jmp
adcb
pop
fstps
and
dec
adc
push
loopne
or
lea
sbb
fistps
std
jnp
aad
lcall
sbb
mov
add
sbb
push
ret
sti
mov
sbb
adc
add
ss
mov
xlat
xor
divb
cmp
sub
bound
out
popf
pop
sub
lret
icebp
popa
loopne
jmp
jae
fs
ljmp
sbb
je
incl
mov
inc
ret
cmc
int3
loope
pop
popa
lds
lret
mov
daa
push
mov
loopne
cmc
mov
fsubp
push
mov
lea
into
sbb
bnd
push
jns
fs
fldcw
add
fcomps
pop
or
stos
repnz
sub
dec
push
xchg
data16
mov
fldl
jbe
lret
scas
adc
in
jae
jns
push
dec
inc
jae
pop
out
int3
dec
rol
rcrb
aam
pusha
xorb
xchg
sbb
repz
xor
divl
mov
xchg
dec
jnp
mov
jae
std
adc
in
inc
cld
push
jp
add
jp
cmp
or
repz
xchg
and
scas
andl
mov
popf
or
push
add
jnp
movsl
loope
and
pop
mov
subl
test
mov
sub
pusha
or
adc
or
rcrb
jl
mov
and
xchg
outsb
fisubl
mov
mov
test
ret
fsubrl
lods
mov
mov
mov
dec
add
scas
or
and
rolb
dec
inc
pop
lock
fiadds
mov
out
push
test
dec
ljmp
xor
test
test
mov
imul
push
dec
push
int3
push
sbb
and
popf
imul
shrb
out
imulb
mov
mov
idivl
push
stc
repz
xchg
jmp
xchg
push
pop
jg
add
lods
sub
xchg
sub
lea
lea
mov
stos
add
imul
cmp
xchg
test
lahf
or
hlt
imull
std
imul
mov
lds
cmp
out
push
dec
in
push
sbb
mov
jns
pop
push
xor
mov
ret
movsb
sbb
iret
das
rolb
cmp
or
test
enter
push
cwtl
fisubrl
push
decb
sub
dec
jno
fisttps
inc
push
xchg
or
repz
dec
inc
shlb
fwait
enter
mov
ret
sub
int3
mov
je
lea
push
inc
leave
icebp
sub
push
in
inc
fwait
adc
cs
mov
call
push
fnstsw
daa
fs
xor
dec
push
adc
ja
or
xlat
movsl
ret
and
jb
jb
xchg
xchg
sub
roll
out
loope
and
push
mov
shll
inc
sub
outsl
xchg
into
pop
fs
mov
ljmp
fmull
daa
mov
data16
enter
scas
pop
mov
pop
insl
pop
dec
xor
dec
aaa
xlat
adc
mov
inc
cwtl
jmp
popf
pusha
cwtl
xchg
push
adc
pop
lods
stos
jo
call
jl
jnp
bound
mov
xchg
jge
addr16
js
cmp
push
xor
shrb
mov
lods
popf
leave
stos
lock
mov
jp
cmp
fldenv
testb
mov
sbb
pop
data16
movsb
mov
les
pushf
dec
out
in
data16
mov
jp
leave
iret
data16
inc
and
fcompl
pusha
sbb
mov
cld
aas
mov
sub
pop
insl
jle
repnz
pop
ljmp
mov
inc
arpl
mov
jmp
sbb
into
jl
jg
xor
jg
shrb
adc
and
mov
mov
icebp
push
stc
cli
rorb
rolb
xchg
jmp
repz
push
or
shll
push
scas
mov
add
arpl
dec
test
and
movsl
cwtl
cmp
out
xchg
sbb
lea
shlb
fs
and
cli
aad
int
and
adc
enter
insb
mov
mov
sub
jl
pop
repz
fldt
out
stc
cmp
cmp
pop
iret
inc
loopne
pop
dec
add
mov
jp
nop
ss
mov
jns
mov
jb
ljmp
mov
push
mov
pushf
repz
mov
lods
call
sbb
xchg
pushf
jns
jge
movsb
orl
mov
pusha
lods
int3
mov
xor
incl
adc
icebp
mov
lea
mov
jg
xor
jae
sbb
fcmovu
stos
call
test
and
or
andl
sub
cs
or
insl
nop
xchg
xchg
repnz
fldcw
stos
dec
pop
leave
mov
adc
adc
dec
cmc
aaa
cmp
or
pop
outsl
jae
jbe
in
out
cmp
sub
mov
bnd
mov
jae
stos
popf
gs
mov
loope
ja
pop
lret
xchg
pop
out
nop
pop
sbbl
rorb
xor
shll
adc
incl
push
and
jno
in
xor
jno
arpl
out
add
xlat
js
mov
jmp
dec
movsb
nop
out
pop
mov
stos
dec
cld
pop
ret
roll
cmpb
cwtl
mov
or
out
jmp
fwait
adc
ret
lret
mov
cmp
outsb
jne
xchg
gs
inc
cli
shll
sub
mov
shrb
push
in
nop
imull
in
mov
ja
gs
ljmp
data16
jb
movsl
dec
jb
cwtl
pop
and
mov
aad
lret
cmp
mul
pop
add
sbb
fldcw
stos
loop,pn
sub
fidivs
sub
mov
mov
popl
std
xchg
inc
pop
rolb
fdivrs
inc
addr16
jnp
scas
jne
jb
imul
mov
cmc
or
push
ds
cmp
mov
cmp
xchg
fs
call
adc
ret
pop
mov
xchg
xor
and
xlat
pop
insl
jbe
gs
jae
dec
cmpsb
inc
push
inc
dec
popf
adc
stos
inc
jae
aaa
pop
in
jae
pop
stos
add
iret
cs
push
fnstenv
mov
insb
inc
outsl
lds
mov
push
ror
and
ja
or
or
xor
cmp
gs
dec
and
mov
mov
jae
mov
shrb
daa
rcll
xor
mov
cmp
xchg
cli
outsb
and
xchg
xor
pusha
sbb
adc
das
stos
lock
lcall
clc
push
mov
sarl
mov
sub
mov
push
scas
shlb
xchg
std
adc
and
pop
sub
dec
xchg
mov
cmpsl
lods
mov
cmp
mov
rolb
icebp
popf
sub
addl
adc
loope
or
or
adc
aaa
movsl
dec
jmp
mov
xor
pusha
xor
fstpl
fidivl
clc
add
aam
xor
cmp
xor
push
push
arpl
jle
enter
loope
ljmp
xor
xchg
or
push
mov
or
mov
sysexit
lods
cmp
mov
push
loope
loop
cmp
mov
dec
ss
outsb
ds
xchg
mov
insl
sub
xor
scas
sub
fadd
lock
ja
jno
cmp
in
push
jno
or
cwtl
outsb
scas
repz
in
mov
daa
adc
jl
lret
push
movsb
xlat
sbb
dec
popa
jp
and
in
out
ds
push
bound
jnp
shlb
movsl
jno
notb
push
xchg
test
repz
test
jmp
mov
movsb
or
popf
sub
sub
test
outsl
clc
sbb
js
icebp
cs
sbb
dec
jp
not
arpl
sti
cmp
stos
xor
hlt
mov
lahf
adc
dec
push
pop
add
jg
push
push
push
hlt
dec
dec
int
sbb
sbb
push
jecxz
dec
daa
data16
xor
push
and
jns
lret
xor
lret
into
lods
and
cmc
push
das
filds
push
into
mov
ja
mov
cli
fsubrp
jbe
in
sub
push
push
int
adc
xorb
mov
add
pusha
inc
rclb
or
push
aaa
jae
loope
xchg
xor
adc
aam
inc
aas
lret
cmpl
fistpl
shlb
sarb
cmp
sbb
or
mov
push
mov
fstp
cld
popa
sbb
leave
mov
or
mov
int3
ss
or
cmpsl
in
add
test
or
ret
or
add
adc
sahf
dec
cmp
push
push
frstor
and
daa
push
dec
mov
fidivrl
mov
imulb
bound
jl
cmp
idivl
or
jbe
cmc
or
roll
xor
insl
loopne
push
pusha
out
inc
or
dec
ret
sbb
xorb
cmp
xor
xchg
insb
movsl
shrb
sub
or
mov
sbb
push
lea
lock
xchg
outsl
les
mov
cmc
in
ja
fsub
dec
pop
inc
mov
enter
aam
xor
sub
lods
push
adc
sti
lods
cld
mov
or
cmp
add
or
fmull
xlat
jb
into
xchg
jo
adc
mov
sti
cmp
sub
push
mov
mov
sub
pop
das
mov
mov
icebp
jmp
call
cmpl
add
cmp
loopne
repnz
repnz
sub
push
xchg
or
call
xchg
push
adc
cmpsb
test
scas
push
mov
mov
clc
adc
or
add
xchg
inc
subl
mov
xorb
pop
xor
sub
mov
shll
mov
or
push
gs
cmp
outsl
cmp
inc
loop
loope
cli
in
in
fsubrl
mov
jne
and
mov
mov
std
jae
mov
stos
into
adc
icebp
out
xor
xchg
ret
mov
add
sbbl
sbb
dec
pop
int
xchg
fistpl
jne
push
sbb
fcmovu
pop
add
cmp
mov
mov
sbb
jecxz
out
push
loop
xor
pop
lahf
mov
lods
mov
and
sub
cmp
jg
sbb
icebp
sti
cwtl
dec
jecxz
je,pt
mov
call
sbb
loop
shlb
movsl
insl
in
inc
rcrb
aad
in
cmpsl
cmpsb
xchg
mov
and
out
xor
add
les
xchg
sub
jns
lcall
cmp
pop
insl
push
sub
bound
adc
insb
dec
push
and
jmp
hlt
rcrl
into
enter
xchg
pushf
jno
jae
test
xchg
rcrl
jo
sbb
popa
push
les
mov
rcr
mov
pop
fcomps
test
or
add
add
movsl
sbbl
jnp
mov
out
pop
xor
jne
xchg
pop
mov
mov
cs
dec
fs
add
and
xchg
or
lcall
out
lcall
stc
shrb
jne
stc
sbb
test
inc
mov
xor
sbb
stc
data16
cmp
lret
push
pop
pop
insl
push
stos
mov
stos
sub
repz
push
rcrl
push
arpl
gs
mov
faddl
popf
adc
fsubl
mov
mov
cmp
addr16
loopne
add
addr16
fmull
je
adc
ss
daa
lods
outsb
bound
pushf
shr
out
outsl
xchg
and
std
mov
push
mov
xor
mov
inc
pop
insb
push
sbb
ds
andl
or
fldl
push
movsl
push
or
xchg
pop
rcrb
dec
lret
jae
cmpsl
es
mov
jle
mov
xchg
imul
adc
repnz
insb
jae
push
mov
pop
inc
or
mov
xor
sbb
sub
notb
decl
out
sub
icebp
jle
push
add
mov
pop
inc
cwtl
lret
cwtl
jcxz
mov
push
mov
mov
sub
push
cmp
push
cmp
addr16
push
outsl
xor
faddp
fimuls
shrb
aad
push
fnsave
sbb
inc
bound
add
int3
or
pushf
jnp
shll
inc
fsubrl
mov
adc
or
insb
out
outsb
icebp
inc
dec
sub
lret
sub
les
xchg
xchg
addr16
popw
sub
mov
pop
into
sbb
subb
je
pop
mov
xchg
xlat
fistl
sbb
dec
aas
pop
in
loop
xchg
jle
pop
push
rcl
and
les
inc
repnz
inc
dec
pushf
gs
rorl
mov
xor
jge
outsb
fiaddl
out
popa
sar
mov
cwtl
rorb
sub
aas
jge
inc
add
inc
aaa
jmp
ds
xchg
push
movb
imul
cmc
xor
cmp
cmp
fwait
xchg
repnz
addr16
sar
sarb
in
movsl
movsl
xor
and
aad
inc
cld
or
aad
push
test
mov
fs
imul
mov
xchg
cmp
jmp
call
and
ja
shl
push
fnsave
stos
aaa
sbb
pusha
cmp
and
lea
addr16
aam
sahf
sti
jnp
adc
push
stc
into
cmpsb
movsl
loopne
out
fwait
movsl
fadd
push
out
insb
sbb
dec
mov
lret
xor
push
mov
js
test
and
ret
enter
xor
push
inc
xchg
inc
mov
in
imul
aas
stos
pusha
fwait
out
cmovnp
xor
bound
jle
aam
jns
sbb
and
jb
inc
aaa
test
nop
sub
xchg
in
push
sub
bnd
xor
or
mov
or
int
jno
xchg
push
sub
fistpl
mov
mov
mov
lea
fstps
sbb
mov
inc
stc
test
xlat
shrb
sbb
mov
fdivl
lcall
outsl
dec
pop
lds
insb
sbb
and
scas
sti
pop
xor
int
and
xor
loope
jne
shlb
or
rclb
jns
push
xchg
lcall
fisubrl
jne
xor
mov
adc
lods
popf
inc
incl
jmp
jb
cmp
jne
push
xor
je
lods
pop
stos
iret
pushf
movntq
je
push
pop
jmp
loopne
stos
inc
rcrl
push
lret
sub
arpl
lahf
std
pop
or
jmp
test
das
inc
cmc
mov
sub
mov
aad
mov
stos
dec
adc
out
les
adc
rclb
push
fsts
int3
lods
hlt
movaps
push
pop
mulb
or
js
xor
pop
inc
push
int
xor
mov
inc
inc
jne
or
sarb
popf
sbb
aad
cmc
dec
addb
mov
xor
add
loop
xchg
mov
push
push
sbb
xchg
cmp
sub
lea
lret
and
sbb
shll
dec
adc
arpl
imul
call
stos
shrb
fwait
aad
mov
mov
add
mov
cmp
pusha
mov
leave
or
mov
stc
fsubp
frstor
movsb
mov
inc
xchg
inc
test
or
mov
cltd
pop
lods
fidivs
leave
mov
mov
int
sti
jl
push
fisttpll
pop
add
lods
mov
push
scas
dec
and
lret
or
int
inc
fsubl
fidivl
push
mov
jle
and
cmp
fisttps
ja
shlb
cmp
leave
adc
xlat
iret
fwait
ret
fdivrl
loopne
sub
mov
mov
cs
jmp
mov
repnz
inc
test
ja
adc
xor
mov
ja
or
add
out
xchg
ficoml
bound
pop
sub
xchg
clc
fcomps
adc
popw
and
subl
mov
loop
stos
mov
mov
ret
jmp
mov
adc
imul
fbld
jb
dec
lods
cmpsl
fdivs
test
andl
inc
xchg
arpl
sub
loope
icebp
push
cmpsl
repz
and
xor
sbbb
aas
sbb
fs
es
cltd
in
inc
ds
inc
xchg
add
test
pop
xchg
dec
rolb
pop
mov
cmovnp
mov
mov
fdivrl
pusha
jp
dec
fwait
mov
cmc
xchg
stc
into
and
icebp
jle
push
and
addr16
fisttps
repnz
push
ja
cmpsb
out
ss
pop
push
push
mov
loopne
jb
xor
iret
and
mov
jecxz
roll
subb
shll
pop
mov
lods
into
gs
jmp
cld
jge
push
and
pop
dec
fwait
std
push
repz
cli
inc
sub
mov
popf
mov
orb
mov
icebp
addl
js
push
mov
pop
shlb
in
jne
movsl
add
dec
je
imul
cs
xchg
dec
xor
test
cwtl
call
repnz
xchg
jbe
adcb
inc
loop
push
adc
notl
cmp
clc
mov
cmpsl
fwait
xor
push
repz
inc
enter
ret
jo
dec
ja
leave
cli
js
jecxz
outsb
repnz
mov
mov
pop
cmp
mov
cmp
ss
or
cmp
outsl
daa
out
pop
hlt
pop
mov
add
fldcw
mov
stc
and
sbb
lret
pop
sbb
add
fisubrs
aam
movsb
fnstenv
in
push
lock
ret
leave
mov
out
mov
mov
pop
test
push
cmpsb
shll
cli
scas
mov
int3
push
insb
mov
adc
popf
jecxz
incl
adc
xor
js
aad
cs
arpl
cmp
clc
sbb
mov
enter
pop
repnz
cli
stos
adc
or
or
mov
sub
push
test
adc
sbb
in
push
pop
mov
mov
jno
out
jl
dec
pop
push
call
aam
scas
and
scas
jge
fists
cmp
pushl
mov
and
ret
mov
jp
shll
daa
imul
lea
mov
pop
and
xchg
xchg
or
dec
adc
jg
cld
lods
adc
movsb
unpcklps
mov
ret
and
loopne
adc
cld
push
fwait
pusha
ret
mov
inc
jp
fcomps
sbb
inc
notl
rcrl
mov
aad
cmp
cmp
insb
mov
ja
push
movsl
jle
inc
cmp
jecxz
aaa
aaa
out
shl
mov
or
xor
add
jmp
scas
stos
add
ja
mov
pushl
stos
xchg
in
mov
push
out
daa
rolb
cmpl
cmp
stos
and
aaa
lret
roll
lea
mov
imul
daa
aam
inc
pop
jnp
cmc
xor
std
stos
dec
mov
mov
fidivs
push
adc
cmp
orl
push
clc
push
addr16
call
sbb
test
lods
xchg
xchg
js
sub
test
fbstp
hlt
mov
test
inc
xor
jb
inc
movsl
fldt
sub
mov
stc
hlt
pop
xlat
lret
push
in
adc
cmp
xor
mov
movsb
test
lea
xor
ret
xchg
cld
mov
call
adc
push
out
dec
ret
sbb
clc
sub
lret
cld
push
imul
mov
jle
in
fsubrl
xchg
rcll
cmp
sbbl
fldenv
lret
out
scas
ret
jno
nop
cmp
dec
mov
xchg
inc
jmp
mov
mov
pop
mov
mov
xchg
jmp
popa
and
adc
call
or
push
jmp
in
pushf
int
popl
lods
mov
pop
es
xor
xor
pusha
lods
sbb
mov
xor
sarl
loop
or
jecxz
push
insb
movsl
sbb
push
add
ret
xchg
cmp
cmpsb
movb
xor
andb
in
adc
or
cmpsl
shrb
sub
cli
sbb
jnp
sub
aam
mov
shlb
scas
adc
xchg
and
dec
and
mov
cld
mov
cs
nop
rorb
icebp
adc
pop
mov
adc
fstps
add
lods
test
xchg
adc
stos
cmpsb
inc
push
sbb
and
clc
addb
hlt
addl
push
xchg
or
pop
fadds
into
push
pushf
loope
sub
dec
lock
sub
test
test
jns
call
pop
mov
lea
clc
xchg
sbb
mov
inc
mov
pop
sbb
call
cmc
mov
sbb
jmp
cmpsb
and
cli
mull
repz
mov
sbb
rcl
clc
out
adc
sub
icebp
nop
and
add
mov
shl
loop
lods
adc
sti
shr
fcompl
jge
out
mov
sub
jge
icebp
hlt
mov
sahf
jnp
inc
pop
popf
loop
je
jge
sub
shrl
push
or
add
scas
jp
push
and
lcall
xchg
cs
mov
ds
ret
mov
cld
data16
xor
fldt
mov
xor
mov
pop
sbb
add
push
push
lds
arpl
jae
decl
add
dec
std
sahf
fimull
pop
push
or
test
xchg
add
adc
lock
js
xor
sub
lret
push
jne
sbb
add
mov
xchg
sahf
inc
mov
or
pop
mov
in
or
nop
lahf
ds
ret
fwait
cwtl
data16
les
and
push
dec
push
outsl
loopne
ljmp
ss
sub
push
adc
jge
inc
sbb
mov
jno
ljmp
fwait
jo
js
mov
sbb
cmp
adc
sub
jp
push
pushf
or
aad
aam
jb
outsl
xor
and
add
lret
mov
mov
lods
adc
aam
jp
push
orb
addr16
ds
dec
lea
xchg
out
orl
loop
and
cmc
mov
jmp
jae
out
xor
sbb
jne
add
xchg
std
jmp
mov
mov
sub
repz
popa
dec
mov
xor
shl
nop
xchg
mov
scas
xor
test
push
fwait
or
cmc
std
dec
pop
jnp
cmp
push
xor
mov
sbb
adc
test
dec
aad
mov
movsb
jns
mov
pushf
lcall
cld
adc
cmp
out
jb
fs
lcall
pop
shlb
sub
mov
nop
xlat
stc
or
mov
sub
iret
das
push
gs
pusha
decb
and
fmul
mov
sbb
into
sub
test
xchg
orl
add
divb
jno
es
inc
push
inc
dec
xor
sub
xchg
bound
hlt
dec
and
shll
push
outsl
jo
and
push
fnsave
mov
ret
and
mov
cli
into
testl
icebp
sarb
pop
adc
sbb
out
fdivrs
jb
clc
xchg
cld
xlat
cli
addr16
push
jnp
sbb
adc
sub
xor
mov
cs
or
dec
ret
or
push
jno
out
pop
leave
mov
or
cltd
loopne
aaa
lcall
mov
add
pop
cmpsl
std
cmpb
cltd
inc
testl
mov
lds
and
mov
hlt
jns
fnstcw
jb
inc
jmp
imul
enter
es
repz
sbb
dec
outsb
shrb
adcl
push
mov
push
cmpsb
add
loope
sub
pop
adc
pop
jecxz
hlt
cmp
xor
stos
fildll
mov
pop
ss
cwtl
sarb
push
repnz
in
pop
xchg
lcall
out
addr16
mov
lcall
aaa
ljmp
adc
xchg
push
fwait
add
mov
pop
loopne
xor
xchg
and
or
xchg
cmp
loope
sub
sub
mov
mov
mov
cmp
ljmp
cmp
test
leave
push
dec
pusha
pop
or
popf
aas
ret
popa
add
out
inc
pop
cld
das
mov
sub
outsl
cmc
jne
adc
pop
pop
cld
mov
sbb
xchg
or
sbb
testb
push
ds
cld
sub
mov
xor
jnp
stos
and
es
pop
dec
xor
into
lret
mov
hlt
lds
dec
and
pop
pop
dec
mov
sbb
sub
adc
les
je
outsb
fistpll
pop
or
negb
cli
or
inc
popa
jb
ret
orl
jmp
xor
aaa
nop
outsb
add
out
jns
inc
mov
leave
aad
int
mov
stc
hlt
push
pop
sbb
clc
test
inc
inc
lret
cwtl
fcmovne
ja
mov
int
test
loopne
mov
sti
adc
popf
adc
mov
cmpsl
ss
add
jbe
cmpb
sbb
fistl
push
cmp
pop
jno
push
repz
out
roll
xor
sub
inc
and
lahf
in
in
fwait
pop
nop
lods
mov
imul
push
push
syscall
repnz
lods
les
int
add
sahf
mov
mov
mov
inc
pop
xchg
dec
cmp
mov
int
in
cmp
aaa
rorl
cltd
push
sbb
sub
xchg
les
add
mov
hlt
jb
pop
pop
jmp
test
notl
cmpsl
cltd
push
test
mov
mov
ret
cmp
pop
ja
aam
movsb
pop
lock
cmc
xor
int3
insb
xchg
imul
xchg
xor
mov
rorb
jbe
mov
ret
mov
daa
imul
stos
or
jb
cmc
fnstenv
fdivs
das
out
push
and
out
jecxz
cli
push
mov
in
mov
sbb
arpl
fstpt
fiadds
out
les
imul
sub
lock
dec
addr16
mov
jecxz
mov
jnp
xor
jecxz
add
fiadds
mov
or
sbb
sbb
sbb
pop
sbb
inc
inc
mov
data16
mov
or
add
scas
mov
pop
std
push
jb
and
dec
pushf
adc
adc
test
xchg
adc
sub
push
hlt
lret
and
cltd
fisttpll
cltd
inc
test
int3
aas
xchg
ficoms
dec
sti
fldl
mov
and
ret
pusha
in
mov
sbb
rclb
cmpsb
push
stc
mov
dec
mov
nop
dec
stc
sub
fisttpl
push
int
test
mov
pop
mov
xchg
mov
insl
add
icebp
adc
lret
cmp
mov
out
lock
sbbl
dec
lcall
out
bound
xchg
or
test
and
pusha
leave
mov
mov
test
cmp
pop
sbb
inc
sub
repz
aas
push
hlt
scas
sub
sub
jl
imul
out
push
addr16
jae
repnz
hlt
sub
les
xchg
lea
or
xlat
test
pop
out
inc
inc
mov
mov
dec
adc
cltd
cmp
dec
jo
rolb
fidivl
mov
dec
out
mov
test
mov
adc
ret
pop
roll
sbb
shll
or
scas
dec
push
or
or
push
orb
pop
jb
insb
call
inc
in
cltd
test
leave
sti
mov
stc
or
lcall
fnstcw
and
out
xchg
icebp
lods
mov
xorl
push
dec
sub
push
xchg
push
jg
mov
push
sub
inc
xchg
dec
lret
jmp
jo
mov
xchg
adc
add
sub
dec
loope
jle
into
push
jae
push
fidivrl
ds
incl
pop
addb
les
and
and
dec
shl
pop
call
nop
lcall
xor
xchg
cmp
inc
aam
dec
inc
lcall
cmp
int
ja
adc
loope
add
pop
fiadds
aaa
pop
mov
mov
fstpt
sti
mov
pop
jne
mov
mov
add
push
dec
cmp
cmpb
insb
ss
nop
xor
icebp
sub
imul
inc
fsts
loope
cmp
cltd
ret
fisttpl
loope
jge
mov
int3
imul
out
mov
cmpsw
mov
lock
cmc
cs
cmp
cmp
xor
pop
insb
or
in
sarl
cli
mov
mov
inc
add
pop
cld
fildll
xchg
push
sbb
mov
adc
push
jecxz
cs
iret
mov
loope
cld
add
stc
lds
mov
daa
cmpsb
dec
and
adc
sbb
lahf
pop
jge
pushf
lds
xchg
inc
sbb
pop
inc
stos
adc
push
pop
ret
shrb
call
roll
sbb
xchg
lcall
pop
int
mov
mov
and
rcrl
pop
add
inc
aam
pop
popa
mul
jge
xor
js
andb
fisubrs
movsl
pushf
int
cmp
sub
dec
adcl
sub
enter
xor
sub
cli
pop
test
mov
inc
mov
pop
sbb
ficoms
or
loope
inc
sub
and
add
pop
scas
shr
lods
ss
sub
jp
adc
in
stos
cmp
mov
repz
ds
or
in
shl
mov
add
mov
cmp
test
shl
jo
arpl
imul
int3
icebp
mov
mov
je
sarl
or
fwait
shrl
mov
add
pop
adc
pop
cmpsb
cmp
testb
repz
inc
sub
popa
mov
std
stos
xchg
out
je
and
and
test
sbb
outsb
push
mov
mov
ret
lcall
add
xor
fwait
and
into
fimuls
inc
and
jg
aad
add
mov
ret
jecxz
movsl
add
test
inc
xchg
sbb
repnz
sar
mov
outsb
dec
sub
shl
xchg
push
int
fisubrl
ja
sahf
mov
inc
sbbb
cli
add
xor
ror
bound
mov
mov
cmpsl
cli
movsl
ja
das
or
pop
inc
ret
mov
pop
xor
pop
cwtl
call
xchg
mov
dec
xchg
test
jl
sbb
cs
xor
xor
pop
jg
or
cmp
lret
scas
aas
arpl
mov
data16
xchg
pop
mov
pop
arpl
aas
mov
loope
pop
aas
xchg
xor
mov
gs
pushf
xchg
push
sbb
subl
mov
das
mov
sub
adc
out
imul
loop
data16
stos
mov
mov
xor
arpl
sahf
jg
jmp
adc
subb
add
and
aaa
int
aas
into
push
push
out
repnz
sub
adc
cmp
push
sub
les
sbb
jmp
dec
lods
jbe
mov
out
cmp
insl
das
fst
mov
jno
mov
ljmp
push
adc
mov
dec
adc
repz
jge
xor
push
out
sahf
and
mov
inc
sbb
xchg
pusha
or
push
jnp
sbbb
enter
pop
sub
jno
hlt
jb
jmp
or
fidivl
or
inc
fadds
aaa
rcl
stos
sahf
fldcw
push
xchg
lods
es
lret
aas
std
fiaddl
sub
inc
jne
mov
std
mov
lds
lahf
ljmp
sub
push
push
cs
scas
les
push
add
push
incl
adc
cmp
divl
shlb
xor
sub
dec
lret
addr16
int3
lret
sub
sahf
js
imul
adc
lock
hlt
arpl
shrb
adc
iret
test
lret
dec
add
aaa
add
xor
sbb
add
push
jnp
repnz
mov
addl
loopnew
movsb
test
add
push
xor
push
dec
ja
or
sub
es
pop
cld
pop
cli
or
ret
movsl
out
subl
inc
sbb
orl
pusha
jl
jns
xor
sbb
mov
push
jnp
testl
push
loope
scas
sbb
and
repnz
cmp
inc
add
pushf
inc
sbb
ret
pop
dec
loop
adc
push
stc
gs
or
push
into
adcb
ror
and
repz
vmovups
cs
xor
pusha
addr16
movsb
xor
test
push
pop
int
dec
decl
in
pop
cmp
fisttpll
cltd
ljmp
mov
sti
das
imul
dec
sti
xor
jns
lods
pop
xor
lods
ja
adc
fmuls
mov
cmc
cltd
xor
jne
frstor
push
mov
inc
cmc
mov
je
lea
lds
js
jecxz
pop
icebp
out
insl
sbb
mov
xchg
das
xchg
push
arpl
and
or
jb
arpl
jne
sub
add
iret
jne
xchg
mov
xchg
fwait
in
lea
sub
sub
xor
insl
or
adc
xor
mov
mov
lret
and
inc
loopne
lret
in
or
and
pop
cld
cli
pop
aaa
sub
add
in
adc
imul
bound
dec
add
inc
adc
cmpsl
push
jne
in
test
outsl
mov
cmp
mov
dec
std
xchg
mov
cld
lock
stc
dec
fs
pop
loope
jmp
ret
mov
cmp
cmp
mov
or
dec
outsl
stos
pop
cs
cmp
insb
repnz
iret
pop
fistps
les
jb
pop
stos
les
dec
or
cld
arpl
push
sahf
icebp
push
mov
or
mov
and
das
jnp
push
loopne
movsl
xor
lea
fadds
jle
mov
mov
mov
repnz
adcb
jp
jne
pop
push
loopne
lea
mov
rorl
sbb
inc
sub
out
cmp
lret
adc
cmc
mov
lcall
xor
in
inc
push
shl
leave
jne
pop
and
adc
fs
arpl
idivl
add
jnp
les
out
inc
mov
xor
sub
adc
jp
sub
jne
mov
inc
jbe
sub
sub
mov
cli
mov
push
mov
mov
xchg
dec
lahf
lcall
icebp
jne
movl
sub
mov
dec
and
sbb
mov
insb
fldlg2
cwtl
repz
sbb
idiv
roll
mov
mov
mov
ljmp
imul
aaa
and
adc
inc
mov
adc
pop
jo
jmp
or
mov
dec
notb
cmp
outsl
jmp
dec
cmp
repz
aam
in
pop
fnstsw
pushf
xchg
pop
and
and
push
cltd
xchg
loop
cmp
mov
mov
insb
pop
mov
xchg
ret
sub
aas
mov
mov
test
sub
loope
adc
fwait
testl
and
inc
cmp
in
decb
flds
push
and
enter
xchg
int
iret
js
mov
push
mov
and
les
loope
aad
cmp
jno
les
inc
scas
push
les
clc
mov
das
clc
stc
fstps
call
xchg
jle
aam
mov
dec
sbb
mov
fsubl
push
scas
popa
test
lcall
lcall
fsqrt
int3
mov
mov
mov
test
cmp
jnp
test
cs
cmc
push
sub
adc
loope
mov
pop
xlat
lock
mov
in
inc
cmp
push
jmp
add
popa
aam
into
xchg
iret
sub
out
mov
outsl
inc
insl
rol
stos
test
movntq
jge
pop
lds
cs
outsb
pop
mov
ja
fwait
mov
push
adc
shlb
sub
test
lods
push
ljmp
and
cmp
lock
fucomp
sti
xchg
out
pop
or
jmp
sbb
inc
inc
faddl
scas
and
adc
shrb
ficompl
in
xlat
jmp
shlb
lds
lock
pop
int3
rorb
adc
push
ret
les
jo
sbb
in
dec
mov
testl
test
push
xchg
mov
fldl
repz
jns
or
inc
aaa
fstpt
cli
adc
dec
and
rclb
adc
sub
das
mov
repnz
xchg
les
sbb
dec
push
cld
dec
adc
ret
clc
push
jge
dec
test
pop
js
adc
icebp
loope
imul
sbbb
push
xor
out
mov
xor
sbb
mov
add
push
sub
add
and
xlat
pushf
ror
jg
fwait
ret
add
jp
testl
jle
shlb
in
jbe
addr16
repnz
add
mov
out
pop
mov
in
lret
sub
jbe
das
jne
aaa
and
adc
cwtl
sub
into
sahf
out
das
repz
inc
fucomip
cmpsb
cmp
sub
lods
inc
pop
pop
leave
outsb
xor
sar
inc
mov
popa
gs
pusha
aad
mov
mov
cmpsl
cmpsl
mov
stos
xor
inc
lods
fdivrl
and
cmc
or
jle
xlat
sbb
scas
insb
and
repz
mov
in
add
mov
or
in
jmp
adc
lahf
ljmp
cmp
dec
imul
lret
scas
jg
sub
adc
push
dec
jp
ret
idivb
movsl
aaa
xchg
mov
lahf
dec
or
dec
hlt
or
mov
or
mov
xchg
mov
repnz
xchg
stos
bt
pop
sbb
or
imul
cmp
icebp
dec
lret
cmp
shll
out
fsts
es
movsl
js
loopne
mov
and
sti
or
es
aad
rorl
dec
movsl
adc
jge
lods
sub
incb
cld
push
xor
or
adc
data16
xor
xchg
ds
and
mov
push
inc
das
jle
arpl
aaa
movsl
mov
mov
pop
cli
mov
xchg
dec
dec
dec
incl
or
xchg
xchg
scas
scas
lock
dec
lret
cmpsb
adc
xor
mov
fnstsw
push
and
lods
cmpsb
mov
popa
adc
pop
sbbb
bound
lcall
mov
dec
push
xor
shl
addl
cmp
xor
lret
stos
mov
mov
lcall
push
sub
mov
fistl
and
in
in
add
shll
push
popa
mov
dec
fcompl
andb
push
xor
jecxz
mov
decl
adc
or
fimull
mov
push
adc
xor
repz
mov
aam
into
add
dec
js
push
and
sub
popa
test
push
test
dec
out
pop
push
sbb
js
push
mov
fmull
lock
ja
jmp
mov
fcoml
mov
repz
lret
xor
aam
xor
mov
ja
cmp
inc
les
rol
lock
adc
sub
push
insb
outsb
lret
jo
xchg
pop
repz
mov
push
xchg
jmp
out
roll
test
mov
mov
jecxz,pt
movsb
out
add
sub
out
hlt
inc
shll
cld
js
aad
push
or
jl
std
sub
add
cs
jne
adc
xor
dec
or
fmul
adc
dec
pop
orb
scas
sbb
repnz
sbb
mov
xor
cld
adc
cmp
pop
cmp
jmp
loopne
dec
or
xlat
stc
int3
pop
sbb
popa
frstor
adc
roll
or
sbb
mov
mov
insb
shll
gs
xor
inc
mov
or
pop
sub
push
mov
out
pop
and
or
filds
cmp
or
mov
add
jns
cli
into
nop
xlat
lret
enter
aad
and
xchg
inc
sbb
scas
ja
or
imul
xor
xchg
push
push
fsts
sub
xor
aad
dec
fs
mov
movb
bt
sbb
cmp
insb
out
add
mov
cmc
test
or
std
jnp
ja
cltd
data16
movsl
dec
loop
or
xor
repnz
in
xchg
and
sub
fs
or
pop
and
adc
dec
sti
std
jge
xor
sub
pop
xor
lock
mov
jge
div
sti
jl
sbb
out
cwtl
sub
faddl
cmpb
inc
repz
pop
out
pop
mov
out
ljmp
in
pusha
ljmp
inc
mov
in
adc
aad
out
mov
mov
push
js
mov
lods
jae
popa
pop
std
xor
insb
aaa
and
int
push
mov
mov
pop
adc
mov
scas
adc
cs
sub
in
sbb
leave
jb
dec
push
pop
and
imul
lret
xchg
jmp
in
sarb
mov
incl
xor
jmp
push
mov
cmpb
mov
mov
enter
sbb
es
iret
jle
and
dec
cmpb
xchg
jne
push
jp
ss
rcrl
mov
mov
adc
cwtl
push
aad
movl
outsl
sub
add
dec
out
dec
sbb
cmpsb
cmp
adc
popa
pop
stos
int
outsl
arpl
cltd
std
subb
or
das
pushw
push
cmp
xor
and
push
sbb
rorb
fucomp
mov
dec
sbb
sub
fistpl
dec
out
cld
or
loope
pop
inc
int
adc
jp
or
mul
mov
loope
inc
std
in
test
jno
inc
sbb
push
dec
rcrl
loop
dec
add
inc
sub
repz
cmc
push
lahf
sub
arpl
mov
cs
mov
or
sub
push
arpl
mov
fisubrs
cmp
add
jl
xor
mov
add
mov
roll
xchg
jp
sub
fld
mov
aas
xchg
aam
out
push
loop
dec
movsb
ljmp
push
in
out
hlt
inc
push
and
scas
fsubrs
cltd
rorl
mov
xchg
cmpsl
sbb
punpcklwd
inc
mov
int3
out
adc
fwait
mov
cwtl
pop
nop
jmp
xor
xchg
jmp
inc
mov
inc
negl
or
int3
cld
jne
loopne
iret
mov
out
ret
mov
push
xchg
fcompl
xchg
mov
lret
or
adc
test
lock
mov
cmc
pop
push
cld
sbb
push
in
and
mov
xor
in
ja
int3
push
add
mov
add
pop
dec
lds
xor
mov
or
fistl
mov
dec
data16
adc
cmpb
ljmp
mov
das
mov
mov
adc
fstpl
dec
xchg
inc
push
mov
sub
jne
push
addl
jbe
xchg
sbb
subl
jno
pop
pop
pop
adc
jmp
orl
mov
stos
and
mov
push
scas
push
push
testb
mov
es
insb
cli
adc
push
cmp
cs
out
jge
mov
mov
mov
rorb
arpl
adc
je
push
xor
loopne
xchg
add
orb
and
push
adc
lock
jle
je
cmp
fsubrl
stos
sub
and
adcl
push
daa
push
lock
adcl
sub
push
in
mov
movsl
jmp
inc
dec
lock
bound
inc
pushf
out
pusha
sub
shr
jge
test
cltd
outsl
pop
rorl
aam
test
adc
push
inc
pop
inc
push
jb
xchg
ljmp
and
in
push
fcomi
rorb
xchg
add
xor
int3
add
cmp
sub
fcompl
shll
lds
ret
pop
out
outsb
fisubrl
jnp
dec
das
jns
xchg
xchg
scas
popf
mov
mov
or
jns
popa
out
jne
aaa
sbb
adc
mov
int3
iret
and
push
rol
in
pop
in
addr16
jne
xchg
fnstenv
mov
or
mov
fdivr
adc
mov
pop
fisttpll
scas
fdivp
pop
jb
pop
imul
xchg
in
cmp
dec
xchg
daa
popa
and
test
or
mov
jbe
scas
roll
adc
push
fsubrs
xor
in
ljmp
or
out
adc
ss
movl
arpl
lahf
push
push
sahf
repnz
scas
sub
dec
out
cmp
test
in
sbb
daa
rol
stc
push
add
or
fisubrl
or
cmp
outsb
addr16
sbb
inc
clc
ret
or
int
xor
popl
cmp
mov
push
jnp
xchg
push
stos
out
xor
fisubs
cmc
bnd
jno
and
adc
fbld
cld
jp
xor
or
dec
add
xlat
nop
scas
fcoml
jle
mov
rorb
jmp
sahf
add
or
insb
cltd
or
std
mov
lds
cmpsb
pop
jns
or
popa
inc
push
in
xor
mov
xchg
pop
out
in
sub
push
das
cmc
sub
and
int3
fstl
daa
xchg
mov
loop,pn
insb
cmp
xor
call
mov
jmp
dec
int3
push
push
leave
movsb
and
sbb
xchg
or
jge
xor
inc
mov
jnp
data16
lods
cs
pushf
sub
inc
pushf
lods
cld
test
xchg
pop
jae
inc
jne
or
sbb
cmp
fisubrl
xor
push
or
loop
inc
imul
cld
mov
cmp
cmpsb
test
xor
lods
aaa
sbb
jmp
pop
cmp
fists
push
push
in
jecxz
into
bound
sbb
add
cmp
xor
push
dec
mov
xchg
cmp
adcl
cmp
push
or
sahf
pop
push
loopne
outsb
push
sub
in
js
or
sub
insl
dec
testb
inc
add
out
aad
test
push
call
xchg
ffree
sbbb
decb
mov
xorb
loope
xchg
xchg
or
mov
pop
repz
test
xchg
imul
call
cmp
or
mov
mov
jbe
lea
aad
jbe
add
inc
xor
sub
xor
adc
ret
fidivl
mov
xor
mov
push
xchg
mov
adc
xor
dec
adc
icebp
pop
lahf
push
xchg
popf
pop
sub
mov
mov
sbb
mov
cmpsl
dec
pushf
pop
jl
mov
in
and
fsubrl
pop
xor
jg
and
test
xchg
ret
movsl
add
cmc
fdivs
and
rclb
insb
cltd
aas
xlat
ss
shlb
xchg
in
or
js
pusha
rcrl
and
shlb
incb
dec
in
orb
adc
jb
subl
decb
movsl
int
mov
popa
and
in
mov
nop
enter
inc
adc
lods
lods
flds
and
addr16
pop
iret
dec
ss
jns
jno
std
push
and
jns
adc
call
sbb
loope
dec
test
mov
fs
push
pop
clc
clc
adc
pop
cld
lret
inc
psubsb
add
adc
addl
mov
fwait
cmp
mov
lcall
fisttps
jg
pop
fistpl
lods
add
sub
cld
or
mov
bound
addb
jmp
mov
sbb
xchg
lahf
inc
jle
and
pusha
cmovne
lcall
enter
fsubrl
jne
fld
cwtl
add
mov
xlat
cmp
mov
mov
scas
adc
out
imul
add
mov
cmp
lock
jg
inc
shlb
and
dec
cmc
inc
push
push
pusha
dec
or
xchg
imul
mov
pop
data16
icebp
test
pop
popf
adc
adc
pop
push
in
pop
insb
mov
idivl
rcr
dec
ljmp
arpl
sbb
xchg
cmpsl
dec
mov
jecxz
push
bound
mov
mov
jl
not
outsb
roll
testb
sbb
mov
cwtl
test
fisttps
in
jae
mov
dec
push
or
adcb
cwtl
sub
sub
mov
jp
jp
add
lret
pop
jo
cmpsl
mov
fwait
mov
push
cmpsb
pop
adc
push
lock
stos
imul
xlat
cmpsl
xchg
push
data16
or
mov
out
frstor
fwait
inc
and
mov
and
xor
xchg
pop
insl
imul
jnp
gs
sarb
popa
jge
pop
sahf
data16
fucomip
sub
cmp
divl
lcall
inc
mov
push
and
lret
lcall
out
pop
mov
cmc
es
mov
leave
in
lret
repz
in
fbstp
jne
lods
stos
or
push
iret
sub
or
pop
pop
popa
pusha
xchg
xor
lods
jg
or
pop
sub
ds
or
nop
push
pop
test
xchg
inc
sub
mov
call
cmpsb
cmpsl
or
xchg
lcall
cmp
pop
or
sahf
mov
test
mov
push
jg
inc
inc
iret
in
dec
pop
xchg
pop
icebp
cmp
fwait
popf
inc
dec
loopne
ljmp
test
fxch
sbb
sbb
iret
adc
rorl
xchg
push
rorl
es
sub
pop
adc
adcb
in
les
clc
xor
fisubl
mov
add
push
mov
xchg
das
into
lds
cmc
insl
jno
shlb
leave
cwtl
scas
aad
cmp
sahf
cmpsl
leave
fisubs
xchg
jmp
mov
out
ljmp
popf
or
outsl
in
xchg
cs
ret
movsb
pop
xor
inc
dec
repnz
cmp
cmp
sti
cli
gs
sbb
cwtl
sbb
icebp
pop
data16
mov
sub
sub
or
mov
adc
test
add
dec
pop
lcall
cmp
addr16
fisttpll
mov
loopne
lahf
sti
repz
sub
xor
push
dec
and
int
xor
scas
rorl
pop
fidivrl
mov
or
orb
dec
pop
xor
loop
fcoms
rclb
iret
sarl
mov
sub
jle
cmp
cwtl
xor
test
cli
mov
jae
scas
sbb
pushf
push
jnp
loope
mov
cs
adc
mov
hlt
push
nop
fidivs
dec
adc
lock
cmp
int3
shl
sub
gs
fcom
test
xor
ss
icebp
and
jno
sub
lret
adc
add
pop
shll
push
fidivrs
data16
test
push
pop
test
inc
add
lahf
mov
inc
ret
xchg
dec
mov
in
push
imul
or
cmpsb
in
mov
mov
adc
mov
jae
test
push
jb
lahf
repnz
dec
push
jnp
mov
adc
into
aam
into
pusha
jns,pt
rol
sbb
jb
ss
sarl
scas
xchg
mov
xchg
xchg
jecxz
movsb
mov
xchg
and
push
les
pushf
cmp
aaa
ds
insl
outsb
jns
idiv
pushw
pushf
lods
aaa
adc
insb
int3
xchg
and
lahf
pop
adc
out
adc
jge
jno
int
cld
jg
jno
cmp
or
sub
insl
mov
xchg
lahf
loop
push
inc
dec
cmpsl
shrl
sub
pop
js
pop
fdivl
repnz
in
adc
cld
or
addr16
or
inc
dec
or
jno
subl
in
cmpsl
inc
in
orb
mov
push
jnp
xor
adc
out
mov
sbb
popf
outsl
neg
lea
lret
inc
insb
dec
dec
and
xchg
inc
cmpb
pusha
lods
xchg
lods
jnp
cs
cltd
mov
pop
lahf
or
out
xor
mov
out
cltd
outsb
or
test
sub
push
push
sbb
lods
leave
adc
aad
lds
stos
jp
pop
push
cmp
sub
add
xchg
cld
into
mov
push
push
inc
sbb
iret
icebp
xorl
jecxz
sbb
add
mov
jbe
push
or
leave
add
and
push
mov
imul
add
sub
scas
mov
aam
cld
jle
inc
sbb
mov
sbb
sahf
or
sub
arpl
mov
xchg
push
cltd
push
pop
ds
jecxz
in
pushf
add
pop
loope
mov
mov
pop
or
xchg
pop
int
dec
rorl
sub
movsl
fucomp
lock
sub
adc
jb
jp
xchg
enter
adc
xchg
push
jmp
jge,pn
sbb
pop
xchg
fxtract
push
aam
lahf
dec
mov
sub
jae,pn
dec
into
fldt
test
push
stos
andb
xchg
and
ja
jp
sahf
sbb
mov
out
sti
fisttpl
push
jnp
fs
fimuls
mov
popl
xchg
jp
jne
mov
mov
cmp
adc
adc
sub
adc
std
xor
insl
mov
jge
outsb
decl
lods
mov
insb
pop
push
mov
push
jmp
cmp
pop
ss
ljmp
lock
mov
xorl
or
pop
pop
lret
ds
and
inc
cltd
daa
xor
push
mov
and
xlat
xchg
mov
adc
jge
lock
outsb
pusha
fnstsw
divb
into
add
xchg
enter
cmp
xchg
popl
and
call
add
pop
lret
sub
push
test
enter
sahf
cmp
fst
add
insb
jns
lock
out
in
pop
nop
cwtl
cmp
int
faddp
ds
add
dec
jp
leave
lods
aad
lahf
xchg
in
sub
mov
movsl
ja
int3
into
push
movsb
bnd
mov
xchg
pop
add
mov
flds
dec
xchg
lret
cs
inc
out
in
mov
adc
stc
movsb
xchg
adc
int
mov
cmp
add
mov
dec
test
mov
mov
imul
add
in
mov
push
xlat
imul
pop
movsb
pop
jge
incl
notl
in
push
jno
pop
mov
loopne
xchg
iret
cltd
cwtl
lock
test
pushf
xor
mov
inc
inc
push
mov
sti
lods
jns
sbb
adc
sub
gs
xor
xlat
pop
daa
dec
dec
or
loope
or
out
mov
js
or
xchg
jnp
cltd
arpl
mov
cs
dec
jl
xchg
sti
mov
test
sbb
je
and
gs
xchg
lret
cs
pushf
rclb
aas
xor
sbbl
js
or
mov
into
mov
lods
ret
push
enter
into
inc
imul
mov
mov
add
out
cmpsl
lret
pop
cmp
push
cli
jae
movsl
cmp
pop
jle
inc
jge
push
mov
mov
xchg
and
dec
popa
mov
xor
adc
add
jb
repnz
int3
inc
push
inc
mov
rcll
pop
pop
lods
jne
mov
pushf
sbb
or
dec
aam
pop
mov
scas
int
xchg
nop
std
pop
xchg
push
bound
jg
dec
lcall
xchg
mov
jg
add
scas
or
inc
cmp
stos
pusha
outsl
cmpsl
ss
push
push
notb
and
inc
or
hlt
jo
aaa
ffreep
push
mov
movsl
pop
test
daa
stc
add
stc
insl
adc
bound
jbe
cmp
xchg
jns
mov
sarl
ret
movsb
adc
mov
pop
dec
in
mov
mov
mov
pop
aad
cmc
hlt
movsb
xchg
push
jo
mov
xor
mov
xor
test
ret
repnz
cmp
adc
mov
sub
xor
jmp
mov
roll
enter
xor
jns
fistl
and
adc
mov
pop
xor
inc
subl
in
mov
add
nop
int
xlat
xchg
in
int
add
sub
jae
pop
mov
add
or
repnz
sub
scas
adc
sti
lds
iret
adc
in
daa
testl
pop
dec
pop
pop
add
or
mov
cmp
add
cld
jg
call
ljmp
outsb
push
adc
xstore-rng
inc
mov
mov
int
or
dec
jle
sti
call
dec
and
sub
add
xlat
sti
incl
inc
fwait
dec
aad
sbb
scas
and
sbb
inc
in
insl
sbb
add
jmp
pop
xchg
je
add
jecxz
dec
dec
push
inc
fwait
sbbb
jne
adc
in
push
add
dec
add
int3
inc
outsl
pushf
sub
pop
test
mov
imul
push
dec
cmpsb
pop
sbb
mov
in
jg
fisubs
xchg
push
ret
jns
jnp
sbb
out
shll
adc
shrb
sti
pop
iret
inc
mov
test
jle
cmp
rorl
ja
jl
addb
push
clc
xor
push
sbb
jp
ret
fcomi
push
in
mov
mov
or
push
mov
or
cmp
loop
xchg
loopne
aam
sbbl
divb
loope
fiadds
mov
xor
jbe
idivl
leave
cmp
xchg
push
mov
pop
stos
mov
sbb
and
cmp
test
je
jnp
es
in
xchg
inc
les
clc
add
mov
pop
sbb
mov
inc
into
cld
and
pushf
and
mov
cs
push
adc
sbb
and
adc
outsb
mov
pop
out
mov
gs
adc
mov
mov
cltd
xor
push
fsubr
or
shll
stc
mov
jl
push
cld
pop
mov
enter
cmp
mov
push
dec
push
dec
adc
jmp
cmp
lea
adc
movsb
subl
inc
or
ret
nop
inc
inc
rorl
in
pusha
nop
lds
lods
stos
ss
fdivrl
mov
adc
xchg
xlat
cwtl
rorl
xor
icebp
push
cmp
xchg
xchg
mov
pop
imul
inc
fcoms
scas
in
lret
push
ret
sub
dec
xlat
and
out
ss
lret
int3
dec
addr16
mov
push
adc
inc
xchg
rorb
repnz
add
or
lods
jo
fnsave
into
aaa
das
roll
js,pt
shrl
imul
sbb
mov
lret
mov
pop
push
cmp
mov
dec
gs
mov
adc
xchg
add
push
jbe
jge
sub
loop
lods
jecxz
xchg
inc
xchg
mov
loope
rol
dec
jecxz
xchg
xlat
mov
xchg
imul
sub
lahf
pop
mov
fs
dec
icebp
clc
pop
sub
rcll
xchg
outsb
add
neg
std
cli
and
cld
aam
iret
and
push
and
frstor
js
or
mov
je
xchg
rcr
mov
pop
mov
je
push
dec
jge
or
fwait
data16
aad
jmp
js
movsl
rcl
rcl
in
dec
dec
cmpsl
xchg
fisttps
cmp
xchg
xchg
scas
pop
test
xchg
in
in
aaa
mov
push
add
out
insl
aad
sub
ret
sti
inc
xchg
stc
mov
add
adc
pop
cli
fisubrs
ror
shlb
into
ss
push
loope
add
es
mov
mov
dec
sbb
add
mov
rolb
pop
cmp
mov
les
fwait
add
std
hlt
fistpl
rol
call
je
dec
push
mov
adc
test
outsb
fs
imul
mov
or
out
aaa
ss
dec
mov
sarl
icebp
pop
fsubrl
movsl
gs
test
ret
pop
or
out
stc
lret
lahf
rorb
jne
sbb
and
ljmp
aas
adc
movsl
mov
sub
int3
pusha
mov
push
pop
mov
mov
int
mov
or
and
mov
add
cmp
mov
adc
cmp
sarb
in
lods
xchg
jo
sbb
mov
neg
aaa
lods
mov
sub
movsb
pop
mov
sub
jmp
sub
out
jbe
inc
jno
jecxz
repz
nop
add
xchg
jmp
testl
jbe
push
add
inc
cmp
mov
jbe
cmovo
add
or
push
lock
test
repz
shrb
push
enter
sub
ljmp
out
xchg
and
jno
ds
out
ret
push
xchg
mov
sbb
pop
add
orl
fisubrl
push
imul
xchg
mov
push
scas
inc
fimull
in
sahf
pop
popa
fdivrl
add
addr16
in
lea
jno
ljmp
adc
in
xor
rcr
out
add
push
mov
mov
test
jns,pt
faddp
lret
add
or
push
out
iret
fs
sti
es
test
xchg
ret
inc
in
test
insl
cmpsl
dec
lret
dec
fbstp
mov
out
cmc
jl
xor
mov
cmpsl
mov
orl
and
push
js
outsl
mov
imul
gs
pop
jg
jge
pusha
pop
popf
sbb
jg
jae
stc
iret
aam
lds
pop
xchg
jp
fimull
jmp
fsub
push
hlt
xor
scas
cltd
scas
clc
sti
sbb
mov
mov
sub
mov
test
xor
mov
or
sub
add
xchg
mov
inc
aam
add
cs
stos
cmp
test
imul
or
flds
adc
cmp
test
jno
sbb
lret
loope
push
sub
fdivr
xchg
negl
push
pop
sbb
or
in
adc
xor
test
orl
aas
mov
out
cwtl
xor
mov
ret
xchg
fsubrs
scas
add
adc
out
loope
or
imul
scas
outsl
mov
cmp
clc
mov
icebp
jmp
lods
xor
jae
cwtl
dec
mov
sbb
xchg
sarb
dec
rcrl
push
inc
sub
xor
pop
dec
aas
push
lds
xchg
decb
mov
or
push
sbb
lock
dec
sarb
xor
sbbl
sub
mov
nop
test
push
mov
inc
test
loopne
add
shll
xor
push
push
inc
cmpsb
mov
xchg
sub
fwait
inc
cmc
xor
pop
inc
inc
jl
lahf
jb
sbb
mov
sub
cmp
mov
ds
mov
out
or
cmpsl
xchg
movsl
dec
loopne
mov
addr16
aaa
fidivl
jno
inc
iret
loop
test
jle
fs
insl
bound
arpl
jmp
cmp
incl
jg
das
xchg
dec
fidivrl
push
sub
test
push
jno
mov
mov
lret
mov
dec
and
popa
push
es
sarl
and
cmp
les
xor
enter
vmwrite
add
int
pop
fwait
shr
das
andb
leave
ja
dec
mov
leave
inc
int
mov
nop
add
lret
rcll
leave
xchg
push
test
popa
jmp
jno
push
dec
inc
sub
sbb
adc
aad
mov
fistl
insl
xchg
adc
icebp
cmp
lods
ljmp
outsb
cmc
into
imul
jle
sub
mov
out
sbb
fcmove
adc
fsubrl
in
inc
sbb
add
in
dec
gs
pop
mov
pop
cmp
std
nop
sub
test
mov
rol
mov
xor
filds
pop
adc
adc
jnp
mov
mov
ret
push
sub
sbb
out
mov
push
xchg
addb
pop
ret
xchg
mov
scas
inc
fsubrs
xchg
leave
push
mov
daa
dec
es
mov
or
stos
cmp
std
jne
or
sbb
jmp
push
mov
test
gs
jb
nop
call
ret
pop
insl
das
sarl
inc
jno
adc
lcall
jne
lods
negl
mov
mov
jecxz
add
pop
outsb
mov
in
cwtl
xlat
adc
pop
or
mov
jmp
mov
aad
imulb
jno
outsl
subl
pop
xlat
enter
clc
je
add
xchg
ret
push
mov
aas
leave
insb
subb
jnp
pop
xor
hlt
pop
push
add
pop
or
stos
xchg
mov
xchg
or
jne
inc
inc
loopne
into
xchg
andb
out
sbb
lcall
push
pextrw
movsl
call
mov
pop
xchg
cmp
testb
inc
insb
shll
add
and
jecxz
add
les
push
cmpl
divl
mov
ret
mov
or
dec
out
adc
repz
clts
arpl
dec
lahf
sbb
je
cmp
pop
xor
je
push
pop
gs
sbb
xchg
ss
imul
cmp
sub
push
les
testb
adcb
roll
push
mov
lods
xlat
es
xchg
insb
mov
cmp
pop
mov
dec
rolb
gs
mov
aaa
sbb
mov
cld
sbb
ja
push
jb
adc
arpl
mov
and
inc
mov
inc
push
clc
aas
xchg
mov
cwtl
jbe
jge
test
sub
and
cld
mov
xchg
mov
sub
fcmovbe
les
adc
dec
test
push
dec
add
leave
in
add
mov
sub
cli
aas
jb
mov
mov
in
mov
test
inc
addr16
cmp
test
roll
test
pop
jbe
call
dec
bound
pop
pusha
pop
add
mov
push
push
out
mov
pop
hlt
mov
jno
mov
sbb
fs
call
cmp
iret
sahf
mov
pusha
sbb
insl
ljmp
mov
jnp
shlb
loope
or
insb
push
arpl
xor
jae
int3
or
pop
inc
push
imul
mov
lcall
icebp
cmpsl
in
lds
dec
mov
xlat
xchg
dec
pushaw
jbe
add
movsl
mov
xor
test
nop
pop
xor
fistpll
push
pop
xchg
pop
repnz
mov
or
and
fstp
gs
mov
ret
add
mov
push
fwait
pop
insl
cmp
pop
aas
out
jle
test
pop
cmp
ret
add
cmp
jbe
mov
scas
inc
ljmp
xor
mov
popa
call
imul
or
jmp
ret
cmpb
xor
jne
out
xlat
andb
test
es
xor
andl
dec
jle
clc
imul
pop
add
sbb
xor
push
repz
stc
adc
sbb
sbb
adc
test
dec
and
or
jge
out
pop
aad
mov
roll
out
push
sbb
and
pop
push
ss
rcr
lcall
xchg
jnp
jno
popa
xor
adc
out
mov
bound
shlb
cmp
rcrb
int
aas
cwtl
cli
gs
iret
xchg
loope
and
dec
or
arpl
cmp
lret
test
test
ljmp
pop
ljmp
jo
stos
xchg
mov
mov
outsb
aam
loope
pop
push
rclb
std
bound
lret
mov
lods
popf
out
loope
scas
mov
add
or
aas
addr16
lret
mov
sar
mov
xchg
repz
xchg
lcall
testb
sub
xorb
mov
loop
mov
xor
sbb
push
cmp
das
jno
sahf
pushf
imul
aaa
sub
ss
dec
rol
stos
jae
dec
mov
loope
fsubrs
push
mov
mov
xchg
insb
shll
jge
adc
subb
cld
and
js
mov
dec
repz
xchg
std
leave
pop
fisttps
push
adc
fldenv
mov
icebp
fsub
enter
test
or
fsubr
xlat
sti
mov
pop
adc
into
rcr
pop
leave
shll
pop
dec
pop
mov
sbb
mov
add
icebp
lods
movsb
lock
je
pop
xchg
js
push
cs
jl
add
imul
push
sub
cmpsl
xchg
add
jmp
xchg
xor
fcom
mov
pop
inc
cmc
sub
popa
xor
push
in
sahf
dec
popa
mov
add
sub
pop
add
in
pusha
or
or
inc
push
push
sarb
ret
and
hlt
into
xor
xor
insb
push
cmp
jae
loop
or
jnp
or
les
mov
push
int3
mov
sbb
sti
out
and
cmpl
lcall
je
aas
stos
or
push
xor
in
je
push
leave
cmpsl
push
cmp
jl
inc
jmp
sub
insl
enter
arpl
sbb
out
pop
adc
repz
jns
es
dec
or
dec
push
daa
pop
pop
xor
push
xor
repz
jp
jns
jmp
loope
push
add
lods
xchg
xlat
pop
hlt
xor
out
pop
sbb
jmp
test
rcll
mov
push
mov
push
ffreep
jmp
jns
pop
mov
ja
in
xorb
push
js
mov
shr
lea
dec
jae
xlat
gs
and
mov
popf
push
pop
enter
push
repnz
xchg
test
imul
out
xchg
orl
pop
jnp
insb
hlt
in
pop
xlat
in
sub
rcrb
stos
loope
pop
insb
into
inc
aaa
fstpl
pop
test
xor
sbb
jns
shlb
push
cld
sub
or
fsts
out
adc
sti
push
mov
loop
pop
or
lds
add
xor
jns
mov
sub
pop
mov
ljmp
inc
or
sbb
adc
xor
pop
jle
loope
fisubrl
xchg
or
pop
aad
in
dec
jmp
dec
dec
bound
jbe
ljmp
xchg
into
add
sub
and
dec
mov
push
js
jae
shlb
shr
cmp
jmp
out
test
mov
movsb
pop
jecxz
cld
decb
dec
add
shrb
inc
stos
rcrb
dec
mov
jl
xor
xchg
inc
js
adc
jae
cld
jmp
inc
pop
dec
and
bound
xor
or
dec
sub
andb
in
push
jae
scas
lea
mov
inc
divl
aaa
or
inc
xchg
fisubs
ret
dec
mov
mov
imul
jge
xlat
out
int
push
out
inc
mov
loop
inc
sub
iret
push
add
sbb
dec
xor
sub
xchg
inc
lock
mov
andb
outsl
jbe
or
int3
ja
cmp
stc
xchg
lock
les
fsubrl
outsb
jnp
scas
js
xor
mov
or
lret
jecxz
inc
js
test
xchg
mov
mov
mov
mov
mov
jns
cltd
dec
popa
ja
xor
ret
adc
fs
loope
xchg
inc
lret
js
movsb
fstpl
pop
push
mov
out
leavew
movsl
xchg
ljmp
sbb
sub
ror
insl
cmpsb
out
xor
lock
push
ror
out
inc
dec
pop
mov
stc
aas
call
and
mov
add
lret
jmp
dec
mov
fildl
gs
negl
das
lret
push
pushf
inc
sub
in
jnp
dec
xlat
mov
jmp
mov
mov
test
les
push
aad
inc
addr16
push
sub
jb
cmp
push
jns
stos
jge
mov
and
out
add
outsl
mov
js
scas
call
lock
xchg
out
loopne
aam
out
popa
cwtl
loop
or
inc
jno
sub
pop
pop
ss
pop
shr
std
out
dec
rcr
fucomp
std
xor
sbb
sub
movsl
cmp
mov
or
lret
movsb
or
or
daa
cmp
add
mov
cmp
test
mov
incl
daa
cmp
xor
mov
xor
jmp
dec
cmp
fldt
lock
sbb
stc
daa
push
std
mov
das
lcall
popf
imul
push
push
popf
add
dec
les
fnstenv
call
inc
jbe
std
pushw
fidivrl
sbb
mov
jmp
pop
mov
fcom
jp
test
push
jl
and
mov
mov
push
cld
mov
std
mov
xor
push
stos
sub
cld
push
aad
xchg
dec
add
push
xchg
sti
xor
cli
mov
fsubl
or
xor
inc
mov
loopne
lret
sub
js
sub
leave
inc
xlat
out
je
mov
loopne
je
cmp
jbe
jns
repz
test
push
hlt
fs
aad
sub
sbb
lock
add
fprem
or
adc
jle
arpl
xlat
out
sub
xchg
ja
dec
pop
and
push
push
ljmp
dec
add
sub
inc
aam
loop
cmp
lret
add
mov
lods
cmpsl
test
loop
push
push
aas
ficomps
push
push
repz
or
lret
mov
bound
movsb
jns
push
sub
lods
and
shlb
xchg
xchg
xchg
arpl
jae
push
xor
cmpsb
mov
push
scas
sti
jbe
lret
xchg
dec
pusha
rolb
or
ja
dec
or
sub
inc
int
xlat
xchg
push
fs
jno
jae
push
hlt
or
in
dec
fsubl
adc
inc
pushf
sbb
mov
add
jmp
mov
fdivl
das
push
hlt
add
fisttps
adc
je
mov
cmp
test
jg
inc
or
or
jae
rolb
and
scas
int
ret
test
shrb
stos
mov
stos
mov
cmp
insb
adc
dec
fst
xor
fdivp
inc
adc
pop
scas
mov
loopne
stc
dec
call
in
xchg
repz
cmp
jne
cmpl
cmpsb
js
in
pop
test
dec
sub
cs
paddusb
imul
dec
cwtl
repz
ss
sub
dec
inc
incb
sub
dec
mov
mov
sbb
aam
jp
xchg
dec
imull
xchg
sbb
lret
icebp
loope
fildl
dec
dec
stos
test
mov
xor
pop
fmul
nop
jmp
das
scas
lcall
pushf
adc
adc
sbb
jecxz
rcr
xchg
mov
or
adc
mov
mov
mov
fdiv
mov
test
add
outsb
jecxz
cmpl
adc
or
or
pop
dec
jb
push
jb
jge
sarb
push
imul
loope
inc
rcrl
adc
cmp
arpl
sbb
xchg
int
test
hlt
sbb
add
xchg
in
and
ret
imul
or
lods
and
shlb
jno
or
push
xor
sub
test
push
in
gs
cmpsb
mov
cmp
pop
or
jmp
mov
dec
insb
jl
inc
test
dec
ja
rorb
sbb
addr16
scas
pop
mov
icebp
in
repz
ja
pop
cmc
sub
andl
cmpsb
and
in
xor
sub
dec
in
push
mov
rcrb
mov
cmp
fcomi
div
adc
lret
adc
cmpsl
sbb
aad
enter
lret
aad
sbb
xor
andl
aam
xchg
arpl
jge
push
cmpsl
lret
iret
out
ret
mov
fstps
lahf
mov
push
dec
das
arpl
lret
sub
loope
sub
mov
inc
pushf
pop
mov
mov
inc
pop
lahf
pop
pusha
insb
jbe
cs
jmp
pop
jmp
mov
lahf
push
sbbb
ljmp
mov
add
pop
mov
and
aaa
pop
xor
jge
jnp
cwtl
imul
xor
cmp
pop
addr16
enter
cmp
sbb
xchg
lcall
jo
sar
fcmovnu
icebp
in
mov
bound
je
sub
push
or
adc
icebp
dec
icebp
push
insl
mov
out
mov
loope
ret
adc
or
xchg
out
push
push
into
mov
loope
stos
pop
lds
jecxz
notb
cmc
mov
cld
push
shr
fldt
pop
mov
cmp
jbe
dec
jnp
data16
cmpsb
mov
sbb
aaa
or
insl
dec
xchg
in
cli
sbb
scas
inc
mov
add
mov
int3
inc
out
into
cs
ljmp
adcb
aas
jnp
jb
and
loope
push
sbb
insl
inc
xlat
or
test
bound
in
dec
andl
stc
jmp
mov
xchg
stc
pop
ja
fmulp
sahf
xorl
and
and
cs
popf
out
repz
fsubl
lret
out
rol
lret
mov
pop
sub
fsub
pop
fisubl
lds
push
or
pop
cld
in
int3
lods
mov
pusha
mov
aaa
ret
and
pop
scas
jae
rol
fwait
popa
adc
adc
inc
cmp
cmp
movsb
dec
adc
inc
push
xchg
inc
dec
movb
pushl
xor
aaa
imul
push
adc
popa
jbe
ret
xchg
xor
pop
sbb
dec
mov
sete
jmp
push
jns
xchg
jge
or
aas
ret
flds
xchg
fiaddl
xchg
cmpsl
mov
andl
dec
jmp
jp
sbb
arpl
icebp
repz
fwait
ret
test
lret
les
mov
mov
fwait
inc
lds
stos
std
push
pushf
psllq
rep
shll
insl
fstl
std
lahf
push
fstp
push
arpl
cli
addb
and
adc
sbb
hlt
lcall
xor
mov
loopne
and
leave
add
dec
pop
ret
mov
jg
jg
shlb
fcoml
push
dec
aaa
pop
sbb
pop
fidivrl
push
mov
mov
push
aaa
ljmp
lds
shr
outsl
in
jnp
test
dec
mov
cs
imul
xchg
movsb
sbb
mov
cmp
adc
gs
ss
or
loope
cmp
xor
enter
into
dec
and
mov
xchg
xchg
xor
dec
jmp
scas
xchg
jo
pop
adc
test
filds
jns
daa
push
fmuls
je
test
mov
repz
jae
push
orl
scas
mov
pop
jo
scas
cmpsb
out
and
ljmp
inc
leave
adc
test
mov
repnz
rcrl
push
lea
pop
cmpsb
adc
lock
cmpsl
fsub
stos
iret
mov
test
xlat
fld
mov
leave
sub
and
xchg
add
and
or
es
shl
or
xor
ja
sbb
mov
dec
hlt
imul
inc
fistpl
or
out
mov
daa
and
mov
or
mov
xchg
jo
inc
sub
loopne
cmp
mov
pushf
es
push
pop
into
fildll
push
cmp
xor
dec
and
mov
add
jae
mov
adc
dec
sbb
out
pop
inc
mov
imul
std
loop
sub
and
daa
adc
xchg
or
subl
fwait
mov
inc
dec
mov
fs
pop
mov
in
inc
or
sbb
cmpb
mov
inc
mov
sti
inc
pop
jns
and
lahf
adc
int
push
scas
xchg
sub
push
mov
jecxz
push
sub
mov
push
rolb
aas
outsl
lods
lcall
or
sub
in
popf
shr
xlat
mov
daa
loopne
int
jne
mov
addl
xchg
ret
mov
loope
xor
adc
push
test
add
mov
mov
adc
cwtl
int
and
sbb
gs
ss
xchg
cli
sbb
or
lret
xchg
repz
or
stc
and
out
mov
or
pop
xor
xor
xchg
mov
push
sub
push
insl
push
sub
je
stc
or
addr16
shl
insb
xchg
jns
std
sbb
xchg
xchg
lods
mov
adc
jmp
into
mov
adc
inc
mov
jno
mov
fists
std
jg
mov
pushf
in
icebp
mov
dec
aam
inc
sub
cli
push
imul
hlt
pop
jl
mov
stc
es
inc
loopne
sti
add
xchg
push
mov
jmp
mov
push
xchg
lds
out
xchg
lahf
sub
mov
sub
cltd
mov
aaa
add
fwait
out
xlat
mov
out
and
hlt
mov
ret
mov
mov
adcl
gs
and
add
outsl
data16
fstpl
ds
cmp
sbb
xorb
push
and
sbb
fstpl
jne
jno
inc
add
cmp
sub
or
enter
add
rorl
or
in
call
xchg
sbb
dec
jno
cmpsl
in
setle
add
pop
sub
inc
cmp
xor
stc
or
xor
fdivs
mov
mov
dec
mov
stc
sahf
xor
aaa
stos
and
ret
scas
pop
pop
notl
push
cmpsb
aam
lods
in
mov
test
sarl
adc
add
add
movsl
iret
jne
call
icebp
cmp
js
dec
mov
shrl
xchg
and
fiadds
cs
call
add
sti
cmc
jg
lret
pop
xor
dec
nop
es
sbb
lret
out
or
pop
push
test
hlt
cwtl
push
sub
jecxz
aam
popa
jb
pop
push
xor
and
fcoml
push
shll
aaa
xchg
xor
xchg
cmp
dec
pop
mov
pop
rclb
pop
ss
ja
scas
jp
push
mov
mov
cld
pshufw
cmc
dec
shlb
shll
mov
mov
add
mov
add
or
lds
push
push
out
pop
cmp
lea
push
in
xor
pop
add
cmp
xor
sbb
fxch
popa
xorb
addl
push
test
push
adc
xchg
loop
dec
dec
ret
mov
popf
push
cld
negb
daa
js
xchg
es
xchg
dec
iret
and
int3
jecxz
and
orb
out
inc
sub
add
test
xor
add
pop
xchg
int3
and
enter
in
enter
mov
es
jnp
gs
cmp
mov
iret
add
mov
jp
add
adc
std
aam
add
sub
mov
cmc
fmul
mov
push
in
pop
adc
mov
mov
nop
leave
push
and
test
mov
mov
cmc
mov
ds
popf
push
mov
retw
dec
lods
movsb
adc
test
shlb
add
dec
cli
lcall
sub
arpl
fdivr
insb
js
xchg
xchg
cmpsb
mov
bound
sbb
out
or
ret
dec
sbb
loop
and
jb
loopne
out
jbe
xor
push
loopne
imul
lods
lock
rcr
pop
aad
rcll
sbbl
cwtl
in
repnz
lret
sahf
stc
sti
sub
lods
dec
cmp
fimuls
add
mov
mov
xchg
sarb
rol
ja
loope
repz
push
cltd
adc
xor
or
add
outsb
mov
and
push
mov
lret
push
daa
cmp
sbb
cmpsl
enter
ljmp
mov
push
cld
lahf
adc
inc
mov
das
jmp
cmpb
repnz
ljmp
test
cmp
pop
xlat
icebp
inc
xchg
add
add
dec
mov
dec
adc
or
inc
and
outsl
mov
loop
xor
in
insl
push
into
sub
cmp
in
and
mov
out
shl
stos
push
jle
cmpsb
add
es
inc
ret
adc
hlt
setb
cmp
adc
or
sub
ret
scas
pop
jae
pusha
or
sub
fisubs
popa
and
cli
fcmovnu
aas
add
mov
leave
leave
add
arpl
or
push
pop
jle
xchg
popa
movsb
pop
xor
push
hlt
mov
jbe
les
fiadds
pop
rcrl
xchg
push
sub
stos
loope
xor
jb
adc
clc
subb
push
sti
sbb
dec
adc
dec
mov
dec
mov
mov
sti
test
std
cmp
sub
inc
mov
ja
bound
inc
into
mov
fildl
jmp
sti
mov
into
or
packsswb
in
clc
jge
lcall
bound
jg
ficompl
lret
in
add
les
fs
mov
pop
mov
ja
dec
mov
pop
cli
int
push
lret
mov
into
sub
test
in
xchg
push
dec
cmp
adc
in
das
sub
dec
imul
push
xchg
jae,pn
push
adc
cmp
fstpt
repz
add
push
pop
mov
pop
imul
std
push
mov
jnp
push
adc
adc
jnp
ffreep
gs
scas
cmc
cmpsb
ret
fmull
fwait
popf
cld
call
insb
pop
mov
pop
push
and
or
pop
mov
or
icebp
rolb
mov
cmp
jno
int
inc
pop
into
aad
mov
cmpsl
sbb
mov
jg
test
arpl
xchg
loopne
aaa
add
pushf
fdivrs
pop
sahf
stc
mov
jmp
push
adc
imul
lds
cmp
mov
popf
jl
dec
out
push
movsb
xor
dec
xchg
push
loop
mov
arpl
sti
or
and
stos
stos
and
es
mov
leave
dec
jecxz
sbbb
or
cld
inc
lcall
inc
std
xor
bound
sbb
inc
cmc
scas
add
xchg
pop
mov
out
pop
push
mov
bound
mov
mov
mov
lods
pop
stos
lahf
orb
dec
add
dec
sub
push
lods
ret
dec
xchg
sbbl
mov
inc
sbb
xchg
mov
pop
push
xor
loope
mov
insb
js
inc
xor
lock
mov
aam
into
cmp
sub
lret
mov
mov
popa
mov
sub
cs
or
push
mov
push
xor
pop
cmp
xchg
mov
sub
popf
jmp
cmpsl
mov
stc
pop
and
inc
pop
adc
xchg
scas
xchg
enter
cmp
out
out
insl
inc
js
add
aas
fcmovnbe
mov
mov
or
dec
lods
int
mov
adc
jb
jnp
ret
mov
stos
jg
jo
xor
out
push
iret
inc
jne
into
lock
int
jg
pop
mov
jae
cs
cmpl
aaa
jl
fwait
outsb
and
dec
ds
mov
mov
sbb
dec
jno
cmpb
lods
hlt
nop
enter
repnz
clc
repz
out
inc
pop
or
mov
cmc
add
mov
dec
xchg
pop
cmp
sbbl
mov
outsl
and
out
icebp
sbb
fsubl
icebp
dec
das
inc
cmp
jo
ss
jnp
scas
fs
loope
xchg
fwait
repz
rolb
fadd
pop
notl
or
enter
stos
mov
lock
xor
addb
rorb
dec
fnstenv
mov
mov
adc
adc
pop
mov
xchg
push
call
mov
mov
test
ljmpw
icebp
fnstcw
into
lcall
mov
adc
cld
popa
inc
pop
inc
push
jb
mov
insl
inc
mov
aad
in
or
mov
movsl
std
sti
sbb
jo
pop
inc
enter
lea
pop
inc
jl
enter
jo
data16
call
jae
scas
lock
ss
sbb
sahf
hlt
inc
adc
cli
ret
push
stos
data16
cmp
jge
pop
pop
or
mov
scas
cmpsl
repnz
mov
add
mov
cmc
push
imul
fnstsw
jmp
sbb
and
jp
pop
mov
popf
xchg
xor
xchg
lds
clc
out
sbbb
sahf
jb
push
mov
adc
cmp
repnz
xchg
pop
jge
xchg
movsl
or
add
in
mov
aam
cli
mov
scas
or
inc
into
out
mov
mov
test
pop
dec
cmc
mov
sbb
xchg
outsw
cwtl
in
xchg
sbb
std
rcrl
andl
adc
mov
add
mov
xor
mov
push
mov
loope
test
sbb
push
in
and
pop
scas
and
mov
xchg
jne
mov
push
inc
ss
mov
aas
xor
stos
insb
adc
inc
imul
fists
push
ret
xor
jbe
mov
mov
or
mov
push
loopne
popf
jmp
cs
xchg
jg
mov
push
or
fs
lock
mov
inc
int
es
jle
push
mov
in
inc
jo
mov
insl
shl
mov
pop
adc
mov
xor
stos
jno
cmpb
pop
mov
stc
fwait
or
mov
jl
sti
sub
fistl
pop
adc
or
jl
mov
cmc
xchg
rcrb
add
push
mov
cmp
in
leave
inc
cmp
inc
dec
push
dec
insb
pusha
mov
iret
lods
outsl
test
subl
js
mov
stos
test
xchg
push
ss
inc
pop
add
dec
mov
lcall
push
fimull
cltd
mov
inc
and
ret
jno
jbe
mov
jne
stos
or
stos
repz
xchg
movsl
test
xlat
scas
fsubl
pop
mov
in
leave
jne
in
push
mov
lcall
lret
gs
push
loope
mov
hlt
xchg
jle
adc
mov
push
in
add
adc
mov
add
popa
mov
xchg
out
pop
shll
icebp
cld
in
xor
mov
into
cwtl
inc
xor
insl
sub
mov
xor
push
shr
adc
movsb
fs
std
and
or
xchg
adc
jle
ds
dec
pop
daa
cli
cs
sub
test
jge
shrl
stc
jl
std
lds
cs
add
movsb
lret
shrl
sti
mov
push
out
shrl
sub
dec
mov
inc
out
xchg
pop
insl
add
mov
data16
push
in
cs
xor
testb
dec
cwtl
shrl
fcmove
sbb
add
mov
cmp
ds
mov
push
ja
addr16
daa
bound
xlat
in
push
sub
jo
pop
jae
outsb
push
push
lds
aaa
pop
insl
iret
fdiv
stos
fisubs
mov
sbb
loope
mov
xchg
arpl
mov
das
in
jmp
xor
push
cmp
or
imul
and
test
scas
adc
repz
sarl
in
dec
add
mov
jno
mov
repnz
jle
push
in
xchg
pop
ficoml
inc
mov
adc
ds
sbb
cmpl
push
movsb
lcall
push
aas
jmp
sbb
testl
sub
roll
pop
inc
rorl
cmpl
repz
mov
lods
movsl
mov
jb
sbb
cmpsb
loopne
lahf
lahf
mov
data16
or
mov
out
fwait
je
push
inc
insb
aas
sarb
cmpl
mov
mov
call
mov
shlb
sub
stc
in
bound
aam
aam
aaa
pop
push
adc
fcompp
dec
sbb
repnz
jl
ja
pusha
xor
sub
popf
lret
loop
mov
pop
adc
mov
insl
fwait
sbb
sbb
sbb
pop
pusha
popa
sarb
jmp
fs
sub
mov
fnsave
push
sti
rcll
cltd
insl
gs
push
mov
out
in
pop
pop
inc
imul
pop
je
jp
hlt
sti
cmpsl
seta
addb
xchg
popa
ljmp
cmp
or
mov
sahf
shrl
lea
jle
sbb
addr16
adc
cmp
es
dec
decl
pop
aam
xchg
call
dec
iret
jge
add
dec
cld
and
sbb
outsl
sbb
pop
cmp
adc
pop
push
mov
and
or
mov
sub
pop
inc
dec
insl
adc
aaa
mov
jmp
jnp
in
mov
push
sub
mov
xchg
jle
pop
lret
imul
ret
sub
call
xchg
cwtl
jns
jp
add
enter
lret
js
int
adc
or
xor
aad
xchg
popf
loopne
cmc
aam
pop
inc
or
sub
imull
inc
in
jns
add
jl,pt
mov
and
lods
es
dec
imul
sub
sbb
mov
gs
jp
cmp
add
sub
sub
lods
add
call
pop
sahf
and
pop
imul
jbe
in
and
push
jle
mov
dec
inc
dec
dec
call
mov
pop
dec
pushf
cmpsl
enter
int3
cmpsb
call
xor
push
xchg
push
cltd
sub
scas
leave
in
aas
pop
and
mov
shl
mov
push
fisttpll
sbb
sbb
sub
xchg
mov
mov
mov
adc
push
push
shl
insl
and
repz
sti
and
xchg
lahf
and
mov
jge
mov
push
in
ret
test
popa
aaa
jle
fs
push
call
push
std
fwait
clc
mov
jne
pop
popa
jmp
jne
cmp
mov
jle
mov
jge
roll
xchg
adc
out
gs
out
ss
cli
jle
hlt
fs
push
and
adc
lods
sub
inc
sub
loop
out
sub
ljmp
imul
pop
push
ja
cli
aaa
mov
sbb
stos
xchg
out
lret
mov
sub
subb
xor
testb
jge
in
out
inc
cld
mov
add
repnz
daa
mov
xor
fimuls
into
bound
mov
call
lcall
iret
jo
int
sbb
movsb
ja
add
clc
mov
mov
outsl
inc
pop
pop
xchg
out
sbb
test
pusha
xor
insb
sahf
jl
in
shll
push
pop
in
addb
sahf
test
out
scas
jmp
or
sahf
call
mov
mov
or
mov
loop
add
pusha
enter
mov
insb
test
out
loopne
sub
dec
jne
cli
pusha
dec
adc
fneni(8087
test
mov
gs
icebp
addb
push
dec
fmull
and
cmp
mov
ss
mov
mov
enter
fisubs
add
js
cs
jnp
cmpsb
sbb
rcl
lea
xor
dec
andw
addb
cmp
push
in
mov
xlat
pusha
dec
or
pushf
or
sub
je
pushf
aas
js
mov
or
bound
cmc
fs
scas
iret
jle
roll
loop
adc
push
shll
movsb
lcall
jno
and
cmp
mov
sarl
mov
inc
movsl
lea
mov
std
add
orl
jge
jp
std
shr
mov
xchg
lret
daa
inc
jno
mov
scas
add
jo
mov
cmp
mov
push
mov
cmp
cltd
lods
or
pop
loope
cmp
mov
test
cmpsb
ja
pop
add
mov
adc
jle
lret
jns
jns
xchg
push
pop
sti
cmpsl
xorb
pop
mov
dec
dec
mov
test
add
mov
in
les
rcr
pop
cmp
je
add
pop
cltd
xor
sarl
dec
dec
hlt
cmp
lods
lock
cmpsb
popa
sbb
scas
mov
inc
ret
insb
add
push
push
nop
push
xor
out
scas
ss
icebp
sbbb
pop
and
cltd
or
sbb
cmp
sub
stos
xlat
cmp
cltd
ds
cmp
loopne
jne
loope
cmp
enter
mov
add
lahf
mov
xlat
add
sbb
shlb
shr
xchg
stos
imul
sub
sbb
cmp
mov
jmp
enter
cmp
ds
scas
xchg
aad
push
add
push
dec
add
and
pop
in
jo
jbe
out
movsl
cmp
xchg
jb
call
andb
and
cmp
loopne
leave
push
mov
add
leave
adc
adc
and
adc
mov
into
cwtl
jge
sbb
lds
and
es
notl
mov
sub
shll
fstpl
sbbb
mov
call
lock
test
test
jl
outsb
enter
xlat
and
adc
xor
movsl
and
mov
push
mov
mov
sahf
sbb
jnp
xchg
repz
movsl
divb
pop
dec
jl
ret
lock
fwait
pop
out
jg
nop
popf
cmp
loopne
in
pop
pusha
or
mov
add
aam
inc
jl
cmp
mov
sti
fldt
test
cmp
int3
inc
divl
lods
sti
fwait
mov
mov
test
xor
lock
or
pop
je
pop
dec
xorb
scas
shrb
mov
sbb
mov
cmp
mov
dec
inc
pop
mov
inc
sub
sbb
lret
into
scas
xchg
cld
pop
movsb
lahf
jecxz
dec
add
dec
sti
sub
sub
mov
fisubl
adcl
stos
outsl
fidivrl
popf
ss
inc
fdivrl
cmpsb
out
pushf
mov
xor
adc
das
dec
and
mov
cmpsb
repz
cmp
push
ja
fcomi
jbe
cwtl
in
jge
mov
add
out
cmp
inc
pop
cwtl
lods
mov
cmp
int3
out
cmp
dec
fisubrl
vunpckhps
psllw
adc
cmpsb
sbb
fisubl
loope
jmp
jno
mov
icebp
mov
jge
mov
aad
fnstenv
adc
in
sbb
aas
dec
xor
cmp
cmp
hlt
xor
cmp
popf
jge
sahf
mov
cmc
int3
pop
clc
push
test
repz
addr16
xchg
mov
jg
nop
add
sbb
cmp
dec
cmp
popa
fisubs
arpl
or
push
pop
add
xor
loope
xor
cwtl
movsl
gs
and
add
push
inc
fwait
mov
mov
mov
dec
pop
and
imul
xor
adc
cmpb
and
leave
jae
sbb
and
push
dec
out
or
push
inc
leave
or
mov
dec
test
xor
fidivrl
movsb
into
ret
test
into
sbb
scas
lret
jns
sbb
pop
lods
out
inc
leave
nop
ror
sub
andl
fldt
cs
data16
xor
push
mov
dec
sub
xchg
call
and
add
mov
mov
int3
inc
mov
aas
mov
enter
push
mov
cmc
cmpb
sub
cmp
mov
push
mov
arpl
mov
icebp
pop
popa
mov
test
mov
sbb
sbb
mov
cmc
lcall
dec
rcrl
test
pop
sbb
mov
dec
mov
sahf
push
jge
iret
mov
cmp
cmp
in
lret
orl
sbbb
loopne
mov
das
mov
jl
pop
sti
fucom
jge
xor
adc
cmp
lcall
filds
int
decl
mov
inc
stos
xchg
aas
test
imul
inc
cmc
dec
pop
and
jecxz
jb
sub
mov
mov
inc
loopne
xchg
sub
lds
xor
sbb
sahf
and
sbb
dec
push
dec
cmpl
shr
push
jb
outsb
dec
mov
ss
lret
dec
fwait
shlb
out
insl
xorb
and
add
insb
das
inc
mov
arpl
mov
lock
or
sti
mov
sbb
jmp
jle
leave
xchg
inc
xor
add
mov
pop
js
pop
or
xchg
gs
or
imul
dec
add
jnp
mov
inc
cld
mov
sarb
sub
xchg
inc
mov
inc
adc
pop
jne
inc
int3
test
aas
sbb
push
std
cmc
inc
addr16
scas
repnz
cmpl
dec
imul
jns
fbstp
or
push
cs
push
mov
rolb
inc
mov
add
gs
xor
mov
jmp
mulps
insb
lods
mov
loopne
adc
mov
mov
mov
loop
push
sub
and
sub
jae
loope
into
lret
mov
out
popf
xchg
sbb
mul
rcrb
sub
sti
cwtl
push
push
out
in
adc
scas
dec
and
inc
inc
das
in
pop
insl
loop
mov
xchg
cmp
cmp
cmp
cmp
les
dec
push
lods
stos
add
fdivr
jb
inc
in
adc
loopne
mov
dec
cld
jecxz
rcrb
add
dec
lret
loopne
ds
fs
call
outsb
icebp
mov
bound
adc
inc
jne
lret
dec
mov
push
mov
popf
mov
mov
out
and
loope
insb
stos
leave
aam
data16
or
push
pushf
ret
inc
lahf
ss
cltd
pop
dec
jecxz
mov
std
dec
push
cli
fucom
stos
jae
lret
ds
jbe
call
sbb
jo
sub
push
mov
sub
inc
mov
dec
jle
cmp
jge
mov
cmp
cmp
pop
mov
nop
xchg
sbb
or
fldt
adc
mov
jnp
jns
mov
stos
pop
jns
pop
push
dec
and
inc
outsb
push
lcall
insb
push
sub
inc
mov
xchg
ljmp
adc
mov
fdivrl
int3
ss
int
mov
addl
sub
xchg
sub
cmc
shrb
dec
addr16
inc
add
mov
nop
cmp
das
dec
mov
xor
ret
xchg
roll
pusha
int3
outsl
sbb
lods
pop
incb
lcall
or
dec
fwait
push
std
mov
aam
ljmp
ficoml
jno
adc
jecxz
adc
mov
push
push
mov
sbb
cs
cmp
mov
fiadds
andl
xor
mov
fidivs
stc
out
add
sti
mov
sub
out
sbb
and
es
call
xchg
mov
mov
cmp
inc
aad
movq
arpl
test
and
add
mov
imulb
adc
dec
xlat
dec
push
das
test
jle
inc
push
and
pop
rorb
push
outsl
xor
int
cli
arpl
dec
mov
adcb
inc
mov
orb
adc
jb
mov
cmp
gs
std
adc
mov
jp
test
adc
data16
add
lods
jb
dec
push
pop
gs
cmp
mov
dec
inc
data16
imul
jnp
pop
test
insb
or
mov
sbb
rcr
fwait
cmpsb
outsl
in
push
pop
scas
shlb
mov
sub
popl
bound
lds
mov
add
sarl
fldenv
pop
jae
dec
mov
jne
cmp
sub
lods
mov
xchg
add
mov
xchg
mov
mov
mov
lcall
jmp
lods
add
bndldx
scas
jo
cmpsb
dec
faddp
mov
jp
or
gs
lret
pop
aam
sbb
xor
roll
bound
push
mov
aas
gs
lods
pop
test
pushf
xlat
in
and
cld
les
stc
test
xor
dec
inc
jp
std
sub
push
insb
pop
sti
adc
sub
xor
mov
lahf
fbstp
mov
imul
inc
mov
popa
cmp
cmp
lds
push
shll
dec
insb
and
bound
jge
cld
inc
cmp
sub
repnz
mov
mov
mov
fnstcw
or
addr16
fisubrs
sub
inc
cmp
and
add
sub
xor
shll
sub
mov
pop
std
icebp
add
sarb
mov
push
jmp
shl
iret
sbb
inc
jle
idiv
imul
aas
sti
push
hlt
gs
mov
shlb
push
xchg
lret
mov
repz
sarl
or
lea
lcall
sbb
pop
into
sub
xor
pop
rolb
pop
scas
jns
stos
push
mov
mov
shlb
inc
ds
inc
call
push
push
in
shlb
pop
sbb
ds
lds
loop
ds
jl
jb
adc
cmp
cmp
loopne
nop
negl
xchg
sbb
aam
sarl
pop
dec
pushf
add
inc
ret
xor
insb
fldcw
pop
jmp
cli
push
pop
xchg
xchg
dec
loop
inc
sbb
out
loope
xlat
roll
ja
enter
xor
bnd
cld
push
mov
mov
out
pop
mov
hlt
sub
in
dec
out
push
add
or
hlt
data16
mov
inc
ja
out
or
xchg
es
repz
sbb
mov
or
mov
xor
sbb
inc
mov
xchg
mov
sub
mov
insl
add
ss
cmpsl
loop
lods
and
and
test
int
cmpsl
inc
push
es
mov
sub
mov
pop
pop
mov
lahf
mov
mov
xlat
cmpsl
in
mov
jnp
or
enter
push
push
xor
loope
dec
xchg
out
outsb
test
bound
push
fdivrl
pusha
jge
or
fisttpll
xchg
loop,pt
pop
and
and
jnp
mov
loope
pop
inc
jle
mov
cli
test
dec
cmp
inc
xchg
pop
push
cmp
out
push
flds
push
cli
mov
mov
outsl
mov
lods
jnp
jmp
push
dec
cmpl
mov
or
push
jno
lea
sub
cmc
dec
adc
inc
jg
ror
sbb
or
iret
xor
cmp
imul
cmp
mov
cmpsl
negb
push
adc
push
out
add
ret
or
pop
dec
cmp
call
push
or
ss
sbbl
push
jb
sti
dec
xlat
push
je
pushf
sbb
inc
clc
xchg
inc
or
dec
cltd
dec
adc
inc
jno
dec
mov
and
lahf
sub
stc
push
ja
fs
movsb
jge
cmpsb
lea
jnp
mov
loope
adc
std
imul
mov
imul
shll
push
xor
bound
add
icebp
add
out
pop
jg
add
mov
insl
addr16
shll
sbb
popa
jp
xchg
mov
mov
jle
fidivrl
je
or
push
insb
cmp
pop
ja
call
jne
dec
gs
push
sbb
xchg
aam
xchg
pcmpeqb
ljmp
mov
jp
bnd
enter
clc
call
popa
out
jnp
xor
xlat
lahf
enter
ljmp
inc
jge
into
fdivs
stos
in
add
test
ds
cld
or
mov
aas
dec
fs
push
cmc
pop
lret
xchg
jge
mov
scas
xorl
pop
inc
repnz
push
dec
rorb
hlt
ljmp
jle
fdivrl
cmpsl
jl
testb
nop
mov
xchg
test
cmpsl
hlt
fxtract
test
in
sbb
add
idiv
dec
xor
or
mov
icebp
add
lods
dec
ljmp
pop
pop
in
test
aaa
aas
into
daa
rcrl
in
mov
dec
cmp
popa
jo
test
test
jb
dec
test
jle
mov
inc
test
jo
pop
mov
out
fisubl
in
in
inc
dec
je
jns
push
cmc
roll
cs
or
stos
mov
rep
or
jae
addr16
fdivrp
cld
lds
jae
jle
inc
aad
adc
pop
or
fucomp
out
aad
cmp
jno,pn
loop
sbb
adc
xor
les
jo
cmc
mov
or
push
pop
js
test
fstl
push
scas
cs
int3
push
ret
loope
cmpsb
cmpsl
lods
testl
cmpsb
dec
cwtd
sbbl
icebp
mov
mov
and
mov
rorb
dec
jmp
pop
dec
cmc
pop
sbb
adc
jbe
jbe
mov
pusha
xor
rcl
fldl
ret
and
outsb
je
push
insl
lahf
loopne
dec
jp
jnp
hlt
sti
enter
int3
in
mov
mov
xor
lods
push
cld
stos
pop
jno
xchg
ret
adc
add
pop
in
clc
inc
sbbl
cwtl
dec
mov
cld
cld
in
test
mov
xchg
fs
aam
loope
cmc
mov
xor
das
jno
fisttpl
mov
out
test
sbb
push
popf
pop
sbb
rorl
push
aaa
sub
rcll
inc
push
push
mov
fs
ret
sbb
inc
push
adc
sar
pop
dec
add
xchg
jp
adc
jo
rclb
popa
add
scas
inc
and
ljmp
aas
or
sbb
mov
arpl
mov
outsb
inc
push
daa
popa
mov
lret
xor
add
movsl
loopne
std
cmpl
addb
gs
and
cwtl
or
add
fdivrl
repz
mov
push
add
pushl
xor
loop
mov
and
movsb
shll
and
add
push
sahf
fwait
jb
mov
rep
call
int
call
mov
pop
stos
push
cld
cltd
outsb
sbb
je
ljmp
aas
add
push
sub
mov
jb
or
jo
and
lock
dec
add
in
xchg
pop
rorl
inc
shrb
push
and
out
xor
sbb
sub
jb
xor
pop
xchg
arpl
jno
repz
inc
jns
aad
data16
or
ljmp
scas
mov
ror
jg
mov
xlat
mov
dec
dec
into
cmp
pop
pop
push
mov
mov
cmc
dec
pop
dec
dec
test
jp
cmp
sbb
cld
and
insl
push
in
mov
mov
imul
imul
pop
imul
loope
mov
in
dec
mov
das
push
test
fisubs
push
gs
adc
lds
sub
shrb
nop
mov
jne
jne
pop
lods
mov
mov
mov
jb
jl
fstpt
es
andl
rol
lahf
mov
add
mov
enter
mov
ja
push
cmp
xchg
pop
nop
out
and
into
jae
xchg
stos
js
add
push
sub
or
fsubrs
cld
cmpsl
mov
pop
lret
mov
inc
cmp
sahf
mov
jb
xchg
fucom
cmpb
jno
out
sub
in
ljmp
lea
push
ds
or
sub
cmp
imul
jo
movsl
in
sub
or
or
in
xchg
mov
push
ficompl
int3
arpl
or
pop
ret
addb
xor
push
hlt
xchg
mov
mov
cmpsb
popa
mov
pop
lret
inc
mov
mov
fcomp
ficompl
ljmp
xlat
adc
sbb
mov
inc
daa
sub
cmc
push
cmp
movsw
push
cwtl
fstps
inc
and
jmp
pop
pop
xchg
into
jne
adc
xchg
mov
rorb
mov
dec
out
fs
jns
loop
pusha
jns
loope
leave
ds
push
or
out
mov
xor
mov
fcoms
cmp
test
loope
jne
push
jnp
mov
repz
push
xor
fwait
jmp
pushf
or
mov
in
call
outsl
push
fsubrl
in
repz
scas
mov
inc
je
icebp
mov
add
in
adc
repz
push
push
loope
xor
divl
lods
or
fistps
in
xlat
add
push
subb
lock
subl
mov
mov
cs
inc
push
jo
imul
loop
stc
inc
push
mov
in
scas
dec
shlb
and
fwait
mov
out
sti
or
ljmp
ss
pushf
fistpl
sub
cwtl
sbb
ror
jl
or
repz
lock
stc
movups
xchg
adc
iret
and
inc
in
adcb
dec
orl
imul
cmc
scas
ds
inc
mov
mov
rol
loop
jb
mov
js
je
icebp
stc
iret
or
pop
loope
orl
sub
sub
mov
inc
jl
pop
in
add
movsl
or
pop
and
in
mov
movsb
pop
cmpsb
cltd
test
lret
es
scas
or
inc
sti
and
outsl
sti
hlt
cwtl
aas
cltd
inc
mov
fidivrs
jecxz
ficompl
pop
jle
inc
jno
mov
mov
out
push
mov
dec
adc
movsb
mov
cwtl
hlt
add
sub
jle
xorl
xor
adc
je
push
rorb
pop
repnz
cmp
push
jns
popa
push
adc
adc
leave
cs
in
cltd
insl
jmp
mov
mov
mov
jo
cmp
xlat
loope
insb
or
fiadds
jge
push
fimuls
fs
test
pop
clc
cld
cld
add
inc
push
fwait
or
mov
xlat
pop
xor
fs
fisttpll
dec
xchg
fcmovnbe
loop
or
jns
fwait
mov
cld
jmp
fs
leave
es
mov
int3
insl
push
leave
cmp
dec
aaa
inc
cmpsb
fmull
mov
call
mov
into
scas
dec
dec
repnz
std
arpl
xor
dec
adc
sub
jb
fcompl
mov
mov
sbb
loop
and
sub
pop
pop
testb
in
arpl
enter
add
or
mov
add
mov
cltd
inc
adc
cwtl
cmp
xlat
out
icebp
sbb
fcomps
adc
addr16
cmpsb
pop
fimuls
xchg
cmpsl
or
xor
js
mov
inc
stos
test
or
push
mov
mov
clc
push
pusha
orb
inc
jecxz
fnsave
and
rol
or
mov
add
data16
lcall
ffreep
mov
and
mov
js
sbbl
test
testb
cmpsl
inc
inc
cmp
loopne
daa
or
xorb
jbe
sub
outsl
pop
or
sti
adc
mov
sbb
fnstsw
fisubs
and
and
sub
lock
and
aaa
movsl
mov
dec
sbb
xchg
stc
jecxz
push
cmpsl
jbe
loopne
mov
sub
cmpsb
push
stos
es
xlat
ljmp
push
or
ds
inc
ret
push
add
mov
mov
dec
adc
out
movsl
shll
cmp
add
ljmp
cli
aas
lahf
adc
test
jle
das
fdivl
and
adc
xchg
mov
imulb
inc
hlt
aas
bound
subb
mov
adc
mov
andl
stos
mov
mov
mov
loopne
mov
xchg
lods
and
inc
aam
out
or
in
mov
and
out
lcall
pushf
xor
mov
shll
jbe
jnp
push
adc
jg
pop
cmp
xor
xorb
sub
jo
add
hlt
jmp
mov
inc
sub
jnp
push
cmpsl
sub
fldl
test
aam
int
enter
ja
hlt
jnp
aad
test
xchg
mov
mov
cmp
aaa
pop
movsb
movntps
adcl
das
insb
addr16
adc
movsl
mov
pop
jmp
outsl
inc
mov
in
mov
verw
or
mov
push
cld
in
ret
stos
ret
sbb
out
imull
lcall
sbb
or
push
jmp
sbb
fiadds
arpl
push
in
inc
call
adc
jns
jne
mov
fidivs
iret
cmpsl
dec
fidivl
cmp
shr
adc
clc
jb
mov
jnp
sbb
movsl
les
mov
pop
iret
xchg
fmuls
call
roll
xor
into
jb
inc
arpl
jo
sbb
fucomi
mov
fs
and
push
test
fimuls
xchg
insl
in
jl
push
scas
lretw
push
rcl
pop
push
xor
mov
mov
pop
mov
dec
cmp
repnz
add
sbb
mov
rcl
jne
adc
iret
sbb
lcall
jno
xchg
imul
iret
wbinvd
sbb
subl
push
mov
pop
jns
iret
test
mov
push
xchg
or
notb
and
mov
imul
fs
fimuls
stos
test
int3
xor
or
lods
cs
imul
adc
push
jecxz
out
fwait
mov
mov
rolb
fisttps
jno
inc
clc
or
xor
inc
inc
fldenv
pop
add
mov
and
insl
fs
pop
mov
and
arpl
xchg
xor
push
sbb
push
or
flds
mov
push
cltd
cwtl
fsubr
popa
mov
or
out
iret
push
mov
xor
inc
bnd
das
in
ljmp
xor
fcmovnbe
sbbb
das
sbb
jp
mov
push
add
jge
fstpl
xchg
fisubrs
pop
adc
inc
jae
out
mov
mov
mov
dec
enter
and
lahf
ljmp
jno
fwait
jmp
shrl
xchg
jmp
push
insl
inc
xor
outsl
push
or
into
mov
mov
mov
cli
or
lods
sub
int3
subl
lcall
js
cmp
jbe
jmp
dec
out
fistpl
adc
sbb
sub
cli
adc
mov
add
inc
push
pop
es
sarl
fwait
test
sub
adc
scas
mov
roll
add
pop
mov
ret
or
pop
loopne
orl
bound
sbb
pushf
scas
js
jne
lcall
cmp
leave
mov
fimull
ret
xor
nop
pop
int
lret
jecxz
jmp
adc
or
push
dec
push
addb
nop
stos
int3
jmp
sub
mov
repz
fwait
or
sbb
enter
sub
pop
jns
inc
lock
xchg
pop
stos
add
dec
aam
or
mov
int3
or
mov
xchg
fcompl
ljmp
cmp
ret
inc
sbb
dec
sbb
loopne
ret
or
jb
and
into
mov
push
xor
or
lock
aam
test
xchg
jne
sbb
jp
jo
and
sbb
push
jae
sbb
mov
xchg
cmp
mov
push
dec
pop
loope
inc
popf
push
dec
dec
and
repz
inc
ret
fbstp
idivb
test
dec
cmpsb
jb
mov
fcom
sub
in
adc
and
sbb
cmpsb
dec
and
ja
jmp
into
add
out
mov
je
lods
stos
mov
test
fld
jge
mov
int
and
jecxz
or
add
mov
je
add
mov
imul
mov
mov
push
adc
sub
add
mov
aas
ja
pusha
pop
jl
mov
les
shll
sti
adc
and
lret
mov
mov
inc
sbb
mov
imul
in
in
jecxz
add
jge
stos
push
pop
aas
adc
dec
in
mov
xlat
inc
andb
aad
gs
shll
xchg
aas
push
jne
push
pop
push
gs
mov
mov
sub
pop
inc
adc
lahf
aad
push
daa
jmp
xor
aas
int
out
roll
mov
popf
rolb
mov
aas
mov
adc
aam
cli
test
mov
adc
call
imul
or
and
fs
aas
scas
pushf
xor
jns
sahf
lahf
repz
cmp
icebp
sub
ss
jo
inc
or
sbb
test
push
aam
pop
loop
jmp
iret
jbe
mov
push
cmpb
popa
insb
stos
outsb
outsb
jbe
sub
loopne
test
pusha
shl
adc
mov
stos
call
adc
jnp
and
jne
ficomps
mov
mov
cmp
add
mov
addr16
or
leave
jno
push
movsl
xchg
cmpsb
cmc
pop
call
jne
repz
cmp
stos
push
push
dec
mov
fsubrl
mov
add
in
arpl
sub
xor
xorl
jl
repnz
in
push
ds
repz
mov
mov
adc
xor
and
cmp
xchg
pop
xchg
stos
xor
mov
insb
add
in
adc
inc
add
jg
jno
aas
mov
lcall
mov
sub
xor
xor
jb
inc
div
aas
adc
jp
sbb
stc
mov
push
jmp
mov
icebp
cmp
and
outsb
jno
adc
testl
call
cmpsb
cmp
or
mov
cmp
loope
pop
dec
les
sub
cmc
add
mov
or
fwait
sub
jmp
mov
out
rorb
or
adc
sub
pop
out
ror
pop
out
and
and
in
pop
pop
enter
xchg
mov
aad
stc
sbbl
cld
inc
mov
mov
xchg
mov
pop
hlt
xor
xchg
stos
pop
loopne
mov
test
mov
movsl
outsb
jecxz
xchg
fdivrp
enter
cmp
add
call
scas
jge
mov
xor
mov
sbb
imul
dec
and
add
xchg
ret
adc
or
pop
push
lods
test
lock
es
add
mov
popf
lret
inc
ret
mov
movsb
xlat
mov
std
insb
aas
push
les
stos
out
fmulp
push
out
flds
and
pop
lods
imul
push
and
sub
jnp
pusha
lods
pop
dec
shlb
dec
and
jl
push
xor
xor
pop
or
xor
xor
pop
sbb
icebp
mov
mov
stc
fwait
shlb
add
call
ds
bound
mov
out
mov
mov
sbb
cmpl
add
bound
mov
ret
push
mov
insl
ja
aaa
jecxz,pn
push
pop
and
mov
sub
sbb
or
idivb
push
adc
rclb
in
scas
scas
mov
les
push
dec
sub
adc
fstl
xor
push
inc
mov
or
dec
xchg
cmp
orb
repnz
mov
ds
sbb
ret
scas
aas
sub
inc
add
cmp
hlt
movsb
lahf
repz
sahf
sub
jne
into
and
sub
ffree
ret
add
fsubs
pop
int3
xor
push
adc
cmp
xchg
je
xor
int3
xchg
dec
cmp
jl
mov
fisubl
and
pop
sbb
add
test
fs
fwait
out
cmp
gs
add
inc
lcall
daa
std
dec
jb
cmp
fadds
es
mov
jmp
jno
addr16
or
mov
sbb
adc
in
cmp
rolb
add
jl
mov
push
pop
mov
mov
sbb
add
or
sbb
dec
rorl
pop
cmpsb
jecxz
xchg
mov
pop
jmp
cmp
xchg
jo
int
pop
or
push
adc
push
lcall
sub
pop
lret
rorb
icebp
cs
arpl
push
movsl
fbstp
xchg
fimuls
gs
pop
in
push
movsb
adcl
pop
push
and
pop
inc
pusha
icebp
sbb
adc
rcrl
sbb
aad
int
push
lahf
and
push
sbb
fidivs
add
ljmp
or
movsl
loop
test
jo
fimull
mov
jnp
push
sub
jns
add
in
mov
test
pusha
test
pop
xchg
cld
pop
jbe
push
icebp
xchg
sbb
push
mov
cmp
or
inc
fs
mov
add
xchg
cwtl
sarl
lds
xchg
xor
pop
push
xor
insl
andl
sti
aad
push
inc
fistpll
xor
jnp
test
inc
ja
dec
int3
jmp
insl
out
jg
mov
shlb
imul
adc
outsl
xor
outsl
repnz
enter
scas
mov
sbb
mov
or
push
stc
repz
mov
xchg
add
mov
inc
inc
or
sti
dec
sbb
shrb
jg
dec
dec
cmp
pop
ficompl
sar
pop
pop
push
dec
loope
sti
into
inc
aaa
inc
insb
or
test
sub
add
std
and
cmp
jmp
inc
rorb
and
aas
cmpsb
mov
fnstcw
mov
push
movsl
out
mov
jno
push
mov
push
push
or
jnp
lret
jmp
push
or
xchg
mov
add
sbb
jae
repz
rol
cs
push
in
outsb
aas
mov
rcrl
mov
sti
mov
sub
lret
jne
sbb
pop
jo
shll
pusha
cmpsl
ficoml
je
inc
bnd
xor
or
repz
sti
xchg
lods
xchg
mov
inc
int
dec
dec
fs
fstpt
cltd
fisubl
mov
mov
jg
test
and
sub
call
inc
enter
and
call
outsb
jge
sbb
shll
sbb
jp
dec
aas
push
scas
inc
mov
movsb
pop
das
sub
lahf
mov
in
jb
push
test
ret
pop
ficoms
pop
sub
sbb
cwtl
pop
mov
iret
jbe
cmc
inc
lfs
mov
and
out
es
out
jbe
sub
xor
dec
jmp
rcll
addb
cmp
add
dec
jno
cmp
cmp
cld
pushl
add
int
test
cmp
test
jbe
loope
lcall
dec
sbb
pop
loope
jmp
mov
in
dec
ljmp
push
push
pushf
cmp
or
adc
jno
shl
sub
std
popf
fcmovbe
pop
mov
test
and
int3
adc
je
pop
cmp
xchg
fstpt
lock
sub
idiv
icebp
dec
jb
push
inc
int
pop
data16
lret
push
rorb
xchg
call
test
popf
dec
stos
sbbl
pop
push
mov
sub
push
mov
loope
fisttps
jp
mov
cltd
xor
mov
scas
add
cmp
iret
add
cmp
add
pop
push
jb
push
rcl
mov
das
jb
enter
ljmp
sti
xor
xchg
call
inc
sub
xor
jl
mov
enter
hlt
into
rep
sub
leave
flds
test
mov
cmpsl
sub
loope
les
xor
mov
sub
and
testb
mov
rcr
dec
pop
iret
sysret
js
es
inc
jp
lock
mov
add
inc
roll
popf
pushf
push
mov
nop
imull
push
jo
lahf
mov
dec
in
jge
and
and
std
loope
aam
mov
xor
jle
ds
lcall
into
cmpl
push
sti
mov
mov
pop
sub
cwtl
fsubs
xchg
xlat
pusha
dec
std
repz
shrl
xchg
loope
lret
pop
ds
sbb
imul
dec
add
sub
mov
testl
pusha
mov
shll
xchg
push
rcrb
ljmp
mov
xlat
fldenv
sbb
ds
xchg
dec
fsubrl
loope
xchg
lret
jbe
dec
scas
mov
xchg
inc
push
dec
ret
stc
iret
cmpsb
pop
add
sti
inc
pop
pop
push
jmp
pop
adc
adc
mov
shl
dec
add
sub
pop
aaa
ffreep
mov
inc
mov
pusha
lcall
fdivrl
je
add
test
mov
sbb
pop
push
pushf
int3
adc
jno
mov
scas
imul
out
std
les
pop
sbb
mov
test
rcr
push
ret
outsb
adc
out
push
mov
shrl
push
dec
out
mov
or
mov
sti
and
mov
sysenter
mov
out
xchg
xchg
js
popf
pop
pop
jno
or
inc
pop
sub
sub
push
mov
arpl
mov
mov
jo
inc
out
mov
push
inc
inc
popf
mov
rclb
mov
and
aas
inc
shrl
cmpsb
ljmp
ret
mov
push
mov
outsl
and
ss
cmp
lods
inc
ds
cltd
fildll
loop
imul
data16
inc
stc
and
sbb
subl
and
push
cmpsb
gs
jl
xchg
xor
inc
stos
or
gs
in
shll
insb
sahf
fimull
jmp
stos
fldl
imul
rcrb
arpl
push
mov
int3
ja
dec
push
je
sbb
out
ret
mov
xor
or
jl
fisubrs
jg
mov
jne
inc
ljmp
mov
sbb
nop
mov
add
cmc
in
test
mov
fldenv
mov
and
clc
orb
fists
mov
pop
in
je
aad
rcl
push
push
xor
int
out
jmp
xor
fdivp
in
jle
iret
xorl
scas
xchg
xor
mov
push
sti
mov
aad
lods
or
lods
in
popa
divl
outsb
cmp
xchg
xchg
pusha
nop
mov
fisubl
das
push
mov
movsl
adc
mov
cmpl
add
in
pop
mov
test
sarb
int
out
les
ret
mov
xchg
mov
push
cmp
push
xor
fadd
jb
lret
sub
dec
or
andb
push
jp
push
aam
xor
xor
ds
or
shrb
and
adc
cmpb
pop
bsr
test
mov
aad
xchg
inc
pop
push
inc
mov
sti
out
and
push
or
daa
xchg
and
inc
mov
jecxz
mov
cmpsl
or
sbb
push
movsb
bound
imul
js
leave
push
jns
or
out
xor
fbld
mov
sub
mov
cmpsb
cs
or
mov
neg
push
adcl
xor
push
std
sbb
adc
lock
jle
jmp
imul
call
push
and
cmp
sbb
cmp
dec
inc
jge
aas
or
jbe
or
aaa
pop
mov
aas
xchg
jl
mov
xchg
jns
jo
mov
adc
add
shl
xchg
test
cmp
inc
dec
test
lods
cmpsl
push
loope
cld
and
sbb
data16
and
movsl
cmp
push
les
mov
fmuls
out
inc
cmp
and
mov
push
adc
lret
mov
nop
sar
hlt
xchg
push
inc
sbb
cmp
jecxz
cmc
mov
addl
stc
loope
push
pop
sub
mulb
inc
cmp
add
xlat
jnp
mov
mov
je
xor
and
mov
dec
push
xor
mov
arpl
lret
cld
or
adc
and
mov
daa
jae
mov
dec
loop
push
add
sbb
pusha
or
cltd
mov
ss
out
jbe
xor
cltd
shl
xor
push
xor
gs
pop
testb
sbb
cmpsl
and
push
mov
mov
stc
dec
mov
enter
gs
mov
sbb
fwait
mov
mov
add
lods
bound
mov
imul
adc
ja
je
adc
jns
ja
mov
lcall
xor
adc
mov
in
cld
xchg
jl
xchg
adc
push
lret
ljmp
jge
lret
add
xor
pop
dec
xor
sub
or
jnp
fs
imul
rcrb
fdivr
frstor
test
cmpl
test
jge
xor
mov
ss
mov
aaa
test
sbb
jbe
cmp
push
arpl
push
jnp
nop
xchg
dec
les
mov
add
adc
pop
in
in
push
jns
fsubrl
push
test
dec
pop
fsubr
push
mov
subl
pop
pop
pop
pop
mov
dec
gs
sub
stc
cmp
rcrb
pop
pop
shr
cmpsl
jno
popa
movsb
push
les
xchg
jns
mov
ja
scas
xor
adc
movsl
subl
push
and
inc
inc
mov
push
filds
das
daa
sub
or
out
xor
and
out
dec
sbb
ljmp
xor
movsl
fadds
ret
dec
lcall
lods
or
ljmp
mov
negl
xor
mov
pushf
outsl
pop
mov
or
push
pop
lea
xchg
and
paddusb
mov
mov
nop
rcrb
xchg
andb
cmp
std
lds
xchg
jne
jmp
ja
aas
mov
xor
fdivrl
aam
andb
shll
int
cmpl
pusha
push
mov
cmp
inc
inc
std
dec
sar
aam
pop
and
or
inc
mov
movsb
mov
pop
icebp
loope
sbb
or
fwait
mov
sub
insb
adc
daa
mov
lds
arpl
fiadds
les
or
mov
mov
je
adcb
test
fcompl
call
xchg
mov
xchg
mov
ss
and
andl
int3
or
cmc
add
orb
lods
arpl
adc
push
mov
idiv
movsl
pop
das
push
cmp
jae
decb
and
jp
mov
mov
mov
jle
add
jae
cltd
sub
jge
dec
cmp
aas
outsl
call
inc
jg
dec
jb
and
dec
or
adc
loopne
jle
add
hlt
call
pop
xchg
aam
inc
sbb
push
push
clc
aam
pop
pop
or
inc
mov
dec
sub
arpl
dec
mov
inc
mov
dec
cwtl
mov
pop
mov
shlb
stos
pop
mov
imul
inc
dec
shl
add
dec
mov
mov
dec
and
pop
and
add
lods
bound
aaa
push
or
sub
xor
lret
jae
test
les
sbb
repnz
sub
pop
sbb
mov
les
rcr
push
push
adc
inc
outsl
fistpl
into
and
es
aaa
rorb
divl
mov
daa
xchg
pop
jecxz
adc
mov
jl
sbb
cmp
popa
mov
scas
cmp
push
fs
mov
dec
cmpsb
enter
mov
push
jb
sbb
aaa
xchg
in
movsb
aas
in
adc
sbb
ja
js
popf
sahf
xchg
out
jmp
adc
rol
jecxz
jb
dec
dec
mov
or
pop
push
and
imul
sub
sub
mov
and
push
enter
sbb
lret
push
leave
and
xchg
mov
cmp
jmp
push
jo
mov
jnp
inc
lods
mov
sbb
ret
xchg
hlt
inc
add
sbb
cmp
sub
mov
nop
sub
rolb
fcoml
dec
or
cmp
outsb
pushf
or
push
nop
testl
mov
adc
sbb
adc
adc
push
cmp
ljmp
in
cmpsb
adc
icebp
mov
mov
es
mul
arpl
scas
mov
or
pop
arpl
jne
lods
scas
out
fsubl
inc
mov
inc
shl
test
xor
xor
ficomps
push
stos
testl
adc
cmpsl
pop
aam
sbb
mov
into
sub
rorl
test
popa
push
jge
lods
addl
fsub
ljmp
stos
cmp
adc
popa
pop
movsb
push
out
push
inc
imul
lret
jmp
std
mov
out
lea
loope
daa
leave
xor
pop
cltd
cli
aaa
jmp
cltd
and
push
jbe
lret
adc
sbb
lds
aad
push
leave
loopne
sti
popf
testb
rorb
cs
dec
jae
scas
and
jb
int
out
jns
hlt
cwtl
dec
push
fildll
in
jle
outsb
push
ss
xor
cmp
jmp
xor
lods
leave
mov
arpl
jbe
jns
pop
mov
insl
sar
jg
sbb
fisttps
addr16
xchg
cmp
jmp
fstpt
inc
jp
data16
pop
rcll
cli
push
xchg
adc
icebp
xchg
or
test
imull
lea
loop
add
xchg
clc
push
xor
insb
shrb
iret
add
cmp
mov
xchg
xor
outsl
and
cmc
mov
icebp
lds
scas
pop
test
lds
int3
addl
int3
test
mov
int3
dec
sbb
inc
pop
and
jbe
cli
mov
mov
xchg
jae
mov
pop
ss
test
push
movsl
cmpsb
mov
pop
lods
mov
addr16
push
dec
xor
dec
mov
outsl
jae
inc
nop
pop
inc
sbb
push
jecxz
fsubrs
movsl
je
pop
js
mov
cmp
out
push
sub
or
inc
sub
fwait
adc
mov
xor
enter
or
cmpsb
rorb
int3
lds
mov
cmp
aaa
ret
mov
push
js
inc
cmp
inc
das
stc
dec
hlt
xor
movsb
sbbb
dec
int
cmpsl
add
or
push
xchg
fdivrl
mov
and
iret
add
pop
mov
or
imul
pop
jmp
ja
jge
mov
sbb
aam
dec
push
popa
ret
sub
jl
rcll
je
push
cmpsb
xchg
xchg
mov
push
xor
adc
call
adc
lock
jae
mov
sub
push
int
dec
and
adc
arpl
cmp
subb
mov
inc
out
adc
ffree
jns
mov
dec
shl
enter
mov
fucomip
daa
arpl
subl
outsb
jecxz
jbe
and
in
movsl
cmp
jno
mov
lcall
es
imul
inc
cmp
test
adc
xchg
dec
push
lret
lea
jae
cltd
lock
sbb
xchg
dec
sbb
jle
lret
iret
sub
xlat
dec
shll
or
out
aam
bound
jo
cmp
scas
lret
mov
push
jno
out
subb
sub
sub
popa
xchg
jo
mov
movsl
cmpsb
push
push
and
daa
push
nop
jnp
ret
cmp
lahf
push
icebp
mov
cld
or
rcrl
clc
or
ret
add
mov
daa
jmp
jnp
jp
repnz
mov
xchg
fidivrs
pushf
dec
add
dec
into
lahf
pop
mov
lds
repnz
fwait
cltd
sahf
jmp
cli
sub
push
push
inc
in
inc
mov
add
sbb
push
lds
cmpsl
cmc
rcll
maskmovq
add
mov
add
push
inc
fcmovnb
call
xchg
dec
inc
leave
xchg
mov
xchg
mov
adc
inc
notl
pop
test
pop
cmp
pop
lret
sub
add
adc
inc
pop
and
sub
adcb
pop
mov
hlt
mov
add
lock
cwtl
dec
add
loopne
dec
jo
insb
mov
popa
xor
fldenv
clc
pop
pop
mov
cmp
iret
jg
imul
mov
jp
mov
cltd
idiv
dec
mov
in
das
les
adc
mov
out
pop
add
test
lcall
jg
icebp
popa
aad
les
push
fstl
jecxz
aam
movsl
and
subb
mov
mov
ret
into
jb
adc
or
mov
push
repnz
call
fiadds
arpl
mov
dec
jbe
pop
pop
jno
sbb
dec
cmc
loopne
lea
out
jns
xchg
jl
jle
inc
movsl
push
xor
and
movsb
sahf
xchg
add
sbb
orl
jae
ror
or
in
dec
mov
jmp
sahf
mov
jno
cmc
scas
sub
adc
ds
mov
ret
sarb
inc
aad
daa
inc
ljmp
outsb
pop
sti
gs
inc
aas
sub
cwtl
aam
int3
out
cmpl
fimull
inc
rorb
sbb
es
mov
jecxz
dec
inc
dec
imulb
or
cmp
addr16
sbb
addl
mov
mov
test
loopne
jne
sub
and
ljmp
dec
pushf
clc
mov
push
xor
ja
pop
mov
je
or
mov
push
dec
mov
or
or
sahf
inc
sarb
insb
pop
xor
scas
cld
inc
dec
popa
inc
sahf
ljmp
push
sti
aad
mov
repnz
daa
add
xchg
xchg
cmpsl
push
mov
mov
pop
adc
jae
pop
and
mov
popa
mov
push
lds
mov
fidivrl
inc
xchg
stos
arpl
sti
mov
lods
and
or
mov
je
ficomps
push
sbb
push
inc
fisttpl
into
xor
mov
fistl
test
faddl
mov
jbe
loop
xor
pop
enter
cmp
orl
mov
dec
js
cmp
icebp
and
in
fs
inc
hlt
hlt
int3
adc
dec
movsl
push
das
mov
popa
popl
lcall
add
adc
loopne
or
sub
int
ja
es
cmpsl
hlt
scas
adc
jnp
dec
out
push
cld
scas
test
jge
pmulhuw
mov
icebp
movsb
mov
rcll
push
ja
jne
pop
xor
push
push
js
add
jmp
add
jl
xchg
sub
dec
pop
ret
and
dec
push
cmp
mov
cmpsb
jns
pop
mov
cmp
stos
ja
out
add
movsl
scas
inc
or
and
mov
or
inc
js
sbb
adc
jle
cmp
aas
xchg
jbe
jl
xor
cmp
sub
dec
inc
add
pop
xchg
fst
push
test
movsb
imul
int
loop
js
in
cmp
in
pop
jmp
xor
mov
adc
ja
popa
xchg
stc
add
dec
sbb
scas
jb
jne
stos
xchg
cmp
cli
mov
or
shlb
insl
adc
adc
cmp
sub
cli
add
jno
xor
arpl
subb
ljmp
and
scas
jge
pandn
mov
xor
mov
push
sub
cmpsl
add
dec
sub
arpl
sbb
fildl
xor
pop
or
dec
cmpsb
lods
std
ja
negb
mov
sub
mov
mov
mov
fstps
push
mov
cmc
and
xor
mov
insl
in
push
imul
mov
icebp
test
addr16
adc
pop
mov
lods
xor
cmpsb
xor
in
ror
add
lods
pop
out
cwtl
dec
mov
gs
bound
push
into
add
adc
jle
fnstsw
into
or
test
in
repz
fdivrl
mov
leave
dec
js
in
shl
nop
xor
clc
adc
pop
cld
gs
adc
pusha
cmp
mov
and
cmp
lods
fs
and
jns
lods
dec
adc
inc
adc
aaa
dec
inc
xor
or
rol
int
insl
push
inc
loopne
or
jo
dec
stc
or
int3
xor
imul
out
push
lds
std
inc
shlb
les
xchg
and
push
lret
movsl
push
pop
int3
mov
pop
into
pusha
inc
cmc
and
mov
aaa
lods
lods
shrl
cmp
mov
dec
js
inc
loop
sbb
pusha
and
jecxz
out
adc
fnop
mov
loop
clc
mov
inc
mov
outsb
int3
mov
cmp
dec
sub
ret
repnz
xchg
xchg
mov
sub
pushf
or
hlt
movsb
insl
test
sbb
pop
mov
cwtl
dec
mov
sti
mov
lods
loope
mov
aam
popa
out
gs
mov
into
les
dec
jp
jl
shrb
and
in
adc
fdivl
movsl
lods
ds
test
jp
fwait
jge
aas
mov
dec
stos
push
pop
xor
pop
adc
xor
std
mov
lea
cltd
cmp
push
inc
mov
les
pop
out
leave
outsl
cmpsl
mov
dec
hlt
pop
jno
lods
mov
xchg
fcomi
dec
inc
ja
loope,pn
aaa
mov
dec
cmpsl
mov
arpl
sarb
daa
xor
insl
fs
pop
nop
inc
lds
test
cwtl
mov
lods
cmp
xor
and
cmp
ret
xor
add
sahf
mov
and
xchg
xchg
sbb
xchg
fcmovnu
scas
aas
mov
cmp
repnz
pop
push
push
xor
jno
loopne
sbb
adc
cmp
jp
clc
adc
xchg
imul
ret
and
outsb
push
jg
stos
cmp
daa
xchg
nop
mov
jnp
jne
jbe
loopne
popf
js
addr16
subb
in
dec
mov
adc
dec
popf
popf
mov
adc
lods
movswl
cmc
nop
cwtl
xchg
push
es
mov
cmp
adcw
mov
scas
leave
rol
fsts
sarb
das
adc
stos
xor
push
sbb
push
cmp
sti
xchg
cmp
test
or
clc
imull
test
xor
stos
lret
mov
adc
lods
fcmovnbe
jecxz
push
fcoml
mov
sub
dec
or
fldcw
sbb
mov
je
sbb
imul
sub
mov
lahf
cmp
xchg
adcb
aaa
jbe
call
sub
fstl
mov
pop
xor
jno
iret
notl
mov
dec
sub
dec
jecxz
dec
les
cltd
repnz
xchg
lds
mov
andb
add
pop
cli
popf
inc
cmpl
stc
fbld
mov
add
popa
ja
pop
pushf
mov
repnz
adc
xchg
add
xchg
in
jnp
push
pop
mov
mov
stos
ret
sbb
test
mov
mov
mov
mov
jle
push
cmpl
cmpb
cltd
inc
loope
jb
pop
sbb
in
pop
jmp
xor
lea
and
xor
adc
fnsave
jb
cmp
inc
mov
fs
or
das
ljmp
test
sti
fcomp
sub
mov
mov
jbe
in
js
lcall
add
sbb
enter
and
ds
repnz
and
mov
xor
ficoms
insb
push
adc
inc
stc
push
call
jns
cmc
jge
mov
shrl
pop
push
aad
in
cmp
aaa
scas
xchg
adc
test
mov
add
sub
xchg
or
mov
bound
sub
adc
outsb
lcall
mul
xchg
xchg
test
xor
sub
in
mov
pop
loop
push
xchg
inc
popa
xchg
pop
pop
pop
ss
cmp
inc
push
dec
rcll
mov
mov
add
std
mov
fcmovb
or
test
aaa
dec
mov
nop
movsbl
sbb
adc
pop
jg
mov
mov
pushf
and
insl
ja
sub
xchg
jge
jle
das
xchg
data16
mov
sbb
sub
jno
in
mov
clc
das
mov
cmp
adc
pop
fidivs
lods
mov
gs
mov
inc
dec
add
test
decl
push
outsb
or
shlb
jle
lods
repnz
scas
dec
sbb
lea
inc
pusha
push
test
js
lret
int3
iret
inc
mov
imul
mov
testb
ret
mov
nop
adc
rcll
push
fildll
les
test
cs
and
or
stos
mov
xor
xchg
loop
or
or
fdivl
mov
adc
sub
dec
std
cmc
ds
lret
je
and
cmp
ss
scas
jb
mov
pop
jmp
aad
idivb
dec
lret
pop
dec
test
sbb
sub
jae
shrl
out
lcall
or
fcoml
inc
add
inc
rcl
jge
iret
adcl
jno
mov
or
or
jo
mov
int
push
mov
pop
jae
leave
jo
movsl
sbb
dec
xchg
push
sbb
cmpsl
bnd
add
cmc
call
inc
arpl
mov
cmpsb
xchg
cmc
stos
sbb
fisttpll
pop
mov
push
push
mov
clc
lahf
sub
lds
adc
xor
ror
scas
jle
adc
subb
pop
roll
clc
dec
pop
jge
pop
cmp
jp
lcall
xchg
lret
test
arpl
mov
mov
mov
pushf
aam
and
repnz
push
pop
mov
scas
xor
sahf
pop
dec
stos
mov
lods
push
or
mov
inc
or
sbb
aam
jae
popl
test
fiadds
mov
lods
pop
loope
int3
sti
pusha
in
pop
mov
mov
ds
loope
outsb
pop
scas
outsb
orb
xchg
inc
cmpsl
js
rorb
mov
sub
shr
loopne
arpl
div
sbb
cmp
and
popf
fcompl
lret
in
mov
cmp
adc
lret
mov
aam
addr16
lods
jno
movsl
mov
mov
fucomi
lds
inc
in
sbb
jnp
fwait
repz
inc
aas
xchg
cmp
daa
cmp
out
sub
sub
dec
xchg
push
adc
rolb
fidivrs
daa
xchg
daa
ja
dec
mov
aad
pop
push
in
push
test
test
in
or
les
fcmovbe
jmp
pop
pop
dec
push
adc
lahf
daa
arpl
xor
pop
push
pushf
mov
mov
pusha
jl
hlt
push
and
fildl
mov
inc
sub
jecxz
les
jecxz
rorb
sub
jmp
addr16
xorl
cltd
inc
dec
fimull
outsb
cmp
jb
enter
aam
jmp
int
ljmp
out
int
or
stc
repnz
xor
aam
lahf
cld
mov
aad
sbb
ud0
iret
sbb
jno
and
jnp
std
insl
mov
pop
bound
std
pusha
cmc
xor
leave
push
icebp
adc
test
and
fmull
add
sahf
pop
decl
add
lcall
mov
and
std
shr
dec
loop
sbb
ret
adc
pop
inc
mov
repz
push
adc
pop
dec
ljmp
scas
adc
pop
xchg
xchg
mov
mov
call
arpl
jbe
lret
sbb
push
xchg
sbb
mov
lahf
push
movsb
outsb
xor
sarb
sub
mov
sar
repnz
das
daa
fistps
cmpsl
dec
sbb
pop
es
mull
xor
faddl
adc
push
xchg
mov
and
xor
in
test
inc
mov
rol
jb
pop
jmp
push
push
add
and
push
lret
cwtl
inc
std
add
sti
jae
bound
notb
push
pop
out
or
dec
outsl
sub
mov
std
repz
jge
mov
jle
pop
bound
data16
jmp
or
mov
and
jno
mov
xchg
mov
jb
push
bswap
cmp
and
mov
and
fisttps
sub
lret
push
scas
mov
or
or
jnp
xchg
xor
sahf
out
sahf
notl
fwait
cli
aam
fimull
lock
push
repnz
shlb
jmp
jbe
testl
orl
insb
cmp
add
and
stos
fistl
jl
inc
lods
push
leave
or
ffree
mov
mov
mov
jne
dec
fiadds
add
xchg
call
repnz
and
gs
cmpsb
xchg
xor
and
push
pushf
push
hlt
outsl
fwait
jb
push
dec
push
pop
icebp
icebp
mov
fdiv
mov
sbb
dec
add
and
lret
mov
dec
aad
pop
jb
add
lahf
orb
adc
jne
loopne
xor
mov
and
adc
shrb
cld
sbb
scas
call
xchg
imul
jp
rorl
and
pop
sbb
jae
pop
popa
sbb
sub
push
stos
jmp
pop
add
mov
pop
data16
negl
test
test
in
orb
push
xchg
xchg
incl
sbb
add
and
test
je
inc
jle
mov
sbb
mov
jmp
mov
stos
xchg
or
fwait
std
sub
roll
add
jo
shrl
push
xchg
xor
inc
std
lret
shrb
test
fidivs
fcomps
jecxz
xchg
cmc
sbbl
jmp
adc
push
mov
adc
dec
and
ret
sub
in
test
in
addr16
into
mov
dec
pushf
push
jmp
aas
scas
xchg
stos
fmull
pop
scas
out
std
adcl
inc
test
jbe
inc
rcrb
lahf
or
shlb
push
cmp
cmp
pop
leave
lret
inc
lods
stos
es
cmp
jb
xlat
jno
sar
add
add
fdivs
adc
xchg
xchg
ret
and
or
and
push
andl
inc
in
std
xchg
or
mov
adc
ss
mov
xor
inc
push
cmc
jo
inc
sbb
idivl
dec
test
cmp
inc
sub
mov
pusha
sbb
out
mov
scas
mulb
leave
sbb
sub
rcrb
adcl
inc
jp
jnp
sahf
push
sar
dec
mov
and
scas
mov
call
imul
sbb
mov
stos
stos
pop
xor
sub
popf
sti
jge
mov
aaa
outsl
adc
mov
and
call
cmpb
add
repz
repz
ds
aam
incl
mov
icebp
jecxz
xchg
and
pushf
adc
loop
aaa
inc
fiaddl
lods
scas
clc
sbb
cmp
incl
cmp
test
mov
mov
in
pop
pushf
mov
lahf
sbb
ss
add
mov
dec
pusha
loopne
and
pushf
js
pop
xor
mov
in
jnp
int3
test
fcoml
lret
lea
and
cld
xor
cmp
cwtl
push
push
lds
pop
and
daa
testl
and
data16
mov
call
push
add
mov
sbb
rcrl
xor
sti
stos
mov
inc
cvttps2pi
aas
pop
popa
cld
shr
add
fwait
cmc
into
in
std
sahf
popf
addr16
dec
data16
fisttpll
xchg
inc
adc
rcr
stos
dec
lret
loopne
sub
stos
jns
loopne
in
adc
jb
pop
sbb
fsub
cld
iret
sbb
mov
or
lcall
xor
mov
dec
inc
cs
xor
mov
out
mov
test
xor
push
arpl
or
fprem
sbb
mov
jecxz
sti
mov
jbe
outsb
or
xchg
enter
dec
jae
pop
xor
and
pop
adc
or
add
xchg
xor
xchg
xchg
xor
and
or
xor
pop
movsb
dec
cmp
mov
mov
xchg
xor
subb
outsb
cmp
or
jecxz
lea
push
xlat
pop
mov
out
inc
ljmp
and
push
push
or
cmpsl
and
sbb
incl
movsl
xchg
dec
cmc
subl
stos
mov
mov
mov
cmp
xlat
aaa
aaa
jl
xor
mov
in
mov
pop
out
adc
setp
jbe
sub
push
ret
push
sub
dec
or
fisubrs
sub
test
push
fwait
cld
cltd
aaa
setb
leave
mov
dec
ret
jns
push
shrb
mov
stos
xchg
xchg
cmp
inc
push
popf
enter
outsb
pop
inc
mov
adc
into
cmpsb
ja
shlb
adc
jmp
fs
inc
mov
push
dec
cmpb
pusha
paddusw
sbb
aam
mov
js
int
mov
mov
inc
in
arpl
loopne
push
pop
pop
aam
mov
mov
mov
or
div
inc
inc
aas
add
fwait
mov
jecxz
xchg
push
jbe
in
scas
add
push
mov
shlb
xlat
inc
xor
fwait
sbb
xor
xor
or
pop
jge
scas
sub
xchg
mov
daa
ljmp
or
fadds
push
lods
cmp
cs
test
dec
and
sub
mov
push
cmpsl
xchg
ja
xchg
cmp
add
lods
push
lods
js
loop
mull
xchg
pop
jno
mov
dec
retw
sbb
movsb
cmp
and
dec
mov
sub
lcall
push
cli
scas
in
addl
and
mov
das
xchg
loope
push
mov
loope
pop
cvtps2pi
mov
aas
push
dec
inc
mov
lea
mov
mov
add
aam
lahf
rclb
sbb
arpl
repnz
push
inc
xor
mov
dec
ljmp
mov
jmp
fwait
mov
lcall
mov
cmp
jp
int3
inc
adc
sbb
sub
cmpl
and
cmp
cmpsl
lahf
cmp
xor
adc
adc
subb
push
xor
xor
nop
xchg
clc
add
outsb
mov
test
and
mov
in
xchg
add
lods
mov
sbb
inc
jg
mov
popf
push
lock
jno
stos
shrb
mov
scas
mov
out
stos
jmp
adc
lret
fnstsw
rclb
and
and
call
pop
xchg
sub
push
stos
mov
mov
fdiv
adc
inc
test
fdiv
ljmp
pop
std
lods
sub
sub
jmp
sbb
in
sub
adc
lcall
or
enter
sahf
lds
fcomps
imul
leave
js
or
xchg
inc
call
cld
dec
scas
jge
iret
pop
push
dec
popf
pop
pusha
hlt
shlb
push
test
mov
bswap
and
sti
mov
add
adc
int
xchg
mov
loope
and
iret
jecxz,pt
mov
clc
lock
test
add
cmpsl
jae
daa
jo
xor
mov
inc
adc
cmp
stos
inc
pop
sbb
test
ret
fidivrs
lahf
add
nop
xor
pop
insb
test
xor
pusha
xchg
arpl
or
in
pop
push
mov
mov
mov
das
mov
lret
cmc
mulb
dec
lahf
in
mov
leave
jb
dec
mov
sub
inc
xchg
test
sbb
mov
lcall
mov
mov
pop
mov
sub
push
pop
scas
push
into
notl
sub
std
xor
popf
lahf
push
push
jnp
das
mov
dec
mov
sbb
lahf
xchg
sub
add
and
sbb
ja
imul
push
inc
adc
aaa
or
cs
clc
mov
mov
push
dec
imul
adc
mov
jbe
clc
jb
push
in
inc
repz
sub
scas
push
scas
aad
cmpsb
aam
aam
cld
sbb
or
aam
pop
cwtl
fsubs
or
enter
sbb
and
cwtl
inc
out
inc
jg
enter
jl
pop
mov
icebp
dec
int
outsl
mov
sti
adc
test
push
xchg
jbe
shlb
mov
jp
mov
add
fcoml
push
jbe
adc
cld
sbb
xchg
sub
rcll
insl
decb
or
enter
add
xchg
insb
dec
leave
loopne
mov
cmp
adc
or
sub
pop
loopne
inc
lret
arpl
scas
pop
push
je
orb
iret
subl
cltd
pop
movsb
jmp
mov
xchg
ss
mov
loop
xchg
push
xor
fwait
outsb
adc
dec
fisttpll
mov
cmp
add
repz
adc
cmp
and
sub
dec
jns
hlt
stos
sbb
mov
sbb
adc
pop
dec
push
xor
insb
iret
pop
jo
repz
jmp
std
push
lea
mov
mov
popf
cld
adc
or
ficoms
xchg
repnz
cmpsb
clc
adc
fidivrl
inc
xor
lcall
cmc
xchg
mov
test
sar
pop
push
dec
je
inc
adc
cmp
insl
pop
pop
xor
xchg
mov
imul
push
jle
lds
mov
add
stc
insb
les
mov
cwtl
sub
cmp
add
outsb
mov
cmpb
movsb
or
xchg
inc
jo
adc
inc
push
jl
cmp
das
scas
jno
int3
dec
sub
sub
push
jge
inc
pop
in
mov
mov
mov
sbb
das
add
cmp
dec
fstpt
dec
add
xchg
adc
dec
push
lret
lds
mov
and
sbb
mov
in
sub
pop
push
out
out
lock
jecxz
aad
aad
cmpsb
sbb
and
gs
lahf
sbb
mov
mov
cmp
ljmp
out
hlt
jo
fsubl
ror
dec
sub
loop
fcoml
xor
test
outsl
dec
sti
inc
in
jne
sbb
enter
mov
push
fildl
jb
xor
lods
xchg
scas
lret
dec
push
dec
fsubrl
add
xchg
cld
inc
dec
or
cmc
in
or
sub
and
mov
cwtl
cs
gs
andb
mov
mov
or
dec
add
test
mov
mov
jge
push
icebp
loop
dec
rcrb
aas
shll
inc
adc
pop
sub
inc
mov
clc
add
aaa
daa
push
or
jl
in
mov
out
pop
inc
int
xchg
and
sub
jb
rorl
enter
and
xchg
pop
iret
sbb
push
inc
adc
enter
xchg
mov
xor
ret
cmpsb
push
jns
pop
outsb
repnz
sub
std
xchg
pop
pop
push
lahf
adc
or
mov
inc
mov
stos
or
dec
inc
sbb
cmpsl
js
mov
call
out
test
xchg
sub
mov
sub
ret
pop
test
imul
mov
cmp
jne
fldt
add
push
push
test
ss
scas
cltd
outsl
xlat
adc
lret
enter
in
stos
sub
clc
iret
adc
das
scas
jg
iret
sbb
add
mov
fisttpl
bound
shrl
push
fs
pop
stc
cli
clc
dec
push
xchg
orl
xchg
rcrb
stc
sahf
and
negb
pop
mov
jb
fstpt
sbbl
xchg
sahf
fnstsw
add
int
in
mov
in
add
outsb
inc
fisubrs
jle
cmp
jg
cmc
push
pop
ror
fcom
shrl
out
jmp
sub
fstpl
out
add
push
xor
fmulp
in
sbb
and
repz
jne
sub
jb
mov
inc
or
in
je
mov
rorb
lock
jge
inc
outsb
mov
js
nop
ds
in
push
incl
inc
xchg
ficompl
mov
xchg
call
xor
rorl
add
jns
jne
stos
sub
sti
mov
add
sbb
clc
inc
inc
in
pop
lcall
movsb
dec
add
repz
in
fcomps
leave
add
cmp
iret
push
mov
xchg
push
cmp
imul
std
imul
xchg
mov
jo
fildll
and
jnp
pop
sbb
insl
push
jno
ret
xchg
cmp
pop
sub
in
and
mov
dec
mov
aad
jae
add
cmp
fs
mov
cmp
and
test
xor
or
pop
stc
push
stos
push
mov
jle
xor
adc
out
sub
call
aad
push
pop
inc
test
sbb
push
mov
in
shl
std
mov
in
pop
aad
push
jge
iret
cwtl
dec
jmp
adc
mov
daa
jae
adc
or
popf
aad
mov
rorl
pop
xor
dec
fucom
sbb
fwait
lds
dec
out
sub
icebp
mov
push
loopne
pop
pop
add
mov
sahf
xchg
sub
cli
and
stos
into
imul
pusha
pop
xor
xchg
popa
mov
hlt
xlat
imul
or
addr16
call
sahf
jns
mov
push
mov
loop
push
iret
mov
loope
in
xchg
fists
jb
push
sbb
dec
out
add
add
sbb
inc
add
daa
cmpsb
adc
add
mov
sub
sub
inc
and
lds
outsl
js
sub
mov
cmp
ja
push
sbb
aam
push
push
xchg
fdivl
adc
imul
add
stos
in
jl
int
scas
mov
ja,pt
mov
xor
jle
inc
das
scas
mov
push
xchg
or
inc
dec
inc
cmp
cli
clc
arpl
insl
xor
adcl
pop
mov
lods
adc
pop
sub
mov
imul
hlt
out
out
mov
insl
pop
sub
add
jno
pop
in
jg
jg
jae
movsl
inc
cmp
cmpsb
loop
mov
test
pop
gs
enter
repz
jbe
xor
cmp
adc
xchg
sub
push
loope
lcall
pop
ret
add
vcvtsi2sdl
xchg
insl
fldt
mov
pop
mov
lods
jbe
repz
push
inc
add
push
cmp
out
xchg
flds
adc
xor
sbb
popf
clc
pop
fwait
and
xchg
jmp
sub
mov
int
pop
nop
or
rorl
in
cltd
es
pop
adc
mov
push
lret
les
rcrl
sub
or
or
and
and
pop
sti
mov
dec
hlt
jne
test
pushf
cmpsl
out
xor
stos
and
fs
lret
divb
scas
mov
adc
push
sbb
jae
mov
mov
pop
push
rcrb
clc
mov
push
outsb
sub
or
pop
cltd
movsb
cmpsl
insl
push
xchg
or
lods
out
cmp
inc
rdpmc
rorb
sti
mov
cwtl
ss
negl
cmpsl
fdivrl
dec
rorb
pusha
mov
pandn
or
es
inc
and
cmc
adc
mov
xor
pop
and
push
in
fidivrl
xor
or
mov
out
test
jle
in
jo
and
push
lret
ds
clc
enter
xchg
sti
aaa
fs
or
mov
lds
mov
fildl
push
lock
mov
pop
hlt
inc
mov
pop
pop
push
ljmp
mov
mov
fdivrl
popf
into
jp
mov
or
les
test
push
pop
repz
cmp
push
fidivrl
sahf
dec
out
xchg
loop
pop
mov
cmp
jl
mov
xchg
stos
mov
jge
pop
jle
jno
neg
cmp
lods
aam
outsb
xchg
mov
int3
inc
popf
sbbb
mov
pop
cli
pop
sbb
dec
jmp
jl
movsb
dec
inc
cld
cmpsb
mov
dec
faddp
subl
inc
repz
dec
daa
push
sarl
jge
loopne
inc
pop
aam
mov
xchg
xor
call
jge
add
stos
xchg
cld
pop
add
scas
rol
lret
mov
in
xlat
dec
inc
push
dec
mov
jge
outsl
lods
pop
push
aas
mov
mov
cmpb
into
push
shr
fucom
daa
lods
ljmp
mov
push
sti
sub
mov
cld
test
fiadds
sbb
imul
cld
mov
mulb
mov
jo
or
ret
cli
add
jl
xor
mov
in
sub
cmp
adc
nop
arpl
push
test
and
das
mov
std
xchg
outsb
ds
ja
cld
push
lods
xorb
push
stc
push
jne
rcr
sbb
popa
xor
icebp
mov
testb
mov
inc
mov
aas
out
ljmp
fnsave
fildll
in
jl
push
xchg
mov
fwait
mov
cmpsb
cwtl
fcoml
inc
sub
scas
sub
jae
iret
jae
test
lret
sub
inc
mov
int3
sub
mov
jg
arpl
jl
xor
aaa
xchg
call
out
pop
clc
mov
fisttpl
lock
daa
imul
test
jnp
jle
cmp
dec
jmp
and
movsb
xchg
hlt
mov
hlt
ret
ds
mov
out
push
repz
shll
loopne
ja
test
cs
test
sub
sbb
mov
lea
ret
mov
loop
sahf
jns
xchg
xchg
decb
in
test
or
lcall
outsb
and
cltd
fsubrl
mov
clc
cld
addr16
hlt
mov
movsb
xchg
and
lret
or
lret
or
out
pop
pusha
cmpb
cmpsl
add
and
daa
arpl
rcll
mov
fnstsw
dec
icebp
out
jbe
outsl
and
mov
jle
scas
push
and
pop
nop
push
int
inc
dec
fldenv
and
sub
ret
outsb
jbe
cmp
mov
cmpsb
call
xor
popf
mov
xchg
into
sub
jmp
xor
pushf
dec
sub
aaa
loop
cmpsl
stos
jno
outsb
inc
xchg
mulb
lods
enter
push
cmp
mov
lock
out
inc
imul
dec
lods
rcll
and
push
sbb
cld
addr16
ja
stos
lods
sahf
loop
cli
fld
out
pop
bound
dec
imul
xchg
lret
or
loope
adc
push
mov
insb
pop
xchg
jle
mov
jecxz
lods
decl
dec
rcl
roll
xchg
cmp
push
adc
inc
call
movsb
ret
or
iret
push
rep
ret
push
mov
adc
xchg
mov
xor
sbb
imul
stos
mov
orb
out
daa
jne
mov
fs
and
pinsrw
fwait
or
or
adc
iret
cli
addr16
imul
cmp
cmp
sub
les
insb
call
xor
sbb
ss
xchg
test
jae
psubusw
out
bound
adc
cmp
inc
jb
jge
xor
ljmp
or
pop
cmp
test
or
das
push
insl
cld
sbb
add
test
dec
push
ret
subb
scas
and
pop
or
or
and
scas
enter
jmp
add
das
inc
int
push
jl
dec
fildl
push
xchg
inc
insb
ja
stos
xchg
outsl
or
lods
sbb
sub
outsl
imul
sahf
jne
addr16
xor
pop
mov
and
out
sarl
in
xchg
pop
cmc
fisubrl
in
fnclex
gs
adc
call
sub
aaa
pop
xchg
xchg
mov
inc
cwtl
arpl
dec
jns
jle
lret
inc
mov
ficomps
dec
and
sbb
sbb
xor
pop
pushf
pusha
rol
jecxz
jmp
mov
jmp
adc
aam
adc
out
push
mov
xchg
adc
push
push
test
mov
jne
test
je
jl
xchg
push
push
fcmovnu
call
mov
xchg
cwtl
dec
jae
push
inc
pop
rclb
jbe
fcmovb
lods
and
xor
icebp
sub
and
jecxz
pop
xchg
roll
imul
cmpsb
fwait
dec
xlat
sub
fisttps
nop
jmp
in
push
mov
sahf
int
dec
dec
sti
js
mov
int
pop
mov
mov
dec
hlt
jns
cmp
fstp
dec
icebp
xor
mov
dec
stc
mov
inc
jle
or
or
in
cmp
xchg
xor
out
out
loope
stos
jmp
sti
pop
cmp
scas
mov
pop
mov
out
stos
inc
jge
int3
inc
sub
js
mov
sbb
mov
mov
lock
cltd
sbb
mov
fs
push
push
xchg
mov
shl
push
inc
pop
scas
int3
jge
mov
repnz
add
or
mov
aam
push
imul
bswap
fbstp
push
shl
test
cmp
or
inc
mov
subb
pop
shrl
and
daa
call
data16
cmpsl
cmp
xchg
mov
in
jp
or
iret
in
push
repz
ljmp
and
sub
mov
in
movsb
or
hlt
sub
push
cmp
mov
xor
mov
movsl
out
ljmp
shrl
or
pop
aaa
jg
cltd
cmpsl
push
sahf
fdivrs
in
sarl
das
lahf
jp
or
pop
xchg
int3
xchg
mov
sbb
ds
or
xor
leave
scas
iret
out
enter
sub
mov
xchg
push
stc
shlb
clc
loope
push
jp
lret
pop
sub
xchg
sub
mov
fs
mov
lods
jns
jne
mov
mov
sti
gs
dec
sub
sbb
jmp
jge
jb
jns
and
add
fdivs
push
test
push
sbb
sub
movsl
mov
ss
outsl
sub
jmp
push
xchg
stc
inc
cwtl
xchg
mov
imul
fdivs
jmp
xchg
adc
js
and
mull
dec
pop
sbb
add
pop
fbstp
xor
ret
jo
mov
movsb
dec
adcl
das
lcall
stos
mov
popf
iret
cmp
sub
fnstenv
adc
les
pop
js
push
mov
add
dec
or
pushf
pop
sub
lahf
sbb
inc
lea
and
xchg
xor
mov
gs
call
sbb
inc
adc
mov
jl
out
mov
add
mov
mov
pop
call
jl
xor
cmpsl
fistpl
jns
inc
jo
cmp
pop
dec
insl
es
ficoml
fmuls
inc
movsb
jge
mov
popf
fldt
mov
add
fucomip
es
pop
xchg
mov
push
aaa
adc
mov
popa
leave
ret
cltd
mov
hlt
rol
sbb
test
xor
leave
sar
stos
fidivrl
push
add
sbb
test
inc
xchg
es
les
iret
or
jp
test
sbb
mov
pop
aas
movsb
fsubrl
and
sub
fidivrl
jmp
gs
fcomps
rcrl
pop
in
pusha
push
or
pop
sbb
jno
insb
mov
stos
test
scas
xchg
cmp
jo
cmp
inc
pop
or
cmp
lods
dec
les
inc
pop
fsts
mov
mov
pop
jbe
jo
pushf
lods
xchg
adc
push
sbb
sub
pop
jae
xlat
dec
push
mov
ret
sub
pop
fs
dec
stos
rcll
inc
xchg
aas
and
mov
lret
jo
popa
mov
pcmpgtw
ja
inc
adc
rcl
and
or
ret
dec
push
xor
and
mov
andb
fsubrl
aas
sub
fstpt
inc
ljmp
cwtl
jp,pt
xchg
lret
lock
mov
and
dec
dec
mov
mov
xor
pop
mov
dec
ljmp
adc
mov
sbb
adc
int3
scas
or
movsb
stos
jnp
dec
xchg
fwait
loopne
test
std
sahf
mov
call
jbe
data16
add
mov
push
outsb
xchg
mov
jecxz
pop
mov
xchg
mov
leave
push
fsubl
xchg
pop
arpl
adc
das
pop
inc
aam
jg
mov
pop
jns,pn
xor
xor
mov
imull
dec
cmp
enter
popa
add
in
dec
movsb
mov
jno
cld
cmp
sub
lcall
xlat
adcb
xor
into
fwait
int
sbb
and
add
push
push
sub
mov
xor
pop
inc
pushf
cmc
lcall
sub
push
sub
fcmovnb
xchg
aaa
mov
test
lcall
mov
xchg
out
adc
pminsw
xor
fs
clc
inc
cmp
lds
pushf
inc
ss
jbe
cwtd
cmp
pop
aam
mov
mov
fimuls
fimuls
es
jp
call
mov
cwtl
cmp
lock
jl
add
xchg
mov
jecxz
xchg
cli
mov
scas
xchg
repnz
push
xchg
xor
imul
jno
inc
pop
pop
into
cmp
add
cltd
leave
sbbb
mov
in
pop
pop
adc
testl
jae
cmpsl
pusha
dec
bound
fildl
add
out
lahf
ss
enter
xor
xchg
aaa
nop
xchg
rorl
jl
sub
dec
xchg
aas
iret
pop
and
push
or
cld
imul
sbb
sarb
jb
jmp
push
bound
add
push
sbb
outsl
cmp
xorb
les
dec
icebp
gs
mov
jae
iret
xchg
movsl
mov
lret
xchg
int3
nop
xor
xchg
out
ret
or
add
xchg
inc
xor
test
push
fwait
pop
loop
jg
fadds
add
jnp
iret
inc
or
ret
mov
fnstcw
js
adc
mov
lods
lods
pusha
mov
and
or
jle
mov
mov
xchg
movsl
rep
jge
insb
jl
or
fmull
jae
lcall
push
and
or
lea
outsl
mov
arpl
and
loope
or
push
push
pop
rolb
stos
in
inc
das
jno
mov
scas
mov
test
mov
sbb
xchg
sbb
and
in
cmc
xor
sub
movsl
mov
subb
and
sub
add
push
pushf
inc
fimuls
push
and
cmpsl
add
fucomp
mov
jbe
outsl
fidivs
mov
lret
adc
adc
adc
ds
imul
pusha
lods
sub
pop
xchg
push
das
sbb
and
adc
sarl
or
push
jecxz
pop
xor
bound
mov
sbbb
sbb
out
push
fimull
rcl
lcall
lods
loop
in
int3
outsb
jmp
xor
add
inc
adc
adc
xor
lret
xchg
gs
mov
pop
icebp
pop
aas
pop
movsb
push
cmpsb
cmpsb
iret
test
mov
outsb
test
mov
enter
out
int
aas
rcrl
out
dec
lcall
int3
adc
jns
movsl
mov
lods
inc
add
cmp
mov
sub
mov
xor
adc
fs
or
nop
test
fsubl
mov
dec
adc
pop
out
cli
das
popa
les
stos
push
push
bound
push
aaa
dec
inc
repnz
les
daa
fcomps
or
adc
fdivr
pop
adc
jns
fidivrl
pop
jo
xlat
and
dec
lret
les
pop
add
mov
jo
mov
sub
out
jl
sbb
mov
stos
push
dec
hlt
mov
mov
mov
into
pop
pop
xchg
and
negl
mov
mov
inc
sub
imul
ficomps
mov
sub
negb
int
scas
gs
or
lock
sbb
dec
imul
imul
imul
dec
in
gs
or
pop
sbb
pop
push
inc
pop
inc
lock
jge
lret
jge
icebp
mov
ljmp
dec
sub
and
into
jmp
cltd
ffreep
les
rcrb
lret
mov
lcall
add
add
test
mov
hlt
xlat
cld
mov
pusha
scas
cmp
dec
xchg
outsl
xor
add
or
adc
mov
xor
inc
mov
mov
inc
mov
mov
lcall
clc
int3
sub
xchg
pop
icebp
pop
insl
push
push
jae
aam
pushf
imul
iret
data16
int3
jp
pop
std
cmp
je
in
rcl
test
or
jl
jae
push
cmp
jp
cmp
in
inc
scas
or
mov
or
fldcw
push
aam
mov
lods
dec
or
sub
ret
fyl2x
or
out
daa
mov
mov
ds
and
lock
xchg
ficomps
jecxz
add
sub
jno
dec
mov
cmp
xchg
add
ror
sub
pop
mov
pop
ret
idiv
test
xchg
pop
cmp
lahf
mov
mov
mov
cmp
sbb
in
sub
pop
rcrb
sbb
dec
mov
insl
mov
mov
lret
add
je
ret
mov
jbe
sub
icebp
insl
fs
mov
daa
or
out
addr16
pop
xor
sahf
sub
mov
cwtl
pop
shll
inc
je
or
lock
cmp
loopne
and
in
add
rcr
dec
xor
cmp
mov
aad
shlb
sbb
mov
add
outsb
mov
dec
mov
mov
or
sub
push
sub
ret
aam
scas
je
jb
loop
lret
mov
sub
jp
nop
in
sub
sbb
xchg
cmp
push
filds
ret
or
pop
xor
mov
negb
data16
mov
sbb
leave
xchg
data16
mov
pusha
shr
xchg
into
push
and
and
xchg
dec
pop
out
sub
sbb
scas
out
out
jp
add
movsb
or
add
xchg
and
cwtl
cli
dec
and
call
in
test
cmp
loopne
fs
out
mov
sahf
or
push
sub
sarl
xlat
insl
jne
insb
sub
sub
ficompl
mov
lfs
and
sbb
sahf
dec
decb
aaa
or
jg
cld
push
mov
ret
mov
add
cmc
lods
in
inc
inc
lock
cs
in
push
shl
push
inc
imul
push
jmp
outsb
cmp
dec
shl
dec
test
pushf
xchg
mov
jne
jne
imul
pusha
ret
addr16
aaa
lea
add
pop
cmp
sbb
ret
sbb
outsl
lahf
sti
jae
popf
cmp
cld
lea
mov
cs
xchg
xor
cmc
lods
xchg
out
pop
pop
orb
sti
shrb
mov
inc
fldenv
bound
sub
sub
sti
dec
cmp
test
je
mov
inc
fisttps
push
jno
xor
pusha
dec
cmp
ficoms
xor
jne
fnsave
out
les
cld
stos
es
jge
jle
repnz
sub
mov
mov
mov
ja
sbb
dec
fstl
cld
pop
push
lcall
push
mov
fcompl
lea
sbb
sub
outsl
scas
cwtl
bswap
insb
mov
cmp
das
push
dec
and
jg
out
ret
in
in
sbb
pusha
mov
mov
dec
pop
cwtl
sub
movsb
shrl
call
mov
jae
mov
xchg
fildl
ss
adc
inc
jl
std
and
aam
jno
push
call
cmpsl
sub
addr16
mov
cmpsl
scas
lea
mov
mov
shrb
mov
pop
repz
or
ljmp
int3
pop
mov
jns
and
das
dec
adc
mov
pop
sub
subl
decb
dec
mov
mov
xor
push
lahf
push
jnp
repnz
xor
pop
in
add
cmp
aad
in
mov
fisubl
pop
ret
xchg
mov
adc
dec
xchg
xchg
les
out
call
jle
repz
xor
testb
jne
lods
mov
sub
jl
fcoml
fisttpll
loope
mov
sub
and
mov
testb
cmc
inc
mov
mov
inc
pushl
je
jmp
pop
mov
sub
sahf
jmp
xchg
outsb
cli
fidivl
dec
mov
fs
mov
popf
adc
ja
dec
dec
ss
sub
dec
subl
pop
stos
sub
aam
mov
ffreep
popa
ljmp
addb
pop
push
ljmp
aas
and
mov
inc
mov
std
sub
xor
sub
imul
push
dec
pop
aad
lds
sub
jo
jb
mov
je
es
pop
nop
data16
stos
xchg
sub
loop
and
pushf
cmp
fdivrl
or
aas
enter
dec
call
cmp
cmp
mov
mov
scas
sbb
sbb
fildll
lock
adc
icebp
mov
pop
xchg
xchg
cmpsb
mov
push
inc
push
int3
stc
inc
push
mov
mov
add
stos
repnz
fistl
dec
push
xor
push
xor
and
notl
je
push
push
lahf
stos
pop
push
or
aaa
div
cltd
sar
and
das
add
inc
mov
aas
cmp
mov
ret
leave
enter
or
ja
push
ret
dec
imul
aaa
mov
push
shl
add
xchg
mov
fidivl
inc
sbb
jb
bound
jnp
inc
repz
xchg
mov
jns
pop
ljmp
gs
sarb
fstpt
push
jno
fs
xchg
imul
repz
fsubrp
out
repz
mov
cwtl
cmp
addr16
mov
mov
iret
mov
sub
scas
mov
adc
cmp
push
lea
sbb
push
lahf
or
bnd
ljmp
sub
jb
fistpll
xchg
jl
imul
add
pop
mul
int3
and
test
cmpsb
pop
lds
cmp
and
push
sbb
movsb
aam
mov
loop
or
and
ret
insl
ret
addl
cltd
dec
pop
mov
dec
xchg
push
loopne
mov
push
test
mov
lods
dec
jle
sub
les
add
fisttpl
pop
jl
popf
inc
lock
sub
xor
add
daa
mov
cmp
xor
push
fs
cwtl
or
add
fs
mov
push
cmpsl
test
cmc
xchg
xor
xor
es
outsl
xchg
js
es
inc
pushf
clc
in
jns
repz
sub
inc
adc
insl
lret
mov
outsl
gs
insb
lret
push
sub
dec
andb
lcall
mov
or
and
push
lods
mov
outsb
cmpsb
inc
idivl
dec
ror
dec
push
flds
jo
inc
inc
add
sbb
push
sbb
jnp
out
pop
mov
iret
in
xchg
test
and
sub
jb
mov
popa
push
mov
and
cvtps2pd
fcomps
mov
dec
jbe
lds
push
pop
and
xchg
rorb
push
dec
dec
cmpsb
js
xlat
mov
pop
insb
push
mov
insl
inc
push
ss
lds
stc
jp
sub
xor
mov
xor
sub
xor
mov
adc
stc
pop
aas
imul
sbb
imul
pusha
mov
fadds
dec
jmp
mov
outsb
push
jo
xor
jg
jecxz
pushl
dec
clc
movsb
jne
xchg
dec
jae
inc
movsb
jnp
shrb
sahf
nop
and
scas
dec
shl
xchg
xchg
faddl
ret
add
sub
in
rcl
xor
push
inc
ja
andl
fdiv
mov
pop
sub
lds
cmpsb
stos
sbb
push
jo
xchg
sub
cmp
fimuls
mov
lods
jb
das
ss
xlat
mull
mov
fsub
test
out
push
push
inc
into
rclb
pop
cmp
icebp
iret
int
movsb
lock
daa
cmpl
cli
xchg
movsl
into
fwait
pop
ja
mov
add
lods
and
andl
ljmp
mov
sbb
sbb
outsb
das
jbe
dec
nop
fldt
test
ret
loope
loop
clc
dec
es
xchg
pop
add
cs
xor
loope
aad
in
mov
push
cmp
jle
jno
hlt
into
arpl
ret
dec
mov
mov
lea
lret
push
lret
jne
dec
test
cmc
clc
addb
imul
and
mov
outsl
or
xchg
pop
hlt
imul
xchg
inc
in
stos
jae
imull
mov
les
and
push
jno
test
adc
ret
in
ljmp
xor
enter
inc
repz
aas
daa
and
mov
sbb
xchg
int
fwait
jbe
dec
inc
or
fs
cs
push
clc
lods
fdivrl
cmp
in
xchg
mov
mov
push
jle
sbb
cmp
cli
sbb
data16
lret
decb
loopne
inc
aad
and
push
adc
push
inc
or
mov
add
dec
lods
xor
data16
pop
inc
add
mov
xchg
jmp
xchg
jne
sub
call
insb
jbe
stos
sti
js
jle
pmaxsw
insb
lahf
hlt
mov
iret
shlb
aas
fadd
mov
and
mov
ret
lea
das
cmp
xlat
sbb
sbb
out
sti
and
pushf
out
and
push
scas
jae
lret
xchg
popf
jb
mov
pop
push
push
les
jecxz
sbb
les
sub
rcrb
in
lea
xor
ds
fisubrl
sbb
xchg
jo
lods
cmp
mov
fsub
rcll
aad
loop
xchg
cmpsl
lret
or
outsb
int3
pop
outsb
insl
out
in
out
call
push
sub
dec
jl
dec
call
mov
dec
lret
push
pop
xorb
jae
xchg
and
int
xchg
iret
cmpl
xchg
xchg
js
test
sbb
push
mov
lcall
loopne
clc
push
and
mov
mov
push
aaa
cmp
jle
test
mov
mov
sub
jno
cld
fstp
loopne
hlt
xchg
lea
fiaddl
cmp
test
jns
pop
aad
in
sub
test
add
push
outsl
sub
mov
outsb
clc
mov
hlt
ds
push
mov
fstpt
sub
ret
cmp
call
fsubr
push
loop
ljmp
fisubrs
inc
shl
jle
sbb
dec
out
inc
test
das
aad
test
dec
enter
or
inc
push
mov
int3
inc
ret
mov
sbb
out
popf
test
je
xchg
in
jg
xor
scas
xchg
cmp
nop
lahf
pop
dec
dec
cli
add
add
popa
xchg
loope
daa
ret
xchg
or
lds
mov
in
mov
filds
and
gs
push
jmp
inc
pop
int
inc
pop
xchg
frstor
or
mov
scas
dec
push
push
adc
push
nop
adcl
dec
jle
sbb
lods
es
sbb
jno
jbe
jae
insl
dec
cmp
mov
pop
ljmp
push
inc
rcrl
imul
mov
lods
dec
aam
fldenv
std
int3
ror
repnz
sub
js
imul
loope
fbld
or
iret
testb
adc
bound
and
adc
inc
fnsave
fistpl
jo
pop
pop
cmpl
fstpt
js
mov
cmp
jns
sbb
pop
sbb
mov
loope
sahf
mov
fwait
stc
push
mov
dec
cmp
xchg
mov
cld
cltd
adc
or
xchg
ja
push
xchg
xor
pop
ds
sub
mov
lret
call
jge
sub
arpl
stos
insl
movsl
xor
lds
les
aaa
cmp
mov
iret
push
gs
call
lds
pop
shl
adc
outsb
mov
scas
mov
mov
cld
sub
jg
js
or
sub
jle
and
out
pop
roll
in
out
xor
out
outsl
mov
cmp
mov
pop
out
or
cmp
mov
popf
jae
push
shll
cmpsl
sarl
dec
adc
add
cmp
loopne
test
icebp
jle
cmc
inc
je
and
push
adc
sub
or
mov
mov
inc
sbb
pop
ljmp
jmp
scas
loopne
cmp
test
lea
push
mov
cli
xchg
push
sbb
add
lcall
push
rclb
out
cmpsl
ljmp
aad
push
fldt
pop
repz
daa
hlt
jg
js
cmpsl
push
sar
jge
push
in
inc
lret
mov
sbb
or
lret
ja
pop
lcall
add
sbb
mov
pop
and
movsl
pop
push
pop
sbb
andl
adc
xchg
pop
push
dec
repz
pop
out
test
adc
inc
in
xchg
test
out
jle
lcall
lods
fistps
sbb
sbb
lret
or
pushf
loopne
gs
cmp
pop
stos
jo
dec
lcall
shll
out
mov
or
test
in
push
jmp
xor
pop
sarb
and
shl
jle
mov
xchg
jne
out
lcall
mov
xor
imul
inc
cmpsb
mov
mov
and
sub
jne
out
jne
addr16
jbe
jb
bnd
cli
cmp
movsb
in
mov
shr
cs
add
pop
mov
mov
loop
cs
cltd
pop
ds
mov
outsl
push
pop
inc
shll
push
cmc
push
xor
push
xlat
mov
ljmp
loopne
sbb
mov
fisttpl
inc
sbb
sti
aad
inc
outsb
mov
sub
sub
ret
xchg
push
push
xor
flds
inc
sti
cltd
mov
and
aaa
cmp
js
divb
jge
dec
push
mov
mov
rolb
push
xchg
sbb
push
cmpsl
jns
sub
in
std
andb
into
mov
imulb
in
mov
sub
push
outsb
js
and
mov
imul
or
mov
fmuls
jg
xchg
fimull
add
cli
jle
arpl
or
push
cld
test
stc
fcoml
sbb
aam
push
sbb
or
mov
inc
loopne
sub
lock
xor
jns
jae
mov
es
rorl
inc
movl
inc
jge
loop
stos
rcrb
jb
in
mov
cli
sbb
mov
jbe
inc
sbb
loop
push
lret
jp
mov
scas
movsb
cmp
fsubr
ja
loope
dec
pushf
or
jge
mov
pushf
mov
imul
cwtl
test
insb
pop
stc
pop
jle
inc
dec
sbb
cmp
mov
ljmp
jno
xchg
out
stos
movsl
in
adc
sub
pop
rcrb
mov
jl
pop
clc
inc
sub
jae
loope
fadds
jp
dec
pop
orps
cltd
scas
inc
andl
push
insl
xor
das
call
sub
lahf
mov
jb
adcb
xchg
fs
movsb
pop
dec
ror
or
lret
sbb
or
test
divl
mov
lahf
insl
cmp
or
add
aaa
pop
shll
lea
xor
add
pop
push
push
push
roll
push
pop
sbb
lds
dec
sub
mov
gs
lds
mov
mov
xchg
mov
mov
jb
pop
loope
ss
and
pop
jae
call
cltd
cmp
shll
cmp
add
jbe
arpl
hlt
arpl
jl
es
nop
push
leave
adc
clc
pop
lods
xor
push
pop
popa
cmpsb
stc
cli
and
std
inc
add
push
xor
fstpl
mov
dec
or
and
out
pushf
push
sub
idivl
xchg
imul
std
arpl
aam
arpl
or
push
cli
aam
outsl
aad
mov
push
in
xchg
mov
push
xor
xchg
test
orb
movsb
mul
and
outsl
dec
inc
push
bound
dec
ret
test
movsb
pusha
in
pop
lods
dec
pop
cmpsb
pop
cmpsb
xchg
dec
sbb
imul
mov
sbb
jbe
inc
sbb
cmpsb
add
scas
repnz
fs
jmp
xchg
cmpsl
mov
dec
loopne
and
push
daa
inc
pushl
out
ret
add
or
cld
stc
mov
es
mov
adcb
and
adc
mov
xchg
adc
mov
mov
push
xor
push
test
xchg
jg
inc
xor
insl
push
ljmp
and
cmpsb
enter
test
cli
mov
andb
fiadds
fs
sub
sub
push
enter
sbb
push
movsl
jne
xchg
cmp
mov
pop
dec
test
adc
pusha
mov
rep
hlt
sub
movsb
fdivrl
add
pushf
dec
sub
movsl
lret
jae
and
sub
mov
lods
ljmp
mov
mov
xor
ror
es
inc
cmpb
inc
push
and
sub
stc
scas
push
sbb
add
ds
and
inc
and
orb
mov
bswap
add
fs
ds
cmp
pop
dec
sbb
bound
and
call
dec
sbb
mov
jmp
aam
add
mov
mov
sbb
mov
pop
fwait
imul
repnz
adc
mov
lcall
int
mov
mov
cmp
inc
jae
int3
inc
icebp
outsl
mov
pushf
insb
lds
mov
mov
shll
cmp
mov
and
adc
jl
mov
sub
sbbl
lcall
push
ljmp
push
aaa
pop
xchg
data16
cmp
lods
in
scas
sbb
lcall
popa
or
fyl2xp1
push
add
add
adc
sub
sub
leave
pop
das
repnz
stos
xchg
lea
push
aas
pop
lcall
and
shll
xor
and
outsb
in
loopne
sub
pop
lcall
cmp
jb
lea
jg
aaa
leave
and
cmp
xchg
in
repz
pushf
scas
sub
push
and
aad
fwait
in
push
mov
imul
lea
mov
out
pop
in
addl
adc
fnstsw
push
in
add
jno
add
mov
test
mov
jb
sub
icebp
movsl
or
arpl
xchg
jle
push
mov
lods
cwtl
call
push
push
push
pop
cmp
shrl
cmp
repnz
lock
rorb
pop
cwtl
add
cwtl
mov
lcall
outsb
pop
lock
das
cmc
lcall
popa
aam
fcmove
adc
and
bound
xchg
add
mov
popa
sbb
cmp
mov
add
movsl
pushf
jns
inc
push
test
inc
cwtl
push
lcall
push
cmp
fsubrl
sbb
or
sub
push
mov
cmp
adc
mov
hlt
and
pop
scas
and
pop
mov
adc
loope
out
push
lock
and
push
jp
cld
dec
sub
xlat
jp
cmp
repz
cmp
pop
lret
shl
or
shlb
icebp
push
fimuls
pop
jo
scas
out
add
push
or
or
and
lcall
dec
in
lret
sbb
mov
fdivs
lret
mov
lods
cwtl
int3
jp
push
rcr
or
dec
enter
ss
mov
xlat
mov
les
cmp
jnp
jg
fdivrl
jg
cli
sub
aam
sbb
inc
pusha
js
cmp
ds
or
dec
xchg
add
cmp
xchg
xchg
in
mov
sbb
pop
push
adc
leave
or
mov
xor
loopne
nop
push
pusha
cli
lods
ss
xchg
popa
sbb
sub
repz
jg
jle
repz
cwtl
push
pop
cli
iret
sbb
pop
fwait
cmc
push
xchg
insl
ljmp
enter
int
hlt
mov
movsl
push
int
rolb
nop
inc
gs
div
pop
enter
and
sub
cmp
scas
pusha
pop
pushf
repnz
mov
mov
dec
shll
inc
mov
sbb
cli
inc
lahf
out
hlt
hlt
pop
enter
xor
lret
xchg
or
xchg
clc
cmovno
push
mov
insb
sub
cmp
and
imul
popf
cwtl
mov
notl
xlat
mov
xor
mov
adc
inc
push
xchg
adc
dec
les
cmp
fstps
mov
and
mov
mov
mov
sbb
sti
adc
cltd
cmp
xchg
rorb
hlt
jmp
add
push
jp
push
dec
bound
jp
sti
mov
inc
int3
lea
lahf
lcall
stos
pop
sahf
push
inc
jmp
push
das
out
es
les
hlt
pop
cmc
jp
ja
stos
ljmp
mov
int
sub
mov
mov
and
leave
ss
xlat
xor
mov
inc
aad
mov
xacquire
cwtl
xchg
int
sbb
test
cmp
dec
iret
push
fiadds
dec
cmp
ss
sub
cmpsl
sahf
packsswb
jge
mov
aad
pop
xchg
iret
popf
adc
mov
push
insb
mov
imul
cli
push
xchg
in
cld
aad
ret
jecxz
cwtl
jbe
js
sub
out
int3
fmull
or
lret
scas
imul
jecxz
arpl
loop
ret
mov
jb
dec
dec
bound
popf
push
fnstsw
fiadds
mov
divl
addr16
cmpsb
push
lods
mov
jns
lfs
xchg
jmp
lods
jecxz
shrb
mov
sub
cmp
pop
test
mov
mov
scas
test
pop
pop
sbb
aad
in
test
mov
sbb
cmp
movsb
mov
stos
and
sub
jmp
repnz
pop
jno
and
or
add
enter
sbb
dec
mov
add
int3
repz
push
jmp
cmp
push
xchg
pop
out
cltd
testl
mov
xchg
push
sbb
sbb
in
and
dec
into
in
xchg
int
xlat
fimuls
fst
jae
xlat
outsb
and
lcall
dec
inc
adc
or
jecxz
add
mov
call
sub
out
jo
aad
fistpl
jle
fs
int
dec
imul
mov
push
xchg
mov
lret
and
mov
shrl
in
popf
xlat
and
cmp
ret
shlb
cmpsb
xchg
sbb
and
enter
add
out
dec
cmp
push
fidivl
mov
jl
loope
idiv
lret
xchg
aas
and
arpl
sbb
xchg
xor
or
cltd
pop
cltd
or
lds
out
and
push
int3
ss
jne
inc
inc
sub
adc
mov
sbb
pop
sbb
mov
rclb
sbb
add
loop
push
scas
jp
mulb
sub
inc
ficoms
sbb
push
shrl
jns
cmpsl
je
jne
nop
jbe
movsl
loop
call
mov
subl
push
mov
das
mov
adcb
push
push
inc
aam
test
mov
mov
pusha
es
cld
test
push
addr16
enter
test
sbb
lock
outsb
and
and
cmpsl
incb
xor
cmp
or
mov
data16
adc
out
lea
jmp
ss
jl
adc
ljmp
mov
mov
ja
xor
shll
decl
popf
mov
or
jbe
mov
fcompl
xor
cld
cmp
sbbb
sub
imul
xchg
sbb
arpl
subb
and
icebp
cmpsb
pop
test
mov
adc
xchg
fucomp
ljmp
sbb
loope
jmp
iret
lret
mov
mov
aam
and
pop
fisubs
aas
dec
add
hlt
int
push
push
lahf
jle
fdivrs
stc
push
xor
cmc
adcb
mov
sub
cmp
fiadds
add
imul
mov
enter
or
imul
bound
scas
stos
sbb
add
push
cs
dec
and
jl
js
add
stos
adc
stos
xchg
mov
jmp
and
and
cmpb
sub
fists
pop
pop
rol
jle
xor
lcall
mov
push
popa
mov
pop
mov
mov
sub
out
shlb
sbb
jg
inc
mov
dec
jmp
fisttps
jb
das
mov
in
add
mov
adc
cmp
pop
push
or
cld
hlt
adc
mov
pop
mov
cmp
ja
sbb
adc
mov
pop
jmp
mov
mov
sub
scas
enter
enter
sbb
das
pop
popf
cmp
lods
sub
jbe
jb
out
adc
aas
jns
arpl
mov
xchg
xor
mov
fucomi
int3
fnstsw
ret
dec
push
dec
sbb
mov
les
push
push
pop
daa
jnp
incb
test
adc
sbb
xchg
mov
pop
mov
inc
pop
and
mov
fbld
rorb
and
cmpsb
dec
into
sti
jle
jbe
pop
fstl
mov
ret
sbbb
mov
pop
jne
xchg
inc
in
pop
sbb
push
sbb
mov
xor
mov
mov
iret
ret
xor
movsb
test
add
xchg
outsb
popf
imul
scas
aam
nop
imul
mov
sub
lret
dec
pop
roll
sbb
popf
or
ret
int
cmc
dec
out
sti
icebp
jg
rclb
push
cld
lods
cmpb
push
add
cmp
cltd
lret
lahf
adc
sbb
mov
cwtl
mov
std
mov
bound
enter
mov
negl
addl
out
sbb
addb
and
pop
mov
mov
int3
jmp
pushf
push
adc
dec
mov
adc
cmc
inc
lock
ds
rolb
shll
dec
xchg
jle
mov
cltd
popa
je
xor
cmp
lods
mov
inc
lret
mov
mov
dec
out
ja
lahf
lcall
xor
bound
movb
xchg
testb
inc
or
push
add
push
sbb
sbb
and
dec
out
mov
das
adc
mov
lea
bound
arpl
dec
mov
sub
aam
sub
mov
or
in
mov
push
pushf
fisttps
mov
out
add
shl
lret
mov
subl
insl
inc
sbb
dec
and
add
or
repz
or
ret
jne
negl
mov
fcompl
in
fcompl
cltd
or
fs
mov
scas
fldenv
pop
inc
es
popa
pop
pusha
call
mov
shrl
push
xor
mov
cmpsb
es
cld
jmp
fs
xor
jns
std
add
int
dec
aas
fildll
xchg
scas
lea
in
adc
xchg
enter
or
adc
xchg
ds
cltd
pop
push
repz
mov
scas
clts
add
mov
or
mov
enter
push
in
rolb
fdivr
pop
add
adc
push
adc
pop
cmp
xchg
add
les
lods
pop
loope
in
fs
loopne
cmp
sahf
sar
mov
mov
outsl
adc
int
cwtl
push
jb
xlat
and
adc
fs
sub
pop
push
cld
jp
lds
sub
pop
mov
mov
or
push
fisubrs
arpl
into
sub
inc
lret
in
clc
jp
cmpsl
sub
and
xor
adc
daa
aaa
movl
daa
inc
sahf
stos
or
popa
movsb
mov
fstpt
cmp
inc
aam
popf
int3
mov
cmpsl
and
test
push
das
test
imul
lahf
adc
test
pop
int3
out
sar
leave
sahf
gs
mov
das
jmp
ret
lret
mov
and
mov
push
sti
pop
mov
mov
adc
mov
xor
sub
xchg
lods
adc
push
add
test
negl
inc
dec
stos
jno
adc
arpl
inc
sub
and
push
sbb
lret
les
je
test
scas
mov
xchg
aaa
gs
pop
fistpll
pushl
sub
es
stos
sub
add
imul
repnz
xchg
jo
mov
cwtl
sbb
push
scas
stos
test
mov
ss
jle
imulb
sbb
pop
cs
pop
dec
jns
and
ds
push
hlt
cli
and
add
or
ret
pushf
stc
call
mov
sbb
jns
mov
bound
or
test
les
fcomps
ss
pop
leave
xchg
jge
jge
cmpsb
in
mov
dec
xchg
ljmp
nop
call
frstor
icebp
clc
mov
cmp
sahf
inc
xor
jg
lret
stc
add
ret
mov
sbb
lods
loopne
add
lret
jge
popf
dec
lret
pop
cs
lcall
jmp
mov
lcall
or
pop
xchg
dec
into
outsl
xor
push
cld
adc
push
loopne
sub
pusha
or
loope
es
or
mov
xor
push
add
or
sbb
jmp
mov
outsb
int3
enter
test
dec
jb
daa
int3
dec
cmp
push
repnz
mov
cmpsb
sbb
pop
fcomps
cmpsb
dec
cmp
pop
popa
in
adc
pop
pop
jb
sbb
sub
pop
push
ss
addr16
push
setb
pop
incl
mov
mov
daa
rcrl
shlb
push
iret
jo
das
bound
push
rorl
adc
push
call
imul
mov
out
leave
adc
bound
sti
ljmp
adc
data16
jns
ljmp
arpl
popa
lret
lea
loope
fisubrs
pop
adc
jecxz
mov
sarb
mov
sahf
jb
jle
repnz
jle
mov
cmp
lods
cltd
adc
call
push
mov
je
xchg
add
aad
pop
cmpsl
adc
ret
xchg
subb
dec
fmuls
movsb
pushf
sahf
loope
test
mov
push
cmp
mov
or
mov
sub
lds
mov
repz
pop
xchg
jns
jg
test
pop
decb
sub
rcrl
in
mov
leave
test
sbb
mov
and
add
fmul
sarl
xor
rcl
ss
pop
jns
mov
fmuls
leave
bound
sbb
lock
jne
add
adc
call
xlat
pusha
ja
push
loope
inc
mov
dec
lods
push
and
dec
dec
cs
inc
cmpsl
js
inc
popa
adc
push
jge
add
addr16
test
cwtl
mov
aas
sub
decb
jno
mov
xor
and
scas
test
int
int
xchg
push
or
mov
push
xchg
mov
stc
mov
out
mov
mov
pop
xor
faddp
add
fadds
adc
xchg
popa
cs
insl
xchg
stos
xchg
jge
iret
mov
push
add
dec
cmp
mov
sbb
cli
icebp
movsl
push
pop
sbb
scas
dec
cmp
ja
jns
dec
aaa
adc
insl
popf
xor
sahf
divb
cwtl
bound
pop
fcoms
xlat
popf
or
sbb
neg
xchg
negb
push
out
jecxz
xchg
and
xchg
mov
mov
arpl
lds
in
ss
rolb
rclb
cld
sarb
or
mov
mov
ss
movl
push
out
pop
push
das
push
pop
sub
pushf
jl
sbb
les
cmp
stos
loope
popf
push
inc
js
aad
mov
decb
movsb
jb
cmp
gs
lods
push
cmp
and
pop
ljmp
cmp
pushf
pop
xchg
in
shll
int
sbb
xchg
mov
daa
je
lret
jmp
inc
rorb
dec
sub
nop
xchg
icebp
jecxz
je
insb
xchg
daa
subl
jae
scas
sub
cld
pop
jge
sub
xor
jg
pop
jnp
jmp
invd
aad
sbb
sbb
pop
fcoms
lock
adc
jmp
xchg
orl
xor
aam
push
rolb
mov
and
in
shrb
xchg
jb
frstor
in
test
adcl
xchg
aam
cltd
jg
push
inc
hlt
jnp
mov
inc
movsl
shrb
fiaddl
jl
das
cmc
or
andl
pusha
test
clc
mov
imul
lret
xor
sub
sub
sbb
mov
adcl
push
push
xor
insb
addl
xchg
sahf
jae
sbb
jb
adc
mov
jnp
lock
ljmp
and
push
adc
jae
cld
outsb
push
popa
jp
mov
mov
test
adc
aam
call
mov
sub
mov
mov
aaa
clc
xchg
jecxz
inc
adc
test
xor
mov
lods
sbb
daa
leave
sbb
dec
daa
shr
xchg
adc
rorb
hlt
bound
sub
and
inc
or
inc
adc
xor
push
sub
push
outsl
push
fdivl
ret
loopne,pn
adc
pushf
inc
cmpsl
imul
inc
and
decl
adc
mov
mov
popf
inc
adc
xchg
xor
in
ret
pop
clc
fistpl
xchg
push
popf
in
shll
aad
pop
ficompl
sub
jecxz
xchg
je
pop
cwtl
gs
add
addr16
stos
push
inc
imulb
inc
dec
stc
leave
sbb
sbb
or
push
mov
xor
push
adc
leave
add
fdivrs
sbb
les
es
clc
lret
repz
stc
cwtl
adc
repnz
into
call
mov
and
imul
movsl
jo
int
pusha
jge
aam
popl
popf
mov
cmp
xor
push
xchg
and
jbe
mov
xor
outsl
sahf
sub
into
pop
inc
add
lahf
int3
inc
or
mov
outsl
lods
fisttpll
push
xchg
inc
dec
mov
cmpsb
test
aaa
lods
pop
lock
or
cmp
mov
dec
sti
cmp
out
push
and
addr16
shlb
pop
pop
and
adc
fidivl
jmp
mov
in
ret
aaa
inc
divb
jns
dec
push
mov
add
es
adc
pop
in
mov
popf
loop
jecxz
lahf
push
xchg
cld
dec
stc
lcall
iret
rol
mov
pop
jno
fsin
vpaddw
cs
add
fs
imull
fmuls
xor
cmp
or
push
xchg
subb
jmp
pop
je
mov
pop
xor
dec
aam
icebp
ss
jno
lods
cmpsl
fsts
xchg
les
sbb
adc
sbb
stos
mov
lods
movsl
mov
movsb
test
jge
add
scas
rcr
mov
int3
pop
lock
shll
andl
mov
outsl
jp
in
pop
nop
push
int3
mov
ficoml
scas
loopne
or
es
sub
cwtl
int3
xchg
jmp
daa
add
in
loope
pop
mov
inc
cmp
sub
add
lock
push
iret
int3
lcall
pop
ljmp
or
movq
xchg
cmp
repz
mov
add
jns
popa
idiv
add
outsl
inc
aad
and
cmp
pop
lret
vminps
mov
or
push
fiadds
mov
sbb
out
xorb
or
jbe
xchg
mov
pop
mov
sub
jmp
xchg
push
cmp
lds
mov
or
test
out
mov
dec
aaa
jo
pop
mov
pop
xchg
enter
int3
sbb
aas
cs
aas
rclb
sbb
out
outsl
push
aam
cmp
notl
xchg
or
fistpl
rorl
jbe
into
mov
xchg
rcrb
sub
pop
sub
fstpt
movl
daa
xor
loop
jle
inc
jae
pop
movsb
add
adc
int
ljmp
push
jle
and
mov
or
push
sbb
and
sub
movaps
mov
std
call
jae
fdivrp
lea
outsl
call
sub
jb
leave
movsb
fstp
idivl
sub
or
xor
loope
das
into
shl
fwait
mov
or
sbb
in
xchg
hlt
cmp
push
xchg
arpl
aad
adc
push
inc
xchg
repz
movsb
fidivrl
lock
jecxz
adc
leave
mov
adc
decl
add
mov
test
xchg
lret
leave
jl
cs
fcmovnb
pminub
insl
dec
les
ret
fmul
sub
nop
aam
loop
mov
jne
into
mov
and
daa
or
fmuls
xor
ja
xor
ljmp
call
adc
sarb
loop
and
int
mov
mov
aaa
lret
out
and
mov
dec
ja
mov
out
mov
stc
or
or
sarl
addr16
iret
cwtl
jecxz
lock
sub
push
incl
aad
mov
fld
sar
inc
jnp
jne
cmc
push
outsl
test
cltd
loope
aas
mov
hlt
cmp
xchg
push
test
adc
js
push
rorb
cmp
jp
iret
das
into
in
push
int3
inc
mov
ss
mov
hlt
nop
stos
xchg
roll
sub
add
lret
push
adc
dec
daa
mov
nop
xlat
pusha
adc
notb
push
or
je
jo
repz
test
inc
imul
es
inc
and
cmp
or
sbb
xchg
lds
cmp
scas
add
lahf
fistps
fcompl
adcl
repnz
outsl
jg
clc
sbb
mov
jae
and
add
lods
loopne
imul
sahf
outsb
in
inc
sbb
cmp
mov
jns
and
in
and
es
pop
mov
xor
sub
xchg
out
ficompl
pop
and
ret
sub
clc
adc
cmp
push
int
mov
xchg
push
or
push
mov
jmp
push
inc
dec
inc
out
stos
sub
in
mov
xchg
lcall
jmp
jbe
dec
mov
add
out
popf
pushf
nop
mov
and
cmp
movsl
jnp
jl
js
aam
btsl
imul
fwait
test
enter
dec
sub
lret
fcoms
or
mov
enter
or
dec
pop
push
adc
xchg
jno
xchg
and
fucomip
out
fwait
and
dec
data16
jmp
add
aad
movsb
xchg
cld
aaa
cmpsb
jnp
adc
ret
pop
icebp
push
push
cmpsb
jp
shrb
mov
xor
loop
ret
int
rol
inc
sbb
inc
inc
mov
mov
mov
rolb
cmpsb
inc
test
adc
mov
pop
cmp
pusha
mov
adc
mov
or
jle
xor
pop
daa
movsb
int3
mov
in
add
push
out
pop
jno
out
lcall
mov
jg
scas
aaa
lods
js
out
addr16
gs
pop
jns
sti
xor
pop
adc
push
push
pop
xlat
mov
aam
iret
test
inc
out
nop
inc
jne
sub
inc
mov
ss
aaa
insb
pop
add
and
test
xor
ret
mov
mov
or
jp
pop
int3
pop
es
adc
fbstp
cltd
dec
sbb
jecxz
xchg
push
dec
xor
lahf
mov
mov
pushf
pop
lods
cld
and
cmp
mov
jmp
dec
sub
push
push
jmp
sbbb
adc
push
pop
mov
adcl
push
les
cmp
mov
pop
fwait
jp
aad
jge
pushf
popf
test
fimull
ds
cmp
loopne
mov
lods
test
xlat
lds
js
rclb
xor
mov
pop
push
adc
bound
xchg
int
or
xor
or
outsb
aaa
jle
loope
push
sub
ss
sbb
push
xor
movsl
cmp
push
inc
push
lods
and
insl
mov
leave
push
jmp
pushf
call
leave
out
jmp
xchg
stos
out
les
ljmp
mov
lods
add
bound
mov
cmp
or
xor
or
cmp
lcall
sti
jo
add
into
popa
mov
roll
jo
push
mov
fdivs
in
fistps
or
pop
mov
xor
int
xor
popl
mov
mov
mov
mov
lods
adc
lds
xchg
cwtl
add
or
mov
mov
push
ret
lods
mov
adc
sbb
add
add
jl
pop
popa
in
arpl
adc
and
jp
pop
bound
adc
dec
add
pop
leave
push
mulb
stos
movb
mov
sbb
mov
inc
fs
stc
push
add
lea
pop
cmpl
push
mov
inc
fidivl
nop
cmp
cmp
pop
and
icebp
pop
rcl
nop
mov
cmp
shll
mov
leave
ja
cltd
jnp
test
gs
xchg
xchg
daa
xor
jbe
repz
add
ja
cltd
jle
lods
shrl
sub
jp
mov
daa
jb
out
jge
iret
mov
xor
aam
mov
cmp
xchg
adc
cmpsb
push
pop
sbb
insl
push
rcr
jg
cmpsb
shll
mov
jge
fisubrl
dec
testl
into
or
mov
data16
pop
ss
xchg
and
sti
push
xchg
fisttpll
test
stc
push
dec
jb
xchg
out
ret
insb
adcl
sub
add
sbb
aad
cmp
ret
fs
mov
mov
stos
sarl
mov
es
stos
jle
rclb
leave
mov
mov
insl
int
movsb
cmp
mov
push
push
and
pop
sahf
push
jae
fstpl
pop
in
pop
sarb
xchg
push
jbe
in
data16
je
mov
push
les
stos
inc
dec
hlt
int3
jb,pn
mov
cmp
imul
pop
mov
ret
mov
fwait
js
loop
xorb
or
xchg
mov
xor
jge
push
sbb
sar
sub
or
mov
adc
fimuls
test
jg
push
mov
dec
sbb
andl
adc
adc
inc
mov
jnp
jns
dec
int3
or
je
cs
aad
adc
xor
push
arpl
std
out
mov
adc
pop
jge
push
shlb
pushf
ret
or
or
shrb
ja
imul
sbb
ljmp
cwtl
clc
test
jmp
inc
push
cwtl
lcall
mov
call
movnti
pop
je
imul
and
sub
sbb
in
mov
bound
jne
mov
scas
in
adc
add
sti
pop
sarb
and
add
sub
inc
mov
clc
outsl
or
aad
and
imul
mov
mov
jmp
mov
xor
xor
sub
jo
aaa
nop
icebp
fimuls
ljmp
scas
mov
push
pop
dec
mov
fcos
xchg
mov
pop
lret
xlat
insb
out
jecxz
pop
adc
aad
in
pop
cmp
xchg
and
imul
int3
sub
and
imul
pop
ret
adcl
pusha
jae
inc
imul
fisubrl
leave
mov
jmp
lea
push
lods
divl
scas
sbb
mov
pop
xchg
xchg
adc
and
imul
out
and
sub
and
adc
jg
jnp
fildll
ljmp
push
jle
lcall
test
inc
test
ret
in
and
or
stos
add
sbb
cmp
push
and
loopne
add
adcb
sub
gs
loopne
pop
ss
pop
ret
mov
enter
lret
out
int3
stc
leave
xor
lods
negb
popf
mov
cmpl
sub
fimuls
leave
mov
cmp
loope
les
inc
jae
xlat
leave
xor
mov
pusha
cmp
js
punpckhbw
adcl
dec
pop
into
xchg
aam
mov
pop
call
mov
inc
sahf
insb
or
or
inc
and
inc
mov
dec
movsl
dec
mov
add
js
push
pop
add
xchg
adc
add
sub
out
xchg
mov
sub
add
idivb
mov
lahf
mov
xor
fldenv
cmp
mov
push
inc
add
or
cs
dec
test
xor
lea
or
xor
jl
adc
nop
push
nop
pop
dec
testl
insl
test
loope
dec
push
insl
and
imul
cmc
mov
and
cs
adc
mov
in
push
push
mov
iret
xor
dec
ljmp
mov
mov
sbb
dec
sar
xlat
mov
in
push
cli
adc
gs
add
bound
xchg
sti
gs
inc
lock
ret
iret
pop
xor
jmp
lret
inc
stos
push
aad
dec
xchg
out
mov
mov
loop
push
add
adc
xchg
das
nop
leave
push
mov
mov
xor
push
xchg
push
test
mov
and
daa
cmp
sub
das
fldcw
lahf
loopne
mov
shll
frstor
aas
scas
sbb
lds
pop
lods
lahf
scas
lcall
rcll
fucomp
js
popf
decl
subl
insl
mov
daa
jecxz
mov
mov
push
push
into
lcall
jo
push
pop
fsubp
dec
das
clc
dec
pop
addb
popa
add
ret
cld
ret
pop
or
fs
mov
ret
and
and
rcrb
fisubl
cli
push
sub
cmpsl
dec
mov
jbe
das
mov
orl
sub
push
jp
dec
xchg
mov
clc
ss
fwait
rolb
mov
inc
loope
inc
xor
into
repz
cmpsl
out
pop
into
jbe
add
fstl
lcall
enter
jo
pop
adcb
sub
int3
fcomps
inc
inc
push
gs
cmp
scas
imul
mov
push
xor
pop
js
mov
cmp
push
or
insb
mov
das
popa
push
out
inc
insb
pusha
fbstp
xor
cmp
jp
orl
das
lds
or
jge
mov
and
adc
stc
mov
cmp
bound
fdivp
clc
jg
and
or
mov
inc
xchg
sbb
sti
sub
stos
ror
aam
and
inc
sbb
inc
mov
lcall
sub
mov
out
jnp
cmp
addb
arpl
into
cmc
jb
aam
sarl
out
inc
scas
xor
xor
xor
lods
dec
jle
stc
popa
int
aad
fstl
mov
sbb
pop
jns
xchg
out
aas
mov
rorl
jb
loope
ljmp
js
mov
adc
cmpsl
lret
ja
mov
sbb
jae
xor
xor
mov
sub
pop
cmpsb
cli
inc
push
add
mov
out
call
and
inc
int
dec
mov
pop
jecxz
mov
mov
dec
or
mov
mov
add
pop
ja
arpl
dec
xchg
mov
push
rolb
jo
cmpsl
jge
arpl
bound
orl
call
stc
push
xchg
dec
mov
arpl
mov
cmp
sar
push
ljmp
push
and
push
mov
xchg
rolb
jmp
jae
inc
pop
mov
lahf
pop
fdivs
or
ljmp
into
imul
adc
aas
or
fs
adc
nop
pushf
rcrb
adc
insl
je
jmp
movb
mov
insl
div
add
fsubs
cltd
mov
ja
mov
xor
or
lds
stos
lret
pop
dec
mov
push
xchg
sbb
nop
xor
bound
idivb
aaa
jns
mov
xchg
sbb
xor
stos
lret
movsl
lcall
insb
aad
xchg
jp
pop
js
inc
push
pop
cmp
test
addr16
xor
pushf
je
pop
cmc
mov
or
and
cmp
outsl
push
in
mov
ret
daa
pop
cmc
xchg
sbb
es
pop
add
sbb
nop
int3
xorl
push
fsubs
mov
mov
adc
fdivp
lods
push
jns
pop
jge
push
jecxz
jns
scas
or
mov
xchg
mov
gs
dec
mov
pop
inc
lods
sbb
cmp
pop
sbb
in
cwtl
popa
mov
adc
mov
rep
lcall
out
mov
add
mov
sub
jo
dec
pop
les
iret
jmp
loopne
sbb
popf
mov
add
mov
cmpb
lods
loopne
int3
dec
jle
lods
daa
mov
repnz
xchg
mov
and
jbe
xchg
fcoms
fiaddl
fcmovbe
jp
or
jl
mov
fidivrs
out
aas
cmp
outsl
sbb
sbb
cmpsb
sub
cmpsb
mov
xchg
aas
repnz
test
ret
clc
loopne
push
push
or
iret
jo
hlt
inc
cmp
jne
mov
and
int
xchg
dec
sub
pop
adc
mov
nop
jle
mov
call
in
sbb
adc
inc
pop
mov
std
enter
das
repz
out
adc
insb
es
fcmovnu
cmpsl
inc
add
out
mov
jno
in
jns
cmc
dec
mov
mov
mov
add
sahf
bound
xor
in
push
xor
movsb
pop
xchg
mov
fcomps
xor
bound
nop
pop
mov
scas
stos
aam
mov
sbb
sub
ret
shlb
lcall
test
insl
or
fwait
imul
xchg
sub
fisttpl
mov
xor
inc
andb
xchg
enter
jne
push
cmc
stos
mov
jns
dec
bound
xchg
add
popa
sti
cwtl
cmp
jge
lcall
or
int3
imul
int3
sub
cmc
cmp
out
cs
push
or
sbb
int3
dec
push
stc
push
es
outsb
ds
jge
les
rcrb
mov
xchg
stc
scas
stos
movsl
mov
cmp
int3
aas
shrl
sub
hlt
push
xor
test
mov
in
jo
add
sarl
cld
aas
xchg
jo
ja
sub
das
sub
dec
sub
pushf
dec
mov
mov
ret
xor
dec
dec
mov
or
aas
pop
jo
in
inc
fisubrl
sub
cmp
in
stc
add
mov
pop
ja
shlb
and
out
in
mov
fwait
scas
xchg
dec
popa
push
sbb
jne
mov
fsubrs
fisttpl
popa
xchg
out
push
mov
inc
and
push
mov
dec
sub
sub
xchg
fsubrs
out
and
sub
movsl
das
ret
add
test
stc
pop
in
mov
or
dec
call
shl
jb
aas
adc
inc
mov
je
push
jle
es
or
aaa
lea
in
and
test
mov
iret
insb
pusha
inc
cwtl
xor
xchg
xchg
shrl
loope
loop
or
push
jbe
push
daa
test
aas
xlat
mov
sahf
xchg
mov
sbb
push
shl
mov
imul
and
cli
inc
jnp
dec
xlat
jno
pop
std
or
adc
aaa
sbb
jae
pop
ljmp
popf
and
or
inc
lock
sahf
xchg
fsub
jnp
das
inc
dec
pop
into
add
cmp
in
adc
jns
shlb
mov
daa
lret
jge
loope
cmp
xchg
fwait
into
sbb
and
sbb
adc
into
jno
cmp
stc
cld
pushf
push
out
jbe
imul
push
xor
movsl
loop
dec
mov
xor
cltd
cmpb
pop
xor
add
pop
mov
pop
mov
pop
push
faddp
xor
orb
push
enter
subb
ret
pop
lods
lds
inc
out
mov
stos
ret
idivl
pop
outsl
test
rorb
cmp
cmp
test
aaa
mov
jecxz
dec
jo
xor
leave
mov
mov
add
jnp
push
mov
adc
push
stos
adc
mov
inc
mov
shlb
mov
mov
xorl
mov
xchg
imul
cltd
and
jge
daa
mov
in
and
loopne
cvtdq2ps
or
lcall
je
insl
popa
push
sub
out
xchg
dec
xor
sahf
inc
imul
test
sub
addl
hlt
xchg
xchg
or
out
in
mov
ja
mov
inc
int3
andb
insl
ds
movsl
sub
xchg
xchg
in
out
jae
adc
scas
jno
dec
sub
adc
add
push
jmp
inc
mov
jl
mov
stos
test
adc
cmpl
fisubl
mov
cmp
xor
pop
in
mov
dec
out
jbe
inc
add
inc
push
dec
cmpsb
sbb
sbb
jns,pn
dec
pop
dec
inc
inc
adc
fucomp
or
mov
test
outsb
jae
inc
icebp
mov
insl
mov
dec
mov
or
dec
push
test
cmpsb
test
jne
test
xchg
and
jns
mov
pop
cmp
loope
or
mov
das
sbb
test
jmp
mov
clc
pop
out
jae
or
arpl
jo
scas
fdiv
lcall
test
idivb
and
sub
mov
push
sti
fsubrs
jmp
insl
movsl
jne
fs
aad
rclb
cmpsb
psubb
mov
adc
mov
shlb
inc
jg
push
insl
popf
dec
jle
sti
rorl
or
lea
call
mov
and
and
scas
outsb
sub
jns
inc
and
call
insb
mov
ret
mov
or
adc
push
or
xchg
or
iret
dec
xchg
push
mov
push
pop
out
push
mov
jle
cmpsb
jbe
sahf
cltd
sbb
out
pop
daa
testb
testb
adc
jp,pn
jle
xchg
fimull
sub
out
fwait
or
repz
stc
ret
push
push
in
and
outsb
in
in
sahf
aaa
aad
xor
pop
adc
loopne
js
xor
push
and
mov
xor
sbb
inc
jne
sbb
mov
dec
xchg
mov
dec
outsl
pop
repnz
push
push
mov
push
inc
bound
mov
jecxz
xor
loop
xlat
std
stos
fcmove
in
push
lcall
inc
pop
scas
xlat
orb
test
mov
jl
ljmp
xchg
cwtl
repz
hlt
stc
add
sub
insl
or
mov
cmp
dec
and
call
ror
sbb
lcall
inc
or
mov
or
jns
enter
jne
sub
test
ss
push
adc
fstpl
sahf
call
pop
cwtl
dec
inc
mov
xchg
add
leave
xlat
xor
mov
stc
mov
sbb
mov
lods
mov
push
mov
repz
sti
jbe
dec
gs
orl
outsl
scas
ret
js
pop
je
into
movsb
hlt
pop
shlb
mov
pop
cmovo
mov
sbb
ja
into
mov
add
fs
add
lcall
jo
dec
jnp
pop
lahf
xchg
mov
xor
nop
das
add
jno
jg
in
jns
dec
push
mov
mov
hlt
loop
sub
xchg
add
shll
addl
sbb
fbld
mov
and
jecxz
lcall
add
cltd
inc
sbb
xchg
gs
outsb
dec
mov
sbb
mov
mov
orb
jge
fcmovbe
inc
pop
push
test
cwtl
sbb
mov
cmp
iret
aam
inc
fsts
packuswb
mov
fcomi
xorb
fwait
roll
lret
adc
cld
inc
push
scas
lcall
push
inc
and
repz
lret
xchg
icebp
push
mov
outsb
imul
xchg
sbb
add
repz
inc
leave
adc
and
insl
mov
and
popf
pop
pop
ret
xchg
lock
inc
fdivl
xchg
popf
repz
pop
xor
fucom
jg
pop
sbb
test
popf
lock
lahf
shll
sbb
dec
dec
dec
push
imul
pusha
jecxz
cmpsl
sub
ljmp
dec
sub
pop
pop
sub
mov
movsl
mov
mov
rcll
pusha
scas
jae
out
fimull
int3
xchg
test
mov
test
fwait
jecxz
std
dec
out
mov
mov
or
movsb
push
ja
mov
pop
mov
mov
fistl
push
push
addr16
mov
enter
popf
pop
jp
xor
and
dec
cmp
test
mov
rcrb
sbb
push
fidivrs
jl
lret
iret
hlt
dec
in
push
xchg
push
mov
aad
xor
lds
inc
aad
ds
ss
jle
data16
in
por
pop
in
jmp
sbb
xor
or
and
jae
or
add
inc
mov
mov
xor
into
mov
test
add
or
and
sbb
add
adc
cmpsb
adc
add
addr16
or
add
lahf
jnp
mov
bound
lds
and
bound
mov
push
daa
add
fnstcw
jno
xor
stos
mov
js
pop
xlat
cmc
sub
adc
lock
adc
insb
cmpsb
mov
pop
test
es
jne
out
push
and
add
or
pop
cmc
ret
fdiv
jns
mov
test
mov
xor
pop
cld
adc
or
les
pop
cltd
or
les
out
xlat
lahf
lock
xchg
xor
outsb
sub
loop
popf
push
stos
repz
or
cmpsl
setg
repz
dec
lahf
ljmp
repnz
arpl
mov
inc
jecxz
jecxz
lcall
sub
jnp
dec
sub
sbb
pop
call
addl
lret
pop
xor
dec
aad
stc
xchg
mov
cmp
cmpsl
pop
dec
xor
dec
or
and
jg
jne
push
adc
jmp
sbb
push
adc
jo
jl
sub
jo
arpl
lret
ret
pop
fst
daa
lcall
mov
sbb
push
xorb
fldcw
push
push
stc
out
adc
cmp
mov
cmp
out
lods
jmp
pop
test
xor
mov
jnp
sti
sub
aam
divb
and
scas
and
fidivrs
and
insb
mov
lcall
push
adc
push
push
pusha
mov
fstp
mov
inc
mov
cld
push
scas
or
jb
mov
std
xlat
cmp
stos
pop
xchg
enter
lods
sub
mov
ss
jbe
pop
cmpsb
jmp
out
movsl
jecxz
nop
lds
xor
aam
or
fcompl
or
pushl
rorl
xor
jb
adc
clc
mov
jb
mov
xor
jnp
mov
mov
sub
sub
dec
mov
cwtl
xchg
bound
insl
xchg
flds
adc
imul
adc
pushf
test
gs
fidivrl
in
in
jecxz
dec
mov
lock
xchg
push
in
hlt
adc
push
loopne
xor
orb
or
js
add
fldenv
pop
imul
cmp
fcoms
add
add
in
aam
inc
jae
xchg
cli
subb
ja
dec
xchg
xor
inc
push
and
into
pop
iret
int3
das
das
aad
push
out
cltd
movsl
popa
lods
decb
pop
or
sahf
cs
jbe
xor
jbe
shll
inc
imul
sbb
aad
addr16
jg
iret
repnz
inc
sub
out
jne
push
inc
imul
dec
fldenv
mov
ficoms
and
and
jae
push
jp
lret
push
jno
push
fsubs
xchg
jns
fucomip
mov
and
jmp
sub
in
push
stos
add
jbe
sub
gs
mov
scas
pop
pop
xchg
mov
and
out
jbe
lock
mov
lret
lds
repz
sub
or
sbb
clc
dec
bound
shr
or
adc
int3
in
add
popa
mov
adc
imul
sti
ss
jecxz
fistpll
pop
xor
xchg
pushl
int
push
sbb
in
cli
out
test
adc
or
push
dec
shll
mov
sub
or
outsl
push
rcrl
std
push
jl
jno
test
push
add
js
sub
mov
data16
jb
push
dec
push
sub
push
adc
jmp
add
jne
popf
pop
adc
aam
pushl
mov
aam
pop
sub
inc
pop
inc
je
movsb
inc
addl
sub
sub
fsubs
xchg
jns
or
jno
push
mov
fildl
sahf
mov
pop
mov
xchg
push
lea
jp
aad
inc
ljmp
mov
push
into
dec
out
jns
fyl2xp1
adc
sbb
and
mov
or
xlat
mov
aas
in
stc
bound
out
repnz
jmp
shlb
cmpsl
cmp
popa
mov
stc
or
push
test
decb
push
mov
outsb
jle
cmpsb
adc
cs
xchg
out
add
enter
in
int3
sub
add
dec
and
mov
lcall
jecxz
sub
mov
fistps
sbb
inc
cmp
or
xor
mov
movsb
lcall
mov
jg
out
loopne
daa
fildl
daa
or
xor
and
xchg
pop
hlt
pop
push
fnstcw
xor
mov
pusha
dec
mov
mov
shrl
jo
popa
sub
sub
arpl
imul
aas
push
jne
jmp
pop
inc
jnp
fldenv
mov
push
dec
dec
dec
or
and
xchg
add
adc
mov
arpl
sbb
shr
sbb
test
out
inc
adcb
dec
scas
sbb
pusha
jg
in
loopne
gs
lret
nop
add
xor
test
jbe
xor
xchg
jge
loope
mov
xchg
cmc
repnz
xor
or
ja
les
std
movsb
inc
out
out
pop
call
fistps
leave
sub
dec
stos
sub
jmp
add
nop
dec
dec
xorps
mov
jb
xor
subb
shr
shl
rep
or
out
into
ja
xor
mov
jns
adcb
js
iret
mov
add
imul
pushf
aad
mov
pop
mov
add
jne
nop
push
lock
or
ficompl
lcall
sub
orl
insb
cmp
cmp
inc
fstps
xor
mov
dec
sar
mov
aam
mov
sar
lahf
out
mov
out
push
pop
out
rcr
sub
scas
cmpsl
or
or
push
jne
inc
xor
ret
push
jb
rol
push
je
pop
mov
shll
in
repnz
pop
pop
fnstsw
jns
pop
jb
scas
stc
mov
vmovddup
mov
pop
jns
inc
cmpsb
ret
ljmp
pop
sub
mov
fmuls
ficompl
or
xchg
mov
std
dec
mov
cwtl
sub
jge
bound
jmp
jecxz
mov
psubusw
push
sbb
push
dec
mov
imul
in
mov
cld
aaa
add
adc
or
mov
arpl
imul
cmc
sub
inc
aaa
sahf
test
jbe
adc
stc
clc
xchg
xchg
adc
mov
hlt
mov
mov
cmp
xchg
sbb
lods
icebp
mov
sbb
xor
cs
addb
add
leave
movsl
mov
pop
imul
imul
sbb
jmp
xor
pop
adc
inc
fsubr
mov
pop
mov
push
into
inc
mov
cli
addr16
xchg
mov
adc
mov
mov
inc
and
push
sub
mov
fwait
mov
in
dec
out
mov
aaa
jno
xchg
test
fimull
jnp
dec
sub
ljmp
mov
or
inc
push
mov
aaa
push
inc
mov
mov
or
jg
jmp
cs
neg
or
mov
addr16
jge
test
mov
mov
outsb
inc
xor
cmc
xchg
sbbb
mov
push
mov
int
adc
pop
loopne
mov
push
sub
ja
je
mull
mov
mov
dec
jle
push
insl
jge
mov
jbe
nop
aad
movsl
jmp
adc
rol
jge
lods
int3
lret
adc
aas
jo
pop
in
jge
inc
sub
sub
decb
std
in
xchg
mov
sub
stc
cmp
fldln2
mov
das
mov
jae
icebp
cmpb
out
loope
popf
aam
das
loopne
ss
push
enter
scas
add
in
add
pushf
or
jle
dec
fwait
hlt
add
push
lea
fwait
mov
clc
add
and
push
cmp
jl
jge
jbe
sti
std
lahf
outsb
add
popf
adc
outsl
cmp
xor
mov
jg
pop
dec
popf
jecxz
into
mov
jb
dec
xchg
fwait
mov
add
mov
dec
or
xor
mov
mov
aad
push
mov
orl
lods
movsb
sti
pushl
mov
sbb
push
mov
popf
in
out
ss
cwtl
inc
xchg
addr16
repz
ljmp
pop
out
mov
icebp
sbb
push
es
popa
mov
insl
andl
push
fwait
pop
mov
out
int3
scas
add
jnp
push
mov
jle
test
les
loopne
rol
sbb
jno
and
imul
and
testb
add
loop
pop
lock
sub
dec
mov
test
push
mov
aaa
add
mov
sub
lods
inc
out
adc
or
adc
shl
fisubrl
dec
dec
adc
jl
mov
and
xor
aas
mov
lret
sbb
daa
fcoml
mov
fnsave
adc
jmp
mov
jmp
fdivs
test
icebp
xchg
loopne
xchg
repnz
lret
jmp
loop
mov
gs
mov
std
mov
scas
sti
cmp
pop
mov
addr16
mov
shrb
sbb
and
cmp
cs
xlat
loope
cmp
pop
sub
jp
je
popf
cmpsb
loope
or
mov
pop
jmp
or
xor
out
imul
cmp
fdivs
push
mov
xor
jne
orb
xor
rclb
or
test
stos
mov
mov
sbb
xchg
cmp
loope
add
ds
jmp
sbb
sub
pusha
add
adc
gs
stos
push
cltd
push
push
cwtl
or
ds
xchg
push
test
mov
cmpsl
pushw
leave
pop
and
ljmp
mov
dec
adc
pop
mov
add
xchg
jns
mov
push
or
test
and
ret
sub
xchg
xor
sti
cltd
xchg
gs
xor
jecxz
int3
dec
xlat
xchg
add
sbb
and
or
call
in
xchg
scas
gs
pop
mov
jne
nop
gs
xchg
xchg
pop
xchg
sbb
cmp
icebp
adc
outsl
xchg
mov
cmp
cmc
rclb
sarb
inc
fidivs
dec
aas
cmp
or
xchg
jmp
or
push
dec
idiv
push
mov
sub
dec
ret
jle
cmp
mov
data16
xor
dec
loope
push
int
idivb
out
or
and
shl
mov
scas
cmc
push
loop
imul
pop
aaa
cli
mov
aad
pop
in
pop
in
cmp
cs
sub
cmp
pop
insb
ret
popf
mov
push
and
in
mov
and
bound
das
call
mov
stc
movsl
jne
sbb
sbbb
inc
xchg
sahf
in
sub
adc
xor
and
xchg
or
push
cmp
in
inc
stos
add
and
pop
bound
adc
imul
and
sbb
fdivl
sub
add
jno
cmp
and
loop
nop
and
out
or
push
push
inc
push
rcrl
mov
shlb
jle
mov
jb
out
push
adc
inc
in
out
inc
dec
rcrl
shr
scas
xorl
mull
cmp
test
or
hlt
adc
jbe
lret
xor
js
mov
xchg
daa
add
push
ja
xor
test
mov
mov
in
jl
sbbl
add
jp
add
push
and
enter
mov
stc
jecxz
pop
shll
dec
addb
insl
jmp
aam
or
cmp
xchg
push
mov
sub
pop
imul
sbb
jmp
jns
fdivrl
mov
pop
mov
aam
out
xor
in
daa
lret
test
imul
mov
pusha
push
and
xor
cmp
sti
imul
dec
shl
mov
xchg
mov
mov
push
xchg
add
test
adc
sub
mov
dec
lret
pop
or
in
addr16
xlat
cmp
sub
adc
inc
sbb
test
shlb
leave
les
int
adc
fisttpl
pop
inc
out
mov
sbb
adcb
imul
jb
jmp
inc
push
add
inc
push
dec
ret
xor
fmull
push
stos
ljmp
int3
cs
mov
xchg
subb
fldl
adc
test
xchg
lcall
pop
in
xchg
cs
xor
repz
push
enter
pop
mov
test
daa
mov
in
repnz
orb
pop
inc
fildl
or
aad
scas
repnz
mov
stc
mov
sbb
inc
fisttpl
cmp
adc
mov
inc
inc
sub
cltd
neg
shl
and
sti
xchg
and
jns
push
int
aaa
in
lods
inc
xchg
loope
ds
sub
sbb
sub
mov
dec
sub
pusha
data16
cmpsl
dec
pop
leave
ds
outsb
sub
mov
outsl
shll
mov
sub
stc
fmull
mov
inc
adc
int
clc
adc
jns
jno
bound
sub
jl
adc
inc
enter
inc
jecxz
sub
shr
inc
dec
add
leave
imul
int
test
inc
dec
daa
dec
arpl
hlt
loop
iret
jg
pushf
push
pop
test
xorl
push
pop
cwtl
mov
enter
pop
imul
leave
xor
pop
add
xor
sub
or
lock
frstor
jae
sbbl
mov
out
aam
mov
cwtl
push
xchg
cmpsb
fcompl
std
fbstp
xor
lahf
dec
cld
stos
sbb
shlb
jo
mov
inc
popl
inc
sub
aam
xchg
lcall
rclb
add
push
mov
cli
cld
cmp
pop
out
mov
repnz
ret
stos
jne
xchg
das
pop
movsl
xchg
inc
cmp
fsts
imul
mov
pusha
xchg
sar
xor
jge
sti
stos
fmull
lds
clc
int
mov
je
mov
mov
in
cltd
or
movsb
jnp
push
dec
xchg
inc
in
outsb
or
and
repnz
pop
js
aam
xor
add
push
and
in
imul
xor
out
ret
add
cld
lds
notb
inc
dec
inc
or
cmpl
imul
adc
mov
or
mov
adc
xor
imul
jb
sub
std
out
jne
pop
push
mov
rol
dec
cmp
sub
repz
sar
push
imul
shl
loopne
repnz
or
lds
add
xchg
jo
push
pop
push
data16
test
mov
or
repnz
mov
add
fsts
pushf
mov
dec
and
cmc
xchg
push
in
mov
mov
xor
leave
xlat
orb
jl
dec
sub
push
mov
push
into
lock
out
aas
fwait
loopne
dec
mov
push
sub
and
lods
or
pop
jle
pop
dec
test
popa
mov
outsl
movsb
cld
cmp
daa
mov
sahf
pop
pminub
lds
ret
pop
inc
stos
or
testb
jae
loop
mov
sti
sbbb
jb
mov
pop
cmpl
mov
or
xchg
push
jle
push
xor
cmp
imul
icebp
cmp
std
push
and
or
movl
out
lods
jne
jmp
data16
test
adc
out
cmpsl
nop
bound
pop
test
inc
xchg
repnz
scas
push
cmc
dec
cld
pop
sub
dec
movhps
jp
and
stos
jle
in
lret
push
rcl
mov
mov
add
or
ss
xchg
in
icebp
mov
mov
push
push
cmp
sbb
mov
shlb
addb
pop
pop
adcb
clc
es
inc
in
push
sbbl
imul
sbb
orl
jge
lds
jns
ror
or
mov
rep
inc
int3
test
pop
mov
hlt
ds
add
sbb
ss
fsubrl
and
sub
imull
test
lcall
xchg
or
add
loop
fists
iret
xchg
ret
bound
xchg
or
adc
insl
cmp
pop
jle
push
fnstcw
jg
dec
pop
adc
xchg
jp
ljmp
sahf
dec
sarb
xchg
push
push
aaa
imul
fsubrl
rolb
lods
sti
clc
xor
fnstcw
adc
sub
cltd
lret
jns
jge
add
mov
cmp
icebp
dec
shlb
mov
arpl
or
add
add
cltd
adc
add
lods
sbb
imull
ret
mov
or
in
inc
pop
out
xchg
push
or
add
jo
and
fsts
int3
lret
stc
mov
out
adc
mov
es
mov
insl
inc
cmpsl
inc
mov
mov
dec
mov
or
dec
repz
pusha
clc
jp
iret
inc
mov
scas
cmp
cwtl
notb
pushf
jae
jge
cs
loope
movsb
repz
pop
dec
frstor
dec
mov
push
pusha
add
jmp
xor
push
div
mov
mov
adc
cmp
xchg
test
adcl
dec
out
lods
cmp
popa
sbb
mov
sbb
xchg
mov
ja
mov
js
mov
push
into
and
push
mov
test
cmp
push
cwtl
ret
adc
jle
sahf
or
call
jae
leave
rol
jns
mov
pop
outsb
add
lods
xor
dec
insb
addr16
inc
jg
and
fistl
push
je
test
mov
push
inc
pop
sbb
xor
jns
xor
faddl
dec
push
xor
rcll
push
in
dec
ret
test
mov
lea
subl
sbb
sbb
pop
jne
adc
repnz
lods
into
arpl
xor
into
inc
mov
xchg
inc
and
lods
aas
mull
aam
sbb
scas
mov
inc
mov
stos
mov
sti
adc
and
sbb
cmp
stos
lahf
cmp
mov
scas
int
mov
ljmp
xor
adc
sti
pop
push
xchg
mov
mov
leave
mov
subb
push
push
cmpsb
jecxz
scas
ja
fsubrl
stc
int3
pusha
push
sbb
lds
loope
ret
sub
add
aad
lret
cmpsl
mov
xchg
rcrb
subl
repz
aaa
xor
aas
mov
mov
test
or
mov
or
js
cmp
xor
inc
mov
cmp
mov
imul
loope
adc
mov
and
inc
iret
or
sbb
stos
sarl
rcrb
movsl
inc
and
and
sbb
ficomps
insb
xor
pop
lods
ds
pop
xor
icebp
mov
cs
push
cmc
lods
lock
pusha
cmpsl
sbb
orb
mov
insb
xchg
mov
fcomp
call
mov
mov
xor
in
jmp
in
adc
mov
out
in
pop
pop
and
mov
das
sbb
mov
arpl
rorl
aam
push
sub
push
jl
fdivs
out
bound
inc
movl
jecxz
ljmp
adc
cmp
xchg
repz
and
aam
xchg
movhps
rolb
aam
sub
inc
pop
jno
xchg
mov
xchg
not
inc
mov
dec
daa
mov
repnz
xor
cs
push
movl
loop
jmp
or
outsb
inc
jo
pop
test
lret
jns
in
add
test
xchg
sbb
les
sahf
loope
mov
jno
into
mov
mov
xchg
and
jle
inc
hlt
inc
sarb
adc
sub
jo
add
cmp
cwtl
stos
xor
inc
fildll
sub
push
cli
and
jecxz
jbe
mov
jp
gs
xor
jmp
addr16
outsl
pop
jp
mov
xlat
movsb
mov
fsubrs
je
mov
lods
lret
cmp
popf
ret
xorl
jp
subl
out
cmpsl
sub
mov
in
xor
fcmovnbe
mov
cmpsl
mov
stos
fbld
jp
sub
sahf
xor
push
push
dec
sbb
insb
adc
sbb
xchg
mov
xlat
pusha
mov
xor
das
cmc
jg
clc
fcompl
sti
add
mov
out
sahf
cmp
jp
mov
adc
jg
dec
repnz
xlat
pop
shrb
or
insb
je
inc
outsb
mov
mov
popa
xchg
outsl
das
sbb
or
test
jnp
movsb
fldenv
dec
or
push
or
or
scas
lcall
aaa
push
call
int
shlb
shrl
shrb
mov
out
mov
sbb
ret
enter
sbb
cmc
mov
jb
out
xor
sbb
xchg
popa
prefetch
cmp
ljmp
cli
mov
xchg
js
int3
fs
mov
sub
inc
shll
push
movsb
add
xorb
mov
fnstenv
mov
loope
push
lret
mov
inc
fwait
cmc
mov
push
cmp
mull
xchg
push
flds
inc
jle
xchg
inc
mov
add
xor
adc
aam
xchg
rol
je
in
leave
ljmp
dec
cmp
add
jae
shl
dec
jl
cwtl
es
adc
jo
mov
push
out
xchg
push
push
mov
data16
mov
ljmp
rolb
fsubrs
enter
cmp
cmp
fnsave
repnz
adc
and
inc
or
sbb
sub
pushf
je
jg
xor
ss
mov
es
sub
push
testl
and
add
popw
repz
addr16
rcrb
push
es
jle
insb
scas
sahf
dec
in
cmpsl
movsl
pop
inc
fistpl
xor
into
push
push
xor
and
sub
leave
sub
or
pop
je
jbe
fimuls
mov
mov
scas
sub
xlat
es
xor
pop
mov
out
shrb
aas
inc
fnstenv
and
aad
js
or
inc
ljmp
xor
push
push
pusha
push
cmc
in
iret
inc
fcoml
lods
mov
lea
lret
cmpsl
xchg
enter
xlat
sub
call
mov
into
loop
aas
or
sarl
xor
nop
in
xor
pop
push
pushf
js
and
jmp
ret
and
inc
sub
cmpl
push
push
xor
lret
add
mov
lahf
lods
mov
and
sbb
loope
es
mov
outsb
push
lea
rcr
ja
cmp
and
loope
fistl
imul
mov
dec
mov
cmp
scas
testl
or
test
movsl
push
arpl
mov
es
out
inc
aad
xchg
mov
xor
push
data16
or
add
movsb
shl
mov
cmp
in
cmp
lahf
in
in
mov
mov
into
cmp
xor
push
pusha
stos
xor
rcll
inc
sarl
fwait
pushf
movsb
mov
mov
jae
outsb
pushf
add
lods
cwtl
lret
cmp
xor
sbb
push
lds
mov
std
nop
lcall
inc
add
or
mov
sahf
add
xchg
jb
xchg
loopne
push
sub
push
test
cmpsl
and
sub
mov
stc
mov
xlat
loopne,pn
mov
push
xor
jge
das
jmp
stos
sbb
push
shlb
mov
aas
pop
repz
ds
jns
sbb
or
xchg
in
sub
sbbb
in
fsubrl
cwtl
ret
or
testb
and
and
cmp
fstps
call
rorl
jle
sub
stc
pop
scas
jo
mov
pushf
loopne
out
sbb
push
es
popa
jge
movsb
adc
dec
and
aam
hlt
jmp
jl
add
jns
xchg
aad
ja
inc
lret
pop
cmp
in
lods
fdivl
aaa
cmp
push
fildll
fld1
repnz
xor
cli
jg
inc
mov
jb
fadd
xchg
adc
add
js
lcall
sub
adc
dec
scas
daa
pusha
sub
shlb
mov
push
fbstp
adc
decl
out
adc
and
pop
sub
xor
enter
or
sub
out
jle
dec
lods
pop
js
push
mov
pop
cmp
cmp
stos
inc
jae
push
sbb
or
sbb
inc
cli
sbb
pop
sub
loope
cmp
mov
aam
call
push
insl
sbb
fucomp
xor
push
std
or
adc
nop
loop
mov
ficoml
mov
popa
add
mov
dec
adc
roll
subb
push
cmp
pop
push
mov
lds
repnz
mov
cltd
out
jno
cs
rolb
iret
and
in
mov
sarb
sbb
call
xchg
lock
test
jns
ret
cmp
sub
mov
xor
fiaddl
lods
std
shlb
pop
cmpsl
sub
and
push
cmc
cmovo
push
xor
repnz
test
in
lahf
pop
pop
xchg
outsl
sbb
pop
push
cmp
imul
das
rcrb
clc
mov
pushf
sti
fcomip
notl
mov
inc
pop
daa
mov
popf
xchg
mov
cltd
mov
shrb
into
add
sti
push
insw
pushf
out
and
imul
xor
ret
mov
mov
cmp
mov
dec
sti
inc
mov
push
lret
test
xchg
jle
xchg
mov
inc
enter
xchg
add
pushf
leave
add
mov
pop
sar
popf
insb
push
xor
popa
sub
insl
insl
aam
fwait
sbb
aas
shl
insl
insl
push
dec
into
push
loope
or
insb
xchg
push
mov
out
jnp
mov
or
scas
push
mov
xchg
in
jge
cld
sbb
in
mov
xchg
jl
test
pop
ret
sub
gs
mov
sub
add
loopne
pop
jnp
lret
add
les
xorb
outsl
xchg
add
jo
dec
jns
loop
or
lcall
cmp
std
mov
popf
fstps
insb
dec
pop
ret
mov
aad
ds
adc
lret
and
xor
inc
dec
int3
mov
add
xor
shrl
movsl
xor
pop
sbb
out
fs
or
jmp
lock
cltd
dec
mov
testb
stos
xor
call
xchg
mov
sub
sbb
push
dec
movsb
mov
add
test
std
pop
rolb
sub
aad
lcall
fwait
ds
ret
sbb
mov
jns
dec
andl
fstl
or
cmpsl
testl
xor
mov
dec
dec
push
or
mov
sti
addr16
lods
adc
mov
lahf
inc
jmp
outsl
jl
jbe
divb
dec
xchg
inc
mov
pop
movsb
out
test
mov
jmp
cmp
cmp
cli
jmp
cmpsl
pop
cs
lcall
aaa
push
loope
std
inc
data16
cmc
shll
sbb
mov
push
lcall
and
fbstp
movsb
notl
or
pushf
xchg
sbb
xchg
rolb
mov
or
pop
push
push
mov
add
rolb
clc
fisttps
adc
bound
mov
inc
xchg
push
aam
add
fstps
push
jo
inc
jae
add
pop
push
je
xchg
sub
push
dec
dec
jns
fs
lods
push
mov
pop
xchg
jns
jge
add
adc
mov
add
stc
pop
lods
adc
dec
arpl
mov
inc
cmc
cld
out
mov
fidivl
xchg
paddsw
sbb
repnz
aaa
and
icebp
aas
outsl
jb
push
dec
lcall
xchg
mov
int3
dec
into
sar
flds
les
mov
push
in
shll
movsl
cwtl
xchg
pop
ret
in
out
fistps
mov
xlat
loope
pusha
xlat
scas
jg
clc
push
sub
and
inc
aas
xor
xor
cmp
jo
fwait
loop
lds
mov
mov
lds
test
aam
xor
cmp
or
and
dec
call
and
or
jae
sub
js
adc
lret
and
xchg
cmpsl
fisttpll
pop
xor
pop
lcall
ret
push
xor
nop
inc
mov
jnp
pop
ficompl
test
out
icebp
adcb
pop
dec
sub
pop
push
jne
jno
pop
ficompl
pop
inc
fcoml
nop
mov
mov
lret
adc
mov
adc
stos
loope
ret
xor
std
push
shll
inc
cli
hlt
mull
xor
mov
out
loopne
inc
xor
movsb
aad
mov
or
int
cmp
cltd
jno
iret
push
loop
fsubl
xchg
lock
push
jmp
adc
push
mov
mov
jmp
dec
sub
je
sbb
pop
loopne
push
xor
fwait
jmp
into
sahf
or
xchg
dec
sar
dec
sub
roll
mov
and
adc
mov
add
cld
cmp
dec
std
add
jecxz
sahf
and
jg
aaa
add
sbb
lahf
jl
cmp
sub
movsl
in
sub
add
fwait
ret
aam
or
mov
das
aam
andb
mov
int3
fmuls
loopne
dec
lcall
push
or
imul
mov
add
int3
add
imul
xlat
pop
out
push
in
repnz
sbb
sbb
jecxz
xor
pop
stc
inc
stc
jmp
out
jo
xchg
mov
pop
aaa
repnz
test
jmp
leave
add
and
mov
or
sub
jl
insl
dec
cpuid
sbb
jb
adc
mov
jns
mov
jge
notb
fnstsw
dec
mov
xor
add
sub
out
mov
or
xchg
loopne
or
data16
lcall
sbb
aas
xor
push
push
adc
xor
and
jnp
rcr
fwait
fwait
enter
cmp
mov
push
cltd
imull
pop
xchg
mov
sti
popa
mov
jnp
dec
xor
add
xchg
popf
lock
dec
pusha
hlt
bound
and
loope
scas
sbb
andb
sbb
sbb
or
xor
cltd
jg
dec
jnp
push
in
jl
mov
idivb
mov
xchg
mulb
xchg
in
outsb
dec
push
fimull
push
addb
rclb
xchg
xchg
jbe
mov
testb
xorl
and
xchg
push
into
mov
jb
cwtl
mov
imul
je
cwtl
dec
mov
lret
mov
xor
add
inc
cmp
dec
jb
cmp
shlb
sahf
pop
test
in
fstpl
lahf
repz
pop
test
sahf
imul
out
scas
fdivs
or
in
mov
pop
jnp
sahf
dec
imul
inc
mov
loopne
push
push
repnz
mov
sbb
adc
movsb
imul
into
lods
sbb
push
popa
jge
jno
pusha
sarl
mov
sub
push
pusha
fdivrl
fwait
adc
and
lahf
or
es
cmp
test
push
xchg
mov
pop
lret
mov
stos
jge
pop
repz
das
mov
fimull
add
inc
xor
imul
mov
mov
adc
pop
into
pop
inc
inc
iret
dec
push
pop
or
cmpsl
enter
push
scas
inc
xor
sub
int
add
fstl
movsl
push
psubd
and
jl
fistl
pop
sub
jle
test
call
sub
mov
cmp
adc
push
xchg
rcrl
loope
sbbl
in
sbb
cmp
aam
inc
dec
push
jg
jae
outsl
adc
or
dec
jns
mov
lock
jae
int3
addl
adc
jp
mov
stos
popa
outsb
outsl
jno
push
loopne
inc
pop
jp
pop
mov
mov
or
jle
xchg
fdivl
push
insl
and
pop
int3
es
mov
sbb
aas
mov
pusha
mov
out
les
xchg
mov
scas
add
or
out
int3
sahf
xor
jbe
sbb
dec
dec
insl
xchg
push
xchg
jle
popf
pop
jno
xor
cld
mov
adc
cld
inc
xor
xchg
inc
iret
sbb
mov
outsl
pushl
adc
lret
xorb
sbbl
addr16
cmpsl
in
in
hlt
inc
mov
imul
push
or
mov
cmpsl
push
add
cmc
jbe
xchg
xchg
and
mov
fcoms
into
leave
pop
outsb
pop
loopne
mov
imul
and
insl
push
pop
mov
or
and
dec
jmp
sarb
lret
jge
lret
pop
fcomps
mov
mov
mov
test
mov
or
xchg
jnp
sub
cmp
cld
rcr
pop
xor
lret
out
pop
sub
cwtl
notb
jne
mov
insl
ret
movsl
sbb
xorb
movsb
cltd
rcr
pusha
mov
lods
dec
movsl
rcl
xchg
and
adc
inc
dec
sbb
clc
adc
mov
jnp
sub
or
xor
sbb
subb
daa
cmc
outsb
push
jmp
addr16
loop
js
mov
mov
ja
and
xor
xor
divb
scas
xor
or
orl
repz
xor
mov
outsb
imulb
jp
sti
mov
outsl
gs
xor
inc
pop
je
dec
sub
jnp
add
inc
push
xchg
mov
cmpsb
push
or
outsb
xchg
jo
and
js
push
sub
xchg
push
cwtl
sbb
lods
jp
add
pop
std
pop
adc
xchg
daa
mov
mov
bound
nop
lahf
aas
adc
sbb
mov
pusha
mov
pusha
in
sahf
idivb
and
xorl
data16
sub
fidivs
sbb
in
xor
cltd
pop
lcall
test
shrl
pusha
dec
inc
hlt
cmovg
mov
mov
in
loope
lods
dec
mov
sbb
mov
clc
repnz
mov
mov
data16
inc
jg
cmc
adc
mov
call
push
push
shl
xchg
fs
fisttpl
in
or
mov
dec
dec
leave
xor
add
sbb
cmp
mov
pushf
gs
inc
pop
std
cltd
sbb
or
pop
xchg
mov
xor
push
test
movsl
xor
out
cmpsb
sub
nop
mov
mov
outsb
adc
fwait
loope
imul
sti
add
pushf
inc
icebp
xor
mov
cltd
cmp
jle
mov
repnz
or
iret
cmp
sub
xlat
cmp
enter
repz
xchg
in
inc
sbb
push
inc
push
jecxz
push
notl
mov
dec
and
sub
fcoml
cmpsb
inc
stos
lcall
call
into
movsb
stos
aaa
out
in
xor
clts
cwtl
jmp
pop
movsb
xorb
dec
push
scas
mov
mov
xor
fldl
out
pop
cmp
xchg
or
mov
ja
adc
add
cmp
out
push
shrb
xchg
inc
and
xchg
orb
mov
xchg
rolb
fwait
decl
cli
adc
shll
fnop
mov
and
mov
cmp
or
pop
insb
add
add
lcall
jmp
push
std
or
jno
outsb
xchg
dec
mov
jns
sub
cs
jae
imul
pop
xchg
adc
cmpsl
mov
dec
imul
hlt
push
mov
gs
add
push
dec
push
mov
inc
add
sbb
sub
ss
leave
mov
enter
push
js
inc
dec
daa
cmpsb
scas
fwait
adcl
sub
push
sub
test
xor
pop
pop
pop
outsl
jp
lcall
mov
mov
mov
roll
mov
mov
jmp
out
sub
push
xchg
fs
mov
xor
dec
mov
mov
xchg
testb
push
cmpsb
xor
pop
mov
je
push
push
ficoml
dec
xchg
iret
movsl
clc
pop
je
shl
lret
lret
hlt
roll
in
push
lods
pop
cmpsl
imul
int
insb
sbb
ds
push
inc
gs
sub
in
sub
jae
mov
cmpsl
stos
mov
cmp
leave
movsl
rclb
fistpll
test
test
mov
shll
pop
testb
cmp
push
pop
dec
mov
hlt
push
jb
lock
mov
dec
cmp
mov
mov
sarl
push
mov
or
stos
xor
mov
sub
sbb
aaa
inc
fsubs
sub
insl
rolb
jns
xor
scas
cmpsb
xchg
out
sbb
push
int3
pop
add
loop
dec
inc
scas
test
lods
popl
ja
add
push
add
insl
jle
pop
ret
or
hlt
outsb
enter
insl
shrb
in
push
decl
xchg
mov
fs
sub
ljmp
or
notl
fstpl
loopne
or
xor
add
flds
shll
movsb
sbb
std
xchg
add
dec
sub
scas
mov
ret
fwait
push
jg
add
xchg
and
cmpsl
in
rorl
jmp
loop
aaa
cmc
sbb
test
mov
xchg
cmp
jns
pop
pop
sub
or
dec
lods
and
sub
ja
mov
sqrtps
pushf
sub
adc
in
add
mov
scas
jecxz
push
dec
dec
cmp
push
popa
rcrb
xchg
xor
cmp
xor
sarb
sbb
sbb
aas
lcall
jecxz
push
cmp
mov
neg
arpl
lock
daa
lret
add
add
mov
sar
jns
dec
cld
dec
mov
add
jmp
pop
into
push
fdivrp
mov
pop
xorb
mov
jl
sub
idivb
xchg
add
out
push
xchg
out
aas
subb
les
cmp
pop
fistpll
sbb
sbbl
test
loope
ficomps
mov
out
hlt
inc
push
mov
xchg
lock
cmp
pcmpgtd
or
sub
or
inc
fisttpll
add
sti
sub
cld
inc
push
push
sbb
pop
repz
mov
pop
lret
mov
mov
fimull
push
stos
or
sbb
sub
or
test
lret
js
pop
cmp
xor
dec
pop
cmp
iret
add
int3
mov
sti
jg
cli
out
cmpsl
pop
lods
dec
xlat
push
loop
test
mov
pop
or
xor
enter
adc
jg
dec
pushf
push
ficoml
or
xchg
sbb
mov
mov
enter
inc
addb
sahf
inc
into
inc
xor
inc
inc
mov
cmp
mov
pop
xor
dec
or
push
test
push
jo
sar
fistl
lods
lock
aad
xchg
push
cli
mov
stos
xchg
mov
jmp
mov
or
outsl
insl
and
mov
mov
and
push
mov
aam
mov
push
or
adc
mov
in
fldcw
xor
cmp
push
lods
loopne
shl
xor
mov
adc
addr16
ss
pop
fsts
mov
push
dec
add
outsl
xor
cltd
mov
mov
daa
enter
jnp
dec
xor
dec
fiadds
ljmp
jmp
pop
mov
sub
jle
adc
pop
jns
mov
outsl
scas
jmp
xlat
sahf
mov
cltd
insb
sub
mov
int
xchg
jnp
popf
fsubl
daa
dec
add
lods
mov
ss
mov
loopne
cmc
cmp
sbb
pop
ret
adc
ffree
add
ljmp
xlat
mov
dec
aas
push
xchg
lahf
inc
gs
adc
pop
andl
push
xchg
add
sbb
int3
movl
subb
test
adc
mov
ds
sahf
mov
pop
mov
mov
inc
loopne
adc
shrb
test
fistpll
leave
mov
es
insb
lods
mov
xchg
xchg
int3
das
add
into
sub
cmpsb
mov
cli
sbb
cmp
sar
hlt
bound
cmp
cmp
xor
test
pop
push
into
mov
or
bound
and
in
adc
xchg
mov
fld
mov
in
pop
fwait
pop
xor
jmp
test
adc
outsb
xchg
or
in
loope
xor
popa
fcmovne
daa
mov
enter
hlt
mov
je
js
mov
xchg
clc
and
pop
lret
test
lahf
inc
jmp
and
and
imul
xchg
mov
cltd
add
insb
mov
movzbl
push
xchg
inc
loopne
sahf
imul
add
imulb
jecxz
repz
in
jo
lods
je
xchg
push
mov
sbb
xchg
movsb
adc
cld
inc
sub
aad
dec
inc
ret
shll
jp
loopne
test
movsb
ja
fmuls
cmc
arpl
fcompl
push
dec
jbe
sahf
mov
sbb
int3
jl
shl
loopne
jno
mov
repnz
rcrb
adc
xchg
lea
jecxz
in
push
ja
dec
test
jns
jns
enter
mov
mov
sbbb
test
daa
mov
in
and
imul
inc
das
push
xchg
cmp
aam
mov
xchg
jp
shlb
cmpb
inc
in
xchg
orb
mov
or
iret
out
iret
mov
inc
jno
jae
lock
mov
sbb
sbb
mov
and
shrl
les
add
xchg
jg
fistl
pop
and
sub
fwait
mov
sub
lock
call
into
insb
sub
mov
dec
inc
push
lods
and
out
jp
cwtl
stc
mov
lea
mov
sub
sbb
pop
mov
jno
pop
std
dec
inc
call
inc
push
les
pop
push
jb
dec
test
out
sarl
in
push
push
jb
aaa
scas
popa
mov
mov
int3
mul
in
xor
cld
xchg
in
rolb
xchg
shrb
and
clc
insb
adc
and
mov
std
popa
into
pop
pop
lods
ja
aas
arpl
divb
test
mov
mov
lea
jne
lods
sbb
xlat
loop
push
sub
inc
pop
inc
jmp
sahf
xchg
inc
mov
pop
pop
imul
mov
insl
jne
add
mov
xchg
push
pop
push
push
lods
fdivrs
std
mov
xlat
push
aas
push
loop
jne
les
push
or
iret
lret
mov
dec
pop
in
test
jnp
lds
in
cli
add
fadd
outsb
aaa
dec
mov
pusha
in
mov
cmc
shll
lea
mov
or
push
push
cmpsb
lret
pop
pusha
jp
das
in
ds
xchg
dec
jmp
cmp
pop
shrb
inc
imul
jge
sbb
test
or
dec
add
pop
lock
dec
inc
out
and
jbe
pop
mov
jb
add
ds
popf
bound
mov
and
dec
mov
mov
in
dec
sub
or
outsb
outsb
pop
dec
dec
popa
mov
ficoms
dec
push
mov
mov
into
ss
lods
add
mov
setns
cli
insb
mov
mov
pop
pop
sub
fldl
xchg
imul
xor
ds
insl
inc
mov
lahf
lds
mov
push
fwait
aaa
mov
inc
mov
cli
inc
lock
rclb
cmp
in
xchg
sub
push
jle
adc
mov
lret
adc
xchg
popf
push
inc
nop
mov
mov
data16
rcrl
dec
and
mov
int3
out
jp
rol
imul
xlat
inc
ret
pop
inc
jns
mov
cmp
andb
lods
mov
fstps
mov
enter
mov
sbb
pusha
or
dec
inc
lahf
inc
loopne
stc
lcall
lock
cmp
std
fisubl
outsl
ja
sahf
xchg
adc
mov
cs
mov
mov
mov
lahf
popf
xor
fnstenv
mov
sbb
adc
or
cmp
call
pop
or
notb
jb
loopne
aaa
in
mov
iret
fnstsw
mov
or
or
orl
fdivrl
adc
iret
xorl
xor
adcb
sbb
stos
sbb
bound
mov
leave
mov
push
mov
mov
or
and
fsts
out
jge
push
out
std
cmp
inc
push
icebp
div
negb
pop
in
mov
imul
push
cmp
cmp
push
xor
ficoms
subb
subl
aad
outsl
push
lea
fwait
test
xchg
or
xor
cs
jmp
adc
shr
int3
mov
dec
cmp
cmp
pop
or
ret
test
test
iret
ret
scas
ds
pop
inc
mov
jp
lcall
pop
icebp
je
cmpsl
xchg
add
sbb
jne
stc
hlt
out
cmp
mov
loopne
pop
addb
jb
cmpsl
xchg
jecxz
scas
adc
adc
inc
xchg
out
add
cmpsb
into
or
ss
push
adc
mov
xchg
push
movd
cmp
mov
mov
mov
add
dec
or
frstor
fdivrs
in
jbe
sti
sbb
inc
in
mov
jbe
divb
dec
enter
call
js
imul
jo
mov
shrb
outsb
mov
push
lahf
dec
imul
push
decb
shl
lods
stos
loope
inc
inc
add
ret
push
lret
scas
mov
in
int
test
rcrl
xchg
push
aam
test
pop
aas
std
pop
and
ja
push
mov
sar
fstps
and
fnsave
ja
push
push
cmpsb
mov
aas
dec
dec
stos
add
in
fidivrs
mov
sub
inc
stos
pop
xchg
pop
in
fimuls
mov
xchg
sti
es
stc
stos
rcrl
or
movl
fisttpll
ljmp
cld
xchg
loope
stos
jecxz
int
sub
stos
dec
sbb
add
mov
add
pop
or
in
rol
jnp
leave
dec
push
cmp
add
rorb
jecxz
out
add
std
scas
pop
pop
scas
cmpsl
push
data16
cld
das
movsb
cld
xor
mov
pop
dec
shlb
std
lock
push
pop
cmp
out
pop
or
out
adc
fwait
mov
inc
push
jecxz
jecxz
xor
mov
cmp
enter
mov
lret
pop
cmp
push
jno
or
cli
leave
adc
xor
jbe
xchg
jne
mov
xchg
sub
stc
cs
scas
and
jmp
xor
jg
and
lock
dec
test
pop
mov
outsl
push
call
cmpsb
loopne
pop
jge
jae
xchg
and
add
inc
adc
sub
popf
je
pop
movsl
cmp
inc
daa
mov
pop
sahf
cli
dec
push
loopne
or
jle
add
movsl
fidivrl
mov
iret
andb
pop
xchg
jbe
xchg
repz
inc
xchg
push
ds
imul
insl
xorb
or
int
out
push
punpcklbw
nop
xorl
fsubs
pop
lods
scas
inc
popf
addl
lret
or
into
mov
or
sub
mov
movsl
out
push
subl
push
lods
arpl
iret
pop
fstp
mov
es
pushw
insl
xor
in
push
xor
fwait
orl
mov
cli
sbb
add
jmp
mov
popa
mov
inc
jnp
fidivl
inc
movsb
xchg
jns
xor
ja
loopne
negl
sbb
mov
movsl
xchg
hlt
sbb
cltd
sar
inc
or
xor
inc
jmp
mov
cmpsb
push
push
out
jmp
jne
mov
push
mov
iret
loop
or
fildl
adc
add
lods
cs
in
out
xor
loope
adc
dec
add
cmp
add
cli
cmp
aad
out
scas
adc
decl
xor
mov
mov
aas
or
xchg
cmp
push
mov
dec
mov
sub
vpsadbw
cmpb
fadd
cmp
jg
and
ret
xor
mov
mov
fdivrl
dec
les
adc
jle
enter
lret
in
fnstsw
push
int3
dec
sbb
js
add
lods
xchg
movsl
test
sub
lahf
nop
loop
mov
in
xor
fwait
xchg
arpl
pop
enter
arpl
dec
aas
jle
cwtl
add
test
xor
mov
or
inc
stos
adc
add
out
cwtl
in
fwait
pop
cli
xchg
imul
cmp
mov
shl
dec
sbb
int3
cwtl
dec
or
pop
rcll
pop
inc
shrl
test
arpl
mov
push
jae
sub
int3
leave
pushf
shl
add
push
jp
mov
mov
sbb
test
xor
cli
insb
mov
push
push
pop
aad
push
mov
test
scas
nop
adc
test
fwait
jmp
mov
mov
addr16
add
and
mov
rcll
clc
test
testl
insb
or
out
sti
enter
push
test
hlt
pushf
pop
movsb
xchg
cmp
fsubs
sub
test
add
shlb
es
xor
lds
mov
pop
fmuls
pop
hlt
mov
and
imul
pop
xor
movl
in
pop
push
scas
ret
mov
jne
jae
scas
jnp
inc
mov
pop
out
mov
andb
mov
in
out
mov
sbb
scas
outsl
sbb
fcoms
pop
dec
js
scas
or
inc
imul
xchg
or
or
push
mov
sbb
test
insb
push
popa
sbb
pop
pop
insl
sahf
sahf
push
add
clc
pop
xlat
data16
xchg
iret
cwtl
xor
ret
mov
rorl
sbb
pop
fimull
fdivs
sbb
daa
fbld
sub
add
ret
push
mov
mov
scas
xchg
dec
and
aam
mov
les
std
das
dec
daa
int3
jge
mov
clc
jb
hlt
sbb
das
movsb
cld
pop
push
pop
nop
mov
out
xor
mov
fisttpl
pop
mov
sti
in
sub
int
mov
das
call
mov
jle
test
push
addr16
fmuls
adc
ljmp
mov
pop
jle
jae
in
lods
jne
fidivrs
fstpt
inc
cli
std
aam
pop
sub
sbb
sti
std
xchg
in
inc
adc
cmp
cmpsl
push
es
out
aaa
mov
je
pushf
mov
xor
leave
jb
hlt
pop
loopne
stc
cmpsb
lods
loop
ljmp
popa
inc
sbb
mov
icebp
dec
xchg
pop
mov
mov
or
out
push
push
push
and
push
popf
xchg
outsl
pop
adc
cld
fildl
stos
xorl
das
mov
inc
addr16
fdivrl
or
dec
lods
jl
mov
adc
mov
xchg
push
jnp
and
mov
loope
push
add
adc
sub
inc
incl
pop
inc
test
pop
push
dec
xchg
or
pop
or
shl
xor
xchg
scas
call
add
shrb
dec
sub
cmp
push
pop
test
jle
enter
jbe
mov
xchg
test
sbb
jmp
inc
in
cli
pusha
int
xor
fs
jp
cli
lret
in
pop
test
cld
mov
bound
and
lods
lock
xor
shll
jae
test
add
pop
daa
pop
mov
xchg
ljmp
mov
adc
scas
test
test
jne
push
fidivrs
push
dec
add
popa
cmpsl
mov
aas
dec
hlt
pusha
out
stos
es
lock
sbb
cmc
xor
jmp
xor
in
jo
rcll
pop
cltd
pushf
call
div
or
lea
push
mov
jl
fdivr
mov
lcall
xor
int3
xchg
shlb
push
pop
and
fidivs
mov
jmp
xchg
xor
inc
pop
lea
pop
dec
jb
mov
aas
or
rcr
push
add
push
out
mov
mov
adc
daa
out
lret
out
xchg
loope
test
in
mov
cmp
mov
lret
jnp
sbb
mov
push
lods
out
jmp
and
xor
inc
jns
insb
dec
mov
daa
loope
imul
sub
adc
sbb
push
sbb
mov
adc
xchg
mov
jo
xchg
repnz
nop
xchg
mov
cmpsl
xchg
pop
sub
cmovl
inc
or
xchg
inc
stos
sbb
pop
and
roll
adc
push
push
adcl
jb
adc
pop
test
add
sarb
xor
lock
jecxz
push
iret
adc
push
jb
mov
jno
sub
xor
call
push
adc
push
mov
sahf
arpl
jnp
in
ficoml
jle
inc
mov
mov
pop
out
ja
dec
adc
out
sbb
mov
and
pop
fistl
push
cmp
fdivrs
mov
fisubs
bound
outsb
cwtl
lret
sbb
xor
mov
pop
sub
mov
push
xchg
push
sti
cmp
jge
push
and
sbb
clc
ret
addr16
push
cmp
stc
lret
and
stos
mov
add
mov
push
lods
lods
lods
stos
sarl
cmp
fsubrl
sub
cmp
adc
repnz
cmp
cld
movsb
test
sbb
sbb
fsubl
jb
and
jns
cmc
lods
pop
fists
mov
mov
ss
mov
sbb
xchg
in
inc
bound
mov
push
ljmp
lret
pop
insl
test
sbb
loopne
push
in
mov
popf
dec
xorl
adc
into
out
cmp
or
addl
lahf
mov
pop
xchg
mov
cld
and
mov
mov
test
xor
ja
dec
mov
scas
inc
in
nop
sub
sub
ss
jp
adc
sub
scas
out
dec
mov
or
inc
cld
adc
pop
mov
add
sti
push
hlt
mov
in
mov
xchg
push
lahf
jg
mov
decl
xchg
add
cs
loop
push
pop
jmp
in
push
es
jnp
pop
mov
arpl
divl
stos
push
sti
shrl
bound
lret
or
dec
add
jno
mov
pop
and
mov
cmp
aam
out
stc
fmul
pop
jne
clc
test
daa
dec
inc
sub
outsl
cmpsb
in
pop
cmp
push
mov
adc
std
inc
dec
mov
mov
dec
pop
fisubl
sub
or
xchg
or
jne
dec
sbb
xor
cmp
popa
int3
xchg
outsb
cmp
shl
fisubrs
fnsave
inc
push
outsb
ja
pop
sbb
adc
and
push
and
xor
jo
sbb
out
in
int
push
test
add
xchg
or
lds
es
xchg
ret
cmp
shlb
clc
inc
ljmp
pop
rcl
pop
xlat
dec
or
inc
jp
cmp
subb
ljmp
sbb
int3
or
hlt
dec
shll
out
fcomps
mov
inc
mov
sbb
into
in
leave
pop
call
in
push
imul
pop
cld
fwait
and
mov
mov
popf
ror
push
xor
scas
call
sub
outsl
out
in
popf
xchg
ret
out
or
es
and
dec
pop
sub
add
xchg
pop
ds
mov
popa
test
jns
inc
notb
int3
pop
mov
and
jp
testl
push
xor
imul
mov
pop
inc
dec
lds
and
cltd
out
inc
jne
fisubrl
or
movsb
xchg
push
push
push
ret
lock
xor
jmp
mov
lahf
faddl
lcall
pop
xchg
testb
mov
sarb
subl
out
cmp
je
pop
mov
and
idivb
push
rcrl
insb
sbbl
fs
mov
shrl
pop
pop
cwtl
sub
call
or
icebp
fsts
sbb
add
filds
test
or
push
pop
out
jns
sub
sbb
lcall
inc
shl
pop
xchg
xchg
sti
mov
jbe
fidivl
popa
aam
mov
scas
lret
push
adc
or
popf
jae
sbb
push
adc
into
lahf
or
and
scas
push
outsb
lods
mov
push
arpl
std
inc
mov
or
jle
andl
into
push
adc
push
ret
aaa
xchg
ret
jnp
pop
and
dec
stc
xor
and
pop
add
jb
cmp
in
cmp
enter
mov
sahf
jge
std
pop
xor
push
adcl
sbb
push
push
mov
addps
mov
inc
inc
jb
nop
ds
or
xchg
leave
mov
push
out
or
fs
divb
mov
hlt
popf
in
jg
jge
les
fistl
test
or
sbb
and
ds
mov
sbb
xlat
add
scas
push
or
sbb
mov
pop
scas
cmp
push
jo
insl
sub
out
mov
push
adc
test
mov
push
sbb
add
mov
push
push
mov
cmp
sbb
xor
shrl
sahf
pop
jnp
call
cmp
pushf
stc
cmp
shlb
sbb
bound
inc
dec
shrl
pop
ja
ror
xor
jecxz
xchg
popf
lea
or
push
xor
jecxz
stc
ret
repz
pop
jle
mov
sbb
push
mov
pop
sbb
add
sbb
fldcw
repz
push
lods
adc
mov
cs
xor
loopne
mov
mov
in
add
sub
dec
inc
sbb
sub
int
in
inc
inc
add
push
sub
aam
cmp
dec
aas
xor
test
fidivrl
sahf
int
push
jp
hlt
jbe
jmp
mov
movsl
addb
mov
jle
sbb
cmp
dec
imul
push
jecxz
sbb
or
clc
and
insl
mov
pop
hlt
out
std
or
push
data16
xchg
jb
scas
jnp
ret
inc
adc
data16
std
xor
mov
add
int3
popa
popf
xchg
mov
jnp
dec
bound
mov
cmpsb
lea
and
push
shrl
loop
int3
stc
cmpsb
ss
pop
xchg
addl
xor
test
stos
stos
lods
pop
adc
add
test
jmp
popa
fs
push
push
out
in
lods
jbe
pop
sar
mov
pop
inc
mov
int
or
mov
scas
lahf
xor
sbb
loope
xor
in
add
push
sub
out
mov
jmp
and
mov
xor
lods
pop
loope
or
xchg
call
jle
mov
mov
not
cmp
scas
into
cld
push
push
das
add
fiadds
push
jns
into
sete
lahf
notb
cmp
outsl
mov
stc
loopne
lds
mov
push
adcl
sub
inc
mov
mov
add
lcall
notl
imul
jecxz
adc
inc
xor
xchg
addr16
sub
cltd
jb
mov
adc
sbbl
jg
scas
cmpsb
inc
imul
cmp
or
mov
sub
inc
shrb
jle
hlt
sti
addr16
adc
or
cmp
dec
dec
cmp
insl
jmp
and
push
ds
fnsave
dec
mov
data16
sub
fwait
stos
addb
jno
int3
sbb
in
xor
add
sbb
stc
cmp
inc
stos
and
add
cmp
push
ret
add
sti
test
xchg
sbb
mov
xchg
sbb
inc
test
mov
pusha
movsl
jmp
scas
adc
sar
sbb
in
fwait
outsb
jge
push
std
sahf
popa
push
push
push
mov
sti
sbbl
mov
jecxz
pop
pop
clc
push
push
repz
mov
and
loop
jns
push
pop
lret
faddp
out
or
ret
jp
jg
adc
ss
pop
push
sbb
es
push
inc
mov
or
movsl
notb
pop
shll
hlt
movsb
mov
or
mov
push
mov
cmc
cmpsl
dec
xor
sbb
scas
repnz
jmp
adc
jp
aaa
cwtl
xor
sbb
adc
lahf
dec
test
fmuls
out
shrb
fwait
stos
inc
ss
sbb
cmp
push
in
mov
xor
mov
xchg
inc
pop
sarl
ds
aaa
jno
test
shll
add
out
fldenv
mov
jae
push
mov
call
icebp
xor
pusha
mov
and
or
movsl
pop
push
pop
jnp
std
loope
fistpll
bound
lret
cmp
inc
ja
aaa
inc
aad
xchg
mov
rclb
xlat
pusha
push
pop
mov
addr16
jecxz
push
aad
push
mov
add
data16
ss
adc
movsl
pop
mov
pop
cmp
mov
mov
inc
inc
and
add
dec
mov
loop
jo
jnp
jecxz
jnp
or
jb
imul
test
es
enter
dec
adc
test
push
aam
and
adc
shl
and
jno
fcmovnb
loop
sbb
inc
jl
adc
test
test
push
loopne
ss
icebp
pop
faddl
shrb
jge
fidivrs
mov
inc
cmp
mov
int
jbe
jecxz
clc
xchg
mov
mov
jnp
cmc
in
shrl
fildl
stos
dec
cmpsb
sbb
cmp
jb
adc
push
xchg
inc
mov
or
adc
jne
xchg
fwait
mov
mov
mov
xchg
and
xchg
jmp
repz
inc
insl
fstl
sti
xor
imul
jbe
in
sub
outsb
cmpsb
in
sub
jo
pop
popa
fistps
pop
push
sbbl
or
sub
pusha
dec
mov
mov
pop
mov
clc
lahf
sbb
dec
xchg
dec
int3
jb
and
sbb
movsb
rorl
cmc
mov
mov
adc
add
push
ret
mov
push
mov
outsl
rcll
dec
mov
outsb
sbb
mov
mov
outsl
nop
scas
sub
push
xor
and
jns
adc
movsl
nop
divb
imul
clc
insl
popf
ret
and
mov
imul
mov
xchg
and
jns
rcrb
pop
aad
jae
xchg
js
ficoml
mov
repnz
pushf
add
int3
cmpsl
and
xchg
inc
xchg
scas
push
pusha
jp
pop
pop
arpl
stos
mov
ljmp
fcmove
lea
rcrb
icebp
push
outsl
icebp
popa
xchg
push
pop
inc
lods
push
jne
push
adc
pop
cltd
and
adc
fldln2
and
scas
pop
das
out
mov
mov
dec
mov
or
pop
xor
and
movb
add
push
pop
push
cmc
out
mov
fwait
out
popa
mov
or
sbb
xlat
or
and
setge
add
mov
dec
pop
pop
mov
mov
add
imul
pushf
pop
add
pop
lcall
pop
inc
insl
xchg
outsl
pop
xlat
arpl
push
sbb
mov
inc
cs
add
testb
add
or
dec
lahf
negb
movsl
and
xlat
cmpsb
out
cwtl
jae
addr16
les
arpl
inc
fists
cmpb
ret
in
inc
pushf
movsl
adc
sbb
mov
cli
insb
cwtd
mov
adc
cs
jecxz
lret
sbb
xchg
mov
inc
cmp
and
mov
sbb
jae
fdiv
adc
lcall
dec
xor
xor
out
xchg
xchg
mov
mov
fwait
in
mov
adc
mov
insl
mov
iret
and
and
sub
rcrb
popa
sbb
outsb
and
sbb
mov
jae
aas
aad
mov
into
dec
out
mov
pop
mov
inc
fdivrs
and
xchg
in
test
jnp
and
addr16
xor
cmp
sub
rcrb
out
movsl
push
sbb
pop
sbb
inc
dec
sbbb
xor
es
pop
scas
push
int3
push
jno
or
jle
lods
push
sub
shlb
xchg
or
out
sub
jb
std
insb
cs
pop
test
mov
test
dec
xchg
xor
push
hlt
pop
in
jne
aas
inc
mov
mov
mov
ljmp
in
sbb
lahf
loopne
lods
mov
enter
cmp
xor
shl
inc
fnstenv
push
fisubrs
or
add
sub
dec
sbb
rcll
mov
dec
jno
movb
sbb
sbb
flds
out
cwtl
jae
dec
aas
inc
cmp
jp
mov
movsl
xchg
mov
aad
mov
test
scas
mov
xchg
ja
xchg
adcl
mov
std
or
imul
pushf
xor
cli
xor
addr16
push
lret
ds
inc
imul
xchg
in
lods
mov
nop
rcl
subl
sbb
and
push
iret
sub
and
xor
xlat
scas
lods
iret
push
scas
imul
push
fbld
data16
add
das
mov
and
shr
rorl
decl
jge
cwtl
jp
mov
js
pop
std
add
aam
test
or
jb
adc
sub
or
cmp
cld
cli
jmp
cmp
xchg
lahf
and
leave
cltd
out
lock
adc
and
mov
cld
jae
mov
inc
loopw
negb
adc
inc
dec
xchg
push
in
ret
jg
repz
jnp
jecxz
loop
add
add
xor
dec
lret
sub
push
lds
sbb
pop
mov
adc
or
pop
cltd
cwtl
imul
or
jmp
rorb
cmp
push
orl
sbb
mov
cmpsl
addr16
notl
fwait
inc
pop
dec
mov
pushf
mov
lret
sub
push
int3
push
or
mov
lahf
repnz
fimuls
dec
sbb
arpl
divl
xchg
in
cmp
cmp
push
push
ret
dec
out
and
movsb
fistl
or
cmpsb
repnz
pusha
loop
test
sbb
add
into
xchg
xor
into
enter
mov
jnp
std
inc
mov
dec
sti
enter
mov
lock
cld
lret
pusha
add
test
push
mov
daa
add
inc
push
adc
dec
cli
mov
xchg
fwait
roll
ret
rcr
cwtl
push
or
daa
add
add
or
mov
dec
mov
in
pop
mov
xchg
insb
pop
and
addb
xor
lret
imul
lock
cwtl
jo
into
hlt
adc
adc
mov
dec
jb
arpl
int3
imul
call
push
inc
push
shlb
dec
into
test
ret
xchg
call
pushl
imul
or
and
in
icebp
adc
xor
mov
iret
xlat
jae
clc
repz
inc
sub
stos
aad
xor
movsb
and
fwait
rcrl
test
dec
fadds
andl
sbb
cli
lret
mov
mov
mull
ficompl
nop
pusha
jge
arpl
mov
xchg
sbb
adc
aaa
lret
push
mov
shrl
sub
decl
push
mov
ret
repz
ds
xchg
push
dec
sqrtps
dec
pop
vcvtdq2pd
pushf
xchg
ret
dec
mov
in
push
xor
neg
and
fsubs
loope
or
or
dec
cmpsb
push
mov
rcl
imulb
fcomip
lea
push
push
arpl
pushf
ja
lret
push
mov
push
repnz
pop
in
add
or
aad
mov
dec
push
xchg
cmp
pop
popa
adc
mov
scas
mov
daa
adc
lods
xchg
sahf
push
mov
shr
jae
loope
pop
movl
jo
push
clc
adc
nop
mov
and
icebp
std
jb
add
shll
dec
pushf
push
test
aaa
sbb
in
inc
orb
inc
mov
add
jmp
out
mov
stos
and
add
adc
pusha
pop
test
xchg
or
outsl
orb
xor
enter
out
ds
cwtl
push
add
fnsetpm(287
sahf
insl
arpl
add
sbb
pop
pop
lds
jbe
cmpb
xor
xor
jns
mov
cld
addr16
adc
mov
into
add
add
aam
clc
inc
lret
stos
rcrb
or
inc
or
xor
and
int
dec
int
mov
mov
pop
rorb
jg
mov
xchg
push
push
jle
pop
and
pop
ja
dec
repz
sub
test
decl
addr16
and
iret
pop
pop
cmp
inc
or
xor
mov
pop
adc
iret
mov
faddp
xchg
clc
cld
cmp
repnz
fisttpll
cmp
mov
adc
rolb
movzwl
inc
sarb
icebp
test
lods
int
jl
jb
mov
mov
aad
imul
faddp
js
lods
mov
or
dec
jp
mov
cltd
cmp
xlat
das
lret
rclb
or
incb
repz
sti
mov
je,pt
imul
mov
int
mov
sti
enter
in
repz
inc
inc
sbb
push
call
andl
adc
mov
int3
hlt
out
addl
gs
insl
dec
push
xor
lret
jae
mov
in
repz
inc
jg
cmpsb
add
jmp
loopne
pop
xchg
stos
dec
adc
mov
pop
repz
daa
cwtl
mov
mov
mov
mov
adc
pop
mov
sub
test
frstor
loope
lahf
movsb
pop
xor
push
sbb
or
push
jne
pop
enter
or
test
sahf
cltd
jmp
or
les
outsb
sbb
cltd
fwait
push
or
cli
fisttpl
adc
je
mov
sbb
pop
test
adcl
scas
inc
ror
dec
mov
popa
mov
fcoms
dec
mov
add
mov
or
nop
add
cmp
or
inc
push
lret
mov
pushf
xchg
arpl
shll
out
and
cld
jmp
xchg
add
out
mov
mov
adc
shr
sbb
add
lods
lahf
or
fwait
cltd
and
rcrl
int3
and
push
out
mov
pop
jge
sub
mov
imul
pop
ss
cwtl
add
add
push
xlat
jne
nop
movsl
loope
sti
mov
jo
push
das
out
mov
mov
xchg
stc
clc
icebp
xchg
xchg
push
dec
sbb
adc
orb
divl
dec
pop
jne
les
bound
decb
pop
sub
pop
mov
mov
push
xchg
or
jp
jmp
mov
pushf
dec
pusha
add
ljmp
push
fbstp
je
push
cmpb
rcl
pop
push
inc
lea
sti
push
out
sbb
xor
push
incl
insl
cmpl
jg
xor
mov
add
daa
clc
mov
shlb
mov
or
and
scas
addl
loope
add
int
inc
pop
mov
idivl
test
pop
pop
mov
add
into
xor
in
mov
aas
lahf
cltd
mul
movsb
hlt
scas
bnd
pop
cwtl
lods
int
pop
xchg
data16
clc
stos
int3
add
add
inc
mov
decl
pusha
mov
inc
adc
mov
jg
dec
mov
mov
testl
fidivrl
mov
loopne
xchg
xlat
ss
sbb
sub
add
fwait
sbbl
xor
repz
or
mov
ss
pop
dec
jp
stos
jbe
ljmp
add
test
xor
or
dec
pop
daa
cld
std
rcrl
rcll
ud2
lret
in
pusha
jg
in
or
mov
jno
pop
adc
test
add
push
ret
add
mov
daa
pusha
pop
dec
push
icebp
mov
or
lea
xor
xor
pop
cmp
mov
andl
xchg
aam
mov
fiadds
mov
inc
es
add
test
jbe
dec
cmp
das
add
subl
insl
test
je
jb
jg
ret
pop
mov
sbb
orb
into
pop
cmpb
rcrl
in
add
xchg
adc
or
xchg
aaa
dec
pop
mov
inc
mov
lea
cmp
sub
push
jno
ret
mov
outsl
int
jge
mov
pop
cmp
pusha
mov
mov
jo
fadds
pop
in
sbbl
sahf
xor
jbe
sub
in
add
mov
ss
stos
pusha
lods
add
add
imul
jmp
inc
movsl
mov
jb
js
pop
je
pop
in
fwait
dec
movsb
push
mov
scas
mov
push
mov
data16
dec
xchg
rclb
rcll
loop
jo
popaw
or
lea
cmp
add
shl
int
scas
mov
leave
aam
xor
jmp
js
outsl
sub
out
roll
test
jno
adc
leave
int
jmp
insl
mov
daa
dec
mov
fwait
lods
mov
inc
cmp
bound
icebp
mov
lcall
fcmovne
sub
cmp
int
les
popf
out
push
jg
mov
iret
fstpl
cs
mov
add
aam
xchg
or
cmp
fmuls
int3
sbb
test
adc
adc
popa
jb
mov
mov
cwtl
pop
std
int
xchg
sahf
ret
out
cmp
cmc
xchg
in
cwtl
add
ret
sbb
ret
nop
cmp
int3
inc
icebp
and
push
mov
mov
aad
push
xchg
insb
pushf
incb
jno
lret
mov
test
sbb
mov
jp
imul
orb
lret
xchg
into
rcr
syscall
mov
repnz
mov
ud0
adc
addb
movl
mov
sbb
and
xchg
lea
cmpsb
ds
arpl
lret
push
clc
cmp
mov
dec
and
outsb
in
inc
clc
das
mov
jl
sub
shl
enter
jp
mov
pusha
sbb
pop
repz
push
addr16
xor
ret
xchg
bound
std
xchg
stos
jg
add
pop
mov
and
adc
inc
and
lretw
inc
adc
mov
xor
inc
test
jno
les
cmovle
sbb
mov
subb
push
or
sub
cmp
xchg
add
push
push
adc
fcomp
test
cmp
xor
rolb
jns
cld
adc
jl
xor
insb
jnp
xlat
pop
into
fcoml
lcall
cmp
inc
adc
jne
in
pushf
out
sbb
inc
sbb
pop
sbbb
sarb
stos
jmp
call
cs
or
in
pushf
jns
or
dec
cmp
sbb
adc
test
push
jle
rorl
pop
in
pop
repz
sbb
or
mov
test
cltd
xchg
subl
push
or
sbb
add
push
lods
ret
stos
dec
scas
cltd
bound
add
adc
mov
pushf
in
je
mov
jns
test
aam
je
out
loop
dec
xor
imul
shr
mov
shrb
pop
mov
maskmovq
jmp
in
mov
sbbl
or
or
mov
push
imul
add
xchg
sbb
sub
mov
das
enter
lods
and
or
inc
fsubrl
jnp
cmp
bound
mov
pop
mov
lret
popa
call
lret
shrl
andl
popa
push
xchg
xlat
loopne
cmpsl
rolb
es
sub
xor
shlb
mov
inc
setle
das
cmp
jmp
je
inc
aad
cmpsb
popl
sub
aam
mov
loopne
inc
outsb
outsl
das
xchg
ret
cltd
jns
sbb
js
in
mov
lock
mov
das
push
sbb
push
ds
add
imul
and
hlt
mov
lret
cmc
push
sti
sahf
repz
and
test
adc
lods
ficoms
fists
mov
negb
aas
adc
cmp
and
leave
sbb
dec
sub
loopne
inc
aaa
xchg
jmp
int
cmc
lods
cmc
cmp
lds
into
mov
repnz
test
icebp
popf
js
xor
push
inc
mov
out
in
pop
jne
mov
xchg
imul
shlb
pop
adc
ja
enter
and
jge
decl
aad
pop
pop
xlat
add
jo
cmp
xor
pop
lock
ds
mov
push
xor
popf
push
xchg
hlt
cmp
shl
fstpl
cmpsl
daa
js
repnz
push
lods
and
test
repnz
lods
leave
nop
adc
or
push
adc
jl
cld
inc
lcall
sbb
insl
lods
test
lock
leave
cmovl
push
pop
adc
xchg
sub
mov
adc
movsb
dec
in
fldlg2
adc
xchg
pop
jnp
call
sub
roll
push
mov
pop
adc
jg
iret
pop
xor
daa
lea
fidivl
cmc
pop
lcall
inc
dec
into
arpl
or
insb
hlt
lret
sti
pusha
jle
addr16
fucomi
inc
lret
and
aad
clc
dec
mov
addb
rcrb
popf
cwtl
mov
icebp
mov
fdivrp
cltd
push
and
dec
std
out
push
sub
dec
mov
mov
jne
xchg
mov
mov
xchg
nop
dec
in
xchg
mov
sbb
cwtl
enter
mov
scas
mov
leave
mov
mov
jle,pt
mov
inc
je
addr16
dec
cwtl
xor
cltd
sub
adc
sub
ljmp
mov
add
jmp
cmp
and
fcompl
pop
push
shlb
out
xor
sbb
mov
xchg
aad
mov
adc
fwait
cld
test
mov
scas
xor
lods
bound
dec
insl
leave
adc
loop
ss
imul
loope
add
fwait
or
xor
mov
mov
fbld
aad
sbb
mov
arpl
in
loope
and
mov
fdivrs
es
mov
cmpsl
call
and
push
adc
repnz
aaa
push
push
inc
stc
shl
add
cmp
inc
mov
and
ljmp
sub
lret
movsb
lods
bound
jne
outsb
test
shlb
rclb
xor
call
pop
pop
cmc
cmp
xor
mov
sahf
xor
fsubrs
sbb
icebp
loopne
jne
imul
inc
repz
mov
mov
pop
xor
adc
sub
mov
ss
test
fldl
rcr
inc
dec
sub
xor
cltd
cwtl
movsl
dec
leave
ljmp
mov
and
ljmp
and
xor
jg
clc
sarl
lods
mov
into
arpl
inc
adc
xchg
jg
sub
and
jle
in
cwtl
lods
mov
dec
divl
flds
mov
inc
sbb
js
lret
into
fcmovb
pop
pop
iret
pop
in
stc
mov
ret
inc
sbb
lods
xor
xor
cmp
scas
test
jge
jle
scas
ja
idiv
push
jg
inc
xchg
push
xlat
fimull
in
mov
imul
ss
mov
mov
mov
mov
lret
or
add
dec
pop
push
pop
pushf
or
cld
or
loopne
sub
sbb
outsl
push
and
test
loopne
arpl
test
push
lock
jle
shl
and
stos
pop
cmp
or
pop
pop
xor
mov
xchg
idivl
jl
movl
aam
lret
cmpsb
movsb
test
inc
das
dec
sti
imul
je
inc
mov
xor
adc
pop
faddl
stc
daa
lods
xchg
and
daa
popf
xor
ljmp
pop
adc
mulb
xor
cmp
fisttpl
mov
and
test
inc
int3
in
imulb
fwait
cwtl
bound
addr16
jl
stc
ret
int3
lret
jmp
adc
movsl
lret
insl
xor
outsl
and
cmc
jae
leave
mov
fwait
out
inc
sub
jne
jg
pop
repnz
movsl
cmp
fldcw
inc
out
insb
leave
or
adc
idivl
ja
add
dec
push
arpl
scas
or
add
mov
jnp
cld
jbe
xchg
popf
inc
int
lcall
push
adc
pop
orl
movsb
dec
pop
or
mov
or
pop
push
clc
out
mov
cli
aam
push
adc
pop
xor
cmp
daa
push
test
int
sti
pop
xchg
xor
pusha
cmp
inc
rorl
jle
dec
ja
push
dec
jmp
hlt
cmpsb
mov
inc
sbb
repz
fisubrs
jge
roll
lods
jg
shrb
fs
leave
push
dec
mov
sbb
movsb
and
pop
insb
ficomps
or
inc
inc
cmc
dec
negb
dec
sbb
lock
scas
mov
and
dec
and
cmpsb
into
mov
mov
leave
call
jns
mov
mov
ljmp
mov
sarl
inc
stos
pcmpeqw
cltd
cmc
clc
mov
lahf
sub
nop
jno
scas
les
mov
mov
mov
jae
mov
ja
xor
adc
and
leave
and
and
push
out
xchg
and
push
pop
sti
imul
movsl
aas
adc
and
lock
clc
cmp
shll
jb
pop
ja
fnstsw
mov
sbb
out
sub
in
dec
and
and
xchg
xchg
int
stos
cld
je
and
dec
insb
adc
pusha
loop
roll
loopne
repz
dec
mov
mov
inc
add
stos
out
ljmpw
fcompl
rcl
sbb
dec
arpl
fisttps
cmp
inc
mov
jbe
sub
cli
cli
stos
mov
adc
jno
in
sub
imul
xlat
lock
aas
adc
pop
adc
sbb
lea
jo
lret
in
aad
inc
jnp
out
insl
fiaddl
notb
mov
lret
aaa
cmpsb
dec
jg
test
sahf
add
inc
push
xor
xor
sub
mov
ficoml
mov
inc
fiaddl
mov
sahf
in
test
int3
dec
mov
mov
mov
test
adc
mov
mov
sti
movsl
sub
sti
loope
aam
mov
addr16
add
xchg
xchg
mov
cs
xlat
out
ficoml
nop
sahf
sbb
mov
ficompl
hlt
sub
inc
sti
adc
or
scas
jo
fnsave
jb
and
inc
jno
out
shl
push
sahf
push
stc
mov
hlt
ja
and
movlhps
out
pusha
add
test
xchg
das
cltd
jle
inc
ss
xchg
mov
adc
loop
cmp
rorb
pop
lahf
imul
push
clc
xchg
mov
stos
jb
jns
fldl
sbb
fwait
dec
insl
testl
fcomps
jo
fdivrl
std
les
test
adc
jnp
inc
imul
arpl
out
xchg
pop
nop
inc
xchg
sbbb
dec
pop
pop
cwtl
addr16
pusha
push
push
dec
scas
fimull
inc
push
mov
push
mov
dec
mov
inc
ret
cmpsl
adc
outsl
mov
aaa
dec
mov
repz
in
cmp
in
adc
fildl
test
add
mov
sbb
xchg
mov
dec
mov
sub
xchg
xchg
jne
adc
fwait
xchg
fisubrl
nop
out
mov
mov
push
jb
or
inc
sbb
and
mov
jp
dec
shlb
scas
es
mov
push
imul
xchg
lcall
inc
add
sub
sub
dec
sbb
lcall
cld
push
push
popa
push
mov
leave
jae
aad
pusha
loop
and
and
ss
sub
cmc
imul
jnp
jl
mov
int
in
xchg
mov
rorb
rorb
mov
xchg
repnz
mov
xchg
jb
push
nop
outsl
xchg
xchg
sbb
fscale
xor
adc
idiv
dec
cli
xchg
and
pop
sbb
icebp
pop
and
mov
mov
loope
jb
push
outsl
in
adc
dec
cmpsl
mov
inc
add
push
sbb
stos
es
outsb
lods
shlb
adc
movb
push
cmp
lea
stos
sbb
out
cmp
ds
lods
sub
icebp
jge
fisubrs
xchg
inc
into
aad
lret
ljmp
push
xchg
mov
fdivl
pop
adc
es
push
add
push
or
ficoml
cli
unpcklps
cmpsl
jmp
mov
inc
in
in
xor
pop
das
adc
adc
jne
inc
pop
jecxz
inc
jns
xor
out
push
pop
std
stc
adcb
adc
je
mov
mov
stc
movsl
dec
dec
cmc
jp
das
sub
and
mov
lods
push
pop
sub
cld
out
pop
push
ret
clc
cwtl
inc
sub
adc
repz
mov
test
es
mov
rolb
and
gs
inc
in
mov
push
push
mov
sub
mov
mov
dec
push
subb
and
sub
popa
scas
test
in
adc
leave
adc
jae
movsl
adc
rorb
xchg
dec
testb
pusha
popf
xor
mov
fsubs
cmpsl
movsb
loop
enter
shl
xchg
adc
movntq
out
or
sub
dec
sarb
and
nop
sbb
mov
out
test
cmp
xchg
mov
and
and
ja
loop
or
insl
ljmp
in
lahf
sbb
mov
movb
aam
push
sbb
sbb
aam
aam
dec
pushf
lea
mov
clc
test
repnz
jo
cmp
lods
lods
int
scas
cmp
fldl
inc
dec
xchg
pushf
iret
push
pop
outsl
and
cmp
inc
cwtd
pop
popa
jb
lret
cmpb
push
mov
cmpb
in
dec
lahf
sarl
in
mov
insb
add
xlat
sar
icebp
add
pop
mov
xchg
mov
add
mov
mov
push
dec
pushl
lcall
push
xor
mov
stos
stc
mov
sbb
mov
js
add
mov
out
pop
jbe
imulb
icebp
incb
movsb
iret
adc
movsb
adcb
jnp
xchg
xor
push
adc
jns
pop
lahf
adc
fildl
lock
jae
and
pop
xorb
mov
jnp
pushf
or
jb
aaa
nop
insl
jns
inc
sbb
les
stos
or
mov
jbe
pushf
sub
adc
push
xor
insb
loope
cs
daa
add
cli
dec
lods
mov
add
mov
and
movsl
or
das
jl
and
jno
popa
outsb
dec
clc
fidivs
cli
and
xchg
mov
addl
aad
mov
popa
push
dec
dec
rorl
push
sub
aaa
mov
gs
inc
inc
popa
mov
mov
out
or
jnp
cwtl
je
in
push
clc
sub
cs
in
sbb
into
mov
rcrb
sarb
cmpsb
and
inc
out
add
inc
pushf
lea
pop
jo
mov
pop
icebp
hlt
xor
sub
mov
cmp
xor
cmp
mov
outsl
neg
ror
mov
push
xor
scas
shrb
cld
enter
or
adc
hlt
mov
gs
mov
adcb
xlat
stos
xor
jle
dec
mov
fsubp
fcompl
pop
push
ds
cmp
dec
stos
fs
jge
mov
pop
xchg
cmpsl
out
push
fs
pop
lods
iret
ljmp
pop
jge
mov
test
cltd
out
dec
sbbb
xor
js
dec
aas
mov
cmp
xor
out
bswap
inc
xchg
mov
cmp
movsl
sbb
mov
enter
into
lret
orb
stos
or
inc
cmp
test
xor
mov
inc
dec
sbb
pop
sbb
mov
sbb
gs
in
sbb
sub
cmpsl
gs
add
and
inc
loope
xorb
bnd
sub
inc
int3
decb
sbb
sbb
pop
scas
iret
pop
mov
mov
cmc
stc
mov
mov
push
xor
adc
aam
push
mov
mov
bound
xchg
adc
mov
jl
test
sti
cmp
push
sub
mov
sbb
lcall
rcl
aam
enter
lret
iret
xchg
scas
test
pop
xlat
dec
lock
pop
dec
out
pop
jne
or
cmp
and
ret
fisubrl
scas
dec
add
inc
jp
cmp
or
jecxz
sub
out
and
cmc
cmp
mov
addl
pop
jnp
dec
iret
xchg
sbb
sub
out
scas
push
ficompl
aad
add
dec
jle
lcall
sbb
stos
popf
xchg
fidivs
stc
call
mov
push
cmp
push
jl
jo
cltd
sbb
adc
xor
jno
into
add
dec
mov
inc
pop
aad
adc
ret
dec
adcl
push
adc
adc
pop
ljmp
pop
dec
mov
pusha
sub
arpl
pop
lock
push
sub
aas
cwtl
cmpsl
mov
fs
cltd
xchg
sub
sbb
inc
lret
jecxz
dec
out
push
adc
inc
aaa
out
popa
pop
sbb
mov
scas
out
xor
inc
pop
imulb
cltd
out
push
xchg
cmpsl
enter
sti
cmc
mov
sbb
add
or
fidivs
dec
shll
test
pop
push
inc
and
push
out
pop
dec
pop
iret
cmp
cwtl
aas
push
mov
or
and
add
insb
outsl
pop
jg
xchg
cmp
inc
xor
rclb
or
dec
jne
sbb
shll
sub
mov
xchg
sub
out
xor
xchg
rcl
iret
imul
mov
mov
xchg
lds
xor
dec
push
xor
aad
jne
ret
iret
mov
jne
out
sub
mov
add
ljmp
sub
notb
shll
test
or
mov
dec
xor
mov
insl
jno
jb
nop
rcll
sbb
das
pop
push
jnp
jecxz
lahf
mul
or
lahf
cltd
loopne
xchg
loopne
ret
push
lret
cwtl
repz
sbb
xlat
repnz
xlat
cmpsb
pop
push
pop
mov
mov
mov
lock
test
mov
dec
test
mov
push
jmp
cmpsb
pop
add
iret
xchg
pop
inc
pushf
sub
imul
leave
pop
pop
jp
mov
push
roll
dec
lea
lods
dec
add
xchg
test
adc
and
and
aam
push
pop
int
fwait
cmp
movsb
pop
pop
push
sub
sub
nop
loopne
push
add
jno
cmpsl
dec
jbe
dec
add
mov
add
std
xor
popa
push
cmpsb
xchg
mov
int
jecxz
pop
test
lahf
in
push
push
cmp
mov
icebp
dec
mov
lret
shll
jl
xchg
sbb
mov
add
cmpsl
mov
leave
inc
aas
mov
add
mov
dec
popf
mov
repz
fisttps
adc
sub
pcmpeqb
lahf
call
inc
xor
repz
sub
push
mov
mov
fisubs
test
cmp
jle
adc
xor
jge
out
std
sub
or
int3
jmp
sbbl
lea
inc
adc
mov
dec
stos
xchg
mov
jae
cs
daa
stc
jbe
jbe
inc
inc
ja
lods
xor
or
outsb
jae
sbb
pop
sbb
pop
ret
fcmovnb
push
or
or
adc
sbb
mov
loope
int
loopne
mov
ss
pushf
push
add
mov
into
or
pop
add
in
cmc
mov
adc
shll
fs
loop
outsb
mov
je
lahf
and
mov
jge
and
lock
dec
subb
icebp
and
pop
inc
cmp
inc
ret
inc
lret
je
dec
dec
inc
bound
or
and
aaa
bound
lcall
jo
nop
sbb
jp
mov
push
cli
out
or
mov
push
ss
das
mov
je
or
adc
pop
dec
jle,pt
jno
mov
test
lret
aas
adc
scas
mov
inc
ret
std
mov
mov
dec
jns
rorl
cmp
sub
sbb
ja
es
cld
pop
pop
cmp
cmc
js
mov
adc
dec
cmp
fsts
hlt
dec
fwait
mov
inc
push
jae
movsl
mov
addr16
fstpl
shll
lcall
xchg
pusha
push
push
std
jns
cmp
rclb
cmc
add
out
or
jne
es
shll
xlat
dec
push
inc
stos
push
aas
jg
mov
mov
nop
and
mov
dec
pop
sbb
addr16
and
pop
xchg
xchg
pop
mov
stc
jecxz
mov
ret
mulb
pop
in
out
addr16
repz
fldenv
dec
mov
sub
xchg
adc
cmpsl
std
les
daa
je
ja
sub
ds
cmp
cli
les
in
scas
xor
push
jecxz
mov
loope
fcompl
push
mov
fwait
lcall
fcompl
jnp
cmp
cmp
xchg
xchg
push
aaa
push
into
mov
sub
xchg
mov
int3
mov
or
dec
pop
cld
jns
ret
call
ss
ds
xchg
repz
cmpsb
mul
pop
repz
in
nop
sahf
movsb
xchg
outsb
addr16
daa
dec
outsb
cmp
inc
fstp
icebp
pop
int
dec
sti
mov
roll
mov
xor
sbb
ljmp
sbb
clc
pop
cmc
insb
adc
mov
xchg
push
xlat
and
push
mov
inc
iret
negl
inc
jbe
loop
or
ljmp
nop
dec
popa
dec
xor
icebp
insl
sbb
jg
loopne
and
aad
push
mov
scas
xchg
pop
push
mov
dec
into
dec
icebp
cmp
ljmp
push
je
sarb
mov
mov
mov
movsb
cmp
mov
push
push
jnp
jne
test
lahf
lret
hlt
push
push
roll
bndldx
xchg
arpl
jne
scas
push
inc
cli
xor
sbb
or
std
cmpsb
pusha
cs
repz
mov
jmp
rorb
hlt
mov
cmp
mov
lea
in
push
cmp
enter
aad
in
push
xchg
mov
ds
shll
dec
and
inc
add
push
xchg
xor
mov
xchg
js
in
mov
add
cwtl
pop
ja
sbb
test
shll
insb
shlb
ret
adc
stc
or
cmp
adc
outsl
jns
stos
test
mov
lret
xchg
pop
les
mov
jge
and
pusha
test
xchg
sbb
cltd
test
mov
jo
mov
cmp
aaa
stos
ret
add
jle
mov
inc
pop
xchg
push
pop
and
sub
sub
cmp
rorb
inc
cmp
xchg
adcb
push
sub
jmp
ss
aad
sbb
xchg
popf
jnp
iret
or
mov
or
into
or
inc
xor
jb
cs
inc
mov
dec
lcall
mov
jno
fcomi
jl
andb
jmp
sbb
xor
negl
push
add
enter
xchg
sbb
mov
fisttpl
loop
push
pop
shlb
pusha
jo
fdivrl
pop
push
or
les
ret
xchg
jp
pop
lret
outsb
cmp
test
cld
fcmove
call
ret
aaa
js
mov
ja
mov
jne
incl
inc
not
imul
ficompl
mov
cmpsb
mov
sti
push
sarl
cmpsl
pop
pop
jo
ret
xchg
adc
and
add
shl
cmp
and
rcrb
pop
mov
sub
inc
sahf
mov
pop
and
sub
es
add
dec
ss
std
inc
mov
jb
xor
icebp
mov
pop
dec
pop
xor
inc
cmpl
sbb
pop
div
mov
popa
inc
test
in
and
lods
jno
xor
fldenv
decb
addb
adc
jnp
cwtl
wbinvd
pop
stc
xorl
ja
cli
imul
push
fcomi
and
movhps
ret
sbb
sbb
bnd
or
fstps
popa
orl
dec
mov
aas
out
mov
dec
es
rolb
mov
loop
mov
cmp
jb
pushf
loop
jno
and
xor
sbb
ret
stos
daa
std
add
sub
jb
mov
shr
lods
jbe
leave
aas
gs
fsubrs
frstpm(287
adc
out
cltd
enter
loop
dec
sbb
movsb
xor
mov
jecxz
mov
out
pop
push
push
ds
js
aad
adc
in
cmp
stc
iret
loop
dec
dec
push
dec
push
repnz
lods
jb
pusha
xchg
dec
popa
adc
and
adc
es
jge
or
lret
ret
xor
xchg
in
cmp
ljmp
pop
push
fwait
sub
jmp
cwtl
filds
lret
add
jno
lock
sub
out
dec
bound
test
mov
fwait
mov
adcb
mov
xchg
dec
aas
add
lahf
xchg
mov
mov
push
pop
std
test
inc
cs
js
test
lahf
jle
sahf
lds
in
jno
xor
insb
sub
push
divb
adc
bound
jo
lods
mov
out
mov
icebp
or
adc
and
repnz
cli
ret
dec
jnp
repz
ret
mov
out
cli
xor
add
fisttpl
aas
fstpl
mulb
roll
mov
fdivrl
cmp
pop
daa
and
out
loop
jnp
mov
mov
icebp
gs
mov
xchg
sbb
adc
stos
jge
cmpsl
arpl
and
add
mov
fildl
or
mov
loop
adc
movsb
stos
mov
sbb
mov
out
push
movsb
push
or
pop
movsb
jmp
mov
pop
xor
insl
jle
cmp
lret
bound
rcrb
lock
dec
sbb
ja
sub
lcall
inc
or
mov
push
mov
in
push
sti
dec
cmc
mov
or
or
inc
cltd
movsl
mov
mov
dec
or
stos
sub
and
in
dec
or
jecxz
es
inc
sub
xchg
inc
shll
pop
dec
dec
add
int3
mov
push
repnz
dec
cli
sbb
add
ret
in
jo
mov
mov
inc
push
sbb
cmpsb
add
sub
and
fcomi
shlb
and
cmpsb
clc
xchg
test
add
mov
xchg
test
mov
mov
in
sbb
add
sub
cmp
cltd
test
fldl
push
xchg
roll
lret
stos
push
pop
loope
adc
pusha
int
and
and
cmpsb
xchg
aam
xor
fcompl
test
roll
int3
xor
test
cmp
push
sub
xlat
jg
sbb
imul
mov
pop
and
jae
sub
movzwl
inc
test
test
sbb
into
dec
iret
aaa
mov
cmp
pop
out
push
fadds
mov
dec
pusha
rclb
gs
and
and
mov
aam
lds
enter
jne
lods
and
xorl
adc
adc
sub
outsl
mov
adc
jmp
fucom
sub
sar
sbb
or
jle
aaa
push
dec
out
xor
or
lret
sub
lcall
jge
repnz
jnp
dec
arpl
mov
jecxz
sub
dec
jne
or
ret
dec
dec
insl
lea
mov
stos
sub
inc
inc
cmp
jp
bnd
mov
mov
test
pop
imul
lret
bound
rol
pusha
inc
jp
call
filds
loop
adcb
jmp
shrb
fildl
xchg
jae
pop
or
leave
mov
cwtl
sar
inc
xor
pop
imul
out
jno
shll
add
ljmp
xchg
mov
mov
insl
mov
je
loopne
sub
jecxz
lds
xchg
pushf
sbb
xor
gs
mov
loopne
into
gs
xor
arpl
cmc
movsb
je
inc
push
es
push
jo
scas
dec
pop
sbb
out
cmp
xor
lods
add
jbe
or
cmp
push
push
sbb
pop
test
lret
xor
push
repz
clc
push
pop
or
fldenv
mov
repnz
fildll
out
shlb
and
or
into
imul
fimuls
mov
mov
adc
popf
mov
mov
jno
mov
insb
push
lods
sub
pop
or
int3
xor
addr16
add
repnz
push
int
std
enter
xchg
jb,pn
xchg
in
push
rol
andl
pop
pop
inc
xorb
mov
sti
ja
loop
outsb
daa
in
cmp
popa
jo
sarb
daa
pop
sbb
ret
mov
mov
jnp
pushf
ss
or
mov
sub
adc
push
adc
push
dec
mov
push
cmp
pushf
iret
stos
jmp
add
and
stos
or
lea
stc
sub
or
rclb
icebp
fisttpll
mov
cmc
outsl
xor
fmul
stos
in
dec
xchg
inc
jge
fists
jmp
insb
pop
jo
shlb
lods
jecxz
mov
shll
mov
fs
xor
mov
dec
pop
cmp
test
aam
out
sbb
movb
movsb
sbb
xchg
xchg
add
mov
gs
leave
arpl
fistpl
into
mov
stos
je
imul
int3
lcall
fcomip
adc
mov
insb
fcoms
inc
pop
stc
and
call
push
xchg
pusha
push
clc
pop
int3
add
sbb
in
mov
daa
push
lcall
aas
jmp
dec
dec
pop
sbb
popf
fisubrl
inc
lods
inc
push
test
mov
ficomps
cltd
pop
mov
push
jge
push
icebp
inc
aas
call
mov
mov
fnstsw
add
std
sub
jmp
sbb
mov
insb
aaa
cmpsb
mov
fisttpll
sub
push
mov
sti
add
clc
inc
xor
dec
and
stc
mov
pop
xchg
inc
shlb
mov
scas
or
data16
sbb
jmp
mov
hlt
cld
jb
not
sarl
adc
pushf
int3
test
ret
stos
leave
test
or
int3
int
inc
sub
mov
dec
jns
xchg
sbb
dec
ljmp
das
lea
insl
insb
or
jno
sbb
pop
out
mov
lea
pop
ja
mov
lret
divb
addr16
dec
nop
mov
es
or
mov
pop
and
clc
ret
sbb
ljmp
inc
dec
cmp
pop
stc
or
addr16
fnstcw
mov
cmpsl
xchg
inc
adc
xchg
pop
sbb
push
std
das
in
mov
jge
xchg
shrl
jge
call
neg
repz
pusha
pusha
push
and
mov
rolb
pop
rcrl
pop
inc
adc
call
jne
pop
jns
adc
add
inc
loope
jge
xor
fs
sahf
pop
xchg
clc
mov
pop
add
iret
lcall
test
hlt
jbe
and
dec
lods
das
mov
testb
gs
jle
lcall
push
scas
out
jg
xchg
adc
clc
xor
aaa
daa
rcrb
dec
cmc
mov
sti
xchg
inc
xchg
push
sbb
xchg
or
add
aaa
out
adc
mov
add
add
cld
mov
jne
add
call
arpl
je
add
js
mov
sub
scas
pusha
jp
push
push
out
dec
xchg
push
scas
mov
jo
pop
shlb
push
or
xor
and
outsb
arpl
bound
pusha
and
pop
mov
cmp
jp
jne
push
and
mov
ficoms
repnz
pop
mov
mov
icebp
je
nop
mov
or
ds
add
test
inc
ret
pop
test
clc
in
mov
dec
std
out
addr16
sub
mov
add
mov
jns
pop
xchg
push
mov
pop
clc
test
daa
and
mov
add
and
aas
in
mov
cltd
push
lock
sub
jmp
xor
rolb
or
xor
and
dec
jno
mov
shlb
mov
or
xor
mov
lcall
dec
daa
cmc
inc
in
mov
in
jae
and
cmc
cmp
push
mov
cmp
or
inc
add
dec
pop
xor
push
xor
dec
push
or
sbb
inc
roll
ds
sbb
inc
mov
push
out
hlt
mov
ss
in
or
iret
jmp
out
stos
mov
sahf
mov
xorl
xor
movsl
pop
and
shrl
xchg
stc
xchg
mov
xor
rcrb
xchg
push
pop
mov
out
xchg
pop
repnz
inc
mov
cli
jae
lret
rcr
xchg
ss
jp
mov
icebp
push
mov
jne
mov
pop
inc
push
xorps
or
sub
mov
lret
pop
test
mov
loopnew
jne
leave
xorb
loope
push
fwait
aad
imul
adc
xorl
loope
adc
lock
and
push
movsb
stos
stc
sub
data16
out
xor
addl
out
mull
pusha
sub
jge
push
cmp
inc
lcall
gs
add
xchg
pop
fucomi
jo
mov
push
add
fs
jns
jbe
stos
int3
cmpsb
fstl
ret
movsb
xchg
cli
das
loope
ss
outsl
out
in
adc
add
fdivl
sub
rcll
loope
or
stos
jbe
mov
pop
pop
pop
repz
fbstp
rorl
test
pop
inc
js
ljmp
cltd
popa
fisttpl
cld
cmove
mov
cmp
hlt
les
cmc
xor
sub
mov
mov
lahf
out
call
adcl
jbe
sbb
sbb
push
inc
jmp
in
pop
sub
mov
adc
out
sbb
mov
sbb
or
xor
sbb
mov
cmpsl
cmpsl
aas
and
out
jns
sbb
pop
shrb
aaa
dec
leave
add
jg
xchg
cltd
push
mov
in
and
jge
std
les
cmpb
std
movsb
mul
mov
subl
jbe
and
jle
xchg
ljmp
inc
and
enter
in
andl
xor
iret
sbb
dec
imul
cmp
push
xor
jno
dec
lods
outsl
and
fcmovnb
subb
mov
pop
inc
aad
sbb
out
mov
mov
inc
adc
aas
mov
inc
arpl
dec
dec
push
popa
rcr
lock
bound
sub
ss
dec
add
mov
cmpsb
aam
rorb
jo
add
clc
sbbl
and
inc
xor
mov
in
pushf
mov
gs
push
mov
stos
clc
pushl
inc
lods
xchg
arpl
dec
add
jge
movsl
dec
out
push
sarl
dec
test
adc
test
xor
adc
mov
mov
test
repz
fs
cmp
sub
ret
cmc
popf
lret
jb
fs
mov
aad
push
rcrl
jecxz
xchg
xchg
sub
and
push
jne
out
insb
daa
push
inc
add
add
dec
jo
xor
xor
cwtl
xchg
in
mov
xchg
mov
mov
push
pop
push
int3
xchg
mov
popf
arpl
adc
xchg
sbb
adc
adc
loope
mov
jne
outsb
adc
mov
arpl
call
mov
jb
jp
push
push
cmp
jecxz
subl
repz
sti
cmp
in
mov
outsl
pusha
mov
test
out
das
scas
sub
lahf
test
les
es
sarb
and
movsl
test
std
pop
imul
fdiv
cmp
sbb
sub
out
fisttpl
sbb
je
dec
inc
pop
add
int3
fdivr
adc
test
ljmp
sahf
aas
call
js
or
inc
sub
lret
pop
adc
test
jl
mov
mov
shlb
fmull
and
jb
xor
inc
fldt
addl
mov
xlat
add
cltd
push
sbb
dec
icebp
jbe
or
xor
add
repz
add
jle
dec
dec
ja
std
mov
jns
mov
pop
cmp
leave
mov
cmp
lock
mov
test
arpl
mov
push
jns
mov
sub
dec
pop
and
repz
imull
push
ror
push
cmc
push
shrl
lods
jl
sbb
adc
mov
call
push
sub
inc
fistpl
pusha
sahf
lcall
and
rorl
xchg
nop
sub
popa
dec
inc
bound
mov
insl
movsb
cmp
adc
xchg
or
lods
loope
cltd
lock
inc
mov
inc
xor
shlb
std
add
jge
xchg
loopne
popa
adc
adc
or
cmp
adc
lret
movsb
rcll
pusha
dec
mov
mov
inc
and
xor
adc
xor
test
popa
jecxz
xchg
mov
push
xchg
cmpsb
sub
arpl
ja
mov
jmp
xor
clc
outsb
fsubl
std
js
iret
and
and
xchg
mulb
mov
int
les
clc
pop
lcall
adc
lret
popf
ja
or
add
test
int
xor
aaa
clc
int3
adc
ljmp
ret
mov
cmp
test
sarl
dec
call
push
sbb
lcall
mulb
popf
out
or
cmp
shll
inc
loope
mov
dec
out
cmp
add
or
fidivs
pop
test
mov
jno
outsl
pop
test
xor
popa
pop
lret
pop
jne
jl
mov
ss
lret
mov
push
push
hlt
mov
cs
enter
mov
pop
xor
add
push
jnp
movb
call
inc
fisttpll
test
inc
pop
sub
cmc
out
add
mov
push
addb
add
mov
mov
add
int3
adc
fnstenv
ss
fwait
push
sub
pusha
jmp
push
pop
push
sub
scas
scas
rolb
xchg
or
or
js
xchg
mov
lods
mov
out
mov
pop
dec
pusha
cmovb
enter
fxch
add
ljmp
scas
xor
sbb
loopne
ficoms
lods
add
das
add
cmp
jecxz
cmp
iret
mov
push
xor
push
add
inc
std
push
or
dec
subb
jge
pop
cmpsb
jmp
aad
shlb
push
aad
fdivl
mov
or
add
jmp
push
add
pushf
loop
mov
jmp
sbb
mov
push
add
push
test
aad
xchg
mov
aad
sbb
mov
sbb
pop
xor
mov
push
mov
jmp
cmp
sbb
xchg
ror
push
hlt
dec
ja
push
rcrb
out
adc
sbb
sbb
xchg
mov
and
rolb
jmp
stos
sub
popf
test
sbb
ja
loopne
into
cmpsb
movsl
sub
ss
jmp
pop
subb
rcll
leave
xor
movb
xchg
andl
into
data16
shrb
andl
jp
or
out
gs
ror
cmp
out
push
shlb
dec
sti
add
lods
adc
xchg
enter
bound
jecxz
es
sti
pop
push
jno
add
hlt
lock
data16
das
fldcw
mov
mov
mov
jmp
ret
rclb
and
or
ret
inc
sub
cmp
push
insb
inc
sbb
pop
out
js
jge
inc
cmp
mov
sub
jge
xor
push
mov
test
cli
aad
repz
outsl
xor
testl
inc
nop
popf
out
scas
jmp
jae
xchg
fprem1
negb
sbb
push
adc
test
popa
aas
xor
adc
inc
nop
movl
mov
and
cmpsb
out
pop
mov
andl
js
mov
jmp
mov
rcrl
push
ret
ficoms
cmc
and
insl
and
test
inc
dec
xor
sub
repz
pop
test
movsl
and
add
loope
push
jns
addl
mov
xchg
movsb
mov
sub
push
cld
cmp
jne
pop
dec
push
fisubs
ja
fcompl
jne
lret
inc
cmp
jbe
fs
mov
fadds
divb
fcomps
sub
lock
add
and
cs
sub
rcll
jns
arpl
jl
lock
inc
loop
les
sub
dec
xchg
dec
xlat
xor
mov
leave
or
mov
xchg
test
fadd
mov
pop
imulb
out
inc
mov
pop
xchg
jnp
jg
jle
mov
inc
outsl
shr
mov
xorb
xchg
cmp
mov
jge
pop
sti
sub
mov
jne
xor
movb
in
movb
lods
mov
ds
mov
mov
in
sub
add
cmpsb
lea
in
stos
xor
mov
mov
cmpsb
sub
daa
in
push
stc
and
mulb
clc
pop
dec
stos
scas
les
inc
mov
mov
push
icebp
arpl
dec
adc
daa
push
adc
out
inc
xchg
sbbb
and
lret
fwait
mov
sbb
stc
mov
pop
mov
insl
es
or
or
dec
mov
outsb
pavgb
and
test
sub
mov
test
aam
dec
adc
mov
mov
das
pop
pop
arpl
push
sub
in
sarl
sub
sub
aas
mov
pop
pusha
mov
scas
dec
out
data16
std
leave
daa
push
mov
popl
lea
std
or
jge
dec
lret
dec
inc
arpl
rcr
add
mov
mov
mov
mov
fisubrl
rolb
sub
rcrl
lock
sub
insl
lock
fcomi
push
je
loop
outsl
jns
push
add
mov
fstpt
loop
das
add
xchg
cmp
jp
cmp
mov
add
std
cwtl
in
insl
push
cli
mov
in
arpl
inc
mov
xor
mov
or
jg
mov
shr
lahf
inc
sub
cltd
andb
dec
sti
add
cltd
test
shr
cmp
mov
adc
inc
push
test
arpl
pusha
add
out
pushf
mov
cmpsb
js
dec
in
xchg
dec
icebp
mov
popa
push
mov
add
cmc
fistpl
jne
mov
stos
cmp
dec
lret
mov
dec
add
stc
push
cltd
pusha
faddl
lcall
xorps
test
mov
out
les
cmc
dec
sbb
daa
pop
std
ret
push
test
or
in
push
std
cmc
and
lret
cltd
push
pop
mov
adc
insb
pop
inc
ret
or
cli
sahf
mov
pop
fdivl
int3
int3
dec
mov
add
in
jbe
pop
ficompl
push
sub
xlat
sub
push
pop
movsb
adc
dec
leave
xchg
mov
dec
gs
aaa
into
in
sub
sbb
sub
popf
gs
roll
pop
sahf
fstpl
push
sbb
stos
popf
sti
xchg
and
xchg
push
adc
xchg
mov
lcall
xchg
xlat
jl
xor
cmp
std
push
jno
push
in
or
inc
fcmovb
inc
jl
in
int
mov
cmp
sub
rcll
repz
mov
outsl
and
movsl
jle
xor
daa
jbe
int
mov
in
ss
int3
mov
jp
nop
sub
or
cs
aas
out
test
add
sbb
insb
outsl
push
mov
pop
cmp
sub
sbb
adc
repz
inc
lcallw
call
sbb
pop
mov
sub
add
add
xchg
dec
fdiv
mov
cmp
ret
mov
push
shrl
xchg
lahf
sub
sub
jge
stc
mov
jmp
push
std
lcall
es
mov
int3
mov
cmp
mov
dec
xor
jae
popf
xchg
imul
cmc
addb
iret
fs
dec
shlb
ret
aam
jb
lea
pop
jge
pop
pop
and
shlb
andb
sub
std
pop
ret
inc
imul
jl
repnz
adc
cmp
outsb
mov
lds
mov
dec
xchg
mov
mov
int3
stc
pop
push
enter
adc
push
and
enter
fcmove
mov
shll
pop
orl
ret
stos
add
mov
pushl
jno
jne
imul
push
leave
inc
aam
out
inc
addb
and
dec
xchg
add
adc
jo
pop
scas
fisttpll
addr16
pop
fisubrl
movsl
les
rdmsr
jecxz
lock
cs
or
loope
rol
hlt
mov
popf
inc
aaa
jns
cli
jg
test
pop
sub
push
mov
scas
cmp
mov
ss
lret
fucomi
sub
lahf
adc
cmove
add
xor
mov
out
sbb
adc
and
adc
or
pop
or
lcall
push
cmp
mov
popf
sarl
and
hlt
enter
jns
rcrb
xchg
mov
mov
leave
ja
cmp
mov
bound
mov
or
cmc
push
out
mov
sbb
out
ja
push
fsubrs
push
and
adc
and
inc
insl
sub
clc
fwait
and
and
std
add
dec
sbb
stc
sbb
popf
xor
outsb
inc
out
mull
sub
out
out
test
push
mov
js
test
mov
sbb
insl
push
mov
sub
jg
imul
push
out
lret
xchg
pop
fisubrs
ljmp
fistps
cli
cmp
fucomip
push
fbld
add
lods
pop
clc
push
mov
push
out
mov
js
dec
xchg
hlt
shr
sub
dec
adc
popf
vmovsd
dec
mov
loop
jecxz
xor
repz
in
lret
xchg
icebp
mull
cmp
cltd
das
test
pop
popa
pop
jo
int3
dec
sahf
pop
mov
aaa
mov
pushf
jp
jne
sbb
xchg
and
xchg
movsl
push
jno
adc
jb
fldcw
ljmp
sbb
stc
sbb
mov
and
lock
adc
inc
outsb
pop
pop
and
fisubrs
ret
inc
mov
mov
sub
frstor
call
sahf
lcall
adc
fcmovbe
sti
inc
jg
mov
jo
jecxz
jl
adc
push
xchg
fsubrl
pop
shl
loopne
out
fildl
shll
test
and
inc
insb
test
hlt
andnps
popf
adc
fistps
or
loop
rcl
adc
mov
js
mov
or
cs
jmp
pop
xchg
and
btc
es
jns
aam
lret
push
fdivrs
mov
adc
adc
icebp
push
daa
push
ret
dec
mov
stos
lea
lcall
jle
mov
scas
fisubl
mov
and
cmp
and
test
repz
out
jnp
or
cmp
nop
or
push
nop
aas
stc
add
jecxz
fstpl
mov
sbbb
popa
xchg
imulb
mov
test
ror
je
movsl
shrl
hlt
lea
dec
and
les
shll
cli
int3
ss
xor
ret
and
push
out
loopne
jecxz
add
into
repz
mov
pop
or
pop
add
out
and
aam
mov
in
enter
cmpsb
mov
arpl
cld
test
lock
insb
cmpsl
jnp
adc
fld
cmp
push
sbb
dec
mov
mov
insb
sarl
mov
popf
out
mov
xchg
or
dec
jmp
stc
ljmp
cmpsb
push
out
ss
out
jbe
gs
lea
in
mov
scas
scas
xor
pop
pop
push
add
int3
inc
mov
mov
pop
or
mov
adc
shlb
enter
mov
sti
ljmp
test
aas
in
inc
clc
xchg
mov
fiaddl
int3
mov
aas
add
cltd
push
cltd
sbb
outsl
or
and
mov
cmp
sar
ss
cmp
loope
mov
jae
loop
sbb
out
in
loopne
enter
cmp
xlat
neg
andl
stc
cmp
out
push
pop
bound
sbb
mov
push
imul
or
test
rorb
mov
push
push
subl
out
fcmovnu
sbb
push
add
dec
pextrw
mov
insb
inc
ljmp
jo
pusha
dec
and
mov
mul
xchg
andb
jbe
or
mov
out
push
adc
insb
in
xchg
jle
mov
sub
or
push
pop
jmp
mov
xor
or
ja
add
or
clc
cld
mov
sbb
or
ja
xchg
out
jno
call
push
out
das
adc
jmp
mov
in
mov
mov
pop
fisttpll
mov
ds
xchg
inc
mov
in
icebp
adc
in
popa
dec
add
inc
outsl
sub
shll
daa
dec
scas
and
lea
adc
xor
add
or
in
mov
and
dec
sub
jmp
cmp
stc
aam
inc
pop
dec
hlt
cmc
into
cmp
push
ret
stos
test
in
fsubr
xorb
mov
mov
inc
cltd
dec
sbb
out
or
movsb
call
mov
addr16
cmp
jb
outsl
lret
pop
add
mov
or
jbe
and
daa
sub
ss
or
adc
mov
inc
loop
inc
xchg
jge
jle
lcall
dec
push
xchg
fwait
pop
movsl
and
in
mov
adc
add
fiaddl
push
dec
jno
notl
loopne
es
adcl
mov
and
inc
dec
fadd
xchg
lahf
pop
inc
mov
pop
mov
int
stc
insb
xchg
jmp
jo
vmread
test
inc
sbb
sbbb
repnz
push
inc
sbb
jb
out
insl
icebp
dec
xor
mov
in
xor
in
pop
cmpsl
add
cs
or
mov
aad
outsl
andb
jns
outsl
repnz
cld
lcall
adc
push
adc
mov
subb
arpl
loope
icebp
nop
and
and
repz
sbb
test
push
pop
enter
outsl
sbb
daa
data16
jbe
dec
sbb
dec
movsb
jb
lods
movsb
jl
sub
shrl
jp
ljmp
loopne
jbe
and
and
out
insb
aad
test
xchg
mov
xor
cmp
stos
jo
lret
subb
pop
aam
jle
rorb
cmpsb
cmove
or
in
gs
test
sahf
aam
push
jl
pop
out
pop
jno
adc
ret
stc
dec
or
xchg
adc
mov
adc
mov
shrl
ret
xchg
mov
sbb
arpl
dec
dec
stc
sub
mov
out
adc
mov
das
add
xchg
enter
dec
jmp
adc
pusha
adc
lods
xor
lret
and
arpl
jecxz
add
fnstenv
push
jl
rclb
adc
scas
faddp
movsb
cmc
packuswb
mov
push
pop
enter
xchg
jle
mov
lret
nop
pop
mov
inc
lahf
jge
in
cmc
repnz
in
iret
movsb
jecxz
sti
movsb
insl
stos
push
add
jb
and
xchg
aam
imul
inc
loope
pop
sti
adc
inc
mov
loop
adc
stc
jge
lock
fidivs
push
sbb
inc
cmp
mov
bound
add
icebp
data16
mov
cmpsb
cmp
xor
aad
out
gs
dec
pop
enter
inc
jle
sarl
jmp
lret
push
or
cmp
scas
jbe
push
pop
jmp
fists
scas
mov
mov
testl
dec
cmp
or
inc
or
or
cli
and
or
pop
dec
jp
out
add
pop
sbb
bnd
jno
repnz
xchg
in
jno
push
cs
cmp
xchg
xchg
jo
test
js,pt
shr
sub
lret
stc
and
or
ret
sbbb
es
cmp
stos
dec
inc
mov
outsl
int
jmp
std
xchg
mov
adc
mov
mov
out
stc
inc
add
incb
inc
call
push
xchg
xchg
adc
mov
mov
sub
iret
and
pushl
cs
imul
data16
gs
mov
pop
pop
adc
fisttpl
rorb
cmp
inc
fwait
movsl
lea
mov
movsb
and
pop
push
rolb
cmp
sbb
lock
mov
adc
out
xchg
push
pop
les
cmpsl
sub
jp
imul
pop
jns
pop
jne
mov
cli
jb
mov
jns
out
into
mov
out
mov
enter
lods
ljmp
push
adc
testb
jmp
loop
push
xlat
ss
add
xor
push
icebp
lcall
jno
xor
mov
or
pop
sbb
adc
dec
outsl
xlat
imul
insl
enter
data16
fldenv
sbb
mov
int
jbe
jns
out
pop
loope
int
pop
jl
jmp
mov
and
sbb
sti
adc
xlat
inc
sbb
stc
movsl
push
mov
outsl
out
adc
adc
dec
jp
add
movsb
sbb
mov
loope
gs
fldl
clc
sbb
shlb
mov
mov
fcoms
pop
sub
xchg
and
inc
push
icebp
outsb
inc
and
nop
dec
and
pop
lcall
cmp
pop
pusha
pop
jbe
je
int
add
xorl
repz
cmp
sarb
out
adc
adc
sub
cmpsl
jmp
aad
sub
movsb
jg
movsl
out
js
sub
push
mov
mov
xchg
ret
add
das
mov
inc
insl
outsb
cmp
ds
jnp
addb
xor
dec
dec
daa
cltd
fcmovnu
sub
sbb
lea
lods
sbb
insl
scas
repnz
mov
and
call
int3
xchg
push
mov
dec
jno
sub
cs
imul
add
lcall
mov
outsb
pop
dec
sbb
mov
fdivrl
popf
loopne
push
test
add
push
psubusb
sub
mov
aad
mov
push
sbb
stos
mov
clc
cmpsb
daa
pop
xor
aas
add
inc
inc
push
push
mov
aaa
xor
pop
repz
push
ljmp
xor
test
rorl
mov
mov
sub
jnp
xchg
mov
add
xor
je
xchg
hlt
fimuls
repz
les
sbb
fldenv
xchg
lret
das
push
lods
lds
scas
mov
mov
rorl
xchg
stc
mov
inc
mov
pop
jle
adc
pop
gs
mov
pusha
lock
push
stos
js
mov
nop
jle
xor
sub
popf
nop
in
ss
loope
add
pop
sub
fsubrp
pop
pop
dec
xchg
cmp
popf
std
sbb
dec
in
pop
mov
jno
enter
cmp
insl
arpl
into
dec
sbb
inc
ss
pop
push
inc
and
jae
popf
ret
xchg
adc
push
outsl
mulb
push
xchg
mov
cld
out
ret
xchg
test
add
rol
es
mov
sub
xor
mov
pop
roll
push
cmp
popa
mov
sub
and
cli
or
lret
add
popf
sub
js
jg
push
mov
bound
mov
fisttpll
es
xchg
jmp
shll
pop
ret
pop
pop
xor
jle
fwait
adc
shl
inc
mov
cmpsb
or
out
inc
cmp
push
inc
stos
sbb
add
iret
jmp
pop
push
lock
fimull
ficomps
aam
repz
xor
loopne
cwtl
mov
inc
daa
and
push
aaa
pop
mov
sub
push
jno
pop
std
das
xchg
jle
insw
xor
imul
imul
lret
fbld
push
and
je
jne
inc
push
enter
mov
test
mov
mov
jl
sbb
mov
out
rol
add
mov
sbb
cmp
imull
nop
mov
fildl
fucomp
int
sub
jg
pop
lds
in
popf
push
mov
int
jp
add
jae
ja
in
dec
push
fbld
inc
popa
cmp
dec
push
cs
lods
lods
mov
daa
xchg
decl
dec
push
jne
pop
sbb
out
into
fstl
mov
shrb
mov
cmp
bnd
mov
dec
sbb
jl
dec
outsb
lret
repz
fdivr
jbe
or
push
sbb
adc
scas
loop
push
fistpll
dec
dec
xchg
and
jae
jg
pop
scas
dec
lahf
shrb
jecxz
adc
aaa
push
mov
push
dec
inc
push
divb
jae
loopne
dec
mov
sarb
xchg
shl
push
movsb
repnz
call
rol
out
pop
push
cmp
cmp
push
movsb
dec
clc
mov
pop
jmp
sub
cmp
sub
push
inc
mov
js
iret
notl
in
pushf
sti
jecxz
insb
inc
jecxz
jae
pop
mov
outsb
sub
pop
jmp
add
int
cmp
push
inc
movl
push
call
adc
test
inc
lds
std
push
and
and
dec
sbb
xchg
xchg
enter
jb
vmovshdup
or
sbb
cmp
xchg
ss
adc
pop
cmp
shlb
dec
inc
cmp
and
sti
mov
adcb
pushf
jle
fwait
xchg
mov
add
push
notl
fwait
dec
aad
arpl
in
and
insb
adc
orb
mov
pop
test
cmp
out
aam
je
mov
jne
hlt
dec
mov
lret
xor
xchg
std
or
rcll
sub
push
inc
rorl
or
xchg
out
xchg
cmp
mov
aaa
mov
cmpl
shrl
sub
lcall
test
add
fwait
xlat
pop
lret
int3
aas
out
mov
jmp
aam
iret
xor
cmp
cmpl
rolb
cli
and
les
pop
jns
push
jle
and
imul
jbe
jne
ljmp
test
dec
mov
es
mov
add
ss
pop
xor
out
mov
pop
add
pop
les
repz
adc
aam
adc
repz
mov
dec
cmp
lock
sti
sub
mov
xchg
inc
and
dec
pop
mov
lock
jae
test
sbb
gs
std
xchg
out
mov
or
enter
daa
test
push
shll
sti
cltd
jo
in
sub
pushf
outsl
xor
sarb
hlt
loopne
ss
ret
sbb
dec
jge
and
pop
ss
ret
adc
cli
insb
into
sub
cld
nop
shrl
mov
fstps
push
mov
xchg
arpl
inc
or
lcall
adc
sbb
out
jge
js
mov
add
loopne
test
or
lahf
je
mov
lcall
mov
mov
pop
pop
add
mov
lea
xchg
popf
xchg
sbb
xchg
adc
scas
bound
lds
sbb
cltd
jbe
ljmp
mov
out
jbe
push
or
flds
add
in
dec
xchg
sbb
sub
dec
or
ret
stos
bound
icebp
sahf
dec
dec
dec
movsb
aaa
addr16
mov
push
cmpsb
mov
sahf
lods
xchg
dec
sbb
mov
sub
add
lock
inc
lret
fcomip
sbb
pop
popf
pop
cmp
cmc
adc
push
push
test
in
sarl
in
adc
pop
sub
jns
sub
add
push
xchg
imul
add
imul
and
lods
mov
mov
aaa
jecxz
jae
subb
idiv
int3
cmp
sbb
cmpsl
or
sbb
and
dec
adc
or
mov
aas
das
sbb
xchg
push
repnz
and
mull
inc
mov
mov
mov
enter
cltd
cltd
mov
inc
mov
daa
jb
in
out
outsl
xor
pop
xchg
repz
bnd
rcll
fldcw
mov
adc
xchg
or
sbb
cmp
mov
jne
ss
and
xchg
shl
repnz
add
push
outsl
test
adc
or
sbb
loopne
inc
or
fildl
aam
dec
nop
stos
xchg
in
xchg
bswap
jne
lds
int3
loope
ljmp
push
dec
jb
inc
jae
imul
mov
pusha
aam
jns
inc
mov
movsl
sub
mov
orl
hlt
stos
in
dec
adc
dec
out
mov
popf
pushw
add
popa
jo
cmp
enter
mov
or
ljmp
outsb
adc
stc
lods
shlb
push
test
pusha
or
negl
stc
sbb
push
cmp
aas
std
or
fwait
repz
lcall
stos
inc
jle
sbb
mov
in
jnp
cwtl
dec
aam
push
dec
incb
jnp
subl
xchg
and
xchg
or
int
jp
je
mov
stos
xchg
mov
mov
movsl
xor
sub
icebp
enter
lods
andl
and
sub
jno
test
pop
jle
rcrb
mov
mov
jg
in
rcll
push
iret
fidivs
mov
mov
sbb
fildll
pop
adc
imul
mov
notl
xor
jns
add
bound
dec
sbb
cmp
jle
hlt
je
mov
cmpsb
test
push
lea
dec
add
inc
xchg
dec
pop
pop
mov
or
fcoms
es
adcl
pop
cwtl
mov
sbb
jnp
push
cmp
fbstp
cmpsl
xor
mov
inc
data16
call
cmp
inc
add
push
push
inc
pop
rol
dec
add
xor
sub
mov
xor
sbb
icebp
out
sub
xor
jmp
lds
adc
or
insl
mov
and
xor
mov
and
cmp
pusha
jecxz
push
jb
push
push
mov
sub
jnp
in
xor
jmp
push
sub
andl
mov
out
sahf
add
pop
cmp
add
popf
and
mov
fldt
adc
sti
loop
sub
lea
dec
mov
aaa
or
pop
push
mov
and
pushf
mov
jp
aas
enter
das
jnp
or
int3
mov
add
push
inc
lahf
addr16
or
pusha
lret
xchg
pushf
adc
ret
pop
mov
shll
icebp
stos
push
push
push
enter
cmc
imul
ficoms
pop
cmc
dec
push
xchg
push
pop
aad
in
cmpb
pusha
das
sarl
out
push
adc
mov
mov
add
pop
xchg
push
outsb
fildll
mov
or
fisubs
xlat
pop
xor
orb
push
or
lret
jmp
pop
ja
jp
cwtl
lahf
adc
jge
inc
cmp
jp
fisubs
repz
push
loope
add
mov
sub
sub
cmp
inc
shlb
mov
pop
sbb
cli
movsb
inc
stc
inc
inc
out
adc
loopne
fstl
addr16
mov
dec
inc
rorb
scas
inc
sub
or
repnz
pop
adc
pop
inc
cwtl
xlat
mov
cwtl
push
mov
inc
sbb
jp
mov
dec
mov
repz
inc
popa
xor
mov
sub
cmp
daa
dec
xor
sbb
rcrl
jmp
sub
pop
add
lock
sbb
bound
fmuls
in
dec
cmp
mov
push
jmp
jmp
inc
jbe
cmp
add
mov
sub
aam
fnsave
into
mov
cmp
mov
stos
enter
in
xlat
ljmp
das
rcrl
mov
push
xchg
hlt
xor
jecxz
lods
sahf
add
xchg
icebp
mov
jnp
jl
fs
or
call
dec
shrb
pop
xor
sbb
inc
sub
mov
ficomps
cmp
aas
push
jle
jp
clc
dec
jb
jl
imul
adc
jmp
jg
mov
inc
aad
imul
cs
cmp
out
decl
jp
mov
nop
mov
popf
fadd
lds
sbb
into
imul
add
mov
sbb
enter
mov
dec
cmpsl
dec
popa
enter
push
icebp
daa
pop
jmp
adc
dec
ja
cmp
pushf
jecxz
jae
push
scas
enter
xor
orb
xlat
mov
and
sub
sbb
stc
lcall
mov
inc
lret
or
mov
out
mov
mov
lods
mov
cld
pop
shrl
xor
xor
loope
pop
fs
cmp
or
in
sbb
jb
mov
jno
fs
inc
mov
loopne
andb
test
add
rorb
loope
dec
movsl
out
mov
addl
subb
ret
sub
mov
adc
mov
loop
fs
cmc
sbb
mov
or
inc
sbb
mov
xor
mov
fisttps
stc
cmp
adc
insl
pop
or
mov
cmp
frstor
xchg
cld
add
or
fldt
inc
lods
shlb
push
sub
mov
fildl
push
pop
fwait
sbb
or
fdivs
xchg
mov
jecxz
cltd
and
jl
dec
fiadds
push
mov
rcr
add
nop
popf
adc
cmp
insb
and
cli
pop
mov
sbb
scas
cmpsl
mov
mov
bnd
inc
notl
dec
fnsave
outsl
jns
push
inc
ja
movl
bound
stos
push
xor
dec
xor
cmp
cmp
sub
inc
bound
jmp
sbb
sbb
pop
nop
cmp
and
shl
je
divb
scas
inc
fsubrs
pop
addr16
and
dec
adc
jbe
insl
lock
sbb
dec
in
ret
mov
fwait
mov
test
call
ss
xchg
xor
iret
xor
cld
xlat
fstpl
insl
ret
test
dec
rorl
gs
pop
rorl
lds
daa
lock
cmpsb
flds
adc
mov
fnstenv
enter
lret
out
xor
daa
xchg
pop
mov
ds
add
pop
push
mov
stos
ss
test
in
in
jge
ficomps
add
sub
arpl
sub
jo
movups
lods
orb
pop
dec
lret
adc
gs
sub
pusha
jno
dec
stc
add
je
pop
lret
mov
clc
and
push
jnp
add
mov
addl
out
mov
hlt
cmpsl
push
dec
mov
cmp
push
cli
mov
bound
jno
sahf
cmpsb
inc
adc
subb
jecxz
clc
inc
add
mov
cli
aad
fisubrs
popa
fadd
jbe
popa
xor
out
pop
ja
pop
fwait
outsl
push
jle
sub
jecxz
jne
xor
lds
sbb
cmp
or
pop
cmpsb
mov
push
lahf
mov
mov
jno
movsl
aam
jbe
xor
aad
scas
push
inc
ja
xchg
fdivrl
pop
adc
xor
sbb
jns
dec
cmp
dec
mov
subl
icebp
cs
adc
negb
mov
mov
icebp
jl
adc
pop
lcall
addl
push
push
jl
cmp
push
ss
add
mov
rcr
fcomp
lahf
dec
adc
leave
lods
insl
inc
sahf
shlb
out
loopne
push
aas
sti
and
sarl
js
jno
mov
mov
pop
cld
gs
jmp
push
fidivrs
xchg
pusha
push
int3
jb
rcr
aam
ret
int3
loope
mov
pop
push
or
cli
mov
int3
ja
mov
adc
addr16
mov
loop
ror
adc
push
pop
repnz
aas
mov
xchg
pusha
mov
push
jmp
addl
cltd
in
mov
iret
jnp
jb
pop
ret
test
dec
and
mov
jp
sub
jle
clc
and
jge
pop
call
bound
push
jp
push
sbb
xor
cmpb
fisubs
jmp
mov
in
mov
test
adcl
in
push
or
sub
aas
lods
mov
out
dec
ds
fstpt
dec
xchg
insl
mov
aas
sti
or
sub
jmp
popf
mov
pop
inc
jnp
xor
lret
out
sarb
daa
adc
push
clc
lods
jmp
fs
push
cwtl
cli
sarl
dec
jo
ret
sbb
sub
lcall
fdivl
aas
dec
xlat
xor
inc
add
movsb
inc
pop
xor
sub
fldenv
pmaxsw
scas
fdivr
and
pop
dec
or
jnp
pop
xchg
mov
jns
or
es
es
ret
test
lret
out
lahf
or
push
ja
jp
fisubs
fdivr
es
mov
out
mov
nop
push
or
movsl
inc
nop
ja
or
lret
sbb
mov
test
adc
xor
sbb
frstors
mov
or
mov
mov
popa
lds
sbb
in
push
xor
xlat
std
xchg
jmp
push
rclb
sub
inc
cmp
mov
mov
aam
call
dec
xor
cwtl
iret
adc
inc
push
int
and
or
fnstenv
insl
xchg
shlb
loopne
pop
push
sub
flds
mov
cmpsb
xorb
sbb
jle
mov
xor
cli
cmp
add
cmpsb
lds
ja
ljmp
add
inc
push
popf
dec
xor
daa
jae
data16
repz
cmpsl
aam
stos
jb
ja
mov
loope
sbb
loop
or
loope
mov
or
sub
aaa
pop
mov
insb
test
stc
dec
sub
push
push
decl
xor
sar
add
into
push
inc
stos
testl
sbb
and
pop
int3
mov
fcompl
add
aam
jl
mov
js
pop
arpl
cmp
mov
pop
dec
inc
xlat
repz
mov
cmpsb
dec
push
mov
xor
cmp
in
mov
out
mov
mov
and
or
jb
mov
ss
pop
jne
mov
mov
xor
jno
arpl
add
or
roll
bound
mov
push
es
sub
fidivs
popf
mov
add
or
scas
add
insb
jle
pop
lds
rclb
in
push
mov
cmp
icebp
jle
jmp
inc
out
divl
push
inc
lds
inc
xchg
push
mov
add
jo
fcomp
push
movsb
mov
push
negb
xchg
ja
inc
cld
cli
fistpl
insb
sbb
fistl
lods
bound
lret
mov
mov
cmpsb
sub
jb
cmp
xchg
call
fldenv
adc
lea
mov
jbe
mov
xor
ficompl
jbe
cmp
test
imul
xchg
dec
jmp
mov
jecxz
test
sarl
lods
cmc
mov
sbb
fcmovnb
rcll
insb
inc
rcll
or
pop
inc
adc
adc
fs
sbb
icebp
lcall
jp
dec
les
addr16
add
fcmove
lods
popf
insl
icebp
push
jp
repnz
movsl
lcall
xor
out
dec
btc
mov
xchg
xor
xchg
out
inc
adc
mov
lods
fildll
jle
add
js
inc
push
jno
cli
inc
inc
xor
cwtl
push
sub
rorb
mov
out
add
push
mov
dec
or
xchg
sti
mov
icebp
data16
out
enter
xor
out
dec
stc
in
shlb
cltd
sbb
mov
mov
scas
adc
sti
das
xchg
js
fsub
leave
es
cmc
xchg
cmp
xor
dec
xor
jno
sub
pop
sti
pop
mov
cs
scas
sbb
add
mov
xor
aam
adc
and
hlt
xor
cmpsb
pop
pop
mov
bound
out
push
imul
mov
test
cltd
stc
dec
rorb
mov
lret
rclb
pop
mov
mov
jns
push
rcrl
out
out
cltd
xchg
mov
cmc
mov
adc
stos
das
out
lods
cmp
sub
mov
mov
pop
sub
out
pop
stc
addr16
dec
xchg
inc
repz
sub
movsl
test
repz
cmp
lods
outsb
in
fstpl
popa
stos
out
mov
mov
andb
in
ds
fxch
icebp
mov
popf
movsl
movsl
or
pop
das
ret
push
icebp
bound
mov
push
mov
xchg
clc
and
aad
add
sub
mov
and
sbb
push
sbb
faddl
mov
mov
push
mov
pop
jae
and
jne
rcl
mov
call
popa
xor
movsl
xchg
or
lds
aaa
push
mov
data16
push
sub
aad
pop
call
adc
rol
dec
push
addr16
cmp
ds
inc
adc
or
jo
mov
movsb
hlt
mov
cmp
cmp
push
inc
add
mov
insl
jmp
repnz
bound
xchg
push
call
jns
test
sub
mov
ja
mov
jb
mov
repz
or
inc
add
jge
pop
lcall
sti
sub
mov
jecxz
sub
jl
add
aaa
nop
jb
es
pop
or
stos
xchg
jns
daa
pop
sub
pop
unpckhps
rclb
pop
repnz
dec
in
out
lods
mov
in
dec
frstor
or
mov
or
inc
push
inc
fsts
cld
mov
ds
or
mov
push
movsl
cmpsb
nop
leave
fbstp
sbb
mov
std
sbb
sbb
sti
out
inc
mov
inc
stos
xor
jge
xchg
inc
inc
sub
mov
jmp
popa
bound
push
test
inc
mov
add
iret
fucomip
sub
push
stc
in
insb
mov
ss
xchg
mov
cmp
push
lret
cltd
xchg
adc
dec
add
pop
clc
cld
sbb
rolb
out
jb
jg
mov
int
xlat
add
insb
adc
pusha
jnp
cltd
jne
lods
rcr
and
or
ds
fcom
pop
jmp
nop
mov
cli
aam
shrl
xor
out
stos
xchg
imul
std
jmp
jo
movb
fisttpl
cwtl
jmp
les
loope
bndldx
cmp
push
cmpsl
dec
sub
sbb
cmp
inc
push
mov
cltd
nop
stos
mov
js
dec
jae
inc
out
scas
dec
push
sub
mov
push
dec
addl
sbb
push
inc
lea
xorb
dec
fbld
push
mov
divl
or
sub
out
mov
loope
lods
loope
jp
in
mov
mov
cltd
mov
and
clc
add
insl
push
aam
sti
or
nop
out
jno
adc
daa
cmp
jno
je
or
fldt
mov
mov
iret
addr16
mov
xchg
ja
xor
imul
push
aaa
cli
jl
fmuls
fcoms
jne
mov
and
test
inc
stc
mov
xchg
hlt
pop
test
push
sbb
dec
loope
dec
aam
dec
xorl
jns
jl
sar
jae
pop
gs
inc
dec
or
mov
js
adc
adc
push
cltd
nop
stc
cmpsl
sahf
jns
lret
adc
jno
xor
test
mov
pushf
mov
sti
mov
push
clc
out
push
mov
or
ss
sbb
jno
mov
push
enter
popl
xchg
jge
cmpsl
pop
push
arpl
insb
loope
cmp
or
mov
frstor
dec
sub
hlt
mov
outsb
test
out
inc
pop
in
mov
pusha
jp
and
hlt
and
stos
xchg
xchg
loop
jp
xlat
inc
outsl
sahf
adc
jge
cmpsl
out
adc
and
sub
mov
xor
mov
hlt
jp
fnstsw
dec
dec
mov
leave
sbb
mov
add
push
sbb
les
movsb
dec
pop
cltd
imul
sti
xchg
push
mov
ret
sti
xchg
scas
out
lcall
addl
mov
das
insl
mov
add
stc
fdivrl
ds
sbb
bound
xchg
cmpsb
ja
xchg
inc
xchg
mov
shlb
adc
sbb
shrb
mov
cltd
inc
sbb
adc
cs
cmp
icebp
sub
or
jno
mov
mov
pushf
xchg
adc
movsl
cs
jmp
push
iret
test
and
in
fsubrl
sarb
sbb
push
push
mov
scas
sar
inc
jno
mov
bswap
dec
jb
pop
pop
mov
cmc
or
add
jmp
loop
sub
dec
xchg
loop
sbb
sub
div
or
popa
cmp
jp
mov
dec
stc
mov
int
mov
aam
pop
scas
cmpsb
xchg
nop
lcall
sub
inc
adc
repnz
sub
decl
pop
push
mov
gs
repz
dec
pop
jmp
pop
cmpsb
faddl
push
jnp
or
dec
xor
cmp
mov
or
xor
inc
arpl
mov
pop
lods
fiadds
adc
iret
clc
cs
cmp
jl
adc
push
inc
js
pop
add
pop
mov
mov
ret
fisubrl
mov
inc
push
cmp
add
xchg
test
into
test
les
daa
movl
in
pusha
subl
pop
push
fsubrs
push
mov
mov
mov
shlb
rcrb
add
iret
je
pushf
lods
adc
sbb
lret
mov
cmp
pop
cmpsb
repz
xchg
cmp
and
jnp
mov
push
push
cli
cltd
scas
daa
and
fwait
lock
mov
iret
test
cs
mull
cmp
jbe
mov
outsl
movb
scas
jge
xor
mov
jg
into
syscall
arpl
adcl
pop
lret
jmp
and
sub
scas
fiaddl
sti
imul
mov
in
jg
ss
adc
out
push
cmp
jle
sbb
ljmp
scas
adc
and
fs
jb
pop
iret
jnp
sub
pop
cmc
mov
or
adc
outsb
dec
jo
sbb
jle
cmp
jo
aas
lcall
sbb
mov
inc
or
mov
cmc
les
dec
push
xor
gs
mov
add
mov
pusha
aad
pushf
ss
std
mov
addl
adc
out
xor
call
daa
gs
push
ret
push
das
pop
pusha
leave
mov
ret
shrl
xchg
pop
jmp
dec
loopne
xor
or
cmp
push
xchg
aas
mov
inc
nop
xor
xor
pop
sar
cmpsb
jno
rcr
testb
in
jno
aad
cmpl
lret
insl
aaa
out
shrl
mov
enter
pop
cmp
add
imulb
pop
and
lret
pop
ljmp
insb
adc
inc
repz
daa
inc
xor
or
or
add
add
jbe
insb
mov
js
imul
je
in
lahf
mov
pushf
push
repz
or
gs
jl
jb
rclb
xchg
pop
es
rcr
ljmp
inc
cmpsb
mov
or
inc
out
clc
or
inc
jns
test
mov
inc
push
add
xchg
mov
jae
test
test
or
popf
jno
cmp
mov
jmp
or
mov
adc
mov
xorl
es
lret
push
dec
stos
sahf
sbb
jmp
xor
lods
aad
cmpsl
pop
push
dec
add
mov
test
cli
repnz
push
add
scas
mov
and
pop
movsl
push
sub
je
mov
inc
pop
add
mov
hlt
fmuls
int3
lret
xchg
pop
jae
jmp
pop
out
in
lcall
mov
and
fcomps
call
fnstenv
push
lds
xchg
dec
test
mov
fdiv
stc
push
jb
fsubp
jecxz
pop
icebp
out
lret
dec
xchg
mov
stc
jae
insb
jle
pusha
or
mov
cmp
mov
cmp
mov
clc
mov
jns
adc
out
shlb
arpl
mov
popa
das
arpl
sub
pop
popa
push
stc
cld
cltd
rorl
ret
insl
adc
mov
repz
sbb
jns
adc
xchg
mov
loop
jg
mov
cmpsl
addr16
icebp
mov
xor
lahf
cli
jle
pop
xchg
sub
inc
stos
icebp
rcrl
push
push
fstps
xchg
dec
movsl
or
push
pop
jecxz
pop
inc
mov
push
mov
cmp
test
repz
cmpsl
and
cmpsl
jne
aad
pop
mov
jle
and
pop
cmp
or
xchg
rcrl
repz
adc
jl
cmp
jmp
popa
pop
inc
in
inc
out
pop
nop
push
ljmp
mov
sub
data16
scas
xchg
imull
sbb
inc
into
movb
decl
cmp
adc
subb
sbb
and
pop
ret
daa
test
jno
cmpsl
xor
aad
divl
inc
mov
cmp
aas
fildl
mov
adc
jle
nop
into
or
and
cmp
sub
clc
sbb
sarl
pop
ss
sub
or
mov
addb
lahf
sub
lret
xor
xor
add
mov
jg
call
cli
mov
sbb
cmp
pop
add
lods
adc
or
xchg
mov
adc
xchg
sbb
imul
push
add
movsl
aas
sbb
lret
xchg
adc
cmpl
push
sbb
mov
xor
stc
lahf
addr16
jp
push
subb
incl
inc
jb
xor
sti
repz
push
sti
or
or
cwtl
mov
or
push
divl
xorb
fsubs
pop
sbb
cs
ficomps
add
call
dec
orb
sbb
dec
cmp
sub
in
or
xchg
dec
and
mov
clc
popf
mov
pushf
andb
inc
repnz
les
dec
ss
sbb
adc
xchg
or
xchg
mov
insl
push
dec
mov
orl
add
and
push
sbb
and
or
stos
or
xchg
push
sub
mov
ret
insb
mov
gs
int3
push
fwait
std
in
mulb
je
or
in
loope
cmpb
mov
pop
imul
in
cltd
xor
loope
pusha
sbb
xchg
enter
mov
movl
repz
out
test
scas
mov
inc
jmp
jo
outsl
add
inc
or
mov
xor
das
pop
insb
in
adc
andb
dec
sbb
sub
add
cmc
bound
cmp
adc
nop
leave
cmpsb
mov
int
sub
negb
dec
idivb
pop
jl
sub
xor
out
lret
fwait
jge
movsl
jo
dec
dec
sbb
inc
div
add
mov
or
fwait
mov
clc
bound
push
xor
ja
insb
inc
xor
ljmp
iret
push
mov
xor
xchg
lret
pusha
mov
mov
imul
and
xchg
js
ror
lock
mov
insl
dec
push
psllw
les
adc
aaa
pop
test
mov
dec
out
lret
mov
mov
repz
and
sbb
or
xor
lahf
int3
out
xlat
mov
pop
imul
gs
inc
adc
jecxz
xchg
push
push
cmc
adc
mov
std
rcrb
jmp
xor
testb
fisttpll
jae
shlb
adc
mov
repz
sub
pop
lea
mov
call
sbb
inc
sub
jmp
fstps
jb
shrl
mov
mov
add
arpl
xor
push
lea
push
inc
xchg
add
in
jb
push
xchg
cmpsl
jmp
inc
xor
sbb
imul
pop
les
cmpsb
pop
or
dec
fsubrl
mov
cmp
shlb
mov
inc
push
xor
in
ret
mov
cltd
ret
adc
iret
lret
xor
lds
and
aas
out
lock
dec
or
fstpl
movsl
sub
cmp
push
aas
mov
stc
leave
dec
out
mov
jle
pushf
push
call
outsl
das
push
ds
das
push
push
inc
mov
sbbl
mov
mov
in
add
les
xor
sub
xor
cltd
push
scas
aam
or
loope
or
xchg
push
aad
into
and
fsubrl
mov
jmp
rol
push
or
fmulp
mov
sbbb
call
stos
fwait
sbb
sub
inc
pop
sbb
neg
mov
jge
js
js
filds
jecxz
pusha
out
mov
int
or
stc
push
sub
sub
into
clc
sar
mov
fxch
add
sub
dec
addb
jbe
repz
xor
scas
je
mov
fisubrl
cmp
add
sbb
sbb
cmpb
jle
xchg
aas
xchg
cli
push
ss
dec
lret
sub
jge
cltd
outsb
rol
outsb
push
and
sbb
xchg
mov
incb
loop
sbb
inc
xchg
jmp
imul
mov
andb
xchg
lea
pop
mov
jmp
pop
ret
outsl
or
lods
lods
call
cmpsb
insl
nop
orb
fimull
int3
push
test
pop
in
loop
fisubs
sub
mov
mov
sub
in
and
popf
jp
in
cmpsl
pop
rorb
xchg
mov
test
inc
dec
mov
xchg
lret
pusha
ds
dec
out
xorb
scas
fnstsw
pop
adc
push
in
or
dec
out
fidivs
add
jnp
ss
jmp
in
ds
scas
or
sbb
cmovno
mov
fs
popf
cld
add
int
xchg
cmp
test
pop
xor
nop
push
stos
stc
jp
subl
dec
jns
mov
xchg
mov
out
icebp
pop
add
test
in
leave
fildll
shl
jbe
fimull
mov
dec
leave
mov
jne
xor
xchg
and
jecxz
loopne
nop
xor
ret
lea
push
daa
mov
push
insb
js
jge
inc
loop
jecxz
into
pop
or
dec
mov
cmp
mov
gs
js
lahf
inc
femms
in
mov
sub
imul
andb
int3
jg
aam
hlt
sar
pop
test
and
add
mov
aaa
int3
mov
das
pop
inc
in
nop
mov
imul
mov
cmp
std
jno
enter
shlb
scas
idivb
popa
mov
cmp
mov
cmp
push
push
xchg
add
pop
fmul
addr16
mov
jbe
dec
mov
pop
jne
jle
sub
sbb
fldenv
popf
jle
in
mov
in
je
data16
sub
out
pop
sub
push
add
andb
mov
cmpsb
popf
shlb
les
or
stc
ret
or
jbe
aas
jl
xchg
aam
mulb
or
add
dec
mov
mov
mov
mov
sbb
mov
xchg
xor
lcall
js
add
aam
aam
sbb
jl
sub
mov
cmpsl
cld
xchg
xor
imul
mov
xchg
and
mov
subl
imulb
cs
out
stos
aam
ds
xor
loop
lea
add
or
mov
xchg
lcall
and
in
sbb
incb
and
pop
jmp
rcrl
lock
fs
sbb
xor
and
repnz
inc
and
daa
out
clc
out
push
ds
jb
adc
lcall
roll
cwtl
adc
shlb
jmp
adc
pop
push
pop
mov
adc
cmp
pop
mov
rcrl
mov
std
xor
jl
test
xor
or
adc
lcall
ss
sub
out
mov
je
adc
jne
xchg
iret
aaa
notb
xchg
mov
cmp
lods
jne
hlt
xchg
sahf
aas
rolb
cmc
outsb
ljmp
mov
test
cmp
dec
sbb
inc
cmp
inc
xchg
in
stc
adc
stc
pop
push
mov
cmp
in
xor
and
inc
add
dec
sub
pushf
mov
mov
ficoml
jg
xor
imul
jmp
mov
lahf
dec
in
push
lcall
pop
dec
mov
push
push
mov
ret
pushf
es
xchg
mov
cmpsb
lock
mov
clc
stos
jo
jle
dec
mov
add
inc
xor
mov
mov
sar
arpl
cmp
sub
loop
mov
dec
mov
mov
adc
addb
insb
daa
imul
in
pop
std
cs
pop
imul
xchg
ja
hlt
jb
out
repnz
add
sahf
cmp
mov
sub
dec
inc
or
xchg
pop
jle
and
add
rcrb
cmpsb
ret
mov
sub
addr16
xchg
dec
leave
outsb
push
xchg
push
mov
jmp
sub
mov
mov
jp
and
bnd
sbb
jmp
pop
inc
mov
inc
lds
out
out
sub
rclb
imul
or
adc
xchg
scas
or
push
into
fisttps
rorl
outsb
push
std
sub
push
adc
lods
aam
fs
imul
sbb
outsb
or
xorb
xorb
in
aaa
fistpll
enter
adc
add
pop
ret
lret
jge
in
test
lods
out
inc
idivb
jae
dec
mov
push
xlat
nopl
fisubrl
icebp
es
cltd
xchg
lds
in
xchg
jbe
add
lds
cltd
pop
and
ja
inc
adc
sub
mov
call
leave
and
and
add
dec
fisubrl
xor
lods
cmp
jae
lret
mov
or
mov
lret
push
repnz
lea
ror
repnz
clc
push
sub
mov
into
scas
pop
fucomip
sbb
jae
cwtl
cltd
clc
and
or
in
pop
popf
mull
test
cs
shlb
push
in
cli
jns
adc
pusha
insb
mov
sub
push
and
adc
shl
repnz
cmp
repz
out
mov
pop
out
lods
adcb
in
in
jl
or
pop
cmp
fstps
push
andb
mov
cmp
stos
mov
popf
call
inc
stc
out
add
and
lock
int
cltd
icebp
out
mov
cmp
mov
jg
xor
mov
sbb
pop
enter
xor
dec
pop
out
jae
push
pop
mov
and
xchg
xor
cmpsb
xor
mov
mov
push
add
aad
ret
xor
cmp
pop
add
pop
jb
mov
mov
jecxz
add
insl
xor
mul
mov
loope
mov
das
jl
cmpsb
adc
xor
push
sbb
jecxz
notl
pop
out
sbb
adcb
adc
call
sarl
imul
dec
leave
sqrtps
fs
or
scas
pop
jg
dec
xor
test
je
call
mov
or
or
mov
outsl
jne
mov
shrb
mov
mov
mov
mov
inc
arpl
inc
jl
fisubs
in
aam
test
add
inc
xchg
jno
jo
pop
mov
dec
xchg
lds
jp
imul
and
rcrl
pop
or
test
pop
aam
in
mov
mov
lcall
out
sar
cs
adc
xchg
dec
int3
daa
push
jg
data16
xorl
mov
push
lcall
popf
push
or
sahf
loope
or
jnp
mov
lds
mov
dec
fs
fisubrs
mov
xchg
jae
or
jb
pop
mov
add
mov
pop
mov
out
test
out
into
cmp
jecxz
popa
or
pop
mov
jnp
sbb
xchg
cld
pop
push
and
xchg
scas
lock
push
push
mov
mov
push
int3
push
imul
mov
imul
das
idivb
inc
out
jecxz
mov
lock
js
adc
sbb
bound
cmp
cs
shll
xor
divb
inc
mov
lahf
inc
popf
das
sub
mov
push
jae
pop
mov
jns
mov
inc
in
mov
int
sub
mov
lds
jo
xor
lcall
hlt
or
addr16
pop
fidivrl
ret
push
ss
inc
dec
in
ds
dec
stos
test
cmpsb
adc
push
aad
mov
iret
rcll
add
push
jnp
pop
jecxz
lret
add
shlb
dec
sub
insb
lods
fstpl
aas
and
jmp
push
mov
bound
or
xor
aad
adc
pop
xchg
or
ffree
add
mov
pop
or
jne
daa
popa
ficomps
popl
dec
movsl
xor
mov
sub
push
lahf
and
dec
pop
lods
jg
arpl
xchg
imul
mov
lret
add
fcompl
aas
jo
inc
setge
and
adc
adc
mov
jno
jae
mov
das
xor
dec
jno
sbb
pushl
jae
sub
pusha
cmp
mov
cltd
int3
mov
xchg
cmp
xor
mov
mov
ja
jmp
int
jns
push
fdiv
dec
inc
cmp
inc
inc
push
adcl
inc
ja
add
and
sub
imul
dec
jp
cs
add
push
arpl
out
in
test
fdiv
nop
ja
icebp
sub
push
jle
cmp
add
lcall
or
and
lahf
lahf
jae
sub
sbb
xor
pop
inc
daa
sarb
in
cmp
icebp
cmc
mov
cmp
test
lahf
popf
cmp
stos
loope
outsw
popf
mov
add
cli
and
sbb
jb
xor
jb
xchg
pusha
daa
xor
or
test
push
pusha
mov
inc
cmp
xor
dec
add
push
lds
cmp
dec
jge
testl
clc
inc
add
mov
repz
out
jb
fstps
gs
adc
jne
mov
xor
dec
and
xor
test
mov
cmpsl
cmp
aad
call
mov
jnp
mov
or
orl
inc
stos
inc
adc
add
pop
data16
mov
pop
mov
xor
jge
and
fbld
adc
push
movsb
cmpsl
pop
push
out
insb
cmc
cs
outsb
dec
fwait
stos
dec
inc
jnp
ret
ljmp
mov
xor
int3
xchg
xchg
aam
pop
jbe
sub
daa
mov
dec
xchg
dec
fldenv
jae
jnp
hlt
test
add
add
adc
frstor
scas
les
push
aam
push
jo
repnz
nop
rol
in
jecxz
push
xchg
mov
sbb
shll
dec
cwtl
sahf
imull
jmp
scas
add
adc
dec
push
add
out
dec
nop
cmpsl
ds
popa
std
jp
in
jmp
inc
inc
xchg
push
pop
icebp
es
inc
das
add
int3
and
jae
jne
addr16
int
dec
fnsave
mov
adc
out
frstor
sti
repz
and
inc
xor
test
stc
ficompl
pop
add
test
push
cli
enter
push
neg
xchg
sub
xor
outsb
decb
scas
outsb
insb
ret
push
mov
lret
and
dec
sbb
aaa
negl
lahf
xchg
les
icebp
push
mov
lds
out
pop
insl
into
sbbl
xchg
std
mov
push
das
mov
hlt
cli
jmp
add
arpl
inc
xor
je
cld
push
dec
adc
add
ljmp
pop
in
scas
ljmp
es
pushf
leave
mov
jb
outsl
xchg
inc
dec
mov
xchg
cmpl
or
mov
add
ret
xor
mov
lock
push
xchg
xchg
push
fists
insl
lret
cmp
add
sbb
xchg
loopne
test
dec
mov
sar
push
je
in
addr16
hlt
jp
int3
lock
jmp
lret
cltd
or
adc
sarl
lret
jns
cmp
adc
jbe
insb
ss
mov
add
add
fs
mov
adc
movsb
jns
filds
movsl
stos
fadds
movl
cmp
popf
xor
into
pop
mov
jl
adc
sbb
popf
inc
pop
mov
ror
mov
inc
cmp
dec
outsb
mov
push
cmp
shl
repz
adc
dec
stos
xchg
xor
add
pop
mov
mov
mov
mov
dec
mov
pop
daa
jle
scas
insl
cmp
add
xor
mov
enter
adc
das
jo
inc
cmp
mov
lahf
dec
xchg
data16
mov
push
negb
mov
imul
addl
jmp
das
push
stc
rorl
into
pop
jmp
jp
aaa
push
sbb
ret
stos
and
leave
je
mov
fadd
jne
mov
lcall
push
pop
mov
ret
push
inc
push
cmpsl
fldenv
cmp
rcrb
scas
xor
pop
cmp
lock
fs
xchg
push
out
xchg
test
jb
lret
pop
xor
or
rorl
jne
scas
sbb
enter
inc
fistl
repz
unpcklps
sahf
insb
rol
shrl
pop
lods
lds
xlat
test
jne
aam
cmc
lcall
mov
xlat
enter
cmp
push
or
or
mov
push
mov
data16
adc
dec
jg
es
aas
std
shll
or
gs
jbe
push
cltd
jno
shlb
dec
mov
sub
icebp
or
mov
aas
dec
sub
stc
lcall
out
lods
jb
jge
xchg
xor
icebp
test
sub
popa
xor
les
pushf
enter
sbb
into
outsl
arpl
jb
sub
mov
ret
mov
jg
in
lods
ja
mov
scas
lcall
mov
push
fsubrp
mov
and
add
pop
aam
jno
mov
or
fimuls
jne
sub
push
call
jae
inc
mull
adc
insl
adc
sti
xor
mov
mov
jge
jmp
fnstenv
xchg
jl
jp
adc
mov
jbe
pop
cs
arpl
sub
nop
dec
cmp
or
push
in
mov
insb
push
mov
xor
ret
lock
nop
cmp
mov
jge
call
sub
push
cli
mov
jecxz
es
pop
sub
xor
out
mov
sub
sbb
jae
pop
scas
fwait
lret
out
xchg
sbb
sub
sti
xor
sahf
mov
rcrb
push
mov
icebp
mov
cmp
sahf
cmp
mov
xor
stc
mov
or
dec
mov
add
cmpsl
fwait
cmp
int
sub
aas
pop
fisubrl
mov
push
lret
into
add
addb
aas
sub
sub
inc
les
or
js
mov
inc
cmc
ja
push
cmp
mov
jne
fs
push
popl
popf
adc
out
fcomp
add
jecxz
int
push
mov
sti
push
popa
sahf
adc
cmp
lea
dec
adc
loope
xor
fistpll
adc
cmp
ret
sti
mov
test
lahf
push
adc
out
xchg
and
imul
mov
cmp
into
cmpl
dec
inc
inc
sub
lret
nop
or
outsl
test
mov
je
lret
cmp
push
iret
inc
outsb
fdivl
aam
je
movlps
daa
xor
cmp
pop
popa
push
pop
outsb
cmp
out
inc
jae
in
sbb
out
idivb
rol
adc
xor
mov
jo
fdiv
mov
cmp
and
cmp
jmp
inc
sbb
lret
mov
mov
mov
divb
xchg
mov
mov
and
pop
mov
mov
and
and
pop
mov
sti
ds
mov
cmpsl
pushf
push
outsb
dec
xchg
pop
fidivrl
dec
imul
lods
mov
sbb
mov
adc
mov
adc
dec
mov
test
sub
arpl
lods
stos
xchg
push
imul
mov
xchg
mov
push
imul
ljmp
in
inc
mov
add
push
or
ds
pop
icebp
out
xchg
mov
mov
scas
mov
incb
aam
daa
scas
ret
cmp
add
xchg
addr16
xchg
mov
jle
test
testb
rolb
in
adc
sub
testb
aam
xlat
shll
push
sub
das
test
sub
sub
pop
sub
dec
and
ret
stos
inc
push
insb
stos
xlat
jbe
push
adc
mov
cmp
das
insl
scas
jb
jno
mov
push
sbbl
sbb
cmp
mov
je
dec
and
jbe
xor
scas
mov
jge
mov
inc
ret
loopne
add
mov
push
mov
fwait
test
add
mov
rcrb
movsb
std
insl
sbb
pop
je
sarb
aas
sbb
push
pusha
lret
inc
mov
push
push
inc
xchg
and
roll
add
pop
das
jmp
cltd
add
push
xchg
fwait
stos
pop
cmpsl
mov
repnz
cmp
fld
cld
inc
xor
xchg
push
repnz
jmp
dec
mov
sub
negb
jl
jbe
add
mov
mov
aam
fldt
insb
orl
clc
fnstsw
sub
lock
or
cmpb
push
arpl
aaa
xchg
push
adc
xor
mov
mov
sub
jge
inc
movsl
outsb
scas
inc
sbb
out
out
adc
add
mov
subl
test
add
ss
cmp
mov
jg
adc
add
fdivrs
dec
jbe
or
movsb
sub
iret
fwait
repnz
cs
jge
jp
hlt
int3
cmp
scas
mov
in
or
push
jns
xor
push
data16
sub
jl
push
repnz
pop
xor
bound
fisttpll
mov
cltd
dec
loop
cmp
pmaxsw
rcll
lahf
mov
loop
test
por
xorps
sti
add
mov
mov
sbbl
stc
dec
inc
sarb
cs
cmc
mov
xorl
arpl
mov
push
adc
push
mov
mov
adc
cld
call
enter
mov
xchg
sub
mov
or
nop
fldenv
in
es
lds
shrl
sub
mov
inc
inc
aas
jnp
sub
cmp
sub
push
mov
lret
addl
xchg
jbe
pop
jecxz
pcmpeqd
ja
pop
push
or
add
push
jno
out
test
aas
jp
repnz
mov
decb
outsb
dec
pop
adc
daa
enter
lods
in
add
ret
mov
xchg
in
cltd
into
ret
xchg
xor
mov
rcrb
mov
adc
xor
insl
jge
stos
sub
scas
pop
call
das
xchg
xchg
cmp
dec
mov
inc
sub
mov
pop
stos
push
call
stc
add
in
outsb
mov
sub
fbld
push
adc
ret
mov
mov
int3
xor
out
out
out
les
dec
addr16
adc
filds
imulb
or
pop
cli
mov
shlb
pop
adcl
xor
lret
jb
sub
mov
mov
or
pop
nop
repnz
jae
cmp
sti
pop
and
cmp
xchg
packssdw
mov
add
jno
loop
and
jl
pop
in
inc
cwtl
inc
outsb
dec
sub
insb
in
cmp
xchg
inc
das
daa
pop
inc
add
outsl
add
jb
les
mov
and
in
test
mov
aad
cmpsl
ja
cld
in
ljmp
jnp
add
loop
lods
or
and
sub
test
sbb
shlb
cmp
arpl
jg
mov
or
lea
sub
cmc
cltd
test
imul
cmpsl
lahf
bound
mov
in
imul
lahf
in
rclb
cmpl
or
xchg
insl
pop
mov
cmp
aas
mov
shrl
xor
outsl
popa
jle
stos
cmp
loope
mov
inc
mov
pop
jecxz
xor
jnp
ss
call
ja
sbb
lock
mov
dec
and
cmp
mov
inc
pop
mov
sub
inc
in
mov
ret
idivb
jle
cmp
inc
pop
xchg
or
adc
scas
mov
outsb
je
test
fcomip
imul
scas
movsl
lods
cli
sub
mov
fisttps
fidivl
mov
lea
inc
cmp
hlt
add
xchg
test
sub
hlt
stc
lcall
sti
icebp
jle
jg
nop
pushf
fiadds
cmpsb
adc
ljmp
dec
lock
cmp
pop
push
icebp
or
fisttps
pushf
inc
push
loopne
cmc
addr16
adc
pop
inc
cmp
inc
adc
scas
mov
and
out
mov
stc
pop
icebp
add
xchg
or
in
xor
insb
or
rclb
fists
rorb
jmp
sbb
enter
and
cwtl
mov
shlb
test
inc
add
push
rol
loop
cmc
int3
pop
or
mov
inc
adc
pop
popf
jge
in
pushf
imul
jle
inc
mov
ljmp
adc
ret
fcomp
dec
mov
or
pushf
and
mov
jbe
pop
sub
pushf
leave
lds
nop
pop
call
movsb
imul
fisubrs
lds
sti
dec
pop
iret
xor
xor
divb
mov
jb
jne
sub
ficoml
leave
dec
jmp
shll
cmc
fldt
mov
fsubs
addr16
mov
pop
dec
out
imul
mov
xchg
sbb
sbb
jecxz
repz
lds
repz
dec
inc
loope
mov
jb
sbb
sbb
inc
or
push
adc
adc
js
dec
aad
stos
jg
pop
fcmovne
out
sbb
adc
dec
stos
lahf
mov
jnp
insb
fwait
pop
lea
pop
mov
cmpsb
cmpsb
nop
pop
mov
in
pop
or
in
les
inc
mov
mov
cmpl
pop
lea
xchg
pusha
cmp
mov
xor
int
ss
jo
sbb
sub
jl
mov
sbb
je
or
mov
aam
push
pop
addr16
push
cwtl
pop
imul
fiaddl
icebp
in
cld
xabort
aaa
enter
dec
mov
jne
fidivrs
inc
adc
shr
xor
add
cmpb
in
pusha
mov
std
or
xchg
rcrb
mov
xchg
cld
adc
sbb
int3
leave
loop
pop
addr16
cmp
add
dec
add
push
icebp
test
inc
inc
cmp
jecxz
mov
in
push
lea
clc
jecxz
jno
mov
fnstenv
add
bound
push
imul
jnp
aad
test
and
fcomp
inc
ret
xchg
pushf
mov
mov
addr16
nop
push
adc
jge
xlat
scas
sub
addr16
jp
in
or
aad
imul
sub
jnp
adc
pop
inc
add
xor
cmp
jmp
mov
push
push
jg
and
movsl
jbe
lock
call
ds
xor
xchg
jne
iret
or
cmp
lret
cmp
sub
js
jns
push
pop
dec
fstpt
loop
add
cli
add
cmp
lret
mov
dec
and
adc
dec
in
enter
outsb
adc
out
mov
call
ja
rcl
dec
xor
pop
xor
push
pminub
fsubs
inc
filds
cmp
push
jae
add
daa
cld
pop
iret
mov
inc
adc
enter
inc
inc
ds
rcrl
adc
cmp
dec
dec
aam
gs
jle
imul
mov
mov
in
jb
pop
cltd
or
mov
and
fnstenv
cltd
mov
leave
js
rcr
scas
bound
push
inc
mov
mov
in
insb
icebp
sub
aas
je
mov
iret
pusha
movsb
xor
aaa
test
or
pusha
mov
xchg
fs
jp
jns
pop
js
lods
cmpsb
pop
mov
ret
lods
sbb
and
sub
jmp
lds
jge
sub
cs
mov
test
jp
data16
out
adc
arpl
gs
aad
pushf
into
sbb
dec
cmc
icebp
mov
and
sub
jp
cmpb
imul
lahf
lcallw
divb
jge
stos
mov
insb
mov
daa
add
jg
out
ljmp
lea
push
mov
insl
dec
jle
inc
xchg
test
data16
inc
and
test
dec
sti
cmp
inc
data16
out
loopne
jp
fdivl
push
stos
cmp
je
sbb
shrl
inc
ljmp
xchg
add
dec
mov
and
xchg
das
add
push
popf
pop
cmp
adc
and
mov
lock
std
icebp
nop
push
push
filds
xor
sahf
or
icebp
shll
pushfw
lahf
fildl
aaa
lds
ds
inc
mov
mov
mov
loope
sub
mov
insl
pop
cs
stc
jo
aad
pop
cmpsb
aas
inc
daa
lods
popa
test
sbb
les
jge
lods
xor
cmpsl
shl
adc
sbb
mov
test
xchg
lcall
dec
sbb
or
add
orb
out
negb
lcallw
in
lea
leave
xchg
roll
aas
dec
sbb
int3
stc
and
jns
dec
sbb
mov
bound
pop
bound
push
or
mov
push
hlt
fs
jne
cmp
mov
in
and
gs
call
insl
in
pop
cltd
test
mov
push
push
jmp
sub
mov
dec
sub
dec
into
outsl
push
and
fiaddl
xlat
leave
push
rclb
push
jb
sbb
adc
lret
jnp
jl
mov
add
mov
std
xchg
pop
popa
jecxz
xchg
xor
shrl
or
mov
xchg
test
aad
push
ds
ja
rorl
xor
jmp
xchg
pop
and
imulb
pop
imul
and
fwait
inc
stc
xchg
fisubl
mov
jne
inc
into
push
adc
inc
xchg
jg
sbb
lock
iret
jb
xchg
push
jae
ja
mov
cwtl
test
test
pop
pminub
mov
mov
ljmp
sub
mov
aad
and
jae
xchg
or
into
shl
out
cmc
jl
pop
test
sbb
je
dec
xchg
add
push
shlb
lods
sub
bound
xlat
mov
or
enter
into
lods
inc
jnp
push
cmp
mov
push
mov
loopne
inc
and
in
ret
pop
sub
pop
imul
daa
sbb
js
pop
jne
sub
inc
test
jle
ficompl
iret
jp
ljmp
clc
lods
dec
cmp
mov
mov
pop
out
ficompl
cmp
inc
push
cs
nop
mov
jp
lcall
adc
xchg
fwait
out
stos
roll
xchg
xor
pop
jge
cltd
or
mov
je
xchg
dec
stos
mov
cmc
pop
mov
data16
cli
dec
fisubrs
fwait
jbe
dec
or
or
pushf
dec
mov
dec
out
nop
sbb
lea
sub
fmuls
add
jle,pt
divl
xor
add
inc
jno
sti
enter
add
ret
xchg
cwtl
push
ret
mov
mov
mov
sbb
gs
cmp
jecxz
imul
and
fwait
jae
cmp
xor
mov
pop
xor
imul
jnp
jb
fisubrl
sti
mov
in
in
lea
in
adc
xchg
not
inc
cmp
xchg
inc
sbb
enter
mov
jmp
adc
push
ficomps
xor
out
lahf
insl
inc
mull
adc
and
int
push
clc
jecxz
icebp
fsubp
cmp
cmp
in
push
and
xchg
cmp
jno
cld
lea
lret
pop
scas
sub
cmpsb
pop
in
add
xchg
rcrl
aam
ljmp
loope
or
fiadds
cmpsb
pop
xchg
cwtl
push
popf
lods
out
in
pop
or
mov
in
xchg
inc
into
pop
test
sahf
sbb
cmc
sahf
enter
test
dec
jg
iret
cs
xchg
insb
inc
cmc
fwait
ret
stc
in
stos
inc
sbb
outsb
je
aad
out
aam
inc
das
and
repz
cmp
cld
and
testb
fsubl
mov
jb
clc
sub
sbb
push
ficoml
lea
jnp
inc
cmp
mov
xlat
push
mov
in
addl
cmpsl
movsl
sbb
iret
cld
dec
xchg
outsb
push
cmc
mov
test
data16
shrb
mov
fcoml
dec
insl
cmpsb
cmp
jns
pop
mov
ret
loope
mov
jb
mov
push
inc
cmpsb
mov
pop
popa
bound
mov
jmp
movsb
sbb
and
lret
les
xchg
adc
and
lods
xor
test
cmpsl
jl
mov
pop
cwtl
or
loopne
adc
sbb
icebp
jno
push
js
push
xchg
cmp
mov
jae
scas
cmp
xchg
in
adc
aad
sub
and
jb
mov
cmp
cmp
lret
bound
or
es
ret
mov
dec
test
fnsave
xlat
adcl
push
xchg
push
mov
mov
mov
inc
into
xor
inc
stos
pusha
ss
xchg
out
xchg
push
xchg
popf
xchg
dec
add
xor
pop
bound
int
push
jb
incl
test
inc
xchg
in
dec
ret
cs
mov
out
leave
xor
sbb
les
mov
fidivs
mov
fidivl
pop
test
call
testb
mov
lcall
js
dec
dec
dec
pop
lret
mov
ljmp
in
pushf
int
adc
adc
mov
pusha
jae
lret
xchg
outsb
dec
leave
iret
mov
inc
jno
fadds
or
stos
mov
mov
push
leave
and
inc
mov
sbb
out
sub
cmp
push
add
add
mov
repnz
daa
sbb
std
gs
inc
daa
dec
dec
sti
sbb
adc
cmp
push
push
data16
cmp
xchg
push
jnp
push
sbb
iret
and
add
jns
pop
jne
popa
test
icebp
dec
pop
adcb
and
xchg
out
rorb
xor
adc
jae
adc
idivb
add
movsb
push
mov
inc
flds
mov
xchg
and
push
pushf
imul
cmp
ds
mov
fisttps
icebp
sub
imul
psubb
xchg
loop
jbe
aad
cmpsb
outsb
adc
test
sbb
into
xchg
out
sbb
aam
daa
xchg
push
decl
pop
loope
inc
pop
popf
xchg
xchg
xor
rcll
mov
mov
loope
mov
dec
pop
mov
xchg
nop
xchg
xor
sub
sahf
mov
jmp
fcmovne
clc
data16
mov
popf
or
sahf
push
in
add
cmp
aad
outsb
hlt
xor
or
mov
mov
pop
int3
stos
adc
icebp
int
ret
stos
and
mov
sub
cltd
mov
std
xchg
jmp
lods
and
daa
frstpm(287
mov
inc
pop
cli
cmpsb
fidivs
mov
adc
xchg
xor
test
inc
lods
dec
movsb
in
std
scas
inc
inc
dec
fs
aad
jb,pt
mov
mov
or
dec
mov
insb
pushf
lahf
adc
xorl
mov
out
es
xchg
fwait
or
ss
jle
lcall
out
stc
repz
jbe
cld
jp
divl
adc
repnz
add
push
add
dec
sbb
rcl
xchg
int3
lea
push
push
mov
inc
xrelease
sbb
cwtl
cmpsl
daa
and
sub
pushf
jns
loope
dec
xor
addr16
sarb
xchg
jmp
rolb
aam
xlat
test
cmpsl
aaa
sbb
jl
sub
mov
jb
icebp
xor
push
daa
jle
ljmp
cwtl
add
push
mov
dec
ja
mov
ja
aad
sub
clc
pop
js
pop
mull
popa
xor
cmpl
loopne
xorl
arpl
aas
jle
inc
scas
mov
mov
pop
jle
xchg
push
push
mov
push
jecxz
push
imul
outsb
fsubrl
sub
jmp
sbb
mov
or
push
inc
outsl
cld
pop
bound
mov
pop
pop
xlat
fcomps
push
fildl
xor
sub
cmp
popl
nop
sbb
adc
sub
imul
jnp
arpl
jge
pop
ja
dec
mov
push
imul
addb
mov
push
cli
xchg
and
cmc
adc
nop
fsubr
jp
add
xor
jge
lcall
cmp
mov
and
fs
mov
cli
pop
dec
jmp
push
sub
aad
jmp
sbb
divl
push
sub
sbb
out
jae
jb
push
inc
cwtl
test
jecxz
cmpsl
shll
jnp
xchg
sysexit
fwait
jbe
mov
sbb
mov
or
or
mov
cmp
sbb
in
cwtl
cmpsb
imul
call
xchg
out
and
arpl
mov
imul
enter
inc
mov
push
sbb
or
call
daa
ja
cltd
xchg
sub
stc
cmp
sahf
and
andb
cmp
push
bound
stc
pop
jb
pop
xor
nop
inc
mov
push
imul
adc
popf
push
mov
imul
pop
loopne
mov
mov
pop
jae
sub
adc
test
cmp
mov
pop
push
jae
adc
sbb
or
inc
sbb
xchg
mov
mov
lock
ret
pop
jns
mov
lds
popl
test
shll
sahf
push
les
gs
fmuls
stos
test
dec
adc
mov
movsb
jo
add
lea
inc
scas
sub
mov
das
push
add
negl
daa
push
or
push
in
mov
jbe
outsb
sbb
cmpsl
adc
push
or
push
jg
cli
out
xchg
fsub
nop
xor
bound
jge
mov
pop
insl
aaa
aad
push
insb
dec
pop
scas
les
adc
aaa
iret
pushf
push
arpl
repnz
sub
sbb
imul
push
xchg
aad
mov
sbb
jne
sahf
sub
sbb
dec
push
loopne
icebp
les
mov
or
testl
push
dec
or
dec
sbbb
mov
mov
mov
scas
jmp
mov
scas
daa
dec
out
out
add
test
cmc
stos
pop
cmp
das
mov
pop
imul
inc
mov
in
sub
mov
push
cmp
insl
sub
jae
lea
arpl
shl
jns
je
inc
hlt
test
fisubrl
stc
jb
xchg
insl
dec
aas
pop
aad
imul
sbb
lahf
or
cli
pushf
push
vpmulhuw
and
pusha
or
sub
inc
inc
arpl
aas
ret
dec
xor
dec
mov
dec
lret
mov
fwait
popf
jnp
inc
cwtl
stos
mov
jb
add
jae
nop
or
pop
inc
jae
in
stc
test
stos
pop
fsubr
ss
loopne
mov
inc
mov
mov
das
inc
lds
fs
icebp
mov
inc
mov
jbe
in
mov
pop
inc
fcomip
testb
fwait
mov
fdivrs
aaa
in
push
mov
test
daa
sub
mov
ljmp
out
mov
sub
inc
mov
add
in
inc
bound
cmp
sub
jmp
add
dec
popa
jle
push
cmp
mov
cmc
cmp
pop
xlat
in
into
es
cmp
sarb
inc
mov
jg
fisttps
inc
push
sub
and
push
test
out
sahf
fwait
mov
inc
mov
mov
add
lods
pop
cmp
cld
fists
clc
sub
test
aaa
loope
test
aad
jmp
or
test
rol
xor
gs
push
xor
jo
out
aad
pusha
fs
pop
aad
roll
xchg
lock
add
push
sahf
push
les
pop
pushf
pushl
adc
loopne
gs
or
xor
stc
mov
inc
fidivrs
cmpsb
lret
imul
bound
inc
jecxz
das
cli
push
inc
or
push
aad
out
jge
push
dec
jb
flds
pop
and
repz
mov
push
das
sbb
cmp
mov
dec
xchg
add
sub
cli
leave
push
push
fldt
add
imul
sub
mov
pushf
mov
pushf
pop
fidivs
ret
sub
cwtl
pop
mov
adc
out
in
pop
es
movsb
fsubp
decb
int
popa
jge
imul
mov
inc
add
xchg
xchg
add
fldl2e
xchg
jae
jne
int
fwait
xor
jl
adc
cld
dec
rep
data16
xchg
out
inc
js
sar
roll
insl
repz
mov
fwait
add
jmp
pop
mov
add
xor
test
sahf
sbb
adc
mov
xor
mov
lret
xchg
jb
xchg
push
pop
xchg
xor
leave
inc
push
scas
xchg
imul
fsubrp
pop
stc
fcmovne
xchg
test
jo
scas
fnstenv
int
jb
push
pop
push
xor
lahf
xor
or
mov
addr16
adc
jno
jo
mov
scas
mov
mov
fs
lahf
add
mov
mov
lcall
and
aas
clc
xor
mov
in
pop
loop
movhps
add
sub
mov
pop
sahf
repnz
sarb
andb
dec
rolb
rcll
outsl
mov
dec
and
sbb
shl
dec
cmp
xor
inc
stos
mov
xor
jl
push
dec
aam
pop
inc
inc
pop
pusha
jg
call
rcrl
push
jbe
mov
or
mov
xchg
sub
roll
add
pop
and
stos
mov
mov
push
pushw
dec
movsl
arpl
test
pop
insb
andl
into
cmpsb
call
mov
inc
adc
dec
imul
jbe
dec
cmpsb
mov
dec
ret
fldl
mov
cmp
sbb
jo
gs
mov
repz
mov
cmp
xor
jle
push
inc
mov
subl
pop
adcl
and
jb
inc
hlt
icebp
jnp
push
mov
movsb
fcompl
loop
outsb
lock
push
adc
jae
xor
inc
insl
mov
stos
imul
mov
out
sbb
cmp
test
or
mov
subl
or
push
insb
pop
push
repz
cmp
sub
test
and
xor
dec
push
jp,pt
cmp
pusha
scas
push
es
notb
jmp
mov
inc
adc
xchg
jmp
jecxz
data16
sub
cmpsb
cld
pop
cmp
pop
jns
ss
dec
jmp
xchg
inc
xchg
test
dec
fldl
cmp
imul
xchg
jae
call
push
inc
lods
enter
lock
xchg
ss
jno
hlt
std
test
scas
call
adc
push
adc
sahf
insb
inc
pop
sbb
pop
jae
or
sub
mov
mov
sbb
and
in
jne
and
push
or
mov
scas
mov
pusha
mov
test
ficomps
mov
jmp
js
dec
xchg
cmc
or
mov
dec
mov
repnz
enter
and
sbb
fs
subb
adc
push
cmp
in
dec
cmpb
data16
jmp
push
adc
dec
aaa
mov
push
inc
sbb
popf
sub
in
ljmp
and
int
into
filds
mov
es
inc
dec
xchg
mov
sub
pop
pop
arpl
ljmp
bound
jb
in
pop
insl
cmp
push
mov
imul
xchg
lahf
and
aas
in
dec
push
mov
sub
das
mov
fwait
push
sar
cs
stos
sti
sub
inc
std
into
enter
insl
or
incl
jnp
sub
mov
data16
add
mov
inc
outsl
ret
sbb
fiadds
lods
mov
xor
out
sti
pop
fcompl
iret
pop
cmpsl
jg
push
int3
jns
sahf
fidivs
push
pop
rcrb
movsb
jge
movsl
pop
les
xor
mov
movsb
sub
sub
stc
cmc
or
inc
cmovp
push
jle
pop
jecxz
pop
outsb
bound
add
mov
lahf
addr16
xchg
add
mov
xchg
fwait
and
ret
aas
push
clc
mov
roll
jae
lds
sbb
sub
adc
in
loop
or
adc
mov
out
imul
mov
into
pop
cmpsl
addr16
or
test
cmp
int3
xor
pop
nop
sub
sbb
jg
jmp
dec
jnp
test
and
movsl
or
lods
inc
cmp
insl
mov
add
xchg
faddl
loop
jnp
lcall
dec
cmp
push
testb
push
jl
xchg
pop
cwtl
in
push
pop
es
pop
mov
adc
fstpt
loop,pn
jp
jmp
jl
mov
sar
jns
sbb
pop
add
cs
into
mov
pop
mov
stc
sub
lock
push
std
mov
mov
push
jecxz
jecxz
cmp
mov
sbb
clc
jae
in
mov
xor
xchg
push
into
and
dec
pusha
fs
bound
lea
into
cltd
xchg
xchg
add
or
test
arpl
shrb
cmp
adc
insl
xchg
jecxz
stc
lahf
pusha
xchg
push
out
xchg
mov
push
clc
enter
out
mov
ljmp
mov
sarl
sub
lock
ja
xchg
mov
and
adc
xchg
nop
mov
out
inc
adcl
popa
es
mov
push
loop
mov
push
repz
cld
jg,pn
push
xor
jl
hlt
out
sahf
ffree
adc
shl
mov
popl
pop
xor
cmp
xchg
js
stos
outsb
pop
inc
cli
dec
ret
jge
mov
mov
clc
cmpsb
inc
out
ljmp
adc
jnp
repz
fisttps
aam
ja
subb
test
sub
add
mov
dec
push
adc
mov
fisubrl
xchg
jo
mov
rcll
arpl
test
cmp
adc
jo
gs
pop
xor
lods
pop
test
into
aas
jl
imul
mov
mov
push
data16
cmp
sti
clc
aas
xchg
ret
test
add
pusha
je
stc
fsubl
push
sbb
jle
and
addr16
xor
outsl
loopne
pop
inc
pushf
mov
dec
xchg
adc
aaa
loop
ljmp
and
xor
les
push
xchg
jne
and
lds
jmp
mov
sbb
pop
and
inc
mov
js
xchg
jle
popf
xchg
mov
lds
cs
rorl
push
or
fidivs
add
sub
popa
ret
mov
adc
mov
cmp
cli
hlt
hlt
mov
sbb
sbb
int
mov
adc
pop
adcb
adc
or
xor
fs
adc
cmpsb
in
cltd
dec
movsb
cmc
test
cltd
sub
sti
pop
pop
cmp
mov
xchg
xor
fwait
sbb
inc
js
orl
push
in
jmp
pushf
cld
mov
xorb
and
or
movsb
inc
loop
dec
data16
jg,pn
sub
in
sub
test
pop
inc
decb
jno
lods
mulb
sub
in
push
lret
mov
fsubl
popa
jne
xchg
repnz
sub
sbb
subb
roll
in
or
add
hlt
sbb
in
inc
push
push
jle
push
mov
push
addl
sub
pop
std
into
pop
repz
cmpsl
adc
frstor
dec
xor
mov
in
int3
enter
mov
pop
jno
lret
cmpsb
clc
sub
xchg
sbb
ss
jge
mov
lock
add
add
dec
fnstcw
jno
imul
mov
add
and
cltd
mov
xchg
xchg
push
in
adc
or
clc
jb
add
int
dec
pushf
push
sub
movsb
ret
jmp
push
push
adc
mov
out
clc
insb
sahf
pop
fnstenv
popa
shlb
out
jno
xor
faddp
jne
mov
cmp
xor
fnstenv
xchg
push
lds
pop
fwait
inc
sub
iret
xor
adcb
ret
or
mov
jmp
jmp
popf
mov
push
fildl
mov
int3
fld
outsb
cwtl
sahf
into
jg
adc
lret
push
mov
repnz
fcompl
leave
ds
xchg
xchg
lahf
push
pop
xchg
sbb
fcoms
lcall
mov
sahf
hlt
and
add
repz
cmp
or
mov
pop
mov
xor
push
les
sub
cld
scas
jmp
dec
into
xchg
fsts
cmp
clc
xorl
push
stos
cmp
cmp
xchg
cmp
into
inc
outsb
xor
into
movsb
in
test
inc
repz
in
stc
stc
in
out
inc
cmp
int
repnz
cmp
xorb
dec
mov
pop
sub
jle
inc
push
jnp
pop
popl
adcb
fadds
xor
loope
jl
setbe
pushf
out
std
aam
repz
adc
outsb
jne
sbb
mov
sbb
cmp
sub
inc
push
rcrl
mov
test
iret
or
and
test
cmp
xor
and
int3
jo
filds
aam
stos
xchg
mov
fs
daa
rclb
add
ret
out
sub
ja
cmpl
shlb
mov
jnp
mov
movsb
push
and
nop
mov
and
cmp
bound
mov
daa
scas
jbe
and
adc
mov
je
lods
mov
mov
mov
mov
mov
in
aaa
scas
pop
inc
ret
lret
popf
add
mov
add
outsb
lds
jae
xor
sub
adcl
fdivrs
inc
stos
cltd
aas
push
add
push
mov
out
cltd
ss
mov
pop
mov
mov
fs
pop
adc
push
js
dec
pop
mov
out
in
pushf
sbb
loope
rorl
mov
add
push
stos
test
div
xchg
insb
mov
adc
mov
outsb
cmpsl
int
pmulhw
push
jl
jo
pop
mov
adc
lahf
inc
mov
lods
add
jge
push
add
mov
dec
sbb
mov
xor
add
sub
dec
or
jo
stos
int
jge
sbb
sub
daa
iret
cmp
push
sbbb
js
or
or
fidivrs
loop
mov
lret
xor
dec
lcall
pop
mov
stos
scas
pop
ja
rorl
inc
pusha
push
xchg
mov
push
add
and
das
cmc
jp
pop
push
int
mov
aaa
add
out
mov
clc
sub
inc
or
sub
bound
rolb
xor
and
pop
xor
movsl
out
xlat
in
cmpl
ljmp
cmp
xlat
stc
hlt
aad
mov
mov
insl
lods
jbe
stos
sahf
mov
jl
fs
stc
and
out
rcrb
mov
lds
mov
rcll
das
mov
addr16
int3
adc
adc
xchg
jno
mov
hlt
das
pop
cltd
sarb
cmp
mov
ds
adc
adc
jbe
push
mov
adc
push
sbb
cli
mov
nop
mov
std
aaa
or
inc
xchg
pop
jl
das
mov
fsubrp
mov
out
lahf
ret
loope
mov
inc
cmp
std
ss
dec
outsb
push
lcall
es
inc
cltd
arpl
mull
es
or
cltd
rcrb
mov
loope
xchg
jo
shrb
xor
mov
and
outsl
push
pop
into
in
mov
insb
sub
dec
pop
addr16
cs
jbe
add
insl
rolb
jmp
push
pop
cmp
push
loope
sbb
icebp
in
adcl
push
mov
out
cmpsl
dec
lret
mov
scas
xchg
dec
pop
sbbl
dec
push
mov
out
push
ret
mov
fstl
pop
inc
sbb
shl
pop
and
shl
daa
fidivrs
mov
push
inc
jae
shlb
rol
sub
incb
cmp
jle,pn
inc
pop
scas
push
outsb
movsb
cmp
xor
fcoms
popf
mov
sbb
icebp
aas
aad
dec
add
mov
cmp
ret
dec
int
inc
xchg
push
je
xchg
adc
add
push
cmpsl
adc
xor
push
out
fstpt
repz
xlat
and
jne
and
inc
movsb
fidivrl
pop
lods
cli
xchg
mov
int
mov
xor
test
notl
sub
mov
cmpsb
rorl
aas
pop
pop
and
or
inc
push
xor
movsb
xchg
ja
add
mov
mov
imul
jecxz
out
int3
cmp
cmp
xor
cltd
xor
inc
cli
in
jbe
icebp
das
mov
sub
inc
out
leave
mov
add
pop
insl
movsb
fwait
or
popf
cmp
cmp
fs
icebp
push
movsb
push
cld
and
in
les
test
jne
out
out
test
cmpsl
or
int
add
jno
rcrb
sbb
mov
mov
add
fisttpl
sub
cmp
rcrb
lods
leave
jnp
mov
add
ret
pop
pop
sti
add
dec
sbbb
sbb
scas
sbb
push
rolb
push
sti
dec
enter
jb
jg
jbe
test
setne
mov
scas
xorb
sbb
xchg
pop
mov
mov
lcall
mov
jo
insl
push
cmp
cld
inc
in
aad
add
cmp
adc
sti
sbb
cmp
fcompl
les
sbb
imul
test
adc
jl
mov
ljmp
pop
cltd
or
cmp
int
test
inc
jbe
jg
sbb
inc
out
out
incl
pop
movsb
mov
push
xchg
jae
leave
lcall
shrl
mov
aas
inc
cwtl
cmp
lar
xchg
rolb
shrb
insb
pop
test
pop
xlat
sbb
mov
insb
push
testl
mov
aas
or
leave
and
fisubl
push
fadds
les
clc
adcl
sub
xlat
test
cli
jp
and
xchg
aaa
popf
push
test
call
aam
cmp
faddl
lds
lea
mov
xchg
push
xchg
mov
and
dec
xorb
xchg
pop
cmp
add
outsl
xlat
and
push
aam
pop
inc
dec
mov
add
into
xchg
addb
push
xor
mov
xlat
mov
mov
je
clc
pop
or
cmp
fnsave
adc
push
mov
and
frstor
or
add
or
xchg
or
mov
jmp
ret
inc
xchg
or
mov
push
inc
cltd
lods
jne
mov
fldcw
dec
mov
outsb
fwait
ret
lock
push
das
icebp
sub
imul
cmp
inc
mov
inc
mov
inc
dec
sbb
dec
cmpb
jns
in
lcall
sub
gs
sub
mov
pusha
add
fsubs
or
sub
pop
add
push
fbstp
adc
jmp
jbe
rcll
xchg
loop
add
sbb
dec
out
mov
fwait
xor
ds
fisubrs
rorb
push
cs
add
mov
and
mov
test
mov
jbe
lods
gs
pop
fisttps
sub
lock
jmp
mov
or
inc
stos
mov
fs
mov
adc
jge
mov
insb
ficoms
inc
jne
shll
inc
add
sub
jae
dec
jo
mov
inc
xor
mov
dec
rep
fld
addr16
out
lret
and
push
imul
fldt
jmp
imull
or
out
cmpsl
or
repnz
popl
pop
cmpsb
push
sti
and
xor
mov
inc
incb
push
cs
mov
nop
inc
leave
jnp
gs
fsubrl
lds
mov
cs
xchg
mov
in
ss
mov
data16
out
stc
insb
negb
pop
ljmp
lret
inc
repz
fisubs
or
or
mov
mov
imul
call
cmp
loopne
cmp
repz
popf
cmp
jnp
pushf
cmp
cli
pop
repz
ds
imul
lods
push
fistps
adc
cmp
fmuls
mov
sbb
pop
mov
bound
leave
shrl
call
jbe
sahf
jo
lahf
mov
cmp
cwtl
rorb
sub
jle
jne
fucom
cmpsb
pop
push
adc
sbb
add
inc
xor
sbb
daa
cmp
xchg
cli
hlt
jle
xchg
xchg
aaa
je
adc
insb
movsl
push
insl
test
cmpsl
vmovntps
and
sarb
jmp
add
inc
cli
xchg
xchg
inc
inc
mov
pusha
neg
pop
lcall
repnz
inc
stc
xchg
push
add
rcr
dec
aas
pop
cmp
add
hlt
in
idivb
inc
les
mov
std
dec
std
pop
inc
pop
jae
mov
xor
jnp
pop
hlt
stc
jbe
inc
jb
adc
data16
pop
bts
rcrb
jmp
enter
pop
jmp
xchg
movsl
jg
or
cmpsl
dec
xchg
xor
dec
lock
xlat
inc
imul
stc
jmp
push
add
rclb
sbb
and
sub
nop
push
scas
xor
jnp
je
mov
es
sti
inc
push
fmulp
jnp
cmpl
movsl
cltd
push
mov
mov
lods
aad
int3
negb
or
movsl
pop
dec
dec
sbb
xor
loopne,pt
sar
or
cmp
shlb
xor
inc
jns
mov
cmpl
push
xchg
or
inc
icebp
inc
xchg
fs
xchg
pop
jnp
or
sar
adc
xor
imul
adc
cld
int3
ss
lret
movsb
sbb
lret
cmp
jg
popa
nop
jb
sbb
add
sti
clc
lahf
mov
xchg
push
out
into
jnp
sbb
inc
jb
add
jp
mov
fstpt
out
stos
inc
pop
xor
imul
setb
mov
xor
enter
insb
cmpsl
nop
dec
cwtl
mov
xlat
adc
addl
inc
imul
aaa
jbe
mov
cmp
jb
test
addl
cmp
xchg
outsb
xchg
cmpsb
repnz
lret
jno
ja
jns
pop
sbb
int
mov
pushf
xlat
jb
mov
xchg
and
pop
iret
ret
scas
mov
inc
daa
sub
mov
mov
call
in
mov
mov
dec
rclb
jne
jge
and
and
push
in
adc
into
xchg
xchg
jmp
push
into
jo
sub
or
cli
adc
inc
add
adc
jae
cmp
dec
xor
testl
xchg
and
push
insl
adc
pop
iret
les
ret
js
jnp
add
outsb
movsb
xorl
aam
in
add
hlt
jno
std
xchg
jae
xlat
cmp
mov
mov
mov
mov
mov
jge
sbb
and
xchg
nop
jns
xchg
jge
lods
fbld
add
imul
faddp
pop
mov
xor
arpl
clc
pop
popa
test
dec
fstps
add
xchg
mov
leave
shll
test
jns
push
adc
test
in
push
xchg
mov
fcmovnb
out
mov
dec
xchg
adc
or
xlat
fstpl
jno
xchg
inc
rcl
jns
jp
int
push
add
xor
jle
pop
inc
idivb
fisttpl
push
into
and
push
fmuls
and
pop
shl
dec
sbb
aaa
rclb
add
cmp
xchg
and
cs
loopne
lds
and
lahf
sahf
pop
mov
ror
push
xor
cli
fstpt
fwait
test
cltd
xchg
nop
xor
mov
dec
mov
jge
ja
sub
mov
mov
test
jo
add
mov
hlt
sbb
jp
dec
inc
shr
mov
ficoms
adc
xchg
lret
sub
into
and
fistps
mov
pop
cmp
lods
icebp
mov
fs
add
sti
gs
sbb
or
call
xchg
adc
mov
loop
es
lods
fldt
and
adc
pop
xchg
ret
add
mov
mov
cwtl
add
xchg
push
inc
repnz
notb
ljmp
inc
int3
push
stos
cmp
jnp
cmp
in
sbb
test
outsl
sti
daa
xchg
mov
adc
inc
pushf
fwait
pop
fs
popf
inc
jae
arpl
mov
mov
data16
jecxz
cltd
sbb
jge
aas
iret
sbb
jmp
xchg
jno
inc
push
mov
xor
ficomps
aas
cmp
imul
push
loop
cmp
mov
jecxz
cwtl
scas
dec
xor
leave
jno
sub
mov
pop
dec
rorl
mov
sub
stos
je
in
pop
pop
in
dec
push
daa
inc
fiaddl
cmp
xchg
cld
fsubs
in
mov
xchg
and
in
mov
xchg
pop
fwait
xchg
js
inc
add
jns
jb
adc
imul
repz
cmp
int3
sti
xor
js
sub
orl
shrb
cmpsb
jmp
loop
xchg
sti
mov
add
pop
mov
xchg
and
dec
xlat
dec
cmpsb
mov
or
mov
or
ret
sbb
mov
mov
vmovdqu
dec
xor
aas
fistps
pusha
in
arpl
push
xchg
inc
loop
adc
push
mov
pop
jne
inc
movsb
or
cmp
jmp
nop
rclb
push
sarl
leave
xor
mov
pusha
sti
jle
lods
push
jo
xlat
adc
std
gs
cmp
xchg
nop
js
loop
test
xlat
sub
adc
push
jno
xor
addr16
jecxz
mov
dec
imul
mov
test
sbb
nop
mov
jbe
xor
ljmp
repnz
mov
mov
idivb
aaa
rorl
push
es
jnp
and
leave
push
xor
je
jle
dec
dec
inc
mov
jle
cmp
les
sbb
pop
es
inc
push
test
mov
pusha
icebp
and
adcl
dec
mov
mov
xor
fdivrl
rorb
ror
out
or
push
mov
adc
pop
fsubr
inc
push
pop
in
popa
sbb
insb
js
sub
rclb
addl
pop
pop
testl
testl
out
mov
data16
hlt
mov
jbe
pop
mov
pusha
mov
aad
lcall
test
fildll
enter
shl
cwtl
pop
scas
lret
test
mov
movsb
lods
icebp
rorl
push
or
jno
dec
in
jne
push
push
pusha
enter
push
imul
shll
call
jo
jl
inc
loope
pop
adc
jne
and
adc
jbe
jle
xchg
imull
dec
pop
std
cwtl
pushf
cmpb
push
sbb
dec
pop
cmp
xor
cmp
push
xor
cmp
pop
imul
lret
or
mov
push
xchg
rcrb
adc
add
push
dec
jg
sub
fwait
ret
sbb
mov
nop
mov
in
sbb
push
xchg
test
fsubr
movsb
or
test
idivl
pop
sbbl
pop
sub
pop
pushf
and
add
add
ljmp
popf
or
mov
mov
fldenv
inc
push
pop
cltd
jl
dec
push
mov
push
push
fimuls
ret
mov
xor
out
sahf
stos
pop
mov
sbb
jns
add
popf
mov
lcall
xchg
cmp
add
rclb
scas
mov
pop
or
jmp
js
es
lret
mov
or
inc
filds
popf
test
cmp
scas
fimuls
and
ja
stos
or
leave
scas
cld
shl
in
dec
or
cmp
insl
sbb
sbb
popa
out
sub
fnstsw
mov
insl
cltd
sub
push
icebp
iret
sub
and
out
xor
lcall
dec
pop
cmp
loop
vmulpd
jns
loop
mov
sbb
leave
add
cltd
dec
jmp
jmp
arpl
repz
lds
cltd
xor
pop
das
inc
bswap
rcl
sahf
xchg
lcall
aam
jbe
data16
dec
mov
loopne
movsb
das
mov
ret
dec
add
mov
inc
cmp
outsb
ret
out
ret
inc
mov
ja
inc
mov
arpl
into
shll
mov
jnp
fcoms
mov
nop
push
int
and
test
cmp
cmc
mov
mov
jo
lahf
mov
sub
in
ja
popl
cmp
mov
jbe
lods
xchg
popf
fadds
xchg
pop
ds
ds
or
rcrb
add
push
movsb
add
je
ret
aaa
shrl
and
mov
adc
insb
jns
push
and
jge
popf
andl
cs
xor
das
adc
inc
test
xchg
cmp
rcll
ljmp
in
mov
xchg
cs
inc
and
shrb
sbb
jge
in
int3
cmc
mov
cmpsl
sbb
xchg
mov
mov
rorb
scas
int
popa
fcomps
pushf
jp
cltd
xchg
andl
xor
scas
ss
in
outsl
cwtl
pop
rorb
dec
xchg
les
fnsave
mov
repnz
popa
dec
es
fneni(8087
sarl
in
and
add
add
adc
xor
dec
lods
test
cmp
icebp
clc
lock
adc
push
aam
adc
jecxz
cltd
mov
jae
out
fnstsw
lods
lcall
mov
mov
sarl
mov
mov
jp
cmp
sbb
sbb
xor
jecxz
push
daa
xchg
and
imul
xor
sbb
jno
ret
sar
cs
loop
adc
cmp
xchg
add
jp
out
inc
lret
and
adc
push
xor
adc
fcmovbe
adc
lcall
dec
adc
jecxz
jb
xor
mov
fistl
or
xchg
mov
inc
jl
cmp
outsl
loopne
pusha
into
shrl
cmp
jg
pop
xor
pusha
inc
xor
sarb
mov
lods
inc
dec
add
aaa
std
insb
cmp
jb
mov
hlt
pusha
dec
or
iret
mov
inc
mov
push
call
adc
nop
mov
mov
arpl
iret
xchg
clc
pushf
mov
dec
and
icebp
gs
in
sti
dec
push
loop
pop
adc
icebp
adc
jns
or
push
insl
add
dec
imul
sbb
xor
lea
cmp
dec
push
xchg
daa
and
mov
and
or
xor
shl
lret
mov
jle
cmp
pop
out
add
aaa
sbb
mov
adc
out
sarb
jo
shrb
jno
shr
and
inc
ja
imul
lret
add
adc
orl
adc
gs
mov
movsb
popa
out
push
mov
xchg
lods
lret
roll
cmp
sbb
imul
sub
jecxz
data16
mov
adc
ret
pop
xor
xchg
dec
push
mov
adc
sub
rcrl
cs
mov
sar
and
fildll
movsb
test
pop
fsts
pop
iret
addr16
push
je
push
loope
sbb
mov
jp
cmp
fiaddl
inc
pusha
add
aas
imul
loop
adc
popl
imul
or
jecxz
cmpsl
ja
adc
cmp
mov
cld
xchg
sbb
stc
dec
cmp
scas
aad
cmc
mov
lcall
test
xchg
shll
mov
xorl
fs
cli
daa
inc
cmc
add
jae
lea
cltd
xor
dec
jge
push
push
in
daa
mov
sub
cmpl
cmovbe
js
stc
xor
jne
mov
xor
cmp
or
and
jg
cli
jl
dec
dec
mov
ja
incl
lret
mov
sbb
pop
pop
fsubrs
pop
fildll
shl
lods
test
push
cmc
cmpl
je
push
shlb
cmp
fcmovnb
outsl
jge
pop
test
js
js
mov
popa
out
fcoms
daa
scas
cmpsb
sub
and
outsb
int
mov
pop
add
lea
xchg
int3
xchg
push
inc
push
xor
or
lea
sub
dec
js
mov
test
add
mov
cmp
jae
loop
xor
jae
pop
nop
pop
pop
push
mov
rcl
cli
ljmp
jb
lret
fildl
or
loopne
addr16
mov
push
lcall
mov
or
test
popf
mov
sahf
rcll
hlt
fcmovne
aaa
in
or
imul
push
add
les
cmp
or
sbb
pushfw
mov
or
fidivrs
sub
or
inc
pop
shlb
mov
dec
test
repnz
out
or
add
pop
push
gs
lcallw
push
int3
outsl
sub
mov
lods
arpl
xchg
sbb
lock
cmc
int
pop
mov
mov
xor
dec
mov
cmp
sbb
out
mov
cld
dec
cld
mov
cmpsb
dec
mov
jge
aas
or
outsl
out
cmpsb
mov
fstl
lcall
add
add
add
repz
pop
stos
jg
jle
pop
lahf
mov
mov
rolb
xor
stos
sub
sbbb
cs
pop
ds
mov
fs
fbld
push
ljmp
out
inc
icebp
push
jg
imul
mov
sub
xchg
mov
cmp
aas
push
mov
push
sbb
lret
adc
or
jg
and
jle
insl
xchg
mov
mov
andb
out
in
scas
vandps
inc
mov
push
test
leave
and
insl
jno
or
mov
inc
adc
jae
imul
and
fildll
or
mov
pop
mov
pop
xchg
sti
iret
sub
xchg
les
das
call
mov
jnp
inc
inc
mov
add
test
jge
lahf
mov
clc
insl
sub
xchg
fistpl
test
out
push
rcrl
or
int3
outsl
mov
sbb
cmp
hlt
rorb
mov
daa
sub
and
hlt
icebp
inc
or
fimull
fstpt
test
pusha
inc
cs
xchg
jb
cmp
lods
call
jp
int
pop
lea
test
jb
test
jb
stc
sbb
mov
mov
sbb
dec
cmp
outsl
pop
std
data16
xor
out
adcl
pop
ljmp
iret
neg
fucomi
sbb
jne
mov
adc
outsb
mov
fists
inc
push
sub
mov
bound
inc
addb
incb
fsubrl
jle
pop
mov
std
or
jnp
rcrb
lret
arpl
add
jg
mov
xor
out
inc
jmp
fisubrs
xor
enter
iret
pop
rclb
mov
or
test
aad
add
pop
jnp
or
fldl
addr16
pop
mov
test
pop
inc
mov
xchg
and
xchg
rcr
loop
int3
jge
or
adc
dec
dec
add
xor
lods
sub
jg
orl
gs
inc
add
xor
cmp
je
into
ficomps
cmpsl
xor
sub
das
jns
dec
add
test
test
das
mov
and
jo
mov
aam
iret
cmp
mov
ficoms
push
mov
mov
clc
in
insb
xlat
mov
je
es
xor
jnp
and
and
hlt
xor
pushf
movsb
lods
xor
jle
aad
das
das
push
stos
mov
pop
daa
movsb
inc
int
or
jl
adc
push
mov
lods
setbe
jecxz
leave
add
xchg
sbbl
and
xlat
or
shll
lock
xor
lea
xchg
mov
int
data16
xor
lock
add
dec
lock
lret
jge
cmp
xchg
lcall
test
xchg
pusha
out
mov
inc
fwait
mov
xor
cld
dec
sub
adc
mov
mov
jnp
xor
and
les
pushf
ljmp
jb
xchg
into
push
rclb
push
dec
ret
push
dec
mov
les
jno
jmp
out
mov
aad
mov
pop
out
ss
mov
dec
or
lahf
jb
xchg
sbb
mov
bound
push
xor
push
add
xchg
jae
jmp
out
adc
cmp
addl
sbb
xchg
jnp
roll
pop
cmpb
and
sbb
or
pusha
fldenv
xchg
movsl
mov
shrb
pop
push
lret
std
test
lcall
mov
and
push
imul
lret
lcall
and
lods
out
mov
push
jne
push
push
aaa
xor
arpl
jle
fdivrl
adc
lock
out
in
cmp
push
in
xchg
imul
xchg
xor
lds
mov
and
jb
jmp
cmpsb
cld
inc
mov
pusha
push
shrb
sub
pop
clc
dec
idiv
sbb
mov
inc
enter
sbb
or
dec
and
in
aam
cmc
in
push
shll
or
pop
cmp
and
mov
jle
cld
imul
sbb
cwtl
sub
mov
int
jae
loope
xchg
jne
cmp
das
aaa
sub
push
aam
cli
stc
ljmp
pop
call
daa
jb
sub
jbe
and
cmpsb
scas
mov
mov
sbbl
adc
sti
or
mov
imul
push
jp
cmp
ret
arpl
xor
ja
xchg
popf
sbb
pop
xor
add
out
sub
adc
mov
jg
das
popf
mov
out
pop
lahf
lods
in
jp
fs
clc
orb
adc
mov
and
push
out
xchg
jl
mov
shrl
int
gs
das
add
dec
out
les
scas
pop
mov
cmp
jl
test
pop
pusha
insb
sub
push
sub
daa
ja
pop
popa
mov
repnz
aas
add
mov
and
out
cmpsl
xor
or
xorl
mov
pop
rorl
mov
mov
sahf
inc
sub
dec
cmp
add
sub
xor
jno
icebp
in
cmc
push
das
roll
lcall
cs
fidivl
pop
fldl
cmp
cmp
pop
imul
insl
or
mov
and
cmpsb
inc
or
leave
xchg
pop
xor
mov
lock
int3
mov
xchg
pop
sub
add
jecxz
lods
pop
dec
fldenv
sti
movsl
fcomps
jno
add
repnz
pop
pop
in
mov
je
imul
hlt
mov
pop
add
mov
mov
mov
mov
aas
lea
dec
jns
lock
xorb
jmp
lods
notl
scas
lcall
jno
dec
mov
mov
ret
iret
js
mov
fwait
xchg
mov
mov
sub
in
jle
or
and
xchg
jp
fwait
adc
adc
jno
incb
lret
jo
xchg
xor
mov
sbbb
fwait
push
test
aas
push
mov
aaa
inc
cld
inc
outsb
pop
sub
jno
ss
gs
adc
add
movsb
mov
mov
sub
loope
fiaddl
aaa
enter
pop
ret
mov
inc
test
fdivrl
bound
rcrl
dec
fs
xor
inc
int3
lret
jbe
shrl
ret
mov
enter
pop
int3
cmp
pop
icebp
push
fsubl
add
xchg
push
insl
add
repz
jp
xchg
sbb
cli
rorb
dec
iret
pop
shlb
imul
sbb
push
stos
sub
xchg
xor
loop
rorl
lret
shll
daa
mov
daa
jp
fsubl
inc
andb
sbb
xchg
or
xor
push
loope
push
popa
enter
les
dec
jp
mov
daa
outsl
sti
or
ja
mov
sbb
and
imul
hlt
jns
add
stc
jo
cmc
jns
pop
imul
adc
bound
call
xor
fwait
dec
push
loop
push
cwtl
add
or
inc
insl
movsb
cltd
in
add
clc
aaa
xchg
lahf
inc
or
mov
adc
jno
mov
fs
ljmp
cld
cmp
aad
jno
cwtl
ret
pop
push
jp
dec
test
imul
adc
jbe
cmove
in
and
jno
inc
add
ja
pop
add
sbbl
iret
lret
sub
scas
decl
aaa
pop
inc
dec
inc
jl
out
dec
test
pop
sbb
outsl
mov
pop
test
sub
inc
mov
mov
push
push
mov
pop
xor
mov
mov
pop
stc
mov
push
pop
ds
xor
rorb
mov
or
inc
jl
ljmp
dec
jne
add
mov
subl
enter
or
inc
mov
nop
ret
negb
push
aaa
pop
xchg
ds
sbb
popf
pop
pop
lahf
add
jp
test
out
std
push
daa
loopne
sahf
iret
xor
enter
xchg
mov
dec
xchg
mov
jae
dec
sub
mov
mov
xor
pop
adc
sub
cwtl
pop
cwtl
jns
sar
pop
push
gs
mov
ret
arpl
lret
add
mov
sub
dec
fs
ds
hlt
test
push
mov
sub
mov
cmp
sub
inc
pop
leave
inc
in
pop
dec
lock
jae
xchg
mov
or
popf
and
fsubrp
mov
sbb
inc
push
cwtl
sub
pop
lods
stc
lods
push
cmp
pop
lahf
and
xchg
fwait
cmp
mov
pop
fisubrs
aam
loop
movlps
push
repnz
or
add
mov
inc
xor
daa
mov
xchg
outsl
cmp
add
or
js
cmp
pop
mov
stc
sbb
stos
clc
pop
mul
push
outsl
dec
mov
aaa
test
popa
add
int3
nop
in
call
xchg
addb
sbb
mov
subl
rcrl
out
xorb
test
push
sbb
fnstenv
sahf
scas
jnp
je
pop
aam
add
pop
clc
or
cmc
xor
inc
clc
in
or
push
adc
pop
test
ret
das
lds
stos
mov
cmp
roll
xor
js
andb
pop
in
pop
mov
je
or
xor
xor
jecxz
je
leave
imul
stos
out
iret
jl
or
dec
sti
inc
inc
add
jg
scas
in
mov
inc
push
mov
fnstcw
fiaddl
rcrl
addr16
loopne
cmpsb
cltd
add
sub
sbb
mov
lret
jp
in
and
gs
sahf
cmp
cmpsl
cmp
mov
cmp
div
cs
jb
cmc
dec
lods
xor
enter
das
repz
aad
imul
adc
xchg
lods
in
pop
pop
xlat
popa
cs
les
inc
shr
mov
and
mov
hlt
push
jb
jae
fisttps
adc
mov
js
pop
orl
pusha
cmp
es
in
mov
cmpb
lret
rcrl
shrl
std
bound
and
mov
in
mov
clc
fadds
jmp
scas
std
outsl
or
jp
jnp
repz
bound
outsl
rcrl
pop
mov
popa
pop
mov
movl
pop
jge
mov
js
pop
mov
and
stos
pop
mov
sbb
stc
daa
cs
xchg
in
mov
add
lds
cmpsb
add
add
stc
out
std
add
mov
out
inc
fcompl
pushf
sbb
rcll
imul
sti
loope
mov
loope
xor
cmpsl
movsl
or
inc
cmp
mov
dec
lods
out
or
aam
sub
out
iret
jp
stos
cmp
pop
js
aam
push
stos
or
jnp
outsb
out
test
fwait
mov
inc
pop
xchg
std
dec
addr16
into
fwait
mov
std
mov
adc
jl
jecxz,pt
imul
pop
pusha
sbb
xchg
add
sbb
xchg
ret
sbb
stos
js
testl
inc
insl
rorb
push
push
jge
or
pop
cmp
repz
pop
dec
pop
popf
aas
mov
mov
std
in
xor
and
arpl
pop
leave
out
cmp
cltd
insb
xchg
jmp
jg
andb
sbb
imul
push
mov
mov
mov
loop,pn
cmp
pop
fdivs
mov
rcrl
lds
cmp
fwait
mov
sub
mov
sti
mov
outsl
pop
insb
sbb
pop
push
inc
sub
cs
mov
in
cmc
outsb
div
sahf
hlt
adc
gs
sbb
hlt
cmp
xchg
in
fldenv
or
mov
mov
movsb
mov
mov
shl
cltd
test
mov
pop
cmp
inc
cld
imul
mov
pop
test
mov
xchg
mov
roll
test
hlt
imulb
mov
mov
xchg
repnz
mov
add
lock
cmpsl
xor
int3
mov
ds
sbb
sbb
pop
mov
mov
add
push
push
inc
jg
aaa
sbb
or
pop
mov
push
inc
shrl
pop
das
mov
push
outsl
fucompp
inc
jecxz
lds
shl
xor
ljmp
imul
stc
adc
imul
xchg
dec
lcall
mulb
xor
push
push
pop
sub
sbb
pop
pop
jp
stos
or
fwait
ret
int3
xorb
mov
jo
lods
jae,pn
fmuls
scas
xchg
xchg
jne
cli
je
pop
adc
test
add
add
movl
xchg
pop
jno
pop
fs
outsl
pusha
loop
nop
outsb
frstor
lret
mov
lods
adcb
imul
fcompl
mov
popa
add
mov
fwait
repz
push
sub
pop
daa
sbb
addl
mov
mov
mov
pop
stc
adc
shl
push
xor
inc
sbb
outsb
push
adc
lock
push
mov
xlat
out
dec
pop
jmp
fs
mov
jo
add
loopne
mov
sbb
shll
idivb
jg
jmp
jl
shl
mov
jle
fsubl
inc
pop
sbb
sbb
push
icebp
sbb
pop
cmp
sahf
mov
pop
mov
pop
movl
mov
sti
mov
sub
dec
xchg
sbbb
outsb
jl
jae
lcall
mov
mov
adc
mov
xor
sbb
ja
mov
add
adc
mov
cmc
mov
fcoms
adcb
inc
add
mov
pushf
sbb
loope
imul
lret
rolb
jg
lock
fcoml
ret
sbb
add
pop
shl
sbb
push
push
cs
stos
ret
lock
out
jno
xor
sbb
cmpb
or
movsl
mov
inc
or
mov
dec
push
aam
lds
adc
aam
enter
shl
jp
push
pusha
sub
sbb
mov
xchg
fisttpll
imul
mov
cmpsb
fdivrl
cmp
push
mov
fadds
mov
and
inc
jae
aaa
fadds
inc
rorb
sbb
out
jo
out
cltd
jp
fildll
xchg
cmp
xchg
popa
sub
ret
mov
loopne
daa
testl
cs
mov
sub
xchg
push
sub
inc
pop
mov
xchg
fsubl
jp
es
xor
out
jecxz
pushl
fwait
pop
xchg
or
orb
push
stos
les
or
aaa
test
push
dec
pop
addr16
mov
scas
sti
iret
leave
movsb
mov
push
test
movsb
rorb
scas
jg
mov
mov
mov
mov
mov
xchg
cld
mov
test
out
sub
cmpsl
mov
daa
stos
cmp
adc
fstl
inc
add
inc
xlat
add
lds
hlt
jb
push
inc
adc
cli
jmp
push
mov
clc
lret
ljmp
loopne
pop
lods
jl
ret
mov
out
mov
es
jl
mov
sub
xor
push
xchg
pushl
inc
jle
xchg
xor
sub
andb
mov
sbb
or
in
add
xchg
pop
popf
subb
jg
rol
pop
pop
mov
mov
mov
lea
xor
sarl
stc
daa
xchg
sbb
fistpl
das
mov
frstor
stos
push
in
call
mov
cmc
adc
test
cmp
jns
push
cmpsb
xchg
jo
pushf
cli
insb
insb
dec
cwtl
ret
push
jmp
pop
rcr
mov
popa
mov
sub
imul
push
xchg
mov
sbb
sahf
das
adc
mov
xlat
xchg
mov
frstor
jp
cmp
ds
mov
xor
cltd
jg
lods
loopne
stc
mov
pusha
adc
sarl
std
jne
movsl
xor
xlat
inc
enter
repnz
bound
cmp
sbb
mov
cmp
cmp
lds
dec
jle
ret
jnp
and
outsb
scas
jbe
mov
jg
sti
mov
cmc
and
cmp
dec
sbb
push
sub
imul
sub
push
test
mov
jne
sbb
sub
sub
and
add
push
fisttps
jl
arpl
lods
scas
pop
xchg
ficoml
and
mov
imul
sti
out
in
rcrl
iret
rol
jo
scas
inc
movsb
lcall
push
pop
xor
outsb
imul
insb
test
xlat
fcoms
cld
or
jb
daa
pop
lock
imul
loopne
jae
das
jecxz
ret
jne
ds
aaa
mov
sbb
adc
mov
mov
cmp
or
cld
into
inc
cmpsb
mov
aam
in
dec
call
pop
jb
insl
nop
std
rcrb
jp
movsb
fimuls
scas
mov
cmp
dec
movsl
mov
xchg
sub
fs
cmp
and
popf
mov
push
mov
movsl
aas
stc
pop
xchg
loope
daa
cltd
inc
enter
sbb
pop
inc
mov
inc
add
pop
sub
stc
pop
or
lock
call
js
adc
subb
das
inc
inc
ret
fmuls
or
jg
mov
in
mov
jp
es
push
pop
icebp
xor
test
lods
in
xchg
mov
outsl
repz
fstpt
add
or
xor
mov
in
pop
test
jne
adc
cmp
icebp
mov
insb
cmp
arpl
jo
xchg
in
aaa
mov
icebp
mov
xchg
cmp
arpl
pop
adc
sbb
add
test
inc
mov
out
mov
pop
add
push
pusha
arpl
pop
inc
mov
aaa
aam
sub
adc
rclb
lahf
in
rcr
and
xchg
ds
jp
lods
sahf
pop
std
push
leave
fbld
lods
fdivrs
fiaddl
or
lret
jns
aad
addr16
cmc
jno
mov
enter
cmp
repnz
xor
jmp
out
add
scas
lock
stc
pop
add
outsb
stos
test
in
cld
mov
or
test
leave
mov
movsl
ret
jl
mov
mov
sbb
pop
call
and
das
clc
jge
mov
and
js
xchg
pop
lcall
sub
push
mov
xchg
repnz
daa
pusha
hlt
or
mov
sbb
lahf
and
outsl
outsl
je
mov
inc
int
leave
stc
pop
lock
in
rclb
fmull
cld
xlat
outsl
push
ss
loope
adc
push
movsb
push
dec
sub
jbe
in
out
mov
xlat
push
faddl
ss
dec
dec
fsts
cmp
outsl
sbb
orl
imul
cltd
add
xchg
mov
in
dec
adc
imul
leave
adc
ret
int
repz
loopne
test
pop
rcll
sub
int
into
sbb
scas
adc
xorb
lds
cwtl
inc
outsl
sbb
bound
xchg
lea
imul
xchg
out
mov
and
fmull
xchg
adc
inc
and
pop
jl
ss
ljmp
lret
lock
push
cmp
inc
push
fwait
inc
shr
lea
scas
repz
mov
stos
cmc
push
pop
out
or
cwtl
mov
in
xchg
adc
or
push
mov
popa
outsb
mov
sbb
push
lds
add
in
inc
or
sbb
and
xlat
jge
into
xchg
pop
push
add
mov
sub
imul
add
cli
decl
fisubrl
push
test
pop
push
roll
neg
pop
jbe
adc
fldt
or
hlt
gs
fiadds
lods
negb
xlat
adc
push
xor
stc
idivl
mov
rep
cmp
jne
mulb
lods
lds
pop
pop
mov
jg
pop
movsb
lahf
cwtl
cmp
pop
imul
cmp
scas
xchg
push
mov
pop
sub
jp
sub
mov
jb
lods
push
ds
daa
imull
nop
dec
int3
jnp
in
pop
xchg
xchg
es
push
insb
icebp
scas
test
sarb
int
adc
push
sbb
pop
pop
mov
out
adc
add
mov
xchg
mov
push
imul
xor
cmp
mov
sarl
inc
dec
imul
adc
or
ds
add
xchg
stc
and
mov
sub
or
movsl
mov
xchg
ds
dec
mov
clc
mov
pop
add
aam
lcall
inc
shl
jb
push
xchg
andl
push
pop
dec
inc
inc
sbb
icebp
sub
push
add
jae
mov
cmp
push
imul
push
mov
mov
mov
popa
mov
out
fstpt
lods
push
lods
mov
mov
sub
inc
into
mov
mov
ljmp
cmp
icebp
ja
inc
sub
sahf
rol
inc
enter
pop
or
scas
add
jo
outsl
or
ficomps
loope
sub
mov
lods
adc
or
mov
jp
add
mov
pop
rorl
cltd
ljmp
mov
fisubrl
bound
sub
pop
or
sti
mov
adc
sbb
cmp
fisttps
or
push
add
sub
test
mov
lcall
jg
repz
lods
xor
mov
push
adc
test
rorl
nop
adc
pusha
adc
mov
mov
inc
xchg
sahf
out
leave
fisubl
call
rorl
out
push
inc
adc
cmp
mov
ds
iret
jle
push
call
push
iret
lret
jle
mov
ljmp
pop
adc
iret
andb
sbb
gs
or
pop
divb
jbe
sbb
ljmp
and
out
mov
in
scas
and
add
ret
lods
sbb
push
lock
mov
fadd
pop
fidivs
leave
mov
jno
and
pushf
inc
add
fldt
out
dec
xchg
lock
dec
mov
sub
push
sub
pop
xor
sbb
pop
into
das
pop
inc
fcomps
mov
and
adc
fs
add
xor
adc
addr16
lds
iret
pushf
cmc
loop
sub
sqrtps
pop
cmp
push
sti
xor
dec
cmp
aas
inc
pusha
add
in
daa
lret
shll
icebp
jne
fdivrl
daa
dec
cmp
xchg
xchg
mov
sahf
aaa
and
adc
inc
scas
and
dec
mov
adc
jle
dec
sub
ret
inc
push
push
cltd
dec
add
mov
add
test
mov
fwait
stc
adc
lods
ljmp
fucomip
push
mov
mov
xor
pusha
scas
outsl
movsl
jge
pop
in
loope
std
stc
rolb
lcall
push
mov
loop
lods
mov
mov
jns
mov
cld
dec
xchg
testb
sarl
sub
and
por
scas
inc
fcmovbe
cmp
xchg
push
cli
nop
cmp
push
pop
sbb
sbb
xor
adc
push
sbb
and
sahf
cld
cs
adc
aaa
repnz
lock
les
inc
insb
cmpsl
fisttps
filds
fdivs
adc
push
lahf
enter
mov
sbb
ret
outsl
mov
dec
xchg
and
fs
push
adcb
dec
addr16
cmp
xchg
subl
fiadds
loopne
sbb
test
rorb
sbb
pop
push
insl
es
call
jae
in
into
je
dec
hlt
pop
test
test
stos
in
jl
mov
mov
sbb
ret
xlat
outsl
push
scas
icebp
or
in
xor
jmp
jl
pushf
lret
sub
and
repnz
das
adcl
lods
add
mov
imul
mov
out
movsb
fwait
sub
sub
repz
mov
xchg
push
cmp
or
out
xchg
pop
xchg
xor
lods
aaa
jg
icebp
mov
mov
in
inc
mov
xor
in
push
push
outsb
sbb
movsb
lcall
cs
jne
dec
mov
or
test
lock
adc
and
js
cmp
repnz
fdivr
sti
push
scas
xor
cltd
or
pop
pop
mov
popa
movsb
sub
pushf
cmpsb
enter
dec
hlt
gs
cmc
push
jp
aad
xchg
jbe
mov
mov
sbb
push
leave
jb
push
pop
jns
inc
fsubrs
js
xor
out
imul
shll
adc
xchg
notb
dec
rcr
out
orl
add
fildl
cmpsl
xor
add
ficoml
mov
imul
jb
xchg
nop
push
push
add
pop
pop
std
ret
mov
sti
lret
mov
repnz
add
std
shl
sbb
test
popf
sub
sahf
lds
cmc
jb
xor
cld
movsb
stos
lea
popf
pop
out
andl
jecxz
test
xor
das
inc
cli
sub
in
gs
movsl
lahf
dec
mov
mov
cld
push
mov
mov
xchg
mov
pop
jbe
xchg
fldenv
xchg
and
loope
jp
hlt
js
in
push
jg
or
out
dec
push
adc
fsubs
fs
or
icebp
pop
lds
int3
sahf
add
mov
lods
mov
lods
xor
fnstcw
std
pop
lds
mov
shll
cmp
xor
dec
fnsave
push
stos
xchg
jnp
fidivs
aad
or
mov
add
int3
and
in
shlb
adcb
lods
xor
outsb
cmc
pop
in
mov
pop
xchg
iret
add
adc
fimuls
lcall
int
mov
ja
xchg
rorl
xor
adc
loope
add
loop
loope
jno
subl
leave
je
lcall
sbb
and
aam
loope
std
in
xchg
into
and
fucomi
stc
jns
mov
aas
out
cld
lret
and
lcall
and
inc
push
xor
xchg
adcb
add
mov
lds
mov
xor
sbb
mov
imul
cmp
sub
arpl
sbb
test
xor
xlat
lret
and
add
and
jb
in
out
gs
stos
int
insb
ss
or
loope
or
hlt
adc
or
add
ss
aad
fwait
nop
dec
mov
pop
cmp
inc
lds
push
int
je
shl
or
pusha
nop
lock
push
mov
jno
testl
jmp
cwtl
or
int
adc
xor
leave
mov
mov
int3
jg
shlb
jmp
adc
loop
cli
pushf
mov
je
shll
push
pop
je
inc
xchg
xor
repnz
xchg
hlt
into
int
cmp
es
test
lcall
std
jmp
lods
test
mov
daa
xchg
jl
mov
push
add
adc
insb
iret
sub
hlt
xchg
cld
pop
inc
mov
loope
jp
jecxz
loop
mov
dec
sbb
mov
xor
cmp
sub
or
and
pushf
adc
fsubl
movsl
or
test
or
cli
pusha
mov
repz
cmp
mov
outsb
mov
mov
std
add
jl
or
adc
fistpl
setbe
cmp
shlb
sbb
xchg
push
test
mov
arpl
and
and
xchg
movsb
leave
dec
cmp
cmp
add
shlb
add
or
mov
add
icebp
lahf
lcall
lds
addr16
sub
ja
jle
lret
lds
mov
mov
xchg
mov
mov
lahf
xor
faddl
inc
test
xchg
cwtl
in
sbb
push
js
scas
jnp
inc
insb
andb
xor
repnz
jno
loopne
loop
arpl
xchg
jno
mov
es
mov
aad
jmp
imul
pop
in
out
ret
shll
js
cld
pop
cmp
nop
lods
mov
xchg
push
and
ret
cli
lods
mov
fabs
call
int
push
repnz
test
fs
xchg
je
add
jbe
data16
daa
pop
sbb
addb
jg
xor
jno
push
aad
fwait
pop
pop
outsl
jg
push
hlt
dec
xor
jns
sub
mov
mov
push
xor
jl
push
leave
lahf
in
cwtl
fidivrs
inc
repnz
sbb
pop
xchg
gs
xor
test
mov
or
jge
adc
pushf
lods
test
dec
push
push
push
fstps
ja
adc
fcmovb
hlt
or
lods
in
mov
push
push
fstpl
imul
call
lahf
adc
xor
sbb
stos
sti
inc
pop
push
push
call
sti
sub
cs
xor
jb
or
jbe
mov
dec
js
inc
dec
xchg
cmp
int
mov
xchg
out
adc
hlt
jp
xor
loop
add
out
insl
mov
jmp
xchg
insl
sbb
addl
adc
inc
aad
dec
sbb
mov
push
xor
mov
lret
jl
pop
push
sub
nop
aad
sti
adc
and
inc
dec
sbb
adc
pop
fwait
pop
lret
aad
inc
pushf
das
xor
mov
adcl
inc
icebp
sub
mov
pop
cltd
or
mov
xor
jne
stc
mov
arpl
loopne
inc
sbb
popf
push
mov
jno
add
inc
mov
stos
cltd
je
cmp
js
int3
ds
cmpsb
ret
shl
sbb
pop
movsl
jge
cmpsb
sub
test
sbb
jae
adcb
int3
push
fcoml
cli
adc
xor
lret
scas
scas
adc
or
cltd
or
imul
add
pop
shlb
mov
dec
xor
dec
mov
roll
jle
in
fldl
cmc
std
jo
sub
push
aas
xchg
movsb
mov
mov
inc
pop
push
clc
stos
loop
filds
fistps
mov
in
mov
lcall
mov
testl
ret
mov
mov
ficompl
jo
mov
jo
jmp
jecxz
jnp,pn
sub
lea
jecxz
loopne
shll
push
loop
fiadds
hlt
pop
push
testb
mov
push
xchg
xor
lods
je
pop
pop
xor
arpl
sub
arpl
sub
dec
popf
mov
xchg
test
shlb
push
mov
imul
pop
dec
jmp
stos
lret
mov
and
aas
xchg
xchg
and
ljmp
lcall
ret
inc
in
das
sub
mov
mov
sbb
jb
dec
mov
cmpsb
pop
sub
xor
xlat
xchg
insb
jb
test
movsb
add
sbb
and
insl
out
inc
mov
fcomi
xor
orb
mov
pop
imulb
sbb
add
add
sub
push
sbb
cli
cmp
mov
loope
or
sbb
iret
rorb
sub
je
push
adc
into
jo
add
pusha
aad
aam
movsl
cmp
bswap
lods
rcr
push
xchg
lcall
jne
add
adc
filds
xor
sbb
adc
mov
cmpb
adc
mov
jmp
cmpsl
mov
cmp
cmp
adc
je
das
rep
sbb
inc
repnz
in
push
je
jns
in
dec
jp
sub
sbb
jmp
xor
sub
jp
in
or
cwtl
shl
popa
aam
adc
and
ficompl
sub
int3
rclb
xchg
div
add
sub
pop
imul
xchg
mov
pop
test
jbe
and
and
or
adc
jb
mov
cmpsb
mov
data16
xor
clc
mov
and
xor
iret
pop
cmpsb
rclb
push
cld
out
jnp
mov
xor
loope
cwtl
push
popa
repnz
imul
movsb
xor
xlat
outsl
and
jno,pt
sub
push
jo
push
cs
push
movsb
mov
dec
imul
lret
shl
cmp
cmp
ret
sbb
dec
jmp
pop
and
imul
js
and
or
mov
sub
subb
ja
jns
mov
test
mov
mov
add
sub
lret
inc
cmp
les
mov
psubusb
cld
fs
addr16
pop
out
pusha
cmc
xor
data16
das
mov
pushw
icebp
mov
sets
flds
lods
rcl
cli
xor
xlat
stos
or
and
xchg
adc
jae
jmp
mov
leave
bound
adc
repz
movsl
arpl
mov
cmp
inc
stos
xchg
je
mov
fistl
fidivl
std
push
fwait
sbb
outsl
dec
jns
jecxz
add
pop
pusha
ret
iret
mov
push
xchg
cmp
or
mov
dec
xchg
hlt
mov
inc
push
xchg
ss
aam
repz
aaa
and
data16
and
mov
push
add
inc
pop
mov
jno
add
pop
outsb
cltd
push
pop
jno
shrb
mov
das
adc
mov
pusha
mov
scas
inc
mov
dec
sbbb
cld
fcmovu
xor
jmp
cmp
cwtl
mov
or
and
dec
cmp
fucomp
push
mov
shlb
pop
mov
sbb
mov
cmp
cmpsl
nop
repnz
or
xor
test
je
in
push
in
out
jecxz
nop
pop
icebp
and
cmp
mov
pop
cmp
subb
repnz
jl
jmp
sbb
push
mov
xorps
sbb
adc
sahf
cmp
icebp
lods
ficomps
sbb
push
mov
test
jmp
jge
cmp
inc
lea
in
xchg
jo
jge
jge
scas
gs
xchg
rclb
leave
xchg
je
inc
xchg
xor
push
jecxz
aaa
in
daa
or
sub
push
lret
dec
rcr
add
jle
in
fcoms
mov
fidivs
lods
cmp
add
cmp
repz
shlb
dec
rol
jl
lret
jmp
pushf
repnz
je
push
in
jl
decb
mov
mov
sarl
popf
and
mov
sub
cmp
jns
aam
dec
fcmove
pop
in
xor
ljmp
pop
sbb
outsl
and
xchg
or
mov
insl
ljmp
mov
pushw
mov
jns
repz
cmc
add
fmulp
push
lcall
jno
pop
xchg
bound
inc
roll
sti
sbb
in
shr
cmp
jge
push
xlat
mov
rcrl
dec
and
jb
stos
andl
sbb
and
sbb
aaa
xor
test
mov
aad
iret
and
jecxz
bound
mov
jbe
dec
and
iret
mov
and
or
roll
inc
inc
jo
icebp
push
fisttpl
out
enter
stos
mov
into
out
out
sub
arpl
mov
leave
sub
std
addr16
out
mov
cmp
adc
int
xchg
subl
jae
sbb
and
out
bndstx
imul
sub
das
mov
fs
das
mov
push
jecxz
insl
mov
rolb
xor
outsb
mov
lahf
aad
sbbb
pushf
lds
sbb
std
stos
pushf
lock
sub
and
sub
test
and
frstor
les
cmpsb
dec
mov
scas
cmpsl
cmp
inc
jge
das
adc
out
mov
jae
mov
xchg
mov
arpl
imul
stos
inc
fwait
xchg
fildl
mov
adc
hlt
dec
test
je
loopne
bound
push
addl
inc
and
jnp
lea
sbb
test
push
jns
cwtl
lds
add
inc
scas
mov
add
and
or
adc
mov
popf
cmp
jl
inc
repnz
mov
xchg
pop
shlb
fwait
mov
rcl
fbld
xchg
aaa
xor
shlb
jb
jb
pop
ja
cmp
jmp
push
ret
xchg
test
sbb
push
fadds
mov
adc
pop
xchg
pop
aas
sbb
dec
sbb
dec
xor
rcl
jnp
mov
mov
dec
cli
sub
push
inc
lea
test
mov
ljmp
lods
loop
gs
sbb
mov
xor
iret
nop
pusha
dec
jo
xchg
addr16
jecxz
lods
sbbb
fdivs
test
shrl
scas
in
xchg
pusha
call
in
ds
mov
jp
movsl
loopne
loopne
inc
dec
adc
mov
pop
movsb
cmp
sbb
adcl
cmp
ja
pop
mov
arpl
cli
xchg
xchg
jge
cmc
lds
cwtl
adc
mov
xor
mov
pushf
pop
jmp
in
add
mov
push
adc
sahf
daa
fidivl
outsb
push
cmp
and
jl
nop
xchg
sub
pop
xor
shrl
cwtl
or
dec
repnz
cmpb
enter
pushf
stos
loop
mov
inc
mov
or
jg
shrl
add
and
stos
or
cmp
in
imul
add
and
xor
aaa
jp
in
push
pop
mov
jns
loope
fnsave
movsb
cmpsl
and
leave
rolb
clc
jb
mov
shrb
xchg
stos
add
test
mov
sub
sub
cmp
jns
fiadds
orl
fsubrl
sbb
sub
outsb
pop
cltd
add
push
test
clc
out
lds
sub
or
cld
inc
jnp
outsl
and
mov
mov
das
hlt
or
mov
popl
sbb
pop
stc
mov
mov
fdivs
shlb
enter
lock
inc
test
or
loop
test
dec
push
mov
aad
adc
fisubl
aas
pushf
cmp
add
mov
dec
sub
inc
and
cmpsb
in
xor
outsb
lds
out
ss
es
mov
aaa
mov
pushf
imul
inc
ret
or
std
aas
sar
pop
push
or
jg
add
jno
or
xchg
out
jno
aaa
and
add
out
fimuls
sub
add
stc
jg,pn
or
mov
pop
mov
xor
loop
xor
addb
ror
inc
lock
mov
lcall
or
popa
int
mov
push
sbb
leave
fisubs
outsl
imul
fmuls
mov
cwtl
cmpsb
dec
add
lcall
imul
loopne
mov
lods
sbb
mov
mov
cltd
mov
sarl
mov
sub
dec
dec
or
push
or
gs
pop
push
fs
xor
xor
inc
mov
das
or
fcomps
lods
push
xor
sar
cmp
inc
and
mov
sbb
mov
les
or
mov
cwtl
adc
std
out
mov
xchg
push
adc
ret
xor
or
pop
clc
gs
imul
jnp
cmpsl
mov
and
lods
ss
in
dec
sbb
cmp
lcall
outsb
and
in
and
rclb
ret
hlt
jns
test
leave
pop
sub
ss
bound
jnp
lds
push
out
fdivrl
inc
and
pop
sbb
sub
jae
icebp
or
push
clc
jl
push
popf
mov
sbb
sub
in
mov
mull
xor
xchg
mov
xchg
es
push
cmp
mov
imul
enter
shrl
test
ss
jle
jno
mov
cmp
or
dec
mov
mov
adcb
mov
lds
push
imul
cltd
xchg
fcmovbe
adcl
pushf
je
adc
add
and
xchg
movsl
pop
dec
outsl
dec
dec
jns
outsl
lods
pop
xchg
jb
outsl
jecxz
push
adc
jecxz
loopne
push
call
adc
cwtl
pop
daa
repnz
sub
xor
dec
or
push
xlat
adc
addb
inc
insb
notl
lock
lock
fdivl
sbb
jecxz
movsl
fcomp
subb
sub
jns
mov
out
rorl
xor
inc
mov
ljmp
lret
ss
jmp
dec
aaa
sbb
xchg
orl
jnp
int
addl
mov
std
sub
xlat
sub
adc
sbb
fistpl
dec
in
xor
mov
adc
mov
cli
lcall
pmaddwd
pop
jo
lret
inc
movsb
sbb
nop
ss
push
movsb
cs
pop
inc
sub
ret
jnp
cli
fwait
test
sbb
lret
sbb
jnp
add
sbb
xchg
jnp
inc
je
mov
fbld
dec
jmp
adc
pop
pop
and
mov
std
xlat
decl
test
leave
popa
andb
adc
lods
or
scas
pop
jecxz
push
jl
fisubs
shll
and
rcrb
call
push
and
jle
sub
loop
pop
outsb
jg
xorl
jne
xchg
and
and
cmp
out
mov
enter
test
push
inc
shll
pop
mov
fdivs
enter
sbb
push
fsubrl
xor
mov
xchg
out
pop
pop
in
jbe
adc
lock
out
dec
inc
push
sub
inc
jo
test
cltd
cmpsl
or
inc
sbb
and
jge
add
ds
and
int3
sbb
pusha
std
in
test
mov
ret
out
in
rcll
adc
dec
xlat
lods
repnz
fstpt
jmp
nop
jp
xchg
fucom
lock
mov
jb
inc
add
mov
div
pop
scas
add
ficoml
dec
jne
ret
or
fnstcw
fcoms
cmp
out
xor
bound
out
jbe
add
mov
pop
pop
out
addr16
adc
mov
xor
fxch
xchg
sti
xchg
clc
out
inc
imul
dec
sub
push
loopne
push
mov
mov
xchg
jecxz
adc
push
mov
dec
xor
dec
ret
mov
jo
jne
or
xchg
ds
sbb
aaa
mov
jno
and
mov
fidivrs
push
loope
jne
mov
mov
xor
dec
cld
aam
mov
add
push
adc
fldt
pop
popfw
in
lcall
and
inc
shlb
mov
subl
lea
inc
inc
xor
mov
fldcw
mov
cld
cmp
test
sbb
test
push
addr16
out
popa
jmp
cmp
psrlq
cmp
jmp
mov
dec
dec
test
jno
nop
xor
mov
ljmp
mov
add
sub
ja
lods
test
rcr
fstpl
pop
mov
or
cli
cli
stc
mov
and
mov
xchg
nop
sbb
mov
xor
inc
pop
xor
outsb
jl
jp
test
dec
ret
fmull
test
inc
xchg
adc
sub
sahf
sub
pop
leave
outsb
loope
cmp
fcmovnb
ds
mov
cld
push
sti
dec
cs
dec
inc
aam
xor
orb
mov
pusha
pop
push
sarb
aad
adc
dec
pop
sub
cmpsl
jmp
fsub
mov
incl
pop
pushf
pop
sbb
pushf
jno,pn
push
test
or
jae
sub
xchg
mov
inc
sub
sub
jno
pop
inc
in
stos
adc
rcl
xchg
ss
sub
push
ljmp
sub
cmp
lahf
xchg
dec
pop
rcll
pushf
cli
outsb
fisttpll
jl
pop
lods
loop
inc
mov
and
sbbb
mov
mulb
lahf
adc
leave
inc
inc
cmc
mov
bound
mov
enter
sub
pop
sti
pop
xor
movaps
sbb
sbb
ja
insb
and
and
sub
je
dec
jbe
decl
das
lcall
imul
push
xor
mov
jl
jns
mov
adc
mov
sbbb
cmpl
mov
shrb
pop
xchg
sub
mov
je
mov
dec
pop
inc
xor
inc
int3
outsl
mov
pop
inc
es
pop
dec
fwait
xor
xchg
das
xchg
inc
arpl
insb
and
sub
sub
cmpsl
loopne
outsl
mov
pop
aaa
repnz
insb
xlat
jge
out
fdivr
and
movsl
add
cmp
inc
mov
pop
rol
ficoms
mov
add
hlt
sub
xor
sub
outsb
lock
cmpl
mov
ja
mov
dec
loopne
sub
popl
insl
ja
jno
cmp
sbb
or
movsl
das
push
into
add
sbb
push
jge
lds
and
cwtl
fdivp
fnstsw
mov
xor
adc
aaa
fisubrl
jmp
push
jo
je
fwait
in
jne
imul
lcall
ds
cld
sub
rcr
shrl
fidivrl
xchg
in
push
pusha
jnp
jo
bswap
es
cwtl
clc
cltd
pop
mov
mov
cmp
adc
std
lahf
iret
cs
add
in
mov
xchg
cmp
ds
dec
in
mov
jae
cmp
add
mov
in
and
xor
in
loop
sarb
or
sti
dec
sbb
addr16
enter
pushf
cmp
mov
outsb
add
orl
pop
inc
cmp
mov
addl
das
in
movsb
mov
scas
inc
in
inc
movsb
aas
mov
ljmp
leave
push
mov
in
and
lret
cmp
mov
sbb
jp
xchg
dec
shlb
popf
jnp
gs
je
iret
rol
xchg
adc
push
scas
or
pop
cwtl
lods
mov
sti
call
clc
nop
mov
push
int3
stos
mov
sub
add
int
stc
jno
sti
jnp
or
sahf
sub
arpl
mov
jecxz
xchg
xchg
mov
mull
jle
push
mov
pop
mov
faddp
lahf
cmp
xor
outsb
xor
jl
mov
fsts
and
aas
jo
dec
cmp
prefetchwt1
stc
bound
add
and
xchg
dec
pop
ja
inc
nop
inc
das
in
mov
and
pushf
cltd
mov
xchg
mov
lods
loop
fidivrs
fimull
pop
dec
jg
pop
icebp
pop
arpl
add
mov
and
es
mov
sub
movsb
add
lea
mov
mov
xor
imul
and
scas
adc
mov
push
rclb
cmp
adc
lock
mov
or
movsb
testb
arpl
mov
int3
pop
add
ljmp
mov
or
imulb
pop
xchg
pushf
or
mov
jge
dec
push
cmp
xor
jge
fs
jg
inc
cmc
aad
add
push
dec
std
push
fcompl
lods
push
fmuls
sub
inc
and
mov
dec
mov
xlat
lret
cmpsb
cli
roll
sub
mov
push
popa
lahf
and
addr16
outsl
ljmp
jno
pop
gs
fdivs
aad
mov
and
cmp
sub
orb
xor
push
cmc
fistps
sbb
lods
or
stos
add
jne
cwtl
push
mov
or
rcrl
jo
stos
add
sub
fwait
movsb
cmp
mov
jae
shrl
xor
xor
sarb
push
pop
shlb
insb
adc
movsl
add
cmp
mov
jnp
stos
cmc
and
mov
fnstsw
test
sbb
or
pusha
sbb
or
dec
movsl
jecxz
addl
ds
sahf
pop
aad
mov
insb
mov
sub
dec
cmpsl
mov
xlat
xor
sarb
cmp
lock
mov
jne
roll
or
pop
mov
call
fwait
and
sub
out
call
test
out
fwait
stc
cs
subb
xchg
movsl
push
pop
dec
pop
jmp
dec
gs
aam
out
jb
jl
and
ljmp
adc
inc
mov
xchg
in
cmp
imul
mov
stos
mov
sbb
xchg
sub
cmpsb
mov
adc
sbb
out
jp
add
scas
xlat
dec
scas
stos
out
aas
rorb
cmp
pop
cmp
cmpl
adcl
not
mov
xchg
inc
dec
inc
adc
outsl
inc
adc
or
sbb
jo
push
in
call
jmp
jno
dec
pushf
xor
xchg
pusha
xchg
fnstcw
lock
in
dec
add
inc
push
and
and
push
mov
xchg
sbb
hlt
xor
sbb
mov
xor
add
fnsave
iret
push
lcall
pop
cltd
jl
mov
lahf
mov
cmp
pop
stos
mov
out
outsl
cmp
lds
nop
pop
pop
cmp
negl
xor
xchg
inc
push
xlat
push
addr16
cmp
std
movsb
dec
xchg
xor
shrl
xchg
sub
test
aad
in
or
pop
mov
mul
imul
mov
xor
sub
insl
leave
rolb
unpckhps
sahf
inc
mov
adc
cwtl
fsubs
std
and
push
and
pushf
jmp
dec
and
bound
xorb
aas
push
dec
imulb
pop
xor
ret
or
xchg
sbb
divb
sub
pop
mov
icebp
push
shlb
inc
jge
ret
jge
fldenv
fs
sbb
adc
orl
dec
xchg
jbe
mov
rep
outsl
mov
popf
clc
jnp
lret
test
shlb
ss
jge
push
pusha
sar
icebp
adc
push
add
jnp
push
out
lret
pop
lock
dec
pop
cltd
cmp
insb
jp
mov
stos
fcmovu
jae
in
addr16
cmp
push
xchg
or
movsb
pop
mov
pop
lahf
fstl
jo
pop
icebp
cmp
out
xor
push
dec
xlat
jecxz
ljmp
xchg
or
push
aam
mov
rol
ljmp
jl
adc
out
sub
into
mov
or
xor
lods
pusha
loope
in
xchg
adcb
bound
jl
push
pop
sti
in
idivl
add
inc
dec
mov
shll
xchg
inc
stos
mov
push
rclb
adcl
lret
xchg
insl
mov
dec
mov
pop
ret
or
fnstsw
sbb
push
sub
mov
jg
jle
je
daa
adc
in
enter
aad
repz
adc
push
pop
repz
in
mov
or
in
mov
pop
push
scas
add
jmp
pop
daa
jge
add
cmp
lds
push
fwait
mov
out
lock
shrd
cwtl
cli
loopne
mov
push
ret
pop
leave
or
nop
test
data16
push
jp
nop
and
outsb
fwait
insb
aaa
mov
dec
call
stos
lret
cld
aas
pop
test
cvtdq2ps
cmp
test
ja
push
pop
roll
enter
loop
dec
mov
inc
add
inc
movsb
push
sub
aam
jg
lea
insb
mov
int3
ja
pop
int3
xchg
ss
and
aad
cs
pop
xorb
push
dec
imul
cmpsl
push
sbb
inc
add
nop
mov
sbb
stc
push
and
stos
adc
pop
nop
xor
cmp
jno
icebp
out
neg
sbb
ja
test
call
push
adc
jecxz
test
pushf
aam
dec
or
cmc
aam
xchg
scas
out
ljmp
ret
and
push
jne
and
cwtl
mov
sub
xchg
sahf
push
testl
movsb
mov
cmpsl
cmp
in
mov
test
pushf
dec
out
xor
add
divb
insb
addr16
xchg
mov
lods
les
fistl
call
push
xchg
gs
jns
cmp
scas
loope
push
outsb
fldenv
rclb
je
mov
shll
repz
push
addl
loope
pop
nop
aam
xchg
push
pop
cld
stos
jne
popa
imul
jno
sub
imul
add
mov
or
pop
xchg
imul
outsb
pop
xor
mov
jno
mov
cli
dec
xor
xchg
adc
fs
push
addr16
mov
push
mov
sti
push
or
stos
fadds
sub
dec
mov
and
adc
aam
lret
test
fstpt
into
add
imul
lods
mov
push
lret
mov
push
arpl
adc
dec
pop
jbe
daa
int
add
fsubrl
ja
mov
fiadds
or
mov
call
aas
enter
int3
stos
pop
xorb
mov
repz
test
sahf
mov
sub
push
lret
mov
mov
pushf
mov
inc
pushf
sbb
test
xor
sbb
iret
xchg
and
fsubrs
test
dec
movsl
pop
push
rolb
push
bsf
imul
dec
aaa
jb
jnp
popa
shll
sarl
sbb
mov
xchg
stos
sbb
xor
xlat
xor
jle
in
sub
adc
jae
sahf
jbe
mov
dec
fucomp
mov
push
mov
sub
jg
out
lahf
jg
xlat
mov
and
std
jae
mov
loopne
pop
movb
les
mov
and
leave
mov
cmpsb
mov
inc
push
pop
push
rol
je
imul
movsb
push
in
mov
dec
lretw
xor
add
xchg
int3
inc
and
sahf
es
pop
in
lods
jecxz
fiaddl
jge
rol
pop
sbb
xor
fsubl
inc
andb
loope
sahf
cli
jb
out
das
inc
or
fisttps
shll
movsl
jne
mov
push
xchg
pop
mov
adc
mov
and
mov
sti
jae
jns
inc
mov
mov
out
test
sarb
cmp
xchg
or
iret
cs
notl
icebp
pcmpgtd
push
cmp
dec
loopne
pop
leave
jae
mov
in
fs
mov
testb
pop
dec
add
and
mov
popf
mov
mov
adc
pop
mov
shll
cmp
addr16
stc
lock
xor
sub
orb
mov
imull
xchg
or
shll
js
in
add
cltd
mov
outsl
clc
pop
mov
sub
xchg
jae
es
cld
mov
test
movsl
dec
into
dec
lahf
adc
out
inc
cli
jp
jl
jo
sub
outsb
ds
pop
rol
es
mov
add
addr16
sub
data16
push
movsb
add
stos
jle
stc
std
mov
ficompl
adc
xchg
push
mov
arpl
jecxz
and
in
ret
repz
mov
mov
leave
ret
out
repnz
xchg
inc
inc
xor
mov
jb
clc
flds
ljmp
imul
lahf
inc
ss
cmpsb
cli
pop
jbe
lds
shl
inc
push
ret
std
jb
les
add
mov
repnz
hlt
les
andl
sbb
rolb
mov
or
mov
stc
pushf
js
test
xor
arpl
loopne
lret
hlt
sub
outsl
jno
mul
movsb
fdivl
sbb
sahf
inc
rcrb
into
pop
lret
xlat
jb
out
cmpsb
orb
mov
fldcw
popa
pusha
mov
sbb
xor
sarb
inc
sub
mov
dec
aam
and
gs
add
mov
lret
je
cli
aaa
and
push
incl
push
push
rcl
sbb
cwtl
inc
sub
push
inc
popa
jne
daa
mov
ret
fidivrs
and
jno
into
xor
jmp
hlt
lret
push
mov
call
jmp
aam
inc
ret
cwtl
mov
cmc
ss
sti
sbb
movsb
lock
jge
testb
mov
sbb
push
int3
aas
pandn
out
cmpsb
pop
pop
shll
imul
cld
sar
popf
sahf
iret
adc
sarb
lcall
loopne
int
fildl
decl
adc
xchg
rorb
lret
jno
mov
or
mov
mov
inc
inc
mov
sub
out
lock
clc
mov
inc
mov
jb
xchg
jb
int3
adc
mov
jge
jp
pop
jecxz
xchg
pop
ja
popf
push
xchg
lcall
cmp
xchg
xchg
and
push
iret
mov
mov
pushf
std
jae
lds
rolb
dec
aas
xchg
or
mov
cmp
lock
pop
pop
push
xchg
jo
sti
in
and
hlt
dec
out
jne
xlat
mov
mov
out
pcmpgtw
insl
enter
inc
ds
in
aaa
and
leave
movl
insl
call
sub
insb
and
iret
ret
pop
out
cmp
mov
rorl
jns
add
insb
inc
xchg
adc
push
add
fisttpll
pop
aaa
sbb
cmpsb
fidivs
mov
js
xor
in
in
and
iret
push
mov
test
xor
dec
popf
fmuls
popf
push
leave
pop
pop
adc
outsb
shlb
bound
sbb
jg
fstps
scas
push
pop
fsubr
shll
popf
pop
cmpsb
mov
cwtl
dec
mov
sbb
lds
idivl
sbb
jae
daa
fidivrl
pop
xor
jne
fwait
sahf
or
mov
dec
cmp
ja
adc
cmpsb
cmp
lret
int
xchg
sahf
pop
stos
xlat
inc
mov
fwait
je
cmp
outsl
shlb
repz
adc
ret
mov
lcall
lods
aam
adc
aaa
pushf
pop
lret
mov
sbb
inc
pop
sub
mov
popa
test
pusha
jge
cwtl
pop
xchg
dec
mov
dec
scas
cmp
mov
adc
jb
dec
mov
add
orl
imul
mov
test
lock
and
push
pop
jge
push
mov
sub
adc
insb
mov
daa
int
xor
test
mov
xor
loopne
out
fcompl
sub
dec
jno
pop
mov
adc
jecxz
sbb
mov
les
lods
cmp
jmp
jecxz
jnp
lods
mov
push
mov
cmpl
icebp
jge
pop
rorb
or
ret
push
sub
mov
filds
lods
xor
mov
outsb
faddl
jg
adc
in
pushf
adc
decl
daa
xor
loope
into
push
xor
cwtl
jl
orb
repz
in
mov
cmpsb
jno
inc
mov
pop
es
jnp
in
cmp
outsb
cmp
out
ds
ds
nop
in
sbb
test
or
lcall
mov
push
popl
xchg
xor
lret
repz
loopne
dec
push
adc
mov
jb
leave
jbe
enter
fmull
inc
mov
push
jnp
jne
aas
xor
or
mov
jno
outsb
scas
das
out
xchg
mov
fsubrs
xlat
push
in
lds
jae
fistpl
xchg
push
add
push
mov
addb
es
xchg
lds
repnz
add
xchg
aam
xchg
and
aam
movd
nop
cmp
lds
inc
popa
dec
jb
sbb
ds
outsl
lahf
loopne
and
cmp
pop
sub
sbb
pop
movsb
push
mov
mov
jo
mov
xor
jp
outsb
mov
jo
dec
or
xchg
out
xchg
lahf
adc
xor
gs
call
imul
xlat
sbb
mov
adc
dec
cli
jl
add
inc
stos
push
ss
mov
stc
mov
pop
gs
sub
push
hlt
in
sub
or
push
icebp
mov
and
movsl
lret
stos
mov
fdivp
les
inc
inc
in
pop
push
mov
rcll
jg
mov
sbb
mov
test
js
test
mov
inc
mov
out
cmp
mov
rcrl
scas
xor
inc
xor
fst
jp
roll
jg
or
scas
insb
mulb
push
movsl
leave
loopne
std
gs
fmulp
jns
sbbl
out
push
pop
aas
mov
ds
xor
dec
dec
or
imull
or
push
pop
cltd
jae
pop
xor
xor
sbb
dec
push
loope
les
ror
cwtl
fdivr
adc
push
push
aas
sahf
in
jmp
mov
mov
inc
mov
mov
inc
jecxz
sub
outsb
cmpsl
aas
xlat
and
xor
push
daa
fs
vpaddusb
xchg
cmpsb
call
dec
fcoms
sub
fstpl
jbe
pop
fwait
nop
mov
sbb
cmp
push
iret
or
cmpsb
insb
xchg
cmp
out
fs
cmp
popa
movsl
sub
out
in
or
addb
data16
je
repnz
cmp
and
xchg
mov
les
jo
aad
negb
daa
sub
jae
xchg
push
leave
jl
dec
jbe
mov
js
adc
ror
and
lea
push
xchg
int3
or
xor
pop
outsl
sub
stc
adc
and
and
negl
xchg
mov
cmpsl
dec
sub
pop
rcrl
psubsb
dec
or
add
imul
lea
dec
sub
aaa
sbb
mov
shrb
in
mov
arpl
and
cmp
pusha
mov
inc
andl
or
add
imul
icebp
xor
dec
shl
sub
mov
cli
xor
shll
test
push
and
ds
loope
mov
mov
clc
xchg
shll
or
lcall
test
push
mov
pop
sarl
or
xchg
fwait
push
fidivs
xor
jmp
outsl
lods
and
popa
sub
pop
ret
clc
ds
adc
push
loopne
adc
jge
push
or
roll
mov
out
pop
dec
pop
push
add
xor
std
fisttpll
cmp
hlt
adc
push
dec
or
mov
cltd
int
mov
in
lock
adc
inc
test
sbb
outsb
adc
ss
adc
dec
mov
mulb
pop
test
out
insb
in
test
sub
fists
jbe
sbb
fildl
out
bnd
out
cmpsb
mov
jp
repz
popa
jb
jl
xchg
sbb
xchg
cmc
mov
mov
sub
orb
ret
lcall
push
push
fnstcw
out
push
js
inc
inc
jmp
and
adc
push
int3
mov
je
fdivrs
icebp
lahf
mov
jnp
mov
mov
mov
mov
or
inc
enter
sub
push
data16
push
jns
js
daa
or
xorl
jns,pn
lret
daa
lret
push
xchg
pop
pop
fidivl
lret
push
pop
insl
jae
xorb
data16
mov
jmp
xchg
xor
movsb
mov
cmc
and
icebp
roll
add
adc
pop
nop
pop
jnp
out
pusha
jne
push
out
rolb
mov
mov
test
stc
iret
stos
call
movsb
dec
pop
in
jecxz
push
orb
pop
pop
dec
pop
sbb
xchg
aas
dec
sbb
sub
adcb
adc
add
roll
mov
in
cmpsb
xchg
cwtl
ficoms
xchg
aaa
add
test
sti
dec
adc
mov
add
in
aam
mov
push
jne
mov
lahf
inc
adc
sub
cmpsb
sbb
or
jl,pn
fnsave
xorb
insb
sbb
les
icebp
mov
cmp
mov
divb
sbb
nop
inc
push
push
jo
cmp
push
and
addr16
add
loop
xor
aad
aam
push
add
mov
aam
imul
in
pop
xchg
pop
popf
test
fs
aaa
mov
mov
pop
imul
inc
or
mov
lods
and
nop
cmp
loopne
mov
aam
and
sti
mov
sub
test
fs
repz
mov
mov
xchg
ret
das
aaa
rorl
push
repz
jb
or
push
cs
cmp
shll
stos
cld
mov
jmp
movsl
or
shll
cmc
inc
dec
add
lds
or
dec
stc
in
xor
aad
lds
or
icebp
or
lcall
out
insl
jle
sbb
xor
fucomip
daa
lahf
pop
mov
mov
stos
add
inc
out
mov
jne
or
push
rorb
daa
push
daa
rcr
dec
in
sub
mov
mov
inc
decb
mov
pop
and
jns
pop
out
inc
add
outsl
je
and
pop
push
adc
dec
sar
pop
pushf
or
in
sbb
shrl
pop
xchg
sbb
push
icebp
pushw
ja
inc
push
sub
push
mov
iret
xor
or
jle
jmp
add
mov
xlat
mov
test
sbb
mov
inc
mov
cmpsl
cmp
mov
jecxz
add
data16
andl
and
mov
test
out
in
aad
shl
loope
cmp
popf
jle
xor
cld
sub
cld
out
in
xor
repnz
rcrb
scas
arpl
int3
pop
mov
outsl
icebp
xchg
test
int
mov
push
rcrb
add
or
xchg
out
lahf
lret
or
mov
movsb
xor
mov
fidivs
scas
inc
outsl
pop
sarb
mov
fnstsw
xor
or
daa
js
pusha
jno
and
loope
pusha
repz
adc
insb
out
inc
das
outsl
jnp
in
dec
cli
psllq
mov
std
push
xor
sub
mov
or
add
aas
xor
pusha
hlt
pop
fwait
sbb
test
imul
dec
push
out
clc
sub
icebp
inc
add
push
mov
mov
mov
jl
sbbl
mov
decb
jns
movsb
jne
mov
xchg
lea
shl
bound
mov
aam
arpl
shl
scas
filds
out
mov
push
and
mov
sbb
cmpsl
add
push
mov
shll
movsb
sbb
mov
mov
push
loope
dec
xor
leave
mov
pop
add
aas
sbb
add
xor
xor
insb
jmp
jg
dec
iret
dec
xor
sub
insl
cmpsl
mov
mov
cmp
pop
or
bound
call
pop
dec
xlat
push
je
jl
mov
orl
jp
aam
cmp
pop
mov
jg
ja
es
movsl
addb
mov
mov
movsb
xchg
pop
cld
pop
and
in
xor
test
pop
sbb
pop
xchg
pop
xor
mov
cs
sub
ret
jge
cld
shlb
cmpsb
popf
pop
out
sti
fwait
int
aad
pop
adc
add
pop
sbb
imul
xorl
push
jae
mov
sarl
je
xor
in
into
insb
jg
add
mov
jp
dec
sub
mov
mov
jecxz
test
xchg
sub
fldcw
mov
add
repz
lock
pop
cmp
aas
aaa
aad
sub
inc
imul
dec
cmp
ret
out
int3
idivl
mov
mov
xchg
es
divb
jge
lds
movsl
loopne
xchg
outsl
scas
xchg
add
pop
ss
push
int3
mov
lods
stos
movsb
xor
cwtl
rclb
jmp
mov
out
inc
cld
and
pop
and
cmpsl
enter
nop
scas
xchg
adc
insl
mov
mov
pop
das
int
cmpsb
jo
fadds
cli
rorb
test
jno
outsb
call
es
sar
sbb
push
mov
push
sbb
insl
ja
mov
xchg
jbe
lods
lea
loop
les
sbb
add
mov
js
mov
xlat
jmp
cmp
mov
sub
cmp
popf
test
jnp
shrl
push
aaa
frstor
scas
lret
inc
cmp
test
and
sbb
ja
sahf
jnp
sbb
mov
mov
in
ss
mov
stos
dec
repnz
add
push
cmpb
sub
stos
cmp
and
inc
xchg
int3
dec
into
sbb
notb
jmp
push
test
fwait
sahf
jle
stc
std
sahf
ja
inc
xchg
cld
das
xor
mov
outsl
adc
push
push
fnstsw
int
ljmp
in
mov
sub
int
rorl
sub
imul
jbe
lret
pop
pop
fdivl
movsl
sar
ficomps
push
fidivrl
sahf
into
and
cltd
aam
outsb
outsl
or
cmp
xor
add
mov
jo
mov
mov
mov
or
cmpsl
ljmp
int
inc
mov
xchg
and
adc
call
fldcw
and
mov
jg
add
add
divl
outsb
push
fstpt
mov
add
dec
add
enter
inc
call
xor
mov
je
das
sub
cld
outsl
inc
adc
push
shrb
jl
push
pushf
dec
mov
lock
xchg
jae
jne
inc
dec
xlat
push
or
cld
mov
mov
jecxz
sahf
lret
push
lahf
nop
push
movsb
jnp
jbe
or
xorl
pop
fwait
pop
and
outsb
iret
push
andb
mov
mov
shl
arpl
pop
push
aad
arpl
xor
scas
jne
jbe
testl
ja
sbb
stos
adc
test
xchg
movsb
xor
jns
or
fnsave
je
push
sarl
pop
dec
xchg
push
pop
scas
test
push
hlt
shlb
out
push
xchg
mov
push
bound
mov
add
dec
call
adc
faddl
lahf
int3
popa
jecxz
jns
pop
repz
jg
cmp
cmp
xchg
movsb
out
jge
mov
push
sub
xor
cs
cs
in
cltd
inc
xchg
in
mov
and
sbb
or
iret
sahf
cs
fldcw
leave
fldl
mov
xor
cmp
mov
rcr
into
push
in
add
jle
cltd
mov
icebp
addb
push
xchg
fimuls
sti
inc
iret
mov
xchg
push
int3
roll
mov
jmp
jl
jl
lock
sub
insl
and
dec
fisubrl
je
sub
xor
fldl
sar
mov
pop
insl
jge
aas
mov
push
push
push
popf
out
push
imul
cmpb
sahf
pop
rolb
into
ret
and
xchg
jb
push
jb
test
roll
jle
lret
inc
inc
enter
or
sbb
dec
orl
lret
sub
pop
mov
sub
shlb
icebp
pushf
mov
xchg
outsl
xor
adc
jbe
push
arpl
mov
stos
xor
iret
inc
xchg
inc
push
mov
cltd
shll
and
in
pop
or
pop
pop
loopne
and
fildl
mov
push
push
inc
mov
sbb
sbb
jno
jecxz
ja
std
sub
xor
into
mov
pusha
shlb
push
xchg
lea
mov
fcomps
and
push
jno
mov
pop
mov
stos
aaa
push
daa
xchg
les
fildl
mov
jmp
xchg
les
adc
rolb
aas
inc
insl
mov
fisubs
jno
sub
xchg
cmp
inc
push
dec
mov
mov
pop
mov
adc
leave
fnstenv
fidivs
push
mov
mov
cli
inc
mov
mov
and
push
shrl
pop
lcall
and
lods
cli
pop
cs
push
pushf
and
mov
loope
das
push
jo
aas
out
jno
es
addr16
xchg
and
xchg
lret
dec
sbb
pusha
push
pushf
testb
cmc
jno
outsb
inc
loop
sub
repnz
out
sub
jecxz
xchg
adc
ret
loopne
outsl
popf
inc
imulb
and
es
sub
les
ret
ds
sub
aaa
faddl
push
lds
and
test
push
mov
sbb
sbb
sub
int
adc
fbld
xor
cmpsl
inc
jae
push
imul
ss
pusha
adc
jle
and
repz
test
jp
out
out
push
idivb
cmp
and
mov
or
cmp
or
sbb
gs
xchg
ffreep
xor
jecxz
push
test
rorl
lret
pop
or
inc
cld
ljmp
sbb
jne
sbb
das
rol
pop
test
jb
loope
mov
mov
xchg
sub
shl
cmp
inc
fdivrl
dec
adc
inc
mov
outsl
jnp
arpl
mov
aaa
xor
mov
leave
es
and
cmp
out
iret
js
xor
pop
sbb
daa
pop
ds
ret
and
test
fnstenv
xchg
outsb
add
xor
pop
nop
ret
test
adc
lea
in
push
xchg
mov
out
lret
test
or
inc
push
test
add
inc
lods
xchg
push
inc
jne
outsb
pushf
xor
xor
dec
imulb
jecxz
shlb
cmpsb
mov
cmpsl
sub
addr16
mov
sub
daa
pushf
sub
in
stos
loopne
adc
jle
mov
negb
dec
aad
jecxz
lods
not
lret
lods
fldcw
lahf
enter
pop
push
ficompl
loopne
out
xlat
xor
clc
clc
mov
xchg
dec
or
sbb
fmuls
loope
jg
lahf
loope
addr16
lret
adc
mov
sub
out
cmp
mov
pop
fistl
dec
cmc
loope
test
pop
aas
adc
popf
shll
out
inc
mov
xchg
cmp
jecxz
pop
mov
sti
or
sub
xchg
repnz
popf
cmp
daa
dec
add
cltd
cwtl
add
cmp
out
xor
hlt
sub
loop
jnp
add
and
inc
sub
js
lods
out
jnp
js
stos
xchg
dec
or
lods
add
mov
xor
mov
pusha
in
jb
xor
js
into
cmp
xchg
cmpsb
scas
adc
test
adc
jae
xchg
inc
repz
sub
add
sub
cs
gs
pop
jge
clc
dec
cmp
dec
popa
loop
jg
push
jne
add
cmc
scas
dec
xchg
and
xchg
and
ss
jle
ljmp
es
pop
out
jg
ud2
mov
cmp
xchg
fildll
pop
pop
sahf
inc
mov
cmovne
mov
insb
aad
call
push
mov
shrl
pop
rcll
popl
push
lahf
sbb
and
clc
and
jne
lods
leave
and
add
arpl
loopne
cmpsb
aaa
decl
jl
loopne
lahf
xor
jb
and
and
inc
jo
push
pop
or
pop
and
and
push
das
pop
xor
in
cmpsl
and
mov
es
shll
outsl
scas
inc
mov
lahf
add
fimull
sti
lods
sti
jle
aam
fildll
mov
cwtl
fmull
mov
or
aad
mov
and
shufps
pop
or
test
sbb
sti
cmp
or
inc
sub
and
stos
push
xchg
test
pop
mov
pop
add
jmp
in
pushf
scas
dec
dec
popa
in
iret
loop
lret
inc
inc
and
enter
push
fisubs
scas
test
cmpsl
cmpsb
adc
push
out
pop
jl
les
jo
movsl
jmp
push
jne
out
adc
lret
lock
jo
les
mov
mov
mov
mov
or
or
cli
sarb
ss
mov
xchg
out
imul
jg
fwait
inc
mov
movsl
stos
dec
imul
std
mov
lock
xor
push
inc
xchg
shll
cmp
or
cmp
cmp
mov
adc
sub
je
or
into
xor
mov
shrl
xor
jae
je
xor
scas
mov
inc
push
out
and
jbe
ficoms
mov
aad
sahf
sarl
in
mov
jns
ret
sub
cmp
lods
add
mov
insl
lcall
pop
aaa
stc
aad
inc
sti
push
or
cmp
mov
ss
xchg
xor
inc
inc
imul
lea
mov
cmp
pop
jno
mov
or
dec
outsb
shlb
testb
pop
es
outsl
xchg
mov
arpl
mov
insb
iret
push
sub
sub
call
or
sbbb
ja
push
inc
and
out
xchg
xor
mov
daa
adc
addr16
sbb
cs
imul
ficompl
jo
fsubr
testb
mov
mov
ja
mov
daa
add
and
fisubrs
sbb
xor
je
aas
leave
dec
jb
lods
and
das
cltd
insl
add
jnp
jmp
fsubl
xor
inc
and
jae
cmp
jbe
xlat
lahf
pop
lcall
repnz
adc
dec
mov
mov
jl
jb
jle
sbb
mov
push
inc
mov
cmp
lds
jle
lock
stos
mov
push
shrb
fists
cwtl
xchg
mov
outsl
dec
cli
test
jle
je
pusha
les
sbb
jns
and
arpl
fcomip
pop
xchg
push
fstl
insl
inc
adc
push
out
hlt
mov
pop
addr16
inc
lock
add
pusha
mov
mov
push
xor
push
lret
icebp
pop
push
sub
mov
xchg
popf
mov
pusha
inc
mov
movsb
adc
mov
aad
repnz
test
cmp
and
repnz
pop
sub
shr
push
adc
outsl
jmp
xchg
stos
jp
mov
stos
ja
pushf
fsubr
arpl
jle
mov
lock
arpl
mov
lock
mov
ja
and
adcl
cmpsw
xlat
adcl
mov
cli
out
ljmp
cmp
sbb
jge
inc
and
or
aaa
jle
cmp
xor
adc
mov
fwait
xor
int
mov
sub
inc
ja
je
sqrtps
nop
test
icebp
mov
sbb
insl
adc
mov
ja
xchg
push
inc
dec
pushl
push
test
pushf
xor
pop
add
ljmp
repz
mov
push
jp
stos
add
stos
ret
cltd
sub
rorb
insl
mov
shl
pop
dec
std
dec
shrl
mov
incb
repz
mov
sbb
push
fistpll
add
mov
lea
fs
lret
imul
mov
das
xor
insb
and
movsb
aaa
jmp
xchg
ds
mov
or
outsb
mov
das
pop
stos
sahf
aas
sbb
push
enter
push
pop
push
fwait
sarb
push
dec
into
test
movsb
jno
int
data16
lods
movsl
ss
fnstenv
mov
mov
aas
imul
dec
ret
mov
gs
into
outsl
stos
push
mov
sub
push
xor
push
movsl
bound
xlat
push
jp
bound
movsl
push
ret
push
sbb
xchg
sti
stos
cmp
sbbl
cs
and
adc
and
insl
aad
push
mov
add
xchg
adc
jnp
enter
pop
cmp
cmp
nop
js
mov
mov
adc
rcr
es
test
pop
pop
fs
popa
mov
mov
insb
jg
add
int
out
repz
pop
addl
dec
lcall
or
sbb
dec
xchg
cltd
in
inc
cmp
cmpb
loopne
lods
and
inc
pop
pop
push
ljmp
insb
push
cmp
or
outsl
je
pop
test
sahf
push
ret
aas
das
or
pop
movsl
cwtl
out
add
cld
and
push
enter
pop
xchg
add
arpl
mov
adc
mov
mov
add
push
movsl
and
out
outsl
mov
movsl
xor
lret
mov
repnz
movsl
sbb
bound
push
shld
in
je
jne
jmp
lcall
test
add
lahf
pop
push
mov
xlat
and
sub
and
inc
cmp
scas
pop
outsb
arpl
lods
jmp
inc
nop
jae
es
xor
sub
hlt
inc
inc
push
shlb
repz
push
std
sbb
xchg
daa
sbb
jae
add
sbb
add
mov
repnz
stos
iret
dec
jp
pop
jmp
shll
sbb
inc
pop
fnstsw
jmp
cld
fwait
sub
jge
lds
xor
push
sub
adc
aaa
sbb
in
ficoml
shlb
lret
xor
add
dec
cs
fdivs
imul
jns
popa
dec
xchg
inc
or
test
mov
jne
cmp
lods
notl
out
or
or
loopne
lcall
pop
int
fdivrl
push
inc
leave
int
std
mov
push
into
outsl
or
fsubrl
data16
or
cltd
scas
jbe
cmp
jmp
sbb
jb
sbb
add
xor
pop
cmp
mov
test
iret
mov
test
add
in
adc
fcompl
push
imul
pop
movsb
xchg
sub
mov
ja
rcll
push
or
pop
insl
imul
adc
loop
cmp
das
fdivl
or
enter
dec
push
ret
cmp
and
dec
sub
loope
stos
adc
lret
or
mov
scas
outsb
and
sti
lret
aas
mov
es
div
inc
xchg
push
sub
bound
insl
adc
ret
jo
push
xchg
fistl
or
add
jae
dec
lcall
lahf
loopne
sbb
stos
fldenv
xchg
pushf
adc
es
mov
stos
cmpsb
jge
mov
and
mov
pusha
sub
adc
adc
aad
mov
leave
iret
lret
push
decb
adc
sbb
cwtl
xchg
cli
pusha
xchg
mov
mov
xchg
lret
jnp
and
push
and
in
clc
mov
rolb
outsb
and
xor
lods
clc
pushf
hlt
out
jmp
push
xor
adc
stos
adc
iret
imul
xorb
sbb
out
ffreep
lds
pushf
sub
mov
xor
push
out
pop
add
outsl
es
icebp
outsl
sbb
or
pop
xor
or
mov
addr16
add
shl
das
cmpl
jp
outsb
xor
shll
or
push
cld
push
lds
sahf
cmp
out
push
out
rcrl
sbb
test
das
adc
xchg
movsb
ljmp
call
in
push
addr16
aas
rorl
pop
in
add
fdivrl
xor
or
pop
xor
sahf
rol
insb
mov
rcrl
insl
inc
or
and
xlat
jno
pop
inc
into
inc
jns
loop
and
jecxz
fdivrl
xchg
or
xor
stos
pop
sahf
inc
pop
cmp
mov
mov
bts
js
aas
jecxz
rorb
ja
scas
and
loope
or
lret
mov
mov
cmp
daa
mov
and
in
xchg
add
out
sbb
pop
test
inc
cs
pop
xchg
add
cmpsb
inc
inc
shrl
aam
jge
xor
mov
and
popf
push
nop
push
xchg
popa
pavgw
je
jnp
loope
and
jl
cmp
inc
es
xchg
or
lds
gs
pop
fs
mov
lcall
mov
pop
adc
movsl
dec
insl
jne
inc
jmp
stc
pop
lock
popf
jbe
dec
or
pop
idivb
inc
mov
mov
sbb
pop
xlat
sbb
sbb
mov
es
clc
andb
es
sub
testl
adc
stos
out
dec
into
daa
add
fisubrl
bswap
and
push
mov
je
dec
xor
push
loopne
and
dec
shlb
std
inc
dec
out
in
xlat
test
cmp
ss
push
xor
dec
add
add
xor
xor
mov
lea
mov
sarb
adc
or
push
xor
dec
push
out
pop
and
adc
clc
fisubl
sub
ds
xchg
insb
cmpsl
sahf
inc
dec
orl
cmp
add
das
mov
mov
incl
clc
adc
stc
jmp
cmpsl
xor
fdivr
jnp
mov
leave
jg
and
xchg
mov
loopne
jge
or
and
xor
mov
mov
dec
mov
inc
mov
mov
mov
cmp
push
pushf
mov
mov
mov
imull
sbb
cwtl
pop
jo
push
ja
adc
lock
test
xchg
sub
dec
push
into
mov
mov
imul
cmp
faddl
stos
or
pusha
aad
pop
push
sbb
inc
mov
sbb
xorb
push
pop
jb
fldenv
lahf
insl
pushf
cli
pop
out
pop
rcrl
iret
fisubrs
dec
sbb
mov
cwtl
lahf
dec
daa
sub
xchg
rcr
add
sti
mov
adc
xchg
jne
lret
jmp
or
js
dec
pop
cmp
adc
popa
cmp
mov
push
sarl
jg
adc
outsl
insb
fists
lret
fstps
iret
or
cltd
mov
mov
mov
dec
xlat
push
xchg
stc
repz
mov
lock
xchg
fucomi
int3
notb
outsl
and
in
xor
ret
jo
lret
adc
test
pop
jns
xchg
in
or
out
pop
sahf
xchg
add
xchg
mov
and
and
sbb
inc
cmp
dec
or
cwtl
adcl
js
xor
aam
outsb
pop
and
rcrl
sub
ss
sti
ds
into
icebp
dec
push
into
rorl
mov
in
sbb
inc
out
testl
adc
mov
pop
pop
or
cmp
push
loopne
xor
mov
push
inc
test
out
cltd
xchg
imul
or
adc
mov
sub
jo
inc
repz
in
mov
pop
scas
jbe
fbstp
das
outsb
add
popa
int
add
or
mov
pushl
mov
and
mov
shlb
jge
pop
rcrl
ja
fstpl
shlb
jle
or
mov
lea
rcrl
orb
xor
lret
cwtl
mov
or
repz
sub
pushf
cmp
cwtl
loopne
jno
nop
xor
shrb
push
push
push
push
stos
sti
loop
and
xor
and
push
shll
dec
sbb
jle
jnp
push
orl
pop
cli
fwait
adc
repz
aaa
mov
push
push
and
push
mov
pop
out
js
shr
xchg
mov
daa
aad
or
push
fwait
mov
enter
outsl
ds
mov
ja
repnz
pop
daa
mov
scas
loope
not
mov
mov
push
popf
adc
in
insb
stos
pop
pop
pushf
fsubrs
iret
loope
pusha
orb
pop
ror
adc
mov
imull
mov
stos
test
mov
push
jb
inc
mov
orl
stc
xchg
push
jne
pop
sahf
sbb
das
jp
dec
popf
pop
sti
add
fimuls
sahf
popa
sbb
ret
fs
movsl
jo
loop
cltd
aas
js
inc
je
aad
push
add
cmp
inc
movsl
les
inc
pop
xor
mov
mov
lods
sbb
xor
test
mov
test
pop
cmp
outsb
xor
mov
icebp
ret
or
sub
xor
ud1
sub
fcmovnbe
push
int3
nop
dec
ja
or
jl
push
call
pop
add
arpl
shr
mov
pop
push
jp
mov
or
leave
aas
sbb
add
sub
mov
adc
hlt
mov
mov
mov
popf
sub
or
pop
out
mov
loope
xor
sub
stc
cwtl
rcrw
or
pop
dec
int3
sub
sbb
mov
pusha
push
addr16
dec
jne
sarb
push
xor
fimull
mov
loop
and
pop
imul
inc
mov
nop
shrb
jb
inc
fistpl
decb
sbb
test
mov
dec
sub
mov
dec
rol
mov
ficompl
lcall
addr16
cmpsl
jle
dec
loop
add
into
rcrl
jno
insb
movsb
jge
pop
stos
mov
iret
sbb
mov
push
fldenv
xchg
mov
sbb
sete
mov
add
cmp
jge
movl
xchg
mov
fldl
dec
ret
mov
mov
cmp
addr16
test
and
mov
mov
and
mov
sbb
stos
pushf
jge
daa
mov
dec
shlb
mov
inc
add
inc
xchg
mov
out
add
jne
xchg
inc
add
out
inc
cld
add
mov
jb
jo
or
jg
mov
pop
inc
or
adc
add
orl
cmp
lea
and
xor
int3
push
inc
push
arpl
sub
movsl
push
mov
inc
mov
in
nop
test
or
hlt
fisubl
dec
dec
push
repz
data16
mov
stc
xlat
sbb
xchg
push
mov
ficoml
inc
arpl
xor
mov
std
repz
mov
sbb
push
stos
mov
mov
idivb
push
push
xchg
sets
mov
in
or
scas
push
incb
sarl
jb
inc
jne
out
ljmp
fisubrl
inc
iret
pusha
stc
aad
cmp
pop
xor
inc
ja
and
jmp
out
loope
in
sub
loopne
sti
sub
jecxz
push
stc
mov
aam
sahf
test
inc
iret
test
xor
add
inc
mov
or
mov
lret
sbb
cli
jg
shr
xchg
arpl
fisubl
aaa
mov
lods
pop
pop
sbb
jno
and
pop
int3
adc
sbb
aam
adc
cmp
adc
pushf
pop
mov
loop
into
addr16
popa
and
rorl
stos
mov
jae
lret
or
fsub
jp
es
shlb
xchg
ret
popa
es
mov
pusha
mov
xor
leave
addr16
pop
sbb
mov
xchg
mov
push
cwtl
xorl
ljmp
in
orl
pop
jmp
and
jp
jmp
or
lea
cli
jge
mov
cmpsl
fnstsw
loop
test
and
push
sub
push
in
fmul
out
mov
jmp
test
pop
insb
dec
decb
pop
xor
lods
sub
dec
into
imul
push
shll
in
pop
aad
lea
repnz
ljmp
mov
add
xor
pop
js
lods
pop
lods
in
xor
or
or
dec
int
lret
xor
mov
call
sbb
sub
cmpsb
cli
idiv
dec
cmp
sub
or
jae
test
repz
push
icebp
jmp
shlb
hlt
inc
dec
test
pop
fcompl
dec
mov
inc
mov
ret
fists
cmc
out
dec
adcb
scas
js
pop
jecxz
je
cld
push
or
dec
stc
daa
or
ds
push
pop
lcall
xorl
jo
insb
pushf
mov
push
mov
aas
jb
dec
repz
mov
dec
cmp
lret
mov
test
sub
shll
and
sbb
xchg
cmpsl
orl
push
or
out
insb
or
insb
sti
adc
xor
int3
shrl
push
int3
mov
stos
xchg
int
in
mov
jb
mov
push
leave
inc
xor
add
sbb
sahf
int
stos
iret
sahf
imul
lret
push
lret
je
push
inc
mov
mov
in
and
aaa
adc
inc
idiv
or
pop
mov
xchg
sub
rcll
mov
int3
sub
inc
rcrb
cmpsl
inc
xchg
dec
ficoml
roll
fcompl
fistpl
cmp
push
ds
pop
mov
cmp
scas
add
and
in
sbb
fdiv
jnp
mov
test
ret
inc
push
icebp
add
test
adc
dec
andl
push
rcrl
es
or
xor
test
aad
add
adc
pop
dec
gs
fsub
push
push
test
loopne
mov
clc
scas
pop
movntq
enter
pop
dec
dec
pop
pop
fisubrs
mov
inc
mov
enter
lret
leave
xchg
pop
and
xchg
mov
xchg
mov
inc
ret
sarl
push
jecxz
movb
lds
jge
inc
arpl
imull
das
mov
popf
stos
in
jmp
cmc
inc
mov
daa
lods
insl
push
outsl
aad
and
and
mov
movsb
into
fisubl
or
lods
das
or
lock
push
mov
fcmovb
sbb
scas
nop
es
pop
popa
push
sbb
cmp
xor
jg
mov
xor
pop
add
dec
sldt
mov
pusha
mov
fadds
jo
add
fcoms
mov
lods
pop
js
pop
mov
mov
ficompl
lret
jge
mov
adc
sub
jl
ljmp
cmp
fwait
bound
and
mov
fbstp
into
insb
xorb
addr16
cmp
dec
push
lock
es
jg
icebp
sbbl
cs
jle
push
inc
and
mov
mov
or
xor
pop
mov
enter
sbb
mov
fadds
and
out
aas
ljmp
xlat
xchg
cs
movsb
inc
movsl
cli
mov
push
popa
mov
dec
jmp
insb
xchg
xor
into
xor
repnz
xchg
loope
jae
sbb
pop
call
sbb
arpl
imul
push
jne
fsubl
push
daa
dec
aad
lahf
add
dec
inc
mov
dec
imul
adc
fmuls
das
mov
out
pop
lods
jo
subb
das
sbb
mov
fisubrs
and
push
jbe
inc
sbb
sbb
mov
out
sub
inc
xchg
mov
inc
mov
add
pop
and
outsb
sahf
inc
and
cmp
stc
fsubrs
sti
fimull
mov
and
pop
lods
xor
push
xchg
or
jecxz
fsubl
dec
cmp
stos
xor
clc
ljmp
jmp
push
leave
jg
sti
xchg
rolb
or
loop
pop
andb
out
ljmp
xor
xor
cmp
in
std
pop
sbb
mov
aaa
jmp
push
mov
lock
mov
lret
add
icebp
test
xchg
daa
aaa
aaa
add
mov
or
sar
neg
jae
mov
xchg
push
cmpsl
push
jecxz
icebp
shlb
push
test
adc
mov
jle
ret
mov
shrl
or
xchg
jno
cld
adc
test
push
test
push
mov
push
or
xchg
push
pop
stos
paddusb
bound
popa
push
ret
lods
cli
push
xor
inc
in
mov
fsubrl
arpl
push
lock
mov
cltd
adc
sbb
jno
push
dec
test
movsb
and
cmp
popa
and
jecxz
fnstenv
shlb
movsb
cmp
test
fisttpl
or
mov
sbb
dec
inc
push
das
ret
mov
cltd
pop
sub
shl
call
mov
mov
data16
test
es
in
hlt
lock
fnstcw
adc
cmp
iret
xchg
mov
shl
push
mov
gs
icebp
bound
enter
pop
dec
mov
lret
stos
mov
loope
aad
sub
or
add
and
cli
pop
or
aaa
aad
add
fistps
push
xor
cmp
cmp
mov
clc
mov
add
div
sbb
insb
ja
mov
loope
inc
push
mov
sub
call
in
xchg
and
pushf
adc
adc
cmpsl
mov
insb
enter
dec
sahf
ret
iret
scas
test
int
jmp
mov
jo
sbb
les
and
add
mov
or
fistpl
and
ret
repz
ss
js
xor
sub
int
fdivrs
adc
sub
rclb
popa
inc
xchg
sub
add
stc
lods
pop
les
test
pop
rcr
cmpsb
jae
push
mov
lock
gs
popf
mov
cmp
or
lret
and
shrl
jne
movsb
mov
dec
cmp
in
add
adc
mov
and
push
jne
sbb
dec
mov
mov
out
xchg
inc
mov
out
add
das
jg
nop
xor
test
sarb
mov
sahf
fs
lock
rol
scas
cmpsl
fldcw
shld
lret
ja
lcall
mov
cld
jle
jmp
popa
push
sbb
shll
aad
das
mov
in
jl
arpl
fstl
adc
cwtl
sarb
out
pop
repz
add
je
in
fstp
test
and
xor
sub
mov
mov
leave
mov
fs
xor
pop
cmpsl
mov
dec
loop
lret
push
cld
jnp
mov
lret
xor
push
push
push
aam
fdivr
jne
xor
inc
push
jp
into
lret
and
sbb
scas
test
call
xorl
loop
aam
pushf
push
adc
mov
stos
dec
push
jmp
cltd
adc
int
and
jecxz
add
xor
imul
icebp
or
or
adc
popa
insb
cmp
mov
arpl
xor
sahf
sar
data16
inc
inc
push
imul
leave
fstl
das
xor
mov
xor
roll
adc
inc
fwait
sbb
lods
rol
lds
lret
jle
adc
loop
dec
lahf
adc
pop
shll
stos
fldenv
add
add
push
pop
xchg
jmp
lods
hlt
cmc
xlat
inc
mov
lahf
pop
mov
inc
loope
pop
mov
fldenv
stc
mov
lds
cmpl
aaa
push
inc
pop
stos
mov
mov
sub
inc
push
add
ret
dec
and
repz
jo
dec
decb
fnstenv
xor
or
mov
mov
lahf
mov
push
pusha
add
cmp
cmc
fiaddl
dec
sbb
roll
push
adc
sub
xor
and
push
xchg
aaa
xor
jmp
test
xchg
jno
frstor
sub
ljmp
ja
add
out
adcl
pop
push
outsl
test
aad
imul
fstpt
lea
add
or
xor
in
int3
dec
insl
xchg
xchg
lods
mov
and
std
shlb
loope
mov
repz
xor
cmc
addr16
push
mov
call
rcrb
clc
iret
or
mov
loopne
js
mov
fdiv
and
adc
repnz
int
cmp
movsb
jbe
cmc
in
or
and
icebp
scas
jle
test
xchg
imul
je
insl
pop
sub
cmp
xor
cmc
movsb
add
dec
jmp
repnz
sub
in
ret
xor
add
mov
mov
jmp
xchg
sahf
mov
lea
dec
sbb
inc
das
cwtl
cmp
sahf
push
cmp
outsl
je,pt
cmpsb
jb
fisttps
lock
icebp
cmpb
cmp
push
lahf
cmp
insb
mov
lret
jp
push
cmc
push
dec
mov
inc
out
push
mov
rcrl
xor
mov
add
cld
xchg
adc
push
pop
pushf
mov
fs
sbb
shl
lahf
sbb
fmull
cs
loop
and
data16
inc
aam
mov
shl
mov
add
and
push
repz
ja
testb
outsb
cmc
jl
inc
dec
mov
test
mov
add
pop
sahf
lods
push
add
add
push
mov
push
das
pop
and
sbb
popa
jge
cmp
adc
cli
rcl
mov
ds
ss
sbb
cmp
jmp
sub
call
cs
jle
mov
ljmp
ret
jno
inc
enter
sahf
jb
fstpt
cmp
fcmovu
test
push
mov
testb
fwait
icebp
and
mov
rol
cmp
push
gs
jge
mov
mov
aam
in
mov
lret
lock
out
aam
xor
aam
pop
mov
mov
sub
imul
push
std
fdivrp
or
add
xor
mov
adc
push
xor
or
sbb
adc
add
out
outsb
mov
fsubrl
jbe
scas
stc
enter
test
les
test
das
pop
jp
mov
sbb
enter
push
sbb
fcmove
and
xchg
or
cmc
mov
leave
fcomp
mov
jecxz
inc
scas
test
mov
out
mov
movsl
enter
sub
inc
sub
mov
shlb
jg
pop
psrld
data16
mov
out
icebp
mov
add
fnstenv
aad
addr16
bound
emms
xchg
aaa
frstor
ljmp
sub
cwtl
jcxz
cltd
jae
scas
dec
test
fnclex
push
test
leave
pop
add
or
jne
xor
xchg
sbb
ret
addr16
xchg
mov
movsb
hlt
test
je
mov
jl
movsb
dec
dec
repnz
xchg
shll
loop
xchg
jmp
cld
es
cmp
or
push
or
ljmp
repz
fbld
iret
mov
push
push
imul
dec
bound
mov
mov
cmp
mov
jne
mov
mov
repz
fs
jle
jns
pop
pop
inc
xchg
in
call
sub
xor
jno
xchg
movsl
jmp
popf
test
popf
inc
mov
adc
mov
push
fsubrl
cmp
inc
addr16
mov
arpl
adc
sbb
add
push
inc
sub
mov
jge
fstpt
mov
xor
xlat
pop
aas
inc
push
scas
push
vmulps
stc
test
sbb
and
in
and
das
lret
in
sarl
loopne
mov
xchg
sbb
push
in
xor
sbb
push
xor
sub
bsr
daa
cmpb
dec
mov
addb
out
pop
pop
scas
ds
cltd
sub
cmp
push
xor
aad
scas
mov
cmpsb
and
cmp
push
inc
or
mov
sahf
stc
adc
fucom
sub
mov
aam
cmp
push
cmp
xchg
pop
or
ja
add
iret
rcl
push
cmp
imul
cmp
jge
shlb
lcall
sbb
in
inc
push
cmp
or
mov
xlat
mov
xchg
cmpsl
imul
test
cmpsl
mov
test
or
xchg
jno
lcall
orb
sub
outsl
lahf
pusha
and
mov
mov
sbb
popa
ss
cmc
fstpt
test
ret
and
sbb
ja
lahf
xor
out
jle
xchg
xchg
leave
dec
cs
cld
xchg
popa
aam
loop
add
nop
aam
pop
and
lahf
cmc
inc
sbb
andb
xor
or
inc
sbb
nop
mov
popa
mov
jbe
jmp
jne
test
pop
sbb
and
xchg
lret
mov
pop
xor
sbb
xor
shrl
shl
jnp
mov
lea
mov
pop
es
mov
out
scas
jo
icebp
sub
fs
andb
mov
dec
add
mov
or
cmp
fimull
loopne
pop
mov
xor
hlt
mov
rclb
ljmp
rcrb
ss
int
mov
cmp
flds
and
aaa
pop
les
push
mov
jge
xchg
stc
adc
cmp
push
mov
jle
jle
out
ja
jne
aas
mov
out
pusha
sub
inc
add
dec
or
xchg
jne
mov
fwait
adc
daa
sub
mov
cltd
imul
cltd
push
and
pop
xor
mov
scas
sar
xchg
mov
push
test
xchg
xchg
mov
jl
mov
mov
inc
aam
frstor
xor
cmp
fstp
mov
outsb
jne
enter
sbb
shl
mov
jb
cmc
out
pop
movsb
add
mov
ret
imul
aad
insl
rcrb
adc
pushf
mov
fs
mov
pop
sbb
cmp
fucomip
test
daa
negb
movsl
mov
xchg
inc
rcrl
fiaddl
add
lret
mov
or
test
add
push
xchg
sahf
sbb
adc
cmp
enter
aas
filds
fwait
imul
mov
or
inc
xor
fmuls
adc
or
callw
sbb
out
dec
or
lret
adcb
sub
mov
addr16
push
pop
fldt
xor
int3
aam
xchg
pop
cli
mov
cmpsl
testb
movsb
mov
or
iret
mov
popf
mov
or
pop
push
js
jge
sub
pop
push
call
push
dec
les
dec
sub
pop
or
adcb
adc
xchg
jle
jb
add
outsl
movb
repnz
cmpl
inc
addl
or
xchg
adc
loopne
xor
out
mov
cmpb
push
xchg
fnstsw
fistpll
aad
dec
sbb
or
xchg
adc
mov
loope
cs
push
rcr
jecxz
setae
lock
lahf
out
mov
xor
ret
dec
nop
adc
pop
ss
or
ljmp
stos
cli
invd
enter
jne
andl
fldl
loope
sbb
daa
loope
mov
shll
jno
mov
adc
pop
pop
cmp
cld
push
into
cmpsl
mov
scas
push
notb
adc
push
fadd
addr16
inc
test
xor
lock
popa
lock
ljmp
fwait
cmp
subl
add
or
dec
lods
inc
pop
out
adc
fwait
adcb
shlb
adc
imul
jmp
pop
inc
mov
imul
push
push
mov
xchg
testb
xor
jbe
sub
bound
ja
xchg
push
mov
insb
jecxz
loopne
or
icebp
lret
cmp
jne
push
repnz
mov
inc
pushf
or
repnz
sub
xchg
clc
ds
pop
inc
fsubr
sbb
les
pop
add
repz
mov
adc
shl
or
push
sbb
lods
xor
cmp
push
incb
dec
inc
enter
rcll
mov
arpl
sub
mov
sbb
push
inc
or
mov
mov
scas
rcll
fwait
pop
lahf
jnp
fldl
cmp
sub
cmp
sbb
jno
int3
js
insb
rol
hlt
inc
std
into
mov
jmp
loopne
push
incb
xchg
insl
pop
xchg
mov
fistpll
mov
cmp
ja
stc
movsl
pop
mov
add
cmp
int
fdivrl
xchg
xchg
inc
xor
mov
sub
int
mov
mov
shlb
pop
pop
mov
loop
sub
pop
ret
mov
dec
das
jmp
movsl
push
rcl
pop
aad
fwait
rcl
jbe
movsb
in
mov
lret
dec
les
out
orl
pusha
adc
pop
imul
xor
popa
lods
push
sets
xor
popa
mov
mov
lock
dec
rorb
out
jno
sarb
fstps
mov
jge
push
pop
pop
out
mov
lcall
push
push
mov
imul
push
add
push
sub
cmpsl
in
fwait
add
loopne
inc
or
ror
fiadds
xchg
data16
cld
mov
lods
pusha
clc
packsswb
jmp
popf
movsl
jbe
aam
dec
rcrb
or
jmp
or
test
sub
outsl
fcoms
in
jbe
in
hlt
nop
sbb
hlt
sti
mov
jae
iret
mov
lcall
ja
sbb
mov
cld
stc
adc
andb
dec
adc
stos
loope
out
movsb
mov
js
loopne
lods
dec
mov
xlat
inc
testb
mov
xchg
or
out
insl
cmp
fdiv
icebp
ja
mov
and
aad
pop
jmp
xchg
add
fwait
xchg
int
or
add
xor
ret
push
scas
mov
pop
lods
mov
pop
popa
pop
add
lods
pop
fistpl
push
cmc
inc
jl
in
ret
cmp
fdivp
and
mov
and
shll
pop
push
mov
int3
sarl
repnz
xchg
cmp
ret
in
mov
std
shll
roll
jns
cltd
aam
add
sub
adc
mov
in
sub
inc
mov
adcl
xchg
jle
or
dec
dec
lea
pop
fs
loop
sub
leave
sti
jno
adc
scas
and
faddl
add
xchg
cli
xlat
cmp
ret
xor
js
mov
inc
je
inc
lcall
jle
movsl
loope
push
jo
das
int
mov
test
mov
and
popa
movsl
leave
shl
xchg
dec
mov
dec
shl
aad
xor
xor
data16
stos
mov
pop
sub
jns
mov
fwait
cmp
outsl
lds
sub
and
mov
add
subl
pop
xchg
add
pop
hlt
inc
pushf
mov
sbb
push
dec
dec
insb
pop
push
fld
fildl
and
repz
mov
xchg
fistps
pop
mov
sub
xchg
xchg
push
mov
mov
mov
inc
xchg
jo
sarb
mov
mov
ljmp
ds
jo
xchg
or
lret
call
enter
test
clc
jmp
xchg
xchg
in
mov
lods
mov
mov
outsl
out
xor
mov
mov
into
fwait
xchg
mov
nop
xchg
test
out
jle
lret
loopne
leave
fld
jl
out
sbb
xchg
fs
rcrb
dec
xchg
mov
hlt
ret
jb
sti
mov
test
call
stos
test
cmp
mov
pop
dec
sbb
lcall
adc
test
lods
cli
xchg
cli
xchg
std
inc
xor
pop
sub
mov
xor
enter
and
and
scas
dec
scas
imul
push
out
test
gs
mov
fists
and
mov
mov
inc
mov
lcall
or
sbb
mov
xchg
sbb
push
add
xor
push
outsb
or
xchg
mov
xlat
addb
sbb
sbb
jb
mov
test
imul
lahf
out
xlat
lock
jle
mov
std
pushf
mov
pop
xchg
jge
dec
pop
push
imul
jbe
xorl
ret
call
adc
dec
or
or
mov
sbb
xor
aam
sti
jne
outsl
stos
mov
ljmp
jle
pushf
jnp
in
call
add
dec
test
dec
lret
cld
mov
mov
lcall
xchg
jo
pop
sbb
fwait
lods
idivb
in
pop
leave
sub
ds
lods
cltd
xor
inc
movsl
or
ror
pop
lret
sub
lahf
das
std
mov
scas
pusha
int
mov
pushf
enter
stos
jl
aam
pushf
test
xor
dec
mov
popf
xchg
push
mov
mov
jmp
popf
xchg
out
stos
mov
mov
add
fidivl
stos
es
mov
ja
or
test
loope
mov
push
mov
push
call
shrl
mov
xor
mov
pop
fdivs
fisttps
and
shr
pop
sahf
enter
das
add
popf
movl
std
mov
sbb
ljmp
cs
jecxz
push
rcr
fisubrs
dec
mov
and
jecxz
xlat
push
push
mov
je
cmc
fcmovnbe
sbb
int3
call
mov
sbb
pop
mov
inc
cwtl
cmp
ficoms
subl
inc
sti
repnz
sbb
pop
filds
mov
test
mov
and
xchg
cs
add
jae
mov
mov
push
mov
inc
sub
push
fdivrs
dec
scas
test
stos
hlt
in
popf
clc
out
inc
int3
call
jo
cmp
aaa
mov
sbb
dec
xchg
fcmovbe
jne
movsb
xchg
and
cmp
mov
scas
adc
or
adc
cli
sti
mov
xchg
ja
push
jnp
jae
xchg
bound
and
jp
loope
fstp
add
xchg
jns
out
adc
cmpsl
jg
addr16
mov
add
and
loope
stc
imul
pusha
cltd
or
dec
and
xchg
jne
rcrb
sti
ficomps
jb
les
ror
scas
dec
sarb
sub
mov
push
pop
lahf
and
addr16
call
enter
ss
jg
inc
cmp
insl
or
mov
dec
popf
and
add
xor
call
cltd
xchg
xchg
out
and
push
es
sub
lods
fwait
pop
xor
and
rol
rcrb
xchg
stc
jge
int3
inc
sub
mov
mov
adc
jg
adc
sub
adc
cmp
movsl
pop
mov
lahf
and
mov
fwait
hlt
test
nop
or
and
xor
test
mov
mov
clc
mov
cmc
lods
repz
pop
cltd
mov
cmpsb
cwtl
orb
inc
ret
in
pop
xchg
push
in
mov
xor
cmp
or
fmul
lcall
test
mov
cmp
daa
lcall
add
cmp
in
ret
push
imul
scas
inc
push
das
mov
xchg
jge
push
fcomp
das
orl
shl
inc
roll
xchg
sbb
clc
lret
in
jmp
mov
cld
decl
mov
inc
mov
ss
push
andl
shll
jmp
add
shr
push
aam
dec
pop
adc
imul
push
mov
jge
icebp
mov
mov
sub
lds
mov
jne
es
and
mov
cmp
pop
out
adc
ret
or
mov
mov
loop
push
and
mov
mov
jl
mov
adc
sbb
outsl
add
jg
jg
push
out
test
rcll
and
pusha
addr16
adcb
push
sahf
mov
in
ljmp
fbld
pop
inc
stos
lret
xchg
iret
sbb
cmpsb
in
lods
fwait
roll
inc
repnz
push
add
rorb
jle
call
loop
pop
cmpsl
inc
lret
mov
xor
rcl
mov
sbb
dec
xchg
jnp
pop
inc
mov
popa
cmp
adc
sbb
lods
loop
dec
aaa
loope
gs
movb
or
into
or
sbb
and
add
cld
popl
xor
addr16
push
dec
pop
stc
adc
cmc
pop
add
inc
add
mov
and
xchg
ja
dec
mov
push
mov
cmc
or
ja
sub
mov
cmpsl
dec
mov
sub
adc
push
push
pop
loopne
and
push
testl
iret
mov
mov
sbb
pop
jmp
add
mov
adc
int
out
ds
fisubs
rcll
clc
ljmp
inc
cmp
mov
push
jp
jle
outsb
enter
out
dec
or
sahf
inc
xor
sbb
test
sub
and
mov
es
mov
in
bound
mov
idivb
mov
cmp
movsb
cmp
icebp
int
or
jle
mov
fwait
push
mov
test
testl
cmp
ret
jae,pn
add
pop
and
lret
dec
std
cmp
ret
and
sbb
inc
loopne
xor
or
push
mov
add
push
stc
outsl
adc
test
push
jno
lea
fsubl
mov
dec
mov
xchg
pop
cmp
fdivp
das
lcall
add
fdivrl
or
xchg
jno
mov
or
pop
push
and
pop
mov
fcmovnb
test
adc
or
push
xchg
es
xor
push
fimuls
repz
cmp
xchg
xchg
cmp
addr16
outsl
jle
rcrb
add
subl
jp
sub
ljmp
pop
out
cmp
sbb
cmp
or
vminps
and
fsubl
arpl
mov
mov
push
sbb
pusha
aaa
popa
lock
stc
lock
icebp
and
cmp
mov
stos
in
imul
or
sarl
cwtl
in
frstor
movsb
rolb
mov
and
pop
mov
cld
lods
popf
inc
mov
data16
stos
enter
ss
addl
ds
rcll
popa
js
mov
jp
or
mov
imul
push
mov
mov
ja
icebp
in
inc
les
gs
and
add
std
fucomip
lret
xchg
insl
imull
call
and
dec
push
call
cmp
jecxz
sbb
adc
pop
fldcw
arpl
adc
cmpl
jae
adcb
rcl
push
fsubs
push
pushf
rcrl
ja
repnz
and
mov
into
mov
int
ss
cmpsl
sbb
jne
clc
cs
fistps
adc
xor
inc
in
cmp
stos
or
cli
add
ficompl
cmp
mov
jnp,pt
sub
mov
mov
cld
loop
jo
imul
sti
add
pop
icebp
frstor
shr
mov
out
movsl
addr16
pop
or
dec
push
iret
es
repnz
stos
jo
jle
push
mov
dec
cmp
pop
mov
push
dec
dec
mov
shrl
adc
jae
loope
fildll
icebp
sbb
int3
mov
in
cmp
test
sahf
cmp
icebp
mov
clc
mov
ljmp
aaa
push
push
sbb
mov
sub
out
jb
xchg
test
lods
mov
adc
cld
mov
inc
push
pusha
inc
call
popf
pop
dec
js
adc
arpl
inc
inc
imul
scas
push
jne
ds
js
sbb
mov
clc
inc
xchg
pop
stos
hlt
pop
jns
lds
xchg
jg
testb
daa
sub
and
sbb
adc
or
push
imul
adc
xchg
jnp
repz
and
mov
scas
pop
stos
or
dec
cli
jbe
xor
mov
mov
aas
icebp
sub
pusha
add
andb
jo
mov
cmp
fildll
scas
adc
jno
xchg
dec
movsb
rolb
and
enter
gs
iret
test
mov
xor
aam
jne
cwtl
clc
mov
andb
adc
jl
pop
mov
adc
fbstp
add
dec
mov
pop
jle
pop
data16
fs
xorl
in
test
aam
sbb
rclb
out
cmpsl
es
imul
enter
fwait
stc
xor
mov
jmp
and
lock
jns
mov
and
lods
out
aam
mov
sbb
mov
cld
lods
jnp
outsb
adc
cli
push
mov
sbb
rclb
mov
mov
or
mov
mov
gs
loopne
cmp
cli
push
push
mov
add
ret
adcl
sahf
js
ds
jne
sub
sbb
movsb
pop
xrelease
sub
and
movsb
sub
cmpsl
iret
jns
xchg
jnp
enter
rorl
jp
xchg
cld
ljmp
scas
xchg
or
xor
lahf
loopne
cmp
adc
push
pop
out
pop
xor
mov
unpcklps
loope
mov
testl
sbb
dec
dec
mov
push
push
mov
imul
dec
mov
pop
push
mov
imul
lods
cmp
scas
andb
shll
jle
lea
dec
mov
fwait
mov
in
stc
jmp
ss
sub
subb
add
jecxz
inc
stos
inc
fidivs
xor
int
divb
xchg
loope
pushl
les
xor
outsl
iret
aaa
jle
xor
adcb
xlat
movsb
dec
sub
push
aaa
daa
arpl
pop
mov
push
xchg
dec
fwait
mov
scas
jnp
bound
mov
arpl
xchg
push
cmp
enter
push
fidivrl
into
es
and
push
scas
or
mov
insb
out
loop
xchg
iret
push
cmp
xor
pop
xlat
popf
outsb
ret
js
mov
shll
pop
cmp
add
aaa
hlt
dec
outsl
hlt
lods
scas
es
ljmp
fiaddl
dec
cmp
cmp
cld
jp
out
aaa
adc
lods
xchg
push
lcall
out
mov
cmc
push
rcrb
jne
test
jge
cmc
add
sub
mov
xchg
cmp
xor
xorb
inc
mulb
mov
xor
jle
int
repz
inc
ror
cmp
jp
clc
xor
bound
imul
mov
xchg
jp
xchg
fwait
popa
mov
pop
jl
insl
es
xor
lods
pop
gs
cmp
xchg
scas
xlat
lds
int3
push
lret
mov
repz
stc
jge
test
pushf
cwtl
sbb
push
and
jmp
pusha
jl
rclb
mov
push
arpl
mov
sub
cmp
aas
push
ds
inc
and
fisttpl
mov
pop
movsl
in
pop
sbb
mov
jo
add
add
jae
mov
shlb
dec
jmp
fistpll
push
push
xorl
push
pop
leave
fstl
add
stos
mov
xchg
enter
inc
inc
icebp
jmp
xchg
iret
mov
jg
ss
pop
jge
stc
int
adc
dec
mov
stos
mov
mov
sbb
inc
jb
addb
add
cmp
in
in
adc
jo
gs
arpl
fcomps
pop
gs
and
inc
pop
mov
push
mov
lds
pop
inc
ja
add
and
sub
inc
loope
popf
andb
stc
rolb
pusha
ss
jge,pt
das
cmp
push
pop
test
xchg
pop
imul
xchg
sti
xor
jnp
mov
dec
addr16
pop
mov
push
xchg
lods
sti
and
adc
fwait
jae
mov
jae
adc
aas
and
cmp
int3
enter
jbe
icebp
mov
int3
fwait
push
imul
fdivr
sbb
and
inc
add
push
add
cltd
pusha
fsubrl
popa
shrl
cmp
or
fwait
cwtl
or
icebp
shlb
xchg
jne
int3
xchg
nop
idiv
inc
xor
jle
mov
jb
pop
mov
push
xor
repnz
std
jl
or
imul
nop
test
add
mov
bound
les
push
xchg
mov
jae
movzwl
jge
jbe
faddl
inc
sbb
jg
lods
cli
push
loopne
or
dec
and
js
cwtl
push
shr
dec
aas
dec
sti
ret
pushf
leave
adc
jmp
lods
imul
and
pushf
mov
les
mov
iret
enter
add
ficompl
mov
testb
or
dec
sbb
xchg
xor
sbb
and
repnz
or
lcall
jmp
cld
outsb
adc
repnz
call
xchg
repz
or
sub
ror
mov
sbb
je
fs
mov
push
adc
push
mov
lock
mov
mov
inc
inc
imul
mov
lock
lods
sub
aaa
insl
hlt
shll
or
xor
mov
jp
test
ret
cmpsb
xchg
insb
pop
jle
mov
fdivrl
lcall
imul
scas
mov
xor
sbbl
sbb
fs
dec
mov
jnp
or
aad
ss
mov
cli
xchg
sti
add
push
adc
sbb
pop
dec
imul
cli
stos
xchg
addb
cs
jg
cmpsl
hlt
fdivrs
pop
std
pop
nop
cmp
fs
dec
add
orl
add
lds
icebp
push
gs
sub
mov
shl
jae
push
int
adc
lods
shr
adc
sub
fdiv
outsb
idivb
or
xchg
test
jbe
icebp
and
jns
or
fwait
jns
mov
xchg
push
jle
leave
pop
fiaddl
or
xor
mov
add
inc
bound
sub
mov
stos
push
je
inc
imul
lcall
gs
mov
cmp
pop
jecxz
mov
ss
dec
mov
pop
inc
mov
fistl
bound
bound
mov
imul
imul
and
jmp
test
add
pop
lret
icebp
adc
rol
andb
lds
sub
call
cmp
bound
andl
repz
call
pop
add
stos
push
adc
mov
shl
ljmp
insb
fsubrl
mov
ret
out
movsb
addr16
insb
sbbl
cltd
cmp
cmp
xlat
pusha
mov
sbb
mov
jmp
lock
lret
cmp
or
ret
clc
push
fildl
lea
ret
or
in
pop
test
jbe
ljmp
mov
pushl
pushf
sbb
xchg
outsl
pop
int3
aam
add
loope
gs
mov
cmc
xor
push
lods
cmpsw
push
sqrtps
adc
dec
loopne
fninit
dec
in
inc
jns
cwtl
add
pop
pop
cmp
cmp
addr16
cld
jmp
jo
or
jl
lods
cmp
clc
inc
push
or
test
mov
shrl
push
stc
cmp
xchg
xlat
xchg
sub
mov
pop
imull
add
lret
repnz
or
xchg
fmull
mov
jno
jb
xor
mov
lret
sub
mov
imul
mov
andl
lods
xlat
xchg
and
push
leave
xchg
inc
or
inc
add
pop
cmp
jbe
sub
xchg
out
pop
cmc
cltd
xchg
and
push
jmp
in
mov
pop
mov
jg
jmp
pusha
shrb
xchg
xchg
lods
and
fsubp
sub
flds
add
out
xchg
in
scas
daa
xor
aad
das
mov
sub
or
mov
cmp
mov
or
dec
clc
cmp
pop
adc
scas
adc
mov
and
xor
sub
mov
mov
push
xor
lahf
add
cmp
inc
leave
cli
imul
add
mov
popf
push
fnstcw
les
enter
fldenv
out
movsb
jbe
push
mov
sub
bound
repnz
cmpsl
jp
out
mov
ljmp
addr16
arpl
fsubr
dec
dec
mov
pushf
jnp
add
into
andl
cltd
pop
out
loopne
into
sbb
sbbl
inc
enter
dec
dec
mov
jne
push
fdiv
popf
scas
aas
in
dec
xor
jmp
imul
inc
xor
cmc
imul
jp
cli
and
gs
and
dec
rorb
ds
xor
mov
inc
imul
into
sub
adc
imul
xchg
and
pop
add
push
xor
outsb
hlt
mov
ja
cmp
xlat
pop
add
out
cmp
in
shr
fidivl
hlt
dec
scas
push
pop
dec
lret
stos
push
mov
mov
add
mov
inc
imul
in
sbb
cmpsl
loop
inc
shrb
hlt
mov
out
xlat
filds
mov
fnstcw
jge
mov
je
sub
js
or
stos
popf
xchg
jne
aas
pop
mov
repz
lret
mov
lret
or
and
mov
scas
in
into
loope
pop
sub
aam
test
test
push
lods
fs
std
lock
nop
mov
pusha
xor
xchg
cmp
inc
add
adc
fwait
out
mov
xchg
lahf
inc
aas
stc
insl
mov
popa
mov
adc
sbb
icebp
mov
sbb
int3
jo
mov
or
mov
xchg
mov
xor
add
aaa
xchg
fistpl
dec
outsb
out
xor
arpl
loope
sahf
cwtl
mov
shl
daa
cmp
inc
test
ss
mov
add
and
pop
popf
shr
inc
mov
test
shll
push
and
cmp
adc
lcall
out
filds
inc
dec
into
xchg
ret
scas
sbb
stc
mov
lods
es
jle
xchg
jae
mov
vmwrite
xor
pop
push
mov
mov
jle
lds
call
or
add
rolb
cmpsb
push
sbb
shll
jl
call
jb
cmp
test
sbb
jo
xchg
sub
test
cli
cmc
subl
dec
push
adc
push
outsl
push
cld
jg
icebp
push
sahf
cmpsb
inc
or
pop
or
mov
inc
sub
in
or
xor
sbb
sub
cmc
cmpsl
sbb
ret
jnp
lea
adc
xchg
mov
outsb
and
ret
cmp
push
mov
jo
aam
stc
lock
cwtl
jmp
pop
adc
lret
mov
cwtl
mov
das
out
mov
lds
pusha
loope
jb
cs
xchg
mov
mov
mov
int
testl
jne
mov
in
popf
out
add
cli
shr
mov
mulb
fbld
sub
or
rolb
ficoml
leave
movsl
xchg
rcrb
cmp
jns
addr16
cld
and
adc
mov
pop
inc
xchg
sbb
adc
xchg
repnz
jl
imul
out
roll
and
push
xchg
mov
jo
pop
int
push
call
inc
xchg
push
fcomip
ficoms
in
pop
mov
cmpsl
adc
movsl
sbb
pop
popf
aas
lods
ljmp
jp
in
ficoml
jbe
dec
inc
jmp
cmc
pop
xor
pop
and
dec
loopne
push
cld
addl
movsb
dec
adc
fsts
bnd
xor
adc
mov
aam
xchg
shr
test
stos
roll
ss
popa
fildl
xchg
cmp
repz
xchg
cmp
int3
dec
loope
addr16
add
rorb
add
xor
test
pop
in
pop
and
mov
addr16
lea
ds
cmp
outsb
jbe
dec
xlat
sbb
cmp
ljmp
xor
out
imul
jo
jnp
jnp
test
ljmp
xchg
inc
fcomip
push
push
dec
jl
aas
in
lock
or
and
ss
out
xchg
mov
inc
mov
nop
fldl
jns
imul
and
fisubl
pop
push
pop
inc
lods
subb
pop
rclb
fists
jp
rolb
jbe
mov
sub
out
dec
inc
mov
pop
les
repz
leave
jecxz
inc
loop
adc
outsl
push
stc
xacquire
and
push
movsb
xchg
or
push
ror
xchg
adc
gs
mov
xchg
shrl
ret
sbb
imul
pop
lock
jle
cli
xor
outsl
or
xor
push
fs
mov
jl
xor
adc
in
push
sbb
outsb
dec
mov
mov
mov
cmp
andl
int
mov
aam
cmpsl
nop
loopne
or
stos
dec
fcmovbe
jbe
pop
test
dec
pop
movsl
idivl
pop
adc
and
popa
fidivrl
mov
dec
call
es
stc
pusha
scas
hlt
pop
add
sub
stos
cld
aad
pop
jp
in
dec
clc
loopne
int
insb
fwait
jne
or
mov
pop
idivl
ljmp
push
iret
ja
test
ret
out
je
aam
sahf
mov
cwtl
pop
add
pop
jecxz
popa
jbe
aaa
addb
cmp
or
xor
pop
popf
idiv
loope
movsl
fsubl
and
inc
xchg
add
sub
cmpsb
popf
xor
push
lcall
hlt
lds
xor
repz
dec
pop
mov
imul
fstps
sbb
flds
adc
ret
stc
lock
mov
cmp
jne
sarb
pop
loop
jle
dec
fistl
pop
mov
aam
jbe
ret
jmp
jge
insb
mov
lock
flds
hlt
popa
rcrl
rclb
dec
stos
sbb
add
xchg
cld
aam
mov
or
xor
mov
mov
jae
icebp
push
cmp
mov
mov
sbb
mov
pop
lods
mov
fdivl
jae
xor
add
imul
xchg
mov
lds
pop
cmp
pop
aaa
dec
dec
in
pop
into
mov
sub
inc
or
and
cmp
orb
inc
lock
xchg
leave
dec
dec
and
jl
and
lcall
lea
jnp
and
mov
fmull
sub
dec
inc
jl
rclb
mov
xchg
jo
pusha
clc
cwtl
movsl
pop
xchg
jmp
jge
jg
addb
inc
iret
xor
jecxz
jae
cmpsb
mov
enter
cmp
jb
dec
xor
jae
rorb
pop
iret
jge
nop
rol
sub
mov
test
mov
add
cltd
shll
pop
fidivl
lock
repnz
and
dec
inc
jb
pop
mov
adc
ds
xchg
stos
fwait
adc
lds
fists
sub
cmp
ret
xchg
unpckhps
jge
and
pop
push
inc
call
insb
jno
and
jo
add
int3
inc
or
clc
lret
mov
jbe
sar
inc
and
repz
nop
push
test
out
xor
nop
fs
push
pop
mov
mov
xchg
filds
ja
mov
xor
rolb
inc
lods
push
popf
out
cltd
fcmovnb
fwait
lret
cmp
mov
test
lcall
ds
cmc
xchg
sbb
pusha
imul
mov
andl
pop
pop
je
jnp
mov
rorl
cmp
mov
add
cltd
jb
jmp
ja
inc
mov
dec
xchg
fldt
jmp
inc
sbb
daa
push
adc
adc
out
push
dec
add
inc
fcompl
fs
mov
repz
mov
dec
adc
cmp
int
mov
mov
sbb
in
lret
pop
outsb
mov
jo
push
mov
gs
lods
test
lcall
in
and
les
mov
pop
dec
js
xor
mov
add
sbb
push
push
adcb
and
fdivl
mov
arpl
mov
add
negl
cmp
repnz
add
subb
push
es
mov
shrl
rcr
pop
and
sbb
cltd
xchg
iret
push
data16
dec
add
stc
decb
mulb
popf
cwtl
push
add
stos
dec
hlt
es
mov
adc
xchg
adc
mov
insb
xor
popf
lods
xchg
lret
data16
movsb
push
dec
scas
mov
mov
push
inc
or
cmp
xchg
mov
xor
mov
push
and
mov
jno
std
insb
pushf
repz
push
jae
nop
and
push
rcrb
test
das
mov
adc
pusha
inc
cmp
dec
xor
testb
ljmp
mov
jbe
fs
add
push
dec
adc
daa
or
fwait
mov
aam
or
cmpsb
ja
repz
and
repnz
pop
xor
cmp
sbb
or
loope
mov
lods
cmp
loopne
cli
push
and
pusha
inc
ficoms
lods
push
in
test
in
and
int
fsubp
sub
and
into
sbbl
scas
pop
int3
inc
add
cmp
lock
pop
sbb
mov
jne
add
daa
xor
mov
frstor
lcall
scas
cwtl
dec
mov
push
mov
test
or
or
out
imul
mov
sarb
out
push
ss
mov
or
loope
jmp
stc
sbb
lret
mov
icebp
push
push
aaa
sbb
int3
pop
setp
or
jnp
in
mov
pop
ficomps
mov
jns
cmp
add
jl
cld
out
outsb
jp
push
and
jl
add
fs
lods
xor
shrb
dec
icebp
push
test
and
imul
dec
sub
sahf
dec
dec
cmp
pop
mov
mov
jo
and
cltd
movsb
push
mov
xor
aas
sti
push
pusha
pop
andl
mov
and
mov
pop
or
out
mov
lock
xor
into
cmpl
pop
movsl
lods
pushf
adc
cmpsl
hlt
mov
ret
or
jle,pt
out
cs
cmpsl
pop
and
mov
adc
xor
xor
jo
mov
scas
leave
jmp
std
xor
movsb
aad
and
lods
add
std
mov
addr16
add
out
xlat
cwtl
in
xor
iret
jl
dec
jo
leave
inc
push
mov
sarl
xchg
push
fwait
loopne
push
popf
fistpl
xchg
pusha
rcll
adc
jb
testl
xchg
test
pushf
rorl
dec
mov
mov
inc
leave
out
imul
jp
and
lret
push
sub
and
and
pop
lds
fdivl
in
jns
daa
mov
xchg
and
mov
jp
idivb
jno
adc
jp
jmp
mov
insb
fsubrl
lock
icebp
xchg
cmp
scas
data16
sti
cmp
clc
or
es
mov
dec
mov
fldcw
lret
cmp
fucom
push
xorb
ret
inc
mov
enter
gs
setl
inc
cmpsl
out
cmp
xor
bound
lahf
inc
daa
nop
sti
idivb
aaa
adc
aas
aaa
aas
mov
adc
jmp
loopne
rcrb
fldl
sub
xchg
icebp
les
or
pop
insb
ficoms
pop
frstor
jns
jl
xchg
jbe
outsl
lock
div
mov
adc
scas
cli
and
pop
mov
jae
or
je
and
xchg
dec
add
jmp
pusha
ffree
mov
dec
adc
aam
cli
push
aad
cmp
test
sbb
jne
mov
mov
arpl
inc
rcrl
jl
outsb
gs
pop
rorb
push
shrb
notb
mov
stc
push
popf
xor
lea
cs
clc
mov
cltd
mov
aad
or
fwait
roll
bound
push
lahf
add
jp
outsl
outsl
mov
jbe
adc
push
push
xchg
xchg
ss
hlt
or
mov
xchg
jnp
gs
sub
ds
push
div
mov
adc
vpminub
cmp
pop
jns
gs
xor
xchg
repz
ret
add
sbb
loope
or
and
clc
push
dec
sbb
add
lcall
arpl
lods
lods
and
testb
inc
mov
fildl
lods
mov
inc
sub
add
push
leave
jecxz
lods
lods
lcall
xor
ret
out
lock
decl
out
cwtl
and
inc
cld
and
ja
test
scas
stos
mov
cmp
in
je
xor
or
add
rcll
divl
push
mov
push
sub
outsl
push
stos
push
repz
enter
and
scas
push
jle
inc
fs
add
ljmp
lret
cmpsb
xor
test
jae
repz
je
or
or
sub
stos
sub
loop
mov
mov
call
in
cltd
popa
mov
mov
or
lcall
pop
push
cmpsb
mov
and
out
insb
mov
loope
cli
rcr
ds
lcall
out
rcr
inc
mov
cmc
xor
mov
lods
inc
shlb
jle
dec
sub
sbbb
aaa
add
jno,pn
outsl
pop
gs
std
lea
or
push
add
int
shlb
add
dec
mov
clc
sub
push
or
les
dec
add
roll
jle
lahf
mov
arpl
mulb
adc
xchg
adc
in
in
loope
dec
and
jg
dec
pop
mov
push
stc
pushf
mov
xor
push
dec
in
dec
rcrl
mov
sti
sahf
loop
js
ljmp
ss
cmp
add
jmp
loope
pop
lahf
dec
stos
ds
push
dec
mov
push
jmp
sbb
dec
sub
test
xor
aad
jmp
imul
jl
mov
lret
imul
iret
arpl
or
jle
das
xchg
add
test
andb
lahf
pop
xlat
pushf
jmp
out
or
xorps
adcb
inc
or
adc
xchg
icebp
cmc
pop
loop
cltd
and
jmp
push
sbb
pop
stos
or
and
inc
push
mov
pusha
fmuls
js
repnz
ljmp
mov
inc
in
mov
mov
dec
cmp
and
xchg
into
ss
mov
lret
repz
hlt
lock
test
xor
xorb
add
jl
xchg
xchg
setge
cld
jle
jb
std
inc
cmpsb
adc
sub
stc
jge
stos
mov
jb
imul
jb
xor
add
and
xchg
insl
xor
or
or
jl
mov
adc
xor
loop
repnz
push
add
inc
out
push
cmpsb
push
hlt
push
sbb
mov
and
xlat
movsl
mov
pop
inc
mov
jmp
xchg
mov
ret
and
mov
dec
add
push
xchg
test
dec
fs
cltd
ljmp
not
sbb
mov
aaa
cmp
inc
arpl
push
imul
ss
adc
int3
iret
and
pop
sbbb
xchg
push
call
lret
inc
jne
sub
cli
jg
lahf
add
loop
push
test
mov
jle
mov
jae
int3
lock
imul
jbe
out
je
pop
inc
fmuls
stos
jle
cwtl
inc
call
and
out
arpl
mov
test
cwtl
out
ret
stos
fnstcw
lods
ds
dec
sti
outsl
dec
add
cmpl
jp
fistl
mov
in
pop
push
loop
fwait
inc
inc
lcall
xchg
add
mov
adc
mov
gs
lret
pusha
enter
xchg
add
aaa
insb
je
lds
mov
ss
adc
test
inc
outsl
pop
jl
in
inc
mov
aam
xchg
lret
shrl
out
fbstp
mov
xor
aam
aas
in
imul
test
idivb
rorl
xchg
adc
inc
adc
push
incb
mov
dec
scas
mov
inc
jle
cmp
lahf
repz
xor
fwait
daa
ds
pop
cmp
pop
dec
or
cmp
jo
mov
shr
out
sub
je
sbb
lds
data16
popf
mov
xchg
sub
xchg
dec
data16
scas
jnp
xor
cli
scas
aam
inc
and
dec
fbstp
xor
mov
das
and
xor
pop
mov
cmp
mov
nop
add
testb
mov
int
ret
fwait
lret
iret
mov
mov
sub
add
mov
jecxz
pop
jle
fnstsw
pop
lret
pushf
lret
dec
call
or
mov
aas
fildll
insb
mov
in
sbb
pop
call
push
push
loopne
sub
push
and
jecxz
or
mov
xor
jo
insl
loop
mov
xchg
add
cmpsb
lock
adc
lods
jo
xchg
out
cs
mov
mov
cmp
int
jae
pop
cmp
lods
pop
or
cs
mov
mov
sbb
mov
aam
int
adcb
scas
jl
scas
test
and
pop
movl
adc
mov
in
sub
pop
es
add
cmpsl
mov
lds
out
pop
inc
dec
hlt
pushf
xchg
mov
push
lea
iret
sbb
popa
push
xchg
push
subb
sbb
pop
rcrl
ret
mov
cmp
addl
stc
test
adcb
sbb
in
jae
idivb
ds
fs
shlb
nop
cld
leave
imul
subl
aam
sub
xchg
shlb
add
xor
xchg
inc
jno
lret
sbb
mov
lcall
test
lcall
sbb
cmpsb
xchg
mov
popf
sbbl
xchg
pop
out
not
fsub
hlt
call
cmp
aam
test
mov
stc
sbb
adc
aas
add
repnz
aaa
pop
ljmp
xchg
sub
mov
in
scas
adc
aad
mov
and
mov
aaa
mov
ss
pop
aas
mov
dec
out
jne
or
cmp
rcll
jge
pop
sarl
sub
or
mov
stos
clc
push
sbb
arpl
pop
in
sti
cmp
lds
jmp
mov
imul
adc
mov
pop
in
scas
pop
jge
icebp
jmp
into
dec
js
and
lcall
iret
pop
loop
pop
push
push
push
cltd
inc
push
into
repnz
repnz
dec
or
mov
stc
jmp
cmp
jg
enter
sbb
add
or
xor
jb
aas
jnp
fsubs
dec
inc
daa
mov
jge
mov
jns
sbb
cmp
sub
pop
pop
and
nop
fsubrl
sub
sbb
cmp
test
cld
fadds
sbb
sub
fnstenv
ds
sbb
mov
jge
cmpsl
lret
inc
clc
rcrl
and
lods
bound
cwtl
les
call
lods
mov
mov
adc
xor
fisttps
and
test
add
cmp
test
mov
mov
cmp
push
xor
mov
cmc
push
shrb
jb
xchg
fldcw
stos
bswap
popa
xorl
jae
hlt
sbb
sti
jge,pt
mov
leave
lret
dec
dec
jae
cmpb
mov
dec
stc
push
popf
dec
sbb
push
sbb
and
lahf
dec
pop
mov
subl
cmpb
xchg
add
gs
xor
addr16
sarb
mov
adc
push
jg
dec
add
sbb
sbb
sbb
outsl
xor
data16
xchg
add
pusha
js
sub
mov
xor
pop
lods
cmc
movsl
fs
and
leave
xchg
loope
or
fsts
call
f2xm1
mov
repnz
jno
gs
xor
inc
cmp
test
lea
lock
jae
mov
push
divb
push
xchg
hlt
lock
fsubrs
mov
in
mov
jbe
inc
adcl
outsl
and
add
sub
mov
into
push
xor
mov
xchg
or
mov
shrb
and
popf
inc
push
mov
test
cmpsb
leave
push
cmpsl
push
xor
cmp
fists
add
icebp
inc
test
pop
push
fsts
mov
out
aad
jb
inc
sbb
cli
mov
out
pop
enter
int
xor
inc
mov
mov
daa
mov
mov
cltd
xlat
jbe
xor
rorl
movsl
call
or
imul
inc
dec
sti
push
cmp
xorb
mov
jg
pusha
shrl
inc
jg
stos
jg
shll
out
loop
cmp
jnp
stos
jp
lcall
imul
dec
or
mov
repnz
test
xor
adc
ja
scas
add
cs
pop
hlt
inc
xor
bound
and
fcomip
in
iret
sbb
jbe
adc
test
fsubrl
loopne
xchg
mov
clc
bound
icebp
imul
sar
cmp
popa
icebp
mov
sbb
outsl
mov
xchg
mov
mov
das
ljmp
xor
lahf
inc
lret
mov
cwtl
or
jmp
cmp
call
loopne
jnp
ljmp
push
imul
jnp
sub
adc
jnp
repz
add
sub
pop
push
mov
mov
inc
shr
out
and
xor
adc
in
sub
sbb
xchg
and
addr16
lock
mov
mov
push
inc
test
pop
xor
inc
movsl
pop
mov
icebp
mov
sub
in
test
lret
or
cltd
add
lods
cltd
sbb
sub
popf
mov
lret
inc
mov
into
fdivrl
mov
fildl
dec
adc
shll
sbb
cmc
lods
fistpl
cmp
mov
shlb
mov
mov
dec
aad
cmpsb
jae
push
fs
jb
int3
push
lock
push
pop
inc
xchg
pop
mov
popf
repnz
pop
sbb
ds
jae
daa
mov
mov
fdivl
popf
add
cmpl
mov
lea
mov
xor
dec
sub
xlat
pusha
cwtl
and
hlt
add
xor
pop
sbb
sub
lret
and
mov
inc
push
xchg
aaa
inc
dec
and
lret
dec
adcl
lret
mov
mov
xchg
repnz
sbb
lock
stos
dec
inc
xorl
cs
xor
out
jl
pop
popf
xchg
sbb
lahf
mov
and
cmp
fsubl
fwait
push
xchg
nop
jle
jbe
loop
pushf
adc
push
out
scas
dec
movsl
aaa
mov
dec
into
mov
pop
push
push
pop
mov
cltd
dec
sbb
int3
shlb
jg
add
add
not
mov
add
nop
arpl
xchg
repz
scas
int3
or
cmp
mov
aam
aam
mov
push
fcoml
std
fsubrl
push
js
popf
or
imul
mul
ja
iret
push
pop
mov
jl
cmp
int3
jno
pop
push
lcall
mov
cli
inc
cmp
loop
ret
ds
mov
out
add
movsb
sbb
loopne
sbb
mov
jns
push
scas
imulb
aas
xchg
cmp
jbe
stos
mov
jmp
dec
cmp
xchg
ret
push
sub
sti
xor
pop
es
dec
or
add
out
pop
call
daa
dec
jb
push
dec
in
add
test
inc
lods
into
imul
and
add
mov
push
and
nop
jmp
mov
jb
mov
push
dec
sbb
ss
jae
jecxz
jo
sub
lock
stc
inc
fs
adcb
addl
and
outsl
push
repnz
imul
jne
sbb
loop
sbb
mov
mov
or
out
add
add
test
test
iret
outsl
xchg
cmp
popf
push
sbb
mov
shr
xchg
lret
dec
sbb
lea
sbb
or
inc
ljmp
int
cld
pop
std
sub
loope
std
push
cmp
sub
rcll
outsb
mov
xchg
xor
mov
shr
jbe
and
inc
data16
inc
daa
adc
ss
jb
lahf
push
push
sub
xor
and
and
pop
jno
xor
sbb
push
lahf
outsl
mov
pop
int3
dec
sahf
lret
dec
test
sarb
sub
repnz
push
mov
and
pusha
pushf
sbb
cltd
movb
push
xor
dec
es
xchg
loope
mov
flds
popa
and
mov
out
xchg
mov
add
aad
dec
push
xchg
adc
cmp
enter
mov
out
jbe
jl
lods
mov
cmp
add
sbb
xor
sub
pop
out
in
sbb
cmp
movd
xchg
mov
in
mov
scas
pushl
mov
mov
and
ja
sti
inc
push
push
push
jecxz
rolb
popa
jne
daa
inc
add
fsts
adc
int3
mov
in
lock
mov
leave
insl
hlt
test
jb
cmp
mov
xchg
push
jb
xor
fnsave
xor
ds
mov
fadds
jae
daa
xchg
sub
xor
cltd
fsubrp
xor
hlt
jle
sub
fadd
add
mov
es
fiaddl
lock
incl
cmp
mov
dec
xor
and
xchg
fwait
or
mov
jne
fdivr
dec
mov
xchg
test
adc
or
xlat
pop
mov
jae
sbb
add
jecxz
cmpsl
xchg
insb
filds
out
dec
les
insb
and
push
xor
loop
jecxz
lcall
pusha
mov
jg
fnstenv
ffreep
cmpsl
cltd
push
fdivl
jp
pop
or
in
int3
xchg
pop
gs
outsb
fucomip
js
and
lock
pop
stos
negb
xchg
xor
xchg
pop
adc
hlt
fiaddl
adc
jno
cmp
test
jmp
mov
imul
pop
fisubs
es
push
pop
dec
push
hlt
mov
and
inc
xor
imul
cmpsl
or
rcr
adc
jno
add
adc
ljmp
push
lea
xor
leave
push
loop
pop
jle
aad
dec
or
ds
or
shll
ljmp
iret
push
mov
cmpsb
sbbb
jno
aad
mov
shll
testb
inc
and
push
sub
mov
adc
push
fs
test
inc
push
xor
test
in
pushf
adc
sub
shrl
push
xchg
ficompl
mov
mov
or
sbb
in
pop
or
out
inc
pop
testl
stos
mov
cli
inc
mov
js
push
cld
je
cmp
push
and
imul
inc
sti
into
dec
cld
std
pop
mov
mov
inc
dec
jle
ss
jnp
in
aaa
jle
xchg
xor
pop
inc
insl
test
pop
push
cld
push
mov
in
push
daa
adc
ret
and
push
adc
movsb
sub
arpl
fldl
pop
xchg
mov
popf
cmpsl
add
out
sub
incb
test
dec
ja
dec
add
inc
jp
adc
mov
mov
dec
xor
loop
inc
mov
mov
and
cmp
ljmp
sub
mov
lock
or
scas
xchg
jno
jne
inc
dec
adc
pop
xor
jae
cmp
call
jg
js
imul
pop
sbb
test
imul
xor
ret
adc
mov
jecxz
xor
mov
dec
out
xchg
jo
clc
addr16
andb
inc
lret
and
ficoml
cwtl
xchg
xchg
add
and
add
and
mov
cwtl
xor
pop
cmpsb
cmpsl
inc
std
rolb
mov
in
cmp
ret
inc
mov
jmp
pop
add
add
rcrl
jmp
mov
cmp
hlt
cmc
jge
add
stos
xchg
jne
or
ss
jmp
or
cmp
sub
mov
cmpsl
clc
lods
jb
cmpsb
or
sarb
sbb
cmp
std
pop
data16
fmull
inc
jp
out
stc
pop
push
lcall
xor
push
pop
outsb
cltd
js
popf
shll
mov
mov
push
aam
xchg
fnsave
fildl
ljmp
bswap
ds
push
loopne
mov
inc
or
movsb
push
xchg
stos
mov
or
iret
mov
fisubl
dec
dec
out
sbb
pop
out
jecxz
push
ja
and
pop
inc
daa
sub
and
dec
push
sbb
sbb
xchg
or
stc
mov
mov
loope
out
and
mov
iret
add
in
mov
out
test
scas
rcll
push
push
sub
xor
mov
mov
cltd
sbb
orb
or
out
pop
xchg
mov
sub
sbb
inc
sub
fcom
mov
push
xchg
and
mov
inc
idivl
nop
inc
inc
mov
sbb
sbb
sbb
push
xchg
outsb
fstl
daa
mov
push
aas
or
insl
adc
mov
dec
xchg
xchg
jl
xchg
mov
fbld
fisubs
lock
cmp
scas
enter
adc
outsl
xor
xor
ljmp
cltd
or
in
push
jae
mov
inc
mov
fidivrl
clc
pop
pop
and
mov
push
adc
adc
xchg
rcrb
lods
xchg
and
xlat
sub
imul
and
xor
jne
push
sbb
lods
adc
negb
push
jo
and
aad
cld
or
inc
mov
or
aam
ficoms
ds
ficomps
mov
std
fldcw
cmp
xchg
add
js
sbb
mov
fcomps
xor
push
in
jl
fadd
xor
out
mov
subb
mov
outsb
test
sarb
inc
xchg
sub
mov
fdivrs
sbb
pusha
data16
and
inc
fs
lods
dec
mov
xchg
iret
pop
dec
dec
sbb
jns
mov
cmc
cmp
stc
mov
movsl
cmpsb
sub
dec
lret
cmp
push
mov
enter
pop
insb
jo
adc
fdivrl
mov
scas
nop
cs
out
out
fldt
or
mov
movsb
mov
and
divb
xchg
pop
cmp
push
xor
cmp
pop
movsb
js
divl
mov
rolb
les
mov
mov
mov
jno
dec
sub
lock
pop
sbb
test
adc
sbb
xchg
movsb
cmp
shlb
popf
cmc
jp
in
ss
rclb
daa
cs
jmp
pop
aas
push
imulb
cli
dec
dec
adc
ror
cmpsb
sub
stos
add
push
fcoms
mov
mov
call
xchg
mov
pusha
mov
xchg
adc
aad
inc
jecxz
and
insb
push
bound
sub
fsubrl
pop
int
xor
fisubs
xor
add
mov
add
sub
mov
xlat
insb
inc
dec
mov
out
jne
xlat
lcall
sbb
lods
ss
inc
fisubl
mov
rcll
mov
push
push
inc
sub
daa
mov
insb
pop
jmp
mov
int3
nop
popl
jne
cmp
mov
and
push
stos
adcb
aaa
out
lahf
jb
mov
testb
loopne
imul
dec
imul
mov
or
lcall
mov
dec
ljmp
les
ret
ds
lcall
and
stc
div
aam
int3
loop
and
mov
leave
jno
inc
fsubl
push
cmp
sbb
outsb
popa
std
ja
mov
jb
ficompl
mov
pop
shll
mov
push
or
or
inc
add
pop
rorb
xchg
adc
inc
sub
and
xlat
scas
sbb
out
jg
gs
push
insl
lock
add
jbe
jmp
test
sub
cmp
ja
add
mov
jns
jl
xor
rcr
dec
sbb
pop
and
nop
adc
jo
fcmove
aad
dec
mov
cli
fcmovbe
aad
adc
in
js
mov
pop
add
mov
sub
lahf
jbe
inc
sbb
dec
pop
into
sub
jmp
pop
gs
ret
ret
sbb
mov
push
and
sarl
dec
xchg
nop
sbb
inc
lods
sbb
je
jns
movsl
daa
arpl
cmp
int3
shll
test
roll
push
pop
sub
testb
cld
lds
mov
mov
push
iret
and
mov
push
fiadds
mov
adc
iret
lcall
jo
add
adc
or
mov
mov
push
add
push
sub
dec
mov
movsl
pushf
fildl
jae
inc
mov
jne
push
add
xchg
nop
add
mov
cs
icebp
mov
xor
jae
xchg
out
pop
xor
dec
loope
xchg
aad
push
test
rcrb
ljmp
fistpl
push
cs
push
test
jg
sti
sbb
int
test
lret
int
aaa
cmp
dec
mov
hlt
pop
enter
das
jns
add
push
outsl
test
hlt
mov
das
pop
shrb
stos
popl
sub
shrl
je
popf
jecxz
mov
adc
in
inc
or
sub
insb
cmpsb
jp
pushf
imulb
mov
aad
fs
jle
cld
lahf
xchg
xchg
addb
xchg
push
mov
adc
inc
mov
dec
out
data16
cltd
xchg
movsl
imul
xchg
fsub
mov
mov
xor
sahf
pop
frstor
rcr
pop
test
or
mov
jge
jbe
iret
push
fstps
pop
mov
loope
enter
dec
sahf
mov
mov
xor
je
or
mov
dec
inc
jl
or
mov
cmp
aaa
add
or
hlt
pop
aad
hlt
and
mov
cmp
lret
push
xchg
pop
orb
xor
les
clc
sub
imull
filds
push
sbb
out
clc
jo
xchg
mov
lds
rcll
jge
fsubrl
xor
insb
pop
cld
arpl
dec
aas
inc
push
cs
stos
or
mov
sub
mov
pusha
repnz
imul
mov
pop
lea
add
cs
add
add
mov
mov
in
ret
pop
push
int
sbb
bound
cld
pop
dec
mov
xchg
sub
pushf
gs
inc
daa
clc
cmp
out
fisubrs
jle
sub
sbb
dec
inc
adc
push
xor
and
scas
mov
xor
xor
or
out
inc
push
aaa
inc
dec
stos
mov
jb
sbb
xchg
pop
mov
xor
xchg
push
and
fbstp
leave
dec
xor
push
lahf
jno
mov
adc
addl
insb
je
stc
rclb
mov
mov
jno
inc
lea
pop
scas
out
mov
cmpsl
sbb
dec
loope
mov
daa
sbb
mov
dec
fdivs
pop
icebp
mov
xlat
push
or
pop
roll
mov
movsb
dec
fsubp
sahf
push
rorb
inc
je
test
add
push
and
into
ljmp
mov
lret
sub
fstpl
test
add
and
scas
adc
popf
cmp
aaa
push
jno
loope
add
xlat
pop
mov
mov
jge
adc
mov
cmpl
add
addr16
nop
int3
gs
mov
sub
add
fwait
out
push
pop
sahf
lds
test
vpsllq
mov
cmp
insl
add
lods
pushf
jp
cmp
xchg
outsl
mov
inc
and
mov
pop
inc
and
sahf
imul
pop
cld
and
and
repnz
out
sbb
mov
sub
and
in
jnp
stc
adc
lret
in
mov
jmp
add
and
test
mov
loop
lret
sub
xor
lea
jns
dec
sub
cmc
pop
cmpsl
mov
imul
push
mov
jp
leave
cmp
or
arpl
sti
stos
push
adc
mov
jecxz
popa
test
cmc
popa
mov
ror
aad
ds
hlt
jg
sbb
mov
faddl
pop
push
ret
lret
repz
jns
xchg
dec
mov
sub
out
js
pop
add
ja
or
mov
sbb
imul
cli
adc
js
pop
scas
cmp
push
int
jne
jmp
push
movsb
push
sub
lods
imul
inc
cld
loopne
cld
popf
push
es
sbb
pushf
cmp
loopne
adc
mov
xchg
lods
mov
cwtl
xchg
js,pt
sbb
into
sub
mul
div
scas
into
lods
inc
mov
inc
ja
push
dec
fadds
xor
test
aaa
stos
aas
lea
push
push
cmpsb
sbb
addr16
inc
push
xchg
xor
and
out
sub
es
cmp
inc
dec
pop
ret
adc
dec
xchg
test
fmuls
mov
into
clc
in
cli
rorl
mov
adc
mov
dec
int3
dec
mov
sub
loope
and
jecxz
out
and
fsubl
movsb
rorb
out
imul
and
push
jge
mov
sub
ret
popa
testb
pushf
jmp
lods
ds
mov
adc
pop
cmpsl
jmp
arpl
xchg
orl
pop
cmpsl
lock
fmul
lea
repz
ret
adc
shl
fwait
and
out
push
mov
ja
fs
mov
ret
pop
int
aad
shlb
pop
mov
mov
or
fisubrl
aad
xchg
pop
not
lret
out
and
add
dec
vcmpngtps
aas
std
inc
les
lret
loope
xchg
push
fs
pop
push
fbld
dec
mov
inc
movsl
stc
xlat
cwtl
push
or
adc
es
mov
sub
ds
ds
and
shlb
xchg
in
lea
push
jecxz
into
mov
add
xor
sub
xchg
inc
mov
imul
call
sbb
int
xlat
aas
push
mov
add
fcoms
jp
in
or
adc
aaa
int
push
push
mov
in
sbb
dec
mov
cmp
nop
clc
inc
mov
fcoms
mov
fcomps
sbb
jae
iret
gs
mov
ret
in
psubusb
outsb
stos
mov
insb
movsb
jl
mov
push
adc
dec
pop
xor
imul
fisubrs
es
dec
clc
int
pop
or
inc
cmp
add
call
orb
int3
add
pusha
ss
dec
and
arpl
bound
lret
addr16
jb
addr16
cmp
insb
jbe
or
cmc
xchg
mov
lret
ret
adc
test
addb
sub
jbe
ret
mov
imul
adc
push
or
push
jecxz
and
dec
dec
adc
fisubs
in
pushf
lret
imull
pop
push
sbb
mov
out
xor
aad
repz
in
bound
and
lods
add
pop
xchg
fsubl
adc
pop
pop
inc
and
xchg
mov
cld
push
xlat
mov
das
mov
jns
ret
ja
jle
pop
ss
or
fnstsw
ljmp
movsl
push
loop
inc
pop
push
mov
pop
ja
pop
mov
stos
cs
adc
sub
sub
arpl
add
inc
mov
mov
test
push
jmp
mov
stc
popf
and
or
xlat
cmc
or
dec
leave
lcall
sbbb
pop
or
mov
in
in
sti
stos
call
jecxz
dec
insb
mov
les
aas
clc
inc
fs
test
pop
hlt
mov
xchg
xor
arpl
testb
cs
das
jnp
bound
push
sub
xor
add
shl
push
daa
jmp
fptan
loop
ret
popf
lcall
sbb
sbb
xchg
or
jge
popl
dec
in
mov
jg
fildll
scas
inc
jmp
add
push
jge
fistps
lea
push
frstor
push
hlt
adc
xor
pop
test
cmp
ret
rorb
stc
cltd
enter
mov
mov
les
out
push
shll
push
outsl
jno
jo
int3
or
aaa
adc
sbb
fdivrl
aas
sub
pop
leave
dec
imul
sahf
xor
test
push
mov
mov
jle
and
jns
pop
cli
mov
leave
cmpb
es
cmp
or
or
daa
adc
scas
mov
lret
arpl
lahf
add
pop
mov
je
mov
pop
mov
mov
incl
jmp
test
dec
mov
mov
mov
cmp
jp
pop
in
lret
mov
inc
push
cmpsb
mov
iret
mov
rolb
add
lods
xor
inc
jbe
sbb
fldenv
ljmp
lods
aaa
sub
xchg
dec
sbb
push
fucom
dec
xor
popa
fsubr
lds
cmp
dec
sahf
mov
mov
mov
lahf
xchg
push
sbb
xchg
mov
lods
in
push
inc
iret
cwtl
sub
add
ds
and
mov
in
loop
push
dec
movsl
add
ret
enter
ds
js
mov
lods
jg
pop
mov
js
adc
dec
xor
mov
les
jg
sbb
inc
mov
dec
sbb
div
aad
jecxz
jp
lea
repz
xor
jge
xor
push
xchg
popf
dec
or
out
imul
ds
fistps
aam
pusha
lds
mulb
jmp
adc
push
dec
out
push
jl,pn
cmp
xchg
enter
add
in
pop
push
inc
sarl
frstor
or
adc
pop
ja
mov
lods
add
outsl
xchg
repz
pop
repnz
pop
imul
lahf
jl
push
xchg
repz
xchg
and
scas
mov
xchg
daa
inc
testl
verw
repz
xor
push
cmp
cmp
mov
loop
fiaddl
mov
push
fsts
inc
pop
repz
scas
mov
jecxz
adc
in
fistps
bound
out
push
rcll
mov
xchg
cltd
aad
push
sbb
out
xchg
mov
add
jne
fwait
popf
cmp
cmp
or
sarb
mov
dec
adc
cmp
ret
aam
mov
mov
jb
mov
test
mov
lcall
data16
xchg
pop
mov
rorb
jno
cltd
push
js
cmp
arpl
cmp
push
sub
ffree
jae
daa
insb
loope
cmp
cmp
repz
pop
push
scas
rolb
mov
imul
xchg
lahf
jecxz
mov
jne
and
rcrb
mov
adc
mov
mov
sub
subl
mov
pop
sbb
add
sub
scas
mov
rol
inc
jge
out
dec
add
jmp
adc
fadds
sbbl
jns
xchg
leave
imul
or
push
leave
sub
or
xchg
sar
sti
popa
addl
add
xlat
mov
xchg
shrl
stc
fnsave
faddl
call
aaa
cli
scas
jo
out
int3
dec
scas
pop
add
or
pop
movsb
inc
adc
out
xchg
xchg
cmpl
push
or
jbe
xlat
sbb
lds
imul
mov
and
xor
jb
pop
push
xor
fadds
mov
std
dec
adc
add
sub
pop
scas
call
ret
cmpsb
inc
leave
push
ss
test
mov
out
scas
stos
pop
out
add
mov
xchg
jmp
sti
pop
dec
and
fs
stc
push
xor
sub
lret
xor
mov
mov
or
testl
testl
xchg
cli
call
rorb
push
test
mov
pop
push
inc
mov
mov
outsb
rclb
jo
xor
sub
push
iret
mov
and
cmp
xchg
adc
js
arpl
popf
in
in
js
das
cmp
push
adc
cmp
push
and
and
mov
mov
xchg
movl
popf
in
jb
movsb
push
push
data16
fcom
dec
vaddps
arpl
sahf
cli
and
push
dec
sbb
mov
out
leave
call
or
and
cmpsb
push
mov
mov
mov
hlt
stos
inc
in
pop
ret
repnz
outsb
inc
pop
cmpsb
or
sbb
in
adc
cs
fdiv
loop
cmp
insb
mov
js
aad
aad
adc
mov
jp
cld
add
stos
mov
stos
rcr
sbb
shr
stos
sub
aas
xchg
xchg
imulb
mov
and
scas
call
in
sti
hlt
and
mov
out
add
jne
mov
jo
andb
xor
adc
dec
repz
negb
out
dec
mov
cltd
jge
fldcw
mov
xchg
cmp
xchg
xchg
jns
lcall
or
imul
mov
out
hlt
sbb
adc
or
jg
or
fwait
cmp
std
dec
icebp
in
xorl
mov
fisttpl
xchg
imul
inc
and
dec
jb
jmp
adc
lods
out
sbb
into
shl
xchg
fistpll
enter
pop
inc
inc
mov
enter
mov
cltd
and
les
jbe
data16
shrl
xchg
add
lds
cld
pop
cwtl
lods
ds
hlt
xchg
jbe
sub
cmp
imul
mov
imul
dec
dec
sbb
add
hlt
sub
pop
add
pop
xor
sub
push
outsb
xor
in
push
xchg
inc
mov
xor
jl
popf
ja,pt
sub
inc
jns
jg
push
xchg
repnz
add
femms
and
xchg
aaa
ret
mov
mov
and
pop
and
std
bound
loopne
jg
daa
mov
dec
lods
sbbb
pop
push
cmp
xchg
push
cmc
es
mov
sub
cmpb
lea
stc
jp
cmp
adc
dec
movsb
jle
loop
pop
pop
inc
cmp
push
cmp
rcl
lcall
out
xchg
or
xor
ret
push
ljmp
gs
ja
fwait
pusha
addl
push
std
call
pop
es
mov
mov
jp
jo
in
sti
jge
mov
jbe
mov
ret
jg
sub
mov
jecxz
mov
push
into
sbb
add
xchg
mov
out
add
loop
inc
je
mov
popf
or
daa
or
cmp
stos
in
mov
int
xlat
clc
push
sub
inc
pop
iret
es
and
sbb
jb
xor
add
cmp
inc
jg
sbbl
mov
mov
inc
pop
mov
xor
aaa
std
dec
js
nop
lret
idivl
shll
mov
xlat
enter
jg
pop
iret
jns
in
mov
or
jge
cld
stos
movsb
mov
dec
mov
xchg
xchg
je
data16
jnp
pop
and
dec
shll
mov
mov
aaa
lods
js
add
xlat
aaa
mov
dec
adc
orl
mov
dec
es
sub
shr
push
cmpsb
add
sub
test
lcall
lahf
mov
pop
cli
push
jp
cs
jecxz
lcall
sub
jmp
mov
shlb
adc
push
out
in
popa
out
jno
xchg
lods
std
adc
inc
sarl
cld
ds
sbb
cmp
mov
sub
adc
enter
jle
dec
jne
pop
mov
xor
jecxz
loopne
jmp
gs
jmp
push
fdivs
test
pop
repz
sbb
pushf
loopne
xchg
mov
xchg
daa
mov
outsb
inc
add
leave
xchg
addr16
sarb
sbbb
jb
aam
fidivl
sub
add
jne
jne
or
fsubl
or
aad
jo
mov
xor
fimull
adc
sbb
out
cltd
add
int
pop
sbb
jns
jne,pn
pop
pop
xchg
pop
bound
mov
xorb
dec
test
or
dec
jg
insl
shrb
pop
jecxz
scas
hlt
scas
cli
jmp
xor
roll
stos
dec
pop
push
add
shrl
inc
sahf
stos
mov
xor
sub
clc
push
cli
out
dec
inc
test
jbe
mov
mov
sarl
cmp
iret
push
pop
mov
xchg
pop
cwtl
sub
inc
jo
lcall
pop
push
fadd
loope
test
sbb
jno
cltd
imul
popf
mov
inc
push
in
inc
aaa
aam
mov
pop
and
into
frstor
push
insl
mov
sub
cmp
dec
stc
sbb
adcb
pop
faddl
jecxz
cmp
push
jbe
cmc
scas
mov
nop
sbb
cmc
stc
aam
lock
cmp
stc
mov
cwtl
cmpsb
insb
or
lods
les
sbb
test
ljmp
jae
es
lahf
out
add
out
and
popf
jge
movsl
push
out
mov
dec
leave
adcb
sahf
mov
test
pop
sbb
inc
push
jge
xor
inc
mov
mov
cwtl
jle
inc
sbbb
dec
jb
outsl
push
out
into
push
push
notl
je
push
clc
and
loope
subb
add
sub
lret
xor
adcl
cmp
fdivl
jle
sub
andl
mov
push
mov
ljmp
repz
mov
cmpl
mov
popa
inc
inc
fdivl
in
int3
in
aas
fs
mov
rcrb
mov
aas
shrb
xchg
scas
dec
or
stos
test
add
xchg
sbb
andl
adc
jg
xchg
hlt
shl
mov
out
popa
adc
cmc
popa
das
fsubl
jne
nop
xor
int3
mov
testb
fs
mov
mov
rcl
push
sub
sbb
inc
sbb
jle
aaa
out
fnstenv
aad
out
je
pusha
lea
xor
gs
inc
pop
ss
fisubs
and
sti
xchg
mov
jne
bound
dec
scas
adc
and
je
adc
mov
jg
addr16
mov
fnsave
cmp
es
rolb
xchg
shll
movsl
jg
scas
jle
sbb
push
sbb
sub
cmpl
adc
jae
bound
mov
mov
rorl
aad
ljmp
int
push
js
int
or
testb
mov
mov
cmpsb
fwait
inc
cmpb
arpl
add
xchg
inc
mov
faddl
sub
icebp
and
jle
xor
fistl
cmp
loop
arpl
push
stc
or
jae
dec
fmulp
ret
stos
and
aam
stos
jge
cmp
mov
in
dec
cmp
add
push
fidivs
jmp
rclb
incl
push
movsl
mov
push
mov
ss
jno
jno
cld
sub
adc
in
jae
mov
dec
jp
cmp
xchg
movsb
pop
cmp
test
lcall
dec
out
push
mov
sbb
mov
push
jl
cmp
testl
adcb
add
mov
enter
fstl
sti
inc
and
into
cmp
push
inc
pop
jg
adc
xchg
sub
roll
or
xchg
jmp
pop
cmc
or
sbb
inc
clc
rolb
into
or
add
jb
and
or
ds
movhlps
in
inc
lods
nop
add
pop
mov
jle
mov
add
mov
testb
add
movsl
adc
or
into
lcall
mov
mov
fstpt
test
adc
jmp
xor
fcomi
lret
inc
daa
shll
dec
jns
addb
in
in
shll
dec
push
mov
inc
inc
mov
rclb
dec
adc
add
mov
and
fimull
adc
lods
daa
dec
pop
data16
sbb
dec
lret
add
mov
cmp
ret
cmpsb
pushf
jmp
rcrl
clc
or
mov
cltd
mov
xchg
int3
mov
mov
pop
inc
movsl
outsb
subl
sbb
mov
xchg
into
js
push
jb
sbb
adc
les
sub
rcll
out
mov
or
fwait
mov
pop
pop
shl
pushf
data16
rcll
or
mov
ret
ss
das
lea
mov
pop
and
xchg
adc
call
nop
scas
jbe
add
cli
mov
sbb
and
fldenv
dec
daa
dec
jne
imul
adc
or
push
cltd
mov
hlt
rcrl
push
out
or
clc
mov
fnstenv
ljmp
andl
sbb
stc
imul
jo
sbb
pop
jmp
sahf
dec
jae
push
cli
cltd
jecxz
nop
and
rol
std
pusha
fcmovnb
ds
fisubrl
jo
xlat
pop
and
jge
cwtl
and
mov
lcall
xchg
and
push
xor
call
hlt
mov
sbb
push
mov
scas
std
push
dec
dec
xchg
mov
repz
jmp
xchg
test
addr16
adc
add
jge
or
rcll
ljmp
inc
and
pop
loop,pn
inc
or
int
js
insb
dec
icebp
pop
test
shlb
repz
test
pop
data16
cmc
jbe
fs
dec
push
fst
pop
dec
or
mov
out
idivl
stos
pop
scas
dec
mov
ljmp
add
cmp
test
call
xchg
add
repz
scas
lcall
test
xor
push
push
sbb
imul
cmp
mov
pusha
ret
ljmp
out
mov
xchg
push
enter
inc
mov
pop
out
movhps
out
stos
or
daa
cmp
movsl
lds
xchg
mov
cmpsl
cmpl
add
xlat
push
jbe
jl
cs
inc
popf
into
inc
scas
xor
xacquire
repnz
and
adc
xor
enter
cwtl
int3
dec
or
imul
xchg
mov
nop
in
push
lods
shlb
fsubs
push
mov
fs
out
adc
xor
dec
ret
xchg
pop
sbb
mov
mov
jge
fisttpll
nop
popa
xchg
arpl
adc
mov
jg
dec
pop
pop
xor
popf
dec
jno
mov
jl
imul
sbb
stos
imul
test
aad
dec
fmull
xlat
lods
out
or
xor
mov
mov
cwtl
cwtl
mov
rol
sub
out
push
pop
icebp
bound
es
lret
stos
or
jnp
mov
xchg
cs
push
inc
fisubrs
jb
mov
jp
daa
adc
push
jb
adc
jmp
sub
sbb
mov
cmpsb
ret
les
lods
sbb
loope
dec
int
lods
insb
xchg
shrl
dec
stc
movsb
or
hlt
lea
push
push
add
sbb
ljmp
mov
jl
xor
scas
cltd
out
mov
pop
orl
push
scas
es
sbb
in
pop
or
std
mov
xchg
roll
or
push
scas
sarb
xchg
sub
sbb
jg
pop
popf
mov
aaa
mov
pusha
fsubs
xor
and
inc
mov
push
repnz
mov
inc
shlb
stc
xchg
loope
pop
dec
aas
xlat
xchg
andl
out
mov
sahf
sbb
mov
xor
or
push
and
add
sarb
cmp
or
and
stos
and
leave
sub
push
shl
pop
push
repnz
test
pop
lods
cmc
cmp
ret
incl
imul
xchg
cmp
or
pop
bound
jg
fistpll
dec
dec
pop
call
mov
inc
xchg
in
xor
or
xor
jecxz
rcll
xchg
lret
ret
sub
fprem1
or
pop
and
imul
adc
shr
arpl
jmp
nop
lret
clc
add
jbe
jae
dec
enter
xchg
ret
dec
add
stos
dec
cmc
or
xor
and
mov
les
sbb
test
adc
add
mov
jb
pop
int3
stc
sbbb
mov
jp
dec
rcl
adc
sub
xor
jmp
lods
insb
sbb
push
inc
test
sbb
cmp
cwtl
mov
add
mov
div
into
cld
mov
out
pop
jge
rol
fidivs
jecxz
in
movsb
dec
ret
dec
add
arpl
dec
dec
dec
hlt
mov
or
mov
pop
xor
mov
jecxz
or
jge
mov
repnz
adc
testl
and
cwtl
mov
sbb
cmp
mov
jge
xchg
mov
xchg
mov
jns
adc
in
jecxz
jg
lds
scas
aaa
repnz
mov
bound
loope
and
dec
adc
loope
enter
imul
cs
movsl
pop
mov
mov
cld
or
int3
sbb
xor
mov
clc
imul
into
popa
aaa
pop
xchg
inc
scas
push
mov
cltd
pop
mov
and
jno
xchg
sbb
enter
xchg
sub
sbb
pop
pop
popa
sarb
incb
jle
sbb
cmp
repnz
andb
mov
or
push
pusha
mov
push
pop
xorl
movl
in
mov
add
xorl
arpl
divl
sub
outsb
push
fldt
pop
fs
divl
dec
pop
cli
popa
xor
into
arpl
ja
inc
dec
sbb
stos
ds
xchg
insl
mov
xchg
icebp
ds
repz
cmpsw
or
pop
sub
into
jle
or
xor
and
fwait
test
jae
cmp
std
jmp
xor
pushf
sbbl
mov
mov
cwtl
stc
jle
les
loop
les
and
std
xchg
inc
push
and
loopne
test
mov
lods
cmc
shrl
adc
stos
push
xor
jnp
push
mov
or
pop
fstpt
shr
sub
inc
outsb
mov
test
mov
pop
sbb
cmp
mov
push
cwtl
mov
push
xor
add
mov
fisttpl
push
sbb
out
push
xor
xchg
mov
cwtl
fistps
xchg
inc
push
mov
inc
loope
pop
pop
pop
dec
sub
roll
xchg
in
shll
add
adc
fmuls
clc
imul
sub
mov
in
adc
nop
cmpxchg
inc
or
inc
rcrb
in
pop
ss
orl
in
repz
out
jns
or
xchg
imul
fiadds
or
xor
es
and
sub
sbb
nop
inc
sub
jo
pop
mov
sub
imulb
pusha
out
jle
int3
pop
scas
int3
or
mov
popa
lds
repz
arpl
sbb
pop
inc
xchg
in
shlb
sti
xor
push
and
push
inc
sbb
adc
cld
xchg
sti
push
sahf
lahf
lods
sti
mov
lea
xor
push
repz
pop
and
out
adc
ror
and
nop
sub
sbb
popa
xchg
pushf
push
xlat
loope
mov
fsubl
xor
andb
xchg
nop
inc
rcl
push
adc
or
cmp
xchg
ret
pop
sub
and
cmc
ljmp
insl
into
sar
dec
push
sbb
fdivs
add
mov
mov
into
imul
jle
and
dec
lret
fnstcw
ljmp
in
jne
sub
cmp
jne
add
sbb
inc
sarb
add
xor
ret
jmp
stos
les
imul
and
sbb
sbb
out
inc
cmpl
and
test
push
mov
loopne
and
fidivs
adc
lahf
push
test
sbb
jo
loop
pop
jl
testb
hlt
shrb
push
lahf
adc
jno
add
sub
sbbl
push
test
sub
es
imulb
mov
xchg
cmp
or
pop
pop
fcmovne
in
shlb
inc
and
fisttps
test
insl
jecxz
dec
ret
popf
pandn
dec
jle
dec
out
popa
lahf
clc
inc
xchg
cmpsw
jge
xor
mov
bound
adc
push
mov
inc
jmp
insl
jg
enter
and
pop
loope
shll
rcrl
jno
xchg
or
xlat
push
scas
mov
sub
cmp
mov
pop
push
xor
push
mulb
mov
not
aaa
add
sbb
cltd
adc
jne
cmp
dec
xor
inc
sarl
mov
sbb
jo
loope
adc
popa
xlat
pop
mov
stos
and
push
ret
fcomps
pop
mov
inc
xchg
loope
out
jle
dec
aad
mov
pavgw
or
sbb
pop
xchg
out
idivb
sub
adc
cmc
jle
xor
inc
or
lods
out
sub
int3
push
mov
jns
stos
pop
mov
sbb
imul
and
fwait
xor
jbe
ss
jge
movsl
subl
mov
int
pop
push
lock
sbb
cmp
dec
iret
push
mov
adc
lret
movsl
icebp
mov
movsb
bound
ret
ud0
cltd
mov
push
clc
mov
cmp
inc
out
clc
retw
pop
leave
ds
jle
movsb
inc
cmp
fsubl
dec
or
es
ljmp
ja
sub
and
imul
repz
hlt
data16
and
jae
inc
cmp
clc
lods
les
fsubs
sahf
cmpsl
sbb
and
lds
movsb
push
jo
test
sti
push
push
pop
mov
mov
fwait
sbb
aam
xor
cmp
aad
fsubrs
pop
lcall
inc
cmc
mov
stos
mov
lods
inc
mov
jg
movsb
cmp
cli
jo
popf
add
inc
dec
jp
mov
dec
in
addr16
dec
clc
scas
or
pop
andl
ret
das
xchg
ja
ficoms
scas
inc
pop
stc
mov
push
aas
cmp
add
outsl
shlb
enter
cmpsb
mov
imul
sti
sub
inc
xor
mov
jge
push
push
lock
push
pop
ljmp
std
add
stos
mov
jno
cwtl
push
fisubrl
repz
xchg
ret
pop
push
addr16
sbb
sub
cld
pop
xchg
jmp
pushf
gs
xchg
nop
repz
jle
or
dec
cmp
dec
jle
push
sarb
push
dec
or
movsb
movsl
pop
jl
lods
ljmp
fs
cltd
mov
rorl
sub
in
inc
add
testl
mov
subb
aad
dec
out
pushf
mov
ficoms
xchg
adc
cli
jne
fwait
jb
sbb
adc
pop
lds
xchg
xor
dec
les
or
push
popf
mov
or
inc
jmp
mov
in
insl
sbb
hlt
xor
movl
out
loop
scas
loopne
bound
sbb
push
stos
add
mov
pop
or
in
push
fs
xchg
sahf
cmp
pop
loopne
lret
loope
mov
mov
fcompl
das
cmc
xchg
pop
jb
hlt
into
scas
cmc
test
push
jae
dec
cmp
jnp
lret
mov
jle
insb
xchg
loope,pn
cmpsl
or
xor
lods
sbb
mov
fnsave
cltd
sub
pop
adc
push
repnz
mov
and
mov
fcmovne
xchg
pop
lahf
mov
js
mov
insl
inc
cmp
sbb
adc
jle
or
jb
xor
test
adc
inc
std
int
add
lock
insb
lahf
dec
movsl
arpl
sub
dec
inc
jecxz
test
pushf
xor
and
and
mov
lock
push
inc
cmp
cmpb
mov
or
mov
in
and
cmp
negl
add
sbb
adc
sbb
rcrb
stc
imul
fcoml
or
cmpsb
pop
fwait
sarb
pop
mov
dec
lahf
mov
jecxz
mov
cmc
scas
lock
test
out
and
or
cmp
mov
cmp
cmp
pop
mov
dec
adc
sub
mov
add
and
fnsave
jge
pop
shlb
sub
push
out
inc
rol
aas
lea
mov
xchg
repz
mov
bound
aam
mov
aad
mov
cmp
imul
add
mov
mov
rcrl
pop
nop
mov
loopne
sbb
add
es
repnz
push
jne
jmp
jae
or
loope
imul
inc
dec
in
subb
push
sub
xor
xchg
push
add
ret
out
mov
add
lea
cmp
fisubrl
sbb
movsl
sar
xchg
sub
cmp
push
stos
iret
mov
xor
je
dec
cmc
lock
jb
pop
and
sbb
adc
dec
inc
in
lret
inc
sbb
mov
cmpsb
subb
rcll
pop
cmpsl
cmp
jmp
sar
mov
push
mov
mov
sbb
inc
adc
std
jb
stos
pop
xor
and
repz
dec
les
lcall
adc
mov
jp
aad
push
repz
inc
sub
lock
mov
in
sub
dec
outsl
mov
rolb
mov
xor
call
push
imul
mov
int3
mov
dec
sar
inc
test
sbb
fnstenv
mov
inc
dec
mov
xlat
inc
std
or
aam
xchg
sub
jne
inc
add
inc
loope
int
sahf
push
pop
roll
movups
into
mov
xor
cwtl
and
lea
and
cwtl
jmp
cmpsb
adc
pushf
arpl
inc
aad
fwait
jb
and
jo
iret
mov
daa
fcomps
lds
sahf
repz
push
and
iret
es
leavew
sub
bound
adc
add
inc
incb
sahf
jno
mov
inc
ret
inc
fiaddl
push
cld
int3
loopne
mov
cmp
test
mov
iret
jns
xor
jmp
push
jmp
sbb
and
jecxz
mov
xchg
sub
mov
xor
cld
cld
jo
sbb
xchg
movl
jg
xchg
xlat
cmpb
aam
mov
loope
int
adc
xor
inc
xor
sub
cwtl
in
cltd
gs
cmp
in
fistps
dec
push
mov
dec
sbb
cld
ja
jg
decl
movsl
mov
xor
hlt
fimuls
scas
xor
loopne
rcr
pop
sbb
insl
in
cld
cmc
addr16
adc
dec
enter
cmp
xor
in
mov
sub
repnz
mov
leave
xor
cmpsl
and
je
jne
cmpsl
push
xor
mov
sbb
push
sbb
cmc
aad
movsl
nop
mov
inc
fsubl
pop
mov
imul
das
fistpll
sub
xor
pushf
adc
pusha
and
dec
xchg
orl
jno
cmp
and
mov
cmpsb
outsl
mov
pop
in
mov
mov
push
cltd
mov
fs
push
ret
pop
test
xchg
sbb
repz
outsb
xchg
fisttps
pop
jo
mov
adc
out
faddl
test
arpl
add
jmp
sub
loope
aam
jg
bound
sub
jmp
sti
mov
push
daa
lcall
rolb
mov
add
inc
add
fldlg2
es
xchg
es
xchg
scas
jp
jb
loopne
into
pop
cwtl
loop
into
js
dec
mov
push
mov
andb
dec
fidivl
scas
out
arpl
pusha
imul
mov
xchg
lock
out
jbe
dec
sub
inc
push
jbe
stos
xor
xchg
test
mov
cld
mov
sbb
mov
dec
mov
fidivs
and
mov
mov
pop
rcll
stos
mov
jb
cmp
lret
pop
pop
mov
sbb
ljmp
mov
outsl
cmp
int
dec
sbb
shl
mov
cmp
push
dec
xchg
mov
movsl
in
imul
cli
inc
clc
xor
aam
loop
push
sub
push
jae
xchg
cmp
jl,pn
popf
sub
mov
cmpsb
pushf
adc
dec
pop
ds
dec
jp
mov
dec
cs
jp
dec
insl
hlt
addl
or
shll
jg
test
inc
mov
sbbl
add
insl
dec
loopne
cmp
scas
movsb
sti
mov
inc
js
mov
xchg
cmp
hlt
mov
jg
xchg
pop
je
mov
push
mov
popa
stos
int
je
jmp
dec
cltd
lret
push
sub
in
add
mov
sub
aas
mov
jecxz
jmp
sbb
mov
or
aad
out
lahf
mov
jne
es
mov
or
dec
adc
ds
mov
or
test
mov
dec
fwait
sarb
inc
popf
ja
cmp
fisttpl
in
cmp
cmpsl
pop
jp
daa
fmull
mov
popa
xchg
pop
call
clc
and
push
orl
incl
popf
xor
ljmp
xor
lret
and
mov
lds
out
mov
dec
cmp
pop
pop
rcll
sbb
shrl
adc
jg
rcr
mov
fdiv
sub
das
lret
js
ret
jge
cmp
add
adc
nop
xchg
sbb
lahf
into
daa
gs
xchg
test
adc
les
pop
int
scas
movsl
loop
fsubr
int3
sbb
push
add
mov
adc
pop
xchg
pop
out
scas
pop
xlat
adc
cmp
xor
cltd
inc
mov
xchg
sub
add
mov
xor
cli
ret
fwait
les
repnz
mov
nop
sti
ret
stos
mov
fdivl
push
sbb
inc
cmc
je,pt
and
inc
cmp
xlat
pop
out
call
je
mov
sub
sarb
out
mov
lahf
in
out
dec
adc
add
dec
push
cwtl
cmc
stos
inc
pop
pop
mov
jecxz
dec
test
sbb
dec
xor
jge
nop
mov
cmp
and
cmp
mov
sub
popfw
outsb
movsl
adc
adcb
mov
cmpsl
scas
repnz
push
nop
fs
lods
gs
or
stos
mov
adc
inc
mov
and
cld
jmp
popa
loope
outsl
sbb
push
daa
mov
jns
adc
and
or
add
mov
jns
outsb
or
sub
mov
mov
push
jb
cmc
int3
outsb
push
cmp
fwait
outsl
in
ljmp
pop
add
fstl
mov
aam
arpl
lock
push
outsl
out
ret
mov
pop
roll
fs
mov
or
jmp
aaa
cld
adc
mov
push
add
push
cmp
or
ds
pusha
pop
jp
fmul
ljmp
add
aam
aam
daa
cltd
out
mov
xchg
fiaddl
jge
stos
cmp
sbb
shlb
mov
add
fisubl
cmp
adc
push
or
aaa
mov
sbb
sbb
movsb
mov
mov
fists
fidivl
in
pop
sbb
push
ror
adc
mov
lcall
in
inc
fists
cmp
addb
popa
mov
add
out
js
ret
ja
cltd
gs
mov
sub
push
add
dec
cmpsl
and
int
int3
outsb
mov
subl
int3
mov
push
xchg
pop
cmp
negb
lds
cwtl
into
jb
aas
insb
data16
mov
into
sbb
mov
and
xor
cs
sub
andl
cmc
jbe
addl
enter
cmp
orl
test
mov
mov
and
xor
sahf
cmp
ret
dec
int3
inc
xchg
mov
sub
or
push
xchg
dec
sarb
mul
pop
lret
testl
add
xchg
xor
push
test
add
fldt
je
cli
je,pt
jg
adc
inc
sbb
inc
cmp
push
test
out
push
pop
sbb
gs
mov
roll
arpl
push
fdivrs
sbb
jne
and
test
bound
and
sbb
adc
dec
nop
js
fisubrs
mov
rcrb
std
invd
sti
pop
fiadds
cli
jg
mov
inc
in
cli
rorl
fcompl
bnd
jecxz
test
xchg
push
inc
push
stos
mov
mov
fldl
push
mov
xchg
jbe
sub
push
cmp
cli
mov
mov
mov
jo
mov
push
xchg
shrl
push
std
fldl
negb
scas
jp
cmp
pop
fsubp
cmp
and
out
pop
lods
sub
sbb
out
rcrb
pop
subl
pop
mov
lret
pop
aas
or
aad
jns
xchg
clc
mov
add
repz
mov
ds
inc
in
dec
in
xor
and
sbbl
push
mov
push
xor
pop
stos
mov
loop
mov
push
imulb
ja
xchg
mov
add
dec
loope
movsl
or
sarl
cltd
dec
mov
iret
mov
lods
mov
fimuls
sahf
mov
stos
push
test
bound
push
jno
or
sub
rclb
std
ja
dec
push
dec
xchg
inc
xchg
mov
cli
fldl
fisubl
jecxz
pop
adc
pop
bsf
pop
imul
bound
aaa
mov
xchg
mov
inc
sub
dec
jg
sbb
shlb
dec
dec
je
add
enter
scas
pushf
clc
das
sti
push
dec
das
loope
ret
dec
outsl
push
call
mov
int
adc
std
and
jne
sarb
imul
mov
dec
jp
cmpsb
xlat
mov
jne
aad
cmp
ret
pop
fiaddl
pop
test
lcall
jb
inc
in
sbb
fdivrl
mov
rcrl
sbb
int3
mov
call
sub
fisttps
test
lahf
movsl
xchg
jg
insl
pop
push
inc
mov
popf
dec
xchg
jle
xchg
xchg
mov
jp
lods
push
imulb
pop
mov
sub
push
dec
mov
incl
scas
popf
mov
mov
or
push
and
je
mov
cli
jnp
ret
jno
cmc
push
mov
popf
paddusb
stc
fiaddl
rorb
dec
dec
pop
popl
pusha
dec
jg
fidivl
sub
xor
cmp
jl
iret
jo
fucomi
cmovg
loop
push
sub
jecxz
mov
loopne
mov
idivb
push
jle
data16
pop
mov
loop
ret
lret
push
lcall
jle
xchg
push
cmp
mov
aas
or
out
and
les
sub
mov
movsl
rcrl
cmp
mov
pop
int3
push
ss
xchg
test
add
inc
sbb
xchg
xchg
inc
inc
pusha
pop
sub
jbe
je
cmp
dec
mov
arpl
mov
in
jno
pop
add
pop
jae
mov
insl
int
push
jl
push
xor
arpl
push
xlat
aad
mov
movsb
mov
pushl
mov
jle
cwtl
int
in
iret
cmpsl
call
xor
xor
sbb
inc
aaa
jmp
adc
lret
outsl
jae
mov
xchg
mov
aam
lahf
sbb
sbb
xchg
add
ds
pop
dec
jns
test
or
das
daa
mov
jecxz
pop
mov
ret
vhaddpd
xlat
jae
pop
push
in
mov
adc
aaa
jmp
js
xchg
mov
stc
cltd
sbb
js
sbb
aam
xchg
dec
sti
add
leave
pusha
jbe
pop
and
jge
adc
xchg
fadds
mov
fidivl
call
mov
bound
add
pop
in
xchg
or
mov
clc
arpl
jmp
into
add
adc
pop
cmp
sub
jmp
data16
add
mov
push
sti
cld
or
jno
sbb
mov
xchg
mov
lock
dec
lahf
rcrl
les
dec
out
mov
push
insb
nopl
scas
xor
mov
mov
jne
lret
cli
mov
sbb
xor
loope
jp
push
popa
mov
scas
in
add
loopne
cmp
mov
inc
hlt
inc
jecxz
mov
mov
sti
fisttpl
mov
push
fs
mov
sbb
rolb
jne
push
sbb
movsl
cs
add
mov
divl
inc
fimuls
xor
cld
and
mov
daa
push
js
cmp
mov
gs
or
mov
push
sbb
jo
hlt
pushf
and
and
sti
mov
xchg
imul
inc
inc
mov
mov
cmp
repnz
push
sarb
sbb
mov
std
rol
inc
imul
mov
fcmovbe
icebp
icebp
popf
jnp
shl
sub
pop
add
jl
xlat
rcrl
divl
and
aam
push
add
cmp
sahf
mov
mov
mov
aaa
pop
xor
loope
idiv
adc
mov
decb
out
mov
xchg
push
cmp
test
cmp
or
iret
mov
daa
jg
shlb
sahf
jecxz
push
in
fdivs
out
jb
into
mov
ljmp
add
mov
out
and
pop
decl
movsl
xchg
rcr
xor
jnp
xchg
inc
movsl
cli
jno
nop
loopne
push
jne
pop
insl
and
push
xor
sub
fstps
sbb
rorb
aam
lock
jns
mov
mov
cmpl
fildll
rcll
and
inc
mov
dec
mov
xor
sub
mov
and
iret
mov
int3
jb
imul
add
loopne
test
fwait
lods
add
les
xchg
fs
sub
out
ljmp
aam
out
xchg
fmul
test
add
daa
mov
cli
arpl
jp
fildl
inc
lret
test
jb
sti
xchg
push
scas
xchg
pop
xor
ds
shll
or
pop
shrb
xor
icebp
push
sar
xchg
aad
fistps
notl
aaa
mov
movd
xlat
pop
pop
jbe
mov
jae
or
sbb
and
sub
mov
dec
stos
pushf
jnp
imul
xor
pusha
mov
enter
repz
push
ss
hlt
add
dec
jne
cmp
fwait
cli
jmp
aad
fildl
test
cmp
xor
shlb
adc
shl
jle
loope
pop
shrb
addr16
xchg
mov
mov
adc
mov
add
inc
xor
cmp
xchg
ret
incl
lret
in
xor
xor
sub
rorb
sarl
mov
jb
pop
out
pop
sub
inc
mov
adc
movsb
sub
adc
pop
cmpsb
and
leave
pop
pop
lods
data16
mov
pop
pop
arpl
or
or
jl
xorl
pop
adc
js
push
mov
cmp
mov
fisttps
fcomps
mov
fdivr
xchg
cld
mov
mov
or
lods
js
or
sbbl
jns
mov
xor
inc
pop
lcall
test
dec
and
sub
and
adc
pop
fwait
nop
arpl
sbb
inc
cmp
scas
xor
clc
aam
leave
sub
cld
dec
lds
cmp
shrb
and
fiadds
int3
xchg
xchg
out
mov
aam
cmp
sbb
fidivl
xchg
inc
and
aas
insb
out
jmp
and
add
sbb
push
jo
imul
jg
loop
or
push
test
push
add
inc
mov
loopne
mov
cmp
pop
outsl
fwait
push
iret
out
addr16
xchg
push
inc
inc
sbb
sub
fidivrl
out
inc
mov
jp
lahf
adc
mov
sbb
pop
pop
lods
mov
gs
inc
jl
mov
jb
ficomps
mov
adc
xchg
shrl
mov
call
adc
fwait
test
mov
ret
call
ss
pop
lcall
call
ss
mov
decb
dec
repz
dec
mull
and
hlt
in
scas
icebp
repnz
pushf
out
imul
in
push
xor
adc
add
lret
or
inc
jnp
pop
cmp
mov
lods
or
cmpsl
sbb
jns
mov
push
mov
sub
and
fucomp
or
cs
add
xchg
add
jge
push
aaa
mov
push
cmpsb
pop
inc
icebp
imul
int3
mov
out
lahf
aam
popa
jp
dec
mov
es
ss
mov
xor
ss
jmp
jns
fs
pop
jecxz
outsb
leave
mov
sarl
jmp
add
sahf
adc
jle
shrl
push
movb
loopne
in
dec
gs
push
jno
mov
fnsave
and
mov
call
cmp
pop
out
pusha
sub
inc
push
mov
std
ljmp
std
xor
pop
mov
push
jge
dec
push
sbb
mov
fnsave
mov
adcl
mov
test
aas
scas
int
inc
mov
lret
xchg
aad
jg
pop
and
fdivrl
pushf
push
pop
inc
or
into
aam
and
fcomp
adc
jae
int3
dec
fs
pop
sub
in
test
adc
dec
out
mov
movzwl
and
lods
fstl
and
test
sbb
stos
dec
mov
adc
jbe
div
incl
inc
pop
repz
cmp
or
xor
mov
jmp
mov
fbstp
cmp
pop
xor
push
cld
scas
pop
arpl
push
xor
leave
xor
and
pop
pop
insl
or
or
push
cmpxchg
outsl
push
xchg
lods
test
stos
sti
add
popa
mov
int
dec
outsb
jle
nop
ret
adc
es
gs
idivb
or
ficompl
jge
xchg
sbb
and
jl
mov
push
fstl
xlat
es
ja
in
mov
sbb
and
test
pop
and
jb
int
insl
testb
out
movsl
scas
xchg
icebp
jns
in
pop
sarl
mov
pop
insl
in
push
dec
in
dec
inc
gs
and
mov
and
push
and
aaa
ja
cmpsl
rolb
sarb
sub
jbe
repz
lods
cltd
rclb
push
adc
dec
int
movsb
jge
ja
dec
sbb
push
mov
mov
jg
xchg
mov
xor
push
mov
jno
mov
inc
mov
push
jg
inc
stos
test
jle
push
mov
mov
insb
sub
in
mov
mov
jmp
and
sub
dec
pop
ss
mov
and
ret
es
fsincos
mov
test
dec
xchg
cmp
pop
jmp
mov
shrl
inc
push
mov
stos
rcl
das
add
repz
cmpsl
jae
dec
xchg
pop
aas
push
lods
adc
out
outsl
loope
cwtl
mov
jne
xor
dec
jp
add
adc
shll
pop
lock
out
push
data16
insb
sub
mov
fimull
pop
addr16
inc
mov
inc
ljmp
adc
cmpsl
jno
dec
cmpsl
dec
int
push
jae
mov
cmp
int3
outsl
push
pushf
mov
sbbb
push
xchg
push
xor
test
add
add
mov
xchg
and
sarb
aaa
jecxz
mov
mov
rolb
push
and
push
jns
das
aaa
xor
push
lods
cmpsb
push
mov
popa
add
add
xchg
jbe
lea
mov
and
or
popa
cmp
mov
xor
mov
or
cmpsb
pop
in
outsl
jb
dec
arpl
ficompl
jb
mov
stos
cmp
adc
mov
pop
arpl
leave
push
dec
xor
loop
jp
mov
sbb
push
push
ja
fnstenv
push
pop
pop
in
and
stos
outsb
pop
je
xor
push
inc
enter
inc
dec
jno
add
fs
cwtl
out
mov
mov
add
daa
bnd
js
test
clc
mov
roll
insl
and
aam
loopne
test
orb
lock
test
mov
repz
xchg
pop
add
adc
mov
je
xor
dec
cld
mov
sbb
push
out
test
and
repz
pop
movsb
mov
jmp
jmp
push
jb
sub
rcl
jl
xchg
jmp
pop
fcmovnb
std
lods
es
sti
mov
push
jp
sti
mov
ret
test
sub
imul
in
or
xchg
add
lods
push
pop
movsb
ret
lock
jo
sar
int
lcall
aas
and
repz
jnp
js
lea
lods
aaa
gs
dec
jb
and
outsl
pop
pop
jbe
mov
sub
push
mov
bound
sub
adc
shll
mov
xchg
mov
or
icebp
add
push
clc
jecxz
xchg
inc
and
xor
loope
fdiv
rcl
sbb
mov
mov
sarl
jp
movsl
push
pop
push
sbb
mov
loopne
addb
pop
adc
out
xor
popf
dec
aad
lods
stos
ret
or
sub
movsl
out
adc
pop
jmp
popf
cmpsb
sbb
mov
mov
jbe
ret
jl
shlb
push
stc
pusha
adc
jno
or
push
xor
jg
push
icebp
addr16
and
xor
cmpsb
jmp
push
adc
insl
cmpsl
sbb
pusha
xor
pop
jno
bound
sbb
and
xorb
pusha
cmp
rcl
push
int3
xor
jbe
pushf
mov
inc
rorl
enter
push
pop
xor
xor
push
mov
xchg
mov
dec
add
stc
adc
inc
js
cmp
inc
inc
stos
leave
inc
mov
leave
je
pushf
fs
or
gs
in
mov
imul
imul
xlat
push
mov
in
outsb
jecxz
xor
cld
cmc
sub
fs
add
into
add
iret
shlb
push
aad
pop
aas
xchg
shlb
mov
gs
clc
in
ljmp
imul
imul
cmp
or
add
insb
jge
jo
dec
lcall
loope
out
dec
push
inc
add
add
fwait
sub
mov
jmp
sub
inc
mov
dec
jg
or
sbb
aas
negl
repz
sbb
jne
or
cli
push
add
in
xchg
sti
sbb
test
pop
pushf
aas
cmc
add
adc
insb
repnz
mov
fbstp
inc
test
rcll
xchg
cmp
cmpsb
out
dec
sbb
gs
mov
and
in
pop
jne
movsl
jp
gs
jmp
cli
xor
roll
cmp
sbb
shll
push
fdivl
jle
icebp
out
bound
xchg
in
add
into
push
aas
bound
test
jbe
or
cmpsb
in
gs
pop
and
or
mov
jne,pt
jbe
mov
shrl
int
lret
push
add
mov
ret
jne
xor
pop
push
pop
icebp
rcr
mov
adc
jae
lret
mov
lods
js
ja
push
rcr
addr16
dec
pop
pop
cmpsb
lea
mov
push
fnsave
pop
adc
pop
pusha
mov
push
popa
mov
add
andl
je
aam
or
sarb
fwait
sbb
fimuls
mov
fcmovnb
outsb
jmp
jno
rorl
add
and
int3
cmp
outsl
sbb
hlt
sub
enter
add
add
cmp
lock
sarl
loop
xor
inc
add
xor
movsb
inc
hlt
mov
xor
rcrb
lds
in
mov
gs
addr16
inc
cmpsl
fsubl
data16
inc
xor
mov
push
fwait
enter
pop
scas
xchg
lods
add
jl
mov
mov
and
dec
sti
jo
dec
stos
orb
cmc
pop
test
daa
xchg
cmp
or
jp
push
ljmp
add
jbe
ret
add
sbb
sbb
stos
jae
iret
out
mov
mov
loopne
add
out
push
sub
sbb
xchg
and
xor
push
shlb
jecxz
fistpl
cs
jmp
fidivrl
sub
je
cmp
les
push
mov
sbb
lret
sbb
and
popf
and
sbb
test
xchg
test
jnp
push
mov
add
add
pop
addr16
xor
xchg
les
sub
sbb
sbb
sarl
sbb
pushf
push
sbb
ljmp
inc
loop
xchg
jmp
addb
push
sub
loope
ja
push
ret
cmc
and
jno
fcomip
mov
or
int3
cwtl
inc
fidivrs
inc
insl
adc
push
insl
cmp
pop
jb
sbb
daa
mov
and
or
out
adc
adc
add
xchg
iret
out
mov
or
mov
scas
aas
add
and
jp
test
mov
daa
sub
xchg
cmp
cwtl
pushf
popa
jae
mov
sub
sbb
dec
fisubs
pinsrw
sbb
lcall
popf
jns
subl
iret
rcrl
xor
icebp
out
bound
mov
stos
push
push
xor
sub
fbld
jno
dec
flds
mov
ja
cld
mov
in
or
stos
dec
fdivrp
xlat
sbb
inc
dec
out
sahf
pop
mov
jno
rorb
stos
push
jge
nop
ret
mov
dec
lods
xor
push
jne
sbb
jle
test
stos
enter
mov
rolb
das
loop
sub
test
pusha
jecxz
sti
add
das
or
mov
in
sbb
mov
popa
shlb
arpl
jecxz
push
imul
rcl
mov
cwtl
inc
loope
stos
ljmp
pop
cmc
pop
sbb
jnp
add
mov
jg
emms
mov
sub
inc
call
add
cmpsb
fcomps
jnp
add
mov
jmp
inc
arpl
lret
ljmp
je
adc
lods
cli
pop
xor
mov
leave
mov
bound
ud1
shr
push
mov
jne
jl
push
mov
cmp
jmp
test
fwait
icebp
xchg
out
mov
lds
mov
dec
jns
test
das
mov
aas
sub
cmp
es
xchg
push
sti
lods
sub
mov
cmpsl
repz
inc
jb
cs
xchg
imull
adc
jne
mov
jmp
add
shl
loope
pop
fisttps
jae
mov
xchg
or
mov
fisttpl
movsl
imul
mov
dec
in
paddsb
sub
sub
pop
ret
mov
mov
fscale
pop
mov
sbb
add
jle
mov
pop
cmc
xchg
movsb
cmp
ret
pop
jecxz
fidivrl
or
adc
push
push
lahf
push
push
cmpsl
add
sub
test
loopne
mov
lahf
mov
cld
or
insb
int3
dec
sbb
mov
and
inc
push
ja
sub
or
ss
or
inc
sahf
push
divl
data16
divb
pop
cwtl
sub
repz
push
xor
scas
mov
push
lds
dec
out
sahf
push
adc
cmpsl
adc
sub
dec
jo
adc
andl
loope
xchg
enter
add
sahf
inc
sub
stos
jmp
in
call
mov
sub
add
cli
add
cltd
mov
repnz
mov
shl
repz
fmulp
mov
clc
mov
popa
and
mov
jmp
stc
insb
push
mov
mov
sbb
xchg
lods
inc
mov
in
jne
dec
lock
or
enter
or
loop
jle
jne
sub
aaa
xchg
pop
fsts
sbb
mov
xorl
pop
rolb
mov
test
mov
in
or
lds
xchg
insl
in
push
sbb
xor
call
adc
notl
iret
stos
or
jg
pop
scas
xlat
rcrl
mov
lods
ret
inc
lods
or
sti
repnz
jmp
rorl
push
dec
mov
loope
sub
mov
mov
cld
enter
add
dec
ret
lea
inc
and
mov
imul
les
sbb
xchg
pop
pusha
dec
jle
fwait
xor
sub
sub
shrb
mov
sbb
stos
stc
sub
inc
in
push
xor
stos
pop
dec
xlat
jns
mov
pop
pop
pop
and
pop
stos
push
sub
sbb
xchg
xor
sbb
add
sbb
inc
and
es
shll
mov
pop
add
cmp
call
das
mull
out
inc
aad
mov
mov
movsl
stos
scas
es
loop
dec
das
xor
cmp
sub
rol
sarb
mov
mov
mov
mov
aam
jnp
js
inc
jne
inc
inc
in
data16
sbb
adcb
mov
shrl
rcl
fsubl
jle
or
wbinvd
loop
or
mov
jae
pusha
mov
scas
fnstenv
xor
outsb
dec
cmc
inc
icebp
rolb
mov
fdivl
pop
insl
ljmp
push
xchg
cwtl
ret
movsl
xchg
mov
cwtl
push
nop
jecxz
mov
icebp
push
jle
dec
fsubs
jo
mov
ljmp
ss
bound
mov
call
imul
pop
subb
mov
jns
addr16
addr16
mov
enter
xchg
xlat
mov
pusha
sub
fnstenv
fidivrs
jmp
outsb
jnp
mov
stc
jp
pop
mov
out
lods
and
les
cmp
and
add
imul
push
sbb
iret
int
icebp
fs
mov
sbb
lret
nop
sti
dec
pop
jns
jmp
xorl
and
adc
pop
mov
xlat
sub
dec
dec
or
or
clc
enter
push
sub
pushf
mov
adc
sub
das
inc
inc
in
add
ds
mov
outsb
sbb
xor
jmp
dec
push
arpl
lahf
jbe
nop
mov
sub
push
movsb
shlb
jmp
xchg
sub
insl
mov
mov
je
into
sub
jb
ljmp
popf
idivb
mov
sub
lcall
scas
outsb
push
adc
xor
incl
fnstcw
gs
bound
push
push
push
sbb
mov
loopne
arpl
jp
cmp
sub
stos
dec
add
lahf
ret
xor
jmp
cli
push
aam
fidivl
and
and
pushf
xor
loopne
js
pop
in
cmp
popa
iret
dec
addr16
fsubrl
fcmovu
rolb
pop
xor
pop
imul
mov
mov
sub
loopne
jp
cmpsb
repz
movsb
push
dec
and
cmp
fs
loopne
inc
dec
out
add
xor
mov
mov
xchg
jle
adc
in
add
iret
xor
popa
push
andl
pusha
insb
lcall
mov
inc
enter
mov
movsl
out
adc
inc
fsubl
xchg
and
xchg
std
mov
je,pt
cld
and
in
addr16
sub
cmp
mov
inc
cmp
aaa
ja
not
call
pop
dec
outsl
out
and
arpl
clc
mov
pop
das
les
cmp
dec
mov
in
add
daa
mov
sub
lret
and
in
ja
out
xchg
nop
scas
jbe
pushf
or
mov
insl
fisttpll
movsl
lea
dec
dec
mov
jmp
aad
xor
mov
and
sahf
xorb
mov
xlat
push
sub
sbb
mov
sub
xchg
cmpsb
orl
cmp
mov
scas
xor
rolb
cmp
stos
shlb
fimuls
cmp
and
lahf
dec
xchg
cmp
adc
or
testb
dec
test
sbb
aam
fistps
lods
inc
in
adc
xor
push
ja
sub
outsb
icebp
mov
out
inc
and
add
std
bound
ss
mov
bound
ss
cltd
dec
xor
test
inc
dec
testl
cmpsb
xor
stc
xor
pushf
push
inc
dec
das
aam
jle
or
inc
dec
pop
mov
dec
out
inc
jbe
xor
test
sbb
sti
or
icebp
mov
outsb
jnp
fisubs
es
push
lods
ficoml
in
mov
mov
add
ret
test
cmpsl
hlt
je
jmp
add
mov
cwtl
add
pop
adc
or
xlat
xlat
out
pop
mov
adc
pop
cli
out
and
mov
mov
pop
push
fldcw
xor
lret
fs
rep
out
mov
lods
jnp
xor
push
xbegin
lcall
mov
xchg
adc
sub
add
stos
push
mov
mov
sbb
ds
stos
ljmp
jmp
ret
mov
std
stc
cli
out
and
sub
sarb
es
sub
inc
mov
cmp
mov
adc
mov
bnd
cld
stos
adc
mov
xchg
fwait
push
jno
andl
or
scas
popa
pusha
xchg
jecxz
mov
loop
hlt
sbb
mov
arpl
adc
dec
xor
aaa
and
xorps
shll
das
pop
adc
jl
xlat
push
cmp
test
les
cmpl
jg
push
iret
jnp
mov
js
shll
or
mov
add
jnp
adc
movntq
and
or
pop
nop
divl
mov
and
lods
cmp
lds
nop
insl
std
sbb
push
lea
cmp
iret
ret
aaa
cltd
lahf
popa
xchg
push
add
stos
xchg
push
fs
loop
sbb
dec
cmp
push
sbb
addr16
leave
mov
jno
pop
aam
cmpsl
in
dec
mov
into
notb
punpcklwd
inc
push
and
ja
mov
aas
and
cmp
xchg
jmp
dec
ror
sbb
sbb
inc
outsb
cmpsl
inc
push
sbb
test
sub
xor
rorb
daa
fidivs
or
push
lods
pop
sti
mov
call
sub
sub
roll
dec
sti
xchg
adc
in
iret
out
sub
sub
fisubrs
pop
mov
shrl
ret
loop
loopne
out
xlat
outsb
in
adc
call
cld
inc
add
push
pop
dec
incb
sub
and
out
mov
mov
or
das
inc
push
dec
inc
xor
fnsave
sbb
insb
inc
jecxz
lock
mov
clc
or
xor
aaa
mov
frstor
cmp
aas
jb
mov
arpl
pop
test
xlat
movd
xchg
imul
cmp
pop
out
repnz
inc
mov
hlt
idivl
adc
leave
mov
mov
les
jne
mov
jnp
cmpsl
bound
aam
xor
jo
outsb
push
imul
popa
into
fldl
daa
aaa
dec
push
push
mov
stos
jnp
mov
sbb
sub
das
fists
add
push
mov
dec
pop
rcll
or
lods
roll
popa
mov
aam
mov
insb
dec
flds
pop
insl
mov
sti
sub
in
les
dec
call
push
push
jno
mov
inc
jle
mov
add
sub
add
or
ret
pop
adc
mov
adc
push
pushf
pop
xchg
xchg
lahf
les
inc
and
inc
movsl
jne
and
shrb
xchg
inc
mov
sbb
add
jp
int3
mov
adc
dec
xchg
cmpsl
aad
fnstenv
mov
sub
cmpsl
lahf
sbb
std
lea
xor
out
sub
cltd
dec
mov
call
jp
xchg
mov
add
mov
mov
gs
scas
cs
add
ret
mov
or
push
and
outsl
int
loope
mov
add
jecxz
ret
mov
push
mov
adc
dec
pop
popa
into
nop
popa
and
push
sub
push
filds
inc
or
adc
dec
in
fistl
int
ss
sti
xchg
mov
pop
mov
daa
sbb
mov
inc
xchg
mov
insl
cmp
push
dec
ljmp
jne
iret
not
data16
mov
push
lahf
jbe
dec
mov
dec
icebp
adc
xchg
test
test
lods
mov
push
inc
mov
mov
lahf
xchg
sbb
outsl
bound
inc
incb
rcrl
sub
popa
test
cmp
jae
dec
inc
repnz
pop
lcall
iret
int
add
lcall
imul
xchg
out
out
fildll
jl
pop
fisttpl
jae
std
mov
jb
jae
into
and
gs
out
imul
fnsave
je
push
rcrb
adc
cmp
in
inc
dec
mov
test
xchg
adc
cmp
xchg
cmp
mov
adc
loopne
or
adc
or
push
add
cs
imul
adc
adc
pop
movsl
insb
je
icebp
xlat
mov
xchg
mov
or
inc
sbb
data16
hlt
ror
xchg
fistpll
cmp
inc
ljmp
inc
mov
jne
shlb
push
clc
jl
mov
sub
ret
js
out
fidivrs
or
sahf
push
and
adc
dec
jnp
push
cmp
xor
jno
add
out
sub
fisttpl
and
xchg
lods
movsl
sbbb
inc
mov
push
inc
fnsave
or
sbb
pop
adc
in
mov
out
je
ljmp
sub
push
mov
xchg
dec
out
inc
jl
outsl
cli
jno
in
bound
or
jp
mul
test
push
sub
mov
push
jecxz
jnp
dec
sub
add
enter
loopne
test
or
test
or
imul
mov
and
or
ljmp
inc
repz
adc
jb
add
jge
mov
jl
add
lods
push
outsl
pop
xchg
jmp
hlt
mov
adc
cmp
stc
sbb
xor
bound
or
pop
inc
cmpsl
mov
mov
push
mov
lret
enter
jg
xchg
xorl
jae
mov
in
xor
imulb
loope
sub
popa
or
nop
cmpsb
sub
xchg
sbb
arpl
dec
test
icebp
cmp
mov
aas
lds
pop
jnp
sbb
or
sti
stos
fwait
push
sub
lods
jge
push
bound
or
dec
inc
inc
out
aaa
sub
jl
xchg
or
inc
add
push
in
ljmp
and
incl
mov
xchg
jbe
adc
mov
repnz
add
push
aam
mov
jg
push
mov
arpl
jl
daa
jl
cmpsl
mov
mov
fnstcw
sbb
ds
cli
shl
add
add
arpl
and
arpl
orl
or
outsl
fildll
popf
and
mov
cmp
and
inc
dec
sub
pushf
inc
or
or
test
dec
push
jns
cmp
repz
pushf
push
push
mov
ret
mov
push
sti
mov
xorb
ud1
pop
sub
jge
xchg
arpl
cmp
xchg
out
xchg
mov
fdivl
daa
xchg
leave
pushf
loope
aam
fwait
or
sbb
dec
and
ret
ss
shr
stc
jb
push
pop
or
pusha
cld
lret
adc
xor
pop
subl
outsl
jl
repnz
sahf
xchg
xor
xor
in
les
xchg
mov
push
pop
sbb
je
orl
or
add
cli
and
push
cli
dec
in
xchg
mov
cwtl
pop
sub
out
lock
cmc
in
push
or
rcrl
outsb
xchg
pop
xchg
add
out
fisttps
je
ja
cs
orl
addl
push
cli
push
sbb
jno
lods
lock
pushf
rclb
mov
pop
dec
pop
dec
pop
js
clc
movsl
aad
mov
mov
adc
mov
push
dec
pop
jne
jg
rorb
mov
in
aad
mov
mov
fnstenv
gs
pop
outsl
fldln2
stc
add
ja
push
jmp
imul
jne
sub
ret
aaa
or
daa
leave
es
rsm
test
and
pop
jnp
fistpll
push
xchg
lods
mov
cmp
adc
shrb
stc
jp
lret
mov
pop
cmc
out
pop
ljmp
bound
mov
mov
adc
xor
arpl
xlat
stc
fsubrp
fiadds
sti
iret
pop
pop
xchg
mov
jno
int3
jb
ret
sub
fsts
fadd
xchg
and
push
das
cld
adc
xchg
inc
add
mov
xchg
jmp
mov
mov
xor
mov
and
mov
add
ds
sbb
adc
xchg
insl
mov
or
sbb
cmp
incb
jne
dec
or
sub
dec
fldl2t
xchg
pop
mov
push
loope
les
add
pop
shlb
add
pop
les
subb
add
jo
sbb
fdivr
rcrl
in
fwait
loopne
das
add
repz
pushf
push
and
out
inc
mov
inc
out
insl
mov
jp
les
adc
cs
or
sub
je
and
jl
ret
sbb
adc
daa
clc
cmp
filds
std
lods
sti
lret
in
cltd
xchg
stos
aaa
adc
inc
nop
jg
lret
shr
push
xchg
lods
xor
jnp
sub
mov
stos
push
mov
jae
shl
pop
mov
xorb
cmp
int
aad
popa
enter
push
js
pusha
push
out
inc
jle,pt
mov
push
push
adc
cmp
in
mov
push
loope
push
loope
ds
mov
popa
inc
xchg
sbb
scas
and
je
in
subb
mov
pop
pop
mov
adc
adc
dec
outsl
pop
aam
jae
shll
inc
nop
arpl
imul
popw
fildl
dec
or
int3
outsb
cmpsb
mov
clc
jmp
lea
lods
lea
xchg
dec
or
or
push
xor
and
or
nop
fnstenv
rcrb
pop
sub
jp
adc
daa
and
bound
loopne
adc
stc
mov
rol
iret
mov
sbb
xor
lret
clc
out
mov
imul
xor
mov
mov
inc
outsb
mov
sub
rcll
loop
clc
xchg
outsl
and
sbb
and
jne
mov
fstpt
sbb
hlt
shlb
xorb
mov
mov
sbb
setno
aaa
incl
fs
cwtl
push
add
sbb
enter
pop
ds
and
ljmp
push
fs
adc
xor
sub
mov
arpl
andb
pop
inc
xlat
xchg
add
orb
push
test
jge
cld
loopne
push
mov
mov
xor
adc
je
in
sbb
fldlg2
imul
mov
popl
shrl
pop
inc
jp
inc
mov
sahf
mov
shlb
lods
imull
mov
addb
daa
jg
je
push
nop
roll
jne
adc
lods
jae
xor
arpl
bound
loopne
push
mov
test
jb
adc
xchg
sbb
adc
sub
xor
mov
push
orb
mov
sbb
int3
or
xchg
test
or
adc
arpl
enter
shll
jns
jns
sbb
lahf
cld
subl
lcall
mov
xlat
or
es
jns
shl
fstl
cmp
pop
cmp
scas
mov
loopne
sbb
rorl
inc
add
ljmp
nop
push
jl
pusha
xchg
or
pop
sbb
mov
push
lret
mov
popf
mov
xlat
mov
add
sbb
and
pushf
pop
sbb
outsl
loope
movsl
imul
fidivrs
inc
in
dec
or
inc
push
and
push
add
or
mull
or
push
cmp
ror
fldenv
jbe
jecxz
lcall
mov
sub
sub
push
jae
outsl
imul
sub
fcmove
xchg
mov
aas
mov
sbb
mov
mov
xlat
negl
imul
jecxz
mov
and
repnz
push
dec
in
push
mov
cmp
leave
inc
push
loope
jl
pop
cmc
xchg
leave
int3
sub
stos
inc
jb
mov
dec
repnz
inc
and
xor
push
cmp
popl
xchg
adcb
add
bound
insb
addb
xor
xchg
push
hlt
dec
sbb
mov
repz
addb
andb
sbb
outsl
push
ret
sbb
cwtl
xchg
lcall
movq
das
add
lods
mov
mov
xor
movsb
lea
or
fists
pop
or
loope
cmp
cmp
sub
sbb
mov
mov
mov
push
sub
adc
aad
push
cwtl
in
iret
iret
and
flds
jmp
ljmp
in
adc
icebp
test
jecxz
leave
in
lret
jae
cmp
mov
lock
flds
jl
mov
jns
pop
push
addr16
lcall
ror
nop
jge
sbb
add
pop
popf
addl
and
mov
mov
inc
dec
mov
loop
sbb
das
pop
pop
rcrb
shll
push
rol
jo
mov
mov
sub
fdivl
in
jle
icebp
lock
and
shl
and
and
xchg
jecxz
push
xchg
gs
movsb
xchg
xchg
fwait
xlat
fs
push
jp
push
pusha
mov
ja
ret
jbe
stc
mov
dec
outsl
in
out
xchg
cld
sub
adc
popa
shll
mov
cmc
push
scas
out
js
fildl
hlt
dec
mov
cmpsl
cmp
inc
movsb
repnz
adc
es
ja
je
push
mov
pop
sub
int
cmp
popa
xchg
adc
push
sub
mov
imul
sub
aad
ret
movsl
ds
add
loope
cmp
clc
add
push
mov
jae
xchg
sarl
adc
adc
or
loope
sbb
push
daa
cmp
mov
mov
sbb
lcall
mov
pushl
xor
jne
push
add
push
sti
inc
rolb
add
push
daa
adc
jo
test
loop
jnp
cmc
mov
inc
and
sub
add
cltd
xchg
aad
and
fstpl
sbb
in
shll
cmp
lcall
pop
mov
dec
push
mov
sbb
inc
push
cmpsb
je
fucomp
sub
mov
jb
jecxz
sbb
ret
out
dec
pop
xor
sub
xor
inc
sub
andl
nop
cmp
xchg
lods
mov
mov
bound
inc
sbb
xchg
ja
loop
es
push
sub
loop
sub
or
js
sbb
loop
adc
adc
and
jle
adc
stos
dec
popf
lds
out
daa
sub
pushw
insb
pusha
roll
push
xlat
push
daa
mov
aaa
adc
out
mov
sub
loope
sbb
leave
sbb
xor
gs
insb
aam
lcall
and
lcall
adcl
or
popa
int3
pop
jne
inc
call
push
dec
or
mov
inc
add
popf
das
cwtl
stos
mov
out
push
stc
fwait
mov
fldcw
aad
push
jg
and
lret
jle
sub
enter
faddl
xlat
imull
or
divl
gs
dec
loope
fiadds
test
xchg
pop
lahf
xor
jb
dec
jl
out
jecxz
xor
jge
jae
test
lods
cmp
sbb
fstl
add
push
add
daa
adc
dec
xchg
test
in
insl
inc
pop
push
cs
mov
xchg
or
mov
rolb
pop
cmpsl
in
xchg
stos
push
xor
shl
stos
addr16
mov
ja
out
mov
push
cmp
push
xor
xchg
pop
insl
xchg
adc
fs
adc
pusha
inc
push
adc
inc
lret
addr16
lods
or
fldenv
mov
inc
and
xchg
dec
iret
xchg
adc
out
push
lret
mov
cwtl
test
dec
enter
jne
faddl
xor
pusha
pop
add
mov
aas
int3
xchg
gs
sub
es
sub
mov
in
cmp
pop
jno
popf
mov
test
push
cld
bound
inc
test
pop
sub
int
sub
xor
dec
inc
insl
or
lahf
ja
cmp
fsubrl
inc
inc
or
push
sub
jp
dec
ljmp
lods
push
push
jp
mov
xor
or
dec
ret
shll
out
sub
pop
xchg
rolb
xor
call
shrl
xor
mov
pop
arpl
jg
cmc
pop
inc
dec
sub
es
pop
in
sahf
sbb
movsb
fldln2
mov
xchg
ljmp
test
xchg
cmpsl
cmp
fistpll
add
test
pop
jns
ljmp
mov
das
movsl
std
into
fs
lods
rorb
pop
mov
clc
ds
ficoml
int3
test
sbb
aaa
xchg
and
pop
es
scas
fsts
xchg
lret
fdiv
fwait
shlb
stc
std
adc
pushf
dec
add
push
push
iret
adc
pop
call
loop
ss
lods
les
add
divl
adc
cmp
and
hlt
sub
sbb
cli
pop
adc
sti
lock
pop
sbb
sub
inc
ss
sbb
pop
clc
lahf
mov
loope
or
nop
mov
xor
call
mov
ds
cmp
pop
sbb
xchg
jle
popf
mov
jl
inc
and
cmp
rorl
sub
jo
dec
dec
outsl
pop
std
sbb
imulb
or
lock
push
xchg
sub
xor
das
loopne
or
out
xchg
mov
jle
pushf
roll
sbb
pop
and
push
adc
adc
add
pop
pusha
push
mov
mov
aaa
push
xlat
inc
lret
xchg
jne
push
es
ret
movsb
andb
sub
outsl
mov
orl
xchg
or
pop
popf
push
xchg
push
mov
jecxz
jns
cmpsb
aad
aam
popa
bound
jne
mov
or
cld
push
data16
fisttpll
loopne
cmp
cmc
into
dec
mov
mov
xor
fwait
dec
pop
call
push
inc
cmpxchg
rolb
cld
mov
or
push
aad
in
adcb
in
mov
arpl
and
lods
dec
jbe
subl
jne
cmpsb
stos
mov
jne
js
pop
popa
ljmp
jae
cld
add
push
cmp
inc
repz
push
stos
sub
xor
hlt
imul
int
add
fbstp
ljmp
push
repz
out
in
bound
xchg
sbb
jp
cmp
insb
xlat
dec
sub
ljmp
push
mov
hlt
add
roll
xchg
jge
popa
fwait
pop
add
add
cld
mov
out
roll
jnp
jmp
loope
sbb
fildll
cld
shlb
fs
lret
fcmovnu
and
push
arpl
mov
mov
mov
cwtl
enter
fistl
jbe
fisttpll
mov
sbb
and
into
mov
or
sub
hlt
mov
cmp
push
push
fists
push
cld
xchg
movsb
and
sub
dec
or
mov
or
addr16
push
sbb
cmp
nop
sub
cli
adc
inc
orl
jbe
imul
push
negb
xor
dec
pop
xchg
add
lock
fdivr
cmc
xchg
shrb
psllq
nop
out
push
xor
mov
cmpsb
xchg
cmpsl
dec
jmp
jp
aaa
or
cmp
loope
xor
hlt
imull
sahf
mov
mov
int3
stos
pop
aas
mov
les
mov
xor
adc
insb
lcall
or
enter
jns
jmp
fwait
out
add
dec
mov
mov
or
dec
cmovne
pop
fildll
imul
jp
hlt
icebp
aam
test
frstor
and
and
push
push
icebp
mov
mov
lods
mov
jne
insl
inc
pop
cmp
lahf
fdivp
movsl
xchg
push
clc
fists
xchg
fwait
jno
stc
in
aam
jle
popf
popa
pushf
jl
xchg
out
std
mov
dec
les
pop
fwait
loop
imul
gs
cmp
lret
gs
pop
mov
add
insb
outsl
stos
sub
cwtl
dec
pop
daa
packuswb
inc
pop
movsl
xor
in
call
hlt
enter
xchg
push
cmp
ficompl
push
adc
jl
inc
sbb
arpl
enter
xchg
mov
fldenv
pop
or
inc
ret
mov
popf
rcll
jge
fisttps
sub
test
mov
scas
clc
mov
and
idivl
xchg
xchg
cmpl
xchg
mov
aam
fmulp
insl
adc
cli
js
lea
or
mov
pop
mov
cld
pushf
mov
int3
in
push
lock
imul
mov
push
lds
outsb
shll
push
les
dec
cld
jno
cmpl
pop
jge
or
xor
mov
or
loope
add
push
fnstenv
push
mov
cltd
inc
dec
cwtl
xchg
jo
test
outsb
mov
cld
roll
pop
xchg
fsubrs
aas
or
sbb
loope
mov
pop
js
pop
pusha
cmp
cltd
xchg
out
cld
aam
into
jno
lea
jp
in
ljmp
pusha
jns
push
lret
xlat
cmp
and
loop
mov
sahf
leave
and
cmp
subb
jle
daa
push
xchg
pop
cmp
ljmp
fs
xor
mov
jmp
jno
xchg
lret
mov
movsl
fisttps
movsb
test
repz
pop
mov
push
cli
mov
push
push
mov
nop
aad
cmp
sub
cmc
or
pusha
loope
inc
inc
in
mov
xor
enter
inc
daa
mov
aam
outsl
mov
bound
push
mov
test
outsl
fs
and
mov
pop
inc
enter
cmp
out
cwtl
mov
sti
push
mov
lret
mov
push
jae,pt
sub
jae
out
out
mov
addl
adc
cmp
adc
xor
sbb
sub
insl
lock
mov
ret
cmp
mov
xor
movzwl
fwait
adc
in
shll
push
adc
fdivs
xchg
scas
mov
sahf
sub
in
imul
int
or
mov
fdivrl
jae
test
push
adc
push
or
out
outsb
sub
push
sub
scas
jecxz
cs
ret
pop
pop
dec
fiadds
mov
pop
inc
mov
addb
addr16
outsl
xchg
data16
jae
sbb
cmp
mov
daa
cmc
push
add
mov
jne
mov
dec
loopne
in
dec
std
jl
or
lret
ja
sub
xchg
fwait
xchg
nop
mov
mov
outsb
xchg
hlt
popl
decb
fnstenv
adc
inc
mov
mov
sahf
pop
jge
test
icebp
adc
xchg
pushf
int
and
insl
mov
lret
cmp
sti
xlat
int3
mov
pop
int3
call
jl
jp
test
push
sub
mov
std
or
xor
jle
ficoml
mov
jb
jle
mov
xchg
cmp
stos
fsubrl
dec
add
cmpsb
nop
mov
lds
cs
das
and
xchg
cmp
daa
ss
es
outsb
mov
jno
jb
sbb
jle
jle
mov
inc
add
sbb
push
leave
aaa
and
and
and
lret
pop
push
xchg
mov
shrl
mov
cltd
mov
xor
mov
sahf
hlt
xor
or
int3
adc
sbb
mov
mov
outsl
js
negb
insl
popf
fnstcw
lea
xchg
mov
lock
ljmp
push
imul
or
ret
ss
les
add
test
jge
mov
sbb
adc
scas
mov
xchg
inc
mov
ds
mov
xchg
mov
jmp
xlat
xchg
rcrl
adc
in
adc
mov
sbb
mov
mov
aam
or
push
jge
dec
arpl
mov
mov
or
mov
mov
movsb
mov
sub
mov
lods
inc
xor
and
loopne
mov
imul
or
push
ja
pop
dec
or
pop
into
adc
out
mov
jae
cmp
mov
int
jp
jp
push
add
js
test
adc
mov
jb
rclb
jns
dec
out
fwait
nop
cs
push
jnp
insl
cmc
pop
xchg
cmovp
fldl
test
cmpsb
or
lret
jnp,pt
sar
je
sarl
lods
mov
jge
iret
and
jae
mov
push
pop
adc
push
mov
pop
dec
nop
mov
fadd
int3
imul
dec
xchg
xchg
and
xor
push
xor
cmp
cmc
test
xor
faddp
cmp
pop
or
xor
aam
jle
rcrb
adc
subb
loop
popa
out
inc
jg
push
or
loop
cs
or
int
out
fs
insl
or
adcb
pusha
sbb
inc
xorb
add
mov
shlb
mov
aad
jecxz
pop
mov
insb
inc
and
stos
stos
sub
pop
jl,pt
dec
cmpsl
and
hlt
and
pop
jae
adc
ficomps
sarb
sbb
adcl
gs
js
icebp
cltd
inc
push
and
js
andb
inc
test
add
in
push
scas
aam
outsl
jno
and
push
cmp
jb
and
out
testl
push
adc
lret
mov
mov
bound
ljmp
shrb
test
lcall
cmpsl
push
push
test
push
loopne
and
or
imul
mov
cmp
movsb
cmp
outsb
cltd
add
or
mov
into
sbb
jmp
sbb
insb
mov
sbb
call
mov
pop
xchg
lcall
scas
mov
jb
test
jne
mov
xor
mov
cltd
ret
push
mov
push
xchg
sbb
cmp
adc
xchg
jp
fldl
adc
insb
pop
je
cmpsl
sbb
add
jmp
mov
cli
lcall
adc
push
inc
test
mov
inc
pop
adc
pop
fld
xchg
cmp
dec
aas
subl
imul
call
adc
push
lret
xor
cmc
cmpsl
sub
pop
sahf
insl
add
jmp
pop
lea
inc
mov
dec
cmp
fidivl
add
add
mov
and
jecxz
out
fildl
mov
sbb
push
xor
add
sub
shl
int
aad
pop
pop
and
mov
lock
xor
pop
out
rcrb
xchg
dec
jnp
or
repz
add
jne
jle
jp
notl
push
pop
pop
jns
pop
add
cmpsb
imul
xchg
mov
sub
pop
mov
push
mov
lcall
mov
or
stc
pop
ja
dec
icebp
ficompl
mov
jg
das
ss
insl
addr16
mov
cmpsl
mov
shld
xor
push
fucomi
mov
lahf
mov
cmp
es
fdivl
ss
mov
hlt
xor
sarl
mov
imul
shlb
push
push
and
mov
xchg
sbb
xchg
mov
mov
jmp
pop
stos
dec
mov
pop
mov
fwait
and
and
dec
inc
enter
jp
stos
arpl
sub
jo
les
sbb
push
imul
lret
xchg
push
insl
loop
add
adcb
inc
lods
je
sub
mov
jns
sahf
dec
mov
aaa
and
cli
sub
test
ret
xchg
adc
int
and
push
aam
mov
sub
rcr
jae
sbb
stos
inc
lahf
insb
int3
int3
cltd
sahf
fisttps
jl
in
das
aaa
ljmp
push
push
sti
add
sbb
loope
stos
jns
push
loopne
push
stc
bound
and
xchg
xor
mov
mov
mov
xchg
or
mov
sub
jnp
jae
and
xchg
cli
cmp
sub
ss
mov
xchg
pop
or
mov
aam
sarb
psubb
push
push
add
pop
xchg
mov
mov
pop
decb
or
sbb
test
ret
inc
mov
test
call
xor
mov
adc
ret
lret
jmp
lea
push
jg
inc
fidivrl
dec
or
xchg
sub
pop
insb
mov
ds
stos
movsl
out
aad
pusha
sbb
dec
sbb
inc
roll
les
push
in
sub
lock
xor
sbb
pop
fildl
fcomps
inc
jp
pop
fisubs
pop
push
aas
subb
aas
xor
rorl
loopne
sbb
mov
cs
adc
cmp
in
pop
sahf
add
je
outsl
ds
loope
gs
cmp
ja
jg
jnp
shl
stc
cmp
dec
xor
xor
insl
mov
fnstenv
dec
and
or
leave
cs
mov
scas
xor
cli
clc
mov
add
fsubs
jl
dec
xchg
mov
adc
sub
insl
push
ja
jo
add
add
in
fistpll
insl
je
jle
push
mov
mov
mov
cmc
mov
jnp
sbb
movsl
mov
jge
sub
inc
jle
arpl
push
lods
out
add
dec
cld
fiadds
inc
int3
mov
and
ja
jnp
int
lods
ret
xor
jle
mov
pop
je
or
rolb
arpl
cmpsb
pop
pop
bound
mov
push
out
mov
imul
xor
sbbb
inc
cmp
lcall
xor
xchg
mov
into
or
into
sub
call
dec
das
fwait
mov
ss
cld
jae
testl
jmp
sbb
mov
ret
dec
adc
sbb
jb
xor
jb
inc
fidivrl
pushf
jmp
addr16
dec
add
shrl
adcb
ret
pushf
xor
test
mov
push
out
and
imul
imul
fdivl
mov
push
mov
enter
mov
dec
mov
jecxz
push
dec
xchg
or
cmpl
mov
xchg
mov
pop
or
xchg
cli
dec
pusha
rcll
lcall
cli
loop
mov
xchg
xor
mov
inc
mov
push
add
mov
lea
int3
inc
test
or
push
cmpsl
popa
xchg
ja
mov
iret
mov
cmpsl
mov
clc
js
xchg
pop
push
push
fstl
mov
dec
and
sub
pop
or
cmpsl
int
push
inc
mov
lret
fimull
enter
cmp
arpl
pop
hlt
mov
inc
adc
les
mov
lock
xor
mov
adc
adc
repnz
shrb
push
roll
ret
and
jnp
inc
test
adc
icebp
inc
xchg
sbb
fsubl
sub
inc
push
loopne
into
mov
in
hlt
sub
mov
sbb
leave
xchg
add
gs
cmp
iret
stos
dec
push
mov
subl
in
inc
jecxz
cld
leavew
cmc
pop
and
icebp
cmp
js
and
add
inc
mov
jmp
inc
movsl
mov
cmp
jne
xchg
push
fisttpll
xor
scas
mov
test
dec
xchg
cmpsb
pop
mov
mov
adc
je
cmpsl
movsl
cs
xor
xchg
or
aam
mov
or
pop
mov
daa
stc
xor
push
gs
pop
inc
xor
sub
fmuls
and
mov
push
daa
inc
sub
cmpsl
in
les
jecxz
xor
leave
jmp
jge,pt
dec
int
fwait
xchg
xchg
lahf
inc
cmp
les
cmpsb
cmp
push
shlb
pop
xchg
fs
jns
mov
outsb
cmp
icebp
dec
mov
xor
mov
jnp
ss
shrb
insb
adc
or
jmp
leave
cld
mov
mov
call
in
mov
insl
sbb
push
bound
pushf
ja
sub
aam
or
movsb
pop
lods
or
out
scas
ret
in
movsb
mov
pusha
repz
popa
xlat
push
xor
insl
jnp
adc
jo
inc
enter
mov
push
sub
iret
xchg
mov
data16
add
imul
cltd
dec
xchg
xchg
addb
repnz
mov
or
in
sbb
xor
stos
sarb
lds
sub
push
popa
mov
push
mov
mov
aaa
in
cwtl
insb
fsubrl
xor
bound
outsl
dec
mov
mov
enter
jae
cmp
sbbb
mov
lahf
int
ret
stc
arpl
mov
bound
inc
sub
push
out
cmp
lds
inc
out
lcall
xchg
and
lds
sub
jg,pt
outsl
sahf
jp
imul
dec
inc
outsl
xor
push
pmulhw
test
and
pop
fstpt
ret
cmpsb
jmp
out
das
pop
aad
pop
pop
fwait
lods
sub
ljmp
cs
shl
dec
shll
inc
out
mov
xchg
lret
pop
inc
mov
jb
and
dec
mov
fdivl
mov
testb
testb
and
xchg
pop
ds
pusha
addl
fisttpll
mulb
cmpsb
dec
mov
inc
daa
pop
push
lcall
aaa
lret
pop
push
scas
mov
adc
movsl
dec
lret
aad
and
insl
mov
hlt
sub
xor
jb
insb
jecxz
xchg
andb
fs
xlat
mov
jns
scas
mov
and
xor
pop
ficomps
dec
out
sub
pop
cwtl
mul
popf
test
fs
mov
adc
call
adcb
inc
iret
push
and
ljmp
scas
sti
xchg
adc
stos
jecxz
mul
xchg
test
sub
lock
jb
or
in
and
xchg
and
scas
inc
loop
lret
into
pop
enter
ror
push
adc
push
adcl
dec
je
and
ja
shll
pop
mov
xchg
stos
jae
std
mov
jnp
sbb
int
push
sti
jge
xchg
adc
pop
cmp
add
jle
add
ss
xchg
out
iret
jl
test
es
call
sahf
jg
rcrl
mov
pop
lds
ljmp
jmp
gs
cmp
outsl
push
pop
cpuid
push
or
arpl
xor
outsl
iret
push
dec
pop
incl
adc
sahf
ds
xlat
fwait
mov
and
push
xor
sbb
addr16
insb
ret
dec
mov
lods
pop
imul
ficoml
push
pushf
jp
and
dec
scas
ja
inc
pop
and
and
push
mov
imul
xor
cltd
dec
movsb
inc
iret
sub
sti
xor
sub
adc
lret
mov
mov
iret
fsubrs
mov
dec
imul
jo
fdivs
fs
cs
xor
or
push
test
adc
lcall
divl
jae
push
or
mov
lea
add
sbb
mov
fistps
dec
aaa
test
cmp
mov
push
jmp
in
aaa
push
push
mov
fwait
mov
lds
loopne
mov
pop
cmp
es
mov
test
notb
jb
loopne
sbb
jnp
aam
cld
push
mov
jo
and
ret
test
mul
and
arpl
mov
fisttpll
cmp
or
mov
repz
lahf
sti
cmp
cld
repnz
ja
pop
pop
cmpsb
adc
push
mov
xor
sbb
les
fucomip
insl
out
pop
lahf
or
popf
adc
inc
mov
inc
aam
int
mov
pusha
popa
std
sub
pop
cmpsb
hlt
mov
inc
inc
call
out
out
and
pushf
out
mov
mov
sbb
lret
inc
adc
pop
adc
xor
and
mov
ja
aam
sub
xchg
clc
cmpsb
arpl
lods
add
sbb
sub
aam
add
cld
cwtl
pop
dec
and
add
mov
pusha
push
mov
dec
icebp
inc
dec
imul
xor
adc
push
cmc
imul
push
push
in
pop
push
push
ficoms
cmp
inc
popf
sti
loop
sub
adc
int3
mov
fldl
jge
push
imul
jmp
cmp
pop
push
add
insl
add
aaa
lret
inc
cli
rorb
push
clc
cs
sbb
cmp
lea
add
mov
jecxz
stc
dec
fstpl
pushf
fidivl
cltd
icebp
xchg
jae
fildl
fmull
adc
or
icebp
jle
aas
or
pop
mov
mov
add
dec
jg
inc
xchg
mov
inc
xchg
xchg
negl
sub
dec
fisttpll
pop
in
mov
xchg
mov
add
cmp
push
lock
push
push
hlt
sbb
std
aam
notl
jmp
jns
mov
test
dec
int3
hlt
stc
stos
loop
mov
lret
cld
or
mov
rorl
cmc
jl
adcb
push
cmpsl
lret
push
xchg
adc
mov
ljmp
fs
jae
stc
xchg
jnp
xchg
ss
push
arpl
adc
lcall
adc
out
cltd
xchg
add
xchg
pop
sbb
pop
pop
dec
add
xchg
js
lds
mov
dec
gs
ljmp
lock
and
imul
cmp
mov
xor
es
imul
and
insl
out
scas
inc
pushf
filds
into
loop
sbb
inc
pop
subb
ret
lret
or
mov
stc
pop
mov
add
push
add
jmp
xchg
inc
dec
push
aad
mov
aas
bound
int3
adc
fists
inc
neg
mov
insl
add
sbb
adc
aaa
loope
int
cmp
lock
lret
sbb
lret
adc
fsubl
roll
scas
js
jmp
xor
loop
or
jne
xchg
shll
dec
shlb
xlat
adc
or
inc
mov
aam
scas
pop
mov
push
mul
shrb
fwait
aam
mov
xchg
test
or
xlat
int
cli
xor
or
scas
sti
cmp
in
mov
int
je
inc
mov
lret
movsl
sub
fld
sbb
jmp
stc
mov
cmp
out
addb
mov
xlat
mov
mov
add
cmp
loopne
testb
repz
mov
out
cmpl
and
lods
pop
ffreep
repz
dec
jge
out
jp
sub
push
fsub
outsl
int
pop
ja
lret
push
push
je
push
and
out
push
inc
mov
sbb
mov
cmp
inc
je
insl
lret
adc
push
adc
mov
xchg
aad
dec
sbb
pop
or
sbb
mov
adc
aas
xchg
in
xchg
mov
mov
test
ror
sti
sub
mov
call
mov
js
push
push
clc
cmc
sti
jo
inc
data16
dec
xchg
insb
dec
push
test
arpl
or
sub
pop
pop
dec
into
xchg
mov
or
lret
or
sbb
mov
fidivrl
int
mov
jb
or
cmpsb
rclb
pop
mov
scas
xor
pusha
imul
sbbl
shll
adc
lcall
cltd
roll
or
out
xchg
jle
pop
xchg
xor
stc
popa
bnd
adc
pusha
mov
xchg
xor
xor
ss
mov
stos
ficoms
repnz
push
aad
xchg
idiv
loopne
mov
ds
shr
lods
aas
stc
inc
test
adc
sbb
dec
push
fwait
enter
gs
sub
adc
fisttpl
lods
test
mov
cli
mov
jmp
nop
stc
ss
cs
push
mov
fidivs
sar
xor
int
sub
mov
pusha
fcmovnu
pop
daa
jno
mov
or
xchg
and
inc
fsubl
xor
cmp
sbb
xchg
mov
jmp
jno
mov
xchg
out
es
in
call
jo
mov
gs
and
or
loop
shlb
lcall
aam
dec
push
pushf
mov
enter
xchg
inc
sbb
cmp
xchg
lds
cmp
call
ljmp
fmull
movsb
or
addr16
dec
inc
bound
pop
xor
cmpl
mov
data16
ret
lcall
push
call
xchg
pop
xor
lahf
jmp
xor
bound
int3
cltd
decl
ds
add
out
mov
cmpsl
push
dec
adc
push
lock
cmp
out
leave
mov
mov
hlt
aas
movsb
jb
mov
add
dec
xor
in
jo
push
mov
loopne
pop
in
ret
sub
inc
or
inc
mov
xor
fs
dec
not
mov
xor
cmp
add
arpl
pusha
fidivrs
or
inc
sub
cld
pop
bound
cmc
clc
xchg
xchg
ret
push
dec
or
pop
movsb
xor
out
pop
or
pop
mov
push
pop
adc
push
out
jae
popf
test
lea
jnp
mov
lods
fwait
adc
pusha
addl
mov
cmp
and
cmc
nop
insb
aad
and
repnz
enter
test
stc
cltd
xlat
inc
outsl
xchg
dec
lcall
and
insb
ret
ljmp
js
and
popf
push
mov
pusha
jno
loopne
sahf
sbb
sbb
sbb
jecxz
lcall
adc
arpl
loop
insl
add
sub
sbb
cmp
lods
push
fadds
sub
insb
out
scas
lea
lods
loope
ja
xchg
cltd
das
aam
roll
inc
push
mov
loop
dec
lds
add
mov
dec
push
mov
xor
add
and
xor
mov
lret
mov
xchg
mov
xor
and
pop
inc
filds
sbb
sub
add
xor
dec
bound
cmp
xchg
push
pop
aad
pop
pop
cmc
jne
shlb
shll
subb
mov
jno
fistpl
test
int
or
sbb
pop
push
data16
or
or
cmp
push
insb
add
mov
subb
pop
lret
gs
gs
sti
lret
or
popl
popw
mov
pop
jecxz
cmp
cwtl
inc
xor
pop
cmc
inc
popa
stos
inc
cmp
popa
jnp
mov
or
sub
ljmp
in
addr16
sbb
lret
cmpsb
jb
xor
jp
lahf
stos
mov
pop
and
divb
andb
xchg
xchg
pop
popf
fstl
addr16
lcall
cmp
and
jbe
pop
popf
mov
jge
loopne
lods
negb
mov
cs
push
mov
out
mov
inc
insb
inc
mov
sub
pop
pop
pop
and
and
cli
cmp
dec
out
push
cli
jae
mov
iret
xor
xor
jge
sub
xor
push
xchg
inc
adc
mov
jbe
lahf
cmp
pop
sbb
in
adc
pusha
int3
or
bound
ror
push
push
es
imul
mov
or
nop
aaa
fildl
ss
inc
mov
loopne
add
inc
pushf
sub
lcall
sub
xlat
sarb
dec
imul
gs
pop
mov
pushf
xor
pop
inc
mov
test
jmp
lock
pop
mov
leave
aaa
enter
adc
int
stos
jmp
inc
jmp
aam
cs
fldcw
mov
or
dec
mov
in
dec
in
or
xlat
mov
mov
mov
inc
outsb
pop
or
lods
cli
lods
pop
into
out
rcrl
jne
test
sbb
push
jge
lods
decl
pop
jnp
or
aad
imul
jle
jge
adc
mov
shll
cltd
rorb
xor
fmull
mov
jb
fsubrl
sub
push
cmp
push
and
out
ret
mov
and
ret
mov
movl
pop
mov
ret
cmp
popf
lods
enter
cli
push
or
cli
jbe
ds
xchg
xor
sub
and
xchg
fsubr
les
jo
ds
dec
inc
int3
mov
dec
cli
pop
mov
mov
lret
sbb
hlt
xor
jne
xchg
push
mov
iret
addl
xorb
jns
adc
pusha
adc
mov
dec
inc
mov
push
push
addr16
fucomp
jns
xor
movsl
fwait
test
lahf
sbb
out
pop
push
and
sbb
and
in
dec
push
add
cli
in
test
pop
shrb
inc
sarb
lahf
movsl
and
cld
xchg
jbe
mov
addr16
pop
cli
mov
mov
push
jl
fcompl
mov
cmp
jb
mov
ret
cltd
jns
mov
movsl
ret
ljmp
push
push
cmp
push
out
ss
jmp
out
aad
inc
sbb
mov
add
xlat
sbbb
enter
nopl
and
add
fdivrl
arpl
sbbl
stc
lock
aas
inc
and
pop
mov
daa
xlat
fsubl
and
hlt
or
orl
sub
aas
cwtl
and
hlt
and
mov
cltd
mov
dec
aas
jns
jno
xor
xor
lret
mov
cbtw
sahf
dec
aad
jl
stos
jg
testb
sub
sbb
int
push
inc
cwtl
xor
mov
jns
jecxz
xchg
cltd
fs
and
mov
and
pop
pop
xchg
sub
jle
and
das
push
sahf
popa
pop
cld
int3
sub
push
fucomi
cmp
mov
cli
stos
push
ljmp
stos
sbb
sub
ja
sbb
jge
je
push
fucom
mov
jp
sbb
pop
jnp
jmp
pop
cmp
stos
dec
fstpt
ret
scas
dec
iret
lcall
imul
test
pop
mov
fincstp
xchg
shll
xchg
insl
mov
mov
and
or
sub
sbb
xchg
or
mov
pop
sub
push
xchg
imul
push
inc
inc
rcl
xor
mov
push
adcb
push
lret
in
faddl
addr16
pop
ret
call
shll
xor
lds
int3
push
adc
cmp
jle
into
nop
fs
dec
jo
inc
cmp
int
mov
xor
xor
je
lock
and
rclb
lds
dec
jle
mov
gs
mov
pop
test
jo
fisubl
jmp
jecxz
dec
shl
adc
arpl
loope
daa
sub
mov
jge
lea
out
add
dec
icebp
out
and
fucomp
jp
mov
jbe
jo
and
cmpsb
test
mov
sub
mov
das
dec
adc
jg
cmp
addr16
push
add
sub
mov
adc
mov
xchg
mov
sbb
pusha
jns
movsl
mov
pop
inc
cmp
mov
andl
enter
loope
dec
xchg
jnp
jl
in
ffree
adc
mull
mov
add
sbb
xor
aam
dec
imul
rclb
jno
add
jne
fistpll
and
pop
push
ja
pop
jl
mov
push
int
shll
dec
sahf
stc
or
repz
sbb
or
cmp
jo
popf
addr16
int
adcb
pop
pop
inc
xor
pop
das
rcrb
cmpsb
jbe
mov
push
push
jmp
call
xlat
sub
xor
bnd
outsl
push
call
dec
mov
sub
scas
cmpsl
mov
jb
xchg
xor
and
loopne
lea
push
and
add
push
sarb
stc
dec
bound
ds
pushf
into
dec
add
gs
push
sbb
pop
or
add
push
xor
in
adc
mov
push
cmp
push
pushf
dec
mov
leave
inc
insb
shll
sbb
in
jecxz
int3
outsb
jns
pop
cli
stc
push
out
push
lock
mov
mov
cwtl
sbb
xchg
adc
jecxz
clc
jo
mov
ss
ja
adc
cld
outsl
mov
repz
orb
test
ljmp
andb
rcl
in
mov
mov
add
lods
push
mov
in
out
cmpsb
cmp
fdivrp
sbb
cmp
arpl
sub
js
xor
aas
push
loopne
mov
fldenv
nop
fwait
xchg
mov
jl
shlb
imul
push
mov
adc
or
jp
or
fnstsw
add
fs
dec
xor
mov
mov
gs
sti
mov
imulb
push
in
mov
cli
dec
cli
sub
cmp
push
cld
scas
movsb
ds
in
mov
xchg
xchg
stc
ljmp
mov
sub
mov
ficoml
push
add
or
mov
pop
inc
cmp
in
mov
enter
sbb
aam
punpckhwd
adcb
js
xchg
subb
dec
loop
cltd
outsb
adc
into
mov
inc
int3
ds
cmp
jnp
add
xchg
xlat
insb
lahf
fisttpll
jo
sub
lret
add
fstl
push
dec
mov
popa
rol
jecxz
and
fnstenv
popa
push
paddsw
jg
dec
js
mov
clc
fwait
xor
mov
push
mov
retw
orl
arpl
addb
mov
mov
lods
push
arpl
rol
lea
dec
in
cmp
jl
cmpsb
xchg
and
rcrl
sub
xorb
out
mov
mov
sub
xchg
xchg
arpl
incb
cmpsb
xchg
aad
sub
loopne
sarl
pop
aas
lcall
mov
enter
jmp
leave
xchg
pop
xchg
mov
lcall
xor
cltd
movsb
mov
or
sub
cwtl
ja
add
lahf
jmp
fisubs
out
test
xchg
mov
les
int3
push
sub
jne
jns
jno
gs
lods
out
fidivs
popa
sbb
sbb
xchg
ds
push
out
cmpb
xor
and
sub
mov
cltd
lods
mov
les
xchg
pop
xor
iret
adcl
cmp
dec
into
test
or
adc
mov
xlat
fcoml
add
negl
movl
sbb
repz
lcall
xchg
aas
xor
pop
mov
ret
or
push
bound
sbb
dec
cmc
xchg
mov
dec
mov
ret
pop
imul
popf
insb
ret
adc
stc
pushf
dec
daa
aas
in
mov
popa
outsl
cmpsb
ret
cltd
in
mov
mov
fwait
push
mov
fidivrl
out
fisubl
cmpsl
sahf
xchg
out
mov
pushf
add
es
pop
repnz
test
shlb
test
push
mov
pusha
cmpsb
and
fldcw
adc
icebp
fstp
xor
xchg
cmp
loop
xchg
sub
lods
aas
sahf
or
nop
clc
and
out
test
lret
stos
leave
mov
stc
daa
aad
jecxz
push
fiadds
and
out
push
sub
in
popa
dec
testl
and
and
or
xchg
daa
rcrl
ret
mov
inc
aas
mov
imul
cmpsb
ds
jns
in
push
arpl
mov
xor
add
lods
repnz
jnp
xchg
bound
jl
push
and
mov
lret
into
sub
cmp
iret
pop
cltd
adc
in
jne
push
aam
enter
popf
leave
stos
roll
jns
fiaddl
sub
sub
enter
lcall
out
test
mov
scas
ds
adc
jp
add
xor
mov
fdivrs
stos
adc
jmp
push
lock
push
bound
dec
jnp
adc
imull
sbbl
jmp
cmp
inc
jge
mov
push
mov
mov
sbb
push
jle
pop
dec
jnp
ficoms
cmpsl
mov
dec
sbb
loopne
jmp
fisubrl
mov
xchg
lahf
push
xchg
iret
dec
xchg
sbb
iret
imull
pop
push
notb
shlb
pop
and
sub
ss
mov
cmpsl
pop
mov
push
loop
popf
stc
lret
mov
aad
xchg
push
push
or
cmp
fcom
push
divl
inc
add
inc
xor
sub
pusha
jge
popa
mov
daa
jo
gs
cmp
or
fildl
adc
test
icebp
cmp
rolb
fidivrs
sub
cmp
push
lret
adc
push
or
in
rorb
push
xchg
fsubrl
mov
sbb
lds
mov
xor
mov
xchg
repz
sub
and
gs
fstpl
imul
popf
iret
mov
sahf
sti
mov
dec
into
push
ret
mov
push
mov
icebp
mov
mov
jecxz
popa
mov
adc
xor
dec
mov
das
sbb
adc
jl
xor
test
and
je
mov
inc
jb
mov
aaa
mov
je
and
pop
movsb
sub
sti
and
aaa
xchg
sbb
in
mov
incb
xchg
fstl
mov
push
ja
pop
push
inc
cmp
and
aam
sub
out
daa
ljmp
inc
mov
aad
xchg
cmp
sbb
stos
fwait
jge
arpl
mov
or
inc
imul
pusha
xchg
push
add
movsb
stc
std
in
push
hlt
fnstsw
sub
int3
stc
out
in
fwait
pop
into
popa
ret
mov
or
inc
push
inc
loope
mov
aas
mov
sti
cmp
or
decl
fisubs
jne
test
fists
roll
dec
mov
push
lahf
nop
and
push
inc
adc
pop
or
inc
jg
sahf
sti
fisubrl
andl
lahf
orb
or
popf
and
inc
sbb
mov
lret
xchg
or
ret
jmp
xlat
jmp
cmp
mov
lea
jae
test
jle
mov
in
test
call
xor
lahf
inc
mov
jmp
sti
xlat
inc
or
mov
sbb
push
imul
mov
push
inc
movsl
pop
mov
add
popf
sub
aad
mov
jno
xchg
test
enter
add
inc
les
repz
popa
roll
hlt
xchg
jno
in
mov
ds
aaa
fdivs
and
mov
mov
popf
sbb
push
and
loopne
out
or
sub
pop
in
inc
call
sub
push
rclb
adc
adc
int
or
das
data16
int
addl
cmp
push
pop
frstor
inc
int
inc
aaa
out
push
decb
mov
add
cmp
out
and
xor
or
outsl
fadds
aas
xchg
jp
jb
incb
scas
jmp
dec
mov
or
out
push
pop
pushf
lret
mov
pop
pop
test
ret
pop
push
inc
int
popf
jnp
cltd
cmp
and
or
mov
int
cmpsb
fs
mov
fs
in
inc
je
mov
xorb
ja
mov
lock
insb
insb
push
xor
mov
adc
clc
pop
or
cmpsb
sbb
into
mov
sub
mov
ds
pop
pop
and
push
lods
cmp
in
cmpsb
push
add
repnz
ss
add
mov
fnstsw
push
fiadds
dec
shlb
pop
repz
aaa
aam
test
push
or
inc
movsl
in
repz
inc
pop
in
sbb
scas
sub
lret
push
sahf
stos
pop
mov
lock
out
xchg
iret
out
aas
mov
xchg
push
xchg
jg
data16
add
out
cmp
out
dec
out
movsb
repz
jl
fists
sar
mov
lods
cmp
shrl
fsubp
add
lock
dec
and
mov
mov
enter
sub
iret
mov
aad
pop
xor
xor
ljmp
sub
xchg
add
fcmovnbe
jo
pop
and
cmp
lock
mov
pop
pop
lds
jb
aam
arpl
pop
fidivs
test
aas
pop
jne
jno
cmpsb
test
pop
loope
jbe
pusha
rolb
inc
sbb
jno
aam
xchg
fs
push
sub
stos
lea
sub
repnz
jle
push
jae
fists
xchg
lods
scas
adc
or
push
mov
pshufw
dec
xchg
insb
movsb
add
mov
daa
adc
pop
dec
mov
sti
movsb
shll
out
sub
push
cli
lret
jp
xchg
jbe
mov
pushf
mov
dec
xchg
fldenv
push
mov
shll
vmovshdup
dec
or
and
insb
test
mov
jns
popa
jns
fstps
add
mov
pop
les
mov
mov
cmpb
sub
cmc
pop
cmc
sub
mov
popa
push
mov
shlb
mov
push
jmp
pop
enter
jns
xor
clc
fs
je
xchg
jmp
lds
push
dec
pusha
das
cmpsb
call
insb
popa
std
jne
int3
cmp
popf
lahf
test
sub
or
and
imul
and
lret
out
mov
add
lret
imull
lock
pop
ljmp
call
stos
xchg
sbb
jo
or
and
xor
dec
in
jns
sub
dec
inc
mov
mov
dec
dec
cmp
cld
call
sub
mov
pop
sar
cmpsl
jnp
stos
out
ret
in
call
cmpsb
push
cmp
inc
inc
ret
xchg
test
out
inc
mov
and
push
add
movsl
fwait
cmc
dec
push
cmc
dec
mov
pop
out
shrb
and
ss
inc
pop
mov
pop
sbb
fstpt
arpl
jnp
lret
mov
cld
ret
mov
jmp
and
jp
sbb
pushf
xor
sub
pop
inc
fadd
ret
dec
icebp
inc
push
mov
cld
in
push
mov
call
mov
push
or
out
dec
es
arpl
pop
pop
add
jecxz
xor
mov
sti
ret
mov
aaa
loopne
or
inc
mov
fmul
mov
jg
and
rol
popa
push
pop
aad
mov
ss
lods
cmpb
stos
loop
xchg
adcb
push
data16
jnp
push
mov
xchg
mov
jne
sub
arpl
pop
xlat
sbb
inc
push
into
xchg
mov
sub
int3
lods
das
mov
fildl
ljmp
fiadds
test
lret
dec
out
jge
rcrl
sub
fcomps
lcall
dec
fists
test
inc
dec
push
sbb
inc
add
mov
out
sub
jb
or
mov
jl
pop
test
pop
or
nop
in
shlb
psubw
or
aad
add
cmpsb
inc
ud0
data16
test
cmc
jbe
jne
dec
gs
popa
jg
and
adc
nop
or
cmp
inc
xchg
cltd
loop
pop
pop
mulb
jae
cmpsb
in
in
pop
xorl
insb
push
es
ss
dec
pusha
xor
in
mov
mov
jne
rorl
mov
dec
mov
and
jecxz
repnz
sub
mov
cs
call
pop
lods
out
jl
mulb
jmp
cli
jnp
movsb
or
test
stc
pop
and
or
or
xchg
xchg
gs
push
mov
jle
xchg
subl
shl
mov
ret
in
sub
cli
mov
cmc
dec
lret
sub
std
pusha
mov
pop
inc
or
mov
push
add
mov
aas
sbbl
pop
adc
scas
movsl
dec
xchg
inc
push
inc
adc
outsl
jg
je
pop
out
fidivl
push
sub
sbb
add
mov
out
dec
ja
and
jge
sub
mov
mov
mov
in
cmc
xlat
cmpsl
insl
ds
mov
shrl
sub
pop
add
push
jo
dec
sbb
fcmovnu
pop
aaa
cmp
cmp
stc
push
xor
mov
xchg
push
cmp
cmp
sti
sarl
xlat
mov
fs
add
jl
cmpsb
push
imul
inc
fimuls
imul
adc
xchg
mov
jl
imul
fidivs
jmp
jne
jmp
fldcw
dec
or
icebp
fstpt
jbe
xorb
cmp
mov
pop
sub
lods
inc
mov
jae
pop
pop
ror
aad
in
imul
mov
ret
pop
xor
ja
xorl
xorl
in
sub
rolb
addr16
repnz
mov
inc
sbb
xchg
test
mov
xlat
pop
sub
movsb
sbb
into
jg
sahf
pop
into
mov
je
push
data16
sub
push
sarb
inc
iret
sbb
aad
mov
push
pop
inc
dec
sbb
les
outsb
dec
xchg
cmpsl
dec
sub
in
cltd
jg
das
push
adc
dec
int3
and
mov
jns
mov
inc
in
xor
aad
les
ret
jecxz
es
stc
inc
ja
dec
xchg
mov
jmp
push
or
push
cwtl
ret
add
lods
ja
lock
cmpb
and
push
stc
jge
dec
loopne
in
insl
aam
pop
test
ror
test
add
aaa
cmp
push
pop
mov
pop
cs
lret
mov
nop
in
and
sub
ja
jge
adc
push
loopne
int3
dec
dec
and
lea
inc
outsl
leave
pop
lret
imull
push
sbb
ss
sbb
dec
push
mov
cmp
lds
jmp
xchg
rolb
pop
daa
daa
pop
shrl
push
jno
and
sub
out
sbb
imull
fwait
jno
popl
pop
and
xchg
cmp
adc
nop
push
pop
gs
icebp
pushl
bound
int3
xchg
std
pop
dec
mov
mov
pop
jp,pt
adc
insl
popa
and
test
es
hlt
lea
fistl
inc
fnstcw
mov
push
icebp
inc
cwtl
xor
test
mov
cmp
and
xor
mov
jmp
mov
loop
mov
jae
sub
or
mov
inc
fbld
jge
popf
cltd
jbe
dec
cmp
test
push
add
cmpsl
dec
pop
fimull
in
xlat
and
add
clc
mov
pop
dec
pop
push
cmp
dec
lea
lret
xor
sub
scas
mov
fldlg2
inc
pop
jp
push
and
jmp
pop
std
mov
push
sbb
int
sahf
mov
loopne
fdivrs
cmp
cltd
das
stos
dec
leave
cmpsl
push
sbb
pushf
sbb
std
addb
sbb
dec
push
mov
shlb
add
push
jmp
jmp
popf
sti
insb
xchg
out
push
stos
in
insb
mov
cs
in
movb
insl
cmp
mov
enter
loope
leave
fcmovnb
pop
in
and
in
jo
adcl
sarl
ss
js
inc
mov
jp
cmp
xor
pop
inc
out
sbb
jnp
hlt
shll
lock
jmp
cmp
mov
rorb
ds
ret
mov
mov
int
sarl
cmp
pushf
xchg
ret
push
hlt
push
mov
dec
mov
mov
sahf
pop
adc
lahf
fisubrl
aaa
sbb
pop
add
lds
mov
pop
addb
ja
hlt
add
jp
test
cmove
mov
fnstcw
push
fsubs
dec
fnstcw
je
or
inc
xchg
mov
push
jle
mov
adc
add
sti
add
add
sub
cmc
inc
lock
les
cs
jo
pop
gs
std
js
jecxz
inc
dec
incb
out
jge
or
dec
test
xchg
repz
and
fs
mov
lret
mov
lcall
js
xchg
pop
cltd
dec
mov
dec
jno
in
jae
cmc
dec
or
jns
retw
inc
mov
sub
notb
fstpl
in
sbb
push
mov
mov
sahf
insl
test
mov
out
loop
cmp
push
ret
fcmovne
popf
in
shr
sub
ja
out
mov
sub
cltd
es
and
cli
cmpxchg
fcmovnb
aam
ja
dec
and
in
test
inc
imul
lahf
sub
push
sbb
lds
or
cmp
stos
sub
ret
adc
sub
push
push
xor
dec
insb
push
mov
call
dec
sbb
cltd
xchg
xor
stos
cli
mov
cmp
in
outsl
sbb
dec
jnp
or
pushf
in
cmp
out
push
adc
xor
mov
pop
push
and
mov
into
in
cmp
inc
sarb
loope
pop
sbb
aam
daa
add
sub
sub
aam
fwait
lahf
sbb
push
movsb
lret
sub
dec
ret
inc
cmp
test
std
dec
movl
pop
xor
into
insl
fs
mov
scas
mov
jg
js
xchg
adc
sub
es
mov
dec
mov
mov
pop
xor
mov
mov
inc
aad
jb
or
jg
out
inc
sarl
outsb
roll
xor
aas
out
in
cltd
mov
fld
mov
stc
mov
mov
stos
push
sbb
mov
hlt
std
xor
inc
mov
push
adc
data16
xchg
pop
scas
jmp
fistps
jecxz
cli
bound
sbb
sbbb
sub
adc
add
test
or
movsb
mov
fisttpl
jge
mov
in
loop
fisttpll
sbb
sbb
mov
fidivl
xchg
fisubl
mov
adc
fiaddl
add
push
and
xor
cmpl
negb
jns
mov
jb
idivb
loop
imul
arpl
fs
lods
ret
aad
std
push
inc
shll
arpl
push
and
test
cmp
shl
xchg
repnz
xor
out
shll
or
mov
arpl
fidivrl
mov
cmpsb
mov
dec
sub
nop
lock
mov
daa
cmp
xchg
pop
dec
mov
js
xchg
in
in
xor
sbb
pusha
loop
xchg
ret
sbb
movsb
rcr
pushf
aad
xchg
mov
jmp
idivl
mov
inc
imul
adc
call
loope
dec
test
pop
hlt
mov
test
add
ret
or
fwait
xor
lcall
std
stos
std
in
dec
movsl
sbb
dec
les
add
in
aas
int
xchg
mov
xor
push
push
mov
int
xchg
std
fwait
sbb
repnz
cltd
mov
fdivs
mov
cs
mov
je
add
pop
rcl
cld
lcall
and
test
xchg
rol
xchg
sti
popf
dec
repz
test
loop
cmp
push
mov
push
and
and
mov
jae
sbb
fwait
sbb
es
add
jmp
inc
and
sbb
push
jb
sbb
inc
add
push
dec
fdivrs
scas
repnz
or
cld
mov
imul
mov
xchg
sbb
inc
xchg
xchg
sub
xchg
or
aad
sbb
jo
loopne
or
cmp
aad
gs
cmp
sbb
out
inc
out
je
hlt
ja
rorl
popf
fwait
inc
cmp
sbb
pop
mov
mov
xchg
fwait
inc
lods
xchg
andl
or
std
mov
lcall
clc
inc
mov
lret
and
sub
sbb
inc
jne
pop
int3
call
sub
or
mov
adcb
mov
mov
push
rorl
dec
adc
push
sbbl
dec
inc
sbb
std
and
fcomi
and
adc
cwtl
fsub
mov
aas
filds
xchg
mov
rep
fstpl
pushf
int3
addl
and
pop
loope
idivl
int
fsubs
aas
outsb
cld
fidivl
idivb
xchg
int
imul
daa
or
ds
pop
xor
push
je
andl
inc
pop
mov
mov
jno
sbb
sbb
xchg
inc
bound
cmc
insb
nop
mov
mov
idivb
mov
les
rcl
adc
and
std
scas
shl
pop
test
jae
sbb
nop
mov
mov
cmp
or
jns
lcall
out
leave
mov
out
sti
or
push
loopne
dec
fdiv
fcmovne
mull
mov
inc
jle
push
adc
call
cmp
scas
dec
mov
gs
push
add
stc
rolb
jmp
xchg
rcl
ret
cmc
fadds
pop
inc
cltd
out
push
test
push
push
and
xlat
leave
daa
dec
sub
and
loop
jecxz
push
aad
repnz
aaa
cmp
xchg
or
jb
iret
pop
push
lods
into
jno
dec
in
hlt
sbb
movsb
mov
pop
xchg
nop
and
mov
adc
or
aas
les
hlt
test
mov
dec
push
sbb
jecxz
cmc
loop
add
stos
in
repnz
sbb
inc
stos
mov
lods
adc
adc
cmp
pop
inc
out
das
jle
or
sub
in
loope
adc
cmp
adc
push
cld
inc
cld
mov
sbb
mov
add
popf
add
jmp
cmp
test
ret
mov
jo
adc
pop
in
imulb
push
sub
jbe
mov
lds
repnz
pop
mov
push
out
in
lods
mov
ss
add
xlat
mov
ret
jp
mov
sub
ret
cli
push
iret
or
adc
imul
insl
xor
dec
adc
bound
js
inc
jle
sub
mov
lods
int
xor
sub
mov
out
movsl
xchg
aaa
scas
jge
stos
inc
cwtl
stos
repnz
ss
sub
sahf
sbb
leave
mov
sub
jg
cmpsl
in
jae
push
fidivrs
imul
fstl
fdiv
lahf
out
mov
rep
bound
push
sbb
inc
jno
ljmp
ds
xchg
inc
mov
inc
jne
call
sbb
rorl
dec
add
or
cs
andl
mov
push
xor
inc
mov
fs
and
mov
cmp
xchg
mov
xor
inc
adc
or
shrb
sbb
push
fnsave
sub
aaa
and
cmc
bound
fisubl
adc
push
sbb
mov
cwtl
dec
test
jnp
mov
add
sub
xchg
mov
lods
adc
scas
and
or
popf
stc
lods
ja
dec
xchg
push
adc
and
cmp
pop
in
mov
mov
add
repnz
imul
ja
loopne
push
and
mov
jns
in
test
mov
aad
lcall
jnp
outsl
sub
bound
cltd
add
adc
dec
rcrb
inc
pushf
jns
adc
pop
imul
fs
loop
lods
xchg
addb
inc
fbstp
je
push
mov
test
and
adc
add
add
xor
mov
insl
inc
sbb
inc
popf
push
sbb
mov
ds
test
fsubrs
push
lcall
sub
mov
push
iret
nop
cmp
enter
mov
repnz
iret
jmp
and
sub
movl
mov
outsl
pop
cli
inc
repz
add
xor
leave
mov
idiv
push
sub
push
icebp
divb
xlat
gs
dec
xchg
mov
inc
push
xchg
fadd
stos
push
mov
lcall
int3
mov
mov
mov
cmp
or
roll
inc
sbb
mov
insb
subl
and
inc
sbb
in
cmpsl
sbb
jne
popf
pop
push
xchg
pop
rorl
out
pop
jb
shll
cmp
add
or
push
scas
popf
hlt
std
dec
add
sbbb
mov
cmp
shlb
xor
mov
adc
nop
lret
jbe
stos
btc
adc
adc
gs
dec
xchg
mov
push
sub
pop
dec
test
iret
xor
mov
pop
adc
xlat
sahf
sub
out
inc
shrb
xchg
dec
stc
add
xor
xchg
xor
mov
mov
lods
insl
push
sub
call
cmp
popa
adcl
fldcw
pop
add
cmp
dec
lds
fisttpll
push
repz
cmp
add
xchg
push
push
push
mov
or
adc
or
ljmp
or
ror
out
in
test
outsb
cmp
cmp
out
pushf
push
cld
out
jmp
psubq
ja
mov
hlt
mov
mov
insb
pop
sub
gs
xchg
int3
mov
mov
inc
pop
sbb
sub
sbb
sahf
jae
es
mov
mov
fildll
sti
sub
fmull
sbb
xchg
adc
add
scas
mov
scas
push
lret
enter
cmp
loope
pop
fisttps
xor
pop
xadd
dec
push
push
les
or
mov
lods
adc
loopne
push
adc
push
pop
out
sbb
cmc
pop
xor
mov
mov
inc
xchg
sbb
dec
push
cmp
push
and
out
sahf
int
das
iret
in
dec
xchg
mov
jb
call
aas
mov
mov
popa
popa
xchg
ret
outsb
cltd
shl
pop
mov
push
imull
ja
dec
jmp
sti
movsl
pushf
shl
adc
inc
loope
stos
ret
xor
lea
mov
add
call
cmp
pusha
push
mov
lock
jnp
sbb
xchg
push
jb
pop
mov
or
mov
ds
dec
aas
push
daa
cmc
cld
pusha
arpl
add
xchg
mov
inc
in
adc
xor
jns
xchg
cwtl
xchg
cmp
jno
or
arpl
in
scas
inc
enter
test
jne
stos
hlt
mov
into
mulb
add
into
iret
test
rol
fldt
xchg
arpl
outsb
adc
sub
fsubrl
aad
std
fldenv
fs
mov
add
xor
inc
mov
ret
je
mov
sbb
and
ret
or
xchg
adc
clc
and
inc
imul
in
in
mov
lock
push
mov
lahf
scas
push
adc
inc
or
xchg
pushf
and
inc
sub
pop
and
outsl
leave
lock
repnz
push
mov
out
xchg
xchg
mov
fs
js
std
rcrl
arpl
dec
movsb
fbstp
lahf
and
mov
lock
dec
je
int3
pusha
inc
movsb
jecxz
add
or
outsb
mov
shrl
dec
test
jle
ret
xchg
in
cli
in
mov
jge
sarb
stc
or
add
fnstsw
enter
add
stos
gs
sbb
mov
jmp
dec
mov
mov
lahf
shlb
rcrl
pop
push
adc
mov
mov
and
ds
pop
loopne
jns
xor
call
mov
ret
or
inc
je
jecxz
pop
aas
cmc
sti
cmpsb
repz
push
inc
out
ja
pusha
shlb
sbb
ficoml
pop
sbb
fwait
movsl
xchg
mov
push
loopne
stos
out
push
adc
arpl
ss
and
cmp
mov
cmp
inc
jl
inc
sbb
cmc
ss
push
repnz
popa
clc
fwait
xchg
iret
out
xchg
mov
lcall
pop
es
fiaddl
cmp
push
mov
les
dec
sbb
mov
push
jae
and
movsl
hlt
sub
fidivrl
mov
in
xor
mov
push
push
ss
mov
xchg
lret
ja
dec
push
push
push
push
xor
xchg
or
dec
xchg
xchg
das
jae
loope
mov
cltd
xchg
jle
sti
jmp
fisubl
int3
out
int3
push
sub
fs
mov
sti
xor
stc
fwait
jg
push
jns
push
cltd
shll
sti
popa
jns
xchg
pop
int
xchg
dec
repz
add
add
mov
fnstenv
xchg
inc
in
addr16
loope
movsb
in
fisubs
enter
mov
mov
movsb
inc
inc
fwait
xchg
repz
and
outsb
out
js
pop
push
stos
pop
faddp
add
in
mov
pop
fcmovnbe
xorb
in
cltd
mov
mov
fmull
mov
stos
mov
lret
pop
push
fs
mov
fcoml
push
fbld
mov
jns
add
jecxz,pt
aad
xor
enter
and
imul
shr
adc
or
ret
cli
jmp
xchg
outsb
sub
icebp
bound
dec
dec
push
and
lock
or
dec
insl
or
in
jne
jge
dec
and
test
pop
xchg
hlt
lock
sub
jg
sbbb
add
sarb
into
mov
fiaddl
jnp
lods
mov
mov
jne
xlat
insb
mov
pop
cmc
imul
or
ljmp
stos
std
popa
inc
adc
les
xor
fdivl
fistl
test
into
fsub
ret
dec
ds
ja
ja
bound
pusha
repnz
mov
xorl
scas
sub
inc
pop
insl
jbe
xchg
push
daa
and
fnsave
xor
inc
xor
mov
mov
loope
xor
xchg
shr
test
cmp
rorl
into
fdivs
lods
cmp
dec
cs
dec
and
pop
frstor
push
lahf
loopw
mov
aas
mov
lahf
cmp
in
push
pop
push
imul
cmpsb
stos
pop
sub
insl
adc
mul
pushf
dec
xlat
push
imul
dec
out
out
mov
push
sbb
jmp
pop
push
mov
push
push
push
xchg
push
xchg
mov
sti
nop
sub
cmc
dec
sbb
pop
into
popf
ds
popf
lcall
rcr
xchg
fisttpll
shlb
fcomip
ljmp
cmpsl
scas
cs
das
add
jle
jo
and
jnp
leave
mov
idiv
xchg
sahf
into
xchg
inc
add
add
jge
pop
cmpsb
mov
adc
xchg
lods
cmpsl
add
push
sub
xchg
or
or
xchg
loope
lods
fst
mov
sub
inc
sub
clc
loope
xor
leave
mov
mov
iret
insb
shll
mov
leave
icebp
xchg
xchg
pop
add
stos
insb
add
sbb
fwait
push
xchg
test
xchg
jle
jg
mov
dec
xor
jle
or
mov
and
adc
pop
fdivr
std
out
insb
je
jmp
addl
je
fdiv
outsb
push
mov
mov
pop
stos
sbb
inc
repz
xor
mov
movsl
add
cmp
jne
jae
and
scas
cld
ja
cmp
xchg
orl
or
mov
insb
cmpsl
cmp
add
push
adc
test
popf
dec
aas
js
xor
push
sahf
loope
iret
fisubrs
aam
mov
add
jl
inc
mov
test
jp
sbb
mov
sub
jmp
ja
scas
daa
pusha
xchg
cmc
jne
stc
fnsave
jbe
mov
mov
popf
mov
ja
dec
add
and
inc
xchg
aad
lea
mov
fnsave
imul
push
subb
out
insb
xor
daa
add
inc
in
in
mov
mov
mov
loopne
jbe
mov
xchg
push
fs
cmovae
out
rcl
addr16
sti
push
shlb
xor
mov
bound
mov
jne
fs
cli
xchg
cs
jg
in
or
leave
fidivrl
lcall
shrb
stos
jo
stos
sarl
mov
push
xor
lret
and
xchg
or
push
xor
ret
cs
pop
in
cmpl
xchg
xchg
mov
push
cmpps
inc
sahf
lock
mov
push
daa
lods
dec
push
mov
jns
xor
push
rcrl
out
ljmp
or
xor
pop
jb
push
sub
and
lahf
sbbb
inc
stos
push
loopne
loopne
adc
adc
push
out
rdpmc
mov
mov
mov
aaa
das
clc
fscale
pop
pushf
mov
jne
jne
sbb
jp
push
xchg
repz
scas
popf
out
inc
push
stc
ror
cmp
pop
push
xchg
scas
add
mov
inc
jnp
js
ret
mov
in
or
sub
and
dec
aaa
ficoms
lahf
testl
inc
enter
xchg
out
fcompl
scas
arpl
and
jo
inc
fistl
test
mov
ds
shl
loop
dec
xchg
jge
inc
jnp
lret
lods
jo
xchg
xchg
sti
lret
sbb
push
or
sub
mov
or
mov
cmp
or
push
ficompl
pop
stos
mov
cmpsb
dec
je
scas
fs
adc
lcall
sbb
jmp
pop
jmp
rorb
ljmp
setno
in
jle
cmc
jmp
shll
mov
mov
mov
push
pusha
xchg
out
daa
xor
inc
and
es
inc
ja
and
shrl
xor
outsb
cli
add
out
push
ds
jnp
cmp
fadds
mov
xchg
mov
das
or
sbb
flds
or
int3
lcall
ja
inc
inc
mov
repz
pop
sahf
sub
subl
pop
ret
fdivs
push
fisubl
xchg
jb
lods
jb
test
jb
or
daa
adc
in
inc
divl
into
jmp
cli
popf
jnp
mov
cmpsb
add
mov
fcoms
mov
mov
fcomip
gs
jp
ret
incl
mov
sti
jns
lds
push
push
stc
push
cmp
push
inc
lret
mov
xchg
jbe
dec
sub
pop
or
xor
push
mov
stc
xchg
and
std
mov
dec
aam
xlat
xor
popf
nop
add
dec
xchg
pop
pop
popa
fmuls
adc
xchg
mov
cli
mov
adc
lcall
jnp
out
aad
xor
push
fcmovnbe
add
add
loope
hlt
lcall
cmp
int
xchg
jle
cmp
sbb
xchg
push
lods
or
sbbb
ja
nop
es
aad
push
inc
cmpsl
sub
popf
push
in
and
sti
pop
test
jo
and
inc
stos
mov
pop
mov
jge
or
test
out
add
les
push
inc
push
imul
test
aaa
jmp
xor
sahf
loope
inc
filds
outsl
test
pop
mov
popa
arpl
xchg
sub
int
sub
fnstsw
sbb
cld
faddl
mov
lcall
mov
mov
stc
outsb
push
pop
push
inc
pop
rcr
add
repz
mov
rcrl
gs
xacquire
add
out
les
push
mov
into
sub
mov
adcl
out
movl
mov
les
not
jge
and
fnstcw
ljmp
sbb
sarl
mov
mov
mov
jo
or
clc
lahf
mov
popa
cmpb
xor
call
and
add
dec
mov
inc
sub
test
cltd
insb
sub
xorl
pop
sbb
iret
neg
ret
fstpt
add
sbb
test
xchg
adc
movl
xchg
jp
into
jg
jne
mov
mov
and
jmp
mov
xor
mov
jne
adc
and
pop
inc
sub
loopne
pop
fcmovne
add
rcl
and
iret
xchg
popa
test
sbb
dec
or
lahf
cmp
loop
movsl
lahf
add
dec
pop
std
imul
inc
cmp
push
cmp
mov
roll
scas
and
pop
pop
and
mov
jmp
jae
dec
repz
loope
ss
inc
je
xchg
rcll
jns
in
fisubrs
mov
movsl
mov
or
lods
aad
cmp
sahf
ret
push
mov
pop
xor
dec
stc
shr
inc
in
inc
call
lret
mov
pop
leave
mov
xorl
les
and
push
xor
jne
xor
jae
pushf
sti
sbb
sub
inc
les
jae
pop
fs
pusha
jo
popa
insb
enter
jne
stos
xchg
fisttpll
push
ss
dec
or
sbb
xor
xchg
int3
inc
iret
mov
mov
sbbb
pop
cltd
pop
xor
push
mov
out
mov
pushf
mov
insb
fstps
add
xor
xchg
stos
jle
inc
shrl
pop
call
bound
add
sbb
sbb
push
fst
push
push
fdivrs
adc
pop
jns
sbb
sub
hlt
mov
xchg
push
mov
pop
dec
clc
mov
pop
sbb
dec
addb
fucom
push
bound
lods
add
mul
pop
xor
ljmp
add
and
xchg
pop
jbe
sub
aad
xchg
repz
daa
jmp
adc
adc
fwait
xchg
jecxz
pop
pop
ret
mov
roll
jg
test
jg
xchg
testb
and
adc
xchg
mov
inc
into
movmskps
mov
fs
or
cs
shll
adc
add
jns
lods
arpl
int
mov
lock
sbb
mov
bound
cli
inc
jmp
lahf
jns
jmp
fsubrs
push
jne
mov
add
adc
aaa
xchg
scas
xchg
scas
inc
ss
cmp
stos
pop
fistpll
int3
dec
iret
clc
cs
push
pop
into
addr16
incl
das
add
lret
jb
call
sub
mov
inc
sarl
adc
icebp
mov
imul
cmpsl
adc
in
lret
mov
cmpb
or
dec
pop
ljmp
pop
push
insl
pop
adc
sbb
push
mov
xchg
push
or
ljmp
inc
jge,pn
pop
fwait
rolb
fs
and
inc
lock
pop
xor
xchg
cmp
test
mov
nop
pop
ret
loopne
imul
jg
rcrl
es
in
sbb
in
sarl
lea
into
lret
dec
mov
gs
sbb
sbb
xchg
pause
sub
xor
mov
int
adc
loop
mov
les
hlt
rorb
lcall
jmp
in
cmp
ds
jne
bound
ss
push
dec
sbb
test
out
cwtl
push
sub
inc
sub
in
inc
xchg
xchg
mov
lds
imul
sbbb
fsts
ror
dec
jae
sub
dec
rorb
xor
jp
push
lods
mov
add
sbb
push
xlat
loope
lods
inc
es
add
les
mov
jno
push
test
fucomip
fstpl
aaa
jno
mov
mov
xor
stos
dec
push
xlat
lcall
pop
jns
adc
mov
mov
jae
jecxz
cvtdq2ps
inc
pop
sub
jno
fldl
fnstsw
dec
xor
cltd
sbb
jl
loope
jecxz
stc
inc
sarb
adc
cmp
cld
sbb
lods
sbb
into
or
xor
popa
push
or
mov
das
xchg
pop
lods
scas
or
cmp
scas
jb
xorl
xor
inc
pusha
insl
mov
mov
cmp
push
jg
cld
popa
jmp
testl
sbb
mov
mov
xor
mov
lock
push
fldt
jae
sbb
les
fcomip
push
mov
je
test
pusha
mov
dec
aaa
adc
jns
shlb
roll
inc
jb
imul
sub
outsl
cmp
int
subb
rcrb
cld
ftst
test
std
pop
mov
adc
sbb
outsb
jmp
negb
icebp
xor
arpl
pusha
sarb
dec
rcr
inc
push
pop
pop
sub
fidivrl
in
mov
fsubrl
cmp
jbe
cld
outsb
mov
mov
pop
dec
ret
and
into
add
stos
jns
xor
or
jbe
push
push
sahf
mov
sub
xor
lock
xor
shl
fstl
push
data16
insl
pushf
mov
repz
and
std
cmpsl
enter
dec
mov
and
js
popf
push
pusha
std
push
adc
xchg
push
shlb
mov
loope
cli
mov
rolb
subl
fmuls
fcmovnbe
imul
loopne
sti
popa
es
push
jg
mov
icebp
in
aaa
adc
jg
ljmp
mov
xchg
and
sub
sbb
js
push
xchg
lret
inc
aam
push
mov
test
mov
push
push
mov
cmp
jl
dec
and
aad
or
popf
push
inc
pop
in
aas
mov
xchg
jp
icebp
jnp
jmp
fidivrs
xor
pop
shlw
sbb
dec
or
add
and
ja
stc
aaa
rcl
into
or
nop
jb
scas
add
jge
push
mov
test
add
negl
xorl
xor
orb
jge
popf
in
pushf
and
repnz
adc
leave
incl
je
lret
adc
and
hlt
add
inc
mov
pusha
dec
ror
cld
xor
das
cmpsl
pop
sub
mov
push
int
dec
lcall
sub
adc
mov
push
pop
mov
in
mov
mov
sub
insl
cwtl
movb
inc
jmp
mov
loop
imulb
or
hlt
faddl
pop
mov
pop
lods
rcrb
int
xlat
xchg
mov
divb
popf
in
inc
push
aad
sbb
test
cmovl
loope
xchg
xor
std
pop
scas
pop
inc
pop
movsl
pop
mov
and
fadd
arpl
and
sbb
push
outsb
dec
xor
xchg
mov
test
or
pop
jnp
inc
rcrl
bound
push
sub
rclb
pushf
jl
xchg
lcall
and
xor
arpl
mov
test
inc
hlt
test
push
lods
test
shlb
jge
push
push
inc
dec
xor
notb
mov
jbe
mov
xchg
popa
lds
lods
xchg
or
mov
daa
es
hlt
dec
repnz
or
cmpsl
dec
lds
insb
out
cmp
lds
xor
push
jo
jne
jae
push
popa
inc
inc
pop
std
loop
jge
push
fistps
sub
imulb
or
movsl
lods
ficoms
ja
fcmovnbe
clc
mov
mov
sbb
pop
bound
cmp
xor
gs
and
icebp
pop
test
mov
subb
pop
cwtl
cmc
push
xchg
sub
je
mov
xchg
imul
or
jmp
into
fdivrl
add
cmpsb
cmp
jecxz
pop
adc
sbb
je
jle
pop
iret
xor
xor
outsl
mov
push
jmp
daa
scas
out
mov
jne
stc
aas
scas
mov
xchg
adc
icebp
mov
test
in
sub
mov
lds
ljmp
andb
stc
adc
lea
mov
nop
sbb
jmp
fisubrl
filds
push
mov
out
out
dec
xor
pusha
mov
insb
idiv
outsb
popfw
xor
icebp
stos
xchg
pop
mov
pop
xchg
daa
popf
dec
fcompl
mov
jp
cmp
dec
lods
repz
fs
mov
add
xor
pushf
mov
mov
sbb
cld
xor
neg
sbb
fbld
ja
fs
or
in
ret
aaa
dec
mov
and
movsl
mov
outsl
std
fs
mov
cwtl
shll
mov
out
aaa
push
roll
dec
pop
lret
js
cmp
test
xor
addb
fcompl
inc
add
cltd
movsl
imul
shrb
out
leave
stos
stos
mov
fisubs
xchg
sarl
fcoms
xlat
jle
add
jp
jge
in
jb
push
sub
or
mov
ret
in
mov
sbb
jae
lods
push
xor
aaa
cmp
out
xchg
outsb
fdivrs
aas
inc
testl
test
and
dec
adc
mov
enter
stos
stos
rorb
call
inc
fnsave
mov
call
es
inc
and
test
jbe
movsl
pop
xchg
push
cmp
popl
inc
sti
jp
loope
xchg
movsb
sbb
js
jmp
lock
or
mov
xor
and
fidivl
or
stc
lcall
insl
push
insl
sbb
xor
cmp
cmp
push
mov
mov
stc
call
outsl
xchg
pop
mov
mov
mov
xor
mov
xor
xchg
xchg
icebp
icebp
mov
xchg
dec
xor
pusha
sti
push
ret
pop
xchg
and
fnsave
mov
inc
jbe
add
negb
push
or
pop
mov
scas
mov
in
fadds
pop
test
and
xchg
call
sbb
pop
test
addr16
lock
sub
add
bound
lret
adc
sbb
and
mov
and
jne
mov
cmp
fwait
shr
fstl
mov
jmp
jecxz
mov
push
mov
jecxz
int3
mov
or
ljmp
shr
fcomi
jb
dec
lds
cmp
adc
lods
or
sarb
aaa
gs
jle
pusha
incb
xchg
sub
fwait
movsb
nop
shl
cmc
push
jmp
std
adc
cmc
ss
adc
popf
pmulhw
inc
std
divl
aaa
sahf
push
xchg
mov
ljmp
jp
push
std
les
pop
dec
jle
jo
int3
pop
mov
mov
inc
adc
add
cmp
inc
xlat
loop
rcr
mov
xlat
pop
clc
mov
insl
add
jg
insb
push
or
mov
inc
das
sbb
xchg
aad
stos
cmp
inc
test
xchg
sub
cmc
int
cmp
subb
outsl
aad
and
xor
inc
xchg
and
mov
fisubrs
dec
mov
jmp
adc
aaa
sub
sbbl
or
out
mov
repnz
dec
adc
decb
jle
shl
sbb
stos
sbb
xor
push
xchg
add
jnp
in
inc
gs
mov
popf
push
mov
stos
inc
mov
sub
les
enter
mov
subl
inc
ret
or
mov
add
hlt
inc
into
daa
inc
loope
xchg
mov
mov
xchg
stc
mov
dec
out
push
mov
sub
lcall
in
mov
add
pop
xchg
cmp
insl
clc
sbb
add
mov
adc
dec
push
sbb
inc
ror
addb
dec
imul
rcrb
mov
repz
lods
stos
xchg
lcall
mov
push
inc
mov
ret
adc
fs
add
out
jnp
sbb
adc
sbb
popf
es
loope
mov
push
enter
sahf
insl
roll
lods
add
cmpsl
jnp
idivl
dec
andl
jge
pop
push
and
in
xor
cwtl
mov
xchg
push
stos
pop
into
fildll
mov
out
mov
add
xor
push
cmpsl
add
pop
push
loop
lock
sub
nop
cmp
xor
xor
sub
cmp
xchg
xor
dec
mov
fmuls
js
loop
pusha
jecxz
push
or
pop
inc
call
add
sub
fst
std
mov
mov
leave
jo
or
ret
in
xchg
js
pop
or
sub
cmpsl
cs
sub
cmp
xlat
sbb
dec
push
test
sub
fwait
popf
aaa
adc
mov
mov
dec
cmpsb
mov
jg
or
jns
fidivs
dec
int3
add
xor
mov
repz
or
iret
push
mov
sti
xchg
dec
xor
mov
imul
mov
clc
xor
adc
xor
and
rcrb
push
cmpsb
out
mov
loope
ja
jg
adcb
and
lods
pop
xlat
fnsave
out
decb
inc
ja
cmc
sbb
negb
mov
repz
or
enter
lock
xor
out
xchg
or
lods
iret
subb
xchg
imul
bound
mov
and
dec
iret
mov
cmp
fucomp
je
inc
sub
inc
jb
dec
adc
hlt
jge
xchg
ret
xorb
rol
repz
inc
or
mov
xor
cmp
ficoml
sbb
mov
rcll
stc
adc
mov
faddl
inc
lds
push
mov
or
fsub
pop
pop
into
mov
ficoml
and
fwait
enter
aas
xchg
xorb
mov
sbb
cmp
adc
jae
inc
or
int
push
mov
cmp
add
xchg
cltd
xchg
xchg
mov
pop
in
imul
mov
mov
push
jbe
push
out
popf
dec
sub
or
add
mov
push
inc
in
dec
cli
or
enter
lock
push
movsl
push
cs
test
inc
xchg
imul
mov
sbb
and
test
enter
test
mov
cmpsl
dec
dec
push
fwait
jae
std
adc
push
or
and
cmpsl
xor
inc
push
pop
incb
inc
fisubl
outsl
xchg
or
rcrl
xor
mov
jne
cld
fldenv
mov
add
repz
add
sub
out
push
xor
sbb
sub
dec
decb
pop
std
aaa
push
and
repz
out
insl
mov
or
dec
fnstsw
inc
mov
mov
sbb
mov
xor
push
xchg
rcrl
cmp
fwait
mov
insb
dec
repnz
cmp
into
pop
test
stos
or
push
push
or
pusha
lods
lods
clc
sub
jp
jno
adc
dec
mov
pop
mov
push
inc
add
loopne
sub
aaa
mov
mov
cmpsl
inc
repz
test
xor
scas
aaa
jne
or
add
dec
mov
add
add
shld
jbe
ja
mov
pop
xlat
rclb
sub
loop
pop
and
push
and
or
add
bound
shrb
out
out
dec
xchg
roll
push
ljmp
pop
nop
adc
rcrl
enter
adc
scas
adc
or
cmp
xor
push
gs
mov
frstor
repnz
inc
cmp
data16
cli
mov
mov
hlt
cmpsb
fcoml
add
pop
fsub
ffreep
aam
divl
jmp
xor
lea
lock
lret
mov
fiaddl
mov
sbb
iret
jbe
arpl
add
add
int3
out
mov
xor
movsl
enter
out
push
mov
test
cmp
adc
data16
cwtl
xchg
jo
sbb
outsl
adc
jae
lret
loop
or
or
jl
adc
ret
sub
dec
xor
outsb
ror
dec
adc
push
xchg
lcall
jecxz
jecxz
push
xor
jmp
inc
scas
dec
mov
jge
xchg
xchg
sub
push
mov
jnp
iret
or
subb
pop
lock
shr
lea
xchg
add
mov
ss
sub
and
sub
adc
jnp
pop
jmp
push
pop
mov
mov
sub
sub
in
or
xlat
ret
and
sbb
movups
mov
add
js
lds
mov
xor
aas
lock
pop
mov
dec
fwait
dec
dec
sbb
leave
or
mov
rolb
push
cmp
jge
sub
cld
or
inc
leave
lret
mov
pop
icebp
jle
add
cmp
frstor
sbb
cs
inc
ja
pop
add
ret
add
cmpsl
mov
jecxz
aam
in
daa
and
fwait
sbb
aad
inc
jmp
cmpsb
sbb
pop
inc
push
mov
add
lret
adc
sbb
pushf
call
jecxz
sbb
push
adc
xchg
mov
inc
pop
inc
adc
into
push
xchg
dec
shl
add
mov
mov
inc
andb
jge
push
xor
sub
jae
mov
shlb
je
xor
ljmp
test
nop
mov
mov
inc
out
loope
or
cltd
out
ljmp
mov
pop
jbe
into
andb
imul
mov
fimuls
int3
push
push
test
sbb
dec
dec
cltd
pop
sub
dec
adc
jnp
pop
pusha
and
jle
bound
or
mov
and
inc
or
push
lcall
lcall
pop
test
or
jl
adc
data16
add
mov
aam
dec
sahf
daa
in
mov
psubd
add
cmpsb
lea
sbb
mov
bound
addb
out
pop
cmpsb
inc
lret
scas
pop
xor
jle
adc
aad
popa
sbbb
mov
fdivs
icebp
aaa
inc
xor
sub
add
outsl
mov
fimull
inc
sahf
jmp
lahf
sbb
jmp
mov
aam
out
jecxz
pop
jbe
xchg
or
cmc
mov
mov
xchg
jmp
xchg
inc
cmp
pop
les
push
inc
jp
je
enter
hlt
mov
popf
pop
fstpl
testl
add
and
inc
nop
add
xchg
xchg
inc
adc
imul
stos
jo
or
mov
test
fisubl
dec
jle
leave
rorb
mov
lock
lahf
mov
fldl2e
cmpsb
and
sti
rcr
jo
pop
daa
or
jle
pop
cld
xchg
push
add
push
jle
mov
lret
mov
push
test
dec
fcompl
sbb
mov
sub
mov
pop
ret
movsb
fdivp
imul
es
aam
adc
jmp
jp
adc
dec
shl
dec
pop
loopne
sub
or
sbb
lret
cmc
movsl
jno
add
cmpsl
pop
xchg
aad
cmp
pushf
shl
outsb
push
sbb
cltd
cwtl
jbe
mov
add
test
sarb
mov
or
adc
cmp
jle
inc
xor
nop
mov
jmp
lret
inc
add
popf
dec
aaa
enter
jp
inc
rolb
fstl
adc
out
mov
xchg
lea
fwait
loope
pop
aam
repnz
mov
jne
pop
mov
insb
jnp
push
cmp
xchg
fwait
jl
xchg
dec
rol
setae
sbb
cwtl
pop
push
inc
dec
adc
fidivs
jns
jmp
out
pop
xor
mov
push
movb
push
push
mov
push
mov
call
jmp
int
xchg
adc
mov
insl
sub
jo
imul
das
sub
and
cld
insl
adc
inc
loope
or
nop
add
xchg
movsb
and
out
fwait
adc
xchg
ret
push
in
or
test
int3
mov
lods
xor
int3
mov
jns
movsb
je
leave
ret
imul
iret
fldl
dec
stos
add
xor
push
fldenv
adc
sbbb
lods
mov
rcr
jl
movsb
mov
arpl
lret
or
jbe
mov
jbe
out
jmp
and
push
add
sbb
jp
xchg
mov
movsl
movsl
sbb
adc
andl
xchg
or
aas
out
jecxz
xor
nop
scas
sar
inc
aas
sbb
loopew
ljmp
push
aaa
lahf
and
imul
outsl
mov
mov
xlat
in
negb
aas
adc
loop
stos
ret
add
ljmp
icebp
add
pop
std
xchg
mov
adc
lea
lret
into
or
packssdw
loopne
push
inc
stos
lret
xor
repnz
int3
lea
out
loope
cmpsb
jne
movsl
fwait
inc
out
les
xchg
scas
movsb
or
lcall
fdivs
ficoml
flds
or
loope
outsl
and
xchg
inc
pop
or
repz
outsb
insl
cmp
decb
in
outsl
xorl
or
inc
outsl
enter
jb
test
movsb
bound
in
int
xlat
shll
push
push
pop
test
xchg
and
movsb
notb
mov
cmp
pop
or
adc
int3
scas
inc
push
jg
lods
mov
es
lcall
test
or
dec
mov
sbb
mov
stos
frstor
pop
pop
mov
or
adc
xor
loope
mov
push
mov
cmp
negl
imul
mov
add
rcrb
sub
mov
mov
das
xchg
cmp
subps
mov
nop
jno
insl
aad
add
sub
mov
mov
loop
into
lret
pop
jg
clc
rclb
out
jb
or
push
mov
cmp
fnsave
mov
subl
clc
outsb
xor
mov
adcb
out
xor
and
push
cltd
sbb
lods
cmp
filds
fisttps
cwtl
xchg
mov
and
out
inc
lea
call
rcrl
shrb
xlat
imul
sub
sub
mov
repnz
adc
adc
xchg
iret
jno
inc
iret
cmp
mov
stos
and
push
add
lods
in
pop
loopne
mov
and
cmc
mov
push
leave
adcl
jne
cmp
sbb
adc
or
std
stos
inc
sbb
fdivs
fisttpl
mov
stos
pop
jge
pop
xchg
popf
pop
sbb
movsb
out
push
cs
push
stos
out
movsb
mov
nop
sahf
pop
or
push
sbb
clc
inc
push
inc
iret
add
fists
iret
out
mov
mov
mov
lahf
or
jno
pop
sub
fnstsw
nop
mov
sub
sbb
inc
mov
ss
ds
cmc
sub
or
fdivr
jae
add
cmp
lahf
dec
sbb
or
test
fidivs
sbbl
mov
idiv
push
or
xchg
jle
pop
mov
sub
cmpsl
pop
fisttpll
add
stc
push
sub
xor
test
push
jmp
enter
xchg
incl
or
push
fs
rclb
inc
mov
jo
pusha
test
pop
pop
sub
jns
dec
push
movsb
xchg
push
jb
or
add
mov
or
jnp
repnz
outsl
inc
hlt
les
add
adc
test
push
mov
mov
stc
xor
jo
mov
cmp
fidivs
push
cmpsl
sub
mov
lahf
push
stc
adc
push
fwait
leave
push
js
fcompl
movsb
lcall
imul
sbbl
je
lock
insl
inc
shrb
push
out
mull
in
enter
addr16
cmp
jbe
xlat
sbb
movsb
mov
or
inc
add
jmp
push
cmp
daa
xorb
dec
push
inc
pop
das
xchg
jae
test
dec
adc
test
lret
jmp
lret
out
or
mov
in
jno
xchg
movsb
adc
shll
push
sar
test
dec
pusha
xchg
movsl
add
jo
and
lds
test
loop
adc
cmp
shll
arpl
ret
pop
addl
mov
sti
xor
fs
mov
rcll
push
shll
fistps
sbb
cmpsb
push
and
jle
stc
stc
jo
lods
gs
test
and
stc
jb
mov
fimuls
pusha
js
push
test
mov
std
mov
leave
mov
divl
xchg
fadd
xlat
test
push
sbb
adc
aas
pop
rclb
or
sub
jnp
pop
in
in
and
inc
arpl
pushf
pusha
mov
cs
lea
jbe
mov
sti
push
add
bound
adc
icebp
sub
mov
add
cmpsb
xchg
int3
mov
mov
cmpsl
xchg
dec
and
mov
shlb
mov
mov
pop
jnp
repnz
cmp
jp
fistpll
xchg
pushf
test
sub
loope
add
mov
adc
std
mov
push
adc
pop
jp
sahf
jmp
xchg
sub
aas
mov
adc
mov
xlat
test
push
mov
imul
or
test
mov
nop
jo
jge
mov
jp
or
flds
cwtl
rcrl
data16
adc
dec
in
and
push
xchg
jnp
push
inc
dec
movsb
jae
sub
jnp
mov
cmp
push
sahf
pusha
pusha
es
mov
les
cmp
xchg
push
or
stc
inc
out
mov
int3
ret
mov
ljmp
push
sbb
aam
dec
mov
mov
sbb
mov
cmp
pusha
sub
out
xor
xor
shlb
sub
mov
clts
loopne
fs
rorl
add
adc
add
pop
mov
repnz
jmp
push
jg
and
dec
insb
and
mov
bound
ret
loop
xor
xchg
mov
jmp
xorb
icebp
and
or
jne
addr16
pop
mov
push
cmp
xor
roll
test
popa
mov
outsl
xor
divl
mov
int
sbb
lret
adc
out
and
sub
add
shlb
inc
int
jb
testb
mov
je
js
popa
pop
sub
lods
xor
push
pusha
mov
ret
mov
test
push
add
int
in
mov
loopne
test
ljmp
mov
inc
fnsave
adc
and
ja
and
push
and
sti
movsb
sbb
sub
cmp
adc
sbbl
mov
movb
aad
pop
hlt
jmp
pusha
pavgb
pop
jnp
test
cmp
cmp
xchg
xchg
movsl
aad
rcr
repz
enter
add
dec
push
sub
flds
cmc
les
pop
lret
ds
or
pushf
in
inc
pop
lret
repz
or
push
xchg
std
lret
mov
in
jecxz
mov
jge
ljmp
scas
ret
fisubs
aaa
push
mov
fisubl
das
in
jp
xchg
push
nop
xchg
xchg
cmc
sahf
cmp
jb
adc
sbb
ljmp
push
sbb
hlt
xor
sbbb
movsb
and
inc
dec
ss
aaa
cwtl
jmp
add
xor
in
popa
sbb
jbe
repnz
push
lods
ljmp
push
inc
xchg
mov
mov
bound
clc
add
ret
scas
call
daa
in
and
mov
push
add
add
and
and
sub
fidivl
xchg
adc
jg
xlat
leave
lea
ret
scas
xor
jno
push
jae
stos
scas
and
jo
fnstenv
pop
push
mov
fidivl
cmc
push
mov
aam
cltd
jmp
nop
xlat
les
inc
and
mov
sbb
sbb
xorb
ljmp
fdivrs
stos
pop
repz
int3
addr16
xor
sbb
outsb
xlat
lock
jmp
push
pushl
cli
call
and
das
subl
cmp
dec
jns
loope
popf
mov
sbb
cld
add
cli
arpl
cmp
rorl
test
sub
jecxz
out
or
dec
sbb
inc
testb
or
ljmp
fwait
je
and
xchg
sub
mov
fsubp
jnp
push
mov
psllw
push
pop
jg
lahf
jl
sub
inc
and
repz
jo
xlat
ljmp
lcall
mov
dec
pop
push
aam
xor
lcall
jae
enter
xchg
and
pop
clc
mov
movsb
mov
jecxz
xchg
leave
movsb
or
or
jle
jge
outsl
bound
mov
andb
jnp
aaa
ss
cmpsl
das
insl
cmp
mov
push
scas
je
fcomps
sub
js
andb
movsb
lods
lcall
jp
dec
dec
out
and
xchg
cmpsb
mov
cld
mov
xchg
or
stc
pop
push
sub
mull
push
mov
imul
mov
repz
or
cld
ficomps
mov
popa
dec
lds
aas
mov
lods
xor
jecxz
pop
cmpsl
or
int
or
into
aad
sub
jno
push
sub
inc
sbb
andb
push
jge
push
lock
sarb
iret
mov
mov
mov
lahf
popa
insl
pop
arpl
adc
mov
xor
scas
jo
sti
cmpsb
mov
cmp
insb
push
lock
pop
icebp
in
cmpsb
mov
int3
adc
arpl
aaa
push
jns
repnz
mov
push
cltd
test
mov
fnstenv
test
dec
in
sbb
fisttpl
sub
je
push
or
inc
iret
mov
fdiv
cmp
jg
call
mov
mov
mov
out
lret
and
pusha
bound
inc
push
sub
scas
pop
add
xchg
adc
cmp
mov
lods
jmp
push
stc
dec
fidivrl
setne
xchg
pop
and
and
out
ss
pop
sub
xchg
adc
mov
mov
shrl
or
dec
inc
mov
stos
xor
bound
inc
rcrb
mov
push
jge
mov
jns
push
jle
lds
and
outsl
aam
and
movsl
popa
decl
pop
dec
loop
clc
clc
mov
and
imul
testb
xchg
shrb
insl
in
rclb
pushf
pop
or
inc
and
fs
xchg
outsb
pop
mov
cmp
inc
xchg
and
aas
enter
mov
leave
sbb
pop
dec
xlat
loop
arpl
pusha
xor
imul
das
pusha
and
mov
xor
ret
scas
test
pop
push
jae
imul
pop
inc
add
std
dec
rcll
cli
jl
cwtl
sbb
out
faddl
mov
cli
cmp
aad
mov
jnp
mov
sbb
mov
stc
popf
in
aaa
fldenv
aad
push
scas
adc
fstp
add
repnz
and
sbb
or
lea
mov
test
jg
add
jno
push
cli
je
adc
ss
sar
lock
xor
add
xor
push
out
dec
inc
dec
into
repnz
out
pushl
xchg
test
cmpsb
inc
dec
stos
inc
push
adc
aaa
std
subl
fldt
loope
sbb
inc
dec
scas
and
cmpsb
xor
lret
sbb
in
cs
cmp
sarb
mull
lcall
mov
out
or
movsbl
push
data16
sub
dec
mulb
jmp
push
scas
and
or
fwait
cmp
mov
jecxz
sub
aad
or
jp
cli
div
out
outsl
sbb
shrb
adc
shrb
pop
movsl
pop
imul
pop
cmc
loop
es
scas
in
scas
mov
xlat
in
out
mov
int
mov
fdivrs
lock
push
faddp
sarb
movsb
icebp
sbb
adc
add
or
and
insb
sbb
cmpsb
sbb
ret
push
mov
sbb
adc
mov
mov
out
pop
or
pop
sbb
xchg
sub
out
xchg
add
and
dec
lret
loopnew
fiaddl
notb
add
jns
mov
mov
lcall
and
inc
mov
sbb
sbb
lods
popa
fnstcw
cwtl
fucomi
pop
shlb
call
insl
mov
push
inc
mov
inc
push
mov
sub
insl
xor
or
inc
dec
sub
inc
pop
pushf
mov
xlat
push
sub
rol
test
imul
push
push
xor
aaa
and
cltd
xchg
popf
adc
loopne
rcll
adc
cld
fs
in
cltd
add
out
push
ljmp
or
std
movl
and
xchg
imul
std
mov
xorb
fxch
mov
test
loopne
sarb
push
popf
cwtl
daa
inc
loop
fucom
daa
arpl
mov
xchg
jne
gs
cwtl
in
loopne
sbb
mov
or
mov
loopne
cmp
xchg
loopne
xchg
jle
xchg
mov
xchg
out
jl
adc
fisubrl
mov
push
std
jmp
les
cld
sbb
jge
sbb
fisubs
fwait
push
pop
add
lcall
inc
pop
mov
sbb
nop
lahf
mov
xor
fcmovb
mov
in
and
test
xchg
or
mov
push
jle
mov
mov
pop
stos
sub
add
mov
sbb
rcrl
lods
sbb
xchg
xor
out
add
movsl
sbb
xchg
xor
push
sub
dec
js
cmc
out
in
push
in
insl
into
push
pop
cmp
rorl
loop
mov
xor
mov
insb
repz
or
jo
imull
sub
and
loop
popa
test
lcall
lcall
daa
xchg
push
mov
in
cmp
xor
inc
mov
cmp
ret
into
scas
and
mov
ret
push
lcall
daa
stc
mov
movsb
stc
push
das
test
ss
push
dec
repz
sub
and
pop
repnz
les
aaa
pusha
or
in
push
inc
inc
out
dec
add
mov
das
in
out
repnz
add
push
lods
and
int
sbb
xor
add
rcr
addr16
xlat
push
jp
add
out
stc
pop
data16
push
leave
mov
pop
cli
push
adc
sbb
test
gs
scas
inc
loope
push
out
sub
dec
mov
stc
fistpll
fistpll
sub
inc
mov
rcrb
push
inc
imul
repz
inc
lret
or
sub
dec
jne
mov
sub
mull
inc
push
es
add
mov
xchg
sti
inc
lret
jmp
jbe
pop
test
out
sahf
sbb
sub
push
cmp
jb
dec
outsb
clc
popf
test
ficoms
inc
add
dec
stc
xchg
hlt
mov
ror
lods
fs
je
lds
jns
sbb
dec
imul
jp
xchg
pushf
popf
seta
sub
pushf
into
and
mov
push
dec
pop
lcall
inc
out
out
mov
xchg
push
cmp
scas
cmp
sub
arpl
and
inc
ljmp
insb
pop
mov
mov
test
inc
mov
or
inc
fistl
push
cmp
cmp
rorb
cmp
lea
cmp
xor
cli
movsb
test
into
xor
fistl
das
xor
pop
stos
cwtl
enter
pop
mov
mov
jg
jo
jbe
fs
out
cmp
sub
jmp
sub
xchg
inc
loope
repnz
xor
pop
aas
push
fnsave
mov
test
xchg
repz
cmp
cltd
pushf
aad
getsec
lret
mov
mov
pop
sub
inc
shlb
cmpsl
jp
inc
pop
cli
addl
push
mov
pop
mov
cs
psadbw
cmc
aam
pushf
xor
pop
mov
jae
inc
nop
cmpsb
aam
sbb
xor
and
unpcklps
in
push
xchg
pop
push
jle
iret
jno
ror
inc
faddl
lods
and
inc
mov
xor
cmp
loopne
jecxz
insb
cmc
mov
push
mov
sub
lret
or
fimull
adc
sbb
test
lahf
mov
cltd
stc
push
scas
insl
or
jecxz
xor
jle
jno
fimuls
cli
mov
mov
pusha
pop
fldenv
mov
shlb
cwtl
pop
popa
xor
xchg
cmp
movsb
adc
loope
in
in
dec
dec
push
xor
xchg
xlat
inc
outsl
jne
rcrb
rorb
mov
jge
sub
mov
sbb
adc
xchg
dec
cltd
mov
std
outsl
sub
mov
dec
sub
out
xlat
mov
mov
rcrl
shlb
push
cmp
jbe
das
adc
xchg
push
aaa
add
push
addl
mov
push
enter
int
sub
movsl
xchg
xor
repnz
mov
cmpsb
mov
push
cmp
loop
shll
dec
sub
int3
js
arpl
dec
sub
adc
mov
cltd
lds
jb
add
sbb
ljmp
xor
or
sbbb
out
or
jge
cmp
aam
shrb
push
jo
psrld
mov
mov
test
inc
or
in
jmp
or
fistl
es
insl
in
xlat
xor
fisubl
fistl
mov
popa
cmp
aad
movsl
pop
movsb
sub
mov
lahf
dec
mov
jp
mov
movsl
out
sbb
mov
mov
mov
pop
scas
cwtl
jne
repz
shll
fildl
sbb
rcrb
lahf
ljmp
mov
dec
js
popf
inc
lock
ss
test
jns
mov
idivb
xor
fs
add
sub
addr16
inc
add
fwait
incb
mov
into
dec
xchg
mov
mov
pop
push
sahf
lcall
ficomps
loopne
or
mov
dec
bound
sbb
out
rorl
or
and
mov
xor
les
xchg
adc
lret
mov
add
adc
or
mov
aaa
insb
insb
jmp
pop
popa
setl
inc
add
mov
pop
fisttps
mov
xor
xchg
repnz
dec
stos
push
fwait
cmovl
jb
daa
cmp
and
enter
cs
cmpsl
xchg
push
fcmove
push
outsb
fidivs
fdiv
loopne
imul
sub
in
jo
inc
or
cmp
pop
pop
cmp
sub
mov
jmp
dec
out
adc
push
fld
and
and
ljmp
dec
mov
mov
aas
pop
mov
fs
sbb
mov
cmc
sub
scas
dec
rcr
or
and
cmp
lds
daa
and
add
or
ds
leave
xlat
mov
add
scas
dec
push
mov
mov
sub
cltd
test
mov
jno
mov
repnz
dec
arpl
movsl
jg
xor
and
out
push
cmpsl
cmpsb
mov
rcr
dec
ds
push
stc
xor
jle
push
and
xor
sahf
pop
insl
pop
pop
cwtl
push
sbb
cmpb
sbb
rolb
outsl
or
pop
and
jge
pop
and
adc
test
add
bound
es
lcall
xor
push
dec
adcl
jmp
and
sub
cltd
add
bound
inc
rcrl
in
ljmp
fsubl
js
and
xchg
inc
es
movsl
pop
push
dec
cmpsl
mov
popf
push
adc
sti
sub
into
dec
fnstcw
es
aaa
xchg
inc
and
cmpsl
cld
mov
jge
push
mov
pop
cmc
cwtl
jl
ljmp
jns
imul
outsb
or
push
add
cwtl
adc
test
sub
dec
sahf
and
popa
scas
je
mov
lds
and
out
lods
jns
fimull
adc
add
and
data16
cld
daa
lcall
or
lret
sbb
lock
movsl
add
imul
adc
dec
xor
push
enter
cmc
lock
loopne
fcmovnu
pop
xor
sbb
dec
cmp
mov
xchg
add
and
dec
sbb
add
sbb
loope
ficoml
sub
out
int
add
sub
inc
hlt
and
jl
mov
and
mov
cmp
rcrl
pop
fstl
inc
js
repnz
add
or
xor
xor
adc
xchg
mov
aas
fbstp
sbb
jbe
mov
xor
ret
jmp
jae
bound
les
leave
push
jae
rcrb
js
mov
cmp
rcrb
repnz
jae
pusha
sarl
mov
xor
mov
cs
lods
dec
outsb
test
pusha
inc
add
xchg
lea
les
push
sub
push
ror
pop
jb
jns
gs
sbb
xlat
dec
xor
xor
addr16
sahf
repz
das
shr
inc
test
int
cmpsl
jo
sub
pop
mov
dec
dec
mov
scas
popf
rep
aas
bsr
pop
xchg
xorl
into
mov
ja
subb
mov
loope
jbe
xlat
or
mov
out
push
outsl
sti
mov
push
notb
mov
push
mov
pushf
xor
std
movl
imul
jb
loopne
mov
and
adc
mov
xchg
xchg
fldcw
jle
flds
inc
mov
pushf
pushl
jmp
les
outsl
fdivrs
test
or
subb
xchg
jbe
jnp
es
pop
inc
mov
addr16
jle
jecxz
or
pusha
inc
cmp
test
or
imul
sub
mov
gs
and
mov
fbstp
adc
lods
icebp
frstor
jg
xor
add
scas
sbb
int
into
pop
push
into
cmp
popa
mov
jecxz
sbb
mov
lahf
mov
es
outsl
in
pop
fistps
and
stos
lahf
add
xchg
adc
xchg
icebp
pop
fistpl
inc
xor
rcrb
insl
push
test
lods
sarb
mov
cs
xor
or
iret
outsb
cmp
xchg
lods
cs
cs
sub
test
jp
push
pop
cltd
adc
icebp
stos
inc
mov
xchg
sbb
pop
fcompl
clc
inc
jbe
jmp
test
mov
push
das
add
xchg
ss
and
adc
mov
movsl
pop
aaa
mov
mov
pop
cli
jecxz
insb
out
add
and
andl
or
loop
or
and
jbe
rorb
aaa
dec
cltd
pop
xchg
xchg
xor
test
sbb
xor
std
adc
lret
in
or
xor
mov
sbb
pop
fcmovnbe
xor
movsb
add
jmp
mov
es
and
pop
flds
cmp
xor
and
int3
push
mov
bound
loop
adc
jmp
lock
fcompl
negl
jnp
xor
sub
xor
ja
scas
leave
xor
repnz
rep
mov
inc
push
in
lock
xor
aaa
fucomip
jbe
mov
enter
xor
add
inc
xchg
dec
cmp
rcll
inc
and
subb
mov
stos
int3
lods
sti
lea
jbe
xor
add
xor
movsl
stos
das
inc
mov
push
push
add
push
xor
and
pop
daa
cmp
inc
add
dec
mov
shlb
shl
aas
into
mov
add
xchg
repnz
inc
cmp
je
ds
xchg
inc
enter
cltd
add
scas
xor
dec
scas
mulb
adc
push
aas
std
xchg
sbb
adc
and
cltd
pop
ds
fistps
repz
andb
sub
sar
cs
fld
fucompp
and
pop
push
test
push
adc
xor
mov
xor
push
and
lods
mov
addl
adc
or
iret
fidivl
int
lea
inc
test
add
nop
aad
divb
xor
loope
cmpsl
sbb
sbb
jbe
repz
nop
mov
add
ret
push
or
out
hlt
int
sub
lea
loope
jl
ret
fbstp
cmp
dec
jo
cmp
scas
mov
sbb
aad
int
imul
mov
lods
fstpt
sub
leave
repz
rcr
dec
dec
adc
nop
inc
jg
orl
adc
mov
out
scas
xor
mov
pop
push
sub
xchg
cmp
inc
xor
ds
mov
pop
in
push
adc
mov
or
test
adc
or
in
ss
or
push
xor
testl
sbb
out
fdivl
faddl
imul
fs
cli
mov
dec
sbb
pop
hlt
mov
xor
xchg
inc
ret
fld
in
pop
repnz
jo
rep
dec
fisttps
mov
cld
repnz
push
push
dec
jns
xchg
adcl
ja
push
jne
lahf
add
ja
xchg
push
pusha
adc
divl
and
lods
push
mov
scas
pop
mov
sbb
loop
rclb
fadds
adc
es
push
ficompl
pop
adc
mov
pop
add
sahf
adc
fistpll
mov
push
repnz
xchg
loopne
das
cmp
push
dec
loope
mov
aaa
in
push
in
cld
push
rcrb
cmp
jp
arpl
stos
add
lcall
mov
out
cmp
ja
mov
pop
cmp
daa
jnp
add
aaa
mov
pop
ret
sub
mov
xlat
nop
mov
popf
enter
fisubrs
loop
mov
mov
cmp
cltd
sbb
sub
inc
stos
and
sbb
sbb
mov
add
pusha
inc
cwtl
push
adc
jns
loop
mov
jge
psadbw
push
xchg
push
add
sbbl
pop
sarb
jb
dec
fdivs
cmp
dec
out
pop
pop
sbb
inc
stos
outsl
stos
dec
add
not
js
pop
jb
sahf
xchg
and
ret
xchg
push
mov
adc
xor
mov
mov
call
cmp
sub
pop
jg,pt
xchg
xor
leave
inc
mov
mov
and
push
pushf
test
add
mov
cmp
fwait
in
mov
xor
stc
cmp
pop
rolb
lock
dec
fwait
out
cli
cmpsb
xor
lock
xchg
mov
pop
pop
cli
jg
ret
cmpsb
pop
in
adc
jae
dec
sbbl
pop
and
pop
xchg
adc
repz
int
jp
xor
int
bound
push
xor
or
mov
and
push
mov
mov
roll
aad
out
inc
jmp
sub
jge
dec
sbb
pusha
es
aaa
adc
mulb
sbb
push
sbb
out
add
flds
pop
idivb
pop
pushf
cmpsb
out
mov
mov
sarb
and
sarb
mov
pop
aam
das
cmp
xor
jnp
cmp
pop
mov
dec
sub
pop
lock
sti
pop
in
push
aaa
mov
pop
mov
xchg
testb
mov
mov
cmpl
push
xor
es
loop,pn
shll
sub
push
push
jp
sarl
xlat
sub
jge
std
xchg
mov
and
add
sbb
movsb
xor
sub
jl
aas
jle
fsubl
fmull
repnz
adc
sbb
jno
std
enter
fs
and
mov
inc
mov
sbb
sti
add
fidivs
jne
pusha
div
subb
lahf
jmp
jl
popl
dec
in
pop
dec
inc
inc
icebp
inc
lret
add
xchg
mov
je
repz
fistps
push
outsl
outsb
jl
or
ds
dec
dec
stos
fstpl
sbb
sub
insl
mov
in
sbb
mov
sub
push
lock
pop
lods
popf
sub
xchg
cwtl
outsl
push
jmp
lds
jle
jno
mov
and
imul
loop
pop
pop
sti
popa
shl
mov
je
add
push
mov
std
cmp
test
or
mov
std
arpl
cmp
pop
cmp
ret
fxch
sbb
adc
push
lea
cmp
sbb
and
js
pop
js
cmpsl
dec
dec
or
pop
cltd
mov
sbb
jae
push
or
es
inc
shl
out
loop
int3
lds
lods
inc
in
mov
push
push
cld
xchg
les
nop
ljmp
inc
mov
sub
cmpsb
xor
push
dec
push
xchg
xchg
jb
jle
inc
lods
push
dec
out
jo
xchg
or
or
dec
jne
dec
inc
pop
jmp
xor
cli
mov
lock
push
pop
dec
repnz
and
popa
ss
mov
xor
and
idivl
cmp
in
sbb
cli
jae
add
pop
orb
shll
test
mov
xor
and
xchg
repnz
and
imul
addb
shrb
roll
mov
nop
and
push
lea
lcall
sub
mov
dec
fsubl
call
sbb
sbb
mov
in
test
jno
or
ljmp
adc
jb
xor
mov
xor
cmp
lods
je
enter
pop
gs
adc
sbb
scas
lock
sbb
mov
xor
ljmp
and
cmp
inc
lods
mov
aad
fwait
inc
pop
cmpsb
adc
xchg
xchg
mov
mov
mov
pop
xchg
rclb
mov
bound
push
add
leavew
mov
jo
jmp
popf
adc
and
pop
out
xor
icebp
dec
int
dec
push
sti
out
std
xor
pop
adc
mov
pop
scas
mov
ljmp
xchg
les
aam
adc
adc
cld
mov
mov
enter
push
xchg
jbe
loope
mov
stc
add
mov
adcl
adc
adc
xchg
pop
mov
pop
push
adc
adc
mov
jne
pop
push
faddl
cltd
pop
or
and
and
in
shlb
notl
jp
mov
rol
adc
repnz
mov
xor
negl
std
lret
mov
push
pop
dec
aaa
test
enter
js
push
mov
aas
cmp
or
xchg
roll
lahf
ds
testb
jns
hlt
cltd
ret
push
mov
jl
fistl
jo
jns
mov
jo
lret
cmp
cmp
pop
icebp
call
aas
pop
push
cs
shl
sbb
fcomps
mov
and
or
stos
inc
cmp
cmp
mov
xchg
sub
sti
mov
push
or
dec
sub
ja
xchg
add
scas
insb
aad
fldenv
cwtl
inc
or
sbb
test
lds
sti
cmp
loope
adc
lret
stos
hlt
andl
rclb
mov
cmp
mov
jbe
aam
dec
insl
inc
ret
int
inc
lock
mov
clc
into
cwtl
es
adc
sub
shlb
push
push
dec
push
or
std
mov
mov
mov
mov
aas
insb
sti
add
in
fs
push
negb
inc
cli
fldenv
sub
ljmp
or
push
stc
mov
push
fadds
or
add
out
js
loope
int3
into
adc
xor
pop
jnp
mov
dec
mov
cmc
dec
icebp
jl
rorl
mov
lahf
push
pop
pop
inc
or
xchg
cwtl
mov
jnp
cmpsl
test
or
ss
or
pop
loop
lods
pop
inc
xlat
add
adc
mov
mov
insb
sbb
leave
rorb
sub
mov
mov
repnz
add
lock
cmc
imul
or
arpl
mov
lds
outsb
dec
gs
pop
sub
in
mov
cmp
fcoms
loopne
ret
inc
aad
dec
mov
mov
lret
out
das
inc
movsl
out
push
ret
mov
mov
jg
pushf
gs
mov
pop
orl
lock
jns
iret
faddp
jae
inc
lret
push
mov
movsb
cmc
inc
mov
pop
fildl
int
cs
xor
sbb
xchg
push
jg
cmp
call
pop
push
xor
mov
movsl
lret
pop
mov
dec
push
insl
cltd
pop
jp
mov
cld
mov
rclb
fsubr
outsb
jmp
sbbb
xor
insb
insb
andb
mov
adc
pushf
ret
mov
sbb
pop
movsb
sub
pushf
cmp
lret
mov
pop
js
stos
sub
or
int3
mov
cwtl
mov
sbb
push
scas
push
fisttps
add
push
je
es
jg
dec
dec
cmp
dec
fs
jle
leave
mov
lea
arpl
je
pop
lret
hlt
xlat
xchg
in
cs
sbb
out
aas
movsb
push
std
mov
aas
xlat
js
fwait
pop
out
cwtl
mov
push
mov
mov
clc
sarl
dec
xor
jmp
sti
pop
cli
jb
out
dec
test
fs
sub
jno
adc
xlat
lahf
bound
jbe
mov
call
fs
decb
aas
inc
icebp
movsl
std
mov
imul
js
inc
lret
pop
testb
fdiv
lods
xor
push
call
aas
scas
dec
int
adc
mov
adc
push
cltd
jge
loop
stos
add
xor
lahf
lods
ds
mov
sub
loopne
je
icebp
clc
sub
ss
repnz
mov
cmpsl
mov
pop
and
loope
ret
mov
pop
outsl
loope
sub
sub
ficompl
test
sub
xchg
in
mov
fisttps
lock
in
push
loopne
aam
sti
lods
into
outsb
sub
adcl
push
out
push
fcmovnb
push
lcall
lret
das
jnp
roll
hlt
cmp
std
pop
imul
jno
cmpsl
pushf
std
int
mov
or
nop
mov
mov
adcl
and
outsb
xchg
out
fiadds
movsl
dec
sub
and
aas
push
stc
fcoms
inc
imul
out
outsb
icebp
inc
pop
mov
and
lock
rcll
lods
mov
sbb
cmp
cltd
add
fs
pop
dec
inc
bndstx
or
sarb
pop
pop
mov
push
movsl
inc
repnz
aad
jl
fcmovbe
scas
das
jecxz
fcoml
clc
mov
push
push
mov
mov
leave
out
mov
cwtl
pop
pop
test
popa
pop
test
mov
jle
pusha
repnz
std
mov
add
imul
test
mov
inc
pop
jecxz
es
pop
sub
std
js
scas
inc
testb
shlb
shlb
stos
std
pop
scas
cmp
in
mov
sarl
jmp
sub
mov
pusha
leave
xor
les
out
push
aad
loope
sbb
cwtl
pop
mov
adc
sahf
xchg
adc
jb
dec
xor
add
pop
dec
inc
nop
inc
mov
mov
and
sbb
fnstenv
mov
in
sbb
stos
push
dec
fdivrl
inc
adc
out
cmp
inc
addr16
out
ss
mov
ljmp
xor
add
stc
repnz
pop
sub
ds
ficompl
scas
sbb
icebp
cli
cmc
shl
loop
mov
xchg
jb
add
jb
hlt
pop
int3
cmc
shll
lods
mov
cmp
icebp
decl
mov
sbb
cli
fucomip
sub
xchg
loope
inc
je
xchg
popa
ljmp
pushf
cmp
andl
sbb
jbe
cwtl
mov
sub
sbb
mov
cmp
dec
dec
cli
jns
jbe
addb
imul
adc
mov
das
data16
dec
fcomps
adcl
xchg
stos
fistl
push
ljmp
int3
arpl
rorl
lret
pop
fnstcw
mov
je
in
pop
pop
xchg
jo
mov
lret
insl
out
mov
bsr
rorb
loope
xchg
mov
out
mov
pop
dec
mov
mov
add
push
xor
dec
ljmp
sbb
mov
jno
das
mov
push
lret
pushf
push
xor
mov
or
les
jns
aad
or
xor
insl
sbb
fsub
sbb
movsl
jbe
call
popf
outsl
call
xor
adc
xchg
push
mov
movsb
or
or
sbb
fdivrs
or
js
mov
aam
stc
or
in
ficoms
mov
int3
popa
movsb
mov
adc
mov
mov
and
mov
inc
and
xchg
xor
sub
imul
push
sub
js
ret
adc
push
inc
cmpsl
aad
push
push
mov
popa
clc
mov
movsl
adc
lds
jl
mov
mov
mov
divl
dec
sub
mov
inc
cmp
ret
movsb
repz
sti
loop
stc
mov
xchg
dec
jo
unpcklps
cmp
stos
push
repz
test
sbb
imul
aam
incb
mov
leave
xchg
jl
mov
ret
mov
sbb
jp
add
stos
loope
sbb
pusha
pop
dec
loopne
xchg
rorb
push
mov
mov
in
subb
xlat
xchg
dec
mov
repz
dec
push
into
mov
adc
xchg
pop
dec
popa
dec
or
jbe
or
pushf
jecxz
adc
sbb
xchg
mov
iret
jb
in
mov
xchg
dec
clc
push
cmpsl
mov
xchg
cmpsl
pop
cld
roll
dec
inc
cmp
push
sbb
fidivrl
ret
jmp
jo
add
and
jae
cmp
mov
shrb
shll
scas
inc
mov
mov
nop
ljmp
rolb
push
jmp
sub
sti
inc
aam
call
aaa
imul
push
cmp
cmp
arpl
repz
pop
jle
add
push
mov
dec
push
add
or
dec
repnz
and
xor
or
adc
ficoml
push
dec
mov
adc
jns
jle
push
xchg
sub
test
fistl
or
in
xchg
icebp
sti
jge
roll
add
in
dec
lods
mov
ret
sahf
lds
cmpsb
cmpsl
push
outsl
adc
jp
inc
sbb
push
in
lret
rolb
pop
lahf
inc
jge
sub
fadd
cmp
in
push
les
mov
cmc
xchg
cwtl
test
jne
inc
mov
hlt
imul
cmp
mov
or
cmp
dec
inc
push
lods
mov
fmulp
push
mov
xchg
mov
sbb
lods
dec
pop
or
and
mov
mov
and
jp
pop
dec
cmp
rcrl
movsl
pop
jp
incl
adcb
pop
test
les
push
or
mov
and
push
out
aaa
ds
pop
mov
xor
pop
add
mov
ret
mov
cld
repz
mov
inc
push
jmp
pop
pop
lock
inc
push
jg
in
inc
pop
inc
std
mov
mov
lcall
xchg
insb
jb
xchg
lods
test
insl
scas
cs
psraw
nop
cwtl
lock
insb
pop
popf
es
out
mov
cli
pop
bound
outsl
ja
cmp
push
and
movsb
push
lods
pop
xor
into
jbe
movb
push
ja
mov
add
fidivrs
pop
inc
jnp
cli
loop
sub
arpl
or
shrl
inc
adc
pop
jbe
clc
outsb
mov
cmp
mov
arpl
jl
add
out
mov
mov
std
les
stos
sbb
inc
lock
mov
xchg
loopne
ret
mov
mov
enter
xor
ret
fidivrl
mov
mov
rol
movsb
into
cs
xchg
inc
test
repz
add
fimull
fldt
je
xchg
jb
test
adc
int
in
iret
fcomip
out
insb
add
aaa
out
insb
mov
adc
dec
fildl
lods
jbe
lods
lea
add
popf
adc
sbb
leave
adc
loope
or
or
popa
or
popa
les
inc
adc
xor
movl
add
inc
repz
push
stos
icebp
inc
movsl
insb
jo
outsl
push
dec
jle
adc
fstpt
jnp
fcmovne
gs
sbb
sarl
mov
push
jle
or
leave
imul
subb
mov
xchg
mov
xchg
shlb
cwtl
imul
xchg
mov
mov
rcrl
rcrl
lret
std
enter
bound
icebp
add
inc
movsl
mov
mov
pop
inc
mov
int3
andb
push
mov
call
mov
neg
sub
push
add
loope
cvtpi2ps
inc
jbe
mov
lahf
inc
in
inc
xchg
jbe
pop
cmp
cmp
stos
das
lahf
mov
sub
or
push
cmp
mov
lahf
js
inc
fisttpl
mov
push
lds
in
pop
cwtl
mov
xchg
dec
out
inc
lahf
sbb
jl
sbbl
mov
and
loope
add
lea
iret
pop
or
das
or
sub
sbb
mov
lea
jp
orb
call
inc
push
adc
jge
cld
filds
std
int
cmp
arpl
aaa
cmp
push
push
ljmp
test
lcall
cmpb
rcrl
out
push
push
or
mov
xchg
cmp
subl
dec
jno
push
das
adc
and
fisttps
jne
pop
jle
out
fst
mov
mov
fisttpl
sahf
sbb
test
mov
adc
lcall
fidivl
or
mov
loope
jl
dec
stos
xchg
insl
mov
cmp
mov
xor
and
fisttpll
dec
lret
mov
ja
pop
test
daa
sub
adc
or
loope,pt
cltd
int
adc
add
xlat
xchg
cmp
sub
enter
mov
mov
test
cli
jge
sub
dec
sbb
rcrb
pushf
pop
sbb
jnp
mov
sar
nop
movsl
cmp
aad
mov
repz
jnp
ja
dec
repnz
mov
call
std
ret
xlat
sub
aaa
dec
xlat
xchg
pop
ds
pushf
push
nop
sbb
rolb
out
insb
sbb
mov
andb
xchg
nop
in
lods
push
shll
lret
or
movsl
nop
cli
ret
inc
cld
stos
in
lcall
inc
push
xchg
lcall
ret
aad
and
pop
sub
stc
das
mov
or
stos
repnz
or
into
js
sti
push
inc
mov
or
mov
mov
call
arpl
aam
sbb
xchg
push
pop
dec
repz
sbb
mov
xchg
shl
adc
jbe
jnp
cmp
out
sub
push
repnz
stos
outsl
pop
rcrb
sti
mov
aam
aad
xor
xor
jb
dec
or
pop
mov
in
lret
es
scas
pop
fimull
call
pop
fnstenv
popf
adc
js
iret
hlt
rcr
mov
popa
push
roll
idivb
add
jle
adc
leave
aas
jmp
xchg
lret
jmp
inc
mov
mov
jg
xor
xchg
xorb
adc
pusha
gs
cwtl
mov
jb
xchg
fwait
mov
mov
push
fs
xchg
out
outsb
mov
sub
pop
jecxz
lock
setne
jae
popf
mov
mov
or
sbb
cwtl
mov
nop
popf
mov
inc
mov
in
pop
leave
xchg
dec
adc
xchg
orl
mov
push
mov
shll
scas
ja
adc
or
sub
movsb
push
fstpl
sbb
push
and
daa
mov
cmc
bound
imul
cwtl
ret
xor
fs
pop
call
pop
inc
lea
adc
jp
mov
lods
jmp
fincstp
imul
inc
inc
mov
je
ds
mov
mov
dec
ds
dec
xchg
repnz
stos
test
rcr
cmp
loope
loop
cwtl
clc
push
jge
les
mov
lock
divl
pusha
adc
or
mov
sub
jne
sub
adc
jp
lods
fisubs
jb
bound
addr16
hlt
dec
and
mov
fsub
sbb
dec
aaa
cltd
sarb
cmp
or
xchg
or
pop
repz
pop
adc
and
pop
clc
mov
dec
xchg
clc
xchg
sahf
mov
inc
repnz
pop
mov
sub
mov
addr16
push
test
scas
pop
les
push
pop
mov
fdivrl
mov
or
cmp
sub
cs
mov
adc
sbb
sbb
mov
mov
sub
sbb
push
jnp
cmp
adc
bnd
movsl
jns
insl
popa
shrl
mov
push
fiaddl
shl
loopne
js
int
lock
call
push
fadd
ljmp
inc
inc
push
aam
lahf
cmpsb
cmc
adc
mov
bound
add
sbb
pop
and
ljmp
iret
clc
out
jg
and
stc
cmpsb
mov
push
adc
xchg
aaa
repz
lahf
fisttpll
pop
test
lods
pop
push
insb
je
fwait
inc
inc
xlat
std
xor
dec
bnd
shll
imul
stos
lea
test
dec
xor
pop
dec
xor
out
push
lods
sbb
sahf
push
or
jmp
add
cmp
cmpsb
sub
push
incl
jmp
push
inc
add
in
ss
jle
xor
ds
lcall
sub
sub
nop
lcall
outsl
fdivrs
mov
xorb
mov
dec
and
dec
cs
xor
push
int3
inc
mov
mov
addr16
leave
pop
mov
inc
cmpsb
mov
outsb
mov
test
adc
xor
mov
xchg
rep
sti
vpshab
outsl
pop
adc
cmp
jp
add
sbb
mov
push
fsub
leave
fnsave
repnz
jge
ss
xchg
stos
mov
push
inc
inc
or
and
pop
addps
daa
lcall
leave
mov
jmp
mov
loopne
cld
daa
xor
gs
pushl
imul
inc
cmc
rclb
sub
and
sbb
or
push
lock
pop
push
gs
sbb
xor
mov
je
lods
out
lcall
ss
int3
pop
es
hlt
cli
push
jg
add
lahf
dec
jo
lcall
test
xchg
popa
adc
ret
inc
jo
mov
in
mov
test
add
loope
rorb
rclb
dec
push
or
and
mov
je
mov
push
out
sbb
cmpb
andb
in
xor
mov
mov
sbb
data16
pop
lods
scas
inc
push
inc
shll
sbb
rclb
shrl
sbb
fsubrs
mov
xlat
push
xor
adc
adc
bound
dec
mov
add
insl
xchg
in
jo
cmpsl
xchg
inc
and
icebp
or
sbb
cmpsb
js
sub
idivb
fdivl
push
nop
ljmp
push
test
xchg
and
into
sbb
sbb
xor
ret
jl
or
arpl
ss
mov
push
rorl
bound
in
cmp
pusha
imul
mov
stos
pop
insb
cltd
cwtl
clc
sahf
les
loop
jb
sub
scas
test
xchg
scas
movl
push
cmpsb
xchg
shlb
ljmp
jae
push
popl
je
int
xorl
cmpsb
clc
push
jae
repz
out
jp
jl
adc
fstl
jae
jmp
test
or
shlb
sahf
call
repnz
pushf
lret
cmp
nop
outsl
pop
jg
xlat
lret
mov
push
fcmovnu
in
cli
in
pushf
sub
mov
add
call
movsl
ss
sub
jns
inc
lea
hlt
xchg
mov
push
sub
addr16
inc
and
fidivrs
xor
add
ljmp
ss
pop
inc
and
jne
cmp
gs
decl
cmc
aam
mov
je
mov
fcomp
cmp
je
std
xor
pop
imul
inc
xor
loop
mov
cmp
aad
fstpl
in
dec
cwtl
mov
mov
and
add
sub
fbld
and
dec
xor
repnz
stc
in
js
scas
sub
inc
mov
jmp
jb
cmp
stc
flds
inc
std
ds
daa
add
or
fcmovnb
jb
jp
mov
outsl
jmp
jmp
mov
cmp
mov
aad
push
mov
lds
ret
ret
testb
mov
rcll
sarb
dec
pop
push
jnp
push
add
jae
jp
stos
mov
pop
jne
ret
xchg
lds
cmpsb
imulb
test
and
in
imul
sbb
xchg
cwtl
aas
mov
inc
pop
or
mov
cmova
cmp
adc
ja
dec
out
jnp
sub
cmp
sub
cmpsb
jp
mov
aad
xchg
push
por
loope
das
mov
nop
mov
lret
mov
pop
pop
rcll
adcb
cmp
sahf
push
xchg
call
into
push
sub
pop
push
adc
shlb
mov
and
xchg
cltd
clc
pop
cmp
pop
jle
call
mov
cmpsb
adc
cwtl
fcmovnu
lods
fldlg2
xor
sub
jge
sbb
hlt
or
jnp
pop
and
push
add
loop
incb
pop
pop
sbb
fld
int
adc
add
xchg
ds
fs
jmp
enter
xor
pop
mov
popf
and
mov
dec
adc
pop
outsl
cmp
jae
sti
pop
push
push
adc
jns
nop
mov
or
ret
hlt
movsb
xchg
sbb
inc
xchg
adc
fidivl
push
std
ret
jbe
shlb
sub
or
insb
adc
sub
adc
jbe
sti
lock
push
fwait
ret
cmp
adc
test
xlat
daa
and
in
mov
or
mov
in
inc
pop
mov
loop
pop
jns
dec
mov
cmpsb
jns
dec
sbb
and
push
aas
mov
aas
cmc
arpl
sub
cli
cltd
aam
cmp
xor
dec
lock
test
movsl
dec
ficompl
jmp
out
addr16
add
out
pushf
shll
inc
cmp
repnz
loop
fstpl
pop
shll
xchg
mov
sbbb
pop
dec
mov
sti
inc
or
mov
leave
pop
mul
mov
sbb
leave
mov
sbb
inc
cmp
enter
pop
cmp
cmpsl
cmp
push
rcl
aam
into
sbb
or
mov
ret
dec
adc
jae
cmp
jge
test
cmp
jb
dec
inc
xor
ror
pop
ja
test
js
sbb
ret
insb
mov
ljmp
xor
xor
je
pop
xor
fsubrs
aam
push
inc
mov
xor
xor
ss
mov
xor
scas
mov
daa
int
sahf
ja
pop
ljmp
imul
rcl
addr16
leave
out
enter
pop
mov
fucom
sahf
lock
mov
ljmp
lods
cmc
in
jl
jns
movsl
push
les
sbb
push
xchg
sub
inc
lahf
jle
js
mov
pop
rorl
cwtl
mov
push
sarl
pop
mov
test
imul
sbb
mov
jecxz
pop
xor
pushf
rep
mov
aaa
pop
mov
ljmp
mov
xor
mov
xchg
pop
inc
adc
xor
jo
cmp
cmpsb
int
mov
cmpsb
mov
nop
lret
pop
mov
lds
call
mov
cmp
lret
jne
dec
sub
cld
mov
xorb
int
out
or
movsb
xor
or
push
dec
xor
lahf
mov
dec
pop
loop
mov
adc
or
mul
cmp
jg
je
std
pop
rorl
int3
imul
out
cmp
addl
bound
pop
jl
xchg
inc
push
insb
sbb
fdivl
adc
jge
dec
add
es
rorb
cmp
std
cmp
jp
xlat
or
or
fimuls
enter
pop
divl
outsb
pop
movsb
dec
fstpl
sbb
out
sbb
push
add
mov
cld
mov
jns
cwtl
fs
xchg
and
arpl
pop
adc
pusha
jo
push
push
mov
jb
stc
cwtl
jno
or
push
xorb
xlat
in
outsb
in
gs
and
inc
fists
adc
mov
add
les
mov
out
lds
in
inc
icebp
sbb
sbb
lock
addb
imulb
stos
int
adc
rcll
add
mov
jg
xchg
mov
gs
loop
dec
push
jg
mov
mov
in
cmpsb
sahf
cld
aad
shrb
cmp
cmp
stos
mov
stos
and
dec
cltd
sub
dec
dec
inc
shll
scas
fmul
fwait
testl
or
ljmp
adc
fistl
dec
data16
xor
jmp
pop
sub
push
and
mov
insb
loope
aas
push
sub
outsl
lahf
mov
das
jbe
gs
add
iret
cmpsb
cmp
jnp
sub
dec
push
jg
lcall
pop
sbb
leave
xchg
pop
sahf
dec
add
leave
in
scas
testb
or
add
push
test
jne
or
test
and
sub
jecxz
mov
xchg
push
mov
rcl
push
imul
test
int3
add
mov
inc
push
mov
ret
bound
push
xor
mov
push
inc
mull
in
rclb
ja
xchg
fsubrs
xor
adc
dec
inc
call
loop
cmpsl
cmpsl
or
pusha
scas
pop
or
push
lods
push
scas
loope
decb
sub
cld
scas
inc
pop
push
push
adc
mov
dec
jmp
push
sbb
or
fnstenv
pop
xor
faddp
jmp
aad
andb
jne
enter
scas
inc
clc
mov
cld
mov
bound
mov
and
xor
xlat
xchg
mov
fstps
repnz
fucomp
pop
sub
in
xchg
in
inc
cltd
push
sub
out
shrl
stos
hlt
adc
movsl
cmpsl
sahf
jecxz
mov
sbb
lret
mov
std
add
xchg
cmpsl
cmc
add
sbb
cltd
cmpsl
loopne
mov
loop
inc
push
sbb
insb
loopne
sub
push
xchg
xor
stos
jns
sbb
ss
mov
das
imul
push
call
mov
lea
rcll
sub
inc
movsl
lret
test
sbb
das
das
xchg
xchg
test
pop
jg
enter
in
movsl
enter
mov
les
test
iret
pop
pop
cmpsb
or
xchg
fidivs
pop
mov
jo
pushf
pop
idivl
mov
hlt
inc
idivb
insl
incb
daa
inc
mov
mov
leave
sub
aaa
push
or
mov
jmp
shlb
nop
ja
loope
lds
or
test
or
and
or
or
sbb
insl
enter
jecxz
and
xor
jl
push
out
in
mov
inc
xor
and
mov
sub
mov
cmp
sbb
pop
push
lret
or
mov
add
xor
xor
pusha
cs
sub
add
or
bound
or
ret
mov
out
sti
test
fucomi
cmp
push
mov
imul
adcl
jg
jo
xchg
dec
cmp
sub
dec
aam
movsl
ljmp
push
push
or
inc
xchg
add
pop
aad
jns
cmp
push
add
jno
jns
lret
lods
loopne
sbb
sbb
ljmp
dec
mov
sti
ljmp
inc
cmp
dec
decb
push
arpl
aaa
enter
push
add
into
aad
sbb
scas
std
adc
gs
scas
jl
arpl
xor
popf
sub
xor
sub
outsb
stos
inc
add
mov
add
dec
in
or
cmpsb
ja
loope
push
cmp
pop
and
pop
fisubs
loope
push
xchg
jbe
xor
push
mov
ret
jb
sahf
addr16
in
jno
es
mov
nop
cltd
dec
dec
dec
xor
lret
sahf
push
sarb
loopne
ret
lea
inc
aam
data16
jge
push
cmp
out
mov
gs
push
inc
test
lret
add
cmp
cwtl
xchg
dec
adc
cmp
xchg
out
push
sub
adc
xchg
jnp
into
push
xchg
adc
inc
mov
inc
hlt
mov
sub
xor
lock
in
dec
stc
arpl
cmp
lods
hlt
ret
cmp
inc
mov
adcb
cmp
insb
or
gs
lds
pop
fdivs
mov
popa
jp
jns
mov
mov
lahf
sub
in
int
jge
mov
push
shlb
and
adc
inc
mov
and
insl
add
and
inc
popf
stc
std
mov
clc
fwait
mov
xorb
push
jbe
insl
cld
cltd
pop
jb
dec
sarb
push
xchg
and
arpl
pushf
lret
pop
rcr
sti
insb
and
movsl
cmpsb
xchg
lret
push
pushf
push
jle
sub
dec
pop
mov
aam
or
pusha
incb
loop
push
push
sub
mov
repz
and
jno
mov
jno
pop
roll
aaa
addl
adc
insb
jae
sub
mov
inc
dec
mov
pop
push
imul
rorb
mov
sub
shl
lds
xchg
les
into
sahf
sahf
testl
dec
cmp
add
pop
jecxz
jp
icebp
add
mov
xchg
hlt
cmpsb
sbb
sahf
xor
aaa
pop
fdivrl
xor
xor
cmp
adc
adc
jno
xchg
mov
push
test
in
sarb
idivb
stos
xchg
icebp
lahf
pop
inc
and
cwtl
adc
std
test
mov
mov
or
mov
lret
add
push
pusha
ja
dec
dec
pop
push
fcomip
repnz
fcmovnu
lods
test
xlat
push
sti
mov
push
jp
cwtl
jb
outsl
push
dec
cltd
popf
out
pop
roll
in
or
xor
lods
aam
ret
jmp
mov
sbb
lods
jnp
adc
jmp
outsl
pop
jp
and
lea
pop
dec
fists
sbb
dec
test
push
dec
fptan
push
mov
cmp
cwtl
loopne
mov
push
std
sub
inc
or
and
int3
inc
mov
fucomi
dec
arpl
bound
inc
lcall
adc
adc
mov
dec
jle
filds
bound
roll
xchg
sub
sahf
imul
movl
push
loope
repnz
add
fnsave
mov
rorl
and
xor
jb
pop
sub
stc
cmp
add
insb
and
call
inc
adc
mov
jns
mov
lret
jg
sbb
push
movsl
pop
adc
sub
repz
pop
dec
xchg
out
lret
es
popa
sbb
add
ss
dec
push
add
dec
movsl
add
fdivrs
jno
push
adc
xchg
sbb
ja
mov
pop
xchg
and
popa
jb
clc
adc
push
int
repz
inc
cmpsl
cltd
movsl
scas
mov
xchg
xchg
rcr
inc
mov
mov
fwait
jno
les
xchg
inc
dec
call
nop
cs
pop
sbb
daa
sbb
pop
mov
mov
jbe
sbb
mov
push
mov
cmc
or
pop
sbb
aas
or
shlb
push
into
push
mov
fimull
jecxz
repnz
adc
xchg
pop
pop
sarb
inc
stos
test
imul
xchg
inc
mov
jmp
sbb
add
std
aam
ja
mov
arpl
mov
mov
push
loop
pop
mov
les
repz
cwtl
jb
and
jo
and
inc
insl
pop
mov
cmc
pop
ret
jo
in
lds
xor
inc
and
outsb
pop
xlat
enter
add
hlt
sti
xor
dec
scas
testb
sbb
jg
pop
add
adc
pop
and
scas
fcom
jp
gs
xchg
fadds
pop
xor
pop
and
mov
and
dec
movb
xor
push
lret
lret
inc
sbb
adc
and
pop
inc
pop
test
test
mov
or
and
and
ljmp
mov
add
pop
popa
roll
insl
test
mov
push
mov
lock
add
idiv
cltd
mov
jne
fisubs
sub
int
inc
dec
fwait
cli
add
cmpsl
sarl
mov
push
inc
in
movsb
jne
sbb
outsl
pop
test
pusha
push
into
scas
enter
lds
js
and
mov
insb
xchg
xor
loop
aad
inc
loope
jb
inc
add
sub
cmp
cmpb
in
inc
push
aaa
fcomps
jb
sbbb
dec
bound
sti
push
jle
adc
push
dec
jmp
aaa
jl
call
adc
lcall
jl
out
xchg
popf
mov
aad
or
mov
shr
insl
sub
push
dec
cmp
leave
mov
inc
jo
loope
lret
inc
scas
dec
jmp
cmp
and
jns
and
mov
aaa
jb
xor
aas
fsin
lahf
cli
icebp
and
jo
gs
pop
or
pop
adcb
inc
ss
push
and
inc
fisubrs
xchg
mov
mov
scas
test
lea
fimull
aas
js
mov
cmp
mov
mov
mov
add
into
ret
test
sbb
xchg
clc
imul
or
faddp
cmp
imul
das
jl
das
adc
stc
sti
xor
and
aaa
mov
sub
out
add
mov
cmpsb
push
mov
xor
out
je
pop
cmp
ret
mov
mov
rorl
mov
sbb
faddl
cli
adc
cmp
jns
icebp
cmp
fldcw
fnsave
and
add
ss
pop
outsb
insl
je
fldcw
mov
out
scas
pop
in
fcoms
test
lods
fldt
pop
popa
mov
cmp
repnz
pop
fnsave
dec
jge
fbld
xchg
sbb
lock
fs
cmpb
and
fsubl
loope
dec
cltd
pop
xchg
and
xchg
adc
stos
cmc
mov
stc
std
pop
push
subb
ss
inc
daa
arpl
je
lcall
push
es
fwait
in
or
movsb
icebp
test
les
cli
icebp
fsubs
and
outsl
and
pop
inc
rcrb
movsl
int3
movsb
repz
loope
xlat
xchg
test
dec
shr
push
adc
aaa
fadds
pop
adc
pop
adc
add
pushf
movsb
cs
sarl
addr16
iret
sbb
jno
fidivrl
rclb
mov
out
imul
dec
adc
pop
sbb
xor
xor
fistpl
imul
mov
jmp
cmp
push
push
stos
xlat
mov
cmpsl
jl
or
pop
hlt
adc
xlat
sbb
or
aad
pop
cmpl
mov
fnstenv
xchg
mov
inc
xlat
and
inc
fsubrl
push
xlat
aas
add
sub
xchg
mov
xlat
ret
xchg
jns
push
xor
out
cmc
ljmp
push
and
sub
mov
les
rorb
jo
xor
jno
mov
sub
stc
pop
pop
icebp
in
test
pusha
sbb
repz
and
pop
xlat
xchg
popa
push
sbb
gs
in
and
cmp
ljmp
pop
fs
sbb
sbb
gs
jecxz
fisttpll
add
dec
hlt
orb
push
adc
mov
andl
cmpxchg
mov
pop
xor
mov
sbb
es
ss
push
aas
sbbl
jnp
popf
sub
out
push
xchg
leave
push
pop
sbb
aas
fsubs
cmp
push
pop
xor
pop
sbb
pop
mov
loopne
push
sahf
sub
out
sub
gs
cmp
xor
pusha
dec
adc
into
mov
jnp
mov
ss
movsb
mov
loope
and
add
je
leave
rcrb
cmp
dec
clc
ljmp
js
mov
icebp
pop
cmp
or
scas
rcr
push
cwtl
sbbl
jno
out
cmpsb
ljmp
jmp
mov
sbb
inc
pop
fs
pop
fists
pop
mov
mov
movsl
or
rol
or
inc
out
xchg
lcall
pop
jecxz
popf
mov
pushl
fs
loope
int3
mov
sbb
push
outsl
arpl
notb
push
jbe
hlt
sbb
cmpl
cmp
xchg
stos
xchg
les
push
jmp
cmpsb
cli
into
lods
std
jns
ss
aaa
push
lahf
sar
scas
aaa
xchg
pop
sub
insl
push
fs
popa
int
aam
cmp
add
shr
dec
rorb
scas
cmp
or
xchg
nop
nop
or
arpl
dec
inc
push
int3
mov
pop
pop
sub
cmp
xor
xchg
mov
mov
mov
test
jnp
dec
stc
movsl
lods
shl
jl
add
and
dec
inc
nop
dec
fimuls
xlat
jmp
gs
stos
cmp
adc
pop
mov
mov
or
xchg
jge
adc
lahf
push
test
pusha
dec
into
mov
ror
sbb
sbb
test
xchg
mov
push
cmp
mov
outsb
lock
or
pop
dec
mov
sub
repnz
sub
ret
cltd
faddl
or
mov
stos
cli
sub
jno
shlb
mov
clc
outsb
loope
call
adc
mov
shlb
fmuls
aam
mov
aaa
out
decb
and
jbe
sbb
dec
je
push
jp
xchg
das
push
push
jmp
mov
je
and
fmuls
iret
nop
movsb
scas
shll
stos
divb
mov
cld
or
mov
sub
mov
lods
inc
shll
mov
ficoms
out
aam
and
lea
aas
scas
and
mov
xchg
pop
loop
fdivs
fcmovnu
cli
decl
out
cmp
lahf
or
xchg
fsubs
push
pop
xlat
shr
cmp
iret
data16
test
test
pop
leave
and
mov
iret
int3
jecxz
mov
mov
mov
pushf
iret
dec
mov
pop
jb
mov
dec
or
lods
fdivl
and
lods
aas
xor
xchg
imul
sarl
jl
imul
dec
inc
xor
outsl
mov
das
in
mov
mov
ret
dec
sub
add
sbb
leave
mov
pusha
push
push
or
inc
and
mov
shrb
mov
xor
mov
sub
fs
je
imul
repnz
insl
dec
mov
or
je
pop
js
mov
mov
xchg
stos
and
loop
iret
insb
pop
push
cmpsb
out
pop
mov
shrl
pop
dec
cwtl
mov
lock
add
mov
adc
fisttpl
push
fwait
mov
fprem
fcmove
repz
into
jge
mov
mov
lret
int
inc
aad
mov
xor
iret
outsb
inc
or
xor
sub
push
cld
mov
mov
and
shlb
inc
pop
add
jns
jbe
out
pop
jae
cmc
insl
cwtl
jecxz
lret
imull
jne
rorb
push
ss
adc
test
popa
sub
cmp
xor
daa
adc
in
cltd
icebp
push
leave
jns
xor
and
push
in
shl
jns
sbb
mov
out
outsl
rorl
adc
push
pop
cwtl
cwtl
mov
fs
push
xchg
pop
mov
in
cli
shlb
ss
mov
mov
cmp
adc
add
jnp
rol
fs
rcll
adc
aam
push
jp
mov
sub
ljmp
or
jo
and
push
test
or
pushf
mov
movsb
or
jb
inc
addb
xlat
ds
mov
ja
inc
and
or
inc
in
enter
xlat
mov
or
push
sub
aaa
arpl
imul
stc
and
xor
call
lods
pop
xlat
roll
test
cmpsb
mull
pop
inc
inc
push
in
inc
add
fidivl
cmp
leave
ror
aas
sti
sbb
adc
push
outsl
fnstenv
cltd
test
cmp
add
mov
test
cmp
push
mov
in
fs
rorb
pop
lods
mov
movsb
popf
xor
adc
xchg
cltd
stos
push
in
inc
xor
xor
call
or
dec
mov
mov
lock
inc
mov
xor
rclb
add
or
cmp
mov
in
add
jae
lock
xchg
mov
in
mov
fsubrl
dec
fnsave
fbld
inc
aad
xor
push
push
add
mov
fisttps
mov
hlt
int
xchg
clc
rcrb
jae
mov
jg
aam
inc
xchg
pop
scas
dec
shll
imul
fiadds
xlat
push
lahf
lea
imul
push
add
or
test
outsl
push
sarl
cmp
insl
and
mov
repnz
jb
mov
sub
dec
in
sti
push
adcb
jnp
add
jbe
lcall
adcb
faddl
push
rcl
jge
hlt
sub
xor
ret
inc
test
jl
add
jo
pusha
push
sbb
sbb
and
dec
fidivs
std
mov
or
enter
push
cmp
mov
out
mov
push
in
dec
and
test
bound
jg
sbb
std
popf
fs
test
imul
das
mov
cmp
fists
test
cmp
or
addr16
xor
popf
jb
int
dec
data16
cmp
mov
imul
sbb
dec
aad
cmp
or
xchg
daa
cmpsb
push
sbb
push
mov
xchg
add
or
lcall
add
mov
test
aaa
mov
jmp
and
mov
in
insb
outsb
shrl
jge
mov
mov
les
push
xchg
mov
sbb
mov
nop
jae
out
mov
mov
xchg
flds
mov
arpl
xor
dec
cld
xor
adc
push
cmc
jl
dec
jae
pop
mov
jge
cmp
xchg
lods
push
loope
or
jbe
push
mov
mov
mov
aas
lahf
cmpsl
mov
xor
dec
xchg
sbb
lcall
jecxz
enter
push
and
sar
pop
dec
cltd
cmpsb
push
adc
cmp
jmp
ret
jbe
adc
xor
cmp
xor
inc
fwait
insl
jbe
and
sub
mov
in
and
pop
inc
dec
cmp
sub
nop
gs
loopnew
faddl
push
ret
and
push
in
icebp
cmp
xchg
jge
scas
dec
jbe
daa
xchg
cmpsl
sbb
roll
leave
je
mov
xchg
mov
add
mov
scas
mull
ss
in
pop
out
jg
ficoml
fisubs
adc
xor
xchg
jg
push
aas
add
into
mov
filds
icebp
int3
shlb
mov
fimuls
push
pop
out
cmc
mov
mov
jmp
shl
cmp
or
mov
lret
cmp
sbb
push
add
nop
cltd
shlb
in
incl
stc
stc
xor
mov
inc
movsl
movsl
movsb
cmp
xor
mov
jp
sub
or
stos
out
push
lret
shll
jmp
xor
jle
leave
fmulp
ss
push
dec
in
ret
jecxz
in
lds
fists
into
es
xchg
loope
jecxz
sub
sbb
scas
push
cwtl
add
push
adc
mov
int3
cwtl
and
push
or
sbbb
loopne
add
or
xor
loope
fmull
movl
pushf
push
mov
dec
sub
pop
xchg
insb
push
lds
pusha
ret
inc
cmp
mov
ljmp
push
int
icebp
fldpi
movsb
inc
push
sarl
adc
imul
xchg
out
fwait
repnz
mov
jo
add
pop
in
xor
adc
popa
sbbb
dec
dec
and
packuswb
xchg
repnz
insl
sub
cltd
pop
push
scas
sub
mov
lcall
dec
test
pop
inc
mov
sbb
mov
lea
or
cltd
sahf
xchg
ret
insl
rorl
xor
sbb
daa
stos
sbb
cli
adc
rcrb
xor
int3
cli
dec
stc
pop
pop
mov
jmp
jl
fcoms
sbb
xchg
nop
or
inc
mov
inc
iret
pop
mov
xlat
jne
pop
shrl
lret
push
xor
pop
adc
dec
insl
inc
mov
loope,pt
fnstsw
xor
push
repnz
shlb
int3
movsl
xor
and
mov
movsb
in
or
aaa
pusha
cmp
scas
cmp
sbb
fsts
addr16
add
pop
rcr
cltd
scas
adc
xchg
sbb
andl
cmpl
xchg
scas
push
xor
adc
xchg
xor
decb
inc
or
pop
cmp
adc
and
pop
inc
pop
inc
lock
loope
xchg
cmp
mov
fisubl
sti
ss
xchg
or
pop
mov
push
ss
hlt
push
add
stc
cmpb
xchg
or
add
jb,pn
lcall
nop
fs
xchg
bound
lods
sbb
loope
mov
xchg
adc
push
lock
mov
testb
mov
cmp
pop
loopne
fcomps
dec
adc
pop
mov
repz
mov
sbb
xor
test
sub
sbb
les
fs
mull
mov
insl
pop
ljmp
sbb
in
dec
cmp
test
mov
js
inc
push
fldl
mov
push
in
push
jo
clc
sub
inc
xchg
or
fisubrl
jo
movsb
xchg
cmpsl
mov
xor
jns
xchg
dec
shrb
call
clc
cltd
cmp
jb
int3
ret
fwait
jp
jae
mov
inc
pop
inc
mov
frstor
add
jae
xor
into
mov
adc
cmp
jle
repnz
pusha
push
inc
repnz
leave
jle
stc
pop
aam
into
mov
cmp
test
cld
insb
jne
cmpsl
mov
fstps
mov
lea
sti
xchg
push
lahf
and
nop
insb
mov
adc
add
shr
repnz
cmp
ret
mov
fldenv
add
pusha
ret
pop
inc
add
sbb
out
cltd
pop
orl
lea
sub
dec
push
mov
mov
or
cmp
fildll
iret
jl
pmaxsw
pop
add
pop
jmp
enter
xor
dec
pop
int3
and
dec
mov
mov
mov
xor
dec
sub
pop
or
and
mov
es
push
add
mov
es
test
movsl
lock
cmp
lret
jbe
sbbb
mov
mov
imul
in
cwtl
xor
pop
add
sub
mov
push
xchg
inc
mov
cmpsb
bound
pushf
and
xlat
stos
push
das
xchg
pop
inc
pop
xchg
sbb
cltd
test
aam
jecxz
aaa
fucomi
mov
fld
mov
insb
adc
insl
arpl
shrl
jge
pop
jno
or
clc
jp
xchg
fisubl
outsl
add
gs
mov
repnz
push
and
jno
xor
xchg
sbb
popa
and
and
add
sbb
movsl
int3
xchg
or
xor
pop
addb
in
add
mov
mov
in
cltd
leave
mov
loope
adc
sub
fs
xchg
adc
xchg
mov
mov
mov
mov
push
lods
mov
pop
pop
inc
adc
dec
mov
into
dec
outsb
loop
les
jns
push
push
andl
pop
and
ret
scas
std
cs
movsb
pop
add
add
push
pop
and
cmp
mov
sahf
gs
dec
cmp
cmp
pop
lods
push
andl
sbb
push
dec
pop
jne
add
add
and
xchg
mov
xor
pop
mov
jge
rcll
mov
or
mov
aad
jno
dec
add
hlt
lock
dec
ds
jge
jae
push
sbbb
ss
adc
cli
inc
sub
adc
in
les
testb
inc
xchg
push
insl
xlat
cmpsl
push
adc
repnz
test
xchg
mov
cli
ret
lcall
pop
mov
jnp
push
js
in
pushf
xchg
jmp
adc
enter
xchg
mov
scas
xchg
stc
pop
dec
sti
lock
xchg
je
popa
aas
fbstp
push
and
lret
fcompl
std
fiadds
flds
cld
cmp
dec
aas
mov
movhps
push
leave
adc
adc
hlt
cld
dec
out
sub
pop
inc
out
pop
xorl
push
pusha
push
test
push
outsb
or
ror
and
enter
in
add
ficomps
imul
pop
dec
mov
push
jo
push
fs
jae
pop
outsl
lock
xor
inc
pushf
cmpl
or
outsb
push
push
ja
lea
adc
cmpl
int3
mov
test
ja
sbb
inc
inc
adc
jae
pop
daa
es
xchg
cmpsl
and
stos
xchg
je
dec
xchg
dec
cltd
mov
adc
out
jp
stos
popf
lea
sbb
xlat
sbb
in
fs
stos
scas
repz
mov
int
cmpsl
xchg
adc
and
jecxz
add
outsl
cli
jb
mov
roll
dec
jg
dec
sub
leave
push
adc
add
aam
xchg
xchg
ljmp
jnp
add
jmp
or
jae
mov
mov
lret
or
sub
mov
mov
js
sub
cmp
fwait
aas
mov
dec
and
inc
das
mov
adc
jge
mov
sbb
cld
pusha
loop
es
sbb
cmpsb
into
cmp
bound
jle
jecxz
sub
inc
mov
xchg
addr16
xchg
push
sub
cwtl
push
pop
orl
scas
hlt
lret
jnp
repz
mov
js
ds
test
out
sub
test
jle
sub
call
dec
lret
add
rolb
pushl
iret
fldt
jge
fs
mov
cmp
arpl
pop
pop
pop
pop
push
sub
test
mulb
imul
sbb
xchg
pusha
jle
dec
jge
scas
mov
js
iret
push
enter
andl
stc
add
jnp
mov
test
test
xchg
and
xor
cmpsb
cli
scas
int3
test
mov
in
inc
out
xchg
pop
pusha
movsb
stos
mov
rorb
pusha
loop
push
push
shlb
roll
xchg
aam
sbb
adc
add
sti
adc
mov
fidivrs
sbb
out
push
roll
fs
push
outsb
add
pop
test
push
scas
repnz
pop
mov
stc
ret
clc
inc
hlt
push
out
adc
daa
mov
push
xorl
insl
add
mov
test
push
adc
out
pop
outsl
mov
mov
mov
or
pop
std
and
rcrb
aas
scas
mov
sti
mov
ljmp
lods
imul
jmp
xor
loope
push
test
xchg
mov
movsl
cmpsl
shlb
xchg
xchg
or
dec
pop
lds
mov
je
dec
aas
cmc
hlt
jmp
mov
mov
push
adc
add
adc
pop
sbb
lods
and
stos
clc
dec
adc
adc
xor
incb
in
in
mov
in
pusha
sbb
mov
flds
mov
rolb
data16
ljmp
shll
jno
fnstcw
icebp
mov
fs
jle
inc
clc
aad
dec
mov
fdivs
ror
push
xor
pop
es
in
push
bnd
mov
mov
jl
mov
jb
jmp
mov
push
mov
clc
das
inc
mov
push
pop
movsb
in
in
mov
jne
xor
sti
pop
insb
in
push
cs
int3
test
aaa
inc
mov
test
mov
cld
std
aas
and
fst
jae
es
sbb
pop
or
and
add
loop
out
rclb
push
push
jle
xchg
test
pop
pop
pop
hlt
icebp
jne
stc
jns
dec
xor
repz
cmp
fnstsw
xchg
lods
test
push
pop
int3
push
xchg
jo
jns
sub
sbb
cmp
xchg
cmp
ficoms
aas
cltd
inc
les
test
in
add
xchg
adc
mov
subl
sbb
cmp
out
add
inc
les
push
mov
fstpl
imul
dec
fdivs
push
mov
mov
jge
js
push
mov
out
das
lret
add
loopne
jns
jp
lahf
mov
push
dec
lret
out
lods
fimull
cli
mov
add
adc
jnp
xchg
mov
push
jne
cmpsl
ds
cmp
pop
test
lods
out
cmpb
or
arpl
sub
jae
test
rep
movsl
or
pusha
jb
jp
sub
mov
pushf
mov
xchg
inc
add
ja
cs
push
lds
sub
mov
xor
orb
push
cmpl
jecxz
leave
loop
rclb
mov
in
pop
ret
pop
insl
or
jno
inc
enter
insl
nop
std
and
jns,pt
jp
loope
pushf
mov
stc
pop
scas
add
js
mov
mov
push
aam
aas
dec
enter
or
sbb
lock
cmp
lds
adc
sub
add
test
sbbb
sbbl
mov
js
dec
imul
add
stc
scas
jle
sub
xlat
fcoml
sub
jnp
jne
cmp
lock
test
pop
sub
addb
pushf
sbb
mov
arpl
int3
push
repz
sub
aam
xchg
iret
out
lock
cltd
scas
xchg
sbb
aaa
and
rolb
pop
arpl
lretw
push
or
ja
or
and
sbb
icebp
out
std
outsb
add
xor
imul
and
push
sar
fidivl
pcmpgtd
movsl
lods
aas
adc
or
push
fistpll
nop
add
outsl
iret
xchg
aas
hlt
or
cmp
in
mov
nop
data16
mov
lods
adc
cmp
add
es
xor
test
leave
pop
xlat
push
pushf
je
add
mov
mov
jo
in
rcrl
jns
popa
adc
sbb
pop
stos
dec
in
pop
mov
and
adc
les
xchg
and
ret
jne
cmp
mov
stos
xor
xchg
push
inc
lahf
adc
mov
rorl
decl
push
mov
mov
lods
push
lods
iret
ljmp
sbb
out
add
mov
sbb
and
fbld
jbe
rcr
xorl
or
sub
pushf
sub
xor
ljmp
mov
jp
aad
sbb
sbb
cmp
adc
popf
sub
push
xchg
cmp
scas
and
cli
ret
in
out
xchg
std
pop
rcr
in
push
inc
xor
movsl
es
push
add
push
pop
sub
lahf
mov
pop
ds
arpl
and
jo
negb
stos
lods
push
ja
ds
fwait
ss
push
dec
loope
sbb
lods
inc
sti
and
and
sbb
scas
pop
je
rclb
add
push
mov
xchg
mov
add
sbb
pop
xchg
mov
fidivrs
sahf
imulb
push
lods
gs
fst
inc
cmp
pushf
adc
mov
mov
adc
movsb
ret
jno
cmp
add
add
movsl
adc
ret
out
pop
in
mov
pop
mov
int
jo
xchg
jbe
push
push
shr
gs
lahf
cmc
icebp
jb
in
xor
mov
jge
lock
or
mov
sarl
pop
inc
jmp
pop
subb
or
ret
inc
sub
jne
xchg
mov
std
push
andl
rcrl
xchg
arpl
xor
jns
push
sbb
ret
cmp
jno
lret
add
cwtl
fcoml
push
cmpb
sub
and
jecxz
hlt
dec
inc
fldenv
hlt
out
les
inc
sarl
fnstenv
lods
or
xchg
sbb
imul
mov
sti
fstpl
sahf
dec
lock
movsl
jns
call
mov
roll
dec
dec
imul
mov
xor
fisttpl
xchg
cmc
in
and
nop
out
out
mov
inc
and
mov
fdivs
xchg
inc
aas
adc
xchg
dec
xchg
lods
sub
mov
xor
gs
popf
ljmp
data16
scas
adc
in
xchg
pop
adc
push
femms
mov
shrb
dec
leave
cmp
aaa
lret
mov
cmp
rcrb
in
pop
enter
jnp
or
xchg
or
loopne
lcall
pop
in
sti
and
rclb
mov
inc
pop
popa
bound
fs
pop
sarl
std
mov
dec
jle
xor
fs
das
mov
addr16
xlat
cs
int
fidivl
mov
insb
out
incl
jo
xor
mov
into
push
mov
frstor
das
loopne
jb
sub
leave
ret
mov
inc
mov
jo
lea
lret
pop
jb
xchg
mov
pop
cmp
pop
xchg
add
sub
and
xchg
inc
out
and
jae
les
dec
in
std
xchg
fmuls
jl
fsubl
pop
inc
repz
dec
jns
cmpl
fwait
cmpsb
andb
test
pusha
lcall
mov
cmpl
daa
neg
mov
or
push
shlb
sbb
push
xchg
dec
test
loop
pop
test
and
mov
dec
xor
inc
xor
mov
out
cmc
jae
pop
rorl
sub
js
call
mov
ret
data16
lcall
icebp
jns
addr16
jae
pop
push
loope
aam
aaa
cwtl
pop
aas
aas
call
repz
push
scas
fwait
aad
adc
dec
jno
lahf
add
pushf
out
gs
incl
sbb
add
inc
push
and
mov
sbb
and
das
lock
cmp
mov
je
cli
cmpsl
sbb
xor
testl
int
dec
addr16
jecxz
dec
mov
movsb
gs
shll
or
jb
xor
scas
repz
xchg
ljmp
pop
lods
shl
or
xchg
in
pop
jo
adc
cmp
mov
xor
dec
insb
dec
or
into
push
xchg
mov
mov
outsb
sub
insb
es
loop
pop
loope
push
push
leave
pop
lock
imul
xor
adc
into
mov
mov
sub
sti
inc
cltd
andl
rcll
jge
jmp
inc
das
test
arpl
push
hlt
cmpsb
mov
xlat
jl
dec
and
mov
add
dec
in
movsl
in
mov
fdivrs
dec
hlt
ficompl
mov
cli
insl
dec
fcomps
jl
out
in
or
call
xor
pop
cmp
imul
pop
leave
mov
cmpb
es
sahf
arpl
jle
xor
cmp
aad
push
mov
xchg
and
sub
sbb
jp
pop
push
packuswb
int
adc
ret
sub
cmp
or
sbb
mov
aam
in
movsb
rolb
add
sbb
aas
xor
insb
add
cli
cs
pop
pop
popf
arpl
mov
pop
nop
lock
loope
gs
push
ficoml
leave
out
add
pop
push
repz
dec
adc
aad
movsl
fidivrl
push
jne
ds
cmp
lock
mov
dec
std
rolb
push
push
pop
fildl
jno
popf
or
xchg
stos
jl
cltd
cmp
push
xchg
sbb
adc
fsubrl
dec
pop
rorl
je
fs
in
lret
pop
mov
add
popa
lea
xor
imul
into
mov
xchg
loopne
fcmove
or
ret
xchg
rclb
xor
in
scas
cltd
inc
mov
jb
jbe
inc
adc
imul
xchg
std
lcall
cmp
xor
mov
dec
js
sub
cmp
mov
jns
inc
sub
mov
ds
mov
sub
shr
xchg
jns
inc
lods
outsl
jecxz
mov
ficompl
das
test
sbb
or
mov
mov
arpl
mov
xor
lret
fsubl
or
sar
pop
mov
inc
pop
imul
sub
data16
cwtl
cmp
push
dec
mov
outsb
push
sub
rorb
divb
aaa
jp
in
ljmp
cltd
in
pop
shl
adc
cmp
cmp
mov
xor
jecxz
es
mov
rclb
loope
les
std
stc
inc
lds
sti
test
je
mov
les
sub
xor
xor
fstps
shlb
sbb
mov
lds
xor
jmp
xchg
xchg
add
lret
sarl
out
lret
push
movsb
xor
iret
in
lock
adc
aad
lret
mov
aad
and
add
sahf
in
push
add
popa
xor
xchg
ja
mov
mov
jecxz
or
fistpll
push
and
cmp
lret
pop
xchg
sub
sub
popf
jb
pushf
mov
in
dec
xchg
jle
sbb
aad
xor
or
sub
daa
mov
inc
test
mov
out
mov
js
pushf
inc
pop
aam
outsl
rcr
xor
test
scas
scas
inc
loope
mov
and
cld
sub
jmp
mov
stos
or
mov
mov
xchg
jle
stc
pop
loopne
lret
bsr
cs
cli
scas
in
and
mov
xchg
or
push
repz
in
lods
dec
cmp
shrb
scas
mov
cmp
push
fldenv
fbstp
cmp
and
pop
jmp
in
int3
pop
push
ljmp
movsb
mov
push
test
lahf
shr
push
stos
xor
fldl
popa
or
negb
jmp
hlt
xchg
dec
testb
xchg
je
lods
add
jne
inc
std
in
mov
xor
int
sub
jns
repz
into
add
cmc
cmpsb
sahf
mov
dec
add
mov
push
repnz
out
ja
xor
mov
inc
inc
mov
push
jp
hlt
sbb
push
push
int
jb
in
inc
inc
mov
inc
adc
stos
not
mov
enter
adc
jle
jno
mov
sbb
inc
mov
in
aas
test
sub
xor
add
xchg
mov
sub
pop
fcompl
out
and
testb
mov
sub
test
insl
call
cmpl
dec
sbb
lret
mov
and
outsl
sti
adc
imul
sub
push
mov
cmp
sbb
xor
test
xlat
ret
imul
test
mov
stos
dec
sbb
jne
pop
add
arpl
movsb
push
nop
aas
out
insl
jne
mov
xchg
mov
cmp
ljmp
das
and
lret
mov
in
in
xchg
pop
andl
adc
dec
bound
fstpl
repz
cmc
sti
xchg
mov
int3
push
aaa
cmp
mov
testb
adc
movsl
or
mov
adc
add
aaa
imul
pushf
cmp
ret
je
in
mov
cmp
dec
jle
sub
sub
mov
mov
jmp
push
pop
js
ljmp
ffreep
repnz
call
stos
mov
outsl
pop
push
ds
cmp
push
arpl
in
add
popa
ret
mov
mov
jp
in
xor
push
lcall
jo
add
js
sbb
jno
cltd
xchg
lea
push
cld
cs
js
dec
cmpsl
adc
push
inc
add
adcb
xchg
shr
clc
cs
in
inc
nop
mov
adc
pop
adc
dec
sub
ret
inc
fidivrl
out
aaa
std
mov
and
rorb
je
pop
stos
shrb
add
inc
pop
lea
js
push
jns
inc
inc
lds
loope
mov
push
pop
push
lcall
clc
negb
cmp
in
loop
idiv
iret
or
mov
xchg
cmpsb
das
aas
mov
shll
jo
pop
fisttpll
add
push
mov
or
push
mov
adc
scas
xchg
cli
in
cltd
mov
scas
popf
bnd
loope
mulb
stc
adc
insb
lcall
jo
iret
cwtl
imul
jbe
pop
jo
push
mov
and
and
or
cmpsb
jnp
or
jecxz
jle
pop
xchg
add
insl
push
jb
mov
sahf
jge
xchg
mov
into
aam
inc
adc
test
and
xchg
jp
jo
xor
loop
test
popf
fsubs
filds
mov
pop
and
or
in
test
or
dec
lcall
cmp
js
jmp
cli
and
add
and
mov
insb
mov
gs
inc
in
mov
xor
test
push
xor
adc
arpl
call
push
inc
mov
and
lahf
or
scas
sti
insb
add
mov
push
add
in
push
xchg
mov
addl
stos
cwtl
sub
fidivs
scas
or
push
shll
xor
les
inc
roll
inc
nopl
push
vunpckhps
mov
nop
dec
fidivrs
mov
inc
add
lret
aad
fmuls
jno
push
cmp
es
enter
pop
loope
inc
lret
push
jp
mov
aaa
jae
cmc
addr16
shll
scas
sub
jge
test
gs
mov
lock
and
pop
pop
mov
cwtl
pop
nop
push
xor
fwait
inc
jecxz
sbb
iret
cmpsl
movsb
sbb
xchg
arpl
stos
dec
ret
adc
lret
nop
fistpll
test
insb
mov
push
push
and
sub
push
push
scas
int3
loop
into
sahf
sub
push
add
ja
shll
pop
pushf
int
sbb
mov
dec
mov
pop
xor
xchg
mov
fdivl
das
mov
mov
mov
cwtl
pop
and
cwtl
pop
sub
mov
jle
sbb
scas
shl
push
int
or
mov
xor
dec
stc
mov
shlb
xchg
sub
lret
call
and
pusha
dec
push
pop
mov
xchg
sub
scas
mov
and
mov
fiaddl
xchg
rcll
push
sbb
add
dec
stos
outsl
fcomps
cmp
and
sbb
mov
daa
aad
sbb
lea
incl
cwtl
cmp
cld
outsl
test
xor
mov
lds
sahf
js
inc
push
jbe
or
lcall
out
push
mov
repnz
jmp
mov
jle
pop
lahf
test
jno
icebp
push
mov
cmp
sbb
inc
lods
fistpl
ret
mov
repnz
int
fimull
mov
stos
jp
adc
out
popf
sbb
in
mov
push
outsb
ret
or
inc
mov
imul
outsb
subl
imul
sti
sbb
mov
add
cmpsl
inc
mull
xor
or
xchg
cmp
mov
adc
out
lret
jge
hlt
gs
xor
xchg
xchg
subl
insb
sarb
ret
push
add
mov
sbb
les
icebp
add
int3
popa
and
pop
pushf
iret
pop
repz
hlt
add
test
pop
loope
adc
pop
lahf
dec
xchg
push
xchg
adc
adcb
fmuls
lds
xchg
xlat
xchg
movsl
inc
xor
cmp
and
es
test
outsb
loope
adc
jp
ror
add
push
mov
xchg
xchg
aam
dec
mov
or
sbb
or
test
in
lcall
call
mov
xchg
push
adc
xchg
mov
sub
and
sbb
fcoms
lret
leave
push
sub
sub
lods
jmp
or
idivl
ret
push
fldcw
cmp
lock
loope
mov
xor
push
jle
sub
divl
pop
arpl
push
jnp
fs
xor
push
mov
out
mov
fucomi
mov
push
cmp
xlat
fwait
outsb
mov
xchg
scas
out
arpl
mov
mov
xchg
jg
addr16
xchg
jnp
int3
hlt
ret
sbb
sbbl
mov
lock
xor
add
pop
lods
pop
lods
mov
pslld
mov
add
sbb
mov
cmp
mov
stos
imul
jae
into
mov
xchg
ret
inc
pop
inc
out
pop
aad
push
cltd
add
lret
lcall
std
es
and
or
jp
mov
cltd
cmp
stos
imul
dec
inc
adc
adc
inc
push
push
xchg
jbe
lea
jbe
adc
mov
mov
adc
xchg
cli
dec
rorb
sbb
mov
cmp
pop
scas
adc
aad
daa
nop
inc
cmc
repz
cmp
orb
mov
out
inc
cli
or
clc
std
addr16
ss
jns
mov
loopne
xchg
push
jmp
sbb
insl
sub
cmpsl
sti
cmp
ljmp
stos
adc
sti
movsl
fstl
jne
lcall
fs
scas
sbb
dec
mov
lods
lods
inc
jmp
repnz
xlat
in
call
aam
ficoms
inc
or
pop
cltd
push
adc
clc
xchg
ror
jno
xchg
jns
mov
or
push
mov
push
xor
shll
inc
icebp
xchg
sti
dec
call
sbb
mov
mov
fdivl
mov
mov
arpl
loop
outsb
jl
popa
mov
jecxz
pop
pop
shrl
in
push
lods
int
mov
jmp
jle
sti
mov
xchg
pop
xor
popf
int3
inc
pop
jp
xchg
cmp
js
mov
aas
mov
inc
pop
pusha
addl
popa
scas
sbb
pop
mov
sbb
cmpsb
sbb
or
jp
sub
dec
cmp
mov
shrb
push
movsl
mov
fsubp
xor
mov
jae
arpl
jle
aam
sarb
sbb
popf
push
or
mov
dec
les
popf
sub
push
xchg
hlt
push
sbb
cmp
xor
push
add
int
aaa
mov
rcr
sub
test
sahf
mov
cmpsb
adc
sbb
insl
stos
in
add
ret
add
inc
lcall
clc
loopne
or
ret
popa
jno
lods
jo
cltd
push
lcall
jp
add
mov
int
mov
mov
mov
mov
imulb
pusha
mov
scas
add
and
dec
pop
push
ds
fildll
sub
pop
lea
and
fisubs
pop
and
adcl
out
xchg
sbb
mov
xor
jl
adc
push
imul
aas
xchg
inc
pop
mov
js
shlb
add
aaa
xor
imul
fbld
mov
push
insl
ss
pop
push
sbb
inc
or
mov
sub
js
cli
inc
clc
and
lods
or
cltd
inc
cmpsb
test
adc
aam
mov
push
adc
fsubp
add
jge
addr16
jmp
cwtl
xor
icebp
adc
lcall
xchg
mov
out
or
dec
jnp
mov
jno
sub
inc
cmp
scas
cmpsl
test
xlat
and
xlat
xor
mov
sbb
pusha
sbb
test
cmpsl
ja
das
fstp
stos
sbb
push
cmp
mov
lods
cmp
jmp
mov
push
fstps
push
pop
scas
cmp
outsl
sbb
and
jl
mov
and
push
icebp
test
fcoml
pop
inc
enter
das
in
fildl
adc
cmp
sub
out
mov
sub
les
addb
rcl
jns
clc
lahf
lods
scas
xchg
lods
inc
loop
xlat
push
sahf
push
dec
test
ret
sub
mov
xchg
leave
xor
and
sbb
inc
pop
rclb
push
mov
dec
testb
lods
xchg
sbb
ds
mov
sarl
xor
jb
mov
pop
push
adc
xlat
inc
pop
xlat
pushf
ja
cwtl
mov
cmc
int
mov
add
ror
dec
mov
xor
jne
sbb
daa
or
adc
nop
ret
maskmovq
notl
mov
inc
xlat
cs
xchg
je
adc
and
mov
loop
movsb
sub
mov
lret
push
push
add
js
hlt
js
jns
or
sub
ljmp
push
and
add
xchg
lcall
adc
mov
inc
popf
orb
cld
mov
lea
inc
and
mov
push
xor
dec
sub
sub
fsubs
push
xor
push
test
cmpsb
outsb
loop
push
stc
lcall
mov
outsl
push
int
push
les
rcrl
loope
mov
imul
cmp
pop
and
ret
xchg
push
cmp
hlt
push
bound
cmp
in
adc
push
fists
sbb
pop
jge
fiaddl
insb
aas
sub
adc
insl
push
stc
or
fildl
mov
sub
test
sbb
scas
push
sub
jmp
mov
mov
movsb
imul
mov
dec
out
mov
jns
lret
loopne
dec
je
jbe
mov
mov
ret
sub
ror
push
and
movsb
dec
push
mov
cmpsb
jnp
pop
sbb
sub
add
gs
sub
fcoml
mov
icebp
sahf
xor
sub
xchg
inc
mov
inc
push
add
xor
or
and
xor
inc
stc
test
lods
push
imul
scas
mov
je
or
ret
popw
or
xchg
bound
out
lds
negb
push
pop
out
pop
push
jne
push
mov
mov
inc
scas
outsb
inc
jl
inc
cmpsb
add
pop
into
adc
pushf
cmp
aad
xlat
inc
insb
fiadds
out
rcll
cmp
xor
inc
cmp
cmp
fnsave
cld
insb
fwait
dec
enter
cmpsb
fwait
dec
xor
fisttps
cli
jo
adc
mov
leave
ret
flds
mov
sub
cs
stos
outsb
add
jp
push
imul
xchg
inc
int3
xchg
movsb
inc
imul
jg
push
sub
aas
incl
fs
jle
ljmp
cmc
ficoml
inc
jmp
mov
mov
in
pusha
int3
adc
pop
cwtl
or
add
jae
xor
pop
inc
inc
jle
ja
scas
das
xor
or
repnz
jmp
mov
push
mov
add
pop
jmp
push
cmpsb
add
sub
rcll
cwtl
nop
sub
push
test
cmp
cmpsb
cmp
jecxz
rcll
stc
jecxz
pop
test
jp
mov
out
jnp
fucom
dec
clc
in
xor
hlt
jle
push
popf
adc
mov
ds
dec
decl
enter
mov
pop
or
xchg
cli
add
je
push
fmuls
call
xor
pop
or
and
rcr
and
jb
mov
nop
ss
pop
push
cmc
in
fs
je
ret
inc
pop
ljmp
dec
push
push
lret
cld
mov
mov
stc
cmp
lret
add
xchg
pop
dec
out
es
rol
adc
mov
mov
add
mov
js
add
jecxz
inc
imul
fdivl
mov
add
iret
out
hlt
into
push
mov
mov
mov
daa
mov
repz
adc
ret
cli
lds
lea
cmp
movsb
pop
out
repnz
rcr
push
xchg
mov
inc
add
sbb
stc
lcall
sbb
sti
popa
pop
pusha
pop
mov
call
pop
cmp
jbe
lahf
ret
cltd
inc
fcmovnb
inc
sahf
cmp
cli
scas
pushl
test
jno
imul
cld
pop
push
push
cmp
mov
xor
or
sbb
pop
fwait
push
mov
outsb
fmull
jbe
testl
inc
mov
mov
aaa
adc
es
inc
add
daa
inc
lea
cmp
sub
je
cli
dec
mov
es
jbe
mov
cmp
inc
mov
in
lods
mov
call
gs
dec
fiadds
or
add
xchg
dec
cmp
inc
ljmp
or
arpl
rcr
cltd
jmp
dec
stc
xor
adc
ret
xlat
push
andb
mov
or
out
fcomip
xor
and
cmp
jnp
sbb
pop
pop
ss
insl
pop
sbb
xchg
icebp
push
mov
push
jo
mov
insb
fldenv
fiadds
aam
mov
fisttpl
into
outsb
lock
and
imul
push
stos
pop
fprem1
push
daa
aaa
loope
pop
pop
enter
sbb
pop
inc
mov
inc
sub
push
orb
outsb
mov
mov
mov
sub
movsl
sti
test
cli
cmp
mov
push
and
cmp
push
data16
inc
jg
add
lret
pop
orb
mov
gs
jnp
add
mov
jno
mov
mov
aaa
shlb
loop
or
stos
jb
leave
jmp
cltd
jg
push
mov
inc
jbe
out
cli
addr16
adc
arpl
inc
cld
icebp
enter
jo
sbb
out
cld
push
mov
sahf
mov
ret
in
movb
repnz
xor
loope
repz
jge
notrack
test
addr16
push
mov
push
addr16
lret
add
dec
and
faddl
fsubr
inc
adc
push
pusha
mov
pop
xchg
jnp
sub
xor
arpl
and
pop
and
dec
mov
lea
pusha
xor
pop
dec
or
jmp
scas
or
jle
int3
mov
push
adc
sbb
enter
mov
in
andl
out
sbb
add
pop
shll
repz
or
mov
sahf
xchg
push
shrl
sbb
ret
add
cmpsl
mov
cmpsb
shr
scas
mov
into
dec
jmp
and
fwait
sbb
push
add
push
ds
xchg
inc
mov
call
push
subb
outsb
sub
jae
sbb
add
pop
add
enter
jae
ja
hlt
mov
push
popa
sbb
fsubl
fcmovnb
pop
insb
js
sarl
mov
int
jo
jo
push
or
stos
shll
lock
mov
hlt
mov
je
mov
inc
roll
dec
pop
aaa
out
inc
pushf
pop
cmpsl
js
cmp
adcb
lods
pop
mov
std
fucomip
subl
inc
imul
xlat
pushf
hlt
lods
ret
xor
fstpt
jae
jae
adcb
into
add
outsl
add
push
dec
xchg
outsl
xchg
inc
je
or
test
cs
pusha
sub
sub
je
push
push
cmpsl
mov
inc
xchg
and
xor
lea
jnp
out
popf
inc
and
fistl
lods
ret
rorb
xchg
or
xor
lret
stos
pop
lds
adc
push
cmp
scas
mov
mov
or
mov
ficomps
adc
pop
jns
inc
call
rcll
mov
push
cmp
pop
pop
sbb
sub
cmpsl
or
or
push
xchg
pop
or
sub
out
xlat
ljmp
shrl
pop
test
outsb
mov
nop
cmpsl
lods
mov
nop
cmc
inc
mov
jns
adc
aad
outsl
out
or
mov
mov
sarl
stos
loope
mov
jmp
push
push
les
xlat
xlat
sti
and
shlb
dec
mov
lods
in
xor
es
inc
mov
add
mov
mov
jbe
loop
inc
ja
mov
leave
sub
sub
pop
jo
ja
add
add
adc
cmp
xchg
js
add
add
inc
push
mov
mov
inc
jo
xor
push
stc
test
imul
lret
addr16
mov
mov
or
jecxz
clc
leave
jecxz
dec
enter
sbb
xchg
flds
and
jns
hlt
dec
nop
xchg
mov
into
cmp
push
mov
adc
xchg
jmp
mov
mov
cli
cltd
jg
push
pop
cltd
dec
jne
test
xor
cld
sbb
out
decl
sbb
dec
adc
cmp
jbe
dec
add
cs
out
push
push
jp
mov
testl
ficompl
pushf
xchg
dec
mov
lock
frstor
movsl
jb
sarb
pop
lods
std
jp
icebp
mov
mov
fstpl
lret
push
and
cmp
push
inc
lret
insb
das
pop
mov
in
in
xor
cmp
lcall
mov
inc
in
in
enter
fdivrl
push
mov
sbbl
je
dec
cmp
out
popf
sub
es
ficoml
std
ja
xchg
push
jg
mov
ret
mov
test
dec
inc
js
xor
dec
outsb
outsb
in
mov
and
push
dec
sbb
hlt
xchg
adc
outsb
test
fisttpll
jns
ds
mov
dec
imul
inc
roll
mov
xchg
iret
xor
fs
in
imul
xchg
inc
aas
test
ficomps
jp
aaa
pusha
lods
push
adc
xor
sbb
pop
jg
inc
movsb
mov
sbb
sbb
or
inc
sub
pop
imul
test
cmp
jne
call
divb
adc
xchg
and
addr16
push
add
mov
push
mov
adc
adc
imul
mov
mov
adc
push
and
ret
cmpsb
inc
clc
adc
lret
jae
xchg
mov
cmp
int3
mov
ds
fbstp
insb
cmp
sbb
xchg
pop
push
sbb
das
push
push
xor
xchg
and
pop
cmpb
xchg
ljmp
dec
cltd
gs
mov
insb
fstpl
stos
divb
insl
add
cmpsl
int3
cmp
push
cli
xlat
and
sub
dec
sbb
push
cmp
icebp
xor
push
xchg
mov
dec
shll
int3
out
xchg
push
mov
popf
ljmp
test
shll
mov
jb
sarb
pusha
add
push
inc
sbb
mov
push
shl
xchg
xor
test
in
jecxz
mov
daa
pop
jnp
mov
movl
mov
gs
sbb
pop
xchg
mov
jp
loop
pop
pop
mov
mov
mov
or
or
hlt
push
adc
mov
les
sbb
pop
lret
inc
addr16
call
xchg
sti
cmp
dec
cmp
lret
stc
mov
mov
test
jne
shrb
inc
jmp
or
sti
xor
push
test
and
mov
inc
mov
out
aas
mov
sahf
outsb
cmpsb
out
push
sub
mov
pop
lcall
xchg
or
stc
pushf
xor
inc
out
test
jl
push
das
sub
ds
pop
fwait
daa
and
shll
cmp
shrb
dec
std
aaa
fwait
cwtl
mov
cmp
ljmp
adc
sub
and
pop
pushf
push
adc
jno
out
push
push
jb
cmp
sub
mov
aam
xchg
mov
lret
aas
jnp
into
xor
imul
hlt
call
faddl
mov
jb
mov
sub
mov
clc
and
test
loopne
dec
sub
js
pop
incl
ret
push
insb
inc
push
sub
lret
cltd
mov
sbb
mov
and
push
out
fcmovne
and
cmpsl
ljmp
push
mov
fadd
inc
inc
xchg
aaa
je
sbb
add
mov
mov
dec
cld
cltd
out
push
mov
xchg
leave
outsl
rcr
sub
xor
sahf
daa
mov
stc
movsl
shrb
test
fucom
jmp
in
test
das
sub
in
sbb
outsl
add
cli
adc
in
test
imul
jbe
das
test
adc
mov
lahf
gs
jle
pusha
dec
pop
mov
sub
cli
mov
inc
xchg
adc
fmuls
mov
push
sbb
add
cmpsl
mov
imul
call
inc
testl
insl
pop
shll
xor
ja
movsb
mov
sbb
cld
xchg
adc
out
dec
pop
lods
xor
sub
nop
cmp
cmp
add
push
imul
shl
xor
inc
insb
and
add
nop
in
ja
push
mov
sub
jne
lea
mov
and
jp
push
es
xchg
pop
cwtl
dec
fld
adc
dec
cs
and
mov
dec
mov
mov
sarl
sub
jmp
sub
hlt
xchg
ficompl
mov
add
aaa
mov
dec
fs
push
stc
shll
adc
mov
push
jg
mov
xchg
lds
ja
test
test
sahf
adc
cwtl
mov
test
add
out
xchg
test
insl
mov
lea
clc
add
mov
xchg
mov
jbe
and
push
sbb
cmp
fdivl
inc
pop
outsb
shl
inc
int
xor
inc
out
and
xor
inc
pop
cmp
and
fsubrs
addl
out
add
or
mov
dec
pop
lock
cmpsb
and
insb
jmp
pop
arpl
je
or
xchg
repz
sub
subl
lea
je
push
mov
mov
push
xchg
cmp
sub
addr16
adc
inc
mov
inc
sbb
sti
or
push
scas
cmpsl
xor
repz
jbe
cmpb
xchg
mov
jns
jno
push
fwait
pop
mov
sub
jp
add
test
out
mov
stos
pop
in
int3
xchg
call
mov
mov
cmp
mov
push
in
ja
into
pop
shll
out
aaa
and
ds
in
arpl
lds
repz
andb
mov
sbb
adc
mov
cltd
mov
jle
mov
or
imul
push
gs
pop
mov
mov
lods
inc
push
movsl
es
sub
mov
mov
xchg
jle
cmpsl
or
repz
mov
fs
ss
xchg
sub
in
test
jecxz
or
adc
je
add
pop
sbbl
sarb
mov
pop
lret
rclb
shlb
and
sbb
xchg
xchg
push
pop
ret
jae
test
mov
xor
inc
dec
clc
xchg
fsin
int
mov
fisubl
fistps
scas
cmpsb
cli
pop
inc
pop
mov
inc
popa
sbb
addr16
lock
imul
into
ds
dec
push
lds
and
mov
xor
xor
fs
movsb
cmp
pop
lcall
xchg
push
jae
or
cmpsl
fisttps
mov
pop
xor
mov
jne
xchg
lods
xor
mov
jmp
or
inc
sbb
adc
sar
push
icebp
or
ret
push
mov
iret
mov
cmpb
adc
cltd
mov
lcall
ret
push
xchg
push
adc
dec
sub
dec
repnz
xchg
or
cmp
dec
jmp
lods
test
xor
sbbb
xchg
push
mov
mov
add
or
and
or
xlat
sahf
mov
in
adcl
mov
sub
xor
add
rorb
pop
dec
pop
loop
or
fwait
inc
das
mov
enter
aas
out
loope
pushl
mov
inc
test
enter
mov
insl
hlt
adc
dec
cmp
test
aas
mov
ja
cmp
cmp
pop
cmc
inc
push
push
rolb
mov
push
add
add
cmpl
stos
loope
cmp
push
ja
scas
cmp
jns
ljmpw
cmp
popf
pop
pusha
in
imul
mov
and
and
lret
scas
or
icebp
dec
stos
subl
dec
lock
aas
int3
aam
fdivs
xchg
adc
push
addl
clc
sub
jbe
fisttps
sub
aas
mov
cmpl
incl
inc
in
pop
js
dec
dec
cmp
and
scas
enter
pushf
sbb
sbb
mov
cmpb
int
dec
jmp
push
loopew
inc
jae
cli
pop
or
dec
pusha
cmpsb
push
bound
cmp
cmpb
popf
push
adc
cld
dec
cmp
jnp
cwtl
mov
nop
cmp
push
or
call
mov
lret
adc
jmp
jo
stc
aaa
pop
inc
adc
bound
xchg
sub
adc
mov
sti
xor
fsubs
inc
push
push
sbb
dec
jbe
pop
dec
sub
lcall
push
mov
int
pushl
mul
ja
cltd
adc
adc
cmc
mov
mov
lcall
sarb
xchg
es
shrd
xchg
in
and
fcomps
in
jae
mov
std
pop
fs
jmp
loopne
inc
test
outsb
jno
call
sub
fistpll
addr16
insb
sbb
ret
mov
sbb
leave
xor
sbb
add
insl
push
sbbb
or
daa
fidivrl
sbbl
push
sub
bound
mov
rclb
js
in
cmp
inc
add
sub
and
or
lods
lret
dec
xchg
mov
ss
ss
scas
sub
mov
test
mov
dec
push
push
aas
ficompl
pusha
pop
enter
mov
sbb
or
mov
insb
mov
mov
dec
push
dec
ret
sarb
and
inc
fcomps
inc
cmc
xor
pushf
test
mov
stmxcsr
test
nop
push
mov
inc
scas
jl
mov
mov
jo
sbb
dec
inc
in
inc
xchg
dec
loopne
pop
and
cmp
iret
clc
cmp
psubw
ja
and
xor
insl
and
xchg
insb
jmp
jne
cs
jo
test
or
stos
push
mov
popa
sbb
cmc
in
cld
mov
adc
jno
aad
je
sbb
inc
bound
sub
mov
lea
ret
sub
xorl
addr16
rclb
movsb
int3
mov
sub
push
inc
movsb
xchg
imul
mov
lret
jae
pop
lods
cmpsb
in
xchg
or
dec
int3
xchg
jo
in
fwait
mov
xor
hlt
fs
fs
cmpsl
dec
lods
jg
xlat
pushf
xchg
mov
ja
test
jne
xchg
jmp
cmp
sub
in
sbb
dec
cmpsb
sbb
push
cmpsl
test
push
jbe
jecxz
fsubl
mov
push
cmp
leave
ja
or
inc
and
mov
xlat
out
inc
dec
aas
sbb
negl
or
shlb
lcall
mov
cmp
adc
js
pop
xchg
lret
xchg
mov
xchg
lahf
pop
pop
out
pop
shlb
data16
les
xor
push
repnz
mov
movsl
js
jl
sub
and
jg
fsubrs
int3
in
inc
das
dec
mov
jge
push
jno
jg
jmp
div
dec
cld
inc
std
jns
add
lods
lods
pop
mov
movb
mov
sarl
mov
repz
inc
add
out
cmp
ds
push
pushf
rcll
lcall
scas
and
jb
xchg
pop
aad
into
add
call
xor
xor
cmp
push
xchg
push
sbb
testl
push
or
xchg
mov
dec
ficoms
adc
cmpsl
hlt
jg
insb
in
sbb
mov
iret
sti
mov
in
sub
out
lret
in
cmp
inc
cltd
xor
and
sbb
add
dec
leave
cmpsl
jb
dec
lods
xor
fwait
adc
sbb
cmp
fldt
mov
call
fcoml
fidivrl
xchg
jle
cmpsl
mov
dec
std
les
sbb
pusha
push
and
xchg
lods
jno
popf
idivl
stos
int
mov
jbe
push
cmp
mov
ret
call
fwait
dec
int
xor
sbb
out
xor
mov
sub
fwait
dec
lret
cmp
add
stos
das
mov
cli
inc
in
or
cmc
cmp
mov
fidivrl
inc
push
loope
dec
insl
mov
push
insl
loopne
rolb
aaa
mov
mov
fsub
mov
data16
fstpt
aad
shrl
or
repz
or
cmp
fwait
jmp
push
dec
dec
jns
fsubl
xor
jecxz
dec
inc
lret
out
mov
adc
leave
cmp
addr16
push
xor
and
mov
stos
inc
rclb
aam
dec
inc
jno
sti
shl
dec
pop
add
mull
xchg
loope
xor
outsb
jb
pop
aaa
push
xchg
insb
sbb
shll
add
cltd
in
push
mov
ret
pushf
ds
push
jg
lcall
ja
mov
pushf
test
jbe
pop
or
mov
dec
mov
mov
cltd
aaa
cmpsb
mov
inc
rcr
cld
daa
ret
sbb
mov
pushf
pop
inc
adc
cmp
mov
repnz
xchg
fdivl
iret
jl
test
clc
mov
clts
aaa
xor
push
or
pushf
xchg
fs
je
cld
in
xor
call
incl
xor
std
jmp
sti
sbb
jnp
add
test
shll
xlat
jp
std
dec
aas
int3
mov
or
mov
outsl
sub
jl
gs
mov
loop
addb
xchg
push
repnz
ficomps
cmc
jmp
jle
movsb
ss
inc
add
xchg
mov
pop
int
mov
xor
daa
mov
mov
outsl
xor
push
push
adc
js
pop
xor
pop
push
in
into
and
dec
jle
pop
fnstenv
aas
or
mov
outsl
xchg
std
push
cld
xor
sbb
push
in
pop
aas
and
push
repz
aad
ja
aaa
testb
sbb
sub
add
inc
xchg
das
inc
sub
cmp
cmc
mov
shll
aaa
insb
push
js
xchg
cmp
fistl
int
out
push
sub
scas
xchg
pop
xor
mov
inc
in
nop
maskmovq
imul
cltd
cmc
dec
jge
jmp
clc
lcall
jne
mov
adc
lret
lds
divb
inc
cwtl
mulb
cmp
pop
leave
es
orl
xchg
adc
mov
das
dec
push
push
mov
fwait
push
leave
or
pop
mov
inc
shlb
test
imul
adc
jae
pusha
inc
ret
mov
mov
mov
loopne
in
sbb
andl
leave
insb
pop
jne
nop
sbb
lock
xor
das
cmp
enter
rorl
mov
loope
mov
sarb
enter
cld
lret
xor
in
arpl
xor
xchg
insl
pop
sub
sub
inc
popf
sahf
pop
push
popf
sub
lock
aaa
pusha
dec
mov
icebp
gs
rcr
cmp
xchg
push
cltd
shrb
movl
movsl
pop
push
push
jbe
push
or
rcl
sub
push
stos
mov
fldl
lods
dec
adc
mov
mov
mov
test
adc
fstl
test
sub
push
xchg
aas
jl
int3
inc
nop
stc
aad
loop
not
inc
pusha
dec
mov
ljmp
icebp
sub
aad
sub
mov
fwait
cmp
add
and
dec
cltd
and
adc
repz
popf
push
scas
insb
aam
in
add
sbb
jno
popa
mov
push
out
jecxz
test
mov
mov
sub
movsb
hlt
or
cli
xor
dec
dec
xor
in
jmp
int
mov
mov
cmp
inc
data16
jg
nop
inc
ljmp
iret
jg
incb
mov
sbb
imul
ss
or
dec
imul
adc
popa
loopne
xor
mov
jmp
nop
iret
fldenv
lret
dec
into
lods
out
dec
dec
pop
ror
clc
add
inc
xor
add
and
jns
jge
test
lods
jno
or
dec
aas
or
mov
sti
xor
mov
fldt
xorl
jne
in
pop
das
xchg
nop
sub
iret
jno
shr
std
and
les
outsb
ds
into
add
jae
mov
fisubrl
push
jnp
imulb
mov
mov
cmp
lret
inc
and
or
push
imul
shrl
out
mov
cwtl
add
mov
pop
in
sub
lcall
in
jb
ss
cmp
push
pop
or
mov
repz
scas
call
lods
icebp
inc
dec
inc
jge
push
rcll
lcall
fstpt
push
arpl
add
imul
test
dec
mov
jae
push
cmp
adcb
sbb
inc
or
push
jecxz
adc
cmpsb
push
in
into
mov
mov
add
and
add
xchg
gs
movl
dec
test
mov
pop
sahf
cmpb
xlat
mov
xorl
add
jb
shll
shr
mov
inc
test
xor
xorl
fisttps
lahf
loop
cltd
sub
stos
pop
push
add
loop
mov
cli
es
cltd
and
mov
sahf
pop
cmpsb
loopne
mov
fld
dec
lock
add
mov
jno
lahf
lret
ret
ljmp
pop
xchg
dec
adc
jmp
fwait
mov
cld
push
jnp
shrb
les
xor
out
into
mov
xor
jle
add
aad
sbb
into
lods
dec
pop
inc
adc
sub
pop
in
adc
jle
jecxz
arpl
inc
mov
xchg
dec
inc
mov
push
mov
stos
mov
cmp
jno
add
jns
ja
loop
lea
sahf
jmp
dec
cltd
movsl
sbb
lret
push
fldt
or
jl
push
pushf
std
xor
add
push
xor
dec
shrl
mov
sysretw
fadd
jmp
call
aam
pop
add
cmp
mov
dec
test
pop
ret
push
mov
repnz
idivl
call
test
push
jbe
pop
lock
adc
jo
or
mov
bound
jns
loop
pushf
daa
ja
stos
jae
sub
iret
fimull
xchg
jge
das
nop
clc
push
cwtl
push
stos
sbb
mov
js
add
dec
mov
xchg
inc
stos
sbbl
jo
mov
sub
push
adc
adc
lods
das
imul
jnp
gs
jge
into
mov
fisttps
mov
shrl
insb
sub
shlb
ds
in
jne
mov
push
shlb
aad
adcl
leave
adcl
mov
cmp
add
cmpb
mov
popa
rcrb
fmull
mov
int
inc
push
cmp
roll
xor
adc
test
or
and
push
adc
pop
shll
push
icebp
push
jl
jo
cmp
mov
sub
fisubl
sub
jno
xlat
dec
mov
add
push
popf
mov
in
pop
mov
into
stc
hlt
icebp
outsl
clc
gs
fs
sbb
out
popf
jl
mov
daa
adc
cmp
dec
jns
sub
add
pop
pop
sub
inc
lretw
nop
jae
dec
in
lret
mov
adc
push
popa
test
aam
mov
rol
ffree
adc
xchg
add
xchg
mov
mov
xor
xchg
mov
mov
dec
rcrl
cmp
stos
lds
dec
outsl
jge
and
lods
ds
mov
test
sbb
sbb
pop
ljmp
push
xorl
jecxz
aad
mov
popa
xchg
mul
xor
scas
or
or
aaa
es
dec
inc
adc
stos
inc
jl
sahf
inc
mov
leave
ds
cmp
fwait
shll
mov
fsubl
inc
mov
es
dec
mov
pop
jg
jb
mov
sahf
cltd
adc
mov
pop
cmc
imul
leave
or
out
repnz
mov
sbb
or
jbe
pop
ss
or
cmp
push
stos
gs
dec
lea
and
arpl
fcomi
cmp
inc
sub
xlat
and
test
sub
pop
rcrb
push
andb
or
shll
or
aas
lea
mov
mov
adcb
cmpsb
lahf
or
pop
neg
adc
dec
mov
xchg
mov
out
test
addr16
lods
sbb
xchg
jno
leave
fcomip
add
jns
call
lods
stos
push
faddl
and
xor
ffreep
inc
cmp
cmp
loope
insb
mov
enter
jne
and
and
dec
ret
adc
push
in
or
dec
leave
outsl
cli
push
pop
or
shrb
out
aad
push
lret
push
mov
mov
pop
mov
and
aam
push
mov
cmc
movsb
out
pop
jno
jmp
fidivs
mov
fs
jae
xlat
mov
xchg
rorl
loop
sbb
into
dec
outsl
sub
fsts
leave
dec
out
mov
mov
fdiv
sahf
mov
aas
push
and
lea
fwait
rcrl
and
js
push
cmc
xor
es
sbb
loop
xchg
aam
lods
hlt
shll
mov
and
pop
jns
filds
xor
arpl
mov
jmp
mov
mov
mov
pushf
in
jge
mov
dec
jb
add
loopne
dec
daa
xorl
pop
add
push
das
cmp
inc
jbe
adc
sbb
xor
mov
or
lods
and
sbb
sbbb
adc
mov
or
xchg
adcb
cs
mov
aaa
push
lods
leave
les
div
sub
mov
or
fadd
scas
add
bound
lods
xchg
push
jg
mov
jno
jae
mov
das
jge
sbb
mov
dec
pop
in
xor
or
outsb
xchg
xor
cmp
push
mov
sub
das
repz
jle
mov
xor
inc
dec
cld
cmp
xchg
pop
cmpsb
push
cmp
and
insl
xorl
adc
push
ss
mov
xchg
int3
out
nop
rol
jns
adc
insb
lret
mov
int3
jl
xchg
adc
jae
push
fsts
mov
and
xor
dec
out
sub
gs
adc
ret
inc
xor
push
jno
jle
mov
xchg
fidivrs
mov
dec
test
jmp
es
icebp
xchg
cmpl
jmp
add
jmp
cmp
call
cmp
or
pop
jbe
xor
int
jnp
adc
idivl
pop
popa
pop
mov
inc
stos
test
js
xlat
leave
shrl
fimull
pop
dec
rcll
bound
movsb
rorl
adc
and
in
fsts
pushf
shll
cmp
fisubs
sbb
and
ds
testb
xchg
inc
dec
rclb
xchg
mov
jecxz
aam
ds
cmp
fadd
xorb
bound
mov
jo
fsubl
inc
inc
dec
data16
iret
jmp
arpl
mov
jg
xorb
lds
in
xlat
jns
mov
xchg
je
orl
sub
push
inc
mov
dec
int3
and
lea
cs
shl
inc
int
mov
mov
pop
cld
cmp
insb
sub
fmull
lock
loopne
mov
insl
dec
cmpsl
std
pop
jp
imul
jo
mul
aas
inc
adc
movsb
push
in
mov
in
and
mov
sar
insl
lcall
filds
adc
push
mov
cltd
mov
mov
loop
mov
pop
add
outsb
das
or
repnz
mov
cmpsl
sub
sbb
roll
icebp
xor
sub
push
scas
insl
mov
cmc
jge
xor
mov
fstpt
es
mov
dec
pop
adc
out
xor
pushf
test
mov
and
mov
nop
xchg
jns
pop
outsw
rcrl
sbb
jmp
pop
and
fwait
rorl
popa
pushf
jl
push
inc
sbb
sbb
and
adcl
sub
subb
pop
pop
xor
int
cs
in
cltd
ret
aam
pop
xorl
sarl
pop
dec
pop
mov
call
adc
or
mov
sub
add
aaa
fld
aad
jo
sub
ljmp
stos
stc
add
repz
pop
mov
fldt
arpl
xchg
sbb
xlat
aad
mov
fsubl
push
popf
xchg
push
sbb
je
leave
jae
rorl
sahf
lcall
jmp
inc
repz
sub
lock
inc
inc
sub
mov
testl
xor
lcall
loop
or
inc
lahf
cmp
shrb
mov
xor
and
jmp
cltd
sbb
js
bound
sarl
int
ss
lods
xor
add
cmpsl
mov
xorb
sub
jo
push
sbb
loop
xor
daa
xor
sub
out
push
mov
xchg
mov
divl
xchg
xor
jge
cld
mov
in
cmpl
adc
orl
xchg
pop
scas
lret
dec
or
pusha
add
pop
shll
push
mov
std
in
jae
int
int3
push
mov
cltd
cltd
mov
mov
fs
mov
aam
and
push
lods
jbe
pop
and
sub
pop
pop
jecxz
xchg
mov
mov
out
lahf
pop
cli
mov
or
cmpsb
or
lods
sbb
pop
aam
add
shrb
dec
push
or
adc
outsb
fdivrs
xor
in
popf
xor
sub
sbb
push
jle
imul
sbb
adcl
xor
mov
cli
test
js
adc
sub
aam
es
std
pusha
mov
push
sub
dec
lret
ret
mov
mov
adc
or
push
xchg
dec
call
push
sbb
stc
inc
xor
push
repnz
pusha
lcall
cmpb
jno
pop
and
mov
xor
add
and
repz
push
sahf
mov
jb
int
sbb
loope
mov
mov
scas
je
dec
fwait
mov
in
xor
jge
xor
testl
rcl
test
lret
rclb
test
mov
adc
lahf
mov
mov
movsb
mov
jl
fnsave
mov
lret
xor
pop
dec
out
mov
popf
popf
fwait
nop
cmpsl
adc
aas
mov
push
sub
xlat
push
or
push
out
adc
adc
cs
popf
daa
or
add
push
sub
js
xchg
push
mov
jecxz
dec
jl
mov
addl
mov
mov
jo
and
pop
popa
sbbb
jbe
nop
mov
push
sub
imul
sbb
xchg
ss
pop
ljmp
andb
ret
lret
mov
jp
or
jnp
shlb
xor
pop
and
out
sbb
or
pop
xor
xor
test
gs
lods
dec
movsl
loope
mov
bound
push
or
mov
dec
fidivl
pop
scas
ljmp
loop
iret
sti
mov
sbb
test
xchg
loop
push
stc
lds
dec
test
push
mov
cmp
loop
mov
flds
or
cli
in
dec
int
cli
jmp
mov
cli
mov
jecxz
ret
and
and
mov
test
imul
mov
cmpsb
and
je
stc
dec
shlb
mov
push
cld
jp
sbb
ret
lock
out
jecxz
dec
les
inc
gs
sbb
lahf
into
add
je
jnp
adc
fs
push
jp
sbb
add
pop
lret
test
call
push
out
std
clc
mov
or
jo
clc
sbb
sub
loope
mov
pop
xchg
pop
mov
inc
lahf
jg
imul
idiv
xchg
adc
xlat
sbb
pop
add
jecxz
xor
pop
scas
or
jns
mov
mov
inc
sarl
and
fadd
or
cmp
gs
adc
or
insb
mov
js
mov
push
imul
fnstcw
lahf
loope
fwait
orl
sub
add
hlt
or
int3
mov
push
outsb
icebp
rorl
and
icebp
fldenv
call
mov
loope
and
xor
popa
ja
scas
popa
ss
mov
dec
cmp
pusha
sub
enter
xorb
sub
push
mov
test
push
jmp
loope
and
in
test
scas
es
loopne
out
fs
std
jb
aaa
jns
xor
out
inc
pushf
std
or
or
jns
xchg
or
pop
mov
scas
mov
mov
and
push
insb
sbb
adc
push
mov
and
lods
stc
xor
pop
cmp
flds
jo
inc
jbe
sbb
mov
jno
lea
aad
sbb
clc
mov
pop
lret
jnp
xchg
fidivrs
pop
push
sbb
movb
out
andl
dec
xchg
push
pop
pop
cmp
fsubr
imul
or
mov
cmp
in
push
jno,pn
mov
dec
or
mov
jg
movsb
dec
fs
push
xchg
jne
div
inc
test
std
pop
data16
add
mov
add
sub
jge
popf
pop
xor
dec
push
in
cmp
scas
and
xchg
fisttpl
inc
ljmp
test
lret
das
lods
sub
pop
xchg
test
add
fbld
jno
popf
ds
inc
loopne
pop
or
inc
mov
jns
sahf
and
or
mov
and
enter
mov
inc
inc
jnp
mov
test
pushf
push
or
push
pop
js
sub
js
lahf
pop
pop
dec
push
sbb
aam
data16
xchg
das
sbb
fbstp
pop
and
dec
loopne
je
push
orb
mov
es
jno
add
je
cwtl
mov
loop
push
jo
out
mov
and
nop
popf
lret
xchg
iret
lods
push
bound
scas
leave
or
pop
test
jmp
xbegin
xchg
xchg
jg
mov
lds
rolb
xchg
mov
mov
cs
mov
mov
lock
mov
add
sbb
lds
lock
pop
outsb
mov
dec
data16
pop
sub
xor
jmp
or
pop
jecxz
stos
push
adc
mov
mov
xchg
cmc
push
rorl
push
out
das
sbb
mov
cltd
mov
push
pop
pop
lret
aad
xchg
xchg
and
in
sub
imul
xchg
xchg
movsl
aam
enter
xor
push
jae
jp
scas
imul
sbb
es
sbb
mov
sbb
outsl
in
dec
xor
xor
xor
push
mov
lea
jle
loopne
jl
jo
aam
cwtl
lods
fs
mov
push
mov
das
mov
xchg
mov
and
mov
or
lcall
cli
sub
mov
xchg
mov
insb
add
arpl
add
jno
jmp
and
das
imul
pop
adc
push
in
jg
stc
fs
fidivrl
shll
call
mov
add
jle
and
aas
fdivl
pop
sbb
push
pop
lods
lahf
jns
aas
push
sub
lock
repz
sti
lds
add
and
sbb
adc
pusha
and
stos
lods
scas
loopne
mov
pop
pop
test
xchg
scas
mov
xor
jle
inc
inc
jmp
test
ja
out
scas
or
pop
and
das
pop
dec
aad
ficomps
adcb
cmp
in
dec
hlt
xchg
fnstcw
jp
cmp
push
je
add
mov
in
sub
jae
pop
rcll
and
andb
fbld
push
dec
pop
cmp
lods
push
jno,pn
lahf
sbb
sub
aam
jp
aaa
dec
kaddb
xor
mov
cmp
xchg
int
incb
push
stos
push
imul
jo
imul
push
push
sti
push
xlat
cmc
xor
cmp
and
pop
das
imul
adcl
notb
adc
insb
pop
mov
ds
in
rcl
das
push
push
dec
push
add
lds
pop
pop
int
inc
int3
out
fldt
imul
add
repnz
mov
dec
clc
pop
pop
xor
pop
adc
and
inc
lret
mov
cmpsb
orb
mov
dec
fisttps
adc
jge
out
loope
add
nop
push
sti
dec
imul
pop
lods
aad
shrb
scas
fsubrl
push
arpl
or
test
movsl
fsubs
pop
fnsave
jns
pop
nopl
popf
dec
or
lea
lcall
push
negl
xlat
xor
and
and
push
out
cmp
imul
inc
lcall
dec
push
dec
add
popa
rolb
mov
shlb
add
jmp
rcll
sub
stos
inc
dec
clc
mov
shr
iret
gs
sar
int
mov
pop
cmp
mov
aaa
lahf
lcall
jge
mov
xchg
xor
mov
lret
add
cld
dec
mov
mov
add
out
jmp
push
js
jns
cltd
aad
mov
push
lods
pop
adc
jns
inc
jns
mov
adc
dec
xor
movsl
pop
dec
sbb
pusha
sub
pop
in
sahf
cmpsb
fwait
add
scas
insb
movsb
push
lret
sahf
leave
add
push
sbb
adc
and
or
sbb
lods
out
push
dec
cmp
pop
push
jbe
sbb
or
adc
popa
jo
xchg
aam
nop
punpckldq
into
push
movsb
pop
inc
imul
jp
or
jmp
cmc
inc
xor
ret
push
icebp
popa
xor
sbb
xor
sub
push
popa
push
jp
mov
inc
ljmp
loope
cs
push
sbb
outsl
insb
es
add
mov
arpl
into
leave
dec
pxor
sbb
outsl
outsb
daa
mov
cmp
fucomip
push
lcall
mov
mov
popf
stc
out
pop
jne
sbb
dec
dec
out
sbb
pop
rcll
int
pop
inc
xchg
mov
dec
in
pop
cmpsb
in
movsb
xor
insl
mov
ficoml
aaa
roll
and
daa
popa
add
push
xlat
and
lds
cmp
mov
leave
inc
jb
sbb
or
add
scas
mov
sub
divl
scas
shrl
sbb
mov
cmp
inc
pop
ss
ja
and
fmul
jbe
jnp
jle
outsb
xchg
add
leave
cmp
mov
in
clc
test
jecxz
cmc
cmpb
push
xchg
sti
aad
test
sbb
dec
mov
add
outsb
lds
pop
test
popa
push
adc
cmp
sub
and
icebp
stos
jle
pop
cmp
mov
mov
aas
pushf
sub
push
push
sub
fistps
out
push
and
adc
adc
pop
cmc
loope
call
mov
push
jne
popa
call
jno
cmpsb
jge
iret
mov
mov
lods
jno
sbb
loope
dec
jmp
es
lods
mov
jb
push
and
jo
xchg
xor
cli
xor
xor
push
pop
imul
mov
sbb
or
cmp
mov
cld
pop
add
ret
push
cmc
std
lahf
lock
inc
adc
dec
rcl
add
scas
dec
pop
test
imul
xor
popa
mov
jge
loope
cld
add
dec
xlat
andb
lock
out
scas
inc
mov
movsl
jecxz
and
enter
int3
xchg
sbb
add
mov
mov
dec
addr16
scas
sub
ja
cmp
xlat
and
mov
fmulp
sub
popa
and
jb
decb
call
fnsave
mov
jbe
xchg
cmp
mov
ficoml
lret
mov
addr16
jge
sub
mov
pop
jmp
sahf
jp
add
fadds
inc
dec
cmp
dec
pusha
leave
pop
popf
push
nop
in
mov
stc
out
add
inc
bound
mov
lret
into
out
lods
mov
ret
mov
sub
loopne
mov
movsb
in
xor
shlb
mov
jbe
cs
notl
add
idiv
in
mov
sbb
push
cmc
add
push
lock
adc
gs
das
and
stos
lahf
int3
inc
pop
push
sbb
xor
mov
repz
jo
pop
cmc
out
dec
call
ss
jp
adc
rcll
push
or
cmpsb
lret
xchg
jle
shlb
inc
idivb
dec
mov
bound
imul
call
mov
cltd
or
push
jbe
or
jg
and
decl
js
jl
pop
mov
insb
cmp
xchg
or
mov
nop
jb
ljmp
mov
mov
repz
mov
xor
shr
add
imul
shll
add
sbb
push
sti
mov
push
leave
sahf
aad
mov
repz
xchg
movsl
enterw
test
popl
mov
jle
imul
cwtl
add
data16
cs
cs
mov
jmp
inc
ss
push
jb
imul
adc
fildl
jbe
add
scas
or
mov
pop
andb
es
xor
mov
test
lods
sahf
repz
callw
pop
je
dec
inc
inc
and
test
cwtl
mov
mov
movsb
jne
mov
shl
adc
push
test
push
rorl
fwait
cmp
add
or
nop
jne
loope
fistl
loop
ja
gs
orl
mov
dec
xorl
add
cs
lcall
arpl
nop
ret
jb
sub
and
pop
dec
jmp
mov
testb
lock
jmp
and
jg
or
adc
and
and
fs
rolb
gs
xlat
loop
sub
gs
mov
or
xor
sbb
out
xchg
mov
ret
int
pop
sub
sub
stos
and
divl
cpuid
jno
adc
ds
sbb
ds
test
jo
xor
xor
call
subb
lds
stos
lret
in
push
pusha
and
mov
mov
mov
rcrl
or
push
ficoml
shlb
mov
xchg
lods
mov
add
sbb
push
das
movsb
cmpsl
sub
pop
pusha
jne
int
shll
jle
movsb
push
outsl
stos
popf
gs
aam
xor
mov
les
push
sbb
pop
ss
inc
and
test
lret
movsl
das
add
addl
insb
xchg
jnp
aaa
test
outsb
mov
decl
les
dec
lahf
pop
imulb
leave
lahf
test
lds
hlt
int
out
test
lret
xchg
mov
add
cmp
pop
cli
int3
xor
filds
pop
lods
lcall
cltd
lock
inc
not
pop
ret
bound
sahf
pop
testl
push
ficomps
mov
sub
adc
cmc
repnz
and
dec
pop
pop
lcall
js
popf
iret
dec
cli
cld
ds
mov
or
dec
mov
loop
nop
cltd
sub
loop
fnstcw
push
add
cwtl
out
jg
outsb
pop
rcrb
movsl
out
inc
pusha
and
mov
inc
int3
xlat
xchg
cld
cwtl
or
pop
add
sbbl
rorl
and
inc
daa
cmp
mov
add
cmp
clc
sbb
ljmp
jns
dec
jbe
sbb
and
fwait
adc
jl
push
mov
mov
xchg
push
notb
in
dec
fidivs
cs
fcmovu
xlat
sbb
xor
jmp
cmp
sar
ds
lock
test
mov
lods
sbb
add
xorl
push
push
outsb
xchg
imul
shr
int
xorb
sti
jb
dec
scas
insb
gs
add
xchg
cs
enter
int3
dec
pop
rol
rdpkru
push
xchg
lea
outsb
sbb
mov
add
mov
jmp
and
jl
sbb
sbb
test
sub
sarb
dec
mov
orb
nop
mov
adc
daa
inc
jbe
xchg
cmpsl
into
cmp
lods
jne
int
dec
add
test
dec
mov
push
repnz
shlb
movsb
pop
daa
or
fidivrl
mov
xlat
fcoml
in
mov
es
jb
outsl
jns
sub
scas
outsl
sbb
je
push
mov
fdivs
mov
test
jge
mov
sub
xor
pop
dec
xchg
out
xor
pop
mov
pop
dec
rcll
pusha
and
jne
in
cmp
xchg
inc
sub
std
addr16
ret
adc
pop
push
mov
mov
mov
lret
or
insb
movsb
and
pusha
cmp
push
fimuls
pop
das
arpl
fwait
cmc
or
dec
int3
ds
jne
sub
dec
xchg
xor
cltd
scas
into
mov
fistl
mov
call
mov
xor
hlt
dec
push
mov
out
mov
and
lods
mov
and
inc
add
decb
adc
adc
adc
mov
dec
cmp
mov
lods
lods
stos
in
or
dec
dec
int
jl
int
lahf
inc
jg
loope
xchg
test
xchg
fldenv
dec
push
mov
pop
fadd
push
sub
pop
pusha
lock
inc
add
outsl
nop
adc
bound
out
add
test
pop
dec
js
push
pop
pop
repz
call
aaa
gs
jp
repz
and
xor
int3
enter
test
xchg
ret
sub
std
adc
push
inc
lea
mov
repz
in
scas
push
or
outsb
xor
sbb
and
xor
and
mov
call
aas
cmp
jb
jl
lods
scas
rorl
cld
addr16
or
jnp
nop
mov
js
in
leave
aas
ja
sbb
sub
jbe
inc
pop
fildll
mov
xlat
pop
inc
bound
cwtl
ret
adc
push
xor
ja
xchg
scas
xchg
cltd
add
repz
test
add
inc
lahf
sbb
imul
addr16
mov
cld
fiaddl
mov
inc
cli
addr16
ss
rclb
inc
or
jne
jle
inc
pop
pop
pop
in
adc
or
xchg
xchg
loop
pop
pushf
mov
sub
push
mov
fsubl
cmpsb
push
sti
cmpl
lds
mov
stos
mov
jns
mov
lea
stos
mov
sub
xchg
inc
xchg
cmp
or
shl
sub
xor
rcll
fucomi
out
dec
popf
insl
jo
jnp
test
dec
mov
repz
rcl
stos
add
cmpl
xorl
loopne
outsl
jmp
loop
cltd
rcrl
sub
bound
sbb
nop
xlat
cltd
jne
mov
ret
mov
sub
fidivs
lret
pop
mov
or
fisttps
bound
shlb
outsl
gs
scas
cmp
mov
cmp
loopne
cmp
adc
inc
call
lds
sub
jne
and
sub
adcl
stc
mov
iret
mov
xorl
cmc
mov
jne
les
xor
adc
lahf
lea
jl
out
xorl
fcmovu
and
mov
push
fnstcw
out
xlat
test
negl
push
mov
sub
movsb
jo
push
mov
ret
xchg
insb
dec
out
push
pop
decb
jge
sti
add
popf
push
pop
aad
imul
dec
cmp
xor
jecxz
dec
out
sub
adc
addr16
fdivrl
addr16
xor
imul
daa
jle
daa
jge
inc
fwait
dec
lods
xchg
mov
dec
push
jo
nop
aas
adc
insb
das
pop
mov
enter
xor
inc
lret
adc
add
mov
les
mov
hlt
imul
adc
jo
lea
adc
mov
cmp
jmp
adc
adc
push
pop
and
fmull
bound
inc
lcall
jp
icebp
pop
jg
sbb
add
xor
sub
scas
xor
dec
aas
aas
sub
dec
insb
mov
mov
scas
dec
add
or
or
rcl
mov
jg
dec
jb
sbb
dec
mov
ljmp
sbb
push
es
addb
insb
test
imul
arpl
mov
lea
into
cmp
cltd
cs
push
add
cld
jle
jns
mov
add
jle
aad
jle
xchg
pop
mov
les
mov
pop
and
jg
fmull
inc
jge
inc
sbbb
jmp
rol
add
xchg
hlt
jmp
mov
sbb
repnz
cmp
sub
mov
pop
call
ljmp
cli
jns
je
je
xor
out
cmpsb
jmp
xchg
inc
loope
sti
pop
jg
sub
mov
or
lret
push
add
sub
jmp
adcl
sub
mov
inc
in
cld
cltd
sbb
cmp
push
imul
xchg
mov
pop
jmp
lret
xchg
adc
call
cmovl
out
bound
aad
fnstenv
dec
cltd
rcr
cltd
inc
pusha
add
inc
mov
out
lods
in
jge
push
sub
mov
jno
in
icebp
xor
icebp
arpl
fiadds
jb
sbb
xor
jo
clc
and
movl
jl
dec
sub
das
jg
inc
jmp
add
pop
and
xor
adc
fnop
fs
stc
out
inc
push
push
lahf
int3
aad
mov
or
test
dec
inc
and
mov
outsb
shlb
jp
mov
mov
gs
pop
jl
xor
push
sbb
ds
fildl
aad
fsubs
in
push
inc
in
in
mov
fsub
and
stc
or
inc
or
jnp
mov
es
sbb
sbb
sbb
hlt
cmc
test
mov
push
pop
mov
adc
lds
xchg
pop
outsl
sarb
push
inc
mov
in
mov
test
jmp
push
adc
js
pop
jo
lds
inc
push
lock
in
xor
jne
fwait
je
gs
pop
arpl
cltd
fisttpl
ds
in
xchg
xchg
mov
iret
lods
loopne
ret
adc
cmp
jge
add
outsl
cmp
loop
or
push
xchg
pop
inc
mov
cli
mov
xchg
dec
add
mov
mov
loop
cmp
mov
or
xor
sbb
lods
pop
dec
push
or
pop
and
cmp
test
cmc
adc
dec
stos
out
push
pop
xor
mov
push
adc
and
adc
sahf
and
jge
or
add
add
mov
mov
or
xchg
gs
jecxz
dec
test
pop
nop
out
cmpsb
xor
adcb
xor
stos
add
loope
call
jnp
imul
or
lret
out
jmp
pop
enter
call
leave
hlt
adc
and
pop
ret
nop
xchg
mov
adc
gs
neg
mov
sub
stos
and
subl
gs
mov
xor
faddl
je
and
mov
dec
fs
mov
movsb
notl
int3
cltd
mov
int
xchg
icebp
add
jl
popa
sub
lcall
push
xchg
cld
and
jecxz
and
xchg
insl
mov
test
in
cwtl
lcall
ror
dec
push
lds
add
push
fdivl
sub
add
jle
push
push
cmp
mov
pop
aad
or
mov
pushf
das
rcrb
shrb
mov
aaa
jae
mov
insl
popa
xchg
xchg
fcmovne
incl
mov
int3
mov
rcl
push
sub
rcr
pop
push
xchg
jmp
test
adc
imul
fsubl
out
hlt
mov
fldenv
rcrl
aaa
cld
mov
nop
inc
sbb
xchg
cmp
mov
inc
out
inc
pushf
sub
andb
adc
jo
insl
data16
lret
jle
test
mov
or
jo
or
xchg
sahf
xchg
sub
out
adc
sub
xchg
sbb
pop
fadds
int3
pop
xchg
ljmp
lds
and
std
test
lods
inc
iret
and
sbb
mov
fsubrl
pop
stc
jns
movsb
ffreep
push
jne
push
inc
mov
xchg
into
push
add
xlat
mov
es
lret
sti
jbe
lea
mov
sti
mov
or
adc
les
imul
fwait
dec
push
rcr
sub
scas
jo
dec
adc
xchg
xchg
in
cmc
mov
repz
and
sbb
pop
out
clc
and
insb
xor
push
mov
jp
fs
mov
inc
in
popf
lcall
cmpsb
push
stos
mov
adc
adc
and
lods
cld
mov
movsb
cmpsl
cld
mov
adc
or
movsl
inc
fmuls
sbb
lods
push
xchg
daa
sar
mov
out
lods
push
inc
sbb
lock
add
inc
roll
adc
aam
je
xchg
addb
or
and
inc
mov
scas
stos
inc
or
mov
lea
jns
xchg
cwtl
cmpsb
or
lret
out
push
jp
scas
movsl
jg
je
push
nop
dec
ret
push
arpl
lea
enter
das
cmp
clc
pop
push
jns
out
jge
xchg
loopne
fstpl
popf
jnp
aad
movsl
imul
cmp
fpatan
gs
dec
int3
sarb
sbb
insl
xor
ds
in
out
jbe
aam
add
jp
inc
sub
out
in
adc
lds
jl
sti
lods
mov
arpl
stos
push
sbb
jp
imul
sub
pushf
xchg
icebp
or
js
adc
mov
andl
repnz
adc
movsl
xlat
mov
and
outsb
std
mov
insl
mov
push
jbe
sub
jle
mov
cltd
fidivl
mov
stos
test
je
sub
add
insl
push
inc
mov
xchg
jb
call
test
jae
xchg
sbb
scas
stos
mov
loopne
in
xchg
mov
out
and
xlat
pushf
hlt
sbb
pop
lods
dec
fcoms
es
in
jmp
movsb
arpl
ret
pop
arpl
ret
arpl
loopne
mov
cmc
movsl
bound
push
daa
test
dec
mov
loope
jne
mov
push
or
pop
sub
mov
mov
jle
flds
repz
xchg
mov
mov
mov
mov
mov
and
insb
add
sub
jne
incb
cmp
cmpsl
je
lret
loopne
jb
xor
mov
shll
add
fistpll
inc
sub
pop
loope
and
popf
and
xchg
stc
pop
mov
aaa
inc
daa
out
int
xor
arpl
insb
in
inc
dec
ljmp
sub
push
add
mov
aam
aam
xchg
pushf
in
jnp
xlat
jecxz
test
fcoms
enter
cli
and
lret
in
mov
inc
std
roll
mov
adc
pop
pop
gs
mov
push
inc
jg
adcb
test
mov
pop
jns
dec
and
inc
sub
outsl
inc
jnp
pop
inc
bound
ljmp
or
cmp
shr
fildll
lahf
pop
imulb
subl
cmc
add
sub
lock
mov
mov
xor
outsb
and
adc
cmp
cmp
jl
scas
popa
mov
test
fwait
test
push
jge
push
mov
fwait
or
mov
mov
dec
dec
insl
pop
sti
and
or
jb
xchg
push
mov
lods
ss
enter
push
cmpsl
loopne
push
cmp
mov
not
lcall
leave
dec
and
loop
sbb
and
mov
push
mov
jge
push
sbbb
sbb
jno
jmp
lahf
mov
and
out
mov
rolb
fs
push
outsl
movb
mov
inc
inc
sub
inc
pop
sub
jp
out
clc
and
jne
mov
or
mov
jnp
mov
jb
inc
xor
adc
loope
adc
xchg
cltd
test
push
test
fisubs
lods
daa
dec
xchg
fwait
stc
outsl
stos
arpl
lcall
leave
xor
enter
inc
sub
movsb
cltd
push
test
repz
fisttpll
and
xchg
sti
mov
mov
or
gs
fs
addr16
shll
add
sub
cs
nop
inc
xchg
insl
dec
sbb
or
mov
or
inc
imul
in
enter
push
mov
gs
sbb
mov
mov
jecxz
pop
out
outsl
inc
xchg
fdiv
popf
push
imul
movsl
push
pop
mov
pop
sarb
sub
add
push
mov
test
aam
scas
pop
in
pop
ja
inc
lea
jecxz,pn
fcomp
push
sub
mov
cmc
mov
add
outsb
push
fs
jno
pop
pop
mov
push
add
jecxz
int3
sbb
imul
xchg
jle
fs
add
jno
adc
sub
aas
mov
mov
scas
mov
fdivs
gs
stc
ret
push
dec
loope
mov
stos
test
pusha
rcl
pushf
pop
xor
clc
daa
out
pop
es
loope
aam
jmp
push
dec
xchg
pop
jbe
mov
push
call
sub
mov
sub
enter
xchg
mov
push
pop
and
mov
lock
jns,pn
lods
mov
cmp
outsl
mov
jl
test
insl
push
mov
pop
scas
pop
xchg
jecxz
sbb
clc
std
sub
scas
mov
dec
xchg
dec
cmp
add
adc
mov
pusha
js
pop
mov
jle
cs
or
push
mov
popa
mull
dec
push
imul
or
push
mov
jb
out
in
in
sbb
mov
outsb
dec
daa
and
xor
rorl
rcll
push
mov
xlat
cs
push
sarl
mov
outsl
es
mov
mov
dec
cmp
push
addr16
mov
mov
aas
xor
mov
aaa
add
fcomip
ss
adc
pop
xchg
arpl
sbb
pop
sub
nop
and
clc
push
mov
mov
xchg
or
mov
das
or
repnz
sbb
dec
mov
mov
adc
or
inc
mov
ret
sbb
push
sub
cmpsb
xor
ret
notl
in
mov
cmp
push
cmpl
inc
adc
inc
fwait
xchg
push
push
lods
stos
inc
inc
roll
inc
inc
xor
mov
inc
inc
or
out
mov
adc
pop
js
sub
or
imul
aad
jmp
fidivrl
cmp
aas
std
mov
nop
xor
xchg
mov
jns
mov
or
arpl
dec
pushf
hlt
daa
in
pop
sub
pop
mov
scas
out
inc
mov
gs
cmp
mov
iret
push
movsl
cmp
push
movsb
arpl
test
out
xchg
divb
sbb
insb
lret
mov
adc
xor
adcb
sarl
negl
imul
movsb
pop
aas
pop
mov
push
xrelease
add
out
or
iret
aam
insl
jb
add
les
or
nop
lret
jbe
out
ret
out
or
pop
call
rolb
cli
lahf
sub
cmp
rorb
xor
repz
lods
shll
cmpsb
jle
push
dec
push
mov
xchg
jno
sub
mov
mov
lcall
orl
inc
call
es
or
adc
les
push
xor
xchg
stos
mov
xchg
bound
mov
cmp
push
pop
rorb
add
sbb
mov
add
cmp
cli
sbb
sub
xor
fisubs
inc
inc
push
mov
loopne
xor
cmp
hlt
jle
pop
stos
dec
loope
pop
sarb
popl
rol
fisttpl
inc
jno
add
mov
jge
and
ss
inc
repnz
dec
pushf
sbb
fstpl
ss
movsb
in
mov
hlt
dec
sbb
test
lret
pusha
xor
sub
sub
pushf
fcomps
mov
hlt
cltd
xchg
push
and
push
cmp
adc
into
inc
daa
cmp
xor
icebp
aad
pop
test
sbbl
adc
sbb
sbbl
cmp
call
adc
pusha
orb
das
fsub
xchg
jmp
mov
rdtsc
test
mov
adc
enter
mov
and
cmpsl
add
popf
jne
addb
notl
cs
mov
xor
mov
lods
int
mov
aaa
shl
push
push
sub
insb
cld
lret
es
nop
lea
test
movsl
adc
dec
pop
sbb
sub
nop
xor
inc
ja
jae,pn
out
jmp
fisttpl
out
iret
rorl
lcall
neg
add
fimull
sbb
movsl
clc
pop
pop
inc
mov
xchg
movsl
rolb
outsb
jecxz
stos
ds
jl
xor
xchg
pop
jmp
dec
enter
inc
jae
lahf
pop
pop
push
jmp
fldt
je
xchg
lods
jno
rolb
xor
divb
loop
pusha
cmpsb
shlb
outsl
cmp
jmp
inc
push
mov
bound
pop
hlt
cmp
mov
push
ss
roll
push
adc
mov
mov
test
and
std
jle
xchg
jo
daa
mov
add
pop
mov
cwtl
jb
aad
mov
dec
xchg
mov
outsl
push
jmp
mov
sub
subl
jle
ja
mov
out
dec
or
jg
iret
repnz
fsubl
mov
mov
jge
jl
mov
pop
mov
js
js
in
std
jmp
adc
addl
dec
cli
nop
int
shlb
in
out
lahf
test
inc
xor
mov
ficomps
dec
cli
call
movsl
loopne
pop
mov
nop
push
cmp
divps
mov
fwait
aaa
push
lods
das
sbb
ss
sbb
repz
ljmp
mov
push
repnz
arpl
scas
enter
inc
mov
mov
int3
scas
loopne
add
sbb
jns
movsb
ljmp
fisttpl
into
sbb
call
xorb
dec
jae,pt
jmp
mov
stos
out
jnp
jns
inc
sbb
cs
gs
popf
imul
loope
adc
jmp
dec
dec
adc
dec
int3
lds
loopne
insb
ret
lcall
bound
lock
mov
leave
push
mulb
cmp
aas
or
xor
inc
out
iret
in
aas
cmp
and
mov
inc
dec
aad
jbe
add
loop
and
mov
cli
cmp
or
pop
hlt
loop
pop
adcl
or
mov
pop
js
imul
ret
aad
ror
mov
insb
jb
clc
ljmp
and
cmp
sti
pusha
scas
call
ljmp
call
jge
pop
ljmp
jg
inc
push
mov
inc
jecxz
cmp
push
mov
cld
sbb
insb
mov
push
movsl
cmc
fldcw
sub
inc
dec
movsb
test
mov
sbb
sbb
movsb
fwait
das
dec
fmuls
mov
ss
movsb
test
push
xchg
insb
test
out
pop
pop
pop
loope
dec
cmp
iret
stos
inc
xor
mov
sub
imul
dec
mov
das
notb
push
xchg
arpl
aaa
in
mov
lret
outsb
pop
insb
sub
mov
scas
pop
xor
shll
sbb
dec
cmp
dec
pusha
das
cld
ret
icebp
push
test
ficompl
or
sbb
sbb
pushf
lds
sbb
cmp
adc
icebp
dec
push
xchg
jle
inc
js
or
loopne
lret
mov
lret
inc
test
movsl
mov
outsl
sub
ret
and
jns
mov
int3
test
cmp
jle
xchg
in
js
fdivr
push
into
and
sti
cmpsl
mov
push
popf
jbe
fs
push
jg
mov
sbb
incl
sub
leave
sub
push
xchg
andb
sahf
xchg
pop
fistpll
scas
inc
xchg
lods
xlat
iret
test
lret
pop
fdivrs
mov
mov
scas
ficomps
fldcw
cmpsl
mov
jle
arpl
cmc
sub
std
stc
cwtl
xlat
adc
cld
in
jl
fadd
stos
pop
mov
ret
xchg
fildll
into
pop
push
call
mov
movb
cmpsl
add
mov
sbb
dec
stos
sub
outsl
incl
mov
push
add
lret
pop
ret
inc
xchg
in
sbb
stos
stos
aas
inc
lods
cmp
test
in
mov
mov
in
push
xchg
push
pusha
jne
sti
cmp
pop
or
inc
cltd
push
sbb
pop
test
scas
push
pop
jle
inc
fwait
stos
jbe
add
popf
push
adc
outsl
or
mov
incl
add
jno
lea
out
xchg
popa
testl
xchg
mov
xchg
out
stc
jb
aad
mov
add
xor
repnz
adc
or
test
pop
incb
xchg
int3
sti
imul
jmp
adc
shll
jnp
popa
mov
cltd
sbb
push
stc
in
shrb
in
xor
mov
stos
lods
or
inc
adc
xor
out
inc
jbe
mov
or
notb
lcall
cld
loope
andl
aad
cmp
mov
bound
shlb
mulb
in
mov
xor
cld
mov
cmp
lods
lods
or
or
shl
nop
movsl
and
xor
sub
mov
pop
and
adc
sahf
out
sti
dec
stos
jns
lret
xchg
in
mov
mov
outsb
cmp
out
les
lock
jnp
loop
je
nop
mov
cmp
out
rcll
and
test
mov
jne
rorb
lret
adc
mov
jo
or
stc
add
daa
rolb
inc
mov
pushf
mov
cmp
sbb
outsl
mov
xor
jnp
mov
test
std
setb
fst
in
cli
test
std
popa
jo
inc
cmp
cmp
in
arpl
in
push
outsb
dec
fnstenv
or
mov
mov
sub
and
repnz
dec
lcall
bound
lock
xchg
lahf
push
es
cmc
mov
or
arpl
sub
loope
or
mov
mov
inc
push
push
lock
repz
out
cld
jnp
daa
add
pop
les
lcall
mov
in
lods
test
aad
xchg
addr16
fildll
aaa
testb
fs
adc
dec
lds
data16
sub
js
rorb
mov
inc
out
push
jle
jp
add
pop
mov
pop
fs
rorb
jnp
lret
jo
dec
mov
or
push
xor
ljmp
push
les
sub
insb
pop
push
mov
mov
mov
outsl
stos
lret
mov
popf
imul
mov
push
fwait
push
mov
mov
imul
xchg
push
and
out
sbb
and
idivl
sbb
and
cmp
pop
addb
test
inc
mov
or
sbb
pop
shll
nop
loopne
add
cld
mov
or
stos
mov
in
gs
jecxz
adc
adc
loop
inc
inc
cmpsb
add
sbb
addr16
out
add
sti
push
jns
cld
push
jno
sbb
jne
pop
es
es
loopne
xchg
inc
inc
cmp
in
imul
xor
stos
push
cli
fs
xor
loop
addr16
mov
mov
add
dec
cli
jae
inc
jbe
adc
popa
mov
test
fmul
sbb
mov
add
push
pop
push
ljmp
scas
fmul
sarl
jbe
out
xor
lods
sub
jl
ror
dec
mov
jecxz
cmc
ret
push
pop
mov
pop
pop
daa
scas
repz
mov
imul
movsb
aaa
mov
xor
cmp
popa
push
stos
and
mov
cwtl
pop
loope
shll
sub
jne
daa
fisubs
imul
jo
sahf
adc
sbb
test
xor
mov
ret
fwait
jle
fcoml
mov
ror
rcl
jge
mov
in
cmp
sahf
inc
pop
not
rclb
sbb
filds
adc
mov
mov
mov
popf
adc
sub
lds
dec
std
loop
jecxz
push
insb
iret
cmp
mov
jl
push
jae
xchg
sbb
lret
pushl
or
icebp
icebp
orb
xchg
int
pop
mov
adcl
inc
cmc
rcrb
sbb
jno
jbe
add
insb
outsl
or
lea
inc
xlat
ficoml
and
and
cld
lds
arpl
mov
je
in
outsb
cmp
push
push
lahf
push
scas
xchg
cli
mov
movsl
mov
push
mov
lahf
fsts
xchg
mov
int3
add
mov
adc
jmp
cmpl
sbb
mov
stc
outsl
and
das
adc
test
fsubs
sbb
in
shlb
pop
pop
fxch
es
xchg
adc
stos
insl
lret
cltd
ret
adc
insl
or
add
dec
add
xor
xlat
mov
push
push
or
es
pushf
xlat
adcb
pop
pop
jbe
cli
out
sbb
loope
aad
mov
jo
lahf
add
pop
or
adc
or
or
xchg
sub
pop
out
cmp
mov
ljmp
mov
movsb
jb
jae
stos
pop
sub
xor
fldcw
pop
mov
aas
mov
push
adc
leave
cmp
lods
sbb
ss
jle
aam
mov
dec
orl
loope
jne
jmp
xchg
jbe
xchg
adc
ja
int
xchg
loop
popf
push
fstp
inc
insb
mov
enter
or
mov
test
mov
pusha
sti
in
out
xlat
popf
repnz
xchg
and
pop
lods
cmp
xchg
pusha
or
clc
out
in
pop
dec
jmp
or
test
pop
and
mov
cs
decb
repz
or
xchg
pop
xchg
dec
push
inc
movsb
or
and
sbb
cmp
test
jge
sub
cmpsl
sub
xchg
inc
dec
outsb
xor
ret
jp
and
xchg
push
inc
sub
hlt
cmp
jo
scas
adc
fistl
cmp
rcl
cmp
cmp
outsb
or
mov
leave
inc
aam
aam
imul
sti
push
cmp
sub
incb
dec
adc
sub
bound
pop
jp
andb
mov
fwait
xorl
or
popf
addr16
inc
sbb
xchg
adc
test
daa
cmp
inc
arpl
xchg
lods
imul
jp
pop
xchg
mov
rcll
xchg
jae
fisubrs
lcall
movsl
pop
and
loopne
mov
cld
push
stos
in
es
cmc
and
sbb
adc
pop
push
xlat
dec
inc
jg
inc
dec
in
add
leave
jmp
outsb
cmp
inc
push
xlat
push
inc
out
out
loopne
cltd
jg
inc
call
lds
pop
inc
xchg
add
pop
mov
or
movsb
add
into
inc
aaa
popf
jge
int
mov
nop
rol
xchg
rclb
cmp
inc
push
addr16
adc
mov
or
xor
adc
addl
ror
imul
out
push
mull
mov
pop
in
jle
or
ret
and
mov
rclb
pop
mov
xor
mov
dec
mov
cmp
aad
adc
xchg
dec
mov
mov
or
out
jecxz
sarl
jo
shl
inc
mov
xchg
sbbl
stos
mov
enter
xchg
lret
call
sahf
push
mov
and
std
stos
fidivs
test
leave
jbe
push
mov
xchg
push
rcrl
in
xor
push
scas
ret
cmp
nop
sbb
pop
adc
dec
dec
xor
push
push
in
jnp
pop
mov
lds
and
neg
imul
mov
mov
cmp
or
insl
aad
mov
adc
rorb
mov
dec
mov
sub
pop
inc
cmp
mov
lcall
cmpsl
pop
push
mov
fmuls
pop
call
cld
or
xor
iret
in
imul
xlat
cli
mov
in
push
sub
popa
aas
add
push
pusha
popl
fcoml
daa
cmp
mov
mov
xchg
pop
cmp
rorl
ror
in
loop
aaa
stos
dec
rorl
daa
pusha
mov
lods
add
sbb
mov
imul
aaa
pop
sbb
fsubrl
cwtl
out
cmpsl
sbb
dec
or
xchg
sbb
daa
cmp
movsl
and
int
jbe
mov
hlt
in
push
repz
mov
mov
in
mov
popa
jmp
imul
jge,pn
cmp
dec
adc
clc
push
mov
into
sub
xchg
and
scas
pushf
scas
mov
xchg
jnp
pop
lock
ja
sub
xchg
and
inc
mov
inc
add
or
loope
negb
xchg
xor
cmpsb
inc
mov
pop
push
mov
cmp
iret
xchg
inc
movsb
jp
popf
mov
and
push
dec
xlat
add
ljmp
jp
pop
push
cmpsb
cmp
mov
sarb
mov
add
cmpsb
mov
mov
ret
xchg
movhps
mov
adc
aam
mov
idiv
rcr
insb
fdivr
out
insl
loop
inc
sbb
cmpsl
push
aad
test
sbb
in
je
rolb
inc
fsubrp
jae
adc
out
shrb
xor
lods
or
sbb
xchg
outsl
sub
ljmp
frstor
cmp
adc
inc
pop
ss
pop
enter
mov
xor
ficompl
mov
lds
fucomip
add
sbb
mov
clc
xor
mov
repz
loope
repz
or
ss
loopne
out
mov
dec
push
xchg
aam
test
lods
mov
sahf
cmp
aam
stos
ret
fcom
cmp
inc
ror
outsb
ljmp
xchg
aas
movsl
iret
fisttpl
les
fistpl
mov
leave
mov
jne
jmp
jno
popa
divb
daa
in
shll
add
jns
lods
sti
pop
insb
jmp
repz
stos
rcll
sbb
cmp
xor
in
and
push
lea
fisubs
sti
js
cmp
xor
add
fnstcw
aad
data16
stos
push
cli
movsl
dec
push
sbb
xchg
xchg
lods
and
jb
mulb
movsb
sbb
mov
lods
jg
inc
cmp
push
inc
movsl
cmp
mov
pop
jge
or
test
inc
es
movsb
pusha
pop
pop
aam
popf
shll
popf
sub
roll
dec
outsb
xor
and
mov
mov
jl
dec
mov
push
or
mov
out
or
pop
js
jge
dec
shl
daa
shl
jo
enter
pop
hlt
push
ja
jl
std
jp
ds
icebp
pop
repnz
scas
or
je
and
mov
cmp
mov
or
inc
xorb
dec
sti
sub
pop
inc
or
mov
or
or
jns
mov
outsl
fwait
js
push
and
shll
dec
jnp
mov
jmp
lods
push
addr16
addr16
ds
stos
js
cmc
xchg
adc
adc
ror
fmulp
jg
in
test
push
xchg
push
insl
cltd
testb
xchg
adc
pop
cmp
push
add
sub
mov
clc
pop
or
les
pop
jne
cmc
mov
inc
pop
popf
push
mov
pop
mov
aas
xchg
fdivrl
inc
mov
xor
mov
cmp
jbe
gs
sbb
inc
out
rcrl
mov
or
push
fsubrs
xor
stos
mov
and
sub
fwait
ret
ss
jo
jo
xchg
push
inc
stos
insl
add
cmp
jmp
mov
xor
xor
push
cld
je
add
or
xor
jp
movsb
inc
dec
mov
xchg
ja
adc
sub
add
mov
jne
repz
int
or
dec
fsts
cmp
dec
fldt
addr16
sub
push
push
or
cli
test
and
adc
stc
lret
into
sub
adc
fnstcw
shrl
mov
int
inc
jb
and
mov
mov
add
lods
ljmp
sbb
xor
sti
imul
imul
mov
arpl
mov
xchg
push
test
and
push
lret
mov
gs
inc
xchg
mov
xchg
mov
xor
add
ficoms
jne
shll
repnz
sbb
push
or
xchg
cmp
xor
cmc
mov
dec
mov
ljmp
push
ljmp
cli
mov
out
add
cmpsb
jle
adc
fldenv
aaa
jne
out
jmp
scas
ds
icebp
sub
adc
stos
mov
add
mov
inc
loope
cmp
lods
sbb
mov
lds
mov
loopne
shl
jl,pn
jb
mov
inc
and
adc
xchg
out
adc
mov
xor
rclb
outsl
jns
adc
shll
jp
test
aas
adc
mov
mov
fwait
mov
iret
ss
loope
sbb
sub
and
mov
jnp
push
popa
jmp
and
adc
mov
inc
in
outsb
cmp
faddl
push
in
stos
lahf
pop
js
sub
sub
mov
pop
jno,pt
outsl
jg
xchg
pop
shr
cmpsl
cmp
sbb
nopl
loope
xchg
ja
in
or
dec
idivl
jg
and
inc
or
stos
adc
jns
and
stos
or
mov
loope
repz
sar
test
fiadds
lret
adc
fwait
mov
mov
xchg
lcall
ljmp
lahf
adc
jle
out
lods
pop
popf
imulb
inc
or
xchg
cwtl
adc
xor
xchg
inc
pusha
dec
sub
lret
push
sbb
sbb
shrb
aad
nop
mov
pop
mov
or
jns,pt
sbb
pop
lret
scas
sub
push
aas
inc
adc
xor
dec
pusha
dec
cmp
xchg
lods
fwait
mov
repz
les
gs
clc
cwtl
adc
sbb
jmp
mov
gs
inc
enter
jle
dec
push
push
stos
inc
add
jbe
or
fdivr
pop
xchg
jns
or
push
push
outsb
wrmsr
ja
xor
sub
arpl
stos
insl
sub
lea
cmc
stos
enter
cmp
mov
xchg
add
js
fs
xchg
pop
out
xor
icebp
push
cmp
and
xlat
les
sbb
pop
mov
mov
add
fidivs
and
jae
imul
ljmp
and
add
sbb
xchg
jns
testb
inc
clc
xor
sbb
stos
js
in
inc
les
mov
pop
mov
out
push
pushl
orb
gs
jecxz
cmpsl
gs
cli
push
push
in
sub
sbb
and
daa
ficompl
xchg
out
jl
bnd
scas
iret
lret
stc
mov
add
xor
fs
movsb
xchg
inc
rcrl
loope
loopne
push
mov
popa
mov
pop
je
rcrb
pop
imul
push
cmp
cmp
xchg
xchg
xor
mov
mov
sbb
mov
pop
cmp
xchg
inc
shlb
jge
inc
add
inc
cld
pop
lods
inc
xor
mov
dec
out
lret
fmull
jo
mov
jg
push
or
sub
lret
xchg
mov
mov
mov
or
xor
dec
call
sub
pop
pushf
xor
sub
dec
pop
sbb
movsl
aad
ljmp
insl
iret
mov
dec
js
cmp
fwait
xor
and
sub
jnp
or
jecxz
and
xor
cmp
out
sub
inc
mov
jns,pn
cmp
arpl
les
mov
sub
mov
cmp
fnsave
cmp
mov
pop
mov
add
inc
pop
lcall
mov
aam
das
mov
xor
pop
jmp
push
shr
daa
pop
sbbl
push
je
cld
loopne
ret
shll
sub
inc
fisubs
je
xchg
int
insb
or
je
std
pusha
aas
inc
mov
lods
xchg
popl
iret
ret
mov
mov
out
mov
jno
ja
stos
shrb
mov
dec
cmp
ss
add
xchg
mov
ja
and
jne
loope
and
leave
mov
scas
pop
mov
leave
xchg
js
lcall
into
dec
jmp
rcrb
xchg
cmp
repnz
sub
mov
cmp
pop
int
or
cli
outsl
sub
push
add
mov
jbe
pop
lcall
mov
mov
cmpsb
pop
movsb
add
or
and
jb
mov
rcrb
stos
std
lret
mov
mov
fisubl
jne
insb
pusha
ljmp
into
fidivrs
rorb
adc
mov
and
call
push
pushw
jle
xor
add
xchg
cmp
or
cmpsl
xlat
fdivrl
shrb
aam
push
fs
xor
setle
pop
sbb
stc
xchg
inc
pop
adc
adc
or
inc
mov
fstpt
mov
mov
setge
subl
add
sub
adc
push
mulb
out
mov
add
mov
ljmp
ret
ss
loope
xor
mov
popf
xor
mov
fld
xchg
add
out
jnp
cli
cmpsb
fisttpl
movsl
cmp
aas
test
dec
inc
pushf
insb
mov
cwtl
test
pop
lock
dec
add
sbb
fidivl
add
cwtl
out
sbb
dec
xor
insb
test
xor
mov
test
out
add
fldl
jno
js
inc
paddd
cmp
cltd
insb
pop
movsb
andb
shrb
sarl
insb
xchg
sub
pop
mov
pop
inc
movsb
nopl
sbb
imul
push
out
in
adc
mov
loop
mov
dec
adc
cmp
enter
adc
mov
mov
inc
pop
xchg
mov
sbb
and
mov
jnp
ss
in
lods
jno
cmpsl
pop
les
ljmp
cltd
pop
mov
xlat
add
lcall
icebp
xor
or
js
icebp
vshufps
aas
in
jl
data16
dec
andb
int3
sbb
clc
in
or
rol
loope
nop
mov
dec
outsb
loope
movsb
js
shrb
inc
xor
scas
push
inc
add
cmp
cmp
shll
out
and
sbb
popa
inc
cmp
jns
cmc
pop
inc
jl
cmp
xchg
mov
push
dec
mov
jb
hlt
push
pusha
or
push
mov
pop
sbb
sub
clc
sub
or
mov
cmp
xchg
or
shl
jne
push
pop
pusha
cmp
dec
scas
add
lret
rcrl
fwait
jmp
in
mov
es
lock
dec
cmp
and
movsb
sarb
orl
les
push
js
call
out
push
pop
ficoml
xchg
inc
outsl
pop
xchg
std
pushf
jbe
and
mov
loope
fstpt
in
mov
sub
cmp
or
jbe
sub
loopne
push
repz
test
enter
dec
jmp
pop
mov
clc
cs
incl
pop
mov
cmp
dec
adc
xchg
push
adc
gs
mov
add
lahf
cmpsl
pusha
add
popf
hlt
dec
imul
fxtract
pop
sarb
fwait
repz
fsubrs
and
sbb
or
lahf
aaa
lea
mov
ret
push
or
jbe
jns
repz
fcoms
cmp
je
faddl
dec
scas
les
push
fcoml
fisttpl
push
add
jmp
out
lcall
nop
mov
dec
xchg
loopne
inc
cmpsl
popa
inc
jb
sbb
xor
add
dec
testb
in
and
lods
shrl
in
insb
xchg
push
or
push
add
jg
dec
stos
cmp
mov
mov
xor
jge
or
int3
and
push
outsl
add
lahf
xchg
xor
cmpxchg
les
push
mov
lahf
push
push
push
syscall
mov
push
loopne
loope
xor
out
enter
or
add
and
xchg
xor
jle
add
out
je
out
loop
pushf
mov
in
jecxz
mov
sub
mov
push
imul
fbstp
push
fnsave
int3
in
jp
mov
adc
cs
push
pusha
je
in
mov
lret
cs
mov
push
mov
out
pop
cmpsb
loope
inc
dec
sbb
inc
mov
popl
test
pop
pop
mov
movsb
xchg
pop
xchg
push
sbb
mov
scas
stos
movsl
repz
mov
les
pop
fbstp
xchg
push
pushf
sahf
sbb
lods
xor
push
jno
cmc
sbb
inc
cmp
out
cltd
cld
xchg
movsb
sub
add
xchg
iret
aad
jl
pop
out
ljmp
je
ss
rcl
mov
popa
fbld
inc
mov
inc
test
sub
std
aaa
or
orl
mov
jg
ljmp
sbb
in
or
or
jp
adc
fsubl
cmpb
xor
imul
adc
fcomip
add
out
pop
jno
out
dec
sub
movsl
rclb
xor
xchg
xchg
ret
dec
mov
and
pop
xchg
pop
jg
in
sbb
sbb
scas
ja
nop
into
rclb
outsb
xor
jp
mov
pop
pop
pop
je
jmp
mov
ret
hlt
xchg
stos
mov
rcrl
outsb
movsl
lahf
or
adc
repnz
cmpb
push
ret
push
bound
pop
not
mov
sbb
mov
push
mov
and
je
add
pop
vmread
test
add
nop
sbb
push
xchg
repz
lea
icebp
scas
and
jno
mov
rcll
je
push
xlat
xor
dec
or
add
stos
scas
repnz
movsb
in
mov
cltd
or
adc
hlt
pusha
mov
dec
dec
mov
mov
pop
pop
ds
ret
iret
scas
xlat
out
pop
sub
inc
sub
ljmp
or
pminsw
leave
cltd
stos
push
ljmp
mov
cltd
cmp
add
push
push
dec
inc
jp
jg
mov
in
adc
cmp
push
and
cmc
push
rcrb
out
hlt
fcompl
imul
add
pop
xchg
sub
test
cmp
vcvttss2si
xor
add
mov
leave
stc
movsb
and
je
jp
stc
mov
adc
imul
and
inc
or
cli
mov
aam
cwtl
mov
inc
mov
out
cmpsb
ss
into
ret
scas
and
cltd
ss
loope
jns
adc
add
mov
dec
xor
sbb
or
test
fcomip
out
cmc
pop
mov
ja
sub
lds
or
xchg
mov
push
xchg
mov
dec
lsl
rorl
in
stc
mov
lods
jne
xor
jo
xor
mov
nop
mov
push
aaa
sub
rcrb
pop
call
jl
in
dec
sub
lret
or
jne
and
pop
fcomip
fnstenv
call
mov
pop
stos
jecxz,pn
inc
loopne
pop
outsl
rcr
mov
fs
push
xchg
sbb
shr
sbb
xor
dec
shl
imul
push
mov
lods
or
std
jo
flds
test
hlt
into
sbb
cmp
testl
cmp
xchg
xchg
sub
lret
hlt
cmc
insl
and
pop
pop
cmpb
enter
das
popf
jg
push
out
out
sti
mov
mov
dec
shl
popa
lods
std
mov
jb
pop
jae
add
sbbl
push
aam
push
call
jnp
jae
cmp
mov
mov
fisubl
pop
arpl
jg
jmp
lahf
mov
inc
lods
or
lret
jo
call
cld
jle
sbb
out
push
ja
inc
stc
adc
rcll
mov
sahf
or
xchg
lcall
xchg
fs
hlt
cmp
pusha
inc
in
icebp
and
mov
das
xchg
push
lea
imul
out
add
imulb
lea
and
sti
push
stos
js
stos
daa
and
xor
outsb
or
cmpb
ja
jmp
xchg
subb
sti
mov
or
mov
lret
mov
iret
jge
aam
mov
jae
mov
fxch
mov
subb
sahf
inc
jno
cmp
test
dec
insl
pop
push
cmc
jae
push
sti
insl
xchg
jb
aad
mov
push
aas
xchg
xchg
std
rcrl
jl
cmp
lea
test
cmp
loopne
int3
insb
arpl
adcl
cmp
std
dec
sarb
jmp
mov
rcrl
ud0
add
pop
adcl
add
xchg
lods
sub
jo
outsb
ds
into
pop
jns
adc
arpl
insl
jae
in
stos
test
xor
rol
pop
ret
cmp
cmpsb
sbb
pushf
mov
dec
lret
lret
sbb
mov
and
jo
pop
cmp
add
cwtl
lods
or
mov
or
cwtl
in
or
lcall
std
pop
sub
es
test
or
out
xchg
insl
and
fidivrs
jne
int3
mov
cmpl
jg
fcmovnu
lods
test
pop
out
in
push
and
or
cmp
and
mov
aas
fucom
fs
push
xor
jae
out
jl
mov
out
xor
test
shr
out
fadd
fscale
sbb
rcrb
cmc
cld
lea
sub
icebp
mov
jo
icebp
aad
popf
shlb
cmp
jne
xchg
cmp
xor
mov
call
mov
push
sbb
iret
int
fwait
cwtl
push
jmp
cmp
mov
jp
aam
lret
push
dec
sub
rol
dec
sub
lods
ret
lea
cwtl
or
lcall
xor
mov
dec
add
cmpsl
je
adc
aaa
test
cmp
mov
pop
icebp
adc
mov
int3
hlt
popf
mov
ret
js
pop
testb
clc
mov
lret
mov
das
aaa
xlat
cmpsb
aam
cmp
mov
xchg
cmp
jp
and
psllq
or
enter
out
repz
test
cmc
or
cmp
fsts
das
push
js
lret
mov
xor
or
rclb
xor
into
mov
stos
adc
lahf
lret
cli
sbb
jnp
jo
fistps
and
loope
adc
into
mov
mov
pop
xchg
or
jbe
push
push
cltd
add
adcb
pop
mov
loope
push
mov
mov
push
mov
into
mov
movsb
mov
pop
ret
or
inc
pusha
jmp
sti
mov
jae
xorb
frstor
or
mov
rcrl
lods
mov
cld
inc
add
bound
sub
xchg
lcall
mov
jp
dec
pop
mov
test
mov
cmp
cli
dec
mov
mov
or
adc
mov
aas
xchg
mov
sbb
mov
mov
shlb
shll
sbb
divl
aam
lods
sbb
inc
imul
sub
pop
push
insb
shl
cmp
push
add
clc
pop
loope
jne
lock
ja
jns
ds
jp
mov
movsb
pop
xlat
add
mov
pslld
lds
sub
hlt
mov
jmp
and
push
xchg
les
jae
inc
mov
dec
mov
in
pop
xchg
push
cmp
or
mov
xchg
pop
cmp
mov
scas
daa
sub
je
and
loope
cmp
test
dec
mov
insb
lods
sub
xchg
mov
dec
xchg
or
fildll
ds
jmp
jb
gs
and
cmc
cmp
daa
les
add
decl
push
rcr
pop
je
jnp
jl
pop
adc
mov
insb
add
push
ret
jecxz
arpl
test
jbe
cltd
sti
push
push
fs
incl
pop
aad
or
and
dec
mov
pop
ljmp
pusha
inc
and
and
xor
ss
lea
and
xor
pop
xor
adc
outsb
shlb
cmp
inc
std
sbb
stos
sub
xchg
or
fiaddl
mov
jle
repnz
add
and
fsubr
jno
mov
cs
xor
jecxz
test
sbb
mov
aam
pop
cmpb
push
fadds
push
cmpsb
mov
hlt
test
push
adc
push
popf
xchg
leave
mov
jecxz
test
jno
leave
dec
jle
push
pop
scas
pusha
mov
rolb
pop
dec
inc
aam
push
dec
and
mov
stos
push
ss
inc
outsl
jb
fbstp
lahf
xlat
sbb
lds
mov
inc
fistl
push
mov
push
sub
push
test
sbb
lods
jecxz
xchg
sbb
popf
fwait
adc
fistpl
or
movsl
mov
stos
sbb
mov
cmp
pop
push
xchg
repnz
dec
daa
sub
and
add
adc
push
fidivrl
mov
testb
sub
mov
push
cld
fwait
mov
test
popf
dec
stc
je
cli
mov
cld
jnp
mov
mov
cmpsb
mov
fisttpl
inc
fs
xor
idivl
cvtdq2ps
pop
dec
mov
adc
cli
aaa
dec
mov
arpl
stos
add
jnp
mov
pop
add
cli
mov
jle
pop
jle
inc
mov
imul
xor
stc
cmp
and
cltd
push
sub
xorb
adc
pushf
push
mov
ss
pop
mov
lods
mov
mov
fcoms
movsb
mov
sbb
sbbl
test
pop
inc
jp
push
ds
adc
movsl
add
add
popa
fwait
cmp
cld
outsl
sub
std
xor
or
adc
adc
repz
popa
add
dec
idivb
mov
aad
mov
fsubs
mov
pop
inc
jnp
cld
lock
mov
dec
jae
fisttpl
mull
in
in
incl
xor
mov
push
inc
aaa
xchg
dec
dec
mov
mov
fidivs
jl
sbbb
jnp
movsl
and
jb
add
aaa
sbb
js
test
push
in
jg
and
mov
jl
sub
nop
das
pushf
cmp
hlt
dec
cltd
incl
xor
aad
add
mov
or
inc
and
cltd
mov
adc
daa
test
dec
fs
call
mov
cmpsl
xchg
or
jmp
rol
adc
or
js
ficompl
cld
and
shll
add
and
mov
pop
mov
sub
psllq
sbb
mov
inc
adc
or
pand
jge
out
es
mov
movsb
cwtl
pop
clc
fsubs
pop
outsl
cs
jno
ret
jnp
bound
movsb
daa
cli
jno
fs
sti
cmc
popa
aad
mov
lcall
inc
or
inc
cmp
icebp
jge
xchg
popf
stos
sbb
fldenvs
in
inc
or
dec
add
std
inc
mov
and
movsb
lret
daa
aam
add
sub
lea
xchg
scas
cli
fwait
mov
fmul
out
cltd
loope
daa
cmp
movsb
call
arpl
rcrl
jnp
add
dec
jne
pop
mov
cmp
enter
lret
nop
dec
adc
jl
push
pop
cld
lds
mov
adc
in
inc
add
mov
ss
shrb
movsl
mov
cwtl
test
cmp
pop
std
push
in
or
mov
in
pop
lcall
jo
aas
mov
and
lahf
xchg
pusha
aad
cwtl
int3
or
xchg
push
push
add
ret
xchg
mov
push
jp
inc
scas
outsb
mov
jmp
aaa
test
sub
pop
xchg
mov
arpl
out
lea
sub
es
add
sahf
fs
jmp
shll
jecxz
bound
mov
push
inc
dec
insl
fiaddl
scas
lahf
mov
adc
push
mov
xor
xor
cs
pop
sub
jl
inc
mov
mov
lret
ss
xor
hlt
or
add
mov
cwtl
xchg
lahf
mov
xchg
xchg
lahf
adc
scas
xchg
out
cmp
les
mov
jge
and
cmp
repz
arpl
iret
xor
ja
mov
sbb
sbb
aad
pop
cmp
adc
push
push
add
inc
or
jle
add
iret
jmp
or
pop
sahf
icebp
xchg
out
xlat
mov
fdivr
cmc
nop
clc
daa
imul
cmpsl
stos
mov
push
inc
jo
mov
setb
fcmovu
pop
sbb
test
adc
call
fstp
xchg
push
nop
dec
sub
mov
mov
adc
mov
lods
jmp
test
pop
xor
cmpsl
sarl
dec
imul
jge
aam
in
jb
arpl
push
xlat
hlt
lea
inc
loope
popa
sti
xchg
test
data16
mov
sbb
aad
flds
cmp
in
sub
sub
rcll
mov
adc
sub
popa
sbb
adc
lods
shll
inc
push
sahf
stc
mov
jmp
into
shrl
hlt
hlt
sarl
add
xorb
mov
lret
stc
pop
add
lds
adc
outsl
dec
inc
pop
jbe
cmp
scas
jmp
movb
inc
add
js
test
cmp
nop
stos
xor
mov
xor
bound
adc
mov
lea
sub
and
arpl
inc
inc
inc
inc
or
sbb
cmp
mov
mov
xchg
sbb
imul
mov
cmpl
pop
dec
mov
mov
gs
and
mov
arpl
popa
imul
or
mov
cmpsl
call
xlat
out
and
lcall
movsb
cmc
pop
sub
scas
gs
push
lods
cld
outsb
out
outsb
gs
das
cmp
sub
pop
pop
pop
mov
in
jbe
and
aam
repz
lock
xchg
push
adc
cmp
adc
pop
insb
xchg
or
lods
pop
popf
movsb
jecxz
scas
xchg
pop
dec
push
mov
xor
aaa
movsl
enter
loop
cld
mov
inc
mov
inc
mov
and
inc
daa
cmp
sbb
cwtl
add
sub
sbb
pop
out
or
movsb
xchg
test
mov
jge
mov
lock
adcl
rorb
mov
push
jl
inc
lret
cld
mov
js
sbb
test
loope
add
adc
rep
mov
cmc
popf
cmpsb
addb
jmp
pop
pusha
je
mov
push
rcll
rolb
in
sbb
fxtract
mov
adc
xlat
mov
lahf
cltd
aaa
jge
dec
jnp
repz
xor
les
ss
mov
bound
icebp
mov
mov
add
sbb
cmc
insl
and
or
sahf
mulb
daa
inc
scas
xchg
pop
pusha
xor
lea
aas
or
in
mov
dec
sub
jmp
aaa
push
xor
in
daa
xor
xchg
push
addr16
insb
pop
cld
in
pop
repz
std
push
int3
lcall
and
pop
dec
insl
lldt
test
arpl
cs
test
out
js
push
es
imul
bound
add
dec
outsb
pop
lret
sbb
jge
push
int
sub
jns
lods
cli
fcmove
ds
fistps
push
shr
cmp
xor
xor
xchg
pop
fistps
movsl
xor
push
or
roll
cmp
lock
mov
ljmp
test
out
sbb
sbb
pop
lea
cs
lock
nop
inc
mov
and
stos
add
out
push
mov
inc
les
jo
out
pushf
pop
add
fwait
mov
sbb
divl
xchg
cmp
and
nop
pop
scas
mov
xchg
pop
mov
insl
test
adc
imul
cmpsl
stc
sub
add
nop
lcall
iret
clc
cli
jo
out
lcall
cltd
pop
orl
sahf
sbb
cs
jmp
jae
and
pop
iret
enter
testb
and
fildl
mov
scas
clc
clc
push
jae
js
push
dec
outsb
pop
insb
lcall
sub
mov
pop
test
sub
in
and
mov
aaa
sub
enter
dec
xor
out
pop
pop
lcall
insl
mov
lock
xchg
leave
mov
out
cmpsl
rcll
jbe
pop
andb
jge
hlt
jl
sbb
test
lds
mov
sbb
fs
lret
mov
imul
mov
cmpb
ss
enter
inc
je
or
jmp
fld
xor
xchg
test
mov
jg
pop
mov
mov
mov
lahf
push
lds
int3
js
out
and
xor
cmp
mov
and
jbe
jmp
pop
idiv
fcomps
mov
adc
hlt
push
inc
xchg
popf
into
icebp
mov
in
les
pop
shrb
xor
cli
add
int
pusha
xor
mov
cmp
int3
mov
in
xchg
mov
cmp
sbb
rol
dec
insl
push
sub
push
push
in
call
xchg
cmp
lret
xor
in
xor
loopne
test
xlat
cmp
ror
pop
lods
pop
pop
cmp
clc
pop
dec
xchg
mov
iret
and
mov
ja
pop
in
test
cmp
xor
mov
js
mov
mov
icebp
mov
xchg
mov
fistpll
test
test
pop
lods
imul
cmp
xor
mov
pop
push
xchg
jmp
cli
mov
xchg
mov
addr16
xor
push
loop
add
sub
ror
out
sti
in
mov
adc
cwtl
mov
sbb
push
lcallw
out
subb
in
dec
jns
jns
js
test
cmp
xor
or
mov
movsb
iret
pop
xchg
xchg
pop
fisttps
jbe
mov
cmp
add
ret
imul
cmp
push
mov
rcrb
and
mov
scas
aaa
repnz
fwait
out
and
xor
xor
lods
shll
ss
fs
fidivs
inc
add
dec
sbb
insb
mov
aad
fwait
mulb
stos
jno
sub
jmp
lods
mov
and
dec
add
jecxz
into
mov
movsl
mov
mov
jg
push
push
lret
inc
mov
loop
add
pop
sti
and
insb
pop
jl
scas
pop
xchg
push
popf
je
stos
outsb
dec
pop
jp
xor
mov
sbb
test
xor
pop
pop
dec
adc
in
mov
xor
pop
fsubrl
inc
mov
ljmp
ror
sbbl
xor
cmp
sar
sbb
mov
imul
hlt
popf
push
jae
jae
call
inc
cmp
dec
lds
xchg
cmp
fildl
jmp
loop
adc
ljmp
sbb
sbb
pop
pop
sbb
inc
mov
dec
xor
mov
inc
mov
sbbb
fstl
dec
pop
mov
dec
pop
pop
and
inc
jge
out
push
inc
loope
mov
shr
es
jle
jmp
je
sbb
jl
sbb
cld
pop
inc
mov
cwtl
sub
sub
ljmp
mov
mov
test
dec
leave
add
aad
shl
push
mov
int
dec
or
cld
push
fs
or
jne
mov
stos
push
les
ficompl
cltd
and
sbb
inc
and
adc
ss
push
shlb
mov
inc
and
sahf
or
jge
daa
add
fstpt
leave
fisubs
in
pop
xor
insl
adc
lahf
flds
pmullw
dec
bnd
add
sarl
and
sub
or
and
mov
pop
ror
mov
sbb
arpl
lods
cmp
ljmp
push
push
or
int3
stc
insb
xor
add
and
fsubrp
frstor
loope
mov
nop
test
into
fdivl
js
cltd
iret
or
mov
cmpsl
aam
negb
add
shlb
jg
scas
out
ret
mov
cmp
sbb
lahf
mov
mov
adc
icebp
sbb
sti
mov
xor
mov
arpl
pop
mov
lahf
add
mov
dec
cld
and
sub
cmp
jb
add
sub
scas
adc
ss
out
mov
or
and
adc
popf
mov
scas
jecxz
fcompl
pop
outsb
test
sbb
test
repz
mov
adc
mov
push
jno
aaa
das
fnsave
sahf
cmp
jae
imul
fadd
gs
lock
out
xor
push
lgdtl
cmp
movsl
jmp
ret
push
es
pushf
cmpsl
push
push
int3
sar
es
xchg
mov
in
leave
cmp
notl
or
cmpsb
and
sub
jne
jbe
cmp
mov
cmp
fcomp
jle
inc
pusha
pop
js
or
sarl
xchg
dec
imull
aad
adc
dec
and
popf
push
cmc
das
dec
dec
push
xchg
and
fwait
jecxz
mov
subl
test
popa
aam
add
negb
stc
ja
fisttps
rcrb
icebp
mov
gs
pop
xchg
jo
stos
sbb
addr16
adc
cmc
fstpl
jge
into
out
xchg
mov
xchg
inc
cli
xchg
mov
mov
dec
mov
sbb
cmpsb
addr16
xchg
cmp
mov
push
testl
sbb
mov
nop
mov
mov
inc
mov
cmpsb
pop
fistpl
jbe
in
pop
jne
push
or
mov
and
push
stos
mov
stos
mov
outsb
cmpsl
mov
mov
out
mov
push
es
mov
fstpl
pop
xchg
dec
xchg
dec
testb
xchg
ds
lds
cwtl
xor
cmp
cmp
scas
cmc
mov
push
or
pop
pop
clc
stos
push
or
cltd
subb
pop
call
push
out
imul
adc
inc
xchg
jae
dec
push
cli
lods
inc
pushf
sbb
or
gs
aas
lcall
jg
cltd
insb
js
cltd
in
insb
into
fsub
aas
repnz
xor
mov
pop
cld
push
outsb
mov
xor
mov
add
cltd
jp
and
cltd
xor
pop
fnstsw
mov
sahf
push
mov
xor
arpl
repz
jmp
jg
pop
and
xchg
sub
and
add
xor
jp
jge
push
mov
fistpl
push
jmp
mov
int3
push
outsb
xor
pop
out
cmp
outsl
negl
insb
inc
inc
fdiv
seta
push
push
cmp
xor
jle
adc
imul
mull
mov
and
push
ljmpw
push
push
lds
sbb
xor
pop
sub
mov
iret
fs
int
shll
push
pop
mov
inc
imul
popf
out
xor
pop
testb
in
jo
andb
inc
in
out
mov
cwtl
push
add
adc
inc
pushf
popf
shll
add
add
mov
arpl
stos
adc
scas
mov
ja
repnz
jle
jmp
push
adc
out
sub
xchg
ficoml
in
data16
adc
outsb
jl
data16
dec
and
adc
cmp
out
dec
or
mov
into
leave
jno
jbe
xchg
adc
out
fdivrs
vpackssdw
cmp
cmp
imul
mov
pop
lea
sbb
sub
adc
push
in
arpl
mov
xor
xchg
or
es
mov
xchg
int
xor
jp
xchg
mov
push
fimull
out
inc
pop
cmc
xchg
out
fbstp
cmp
movsb
mov
jne
in
mov
int
xor
repz
pop
push
stc
stc
pusha
mov
aam
jnp,pt
xor
lds
or
out
pop
movsb
xchg
fnstcw
int
push
mov
sub
mov
or
mov
jns
orb
aaa
dec
repz
loopne
or
xor
xor
popa
dec
jl
cmpl
rorb
pop
pop
mov
ja
lcall
xchg
pushf
mov
pushf
cmp
and
scas
lock
lock
sub
popa
rorl
daa
lock
out
fcoms
mov
lret
mov
adc
arpl
out
dec
test
jl
mov
in
ss
in
mov
cmpsl
fbstp
bound
sbb
add
fidivrs
pushf
jmp
sbb
sbb
int
adc
or
adc
xor
mov
sub
int
sbb
fisubs
mov
pop
push
adc
mov
fs
inc
or
dec
cmp
das
out
scas
nop
stc
cltd
outsl
aad
add
enter
and
mov
dec
mov
in
outsl
adc
pushf
pop
and
and
mov
xor
cld
shrl
and
ds
fs
inc
mov
stos
pop
into
test
fildl
jae
enter
push
cmpsb
fbstp
sti
movsl
shrb
fwait
sub
cmp
lcall
mov
xchg
push
sbb
dec
inc
rorl
ss
mov
outsl
das
push
ds
push
inc
cmp
inc
jp
mov
test
out
fcoms
sub
sub
scas
fcomip
mov
insl
sahf
and
sbb
adc
adc
enter
std
testl
mov
mov
cs
stos
mov
xchg
cmpsl
fs
cld
or
leave
sti
mov
xor
mov
mov
jnp
popf
adc
xchg
popa
pop
lea
push
sub
in
inc
subl
mov
mov
xlat
pop
push
and
xor
inc
fnstcw
repz
nop
out
jp
mov
add
outsb
mov
out
push
test
mov
mov
stc
cmp
pop
test
sub
pop
fldenv
scas
push
ret
sub
xor
xchg
mov
jno
adc
inc
push
daa
cmp
push
mov
sub
loopne
lea
cmp
inc
or
or
push
jl
jle,pn
push
ds
sbb
cmpsb
jp
mov
inc
insl
mov
lret
addl
mov
or
std
rcrb
pop
xor
filds
je
popa
mov
into
or
fimull
jo
imul
jo
aad
lock
jmp
fs
adc
enter
xchg
mov
jbe
sub
mov
imul
pop
cwtl
push
nop
jno
fnstenv
popf
mov
mov
fwait
lods
test
inc
orb
ret
cmc
mov
sbb
add
shl
fdivrs
add
sbb
test
fstpl
popa
out
push
fbstp
cmp
les
mov
imul
in
sub
xchg
inc
lcall
mov
xor
adc
loop
icebp
out
mov
ret
pop
ljmp
fcomip
test
jge
pop
cwtl
jge
lods
dec
xor
push
loop
jbe
imul
jg
lock
out
jmp
mov
xchg
daa
in
fstl
pop
inc
push
cmpsb
adc
fdivrl
mov
push
rcr
jmp
insl
cmp
icebp
xor
mov
mov
iret
sub
mov
lahf
lret
stos
mov
notb
ja
sahf
push
push
push
fildl
xor
sbb
add
pop
xor
hlt
in
xchg
and
push
jo
lods
divl
ret
push
adcl
sbb
sbb
into
enter
mov
js
scas
xchg
sbb
scas
inc
inc
xor
mov
inc
shrl
movsb
or
xchg
inc
xchg
push
jb
sbb
add
repnz
out
jo
loopne
sti
xlat
in
xchg
and
lock
in
sbb
jmp
rcl
jno
sbb
cmp
mov
xchg
add
xchg
nop
xor
sbb
aas
out
enter
xchg
mov
jge
mov
fcomps
stos
xor
out
je
test
mov
icebp
mov
lahf
icebp
and
in
shlb
pop
sub
sub
nopl
jecxz
loopne
xchg
rcr
pop
push
data16
imul
adc
xor
mov
mov
ds
std
orb
les
mov
out
lret
and
mov
add
movsl
divb
scas
jge
inc
ljmp
fisubrs
out
sub
jmp
push
adc
in
dec
xor
leave
mov
inc
or
xchg
inc
insb
loopne,pt
mov
int
sahf
mov
insl
lahf
xor
lods
jne
pop
movsl
mov
jmp
or
ljmp
push
jecxz
inc
lcall
rcll
dec
pop
andl
sbb
int3
pop
pushf
pop
cmpsb
inc
pop
cld
in
xor
push
aaa
outsb
or
xchg
arpl
les
jns
cs
jl
dec
rcr
cmc
sub
das
rolb
call
popl
mov
sbb
mov
cmp
cmpsb
cmp
jne
jo
jmp
imul
pop
push
jl
fldl
leave
ljmp
pushf
sub
cli
jae
rcrb
test
mov
hlt
je
jno
inc
shrl
iret
adc
jo
movsb
pop
jecxz
int3
push
inc
outsb
loope
imul
sbb
cltd
fwait
jbe
pop
push
aaa
hlt
cli
dec
mov
sub
sbb
cmp
rolb
mov
xchg
and
scas
gs
fisubrl
sbb
sub
int3
dec
mov
and
les
stos
scas
std
mov
pop
mov
add
push
cmpb
lds
fadds
sub
xorl
xor
pop
inc
push
pop
xor
ljmp
sub
repz
cmc
andb
mov
pop
sub
das
mov
addr16
loopne
pusha
enter
mov
outsl
fwait
or
xchg
cmp
int
insl
add
inc
xchg
into
bnd
add
mov
imul
adc
lods
add
sbb
add
lods
and
xchg
push
mov
sub
std
ss
push
out
sub
es
pusha
xchg
add
je
inc
fs
xchg
movsb
push
jno
push
inc
movhps
mov
adc
sbb
sub
mov
xchg
adc
mov
fdivrl
jg
xlat
inc
inc
cmp
jno
out
xor
jae
out
fcmovb
arpl
add
mov
into
mov
and
test
pop
cmpsl
repz
outsb
push
mov
mov
setle
jmp
sub
mov
mov
rolb
sbb
push
pop
push
lods
mov
or
mov
js
fildll
sbb
push
mov
sub
idiv
xchg
aaa
inc
adc
rcll
mov
ret
call
cmp
std
dec
push
shrb
adc
sub
cmp
pop
std
data16
adc
stos
mov
or
hlt
add
shrl
sbb
add
mov
sbb
push
mov
or
ljmp
inc
adc
dec
push
and
outsl
or
pop
rclb
div
push
xchg
mov
mov
mov
fnstenv
ljmp
and
mov
cli
and
cmp
sbb
mov
call
frstor
repz
cli
cmp
enter
stc
or
shrl
aad
or
mov
jae
ret
test
ret
mov
enter
ljmp
cmp
jnp
ret
push
mov
mov
xchg
pop
stos
gs
push
and
mov
ds
push
or
pop
aam
das
sbb
lock
lret
je
fstp
mov
mov
sahf
dec
out
ja
in
repnz
inc
push
mov
mov
lock
mov
sub
pop
lock
arpl
je
push
ja
fldl
out
inc
pop
jb
add
das
jns
fwait
lods
mov
or
mov
sub
pop
pop
movsb
mov
pusha
scas
adc
jle
lock
lods
aaa
push
mov
mov
jl
ret
jb
or
adc
and
ljmp
mov
jge
lds
fdivs
inc
pop
inc
add
sub
sbbb
lods
xor
mov
pop
mov
sbb
pop
inc
jnp
mov
push
jnp
std
filds
and
pop
push
popa
adc
cmp
bound
mov
xor
lea
ljmp
cmp
arpl
pop
sub
xchg
sahf
aas
loopne
sbb
jmp
mov
pusha
into
sub
test
outsl
and
xchg
mov
aas
and
test
push
adc
pop
aam
jbe
sbb
movb
daa
out
js
adc
mov
inc
mov
inc
pop
popf
xor
dec
xor
mov
cwtl
scas
pushl
dec
or
iret
and
sub
xchg
xor
inc
mov
imul
jnp
std
ficompl
std
jp
fcompp
outsb
incl
andb
dec
fcmovu
xor
jbe
or
or
dec
cmp
loop
imul
imul
clc
jge
cltd
ljmp
ja
add
pop
push
pop
push
xchg
mov
push
into
prefetcht0
pushf
dec
cmp
adc
std
inc
ret
sub
aad
fstpt
int
repnz
aas
aad
out
in
icebp
mov
jg
loopne
leave
sahf
jno
push
or
inc
insl
notl
mov
outsl
stos
aam
inc
jb
dec
jg
push
pop
jb
push
mov
mov
push
add
jne
repnz
mov
pop
mov
dec
stos
shr
push
ret
push
loopne
cmp
or
movsl
outsb
dec
push
in
mov
sub
rorl
xor
sub
inc
dec
sub
cmp
arpl
pop
sar
pusha
push
pop
stos
lahf
sarb
fbstp
or
sahf
pop
push
rcll
fistpll
mov
or
adc
insb
jno
inc
sbb
ds
lock
mov
std
sub
xchg
rep
lcall
mov
sbb
stc
inc
xor
jns
and
mov
push
test
lcall
push
xchg
mull
nop
inc
outsb
pusha
sub
pop
aam
fldcw
cmp
sbb
addr16
sahf
enter
jl
shll
das
insl
jnp
jae
mov
ret
and
into
icebp
xchg
hlt
je
push
lock
jae
aad
out
push
mov
mov
mov
cmpsl
pop
adc
or
push
cmp
jle
mov
aad
mov
inc
mov
mov
add
and
and
fcompl
xor
xchg
fsubr
adc
pop
repz
out
sub
mov
push
mov
fcomps
xor
xor
rolb
sahf
mov
pop
sbb
push
imul
jns
ret
inc
and
push
add
rol
mov
and
roll
sub
popf
add
inc
sbb
xlat
aaa
mov
adc
and
xchg
fldenv
pop
sub
ds
dec
out
inc
sub
xchg
test
repnz
pushf
inc
pop
bound
subb
dec
inc
or
fwait
push
cmp
lods
loope
mov
and
cwtl
aas
jbe
push
push
add
popa
pop
sub
xor
xchg
icebp
popf
mov
rol
mov
mov
jl
cmp
fstl
mov
clc
ret
and
enter
dec
push
hlt
sbb
cmp
pop
inc
sub
push
sbb
push
mov
lcall
and
incl
push
psrlq
mov
ja
jo
mov
and
mov
jg
xor
xchg
push
jmp
mov
rorb
jl
repz
xchg
inc
std
es
mov
push
mov
mov
aas
add
and
insb
mov
scas
imul
popa
push
adc
dec
aaa
fwait
jne
mov
inc
xlat
iret
sbbb
sbb
cmpsl
test
fstpl
mov
nop
iret
dec
mov
push
scas
rorb
jne
push
xor
dec
je
inc
repz
xchg
push
push
fnstcw
inc
js
test
push
sub
adc
lahf
pop
sub
in
movsl
xchg
test
ds
or
inc
out
and
pop
xor
inc
cmp
ljmp
lods
lret
pop
adc
add
lcall
mov
sbb
test
lods
xchg
jge
dec
les
rcll
jbe
dec
inc
movsb
dec
dec
int3
adcl
ljmp
mov
inc
pop
imul
sbb
lods
push
or
lea
mov
inc
mov
lret
push
and
and
pushf
jo
cmpsl
popa
or
or
push
mov
jecxz
mov
dec
jb
pop
je
jmp
outsb
add
cmpsb
and
lds
test
stos
mov
clc
push
js
or
dec
add
cmp
mov
repz
and
cli
sbb
sar
mov
mov
rorb
jno
xchg
sti
inc
lods
mov
insl
xchg
in
sti
popf
push
mov
fiadds
pop
fwait
nop
subl
out
mov
dec
mov
mov
jg
cmpsb
out
movsb
sub
adc
aas
shlb
inc
jg
sub
aaa
mov
sbb
jbe
add
fcoms
sbb
fwait
testl
push
popa
insl
rolb
sub
aaa
cmp
add
xchg
cli
lds
sbb
rorl
int
jns
pop
mov
sbb
mov
adc
sub
mov
notl
jmp
jae
lods
xchg
scas
les
xor
jne
and
loope
sahf
imul
sti
adc
fnstenv
mov
cltd
dec
lahf
push
fiaddl
icebp
fadds
xor
shlb
sbb
inc
ss
mov
mov
sub
push
mov
xchg
popa
into
mull
es
or
and
push
stos
lods
dec
cmp
shlb
cli
addr16
inc
sti
cltd
dec
out
mov
hlt
pushf
in
sub
out
add
xor
into
roll
sub
or
cwtl
pop
cs
mov
cli
dec
inc
cmpb
push
lds
jbe
insl
jnp
xchg
pop
loope
mull
inc
ds
mov
mov
popf
mov
push
es
and
aaa
outsb
mov
jmp
sbb
pop
xor
maskmovq
idivl
mov
mov
ljmp
cmp
pop
and
or
int
pusha
push
push
std
pop
nop
mov
les
imul
jge
push
pop
lret
add
or
mov
sbb
jae
xor
repnz
cmp
cmpsb
sub
idivb
cmc
mov
push
int
xchg
adc
mov
jne
stos
push
sarb
dec
cmp
cmp
mull
hlt
xchg
xor
xchg
sub
jmp
sub
add
lea
mov
pop
dec
xchg
mov
inc
xlat
xchg
imul
sahf
stc
aam
popa
cmp
mov
pop
leave
int3
mov
shl
xchg
sub
inc
loopne
dec
dec
xchg
insl
xor
push
das
xor
push
pop
adc
in
mov
enter
mov
rclb
test
sbb
sarb
shll
mov
lods
sahf
adc
push
mov
mov
stos
test
adc
xchg
xor
cwtl
inc
imul
adc
in
outsl
sar
pop
adc
repz
fsubrs
outsb
shlb
adc
jg
sbb
out
sub
imull
push
leave
out
mov
xchg
fisttpll
cld
xchg
aas
adc
inc
fcmovne
pop
mov
mov
aam
in
push
out
xlat
divb
jp
mov
andb
and
arpl
inc
movl
dec
nop
dec
cwtl
dec
out
sbb
or
pop
fcoms
or
xorl
inc
test
mov
iret
insb
xchg
dec
xchg
sub
iret
inc
ret
aaa
icebp
mov
xchg
rorb
push
jb
mov
test
xchg
push
sbb
repnz
lock
xchg
dec
and
dec
dec
jns
orb
sbb
fidivrl
aad
mov
fldl
xchg
cmp
mov
mov
pop
rcll
leave
loope
or
push
mov
mov
cmpsb
inc
xor
popf
addb
daa
mov
loop
adc
call
and
notl
mov
pop
int3
push
test
out
mov
jbe
test
daa
push
stos
push
mov
jp
or
out
aam
aas
cmpsb
push
fcmovnbe
arpl
test
mov
jb
stos
mov
sti
lcall
cltd
clc
outsl
inc
bound
fcmovnbe
repnz
mov
imul
mov
call
inc
mov
mov
pop
add
add
stos
out
fs
in
pop
inc
decl
push
cmp
jnp
push
pushf
pushf
xor
daa
mov
test
lock
xchg
test
mov
sub
jmp
insl
out
lret
fnstsw
stc
pushf
loop
sub
ficoml
popf
fwait
push
xor
dec
int3
rclb
in
lds
mov
push
nop
xchg
mov
dec
flds
gs
das
xchg
inc
sbb
vpmadcswd
lret
shll
call
mov
div
adc
scas
imul
mov
pop
cwtl
jnp
std
cmp
hlt
mov
cmpb
push
mov
sub
repnz
notb
imul
or
pop
lcall
mov
mov
loop
aaa
or
in
pop
addr16
sub
sub
push
jge
xor
xchg
repnz
add
popf
or
enter
hlt
dec
dec
adc
imul
jns
inc
enter
jmp
sbb
pop
push
lret
repz
addb
cvtdq2ps
pop
add
fdivs
divb
shlb
cmp
xchg
cwtl
rclb
xor
out
push
aaa
pop
adc
pop
test
repz
icebp
pop
jno
lods
mov
xchg
call
sub
aam
rcll
fisubs
push
pop
orl
jne
out
repnz
ret
cmpsb
popf
xchg
dec
adc
data16
pop
mov
dec
jns
pop
insb
sbb
adc
push
jb
ret
push
inc
lahf
int3
fwait
mov
pop
mov
or
mov
sub
sbb
mov
or
int3
out
jo
fcomps
mov
ljmp
mov
daa
jo
movsl
out
stc
add
cmc
mov
or
aam
jb
daa
sbb
insl
push
fcmove
sbb
scas
dec
cltd
mov
adc
pop
adc
jne
pop
outsb
test
push
inc
mov
test
xchg
mov
fwait
jp
imulb
sub
mov
sti
fwait
mov
adc
daa
or
call
rcrb
sub
mov
xchg
aam
lret
sub
mov
ss
mov
jae
and
adc
shll
jnp
fstpl
inc
jne
lods
pop
pop
xchg
push
dec
jb
getsec
mov
outsb
jae
or
jns
ret
push
shrb
or
mov
into
incl
fsub
sub
jno
in
cmp
or
add
dec
loopne
lahf
addr16
getsec
insb
test
decl
test
xor
rcr
call
sbb
sbb
out
pop
dec
jg
lods
lods
jp
push
in
icebp
stc
lret
out
push
sarb
roll
and
mov
sub
repnz
das
push
adc
cmp
iret
in
ss
movsb
jle
les
scas
push
xor
xchg
cld
jae
imul
notb
call
in
cld
int3
sbb
test
lock
loope
push
push
and
jbe
push
push
mov
inc
dec
push
andl
push
testl
push
push
rolb
pop
xchg
xchg
inc
mov
sub
xchg
adc
cmp
xor
lret
pop
scas
push
out
mov
adc
mov
cmp
jae
and
mov
out
cmp
xchg
adc
in
inc
out
lods
mov
push
aaa
leave
xchg
enter
fscale
mov
imul
mov
lea
add
push
inc
insb
mov
js
inc
data16
dec
lahf
aas
jns
call
jmp
mov
adc
or
cmc
ja
xor
movsb
jbe
fcmovne
in
lret
cmpsl
and
or
ret
lds
enter
or
scas
sub
in
or
adc
dec
mov
lcall
rclb
xchg
pop
sbb
stc
jns
arpl
fs
out
jmp
mov
jne
mov
add
es
sbb
mov
inc
testb
xorl
out
lahf
xor
dec
lea
xor
sub
leave
inc
mov
jns
cmp
pop
dec
cs
cmpsb
push
cli
push
fldt
cmp
div
xor
sbb
std
dec
or
mov
jb
push
add
mov
xchg
push
cld
push
rclb
test
fldl
clc
mov
test
pushf
negl
sbb
sub
jns
pop
inc
inc
fsts
push
loope
jb
scas
outsb
inc
out
add
repnz
xchg
inc
lock
popa
cwtl
repz
inc
fdivs
mov
mov
mov
inc
xor
std
loop
mov
out
adcb
inc
push
adc
adc
negb
je
fdivl
push
dec
sbb
sarb
and
pop
or
sbb
leave
xor
mov
cmp
sbb
aam
je
das
jl
xlat
xor
push
cld
jle
rcr
test
in
test
out
mov
lahf
mov
push
mov
adc
decl
push
inc
sub
sbb
sbb
aam
mov
fidivs
add
and
push
mov
loope
ret
xor
inc
sarb
mov
movsbl
outsb
shl
das
sub
push
mov
cmp
jnp
cli
xor
jl
push
rclb
sbb
ds
mov
pop
pop
or
mov
jmp
pop
pop
idivl
mov
fnsave
pushaw
push
in
pusha
mov
int
out
repz
pusha
std
cmpsb
dec
push
aad
fcomps
adc
inc
test
dec
or
push
sub
call
fwait
xchg
add
sbb
stos
add
cmp
addr16
push
shll
pop
movsl
mov
and
les
push
inc
push
mov
sbb
ret
addr16
cmp
enter
mov
test
sub
aam
das
pop
lods
fucomp
xchg
orb
fsubrl
adc
loope
pushf
addb
jae
lods
insl
icebp
test
pop
mov
popa
ljmp
sbb
push
mov
ret
mov
iret
jo
sub
lret
es
out
xchg
or
int3
dec
mov
adc
test
ss
sbb
repz
xor
fnclex
fwait
jo
adc
sbb
dec
popa
sub
jne
jns
nop
push
mov
sbb
push
pop
pop
push
bound
ja
imul
add
push
push
stos
or
lcall
outsl
sub
dec
faddl
lea
jne
adc
mov
dec
fdivr
cli
xor
icebp
mov
and
or
mov
lcall
jno
les
xchg
push
orl
mov
xorl
pop
xchg
mov
ja
les
idivb
adcb
xchg
out
lcall
sbb
lahf
hlt
daa
cmp
mov
loopne
clc
outsb
inc
loope
movsb
loope
shrb
pushf
inc
loop
xchg
jl
rorl
pop
mov
movsb
mov
sub
xchg
shlb
stc
scas
faddl
sbb
jb
in
jl
outsb
mov
inc
sub
push
cmp
nop
sarl
aam
imul
inc
and
icebp
cmp
aad
imul
dec
cmp
lcall
int
fcomip
gs
lea
xor
ret
cwtl
outsb
js
test
addr16
ja
nop
stos
cwtl
movsb
push
loop
gs
mov
out
movsb
push
and
nop
sub
push
and
xor
or
daa
insl
sarl
out
mov
fstpt
add
cmpsb
fdivrl
repnz
imul
push
ficoml
sbb
ljmp
mov
sbb
ss
cmp
test
and
frstor
movl
in
lret
jo
enter
clc
stc
orl
push
mov
sub
xchg
mov
sbb
jecxz
cmpsl
lods
int
jmp
push
cmc
int
xchg
xor
scas
or
jl
mov
clc
add
repz
ds
xchg
jl
dec
add
lds
inc
cs
sub
aad
test
dec
mov
push
test
nop
cs
mov
xor
scas
out
test
or
and
sub
inc
sbb
sub
ds
adc
xchg
jge
mov
sub
dec
das
in
xor
inc
or
adc
inc
daa
add
jns
xchg
stc
das
ret
inc
outsb
cwtl
xchg
data16
xlat
aam
adc
in
push
mov
or
icebp
cmp
imul
mov
call
mov
arpl
lods
xchg
jp
lds
int
aas
adc
aad
cmp
adc
pop
rol
cmp
sbb
ret
loope
jns
jecxz
pop
into
xchg
and
xlat
aaa
call
fsts
jne
arpl
aam
neg
faddl
insb
add
or
cmp
adc
inc
lcall
sub
sub
sar
and
jle
cltd
sbb
or
lcall
xor
in
inc
jb
sbb
mov
inc
pop
mov
loop
adc
and
xchg
repnz
push
iret
je
aad
mov
dec
adc
pop
inc
dec
in
mov
mov
in
pop
inc
scas
mov
mov
cmp
rorb
cs
ret
out
pushf
add
mov
mov
mov
fwait
cmp
cmp
shll
mov
imulb
add
pop
iret
and
jnp
std
or
mov
adc
push
lcall
movsl
push
add
mov
add
jp
aam
mov
insl
push
inc
sub
mov
adc
out
mov
pop
and
sbb
lea
lds
inc
pop
lahf
jae
push
sahf
sub
or
fmull
pop
xchg
rep
cmpsl
inc
mov
or
lods
cmp
and
add
outsb
ljmp
out
mov
pushf
test
xchg
or
jne
pop
sub
dec
shr
fwait
mov
sbb
xchg
cmp
mov
insb
mov
idivl
push
mov
ret
loopne
lret
scas
andb
mov
adc
jb
ds
ffreep
call
mov
jb
adcb
inc
aam
fstpt
fsubs
movsb
xchg
out
faddl
jmp
mov
adc
lds
scas
push
imul
aam
xor
jmp
es
mull
and
in
test
gs
or
insb
test
stc
add
lock
mov
fwait
mov
or
cmp
mov
in
jnp
mov
ss
xchg
mov
fcmovnbe
xchg
cmp
fs
pop
mov
clc
mov
rcl
int
mov
sahf
fs
xchg
scas
cmc
inc
or
adc
pop
and
jns
cmp
mov
loopne
sbb
sahf
shlb
pshufw
in
test
orb
int
xor
notl
loopne
pop
andl
xlat
bound
fadd
add
pop
cli
pop
imul
test
int3
stos
mov
popf
enter
xor
pop
mov
stc
cmp
jo
and
hlt
les
jnp
std
bound
test
push
jecxz
cltd
jecxz
data16
push
mov
or
popa
sti
xor
test
dec
and
cmp
cmpsl
pop
sbb
and
xchg
lods
xor
stos
xlat
cmc
mov
das
mov
dec
int
imul
call
fwait
mov
cmp
outsl
mov
xchg
add
dec
out
rcr
divb
mov
stc
mov
dec
mov
fwait
mov
mov
mov
cmpb
mov
cwtl
fdiv
movsb
popf
ds
rorb
fwait
sti
es
mov
pop
mov
xor
or
int
mov
push
sub
push
ds
jle
aam
push
sub
add
test
stc
jmp
ret
xchg
loop,pt
std
js
subl
cmpsl
les
or
adc
cld
bound
xor
adc
jns
jmp
ja
sub
sub
rcll
rolb
jp
repnz
fwait
adc
sub
shrl
or
scas
push
stc
sub
repz
xchg
andb
lret
sbb
jae
scas
lods
ja
mov
and
pop
mov
js
loope
jmp
cwtl
insl
outsb
mov
adc
pop
jns
hlt
ds
ja
lcall
pop
insb
adc
ljmp
xor
or
gs
push
cmp
inc
adc
fnstcw
in
cmpsb
addb
ljmp
mov
or
int3
inc
stc
pop
lret
lahf
or
repz
lods
je
sarb
mov
into
insl
repz
adc
insb
pop
jne
jb
mul
dec
mov
sbb
in
test
adc
inc
xor
pop
mov
pop
dec
ret
aas
xor
mov
mov
iret
pop
int
sub
cwtl
dec
and
out
sti
xor
lea
in
jnp
repz
stc
js
mov
ret
pop
mov
fisttpll
inc
fstps
clc
sub
xor
sbb
ficoms
push
dec
sub
ror
xchg
sbb
stc
das
ret
movsb
adc
pop
push
sub
adc
pop
ja
dec
popa
sarb
fisttps
aad
lcall
cmp
mov
ret
mov
xchg
xchg
addr16
adc
cmp
adc
jns
fisttpll
and
fnstcw
cmpsb
loope
ds
dec
add
dec
push
jmp
jp
inc
mov
push
divb
clc
xchg
jnp
data16
jns
adc
stos
inc
jne
mov
adc
jb
js
stos
stos
flds
and
pushf
es
sbb
enter
mov
adc
out
jno
ljmp
push
adc
movsb
or
xchg
pop
sub
sbb
jne
out
ficomps
mov
add
je
mov
push
lahf
sub
repz
push
xchg
xchg
push
sub
push
mov
test
addr16
push
ds
sbb
insb
stos
ja
data16
insb
pusha
push
pop
adc
inc
inc
movsl
pop
cmc
mov
test
xchg
jne
cli
cli
shr
lods
dec
push
push
jno
test
lret
and
jb
cmp
out
cmp
out
std
test
dec
aas
repnz
incl
int3
in
mov
and
dec
xchg
sbb
addl
add
mov
jl
push
mov
sbb
xor
lret
rcrl
cli
fcomps
sub
sub
jp
in
pop
jl
lock
dec
ja
shll
aam
adc
jno
stos
push
sbb
mov
imul
ds
jmp
out
pushf
shlb
push
test
sahf
sti
in
inc
stos
iret
sub
ret
pop
sub
jecxz
and
loop
scas
loope
push
xchg
lret
inc
sub
fs
idivl
sbb
int3
and
test
xchg
movsl
push
jae
sbb
sbb
and
jge
movsb
xor
lret
pop
adc
jle
fwait
sub
sbb
pop
fs
mov
shrb
into
iret
pop
into
hlt
adc
dec
lea
xchg
or
dec
cmp
xchg
jl
ja
std
mov
data16
mov
ss
pop
ficoms
xchg
and
xorps
jno
mov
scas
cmp
outsl
or
pop
out
adc
jmp
cmc
cmovge
mov
sbb
outsb
lods
out
sti
aad
in
pop
scas
and
rcrb
push
mov
push
outsb
rcr
jge
push
jae
fildl
jg
cwtl
xorl
mov
sbb
shlb
adc
xor
xchg
mov
inc
xchg
popa
dec
mov
push
fdivrl
mov
sub
sub
or
add
clc
or
push
test
das
lods
jp
dec
les
cs
loope
sbb
inc
in
and
jae
ja
jmp
mov
jne
rclb
data16
out
int
lret
jecxz
mov
hlt
sbb
call
mov
xchg
cwtl
test
ds
xlat
testl
mov
shl
in
lret
out
cmp
or
imul
and
xchg
shr
mov
fsubl
sbb
push
mov
fldenv
mov
mov
out
lcall
add
pusha
xchg
call
dec
pop
nop
stos
idivw
addr16
adc
in
pop
and
xchg
into
daa
loop
mov
add
imul
stos
ficomps
jg
sub
repnz
loopne
and
mov
adc
ljmp
les
fwait
and
int3
xchg
mov
cmpsl
mov
adc
fsubr
mov
test
stos
ljmp
inc
mov
sub
or
dec
loop
mov
pop
mov
daa
pop
lds
nop
xchg
lcall
scas
cmp
addr16
sub
std
cmpsb
fistps
mov
nop
push
mov
jne
cmp
push
loope
gs
and
dec
jb
js
lahf
test
mov
or
in
mov
add
jp
pusha
sti
movsl
rcl
xchg
nop
int3
cli
xchg
sbb
mov
fimuls
xchg
int3
outsb
jecxz
mov
jmp
add
mov
pop
stos
xchg
ss
mov
cmp
fiadds
jecxz
rcrl
jns
add
enter
sti
xchg
xchg
std
ffree
xchg
scas
movsl
sbb
out
dec
add
jno
xor
fcompl
seto
fimuls
jge
imul
lahf
lock
cmp
test
pop
mov
push
mov
jno
shrb
imul
fmul
cltd
and
out
adc
mov
jnp
andb
pop
mov
sbb
xor
xor
xor
mov
fnstcw
push
mov
and
pop
call
jge
pop
rcrb
addr16
stos
scas
cltd
sbb
inc
inc
lahf
mov
mov
push
jo
test
daa
sbbl
mov
pop
call
fwait
dec
xor
rorl
adc
sub
mov
clc
jmp
cmp
sti
adc
clc
ss
out
dec
inc
dec
int3
inc
in
or
pop
mov
sbb
mov
nop
jo
inc
loopne
jl
pop
call
cmp
movsl
sahf
push
popa
inc
xor
and
add
bound
js
rcrb
or
push
stos
das
add
fwait
dec
sbb
adc
popa
and
mov
inc
iret
mov
and
loopne
pop
test
outsb
sbb
fcmovb
aam
push
dec
scas
mov
jg
jne
adc
repnz
cmpsl
lock
cmp
and
add
cmp
mov
and
jle
js
push
fs
xchg
js
push
imul
push
test
arpl
cli
das
dec
xchg
push
js
pop
mov
pop
sbb
aas
lods
pusha
jg
mov
es
addb
ja
pop
push
das
cwtl
cmpsb
mov
xor
xor
or
xchg
frstor
stos
shl
shlb
mov
cli
or
je
pop
cmpb
scas
jg
sti
adc
cmp
in
xchg
push
stos
jge
popa
paddsw
mov
xor
adc
lods
rclb
ljmp
or
aaa
jne
cmp
jp
sub
jns
int
loop
and
pushl
icebp
decb
daa
xchg
adc
push
xor
push
pusha
push
cmp
add
push
mov
xchg
adc
adc
cmp
insb
mov
lret
gs
sahf
movsl
out
insb
lahf
mov
xchg
xor
test
cmp
jmp
jo
jecxz
sbb
pop
push
fimuls
add
adc
imul
push
insl
addb
test
add
fucom
loop
aaa
or
or
les
jno
jbe
jo
leave
lahf
mov
dec
stc
and
cmpsb
xchg
lea
js
push
sub
or
out
iret
test
outsb
je
cmc
and
inc
inc
mov
mov
mov
out
pushl
push
mov
leave
jnp,pn
aas
adc
aad
aam
jecxz
cmc
mov
add
sub
pop
xor
xor
xchg
cmpsl
xchg
test
addr16
adc
imul
sarl
mov
movsl
fs
adc
pushf
xchg
fsubrs
decl
fdivr
inc
sti
movl
lahf
jb
adc
xchg
or
arpl
add
nop
mov
test
cli
out
pop
cmp
and
les
push
mov
sbb
cmpsb
and
mov
js
xchg
adc
loop
mov
lcall
mov
xchg
fs
int3
daa
adc
cmp
push
lea
xor
add
push
std
pop
shl
push
jb
test
cld
orl
jle
dec
stos
cwtl
lock
lods
push
mov
pop
or
inc
cmpsb
mov
adc
adc
lock
sahf
push
or
jne
sbb
pop
mov
and
lds
inc
sub
push
cli
ss
ss
iret
dec
test
jl
mov
jns
insl
or
scas
jecxz
nop
outsl
dec
andb
out
mov
mov
ret
mov
xorb
xor
push
add
arpl
cmpsb
aad
fnstcw
fisubrl
adc
iret
orl
or
jecxz
sub
js
add
lret
dec
insb
add
and
ret
ljmp
push
and
movsb
int3
fdivrl
and
addr16
or
adc
lcall
pop
inc
ljmp
mov
fadds
lods
push
xor
mov
xchg
rcrl
xorl
adc
imul
inc
xor
adc
or
loop
das
out
aam
out
jae
and
mov
out
aad
xchg
cmp
pop
fistl
cwtl
adc
mov
mov
lds
dec
xor
jae
and
lock
mov
jp
bswap
pusha
imul
adc
push
or
ja
jmp
xchg
int
xchg
orb
fs
push
jbe
loopne
les
xor
cmp
mov
jg
fisttpl
mov
in
es
stos
in
mov
xor
jns
pop
inc
push
sarl
imul
imul
pop
sub
mov
or
pusha
push
add
adc
mov
dec
xchg
pop
imul
jl
mov
xor
sub
xchg
dec
out
cmp
cltd
and
or
movl
dec
shrl
add
cmp
pop
lcall
insl
outsl
jb
fistpll
adc
push
fwait
orl
and
repz
fimull
cmpsl
mov
xlat
aaa
loopne
fcompl
loope
int3
fimull
ljmp
loopne
lock
sub
pop
inc
dec
push
lds
mov
cwtl
dec
add
pushf
pop
mov
jmp
scas
stos
jg
leave
mov
inc
dec
cs
cwtl
fiaddl
push
fcmovne
in
fistps
in
fwait
pop
stc
sbb
std
imul
dec
repz
sub
aas
ds
adc
mov
xchg
sub
dec
and
mov
pusha
push
mov
xor
je
add
outsl
lcall
mov
lcall
mov
ret
jae
clc
fdiv
inc
push
add
pop
movsl
mov
stos
call
mov
movsb
adc
sbb
iret
sub
fidivrs
dec
and
notl
sub
fsubrs
jbe
pop
push
jns
or
enter
mov
pop
test
dec
inc
push
push
and
xchg
xchg
mov
jns
sub
sbb
jl
addr16
subl
nop
cmp
aaa
mov
shrl
iret
scas
and
pushf
push
leave
xor
add
sub
icebp
iret
lcall
hlt
in
xor
mov
repz
test
jne
mov
inc
pop
cmc
adc
pop
jae
push
jae
push
mov
xchg
shll
push
stc
jns
xor
lds
imul
mov
int
cmp
dec
icebp
inc
add
mov
adc
jmp
fists
mov
sub
arpl
flds
push
ficoms
loopne
inc
mov
xchg
fucomp
push
sbb
or
insl
shr
dec
decl
lcall
test
add
rcrb
add
inc
wrmsr
call
sub
adc
movsl
or
data16
gs
pause
dec
aaa
xor
lock
nop
dec
dec
inc
in
cmp
in
push
jg
movsb
ja
mov
push
pushf
add
mov
rcr
mov
rorb
movsb
in
decl
pop
roll
rcr
fidivs
outsb
ss
mov
pop
mov
push
push
or
stc
add
sahf
jge
add
mov
mov
pop
lds
jmp
sbb
sbbb
add
sti
inc
jl
adc
cmp
push
jp
jnp
dec
sbb
shll
fwait
stos
mov
mov
xlat
ljmp
filds
or
in
mov
lcall
sar
enter
outsl
sbb
scas
adc
or
push
and
aas
inc
out
mov
fidivrl
inc
mov
adc
sub
bound
or
jb
repnz
inc
mov
outsb
jne
shrl
mov
mov
sbb
test
es
sbb
and
mov
insl
adc
mov
sub
mov
ret
cmc
in
lods
orb
dec
iret
sbb
dec
or
pop
in
ljmp
mov
or
fs
pop
cmp
pop
scas
sbb
sarl
imul
into
mov
inc
ja
mov
pop
repz
mov
int3
enter
mov
outsl
repnz
ja
sub
cld
sub
push
jl
repz
test
xor
mov
into
or
es
int
filds
movsb
es
cmp
pop
mov
dec
aaa
dec
fildll
out
push
adc
cmpb
pop
mov
lds
pop
cmpsb
push
test
pop
ja
int3
jmp
sbb
ret
aad
out
jp
mov
sbb
int
cld
or
insb
lods
cmp
push
or
fldenv
or
xchg
int
mov
dec
adc
lock
in
lahf
stc
jno
add
dec
xor
lock
push
fidivrs
or
divl
and
imul
dec
or
push
test
xlat
movsb
or
xchg
ficoml
add
sti
push
popf
pop
push
cltd
popf
dec
jecxz
mov
in
push
pop
cs
out
out
pusha
fidivrs
imull
inc
cli
iret
imul
shll
scas
xchg
jbe
movsb
cmp
push
lahf
stos
add
and
ljmp
hlt
imul
mov
mov
movsl
mov
push
jbe
lret
in
scas
jg
in
jl
rcr
rolb
xchg
in
pop
inc
std
mov
xchg
test
js
adc
cmpsb
jp
mov
movsl
lods
sti
movsl
xor
repz
fcomps
fwait
icebp
xor
dec
out
inc
sbb
adc
stos
cmpsb
sub
lahf
std
cmp
inc
xchg
xchg
push
mov
popf
sub
jbe
sbb
int3
mov
cltd
xor
lret
std
cmp
and
adc
cld
xchg
push
call
lds
es
mov
cmp
les
lods
or
mov
or
daa
xor
cmpsb
cmc
dec
xchg
fistps
test
cmp
ss
add
mov
and
jle
inc
int3
push
pusha
jbe
push
aam
test
bswap
lods
xchg
sub
shl
mov
cmp
movsb
repnz
and
lahf
pop
sahf
dec
sahf
mov
repz
sbb
mov
cltd
test
sahf
rep
lea
in
rorb
call
add
jl
arpl
xchg
ja
pop
pop
dec
addr16
aam
inc
popf
mov
jnp
xchg
mov
loop
pusha
out
mov
lock
xlat
and
fstp
jl
mov
jl
jp
or
in
mov
jns
or
div
pop
cli
jle
pop
mov
test
pop
lods
repnz
push
push
pop
hlt
adc
adc
push
adc
loop
imul
les
insb
adc
in
jmp
std
xor
addl
ljmp
sbb
repz
lahf
ljmp
mov
test
shll
mov
loope
icebp
jmp
popa
roll
jo
mov
inc
dec
cmp
pop
push
mov
jecxz
std
in
arpl
mov
fsubl
mov
cmp
fmull
adcl
inc
mov
jno
or
or
insl
fwait
sub
sti
sub
outsl
movsb
push
lret
out
pushf
cmp
push
push
enter
xchg
fdivrl
inc
mov
or
mov
out
jge
mov
repz
popa
fdiv
mov
and
test
mov
movsb
arpl
fnstenv
aam
or
sbbb
pop
inc
sub
xchg
push
fwait
int3
shll
vandps
pushf
lods
test
cwtl
and
adc
jge
shrl
inc
add
or
jl
xchg
jne
add
dec
aaa
adc
cltd
daa
xchg
movsl
mov
hlt
add
push
movsb
rol
lock
cmpsl
outsl
xchg
cmpsl
lods
out
pop
push
push
push
cld
aaa
pusha
push
int3
dec
jecxz
xor
mov
pop
jmp
inc
adc
out
stos
mov
add
cli
cli
mov
lods
sahf
mov
xor
inc
ret
mov
sub
mov
fdivrl
xchg
jns
ja
dec
mov
dec
jmp
sub
stos
outsl
cmpsl
mov
mov
das
mov
pop
imul
cmp
jle
adc
test
xor
sbb
xor
mov
frstor
pop
and
sahf
sub
sub
pop
inc
lock
or
sub
adc
xchg
into
pop
mov
rolb
sbb
in
adc
push
daa
lcall
in
push
shll
test
pop
ficoms
in
or
popf
outsb
inc
sbb
inc
sbb
inc
out
mov
lods
roll
jle
ror
loop
fucomi
test
adc
dec
mov
repz
and
scas
dec
xchg
inc
ss
jb
adc
push
sub
mov
push
leave
jns
cmc
lahf
sub
push
inc
xchg
lods
outsl
or
add
xchg
rclb
addl
test
je
xor
push
mov
add
pop
cmp
mov
dec
notb
sub
dec
jno
pushf
push
mov
call
pop
push
enter
xor
in
sbb
push
out
scas
lret
adc
adc
iret
fnstcw
mov
fsubl
imul
scas
dec
jmp
mov
or
loop
jbe
icebp
sbb
nop
call
lods
fmuls
adc
flds
add
fstps
test
fcomp
pop
push
loope
mov
mov
out
loope
dec
cmp
mov
outsl
pushf
fldcw
cld
ficoml
test
addr16
cmp
sbb
adc
std
push
pop
ret
mov
push
push
xor
inc
insb
incb
cld
repz
inc
hlt
ja
adc
inc
ljmp
pop
pop
adc
sbb
insl
jno
sub
mov
out
mov
sbb
std
mov
jl
scas
sbb
lock
mov
gs
push
inc
xchg
push
inc
xchg
dec
or
or
in
cmc
inc
sbbb
sahf
push
fsubs
sbb
sbb
filds
testl
lock
aaa
dec
push
shrl
jbe
push
inc
sub
daa
decl
push
dec
in
movntq
out
aad
adc
xchg
xchg
out
sbb
cs
das
enter
repz
leave
fsts
sub
and
fidivrl
out
les
mov
xor
xor
imul
loopne
ljmp
lret
inc
or
addr16
mov
out
inc
outsb
lret
stc
pop
mov
cmp
push
inc
xchg
int3
cmp
mov
lods
cmpb
xchg
in
sub
rcll
outsb
hlt
mov
xchg
decb
jbe
add
mov
pusha
out
add
or
arpl
and
test
out
fs
inc
or
popa
push
outsb
jle
pop
icebp
ds
mov
loope,pt
xchg
pop
insb
or
cmp
rclb
ret
icebp
push
inc
loop
data16
mov
daa
gs
mov
add
sub
lret
lods
mov
popf
psubsw
out
inc
lcall
lds
fldenv
arpl
je
xor
push
xchg
stos
mov
movhps
pop
sbb
imul
cmp
pop
xor
iret
addr16
push
adc
lock
leave
cli
std
mov
daa
and
sub
xchg
subl
scas
jb
mov
pop
pop
mov
mov
sbb
or
loopne
movsb
push
xor
push
rcrb
mov
fsub
scas
push
orb
xor
sub
or
out
das
jmp
insl
adc
lods
jle
jne
pop
fstl
mov
dec
lret
push
inc
ja
mov
adc
dec
loop
lret
inc
ret
push
loop
mov
data16
and
inc
mov
add
sar
aad
mov
dec
push
inc
jmp
xchg
aas
add
sbb
and
lret
jb
loope
sbb
adc
aas
cmpsb
cmc
cmp
lahf
in
cld
xchg
mov
xor
daa
inc
push
subb
cmp
bound
xor
sub
data16
insb
push
adc
neg
jge
icebp
xor
movsb
pop
sti
subl
mov
and
xchg
int
dec
mov
mov
xchg
mov
push
add
sub
repnz
stos
adc
adc
inc
test
insl
dec
inc
mov
out
pop
mov
pop
js
sub
stos
mov
push
mov
add
add
xor
call
and
rol
jge
sbb
popl
sub
scas
cmc
lods
xchg
xor
ror
push
mov
mov
notl
and
mov
repnz
or
sti
pop
je
pop
push
pop
mov
xchg
das
xchg
ja
ss
xchg
lods
push
daa
or
movsb
xor
cmp
adc
sti
push
pop
add
outsb
or
stc
mov
aas
mov
ss
inc
jo
jecxz
cmp
xchg
adc
mov
sub
cmp
fwait
cltd
sbb
out
dec
adc
jnp
call
imul
addr16
je
push
push
jecxz
cmp
mov
mov
ja
rorl
push
repnz
sbb
imul
insb
loope
movsl
mov
imul
jg
sub
leave
shlb
shll
adc
imul
les
rcrb
xor
mov
pop
xor
mov
add
leave
fwait
xlat
dec
enter
xlat
insb
lahf
hlt
dec
mov
out
xchg
fwait
cmpsl
mov
cmp
and
or
ss
jle
inc
insl
mov
dec
mov
pop
push
dec
mov
dec
jp
jo
in
data16
jmpw
call
mov
cmp
add
out
jo
jp
pop
push
xlat
xchg
ja
aas
xchg
pop
loope
std
and
add
pushf
push
cmp
pop
xchg
sub
jp
xor
mov
xchg
in
mov
push
or
jle
inc
jle
cmp
adc
lds
jnp
sbb
xchg
xor
inc
jbe
xchg
fcmovu
dec
insl
mov
bound
jbe
pop
pushf
cmpsb
popa
pop
inc
insl
inc
lods
int
rcrb
adc
adc
aaa
xchg
cmc
push
les
add
lahf
sbb
mov
pop
jp
adc
adcb
cmp
and
in
jecxz
pop
js
add
hlt
shll
push
ret
cmp
adc
xor
pusha
jl
iret
int3
roll
cmpsl
mov
outsl
jae
dec
mov
mov
add
jg
out
into
cmp
jne
popa
in
sub
xchg
fldt
es
pop
dec
mov
not
mov
and
subb
addl
xor
push
sbb
push
jns
mov
inc
or
ljmp
add
xchg
stc
repnz
xchg
fwait
cmp
jp
out
jae
jae
mov
sbb
inc
faddl
add
loop
fs
roll
ret
rcrb
cmp
ret
jp
call
cmp
data16
gs
sahf
inc
dec
or
pop
jo
rorb
test
inc
push
jp
lahf
xor
test
push
push
lods
jbe
jnp
out
adc
xor
cmc
unpcklps
mov
imul
in
mov
js
pop
pop
inc
xchg
sti
mov
mov
test
mov
mov
or
out
add
pop
insl
xchg
jb
test
push
and
or
mov
mov
cmpsl
aas
dec
loopne
cmc
mov
mov
shrl
out
lahf
adc
inc
pushw
scas
mov
sub
pop
mov
pop
arpl
testb
jp
lea
mov
push
cmp
insb
sbb
add
push
pop
or
push
xor
shll
rcll
push
aas
push
cmp
insl
loope
cmpsb
lahf
pop
mov
mov
inc
push
mov
dec
xor
xchg
ret
ds
icebp
xor
cs
loopne
es
jnp
push
and
sub
addr16
jge
mov
std
arpl
xor
nop
cmpsb
arpl
rorl
cmp
ret
into
cmp
stos
xor
rep
mov
mov
push
scas
push
jo
push
fistl
or
jge
sahf
mov
mov
scas
cmp
outsb
xchg
scas
xor
imull
arpl
push
push
je
aas
mov
js
dec
insl
rcrb
mov
imul
push
add
data16
push
clc
dec
les
popf
adc
fcomp
lds
adc
mov
sub
mov
pop
fs
mov
cmp
dec
repz
adc
imul
hlt
xchg
je
xlat
sub
push
cmp
sub
sub
stos
sub
cmp
cmp
mov
sub
adc
xchg
cmp
imul
jb
mull
pushf
mov
movsl
repz
gs
mov
das
insb
gs
ret
xchg
test
cmp
lods
loopne
aaa
mov
aam
shlb
insl
stos
in
jno
and
pop
ljmp
and
cmp
jne
cmpsl
push
pop
or
fimull
pushf
lret
jne
and
mov
xchg
push
cmp
fisubl
jp
jo
hlt
stos
lret
ret
or
inc
aad
fbld
sbb
iret
cmp
sbb
ror
mov
xor
clc
fldcw
cmp
mov
inc
lret
icebp
add
push
ds
insl
pushf
add
dec
sahf
outsl
xchg
dec
xchg
sbbl
adc
pop
enter
hlt
imul
aad
push
and
dec
jns
push
push
ljmp
sbb
addr16
xor
cmpsl
fisttps
cmc
repnz
jo
push
dec
sbb
stos
fs
scas
call
or
fidivl
int
shrl
jecxz
adc
mov
inc
inc
popf
out
or
cmpsl
adc
icebp
stos
adc
dec
push
fmul
icebp
inc
dec
sub
pop
mov
clc
addr16
test
test
xor
push
sbb
xlat
xchg
aad
add
or
add
inc
out
mov
imul
add
lods
nop
insl
cmp
xchg
push
rclb
pushl
test
inc
xchg
divl
jp
cmp
lods
mov
cld
hlt
pop
pop
test
inc
inc
lcall
popa
fists
mov
cmp
imul
movsl
sbb
je
popf
mulb
lret
ds
pop
gs
in
cmp
pop
inc
mov
cmpsb
mov
sbb
sbb
outsb
inc
daa
add
insb
mov
mov
movsl
aam
push
ficoml
push
sub
jge
roll
pop
ja
mov
repnz
shrl
add
and
das
push
mov
push
mov
and
insb
mov
jne
mov
add
add
pop
jnp
in
push
xor
or
rclb
outsl
sub
xchg
int3
push
fnstenv
loope
mov
ret
loopne
xor
sbb
imul
xor
and
outsl
pop
outsb
icebp
fidivl
cmp
sbb
xchg
fstpt
loope
cwtl
xchg
mov
push
adc
add
popf
mov
in
shr
xchg
push
xor
or
les
mov
out
xchg
bound
mov
cmp
mov
pushf
mov
inc
ja
data16
mov
pop
sbb
cmc
adc
inc
and
lods
call
aam
xchg
pusha
adc
fsts
mov
mov
popf
icebp
xchg
jg
jae
ret
inc
mov
inc
xchg
aad
ja
mov
outsb
iret
mov
cmp
int
into
jg
aam
pusha
insw
shll
in
push
ret
mov
cs
jns
movsl
jnp
loop
sub
mov
cmp
mov
pop
inc
add
sbb
jne
cmpl
cld
push
sub
lock
inc
daa
les
icebp
pop
sub
or
push
jns
pop
add
in
xlat
jbe
push
adc
sahf
nop
les
icebp
xchg
icebp
test
aas
sbb
adc
xchg
adc
sahf
insb
mov
int3
enter
cli
add
in
std
testb
cmpsl
xchg
scas
and
testl
xchg
arpl
lea
or
addb
arpl
mov
inc
jns
pusha
shlb
jl
sub
in
add
stos
enter
dec
push
adc
mov
jbe
mov
pop
inc
inc
clc
aas
xor
cmp
xchg
pop
xchg
xchg
mov
out
sub
sbb
inc
or
stos
cmpl
mov
mov
int3
rcrb
sub
cmp
add
icebp
pop
and
jns
test
cmpsb
or
xorl
aas
dec
cmp
add
cwtl
push
jl
or
lcall
lock
jbe
adc
push
adc
outsl
psllq
jecxz
inc
jle
xchg
mov
mov
addl
mov
into
test
cmp
das
xchg
sahf
or
inc
inc
cmpsl
pop
pop
mov
idivb
cmp
sub
and
popl
std
add
add
and
push
test
jg
or
cmp
out
rclb
jp
mov
idivl
mov
fnstenv
dec
sbb
xchg
out
icebp
aam
cmpsl
out
je
adc
adc
mov
shl
cmp
adc
cli
or
inc
add
lds
push
mov
adc
cmpsb
cmpsl
test
pop
jns
fcomp
dec
lods
popf
adc
movl
push
mull
fsubrl
jae
mov
fsub
es
cmp
lods
xor
nop
out
mov
jg
pusha
or
or
testb
inc
repz
rcll
out
cli
jg
xchg
sub
cld
xchg
mov
push
mov
jg
fstl
or
cmp
jb
cmp
into
pushf
repnz
mov
mov
test
jl
mov
xchg
push
adcl
add
ret
cltd
into
cmp
iret
inc
pusha
xor
jnp
mov
push
daa
add
loop
subl
test
pusha
mov
rcr
xchg
mov
pop
add
mov
cwtl
mov
int3
adc
loopne
ficoml
mov
adc
lahf
icebp
popa
xor
push
cltd
pushf
jo
sub
or
in
arpl
nop
test
scas
xchg
cmpsl
daa
je
pusha
out
xchg
mov
lock
popa
push
pop
cs
test
jmp
jmp
aad
dec
arpl
cmp
daa
xchg
ds
inc
xchg
mov
cmp
nop
test
lea
cmpsb
jp
fisubrs
outsb
mov
in
mov
dec
outsl
mov
sub
pop
ja
aad
jle
pop
cmp
movsl
mov
push
leave
or
xor
sbb
or
out
mov
cwtl
inc
out
in
popa
paddq
cmp
pop
xchg
push
mov
pusha
xor
mov
cmp
jge
fdivrp
jl
adc
inc
ret
sbb
daa
jg
call
mov
xlat
leave
mov
pop
xor
mov
pop
sahf
jns
data16
outsl
mov
inc
enter
mov
cmp
mov
mov
je
cltd
jl
scas
jae
test
xor
daa
hlt
ror
icebp
data16
push
sub
hlt
jns
lods
push
or
push
or
mov
push
sub
push
test
andl
xor
xchg
lret
out
or
inc
sub
pop
sbb
cmp
or
xor
adc
repz
cwtl
push
mov
shl
mov
mov
adc
xchg
into
fnstsw
sbb
or
stos
pop
sub
xor
mov
test
push
scas
sub
insb
adc
into
cld
out
jbe
cwtl
xor
fadd
ret
push
test
sbb
inc
shlb
mov
test
mov
aas
adc
mov
push
les
jo
sar
es
jge
sbb
push
sbb
inc
inc
loope
add
movsl
sub
fimuls
sbb
loope
lods
mov
xchg
cld
or
push
mov
xchg
sub
shll
jle
fstl
lret
push
leave
mov
xchg
mov
push
pop
mov
fcomps
ss
cmp
lods
int3
imul
add
pop
pop
loope
xchg
pop
mov
dec
adcl
gs
xor
jecxz
or
mov
arpl
mov
cli
or
enter
xor
lahf
sub
mov
mov
push
adc
xchg
nop
adc
out
into
and
scas
das
aaa
aad
push
movl
mov
fwait
jns
loope
js
jnp
sub
pop
cmp
outsl
add
mov
xchg
insl
pop
or
lock
fstpl
inc
or
testl
or
pop
or
push
mov
or
insb
dec
stos
xchg
xor
xlat
out
sbb
fstps
lea
jne
lock
sbb
test
data16
jbe
pop
sbb
add
cmpsb
jno
in
andb
mov
dec
xlat
inc
movsl
enter
loope
mov
loopne
pop
lods
xchg
xor
dec
sbb
pushf
xchg
inc
inc
jne
sub
outsb
mov
daa
loope
xchg
test
add
ja
fdivr
sub
lock
pop
xor
xchg
das
and
loop
xchg
dec
cmp
adc
imul
icebp
sub
mov
sub
cmp
in
in
ds
and
add
movsl
icebp
inc
jne
inc
test
inc
sub
sbb
mov
imul
sbb
push
es
xor
lds
mov
test
and
inc
rcrl
jl
mov
fnstenv
jns
pop
fcompl
fisubl
sbb
dec
ficomps
jg
xchg
jl
iret
in
sti
sbb
cld
pusha
jae
imul
pusha
stos
sub
xor
repnz
push
push
mov
sahf
data16
pop
xchg
dec
out
add
adc
and
adc
xlat
shl
hlt
icebp
xor
mov
ljmp
cwtl
fisubl
into
push
sub
cltd
ds
mov
pushf
popa
pop
fcmovnb
xor
sub
loop
add
adc
fucomip
push
dec
lds
cmp
xchg
ja
inc
scas
dec
cmp
repz
push
adc
jle
insb
xchg
jecxz
push
mulps
mov
fbstp
xor
cmp
mov
mov
in
inc
inc
sar
insb
lods
add
shlb
and
popa
ss
inc
mov
jle
inc
into
mov
sbb
data16
adc
jb
dec
int
ss
sub
call
out
addb
pusha
xchg
push
push
mov
ret
imul
ds
sbb
loopne
insb
jl
out
inc
loopne
push
or
loope
mov
add
adc
jp
dec
mov
negl
push
orb
inc
cmp
push
loop
cwtl
loopne
mov
push
push
lret
xor
pop
fisubs
or
lcall
pop
mov
mov
push
std
xor
fstpl
es
stos
stc
fwait
jns
insl
cmp
jnp
dec
arpl
push
mov
mov
sbb
xchg
push
add
or
nop
jp
push
test
xor
mov
ss
hlt
adc
xor
add
imul
mov
xchg
inc
or
outsb
jne,pn
test
adc
xchg
mov
pop
inc
xor
loopne
xchg
sub
shrb
insl
xchg
jecxz
xchg
mov
adc
pop
jecxz
cltd
adc
stc
push
dec
fcmovu
mov
mov
repz
jns
js
jl
mov
push
mov
leave
imul
cmp
mov
push
sub
xor
cmp
push
test
popf
xcrypt-cfb
cmpsl
out
frstor
mov
adcb
push
sbb
ljmp
iret
repz
cli
sbb
pop
popf
jae
cmpsb
add
in
insb
pop
scas
xchg
mov
imul
outsl
inc
xlat
shl
push
loopne
in
adc
xlat
xchg
push
loop
insl
pushf
int
push
push
mov
in
lret
jp
mov
lcall
gs
movsl
jg
jge
sub
sar
aad
stos
test
fisttps
testl
mov
xchg
or
rolb
in
pop
dec
std
shrb
cmp
loop
out
xchg
sub
pop
sbb
cmp
movsl
sub
js
scas
test
loop
sarb
jno
sarl
and
jbe
mov
xchg
mov
cmp
xchg
cmpsb
mov
jmp
mov
jle
notl
jecxz
or
lods
sbb
mov
aas
mov
pop
mov
mov
sahf
loope
and
sbb
in
sub
xchg
xchg
mov
ljmp
add
fs
jne
dec
sub
or
mov
ss
cltd
xchg
jno
sub
data16
out
minsd
aas
dec
popa
popf
pop
ljmp
mov
xchg
pusha
lods
xor
sbb
mov
sub
pop
or
jno
std
jmp
cmp
dec
ja
add
fs
jne
aam
jp
xchg
lock
in
mov
rcr
push
orl
or
popf
mov
mov
mov
add
cmova
stc
lahf
mov
aam
movsl
sbb
stos
stos
jns
pop
setns
dec
shrb
arpl
xchg
jl
dec
or
daa
pop
xchg
xchg
fidivrs
push
fcmovb
outsb
sbb
sub
aam
dec
out
imul
dec
add
gs
dec
jae
fmul
leave
and
test
nop
jb
pop
mov
fistpl
push
ja
test
xchg
push
and
lods
fsubs
xor
ret
or
repz
or
into
cmp
jae
dec
mov
mov
loope
and
pop
push
out
adc
pop
mov
divl
mov
pop
mov
sub
insb
aam
push
and
or
fimull
cmp
fisttps
adc
es
sti
orl
fwait
ret
in
lahf
in
js
arpl
fstpt
lahf
lods
mov
pop
xor
insb
add
xchg
sahf
call
testb
imul
rcrl
insl
push
imul
insb
adc
mov
hlt
sbb
ret
ss
fistpl
fisubl
xor
add
xor
pop
ljmp
shl
ja
mov
push
mov
and
pop
push
xlat
mov
pushf
mov
mov
jnp
loopne
inc
xor
cmpb
fdivr
push
inc
imul
xchg
movsb
loop
add
mov
cld
inc
inc
cmp
jg
movsl
push
dec
test
jmp
xchg
inc
cs
jg
mov
sub
sub
cmpl
cmpsl
push
xchg
in
xor
mov
mov
pop
stos
xchg
shrl
fstps
mov
dec
imulb
mov
pop
arpl
add
lods
pop
xor
scas
mov
cmc
pop
rcll
repnz
cmp
push
xlat
mov
js
xor
call
xor
mov
cltd
pop
mov
xchg
out
or
test
arpl
sub
in
int
cwtl
or
ja
icebp
cmp
test
paddsb
add
mov
mov
sub
and
pop
mov
inc
xchg
cltd
add
ret
enter
pop
sub
scas
outsb
stos
movl
lret
jle
sub
adc
push
aas
pop
jmp
push
inc
aaa
mov
add
push
adc
jmp
sbb
jo
cmp
sub
sbbb
xchg
pop
add
inc
in
cmp
mov
movl
js
fistl
je
popf
inc
loope
in
or
dec
in
subb
out
jo
jo
stos
fs
mov
sbb
pop
fcoml
xor
bound
xchg
ds
je
mov
nop
lock
fsub
stos
std
aaa
dec
loope
fistpll
insb
cmp
lret
pop
cmp
mov
iret
lret
or
fwait
cmc
jbe
rol
aad
and
mov
hlt
cmc
sub
pop
popa
int3
les
pop
sbb
movsb
repnz
sbb
dec
pop
push
dec
push
rcr
sbb
xchg
data16
and
dec
test
adc
lock
cmp
sub
daa
cs
jp
adc
mov
pop
scas
or
and
or
push
dec
fyl2xp1
jmp
or
mov
or
lcall
mov
inc
mov
filds
rolb
mov
push
out
fdivr
int
xchg
mov
jle
xor
mov
cld
dec
push
push
pop
iret
or
xchg
clc
mov
jge
test
adc
xchg
bound
lds
jp
mov
mov
push
repz
mov
jge
cmp
in
and
lds
test
jne
pop
sub
mov
xor
jl
cmp
add
cmpsl
test
sbb
pop
negl
inc
mov
outsb
or
push
leave
inc
xchg
aas
mov
dec
add
les
pop
dec
adc
mov
xchg
ljmp
jae
enter
imulb
pop
jns
ljmp
enter
jg
lret
dec
mov
rclb
fnsave
fsub
subl
add
rorl
or
and
sbb
dec
mov
ljmp
and
push
movsl
lods
mov
dec
mov
faddl
lret
pop
sbb
lock
mov
mov
adc
sarl
sub
mov
mov
or
idivl
push
stc
mov
pop
je
decl
nop
jecxz
jo
movmskps
test
inc
pop
popf
mov
rep
jb
lahf
adc
mov
sub
or
mov
jge
cmpsl
xor
inc
ret
scas
outsl
jl
scas
and
ds
aam
cmp
out
jp
daa
adc
clc
std
je
pop
in
xor
pop
int
mov
leave
insb
xor
std
xor
pop
push
jbe
dec
out
xchg
out
push
inc
add
xchg
mov
out
and
shl
ds
cltd
jnp
push
loopne
dec
mov
cs
sbb
pop
rep
dec
in
push
pop
int
mov
movsl
cmp
dec
nop
xchg
inc
stos
imul
shrl
lcall
inc
pop
dec
dec
jns
or
pop
mov
cltd
ss
jb
push
or
mov
sbb
or
lcall
jno
and
fcoms
repnz
push
mov
jae
das
dec
or
loope
divb
dec
push
add
dec
pop
fwait
vpunpckhwd
jae
scas
pop
outsl
push
adc
mov
leave
std
addb
lock
dec
mov
movsl
aas
daa
imul
faddl
and
xlat
icebp
rclb
enter
stos
hlt
pushf
rcll
xchg
jle
lcall
push
xchg
adc
and
or
add
lret
jne
les
cmp
or
jbe
push
mov
addr16
sub
lods
lret
lock
movsb
nop
or
and
xor
fnstenv
add
xor
dec
sub
mov
xor
xor
push
xchg
push
dec
cwtl
imul
sbb
aaa
mov
mov
ljmp
inc
push
mov
shlb
sahf
bound
stos
imul
cmp
add
pop
sar
rcrb
int3
jnp
mov
and
fidivrl
mov
and
mov
out
fcompl
sbb
sub
scas
loop
push
mov
lret
and
test
push
popf
jno
or
and
adc
ret
lds
inc
out
mov
add
sti
aad
and
jae
sub
push
jge
push
dec
outsb
mov
and
and
fnstenv
pushf
sbb
jno
in
cmp
xchg
pop
or
cltd
xchg
inc
mov
jecxz
adc
add
cmp
jmp
or
add
into
test
cwtl
sti
or
cmc
imul
and
fnstsw
pop
cmpsb
or
fstpt
enter
subb
xchg
push
pop
mov
adc
or
jo
loop
sbb
repnz
pusha
lea
mov
ret
jo
push
jne
icebp
cmp
mov
test
repz
xor
mov
mov
bound
call
mov
test
cmc
rclb
xor
jno
push
lret
mov
pop
sub
ds
arpl
cli
insb
arpl
adc
add
daa
imul
in
loop
inc
pop
mov
repz
pop
cmovge
popa
je
mov
cmp
fdivrl
cmpsb
test
jno
push
and
xor
outsl
stos
add
xor
mov
xchg
inc
fmul
push
movsl
and
xor
leave
sub
jg
jp
pop
cmp
loopne
into
mov
jmp
add
loope
adc
lods
inc
mov
xor
stc
adc
inc
call
push
adc
adc
scas
adc
lods
adc
ret
dec
xor
and
jae
negl
aam
adc
sub
pcmpgtd
mov
repnz
xchg
adc
jg
scas
into
je
nop
sub
xor
or
mov
jae
scas
or
jg
incb
sbb
xor
daa
jge
popa
popf
fs
pop
fidivs
ret
push
and
out
mov
fcomps
sub
mov
lret
jnp
pop
popf
ja
aam
mov
outsl
imul
and
adc
sbb
sahf
movsb
iret
and
or
mov
lea
fwait
test
pop
bound
out
mov
or
orl
inc
repnz
jbe
sbb
aaa
cmp
jecxz
and
jae
hlt
lahf
pop
cmp
cmp
dec
addl
ljmp
repnz
mov
mov
popa
icebp
jnp
repz
imul
push
or
rorl
jmp
cmp
sub
mov
xlat
leave
and
addr16
and
sbb
and
push
mov
aaa
loop
cmpsb
add
jp
push
mov
pushf
pop
cmpsl
push
clc
out
dec
lock
jg
stc
adc
fisubs
xor
outsl
pop
nop
cmp
lock
and
imul
inc
mov
outsb
pop
fidivl
das
jb
adc
push
and
push
hlt
out
fidivs
add
out
xor
pushl
jecxz
movsb
or
hlt
push
jge
adc
mov
pop
test
mov
pop
scas
cli
arpl
push
sub
pop
push
jbe
or
incb
jnp
cwtl
push
rorb
fadds
into
call
jb
imul
adc
shll
push
cmp
scas
dec
push
orl
pop
pop
mov
xor
lock
sbb
jle
stc
insb
dec
inc
js
scas
xor
push
mov
lret
inc
rcl
sub
aaa
outsl
adc
imul
sbb
push
dec
mov
daa
adc
scas
mov
iret
ja
xchg
test
and
cwtl
or
sbb
lods
sub
out
pushf
inc
xchg
ss
stc
into
out
push
and
cwtl
pop
jge
int
cld
cli
out
or
outsb
dec
add
rcrl
icebp
pop
fistpll
pop
mov
jne
jnp
fsqrt
pop
jns
jno
jecxz
mov
lods
out
cs
xchg
mov
adc
jnp
lcall
adc
jg
sub
lahf
movsl
inc
mov
loope
mov
pop
xor
fs
dec
rolb
push
sti
pop
pop
loope
js
ja
lock
mov
sbb
dec
repnz
xchg
testl
dec
gs
aas
push
test
inc
jns
and
xchg
inc
cmp
xchg
push
mov
rcl
loop
lret
sbb
testb
xchg
adcl
push
xlat
lea
out
ja
ret
cld
dec
jae
mov
aaa
rcrb
bound
or
ja,pt
mulb
adc
adc
mov
rcl
push
mov
insb
cmp
das
push
lock
popf
movsl
dec
inc
mov
lods
test
inc
mov
nop
add
cmp
lcall
outsl
adc
mov
push
pushl
dec
shll
out
pusha
ja
unpcklps
incb
fscale
sbb
xlat
mov
dec
lods
std
movsb
jp
mov
add
xor
cwtd
aaa
rcll
test
mov
idiv
out
mov
add
ret
les
push
inc
xlat
inc
stc
fcomps
cmp
loope
dec
xor
xor
fadds
lods
jge
cld
sbb
mov
cld
add
sahf
cmc
adc
cltd
jno
inc
imul
push
or
rclb
dec
dec
aad
xor
inc
xchg
mov
je
sub
jge
mov
lock
nop
adc
adc
rorl
xor
pusha
mov
orb
add
jge
gs
push
leave
add
mov
rorb
sbb
jmp
aas
or
inc
xor
and
xlat
stos
shl
pushf
cmp
cwtl
lea
sub
mov
xchg
or
outsl
xor
insb
adc
jnp
aam
adcl
xchg
outsl
sbb
sbb
out
lods
stos
and
popa
ss
push
scas
adc
cmp
gs
sarb
popf
in
subb
jae
mov
lret
movsl
fidivrs
mov
dec
push
pop
pusha
cmp
sahf
push
rcrl
repz
add
inc
in
movsb
es
xchg
or
push
sar
mov
xor
aas
insl
jbe
stc
push
je
pop
daa
adc
dec
sub
cmovnp
lds
subb
sbb
xchg
add
pop
ret
cld
push
inc
dec
into
pop
mov
push
out
cwtl
push
jecxz
adc
and
or
sub
aaa
lcall
sbb
call
xchg
in
movl
lret
and
int3
pop
ret
mov
push
lea
cwtl
jno
lods
fisttps
pop
call
leave
mov
shl
fcoms
test
ret
cmp
stos
out
icebp
mov
push
mov
push
jbe
fldl
rcl
xchg
pop
lea
iret
lea
mov
in
jns
jecxz
divb
iret
push
and
mov
lock
scas
fists
sti
mov
loope
push
push
jns
loope
xor
cli
add
cmpsl
subb
add
shl
mov
cmpsl
idivl
adc
xchg
rol
xor
movsl
mov
inc
data16
nop
and
clc
pop
jge
lods
xlat
pop
sbb
jg
aaa
clc
pop
and
sub
movsb
outsl
add
fbstp
testb
adc
inc
sbb
dec
push
sub
hlt
enter
dec
xor
push
mov
mov
cmpsb
and
call
mov
gs
movsl
xlat
outsl
sti
add
cmp
enter
mov
rcpps
sbb
add
push
dec
add
jb
xchg
jg
jb
icebp
jg
cmp
sbb
std
inc
mov
sub
idivl
lock
dec
xchg
pop
mov
sahf
push
cwtl
icebp
dec
jge
hlt
mov
inc
mov
ret
sbb
ret
inc
fbld
mov
bound
hlt
dec
mov
dec
mov
lahf
jo
nop
pop
add
lret
mov
cmp
or
fldenv
jne
es
push
pop
push
lcall
push
loopne
stc
out
subl
cmp
cmpsl
aam
int3
add
daa
xchg
or
fimuls
pop
mov
push
xchg
inc
add
mov
scas
lock
mov
and
jmp
jl
pusha
jp
flds
pop
jl
aad
sahf
fwait
lret
push
repz
adc
fistpll
mov
insb
xchg
or
stos
int3
xchg
hlt
lock
in
mov
inc
faddl
insb
xchg
sub
ja
arpl
push
lock
adc
int
xchg
pop
jns
xchg
adc
add
jle
or
pop
mov
imul
xlat
fildl
sub
mov
int
push
mov
add
sbb
jae
cli
cwtl
je
mov
sub
into
scas
mov
iret
add
sbb
sti
xchg
das
aas
mov
popa
fs
sti
das
mov
jb
mov
push
ret
dec
js
sti
pop
push
or
sahf
or
dec
mov
cltd
test
aam
and
popa
xor
add
dec
sub
mov
dec
insb
xchg
dec
daa
mov
cmp
sbb
add
mov
sbbb
jl
pop
fs
push
frstor
roll
push
cmpsl
add
mov
dec
add
mov
pusha
mov
xchg
xor
movsb
leave
aaa
push
aam
scas
ret
pop
sub
es
add
pop
inc
dec
pusha
dec
mov
dec
in
jecxz
cmp
stos
leave
test
lcall
testl
jmp
outsb
cltd
and
add
inc
pusha
imul
inc
mov
in
test
int
lds
mov
das
inc
arpl
popf
cs
push
enter
inc
test
std
mov
dec
xchg
sub
push
out
lds
filds
loop
stc
sub
hlt
pop
inc
cmp
faddl
aam
out
js
int3
jg
cmp
lods
add
dec
or
repnz
js
mov
push
mov
push
subl
stc
lcall
in
bnd
jnp
imul
inc
aad
mov
add
clc
mov
cli
xchg
lea
mov
xchg
xchg
mov
sbb
mov
mov
daa
ja
movsb
sub
mov
scas
inc
mov
out
sub
and
pop
or
and
xchg
mov
push
jo
inc
jno
shlb
out
outsb
xor
sub
inc
jle
ja
cmpsl
lock
or
lods
cmp
ret
dec
dec
loopne
xorl
dec
mov
lea
cld
pusha
cmc
and
lcall
and
mov
scas
rorb
push
mov
sti
sbb
in
shlb
movsb
mov
sbbb
shll
sbb
mov
mov
aad
cmp
push
or
scas
sub
and
movsb
cmp
fcmovbe
push
js
movsb
out
jnp
xchg
xor
jle
adc
cmp
sub
sbb
ret
dec
and
jbe
stos
cmp
jmp
mov
popa
pop
leave
insl
stos
stos
cld
xchg
repz
js
pop
jne
std
pop
mov
movsl
loopne
pop
xchg
hlt
jbe
inc
cmp
jo
jg
inc
scas
mov
mov
jno
inc
pop
in
loop
insb
lods
mov
xchg
pop
adc
xchg
jecxz
add
xchg
xor
jnp
push
jmp
subl
iret
push
mov
popa
dec
jae
cmp
push
sub
mov
ljmp
aaa
test
fisubl
adc
ja
push
jmp
stos
idivl
jb
fistpll
adc
aaa
xchg
outsl
popl
jo
sbb
cwtl
xlat
ljmp
cltd
jge
sti
lret
jp
jg
pop
ja
outsb
test
pop
cwtl
sar
inc
dec
mov
sahf
fisttpl
mov
lock
xchg
jle
sbb
iret
push
and
push
pop
mov
lds
xchg
jl
xchg
push
int3
insl
pop
inc
push
aam
int3
mov
mov
xchg
roll
sbb
xor
jge
sbb
or
push
fcomps
ss
fsave
outsb
pop
mov
test
cmp
imul
test
scas
imul
or
fwait
and
in
pop
test
pushf
adc
and
push
inc
xchg
mov
lret
dec
ss
xchg
mov
sbb
lcall
jno
inc
cmc
jb
nop
mov
and
daa
and
xchg
mov
rcr
mov
pop
movsl
inc
insl
pop
loope
ret
scas
outsb
in
sub
je
mov
mov
in
sbbl
add
mov
sub
fwait
mov
fsts
or
insb
mov
test
mov
adc
cmp
loopne
xor
ss
aam
cmp
mov
cmpsl
and
jbe
add
lret
push
insl
loop
insl
sbb
pop
lcall
movb
lret
or
loopne
aaa
and
jae
mov
mov
in
xchg
ret
rorl
add
mov
shrl
nop
enter
ds
sbb
dec
sub
add
imul
add
mov
dec
jg
or
mov
leave
xchg
dec
ljmp
xor
push
cwtl
jnp
jle
mov
adc
jecxz
add
addl
adc
iret
or
das
jl
loope
sbb
sub
inc
cmpsl
loope
xchg
mov
mov
lea
push
xchg
imul
mov
jecxz
dec
xchg
push
push
pop
or
and
sbb
push
sarb
movhps
cmp
mov
imul
or
jle
inc
ds
inc
dec
or
xor
sbb
mov
fsubp
pop
clc
xchg
lods
fcmovb
jg
test
dec
adc
fsubs
lods
jae
loopne
push
pop
cmc
leave
sar
xchg
cmp
sbb
mov
das
xor
cmpsl
jo
ljmp
icebp
dec
jmp
fisttps
push
dec
and
inc
ja
add
inc
push
sub
mov
cli
fwait
pop
push
push
test
fwait
adc
and
roll
ljmp
cmp
push
xchg
xor
cld
ret
or
leave
movsl
xor
add
adc
push
pop
rcrb
mov
pop
xchg
movsb
decb
xor
inc
mov
dec
pop
lods
aam
divb
in
push
adc
ficompl
sub
into
pusha
in
xlat
mov
divl
lcall
cmp
or
adc
imul
sar
sbb
inc
sub
movsb
popf
jno
cmpsb
mov
xlat
mov
scas
loopne
in
inc
gs
test
ret
mov
repnz
cld
add
mov
xchg
jnp
xor
sbbb
adc
xor
setns
dec
loope
xchg
mov
inc
sahf
mov
push
loopne
xchg
scas
outsl
cmp
xchg
repz
and
or
and
lock
je
test
add
es
mov
enter
mov
mov
xchg
mov
xchg
jmp
insl
int3
js
add
and
jo
mov
xlat
and
sub
and
mov
sbb
mov
sar
in
out
in
fst
repz
adc
scas
xor
dec
lret
sbb
dec
jne
push
popa
cltd
andb
xlat
sti
fmull
sub
int
jne
sahf
clc
sti
jecxz
bound
xchg
out
icebp
sbb
inc
ds
dec
ret
cmpsb
pop
jne
fcompl
movl
xor
jp
sahf
sbbb
mov
lock
and
xchg
repnz
cmp
sub
cmp
dec
movd
ret
push
mov
and
or
mov
push
icebp
and
push
mov
lods
sahf
pop
insb
add
xchg
imul
fisttps
call
pop
out
orb
mov
aad
lock
lret
push
popl
cld
push
popa
and
lods
mov
stos
cmp
stos
jmp
xchg
inc
test
in
jbe
fsub
mov
push
sarb
sbb
or
pusha
test
sub
dec
xor
or
cmp
js
rclb
mov
pop
mov
inc
mov
addl
inc
fstpl
cmpsl
call
roll
add
and
fs
inc
pusha
xchg
xchg
jle
dec
and
ja
push
or
sub
and
daa
ret
imul
sbb
add
stc
insb
push
daa
sbb
push
push
les
xchg
ss
cmp
fsub
mov
xchg
add
cmpl
pop
fs
xchg
mov
jo
lcall
cmpl
and
add
mov
xor
testl
mov
cs
jp
aam
xchg
mov
jg
adc
pushf
pop
cmp
arpl
mov
pop
cli
daa
cmp
pop
add
sti
cmp
stos
jge
inc
cmp
lcall
mov
sub
call
addr16
jo
jbe
movsb
push
cmc
cld
ljmp
fidivs
mov
stc
adc
jns
test
adc
adc
mov
testb
cwtl
repnz
mov
jno
out
pop
adc
adc
mov
push
pushfw
invd
push
jno
mov
rorl
mov
cs
out
iret
pop
sub
mov
std
mov
fimull
mov
jl
cmp
xchg
cwtl
insb
cmp
les
mov
shr
push
test
out
aaa
or
or
cmp
push
aaa
push
push
mul
pushf
pop
or
xor
sbb
sbb
push
xchg
or
dec
loope
pop
sarb
sahf
xchg
lock
in
mov
jmp
out
lds
cmpsb
inc
dec
mov
jb
int3
pop
mov
inc
mov
and
or
push
pop
test
scas
add
mov
cmc
stc
iret
xchg
or
add
sti
jmp
pop
xor
dec
adc
imul
insl
aas
xchg
fidivs
jnp
jns
rcr
outsb
xchg
clc
aam
push
mulb
lret
xchg
cmc
or
and
test
mov
cmp
fisubrl
add
loop
pop
sub
sbb
in
outsl
inc
mov
test
dec
insl
xchg
sub
sarl
pop
sarb
lock
leave
inc
jo
lret
dec
dec
push
jbe
mov
jns
lret
mov
je
dec
clc
test
sbb
stc
push
push
dec
sbb
xor
mov
push
movl
dec
dec
stos
sbb
mov
fstps
fldt
jnp
jbe
adc
cmp
sub
push
roll
out
dec
cld
nop
icebp
insl
mov
stos
clc
and
nop
sbb
pop
sbb
jae
aas
push
sbb
cmc
stc
adc
pop
mov
jbe
scas
call
pop
lods
mov
pop
fdivrl
and
jmp
rol
xchg
push
outsb
stos
mov
cmpsl
arpl
dec
cmp
sub
push
scas
xrelease
call
pop
enter
aad
loope
pusha
into
adc
cltd
movsb
in
mov
mov
aas
in
cli
sbb
sbb
adc
jae
or
lea
out
lret
mov
mov
mov
cmpsb
frstor
and
or
outsb
popf
dec
xchg
out
adc
pop
mov
mov
dec
mov
adc
jmp
out
int
jmp
insb
and
push
mov
dec
nop
shll
mov
xchg
cltd
notb
cmc
xor
mov
xchg
mov
clc
sbb
addr16
jo
push
out
int3
xor
xor
in
fldt
fdivrp
mov
mov
je
push
outsb
sbb
cld
addr16
push
and
loope
xchg
test
add
fwait
hlt
and
cwtl
cli
jb
outsl
mov
testl
mov
rorb
pop
call
mov
flds
add
cli
pop
gs
stc
jo
insl
jg
cli
or
daa
lods
mov
and
mov
repnz
push
iret
or
cli
in
imul
dec
out
sub
push
sbb
ja
sub
dec
shl
ffreep
stos
sub
mull
jns
pop
loope
inc
mov
frstor
int
push
sbb
add
inc
add
cwtl
push
jge
bnd
ffree
adc
std
pop
adc
ss
sub
ss
mov
or
pop
xchg
inc
adc
test
push
mov
xchg
fcom
cmpsb
bound
xorl
sub
push
fbstp
pop
cmp
outsb
fs
dec
push
mov
pop
cmp
dec
lea
push
jp
xchg
sbb
mov
xor
pop
sahf
dec
int
pop
adc
in
mov
fldenv
jo
jle
pop
lahf
scas
jo
sub
int
das
imul
adc
subl
mov
lea
dec
test
add
adc
cmp
scas
mov
movb
pop
popa
jp
jns
jo
pusha
subb
lret
arpl
mov
rorl
popf
and
sub
scas
cli
popa
mov
sub
sarl
insl
fwait
shll
pusha
push
int3
out
and
loope
test
imul
jne
jg
sbb
loopne
sahf
mov
mov
je
cli
outsl
ficompl
cmp
cwtl
mov
or
ret
or
inc
push
hlt
add
mov
lock
adc
aaa
adc
cmp
dec
cmp
sub
cwtl
xor
insb
push
pop
xchg
jae
fidivrl
int
loop
sbb
inc
mov
push
ret
push
imul
or
aaa
inc
cltd
lret
dec
pop
and
aad
stos
jmp
mov
aaa
bound
mov
fwait
pop
mov
adc
test
push
fnstcw
mov
lock
call
mov
adc
cwtl
fwait
push
inc
jne
xlat
les
jns
dec
sbb
adc
gs
add
in
imul
mov
pop
ja
out
cwtl
push
addb
xor
inc
pop
pop
xchg
stos
ficoml
xlat
lahf
cltd
movsl
mov
ss
test
mov
loopne
xor
fadds
insb
jmp
aas
mov
sbb
and
test
js
popf
fs
push
mov
xchg
pop
stc
pop
dec
dec
xor
sub
push
lahf
adc
sub
ret
cmp
push
in
call
test
mov
pop
xor
dec
push
mov
jne
adc
sbb
jo
insb
data16
sub
dec
ljmp
arpl
das
sbbb
rcl
mov
hlt
in
mov
add
icebp
push
aad
cltd
add
jb
rolb
push
cmp
push
rcrb
ss
iret
mov
arpl
cli
arpl
jecxz
mov
mov
inc
or
ja
cmp
mov
push
setno
mov
movsb
dec
in
imul
dec
adc
inc
int
ss
ja
frstor
cmp
and
xlat
nop
mov
arpl
scas
xlat
pop
sbb
add
jp
aas
iret
cld
fdivr
jns
and
test
fwait
imul
sbb
incl
push
and
mov
jns
cmc
iret
jl
lret
out
dec
cmp
popa
mov
pop
fmulp
fmul
pushf
cli
mov
push
arpl
insb
jns
mov
repnz
mov
mov
dec
in
mov
mov
jbe
stos
inc
pop
push
aad
js
lret
xor
int3
push
mov
inc
dec
and
int3
xchg
lods
les
inc
imull
and
or
fwait
cmp
mov
faddl
mov
jae
mov
mov
pop
sub
xchg
in
cmpsb
mov
ret
dec
jp
mull
mov
incl
xor
std
sub
sub
lret
sub
cwtl
add
add
xlat
testb
rclb
push
call
negb
lods
mov
cli
repz
push
sub
jl
mov
lahf
lret
adc
or
popa
in
inc
cmpb
sub
mov
movsb
ret
fidivl
repnz
cmpsb
and
push
jae
mov
xchg
ljmp
jne
aas
cmpsb
or
sbb
push
fisubrs
sub
lret
cmp
aas
sahf
inc
pop
pop
addb
or
push
pop
lods
daa
or
inc
pushf
loope
das
cld
lret
leave
xor
xchg
mov
xchg
xorl
imul
leave
int3
roll
nop
mov
xor
add
pop
or
add
jno
jo
popa
test
sbb
sbb
sub
gs
test
sub
sub
aam
movsl
inc
out
fistpl
push
cmp
mov
pop
rcl
repnz
or
test
shrb
adc
insl
mov
aam
sbb
bound
push
test
int3
adc
xchg
ds
movzwl
pop
test
xchg
std
or
push
test
repz
adc
xchg
mov
js
andl
add
push
arpl
inc
push
repz
mov
pop
and
fistps
xchg
jno
xchg
and
adc
mov
add
out
xchg
inc
mov
fnstsw
lods
cmpsl
aas
lret
dec
addr16
jg
sub
cmp
cmp
jb
popf
in
subl
ja
sub
cmp
xor
jp
jecxz
popf
sbb
dec
inc
jmp
stos
mov
test
add
ja
mov
loope
nop
and
jb
mov
inc
pop
leave
and
sbb
cli
enter
xor
out
mov
mov
nop
sbb
inc
daa
push
icebp
int3
sub
jge
jl
cmc
sbb
mov
inc
pop
popw
inc
std
fs
fldt
or
lods
cmpl
in
mov
dec
rorb
adc
paddusb
or
add
enter
xorl
repnz
mov
insl
dec
mov
inc
and
mov
push
rcll
pushw
pop
dec
push
jmp
fcmovnbe
xchg
fwait
xor
add
lahf
xchg
out
push
push
push
mov
and
pusha
icebp
aaa
push
push
pop
cmp
jp
loopne
icebp
xchg
test
sbb
pop
jo
in
loope
cmp
fs
lock
mov
enter
dec
inc
hlt
sub
out
ret
lock
ljmp
dec
test
xchg
sub
scas
dec
adc
cmc
fidivs
sub
aad
xchg
xchg
mov
sbb
es
jg
lock
lea
in
mov
and
dec
adc
mov
push
add
xlat
movsb
or
das
cmpb
repnz
sub
pop
sub
adc
mov
cmp
add
add
mov
in
flds
loope
outsl
aam
negl
in
adc
adc
mul
mov
in
jmp
shll
mov
sub
inc
ss
push
adc
cmc
pushf
test
mov
xchg
xchg
fwait
jl
jge
nop
push
xchg
sbb
sub
jmp
jmp
mov
push
inc
push
xchg
pop
xor
sbb
in
out
mov
push
orb
ljmp
sbb
aad
adc
push
adc
xchg
dec
add
in
pushf
aad
jl
xor
inc
add
push
push
pop
mov
insl
pop
hlt
fdivrl
inc
mov
pushl
xor
es
mov
scas
dec
or
out
loop
loop
mov
cltd
loopne
and
in
fidivrs
dec
pop
test
mov
dec
mov
mov
test
jb
das
loope
aad
jne
sub
fdivrl
sar
jno
jbe
sub
or
sub
in
stc
or
out
pop
and
and
test
xor
xor
xor
jae
inc
push
sub
lea
test
in
cs
or
movsl
mov
shr
clc
and
ja
ja
cmpsb
lret
test
cmpb
add
out
sub
int3
stos
push
dec
jne
or
push
ret
sbb
mov
cli
fisttpll
icebp
sub
cli
rcl
pop
out
outsb
mov
pop
mov
jns
adcb
aad
jb
mov
cltd
jbe
or
out
rcll
pop
testb
pop
imul
das
es
push
fcompl
flds
stos
das
mov
int3
inc
daa
loop
lahf
scas
inc
cmpxchg
cmp
addr16
mov
lds
mov
stos
ljmp
outsb
pop
mov
dec
outsb
les
push
and
dec
jns
add
dec
and
inc
push
adc
rcll
inc
in
pop
xchg
mov
test
in
xlat
sahf
mov
mov
inc
insl
outsl
fstpl
dec
jns
loope
hlt
inc
int
lods
in
sub
inc
sbb
jecxz
mov
cmp
adc
jmp
sub
lcall
pop
cmpsb
push
sub
loop
sarl
pusha
push
xor
mov
cmp
in
arpl
aaa
xchg
sbb
sub
frstor
adc
movsl
das
test
lret
lock
aas
xor
mov
outsb
add
xor
jne
outsl
call
xor
push
adc
and
jne
pop
mov
sbb
cmpsb
outsl
lods
icebp
sarb
or
xchg
jno
xchg
xor
hlt
xchg
mov
stos
adc
stc
call
icebp
mov
cmp
jnp
fwait
aaa
xchg
ds
jg
out
lods
fsubrs
pop
xchg
push
mov
clc
and
in
test
jno
fdivrl
mov
jnp
inc
sbb
mov
out
out
enter
push
inc
outsb
fs
inc
notb
xchg
cmp
nop
mov
sbb
lcall
cmova
lods
int3
shll
mov
fs
dec
xchg
mov
dec
push
cmp
xor
or
aad
fidivs
or
sbb
imul
cmp
out
mov
dec
pop
cmp
dec
lret
rcll
insl
jle
mov
adc
pop
shlb
test
push
dec
ds
mov
aaa
fildll
cmp
jbe
aaa
push
daa
push
pop
push
fs
push
dec
pop
push
mov
xor
packuswb
dec
xor
pop
fwait
mov
stc
xchg
fcom
pop
pop
adc
insb
cltd
inc
out
xchg
push
or
nop
and
hlt
les
xchg
les
jle
or
out
movzwl
movsb
ret
das
sbb
leave
fldenv
dec
loope
or
sbb
pop
outsb
arpl
es
std
xchg
jl
pop
fsts
jle
push
mov
fdivl
dec
out
pop
inc
mov
jp
aad
xor
sbb
cmc
js
out
xor
mov
pushw
popa
lds
jp
jae
jle
ja
mov
fs
xchg
adc
std
arpl
push
decb
loopne,pn
push
lock
insl
xchg
and
push
insb
inc
xchg
test
dec
cmpb
nop
mov
lock
jae
outsb
or
mov
and
fnstsw
movsb
sub
pop
xchg
adc
movsl
adc
ja
lea
push
dec
adc
into
sbb
jecxz
push
sar
add
arpl
fwait
and
repnz
sub
dec
jecxz
push
addr16
popa
sub
pusha
fcmovne
int
xchg
rcl
movsb
push
fistl
inc
mov
outsb
scas
dec
or
out
push
mov
cli
sbb
add
sbb
lods
aaa
popa
push
xor
push
mov
mov
icebp
cmp
sbb
push
xchg
js
cmp
repnz
xlat
cmp
fisubl
rol
add
sbb
pop
or
bound
fs
jae
xchg
popa
rcr
push
adc
pusha
or
pop
xor
shll
pop
inc
push
pop
sub
mov
and
pop
xor
lds
pop
fisubrl
pop
cld
aam
mov
adc
scas
test
and
mov
test
movb
pusha
bound
loopne
sub
or
insl
fdivl
cmp
lds
sarb
addr16
mov
bnd
sbb
and
shlb
sahf
xchg
loope
jl
scas
xor
cmp
testl
adcl
jno
lods
push
push
dec
pop
scas
jbe
pop
xlat
jne
sbb
sub
lods
loope
es
adc
jecxz
pop
xor
pusha
imul
movsb
add
mov
cmp
mov
xor
add
pop
nop
dec
out
aas
mov
outsl
ret
aad
and
or
adc
push
sub
jl
sbb
xchg
pushf
jl
dec
icebp
repz
and
fstpl
dec
leave
jmp
mov
or
leave
rcrb
sahf
out
mov
test
add
mov
sbb
sub
sub
xchg
push
pop
add
cmp
add
inc
insl
addl
pop
enter
push
out
shll
test
adc
cmp
lret
inc
popf
fstpl
cmp
addr16
push
or
mov
jp
pop
push
hlt
jmp
xor
aas
icebp
jmp
pop
add
xchg
push
push
pop
in
or
inc
dec
test
cmp
adc
and
ret
inc
sbb
add
xorb
out
rol
push
inc
mov
clc
mov
sub
fwait
sbb
stos
mov
jmp
popa
adc
jge
push
outsl
pop
imul
lcall
nop
xor
hlt
lods
xchg
test
cmp
mov
popf
jmp
movq
cmp
push
jecxz
in
orb
mov
js
adc
call
daa
adc
mov
fidivs
fs
push
pushf
bnd
mov
lcall
or
test
xor
in
pop
test
test
movsl
cs
mov
test
mov
mov
inc
jge
push
lods
dec
push
cmp
fildl
push
out
add
and
or
stos
iret
and
andb
imul
adc
mov
xor
movsl
and
push
imul
repnz
and
mov
push
addr16
mov
adc
inc
notl
repnz
stos
fstl
insb
sarl
in
jno
aaa
fwait
push
ficoml
inc
cli
adc
xchg
mov
das
dec
fstp
cmp
pop
ret
decb
sub
pop
repnz
jl
outsb
int3
cmc
push
pop
dec
pop
movsb
gs
sub
pusha
mov
notl
push
add
cmp
repnz
adc
cltd
xor
arpl
ret
or
pop
push
pop
adc
xchg
filds
test
xchg
push
lock
aam
imul
cwtl
bound
popa
xor
mov
add
lods
pushf
push
cmpsl
jbe
push
lcall
dec
mov
inc
loopne
and
int3
clc
pop
fildl
call
insb
push
movsb
movb
lea
int3
jb
xor
ret
sti
test
pop
cmp
movsb
addl
arpl
sub
rol
imul
lock
dec
movl
cmpsl
daa
imull
cmp
std
push
push
sar
pop
push
jge
test
scas
ja
mov
jl
and
push
sbb
imul
add
add
scas
test
repz
movsl
push
or
mov
es
icebp
cmp
nop
sbb
out
ljmp
jge
divb
jg
loop
pushf
push
loope
jl
mov
scas
push
add
rorb
orl
sub
inc
push
call
lods
sbb
icebp
sub
negl
ss
cmp
cs
lahf
bnd
lea
cmp
movsl
mov
and
push
lea
cmp
jns
adc
jge
fwait
aam
stos
and
fmuls
or
cmp
dec
inc
packssdw
in
push
and
addr16
pop
mov
ret
xchg
shrl
inc
fwait
add
out
jne
nop
push
sar
cld
push
sbb
mov
dec
pop
test
push
psubb
or
push
jle
es
outsl
rcrb
cmp
sbb
pop
mov
scas
pop
add
mov
mov
push
dec
fcomip
push
testl
push
mov
int
push
shrl
mov
lret
aad
out
hlt
outsl
in
iret
cmp
add
xchg
sub
and
movsb
or
fwait
add
dec
loop
sub
stc
lods
fsubrl
sub
ret
or
ret
sahf
imul
lahf
out
jg
sub
inc
test
mov
lret
pop
test
aad
or
sbb
pop
imul
cmpsl
lods
push
bound
cmp
push
adcl
mov
gs
mov
sub
lea
inc
jae
pop
jne
fwait
jl
dec
or
cli
xchg
mov
dec
inc
or
outsl
out
cmp
ljmp
push
jg
icebp
fmulp
ret
mov
mov
loop
stos
xchg
aaa
test
xor
xchg
add
daa
std
inc
mov
jae
push
pop
push
jle
jno
add
insl
jmp
test
or
les
push
lret
xchg
stos
jl
jge
sti
aas
cmc
cmp
mov
jmp
xchg
adc
mov
scas
repnz
stos
lock
adc
mov
cltd
in
xor
neg
mov
je
xlat
cmpsb
fidivl
add
cs
dec
push
sbb
cmp
push
dec
jb
lock
xor
lcall
sbb
fucom
sub
bound
sahf
push
cmp
jmp
sti
into
dec
icebp
adc
in
es
xor
jp
adc
xchg
pushl
xchg
stos
sbb
push
test
pop
push
rcrl
adc
inc
aad
lds
push
sub
gs
cltd
adcl
cmp
pop
sub
xchg
xchg
xor
inc
push
jmp
enter
xor
dec
jge
mov
aaa
movsb
in
sub
fstl
mov
lods
fildl
cmp
sarl
dec
adc
xchg
lcall
add
loopne
loopne
loop
push
fadds
mov
aam
insb
repz
mov
aas
insl
sarl
out
add
xchg
mov
loop
inc
in
adc
shl
push
mov
fbstp
mov
xor
loop
mov
mov
xchg
inc
push
aas
test
xchg
cmp
pop
sbb
sahf
mov
ret
ss
sbb
hlt
or
jno
das
mov
mov
mov
imul
mov
out
sbb
inc
sub
inc
add
mov
test
dec
push
fsubrp
xchg
rcrb
test
xchg
jo
push
add
hlt
or
pop
or
cwtl
sub
pop
andl
jmp
jmp
ds
adc
out
jecxz
fistpl
push
jmp
out
icebp
jae
fcomi
addr16
outsb
popf
add
repnz
sahf
pop
sahf
fstps
fwait
or
jge
insl
inc
rcrl
or
push
pop
lret
arpl
retw
pop
shr
or
rcrb
sbb
inc
stos
sbb
out
jmp
add
cmp
mov
sarl
jo
insl
sub
dec
sbb
sti
mov
push
mov
ret
cld
mov
dec
aaa
adc
xchg
loop
inc
mov
ds
std
jno
dec
adcl
and
negb
leave
cmovnp
stc
jb
pop
xor
add
push
mov
sti
lds
loop
sbbl
sub
or
ficoms
pop
mov
mov
cmpb
out
sbb
cmp
adc
fnstenv
mov
mov
inc
movsb
mov
repz
sub
adc
inc
lahf
lds
ds
into
sbb
push
imul
lret
dec
adc
mull
jno
imul
dec
jns
ss
mov
cmpsl
sub
push
inc
sar
in
jmp
jle
pop
shlb
in
out
out
push
ds
fs
jge
inc
in
imul
ror
adc
mov
and
ficoml
sahf
inc
jb
mov
inc
and
mov
sbb
pop
or
jge
mov
mov
das
jge
in
test
mov
xlat
test
jae
fbld
adc
sub
in
mov
mov
push
cmp
les
sub
sbb
mov
cmp
ljmp
cmp
lret
sbb
jge
jmp
cmpsl
jns
ret
pop
add
imul
ret
cld
popf
dec
out
cld
xlat
arpl
insl
mov
lds
sbb
sbb
aas
sbb
dec
mov
xchg
mov
stc
addr16
and
sub
sbb
adc
xchg
ja
ret
popa
mov
int3
jg
cmp
out
jns
sbb
fwait
lcall
xor
cmc
movsl
adc
sbb
and
jmp
fnstenv
andl
test
and
cmp
call
sahf
adc
mov
lds
push
mov
in
dec
mov
xchg
add
mov
shrd
and
xchg
pop
or
mov
cmp
ljmp
jl
das
stc
sub
or
into
adc
xchg
sarl
and
arpl
adc
xor
add
test
and
mov
sub
lcall
xchg
mov
dec
xor
sbbl
push
out
xchg
mov
dec
in
push
push
push
ficoml
imul
xor
and
ljmp
adc
outsb
cmc
out
into
aaa
or
sub
fstpl
lods
push
cmp
in
jno
mov
pop
push
movsl
mov
icebp
popa
sahf
sub
push
inc
rolb
xchg
mov
loopne
test
adc
pop
das
inc
cmp
push
jge
add
inc
mov
imul
repnz
dec
jle
fstp
mov
popf
sti
mov
inc
fs
into
aaa
orl
xchg
mov
cmp
sub
cmpsb
push
sbb
mov
jb
mov
sti
mov
lret
and
inc
std
and
js
inc
xor
mov
add
rol
lret
mov
lea
and
mov
or
js
xchg
lret
cmp
mov
mov
jge
cmpsb
js
push
mov
sbb
dec
bound
aaa
fsts
push
push
das
orl
or
and
ficompl
std
sub
xor
pop
pop
push
mov
push
add
cs
xchg
insb
mov
or
outsb
sbb
mov
mov
or
pop
imul
cmp
bound
add
andb
imul
mov
lret
xor
shll
not
loop
lret
lcall
pop
push
and
xorl
lock
call
inc
inc
inc
xchg
push
xchg
pop
jmp
and
imul
out
ljmp
roll
mov
iret
cltd
addr16
faddl
mov
adc
rorl
int3
dec
and
xor
xor
jl
push
xor
call
in
jle
or
sbb
adc
jbe
jmp
ds
ss
lcall
inc
jecxz
and
sub
dec
push
cmc
xor
push
outsl
repnz
pop
cmp
mov
incb
lods
stos
mov
mov
cmp
arpl
xchg
sub
cltd
into
jg
aaa
cmp
inc
data16
das
mov
int
add
push
push
xor
fnstcw
ss
mov
xor
and
push
xchg
jmp
jnp
pop
push
inc
mov
call
jmp
push
ret
fadds
pushf
inc
out
in
test
pop
add
sub
ret
inc
test
out
jb
mov
addr16
sbb
add
fbstp
push
push
enter
sub
popa
jle
jmp
pop
adc
cmp
xor
es
jno
add
push
jns
xlat
aad
adc
outsb
mov
adc
enter
in
sbb
and
push
clc
loope
sub
mov
inc
pop
enter
adc
sbbb
shll
or
adc
push
cli
out
pop
aaa
outsb
push
push
add
stos
inc
mov
xchg
sahf
pop
out
mov
push
faddp
push
ret
in
repz
dec
sahf
insb
inc
out
lret
xor
xchg
push
xchg
loope
iret
and
or
jnp
sub
mov
outsb
fdivl
dec
mov
iret
xchg
sbb
push
ficompl
mov
jno
addr16
fiadds
jmp
test
shl
popa
push
incb
insl
addb
outsl
stc
es
lea
dec
loop
cld
sub
enter
pop
dec
out
and
jne
js
mov
push
lret
not
sub
xor
in
or
sbb
or
daa
xor
js
cmpsl
adc
xor
stos
or
push
sbb
pushf
push
call
out
xchg
pop
fadd
adc
xchg
sti
lret
lds
enter
pop
mov
imul
icebp
enter
fstl
xorl
and
jge
ja
sbb
outsb
add
pop
mov
dec
pop
push
leave
sbb
mov
mov
mov
aaa
push
sar
stos
and
fadds
inc
stos
pop
dec
cs
xor
jns
rcll
cmp
into
ss
stos
push
sub
xor
dec
mov
xor
lods
stc
xchg
fnop
sub
xchg
stos
dec
jp
push
cmc
cmp
test
mov
adc
mov
dec
pop
mov
imul
push
pusha
je
pop
stos
push
subb
lcall
pop
out
sub
adc
aas
jmp
leave
or
ret
call
adc
sahf
out
sbb
mov
jbe
adcb
push
mov
add
pop
jmp
nop
inc
cltd
sbb
insl
add
leave
loope
rclb
andl
dec
lods
jmp
sahf
pop
in
in
outsb
fcmovnb
fsts
sahf
inc
cmpl
jecxz
add
shl
shll
mov
cmp
mov
dec
sti
inc
dec
jp
and
cli
push
cld
fsub
sub
out
lds
push
stos
jge
and
adc
popf
imul
sbb
hlt
sub
fdivrl
cli
mov
fistps
fwait
xorb
cmpsl
xlat
fldenv
jnp
push
dec
mov
ret
sbb
jg
idivl
jno
push
int3
bnd
xor
leave
stc
orb
stos
fbld
dec
add
shlb
sbb
jbe
out
inc
xchg
sub
lret
ja
pop
sub
xor
xor
xor
lods
repnz
aad
loop
mov
int3
test
insb
aad
mov
push
cmpl
jp
adc
lahf
cwtl
adc
sbb
push
xchg
pop
cmovp
int3
pop
and
dec
dec
cs
lret
fcoms
jmp
mov
mull
push
ja
xor
or
ds
inc
cltd
inc
pop
outsl
fstp
push
out
ljmp
pop
cmp
repnz
and
test
clc
jbe
and
repz
mov
xchg
push
push
xchg
dec
roll
add
outsb
adc
movsl
and
cmpsb
and
jnp
mov
out
pop
dec
lock
outsb
mov
sbb
iret
dec
sbb
mov
xor
das
lret
or
test
bound
cmovbe
icebp
xchg
shlb
pop
xlat
mov
aad
add
data16
xor
out
xchg
mov
jnp
mov
mov
cwtl
jg
dec
addr16
push
mov
mov
lret
dec
jb
nop
xchg
or
das
cs
rcrl
notl
icebp
fisubl
loope
inc
xchg
xor
lretw
enter
mov
dec
inc
push
mov
mov
ja
fistl
dec
mov
jo
adc
lock
lods
jns
mov
jmp
dec
mov
das
out
adc
sbb
arpl
xor
test
cli
xchg
sti
dec
mov
jnp
outsl
jecxz
xor
jmp
xchg
aad
loop
inc
pop
add
jmp
mov
mov
shlb
xor
faddl
inc
insb
push
movsb
ret
scas
xor
add
or
push
or
cmc
xchg
sub
jecxz
or
mov
xor
adc
ret
dec
popf
cmp
xor
add
jns
jno
push
cmp
and
shr
mov
sarw
mov
ret
out
in
lods
ficompl
decb
mov
add
aad
push
push
test
inc
inc
cwtl
push
enter
imul
pop
sub
call
xchg
shll
pop
and
xor
sti
gs
xchg
jmp
add
push
xchg
xchg
mov
xchg
test
repz
pusha
xchg
adc
fwait
mov
cmc
xor
mov
xchg
and
or
fcmovne
ss
push
add
rcrb
int3
repnz
push
into
enter
mov
sbb
popa
pop
xor
mov
pop
cmp
dec
pop
and
fisubrl
iret
cmpsb
push
addb
and
fistpll
push
cmpb
dec
fmull
in
cmpsl
mov
cmp
fdivs
cmpsl
je
test
xchg
dec
sti
dec
push
out
fsubl
aas
push
in
imul
aaa
pop
xlat
adcb
jo
push
stos
and
dec
outsl
std
ret
outsl
mov
ljmp
or
andb
mov
xchg
rorl
imull
jp
insb
nop
push
xchg
idivb
adc
adc
fidivrs
sub
dec
ret
scas
inc
add
xor
test
loope
rcrb
lods
and
xor
inc
jb
adc
push
xchg
out
jns
es
xchg
pop
xor
loopne
ret
pop
mov
xchg
aaa
stos
repz
adc
loopne
push
xorb
bound
popa
rol
sbb
aas
inc
lods
push
ret
pop
inc
cmp
push
fwait
mov
inc
dec
std
add
std
and
sub
mov
mov
pushf
dec
ror
cmpsl
popa
or
sub
and
pusha
or
fnstenv
loopne
mov
adcb
sti
int
int
setno
xchg
mov
bound
js
lahf
xchg
xchg
shrl
cmc
pop
imul
out
and
stc
lds
inc
adc
cltd
cmp
mov
scas
gs
scas
sahf
cmp
subl
pop
pop
add
lret
adc
jbe
xchg
daa
jns
cmp
cmpsb
push
ret
and
xchg
sub
jecxz
je
push
aas
inc
cli
mov
lds
nop
xor
clc
loope
sub
inc
inc
and
mov
cmp
fdivs
push
jb
inc
sbb
movsl
jge
adc
jo
mov
lods
push
xor
xor
push
push
and
sbb
test
add
les
xor
sbb
jl
movsl
push
and
negl
sbb
addb
imul
ds
bound
pop
inc
and
pop
lods
lock
cli
lods
jne
sbb
xchg
push
adc
cmp
mov
hlt
pop
sub
cmp
jnp
lcall
sub
add
xor
mov
test
pop
inc
fsubrl
icebp
mov
stc
cmpsl
test
inc
sbb
jae
push
out
and
mov
das
fistl
jl
pop
outsb
fs
in
cmpsb
xor
gs
notb
xlat
adc
cmc
hlt
iret
int
test
and
je
ja
call
sbb
pop
loop
sbb
sbb
aaa
call
sahf
cld
pop
push
jae
ficompl
mov
mov
lahf
pop
pusha
jns
call
and
mov
and
sahf
sub
push
cli
gs
repnz
add
pop
cld
pop
xor
mov
push
into
xchg
int3
mov
pop
xorl
jae
lock
and
outsb
xor
xchg
mov
cmpsb
enter
mov
jb
in
mov
add
test
xchg
mov
mov
shl
cmc
insl
shlb
mov
or
mov
push
pop
cmp
jae
cltd
jecxz
fwait
shr
cmpsl
add
ret
or
mov
sub
mov
rcrl
rorl
xchg
mov
cmp
clc
in
mov
and
pop
shlb
jmp
outsl
xchg
pop
out
jmp
fldcw
idivl
sbb
inc
ja
in
jnp
test
outsb
pop
ss
lcall
loopne
bound
pop
pop
jmp
adcl
cmc
out
inc
jle
aad
mov
orl
sbbb
or
jle
out
lcall
aas
mov
das
pop
push
stos
adc
aas
movsb
mov
mov
subb
movsb
sub
js
leave
sub
pop
push
out
adc
and
and
repnz
or
rcrl
adc
lahf
jno
push
sub
fs
mov
or
es
sbb
push
es
cli
cmc
aad
scas
fcompl
rep
cmp
scas
and
jp
inc
das
lods
cwtl
imul
mov
and
mov
push
add
les
jp
adc
sub
popa
xor
cmp
and
jmp
popf
push
out
dec
ds
inc
add
arpl
xchg
gs
sub
inc
sti
ss
mov
loopne
sbb
sahf
mov
mov
xchg
mov
scas
and
clc
pop
inc
pushf
outsl
adc
pushf
imul
mov
inc
daa
and
in
dec
iret
mov
test
or
jb
xor
dec
pop
cli
mov
cmpsb
cmpsl
aam
add
rcll
mov
sub
mov
fldt
dec
adc
sti
fwait
roll
push
inc
inc
jns
aam
jp
clc
pop
adc
stc
in
sub
repz
dec
push
and
ds
jg
mov
ljmp
daa
lods
sbb
cmp
jl
popa
sbb
lods
push
repz
jge
rcrl
movsl
in
out
fs
daa
sbb
add
ja
sub
cmp
jmp
push
cli
out
popa
or
add
jle
sbb
mov
aaa
push
sub
dec
stos
sub
nop
lock
mov
cmp
jbe
gs
movsb
fsts
stos
xchg
push
xchg
out
and
mov
popa
addr16
fisttpll
xor
rclb
jge
jg
inc
loope
dec
lcall
or
outsl
cmc
xor
test
push
filds
cmp
pop
push
mov
rolb
jno
sbb
adcb
jnp
mov
lds
jo
jecxz
outsl
push
dec
sahf
mov
add
pop
fld1
imul
rcrl
sbb
test
cwtl
movsb
cmpb
sbb
add
loopne
cs
stc
inc
sbb
dec
xchg
push
cwtl
out
mov
notrack
sub
ss
shlb
xor
and
xorb
jbe
call
jle
stc
mov
into
in
push
cmpsl
dec
xchg
ss
inc
int3
sbb
lds
xchg
popa
add
js
jge
push
cmp
loope
and
sahf
add
cld
pop
ja
rorl
in
shlb
addr16
pop
push
lcall
loopne
addb
inc
push
mov
cmpsb
jbe
adc
fidivs
mov
aaa
push
pop
loope
orl
pop
pop
fcompl
mov
xor
sti
mov
icebp
mov
test
int
mov
inc
outsl
jge
lds
in
repz
mov
push
aas
stc
mov
addb
xchg
icebp
stc
subl
mov
movsb
lods
and
xor
jle
ljmp
test
out
xor
jae
dec
push
add
lcall
popf
add
aas
cwtl
cmpsl
daa
push
pop
lret
push
in
loopne
ljmp
stos
mov
cwtl
mulb
rcrl
jecxz
pop
inc
jnp
cmp
jge
out
xor
cmp
ret
pop
movsb
loope
jp
cmp
pop
lret
sbb
mov
push
adc
cltd
mov
mov
sarl
xchg
data16
inc
lds
loop
jno
inc
adc
jns
dec
add
lds
push
jmp
ja
xchg
lods
xchg
and
iret
mov
cmp
icebp
addb
rolb
lods
aas
mov
scas
das
push
xor
lahf
callw
inc
mov
pop
mov
push
inc
int3
mov
rcrl
push
test
mov
push
xchg
pop
pusha
dec
andl
xchg
inc
movsb
pop
xchg
mov
testl
mov
xchg
sub
cmc
cwtl
test
inc
xor
mov
popa
dec
clc
into
push
lahf
cmpsb
pushf
faddp
xor
and
enter
xor
aas
dec
inc
push
std
xchg
rcrb
sub
fcomps
pop
lods
pop
out
dec
lret
cmpsl
mov
adc
cmpsl
push
adc
imull
and
call
fsubl
mov
clc
dec
inc
ja
push
ljmp
jo
adc
or
cs
pop
leave
sub
mov
adc
cmpsb
cltd
jmp
sbb
cld
mov
push
movsl
rol
xor
sbb
cmp
jge
std
jo
jnp
pusha
orb
mov
adc
mov
cli
in
in
push
jle
or
pop
popf
cmp
fldenv
pop
pop
adc
mov
xchg
mov
sbb
ds
sub
movsl
and
dec
adc
call
xchg
sahf
jg
mov
add
xchg
mov
mov
out
xchg
popf
inc
mov
xor
jge
pop
add
sub
add
push
inc
loopne
cmp
inc
int3
jmp
xchg
mul
mov
movsb
outsl
mov
xor
pop
into
shll
jmp
or
test
test
jne
adc
or
adc
sar
cltd
aad
mov
sub
dec
incl
pop
pop
das
test
push
add
out
cmp
aad
ficompl
fiadds
mov
push
cltd
in
pop
mov
gs
mov
int3
inc
pop
push
idivl
aad
incl
andl
mov
mov
xor
les
nop
ljmp
imul
add
imul
ret
pop
or
sub
push
push
push
repz
xchg
loope
xor
xlat
push
dec
push
fidivs
rorl
xchg
mov
hlt
dec
add
dec
push
sbb
aam
shl
mov
push
cld
cmpsb
loop
and
adc
mov
mov
jge
jge
shrl
daa
sub
sbb
lods
xchg
movhps
aad
mull
adc
push
pop
out
push
pop
inc
mov
sbb
mov
sbb
lret
out
push
inc
jnp
jecxz
push
mov
sub
data16
das
mov
inc
pusha
adcl
js
xchg
mov
mov
or
xor
xchg
sti
pushf
lds
into
arpl
pop
jmp
adc
sbb
rcl
xchg
stc
popa
cmpsb
cwtl
push
scas
mov
jae
push
inc
daa
popl
lea
jns
cli
jbe
xor
adc
fisubl
rorl
sahf
imull
push
idiv
pop
loop
sbbb
std
inc
inc
ja
repnz
jne
ja
pop
jl
daa
hlt
add
pushl
fwait
into
ret
pop
insl
mov
lcall
movsl
jge
pop
mov
pop
dec
xor
xlat
add
push
cmpsb
cmp
aam
xchg
mov
push
lret
add
mulb
scas
cmp
dec
outsl
cs
insb
mov
mov
adc
sahf
lods
pop
aas
or
mov
les
rcll
bound
mov
fistps
addr16
adc
jno
js
mov
lcall
cmc
jle
sub
sti
les
xor
add
mov
inc
dec
outsl
sub
or
add
xor
int3
mov
xor
jae
fsubrp
mov
jge
movsb
popa
inc
push
xchg
inc
hlt
jne
imul
cmpsl
and
sbb
push
or
test
outsb
jl
jg
jl
mov
and
or
mov
xchg
aaa
mov
ja
mov
arpl
ss
data16
decl
stos
fs
hlt
jns
int3
xor
mov
fstpt
and
pop
call
xchg
xchg
jnp
addb
hlt
and
sbbb
sub
or
aaa
jnp
scas
push
sub
clc
mov
andnps
mov
push
cltd
aas
aas
lods
lods
ljmp
sub
lea
mov
sbb
cmp
xchg
outsb
add
xchg
icebp
sahf
sti
sbb
fcomps
fs
adc
das
rorb
sahf
es
test
push
pop
fcoms
cmc
sub
xchg
mov
repz
fwait
popa
sbb
mov
inc
mov
test
push
mov
cmc
push
add
call
lods
jge
pop
mov
loop
xlat
sbb
mov
push
and
int
fstpl
jo
jg
outsl
roll
rolb
loope
dec
lock
imul
dec
sbb
sbb
push
mov
push
adc
es
test
push
mov
cs
js
fistpl
arpl
shrl
mov
inc
cs
fiaddl
mov
lcall
xor
test
imul
or
aam
adc
fstpt
inc
mov
daa
mov
cmp
jno
iret
int
add
out
call
ljmp
movsb
data16
lahf
call
jbe
movl
and
cmp
stos
mov
mov
push
mov
add
imul
call
adc
inc
call
repz
mov
out
push
arpl
pop
dec
mul
testb
mov
and
jle
es
push
mov
test
sbb
mov
add
and
jecxz
loope
int3
fistpll
jg
out
xchg
lea
pop
mov
shrl
sub
movsb
fsincos
fs
aam
ret
mov
jle
pop
sub
iret
in
pop
arpl
jns
or
andb
xor
scas
shlb
mov
mov
or
jo
dec
mov
mov
outsl
aad
cmp
jae
ss
pusha
jbe
inc
ljmp
scas
mov
mov
xchg
mov
add
mov
mov
mov
stos
mov
pop
inc
sub
mov
pop
dec
xor
xchg
xchg
fcoml
loopne
mov
sub
jmp
xchg
mov
movsl
add
clc
ret
lods
data16
inc
jmp
push
scas
fildl
subb
xchg
or
xor
cmp
movsl
sub
push
push
jl
in
dec
aaa
xchg
jne
ss
lret
stc
cli
rcl
push
adc
xorb
sub
pop
cmpsl
scas
sbb
insb
in
dec
aas
call
inc
loopne
jbe
testb
scas
in
adc
cmp
je
pushf
test
mov
push
jge
lret
aas
cmpsb
inc
std
adc
sub
insb
fwait
mov
xchg
cltd
dec
sub
mov
inc
xor
loop
shlb
sar
pop
loope
arpl
sbb
mov
iret
fimuls
outsl
aam
popf
mov
cmp
xor
test
mov
test
out
push
sbb
mov
insb
pop
in
sub
mov
leave
push
andb
mov
jae
cmp
ss
ja
push
xchg
and
inc
les
jg
and
lods
cltd
int3
and
ss
daa
pcmpeqw
in
stos
stc
jae
push
pop
mov
jne
mov
or
shr
ret
xchg
loopne
inc
inc
mov
xchg
and
aad
jle
das
out
xor
je
sarl
pop
xor
and
mov
mov
jl
lods
es
mov
xor
daa
lock
gs
sti
aaa
sti
fwait
add
aad
ds
xchg
and
inc
cmpsb
sub
nop
fldt
int
repnz
je
addr16
push
sbb
sbb
lret
and
and
pop
cmpl
insl
das
mov
sbb
jmp
jmp
mov
insl
sbb
push
xchg
or
lret
popa
pop
mov
mov
scas
mov
add
rcl
iret
mov
sbb
sub
xchg
pop
ja
pop
imul
sub
and
test
ret
xor
push
push
movb
in
inc
jl
and
xchg
xor
jno
sbb
add
rorb
sub
nop
or
aaa
cmpsl
push
test
inc
rcrb
lret
cs
cmpsl
or
insl
mov
xchg
sti
sub
inc
in
adc
dec
pop
mov
mov
test
adc
and
fwait
jbe
dec
jmp
addb
cmp
cmp
rolb
sbb
fisubrs
sub
cmc
cmp
jmp
loopne
mov
xor
js
adc
inc
mov
filds
fldt
pop
mov
push
jg
mov
mov
adc
mov
xor
sub
lea
loope
mov
sub
sub
add
fildll
loope
ds
aad
sbb
inc
sti
arpl
pop
dec
stos
imul
repz
and
retw
mov
pop
cmp
out
mov
push
xchg
xor
rcl
int3
push
mov
xchg
mov
jle
sbb
mov
out
push
sbb
sub
repz
pop
cwtl
mov
or
shr
test
repz
test
xchg
inc
jo
cmpsl
mov
dec
sub
in
or
cmp
add
fs
lea
or
mov
push
dec
add
popf
call
pop
sahf
rcll
push
adc
mov
cwtl
mov
jbe
jmp
mov
push
adc
mov
xchg
hlt
dec
test
outsl
mov
push
aaa
loope
sub
fbld
mov
shrb
inc
mov
mov
fisttpl
test
pop
mov
popf
mov
insb
cld
and
test
sbb
fcom
dec
sub
mov
fs
cmpsb
mov
shrb
loopne
mov
dec
sub
movsl
mov
stc
xchg
out
jmp
outsl
add
adc
fcomps
xor
pushf
xor
xchg
inc
ret
mov
adc
fdivs
and
sarb
fwait
in
and
inc
sub
mov
sub
jns
jg
outsl
aad
mov
mov
jl
mov
fs
cwtl
dec
lods
jecxz
cltd
lret
call
xchg
push
out
leave
add
push
jo
push
or
insl
inc
hlt
pop
lods
push
cwtl
dec
adc
add
jb
adc
ret
jmp
shrl
pop
sbbl
sahf
dec
adc
lret
or
fiaddl
lcall
mov
in
inc
inc
jns
or
test
mov
shrl
xor
sahf
pop
xchg
adc
push
push
cmp
cli
cmp
lcall
arpl
push
dec
mov
into
sar
stc
movsb
adc
push
inc
inc
insb
fidivrs
outsb
imul
popl
sbb
inc
testb
mov
inc
xchg
lea
sub
icebp
movsb
rolb
mov
and
insb
loop
mov
lcall
scas
pop
add
in
inc
js
ljmp
scas
push
mov
jno
sub
xor
jns
and
xchg
mov
xchg
push
in
inc
mov
lods
mov
cmp
and
xor
imul
fisttps
add
addb
stos
fisttps
and
cmp
cmp
sub
out
add
fsts
push
div
shl
outsl
xchg
loop
mov
mov
je
push
dec
je
cld
iret
pop
arpl
flds
stos
mov
mov
test
lea
inc
insl
xchg
aaa
aam
scas
in
adc
std
and
lcall
push
adc
repnz
and
sahf
and
shl
stos
jbe
and
hlt
out
movsb
arpl
fcmovb
movsl
insl
lods
pop
mov
rcll
aad
pusha
loopne
inc
jo
mov
cmc
lods
xchg
cmp
add
mov
fisttpl
inc
popl
ret
sbbb
lods
mov
fwait
dec
cli
inc
pop
dec
lret
mov
sub
xor
arpl
mov
movsb
inc
pop
cmpsb
insb
jmp
mov
adc
push
mov
and
out
or
andb
test
mov
sub
loope
push
cmp
sbb
xchg
or
dec
ja
adc
fs
cwtl
fistpl
jne
in
or
adc
jns
jmp
inc
fbld
pop
jno
rorb
xchg
call
xchg
xchg
jge
out
loop
decl
ret
andb
ja
push
rcl
int3
daa
dec
fdivr
jne
popa
insl
xchg
daa
repnz
cmp
lcall
sbb
lahf
add
xchg
and
movsl
mov
rorb
shlb
cmpl
lods
jge
loop
adc
xor
mov
xor
and
pop
popf
movsl
sub
in
pop
sub
out
mov
jb
cmpsl
jo
test
movsb
adc
pop
dec
add
pop
or
xorl
fistl
ss
sub
imul
pop
clc
lahf
sahf
push
and
pop
push
dec
dec
stc
in
dec
clc
xlat
xchg
shrb
cwtl
or
xchg
out
adc
xchg
mov
ss
cmp
and
movsb
pusha
push
mov
ljmp
dec
and
repnz
pop
hlt
sahf
lea
pushf
and
and
outsl
inc
sbb
push
fwait
inc
dec
jge
xchg
xlat
push
sbb
lahf
shll
jno
test
scas
add
bound
daa
mov
xor
sbb
shrb
or
sbb
xlat
cmpsb
test
push
iret
or
es
popa
repnz
jns
sbb
add
sub
adc
mov
arpl
lret
data16
fidivs
imul
in
stos
fcoml
pop
and
cltd
out
or
sbb
sub
popf
cltd
adc
pop
add
mov
fucom
fadds
inc
cltd
incb
mov
ror
pop
or
or
jns
jno
stos
scas
fdivp
pushf
jl
jb
sahf
insb
and
addr16
iretw
test
cs
push
out
xor
pop
jb
cmp
in
cmp
lret
je
xor
icebp
cmp
out
mov
mov
inc
sahf
xchg
incl
std
fldenv
movsl
jns
pop
sbb
xor
int3
rcll
jne
sti
in
filds
loopne
inc
data16
subb
pusha
jp
imul
stos
lret
xchg
add
push
scas
call
sbb
mov
add
imul
mov
sbb
push
jne
inc
test
repz
inc
push
add
lds
mov
jmp
adc
addb
cmp
out
jle
stos
lret
xchg
subl
adc
and
hlt
in
push
mov
cld
jbe
jmp
jge
push
push
gs
sbb
pop
arpl
sub
push
cmpsl
mov
jns
lods
sub
daa
sub
jmp
xor
movsb
xchg
jne
stos
jbe
jne
inc
cmp
push
sar
stc
xchg
outsb
shl
int
fcomip
push
add
dec
into
adc
mov
test
adc
jmp
sbb
mov
mov
ret
std
mov
pop
and
fwait
int3
loope
les
rcll
stos
push
stos
sbb
ljmp
rcr
out
push
inc
decl
mov
cmp
fldcw
xor
inc
incb
sbb
stos
xor
push
cmp
out
ret
cld
orl
add
sub
aaa
pop
lret
jge
lods
es
mov
insl
mov
xor
popf
sahf
mov
inc
mov
insl
lds
sbb
xchg
xlat
inc
push
push
xor
rolb
sub
cmp
loop
dec
cmp
and
cli
dec
inc
test
call
outsl
mov
xchg
movsb
lret
add
lret
mov
jno
push
jns
jg
cld
popf
and
pop
mov
shl
adc
lds
push
imul
fnstsw
jno
imul
mov
cmpsb
dec
lahf
or
das
out
xor
in
imul
push
cmp
mov
cmp
lret
cmp
adc
repz
or
or
cmpsl
xor
push
cmpsl
scas
cli
pop
inc
bound
addb
add
scas
jecxz
out
and
leave
addb
repnz
inc
or
mov
push
loopne
mov
ljmp
push
push
mov
pop
dec
js
aas
push
sub
cmp
imul
xchg
push
mov
pop
std
mov
adc
inc
mov
pop
out
stos
stc
iret
and
jbe
loop
arpl
jmp
fwait
std
push
movsl
cs
loopne
into
test
call
ror
jne
sbb
sub
aaa
test
sub
inc
lds
mov
inc
int3
dec
movsl
jl
jmp
jns
shll
inc
call
and
imul
sbb
mov
stc
in
mov
ja
lcall
in
jecxz
push
xchg
cli
lea
jmp
cmp
mov
inc
pop
add
xchg
out
xchg
sub
in
and
scas
dec
lret
pop
ljmp
xchg
ja
or
add
cmp
or
push
jp
ja
mov
and
xchg
repnz
in
xchg
dec
test
or
push
dec
pop
jmp
daa
xchg
out
sub
arpl
testl
mov
inc
sbb
fs
mov
arpl
mov
lahf
stc
or
out
movsb
adc
xchg
dec
enter
push
jno
fistpl
call
or
sbb
inc
loopne
mov
jae
dec
mov
stc
or
dec
loop
jb
xor
stos
jbe
mov
xchg
pop
lahf
lcall
mov
pop
lret
sub
out
cmp
xchg
xchg
push
addl
in
adc
cmp
fstpl
mov
add
sub
sbb
sbb
or
je
inc
jge
sarl
mov
mov
fcmovnbe
sub
test
xor
das
int3
push
out
jle
xor
nop
jmp
test
loop
fcoml
js
xor
es
sbb
adcl
xchg
rcrb
sbb
pop
test
lods
xchg
sbb
fisubrl
ret
mov
in
in
arpl
fmull
rclb
push
cmp
fnstsw
mov
jp
jl
and
ja
mov
xor
xor
push
mov
pop
adc
repz
and
mov
fstpl
notl
adc
pop
test
mov
add
inc
mov
bnd
outsb
pop
rorl
repnz
mov
pusha
dec
push
pop
test
cld
mov
in
decb
je
dec
shll
js
test
cld
mov
mov
daa
cmp
mov
sub
test
inc
lahf
mov
or
int
je
xor
aad
jmp
and
ds
jmp
jecxz
fdiv
inc
pushf
test
push
dec
call
xor
cwtl
dec
test
lahf
repnz
divl
jns
xchg
mov
ret
mov
dec
int
vpslld
repz
dec
jb
sbbl
sbb
adc
or
test
int3
int
pushf
cmpsl
movsb
pop
push
scas
push
outsl
jg
push
aam
sbb
mov
add
jnp
xlat
int
push
push
mov
shlb
xchg
pop
mov
je
xchg
adc
adcb
lcall
stos
loope
imul
mov
mov
int
dec
sub
inc
movsb
inc
insl
loop
dec
or
sub
cltd
adc
lcall
pusha
and
popf
sbb
in
in
mov
movsl
cmp
ja
xor
loopne
out
mov
pop
pusha
and
cmp
jns
stc
push
jl
mov
leave
jb,pt
cmp
pop
aam
stc
daa
cmp
ret
lock
xor
dec
or
jno
add
stc
stos
or
in
jecxz
xchg
xor
cs
pop
mov
sti
fists
pop
sbb
xchg
add
mov
or
xor
int
jns
lret
ret
adc
cmpxchg
xchg
js
pop
or
pusha
mov
enter
and
insb
and
mov
xor
inc
push
loope
adc
sub
dec
icebp
adc
rcrl
iret
out
add
pop
mov
pop
outsl
mov
pop
mov
add
cs
in
gs
inc
lcall
lcall
mov
popa
outsb
out
ss
ja
jl
mov
cmp
mov
je
jmp
push
xor
push
iret
stos
cmpsl
xor
hlt
mov
sub
and
pushl
aaa
inc
mov
adc
xchg
rolb
cmp
cmp
mov
adc
test
sbb
adc
inc
and
jb
xchg
roll
in
cmp
mov
call
cmp
jp
pop
ljmp
pop
lcall
mov
imul
rclb
jae
or
scas
cwtl
repnz
inc
cmp
movsl
subb
and
xchg
insb
pop
mov
mov
movsl
jg
loopne
sub
fld1
popa
inc
pop
inc
or
xor
mov
pop
out
or
loop
stos
jmp
dec
mov
lds
hlt
call
shl
in
aaa
ds
mov
sub
aam
adc
lods
sub
lea
daa
inc
and
loop
fstl
fnstcw
negl
dec
push
xchg
inc
ret
sbb
and
jg
pop
addl
int3
jne
lret
pop
idivl
jecxz
mov
scas
popf
xchg
add
mov
sub
scas
xchg
cld
pop
or
leave
popa
xlat
pop
ss
loope
cmp
cmp
lcall
xchg
push
xor
mov
push
cmp
inc
out
adc
dec
imul
cltd
inc
imul
inc
aad
sti
adc
adc
repnz
mov
pushf
xor
xchg
jo
fwait
les
push
adc
hlt
addr16
cli
pop
mov
das
mov
ret
ror
jbe
xchg
cmpw
js
jns
push
add
mov
dec
mov
fsubrl
leave
jecxz
inc
and
jne
into
cld
sub
inc
fiaddl
mov
lds
mov
lods
dec
dec
cmc
add
mov
inc
ja,pn
and
outsb
cmp
mov
orl
ds
stos
mov
nop
dec
inc
movsl
imul
dec
pushf
or
and
sub
pop
lods
push
cmc
ljmp
dec
adc
jecxz
sub
mov
dec
adc
out
fldcw
cmc
jns
aad
lds
pop
mov
aaa
or
arpl
cmpsb
int
add
lret
jl
fisubrs
je
ret
sub
negb
loopne
icebp
xor
pop
lret
jl
in
lock
ljmp
insb
inc
movsb
xchg
mov
aad
push
or
repz
push
roll
bound
push
or
xor
dec
pusha
lock
or
test
daa
cltd
fmul
aaa
jne
adc
popa
sbb
cmp
pop
dec
xor
mov
pop
sub
repnz
pushf
pop
jg
stos
lcall
test
aam
pop
push
pop
cmp
and
xchg
xchg
test
jbe
pop
jnp
loope
lods
stos
cs
scas
or
mov
insl
sbb
imul
imul
add
mov
cwtl
mov
clc
jmp
das
or
sbb
sbb
xor
mov
xchg
jbe
add
dec
jbe
dec
pop
out
inc
dec
popf
mov
and
loope
mov
jg
icebp
roll
arpl
xchg
lcall
sbb
push
movsl
cmp
nop
dec
and
xorl
popf
pusha
mov
mov
jno
mov
jb
add
stc
testl
movsb
popf
mov
nop
repz
jno
xor
dec
mov
pop
mov
jle
and
jo
int3
mov
lcall
ljmp
in
in
and
jp
or
loop
shlb
fnstenv
inc
or
jmp
out
inc
cli
adc
xor
sahf
or
in
ret
mov
mov
pop
lret
popf
push
mov
gs
lods
dec
jb
adc
push
ss
in
test
jp
std
mov
lahf
add
cmp
jno
test
mov
call
lret
int3
adc
roll
inc
mov
cwtl
sbb
icebp
stos
js
and
sub
sbb
adc
or
std
inc
in
cmpsl
mov
xor
leave
cli
xchg
ds
mov
push
mov
je
mov
in
add
test
and
movsb
stc
das
or
jle
xor
push
and
adc
clc
pop
js
sbbb
dec
inc
push
divb
shrl
arpl
cmovs
jp
imul
cmc
lret
adc
inc
fs
js
push
xchg
pop
daa
rorl
int
mov
push
jne
lcall
xor
movaps
jae
adc
sbb
popa
ja
fisttps
insb
jecxz
inc
out
lods
aam
xchg
mov
xor
stc
pushf
add
and
rol
push
cwtl
inc
inc
push
pop
imul
push
xchg
aam
xchg
jnp
xor
push
je
sar
fildll
cmp
out
xchg
or
out
cmp
mov
push
pop
or
or
ljmp
mov
or
push
cld
and
pop
xchg
pop
ret
cltd
aas
pop
shll
fwait
lods
or
std
inc
addr16
fnsave
out
lahf
fnsave
je
mov
fidivrl
mov
sub
pop
push
sbb
sbb
jne
push
popa
jge
mov
or
dec
aaa
repz
xchg
xor
das
out
fstps
and
in
fmull
mov
in
jl
push
pop
mov
xor
sbb
and
aaa
in
or
cwtl
and
dec
push
sbb
push
outsl
ja
cli
in
push
lock
mov
push
and
jb
cmp
fstpl
lods
inc
sub
xor
int3
and
fidivs
mov
fwait
add
outsl
repz
mov
pop
loop
scas
add
push
cmp
jp
arpl
xor
stos
out
mov
mov
std
mov
test
dec
ret
data16
or
sarb
jmp
ds
popf
or
mov
and
jmp
sahf
xor
jmp
sub
sbb
loopne
dec
cs
pusha
dec
out
testl
icebp
inc
cs
add
inc
orl
jns
rcll
mov
flds
jle
sub
nop
add
daa
push
mov
movsl
add
icebp
sbb
push
and
or
push
push
lea
inc
xchg
nop
loope
nop
adcl
add
rorb
push
jne
push
mov
sbb
clc
jnp
adc
mov
insb
or
ror
dec
subb
lret
jo
loopne
xchg
into
add
fmull
mov
add
lods
es
movsl
cwtl
ficoml
mov
fptan
inc
mov
adc
lret
pop
cs
cmp
inc
test
imul
das
push
mov
mov
mov
mov
sbb
pop
add
inc
int
mov
sarl
xor
mov
in
dec
jno
push
add
lahf
xor
cmp
repnz
cmc
add
clc
rcl
adc
push
inc
stos
mov
popa
subl
push
dec
push
mov
sbb
mov
ret
gs
repz
cltd
sbb
push
out
test
sub
sti
gs
int3
xchg
in
fstps
and
dec
ds
adcl
xchg
mov
jmp
and
add
sub
xchg
mov
dec
hlt
mov
pop
sub
mov
js
push
daa
pop
sub
in
add
lea
sub
sbb
and
daa
or
arpl
lods
orl
mov
or
decb
enter
sub
cmp
xorb
xchg
cmp
mov
aam
outsl
jmp
mov
push
or
call
cmp
adc
fs
xchg
shlb
sbb
into
xor
mov
pop
repnz
pop
shrb
test
mov
imul
out
pop
movsb
rolb
push
das
out
mov
aam
and
jne
fldenv
add
imul
mov
adc
std
daa
incb
xchg
or
imulb
or
cmc
mov
in
inc
imul
cmpsl
lods
xchg
mov
add
decl
sub
faddp
and
repz
stos
and
sub
int3
je
shrb
mov
shr
pushf
mov
jno
lahf
jmp
outsl
dec
pushf
mov
dec
repnz
cmp
ljmp
and
std
mov
jg
or
push
in
ret
scas
addr16
mov
sar
imul
push
mov
sub
or
test
repz
jne
test
cmp
cli
cmp
and
pop
sbb
adc
call
sbb
xchg
nop
add
dec
mov
and
xorb
mov
das
xor
mov
and
or
test
bound
je
adc
dec
incb
sub
das
insl
adc
stos
popa
cmp
sub
xchg
movsb
out
in
je
xchg
xchg
incl
mov
xorb
repz
xchg
aas
sub
add
sbb
mov
xor
mov
leave
out
push
cmp
cmp
mov
stos
sbb
std
daa
lahf
push
mov
dec
popa
mov
jmp
subl
push
dec
loopne
push
xor
sbb
cli
push
pop
mov
mov
mov
cmc
mov
and
inc
add
mov
sub
push
idivl
cltd
push
cmp
aaa
ljmp
or
sub
in
std
mov
popl
sbb
test
adcl
push
mov
outsl
jne
mov
cmp
mov
je
xor
imul
insb
add
inc
mov
xchg
jg
out
flds
pop
out
cmc
int
sbb
cmp
lret
push
lret
mov
jg
sub
pop
dec
cmp
push
dec
mov
mov
dec
les
pop
repnz
les
adc
out
je
push
insl
fldln2
cld
or
mov
jmp
sub
test
bound
mov
mov
add
sub
pusha
les
int
cmp
fisubrs
dec
iret
sub
rcrb
movsl
enter
mov
adc
lcall
and
xchg
sub
push
add
lcall
out
adc
lock
pop
fists
jg
mov
mov
mov
daa
dec
cmpsl
xor
int
lret
popf
sub
dec
dec
imul
lods
cmpsl
dec
push
push
jmp
jmp
push
idivl
inc
mov
jbe
mull
lods
imul
test
or
and
inc
xchg
pop
cmp
cld
mov
test
dec
mov
out
dec
fldenv
mov
dec
sarl
add
imul
sti
jecxz
inc
push
xor
sbbb
mov
lods
ljmp
jle
cmc
movsb
dec
push
and
in
pop
pop
movsb
adc
out
mov
add
pop
add
inc
leave
xchg
pop
orl
jnp
ljmp
xor
data16
cmpsl
xchg
cs
imul
int3
iret
jno
jg
mov
jb
xor
xor
dec
inc
ja
and
mov
sub
dec
push
aad
sub
mov
adc
adc
in
dec
mov
mov
jns
ret
loop
ja
mov
iret
inc
xor
sbb
cmp
iret
fisttpl
xor
addr16
dec
cmpsl
pushf
cmpsl
sbb
or
or
mov
mov
pop
aas
mov
dec
sub
fdivrs
jle
push
cmp
test
addr16
xchg
pop
adc
outsl
mov
faddp
call
gs
lock
mov
and
adc
adc
mov
mov
push
mov
sub
push
jbe
jbe
cs
inc
sbb
adc
cmc
push
fs
std
adc
mov
aas
adc
lock
xlat
subl
jne
push
sub
push
sbbb
icebp
adc
mov
add
mov
or
daa
fnstcw
pop
adc
arpl
push
xor
adc
addl
repnz
out
dec
jns
sub
mov
inc
jecxz
lahf
jnp
adc
add
push
inc
dec
sub
sbb
jne
add
mov
jno
xchg
xchg
out
fs
inc
inc
cmpsb
add
dec
sti
aad
cmc
pop
jmp
add
adc
xchg
testl
cmc
loop
push
ljmp
jmp
lea
shufps
sub
and
in
pop
xchg
lcall
inc
mov
mulb
fldt
mov
push
mov
ret
inc
inc
and
shr
into
add
mov
int
jle
dec
out
sbb
pop
mov
mov
adc
and
call
js
loop
rolb
loop
out
adc
divl
loopne
jp
mov
mov
push
xor
xchg
insl
fcmovnb
push
jmp
test
dec
mov
pop
cld
roll
pop
and
xor
or
leave
pop
insl
mov
pop
stos
test
addb
cmc
mov
sti
jp
xchg
adc
fwait
inc
inc
inc
in
lods
in
fbld
ror
jno
mov
fdivrl
cmp
xor
rorl
jbe
movsl
or
cmp
pushf
add
jle
repz
lcall
mov
cmp
test
out
lcall
push
aad
stc
dec
lods
and
push
jp
or
ja
sarb
shrd
cmp
sub
shr
sub
pushf
mov
test
aad
pop
pcmpgtw
push
cli
inc
and
xor
jecxz
outsb
sub
imul
sub
mov
sub
lods
mov
lahf
xor
lahf
pop
cmpsl
test
fld
jl
xor
push
sub
icebp
sbb
int3
rcr
lods
in
enter
decl
pop
jg
jno
jo
xchg
dec
pop
loopne
inc
sbb
mov
cmp
pop
rclb
push
and
jmp
iret
pushf
jecxz
sbb
and
shll
aad
fs
cmpsb
lds
out
insl
push
scas
sub
lods
mov
xlat
in
loope
test
and
push
call
xchg
loop
das
mov
daa
lret
and
mov
pop
movsl
movsl
inc
push
jne
insb
adc
out
xor
push
push
cmp
push
mov
mov
add
jbe
lock
cs
icebp
test
cmovg
shl
pusha
fscale
daa
lcall
sub
add
mov
or
in
xor
push
jp
outsl
jle
jb
icebp
notl
aas
adc
mov
mov
mov
scas
jb
push
add
rcl
sub
push
lods
ljmp
repnz
je
leave
les
das
ss
adc
pop
out
shrl
add
xor
outsl
xor
or
ret
mov
rcl
inc
addr16
aas
xchg
mov
cs
cltd
mov
add
pop
push
daa
pop
dec
mov
mov
repnz
loop
fnstsw
outsl
sbb
inc
jno
bound
lret
pop
leave
push
pop
dec
hlt
fwait
mov
xchg
pop
inc
cmpl
inc
mov
cmp
aam
sbb
daa
pop
mov
mov
sahf
mov
push
psubd
nop
in
add
adc
loop
scas
adc
sub
mov
test
mov
aam
gs
pop
out
xor
cld
adc
sbb
notl
push
sarb
xchg
mov
aas
in
outsl
mov
adc
mov
or
out
insb
and
inc
sbb
jne
sbb
jb
scas
int3
das
pop
mov
dec
int3
repz
out
fistpl
js
stos
retw
pushf
lcall
inc
sbbb
pop
and
inc
mov
add
scas
sub
or
outsb
fyl2x
stc
repz
mov
insb
inc
mov
sub
mov
inc
pop
or
cmp
icebp
xor
inc
test
out
xorb
xorb
cmpsb
pop
mov
and
andb
push
fs
aad
loopne
dec
xlat
fdivrs
xchg
fimull
inc
scas
jmp
dec
mov
xor
into
pop
mov
flds
jp
loopne
adc
cmp
in
inc
in
sbb
mov
and
pushf
outsb
sbb
xor
sbb
mov
inc
sbb
rcr
mov
loope
cltd
icebp
repz
in
dec
mov
das
mov
mov
sbb
aam
jo
pop
out
xchg
leave
sbb
push
jae
lret
push
test
rcl
mov
dec
xor
out
pop
push
xchg
or
pop
imul
shrb
repnz
jnp
into
mov
mul
mov
pop
push
dec
shr
fidivs
push
stos
fisubl
cmp
xor
dec
push
loope
loope
insb
sti
lcall
out
inc
mov
out
arpl
push
push
xchg
mov
cmpb
inc
arpl
cmp
jno
mov
mov
add
mov
mov
sbb
rcrl
jns
jecxz
pop
sbb
das
cmpsl
jb
inc
loopne
test
jb
or
notl
test
ret
aas
or
pop
in
mov
dec
adc
sub
push
add
sbb
movsl
sub
mov
dec
mov
popf
icebp
fldl
ficomps
scas
cmp
inc
lret
aas
loope
cs
mov
mov
jbe
mov
cmp
out
mov
xor
mov
mov
je
lods
and
xchg
lods
dec
jno
mov
and
pop
cltd
xor
dec
divl
inc
lea
push
stc
xchg
jmp
mov
flds
pushf
sbb
fcomps
rolb
testl
sub
cmp
jmp
inc
add
dec
in
mov
jo
mov
mov
cli
mov
inc
lcall
icebp
enter
push
outsl
or
mov
fld
mov
adc
push
sub
sbb
mov
add
adc
and
push
pop
push
roll
cmpsl
or
not
sbb
addl
push
jns
frstpm(287
jle
in
rorb
loope
xchg
push
sbb
dec
mov
adc
shrb
dec
std
dec
fdiv
cmp
movsl
xorb
sahf
inc
decb
inc
and
movsb
lcall
repnz
out
popa
and
push
scas
push
outsl
aaa
decl
jo
lret
cmpsb
push
insl
push
arpl
gs
test
push
loope
arpl
int
push
pop
aaa
clc
inc
jp
and
sub
je
loopnew
adc
fldl
ret
imul
popf
xchg
arpl
jecxz
into
mov
add
mov
stc
jg
test
push
mov
dec
addr16
movsl
jmp
adc
jbe
les
xchg
mov
push
mov
int3
fsubs
xor
xlat
and
xor
pop
mov
or
call
inc
add
insl
stos
jg
xchg
fcoms
movsl
enter
mov
mov
add
adc
mov
pop
hlt
cmp
and
xchg
mov
ror
pop
aam
sub
sti
test
xchg
pop
add
xor
scas
push
jle
js
ror
insb
push
or
bound
adc
sub
addr16
stc
and
shlb
inc
mov
mov
pop
dec
jg
mov
mov
pusha
cmpsb
push
sti
dec
mov
in
mov
and
fistl
fistpl
push
push
jno
aad
in
fdiv
xchg
jl
or
adc
mov
movsl
call
mov
ja
xchg
imul
xor
jg
scas
mov
adc
cmc
sub
mov
push
iret
dec
pop
xchg
push
cltd
icebp
shlb
fnsave
sbb
icebp
insb
bswap
xchg
cmp
movsb
popf
add
cmp
mov
dec
andl
int
pop
test
mov
jp
test
push
pop
mov
js
sbb
push
push
scas
fbld
lods
ja
stos
xchg
in
cmp
pop
sbb
in
push
sub
xor
std
inc
sub
int
push
decl
jl
sbb
outsb
xchg
add
in
jnp
add
mov
push
movsl
lock
mov
call
sbb
popf
add
int3
cmp
gs
leave
repz
lcall
adc
jbe
out
in
xlat
fsubrs
in
daa
pop
lea
mov
icebp
cmpsb
xchg
aaa
adc
lods
inc
jmp
std
call
add
ret
outsb
hlt
das
mov
mov
pop
mov
addr16
bound
mov
pop
rclb
subl
add
ds
jnp
jb
pop
loope
pop
scas
ds
inc
ret
mov
movsb
inc
push
fimull
clc
out
out
jnp
jb
push
inc
and
stos
pushf
add
adc
sbb
retw
xor
jl
inc
stos
insl
cmpsl
xor
out
js
testb
add
test
dec
cmp
fsubrs
pop
and
jnp
push
mov
inc
pop
je
cli
jo
idivl
push
bound
out
push
fs
bound
push
pop
mov
jmp
test
mov
xchg
aas
pusha
dec
mov
gs
pop
roll
jae
or
out
test
cld
in
gs
or
repz
jp
push
stc
inc
sub
test
adc
push
push
mov
pop
push
ss
xchg
aaa
dec
sbb
outsb
jno
lods
sbb
mov
and
pop
xlat
das
xchg
mov
mov
pop
push
lcall
jmp
mov
shr
inc
test
mov
stos
imul
pusha
push
mov
mov
and
pop
int
pop
push
and
lret
cmpsb
fadd
bound
adc
mov
dec
xchg
imul
xchg
pop
lods
lds
sub
stos
push
sub
sub
lahf
xor
cmp
call
push
insb
xchg
pop
rcrl
push
lret
or
jns
and
data16
or
mov
aam
sbb
inc
fxch
bt
cmp
xchg
and
ss
pusha
loop
aam
or
mov
lret
add
data16
shrl
in
adc
cmc
pop
je
inc
cmp
pop
xchg
jno
cmp
and
mov
in
in
or
push
test
push
pop
xchg
je
push
cmpsb
ja
push
inc
imul
test
or
ret
insl
and
les
lea
xor
sbb
xor
lds
cmp
mov
add
js
fs
out
arpl
mov
fucom
mov
lea
fnstsw
daa
jne
dec
aad
xchg
xchg
dec
outsl
jne
cld
jge
sub
add
addl
rcrl
inc
xchg
inc
push
cmp
stos
imul
xor
iret
fistpl
or
or
jbe
rorl
jae
fwait
mov
pop
cld
lret
mov
mov
mov
sub
imul
insb
push
bound
jb
mov
dec
adc
sbb
int3
in
sub
dec
and
push
xchg
pusha
mov
dec
sbb
cmc
jecxz
cli
mov
pop
icebp
add
and
xor
mov
jae
ret
aam
mov
jmp
push
scas
ret
cwtl
push
adc
push
lods
inc
push
or
xchg
push
dec
lods
pop
arpl
push
jnp
push
loope
popf
movsb
mov
ds
add
mov
xchg
out
inc
ljmp
cmc
xor
lock
test
push
into
mov
jl
rcl
mov
ficompl
out
mov
jo
cmp
hlt
inc
adcl
xchg
mov
sub
or
fcompl
popa
les
imul
popa
test
sbb
xchg
cltd
mov
pop
inc
mov
cmpsb
mov
pop
cmp
xor
add
into
cmpsl
lock
dec
xorb
push
mov
ret
testb
pop
cmova
push
push
mov
in
mov
imul
cmp
xchg
or
stos
in
inc
xchg
shr
call
test
cmp
and
mov
jbe
pop
push
icebp
repnz
sbb
push
out
in
insl
jno
adc
ror
xchg
pop
call
ljmp
mov
arpl
ljmp
cli
in
popa
cli
pusha
pop
mov
sbb
add
out
fbstp
cs
xor
jle
pop
jle
arpl
les
dec
test
lcall
daa
sub
sub
cmp
mov
insb
cmp
xor
jp
dec
mov
xor
insb
iret
ja
popa
or
push
push
push
jne
cmp
movsl
sub
into
cmp
mov
xlat
and
cmp
dec
fdivrs
xchg
lahf
testb
xchg
pusha
daa
jl
mov
and
popa
mov
daa
es
pusha
jge
mov
in
shrb
pushf
imul
mov
mov
mov
pop
cmp
test
cs
sbb
mov
xchg
or
xor
push
out
push
das
mov
je
and
addr16
inc
aaa
sbb
das
fwait
jbe
pop
cmp
mov
adc
mov
sub
data16
pop
mov
xlat
mov
or
mov
cmpsl
mov
jl
mov
jo
aam
xchg
icebp
mov
aad
push
add
scas
popa
mov
rorb
mov
push
daa
mov
sub
mov
pop
push
cmp
test
fimuls
sbb
lcall
fwait
push
inc
push
inc
sub
lahf
addb
sarb
sarl
lock
roll
enter
pop
pop
out
mov
sub
jb
mov
ret
mov
lret
jno
mov
sahf
iret
pop
dec
in
dec
cltd
sti
push
jno
and
sti
out
mov
dec
data16
popf
outsb
cltd
in
jb
xor
push
out
mov
inc
std
js
pop
xchg
mov
cltd
fdivrl
lods
pop
jae
ss
jge
sahf
dec
mov
adc
mov
arpl
fcmovbe
test
push
aam
pop
outsl
rorw
pop
mov
dec
call
push
inc
mov
shll
scas
mov
mov
pop
lcall
xchg
subb
idivb
pop
dec
in
hlt
roll
shl
cmp
mov
popf
cli
ss
sub
xchg
data16
and
dec
in
test
rorl
adc
out
aad
cmp
inc
cmpsl
ljmp
xor
inc
ret
sub
cmp
shll
gs
je
push
mov
sub
aas
mov
sub
insl
insl
dec
aas
dec
jecxz
out
stc
jp
or
jne
sahf
cld
mov
push
out
xchg
sbb
int
stc
stc
leave
push
and
sbb
add
dec
push
or
loope
dec
dec
das
xor
ret
dec
lahf
orb
xchg
mov
xor
push
mov
test
bound
ja
lret
jp
ljmp
push
stos
push
cmp
cld
fs
sub
lret
jecxz
andb
ja
adc
dec
dec
nop
jle
ficomps
gs
insb
inc
pop
leave
insl
iret
push
mov
ret
jns
popa
mov
dec
stos
cmc
jne
push
out
xor
icebp
sbb
sub
das
sbb
add
insl
cli
fwait
arpl
mov
adc
int
scas
in
in
jle
mov
push
add
pushf
dec
adc
mov
adc
and
jg
bound
out
out
adc
js
sub
mov
stos
test
push
fimuls
jne
push
xor
lcall
add
nop
rclb
xchg
leave
sub
icebp
pop
leave
dec
or
popa
sub
mov
pop
repz
movsb
mov
jb
int3
popf
push
cmp
jb
xchg
cmc
pop
mov
fwait
adc
in
cmpsl
sahf
addr16
mov
jge
ret
into
mov
jnp
fsubrp
fistps
push
pusha
sub
or
lods
mov
xor
push
mov
popa
call
jns
mov
push
sub
inc
into
and
loop
lret
xchg
dec
add
popa
stos
lahf
lods
push
jmp
js
or
push
mov
adc
jmp
mov
ret
insl
aas
mov
pusha
call
mov
rcll
sub
punpckldq
ja
test
insl
or
mov
mov
jbe
inc
sub
xchg
push
mov
jb
jno
nop
adc
pop
inc
mov
cli
jb
mov
mov
mov
and
in
lds
sbb
outsb
sbb
mov
mov
stos
xor
imul
xor
adc
scas
jo
out
fs
sub
xor
fidivrs
mov
incb
repnz
cmc
inc
adc
enter
int3
inc
jb
add
jmp
and
in
sub
cli
aas
mov
dec
lods
in
stos
out
jnp
jp
lcall
out
out
fnstcw
xlat
xchg
pop
dec
aaa
or
test
pop
stos
cmp
inc
scas
inc
pop
popl
adc
ret
stc
fidivrs
sbb
and
addr16
mov
ljmp
inc
int
sub
mov
cmp
test
xchg
push
jle
in
jp
xchg
call
xchg
out
cli
addl
inc
mov
push
movb
idivl
xchg
add
movsb
xor
add
gs
dec
leave
repnz
mov
dec
dec
in
adc
je
xor
xchg
mov
insb
das
pop
cmp
inc
sti
push
sbb
push
movsb
mov
sub
pop
stc
dec
xchg
adc
and
loope
dec
mov
js
enter
lods
sti
or
popf
xchg
and
mov
roll
mov
cmpb
or
dec
mov
or
jns
fsub
fadds
mov
insl
lret
cmpsl
stc
dec
adc
popf
ret
out
cmpsb
adc
cmp
lock
out
push
adc
ljmp
and
inc
cltd
repz
fs
fnstcw
cmp
shlb
push
adc
and
add
addr16
lahf
mov
push
out
and
adc
cmp
rclb
cs
mov
sub
and
pushf
jo
rcrb
shl
ljmp
leave
cs
cmp
mov
mov
movsb
dec
push
dec
add
aaa
sahf
scas
push
mov
add
sbb
xchg
adc
xor
jp
xchg
push
dec
mov
inc
jmp
dec
mov
shll
inc
adc
sbb
jb
push
sbb
data16
notl
aaa
mov
sub
mov
pusha
jge
mov
fstpl
test
aam
or
ljmp
jb
sbb
pop
lock
pop
xchg
push
jbe
pop
fiaddl
mov
mov
scas
xor
mov
cmpsb
adc
testb
sbb
iret
push
mov
scas
sub
out
pop
test
jb
aad
out
ficompl
imul
pusha
mov
or
mov
loop
and
sub
call
dec
popf
mov
addr16
dec
mov
fcompp
out
or
imul
ss
loop
dec
sub
sbb
sahf
adc
fldpi
dec
sbb
fs
cmp
imul
xchg
idivl
ds
xor
push
clc
ret
push
aaa
int3
mov
nop
repnz
or
cmpsl
mov
push
das
mulb
and
cmc
xor
cwtl
inc
addb
es
and
xchg
mov
iret
lret
mov
pop
into
ret
inc
mov
mov
pop
dec
xor
mov
jmp
xor
and
test
lock
outsb
fnstenv
or
inc
sbb
dec
push
mov
jo
cmpsl
pop
jmp
insb
jle
sub
dec
xchg
mov
enter
out
mov
xchg
adc
push
out
jb
inc
outsl
shlb
mov
xchg
or
pop
xlat
pop
daa
lcall
test
push
pop
push
inc
fnsave
ss
or
or
or
sbbb
gs
xchg
inc
inc
jmp
sub
fcmovnu
push
adc
jle
sub
adc
sbb
jbe
sahf
or
pop
js
js
in
jmp
loopne
dec
jnp
sbb
push
xor
sub
sbb
and
repnz
adc
mov
sbb
imul
pop
push
test
lahf
scas
pop
or
inc
call
es
dec
and
push
jnp
mov
inc
nop
inc
adc
inc
xchg
xchg
mov
sub
push
pop
lret
xchg
enter
jl
nop
pusha
and
jecxz
mov
cmp
ret
or
sbb
bound
cs
xor
ret
mov
cs
jle
and
cmp
pop
out
das
cs
xchg
push
mov
cs
dec
cwtl
xlat
jmp
fists
or
dec
add
aam
cmp
call
mov
dec
insb
pusha
cmp
mov
mov
out
add
xchg
imul
dec
inc
jle
and
inc
in
xor
fcmovnbe
rcr
fs
jb
push
sbb
xor
int
or
aam
push
mov
js
hlt
jae
xchg
and
jnp
into
test
mov
add
jnp
stos
xor
out
shr
mov
sbb
cli
loop
loope
test
jge
push
sbb
divl
ret
adc
jp
test
xor
push
cmpsb
stos
rcll
test
hlt
sbb
sbb
mov
repnz
pop
pop
lcall
rcll
orl
inc
and
movsb
xchg
scas
push
pop
loop
sub
stos
and
loopne
and
cmc
adc
mov
add
arpl
pop
xor
mov
pop
or
mov
xor
and
imul
inc
cmpsb
movsb
rcll
cmp
in
xor
xor
mov
and
push
jp
dec
adc
add
xorb
and
inc
or
pop
jae
and
lock
into
xchg
lahf
fcmovnbe
dec
pop
sub
mov
leave
aad
jmp
push
push
lcall
pop
mov
imul
and
sbb
mov
pop
popa
popa
nop
adc
dec
movsb
jmp
pop
shl
out
push
or
xchg
aam
pop
mov
dec
test
rcrl
test
cmpsb
adc
push
jmp
fnstsw
movsb
dec
sub
jnp
sbb
in
add
mov
add
and
out
dec
nop
mov
stc
cmpsl
cltd
gs
or
inc
mov
mov
mov
sub
pop
adc
mov
mov
cmc
imul
insb
jb
mov
sub
cwtl
cmpsl
mov
sbb
mov
xchg
enter
sahf
lcall
xor
sbb
inc
add
add
push
pop
xor
push
add
inc
sub
xlat
lds
jp
mov
jle
fs
enter
int
jnp
push
push
cli
adc
test
inc
xchg
mov
lock
and
test
stc
lods
stos
mov
leave
inc
pop
aas
les
aaa
jecxz
push
jl
cmp
jmp
push
dec
mov
fs
jne
jmp
or
push
imul
and
or
add
mov
je
sub
inc
lods
mov
xchg
mov
inc
cmpsb
test
xchg
xchg
sbb
xor
mov
mov
jns
pcmpeqb
sub
dec
add
pop
pop
stos
sub
jb
imul
dec
mov
cld
jge,pn
and
jns
dec
in
and
pop
pusha
sub
push
xorb
movsl
pop
mov
int
pushf
cltd
fdivs
inc
push
xor
xor
dec
frstor
roll
mov
iret
popa
out
push
fsubl
push
pop
call
mov
movsb
adc
xchg
xchg
rcl
cltd
sahf
jmp
cmp
and
cmp
xchg
cmp
mov
or
rcrl
out
aas
leave
mov
subl
pop
cmp
jge
das
ljmp
or
es
and
adc
mov
sbb
or
mov
and
in
xchg
mov
loope
xchg
push
inc
mov
xchg
add
fbstp
cwtl
jne
mov
cmpsl
pop
test
jle
movsb
mov
mov
jg
inc
mov
imul
loope
loope
sahf
cwtl
into
mov
je
push
clc
inc
cmpb
push
into
mov
call
scas
and
pop
andb
jl
in
decl
jecxz
xchg
pop
pop
xchg
jns
mov
sbb
and
outsb
mov
rolb
psrlq
int3
test
cmpsl
arpl
push
int3
dec
fcomps
pop
andb
adc
mov
fs
push
xlat
mul
xor
jbe
scas
fwait
sub
cmpl
lea
and
and
stos
lret
movsl
lahf
subl
stos
sub
fistpl
popa
lea
push
jnp
mov
icebp
xorl
outsl
mov
sar
inc
pusha
pop
test
insl
cmp
insl
and
flds
xor
xchg
movsb
mov
xor
shlb
jg
push
rolb
js
rol
mov
pop
lea
add
outsl
mov
pop
insl
pop
xchg
dec
fdivs
push
scas
insb
adc
lret
mov
pop
sub
push
subl
mov
mov
shl
xchg
hlt
xor
loop
movsl
je
mov
ret
sub
or
or
lcall
rcrl
ljmp
jbe
adc
sub
adc
sbb
mov
aad
mov
in
xchg
xchg
popa
inc
xorb
shl
dec
or
dec
dec
sbb
popa
dec
std
test
mov
mov
xchg
mov
mov
jns
pavgb
imul
adc
cmp
lea
push
ret
dec
mov
js
xchg
cmpsl
push
push
xor
dec
sub
out
out
aam
push
xor
lds
dec
shl
mov
mov
int3
pushf
mov
xchg
js
pop
sarl
lcall
pusha
pop
cmp
add
inc
pop
pop
mov
shll
dec
adc
hlt
mov
aaa
flds
and
dec
jmp
xchg
cmc
ljmp
outsb
rorb
stc
cld
sub
inc
cmpsb
pusha
mov
xor
jns
inc
insb
testl
inc
mov
add
xchg
mov
push
scas
xor
iret
aam
lret
xchg
das
mov
inc
jae
shlb
sub
add
lahf
mov
jl
xor
call
pop
hlt
jno
cmpsb
cltd
ss
cs
and
mov
xchg
or
dec
shrl
sbb
dec
repz
pop
mov
cmp
fiadds
scas
jne
test
call
xchg
dec
outsl
out
push
cwtl
xor
jge
add
rolb
popf
cmp
jle
imul
mov
adc
pop
in
sub
pop
lods
out
ja
xchg
data16
call
int
mov
fnstsw
adc
addr16
xlat
xor
mov
clc
inc
mov
mov
xor
inc
lahf
faddl
push
pop
mov
adc
pop
out
cmp
inc
aaa
sub
sbb
nop
or
in
ret
push
adc
mov
cmp
cltd
adc
fdivl
push
jmp
popf
adc
enter
and
and
js
xor
add
cld
call
xor
lea
roll
xchg
dec
scas
sahf
les
or
mov
stos
mov
or
mov
lahf
cmc
ss
cmpl
dec
xor
sbb
std
test
sub
mov
sarb
in
scas
outsb
lahf
fimuls
sbb
hlt
in
fldcw
xchg
pop
stc
insl
push
imul
insb
jnp
inc
test
cltd
dec
mov
jmp
dec
xlat
divl
mov
dec
test
mov
mov
movsl
rcl
sahf
or
fsubr
outsl
fistpl
xor
and
jge
shll
gs
sbb
dec
enter
inc
jae
and
in
ror
pop
pop
pop
dec
cli
pop
out
sub
xchg
pushf
adc
add
jno
jae
lods
push
int
mov
std
xchg
jg
pop
aad
stos
xchg
out
das
ret
int
fisubl
movsl
divb
mov
arpl
divb
or
out
loope
inc
xchg
ja
test
cs
movsb
sti
adc
daa
nop
repz
and
lds
inc
sarb
scas
and
popa
jbe
dec
enter
outsl
cmp
lods
push
out
mov
adc
cmp
ret
xor
push
cmp
xor
or
xor
and
or
add
ljmp
sarb
pop
aad
repnz
fnsave
push
or
sub
or
pop
inc
xor
sarl
mov
cmp
bound
adc
into
lock
mov
inc
pop
les
fsub
es
add
pop
xchg
into
jp
cwtl
shll
mov
mov
cmp
fsincos
std
pop
xor
ret
inc
nop
imul
mov
adc
int3
in
js
into
inc
test
repz
sbb
push
scas
outsb
ss
dec
inc
les
push
orb
mov
push
push
dec
outsb
pop
xchg
inc
push
and
lods
pop
push
shll
jecxz
fcoms
sub
dec
out
xchg
out
leave
pop
add
mov
ret
mov
mov
std
adc
loope
sarb
movsb
hlt
pop
ror
mov
add
mov
xchg
push
les
sbb
ss
outsb
aas
push
insl
mov
lds
pusha
xor
sbb
imull
test
imul
push
jp
mov
mov
pop
outsb
mov
imulb
dec
sub
rol
mov
stos
pop
and
inc
push
js
jno
and
mov
add
pop
push
int3
les
inc
mov
je
xor
adc
cs
test
jne
aad
adc
mov
cmp
pop
call
daa
add
ljmp
push
sarb
xchg
out
or
push
mov
xor
xor
mov
sub
bound
add
rclb
jb
sbb
mov
scas
rcl
repz
xlat
jnp
mov
imul
bound
sahf
add
ja
xchg
scas
iret
gs
imul
sub
cmp
int3
sbb
add
adc
mov
jae
repz
test
inc
gs
xor
inc
mov
imul
fimull
cmp
inc
mov
cmp
xchg
cs
scas
outsb
mov
shll
push
mov
lods
pop
push
add
aam
cmp
mov
fs
dec
sar
and
dec
push
fsub
mov
bound
dec
dec
leave
mov
shr
aam
movsl
bsr
jae
cmp
cmp
and
xchg
inc
jl
arpl
dec
pop
movsl
xor
xchg
dec
xchg
mov
jle
mov
mov
fmul
dec
lods
in
aaa
jb
rcll
xchg
cmp
loope
les
sar
mov
icebp
inc
dec
mov
push
jle
mov
xchg
cltd
cvttps2pi
mul
call
fwait
sub
add
mov
scas
aaa
fs
sbb
push
iret
dec
mov
jbe
jns
jl
stc
dec
jne
jo
mov
stos
out
sub
jle
jo
mov
cli
mov
push
dec
int
adc
cmp
cmpl
xchg
loop
jnp
jl
jecxz
fadd
add
les
push
pop
sbb
inc
jbe
push
jecxz,pn
sub
dec
xor
arpl
or
xorl
bound
cmp
and
xor
mov
iret
movsb
push
ss
fwait
inc
stos
int
pop
icebp
jne
fnsave
nop
daa
mov
sub
stos
pop
lods
test
flds
sub
dec
xchg
in
pusha
dec
fsubl
push
mov
aad
repnz
cld
imul
js
and
andl
mov
cmpsl
enter
imulb
add
xor
icebp
or
dec
jae
mov
sub
sti
rcl
movsb
mov
mov
xor
dec
mov
ds
xchg
add
imul
shlb
mov
xchg
shll
outsl
jmp
in
sub
stos
pop
and
xchg
mov
cmc
pop
push
jnp
test
cltd
sbb
inc
sub
leave
sahf
mov
ljmp
mov
dec
dec
and
test
dec
xor
adc
mov
xchg
sti
pop
loope
sar
gs
cmp
cmovl
jmp
cwtl
xchg
cmp
data16
mov
lahf
push
jnp
sub
xchg
arpl
jae
xchg
jbe
ds
push
mov
push
adc
int
sub
jbe
push
pop
mov
mov
push
dec
mov
andb
push
push
adc
xor
mov
dec
cs
cli
testb
add
hlt
inc
xchg
pop
cltd
pushl
ds
ret
rcrl
xor
inc
sub
sub
fmull
cmp
rcrl
mov
cs
inc
xor
fwait
insl
sti
shlb
insl
cmp
mov
mov
and
insb
fstpl
lahf
jge
dec
xor
int3
cmp
in
nop
insl
push
sbb
stos
fs
jl
inc
pop
cmp
ds
lcall
and
jecxz
inc
push
xor
js
mov
cli
shlb
pop
inc
add
es
add
call
test
add
mov
std
mov
arpl
pop
fs
jb
ret
roll
sub
jmp
mov
push
cwtl
mov
xor
sbb
xor
jo
pop
leave
pop
sbb
stc
push
popf
cltd
mov
add
fisubl
inc
dec
mov
and
pop
mov
dec
lds
dec
mov
adc
mov
mov
push
inc
loopne
cwtl
jmp
ret
imul
fistpll
mov
out
sti
mov
cli
lret
outsb
inc
cmpsl
test
movsl
int
jmp
das
imul
loop
pop
xor
dec
push
cmp
mov
mov
jnp
adc
adc
jle
pop
jnp
sbb
inc
clc
mov
aam
xchg
data16
mov
jo
mov
xor
sub
lahf
sub
xor
or
jne
and
je
xchg
lea
pusha
lea
gs
xor
jl
addr16
xorl
fdivr
inc
inc
pop
mov
imul
mov
loop
sub
mov
roll
xor
mov
sbb
or
ret
cmpsb
cmc
add
fs
add
cwtl
cmp
jge
outsl
push
pop
sbb
xlat
xchg
loopne
xchg
addr16
pop
sub
pusha
in
les
jmp
push
mov
inc
sarl
push
mov
or
out
sbb
cmp
push
add
cmp
ja
jno
fs
mov
popf
icebp
pushf
pop
xchg
sub
repz
mov
lods
into
flds
xchg
mov
sbb
push
aaa
je
adc
xchg
xor
or
aam
inc
clc
shl
frstor
mov
fcoml
enter
jecxz
loopne
jno
xchg
mov
sub
lcall
sti
mov
jl
les
gs
in
cmovge
mov
aaa
jno
movsb
rclb
add
popa
stc
sbb
xor
xchg
adc
pmullw
jecxz
mov
lret
mov
call
in
xchg
and
int
out
out
loopne
dec
mov
cmp
fldt
xchg
adc
adc
mov
lds
mov
ss
out
testl
sbb
leave
es
xchg
movsl
mov
pop
mov
inc
mov
mov
jne
sub
cwtl
jne
popa
mov
mov
mov
mov
incl
arpl
bound
adc
pop
jle
loopne
pop
orb
repz
fldenv
loopne
xor
stc
sbb
fimuls
mov
lods
testl
movsl
jbe
sbb
add
fs
xor
cmp
inc
lahf
shlb
lds
ds
fdivrl
jo
fldenv
sbb
test
cwtl
adc
leave
andl
add
repnz
shl
das
inc
repz
pushf
insl
frstor
out
test
mov
ja
cmp
mov
outsb
dec
in
pushf
fwait
out
std
sbb
inc
xor
pop
add
pop
add
lock
push
repnz
punpcklwd
sbb
iret
sub
cmpsb
scas
add
push
js
rep
aam
dec
sub
push
fldenv
fwait
into
adc
popf
jb
daa
enter
mov
ja
jns
xor
insl
mov
stos
fdivrp
push
insl
jg
push
jmp
dec
ficoms
scas
xchg
arpl
shr
push
lods
xchg
xlat
pop
jns
xchg
pop
adc
xchg
icebp
mov
lock
fwait
insl
cmp
clc
sub
bound
mov
jo
inc
sbb
xacquire
loope
ss
jg
push
fidivrs
loopne
adc
subb
pop
cmp
pushf
pop
adc
pusha
push
jbe
xchg
or
loope
push
call
add
xchg
icebp
pop
mov
adc
dec
shlb
call
lea
cmp
jne
jl
jecxz
into
ljmp
loopne
add
icebp
stos
xor
icebp
fldcw
pop
testb
imul
mov
cmpsb
stc
mov
movsl
xchg
pushf
sub
pusha
gs
nop
in
push
push
cmpsb
pop
dec
imul
rcrb
push
inc
xlat
es
leave
inc
cmp
out
cmc
sub
cli
add
or
cmpsb
out
ja
add
mov
leave
out
lahf
pop
sarl
shlb
int3
xlat
sub
clc
sub
in
mov
clc
mov
cmpsb
and
lds
add
idivl
lcall
popa
mov
xchg
loopne
dec
lock
sbb
jg
ss
lret
push
mov
cmp
in
xchg
out
or
and
mov
loopne
fwait
je
mov
gs
xorb
stc
inc
xor
test
push
mov
jge
outsl
psubb
ret
cmc
jp
imul
mov
lods
inc
sub
divl
xor
xchg
arpl
popa
dec
jmp
test
adc
lock
push
inc
xlat
lds
inc
das
in
loope
les
lds
addr16
mov
pusha
ds
mov
jne
sbb
mov
aam
sub
mov
ss
int3
in
jb
mov
in
pop
sbb
loopne
jg
mov
push
mov
pop
je
inc
int3
mov
mov
lods
push
sbb
adc
push
and
ja
fiadds
sti
push
jno
push
xor
pop
out
jmp
push
inc
lock
lea
sbb
push
cmp
out
xor
and
inc
sub
xchg
sti
inc
push
and
inc
adc
call
xchg
cmp
fwait
imul
shll
mov
mov
mov
mov
dec
and
shr
mov
ds
sub
and
roll
and
sub
fcomps
imul
mul
pop
sbb
insl
lahf
inc
mov
icebp
inc
xor
sub
repz
sub
inc
mov
insb
cmc
mov
push
sbb
nop
jmp
mov
insl
leave
xchg
stos
mov
outsl
sbb
in
sbb
or
xor
and
test
inc
sti
cmpsb
test
enter
pop
mov
cmp
movsb
mov
inc
cmpsl
pop
daa
xchg
mov
xor
jl
xchg
movsb
mov
or
inc
or
jmp
inc
jno
and
cs
cmpsb
or
pop
or
push
cmpsb
orb
cmp
addb
bound
stc
adc
stos
push
mov
add
cmp
mov
lds
or
aam
pop
lods
test
xlat
lret
sub
ja
iret
sbb
dec
jecxz
fs
daa
jmp
mov
js
push
int
cli
sti
cmp
orb
and
fcomip
ret
cmp
out
and
jnp
test
int3
iret
xchg
lcall
dec
daa
jnp
int3
mov
adc
mov
jo
gs
sub
mov
loope
cmp
mov
mov
ud2
js,pn
push
insb
rolb
fcmovu
dec
sub
les
adc
cltd
in
xchg
mov
cmp
fcoml
std
push
insb
mov
imul
mov
sub
aam
test
out
shll
movsl
cli
movsb
jae
inc
mov
jge
scas
inc
jg
sbb
xchg
xor
aaa
in
test
mov
dec
movsl
adc
ds
sbb
mov
sarl
test
cmp
sub
ret
xchg
pushf
jnp
add
sbb
shll
lods
pop
out
add
xor
lods
loop
test
push
cmpb
hlt
xor
loopne
into
in
das
cmp
call
jnp
repz
call
pushf
cmp
and
mov
push
pop
sub
loope
push
jl
mov
push
fs
addl
decl
dec
or
sahf
cmpsb
mov
push
push
loop
cltd
lods
add
dec
ficomps
hlt
push
adc
jnp
sbb
stos
pop
dec
or
les
outsb
lock
mov
lods
jmp
mov
lahf
and
lret
idivl
shr
mov
and
hlt
inc
mov
ljmp
sub
movsl
sub
nop
lcall
dec
std
jae,pn
mov
jmp
add
pop
les
xor
mov
inc
ret
cltd
mov
inc
push
call
lcall
jno
cmp
dec
jl
xorl
iret
insl
xor
mov
add
push
mov
jp
fstpl
xor
ds
pop
mov
push
dec
sbbb
push
pushf
adc
enter
jg
call
test
jo
jnp
mov
cmp
test
adc
push
enter
es
jne
test
rcl
cmp
loope
mov
xbegin
mov
mov
sbb
divl
out
out
jno
pop
popa
mov
test
xchg
dec
mov
adc
ret
jp
arpl
mov
je
lret
inc
sbb
rcr
or
out
pop
icebp
daa
out
sbb
inc
sbb
aad
dec
imul
lods
and
in
lea
mov
fwait
xchg
lock
icebp
jae
popa
pop
adcl
jp
inc
sub
test
test
pop
mov
mull
enter
jl
fsubrs
lret
sarb
mov
movsb
arpl
push
shl
fwait
jg
push
or
mov
push
pop
push
scas
insb
push
xchg
inc
push
ret
mov
and
mov
push
xchg
adcb
cwtl
or
in
aad
xlat
loope
mov
adc
pop
out
xchg
dec
sahf
sbbb
and
jbe
push
fcmove
addr16
push
add
add
push
leave
jbe
push
push
ret
fistpll
mov
cmp
push
aaa
push
decl
push
loopne
lock
adc
stos
jg
jmp
lret
xor
lods
pop
mov
insb
push
cli
scas
push
ja
add
cmp
dec
inc
stc
out
mov
jno
call
ret
xchg
in
lods
ret
daa
dec
sbb
negb
or
push
cmpsb
arpl
push
ss
inc
je
lock
jmp
push
mov
jnp
rolb
xor
pop
and
imul
jo
lret
outsb
out
lret
dec
adc
pop
sbb
mov
mov
imul
int
or
pop
mov
add
sahf
cmpsb
lcall
mov
add
push
gs
inc
mov
mov
xchg
adc
rcll
push
mov
mov
xor
dec
jecxz
xchg
inc
into
hlt
idivb
clc
jmp
lret
and
inc
rorl
and
xor
mov
mov
add
cli
mov
inc
pop
mov
cmpsl
push
pushf
xor
mov
mov
cmpsb
fdivs
pop
mov
lods
sub
popf
xchg
mov
dec
mov
dec
xchg
insb
sub
jge
mov
adcb
sbbl
stos
sub
dec
mov
jl
out
hlt
mov
cmp
mov
pop
dec
sar
jecxz
xchg
mov
add
sub
fucom
sbb
jp
cld
cli
divl
jno
push
stos
xor
push
cmp
xor
test
push
idivl
clc
pop
mov
rorl
daa
loopne
in
stos
mov
lods
das
gs
mov
cmp
xchg
or
and
cmpsb
pop
pop
jecxz
cmpl
cmc
cmp
pop
fstpl
pusha
aam
mov
fs
add
sarb
push
aas
or
xor
jns
cs
out
adc
pop
aas
pop
pop
data16
and
xchg
jp
rcrl
xchg
cmp
cld
pop
mov
ljmp
cmp
scas
mov
xchg
adc
jno
mov
mov
pop
mov
stc
fwait
xchg
jno
jl
xchg
dec
xor
repz
inc
adc
aad
je
bound
test
sub
add
in
add
push
or
sbb
movsl
enter
dec
xchg
shlb
mov
lret
popa
sub
mov
xchg
les
inc
mov
dec
push
in
sub
mov
repnz
cmp
lret
out
notl
cmp
cli
orb
inc
cltd
arpl
or
pop
add
adc
int3
mov
jmp
push
nop
and
repnz
dec
add
cmp
loopne
add
dec
sub
nop
popa
mov
fsts
jmp
outsb
cmp
cmpsb
xchg
and
test
insl
imul
sbb
jae
mov
nop
imul
mov
sub
mov
pop
sbb
pop
push
das
imul
out
pop
dec
jne
xchg
ret
push
pop
inc
je
call
jge
mov
test
jnp
jno
adc
push
cmpsl
add
fiaddl
push
jp
in
scas
decb
add
dec
or
stos
and
repz
mov
clc
arpl
pop
push
mov
ds
addr16
cmp
push
dec
ds
xchg
sbb
add
and
fistps
inc
xchg
inc
cmp
repz
inc
mov
jno
ss
cs
mov
xor
jne
jmp
push
rcrb
cwtl
push
les
lahf
lcall
icebp
add
xchg
mov
and
pop
jo
cltd
loope
and
call
cltd
sub
mov
and
scas
mov
rcrb
sbb
mov
sub
inc
loopne
lret
and
icebp
xor
repnz
shr
pop
add
xchg
pop
add
out
mov
or
stos
cmpsl
xlat
xchg
inc
pop
cmp
pop
insb
les
jae
jge
adc
inc
dec
in
adc
xor
xor
in
or
rcrb
lock
pop
fs
cmp
cmpsb
inc
ror
inc
test
cwtl
pusha
cmp
enter
pop
cmc
and
xchg
push
cmp
out
or
push
mov
fcomps
dec
test
mov
mov
sbb
add
pusha
inc
xorl
shl
dec
sub
les
test
or
loope
lds
sbb
les
imulb
fcmovb
push
jecxz
stos
jbe
dec
add
aam
rorl
mov
pop
mov
rcll
stos
mov
mov
inc
cmp
sub
cmp
push
hlt
sub
push
and
push
bound
fs
pushf
call
sbb
jb
pop
negb
and
sbb
pop
pop
jmp
mov
mov
arpl
xchg
out
cli
mov
cs
gs
int3
call
fdivs
mov
fistpl
lahf
adc
pop
sub
roll
sbb
dec
pop
and
jno
mov
and
sbb
jmp
xchg
mov
cmpl
sbb
xor
mov
addr16
sub
lret
and
das
sbb
jb
stc
ror
test
mov
pop
add
adc
test
dec
push
mov
shlb
pop
roll
inc
ret
and
jmp
fbstp
adc
and
fstpl
jb
adc
aad
lea
jne
int
mov
add
ficomps
push
out
mov
out
jno
aad
iret
repz
jg
jmp
cmc
pop
mov
jb
insl
mov
in
inc
jae
shlb
jno
mov
fadd
popa
ja
arpl
sbb
rclb
fidivs
push
mov
call
mov
add
pusha
dec
scas
lret
lods
inc
aas
stc
mov
lock
dec
mov
inc
cltd
cmp
mov
mov
inc
fmuls
inc
stos
xor
outsb
sbb
loope
cmpsb
loope
js
and
push
repnz
mov
jo
or
das
mov
jecxz
test
sbb
or
pushf
xchg
cs
sub
sub
jo
add
popf
aas
ret
mov
jns
arpl
dec
lds
mov
push
dec
mov
inc
les
adcl
dec
icebp
xchg
or
xchg
mov
stos
mov
push
dec
sub
pop
lods
mov
lock
insl
cmpl
nop
xor
add
adc
mov
adc
xlat
cltd
push
mov
movsl
pop
adc
cmp
or
push
sub
repnz
jg
add
aaa
jns
test
sub
cmc
cmp
rcll
insl
in
or
inc
jbe
aam
in
and
fwait
push
pop
aaa
jne
or
push
es
outsl
cs
pusha
insl
add
jecxz
push
cmp
std
test
mov
daa
cmpsl
mov
inc
or
icebp
jmp
enter
scas
sar
adc
jnp
xchg
notb
int
cmp
xor
mov
xchg
dec
xor
fldenv
call
clc
cmp
cmp
shrl
xor
push
imul
push
adc
and
push
xchg
and
cmc
int3
fbld
or
bound
cltd
add
fcoml
sub
in
das
xchg
in
and
push
sub
sub
cli
mov
pop
jle
xchg
and
hlt
jmp
jle
xchg
fstl
std
insl
xlat
popf
xchg
aad
xor
arpl
inc
iret
je
jo
and
jp
sub
clc
push
mov
sub
movsb
rcrb
leave
inc
add
dec
dec
pop
imul
pop
mov
in
fnstcw
repnz
fdivr
fbld
cwtl
mov
ljmp
push
iret
adc
movsb
adc
mov
or
fs
pop
rcll
mov
aad
insl
mov
fxch
dec
jmp
push
ficoms
sbb
movsb
or
rep
lock
xor
add
pop
int3
aad
in
insb
push
aaa
fcompl
inc
cmpsb
into
jnp
xor
jno
adc
cmpsb
mov
jbe
jecxz
jbe
inc
push
xchg
mov
inc
test
add
sti
jbe
pop
out
or
mov
and
cmpsb
stc
insb
adc
lock
pop
dec
or
add
push
int3
sbb
sahf
jo
mov
xchg
mov
add
push
push
notb
aaa
lret
xor
stc
lock
and
cmp
loopne
imul
rcrl
push
or
add
lock
mov
adc
push
movsl
sti
enter
dec
or
insl
mov
inc
add
divb
cwtl
and
add
pop
push
outsl
mov
loope
xchg
stc
in
fnstsw
push
push
jne
push
mov
push
push
inc
or
or
mov
and
cwtl
in
stos
in
sbb
adc
out
shl
in
mov
clc
or
dec
mov
shl
movsl
je
adc
push
adc
cld
lret
aas
xor
fs
inc
fdivrs
mov
inc
xchg
xchg
push
outsb
inc
cmp
push
stc
pop
mov
repnz
mov
insb
mov
inc
movsb
jbe
in
les
and
and
xchg
inc
repnz
mov
hlt
push
in
fdiv
shl
mov
sbb
cltd
sahf
shlb
sub
push
loope
in
outsb
add
mov
mov
jg
adc
pop
lds
xchg
jmp
outsl
pop
pop
test
adc
jg
outsb
or
negb
popl
insl
sahf
data16
add
iret
xchg
sbb
test
cli
cmpsl
cli
loopne
cmp
xchg
xchg
subb
bound
adc
adc
fstpt
jmp
jne
out
jns
ds
and
inc
sub
popf
inc
mov
add
xchg
ljmp
dec
sti
xchg
ljmp
sbb
jnp
dec
hlt
hlt
icebp
out
ds
out
mov
mov
xor
cmp
xor
dec
in
sbbl
xor
int
loopne
pop
arpl
out
lahf
bound
movsb
jae
push
dec
lea
jl
dec
jmp
add
or
add
sti
xor
inc
mov
mov
or
adc
inc
xchg
mov
mov
ds
push
sub
in
in
scas
add
dec
sbb
or
mov
les
test
out
mov
mov
int
fdivs
mov
push
xor
in
jp
ret
xchg
mov
aas
xchg
adc
bound
lock
xlat
aas
sub
mov
push
jno
xchg
in
mov
inc
arpl
repnz
mov
sbb
sub
or
sbb
inc
mov
xor
movsl
mov
jno
push
mov
mov
das
push
xchg
leave
popa
shlb
lret
divl
or
insb
aam
fst
cmp
andb
xchg
xchg
call
sub
lcall
mov
lret
pop
xor
call
inc
xlat
mov
int3
jns
or
in
repz
subb
sti
push
push
loop
sbb
mov
je
sahf
mov
inc
negb
mov
cmp
rolb
cmp
cltd
cmp
leave
aad
inc
cmp
xchg
adc
loopne
and
xchg
shlb
mov
adc
pop
iret
stos
data16
ds
xchg
shrl
sbb
out
xor
repz
add
jp
jnp
fs
dec
mov
mov
mov
lret
xor
jns
loope
pop
dec
cmc
xor
add
es
cmp
push
das
push
pop
or
sbb
xor
lcall
pushf
hlt
push
test
mov
fisubs
mov
xchg
out
sahf
add
std
gs
add
adc
mov
mov
test
or
leave
mov
outsb
mov
push
je
lods
dec
push
mov
popl
lea
sbb
dec
mov
enter
mov
xchg
and
dec
add
aad
outsb
jne
adc
mov
call
add
mov
loopne
icebp
mov
fistl
aam
push
and
out
ja
inc
cs
popf
test
aad
jno
mov
inc
shrb
or
cs
xchg
mov
pop
adc
jp
lods
xorb
arpl
lcall
loopne
shlb
f2xm1
psubsb
mov
pusha
push
nop
and
addr16
aas
mov
add
fldt
out
adc
mov
xor
out
adc
cmpsb
cmpsb
in
into
andl
bound
stos
mov
and
sub
mov
sbb
fadd
mov
dec
add
scas
sub
mov
test
ds
sub
mov
ss
cli
ret
and
stos
pop
cmpsb
pop
adc
and
and
outsb
notl
push
mov
sbb
xchg
sahf
cwtl
out
fisttpll
data16
repz
mov
xchg
je
add
test
and
andb
pop
xchg
sub
ljmp
or
mov
sub
fistpl
cmpsl
test
push
push
push
mov
jne
iret
jae
push
sahf
and
adc
jp
jmp
pop
cwtl
loopne
loope
fnsave
lds
insb
mov
and
sbb
cmpsl
rcrb
xchg
cmp
xchg
pop
repnz
imul
add
dec
pop
jge
lret
loop
xor
adc
jecxz
mov
push
jo
dec
fldl
inc
stc
lods
cmpsl
fidivs
nop
nop
and
xchg
movsl
int3
in
adc
push
jge
and
pop
in
clc
loop
or
mov
inc
and
lods
or
mov
push
mov
lock
daa
mov
xor
int3
pop
push
into
hlt
movsb
jno
mov
push
dec
cmp
lret
push
push
je
mov
lock
scas
jg
or
mov
or
jne
push
jns
pop
test
es
sub
mov
mov
mov
or
push
aam
out
insl
test
add
inc
repnz
popa
xchg
orl
pop
mov
movl
lods
stos
std
out
shll
jnp
and
pop
ljmp
inc
xor
icebp
add
or
mov
push
xchg
loope
pop
test
out
in
cmp
loopne
jb
clc
cmp
add
push
ss
xchg
fldl
push
jbe
and
xchg
mov
clc
div
ljmp
mov
lret
fdiv
jmp
orl
inc
ds
mov
mov
stos
push
int3
in
mov
mov
jle
sub
daa
pop
and
add
cmpsl
jo
adc
ret
mov
dec
sahf
push
adc
orl
imul
mov
mov
inc
push
jge
fistl
rclb
mov
pop
or
inc
out
push
jne
aad
ret
inc
lods
xchg
rclb
mov
imul
inc
aaa
inc
jg
sub
ret
shlb
ss
mov
lret
adc
loop
lock
lcall
scas
or
mov
in
aaa
clc
xorb
in
pop
in
out
xor
idivl
adcl
add
adc
cld
loope
aaa
outsl
stos
jp
inc
pop
nop
mov
jmp
pop
aas
inc
cmp
jbe
bound
pop
cmp
push
mov
dec
ja
mov
xlat
dec
jge
push
dec
loope
fisubs
adc
ret
dec
xchg
aas
and
xchg
lods
xor
insl
fwait
cmp
ficoms
xor
mov
sub
dec
sub
and
pusha
xchg
push
or
add
out
add
fcomip
ret
push
sarl
call
sbb
add
pushf
cmp
aaa
out
leavew
lret
scas
sub
cld
add
shlb
data16
ljmp
cli
lods
fidivrs
add
mov
clc
loopne
bound
test
mov
sub
fwait
xor
xor
cmpsl
into
inc
or
push
sbbl
lods
push
dec
pusha
cmp
push
mulb
pop
mov
repz
std
iret
adc
ss
mov
inc
ficoms
rclb
popa
es
ljmp
inc
push
mov
and
mov
dec
push
sub
pop
fistpll
push
lret
es
mov
jb
test
call
and
mov
loop
lret
xchg
cld
cwtl
rcrb
adc
dec
pop
sahf
add
add
lcall
mov
sahf
lahf
daa
mov
adc
or
or
add
popl
mov
push
inc
cmova
xor
mov
xor
mov
loopne
xor
jmp
icebp
push
jmp
dec
mov
gs
pop
sahf
loopne
push
inc
mov
lods
ja
sub
aaa
js
cmp
iret
enter
icebp
ljmp
mov
cmc
pop
pushf
dec
repnz
imulb
xor
cmp
rol
mov
mov
int
jge
xor
push
cmp
mov
repnz
sbb
xchg
xchg
shl
cmp
inc
lods
outsb
daa
sbb
xchg
sub
scas
rclb
mov
push
lods
and
or
lods
out
sub
push
mov
sbb
pop
mov
cmp
in
jb
repz
xchg
cs
dec
cmpsb
movsb
cmpsb
lahf
and
add
sbb
into
nop
mov
jo
xchg
dec
lret
cmpsb
outsl
aam
xchg
and
pop
addb
mulb
xor
jl
jle
outsl
into
fs
test
xor
jo
test
dec
test
inc
jo
xlat
rcr
push
jecxz
out
sbb
movsb
leave
xchg
mov
pop
pop
jmp
ljmp
testl
xchg
xlat
popf
je
push
out
fwait
jno
adc
cld
cmp
sub
addr16
lea
adc
jbe
out
cli
or
pop
jmp
xchg
std
int3
testl
int3
jp
push
mov
mov
aad
dec
push
jle
jnp
incb
nopl
mov
sarl
push
mov
xor
daa
push
ret
addl
div
cwtl
ss
mov
shrb
cmp
inc
incb
cmp
stos
lock
mov
jns
cmpsl
push
test
ret
jb
jae
pop
out
xor
stos
mov
fs
sti
cmpsb
add
fldl
mov
test
cs
jb
cmp
xlat
mov
arpl
popf
out
jne
mov
cmp
sbb
add
mov
filds
bound
jg
or
push
mov
or
into
pop
into
loope
stos
out
lds
in
loopne
outsb
insb
mov
jno
pusha
lods
scas
xchg
cmovo
fimull
idivl
pop
pop
lahf
xor
clc
xchg
stc
jmp
loop
inc
push
adc
and
adc
addl
lret
mov
call
sub
test
mov
pushf
cmp
js
cmc
sub
popa
cmp
xchg
ljmp
rcrb
push
fidivrl
mov
jg
mov
push
in
adc
pop
mov
cwtl
adc
rcl
mov
popa
imul
and
mov
shlb
pop
pop
mov
mov
pop
xor
ss
jle
cmp
lods
loope
cmc
mov
cmp
jo
lret
push
lahf
xchg
dec
xchg
ficoms
jo
push
popl
aam
stos
es
or
in
and
mov
addr16
cmp
push
ljmp
xlat
cltd
sbb
popf
fs
jno
push
xchg
add
cmpsb
push
inc
pop
in
mov
inc
mov
ss
test
inc
mov
xchg
adc
mov
movsb
movsl
fprem1
mov
daa
mov
out
xor
enter
jmp
out
addr16
lea
xor
pop
ficoms
add
mov
daa
rcll
xchg
push
pop
and
pop
pop
in
add
scas
aad
xor
dec
in
in
out
jg
inc
test
jmp
add
and
cmp
inc
std
sub
test
insb
psubb
push
lcall
xchg
out
dec
pop
pushf
push
jne
xor
gs
inc
test
loop
outsb
or
adc
gs
ret
insb
jnp
xchg
rcr
or
stc
mov
inc
fbld
pop
push
imul
inc
jnp
cli
ds
jno
adc
fnstsw
mov
shlb
ret
xorl
dec
dec
sub
mov
sbb
pop
inc
fmull
addb
xchg
mov
ja
inc
insb
xchg
cmp
clc
jnp
sbb
out
ja
dec
mov
std
cs
clc
cmp
sbb
jno
add
push
loopne
push
sub
int
xchg
jmp
bound
pop
shll
xchg
xor
jmp
jle
adc
imul
mulb
imul
jle
mov
daa
stos
inc
fs
sbb
mov
andl
imul
sahf
mov
cmc
repnz
sbb
pop
add
sbb
pop
fs
push
pop
lea
test
mov
inc
pop
jmp
shll
push
cs
xchg
daa
ds
xor
arpl
push
adc
incl
mov
sub
les
stos
movsb
fildll
jbe
sti
es
stos
imul
mov
out
xor
dec
pusha
fildl
scas
inc
xchg
fst
rcrb
dec
mov
in
sub
sahf
jmp
push
pop
nop
push
cwtl
adc
cmc
jb
ret
push
xor
mov
xor
lret
shll
aas
jo
addr16
mov
xchg
in
cli
pop
mov
mov
or
mov
aas
aam
mov
add
repz
cmp
adc
mov
in
adc
and
fwait
xchg
jmp
addl
je
push
adc
inc
mov
xchg
in
xchg
clc
int3
jmp
imul
subb
push
pop
dec
int3
sub
push
mov
or
das
shll
jmp
inc
jle
adc
xor
call
inc
lods
lahf
mov
imul
mov
mov
ret
ret
mov
lock
clc
mov
mov
fsubl
std
mov
mov
scas
ljmp
sti
cwtl
pop
inc
in
push
push
push
inc
adc
shll
mov
ljmp
xchg
adcl
xchg
inc
insl
mov
lret
push
dec
outsl
push
test
cmp
test
popf
sbb
inc
xor
jecxz
pop
call
mov
dec
xor
fldcw
add
mov
lcall
cli
std
inc
push
stos
inc
scas
mov
aam
sub
inc
test
jmp
jmp
dec
add
pop
inc
movsl
jb
sub
inc
cmp
aas
insb
or
sub
cmp
les
aas
mov
pop
ret
jb
xchg
and
pop
pop
leave
xchg
ljmp
sbb
inc
mov
shll
add
xchg
mov
xchg
data16
mov
xor
and
shr
into
fldt
sbb
jo
jge
jnp
sub
mov
repz
xchg
sarb
dec
pop
dec
iret
adc
in
adc
cwtl
jnp
push
js
ljmp
outsl
mov
js
int
icebp
sbb
dec
sbb
in
sub
lcall
or
push
mov
jmp
aam
mov
mov
sti
dec
mov
repz
push
xchg
mov
adc
mov
gs
sbb
mov
jle
out
mov
fdivrl
push
xor
mov
dec
idiv
mov
push
mov
or
mov
popa
pop
cmp
cmpsb
xchg
loopne,pt
ljmp
mov
cmpsl
outsl
cmp
lret
ret
push
leave
popa
popa
fldenv
das
std
dec
repnz
mov
popa
mov
inc
adc
sub
fwait
clc
mov
sti
or
add
sbb
push
jecxz
and
adc
mov
mov
jnp
jecxz
iret
adc
imul
xchg
addr16
ret
mov
insl
lds
sbbl
adc
push
xor
xor
push
negb
fnsave
fldt
push
sub
adcb
jo
in
shrl
adc
lea
push
and
out
lds
insb
scas
pop
imul
nop
dec
js
inc
icebp
gs
lret
es
enter
in
push
sbb
adc
pop
shld
xchg
pop
jno
add
lock
aam
popl
or
pop
cmpsl
stos
mov
push
dec
xchg
aam
es
in
aam
sub
mov
notb
push
xchg
lock
adc
outsb
push
cmpsl
rcll
mov
dec
push
mov
mov
push
int3
lds
sub
mov
lock
lods
mov
dec
js
mov
mov
sahf
outsl
addr16
push
inc
xchg
xor
fisubs
addr16
jnp
and
lret
clc
sti
into
sbb
pusha
addr16
pusha
cmp
decb
inc
sbb
iret
data16
andl
push
dec
loop
inc
inc
and
and
add
lock
shrb
pop
dec
lahf
js
movswl
call
xchg
jno
andb
sahf
mov
mov
jae
push
int
ds
jle
adc
aad
mov
cmpl
das
divb
cmpsl
iret
test
inc
aam
dec
insl
jle
xor
cwtl
pop
sti
shr
sahf
cwtl
mov
dec
mov
cltd
outsb
xor
sub
mov
das
mov
push
rorb
push
lret
sub
int
call
pusha
daa
dec
leave
xchg
push
mov
cmpsb
insb
ret
sbb
mov
imul
jns
or
popf
adcb
inc
and
push
mov
movsl
jne
push
lods
enter
mov
and
jno
lret
jo
push
mov
fsubrl
hlt
push
insl
std
xor
and
inc
clc
and
or
aam
sub
mov
dec
pop
orl
inc
inc
push
mov
jno
and
bound
pusha
and
loopne
adc
push
push
leave
or
iret
mov
mov
sbb
ret
or
ret
mov
aas
stc
sbb
test
mov
pop
mov
or
jae
sub
popf
outsb
std
push
or
pop
push
cmp
xor
push
cmp
popa
mov
in
rcr
mov
outsl
mov
push
cs
movl
xor
cmp
sti
arpl
or
stos
pop
mov
cmp
aam
fiadds
cs
inc
mov
jmp
dec
insl
mov
inc
cmp
push
jmp
dec
pop
icebp
stos
cwtl
xchg
push
add
pop
adc
adc
stos
test
lea
mov
cmpsb
insb
fldl
xchg
push
rorl
sahf
pusha
xchg
and
jno
jnp
lods
out
push
pop
adc
movsb
ret
and
jbe
in
jle
lcall
mov
jecxz
cmpsl
pop
cmp
fld
pop
arpl
and
push
cmc
ja
dec
inc
push
ficoms
addr16
mov
notb
and
cmpsl
pop
lods
mul
mull
or
roll
loop
cli
mov
push
cltd
dec
cmpb
lea
mov
rorl
aam
pop
dec
fisubrs
ds
add
insb
cmc
dec
repz
lcall
fsubrl
popf
mov
loop
hlt
lock
iret
outsl
or
xchg
mov
sahf
aad
push
xorb
pop
cs
and
lea
out
xor
mov
jp
arpl
dec
rcrl
inc
mov
imul
in
mov
cmp
imul
mov
into
pop
mov
push
ss
inc
or
aaa
mov
pop
mov
push
and
rolb
add
ret
mov
xor
hlt
ja
rcl
das
clc
jns
bound
out
sbb
orl
pop
ja
mov
je
fidivl
xchg
and
aaa
sarl
and
jne
jo
mov
jnp
outsl
sbb
cmp
das
pushf
bound
jb
adc
add
mov
fidivs
cmp
lods
jne
lcall
test
mov
sbb
mov
sbbb
sbb
mov
mov
dec
push
mov
js
lcall
aaa
andb
mov
sbb
lea
orb
inc
jmp
fsubs
fnstcw
pop
sbb
insb
jb
mov
jp
xchg
cmpsb
popf
push
cmp
bound
or
out
out
pop
dec
or
fisubrs
movsb
cld
pop
jmp
adc
icebp
pop
cmp
and
jmp
fdivl
push
fisubrl
shlb
insl
mov
jl
aam
and
scas
push
data16
das
dec
repz
mov
mov
stc
inc
fwait
sbb
fisubrl
mov
mov
test
or
jbe
clc
adc
xchg
jge
testb
fsubrs
push
bnd
loope
ret
insl
sub
or
push
ja
add
add
fstpt
rcl
dec
aad
cmp
xor
xor
sub
mov
xchg
pop
xor
add
cld
out
cmp
rcrb
ficoml
hlt
sbb
dec
xor
push
push
xchg
cmpsb
cld
inc
fwait
xlat
ja
xchg
lret
and
add
loope
cmpsb
and
iret
sbb
fisttps
xor
sarb
inc
mov
ljmp
test
push
add
jnp
int
cs
outsl
movsl
lods
dec
or
jmp
imul
ja
dec
sub
mov
sub
loop
jae
jns
pop
stos
pop
out
outsl
outsb
sub
pop
les
push
and
push
mov
bound
jl
fcmovb
or
adc
test
data16
fmuls
ljmp
push
insb
inc
rolb
insb
jecxz
xchg
out
mov
je
mov
mov
and
or
jae
stos
mov
cld
and
push
pop
jp
xor
bound
fisubl
imul
sbb
mov
pop
push
xor
shll
gs
inc
sbb
push
loope
fistps
cmp
adc
adc
mov
xchg
ja
test
mov
ljmp
and
sbb
lods
push
dec
cmp
movsl
incl
cli
mov
dec
dec
lret
fdivrp
addr16
jle
mov
jns
cs
mov
fnsave
dec
jl
dec
pop
and
icebp
mov
push
lds
jb
dec
pop
or
mov
es
movsl
push
or
mov
fwait
test
xchg
lods
push
dec
imul
mov
xchg
mov
mov
adc
pop
xor
mov
or
pop
in
and
push
or
fisttpll
ljmp
int3
call
pushf
out
or
fadd
push
mov
in
incb
inc
sbb
jp
movsb
or
cmp
inc
cmp
pop
sbb
or
lods
fstpt
stos
pop
adc
push
data16
mov
jne
xchg
jbe
fstps
imul
and
jg
or
jp
mov
imul
inc
cvtps2pi
repz
pop
lcall
std
push
or
lock
jo
push
cli
mov
jnp
or
int3
fidivrl
jge
ljmp
out
leave
push
sub
mov
bound
sbb
and
cli
push
adc
mov
xchg
imul
loopne
pop
outsl
mov
lock
inc
jecxz
test
pop
or
dec
call
jnp
repnz
nop
jno
dec
or
out
inc
faddl
insb
mov
sub
sbb
jge
mov
in
xchg
xchg
out
mov
inc
push
mov
shll
mov
loope
call
pop
pusha
mov
or
pushf
or
leave
jae
add
jb
imul
dec
sbb
lods
jecxz
sahf
mov
sbb
les
inc
cmpb
sub
pop
fld
add
add
dec
out
mov
ficoml
aas
push
add
add
pop
loope
dec
sbb
inc
xchg
jmp
in
dec
adcl
push
sbb
sub
cmp
mov
repz
repz
mov
adc
sbb
or
test
rcrl
in
ja
fucomp
or
xor
lods
add
std
mov
jb
add
mov
adc
inc
mov
scas
mov
dec
and
and
ss
push
fistpl
push
dec
lods
adc
out
sub
cmpsb
pop
mov
jns
sahf
sbb
jo
cmp
mov
bound
cmpsb
sub
test
inc
sti
mov
add
jb
cmpsb
outsb
lds
pusha
jl
nop
mov
sbb
and
xor
jl
adc
fbstp
cwtl
adc
das
adc
jmp
scas
shrl
dec
fists
pop
adcl
es
fildll
incb
mov
gs
das
push
mov
dec
mov
mov
jne
pop
sub
xor
mov
xchg
xchg
dec
incl
sub
ret
mov
mov
je
shr
push
sbb
and
and
mov
mov
lret
mov
popf
loope
mov
sbb
mov
sub
pop
sarl
add
jnp
call
push
fdivs
cmp
pop
or
mov
xor
enter
ljmp
fs
leave
sbb
adc
mov
xlat
sub
iret
and
lret
xchg
das
xor
and
shlb
movsb
cmp
les
bound
in
push
mov
sub
mov
pop
dec
pop
pop
and
fildl
inc
ret
test
icebp
loope
in
lret
fimull
jo
inc
pop
lds
clc
inc
in
mov
popa
jmp
inc
sahf
rcll
and
dec
pop
cmp
jbe
mov
mov
xchg
cwtl
arpl
test
fdivs
je
js
ljmp
leave
jbe
jp
stos
sbb
jmp
inc
mov
adc
popa
gs
cmp
sub
jecxz
outsb
fists
mov
rol
sub
lods
inc
and
fdivs
pop
sti
xchg
dec
sbb
outsl
jo
cmpl
pop
outsb
scas
test
roll
mov
imul
inc
xchg
or
add
fstpt
push
repz
xor
clc
mov
pop
cltd
jne
xor
add
or
cmp
sbb
cmp
sub
push
pop
sbb
aaa
aas
push
fwait
mov
lods
mov
pushf
jne
leave
pop
and
pop
dec
pop
aad
mov
insl
iret
and
jg
push
punpckhdq
or
mov
dec
cltd
jecxz
add
gs
adc
pop
aas
pop
add
pop
inc
rcll
ds
stos
bound
shlb
bswap
and
push
popa
xor
es
push
iret
push
jnp
or
push
inc
xchg
xor
sub
mov
jmp
mov
pop
xchg
sbb
fisubrl
enter
nop
loope
pop
cmc
lods
push
mov
into
into
mov
pop
inc
cltd
scas
test
sbb
scas
lock
inc
jle
push
fwait
add
xchg
lahf
push
dec
jg
leave
sub
xchg
pushf
pop
out
add
test
leave
xor
push
mov
mov
jge
repnz
mul
out
data16
mov
gs
scas
scas
push
addr16
imul
xor
mov
inc
inc
and
adc
add
lret
in
mov
outsl
xor
dec
mov
aad
cmpsl
adc
daa
add
or
xchg
dec
jl
test
pop
xor
ljmp
mov
cwtl
sub
in
movsl
add
cmp
cmp
xchg
xlat
test
in
fwait
xchg
inc
push
jbe
jb
xlat
popa
xchg
adc
cmpsb
mov
and
out
ja
xchg
mov
push
jp
cmp
sub
fwait
or
inc
and
push
sti
in
sub
inc
mov
xor
add
and
or
ret
cmp
inc
xor
js
enter
mov
icebp
cmp
mov
cmp
test
jecxz
mov
pop
xchg
xchg
push
imul
mov
cmp
xorl
popa
push
xor
das
shrl
shrl
xor
adc
std
xchg
sub
les
sti
addr16
sbb
imulb
push
xchg
loopne
popf
xchg
add
jg
ficoml
push
ljmp
addr16
jge
popf
push
lret
jge
push
addb
cpuid
mov
jo
cli
add
movsl
mov
adc
lds
pop
add
cwtl
mov
insl
jg
pushf
ja
mov
pushf
outsl
adc
xor
or
pinsrw
cmp
mov
pop
ret
mov
mov
jo
add
xchg
cltd
cld
test
mov
scas
jge
push
xchg
dec
lret
dec
nop
inc
daa
ret
cmp
xor
jmp
push
mov
dec
add
mov
inc
push
outsb
jne
outsl
xchg
ds
gs
and
sub
mov
push
jmp
icebp
icebp
iret
pop
cli
mov
pop
sbb
fcoml
lods
sbb
test
pop
rol
mov
loopne
and
in
and
cmp
popa
or
out
ljmp
sbb
pop
add
lcall
out
adc
mov
fisubl
scas
adc
adc
jno
scas
mov
xchg
into
adc
outsl
pop
enter
sub
insl
inc
pusha
mov
push
add
xlat
inc
fnstsw
or
pusha
repz
or
sbb
mov
adc
inc
ficoml
mov
mov
dec
dec
pop
dec
out
cmpsb
inc
das
or
adc
jg
lds
repz
mov
jp
and
les
bound
add
inc
call
and
or
es
testb
mov
jg
add
cld
push
add
mov
lahf
mov
cmp
cmp
gs
jecxz
jno
movb
std
xchg
cmpsl
sbb
sbb
lahf
sbb
out
mov
or
scas
xchg
or
push
push
daa
mov
cltd
movsl
jne
push
gs
push
push
imul
inc
out
loop
cmpsl
pop
pushf
cli
jmp
and
fstl
push
xchg
sbb
std
insl
sarb
shlb
pusha
xchg
addb
cmp
mov
xorl
imul
pushf
lock
test
mov
lahf
iret
or
sarl
xor
hlt
popa
inc
insl
mov
fmuls
mov
pop
lahf
and
in
hlt
sbb
xor
fldt
je
repz
jl
aam
aaa
inc
mov
dec
mov
cmpsl
shl
pop
xchg
arpl
pusha
xchg
pop
mov
jne
mov
ror
add
inc
outsb
pop
xlat
imul
loope
add
inc
inc
iret
imul
rcrl
mov
arpl
or
sub
jmp
mov
cwtl
add
aaa
adc
mov
shll
shr
sbb
jp
mov
add
adc
mov
sub
xor
mov
mov
jmp
adc
js
imul
push
mov
mulb
jp
aad
add
mov
dec
jne
jl
dec
and
add
dec
popf
mov
outsl
and
sahf
in
or
das
in
cmp
inc
jl
add
pop
jns
jle
and
aad
and
popa
stos
xlat
mulb
mov
add
incb
repz
jae
jnp
cmp
out
int
mov
sub
jmp
sbb
outsb
cmp
std
cmp
lods
and
jl
and
push
push
or
pop
mov
out
sub
cmp
sub
ficoml
mov
cmp
mov
dec
mov
daa
pusha
fwait
push
or
out
sbb
testl
jg
push
pop
fwait
out
sub
pop
jnp
cmp
mov
icebp
add
add
fnstenv
cmp
add
outsb
cltd
pop
pop
lahf
push
ret
cmc
add
cmp
and
aas
lds
add
lret
mov
mov
rorb
sbb
xchg
mov
xor
sub
lret
add
xor
sub
not
jne
out
test
outsl
push
push
inc
icebp
pop
gs
cltd
je
lea
jecxz
sbb
movl
int3
dec
fcmovnbe
loop
out
mov
xchg
add
push
fistpll
sbb
cmp
loopne
push
inc
sbb
jle
test
jle
ret
enter
mov
or
xchg
jg
lea
xor
jnp
clc
xchg
stos
adc
setae
and
xor
pop
shll
jbe
icebp
push
inc
aad
pusha
sub
mov
mov
pop
mov
sbb
add
pop
mov
rorl
mov
add
jge
inc
rcrb
jns
adc
xchg
std
cmovae
push
lock
sub
mov
outsb
xor
or
enter
sahf
sbb
ja
dec
test
movsb
cli
jecxz
insl
jbe
imul
repz
xlat
aad
mov
psraw
mov
mov
push
call
pop
mov
daa
mov
lea
int
pop
aad
iret
shlb
add
add
jo
sahf
popa
mov
mov
mov
dec
in
or
imul
loop
aam
sbb
repnz
jne
pop
sub
loopne
adc
jecxz
jge
push
insl
lahf
out
adc
les
lods
out
ret
mov
xor
cld
or
mov
imul
mov
xchg
or
loope
mov
imul
aas
lods
stc
cmc
and
sbb
fstpl
jne
ret
movsl
adc
dec
pop
imul
std
mov
xor
xchg
cmpsb
pop
xchg
mov
clc
jp
cmc
loop
fmull
enter
fcompl
addb
sbbl
and
pop
or
jns
push
xchg
negl
dec
in
decb
inc
es
ljmp
aad
div
fs
nop
pushf
or
lock
rclb
sub
es
and
inc
push
push
jno
add
testl
jmp
imul
rorl
scas
nop
rclb
mov
dec
daa
outsl
pop
dec
outsl
lods
cmp
pop
push
mov
es
fldcw
xchg
enter
clc
jmp
out
inc
hlt
xchg
mov
lods
fmull
or
and
in
xor
add
adc
add
test
mov
out
imul
adc
adc
pop
fwait
test
adc
sub
in
nop
iret
mov
fdivs
mov
xchg
loopne
ffree
les
push
xlat
fstpt
mov
mov
sub
lahf
xchg
call
enter
add
push
in
std
xor
popf
and
out
pop
mov
int3
gs
in
test
mov
push
add
inc
inc
fisubrl
out
push
aad
pop
ljmp
lds
pop
mov
repz
testb
add
cltd
and
push
stos
jo
mov
adc
lods
imul
leave
jg
in
sub
popf
xchg
mov
pushf
aaa
cs
lods
and
pusha
loopne
dec
ds
xchg
dec
xor
scas
pop
xor
rolb
sbb
dec
or
dec
sub
sti
outsb
mov
das
xchg
add
loop
sub
stc
lods
add
lock
and
in
sub
jge
sub
fbstp
xlat
inc
or
lahf
fcmovb
xchg
in
jb
in
ljmp
jae
xor
mov
arpl
mov
jg
mov
mov
inc
in
and
rcrl
cli
andb
aad
adc
xor
rcrl
mov
mov
xchg
dec
xor
dec
in
pop
add
ret
outsb
lret
mov
test
push
cld
push
sahf
iret
imul
pop
xor
pop
adc
clc
in
inc
clc
push
dec
sbb
jp
and
push
push
fmul
pop
mov
push
mov
pusha
mov
shlb
mov
outsb
fs
xchg
insb
sbb
xchg
fstpt
pop
dec
inc
es
into
cmc
arpl
mov
mov
leave
insl
xor
pop
pop
mov
bnd
xchg
cli
sti
mull
sbb
in
bound
cmp
xor
mov
loopne,pn
arpl
adc
fs
pop
mov
fbld
orl
in
dec
test
xor
dec
jns
dec
dec
or
add
negl
mov
cmp
jb
dec
insb
inc
fldenv
lcall
sbbb
ljmp
cmp
inc
lods
mov
mov
push
insl
shr
mov
mov
stos
cwtl
aaa
rolb
out
adc
inc
jbe
push
or
inc
cmp
pop
loopne
inc
sbb
pop
or
add
jnp
dec
xor
inc
xor
mov
xchg
test
cmp
xor
fwait
scas
fwait
sub
test
mov
push
sti
pop
sbb
aaa
push
inc
xchg
push
repz
mov
mov
ret
mov
jmp
pop
mull
idivb
jmp
xor
roll
mov
lret
sbb
mov
push
lret
jg
sbb
mov
xlat
pop
imul
inc
fwait
ret
dec
in
scas
dec
je
divb
pushf
stos
push
pop
pop
rorl
push
fcmove
inc
add
ds
or
mov
xchg
xor
sbb
les
mov
scas
mov
xchg
cmp
or
js
shrl
and
adc
pop
fdivrp
hlt
icebp
mov
xchg
mov
xchg
in
pop
aad
cli
fwait
inc
cmp
test
faddp
test
xchg
lret
fmul
pop
aam
xchg
inc
push
enter
in
pop
jae
push
cmp
jo
jae
clc
fmull
push
sahf
sbb
and
push
mov
out
jo
je
ss
test
sahf
ja
mov
adc
jnp
mov
mov
andb
jle
fcomi
test
pop
cmp
xchg
cmp
mov
cs
xchg
test
jns
lcall
mov
std
mov
adc
pop
adc
sub
inc
inc
pop
and
push
pop
pop
cmpl
ljmp
and
dec
mov
mov
inc
cmp
push
inc
fs
add
add
mov
roll
push
imul
mov
pop
out
mov
scas
mov
mov
fstl
lea
movsb
pop
jb
ret
add
push
mov
aad
leave
jo
jae
into
mov
pop
in
adc
test
hlt
loopne
push
push
outsl
dec
mov
adc
aad
push
sti
cmpsl
mov
fwait
jle
xchg
aad
cmpsb
jns
sahf
lds
js
fwait
push
cmp
lret
jo
pop
mov
add
jo
jo
xor
and
sub
sub
add
jns
pop
movsl
das
int3
push
mov
mov
fisubs
sub
cld
nopl
adc
stos
and
and
xchg
cli
out
push
jne
adc
nop
movsl
push
mov
lret
pop
scas
pop
shrl
pusha
cmpsl
bound
mov
cwtl
dec
mov
sub
popa
mov
nop
clc
pop
jl
or
or
cmp
pop
mov
dec
popa
js
sarb
or
mov
sbb
out
popf
xor
push
sub
mov
outsb
pop
in
or
arpl
fwait
rclb
icebp
xor
notl
nop
and
add
fwait
sub
cmp
mov
mov
mov
and
push
icebp
sub
fisttps
lock
xchg
fidivs
out
cmp
xchg
dec
jp
lds
jne
jbe
mov
sbb
enter
or
mov
ljmp
adc
gs
dec
fcoms
sar
stos
call
mov
es
hlt
pop
outsl
data16
pop
pop
mov
imull
ljmp
call
or
in
stos
xor
or
xchg
outsb
cmp
jle
inc
mov
adc
dec
dec
jbe
orb
jne
testb
sbb
orb
jno
xor
inc
xchg
jle
xchg
je
pop
repnz
pop
stos
inc
aas
int
jl
mov
das
incl
pop
xchg
loopne
cmp
xor
in
lea
scas
sahf
mov
cmp
in
cli
push
lock
popa
mov
imul
xor
cmp
add
sub
add
in
pop
adc
xchg
cmp
rcll
idivl
je
sarl
mov
aas
pop
inc
notl
mov
jo
popf
sub
inc
repnz
sbb
add
lret
ret
xchg
imul
cmpsl
mov
fwait
mov
mov
mov
loop
pop
pop
punpckhbw
in
loopne
cmc
push
mov
add
push
or
std
push
pop
scas
add
jbe
in
pop
xchg
adc
or
gs
cmpsb
pop
bound
xchg
or
divl
test
cmp
in
sub
jmp
in
fs
adc
mov
aam
movsl
stos
sbb
inc
pop
jo
fmull
or
inc
xor
cmpb
loopne
lcall
fmuls
inc
in
aam
sub
pop
out
pop
dec
inc
mov
into
xlat
in
loop
out
scas
or
outsl
jnp
jl
and
inc
or
xor
mov
imul
add
mov
push
jmp
jno
mov
xchg
lock
push
jo
and
insb
mov
mov
pop
lret
repz
mov
sub
jno
cld
add
rcll
icebp
mov
xchg
or
mov
xchg
rcrb
decb
pushf
inc
in
xchg
jne
jp
dec
scas
into
mov
sbb
xchg
fimuls
cld
mov
xor
push
idivl
push
repz
popa
fsubl
cmpsb
or
fnstcw
mov
lret
add
mov
push
mov
movsl
daa
xchg
mov
xchg
divb
in
dec
sbb
inc
lea
out
ret
stos
inc
fistpl
loope
mov
xchg
bound
mov
xorl
ficoml
lock
mov
sarb
push
push
mov
mov
mov
mov
mov
fstps
jne
out
imull
push
jecxz
mov
sbb
cwtl
out
out
xchg
adc
and
mov
in
mov
mov
je
mov
into
inc
popa
sti
idivl
cmpsl
hlt
push
mov
or
rorl
add
fscale
loopne
mov
lcall
das
fidivs
and
or
push
les
gs
jo
sahf
xchg
popw
pop
data16
mov
mov
daa
loope
test
aaa
fsubl
cmpsb
fcompl
push
loopne
and
das
mov
add
insb
pusha
jnp
in
xchg
insb
add
dec
sbb
imul
jnp
cmp
jl
cmp
iret
pop
jmp
add
push
push
into
js
pusha
dec
jne
mov
sbb
jbe
dec
repz
mov
in
or
jbe
sbb
cmpsb
cmpsl
inc
in
xor
sub
daa
icebp
xorb
movl
clc
sub
icebp
js
adc
cmpb
xchg
mov
in
loop
and
ficompl
pop
test
cmp
push
cmp
int
faddl
mov
lahf
insb
xor
mov
adc
add
pop
fwait
xchg
les
adc
test
sahf
test
int3
mov
cwtl
add
adc
push
jno
jnp
add
add
add
add
add
orb
add
pusha
add
addb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
and
and
add
add
test
add
add
add
sub
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
incb
aas
incb
aas
incb
pop
pop
incb
lcall
add
lcall
lcall
add
lcall
lcall
add
lcall
lcall
add
lcall
lcall
add
lcall
aas
incb
aas
incb
pop
pop
incb
aas
incb
xor
incb
xor
incb
lcall
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sar
add
incb
xor
incb
aas
incb
aas
incb
aas
incb
xor
incb
lcall
add
incb
xor
incb
xor
incb
sub
mov
add
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
pop
pop
incb
aam
incb
xor
incb
xor
incb
aas
incb
popa
pusha
incb
aam
incb
aam
incb
aam
incb
jp
incb
xor
incb
xor
incb
xor
incb
add
adc
sub
mov
add
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
sub
mov
add
incb
xor
incb
sbb
mov
sbb
mov
xor
incb
sub
mov
add
incb
aam
incb
lcall
add
incb
mov
incb
popa
pusha
incb
popa
pusha
incb
xor
incb
xor
incb
xor
incb
sbb
mov
add
add
sub
mov
add
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
adc
or
add
incb
xor
incb
or
aaa
add
mov
xor
incb
or
aaa
add
mov
xor
incb
aas
incb
jnp
sti
add
lcall
lcall
add
incb
xor
incb
xor
incb
xor
incb
adc
add
add
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
sbb
mov
add
add
sub
mov
add
or
add
mov
xor
incb
add
add
sub
mov
add
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
xor
incb
xor
incb
or
aaa
add
or
add
or
add
or
add
or
add
daa
mov
add
incb
xor
incb
add
add
adc
xor
add
add
add
mov
sub
mov
add
daa
mov
add
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
xor
incb
sub
mov
add
add
add
mov
xor
incb
xor
incb
xor
incb
adc
add
add
incb
add
add
sbb
mov
sbb
mov
add
add
xor
incb
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
xor
incb
sbb
mov
add
adc
sub
mov
add
daa
mov
add
add
add
mov
sub
mov
add
incb
xor
incb
xor
incb
sbb
mov
add
add
xor
incb
add
add
sub
mov
add
add
add
incb
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
xor
incb
adc
adc
add
incb
adc
xor
add
incb
add
adc
adc
xor
add
incb
xor
incb
xor
incb
xor
incb
sub
mov
add
daa
mov
add
daa
mov
add
or
add
incb
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
xor
incb
or
aaa
add
mov
xor
incb
add
adc
adc
adc
add
add
add
add
add
incb
xor
incb
xor
incb
sbb
mov
sbb
mov
xor
incb
add
add
sbb
mov
add
add
sub
mov
add
xor
add
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
xor
incb
add
add
sbb
mov
xor
incb
adc
add
add
add
add
add
add
add
add
daa
mov
add
incb
sbb
mov
add
add
sub
mov
add
mov
add
add
sub
mov
add
mov
xor
incb
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
xor
incb
add
add
adc
xor
add
daa
mov
add
add
add
daa
mov
add
mov
xor
incb
xor
incb
sub
mov
add
or
add
add
add
mov
add
add
sub
mov
add
mov
xor
incb
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
sub
mov
add
or
add
incb
xor
incb
add
adc
or
aaa
add
add
add
mov
xor
incb
xor
incb
xor
incb
adc
add
add
add
add
mov
add
add
sub
mov
add
mov
xor
incb
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
sub
mov
add
add
add
incb
xor
incb
adc
add
add
mov
xor
incb
xor
incb
sub
mov
add
or
add
add
add
daa
mov
add
daa
mov
add
daa
mov
add
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
sub
mov
add
add
add
daa
mov
add
mov
add
add
sbb
mov
or
aaa
add
xor
add
incb
sbb
mov
add
adc
sub
mov
add
incb
add
add
sub
mov
add
daa
mov
add
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
sbb
mov
add
adc
add
add
adc
xor
add
daa
mov
add
adc
add
or
add
incb
xor
incb
sub
mov
add
add
add
daa
mov
add
add
add
daa
mov
add
mov
xor
incb
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
sub
mov
add
or
add
mov
sbb
mov
or
aaa
add
incb
xor
incb
xor
incb
sbb
mov
add
add
or
aaa
add
incb
add
add
sub
mov
add
mov
xor
incb
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
sbb
mov
add
add
add
adc
add
adc
add
add
adc
sbb
add
add
add
mov
or
aaa
add
or
add
incb
xor
incb
sub
mov
add
add
add
add
add
add
add
mov
adc
adc
add
incb
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
sbb
mov
or
aaa
add
or
add
or
add
or
add
daa
mov
add
xor
add
incb
sbb
mov
add
add
sbb
mov
sbb
mov
sbb
mov
sbb
mov
add
add
xor
incb
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
sbb
mov
add
adc
add
add
or
aaa
add
or
add
or
add
mov
xor
incb
xor
incb
xor
incb
add
adc
add
adc
sub
mov
add
add
add
or
add
daa
mov
add
daa
mov
add
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
sbb
mov
or
aaa
add
or
add
or
add
add
add
or
add
or
add
xor
add
incb
xor
incb
xor
incb
sbb
mov
add
add
add
adc
sub
mov
add
add
add
incb
add
add
sbb
mov
xor
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
sbb
mov
add
adc
add
adc
or
aaa
add
add
add
mov
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
sbb
mov
add
add
add
adc
sbb
mov
add
add
xor
incb
or
aaa
add
xor
add
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
sbb
mov
add
add
or
aaa
add
mov
add
adc
adc
add
add
daa
mov
add
incb
xor
incb
xor
incb
xor
incb
adc
add
add
daa
mov
add
incb
or
aaa
add
or
add
incb
xor
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
add
adc
adc
sbb
add
add
add
mov
sbb
mov
add
adc
sub
mov
add
incb
xor
incb
xor
incb
xor
incb
sub
mov
add
mov
add
add
xor
incb
or
aaa
add
xor
add
incb
xor
incb
mov
incb
jnp
sti
add
xor
add
incb
xor
incb
adc
or
add
mov
add
adc
sub
mov
add
daa
mov
add
daa
mov
add
incb
xor
incb
xor
incb
xor
incb
adc
add
add
mov
add
add
xor
incb
add
add
sbb
mov
xor
incb
xor
incb
xor
incb
mov
incb
mov
incb
xor
incb
xor
incb
xor
incb
adc
or
add
mov
or
aaa
add
add
add
incb
xor
incb
xor
incb
xor
incb
adc
add
add
or
add
add
add
daa
mov
add
daa
mov
add
incb
xor
incb
mov
incb
jp
incb
aam
incb
mov
incb
xor
incb
add
adc
or
aaa
add
mov
add
add
add
adc
or
aaa
add
or
add
or
add
or
add
xor
add
incb
xor
incb
xor
incb
add
add
add
adc
sbb
mov
add
add
adc
adc
add
add
add
incb
xor
incb
pop
pop
incb
jnp
sti
add
lcall
mov
incb
aam
incb
sub
mov
add
sbb
add
add
add
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
sub
mov
add
daa
mov
add
add
add
daa
mov
add
or
add
incb
pop
pop
incb
aam
incb
lcall
add
incb
aas
incb
xor
incb
xor
incb
lcall
add
mov
xor
incb
sub
mov
add
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
xor
incb
add
add
adc
xor
add
daa
mov
add
incb
lcall
add
incb
aas
incb
aas
incb
xor
incb
xor
incb
aam
incb
lcall
add
lcall
lcall
add
lcall
lcall
add
lcall
lcall
add
sti
add
lcall
lcall
add
sar
add
incb
xor
incb
aas
incb
pop
pop
incb
aas
incb
aas
incb
pop
pop
incb
jp
incb
jnp
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
incb
pop
pop
incb
aas
incb
aas
incb
pop
pop
incb
add
add
sbb
add
add
add
jo
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
add
push
adc
add
pop
sti
clc
add
.byte
.byte
