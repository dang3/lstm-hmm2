out
mov
mov
or
xor
mov
iret
in
push
sub
lret
add
inc
or
mov
push
imul
push
xorl
pop
xchg
dec
cmp
push
fcmovbe
add
mov
pusha
mov
fistps
rclb
sbb
mov
fcmovb
in
lods
xchg
sarb
add
push
aas
adc
inc
cltd
xchg
cmp
lea
and
sbb
fsubrs
push
in
xchg
mov
stos
cmp
dec
insb
mov
sbb
loope
xchg
scas
inc
xchg
mov
lds
mov
dec
imul
aas
dec
jns
push
lods
fstps
test
add
jge
sub
je
mov
mov
xlat
push
popa
jns
xchg
test
fdivs
and
adc
sub
push
push
pop
pop
cmp
inc
repnz
or
push
dec
xor
inc
dec
dec
add
add
je
outsl
fs
gs
imul
add
add
popa
insb
inc
insb
insb
outsl
arpl
pusha
push
pushf
movb
movl
movl
pushl
lea
jmp
mov
test
cmpb
jmp
add
add
aam
pusha
xor
xchg
shr
not
lea
shr
sub
shl
dec
bsr
or
push
shr
rcr
call
add
dec
outsl
popa
fs
imul
add
jl
and
push
pushf
call
stc
mov
setbe
add
cmp
mov
call
lea
jo
pushf
lea
je
bt
cmp
jmp
push
call
movw
test
cmp
call
int3
popf
push
pushf
pusha
call
jmp
mov
lea
pushf
pusha
not
push
mov
lea
lea
jnp
push
mov
movsbw
pop
push
call
mov
call
push
mov
lea
jnp
jbe
shld
xadd
and
mov
bsr
pushf
add
bsr
dec
not
mov
clc
add
sbb
xor
movl
setp
and
movsbw
mov
mov
cmp
call
push
lea
ja
call
cmpsb
pop
pop
sti
xor
dec
sub
in
sub
mov
cmp
jmp
jl
jb
push
mov
xchg
pop
push
ret
or
dec
xor
push
repz
sbbl
and
pop
enter
add
pop
jb
mov
int
mov
orl
pinsrw
out
in
sbb
adc
mov
push
test
push
add
pop
adc
test
rcrb
outsb
pop
and
mov
repnz
popf
xlat
fcoml
inc
sub
mov
fldt
fisubrs
pop
and
lods
adc
call
mov
popa
and
xchg
mov
jb,pn
push
mov
pushaw
movb
lea
call
call
movl
not
mov
btc
bt
mov
clc
cmp
pusha
lea
jbe
shl
lea
sub
btc
shr
or
shl
mov
test
jmp
add
add
int
test
rolb
xor
aaa
dec
add
cmp
or
mov
sarl
frstor
jecxz
movsb
dec
incb
out
inc
imul
mov
seto
lret
jb
out
in
gs
jg
dec
adc
push
push
jns
cmp
sub
pop
outsb
xchg
push
dec
test
bound
and
inc
sub
imul
cmpsb
ret
inc
enter
cmc
repz
sbb
push
or
jb
push
int3
sbb
mov
pop
push
jns
loop
mov
cmpsl
cmpsb
xor
inc
mov
in
bound
push
dec
mov
push
lret
sahf
nop
mov
ja
pusha
fistpl
lock
mov
scas
ret
mov
fisttpl
scas
int
mov
sbb
jmp
inc
mov
jp
jge
test
cmp
jae
loop
rclb
jnp
daa
movsl
mov
adc
rcrb
sub
pusha
test
fadds
aam
or
pop
push
push
ret
push
call
not
call
mov
call
movl
pusha
movl
movb
pushl
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
or
pusha
push
movb
call
pushf
xchg
int
push
pop
sub
jae
xorl
jle
outsl
test
mov
mov
push
jo
lods
cwtl
mov
xchg
lahf
or
scas
je
fldt
cmpsb
mov
add
mov
sub
jecxz
ret
adc
and
pop
push
mov
sbb
mov
push
mov
movl
jmp
xor
xchg
xor
jg
das
jge
jnp
sti
xor
stc
fdivrl
mov
out
sbb
mov
mov
insb
push
cmp
in
cld
push
pop
xor
outsl
pop
mov
cltd
sbb
pop
cmpl
fucomi
test
sub
ja
pop
sbb
cs
clc
inc
push
pop
jp
xor
mov
imul
xor
jns
mov
dec
lds
inc
xchg
sbb
lahf
fs
stos
add
imul
mov
sarb
mov
or
lret
movsbw
lea
pushf
pushf
call
add
pusha
jmp
pusha
movl
call
pushf
movl
push
pushf
lea
jmp
jmp
push
pushf
stos
movb
lea
jmp
push
lea
je
call
add
pushf
push
lea
jmp
push
addb
push
xor
jp
xor
ror
fsts
adc
pop
push
pop
out
adc
jg
adc
fstl
jbe
mov
and
shl
xor
mov
pusha
fdivs
sbb
bnd
jo
into
dec
in
dec
incb
setnp
mov
fmull
shll
aam
movsl
int
lahf
insb
pop
jg
movsl
and
fcomps
cltd
lcall
pop
movsl
into
mov
adc
negl
push
lds
orl
outsb
in
sbb
inc
jl
out
sahf
pop
cltd
in
cltd
andl
clc
fmuls
mov
leave
jmp
lret
add
arpl
mov
mov
sbb
xchg
je
and
enter
repz
mov
mov
lods
into
jns
lahf
lods
aad
fsubp
out
stc
outsl
push
int
inc
add
push
repz
xchg
add
mov
lds
or
mov
mov
cwtl
dec
movsl
aam
shlb
lods
aad
pusha
inc
mov
les
leave
jne
adc
xchg
daa
out
fdiv
push
mov
sbb
jno
sbb
andl
outsb
mov
xchg
inc
jmp
insl
jb
pop
repnz
push
xor
aas
jge
hlt
test
mov
inc
mov
mov
rcl
or
in
sbb
xor
loopne
lahf
pushf
aad
sbbl
in
jb
pop
pop
subl
pushf
push
lea
jmp
dec
jmp
push
lea
je
pusha
movw
cmp
stc
cmp
pushf
lea
je
pushf
pusha
pusha
lea
jmp
cmp
jmp
pusha
call
setne
dec
inc
mov
setle
pushf
mov
pushf
call
test
fcmove
ror
daa
je
mov
imul
call
sub
xchg
jnp
es
aad
cmp
cmp
lret
or
mov
dec
rcr
lods
mov
inc
inc
xor
stc
ret
insb
cmp
push
sbb
addr16
enter
sbb
mov
sub
jp
jae
loop
icebp
mov
test
xchg
ret
negl
adc
push
es
addr16
out
adc
mov
inc
xor
cmpsl
clc
xchg
movsbw
setp
lea
push
not
lea
jae
pusha
pushf
pusha
movl
movw
pushl
popl
pushf
pushl
ret
adc
lea
pushf
pushl
ret
lea
je
call
lret
aad
sahf
dec
mov
adc
inc
enter
outsl
jecxz
sub
xchg
cs
add
mov
xor
jecxz
xor
mov
cmp
xlat
aam
mov
jnp
aas
fnstcw
push
ret
call
add
cwtl
mov
push
dec
in
xchg
loope
pop
jb
pop
out
jnp
pushl
test
call
jmp
insl
test
xchg
push
scas
mov
add
mov
push
push
dec
adc
and
xchg
push
adc
cltd
outsb
leave
lcall
notl
inc
fistl
addr16
adcl
xchg
mov
pop
pop
bnd
xorb
in
int
jl
cmp
out
inc
hlt
sub
lret
cs
sbb
shlb
inc
ja
cld
ror
mov
scas
mov
mov
mov
sahf
ja
dec
in
cld
repnz
xchg
jmp
addr16
outsl
xchg
pushf
jmp
sub
xchg
sbb
mov
xchg
idiv
push
inc
loop
xor
jb
dec
cmp
add
pop
pop
hlt
scas
fs
add
stc
cmp
push
lea
je
jmp
call
stc
movb
neg
push
sub
call
adc
pushf
mov
pushf
push
lea
jmp
cmc
cmp
call
mov
jmp
inc
add
push
inc
xlat
mov
outsb
je
inc
adc
jge
lea
adc
pop
fld
sbb
mov
fldl
imul
jecxz
sbb
mov
cmp
pusha
dec
xchg
imul
inc
or
ja
outsb
pop
dec
sbb
clc
cmpsl
in
in
outsl
movsb
clc
adc
je
divl
cmpsl
pushf
das
out
call
cmp
in
mov
cltd
jb
pop
sbb
loope
test
shl
push
lods
pushf
bt
pusha
stc
sub
pushf
bt
clc
call
shlb
xchg
adc
xchg
or
or
inc
jno
or
ja
and
jmp
std
mov
push
adc
call
cmpsb
inc
aam
out
sub
cmp
inc
inc
mov
jp
es
in
pop
pop
ret
lea
xchg
lea
bswap
call
push
jne
add
push
inc
dec
outsl
mov
dec
mov
push
mov
xchg
adc
and
lock
fwait
and
int
shr
scas
sbb
adc
mov
xor
test
adc
and
imul
jno
movsl
and
mov
out
add
pushf
or
idivb
jl
loope
insl
loopne
inc
pop
cld
iret
or
mov
cmpb
mov
xchg
jno
addr16
mov
adc
or
xchg
stos
popa
rolb
push
pusha
mov
adc
cli
out
sbb
js
shll
mov
jmp
sbb
pop
lret
lds
stos
and
xchg
rcr
xor
sub
nop
mov
fucomip
call
inc
in
push
xchg
pop
mov
mov
cmp
or
push
push
add
loopne
pop
mov
jnp
lods
mov
iret
add
pop
mov
sbb
rol
mov
inc
stc
adcl
iret
lcall
mov
out
into
cwtl
fstpl
mov
scas
fs
ror
loope
or
mov
dec
aad
mov
jnp
addb
sahf
in
inc
xor
in
adc
xchg
pop
inc
push
jmp
inc
jno
addl
push
add
dec
mov
push
xchg
movsb
loope
dec
dec
jmp
adc
pop
shlb
popf
in
pop
sbb
out
aad
in
inc
or
pop
pop
mov
xchg
pusha
inc
sub
dec
xchg
inc
das
ror
daa
mov
push
stc
shr
mov
lea
test
jmp
movzbw
bsf
pushf
sub
mov
cmp
shl
pushf
call
push
pusha
pushl
mov
bswap
pop
pusha
pushl
pusha
pushl
pushl
ret
int3
sbb
inc
inc
aas
clc
mov
stos
adc
outsb
rclb
lock
outsl
jb
add
dec
rol
enter
call
fsubs
aad
xchg
jo
or
push
inc
pop
xor
xchg
out
ss
xchg
mov
jb
pop
insl
fcoml
pusha
lea
jne
pushf
stos
mov
push
pusha
pushf
lea
jmp
lea
jb
push
stc
cmp
pusha
lea
jae
push
movb
lea
jmp
jmp
call
cmc
cmc
cmp
shr
test
clc
cmc
cmp
jmp
lea
jb
pusha
movb
pushf
movb
pushl
ret
sar
bswap
mov
stc
rcr
movzbl
shr
add
dec
bsf
push
rcl
mov
stc
mov
jmp
pushf
lea
jne
push
pushf
pushl
mov
stos
mov
lea
jmp
pusha
lea
jae
stc
clc
pusha
cmp
push
mov
mov
pushf
lea
jae
cmp
cmp
jmp
mov
int
mov
inc
pop
fs
leave
outsb
cli
into
cld
or
mov
push
mov
repnz
sbb
push
dec
xchg
xor
jb
mov
fnstsw
movsl
les
pop
out
or
xor
stos
fldl
pusha
xor
loop
scas
js
adc
jmp
imul
ss
imul
out
bound
out
movsl
pop
lock
ret
xor
movsb
repnz
add
fisubs
xor
pop
and
ds
xor
add
in
movsl
pop
mov
cli
std
mov
xor
ja
xchg
mov
push
xlat
inc
sub
push
pop
add
jns
fwait
and
xchg
mov
lods
mov
imul
imul
call
int
xor
pop
int
lea
pushf
sbb
mov
jp
imul
jecxz
xor
jns
fsubr
xorb
ret
pop
and
adc
mov
in
fsubp
stos
xchg
mov
out
adc
and
das
repz
jecxz
lahf
cli
mov
and
xor
push
xlat
cmp
xchg
sub
pop
stos
cs
lret
lahf
fs
xchg
mov
ret
add
push
xor
ss
mov
sbb
cltd
arpl
pop
in
jns
sbb
jnp
repz
mov
loop
test
ja
inc
cmc
out
push
test
and
jb
and
loope
mov
push
int
inc
add
xchg
xor
loop
or
leave
xchg
aaa
mov
iret
repnz
mov
scas
push
mov
cld
pop
movsb
dec
clc
mov
insl
xchg
cltd
jl
or
testl
xchg
cmpsl
xchg
mov
test
dec
fimuls
test
inc
cmc
ds
xchg
fsts
mov
sub
cmp
or
add
fiadds
jecxz
pop
jb
and
mov
or
test
cld
lcall
xchg
and
jmp
jmp
bt
test
pusha
jmp
test
cmp
jmp
fst
fisttpll
pop
int
cmc
xchg
inc
mov
mov
jne
loopne
xor
pop
mov
xchg
insl
jo
xor
adc
jge
xchg
pop
push
dec
adc
sar
pop
scas
or
cld
ds
test
loop
lds
dec
leave
dec
or
mov
cwtl
leave
adc
inc
mov
testl
shlb
cmp
or
pop
push
pop
mov
addr16
xchg
xchg
ljmp
mov
xchg
outsl
daa
pushf
jb
and
out
xor
dec
repz
add
pop
pop
push
pop
ret
cmp
ds
and
lock
dec
sub
cmp
cli
test
mov
add
inc
and
mov
fs
shll
cmp
fsts
into
add
movsl
jb
and
shrb
fs
jb
jb
clc
clc
cmpb
push
lea
jne
pusha
mov
jmp
movl
jmp
call
jmp
lea
pushl
call
in
call
xchg
xlat
inc
jnp
test
fistl
fcomps
sub
xchg
das
push
cltd
xchg
add
fnstenv
ja
dec
sbb
cwtl
das
xchg
inc
call
add
xor
sbb
dec
shl
jp
push
rorl
jmp
and
pop
mov
shr
stc
or
push
jmp
lahf
lea
call
add
dec
outsl
arpl
inc
jb
add
cmp
call
add
push
add
push
add
and
mov
add
pop
lea
pusha
call
pushf
lea
jne
push
sbb
not
shld
mov
pushf
cmp
add
push
call
pusha
pushl
popl
pusha
pushl
ret
mov
jmp
push
push
jmp
jmp
in
jb
xor
dec
shl
mov
mov
ret
jo
cmp
sbb
add
loop
cmpsl
mov
ret
loope
mov
push
ds
inc
sbb
das
addr16
mov
sbb
pop
adc
dec
sahf
jne
push
int
lds
std
bnd
and
stos
int3
sub
aaa
sub
lds
out
and
jno
shll
in
jmp
dec
lea
cli
and
cmp
leave
lcall
cmpsb
popf
or
inc
adc
ds
sbb
cmpsl
fnsave
fs
loop
jb
pop
and
out
cmp
fmull
xorl
or
test
push
xor
mov
lea
call
push
lea
jbe
pusha
lea
jae
test
push
xor
push
lea
call
jns
push
mov
pusha
lea
jae
not
inc
mov
jl
inc
inc
not
pushf
mov
mov
lea
pusha
call
lea
jne
add
mov
cmp
call
lea
je
pusha
call
push
inc
jmp
mov
mov
pusha
lea
jg
pushf
mov
setnp
cwtl
push
push
call
pushl
popl
pusha
movb
push
mov
pushl
ret
movl
mov
pushl
popl
mov
push
movb
pushl
ret
lea
ja
setl
bswap
lea
pushf
mov
movsbl
jmp
ficompl
xchg
mov
int3
testb
xor
xchg
call
mov
mov
and
aaa
test
mov
pop
leave
cltd
dec
mov
call
mov
std
mov
and
imul
pop
sahf
pop
bound
das
and
daa
scas
sbb
movzbl
lea
lea
mov
pushl
movl
jmp
jne
pushf
mov
mov
pusha
movb
pusha
lea
jmp
out
mov
inc
pop
jnp
cmpl
cmp
xchg
adc
repz
aam
push
out
out
mov
js
insl
movsb
jb
and
add
dec
add
cmc
sahf
mov
scas
xlat
jp
push
sub
daa
xor
cmp
dec
iret
into
xor
dec
clc
adc
daa
jmp
inc
xchg
out
pop
and
mov
shlb
pop
aas
js
sub
and
outsl
push
xchg
addb
push
sub
inc
or
in
mov
stos
cs
inc
and
dec
stos
stos
xor
push
inc
mov
dec
adcb
and
hlt
mov
mov
jns
stc
jle
jnp
xchg
lock
inc
in
fdivl
sub
cli
xor
or
push
mov
ljmp
or
call
gs
movsb
xchg
lahf
jecxz
pop
mov
pop
mov
cmpl
xor
mov
sahf
push
adc
and
mov
jb
shrl
lahf
stc
dec
lods
jb
push
nop
outsb
divl
sub
mov
pushf
call
pop
pop
mov
and
scas
mov
jbe
sahf
inc
jp
xorl
dec
in
cmp
cmpsl
scas
pop
dec
out
pushl
aas
inc
test
clc
out
mov
lods
testb
lret
cmp
xchg
dec
mov
sub
insl
pop
jb
dec
or
cwtl
lcall
idiv
out
out
lcall
loop
inc
dec
or
sbb
cmp
aas
xchg
add
adc
sbb
repz
sbb
pop
pop
into
fimull
inc
dec
cmpsb
cmp
or
es
inc
out
mov
xor
nopl
mov
aas
cmpsl
pop
jb
sub
or
in
add
xchg
scas
pushf
test
jp
faddl
out
push
adc
mov
ljmp
mov
loope
out
fimull
popf
cwtl
cmp
ljmp
add
lock
fisubs
or
jo
cmp
add
push
jbe
xchg
jle
pop
sarb
mov
jb
jb
sub
xchg
add
cmp
stos
jmp
insl
sahf
pusha
loopne
xchg
push
inc
or
inc
jmp
add
push
sbb
jns
lods
aad
fsubrs
pop
mov
rcr
or
call
mov
sbb
push
das
cmp
xchg
lock
icebp
addr16
mov
insl
cmc
push
dec
inc
call
xor
cmp
dec
sub
mov
or
push
jb
sub
outsl
mov
rcll
not
mov
cmc
sub
pushf
pusha
jmp
lea
jne
pushf
push
jmp
add
test
push
push
jmp
pushf
lea
call
jmp
push
lock
std
std
mov
xchg
push
scas
cmpb
sti
lret
cmp
mov
pop
dec
ss
xchg
aas
or
jge
leave
in
push
xor
pop
pop
ret
ljmp
xchg
popa
cs
fidivrl
sub
push
xchg
out
test
mov
jmp
pop
fimull
int
pop
loop
add
movsb
movw
call
pushl
jmp
call
std
xlat
or
fwait
adc
popa
movsb
je
inc
or
sub
add
or
add
out
mov
pop
inc
dec
movsb
cmp
jne
mov
not
movb
cwtl
lea
pusha
mov
movzbw
movb
cwtl
lea
pusha
movl
call
push
movl
lea
je
push
cmp
pusha
add
clc
cmp
bt
cmp
pusha
jmp
push
cmp
sub
clc
cmp
push
jmp
lea
jne
pushf
push
jmp
pop
pushf
dec
sti
add
fisttpl
jbe
addr16
lds
test
fmulp
or
jb
cmp
into
jecxz
jae
popa
es
push
xor
mov
pop
shll
ror
imul
pop
dec
inc
aad
push
es
incl
sbbb
idiv
cmpsb
cmpb
mov
es
mov
mov
outsl
repz
xchg
mov
ret
mov
movsb
inc
jmp
add
lcall
and
out
les
in
pushl
xchg
xchg
nop
test
inc
xchg
xchg
nop
mov
inc
test
nop
xchg
inc
addl
xchg
xchg
xchg
mov
orb
mov
mov
inc
inc
xchg
and
shll
cld
es
dec
popf
imul
ret
or
sub
inc
mov
bound
xor
push
data16
or
inc
inc
add
pusha
mov
sub
ljmp
and
enter
xchg
ret
xchg
mov
aaa
js
adc
dec
mov
jb
cmpsl
dec
jns
jb
sub
inc
and
cmp
pop
add
ret
add
mov
lea
jae
pushf
pushf
pushf
pusha
lea
jmp
inc
movsb
call
dec
ret
in
popa
int
cli
into
stos
popa
stos
out
mov
fcomps
testl
xchg
lret
fldt
inc
mov
filds
jge
dec
jp
cmp
jle
lahf
ds
push
push
cmp
add
call
jmp
xor
dec
fisttps
lds
loopne
push
xchg
outsb
pop
inc
rorl
jae
in
sub
cmp
insl
mov
inc
jne
push
ret
pop
pop
les
sbb
pop
mov
sbb
ja
xorl
push
jl
xchg
or
jae
int3
in
out
push
adc
mov
mov
xchg
ret
jmp
sbb
in
dec
lods
mov
jg
jb
and
cld
jb
test
gs
gs
xor
cs
insb
add
lcall
in
dec
add
js
leave
pop
aad
in
jns
inc
xlat
lds
mov
aaa
and
push
push
sahf
nop
or
mov
cmp
sbb
mov
dec
icebp
mov
mov
xlat
popl
lea
cltd
out
xchg
addb
out
dec
stos
sub
dec
cld
mov
pop
fdivl
push
fucomp
mov
sub
jo
pop
mov
mov
adc
mov
lcall
xorb
ja
ja
mov
sti
divl
testb
inc
adc
mov
lods
xor
adc
inc
cmp
inc
push
dec
fxch
test
push
push
cmp
ja
int3
int
add
sub
lds
int
pop
pop
sahf
xchg
lret
into
mov
divb
das
jg
xchg
punpckhbw
sub
int
das
int3
out
popa
aaa
in
xor
mov
pushf
pop
js
pop
fistpl
mov
push
xlat
jo
mov
lret
inc
in
sub
jge
into
xchg
push
sub
mov
stos
jmp
push
push
call
js
in
pop
aas
sub
ljmp
lock
shll
aad
mov
or
int3
mov
mov
call
or
mov
mov
sbb
les
xchg
jb
xor
xor
call
lea
jne
bswap
shl
mov
movsbw
cmp
sub
cmc
clc
neg
mov
call
add
add
pusha
jmp
not
pushf
stos
lea
jno
not
pushf
mov
lea
pusha
mov
lea
call
pusha
call
ja
pop
mov
push
mulb
pop
stos
push
lea
pop
add
rcll
lahf
xchg
fwait
lds
xchg
xlat
cmp
ds
sbb
jbe
pop
jns
movsl
xchg
pop
pop
std
sbb
insl
les
mov
test
cmp
jge
push
iret
in
add
and
ffreep
repnz
xchg
out
cmp
pop
xor
testl
add
xchg
push
test
jno
jbe
xor
jns
imul
test
xor
das
push
mov
nop
and
scas
cmp
dec
cmp
fmuls
mov
pop
cmp
lea
or
adc
adc
lcall
outsl
xor
mov
std
adc
hlt
jg
push
dec
push
or
shll
test
out
xor
push
fs
mov
mov
mov
movsl
add
in
and
stc
add
xchg
add
repz
mov
xor
stos
xchg
cmp
loope
inc
rcr
push
pop
sbb
mov
outsb
and
dec
insl
xchg
xchg
loope
pop
cmpb
pop
xlat
aam
pop
test
pushf
xchg
mov
scas
pusha
cld
dec
das
andb
ja
shrl
enter
mov
shrl
xchg
out
movsl
dec
pop
mov
jmp
jae
and
mov
lock
or
or
call
fsubr
lea
call
call
inc
movsl
jae
into
mov
fldcw
sbb
out
or
loop
sbb
cmp
and
scas
add
jg
hlt
mov
mov
fisttpl
push
xor
cmp
push
frstor
sbb
and
ljmp
dec
pushf
xchg
fimull
fidivrs
lret
add
xor
and
mov
call
add
negl
add
add
add
add
add
add
add
push
adc
add
push
adc
add
add
push
adc
clc
xchg
hlt
out
gs
push
xchg
cld
or
loopne
pop
ja
sbb
sarl
in
popf
dec
out
imul
inc
adc
mov
mov
inc
mov
jecxz
cs
push
dec
cmp
sub
inc
adc
scas
xor
xchg
sbb
inc
xor
mov
and
xor
outsb
dec
inc
and
ss
inc
cmp
xor
int3
inc
mov
movsl
jnp
jae
adc
mov
adc
adc
dec
fs
movsb
jb
sub
mov
or
lds
push
and
mov
add
cmp
and
jno
hlt
sbb
loop
adc
cs
pop
into
das
jl
xchg
leave
push
sub
bound
sbb
dec
and
push
dec
dec
or
jecxz
stos
in
dec
popf
das
jecxz
xlat
xchg
cmp
fs
or
adc
in
inc
aas
sub
ds
push
leave
out
mov
in
cli
cmp
push
push
xor
rcr
add
xchg
stc
lea
add
mov
pop
test
in
scas
fldenv
aaa
shr
mov
push
lret
pusha
je
adc
lods
lret
test
jg
ss
sbb
decb
aam
and
movsb
mov
sub
into
add
push
push
mov
je
push
push
aad
dec
add
mov
xor
dec
jp
loope
int3
ret
push
push
lods
mov
mov
loope
dec
xchg
repnz
stos
dec
cli
sub
aad
popf
dec
out
aaa
out
aad
xchg
cmp
pop
imul
int3
jmp
jp
push
into
add
push
fwait
add
pop
adc
mov
push
daa
xchg
fcompl
adc
mov
sub
in
into
xor
int3
inc
ljmp
lock
pop
scas
jmp
loop
popa
sub
icebp
xchg
cmp
movsl
les
sub
cli
jne
fistpl
icebp
pop
lds
out
cld
jnp
data16
mov
shrl
into
or
lods
xorl
push
mov
add
jbe
mov
xor
push
insl
push
stos
mov
cmp
xchg
in
lcall
arpl
out
pushf
pop
sub
outsl
and
push
dec
sbb
cmp
pop
adc
mov
lret
sbb
and
cmpsl
or
inc
dec
int
inc
jg
sbb
aaa
adc
lahf
xlat
mov
in
mov
sub
push
mov
orb
push
movsl
xchg
push
mov
stc
cwtl
jl
popf
adc
movsb
jns
sub
ret
iret
das
call
push
add
in
adc
into
fcoms
add
out
jns
and
lods
dec
ja
ret
cmp
cmp
cld
int3
mov
jo
scas
xchg
and
adc
push
mov
repz
jg
ret
xor
mov
addr16
sub
jge
pop
lea
mov
push
jne
push
mov
xor
and
mov
adc
mov
addl
mov
test
mov
loopne
jae
call
hlt
or
push
cltd
sti
out
pusha
dec
jl
sbb
adc
pop
lds
int
int
cmp
je
ss
jnp
arpl
mov
int
xchg
push
pop
mov
in
stc
push
sahf
inc
or
sarb
jae
es
xor
xor
jns
pop
fildl
mov
inc
es
cwtl
movsl
sarb
pushf
mov
mov
bound
lahf
sbb
cwtl
dec
aam
fs
cli
dec
and
lret
jne
ljmp
movsl
jae
adc
add
loope
imul
xchg
cmp
jae
movsb
outsb
xchg
pop
or
and
jge
mov
push
or
in
scas
xlat
inc
pop
lret
mov
push
lret
arpl
js
sbb
sub
repnz
mov
insl
lea
mov
imul
inc
pusha
loop
cmp
dec
sarb
adc
jg
test
sub
mov
ljmp
enter
outsl
popf
jp
arpl
repnz
cmc
lea
or
jecxz
nop
adc
rcrl
insb
xor
shl
add
inc
ljmp
mov
jne
pop
popf
pop
jo
fs
dec
adc
cmp
jecxz
ss
out
push
and
xor
repz
popa
aad
mov
push
orb
popa
imull
pushf
mov
inc
pminub
mov
test
cmpb
jae
shr
sarb
insb
pop
mov
lods
lret
ljmp
int3
aaa
xchg
lea
cmpsb
xchg
xor
fidivrs
sbb
lods
lret
rcrb
add
dec
cmp
pop
push
dec
je
fnsave
inc
inc
popa
test
outsb
dec
xchg
movsb
xchg
mov
roll
mov
lods
cli
shll
andl
clc
pusha
and
pop
stc
inc
loope
xchg
sub
push
fnstenv
ss
sub
divb
test
jb
jnp
adc
and
cmp
or
imul
mov
jle
pop
fdivl
pop
gs
insl
xchg
fwait
xor
ljmp
mov
fsubs
jns
test
dec
arpl
sbb
ja
sub
stos
in
sbb
out
test
xor
movsl
clc
sahf
jmp
or
inc
insl
imul
lea
ror
inc
js
cmc
xchg
mov
out
xor
mov
lea
inc
jnp
dec
adc
jnp
lahf
xor
push
push
xor
push
cmp
call
daa
sub
mov
jge
imul
mov
lret
out
push
mov
xor
mov
incl
sti
cmp
xchg
lock
lods
movsl
lea
or
sub
jp
and
xor
inc
sarb
or
into
leave
lea
add
jle
push
cltd
push
aas
mov
adc
cltd
mov
cmp
sbb
cmp
and
xchg
cmc
pop
jmp
jge
fnstenv
jne
cmp
sahf
jo
push
stos
notl
cld
lret
ret
dec
sub
std
inc
addr16
xor
xchg
lods
andl
dec
pop
movsb
das
xor
jecxz
sub
adc
aas
movsl
sti
mov
mov
jg
lea
pop
adc
pop
in
xor
dec
cwtl
mov
push
mov
scas
inc
out
mov
or
divb
sub
push
cltd
mov
mov
pop
adc
pop
pop
sub
cli
mulb
hlt
arpl
sbb
ret
rcl
cmova
scas
lock
jo
out
nop
lods
adc
ljmp
out
add
out
cmpsl
mov
jae
inc
fldt
jae
lock
into
iret
loope
ret
xor
xchg
pop
add
adc
cs
or
loop
mov
jo
sub
inc
xor
cmpsl
mov
sbb
cmp
jecxz
in
jbe
jne
jle
cltd
and
fisubrl
fwait
aaa
iret
sti
pand
push
dec
mov
sub
xor
hlt
xor
push
inc
adc
mov
lcall
mov
cmp
fisubl
and
lods
adc
pop
inc
jnp
popf
push
pop
imulb
xchg
mov
cwtl
or
lcall
mov
inc
pop
cmp
mov
mov
inc
ja
add
jmp
adcb
aaa
sbb
filds
xor
pop
testl
or
adc
fdivs
js
cmp
int
iret
in
cmpl
push
mov
ret
push
enter
es
not
mov
mov
negl
pop
push
arpl
push
orl
add
mov
cmp
xor
repnz
cmp
popf
lahf
mov
in
in
aad
fimull
and
jb
push
lcall
inc
dec
shl
and
push
mov
pop
sbb
xchg
popa
push
push
sub
sbb
jg
inc
mov
or
int
es
out
dec
xchg
dec
sub
pop
and
jp
pop
jne
lahf
ljmp
clc
adc
dec
std
jmp
je
mov
call
sub
xchg
dec
jo
mov
lods
sub
fildll
jge
adc
cs
fadds
xor
clc
fsubl
call
and
dec
xor
xchg
xchg
jo
test
icebp
xor
insw
inc
fs
adc
mov
adc
dec
js
cmp
repz
bound
mov
mov
sub
push
jno
mov
dec
dec
fists
cmpsb
cwtl
or
mov
sbb
jp
lods
add
popf
shr
dec
pop
push
outsl
push
daa
push
call
cmpl
jb
clc
jle
inc
jnp
aad
jo
popa
and
jge
xchg
push
push
jno
and
inc
insb
cli
sar
lcall
xchg
push
ja
daa
dec
xor
mov
lret
mov
int3
adc
mov
fwait
add
jnp
sbb
scas
jle
iret
inc
in
jo
clc
lcall
fidivrs
or
push
dec
jle
and
sbb
mov
sub
add
mov
andl
pop
pop
ret
fwait
xchg
es
inc
push
inc
xchg
cld
dec
loop
jmp
pop
jo
mov
inc
jp
cli
cmpl
cmp
or
jno
jb
repz
in
inc
imul
push
dec
pop
jmp
lds
sub
shll
cmpsl
cmp
jb
test
outsl
flds
decb
mov
cmp
enter
or
mov
sbb
and
div
out
idivl
les
add
ljmp
xchg
xor
jns
inc
dec
pusha
jecxz
jp
or
ljmp
xchg
pop
gs
and
les
mov
xchg
cmc
sub
scas
xlat
sbb
xor
sbb
daa
jae
cwtl
adc
mov
aad
push
add
sbb
pop
mov
xor
movsb
sti
out
test
cmp
imul
addl
and
hlt
pushf
test
insl
paddsw
add
ds
xchg
inc
outsl
xor
jge
push
mov
pusha
mov
mov
jge
rcrl
sti
push
fwait
sbb
inc
mov
push
pop
and
sub
pusha
jmp
pusha
jmp
pushf
movl
pusha
movl
pushf
lea
jmp
ret
shll
jb
js
imul
push
and
xchg
xchg
out
loop
cmp
pop
lahf
repnz
orl
inc
pop
stc
ficompl
inc
jecxz
pop
jne
fwait
stc
mov
aad
pop
jb
ds
sbb
mov
mov
lahf
out
jp
mov
lahf
outsb
je
cmp
xor
aas
mov
xchg
stc
pushf
pop
mov
stc
stc
cmp
test
cmpb
jmp
pop
cmpsl
pop
int
cmpb
scas
and
insl
and
mov
ljmp
xchg
mul
inc
arpl
sub
loope
movsl
and
sbb
sbb
in
repnz
push
nop
push
cwtl
inc
xchg
repnz
xchg
jb
outsb
or
mov
jb
in
jge
pop
je
mov
xchg
sbb
mov
pop
stos
jo
mov
inc
mov
fisttpl
out
jne
in
inc
shlb
aam
push
mov
pop
and
push
jb
add
push
mov
or
movzbw
bswap
cwtl
push
aam
aas
cwtl
xor
lahf
jge
lea
pusha
pushl
jmp
fdivs
out
mov
loope
sub
push
pop
movntps
push
call
cmp
rcrb
mov
cld
xchg
and
sub
add
and
xor
lea
je
pushf
lea
jmp
call
call
jmp
pusha
movl
pusha
movl
pushl
lea
jmp
cmp
ss
add
and
adc
rorb
mov
lds
lods
mov
jnp
jae
out
push
in
sbb
fisubl
inc
push
push
or
inc
fisttpll
out
shlb
cmpsl
dec
fcmovbe
dec
pusha
adc
ljmp
cmp
sbb
push
push
inc
adc
pop
pop
sub
push
out
mov
jle
ds
adc
test
mov
and
hlt
mov
pop
add
and
dec
pushf
movb
jmp
pushf
mov
pusha
pushl
pusha
lea
jmp
jmp
pusha
mov
mov
mov
mov
push
pushf
jmp
pusha
pusha
lea
ja
push
inc
lea
call
add
pusha
mov
mov
movb
lea
je
jmp
movb
pushl
adc
pushf
lea
jae
pushf
lea
jne
pusha
push
stos
pushf
pushf
push
push
lea
jmp
call
bt
and
push
call
movl
pushf
pushf
movl
pushl
mov
pushf
lea
jmp
mov
sub
xor
lock
cmp
imul
xchg
add
sub
push
int
leave
cwtl
clc
xorl
jb
adc
sbb
mov
cli
into
cmp
jmp
pop
lcall
jb
add
insl
repnz
aaa
and
fcomp
adc
mov
call
mov
subl
and
jns
push
xchg
jg
push
push
pop
push
jo
lea
mov
pop
dec
rolb
sub
xchg
add
xchg
stos
insb
and
sar
jne
sub
xor
pop
rclb
and
mov
pushf
sbb
sarb
ret
lock
sbb
out
enter
inc
jns
jmp
jmp
aam
in
inc
xchg
loope
push
dec
xor
mov
jg
pushf
outsb
aad
cmp
add
xchg
movsb
call
lea
jb
clc
bt
cmp
push
lea
jae
push
mov
pushl
pusha
lea
jmp
je
inc
mov
dec
scas
fcomp
jl
mov
dec
push
dec
cli
sub
sub
int
test
mov
mov
into
fimull
sahf
imul
lea
pop
push
xchg
adc
mov
xor
pop
popa
push
jb
add
imul
call
lea
jne
pushf
inc
pushf
pushl
push
lea
jmp
push
lea
jns
je
bt
cmp
or
push
push
lea
je
daa
xadd
xor
dec
test
rcl
sets
mov
jmp
mov
pushl
movl
jmp
lea
jmp
jmp
stc
pushf
push
add
test
clc
mov
jmp
fistps
xchg
push
pop
jo
sbb
rcr
push
stos
mov
mov
inc
loope
addl
divb
std
dec
pop
push
icebp
and
dec
mov
add
outsb
inc
mov
sti
inc
push
outsl
fists
push
mov
adc
lods
jl
or
aas
and
aad
sub
push
pop
rolb
shr
jl
cmp
push
out
sub
sub
mov
lods
push
or
fwait
lock
mov
sub
jecxz
push
mov
das
and
lea
rol
out
mov
xchg
daa
pop
int
fsubrs
out
fs
cwtl
repnz
call
jne
sbb
int3
dec
das
jecxz
push
test
ss
in
cmp
cld
leave
jo
inc
mov
push
add
fwait
ja
mov
in
pop
and
subl
mov
push
icebp
clc
pop
cwtl
lea
xor
sub
fstpl
ficoml
push
rcl
inc
in
clc
out
push
lea
mov
xor
inc
fucom
mov
sbb
loopne
stos
fidivrs
sbb
mov
pop
xchg
nop
sbb
movsb
pop
and
push
and
mov
pop
jge
iret
into
mov
lods
xor
adc
jmp
sub
lds
repz
sub
add
xchg
shrb
sbb
pushf
and
adc
inc
adc
adc
push
out
fcomps
dec
pop
mov
cmp
test
sbbl
mov
fldcw
mov
adc
dec
mov
push
mov
into
cmp
add
cltd
jbe
push
jp
mov
aas
dec
push
adc
pop
jne
cli
dec
sbbb
mov
jbe
inc
rorb
jne
inc
and
in
inc
or
push
mov
daa
stos
cmp
mov
push
or
clc
cwtl
lahf
lea
push
sub
cmc
mov
call
mov
push
xchg
jb
enter
in
push
mov
int3
xorb
or
ljmp
mov
jb
adc
insb
cmp
rcll
loop
jb
mov
mov
insl
lods
mov
test
cmp
call
bound
sbbl
movsl
jg
imul
add
std
test
push
fidivrl
jmp
movsl
lea
mov
enter
mov
xor
cmpsb
mov
test
scas
inc
inc
call
xchg
movsb
dec
sbb
rolb
pop
cmpb
cmpsb
xor
pop
lods
pop
andl
sbb
dec
or
cmpsl
pop
movsb
les
inc
cmp
stc
mov
or
dec
inc
jmp
add
cmp
add
push
xor
xor
xor
pop
mov
loop
sub
int
jno
push
sbb
out
insb
mov
pop
repnz
mov
inc
xor
fsubs
loope
lcall
jne
jp
pop
movsb
rcrl
jecxz
cmp
stc
pop
sbb
outsb
xor
gs
jb
pop
in
sub
mov
fsubrl
mov
mov
or
pop
push
scas
into
popa
loope
enter
pop
lret
jmp
stos
sarb
sahf
cli
cli
inc
sarl
out
out
imul
fsubl
daa
sbb
lcall
pop
or
clc
jmp
jmp
not
lea
call
movl
pusha
push
pushf
lea
jmp
cmp
pushl
push
lea
jae
pusha
push
lea
jmp
pop
mov
pushf
push
movb
lea
jmp
movl
movw
call
pushf
pusha
jmp
pushl
mov
lea
call
movsbw
bswap
not
lea
call
add
cmc
jmp
push
inc
or
icebp
ljmp
and
xchg
push
jbe
xorl
jp
push
mov
roll
lds
bound
pop
int3
or
jle
jb
pop
test
lahf
nop
orb
lret
aaa
adc
or
push
mov
sbb
xchg
pop
and
lock
cmp
push
dec
lods
jb
jns
mov
pop
add
ss
mov
test
ds
jle
xor
lahf
insl
icebp
scas
ffreep
dec
pusha
std
xor
jecxz
lcall
in
icebp
cmp
inc
sub
les
mov
lods
xor
dec
ror
stos
mov
imul
cmp
add
sub
ds
call
idiv
inc
ss
jg
sub
xchg
pop
fisttpll
pop
mov
ret
lret
pushf
pusha
push
fisttps
jl
inc
cmp
movl
sbb
popa
lea
mov
mov
orb
ret
imul
mov
xchg
inc
jmp
add
test
cmc
out
jmp
test
testb
lea
push
mov
pop
and
pop
push
add
jl
dec
movb
jecxz
rol
imul
loopnew
sub
xor
sbb
mov
int3
push
cmp
xchg
popf
out
and
push
add
fldenv
sub
jne
repnz
inc
and
test
add
jbe
pop
or
xor
fstpt
ret
adc
cmc
test
test
push
add
call
push
mov
call
lea
pushf
mov
call
push
movl
push
pusha
movb
pushf
lea
jmp
lea
je
push
mov
jmp
jmp
lea
jne
movzbw
pusha
call
pushl
push
lea
call
pusha
movb
pusha
jmp
cmpsb
mov
icebp
out
ljmp
repnz
fisubrs
in
in
cmp
sar
repnz
xor
lahf
mov
addl
movsb
jg
xchg
mov
xchg
pop
mov
scas
movsb
jne
lock
jmp
repnz
imul
ret
sub
push
call
jnp
mov
out
mov
shll
mov
lock
call
jb
repnz
pusha
in
mov
fisttps
ljmp
add
mov
lock
mov
out
dec
jmp
in
negl
mov
repnz
push
enter
lds
mov
setl
enter
loopne
xchg
lds
imul
inc
testl
jo
lds
das
enter
aam
xchg
cwtl
test
mov
mov
adc
cmp
adc
lock
pusha
push
cmp
mov
lret
adc
lock
std
fcmovnbe
imul
rclb
add
mov
adc
icebp
pop
jmp
mov
es
test
stos
jmp
and
in
lock
and
imul
pop
jmp
xchg
out
mov
jg
pop
sbbl
mov
xchg
idiv
pop
sub
dec
insb
addr16
jmp
xchg
pop
fldt
lock
fisubrl
addr16
in
loopne
jle
enter
or
mov
cmpsl
xor
ljmp
jecxz
xchg
mov
std
xchg
xor
nop
ret
mov
pop
jecxz
inc
test
push
add
loop
jae
mov
sahf
sbb
xor
out
movsl
aam
repnz
popf
loop
pop
icebp
loop
lret
ljmp
lret
imul
sti
leave
shl
jmp
lods
jecxz
ja
into
xchg
jecxz
inc
arpl
push
rcrl
mov
shrb
arpl
rcrl
out
insl
mov
shr
arpl
pop
shlb
sub
xchg
shrl
out
insl
mov
js
mov
shlb
arpl
dec
scas
rcrl
mov
outsl
ror
arpl
shll
shl
inc
insl
mov
rolb
mov
out
insl
mov
rcr
arpl
sub
adc
out
insl
mov
rorb
insl
mov
add
icebp
arpl
jns
stos
mov
mov
jmp
pop
mov
popa
jp
iret
sbb
mov
fcomi
daa
ret
movsl
repz
test
cmp
loop
inc
jae
jge
repz
sbb
repz
jmp
sub
lock
lea
cmp
jo
jae
and
jb
jp
scas
xchg
xlat
out
lock
test
repnz
xlat
or
aam
lea
lock
nop
int
int3
jb
pop
xchg
jl
jecxz
jmp
mov
mov
ret
jge
test
popf
out
add
cmp
cld
aad
icebp
aas
adc
loop
loopne
in
out
jb
insb
mov
mov
in
loop
sub
scas
mov
or
sub
and
jmp
loopne
pop
cmpsl
repz
mov
rolb
aam
repz
mov
popl
push
push
movsb
out
gs
adc
and
popa
push
dec
inc
jmp
daa
or
out
sub
testl
shlb
ljmp
cmp
mov
ficompl
shll
daa
or
jg
dec
rcll
and
fldt
mov
xchg
xchg
mov
icebp
jle
insb
cmp
mov
pop
shll
out
adcl
jb
ljmp
out
fldenv
sub
mov
loop
mov
arpl
sbb
arpl
sub
mov
shlb
ljmp
fildll
pop
imul
mov
pop
sub
ja
xchg
jb
iret
out
bound
shl
mov
scas
adc
adc
gs
rcll
ljmp
mov
in
pop
xchg
out
mov
scas
in
mov
stos
repz
mov
mov
mulb
fisttpl
xorl
push
jb
mov
sub
cwtl
xchg
in
and
xchg
push
add
pushf
test
mov
cmpsl
out
mov
adc
lock
cmp
adc
sti
mov
dec
in
jp
fdiv
pop
jnp
sub
inc
ljmp
shr
out
pop
ljmp
fdivrs
scas
aaa
cmp
jecxz
jae
mov
adc
ljmp
repz
cmp
outsl
mov
mov
test
repz
xor
mov
cmp
and
repz
idiv
push
mov
dec
mov
icebp
cmpb
mov
xor
cmpb
nop
shl
jo
jg
popf
sbb
jle
xchg
mov
test
mov
cmpsl
inc
jmp
mov
scas
ljmp
mov
sbb
add
test
mov
rol
shll
jge
leave
pop
xor
lahf
fistl
fsubr
xor
jg
hlt
adc
add
ja
and
mov
orl
dec
iret
icebp
mov
ror
out
sub
jecxz
out
daa
ret
movsl
and
rcll
jg
xchg
subl
xchg
ljmp
xor
mov
and
scas
test
imul
lds
cmpsl
imul
mov
jns
xchg
repnz
outsl
daa
mov
jp
lret
push
iret
lock
out
jecxz
or
push
out
arpl
xchg
sarb
xchg
sbb
pushf
and
cmpl
scas
hlt
sub
mov
lea
jnp
cmpsb
jg
enter
popf
xor
xlat
mov
sub
cmpsl
xchg
sarb
fbld
lods
iret
fidivl
jecxz
mov
andl
dec
mov
xchg
push
mov
ja
stos
lret
jae
xchg
jl
lret
xor
daa
push
adc
rclb
add
jp
pop
xchg
insb
xchg
rolb
xchg
mov
cmpsb
test
out
xor
jg
mov
aad
fbstp
fists
repnz
movsb
in
lods
lock
aad
inc
xlat
fidivl
adcb
lods
fninit
mov
movsl
test
out
arpl
inc
stos
aaa
lret
test
fildl
stos
dec
sbb
dec
mov
andl
daa
in
sahf
push
mov
lret
lret
push
jmp
cmpsl
mov
inc
sub
ret
mov
std
add
ja
mov
hlt
mov
aad
sub
sbb
sub
scas
xchg
icebp
fbstp
jmp
adc
jmp
jmp
ret
ficoml
out
out
dec
out
jmp
aam
adc
in
dec
jp
mov
sub
fs
lea
mov
fdivs
mov
daa
lds
fstl
dec
into
cmp
sbb
scas
fbstp
das
loope
mov
mov
scas
imul
jg
mov
xor
fistl
fyl2x
jmp
xchg
xchg
arpl
mov
mov
push
fmull
scas
add
arpl
mov
ffreep
xlat
jb
jle
mov
shll
xchg
inc
xor
jo
repnz
ljmp
cmc
xchg
stos
lahf
sti
loope
call
dec
rcll
mov
in
daa
rcrb
aaa
nop
push
sbb
pop
lock
jnp
mull
mov
fwait
ss
or
insl
push
stc
fsubrl
mov
decl
mov
inc
imul
pop
fcoml
aaa
mov
fistps
adc
mov
mov
mov
xlat
rclb
iret
mov
mov
sbb
mov
imul
mov
mov
outsb
mov
xchg
aad
pop
mov
fsts
mov
pop
aad
fcomi
jecxz
mov
outsl
inc
sub
frstor
mov
cmpsl
mov
shrl
roll
call
sti
in
insl
cwtl
fbstp
mov
jle
adc
mov
jae
pop
pusha
imul
mov
and
jae
jmp
mov
rol
inc
imul
jle
push
bound
fisubrl
outsb
jp
push
popf
scas
imul
popf
imul
xchg
arpl
sahf
lds
mov
sbb
mov
insl
arpl
jmp
inc
into
mov
pushf
mov
pop
jp
aad
xlat
lahf
lods
fists
aad
mov
cmp
mov
inc
stos
inc
adc
gs
adc
daa
jecxz
mov
jo
out
in
lcall
mov
mov
daa
xchg
addr16
sub
addr16
icebp
iret
ror
push
pop
push
aaa
test
mov
fiadds
pop
scas
mov
lcall
cs
mov
pusha
sahf
shll
rcll
sbb
pop
data16
stc
int3
test
lcall
inc
push
mov
or
lds
dec
cmpsl
or
popa
jmp
push
or
sbb
test
push
js
pop
or
push
fbstp
mov
cmp
and
addl
mov
dec
jnp
lcall
rcr
and
jmp
lret
cmp
aaa
mov
jmp
sarb
and
xlat
stos
arpl
aam
sub
xchg
fisubrl
imul
ss
imul
push
sbb
push
mov
dec
mov
pusha
imul
mov
scas
mov
imul
lods
dec
adc
mov
push
dec
pusha
xchg
xor
or
pop
icebp
ret
lcall
inc
stos
pusha
jns
ret
scas
jmp
mov
or
outsl
jo
mov
scas
xor
dec
daa
fstpt
loop
sti
pop
mov
movsl
ja
ljmp
xacquire
stos
fisubrl
dec
sub
xor
cwtl
in
jmp
out
xor
lgs
outsb
push
shlb
adc
and
sti
mov
mov
mov
orb
push
daa
add
jmp
aaa
xchg
ljmp
jae
xor
dec
fcompl
lret
cmp
nop
in
mov
sarl
sti
fwait
orl
inc
mov
movsb
lods
sarb
arpl
xlat
enter
loopne
dec
stos
or
inc
pop
mov
stos
ja
xlat
fcomip
repnz
jae
cmp
arpl
aaa
gs
mov
cmp
stos
pop
sti
jecxz
rcr
scas
lret
mov
iret
subl
scas
mov
inc
int
ljmp
in
lds
ljmp
bound
jg
push
loopne
shr
pop
scas
push
xchg
sub
aas
bound
shll
scas
or
imul
sub
frstor
sarl
mov
xchg
nop
push
xchg
fimull
ljmp
bound
cmp
lock
stos
repz
mov
nop
test
jne
lea
xlat
incl
cmp
cli
enter
outsl
push
lret
mov
xchg
jns
or
bound
leave
jge
dec
sarl
or
pushl
out
btc
mov
popa
cld
xchg
and
sti
and
push
ret
push
loope
and
sarb
pop
mov
icebp
scas
popf
jb
lahf
xchg
mov
mov
adc
cltd
iret
jnp
xchg
cli
mov
out
div
test
xchg
and
xor
out
mov
aaa
add
add
or
stos
pop
iret
ja
xchg
ficoms
imul
mov
and
std
pop
jno
enter
sbb
stc
jg
stc
aad
inc
inc
loopne
or
arpl
mov
push
flds
jl
jle
popa
mov
mov
lods
or
roll
aas
dec
sub
nop
fwait
in
jae
shl
mov
jecxz
imul
arpl
addr16
ret
adc
ret
sub
loope
pop
mov
cltd
mov
dec
in
jmp
fstpt
fildl
lret
aam
mov
add
inc
out
stos
fnstenv
test
lret
repnz
icebp
or
xlat
mov
rcr
repnz
dec
or
xor
scas
fisubl
xor
lods
fldt
ss
leave
add
arpl
aas
loop
stos
out
inc
loope
cltd
inc
int3
mov
add
lods
mov
test
test
iret
mov
xchg
movb
adc
dec
lahf
fucomip
inc
fbld
ret
mov
iret
in
mov
push
out
inc
ret
mov
stos
push
sub
movsl
les
inc
inc
imul
xchg
rorl
nop
and
iret
clc
mov
jmp
inc
ljmp
addr16
leave
std
ds
jmp
mov
bound
pop
imul
mov
fldcw
mov
fildll
lret
pop
movsb
pop
mov
movsb
ljmp
adc
pop
testl
jecxz
out
rol
add
stos
in
movsl
stos
std
cmpsb
cmpsl
test
pusha
mov
xor
mull
loopne
xorb
mov
xchg
loopne
pop
add
jmp
mov
jecxz
sub
xchg
adc
loop
andl
test
out
adc
inc
add
lahf
cmp
fs
mov
xor
call
ret
mov
sub
mov
das
jae
test
fs
in
mov
in
jl
loop
jmp
repnz
loop
out
shrl
adc
or
in
sub
and
fs
mov
inc
xor
repnz
aam
addr16
dec
jecxz
shll
hlt
out
pop
mov
lock
in
jnp
clc
dec
repnz
call
aaa
mov
xor
adc
jecxz
je
negb
jne
xor
divl
mov
inc
pop
ret
pop
xor
adc
or
aaa
jae
xor
cltd
jle
sub
testl
adc
icebp
shr
repnz
inc
icebp
xor
in
mov
arpl
or
fwait
movsl
int3
cmp
cld
in
rorb
fidivs
or
data16
push
scas
in
out
xor
out
jmp
call
es
fldenv
inc
in
dec
pop
cmpsl
inc
mov
sub
mov
movsl
inc
sub
stos
xor
inc
lret
cmp
imul
stos
jae
mov
cltd
jle
sub
fists
fldpi
mov
jmp
xchg
adc
jmp
lret
fdivl
shll
mov
jmp
push
scas
aas
das
push
loope
iret
jnp
jno
in
loop
sarl
xchg
pop
ret
mov
stos
in
idivl
loop
rcrl
scas
sub
push
iret
gs
jae
shll
in
out
sar
cmp
or
sarl
gs
iret
jg
xchg
bound
shrl
fsubr
imul
loop
rcrl
scas
sub
push
iret
stos
jnp
mov
fwait
scas
stos
mov
sar
cmp
or
roll
push
imul
stos
cmpsl
bound
jecxz
stc
cmp
add
and
sub
imul
ficompl
out
ljmp
scas
or
ror
push
fnclex
ret
ljmp
imul
jecxz
sub
pop
bound
xor
loope
shl
sub
leave
sarl
mov
jnp
insl
stos
pop
bound
aaa
scas
and
push
loop
sub
iret
stos
mov
scas
mov
daa
xor
popa
sub
push
bound
shrl
lea
dec
inc
ja
shrl
loope
iret
xchg
stos
andl
pop
scas
inc
divl
loope
iret
xor
pop
scas
imul
inc
xchg
ljmp
cmp
jno
and
mov
shll
fucomip
cmc
das
icebp
or
scas
dec
pop
push
loope
iret
popf
stos
lods
bound
in
xor
push
pop
bound
loop
ljmp
sub
xchg
bound
int
fldcw
sbb
or
jge
lea
fwait
sub
lods
bound
out
imul
jb
loope
iret
daa
stos
cmp
rcll
pop
insl
push
loope
iret
mov
rcl
scas
jmp
mov
or
fdivr
bound
rcll
popa
jae
test
iret
cltd
stos
movsl
bound
aad
out
std
xor
stos
xor
rcll
arpl
and
iret
mov
ror
scas
aad
push
loop
ss
bswap
pop
stos
xor
rorl
arpl
jg
rcll
xor
test
outsl
sub
inc
ljmp
iret
shl
sar
sub
repnz
sub
xlat
out
pop
lret
ljmp
repnz
dec
rcr
fcmove
in
jecxz
loopne
push
loop
repnz
push
int
fimull
sub
rcll
push
pusha
push
loope
int
lcall
rcll
int
ljmp
icebp
iret
fsubs
xchg
pop
jno
pop
jecxz
ljmp
iret
jecxz
out
pop
dec
punpckldq
sbb
sub
loope
iret
imul
outsl
bound
inc
scas
xor
add
icebp
sub
fldt
stos
scas
popf
insl
iret
push
stos
inc
bound
shrl
scas
ud0
daa
out
shrl
cmpsl
scas
fwait
jno
pop
stos
dec
bound
xor
or
call
out
es
fldt
test
ja
popa
iret
dec
stos
xor
scas
add
push
mov
leave
scas
mov
fdiv
sti
pop
repz
hlt
jle
fucomip
jecxz
out
jmp
rol
xor
push
sahf
or
fiaddl
add
in
loopne
int3
sub
stc
mov
fistpl
jbe
shlb
hlt
in
mov
in
movsl
in
push
loope
jp
cltd
loop
mov
loopne
jge
jecxz
shl
insl
fldenv
icebp
mov
mov
in
je
loop
aas
notl
xchg
xor
ret
shrl
loope
jecxz
sub
jmp
loop
jmp
jo
sub
cmp
in
orb
popf
mov
or
or
lea
cmpsl
sbb
mov
loope
cmpsl
loope
jb
loop
outsl
mov
fnstenv
adc
imul
repnz
fistl
inc
movsb
mov
cwtl
in
or
outsb
addb
in
dec
sbb
mov
add
xor
jne
mov
mov
jecxz
jg
shl
mov
push
xlat
fildll
and
popf
or
lret
daa
jae
fld
ret
mov
mov
jge
sbb
sub
sub
repnz
dec
lods
mov
fidivrl
mov
push
lds
bound
cmp
push
dec
or
rorb
dec
or
aad
iret
cmp
mov
or
mov
call
add
or
pushf
mov
xorl
in
jecxz
mov
mov
cwtl
or
xchg
jo
ret
jg
ljmp
xlat
inc
iret
jecxz
btr
rorl
sarl
out
jbe
xlat
pushf
mov
out
std
jae
cld
ret
mov
push
nop
das
or
rorl
jle
movsb
insl
sbb
adc
loope
loop
rcl
push
and
jo
jecxz
jmp
ret
lret
mov
xor
jb
dec
sub
inc
jne
adc
dec
lret
scas
mov
jmp
xchg
bnd
push
imul
jno
repnz
icebp
data16
pop
jnp
dec
rorb
mov
movsl
and
mov
mov
mov
loopne
imul
jae
push
lret
push
sbb
mov
mov
scas
into
mov
pushf
or
jp
pop
sbb
popa
fcmovnb
mov
xlat
orb
push
mov
out
cmc
mov
lahf
loop
addr16
adc
jmp
out
cmp
je
mov
imul
or
out
lods
lret
mov
or
out
or
sahf
test
mov
or
stos
pop
imul
fidivl
loop
insb
ljmp
mov
push
iret
outsl
cmpsl
cmpsb
stos
inc
daa
lret
in
mov
les
xor
ljmp
jno
xchg
xchg
scas
push
xor
dec
repz
jb
loop
push
adc
xchg
xchg
push
sub
sti
shll
and
inc
rcl
xor
add
mov
mov
push
bsf
bound
mov
aam
mov
mov
mov
bound
and
mov
shrl
shll
ljmp
mov
aad
test
enter
pop
ja
bound
lfs
lea
add
or
or
rolb
adc
mov
push
cli
push
aam
dec
cmovns
jmp
out
mov
rcl
adc
arpl
add
cmp
stos
sbb
ss
test
cmpsl
bound
mov
aam
shlb
aad
shrl
sar
pushl
fs
mov
mov
bound
sub
jb
dec
push
push
pop
in
xchg
jg
lea
stos
xchg
inc
xlat
xchg
push
mov
jnp
lods
cmp
pop
cmp
std
and
jg
pop
mov
xchg
int
popf
mov
jl
mov
clc
cwtl
aam
shll
lods
aam
rcll
test
xchg
add
js
test
hlt
cmp
movsb
iret
jb
xchg
mov
leave
subl
mov
cmp
mov
leave
jp
pop
jle
inc
jle
or
insb
mov
inc
test
test
fwait
xchg
test
xchg
push
mov
adc
fwait
mov
pushf
test
adc
and
pop
loope
adc
xor
mov
scas
pop
jg
and
call
lret
xchg
popf
into
mov
jnp
pop
jnp
notl
lods
fistps
xlat
push
or
mov
rorl
in
ds
stos
jecxz
mov
stos
in
and
ljmp
mov
fbld
xor
fwait
mov
in
and
in
jmp
rclb
dec
cmpsl
and
jmp
shlb
jecxz
pop
mov
and
jg
lret
sub
and
sub
insb
lahf
test
lds
mov
sub
mov
cmp
push
ret
iret
mov
xor
xlat
jecxz
testl
lret
push
movsl
pop
xor
andb
lods
fisttpl
cltd
jmp
xchg
mov
mov
mov
nop
cmp
mov
lret
out
push
mov
adc
add
xchg
jno
scas
out
pushf
add
mov
insb
or
cld
cmpsb
cmp
push
jo
mov
mov
out
xchg
xchg
xor
mov
xor
aad
ja
lock
dec
jle
rorb
push
sub
cld
popf
and
mov
lods
aam
sti
idiv
shrb
sar
pushf
data16
sub
xlat
cli
ja
fisubl
mov
addr16
in
rorb
xchg
or
sahf
dec
dec
dec
cmc
fistps
stos
pmulhw
loopne
sub
xor
das
jmp
add
lods
or
loop
xor
sti
testb
dec
mov
xor
sbbb
mov
leave
jbe
or
mov
out
dec
sub
aam
daa
in
popf
enter
idivl
lahf
mov
mov
mov
popa
push
push
insl
fwait
in
push
div
xor
adc
adc
sbb
push
loop
jb
gs
or
or
ror
lcall
andb
mov
fucomip
jmp
insl
adc
call
lret
cltd
call
jle
leave
mov
add
int3
popf
dec
bound
out
xor
mov
sahf
not
les
lods
mov
pop
or
pop
lcall
jecxz
sbb
out
scas
inc
mov
sbb
pop
shl
in
mov
pop
xor
mov
fldl2t
mov
stos
dec
imulb
mov
insl
mov
rcl
sub
sub
dec
bound
dec
dec
mov
xor
inc
pop
fdiv
adc
sarl
fidivs
aam
out
outsb
pop
xor
jmp
enter
in
mov
and
mov
add
mov
mov
sub
pushf
dec
cmc
rolb
jo
out
push
negl
jge
mov
xchg
test
out
mov
rol
shrb
mov
mov
pusha
adc
cwtd
jb
movsb
and
lds
das
mov
lret
cli
inc
cmc
fldt
push
sbb
fwait
outsb
das
mov
jmp
cli
pusha
inc
out
jecxz
aad
or
xchg
adc
inc
mov
dec
ljmp
std
mov
add
xor
pop
arpl
loope
push
mov
aam
fsub
iret
dec
jmp
mov
pushf
aad
mov
lahf
cmp
mov
cmpsb
dec
push
ret
mov
and
in
in
in
jg
mov
push
fcomip
xchg
std
fnsave
inc
mov
loop
pusha
xor
subl
jle
iret
repnz
in
xor
jmp
dec
mov
loopne
testl
push
cmpxchg8b
xchg
jle
sub
and
cli
shl
cmp
mov
pop
jecxz
mov
cmp
mov
sti
aam
jne
pop
cmp
mov
jp
aad
or
cld
jmp
lahf
or
out
outsl
sti
fwait
insl
mov
shlb
in
sub
mov
dec
fistpll
mov
pop
mov
mov
jno
rorb
mov
add
lea
mov
push
sti
int
xor
bound
jno
out
xchg
icebp
dec
cltd
ffree
pop
jo
or
fs
xor
repnz
loope
subb
xchg
cmc
cmpsb
scas
int
lds
repnz
in
lock
in
xor
das
shll
pop
cwtl
sbb
and
mov
out
sub
test
das
push
ss
test
or
inc
fisubl
addr16
mov
shll
fmuls
sub
mov
daa
push
fisttpl
add
push
or
mov
jg
ret
js
sarb
icebp
shrl
loop
test
outsb
and
mov
aas
lret
test
jne
adc
ss
xor
sub
mov
jecxz
cltd
mov
stc
or
rcrb
mov
add
bound
xchg
bound
pushf
scas
fisttpl
inc
mov
jecxz
imul
cwtl
sbb
or
stos
loopne
mov
imul
mov
push
mov
jle
je
pusha
stos
iret
mov
jl
xlat
mov
lods
jns
fwait
std
rcrl
push
ret
cwtl
repnz
stc
lea
push
dec
ds
imul
jl
test
mov
lret
and
adc
jo
in
pushf
call
mov
test
dec
lret
in
adc
addr16
lret
pop
rcrb
mov
fsubrp
data16
dec
sti
mov
push
add
fisttpll
jecxz
push
out
cmp
or
jne
jb
or
shrl
ljmp
xchg
cltd
jb
jmp
ret
fidivrl
ljmp
or
pushf
sarl
pop
mov
movsl
fcomi
in
mov
mov
out
enter
int3
adc
leave
jnp
adc
iret
cwtl
push
ljmp
loopne
xchg
sub
lods
cmp
sbb
push
push
repz
movsb
sbb
jb
push
push
test
cmp
arpl
icebp
repz
int
add
movsb
loope
mov
mov
lods
mov
add
fwait
lret
mov
aam
xor
jb
scas
mov
mov
shll
jecxz
hlt
movsl
cltd
out
aad
xchg
jmp
into
mov
leave
push
bound
repz
cmpb
xchg
dec
insb
cmp
arpl
shr
adc
arpl
xchg
xor
iret
fstpl
or
xor
test
shrl
fldt
sub
ja
ret
jmp
adc
mov
fstps
test
inc
push
jae
ds
out
pop
imul
mov
cli
xor
aas
xchg
out
icebp
mov
ds
xorl
mov
xorl
aam
jo
add
fcmovnb
addr16
ss
aam
cmpsb
jle
mov
lcall
in
popa
dec
jo
stos
xlat
repnz
mov
add
fildl
ror
jge
iret
mov
stos
jg
arpl
stos
shrl
lock
or
in
mov
xchg
add
and
sub
xchg
lock
sub
mov
incl
mov
out
sarl
cwtl
pop
cwtl
pop
fmul
popa
pop
call
jge
cmp
js
xlat
addr16
ret
aas
fsubrs
mov
rorb
adc
std
or
inc
loopne
jle
fmuls
loop
je
subb
jg
push
lahf
sbb
and
dec
and
or
cld
out
or
int3
add
sub
ret
push
jb
sub
stc
aas
pop
scas
jecxz
aas
mov
gs
outsb
int3
or
jg
fldt
dec
jmp
lret
fsubrl
lret
divw
mov
or
cwtl
mov
mov
add
mov
fsubrl
shll
enter
stos
or
mov
ret
in
ljmp
inc
mov
and
lods
xor
and
sbb
mov
mov
setle
sti
or
xchg
sbb
lcall
mov
sbbl
sub
rclb
rorl
imul
or
push
push
add
bound
dec
jecxz
inc
xlat
sarl
push
inc
lea
add
jle
pop
loopne
adc
mov
dec
icebp
movb
dec
xchg
imul
js
jmp
jnp
shrl
scas
xchg
or
insl
pop
mov
lcall
or
or
int3
mov
inc
bound
popf
pop
nop
sahf
mov
cmp
aaa
clc
cmpsb
lcall
jmp
jb
out
jae
icebp
outsl
mov
pop
imul
xlat
and
jnp
mov
imul
xor
xor
arpl
mov
popa
outsl
int
mov
fcmovnu
mov
add
jne
xchg
sbb
or
movsl
xchg
cmpl
or
out
xor
inc
in
lret
adc
fistps
fsubs
jmp
ljmp
test
mov
mov
jp
jmp
fbld
js
out
fisttpl
push
add
jo
into
pop
call
xor
popa
dec
loope
shl
mov
mov
jns
sub
nop
mov
adc
pusha
inc
mov
rorl
xchg
movsl
fldt
xchg
jecxz
cmp
outsl
cmp
xchg
cmp
cli
fistpll
leave
or
jmp
ja
stos
mull
call
push
mov
or
mov
or
sbb
cwtl
jae
mov
out
push
out
fistpll
ret
sbb
sub
stos
add
push
sbb
mov
push
and
iret
mov
std
jp
in
adc
or
insb
jle
add
push
push
add
xor
mov
or
ret
imul
out
xor
jge
mov
in
or
sbb
fwait
jmp
pop
xor
sbb
sub
push
pop
ret
jnp
dec
dec
pop
pop
xor
mov
stos
lret
loope
jecxz
pop
int
xchg
clc
inc
jle
cld
mul
outsl
mov
ret
cmp
mov
mov
aad
out
jge
jmp
fwait
insb
xor
mov
popa
sub
fildl
fimuls
add
icebp
mov
mov
jle
inc
xchg
sarl
push
popf
xorb
daa
xlat
adc
push
jg
sbb
mov
ror
popf
je
mov
test
jo
daa
mov
mov
cwtl
fdivr
lods
fidivl
clc
jp
jle
push
scas
scas
scas
jp
nop
ret
mov
mov
push
mov
cmp
and
fucomi
adc
repnz
mov
insl
xor
shrb
or
jbe
pop
adc
fists
add
ficoml
sarb
mov
push
aad
mov
jle
sbb
jge
mov
loopne
sub
mov
jp
dec
xlat
shlb
ljmp
cmpsb
jg
jo
push
out
repnz
dec
scas
fwait
push
bnd
les
mov
xchg
scas
aad
inc
adc
outsl
cmpsl
mov
fucomi
in
shll
scas
shrb
pop
ret
jno
sub
repz
jmp
mov
push
divl
in
push
xlat
pushf
popf
sub
pop
ljmp
in
popf
mov
cmp
fstpl
xor
and
fisubrl
jbe
lret
push
mov
dec
mov
out
or
mov
mov
jbe
aas
xchg
or
cmp
inc
outsl
repnz
adc
imul
cwtl
outsl
xchg
fstpt
sub
sub
jl
les
imul
scas
mov
call
jg
pop
fstpt
test
stos
mov
push
dec
enter
add
cmp
mov
pop
ljmp
or
xor
jns
jmp
or
or
xchg
mov
int
cmc
mov
or
sbb
pushf
pop
mov
lods
xchg
sbb
pop
sbb
fldt
mov
pushf
cmp
lret
and
ret
jae
mov
pop
inc
cmc
mov
ja
loope
pop
lret
xchg
sahf
out
mov
mov
dec
ds
repnz
mov
xor
insl
pushf
jmp
jae
call
aas
and
sub
xor
mov
adc
add
push
jno
jle
mov
mov
hlt
frstor
and
jecxz
movsl
fbstp
adc
shll
loope
mov
jne
xor
or
pop
ret
rorl
ja
repnz
enter
lret
movsb
jmp
dec
ret
pop
rorl
jge
das
sbb
mov
outsb
mov
jbe
pop
or
push
orl
int3
imul
bnd
push
sbb
jae
aad
add
loope
lret
or
stos
and
pushl
mov
scas
cmp
loop
outsl
xchg
adc
mov
mov
dec
mov
rclb
or
cli
rcrl
lea
into
mov
popa
inc
daa
fidivl
lea
loope
shll
in
add
xchg
adc
sub
adc
ljmp
mov
gs
loope
jne
icebp
mov
adc
dec
cmp
ljmp
cmp
imul
inc
mov
xor
sub
loope
mov
push
xor
jle
scas
loope
mov
or
mov
mov
call
in
push
sbb
sar
add
ljmp
xor
call
fsub
testl
ficoml
mov
push
mov
shrb
xor
sub
call
or
cs
inc
jg
in
addr16
pop
xchg
jne
stos
lret
sbb
pushf
call
fwait
imul
sbb
sbb
iret
xchg
imul
bound
mov
fsubrp
mov
sub
jno
shll
xlat
into
fisttpl
jge
imul
cli
outsl
pop
bound
iret
xor
enter
mov
andl
push
lds
insb
sbb
push
mov
shrb
pop
insl
insl
sub
xor
jo
sbb
orl
rcll
rolb
jecxz
in
pop
mov
shrb
sub
lret
out
aas
mull
jmp
fisttpl
mov
mov
out
shl
addr16
sub
push
jl
xchg
mov
hlt
adc
test
pop
out
push
ds
sub
cli
ficoml
sbb
sub
aaa
push
popf
pop
jle
sarb
lea
sbb
xor
mov
ret
or
push
aam
xchg
out
loop
xchg
neg
sti
jle
push
pop
leave
sbb
insl
stos
shr
je
dec
ljmp
xchg
out
xchg
sub
pop
cltd
mov
mov
mov
test
dec
inc
pop
les
xor
out
push
or
jb,pt
sbbb
es
aas
or
xchg
inc
sub
clc
in
push
out
inc
pop
daa
or
sahf
cld
add
shlb
out
idivb
int
data16
mov
out
popf
ja
push
lods
and
sub
jo
cmc
cld
sbb
fcomip
call
movsl
ja
out
fwait
andl
pushf
mov
bound
ljmp
int
mov
imul
jb
push
lock
cmpsl
fnstsw
outsl
fucomi
mov
stc
cmp
inc
or
mov
mov
mov
movsl
mov
outsb
sbb
popl
out
movsb
test
mov
iret
xlat
fidivrs
dec
lods
lcall
into
loop
daa
mov
xlat
rolb
jnp
out
fs
pop
jmp
dec
scas
or
into
mov
jmp
loope
loop
and
xchg
std
lods
jecxz
out
int
cld
pushf
in
xchg
dec
jnp
or
pop
in
mov
cmp
das
dec
push
inc
gs
mov
ds
les
or
and
push
jmp
mov
test
mov
sahf
cmp
xchg
push
jg
or
pop
outsb
fsub
cmp
mov
jo
jmp
insb
outsl
xchg
push
mov
lods
imul
insl
mov
rcrl
jl
pop
fnsave
stos
push
sub
shlb
out
and
mov
out
jl
popf
jbe
sbbb
roll
loope
cwtl
icebp
fstl
pop
xor
or
mov
mov
sbb
xchg
mov
jg
outsl
mov
or
or
rorb
daa
mov
rcrb
mov
movsb
jno
pop
push
add
fcmovne
xor
push
repz
jg
mov
cmpsl
fidivl
mov
jg
pushf
fisubs
and
out
sub
pop
push
adc
ret
addl
jg
sbb
ja
imulb
fs
jle
jo
das
fidivrs
insl
in
fstpl
xor
dec
jo
ficompl
xchg
call
sbb
ds
sbb
movsl
jae
lahf
fucompp
pop
sub
jmp
fists
fisttpl
add
sub
sbb
sbb
pop
into
mov
pop
mov
rcrl
ret
jg
push
jbe
add
cmp
ror
repnz
decl
shrl
push
ja
int3
cmp
jb
test
sub
xchg
lret
arpl
pop
das
es
loop
adc
xchg
or
sub
rorb
call
bound
jae
lcall
icebp
jb
jecxz
mov
sub
sbb
xor
icebp
mov
dec
iret
sub
lock
dec
sbb
call
insb
mov
je
std
xchg
cmp
cmp
in
mov
mov
stos
push
jle
shl
xor
mov
mov
ljmp
pushf
lods
jne
push
pusha
mov
aam
xlat
dec
and
xchg
mov
mov
das
mov
jg
sub
add
inc
loope
insb
sub
fildll
and
in
sbb
inc
cwtl
sbb
mov
lcall
nopl
push
subb
notl
mov
mov
cli
mov
or
adc
sbb
mov
mov
shlb
ljmp
xor
je
dec
movsl
stos
xor
mov
mov
add
dec
rcrb
pop
hlt
outsl
push
dec
or
dec
or
repnz
inc
rcll
std
push
out
dec
loop
cmc
clc
loopne
adc
pop
shl
push
sti
or
shlb
xchg
push
pop
mov
dec
add
popa
das
lcall
les
adc
int
mov
or
pop
dec
sub
movsl
sti
mov
call
push
xor
fnstsw
loop
add
xchg
mov
jmp
pop
mov
jae
push
fsubs
leave
adc
icebp
mov
lods
fnsave
ja
xchg
pop
fdivl
jmp
sbb
push
mov
out
ret
or
mov
lock
mov
das
lea
mov
shrb
mov
push
mov
mov
out
or
dec
push
push
inc
push
loopne
test
add
fmulp
pop
cli
outsb
mov
scas
push
scas
xchg
rol
inc
fldt
out
pop
jmp
sbb
out
out
mov
mov
popa
dec
and
das
adc
sbb
push
sub
imul
sti
out
pop
inc
daa
bound
mov
add
or
in
rcr
jecxz
xchg
loop
jmp
fsubr
out
adc
loopne
sub
pop
test
jo
arpl
fdivl
in
jle
jae
xchg
mov
xchg
lods
pop
jl
mov
mov
loop
push
adc
push
xchg
fimuls
fmul
imul
and
std
mov
inc
loopne
push
out
scas
xchg
mov
int
in
fsub
popf
pop
fsub
xlat
jle
sbb
loop
dec
mov
inc
popa
outsl
jno
inc
hlt
cmp
ja
pop
data16
icebp
xor
jae
loopne
add
mov
push
mov
sarb
scas
out
out
test
fbld
out
mov
out
jle
mov
mov
ret
and
xor
std
push
xadd
or
cmp
or
push
in
stc
cmpl
in
push
in
sbb
in
aad
mov
loope
cmpsl
scas
insb
push
shlb
mov
jge
mov
lcall
adc
shl
out
add
sub
ljmp
push
lret
mov
cmc
dec
mov
dec
lds
stos
add
lods
ret
shr
loop
pusha
inc
int
inc
sub
mov
insb
test
sbb
xor
std
rorb
cltd
in
inc
fstps
xchg
bound
add
fcoml
add
xchg
dec
imul
in
mov
cmpsl
or
pop
pop
ljmp
push
mov
sbb
divb
push
dec
aad
int
out
shrb
mov
mov
aas
cmp
call
sarl
xlat
or
pop
mov
and
std
aas
ret
movsb
sub
push
sub
mov
mov
faddl
xor
pop
sub
mov
mov
jecxz
sbb
inc
lock
or
sub
sti
pop
ljmp
and
mov
fistpll
pusha
into
xchg
stc
pop
jmp
ja
iret
mull
jo
xlat
mov
decl
in
inc
sti
dec
xlat
dec
imul
jns
mov
sbb
sbb
fldl
iret
loope
mov
ror
scas
daa
aas
cmc
mov
dec
into
push
scas
repz
bound
sbb
pop
daa
cwtl
icebp
sub
jmp
inc
jp
jecxz
adc
xor
inc
les
xor
ret
out
dec
mov
pop
add
add
inc
les
mov
adc
jbe
push
xor
loope
jg
mov
jecxz
inc
cmpsl
rorb
aam
add
dec
lock
jmp
and
adc
fcoml
andl
stos
scas
mov
test
std
aad
bound
sbb
xchg
pop
xor
scas
mov
out
std
xor
mov
inc
popf
jmp
mov
sarb
out
mov
mov
fwait
imul
mov
lret
test
stos
xchg
iret
fidivl
add
sub
adc
jg
cli
and
sub
cmp
mov
clc
pop
ds
ret
mov
cmp
mov
pop
xor
test
jb
pop
cmp
add
or
sbb
aas
mov
or
mov
mov
cmp
iret
arpl
add
loope
jmp
fsubrs
lea
cmpsl
lret
add
rclb
inc
lahf
xchg
inc
pop
arpl
insl
inc
sbb
lahf
ss
pop
bound
ret
mov
inc
inc
ljmp
xor
jne
push
out
ficomps
inc
sarb
mov
cmp
add
and
mov
mov
ljmp
mov
xchg
jb
jecxz
mov
outsl
arpl
inc
push
jmp
xor
lea
in
sti
in
adc
cmp
les
jb
popf
mov
push
fisubl
cmpsl
jg
sbb
jbe
dec
mov
mov
adc
push
sub
xor
xchg
insb
insb
xor
or
jmp
mov
std
mov
in
cmp
dec
jbe
jecxz
jle
lods
cmp
sub
sbb
sub
dec
xchg
stos
pushf
push
pop
mov
into
adc
mov
lds
shll
add
mov
cmpsl
jb
enter
icebp
sarl
aam
jbe
mov
sbb
or
enter
mov
cmp
jae
jbe
test
mov
ja
sti
cld
cltd
jl
dec
lret
sbb
mov
push
pop
lods
jne
outsl
mov
jno
mov
push
sub
and
lahf
decb
aas
js
je
add
stos
add
mov
inc
adc
adc
pop
out
out
xor
dec
and
mov
cmc
dec
cwtl
lock
sub
mov
push
icebp
jg
lret
outsb
fnsave
fistpl
xor
jns
in
xor
cltd
in
mov
xchg
int
in
sbb
push
orl
xor
iret
test
push
inc
das
jb
or
std
outsb
push
xchg
jecxz
push
cmpsl
mov
pop
push
jl
leave
xchg
mov
jmp
and
int
fbld
in
test
sbb
pop
out
in
jno
adc
lea
adc
mov
xchg
fwait
jg
loop
mov
jp
stos
lock
jo
shr
sahf
mul
stos
dec
or
in
outsb
scas
pushf
scas
sbb
xchg
shrb
and
rcll
fistl
hlt
roll
adc
inc
pop
push
aad
jo
add
std
sub
pop
sub
iret
mov
and
leave
test
addr16
scas
gs
xchg
push
fildll
sbb
xor
sub
leave
pop
dec
jnp
adcb
ja
jne
mov
jge
aaa
mov
add
lods
adc
imul
inc
dec
scas
inc
ja
pop
aas
jge
mov
add
xor
dec
push
jge
jecxz
sbb
movsl
adc
jne
stos
push
ret
movsl
imul
test
cmp
xor
jle
popf
jae
sub
and
inc
ffreep
jg
out
mov
add
lods
dec
mov
push
cmp
iret
or
adc
or
out
nop
sub
mov
jge
and
jnp
cmc
cld
adc
movsl
fsubrl
sar
mov
mov
ss
pusha
push
ret
mov
sarl
out
pop
scas
or
addl
push
iret
mov
imul
mov
mov
jg
sbb
xor
ror
pushf
pop
mov
dec
imul
pop
pushf
jne
xor
imul
ljmp
into
imul
ljmp
jb
cmpl
mov
fcoml
mov
into
sub
test
or
sar
out
or
sbb
ljmp
mov
mov
loopne
or
push
gs
mov
lds
dec
sub
mull
scas
inc
fildll
and
pop
mov
dec
and
das
mov
jle
testl
ret
pop
push
loopne
jo
push
popl
stos
push
push
pop
and
or
call
dec
xor
mov
or
pop
std
mov
push
mov
mov
or
mov
aad
or
mov
dec
iret
xor
in
jl
mov
dec
ja
repnz
out
mov
xor
ret
sarl
or
sub
in
out
aad
fistpll
sbb
jl
push
jae
add
js
and
fistps
rorb
inc
out
std
lods
out
sti
jno
mov
les
lods
fsubl
nop
mov
into
xor
cmpb
sahf
das
cmp
lcall
movsb
ret
lea
mov
or
mov
inc
scas
clc
imul
in
mov
stos
jl
enter
int3
lods
out
xlat
dec
jecxz
pushf
or
in
jo
xlat
pushf
aaa
out
inc
mov
add
mov
mov
lock
mov
movsl
test
jae
test
dec
jle
dec
push
jecxz
add
andl
dec
xchg
mov
outsl
jns
ds
sub
push
into
jl
loopne
push
out
ret
lahf
iret
jmp
or
mov
mov
dec
cmp
cmp
mov
gs
lcall
scas
pop
mov
scas
inc
cmp
scas
fcmovnb
cmp
xor
and
push
jle
pextrw
cmp
fs
jno
cli
jo
arpl
in
out
in
lock
movsl
jns
fwait
popf
mov
mov
test
outsb
jo
in
sub
sub
jo
dec
pop
repnz
clc
or
jo
scas
mov
test
jmp
in
insb
imul
outsl
addr16
adc
in
or
push
jmp
push
dec
shlb
hlt
fisubrl
mov
adc
rcr
neg
int
arpl
lret
rol
mov
mov
mov
jae
jno
xlat
mov
shrl
int3
cmp
inc
cmp
arpl
mov
mov
sbb
mov
jne
inc
movsl
lcall
sbb
jne
mov
into
and
jg
idivl
xor
call
arpl
out
fucom
mov
dec
insl
mov
pop
insl
mov
test
jecxz
xor
jg
mov
fnstenv
mov
jecxz
jge
lods
into
pop
lods
imul
repnz
shlb
jl
in
adc
std
xor
or
ret
out
mov
fstpt
mov
adc
arpl
stos
jmp
sarl
pop
inc
mov
mov
dec
mov
icebp
rcrb
aam
sbb
cmp
testl
iret
notb
jl
xchg
ret
jle
xchg
shll
psrlw
notl
pop
out
pop
lcall
ljmp
cmp
stos
mov
out
cmpsl
icebp
mov
inc
mov
dec
mov
shr
jg
ficompl
lret
inc
mov
and
jecxz
push
jo
or
ret
cmp
jp
mov
jmp
sub
xchg
push
lret
or
into
pop
jmp
xchg
dec
in
sbbl
pop
test
fwait
sarb
shrl
movsl
cli
icebp
ret
imul
cwtl
ret
add
aad
mov
imul
arpl
loopne
cmp
scas
xlat
or
pop
ss
jo
xor
stos
dec
mov
iret
in
ret
out
lret
ljmp
pusha
daa
xchg
sbb
mov
xor
push
into
stos
mov
jb
cli
mov
mov
int3
adc
push
push
imul
jmp
adc
jmp
js
or
sbb
mov
xor
gs
cmp
lea
test
mov
dec
jno
hlt
mov
mov
test
in
mov
pushf
inc
and
jecxz
cmp
popf
mov
repnz
ljmp
or
or
aad
adc
aam
sub
pop
xchg
jae
addr16
jns
jle
notl
dec
shll
lds
push
cmp
push
push
jecxz
loope
call
mov
dec
add
mov
mov
pop
shll
push
in
inc
mov
fs
das
out
adc
push
ljmp
mov
sub
push
push
pushf
adc
test
cmp
push
les
inc
loop
popa
cmp
loope
jo
jno
ss
popa
aas
jae
fidivl
out
shl
dec
lahf
push
or
sub
mov
rorb
jecxz
gs
outsl
mov
je
jmp
xchg
dec
int3
mov
ljmp
out
ret
mov
cmc
rcrl
cli
popf
sub
and
in
jmp
test
fistps
mov
add
xor
add
xor
jns
rcrb
aad
xor
adc
mov
loope
mov
dec
xor
je
sbb
or
pop
mov
xchg
stos
pop
clc
lds
movsl
sub
xchg
mov
fldt
test
out
jo
cli
test
and
mov
jae
out
addr16
lds
or
jo
sbb
or
in
sub
xor
mov
jl
adc
jp
mov
in
jg
and
pop
int3
inc
in
frstor
rcl
push
and
ficoml
xlat
sub
loope
add
loope
aaa
mov
xlat
ret
adc
or
push
lret
aas
into
out
xchg
in
aas
jo
mov
lcall
icebp
mov
mov
pop
sub
pushf
mov
mov
stc
mov
mov
popf
and
fmull
lret
les
outsl
push
cmc
out
aam
or
stos
pop
mov
loope
push
sub
sahf
mov
out
xchg
fbld
popf
scas
loopne
dec
xchg
sbb
in
mov
jno
inc
and
aad
hlt
add
xchg
push
xor
xor
popa
ret
adc
out
jp
cltd
jae
mov
stos
leave
push
pop
leave
fstpt
std
lcall
pop
add
into
cmc
dec
out
pop
adcl
ret
mulb
adc
lret
fimuls
std
push
jle
popa
cmc
mov
test
stos
pop
inc
jno
icebp
or
or
ret
cs
fmulp
ficoml
mov
mov
lcall
xor
and
ret
push
js
daa
or
dec
imul
shlb
repnz
or
pusha
sbb
and
sub
inc
pushf
sbb
push
pop
mov
lret
sti
push
call
ljmp
cmp
xchg
add
frstor
outsl
call
push
repnz
push
cmovl
xchg
jge
in
outsl
mov
divb
aaa
insl
test
add
lcall
imul
jge
pusha
and
cmp
rolb
movsl
or
jno
lock
jg
sub
mov
xchg
pusha
push
mov
mov
lcall
mov
mov
push
sub
mov
loope
push
out
iret
jb
pushw
into
ret
daa
iret
push
scas
or
pushf
arpl
mov
inc
icebp
ljmp
jae
or
mov
aad
inc
cmp
imul
int
std
add
mov
ja
mov
jae
mov
outsl
push
mov
sub
pushaw
jns
or
pop
stc
jmp
sub
mov
mov
mov
out
outsl
mov
ret
out
mov
jecxz
mov
mov
lahf
sub
cmp
arpl
jnp
mov
jmp
shll
scas
shll
cmp
pop
fistpl
push
xor
add
in
lret
out
stc
rol
mov
fs
jle
push
rcr
in
stos
fisttpl
loopne
shl
addr16
fstl
cmpsl
loope
cmc
jmp
pop
dec
rcrb
push
inc
adc
dec
jae
call
test
jp
lds
xchg
ds
stos
inc
mov
ret
arpl
mov
das
push
fmull
cmp
mov
mov
mov
sbb
cmpsl
mov
in
lahf
stos
in
js
mov
xchg
jecxz
xor
nop
ljmp
les
sub
jmp
fmulp
xlat
stos
in
jmp
or
mov
sub
mov
insl
shrb
xchg
cmpsl
jecxz
xchg
xchg
in
mov
lahf
xor
fwait
mov
jecxz
push
das
xchg
imul
and
hlt
loope
jge
mov
out
jnp
ja
gs
ljmp
jmp
dec
into
lock
push
sub
sub
jae
dec
fidivrl
out
imul
ficompl
rcrl
aam
cmc
xchg
mov
repnz
stc
je
out
push
sti
inc
pop
jae
mov
inc
mov
jecxz
icebp
sub
movsl
lret
jo
iret
ret
fld
sub
rol
mov
leave
or
shl
jbe
mov
ds
cltd
rolb
sar
and
fucomi
cld
shl
mov
xlat
sbb
iret
xchg
jnp
repz
xor
xor
inc
or
xchg
push
mov
xor
xchg
in
mov
sub
jmp
fcmovnbe
xlat
mov
mov
in
scas
cld
mov
xor
xchg
xchg
fistpl
in
xlat
test
andl
xor
imul
push
mov
jne
mov
jo
mov
ljmp
movsb
daa
xchg
dec
les
popf
pop
lods
or
sti
jnp
out
jle
or
int3
or
in
into
ret
adc
cs
clc
mov
dec
std
lods
fucomip
mov
out
jo
dec
lock
sub
mov
repz
mov
hlt
jl
pop
lret
add
pop
xor
jbe
jns
prefetch
not
in
ja
push
jmp
pushf
adcl
push
test
stc
lea
arpl
shll
mov
cmp
les
xchg
data16
jl
or
add
subl
or
dec
aas
mov
pop
dec
xchg
mov
arpl
arpl
stc
pop
inc
sub
xchg
ret
or
movsl
out
jo
cli
pushf
jb
jecxz
fmull
outsl
das
xchg
scas
divl
mov
mov
data16
arpl
mov
or
inc
mov
in
cmpsb
mul
outsb
outsl
xchg
pop
jb
int
xchg
lock
icebp
call
ljmp
mov
or
xchg
push
mov
jb
shr
mov
fs
sbb
lea
dec
testb
fwait
dec
imul
movsl
xor
jne
lock
jae
xlat
push
rcll
xor
jae
icebp
je
inc
fwait
add
fistl
out
jae
and
push
out
cmp
in
test
mov
push
dec
test
and
les
lds
adc
push
mov
mov
aad
mov
lcall
std
movsb
lods
sti
ret
xchg
arpl
mov
mov
test
popf
adc
test
push
iret
cli
ficoml
cmpsb
xor
xchg
inc
std
outsb
jo
xchg
test
addl
mov
out
lds
test
mov
scas
mov
and
out
mov
scas
adc
lret
ret
movsb
addr16
pop
pop
mov
iret
and
loope
cmp
mov
adc
insl
std
into
mov
lret
pop
arpl
mov
mov
loope
popf
test
adc
sub
dec
push
dec
inc
mov
sub
or
mov
inc
fistl
ficoms
fdiv
xor
jge,pt
xchg
or
loope
or
push
or
mov
xchg
mov
lods
hlt
xor
mull
es
insl
add
mov
subb
jecxz
or
xchg
jecxz
sub
add
and
call
test
mov
out
push
jecxz
ljmp
dec
test
push
rolb
cmpsb
push
cmp
xor
fucomi
and
pop
jl
mov
push
movsl
xchg
hlt
inc
data16
inc
or
inc
in
mov
fwait
lret
xchg
pushf
scas
pop
enter
out
jno
push
mov
in
jl
xchg
or
pushf
jle
iret
insl
mov
sbb
lret
jo
pop
sub
out
jecxz
dec
push
xorb
jl
jle
or
add
test
mov
lock
mov
frstpm(287
add
xor
mov
andb
sbb
push
jmp
lret
shlb
jae
jle
sub
jmp
mov
fcomi
sbb
mov
add
fnstsw
popf
add
dec
repnz
in
jae
test
sahf
std
add
or
jo
adc
jb
icebp
pop
aaa
jg
lcall
mov
sub
pop
fidivl
xor
fsubrs
xor
mov
mov
lods
fstps
mov
ljmp
call
gs
repnz
inc
das
push
data16
imul
scas
cmp
stos
int3
or
out
push
xchg
jno
test
mov
stc
shrl
shll
push
mov
loopne
pop
xor
stos
mov
data16
mov
test
sbb
stos
fwait
mov
outsl
shlb
xchg
scas
jae
stos
cmc
sti
aad
lahf
and
fwait
xor
xchg
mov
jecxz
pop
das
jae
mov
pop
mov
mov
in
lret
jecxz
daa
mov
mov
inc
mov
rcrl
push
es
fimuls
mov
inc
popf
popf
pmaxsw
mov
out
pop
fimull
movsl
mov
stos
rorl
stos
in
js
scas
scas
cmp
push
or
aaa
andb
lea
jae
mov
sub
or
in
jbe
call
imul
rcr
or
out
xchg
add
push
stc
loopne
mov
sti
shrb
mov
sub
imul
xchg
mov
or
cmp
mov
cmp
out
cltd
and
popf
cmpl
cmp
stos
btsl
lret
xorb
and
icebp
popf
sub
mov
addr16
jno
xchg
and
ljmp
call
stc
ficoms
mov
adc
cmp
mov
xchg
loop
arpl
divl
call
sbb
push
mov
pop
pop
adc
outsl
add
adc
dec
lds
lea
xorb
aaa
adc
out
jae
in
jle
addr16
lcall
and
sbb
push
xor
movsb
aas
mov
or
pop
inc
icebp
aas
cmp
jecxz
push
fwait
stos
ljmp
arpl
pop
inc
add
std
jo
jmp
mov
sar
jmp
dec
xlat
ret
fadd
xor
xor
leave
jle
bnd
jecxz
cmc
sub
roll
out
pop
scas
xchg
pusha
fisttpll
xor
into
or
fidivrl
lret
rcrl
iret
repnz
mov
ljmp
test
mov
fsub
stos
mov
loopne
adc
pop
sub
sti
fdivr
inc
pop
nop
mov
jmp
cmp
adc
sbb
icebp
or
or
subl
push
pop
out
jbe
aas
cs
mov
imul
or
mov
and
mov
int
ja
adc
scas
adc
in
pop
jp
mov
scas
ljmp
orb
and
scas
div
dec
adc
fiadds
decb
add
mov
test
icebp
mov
stos
ljmp
adc
aam
test
xchg
jp
cmpsl
jmp
and
jno
stos
mov
push
add
sahf
imul
pop
fdivrs
stc
xor
adc
clc
xchg
jg
jne
inc
in
mov
mov
fidivrs
mov
loop
or
repnz
lods
out
shlb
pop
sub
push
rol
addr16
or
jne
popa
mull
and
fldenv
lea
mov
es
mov
cmp
lea
jmp
fadd
gs
lods
ret
fdivrl
cmc
add
aaa
dec
xchg
mov
arpl
push
call
dec
lret
jmp
out
addr16
xchg
or
adc
enter
xchg
xor
cltd
add
mov
and
push
xor
in
jb
add
add
jae
lock
scas
xchg
out
mov
cmpsb
pop
les
negl
icebp
out
sar
lock
rcrl
cmp
pop
stc
repnz
xchg
ret
sbb
rcr
arpl
sahf
out
push
xlat
mov
mov
xchg
subl
xchg
stc
push
push
scas
mov
out
push
mov
in
pop
lret
nop
loop
mov
fnsetpm(287
add
push
mov
fistps
leave
iret
ljmp
sub
ret
stos
out
sbb
inc
inc
mov
out
arpl
jmp
cmpsl
adc
xchg
rol
enter
fisubrs
and
mov
fmull
jne
and
cltd
xor
out
sahf
xchg
lahf
jmp
std
insl
mov
sar
arpl
sub
movl
mov
cli
push
fsubr
out
mov
icebp
push
inc
adc
mov
shr
xor
rcll
dec
jnp
arpl
js
movq
mov
push
lret
jbe
icebp
add
sahf
bound
les
rcrl
out
and
ss
pop
xlat
and
loop
ja
cmp
les
fnsave
cmpsb
les
scas
notl
mov
pop
and
ret
push
idiv
sbb
sti
fidivrs
pop
adc
fistps
xchg
mov
in
out
pop
mov
jecxz
fstp
testb
push
mov
add
stos
adc
mov
sbb
insl
shrb
xchg
lahf
es
cld
mov
mov
mov
enter
nop
imul
out
sbb
pushf
les
pop
inc
mov
and
cmp
jle
add
outsb
ljmp
pop
fisubs
dec
dec
fwait
insl
pop
sbb
out
nop
ja
or
dec
aaa
ret
jne
push
popa
out
sbb
lret
mov
js
push
adcb
jo
mov
lock
movsb
lock
stc
loope
xor
sub
cmp
jbe
das
push
add
sub
xor
addr16
pop
cs
loope
icebp
aaa
lret
inc
xchg
aas
pop
mov
inc
or
xchg
fsubrs
push
int
icebp
pop
into
scas
cmpsb
jmp
sub
xor
xchg
cmp
stos
loop
fimull
cmp
rclb
fs
or
shrl
rcrb
dec
mov
jbe
push
arpl
aad
add
int3
jnp
push
xchg
ja
ret
hlt
mov
icebp
mov
dec
push
fisubrl
in
daa
icebp
and
pop
xor
les
subl
mov
xchg
outsb
repz
fmul
arpl
mov
test
loop
fsub
inc
sub
push
scas
push
lock
dec
movsl
jnp
loope
sti
mov
leave
mov
mov
jmp
div
jg
xor
or
loop
adc
or
mov
jecxz
cmp
ja
shrl
hlt
mov
or
sar
lods
hlt
jmp
pop
pop
in
and
push
and
into
mov
jle
icebp
fisttpll
and
imul
pushf
aaa
inc
scas
fisttpll
arpl
loope
insl
out
jae
xor
jae
fistpll
sub
mov
cmp
or
push
mov
mov
out
scas
loopne
loopne
jge
pop
cmp
aas
or
mov
in
inc
dec
jecxz
mov
std
loope
mov
fnstcw
jnp
daa
js
popa
repnz
sub
add
scas
repnz
add
xor
jg
mov
aaa
push
sbb
cmpl
jae
jb
shrb
mov
fwait
add
pusha
jae
sti
ja
mov
jp
jne
in
data16
mov
popa
inc
mov
mov
lods
out
xchg
rcrl
jo
orl
and
pop
and
sub
insb
neg
add
in
scas
jg
addr16
out
fadds
or
loopne
das
in
jnp
popf
lahf
lock
mov
imul
shlb
cs
je
notb
mov
fadds
jb
ljmp
pop
mov
sub
pop
inc
adc
loope
inc
cmpl
fcomi
add
dec
and
sub
out
dec
and
jo
je
dec
xchg
add
jmp
jo
ds
sub
mov
pop
xchg
incl
or
repz
sbb
mov
daa
imul
jecxz
xor
rcr
jmp
xchg
fstp
movzwl
insl
cmc
mov
loopne
daa
xor
icebp
mov
cmp
sbb
mov
ret
cmc
lds
loopne
mov
sarl
inc
pop
lret
jo
popf
cmc
inc
scas
inc
mov
or
notb
mov
cmp
xchg
jne
imul
dec
out
fs
mov
xor
and
adc
ret
lcall
ss
add
int
ljmp
push
mov
mov
push
mov
mov
loopne
dec
mov
jge
push
or
cmpl
mov
fildll
pop
imul
out
lods
ficompl
packsswb
add
arpl
cltd
insl
pop
ret
divl
jo
lea
hlt
in
pop
scas
sbb
lds
jae
outsl
insl
pop
dec
lret
and
jecxz
in
mov
int3
jecxz
fcoml
pushf
xchg
pop
mov
mov
test
daa
mov
out
mov
out
clc
lea
imul
jmp
mov
loopne
fcomip
or
xor
sub
fmuls
pop
xor
inc
and
adc
jo
shrl
dec
xor
sahf
adc
mov
fdivr
bnd
out
ljmp
push
adc
in
push
jo
outsl
xchg
movsl
push
std
pop
xchg
js
je
mov
sub
jmp
xchg
mov
sub
out
jne
stos
jmp
cmpsb
dec
stc
std
mov
push
jle
stc
mov
popa
mov
rorb
jb
cmpsl
add
rolb
mov
ret
xor
or
cmp
ljmp
jge
neg
fcmovnb
pop
std
sbb
aaa
xor
sub
call
data16
out
lods
mov
lcall
or
sahf
pop
lods
mov
test
and
dec
popf
mov
add
mov
scas
sub
jg
mov
into
push
cld
adc
popf
and
pushl
add
jo
in
sub
lock
fwait
lods
mov
fdivs
ja
loop
loopne
mov
dec
sbbl
loop
mov
xor
mov
movb
mov
lds
lock
add
mov
xor
testb
xor
and
or
mov
das
sbb
jg
push
psllq
movntps
xchg
daa
stos
fisttpll
scas
or
out
pop
pusha
mov
push
out
lea
fsubs
icebp
negl
push
pop
cmp
lea
mov
xchg
test
ljmp
push
cmc
sbb
test
add
call
add
out
jmp
inc
pop
es
pop
shrl
dec
das
xor
push
mov
and
or
mov
int
xchg
outsl
push
pop
xchg
inc
shrb
lahf
call
and
cmp
movsb
popl
dec
out
push
cmc
jnp
insl
insl
cmpsb
pop
ljmp
pop
bndstx
das
leave
inc
das
jmp
cmp
xor
faddl
xor
mov
inc
repnz
addr16
dec
stos
sub
das
xchg
arpl
cmpsb
mov
jmp
add
in
mov
imul
push
iret
jge
data16
jecxz
popf
mov
lods
jg
xlat
cmp
int
lret
lcall
ror
pop
nop
or
xchg
add
or
push
fcmovbe
mov
xor
cli
mov
inc
cmp
das
filds
sub
push
xor
aaa
pop
xlat
inc
enter
mov
arpl
shr
dec
sbbl
out
and
push
dec
dec
loope
stos
mov
push
jb
call
dec
jo
into
push
stos
add
fcomi
in
lret
iret
mov
cs
fcomi
leave
aam
or
mov
mov
es
aad
rcrl
mulb
repnz
xchg
fidivl
lods
mov
pop
ljmp
or
push
aam
outsb
lcall
mov
cmp
dec
flds
leave
outsl
ror
div
jo
stos
sbb
push
hlt
xlat
jecxz
out
insb
negl
sti
inc
push
cmc
lea
xor
jmp
cmpsl
cmc
in
xchg
mov
jb
xorl
je
fcmovu
test
out
and
adc
shlb
or
adc
repnz
mov
mov
and
mov
addr16
cmp
int3
orl
xor
pop
out
imulb
dec
jb
int3
jmp
and
fnstcw
xchg
jmp
mov
leave
sarb
pop
or
and
rorb
adc
popf
push
movsl
mov
xchg
mov
into
clc
fsincos
sbb
loope
inc
test
enter
test
mov
lcall
fwait
pop
jnp
ret
rcr
mov
or
rcrb
dec
xor
xchg
popa
sbb
cmp
lock
outsb
jmp
pushf
std
cmpsl
mov
push
cltd
xchg
mov
das
sub
out
mov
inc
and
jmp
xchg
mov
rcrb
jge
out
lods
imul
orl
data16
mov
mov
mov
mov
dec
mov
pop
or
mov
imul
aad
mov
sbb
in
mov
ret
fidivrs
lret
push
cs
adc
out
loope
push
scas
in
cmpsl
jae
mov
ret
jbe
shl
xchg
jecxz
xchg
sti
fucom
adc
mov
das
in
jns
outsb
ficoms
shrl
mov
shll
mov
shrl
jnp
mov
adc
lahf
and
and
aaa
shll
das
jmp
imul
adc
lret
in
jecxz
xlat
insl
mov
ror
bound
es
xchg
sub
jg
stos
insl
jo
mov
mov
xchg
out
mov
rcr
dec
stos
mov
imul
test
shl
imul
mov
push
mov
lock
fstpt
dec
xor
rcll
cmpsl
mov
loop
inc
cwtl
pop
cmpsl
ljmp
xchg
fldt
or
xor
subl
iret
dec
adc
in
dec
fwait
lods
pop
in
or
pop
ljmp
in
adc
mov
in
lcall
cmc
ds
jle
iret
out
cmp
lret
aas
in
sub
lods
sub
js
pop
cmpsl
ficomps
call
add
out
mov
ret
xor
mov
xor
mov
or
je
pop
out
leave
hlt
out
or
insl
out
jns
adc
jae
adc
sub
xchg
mov
subl
clc
xchg
or
sub
movsb
jae
sti
sbb
or
inc
lea
mov
push
jne
sbb
sub
mov
hlt
sbb
test
out
outsl
add
mov
fcomp
mov
dec
or
jecxz
cmp
pop
leave
mov
out
jo
rorl
xchg
dec
in
sub
lcall
jo
repnz
daa
jo
movsb
test
lret
das
add
or
dec
pop
ja
xor
test
jge
mov
pop
cmpsl
sbb
outsl
or
outsl
and
jno
mov
aam
push
ljmp
lods
cmp
fwait
int3
mov
into
in
scas
push
sbb
xchg
flds
clc
push
gs
mov
scas
fbstp
loope
fs
in
xor
adc
call
fisubrl
cmp
aaa
cmc
lahf
dec
in
aam
loopne
jo
and
ljmp
mov
addr16
cmc
cmp
into
popf
bound
in
int3
jle
mov
fbld
andb
jecxz
std
sarb
lods
cltd
jae
repz
aam
hlt
scas
mov
jnp
mov
popf
pop
mov
xchg
out
jns
lock
cmc
push
sub
adc
adc
aad
mov
ljmp
sahf
movsl
scas
jb,pt
data16
imul
jne
cld
mov
or
out
popf
cmpsb
out
bound
xor
scas
popf
lock
add
xor
daa
lock
push
jmp
out
insb
les
cwtl
das
fldl
jecxz
rolb
fwait
jbe
xchg
sbb
stos
pop
nop
mov
cmp
jbe
jp
shll
xor
xchg
xchg
push
sub
and
mov
jmp
lret
adc
roll
push
aas
stos
fnstsw
imul
inc
xor
negb
jmp
jo
mov
cs
cli
sub
mov
or
test
lahf
push
xchg
sbbb
bound
in
jge
in
pop
cmc
sub
xchg
fmull
pop
xorb
push
sarl
in
xor
xchg
popf
sub
pop
jns
cwtl
xor
fwait
sub
jb
sbb
or
in
call
sub
xor
call
sbb
stc
sub
or
jo
dec
std
rcrl
fwait
loope
jg
out
pop
in
inc
sbb
add
jg
lock
mov
sub
mov
movsb
dec
repnz
pop
xorl
and
outsl
stc
xor
icebp
dec
in
fidivs
out
outsl
in
loopne
or
inc
xchg
stos
stos
arpl
scas
hlt
test
xor
cmp
jecxz
xchg
out
lea
xlat
mov
shrb
pop
cli
dec
rolb
push
or
and
add
sar
hlt
mov
loope
mov
fdivp
mov
out
mov
cmp
jg
hlt
sbb
push
sti
push
inc
out
and
movd
loope
or
test
popf
in
push
fbld
dec
stos
addr16
xchg
and
out
xchg
cwtl
movsl
test
push
vmovhpd
popf
pop
inc
lods
mov
icebp
jge
adc
enter
test
aam
xor
push
rcr
or
scas
insw
out
in
jle
cmp
out
add
fmull
mov
out
xchg
ljmp
ja
fwait
ja
cmp
icebp
shlb
popf
div
ret
xor
sahf
push
pop
cli
or
ss
int3
enter
into
jge
shl
xor
in
jmp
adc
icebp
scas
fisttpl
aas
or
mov
enter
hlt
test
lock
add
add
sbb
adc
or
push
fnstsw
sar
ss
pushf
dec
out
pushf
iret
clc
insl
decl
lock
shll
add
cmp
push
sti
inc
or
push
lods
mov
sti
bound
mov
shr
stc
xor
das
mov
ret
out
jmp
cmpsl
rorb
shr
xor
imul
jnp
xchg
xchg
imul
cmpb
pop
lret
jmp
jmp
sbb
lock
xchg
cmp
in
icebp
data16
xchg
leave
push
in
dec
cmpsb
pop
dec
cmp
mov
or
clc
popf
inc
je
bnd
in
jecxz
sub
into
outsl
or
popa
adc
push
pop
dec
mov
dec
lods
outsl
scas
push
mov
imul
and
pop
mov
stos
sbb
mov
jae
arpl
outsl
inc
out
clc
iret
dec
jmp
testb
jg
lret
xlat
int3
mov
ret
jp
popa
hlt
popf
std
jle
inc
aaa
leave
int
das
rcl
test
stc
ljmp
scas
xor
pop
cmp
out
roll
and
insl
mov
aas
jne
cmp
inc
movsl
or
lock
loopne
ljmp
fisttpll
or
fistpll
cwtl
pop
jmp
icebp
popf
jge
xchg
or
cmp
jl
ja
add
xchg
sbb
int3
mov
adc
in
imul
and
rcrl
sub
rcrb
test
jne
cwtl
adc
mov
sahf
das
push
mov
mov
or
jae
add
fbstp
lahf
inc
mov
ss
xchg
dec
pop
ret
test
lret
add
lret
cmp
push
bnd
jae
flds
and
mov
adcl
inc
test
rcll
xchg
rcrb
pop
scas
shlb
jae
mov
cmp
push
lret
test
jp
arpl
cltd
jo
pop
mov
adc
std
inc
ljmp
out
rorl
insl
pop
cwtl
sub
sbb
hlt
sbb
cltd
sub
pop
push
sub
add
lcall
pop
sbb
dec
sub
pusha
cmp
dec
add
dec
loopne
pop
xlat
ljmp
leave
jno
adcl
xor
mov
jae
mov
mov
mov
fcmovu
out
adc
les
ret
or
push
leave
xor
shufps
ljmp
inc
mov
sbb
xchg
xchg
jle
or
or
push
or
mov
or
adc
movhps
daa
xor
das
add
lret
push
das
sbb
xor
and
aad
inc
xchg
jmp
xor
mov
mov
fnstsw
jg
mov
mov
xor
xor
jg
sub
jmp
cmp
push
call
and
adc
stos
or
push
xchg
push
pop
xchg
sub
push
pop
adc
mov
jg
cltd
add
xlat
push
out
sub
jecxz
mov
jno
cli
dec
imul
hlt
shl
hlt
push
push
jns
xlat
xchg
jo
sti
xchg
jae
outsl
pushl
jp
push
push
scas
xchg
cmpsb
inc
movsl
mov
mov
iret
stos
sti
sbb
add
jnp
or
pop
mov
out
nop
test
fbld
jae
sub
push
rorl
xchg
lock
arpl
pop
shl
sub
inc
xor
cmc
mov
fs
xor
pop
pop
cmpsl
mov
loopne
pop
test
outsl
add
adc
xchg
and
into
xor
shlb
mov
mov
add
xor
mov
in
add
sub
mov
sti
shrb
shr
int
mov
lahf
xchg
inc
sub
out
cmpsl
mov
ret
data16
pop
test
dec
or
leave
push
cmp
call
xorl
mov
pusha
imull
daa
fsubl
jne
icebp
mov
xor
jle
add
repz
repnz
cltd
xor
mov
jmp
ret
pop
das
hlt
jge
out
repnz
xchg
sti
inc
movsb
sbb
dec
push
cmpsl
pop
lods
jmp
inc
loope
pop
loop
mov
sub
dec
mov
and
in
icebp
or
and
and
daa
or
scas
into
ret
pfmin
adc
jb
or
das
mov
mov
ja
lcall
shrb
xchg
add
jnp
add
mov
mov
mov
imul
in
adc
sbb
cmp
fwait
sti
lods
xchg
add
mov
mov
adc
pop
fildll
lock
sbb
lea
imul
pushf
mov
sbb
adc
clc
adc
inc
fcmovnbe
clc
pop
test
adc
push
or
add
dec
xor
jo
push
out
sub
popa
rcrb
daa
movsl
fistps
imul
jns
aaa
xor
cli
mov
lcall
test
pop
sub
loope
imul
shr
insl
loopne
xlat
jmp
ret
fdivl
xor
fstpt
out
fsincos
adc
dec
cwtl
mov
xchg
pop
aaa
and
xchg
xor
xchg
sub
mov
into
cltd
xor
in
jae
ss
rorb
cmp
mov
xchg
in
jnp
iret
iret
ffree
in
pop
sbb
insl
xor
or
mov
xor
jo
mov
jmp
push
cmp
lea
addr16
inc
in
pop
fptan
test
pushf
loopne
imull
or
outsl
int
xchg
sbb
ljmp
pop
jecxz
xchg
xchg
sub
xchg
pop
popf
mov
dec
add
leave
sbb
fxch
jle
jecxz
jl
push
and
inc
jmp
xlat
das
inc
movsb
addr16
cmp
in
mov
mov
xor
pop
mov
add
scas
bnd
mov
jmp
out
in
insl
xor
mov
out
popa
shrl
shrl
push
repnz
mov
scas
aam
jl
or
sti
test
nop
out
ficompl
arpl
jns
aas
lret
mov
or
call
data16
pop
aad
jle
sub
xchg
in
daa
outsl
outsl
mov
jecxz
xchg
int3
subl
lock
lahf
cli
mov
add
push
or
stos
push
sahf
loope
divl
adc
pop
dec
mov
jl
movsb
rorl
mov
lods
add
popl
ret
lret
or
insl
dec
cmp
ficoml
lods
pusha
fmul
scas
popf
fisubs
mov
mov
fwait
push
mov
or
loopne
pop
sub
cld
leave
cmp
mov
pusha
les
xor
add
mov
dec
je
out
xlat
sub
les
or
dec
fninit
inc
pop
xor
in
inc
xor
xchg
test
push
sbb
ja
jg
push
xor
xchg
xchg
aas
jmp
pop
xor
ret
sub
out
push
mov
jo
pop
fsubrp
sub
pop
sbb
jp
lret
push
mov
addb
addl
loope
mov
out
std
insl
sbb
adc
out
mov
int
push
popf
rcrl
loope
xor
outsl
cmp
cmp
call
jne
lahf
and
dec
fmull
scas
jge
adc
lahf
push
outsl
test
scas
mov
pop
rolb
arpl
lret
or
test
stc
cmp
pop
fxam
sbb
push
cltd
loop
in
inc
pop
xchg
mov
xchg
or
test
sbb
fbld
cmp
sbb
ss
inc
add
outsl
mov
lahf
sub
mov
fadds
movsl
rcrl
xlat
movsb
cld
sub
jae
insb
fwait
and
adc
cmc
jno
mov
adc
bnd
fidivs
or
add
scas
fbstp
int
lret
call
out
aam
lods
fld
adc
into
mov
int
jecxz
lahf
jge
outsb
scas
leave
popf
into
mov
out
into
repnz
bound
out
dec
jo
test
sahf
xchg
lcall
addr16
out
jo
lock
jle
fsubs
test
pop
in
fildll
movsl
fcmovne
fstp
add
divl
or
lcall
xor
adc
stos
stos
cmpsb
cmpsl
les
dec
mov
xchg
jns
enter
pop
xchg
xlat
je
inc
xor
mov
ret
mov
in
mov
iret
into
cmpsl
push
fcomp
fcmovbe
jnp
lret
into
jne
test
or
jge
pop
fsts
inc
daa
addr16
imul
cmp
cltd
fwait
cmp
push
jb
mov
cli
ds
sub
outsl
enter
loop
mov
loope
js
pop
and
sarl
sbb
jne
test
or
scas
in
repnz
out
test
addr16
dec
je
aam
push
xlat
dec
xchg
movsb
cmpsl
lcall
imul
aas
mov
iret
jns
fcmovnu
loope
xlat
push
mov
cli
jmp
pop
test
mov
sahf
or
lret
jno
sub
out
and
dec
cmp
and
xchg
insl
pop
arpl
test
call
jne
pop
cld
test
mov
sub
sub
sub
cmp
fidivs
std
xchg
or
adc
dec
out
into
sbb
shrb
dec
ljmp
dec
add
mov
jns
xchg
int3
or
cmp
out
fidivs
xor
jle
sub
or
add
icebp
int3
je
lret
mov
int3
popl
in
pop
jo
mov
in
jb
lcall
or
xlat
lods
in
adc
fstl
testl
jle
inc
ficomps
insl
fchs
or
fwait
dec
rolb
adc
insb
adc
popf
xchg
cwtl
jbe
sub
sti
loopne
cli
call
mov
xchg
ds
push
lret
sbb
imul
pop
scas
repnz
mov
das
mov
add
enter
loope
jmp
inc
cmp
sbb
jmp
mov
lock
stos
pushf
aas
cltd
out
mov
aas
imul
roll
popa
lcall
pop
jb
fsubrl
call
push
lock
mov
jg
sub
inc
xadd
sti
sub
mov
pop
pushf
neg
lret
pop
mov
fcmovu
outsb
cmpsl
int
aas
fcompl
pop
and
inc
add
push
je
add
ds
out
sub
mov
mov
out
sub
aas
dec
rorl
and
mov
std
stos
mov
sub
or
jl
mov
jb
mov
sub
psubb
bound
sub
outsb
push
add
test
ret
jbe
pop
jmp
outsl
mov
vpackssdw
ljmp
popf
cmpsb
ljmp
lock
mov
mov
cmpl
xor
dec
sahf
repnz
push
cmp
inc
pcmpeqb
inc
xor
jecxz
insl
mov
mov
mov
sbb
iret
jl
fildll
ds
inc
pushf
lods
jne
ss
push
push
je
or
sub
int
loopne
dec
out
mov
test
les
inc
sub
xchg
xorb
sbb
test
lret
jae
rol
pop
insl
add
sbb
mov
insl
mov
jge
cmpsw
repnz
mov
adc
xchg
add
stos
pop
loopne
in
loopne
cmp
movsb
push
enter
push
or
sbb
inc
pushf
popf
cmp
ja
insl
fmull
pop
jmp
add
sbb
sub
sub
mov
sar
sub
ret
icebp
xlat
or
shl
and
pushf
clc
ret
pushfw
setne
mov
push
aad
test
lods
cmp
leave
pop
in
ror
jnp
mov
stos
mov
dec
push
in
xchg
pop
enter
cmp
mov
mov
jecxz
inc
outsb
jae
stc
lds
jae
lret
outsl
negb
fidivl
test
push
push
add
test
mov
outsl
pop
xor
xchg
sub
and
test
sbb
jnp
lcall
dec
ret
push
arpl
mov
dec
in
int3
arpl
pop
fcmovnbe
push
pop
xchg
and
or
je
inc
push
jb
mov
push
add
and
inc
pushf
int3
rcrl
insb
dec
test
xchg
push
pop
icebp
fists
jmp
xlat
xchg
jno
sbb
mov
jecxz
mov
mov
jo
addr16
push
lods
and
jecxz
sub
add
shr
dec
push
into
adcb
cltd
int3
jae
push
hlt
sarb
stc
mov
push
dec
out
lock
cvtps2pd
out
dec
lahf
pmaddwd
call
test
lods
imul
push
js
xchg
add
loopne
scas
jae
jnp
das
xor
fists
push
mov
and
iret
mov
movsl
aas
jne
call
add
ret
jmp
enter
fwait
add
mov
pop
jle
dec
xchg
cmp
mov
and
sarl
je
mov
arpl
pop
ljmp
push
insl
dec
xchg
sbb
shl
add
pop
jno
jecxz
adcl
andl
push
push
adc
dec
or
gs
or
addr16
lahf
xor
xchg
xor
out
pop
mov
push
or
xor
mov
imul
sbb
out
adc
rcl
jno
add
fsubs
stos
stos
push
sub
fldt
inc
std
add
ret
jg
xor
mov
adc
or
sbb
add
mov
adc
add
les
test
leave
outsl
movsl
jo
call
add
cs
mov
jle
lcall
dec
jp
jno
or
pop
iret
insl
iret
sub
mov
stc
icebp
into
je
popf
insb
mov
rolb
jecxz
fsubrl
inc
push
sbb
push
sbb
ret
fistpl
or
arpl
popa
stos
cmp
xor
adc
jge
xchg
ja
scas
pop
cmp
and
cwtl
into
ret
inc
outsl
pop
movsb
push
add
lret
mov
jnp
imul
pushf
sar
xchg
dec
pop
icebp
sbb
mov
loope
push
fsubp
push
inc
enter
adc
js
mov
mov
or
scas
test
pop
sub
subb
jecxz
in
mov
outsl
ret
push
adc
sti
mov
cmc
ja
pop
mov
in
ljmp
xor
test
loope
incb
aaa
mov
sbb
lods
leave
add
mov
or
push
and
fadd
cmp
cwtl
inc
aaa
pop
std
movsl
std
popf
push
ret
dec
cmpsl
ret
icebp
dec
xchg
pushf
dec
cmp
sub
sub
testb
mov
lret
lcall
jmp
loop
inc
mov
push
jp
fldenv
imul
pop
xor
jge
pop
mov
cmp
fadds
mov
aaa
mov
sbb
into
cmc
xor
push
mov
fcomps
int
fisubrs
push
or
inc
mov
mov
movsl
push
sbb
pop
clc
mov
cmp
add
pop
add
adc
loop
cltd
out
dec
jle
dec
sbb
loop
ljmp
movsb
fildll
pop
out
loop
movb
ret
sarl
rorl
adcl
push
and
inc
or
adc
dec
mov
enter
ljmp
sub
cmp
scas
iret
dec
incl
sbbb
out
inc
test
cli
call
sti
iret
sub
push
push
rcl
jg
sarb
scas
out
or
mov
aam
xlat
mov
push
jecxz
lret
mov
fildl
bound
mov
sarl
test
adc
lock
outsl
dec
fidivl
lahf
sbb
xor
jb
push
sbb
shrl
hlt
cld
inc
dec
sbb
cmp
in
loop
popa
and
xchg
xchg
jae
fiaddl
xchg
adc
mov
pop
popf
dec
lds
xor
inc
shrb
pop
and
xchg
jnp
insb
insl
xchg
pusha
aas
adc
xor
shlb
jecxz
je
loope
xor
cmp
xor
jb
imul
xor
mov
int
jle
test
push
sbb
lcall
repnz
es
stos
cli
xchg
dec
scas
movd
lea
jb
out
xor
fnstcw
cmp
cmp
xchg
filds
mov
push
jns
lds
scas
push
iret
sbb
out
lret
mov
test
jl
test
inc
imul
jae
ror
in
adc
jle
xchg
mov
cmp
insl
sar
xor
mov
pop
pop
mov
pusha
int
loope
int3
mov
jnp
push
cld
arpl
ja
push
sub
aam
adc
es
leave
shll
repnz
sbb
lea
jo
mov
aam
into
mov
jg
imul
aas
cmp
fs
dec
add
sub
dec
inc
push
cmp
in
add
dec
push
jmp
mov
fsubs
jle
fidivs
mov
shlb
clc
ljmp
mov
dec
pop
mov
mov
jge
cmp
or
sar
sub
pop
pop
scas
jb
incl
mov
in
pusha
sub
inc
add
ret
sbb
in
icebp
enter
hlt
and
inc
sub
jne
pop
lods
dec
xchg
out
sub
jecxz
arpl
jno
data16
in
cs
shll
daa
cmp
jo
xchg
scas
insl
xor
data16
or
ja
pusha
jnp
or
fmuls
out
in
jecxz
fbstp
lods
and
jne
out
mov
and
rcll
sub
push
dec
inc
mov
fildll
into
lcall
ret
and
or
add
into
xchg
jge
cltd
push
enter
push
les
or
pop
ja
push
or
ficomps
adcb
clc
sbb
mov
lea
jnp
mov
outsl
cmp
jne
mov
xor
ret
sti
mov
or
dec
lahf
sti
jo
movsb
jo
fcmovnu
lods
je
stos
add
sub
sub
hlt
mov
jo
pop
popl
xorb
sbb
shll
rclb
adc
jae
xor
xchg
sub
bound
pop
mov
repnz
mov
int3
adc
push
dec
das
test
cmpsb
ljmp
mov
jge
loop,pt
pop
sub
data16
xor
ja
lods
sti
cmc
jecxz
divb
lods
out
in
jecxz
inc
sub
scas
movsl
clc
divb
sar
aam
push
shl
or
insl
sbb
jne
push
mov
mov
mov
dec
sti
cmpsl
lock
loope
fldt
ja
mov
pop
inc
push
or
insl
in
cmc
cmpps
subb
icebp
movsb
mov
nop
push
sti
adcb
mov
sahf
in
and
test
lock
sub
mov
jp
cmpsl
ja
mov
dec
ret
std
mov
arpl
push
mov
fldt
mov
push
test
xchg
jne
inc
and
int
xorb
jae
in
jns
mov
pop
imul
int
dec
xchg
jae
ja
xor
shll
xor
push
push
or
test
fucomp
notl
push
xor
stos
loope
mov
icebp
dec
popf
fisubrs
daa
es
push
xchg
jnp
jae
es
pop
pushf
xor
or
push
dec
add
ficomps
test
popl
xor
xor
movsb
jno
add
jl
cld
es
push
imul
lods
sbb
sub
inc
addr16
ljmp
and
jp
mov
bound
mov
fwait
ret
data16
fcompl
jae
mulb
pop
pop
scas
or
mov
sub
pop
popa
fdivs
push
hlt
shll
mov
sbb
js
mov
push
add
int3
jg
sbb
int3
jle
or
test
push
xlat
testl
out
jno
pop
jl
ja
sbb
sti
push
imul
shll
ret
jne
lods
sub
sbb
cmp
sbb
shll
daa
test
jle
in
lea
mov
adc
lea
and
push
mov
mov
in
push
rcl
mov
lcall
pushf
fidivrs
inc
enter
outsb
push
pop
out
std
lods
lahf
repnz
pop
cs
dec
rcll
lods
mov
jne
pushf
pusha
mov
push
dec
orl
or
ja
xchg
or
or
shll
ljmpw
mov
sahf
int
push
loopne
movsl
mov
ljmp
clc
push
inc
xor
sbb
outsb
jo
hlt
dec
mov
scas
fimull
mov
pop
jecxz
xchg
popf
sub
fidivrl
shl
adc
xchg
ficompl
pavgw
or
sbb
icebp
xor
xchg
movsbl
movb
fdivs
mov
fidivrl
cmp
mov
ret
ret
mov
inc
mov
nop
outsl
jno
lock
mov
push
mul
mov
xchg
int3
push
pop
and
ljmp
fstpl
sbb
or
movups
pop
pop
cltd
out
jno
outsl
pop
inc
ret
add
and
pop
pushf
push
push
lea
pop
pop
mov
outsb
in
or
cmp
mov
push
mov
std
ret
xabort
jge
mov
mov
sub
lret
sbb
sub
sar
lods
adc
outsl
jecxz
enter
push
push
rorb
bnd
xchg
into
or
mov
fstl
lahf
js
cltd
testb
fcmovne
cli
push
les
in
mov
xchg
dec
add
ss
lock
jp
repz
sarb
sar
int3
jb
sbb
xchg
data16
mov
push
cmp
mov
xchg
dec
and
mov
jmp
dec
pop
mov
mov
pop
xchg
cli
jg
insl
fwait
ret
pop
lret
push
js
pusha
aad
add
in
aaa
negb
mov
mov
rcr
pop
pop
jo
and
xchg
push
xlat
repnz
add
jl
pop
arpl
adc
in
push
or
add
xchg
sbb
por
mov
adc
andl
pop
ja
lahf
pop
jae
jg
pop
xlat
push
into
jns
push
es
add
into
das
cmp
out
orb
lock
sarb
xchg
repz
out
mov
insl
push
hlt
fsts
rorb
push
ret
adc
inc
rcrb
sub
jle
sub
sbb
jg
scas
adc
test
mov
push
mov
jb
incb
or
and
mov
loop
loopne
and
or
mov
xchg
movsl
ljmp
popa
push
cmpsl
outsb
jmp
push
stc
les
in
into
push
loope
aam
bound
pop
popf
push
dec
sbb
or
cmp
jecxz
jle
popf
pop
cmpsb
arpl
movsb
enter
mov
rcrb
frstor
shll
insl
or
sbb
and
xchg
daa
popf
shrl
ret
fstpt
lods
mov
lods
in
mov
pushf
ret
push
sub
out
add
sbbl
shll
test
idivl
fwait
imul
shll
jle
add
movsl
or
jle
sub
xor
lret
and
mov
stc
data16
xchg
arpl
cmpsl
stos
fdivrp
jmp
hlt
js
fsubs
or
or
mov
addr16
adc
add
fnstsw
xchg
popf
pop
cmpsb
sub
and
xor
mov
sarl
aad
mov
and
loopne
ljmp
xor
fldcw
jbe,pn
cmp
xor
xchg
ja
sub
scas
inc
in
ljmp
inc
mov
add
jle
sbb
das
dec
xchg
jecxz
test
sub
loopne
sub
add
mov
and
cli
adc
cmp
or
mov
xor
pop
pop
cmp
dec
iret
mov
xchg
loopne
shl
popf
cmp
mov
and
mov
xchg
fisubrl
aaa
xchg
sbb
jp
sub
ljmp
mov
sub
or
shrl
lret
gs
test
inc
ljmp
fstpt
jecxz
sahf
clc
jno
out
cmpsl
daa
inc
into
jl
mov
in
push
mov
cmc
push
pop
iret
negl
pop
jmp
ljmp
negb
scas
iret
jb
icebp
push
scas
and
add
push
fdivrl
or
fldcw
xor
fidivs
or
adc
inc
mov
cmp
rcl
and
sar
mov
sbb
jl
notl
dec
lods
sub
sub
xchg
cmp
test
jmp
iret
mull
fstpl
mov
sbbb
ljmp
addr16
adc
or
or
sbb
jb
mov
test
ljmp
int
outsl
mov
jne
pop
fwait
pop
adc
cmp
in
add
or
leave
mov
filds
outsl
loop
arpl
lods
pop
leave
inc
lods
pop
das
mov
add
jo
iret
cmpl
dec
fwait
es
sbb
mov
sbb
aas
lcall
out
xlat
outsl
aaa
dec
ret
mov
lcall
or
mov
mov
fldl
pop
ljmp
pop
pusha
mov
jno
xor
dec
xor
movsl
comiss
xor
je
fdivrs
lret
fcomps
pop
sti
or
inc
pop
leave
outsl
insl
jne
add
jne
pushf
xchg
cmp
out
jmp
xchg
pop
jle
imul
bnd
icebp
dec
loope
jp
popf
inc
js
mov
mov
cmpsl
out
imul
or
das
and
lret
pop
cmp
jmp
and
mov
popa
push
imul
xchg
lock
jecxz
add
or
stos
or
sub
dec
in
sahf
bound
cmpsl
jg
lret
cmp
lds
mov
jns
mov
push
aaa
inc
icebp
pop
iret
pushf
mov
jmp
jbe
pushl
sub
xor
lret
adc
adc
push
repnz
mov
sbb
sbb
push
inc
scas
or
xchg
or
repnz
movsl
cmp
rcrl
adc
movsb
repnz
loope
jnp
stos
inc
das
das
sub
mov
or
cltd
jge
sub
sbbl
out
sub
pop
jo
icebp
scas
jecxz
ds
push
pop
int3
xchg
cmpsl
mov
ja
dec
xlat
or
notl
ljmp
mov
xchg
fs
cltd
mov
mov
sub
shlb
iret
scas
cmp
push
dec
mov
lods
in
les
mov
out
shll
hlt
sahf
pop
es
and
jge
jg
dec
lret
les
add
notb
sub
repnz
inc
loopne
jo
dec
rcll
and
jmp
test
xor
sbb
sub
pop
add
jmp
xchg
out
insl
adc
cltd
and
inc
lret
mov
fcoml
repnz
fucomi
outsl
inc
cwtl
pushf
push
mov
mov
mov
xchg
dec
shrl
shl
xor
or
addl
push
ret
test
test
xchg
dec
sbb
push
mov
leave
mov
ja
push
or
clc
les
or
out
jmp
stc
push
gs
lods
xlat
mov
popa
pop
insb
jo
jg
ljmp
leave
mov
dec
sub
lock
ficomps
lret
loop
mov
pop
aas
loope
fcmovne
fmull
push
mov
inc
jg
jae
push
or
mov
or
nop
cmp
xor
imul
xor
jae
mov
lahf
push
push
mov
inc
out
lea
dec
mov
test
shll
loope
dec
out
iret
out
cmp
mov
pop
cmc
xorl
mov
outsl
daa
das
mov
inc
imul
xorl
push
push
jg
outsb
popf
mov
xor
mov
into
popf
mov
inc
xor
int
jg
iret
or
xchg
ret
sbb
dec
fisubrs
or
iret
fidivl
lahf
inc
jecxz
dec
and
or
inc
sahf
popa
in
push
mov
fsubl
ja
xchg
jmp
cmpsl
xchg
lret
cmp
pop
loopne
jbe
fisubs
sub
into
out
mov
cwtl
mov
jbe
negl
fwait
lcall
ss
mov
adc
sbb
popa
loop
cmc
mov
cmpsl
pusha
shl
lcall
loope
cmp
mov
mov
out
js
call
rcl
dec
pop
rcl
jg
push
mov
sbb
cmp
out
sub
jmp
jecxz
out
mov
xor
iret
push
imul
lock
sbb
adc
jle
pop
cwtl
or
pop
push
pop
jmp
pushl
mov
xchg
jno
mulb
xor
out
out
sub
jle
ljmp
sbb
data16
mov
hlt
mov
dec
test
aaa
pop
daa
mov
or
push
arpl
outsl
sub
cltd
rorl
imul
out
jmp
push
dec
lea
inc
into
dec
sbb
out
or
ljmp
inc
xor
test
les
pop
pusha
push
adc
jecxz
mov
cmp
repnz
mov
cmp
les
jmp
into
clc
hlt
sub
pushf
cli
shll
test
fadd
js
loop
push
insl
scas
sti
imul
mov
add
inc
bound
out
mov
frstor
insb
or
push
cmc
gs
sub
xchg
xchg
out
add
scas
in
fwait
jo
hlt
mov
repnz
ljmp
sub
call
lahf
rcrb
mov
mov
push
inc
popa
cmp
inc
xor
mov
std
shll
in
leave
cli
repnz
out
inc
scas
mov
jo
push
in
ds
lock
out
mov
out
in
aaa
mov
outsb
enter
push
mov
sub
adc
cmpsl
ret
stos
dec
pushf
scas
cmp
or
movsl
repnz
negl
mov
ja
cbtw
cmp
popa
and
cmp
repnz
popa
mov
mov
dec
jo
out
iret
lahf
sbb
mov
lods
xor
clc
std
jno
jg
pop
lods
pop
ret
rcrb
scas
scas
pop
dec
push
imul
fistpll
loope
dec
push
into
jmp
sahf
adc
or
push
addr16
repnz
std
inc
mov
xchg
in
pop
mov
pushf
xchg
sub
jns
imul
fbstp
or
ja
pushl
push
push
jne
mov
out
xor
out
andb
ljmpw
cmpsl
cmc
std
iret
pop
sbbb
xchg
nop
mov
adcl
cli
cmpsl
outsl
stos
mov
fstps
jno
add
gs
push
mov
mov
jmp
fmuls
lods
fbstp
pop
mov
mov
fcmovnb
mov
cs
mov
sbb
call
cmp
or
addr16
push
pop
cmp
sub
ljmp
lods
push
push
cs
fdivrl
mov
movsb
cmp
or
xchg
inc
xlat
lods
dec
cmc
daa
fidivs
pop
inc
xchg
ss
and
or
rcrl
fcompl
xchg
outsb
sti
loope
sub
movsb
mov
jmp
filds
icebp
mov
sbb
xor
mov
or
imul
mov
sub
sbb
insl
test
push
stos
stos
pop
repnz
lock
inc
outsl
enter
roll
es
nop
cld
pusha
repnz
sti
fucomi
out
push
clc
push
xor
mov
ja
push
icebp
sub
xor
add
fmuls
setnp
lods
xlat
xchg
push
xchg
push
pop
sahf
sar
sbb
pusha
neg
ja
mov
mov
mov
add
inc
aas
jnp
cwtl
lods
sub
adc
adc
out
push
or
add
mov
mov
sti
push
xchg
xor
negl
xor
cmp
leave
cwtl
sub
insb
lods
iret
jecxz
inc
push
push
sub
cmp
mov
loope
jno
in
push
lods
push
movntps
mov
mov
insl
mov
sub
ret
sbbb
out
add
sbb
into
mov
outsl
mov
mov
and
adc
test
cwtl
dec
jae
sub
cmp
sbb
mov
or
dec
in
lock
add
xor
lcall
jmp
add
inc
lret
jl
dec
or
pop
or
mov
je
adc
mov
jecxz
sub
xor
or
inc
out
movsb
mov
push
lea
ss
out
adc
push
mov
add
test
icebp
scas
fwait
push
mov
pop
adc
outsb
add
push
and
into
pop
repnz
dec
mov
loopne
xchg
js
loop
scas
jge
or
notb
push
push
mov
loop
jno
movsl
dec
jge
out
or
pop
push
clc
in
or
loope
sub
or
test
out
test
dec
adc
ret
icebp
ljmp
mov
popf
bound
sbb
addr16
sarb
in
scas
cld
pop
mov
ret
rol
and
into
pop
xor
test
outsb
mov
jo
pop
mov
cs
insb
subl
gs
jecxz
xor
lock
xor
shl
jno
addr16
push
in
test
mov
data16
arpl
jae
mov
pop
and
into
pop
push
cmovb
ret
shll
adc
test
mov
sbb
mov
sbb
mov
sub
mov
pop
lret
loope
imul
lcall
cmc
rcrb
popa
cmp
mov
xor
xchg
in
call
ror
jns
sub
sub
mov
icebp
repnz
scas
loop
data16
fs
lods
lods
ret
rcrb
lods
clc
imul
fldcw
lock
xor
pop
popf
test
ja
sbb
push
adc
jo
mov
in
bound
ret
push
add
insb
jb
leave
sbb
lcall
xor
insb
or
push
je
fyl2x
rcrb
pop
nop
out
jae
scas
out
mov
xor
ret
inc
fdivrs
enter
jne
je
xorl
movsl
stos
in
lods
sub
dec
sbb
jne
xchg
mov
jecxz
iret
int3
shlb
xchg
shr
pushf
xchg
out
mov
mov
fists
jne
aam
movsb
insb
addb
mov
imul
push
mov
push
out
mov
repnz
lds
stos
xchg
push
divl
ljmp
rcrl
mov
data16
mov
adc
enter
je
and
cli
xlat
sub
and
call
fbld
jo
data16
insl
sub
push
outsl
pop
ljmp
repz
imul
js
push
and
push
out
test
lahf
push
cli
jne
pop
push
pop
xlat
lock
outsb
jecxz
outsl
out
into
ljmp
repnz
adc
push
or
pop
adc
je
mov
or
dec
roll
rorl
pop
lret
dec
mov
jecxz
sbb
outsb
push
or
push
outsl
cltd
jnp
and
cld
ret
imul
bnd
push
fistl
loope
sahf
popf
push
rcrl
ss
push
mov
pop
mov
cmp
lret
mov
test
daa
jns
ss
mov
imul
divb
push
stos
fcmovu
inc
out
out
inc
cmpsl
out
mov
pop
movsb
pop
iret
hlt
outsb
fimuls
inc
jmp
and
xor
push
int3
pop
and
jecxz
push
xor
sbb
mov
mov
movsl
mov
push
ja
adc
js
stos
out
cmc
xor
scas
jecxz
out
jo
mov
dec
and
hlt
popfw
arpl
out
mov
imul
sahf
push
sub
lret
out
add
lods
out
popf
or
mov
push
loope
icebp
nop
scas
iret
or
repnz
xchg
fnstenv
das
jmp
fisubl
push
scas
rorb
stos
jecxz
fcomps
popf
add
cmpsl
xchg
insb
stos
loop
push
mov
dec
cltd
stos
xchg
cwtl
lret
jg
fsubrs
jae
mov
sbb
mov
arpl
out
popf
leave
push
data16
inc
jmp
ljmp
insl
add
or
gs
adc
push
sahf
out
mov
mov
ljmp
cwtl
xlat
cmp
sbbl
gs
cmp
push
out
pop
fldt
sbb
shrl
ret
jle
cmpsl
push
fisubrl
push
dec
rcrb
pop
sbb
jge
sbb
xchg
popf
add
xchg
and
fistps
ficoml
fsubs
jnp
xchg
adc
mov
shl
loopne
scas
cld
mov
addb
int3
out
fdivrs
movsb
jb,pn
xor
push
fnstsw
xor
and
sti
mov
push
in
je
xor
loop
mov
pushf
or
roll
sbb
sbb
jmp
arpl
jg
leave
aad
push
push
aam
and
mov
scas
or
lods
cmc
int3
ret
cld
repnz
push
inc
dec
cwtl
mov
sub
sahf
sysenter
into
divl
inc
jmp
lods
mov
imul
out
icebp
jo
iret
jb
jae
mov
push
lea
jge
dec
push
rolb
fidivrs
std
push
jbe
mov
mov
jmp
lock
stos
jo
scas
push
mov
dec
rcll
xor
pusha
jg
fldl
lcall
fdivr
mov
jg
xor
pop
lods
jle
inc
je
inc
mov
mov
pusha
ret
movsb
xchg
test
lock
mov
jmp
pop
pop
mov
pmaxsw
icebp
repnz
stos
xor
inc
lahf
jecxz
outsl
lds
sti
call
mov
adc
js
push
pop
in
adc
ljmp
fwait
lret
cmp
mov
ret
xchg
sbb
cmp
push
lock
mov
sbb
ja
test
shll
sub
mov
pop
sbb
shl
jae
jo
nop
stos
mov
test
mov
scas
adc
push
jecxz
pop
mov
or
mov
cmpsb
fistps
out
mov
cmp
stos
outsb
js
or
imul
hlt
into
imul
pop
fwait
pop
mov
mov
rcll
stos
lahf
outsl
mov
sbb
lret
jae
outsl
lret
jmp
mov
int
cltd
nop
or
ror
add
jae
out
mov
aad
out
fcomp
mov
out
mov
fbld
jg
xor
stos
push
maskmovq
xchg
push
sti
sub
xchg
dec
pushf
sub
jecxz
cmpsl
xchg
jne
ss
fildll
push
pop
pop
mov
mov
inc
hlt
xchg
lods
ljmp
mov
or
lds
pop
lods
pop
or
adc
cmpsb
outsl
pop
sbb
push
out
cld
jb
jae
sarl
mov
ljmp
inc
push
sub
or
loop
lcall
jne
push
or
push
pusha
mov
sub
repz
clc
xchg
jle
or
xor
cwtl
adc
outsb
and
push
sbb
roll
xchg
inc
jg
and
xor
leave
mov
movsl
repz
xchg
lods
push
or
rorl
add
std
add
and
xor
mov
fcmovnb
shrb
arpl
pop
dec
push
dec
push
push
jle
imul
mov
mov
fdivl
fisubrs
jo
mov
nop
lods
mov
sti
mov
dec
inc
jae
in
sbb
lcall
xor
inc
scas
pop
insl
and
push
lock
mov
call
pusha
aam
ret
jae
imul
cmp
mov
icebp
fcomip
outsl
xor
ds
ret
xchg
fiaddl
lahf
mov
std
into
out
push
pushf
and
icebp
push
sahf
insb
or
jmp
xchg
das
cwtl
shrb
in
stc
in
addr16
sbb
stc
push
repz
add
and
stos
imul
pusha
mov
and
shll
adc
ds
test
jb
mov
stc
jb
adc
xchg
or
out
xchg
xchg
int3
push
push
enter
xor
mov
sbb
dec
push
mov
sahf
ret
cmp
in
mov
fmuls
iret
cs
jmp
shrl
jecxz
xor
push
out
xlat
popf
jno
leave
jg
cld
sub
or
sub
push
jae
sahf
outsw
fsubrs
mov
jo
xor
inc
xor
fbstp
push
into
loopne
or
sarl
stos
mov
out
mov
dec
fidivl
push
lret
xor
cmc
in
jo
aam
mov
out
xor
inc
insl
stc
mov
pop
sub
je
xor
arpl
push
and
inc
adc
sbb
xchg
or
cmp
mov
and
dec
sub
popf
jnp
and
push
mov
and
xchg
cltd
or
mov
jle
mov
or
pop
lret
add
out
and
fwait
js
mov
in
mov
push
add
or
jge
imul
aas
outsb
mov
xlat
and
popf
jmp
push
xchg
cmp
push
in
stos
jg
mov
loope
das
in
mov
mov
fstpt
andl
jb
push
mov
loope
ljmp
mov
stos
jbe
sahf
rclb
sub
das
ljmp
or
jmp
fistl
xchg
testl
push
aaa
test
mov
in
addl
xor
sti
inc
pop
js
arpl
rcrb
loope
icebp
xor
sub
ja
cltd
packuswb
cmpl
ljmp
mov
imul
shll
cmp
cmp
push
cmp
icebp
lcall
ja
inc
out
hlt
sbb
scas
sub
movsl
dec
jnp
sbb
mov
sbb
popf
pop
pop
imul
jne
mov
lcall
mov
sbb
mov
sarl
jns
shrb
ja
add
pushf
or
xchg
andl
fbstp
adc
dec
inc
xor
inc
lock
dec
lds
mov
pop
ljmp
push
mov
out
jg
and
imul
push
bound
xchg
pop
inc
jbe
jmp
lahf
xchg
cmp
sti
cmpsl
mov
xor
aam
mov
aaa
mov
adc
iret
push
in
rclb
test
or
mov
pop
imulb
and
fidivrl
loope
xchg
shll
add
data16
insb
ljmp
out
xor
dec
mov
mov
xchg
ficompl
ss
pop
fsubl
popa
adc
iret
xchg
pop
jmp
std
out
popf
mov
cmp
jg
sub
fnstcw
mov
mov
imul
or
pop
aam
push
xchg
push
insl
int
aad
lods
mov
movsb
out
and
fnstcw
bnd
out
loop
xor
mov
leave
addl
add
sub
test
dec
or
jp
lock
out
xor
imul
sub
add
out
mov
jle
lods
or
xchg
or
loope
jg
mov
pop
scas
hlt
cmp
pop
pop
add
sbbl
ss
push
xchg
daa
sbb
adc
and
sar
scas
sbb
mov
xor
js
add
xor
sub
jmp
inc
mov
adc
lds
add
fdivrs
in
adc
out
pop
xor
call
xchg
lds
into
das
push
outsl
sti
addr16
jmp
mov
jge
addr16
jecxz
movsb
mov
jmp
jae
repnz
stos
push
insl
mov
pushf
mov
jbe
jo
fwait
pop
mov
cmc
out
mov
add
aad
pop
pop
xchg
loope
mov
sub
mov
jecxz
sub
xchg
or
pop
adc
sbb
scas
or
test
stos
into
add
lcall
icebp
lock
add
and
das
ljmp
pop
ss
stos
pop
cmpsb
push
or
out
enter
inc
loopne
xchg
fisttps
je
in
jl
jo
inc
dec
mov
into
ret
testb
mov
fcomp
push
shl
div
int
sbb
fsubrs
or
jg
out
cmc
cmp
push
pminsw
mov
add
jno
mov
mov
jno
jmp
push
pop
rcll
jbe
subl
call
stos
cld
cs
loope
mov
into
mov
shrl
push
xor
push
cmpsb
mov
clc
jecxz
inc
in
cmp
popf
push
jg
or
push
in
rclb
fstl
cld
std
and
test
add
dec
cmp
js
xchg
push
fidivs
cmp
imul
push
xor
push
addr16
sub
stc
shl
cmc
out
jmp
sbb
out
lea
mov
addb
xchg
pop
subb
fstl
shlb
mov
cmp
push
test
inc
orl
pushf
outsl
mov
xlat
pushf
add
popa
das
or
into
push
sbb
test
movsb
jno
and
mov
mov
push
dec
mov
repnz
or
sbb
call
xchg
sbb
jae
lods
rcr
faddp
mov
mov
dec
ffreep
icebp
xor
sarl
lea
bound
mov
out
mov
nop
mov
cmpsb
mov
mov
mov
icebp
int
inc
fstps
jmp
mov
push
jecxz
jmp
mov
rol
mov
jmp
fistpll
xor
sahf
mov
daa
scas
dec
addr16
scas
push
enter
shlb
cmpsl
inc
orl
xchg
repnz
imul
sub
loope
stc
ret
leave
cld
insl
rcll
notb
int
jmp
loope
mov
idivl
into
mov
mov
or
sbb
push
xchg
mov
add
loop
ljmp
clc
aam
popf
xchg
imul
dec
scas
or
mov
and
test
popa
mov
ficoml
icebp
pop
mov
jb
mov
pop
adc
insl
test
lret
out
jmp
push
fstps
inc
cmp
aaa
sbb
adc
repnz
or
mov
outsl
mov
mov
mov
mov
loop
adc
xchg
add
fdivrl
pop
in
repnz
mov
shll
sub
jae
out
adc
sbb
cs
mov
popf
fwait
mov
outsb
jecxz
and
inc
xor
mov
push
cmpl
cmp
inc
push
pop
cmp
enter
ja
mov
adc
mov
fdivp
xor
movq
mov
arpl
loop
rcrb
loope
jecxz
jmp
xor
outsb
lret
mov
xchg
cltd
xor
mov
popa
mov
mov
or
xchg
cmp
xchg
pusha
lods
popf
mov
frstor
js
movsb
cmp
ret
sbb
addr16
ss
xchg
sub
lret
test
shlb
push
pushf
outsl
mov
mov
stos
cs
xchg
cmp
repnz
ds
pop
stos
sahf
call
jns
pop
subb
cmc
call
jne
or
xlat
scas
or
xchg
in
push
enter
mov
mov
pushf
and
in
in
mov
jno
rclb
jg
mov
and
pop
adc
jb
cld
ja
into
ret
push
sub
loop
sub
inc
scas
cmp
and
rorl
ret
repnz
leave
fisttpll
add
imul
shl
pop
sub
sbb
rol
sti
in
jmp
and
fsubp
fisttpll
jb
or
or
push
pop
iret
adc
sub
inc
sub
or
ss
cs
negl
cmovo
int3
aaa
mov
and
cmp
inc
dec
loope
ja
xlat
xor
and
imul
scas
push
pop
pop
out
shlb
mov
test
jns
cli
adc
imul
or
xchg
jp
std
insl
ds
add
adc
dec
fucomi
sbb
lret
andb
mov
insl
testb
out
jg
cmp
jge
movsl
in
or
sub
inc
jp
mov
pop
insl
mov
lock
ja
mov
jmp
xorl
ret
mov
out
xchg
aad
push
fimuls
rol
xor
int3
test
dec
jns
mov
loop
js
pop
inc
push
jp
mov
loop
popf
mov
movsl
scas
out
mov
popa
test
sarl
stos
xor
sahf
inc
clc
in
mov
pop
ja
push
sub
push
scas
hlt
int3
popf
lcall
xor
loop
and
or
or
or
scas
icebp
mov
sbb
out
add
movsl
in
sub
iret
cwtl
cmp
insl
mov
subl
xor
sub
ljmp
movsb
jb
in
push
cmpsb
lret
cmp
outsl
fiaddl
mov
insb
mov
xor
andl
mov
jmp
sbb
repnz
jecxz
les
dec
popf
cmc
jmp
pushf
cmpl
lret
ss
push
js
add
aaa
mov
sahf
and
das
loopne
dec
jmp
outsb
push
and
int3
popa
fwait
orl
stos
fimuls
xor
imul
out
addr16
pop
or
cmp
in
loope
cmpsl
iret
mov
stos
bnd
movswl
mov
das
or
daa
pop
push
mov
or
pop
sub
mov
mov
mov
call
fnstenv
stos
insl
ljmp
pop
fisttpll
sar
out
fistpll
and
sbb
loopne
aam
xor
mov
mov
mov
ljmp
shlb
lods
jmp
jl
in
das
mov
out
push
enter
mov
pop
mov
scas
mov
pop
addr16
sbb
sub
clc
fmuls
mov
xlat
test
sub
lret
and
xchg
cmp
nop
outsl
mov
jmp
sbb
or
ljmp
out
shrl
imul
lea
stos
neg
sub
or
pusha
sti
imul
js
jae
jle
repnz
out
mov
or
aam
shrl
rorl
push
movsb
lret
push
ret
add
jle
popa
out
das
movsl
jns
fstpt
or
sub
xchg
or
add
mov
sub
shl
sahf
rorl
mov
pop
fstl
popfw
test
or
jb
and
jp
clc
mov
ret
rolb
push
jecxz
das
cld
repnz
cltd
cmpsb
push
dec
push
fildll
mov
std
out
cmpsl
cmc
xchg
jbe
jle
cmpsb
jmp
repnz
hlt
sub
cmp
dec
aas
repz
mov
jnp
aas
test
in
push
outsb
mov
jno
out
lods
inc
mov
ljmp
dec
enter
mov
pop
rolb
leave
aas
in
enter
sub
or
hlt
pop
dec
mov
mov
push
add
scas
mov
leave
xor
loope
lret
inc
fildl
jno
insl
sbb
jae
lret
std
in
fadd
mov
sbb
jne
mov
or
rcr
lret
jmp
sub
pusha
dec
je
xor
pop
movsl
mov
jne
pop
sbb
shlb
jb
imul
leave
jle
jae
scas
jmp
imul
icebp
out
xchg
fdivs
js
imul
sub
xor
inc
and
loopne
jmp
mov
or
aas
and
ljmp
jae
sbb
sub
jno
arpl
fs
jns
fiaddl
out
dec
vphsubbw
dec
fs
cmp
push
push
dec
shlb
or
sbb
cmp
mov
xor
test
xchg
call
mov
test
inc
mov
cmpsb
sub
out
loopne
imul
lods
stos
popf
fmull
jecxz
mov
add
jmp
fstl
int3
shrl
mov
pusha
xlat
xchg
scas
or
adcb
mov
int3
dec
mov
jnp
arpl
mov
pop
mov
dec
gs
mov
out
jge
cmp
mov
jno
ljmp
cmp
arpl
push
jae
sbb
adc
jmp
mov
xchg
dec
lahf
mov
inc
sti
jb
xor
or
aas
jmp
imul
pop
mov
or
scas
xor
xchg
pop
dec
movsl
mov
lret
cmp
cld
cld
cmp
or
mov
jb
int
jmp
shll
xchg
sahf
mov
pop
nop
mov
cli
adc
loopne
out
in
sbb
loope
cmp
lods
scas
or
call
sti
inc
push
out
icebp
scas
inc
adc
ret
repz
add
sbb
out
shl
add
dec
outsl
jle
sarl
jmp
imul
cwtl
mov
mov
fisttps
stos
data16
mov
testb
mov
fildll
jbe
daa
leave
stos
sub
sti
aad
or
bound
mov
test
mov
or
outsb
rcrl
scas
inc
int
call
loop
imul
mov
push
or
ljmp
xchg
inc
lret
addl
jae
mov
xchg
int3
push
loope
rol
add
jae
loop
ret
fisubl
out
pop
loop
sub
shll
rorl
cmp
sub
out
in
test
stos
cmpsl
pusha
mov
mov
ljmp
daa
ret
ljmp
pop
pop
jp
mov
ret
clc
dec
mov
in
lret
ljmp
mov
and
jnp
pop
pop
dec
jecxz
aas
shlb
mov
mov
out
push
jae
pop
lret
push
loope
iret
cmpsl
sahf
add
daa
jp
sbb
ljmp
test
mov
test
add
xchg
movsl
add
xor
out
fcoms
sub
sahf
icebp
lods
fildll
sub
sub
cwtl
lock
popf
xor
shr
stos
jecxz
pop
in
lods
clc
fwait
add
loop
test
push
mov
repnz
mov
mov
ja
sarb
incb
sub
pop
mov
lret
fdivrl
push
and
adc
xchg
push
popf
adc
sub
pop
stos
cmp
mov
mov
daa
popf
rcl
xchg
out
mov
js
popa
mov
mov
jae
push
je
pop
jb
inc
pop
inc
xchg
cltd
mov
out
mov
idivl
xor
jle
push
jp
dec
and
test
test
mov
dec
jg
fwait
jns
push
lds
cmp
inc
out
imul
sub
xchg
xor
iret
push
and
clc
shll
arpl
out
jo
jbe
jns
das
or
lret
arpl
sbb
scas
mov
adc
arpl
pop
mov
push
jbe
mov
subb
or
out
arpl
test
insl
push
scas
pop
lods
stos
dec
jecxz
imul
insl
mov
and
mov
call
or
dec
push
pop
cmp
popf
lds
adc
mov
jo
and
outsl
test
out
cmpsl
iret
filds
enter
aad
rcll
and
sbb
mov
mov
adc
insl
push
in
pop
stc
jne
arpl
std
and
cmp
ljmp
mov
out
pop
cld
hlt
or
push
push
xchg
popf
enter
xchg
call
mov
mov
and
mov
pushf
popf
scas
into
jmp
xor
mov
cltd
push
push
lods
xchg
fists
mov
mov
xchg
or
fstpt
jns
xchg
ss
xor
loope
fdiv
loopne
outsl
jmp
sub
in
push
jne
xchg
jp
dec
fwait
ucomiss
pushf
xor
clc
test
cld
fwait
data16
stos
xlat
popf
in
sub
push
sbb
dec
test
sub
xchg
cli
push
mov
add
mov
jecxz
inc
jecxz
mov
imul
xchg
jb
sub
adc
xchg
cmp
add
add
inc
add
jae
imul
cmpsb
ret
and
jae
outsl
push
test
idivb
mov
out
mov
repz
enter
loope
std
or
scas
out
cmc
xchg
xchg
xor
xor
ljmp
add
movsl
inc
movsl
jae
lods
shl
push
loopne
jecxz
out
xchg
int3
enter
sti
push
push
cld
jmp
cmpsl
mov
dec
cs
icebp
push
lock
out
out
jmp
xorl
aaa
clc
pop
add
add
inc
outsl
jecxz
cwtl
ror
push
lcall
sub
ret
push
movsb
std
inc
mov
push
xchg
pop
test
cmc
xchg
mov
clc
data16
adc
ljmp
xchg
jg
mov
or
sub
xor
int
push
stos
jmp
pop
dec
cmpsl
js
or
movsl
out
shll
or
mov
jo
jne
sti
nop
xor
sub
arpl
sbb
adc
mov
pop
ficoms
addr16
mov
iret
jb
lock
adc
ja
xor
stc
clc
fwait
dec
stc
xchg
idivb
or
and
aas
mov
xchg
or
cmpsb
jecxz
cltd
mov
jb
mov
xor
pop
cmp
ret
shrl
pop
ljmp
scas
in
jmp
inc
std
xchg
pusha
xor
imul
es
mov
sbb
shl
mov
aas
jnp
ljmp
mov
jp
jmp
and
lods
push
push
or
cwtl
xchg
dec
adc
xchg
pop
lret
mov
cltd
mov
test
outsb
or
inc
add
jl
xchg
cmp
mov
jae
lods
rorl
xchg
inc
movsb
scas
mov
cli
and
mov
enterw
push
push
push
pop
sbb
jns
sti
shrb
cmp
mov
xor
dec
or
cmp
mov
lret
mov
push
je
dec
jo
fdiv
jg
push
dec
popa
mov
inc
std
xor
mov
mov
mov
jg
and
lahf
out
mov
mov
xor
adc
mov
jo
cmpw
pop
jmp
loop
dec
lock
int
scas
cltd
or
pop
cmp
mov
adc
pusha
inc
sbb
mov
hlt
pop
pop
jnp
iret
aad
jg
adc
stc
jecxz
sbb
insl
sub
jae
fistl
clc
scas
outsb
mov
jecxz
push
loopne
xor
imul
adc
pusha
sbb
xor
nop
rol
test
dec
mov
out
or
mov
imul
pop
ror
fwait
sub
stc
mov
or
inc
pop
cmc
out
pop
mov
mov
loop
ja
dec
insb
adc
bound
xor
rolb
data16
fldt
imull
aad
fnstcw
jbe
int
add
pop
mov
mov
ret
jnp
mov
out
movsw
mov
ret
into
pop
out
push
push
loope
or
mov
add
cmp
pusha
mov
push
aas
dec
fdivrl
cltd
add
imul
sbb
imul
xor
call
fdivl
push
pop
lcall
xchg
les
push
test
xchg
push
fidivs
or
cmpsb
jl
mov
push
mov
dec
mov
into
jns
roll
or
push
add
hlt
arpl
stos
or
sub
mov
lods
int3
dec
jle
mov
and
cmp
pop
pop
arpl
in
mov
bnd
mov
pushf
mov
lcall
fisttpl
jl
and
in
fstpt
sahf
push
mov
xchg
pop
fiaddl
cmp
jb
or
je
movsl
mov
dec
mov
leave
and
fistpll
das
mov
rcrl
int3
pushf
xor
xchg
leavew
jle
enter
push
add
mov
mov
mov
jle
pop
xor
out
loope
sarl
les
fcmovnbe
adc
mov
push
js
loope
push
mov
or
ret
xlat
loop
push
mov
scas
arpl
push
aad
mov
outsl
mov
int3
jecxz
sbb
adc
je
fdiv
movsl
add
adc
rorb
adc
cmpl
inc
lods
rcrl
mov
push
inc
cmpb
pop
scas
pop
test
out
jmp
pop
push
imul
fistpl
add
xchg
shll
mov
test
lock
ljmp
loop
ljmp
sbb
ljmp
cmpsl
in
rcl
das
ljmp
pop
ljmp
shl
ljmp
loop
xchg
ljmp
jae
sub
ljmp
shll
stos
nop
outsb
ljmp
cmp
in
out
xchg
adc
fucomp
shl
mov
fiaddl
shrl
ljmp
sahf
call
out
icebp
mov
ljmp
loope
iret
push
mov
sbb
pop
ljmp
cmp
shrl
aaa
ljmp
xchg
shll
pop
adc
in
daa
ret
xor
push
mov
scas
push
dec
push
iret
mov
cs
jge
jae
imul
test
dec
and
jp
lcall
das
mov
fwait
push
in
daa
ljmp
test
roll
ljmp
pusha
jno
hlt
cmc
sbb
lret
jae
std
jmp
adc
cmp
imul
mov
or
add
xor
push
xor
test
mov
into
jg
lods
pop
jecxz
jmp
lods
in
mov
stos
sub
jle
jae
jl
jecxz
inc
inc
sbb
enter
addr16
jge
jmp
mov
les
jecxz
lock
or
ljmp
pop
jp
mov
fwait
bound
jecxz
out
xchg
pop
mov
push
repnz
rcrb
xchg
pop
ljmp
icebp
xchg
adc
stos
sti
dec
mov
or
es
or
push
sub
sub
clc
stos
je
hlt
pop
daa
ljmp
lahf
cmp
sub
int
lods
pop
inc
ljmp
rclb
or
ljmp
gs
roll
repnz
jg
loopne
bound
fisttps
clc
xor
rcrl
and
aaa
clc
dec
jae
xor
jmp
mov
testl
inc
out
jae
fdiv
sti
sarl
adcl
xchg
inc
repz
pop
loop
out
push
mov
leave
imul
into
jle
sbb
dec
xchg
test
mov
fisubrs
mov
dec
inc
imul
in
and
lea
dec
fstps
push
test
inc
popa
fbstp
xchg
and
jle
xchg
inc
xor
or
pop
sub
test
push
in
cmp
or
xor
in
aas
and
in
cwtl
fbstp
stos
lods
lock
jecxz
mov
sbb
mov
xor
in
cwtl
jle
int
icebp
lock
or
mov
or
mov
shl
fmull
or
or
mov
cmc
stos
xor
test
dec
addr16
xor
out
mov
daa
pop
ds
mov
push
lret
fwait
push
loopne
cmp
add
ret
into
stc
dec
mov
daa
xlat
xchg
jno
cmp
ja
mov
aaa
mov
rcrl
loopne
or
and
cmp
push
push
pop
mov
or
mov
imul
ret
push
in
lahf
scas
push
dec
mulb
stos
fdivrl
fwait
add
in
fcomi
and
in
mov
in
ret
dec
in
shrl
in
testb
jp
ljmp
sub
push
mov
lea
mov
in
inc
or
ret
sub
loop
adc
enter
iret
fldenv
mov
push
cli
xchg
dec
je
pop
jle
pop
jbe
xor
or
push
xor
xchg
dec
loopne
xor
and
mov
add
xor
jg
mov
sub
pop
mov
stos
pop
test
inc
mov
loopne
xor
jge
push
mov
push
sbb
pop
divl
stos
xor
add
pop
xchg
data16
cmpsl
test
loope
fstl
imul
mov
test
sbb
xorps
xchg
lock
lret
jl
push
lea
jle
dec
pushf
mov
or
loope
cmp
outsl
or
mov
ret
jo
sub
push
lcall
sahf
push
enter
mov
mov
jmp
data16
xor
scas
jmp
pop
sub
mov
or
out
mov
test
out
jo
jnp
mov
jp
push
mov
ret
pop
fwait
je
sub
lock
or
xchg
add
test
add
pushl
fstpt
cltd
mov
push
cltd
je
outsb
ds
xor
ss
rorb
mov
iret
dec
xor
push
shll
cmp
std
mov
pop
test
lcall
movsb
mov
sbb
xor
aas
sbbb
xchg
xor
cld
jnp
std
in
pushf
mov
sub
mov
mov
loope
cltd
fildll
std
dec
xor
call
jb
pop
cwtl
sub
rorl
js
sub
mov
fmull
push
mov
or
or
lds
or
mov
cltd
or
jmp
in
sbb
sbb
or
lock
imull
mov
jecxz
in
xchg
cli
loopne
roll
push
sub
adc
out
shll
gs
das
movsb
ret
mov
in
insb
lds
je
and
ljmp
or
ljmp
lret
sbb
daa
cmc
out
jp
loope
call
ret
sub
mov
mov
ficoml
mov
adc
arpl
pop
sbb
adc
movsl
pop
jbe
sbb
data16
mov
fcomps
sahf
movsl
add
pushaw
fdivrl
pop
jecxz
sarb
push
and
jb
mov
loope
insl
sub
inc
negl
mov
and
sub
mov
jg
arpl
and
fdivrs
xor
adc
cmc
mov
out
mov
pushf
dec
roll
push
cli
pop
fsts
dec
out
fbstp
mov
dec
nop
imul
dec
push
or
xor
movsl
push
movsl
aas
lret
and
jp
pop
xchg
dec
pusha
into
add
lcall
pop
push
jno
or
stos
sbbb
inc
and
test
cmp
sub
scas
xor
fstl
and
jl
test
loope
fisttpll
adc
cli
shl
in
jle
pop
sub
sbb
fs
xor
das
or
cmp
xchg
sub
leave
push
out
pop
ljmp
dec
dec
lds
scas
lret
add
xchg
jo
movsl
adc
imul
dec
sarl
sbb
add
fidivs
outsl
cmc
in
jo
pushl
xchg
addl
adc
sbb
scas
rcrl
inc
imul
xchg
inc
shl
fs
shll
gs
je
pop
out
jmp
loopne
test
ljmp
mov
cmp
stos
dec
push
les
scas
push
mov
xor
fwait
outsl
sub
mov
sub
repnz
insb
les
or
popf
mov
push
loop
out
into
jg
jne
and
insl
xlat
mov
mov
jno
out
jo
jge
out
in
in
inc
ret
repnz
aad
fndisi(8087
data16
out
call
mov
ret
xchg
sub
fldt
fisubrl
sahf
shlb
std
sub
sbb
fnstenv
cs
jno
mov
cmp
clc
inc
stos
mov
iret
lcall
pop
cli
inc
pmaddwd
adc
lret
adc
jg
or
sbb
inc
sub
or
in
jb
jl
jle
int
scas
popa
popf
mov
jg
or
or
pushf
lods
mov
sahf
sub
adc
pop
mov
ss
cmp
iret
movsl
jecxz
repnz
jge
or
test
xchg
aad
xor
imul
jns
jp
lret
mov
shrl
pop
nop
mov
repnz
mov
stos
loop
divps
or
pop
mov
jg
jb
outsb
insl
and
push
sub
insl
mov
arpl
jle
int
ret
into
std
fwait
sub
and
xchg
jl
xor
outsb
cltd
jecxz
jecxz
test
scas
cmp
xchg
adc
cmpsb
addr16
or
xchg
sub
push
pushf
ret
or
mov
or
flds
rcrb
stos
pop
and
int
mov
sub
and
enter
fwait
nop
shlb
cmp
cmpsb
imul
jb
ffree
adc
lea
in
fsubrs
mov
and
mov
data16
fldt
cmp
cwtl
jecxz
sbb
ja
jmp
sub
lock
lea
insl
push
addr16
stos
cmp
push
push
fimull
out
bound
shll
cmpl
test
push
ljmp
jecxz
jmp
iret
cmp
pop
xchg
ret
cs
out
lcall
lock
sbb
jmp
cli
out
sbb
jmp
lret
loopew
jmp
sar
in
shr
lea
mov
dec
sbb
mov
push
movsl
pop
mov
ljmp
ljmp
mov
or
mov
scas
gs
add
test
fistpll
add
loop
outsb
pop
push
test
lds
mov
addl
rcl
ljmp
adc
es
ficoml
orl
jecxz
and
xchg
andl
out
xchg
xor
sbb
xchg
cmpl
out
xchg
inc
cmp
mov
andl
jb
sub
inc
dec
orl
jecxz
movsl
jmp
mov
jecxz
and
es
adcl
fisttpl
mov
loope
loope
lcall
stos
sbb
aaa
lcall
sahf
jecxz
xor
push
xorl
jo
dec
outsb
int
outsl
and
lods
arpl
loopne
loopne
adc
outsb
loop
stos
insb
vpackssdw
das
pop
in
adc
xor
jecxz
xor
das
loop
jne
fwait
les
mov
xchg
addr16
dec
cs
xor
mov
ljmp
xor
rdpmc
xchg
fwait
sub
out
push
jnp
scas
stos
pusha
addr16
xor
pop
ret
pop
stos
jg
daa
dec
daa
xchg
cmp
scas
sub
cmp
insl
scas
push
mov
call
loop
es
cmpsl
cmpsb
sbb
fcmovnu
sbb
gs
pusha
sub
aam
ret
lret
shlb
dec
insl
push
mov
ljmp
push
lock
ret
or
push
shrl
scas
mov
jnp
outsl
mov
cmp
cmc
mov
adc
xchg
divb
pop
out
ljmp
adc
jmp
inc
cwtl
arpl
pop
out
daa
xor
jg
scas
fildl
lcall
sbb
shll
mov
aas
stc
xor
ljmp
jl
out
je
loopne
lods
xor
lea
nop
data16
mov
jo
popa
inc
mov
outsb
xchg
sarl
ljmp
or
outsl
push
movsl
jmp
ds
in
int3
sbb
gs
cld
mov
adc
cmpsl
sbb
lcall
xchg
sbb
sub
ret
aam
sub
rolb
adc
aad
das
xchg
ja
push
adc
inc
lea
sbb
orb
add
out
sbb
dec
cmp
xor
pop
jmp
mov
ljmp
mov
enter
popf
std
jae
jb
bnd
shrb
popa
lock
hlt
jae
into
lret
push
cli
mov
jae
jo
repnz
sbb
mov
jno
xchg
or
jle
push
mov
subl
sub
jle
pop
cmp
in
push
add
xor
lahf
jne
pop
xchg
das
ljmp
jmp
popf
data16
lahf
jmp
cmp
mov
ljmp
push
in
daa
rcl
ljmp
xchg
sub
sub
pop
bound
push
jecxz
push
jecxz
inc
rorl
dec
and
mov
pop
cmp
aad
arpl
stc
pop
in
jb
fisttpl
pop
push
and
ret
push
push
push
xchg
add
sbb
or
daa
mov
ljmp
and
ljmp
loop
xchg
push
andl
adc
jns
push
jp
pop
shlb
push
leave
daa
loop
ljmp
loop
ljmp
sub
pop
pop
push
push
fwait
enter
movsl
shrb
sti
scas
or
jo
add
push
loop
rclb
add
mov
daa
and
sub
cmovbe
cmpsl
mov
sub
sub
stos
inc
aaa
int
iret
push
dec
int3
mov
out
fldt
push
and
test
adc
in
pop
shlb
pop
ljmp
push
inc
insl
mov
mov
jp
dec
inc
addr16
and
jcxz
jmp
cmp
data16
sbb
push
fildl
adc
cltd
cwtl
ror
ljmp
orl
nop
imul
cmpsl
cmpsl
popf
ljmp
negl
adc
lea
push
push
pop
jmp
loop
scas
jae
dec
push
cmpl
xchg
xchg
je
ljmp
orb
scas
out
leave
jnp
mov
popa
inc
mov
inc
jo
shll
mov
and
lea
ss
adc
jmp
mulb
loopne
xlat
into
xor
stos
mov
xor
mov
xor
lret
xchg
sub
lret
dec
adc
fcmovnu
test
lret
adc
push
aaa
hlt
mov
pushf
xchg
gs
pusha
inc
movsb
loopne
es
test
xchg
enter
scas
icebp
hlt
in
cli
sbb
xchg
fists
into
jne
xchg
push
or
mov
or
test
pop
xor
aam
xor
movsl
nop
jg
jae
adcb
dec
out
cmp
jg
out
mov
add
into
sahf
loop
in
js
orl
dec
ret
out
inc
pop
and
popf
push
rclb
out
xlat
jmp
mov
sbb
add
or
adcl
shrl
lret
xor
xor
mov
shlb
sub
mov
mov
faddp
xchg
sbb
mov
and
out
add
jno
idivb
repz
in
push
jp
movsl
loope
sti
cmpsl
and
inc
xchg
sub
jge
push
cmp
xor
xchg
popf
lret
jp
jae,pt
sub
shlb
xchg
mov
testl
popf
xchg
mov
shrb
mov
lret
jmp
pop
mov
jle
rcr
test
mov
int3
out
outsl
loopne
mov
loop
lret
shll
jle
dec
leave
shlb
packuswb
shlb
repnz
lds
ljmp
mov
enter
xchg
je
pusha
lcall
mov
push
mov
or
sbb
xor
push
jb
pop
loop
cmpsl
xchg
stos
rclb
test
push
popa
jb
jo
xor
pop
ror
ljmp
test
int
xor
lea
jp
ljmp
lret
movhps
jp
lea
xor
daa
ljmp
mov
cli
out
daa
bound
xorb
inc
xchg
stos
or
mov
rol
push
test
jae
ret
shl
std
jge
mov
and
dec
icebp
xchg
jbe
mov
ljmp
je
into
sub
xchg
pop
or
pushf
shl
call
mov
ficomps
mov
jae
jecxz
add
mov
lret
mov
pop
mov
mov
ret
js
jmp
push
stos
pop
cmpsl
and
scas
mov
lret
mov
scas
nop
cmpb
rcrl
sbb
pop
or
rclb
sarl
ret
pop
jbe
fsubs
les
mov
outsl
divb
out
ret
rcrb
dec
popf
in
jnp
insl
mov
fldl2e
sahf
imul
sti
popf
movsl
lcall
jl
ror
leave
stos
mov
loopne
sub
xchg
sbb
and
pop
or
jns
adc
sub
ljmp
lcall
ljmp
ljmp
mov
ds
or
add
mov
xor
lock
outsl
sub
inc
sbb
mov
insl
shl
and
scas
cld
add
pop
pop
pop
mov
aas
int3
jg
sbb
in
pop
dec
dec
push
mov
cld
or
sbb
aaa
push
adc
in
xor
dec
lcall
cwtl
addr16
int
out
popf
push
decb
ret
shrb
fmull
xor
loop
mov
xor
or
leave
leave
push
cmp
dec
push
jge
fwait
dec
ror
xchg
pushf
dec
sbb
subl
mov
ljmp
dec
mov
cmp
mov
mov
and
in
fcomip
and
out
cmc
mov
addr16
repnz
loopne
sbb
and
loop
jmp
pop
push
fxch
std
xchg
int3
jmp
push
fimuls
mov
fidivrl
inc
dec
mov
sub
sbb
fsubrp
add
or
jle
enter
sti
pop
popf
lret
mov
fcomps
sti
jp
mov
test
test
ja
mov
movsl
roll
lock
push
leave
imul
push
pop
jb
mov
andl
sti
leave
enter
pushf
pop
add
shl
jp
mov
repz
out
mov
add
mov
lock
adc
jns
popa
lcall
lret
mov
mov
scas
iret
int3
jg
pop
std
push
sub
or
bound
jbe
fsubrl
xchg
mov
cwtl
fadds
into
popa
aaa
lcall
imul
inc
dec
cmp
pop
or
and
lock
add
movsb
repnz
pop
enter
testl
std
pop
les
and
xor
out
xor
xor
gs
data16
cmp
push
dec
dec
pusha
mov
scas
je
data16
sar
and
mov
inc
lock
jb
mov
or
pushf
cmp
push
push
stos
jle
inc
or
push
call
adc
mov
popa
sub
sahf
cmp
adc
mov
sub
mov
and
jo
movsl
xlat
orl
fidivl
and
mov
out
push
jle
sar
pop
iret
add
or
jmp
cmpsb
cld
dec
aad
mov
icebp
scas
mov
xchg
jo
fucomip
push
xchg
loopne
push
ret
dec
out
enter
negl
jbe
sbb
jo
pushf
scas
lret
ss
sbb
orl
inc
lahf
pop
movsb
and
out
fists
pushf
lods
inc
mov
mov
jb
fistpl
iret
mov
fwait
jecxz
int
lret
fimuls
into
jo
imul
pop
sub
push
inc
mov
fdivrs
sub
icebp
or
or
or
dec
push
shll
xor
add
lret
int3
fdivl
out
das
daa
mov
pop
in
call
scas
int3
xor
lret
das
repnz
mov
dec
xchg
stc
arpl
cmpsl
mov
xchg
gs
xchg
daa
sub
cmp
lret
loopne
pop
and
das
push
cli
icebp
or
popf
hlt
add
cmpsl
dec
xchg
jecxz
add
cltd
ljmp
pop
xchg
and
jb
filds
jnp
mov
std
cmpsl
jecxz
sub
ljmp
dec
jmp
fisubs
push
fwait
cmc
daa
fisubrl
add
jae
data16
xor
out
insl
lret
jnp
or
pop
cli
loop
xchg
cmpsb
cmpsb
add
ret
cmp
stos
fidivrs
rorl
mov
mov
imul
fiadds
push
test
xor
push
push
jb
dec
je
out
ljmp
imul
roll
pop
lea
jg
jb
adc
dec
mov
pop
daa
ljmp
lret
mov
mov
xchg
fisttpl
and
fidivl
les
or
jmp
test
jb
push
imul
fwait
loop
shll
scas
vmread
pop
lahf
add
lods
jne
ja
lahf
cmp
icebp
ficomps
loope
scas
ret
cmp
sbb
jecxz
push
fnsetpm(287
pop
addl
or
ja
xchg
jecxz
aaa
les
add
ljmp
js
sub
js
pop
in
cli
lds
cmp
cwtl
pop
bound
loop
push
icebp
fwait
iret
jl
and
stos
nop
jecxz
lret
dec
ficompl
ljmp
ret
fsubrs
mov
pop
add
cmp
sub
or
jmp
push
adc
rol
ljmp
loop
fs
sub
pop
ret
ljmp
shlb
scas
imul
dec
mov
mov
movsl
filds
sub
xor
mov
mov
sub
jmp
dec
fisubl
ljmp
ret
add
sub
adc
fiaddl
cmp
push
sbb
mov
and
mov
les
dec
jmp
sbb
lods
imul
movsb
ret
pop
sub
mov
mov
in
shlb
std
jnp
int
push
adc
inc
pop
sub
jl
repnz
jecxz
repnz
les
fistl
add
push
mov
jns
xchg
xor
fadds
aam
orb
add
stc
loop
rorb
adc
jmp
xor
or
jns
jecxz
dec
adc
lods
adc
pushf
addr16
stos
jecxz
lea
hlt
xor
jmp
popa
lcall
mov
test
jecxz
and
loope
xor
pop
stos
sti
mov
cld
xchg
into
movaps
mov
pop
sbbl
xchg
sahf
cltd
ror
fbld
les
shr
ror
cmp
sbb
addr16
das
mov
mov
adc
shr
gs
cmc
shl
push
mov
add
inc
mov
mov
jnp
fimull
fidivrl
loop
sbb
mov
cmpb
dec
aaa
push
popa
cmp
out
gs
cmp
lahf
jne
or
sub
jmp
fdivl
dec
fs
fildll
fisttpll
jecxz
push
scas
push
xor
pushf
pusha
add
inc
cmp
imul
loope
xchg
arpl
leave
dec
out
dec
push
iret
sub
ljmp
jae
insl
jb
into
lgs
mov
jb
cld
sub
in
xchg
xlat
jecxz
ljmp
jmp
lods
and
jb
ljmp
jecxz
sub
ja
jecxz
mov
push
daa
lcall
pop
ljmp
xchg
arpl
rorl
std
dec
sbb
ljmp
jmp
jp
push
cmp
cmpsb
iret
xchg
ret
or
stos
jecxz
mov
push
lret
lret
pop
xor
adc
xchg
xor
mov
rorb
sub
fbld
icebp
lahf
icebp
pop
push
cmp
jg
ret
dec
pop
mov
inc
jmp
jmp
in
fistpl
imul
lea
pop
ljmp
je
cld
jecxz
fildll
std
pushf
ja
mov
in
out
mov
mov
mov
dec
xlat
jae
fbstp
repnz
icebp
dec
lret
cmp
push
push
sub
mov
ret
xchg
push
jge,pn
das
int3
stos
mov
pop
loop
mov
jnp
xor
or
loop
out
mov
xchg
push
jg
push
mov
scas
or
sub
adc
lock
out
daa
imul
xchg
jle
ret
jns
out
mov
test
mov
xor
hlt
outsb
shll
pop
adc
mov
das
out
mov
and
xor
imul
pop
outsl
fwait
sbb
xor
or
mov
fsubrs
lret
pop
bound
das
and
fstpt
out
bnd
fidivrs
imul
in
push
shll
in
rolb
mov
mull
fsubs
shrb
clc
adc
aam
shrl
push
in
jle
or
enter
pop
call
out
mov
out
ss
ret
push
loop
call
cwtl
xchg
inc
lea
repnz
adc
jecxz
mov
or
sbb
fidivl
popf
mov
sbb
push
lcall
out
xchg
or
in
cld
lahf
lock
aaa
pop
test
sbb
push
jo
mov
or
or
scas
loope
in
dec
fistpl
add
pusha
xor
shlb
mov
loop
mov
xor
ret
outsl
jge
mov
je
adc
ja
aad
push
push
xchg
mov
enter
pop
push
push
sub
sbb
mov
arpl
enter
shlb
mov
sub
or
popf
in
xor
fldl
fsubs
sti
dec
sti
jno
loopne
test
ret
adc
stos
lock
in
push
cltd
loope
das
jae
and
mov
in
sbb
in
xor
and
sbb
cmp
stos
repnz
lods
push
sbb
out
mov
jmp
pop
fisttpl
cmc
adc
pushf
in
shl
cmp
xchg
add
nop
stos
jne
leave
push
push
fmuls
mov
jns
mov
shlb
bound
xchg
mov
shlb
movb
mov
lcall
sub
js
dec
out
push
xchg
lcall
sbb
sbb
mov
push
cwtl
jecxz
push
negb
aas
insb
js
xorl
mov
or
out
mov
iret
xchg
add
cld
bound
lods
mov
sub
mov
stos
out
cmp
pushf
in
mov
jmp
std
xor
jle
ljmp
lea
imull
add
icebp
mov
or
add
sub
aad
or
fidivs
cli
pop
jnp
jmp
jmp
ljmp
mov
cld
sub
xchg
out
filds
jg
jmp
inc
stos
jle
or
pop
shrl
mov
xor
mov
imul
cmp
push
or
nop
loope
iret
xchg
xor
push
lock
push
cli
mov
lods
push
mov
fdivs
xchg
cmpsw
add
mov
sbb
xchg
jle
jbe
push
rcr
loopw
lret
sbb
mov
or
mov
or
call
neg
dec
mov
mov
int
inc
jne
jae
pop
xor
popf
jle
clc
inc
mov
setle
pop
or
stc
out
push
cwtl
jg
fimuls
xor
xchg
fisubrl
mov
or
inc
lcall
mov
mov
stos
sbbb
mov
rol
popl
cmpsb
clc
fs
arpl
data16
les
outsb
jmp
push
rcll
cmpsl
jmp
jbe
push
hlt
sti
mov
ret
xchg
mov
outsl
lahf
mov
shrl
jae
fndisi(8087
stc
mov
push
int
sub
hlt
stos
ret
or
or
xlat
xchg
xor
arpl
xchg
or
ret
out
je
ficompl
dec
or
hlt
daa
dec
lods
ret
cli
arpl
movb
and
bound
or
jle
mov
cpuid
loopne
repnz
or
xchg
mov
fmuls
sti
xor
jmp
mov
jae
add
mov
test
popa
jmp
jge
scas
std
pop
pop
pop
pop
mov
push
loop
loop
addl
dec
sbb
ficoml
mov
push
out
ljmp
aad
push
jle
mov
stos
js
out
and
push
out
sub
xchg
and
xor
mov
js
shll
cmp
cs
addr16
jns
fidivs
cmp
iret
arpl
or
sbb
packssdw
enter
repnz
sti
mov
add
jmp
and
mov
dec
idivl
in
int3
mov
subl
aam
add
es
js
addr16
shrl
nop
sub
or
push
movsl
jb
cmp
jmp
mov
adc
xor
das
in
mov
or
push
mov
sbb
ror
fisubrl
or
sti
cmpsl
daa
pushf
mov
xor
push
mov
mov
jo
fldenv
pop
loopne
pop
sbb
cmpsl
mov
xchg
mov
sub
rorl
dec
xchg
and
mov
sbb
out
pop
mov
mov
mov
pop
jg
or
sahf
xor
xchg
cmpsb
fbstp
dec
mov
adc
mov
push
fldenv
push
cmp
and
imul
inc
hlt
inc
and
mov
dec
lds
shll
push
in
mov
insl
shlb
xchg
shrb
pop
jecxz
subl
stos
ret
out
mov
jecxz
jecxz
sti
xchg
jecxz
or
jb
pop
sub
bound
sarb
bound
rclb
daa
shrb
mov
sti
xchg
dec
aad
fimuls
dec
shrl
lods
out
mov
xor
mov
and
mov
fldt
mov
mov
mov
jecxz
cmp
xchg
dec
ret
out
mov
mov
jle
lret
or
mov
in
je
mov
ror
jno
mov
icebp
push
mov
sarl
insb
enter
cld
stos
mov
cmp
sub
ss
bound
lahf
leave
into
push
pop
sbb
test
ret
test
dec
aad
arpl
fmull
lods
pop
cmc
and
lods
movsl
and
mov
add
jmp
std
arpl
imul
xlat
shl
fidivrl
sub
insl
roll
in
jns
stos
insb
xor
incb
sbb
or
xchg
pop
insl
mov
imul
in
ja
jle
rcrl
rorb
add
shrl
out
gs
into
and
sub
sbb
ds
sbb
test
sub
cmpsb
rcrl
movsl
pop
int
lcall
addr16
xorb
push
lcall
stc
hlt
sub
mov
dec
and
scas
mov
fwait
icebp
and
jns
adc
mov
shll
sarl
push
add
and
insl
jg
push
adc
fdivrs
jl
loope
hlt
movsl
sti
pop
jne
sub
push
or
jnp
or
push
or
popf
xor
jmp
and
jno
sbb
push
sbb
pop
adc
and
jb
in
push
int3
or
push
arpl
mov
call
cmp
clc
aas
movsl
sbb
out
xchg
leave
cmp
cmp
call
mov
out
int3
jle
mov
aad
jbe
or
pop
xchg
cmp
pop
enter
xchg
sub
ret
movsb
dec
loope
es
pop
mov
mov
outsb
cli
bnd
xlat
lock
pushf
sub
shll
das
rcll
into
ret
iret
insl
mov
aas
ret
xor
jo
imul
and
and
push
mov
jne
pop
test
dec
stc
shlb
or
adc
js
mov
push
out
jne
dec
notl
fsubrl
sub
divb
xorb
xchg
in
and
repnz
sub
clc
cltd
loope
lock
cs
adc
jmp
push
stos
fidivrl
cmpsb
rol
inc
rolb
rcrb
jne
frstor
mov
fsubrp
iret
lea
or
or
sahf
ljmp
sub
xlat
xor
sti
or
lods
inc
or
cld
sub
push
out
mov
std
mov
js
mov
xchg
into
enter
andl
push
mov
xor
out
mull
push
movsb
ja
dec
xorb
jae
pop
or
adc
int3
cmp
and
xchg
outsl
cmp
out
in
cmc
mov
push
std
pop
mov
faddl
lret
mov
dec
mov
nop
mov
dec
sbb
inc
xchg
xchg
js
mov
insb
fcoml
ja
call
xor
fdivrl
mov
iret
sbb
cmpsb
into
popa
fwait
sbb
mov
lods
shl
arpl
scas
enter
jo
mov
outsb
mov
rcll
stos
mov
insl
ds
and
scas
xchg
xchg
xor
stos
sbb
push
jmp
xlat
xchg
fwait
cld
lea
icebp
ds
dec
out
push
gs
imul
mov
popf
ss
push
mov
clc
fldl
mov
mov
pop
sbb
dec
sbb
mov
jecxz
inc
xchg
inc
iret
mov
and
std
xchg
push
add
imul
sti
mul
mov
out
mul
cmp
test
push
movsl
add
or
adc
jecxz
test
cmp
or
xchg
lock
jmp
sbb
das
ret
pushf
pop
add
xlat
jg
paddq
lahf
cmpsl
in
mov
jo
lret
std
shl
jecxz
rorl
in
fsubl
jnp
ja
mov
sbbl
push
negl
jl
dec
mov
cld
or
addr16
fimull
test
inc
sti
shlb
and
int3
es
jbe
testl
stos
jb
nop
wrmsr
cwtl
fimull
pop
loopne
mov
jns
push
or
push
jno
adc
sbb
cmp
stos
jecxz
inc
sti
adc
push
and
cmc
add
adc
and
xchg
xor
jmp
lods
mov
scas
mov
mov
jecxz
std
xor
shrb
in
cmp
mov
xchg
scas
mov
bnd
jecxz
loope
adc
lahf
popf
outsl
je
out
jle
push
jl
sub
cmc
sbb
mov
std
es
mov
jmp
sub
scas
fistpll
add
mov
and
mov
or
fdivp
push
adc
mov
ljmp
ja
jns
lret
inc
push
jb
je
loopne
sbb
xchg
invd
adc
inc
push
test
sbb
cwtl
or
ds
aad
mov
loop
jecxz
mov
mov
fmuls
push
int3
incl
in
cmp
mov
repz
enter
add
sub
push
xchg
pop
push
jge
jg
pop
jo
jno
loopne
lock
push
mov
cmc
movsl
insl
out
cmp
mov
or
pusha
das
pusha
mov
pop
mov
push
ret
ja
sbb
fcmovbe
bnd
adc
loop
std
lds
pop
xchg
jne
aad
das
pop
shl
bnd
pop
cltd
mov
daa
out
pop
mov
and
and
or
ret
xchg
or
adcl
xchg
scas
or
aaa
hlt
sub
fdivrp
mov
lods
out
mov
jae
jl
rcll
jg
shr
xlat
xor
gs
test
sub
cli
pop
push
sarl
ja
das
cmpsb
xor
adc
push
push
push
jle
jmp
out
mov
int
jge
jg
in
fimuls
or
icebp
rcll
fcoml
iret
push
push
mov
mov
jg
xlat
outsb
mov
and
repnz
pop
ljmp
fdivr
jae
data16
jne
jecxz,pt
test
lret
or
sub
add
data16
ret
push
sbb
mov
push
jge
insb
in
pop
ljmp
scas
lds
fnsave
mov
wrmsr
iret
push
jnp
mov
out
xchg
xor
or
loop
sar
mov
xor
aad
sbb
cmp
cmp
in
jmp
jmp
or
push
cltd
push
daa
dec
stos
push
out
clc
jle
jle
je
repnz
ja
jb
add
lock
xorl
mov
push
and
adc
mov
data16
xor
mov
jmp
ror
adc
xor
mov
mov
mov
mov
fidivrl
xchg
mov
loopne
xchg
dec
xor
cld
pop
xchg
mov
dec
test
in
mov
lahf
outsl
into
mov
and
mov
jno
lcall
loop
sub
fsubl
pop
mov
movsl
mov
dec
pop
mov
push
fwait
jns
repz
push
lahf
data16
adc
mov
jl
ret
addr16
leave
sbb
jl
xor
and
fwait
addb
and
push
rcr
ret
cmp
insl
scas
jnp
jge
push
push
dec
xchg
ljmp
negl
inc
aas
inc
pushf
cltd
xor
push
loop
add
and
loop
add
xchg
mov
lret
inc
pop
inc
fucomi
in
mov
fisubl
and
dec
lret
fimull
mov
mov
mov
jo
into
adc
test
dec
inc
or
xchg
dec
jp
aad
mov
xchg
es
das
xchg
out
fucomp
std
out
or
and
subb
scas
insl
popa
mov
jle
and
xchg
lret
in
ss
cwtl
sti
faddl
cmpsb
out
cmpsl
imul
in
jp
aam
in
cld
sbb
inc
movsb
pop
pop
stos
into
insl
addr16
adc
in
mov
out
cld
fnstenv
movsb
repnz
hlt
loop
mov
in
mov
jnp
movsb
repnz
sub
rclb
add
push
jmp
seta
push
pop
and
js
stos
dec
pop
push
shl
loop
mov
retw
mov
popf
daa
or
push
pusha
inc
stc
popa
pop
mov
push
aas
xchg
outsb
lea
sahf
loopne
push
in
jae
imul
inc
jmp
fsts
mov
cwtl
push
xor
and
loope
push
movsb
or
adc
sbb
ljmp
popf
cli
jecxz
repnz
movsb
inc
iret
pusha
mov
or
outsl
inc
in
stos
push
sub
lcall
sbb
mov
or
ljmp
ljmp
lods
ja
cltd
cmp
sub
jecxz
fimuls
jecxz
cmp
xor
xchg
pop
inc
sub
xor
lds
ja
mov
test
xchg
gs
stos
jecxz
xor
cmp
in
int
mov
push
sar
xor
or
mov
insl
fildl
leave
and
push
popf
mov
test
inc
jle
aad
jo
cmp
fsts
loope
out
es
imul
sbb
and
int
repnz
fsubrs
mov
rolb
jb
jecxz
test
push
xor
lret
dec
cmp
hlt
stos
mov
imul
lea
ret
addr16
stc
hlt
pop
sbbl
push
push
mov
stos
jle
ret
xor
push
jecxz
jmp
fcomi
add
xlat
jmp
jecxz
rcll
mov
daa
jb
das
jb
iret
fdivl
pop
int3
jle
outsl
jg
lcall
ds
sbb
enter
loop
jo
inc
inc
loopne
cmp
mov
repnz
js
daa
fs
cmp
in
loope
das
xchg
bound
inc
mov
insl
mov
in
and
mov
xchg
mov
scas
test
gs
jle
xchg
fnstcw
out
mov
cltd
push
daa
jns
mov
mov
mov
add
lds
mov
lock
mov
pop
loope
jecxz
push
arpl
mov
mov
rcrl
push
or
and
add
out
mov
mov
lret
gs
testl
jmp
mov
movd
mov
jmp
adc
lret
fnstsw
shlb
mov
sub
lahf
add
test
or
es
fcmovbe
jns
out
jbe
dec
icebp
xchg
or
out
and
hlt
mov
add
adcl
sahf
outsb
ljmp
xchg
mov
xor
or
mov
nop
xorb
sbb
jp
xor
jnp
sti
out
dec
scas
arpl
and
cmpsb
loope
je
shl
pop
fdivrs
pusha
loopne
mov
xchg
push
call
sbb
adc
pop
jbe
jb
mov
xchg
mov
xchg
or
push
loopne
mov
pop
mov
fbstp
xlat
sub
jmp
mov
daa
jbe
cmp
lds
push
sbb
lods
xor
in
push
popf
and
mov
out
jecxz
testl
or
jle
jns
mov
xor
out
std
sub
and
sub
popf
push
mov
lock
inc
cmpsb
pop
mov
xorb
aas
shl
fldl
mov
pusha
sbb
rcl
inc
ja
nop
adc
cmp
loope
aaa
idiv
jp
jle
fstpl
cmp
int
orl
ret
xchg
sti
ret
flds
scas
push
int3
mov
mov
push
cmpsb
aaa
pop
and
sbb
xor
jae
out
shrl
mov
jge
stc
inc
jo
ljmp
dec
jb
scas
mov
in
sahf
mov
nop
test
sahf
inc
cmp
fbld
imul
insl
test
out
inc
test
aad
adc
sub
out
cmp
rcll
jmp
mov
jmp
mov
aad
popa
pop
clc
loop
ss
xchg
arpl
leave
outsl
mov
sti
xchg
loopne
daa
pop
cld
sub
jle
sbb
sbb
add
rorw
lock
test
add
or
repz
in
sub
jp
loop
xchg
jmp
fs
cmp
sbb
cmp
push
aas
aaa
cli
jmp
dec
push
rcl
les
xchg
ret
add
jns
and
cli
fcmovnbe
mov
outsb
lds
cltd
or
pop
cmp
inc
xor
and
inc
lcall
in
out
lock
ja
pop
mov
cmp
cwtl
ljmp
push
add
lds
cmp
fstl
ret
sahf
lock
and
jne
push
dec
fildll
rcll
cmp
mov
ret
dec
mov
hlt
jae
stos
jp
pop
push
pushf
enter
test
popa
mov
ret
or
adc
lret
jae
and
push
mov
mov
fistl
mov
loopne
sub
fsubp
xor
or
stos
jo
aaa
or
xor
jecxz
mov
movsb
int3
sti
sbb
fcoms
dec
adc
cmc
icebp
std
outsb
add
addr16
int3
shll
int3
shr
ljmp
dec
pop
dec
push
loope
xchg
loope
cmc
pop
stos
cltd
mov
out
xor
pop
xchg
pop
std
adc
sbbb
mov
pop
jg
mov
jmp
sub
fnstenv
outsb
mov
sbb
push
mov
inc
mov
pop
imul
jge
bound
jne
rol
mov
imul
pop
test
jne
popa
or
mov
daa
loope
lcall
std
mov
jecxz
sar
inc
fstps
pop
call
rorl
vmovd
push
bound
mov
adc
loop
stos
ss
mov
test
cmp
xchg
in
into
jae
enter
mov
fdivs
mov
sub
jl
sub
cmpsl
pop
fmuls
incb
xchg
scas
cmp
xor
or
bound
out
incl
or
inc
sbb
test
or
cmp
sti
test
shlb
push
rcrb
mov
jle
lret
stc
xor
mov
mov
inc
cwtl
pop
adc
add
and
adcl
arpl
cmp
xchg
test
adc
stc
lret
or
xor
out
arpl
xlat
fisubrl
jb
stos
jae
repnz
adc
jge
out
lock
nop
xchg
cwtl
inc
outsb
mov
hlt
or
jb
jne
adc
add
sbb
sbb
into
in
lods
shll
pushf
or
and
int
in
mov
xchg
adc
aam
stos
lret
scas
adc
loopne
jne
jb
out
in
shr
ljmp
mov
push
sub
sub
jg
lds
in
aas
cmp
sti
int
mov
stc
adc
stos
mov
int
rcr
je
fnstenv
sbbl
js
adc
and
aaa
inc
dec
fwait
xchg
out
adc
mov
cmp
adc
addr16
adc
in
sub
les
fnstsw
adc
pop
stos
repz
jle
dec
cmp
sub
and
xor
or
jns
in
mov
xor
cs
fldt
mov
jmp
xor
cwtl
jg
push
filds
jbe
pop
std
mov
cmpsl
insl
rcll
out
jmp
push
pop
fisttpl
in
push
inc
fiaddl
sbb
sbb
cmpsl
mov
mov
cmpsb
sbb
mov
aaa
jnp
mov
adc
dec
aas
mov
jae
or
inc
je
sbb
mov
clc
xchg
cmc
out
cmpsb
insb
aam
aaa
adc
sub
int
mov
and
lods
lock
dec
mov
loop
hlt
inc
mov
loope
inc
cmp
mov
mov
rorb
xchg
stos
sub
fnstsw
stos
in
cmp
inc
loopne
jle
inc
test
aaa
repnz
mov
data16
xchg
addr16
das
mov
les
int
fdivs
imul
sub
xor
adc
mov
xlat
idivl
fstps
imul
icebp
inc
mov
insl
loope
clc
les
mov
clc
jmp
sub
shlb
dec
sub
movsl
pushf
sbb
or
je
outsl
xchg
lods
or
pop
sbb
dec
icebp
popf
arpl
sub
clc
adc
out
icebp
enter
sbb
or
pop
xchg
push
pop
sbb
adc
jo
xchg
int3
xchg
lds
sti
ds
into
int3
xchg
mov
mov
dec
cmc
gs
sub
in
shll
shlb
iret
mov
stos
rcrb
repnz
icebp
add
push
sub
movsl
bswap
in
mov
mov
sbb
daa
cmpsl
sub
ljmp
dec
pop
fisubrs
test
xlat
jge
and
jmp
push
sub
jno
in
gs
jge
cwtl
xor
adc
addr16
loop
std
rorl
out
fnsave
hlt
in
loop
je
jmp
stc
rcll
lret
fidivl
int3
mov
adc
pusha
fdivl
xchg
jle
push
lret
stos
adc
mov
inc
jo
push
fsubrl
or
mov
adc
cmc
rep
sti
xchg
sub
jnp
icebp
jg
pusha
lds
scas
push
or
jbe
push
out
adc
enter
xchg
stos
lds
add
lahf
dec
jnp
jns
sub
pop
jo
std
or
jle
iret
push
aas
ljmp
rclb
pop
mov
push
jae
and
mov
jb
jne
popf
xor
movsl
in
lods
sbb
lahf
mov
xchg
xchg
xor
cltd
les
sub
ja
loope
scas
loope
sbb
adc
shlb
push
popf
push
sub
jmp
mov
mov
loop
jecxz
add
lcall
xchg
enter
push
iret
dec
push
push
sbb
orb
call
nop
out
stc
adc
shll
lret
cltd
push
pop
ret
mov
dec
fcomps
mov
push
ljmp
lods
je
rorl
and
mov
fimull
push
fsubr
add
push
cltd
outsl
cmp
rcr
cmpsl
sahf
orl
mov
push
jl
adc
inc
or
mov
xchg
loope
inc
jo
pop
test
sbb
lods
mov
xchg
outsb
jae
fs
popf
xchg
dec
stos
pop
repnz
fisubrl
pop
mov
lcall
dec
jmp
fisttpl
jle
fwait
pop
or
fmulp
fcomps
mov
test
xchg
outsl
call
xchg
outsl
mov
and
jno
sti
insl
inc
push
icebp
mov
xchg
daa
rol
or
in
mov
dec
and
and
test
xlat
jmp
imul
dec
adc
movsb
xor
orl
mov
repz
dec
ds
jne
ds
dec
rcr
pop
adc
xchg
pop
stc
cmp
mov
jae
icebp
call
push
jecxz
ret
mov
xchg
seto
jge
scas
mov
and
lea
cmc
mov
ljmp
jb
sub
daa
mov
lret
xchg
fidivrs
jae
and
shrb
cld
xor
lret
adc
lock
cli
fisttps
leave
push
test
divl
outsl
adc
call
jp
repnz
loopne
ret
cwtl
sub
lock
loope
push
fs
mov
sbb
mov
in
pop
lock
mov
into
clc
shlb
mov
jb
je
outsl
ds
int3
loop
xor
fimuls
adc
sub
mov
xchg
sub
jmp
jb
jmp
jb
jmp
push
les
loope
xchg
or
and
shlb
stos
xor
sbb
fadds
jmp
enter
lock
sub
jmp
out
add
cli
add
outsb
pusha
adc
addr16
loop
jecxz
or
pusha
jmp
outsb
out
mov
push
cmpsb
sub
testl
cmp
fwait
movsl
cmp
ror
outsl
cmp
hlt
mov
mov
mov
mov
xchg
jo
mov
addl
xor
dec
pop
js
int3
orb
sbb
mov
outsl
out
aaa
int
aam
dec
mov
inc
inc
aas
pushf
cmpsl
cmp
gs
shlb
icebp
mov
jg
sti
test
std
aas
aad
out
or
imul
sbb
popa
or
popf
mov
loopne
xor
in
rorl
iret
sub
or
or
pushf
lods
push
loope
sub
stc
cmp
fwait
sbb
or
xor
sub
shll
out
cmpsl
push
cmc
push
repz
popa
mov
jo
jl
sti
xor
mov
je
adc
rcrb
jae
jne
clc
test
jns
fistpll
cmp
push
outsl
in
cmc
sarl
cmc
div
ja
push
push
or
out
cltd
ljmp
ja
inc
jg
in
mov
rorl
call
repnz
or
mov
or
outsb
bound
and
cltd
xor
sub
or
loope
xlat
xor
in
push
lds
std
shrl
lret
jae
loope
hlt
xchg
mov
fistps
pop
xchg
mov
mov
test
dec
push
xchg
lods
cmpw
mov
push
dec
js
pushf
fisttps
mov
cld
push
xor
jb
sbb
mov
xor
rcl
sbb
cmp
add
lahf
mov
psubd
scas
xor
mov
dec
jg
cltd
inc
stos
iret
rcrl
imul
je
cmp
aam
or
mov
jmp
inc
inc
and
xor
add
add
out
sti
out
outsl
mov
pushf
bound
add
mov
fcmovu
jecxz
test
clc
loopne
insb
jmp
cmpl
shl
rorl
dec
cmp
out
imul
fidivl
imul
stos
ret
jae
jns
into
xchg
test
xlat
insb
faddp
jae
lea
fucomip
sti
mov
call
add
jo
mov
icebp
dec
cmp
xchg
test
dec
loopne
jg
mov
out
lods
lahf
in
cmpsb
movsl
cmc
sub
adc
fbstp
adc
subl
arpl
sti
add
imul
loopw
and
cs
imul
cmpsb
out
push
arpl
inc
ja
test
insl
push
push
mov
cmc
leave
add
mov
out
dec
inc
push
jbe
add
out
or
mov
xor
insl
clc
jmp
movsb
cli
pop
insl
jmp
add
push
imulb
jbe
loop
sub
or
sub
aaa
mov
push
out
out
shlb
lcall
aam
jae
in
cld
jbe
lock
test
test
and
andb
or
sbb
sbb
fisttpll
xchg
pop
mov
mov
shr
jae
les
das
jae
out
cmpsl
lea
and
icebp
dec
jae
mov
ja
pop
push
sbb
push
sarb
and
test
push
jg
jbe
jle
dec
stos
mov
data16
out
dec
or
mov
xor
test
sub
lods
sti
jmp
dec
or
sub
add
sub
js
pop
in
inc
jbe
xchg
add
out
xor
jg
std
out
mov
jecxz
cmp
jl
add
mov
add
push
in
pop
shrl
cld
mov
inc
js
aaa
into
sbb
mov
dec
fildl
cld
mov
xlat
lcall
mov
cmpsb
out
sarb
push
and
int
xchg
or
cltd
cmpsl
xchg
sbb
mov
jge
cltd
inc
sub
mov
push
fnstenv
std
cmp
mov
fcmovbe
fldl
leave
lret
lret
inc
int3
xchg
loopne
xchg
xlat
popl
outsb
jne
and
and
ds
pop
cmp
jno
xor
pop
dec
call
mov
mov
jle
rcrl
push
pop
cltd
sub
sub
or
or
pushf
pop
fnstenv
aam
mov
jge
push
sbb
mov
sbb
std
mov
cli
or
je
jl
jg
jbe
ss
pmulhuw
jae
cmp
ja
jl
filds
or
ljmp
pop
mov
xchg
inc
mov
call
pushf
dec
test
xchg
push
or
cltd
rorl
push
or
push
xchg
loope
rolb
mov
and
sub
test
shr
scas
stos
icebp
hlt
sbb
les
out
iret
jmp
mov
sbb
into
fists
in
stos
icebp
out
loop
icebp
sub
jo
jecxz
popa
mov
xchg
hlt
xor
mov
out
out
jecxz
daa
xchg
ret
push
xlat
mov
out
insb
in
or
push
call
popa
and
popa
shll
mov
sub
xchg
push
lea
stos
testl
xor
test
jne
cmp
mov
inc
mov
or
icebp
je
icebp
or
push
ror
mov
xchg
jp
std
fs
mov
pcmpgtd
xorl
mov
mov
mov
ret
leave
fimull
in
lret
mov
jnp
das
out
pavgw
testl
outsl
rolb
stc
mov
cmpsb
mov
sbb
leave
jns
scas
cmpsl
mov
ja
outsb
mov
jb
jle
mov
mov
pop
add
xor
ja
fistpl
push
sbb
sub
inc
icebp
int
lret
pop
push
test
cmp
out
cmpsb
daa
pushf
mov
lcall
dec
xor
in
jl
clc
mov
pmaddwd
dec
pushf
sub
mov
sbb
jne
inc
mov
mov
ret
test
jbe
mov
sub
loop
sbb
pushf
data16
dec
dec
fnsave
fstpl
scas
int3
cld
loope
in
loopne
fdivs
popf
or
fbstp
ljmp
add
out
pop
jge
and
scas
imul
xor
shr
icebp
dec
aaa
lds
pop
push
mov
xchg
adc
push
out
cmp
bswap
out
into
sti
mov
fbld
in
clc
push
adc
xchg
ret
in
pop
jbe
fistl
push
inc
and
imul
push
xchg
xchg
cmp
push
out
cmp
sti
fisttpl
mov
adc
mov
jmp
loope
inc
addr16
andb
fwait
sub
dec
shll
mov
ja
adc
pop
loope
addr16
pusha
jl
cs
ja
loopne
mov
inc
out
push
les
adc
sti
test
dec
xor
mov
outsl
imul
test
js
fsts
mull
jmp
sahf
jecxz
sbb
loop
outsl
xor
leave
sbb
jmp
test
dec
jge
mov
push
out
gs
or
push
adc
movsb
xor
add
negb
xchg
add
jb
ljmp
js
ds
jmp
or
mov
sub
shll
xlat
and
pop
inc
in
mov
enter
and
dec
mov
inc
loop
sbb
cmp
jecxz
push
test
clc
cli
in
inc
lahf
mov
pushf
xor
sub
sbb
sub
jbe
xchg
icebp
call
sbb
mov
divl
adc
scas
pop
jne
mov
out
sbb
shrl
xchg
xor
test
loope
mov
aad
push
leave
push
movsl
into
or
xor
sub
scas
dec
jbe
adc
jbe
sub
out
mov
fdivr
ret
jecxz
aad
out
dec
mov
ret
and
repnz
push
or
int3
xchg
adc
pop
jbe
mov
repnz
pushf
iret
jo
test
adc
loop
jno
insw
and
mov
jp
repnz
or
xchg
mov
mov
in
mov
cmp
cs
mov
mov
dec
insl
adc
push
icebp
mov
scas
jo
addb
je
andl
adc
cmc
push
loope
lea
repz
and
bnd
and
push
xchg
loope
adc
jle
xchg
mov
mov
js
inc
aaa
pop
lods
aad
add
push
push
jno
gs
push
loopne
xor
cmpsl
or
xchg
ret
pop
js
xor
mov
cmpsl
ret
je
sub
push
test
cmpsl
sbb
pop
sbb
dec
add
pop
aam
test
mov
or
jle
cmp
fildll
movsb
inc
xor
mov
lahf
lea
xor
les
inc
in
test
cmp
shrl
cwtl
jg
fstpt
test
mov
sub
jl
cmp
fisttps
shll
mov
cmp
jo
pop
loope
push
mov
mov
pop
or
rcl
movsb
pop
call
jl
xchg
push
fdivrl
inc
xchg
ds
sbb
shll
pop
cmp
dec
xchg
jecxz
out
in
mov
pop
lods
out
sti
in
cli
ja
lret
repz
movsl
in
mov
sti
or
mov
jno
sbb
mov
push
inc
add
jno
xor
icebp
mov
dec
scas
jecxz
or
jle
test
and
stos
les
push
xchg
mov
shrb
mov
int3
add
jbe
out
dec
rcrb
pop
jecxz
push
std
jne
out
out
lock
hlt
enter
cmp
pop
xchg
mov
xor
nop
sbb
jno
ficoms
bnd
ljmp
andl
loope
mov
test
jecxz
jl
or
and
mov
jg
lcall
pop
enter
jne
fnstenv
and
fwait
mov
mov
push
cmp
lds
popf
fisttpl
jmp
jns
je
mov
scas
aaa
scas
fst
jg
push
lods
adc
sti
negb
shll
imul
ds
add
pop
cmp
iret
clc
pop
cmpsb
out
sti
imul
imul
jecxz
jno
cmp
or
loopne
or
dec
arpl
add
outsl
out
insb
loop
cmp
or
in
pop
subl
xor
mov
sub
push
push
into
jg
cmp
adc
push
mov
cld
mov
loop
sub
cmp
jp
pop
leave
push
fisttps
mov
movsl
loopne
inc
push
add
pop
das
mov
xchg
inc
loop
loope
pusha
rcrl
fimull
xor
lock
nop
sti
mov
data16
push
ja
pusha
push
movsb
fdivr
ja
stc
cmp
mov
popa
fbld
sbb
test
lods
add
out
pusha
or
inc
push
mov
mov
repnz
cld
popa
cmpsb
jl
leave
mov
ljmp
xor
inc
das
mov
xor
mov
mov
xchg
lcall
cmpsl
mov
sti
mov
dec
lock
cmp
inc
cmpsb
jmp
mov
push
in
ss
repnz
push
int3
les
pushf
sub
jae
das
icebp
mov
lock
xor
and
sarl
xor
adcb
inc
pop
xchg
jge
jo
out
repz
xchg
lock
pusha
iret
imul
mov
sbb
in
xchg
call
iret
xchg
lcall
lret
jno
cmp
jne
push
sahf
shll
mov
adc
out
inc
in
loope
sbb
popa
stc
test
mov
in
sbb
call
movsl
or
in
loope
xor
mov
in
and
mov
or
push
adc
mov
hlt
cmp
cmpl
ficomps
mov
or
in
mulb
fldl
sti
or
jl
xchg
pcmpgtw
xor
outsb
std
lods
out
sub
bt
int3
jg
cli
or
je
mov
sbb
mov
mov
shll
loope
lret
mov
xchg
roll
jb
pinsrw
push
cmp
lcall
add
sahf
pusha
je
cmovno
popf
insl
mov
cmc
mov
jg
mov
jmp
dec
outsb
xchg
mov
in
or
notb
push
jle
xor
mov
inc
sub
sbb
adc
das
les
ja
pop
je
adc
daa
xor
sub
insb
pop
clc
les
mov
test
arpl
xlat
arpl
mov
sub
pop
push
stc
dec
popf
scas
push
aad
pop
in
shr
cmc
aaa
stos
fistl
push
ja
jno
lods
mov
lock
addr16
ret
adc
inc
mov
loopne
sub
mov
jo
test
sbb
xor
mov
movsb
shll
test
sbb
add
pop
push
or
jmp
mov
jle
js
imul
into
cli
test
or
test
cmp
pushf
jge
or
pushf
jmp
dec
out
cli
sub
ret
cwtl
rolb
cmp
mov
pop
xor
out
pop
out
imul
fdivl
lret
dec
pop
pop
mov
mov
jle
mov
out
imul
ficoml
xlat
or
out
data16
mov
push
insb
jns
aas
iret
mov
xchg
hlt
roll
icebp
or
xchg
in
and
and
jg
iret
imulb
or
ljmp
loopne
sti
jo
divl
add
in
adc
inc
ror
mov
jmp
jg
subl
pop
out
or
mov
pop
cmpsl
aad
dec
mov
mov
popl
roll
mov
mov
ret
repnz
or
lock
test
and
fcmovne
stos
int
inc
xchg
int
or
sbb
addr16
mov
lock
faddl
sub
stos
repz
mov
mov
add
shll
jmp
and
jne
das
data16
sahf
lods
shrb
pop
test
mov
push
jne
mov
lahf
xchg
int
es
into
mov
push
out
push
fmul
addr16
shll
popf
jno
and
test
pop
sub
xchg
jmp
int
mov
jecxz
and
xchg
fsubp
add
out
jns
fldcw
scas
sti
andb
pop
loopne
aas
jl
xchg
ffree
sti
sahf
outsl
fdivs
dec
lahf
roll
xchg
pop
jno
lods
outsb
popf
fsubrl
pushf
mov
push
cmc
and
ficompl
mov
stc
jle
cmp
push
inc
sahf
repnz
cmp
push
dec
cmp
shl
or
cwtl
shlb
sti
add
push
loope
imul
push
cmp
scas
out
or
clc
jecxz
lret
leave
jecxz
push
inc
icebp
nop
sbb
push
sti
cmpsb
xor
into
aad
out
test
fwait
cwtl
jmp
fnstenv
in
mov
mov
jmp
fndisi(8087
lret
lcall
fwait
sti
mov
mov
aad
push
out
call
push
ficomps
popa
imul
dec
das
sbb
mov
sbb
pop
shld
in
jne
insl
fs
fidivl
jge
sub
pop
in
shlb
cmpb
cmc
jno
cmp
imulb
stc
outsl
dec
pop
adc
push
out
adcb
movsb
jb
mov
out
inc
popw
mov
cmpsb
fnstenv
jns
lret
movsb
out
cld
test
sbb
mov
fsubr
frstor
push
in
out
sarl
out
and
mov
outsb
cmpsb
jg
xor
std
das
jnp
iret
mov
sub
daa
mov
out
addb
inc
sarb
int3
mov
fmull
push
jns
into
and
jo
push
out
xchg
mul
and
and
sti
jne
add
sub
cwtl
lret
pushf
xor
mov
pop
arpl
sti
dec
cli
adc
movsb
mov
out
js
movsb
dec
mov
mov
ficompl
cmp
and
jmp
inc
dec
add
fnstcw
cmp
pushf
inc
bound
iret
sub
scas
into
bound
xchg
mov
inc
xor
adc
mov
gs
mov
mov
imul
cmp
mov
mov
mov
movsb
imul
mov
add
in
je
loopne
xor
iret
ljmp
mov
jno
jno
pop
call
mov
loop
fistl
or
lcall
loop
dec
or
testb
adcl
fidivs
das
movsl
loopne
dec
add
fistpll
or
test
xchg
bound
scas
loop
stos
inc
adc
jnp
ss
rolb
fcompl
push
inc
stos
lret
loope
sub
lea
es
mov
xchg
pop
pop
les
cmpsb
scas
int
or
mov
xchg
into
pop
sub
cwtl
xlat
rcr
xchg
lahf
pushf
or
dec
shll
jle
mov
cmp
arpl
and
lcall
or
push
xchg
gs
xor
fdiv
and
enter
push
mov
push
int
stos
pop
cltd
xor
stos
rcrl
scas
scas
insb
js
sub
rcll
cli
iret
sub
bound
mov
les
or
adc
pop
ljmp
cmp
cmpsl
aas
test
or
inc
inc
cmp
test
mov
fs
or
cs
mov
push
sahf
lods
sub
inc
arpl
into
scas
testl
ret
xor
push
lcall
out
add
ret
mul
jecxz
jmp
mov
mov
lods
push
xor
testl
dec
fnsave
jg
data16
add
lret
pop
ljmp
cltd
xor
dec
dec
pop
xlat
dec
addr16
mov
dec
sub
mov
sub
sbb
in
dec
repz
lock
cwtl
ja
or
sahf
inc
repz
call
shll
sub
and
outsb
sub
int3
mov
fwait
lret
xchg
jg
repnz
in
leave
shl
out
in
loope
in
adc
mov
mov
jne
jl
aaa
stos
xchg
dec
xchg
and
add
cltd
lret
pop
inc
inc
je
adc
scas
or
hlt
xchg
inc
or
mov
call
or
dec
cli
xchg
add
push
cmp
lret
js
bound
cmpsl
iret
loopne
aas
jns
push
sub
cmp
call
push
fistl
pop
addr16
fimuls
sub
xchg
xchg
gs
push
xchg
fisubrs
stos
xor
cmp
fistps
or
pop
jle
lret
lea
jmp
push
push
xchg
sbb
mov
mov
mov
xlat
cmc
mov
sbb
les
mov
sahf
cmpb
pop
jl
repz
add
mov
stos
fcompl
xchg
pop
test
test
stos
in
add
pop
pushf
out
jge
dec
xchg
push
arpl
jle
rcll
into
into
ja
arpl
pushf
mov
xchg
inc
outsl
jno
dec
add
outsl
dec
pushf
loope
sbb
orl
orb
lcall
mov
jo
mov
sahf
add
ret
cld
iret
gs
rcrb
cmp
push
mov
jecxz
insl
xlat
mov
das
lret
sub
jecxz
andl
dec
adc
lea
xor
repnz
or
cmc
add
xchg
loop
cmp
in
push
jecxz
or
and
loope
shlb
arpl
arpl
sub
jp
ficomps
jne
icebp
jmp
xor
enter
js
mov
fisttps
push
pop
int3
out
pop
fldcw
push
or
and
inc
cltd
jno
pushf
or
or
fisubrs
xor
pop
add
mov
int3
cmp
in
dec
loop
sub
neg
jbe
mov
fwait
int3
add
or
or
or
stos
ffreep
test
adc
addr16
jge
or
leavew
mov
jecxz
call
sti
push
test
pop
adc
mov
pop
jns
or
je
insl
jno
in
iret
mov
fisttpl
loope
in
ljmp
jae
fdivr
or
and
in
or
scas
rolb
ret
icebp
out
hlt
iret
sbb
icebp
fistl
mov
aas
enter
loopne
mov
cltd
jo
add
xchg
jmp
repnz
loope
movsl
sarb
loope
pop
les
pop
jbe
loope
fcomp
inc
xchg
scas
jecxz
shrl
insb
push
jg
jg
mov
push
loopne
lock
xchg
dec
or
cli
mov
push
fisttps
mov
movsb
ret
jnp
xor
pop
outsb
xor
or
jo
mov
xor
cmc
popa
fnstcw
mov
dec
add
jg
pop
pushf
fimull
jmp
aam
mov
cmp
dec
ret
popf
xchg
push
in
data16
stos
mov
enter
xchg
xchg
ret
xor
adc
sub
mov
out
add
fistl
and
out
mov
les
lock
test
mov
pop
lret
stc
int
jne
les
and
dec
mov
sub
or
cs
pop
dec
and
mov
enter
mov
mov
stos
cmp
jnp
inc
movsb
lret
pop
shlb
pop
mov
pop
movsl
adcb
test
mov
mov
sbb
ja
shl
jae
add
cmp
jbe
mov
xchg
ljmp
div
cmc
arpl
dec
xor
or
fcompl
fwait
and
push
sbb
loope
outsb
stos
jg
xor
out
jle
sub
pusha
sahf
jb
jne
lea
or
das
xlat
mov
jle
cld
cmova
fnstenv
icebp
lcall
mov
out
bound
xchg
test
sbb
jmp
inc
jb
loope
loope
push
shrb
pop
iret
mov
xchg
cmp
enter
xchg
shrb
mov
cmp
int
adc
outsb
or
fwait
push
mov
rorl
mov
or
jb
mov
je
outsb
sub
fcmove
iret
cwtl
imull
jg
les
dec
jno
xlat
or
sub
push
jnp
fstl
fwait
or
push
insb
int3
or
push
push
cmp
shlb
jle
jnp
add
jno
mov
mov
popa
fwait
jo
shlb
lea
sub
cmp
or
out
jecxz
inc
mov
adc
in
bound
pop
cmp
mov
cmp
sub
mov
aas
or
pop
dec
push
fcoml
push
popf
lods
loopne
ljmp
add
mov
xchg
dec
pop
xchg
popa
adc
icebp
cltd
or
fsubp
imul
jb
mov
lret
insl
xorb
std
lods
sar
fidivl
adc
cmc
jge
test
or
inc
stos
orl
out
jno
fwait
xor
mov
movsl
mov
and
stc
sub
dec
icebp
lock
bound
jecxz
adc
or
test
jg
jecxz
pushf
add
jle
mov
jecxz
pop
imul
mov
jecxz
xlat
push
mov
jo
outsb
jb
hlt
cmpsb
lods
ljmp
inc
je
shll
xchg
loopne
rclb
insl
inc
xchg
shl
xchg
ret
aad
outsb
xor
jne
je
push
rorl
addr16
mov
jl
fsubrl
jle
sti
in
test
rcr
inc
xor
iret
dec
push
aaa
xchg
and
pop
jo
cmp
cmpsl
shrb
ljmp
mov
push
sbb
arpl
xchg
loop
lds
cmp
jle
inc
ljmp
fucomi
xchg
add
mov
in
sub
ds
shl
jno
mov
lea
mov
push
int3
cmp
push
sub
lcall
xor
jo
cmp
xlat
or
add
mov
mov
push
mov
push
loope
and
ds
imul
and
dec
in
outsl
inc
mov
xchg
sbb
rorl
pop
mov
movsl
notb
mov
mov
push
jecxz
mov
adc
popf
jmp
jae
dec
out
call
cmp
pushf
stos
ficompl
push
inc
lock
push
iret
test
xor
adc
out
mov
pushf
and
fdivl
jae
data16
lahf
or
aam
out
jmp
xchg
jg
pop
jbe
pusha
icebp
popf
mov
loope
testl
jle
leave
inc
mov
push
or
gs
xchg
inc
inc
sarl
add
mov
in
mov
jl
jg
sbb
mov
enter
dec
jecxz
cmp
lods
jmp
sbb
xor
test
push
pushf
xchg
cmp
lret
add
xlat
jmp
iret
add
addr16
imul
mov
out
xor
enter
cmp
mov
add
or
sub
mov
out
inc
adc
mov
pop
mov
enter
jae
mov
xor
xor
push
mov
adc
and
imul
cmp
shlb
lods
mov
xor
jle
or
into
std
jno
push
push
out
pushf
mov
cmpsb
push
stos
lds
mov
sbb
gs
jl
in
lret
or
push
sbb
push
loopne
daa
repnz
add
adc
pop
repz
popf
jo
xchg
jg
mov
rorb
lret
sbb
arpl
cwtl
xchg
and
call
xchg
mov
or
jb
sub
and
sub
sahf
ja
dec
xchg
dec
mov
mov
les
js
lds
leave
or
lret
mov
and
jne
xor
jle
shrl
xor
cmp
loope
push
or
out
int3
mov
outsl
cs
pushf
xchg
shll
lds
push
dec
adc
lods
es
lock
fisubrs
lods
imul
loop
lret
adc
xchg
int3
aad
enter
adc
gs
shrl
shr
jecxz
loop
fcmovnbe
mov
mov
sub
rol
jmp
int
lret
outsl
cmp
push
and
mov
jle
iret
xor
ja
adc
aaa
lret
push
push
rol
ljmp
sbb
pop
xchg
mov
insl
lock
adc
outsb
imul
sub
popa
enter
cmp
cs
mov
aaa
sti
cwtl
ljmp
shr
dec
cmp
mov
sbbb
ljmp
fnclex
repnz
pop
das
dec
or
sahf
sub
xchg
inc
idivl
mov
pusha
mov
ljmp
cmpsl
daa
clc
ljmp
or
stos
add
aas
je
unpcklps
mov
sub
imul
push
mov
test
fldt
pop
and
and
mov
xor
sub
xor
mov
mov
xchg
push
adc
xchg
rolb
cmp
movsb
add
cmp
orb
shrb
pop
pusha
fisubl
cwtl
adc
mov
stos
clc
inc
int
pop
icebp
loop
inc
jno
add
nop
xor
jmp
and
xchg
and
xchg
sbb
hlt
jmp
or
add
ret
rol
dec
pop
ret
cmp
pop
fcmovnb
pop
mov
iret
jecxz
dec
lret
ljmp
xchg
imul
sbbl
jb
roll
ljmp
repz
lcall
pop
xor
lcall
fwait
add
mov
fistl
icebp
or
nop
pop
subb
and
arpl
pop
fwait
inc
or
jae
adc
push
cs
or
into
repz
bound
int
push
nop
sub
je
rcr
ljmp
inc
ljmp
ljmp
js
sub
std
or
jl
mov
ljmp
aad
aas
mov
mov
inc
mov
jno
ljmp
daa
ljmp
push
daa
inc
dec
lret
addb
mov
cmpsb
loope
lret
sysenter
add
fmul
into
ljmp
repnz
add
xchg
pop
lcall
lret
pop
pop
pop
sbb
scas
xor
test
add
add
lret
jecxz
adc
shrl
out
and
inc
sar
ljmp
pop
sub
and
mov
ljmp
iret
jmp
fistpll
xchg
adc
icebp
fsubr
mov
call
fildl
add
xchg
fdivp
jecxz
imul
mov
add
adc
sar
mov
out
pushf
push
loopne
pop
fwait
or
xchg
and
pushf
aad
lock
pop
cld
pop
jecxz
jg
jb
jo
mov
xchg
mov
leave
fwait
in
jecxz
sti
push
outsl
mov
ret
out
mov
mov
xor
cmpsl
shll
mov
and
fwait
xor
inc
xchg
xchg
pop
fisttpl
or
addb
repz
add
int
icebp
mov
xchg
test
jo
xor
lods
add
mov
ret
or
push
cmpsb
and
out
sbb
inc
popl
fldcw
xchg
out
out
ds
sub
fstps
jg
or
mov
inc
incl
cmp
aas
dec
out
cmp
sbb
fucomip
push
jno
out
icebp
ss
dec
cmp
sub
aas
sahf
jp
jp
out
roll
loop
inc
lcall
in
cmp
imul
xchg
cmpsl
xchg
fldenv
dec
dec
pop
pushf
je
pusha
dec
mov
jmp
pop
movsl
repnz
mov
mov
sahf
pop
mov
jns
lcall
xchg
pushf
xor
lods
in
imul
sarl
sbb
aam
in
xchg
and
fnstenv
shrb
push
out
lahf
hlt
test
popf
iret
jg
pop
pop
movsl
jp
jge
inc
icebp
jbe
xchg
xor
sbbb
dec
push
lds
xorb
xchg
popf
pop
push
cs
pop
xchg
inc
enter
stc
pop
cltd
sti
pop
mov
out
call
jno
sub
outsl
xchg
sti
andl
pop
in
cli
cmpsb
test
or
mov
jecxz
data16
push
rclb
push
jo
enter
adc
lods
xor
sub
in
fisttps
cmp
jle
cmp
stos
xchg
mov
sbb
sub
mov
ljmp
rcr
and
add
pop
pop
pop
pop
cmp
and
ja
ret
arpl
imul
cwtl
inc
adc
ret
add
adc
mov
lods
into
xor
add
cltd
dec
int
int
gs
mov
loopne
push
sbb
mov
test
pop
xchg
insb
xchg
ret
in
jno
jns
mov
jb
lods
and
mov
or
and
add
xor
jmp
sbb
xchg
push
dec
lahf
in
dec
jo
sub
jae
icebp
push
or
xor
fistpll
pop
movsb
cmp
out
aas
inc
and
mov
enter
jae
mov
enter
cmp
inc
imul
fwait
or
imul
jno
stos
xchg
sahf
pusha
sub
not
mov
test
dec
inc
ljmp
xor
das
xor
icebp
or
negl
mov
or
push
push
push
mov
xlat
in
lock
divl
test
call
imul
sahf
aad
sbb
hlt
rolb
sbb
in
fiadds
pop
out
and
subb
mov
movsb
in
lret
repnz
je
xor
in
call
lahf
jmp
clc
jp
jo
mov
stos
sub
outsb
mov
inc
push
push
nop
jo
lods
fildl
and
xlat
out
jb
repz
jl
rorl
xchg
inc
cmc
jbe
push
and
iret
xchg
push
pop
cs
jo
scas
fists
loop
movsl
xchg
push
mov
pop
cmpsb
jmp
inc
jb
lds
cmp
pop
icebp
lods
std
inc
jno
adc
scas
inc
and
add
sbb
icebp
jg
sub
imul
jo
out
jae
hlt
pop
test
mov
in
pushf
into
or
jg
into
cmc
es
jo
jmp
test
cmp
xchg
test
push
jnp
dec
inc
lcall
std
fdiv
mov
mov
push
data16
loope
sub
pop
jbe
mov
and
adc
mov
sbb
mov
add
pop
cmp
ret
jmp
outsl
test
aam
add
push
mov
fistpll
rcll
mov
sahf
mov
or
mov
sub
stc
shll
repnz
mov
ljmp
scas
xchg
std
into
lods
rcrb
push
push
lock
hlt
mov
js
lods
loopne
out
lret
test
iret
aas
out
and
jae
shr
jle
or
push
xchg
push
fwait
xlat
pop
add
mov
xor
test
shll
ret
loope
out
and
cmp
cltd
dec
mov
fs
int3
xlat
xor
aad
out
arpl
sbb
idiv
sti
mov
cmp
enter
std
insb
sbb
andl
nop
cmpsl
ljmp
mov
xchg
xor
sbb
sub
cmpsl
pop
lods
jo
pause
jle
mov
mov
int3
cmpsl
sbb
jbe
cmpsl
sahf
lahf
mov
jmp
xchg
sbb
ljmp
fisttpll
test
mov
fnstcw
fists
jae
jg
cmp
or
pop
sbb
sub
test
inc
dec
setno
movsl
gs
xchg
mov
cli
add
into
xor
mov
leave
mov
jg
loop
and
int3
jmp
mov
iret
scas
int3
lds
mov
push
arpl
mov
xor
jge
and
lods
fucomi
enter
cmp
mov
sbb
loope
fldl
lret
xlat
ret
push
jae
push
xor
push
insl
jae
jae
jb
mov
test
icebp
mov
nop
pop
cmpsl
or
pop
push
adc
xor
leave
cs
aam
aaa
or
and
and
inc
fstl
repnz
add
fdivl
loope
in
jb
sub
xor
push
cmpsl
or
lds
bound
scas
add
jecxz
sub
stc
scas
push
ja
inc
adc
aad
add
push
out
shr
jbe
adc
aas
in
cmp
or
das
fldt
jecxz
push
mov
xor
pop
mov
add
push
add
xor
out
xchg
cmp
std
push
push
mov
repnz
out
out
stc
xor
cmp
or
jnp
jae
mov
bnd
dec
adc
data16
test
xor
in
jbe
leave
jg
mov
sti
dec
fstpt
cmpxchg
inc
sub
xlat
sub
outsb
fiaddl
xchg
scas
jo
xor
mov
divl
pop
mov
push
mov
enter
mov
out
jge
cltd
and
cmpsb
jo
sbb
iret
pop
call
pusha
pushf
stc
punpcklwd
push
lret
xlat
jmp
and
scas
pop
mov
sbb
pop
jmp
pop
sub
mov
jmp
jno
or
rsqrtps
sahf
sbb
mov
pop
test
leave
fidivrs
mov
adc
jb
pop
mov
cwtl
je
push
and
inc
inc
fbstp
inc
inc
mov
or
test
insl
mov
jo
mov
test
or
popa
cwtl
mov
lret
push
xchg
out
adc
dec
mov
sbb
aad
movsl
cmp
rcll
inc
sti
push
dec
in
cmp
repz
add
mov
jo
aaa
inc
cmp
out
aas
repz
push
and
pop
inc
mov
jg
cs
popa
adc
mov
insl
hlt
icebp
insl
gs
mov
jecxz
cld
sub
int3
stc
iret
pop
add
push
outsb
dec
dec
sti
adcl
jnp
inc
lock
push
loop
data16
sbb
sub
dec
cld
xlat
loope
mov
mov
addr16
scas
test
push
sbb
shll
test
jnp
arpl
subl
sub
icebp
push
arpl
enter
ds
sarb
or
adcl
cmp
and
cmpsb
xor
cmp
insb
ja
shrb
mov
xchg
dec
jp
test
or
icebp
movsb
mov
into
scas
stc
lcall
sub
stos
pop
pusha
rcl
cmp
adc
push
inc
fs
xlat
mov
mov
iret
mov
repnz
cmp
fs
mov
int
into
popf
jbe
inc
arpl
jo
loop
outsb
ljmp
mov
mov
lcall
shl
fbld
pop
jbe
insb
jnp
enter
mov
xlat
mov
pop
imulb
ret
mov
scas
or
adc
enter
jo
icebp
lods
adc
xchg
push
or
jl
dec
cmpsl
sbb
inc
jae
fildll
lret
mov
sub
add
push
mov
xlat
mov
push
gs
cmp
mov
mul
daa
fwait
xor
or
dec
xor
dec
xchg
jmp
aaa
mov
jg
stos
sub
stos
push
xor
xlat
xor
dec
stos
enter
lods
cltd
xchg
aaa
movsl
fidivl
cmp
adc
ss
scas
push
jne
dec
icebp
sub
shr
jno
lock
cmp
push
fildll
gs
das
add
xor
adc
mov
roll
and
dec
loop
icebp
sarb
arpl
bound
movsb
loope
icebp
shlb
loopne
xor
mov
addr16
mov
rorb
icebp
sti
imul
jbe
stos
lret
cwtl
fstp
stc
mov
call
pop
lcall
orb
xchg
sbb
adc
pushf
mov
xorb
repnz
mov
cwtl
lahf
mov
aad
scas
sbb
inc
mov
sbb
pushf
les
loop
adc
and
adc
loope
enter
repnz
adc
mov
aas
sbb
into
add
jo
jne
inc
ficomps
mov
xor
pop
mov
push
gs
push
sbb
fcomi
stc
mov
test
and
mov
fistl
adc
push
pop
mov
jmp
push
hlt
inc
jmp
mov
xchg
ss
test
jg
fsubl
mov
jmp
or
outsb
into
hlt
xchg
lret
sbb
cmp
sub
dec
mov
push
cmpsl
inc
cwtl
cmc
hlt
jg
jb
rsm
scas
adc
push
daa
inc
enter
je
dec
out
inc
pop
xor
and
call
rcr
xchg
jb
outsl
inc
mov
in
xor
sbb
adc
xor
daa
lahf
jae
adc
testb
out
mov
test
outsl
iret
xchg
loopne
mov
push
nop
out
out
mov
pmulhw
leave
pop
mov
sub
xor
cs
int
jg
sbb
sbb
ss
mov
test
dec
adc
nop
outsb
fisttps
cmp
mov
cmp
inc
jp
mov
or
or
mov
out
enter
imul
pop
lcall
jecxz
jae
movsb
stc
incl
lea
mov
mov
shlb
aas
mov
xor
xchg
or
scas
hlt
inc
fisubs
mov
jge
in
xor
ds
jg
clc
mov
movsl
mov
or
jmp
outsl
xchg
xor
pop
testl
fucomip
arpl
push
fidivrs
mov
sub
push
mov
mov
mov
cltd
dec
ret
adc
loope
sahf
xchg
push
movsl
stos
test
mov
sbb
loop
fimull
daa
outsb
and
xchg
dec
xor
inc
scas
adc
add
pop
dec
mov
and
add
cwtl
cmp
push
mov
xchg
test
outsl
cmp
push
aaa
shlb
add
rcll
or
outsl
es
test
loopne
stos
in
int
jl
data16
and
and
inc
cmp
inc
test
sub
mov
mov
inc
leave
adc
lods
xlat
scas
jmp
movsb
adc
ret
andps
jl
xchg
inc
mov
mov
rcrl
ret
ljmp
filds
xchg
outsl
insl
mov
shll
inc
mov
adc
adc
or
andl
jg
cmp
call
fs
sarl
rclb
ljmp
cmp
jb
sub
loopne
cmc
sub
push
jb
in
xchg
and
dec
jmp
int
scas
xchg
jae
mov
jae
adc
cld
lea
sub
out
dec
loope
xor
or
jb
pop
xchg
cli
mov
lock
leave
jp
out
or
jecxz
mov
mov
mov
add
les
pop
scas
sar
dec
or
cmc
mov
pop
add
out
rorl
pop
mov
cld
inc
pop
lret
insl
decb
xor
cmp
inc
lods
daa
mov
cmp
inc
push
sbb
es
aas
and
jl
repnz
imul
in
jb
lds
push
jecxz
insl
andl
dec
arpl
push
iret
cld
jmp
pop
gs
adc
or
iret
out
jle
int3
dec
inc
dec
jecxz
out
or
pop
xchg
and
pop
jns
lret
jne
sub
rcll
mov
ljmp
std
jge
cmp
nop
stos
mov
pushaw
mov
or
sbb
fdivrs
jbe
xchg
das
pop
xlat
jg
mov
xor
and
ljmp
fistpl
in
vmptrld
jg
adc
fs
push
out
jmp
sub
idiv
sahf
int3
xchg
scas
lcall
or
into
jle
pop
pop
jle
es
loope
inc
dec
hlt
call
mov
aaa
ja
lea
and
mov
mov
mov
ret
stos
pop
cmp
jo
insb
fstps
ljmp
test
cmpsl
sbb
aad
call
rcr
aad
das
push
mov
sti
mov
sti
cld
into
fdiv
dec
sbb
jge
or
push
in
negl
hlt
sbb
mov
pop
mov
data16
arpl
loop
lret
xchg
add
sbb
mov
scas
push
fsubl
cltd
and
mov
daa
test
test
pop
inc
lret
push
lret
push
jle
test
xor
adc
mov
es
adc
outsl
icebp
pusha
xchg
push
into
filds
je
into
and
lds
fs
jnp
or
cmc
fsubr
out
mov
call
xlat
out
lret
push
pop
loope
cmp
mov
fsubrp
xlat
fistl
xchg
mov
jge
out
jg
in
and
cli
popa
and
cmp
bound
lret
mov
xor
inc
aam
je
loope
xor
xor
jne
jle
dec
or
mov
or
xor
add
pop
cli
sbb
jge
cwtl
bound
frstor
xchg
sti
cmp
ret
pushl
or
jecxz
jecxz
xor
insb
mulps
sub
adc
xchg
aad
push
outsb
aad
push
lods
and
dec
or
jb
jae
xorl
fistps
jnp
outsl
sti
movsl
sub
dec
inc
lret
sbb
cmp
fsubrs
out
aam
sahf
loop
stos
outsl
in
out
shll
rol
clc
outsb
in
sbb
out
je
push
imul
xchg
out
dec
pop
fstl
pop
fidivrl
stc
inc
dec
call
pop
sub
or
daa
mov
jmp
jle
xchg
dec
cmp
or
xchg
aaa
icebp
add
movsl
jp
lds
or
mov
mov
pop
jmp
jle
and
xchg
cli
scas
icebp
or
dec
icebp
clc
sahf
jle
push
dec
rclb
ret
mov
push
in
icebp
or
into
scas
xchg
test
mov
inc
es
jo
test
ret
cmpsb
xor
fsubs
add
stos
push
sahf
mov
out
dec
or
addr16
out
outsb
loope
xor
or
ficompl
cmc
adc
push
mov
insl
mov
jg
mov
clc
imul
add
imul
push
jae,pn
ljmp
outsl
pop
and
sbb
lods
icebp
mov
cwtl
cmp
fmuls
shr
shr
jl
lea
mov
pop
data16
pop
aas
aam
cmc
insb
push
xor
or
outsb
mov
mov
lea
or
and
loopne
stos
loope
inc
fisubl
mov
lret
je
adc
mov
push
xchg
or
in
shll
fcomp
sarb
inc
cltd
sbb
test
and
mov
mov
jge
xchg
popf
dec
lret
lods
stos
lods
fmul
ds
enter
lods
popf
cmp
mov
mov
jb
inc
xchg
cmp
pop
sub
call
loop
leave
dec
mov
xchg
pop
sbb
jnp
fists
mov
inc
lret
cmc
rcll
rorb
or
sub
mov
jne
imul
out
ret
jle
inc
adcb
pop
push
push
xchg
stos
pushf
jb
jg
mov
imul
ret
lea
aam
pop
pop
into
outsl
aam
mov
outsl
scas
inc
mov
cwtl
or
and
pop
jmp
mov
push
fnstcw
inc
jecxz
inc
xchg
jle
dec
mov
mov
insb
xor
jbe
in
add
scas
bound
jmp
arpl
lahf
lret
pusha
sbb
mov
in
add
sub
sbb
movsb
jbe
gs
pop
inc
in
jnp
jl
bound
dec
or
scas
insl
test
xchg
cmp
arpl
xor
or
xor
cmp
fdivrl
cltd
mov
sbb
dec
movsb
fdivs
rcl
jg
mov
push
mov
inc
xor
ret
out
mov
loope
add
pop
or
xchg
dec
imul
test
sbb
xchg
loope
inc
shll
int
push
push
or
fnsave
in
out
loop
dec
mov
sub
inc
pop
clc
jno
jnp
jo
outsl
dec
dec
rorl
mov
dec
lret
sbb
in
call
xchg
das
shr
out
add
call
pop
imul
mov
popf
fnsave
lret
gs
call
je
xchg
int3
xchg
xchg
adc
dec
cmp
popa
fildl
into
mov
stos
test
divb
mov
jg
lahf
mov
mov
out
mov
lods
xchg
adc
push
sti
jb
adc
sub
fists
add
dec
xor
fstpt
out
out
stos
mov
test
gs
xor
xchg
mov
add
jbe
sbb
pop
xor
jl
jns
xchg
dec
xor
fistpl
stc
or
fs
in
movsb
inc
adcl
jmp
jecxz
insl
ficomps
sbb
pushf
cltd
cmpsb
xchg
leave
cmp
sub
xchg
mov
lds
mov
mov
push
ljmp
cmc
sub
add
scas
in
neg
loope
and
lret
push
fistpl
push
push
xchg
sub
fnstsw
fstl
lock
or
pushf
incb
rolb
pop
and
in
add
inc
push
repnz
movsl
lahf
xorb
lret
inc
sub
or
inc
inc
outsl
ret
xchg
fnsave
cld
or
dec
pop
mov
mov
jae
and
out
jg
stc
lahf
mov
sbb
pop
enter
iret
cmpsb
add
jecxz
test
bound
jno
sti
mov
call
pop
daa
sbbb
and
jmp
int
mov
rcr
fcmovnb
push
jns
cmp
inc
rol
call
jecxz
std
sbb
test
fcmovnu
xor
out
mov
or
lahf
xor
jecxz
adcb
nop
ljmp
dec
popa
les
pop
or
jle
les
popl
lock
sbb
in
lods
xlat
jb
mov
pop
punpckhbw
xor
jg
in
xchg
movsl
shrl
lock
xchg
out
clc
fsubs
outsl
inc
push
insl
out
cmp
cwtl
out
test
icebp
ljmp
push
pop
scas
pop
xlat
jnp
mov
lds
aam
xchg
pop
jns
gs
sbb
pop
pushf
xchg
out
mov
stc
mov
imul
iret
add
ljmp
xlat
cmp
sahf
sbb
jecxz
sbb
std
shrl
iret
pop
dec
lods
lahf
jo
mov
out
mov
jbe
mov
ret
mov
das
mov
fstpt
push
push
pop
cld
ja
fistl
cmp
out
jnp
mov
pushf
mov
sarl
mov
pushf
test
loopne
pushf
sub
scas
ja
insb
sbb
mov
cmpsb
and
gs
jbe
sub
lcall
fistpl
ficoms
fisttpl
repnz
je
cmp
or
cmp
shll
push
fistps
rcl
add
mov
shll
lret
imul
mov
leave
call
dec
mov
cmpsb
mov
mov
cmp
mov
jp
or
xor
pop
jbe
and
push
push
enter
xor
sbb
sbb
es
jl
ret
mov
rcl
fdivl
jecxz
xchg
clc
inc
push
adc
cmp
stos
pop
iret
lock
mov
in
popf
adc
ret
push
xor
sbb
fsts
test
out
sti
cmp
hlt
in
adc
in
pop
test
mov
in
xchg
loope
aam
push
rcrb
clc
imul
jne
pop
xor
or
std
insl
orb
iret
ljmp
mov
stos
stos
jb
rcll
bound
push
dec
faddl
fwait
and
popw
cmp
addr16
dec
aam
enter
xchg
xor
add
gs
push
aaa
mov
sbb
in
sub
sub
lret
mov
dec
add
aam
scas
shl
mov
subl
imulb
inc
mov
pop
and
lock
and
loope
xchg
hlt
jp
or
sti
scas
push
xchg
mov
arpl
or
dec
rcll
iret
cmpsw
sub
sbb
xchg
pop
cwtl
dec
adc
jnp
xchg
or
les
or
and
fcoml
cli
ljmp
ja
stos
xchg
popf
mov
aas
sbb
stc
sub
mov
push
out
into
dec
and
fildll
jnp
or
in
xchg
xchg
pop
dec
xchg
or
cmp
and
das
pop
imul
fisttpl
or
mov
lods
lret
sub
pop
adc
mov
mov
jecxz
inc
sub
int3
outsl
xorb
outsb
fs
xor
in
add
loope
inc
cmpsl
sub
stc
inc
push
xchg
pop
scas
shl
daa
dec
mov
rorl
pop
cld
pop
arpl
sbb
icebp
push
fdivl
out
leave
jnp
test
sarb
push
int3
push
movsl
jecxz
pop
inc
dec
lods
mov
in
test
loopne
inc
sbbl
out
jb
bound
pinsrw
cltd
out
adc
push
sub
dec
and
push
jg
hlt
orl
movsb
mov
xchg
xor
out
leave
loopne
hlt
test
jnp
test
stc
jno
lcall
fwait
and
outsb
mov
mov
fistpll
or
and
jg
push
loop
daa
fisttps
sbb
fldl2e
lret
scas
dec
xchg
scas
or
push
mov
fnstenv
lods
sub
push
fisubrs
lods
mov
jnp
pop
fdecstp
jecxz
mov
out
das
and
push
loope
and
das
push
lds
or
divl
xor
jb
enter
in
loope
out
xor
loopne
cmp
into
loope
pop
xor
lcall
mov
and
scas
addr16
push
lock
ret
jmp
push
icebp
in
lods
subb
push
xchg
mov
ss
mull
cmpsb
pop
add
test
adc
cmp
ljmp
sub
mov
cmp
xchg
out
jmp
dec
lock
les
gs
xchg
popa
mov
xchg
adc
arpl
jnp
push
push
dec
int3
xor
fidivs
jo
out
push
pop
sub
movsl
xlat
sar
or
hlt
stos
fldenv
jb
das
mov
jle
call
sbb
dec
xorl
loop
mov
dec
cmp
mov
les
push
mov
sub
inc
pushf
addr16
add
cld
cmp
mov
popa
iret
mov
jbe
jnp
mov
movsl
jl
in
out
pusha
cmpsb
scas
xchg
outsb
push
inc
movsl
fdiv
in
stos
ret
fisttpll
lods
mov
enter
smsw
jl
mov
sahf
or
xchg
jno
adc
jbe
mov
fisttpll
sbb
mov
jne
xlat
out
popa
cmp
pavgw
dec
dec
jbe
imul
jno
sub
pop
xlat
dec
jbe
jl
scas
dec
ret
dec
loopne
das
out
and
leave
fnstenv
xchg
sbb
dec
fdivr
dec
lock
xchg
add
mov
outsb
test
jb
dec
test
sub
mov
fcmovnu
xchg
psllw
iret
cmp
pop
pushw
arpl
xlat
icebp
rcrl
loop
xor
int3
das
ja
mov
jmp
mov
es
mov
and
or
xor
jmp
lock
mov
sti
mov
inc
lret
int3
fptan
ljmp
add
mov
push
xor
mov
jle
iret
mov
rorl
es
pop
std
shll
outsl
out
out
pusha
icebp
and
scas
mov
rclb
pusha
dec
or
out
bound
loopne
js
xor
pusha
jbe
into
mov
mov
mov
push
sbb
dec
iret
inc
shrb
in
jae
mov
fsubs
mov
pop
loop
hlt
xor
xor
ja
in
fistpll
movl
push
sbb
out
dec
test
sti
outsl
xor
jmp
mov
call
jmp
mov
data16
dec
inc
cmpsl
jmp
push
xchg
fistps
mov
sbb
xchg
mov
adc
pop
push
fsubrl
cmpsb
call
stos
in
insl
scas
or
faddl
lret
mov
cwtl
xchg
shrb
stc
mov
outsl
mov
jbe
jle
cmp
mov
mov
jg
scas
cmp
push
lds
push
rorw
popf
dec
sbb
fbld
mov
jo
mov
add
pop
out
ss
pusha
fbstp
stos
xor
xor
es
dec
nop
adc
outsb
pop
gs
scas
sbb
pop
push
mov
jno
mov
xor
mov
rol
xchg
setne
loope
mov
cmp
repnz
mov
cmp
movsl
icebp
mov
movsl
jl
nop
or
jb
dec
clc
stos
push
aam
pop
cmp
push
dec
xchg
rcll
sub
inc
popf
xchg
jecxz
lock
push
dec
ljmp
dec
or
push
jp
or
and
lods
sub
inc
insb
inc
mov
inc
cmc
pop
das
insl
add
xor
lods
mov
and
push
push
jmp
lods
test
jp
test
adc
pop
pushf
test
adc
mov
sub
dec
loop
repz
jae
ljmp
stos
jl
and
pop
scas
ret
jmp
jge
cmp
xor
inc
imul
or
sbbl
gs
fdivr
or
int3
into
pop
push
inc
and
jnp
mov
rcr
pop
mov
insb
pop
adc
cmp
xchg
sub
out
push
jne
mov
xlat
jmp
or
les
mov
addr16
sub
push
scas
jne
out
shl
jbe
scas
push
xchg
dec
adc
or
jo
xchg
mov
jecxz
mov
daa
lcall
adcb
stos
cmp
sub
xchg
adc
in
int
or
xchg
mov
loopne
addr16
pushf
sbb
data16
int
lcall
adc
lea
pop
xlat
xlat
pop
iret
cmp
pop
icebp
fcompl
pop
sub
out
dec
inc
push
into
pop
mov
mov
mov
inc
jne
and
shrl
out
popa
lret
cmp
sti
leave
popf
pop
ret
xorb
out
push
push
aas
lcall
lea
int
loope
popa
testb
hlt
aam
fmuls
xchg
inc
ror
mov
frstor
iret
dec
inc
pushf
mov
fistps
pop
mov
filds
dec
sub
pop
mov
scas
push
mov
pop
cmp
push
lea
rcll
fisttpl
xlat
cmp
das
jae
popf
scas
sbb
shrl
mov
mov
call
add
sbb
dec
sti
xor
enter
jae
push
xchg
pop
or
andb
inc
jno
mov
xchg
mov
adc
mov
or
shl
lret
loope
push
cmp
jmp
idiv
fs
xchg
mov
jbe
out
bound
mov
push
inc
leave
adc
ljmp
xchg
in
sti
ss
ret
ljmp
fninit
loop
pop
push
cmc
jae
fnsave
xchg
cmp
fidivrl
ljmp
mov
lods
jecxz
mov
mov
lahf
mov
outsl
jnp
push
das
ret
out
jne
in
fistpll
mov
imul
cltd
int
push
dec
push
lahf
lods
jb
ret
sarl
lock
shl
rclb
jecxz
xchg
push
out
inc
out
pop
inc
out
ljmp
xchg
lahf
incl
sub
and
imul
out
mov
call
ret
ljmp
dec
imul
dec
inc
dec
setl
sub
ljmp
dec
in
ret
ljmp
loop
or
test
mov
ret
mov
rcl
leave
ljmp
daa
loop
ljmp
mov
sti
pop
subb
sbb
cli
stos
aas
fisttps
test
inc
popf
mov
popa
jecxz
cs
xchg
sub
imul
js
jge
aaa
jb
and
xor
sub
mov
or
add
pop
dec
sub
ljmp
push
pop
leave
bound
jnp
pop
js
jbe
jne
or
push
popl
fsubrp
mov
loope
inc
inc
lds
lahf
push
lock
xlat
stos
pop
jecxz
xchg
sbb
add
jecxz
add
dec
or
imul
aaa
ss
dec
cmp
push
sub
gs
jb
sahf
push
sub
rcll
push
shrb
aas
popa
shl
ror
ljmp
sub
push
aas
mov
mov
ret
jnp
inc
loop
mov
sti
jmp
out
sub
xor
xchg
xchg
lea
lcall
xor
int
out
sub
sarl
mov
roll
loope
xchg
aam
jl
pop
inc
dec
ret
iret
or
out
inc
push
dec
rolb
push
fsubrl
ret
pusha
hlt
pop
mov
and
lret
int3
xchg
mov
sti
sbbl
push
shlb
fucomip
les
xchg
jge
ret
pop
mov
inc
jb
pop
mov
jp
cmpsl
popf
ljmp
sub
pop
pop
iret
outsl
cmpsl
mov
sub
and
mov
jecxz
xor
pop
mov
daa
rcrb
in
adc
sahf
cs
fcompl
mov
arpl
nop
loope
inc
lds
mov
call
out
and
repnz
mov
popf
popl
inc
xor
pop
jnp
sub
in
lcall
sub
loope
popf
scas
adc
imul
cmp
jnp
sti
ret
stos
aas
mov
repnz
int3
aas
sub
repz
out
ljmp
rcll
loopne
shr
lcall
shll
mov
pushf
push
loopne
ror
ljmp
jg
lea
fisubrl
mov
lcall
in
icebp
jmp
jmp
repnz
in
loop
repz
fcmovu
pop
ja
or
scas
pop
bndstx
push
fs
cmc
mov
mov
adc
sub
mov
mov
imul
jne
fists
or
lods
ljmp
jbe
imul
mov
xor
imul
sub
adc
xchg
pop
or
mov
decb
mov
aad
push
jae
or
inc
shll
lret
insw
in
pop
xchg
stos
into
adc
mov
adc
and
push
push
mov
rclb
sub
stc
sar
or
cmp
cwtl
pop
adc
arpl
dec
cmpsl
fimuls
cwtl
ret
das
cwtl
ljmp
lea
mov
cmp
fcmove
mov
or
pushf
push
xchg
in
push
popf
out
add
dec
adc
leave
movsl
inc
daa
jne
xor
sub
jg
icebp
jmp
scas
or
jno
xchg
push
jnp
jno
aas
mov
pushf
sub
loop
stos
ja
cmp
pop
pop
jo
stos
lock
je
mov
sahf
mov
dec
addr16
pop
pusha
mulb
out
add
dec
sbb
jnp
subl
or
test
loopne
shll
loopne
dec
or
aam
cmc
jecxz
add
add
call
idivb
xchg
push
pop
and
xor
mov
icebp
mov
mov
xor
shr
jbe
pop
push
inc
xlat
xchg
int
ret
dec
out
sbb
out
fiadds
enterw
mov
mov
and
push
sti
das
xorl
pop
jl
out
sub
lcall
movsl
push
fnstsw
sbb
cs
imul
inc
inc
imul
sbb
and
inc
pop
push
std
xor
es
pop
xor
inc
xchg
jb
out
cld
xchg
ret
mov
daa
ds
inc
jecxz
inc
add
sti
sarb
psubsw
xchg
or
pop
pop
out
xchg
call
mov
push
cmp
insb
or
fnsave
out
add
out
call
repnz
shlb
test
mov
fmulp
mov
test
mov
pop
pop
ret
les
mov
lahf
xchg
cli
add
int3
xor
push
sti
mov
jne
or
jecxz
sub
jmp
loope
xor
in
sbb
inc
fbstp
imull
fldt
loop
xor
xchg
cmc
cwtl
stc
pop
repz
gs
jecxz
mov
aaa
add
or
mov
pop
dec
and
call
jmp
jecxz
or
das
call
or
sbb
imul
icebp
and
mov
lcall
movsl
inc
js
das
test
loop
fcomi
cltd
ret
fisttps
in
cmc
sbb
movsl
inc
jl
in
push
dec
dec
push
mov
xchg
test
or
jno
fiadds
add
dec
push
out
jne
jmp
fimull
jmp
out
mov
jnp
xchg
mov
lods
jge
mov
aam
test
mov
lcall
sub
sbb
dec
or
fistps
aad
lcall
inc
fwait
xor
test
mov
leave
fisubrl
shll
shl
jecxz
sub
into
cmpsl
or
mov
xchg
psubw
xchg
out
cld
out
mov
fisttpll
js
pushw
or
in
rcrl
ljmp
and
int
fdivrs
sbb
movsb
dec
jmp
adc
mov
out
call
mov
sti
jo
jne
in
cmp
notl
lods
iret
shlb
out
into
dec
jo
pushf
out
into
ficompl
cmpsl
in
fistl
movsl
pop
adc
out
jns
mov
inc
jbe
popa
cwtl
into
lods
xchg
sbb
push
sbb
ss
cltd
mov
vmwrite
inc
test
pushf
adc
int
imul
push
sbb
cmp
out
pop
jle
jl
out
arpl
xchg
cltd
dec
pop
adc
in
dec
in
sub
lock
jmp
daa
popf
or
roll
out
sub
xchg
cmp
push
scas
jno
out
mov
shl
sbbl
mov
mov
in
jne
or
lds
dec
popf
dec
xlat
sub
fdivrs
jle
cmp
jmp
adc
mov
push
daa
mov
cmp
jge
cmc
mov
leave
shll
jnp
in
loop
gs
mov
fisttpl
pushf
dec
lcall
mov
or
lret
add
or
or
sub
lds
xlat
jecxz
and
cmc
xchg
mov
shrb
or
aaa
mov
mov
dec
movsb
dec
gs
dec
popa
xor
cmp
mov
into
popl
out
inc
ljmp
add
arpl
jbe
enter
inc
lock
jle
and
and
les
inc
fwait
stos
inc
mov
push
loopw
fsubs
enter
ljmp
into
mov
insl
in
push
daa
jle
pop
scas
outsb
mov
outsl
jecxz
and
jnp
inc
add
dec
mov
nop
jo
mov
sbb
movsl
call
scas
inc
dec
into
mov
outsl
mov
test
lock
push
repnz
ret
lods
les
xorb
pop
rcll
push
jmp
pop
xlat
mov
cwtl
into
push
push
scas
xchg
sub
cmpsb
fiadds
mov
sub
jecxz
sub
fwait
pop
mov
shlb
shlb
int
push
pop
ja
sti
test
jno
jge
fldcw
dec
xchg
fisubrs
mov
fwait
into
or
mov
out
jge
fsubr
out
jl
mov
ret
or
mov
xor
or
mov
push
jb
jmp
and
dec
fimull
inc
outsl
loopne,pn
jns
cmc
and
or
jbe
jbe
arpl
mov
cmc
in
or
bnd
sahf
cmpsl
jp
scas
add
popf
scas
loopne
fdivs
outsb
push
out
inc
jl
sbb
dec
fnstcw
fdivl
loope
mov
rcl
scas
sub
mov
jnp
aas
cmp
push
jecxz
stos
es
push
mov
pushf
sbb
lods
lret
fnstcw
lock
fdivs
call
into
popa
pop
add
mov
call
push
pop
adc
insb
mov
lret
jne
jo
or
jns
lret
out
jb
fucomi
fisttps
out
xchg
and
jg
hlt
int3
xorb
fsubr
lahf
out
xchg
test
hlt
fistpll
pop
inc
icebp
lret
sbb
mov
inc
insb
loop
int
aad
sub
mov
fidivrs
mov
mov
pusha
das
test
out
ret
pop
inc
push
jns
jbe
sarb
outsl
rcll
sbb
leave
or
insl
lods
sarl
mov
sub
popf
cltd
pop
ror
jge
dec
in
fcmovnu
jg
fildll
call
es
mov
jno
stos
jmp
icebp
pushf
nop
mov
fcoml
fcompl
clc
rol
or
xchg
inc
xor
inc
mov
sbb
aam
rcrl
mov
jno
jg
jb
sbb
pop
and
stos
inc
rorl
int3
push
enter
arpl
jo
xlat
repnz
jle
jne
ret
sbb
ds
shrl
fmul
jbe
jns
or
in
mull
stos
xchg
push
or
data16
jl
xor
ja
adc
push
pop
test
loop
pushf
stc
pop
out
dec
mov
pop
sbb
mov
nop
fildl
push
dec
pop
jnp
lahf
pop
jmp
add
inc
out
imul
jmp
xchg
test
std
aam
mulb
test
frstor
ret
xchg
xchg
adc
push
xorl
outsl
pushfw
in
pop
pop
lahf
jg
lret
arpl
stos
and
popf
mov
loopne
shr
or
xor
sbb
stos
iret
pop
aaa
sbb
sbb
fsubrl
cwtl
push
sub
pusha
aad
lea
and
test
mov
addr16
add
dec
dec
out
shll
jo
out
popl
mov
imul
jmp
mov
mov
jo
mov
shll
jmp
jecxz
fcmove
mov
mov
cmp
mov
je
rcrb
dec
mov
hlt
pusha
jle
mov
or
out
add
sub
or
sub
push
jg
jno
out
dec
mov
enter
or
scas
aas
repz
jg
fdivrl
sub
aam
dec
sub
push
or
data16
pop
lret
jnp
push
adc
mul
shl
add
jecxz
outsb
sahf
jecxz
push
in
mov
or
mov
adc
jne
inc
fnstsw
lea
fldcw
mov
nop
divl
or
ret
jns
xchg
mov
shlb
fcmovu
xchg
icebp
and
sarb
imul
leave
loop
mov
loopne
loope
test
push
xchg
idiv
lret
pop
mov
mov
test
jb
outsb
dec
clc
rcr
mov
les
push
cmpsl
jg
mov
xor
icebp
push
mov
jns
xchg
or
lds
loope
repnz
lock
movsl
cmpsl
pop
in
call
in
jle
jo
scas
icebp
fisttpll
jb
mov
push
test
mov
icebp
in
xchg
repnz
mov
enter
stos
sbb
in
xor
sti
fnsave
jo
sub
cmc
push
call
push
mov
or
shl
movsl
bnd
imul
mov
xchg
jno
dec
jecxz
fs
ret
push
pop
dec
cmpsl
iret
out
lock
aam
xchg
js
lahf
adcl
pandn
in
std
rcl
push
mov
fldcw
in
inc
test
mov
pop
aad
cld
hlt
pop
sub
adc
or
xchg
mov
jo
fisttps
loopne
jp
xor
mov
int
lods
imul
je
inc
jne
mov
or
cmp
arpl
mov
and
push
fcomps
sub
jo
gs
mov
daa
or
daa
mov
dec
and
cli
or
jbe
stos
dec
dec
in
push
dec
and
popf
arpl
outsl
inc
ret
out
or
aaa
imul
out
push
xorl
clc
and
mov
shl
xlat
jecxz
lock
movsl
mov
sbb
les
iret
mov
pop
xor
jb
sub
push
daa
daa
cmpsb
pop
pop
loop
mov
sti
mull
push
mov
jle
adc
pop
or
outsl
insl
pop
sbb
cld
call
jns
add
daa
ss
and
call
arpl
and
mov
mov
or
into
hlt
stos
fdivs
mov
out
xchg
mov
lock
shl
stos
mov
ljmp
lock
push
and
sub
data16
inc
add
or
cmpsb
hlt
add
sarl
repnz
fnstsw
jne
mov
pop
dec
push
shll
shrl
mov
bnd
into
or
sahf
pop
icebp
cmpsl
xor
shlb
xlat
or
int
rcr
adc
inc
inc
push
pop
clc
push
cltd
adc
loop
int3
add
lods
sbb
push
jmp
sbb
inc
xchg
cmp
dec
inc
stos
xchg
or
jecxz
mov
pop
mov
lods
lahf
shl
sbb
push
arpl
mov
je
xor
push
mov
or
xchg
adc
mov
add
jg
pushf
jp
into
popf
sub
aad
rorl
sbb
mov
loope
dec
dec
lods
mov
shrl
push
shll
cmpsb
jo
fiaddl
outsb
jmp
iret
or
mov
sbb
lret
cmp
sahf
push
mov
sub
jge
subb
xchg
pop
das
jne
adc
cltd
es
mov
or
jp
pusha
mov
test
or
xchg
mov
push
cmp
jg
sbb
cmpsl
xor
jbe
add
jg
ret
rcrb
scas
shll
jge
das
test
pop
mov
xor
mov
mov
xlat
xchg
xchg
mov
lock
mov
repnz
call
add
mov
mov
int3
sbb
mov
adc
andb
daa
jg
sbb
daa
je
or
loop
mov
popf
xchg
das
sbb
pop
fstpl
mov
lcall
pop
dec
out
lahf
fists
hlt
dec
dec
and
bound
push
mov
imul
outsl
adc
insl
loope
sub
int3
mov
push
inc
push
enter
fildl
sub
mov
imul
lock
xor
repnz
jecxz
fsubs
and
gs
xchg
aad
mov
mov
icebp
pop
out
and
jmp
loop
loopne
push
add
movsl
jnp
push
jge
mov
outsb
mov
out
mov
jl
test
icebp
mov
or
rcrb
xor
push
mov
xor
xor
or
cmp
cltd
shll
pop
stc
pop
repnz
jne
outsb
and
test
xchg
jge
stc
sbb
icebp
lahf
loop
icebp
or
std
insl
imul
mov
jbe
loopne
loop
push
movsb
adc
daa
loopne
pop
lret
filds
lret
or
nop
jo
or
int3
or
xorb
aad
out
testl
fisttpl
xchg
dec
into
mov
sub
jle
leave
aaa
adc
xor
sub
fldt
push
sbb
cltd
push
test
and
loope
xor
fwait
iret
adc
ds
in
aad
jo
addr16
mov
push
xor
hlt
push
sbb
lcall
sub
aaa
pop
pop
loopne
dec
xor
pop
in
mov
mov
cld
fstps
loopne
cmp
jl
sti
frstor
adc
add
sbb
out
adc
hlt
inc
ds
enter
add
jecxz
sahf
rclb
and
in
pop
lock
incb
fsts
add
das
inc
jb
outsl
adc
push
shr
xchg
scas
jns
bswap
sbb
popf
test
mov
out
push
add
mov
dec
sub
ja
mov
cld
adc
enter
out
in
loope
stos
lret
sbb
mov
ret
fs
adc
mov
in
jecxz
xorb
sub
stc
xorl
jp
mov
outsb
insb
shrl
idiv
stos
mov
xor
cwtl
scas
jecxz
icebp
xchg
stc
fisttps
cmp
popf
or
xchg
pop
divl
mov
lahf
mov
xor
scas
gs
lods
mov
ret
pop
test
test
pop
ret
add
gs
jle
mov
jns
sub
and
das
cmp
cmp
mov
xor
or
mov
mov
clc
enter
cwtl
dec
fs
push
aad
hlt
jno
dec
wbinvd
sbb
dec
shr
cmc
shr
or
fsub
sbb
cltd
hlt
sti
decl
sbb
ja
ror
mov
cld
jecxz
mov
roll
jmp
imul
cmc
pop
fwait
mov
and
dec
sub
sbb
out
jg
inc
out
daa
es
jp
jns
mov
or
sub
fwait
imul
ljmp
shl
cmpsb
ret
fwait
xchg
or
dec
shr
testl
dec
ljmp
push
dec
mov
rolb
sub
ljmp
or
rcl
lret
rclb
fisubs
xor
addl
fdivrp
push
shl
call
sbb
ret
push
imul
ljmp
loop
shr
inc
push
es
pusha
mov
sbb
aaa
mov
pop
loopne
loop
fisubs
mov
or
fisubs
mov
call
jl
mov
jle
scas
imulb
mov
mov
and
lea
ljmp
bound
mov
mov
fucomip
mov
sub
sub
jnp
in
mov
loopne
jl
mov
or
jmp
loope
daa
cmpsl
iret
loop
sub
adc
cs
jmp
and
fldenv
in
push
mov
imul
xor
mov
xchg
roll
sti
lcall
shrb
in
sbbb
ljmp
jecxz
daa
ljmp
pop
sbb
push
cld
jb
lret
mov
shlb
ljmp
mov
cmp
cmpsl
addr16
xor
ljmp
es
lea
ficoml
ljmp
add
addr16
sahf
loopne
lds
sti
pop
jno
ljmp
ja
mov
adc
outsl
shlb
mov
fisubl
mov
jecxz
sub
xchg
cmp
xchg
push
out
mov
jecxz
jnp
or
fs
xchg
push
push
stos
lods
mov
jns
mov
shlb
fidivs
jl,pt
push
mov
or
jl
sbb
pop
popf
data16
xor
mov
lret
mov
fimull
loope
sub
pop
movsl
mov
icebp
mov
or
xchg
ret
adc
ja
test
lock
popa
inc
sbb
inc
push
pop
mov
shll
xor
xchg
fs
out
sub
out
sbb
out
pop
mov
aad
cmp
push
pop
stc
insb
xchg
imul
call
les
stc
pop
pop
mov
jg
into
sbb
shlb
jo
out
jp
iret
jge
pushf
mov
inc
fsubl
stos
jg
add
push
loope
cmp
xor
jnp
mov
push
les
loopne
jg
popf
mov
or
push
xchg
mov
icebp
sbb
adc
popf
add
imul
add
test
add
and
out
hlt
and
imull
sti
and
push
xorb
dec
cwtl
xchg
jo
pop
test
pop
and
fildll
shlb
or
xorl
call
push
or
cli
push
rcrl
push
lods
cmp
test
aad
pop
cltd
fdivr
mov
icebp
mov
ret
cmp
mov
jle
jb
or
je
ret
pushf
fmuls
pop
gs
xor
xchg
cmp
loopne
popf
ja
test
xchg
mov
bnd
stos
push
pop
movsl
jg
mov
jo
iret
in
cwtl
push
sub
jnp
push
movsl
cs
cmp
out
mov
fwait
outsl
dec
cld
cld
movsb
out
push
les
xor
mov
arpl
repnz
or
movsl
add
inc
lods
ja
push
adc
in
mov
addr16
in
adc
pop
mov
loop
sbb
test
pusha
lock
mov
cvtps2pi
sub
or
mov
imul
or
mov
rolb
sahf
lods
pop
pop
fld
push
stc
pop
subl
sarl
pop
outsb
sahf
push
lret
mov
and
fcomip
fcmovu
mov
test
lret
fisttpll
fldcw
test
cmp
ljmp
lds
loop
mov
imul
lods
sti
aam
sub
sarl
pop
mov
cmp
enter
inc
into
scas
out
push
or
jne
sub
test
fwait
jne
stc
mov
out
out
push
jp
std
insb
stc
pop
sub
push
xchg
das
test
mov
aam
sbb
aas
dec
fcoml
fists
iret
lahf
hlt
cmp
jb
lret
jge
push
mov
pop
shl
fwait
mov
into
cwtl
adc
sti
cld
mov
call
icebp
sbb
loopne
mov
int3
stos
lea
bound
shll
mov
and
xchg
mov
xchg
loop
sbb
es
int3
enter
add
pop
cmp
imul
fstps
mov
jl
or
pop
fmulp
jno
or
jbe
enter
push
hlt
das
mov
mov
jecxz
lret
insb
or
jnp
lock
cmp
mov
lds
mov
jge
sub
and
cmc
xchg
loopne
sub
dec
xchg
les
or
mov
xlat
and
fsubrl
mov
jge
push
insb
mov
and
shrb
pop
insb
icebp
outsb
mov
shlb
and
xlat
stc
jno
sub
jecxz
jg
test
inc
insl
movsb
arpl
adc
loope
xor
lock
ret
jecxz
push
movsb
dec
and
paddd
enter
and
stos
dec
dec
xchg
pop
aam
idivl
inc
sbb
inc
in
out
sub
dec
dec
outsl
std
or
inc
call
dec
jmp
xor
or
inc
stos
aad
mov
iret
ret
jle
enter
push
jp
xor
out
fidivs
testl
rol
bound
jg
loope
pop
jp
jge
pop
jecxz
xchg
std
jo
fdivs
and
jg
pop
movsl
cmc
shll
push
sti
add
jle
adc
sti
jp
push
pop
mov
fstpt
sbb
int
gs
repnz
or
push
dec
aad
sti
add
cmp
mov
mov
adc
jno
xchg
add
imul
orl
iret
repnz
data16
cmp
mov
negb
adc
sarb
lods
cmp
mov
in
cmp
push
mov
inc
fistpll
insb
imul
add
push
test
lods
pop
xchg
push
or
outsl
shrb
jo
and
push
movsb
dec
jge
rcll
js
mov
jecxz
outsl
in
fs
fisttpll
jp
in
stos
repnz
xchg
jnp
sahf
adc
jbe
das
push
out
loope
pushf
out
loop
outsl
jle
sbb
dec
ljmp
mov
lcall
jno
dec
jbe
je
lods
push
rcrb
push
repnz
push
fsubp
inc
aam
push
mov
fisubl
adc
arpl
aam
push
push
mov
mov
int3
jg
mov
scas
dec
rorl
xchg
fiadds
cmpsl
fsubs
gs
mov
jo
jbe
push
push
faddp
lret
repnz
js
xchg
and
sbb
sbb
lods
fwait
jmp
gs
in
xchg
fsubrl
insl
mov
adc
or
popa
mov
pop
das
adc
insb
sbb
into
mov
fimuls
fwait
pop
lock
pop
stc
add
lods
push
aam
test
in
int3
in
faddp
outsb
imul
inc
repnz
rcr
bnd
rorl
loopne
dec
into
jo
test
and
in
sbb
sub
cltd
cmp
loopne
iret
les
cmp
lds
lods
outsl
cmp
push
rep
divb
push
out
into
inc
test
mov
repnz
jns
mov
repnz
mov
jae
cmpl
cld
add
jle
in
loop
call
outsb
sbb
ret
dec
mov
inc
test
or
mov
jmp
adc
ror
int3
or
ljmp
push
lea
jge
pop
or
sarl
mov
dec
cmp
inc
insl
fsubs
inc
xchg
mov
test
dec
scas
daa
adc
bound
inc
into
mov
rclb
scas
xchg
test
test
loopne
ljmp
daa
mov
inc
pusha
cmp
lds
inc
jns
out
mov
push
xor
pop
roll
stos
and
daa
rolb
dec
push
mov
test
enter
fs
mov
mov
test
xchg
rorl
in
popf
hlt
lods
outsb
call
mov
rorb
lods
pop
mov
aam
sub
shr
outsl
outsb
pop
nop
popf
shl
jecxz
movsl
or
or
mov
stc
movsl
pop
dec
cmp
mov
push
sbb
cs
popf
aas
push
mov
dec
pop
jb
data16
mov
lahf
jmp
js
cltd
mov
out
or
jae
pop
mov
pushf
int
dec
xchg
pusha
pop
loop
cmpsb
xchg
out
push
jle
or
jle
stos
jecxz
jno
jbe
xchg
push
jmp
fcomps
movsl
shrl
fildll
fstpt
data16
mov
outsl
mov
xor
inc
iret
in
push
scas
dec
xor
ret
add
in
ffree
imul
scas
fdivp
clc
fwait
movsb
loope
out
cmp
jecxz
loop
stos
sub
inc
fwait
lds
imul
fwait
pop
dec
push
loop
ret
gs
push
sub
es
test
aam
mov
scas
add
shrl
popf
out
out
repnz
or
sbb
xor
fucomp
and
push
scas
mov
popf
xchg
scas
add
das
sti
xchg
hlt
mov
dec
mov
mov
xor
loop
mov
popf
and
stos
adc
negb
fimull
in
int
lock
stos
popa
in
es
ljmp
xchg
in
mov
shr
add
cmc
cs
xchg
jg
jecxz
adc
std
stos
jp
dec
sub
mov
dec
sarl
xchg
xchg
lods
dec
out
pop
jo
xchg
mov
add
lea
jecxz
loope
in
or
pop
icebp
lods
stos
xchg
or
mov
cmp
cmp
fcoms
inc
aaa
jl
xor
sbb
jmp
aam
inc
bound
stos
adc
xchg
xor
mov
jo
mov
loope
arpl
jae
add
lret
ficoms
out
lds
aaa
mov
roll
jp
add
inc
push
fs
pop
repnz
jo
loope
cli
and
mov
call
mov
std
sbb
popf
mov
push
imull
xchg
xor
loope
inc
pop
loopne
hlt
jb
call
inc
mov
and
push
push
das
mov
outsl
jle
sub
popa
dec
mov
rcrl
mov
je
test
es
insl
cmp
xchg
sub
aas
xlat
popa
mov
xor
loope
sti
jle
mov
mov
loope
lcall
or
push
or
sub
repnz
movups
jae
fwait
loope
or
push
adc
aam
shl
lock
inc
sub
push
insb
xor
sub
roll
jp
in
pushf
and
out
pop
fistpll
cs
icebp
stos
dec
ja
add
cmpsb
sti
mov
out
mov
es
push
sbb
out
test
jnp
cmpsb
clc
pop
jg
dec
dec
repnz
addr16
xor
lret
into
jge
iret
imul
sub
cmc
and
cltd
mov
dec
mov
sub
cmc
adc
add
fmuls
loope
loopne
adc
fildl
rcr
jl
cmp
arpl
mov
or
sub
fistpll
xchg
adc
jb
xchg
push
xor
adc
and
dec
jb,pn
imul
mov
mov
add
mov
call
repnz
cli
sarb
or
xor
decl
out
pop
adc
mov
push
jo
icebp
jg
sbb
adc
cmp
push
dec
inc
loope
cmp
sub
test
pusha
insl
sub
mov
xor
pop
xor
mov
xchg
pop
into
cld
push
fcmovbe
dec
mov
push
loopne
xor
jmp
icebp
ret
ud1
mov
pop
cmp
sbb
daa
push
or
jle
jle
aaa
into
xchg
pop
jbe
add
sbb
xchg
jae
jge
xchg
rep
js
xchg
repnz
jo
mov
mov
ret
inc
push
pop
mov
sarl
adc
addr16
hlt
cmp
insl
mov
cmpsl
movsl
sub
pop
inc
lds
lret
mov
push
in
mov
test
cmp
xor
pushf
in
ficomps
fmuls
add
add
push
pop
add
adcl
jne
hlt
mov
mov
lret
maskmovq
mov
xor
jg
popa
outsb
jo
jno
pop
fimull
ljmp
jle
cwtl
pushf
decl
daa
inc
adc
mov
dec
push
mov
imul
sbb
jns
xchg
mov
fstps
xchg
out
lock
je
addr16
pop
fcoms
inc
fwait
pop
add
sti
bnd
adc
mov
jle
jecxz
inc
fisttpll
mov
rcrl
pusha
xchg
fsubs
ljmp
filds
shlb
pop
test
mov
rolb
mov
out
pop
xchg
fsts
shrb
mov
cmpsl
dec
jno
leave
icebp
in
jne
stc
xchg
xchg
mov
xor
jl
gs
fcompl
xlat
inc
lods
jbe
mov
cltd
xchg
push
mov
out
shrb
test
sub
cld
scas
ja
imul
jb
loope
pushf
jns
test
cmp
mov
addr16
lahf
std
add
in
jecxz
jb
daa
fsubrl
and
or
outsl
fisubl
and
xor
pop
mov
lods
into
shl
jp
fiaddl
in
pop
icebp
por
xchg
jo
les
xor
xchg
out
sbb
dec
jmp
mov
jg
lds
push
xlat
xchg
rcr
cli
push
imul
mov
cwtl
sub
inc
pop
xlat
adc
out
stos
adc
icebp
popa
aad
jmp
adc
scas
sub
xchg
es
int3
das
hlt
push
int
outsl
mov
outsb
xor
movsb
xor
pop
jo
xchg
dec
jne
mov
cmp
imul
mov
sti
mov
out
imul
pop
insb
ja
pop
loop
in
or
rorl
cmc
stc
mov
mov
push
adc
aam
cli
fiadds
jge
dec
cs
inc
sahf
pop
mov
add
in
cmpsb
enter
mov
push
cltd
dec
jne
mov
mov
ficoml
or
mov
movsb
cmp
and
push
fidivrl
jmp
out
adc
inc
mov
push
add
xchg
pop
outsl
into
fdivl
adc
mov
shll
sub
test
fiaddl
icebp
ret
ljmp
add
or
cmc
xor
mov
and
scas
pop
std
stos
xor
xchg
shll
xchg
xchg
mov
insl
inc
jle
mov
xchg
jmp
mov
das
loope
push
push
aaa
call
out
loope
cmp
out
adc
inc
test
out
scas
xchg
mov
test
sti
inc
mov
push
add
in
movsl
dec
shrb
scas
dec
add
xlat
push
jmp
leave
mov
jbe
xchg
ret
adc
mov
xchg
fisubrs
lods
imull
add
std
das
xchg
and
mov
sbb
mov
and
add
fildll
enter
adc
filds
mov
jmp
lods
jae
mov
fimull
in
or
addr16
dec
mov
jecxz
mov
fwait
push
push
mov
push
icebp
popa
cmpsl
push
cli
mov
or
mov
mov
mov
divl
mov
xchg
cmp
into
jmp
mov
push
jbe
sub
insl
xor
inc
xor
js
xor
mov
daa
out
in
outsl
xor
inc
pop
imul
mov
das
push
out
repnz
xlat
push
arpl
lods
xchg
stos
repnz
xor
out
lock
pop
loope
or
cwtl
mov
dec
rorl
in
imul
or
dec
mov
jle
or
inc
inc
dec
pop
int3
mov
js
test
repz
fnstsw
fildl
dec
loopne
cmp
cmp
inc
sbb
test
popf
sbb
or
loope
jle
mov
jecxz
in
fstpt
jae
outsl
xor
jg
jle
ljmp
and
xor
in
cwtl
outsl
and
sbb
mov
jmp
or
fildll
add
lret
scas
loope
dec
std
imul
dec
add
xor
ljmp
in
loop
mov
xchg
outsl
stc
cmpsb
fdiv
fwait
or
gs
xor
lret
scas
jp
lock
cmpsl
outsl
fidivrl
sub
mov
and
xor
arpl
test
fstps
and
and
bound
scas
jnp
ds
call
jecxz
ffreep
push
aad
movsl
loopne
loopne
sbb
lcall
lahf
pop
pop
jae
scas
arpl
sarl
mov
push
popa
pop
es
or
int3
pop
sbbl
xchg
inc
rolb
dec
mov
pop
rcrb
cs
inc
pushf
and
mov
pushf
lea
cmp
jg
hlt
call
mov
sub
fldl
mov
push
pusha
push
loop
mov
add
sub
movsl
out
ljmp
pop
test
bnd
xchg
loope
lret
dec
inc
pusha
jmp
dec
iret
into
stos
inc
push
add
xchg
imul
or
pop
inc
pusha
enter
shll
not
push
jecxz
pushf
cwtl
xor
pop
inc
mov
xchg
or
jge
lret
rol
in
scas
dec
jp
push
xchg
loope
popa
ret
pop
ds
cmp
mov
jecxz
out
sub
push
arpl
dec
cmp
push
mov
repnz
pushf
sbb
dec
cmpsl
xor
mov
fsubl
jo
xchg
lahf
hlt
insl
mov
cmp
xchg
ret
std
enter
add
fimull
mov
dec
jns
mov
in
mov
popf
pop
call
lock
mov
shl
insl
addr16
or
and
pop
and
outsl
sbb
pop
xor
call
mov
dec
sti
push
cltd
decl
aam
test
jb
xchg
je
jg
jno
enter
aam
xchg
out
sub
icebp
icebp
xchg
outsl
fwait
pop
cmp
cmpsl
movaps
push
das
out
sahf
cmc
icebp
and
arpl
lock
aam
ja
std
inc
iret
lods
mov
shl
sbb
jle
arpl
daa
pop
jnp
in
push
or
and
arpl
inc
push
sbb
inc
imul
lods
hlt
sarb
mov
out
jmp
inc
mov
pop
bnd
jo
push
push
cwtl
jmp
mov
jg
push
fucomi
rcrl
iret
in
xchg
add
ret
scas
idivl
movsb
push
movsb
lods
je
jmp
cwtl
sbb
dec
pusha
shl
add
cmpsb
insb
xchg
cwtl
jne
shl
push
add
fcmovu
sbb
dec
out
cmpsb
imul
and
call
icebp
push
ror
les
mov
mov
mov
pop
push
test
pop
adc
push
repz
mov
adc
xlat
and
imul
sbb
inc
xchg
xchg
in
or
jmp
movsb
lahf
lods
ret
out
push
out
xor
test
mov
call
or
ret
sub
ret
loop
mov
inc
mov
push
inc
mov
jne
scas
xchg
inc
ja
mov
or
lds
mov
jo
out
sub
mov
or
dec
add
pop
pop
xchg
add
mov
rcrl
sbb
pop
inc
sbb
pop
jg
shr
push
jle
or
push
xor
xchg
mov
aaa
std
lods
mov
leave
out
or
repz
fnstcw
jge
in
jg
into
loop
jecxz
sarl
cmp
inc
sahf
outsb
in
mov
cltd
sub
jg
loopne
pop
dec
test
lea
dec
adc
cli
stos
dec
ja
addr16
je
mov
mov
pusha
daa
movsb
fdiv
loopne
fnstenv
jnp
push
repnz
fxch
pushf
pop
inc
or
sbb
shl
mov
add
andb
and
jecxz
inc
mov
dec
and
mov
lea
repnz
mov
in
cmpsl
inc
xor
fsubrs
lret
clc
add
mov
mov
cmpsb
xor
leave
pop
inc
push
xor
or
scas
push
addl
cmc
iret
push
inc
jb
outsb
ja
fildll
test
xchg
jbe
mov
popf
sub
add
xchg
ds
testb
push
pop
aaa
jle
xor
aad
outsb
fsubl
decb
stc
pushf
sti
push
add
cld
sbb
add
mov
repnz
sahf
mov
mov
out
outsl
and
dec
in
mov
lods
fsubl
repz
ja
mov
jmp
pop
faddp
shl
in
icebp
out
mov
dec
test
jp
mov
push
movsb
push
xchg
cs
jmp
xor
inc
push
fdivrl
jle
push
pushf
sbb
mov
push
dec
mov
inc
loope
scas
repnz
sub
out
sahf
xchg
push
pop
add
cltd
pop
inc
sub
imul
push
mov
iret
sub
out
jg
or
fstpl
dec
scas
lods
repnz
mov
call
sub
fdivr
jmp
mov
xchg
cli
stos
pop
leave
sub
mov
adc
dec
ret
jle
cmp
push
xchg
fnstcw
arpl
jmp
fstl
xor
aam
cwtl
inc
jnp
pushf
sbb
cli
int
adc
scas
push
in
add
pop
into
jg
sub
int
es
mov
je
pop
push
stos
cli
pop
loope
cmp
test
pop
or
inc
pop
in
inc
cmp
in
les
decl
cltd
imul
add
jns
push
lods
xchg
jp
les
mov
imul
ja
imul
jne
popa
sub
xchg
bound
push
lods
mov
or
divl
shr
fst
gs
push
rclb
ljmp
mov
push
imul
loope
iret
mov
mov
mov
ret
ljmp
lret
imul
mov
cmpsl
mov
mov
sub
ret
dec
clc
mov
mov
sbb
mov
mov
rolb
orl
dec
mov
and
sbb
ljmp
rorb
divb
shr
dec
push
or
ljmp
enter
mov
repnz
inc
stos
push
adc
ds
imul
and
stc
add
jo
mov
pop
std
mov
cmp
addr16
mov
or
hlt
enter
xchg
dec
dec
aas
inc
dec
jmp
mov
mov
cwtl
call
mov
test
fimull
pop
pusha
sarb
out
int
ret
jmp
into
repnz
mov
fisttpll
cmp
mov
push
lahf
sbb
fistpl
inc
test
pop
jae
imul
jae
add
fildll
xchg
lods
cltd
insl
jnp
add
pop
mov
lods
jecxz
test
subb
push
lea
sbb
cmp
test
les
movq
imul
leave
fistl
shr
js
sbb
stc
ljmp
jno
jecxz
xor
sub
dec
ljmp
or
inc
ja
cwtl
cmp
stos
xchg
or
jmp
pop
rcrl
sbbb
jno
or
leave
lds
jecxz
ljmp
scas
sbb
lcall
std
pop
jmp
cmpsl
mov
daa
loope
sub
add
iret
push
lea
jmp
xchg
rcr
mov
or
into
xchg
out
outsl
xchg
call
lcall
jge
xor
add
loope
sub
pop
bound
jecxz
roll
fs
fwait
adc
cmc
loop
arpl
dec
rcrl
leave
popa
jmp
pop
ljmp
ret
or
cmpsl
ljmp
sub
mov
loop
jg
es
sbb
inc
cmp
loop
andb
aam
xor
pop
or
fldt
mov
jbe
lret
mov
and
inc
sahf
jmp
das
loop
loope
out
out
rol
sub
popf
pop
adc
pop
ljmp
or
pop
sti
push
pop
xchg
xchg
mov
pop
ljmp
pop
dec
mov
xchg
mov
xchg
mov
pop
shl
ljmp
xor
dec
js
jecxz
push
adc
cwtl
fcmovb
pop
push
ljmp
mov
imul
addr16
jmp
push
sub
test
aaa
fbstp
jmp
loopne
jbe
daa
jp
ljmp
cwtl
dec
sbb
pop
shlb
jp
mov
xorb
loop
mov
testb
mov
insb
xor
lea
xchg
push
cli
cmp
aad
int3
jne
cli
loope
daa
cmp
push
lcall
fildl
sub
jmp
cld
jnp
ror
push
sbb
ret
stos
daa
arpl
xlat
dec
fisttpl
add
rol
sarl
roll
inc
icebp
iret
fsubl
ror
and
ret
jp
fdivrl
jl
xlat
stos
xor
mov
adc
ljmp
pop
mov
cmpsb
popf
jmp
mov
aas
cmpsl
mov
js
jmp
subb
out
sub
scas
push
push
imul
xlat
loop
ror
scas
mov
add
lea
insb
ljmp
xor
jp
dec
stos
pop
pop
repnz
lea
sub
aad
or
ljmp
fcmovu
jmp
jmp
pop
fiaddl
scas
outsl
xor
sub
mov
out
cmp
in
sarb
and
lcall
push
pop
ret
add
mov
loop
ljmp
pop
loop
add
pop
ljmp
shl
rcr
cmp
ljmp
lcall
xchg
fbld
shlb
outsl
addr16
dec
jmp
into
jnp
and
fwait
pop
hlt
adc
nop
sub
insb
push
movsl
pusha
fdivl
lahf
mov
fnstcw
pop
push
call
lock
int
or
adc
lock
inc
mov
iret
cld
fwait
adc
mov
inc
jmp
pusha
inc
mov
jg
cmp
or
inc
jecxz
pop
loopne
mov
dec
repnz
out
jbe
out
insl
jnp
ja
in
pushw
shl
mov
or
fdivl
xor
es
jmp
add
fcmovnbe
bnd
sbbb
ja
test
je
in
push
shll
cltd
testb
pop
inc
mov
mov
adc
fisubrs
imul
push
jb
cmp
in
push
gs
sbb
jecxz
push
pop
jg
stos
cld
fsubrl
loopne
clc
imul
jg
xor
dec
js
lret
and
mov
mov
popf
dec
ficoms
je
rorl
hlt
ja
push
mov
add
rorb
mulb
mov
icebp
add
aam
and
or
cmc
jecxz
lock
mov
in
mov
shll
add
stos
imul
mov
mov
xchg
fwait
jmp
xchg
sti
mov
jecxz
adc
sub
mov
ljmp
out
imul
mov
mov
fwait
pushf
dec
popa
das
pop
mov
sub
lret
and
out
sub
mull
subl
mov
sbb
xlat
shr
in
icebp
add
mov
subl
inc
add
fistpl
jecxz
mov
ret
and
and
jmp
and
adc
loop
inc
jmp
mov
jnp
push
outsb
mov
cmc
fwait
add
adc
stos
dec
in
push
xchg
fdiv
loopne
dec
in
call
call
inc
stos
or
fdivs
sbb
jns
push
iret
pushf
mov
sti
push
inc
loope
sahf
stos
push
loop
shll
mov
fsubrs
jecxz
push
loopne
xor
fisubrl
fistpl
imul
sub
enter
xor
pop
divl
cwtl
cld
ljmp
sbb
inc
shrb
push
imul
lock
loopne
sbbb
repnz
divb
jo
popl
lret
jmp
push
xchg
loop
ja
push
jnp
pop
test
push
and
mov
jmp
shlb
xor
data16
scas
mov
loope
lahf
adc
fimull
dec
insb
out
jo
mov
cmc
mov
mov
fwait
mov
popf
sub
xor
jmp
or
cmc
stc
jmp
lret
pop
aas
mov
lock
addr16
imul
pop
sub
lret
pop
shrl
test
call
push
jp
out
stos
out
bound
xlat
pop
outsl
cmp
ljmp
sub
adc
push
js
lds
xor
xchg
mov
out
in
stc
aad
pop
and
cmp
sbb
and
pop
mov
cmc
inc
ret
out
imul
ret
xor
popf
shlb
rolb
repnz
mov
ljmp
xchg
mov
jae
cld
xlat
adc
fldenv
sbb
dec
rclb
mov
aas
movsl
xchg
clc
iret
lahf
or
jbe
cltd
mov
in
mov
mov
fisttpll
or
adc
cli
insl
dec
outsl
negl
into
add
sub
cmc
scas
pop
mov
or
test
dec
adc
rcrl
and
mov
test
int
mov
loop
mov
or
jg
out
jecxz
int
rcrb
or
mov
mov
cltd
push
mov
jno
jns
ret
in
iretw
xchg
icebp
add
or
push
sahf
in
imul
mov
cmp
cmp
or
loop
push
sahf
mov
sub
or
gs
sub
push
cld
mov
iret
xor
outsl
or
stc
pop
mov
call
fucompp
rcrb
movsl
adc
leave
out
lahf
shlb
popf
fistpl
lcall
pop
xor
push
outsl
xchg
xor
adc
clc
xchg
xchg
xchg
icebp
fninit
cltd
je
sbb
lret
jecxz
xor
hlt
cmc
mov
jmp
mov
imulb
and
jmp
push
fcmovnu
mov
shr
scas
fxch
add
lods
out
xlat
mov
jecxz
push
xor
in
rcl
scas
je
sbb
shr
subb
dec
fcomip
stos
loop
int
sar
lods
loope
lret
lcall
call
lock
out
adc
xor
jb
and
call
push
jmp
dec
hlt
jge
cltd
adc
mov
jmp
mov
shlb
inc
xchg
inc
mov
and
add
test
xchg
scas
pusha
aam
pushf
repnz
hlt
mov
fsubrl
aas
stc
in
int
pop
dec
or
cltd
mov
and
inc
sbb
adc
lahf
mov
mov
stos
and
insl
sti
jmp
xchg
ret
cltd
sar
cmp
lret
lods
mov
pop
jecxz
mov
icebp
testl
lahf
push
dec
mov
xor
cld
add
out
ljmp
or
jns
fdivl
gs
clc
stos
dec
jle
fidivrs
sarb
dec
ljmp
dec
jb
sub
jae
std
insb
jle
mov
fs
into
xor
call
loop
icebp
scas
fdivr
icebp
jmp
pop
addr16
icebp
sbb
and
lcall
shll
gs
scas
or
xor
dec
test
push
hlt
mov
iret
xchg
lods
cltd
adc
jg
iret
iret
jg
repnz
xlat
icebp
mov
push
inc
jge
xlat
sub
push
mov
cmp
jo
mov
enter
xchg
iret
push
add
stos
out
sub
out
mov
adc
xchg
lahf
in
aaa
jae
imul
fcomip
in
sub
jmp
sub
das
push
or
test
aaa
addl
jb
cmpsb
add
dec
fistl
and
rcll
addr16
adc
daa
inc
mov
dec
jb
mov
rcr
lcall
repnz
add
dec
cmp
pop
test
cmc
sub
pop
mov
lret
jge
das
xchg
jg
or
hlt
inc
or
in
jne
mov
out
dec
adc
jnp
sti
or
test
or
and
mov
in
clc
aas
push
les
xchg
cs
mov
imull
push
push
fwait
lret
stos
ljmp
cld
maxps
arpl
out
xor
push
or
fdivrl
clc
imul
gs
call
sbb
imul
mov
aam
pop
xchg
mov
sbb
add
lods
fmull
add
mov
rcrl
cli
push
inc
mov
sti
jmp
push
xchg
xlat
cmpsb
call
cmpsl
clc
xchg
fwait
mov
es
out
lret
filds
add
mov
pusha
shrl
and
mov
pop
dec
data16
dec
fildll
mov
pop
sbb
lock
es
js
cwtl
imul
orl
or
loope
in
fisttpll
insl
jb
test
pushf
cmp
lods
cltd
clc
xlat
popa
jecxz
icebp
add
sub
testb
xchg
movsb
sub
jo
jg
movsl
pushf
adc
mov
adc
shl
in
test
or
test
incl
ret
adc
push
mov
icebp
push
cli
in
into
and
test
sub
into
out
test
cmp
aad
in
xchg
lret
out
mov
xchg
arpl
imul
loope
movsb
imul
xchg
dec
mov
and
jnp
bound
sub
mov
push
pop
lcall
and
clc
xor
mov
dec
push
test
fistpll
stos
dec
shlb
shrb
or
sub
mov
movsb
arpl
sbb
mov
out
sub
add
sub
mov
push
sti
int3
jg
inc
hlt
mov
lock
scas
shl
xor
pop
cs
and
pop
loope
cmpl
movl
lahf
push
nop
loopne
xchg
push
aas
das
xchg
adc
movsl
rorl
cmpsb
and
std
add
rcr
ret
sub
loope
outsl
or
ja
fisubrl
loope
scas
cmp
out
xchg
jmp
mov
aad
fisubrs
xlat
mov
shl
bound
ds
imul
fbld
outsb
aas
inc
scas
std
loope
icebp
lcall
pop
sub
inc
sbbb
mov
mov
push
imul
int
loop
jecxz
xchg
add
cltd
cwtl
mov
sbb
sbb
shll
xchg
fstl
xor
test
stos
push
out
lret
into
dec
lret
or
xchg
xor
repnz
push
or
pop
sbb
adc
aaa
sbb
out
mov
jecxz
xchg
cmp
mov
mov
mov
mov
jecxz
xchg
and
and
and
and
and
and
and
sti
xchg
rorb
lret
sub
jmp
push
mov
sti
xchg
jmp
mov
cmpl
pop
je
push
clc
sbb
sbb
lea
xlat
icebp
jmp
loopne
subl
ljmp
pusha
pop
dec
sbb
cmp
and
shl
mov
out
scas
cmp
cmp
ja
sub
dec
push
cmc
mov
jle
jg
mov
xor
popa
sub
lock
add
sub
mov
or
lahf
jmp
shll
stc
icebp
clc
stos
add
xchg
shlb
icebp
ja
jo
push
jl
jp
pushf
xor
and
add
fidivrs
cmpsl
push
jl
popf
loope
shll
cmp
xorl
int
add
in
xor
stos
adc
nop
sbbl
mov
cmp
jecxz
adc
dec
andl
pop
and
stc
sub
enter
push
ret
jle
mov
lea
xor
rol
and
sti
xor
repnz
sahf
or
xlat
loope
and
mov
mov
dec
jecxz
pop
sub
arpl
shll
cmp
rcl
sbb
xchg
dec
call
push
mov
push
in
jnp
push
prefetcht1
das
daa
fldl
aaa
pop
inc
shlb
jo
push
mov
scas
jmp
jg
or
pop
mov
aam
cmp
xor
inc
dec
or
cmpsb
daa
sub
lds
jns
in
cmp
lret
sti
jge
jmp
add
xor
mov
rol
cmp
adc
add
push
pushf
sahf
aas
mov
push
xchg
jo
adc
lea
or
or
sbb
jns
xor
ljmp
inc
xchg
faddl
pop
les
push
mov
push
out
sub
ss
repnz
imul
cli
jmp
jle
lock
data16
mov
xor
loope
jne
aam
popf
jmp
or
call
add
movsl
out
xlat
jl
andb
call
sbb
in
leave
into
or
shlb
sbb
popa
mov
cmp
stc
pushf
jno
ljmp
scas
adc
push
push
xor
ja
sub
fstp
jmp
test
xlat
in
pop
rol
xchg
xor
test
sub
outsb
jl
adc
mov
mov
sbb
hlt
sbb
cmc
pop
or
je
movsl
cmc
outsl
outsb
mov
lcall
xchg
lock
int3
xlat
pop
jmp
mov
fbld
repnz
jmp
out
loop
xor
sbb
push
mov
cmp
fwait
push
and
ss
xor
cld
icebp
jle
std
insl
sub
scas
imul
push
push
jae
pop
out
arpl
sbb
adc
icebp
ss
mov
mov
decl
mov
and
pop
mov
mov
lcall
sbb
lea
push
lds
sahf
popf
or
cmp
push
sub
mov
mov
push
pop
imull
mov
notb
sub
lahf
fisubrl
xor
mov
xor
filds
jmp
jge
clc
push
push
adc
je
adc
sub
push
pop
lcall
jmp
fcmove
imul
pushf
loope
incb
ja
jns
in
lock
pop
push
mov
aad
jge
jmp
jle
pushf
or
xchg
outsl
rsqrtps
cmp
enter
mov
push
stos
jge
mov
mov
jmp
and
mov
jbe
jmp
pop
bound
out
mov
out
pop
movsb
sub
fadd
scas
ret
hlt
pop
int
cmc
or
je
sahf
add
jmp
in
cwtl
into
adc
cmc
mov
or
adc
or
mov
pop
mov
mov
ss
jecxz
leave
idivb
les
jmp
inc
jb
fiaddl
aaa
add
xor
les
add
push
pop
ja
ja
movsl
stos
sub
xchg
cmp
and
daa
sub
into
push
movmskps
mov
repnz
add
ljmp
cwtl
jecxz
rcrl
ljmp
and
push
loopne
mov
inc
cmpl
es
xorb
xor
packuswb
sbb
mov
loop
mov
jg
ljmp
lahf
jns
lret
xchg
ljmp
ret
ljmp
rcl
ljmp
loop
ljmp
or
or
lock
ljmp
loop
popf
subl
mov
ret
shlb
shr
and
ret
pop
push
rorb
ljmp
loop
ljmp
loop
test
jp
add
ret
ret
and
mov
add
mov
ret
jecxz
and
cli
and
fisubl
shll
mov
jecxz
dec
xchg
mov
pop
lret
shr
imul
cwtl
and
ret
cmp
ficoms
jmp
mov
bound
dec
ret
clc
jecxz
xchg
or
sahf
out
adc
cmpsb
inc
sbb
mov
outsb
loop
add
adc
icebp
sbb
out
mov
and
mov
pushf
xor
xchg
out
rolb
mov
push
out
pushf
fsubl
mov
xchg
xchg
arpl
fwait
rcl
lcall
fsubrp
jbe
pop
stos
mov
mov
repnz
ret
outsb
adc
sti
ljmp
out
stos
push
and
imul
and
pop
mov
xchg
jb
imull
mov
push
outsl
call
mov
push
lret
push
ret
push
mov
mov
in
loopne
sub
or
inc
sbb
mov
je
lcall
adc
out
jg
lcall
or
inc
roll
pop
xchg
mov
mov
jmp
dec
cmp
call
push
subl
mov
andl
xor
jo
pop
sar
rcrl
aaa
fbstp
ja
sbbl
pop
in
sti
adcl
rcll
inc
or
inc
adc
mov
mov
jge
adc
nop
fsubr
pop
inc
scas
add
and
fidivrs
push
psubusw
std
fbld
jno
lret
or
sbb
or
push
mov
lea
mov
test
jle
add
not
out
jmp
jmp
shrb
push
jecxz
or
xchg
push
outsl
test
xlat
jp
jle
cli
cli
ljmp
dec
jmp
insb
mov
idivb
fldpi
pop
mov
jmp
push
clc
jp
sti
xor
rcr
ret
mov
lret
xchg
jmp
insb
mov
fdiv
stos
fistl
or
push
jg
imul
rcr
cltd
xorb
in
jecxz
aaa
xchg
mov
cld
out
jne
sub
pop
out
sti
shlb
jecxz
pop
stc
xchg
daa
mov
xor
jp
cltd
pushf
pop
pop
mov
icebp
cmp
fwait
lock
aaa
mov
sub
fsubrl
cli
or
jae
idivb
jecxz
bound
sahf
popf
fnstcw
jg
mov
ret
mov
lret
popf
cmpsb
popf
mov
and
fxch
into
or
pop
or
mov
sbb
cwtl
fbstp
cmovns
mov
add
xchg
or
push
cs
out
popf
subl
ficompl
cmp
in
loop
xorb
mov
loop
insl
adcl
pminsw
push
dec
loop
adc
mov
xorb
mov
cmc
arpl
jmp
jle
negb
repnz
fwait
inc
ret
idiv
mov
fninit
jg
jg
cmp
movsb
cld
sbb
das
jns
mov
gs
add
xor
mov
das
mov
addb
test
mov
jge
subb
scas
adc
cmpsb
xchg
aaa
inc
dec
enter
push
sbb
ret
shlb
xchg
int
and
bound
sarl
lahf
dec
dec
mov
idivl
out
cmc
jbe
mov
jns
dec
movsl
std
jg
call
fs
inc
mov
jb
and
push
stc
imul
repz
fnsave
mov
xor
push
cmpb
icebp
mov
jbe
pushf
jle
cmpsl
test
add
adc
cwtl
js
repz
sub
cmpsb
jmp
sbb
push
out
mov
js
mov
mov
xor
hlt
jnp
lods
mov
and
int3
scas
repnz
aaa
rcr
lret
das
icebp
vcmpsd
pushf
test
mov
mov
xchg
jecxz
nop
int3
or
push
mov
jae
push
push
dec
xchg
aaa
repz
packsswb
cltd
fstl
adc
fcompl
arpl
flds
jp
pop
ret
sub
aaa
sbb
test
jne
dec
sbb
sub
sbb
add
pop
fwait
jns
out
and
stos
sbb
in
pushf
test
ja
ret
mov
dec
inc
roll
or
jmp
popf
jecxz
cmp
mov
pushw
insl
or
std
jne
cltd
xlat
mov
mov
push
sbb
xchg
fistps
mov
shrl
lods
xchg
cmpsb
lret
or
js
into
call
loope
jb
cli
repz
shlb
xor
in
call
pop
push
xor
cmp
jmp
out
xchg
loope
loop
in
leave
cmp
bound
out
into
jb
add
mov
arpl
jno
aaa
cmc
scas
cmpsl
jne
das
pop
fnstsw
xor
mov
jne
mov
out
xlat
shlb
daa
jns
test
mov
adc
sbb
push
ja
mov
int3
test
jae
adc
lock
sbb
pop
sbb
outsl
mov
fmul
push
adc
movsb
out
add
lods
or
mov
cmp
int
mov
sub
push
push
add
pop
mov
inc
stos
mov
jbe
test
pushf
les
cltd
fbstp
jecxz
bound
cld
nop
cltd
fwait
jnp
mov
cmova
mov
sub
loopne
xor
jmp
loopne
pop
and
jb
mov
push
cmc
or
ljmp
shll
lahf
outsl
in
in
shll
cld
lea
jecxz
cmc
jge
shrl
lcall
cmp
loope
aaa
ljmp
pop
clc
mov
sub
in
push
jmp
xchg
scas
test
pop
iret
outsl
shll
loope
fistl
or
add
cwtl
cmp
filds
dec
cmpl
mov
fdivs
mov
xchg
test
out
pushf
sub
in
push
ljmp
mov
or
and
test
jae
scas
pop
lock
adc
xor
cltd
lret
push
cmp
xor
pop
je
add
lret
xor
jno
dec
enter
sbb
enter
jp
xlat
out
mull
jo
outsb
mov
pop
sbb
sbb
sub
add
sahf
mull
mov
push
or
loope
ss
loope
movsb
sti
jb
or
lock
mov
rolb
xchg
cmp
aaa
and
shrl
and
cmpsl
mov
jle
lret
lret
xchg
iret
push
shl
ljmp
pushf
loop
xchg
sahf
jo
insl
mov
mov
jbe
nop
pop
jo
add
fdivrs
jecxz
scas
jae
ljmp
dec
fucomp
mov
les
lods
mov
in
fstpt
or
lahf
aad
pextrw
and
and
push
out
jne
imull
fucomip
jecxz
out
lds
and
insb
push
mov
pop
and
ret
js
xchg
inc
std
movsb
roll
ds
pop
scas
out
pop
test
xchg
jg
lods
mov
in
fsubrl
jo
jg
fdivs
ret
repnz
jle
adc
lea
pusha
stos
jl
call
test
into
dec
jmp
scas
mov
mov
push
rol
mov
jo
mov
cld
mov
jmp
loopne
rcll
mov
lock
jnp
aad
lea
push
insl
jg
leave
push
and
mov
sbb
lcall
xor
jno
xor
mov
add
jmp
fistl
dec
xor
or
repnz
cmp
addb
mov
fwait
mov
and
mov
xor
in
clc
lods
inc
mov
repnz
pop
sti
scas
repz
jmp
vmovmskpd
pop
addr16
je
jl
fldt
ret
repnz
xlat
test
ja
jecxz
sarb
ljmp
jns
arpl
sub
iret
aam
in
jo
jecxz
sub
mov
outsl
pop
xchg
jbe
xor
push
rcr
gs
cmpsl
push
and
or
jmp
fadds
mov
cmp
push
mov
punpckhwd
in
call
cmp
out
jle
mov
pop
icebp
daa
mov
cltd
fidivs
orl
or
xchg
jg
xchg
dec
imul
cmc
jle
repz
imul
ja
inc
dec
add
sub
cmc
outsb
imul
ljmp
ljmp
stos
hlt
fisubrl
push
icebp
inc
mov
aas
cmc
mov
dec
lock
ror
mov
cltd
dec
sub
lods
mov
mov
fwait
mov
sbb
jg
mov
movsb
dec
into
or
ljmp
jbe
das
pop
mov
push
xchg
push
xchg
aaa
jg
xchg
bound
jo
cltd
dec
aaa
push
fistpll
aas
mov
adc
mov
lods
jge
std
bound
cmc
dec
call
roll
into
or
dec
scas
cmpsl
inc
fdiv
stos
xchg
pop
push
inc
test
mov
lahf
out
icebp
test
scas
jp
push
sahf
loopne
mov
iret
jae
loope
cmc
push
jne
and
bswap
std
mov
test
xor
xchg
cmp
inc
mov
loopne
aaa
dec
das
xchg
stos
in
mov
lret
lret
ja
fs
jbe
dec
enter
repnz
mov
movsl
lret
inc
pushf
bound
dec
into
adc
iret
movsb
mov
lahf
out
add
xor
sarb
jbe
ds
push
bound
mov
mov
out
cmp
repnz
aam
shlb
outsb
les
pminub
push
sbb
push
icebp
xor
adc
xor
push
push
jg
lret
cmp
lahf
cmpl
cmc
pop
mov
and
fisttpll
xor
lea
dec
loope
sbb
test
loope
scas
fisubrl
sub
push
pop
push
into
jo
pushf
ljmp
andl
jne
jle
stos
mov
repnz
adc
shrb
stos
push
push
jp
push
inc
popf
sub
pusha
adcb
sbb
out
xor
in
cmp
xchg
lea
cmp
sahf
sbb
rcl
addr16
dec
adc
scas
stos
cli
adc
xchg
cmp
mov
xor
cmp
out
addb
in
jo
adc
cmp
fwait
imul
cmpsl
int3
test
cltd
mov
fwait
lock
jae
mov
add
daa
pop
mov
or
jne
js
mov
cmp
mov
push
sbb
loopne
xor
jg
rorb
movsb
mov
ljmp
pop
scas
emms
push
mov
jmp
sbb
jns
jne
xchg
test
mov
push
xor
imul
adc
inc
sub
push
push
aad
xor
xchg
lcall
xor
fnsave
pop
xchg
or
sbb
inc
imul
and
cmp
cli
adc
mov
mov
sub
leave
aas
xor
inc
xchg
cmp
cltd
mov
stc
rcrl
icebp
mov
adc
mov
jle
sub
push
jmp
test
std
out
ljmp
lret
mov
jne
fistpll
dec
out
jno
mov
idivb
pop
lret
fistps
leave
add
sarl
jp
dec
cmc
xor
xchg
mov
jecxz
wbinvd
stos
arpl
in
cmp
cmp
icebp
loopne
out
inc
jle
in
leave
ficomps
aas
mov
je
sbbb
push
scas
outsl
adc
xor
lods
ret
push
and
mov
mov
dec
sarl
int3
jl
jb
outsl
lahf
xor
sub
sub
and
fcoms
shll
and
arpl
pop
xor
scas
add
xchg
push
inc
xchg
dec
ficoml
cmpsl
mov
popf
jae
pop
pop
push
push
fstpl
loope
or
or
push
addr16
or
inc
je
cld
aas
cld
mov
or
into
sub
aas
cli
outsb
leave
mov
mov
hlt
ficompl
das
or
ror
xchg
sub
lods
dec
mov
dec
jge
stos
icebp
clc
push
xchg
cld
lcall
stc
iret
inc
add
rclb
in
sbb
xor
sbb
enter
sarl
lock
cwtl
adc
das
pop
gs
je
imul
jne
xchg
cmpsl
jbe
fstps
out
popa
xchg
pop
out
popa
aam
pop
rcrl
mov
xlat
clc
push
adc
jo
pop
test
mov
stos
pop
fnsaves
sub
push
jno
test
fstpt
out
inc
sub
xchg
xchg
ss
mov
rolb
loop
out
add
cmp
insl
addr16
xor
scas
sub
mov
or
shrl
adc
mov
mov
jl
ss
and
xchg
fdivs
push
test
ds
aad
jecxz
mov
or
sbb
in
in
in
jmp
or
das
rcr
lahf
std
iret
imul
xchg
add
inc
jecxz
xor
sub
jnp
push
in
ja
leave
push
scas
ffree
mov
int
pop
sbb
scas
or
lds
bnd
cmpb
hlt
cmpsl
int
sub
into
dec
or
mov
fldpi
jmp
push
cld
sahf
loopne
mov
out
repnz
mov
mov
sarb
jae
xchg
daa
out
cs
sub
stos
mov
lahf
dec
push
iret
pop
jecxz
aaa
ljmp
xor
adcl
mov
cmp
loope
mov
adc
scas
sub
in
mov
sub
sbb
sub
or
movsl
out
aas
ret
xor
mov
push
fcmovne
or
dec
pushf
fistps
stc
repnz
jo
adc
xor
fisttps
xor
xor
out
pop
call
inc
push
dec
pushf
fwait
jo
shlb
jg
shll
mov
je
stos
cli
stos
shlb
scas
iret
popa
out
and
mov
sub
pop
aad
xor
push
mov
aaa
insl
lea
mov
mov
inc
jg
jle
test
arpl
jmp
sbb
sbb
cmp
pop
dec
popf
cld
into
inc
push
fidivl
jmp
rorl
inc
dec
imul
push
jo
pop
clc
loop
aas
xor
hlt
out
mov
stos
push
pop
inc
xor
add
pop
push
inc
insb
call
mov
pop
in
or
add
sbb
and
aaa
outsb
pop
inc
imul
mov
lds
cmc
mov
lret
mov
shlb
xorl
ljmp
pop
mov
xor
das
fwait
jg
mov
loop
xor
lret
data16
mov
jmp
push
sti
sub
add
dec
mov
out
call
sbb
xor
nop
shll
call
adc
mov
push
sub
xchg
or
dec
cmp
sbb
stos
dec
jmp
jb
fwait
mov
outsb
jnp
jb
cltd
adc
out
movsb
or
loop
jg
jmp
cmc
mov
xchg
sbb
jmp
fwait
and
dec
imulb
loop
movsl
int
push
ss
or
adc
add
lds
lahf
mov
movsl
dec
lea
jnp
xchg
xor
icebp
sbb
cltd
ret
dec
das
mov
rcr
mov
bound
sbb
xchg
hlt
fstl
add
pop
cli
lret
or
ss
repnz
mov
cmc
imul
call
mov
iret
mulb
sbb
sub
mov
mov
scas
pop
lahf
ret
pusha
mov
xchg
push
loope
iret
addl
jne
jg
out
ljmp
sbb
aaa
test
lea
mov
jecxz
sub
push
test
dec
iret
jnp
aad
lds
shlb
sbb
jne
pop
enter
sbb
or
std
pop
mov
push
add
nop
cld
mov
icebp
xor
or
fidivl
bound
xchg
clc
jp
fs
mov
adc
jbe
into
sbb
cli
aad
data16
pop
dec
xor
in
dec
and
jp
gs
lret
mov
lahf
fisttps
rorb
cmp
and
rcrl
ds
fsubrp
mov
in
jo
jnp
fidivrs
jnp
push
dec
loope
pop
xor
add
lock
pop
adc
call
cli
sti
out
dec
cmpsl
mov
out
outsl
in
inc
dec
ficomps
or
pop
inc
imul
cli
pop
divl
mov
out
sahf
sbb
int
push
outsl
lods
fistps
pop
cmp
sbb
test
jae
stc
sub
int3
mov
adc
xor
jnp
cmpl
mov
pushf
adc
jnp,pt
std
sbb
push
pop
push
fidivs
push
push
rorl
xchg
shlb
stos
dec
jnp
loop
and
jg,pt
bound
out
out
fucomip
lea
ljmp
add
std
sti
sub
fcomps
nop
mov
pop
push
push
pop
inc
jecxz
jecxz
push
push
jae
test
loop
loope
ja
pop
ja
push
sub
adc
daa
stos
ljmp
mov
repnz
adc
push
loope
cwtl
mov
and
shl
repz
xlat
jbe
fsub
cwtl
gs
push
stos
and
out
jno
cmpsl
jle
dec
mov
push
mov
sbb
push
ret
mov
int3
jg
pop
in
outsb
add
or
pop
mov
dec
jo
xchg
jecxz
iret
rclb
lret
mov
jecxz
mov
outsl
loop
enter
mov
jg
xor
psrlq
mov
out
jmp
out
or
mov
jbe
sahf
repnz
pop
notl
pop
test
lods
lahf
les
ror
mov
mov
daa
jecxz
or
iret
push
mov
pushf
cmc
ret
jl
shl
mov
mov
out
cmpsb
sbb
push
iret
mov
mov
cmp
cmpsl
aam
mov
xor
mov
aas
mov
leave
nop
rcrb
out
dec
jo
into
dec
add
jae
out
pop
scas
sbb
mov
outsl
out
lods
in
sbb
lret
fyl2x
lea
dec
inc
mov
lahf
lcall
outsb
nop
or
lea
sbb
pusha
or
push
in
std
sbb
pop
addr16
xchg
and
int
sti
mulb
ror
or
test
inc
push
in
add
sub
loope
jg
dec
imul
aad
cmpsl
fcmovnbe
addr16
jle
add
sbb
int
adc
das
icebp
stos
pushf
jno
mov
out
add
mov
and
ret
xor
test
cmp
mov
jle
call
hlt
xchg
aam
loop
xchg
lods
icebp
decl
sub
or
mov
cmpsb
mov
pop
xchg
or
cld
sub
sarb
cmp
sbb
stos
rol
stc
icebp
jg
sbb
jno
push
jo
mov
mov
xchg
mov
push
les
lods
out
xchg
fcmovb
inc
addr16
or
stos
sarl
mov
cwtl
testb
sub
jg
cmc
pop
sub
push
pushf
and
jge
xchg
inc
popa
sarl
mov
into
fwait
out
push
clc
mov
jp
xor
ss
sbb
jns
fidivl
push
loope
xor
fcomp
arpl
mov
in
lods
js
std
jb
aam
jmp
ljmp
jg
pushf
cmp
and
test
pop
stos
data16
cmp
lods
lods
xchg
jg
push
lcall
push
loope
push
lcall
sub
add
in
inc
xor
cld
lock
mov
jg
in
mov
mov
fcoml
adc
sub
or
dec
jb
and
out
dec
pop
out
mov
mov
jae
loope
cmpsl
and
fistpll
cwtl
xchg
add
add
jl
mov
lret
ror
and
or
adc
in
xor
fisubrs
ljmp
stc
stos
mov
adc
ffree
jb
jns
in
ret
std
jecxz
xchg
int
cmp
test
in
idivl
dec
mov
shl
pop
mov
push
sarl
add
aas
or
outsb
shl
out
lock
iret
jb
insl
bound
outsb
scas
jno
push
loope
iret
imul
sub
jecxz
pop
fdivl
mov
push
out
dec
dec
pop
xor
loopne
mov
add
scas
cmp
jns
mov
int3
lahf
pop
addr16
stc
mov
adc
stos
push
mov
sub
ljmp
ljmp
push
in
xor
test
test
sbb
dec
icebp
add
mov
lock
add
js
int
cli
inc
push
xor
jecxz
ja
xor
mov
lods
in
mov
out
jg
adc
js
mov
or
pop
xchg
cli
mov
mov
popa
bnd
and
imul
ljmp
pop
cmc
repnz
cmpl
iret
test
jb
xor
or
lret
filds
and
lock
push
aas
out
dec
inc
mov
push
ja
jb
jo
rorl
imul
and
or
jnp
or
call
clc
into
dec
push
pop
insl
inc
mov
out
orb
mov
lock
out
leave
stos
xchg
sub
inc
mov
ja
fnsave
jg
fistpl
out
lahf
xchg
pop
rcl
xlat
out
scas
mov
and
pop
cmp
aad
cmp
hlt
mov
mov
cmpsb
push
dec
jbe
xchg
mulb
hlt
pop
in
add
cmp
je
sbb
seta
xor
inc
pushf
out
mov
into
fistl
cltd
into
decl
fistpl
jns
push
test
xor
push
notb
pushf
xor
pop
jne
cmpsb
bnd
or
lock
push
out
lods
dec
sub
jne
inc
xor
hlt
jl
je
pop
decw
mov
xchg
test
popa
and
or
icebp
fistpll
shll
sub
push
ja
stos
add
in
shrl
lock
mov
dec
mov
subb
movsl
cmpsl
stos
mov
scas
in
dec
jo
scas
xor
into
data16
stos
popa
jmp
hlt
shl
out
insl
rcr
or
dec
cmp
pop
or
mov
and
jo
push
popf
data16
dec
mov
loop
xchg
mov
shl
inc
lahf
xchg
lret
or
pop
xchg
sti
stos
fisttpl
fistps
aas
mov
dec
jnp
sub
into
pop
insl
cmp
add
jb
inc
es
sar
add
hlt
loopne
lret
loope
pop
cld
lahf
outsl
popf
sub
cmp
jno
mov
in
shll
and
xchg
cmp
fwait
out
fnstsw
mov
inc
push
jecxz
mov
scas
loop
xlat
icebp
xchg
adc
fsubl
inc
or
mov
sub
popf
push
xchg
push
push
mov
imul
lds
push
sarb
iret
push
das
dec
xlat
adc
jle
nop
fwait
sbb
jl
jae
fistpll
lods
push
jae
push
sub
scas
pop
pop
xchg
test
clc
push
clc
call
mov
cltd
imul
sbb
int3
or
cmc
mov
enter
dec
pmulhuw
stos
jo
icebp
movsb
test
sahf
mov
adc
jne
or
out
or
fsubrl
cmpsl
sub
cmpsl
stos
stos
addr16
cmpsl
cmpsl
mov
jg
or
jecxz
je
cmpsl
ljmp
mov
cwtl
mov
in
cmpsb
push
dec
mov
scas
and
inc
sbb
scas
xchg
add
pusha
dec
mov
xchg
movsl
jmp
mov
test
sti
mov
push
jbe
les
cld
pop
gs
xchg
adcb
and
cmp
call
popa
bound
jg
dec
cmpsb
mov
cmp
leave
outsl
jmp
movsb
imul
test
cltd
rorb
movsb
loope
adc
push
outsl
out
and
insb
fistpl
int3
or
ja
dec
cwtl
test
int3
cltd
jmp
imul
xor
jg
jg
cwtl
das
jecxz
inc
jmp
and
test
fbstp
dec
ja
hlt
scas
xchg
mov
xchg
inc
or
inc
dec
cltd
sahf
movsb
add
or
test
int3
xor
mov
cmp
push
or
lods
or
dec
movsb
jmp
out
push
ret
out
outsl
inc
inc
icebp
mov
imul
mov
scas
lret
out
sahf
sub
xor
xor
push
xchg
and
jg
adc
mov
or
in
push
or
enter
xor
imul
movsb
sub
pop
pushf
xor
sbb
insb
xor
mov
call
push
mov
les
mov
sti
inc
in
xchg
test
cmp
cltd
inc
inc
and
pop
xor
test
popf
push
xor
mov
ret
imul
and
mov
mov
ror
dec
loop
dec
and
cmc
mov
jbe
loopne
in
in
ljmp
sarl
aad
rcr
or
sbb
cmp
push
cmp
jl
add
jo
fisttpl
decl
repnz
xor
mov
outsb
cmp
jae
dec
in
mov
lods
xchg
imul
pop
adc
or
bound
mov
stos
gs
sahf
and
sub
shlb
push
lret
shlb
aam
jmp
loope
int3
mov
popa
pushf
mov
jle
hlt
loope
movsb
cli
mov
xchg
out
andl
ss
add
loop
aas
push
gs
outsl
pop
dec
mov
clc
leave
dec
out
inc
cli
sub
imul
sub
testb
fldenv
mov
shlb
sub
add
divb
pop
cld
lods
mov
iret
adc
mov
into
sbb
ljmp
mov
mov
jne
test
test
xchg
mov
xor
jg
movsl
pop
cltd
mov
dec
push
push
loopne
add
popf
out
or
sahf
scas
pop
cmpsb
inc
stos
fists
push
out
mov
fbld
xchg
push
jns
pop
mov
clc
xor
jle
mov
hlt
test
mov
ja
xchg
jae
mov
shrl
lcall
jne
stos
out
nop
jmp
ljmp
insl
lret
in
mov
fldt
xor
idivl
fildll
arpl
lret
cmp
in
lcall
mov
or
fnsave
jg
pop
and
aam
xchg
or
repnz
or
push
addr16
jg
out
add
insl
or
push
test
fists
stos
outsl
iret
sub
les
jg
xor
xchg
int
xchg
scas
jnp
push
fwait
xlat
jo
testb
add
push
ja
cmpsl
xor
mov
shll
push
mov
add
fcompl
int3
jle
mov
lock
jle
pop
inc
js
mov
sti
subl
out
xchg
xchg
aad
cmpsl
lock
fstl
ss
fbstp
sub
cmpsl
in
in
out
add
sub
mov
sbb
jge
mov
cmp
ljmp
dec
cmpsl
sbb
push
es
or
out
add
jmp
aaa
aad
js
pop
cli
insl
jo
fistps
fs
mov
cmc
push
scas
int3
pop
push
xchg
jg
push
add
lods
inc
iret
sub
dec
ret
leave
jmp
sbbb
aam
out
mov
ret
fsubr
mov
sbb
insl
insb
jne
jnp
movsb
imul
int3
xchg
les
mov
mov
pop
popa
repnz
cld
repnz
mov
xor
andl
jle
xor
ficoml
or
mov
push
lahf
sbb
add
into
fstpl
xor
mov
mov
lret
push
or
ljmp
dec
adc
cs
sbb
xor
out
jo
mov
into
or
and
mov
push
sbb
ror
inc
jl
sub
cmpsl
pop
shrb
xchg
in
jecxz
mov
movsl
add
bnd
cmp
jle
mov
std
push
jns
bound
scas
fcmovb
lcall
mov
xchg
addr16
mov
js
or
icebp
loopne
fcmovnb
aaa
pop
loop
pop
cltd
push
ja
data16
or
pop
icebp
fisubrl
jmp
xor
lods
push
or
cmpsb
outsl
outsl
add
dec
pop
adc
imul
mov
mov
loop
pop
xor
fldcw
iret
xchg
arpl
pop
mov
add
in
or
pushf
dec
jnp
adc
lahf
mov
pop
jle
xchg
xlat
out
out
jb
icebp
iret
out
add
lret
sbb
cmc
inc
sbb
dec
pop
mov
in
ja
jmp
jle
ljmp
hlt
loopne
dec
sub
movq
push
out
jle
mov
lods
jno
sub
aad
cli
addr16
jmp
arpl
jne
push
pop
cmpsl
dec
or
mov
data16
inc
add
jg
mov
and
push
ljmp
aam
and
out
inc
push
mov
mov
std
mov
outsl
insb
clc
inc
push
mov
dec
jecxz
mov
sub
hlt
sub
jmp
xchg
orl
js
lret
xor
jle
imul
movsb
sar
mov
test
icebp
mov
jge
mov
sbb
loop
jns
lods
mov
rolb
push
jo
lret
adc
mov
dec
pop
ror
push
mov
dec
sbb
xchg
xchg
push
loop
adc
or
lcall
repnz
or
jmp
in
jno
xor
shl
jmp
pop
or
cmp
nop
cmp
test
fisubs
loope
xor
loopne
xor
movsb
inc
aad
inc
nop
repz
rorb
fldt
jae
mov
adc
lret
mov
arpl
aaa
aaa
sub
out
cmp
incl
add
mov
repz
add
lcall
mov
inc
jg
or
les
mov
mov
out
rorb
dec
xor
movsb
fbld
or
subl
cs
sarl
xchg
roll
pop
daa
push
xor
adc
repnz
dec
sbb
mov
mov
cmp
loop
sti
int
cld
xor
mov
mov
stos
xchg
dec
rclb
sbb
sbb
fwait
ret
mov
adc
sti
ret
in
into
add
out
movsl
sub
popf
add
stc
cmp
pmuludq
mov
pop
movsb
inc
push
lret
add
sub
mov
jmp
test
mov
push
ljmp
cwtl
and
push
ret
adc
or
cs
in
fmull
sub
out
shlb
lcall
add
push
neg
js
push
add
mov
mov
test
add
jns
cld
dec
ficomps
xchg
call
lods
data16
gs
pusha
int3
repnz
rorb
enter
lea
outsl
mov
lock
je
adc
loop
pop
inc
sbb
or
int3
fmuls
out
in
or
adc
pop
adc
xchg
cmp
sub
fistl
jle
aas
inc
idivl
jne
or
icebp
and
xchg
call
mov
jo
roll
out
jge
sti
or
out
outsl
fisttps
pop
out
xchg
scas
into
pop
cmpsb
sahf
pop
mov
xlat
jbe
inc
xchg
ss
pusha
out
stc
test
es
out
cmp
ffree
fists
loopne
and
push
mov
inc
fsubs
addr16
es
call
jg
out
sarb
popf
jnp
call
mov
aad
les
mov
mov
inc
fstp
mov
xchg
sub
int3
jns
arpl
aaa
fadds
sub
movsl
pop
mov
push
int3
jle
jno
cmp
lods
adcb
dec
loope
or
mov
call
out
or
repnz
arpl
inc
je
scas
dec
je
vcvtps2pd
arpl
or
xchg
repnz
fsubl
mov
push
or
mov
mov
push
cmpsb
icebp
mov
clc
mov
lods
icebp
xorb
mov
mov
or
sti
jg
cld
jae
sub
stos
xchg
ja
jns
frstor
xchg
sub
test
push
mov
jg
mov
out
ds
in
aad
mov
lea
pop
mov
cmp
int3
push
outsb
sbb
push
stos
xor
movsl
jmp
imul
addr16
lret
add
cmp
outsl
scas
inc
fdivl
dec
stc
mov
dec
sub
icebp
xchg
mov
mov
or
push
repz
pop
outsl
loope
hlt
xor
fsts
and
pop
repnz
aaa
or
xlat
or
jb
cmp
jo
je
ret
loop
cwtl
fdivrl
popf
push
in
push
push
mov
push
cmc
into
fcomi
sub
sub
adc
xor
pop
mov
pop
addr16
cmp
repnz
mov
add
insb
cmp
loopne
add
fwait
mov
jge
sub
in
add
stc
inc
add
inc
sub
jmp
or
mov
dec
inc
mov
aaa
sqrtps
out
arpl
sar
mov
dec
aas
jge
sti
sarb
sub
mov
sub
loope
xor
adc
stos
xlat
decl
dec
sub
and
mov
push
jb
cmc
ja
jp
shrl
pop
add
xchg
or
loopne
dec
stos
and
addr16
adc
sbb
cltd
mov
and
mov
or
lds
lcall
adc
lret
dec
decl
add
sar
mov
add
inc
sub
or
movsl
mov
push
add
inc
movsl
movsb
ss
outsb
mov
lea
adc
mov
add
or
push
sub
mov
mov
push
jle
ds
sub
or
sbb
clc
test
add
push
xchg
sub
xchg
aam
fucom
mov
lods
fcmovne
insl
cwtl
cmp
outsb
dec
out
mov
sbb
mov
sbb
movsb
mov
rcl
cmp
aad
shll
cmp
push
cmp
setge
push
push
or
js
arpl
imul
les
bound
ljmp
or
test
mov
or
jle
dec
cmp
push
jmp
jg
dec
push
push
pusha
mov
loopne
cmp
sub
cmp
jmp
inc
ret
sbb
push
xchg
sub
sbb
add
lahf
pop
xor
std
push
and
push
sbb
cmp
push
je
xchg
pop
lea
push
scas
mov
fisttps
stc
jecxz
inc
aaa
movsl
xchg
mov
jecxz
mov
adc
pop
pop
dec
pop
icebp
pop
loopne
andl
and
jo
call
adc
or
pop
and
or
lahf
clc
jo
lea
xchg
pusha
adc
js
jne
jl
wbinvd
cwtl
movsb
das
test
clc
mov
mov
into
pushf
mov
xor
call
inc
cmpsl
push
stos
sub
pop
jne
out
or
xchg
ffreep
push
jo
int3
int3
aad
pop
frstor
cmp
pop
xor
in
sbb
sub
popf
ret
or
adc
int
add
xchg
std
xchg
das
out
xor
jb
sub
cli
sbb
or
into
xor
xor
jle
test
int3
outsb
mov
mov
repnz
xchg
scas
jmp
push
ret
stos
mov
xlat
adc
or
repnz
dec
mov
call
cmp
sbb
mov
jno
sbb
sbb
or
das
addr16
push
test
pop
div
cwtl
jg
lret
pop
inc
or
mov
push
mov
nop
jle
jp
jmp
div
and
push
and
out
aaa
imul
aas
fucom
pop
sub
jo
out
in
mov
push
xor
aas
xchg
mov
je
lahf
test
or
lods
enter
add
xlat
scas
push
test
pop
jge
dec
jl
mov
movsl
mov
jmp
or
out
jmp
cld
ja
inc
jns
shl
outsb
dec
mov
mov
mov
in
and
or
ja
sub
scas
fsts
mov
pop
imul
lods
inc
aam
sbb
out
fstpl
out
mov
push
pushl
jle
xchg
dec
xor
sub
test
dec
pop
icebp
pushf
inc
daa
shl
pop
enter
pop
pusha
adc
push
dec
call
sub
stos
sbb
push
mov
lock
negb
sub
inc
pop
mov
sbb
lret
pop
stos
ss
bound
pusha
imul
push
dec
lcall
ret
jno
fisttpl
bound
sbb
rcr
loopw
or
and
mov
push
cmpsb
sbb
add
rcr
sub
mov
cmp
int3
rorl
xor
mov
imul
insl
jns
sbb
jge
adc
iret
sub
je
imul
jno
fbld
xor
lret
mov
lcall
jbe
outsl
mov
xor
mov
and
xor
fisubrs
lret
jg
addr16
push
movsl
pusha
dec
fs
dec
stos
mov
jecxz
rorl
movb
lcall
xlat
test
shll
dec
push
pop
mov
cltd
movsb
jnp
loope
jge
add
inc
ljmp
cmc
out
sbb
cmpsb
subb
xchg
shll
push
out
ret
jnp
jecxz
adc
add
outsl
lahf
xor
sub
jle
cltd
or
mov
scas
dec
or
cmpsl
shr
mov
push
popf
rolb
cmpsl
in
cmpsl
addr16
xor
fisubs
add
std
pop
movsb
in
and
mov
or
jb
call
shll
sbbl
nop
imul
jmp
jbe
roll
popa
lds
aam
test
pop
int3
idivl
push
or
or
loopne
bound
push
std
leave
loope
cmp
movsl
dec
push
lds
and
movsw
dec
push
ljmp
loope
adc
sar
or
mov
leave
or
outsl
dec
popa
shll
mov
leave
iret
loope
cmc
xlat
lea
cmc
jg
sti
jno
insb
test
jg
and
fsubs
jg
subb
cmpsl
pop
aas
and
popf
xchg
fisttps
mov
cmc
jp
xor
sub
in
movsb
icebp
ljmp
sbb
pop
popa
into
mov
shll
sbb
xor
sahf
push
loopne
adc
push
jmp
out
xlat
or
nop
loope
lock
push
or
int
push
mov
negb
xor
incb
inc
sbb
ja
sahf
cld
inc
mov
jl
aas
or
pop
sahf
adc
movsb
push
pushf
pop
adc
xor
pushf
adc
mov
sbb
out
xchg
xchg
cwtl
mov
popf
jb
xor
mov
mov
ss
mov
or
ja
in
dec
xchg
mov
outsl
sub
nop
shl
movb
mov
lods
pop
test
fs
or
sub
or
xor
movsl
dec
sbb
jne
outsb
shl
jecxz
aas
or
cs
aaa
shrb
dec
enter
sub
jle
in
sub
cltd
imul
mov
mov
sarl
mov
fildl
lea
xchg
fstpl
leave
mov
dec
sti
in
test
call
shrb
cmpsl
das
or
xchg
add
sti
es
and
aad
lods
cmp
jmp
jb
aad
test
insb
int3
push
xchg
jg
sbb
jnp
jns
sbb
sbb
mov
cmpsl
cmpsb
lret
fisubrl
imulb
int
lea
jge
loopne
insl
icebp
dec
inc
stos
pop
aas
shl
imul
pop
xchg
loop
test
sub
das
data16
and
and
movsl
mov
bound
jmp
lret
jecxz
cmp
jecxz
sub
jbe
lods
es
data16
rcll
mov
imul
fsub
icebp
jb
dec
xor
popa
mov
lock
out
push
stos
popf
inc
fwait
movsl
xor
stos
fisttps
ret
xor
out
aad
imul
sub
cwtl
stos
dec
imul
inc
or
pop
pop
fstpt
jg
mov
xchg
cmc
push
jecxz
ja
sub
xchg
fucomip
out
dec
adc
mov
cmpsl
jns
sub
sbb
pop
mov
shlb
testl
lahf
shl
jb
xor
mov
sub
mov
stos
sbb
cmp
adc
dec
push
jno
data16
mov
pop
insl
add
dec
in
adc
out
or
or
pop
inc
in
test
jae
cwtl
or
cmc
lret
in
mov
pop
in
sarb
imul
pop
add
and
xchg
pusha
and
in
mov
jecxz
sbb
push
imul
jae
or
sub
xlat
decl
hlt
jno
xchg
ret
clc
push
gs
and
add
ret
push
and
sti
add
jno
dec
cmp
repnz
mov
adc
fbld
pushl
dec
enter
stos
ljmp
pop
jne
jb
mulb
jg
jecxz
xchg
rorb
stc
jae
fucomi
imul
jecxz
fsubp
in
dec
fsubs
ret
mov
jecxz
mov
clc
loop
push
aaa
cmp
cmp
mov
into
notl
or
jmpw
outsb
int
ljmp
into
push
je
popf
jecxz
imul
or
jb
or
cs
pop
repnz
mov
out
or
push
or
cmpsl
bound
in
lea
adc
in
jae
sub
jecxz
cmp
push
adc
push
jo
repnz
int
into
clc
xor
mov
out
and
sub
in
adc
cmc
pop
stos
out
fists
dec
daa
cli
cmp
sub
sbb
sbb
xchg
testl
pop
jmp
int
mov
iret
movsb
jb
stos
lret
and
shrb
stos
adc
int
xchg
rcrl
subl
out
fsub
enter
arpl
jg
outsl
adc
scas
pop
dec
aaa
sub
mov
or
into
mov
lret
stc
jecxz
jae
pusha
push
adc
xchg
xor
mov
sbbl
ljmp
loope
divb
xchg
rcrl
pusha
mov
jo
movsb
addr16
cbtw
xor
out
vpcomq
sub
ljmp
ss
mov
pop
aas
cmc
pop
pusha
in
push
or
mov
imull
hlt
shrb
pop
jnp
arpl
jle
push
mov
std
mov
test
push
xchg
popa
xchg
xor
sbb
mov
cmp
out
fbld
xor
movsb
sbb
sub
insb
jmp
test
sbb
loope
jle
fldl
cmp
lock
movsb
test
mov
and
test
push
fcomps
or
xchg
stos
mov
or
stc
popa
dec
or
fldl2e
icebp
dec
mov
jp
in
and
cmp
icebp
jge
mov
shll
sbb
loope
out
pop
sub
mov
sbb
jnp
xorb
lods
aaa
add
movsl
in
mov
insb
into
xchg
sub
jecxz
mov
push
les
inc
jl
int3
pushf
xlat
jbe
rcrl
mov
inc
icebp
in
out
roll
sti
rolb
jmp
lods
push
ss
inc
loopne
in
imul
lcall
shrb
fsubrl
adc
add
cmp
fmuls
push
push
popf
loope
decb
xchg
cmp
cmp
jmp
shrb
xor
jbe
push
ret
outsb
jg
pop
mov
lcall
jp
decb
outsl
jns
cwtl
sbb
cltd
insb
jne
mov
xchg
out
lahf
insl
adc
add
push
stos
push
leave
push
pop
test
dec
in
loope
shll
ss
int3
icebp
std
and
lea
mov
mov
aam
mov
outsl
cmp
or
loope
add
out
or
sub
dec
sub
popa
dec
mov
push
mov
jecxz
popf
mov
aas
in
das
mov
rol
iret
mov
xor
insb
jle
sub
adc
jge
or
jbe
jbe
ja
add
xchg
loope
or
and
adc
adc
data16
sbb
cmp
jmp
int
out
jp
stos
js
iret
mov
shrl
mov
add
sbb
cwtl
mov
adc
mov
adc
pop
ljmp
pop
fs
cltd
inc
mov
pop
out
sub
aaa
xor
add
stos
fimuls
xor
frstor
out
int3
push
loope
jge
data16
push
sbb
negl
push
jne
in
ljmp
xor
xlat
pushl
ja
dec
mov
sub
repnz
out
hlt
in
xchg
push
xor
adc
fistpl
or
mov
lock
inc
movsl
mov
mov
aas
test
jb
or
aas
out
xor
in
cli
popf
subl
mov
cs
or
pop
cmpsl
sub
jle
in
mov
sbb
std
jne
imul
push
adc
mov
mov
test
adc
xchg
pushf
inc
jle
or
mov
add
or
popf
pop
aaa
fidivs
or
ret
inc
pop
icebp
es
iret
mov
dec
movsl
inc
or
push
fcomps
enter
popa
idivl
adc
loopne
pop
jmp
lods
ret
mov
or
push
hlt
movsb
jmp
xchg
adc
add
lock
ljmp
xor
ja
mov
std
out
lret
fwait
rol
hlt
mov
enter
pop
es
icebp
cmc
inc
push
in
cmp
adc
dec
push
add
push
xchg
add
jmp
aad
inc
or
dec
mov
add
adc
dec
and
into
jg
adc
loopne
adc
jle
push
sahf
lahf
xchg
stos
mov
popf
stos
pushf
jg
shl
lods
cmp
lods
stos
fwait
aad
jge
mov
mov
icebp
pop
mov
popf
iret
inc
jne
xlat
jno
movsl
lea
fldt
fidivrs
lock
dec
in
in
out
mov
insb
push
arpl
and
pop
sbb
repnz
sub
sbb
shlb
sub
sub
lock
push
push
pop
jnp
pop
ja
mov
repnz
and
data16
imul
xor
outsl
mov
fwait
das
lock
xlat
out
shlb
dec
ret
pop
jb
imul
dec
fidivs
mov
push
sti
es
sub
arpl
sub
mov
cmpsb
jecxz
stc
jo
adc
mov
bound
pusha
or
mov
movsl
imul
pop
jle
lahf
negb
pushf
xor
xchg
call
jl
movsl
lock
rorl
cltd
xchg
cmp
fisubrl
or
inc
pop
pushf
aaa
push
std
aad
add
repnz
jle
fcomi
mov
mov
cmpsl
or
push
jle,pn
ret
sbb
imul
ja
mov
inc
loopne
mov
mov
scas
mov
addr16
xlat
notb
sahf
push
mov
or
out
inc
cmpsl
xorl
jnp
cli
mov
popa
das
dec
sahf
dec
mov
imul
movsb
push
jge
pop
mov
andb
or
pop
pushf
pop
push
push
mov
rol
mov
testl
arpl
cmp
imul
cmp
push
pop
lds
xchg
sub
xlat
loop
sub
filds
jl
xchg
and
mov
pop
test
mov
fcmovne
inc
mov
out
lea
mov
fisttpll
sbb
lods
movsb
neg
adc
call
stc
int3
mov
fwait
cmp
sbbl
mov
mov
jle
mov
bnd
xchg
inc
and
jmp
lahf
mov
in
push
stos
out
mov
xor
fldcw
scas
sub
daa
test
in
inc
mov
jmp
jo
add
test
arpl
cld
cwtl
adc
scas
fcoms
sar
ja
xchg
into
xlat
or
lock
lcall
clc
pop
aaa
xor
ret
xor
ficompl
mov
sub
lods
in
andl
lahf
xlat
inc
scas
in
rcll
das
jae
lock
push
out
inc
and
or
and
insb
jno
sbb
out
mov
push
jbe
inc
cld
clc
scas
into
cld
push
daa
aad
daa
stos
lods
dec
add
dec
int
gs
push
cmp
xchg
adc
ret
mov
in
sub
dec
lret
in
pushf
lea
jmp
leave
ja
pop
adc
pop
sbb
cmp
mov
jnp
inc
rol
movsl
addl
mov
testl
jno
or
sahf
lcall
mul
sbb
cwtl
adc
cwtl
les
xlat
mov
mov
jecxz
dec
stc
gs
out
in
stos
or
int3
sbb
fimull
fists
and
hlt
or
rcrl
imul
dec
and
mov
mov
inc
mov
mov
pushf
ret
jae
sti
pop
xchg
xorb
movsl
and
jbe
insb
cmp
dec
mov
data16
push
mov
movsl
jmp
sti
mov
xor
dec
mov
push
loopne
call
xor
or
insl
ret
jbe
insl
mov
mov
out
aad
jnp
dec
xor
add
lds
add
or
mov
bound
out
xor
xlat
cwtl
jle
fwait
adc
dec
xor
dec
pop
mov
dec
lret
jns
filds
adc
out
mov
fwait
and
cwtl
clc
outsl
out
inc
and
pop
xchg
notl
roll
jmp
out
out
repnz
jle
push
xor
loope
add
test
inc
lods
mov
push
pop
out
out
mov
pop
lahf
cltd
fistps
dec
shl
jecxz
sbb
mov
push
loop
fdivrl
movsb
out
and
je
arpl
xlat
cmpsb
add
pop
add
jbe
add
mov
mov
testl
jbe
dec
out
out
loope
rcrb
add
cltd
imul
out
sar
in
test
or
mov
das
fstpt
cmp
out
xchg
sbb
sub
sahf
push
int3
or
jne
jmp
idivb
sub
pop
fwait
sbb
adc
pushf
mov
mov
pushf
gs
imul
das
arpl
ret
orl
ret
loop
jecxz
ret
stos
mov
repnz
inc
loopne
or
pop
lahf
stos
roll
stos
sbb
inc
js
popa
ds
stc
cmpl
fs
xchg
mov
mov
push
insl
les
lock
je
mov
scas
fisttpl
xlat
imul
imul
push
addr16
cld
dec
arpl
inc
mov
mov
xchg
cmp
test
push
ds
cld
daa
jecxz
in
xor
ror
adc
xor
push
sub
stos
mov
call
test
and
outsb
jne
inc
push
cmpsb
jmp
xor
adc
fisubrl
inc
push
mov
or
mov
pop
pop
enter
push
jbe
fbstp
dec
lods
xchg
add
cmpl
pop
ljmp
pop
call
mov
lret
jmp
les
push
fdivrl
addr16
bound
fwait
invlpg
push
mov
data16
les
xlat
add
jge
aad
test
cmp
lods
ja
mov
pop
lret
jno
scas
repz
mov
xchg
xchg
cmp
popa
inc
push
pop
push
mov
scas
orb
mov
das
imul
out
les
xchg
test
xlat
fstl
sbb
out
dec
xor
mov
mov
inc
cwtl
insb
in
adc
cmp
mov
xchg
bnd
jl
push
cld
mov
mov
add
std
mov
jb
push
es
jp
stos
jnp
inc
fisubrs
sbb
xchg
mov
loope
std
pushf
inc
jmp
test
aam
sub
call
jnp
jg
dec
test
mulb
push
mov
lret
js
test
out
data16
dec
or
cmp
dec
mov
xchg
adc
mov
neg
or
cwtl
mov
jl
les
jg
movsb
mov
mov
jg
inc
insb
sub
jb
push
in
stos
adc
xchg
add
out
jp
cmp
sbb
cwtl
mov
aam
adc
cmc
in
in
cmpsl
roll
jge
and
and
jle
jb
mov
into
or
cmp
les
push
out
or
lcall
and
pop
loope
ret
pop
push
mov
cltd
push
lret
cmp
sarl
mov
stos
pusha
adc
mov
pop
or
mov
in
jg
lret
mov
rcrl
jno
push
mov
lret
sub
jmp
das
pop
sbb
pop
pusha
cmp
es
adc
in
icebp
cmp
mov
inc
or
lcall
out
sbb
inc
push
sahf
in
ss
mov
cli
push
in
or
sbb
adc
mov
arpl
outsb
pop
add
cwtl
dec
int3
jne
inc
pop
pop
stos
sbb
mov
call
adc
call
jnp
inc
push
aas
push
addr16
fs
mov
out
mov
xor
shrb
fdivs
cltd
push
pushl
add
imul
sti
xchg
into
shlb
mov
mov
push
jmp
pop
cmc
jmp
rcl
mov
push
xlat
icebp
sbb
cmp
xchg
movsl
shlb
lcall
loope
out
add
mov
movsl
and
jmp
or
push
inc
enter
shlb
lea
bswap
scas
push
lea
rorl
stc
jmp
jecxz
loopne
xchg
xor
adc
lods
mov
jnp
add
insl
es
aaa
scas
bound
movsb
push
cmp
or
pop
fwait
or
pop
mov
lods
mov
je
xchg
push
lods
lahf
mov
push
arpl
outsb
mov
fisubrl
std
popa
imul
push
mov
xchg
dec
add
cltd
lods
loopne
mov
scas
jge
jb
stos
jmp
mov
jle
neg
inc
mov
mov
std
movsl
mov
aam
xchg
jg
mov
and
mov
lret
addps
jmp
mov
cwtl
pop
mov
jg
push
pop
push
adc
mov
ljmp
jo
ret
adc
mov
shll
popf
test
or
out
in
mov
xchg
sahf
idivl
xchg
std
jecxz
hlt
sub
test
ret
pushf
add
or
mov
fisubrl
insl
inc
dec
insl
stos
push
mov
mov
sbb
into
sahf
lock
or
cltd
clc
push
cmpb
or
out
aam
inc
mov
addb
add
daa
xchg
mov
xchg
icebp
mov
je
testl
dec
popf
aaa
cmp
mov
sbb
lret
push
out
mov
push
lock
xorb
ret
fisttpl
sub
insb
cmp
ret
xchg
lods
jns
repnz
xchg
xchg
ret
lods
popf
mov
jmp
pop
or
popa
jecxz
and
fistps
push
mov
iret
das
loop
icebp
inc
cmp
je
test
inc
pop
and
daa
xchg
jg
call
mov
icebp
jo
jnp
movsb
xor
ret
jbe
orl
popl
mov
ror
adc
mov
jmp
pop
inc
or
xor
les
into
pushf
fisttps
ds
dec
sbb
dec
ja
out
add
icebp
popf
repnz
in
xchg
and
adc
pushw
stc
leave
mov
xlat
inc
fdivp
jl
outsl
sub
fildll
inc
std
and
into
push
pop
outsb
imul
shrb
inc
pusha
shll
icebp
mov
out
icebp
mov
enter
push
and
insb
sub
scas
pop
fcoms
sbb
xlat
popf
negl
or
stos
andl
loopne
pop
mov
addr16
repnz
jae
xor
mov
call
pusha
and
movsb
cmovp
loop
or
adc
in
push
xchg
in
div
idivl
sbb
fstps
movsb
lods
es
jbe
das
push
jmp
dec
adc
jmp
jnp
cli
outsb
jg
out
shl
loope
in
push
les
xlat
jle
mov
icebp
stc
pop
adc
test
jo
adc
or
sahf
adc
lea
lea
das
loopne
mov
push
loop
mov
fucom
out
lret
cmp
xlat
jecxz
pop
int
lods
shll
dec
rolb
pop
push
or
test
fistpll
lea
or
lret
pop
ljmp
adc
stos
jl
stc
jno
push
jle
rorb
test
cltd
cmpsb
loop
out
pop
pushf
aas
ss
scas
dec
jle
xor
lea
stos
push
cmp
or
dec
out
gs
daa
jle
mov
sub
pop
cmp
fcomi
fldcw
iret
testl
push
stos
sub
mov
sarl
test
jbe
adc
std
mov
lock
out
xlat
jae
add
stos
lahf
push
or
jb
jle
fisttps
popf
fcompl
movsl
and
popa
xchg
push
ljmp
lods
loopne
sarb
pop
cmp
data16
fists
cwtl
repnz
adc
jae
daa
jg
call
test
enter
rcll
ljmp
test
xor
insb
in
rclb
jne
jbe
mov
aam
and
add
and
dec
or
jno
or
xchg
add
cli
mov
rcr
lret
stos
aad
scas
in
enter
leave
cmp
sub
mov
mov
call
or
dec
test
mov
push
fsubrl
mov
xor
scas
in
pop
punpckhbw
mov
into
clc
repz
jecxz
mov
mov
iret
data16
pop
or
jmp
fldt
xchg
add
repnz
adcb
mov
jae
repnz
outsb
push
das
fisubs
push
ja
xchg
mov
fucomp
xorl
rclb
xchg
push
das
repnz
roll
hlt
cmpsb
sti
sbb
clc
leave
pop
fcomip
lret
fisttpll
inc
repz
loopne
testb
pop
addr16
stos
jno
mov
je
fildll
xor
or
dec
jne
inc
mov
fisubs
outsl
mov
jbe
leave
lea
fwait
xchg
addb
lret
jo
push
push
mov
fisttpl
mov
xlat
or
fimuls
xor
lods
mov
mov
stos
fcompp
adc
out
stos
pop
or
mov
xchg
movsb
fwait
sbb
adc
loop
nop
popa
or
sti
mov
push
add
sti
js
data16
rorb
jno
xor
mov
or
mov
stos
mov
les
xchg
fchs
jo
clc
popf
stos
dec
arpl
filds
aad
outsb
sub
fists
fiaddl
call
out
outsl
and
lods
inc
xor
movsl
sbb
fildll
xor
lds
mov
fucom
inc
test
lds
std
mov
test
lea
push
pushf
sub
pop
mov
lea
int
xchg
sti
mov
jbe
cmp
adc
pop
mov
outsb
or
dec
mov
rorb
movups
ret
data16
icebp
push
or
xorl
pop
pop
add
push
jle
sub
cmp
scas
xor
cmp
jecxz
sbb
ret
xchg
int3
mov
xor
push
mov
add
mov
or
pop
sbb
xchg
xchg
lods
stos
mov
add
jno
jne
fwait
or
push
push
or
adcl
cltd
leave
mov
mov
jecxz
add
outsl
les
pop
ljmp
int3
sub
or
pusha
iret
mov
mov
jo
sub
add
repnz
roll
add
addr16
or
rorl
sub
and
fcomps
push
out
mov
test
push
mov
into
jmp
mov
imul
jg
loop
push
jns
fisubrl
icebp
std
sbb
xor
xor
mov
push
idivb
jp
mov
adc
test
xor
in
sti
jo
or
out
test
push
call
dec
jmp
sahf
mov
sti
test
xchg
in
ljmp
jbe
pop
ds
aam
xor
xor
mov
out
mov
and
std
and
xor
insl
arpl
sarl
aas
das
rolb
fsubr
push
ret
xchg
lock
jmp
gs
mov
add
sub
insl
xor
ss
in
push
rcll
push
fwait
xor
xor
mov
push
jne
data16
in
fwait
jae
lods
rol
scas
jns
inc
movsl
mov
leave
inc
enter
leave
fucom
sbb
mov
loope
loope
dec
mov
cmp
sbb
js
push
sahf
or
dec
loope
dec
lahf
filds
push
xor
out
enter
test
daa
xchg
pop
fisttps
pop
jl
or
jmp
and
xor
std
sub
pop
dec
and
pusha
xor
or
outsb
and
add
icebp
imul
loope
lods
fidivrl
xor
mov
mov
insb
cmp
imul
sbb
mov
push
aas
outsl
xor
or
sub
pop
fnstenv
jle
loope
xchg
sbb
jle
std
movsl
jb
inc
mov
cmp
popf
or
scas
out
dec
sub
xchg
les
sub
mov
scas
or
inc
aam
rcrl
ss
pop
xchg
lahf
stc
jmp
andb
push
pushf
xor
loope
xor
mov
ss
xlat
pop
mov
push
into
fcmovnbe
aas
out
sarb
icebp
mov
jnp
jmp
je
jp
lea
rcrl
pop
xchg
sub
loope
add
mov
mov
mov
or
leave
fs
addr16
jg
in
scas
mov
f2xm1
xor
xchg
and
jbe
pop
add
add
mov
je
push
jo
sahf
sub
and
mov
into
jmp
push
out
js
xchg
adc
movl
jg
dec
push
pop
mov
outsl
xchg
push
cs
cs
pop
stc
repnz
movsb
stos
inc
xchg
xor
jbe
ds
dec
cmp
lret
or
repz
out
mov
push
pop
sub
jne
test
repnz
js
xlat
mov
fstps
mov
push
sbb
int3
in
or
and
fs
test
scas
push
mov
push
not
loope
jg
mov
shll
mov
loop
adc
mov
daa
stc
xchg
ljmp
dec
or
and
repz
or
outsl
inc
popa
add
jecxz
neg
pushf
hlt
imul
cmpsb
leave
and
jno
scas
xchg
pop
mov
inc
sbb
jecxz
mov
mov
ret
test
xchg
fsub
xchg
lock
push
shr
out
jl
lds
mov
jecxz
outsl
das
lods
or
inc
push
xor
pop
outsb
inc
fucom
cwtl
cmp
lds
mov
shll
lahf
mov
push
jecxz
push
push
jno,pt
or
adc
inc
sarl
call
bound
push
clc
test
jne
mov
mov
loop
push
xchg
neg
jle
inc
outsl
cmpsb
inc
popa
ret
ret
dec
stc
out
cltd
jmp
xchg
push
or
iret
aaa
cmpsb
pop
jb
fildll
daa
ret
subb
or
popf
xchg
push
fisttps
add
cld
movsl
jno
cmc
xchg
dec
mov
rcll
fwait
adc
xchg
fxch
out
xchg
out
loop
repnz
xor
jmp
loopne
add
imul
fldt
mov
xchg
cli
outsb
push
rol
mov
dec
outsl
add
push
pop
rcrl
jge
movb
lods
iret
jne
mov
mov
or
xchg
popa
aad
adc
ret
jg
push
jmp
push
sub
xor
add
inc
xchg
dec
lock
js
mov
pop
dec
sbb
mov
repnz
mov
les
mov
pop
or
sbb
and
das
xor
stos
popa
gs
mov
iret
jo
fidivrl
lds
xor
imul
push
fwait
loop
subl
rorl
test
cwtl
daa
daa
xchg
sub
shlb
xor
lret
push
mov
outsb
sub
shrb
fidivl
iret
aaa
fisubrs
bound
push
push
xor
xor
in
flds
addr16
and
rclb
cld
push
xchg
push
push
je
lock
jg
jl
dec
mov
shrb
shl
jno,pn
mov
mov
jno
push
push
imul
out
lret
jg
loope
insl
inc
rcl
out
mov
frstor
jg
pop
mov
stos
push
xchg
in
lret
ljmp
cmp
rcr
ficoml
loope
cmpsb
mov
mov
mov
in
popa
add
popa
inc
sti
cld
or
dec
out
xor
pop
ss
jne
xchg
and
xchg
inc
scas
mov
jo
dec
ret
pop
jnp
lret
arpl
outsl
sub
ss
and
jg
hlt
lods
call
push
sbb
outsb
fisubl
push
sbb
xor
and
movsb
out
add
or
dec
fidivrs
ljmp
sbb
push
fdivs
xchg
jne
lret
pop
into
cmp
aaa
and
push
push
adc
add
pop
lahf
test
inc
orb
loop
repnz
push
pop
outsb
sbb
cmp
mov
push
out
into
pop
arpl
add
ja
mov
inc
scas
mov
popf
mov
jnp
lock
pushf
push
or
jmp
and
lods
mov
xchg
inc
inc
xchg
add
add
repz
mov
hlt
mov
js
testb
stos
jbe
loope
movsl
dec
or
jg
pop
ret
jbe
sub
cmp
in
add
xor
cmpsb
loopne
xor
xor
addb
out
roll
mov
cmpsb
dec
je
inc
mov
pushf
add
popa
clc
outsb
sbb
subl
je
xor
jle
into
mov
je
sbb
movsb
jp
sahf
fimuls
stos
test
jns
mov
outsl
push
aaa
push
outsb
shll
mov
shr
mov
popa
sahf
inc
in
lcall
js
fnstcw
mov
push
es
repnz
push
mov
mov
out
mov
sbb
stc
pop
push
shll
push
dec
or
xor
stos
leave
popa
inc
pop
insb
in
sbb
stos
dec
push
rorl
test
xchg
sub
fwait
pop
add
dec
bswap
jns
int3
add
test
adcl
push
call
jmp
pop
xlat
imul
mov
jb
sbb
lock
out
jl
mov
pop
sub
push
fnstsw
stc
pop
lahf
or
add
scas
insl
les
outsl
lret
lods
mov
sbb
xor
imul
decb
jge
out
xchg
or
or
orl
int3
sti
icebp
xchg
roll
mov
mov
sti
nop
mov
das
push
bound
ljmp
mov
fidivrl
ret
out
lahf
add
in
inc
subl
xlat
shrb
mov
scas
dec
push
jle
push
stc
xchg
cld
or
ja
pop
dec
or
and
je
sarl
mov
ds
into
out
xor
mov
xor
jle
jo
dec
dec
and
roll
shlb
mov
add
cmpsb
and
push
adc
test
out
cltd
fistpl
mov
or
fisubl
and
popa
cmp
inc
xchg
ret
or
lret
out
arpl
fsts
inc
xlat
or
mov
repz
jne
in
and
sbb
mov
xor
hlt
cltd
mov
gs
xchg
fldl
test
shl
pop
adc
rcrb
aad
mov
dec
fdivrs
in
subl
stos
and
pop
lret
dec
fisttpl
cltd
jns
xchg
jg
sbb
ja
mov
mov
mov
sub
lcall
mov
movsl
sti
xlat
fisubl
xor
call
or
ds
imul
pushw
pushf
add
insl
addr16
popa
test
pop
xor
cmp
roll
jbe
jns
ret
imul
mov
out
iret
inc
xor
test
mov
scas
mov
into
fstpt
daa
inc
cld
call
mov
rcrl
ffree
rcrb
sbbb
pop
imul
sbb
and
jl
xlat
push
dec
movsb
and
loopne
in
shrl
es
pop
cmpsl
cwtl
shll
jecxz
sub
call
mov
dec
rorl
cmc
add
loopne
into
lcall
cmp
lret
sbb
mov
xor
rcll
shrb
pop
cmp
cs
pop
out
lret
sbb
or
stos
push
fucomp
sbb
pop
ret
dec
mov
pop
mov
loop
inc
mov
movsb
xchg
scas
or
outsl
aad
hlt
mov
popf
sub
fistps
xor
adc
call
and
mov
jno
sbb
into
in
jae
jecxz
ds
dec
mov
paddusb
dec
in
clc
lret
int3
testl
inc
je
je
jns
pop
mov
scas
loope
test
jbe
jae
mov
adc
in
or
sti
adc
dec
jbe
push
enter
add
xor
aas
aad
sbb
sbb
jle
cwtl
push
test
sub
sahf
lahf
sbb
inc
push
outsl
lods
xchg
dec
push
inc
stos
incl
push
test
sbb
adc
mov
mov
loope
andl
push
std
cltd
iret
into
mov
mov
sub
xchg
ja
mov
test
orl
int3
outsl
fwait
inc
push
js
arpl
cwtl
inc
outsb
jecxz
daa
por
arpl
inc
iret
jnp
push
push
sbb
xchg
push
fbld
imul
push
and
out
mov
jmp
data16
mov
dec
push
fistpll
lahf
pusha
adc
pop
xchg
pop
sbb
mov
leave
mov
sub
mov
sti
repnz
mov
lods
jecxz
int3
pop
adc
jge
xlat
ds
mov
insb
push
inc
sbb
mov
pop
mov
test
nop
rcl
jae
stos
test
dec
ret
lret
dec
imul
cmc
cmp
add
mov
jle
clc
iret
sbb
shl
insb
lods
inc
mov
cmpsb
pop
sub
jle
jo
insb
mov
mov
push
lret
insb
repz
icebp
jle
hlt
sbb
in
jecxz
sub
addl
cld
push
sarl
pop
out
jns
inc
push
push
jg
sub
outsb
pop
push
loop
pop
leave
sbb
addr16
fmuls
xchg
mov
jae
out
jmp
mov
pop
into
fisttpl
dec
pop
out
mov
pusha
mov
xchg
add
mov
out
sub
cmp
lret
test
shlb
jecxz
fst
jge
sub
pop
ss
lock
mov
mov
out
push
pop
out
loopne
mov
mov
stos
call
mov
fidivrl
out
xor
pop
in
push
std
sub
pushf
daa
sub
jae
sbb
in
lock
loope
jle
stos
jb
cmp
mov
and
xor
push
mov
faddl
xchg
ss
imull
cmpsl
jmp
scas
mov
or
and
push
xor
loope
mov
lods
xor
ror
xchg
outsb
fwait
push
xor
jle
test
aaa
adc
mov
mov
mov
adc
adc
fs
out
xor
scas
jle
sahf
out
mov
fstps
xlat
popl
lea
repz
xor
clc
ds
jecxz
idivl
and
lock
jne
aad
xor
andb
mov
xchg
mov
movsl
cmpsl
xor
mov
mov
mov
mov
fsubr
add
sub
loope
fdivp
hlt
mov
in
push
data16
fistpl
dec
ja
out
inc
mov
out
imul
jecxz
es
test
adc
cmp
sbb
mov
mov
mov
out
jle
insb
lods
outsb
lcall
mov
sbb
fildll
lret
lahf
cld
mov
jecxz
scas
jg
dec
add
sub
icebp
das
cwtl
mov
mov
rorb
testl
sti
sahf
and
adc
imul
jmp
push
mov
xchg
mov
adc
cmp
lock
mov
mov
test
cmp
les
loope
jae
or
jg
mov
and
push
repnz
cmp
inc
xor
mov
mov
jne
xchg
dec
sub
xchg
mov
out
in
aaa
addr16
xor
fidivl
loope
out
pop
insl
test
dec
test
cltd
jmp
shll
push
lahf
add
iret
pop
and
arpl
dec
mov
pushf
mov
test
inc
mov
xor
movsb
scas
in
gs
cmpb
movsl
push
cs
ja
mov
out
sub
enter
lods
lcall
inc
into
lea
xchg
out
xor
fcomip
adc
adc
stos
out
imul
xor
or
rol
pop
sub
shrl
stos
or
inc
stos
loope
sub
lret
or
sbb
mov
loopne
cmpsl
push
orb
jg,pt
or
xchg
or
pop
jnp
xor
pop
out
cmpsb
aad
sub
mov
in
cs
inc
dec
ret
or
test
pop
dec
sub
xor
sti
jecxz
or
add
outsl
fs
sub
push
out
repnz
xlat
push
fucomi
iret
icebp
jle
jbe
and
mov
loope
out
int
lret
jle
fs
ud1
mov
mov
iret
iret
loop
lret
mov
xchg
imul
dec
jnp
out
and
stos
mov
xor
pop
xchg
ljmp
fs
imul
shl
hlt
or
loop
stos
or
mov
xchg
pop
push
and
repnz
mov
fildl
jb
mov
cmp
int
or
jbe
pop
push
lahf
push
sbb
in
std
xor
mov
sbb
inc
sub
data16
sbb
rcrl
daa
dec
or
or
mov
out
leave
xchg
scas
jb
lret
inc
rcrl
dec
mov
push
repz
sbb
xchg
cwtl
shrl
cmpsb
mov
mov
jle
cmp
and
cmp
div
loop
adc
jae
push
dec
es
xor
fldl
ud1
dec
notl
psrlq
sbb
ds
fisttps
loopne
dec
outsb
or
mov
loopne
xlat
mov
pusha
test
sahf
mov
shll
push
dec
fcoms
ljmp
pop
mov
xlat
push
imul
arpl
movlps
or
sub
call
dec
aas
adc
cmpsb
iret
out
leave
mov
sbbb
cld
push
popa
outsl
xlat
sbb
repz
iret
shlb
fndisi(8087
or
cmp
shlb
pop
call
pop
rorl
test
add
jnp
dec
int
fisttps
mov
outsl
xchg
add
or
push
loopne
cmp
lret
ljmp
std
sub
cmc
cs
shl
jecxz
sbb
ds
loop
divb
add
jle
xor
filds
sub
sti
jne
xchg
cmpsb
mov
insl
inc
xchg
cmpsl
data16
mov
out
iret
not
xchg
push
mov
jecxz
sub
adc
outsb
scas
in
xlat
push
test
cmp
mov
mov
adc
jge
lcall
xor
repnz
pop
lds
mov
or
mov
imul
std
and
dec
dec
les
cs
repnz
jecxz
out
pop
aaa
cltd
dec
ds
mull
mov
or
add
in
out
je
mov
add
scas
sbb
ss
je
xor
sbb
mov
adc
inc
or
sub
out
cmc
imul
loopne
ds
adc
mov
mov
push
or
insb
pop
bound
sub
mov
sbb
js
ljmp
jae
sbb
mov
imul
mov
repz
jle
outsb
movsl
xlat
or
sub
push
pop
idivl
out
cwtl
pushf
inc
xor
int
add
lret
push
sbb
xor
stos
cwtl
jg
loope
inc
sbb
xor
jle
clc
mov
test
imul
sub
mov
sub
or
scas
xchg
mov
xor
or
jb
or
out
xchg
mov
sub
negb
cmpsb
sub
sbb
xorl
fildll
adc
and
add
testl
mov
fsubr
out
mov
stos
dec
insl
mov
dec
xchg
por
xor
out
adc
out
into
movsb
add
cmc
dec
sub
push
jecxz
rcrl
pop
leave
jecxz
loopne
clc
cltd
pop
add
sub
sar
pop
dec
and
and
xor
push
cmpsb
jo
outsb
out
les
cmpsl
mov
or
xor
jmp
jns
fbstp
aam
jecxz
test
movsb
loopne
or
cmp
in
imul
xor
outsb
aaa
sub
cltd
push
fs
shlb
inc
inc
xor
das
mov
jmp
loop
push
aaa
and
xchg
and
les
jne
ja
out
fs
mov
mov
dec
sahf
adc
rcr
aaa
sub
mov
or
call
aaa
jl
rcrb
and
dec
ja
mov
mov
js
dec
ficomps
das
or
div
outsb
inc
aad
mov
inc
je
pop
mov
jg
or
flds
sbb
popf
movsb
outsb
adc
inc
dec
gs
je
push
das
dec
sti
add
pop
repnz
out
icebp
jmp
jl
push
out
imul
xchg
mov
out
clc
and
insl
and
cs
jmp
rcl
push
arpl
loop
sti
icebp
in
push
icebp
dec
out
mov
out
adc
out
rcr
insb
mov
into
out
add
push
push
stos
pop
loope
leave
inc
push
iret
outsb
mov
rcll
imul
sub
les
xchg
mov
out
hlt
or
mov
push
out
lods
xchg
or
pop
loop
cwtl
jne
or
test
xor
loop
jg
loopne
call
xchg
pop
mov
jns
and
mov
pop
std
aam
jecxz
je
fimull
iret
leave
fisttpll
jg
stos
rcl
loop
push
pop
mov
and
addr16
or
popf
rorb
jbe
loope
push
jmp
dec
out
inc
and
sub
stos
pop
xor
loop
fxch
aas
test
pop
dec
in
add
pop
aas
pop
mov
cmc
loop
or
pushf
pop
in
test
mov
and
mov
loop
inc
scas
stos
mov
cli
or
dec
push
popa
mov
jnp
out
and
xor
ret
pop
push
arpl
fnstenv
add
jl
dec
xor
sti
sbb
mov
stos
fildll
push
xor
movsl
es
jecxz
out
out
arpl
jg
xor
xchg
std
add
inc
dec
lret
out
out
dec
scas
or
or
movsb
inc
gs
xchg
iret
roll
push
fwait
pop
sub
sub
xchg
jecxz
cmp
fstp
loope
out
movsl
ss
mov
cli
push
stos
into
jmp
sub
xchg
loopne
add
loopne
push
leave
pushl
cmp
enter
dec
dec
popa
test
mov
jns
imul
pusha
and
pop
push
dec
ret
mov
test
dec
mov
cmp
loope
cmpsl
lds
cmp
or
xor
mov
mov
ret
fdivrl
xorb
orb
jne
mov
xor
pop
std
fists
push
jmp
js
mov
add
mov
cmpl
jecxz
loopne
or
pop
lock
fucomip
or
orl
mov
loope
dec
xor
push
mov
jecxz
pop
dec
or
das
or
cmp
dec
sub
dec
in
mov
mov
fwait
sub
dec
pop
sti
lahf
addr16
jae
or
mov
insb
xor
pushf
stos
in
mov
cs
jg
dec
insl
out
xchg
lcall
scas
loop
mov
sahf
xchg
jmp
mov
cmp
fcoml
outsb
loope
popa
xlat
lret
push
scas
sarb
subb
mov
addr16
jae
out
mov
fs
sub
sub
cmp
sub
add
xchg
bound
jns
out
cmp
adc
daa
push
shll
mov
pushf
mov
mov
sbb
out
inc
push
xchg
mov
dec
out
push
repnz
mov
xor
mov
and
mov
push
insb
inc
in
mov
in
mov
adc
cmp
and
jne
clc
ljmp
mov
int3
ljmp
adcl
addb
dec
cmpsb
pop
in
xchg
add
pop
push
rolb
sub
xchg
jb
xchg
and
test
outsl
lret
dec
xchg
test
rclb
je
cmp
js
lcall
outsb
sbb
jne
cmovbe
pop
movsb
mov
xor
fdivrl
ds
xchg
fnsave
int3
xlat
mov
lahf
insl
imul
jle
xor
inc
into
adc
cmpb
popa
sbb
jmp
fcmove
incb
sub
out
pop
imulb
mov
ljmp
jne
xchg
clc
mov
outsl
mov
xchg
std
outsb
jmp
sbb
out
sbb
jo
popf
and
lods
jae
cli
icebp
sub
or
xchg
mov
icebp
push
xchg
stos
jb
test
loope
cld
xchg
loopne
hlt
stc
push
call
mov
stos
loop
pusha
in
add
or
iret
arpl
mov
shlb
mov
jl
push
add
outsl
loopne
movsl
dec
rorb
pop
jle
mov
loopne
push
cmp
out
fwait
lock
push
je
push
cwtl
mov
mov
pop
xchg
movsb
jns
jae
xor
mov
mov
jo
push
mov
out
lds
loope
imulb
mov
sbb
jecxz
mov
jge
and
push
push
jno
lea
cmp
mov
ds
jp
cmpsb
ss
or
sti
andb
mov
sbb
jp
stos
xchg
fwait
loopne
xorb
pop
negl
imul
mov
push
stos
pop
pop
outsb
sub
rolb
rcrb
lret
xchg
xlat
push
mov
lods
popf
xchg
adc
jno
push
shr
movsb
mov
push
hlt
fistps
sub
push
mov
jecxz
or
jae
jge
fstl
sub
dec
mov
xchg
inc
fdivl
or
sahf
cmp
or
in
in
adc
scas
lcall
mov
sbb
or
pop
stos
pushf
loop
mov
int
std
jle
jecxz
movsb
pushw
jmp
or
mov
push
loope
lcall
addr16
pushf
mov
sub
dec
jno
out
xchg
add
push
arpl
cmpsb
inc
pop
mov
mov
sbb
outsb
negl
and
mov
je
jno
cmp
aaa
arpl
into
roll
and
lret
inc
out
push
lock
sbb
push
mov
mov
mov
outsl
jno
pop
scas
pop
pop
test
cwtl
iret
out
xor
shl
fcom
shrl
mov
insb
loope
in
dec
mov
aad
push
loope
fidivrl
mov
loope
jno
loop
mov
shr
dec
pop
mov
sbb
dec
jmp
test
mov
mov
mov
std
mov
loopne
movb
out
push
outsl
mov
imul
scas
xor
pop
push
popa
pusha
inc
sbb
lret
pusha
ds
and
inc
dec
adcb
xchg
dec
and
scas
adc
xor
xchg
mov
call
scas
jle
fimuls
int
testb
lret
jl
cmc
fsubrl
int3
cltd
repnz
pop
fmuls
imul
mov
fistl
jmp
mov
and
sti
lods
jle
inc
push
push
cmpsl
cs
roll
fcomip
roll
lcall
cwtl
lods
scas
loope
sti
push
in
lahf
dec
inc
or
invd
ja
mov
inc
mov
push
bound
dec
mov
orb
or
in
jmp
jg
cmp
jge
aad
mov
mov
jmp
loop
inc
leave
inc
mov
sbb
data16
ftst
insb
inc
add
xlat
lds
inc
pop
adc
inc
push
notb
xchg
mov
lds
jl
pop
insl
movsl
or
cmc
push
mov
sbb
mov
or
in
fdivl
jg
jl
sbb
fadd
add
mov
jns
pop
lret
mov
pmulhw
or
mov
lahf
xor
arpl
cltd
push
out
adc
inc
inc
loope
ljmp
ret
stc
add
xor
clc
movsl
push
or
jmp
vbroadcastf64x4
cmp
adc
cmp
imul
imul
jo
mov
jp
imul
jg
leave
xlat
iret
cmp
cli
cs
rorl
into
jae
test
adc
or
inc
lds
scas
cwtl
inc
push
sarl
jo
test
adc
adc
addr16
into
popf
jno
sbb
push
fsubr
arpl
pop
icebp
movsb
xor
push
lret
push
mov
push
arpl
iret
xchg
jmp
cmp
push
sub
hlt
aas
mov
mov
or
jl
xor
stc
shrb
jae
cmpl
mov
jo
lea
jae
xchg
ljmp
cwtl
insl
mov
aam
inc
cld
popa
cmp
mov
sbb
xor
inc
fiadds
pushf
sbb
int
push
bound
add
cmpsl
imul
sti
int3
les
outsl
cli
cmp
rcll
movl
pop
fsubrp
lea
pop
xchg
cmc
aaa
pop
pop
jne
loope
pop
pop
rcr
mov
mov
out
push
jg
imul
cmp
out
or
sbb
rcl
iret
dec
out
cmp
pusha
cmp
jb
inc
mov
xor
dec
out
addr16
repnz
jbe
or
jmp
pop
lods
adc
inc
jge
jmp
out
sbb
sahf
mov
divb
leave
dec
insl
sbb
loop
mov
sti
jge
repnz
pop
movb
movsb
adc
mov
add
shrb
shll
iret
dec
mov
scas
out
stos
in
addr16
mov
shll
mov
int
jno
mov
cwtl
fisttpl
popf
sub
outsl
pop
jnp
push
ljmp
or
dec
fdivrl
inc
push
ret
scas
mov
jle
popf
addb
sub
jno
or
fwait
cmpsl
jae
push
dec
dec
ret
les
push
leave
and
movsl
test
or
shr
sbb
fmul
cli
sti
out
push
pusha
icebp
fstpl
into
fsubl
xchg
ljmp
cmp
lods
xchg
fildll
mov
add
push
fistl
xchg
lret
ljmp
scas
dec
xor
jne
adc
mov
ja
call
adc
jnp
mov
sarl
loopne
mov
das
mov
imul
stc
fcmovne
ja
and
fwait
pusha
lods
testb
pop
mov
out
jae
mov
in
inc
lods
lahf
pop
inc
fbld
das
mov
lahf
mov
sbb
pop
rclb
push
jae
cs
int
pop
lret
daa
jecxz
adc
data16
mov
or
pop
inc
clc
push
insl
leave
outsl
sbb
pcmpgtw
pop
sbb
pop
and
popf
pminub
fwait
push
mov
arpl
aam
call
or
test
push
mov
insb
jmp
in
loope
or
bnd
lods
or
push
push
mov
mov
mov
repnz
ljmp
jnp
pushf
les
ja
dec
inc
fidivrs
rorl
shrl
lcall
les
insl
jecxz,pt
movsb
icebp
enter
fwait
xchg
xchg
cwtl
push
sahf
mov
xchg
push
int3
lcall
inc
push
add
bound
mov
mov
pushf
lock
jl
inc
and
mov
dec
inc
lcall
push
repnz
sarb
lods
sub
mov
lahf
lods
test
pusha
cs
jne
pop
adc
sahf
cwtl
pop
fstpt
outsl
leave
dec
aaa
dec
pop
jmp
movsl
sti
out
mov
or
ficompl
enter
xchg
aam
sbb
fcmovnbe
iret
push
sub
ficomps
scas
aaa
pushf
dec
stos
pushf
and
loopne
sti
arpl
shlb
ret
xor
cmp
test
or
cwtl
cmc
stos
dec
flds
jno
jecxz
test
movsl
ja
subb
loopne
dec
sti
sahf
test
and
ljmp
jmp
jecxz
mov
int
mov
imul
mov
sub
imul
inc
push
call
leave
adc
jno
andl
hlt
and
adc
or
jmp
repnz
mov
out
icebp
jne
ret
in
jle
or
scas
fcmovnbe
and
sti
push
lret
mov
sub
lock
mov
das
stos
shrl
push
mov
leave
adc
ljmp
mov
ss
stos
icebp
inc
bnd
std
xor
ret
out
std
mov
aas
cld
pop
xchg
dec
sub
loopne
add
les
mov
lret
bnd
icebp
mov
fbstp
sub
mov
xorl
jns
adc
bound
add
jae
lcall
clc
int3
lods
cmp
mov
sbb
cmc
mov
in
jbe
jecxz
or
aaa
mov
stos
call
cmp
mov
cmp
sarb
shrl
pop
insl
inc
and
rcrl
in
xchg
sbb
mov
hlt
test
xor
fwait
cmc
push
pop
lea
pop
cmp
ret
iret
leave
pop
or
sahf
repnz
adc
dec
das
xchg
sarl
out
or
js
test
fmull
fidivl
and
or
leave
xchg
add
rol
insl
mov
or
mov
fcmovnbe
lods
jecxz
fimull
mov
push
gs
aas
mov
rclb
cmc
pop
sbb
xchg
dec
mov
fiaddl
push
jne
mov
jno
fstps
sbb
jg
jbe
mov
fisttpl
push
mov
bound
outsb
dec
sahf
orl
cld
into
idivl
movsb
fincstp
or
data16
mov
leave
lea
stos
frstor
mov
out
je
std
test
paddb
or
arpl
inc
adc
jg
sub
out
hlt
sahf
cmpsl
and
and
into
call
divb
mov
mov
fwait
shr
out
add
lds
rorl
imul
mov
shll
jns
xchg
loop
sets
sub
pop
pop
lret
jle
or
or
arpl
das
pop
cmovne
loop
jge
dec
add
fcomip
jns
push
jl
cmpsl
push
dec
adc
jb
pop
fnstcw
dec
loope
push
sti
int3
jnp
shrb
cmp
pop
dec
data16
inc
call
jle
fdivr
jo
or
mov
jbe
sahf
aas
inc
dec
icebp
push
cmp
jecxz
into
sti
decb
addr16
xchg
mov
lock
and
push
push
xchg
xchg
xchg
jg
je
test
adc
enter
inc
jb
enter
into
ljmp
ja
test
lcall
or
mov
fcomps
fldt
jo
and
and
pop
pop
cwtl
adc
mov
mov
pushf
or
leave
mov
fidivs
and
push
push
js
fdiv
std
lods
out
fwait
sahf
rcrl
pushf
xchg
mov
fdivs
into
rcl
lods
pushf
cmpsl
stos
sbb
xchg
cltd
xor
shlb
aam
out
test
daa
sbb
push
jecxz
imul
lods
fsubrs
movsb
cmp
and
inc
mov
xchg
xor
movsl
push
into
mov
push
imul
adc
pop
gs
jecxz
jmp
jg
cmp
cmpsl
iret
mov
mov
cli
gs
div
into
and
pop
or
sahf
xor
loope
orl
stos
pop
mov
addr16
leave
xchg
popf
xor
enter
in
outsb
stos
lret
push
cmpxchg
jg
repz
jno
sbb
sub
mov
fs
enter
int3
outsb
xchg
pop
and
cmp
push
mov
sti
test
xor
out
pop
pop
mov
js
dec
cwtl
bnd
cmc
xchg
cwtl
mov
dec
jecxz
pop
cmc
subb
flds
call
les
mov
ret
jne
outsl
mov
dec
popa
out
push
pop
dec
jg
and
lods
rol
ja
imulb
xchg
jl
adc
xlat
add
jae
arpl
insb
pop
aas
sub
sarl
or
sub
popa
ss
mov
sti
imul
stos
cs
popf
out
mov
out
dec
in
mov
xor
sub
sub
and
mov
movsb
enter
pop
push
sbb
hlt
daa
pop
lret
leave
add
shll
test
fwait
inc
inc
inc
or
jns
pop
js
int3
pushf
mov
bnd
cmp
outsl
push
pop
div
xchg
add
test
daa
push
out
bnd
repnz
enter
pop
add
pop
into
mov
movsb
aad
loope
mov
mov
and
dec
adcl
je
lret
sub
loopne
cltd
fistpll
imul
cmp
frstor
sub
lds
test
je
scas
jg
and
out
mov
das
mov
aad
cmp
fisttpll
inc
xor
mov
or
or
pop
jecxz
fildl
sub
inc
lret
pop
shll
mov
adc
sbb
ljmp
lcall
cmpsl
sbb
leave
in
lcall
push
pushf
fisttps
push
push
outsb
in
jb
jecxz
hlt
test
orl
mov
jb
stos
enter
xchg
fiaddl
cltd
test
jg
clc
lds
inc
adc
outsl
scas
jmp
push
fistps
push
call
iret
adc
rcrb
bound
or
out
jecxz
into
jle
cmp
call
jg
push
dec
jne
into
pop
mov
scas
sarb
mov
scas
enter
aad
or
test
jle
out
sbb
les
xchg
mov
cwtl
outsl
xchg
and
dec
xchg
into
pop
test
aas
div
lret
insb
jle
mov
adc
jge
cltd
jnp
scas
pushf
outsl
pop
rorl
cmp
pop
jnp
fisttpl
mov
movsl
inc
push
std
in
dec
jo
adcb
push
or
outsl
fstps
out
xchg
push
pop
pop
jecxz
cwtl
jle
aam
xchg
pop
mov
jno
cmpsb
rorl
aaa
outsb
mov
xchg
xorl
outsl
ljmp
pop
jg
cmp
stos
mov
fwait
mov
cwtl
fwait
mov
cmp
dec
es
xor
pop
mov
mov
push
cmpsl
stos
or
xchg
bound
cwtl
scas
dec
mov
xor
loop
data16
sbb
xchg
dec
mov
sbb
pushf
jae
push
sub
mov
cmp
dec
sub
loopne
push
cmpsl
ret
push
std
mov
aaa
cltd
fists
movsb
repnz
fldt
mov
ds
lcall
in
loope
scas
fwait
push
xchg
int3
mov
ret
xchg
mov
movsb
push
ja
dec
jg
gs
icebp
loopne
push
and
leave
arpl
fldt
fldcw
notb
sub
jge
and
aaa
jmp
jecxz
jg
push
push
xor
push
rcrl
sub
xchg
lret
push
push
xchg
negb
sbb
outsl
sub
arpl
lret
shll
cmp
xlat
pop
xlat
or
in
sbb
xchg
xchg
stc
push
jnp
movsb
and
sub
aaa
xchg
adc
popl
std
dec
xchg
or
repnz
fwait
adc
shll
sahf
cmovno
mov
sti
jb
icebp
addr16
enter
mov
xor
jg
cmp
shrl
dec
fwait
test
mov
push
add
dec
into
jae
subl
and
bound
cmpsl
mov
adc
mov
movsl
orl
out
and
lahf
mov
or
jno
insb
sbb
lret
fcomip
add
loop
fldt
in
pusha
push
sahf
outsl
arpl
loop
out
jg
adc
pop
pop
gs
fiaddl
push
js
jb
push
pop
rclb
mov
mov
stos
mov
mov
fildll
jl
pop
ret
cmp
scas
imul
fcoml
rcrl
sbb
mov
sti
in
mov
inc
ljmp
fmulp
and
out
int3
xor
fildll
idivl
clc
add
je
stos
push
iret
ja
popa
cmp
adc
sbb
sbb
popl
cltd
std
cmp
sarb
and
adc
xor
in
sub
cmp
jns
outsl
pop
data16
test
ja
sub
adc
mov
mov
cmc
mov
cmpsb
or
mov
ja
push
orl
pop
shl
in
nop
push
stos
jp
bound
out
popa
test
sub
repnz
or
xlat
stos
jl
outsb
test
fst
or
insl
jns
ss
jne
pop
loopne
mov
cmp
mov
enter
out
jae
cmovnp
sbb
dec
and
sti
aam
xor
cltd
xchg
ljmp
jno
add
xchg
lcall
enter
adc
xchg
xchg
shrb
cmp
imul
sbb
jbe
rclb
push
mov
xchg
insl
push
mov
sti
mov
insl
mov
fidivrs
mov
jmp
jne
loope
adc
push
stos
loopne
kmovb
ljmp
in
sbb
rcll
xchg
push
cmp
xor
lock
ds
mov
fadd
ja
push
or
mov
cmc
add
ja
leave
out
mov
jmp
dec
out
cmpsb
leave
xchg
jecxz
sub
dec
sahf
jg
xchg
add
sub
ficoms
jnp
repnz
insl
lods
pop
jecxz
pop
dec
movl
scas
ljmp
aad
add
adc
mov
xor
ja
notl
cltd
xchg
mov
mov
lret
lock
movsb
push
add
notl
lret
movsb
mov
jbe
push
sbb
aaa
push
aas
cmp
hlt
in
add
mov
mov
imul
cld
pop
or
pushf
jns
jle
movsb
xor
dec
fucomp
in
jmp
xchg
and
int
repz
lock
sbb
int3
bound
stc
loope
stc
imul
mov
mov
and
rorb
fwait
xor
jbe
stos
xchg
push
stos
lret
mov
fcoms
sbb
ffree
ljmp
out
call
popa
xlat
jle
std
btc
leave
mov
ljmp
mov
push
dec
ljmp
mov
or
pop
lods
jecxz
lods
test
testl
addr16
push
ret
jge
ljmp
fcomp
test
ljmp
mov
test
scas
ljmp
test
cmp
icebp
pop
in
and
sahf
aam
pop
mov
nop
sbb
in
in
jg
nop
xchg
add
pop
jge
inc
jae
ljmp
xchg
sti
out
mov
xchg
xor
mov
xchg
xchg
dec
jmp
sub
push
and
ficompl
mov
push
sbb
fsubrl
push
sbb
jno
loope
in
ret
xlat
addr16
cmp
ret
add
mov
shr
mov
lret
jmp
push
mov
mov
sub
pop
sub
or
pop
iret
sbb
ljmp
cmpsl
fwait
and
sbb
ljmp
or
out
ret
pop
ret
sub
jecxz
adc
jmp
pop
into
ljmp
push
jnp
je
addr16
ljmp
scas
adc
imul
cltd
loop
in
jp
mov
aad
xchg
xor
pop
ret
push
fucomi
mov
lods
or
ror
mov
pop
xor
mov
loopne
ret
shr
mov
or
push
stos
adc
leave
in
pop
mov
jmp
adcl
mov
sub
dec
mov
jmp
les
xchg
jl
outsb
stos
pusha
insb
stos
push
xchg
sub
ljmp
shll
xchg
mov
sbb
mov
ljmp
jecxz
jmp
mov
sti
bound
ret
push
imul
mov
pusha
ljmp
ljmp
jb
xor
das
pop
int
fldt
mov
jb
pop
ljmp
ljmp
sahf
dec
mov
pop
das
stos
push
in
xor
adc
xchg
lods
ljmp
cmp
pop
fidivrl
sbb
aad
lock
ret
ret
lock
lea
sbb
ljmp
in
xor
mov
pop
jmp
mov
inc
daa
ret
sub
cmp
or
jnp
sbb
and
pop
dec
jne
ja
scas
mov
leave
inc
sarl
push
loope
outsl
jno
mov
push
and
cmp
mov
add
add
shrb
mov
jle
cld
loopne
jge
imul
mov
xchg
sbb
or
insl
mov
mov
push
xchg
jbe
jle
xchg
std
or
and
or
cmc
repz
test
out
sahf
push
mov
mov
in
adc
xchg
xor
mov
xor
adc
xchg
mov
out
es
in
hlt
pop
jbe
push
fcoms
push
jle
dec
xchg
lret
mov
jg
jae
mov
pop
mov
fucomp
testl
lahf
popf
out
ja
xor
add
stos
add
mov
sub
in
xor
call
imul
imul
sbb
xchg
xchg
sbb
xchg
jecxz
jb
aam
inc
ljmp
data16
dec
test
add
mov
pusha
sbb
jecxz,pn
lcall
xchg
or
cs
repnz
imul
or
sahf
outsb
out
fs
sub
andl
adc
xor
movq
cmp
pusha
push
or
jmp
mov
mov
loopne
cmp
adc
or
pop
imull
pop
adcl
nop
mov
out
mov
inc
fisttpll
lock
adc
pop
daa
dec
subl
pop
mov
aad
neg
rcr
mov
mov
cmc
push
xor
out
mov
stos
mov
xchg
push
lcall
push
pop
das
aam
outsb
jp
outsb
pop
mov
shrl
aaa
in
pop
das
jle
enter
jge
mov
adc
scas
mov
ret
inc
cmpl
xchg
push
pushf
sbb
into
popf
mov
mov
into
out
jle
pop
sysexit
fisubs
in
js
mov
fwait
or
mov
in
push
movsb
jecxz
ja
daa
cmp
mov
sub
in
jecxz
cmpsb
out
jae
push
daa
cmpsl
out
in
daa
arpl
push
testb
push
pop
cli
mov
xor
fstps
jg
iret
je
ds
les
test
iret
in
inc
adc
xlat
add
push
cmp
mov
xor
stc
adc
dec
cmp
loop
jle
rcrb
push
loop
jne
nop
dec
fisubrl
into
test
pop
pop
sub
mov
xchg
jg
movsb
jp
cld
mov
jp
xor
xor
push
lea
aam
jmp
js
push
pop
xchg
lcall
jae
jae
jne
pop
in
popf
les
int3
sub
stos
or
or
pushf
mov
aam
movsl
jl
call
dec
add
fucomi
hlt
cmpb
push
adc
mov
call
sti
inc
pop
insb
pop
xchg
dec
pushf
push
clc
add
iret
mov
dec
add
dec
cmc
cmp
mov
pop
outsl
mov
xor
mov
sub
sub
aam
mov
cmp
shll
mov
or
pusha
fwait
ljmp
mov
sti
clc
push
xchg
cmp
popa
xchg
scas
cwtl
adc
jg
and
jbe
sti
pop
and
stos
cmpsb
loope
jbe
xor
mov
arpl
cli
stos
xor
mov
in
pushf
and
scas
inc
test
pop
cmp
call
xchg
call
test
sub
repz
sahf
sti
mov
mov
dec
push
add
aaa
mov
insl
pop
xor
movsl
xlat
out
sub
jae
mov
push
shll
sbb
mov
dec
outsl
sbb
sbb
mov
pushf
xor
ret
or
jbe
fwait
divl
sub
dec
jmp
test
ret
jmp
adc
and
iret
add
dec
in
popf
pop
out
pop
sub
out
outsl
lcall
mov
pop
js
mov
dec
mov
pop
adc
xor
leave
jbe
mov
inc
cmp
vperm2f128
call
xchg
xchg
rclb
xchg
or
cli
jg
lods
addr16
xorb
lcall
mov
and
jns
iret
jbe
adc
movsl
push
idivl
add
jl
cmpsb
and
lea
mov
fbstp
push
lock
out
xchg
int
cld
sbb
sti
clc
pop
sub
aas
dec
sbb
push
int
idivl
les
jg
adc
and
enter
out
fiaddl
xor
adc
inc
mov
mov
outsl
mov
sub
pushf
jp
sar
push
pusha
sbb
pushf
pop
ret
sti
cmp
loope
clc
out
jne
movsb
adc
jnp
push
shlb
imul
cltd
inc
loope
out
sbb
lods
popa
fcompl
ds
stos
stos
cmp
lods
aad
add
xchg
fwait
jae
sbb
or
in
outsl
sbb
iret
xor
fsubrl
out
adcl
and
sub
fsubr
pop
jmp
int3
inc
sub
outsl
std
scas
movsb
icebp
and
sbb
mov
mov
dec
cmp
leave
cmp
jae
pop
lcall
movb
push
jp
loopne
cmp
cltd
sbb
mov
pusha
mov
loop
popa
pushf
flds
lcall
into
insb
stc
jb
jp
movsb
enter
pop
mov
das
cli
mov
aam
push
test
push
mov
mov
leave
dec
in
mov
ret
into
fsubs
push
fldcw
sahf
cmc
bound
out
popf
cmp
leave
repz
push
jle
mov
lcall
sbb
pop
sar
xor
call
sbbl
adc
movsb
icebp
add
mov
push
push
addr16
jno
insb
pop
ljmp
mov
mov
pop
mov
mov
sti
rcl
decl
mov
stos
mov
mov
jle
and
rorb
sub
rorb
mov
and
nop
jns
stc
mov
jecxz
sbb
ss
popa
inc
std
sbb
sub
jo
test
jno
dec
in
pop
loop
test
scas
insb
aad
mov
mov
pop
mov
outsb
fsubr
jo
fstp
cmpb
jmp
stos
mov
mov
lods
jb
aas
inc
fimuls
rorl
and
stc
pop
add
filds
jns
imul
dec
icebp
jl
shrl
popa
shlb
loopne
mov
loop
fsts
enter
rcl
enter
pand
cld
cmp
xor
jae
mov
jo
idiv
and
jmp
bound
adc
sub
jns
jmp
out
or
scas
fucomi
jb
cmc
stos
aam
inc
xlat
cwtl
les
test
out
xchg
jmp
mov
add
sbb
mov
lea
push
jp
mov
mov
movsl
das
popa
cld
cmp
cmc
or
ljmp
mov
dec
test
data16
ret
ret
sti
push
sahf
pop
data16
shl
leave
shr
flds
enter
cs
xor
outsb
out
out
add
mov
pop
pusha
in
iret
and
mov
jle
cwtl
xchg
imull
fwait
cmp
mov
adcb
jo
idivb
insb
mov
push
mov
cmp
dec
adc
push
sub
mov
and
lds
lcall
icebp
outsb
movsl
jno
or
rcr
mov
cli
and
arpl
cmp
rorl
and
push
mov
incb
jno
xchg
dec
and
jge
mov
clc
ret
jo
lea
sub
cmc
jne
pushf
lahf
sub
test
jg
jge,pt
stos
push
ret
and
or
popf
pushf
out
inc
push
lea
popa
out
push
iret
push
push
mov
xchg
lods
mov
mov
xchg
out
xor
cmc
andb
inc
xchg
or
out
mov
inc
rcll
cmp
loopne
or
shlb
jno
push
loope
call
inc
stc
je
mov
rcrl
loope
sub
sbb
insb
popa
mov
jnp
jecxz
addb
xor
out
jle
cmp
int3
xchg
mov
div
mov
loope
add
or
mov
test
loop
outsl
cwtl
imul
ja
lds
pop
das
cmpsl
in
cld
xor
pop
bound
mov
jmp
jge
pop
mov
or
stos
sbb
inc
dec
dec
test
mov
pop
insb
pop
in
pop
or
ss
jg
mov
cmp
pop
push
sbb
mov
xor
std
cs
jae
dec
in
shrl
fisttpll
adc
outsb
jp
cmp
push
pop
cmp
cmp
in
sub
lcall
pushf
mov
pusha
inc
adc
push
pop
push
insl
sub
cmp
movsb
mov
insb
cmp
enter
aas
cmpsl
add
outsb
incl
sub
in
ror
and
popa
popf
fsubr
loope
mov
cwtl
push
jl
in
outsl
mov
enter
xchg
loopne
mov
sub
cwtl
xchg
inc
mov
sti
int3
xor
mov
push
inc
push
cmpsl
rclb
jae
push
outsl
mov
adc
dec
popf
xor
sarb
lret
sbb
fistps
mov
xlat
ds
push
push
lods
and
outsb
outsl
jne
add
rcll
addb
xchg
dec
rcrb
std
mov
test
test
int
and
xchg
or
js
mov
jae
cs
outsl
call
lcall
push
jb
data16
add
lret
fs
push
cli
add
sahf
iret
insb
ljmp
or
ljmp
vmwrite
imul
adc
stos
or
fdivl
mov
pop
sub
sbb
in
iret
mov
stc
sub
or
inc
mov
and
or
dec
jg
clc
dec
inc
pop
and
add
dec
jmp
lods
mov
stos
mov
enter
icebp
pop
aaa
fildl
frstor
mov
loope
xchg
sbb
mov
or
test
mov
movsb
sbb
or
popa
loope
inc
loope
into
mov
adc
cmc
sub
jo
or
or
mov
dec
mov
sbb
mov
fsubl
je
in
pop
sub
pushf
or
outsb
loopne
dec
mov
xchg
xchg
mov
inc
pxor
ret
mov
movsl
xchg
mov
xchg
cs
pop
mov
push
jle
popf
call
cltd
lods
sar
repnz
xchg
pop
popa
imul
jnp
stos
dec
xor
lret
fldcw
in
xchg
sbb
gs
sbb
aam
or
mov
pop
in
mov
or
fnstenv
or
out
mov
and
pop
cmp
lock
jle
jo
daa
xor
mov
inc
cmpsb
sti
cmp
test
lock
dec
xchg
les
add
lret
repnz
adc
sub
cwtl
sbb
arpl
xor
sahf
scas
or
push
fcoml
aaa
push
pop
ss
pop
addr16
jmp
ja
jno
mov
or
ja
das
push
das
xchg
or
ljmp
xor
popf
lret
rorl
in
ds
pushf
cmp
sbb
enter
inc
sbb
mov
xchg
inc
stos
mov
jne
dec
pop
ja
iret
repnz
or
scas
push
idivl
or
pop
stc
int3
fsubrs
ljmp
inc
jmp
test
sti
loop
mov
idivl
adc
add
movsb
mov
aad
mov
loope
lock
stos
std
mov
add
fdivl
or
mov
inc
test
rorb
movsb
imul
cmp
add
fdivp
lcall
and
fwait
or
fwait
mov
dec
push
andb
adc
mov
test
xor
in
xchg
add
scas
or
push
pop
ficoms
cwtl
shll
popf
push
into
lds
sub
cmp
insl
jg
insl
loopne
aaa
roll
out
push
out
arpl
sub
inc
sub
shrl
add
pop
mov
lea
push
int
js
jnp
mov
mov
mov
decl
bound
mov
testl
mov
mov
ret
js
jg
stos
pop
movsb
inc
add
sub
and
ljmp
add
cwtl
mov
scas
cld
stc
ja
xchg
ljmp
ss
sarb
sub
sbb
xorb
mov
arpl
pop
mov
jge
xchg
mov
xor
out
icebp
lahf
pop
xor
fbstp
int3
stos
lods
or
add
mov
addr16
cmp
out
mov
mov
mov
jp
loope
adc
stos
jl
ja
mov
mov
js
or
loopne
mov
cltd
xchg
jecxz
adc
xchg
jno
sub
in
stos
lods
add
add
shl
cwtl
sahf
cli
imull
push
out
mov
fistl
and
lods
jo
jns
icebp
cwtl
ja
jnp
or
lret
or
shlb
lret
movsb
dec
mov
mulb
dec
pop
out
push
sub
add
fcompl
fisubrl
and
or
lods
icebp
into
cld
sbb
xchg
mov
jp
sub
jne
sub
fbld
leave
popa
cmp
outsb
loopne
jle
fnstcw
int
mov
lret
loop
mov
in
mov
lods
jge
das
adc
mov
mov
jle
mov
addr16
mov
sbb
lods
mov
test
dec
scas
addb
scas
cmc
dec
or
hlt
int3
pop
dec
mov
adcl
adc
rcr
push
xor
add
dec
mov
xlat
movsl
add
xchg
mov
mov
dec
imul
daa
movsb
mov
cmpsb
cltd
cmp
mov
mov
shll
int3
shrb
jecxz
in
ljmp
jo
and
adc
or
movsl
call
mov
dec
adc
fsts
std
push
out
cwtl
jmp
cmpsl
movsl
inc
mov
mov
imul
filds
imul
or
lods
jae
loopne
and
fidivs
xor
jbe
jo
xor
hlt
or
hlt
pop
adc
mov
pop
loopne
lret
ret
sbb
or
pop
imul
out
add
push
mov
or
arpl
call
mov
cltd
add
fsubrl
mov
movsl
mov
lods
add
mov
push
bound
pop
sbb
inc
shll
mov
lcall
push
into
loop
in
pop
xchg
adc
add
ds
mov
loope
idivl
push
add
mov
leave
adc
movb
mov
inc
rcrl
ljmp
pop
mov
int
lret
hlt
jns
pop
cmpsb
adc
jmp
jmp
cld
ffree
popa
hlt
pop
clc
xlat
movsb
dec
fiadds
xor
jge
scas
xchg
inc
scas
cwtl
out
sbb
repnz
cmpsl
dec
xchg
ja
mov
push
adc
mov
lds
jnp
add
mov
out
xchg
stc
movsl
mov
mov
das
lret
shrb
xchg
frstor
out
push
xor
mov
scas
mov
bound
enter
into
mov
push
or
ror
pop
lods
and
or
xchg
adc
out
test
cmpb
mov
inc
popf
dec
sub
mov
sub
mov
pop
pop
mov
jne
je
push
call
push
mov
xchg
sub
scas
sbb
add
mov
mov
mov
cmpsl
in
movsl
ficomps
loopne
popf
xchg
ja
dec
jno
pop
xchg
stos
adc
sti
add
cmpsl
cs
testb
jle
xchg
lcall
sub
mov
xlat
das
rclb
lods
pusha
dec
mov
jle
movsl
mov
jp
stos
shrl
int3
daa
pop
jno
movsb
scas
push
shrl
pop
lcall
aam
push
cmp
movb
inc
test
loope
leave
xchg
dec
jle
pop
fdivl
mov
xor
inc
shl
pop
in
sub
test
mov
or
test
in
dec
inc
jnp
mov
lea
mov
dec
sarl
add
jle
mov
push
sahf
ljmp
out
std
leave
test
data16
in
jecxz
and
lock
out
rol
mov
enter
sbb
cmpsl
outsb
pop
cmc
int3
adc
sti
mov
mov
leave
pop
enter
outsb
aad
push
adc
mov
stos
out
sub
imul
sti
cmp
testb
push
xor
mov
jmp
jmp
fs
sahf
inc
cmp
ficompl
leave
xchg
test
insb
fimuls
call
lods
mov
out
hlt
popa
mov
sti
loope
mov
mov
jg
push
lea
rclb
int3
mov
push
and
neg
fbld
push
rol
pop
pop
lcall
push
sbb
jmp
out
jmp
mov
pop
das
out
lcall
jns
adc
aaa
int3
xlat
sahf
lock
mov
xchg
test
outsl
xor
scas
or
mov
arpl
mov
xchg
mov
mov
mov
int
decl
or
or
adc
lret
rorb
cmp
ja
sbb
aas
lret
leavew
sbb
movsl
sub
mov
das
test
fldl
push
xchg
push
popf
dec
mov
inc
fld1
fisubl
jbe
xchg
push
pop
incl
adc
mov
stos
inc
push
mov
call
jae
pop
test
sbb
arpl
subl
cmp
insw
je
add
sub
push
sbb
xlat
rcl
xor
pop
jge
faddl
test
mov
test
jae
or
pop
adc
pop
push
push
fucomip
movsl
fnsave
pop
lock
add
push
aas
cltd
inc
mov
scas
cld
or
push
lret
pop
ja
pop
pop
lret
xor
inc
jg
push
mov
jae
mov
mov
sub
cmc
rol
imul
sub
loopne
jg
push
popa
ficomps
add
pop
inc
shrb
add
inc
test
sti
inc
and
cmpsl
ret
outsl
jg
or
bound
shrl
inc
xor
adc
push
test
fbld
pop
into
imul
sub
ja
sub
or
fiaddl
or
add
add
mov
nop
pop
subb
xchg
sti
push
dec
sub
pop
pop
adc
xchg
sbb
xchg
jmp
fbld
ret
sub
xchg
ja
mov
int3
jge
jl
adc
mov
mov
lods
mov
ja
add
sbb
xchg
or
hlt
xchg
cmpsl
mov
jecxz
pushf
mov
fwait
popa
idivb
std
xor
cld
xchg
aam
leave
lahf
out
add
push
or
stos
push
out
daa
jmp
or
push
pop
test
sti
and
in
stos
push
pop
addr16
or
push
dec
in
ljmp
push
mov
popl
out
xor
aad
mov
sti
mov
sbb
pop
push
jle
lds
loope
aad
adc
popf
or
test
gs
mov
adc
push
enter
pop
stos
jb
or
push
loopne
xor
sbb
pop
test
inc
negb
insb
aas
dec
push
fcomps
sub
in
out
pop
mov
lock
cli
xchg
mov
cmc
outsb
pop
fsub
enterw
jmp
xchg
sarl
cmpsb
rcl
lret
lcall
mov
xchg
xchg
std
or
sub
adc
nop
mov
add
or
fs
aaa
push
cld
lock
xor
fsts
roll
add
in
sub
pop
out
xchg
xchg
popl
jmp
mov
pop
ljmp
pushf
or
mov
mov
and
in
add
mov
scas
cmp
nop
mov
push
push
movb
push
outsl
cmc
call
dec
pop
vcomisd
inc
push
lahf
rol
imul
loope
mov
test
loope
pop
xor
push
jmp
mov
mov
lret
sarl
std
lods
sbb
xor
sbb
add
xchg
sbb
negb
mov
js
int3
pushf
push
jp
or
jl
jmp
js
push
fstps
nop
cltd
addr16
xchg
nop
cli
arpl
imul
rcrb
negl
mov
mov
nop
mov
xor
adcl
xchg
pop
xor
insl
jecxz
push
stos
out
cwtl
xchg
push
xlat
xor
pushf
nop
int3
jmp
pushf
verw
push
cmpsb
scas
out
adc
mov
fucom
jg
dec
in
repnz
lret
out
sbb
dec
movsl
and
fsubrp
or
hlt
push
rol
fildll
sahf
std
cmp
andb
xchg
sub
and
lcall
jne
sahf
out
aaa
sahf
sti
in
mov
std
mov
lret
mov
push
ret
xor
cwtl
sub
daa
jns
mov
add
in
cmp
pop
push
xor
dec
mov
aad
mull
inc
arpl
xchg
push
sbb
inc
mov
int3
call
les
data16
pop
cli
add
jbe
mov
lock
in
cmp
mov
jecxz
pop
or
scas
enter
jmp
mov
das
stos
mov
dec
cld
inc
fldl
jmp
insl
mov
inc
adc
jecxz
cwtl
push
aas
pop
jl
xchg
dec
mov
adc
or
sbb
ret
repnz
jecxz
pop
jns
mov
cmp
lcall
out
push
pop
pop
std
xor
xchg
mov
jmp
cld
and
test
pushf
mov
stos
jl
f2xm1
pop
je
and
shlb
cmpsb
aaa
fdivr
add
and
or
shrl
sub
test
fucom
rcrl
in
fisubrl
pop
dec
push
sub
aad
fdiv
arpl
mov
or
daa
das
mov
insl
push
xadd
stos
or
in
xlat
push
hlt
sbb
adc
mov
sbb
adc
mov
in
jle
dec
mov
clts
pop
sahf
ja
jmp
sti
arpl
loopne
sbb
fs
inc
mov
fcomip
sbb
roll
push
jns
inc
cmp
movsl
stos
cld
sub
ja
mov
push
arpl
push
cmp
clc
insb
push
add
in
push
push
shl
and
jmp
adc
adc
sbb
icebp
fcoms
push
out
popa
inc
inc
aad
enter
pop
mov
jecxz
jbe
jmp
mov
cmp
jmp
push
scas
xor
pop
sbb
ficompl
mov
jmp
ret
int3
push
pop
mov
cmpsl
and
cmp
pop
dec
pop
jp
cwtl
dec
loopne
jne
add
dec
adc
mov
enter
jo
xchg
jbe
lock
pop
inc
xor
fs
sbb
packsswb
lret
test
pop
jns
push
push
dec
rcr
mov
enter
test
loop,pt
idivl
scas
mov
jnp
mul
and
jecxz
in
and
pusha
fisubrl
mov
std
sbb
and
std
les
jmp
sub
push
icebp
jmp
lods
push
lock
or
inc
lock
fwait
jecxz
push
dec
sub
mov
pop
or
stc
mov
mov
rorb
jmp
mov
sti
or
aaa
int3
shll
call
into
sub
into
rclb
flds
xchg
cltd
in
in
sti
jl
push
aas
pop
int3
rcrl
pop
mov
adc
xchg
aaa
sbb
out
sub
mov
es
scas
stos
dec
mov
xor
push
mov
and
jb
sti
out
or
iret
mov
pop
jb
bound
or
data16
ss
clc
sbb
hlt
dec
jge
xor
fildll
mov
call
scas
test
mov
ljmp
movsl
jmp
xor
inc
ljmp
add
or
jle
les
sub
jmp
int3
push
bound
jmp
dec
cmpsl
movsb
or
int3
add
push
mov
notl
xchg
push
dec
gs
jecxz
jmp
jbe
or
add
xlat
and
sub
in
mov
ret
mov
pop
frstor
test
inc
mov
inc
sbb
jns
cltd
loopne
fwait
test
sti
out
xchg
ss
mov
jg
cwtl
pushf
das
cmp
jbe
sbb
fsubl
ffree
outsl
ret
mov
in
and
data16
ja
pop
fnstcw
out
mov
pop
sbb
sub
loope
dec
cmp
cs
std
push
xchg
lret
pop
pop
adc
les
scas
pop
testl
clc
test
rcr
pop
ljmp
scas
test
loopne
and
push
pop
sub
sbb
daa
sti
mov
out
mul
mov
dec
jg
adc
testb
xor
in
cmp
stos
fnsave
sbb
ret
ljmp
inc
call
jbe
or
dec
bound
test
jmp
and
sbb
adc
cmp
or
rcll
nop
xchg
lret
mov
lret
pop
ret
divb
mov
lock
sub
es
xor
jle
sub
mov
scas
jmp
aaa
fistps
jb
hlt
cmp
dec
xchg
loope
jns
pop
das
bound
dec
add
pop
mov
cwtl
dec
adc
test
mov
mov
lahf
push
dec
mov
dec
or
pusha
push
and
daa
int
ds
clc
into
pop
jge
jno
dec
lock
jecxz
jmp
loopne
mov
jno
cli
repnz
cmp
jecxz
push
pop
mov
mov
xchg
push
icebp
jmp
les
enter
stos
jmp
or
xchg
lock
push
and
arpl
pop
sahf
dec
fdivrl
cmc
test
jl
lock
cmp
or
stos
mov
out
sub
xchg
cmp
inc
mov
sub
mov
repnz
cmp
cmp
or
dec
mov
popf
mov
mov
lahf
iret
push
ja
sub
jg
sti
cld
scas
xchg
in
aam
fistpll
in
cmp
sub
push
out
jno
movsb
push
jecxz
or
xchg
imul
int3
xchg
jl
sub
popw
lods
lds
xchg
push
leave
popa
les
xchg
imulb
mov
fs
lahf
mov
fisttps
add
aaa
enter
dec
popa
aaa
sti
pop
mov
mov
push
movsl
xchg
cmc
push
fstpt
out
mov
imul
scas
jg
sbb
mov
test
cld
cmp
sub
sbb
lea
xchg
sbb
notb
divl
cmp
data16
sbb
leave
or
aas
xchg
jo
xchg
icebp
sub
test
inc
mov
pop
ja
int
jle
jg
ljmp
ds
out
int3
or
sbb
or
push
jmp
xchg
jmp
pop
dec
scas
inc
mov
das
cmc
mov
push
mov
fsubrl
pop
pop
xchg
mov
mov
outsl
rolb
inc
daa
loop
cmp
repnz
mov
ljmp
shll
cmpsl
jae
fmuls
push
addl
aam
push
dec
inc
fmul
ja
popa
push
enter
ljmp
fistps
shr
jne
or
adc
aas
mov
in
mov
xlat
and
shrl
call
mov
loope
dec
outsb
pushf
add
xor
or
mov
xchg
pushf
cmp
fcmove
lret
fcoms
pop
int3
pop
fcoms
mov
push
add
or
jmp
add
in
iret
jo
sub
ficoml
pop
shl
cmpsb
das
jge
fldenv
push
cld
xchg
cmp
jle
sarl
hlt
pop
aas
je
mov
pop
jge
mov
out
in
push
xchg
jo
xchg
inc
cli
insl
insl
pop
bnd
stos
out
scas
lock
in
and
scas
xor
add
mov
fistpll
loop
cmp
mov
mov
xchg
test
loop
addr16
in
icebp
loop
xchg
loopne
inc
leave
mov
lock
icebp
iret
xlat
in
adc
xor
out
cltd
rolb
flds
or
rcrl
cld
fwait
pop
das
rcrl
mov
subb
sub
lcall
sub
lcall
sub
lcall
sub
lcall
shl
iret
shl
mov
rcr
xchg
lret
push
jo
adc
cwtl
xlat
stos
lret
cmpsb
into
out
xchg
push
mov
cltd
inc
nop
mov
add
mov
jno
sti
adc
jmp
or
add
stos
mov
lods
jb
sti
aam
imul
sub
adc
jge
jnp
adc
popa
jae
scas
scas
mov
jle
sbb
jne
imul
jb
hlt
out
shlb
adc
push
mov
jge
xchg
daa
dec
clc
leave
cmp
add
cltd
pop
dec
xchg
insl
inc
test
sub
or
movsl
xchg
ja
or
rcrl
cmp
movsl
jmp
or
shll
pop
dec
xor
shrb
mov
xchg
shl
in
ds
testl
test
adc
jb
inc
xor
cmc
mov
int
mov
jo
xchg
mov
inc
roll
xchg
mov
jns
ffreep
push
and
loop
inc
xchg
pop
pushf
xorl
hlt
rorb
xchg
imul
jecxz
mov
sub
xchg
movsb
rcll
pop
stos
pushf
lret
data16
cmp
sub
and
mov
push
test
mov
jo
or
or
push
mov
jmp
push
scas
test
add
fistl
add
and
sbb
and
lock
mov
iret
pushf
or
sbb
and
pushf
mov
orb
pop
hlt
stc
xor
cmpsb
pushf
repnz
call
fs
cmpsb
add
cmp
dec
movsb
inc
push
popa
or
aad
mov
xor
fbld
loope
popf
xor
or
test
sbb
lahf
fiadds
data16
add
mov
add
or
pop
mov
mov
adc
std
shlb
fidivrl
rclb
mov
jl
cmp
pop
add
shlb
cmp
mov
rorl
testb
in
int
jbe
pop
stos
sbb
or
icebp
push
inc
dec
ror
cmp
cli
pusha
pop
sahf
sub
jae
iret
hlt
mov
pop
icebp
out
stos
pop
jmp
scas
pop
out
stos
loop
fisttps
out
sbb
imul
imul
xchg
or
pop
pop
lds
shrb
jge
lcall
in
clc
into
ds
mov
imul
or
adc
push
loope
push
int
scas
lret
les
ja
call
flds
rcrl
push
gs
shll
mov
ja
aad
shlb
fmuls
cld
push
stos
notb
mov
aaa
ljmp
fadds
dec
bound
fnsave
or
test
cmc
inc
adcl
rorb
out
les
and
inc
fstpt
push
mov
dec
mov
mov
mov
dec
dec
push
pushf
stos
out
jns
fst
lahf
loop
pop
dec
inc
jo
ja
call
mov
sti
fnstsw
jmp
or
and
dec
scas
jb
aad
scas
leave
dec
pop
add
test
ljmp
sub
enter
movsb
jae
int3
push
mov
mov
sti
movsb
dec
rclb
mov
jle
adcl
mov
dec
incb
sub
mov
add
jbe
stc
ljmp
xlat
sub
subb
ja
ret
mov
movsl
idivl
gs
loope
cli
cmc
and
cmp
cmc
jg
dec
push
ret
enter
pop
add
mov
out
jecxz
push
loope
cmp
jecxz
imul
shl
mov
int
add
xor
push
negl
xor
or
jae
enter
mov
jo
movsb
fwait
data16
push
ret
mov
aas
imul
filds
loop
loopne
push
pop
jbe
pop
sub
jg
je
xor
outsl
ret
ljmp
leave
sarl
xchg
cltd
test
stos
lods
jbe
shlb
popa
jecxz
and
clc
imul
imul
std
or
aas
and
sub
add
ja
test
cs
dec
jle
adc
out
or
rclb
mov
call
sbb
mov
mov
xchg
fnstsw
arpl
cwtl
mov
xlat
push
inc
mov
out
jg
jmp
and
mov
push
pop
mov
rcrl
jp
stos
scas
outsb
jg
mov
or
loopne
mov
bound
std
cmpsl
xchg
add
push
adc
dec
movsl
enter
addb
into
into
out
dec
mov
aaa
jle
leave
push
repnz
jg
stos
mov
daa
cmp
sti
sbb
jno
cmpsb
adc
sub
pop
rcll
ja
inc
or
adc
in
lock
sbb
scas
pushf
lods
loope
hlt
push
in
lock
mov
repnz
add
and
inc
inc
cmp
sbbb
loop
push
pop
pusha
xor
popf
jle
and
scas
mov
cwtl
fistpl
aas
and
dec
or
ss
aad
or
sar
and
mov
or
cltd
insl
and
std
add
xchg
addr16
aad
pop
fs
clc
dec
and
addr16
and
or
test
cltd
hlt
mov
stos
mov
ja
jge
testl
mov
mov
xchg
mov
pop
lods
xchg
mov
dec
inc
xor
stos
or
cmp
cmp
rcrl
test
mov
je
mov
rcll
fs
jne
xor
stos
movsl
aas
outsl
jge
ss
push
cli
cmp
dec
int3
mov
filds
xchg
pop
cld
scas
inc
aam
in
cmpsl
sub
jecxz
jg
and
cmp
jg
clc
daa
xchg
mov
or
insl
out
sti
test
std
dec
popf
mov
or
hlt
jg
xchg
cmpsb
int3
int3
mov
adc
mov
and
stos
xor
enter
sub
ja
fsub
icebp
insl
sbb
repnz
bound
inc
jmp
ljmp
js
cmc
jo
mov
rcrl
sahf
sub
int3
sti
mov
andb
or
test
add
call
lret
pop
imul
mov
cwtl
push
xchg
mov
sub
sub
into
pop
push
cmpsb
pushf
bound
jmp
out
sarl
ss
in
faddp
loope
xor
sbb
sub
out
and
cli
sar
cmp
xor
rol
xchg
xor
jge
test
push
insb
mov
lods
data16
dec
hlt
dec
and
push
out
popa
int3
mov
push
bnd
stc
dec
cmp
mov
loope
lods
or
jbe
add
inc
std
adc
aaa
and
xchg
xchg
sub
sub
sbb
cmp
and
dec
adc
cmp
imul
leave
loopne
test
imul
or
fisubrs
fdivs
out
cmc
sahf
xchg
ljmp
loopne
jmp
jge
push
pop
cli
and
into
mov
loope
push
and
repnz
fwait
or
inc
loop
lea
dec
and
and
bound
or
push
add
mov
outsl
xchg
jne
adc
push
sub
sbb
sbb
and
adc
rorb
pop
xor
xlat
scas
repnz
inc
negl
imul
xlat
cltd
imul
shl
add
into
out
jns
imul
inc
into
fnsave
xchg
and
shlb
sub
js
dec
mulb
pushf
lea
pop
add
push
add
sbb
ret
ja
sub
ja
stos
mov
adc
cmc
push
or
cltd
out
sbb
mov
ret
jb
lret
mov
das
push
dec
sub
and
jae
fnstsw
jnp
jecxz
mov
mov
cli
xchg
repz
jle
ds
jle
cmpsl
xor
std
mov
lret
std
in
fnsave
scas
movsb
je
loope
inc
lea
add
or
mov
pusha
insl
mov
mov
cmp
in
adc
sbb
xor
jmp
stos
leave
xchg
mov
pop
fyl2x
mov
jno
xchg
mov
mov
lcall
stc
xor
or
mov
sub
cmp
outsl
mov
mov
cmp
sti
daa
and
mov
lea
mov
and
jns
fsts
or
out
and
pop
aad
or
ja
mov
sub
jg
fcompl
shll
sbb
add
imul
add
inc
test
sti
loop
js
scas
cmpsl
mov
xchg
jmp
scas
stos
jl
mov
roll
jg
pop
cltd
maskmovq
divl
push
stos
and
cltd
mov
lods
fbstp
pop
lcall
inc
and
mov
mull
arpl
call
mov
jmp
cmp
lcall
out
imul
push
jmp
outsl
and
iret
cmc
jns
or
xor
add
lea
push
mov
jge
jnp
mov
negb
loope
data16
mov
adc
cltd
add
push
call
jl
inc
sbb
xor
mov
scas
pop
or
jbe
xor
outsl
cwtl
hlt
rorb
mov
hlt
rorb
inc
bound
jae
sub
lock
mov
or
shlb
call
push
shll
ret
test
add
add
movsl
int
add
dec
fbstp
loope
mov
pop
loop
push
fs
jno
sbb
ret
jbe
int3
into
jecxz
dec
sub
mov
cs
jmp
jb
inc
dec
jl
loopne
sub
ljmp
out
dec
imul
jmp
out
out
cmpsb
mov
scas
idiv
das
clc
add
bound
test
out
callw
scas
lahf
test
jle
sti
xor
pop
loope
jecxz
outsl
sub
popa
xor
insl
rorb
pop
sbb
outsb
and
inc
insl
mov
ds
shr
jmp
jo
imul
shlw
xchg
lods
mov
je
xor
je
mov
or
mov
rcrb
xor
repnz
arpl
ret
jmp
inc
enter
faddp
pushf
stc
pop
jmp
idivl
data16
cmovle
push
cmp
add
jmp
popa
decb
dec
xor
out
or
aas
in
mov
imul
lret
mov
pop
pop
lahf
dec
std
mov
adc
push
or
leave
ret
add
cmp
jg
push
enter
jbe
jl
or
orb
scas
mov
add
scas
icebp
into
push
enter
push
fildll
jbe
jle
dec
xor
movhps
sbb
add
out
add
cmc
mov
shr
or
sub
loop
aaa
xchg
add
std
ds
cmp
cwtl
popa
aaa
fidivrs
in
sar
int3
mov
aas
movsl
cmp
jmp
cmpsl
mov
cltd
add
stos
outsb
stos
fcmovu
sysenter
sub
push
or
loop
rol
int
pop
jecxz
xchg
dec
cwtl
sub
push
xlat
or
out
out
jle
loope
jb
out
shll
shl
fs
mov
xchg
jne
push
xor
push
mov
lods
stos
enter
aam
outsb
cmc
outsl
movsl
out
jg
push
adc
int3
sbb
pop
shl
inc
bound
mov
shll
jmp
cmc
xchg
jge
out
lcall
sarb
movb
adc
gs
and
mov
mov
push
iret
out
pop
and
sub
adc
xchg
pushf
movsb
stos
mov
sbb
fnsave
mov
or
or
sbb
orl
stos
or
jne
subb
lds
jecxz
sbb
pop
into
push
fnsave
lock
and
popa
add
xchg
pop
in
mov
rorb
cmp
mov
jg
xor
movsb
loopne
sbb
cmp
lock
push
push
leave
inc
fsubs
aas
fldt
or
xor
mov
loop
push
je
lods
mov
arpl
jo
fistpll
insl
or
jb
cld
das
movsb
sti
pop
cli
fsubrl
rol
lahf
sub
bound
xor
cmp
dec
add
into
or
out
les
outsb
fidivs
in
push
mov
popf
cmp
cmp
test
or
lahf
xor
adc
lcall
scas
jae
in
out
or
add
inc
xchg
jo
ss
jecxz
fadds
data16
inc
cmc
xor
jbe
cmpsb
dec
push
push
out
shll
int3
jbe
in
mov
repnz
outsl
addr16
and
xchg
cmpsl
ss
pop
je
lahf
push
bound
outsl
xor
sub
xchg
cli
pop
dec
loopne
rcrb
sub
sarl
test
aam
cmp
rcl
mov
repz
data16
pop
jne
pop
jmp
lock
adc
jmp
push
cmpsb
and
fbld
mov
cmc
xchg
xchg
movsb
jmp
xlat
call
rcrl
mov
outsl
push
bound
xor
call
jae
rcrb
mov
icebp
xchg
out
pop
inc
test
mov
and
xlat
lock
sub
inc
inc
jecxz
iret
push
push
push
popf
out
cmpsb
xor
mov
imul
ljmp
or
or
lock
mov
loope
push
jecxz
ret
mov
imul
cmp
sarl
mov
cmp
ret
stc
dec
imul
adc
dec
sub
jbe
addr16
fmul
test
lret
mov
ficoms
dec
sti
adc
push
jbe
imul
push
mov
ljmp
test
lock
mov
mov
inc
dec
jne
mov
jecxz
jnp
jle
mov
or
push
mov
fwait
push
movsb
ret
int
lock
xchg
adc
and
add
jl
cmp
or
add
outsl
xor
cmp
push
sysret
repnz
or
dec
hlt
cmp
sub
jg
push
jmp
ja
jno
add
or
sub
or
loopne
xor
jno
mov
xorl
add
push
pop
int3
repnz
adc
dec
in
gs
incl
shlb
clc
test
pop
sbb
fdivs
lock
sti
fbstp
and
dec
fnstenv
pop
pop
mov
fcoms
mov
add
rcrl
fisubrs
in
shlb
bound
push
aam
dec
loopne
es
jae
adc
leave
imul
pop
jnp
xchg
mov
ss
sbb
mov
lds
cmpsl
out
pop
and
lods
fdivrs
je
mov
icebp
int3
je
xchg
lahf
stc
test
and
mov
jmp
movzbl
adc
mov
bswap
call
push
push
lret
mov
test
sub
sbb
jno
test
or
div
stc
ficompl
mov
call
js
pop
xchg
adc
je
aad
popf
sbb
cwtl
enter
adcb
sbb
add
insl
hlt
push
sub
mov
fwait
mov
inc
insl
cld
icebp
sub
or
dec
loope
sbb
test
in
ja
mov
stos
cli
jne
frstor
cwtl
sbb
ret
insb
lds
xchg
popa
aas
xor
loopne
pop
add
cmpsb
enter
call
push
jnp
das
andl
mov
mov
fwait
jo
sub
pushf
dec
sbb
scas
ljmp
lods
into
negl
or
push
and
xchg
push
js
sti
popa
in
cmovnp
push
sbb
or
push
shlb
pop
mov
cmpsl
xlat
in
scas
jne
cmpl
cwtl
iret
dec
jno
cmp
hlt
xchg
dec
out
insb
in
mov
fistpl
outsl
aad
jne
push
fnsave
stc
sbb
sub
sub
pushf
pop
dec
scas
jb
out
scas
stc
bnd
cmp
mov
ja
adcl
mov
in
push
call
pushf
out
sahf
jne
cmp
mov
test
mov
adc
sbb
gs
cmpsl
insl
fucomip
leave
jo
push
inc
or
or
ja
cmc
fidivs
mov
fildl
or
lods
pop
pushf
xor
pop
mov
pop
fildl
sbb
std
dec
jnp
test
clc
sub
icebp
push
jne,pt
ljmp
mov
fildll
lret
js
xor
jo
loope
mov
ret
sub
insb
xlat
mov
lret
add
aas
ret
insl
fs
je
cmpb
mov
lock
data16
and
sbb
sahf
test
cmp
rol
test
shlb
jo
xchg
jecxz
scas
icebp
outsl
sbb
ljmp
mov
cmpl
push
and
out
outsl
call
in
std
and
rcr
shlb
or
mull
daa
icebp
aad
stos
mov
xchg
dec
cs
popf
sarb
mov
dec
push
stos
jecxz
sbb
mov
xor
jmp
add
cmpsl
fcomip
cwtl
shlb
mov
out
in
jae
or
lret
jg
fwait
xchg
push
fildll
out
xlat
mov
sar
int
scas
in
jle
adc
into
push
jno
fldenv
inc
les
popf
xchg
jge
addr16
stos
movsl
or
scas
jno
jo
outsl
imul
mov
mov
aaa
jo
movsl
aas
xchg
inc
icebp
arpl
or
stos
jmp
int
call
jae
push
mov
lcall
mov
jecxz
lcall
mov
jns,pn
push
enter
outsl
mov
ss
sbb
insb
dec
mov
cmc
mov
or
sti
xchg
stos
inc
dec
movsl
repnz
xchg
fwait
int
add
mov
cld
adc
mov
push
sub
xor
and
xor
scas
or
iret
and
insl
das
xchg
lea
lock
sub
push
stc
lods
fbld
ficoms
arpl
xchg
mov
movsb
ss
mov
sbb
ret
aad
add
or
sub
jecxz
andl
sti
outsl
leave
mov
jnp
mov
xchg
scas
rcr
or
sub
jecxz
pop
das
lahf
add
xchg
out
mov
jbe
mov
mov
iret
or
or
mov
adc
sub
shll
inc
mov
dec
push
inc
adc
xor
or
divl
mov
shr
in
pop
xor
loop
leave
cmp
pop
cmp
cmpsl
push
push
outsl
ss
scas
xor
arpl
jnp
in
mov
loopne
lret
scas
in
shr
ret
cmpsl
sti
sub
mov
dec
in
xor
pop
mov
icebp
dec
adc
scas
sbb
test
cmp
gs
insw
in
inc
adc
pop
cwtl
mov
pslld
mov
rclb
imul
ja
jae
outsl
out
insl
mov
shlb
or
jb
int
loope
insl
cmp
popf
test
push
jl
push
cs
shl
test
lds
cmp
add
lods
cmc
xchg
add
outsb
out
jg
in
inc
xlat
xor
aad
xchg
test
jecxz
loopne
xor
or
sbb
bnd
mov
aad
out
clc
fs
das
fcmovnbe
loopne
test
clc
jmp
popf
jecxz
jg
jecxz
jmp
cwtl
lret
fisttpl
jnp
jmp
mov
loopne
add
xchg
cmp
loopne
into
test
push
xor
xchg
pop
sub
jns
jge
xchg
sub
arpl
divb
insl
and
ret
dec
sbbl
cmp
jbe
jp
dec
mov
xchg
lret
mov
int3
mov
negb
movb
xchg
js
mov
rclb
pop
ljmp
mov
xchg
fsubrl
scas
add
les
shlb
inc
js
push
aam
sbb
mov
int
jne
mov
mov
movsl
sub
lock
or
jmp
mov
dec
rcr
popa
and
enter
pop
rol
mov
lret
enter
fmull
ret
adc
imul
cmp
dec
mov
shl
lds
shlb
repnz
in
pop
je
inc
mov
sub
pop
xor
push
or
das
mov
popa
cwtl
mov
jbe
xor
xchg
or
stc
lret
dec
test
sbb
xchg
xlat
adc
cli
loope
in
aam
fldenv
out
lock
jg
loope
cmc
adc
jmp
negl
sbb
push
cli
call
xor
shll
out
jb
mov
andb
pop
adc
jb
icebp
dec
out
roll
addr16
jecxz
push
imul
mov
cwtl
cmp
sar
movsb
stc
xchg
cmp
dec
or
pop
jmp
cmc
xor
ret
push
add
test
ss
gs
insl
cmpsb
lret
or
imul
iret
sub
jne
sbb
sbb
cmpsl
pop
stc
pusha
outsb
jno
into
imulb
scas
test
pusha
sub
fstpt
pop
addr16
pusha
decl
push
popa
clc
cld
jg
pop
in
mov
push
fsts
out
pusha
decl
clc
scas
sub
push
sbb
cmp
sti
push
fsubrl
test
pop
clc
sub
lahf
push
cmp
addb
push
push
js
aas
stos
dec
sti
popw
push
push
mov
xchg
ss
xor
mov
movsb
and
xor
dec
mov
dec
scas
aaa
enter
xchg
xchg
cmp
sbb
fsts
push
cmpsb
push
mov
aam
stos
call
loop
outsb
cmpsl
mov
mov
push
hlt
call
cmpl
cmp
pop
fisubs
jns
mov
jle
xor
or
sub
fidivs
addr16
push
cmp
and
rcrl
mov
xor
lahf
loop
or
xchg
inc
mov
in
jecxz
lods
mov
rorl
fsubrs
sbb
add
sahf
test
subl
loop
leave
vmread
fdivs
xchg
addr16
shrb
jo
aas
dec
in
addr16
and
mov
xor
test
xor
rclb
mov
iret
jno
dec
sub
ljmp
pop
cmp
cld
bnd
jo
in
jge
pusha
jmp
shlb
lods
loope
repnz
push
mov
fildll
rcrb
hlt
icebp
and
sti
mov
lahf
out
fisubrl
jb
out
jae
data16
and
sti
ljmp
xchg
dec
cli
jg
and
fldt
test
jle
arpl
mov
inc
push
popf
mov
lock
push
ficoml
cmpsb
mov
test
in
iret
jne
add
mov
or
and
out
jo
fucompp
jg
xchg
out
sub
mov
mov
cmc
stos
nop
jge
cs
jg
mov
jecxz
call
mov
dec
push
mov
mov
enter
popf
in
or
dec
xchg
call
inc
mov
out
cmp
or
lock
sub
mov
inc
jnp
xchg
cmp
or
pop
rcrl
fwait
or
mov
or
call
pop
mov
jae
push
sub
mov
jmp
popl
dec
sti
cwtl
sahf
out
and
mov
and
loop
outsb
mov
loop
or
stos
ror
dec
outsb
shlb
adc
mov
lret
ja
daa
fbstp
pop
adc
arpl
arpl
pusha
mov
add
push
fcmove
dec
sahf
in
sbb
das
lret
pop
jne
mov
mov
lock
and
add
test
shrl
fwait
mov
popf
sbb
push
lahf
aad
cmp
mov
xchg
sub
lret
and
xchg
fidivrs
rcll
jl
push
xor
out
scas
scas
call
mov
das
jo
stos
iret
repnz
out
shrl
outsl
popa
dec
pop
mov
jbe
xchg
xor
sbb
xchg
out
in
xchg
xchg
cwtl
sub
mov
fwait
imul
enter
jge
out
int3
popf
xor
test
rolb
push
rcrl
jo
jge
out
push
push
fnstsw
decb
les
sbb
iret
mov
addb
push
fninit
sub
lock
sahf
mov
pop
out
shll
dec
adc
sti
imul
icebp
out
movsb
ret
hlt
lods
jmp
mov
jmp
push
pop
jl
or
lds
mov
jecxz
lret
inc
fs
mov
out
sub
add
push
int3
or
dec
mov
push
xchg
sti
lods
in
call
stc
mov
inc
pop
inc
imul
cld
lds
repz
jg
push
mov
imul
mov
push
pop
jp
push
push
xchg
bound
or
push
or
xchg
scas
popf
or
pop
and
int3
sbb
xchg
xchg
cli
clc
xchg
xlat
ds
sub
pusha
and
jb
outsb
cmp
jmp
outsb
lahf
jg
negb
negb
push
jbe
or
mov
pushf
lock
lods
cwtl
shrl
lahf
or
or
cmp
dec
mov
sub
mov
mov
js
mov
push
xchg
mov
lret
dec
out
cmc
sub
xchg
roll
clc
jecxz
jg
sub
lods
outsb
jl
mov
push
cltd
mov
jge
mov
jg
push
adc
sbb
xchg
jp
into
xchg
inc
test
sub
insl
sbb
lods
popf
cmp
out
imul
or
cmc
sbb
fisttpll
icebp
in
adc
bound
jle
xchg
xor
and
cmc
push
lods
add
xchg
out
popf
movsb
pusha
imul
push
je
fxtract
xlat
jo
movsl
lea
mov
negb
lea
mov
ret
pop
int3
stos
pop
mov
inc
xlat
into
pusha
mov
or
and
imul
rclb
jmp
cs
pop
and
scas
jecxz
test
mov
jbe
cld
add
inc
jge
adc
insl
add
jno
cmp
std
push
int
cmpsl
cmp
pop
mov
icebp
lcall
iret
sbb
add
or
arpl
movb
call
mov
ljmp
fcoml
pop
and
mov
arpl
fsubp
jle
sbb
cmp
or
mov
testb
lret
pushl
adc
int
jns
ljmp
jle
or
push
loopne
fstps
mov
outsl
xchg
enter
push
or
sub
jb
je
xor
fbstp
pop
inc
cmp
adc
mov
js
into
jnp
out
in
or
mov
lret
movsb
jg
test
dec
aaa
mov
mov
add
inc
mov
mov
mov
dec
pop
jle
in
addr16
jecxz
das
in
pop
lock
or
mov
mov
ja
xor
mov
pop
xor
lahf
fstpl
xchg
sub
addr16
popf
and
mov
out
sub
inc
mov
dec
addr16
dec
inc
add
or
aam
dec
xor
int3
lods
iret
outsl
fisubs
inc
lock
dec
add
xor
popa
lea
stc
popa
mov
enter
lea
lss
repnz
mov
test
stos
push
xor
ja
push
mov
push
icebp
les
lret
insl
inc
rcr
inc
idivl
mov
jle
gs
push
iret
sbb
xor
movsb
cmp
xchg
mov
pusha
sub
add
lret
adc
sbb
mov
push
cltd
jae
pextrw
add
sub
sbbl
pusha
popf
mov
daa
fsincos
mov
mov
inc
sbb
pusha
xor
notb
mov
push
xchg
stos
lret
push
adc
mov
je
std
bound
in
mov
add
loope
imul
pushl
in
adc
cmc
dec
mov
int3
push
negl
data16
pop
cmp
test
xor
mov
pop
dec
divb
cltd
mov
enter
xor
inc
ss
inc
pop
test
mov
ret
jbe
fnsave
pop
mov
hlt
pop
les
and
push
sub
dec
jbe
mov
mov
and
inc
les
and
enter
mov
push
cwtl
int3
loopne
negl
mov
mov
loopne
imul
and
in
aad
movsb
sahf
cmp
cli
nop
or
fadds
out
popa
xor
shll
mov
pop
mov
xor
jecxz
loope
scas
mov
popa
add
mov
popf
popa
aas
xchg
xlat
mov
push
and
push
bnd
scas
jbe
rcll
test
in
sub
test
mov
jae
cmpsb
out
sub
lahf
sub
lock
inc
arpl
pop
dec
xchg
push
popa
jmp
mov
in
xor
sarb
mull
movsb
cs
mul
in
mov
lret
ret
repnz
cmp
addr16
jo
dec
push
imul
movsl
cmpsl
jg
mov
ljmp
hlt
mov
mov
mov
out
xlat
out
loop
out
out
xor
ss
jns
mov
mov
fstpt
das
push
mov
shl
jmp
scas
lcall
inc
scas
sarl
into
fadds
jle
in
repnz
testl
push
or
bound
inc
cli
jge
leave
mov
aaa
push
mov
jle
mov
nop
mov
call
imul
mov
fnclex
aas
or
sbb
std
mov
push
popa
out
xchg
push
xor
push
pop
inc
lret
mov
scas
subl
outsb
mov
sub
lret
ret
push
sbb
gs
bt
adc
std
popf
push
data16
cltd
sub
xchg
sbb
shlb
fists
outsl
out
sub
ja
imul
jne
rcrb
pop
add
cs
imul
push
xchg
repnz
les
ljmp
lea
add
jbe
jo
lret
and
vandnpd
mov
clc
shr
popa
sti
negb
stc
cwtl
arpl
les
js
gs
shrb
repnz
or
mov
leave
dec
outsb
sbb
push
mov
sbb
xchg
xlat
mov
sub
push
cmp
push
xor
push
and
cli
jge
mov
xbegin
sbb
dec
sarw
andl
je
inc
add
pop
jecxz
movsb
call
out
jl
scas
jg
mov
cmp
cli
push
stos
loopne
jb
push
inc
fs
and
mov
sbb
mov
push
jnp
jb
xchg
cld
fadds
jl
xchg
xor
adc
mov
or
sarl
lods
nop
xlat
xchg
push
or
enter
sub
jne
xchg
test
test
cmpsb
and
dec
data16
cs
push
add
pushf
and
cmc
mov
int
shl
adc
pop
cwtl
add
xchg
loope
jae
push
sbb
out
sbb
test
jg
inc
aas
lea
push
andb
push
lret
xchg
fmulp
mov
insl
int
enter
xlat
loope
inc
or
icebp
out
push
iret
adc
xor
pushl
test
dec
sub
negb
sub
pop
lea
jmp
out
clc
popa
mov
jle
out
rol
call
or
and
or
add
sub
cmp
jecxz
loope
inc
jbe
sbb
mov
mov
jg
out
iret
mov
iret
adc
stos
mov
jbe
sub
jns
ret
ja
jecxz
outsb
orl
inc
sarl
dec
or
pop
cmp
mov
popl
aas
mov
in
xor
pop
ret
mov
pop
int
cltd
cmc
aaa
scas
sbb
sub
clc
mov
rcll
es
test
popf
lods
mov
pop
pop
or
cs
push
jae
addl
das
cs
push
imul
movsb
dec
push
mov
mov
cmc
test
es
test
lahf
xor
imul
mov
shlb
jg
ljmp
int3
enter
ds
lret
outsb
and
and
lret
leave
ror
aaa
cltd
push
mov
xor
cltd
inc
xchg
std
push
popf
popf
push
xchg
jmp
and
lcall
xorl
mov
aam
push
sbb
in
cli
xchg
and
jne
fwait
pushf
in
cmp
call
mov
mov
mov
sbb
scas
dec
loopne
sarb
or
into
fisttps
sbb
mov
int3
stos
pop
fsqrt
inc
call
fists
jg
scas
popf
inc
sub
or
ss
jne
push
test
add
mov
and
inc
loope
aaa
int3
rdtsc
js
adc
data16
int3
pop
jl
out
push
mov
loopne
out
adc
fnstenv
insl
scas
inc
iret
cmpl
cs
or
and
dec
xor
imul
ja
push
sar
or
mov
test
scas
mov
loope
sahf
lods
jns
fisubrl
jae
lods
inc
arpl
insb
test
adc
xor
inc
aad
adc
push
push
cs
lret
mov
ds
xchg
popa
jg
and
and
sub
inc
mov
pop
insb
cmp
ret
sti
aam
outsb
cltd
add
mov
adc
sbb
imul
imul
into
mov
mov
cld
mov
test
sbb
jb
mov
idivb
mov
mov
out
lahf
adc
test
xchg
imul
popa
cmc
jb
pop
cld
mov
fsubrl
jne
lret
inc
int3
mov
hlt
mov
aas
cmp
pop
adc
loop
popa
or
sub
pop
es
insl
int3
leave
popa
xchg
gs
je
fdivl
mov
mov
add
pusha
mov
cmp
jp
push
ljmp
mov
mov
jmp
cld
out
mov
xlat
and
push
sub
pop
sahf
dec
and
loopne
push
mov
adc
xchg
popf
adc
out
pop
mov
rcrb
fwait
jp
fs
pop
enter
lret
cmp
lods
mov
movsl
ret
pop
sub
in
ss
pop
xor
jle
adc
stc
enter
push
fistpll
push
int3
and
mov
enter
push
outsb
shlb
cmp
out
push
or
xor
shll
int3
sub
adc
ficomps
add
imul
test
pusha
push
push
out
loopne
jnp
subl
fiaddl
mov
inc
cmpsb
jne
fistpll
jbe
stos
ret
stos
pusha
fnstenv
in
inc
insl
inc
pop
adc
mov
mov
shlb
xor
push
mov
stos
xor
test
push
and
push
mov
imull
mov
iret
jmp
ljmp
sub
push
nop
xor
lahf
and
loope
push
jecxz
data16
jno
ret
dec
push
cli
adc
dec
mov
sbb
mov
scas
enter
pushf
into
ja
fnstcw
inc
aas
mov
pop
int3
dec
add
fidivs
xor
xchg
cltd
mov
add
mov
jo
iret
lahf
jno
int
jne
lahf
divb
shlb
neg
popf
iret
cmp
dec
mov
sahf
jge
pushf
out
insl
push
mov
sahf
mov
subl
push
test
sub
jg
leave
cmp
xchg
jg
out
cs
or
outsl
mov
loopne
outsb
mov
je
mov
mov
ret
out
shrb
cmpsl
rcll
mov
js
arpl
adcb
cmp
sarb
adc
movsb
ja
lods
push
jmp
sbb
inc
test
out
push
lods
mov
loop
lcall
roll
jbe
xor
out
jl
leave
dec
bound
cmp
not
jmp
data16
mov
jns
dec
cmp
jge
scas
jo
pop
cmp
push
loop
sub
xchg
cmc
and
lods
dec
shl
aad
scas
cmpsl
iret
sbb
jmp
loop
out
and
mov
stc
inc
xchg
mov
loopne
sbbl
or
lods
negb
mov
enter
fucom
xor
mov
xor
test
or
xor
inc
and
aaa
icebp
push
sbb
aaa
ret
and
sbb
ficoml
leave
adc
ret
fistps
or
inc
sti
loope
cmpl
les
sahf
adc
mov
test
jg
mov
adc
mov
mov
int3
xor
dec
sbb
cwtl
add
sbb
jmp
lret
icebp
shll
xchg
das
sahf
cmpsl
lret
mov
ljmp
lods
decl
test
mov
or
jp
fisubs
adc
cmp
inc
ja
into
das
clc
or
pop
icebp
cwtl
jb
shll
inc
loop
out
rorb
insb
scas
mov
icebp
test
jg
lods
out
int
and
cmp
test
iret
sahf
ficomps
cmp
popf
mov
push
das
imul
push
push
and
subl
and
add
push
add
lret
sbb
pop
jmp
mov
or
repnz
out
cmpsl
mov
jo
mov
test
xchg
dec
enter
push
xor
es
orl
add
jno
add
xor
ja
dec
in
shrl
imul
sub
pop
sub
cmpsb
jbe
and
inc
je
pop
xchg
mov
out
outsl
bound
cmp
mov
ja
fists
scas
loopne
push
dec
add
das
pop
push
outsl
sahf
xchg
fdivrl
dec
pushf
les
repnz
in
jo
out
inc
jmp
dec
add
test
flds
out
mov
pushf
jne
faddp
les
pop
outsb
adc
jnp
nop
dec
xchg
jecxz
es
inc
cwtl
int3
xchg
xchg
pop
sahf
push
jecxz
add
std
in
add
shr
icebp
lahf
into
call
ja
fcom
inc
dec
jg
push
fcmovnbe
dec
int
jns
jecxz
sbb
add
jb
lock
and
cmp
pushf
or
loopne
jmp
sar
aad
jle
mov
add
cltd
mov
pmulhuw
ljmp
shr
outsl
xchg
or
mov
mov
mov
or
filds
stos
or
leave
jle
xchg
pop
jl
out
inc
jg
push
imul
push
movsl
xor
shl
cmp
pusha
push
or
jle
aad
adc
xor
mov
sbb
test
mov
mov
pop
fs
adc
adc
jle
xchg
das
fsubrs
jb
mov
mov
jl
xor
jecxz
out
outsl
xchg
jmp
negl
mov
cmpsl
push
cmpsl
mov
push
decb
sbb
push
jg
xor
cmpb
lea
push
test
cmpsl
push
or
mov
mov
scas
repnz
xchg
loopne
aaa
add
ret
mov
xor
jg
sarl
lret
ja
ss
rorl
pop
mov
test
in
push
xchg
stos
push
arpl
or
mov
daa
mov
fnstenv
jp
pushf
cmp
sbb
cmc
in
cli
pop
sbb
fists
arpl
stos
shll
sbb
sahf
imul
sahf
fwait
jo
pop
pop
les
mov
push
shrb
dec
pop
rol
lods
lcall
mov
jg
std
fbstp
xchg
push
scas
dec
int3
jb
andps
cli
push
or
loopne
in
or
icebp
push
lahf
in
shll
scas
int3
int
xor
addr16
dec
mul
push
gs
inc
mov
mov
andb
int
xchg
xor
cmc
adc
cwtl
mov
push
fcmovnbe
jecxz
sub
jge
cmp
pushf
dec
sbb
jg
gs
pushf
jae
adc
sahf
enter
clc
xchg
xchg
mov
adc
pop
sbb
jl
jmp
lcall
push
mov
pop
out
xchg
add
and
pusha
push
sti
mov
das
xor
sbb
add
add
push
imul
nop
xchg
push
mov
movsl
dec
insl
les
stos
insb
scas
jecxz
sti
or
ss
and
or
imul
mov
push
shlb
pop
jle
pop
mov
mov
inc
xchg
fs
or
outsl
xchg
lock
and
aas
jo
cmp
xlat
adc
dec
out
mov
popf
add
js
cmp
ret
jo
bound
pop
pusha
fdiv
icebp
push
dec
fcmove
js
fdivp
faddl
jmp
jmp
icebp
ljmp
jmp
jb
or
mov
rcrl
call
jmp
pop
jl
popa
push
repnz
lods
daa
mov
mov
or
iret
scas
jmp
insl
repz
cmp
loope
fcomps
out
fisttpl
and
jecxz
imul
xlat
or
insb
shrl
aaa
mov
fistpll
pushf
jle
mov
sti
cmc
mov
jo
and
ss
sarl
lods
push
pushf
add
push
mov
jns
jg
cltd
push
jbe
jg
addr16
pop
jecxz
testl
xor
shlb
xchg
add
test
or
lret
jg
xchg
nop
scas
roll
pop
test
stc
sub
imull
or
jmp
push
imull
nop
xchg
sub
ds
push
mov
shlb
xchg
inc
les
out
insb
push
xchg
and
mov
adc
bound
je
stos
push
jle
test
cmc
mov
dec
jecxz
xorl
pop
sbb
fistps
dec
xor
stos
mov
lds
push
pushf
xchg
xor
mov
jno
popa
cmpsl
jae
xor
je
jmp
loopne
into
xorps
ret
insb
mov
push
push
out
add
ss
sbb
cld
sub
lret
xorb
and
sbb
imul
inc
inc
sub
lcall
ljmp
mov
mov
imul
sub
outsl
stos
scas
pop
xchg
or
push
jle
inc
xchg
aas
mov
leave
cmp
cmp
popf
popa
add
xchg
fidivs
cmc
xchg
mov
mov
bound
rcrb
xchg
sbb
int
ret
push
pop
dec
int
mov
adc
mov
jg
outsl
sbb
stc
and
xchg
pop
add
inc
push
mov
cmp
or
cmc
leave
xor
mov
int3
icebp
scas
bnd
xchg
enter
stos
or
out
outsb
ss
dec
aam
ret
and
mov
cmp
movsl
push
xchg
movsl
xor
and
data16
aas
pop
ljmp
fsubrs
jmp
shll
lret
mov
jmp
xchg
adc
dec
sbb
pop
ss
sub
xchg
lret
cmp
or
xor
sti
imulb
dec
cld
inc
call
mov
scas
arpl
pushf
inc
push
mov
dec
les
dec
addr16
adc
push
jecxz
fbld
or
fbld
loop
in
jmp
lock
sbb
rcrl
sbb
xor
rclb
adc
outsl
jb
or
je
sbb
popa
call
es
loope
pop
push
fnsave
in
jle
pop
sar
inc
cld
in
pushl
xor
iret
push
sahf
pop
leave
dec
xchg
xor
adc
push
add
lea
stos
xor
scas
stc
scas
data16
sti
rcl
sub
mov
push
scas
movsb
sti
pushl
rcrl
fwait
cltd
jae
mov
add
insl
das
jp
clc
bndstx
push
add
cmpsl
ja
clc
int3
ja
pop
ret
stos
jnp
pushf
add
rcll
out
pop
int
movsb
sbb
jne
stc
in
lock
jg
jecxz
shrl
shlb
imul
xor
leave
fs
ja
imul
xor
loopne
sbb
lahf
mov
mov
add
loop
ljmp
adc
push
das
les
add
push
pusha
jmp
or
ja
dec
inc
and
add
pop
insl
push
int
jo
mov
in
push
jno
data16
adc
push
lea
push
jnp
mov
fsts
mov
jge
xlat
xor
mov
pop
aam
mov
mov
shl
fbld
in
xchg
inc
sbbb
pop
les
add
cltd
insl
rcrb
sti
or
sub
rcll
adc
push
iret
pop
call
scas
pushf
xor
mov
push
sti
xor
mov
and
sbb
jg
aam
xor
es
aam
sub
cmpsl
jge
xor
jno
nop
div
mov
push
push
pop
outsl
lcall
mov
rcr
mov
rcr
scas
lds
std
fcoml
add
or
add
mov
dec
dec
xchg
test
aaa
inc
jns
dec
or
loopne
pop
mov
adc
out
sub
sbb
push
std
pop
or
pop
insb
cmpsl
cmp
pop
xor
scas
lods
cld
mov
stos
add
add
or
lods
out
push
xor
ret
xchg
outsb
cli
push
es
inc
mov
adc
stc
jno
inc
fcomp
outsb
stc
add
jmp
test
ljmp
imul
mov
sbb
xlat
ss
pop
dec
jg
mov
cld
push
dec
dec
mov
frstor
or
inc
js,pt
pop
xchg
ret
stc
test
push
and
fsubrl
or
mov
add
jnp
inc
jp
icebp
or
push
into
xchg
push
push
shl
insl
add
imul
push
loope
int
ljmp
jmp
fstl
mov
sbb
push
jl
nop
stc
fistpl
clc
repnz
fcmovnbe
pop
ljmp
dec
fiaddl
iret
inc
cmpsl
cmc
adcb
ljmp
mov
test
clc
in
sbb
inc
fisttpl
movsl
lret
ljmp
push
loopne
ret
ljmp
cmp
shll
in
ret
ljmp
pop
ror
sti
icebp
cli
lock
mov
jecxz
not
sub
cmp
addr16
popf
add
leave
scas
mov
jb
imul
push
loope
and
loope
lds
fwait
mov
cltd
mov
lock
mov
cmp
or
mov
ljmp
and
pop
jecxz
iret
xchg
daa
stos
int
push
or
dec
rol
ljmp
pop
loop
addr16
gs
adc
mov
ljmp
in
rcl
lret
insl
dec
negb
mov
and
mov
test
outsb
repnz
mov
jae
sub
ljmp
fisttpl
mov
mov
sub
mulb
movsl
cltd
dec
scas
mov
in
icebp
leavew
stos
into
push
mov
xchg
idiv
inc
rcl
out
sar
xor
hlt
ljmp
jmp
jae
cmp
daa
mov
ljmp
rorl
add
rclb
cmp
adc
jmp
rorl
dec
aas
shrl
ds
in
xor
fisubs
mov
fucomi
sub
cmp
mov
iret
bound
lock
iret
ljmp
push
cltd
cmp
mov
mov
push
jmp
cmpsl
fwait
out
daa
and
jp
fwait
sti
and
ret
das
mov
arpl
mov
in
sub
rcrb
leave
roll
ljmp
cmp
pusha
stc
xchg
dec
jecxz
mov
shlb
inc
ljmp
lcall
dec
fimull
dec
push
ss
mov
xchg
xor
mulb
out
icebp
xor
and
fidivs
mov
fiaddl
aaa
xor
xlat
leave
pop
stos
test
stos
cvtpi2ps
dec
cmpsl
jg
or
lea
lods
ljmp
jmp
stos
loop
je
shll
xor
jl
fistps
pop
ljmp
jge
jmp
or
dec
insb
imul
arpl
or
ljmp
jp
inc
dec
xchg
add
ror
cmp
pop
addr16
lock
fidivl
push
ljmp
dec
sbb
jns
insl
or
scas
gs
push
loope
iret
lods
mov
rclb
shr
dec
mov
adc
mov
pop
xchg
push
inc
daa
sarb
mov
ror
mov
lds
rolb
rcll
call
sbb
fcoms
rcll
fs
ljmp
stos
xchg
addl
icebp
sahf
andb
or
cwtl
sub
xor
shll
jae
loopne
and
nop
test
add
mov
cmp
push
jae
add
rcrl
stos
xlat
add
xor
push
jmp
lret
mov
mov
int
ljmp
ljmp
mov
push
jmp
adc
dec
jne
ljmp
imul
cmpsb
jmp
movsl
ficoml
lret
adc
pop
inc
mov
popa
cmp
xorl
sub
shll
stos
jns
sub
push
jecxz
jo
shll
ret
repz
add
jl
dec
out
call
ja
insl
lea
mov
out
ljmp
movsb
cmpsl
out
lret
push
pop
lcall
ljmp
ret
cmpsl
loop
sbb
jmp
int3
test
xchg
loop
sbbb
ljmp
xchg
xor
lds
or
ljmp
cmp
ja
mov
pop
popa
or
xor
add
xor
mov
sahf
sbb
mov
sbb
out
addr16
stc
xchg
xor
lret
sbb
push
cmp
imul
je
or
xor
ret
adc
lret
xchg
mov
inc
add
imul
cltd
inc
int3
adc
sbb
lods
fbld
movsb
mov
pop
sbb
into
and
or
jmp
gs
les
dec
js
stos
mov
idivl
cmpsl
dec
xchg
lods
fsub
sub
xchg
shrl
out
out
jl
push
popa
or
cmc
mov
adc
mov
xor
outsl
push
xchg
cwtl
test
mov
loopne
push
lcall
or
lock
das
lds
in
jg
lahf
jecxz
pmaddwd
fchs
cs
dec
repz
filds
mov
lcall
das
cmpsb
jmp
cmp
xchg
sub
mov
xor
fcomps
xor
out
loop
mov
mov
xchg
mov
jo
cmp
enter
cmp
loop
fcmovbe
add
lea
outsl
mov
push
sbb
jbe
aas
jecxz
pop
pop
pop
xchg
pop
xchg
jg
dec
repz
mov
dec
bound
stos
insl
call
js
icebp
jle
jl
lcall
and
into
pop
adc
dec
pop
pop
adc
loopne
es
fnstcw
in
nop
gs
sbb
fidivs
sbb
inc
dec
push
xor
jge
cmp
or
adc
add
lds
sahf
pop
push
push
shl
mov
mov
fstps
jbe
mov
pop
add
cmpl
xor
ret
pushf
mov
jg
lcall
iret
enter
idiv
xchg
push
mov
out
push
pop
divl
mov
sbb
inc
push
xor
jae
sahf
jns
scas
insl
test
notl
xor
and
and
or
shrl
push
sbb
ficomps
dec
pop
stos
arpl
out
add
aaa
cli
mov
repnz
dec
mov
test
cmp
adc
addr16
lock
sbb
loopne
mov
fdivl
lcall
lret
stos
and
test
cmpsl
pop
add
jg
xchg
ret
mov
push
pop
cmp
imul
push
cmp
inc
fninit
fsub
outsl
and
xchg
test
jecxz,pn
repnz
imul
dec
mov
xor
out
adc
jne
lcall
popf
bnd
popa
imul
les
outsl
stos
mov
push
imul
or
pop
xchg
jae
jmp
mov
dec
aad
sar
dec
pushf
stos
hlt
popl
pushf
scas
sbb
xlat
inc
fmull
mov
sbb
fsubrl
or
jg
fwait
xchg
mov
or
lcall
fstps
shr
and
loopne
repnz
jmp
push
out
jno
in
jne
out
sub
repnz
mov
pop
lds
stos
loope
sbb
ja
das
jo
shr
bound
or
std
mov
and
push
sbb
out
mov
mov
jo
xor
ljmp
add
scas
in
repnz
in
xor
mov
xlat
fninit
out
add
aam
push
xchg
mov
out
aad
xchg
push
cmp
mov
pop
call
lock
xchg
jbe
test
aas
push
cld
mov
mov
fwait
mov
in
fldl
je
outsb
cmp
mov
cwtl
jg
inc
inc
pushf
mov
pop
jmp
and
lea
push
in
xchg
loope
jmp
dec
cld
sub
cmpl
cmc
sub
ficoms
fidivl
push
das
cmpsl
mov
stc
adc
loopne
imul
fstpl
push
stos
mov
arpl
mov
aas
mov
ljmp
jl
out
mov
mov
mov
fisubrl
xchg
mov
jl
push
loopne
es
mov
mov
or
adc
fwait
cmp
and
popf
mov
pop
enter
pop
data16
mov
cmpl
sub
mov
movsl
aas
inc
push
mov
faddp
pop
cmp
pushf
xor
adc
push
jne
mov
out
jb
bnd
test
add
push
cmp
ljmp
ss
xchg
adc
push
stos
sbb
sub
and
mov
aam
lods
addb
lret
xchg
fsubrs
sub
mov
adc
pop
popf
sbb
mov
pop
movhps
loopne
pop
aas
loope
pop
mov
bnd
mov
cltd
iret
mov
movsb
mov
inc
pushl
xor
xchg
dec
xor
cld
jbe
or
mov
test
mov
lret
cmp
int3
gs
xor
dec
rolb
jg
pop
aas
popf
add
aas
cltd
mov
cmpsl
cld
push
cmpsb
pop
sub
mov
jg
pusha
push
das
or
mov
xchg
dec
mov
push
xchg
imul
ja
push
mov
jne
xor
sbb
sbb
mov
js
jg
sub
fisttps
cld
cli
mov
ljmp
popf
xor
shl
pusha
cmp
and
mov
hlt
pop
jmp
jne
icebp
fnstcw
pushf
lret
push
xor
stc
lds
test
lahf
xchg
fistpl
or
or
mov
icebp
js
call
lea
mov
rcrb
or
jl
rcl
jle
cmpsl
out
push
mov
adc
mov
inc
jle
insl
sbb
inc
inc
movsb
xor
or
sahf
jg
sub
xchg
das
jb
or
push
movsl
inc
imul
add
fidivrl
xchg
sbb
and
sub
call
mov
push
jbe
lds
stc
repz
lock
fwait
mov
push
cmp
pop
push
hlt
sub
shll
mov
cld
mov
icebp
jle
outsb
or
es
fnstenv
les
pusha
lods
ljmp
xchg
jo
icebp
out
or
push
mov
into
loope
sti
push
ret
cmp
je
push
inc
in
xchg
fisubl
divl
fldcw
fadds
pop
adc
add
aam
fwait
daa
fisubl
cmp
movsl
fbld
push
mov
popa
in
je
sbb
gs
xorb
xchg
mov
or
fwait
loop
imul
jmp
dec
mov
movsb
fsubl
iret
xorb
sti
rcrb
and
into
shl
mov
pop
neg
pop
jge
ss
or
cwtl
sub
push
loopne
fisubrl
mov
fwait
test
dec
leave
divl
and
mulb
sbb
xchg
sub
jae
jb
jecxz
mov
test
sub
adc
jg
enter
out
mov
je
ja
mov
gs
xchg
xor
out
mov
popa
aas
jno
roll
jbe
pop
into
lcall
jmp
xchg
mov
int3
jmp
arpl
jp
jns
mov
scas
add
sarl
out
fdivp
xchg
xor
pushf
mov
les
in
sub
cli
push
xor
xchg
xchg
fdivl
decb
enter
lcall
mov
or
inc
pop
jo
mov
sbb
add
shrb
ljmp
stos
jle
into
adc
int3
out
nop
icebp
loopne
jb
loop
pop
cmp
stos
jno
mov
aad
xchg
dec
inc
mov
fs
int
cmp
mov
leave
stc
sub
ret
stos
xor
sbb
xor
fucom
jo
call
cli
xchg
xchg
or
shlb
repnz
stos
fs
das
adcb
mov
pop
mov
sub
push
pop
call
pop
mov
fists
lret
or
daa
shr
test
into
cmp
push
lret
xor
xchg
xchg
sub
arpl
fisubrs
out
mov
pop
sub
mov
pop
lods
fdivrs
icebp
cld
and
popf
popf
enter
movsb
xchg
sub
push
icebp
mov
and
push
push
ud1
sahf
pop
clc
lret
lods
sub
mov
sbb
inc
das
and
jae
mov
dec
sub
mov
push
or
data16
sub
sbb
mov
int
mov
lcall
mov
ljmp
or
pushf
sub
ljmp
push
popa
pop
jnp
xchg
mov
jmp
popf
jg
les
mov
pop
out
idivl
xchg
shrb
sbb
inc
and
popf
cmp
stos
xchg
dec
push
xor
cmp
ret
mov
hlt
mov
or
pop
lock
xchg
lods
rorb
stos
daa
outsl
dec
je
or
roll
and
call
dec
popa
aaa
hlt
mov
jne
xchg
mov
addr16
scas
xchg
cmp
les
jp
push
aam
sub
dec
out
aad
imul
repnz
int3
push
mov
aas
jae
mov
adc
shl
xchg
sbb
call
pop
lcall
lods
cs
mov
pop
mov
cwtl
mov
sti
jmp
iret
cmpsb
pop
add
jbe
outsl
rorl
push
icebp
dec
rorl
add
popf
leave
shl
jg
mov
imul
scas
stos
xchg
adc
xchg
xor
and
xchg
outsb
fwait
sub
rcr
out
sar
push
adc
fisttpl
cmp
data16
xchg
push
push
adc
mov
repnz
scas
ret
outsl
xlat
sahf
sbb
or
pop
mov
add
das
push
mov
ljmp
std
scas
es
scas
mov
mov
push
add
xchg
add
in
dec
call
or
xor
push
fidivrs
xchg
lret
cmp
jmp
out
or
aas
cmp
xbegin
mov
fsubs
loope
mov
lret
and
imul
push
divl
sbb
loopne
scas
dec
sub
roll
inc
dec
into
xchg
test
pop
mov
cld
pop
adcb
push
pop
mov
scas
pop
lock
mov
xchg
fbstp
add
cmp
dec
call
loop
xchg
push
sbb
es
inc
push
push
insl
adc
adc
push
xor
lret
mov
xchg
adc
flds
fwait
popa
cli
xchg
fstpl
stos
lds
mov
in
jno
push
lcall
mov
loope
adc
push
adc
insl
repz
out
adc
jecxz
mov
jl
cmp
pop
jp
negl
fs
inc
mov
push
xchg
sbb
sbb
lahf
xor
insb
icebp
mov
pop
outsl
mov
fcoml
pop
mov
xchg
pop
imul
sub
jbe
fwait
sub
lods
into
fistps
sub
fs
mov
adc
sahf
das
cmp
out
dec
and
shl
mov
scas
sbb
mov
xor
mov
pop
outsl
mov
loop
mov
iret
xchg
mov
das
rcll
push
dec
pop
test
div
cmp
pop
adc
jecxz
cs
in
mov
xchg
imul
sti
xlat
xchg
lahf
fildll
ds
in
mov
jo
repnz
shl
jmp
adc
push
sarl
rep
ja
call
ret
xchg
popf
lret
or
jle
push
lret
dec
in
scas
mov
fldl2t
aas
pop
push
jecxz
scas
ffreep
jmp
sahf
incl
out
loope
cmc
adc
mov
sbb
xor
das
add
push
rorb
ja
pusha
dec
jb
or
outsb
jg
in
lock
mov
push
mov
out
jmp
rcll
in
ja
stc
jecxz
cmp
mov
fcmovu
ss
inc
out
pop
mov
jo
das
jl
popf
aas
and
mov
les
fnstcw
push
sub
pop
pop
cmc
or
mov
mov
push
jbe
aam
mov
cs
lahf
ss
or
adc
scas
loopne
std
jmp
mov
les
jno
pusha
bnd
sbb
pop
mov
mov
and
jle
pop
mov
outsl
jg
inc
bound
into
in
lds
scas
mov
loop
xor
out
insb
cmp
push
adc
int3
pushf
bound
mov
or
mov
or
fadd
push
movl
cmp
xchg
sub
jo
mov
push
pushf
jg
gs
xor
ss
enter
icebp
jle
mov
adc
jns
jmp
into
aad
cmp
loopne
outsl
cwtl
or
pop
jb
pop
or
cld
out
xchg
or
pusha
sbb
adc
push
call
int
fbld
push
sub
mov
add
sub
add
mov
cmc
mov
xor
pop
movsl
sti
nop
xor
jl
jg
jb
pop
bound
jnp
dec
in
addb
lea
fneni(8087
or
jle
clc
repnz
mov
xchg
leave
xlat
jg
in
inc
xchg
jl
xor
bound
cmp
bnd
in
popa
mov
xor
lds
mov
mov
xchg
idivl
mov
xor
jns
jg
xchg
mov
cmpb
cld
cmp
lret
pop
rcl
and
adc
icebp
push
aad
imul
sahf
aaa
push
and
movsb
stos
pop
fcoml
lcall
clc
mov
mov
into
scas
xchg
pop
fisubl
pop
outsl
sub
stc
jo
cwtl
cld
fimull
test
xchg
dec
inc
loopne
cld
adc
fcomps
loopne
xor
jecxz
arpl
cmp
rcr
dec
divl
std
pop
pop
adc
push
mov
mov
dec
ss
lock
xchg
xor
into
cmpsl
cli
rorb
adc
out
lahf
jns
mov
in
sbb
loopne
adc
stos
test
outsl
inc
divl
fsubrp
scas
dec
out
out
ja
fsubr
xor
inc
fistpl
repnz
mov
dec
xchg
mov
out
or
cwtl
iret
mov
pop
push
lods
sub
xor
sub
lahf
fcmovnbe
inc
mov
xor
ficompl
or
pop
mov
mov
test
cs
push
and
mov
mov
mov
or
mov
imul
inc
clc
outsb
fisttps
imul
pop
mov
loope
dec
ret
cmp
imul
sbb
push
jecxz
or
push
or
aad
jecxz
xor
ret
arpl
iret
call
inc
jmp
stos
shr
adc
jle
ss
xchg
fldcw
in
push
pushf
fcomps
out
or
or
and
adc
arpl
inc
lahf
arpl
or
jge
and
rcl
lret
out
idivl
jae
push
fwait
bnd
mov
fisubl
sbb
clc
and
mov
sub
fcmovnbe
test
addr16
loop
dec
mov
shlb
movsl
jbe
mov
or
sub
mov
lea
push
adc
out
cmpsb
push
lahf
inc
int
sub
pushf
fstpt
jle
push
cs
hlt
cmp
ret
leave
mov
adc
test
iret
jle
setp
mov
mov
jo
scas
sti
mov
sbb
movsb
lahf
int3
mov
jl
mov
add
addr16
pop
pop
lcall
mov
ss
in
jecxz
sub
push
rcrb
mov
shlb
fisubrs
dec
ljmp
enter
int3
in
xchg
scas
mov
mov
inc
call
add
enter
mov
jae
mov
dec
mov
cli
xor
add
jns
lods
push
jmp
xchg
xchg
dec
add
cli
enter
out
out
cmpsb
pop
stc
pop
push
bound
loopne
testl
or
and
lods
movsb
scas
dec
leave
dec
movsb
cmp
mov
jp
inc
cltd
cltd
xor
enter
xchg
sbb
cmp
leave
test
mov
mov
mov
cmp
push
sbb
test
ljmp
xor
mov
jge
add
out
lock
sarb
push
dec
pop
xchg
stc
loope
imul
ds
mov
push
cmp
xchg
in
dec
fdivr
push
mov
adc
push
mov
sub
xor
shrb
enter
mov
loopne
pusha
dec
sub
loop
mov
xchg
leave
in
cmc
popf
movsl
jecxz
or
popf
lahf
aad
push
xchg
stc
sub
in
push
pop
cmp
shrl
ret
test
jg
xchg
push
jnp
jmp
scas
dec
imul
dec
hlt
clc
aas
xchg
cmp
mov
ror
xchg
popa
push
roll
test
pop
xor
idivl
cmpsl
xchg
sub
mov
or
jle
in
push
orb
imul
inc
mov
push
mov
inc
mov
testl
aam
cmp
mov
arpl
outsl
sub
fs
lock
jmp
popl
cmc
jle
fnstcw
mov
jecxz
fwait
test
repnz
in
test
scas
imul
mov
mov
imul
call
enter
popf
xchg
cmp
xchg
add
lods
xlat
mov
or
pusha
xor
mov
je
repz
pop
mov
or
or
xor
outsl
mov
stc
mov
dec
mov
mov
sbb
sbb
std
and
inc
cmp
out
xlat
or
rolb
js
icebp
stos
mov
scas
push
jle
out
dec
mov
mov
scas
lret
or
aam
in
cmc
scas
shl
not
call
test
jmp
mov
in
pop
bound
add
ja
nop
xor
adc
lods
ret
pop
xchg
jnp
nop
pop
loope
call
ja
mov
test
in
ret
insb
pop
sbb
pop
jbe
jmp
shr
mov
and
mov
dec
mov
ss
enter
in
xchg
in
jl
pop
jmp
testl
push
pushf
mov
push
aad
jbe
cmc
inc
sub
add
fstpl
imul
adc
mov
adc
or
in
popf
rol
and
sub
inc
cmpsl
lds
sarb
or
cld
xor
mov
orl
push
negl
xchg
stos
jns
sti
or
fdivrl
jo
sbb
lcall
xor
call
push
inc
and
push
xchg
movsb
rorb
in
push
movsl
pop
or
sbb
loop
out
jmp
mov
loop
test
sbbb
mov
outsl
data16
ljmp
xchg
cmp
inc
cmc
push
notl
test
rol
and
xchg
iret
fisttpl
jae
push
popa
mov
xchg
fisubrs
xchg
pop
cltd
lods
mov
shrl
jle
icebp
or
sar
outsb
fs
cmc
sub
shrl
mov
iret
cmc
je
and
jne
or
pop
ja
cmc
inc
or
fildll
mov
cmp
jecxz
sbb
sub
mov
inc
divb
les
dec
mov
subl
cmp
jecxz
pminsw
mov
out
and
mov
inc
push
sbb
sbb
ja
mov
cwtl
fisubs
out
pop
inc
insl
mov
dec
push
inc
push
sbb
int
push
mull
je
loop
pop
mov
mov
jg
daa
mul
pop
cld
cmp
stos
jbe
pop
push
out
pop
insl
outsl
pop
lret
ds
push
arpl
shl
stos
jno
jne
push
addb
stos
fwait
mov
mov
icebp
les
data16
aas
repz
divb
and
ja
out
movsb
jmp
hlt
aas
je
push
idiv
jecxz
xor
jae
mov
mov
jae
out
outsl
mov
clc
fucomi
jp
mov
data16
adc
loope
xlat
loop
lock
cltd
pop
call
sti
fisubrl
lock
mov
pop
mov
pop
mov
jnp
xchg
jno
jecxz
scas
lods
iret
imul
popf
mov
mov
fldcw
lcall
lods
jnp
lock
dec
jmp
dec
xor
stos
out
and
push
loop
loopne
mov
adc
sub
lret
lods
jno
testb
and
lret
fildll
orb
test
xor
sub
jo
jp
repnz
rcrb
jb
sar
mov
pop
push
lret
mov
xchg
cld
and
push
add
push
shll
fiadds
and
nop
loope
lcall
xor
xor
dec
shr
adc
push
stos
es
pusha
fbld
hlt
and
insl
mov
inc
pop
out
adc
test
fwait
out
mov
pop
fsubl
dec
xchg
pop
and
movsl
lods
sub
add
xchg
imul
adc
loop
iret
fbstp
loopne
ror
mov
into
lods
lret
clc
xchg
ds
loope
stos
ljmp
mov
sbb
lods
repnz
push
in
jge
cmp
inc
fcmovnbe
push
and
xchg
inc
sub
mov
sub
jnp
loop
jne
xor
add
mov
sbb
aaa
outsl
dec
sti
jg
mov
sbb
hlt
mov
sub
pop
test
lcall
fstl
mov
cmpsl
inc
push
por
sbb
les
cmc
cmc
sbb
jecxz
movsw
add
mov
test
lock
into
jo
jbe
shl
pop
cmc
push
jmp
hlt
lea
into
shrb
inc
movsl
dec
lret
sub
sahf
fsubp
je
ret
inc
push
cmpsl
ds
mov
cmp
out
mov
xor
ja
and
inc
xchg
sahf
push
imul
mov
popf
sub
push
mov
les
jg
outsl
pop
shl
mov
pusha
jae
cs
jb
arpl
imul
mov
out
sahf
dec
scas
repnz
notrack
push
loop
jl
ja
shlb
push
sarl
aaa
and
rcr
dec
mov
faddp
jne
jae
sub
cwtl
leave
daa
cmp
les
sahf
mov
ss
scas
or
jg
outsl
push
xorl
mov
cwtl
negb
sbb
inc
adc
pushf
xchg
or
fstl
or
icebp
pushf
jne
or
and
in
sub
mov
xchg
xchg
dec
lret
insl
add
outsl
adc
cmc
stc
scas
mov
out
xor
dec
in
push
push
inc
mov
stos
ret
sti
and
mov
xor
imul
lret
out
push
cmp
dec
stos
push
out
mov
pushf
push
jno
insb
xchg
fwait
mov
sti
pop
or
xor
mov
jns
movsl
cmp
dec
int
outsb
frstor
inc
or
jmp
mov
jmp
fucomi
orl
ret
mov
std
mov
enter
mov
fildll
movsb
add
jecxz
repnz
test
jno
scas
je
std
mov
loope
pushf
inc
ljmp
decl
int3
das
mov
repnz
notl
nop
sub
cmp
jmp
xor
pop
inc
mov
add
imul
pop
sbbl
push
jnp
mov
sahf
push
pusha
mov
pop
outsl
jecxz
mov
pmullw
lret
or
pushf
lcall
sub
lahf
jecxz
into
nop
pop
sbb
loop
pushf
fwait
hlt
cmp
mov
movsb
dec
jecxz
int
je
sbb
movsb
andl
pop
aaa
ja
fstpt
mov
sub
and
jb
fcmovne
cmp
mov
sub
ljmp
loopne
or
das
sbb
and
sahf
sbb
sti
jmp
dec
hlt
mov
div
xchg
and
lock
jecxz
mov
std
mov
jg
out
out
shl
jecxz
sar
out
sti
jmp
imul
not
fbstp
loop
in
les
xor
out
push
out
fldt
je
cmpsl
xor
and
test
xor
xor
or
inc
test
pushf
dec
jb
pop
mov
mov
lods
and
lcall
add
aas
sarb
pop
in
dec
rcl
add
add
rclb
mov
xor
iret
adc
dec
out
jle
insb
les
rorl
decb
aam
push
icebp
push
popf
xor
inc
push
push
lds
sbb
add
sub
sub
push
je
or
cmp
pop
mov
pushf
rcr
imul
jo
out
mov
rcrb
lock
mov
mov
movsb
hlt
or
stos
mov
arpl
popf
bswap
roll
xlat
adc
or
out
pop
iret
das
shr
mov
scas
pop
mov
dec
push
mov
or
ja
imull
mov
jae
cltd
sahf
adc
pop
fmuls
pushf
shl
enter
ret
jne
mov
stos
rcrl
or
xor
aas
daa
sti
and
mov
pop
jmp
push
push
pushf
leave
aaa
sbb
idivl
jb
icebp
adc
push
data16
loope
dec
and
inc
outsl
lea
pop
jno
push
sahf
sub
cmc
push
fcomps
int
aas
push
adc
bound
cmc
or
dec
sub
orl
call
fcomp
iret
add
fucomip
loop
sti
sub
add
ret
lock
fistps
outsl
jp
jge
out
sbb
into
pushf
cmp
sbb
into
pushf
ficompl
pop
insl
pop
xchg
daa
and
push
jg
add
fnstsw
jl
insb
dec
inc
test
add
or
or
pop
push
lds
in
mov
into
popa
iret
ljmp
pop
xchg
add
lods
rcrl
out
enter
push
lcall
addr16
lret
xor
data16
sub
or
repz
pop
icebp
push
adc
aas
in
fstpt
cli
cmp
and
jo
mov
jle
mov
or
pushf
notl
inc
mov
sub
fisttpll
ror
jno
or
fisubrl
scas
mov
outsl
loope
sub
aam
xchg
popa
inc
fildl
adcl
loopne
or
jmp
xor
xchg
pop
xchg
cmp
sbb
jge
pop
addr16
push
add
mov
pop
loopne
pusha
je
xor
pusha
push
push
ret
push
sub
xchg
popf
ret
jns
ret
push
nop
mov
xor
and
icebp
outsl
movsw
fisttpl
fidivrs
xor
in
mov
mov
dec
cmpsb
pusha
jne
push
pop
mov
das
loope
aam
shlb
xchg
or
aas
loop
push
fcmovnb
aaa
test
mov
mov
fucomi
outsl
xchg
ljmp
adc
add
in
xlat
lea
int3
or
out
movsl
sub
cmp
xor
jle
ret
data16
pushf
mov
fildll
push
jo
pop
loope
arpl
mov
rcl
loop
xlat
mov
enter
or
pop
ja
sbb
add
push
addb
in
xlat
insb
clc
fistl
push
iret
call
out
mov
call
xlat
xor
adcl
jns
rorb
pushf
jne,pt
push
loope
cmpsl
ret
out
xor
in
ds
fdivs
shr
repnz
jecxz
cmpsb
xchg
pop
or
data16
push
adc
mov
push
cmpsb
out
sbb
out
idivb
test
sub
fldt
and
scas
jecxz
icebp
rclb
data16
pop
arpl
bnd
popf
int3
dec
cmp
xchg
mov
scas
rcll
jbe
sahf
mov
out
mov
sub
aas
pop
xor
das
sub
jns
add
mov
outsb
sbb
out
sub
mov
test
testb
and
fnstenv
ret
ljmp
pop
mov
mov
pop
lahf
dec
push
inc
mov
jg
std
xor
jle
jo
sub
enter
sbb
sbb
cmpsl
lock
sbb
sbb
inc
and
loope
mov
push
ss
mov
jbe
insl
jg
jo
adc
push
jl
sbb
mov
xchg
insb
test
aaa
pop
icebp
es
push
xor
testl
sbb
fsubp
mov
aaa
mov
xlat
or
fistps
rorb
mov
gs
daa
fbstp
enter
cmc
push
shlb
out
fistl
mov
jnp
xor
rolb
pusha
cmpsb
sub
leave
sbb
adc
cld
fsubs
test
and
bound
fisttps
cmp
jmp
adc
fildll
adc
jle
lods
out
mov
jo
lret
pop
adc
stos
icebp
sbb
repnz
movsl
and
mov
popf
pushf
fucom
fs
sub
add
dec
ja
mov
rolb
dec
and
enter
stos
mov
mov
in
iret
add
sbb
pushf
outsl
fmuls
leave
add
int
cs
sbb
insl
int
push
clc
jmp
adc
loope
outsb
and
shll
shlb
popa
mov
xor
push
iret
mov
arpl
test
and
push
jnp
and
pop
imul
mul
mov
xor
and
call
stc
iret
sbb
jb
sbb
nop
les
adc
lcall
call
repnz
cld
inc
les
lds
loop
gs
pop
mov
addr16
hlt
shll
push
push
movsb
cmp
lcall
mov
in
fcomps
loope
scas
ljmp
lcall
rclb
cwtl
fbld
divb
push
adc
xor
or
push
int
and
or
or
sbb
hlt
push
push
das
pushf
std
dec
lcall
sbb
stos
jnp
cs
or
push
mov
jg
movsl
xchg
testl
sub
dec
sub
clc
rcr
adc
push
jbe
pop
mov
or
fildll
cmpsb
jg
dec
jns
adc
int
fisttpll
jecxz
cmp
and
loopne
lods
mov
pop
test
fdivs
shl
shrl
pop
in
mov
mov
mov
push
mov
sarl
mov
dec
arpl
fsubl
fwait
icebp
inc
rorl
pushf
mov
add
int3
scas
rorl
test
dec
lret
leave
andl
out
fcmovnu
idiv
jle
pop
sbb
mov
xor
xlat
mov
inc
inc
push
filds
int3
loop
loopne
jecxz
lods
fisttpl
int3
movsb
and
sti
ja
jle
rcrb
push
push
cmc
js
push
jae
mov
push
les
mov
mov
rolb
arpl
pop
add
loope
test
dec
sub
sbb
lods
imul
out
or
pop
adc
daa
push
popa
and
sub
loop
enter
das
pop
pop
and
add
xchg
dec
stos
out
sub
cmc
push
inc
sbb
lahf
stc
scas
scas
out
jb
loope
jg
lcall
negl
and
ljmp
arpl
xor
mov
mov
mov
rcrb
mov
clc
pop
aad
sbb
aaa
adc
push
lea
mov
test
jl
mov
rcl
stc
sub
aaa
hlt
cmpsb
xor
pop
scas
jle
inc
imul
das
das
nop
and
adc
jle
movsl
mov
out
insb
popf
sbb
test
jmp
cmpsb
das
pop
lock
sbb
push
fwait
inc
int3
ja
mov
xchg
mov
dec
sarl
lods
sti
sub
dec
das
les
xchg
movsb
pop
pop
jecxz
mov
cmp
loope
or
into
mov
fcomps
mov
pop
rcll
stos
jmp
out
jecxz
add
jmp
movaps
cmp
pop
in
out
sti
cmpsb
xor
and
stos
push
fdivl
adc
aam
movsl
aas
aad
aas
icebp
inc
pop
mov
das
lods
push
xlat
outsl
clc
shll
jecxz
fidivs
sbb
lcall
pop
ss
lret
int3
fistpl
sub
dec
inc
loope
imul
and
pop
mul
outsl
dec
into
add
cltd
into
inc
lret
pop
cmp
outsl
pop
test
jmp
jae
jg
add
jae
call
dec
mov
dec
lcall
mov
xor
mov
jmp
xchg
inc
sub
xor
call
dec
or
cld
mov
cmp
les
mov
ds
out
mov
int3
shr
sub
lock
cmpsb
bound
add
hlt
daa
push
mov
in
ds
and
and
testb
pushf
lods
sbb
mov
xchg
or
not
lret
xor
in
fmuls
pop
pushf
mov
lahf
adc
ds
mov
aad
mov
jb
add
rcrl
je
xchg
push
loop
adc
sub
jbe
dec
xchg
and
rorl
add
mov
jg
mov
jnp
dec
jl
aaa
subl
ds
inc
ud2
clc
test
fisubrs
fdivrs
cli
aad
or
faddl
adc
repnz
jecxz
xorl
mov
fdivl
out
sub
popa
loopne
fiaddl
or
int
shrl
in
xor
mov
aam
pop
jge
sub
jmp
sbb
leave
stos
fldt
cld
les
std
imul
enter
pop
das
dec
imul
popf
xor
and
and
inc
clc
pusha
mov
rorl
test
sbb
pop
jmp
pop
pushf
jne
pop
test
ja
pop
pop
cmp
sbb
lret
xor
fistl
xor
xchg
xlat
sti
pushf
lods
ret
sbb
imul
movsb
loope
gs
ret
pop
pushl
jbe
lock
jp
adc
xchg
pop
jbe
mov
out
clc
sub
pushf
mov
push
jmp
inc
hlt
xor
lods
adc
or
stos
lcall
enter
and
xlat
cli
lock
fdivrs
mov
xchg
inc
ret
arpl
je
jo
or
jmp
pmuludq
sub
ret
jbe
and
xor
jae
inc
bound
mov
sbb
cmp
or
xchg
stos
and
ljmp
ret
lds
addr16
ss
test
mov
inc
inc
mov
push
sbb
fldenv
ja
call
adc
jo
ret
mov
cmpb
jmp
insl
jle
lock
push
push
clc
in
lcall
cwtl
and
adc
outsl
sbb
jle
lods
or
xchg
jae
ja
hlt
je
sub
pop
adc
inc
xlat
pop
pop
stos
pop
sub
pushf
iret
sub
sysret
mov
fwait
xor
push
inc
push
sub
mov
inc
aad
std
ret
jb
mov
rorl
push
pushf
inc
jp
pop
clc
les
inc
xchg
inc
je
mov
loopne
hlt
jg
adc
inc
push
daa
mov
clc
test
mov
push
adc
push
sub
or
addl
hlt
lahf
ret
lods
in
adc
imulb
pop
out
mov
shlb
xor
jno
fs
jae
mov
or
pop
xchg
fs
adc
fs
int
outsl
pop
add
mov
mov
fwait
xor
not
mov
cmpsb
mov
movsl
add
loopne
xor
adc
dec
ja
movsb
dec
aam
dec
test
mov
jne
cmp
jecxz
sti
mov
and
mov
inc
jg
mov
int
int3
pop
sbb
ret
loop
pop
or
rclb
sub
inc
out
add
mov
shll
jns
and
mov
mov
dec
shll
cmpl
fsubrs
inc
jmp
and
std
mov
movsb
cmpsb
aad
scas
movsb
insl
les
cltd
push
mov
cmp
sti
lods
hlt
dec
stos
cmp
mov
cmp
aam
xor
loopne
int3
data16
add
push
xchg
lahf
ja
pusha
neg
imul
dec
fiaddl
fwait
push
push
insl
insl
fsubrs
fsubrl
das
stos
pop
mov
aam
mov
xchg
push
inc
jbe
pushf
jecxz
arpl
imul
pop
dec
jb
jp
loop
pop
jmp
jno
mov
movsb
jo
xlat
icebp
das
insb
jne
cmp
ljmp
add
sub
mov
jp
xlat
test
cmpsl
sbb
pushf
mov
int3
sahf
pop
xchg
call
faddl
lcall
sub
sbb
and
sahf
dec
xchg
or
cmp
pusha
and
test
mov
sub
push
cmp
scas
out
push
loopne
dec
pop
call
arpl
push
enter
lock
jbe
mov
loope
mov
pop
mov
pop
aam
icebp
shlb
mov
popf
shrl
adc
pop
mov
mov
cmp
sarb
dec
mov
ret
in
clc
ja
mov
sbb
movsb
sbb
pop
popa
dec
mov
sti
call
and
divl
in
mov
adc
out
add
sub
dec
dec
iret
shl
lret
jg
and
jmp
pop
jge
push
rcrb
add
xor
add
and
dec
push
jg
mov
bound
push
and
mov
out
aad
in
dec
fyl2x
jle
lods
lods
bound
repz
addb
mov
cmp
pop
jmp
int
bound
popa
nop
popf
cmpsl
leave
xchg
mov
test
adc
xchg
mov
fimull
mov
push
mov
movsl
popf
mov
cmp
iret
andb
cmp
mov
mov
sbb
mov
bound
sbb
pop
jns
xchg
or
dec
or
add
aaa
dec
lods
arpl
add
rcl
or
rclb
mov
iret
fldt
fildll
hlt
hlt
lods
jmp
mov
dec
add
cmpsl
repnz
pop
shl
into
jp
adc
sub
jnp
xchg
in
jmp
or
outsb
xor
rorl
dec
jns
pushf
add
mov
cbtw
or
in
or
or
push
roll
jo
std
lods
ret
out
mov
insl
lock
push
xor
push
or
imul
jmp
lret
gs
jmp
sbb
mov
aam
ja
je
mov
insl
xchg
inc
outsl
add
dec
repnz
in
jmp
adc
scas
push
push
mov
pop
cmp
dec
imul
subb
jle
movsl
fldcw
mov
cmp
lret
xchg
rorl
stos
push
or
push
fildl
jo
and
insl
sahf
mov
shrb
jmp
inc
inc
add
out
mov
js
fwait
mov
ret
insb
xchg
sub
call
les
aad
push
mov
int3
jle
cli
dec
mov
xlat
push
idiv
sbb
lret
or
add
hlt
clc
pop
mov
subb
or
dec
insb
sub
movsl
dec
jbe
fldl
push
inc
jno
xchg
sub
inc
pop
xchg
xchg
cmp
ds
add
xchg
cmpl
mov
sbb
jne
jl
arpl
pop
je
fimull
std
je
in
lock
cmp
ljmp
inc
lods
xchg
mov
into
out
ret
dec
jge
incl
insl
push
lret
movsl
pushf
xchg
add
and
xchg
inc
xor
push
neg
adc
cmpsb
pop
out
negb
orl
xchg
jle
lds
adcl
cmpsl
pop
inc
cltd
xchg
lods
stc
or
test
jbe
or
push
daa
xlat
pop
xchg
aaa
jbe
stos
cmp
jb
testb
add
fsubrs
lods
data16
dec
icebp
cmp
jecxz
mov
popf
mov
dec
test
or
inc
or
cmp
test
mov
jmp
and
inc
xlat
or
jb
or
lret
inc
outsb
jecxz
jno
idivl
icebp
gs
inc
jecxz
jb
push
pop
shll
sub
int3
leave
rcrb
loopne
cmp
cld
ljmp
fmull
ret
jmp
rorl
ret
fisttpl
or
scas
pop
jo
jbe
hlt
inc
into
and
repz
mov
or
cltd
scas
mov
sar
mov
pop
mov
daa
xor
movsl
lock
jb
flds
out
add
imul
and
jbe
jecxz
pop
adcb
xchg
scas
or
sub
jnp
pusha
stos
popa
mov
or
mov
call
cmp
cmc
popa
mov
adc
push
pushf
adc
je
cmc
inc
andl
mov
sbb
loopne
stc
push
jg
xor
mov
fwait
mov
adc
ret
cmp
sbb
adc
xchg
fsubr
push
push
jmp
jecxz
cltd
mov
sbb
popa
and
xchg
jmp
loopne
mov
jmp
idivl
loopne
jmp
jno
aad
mov
sub
iret
mov
or
std
cmp
loope
jle
rorl
jecxz
adc
ljmp
jmp
adc
fnsave
int
popf
jb
push
loope
or
mov
inc
shlb
int
loope
mov
push
push
jecxz
bound
stos
je
dec
push
outsl
or
or
adc
xchg
sbb
int3
add
insb
outsl
cwtl
out
jb
xlat
or
outsb
jle
aaa
mov
repnz
into
hlt
jl
out
push
mov
mov
movsl
adc
stc
mov
adc
xor
imull
jle
out
jmp
je
repnz
mov
aad
mov
ljmp
mov
cmp
mov
mov
mov
or
dec
or
lcall
ficompl
orb
je
pop
jnp
or
ja
xchg
sub
pop
lcall
sub
pop
scas
mov
cli
popa
aad
pop
addr16
in
lahf
pop
push
das
jmp
cwtl
iret
das
or
jne
fldt
mov
sub
popf
cmp
subl
cli
lret
jmp
push
add
leave
cmp
loop
xchg
sti
mov
add
out
dec
adc
enter
rcll
inc
mov
or
stos
cmp
jns
xchg
shl
mull
dec
jecxz
fisubs
fucom
loope
sahf
ja
je
int3
add
xor
dec
stc
jmp
test
lret
push
cs
popa
sbb
jle
test
ja
mov
loopne
lahf
xchg
or
dec
loope
xor
add
xorb
repnz
repz
divl
or
push
bound
fwait
mov
test
mov
js
fmull
adc
xchg
pop
je
cs
in
jmp
loopne
sbb
push
mov
aam
xor
jne
ja
hlt
dec
mov
add
not
enter
mov
dec
jl
loop
loope
test
add
loop
outsl
push
xchg
and
movsl
shl
fdivs
out
lret
mov
pop
es
inc
pop
jg
adc
ss
xchg
xchg
cmp
jge
fs
stc
into
jg
jp
pop
fmuls
sub
scas
inc
adc
push
sbb
add
clc
pop
cmp
hlt
push
mov
jge
enter
inc
jb
test
xchg
loopne
cwtl
pop
out
loope
dec
cmp
int3
jo
ret
cmp
loope
push
cli
gs
outsl
jmp
ret
ljmp
inc
pop
jmp
pop
test
stos
dec
lock
dec
imul
push
lret
dec
lcall
cld
xchg
cmc
cs
or
jae
popf
jae
loop
or
jmp
pushf
pop
sti
int
fs
lods
mov
jmp
inc
xchg
xchg
aaa
bound
jl
movsb
ljmp
out
popa
inc
inc
push
xlat
negl
ss
jne
out
dec
adc
fcomi
loop
jg
pop
movsl
out
mov
add
popf
or
or
add
outsl
rorb
xchg
xor
jge
xor
jne
filds
cltd
jbe
out
addr16
push
pop
insl
outsl
cmc
add
sbb
out
bound
pusha
movsl
out
and
int
dec
xchg
lret
nop
rclb
fadd
cmc
mov
xlat
add
pop
jbe
xor
test
divl
sub
mov
lahf
bswap
jbe
sbb
movsb
dec
les
mov
mov
cs
xchg
dec
cmpsl
test
imul
xor
inc
leave
in
mov
icebp
jmp
push
xor
out
loop
and
rcrl
sub
repz
or
repnz
out
inc
scas
mov
and
xor
mov
andb
and
mov
xchg
hlt
lret
roll
mov
iret
icebp
aas
fildll
icebp
jb
mov
bound
sub
shr
je
movsb
push
shrl
popl
shr
fistl
fidivl
inc
in
icebp
loopne
add
lahf
or
jns
sub
scas
ret
addr16
inc
sub
or
dec
testb
out
mov
fidivrl
push
mov
push
inc
lret
push
xchg
dec
pop
into
hlt
or
xchg
pop
rclb
sub
mov
clc
scas
jmp
iret
outsb
ljmp
outsl
push
lds
imul
loop
mov
pushf
cmp
data16
jle
mov
mov
pop
mov
dec
loopne
addr16
inc
xchg
cwtl
popf
stc
in
jne
or
and
in
icebp
mov
pop
mov
or
mov
scas
rorb
sar
sub
clc
bound
ljmpw
ret
ljmp
sti
mov
outsl
leave
test
mov
imul
movsb
lea
fwait
and
in
xor
cmc
je
jl
lret
push
in
jg
mov
lret
xchg
jae
psadbw
aad
stos
loop
add
push
lret
mov
jno
cwtl
jmp
imul
cwtl
pop
push
and
adc
out
dec
leave
push
popa
sbb
rorl
pop
push
lods
cwtl
push
sub
dec
add
fstps
stos
xchg
or
imul
out
xchg
loopne
jno
test
lcall
int3
jmp
js
das
data16
inc
cmpsl
decb
int3
leave
cmp
sahf
mov
xchg
in
mov
std
out
xor
stc
aaa
leave
addr16
inc
mov
mov
xor
push
push
movd
outsl
push
push
jmp
sub
lret
loopne
loope
pop
adc
mov
int
or
xchg
mov
sbbb
lret
outsb
loopne
jae
call
lret
pop
ljmp
or
xchg
arpl
dec
push
roll
cmpsb
lcall
shl
add
lcall
stos
test
out
adc
call
mov
andl
cli
sbb
adc
xchg
in
fs
mov
pop
fdivrs
mov
push
loop
or
fimuls
push
mov
notb
dec
cmpsl
xchg
push
mov
cmp
sbb
es
loop
push
and
shll
lcall
pusha
push
ljmp
or
wrmsr
push
les
adc
and
test
sbb
xchg
jnp
mulb
enter
enter
fmull
jg
loope
push
rolb
xchg
into
push
popa
cmpsl
insl
ljmp
add
mov
push
lret
pop
loop
xchg
jmp
push
pusha
scas
out
outsl
xchg
push
sub
hlt
enter
cmp
mov
jmp
pushf
daa
sbb
incl
inc
xor
test
outsl
inc
cmp
jecxz
insl
ljmp
adc
fistl
clc
pop
arpl
out
or
sbb
fisttpll
and
push
xchg
lret
mov
iret
cmpb
cli
in
data16
cwtl
cli
mov
cmc
call
lea
jns
test
or
sbb
ret
or
in
outsl
xor
cli
lret
mov
testb
jecxz
sbb
pop
lret
mov
lods
sub
loope
loopne
lret
or
lds
insb
jae
in
shlb
aad
xchg
inc
arpl
daa
jb
insb
sub
popf
adcb
xchg
mov
pusha
or
loop
icebp
outsl
mov
dec
data16
mov
pop
jno
aam
mov
pop
or
mov
sub
mov
lods
out
pop
shll
push
std
or
ja
int
ljmp
cwtl
sti
jmp
mov
jo
sbb
outsb
popf
loop
or
sub
jne
mov
jne
movsl
dec
je
stos
push
incb
scas
adc
imul
push
repnz
das
scas
popf
inc
aad
jmp
movsl
cmpsl
mov
add
aaa
imul
lea
das
fs
adc
imul
stos
jno
push
movsb
pop
push
lods
xchg
movsb
jecxz
inc
testl
pop
and
add
int3
xchg
mov
call
pop
inc
inc
jp
shrb
lahf
mov
call
mov
rcl
subb
and
push
mov
clc
out
lods
pop
wbinvd
jnp
fldcw
subb
sbb
push
movsb
cmc
addl
inc
sub
xchg
push
mov
and
xor
lcall
sub
push
movsb
test
shll
jge
push
fldenv
add
lahf
dec
inc
loopne
jbe
cmp
inc
mov
aas
jg
ss
pop
mov
mov
sbb
jmp
cmpsb
cmc
pop
push
mov
mov
xchg
adc
lret
xor
ret
aas
dec
xchg
jbe
scas
jns
icebp
xor
and
fstps
pushf
shll
cmp
shll
lret
cmc
lea
subl
cmpsb
xchg
mov
jp
push
movsl
mov
loope
ret
jl
and
pushf
xor
nop
xlat
cld
or
mov
mov
add
fcmovnbe
cld
or
sub
or
and
test
cmc
sarb
into
rcrb
scas
mov
jne
les
fadds
push
out
mov
std
dec
and
fimuls
pop
mov
dec
push
sub
sbb
push
mov
mov
repnz
sub
jecxz
cli
and
and
inc
pop
les
inc
int
fnstenv
rolb
mov
push
or
rorl
jg,pt
mov
out
xlat
sub
clc
fdivrl
stc
sbb
std
lret
js
test
scas
enter
cmpsb
push
loopne
out
shll
cmpsl
push
int3
jecxz
sub
rcrb
jbe
icebp
inc
sub
scas
sub
out
mov
int3
jbe
xor
xchg
test
mov
and
push
push
fisubs
vmptrst
idiv
mov
push
jge
nop
hlt
pop
fnsave
push
in
imul
popa
divl
dec
mov
jmp
adc
out
pop
xlat
imul
mov
gs
test
jecxz
pop
ret
sbb
xchg
xchg
push
xchg
mov
mov
dec
sbb
shll
enter
bound
jmp
aaa
pop
lods
shlb
in
stos
pop
call
sub
addr16
sbb
pop
mov
test
xchg
xchg
pop
jge
sub
push
int3
adc
push
movsb
ja
and
adc
xchg
or
jmp
arpl
adc
or
call
aad
jecxz
or
jp
push
enter
xchg
lds
out
das
repnz
jne
xchg
bound
jle
push
int3
jne
jmp
lock
and
outsb
jle
lret
pop
cmp
loope
imul
sahf
cwtl
in
mov
or
fs
jmp
pop
mov
pop
jne
addr16
inc
mov
xchg
int
sub
add
fdivs
stos
adc
ret
mov
imul
jbe
out
xchg
jae
fdivrp
sbb
add
jl
push
je
xchg
pop
movsl
addb
pop
fists
imul
aad
push
lods
fs
sti
cmc
js
adc
das
or
jns
sub
mov
sahf
ffreep
cwtl
shl
mov
int3
movsl
out
mov
leave
mov
jmp
jmp
sbb
into
xlat
fs
mov
call
sbb
jle
lahf
xor
jl
pop
fistl
dec
das
addl
out
icebp
sbb
mov
xchg
pop
negl
sbb
push
and
push
mov
add
into
je
mov
ja
mov
pop
sub
pop
lret
loop
xchg
test
movsl
cmc
cmc
and
scas
fistl
push
stc
popa
in
pop
adc
fisttps
icebp
loop
lods
cmc
out
daa
and
adc
outsb
push
test
std
xor
clc
test
and
or
sbb
mov
out
fucomi
rorb
mov
dec
sbb
lret
repz
ds
leave
test
jecxz
cmp
lods
test
adc
push
dec
inc
rorl
pop
nop
imul
jo
xor
cmpsl
jb
push
imul
jb
in
into
jne
dec
mov
jge
adc
sahf
fnstcw
rcll
pop
pushf
sbb
int3
or
pop
jb
cmpsl
data16
les
sub
or
hlt
ret
popf
adc
adc
mull
lds
sub
cmp
cmp
and
sub
mov
in
repz
xchg
or
sar
std
pop
and
test
movsl
les
lods
push
and
mov
sbb
out
jae
jg
or
xorl
fldenv
sbb
ret
inc
inc
xchg
inc
jmp
lret
and
sbb
aad
and
sub
sarl
push
out
push
shl
inc
cmp
int
add
pop
cmp
dec
stos
mov
shll
std
pop
popf
sar
out
pop
in
and
xchg
lods
jnp
imul
pop
inc
push
js
add
jo
roll
sub
mov
insb
jecxz
jb
movsb
fists
sub
cmp
ret
setne
sbb
jge
xchg
cmc
xor
or
inc
push
sub
sbb
icebp
int3
mov
popf
mov
jmp
rcrb
xchg
imul
fnstcw
and
test
xchg
mov
ffree
push
hlt
mov
lock
outsb
fucomip
mov
in
stos
aam
loop
nop
loope
imul
xchg
push
stos
fistl
clc
xchg
mov
inc
push
sti
fmulp
add
sysexit
popa
loope
ret
inc
cmpsl
add
ss
xor
leave
and
sub
fld
jbe
repnz
cmp
mov
mov
ljmp
cmc
ror
mov
sti
insb
jecxz
push
ljmp
add
stos
mov
sbb
dec
cmpsl
jo
sub
jne
les
js
xor
inc
in
mov
mov
push
mov
dec
pop
je
in
lock
and
sbb
lock
das
mov
shlb
lahf
bound
pop
mov
loop
nop
cmp
iret
mov
daa
mov
loope
vpshlb
mov
and
iret
pop
hlt
sbb
inc
call
add
loope
outsb
mov
cmp
sahf
pushl
jo
js
jmp
scas
gs
and
les
out
xchg
in
xor
pushf
jl
push
iret
clc
jmp
loop
adc
xchg
movsl
scas
leave
and
jecxz
cld
or
and
ror
add
in
mov
sti
ds
test
sbb
lahf
adc
incb
xchg
ret
push
add
flds
int
cmpsb
dec
cld
hlt
mov
cmp
icebp
data16
xlat
shrl
mov
jnp
icebp
mov
movsl
inc
aam
adc
rorb
mov
jne
mov
les
sbb
scas
pop
xchg
cld
jns
lods
pushf
jnp
rorb
pop
data16
in
sti
jne
out
jecxz
jne
pop
loopne
loop
out
fsubl
sub
mov
pop
xor
pop
test
adc
out
sar
imul
pop
stc
shr
xchg
dec
lods
pop
clc
movsl
in
mov
pop
jmp
and
xor
test
xor
ljmp
mov
lods
call
xchg
jns
repnz
out
pop
sbb
inc
jecxz
add
push
mov
movsl
xchg
cmp
mov
mov
lahf
cmp
xlat
int3
sahf
dec
mov
das
dec
jno
sbb
mov
add
inc
in
push
ds
inc
int3
sar
xor
lea
test
ljmp
xchg
mov
and
inc
add
rcrl
aaa
push
xor
sub
call
pop
push
fsubl
push
testl
mov
mov
out
jo
mov
cmpsl
iret
loope
std
xor
push
das
adc
adc
outsl
fwait
cmpsl
ds
sbb
shrb
pop
repnz
loop
jecxz
sub
xchg
jmp
jnp
mov
outsl
lret
cmp
enter
inc
loope
pop
notb
imul
ja
lds
lods
adc
clc
call
mov
jmp
jb
or
pop
jo
jmp
sub
xchg
mov
andb
mov
fcomip
mov
mulb
or
sub
add
mov
stc
cmc
mov
adc
cmp
out
hlt
mov
lods
fcmovbe
xchg
lahf
icebp
jmp
mov
jg
leave
into
aad
sub
fidivs
pop
jb
jg
popf
shlb
sub
jecxz
sbb
cmp
dec
jecxz
std
xor
and
insl
and
add
or
mov
push
call
lret
aaa
ljmp
adc
xor
ret
mov
in
roll
out
movsb
aaa
xorb
mov
mov
push
jg
stos
call
orb
xor
out
jg
in
stos
outsb
push
mov
push
insb
jecxz
insl
lcall
jle
adc
in
mov
pop
pop
leave
dec
or
test
fdivl
push
insl
mov
jle
cs
sub
inc
push
and
test
inc
pop
stc
in
add
or
iret
leave
dec
test
out
mulb
icebp
fimull
stc
xor
lods
jo
leave
jb
inc
mov
movsl
mov
push
dec
mov
mov
stos
es
push
test
push
push
ljmp
or
and
test
imul
or
jmp
xchg
movsl
cwtl
inc
and
lret
ss
add
cmp
dec
sub
sarb
adc
mov
in
es
lea
jmp
jb
adc
mov
mov
cmpsl
push
jb
mov
xlat
adc
add
insb
out
aad
movsl
and
fwait
dec
pop
in
xor
jecxz
addr16
adc
int3
xchg
cltd
test
sbb
std
xor
push
jge
out
pop
rorl
imul
xor
jecxz
adc
out
loop
ret
fbld
cmp
repnz
shlb
push
das
insl
xor
loop
jnp
inc
dec
scas
rol
adc
push
or
popa
pop
jle
cmp
ficompl
add
pushf
lock
mov
or
mov
sub
std
nop
fnstsw
aaa
iret
outsl
sbb
in
inc
fstpl
mov
bound
sar
pop
popa
xchg
je
and
int3
or
add
into
mov
fisttpll
jle
push
xchg
jne
mull
out
pop
push
adc
cltd
adc
adc
aaa
arpl
jg
mov
dec
loope
push
mov
sub
sub
outsb
sarl
xchg
sub
out
jg
mov
mov
adc
xor
aam
push
movsl
movsl
ljmp
mov
mov
stc
sub
loopne
sub
and
mov
dec
or
lds
add
and
inc
je
lahf
arpl
loope
pusha
fwait
repnz
cmp
mov
jae
sbb
jmp
mov
imul
int3
jbe
sub
jge
add
test
mov
dec
stos
pop
into
gs
js
jecxz
fdiv
lea
bnd
je
sbb
call
add
fisttpll
rolb
test
mov
cmp
or
in
mov
stos
ja
lcall
insb
pop
push
add
iret
fstl
fists
xchg
imul
push
ja
in
push
xchg
adc
fdivrl
dec
cmp
pop
and
adc
dec
mov
leave
enter
jg
cmp
dec
pop
leave
inc
cld
ret
out
imul
sbb
lahf
insb
pop
les
movsl
shrb
cld
xor
dec
jp
mov
mov
shr
xor
push
sbb
cmp
in
cwtl
dec
enter
xchg
lods
jmp
xchg
in
test
add
int3
setne
lret
ljmp
or
out
clc
xor
jne
idiv
daa
aam
fsubl
inc
fistps
std
leave
mov
loopne
mov
dec
gs
adc
push
or
into
mov
or
sbb
adc
xchg
sti
es
cmp
loopne
mov
adc
mov
loope
dec
inc
mov
cmc
fs
cmpsb
mov
or
and
fiaddl
movsl
das
pop
inc
pop
mov
loop
mov
mov
clc
jle
pop
adc
mov
icebp
dec
sbb
xor
aas
or
xchg
std
mov
fucomi
push
push
adc
add
or
sbb
popa
pop
icebp
test
lea
lock
das
subl
adc
inc
and
and
lcall
jmp
and
sahf
sbb
daa
pop
and
insb
addb
movsl
clc
imul
ja
inc
arpl
xchg
mov
pop
sti
inc
in
jae
mov
push
jecxz
es
mov
cmp
fwait
cmp
out
jb
test
xchg
cs
lock
mov
fists
cmpsb
scas
imul
mov
mov
jae
out
imul
sub
fisubrs
fldt
jle
mov
push
ret
mov
dec
sub
in
pop
xlat
jecxz
or
into
mov
pop
arpl
xlat
inc
jecxz
add
pop
pushf
sbb
orl
push
cltd
xchg
clc
mov
je
fcmovne
lahf
fstl
inc
dec
jecxz
add
pop
push
push
jmp
mov
mov
imul
xchg
adc
loop
int
jns
inc
ss
fmuls
icebp
jae
icebp
dec
cld
dec
sub
cmc
inc
and
cmp
arpl
icebp
mov
mov
lds
mov
mov
leave
and
popa
imulb
sahf
add
in
testb
sub
cs
les
test
pop
adc
int
mov
int3
pusha
out
test
xor
popf
outsb
xchg
arpl
not
test
sarb
adc
pop
dec
and
jmp
lods
mov
addl
enter
cltd
jo
xor
inc
in
stos
mov
fcomi
sub
add
sbb
repnz
add
cs
mov
mov
outsl
push
jns
add
enter
inc
notl
ds
or
lea
fstpl
mov
out
adc
cmc
mov
lock
shlb
push
fldenv
jl
stc
out
and
inc
imul
add
pushf
sbb
pop
pop
data16
push
lret
mov
jns
ficoml
fists
mov
xor
xchg
decl
xchg
add
mov
and
add
jg
cld
bound
ds
in
jmp
aad
mov
cmp
mov
negl
sbb
scas
mov
scas
mov
pop
loope
cmpl
xor
out
push
daa
aaa
in
enter
lahf
hlt
cmpsb
push
imul
push
push
ljmp
fnsave
out
not
in
or
or
or
or
or
or
pop
cmp
fimuls
pop
out
jo
imul
fld1
loope
cmpsl
sub
cmc
push
mov
mulb
insl
mov
lock
and
fidivrl
jno
mov
stos
jo
outsl
pusha
dec
lods
enter
testb
sahf
or
mov
mov
dec
insl
mov
mov
out
movsl
xor
push
or
arpl
iret
frstor
pop
ljmp
pop
push
dec
ja
in
test
xchg
popf
adc
in
filds
jno
or
loope
aam
pop
sub
cmpsl
push
mov
mov
inc
imul
cmc
mov
push
adc
jbe
inc
js
xor
lahf
inc
push
pusha
push
ljmp
mov
mov
mov
jg
sti
lcall
dec
loope
rcrl
bound
and
xor
cmpsl
ret
sbb
inc
inc
in
jne
outsb
sub
rorb
addr16
mov
push
xchg
fstl
in
mov
data16
loopne
aad
mov
mov
lea
stos
loop
xor
jle
cmp
cld
fildll
mov
jmp
cmpsb
mov
mov
repnz
cmp
outsb
add
xchg
pop
xlat
std
and
out
call
lahf
cmp
subl
clc
mov
imul
cmp
pop
jo
std
add
mov
outsl
and
dec
pop
fsubrl
mov
sbb
addr16
ret
out
cwtl
pop
lcall
pop
or
pop
icebp
mov
mov
movsl
dec
fdiv
loop
dec
jp
mov
or
lock
lea
aas
outsl
hlt
push
les
mov
fstpt
rcl
inc
or
dec
mov
dec
outsl
jle
fidivl
imul
xchg
test
jge
cwtl
cld
jmp
hlt
fimull
rcrb
dec
jnp
lock
mov
inc
add
or
call
ror
jnp
movsl
inc
mov
sub
imul
test
and
out
fisubl
xlat
les
add
jmp
test
mov
xchg
fucomip
xchg
fucom
filds
in
mov
sbb
sti
push
js
lock
pop
lahf
inc
fcoms
aad
mov
push
dec
outsb
and
rcrl
dec
jne
mov
sub
scas
or
add
sub
inc
mov
xor
push
adc
jle
imul
pop
ljmp
xlat
push
mov
rcr
or
add
mov
mov
test
fdivr
pop
sub
scas
in
lds
enterw
gs
bound
add
push
cmc
into
out
push
outsl
icebp
iret
clc
loope
enter
es
js
lock
add
rcll
xchg
mov
jmp
adc
mov
fucomi
cmpsb
pop
jmp
cmp
adc
jo
adc
gs
adc
sbb
ret
dec
inc
xchg
mov
int
jbe
out
iret
add
dec
jl
ja
sbb
fstps
jl
test
push
cmpsl
mov
dec
int3
push
cmpl
movsl
ja
pop
repz
adc
adc
fldl2t
xor
xchg
pop
int
ljmp
popf
mov
or
cmp
cmp
sub
mov
out
movsl
sahf
pop
ret
data16
loop
ret
push
fsub
lock
in
movsb
pop
lock
stos
arpl
scas
scas
or
in
loop
xchg
push
fbstp
and
pop
movsl
dec
das
addb
outsl
lock
xchg
test
call
enter
mov
lahf
js
sbbb
jecxz
lods
pop
dec
inc
add
mov
fcmovne
ljmp
out
sub
inc
mov
mov
rorl
xchg
mov
popl
jg
or
sub
test
loope
cwtl
mov
sti
or
mov
and
lock
and
cmp
or
xchg
icebp
lea
inc
cmpsb
popf
mov
pusha
and
xor
ret
push
and
loope
mov
stc
in
call
stos
jns
and
xor
pop
cmp
dec
xchg
leave
out
pop
int3
push
iret
dec
es
fnstcw
imulb
mov
sbb
loopne
push
enter
ds
sub
push
cmp
jo
xlat
roll
add
jbe
mov
mov
xchg
xchg
mov
inc
psrlw
bound
aam
popa
movsb
test
stos
jnp
push
mov
dec
leave
adcb
mov
sti
das
shrl
lcall
cmp
and
pop
addl
lret
and
fidivrl
fistpll
cmp
loope
mov
insb
ret
outsl
bound
or
or
ret
call
sub
and
inc
int
in
std
out
fcomi
add
jbe
pop
sbb
mov
sub
out
enter
mov
incl
ljmp
sbb
sub
movsb
pusha
mov
jl
pop
sub
jbe
es
jb
fbstp
loope
outsl
scas
loopne
jne
js
rcrl
cmp
mov
sub
test
leave
test
push
add
jle
in
xchg
scas
fnsave
push
fwait
sub
lods
cmc
and
dec
in
fisttpl
std
mov
out
sub
sub
mov
add
aaa
xlat
lds
mov
fisttps
out
or
jecxz
inc
dec
mov
test
jmp
stc
push
push
or
out
push
es
scas
enter
xchg
test
adc
int3
lods
iret
mov
loope
es
fcmovnbe
movsl
lret
ja
jp
in
jmp
out
add
jae
movsl
jno
in
enter
mov
sub
mov
push
sti
ja
popa
jge
push
xlat
or
jne
cmc
jae
cli
jae
sbb
pusha
mov
sar
inc
xor
sub
jo
pop
clc
dec
push
xchg
jecxz
les
xchg
cmp
cmp
cmc
pop
sbb
imul
ficomps
ret
push
adc
stos
and
stos
xchg
test
cltd
pop
decl
es
dec
pop
mov
add
or
jo
repnz
shl
stos
jge
fnstenv
cmc
shl
sbb
push
rcll
jnp
lea
sbb
out
pop
notl
dec
or
mov
sub
mov
mov
xor
pop
cli
fstpt
clc
mov
jle
ds
xlat
xchg
fcmovnb
js
sub
inc
xchg
cld
push
mov
jmp
ss
pop
adc
and
pusha
fsubp
mul
sar
scas
popa
push
fisttpll
inc
je
inc
jno
and
xor
jle
xor
out
test
aaa
in
subb
pop
mov
pop
jecxz
sbb
aaa
into
and
ljmp
inc
xchg
mov
mov
iret
jmp
aad
sbb
add
fadd
sti
mov
mulb
xor
test
out
setl
pop
jle
call
stos
inc
mov
int3
jne
mov
or
adc
fisttps
clc
xor
mov
xchg
add
stos
out
jne
xor
ret
mov
mov
xlat
jg
cmpsl
add
loope
inc
repnz
fstpt
xchg
arpl
or
xor
or
jb
bound
stos
out
inc
insb
sub
mov
cmpb
imull
adc
ret
jge
jg
pop
mov
out
scas
mov
fistps
mov
adc
loope
sbb
jmp
mov
std
lods
stos
fildl
pop
mov
call
xchg
mov
jnp
popf
aad
dec
movsb
aam
lret
les
fs
sub
or
outsl
fstpt
test
scas
lret
dec
jae
stc
pop
mov
into
adc
leave
push
es
lret
jnp
push
dec
and
lret
sub
outsl
lahf
out
loope
lock
sub
rcrl
hlt
ret
popa
in
sbb
aam
outsl
int
popf
ljmp
xchg
pushf
ja
or
mov
xchg
inc
jg
mov
mov
mov
xchg
ret
in
xor
icebp
add
sahf
lret
ja
or
int3
jbe
sbb
int
inc
in
lcall
div
dec
inc
add
cld
bnd
mov
jnp
frstor
push
fldenv
inc
xchg
or
jnp
sub
aad
popf
xor
xor
out
lahf
fdivrp
sbb
xchg
xor
sub
cltd
jno
iret
inc
std
lret
aad
fnstcw
mov
daa
cmp
jnp
xchg
mov
xor
sub
xor
imul
mov
shrb
xchg
lcall
aad
jecxz
dec
pop
popf
daa
dec
neg
cwtl
stos
mov
or
out
add
xor
pop
cwtl
xchg
arpl
jge
ds
pop
das
mov
push
dec
rcrl
je
mov
add
jle
js
jmp
pushf
dec
add
sbb
sbb
push
mov
pop
je
pushf
pop
imul
pop
adcb
in
dec
jmp
xchg
add
inc
mov
mov
bound
xchg
pop
repnz
mov
add
call
ljmp
or
mov
lock
cltd
pop
hlt
in
adc
dec
jp
arpl
fmull
cmp
ljmp
or
std
pop
mov
or
cli
mov
jo
out
stos
ret
aad
outsl
lock
and
sbb
pop
arpl
shll
jecxz
inc
and
push
adc
into
jp
aas
loopne
testl
add
outsl
pushl
pop
es
movsb
adc
jmp
add
lahf
movsl
mov
inc
push
add
mov
es
cmp
imul
std
pop
jp
inc
mov
add
add
mov
call
cmc
testl
clflush
push
sub
push
unpckhps
pop
fbld
lea
gs
sbb
jle
mov
fisttpl
enter
ficompl
fmul
cmp
fdivrl
push
jp
mov
sbb
loopne
rol
jl
into
stos
hlt
inc
pop
mov
out
pop
and
mov
xor
repnz
fwait
xor
sub
adc
sub
xchg
sub
in
sub
sbb
daa
fldenv
jecxz
pop
adc
in
or
iret
repnz
lahf
mov
sub
cmp
pop
xchg
movsl
cli
dec
push
repnz
loopne
sub
dec
cmp
and
fstpl
inc
fisubl
pop
fdivrs
out
dec
fucomp
xor
fbstp
repz
adc
fbstp
scas
lock
jae
mov
mov
je
cmp
jp
xchg
mov
fwait
jl
rorl
rolb
jl
leave
pop
cmpsl
cmp
xlat
or
in
xcrypt-ctr
cmpsl
pop
fstps
jne
xchg
mov
cmp
fldcw
push
adc
fistl
inc
push
mov
cmp
andb
cmp
sub
out
pop
rorb
aas
mov
and
out
cmp
mov
mov
fcomp
sbb
push
cmp
loop
adc
adc
xchg
mov
rolb
loop
outsb
mov
inc
outsb
push
push
jns
scas
out
ffree
popf
scas
into
enter
xchg
mov
sbb
pop
mov
cmpsl
cmpsb
fistl
sti
addr16
rorl
xchg
adc
cld
mov
in
or
push
std
cli
sub
insb
cmp
sar
push
jae
ljmp
pop
fwait
dec
cmp
notb
outsl
int3
jmp
xchg
push
jp
jb
dec
in
jg
add
insb
ss
ss
cmp
mov
fbstp
mov
outsl
pop
dec
lods
jecxz
cmp
jg
call
push
lahf
sbb
push
sti
sbb
out
dec
std
lret
sbb
shlb
push
pushf
pop
sub
loopne
sbb
xor
sbb
iret
or
xor
stc
mov
daa
xchg
mov
jb
test
das
repz
jle
daa
shll
addb
fwait
xor
jg
stc
mull
push
pop
xchg
cwtl
adc
mov
sti
push
ret
mov
test
xchg
popf
lret
lods
mov
int3
push
icebp
jo
and
clc
test
mov
arpl
stos
sub
popa
shl
or
mov
or
frstor
test
mov
aaa
into
xchg
aaa
stos
lods
push
mov
inc
js
jnp
and
mov
sbb
cmp
pushf
loopne
popf
or
add
bound
add
xlat
inc
and
cs
add
cmp
xchg
aad
xchg
lea
mov
adc
out
bound
lock
and
stos
push
mov
divl
sbb
push
enter
xchg
or
cmpsl
in
jae
lock
int
jmp
les
xchg
test
idiv
arpl
rorb
test
dec
sti
jnp
dec
imul
jne
fstpt
mov
stos
icebp
inc
int
loope
mov
insb
xchg
mov
bound
fs
dec
stos
fwait
mov
fcomps
test
mov
mov
mov
sub
mov
mov
sbb
mov
loope
popf
push
scas
mov
dec
outsb
jle
mov
jg
lret
xor
and
pop
inc
cmp
jecxz
int3
test
lcall
push
pop
lds
pop
and
sbb
imul
inc
pop
mov
and
stos
repnz
fdivr
rclb
lcall
jno
ret
cmc
aad
pop
int3
sub
mov
jl
lea
outsl
testl
into
mov
test
jb
std
stc
daa
out
lcall
pop
pop
aam
dec
fcomi
ret
or
clc
xchg
jmp
ret
fbstp
les
js
addr16
inc
dec
bound
mov
sub
cwtl
movsb
notl
cmp
sub
mov
mov
in
fsubp
sarb
mov
imul
mov
popl
xor
cmc
andl
or
inc
inc
cmc
fs
jp
leave
insl
add
jp
xchg
ret
out
adc
lods
adc
loope
or
test
jecxz
outsb
mov
sbb
call
pop
daa
pop
mov
mov
shrl
ret
into
jle
mov
jns
push
lods
ret
jecxz
cmp
out
sbb
loope
repnz
mov
xchg
fisttpll
sub
lret
mov
pop
push
bound
dec
xor
inc
lods
ss
jmp
or
inc
das
or
xor
icebp
filds
sbb
outsl
frstor
loope
lea
and
jno
jne
outsl
fdiv
scas
arpl
in
ja
loope
cmc
out
imull
adc
cltd
shl
adc
loop
ret
pushf
orl
push
pop
lret
sbb
xchg
mov
push
pop
filds
fistl
lods
cmpxchg
popa
test
dec
push
cwtl
inc
sbb
popf
call
adc
mov
clc
ret
out
aaa
sub
sbb
incl
cltd
pop
hlt
sbb
inc
xor
jae
fstl
mov
mov
out
dec
jg
add
mul
sub
mov
hlt
ret
xchg
std
mov
cltd
dec
mov
mov
popf
loop
push
test
mov
or
sbb
jnp
lods
inc
clc
mov
sahf
test
jecxz
push
sti
test
sbb
dec
cmp
sub
jo
xor
or
loop
ret
xor
dec
insl
fldt
xlat
jne
lret
xchg
dec
rorl
mov
lods
push
insw
in
ss
rolb
aaa
or
leave
jmp
xchg
addr16
mov
lds
jg
dec
push
cmpsl
cwtl
or
aad
out
cltd
in
gs
mov
adc
jp
xor
xchg
setge
xchg
or
pusha
xchg
jne
mov
mov
rcl
rol
dec
mov
add
in
fidivs
shl
scas
jmp
out
inc
in
dec
inc
mov
cmpsl
xlat
fwait
cmp
cmp
adc
push
je
hlt
cmc
aad
mov
daa
jne
pop
popf
addr16
mulb
mov
imul
iret
pop
xor
lds
sarb
andl
hlt
xor
jo
dec
mov
sub
cmp
test
and
sti
push
scas
sbb
or
mov
mov
sbb
mov
fsubs
sbb
pop
inc
mov
clc
inc
iret
loope
cmp
pusha
sbb
xlat
xor
cltd
or
add
cmpsl
fs
data16
je
xor
xor
mov
xchg
dec
adc
ja
imul
dec
data16
mov
xor
outsb
sub
sar
insl
je
jp
std
popf
mov
in
hlt
imul
cmc
add
lcall
sub
enter
push
scas
js
jmp
std
push
das
sti
sub
push
scas
test
fdivrl
fdivl
shr
jl
mov
bnd
adc
ljmp
data16
mov
or
push
mov
sahf
aam
jnp
mov
sub
sub
out
test
dec
ret
imul
mov
lret
push
mov
sarl
cs
shll
cmp
fsincos
xchg
mov
test
push
insl
mov
cwtl
cwtl
call
lcall
stos
adc
cld
lds
clc
cmpsb
popa
pop
call
jle
fstl
jp
push
add
fiaddl
fisttpll
int3
pop
pop
rcrl
xor
ja
jmp
pop
pop
out
jle
mov
scas
jecxz
sub
pop
add
aam
popa
pop
in
pushl
fcomip
enter
cmp
popf
ss
add
push
outsl
out
pop
lcall
mov
pop
fdivrl
fdivrs
stos
mov
sti
insb
xchg
aad
sub
int3
fucomp
inc
and
sub
lods
mov
mov
int3
cli
in
add
daa
shlb
cmpsl
fcom
sub
lds
xor
sub
or
mov
cmc
mov
mov
dec
ljmp
sahf
fcomps
push
test
mov
dec
jecxz
xlat
add
movsl
mov
sbb
fldcw
mov
mov
jecxz
movsl
ja
scas
pop
into
rcll
rcl
pop
into
mov
test
repz
push
cmc
pop
add
adc
sub
popf
xchg
icebp
jnp
das
adc
mov
ljmp
mov
push
arpl
shll
cli
jae
adc
out
loope
jb
out
add
pop
out
add
push
out
xor
leave
dec
ljmp
sub
inc
ja
out
outsl
xchg
sub
pop
dec
test
ja
lods
adc
cmc
outsl
mov
pop
jmp
jbe
scas
xchg
stos
ja
je
repnz
dec
pop
xchg
cmp
push
pop
sahf
cwtl
lret
outsl
push
jae
jbe
dec
adc
movsl
push
daa
or
popa
fbld
xor
mov
sahf
filds
pushf
mul
pusha
mov
mov
xchg
pop
jg
jp
insb
neg
xor
dec
movsl
lcall
sbb
cs
lret
arpl
push
je
and
inc
ss
mov
fistl
movsl
inc
andb
mov
push
sbb
sbb
lea
out
mov
loop
stc
lods
ficomps
mov
adc
outsb
sub
mov
mov
jns
rclb
fnsave
in
aaa
push
stos
sbb
mov
sub
xchg
daa
sarl
mov
je
ret
addr16
jbe
adc
pop
jmp
lock
fists
icebp
in
btrl
movsb
pop
inc
orl
enter
es
jo
jge
adc
in
or
dec
add
jg
imul
loopne
inc
fs
cli
in
loope
or
stc
jle
jecxz
cmpsb
push
shll
adc
adc
sbbb
push
jbe
mov
or
xor
in
fisubs
xchg
mov
push
fmuls
add
dec
mov
sarl
adc
push
cmp
mov
sbb
stos
fistl
xchg
loop
enter
xor
je
subl
push
icebp
cmp
adc
les
stos
jecxz
out
inc
pushf
fwait
shlb
rcr
cmpsb
ds
insb
sbb
pop
lret
ja
xchg
dec
sub
fidivrs
sti
push
cltd
stc
ljmp
adc
incb
daa
sub
into
jecxz
pop
pop
mov
adc
daa
mov
movsl
iret
xor
fisttps
push
push
cmc
dec
test
enter
and
mov
sub
les
adc
popf
mov
rorb
add
out
xchg
mov
ret
and
inc
sub
add
push
out
sub
andb
mov
popf
popa
xor
and
jmp
repnz
xchg
and
loop
sti
dec
les
mov
mov
out
jmp
push
or
mov
aad
push
mov
push
dec
mov
push
shll
test
dec
xchg
lds
and
int
sub
mov
leave
fisubs
shrb
lret
fmul
shll
mov
pushf
mov
mov
into
punpckhdq
sbb
movsb
ljmp
mov
pop
xor
outsl
xchg
daa
mov
loope
sar
dec
test
adc
dec
popl
movsl
xchg
adc
arpl
imul
addr16
xchg
xlat
xchg
jb
jmp
sub
push
pop
sub
jmp
rclb
adc
cmpsb
xchg
cmp
add
xchg
dec
add
mov
fnstenv
fimuls
dec
rol
arpl
scas
lahf
jg
xor
push
scas
dec
mov
les
roll
std
out
aad
pop
movsb
pop
or
fdivrl
or
dec
pushf
sub
dec
adc
negb
shlb
jmp
cmp
inc
jg
les
and
cmpl
das
cmp
call
push
pop
push
push
shlb
mov
cltd
inc
mov
stos
rorb
icebp
cwtl
inc
aas
je
cmp
das
cmc
push
sarl
add
mov
lods
inc
sub
imul
or
test
pop
sbb
mov
popa
stc
out
mov
lock
mov
or
sbbb
out
data16
adc
jg
jno
adc
cs
sarb
pop
fnstenv
sub
adc
fmul
xchg
mov
pop
pop
mov
xchg
pop
mov
push
cltd
sarl
ja
je
mov
cli
mov
loop
out
andb
scas
or
mov
test
pop
pop
ja
sbb
pop
pop
fs
xchg
xchg
sub
pop
push
lcall
or
negb
fcompl
popa
andl
shrb
mov
xor
or
les
ljmp
xchg
xchg
cmpsb
jmp
loopne
cmpsb
in
xor
je
movsl
fbstp
or
lock
pop
jnp
arpl
out
mov
inc
lods
int3
ja
int
fistpll
add
scas
imul
test
mov
in
adc
jo
jbe
sar
imul
pop
push
jecxz
lahf
repnz
fcomi
sub
cmc
stc
cwtl
insb
fdivrs
in
xchg
gs
sub
mov
dec
andl
mov
lds
xor
imul
fisttps
adc
gs
mov
jecxz
dec
leave
outsb
add
sub
dec
out
xor
mov
hlt
bound
faddl
inc
aas
lcall
mov
sub
pop
mov
fstpl
in
pop
lock
daa
mov
push
insb
jo
sahf
incl
sahf
sbb
mov
and
ss
jge
xchg
cmp
mov
push
pop
lret
loope
repz
xor
stos
push
adc
int
aam
mov
or
ljmp
daa
outsl
inc
stc
add
clc
negl
ja
cmpsb
jecxz
lods
mov
jne
xchg
fdivrl
aad
mov
or
mov
aaa
pop
mov
add
into
daa
mov
jo
and
stc
scas
lret
mov
je
pop
test
js
push
pop
stos
adc
stos
lahf
add
outsl
push
int
in
jg
jl
lock
lods
or
sar
movsb
adc
jp
std
xor
mov
lods
push
inc
mov
mov
xorl
data16
mov
fstps
jno
mov
enter
out
jle,pn
mov
movsb
cmp
or
push
cmpl
icebp
out
in
xor
inc
popa
xchg
mov
into
ljmp
aam
int3
fmuls
call
push
jmp
sbb
push
aaa
cmp
mov
sub
lret
mov
cmc
inc
push
jno
lods
fildl
aam
jecxz
inc
loope
push
xlat
or
cmpsb
fsubrp
jne
fsubp
fistps
jmp
inc
cmp
sbb
mov
and
jge
lret
shl
xor
mov
clc
cs
mov
mov
rcrl
jae
leave
pop
popf
push
cmp
sub
lret
dec
repnz
je
mov
xlat
mov
scas
push
loope
cmp
sub
or
xor
adc
adc
repnz
in
dec
mov
int3
ds
leave
mov
mov
enter
xchg
jnp
xchg
pop
iret
ja
je
mov
mov
std
repz
lcall
jbe
or
daa
sti
inc
push
loopne
xchg
xor
mov
pop
push
mov
jecxz
xor
fbstp
out
out
leave
outsb
repnz
addb
sub
jg
jge
pop
mov
adc
ficoml
in
lds
mov
mov
mov
mov
mov
jl
lods
or
adc
mov
adc
jmp
mov
xor
jbe
stos
test
mov
fsubrp
rol
mov
mov
mov
shl
dec
add
repnz
xchg
mov
lret
sub
dec
sub
mov
fsubs
inc
loopne
ficoml
cmpsl
nop
mov
in
test
test
testb
mov
movsl
mov
adc
insl
mov
pop
aam
or
sarb
fimuls
outsb
arpl
outsl
stos
or
xor
fmull
movl
add
repz
xor
stos
xchg
int3
test
ljmp
mov
jg
std
push
gs
shlb
into
std
mov
out
mull
ror
ja
sahf
lods
xor
test
into
test
loope
clc
jp
pop
ja
sti
data16
imul
fdivl
sbb
clc
pop
icebp
jmp
addr16
mov
arpl
mov
xor
dec
mov
scas
jmp
push
mov
sbb
mov
pop
daa
imul
ja
mov
sbb
pop
mov
pop
fidivrs
jno
and
test
shll
mov
ss
test
int
mov
or
fldcw
aad
and
outsb
inc
jecxz
daa
out
nop
fwait
call
push
pop
and
les
les
ds
int3
popf
dec
cmpsl
jmp
fisttpl
sbb
mov
push
dec
sbb
mov
push
xor
loopne
sbb
inc
mov
or
pop
dec
add
stos
jp
xchg
push
sub
or
in
push
mov
sub
loop
push
sbb
xchg
or
lds
ret
jb
or
shlb
dec
mov
cmc
mov
or
ja
or
xchg
inc
cmp
inc
test
shl
sbb
das
sbb
or
mov
xchg
and
xor
add
imul
jmp
push
cmpsl
or
adc
imul
mov
mov
rorl
std
rcl
fsts
lahf
inc
ret
mov
mov
jp
lcall
fsts
rolb
movsl
imul
inc
push
xchg
fucom
rcrl
aas
pop
scas
lods
dec
dec
test
dec
sub
mov
add
ret
ret
pop
or
insl
jnp
pop
mov
pcmpgtd
les
loop
lock
sbb
cmpsl
stos
enter
nop
in
movsl
aam
daa
rorl
push
pop
into
xor
call
lods
push
cmp
out
mov
enter
or
mov
pushf
pop
filds
push
fnstcw
push
mov
imul
enter
std
mov
data16
idivb
cs
mov
pop
ret
pop
repnz
divl
mov
jo
lret
xchg
cmc
loopne
dec
dec
push
xchg
adc
call
test
sbb
add
imul
cltd
ljmp
popa
inc
xor
call
outsb
call
fwait
decl
xor
dec
push
in
lret
xor
mov
xchg
test
sub
xor
add
sub
ret
jecxz
cmp
mov
lods
sahf
adc
ret
scas
fsubs
out
mov
add
cmpsl
or
lret
cmpb
inc
test
xchg
jns
iret
mov
add
lret
fisttpll
aas
test
daa
popa
or
xchg
or
cmp
cli
fistpll
not
loope
jecxz
aas
daa
cmp
add
fldcw
mull
or
sub
clc
mov
out
inc
xlat
adc
sbb
fdivs
cmp
mov
inc
mov
repnz
dec
jle
jmp
cli
cs
iret
lret
andb
fdivs
fdivl
jmp
popa
std
popa
loop
fidivs
add
daa
stos
pusha
xor
and
sbb
xchg
gs
add
sbb
aas
outsl
movsl
mov
add
pop
int
jmp
xchg
add
and
repz
and
or
pop
loope
jno
cmp
or
mov
jns
mov
sub
or
sahf
jb
ljmp
shll
pop
iret
loop
mov
push
in
stos
dec
dec
jmp
xor
loop
fimuls
mov
jp
lret
xor
test
shrb
into
push
stos
fwait
pop
leave
aad
aad
lods
lahf
mov
leave
das
mov
imul
out
subl
leave
lds
sub
and
adc
fistpl
repnz
jmp
mov
jecxz
fs
arpl
sub
fsubrs
daa
sarb
sub
cmp
add
gs
arpl
push
jno
decl
mov
mov
add
shll
stos
pusha
imul
pop
jg
shlb
out
int3
in
adc
push
xchg
adc
sub
pop
dec
inc
sahf
push
shll
jb
mov
jge
loope
lods
or
faddl
shll
fstp
dec
rcrb
in
xor
scas
ljmp
imul
imul
or
xchg
mov
subl
test
shl
inc
into
adc
adc
push
add
andb
int3
sub
shll
or
lock
stc
fucomi
iret
jmp
in
or
aam
and
lret
lds
jecxz
movsl
cmc
out
out
jmp
pop
mov
push
pop
into
mov
cmp
fisubrl
xor
mov
into
inc
inc
lret
push
sub
out
or
lea
add
ds
mov
mov
adc
out
xchg
jmp
in
mov
scas
aas
or
fbld
sbb
cli
add
mov
mov
arpl
jge
or
movsb
and
jle
out
push
xchg
dec
rcll
add
adc
xor
or
test
mov
pop
enter
xchg
push
mov
mov
out
pushfw
or
xor
pop
inc
lea
in
cmp
shrb
mov
sbb
outsb
inc
imul
mov
loope
pop
sub
nop
fstpt
dec
mov
lret
jns
lret
ds
out
mov
insl
or
les
cmp
dec
mov
inc
stos
and
mov
xlat
ljmp
pop
push
pop
lret
loop
cmp
in
jmp
cld
adc
in
ds
lds
xchg
or
add
sar
push
pop
aad
add
adcb
cmc
mov
popf
inc
into
add
push
xchg
adc
add
arpl
cwtl
pushf
ret
mov
mov
jg
std
scas
pop
pushf
out
xor
data16
or
jne
cmp
movsl
cmp
push
loopne
jecxz
out
movsl
jae
or
pop
sbb
sbb
out
push
loop
repnz
nop
dec
int3
bound
xchg
sbb
out
jecxz
and
daa
pusha
int3
mov
imul
xchg
adc
in
pop
mov
mov
inc
dec
push
or
sahf
mov
arpl
mov
addl
fcmovnb
push
shl
data16
jecxz
test
js
pop
jno
sub
or
cmp
jbe
dec
cmp
psraw
jo
ja
subb
sub
insl
dec
out
mov
jle
rclb
cmp
dec
sarl
rclb
in
outsl
push
mov
jge
outsl
jo
jecxz
dec
fildll
or
dec
int
neg
lods
add
call
or
out
mov
or
gs
hlt
adc
out
inc
sti
pop
pcmpgtd
jae
jae
jl
mov
cmp
or
sub
cwtl
fdivl
mov
xlat
iret
jecxz
sub
aam
or
mov
shl
xchg
inc
and
adc
lahf
push
call
test
cmpsl
mov
pusha
jecxz
movsl
lahf
pop
cld
sub
mov
mov
sti
or
lods
arpl
filds
insb
jne
imul
fnsave
jle
inc
shlb
shr
insb
adc
inc
xchg
cmp
push
ljmp
cmc
das
in
cmp
cld
cmp
xchg
pop
in
int
pop
xor
add
mov
xor
repnz
sbb
or
xor
mov
rolb
pop
pop
cli
cmp
in
push
fisubl
pop
dec
dec
into
aam
sarb
gs
pushf
mov
je
sub
jo
xchg
test
cwtl
jne
in
js
push
sub
pop
jge
xor
adc
jno
in
aas
xor
scas
les
mov
icebp
dec
std
adc
std
mov
add
out
cmp
lcall
imul
clc
in
ss
pop
lods
jecxz
inc
inc
popa
scas
push
push
es
mov
jb
mov
pop
pop
inc
imul
mov
lods
jne
push
mov
push
scas
arpl
cli
data16
lds
aad
mov
pop
dec
sbb
in
sbb
pop
cli
inc
mov
or
pop
lcall
mov
cmp
clc
jp
pop
std
inc
frstor
shll
push
xlat
mov
imul
xorb
push
jp
incb
dec
repnz
jno
cmp
cld
sbb
sbb
adc
outsb
cltd
inc
sahf
inc
dec
out
pushw
inc
outsb
dec
dec
pop
inc
mov
shrb
cmp
sahf
call
push
shll
sti
jg
push
adc
jg
insl
cld
dec
cmc
cwtl
fwait
ja
into
jbe
push
and
cmc
inc
lods
cwtl
push
das
mov
scas
and
sub
lods
rcll
std
add
push
dec
hlt
pushf
lcall
test
insb
popf
inc
mov
add
enter
and
lret
nop
and
jge
mov
cmp
cmp
lret
cmp
sbb
in
popf
push
or
add
mov
dec
push
xchg
lock
add
loope
mull
popf
push
or
aas
xor
push
clc
rorb
jns
push
xor
jecxz
xchg
push
jbe
cmpsb
ret
or
jmp
push
test
test
adc
notl
mul
dec
jl
pop
sbb
mov
mov
xchg
push
popf
push
sub
aad
cmp
ljmp
jle
mov
fisttpll
xlat
out
jno
sub
xchg
jmp
nop
insl
and
fs
or
les
sbb
pop
sub
fmuls
pop
mov
or
pushf
shll
xchg
jle
insl
inc
xchg
or
xchg
or
pop
fs
adc
test
jnp
cmp
lret
lret
pop
in
jae
mov
lods
shl
into
out
xchg
add
mov
inc
shl
aad
sub
int3
daa
or
fcomp
sarb
or
mov
movsb
mov
adc
or
push
xor
subl
jecxz
mov
mov
and
jecxz
xor
add
jg
cmp
sbb
movsb
inc
fisttpl
push
jne
jnp
and
sbb
rcrl
scas
insl
loope
cmpsl
cli
lret
call
push
out
insb
inc
inc
repnz
cmpb
call
test
and
clc
dec
popa
mov
jbe
repz
testb
xchg
mov
scas
lock
ljmp
fucomi
or
lods
mov
sarl
sbb
adc
xchg
mov
aam
sbb
cmp
mov
mov
imul
iret
mov
mov
fistl
gs
out
jecxz
ljmp
jecxz
jle
into
mov
in
lahf
mov
movsb
mov
cmpsl
jp
inc
add
jle
cmp
outsb
aaa
sub
xor
pushf
and
lret
inc
mov
sti
push
push
fisttps
cmp
or
push
or
push
lods
fwait
mov
fisttps
xchg
rcrl
mov
mov
es
jo
fists
inc
and
push
pop
outsl
inc
cmp
jle
and
sbbb
ljmp
cltd
outsl
addb
xchg
jns
sbb
push
cmp
mov
xchg
cltd
cmc
daa
lock
cmpb
mov
xchg
mov
mov
loopne
std
dec
enter
sub
dec
ja
push
xchg
out
fistl
jecxz
mov
out
pop
push
mov
xor
mov
cmp
test
movsl
mov
enter
outsl
loop
add
jbe
in
pop
push
outsl
mov
ljmp
push
add
mov
jns
cmp
push
jecxz
in
jb
xor
sub
push
and
mov
pop
out
pop
mov
scas
cmpsb
in
mull
pop
insl
subb
pop
in
in
mov
jecxz
cmp
das
scas
mov
test
xchg
xchg
daa
pushf
pushl
mov
pop
lcall
push
stos
push
sub
cwtl
sub
or
pop
cmpsb
aas
lea
xchg
decl
test
lods
arpl
enter
push
mov
daa
xchg
icebp
push
pop
jno
or
rcll
push
notl
jns
mov
pushf
sub
jmp
fimull
aas
xor
out
icebp
push
out
out
jmp
out
add
push
mov
fcmovnbe
mov
and
fadd
lcall
imul
inc
shr
and
sbbl
xchg
dec
pop
pop
mov
xor
xor
pop
xchg
cmc
aaa
mov
sti
imul
in
xor
inc
push
mull
sub
sbb
and
ret
sti
cmc
xadd
jmp
ficoml
int
pop
gs
push
testl
xchg
add
dec
pop
push
test
adc
cwtl
shrb
mov
adc
cwtl
xor
mov
out
and
push
pusha
fsubl
sar
dec
mov
mov
and
dec
or
mov
testl
jmp
aas
into
lods
test
rcll
cmp
mov
sti
mov
rorl
mov
stos
mov
push
and
enter
mov
or
sub
shll
jp
into
cmp
ja
je
loope
mov
int
scas
sti
mov
mov
mov
mov
movsl
not
lods
jbe
fcompl
and
out
loope
jmp
pop
imul
mov
popf
lret
inc
mov
mulb
mov
xchg
mov
xchg
pop
pop
dec
xor
or
fwait
cmpsb
into
jl
mov
mov
push
jae
les
in
popa
or
lahf
enter
sub
xor
call
subb
inc
or
jne
xor
das
jno
add
fwait
loopne
jmp
add
subl
xchg
in
or
lds
xchg
inc
mov
cmpsb
rcrl
fildl
lahf
insl
fs
or
inc
and
outsl
dec
addb
mov
inc
dec
lret
fstpl
adc
add
outsb
or
or
fcompl
shlb
add
push
jecxz
xchg
or
dec
add
mov
sbb
xor
xchg
or
aam
shll
pop
aam
or
cmp
sahf
in
jb
pop
push
push
push
pop
push
in
and
or
sub
mov
mov
add
xchg
adc
jne
int3
pop
popa
in
cmpsb
rcrb
jmp
clc
jae
sbb
or
inc
jle
sahf
aad
lock
jne
sub
xor
sub
mov
inc
or
aas
les
adcl
das
loope
fs
and
or
fmulp
rcrl
dec
leave
stos
pushf
sub
std
mov
sbb
movsb
mov
pop
call
mov
repnz
pop
mov
jne
mov
mov
cs
mov
fidivrs
jecxz
das
xchg
loopne
jmp
adc
pop
fdivl
lods
filds
movsl
xlat
sub
mov
roll
or
or
call
sahf
punpckhwd
pop
cmp
aaa
clc
out
and
lret
popa
fnstcw
out
test
out
ss
jns
pusha
push
sbb
push
mov
xor
push
fidivrl
in
mov
stos
pop
in
xchg
stos
pushf
inc
test
xchg
in
insl
add
push
jb
jmp
cltd
add
push
fstps
je
cmp
xor
loopne
sub
pop
test
pushf
sbb
xor
ljmp
rclb
mov
fidivrl
xchg
mov
push
fldenv
das
imul
popa
loopne
jbe
frstor
pop
jl
hlt
test
ljmp
ja
xchg
cmpsl
imul
pop
in
call
or
loopne
mov
pop
sub
ret
pop
xlat
sbb
and
xor
loopne
or
mov
and
jle
mov
cltd
sbb
shl
push
cmp
adc
jbe
in
pusha
sti
pusha
mov
jno
push
xchg
cmp
xor
call
test
or
mov
jl
jle
inc
ret
cs
outsl
das
lret
cmp
aam
outsl
sbb
lock
push
leave
or
movsb
mov
ret
mov
imul
rcrb
mov
ret
and
mov
dec
js
test
aas
mov
stos
sub
repnz
push
sub
clc
stos
mov
push
xor
in
addr16
inc
lds
dec
dec
jl
or
or
pop
add
and
pop
mov
push
mov
ficoms
or
addr16
sbb
or
dec
lahf
push
imul
addr16
dec
push
mov
addr16
xchg
not
dec
int
stc
stc
or
clc
inc
iret
pop
cmp
or
pushf
xor
mov
xor
jp
mov
lret
adc
jp
mov
rcr
out
pop
jp
stos
imul
or
mov
ja
xor
jp
inc
popf
push
push
orl
lea
inc
pushf
cli
xchg
jns
mov
inc
or
jmp
mov
xchg
in
sti
mov
add
push
ficomps
fwait
push
mov
int
cmc
mov
stos
loope
clc
cltd
inc
inc
push
adc
scas
loop
es
fimull
das
jns
lcall
push
in
aas
push
clc
cmp
ja
pop
dec
or
mov
xchg
popf
sub
imul
lahf
mov
cmovne
xchg
dec
jmp
loop
adc
lock
notl
xchg
sti
push
scas
add
insl
xchg
adc
outsl
xchg
add
jg
incb
push
or
xchg
ljmp
xlat
sub
inc
aam
arpl
xor
addr16
jbe
push
int
mov
mov
jl
push
push
jecxz
xchg
inc
daa
imul
cmp
lret
insw
out
dec
jns
outsb
fidivrs
data16
jecxz
xor
cmc
ljmp
jecxz
and
les
jbe
lret
pop
aaa
divb
arpl
mov
lcall
jo
xchg
push
mov
sub
fdiv
push
sahf
out
das
push
lea
into
add
scas
inc
sub
in
negl
popf
or
cmp
bound
pop
les
fidivrl
out
leave
cmp
pop
inc
ss
mov
incb
cwtl
or
cld
adc
out
or
mov
xchg
imul
sub
inc
add
jo
adc
repnz
mov
popf
stc
pop
out
ret
or
jle
mov
lret
pop
ds
xor
lcall
hlt
inc
ret
jmp
pop
xchg
bound
decb
insl
sbb
or
call
or
sbb
xor
mov
push
addr16
mov
sub
fildll
loope
xchg
jno
lcall
imul
or
inc
ljmp
mov
add
or
shll
mov
jne
scas
test
cs
pop
xchg
insl
sub
xchg
test
idivb
xor
loop
jmpw
nop
dec
enter
nop
leave
adc
rcr
jno
fidivl
movsl
test
pop
lods
dec
imul
add
fisubs
aad
fcmovbe
in
jmp
test
or
jne
jle
dec
dec
xor
das
xor
fsubp
dec
divl
jg
cmp
jb
fwait
mov
push
pop
ret
ja
jne
pop
roll
dec
xchg
das
mov
and
je
push
in
xor
inc
loopne
in
scas
or
std
xchg
adc
dec
jecxz
sbb
jae
cmp
fildl
outsl
cwtl
pop
movsb
xor
cmp
jge
enter
mov
mov
mov
shl
sti
test
rcl
add
xor
mov
bnd
mov
or
call
clc
and
fs
shl
mov
pop
pushf
xlat
sub
loop
cli
ds
stc
mov
dec
mov
inc
scas
mov
push
xchg
subl
psrlw
and
or
jg
jmp
pop
xchg
add
pop
out
jbe
cmp
xchg
repnz
cmpsb
rcr
leave
xor
cmp
add
jo
sub
incl
adc
inc
aas
add
daa
stos
popa
push
push
inc
cli
dec
scas
in
jge
cmp
xchg
jmp
leave
cmp
mov
stc
push
cs
and
push
xchg
dec
xchg
mov
cli
js
mov
xor
testl
outsl
push
jno
jae
outsl
ja
mov
jg
push
mov
lret
cmp
push
add
cmp
ljmp
xchg
and
imul
cltd
mov
dec
adc
dec
loop
test
repz
or
pop
test
outsb
mov
and
loop
cmp
out
insl
vpcomd
stc
xchg
jle
mov
out
out
inc
mov
sbb
std
scas
adc
push
pop
jg
ss
push
mov
stos
mov
iret
xchg
pushaw
inc
pop
cmpsb
int
ja
cmp
push
popf
popf
cmpsl
lea
jmp
jne
data16
lcall
pop
push
and
cmp
jno
into
mov
sahf
jl
sub
mov
mov
insb
mov
ljmp
insl
lea
fwait
push
stos
enter
ja
ret
add
scas
cmpsb
aaa
xchg
add
sbb
testb
scas
into
cld
pop
mov
sbb
add
dec
das
hlt
paddusw
adc
jno
pushl
add
add
icebp
mov
push
xor
jecxz
rcrb
or
push
outsl
outsl
xor
cmp
sbb
loope
std
dec
aam
ss
rol
scas
inc
mov
cmpsb
imul
dec
inc
cld
aaa
fdivrs
xchg
hlt
xchg
pop
outsb
loope
ds
negb
outsl
and
cli
out
clc
test
ss
or
lret
mov
xor
mov
leave
divb
lock
mov
mov
mov
mov
rcll
jne
jmp
scas
not
daa
inc
mov
ficompl
roll
std
xchg
mov
int
cmpsl
xchg
sub
outsb
dec
sub
in
out
mov
inc
sub
mov
aas
pushf
cld
adc
mov
adc
inc
loope
roll
push
roll
inc
mov
es
cwtl
adc
loop
loop
pop
rorl
shll
pop
push
cs
dec
test
inc
loop
test
xorb
or
les
adc
pop
aas
mov
hlt
mov
sub
cld
mov
arpl
adc
mov
iret
gs
jecxz
gs
in
xchg
jnp
xchg
fucomi
xlat
sbb
int3
ret
xchg
fcompl
add
sbbl
or
es
test
pop
loopew
outsl
adc
imul
xchg
lea
mov
popf
out
scas
shrd
or
xchg
imul
outsl
int3
dec
loopne
loopne
jae
mov
ds
mov
das
mov
outsb
outsl
jmp
mov
icebp
jle
aas
imul
imul
stos
iret
xchg
lds
mov
fnsave
mov
aad
sub
jb
and
ljmp
push
test
repz
stos
adc
ljmp
movsl
xlat
cmc
and
out
xchg
jecxz
xor
outsl
iret
jge
addr16
fwait
stos
ds
pop
mov
push
mov
mov
and
enter
mov
push
fxch
push
adc
js
xchg
jo
sub
fidivl
insl
mov
mov
cmp
fwait
dec
dec
test
sahf
into
pop
adc
lds
mov
inc
and
ret
stos
mov
dec
ja
sbb
outsl
or
cld
adc
popf
shll
dec
lret
adc
or
bound
pop
scas
shlb
loope
sahf
cmpl
std
lret
add
stos
mov
cltd
xor
cmc
jns
leave
sbb
mov
mov
lods
xchg
mov
and
push
push
jae
jmp
ucomiss
dec
loop
fimuls
jmp
scas
add
out
outsl
std
pushf
push
clc
incl
ds
push
in
pop
and
or
ret
test
insl
adc
pusha
popa
adc
loopne
inc
das
mov
push
sti
fwait
imulb
mov
cmp
sbb
mov
lret
fwait
and
ds
fldt
rorb
and
mov
rorl
sub
sbb
jmp
jg
jb
jecxz
xor
cmc
mov
hlt
pop
adc
pop
cmp
cs
xor
and
xchg
jae
sub
mov
in
pushf
mov
and
lods
dec
mov
push
pop
in
adc
mov
testl
adc
sahf
dec
aas
aam
jne
fld
in
jmp
outsl
negl
lcall
imul
jle
fmuls
testl
pop
or
in
ljmp
rcrl
lret
sub
andb
push
scas
dec
out
js
testl
jb
sbb
je
cltd
sbb
imul
insb
lret
push
mov
cld
shrb
push
stos
fsqrt
les
daa
mov
shl
or
sarl
add
sub
and
jecxz
or
inc
pop
into
xlat
xor
fs
or
bound
out
in
outsb
shr
jb
insl
cs
jmp
inc
ljmp
or
es
je
jne
out
fbld
popf
call
stos
pop
lock
stos
jecxz
adc
sbb
out
add
cli
outsl
and
adc
and
xor
jne
outsl
pop
mov
xor
push
es
mov
or
movsb
dec
push
push
aaa
inc
sub
lcall
fisubl
adc
pop
cmp
jmp
imul
pop
stos
pusha
mov
mov
je
in
subl
btc
test
sub
sub
xchg
mov
ljmp
rclb
mov
fsubrl
bound
test
sahf
mov
test
les
lds
inc
cmp
mov
imul
cmp
add
jns
or
mov
mov
in
in
pop
loopne
sbb
pop
sbb
flds
mov
shrl
pop
lret
test
xchg
aaa
add
add
fistps
jno
pop
sahf
add
mov
jecxz
sub
lcall
lea
aaa
pop
adc
ss
jge
cmc
mov
xor
sub
xor
ficoml
push
pop
inc
loopne
lea
mov
xor
test
gs
shll
ds
aaa
sbb
ljmp
mov
jno
test
mov
sarl
xchg
jge
mov
and
xchg
fwait
jle
gs
mov
jne
aam
fildll
add
mov
add
xor
mov
movsb
int3
or
loopne
in
pop
lret
in
jmp
dec
push
into
push
in
pop
sbb
arpl
call
xor
xor
xor
dec
sub
into
mov
mov
cmp
arpl
icebp
out
mov
add
aas
mov
test
aas
inc
sub
sti
push
and
idivb
aas
bound
push
pushf
lcall
stos
lods
mov
jle
test
sub
xchg
dec
mov
loope
cmpsl
mov
les
add
mov
pop
les
imul
insl
or
scas
rcrl
push
or
les
jb
cs
aam
cmc
mov
inc
push
shlb
xor
dec
popa
scas
jge
popf
mov
daa
or
mov
jns
pusha
xchg
sbb
add
bnd
add
xchg
stos
and
xorb
pop
scas
sbb
jns
insb
jno
int3
dec
lcall
pop
ja
insb
subl
dec
add
rcrl
shrl
jecxz
dec
push
dec
push
adc
mov
std
in
jecxz
fwait
jle
push
mov
mov
add
or
sub
fs
ror
pop
scas
cmpsb
jb
mov
dec
pushf
icebp
shlb
jb
repnz
push
loope
xchg
loope
leave
lock
lret
iret
stos
jg
je
xchg
mov
scas
test
icebp
sahf
stc
mov
adc
inc
and
popf
pusha
imul
sub
push
iret
das
add
in
test
mov
adc
lods
dec
out
jmp
xchg
add
icebp
ret
or
mov
fsub
pop
test
fildll
in
in
outsb
stos
jmp
inc
stc
mov
addr16
dec
jmp
adc
push
ljmp
dec
leave
roll
xchg
jecxz
js
shrl
mov
cmp
cltd
mov
in
jae
lods
mov
push
adc
ljmp
jo
or
lock
push
jne
jns
fbstp
sub
ljmp
push
jle
mov
insl
int
popf
adc
in
mov
jecxz
push
stc
mov
dec
add
jae
fninit
inc
decb
lret
mov
std
ficompl
cmpsb
mov
leave
ss
jne
push
sahf
inc
leave
icebp
shl
iret
lods
sbb
out
cs
outsb
fisttpl
cmp
cmpsl
insb
xchg
dec
and
dec
mov
dec
jno
in
std
insl
das
lock
jmp
mov
outsb
jbe
jne
aas
dec
rcrl
or
gs
and
cmpsl
add
out
sub
lret
jo
fdivs
mov
rorl
call
lcall
dec
sbb
push
dec
adc
dec
pshufw
ljmp
sar
inc
into
loope
out
adc
inc
leave
sbb
out
fidivrl
cmc
pop
cmp
or
mov
pop
or
sbb
and
add
push
or
ds
aas
cli
jle
jmp
and
xchg
std
jge
fmull
int3
call
mov
push
scas
test
fisttps
popa
lds
hlt
imul
movsl
xchg
dec
sbb
arpl
xchg
lds
dec
nop
fiadds
mov
test
and
or
push
pop
test
mov
int3
and
call
mov
inc
sub
out
jno
rolb
pop
jbe
rorl
cmp
dec
ret
mov
mov
add
push
lods
mov
cli
insb
cli
add
lahf
xchg
jge
mov
test
sub
xchg
bound
jno
mov
xchg
push
sbb
or
pop
lret
jecxz
and
mov
sub
sti
push
in
mov
lock
cmc
shrb
call
gs
fmulp
add
cmpsl
cmpsl
push
add
xlat
xchg
jo
repz
movsb
jle
call
lods
mov
pushf
outsb
rcr
out
xchg
fistps
scas
fwait
or
daa
popf
ja
rorl
aaa
imul
mov
gs
jb
lea
sub
or
jae
jl
or
jo
mov
in
aas
cs
cmp
jae
fimuls
sub
and
clc
addl
ljmp
jg
mov
mov
pop
insl
int3
xchg
push
jns
or
movsl
pop
mov
aaa
in
lods
push
das
pop
jns
adc
test
cmp
in
jg
mov
add
test
jmp
mov
int3
jle
pop
sub
push
test
mov
jnp
scas
mov
insl
pop
jge
and
bound
ljmp
ret
push
mov
loope
loop
scas
imul
lcall
in
out
cmp
test
adc
xor
roll
push
sbb
sub
iret
stos
add
inc
jl
pop
fldenv
sahf
test
pop
imul
mov
mov
and
aam
in
lods
test
mov
rcr
data16
nop
mov
adc
sub
or
clc
push
add
xchg
jecxz
outsb
push
push
xchg
add
rclb
jne
jo
imul
jg
mov
sti
ja
scas
test
ret
out
scas
dec
mov
roll
add
pop
fcmove
jge
loopne
aas
dec
subl
mov
xlat
loopne
push
das
jno
pusha
test
push
repnz
ds
mov
jmp
pop
imul
jp
loopne
sub
or
lret
or
cmp
cmp
mov
pusha
mov
pop
jo
data16
cvttps2pi
adc
add
stos
mov
mov
or
or
mov
push
shlb
add
imul
adc
push
fildl
fildll
xor
adc
fildll
push
mov
out
test
add
sub
stos
jns
jge
lds
jl
leave
and
aam
ja
cmp
cmp
jo
lods
cmp
dec
inc
andl
ret
cmp
andl
ljmp
push
fcmovb
aam
mov
xchg
bound
call
fwait
push
jg
fwait
mov
movsb
vcvttps2dq
push
xchg
lret
cmp
std
iret
or
pusha
push
adc
imul
sbb
movsb
loopw
clc
rcll
or
icebp
scas
mov
iret
mov
mov
insb
lret
push
and
xor
jl
jmp
loope
or
jecxz
add
stc
ficomps
jbe
rdtsc
stos
shll
lahf
xchg
sbb
clc
stos
push
incl
enter
or
jecxz
testl
mov
scas
push
gs
inc
sub
cmpsb
enter
aas
adc
mov
clc
push
sbb
push
adc
and
inc
aas
aas
xchg
or
sub
movsl
and
imul
adc
fisubl
arpl
xorb
stc
out
jae
cltd
jbe
jnp,pt
push
icebp
pop
pop
xlat
int3
pop
scas
xchg
flds
fadds
aaa
xchg
adc
idivl
mov
test
add
push
and
mul
cmc
leave
leave
xlat
les
enter
pop
movsl
je
or
add
ljmp
call
fstps
test
fimuls
movsl
dec
xchg
not
push
mov
loope
pop
bound
cmp
popa
cld
mov
pop
or
mov
jb
inc
adc
popa
jbe
adc
shll
mov
push
aaa
nop
mov
mov
les
mov
iret
mov
cmpsb
push
cmc
test
pop
jl
daa
test
cmc
push
and
xchg
inc
out
stos
mov
sub
inc
push
ljmp
inc
mov
cmp
shlb
addb
sbb
xchg
inc
push
stos
cmp
cld
lahf
cmp
notb
sub
add
dec
mov
add
cmp
add
rcrb
imul
leave
xchg
out
push
mov
add
outsb
fs
add
jns
sub
mov
push
inc
jns
clc
scas
in
idivl
scas
aas
es
ja
pop
or
loope
mov
inc
into
cld
or
in
int3
sbb
push
lds
xchg
lds
dec
das
jg
cmp
dec
push
jcxz
jl
clc
shlb
out
dec
mov
or
cwtl
iret
shlb
and
push
or
sbbb
in
lret
mov
cmp
mov
mov
loop
jge
add
out
out
outsl
mov
nop
dec
fldt
ss
push
xor
sub
xlat
xchg
or
jmp
push
lods
xchg
xchg
mov
cs
shl
jne
sti
insb
jecxz
imul
iret
scas
dec
sar
shrb
daa
cmpsl
je
clc
cs
inc
xchg
leave
rolb
shl
movsl
pushf
cli
lea
inc
repnz
iret
jecxz
imul
mov
and
outsb
jp
shll
popa
ss
xor
push
daa
ja
add
hlt
bound
sub
push
loope
fisubl
das
or
sbb
dec
insb
sbb
testl
jb
imul
pop
test
dec
or
cld
roll
and
loope
mov
out
fwait
in
outsl
sub
mov
push
sub
outsb
nop
imul
xlat
leave
int3
repnz
or
test
bound
sub
scas
add
scas
mov
pusha
clc
pop
or
mov
dec
loop
sub
js
loop
mov
dec
mov
sub
fisttpl
add
sub
lret
mov
pop
in
pop
aas
popa
or
mov
das
xchg
xchg
movsb
int
into
inc
push
push
mov
jnp
lea
imul
cmp
mov
nop
pop
ret
mov
fstps
push
jae
popf
jmp
pop
lock
test
icebp
vpcmpgtb
xor
xchg
ret
fistps
into
out
jmp
fnsave
loopne
fs
mov
dec
push
outsl
popf
and
pop
shlb
stc
push
push
dec
dec
cs
pop
scas
push
mov
sub
and
jno
add
jle
ret
daa
sbb
jg
cltd
jmp
scas
and
data16
fsts
out
loope
cmpsl
sbb
in
mov
addl
in
jns
das
and
mov
jb
or
mov
jno
jae
icebp
and
jmp
loop
cmc
mov
mov
ror
or
and
enter
bound
mov
dec
pop
jo
fwait
jns
xchg
cmc
push
addr16
call
jmp
pop
push
shlb
lcall
imulb
or
scas
cmp
out
cltd
out
out
or
mov
sub
stos
loope
outsb
lret
iret
or
fsubrs
fstps
mov
sbbb
pop
js
test
jne
in
ffreep
mov
inc
addr16
iret
xor
jb
xor
out
ficoml
loopne
bound
lods
xchg
jmp
inc
cs
aas
or
jl
dec
xchg
xchg
in
xor
gs
sbbl
jg
fadd
xor
xchg
inc
mov
shr
or
xor
lods
icebp
aad
mov
jmp
mov
test
cld
out
jg,pt
pop
push
fisttps
push
cmp
mov
and
insl
and
push
rcr
fists
mov
adc
call
loopne
fnstsw
loop
aam
sub
xor
in
push
xchg
or
push
xchg
jnp
mov
mov
test
and
gs
pushf
mov
out
dec
push
push
stos
fs
or
push
jns
iret
push
jns
cmp
xor
jecxz
fidivs
ljmp
adc
add
pop
cmc
stos
mov
jmp
outsl
jge
popa
decl
mov
cwtl
lret
or
ja
int3
andb
lcall
inc
sub
and
dec
or
pushf
fcoms
or
ret
mov
insl
or
xchg
int
push
divb
mov
and
outsl
inc
les
stos
mov
mov
insl
out
in
mov
clc
push
add
mov
loope
cmc
shl
sub
idivl
scas
scas
jecxz
pop
clc
mov
xor
lods
xor
cmpsb
pop
enter
mov
dec
scas
xchg
stc
pop
icebp
mov
mov
mov
mov
pop
mov
stos
test
pop
jecxz
dec
adc
test
push
popa
jae
sbb
in
test
cs
insl
jp
insl
fst
cli
pop
orb
and
or
les
or
ljmp
mov
shlb
push
neg
or
pusha
add
int
mov
pop
pop
je
scas
and
and
clc
sbb
pop
inc
or
movsl
dec
push
xor
push
das
shrl
pop
out
call
pop
out
test
add
fildll
movsl
js
outsb
xchg
sub
sahf
pop
fwait
pushf
cmp
out
lahf
test
push
subb
jbe
ss
mov
pushf
lahf
xchg
add
sti
sbb
xor
xor
jg
jae
ljmp
ljmp
xor
sub
pop
sbb
sbb
jae
mov
hlt
loop
xchg
mov
push
ret
out
hlt
fsubp
popa
sti
jg
pusha
sahf
mov
push
in
rcrl
mov
pop
mov
push
fisttpl
mov
gs
out
jo
sarb
mov
xchg
cmp
mov
sahf
addr16
or
in
add
mov
nop
cmp
mov
pop
cmp
das
or
fists
jne
mov
sbb
and
ret
insb
mov
les
jg
leave
fisttpll
call
je
popf
lcall
daa
mov
inc
adc
push
ret
sbb
dec
sub
cmp
bound
pop
in
mov
mov
outsl
mov
xor
sub
jg
or
mov
imul
dec
out
out
xor
xchg
sub
mov
mov
movsb
mov
or
push
jnp
ljmp
push
fucom
mov
loop
mov
lock
jmp
jo
aad
xchg
sbb
push
loope
add
fildll
divb
jge
mov
adc
rcll
jb
scas
testl
pop
xor
cmc
test
pop
mov
mov
sbb
pop
sbb
call
les
imul
ret
lods
int3
dec
mov
shlb
lahf
or
jbe
xchg
jge
cmp
xorl
lret
or
paddq
push
add
xchg
stos
sti
inc
aad
sbb
inc
test
adc
int3
scas
xchg
or
add
inc
insb
subb
or
int3
btr
int
scas
push
test
into
cmp
je
pop
nop
jo
lock
add
and
mov
iret
popf
jecxz
jg
inc
cs
fistpll
xchg
push
pop
dec
push
mov
jecxz
pushf
sbb
cmp
rolb
loope
pop
or
lahf
cmp
fdiv
jb
call
xlat
dec
int3
adc
out
add
cltd
out
sbb
adc
test
pop
or
xchg
enter
jmp
ficoms
cmp
sbb
lret
add
xor
xchg
jb
dec
mov
or
das
xor
test
mov
mov
pop
xacquire
aad
add
insb
call
sbb
dec
clc
mov
call
pop
jae
data16
cmp
or
or
sahf
mov
inc
ret
dec
cmpsb
pop
pop
and
jo
mov
stos
sub
adcb
test
ss
sti
mov
pop
ja
scas
shlb
rclb
lods
mov
stc
jae
in
and
cs
push
sbb
repz
push
adc
push
arpl
inc
leave
sbb
in
xor
xor
inc
mov
dec
mov
cmpsb
dec
fldt
dec
sbb
outsb
das
adc
call
loopne
xorb
es
adc
loope
enter
or
fimull
fcom
jae
jb
or
scas
test
rolb
ljmp
push
negl
mov
std
mov
jo
test
icebp
jle
inc
sub
fstl
adc
ret
mov
xor
push
cmpsb
aas
movsb
clc
pop
lret
push
jbe
push
jbe
sahf
and
jbe
xchg
and
std
das
mov
jg
sbb
cmpb
in
lods
lret
or
sahf
jno
adc
push
clc
push
jmp
fldcw
mov
ss
outsl
inc
push
mov
mov
fwait
inc
inc
stos
notl
aad
imulb
pop
pop
fcmove
pushf
add
sarb
idivb
orb
int
xchg
or
lcallw
push
xor
or
xchg
shlb
jbe
imul
pop
fisubrs
mov
or
pop
not
sti
mov
rcr
mov
imul
mov
adc
mov
divl
mov
iret
mov
popf
testb
pushf
lret
ljmp
in
mov
xor
inc
inc
mov
push
pop
js
jb
orl
repnz
in
jo
repnz
xchg
inc
sbb
mov
inc
sbb
gs
orb
xor
adc
stos
or
test
adc
sar
popl
xor
cmp
lret
xor
adc
mov
and
dec
es
mov
cmp
jle
inc
or
mov
lds
popf
add
jecxz
outsl
add
ret
jmp
int
arpl
imul
das
shrb
std
mov
out
fbstp
test
jg
call
jns
dec
in
pushf
dec
or
frstors
cmp
push
shl
shlb
jmp
mov
ret
mov
rol
popl
cmp
jno
leave
ja
into
jl
cmp
or
mov
loop
daa
push
clc
into
out
shll
divb
cs
adc
aad
add
xchg
out
orl
notl
sbb
mov
jmp
ljmp
mov
ss
inc
inc
mov
adc
iret
pop
push
mov
in
insw
inc
clc
test
jg
mov
or
icebp
imul
insl
shl
jno
icebp
push
sub
add
jecxz
push
mov
jbe
and
lcall
mov
and
xor
repnz
and
out
sbb
push
xchg
out
mov
jmp
popf
aam
les
test
inc
or
jmp
add
imul
nop
aas
add
mov
mov
es
sahf
add
stos
call
pop
jno
or
mov
push
mov
mov
jbe
jle
add
and
fnstcw
jle
pop
inc
int
and
pop
sub
cld
jecxz
faddp
ds
sub
pop
jmp
jge
paddsw
mov
xchg
mul
dec
in
adc
aam
adc
inc
xchg
iret
push
xchg
outsl
xchg
mov
dec
pop
lretw
adc
lods
imul
jmp
imul
imul
fmul
push
scas
fistps
ret
decl
roll
repz
xchg
jmp
xchg
mov
cmp
insl
cltd
call
out
outsb
cwtl
inc
scas
sti
lods
out
jae
ret
movsw
xor
mov
rcrb
inc
test
jb
jne
div
movsl
xchg
call
mov
cmp
adc
or
cwtl
clc
in
aam
lods
pushf
leave
mov
out
inc
enter
xor
dec
cmpsl
xchg
shlb
mov
mov
inc
dec
fbstp
mov
mov
out
jo
cmp
or
or
aam
cmp
in
and
sti
stos
push
outsl
das
stos
inc
xchg
mov
enter
jb
ljmp
sub
dec
sarl
or
and
inc
push
xchg
fadds
add
mov
push
cwtl
adc
pushf
inc
or
push
jecxz
jae
jecxz
fidivrs
jmp
cmp
out
data16
mov
add
add
pushf
fucomi
mov
call
pop
leave
mov
popf
sub
or
test
cwtl
rcll
cltd
lea
or
mov
push
or
mov
out
int
ljmp
push
into
jle
cs
push
and
xchg
bound
out
jmp
hlt
cmpsl
mov
data16
imul
mov
call
fnstcw
jne
into
not
push
shrb
or
jge
popf
movsb
mov
and
adc
in
lock
or
xorb
xor
clc
pop
stos
stos
jecxz
sub
adc
push
test
adc
test
popa
clc
xchg
mov
dec
das
adc
pop
popf
dec
pop
lcall
jno
dec
imul
and
pop
ja
inc
call
lcall
cmp
pushf
push
mov
mov
aam
inc
dec
mov
mov
call
loopne
inc
xchg
mov
loop
fildl
clc
xlat
inc
pop
jnp
stos
loop
fistps
shll
orb
mov
in
sbb
enter
mov
jmp
shr
scas
mov
sub
mov
cmp
cmp
pusha
mov
mov
push
inc
lock
sub
sahf
fcmovnb
lods
pop
xchg
push
mov
inc
adc
popf
mov
lret
or
sbb
imul
data16
and
cld
sahf
sub
or
push
or
adc
shlb
inc
and
xchg
add
fst
pop
popf
test
vprotw
movb
insw
mov
push
xor
fcoml
clc
push
adc
sahf
sbb
out
fsubl
fisubrl
loope
adc
cli
dec
xchg
ret
in
testb
xor
or
mov
pusha
gs
inc
fwait
jb
aas
adc
mov
mov
in
mov
jmp
push
out
mov
jmp
add
out
xchg
fisubrs
push
out
add
jno
outsb
cmc
out
in
pusha
fwait
pushf
mov
adc
cmpsb
and
fisttpll
xor
and
hlt
outsl
stos
lds
and
testl
push
push
inc
loop
test
sub
sti
fisubrs
sti
dec
jns
mov
out
arpl
sti
cmp
lret
sarb
ja
push
mov
jg
cmp
test
jo
imul
popf
mov
shlb
iret
lcall
jae
mov
xlat
jmp
and
sbb
les
and
imul
incl
add
mov
dec
jo
ds
outsl
incl
xlat
incl
nop
mov
clc
sbb
jge
sub
add
iret
sti
mov
shlb
pop
lret
cmp
dec
aam
jo
popa
sub
xor
lcall
rolb
mov
pop
inc
cld
xor
leave
push
xchg
cltd
in
mov
dec
jecxz
imul
insl
sub
sub
or
push
sub
pushf
xchg
popf
push
dec
sub
jg
lret
push
xor
aaa
sub
mov
mov
orb
and
xor
icebp
mov
or
add
jo
imul
jecxz
jne
aam
jno
outsb
lret
xor
jno
xchg
mov
jb
adc
lods
sbb
sub
lods
push
adc
rolb
adc
or
jb
cmc
ljmp
jno
getsec
jmp
test
lock
ja
inc
jle
scas
scas
or
pop
add
test
inc
sbb
frstor
add
jmp
jge
iret
mov
dec
enter
or
push
clc
int
xlat
xchg
xor
jo
aam
ja
and
insl
jns
test
push
icebp
data16
cmp
loop
int3
bound
std
pop
scas
jecxz
fs
rclb
sbb
push
inc
jecxz
sti
and
out
in
imul
outsl
fistpll
or
or
ficomps
xor
scas
repnz
mov
adc
outsb
loope
add
ret
jae
gs
jb
xchg
cs
xchg
mov
cs
std
pop
aam
lea
mov
dec
outsl
sahf
and
imul
mov
jnp
xor
push
inc
lea
dec
sbb
xor
inc
adc
mov
loopne
lahf
ret
push
pusha
push
adc
fidivrs
fisttpl
adc
in
jp
repnz
jle
or
and
sbb
mov
xchg
mov
and
pusha
mov
mov
data16
or
pop
mov
xchg
jge
clc
mov
sbb
jnp
xchg
pop
push
dec
ljmp
rorb
xchg
mov
mov
cli
jnp
scas
jno
imul
xor
test
adc
imul
xorb
jge
scas
dec
shlb
xor
popa
xlat
pop
imul
movsb
int3
aas
mov
mov
jl
divl
sbb
push
orl
in
jg
aad
mov
push
fnstcw
icebp
movsl
pushf
cmp
out
push
mov
sbb
je
cmc
dec
stos
ret
jg
mov
ds
addb
test
sahf
lds
imulb
inc
lods
mov
mov
ja
adc
int
mov
js
test
cmpb
cli
jns
test
leave
xor
jg
outsl
enter
adc
sub
push
mov
cmp
outsl
adc
jnp
sarb
sbb
jns
cmc
dec
inc
jb
pop
cltd
arpl
mov
enter
xchg
mov
aas
or
or
daa
jle
mov
stos
inc
jmp
pop
mov
xor
or
xchg
xacquire
add
pop
idivl
pop
add
and
loope
and
sub
cmp
aaa
adc
out
in
pop
int3
aaa
ja
push
or
jno
mov
cmp
outsl
mulb
outsb
adc
imul
or
mov
sbb
xor
out
loop
lahf
pop
cmp
mov
insl
xchg
inc
js
sbb
test
pop
lcall
push
test
jecxz
loopne
nop
clc
lds
incl
push
add
notb
push
or
mov
sbb
lods
sub
add
bnd
filds
add
mov
inc
sarb
push
adc
das
sbb
call
sarb
sbb
into
push
movsl
out
outsl
fnstsw
and
sub
adc
sti
imul
pop
cmp
push
mov
addl
push
add
xchg
cmpsb
add
jg
fildll
jp
push
es
ret
jnp
and
xlat
push
pop
mov
inc
outsl
leave
rorl
cmc
xchg
dec
in
dec
dec
stc
jno
jns
aad
jl
call
aad
jecxz
or
outsl
jae
lcall
xchg
loope
loop
enter
popf
imul
pop
cmc
adc
test
mov
or
in
pop
inc
shl
rcl
dec
fcompp
push
add
cmpsl
lds
daa
out
xchg
ret
fldt
jnp
outsb
loop
adc
mov
add
cmp
xchg
lret
xor
mov
popf
pop
mov
stc
push
adc
push
in
out
stc
xchg
push
push
js
rorb
nop
pushf
and
jmp
loop
test
outsb
cmpsl
shr
hlt
mov
adc
cltd
mov
push
bound
call
rolb
out
mov
jecxz
out
outsl
sahf
sti
push
das
shlb
push
or
cli
mov
gs
jb
aaa
insl
mov
sub
cld
mov
lret
add
sahf
sahf
mov
cmc
add
aaa
scas
mov
out
rcll
scas
push
pop
push
arpl
or
popa
xchg
stc
sub
mov
cltd
sub
lock
mov
xor
insl
push
je
shll
or
incl
or
push
or
in
jle
mov
adc
mov
shrb
data16
add
and
ret
and
jmp
pop
cwtl
sbb
mov
mov
and
fidivl
inc
imul
insl
mov
xchg
mov
mov
popf
cld
xlat
icebp
shrl
mov
pusha
das
inc
add
dec
fs
fimull
mov
mov
out
or
movsl
add
pushf
lds
adc
or
fldt
or
cltd
sti
mov
sahf
sub
fildll
cs
mov
fsubrl
das
out
mov
push
push
lods
in
mov
call
lret
xchg
test
in
ds
neg
out
or
xor
out
idivl
outsl
sahf
shl
mov
insl
out
add
jle
lock
and
push
mov
lods
mov
and
imul
push
mov
adc
inc
shll
mov
mov
inc
mov
loopne
fistl
loopne
xor
adc
lock
les
xlat
fisubs
pop
ret
push
mov
lods
shl
push
xor
or
jbe
mov
push
pop
jecxz
pop
jg
push
sub
ror
test
inc
sbb
jb
and
sub
out
push
sub
jns
psadbw
rolb
push
das
xchg
xor
fwait
subl
jo
cmp
ret
sub
aam
lods
in
dec
in
add
and
cwtl
divb
push
iret
daa
dec
inc
mov
outsl
subb
xor
xor
stos
stos
jecxz
sub
inc
jge
enter
aam
add
or
xchg
sarl
lahf
cli
adc
pop
cli
cs
push
xor
cmp
outsl
and
hlt
and
ss
mov
push
aaa
cs
push
jmp
sub
mov
aam
fwait
sub
in
inc
sub
insb
jmp
outsl
lods
jae
and
stc
lods
fucom
mov
outsb
fstl
leave
push
out
cwtl
cmp
punpckhdq
sbb
inc
in
outsb
insl
daa
mov
jle
or
inc
mov
in
mov
bts
push
adc
imul
shlb
lret
mov
jo
jecxz
fdivrs
int3
jle
xchg
push
int
mov
xchg
mov
pop
loop
inc
mov
cmp
repnz
imul
pop
pop
and
or
push
mov
movsl
inc
lcall
lret
pop
movsb
push
jnp,pt
push
lds
pop
loopne
dec
jb
out
add
mov
push
push
cwtl
jmp
cmp
lock
repnz
jge
mov
das
enter
or
and
std
xlat
fbstp
xchg
scas
leave
repz
mov
lcall
loopne
jo
xchg
mov
mov
imul
arpl
insl
dec
jge
movsb
add
pop
pusha
jno
jl
imul
scas
adc
call
bound
rcrl
shlb
and
push
xlat
or
pop
mov
inc
hlt
fucom
mov
cli
xor
jg
jmp
pop
xor
jecxz
dec
mov
fwait
dec
fldcw
aam
mov
cmc
or
movsb
std
jne
push
int3
add
movd
flds
andb
imul
or
mov
cli
out
sub
adc
aas
in
jmp
and
or
mov
enter
test
push
les
leave
into
dec
cmc
inc
sbb
data16
lods
call
das
sahf
push
rorl
into
dec
inc
lds
in
sbb
jl
lea
in
cmp
les
cwtl
call
call
or
cmpsl
lods
das
pop
push
xchg
push
adc
les
je
movsl
in
jbe
mov
mov
pop
cwtl
hlt
push
imul
popf
iret
psubusb
jge
out
or
hlt
push
fisttpl
aam
xchg
mov
les
mov
call
lods
incl
jb
daa
es
aad
ficompl
push
arpl
and
add
push
add
add
jmp
int3
sbb
add
inc
mov
pop
leave
pop
mov
jo
sub
xor
adc
jmp
inc
xchg
rcrl
and
test
inc
ss
pop
push
int3
incl
jmp
stos
push
js
push
ja
ret
pop
adc
cmpsl
pop
or
loopne
shlb
fistpll
pop
xchg
out
add
dec
inc
imull
mov
pop
sub
or
dec
mov
mov
or
int3
sarl
sbb
push
js
loope
mov
cltd
lcall
sbb
inc
inc
popf
sti
stos
add
repnz
sub
mov
mov
or
pop
add
lret
xlat
shl
fsubl
scas
pushf
cli
shlb
out
shrb
ret
jae
xor
ss
adc
lea
fcmovnbe
lret
xchg
ss
loope
sub
int
jnp
pop
test
push
push
push
aaa
aaa
jno
jle
push
subl
scas
add
iret
std
add
fistpll
or
jb
add
or
test
xchg
mov
outsl
jecxz
leave
cmp
pop
scas
cmp
bnd
or
or
imul
pop
repnz
insw
fidivrs
enter
and
daa
sbb
or
ss
xor
mov
nop
jge
imul
test
xchg
cli
xchg
not
icebp
mov
popa
divb
aad
stc
gs
mov
adc
mov
mov
ljmp
insb
dec
in
or
out
out
outsl
insb
pop
lods
or
xor
add
dec
in
sub
aas
inc
sbb
adc
insl
inc
shlb
push
or
inc
push
mov
int3
mov
sbbl
mov
sti
jle
xchg
scas
sub
xor
stc
lea
ja
test
loope
fbld
adc
sbb
int
jb
cltd
adc
loope
push
scas
xor
adc
je
cmpb
stos
cmp
in
out
pop
outsb
and
jl
sahf
jp
fistl
in
adc
dec
xchg
mov
stc
je
ror
sbb
loop
fmull
add
ja
pop
fcompl
ljmp
jns
aam
jecxz
cld
push
icebp
aam
push
jl
jg
jle
loope
sub
and
in
cmpsb
sbb
dec
iret
leave
bsr
push
jmp
rcrl
daa
iret
dec
icebp
mov
sub
js
xor
ficomps
push
or
adc
loopne
outsl
ja,pt
cli
push
xchg
loope
cwtl
mov
adc
jbe
cmp
mov
test
flds
cmp
cli
xchg
mov
sti
push
pop
dec
fldcw
cmp
les
jecxz
data16
or
lods
in
popa
push
mov
and
xor
and
nop
mov
cmc
pop
push
pushf
cmp
push
xchg
test
dec
xor
cmpsl
pop
mov
mov
dec
popa
cmp
hlt
in
xchg
sbb
adc
sub
add
push
xor
lods
cmpsl
or
clc
push
cltd
jne
mov
popa
inc
gs
mov
ret
mov
or
stos
xchg
bound
mov
popf
das
mov
ja
out
div
ja
mov
mov
gs
fs
aaa
jnp
lods
rorl
add
xor
sub
and
mov
adc
or
lret
cmc
imul
arpl
jns
cmc
sbb
mov
scas
lea
jno
mull
pusha
into
repz
mov
xchg
repnz
sub
arpl
popf
lahf
mov
cmp
pop
pusha
jnp
sub
test
insl
daa
sahf
lods
mov
jle
mov
jmp
adc
jg
ljmp
xchg
out
stc
ret
into
out
add
push
loopne
sub
scas
out
push
jns
int3
or
fneni(8087
push
mov
cld
jmp
in
loope
dec
xchg
xor
in
mul
into
pop
in
popa
loope
mov
call
mov
dec
lds
rcrl
in
test
icebp
or
stos
push
outsb
out
nop
mov
stos
sbb
bnd
mov
xchg
add
pop
data16
fmulp
inc
hlt
cmp
cli
or
call
ljmp
imul
js
iret
xor
jle
xor
outsl
int
jns
xor
add
lahf
xlat
dec
aad
adc
fmul
cmpsl
leave
push
xor
hlt
cwtl
mov
cmc
icebp
mov
lds
outsl
dec
fprem
adcb
bt
imul
call
rorb
movsl
loopne
cmpsl
pushf
jne
fisubs
outsb
adc
adc
into
push
xchg
shr
mov
ret
je
jge
or
xchg
pop
xchg
cmp
mov
xorl
inc
sbb
adc
out
lret
in
stos
lds
idivb
push
dec
stos
pop
xchg
sbb
out
or
loopne
lcall
fcmovnbe
negl
or
test
loope
sar
sub
lea
push
into
cmp
xor
xor
jmp
ja
sub
mov
sbb
int
jg
pushf
icebp
je
aaa
int3
jno
inc
test
sbb
pop
pusha
fcmovnbe
mov
sbb
cmpsb
sti
pusha
fisttps
and
and
mov
pop
dec
dec
rcrb
sub
or
rcrl
insb
loope
addw
sbb
cli
xchg
pop
sbb
xor
inc
or
in
jo
out
jg
out
in
fabs
push
jo
mov
call
mov
shlb
jmp
jge
out
int3
fdivs
jecxz
dec
sbb
out
pop
fldenv
and
insb
cli
add
fcoms
push
inc
mov
fisubrs
rcrl
into
adc
mov
pop
lahf
sub
jle
aad
loopne
lret
fcomps
mov
xchg
rclb
int3
inc
push
mov
push
ja
sbb
pop
call
jbe
stos
push
fmulp
roll
stos
scas
pop
fucomi
shlb
clc
adc
or
mov
or
shrb
out
insb
jecxz
adc
xlat
mov
imul
mov
jg
push
aas
loope
hlt
cmpsb
jge
rorb
or
js
push
mov
sub
out
out
cmp
and
jns
roll
call
test
mov
scas
in
mov
shrl
fildl
mov
shrb
repnz
repnz
fistpll
jb
mov
fwait
cltd
addr16
xlat
imul
arpl
jo
stos
or
and
into
cltd
jae
sbb
push
lret
mov
movsb
sub
lcall
xlat
out
sarl
lret
addr16
in
insl
mov
and
popa
mov
mov
sbb
andl
clc
xor
xor
cwtl
push
call
xchg
mov
outsb
bound
je
xchg
xlat
adc
pop
loope
jle
jg
ret
mov
mov
dec
mov
rol
jecxz
push
aad
adc
xchg
shrb
mov
mov
in
sbb
cli
mov
lods
popa
out
jb
mov
or
inc
out
sbb
ret
dec
std
pop
dec
stc
call
or
inc
stos
fdivrl
add
std
in
jle
jo
aaa
movsb
jl
mov
pop
test
pop
push
in
stos
sti
sub
xchg
call
xchg
or
add
jg
popf
push
lret
test
xor
lcall
or
rol
fisttps
or
xlat
xor
outsl
shll
ds
subl
in
or
idiv
or
mov
jmp
loope
and
call
stc
mov
mov
cwtl
fistpll
ret
dec
in
inc
pop
int3
fwait
adc
aas
pop
xor
stos
popa
std
xor
fmul
pop
test
jo
in
insb
in
add
push
popa
in
inc
out
cld
loop
add
or
pop
stos
int3
xchg
movsl
call
pop
and
sub
out
cmp
jecxz
jg
dec
in
icebp
inc
cs
or
iret
pop
mov
or
in
jb
out
rorl
shrl
mov
push
push
shlb
mov
adc
pop
imul
pushf
mov
mov
and
mov
rorl
mov
jmp
mov
cmp
icebp
daa
mov
loop
or
jo
dec
ds
or
xchg
fwait
cmp
dec
mov
ds
xor
addr16
stos
mov
in
lea
inc
rorb
mov
movsl
loope
lods
pusha
mov
js
test
jnp
je
jno
out
idivl
jge
push
or
scas
fcmovnbe
push
or
stos
stos
mov
repnz
mov
in
mov
mov
jae
out
ss
xchg
sbb
aaa
sti
sub
xchg
sbb
repnz
insl
pop
cmpb
mov
mov
hlt
stc
add
gs
iret
mov
cs
or
adc
fdivr
rolb
xor
int
ficoms
imul
sahf
rol
std
lcall
pop
cmpsl
pop
mov
in
mov
test
cmpsb
repz
sahf
pop
inc
loopne
mov
movsb
sub
imul
mov
fistps
sti
add
jo
out
daa
xor
jns
out
jle
data16
and
imul
and
stos
xchg
shlb
stc
popf
loope
jo
sub
sbb
sbb
sti
xor
call
daa
pushl
dec
adc
xchg
les
int3
sbb
shl
ret
jno
xchg
ret
in
mov
imulb
cs
cmp
xchg
jmp
jb
dec
mov
inc
fisubrs
mov
adc
sarb
into
ljmp
xor
push
cmp
add
ljmp
arpl
loopne
sarb
popfw
in
mov
jge
lcall
lods
or
jo
bound
mov
jbe
adc
sti
or
popa
jne
or
and
push
popf
add
dec
in
int3
mov
xchg
adc
enter
or
add
push
jecxz
pop
jo
mov
loope
leave
jbe
bound
les
data16
jo
lods
inc
mov
pop
jmp
mov
lahf
inc
imul
lcall
jg
out
mov
mov
push
jge
negb
xor
or
cmpsb
sub
mov
imul
pushf
mov
movsl
adc
jge
adc
sbbl
or
dec
outsb
scas
fistpll
jle
add
cmpsb
adcb
cmovp
popf
inc
test
sarl
sbb
add
mov
enter
or
fwait
add
mov
push
lods
cmc
ret
push
and
stos
gs
or
imul
inc
sub
xchg
fdivrs
cmc
add
jae
jns
xlat
call
jo
fdivr
pop
int3
pop
jne
or
adcb
testb
mov
xchg
ud0
mov
pop
mov
and
shrl
mov
in
out
push
cmc
scas
sub
or
push
cmp
out
pop
mov
sbb
iret
fwait
notb
push
in
aam
sub
lods
arpl
mov
jmp
out
xchg
mov
jle
mov
dec
arpl
loope
mov
fidivs
jno
jo
dec
pushf
pop
mov
lea
or
mov
cmp
and
or
out
mov
js
push
xchg
jmp
aaa
jb
add
cld
dec
lcall
or
and
in
dec
sub
mov
ljmp
mov
jbe
jmp
insb
xchg
fwait
stos
adc
push
dec
xor
ffreep
das
or
shlb
or
mov
outsb
mov
or
mov
rcrl
divb
notb
jns
jl
into
out
cltd
call
mov
imul
cwtl
jns
sti
lea
cltd
mov
inc
cmp
mov
jecxz
rolb
jmp
lods
mov
lea
mov
mov
insb
fsubrp
fnstsw
cmp
or
inc
adc
notb
cmc
jmp
imulb
xor
sahf
ljmp
ret
imul
clc
adc
inc
fistpll
stos
jl
lock
pop
or
mov
daa
and
inc
shl
call
js
les
add
adcb
je
out
cmp
jmp
cmpsb
loop
sbb
call
jl
inc
arpl
loop
das
das
jo
push
and
and
xchg
jne
ret
in
lret
mov
dec
std
mov
test
add
sahf
add
add
push
or
jno
loop
mov
lret
test
ds
lock
sarl
adc
jne
jmp
int3
jecxz
popf
out
ljmp
test
or
setge
das
xchg
jns
xchg
mov
lods
fistpll
sub
aad
cs
add
or
jbe
outsl
lret
mov
popa
xchg
int3
dec
fwait
lods
pop
adc
jbe
loope
outsb
or
dec
jge
in
clc
and
sbb
cmp
push
mov
jo
sbb
pop
push
push
int
sbb
pop
pop
mov
in
xchg
lods
cli
sbb
loop
sbb
xlat
jae
dec
and
out
mov
jecxz
jbe
jo
mulb
dec
les
das
fs
out
test
mov
mov
mov
outsb
jne
loopne
out
cwtl
inc
pop
scas
xor
push
jg
or
adc
lds
xor
pop
push
pop
out
test
lahf
je
int3
js
mov
or
add
lret
mov
cmpsl
pushf
cmp
lods
adc
mov
iret
dec
mov
and
mov
mov
mov
int
jb
out
or
cltd
push
add
dec
js
lods
sub
mov
icebp
sti
mov
jl
test
sub
fs
push
imul
aam
adc
sub
shl
pop
sub
iret
mov
out
mov
data16
mov
das
add
push
lsl
ret
clc
fidivrl
xor
adc
cmp
fisttpl
shrl
push
jmp
mov
out
push
std
adc
mov
mov
or
pushf
sbb
cltd
shlb
sub
jle
xchg
cli
addr16
cmpsl
je
fsubrl
dec
aam
sahf
shr
cmc
loop
filds
adc
mov
mov
lock
gs
jae
pop
out
push
jp
xor
jb
or
scas
and
inc
cmp
out
or
jo
out
in
pop
inc
loopne
pop
je
popf
testb
cmp
clc
cwtl
ret
fisttps
or
stos
mull
xlat
js
push
mov
pushf
push
dec
jle
jnp
test
add
cmc
sub
rcl
in
ret
shrl
stos
xor
in
mov
cld
xor
jmp
or
pushf
push
push
ljmp
in
iret
adc
add
rcr
dec
scas
mov
in
outsl
adc
notb
shlb
aam
scas
mov
shll
xorb
jbe
sbb
xor
mov
jne
call
sbb
pop
andb
add
jne
push
mov
sbb
push
in
outsb
stos
je
fidivl
push
outsw
jno
data16
or
imul
push
pop
xor
cmp
inc
jp
xor
jnp
shlb
push
ret
mov
scas
pushf
jle
pop
push
pop
in
push
or
ljmp
and
in
ja
lahf
inc
sub
mov
jp
in
loop
call
dec
mov
dec
loop
cmpsl
arpl
pushf
adc
test
jbe
push
cmpsb
sub
cmp
hlt
cmc
scas
xor
int
adc
gs
inc
cmp
push
pushf
popf
pop
mov
lock
or
jl
xor
fucomi
bound
ljmp
outsb
add
fsubs
je
pop
mov
mov
dec
mov
lret
jo
pop
lahf
sbb
xchg
pop
sbb
add
into
das
mov
lret
cmp
shl
jmp
cmc
mov
cmp
in
popf
jg
mov
aad
cmpsb
popf
popf
or
or
and
xlat
sub
out
dec
cmp
sti
jge
stos
scas
adc
ljmpw
sub
mov
sub
lods
pushf
jecxz
jge
imul
jge
stc
fwait
jge
aas
or
mov
das
rorb
and
dec
data16
and
addr16
sbb
mov
mov
add
pop
mov
test
hlt
fiadds
xchg
stos
scas
rcr
jb
hlt
dec
xor
in
xchg
sti
inc
sub
or
dec
ret
and
shll
iret
div
imul
cmp
jg
notl
pop
js
push
sub
pop
jecxz
fnstenv
push
mov
mov
mov
jl
scas
rolb
or
aam
xor
out
mov
adc
inc
jle
push
mov
and
in
sbb
int
scas
loope
negb
popf
cmp
jecxz
inc
mov
out
jecxz
bnd
loope
adc
mov
mov
jbe
shrl
imul
or
or
out
sbb
stc
jns
in
xchg
hlt
jp
cltd
sub
xor
lret
mov
adc
and
xchg
sub
leave
mov
imul
idivl
setl
pop
ja
lds
inc
jg
leave
inc
lahf
add
xchg
outsl
ret
lock
in
clc
xor
xchg
repnz
adc
jae
repnz
or
movsl
pop
pop
or
arpl
and
fnstenv
mov
loop
out
fidivs
icebp
adc
jmp
testl
loop
mov
add
mov
xchg
or
jb
icebp
or
mov
jecxz
loopne
outsl
lret
or
in
adc
repnz
lahf
inc
push
and
pop
scas
adc
nop
pop
das
cmc
adc
stos
addr16
test
lods
cmp
out
lret
stos
push
mov
jb
sti
arpl
ja
mov
loop
and
sahf
pushl
ret
pop
xchg
out
fisubs
addr16
sub
test
sahf
in
and
imul
je
in
add
aad
and
jne
or
jb
dec
add
mov
xor
fimull
xor
cmp
int
inc
cs
mov
cwtl
shll
mov
adc
loopne
cs
mov
mov
xchg
aam
test
jl
jg
ficompl
in
or
dec
jno
sub
push
push
stc
mov
popf
rol
adc
cli
sbb
and
xchg
aad
mov
mov
or
pop
ja
mulb
loopne
iret
push
add
cwtl
xchg
add
inc
out
mov
es
xor
push
out
jg
cmpsl
dec
jmp
sub
xor
leave
testb
push
mov
cmp
aas
dec
dec
cmp
loope
sub
cmp
sbb
mov
dec
dec
paddusw
adc
outsb
pop
shl
repnz
xchg
push
pop
xchg
data16
lock
push
roll
jle
mov
roll
jne
jl
push
sbb
es
push
insl
or
out
push
pop
mov
or
addb
xchg
fimuls
xor
scas
push
xor
inc
int3
or
lods
rcrl
outsb
or
lods
in
cmp
arpl
in
mov
cmpsl
dec
call
add
add
dec
xchg
jle
pop
sub
cmpsl
das
outsb
mov
rcrl
mov
push
clc
jnp
stos
dec
cltd
mov
fmul
lcall
pusha
cmpsb
jno
or
push
or
lahf
xor
cmpsb
mov
lahf
movsl
int3
je
dec
mov
pop
xchg
incl
and
je
dec
out
lret
jmp
in
nop
add
ds
dec
lret
cmpsl
dec
popf
data16
mov
shr
push
fwait
xchg
dec
jg
mov
jmp
or
jae
int
scas
pop
rcrb
in
cmpl
ja
mov
mov
inc
jl
lahf
in
push
imul
shlb
and
mov
repnz
xor
push
loopne
pusha
jecxz
jg
stos
mov
xchg
xchg
icebp
xchg
out
int3
sub
idivl
mov
les
mov
and
mov
jp
cmpsl
xor
xor
mov
cmpsl
or
gs
mov
in
sldt
roll
fnstsw
clc
jge
or
and
mov
das
sti
fsubrp
jg
pop
rcl
mov
mov
test
mov
jne
fsubr
ljmp
in
push
fucomi
arpl
sbb
sub
movsl
push
push
bound
sub
pushf
or
adc
ret
or
insb
call
movsl
pop
iret
xchg
popf
push
push
jge
outsl
jmp
outsb
fucompp
jecxz
cmpsl
inc
xchg
movsb
xor
xchg
jecxz
scas
popf
cmpsb
jb
into
loop
mov
lret
push
imul
aad
out
sub
stos
in
in
les
mov
sahf
int3
sub
lahf
or
mov
stos
lret
call
popa
data16
add
jnp
dec
loopne
mov
fmull
lcall
movsb
mov
orb
sahf
ficomps
fiadds
in
aad
insb
cld
fwait
xchg
fwait
out
lret
xchg
call
nop
pop
loopne
sbb
pop
and
ftst
mov
inc
jle
cmp
ljmp
mov
add
xor
push
arpl
loope
adc
mov
mov
imul
and
pop
xchg
leave
xchg
add
data16
loopne
scas
fcmovnb
or
popa
jns
in
jg
nop
sub
mov
jg
push
fcoms
call
inc
out
aas
or
aad
jl
mov
and
stos
mov
mov
sahf
dec
imul
jge
outsb
or
mov
in
sti
mov
cmpsl
cmpsb
mov
pop
fcmovnbe
orl
and
push
adc
mov
sbb
mov
out
and
mov
outsl
testb
jg
xchg
call
pop
jno
in
ljmp
neg
mov
sar
scas
xlat
sar
les
ficoml
cmpsl
iret
xchg
dec
movsl
pop
aaa
addr16
cmc
inc
in
mov
out
in
mov
scas
mov
lea
pop
das
pop
loop
cwtl
fidivs
nop
mov
or
scas
jb
es
push
jmp
or
iret
out
pop
ret
dec
test
cmpb
fists
je
xchg
cmpsl
push
jmp
insl
outsb
or
fdivrl
scas
cmp
and
in
xlat
mov
insb
jle
lods
dec
cld
addl
xchg
testb
loope
add
and
mov
lahf
out
out
loope
xchg
test
or
shr
or
inc
outsb
scas
in
loope
out
pop
out
aas
mov
mov
mov
jl
insl
fstps
popf
adc
mov
add
in
add
lock
cmc
adc
mov
call
fisubs
push
clc
cmp
jge
cltd
ret
mov
lahf
lds
mov
dec
mov
or
mov
pop
sub
jge
out
ljmp
outsl
lret
cmp
fidivrl
xor
add
lret
xchg
add
or
pop
mov
push
mov
loopne
out
dec
into
ror
mov
jmp
shll
ds
push
arpl
xchg
mov
cmp
or
loope
notl
ljmp
loopne
jl
outsl
imul
push
fxch
in
int3
and
lods
jo
push
loope
je
in
cmp
push
jecxz
arpl
in
int
aam
outsb
mov
jo
out
out
mov
call
repz
lret
std
lods
fidivl
arpl
cwtl
iret
sbb
bound
mov
xor
outsl
cmp
mov
or
mov
adc
gs
lea
and
imul
out
jb
xor
cli
inc
in
ja
sub
mov
and
push
xor
xor
mov
sub
movsl
decl
sub
imul
push
sbb
mov
sbb
sub
cmp
repz
test
jb
aam
adcl
lahf
test
insl
rcl
lret
ja
jnp
push
cs
gs
roll
push
jae
jg
imul
jmp
jle
mov
jmp
test
sub
jo
aam
fcomip
out
push
jae
push
nop
clc
or
in
jmp
fsubrl
imul
push
or
adc
fistps
jg
bound
lock
or
mov
and
in
push
out
jg
divl
ljmp
mov
aam
sub
xor
rorb
rorb
sbb
repz
outsl
sub
mov
pop
sbb
mov
in
fdivl
imul
imul
in
out
cld
jecxz
mov
fsubr
sub
jae
sarl
popf
arpl
dec
mov
pop
lret
adc
cmpsb
movl
push
push
sub
scas
xchg
mov
push
xor
xor
rcr
stos
outsl
stos
iret
mov
leave
jmp
inc
and
mov
movsb
in
fisttps
pop
cmp
dec
ljmp
repnz
es
mulb
lods
jmp
mov
repnz
in
outsl
aad
popf
mov
ficoml
adc
out
jae
lock
jg
mov
pop
imul
clc
ror
sbb
mov
cmp
sbb
xlat
mov
scas
hlt
xor
insb
add
popa
and
movsb
sub
into
movsl
repnz
cs
mov
add
xor
ljmp
and
fsubr
sbb
out
andl
dec
mov
negl
add
cmp
jo
shll
push
or
cmpl
mov
loopne
jmp
lret
cs
ret
or
outsl
xchg
mov
push
pop
mov
outsb
fchs
xor
mov
xchg
jg
fnstsw
icebp
or
call
movsl
xchg
fidivrl
adc
stos
or
cwtl
bound
ja
push
mov
xor
jle
sbb
xchg
sub
adc
iret
out
jecxz
cmpsb
ret
sti
xlat
add
shll
outsb
push
jle
mov
mov
idivb
jae
cmp
dec
mov
mov
cmp
cld
fcoml
mov
pop
mov
sti
shl
add
cmp
out
int
fcom
push
xor
mov
pushf
xor
shrb
cmp
add
clc
lret
xchg
mov
pop
leave
add
sub
imul
into
add
in
cmp
push
fimuls
lcall
push
jmp
and
test
sarl
mov
sub
xchg
push
inc
xchg
push
or
stos
jmp
cmpsl
xchg
lods
push
jmp
stos
jae
or
jmp
shl
inc
hlt
jae
push
arpl
mov
repz
or
and
xchg
loop
shl
lret
jb
leave
jg
jl
sahf
cmp
icebp
xchg
push
add
shll
jns
or
loopne
and
xchg
xor
jge
clc
lock
clc
jp
data16
mov
sub
xor
mov
movsb
mov
mov
add
subl
mov
pop
adc
shll
lock
inc
sbb
push
ss
pop
lcall
dec
xor
mov
or
movd
rol
dec
stos
adc
jg
mov
loop
add
enter
adc
push
gs
arpl
xor
mov
cmp
fidivrl
mov
or
in
add
xor
lock
or
and
lret
push
shlb
jo
shlb
dec
je
xor
sarl
pop
sub
adc
mov
and
in
gs
sub
add
mov
popa
push
fadd
sub
mov
sub
data16
sbb
jno
loope
repz
imull
cmp
repnz
mov
out
add
out
jae
jo
jmp
lret
jle
mov
data16
inc
rcrl
and
mov
sub
cmp
fs
xchg
outsb
sbb
lock
enter
sbb
xchg
iret
loope
in
insb
movsl
cld
cmpsb
pop
pop
jecxz
and
loope
fst
inc
sbb
imul
addr16
xchg
data16
test
test
jle
mov
mov
cli
mul
fbstp
xor
jle
fsubrs
out
jne
es
fnsave
sti
ret
or
loopne
jb
jo
xor
fldcw
rcll
adcl
addb
in
rolb
lcall
mov
add
push
into
rcrl
shl
jno
xor
push
jae
adc
sub
in
pop
addr16
je
fisttps
pop
jmp
dec
movsb
out
in
lods
negb
lods
push
imul
or
add
fbstp
cmp
cmpsb
or
dec
fiadds
add
jl
mov
cmp
loopne
adc
adc
lds
in
mov
shl
mov
scas
fildll
ret
lret
or
mov
and
push
sbb
and
inc
jo
inc
filds
jo
mov
out
inc
mov
cwtl
ficomps
sub
inc
stos
aaa
or
xchg
xchg
arpl
ret
dec
mov
mov
mov
mov
les
shll
sub
pop
cmp
mov
insl
outsl
mov
jle
fmuls
cmpsb
cmp
or
iret
mov
cmp
and
adc
jo
nop
hlt
int3
or
mov
mov
insl
std
xor
xchg
scas
fstps
lods
out
xor
call
mov
cmp
push
pop
mov
xchg
aaa
cltd
push
insl
xor
mov
sub
call
cmpsl
mov
cmp
faddp
ficoml
jg
arpl
sub
and
sarl
mov
loop
out
mov
lcall
stos
mov
outsb
arpl
jno
mov
fnsave
jecxz
lret
shrl
fimuls
sbb
pop
push
dec
rorb
out
fimull
clc
push
test
addr16
mov
mov
loope
arpl
in
cs
sub
into
roll
jecxz
jae
pop
jno
lcall
cmp
rorl
and
jo
push
lahf
mov
clc
les
ljmp
aam
sub
jmp
movsb
mov
ficoms
test
mov
ret
cmpsl
jmp
imul
or
inc
adc
xor
insl
stos
out
cmp
xor
mov
sub
test
jno
mov
push
pop
mov
jns
xchg
mov
shlb
push
pop
xchg
fucom
lea
jmp
clc
xor
into
lret
fsubl
rcll
cmp
bound
adc
adc
rorb
arpl
sub
inc
movsl
add
jecxz
mov
sti
negl
in
jp
loope
fcoms
stos
jmp
int3
fidivs
ljmp
sub
fcmovnu
cmp
outsl
clc
xor
iret
mov
dec
mov
arpl
lret
leave
mov
jbe
js
jno
adc
shlb
outsb
inc
push
adc
sbb
mov
mov
rcrb
ds
jne
stos
shrl
int3
gs
je
xor
mov
cmp
loope
lods
push
pop
out
mov
add
ljmp
adc
aas
jecxz
imul
pop
and
lea
xor
arpl
int
fcomp
movsb
and
rol
dec
call
fnstenv
rorb
outsb
fwait
in
dec
imul
mov
dec
pop
xor
push
in
adc
sub
scas
out
mov
add
or
movsb
in
add
and
mov
pop
fidivrs
pusha
cmpsl
cltd
jle
rcr
mov
das
imul
int
pushf
mov
push
inc
movsl
mov
sti
scas
xlat
sbb
mov
mov
jae
popf
or
add
inc
out
in
iret
mov
das
lea
leave
inc
lods
in
pop
stos
das
int3
fs
mul
mov
mov
inc
int
cmp
scas
lods
ret
dec
btcl
int
push
notl
ror
mov
sarb
mov
bound
sub
iret
fsubr
bound
push
fstpt
aas
sbb
lock
or
xchg
push
rclb
push
in
sbb
push
sub
cmp
dec
stos
pushf
or
add
jns
sub
or
xchg
out
daa
pushw
mov
xor
mov
dec
mov
xchg
mov
mov
sub
data16
jno
imul
or
in
sub
pushf
popa
pop
addb
adc
mov
inc
fildll
jne
inc
xchg
push
pop
xchg
imul
addr16
mov
jecxz
or
test
das
mov
jmp
insb
js
push
jl
cld
inc
fildl
cmc
test
cmc
je
cmp
aas
imul
xchg
lock
adc
mov
out
leave
sub
loope
inc
jge
mov
and
or
or
cmpsl
sbb
es
imul
mov
push
fldcw
lahf
test
into
jl
cmpsb
sahf
out
and
mov
jge
iret
jb
adc
fnsave
shll
xchg
icebp
inc
mov
repnz
cli
mov
je
and
mov
cmp
cmp
mov
fsubr
mov
std
add
jb
and
push
in
std
clc
push
aam
sub
in
sub
push
xchg
shlb
pop
xor
pop
movsl
cs
cmovp
pop
fidivrl
ret
rcl
mov
xor
insl
stos
pusha
in
pop
xlat
in
in
test
push
popa
loope
add
insl
adc
cmpsl
divl
ret
push
pop
xor
cmc
xor
lock
stos
outsl
popf
ret
dec
scas
jle
xchg
mov
mov
pop
ffreep
in
cmpsb
nop
mov
push
jp
iret
push
loope
das
mov
and
xor
adcl
mov
aas
lods
das
mov
lock
mov
ss
adc
repnz
push
test
pop
insb
xor
test
or
push
mov
or
mov
fidivrs
and
cmp
xor
rclb
jmp
inc
insl
in
ret
mov
xchg
pop
shrb
mov
fstpl
stos
pop
or
push
mov
ret
xchg
xlat
mov
add
mov
dec
mov
push
jmp
xor
pushl
iret
adc
mov
sbb
scas
mov
bound
pop
outsl
adcb
ds
mov
adc
push
cwtl
ljmp
sub
inc
mov
out
divl
cmc
adc
lea
jae
les
test
xlat
notl
xor
mov
in
call
movsl
push
mov
mov
push
fldcw
sub
inc
xchg
imull
xchg
and
xlat
add
push
sub
ljmp
movsb
pop
shrl
or
enter
in
mov
mov
sti
mov
stc
push
outsl
inc
aaa
pop
loopne
add
pop
mov
out
mov
add
jle
mov
and
dec
test
repnz
inc
inc
mov
inc
sar
mov
sub
cmp
stc
out
mov
mov
out
lcall
fisttpll
mov
mov
dec
mov
imul
sub
jge
and
push
outsl
pop
outsb
loop
shll
insb
ror
arpl
aam
insb
dec
jecxz
push
or
jb
jl
or
std
mov
inc
xor
xor
ss
stos
scas
and
cmpl
or
mov
jne
pop
cwtl
dec
mov
lds
ret
adc
mov
jecxz
mov
ljmp
test
outsb
sbb
gs
add
stos
popa
lret
or
push
out
push
dec
arpl
data16
int3
in
jg
jb
stos
mov
push
mov
mov
jae
jecxz
arpl
push
mov
mov
dec
mov
pop
add
mov
loope
jb
xor
stc
stos
xchg
push
lock
jb
jno
mov
daa
sub
cmpsb
inc
dec
inc
push
mov
dec
mov
aam
lret
inc
out
or
movsl
or
xchg
in
jo
lock
xchg
stc
jnp
andl
fwait
loopne
cli
mov
mov
mov
mov
ret
mov
or
sub
and
daa
xor
xchg
in
lret
xchg
imul
cmpsb
std
mov
loop
mov
in
mov
fmul
std
lods
aad
xor
sahf
outsb
out
fcoms
and
rcl
pop
push
mov
push
xchg
pusha
and
xor
ljmp
sti
in
adc
sub
mov
out
xor
insb
in
xor
mov
ficoml
icebp
add
lahf
lcall
inc
mov
ljmp
or
add
dec
shrl
dec
repnz
sbb
jg
pop
adc
das
sub
inc
sbb
adc
es
mov
and
xlat
dec
icebp
jmp
pop
aad
arpl
imul
fbld
imul
fisttpl
jmp
lods
enter
fistps
scas
in
fwait
and
ror
popf
cmp
test
sahf
data16
add
fnstenv
jecxz
jo
shrl
jle,pn
sahf
xchg
jmp
jns
push
iret
loop
int3
std
hlt
jae
mov
idivb
pushf
inc
fstpl
mov
jnp
imul
inc
jge
or
stos
jl
outsb
scas
mov
loopne
mov
sbb
and
adc
mov
sub
add
inc
fldz
mov
pop
out
push
in
lods
ret
or
test
inc
fildll
adc
inc
call
jg
inc
loope
jecxz
shlb
outsb
mov
mov
add
or
das
and
call
es
lock
or
loopne
cld
adc
jecxz
stc
ret
or
dec
movsb
test
mov
mov
daa
and
push
ficompl
repz
fmuls
dec
pop
loopne
or
popf
mov
rolb
out
fbld
hlt
bound
mov
fldl
imul
push
fmull
cs
push
sub
scas
into
xchg
jg
fsubr
ror
arpl
mov
cld
sarl
rolb
or
rorl
mov
xchg
xchg
mov
push
cld
jnp
lahf
inc
jmp
add
sub
xor
aad
sti
aam
pop
mov
or
in
cmpsb
fcmovnu
push
sub
jl
mov
push
cmpl
cmp
mov
xor
and
ficoml
jbe
pop
cld
aas
push
ret
out
lret
and
data16
enter
jb
cli
lock
push
leave
dec
mov
mov
sti
adc
add
jle
flds
mov
jnp
mov
jbe
jmp
xor
ret
imul
in
jbe
push
dec
ljmp
cmp
shll
in
es
fildl
stos
mov
or
pushf
dec
push
fcomp
cmp
fiaddl
mov
push
cmp
or
aaa
loope
rorb
mov
and
in
adc
sahf
jmp
jmp
pushf
int3
into
call
pop
jmp
out
jg
fisttpll
sbb
cmc
add
fwait
xor
std
jmp
cmpsb
fistps
jne
push
push
push
xchg
rolb
lock
sub
popf
jbe
sub
sti
jne
rcll
popa
lods
inc
lret
sarl
or
jmp
shr
lea
rcrl
loopne
mov
sbb
lods
jmp
arpl
fmuls
fiadds
push
sbb
iret
dec
out
loop
dec
jmp
ljmp
in
pop
mov
std
test
call
jecxz
dec
or
arpl
xchg
into
out
add
ljmp
dec
push
loopne
jecxz
cmp
pop
jne
repnz
out
out
inc
out
or
in
jae
jmp
xchg
sbbb
jge
popl
or
leave
mov
pop
fs
and
testl
lock
dec
in
mov
mov
fldenv
sub
xor
lds
aam
and
add
mov
jno
or
jno
push
enter
xchg
stc
iret
daa
sbb
lret
and
fsubs
sbbl
mov
mov
fistpll
divb
ficoml
or
out
push
into
fwait
pushf
mov
xchg
pop
shrb
int
mov
inc
sub
or
scas
xchg
jmp
ds
stc
inc
imull
mov
xchg
fwait
cld
inc
cmp
shrl
pusha
ret
push
out
insb
fidivl
ret
icebp
jle
test
insl
lret
fnsave
mov
lds
out
mov
dec
cli
inc
adc
into
or
out
arpl
pop
sbb
aas
mov
into
jno
or
or
cld
adc
cmp
xchg
pop
jae
jle
hlt
dec
sbb
lret
ret
inc
clc
or
mov
ret
mov
inc
aad
dec
cmc
out
sub
jne
aam
imul
mov
icebp
mov
mov
sarb
sbb
repnz
mov
scas
ficoms
or
nop
pushf
stos
mov
mov
mov
test
cmpsb
cmc
push
je
out
in
subl
fstpt
popf
les
mov
dec
ja
stc
ss
int3
mov
sub
int
sub
iret
xor
mov
xchg
xchg
fsub
es
loop
fisttps
cmp
aad
jecxz
dec
mov
mov
fsub
jb,pn
add
fbld
lcall
int
mov
out
ds
pinsrw
cltd
movsl
sub
shl
mov
loopne
dec
xor
sub
lcall
and
in
sti
leave
inc
imul
shrl
pop
decl
xorb
push
out
lock
push
pop
pop
gs
xor
daa
mov
out
test
or
in
pop
movsl
mov
loopew
jle
cmpsb
fldenv
ljmp
call
mov
xchg
xor
leave
jno
mov
loopne
and
notrack
xlat
mov
dec
les
inc
mov
and
sub
or
add
inc
sbb
outsb
out
sub
ficoml
int3
or
dec
add
jl
jae
or
mov
mov
hlt
sub
jecxz
repnz
mov
movsb
inc
mov
data16
outsb
sub
add
enter
das
loope
mov
cmp
jb
test
inc
add
ljmp
mov
jle
mov
mov
jle
int3
aam
mov
jg
xor
adc
arpl
jbe
movl
or
push
popf
jecxz
sub
outsl
loop
lea
pop
ljmp
cmp
cmc
mov
mov
lahf
icebp
stc
icebp
enter
stos
pop
mov
jle
mov
xor
add
push
lret
push
cli
mov
loope
icebp
push
mov
fisttpll
mov
xchg
dec
xor
cli
divb
aam
mov
xchg
inc
or
xlat
xor
jne
fwait
adc
or
jb
fistl
push
xorl
mov
sbb
pop
add
test
movsl
iret
push
std
pop
lret
cmpsb
fadd
movsl
lret
rorl
mov
fidivs
iret
xchg
les
fimuls
jmp
push
jmp
iret
add
mov
shlb
push
sub
loope
in
nop
out
jne
cwtl
push
outsb
and
mov
jbe
cmc
clc
mov
cmp
stos
sub
fmulp
hlt
movsl
out
inc
mov
jp
mov
ret
mov
out
mov
sub
imul
mov
adc
movsl
mov
shll
inc
out
movsb
jle
prefetch
xchg
sahf
std
and
or
nop
mov
lods
jb
jmp
stc
jnp
jp
test
fsubrl
jno
in
shl
push
cs
test
lret
cltd
shrl
iret
ret
iret
cmc
jns
mov
idivb
in
cld
sub
push
loope
xor
push
adc
add
lock
mov
sub
inc
das
xchg
rorl
mov
lcall
push
xor
push
adc
data16
inc
lds
push
lods
mov
in
lret
push
jle
lea
jnp
cmp
and
xor
fisttpl
mov
movsb
scas
push
lock
es
ret
jno
movl
mov
mov
xchg
cmp
xor
negb
outsl
mov
movsb
lods
iret
cmpsb
jmp
mul
lcall
or
and
out
loopne
call
sub
enter
xchg
sbb
jmp
inc
cld
dec
xor
loopne
xchg
jns
push
sbb
jecxz
mov
outsl
mov
add
out
jo
in
cmpsl
lock
cmc
outsb
mov
sbb
shrb
fiadds
xchg
dec
push
cli
push
ja
outsb
fxch
xchg
mov
pusha
mov
xchg
xchg
outsb
dec
sub
pop
or
xor
ror
insl
loop
mov
or
rorb
fbld
jle
add
xor
fs
lods
mov
ja
leave
lahf
or
jne
pushf
push
inc
cld
adc
xchg
push
jecxz
mov
lods
cmp
out
pop
jo
movsb
je
jo
cmp
iret
adc
inc
in
jecxz
push
push
jmp
inc
fwait
or
dec
cs
jnp
mov
cli
std
mov
ljmp
int
rorb
sbb
mull
int3
pop
or
sub
cmp
nop
mov
decl
cmp
pop
cmp
stos
sub
sbb
and
mov
push
in
cmp
mov
js
addl
ficoms
shll
iret
arpl
mov
mov
stos
push
xchg
scas
ja
inc
outsl
pop
rclb
mov
rcrb
mov
rcl
ja
cmc
bound
call
pop
in
lods
ret
cmp
fists
cwtl
out
xlat
mov
mov
inc
dec
insb
addr16
cmp
adc
outsb
pop
inc
lds
icebp
clc
push
jno
mov
std
push
arpl
or
mov
nop
mov
js
fdivl
ljmp
inc
add
sarl
adc
int
xor
mov
fisubs
inc
jge
fsubrs
mov
mov
leave
cmp
fwait
in
add
lock
icebp
add
loop
cli
and
repz
out
adc
ljmp
imul
push
push
jge
into
jmp
lcall
inc
sub
jne
insb
mov
jb
insb
test
shll
push
insl
jmp
pushf
fistl
nop
divb
lret
jmp
inc
enter
fadd
mov
mov
cmc
out
fisubrs
push
shrl
fcoml
push
push
in
mov
jo
nop
pushf
js
loop
pop
pop
leave
jbe
cld
push
xchg
int
xchg
mov
sti
fwait
rorb
mov
mov
pop
retw
sti
call
or
mov
mov
mov
test
or
enter
mov
add
ds
push
add
outsb
push
cmp
xor
jo
icebp
mov
in
sub
mov
mov
rcrb
jne
push
ret
sub
mov
mov
sbb
sbb
decl
mov
aas
push
jecxz
in
mov
shlb
jecxz
add
xor
mov
push
jno
push
inc
scas
lea
dec
mov
inc
mov
mov
outsb
stos
std
arpl
mov
iret
mov
enter
lods
lds
ret
jle
xorb
data16
int
mov
add
xchg
inc
movsb
ja
mov
shrb
popa
in
mov
pop
test
call
out
sub
enter
cmp
cmp
test
xchg
daa
icebp
leave
mov
xchg
ljmp
fnstcw
out
push
pop
push
jno
push
jno
mov
jle
mov
loop
xor
push
ljmp
les
int3
mov
push
iret
push
aas
jae
xor
xor
in
mov
aaa
lock
cmp
ja
add
cmp
fsubs
loop
cmp
mov
jbe
aad
outsb
xchg
lret
pop
ljmp
cmp
cmp
cli
pop
cmpsb
sahf
cmp
test
adc
int3
fprem
std
in
out
jno
push
jo
cmp
add
jo
iret
mov
adc
dec
inc
pop
mov
push
rorb
rcl
fisubs
sub
push
mov
dec
mov
cmp
sub
sbb
fcmovb
or
dec
loop
sub
cs
pop
sub
jb
sub
xor
jle
popf
xor
cltd
cmc
popf
lret
push
imul
rcrl
sarl
jge
cmp
shrl
sub
xor
inc
int3
jecxz
dec
sbb
sbb
rcrl
test
jg
popa
in
mov
inc
inc
mov
add
jne
jg
mov
jnp
or
dec
roll
daa
mov
jne
pop
pop
push
pop
push
test
xchg
popf
mov
add
adc
or
int3
jmp
adc
sub
in
dec
enter
test
movsb
mov
in
adcb
sti
ljmp
cmpsb
sti
cmc
or
hlt
jge
pop
sub
inc
mov
pop
or
sbb
imull
jns
sbb
inc
jno
xor
lss
enter
dec
sahf
roll
push
scas
pop
out
incl
loop
xchg
dec
rorl
aas
shll
ffree
cmpsb
mov
test
mov
add
dec
and
inc
pop
mov
adc
in
lret
fs
jae
push
ja
cmpsb
loopne
dec
out
dec
stos
loop
mov
mov
jb
into
or
rclb
xor
inc
imul
sbb
jl
or
into
add
xor
shl
fisubs
imul
jne
inc
fwait
cs
jl
cmp
add
dec
out
jg
mov
sub
rcrl
xor
repz
add
push
mov
aad
ljmp
or
push
pop
mov
push
cmp
nop
lahf
hlt
inc
ds
loope
imul
jo
fcmovnbe
or
inc
mov
cmpsb
sbb
mov
icebp
lea
jecxz
sub
iret
repnz
popa
mov
add
iret
enter
insb
add
adc
lret
fistpll
shrb
lods
inc
mov
in
loope
mov
mov
pusha
jecxz
into
testl
pop
imul
xchg
jo
or
add
rcrl
iret
xor
jae
jecxz
pop
xchg
loopne
enter
push
in
xchg
in
jno
dec
loopne
shll
dec
and
insl
rol
fildl
push
cmpsl
cmp
popf
or
sti
ret
je
arpl
icebp
ljmp
rol
inc
mov
imul
inc
fsubrl
push
jae
clc
aaa
pop
loop
xor
sbb
ljmp
ret
dec
stc
and
xchg
jmp
or
loop
dec
inc
movsl
loop
push
rep
adc
popf
push
out
mov
or
jne
mov
or
push
aaa
or
addl
and
inc
shr
or
cmp
mov
push
insb
test
xor
hlt
out
mov
adc
loopne
jae
fldenv
pushf
mov
div
les
stc
inc
jge
mov
xor
jmp
xchg
sbb
arpl
aad
sbb
popa
or
push
sub
pop
loope
jecxz
or
or
into
sub
jmp
pop
dec
adc
lock
jecxz
int3
sar
hlt
lret
sub
pop
into
repz
lds
mov
mov
insl
aaa
arpl
stos
fimuls
jp
xchg
sub
mov
and
out
testl
pop
adc
mov
pusha
ds
lods
pop
sbb
pusha
les
xlat
jne
or
cmpsb
adc
and
ret
fildll
push
aaa
lret
mov
pop
push
mov
jo
mov
stos
xchg
hlt
fistps
push
popa
movsb
scas
daa
mov
dec
mov
or
sub
lods
insl
jae
fnsetpm(287
gs
xor
push
dec
aad
pop
daa
loopne
dec
mov
xchg
scas
movsl
xlat
jo
sti
mov
and
cmp
bound
shll
add
jns
mov
and
inc
bound
shl
in
aam
pop
pushf
push
sbb
std
mov
sahf
loop
fstp
mov
cmp
mov
mov
sub
xchg
ljmp
adc
je
xor
jae
sbb
mov
sub
jne
cwtl
jg
movsw
xchg
je
push
or
cli
push
int3
and
jecxz
lcall
dec
sbb
pop
out
xlat
stos
mov
imul
fsubl
nop
dec
call
sub
mov
xor
cmp
shrb
imul
inc
and
sub
adc
mov
out
out
pop
dec
jbe
adc
adc
aam
jbe
xchg
xor
js
mov
xlat
jge
fldenv
mov
pusha
mov
loopne
fisubrs
out
ljmp
push
inc
pop
in
mov
push
aaa
pop
pop
xor
and
push
movsl
xlat
aad
mov
hlt
or
rorb
adc
in
fs
xchg
jbe
xchg
adc
push
movsb
lock
mov
in
stos
push
and
fwait
icebp
xchg
push
divb
or
mov
mov
mov
adc
in
pushf
xchg
mov
jg
rolb
in
int
enter
scas
xlat
repnz
mov
loopne
cmp
pop
mov
mov
dec
enter
dec
and
xor
cmc
mov
jle
inc
bnd
pop
xor
cld
shl
jo
les
mov
iret
mov
shl
mov
lea
mov
out
add
movsb
jmp
xor
fidivl
jne
das
out
jmp
xor
imul
xlat
adc
dec
popa
lds
mov
jle
jo
out
mov
mov
xlat
out
int
in
pop
jb
jnp
rorb
mov
mov
mov
mov
nop
stos
inc
or
loopne
jnp
loope
cmc
lods
mov
add
iret
jmp
adc
mull
push
stos
loope
xchg
stos
mov
mov
xlat
je
or
icebp
jae
fdiv
inc
fcmovb
rol
jo
insl
mov
inc
cmp
outsb
sbb
shll
jnp
insl
fldcw
xor
mov
mov
adc
pop
xor
mov
stos
fmuls
xchg
rorl
jl
fidivl
ja
cli
jecxz
or
pop
or
xchg
mov
pop
pushw
lret
loopne
sahf
sub
mov
push
test
fdivl
mov
inc
adc
add
dec
and
rolb
lret
mov
xchg
lods
fstl
in
push
gs
adc
lods
jmp
jbe
imul
mov
xor
out
jmp
xor
mov
mov
pop
lahf
push
nop
fisttpl
movl
push
shlb
fucomi
shlb
ret
js
lret
pop
aam
adc
sbb
jo
jecxz
dec
sub
jecxz
dec
scas
jge
movsb
and
mov
or
movsb
jmp
xor
std
lods
out
lret
dec
inc
mov
sbb
mov
or
and
mov
adc
into
stc
and
mov
pop
pop
jae
mov
mov
out
or
mov
lea
ret
or
daa
adc
nop
addr16
mov
aad
xor
shrb
stos
mov
or
xor
mov
lret
pop
ss
mov
imul
les
fcomi
push
mov
stc
lds
inc
inc
in
jg
call
in
loope
and
negb
xchg
fstps
adc
and
mov
push
lahf
aas
jno
imul
shrl
pushf
push
mov
jbe
or
mov
clc
setne
fs
fmul
sbb
icebp
rcrb
out
cmpsl
and
pusha
aam
cwtl
aaa
loopne
imul
leave
scas
inc
jl
jle
pop
fisttps
adc
lods
cmpl
sub
mov
cs
or
cmpsl
lret
push
xchg
mov
xor
add
cmp
test
int
pop
mov
mov
jb
sti
jno
xor
mov
int
push
mov
adc
in
fsubp
stos
pop
in
test
jg
ljmp
xor
mov
es
loop
add
fisttpll
arpl
mov
sbb
jo
jb
and
movl
daa
mov
mov
sub
nop
dec
jne
ljmpw
pop
sbb
jle
xchg
jecxz
decl
dec
sbb
loop
push
jl
loopne
loopne
lret
jg
stos
or
stos
inc
js
sahf
fisubrs
faddl
mov
push
fistpll
in
into
fcompl
ret
arpl
push
cld
sahf
pop
aaa
repz
je
adc
shlb
mov
rorb
or
clc
push
pushl
cmp
pop
aas
cmpsl
imulb
imul
gs
sub
mov
fs
fcompl
loope
insl
inc
pop
hlt
dec
or
mov
subl
push
xchg
mov
and
stos
and
add
mov
xchg
sbb
test
or
ds
call
data16
test
rorb
jmp
xor
dec
stc
iret
incb
mov
lret
xchg
or
push
icebp
js
inc
insb
jmp
outsl
add
in
into
inc
inc
rorb
push
out
int
loope
jne
and
lds
hlt
dec
mov
scas
inc
fstl
mov
lret
pop
jecxz
loop
loope,pn
inc
sbbl
clc
jb
mov
cmp
scas
push
xchg
jp
xor
pop
sub
lds
add
jae
cld
clc
mov
push
xor
pop
repz
icebp
arpl
inc
sbb
out
fistpll
inc
sti
pop
outsb
push
fcmovnu
lods
bnd
in
jle
addr16
popa
pop
loope
cmp
adc
pop
out
inc
mov
insl
dec
mov
gs
mov
pop
arpl
sub
mov
sahf
fbstp
xor
xor
inc
enter
pop
or
jbe
inc
jno
jge
pop
fxch
adc
cmp
ret
adc
cmc
movsl
bound
push
movsl
jno
sbb
loope
add
pop
sub
cmpsl
adc
jge
sub
or
jbe
popa
inc
sahf
adc
icebp
pusha
pop
pop
arpl
adc
ret
or
daa
ret
pushf
nop
ret
int
popa
jmp
pop
ljmp
push
mov
insb
mov
inc
pop
add
inc
cli
and
lock
sti
subb
xor
xorb
push
inc
push
inc
or
adc
xor
nop
inc
sti
loope
iret
out
mov
sbb
sar
inc
inc
mov
clc
sbb
fsubrl
ss
xor
gs
call
lock
orl
inc
sbb
rorl
or
sti
ds
inc
int3
cld
imul
push
data16
std
ret
popf
rcr
adc
push
push
outsb
stos
iret
cmc
repz
out
out
dec
icebp
push
addl
mov
dec
jno
repnz
out
clc
xchg
push
sub
popf
lcall
inc
sbb
xor
in
enter
inc
push
sub
pxor
scas
adc
inc
lods
loopne
mov
jecxz
testl
mov
mov
test
aas
test
popf
fsubrs
inc
add
repnz
int3
jg
xor
pop
pushf
std
leave
shl
adc
insb
xor
mov
and
int
pop
cmc
mov
push
mov
das
xchg
test
mov
or
dec
pusha
nop
jg
mov
mov
out
mov
jg
gs
fxch
adc
jae
sbb
sub
movsb
mov
test
sub
js
cmp
xchg
lret
or
lret
sbb
mov
jnp
inc
xchg
push
les
ja
dec
pop
lea
pop
jl
mov
stos
sub
push
sub
and
mov
mov
cmp
push
pop
inc
and
mov
jae
xchg
or
loop
push
push
xor
je
std
mov
out
or
push
iret
sti
bound
jg
mov
and
sbb
fwait
mov
inc
ja
mov
idivb
lret
mov
mov
cmpsl
call
aad
mov
inc
mov
mov
imul
pushf
sub
jle
adc
and
ds
push
imul
inc
fsubrp
push
or
or
out
imul
cmp
jp
call
xchg
jg
iret
stc
inc
loope
in
icebp
out
in
fdivrl
and
movsb
mov
pop
jmp
push
jl
je
popf
or
or
xor
stos
arpl
je
sub
mov
add
test
in
aas
and
dec
std
add
mov
jo
sbb
ret
sbb
add
or
cmpsl
jecxz
mov
movsl
shrl
scas
ja
iret
jb
mov
sub
sub
into
add
lock
push
in
roll
sub
in
xor
leave
aaa
mov
cmc
stos
out
imul
lret
repnz
pushf
test
into
mov
pushf
mov
cmc
movsl
test
repnz
add
pushf
pop
ljmp
lods
jnp
frstor
fstpl
mov
inc
sub
insb
ja
pop
jecxz
and
out
scas
inc
out
inc
cmpsl
mov
or
rcrb
ljmp
cwtl
call
aam
iret
loop
in
insl
or
push
int
push
cmp
lahf
mov
cmp
cmp
jns
in
jge
cmc
stos
fucomi
lods
mov
or
jmp
popf
ret
nop
sbb
xor
cld
and
xor
add
dec
hlt
ljmp
inc
in
rcr
xor
jmp
mov
mov
iret
xchg
ds
mov
lret
test
hlt
xchg
mov
push
cmp
pop
orb
pop
push
fmull
jmp
jnp
adc
mov
notl
mov
inc
jecxz
mov
push
rorb
pop
xor
clc
pop
xchg
fsts
fidivl
icebp
lret
cltd
sti
pop
pop
xchg
adc
clc
stc
rol
daa
std
adc
jne
cwtl
mov
or
shlb
or
scas
out
mov
mov
lcall
inc
int3
dec
jg
mov
mov
add
loope
arpl
cmp
and
mov
and
and
xlat
jbe
iret
mulb
mov
pop
out
setne
jae
enter
in
push
fs
mov
loop
sarl
rcll
jne
adc
jbe
loop
and
jnp
cwtl
jg
insb
fldl
jmp
jecxz
or
jae
pop
xor
or
lret
mov
cld
jne
into
cmpl
add
mov
icebp
int3
or
frstor
pop
dec
mov
mov
mov
jg
std
das
add
cmp
xchg
rsqrtps
idivl
or
in
xchg
xor
ljmp
in
cmp
mov
mov
push
inc
dec
loopne
jbe
or
enter
cwtl
jg
push
lods
lcall
mov
xor
test
shl
orb
push
bound
ret
sbb
push
repz
insl
gs
adc
rcr
ljmp
lods
jns
sub
push
lds
out
xchg
outsb
sti
pop
pop
rorl
sbb
add
dec
lods
pop
pop
loop
inc
mov
pop
movsl
cmp
pushf
data16
and
fisttpll
lods
mov
mov
andb
ljmp
lods
cmpsl
pop
mov
xor
mov
wbinvd
jmp
stos
mov
xchg
jmp
mov
pushf
ljmp
inc
movsl
out
push
sti
pop
push
idivb
out
push
jle
clc
dec
cmc
popa
fmuls
jl
sbbb
xchg
xchg
xchg
ja
sub
in
jle
sub
or
loopne
xchg
and
jecxz
jecxz
cmp
xor
out
add
or
xchg
adc
mov
daa
push
stos
pushw
xchg
aaa
mov
fistpl
ret
shrb
scas
sbb
push
fbld
ret
jg
xchg
pop
pop
mov
sarl
or
into
loopne
dec
shrl
dec
push
mov
xchg
adc
out
stos
mov
mov
mov
mov
mov
inc
lahf
out
pop
jo
int
pop
out
or
mov
notb
adc
clc
stos
enter
outsb
or
dec
imul
out
shlb
bound
js
iret
xlat
lea
jns
xchg
xorl
loopne
jg
xor
enter
pop
add
mov
sbb
pop
jbe
cmp
xor
imul
xchg
sti
inc
sub
pop
sbb
lahf
outsb
adc
jmp
push
loope
and
inc
outsb
jle
lods
and
push
es
mov
call
mov
sarb
shrb
xchg
inc
xchg
pop
jge
orb
pop
pop
ljmp
lock
pop
mov
iret
jmp
nop
jb
stc
or
pusha
push
lods
sahf
rcll
insb
xor
mov
xlat
mov
mov
data16
insl
stc
loop
push
cmp
xchg
add
jb
fbstp
xchg
popa
dec
and
sahf
sbb
mov
sub
je
imul
std
and
jbe
ret
mov
aaa
add
push
imul
int3
out
and
inc
shrb
lods
lret
or
and
scas
ficoml
push
loope
stc
call
fnstenv
push
enter
shll
into
fldcw
fidivs
ljmp
out
hlt
out
add
dec
pop
cmp
mov
mov
inc
add
fistpll
xor
ret
pop
pop
push
inc
imulb
xlat
push
mov
stos
loopne
test
push
pop
pop
mov
xchg
cmc
int3
push
pop
loope
lcall
inc
or
shll
and
cmpsb
stc
and
out
lods
inc
mov
jne
scas
test
test
insl
icebp
mov
mov
cmc
mov
hlt
push
lea
out
push
not
mov
int3
jbe
cli
and
lahf
dec
jecxz
scas
lds
pop
pop
iret
pop
popf
xor
insl
add
lret
mov
clc
or
call
mov
mov
dec
lret
dec
inc
xchg
aas
xchg
shl
cmp
sbb
repnz
in
cmp
mull
jmp
mov
in
scas
repnz
daa
cli
dec
sub
out
js
out
cmpsl
jecxz
jl
jnp
mov
mov
sub
dec
mov
adc
out
mov
push
or
jl
stos
fscale
loop
mov
lock
xlat
iret
not
int3
sbb
fisubs
ljmp
cmc
loope
xchg
sbb
mov
fisttpll
aaa
shl
icebp
pop
pop
mull
pop
aaa
xor
mov
lret
mov
xchg
in
pop
cmpsb
pop
aas
out
adc
arpl
pop
rcr
ss
adc
adc
test
and
leave
xor
mov
js
inc
ret
stos
cmp
pop
in
ja
sti
jne
loope
mov
sub
mov
xlat
das
mov
mov
mov
shr
iret
sub
cmc
push
cmpsb
ss
pop
jae
mov
sub
imul
bound
outsl
stos
shrb
jg
fmuls
xor
mov
fstpt
or
adc
mov
lcall
into
xchg
jecxz
cmp
cmp
push
dec
lock
xor
hlt
daa
mov
push
push
jae
push
imull
mov
clc
rcll
out
or
les
pop
aaa
lret
inc
fistl
cmpsl
sbb
sbb
mov
mov
movsl
or
mov
dec
movsl
ss
mov
pushl
divb
fnstsw
in
xchg
mov
lret
mov
mov
push
subb
xor
or
dec
aad
pop
mov
dec
and
int3
mov
outsl
cmp
dec
in
xchg
mov
pop
int3
or
int
loopne
test
cmc
push
and
popa
mov
stos
mov
lcall
mov
xor
mov
ffreep
jg
inc
int
fiadds
xchg
cmpl
jmp
lock
sbb
mov
mov
mov
loope
rcr
jno
sub
shr
scas
rcrl
add
pushf
bound
seto
das
mov
add
sbb
pop
push
fistl
pop
in
lret
push
lods
mov
and
or
or
push
lock
and
sub
sub
mov
outsl
jne
lret
inc
sub
repnz
dec
loop
cmp
fisttps
jae
popf
pop
pop
ret
or
mov
push
jp
stos
out
loope
out
shrb
sub
call
scas
and
xchg
pop
jb
arpl
pop
and
ss
lods
mov
cmp
mov
fwait
fs
repnz
jg
stos
xchg
rclb
dec
aam
mov
mov
fists
or
gs
fs
lret
repz
out
cwtl
int3
call
push
rorl
or
outsb
and
mov
call
push
int3
inc
int3
or
pushf
jecxz
gs
fmuls
adc
push
sbb
adc
jo
lods
mov
mov
dec
loope
ffree
or
mov
movl
cmp
jae
or
aad
xchg
sbb
push
loop
aam
adcl
stos
shlb
test
out
les
sahf
out
jnp
mov
gs
call
fcomip
pop
arpl
sti
fstpt
jl
icebp
mov
xchg
out
icebp
stos
mov
imul
loop
gs
lds
ss
push
and
ret
ficomps
sahf
decl
or
test
enter
int
mov
dec
or
call
mov
jp
in
mov
xor
call
push
xor
xor
ret
jecxz
ret
out
xor
lds
sahf
cmpsl
clc
xchg
push
fmulp
jg
dec
out
pop
cmpsb
lds
into
push
adc
fimuls
and
or
sub
mov
sub
adc
mov
into
add
pop
flds
xchg
dec
cmpsl
pop
inc
cwtl
cmp
mov
es
int3
movsb
pop
mov
and
mov
sahf
xchg
loope
clc
xorl
push
es
ret
stos
inc
sub
sbb
imul
repz
push
adc
xchg
rcll
xor
iret
xor
cmc
pop
cmpsl
inc
scas
xor
mov
outsb
jmp
pop
cmpsl
std
push
mov
insb
xor
xor
leave
jp
jae
in
in
dec
jecxz
testb
ret
push
mov
fisttpll
fcoms
cmp
push
adc
dec
inc
in
adc
movl
rcrb
jnp
jno
lods
pop
dec
sarb
popf
cmpl
mov
out
or
and
cmpsl
ret
jp
mov
mov
xchg
subl
ja
iret
lret
dec
fmulp
test
mov
mov
arpl
jge
fstl
adc
lret
test
shlb
mov
repz
xor
add
or
sarl
ss
cli
sub
shll
push
sbb
push
outsl
adc
or
push
out
sub
inc
jge
shrl
idivb
dec
imul
mov
enter
pop
push
nop
inc
fimull
jo
jne
jg
lret
hlt
loope
inc
mov
scas
jae
andl
rorb
cmp
mov
out
fs
bts
pop
sti
in
mov
cmpsl
test
sub
mov
es
out
out
clc
sbb
nop
jmp
shrl
add
cmpsb
xchg
sub
popa
pop
lahf
ja
mov
lret
insl
fwait
mov
pop
loopne
push
and
push
xor
dec
les
pusha
int3
loopne
aaa
xor
adc
xchg
je
mov
ret
es
mov
push
add
call
test
inc
into
push
lods
or
std
shll
ljmp
add
jns
xchg
arpl
mov
aam
mov
stos
dec
mov
gs
mov
out
sub
mov
testb
aam
loop
xchg
or
sbbb
sub
xor
cmp
cmpsb
bound
pop
adc
mov
fcmovb
jg
clc
popf
outsl
dec
pusha
jmp
xchg
inc
jb
cwtl
push
adc
imul
leave
fnsave
loope
shrl
adc
xchg
cmp
inc
xchg
or
xlat
cmp
movsl
jbe
add
and
int3
push
sahf
ja
adc
jg
shll
pop
mov
je
jle
lret
imul
loop
xchg
aas
popf
int3
shll
test
mov
push
notb
int3
lods
rorl
mov
mov
lret
pop
add
movsl
jmp
std
inc
sbb
mov
fstl
push
aas
pop
xor
jae
xor
arpl
fnstsw
mov
jno
or
xlat
mov
and
js
add
icebp
les
xor
xchg
jnp
inc
pop
imul
mov
or
cmp
jmp
add
adc
push
outsb
adc
int
in
mov
xlat
push
icebp
je
dec
icebp
adc
fst
push
gs
loope
mov
js
rcrl
not
xchg
mov
outsl
xchg
pop
jg
enter
std
sbb
push
push
inc
std
movsb
cltd
lcall
pushf
shrb
jmp
stos
dec
test
mov
out
jo
fadds
sub
stos
test
push
call
repnz
cltd
mov
mov
or
cmp
aaa
mov
mov
adc
outsb
xor
movsb
sti
stos
lds
and
sbb
or
or
adc
addr16
stos
in
mov
shrl
adc
lods
stos
inc
lahf
and
add
and
jecxz
jo
iret
jle
or
mov
jecxz
lret
pop
fildll
cmpsl
mov
icebp
xor
popa
lods
daa
mov
mull
inc
stos
call
jns
add
add
ljmp
pop
mov
aam
icebp
pop
lret
inc
pusha
jbe
and
lock
or
mov
xlat
loopne
push
or
inc
out
in
outsl
mov
or
in
pop
xlat
fists
lret
pop
and
shrb
fists
pushf
xor
imull
fmul
or
mov
aam
sbb
cmp
mov
xchg
frndint
jge
pop
fnstsw
mov
out
mov
lret
jmp
les
ds
icebp
xchg
jbe
mov
lret
fst
mov
cs
adc
loop
xor
mov
fcomps
loope
pop
push
xchg
sarb
xchg
xor
ss
data16
sbb
movsl
xchg
stos
into
mov
andl
rcr
jg
mov
sub
ljmp
scas
push
mov
mov
sarl
ret
jb
or
insl
jecxz
fcoml
popa
mov
in
loopne
inc
push
pop
in
inc
cld
lock
or
stos
enter
aas
int
fsts
pop
xchg
cs
ret
inc
insl
lock
dec
push
popf
lret
push
enter
mov
push
mov
inc
add
jge
mov
cmp
ja
test
mov
cwtl
loop
cmp
add
or
dec
ja,pn
test
imul
das
lock
ret
sbb
call
jb
jle
lret
pop
arpl
in
movq
inc
mov
add
mov
lock
jo
insl
jecxz
and
xchg
dec
jae
mov
iret
ficomps
xchg
andl
loopne
je
lcall
shr
aad
test
mov
inc
jne
ss
xchg
mov
icebp
cmovne
push
push
iret
lock
sbb
or
test
iret
insb
or
in
outsb
push
fdivrl
cmp
nop
push
sub
into
jae
loop
pop
sbb
push
clc
ret
ljmp
and
ss
jbe
out
or
adcl
inc
out
pop
push
ss
lret
mov
sbb
mov
xchg
icebp
mov
mov
fldcw
aaa
pop
popa
pushf
int3
rorl
adc
mov
xchg
pop
xchg
sbb
push
push
addr16
sub
out
cmp
push
test
dec
lea
mov
mov
loopne
mov
and
and
cmpsb
push
cwtl
jb
adc
and
fisttpl
out
sbb
or
sbb
les
mov
std
loope
iret
jae
cmp
loop
xchg
push
loop
mov
imul
inc
adc
xorb
push
imul
out
push
add
adc
movsb
push
mov
std
jne
pop
bnd
xor
mov
sub
xchg
repz
cwtl
int3
pushf
sub
xchg
out
imul
movsl
ffree
jecxz
cltd
fmuls
loope
icebp
loope
cmpsl
out
decl
cmpsl
test
sbb
or
jo
fwait
mov
jnp
arpl
int3
mov
jg
mov
jbe
xchg
std
subb
clc
stc
rcl
add
cmpsb
cmpl
and
je
insb
test
clc
jmp
enter
pop
fcomip
and
pop
rolb
out
push
push
js
pop
pushf
adc
jmp
sub
jbe
fcomp
test
mov
mov
in
pop
push
xor
mov
shlb
lods
add
sub
or
insb
mul
insl
xchg
ss
fcmovnu
aad
dec
xchg
push
arpl
mov
inc
lds
ret
xlat
jl
mov
das
mov
cmp
outsl
fsubr
add
sti
cmp
outsl
shlb
shrl
sti
cmp
adc
mov
les
loope
xor
test
shl
lods
mov
push
jmp
jle
rolb
fdivrs
mov
cmp
iret
sub
lret
jle
aad
sarl
out
rdpmc
dec
les
mov
add
lret
mov
xor
stos
stos
ret
leave
or
mov
push
push
imul
imul
dec
inc
hlt
popa
loope
js
add
mov
jo
and
or
daa
js
cmp
pop
mov
idivl
sbb
jge
addb
xchg
mov
ja
and
fwait
iret
rcll
std
mov
fldcw
std
ds
inc
dec
sub
sbb
sti
xlat
sub
loop
and
and
hlt
fidivl
cmp
arpl
loop,pt
leave
pop
jb
iret
and
inc
nop
jp
xchg
aad
mov
mov
loope
add
jns
daa
ja
mov
dec
jae
lods
ljmp
ftst
data16
mov
pop
int
ljmp
arpl
roll
dec
popa
fcom
aas
sbb
push
or
stos
loope
mov
xchg
cmpsl
iret
xor
mov
test
mov
pop
mov
insb
inc
mov
test
mov
stos
in
sarl
push
std
in
mov
pusha
sbb
leave
outsb
ret
movsl
or
mov
leave
enter
xor
out
in
aaa
fisubrs
lret
mov
aaa
lret
sub
xor
aaa
pop
push
mov
lods
insl
jp
sub
pop
ljmp
jecxz
aam
aaa
cmc
mull
bound
push
push
lods
pop
mov
aaa
sbb
pop
cmpsb
lret
pop
repz
aad
or
addr16
inc
incl
mov
cld
sbb
into
jg
and
jle
or
mov
adc
out
lret
push
rcrl
jnp
xchg
push
out
push
filds
jecxz
daa
mov
mov
lea
jne
mov
addl
pop
data16
jmp
icebp
pop
test
jnp
xor
fcmovu
push
ja
icebp
xchg
jae
not
decb
dec
lods
fstl
dec
pop
out
leave
push
xor
aaa
sub
test
push
dec
icebp
imul
sub
sbb
or
imul
or
sub
pop
in
pop
cmp
mov
jmp
popf
pop
in
add
hlt
jge
push
xor
xchg
shl
mov
lcall
cmp
into
sub
add
aam
xor
add
dec
stos
cld
stc
jbe
mov
sbb
cmp
dec
sub
rolb
aaa
stos
loope
jp
xor
xlat
xchg
sbb
sub
aaa
pop
jmp
dec
enter
insb
and
jb
addr16
add
jo
cmp
jb
enter
data16
ljmp
cmp
aad
jno
scas
stos
inc
or
sbb
mov
mov
mov
pop
rolb
pushf
dec
ljmp
lods
xchg
arpl
out
fwait
or
lock
and
call
adc
inc
fidivs
or
or
loop
sub
iret
mov
xchg
aas
or
lret
filds
jecxz
dec
leave
outsb
add
pushf
lds
xor
jg
rcl
lods
loop
mov
pushf
sub
negl
ja
lea
ljmp
push
fsubrl
fisubrs
jo
clc
stos
inc
jmp
movsb
fldenv
jle
jnp
imul
jg
lea
cmp
fcmovnbe
pop
mov
leave
iret
jbe
call
aam
shr
sub
mov
cmpsl
jns
scas
dec
out
dec
repnz
xlat
or
mov
lea
popf
jae
in
add
add
sbb
in
push
push
inc
shll
jecxz
xchg
or
sub
lock
xor
arpl
add
std
push
movsb
aam
mov
sub
aaa
mov
pop
mov
paddsw
jecxz
and
fstl
pop
mov
lea
popa
adc
out
adc
sub
iret
into
jecxz
fsub
xchg
mov
or
movsb
ret
mov
mov
test
add
cmp
jg
inc
shl
das
jecxz
mov
push
mov
push
pop
jbe
mov
adc
mov
jg
lea
mov
icebp
inc
jb
xchg
subl
insl
in
shll
das
mov
jmp
mov
loop
popf
jg
mov
lods
pop
cmp
cltd
add
shl
repnz
sub
mov
push
push
pop
ljmp
loopne
je
shlb
mov
lock
xchg
adc
mov
cld
push
dec
cmp
ds
fdivrl
arpl
xor
mov
mov
push
inc
mov
fs
ret
iret
adc
lock
lret
outsb
sub
fcmovu
jg
rcr
and
call
pop
sub
enter
loopne
fucomi
sbb
out
xor
lods
fldenv
dec
test
popa
adc
adc
daa
fildll
cltd
inc
cld
cwtl
mov
lret
push
rcrl
arpl
cmpsb
in
outsb
into
push
xlat
addr16
loopne
adc
lret
aas
out
in
mov
loopne
adc
or
imul
leave
cwtl
add
dec
mov
lods
scas
loope
inc
nop
sub
xchg
jno
jne
xchg
popf
mov
das
lret
data16
cmpsb
sub
pop
notl
repnz
push
jg
in
mov
shrb
into
or
cmp
cwtl
maskmovq
testl
fisubl
das
je
pop
add
mov
mov
pop
popf
rcll
or
xchg
js
push
mov
aaa
cmc
inc
jns
mov
sbb
push
arpl
xchg
pop
mov
aad
jb
sahf
out
add
or
in
lods
data16
inc
rol
js
bound
arpl
xchg
dec
jne
cmp
jecxz
loopne
xchg
pop
stos
enter
pushf
sub
aaa
push
adc
fdivp
and
mov
pop
jecxz
ljmp
sbb
sti
imull
adcl
popa
out
and
jo
cmc
test
out
jg
aad
repnz
in
mov
icebp
gs
lock
jb
fmull
or
jbe
or
mov
jle
jecxz
pop
or
dec
adc
loop
bsr
shl
cwtl
xor
and
jmp
mov
out
mov
push
fistps
jle
test
lahf
mov
push
xlat
mov
mov
or
loope
pusha
fwait
loop
mov
jecxz
out
dec
pop
pop
fisttps
iret
xchg
ss
push
mov
das
addb
xchg
pusha
stos
ss
call
call
stos
cmp
loop
into
push
pop
add
lret
ss
xor
nop
ret
push
jae
fdivrp
or
scas
test
xor
jns
aad
scas
stc
shlb
stos
in
cltd
sbb
push
mov
xchg
mov
xchg
cmpsb
scas
xchg
pop
jmp
jae
nop
inc
jns
pop
rorb
jl
mov
das
mov
jg
mov
testb
sbb
gs
cmpsl
jne
imul
mov
push
mov
dec
xchg
outsb
jb
dec
imul
int
sub
rol
outsl
mov
fadd
movsb
xchg
or
dec
rcll
mov
and
inc
mov
movups
fs
pop
mov
mov
test
lahf
add
cmp
mov
insl
test
mov
mov
cmpsb
hlt
jbe
das
jb
gs
fstpl
stos
cmp
sub
and
in
out
loop
fcom
mov
jecxz
sub
dec
scas
rol
adc
ljmp
into
loopne
in
outsb
out
lret
adc
int3
pop
negb
pop
iret
add
adc
nop
inc
and
in
mov
ret
loop
nop
enter
fildl
not
push
jnp
jecxz
nop
imull
sti
outsb
movsl
popa
xchg
fstpl
xchg
inc
jnp
pop
sub
popf
adc
jg
loop
in
je
mov
or
xor
lahf
mov
test
sarl
xchg
mov
xchg
jb
or
mov
or
pop
data16
cmp
stc
dec
cld
xlat
das
mov
and
lret
fiaddl
scas
mov
jecxz
pop
clc
mov
pop
loop
xor
push
push
mov
inc
loopne
rorl
cmp
int3
shlb
cmp
push
or
nop
cwtl
out
jge
pop
into
sub
movsb
pop
xchg
mov
iret
push
scas
call
mov
xchg
cmp
inc
fnstsw
cmpsb
lods
push
outsb
add
loop
int3
mov
loope
pop
js
pusha
sbb
rol
ljmp
sti
xchg
xchg
daa
filds
dec
jmp
xor
xchg
loop
sbb
fsubl
pop
cli
lret
ljmp
or
lods
cmp
mov
ljmp
mov
xchg
pop
int3
sti
sbb
loope
add
jmp
out
dec
inc
fidivrl
mov
outsb
subl
sahf
out
lahf
pop
dec
repnz
ror
xor
leave
sub
xchg
and
mov
sbb
pop
push
or
or
dec
sub
lret
add
xor
xchg
mov
arpl
sbb
mov
add
xlat
sbb
mov
cmp
test
pop
in
add
xchg
lds
outsl
shl
int
test
shl
das
testb
div
scas
syscall
data16
xchg
ret
es
into
mov
inc
xor
repz
inc
and
sbb
ljmp
repnz
lods
sub
js
xlat
jbe
das
fbld
in
sarb
or
jge
scas
in
enter
jne
push
and
daa
push
js
stos
jle
xor
imul
cmpsb
jnp
lds
jmp
lock
mov
scas
nop
pop
cli
js
aam
out
mov
jae
cs
jo
aad
popf
in
stc
add
mov
pop
cmc
lods
ficoms
push
push
xor
or
inc
inc
sbb
gs
xchg
inc
pusha
lret
fldl
addr16
jo
std
scas
add
mov
adc
mov
cmp
sbb
sub
fdivs
add
pushf
mov
movsb
loopw
in
shrl
xchg
and
pop
push
push
or
mov
cli
fsubrl
repnz
mov
sub
fwait
dec
cmc
mov
in
xchg
addr16
mov
cld
rcll
push
mov
or
int
divl
or
lret
push
mov
or
into
lds
jp
cld
rcrl
jmp
call
lret
inc
pop
cmp
imul
dec
sub
fcomi
push
jne
dec
or
loope
mov
and
cltd
shll
or
loop
jne
test
jae
xchg
lods
push
test
imul
shrb
sbb
pop
scas
or
std
inc
leave
ror
jg
push
mov
out
lret
test
add
loope
outsl
repz
aam
jecxz
xchg
fdivl
dec
xchg
jae
adc
test
in
pushf
xor
stc
inc
cmpsl
push
or
jmp
push
enter
ficompl
jmp
push
pop
imul
fisttpl
mov
pop
dec
ja
out
xlat
jg
sbb
mov
pusha
pop
stos
lahf
xchg
sub
pushf
lock
mov
outsl
xor
mov
out
dec
mov
dec
xchg
add
inc
push
leave
xchg
sbb
jle,pn
cmp
lea
test
jl
ret
pop
enter
icebp
or
pop
aad
aam
or
movsb
fcomps
fcomps
sub
loope
jge
push
fwait
cmpsl
xchg
inc
jg
in
gs
pop
dec
add
jne
jg
int3
mov
or
arpl
sahf
pop
pusha
jmp
enter
sbb
inc
gs
dec
aam
clc
xchg
push
pop
loopne
xor
cltd
enter
mov
xchg
push
mov
pop
call
lods
mov
call
xor
sahf
or
jmp
mov
popf
mov
data16
outsl
dec
jo
rcll
das
imul
and
jmp
out
pop
ror
push
outsl
mov
daa
int
lret
dec
in
jne
popf
inc
push
shll
lret
lahf
mov
xor
mov
jae
or
pop
mov
ds
mov
jle
clc
or
jb
sbb
add
mov
jnp
adcl
mov
in
cld
sub
stc
loop
mov
outsl
cltd
and
rolb
xchg
es
outsl
cmc
inc
mov
jmp
mov
inc
enter
loope
or
sar
or
imul
push
ja
adc
call
dec
loop
testb
call
mov
int
fisubl
into
jns
out
mov
add
mov
fdivrs
push
xor
outsb
scas
push
mov
or
js
jnp
and
xor
jmp
outsl
outsb
stos
push
cmpsb
cltd
into
jnp
mov
mov
out
loop
faddp
xor
mov
loope
lock
out
stc
movsb
mov
lds
lods
in
cld
insw
pop
in
push
gs
jge
stc
push
das
and
data16
call
xor
xchg
mov
xchg
cmp
cmpsb
mov
lock
xor
jae
push
aaa
imul
test
data16
fmuls
jno
outsl
das
cmp
cltd
and
loope
mov
mov
iret
fimuls
out
test
into
ja
push
push
or
inc
pop
addl
cmpsb
lret
mov
aam
mov
mov
inc
clc
pusha
adc
push
lea
xor
jae
jne
shlb
fisubs
mov
sub
jns
int
sub
xor
mov
cmp
jg
pop
lahf
adc
mov
or
es
mov
mov
sub
popa
gs
xchg
adc
dec
or
fcmovb
negl
mov
ret
mov
pop
aaa
and
das
jge
ret
in
pop
or
cmp
cmp
and
scas
jecxz
xchg
repnz
push
negl
jnp
mov
and
mov
test
fsubrs
pop
pop
inc
push
dec
shlb
scas
imull
xchg
outsl
push
cli
mov
mov
mov
lret
arpl
shl
push
xor
scas
mov
mov
sti
push
stc
fisubs
lds
push
lds
mov
sbb
iret
das
jg
jne
dec
sahf
pop
pop
int
jl
pop
pop
call
mov
jecxz
pop
loope
inc
out
jno
or
imul
shr
sbb
mov
mov
inc
jg
fsubl
pusha
out
imul
jecxz
sub
jp
lret
or
mov
mov
cmpsl
xor
jo
pop
mov
sub
dec
stc
test
in
mov
xlat
test
lret
xchg
and
cs
fstpt
mov
push
mov
push
test
pop
pop
mov
mov
fldt
idivl
js
mov
mov
mov
popf
stos
out
outsl
scas
test
sub
pop
pop
xor
lret
jle
mov
shrb
cmpsl
rolb
outsl
dec
adcb
push
mov
stos
add
dec
mov
xchg
test
jmp
or
je
push
in
addr16
inc
jle
add
cmpsl
pop
outsl
mov
subb
cmp
ljmp
jecxz
insb
or
scas
mov
add
ljmp
das
out
test
shll
pop
or
mov
or
sti
mov
or
pop
dec
imul
fldcw
sahf
call
in
fwait
dec
jno
call
aad
ror
jbe
lret
xlat
testb
adc
out
push
mov
fistpl
pop
iret
xchg
fisttpll
pusha
xchg
sub
jle
inc
rclb
or
dec
push
sub
fwait
cmpsb
pop
add
lods
pop
jmp
cltd
adc
jo
mov
lds
aas
icebp
stos
popa
adc
xchg
pusha
stos
sub
lds
lods
fcmove
mov
jg
xlat
iret
sti
cwtl
popf
sbb
sub
add
cmp
stos
fldt
sbb
mov
xor
cld
adc
dec
clc
sbb
nop
pop
cmpl
out
xor
addr16
pop
mov
xchg
jnp
dec
cmpsl
mov
mov
ljmp
fsubp
inc
push
jno
jg
pop
push
pop
dec
lahf
pop
mov
jg
out
push
pop
jb
push
mov
sub
mov
test
pop
and
call
or
pop
push
stos
daa
cmp
pusha
repnz
push
loopne
data16
dec
lcall
dec
mov
push
rcr
and
or
pop
push
orb
repnz
jecxz
mov
inc
pop
cmpsl
fisubs
into
mov
fistl
mov
fwait
jmp
push
sbb
xchg
cs
inc
mov
or
xor
lods
in
scas
cmp
mov
call
loopne
mov
pop
into
lods
and
stc
shrb
dec
negl
imul
xchg
add
imul
mov
movsl
loopne
inc
js
leave
outsl
xor
subb
gs
or
dec
cmpsl
cmpsb
mov
aam
enter
vpcmpgtw
push
jecxz
ljmp
iret
cld
push
push
sbb
std
incb
test
pop
popa
pop
cmp
jne
xor
aaa
scas
pop
inc
notb
inc
mov
push
stc
sbb
pusha
xchg
dec
aam
mov
jnp
xor
in
repz
and
decl
pop
enter
lret
push
arpl
adc
add
ret
adcl
mull
push
mov
sbb
or
sbb
arpl
pop
pop
mov
xchg
or
hlt
lret
sub
movsb
int3
xor
jg
mov
mov
cmpsl
in
or
shll
push
dec
cli
cld
icebp
mov
addr16
pop
jns
lret
inc
push
pop
lret
push
jmp
popf
push
jecxz
xchg
xchg
in
mov
cmp
imul
out
or
sbb
dec
and
inc
or
mov
jp
ret
imul
cmc
clc
push
mov
rorl
mov
dec
sbb
arpl
into
push
adc
sbb
movsl
fcomps
std
lods
shl
inc
jns
adc
in
add
jno
or
sbb
mov
je
test
lods
mov
inc
mov
jle
sub
or
cmpsl
dec
aam
ja
xchg
test
xchg
mov
cmp
loop
test
mov
jle
jecxz
fsub
shrb
lods
pusha
mov
or
fcmovbe
sub
push
movsb
jecxz
sbb
loopne
testl
movsb
loopne
mov
repz
lahf
loopne
xor
or
sbb
mov
sub
shlb
inc
adc
push
popf
mov
data16
adc
inc
clc
ds
jl
and
mov
enter
sub
jecxz
ljmp
fidivrs
scas
and
or
popa
mov
mov
add
loope
fstpt
sub
or
xchg
test
les
loopne
mov
mov
jb
fldl
fsubrs
mov
enter
fstpt
fsubs
push
add
jecxz
jae
sbb
xchg
das
xor
icebp
xlat
in
std
jmp
icebp
stos
out
ficoml
jecxz
pop
rcl
pop
das
into
sub
xor
out
sarl
fsubrp
out
xchg
push
or
pop
xlat
adc
iret
xchg
mov
mov
enter
pop
lods
shll
xor
pop
fxam
cmp
ds
das
std
xor
mov
outsl
push
adc
mov
inc
fisubs
stos
cmp
sbb
pop
inc
inc
xchg
imul
enter
loope
jo
icebp
dec
cmpsb
data16
cmp
outsl
les
dec
inc
mov
xor
scas
in
adc
call
scas
dec
pop
pushf
cmp
je
pop
mov
stos
aam
jbe
lret
bnd
stos
lods
jmp
in
jle
pop
add
loope
out
adc
leave
repnz
xchg
and
jmp
sub
push
call
jg
dec
jmp
incb
je
xchg
cmpsl
lahf
ds
stos
cmpsb
fldenv
test
or
cmp
mov
daa
and
call
stos
int
outsl
xor
das
mov
xorl
mov
mov
stos
sub
ss
adc
int
in
jg
rcr
jecxz
and
mov
ret
xchg
adc
mov
das
dec
sbb
addr16
xor
movsl
xor
push
icebp
shrb
data16
iret
fwait
testl
push
outsl
shll
dec
aas
jo
imul
arpl
fiadds
or
cwtl
imul
inc
xchg
rcrb
sub
rclb
mov
adc
hlt
dec
loopne
rol
call
in
rcrb
cld
punpckhdq
stos
clc
mov
mov
movsl
cmp
js
std
test
outsl
in
outsl
repz
sbb
imul
popa
or
cli
cmc
loope
icebp
xchg
add
subl
sub
lods
cld
cmpsl
push
das
jg
lcall
add
out
repnz
pop
mov
add
xchg
lea
cmp
dec
lret
lret
das
test
jnp
loop,pt
test
aad
inc
fimuls
xor
loope
sarb
stc
aam
stos
out
ret
int3
add
mov
mov
adc
xor
jmp
scas
sahf
test
pop
mov
test
push
pop
push
arpl
rcrb
lcall
add
add
jmp
ljmp
and
jno
les
sti
imul
stos
jecxz
aad
les
fldl
daa
xor
shrl
xor
jl
std
mov
xchg
imul
mov
jl
in
popf
notb
insl
sbb
mov
std
adc
jp
out
notb
into
loop
test
or
mov
loop
iret
fmuls
je
popf
pop
test
inc
dec
adc
inc
mov
mov
loope
out
add
testl
xor
rcr
jl
into
add
lods
cwtl
inc
sqrtps
mov
fnstsw
inc
scas
out
fwait
pop
push
cli
lods
inc
fwait
pop
pop
aas
in
das
lock
fstps
in
sbb
pop
out
mov
mov
or
or
fisubrs
inc
add
sarl
jne
mov
mov
into
mov
mov
and
push
mov
add
inc
scas
into
or
mov
fldt
jmp
sbb
enter
lret
hlt
fcomi
fisttpl
xchg
and
push
jl
dec
out
inc
mov
push
incb
bound
sbbb
fdivl
out
ljmp
mov
cmp
jge
stos
ds
dec
into
imulb
into
loop
jb
mov
xor
xchg
stos
pop
outsb
test
daa
es
hlt
lahf
fwait
sti
pop
add
mov
pop
mov
loop
jmp
adc
sbb
rcl
out
sbb
je
jo
inc
xor
sbb
dec
mov
loopne
imul
pop
mov
in
rcr
mov
test
jge
jle
cmpsl
mov
xor
in
or
fwait
lock
pop
pop
stos
xor
cld
mov
clc
push
testb
xchg
loope
mov
outsb
fcompl
push
dec
cld
push
dec
lret
jae
pushf
out
adc
iret
loop
adc
xchg
cmp
push
push
xchg
xchg
notl
inc
push
pop
lock
sbb
jg
pop
hlt
mov
movsb
cmpsb
mov
cltd
mov
adc
mov
iret
loop
pop
movsl
xchg
fdivrl
fs
mov
popf
lods
jecxz
call
xchg
xor
mov
jg
popa
outsl
mov
out
mov
mov
or
insl
push
adc
pop
jle
mov
or
jp
scas
mov
addr16
xchg
mov
or
mov
push
jmp
xchg
in
sahf
mov
outsb
int3
insb
dec
pop
xchg
pop
sub
into
push
jge
filds
loopne
das
push
addr16
and
pop
dec
movsl
out
add
add
jl
mov
sbb
or
push
daa
jg
in
mov
movd
push
mov
gs
or
push
xor
xor
arpl
rorb
movsl
mov
jg
std
insl
insl
push
out
mov
inc
push
in
data16
sub
das
imul
mov
data16
repnz
and
sbb
mov
or
mov
enter
imull
cmp
cmp
call
shll
xor
fld
cmpsl
sahf
out
mov
outsb
lds
push
insl
sbb
adc
sbb
sti
pop
dec
out
mov
in
gs
push
mov
mov
lock
jle
sbb
mov
xor
gs
add
ja
adc
cld
adc
cmp
jle
mov
and
lcall
test
cli
int
loopne
mov
jbe
xlat
lret
xchg
icebp
jne
repnz
jg
push
jmp
inc
and
in
xor
inc
lock
repz
mov
ljmp
or
sub
inc
inc
sbb
inc
fildll
sbb
push
mov
cmp
std
sbb
imul
add
pop
sahf
jmp
jbe
adc
call
push
cmp
aas
ss
aam
add
pop
or
mov
push
mov
xchg
fnstcw
sub
lcall
vdivsd
test
ljmp
xor
jno
nop
movsl
imulb
ljmp
int3
push
shr
fs
xlat
aam
sbb
and
shlb
in
shl
ljmp
mov
out
push
pop
aam
push
sbb
pop
mov
mov
mov
lret
outsl
decl
imul
or
lods
xchg
push
orl
insl
sahf
pop
in
dec
icebp
xlat
lret
enter
test
loope
jo
call
orl
pop
sbb
out
cmp
out
int
out
adc
enter
pcmpeqd
sbb
inc
adc
push
jne
inc
test
cltd
xchg
fisubl
out
and
stos
pop
sub
mov
das
pop
scas
mov
aam
cmp
and
enter
filds
pop
xchg
das
xchg
xor
sbb
jecxz
movsb
enter
cmpb
mov
imul
or
mov
xchg
out
xchg
ljmp
mov
sub
ret
jb
inc
xchg
cltd
dec
mov
call
mov
loopne
sub
mov
jae
jns
lods
adc
xor
fsub
inc
adc
inc
insb
push
and
out
addr16
divl
rolb
repnz
jno
enter
cmc
jb
sub
lock
loope
std
out
mov
jmp
sub
bound
mov
outsl
shrl
lea
mov
negl
in
repnz
jg
adc
fwait
mov
repnz
pushf
or
iret
imul
fiadds
or
movsb
outsb
js
or
sbb
xor
jne
jae
daa
pop
xor
jmp
pop
jo
rcll
adc
subb
lods
into
pop
mov
sub
lds
add
insl
shlb
mov
fcmovu
sbb
mov
popf
int3
jecxz
pop
mov
or
shrl
sbb
fidivrl
loopne
xchg
or
ds
lahf
roll
lahf
shr
ret
sub
mov
push
loop
cmp
ret
mov
rcl
dec
lret
sub
mov
sub
mov
jl
imul
pop
lahf
into
jns
sub
shrl
mov
addr16
add
sbb
add
mov
subb
test
inc
jge
jae
in
data16
dec
sbb
xlat
add
mov
pop
sbbl
jg
mov
ret
loope
movsb
jnp
outsb
fucom
xlat
mov
fwait
push
sti
inc
dec
mov
pop
adc
xor
pop
pop
cmpsl
inc
je
inc
cltd
loop
mov
ljmp
push
inc
daa
lds
push
xor
inc
mov
stos
add
jns
stos
test
fildl
scas
sti
push
dec
movsl
push
cmc
dec
adc
test
jns
push
scas
fildll
xlat
lods
or
rorb
jmp
jle
outsb
lcall
pop
fbld
fidivl
sub
shrl
shl
das
mov
ror
lret
pop
std
sbb
repnz
sti
inc
sub
jecxz
sbbl
mov
mov
popa
inc
pop
xor
adc
das
fistpll
cmc
shlb
xchg
lcall
fstpt
test
lret
pop
arpl
add
fcmovnbe
jnp
int3
neg
pop
inc
mov
movsb
and
and
imul
mov
dec
or
cmpsl
rorl
mov
cmp
xchg
cltd
inc
lock
dec
roll
add
mov
dec
popf
daa
addr16
mov
or
cmpsl
ret
shrb
or
call
loope
inc
movsl
xchg
and
lock
stc
bnd
std
das
mov
mov
clc
xchg
fisttpl
ja
leave
pop
push
idivb
lock
cli
xchg
minps
cmpsl
dec
stc
pop
loopne
mov
test
xchg
dec
in
pop
or
xor
mov
pop
gs
mov
lcall
movsb
out
pusha
push
stos
mov
jae
dec
pop
mov
movsb
mov
scas
cld
pop
mov
xor
xor
cmp
or
ret
call
loope
dec
or
out
jae
sub
mov
bound
ss
jmp
movsl
adc
movsl
stos
mov
stc
mov
xlat
sbb
xchg
outsl
pushf
dec
jno
icebp
fnsave
inc
jecxz
scas
jbe
orl
jmp
not
imul
stos
lret
or
mov
or
xorl
mov
sub
pop
xlat
pop
loop
or
out
out
and
inc
loopne
sbb
imul
xor
push
je
jo
cmp
and
mov
mov
mov
mov
sbb
cld
xor
fwait
xor
stos
js
jbe
idiv
scas
adcl
pop
outsl
xchg
push
sahf
cmpsb
mov
out
mov
lahf
cltd
jb
outsl
out
scas
fidivl
xchg
and
push
mov
or
imul
jbe
push
iret
jae
jle
cld
and
cmc
dec
cmc
repnz
adc
xchg
mov
inc
into
cmpsb
notb
or
loopne
mov
or
sti
loope
shrl
int3
lahf
nop
mov
mov
xchg
scas
xchg
not
or
in
popa
or
xchg
mov
lret
insl
scas
fbstp
loop
jae
and
outsl
lret
mov
mov
int
imul
test
cli
cmp
jp
jns
clc
je
or
imul
loop
leave
push
ret
sti
into
shll
rorl
adc
mov
fidivrs
cmpsl
xlat
mov
testl
icebp
or
sahf
stos
and
jno
shlb
and
mov
or
push
call
cld
outsl
lea
gs
loopne
pop
jbe
mov
icebp
sub
cwtl
jmp
ret
sub
lock
push
das
loope
cwtl
inc
ja
add
arpl
push
pop
lahf
pop
loope
dec
dec
loopne
inc
repnz
jb
loop
pushf
loopne
sub
je
sub
mov
clc
in
mov
loop
popa
add
mov
mov
mov
stos
and
and
bound
cld
into
pop
sbb
xor
jae
jmp
pushf
xor
fldl
dec
sti
or
insl
jae
mov
fisubs
mov
jb
cli
cs
xor
mov
aaa
movsl
inc
and
and
pop
hlt
mov
mov
outsl
sahf
mov
out
cltd
and
repnz
jmp
mov
and
test
loop
ljmp
lahf
loop
outsl
ss
cli
push
mov
ljmp
fmuls
pop
sarb
data16
scas
mov
mov
ret
push
push
cmp
insl
es
loop
mov
imul
jmp
and
repnz
in
dec
cmp
pop
inc
stos
sub
inc
cmp
imul
sarb
or
cmp
pop
mov
push
scas
mov
adc
cmp
mov
push
mov
mov
push
cmp
aas
sar
xchg
mov
add
jmp
shl
jge
or
aaa
jns
push
or
lods
lret
xor
sbb
int
ror
mov
mov
xchg
dec
leave
fstl
imul
mov
jge
out
inc
in
xor
adc
pop
mov
fmul
jge
in
subl
jle
dec
mov
int
outsl
push
test
fisubs
adc
into
jne
jecxz
inc
popa
xor
jmp
out
push
pop
scas
scas
dec
mov
insl
pop
loopne
pop
mov
data16
pushl
push
testb
cli
sbb
sbb
fbld
mov
jbe
mov
fdivrp
shll
and
popf
pop
sbb
jb
push
ljmp
popf
mov
js
sbb
pop
cmpsl
jg
inc
inc
scas
scas
jecxz
inc
jns
ljmp
jns
sub
pop
stc
cmp
sub
lods
jg
lret
fabs
insl
fisubrs
mov
out
sbb
loope
jmp
cmc
inc
jmp
movsl
push
mov
out
out
out
jb
pop
inc
cmpsb
adc
dec
popf
mov
mov
pop
push
scas
jecxz
loope
or
xlat
leavew
xchg
cmpsl
insl
mov
aad
movsb
aas
aad
inc
sub
insb
ljmp
sub
aad
mov
pop
mov
xlat
jo
aaa
int3
sub
dec
repnz
notb
leave
pop
mov
dec
shll
aad
sbb
ljmp
imul
stos
mov
shrl
fbld
inc
loope
jg
cmc
ljmp
test
add
scas
ss
sti
mov
xor
mulb
pop
mov
jecxz
roll
scas
lahf
mov
enter
sbb
shl
pop
mov
or
stos
shr
repnz
loopne
add
adc
jo
sbb
sub
jecxz
lock
or
les
dec
movsl
xor
fcomi
pshufw
pop
imul
xor
jecxz
stos
dec
push
xor
inc
mov
clc
leave
xchg
nop
sbb
add
jge
js
divb
ret
jne
in
rorl
js
sub
push
cmp
div
mov
add
xor
ret
jo
enter
ret
ficompl
out
out
or
dec
neg
mov
or
ljmp
imul
jae
ja
jp
push
std
leave
xchg
adc
fcmovne
push
and
xchg
and
sub
mov
jle
in
stc
sub
xchg
pop
sub
push
andl
icebp
addr16
insl
cmp
cmc
outsl
int3
dec
add
lret
shlb
ror
imul
push
shr
and
clc
inc
cld
mov
js
push
call
pop
scas
push
mov
mov
fidivrl
loope
or
scas
scas
jecxz
lahf
xchg
mov
imul
cmp
xor
mov
or
enter
decb
popf
popf
andl
mov
fs
mov
mov
scas
xchg
shl
in
out
imul
dec
xchg
jo
add
mov
movsl
loop
jg
cmpsl
push
loop
xor
sbb
xchg
or
sahf
inc
mov
or
enter
std
mov
jo
xor
fidivs
test
add
call
in
pop
mov
lods
repnz
cltd
mov
mov
pop
push
sbb
out
rcr
mov
loope
inc
ljmp
int
lock
dec
dec
mov
xor
push
xchg
pop
movsb
xlat
bound
popa
and
int
adc
rorb
sub
or
mov
push
icebp
and
jecxz
daa
imul
adc
int
push
outsb
sbb
cmc
inc
int3
iret
sub
nopl
xchg
test
cmc
stos
sub
xchg
mov
jg
ljmp
rcrb
enter
push
setns
or
sub
add
mov
arpl
lahf
subb
dec
dec
addr16
dec
adc
fistpll
sub
sbb
and
adc
ja
into
setge
pop
cmpsb
jo
jbe
push
scas
push
mov
inc
cmpb
jo
jo
test
jae
lahf
iret
out
cmc
test
imul
scas
out
ja
mov
cmp
and
cmc
fwait
insl
xchg
loop
push
mov
jo
xlat
loopne
iret
loopne
mov
xchg
inc
push
iret
jo
sbb
leave
mov
mov
fs
scas
xchg
call
stos
out
sti
fnstsw
std
not
notl
repnz
repnz
mov
out
adc
aam
and
gs
stc
sbbl
jbe
ja
mov
and
sbb
or
cld
add
or
int3
sarl
xor
rol
pop
jbe
adc
out
stos
outsb
push
popw
jae
cmp
sub
adc
filds
fdivs
out
mov
add
lahf
mov
adc
test
cmp
mov
popa
adcb
jmp
or
jo
movsl
out
mov
adc
fstpl
cmpsl
iret
push
or
mov
xchg
mov
jmp
and
lods
or
fs
scas
out
sbb
arpl
mov
enter
sbb
or
jbe
push
push
push
sahf
or
movsl
orl
in
dec
loopne
mov
push
or
scas
fcmovnbe
outsb
ja
mov
movsb
loope
call
mov
fidivrl
hlt
push
mov
adc
loopne
shll
mov
fnstenv
push
xor
push
lahf
mov
pushf
or
popf
and
ja
popa
sar
fs
add
stos
sbb
mov
mov
stos
fimull
cmp
cmp
adc
test
push
outsl
xor
push
repnz
out
jg
mov
cmpsb
stos
fstpt
js
lahf
into
icebp
inc
lea
pop
mov
loop
add
mov
stos
xchg
enter
lods
or
jns,pt
mov
and
jg
stos
hlt
and
lret
xor
addr16
in
cmp
imul
sub
xchg
xor
dec
popa
fstpt
mov
andb
mov
popa
xor
outsb
mov
aad
mov
fisttps
out
xchg
scas
xor
insb
out
and
cld
imul
jecxz
mov
add
inc
fistpl
push
call
int
stos
ds
or
test
icebp
or
and
push
out
push
jne
adc
lahf
popa
insl
insl
fcompl
idivb
call
cs
sahf
or
inc
mov
cmpsb
aad
fimull
jle
jae
mov
and
lods
cmpsl
out
pop
test
push
mov
test
stc
dec
fld
and
ret
dec
rorb
sub
mov
mov
test
push
out
mov
sbb
fidivs
lret
push
cld
stc
dec
xchg
jecxz
xor
lds
stc
sbb
cs
rcrl
loop
xchg
mov
mov
mov
and
aaa
cs
popa
jmp
pop
dec
adc
and
mov
shr
push
clc
mov
jge
xlat
pusha
sahf
das
mov
xor
jo
xor
pop
xchg
lds
in
mov
ja
std
lods
and
cmp
mov
mov
pop
and
out
jno
ret
mov
lret
fdiv
jle
ret
call
mov
and
ljmp
stos
js
int
xchg
test
jmp
mov
xorl
or
lret
addr16
dec
jb
repnz
or
pop
mov
and
std
add
cmp
and
xor
call
iret
scas
stos
xchg
subb
out
jo
fimull
icebp
test
sub
xchg
xchg
xchg
cltd
mov
clc
call
pop
insl
scas
push
cwtl
sub
or
adc
cmpsl
lcall
int3
jmp
mov
rcrl
addl
icebp
xchg
jnp
loope
iret
ror
repnz
fstpl
cli
andb
pop
sbb
inc
and
inc
cs
and
fstl
dec
dec
push
in
fwait
mov
stos
jle
mov
movsl
fldenv
stc
popf
cmpsl
mov
xchg
mov
inc
pop
lret
data16
dec
jno
fs
mov
test
mov
mov
filds
shlb
mov
mov
sub
fucomip
dec
push
sarl
mov
or
dec
sbb
aam
rorl
pop
sub
or
loope
jo
inc
jmp
iret
adc
lods
jmp
fidivrs
into
pushw
outsl
mov
and
cmp
gs
je
dec
fisttpll
addr16
fisubs
jne
jns
push
int3
mov
xchg
or
loopne
push
jbe
int3
outsl
and
fnstsw
enter
leave
jnp
jno
test
sub
dec
sbbl
int
leave
mov
jae
aam
sub
out
inc
out
jecxz
addr16
jmp
and
pop
es
adc
lret
lods
icebp
popa
inc
in
mov
jmp
jecxz
imul
stos
mov
push
xchg
es
imul
enter
movl
ret
push
inc
std
fwait
int3
lret
pushf
mov
daa
aaa
iret
mov
outsl
jmp
cmpsb
pop
in
insb
xchg
das
in
jmp
mov
loop
test
fsubrl
mov
mov
inc
out
mov
and
push
push
or
cmc
les
fs
lock
insb
mov
jmp
cmc
sbb
lea
mov
jmp
mov
jbe
mov
out
sbb
inc
out
xchg
ja
movsl
jmp
push
mov
int
xchg
fimuls
lahf
fisttps
imul
jecxz
insb
xchg
jg
dec
inc
inc
lock
stos
add
jmp
or
ret
jmp
call
mov
dec
mov
ficoms
imul
or
out
mov
stos
adc
xchg
into
xchg
cmp
stos
ret
dec
jg
loop
leave
or
mov
aam
mov
ljmp
test
pshufw
inc
outsl
les
shll
mov
int
jle
js
insl
push
sbb
aas
mov
lock
jae
add
xor
andb
lret
jl
lock
and
fmul
sub
out
push
mov
enterw
rcl
cmpsb
pop
lock
pop
insl
xor
mov
jle
add
inc
xchg
add
popa
fisttps
jns
push
insb
movsl
jnp
cs
filds
pop
jb
or
sti
cmpsl
xlat
inc
mov
jge
mov
in
xor
fmuls
jne
fldl
jmp
sahf
inc
mov
in
ljmp
popf
mov
loope
fistpll
mov
lods
xchg
addr16
adc
adc
sub
jl
mov
cli
push
loope
mov
add
int3
jle
stos
inc
in
inc
jle
jmp
pop
shr
sti
fs
dec
pushf
mov
push
inc
lcall
xlat
das
loope
jge
jecxz
int3
jecxz
jp
leave
jge
lcall
lcall
push
jns
mov
ds
test
jecxz
iret
lods
shr
movsb
lahf
push
fs
testl
je
jmp
mov
fdivl
jecxz
lret
test
cmp
ljmp
dec
lahf
ret
fucomp
xor
push
xchg
jns
in
xchg
icebp
add
sbb
fwait
adc
jo
cmpsl
aad
loopne
nop
and
gs
or
clc
jns
xchg
sti
inc
lret
inc
or
out
std
xor
jg
add
add
ret
outsb
js
xadd
pushf
ja
jb
mov
movb
mov
addr16
pop
imul
addr16
mov
add
test
addr16
gs
push
daa
or
dec
bound
inc
lahf
xlat
outsl
nop
mov
or
aaa
loopne
imul
push
push
fiadds
enter
xchg
and
das
js
inc
daa
repnz
into
push
lret
xor
mov
inc
cmpsl
scas
cmp
cs
jecxz
inc
shr
stos
fucomp
outsl
scas
stos
mulb
aam
pop
aaa
into
mov
jecxz
xchg
bound
jp
movsl
repnz
sbb
ljmp
inc
or
mov
out
mov
cltd
pop
jne
pop
jge
icebp
jle
out
dec
sbb
jecxz
push
mov
lods
mov
pop
daa
iret
ljmp
adc
movsl
ja
and
mov
jae
into
dec
mov
insl
imul
push
dec
fbstp
loopne
popf
int3
fsubr
lahf
repz
mov
jae
push
addr16
lds
xchg
cmc
rcpps
daa
or
xchg
je
or
cld
push
int3
mov
insl
cmpsl
out
inc
mov
or
out
dec
or
xlat
and
push
sti
scas
pop
rcr
int3
sbbl
xor
dec
mov
or
rorl
xchg
bound
bound
jb
jle
mov
lods
add
lods
fs
mov
sahf
shr
mov
test
scas
cmc
mov
sahf
inc
adcl
call
and
cmp
iret
jle
lods
daa
loope
pop
mov
lret
lods
jg
lret
in
cmp
pop
xlat
mov
sahf
imul
clc
push
push
cmpsl
mov
into
or
mov
shll
int3
xor
jle
and
stos
mov
test
sbb
or
push
mov
jae
cmpsb
xlat
lock
jmp
pop
cmp
iret
push
jecxz
xchg
lock
xchg
and
push
and
enter
add
and
addr16
cmp
push
cmp
stos
jno
out
fdivrs
insb
inc
jmp
dec
add
or
sbb
ficoms
dec
dec
into
jle
and
mov
or
cltd
xchg
push
fs
mov
mov
test
out
gs
pop
mov
out
hlt
xchg
leave
inc
js
jb
rclb
popf
ja
sub
mov
das
hlt
call
into
lock
add
test
sbb
mov
add
pop
daa
in
mov
sub
sti
mov
mov
pop
sub
pop
adc
bnd
jbe
sbb
cmp
fnsave
push
sub
or
dec
sbb
xor
cltd
inc
lods
fidivrs
or
xchg
xor
jo
jne
xor
ja
jmp
adc
das
jmp
jnp
scas
cs
js
icebp
jbe
mov
iret
push
outsl
jecxz
es
mov
out
jmp
lock
testl
ljmp
lret
shrl
out
adc
pop
insl
aam
inc
into
popa
mov
sbb
nop
in
jae
mov
pop
jge
test
imul
sbb
out
icebp
pop
aam
xchg
or
fnsave
cmp
rcrl
scas
xorb
mov
push
mov
mov
cmpsl
sub
orb
aaa
gs
ret
into
or
outsb
push
mov
sti
jecxz
jp
rorl
dec
aad
push
sbb
sub
dec
in
test
push
enter
jg
lods
ds
stos
push
xor
jae
mov
sarb
sbb
push
xor
clc
lods
adc
enter
and
sub
lcall
xor
call
stc
cld
sbb
add
in
or
idivb
dec
call
cwtl
add
data16
dec
mov
mov
negl
andl
out
int
or
popa
je
data16
icebp
xor
pop
adc
shrb
lock
hlt
add
mov
jle
cmp
push
push
pop
stc
int
lret
iret
int3
lret
mov
lret
outsb
leave
mov
lret
push
sub
cltd
xchg
repnz
out
fdivs
sbb
ror
or
adc
and
lret
jne
fsub
sub
divl
inc
xchg
and
or
addr16
inc
shrl
out
lock
out
push
aad
test
sub
sarl
dec
dec
or
fisttpll
or
fistpll
cmpsl
jg
scas
out
in
add
lock
out
sarl
knotw
and
ljmp
sarl
sbb
in
inc
inc
loop
jge
clc
jmp
cmpsb
mov
pop
fwait
inc
xchg
outsl
cmpsb
psubq
fsub
imul
call
dec
dec
mov
std
mov
out
lods
sahf
mov
iret
mov
or
leave
addl
scas
xor
scas
out
enter
icebp
or
lcall
and
pop
sub
sub
in
or
rorl
stos
mov
dec
sbb
mov
hlt
fimull
das
addr16
rorl
xchg
adc
popa
dec
sub
stos
aaa
popf
lcall
fildl
add
mov
in
aaa
out
test
das
mov
xchg
insl
lock
out
fcomip
outsb
mov
not
out
int
imul
lea
add
hlt
push
adc
mov
daa
scas
imul
shlb
adc
sbbl
mov
outsb
pushf
inc
mov
xchg
add
xor
in
aad
inc
out
test
xor
mov
data16
lret
pop
xchg
cmp
test
in
jb
imul
jo
or
mov
mov
out
stos
add
or
loope
xchg
int3
adc
fisubrs
cmc
insl
jmp
jns
sbbb
aaa
xchg
rcl
ret
sub
push
xchg
mov
or
mov
enter
ja
mov
and
pshufw
cmpsl
fcomip
lods
jae
push
fldl
mov
and
daa
insl
xchg
jg
mov
das
xor
roll
jo
sub
ja
mov
in
jae
out
sti
sub
push
sub
mov
push
xorb
jecxz
jo
stc
jnp
call
mulb
nop
mov
mov
leave
push
inc
cmp
outsl
mov
out
out
jp
xchg
push
jne
jl
fwait
test
aam
repz
in
mov
xchg
idiv
lret
xor
push
jo
fbld
ja
jns
push
sub
mov
mov
cmpsb
mov
mov
lcall
movsb
or
js
outsb
add
cmp
jno
aad
pop
mov
test
in
pushf
jl
or
mov
mov
sbb
xchg
arpl
add
imul
jae
adc
xchg
adc
cmp
add
sbb
inc
push
stc
push
ficoml
jg,pn
push
cmpsl
in
mov
scas
dec
jmp
ja
in
iret
push
popa
sahf
out
sbbl
out
sub
or
fiaddl
mov
loop
lods
mov
test
xor
mov
insl
cmp
leave
lahf
add
ret
out
or
call
enter
jb
imul
pop
add
add
push
cmpsb
loopne
aad
add
xor
stos
add
jmp
and
jg
loopne
stos
xchg
lret
mov
push
xchg
fidivl
sub
mov
lahf
mov
repnz
and
das
loopne
or
fnsave
rol
jns
loope
cli
xorl
sub
jmp
dec
or
xchg
les
loop
jecxz
ss
ljmp
inc
sub
pop
xchg
stc
dec
lcall
dec
inc
sbb
sbb
or
jp
and
les
push
movaps
je
int3
out
push
enter
pop
cmp
das
mov
adc
daa
add
int3
jo
cmp
jne
mov
fcomp
repnz
loop
out
sarl
aad
xchg
cmp
rorl
xchg
jb
xchg
or
xchg
lret
mov
push
and
pop
inc
pop
mov
xchg
fiadds
scas
sub
fbld
sub
or
idiv
fwait
jae
pop
adc
mov
stc
fbstp
or
cltd
fidivs
or
fs
fucom
or
icebp
mov
imul
dec
cmpsl
xchg
xchg
shrb
adc
mov
lock
cmp
popf
mov
lahf
fisubrl
insb
push
ret
pop
mov
jb
cli
inc
sub
dec
cmpsl
lret
dec
shlb
jmp
pusha
fsts
mov
jge
je
mov
xchg
test
stc
cmpsl
arpl
jg
mov
imul
ljmp
jae
sahf
jle
mov
mov
jl
daa
sbb
icebp
fst
cld
je,pn
fdivrl
push
push
ljmp
insb
aas
or
xor
sahf
mov
cmp
cmpsb
push
repnz
mov
outsb
sub
rorl
call
fistpl
mov
inc
les
push
fisttpll
lock
dec
mov
mov
in
push
jbe
mov
in
xchg
es
mov
nop
or
xor
movsl
out
add
dec
imul
jno
lods
and
mov
mov
inc
mov
sbb
stos
movsb
enter
scas
int
push
add
push
cs
add
xchg
xchg
out
cmpsl
jl
mov
add
lds
jo
leave
fildll
sub
lret
or
pusha
loopne
adc
cwtl
xchg
xor
adc
dec
pop
mov
push
cli
push
inc
jne
test
add
dec
leave
push
stos
xchg
adc
out
jp,pt
pop
and
outsl
scas
or
dec
mov
mov
pop
ljmp
mov
xchg
icebp
adc
ret
imul
ljmp
sub
aad
add
pusha
dec
jmp
jne
pop
push
rorb
adc
pop
jmp
imul
out
out
mov
test
inc
subl
dec
add
loopne
lret
sbb
push
adc
xlat
ror
xchg
fimull
popa
pushf
mov
sti
and
pop
add
fwait
iret
jg
outsl
test
lahf
push
fwait
sub
jo
fidivrs
loope
jle
pop
je
pushf
inc
leave
loope
or
iret
xchg
ja
and
stos
out
adc
push
ja
out
outsl
jno
inc
xchg
int3
pop
jl
int3
jno
clc
mov
push
rcrb
ja
call
dec
int3
sbb
jle
xchg
or
mov
pop
jne
push
cs
or
out
out
add
xor
pop
clc
loope
mov
mov
into
and
fsts
inc
add
into
mov
jno
add
loope
push
pcmpeqd
popf
loope
cmp
enter
or
dec
xchg
ja
mov
and
stos
push
dec
or
mov
add
adc
icebp
jmp
or
scas
testl
adc
mov
or
shl
imul
dec
xchg
jae
push
ret
fmull
out
pop
out
ljmp
icebp
push
stos
jecxz
inc
or
adc
shlb
filds
out
jmp
scas
lcall
popl
and
sub
imul
pop
jmp
and
loope
fidivrs
push
cmpsl
xchg
pusha
cmp
ret
push
mov
or
or
stos
xchg
sub
ret
bnd
and
push
jnp
xchg
fnsave
popa
mov
lret
movsl
cmp
outsb
mov
pop
cmp
xor
data16
dec
lock
push
and
cltd
in
jmp
or
pop
push
xor
mov
sub
pushf
push
push
orl
fdivl
mov
lea
mov
fmull
pop
scas
cmpsb
jecxz
out
in
ss
mov
jno
xadd
mov
gs
push
icebp
xor
cmp
or
adc
nop
mov
stos
push
int3
jne
stos
mov
and
rcll
pop
push
xor
bound
test
mov
jecxz
in
push
add
fsubl
mov
jge
xorl
pop
mull
clc
inc
stos
das
add
push
psrld
adc
andl
or
loop
das
mov
int3
ljmp
rcr
std
push
adc
popa
test
inc
fsubs
shll
daa
lret
sbb
fnstenv
xor
adc
outsb
cwtl
imul
push
mov
call
xor
cmc
aaa
int3
adc
imul
push
loope
loop
mov
lock
cmp
aaa
mov
mov
sahf
cmpsl
sub
jle
xchg
jnp
fisubl
insb
inc
sbb
mov
imul
aam
sbb
je
movsl
inc
js
icebp
test
rcr
xor
or
xlat
mov
sub
mov
movsb
ret
fwait
imul
mov
loop
cmpsl
in
rol
inc
mov
mov
mov
cmpsb
fbld
xor
rcr
cmc
adc
sub
psraw
jae
rcrl
inc
rorb
insl
outsl
enter
xor
movsl
mov
xor
fcoms
xchg
mov
aaa
jno
pop
adc
mov
rclb
cltd
mov
clc
repz
jnp
ja
dec
mulb
sub
adcl
into
push
sub
mov
outsb
mov
std
adc
fs
or
lret
ret
adc
push
lret
mov
imul
sbb
xchg
jecxz
add
push
dec
mov
dec
rorb
cli
mov
insb
add
or
call
inc
ret
icebp
loopne
das
insb
out
insb
imul
push
mov
aas
enter
addr16
jbe
jmp
mov
std
insb
popf
jecxz
pop
into
int3
xor
rcl
pop
js
gs
jp
inc
inc
mov
sti
pcmpgtb
rcr
xchg
pop
jl
adc
jne
out
icebp
lahf
jle
test
jg
cmp
mov
lret
sub
iret
and
cmpsb
sarl
xor
and
and
sbb
fdivrl
lahf
sub
sub
sahf
out
mov
lock
mov
inc
pop
test
dec
jl
outsb
fisttpl
dec
scas
into
call
mov
sbb
push
rcrl
mov
pmaxub
and
std
cmp
imul
in
adc
push
test
mov
icebp
xor
ret
sbb
cmp
and
xchg
out
fwait
jle
xchg
stos
mov
cmp
dec
addl
fdivrl
lret
push
stc
sub
popf
test
mov
imul
jl
fcomip
cmc
ror
cmp
or
in
leave
out
fistps
push
and
inc
int3
sbb
lret
dec
call
lods
cmp
cmc
adc
inc
lahf
or
call
loop
and
jle
pop
jg
arpl
test
pop
jge
fcmovnb
stos
sub
shll
pop
lret
jmp
stos
into
sbb
les
mov
adc
fsubrp
std
mov
bnd
into
test
xchg
jb
in
cmp
and
inc
into
ds
out
and
push
xor
dec
aad
sbb
lahf
mov
pop
lods
push
test
and
stos
rol
sub
daa
mov
xlat
fldt
or
mov
jecxz
cmp
mov
jle
and
sar
push
jae
je
cld
cltd
sbb
fcompl
add
xor
or
cmc
xor
and
outsl
fucomi
in
mov
decl
lret
dec
aad
fisubs
loopne
imull
cmp
arpl
pop
incl
sti
dec
xor
movsl
xchg
jo
mov
imul
sub
pop
enter
sub
inc
add
lcall
pop
push
add
stc
xchg
cmpsl
outsl
and
shlb
repnz
das
dec
fcoml
pop
insb
mov
lret
test
or
enter
enter
icebp
sub
sahf
mov
in
out
or
mov
jmp
loope
popf
mov
xor
jnp
push
in
inc
fisubrl
leave
sar
cmp
divb
jecxz
rcll
rcrl
xchg
loopne
movsl
fcoml
mov
out
in
add
les
loope
repnz
or
das
outsl
insb
std
or
xor
jge
mov
jbe
jecxz
loope
sbb
mov
movsl
sbb
ja
test
mov
jo
inc
push
ljmp
data16
lea
or
mov
ret
and
push
ret
push
push
in
adc
icebp
lea
inc
lret
addr16
test
sbb
aad
mov
out
ja
loope
jne
push
mov
xchg
shlb
xlat
jno
mov
test
ret
xor
cmc
lret
mov
fmul
in
frstor
adc
mov
in
sahf
cld
test
jno
je
jecxz
mov
or
push
ret
inc
push
mov
fdivrl
outsl
fisttpl
int3
fbstp
mov
shlb
sub
mov
xor
or
icebp
or
cmpsb
pusha
jbe
das
sub
in
fisubs
xor
je
test
inc
lods
je
jge
pop
mov
shll
mov
pop
mov
pop
pop
into
mov
cld
int
in
enter
add
nop
dec
mov
loopne
lock
pop
lret
xchg
push
mov
pop
jecxz
jns
out
mov
test
std
xchg
filds
add
mov
fisttpll
add
clc
lahf
int3
lods
pop
enter
fnsetpm(287
mov
adc
jnp
shl
insl
mov
in
adc
je
in
xchg
ljmp
adcl
cmpsb
out
sarb
iret
jmp
bound
push
lahf
fwait
mov
scas
sti
add
fimull
add
mov
xchg
loope
sbb
dec
pop
cli
add
pushl
sub
hlt
jl
sbb
shll
aad
or
push
push
rorb
xchg
xor
dec
pop
add
call
push
push
or
stos
jg
sub
jecxz
pop
mov
sbb
sbb
aas
push
mov
lds
xor
shlb
add
call
mov
mov
cmp
insl
dec
insl
test
or
std
xor
lods
or
sahf
ljmp
data16
jmp
or
inc
test
das
jae
pushf
cmp
in
jge
into
shlb
mov
mov
adc
xor
and
sub
xlat
stos
mov
mov
push
xorl
lds
fdivr
enter
cwtl
shr
loopne
aad
ja
loope
stos
inc
push
test
mov
xor
xor
in
loope
inc
mov
and
negb
fcomps
jp
mov
sub
jae
gs
out
scas
loope
out
add
mov
xlat
pop
inc
fisubl
jae
test
hlt
jo
div
movsb
data16
or
mov
push
lcall
imul
in
out
jno
mov
loopne
fsubrl
mov
enter
xchg
clc
fisubl
icebp
jmp
xor
mov
jecxz
call
or
in
mov
cmp
fs
cmp
mov
mov
xor
xor
nop
dec
lret
sbb
enter
fadds
or
mov
pushf
cmp
xor
xor
popf
lea
pop
ljmp
aad
out
mov
mov
shr
loopne
rcll
and
and
iret
mov
hlt
adc
fs
sub
in
in
pop
or
scas
inc
mov
xchg
push
andb
mov
rcll
enter
ljmp
fistpl
dec
sub
mov
aaa
je
mov
pop
lods
sahf
loop
out
lea
mov
adc
shr
jns
or
inc
scas
add
gs
icebp
xlat
ja
gs
ret
jo
imul
inc
repz
push
stc
or
xchg
pop
stos
bound
push
ljmp
fnsave
xor
cld
lret
test
stos
shlb
fildll
outsl
jle
add
jo
ljmp
xchg
mov
or
lcall
in
mov
jb
fwait
pop
jae
cli
xor
bound
mov
loop
dec
pop
inc
ljmp
aaa
aad
loop
jbe
daa
add
rcll
sbb
xor
push
add
and
loopne
cmpsl
inc
stos
enter
dec
loop
sub
mov
push
adc
xor
sub
ja
pushf
jp
rolb
mov
shrl
dec
mov
or
je
and
mov
in
jmp
cmpsl
dec
pop
lcall
or
aad
add
mov
addr16
jle
xlat
out
jb
out
sub
lds
cmp
mov
pop
sarl
mov
shlb
adc
xor
mov
ljmp
cmpsb
sub
mov
std
mov
cmp
pop
loop
sub
pop
iret
pop
fistpl
xchg
inc
xor
xor
pop
mov
aad
mov
mov
mov
enter
xor
jp
cmp
into
aad
mov
inc
lods
and
shll
or
stc
lret
mov
jbe
movsb
cmpsb
ret
das
fldenv
enter
sub
les
lods
outsb
scas
xor
rclb
shrb
cmpsb
loope
std
lods
cmp
add
xor
cli
dec
in
adc
iret
lock
push
dec
hlt
jb
dec
scas
pusha
mov
add
cmp
mov
ret
stos
ficomps
fistpll
daa
xor
pop
inc
out
fdivr
and
sub
sub
ljmp
xchg
mov
lock
cld
lea
or
rorb
rcrl
xor
pop
xor
fstl
mov
fdivrl
mov
mov
lds
jecxz
repnz
hlt
movsl
xchg
in
adc
icebp
or
adc
mov
lock
aad
and
lds
fwait
mov
jo
cmp
testl
push
mov
inc
push
data16
enter
scas
dec
stc
mov
in
sub
lret
dec
sub
pop
jecxz
stos
fidivrl
jne
push
pop
sub
cmpsb
loop
fists
and
or
jmp
mov
mov
xor
pusha
ror
ss
or
loopne
daa
inc
test
mov
rcrb
lret
cmpsb
test
mov
add
inc
idivb
std
mov
mov
mov
rorl
adc
call
adcl
inc
and
push
jge
xchg
cmpsb
mov
fisubrl
call
lret
add
dec
jmp
adc
jns
lods
push
and
lds
sbb
mov
test
sub
cmp
aaa
popa
cmp
les
and
aad
mov
out
add
lret
mov
test
fnstcw
jbe
shrb
aaa
fimuls
loop
loope
das
fwait
xor
push
stos
ficompl
sbb
mov
adc
aad
lods
jno
lret
dec
pop
stos
ljmp
dec
jp
shrb
int3
mov
inc
rcrw
lretw
fimuls
adc
xor
mov
fldt
xchg
out
popf
add
mov
ret
jae
mov
fisubl
aaa
je
gs
xor
push
adc
mov
inc
andb
dec
movsl
mov
jmp
mov
orl
mov
cmp
aaa
aad
push
cli
adc
sub
and
das
push
scas
mov
es
lret
pop
mov
call
std
mov
or
inc
mov
and
repz
mov
mull
and
push
in
jle
arpl
mov
mov
pop
lock
mov
ljmp
xchg
in
and
sbb
lock
mov
xor
add
jg
cs
dec
jmp
fisttps
aas
popf
mov
ror
jmp
mov
test
cmp
cli
shl
sub
fstps
xor
outsb
mov
cmp
dec
dec
mov
dec
sub
jecxz
sarb
mov
in
aaa
cmp
jne
scas
cmp
cmpsl
leave
in
lcall
enter
repz
lock
xchg
outsl
out
iret
xchg
add
xor
mov
add
fsubrl
mov
lcall
pop
shlb
dec
jg
mov
adc
testl
insl
inc
mov
push
out
shll
push
stc
push
lret
int
mov
pop
in
shrd
mov
and
xor
std
push
test
mov
add
leave
inc
xor
jb
std
out
mov
mov
scas
mov
mov
jmp
or
stos
loop
mov
jno,pn
cmc
pop
cli
mov
xor
push
fcmovbe
leave
out
xor
scas
sub
outsb
push
add
les
mov
stos
pop
push
lds
fstpl
int3
push
jecxz
push
daa
pop
add
loopne
stos
xchg
mov
and
or
imul
xchg
loop
movsb
xor
jmp
fldcw
js
test
mov
xor
push
sub
cmpsb
inc
lods
sbb
lret
flds
lret
add
call
test
sbb
ja
popf
aas
mov
mov
inc
xchg
hlt
stc
aas
dec
in
clc
dec
fwait
mov
adc
ficomps
xchg
xor
je
nop
pavgb
xor
int
pop
movsb
jae
pop
push
ds
je
loope
xor
dec
xor
fidivrl
push
adc
push
dec
daa
mov
sbb
mov
addr16
mov
push
jge
aaa
mov
pop
ror
sub
sub
scas
ret
xor
mov
inc
push
cmpsb
daa
jle
outsb
and
loope
repz
adc
std
sbb
cli
push
popf
add
xor
xchg
scas
xchg
mov
adc
and
out
mov
lock
sbb
mov
mov
xor
add
mov
add
jecxz
cmp
xor
jo
shlb
aam
mov
jmp
imul
test
mull
mov
iret
iret
fabs
cmp
xchg
cmpsb
inc
lock
pop
jecxz
bound
lock
mov
enter
jne
cwtl
gs
ljmp
jbe
push
mov
shr
imul
cmp
lods
cld
push
xor
ljmp
movsb
dec
fistps
stc
imul
jecxz
iret
hlt
fbstp
das
stos
test
mov
jae
mov
ljmp
inc
imul
mov
xchg
cmp
lret
mov
pop
fmull
push
loopne
out
mov
mov
movsl
negb
jg
ljmp
scas
fwait
out
mov
cmp
pop
addr16
cmc
mov
sub
xor
xor
dec
cld
xchg
mov
scas
jmp
add
push
jmp
arpl
out
and
ja
mov
adc
or
aad
sahf
divl
scas
jecxz
inc
mov
insb
cmpsl
xchg
jb
and
test
ja
pop
jnp
arpl
jo
fmul
or
cmp
sbb
xchg
shrb
jnp
jbe
insl
into
xor
stc
push
out
mov
push
inc
pop
int
inc
jne
data16
jb
and
out
mov
xor
push
stos
or
fadds
adc
fs
rcrl
mov
hlt
add
or
fidivrl
add
fcmove
or
mov
jmp
loop
mov
pushf
mov
test
push
inc
mov
pop
dec
pusha
insb
je
shrl
jle
and
frstor
loope
insl
ljmp
push
jp
shrb
shll
dec
fstp
gs
jecxz
andb
pop
shr
ljmp
sub
mov
pop
mov
ficoml
xlat
and
icebp
xchg
mov
or
stc
mov
test
sbb
cmp
pop
sbb
or
mov
loop
pusha
pmaxub
outsb
subb
out
out
out
xor
adc
out
sbb
fildll
popf
jo
xchg
xor
mov
pushf
mov
clc
imul
into
mov
stos
ljmp
and
ds
or
es
dec
loopne
xchg
scas
adc
or
cmp
movsl
es
and
int3
stos
lcall
into
mov
mov
arpl
jp
mov
test
adc
or
jle
sbb
or
cltd
inc
dec
fcmovnb
int
xor
je
jb
sbb
jbe
adc
outsb
fcmovnu
in
mov
or
das
jb
cmp
jns,pt
fsub
ss
shlb
cmpsb
movsl
scas
rcrl
insl
jle
jecxz
idivl
adc
lret
mov
ret
or
push
clc
lret
or
mov
add
jp
inc
pop
ret
and
in
lret
or
rorb
clc
jle
sbb
dec
fsubrs
ja
jno
subb
out
in
xchg
lea
cltd
jne
dec
ljmp
jae
jns
leave
push
cli
pop
ljmp
jne
ja
cmp
out
pop
dec
mov
outsb
jp
jp
ds
mov
xlat
aas
cmpsl
test
sti
inc
pop
sbb
xchg
in
mov
loopne
and
mov
and
loope
hlt
jno
fisubl
lahf
adc
lret
mov
movsl
adc
orb
test
aas
push
push
mov
icebp
pop
and
out
and
addr16
data16
or
call
into
push
sbb
das
rcl
jne
pushf
mov
mov
sahf
dec
mov
mov
enter
dec
add
cmp
inc
adc
mov
pop
cmpsb
das
xlat
sub
xor
xchg
or
std
addr16
jg
or
sbbl
xor
loop
push
and
enter
es
xor
pop
cwtl
push
test
sbb
loop
or
or
sub
loop
xchg
int
pop
adc
loop
in
push
jecxz
or
scas
add
mov
loop
aas
or
in
movsl
cltd
push
dec
daa
cwtl
mov
mov
jmp
lahf
mov
fwait
mov
push
shll
cmp
ficoml
fmull
sbb
inc
div
mov
repz
es
fiaddl
in
clc
daa
mov
sbb
stos
inc
in
loopne
in
testl
loope
stos
sub
fbld
xor
mov
cmp
jo
pop
xor
or
cmc
sub
testl
icebp
pop
insb
push
mov
fwait
loopne
adc
cmpsb
repnz
loopne
lret
dec
shlb
mov
pop
cmp
test
enter
push
neg
pop
les
jmp
lea
arpl
cld
push
das
jg
decb
or
stc
push
sub
enter
incl
push
sahf
jb
in
gs
pop
pop
cmp
sbb
mov
push
sub
mov
ret
mov
stos
add
lcall
sti
dec
std
imul
ds
addl
aaa
pusha
inc
gs
shll
mov
movsb
iret
mov
shlb
mov
in
add
jbe
push
outsb
push
fdivrs
mov
loope
in
fucomip
or
dec
daa
les
out
lret
pop
bound
dec
notl
sub
icebp
sbb
push
fwait
adc
popf
out
xchg
je
pop
cmc
loopne
sbb
inc
dec
into
jmp
out
stc
ret
inc
pop
jo
jmp
stos
mov
sub
inc
fucom
int
rclb
adc
push
mov
into
sar
insl
out
and
sub
ljmp
sub
adc
repnz
ret
out
xchg
lcall
fisubs
and
jo
ret
sbb
push
shlb
outsl
or
mov
add
pop
mov
adc
xchg
sbb
push
lds
repz
sbb
rcl
sub
pop
fidivs
enter
mov
scas
fistl
xlat
into
or
hlt
lods
push
or
roll
and
loope
loope
jmp
rclb
loope
inc
in
xchg
flds
mov
pop
stos
dec
xor
push
push
lahf
popf
pop
movsl
and
jecxz
dec
aam
xor
xchg
aam
cwtl
inc
or
mov
icebp
lahf
pop
jmp
add
jp
ss
mov
frstor
push
mov
pop
fcmovb
sbb
hlt
mov
mov
add
pop
mov
cmp
push
cmpsl
dec
inc
loope
int3
push
enter
lret
mov
lea
pop
add
and
lret
stos
xor
xor
outsb
std
jle
lods
scas
and
cmc
push
xchg
mov
in
icebp
mov
lds
sub
sahf
xchg
shll
mov
fmull
fbstp
out
subl
push
lret
fdivl
cmp
push
cltd
cmp
fisubrl
iret
imul
ja
ljmp
and
and
adc
push
lock
hlt
fstpl
lret
hlt
imul
out
push
jbe
addr16
xchg
jmp
pop
lcall
in
sub
call
jmp
push
pop
xchg
iret
xchg
push
fcmovb
mov
lock
or
xor
lret
aam
fwait
or
cld
pop
mov
imul
xor
loope
scas
pop
cmpsb
sti
dec
shrd
pop
pushf
jnp
test
mov
scas
dec
jnp
push
xchg
fstp
push
jecxz
and
pop
gs
pushf
mov
jle
mov
inc
fwait
iret
cld
adc
mov
cmp
ret
cltd
mov
add
daa
lret
lret
nop
adc
das
f2xm1
rorl
push
out
mov
lock
outsb
jbe
xor
and
jge
jl
pop
push
insb
mov
or
js
fildll
fnsave
shl
push
shlb
xchg
pusha
mov
orl
inc
cmp
out
mov
cmp
mov
xor
jns
cmp
sbb
sbb
xlat
aaa
and
das
dec
sbb
pop
call
insb
outsl
out
and
ljmp
adc
mov
outsb
dec
jns
in
push
fst
ljmp
movsl
cs
loop
lret
fwait
sar
jg
mov
dec
push
sarb
adc
std
scas
push
repnz
jo
packuswb
fdiv
sub
ljmp
add
and
fwait
xchg
js
mov
push
mov
mov
mov
lret
fwait
jns
push
sbb
pop
jl
cmp
cld
lahf
out
clc
addr16
or
mov
jecxz
jne
or
adc
add
out
pusha
lcall
cmp
jb
shll
imul
and
pop
xchg
jle
insb
hlt
bound
mov
dec
jns
add
xchg
jmp
push
shlb
jns
or
cs
out
ret
add
mov
test
mov
cmpsb
int
jne
sub
fxch
test
shl
outsb
test
or
int3
daa
xor
push
icebp
aad
loop
sbb
sub
imul
jg
mov
mov
sbb
lret
pop
out
sub
sbb
xor
push
sbb
mov
push
mov
out
insl
jno
aad
adc
xorb
push
fstpl
add
fiaddl
jecxz
scas
cltd
or
dec
jl
daa
dec
mov
add
movl
into
push
jp
push
jecxz
mov
clc
es
rolb
or
cmp
sbb
xlat
mov
mov
repnz
jae
adc
sub
mov
arpl
lcall
jne
repnz
lret
psubb
ret
mov
rorb
cli
or
test
pop
mov
ds
xchg
mov
imul
mov
push
mov
jbe
mov
test
xchg
xor
mov
sbb
test
insb
push
out
ja
mov
testl
pop
arpl
sbb
sbb
scas
gs
push
sbb
inc
bound
inc
subl
push
lahf
pop
dec
jb
movsl
mov
jecxz,pn
xchg
shll
inc
sub
data16
movsl
int
into
jg
outsl
cmp
scas
push
popa
dec
aad
mov
push
or
fldl
push
mov
jle
and
sbb
in
sub
pop
lods
or
xchg
or
jmp
arpl
imul
ja
icebp
and
or
push
shl
out
mov
push
cltd
cmp
stos
cmp
or
xor
xor
cwtl
xor
xlat
rcrl
pop
or
arpl
clc
or
call
out
push
jmp
xlat
movsb
inc
out
in
sbb
data16
jmp
bound
push
stos
outsl
shll
aaa
mov
movsb
sub
xlat
mov
pop
pop
mov
mov
out
into
push
ljmp
add
or
or
leave
dec
cmp
js
or
sub
jmp
es
inc
pop
jnp
into
inc
pushf
add
fcoml
xor
jo
repnz
mov
and
pusha
add
jmp
sub
sbb
and
jno
das
jmp
xchg
jle
cmc
ds
sbb
cmpsl
repz
jns
push
call
mov
enter
sbb
lea
xor
mov
sbb
cmp
mov
call
lock
and
in
mov
jmp
pop
icebp
das
jl
push
sub
out
loop
adc
je
adc
aas
incb
scas
xchg
scas
jo
out
cltd
loop
jle
xchg
fldenv
hlt
jne
or
arpl
push
mov
scas
fcomi
mov
mov
or
sub
xor
jl
arpl
mov
xchg
pop
cmp
pcmpeqd
jb
jecxz
sub
jbe
lret
out
mov
mov
sub
out
gs
mov
sahf
fcmovnu
enter
and
fwait
cld
and
sub
push
jmp
jne
movsb
push
jae
inc
dec
out
daa
jecxz
or
les
sbb
mov
into
enter
fcoms
mov
fimull
int
je
add
mov
sub
push
cmpsl
test
imul
cltd
nop
out
add
sti
test
outsl
mov
rcr
xor
outsl
push
das
out
cwtl
xor
mov
pushf
fs
or
aaa
cmpsb
pop
mov
pop
mov
add
scas
std
pushw
lds
out
ss
out
xor
jnp
call
sub
xlat
jbe
outsb
push
int
das
sub
push
loope
loope
in
icebp
adc
mov
mov
cmp
jmp
jo
int
test
cld
fisttps
cmp
shr
nop
ret
push
call
mov
jo
dec
adc
icebp
jle
mov
xchg
cli
lret
dec
push
sub
cmpsb
adc
jns
dec
hlt
adc
and
out
std
jg
push
addr16
cmp
cmpsl
dec
push
pop
xor
inc
mov
mov
sahf
movsl
pop
sub
int3
stos
ffree
mov
ja
pushf
repnz
fmull
add
xchg
xchg
and
jge
cmp
fsub
mov
inc
out
pop
dec
sub
pop
aad
lds
push
push
or
into
loopne
cmc
or
push
add
movsl
sbb
lea
fprem1
ljmp
sub
je
divl
add
inc
push
dec
sub
dec
loop
inc
or
ds
cmpsb
pop
pop
fisubrl
in
sub
daa
lock
xor
js
jne
add
lcall
xor
xor
stos
into
data16
mov
mov
pop
sbb
mov
jg
and
cmp
test
jmp
xor
jecxz
and
push
test
or
call
sbb
sti
xchg
push
lret
mov
cmp
xchg
push
dec
and
aad
push
inc
mov
mov
mov
mov
call
int
mov
imul
cmp
xchg
cmc
xor
xchg
dec
jle
pop
inc
xchg
ljmp
repz
imul
mov
xchg
rcrl
sub
xor
sub
rcr
pop
jge
repz
mov
sub
scas
js
fmull
push
jo
out
lods
jmp
mov
cwtl
loope
push
mov
fsubrl
inc
push
sbb
inc
mov
mov
mov
popf
pop
call
lcall
pusha
inc
cwtl
and
test
fdivl
cmpb
cmp
in
cmpsl
ret
push
push
mov
and
sbb
sbb
sub
nop
popf
test
lds
fsubl
fcmove
mov
adc
jle
mov
in
push
sbb
test
mov
out
adc
xchg
iret
mov
faddl
push
les
mov
push
rolb
mov
lods
mov
scas
jecxz
adcl
sbb
cmpsl
push
aas
fmull
je
jmp
jl
jl
cmpsb
lret
arpl
jecxz
out
and
cmp
adc
ret
add
push
cli
push
pop
repnz
in
pushf
js
jge
adcb
add
clc
jl
ljmp
pop
lret
enter
xchg
push
mov
cmp
dec
jl
ror
or
push
loopne
loopne
dec
or
imul
in
xchg
xor
cmc
pop
jmp
test
sbb
insb
fisubrl
add
or
fwait
xor
jbe
dec
mov
loop
das
sbb
cli
scas
fiaddl
lock
fisubrs
sbb
add
push
sti
mov
cmpsl
mov
daa
in
in
inc
or
repz
data16
push
arpl
repnz
pushf
bound
outsl
jl
mov
insb
cmp
insl
push
xchg
xor
mov
jmp
adc
test
inc
adc
rcl
adc
iret
adc
fbld
gs
cs
pusha
out
mov
and
cld
xor
dec
leave
clc
rcl
dec
repz
outsb
std
jne
push
stc
pop
xorb
mov
test
sub
ret
das
dec
push
push
sti
idivl
sub
in
sub
lret
js
lahf
es
popa
ss
mov
xor
or
mov
add
or
andb
mov
adc
lcall
mov
push
repnz
mov
push
sbb
mov
lahf
pop
xor
dec
orl
insl
aaa
push
dec
sti
pop
pop
in
jecxz
add
jle
mov
pop
filds
sahf
cmp
pop
push
test
test
push
jo
mov
mov
adc
adc
pop
ret
out
adc
pcmpeqw
xor
and
or
mov
movsb
jnp
sahf
scas
pusha
mov
mov
ret
jno
popf
push
and
xchg
movsb
mov
push
insb
mov
mov
inc
notl
sarb
mov
mov
inc
push
out
mov
jo
mov
push
mov
cmpsb
std
or
or
pop
inc
das
pop
fadd
out
icebp
int
stos
dec
cmp
stos
jnp
rcll
out
out
or
lret
leave
inc
mov
inc
test
insl
insl
int3
inc
mov
insb
jmp
cli
lahf
push
loopne
add
mov
or
stos
add
push
sbb
arpl
xchg
cmp
inc
stc
movsb
aas
das
inc
push
sub
fs
mov
dec
pop
xchg
rorb
add
mov
dec
shl
imul
testb
mov
mov
mov
movsl
or
pop
jge
pop
jo
cmp
cltd
stos
popf
jp
aaa
jl
mov
xchg
jne
mov
out
icebp
jo
mov
pop
stc
lret
rorl
mov
xchg
lock
or
pop
ret
xchg
jl
out
es
in
sub
or
jg
and
iret
add
push
mov
fld
sahf
and
frstor
push
je
xchg
add
inc
not
dec
push
outsl
xchg
push
pop
testb
push
int3
aad
gs
pop
xchg
jmp
inc
jecxz
mov
sbb
push
fdivr
push
cmp
cld
addl
lcall
imul
insb
popa
idivl
adc
pop
lret
and
rol
push
pop
mov
repnz
rorl
insb
shll
dec
sub
and
popa
iret
sbb
bound
or
insb
pushf
test
loope
push
addr16
cltd
movsl
push
add
lret
jmp
pop
mov
sub
in
and
out
out
daa
sub
pop
sub
add
shrl
imul
xor
loope
ss
shrl
mov
movsb
xchg
push
div
or
mov
lahf
cmpsl
nop
jnp
xor
lods
mov
fnstsw
adc
mov
mov
xchg
mov
inc
sahf
div
jge
movsl
lret
jl
and
mov
push
subb
loope
mov
xor
jge
fsub
xchg
push
mov
jecxz
pop
mov
mov
loop
sti
lret
repz
xor
jge,pt
outsb
sub
inc
jae
xor
lret
mov
jb
arpl
bound
add
bound
popa
mov
pusha
xor
mov
lea
aad
adc
adc
adc
icebp
push
mov
dec
sub
aam
dec
adc
in
mov
ss
scas
add
mov
push
pop
insb
jae
jmp
clc
repnz
jecxz
push
shl
lds
iret
cwtl
jecxz
push
mov
in
bound
push
push
nop
test
in
loop
outsb
repz
sub
int
stos
pop
xchg
add
jecxz
or
lods
pop
sub
sub
sbb
loopne
lret
jmp
jg
or
loopne
dec
cmp
movsb
pusha
repz
sub
rcrl
jecxz
popf
mov
into
je
bound
add
and
cmp
dec
repnz
repnz
sbb
ret
dec
xchg
mov
icebp
jecxz
in
pop
lret
mov
jmp
jecxz
mov
aaa
adc
mov
mov
mov
xchg
stos
xchg
nop
loopne
gs
sarb
jecxz
mov
movsb
cmc
movsl
mov
in
mov
jmp
adc
push
jmp
out
sti
ret
jnp
aam
int3
fisttps
jmp
ret
lret
mov
out
adc
mov
dec
adc
xor
fstpt
pop
ret
ss
jo
into
jo
shl
mov
out
scas
ljmp
call
cmp
jecxz,pn
and
vpmacsdd
scas
aas
jno
sub
dec
loope
iret
cld
mov
gs
adc
sub
leave
ljmp
call
dec
ljmp
rcl
scas
mov
jns
xchg
cli
ret
cmp
jmp
lock
fisubrs
pop
xor
imul
ret
rcrl
cld
add
jp
scas
pop
cmp
addr16
imul
mov
out
adc
xlat
test
mov
movsl
adc
out
out
test
test
and
roll
and
mov
movsl
add
jnp
adc
xchg
outsb
add
in
pop
aad
imul
jecxz
ljmp
adcb
fwait
mov
inc
jecxz
lret
adc
jnp
mov
icebp
add
fnstsw
out
mov
jecxz
cli
fdivl
mov
fisubrl
cmp
ret
pop
fsubr
mov
xlat
mov
outsl
ret
cltd
jae
push
mov
adc
shl
pop
into
fnstcw
fcomi
in
mov
ja
jno
mov
mov
icebp
ret
subl
and
adc
pop
scas
pop
sbb
jle
aas
outsb
imul
lahf
add
dec
outsl
mov
adc
dec
push
arpl
mov
push
shrl
popa
and
ljmp
mov
mov
or
cmpsb
mov
push
push
xor
pop
icebp
outsl
pop
movsb
mov
dec
loop
shll
or
xchg
inc
dec
mov
adc
sahf
pop
sbb
or
inc
out
cli
inc
mov
ret
cmp
rcrl
xor
in
mov
je
in
xor
or
ljmp
and
sbb
and
popf
push
fnsetpm(287
sub
jbe
sub
shll
sub
lods
xlat
ret
stc
cmova
out
adc
fcmove
mov
decb
out
icebp
adc
jmp
int3
popa
sub
mov
xchg
mov
add
sti
in
mov
mov
or
arpl
push
idivb
repnz
imul
inc
ret
pop
mov
sarl
push
jp
incb
sub
or
jae
imul
jmp
fsubrs
inc
lahf
nop
cmp
fcmovbe
shr
mov
test
shll
test
xchg
out
frstor
loop
or
ret
xor
cld
mull
xor
xchg
xor
cmpsb
outsb
mov
jecxz
aas
shlb
das
cs
mov
in
enter
lret
mov
dec
mov
pop
out
test
mov
iret
lock
sbb
jae
add
loope
out
adc
shlb
jmp
fdiv
adc
enter
outsb
inc
pop
inc
lock
cmp
jecxz
push
out
xor
jecxz
bound
jo
pop
sbb
push
mov
shlb
out
add
popa
shll
xchg
jmp
mov
xchg
fsub
push
mov
pop
jmp
lods
out
out
sti
push
inc
jmp
jae
xorl
pslld
iret
push
or
rclb
arpl
pop
fcmovnb
ffreep
jne
mov
mov
jge
jae
inc
nop
jle
in
aas
dec
cwtl
addr16
out
loop
mov
es
sbb
adc
rcrb
mov
out
xchg
loop
test
cltd
mov
decl
mov
lods
lcall
or
inc
movsb
int
inc
ljmp
jmp
imul
imul
lahf
xchg
push
push
mov
inc
fisubrl
ljmp
adc
cmpsl
jle
pusha
mov
dec
sub
bound
lret
jns
stos
lea
push
ljmp
les
mov
mov
loop
jnp
xchg
and
sarl
loope
jmp
sarl
sbb
ljmp
cmpsl
das
rol
lds
ret
adc
mov
jecxz
mov
push
leave
xchg
shrl
nop
lods
stos
rolb
out
aaa
mov
hlt
pop
ljmp
call
out
jecxz
rorb
jle
in
jg
xchg
cli
cmpsb
out
jmp
mov
in
push
stos
movsl
lods
aad
push
movsb
cmpsb
mov
mov
loope
shll
pop
xchg
xchg
xchg
jg
push
cwtl
sub
and
or
subl
test
mov
mov
sbbl
xchg
jl
mov
mov
jg
movsbw
cmpl
fwait
jge
pushf
jg
scas
push
mov
nop
iret
or
fdecstp
push
mov
notl
les
in
jno
loope
mov
sti
mov
popl
mov
mov
jno
mov
iret
mov
xchg
mov
rcll
fstpt
out
sub
sbb
addl
mov
pop
arpl
mov
inc
popf
sub
scas
xchg
mov
adc
xchg
test
lea
imul
into
int3
mov
lds
popf
adc
enter
push
and
push
out
ds
inc
mov
iret
scas
in
ror
popf
mov
jecxz
icebp
adc
sbb
jl
mov
adc
outsl
shlb
mov
jle
dec
stos
pop
bound
addb
shl
mov
loopne
stos
dec
jg
inc
inc
pop
mov
sbb
xlat
xchg
pop
fcmovbe
fidivl
ljmp
add
addr16
insb
cmp
shl
jecxz
jecxz
je
rcrl
inc
dec
xchg
ds
jae
cmpb
pop
cmp
jmp
cwtl
lret
inc
cli
push
mov
xor
mov
loope
jmp
inc
loope
cwtl
test
gs
inc
fisttpll
add
push
scas
icebp
in
mov
xchg
les
or
push
lahf
jl
scas
int
mov
cmpsb
or
test
ret
fdiv
pop
add
ds
shl
mov
jnp
pop
outsl
scas
xchg
divl
int3
inc
nop
jmp
jmp
scas
ficomps
cltd
rcl
test
inc
mov
dec
loope
and
fwait
fwait
dec
push
fildll
jecxz
cmp
push
inc
cmpl
mov
cmp
divl
movsb
stc
jg
fsubl
incb
cmpsl
out
jnp
pop
inc
jecxz
mov
inc
xchg
pusha
mov
outsb
mov
pushf
aam
movb
jmp
lds
jecxz
ljmp
fwait
aas
stos
cmpsb
scas
mov
add
xchg
clc
lock
scas
and
push
shll
daa
gs
loope
iret
icebp
stos
arpl
repz
and
sbb
jecxz
rcll
enter
in
lock
rclb
and
push
or
in
lods
mov
mov
test
imul
sub
xor
cmpsb
xor
jle
and
cwtl
mov
fildll
push
clc
sub
arpl
sarl
xchg
into
sub
lods
jb
scas
repz
out
xchg
fistpl
mov
clc
addr16
jbe
jecxz
out
cli
jp
mov
mov
jle
cmp
jmp
fdivrl
xor
shl
mov
in
mov
pushf
or
aad
pop
push
rcl
push
data16
shrb
jb
mov
sbb
sbb
fwait
xchg
mov
sti
xchg
pop
jns
sub
xlat
lcall
cwtl
lods
push
cmpsl
ljmp
out
cmp
sbb
popf
cmp
push
push
repnz
sub
jmp
xor
and
or
icebp
mov
in
jecxz
push
push
mov
out
int
ret
adc
or
popf
movsb
icebp
add
xlat
xchg
sti
pop
jp
xchg
popf
jne
mov
ret
outsb
shrl
cwtl
dec
sub
fildl
jne
in
mov
out
push
add
cli
or
xchg
out
iret
jno
aas
jo
cmc
imul
adc
int3
mov
pop
out
jno
je
jl
int3
arpl
adcb
xor
xor
xor
data16
popf
dec
adc
mov
sti
lock
js
pop
push
lret
add
int3
je
mov
pop
fildll
test
xchg
test
inc
popa
stc
or
pop
sti
outsl
push
and
pop
mov
jl
into
jle
hlt
mov
jmp
bound
xchg
mov
sbb
or
in
push
icebp
add
rcll
cld
sbb
outsb
fildll
loopne
inc
dec
inc
mov
jbe
mov
xchg
ja
and
sub
or
lods
mov
movsb
push
cli
popf
mov
sbb
pop
leave
or
decb
mov
dec
int
mov
jmp
xor
xor
jbe
add
negl
xlat
lcall
xorb
out
jno
ljmp
pop
xlat
lcall
lods
xor
xchg
pushf
cli
sbb
inc
shr
jmp
sub
jo
int3
roll
lahf
xor
imul
mov
sahf
in
cmp
push
test
cmp
dec
fcmovbe
xor
and
inc
clc
xchg
test
xchg
lock
sub
call
pop
jge
or
or
sub
or
add
sub
push
mov
sti
push
and
clc
xchg
xlat
mov
jl
int3
iret
mov
das
cwtl
push
test
insb
adc
push
or
movsb
jle
xchg
mov
notb
hlt
jl
cmp
lret
cld
movsb
out
rcr
addr16
lds
ljmp
test
mov
mov
int
xchg
sti
adc
jp
lock
popa
push
test
sahf
jmp
adc
jg
jo
mov
leave
sbb
in
icebp
sub
in
fisubl
and
lea
cmp
push
mov
xorb
mov
scas
jb
out
outsb
cmc
xchg
or
loopne
xchg
repnz
cmpsl
xor
xchg
mov
ja
in
fisubl
out
or
negb
or
outsb
ja
xchg
in
fwait
or
stos
aaa
add
sbb
jbe
gs
movsb
fbstp
xor
sub
xlat
or
iret
repz
mov
in
adc
loopne
out
lcall
pop
loop
mov
ds
aas
xorl
xchg
in
adc
sbb
ret
into
data16
and
fildl
shl
lret
pusha
popf
push
mov
loopne
mov
cmpsl
xor
in
mov
jle
or
pop
scas
and
pusha
fmuls
inc
out
fistpll
pop
aaa
sub
bound
inc
ret
scas
fisttps
enter
push
movl
fs
push
jns
loope
jbe
insb
ss
xchg
jb
ret
pushf
vpsrlq
lea
sub
mov
movsl
adc
jp
cmpsb
lods
pop
push
inc
cmc
push
cmp
ja
cld
push
fistpl
jb
sbb
cmp
and
and
rcrb
in
bound
jne
cld
push
aad
push
add
push
mov
pusha
add
lahf
xchg
outsl
addr16
cmpsl
pop
aas
pop
out
push
scas
mov
into
call
mov
pop
hlt
xor
jg
iret
fsubp
inc
fnstenv
repz
fstpt
into
fstp
repnz
xlat
hlt
mov
js
lret
mov
cmp
addr16
jne
mov
aam
roll
fucomip
push
fbstp
repnz
subl
dec
test
test
fimuls
xchg
mov
xlat
or
scas
mov
inc
sti
mov
aas
mov
mov
cmc
ficomps
mov
out
lods
push
jb
stos
lods
pusha
mull
cld
cwtl
movl
sbb
out
fisubrs
outsl
iret
dec
and
push
fcmovbe
in
and
les
mov
je
xchg
popf
pop
and
add
xor
or
pushf
mov
shrl
jg
aad
and
or
add
lods
pop
ret
cmp
sub
imul
xchg
fldcw
mov
sub
data16
enter
mov
fwait
sbb
daa
loop
mov
jmp
lcall
and
ja
pop
pop
movsl
test
cmp
jle
xorb
xor
or
clc
pop
daa
push
xchg
cli
out
mov
pop
arpl
xchg
subb
xlat
mov
jmp
out
or
xor
jl
imul
mov
cli
mov
and
sahf
lret
jns
int3
fistpl
pop
subb
fcmovnbe
lcall
movl
iret
sbb
pop
cmp
loop
test
rclb
push
jnp
pusha
add
sarb
jmp
mov
rol
mov
ret
cld
push
xor
jnp
out
inc
jge
jno
xchg
jbe
xchg
sub
mov
mov
mov
scas
sub
ja
loopne
lods
mov
or
pop
dec
adc
jge
or
out
icebp
xchg
jno
shrb
mov
jno
sub
xchg
mov
in
mov
popa
test
add
iret
insb
xor
inc
jmp
lret
sub
das
lret
jp
fdivrp
mov
shr
fdivs
add
es
ret
out
ljmp
rcrb
fisttpl
leave
adc
or
icebp
scas
adc
mov
fisttpl
xchg
imul
iret
cmpsl
cmc
inc
lcall
jns
push
jl
mov
ret
imul
pushf
or
push
adc
cwtl
cli
jecxz
mov
out
fisubl
cmp
pop
movsb
sub
fidivrl
cltd
pusha
sub
and
mov
jecxz
sbb
outsl
jbe
lds
pop
mov
mov
add
adc
imul
mov
repnz
sti
mov
mov
xchg
inc
iret
rclb
or
lods
popa
int3
jecxz
sub
sahf
push
stc
and
lea
sub
push
sarl
push
out
jmp
lods
and
je
or
ljmp
movsl
lock
gs
repnz
adc
mov
loop
loop
ja
lea
gs
adc
jecxz
pop
sbb
xchg
fisttps
push
sub
cmp
divb
shrb
xchg
mov
shlb
jmp
cmp
gs
mov
adc
jno
fucom
pushf
shlb
xor
sub
xchg
adc
js
sbb
mov
inc
das
adcb
mov
xor
jo
out
int3
fbstp
ljmp
call
sti
jp
test
or
inc
ret
jle
out
shrw
or
and
fisubrl
out
mov
sbb
jnp
mov
int3
jbe
lock
push
sbb
dec
mov
mov
push
dec
xchg
dec
add
xor
daa
insl
les
hlt
arpl
xchg
lods
lcall
jge
pop
sub
jmp
jmp
out
or
jbe
dec
or
rcrb
imul
gs
and
pop
into
fisttps
adc
lods
das
cmp
push
pop
jne
dec
cmp
sub
lods
rcrb
in
mov
cs
sub
inc
int
and
imul
loopne
pop
stos
jb
iret
idivb
or
loope
mov
mov
mov
jne
jg
push
in
repnz
jbe
xchg
lahf
call
imul
ljmp
mov
sahf
lret
jecxz
cltd
fisubrl
mov
jge
ss
ja
adc
mov
adc
adc
arpl
or
and
mov
ret
outsl
jo
cmp
mov
sub
nop
cmp
loope
stos
stc
pop
cwtl
push
xor
cmp
ljmp
pop
fbstp
inc
rolb
xchg
pop
inc
icebp
pop
popf
notl
or
cmpsb
add
sbb
push
testb
jno
inc
xor
mov
imul
add
fbld
or
push
outsl
inc
push
mov
adc
mov
push
sbb
pop
inc
ffreep
mov
pushf
sub
ljmp
out
arpl
out
fcmovnbe
pop
shll
jno
mov
sahf
popf
cmpsl
scas
pop
outsb
xlat
ja
in
cmpsb
and
test
mull
jns
ficomps
adcb
xor
test
out
mov
stos
pop
cmpsb
pop
loop
not
mov
pusha
es
inc
dec
and
mov
iret
lods
fimuls
pushf
mov
ja
jmp
mov
int3
pushf
inc
jo
arpl
xor
daa
push
jns
into
movsl
dec
jge
jmp
and
dec
cmc
fnstenv
dec
out
shll
scas
test
and
in
pushf
imul
das
incb
pop
enter
xor
stos
push
dec
call
jecxz
inc
lock
sub
das
stos
je
mov
adc
or
and
test
inc
fbld
inc
xchg
pop
outsl
fucomp
fwait
or
push
mull
inc
cwtl
ss
jg
mov
aas
and
push
mov
sub
xchg
or
xchg
loop
mov
jle
stos
mov
xchg
rcll
inc
push
mov
in
sub
fsubl
stc
fldenv
nop
and
pop
jne
mov
movsb
jnp
fisttps
push
cmp
int3
and
out
xor
dec
sbb
pop
push
stc
push
in
or
fisubl
cs
jecxz
js
iret
or
jl
scas
adc
lea
jne
imul
lods
fildll
imul
ret
das
int3
pushf
jmp
shrl
fisubl
dec
shl
sti
push
fsubs
mov
jmp
stos
jne
jb
or
ljmp
jge
pusha
in
stc
and
jecxz
mov
mov
lea
loopne
enter
pop
sarb
arpl
mov
lods
ret
sbb
dec
imul
addr16
mov
pop
popf
pop
jne
mov
mov
jnp
pusha
in
js
mov
gs
fyl2x
jp
inc
pop
and
not
cmc
in
mov
outsl
and
mov
rcl
mov
popa
shrl
mov
push
sbb
push
mov
dec
imul
call
cmp
stc
jmp
movsb
stos
mov
adc
jg
pop
sub
das
adc
jecxz
xor
jne
add
mov
or
lock
fbld
loope
bound
sub
in
and
and
jns
adc
bound
cltd
mov
inc
std
mov
sub
das
fwait
je
ret
xor
mov
stos
mov
rolb
nop
fldt
stc
sti
and
frstor
cmp
test
pop
jbe
leave
jb
ja
or
push
jne
cmp
in
int
std
push
jns
test
pop
hlt
xor
mov
cmp
jbe
adc
lcall
xchg
jne
into
push
rcrb
pop
jne
mov
imul
iret
scas
jecxz
shll
je
xor
out
mov
insb
dec
ljmp
pop
jnp
stos
jg
jo
pushl
mov
sbb
dec
arpl
dec
mov
mov
cs
jae
add
cmpsl
int
or
cmpsl
mov
cmpsl
dec
out
cmp
mov
push
push
sub
mov
or
addr16
int3
shll
iret
xor
icebp
cld
sub
es
inc
outsl
rcrb
int
cmp
mov
mov
cmp
jb
out
ficoms
ljmp
adc
lret
mov
sub
adc
mov
data16
inc
and
mov
xchg
push
xchg
dec
addr16
jmp
test
mov
dec
cmp
sub
xchg
push
pop
out
arpl
push
lods
bound
mov
and
mov
jmp
call
cmpsl
inc
pop
outsl
lods
sarb
pop
sub
imul
std
aad
cmp
popa
rorl
jbe
lods
mov
lea
mov
push
lret
mov
xchg
sti
and
and
flds
and
xor
imul
scas
std
xchg
data16
or
aad
ljmp
adc
call
stc
shlb
cltd
push
pop
sub
dec
jo
insl
loop
push
shll
test
imul
pop
cs
ljmp
push
sbb
mov
xchg
adc
pop
out
mov
outsb
or
pop
jmp
arpl
jae
xor
jmp
jge
pop
icebp
jns
xor
mov
imul
xor
call
push
sbb
sub
sbb
or
jle
push
jle
xor
into
mov
cmp
dec
xlat
push
dec
mov
and
and
or
mov
sub
pushf
cmp
loop
sbb
mov
jecxz
add
mov
addr16
adc
stc
loope
loope
jne
mov
and
mov
push
or
dec
sbb
iret
and
fbld
mov
dec
jmp
xor
sub
scas
jnp
outsb
xchg
xchg
imulb
std
push
push
inc
mov
lea
or
popf
lock
mov
jne
and
jbe
adc
mov
inc
inc
mov
sub
lods
mov
dec
adc
test
xchg
xor
sar
jb
out
jl
xchg
fsub
jmp
outsb
int
push
shrb
push
orl
fldt
out
mov
jns
mov
mov
mov
sub
jne
mov
mov
fmulp
xor
add
int
mov
out
fidivl
out
iret
ja
outsl
mov
repnz
or
jecxz
mov
mov
cmpsl
cmp
out
xchg
outsb
cmp
jmp
push
and
jno
ds
icebp
loop
out
in
enter
stos
mov
and
fnstenv
sub
push
test
xor
addb
dec
pushf
mov
icebp
inc
fwait
pusha
sub
xchg
cli
mov
loopne
jge
dec
or
inc
in
push
xor
sub
jg
int3
push
mov
aad
hlt
sbbb
fwait
sub
xorb
or
add
imul
or
aas
mov
imul
add
cmp
jge
test
and
sub
jno
dec
fucom
sti
imul
ljmp
xor
mov
sub
imul
jne
test
fs
out
cld
jbe
push
pop
rcl
dec
inc
cmp
pop
gs
or
push
sar
xchg
inc
pop
sub
cmp
pushl
icebp
cmpsb
add
negb
testl
sub
outsb
sbb
jbe
ss
mov
pop
stos
and
loope
xchg
push
movb
into
orl
test
fwait
sub
jl
ss
sarb
inc
dec
mov
std
movsl
rorb
add
dec
mov
aaa
into
add
pushf
ret
fcmovne
mov
out
jg
mov
jle
in
mov
popa
lods
mov
pop
mov
adc
and
cwtl
sahf
arpl
out
inc
mov
jg
les
cld
mov
test
cltd
sub
int3
sbb
dec
daa
shr
and
mov
mov
or
mov
mov
ja
pop
sub
or
mov
push
enter
or
in
int3
rcrl
imul
mov
fistps
or
push
in
push
fistps
push
scas
arpl
inc
pop
push
cmpsl
arpl
inc
sbb
je
and
and
jnp
int3
and
mov
lret
insl
aas
add
fcmovnu
or
test
mov
out
aam
cli
xor
lret
sub
lods
imull
cmpsl
popl
adc
dec
cmpl
mov
outsb
mov
insb
jns
test
call
and
pushf
ja
jo
bnd
pop
stos
cmp
hlt
sub
jae
mov
gs
and
push
mov
inc
mov
ja
jo
pop
jo
repnz
in
ja
add
fimull
pusha
jle
jge
and
arpl
in
or
lods
push
dec
sub
sbb
inc
enter
and
pop
outsb
in
xor
or
jae
in
shll
or
int
lds
hlt
cmpsl
jne
in
add
scas
movsb
scas
ja
stc
jb
je
clc
jg
mov
std
xchg
movsl
adc
mov
xchg
push
adc
jl
mov
sti
jmp
or
push
push
mov
or
mov
enter
ss
fbld
dec
xor
add
jg
inc
fdivrl
imul
mov
js
mov
jecxz
push
cmp
xchg
mov
shll
test
stos
xlat
xor
mov
xchg
aad
lods
or
mov
pop
ss
cmp
pop
popf
mov
mov
imul
in
pusha
or
stos
or
dec
mov
daa
push
insl
fwait
dec
lds
fidivrl
lds
add
jg
push
hlt
aad
and
sub
push
push
in
or
popf
mov
jae
fcmovne
or
stos
insl
lds
gs
sbb
push
cmp
dec
aaa
lahf
je
add
jnp
jo
cmp
mov
pop
push
sti
jne
call
pop
mov
pop
insl
add
loope
jo
int3
stos
in
mov
inc
shll
jle
mov
imul
pop
mov
dec
loop
jne
out
sti
das
rolb
loopne
or
jmp
jle
shll
lahf
das
and
pop
xchg
inc
cmp
push
cpuid
cld
xor
inc
adc
and
ljmp
sbb
jle
dec
or
mov
icebp
adc
sub
or
lock
pushf
mov
cli
push
stc
dec
xchg
mov
ljmp
pop
outsb
inc
test
in
jmp
ljmp
dec
jp
das
mov
xchg
cmc
mov
testl
mov
adc
jmp
cmc
stos
dec
pusha
dec
mov
sub
lahf
bound
rolb
sti
arpl
dec
iret
lcall
fists
jae
dec
adc
xchg
pop
pop
pusha
fcmovnb
call
arpl
in
lock
add
sahf
inc
jl
mov
mov
insl
jo
jg
int
jmp
fwait
push
mov
imull
pop
push
or
bound
mov
mov
pop
jmp
lods
out
jecxz
jecxz
out
daa
mov
fdivrl
pop
test
add
xlat
add
rorb
out
stos
int3
sub
jne
stos
inc
imul
popa
sbb
sub
and
push
push
xchg
mov
and
push
inc
scas
adc
xchg
cmp
fwait
jmp
lds
jb
insl
fidivrl
sbb
test
xchg
stc
iret
inc
addl
andl
or
in
mov
xor
rcl
test
push
sbb
cli
xchg
imul
xor
movsl
imul
in
push
and
ret
fsub
fldcw
test
je
jecxz
jo
mov
imul
sbb
or
outsl
mov
sub
dec
leave
cmpl
inc
mov
fcoms
sub
cwtl
popl
cwtl
aas
out
into
fwait
dec
xchg
cmpsb
dec
mov
jge
inc
dec
ss
daa
add
jmp
dec
imul
add
xchg
inc
dec
mov
push
lcall
hlt
sub
or
das
jnp
mov
rcll
or
jg
sarl
and
pop
and
into
outsb
adc
jbe
jg
dec
and
mulb
movsb
outsb
inc
jge
insl
and
mov
mov
pop
in
or
andl
xbegin
pop
shll
jae
std
jp
scas
jecxz
idiv
push
add
popf
mov
or
popa
push
jae
lahf
or
fildll
push
mov
and
jecxz
fsubrs
fldt
data16
in
mov
lods
mov
or
scas
pusha
jmp
inc
les
test
fs
add
mov
out
pop
cs
mov
sbb
cmp
les
loopne
lret
aam
fsub
cmp
inc
aaa
cmp
jg
xchg
mov
fidivrl
repnz
mov
mov
in
aam
jo
addr16
lea
add
into
call
push
cmp
adc
pop
inc
jb
sub
in
fneni(8087
in
mov
scas
pop
int
jb
jecxz
pushf
or
aaa
pop
jb
std
mov
jne
xorl
mov
fwait
data16
sbb
add
lds
xchg
jo
out
clc
xchg
lcall
xchg
ljmp
pop
into
or
mov
xchg
mov
push
jno
icebp
pop
push
fstpl
das
add
in
pop
fwait
inc
pop
std
mov
addr16
test
fisttpll
loope
jl
in
mov
xor
cmp
jle
sub
sarw
push
scas
inc
xchg
lcall
xchg
push
into
enter
pop
mov
push
icebp
fcomps
sbb
out
jecxz
shl
mov
mov
ljmp
jno
inc
mov
imul
mov
sti
and
push
dec
aas
mov
fmull
rcr
ss
push
movsb
push
dec
mov
mov
xchg
and
aas
jecxz
cmp
fistps
jg
andb
lock
mov
and
sahf
xchg
mov
mov
jge
cmp
jns
mov
mov
jne
pop
jle
mov
cmpsl
mov
mov
clc
lods
mov
call
mov
stc
add
and
sbb
scas
sbb
mov
dec
and
out
adc
mov
pop
mov
mov
xor
cmp
jl
inc
jecxz
shl
out
rcl
in
movsb
addl
xchg
mov
loopne
lods
add
sub
out
shl
mov
add
enter
cs
push
fidivrs
sbb
mov
loop
dec
pop
jno
data16
mov
out
mov
lds
jmp
adc
sti
mov
shl
fucom
es
out
rcrl
or
lahf
test
add
lcall
sub
rcll
imul
mov
lods
stos
push
sub
push
sbbl
cmpsl
jne
shll
lods
cmpsl
fidivrs
sub
lock
in
mov
shl
fcmove
scas
fistpll
in
fldcw
jno
icebp
movsl
xor
cmpsb
stc
shrb
jle
sub
jmp
in
idivl
cmp
pop
inc
inc
cld
dec
decl
in
outsl
stos
xor
lock
adc
jg
loope
fnsave
movsb
lea
dec
mov
pop
mov
xor
cmpsl
lahf
bound
lock
mov
fistpll
filds
hlt
mov
call
mov
aad
out
xor
cltd
add
mov
hlt
or
and
push
push
sub
scas
mov
dec
pop
lea
iret
pop
out
adc
cmp
mov
or
sbb
sub
or
and
or
cmpsl
or
xor
rolb
jl
jmp
sub
inc
dec
icebp
lcall
enter
loope
fisubl
movsb
cltd
or
int
dec
lods
pop
xchg
xlat
mull
or
and
mov
sbb
dec
push
jg
aaa
mov
add
mov
filds
arpl
movsb
mov
arpl
jecxz
movsl
mov
jmp
fistps
in
pop
out
and
scas
push
sarl
iret
and
jg
adc
add
repnz
pop
add
jl
aaa
inc
and
xchg
scas
xor
pop
mov
xchg
stos
jecxz
cwtl
inc
add
out
mov
ljmp
loope
inc
dec
push
fbld
nop
lret
xchg
cli
cltd
sbb
add
fcmovnb
out
sub
mov
xor
clc
add
movsb
cs
mov
sub
adc
pop
and
fwait
lret
sarl
popa
repnz
test
jno
add
dec
shll
cmc
sbb
or
insl
lcall
std
out
aas
insb
repnz
jg
sbb
mov
out
xchg
pushf
ss
jge
or
das
xor
setnp
adc
jmp
push
cs
fdivl
ljmp
push
sub
jg
or
outsb
mov
cmp
jle
out
mov
mov
iret
lcall
lret
orl
mov
int3
push
sub
notl
lret
lods
ret
test
dec
int
aas
out
fcomi
inc
and
or
stos
idivl
jne
fmul
in
fdivrs
sbb
adc
jnp
out
jg
pushf
xor
in
mov
pop
mov
mov
enter
sbb
adc
push
lret
cli
lcall
scas
sub
and
fidivl
xlat
mov
push
ret
mov
lret
into
stos
pusha
std
lods
cmpsb
iret
sub
adc
addr16
jp
ljmp
pop
mov
fistps
pop
and
add
loop
imul
or
fwait
repnz
adc
push
fisubrs
push
and
test
enter
cmp
lds
dec
cwtl
pop
or
arpl
push
add
fists
mov
fldcw
pop
inc
jp
jmp
or
sbb
arpl
outsb
push
cmpsl
dec
pop
sets
and
or
stos
mov
inc
sbb
inc
int3
bound
mov
loopne
adc
inc
rcrb
cmp
sti
inc
stos
fsubs
movsb
loope
inc
xor
gs
ffree
jbe
in
rolb
aad
hlt
jge
loope
or
sub
lds
or
jg
stos
and
xor
insl
mov
jp
mov
pop
outsl
dec
aam
lahf
mov
cmp
rcrb
dec
add
mov
cld
inc
rcll
sahf
lahf
clc
test
sar
ljmp
lret
and
mov
popa
sahf
and
loop
pop
repz
jg
rorb
jmp
push
mov
sub
sti
mov
scas
imul
pop
out
cmp
into
jle
xchg
lea
mov
dec
and
js
jo
fsubs
lret
xor
jne
in
add
bound
andb
mov
jle
xchg
stos
les
leave
cwtl
xor
xchg
push
mov
mov
xlat
frstpm(287
gs
bound
adc
mov
mov
mov
mov
insl
outsl
out
in
pop
cmp
push
es
jae
mov
cmc
cmp
lods
out
nop
and
xchg
mov
repnz
and
shr
jmp
testb
sbb
add
ljmp
mov
push
imul
or
test
inc
pusha
push
orl
pop
js
mov
adc
test
loope
and
out
lds
jg
inc
cmp
jle
insl
xchg
clc
outsl
cmp
imul
lcall
imul
lock
adc
mov
out
aam
mov
imul
xchg
mov
test
jae
adc
lret
sbb
lods
daa
mov
shlb
push
mov
jmp
and
sub
dec
pop
in
ss
or
or
fs
ret
outsb
bound
lcall
arpl
lret
push
scas
xor
jmp
add
cmpsl
aad
push
gs
inc
lcall
dec
out
imul
data16
push
jnp
inc
jmp
gs
es
jmp
mov
cli
outsl
cwtl
je
jmp
and
das
push
dec
or
je
sub
pop
adc
jge
and
test
jae
or
insl
ds
jecxz
call
ss
pushf
data16
dec
add
inc
sub
iret
nop
pusha
fistpll
cmp
fidivs
mov
jbe
int3
push
lea
inc
imul
sub
out
mov
jae
dec
mov
addl
add
pop
sub
sahf
push
pusha
xchg
data16
mov
xchg
popl
in
fists
jge
movsl
sbb
fidivrs
mov
add
cmpl
stos
mov
clc
jo
fscale
xor
xlat
xor
and
in
stc
ljmp
mov
inc
sahf
aad
stos
inc
imul
xchg
adc
scas
lret
inc
mov
jo
adc
pop
lock
sbb
mov
data16
jle
mov
push
sub
push
int3
mov
jo
add
movsl
pop
mov
pop
jle
lahf
icebp
xor
mov
es
and
inc
push
fnsave
jge
pop
jns
data16
mov
pop
negl
fisttps
push
out
aas
fmul
mov
adc
test
arpl
cmp
fwait
sub
iret
shll
imul
cld
or
in
insl
mov
imul
xchg
xor
adc
stos
mov
jno
dec
mov
inc
out
sbb
ret
outsb
aad
inc
xor
adc
not
gs
js
test
jmp
inc
pop
enter
xor
test
lret
lods
js
enter
mov
stos
xchg
rcrb
idivl
sahf
add
pushf
adc
mov
into
cmp
add
dec
jno
pop
stos
jnp
xchg
push
in
mov
sti
jb
arpl
cmpsl
enter
loope
out
stc
add
mov
sti
xchg
jo
out
mov
mov
sbb
cmp
mov
add
cmpsb
cmp
out
xchg
lea
adc
into
lcall
shl
cltd
mov
push
out
in
jg
stos
dec
ja
add
dec
mov
sub
and
jle
cmpsb
das
imul
jbe
ficoms
pop
pop
mov
dec
popa
cmp
or
aaa
dec
scas
inc
dec
lods
push
push
pushf
pop
ret
pop
or
sub
cmc
and
cltd
sub
mov
mov
jecxz
imul
pop
pusha
in
xor
jecxz
and
call
imul
shlw
push
jns
mov
add
mov
xchg
dec
mov
mov
fisttps
push
dec
dec
lock
or
out
arpl
xchg
pop
and
inc
cmp
lock
pushf
imul
fsubl
sub
inc
inc
stos
pop
lahf
pop
sbb
xor
xor
repnz
pushf
mov
stos
ja
push
jbe
shl
and
sub
fsubrs
fs
loop
and
and
mov
adc
call
icebp
push
mov
in
into
mov
out
stos
cmpsl
xor
pusha
iret
fdivl
adc
dec
test
cmc
sbb
loope
out
notb
inc
rcrl
imul
bnd
mov
test
mov
lret
mov
and
pop
stos
pop
or
enter
test
xchg
les
ds
movsl
dec
fnstsw
add
xlat
fs
fists
mov
mov
fwait
cmp
mov
loopne
push
loope
cmpsl
add
xor
dec
in
add
mov
inc
stos
les
iret
cwtl
lahf
cmp
in
shlb
xor
sub
inc
xor
testl
rcll
shll
or
outsl
jl
test
mov
jle
jl
ljmp
in
cmpsl
xchg
xor
xor
push
pop
into
pusha
jecxz
inc
jns
sbb
insb
mov
dec
add
int3
cmpsb
add
jmp
jge
inc
adc
testl
jecxz
mov
inc
sub
lret
out
pop
bound
push
adc
push
or
js
addr16
js
mov
rcrb
sub
adc
enter
adc
add
les
pushf
push
add
imul
mov
lret
lcall
mov
fiadds
add
loop
xlat
or
sub
sbbl
loopne
cmp
cwtl
bound
lds
and
xchg
aaa
push
movsb
pop
out
fildll
mov
pop
scas
inc
mov
shl
jg
in
dec
mov
add
or
adc
pop
outsb
arpl
push
mov
rorb
and
mov
sub
mov
stos
rclb
cmp
lcall
out
adc
inc
mov
adc
cmp
fs
adc
add
aad
addl
pop
xchg
out
jle
add
loope
mov
insb
add
ret
cmp
pop
jecxz
outsl
ljmp
mov
jecxz
por
loope
ror
iret
fbld
pop
xlat
out
mov
insl
test
fisttpl
sub
xchg
stos
std
test
std
inc
popf
rcrb
stos
dec
ret
and
out
mov
lds
icebp
movsb
das
sbb
inc
sbb
jbe
push
sysexit
shrb
subl
shrl
outsl
mov
pop
mov
sbb
into
in
jecxz
out
movsl
cmp
jge
adc
and
dec
lea
data16
dec
jae
in
xor
jl
xor
adc
cmc
jae
lods
sti
mov
shl
aaa
xor
mov
or
sbb
add
add
mov
adcb
mov
repz
outsb
xor
outsb
int3
in
bound
js
cmp
mov
lcall
hlt
mov
bound
insb
enter
andb
dec
or
or
mov
stos
fwait
xor
dec
mov
mov
out
or
dec
imul
loopne
lahf
es
testl
inc
add
paddsw
mov
push
jbe
or
ja
aam
jle
add
rorb
jno
mov
jecxz
or
pop
cmp
cmp
clc
rorb
out
inc
pop
insl
or
jmp
cwtl
or
mov
das
push
jp
push
cwtl
test
jecxz
stos
aaa
jne
test
int
shlb
sub
not
mov
xchg
fwait
xorl
push
test
push
add
xchg
out
jbe
addr16
fs
cmp
mov
push
jb
scas
sbb
add
into
push
sub
repnz
jae
aam
nop
jmp
add
out
iret
add
sti
leave
push
jecxz
jg
lea
in
mov
hlt
rolb
jb
mov
mov
shlb
fnstsw
cmpsb
aas
mov
xor
dec
mov
xchg
or
es
sbbb
mov
aad
lods
sub
sahf
aas
sub
add
jne
push
mov
lods
sub
fldenv
sbb
jg
pop
rolb
and
xchg
imul
add
cli
jnp
stos
imul
loopne
leave
xor
xchg
inc
out
cmpsb
lods
mov
insb
outsl
bound
ret
fsubrl
add
mov
jge
mov
jp,pn
sub
push
loop
inc
mov
xchg
push
xchg
pop
or
repnz
pop
cmp
insb
pop
mov
push
jno
shrl
or
xchg
cwtl
setl
ret
dec
stc
les
stc
jecxz
popa
dec
dec
outsb
ja
xbegin
daa
lret
enter
jecxz
outsb
mov
imulb
jmp
sbb
movsl
negl
xchg
or
imul
jecxz
insl
ds
dec
movsl
xor
and
sti
mov
hlt
orl
in
cmc
fnstsw
mov
out
scas
outsl
add
xor
into
iret
sbb
pop
outsb
fidivs
std
push
adcb
int3
or
mov
and
xchg
jmp
loope
inc
lods
cmc
dec
sbb
mov
fistpll
aam
push
sub
mov
inc
out
xor
mov
mov
fmul
sbb
arpl
nop
in
daa
ret
leave
rcll
popf
imul
adc
add
push
cmpb
subb
cmp
int3
jp
inc
xchg
out
pop
js
mov
lods
lret
xor
xchg
hlt
scas
rcr
jmp
lahf
mov
jmp
lock
mov
and
mov
jo
xchg
fdivrl
ficomps
jbe
loop
xorl
stc
ds
cli
jne
sub
mov
lock
daa
add
push
cmpsb
fs
fldenv
or
mov
pusha
adc
xor
call
add
das
cli
cmp
outsl
and
stos
loopne
mov
aam
mov
cmp
ret
ret
xchg
in
popa
fsub
stc
adc
sub
sub
mov
insb
lcall
fisttps
rolb
int
imul
xor
jecxz
sub
cmc
pop
pop
xchg
mov
call
push
jnp
das
mov
jmp
and
icebp
xchg
mov
mov
mov
psubsw
pop
movl
sub
arpl
mov
dec
outsb
arpl
or
shlb
sbb
or
dec
xchg
fildll
cwtl
lret
sbb
add
sbb
jecxz
lea
adc
gs
fs
mov
cli
mov
and
outsb
xchg
push
out
test
sub
out
lods
fbstp
sub
test
dec
lea
in
loope,pn
or
push
jmp
out
int
xlat
xchg
loop
bound
aaa
ror
jg
out
mov
out
jb
icebp
jmp
ja
out
or
or
xchg
repnz
sub
jae
fildl
test
add
mov
sbb
movsl
dec
or
mov
adc
not
icebp
or
clc
clc
mov
test
repz
lods
scas
jb
addr16
and
sub
add
movsl
pop
add
mov
fnsave
aaa
test
movsl
jecxz
adc
cli
es
fcmove
je
inc
jbe
xor
imul
mov
push
pop
push
xor
sub
jg
out
hlt
jge
icebp
sbb
push
or
xlat
sbb
mov
imul
jb
stc
jecxz
add
cltd
xchg
shrb
dec
sbb
pop
dec
cmp
sub
push
call
jle
mov
add
mov
shr
stc
imul
mov
jmp
clc
inc
fnsave
mov
xchg
aad
jnp
and
pop
lret
sub
xchg
shrb
pop
fisubrl
and
mov
or
in
jmp
xor
lods
out
mov
push
stc
mov
and
fucomp
xlat
xor
imul
xchg
iret
arpl
in
ret
dec
out
jecxz
fists
xchg
mov
cli
js
aaa
mov
cli
fwait
test
push
loopne
ret
mov
or
mov
inc
xlat
and
sbb
pusha
clc
aam
shrb
ficoms
sbb
out
xchg
or
adc
sub
jmp
mov
add
arpl
push
iret
or
xchg
pop
sub
xor
cmp
push
jo
mov
lds
aad
add
fs
and
lods
jo
xchg
out
mov
push
push
cwtl
and
mov
cmpsl
cli
imul
cmp
imul
test
mov
outsl
iret
xchg
jae
dec
pop
cli
add
fldenv
fldl
or
inc
push
ficomps
inc
lahf
popa
jecxz
popf
push
movsb
iret
jle
dec
lock
mov
and
stc
dec
jp
loop
adc
xchg
pop
mov
push
fucomip
gs
loope
jmp
mov
xchg
inc
jns
jns
mov
pusha
fsubrs
jo
loopne
push
out
sub
xor
push
mov
jg
mov
test
jmp
loopne
xor
stos
ja
push
out
out
fistpll
sub
push
pop
cmp
mov
jle
cmp
mov
mov
mov
ds
jmp
lea
and
push
pop
and
dec
loop
dec
aas
ljmp
xchg
into
insb
subb
pop
std
lret
outsl
mov
ret
out
repnz
addb
std
sbb
xchg
shrl
clc
js
push
loopne
icebp
pop
loop
stc
loopne
sar
sbb
iret
cmc
xchg
ret
mul
cmpsl
in
cmpsb
xor
mov
cmp
and
lcall
push
mov
loope
sti
dec
mov
ljmp
stos
in
movsl
pop
cmp
fldcw
pcmpgtw
dec
push
in
mov
pushf
dec
out
pop
into
scas
inc
test
fucomip
lock
mov
scas
pop
or
popf
fadds
imul
sub
mov
adc
xor
and
lahf
mov
ljmp
lods
imul
call
mov
pop
pushf
lds
shl
mov
test
fdivrs
int
addb
and
hlt
xor
xchg
outsl
or
mov
or
movsl
jecxz
loope
pop
iret
mov
xor
bnd
mov
cli
jbe
sbb
stos
dec
loopne
call
and
aaa
loop
or
or
clc
add
popa
pop
ja
pop
mov
cltd
add
repnz
inc
mov
jnp
sub
cmp
inc
test
xchg
imul
or
test
mov
mov
inc
movsb
fisttps
or
mov
fbld
or
jle
sbb
rcll
pop
in
movsl
dec
repnz
cmpsl
mov
mov
shlb
movsl
jecxz
andl
outsl
push
pop
adc
add
lret
sub
jecxz
mov
das
jg
sub
pushf
jo
cmpb
add
cwtl
jle
sub
rcl
movsb
ret
xor
sbb
mov
xor
cmpsl
or
test
jno
es
out
dec
daa
mov
cmp
dec
mov
mov
mov
lods
icebp
in
in
mov
xchg
popf
mov
add
jbe
clc
into
mov
fwait
jae
jo
jecxz
fcompl
push
test
int3
mov
ret
or
and
sub
les
dec
movsl
push
jg
in
das
sub
pop
cld
cli
hlt
fwait
mov
in
lods
jl
cmp
push
stos
aas
or
pop
rcll
jmp
fildll
jae
sub
pop
and
scas
and
rorl
mov
movb
out
ljmp
mov
pop
xor
in
adc
fsubr
or
lea
cmpsl
xchg
insb
and
adc
cmpsl
mov
adc
xchg
mov
int
pop
cmp
xor
nop
mov
loop
sti
ljmp
std
hlt
and
sbb
mov
iret
test
jmp
xor
sbb
int
int3
fwait
jmp
push
mov
fdivrp
or
push
out
mov
add
sbb
stos
pop
pop
fcoms
cmp
cmpsb
aam
or
xor
add
test
xor
insl
jmp
push
jle
call
rcl
cmpsb
cwtl
notl
lods
push
or
jge
cmpsl
test
sbb
jp
jb
jbe
xor
leave
enter
loop
movsl
call
imul
mov
pop
add
test
pop
jns
or
bound
ss
ljmp
pop
push
push
enter
add
dec
jle
xor
or
cs
popf
cld
jg
mov
bound
jmp
pop
lcall
arpl
movsl
leave
testb
rclb
adc
jg
cmp
out
sahf
add
lret
in
scas
shlb
cltd
and
icebp
mov
cmp
rcl
mov
rorb
jne
into
arpl
ret
inc
stos
mov
and
clc
bound
lahf
loope
sahf
lret
xchg
negb
fists
pop
jmp
stc
add
test
outsl
scas
mov
jno
pop
cli
xchg
je
mov
fildll
mov
mov
jmp
addl
cwtl
push
and
pushf
mov
adc
dec
fadds
fisttpll
mov
cmp
call
int
aas
or
test
sbb
inc
sbb
ret
in
dec
mov
sbb
mov
sbb
cmc
ret
cmp
mov
push
mov
gs
jle
mov
testb
push
xchg
les
in
dec
mov
jb
loopne
ljmp
icebp
inc
xchg
mov
scas
mov
scas
cmp
out
push
lock
mov
popf
ja
sub
push
leave
ffree
out
lock
push
in
leave
mov
inc
test
jnp
cmp
dec
mulb
jnp
mov
mov
loope
or
add
xlat
mov
imul
sub
shr
imul
mov
push
jle
je
std
cmp
outsl
jae
mov
movsl
cwtl
sub
fprem
les
sti
jns
fwait
les
adc
lret
pop
ljmp
and
ret
ret
rol
mov
xor
mov
push
xor
outsb
sbb
popw
xor
popf
ret
dec
cmpb
movsb
out
rcl
out
icebp
push
or
pop
push
movsl
sub
ljmp
sarb
mov
and
fnsave
outsb
lcall
pop
jmp
jmp
arpl
push
gs
jmp
sbb
psrlw
mov
mov
xlat
and
stos
mov
pop
mov
imul
scas
aad
ljmp
mov
sbb
das
bound
sarb
inc
cmpsb
mov
insb
adc
mov
shlb
pop
cmp
test
push
mov
adc
jbe
mov
adc
mov
lret
xor
fstpl
clc
push
aaa
ret
mov
lret
cmpsb
ficompl
xchg
rcl
or
mov
add
test
das
std
stc
call
dec
outsb
jmp
daa
xor
push
lods
mov
arpl
in
mov
fcomps
jne
xchg
mov
xor
add
iret
pop
add
outsl
testl
cmp
mulb
mov
call
sbb
decb
mov
sti
pop
outsb
mov
aas
mov
mull
mov
sti
push
sti
sti
inc
sub
mov
cld
ficompl
test
pop
sbb
sbb
jp
mov
pushf
or
inc
clc
adc
cld
rclb
push
in
xchg
gs
sub
mov
pop
jb
jle
cmp
xchg
movsl
xor
mov
mov
ret
or
dec
aad
mov
out
stos
call
scas
inc
iret
cld
add
mov
jle
cwtl
cmp
movb
push
jnp
mov
sbb
inc
aam
sbb
adc
xor
jle
lret
sti
xor
or
xchg
popf
test
in
ljmp
pushf
cmc
imul
jmp
lcall
arpl
lods
enter
lock
mov
call
das
mov
arpl
dec
rorl
imul
jmp
pop
outsl
test
aas
popf
xchg
mov
sub
xlat
mov
bound
scas
fstpl
pushf
stos
popf
mov
shrl
std
outsb
and
jmp
popf
cmpsb
xor
cmp
add
cmp
mov
in
adc
paddusb
daa
mov
gs
push
and
mov
and
mov
inc
sti
xor
mov
pop
sbb
mov
xchg
add
fsubrl
addr16
add
adc
cmp
inc
cmc
sub
mov
dec
mov
icebp
outsb
movlps
xor
fmull
add
insb
insl
jbe
jb
ljmp
es
enter
clc
and
fbstp
mov
xor
incl
and
rcrl
imul
sti
or
popf
adc
sub
push
or
mov
pop
sub
adc
dec
pop
clc
lcall
xchg
sbb
sub
adcb
lret
scas
and
shr
stos
fcmovne
mov
repnz
push
or
negl
add
popf
mov
jb
cmp
push
clc
jg
insl
push
enter
mov
call
and
sbb
mov
mov
stos
loope
inc
sub
sub
add
loop
in
test
ja
sti
mov
dec
xchg
cltd
jge
mov
insl
xchg
fwait
adc
mov
mov
push
enter
js
test
rorl
push
cld
mov
sub
xor
jnp
sub
in
sub
stos
and
cwtl
jno
xor
int
out
pop
xchg
or
push
inc
cs
mov
enter
daa
out
aad
sti
ret
lahf
cli
sbbl
sbb
rolb
jo
dec
shrl
in
xor
mov
movsb
int
stos
inc
add
push
pop
arpl
jne
movsb
mov
stos
les
and
and
pop
sbb
cltd
push
inc
outsl
add
jmp
ret
imul
add
push
jl
cmpb
mov
pop
or
push
mov
sub
lret
push
xor
test
jns
jle
jl
dec
dec
in
stc
and
mov
and
mov
or
jl
cwtl
pop
daa
pop
cltd
adc
jge
arpl
insl
data16
sti
dec
lea
es
xor
inc
mov
cs
mov
mov
sub
xchg
cmpsl
jno
jns
mov
repnz
popa
out
xor
xor
std
add
lea
and
rorl
mov
outsb
mov
or
in
lods
mov
mov
or
fcomi
xchg
sbb
in
pop
lods
scas
cmp
mov
int
out
aas
data16
push
mov
mov
fwait
das
fwait
iret
std
pop
int
cmpsl
iret
imull
icebp
mov
popa
int3
psrlq
addr16
int3
pop
sti
cmpsl
mov
jmp
outsb
sub
xchg
popa
fstpl
hlt
shr
in
sub
scas
ret
negl
jo,pt
pop
out
rorb
cmp
cwtl
add
into
loope
pop
push
ret
xor
dec
in
data16
jmp
mov
stos
aad
fstp
out
push
jg
shll
push
aaa
pop
dec
cmp
aad
xor
icebp
or
jne
push
test
lods
arpl
pop
jg
outsl
push
subl
loopne
push
mov
rcrb
lods
push
jecxz
sbb
push
loope
cmp
enter
xor
stos
sbb
dec
cs
imul
orl
movsb
mov
scas
adc
jge
jmp
enter
mov
jb
jno
clc
jbe
outsl
les
stos
call
sbb
pusha
scas
popl
mov
mov
pop
mov
fsts
daa
or
lahf
cmp
icebp
inc
out
fistpl
lods
or
movsb
loope
pop
divb
mov
jecxz
scas
push
out
lret
lock
jmp
es
push
mov
jmp
mov
outsb
bound
mov
dec
lcall
fisubrs
sub
ljmp
mov
jmp
fwait
cld
mov
ljmp
out
and
inc
imul
inc
mov
gs
rcrb
mov
mul
jecxz
mov
mov
xchg
mov
add
dec
cld
mov
adc
loope
pop
add
push
imul
and
out
dec
out
xor
loop
dec
out
mov
mov
rcll
jecxz
sub
jne
scas
xlat
jmp
icebp
rorl
sbb
lret
fistps
lcall
dec
leave
into
xchg
sbb
sbbb
mov
and
clc
xchg
pop
test
mov
sub
out
mov
mov
ja
loop
bound
fisubs
push
push
mov
lds
lret
jmp
adcb
arpl
xor
stos
push
sbb
addr16
lcall
sub
push
rolb
dec
outsb
pop
or
pop
rclb
scas
movsb
sub
je
rol
lcall
imul
sub
jge
cmp
cs
loop
and
jecxz
loopne
dec
imul
rcrb
fsubrl
mov
cmc
fs
out
jg
out
ljmp
cmp
mov
push
imul
push
pop
call
vpsubusb
and
xor
je
jmp
jecxz
or
outsb
out
sbb
clc
sub
mov
push
les
jge
xchg
test
jbe
xor
jne
data16
fisttps
enter
mov
mov
repnz
js,pt
add
or
roll
xchg
jp
xor
jns
cmp
div
lods
es
test
jecxz
push
enter
in
jecxz
inc
xchg
cs
push
cmp
mov
ror
mov
shrl
popf
pop
ss
jmp
into
adcl
jp
fsts
jg
loopne
cltd
push
xchg
fildll
push
cwtl
xor
jnp
jnp
mov
aad
push
scas
mov
jmp
jnp
insl
jmp
push
pop
push
fadds
rorb
push
mov
testb
lods
sub
nop
enter
bound
mov
jmp
and
mov
mov
jmp
dec
pop
popa
mov
and
mov
addl
mov
jmp
movsl
mov
in
outsl
insb
jmp
mov
rcrb
aas
and
xlat
push
scas
pop
out
in
add
mov
lods
aam
adc
mov
jecxz
aaa
inc
mov
pushf
loope
movsl
jecxz
ljmp
popa
stc
xchg
sbb
xchg
or
fstpl
gs
mov
xor
xchg
das
fcoml
dec
xchg
or
rorl
stos
jecxz
xchg
jno
sarb
sarb
rorb
jle
push
inc
push
loope
loope
data16
loope
mov
outsl
mov
sub
bound
mov
push
push
ss
add
ds
jp
jge
pop
mov
cmpsl
push
mov
outsl
icebp
in
movsb
loopne
aas
push
mov
fs
mov
mov
rcrb
push
lods
mov
xchg
or
pushf
mov
jg
aas
mov
outsb
mov
fdivrl
or
dec
fistpll
add
xor
in
sbb
aas
pop
imul
jg
dec
loop
push
mov
inc
loop
push
loop
lods
int
inc
loop
and
push
jmp
testl
std
fsubrl
push
cwtl
popa
fistpll
in
mov
nop
int3
push
rcrl
insb
lock
cmp
xchg
outsb
mov
pop
add
bound
and
lods
fistps
jns
fbstp
in
jne
jg
cltd
fwait
add
inc
mov
aad
inc
push
sub
stc
cld
add
int3
sbb
pop
mov
in
out
dec
test
and
xchg
int3
mov
das
xor
loop
lods
sbb
sti
dec
adc
pop
stc
loope
dec
imul
pop
sbb
xor
push
xor
les
push
sub
insl
addr16
mov
aam
pushf
jmp
movsb
fdivs
icebp
inc
fisubrs
mov
in
ljmp
sti
es
xchg
dec
push
scas
je
add
xor
and
rorb
push
mov
mov
outsb
out
mov
dec
addr16
xchg
and
ds
push
jbe
jecxz
mov
ja
cwtl
jns
es
shr
inc
add
rolb
ror
mov
inc
decl
inc
cmc
mov
or
cmp
jnp
fs
push
mov
pop
insb
out
roll
jge
outsl
aad
cmp
jns
xchg
mov
lahf
sbb
pop
cmp
and
push
xor
aas
mov
dec
mov
pop
inc
jmp
or
shr
arpl
inc
mov
adc
scas
jmp
mov
adc
shlb
aad
fistps
push
adc
add
imul
xlat
dec
outsl
lods
daa
rolb
xor
test
loop
das
dec
repnz
push
movsb
inc
push
cmc
push
in
cmp
divl
lret
daa
out
add
fstps
cmpsl
adc
clc
cli
xlat
aas
outsl
adc
mov
pop
out
das
js
pusha
mov
push
stos
mov
push
lods
mov
jp
jne
insb
sbb
mov
shrb
mov
jo
cltd
mov
xchg
jmp
faddp
stos
pop
inc
into
xchg
fnstsw
inc
sub
hlt
and
movsl
pusha
inc
ljmp
jns
xor
mov
ljmp
and
test
arpl
fucomi
mov
jg
bound
mov
jns
dec
cmp
ds
dec
sbb
gs
mov
pop
in
aad
mov
mov
mov
dec
loop
aad
fsubl
outsl
push
shlb
les
fcompl
aas
rclb
add
rol
ja
jg
and
xor
mov
sti
xlat
pop
add
pop
push
stc
enter
push
xor
orb
and
gs
ja
scas
inc
dec
cmp
ljmp
and
cmp
rolb
fnop
cmc
cmp
sub
in
fisttpll
push
ljmp
js
into
mov
mov
jle
arpl
insb
mov
jle
mov
enter
stos
mov
ja
mov
in
mov
daa
cmp
pop
mov
outsl
add
dec
subl
scas
dec
or
test
add
mul
mov
pushf
jp,pt
into
adc
iret
inc
into
aaa
lahf
mov
xchg
stos
push
mov
add
imul
xchg
rcll
aaa
mov
rcr
faddl
dec
or
jae
mov
divl
pusha
mov
rcrb
sbb
add
int3
sbb
sti
or
or
sahf
bound
stc
movsl
sti
mov
mov
xchg
jg
inc
inc
andb
mov
add
fwait
aad
inc
dec
out
cmp
inc
pop
loope
xor
sub
cli
lahf
inc
pop
sbb
hlt
repz
lock
mov
or
xlat
lcall
and
int3
cld
dec
push
sahf
xlat
sbb
jb
sahf
pop
mov
fs
in
adc
push
cli
ljmp
das
popf
fistps
nop
dec
stos
jb
xchg
sbb
mov
dec
pop
mov
cmpsb
jae
or
ja
xor
lret
pop
aad
and
push
add
jae
insb
and
mov
push
pop
xchg
mov
push
idivl
mov
mov
sahf
adc
fwait
sub
lret
mov
jle
das
xchg
pushf
mov
cmp
lock
jbe
lret
pusha
orl
iret
add
mov
jmp
dec
data16
shrl
inc
mov
enter
insl
mov
mov
ret
add
dec
addr16
sbb
inc
xorb
mov
mov
mov
shrb
ljmp
subb
gs
jae
sbb
scas
jmp
loope
add
les
adc
push
lahf
leave
sbb
imul
dec
lret
push
xchg
push
mov
or
push
idivl
outsl
popf
cmpsl
and
add
aad
add
cmpsl
cmp
adc
testl
ds
xor
xor
xchg
roll
mov
or
mov
fs
loopne,pn
mov
xchg
in
jecxz
clc
not
jg
pop
sbb
mov
dec
sbb
test
ljmp
enter
cli
push
push
shll
dec
xor
jno
je
cmp
lea
fisubrs
inc
and
movb
rol
fisttpll
les
cs
fldcw
ret
je
int
add
pushf
lock
add
out
dec
test
data16
inc
shrb
push
mov
jg
lds
and
cmpb
xchg
mov
xchg
cmp
push
stc
scas
sarb
sub
or
adc
add
int
stos
jle
jb
jecxz
add
ljmp
pop
jae
mov
iret
pop
dec
jmp
stos
or
or
sub
mov
sub
test
aaa
mov
pusha
pop
iret
imul
mov
xor
xlat
sti
gs
call
loop
jo,pn
out
xor
mov
jecxz
scas
scas
imul
lret
clc
iret
filds
dec
fsubl
or
or
leave
scas
jns
cs
adc
dec
in
mov
jmp
dec
push
ret
pushf
clc
insl
xchg
jae
pushf
xlat
adc
int
mov
or
cmp
jmp
inc
mov
filds
into
mov
clc
add
mov
imul
repnz
into
jmp
jne
mov
imul
sahf
jmp
inc
add
cmp
imul
lret
xchg
mov
sbb
adc
cmpsb
xlat
push
scas
or
leave
shlb
rorb
stos
in
lahf
cmp
fdivrl
lods
pop
iret
or
pop
push
jbe
mov
xchg
fcmovne
pop
push
in
inc
stos
push
rcrb
lock
fbstp
gs
mov
mov
ja
or
lret
test
sarb
cmp
xorb
sbb
shrl
lock
shr
jle
push
pop
call
inc
xchg
sbb
arpl
add
sbb
mov
stos
or
out
fcmovu
mov
sahf
adc
jecxz
mov
mov
mov
and
icebp
push
mov
outsb
lods
cmp
inc
loope
fsubs
mov
inc
mov
mov
out
mov
scas
in
icebp
insl
rcrl
call
pop
fnsave
fisubrs
or
lea
iret
mov
fisttpl
leave
sub
xor
movsl
fcompl
popa
add
xor
dec
fcmove
lret
sahf
lds
mov
shl
xor
push
jg
fwait
fwait
adc
loope
cmpsb
inc
mov
push
xor
out
dec
cmp
jbe
in
xchg
in
lods
jecxz
mov
and
out
decb
loope
icebp
sub
jbe
nop
pop
add
dec
jecxz
push
dec
fcmovnbe
xor
in
scas
pop
xor
test
push
or
pushf
push
sub
fstp
or
push
loope
loopne
aas
push
lea
and
in
hlt
in
push
sub
hlt
mov
mov
adc
jge
pop
cld
into
push
or
movsb
dec
pop
mov
out
push
sub
mov
ss
lahf
pop
push
mov
jnp
adc
in
sbbb
loop
sbb
or
lret
jmp
jne
xor
rolb
ljmp
push
outsb
mov
jp
stos
stos
and
ret
in
or
push
icebp
jnp
fildll
ljmp
das
jmp
mov
dec
xor
inc
sbb
es
bnd
push
loopne
mov
jae
jge
or
pop
dec
cltd
xor
shlb
imul
bnd
fdivl
je
push
mov
jle
loop
ja
jb
or
jno
stos
fistps
fldenv
sub
in
inc
shl
jecxz
or
add
jmp
bound
inc
fs
mov
mov
data16
iret
mov
dec
jo
and
in
out
pusha
sub
jmp
or
add
clc
scas
or
xor
mov
or
mov
xchg
aaa
pushf
insb
pusha
mov
sbb
sbb
pop
xchg
mov
test
addr16
cwtl
adc
dec
cwtl
or
inc
andl
add
lret
jg
jae
mov
or
insl
mov
inc
add
mov
inc
fdivl
insb
mov
sbb
adc
mov
xchg
cmp
stos
mov
adc
sbb
inc
or
add
jl
sbb
stos
clc
test
sub
mov
dec
lret
pop
xchg
dec
mov
pop
cmp
orb
cmc
popa
add
cmp
cwtl
sti
fstpl
popf
stos
aam
das
and
outsl
enter
add
push
lods
inc
fcoms
stc
ja
pushl
ret
or
mov
xchg
jg
adc
jge
daa
in
scas
mov
outsl
lods
stos
hlt
push
sub
sbb
fstps
xlat
das
jecxz
fisubrs
lock
std
incb
adc
sarl
lods
xor
xor
add
loope
daa
jle
stos
rolb
pop
lret
mov
out
arpl
pop
adc
adc
loop
inc
lret
out
or
xchg
out
ljmp
rorb
outsl
dec
cli
loopne
or
sarb
or
inc
loope
fimull
cmpsb
or
and
add
add
sbb
pop
adc
mov
mov
mov
sub
lea
jmp
insb
mov
fbstp
mov
fisubrs
in
das
inc
ret
loopne
mov
push
adc
push
mov
cmp
fs
inc
dec
data16
xlat
xchg
loopne
fwait
mov
mov
lcall
shrl
xor
jne
xor
out
subl
mov
adc
cmp
mov
or
xchg
jecxz
lret
icebp
std
mov
jle
in
mov
scas
dec
xchg
pop
popf
add
xchg
sub
jbe
cltd
out
jae
jns,pt
pop
jecxz
loopne
cwtl
mov
leave
loopne
gs
jmp
pop
add
mov
outsl
test
push
ror
jne
add
iret
ror
js
fnsave
cli
cs
fldl
push
cmp
mov
mov
popa
mov
mov
jmp
int3
scas
cwtl
imull
push
popf
cmp
and
insb
mov
mov
stos
scas
faddl
test
popf
cmp
lods
fdivr
testl
adc
arpl
push
in
cmp
mov
and
hlt
bswap
mov
out
pop
sub
lret
adc
dec
cmp
add
in
jns
cltd
imul
pop
inc
rcr
cld
sbb
sbb
in
popf
out
lcall
movl
sub
lahf
push
leave
shlb
pop
or
test
mov
addr16
in
sub
jmp
inc
loop
out
pushf
push
jge
movl
daa
push
sub
int3
shll
cmpsl
jno
ret
sub
sbb
mov
repnz
mov
ficoml
cltd
adc
lcall
mov
adc
fcmovnu
push
push
cmp
jg
gs
scas
or
inc
xor
dec
aad
lea
maxps
stc
inc
ds
sub
movsl
cmp
jns
push
cmpsl
bound
movb
aaa
call
jmp
cmp
xor
shlb
and
insb
jb
nop
mov
pop
out
xchg
mov
push
pop
or
les
clc
sub
lea
orl
daa
jns
shll
out
shlb
scas
mov
jmp
unpcklps
scas
fwait
add
xchg
sahf
xlat
popf
push
add
scas
fldt
lcall
shlb
int3
call
inc
out
mov
jmp
sub
jmp
sbb
outsb
arpl
call
xchg
mov
mov
sub
stos
and
lods
jnp
gs
fsub
jns
fwait
mov
xchg
bound
ja,pn
stos
ficoms
dec
mov
fisubs
jl
and
call
popf
mov
cld
jecxz
or
pop
cmpsl
mov
mov
sti
xchg
outsl
scas
mov
ljmp
movsl
scas
xor
jecxz
icebp
xchg
hlt
mov
scas
cli
pop
mov
jl
rcl
imul
mov
in
xor
dec
in
sub
aas
adc
aad
mov
fcomip
int3
popa
cmp
ror
and
mov
outsb
xlat
lret
mov
mov
xlat
mov
dec
lahf
addr16
adc
jb
sti
fwait
addr16
and
stos
dec
rclb
in
imul
sbb
xchg
adc
push
mov
jb
in
mov
dec
lods
jae
ret
mov
jecxz
adc
lret
xchg
sub
mov
daa
ror
repnz
jecxz
rolb
test
das
sarb
jg
xor
mov
adc
xchg
aaa
out
scas
xchg
mov
cmpsl
fcom
xchg
lahf
fdivp
into
bnd
mov
adcb
inc
cltd
xchg
xor
push
fwait
push
mov
shlb
mov
pop
xchg
and
shll
sti
push
adc
lods
add
cmc
scas
pop
mov
repnz
psrad
xor
test
mov
adc
stc
out
lods
mov
ret
pop
push
mov
bndstx
adc
fbstp
shlb
rcll
das
das
mov
shrb
cmpb
lret
jecxz
loop
outsb
or
add
lcall
xor
and
je
jg
cmp
popa
add
push
mov
inc
xchg
sahf
mov
adc
xchg
out
imul
jno
lea
mov
jle,pn
xor
cli
lods
out
cmpsl
or
cmp
repz
xor
ror
cmp
fwait
arpl
cmpsl
mov
cld
xchg
or
fdivl
out
sbb
xor
cmc
lret
call
jcxz
lea
in
mov
xor
rcrl
mov
or
inc
movsl
mov
mov
jnp
push
jmp
rorb
or
scas
inc
mov
stos
or
imul
fbstp
xchg
aam
fnstenv
lods
jg
mov
pop
xchg
mov
sti
xchg
or
mov
or
pusha
les
ror
enter
fisubl
xchg
das
jno
jo
add
movntq
add
mov
and
not
push
jmp
aas
loop
call
loop
call
loop
call
loop
call
lret
outsb
jns
ret
xchg
mov
jmp
or
cmp
lret
jmp
or
movsb
inc
in
data16
call
cmp
leave
pop
pusha
xchg
push
cmp
mov
mov
xchg
xor
shlb
daa
lods
and
pop
popa
outsb
sub
lods
sti
leave
or
les
lods
loope
aaa
lret
xchg
sub
or
jmp
mov
scas
xor
stos
mov
sub
jae
mov
mov
mov
mov
cmp
in
inc
ss
scas
adc
push
repnz
jge
push
mov
stos
mov
dec
jecxz
in
jecxz
push
pop
lods
jg
daa
in
mov
popf
mov
shrb
out
sarl
sbb
addr16
es
mov
outsb
or
xchg
lds
enter
mov
lret
outsl
mov
lods
scas
icebp
sarl
lods
mov
mov
gs
rcl
scas
lea
lock
mov
imul
enter
sti
mulb
test
iret
sub
fisttps
lds
shl
sub
sub
ret
int
into
pop
mov
outsb
inc
mov
mov
pop
das
cmpsl
mov
imul
bound
jmp
inc
call
add
mov
sub
ret
rolb
shll
lods
xchg
mov
dec
or
fucomi
mov
mov
lods
xchg
shrb
outsl
shl
clc
pop
inc
cmpsl
cmpsl
or
cmc
sbb
xlat
inc
mov
rclb
xchg
adc
xchg
lods
push
mov
or
inc
add
dec
add
xchg
lds
lock
mov
adc
out
addr16
fsubs
dec
pop
xor
jns
cwtl
mov
adc
mov
ljmp
or
dec
enter
fbstp
cmpsl
push
pop
fldl
in
repnz
sarl
clc
jecxz
rcrl
sbb
mov
lock
movsb
scas
repnz
dec
jb
or
popa
popf
dec
mov
in
ljmp
lods
test
lods
shl
jg
call
jnp
lahf
call
std
dec
stos
dec
pushl
or
push
leave
pop
add
mov
mov
jle
enter
xor
xlat
cmp
pop
pushf
insb
imul
sub
xor
rorl
js
fcomps
pop
jbe
pop
popa
ja
mov
aam
inc
fwait
jg
pop
push
je
insb
sbb
dec
icebp
pop
jmp
das
stc
insl
subb
sub
test
mov
bound
sti
fisttpll
mov
xor
fmul
int
jmp
stos
das
add
xchg
adc
ss
pushf
ljmp
push
out
pushl
or
mov
push
push
lcall
mov
pop
dec
mov
inc
in
xor
mov
cmp
insb
mov
hlt
or
pop
arpl
mov
mov
xor
jle
dec
xor
scas
shll
cmc
add
sarl
add
out
xchg
jle
scas
mulb
stos
or
mov
sti
mov
or
pushf
inc
xchg
mov
stc
fnsave
stc
sbb
pushf
xchg
xlat
subb
xchg
data16
cmpsl
pushf
aas
in
enter
mov
or
cmp
xor
addr16
push
iret
mov
mov
inc
cmp
xor
jne
sub
mov
popa
inc
shll
aad
rclb
or
cwtl
iret
aam
push
pop
movsb
cwtl
scas
lds
mov
rclb
loop
inc
jecxz
movsl
sub
das
sub
lahf
pop
xor
out
out
cmp
and
cli
out
idivl
rorb
mov
adc
les
pop
jae
or
in
inc
pop
fdiv
mov
mov
jae
jbe
out
daa
and
mov
add
aam
cmc
jo
jnp
loop
out
filds
adc
or
adc
mov
mov
nop
fs
divl
pop
add
mov
sub
cmpb
fsubs
dec
popa
push
xor
leave
push
fnstenv
into
or
pop
cmp
pop
nop
inc
xchg
adc
icebp
out
add
jecxz
repnz
push
icebp
or
inc
je
xor
jecxz
int
jno
jb
and
jmp
mov
push
test
shll
push
arpl
clc
sub
sbb
push
das
mov
repnz
and
fsub
jg
or
xor
pushf
xor
cmp
inc
es
xchg
dec
leave
pop
fisttpll
pop
adc
in
cmp
pop
insl
test
jl
repnz
xchg
outsl
fnsave
sbb
shll
out
mov
sti
rorb
int3
addr16
repnz
loope
negb
xchg
mov
jl
lock
push
mov
jmp
test
nop
dec
adc
std
fisttps
mov
xchg
or
imull
stos
jns
xor
shlb
push
mov
add
mov
add
jmp
subb
jle
scas
shlb
and
imul
lods
jb
mov
scas
or
push
push
jle
inc
mov
leave
test
xchg
inc
sbb
jnp
in
push
out
les
jmp
rolb
fstps
movsl
jmp
arpl
out
push
sbb
lods
mov
and
cmp
int
hlt
fwait
sar
outsl
mov
mov
pop
push
jp
mov
and
mov
enter
aad
in
fimull
fst
jno
movsl
out
pushf
ds
adc
test
aas
sbb
clc
push
test
pop
fwait
shr
xchg
mov
mov
gs
mov
lods
mov
ljmp
sub
xor
or
and
push
clc
rcr
xchg
test
rorb
pop
inc
dec
aas
scas
push
xchg
pop
rorl
shlb
xchg
repnz
ret
bound
loopne
ret
fidivrs
adcl
or
add
ja
scas
rcrb
or
sbbb
inc
popa
mov
inc
sub
data16
je
inc
dec
nop
cwtl
jo
sub
iret
jecxz
sub
ret
inc
push
add
or
cmp
shrl
jmp
mov
mov
mov
cmpsl
in
sub
mov
jl
xchg
movsl
sub
lret
mov
dec
iret
js
fadds
popf
imul
cmp
lret
fcmovnbe
xor
xchg
daa
cmpsb
sbbl
mov
adc
fsts
fsubr
sarb
daa
fs
lahf
pop
dec
popa
iret
in
neg
jge
lds
push
mov
cmpsl
mov
jecxz
ficoms
int
outsl
add
js
mov
bound
in
push
and
daa
aam
xor
xchg
and
mov
mov
stos
sub
fldenv
int
lock
sbb
mov
stos
push
sbb
or
or
jb
in
mov
push
push
dec
dec
test
cs
sub
stos
xchg
push
ret
loope
sub
aam
stos
vmovlps
pop
cmp
aas
loope
fildll
xchg
mov
mov
fdivr
outsl
sbb
into
jmp
loop
into
sahf
sbb
imul
or
fildl
xchg
shlb
in
sub
das
mov
or
xchg
ret
mov
xchg
add
mov
out
data16
imul
lret
ud2
dec
fsubl
or
sbb
mov
and
and
ljmp
inc
test
inc
movsb
aas
mov
es
fbld
sbb
adc
xor
mov
out
add
mov
stos
daa
mov
hlt
pop
cmp
jno
outsb
sti
cld
xor
dec
mov
stos
fnstsw
pop
or
or
dec
aad
rorb
xchg
or
cmp
jl
xor
xor
sbb
mov
push
inc
enter
outsl
or
mov
mov
ja
outsb
bound
push
mov
mov
jg
lret
lret
mov
das
mov
jecxz
and
mov
pop
pusha
pop
loope
test
lret
pop
mov
jecxz
mov
or
out
push
je
andb
lock
inc
mov
push
mov
or
pop
adc
and
fucomip
mov
repnz
xchg
mov
xlat
push
mov
cmp
rcll
xor
loopne
mov
mov
movsl
sbb
mov
pop
mov
scas
mov
movsl
xor
rclb
push
xor
mov
mov
xchg
adc
in
test
adc
and
adc
jo
in
test
xchg
stc
repnz
mov
push
jbe
fmull
hlt
imul
lret
jecxz
in
cmpsb
cli
dec
cmpsb
cmpsb
fadds
lea
or
sbbb
xchg
jmp
dec
arpl
aaa
loope
cmp
xchg
mov
xchg
out
inc
rolb
outsl
fsub
addr16
jno
fs
lock
pop
rcrl
pop
jmp
imul
in
ljmp
mov
cmp
int3
jmp
loop
mov
push
mov
xchg
jmp
jb
mov
push
mov
insb
cmp
out
leave
lret
and
test
cmpsb
loopne
push
sub
scas
addr16
xlat
out
or
push
dec
dec
ret
fildl
xlat
insl
mov
cmp
out
sbb
pop
stos
dec
aad
clc
into
or
push
rcl
lea
les
stos
or
pop
pop
jmp
fistpl
inc
out
inc
leave
xlat
xlat
mov
jge
and
and
mov
decl
jge
outsb
out
out
push
rolb
pop
xchg
mov
std
jg
lock
punpckhdq
mov
nop
fucomip
popf
xor
iret
loopne
aad
rcl
jg
iret
push
and
cld
test
ja
sub
aad
jbe
fldt
jmp
subl
ljmp
mov
mov
movsb
cmc
xor
push
sbb
push
jo
or
fwait
lret
mov
movsl
lock
jns
mov
mov
stos
dec
ret
jae
push
stc
pop
xor
pop
sbb
ljmp
ss
cmc
fiaddl
loope
mov
or
or
pushf
xlat
sub
pop
aaa
mov
inc
int3
jno
movsl
insl
jo
scas
mov
mov
xlat
jg
xor
mov
mov
adc
adc
out
icebp
pop
mov
add
les
dec
push
cmc
sub
lods
or
sarl
repnz
cmp
mov
inc
dec
ja
in
into
ja
mov
das
xchg
iret
jo
fsub
mov
xchg
in
mov
lock
ret
addr16
mov
stos
repnz
movsl
mov
sbb
pop
xchg
cmpsb
xchg
pop
jge
fisubl
stc
repnz
out
sbb
jbe
dec
jbe
or
and
xor
es
push
js
call
add
xlat
clc
rcl
or
popl
jno
add
ret
into
int3
jb
popf
stos
leave
mov
testl
jno
cs
push
fists
or
mov
xchg
fildll
mov
loop
mov
jae
mov
in
pop
mov
insl
dec
jb
subb
dec
xchg
das
test
daa
iret
and
add
ljmp
pop
fisttpll
in
adc
mov
data16
cmp
sbb
jmp
fdivl
sarl
xchg
out
ret
out
sub
mov
mov
jle
decb
sbb
mov
adc
repnz
push
mov
out
cmc
jge
mov
xchg
stos
cmc
mov
push
pop
call
arpl
cli
hlt
jmp
cwtl
fisttps
jb
or
idivb
movsb
das
movsl
mov
bound
rcrl
cs
icebp
or
mov
cmc
pop
stos
and
into
push
fstp
mov
ret
push
xor
das
pushf
jb
ljmp
outsl
fisubs
stc
mov
add
xchg
jle
xor
and
jno
mov
out
lcall
lahf
mov
les
sbb
mov
pop
adc
pushf
xchg
mov
adc
out
imul
sub
lret
call
jg
jbe
xor
jb
jl
shl
scas
in
aaa
jl
sti
fs
dec
aaa
inc
add
mulb
insl
fcmove
imul
and
add
sub
int
popa
xor
int
add
jo
jecxz
jecxz
test
xor
adc
outsl
adcl
rolb
shl
arpl
xchg
sub
pop
fistpll
adc
cmp
fdivrs
pop
fisubs
fst
pop
repnz
or
shrb
inc
rcl
mov
sub
sbbb
ror
das
daa
fnstcw
lds
fwait
sub
outsb
fisubs
jecxz
xor
movsl
adc
iret
aaa
ljmp
dec
test
mov
bound
add
mov
or
inc
int3
inc
adc
push
std
outsl
test
shrb
cmc
rorl
mov
sub
add
pushf
pop
adc
sub
xchg
cltd
subb
into
add
inc
aaa
imul
in
jg
dec
test
faddp
in
sub
test
into
scas
mov
das
pushf
movsb
aas
std
sub
jle
sub
add
rclb
jecxz,pn
mov
lret
adc
fstpt
stos
das
push
lret
sbb
cltd
out
fisubrl
insl
mov
sub
jg
fwait
jmp
shlb
fnsave
and
jecxz
jg
xlat
pop
insl
add
outsb
jecxz
push
pop
fiaddl
xchg
shrl
jecxz
sub
fimull
inc
lret
das
insl
pushf
out
test
pusha
scas
and
pop
mov
aaa
out
outsb
loopne
sub
push
fsubl
add
pusha
cmp
jmp
adc
loop
lock
cwtl
or
lods
dec
jnp
lods
ss
mov
pop
jg
mov
lret
jno
fildll
in
cmp
test
push
int
push
in
push
xchg
popa
xchg
movsb
mov
pop
movsl
stos
leave
mov
shlb
sbb
adc
sarb
fisttpl
inc
shll
out
sti
jecxz
sub
das
lret
sarl
xlat
jg
jecxz
fstpt
outsb
frstor
push
pop
sbb
sbb
rolb
push
push
pand
inc
jecxz
pop
subb
bound
imul
das
ficoml
nop
scas
mov
fwait
imull
mov
icebp
sub
jns
dec
fbstp
push
fmull
mov
jne
mov
ror
push
ss
xor
sub
mov
mov
push
mov
dec
daa
mov
or
loope
cli
mov
mov
push
mov
jne
xor
sbb
xlat
push
lods
out
scas
fisubl
scas
aas
stos
mov
lcall
adc
mov
fucom
cmp
cmc
in
aas
mov
cmc
fldt
hlt
push
fsubrl
adc
loop
push
sti
testl
adc
adc
lock
lcall
in
sub
lods
and
orb
pop
mov
imul
shlb
sub
scas
shlb
and
out
sbb
inc
mov
stos
mov
push
xor
dec
xchg
jo
pop
pop
rorb
jmp
stc
popa
loope
daa
cld
and
or
xchg
push
cmp
mov
bnd
add
xor
jbe
dec
cmp
ja
ljmp
jne
xchg
dec
adc
xor
xchg
pop
cmp
jb
xchg
fwait
out
mov
xchg
je
adc
ret
lret
jne
mov
hlt
aam
sub
xchg
pop
dec
movsl
insb
jg
or
scas
jle
into
or
adc
inc
push
test
stc
jp
iret
aas
mov
mov
push
ss
jne
stc
scas
lods
call
mov
xchg
xor
pop
clc
adcl
xor
adc
sub
jno
jle
or
int
movsl
adc
jge
mov
in
sahf
clc
mov
add
mov
and
pop
adc
das
inc
mov
lret
inc
sbbl
mov
and
icebp
out
mov
jl
push
std
jae
inc
mov
mov
jo
mov
add
mov
enter
and
jecxz
out
outsl
push
lock
xor
in
loope
insb
mov
hlt
iret
out
outsb
pop
scas
xchg
int3
mov
insb
xlat
adc
scas
and
cmp
push
lahf
mov
inc
sub
mov
mov
cmpsl
lret
or
jmp
pop
add
int3
mov
rolb
sbb
inc
outsb
jg
add
aad
adc
cmc
fwait
jl
sbb
cld
fisubs
das
adcl
jp
out
fwait
clc
pop
mov
hlt
test
add
call
ret
push
leave
mov
std
lcall
cmp
push
mov
mov
stos
cs
push
outsl
xlat
push
or
scas
in
in
add
mov
mov
or
lods
ficoms
and
inc
daa
cmc
call
divl
pop
or
outsl
lods
dec
sub
adcb
jbe
bnd
jmp
outsb
loopne
push
imul
xor
scas
xchg
adc
pusha
cmp
mov
or
lods
pushf
lret
mov
mov
out
adc
mov
mov
pop
out
popa
pop
ja
mov
or
mov
jmp
popf
push
fbld
push
std
loopne
or
pop
jecxz
jecxz
inc
stos
adc
inc
scas
enter
push
add
push
push
lret
mov
fsubr
add
call
fnsave
shrl
scas
addr16
lods
mov
sub
xchg
fstpt
out
dec
lret
ljmp
loop
xchg
jmp
inc
std
lods
rcl
cs
shrl
mov
lods
cmp
jl
insl
jne
imul
gs
adc
out
sti
out
sub
shlb
jecxz
jmp
out
lcall
orb
das
lcall
vmovdqa
mov
xchg
imulb
ficoms
pop
mov
mov
add
imul
jne
and
mov
test
addl
into
out
repnz
aam
nop
bound
imul
xor
jo
pushf
pop
shl
or
rcrb
push
cwtl
cmc
das
or
rcll
daa
mov
mov
ds
pop
sbb
cs
shrl
iret
imul
adc
or
das
movb
pop
fmuls
iret
fmulp
lcall
insb
stc
call
add
outsl
loop
lret
lods
std
in
xor
test
into
mov
imul
sbb
mov
xor
popf
add
inc
inc
sbb
xchg
or
and
and
stc
cmp
jmp
and
icebp
xor
jl
test
dec
repnz
in
sti
cs
mov
out
jecxz
xchg
xchg
jl
adc
sti
cmp
fildll
xchg
xchg
add
popf
jg
iret
fidivrl
aaa
dec
les
xor
popf
push
fcmove
das
les
out
push
aas
and
rolb
das
lcall
mov
loope
dec
cmp
fcmove
fbstp
loop
mov
and
test
inc
adc
mov
rorb
sub
jg
adc
cmp
dec
fwait
mov
sub
cwtl
ds
pop
jmp
and
jne
pop
repz
mov
in
cmpsl
inc
negl
cmp
adc
bound
movsb
xor
testl
in
or
fucom
or
add
pop
sub
loope
out
pop
out
mov
shlb
add
int
stos
add
lods
push
int3
lea
cwtl
sub
xor
shrb
ret
mov
imul
pop
rcrb
fwait
icebp
out
lcall
dec
sub
xchg
popf
cmp
sarb
imul
pop
fildll
sbb
cmp
lcall
loopne
aas
int
pop
mov
shll
push
mov
lds
fistpl
filds
iret
or
filds
mov
mov
ds
push
cmp
push
mov
cmp
pop
sub
or
xchg
mov
mov
and
mov
subb
dec
adc
mov
movsb
mov
cmc
sub
jae
mov
jmp
scas
das
lret
and
in
clc
popf
add
or
hlt
loopne
notl
in
shlw
xchg
mov
aas
frstor
push
jo
push
sub
pop
stos
cmpsb
ja
outsb
fimuls
fldt
js
fs
lds
fbstp
outsl
data16
adc
pushl
ret
fsubrs
aad
rorl
or
mov
mov
jl
ret
jbe
sub
loope
jg
adc
in
push
and
mov
cli
enter
leave
out
jne
scas
in
push
xlat
vmovq
cli
fnstenv
lds
in
cmpb
mov
xor
lds
mov
dec
mov
mov
xchg
jecxz
push
jecxz
das
or
lcall
shl
ret
jbe
lcall
out
repz
jnp
lods
jb
cmc
xchg
fwait
mov
icebp
mov
scas
rolb
pushf
adc
add
or
repnz
mov
repnz
bound
out
or
cmp
das
mov
xor
stos
shll
frstor
cmc
in
loopne
insb
inc
inc
or
adc
fwait
mov
push
out
int3
or
hlt
or
mov
push
pushf
mov
fs
lret
push
xor
lea
jnp
jmp
std
cmp
add
and
or
push
mov
jne
xchg
xchg
xchg
and
jmp
mov
test
jbe
add
push
lcall
idivl
jge
cmp
pushf
mov
mov
arpl
adc
in
lahf
inc
push
test
imul
daa
idiv
inc
subb
xor
xchg
shr
into
or
leave
fists
ss
jne
movsl
stos
daa
mov
imul
xchg
or
outsl
lods
fildll
pop
sbbl
mov
or
xor
imul
push
pop
push
into
in
add
dec
outsl
and
test
loop
mov
imul
shll
lds
fsub
out
loop
mov
ljmp
cmp
mov
test
fbld
loop
shr
and
outsb
imul
pushf
mov
mov
jge
mov
data16
cmp
mov
shrb
dec
mov
enter
in
cmc
roll
mov
fisttps
xchg
mov
xchg
mov
in
aad
es
dec
sub
xor
cmp
es
imul
ljmp
jb
cld
bound
mov
outsb
inc
iret
ja
lret
repz
mov
adc
test
cmpsb
out
shlb
out
ss
cmp
push
es
pop
pop
fimuls
pushf
out
mov
cli
sbb
pop
es
shlb
ss
sahf
or
sti
inc
inc
popa
aaa
pop
cltd
inc
jl
idiv
mov
add
xchg
stos
sbbl
ljmp
adc
imulb
pop
int
mov
in
xor
dec
popf
out
inc
fisttpl
out
test
ss
movsl
shlb
adc
sub
lahf
les
xchg
pop
cltd
loop
shl
or
xchg
pop
inc
jne
scas
jecxz
mov
cmc
xor
sub
mov
pop
mov
fnsave
cltd
fbstp
cmpsl
jbe
jmp
or
out
jns
sbbb
ljmp
inc
push
or
inc
fcomps
mov
les
addr16
stos
mov
sbb
enter
ljmp
mov
push
neg
aad
xchg
fistps
jl,pt
inc
sub
fsubp
shlb
movsb
fdivrl
xlat
loopne
mov
mov
outsl
sahf
xor
daa
inc
and
jmp
dec
pop
lea
fidivrs
mov
mov
outsb
test
mov
cmp
ret
xchg
push
movsl
outsb
mov
leave
jne
pop
and
adc
mov
mov
push
ljmp
or
adc
push
mov
pop
scas
or
aam
in
xor
mov
mov
lods
sub
and
call
scas
addr16
out
or
dec
sub
xor
fsubp
pop
mov
test
jle
pop
mov
icebp
mov
sti
dec
push
scas
and
rol
imul
int3
stos
push
cmovno
scas
repz
clc
fmuls
mov
dec
int3
ret
and
cmpl
or
and
negl
sbb
mov
sbb
push
jmp
pop
movsl
xor
int3
stos
xchg
xor
or
dec
cmc
xchg
push
mov
ja
mov
pop
lret
push
xor
jne
mov
rcl
in
js
mov
dec
jecxz
push
outsl
sti
loope
sbb
cmp
and
mov
decb
cwtl
sbb
out
add
dec
mov
notb
sbb
cld
icebp
mov
scas
in
adc
add
cmpsb
out
sub
jl
jmp
out
loope
shrl
or
es
push
dec
test
add
adc
repnz
push
ss
movl
iret
push
xorb
sbb
outsb
test
inc
shll
mov
sub
ljmp
mov
lret
push
and
in
pop
je
pushf
inc
mov
xor
dec
xchg
inc
out
adc
add
test
cs
jle
loope
push
jo
and
out
testl
mov
std
clc
enter
hlt
push
aad
ud2
xchg
pop
xchg
fbld
decl
aam
fdivl
xor
fs
in
stos
xor
push
pop
ffreep
fistpll
sbb
or
jle
cs
mov
sub
outsb
cmc
incb
daa
test
add
mov
out
pop
ss
mov
data16
push
daa
push
bound
push
rcrl
shlb
mulb
adc
neg
pop
pusha
cltd
xor
fldcw
lods
jg
ret
xchg
outsb
loop
bswap
dec
or
sub
sbbl
ja
xchg
gs
dec
cmp
aad
imul
pushf
mov
mov
imul
pop
arpl
mov
dec
jg
sub
add
outsl
pop
and
push
xchg
fimull
stos
or
cmp
jne
ljmp
dec
or
or
sahf
xchg
daa
test
inc
jp
fstpl
fstpl
arpl
dec
jmp
sbb
or
imul
sbb
adc
insb
arpl
test
data16
mov
cmc
lret
cmp
arpl
test
jns
jb
xor
add
cmp
pop
cmpsl
das
inc
aaa
lcall
cmp
test
add
push
imul
aaa
cmp
scas
sub
jmp
mov
rorb
scas
sbb
mov
out
mov
je
push
jge
pop
imul
xchg
test
aas
scas
fcom
movsb
sbb
aad
cli
imul
shll
mov
bound
and
into
jmp
das
mov
ret
test
xor
in
outsl
mov
xor
es
std
aas
cmp
xchg
mov
or
mov
arpl
jmp
sarl
mov
inc
dec
mov
or
cltd
mov
lods
or
and
adc
add
pop
loopne
gs
add
cmpsb
sti
mov
dec
push
pushf
ret
cmp
sbb
dec
sbb
sub
jo
sbb
and
in
pop
jecxz
xor
out
testl
lahf
das
lret
sbb
int
push
call
mov
fildll
push
add
fistpl
or
lret
into
es
push
data16
std
stos
sbb
xchg
fistl
sub
and
push
cmp
xor
pop
hlt
push
push
rorl
pop
xchg
sub
jns
sub
loope
push
mov
push
inc
iret
mov
adc
jbe
sub
shrd
mov
sahf
addl
fsub
ret
sub
jmp
dec
ds
jle
int3
xchg
popf
cltd
aas
xchg
push
xchg
mov
les
shrb
pop
pop
iret
fcoml
les
lods
cmp
mov
mov
scas
popa
lods
dec
rorb
dec
xchg
cmc
les
jle
in
out
add
icebp
outsl
out
and
dec
call
lret
jle
push
xlat
jecxz
repnz
mov
dec
sub
nop
notl
stos
mov
adc
hlt
lods
sbb
jbe
cmc
scas
and
cmc
xor
sub
cmc
in
loope
lret
lcall
arpl
ljmp
testl
movsb
adc
clc
adc
xcrypt-cfb
cmpsl
gs
mov
arpl
pop
jnp
push
xchg
in
in
push
mov
mov
scas
mov
push
sub
add
mov
dec
loope
or
mov
into
popf
repnz
mov
add
out
jmp
cmpsl
jecxz
cmp
inc
outsb
outsb
movd
dec
pushf
or
test
test
cwtl
ja
adc
push
xchg
push
mov
mov
nop
insb
test
fistps
rclb
inc
pop
dec
mov
loop
pop
and
gs
mov
into
jecxz
mov
fildll
inc
test
mov
fld
enter
sbb
xchg
out
aas
inc
call
inc
xchg
inc
mov
lcall
cmc
iret
sub
int
jmp
inc
dec
mov
sbb
mov
out
rol
outsl
xlat
adc
dec
aaa
xor
mov
add
pavgb
xchg
xchg
loop
pop
adc
mov
xchg
pop
in
daa
cmc
pop
les
pop
or
incl
lods
rcr
fbld
fisubrl
in
fnstsw
xchg
aam
xor
mov
ljmp
ljmp
fwait
dec
fnsave
jg
sub
cmp
rolb
inc
shlb
test
lret
movb
dec
or
not
push
int
shlb
mov
sub
cwtl
das
and
pop
pop
or
push
xchg
mov
lret
vpmacssdql
inc
fisubrl
sti
pop
lret
pop
inc
jae
and
fnsave
enter
test
test
popf
pop
or
out
or
in
icebp
push
aam
push
mov
jmp
addb
stos
mov
out
jecxz
imul
mov
push
scas
xchg
sub
dec
lods
stos
shl
lret
fimull
mov
push
lock
ja
hlt
out
add
rcr
psllw
stc
hlt
xchg
or
fst
mov
loope
sub
xchg
jae
add
int
sahf
imul
popa
mov
or
mov
jnp
and
inc
jno
mov
xlat
fiaddl
push
aaa
and
adc
stos
jecxz
sbb
cld
bound
jnp
jae
je
push
mov
cltd
daa
xor
mov
sbb
test
mov
sbb
jmp
mov
mov
push
lock
dec
insb
push
pop
xchg
loop
arpl
or
mov
testl
mov
fisttps
mov
loop
fistps
in
lahf
and
and
scas
push
sbb
dec
or
fsub
adc
imul
das
push
icebp
pop
hlt
sub
pop
das
jnp
or
mov
and
fsubp
call
call
das
scas
insl
mov
std
mov
mov
data16
int
sub
and
mov
ret
push
or
adc
mov
fisubs
pop
popf
shr
mov
outsl
andl
jecxz
outsl
loop
jl
jo
xchg
pusha
loope
outsl
xor
out
sbb
icebp
loope
das
jns
outsb
in
inc
hlt
push
fmull
aaa
adc
sbb
aas
mov
into
ds
cwtl
arpl
or
and
rorb
into
pop
push
mov
mov
lea
out
fidivrl
sbb
mov
xchg
push
std
outsb
fstpt
sub
jno
je
mov
lods
ret
jns
dec
or
mov
inc
push
dec
mul
ror
mov
das
shll
je
jecxz
ffreep
push
and
mov
cmp
add
insl
mov
or
test
inc
fcomps
pop
out
in
jne
adc
jb
jg
enter
mov
or
jmp
out
jne
jp
jg,pn
pop
or
iret
in
gs
mov
mov
jmp
hlt
jae
into
das
les
call
or
test
xor
shl
pop
and
rorb
xlat
dec
push
enter
lcall
adc
je
ret
sbb
imull
push
ss
push
jle
inc
add
pop
fsts
xor
pop
fwait
sub
cmc
xchg
jge
fildll
sar
int3
or
push
xchg
lods
jae
mov
push
adc
mov
outsl
or
imul
iret
int3
lret
dec
out
cwtl
movsl
push
xor
fstpt
dec
insl
inc
or
ja
cwtl
mov
sti
dec
sti
mov
or
mov
jbe
cmp
xor
jg
addr16
imul
sbb
rcl
lahf
arpl
jnp
jno
aas
lods
mov
in
rol
stos
testl
lods
fstl
in
mov
mov
cli
out
jmp
imul
jb
fstl
add
aas
xchg
sub
mov
ds
test
lahf
or
xor
mov
cwtl
enter
insl
inc
rcrb
bound
mov
pop
xlat
ret
push
adc
sti
mov
por
mov
gs
in
loopne
idivb
subb
mulb
arpl
popf
out
sarl
enter
mov
jnp
movl
clc
sub
jb
ljmp
xchg
sub
jb
or
sti
out
jmp
aaa
fninit
imul
inc
xor
in
push
popf
or
jbe
pop
push
mov
lret
pop
sub
mov
ficomps
ljmp
xor
fldl
and
inc
xchg
nop
inc
loop
daa
into
add
push
or
xchg
inc
push
loop
aam
jb
loopne
cmp
mov
scas
fidivrs
jno
sub
cltd
xorl
shl
sar
cmp
imul
mov
loope
in
aaa
fcoml
pop
shrb
mov
push
ja
fidivrl
mov
shrb
cmpsl
into
xorb
lock
shll
arpl
dec
dec
adc
fnstenv
adc
out
ds
xchg
insl
inc
scas
fbld
add
sbb
mov
or
ljmp
push
pop
std
rclb
pop
mov
shlb
mov
lret
repnz
fnsave
jmp
fbld
sub
push
xor
in
sbb
mov
hlt
dec
ja
push
sbb
jmp
mov
or
repnz
enter
stos
sarl
jb
andb
pushf
adc
sub
arpl
xor
movsb
adc
mov
xor
sbb
push
enter
mov
jecxz
imul
sbb
filds
xor
jmp
outsb
sarb
rcrl
cwtl
mov
push
push
xchg
push
das
jbe
icebp
push
stos
sbb
cmovno
shll
fnstcw
sahf
loop
pop
icebp
test
test
xchg
repnz
push
ljmp
sarl
scas
dec
add
sti
fsubrl
cmp
add
ss
je
punpcklbw
cld
test
jmp
in
add
adc
filds
fiaddl
fisubrs
fldcw
outsl
sbb
sti
scas
test
mov
into
push
idivl
push
and
popf
lcall
test
xchg
out
mov
xchg
mov
lahf
xor
addl
data16
ja
jb
sub
stos
and
sti
inc
movsl
call
decl
pop
addr16
rcr
aas
add
adcb
into
adc
imull
mov
das
test
add
inc
ja
iret
cmp
sarb
cltd
loop
adc
push
xor
insl
inc
xor
ds
pop
cmpsb
add
stc
rolb
divps
dec
int
jb
dec
scas
pop
shll
mov
inc
cmc
repnz
clc
shrl
stc
add
xlat
stos
pushf
icebp
cmp
sbb
push
filds
mov
icebp
mov
and
inc
adc
xchg
or
repnz
loop
stc
rcrl
pop
stos
nop
movsb
das
jne
mov
add
outsl
aad
mov
pushfw
call
or
mov
adc
fs
insl
jle
ret
outsb
sub
stos
lret
add
in
aas
pop
clc
mov
lods
push
jge
adc
or
cmpl
clc
mov
push
lds
mov
jge
scas
or
ja
cli
clc
dec
mov
pusha
pop
cld
lock
enter
or
push
push
mov
cli
loope
rcrl
psrad
loope
mov
test
add
add
iret
and
and
sbb
push
cmp
pop
adcl
fldt
push
data16
mov
xor
adc
shrb
mov
dec
jge
jns
lret
sub
mov
jle
jbe
mov
sarb
xor
dec
inc
push
fists
jl
or
add
cmpsb
daa
popf
xor
lret
and
adc
pop
mov
imul
cmp
adc
loopne
mov
aaa
das
adc
jb
fdivs
cs
xor
aas
je
outsl
data16
sbb
mov
mov
mov
ja
sbb
popl
and
iret
cmc
adc
scas
shll
mov
mov
sbb
mov
out
mov
es
mov
jb
fdivs
lret
xor
call
aaa
inc
scas
xchg
clc
cmpsb
dec
imul
fcmovu
mov
mov
stos
es
xchg
into
cltd
cmp
lcall
xchg
sub
cmp
aad
pop
bound
pop
xchg
or
iret
sub
xchg
outsb
loop
adc
pop
outsb
jmp
notb
sub
fstpl
mov
hlt
pop
jle
xchg
cli
call
lods
mov
mov
rcll
xchg
div
mov
sbb
stos
aad
lods
imul
sbb
add
ja
in
mov
clc
pop
pop
jmp
addr16
test
ja
pop
test
or
and
aas
xchg
outsb
loop
inc
mov
xor
outsl
lods
ljmp
sarl
xchg
pusha
dec
mov
incl
and
arpl
in
imul
rorl
xchg
inc
loop
sub
mov
int
stos
popf
pop
ljmp
cli
rcll
lods
sbb
fcomi
adc
dec
xchg
iret
mov
loope
lds
fisttpll
push
cmc
dec
cmpsb
shll
xor
mov
popf
push
adc
mov
mov
stc
sub
jmp
out
arpl
and
sub
mov
pusha
pop
inc
das
das
out
or
hlt
call
xchg
ret
out
jle
push
in
adc
dec
lock
pop
inc
aas
fists
add
fnsave
pop
aad
movsl
cli
cmp
sbb
enter
pop
cmp
cld
jge
mov
mov
pop
fisubrs
pop
lock
scas
sub
lock
sbb
imul
inc
and
out
inc
adc
test
jbe
dec
sahf
add
mov
xchg
add
xchg
mov
jle
arpl
adc
fnstenv
mov
xchg
jge
mov
mov
imul
cmpsb
lahf
xor
xor
frstor
and
fdivp
outsb
mov
adc
outsl
loopne
add
call
es
xchg
mov
mov
ja
icebp
gs
js
stc
mov
js
sub
jmp
cmp
mov
adc
addr16
stos
or
clc
push
xchg
jmp
xchg
add
dec
inc
inc
scas
mov
aaa
xor
stos
jbe
mov
inc
arpl
push
mov
ljmp
jnp
xchg
or
add
jl
fs
push
scas
fs
mul
outsl
ljmp
add
mov
lods
push
hlt
lods
aad
test
dec
out
cwtl
movsl
aas
std
pop
jmp
mov
sbbb
lahf
loop
and
imul
sti
arpl
jnp
add
add
xlat
or
cmpsl
xlat
sbb
loope
pushf
or
in
lret
fbld
ss
sub
add
pop
mov
pop
xchg
into
jecxz
xchg
arpl
cmpsl
xlat
jg
xor
rcrb
pop
xlat
sbb
negb
out
jo
mov
push
cld
bound
mov
xchg
jg
lcall
mov
fcmovnbe
jle
pushf
stos
or
mov
xchg
insl
or
push
sub
imul
sahf
pop
cmp
mov
es
jp,pn
je
cs
outsl
out
das
lods
cmc
push
jle
ss
push
push
icebp
sahf
lcall
xchg
cmc
lret
sti
pop
jnp
pop
in
test
pop
dec
movq
jno
out
push
cmc
pop
stos
push
mov
jg
notl
orb
mov
and
idivl
pop
inc
dec
or
cmpsb
repnz
outsl
mov
aad
and
push
sbb
fistps
xlat
pop
lcall
fildl
rcl
in
mov
pop
pop
rorb
pop
push
push
cmp
pop
dec
int3
das
aam
mov
jle
cmpsl
jb
rolb
stos
mov
push
adc
push
arpl
jo
adc
sbb
pop
sbb
std
pop
out
pop
pop
stc
shrl
sti
cmpsl
xchg
stos
mov
lock
jl
pusha
mov
and
out
mov
test
and
push
stos
subb
sar
scas
sbb
adc
outsl
fidivrs
mov
cmp
outsl
loop
adc
bound
outsl
enter
insb
pop
add
jbe
mov
and
stc
fsub
sbb
inc
xchg
enter
pop
shlb
dec
jne
jg
sbbb
jecxz
inc
inc
pop
mov
cmp
add
test
push
mov
jle
and
bound
inc
mov
lahf
xlat
shll
loope
lahf
mov
jne
mov
mov
and
cmc
outsl
rcl
inc
xor
and
jmp
aas
mov
mov
ja
mov
pushl
aaa
cs
add
and
lahf
add
or
xor
mov
dec
xchg
mov
jne
mov
xchg
lock
dec
les
pop
scas
jg
outsb
xchg
enter
fwait
ljmp
ja
ss
rcll
or
add
mov
test
sbb
or
mov
scas
decl
loop
icebp
shll
cmp
cs
push
jbe
das
stos
in
sidtl
daa
insb
icebp
outsl
scas
jmp
or
imul
das
fsubrl
loop
add
lahf
cli
mov
dec
pusha
rolb
cltd
xchg
lea
jg
cltd
mov
or
xlat
lods
enter
fnsave
gs
jne
cmp
sub
push
movsb
cmpxchg8b
enter
add
mov
mov
movb
mov
push
pop
fdivrs
rcll
mov
inc
mov
add
lds
sbb
lret
mov
mov
rol
cltd
push
les
stos
mov
jbe
mov
jp
or
into
pusha
imul
add
aas
lcall
mov
add
out
xchg
xor
test
adc
or
push
popf
mov
movsb
mov
fs
mov
mov
pushf
pop
fdivl
shrl
xchg
inc
xchg
sahf
add
dec
aad
ret
in
lret
bswap
mov
insb
arpl
add
aad
mov
ds
or
out
stos
or
xchg
jns
mov
or
orl
lods
fistpll
in
imul
inc
jp
cmc
sar
mov
push
push
les
dec
sbb
lcall
dec
mov
xchg
test
out
jg
repz
jle
pop
lods
push
pop
mov
push
add
bnd
cmp
sbb
xlat
or
pop
push
mov
inc
pop
repnz
add
adc
push
mov
imul
adc
inc
ss
or
cmc
push
fisubs
push
les
in
cli
inc
fsubrl
or
pushl
jl
call
jno
les
ja
cwtl
imul
xchg
jecxz
clc
push
mov
mov
lret
mov
sub
aam
jecxz
ret
mov
or
sarl
adc
push
das
or
xor
sahf
xchg
mov
leave
mov
add
mov
loopne
mov
je
inc
fwait
mov
sbb
fcompl
jmp
rcrb
loope
xchg
scas
or
dec
jb
sarb
test
mov
jbe
pushf
ljmp
sbb
xor
mov
mov
sub
loope
mov
shlb
out
imul
aaa
xlat
cmp
orb
jg
mov
iret
mov
stos
shr
sbb
cmp
aad
pop
in
fdivr
push
ljmp
scas
jb
imul
dec
loopne
mov
icebp
pushf
lcall
mov
gs
mov
hlt
or
dec
pop
jns
sub
jg
xor
sbb
push
jo
loop
pop
mov
mov
mov
shll
fmull
adc
fildll
les
fst
shlb
or
mov
jbe
in
xor
cmpsl
push
cli
nop
test
std
mov
idivl
push
xlat
or
pop
add
cmc
jbe
mov
jmp
repnz
idivl
jecxz
imul
das
sbb
iret
ret
imul
movsb
stos
and
add
push
shrb
jle
add
mov
add
or
loope
clc
dec
xor
adc
in
dec
stos
sbb
pop
movsb
jmp
das
out
out
scas
or
icebp
cmp
imul
ljmp
push
cmpsl
into
or
pusha
inc
mov
cmc
or
add
jecxz
loop
xchg
xor
lret
mov
arpl
jmp
popa
pop
imul
pop
cmp
ret
fninit
push
inc
dec
dec
push
fisttps
cmp
notl
inc
enter
into
aam
fcomps
or
jne
jg
mov
inc
pop
mov
shll
pop
add
inc
loope
test
in
mov
movsb
adc
enter
aad
test
adc
pop
ss
clc
fwait
and
call
clc
cmp
mov
into
fucomip
sbb
or
nop
out
add
mov
pop
sub
cmp
lea
daa
out
sbb
insl
fdivl
or
cltd
jmp
or
std
lods
int
xchg
push
fisubl
insl
mov
cmp
arpl
mov
mov
mov
int3
sahf
pop
enter
pop
jne
in
fwait
jmp
xor
test
jae
movsl
pop
or
rcl
lea
jne
dec
sub
fidivrl
shlb
jle
jp
int3
lcall
jns
pushf
mov
mov
mov
jl
pop
sti
enter
xchg
or
jle
fmul
jg
out
lret
mov
jl
jg
mov
enter
mov
add
test
in
clc
or
loopne
dec
in
mov
mov
mov
mov
lahf
inc
pushf
mov
xor
jmp
and
mov
sub
or
mov
jle
out
std
mov
mov
xchg
lcall
mov
pusha
or
cld
jbe
fists
jg
mov
ret
jecxz
sbb
loopne
in
mul
shrl
divl
fmul
cmp
stos
lods
ret
stos
out
cmpsl
mov
cmc
inc
cmp
mov
inc
rorl
pop
ljmp
push
mov
icebp
adc
loope
sarl
rclb
shr
jle
xor
fldlg2
mov
inc
cmc
ficompl
pop
add
loopne
int
sub
mov
lret
fsubs
lret
aaa
sbbl
ret
mov
das
lods
add
addr16
dec
scas
test
imul
test
mov
popa
jmp
cld
cmp
aam
mov
mov
shlb
fistps
arpl
add
stos
pushf
push
push
icebp
repnz
dec
lcall
addr16
mov
repnz
enter
icebp
cmpsl
in
test
cmp
sbb
dec
mov
push
xchg
and
jg
cli
mov
xor
mov
into
jle
in
jmp
fsubrs
xchg
cwtl
xchg
adc
inc
mov
enter
stc
sbb
jnp
xchg
cli
call
mov
push
mov
jl
jmp
mov
sahf
dec
loopne
push
inc
out
cwtl
or
push
add
jecxz
into
call
push
int3
sub
xor
leave
add
push
lock
mov
mov
xor
xor
fimuls
lock
push
push
jns
inc
push
sub
lds
aaa
push
and
movsl
inc
jnp
iret
dec
mov
pop
mov
int3
or
jg
mov
js
pusha
xor
mov
out
popa
les
pop
add
pop
into
add
mov
mov
data16
rcrl
inc
adc
jne
cmp
out
cmp
pop
imul
int3
loope
std
lahf
popf
mov
sar
test
add
xor
int3
mov
and
pop
add
loopne
in
test
push
lods
mov
push
test
and
mov
mov
ljmp
loope
mov
lods
call
xchg
ud1
sub
push
je
cltd
cmp
les
cmp
mov
push
sbb
in
mov
rcrl
iret
ja
ss
add
xlat
cmp
loope
je
roll
push
or
loopne
sub
and
lods
mov
divl
adc
sub
dec
xor
das
inc
xchg
xchg
pop
adc
pop
xor
shll
adc
sub
into
mov
pushf
roll
xchg
dec
xchg
sbb
pusha
sbb
xor
mov
fcompl
inc
imul
push
or
aam
mov
xor
fdivl
pushf
mov
or
mov
das
adc
out
stos
xchg
fisubl
leave
or
mov
popf
jl
push
cmp
fldenv
mov
add
cs
mov
pop
or
shrb
or
pop
lock
in
btr
sbb
icebp
das
incb
or
pop
daa
lret
mov
pop
subb
jg
roll
bswap
ljmp
jp
daa
enter
les
mov
mov
sbb
add
shrb
std
pop
cmp
inc
stc
xchg
lds
mov
push
js
sti
mov
insl
scas
js
xchg
ss
pop
push
repnz
fidivs
dec
jmp
ja
repz
and
loopne
xor
push
bound
lcall
push
dec
jp
pop
addr16
mov
ds
dec
mov
sub
into
fsubl
imul
call
les
fildl
daa
arpl
sub
pop
out
jno
mov
addr16
pop
jae
outsb
imul
mov
or
pop
cmp
fucomip
lock
aad
and
xchg
jbe
sub
mov
stos
push
nop
mov
mov
rorb
push
fdivs
mov
dec
adc
arpl
mov
das
sbbl
xor
or
ja
xor
cmc
jmp
push
jecxz
mov
fadd
mov
jo
ss
icebp
jle
sub
aaa
push
lock
jae
pop
sub
daa
out
xchg
xchg
cmpsb
push
inc
jmp
iret
add
sbb
fnstsw
jae
xchg
rorl
mov
shrl
arpl
sub
repz
mov
or
call
xchg
sub
cmp
mov
jecxz
mov
xchg
mov
jle
imul
or
xlat
adc
cli
popa
mov
push
or
and
loopne
mov
addr16
pminsw
cli
xlat
mov
pop
mov
jle
lahf
mov
sarl
xor
pop
push
icebp
push
aaa
mov
and
push
pop
pop
fwait
push
movsb
cmpsl
rcll
jmp
push
dec
call
pop
jge
and
in
jg
xchg
cmp
bound
mov
sub
ds
int3
dec
jg
jmp
cmp
dec
pusha
jg
test
or
scas
add
and
and
mov
push
sbb
enter
jp
mov
and
push
into
add
or
inc
and
push
and
mov
shrl
insl
imul
and
mov
mov
pop
popa
std
fisttpll
int3
sub
shll
jle
stos
stos
inc
in
in
xchg
lods
add
cs
in
aaa
ljmp
and
inc
pop
xchg
fbld
pop
aad
adc
or
mov
loopne
cmp
xor
test
shl
mov
inc
fcomps
aam
loopne
cmp
aad
add
mov
aaa
and
cmc
mov
dec
pop
daa
cltd
sbb
inc
into
mov
xor
dec
mov
divb
out
decl
dec
incb
dec
jb
test
lret
jno
pop
pop
jne,pn
mov
je
fst
gs
xchg
mov
fistps
outsl
jne
mov
push
mov
cld
bound
iret
aaa
cmp
outsl
lcall
shll
push
popf
xor
push
jl
jl
or
loope
inc
pop
and
arpl
mov
adc
pop
ljmp
leave
fcoms
mov
inc
sub
ret
ja
into
movsb
les
xlat
je
or
mov
mov
jne
maskmovq
idivl
pop
imul
jg
xor
push
repnz
sahf
les
enter
shl
mov
int
iret
fucom
jg
mov
div
jne
inc
hlt
mov
pushf
jno
xchg
lods
xchg
xorl
aas
jnp
lret
fbld
fldcw
ljmp
test
push
test
adc
push
out
sti
insb
push
jae
or
clc
bnd
mov
shll
sub
xchg
lcall
push
loope
cmp
and
xchg
mov
iret
scas
push
cmp
sub
rcl
lock
jmp
push
adc
mov
mov
mov
dec
jo
icebp
cwtl
jg
sarb
lret
lea
xlat
pop
adc
push
xchg
xchg
hlt
rcll
adc
mov
repnz
out
ljmp
out
mov
xor
jae
jbe
imul
inc
imul
add
call
inc
bound
push
loop
int
or
loop
test
mov
inc
call
stos
push
sub
incb
imul
lods
pop
or
add
ds
mov
sub
mov
cmp
mov
lds
pop
idivb
pop
or
mov
int3
loop
dec
jns
aam
xor
mov
mov
sub
mov
movsb
stos
jle
popa
call
or
and
dec
lods
nop
pop
xor
pop
or
mov
loope
lock
push
xlat
sarl
rcr
add
sub
sbb
mov
nop
out
mov
mov
in
scas
cmc
out
add
out
bnd
dec
int3
xchg
loope
lret
mov
xlat
mov
in
mov
jne
dec
jbe
addr16
fcmovnbe
test
hlt
mov
or
je
test
subl
mov
cmp
inc
jecxz
mov
cmp
scas
rcrb
les
test
out
mov
push
pop
fcoms
xchg
cmp
or
gs
jle
loope
outsb
dec
dec
inc
sub
and
scas
fnstenv
mov
or
inc
jb
cmp
mov
jne
ss
cmp
ret
sti
mov
loop
lea
into
bound
inc
les
inc
pop
jo
outsb
xor
or
jmp
not
mov
outsb
loope
stc
lret
enter
fwait
pop
imul
insl
outsl
xor
xchg
fucom
ja
add
dec
pop
dec
inc
roll
mov
cmp
push
stos
mov
dec
js
stc
pop
inc
cmp
xchg
xor
ljmp
lahf
mov
sbb
shll
sahf
push
call
mov
repnz
mov
fsts
inc
xchg
notl
push
lds
push
pop
decl
mov
sti
addr16
ljmp
mov
jle
xor
mul
scas
push
enter
xor
or
cmp
ss
pop
xchg
inc
stc
lret
jae
aas
loope
loop
or
push
mov
stos
pushf
pop
push
fisubrl
cmp
xlat
lret
lret
push
filds
pop
std
sub
fbstp
adc
push
cmc
std
popa
das
sub
fucomi
lock
and
inc
mov
ret
jmp
loope
jle
push
mov
sbb
inc
or
mov
dec
jmp
mov
fisttpll
push
mov
jmp
pop
dec
add
cwtl
inc
imul
out
movsl
sti
or
sub
test
test
or
ljmp
addr16
jmp
iret
add
jbe
divl
sbb
fcoml
or
lcall
stos
mov
push
xchg
xor
fildll
mov
out
mov
or
loope
loope
inc
outsb
or
into
sahf
jge
add
cmpsl
enter
add
jecxz
das
jb
in
ret
mov
insb
aaa
xor
aas
outsl
mov
push
insl
scas
call
insl
cltd
jnp
xor
or
cmc
inc
pusha
loop
es
ret
out
sub
xchg
mov
lret
push
arpl
mov
andb
add
mov
mov
push
cmp
in
pushf
roll
loopne
stc
imul
loope
sub
xchg
jp
mov
mov
int
mov
or
push
pop
pushf
or
insb
cmp
sub
adc
inc
aam
rolb
fcmovbe
jmp
insl
lods
shrl
or
or
adc
ror
fcom
sti
arpl
imul
jge
scas
into
jmp
lret
inc
popf
mov
aad
shll
mov
lods
rcl
iret
orb
ds
cmpsb
adc
int3
sub
das
xchg
push
cmc
or
icebp
loope
aad
or
xchg
mov
lods
push
pusha
mov
push
and
cs
or
jle
cwtl
mov
arpl
fsub
repnz
mov
mov
scas
scas
pop
shll
lret
arpl
cwtl
das
jne
jno
cmpsb
pop
mov
jbe
xor
and
mov
test
or
enter
jns
inc
cltd
loop
ret
xchg
xchg
mov
aas
test
lret
sub
dec
addl
add
fsubs
aas
or
sahf
xorl
adc
lock
incl
stos
ljmp
add
mov
rclb
test
adc
out
xor
subb
sub
imul
jae
mov
rclb
sbb
shl
outsb
in
xor
int3
jmp
orb
into
outsl
scas
movsb
or
or
jae
pop
jno
hlt
std
sbb
test
fisubrl
fidivl
mov
cwtl
dec
cmp
adc
push
mov
mov
je
mov
jp
push
lahf
or
xchg
popf
add
jmp
add
ror
jl
sub
aad
add
leave
sbb
iret
sub
mov
iret
loopne
out
dec
rolb
mov
push
shrl
lret
insb
out
pop
dec
fidivrl
movsb
lcall
shr
fdiv
push
xlat
or
xor
ret
jne
cli
into
ljmp
xor
ss
push
icebp
std
xchg
jp
jmp
stc
arpl
imul
mov
xlat
push
scas
inc
das
cmp
sbb
xor
aaa
xor
je
jg
or
test
mov
test
or
mov
ja
xchg
cmp
in
mov
lds
jnp
or
loop
mov
test
in
test
sbb
mov
cmp
inc
mov
cwtl
xor
test
into
scas
or
mov
ror
loop
add
imul
or
and
loope
nop
mov
rclb
sti
aam
mov
loop
aam
jecxz
push
shl
inc
mov
add
mov
fs
jecxz
insl
lods
and
cmp
and
mov
cmpsl
mov
enter
div
rol
icebp
outsb
arpl
jle
subw
and
jg
xorl
jbe
jle
sahf
ljmp
mov
sub
jge
in
xchg
xorl
cmp
inc
or
enter
jbe
fimuls
leave
lret
ljmp
adcb
pushf
xor
mov
jb
mov
scas
lcall
sbbl
pop
sub
sbb
cmp
inc
fsubrl
ja
push
fisubrs
mov
loop
lret
notl
or
jns
sbb
not
dec
scas
push
rcr
jne
pop
xlat
bound
outsl
idivl
loop
push
daa
iret
sub
fistps
xchg
mov
dec
outsb
scas
xor
and
enter
pop
sti
jp
jne
pushf
push
pop
fdecstp
iret
orl
xor
sahf
add
lcall
push
scas
jns
xchg
rcrb
leave
rcrb
mov
dec
sbb
add
push
sbb
jne
or
ljmp
ret
shrb
scas
mov
gs
in
or
fcmove
mov
fistps
rorb
testb
inc
aas
dec
loop
hlt
outsl
les
jecxz
aad
inc
and
dec
pop
xchg
lea
sub
dec
outsl
push
in
movsl
inc
insb
daa
mov
mov
and
jp
scas
sub
pop
outsl
or
mov
loop
in
shrb
scas
xchg
add
sahf
push
std
pop
fstpl
xlat
mov
enter
movsb
push
scas
inc
sub
fbstp
addr16
fistl
xor
aad
enter
loop
fsts
arpl
mov
roll
idiv
inc
add
icebp
out
fimull
icebp
pop
pop
adc
xor
mov
popf
xor
inc
imul
jge
inc
mov
mov
mov
lods
pop
les
cwtl
fucom
and
mov
mov
int3
inc
jmp
bound
adc
out
adc
pusha
or
jle
cmp
popf
hlt
inc
adc
out
cmc
scas
ja
mov
rcr
testl
pushf
arpl
mov
sbb
fld
push
cmp
out
pop
out
lcall
fwait
and
loopne
cmc
orl
lea
pop
aad
and
cli
xchg
push
dec
loop
repnz
cli
cmpsl
imul
movntq
imul
dec
push
aas
les
pop
pop
cld
mov
inc
or
mov
pop
jae
mov
jb
insl
les
jg
add
je
pusha
outsl
int
push
incb
or
fisttpll
lahf
test
call
lret
cmp
mov
lahf
je
cmp
dec
sub
xchg
xchg
jp
push
fwait
lcall
mov
sub
lcall
or
mov
jmp
ja
mov
mov
pop
inc
mov
les
jl
push
lret
jmp
call
rclb
add
test
jnp
outsb
push
add
dec
mov
pop
bound
int3
or
and
in
sti
lds
les
iret
mov
and
sbb
mov
ret
pop
dec
jmp
fdivs
or
mov
je
int3
pop
cmp
sub
jne
cmp
jno
gs
xor
lcall
fstps
cmp
xor
loop
subb
cmp
push
add
shl
mov
std
fs
les
sub
out
cmpl
lret
add
add
mov
push
mov
ja
xor
sub
jg
jo
psraw
shl
and
lods
lock
lret
fs
in
jg
push
jmp
jne
scas
inc
mov
adc
push
adcb
in
stos
int3
and
fbstp
imul
popf
jb
mov
mov
cltd
out
mov
daa
aaa
mov
jnp
int
mov
add
call
fimuls
inc
xchg
arpl
mov
push
leave
in
loop
daa
leave
pop
lret
gs
lea
lods
mov
fistl
cmp
mov
mov
mov
test
and
test
xor
mov
mov
outsl
mov
test
push
pop
daa
popf
pop
cld
pop
lea
cwtl
push
xor
call
push
jno
lock
push
push
loop
scas
leave
rcrl
test
lds
das
dec
xor
mov
imul
sub
mov
cmp
scas
or
sarl
mov
xchg
fdivrl
or
sbb
jne
lods
outsl
add
test
xchg
pop
and
mov
sub
shl
shrl
inc
mov
push
int3
shrb
fidivs
xor
test
daa
pop
dec
imul
int3
push
arpl
ret
mov
fiadds
mov
out
rorl
jo
in
jae
lret
sub
outsb
out
push
add
pop
scas
call
loope
cwtl
rcrl
scas
cmpsl
call
or
xchg
enter
xor
into
popf
mov
les
push
dec
pop
outsl
icebp
loop
insb
mov
sbb
lcall
je
jle
sahf
test
imul
mov
sub
pop
js
scas
mov
ss
jge
fstl
pusha
jle
mov
mov
xchg
sbb
jl
xchg
push
jecxz
push
adc
xchg
sbb
dec
pop
push
notb
add
pop
sub
mov
testb
pusha
sub
test
aaa
inc
addr16
ss
mov
mov
sub
popf
icebp
mov
call
loop
das
inc
mov
stos
sbb
mov
sub
popf
lea
and
out
pop
mov
mov
cmp
xor
sub
enter
jg
mov
subb
arpl
cmpl
xor
dec
scas
icebp
hlt
push
jecxz
subl
hlt
addl
push
and
imul
mov
out
loop
cmpl
pop
lock
out
push
out
sub
test
imul
pop
rorb
test
mov
add
stos
or
xor
gs
hlt
into
jge
mov
push
cld
test
jmp
cmp
out
in
pavgb
jns
cmp
clc
test
out
scas
cmpsb
pop
dec
imul
adc
into
sbb
das
jmp
bound
jg
dec
jge
add
xor
or
dec
jge
psubq
insl
ror
xchg
idiv
push
fisttps
lcall
inc
adc
mov
arpl
les
cmpsb
pop
clc
jmp
xchg
inc
inc
sub
aas
jmp
aas
mov
push
aaa
imulb
aas
inc
ret
fildll
sub
les
mov
jle
test
das
mov
lods
mov
jecxz
repnz
inc
push
dec
pop
pusha
inc
roll
fs
leave
shll
xor
jl
rorl
test
pop
repz
stc
pop
nop
rcll
popf
jge
adc
cmp
mov
sbbb
scas
xchg
mov
sub
xchg
lods
push
inc
xchg
jns
daa
icebp
sbb
loopne
xor
cmpsl
pop
xor
or
lds
std
xchg
scas
aad
fcoms
cmp
mov
mov
cli
or
xchg
add
cmp
movsl
mov
mov
inc
ret
div
mov
test
fimuls
iret
cmp
add
in
roll
imul
mov
fbld
push
pop
data16
scas
pusha
mov
es
rolb
bts
mov
sarb
fdivr
adc
jmp
mov
mov
fld
data16
mov
pusha
ss
mov
sub
test
fs
and
sub
bound
popa
xor
sbb
and
notl
pop
or
and
popa
and
int3
subb
xchg
lods
cld
ror
clc
push
rorl
xor
adc
mov
sti
add
test
js
cmpsb
enter
adc
sti
cmp
dec
mov
imul
sub
pushf
arpl
or
sbb
xor
jns
pushf
mov
popf
xchg
pop
test
cmpsl
mov
inc
arpl
pop
jnp
xchg
cmpps
or
inc
cld
xchg
fisubs
loopne
xor
pusha
mov
cmp
aam
cmpsb
adc
mov
fbld
and
std
mov
aas
pop
mov
inc
bound
inc
das
jle
mov
test
push
out
jp
fsubr
lret
mov
shll
pop
mov
test
mov
adc
mov
call
jb,pn
or
or
daa
mov
ljmp
xlat
stc
sbb
aaa
mov
sarb
cwtl
cmp
loopne
lret
mov
xchg
add
fldcw
ficoml
fcmove
dec
ja
xchg
cmp
jg
or
loop
cs
bound
lret
jg
into
out
pop
and
sti
enter
loopne
aaa
cmpsb
int3
outsl
lock
std
jb
mov
clc
adc
xchg
pusha
idivl
cmpsl
iret
fwait
adcb
testb
mov
push
std
enter
nop
test
dec
stos
or
pushf
imul
shlb
sarb
lea
and
sti
bound
dec
stos
xchg
fistps
subb
pusha
inc
mov
ljmp
jg
jno
xchg
dec
addr16
sbb
xchg
sahf
or
imul
xchg
insb
in
in
jg
add
cmc
arpl
shlb
and
loopne
mov
mov
push
popf
mov
sbb
sub
jne
ret
cmp
bnd
enter
movsl
sbb
mov
mov
rcrl
popa
mov
lds
lret
pushf
xor
outsl
scas
das
add
adc
lcall
insl
mov
mov
mov
mov
sbb
pop
mov
daa
lea
cmc
jg
sar
cmp
pop
mov
dec
xchg
les
mov
or
xchg
mov
popf
xor
or
jg
push
mov
xchg
and
mov
and
aam
mov
hlt
xor
jmp
sub
roll
loopne
xchg
xor
mov
call
fwait
pushf
and
or
loopne
sub
push
push
lahf
loope
xchg
testl
repnz
push
icebp
pop
or
xchg
pusha
xlat
or
dec
mov
pushf
in
iret
xchg
aaa
pop
out
pop
push
cmp
lcall
popa
aad
xor
pop
jns
mov
add
mov
cmp
ret
add
or
sbb
xchg
in
push
xchg
test
adc
xchg
out
push
push
cmc
fistpll
rcll
or
push
sbb
divl
loop
mov
add
cltd
jg
adc
push
cmc
add
shl
jae
xor
dec
sbb
ret
push
js
cmp
aaa
sbb
adc
cmp
daa
jns
sbb
or
hlt
mov
push
pop
loope
push
jnp
adc
testl
aaa
xor
pop
out
push
ljmp
sub
xchg
jo
mov
and
rol
or
pop
cmp
dec
repnz
xchg
mov
jle
sub
xor
outsb
sub
jae
insb
mov
aas
xchg
out
stos
fsts
std
dec
or
pusha
fildl
or
mov
ja
xor
pop
mov
sub
pop
lret
cmp
mov
xor
jmp
into
cmp
popf
or
enter
mov
pop
subl
in
jg
mov
mov
mov
repnz
stos
into
enter
stc
pusha
andb
cli
daa
pop
mov
push
mov
das
fstpt
jae
scas
fimuls
cli
mov
xchg
mov
aam
in
movsl
or
push
xchg
in
push
js
pop
inc
add
push
aas
mov
push
pop
jge
xchg
xor
fldenv
movsl
mov
sbb
push
sar
mov
fs
jno
into
xor
xchg
call
sbb
and
jno
and
mov
in
sbb
pop
enter
data16
sub
dec
mov
ficoml
in
in
sub
jge
adc
inc
xor
cwtl
call
ss
mov
int3
cmpsb
dec
mov
and
mov
in
mov
add
adc
jl
push
xor
stos
pop
sbb
push
in
mov
cmp
iret
sarl
mov
cmpsl
inc
outsl
sub
rol
data16
mov
mov
pushl
lods
pop
xchg
fwait
push
sbb
mov
dec
test
pop
gs
mov
dec
jle
stos
mov
or
sbb
movsl
lods
adc
aaa
nop
mov
outsb
out
sub
into
push
pop
insb
data16
in
cmp
and
shrb
or
popf
jne
ds
in
xchg
out
hlt
adc
mov
stos
push
insl
jg
hlt
cltd
fstp
fimuls
adc
cmpsb
fdivrs
xchg
jl
push
adc
push
xchg
loope
jae
push
xchg
or
dec
out
movsb
jnp
rcll
push
mov
xchg
lds
cmp
test
in
sub
fucomip
iret
xor
mov
loope
fwait
mov
push
or
shrl
and
leave
pop
rcl
pop
stc
sti
push
notl
lahf
outsb
and
ds
aam
sbb
mov
or
mov
ds
xor
popa
into
stos
das
inc
addr16
in
popa
pop
cwtl
pushf
clc
jle
stos
ret
fbstp
into
jle
lods
mov
fs
or
lahf
sub
fs
cwtl
mov
xlat
leave
cmc
mov
outsl
sbb
sub
or
out
or
or
test
dec
lods
stc
push
dec
stc
sti
popf
jp
lods
cli
jno
das
sti
fmull
pop
cmp
sub
sub
ja
lret
mov
stos
mov
or
stc
xchg
sbb
cltd
cmp
int
sub
mov
pop
mov
out
out
call
jmp
jb
imul
jmp
pop
rcl
mov
and
subb
mov
shl
les
in
cwtl
lcall
xor
jns
aaa
test
pushf
mov
push
icebp
dec
sub
mov
ret
es
imulb
leave
incl
push
fstpl
out
cmpsl
mov
mov
shll
push
int3
and
adc
enter
xlat
imul
mov
and
push
sub
repnz
fiaddl
sub
pop
lea
cwtl
pop
lcall
and
and
add
mov
rcrb
aaa
nop
in
jg
mov
pop
sbb
xchg
mov
jecxz
scas
cltd
jno
aaa
inc
arpl
shll
aad
dec
jb
fcmovnbe
xor
lahf
or
rcl
mov
and
movsb
adc
icebp
ljmp
enter
mov
xchg
iret
add
dec
dec
pushf
sub
jno
mov
idivl
test
pop
in
mov
cmpsb
in
xchg
inc
test
pusha
push
lahf
enter
test
loop
lock
shl
mov
shl
xchg
pop
je
sbb
rcl
and
sub
inc
fisubl
xlat
js
dec
enter
iret
or
mull
and
push
fsubl
lret
mov
xchg
out
outsb
mov
icebp
fs
sub
imul
stos
jle
push
icebp
js
cmp
push
xchg
xchg
pop
outsl
xchg
icebp
andb
dec
push
outsb
mov
fiadds
jecxz
sub
lahf
iret
add
mov
jbe
dec
sub
clc
inc
repnz
aaa
pcmpeqd
adc
cmp
mov
or
jnp
int
adc
mov
stc
enter
jg
xor
in
mov
rorl
in
xchg
jg
rorb
mov
enter
shl
mov
shr
test
inc
stos
xchg
sahf
fdivrl
adc
cs
arpl
push
and
lret
sbb
jecxz
xor
mov
mov
shll
enter
inc
arpl
stos
fwait
mov
lock
mov
ret
fadds
fcmove
nop
mov
call
sub
mov
pop
rcrb
jb
mov
std
pop
xor
leave
loope
stc
popa
ror
jg
jbe
mov
or
fsubs
dec
dec
daa
mov
fcmovnb
test
ljmp
aam
mov
ljmp
xchg
ja
mov
in
rorl
out
je
and
out
icebp
insb
push
inc
insb
mov
xchg
scas
loop
jo
cmc
das
mov
pusha
sahf
mov
jecxz
imul
fisubrs
ret
xchg
adc
lret
cltd
arpl
sub
mov
cmp
sub
hlt
movzwl
leave
push
jnp
shrb
mov
pusha
test
xchg
pop
mov
pop
fistps
mov
and
ret
push
dec
and
and
ja
rorl
scas
imul
fcoml
shrb
aam
xor
xlat
xchg
mov
cmp
mov
inc
stos
xchg
fadd
jne
mov
ret
pop
cmp
insl
divb
add
in
mov
dec
hlt
jb
jo
out
adc
mov
adc
jb
ds
mov
int3
loop
rcr
push
mov
mov
sub
in
inc
xlat
bound
popf
xchg
bswap
int3
lcall
cltd
mov
bound
sbb
xchg
cwtl
divb
dec
sub
inc
idivb
fcomps
dec
xchg
decb
sub
fwait
mov
mov
call
or
jmp
mov
mov
inc
mov
lds
add
ljmp
push
sti
repnz
sbb
test
mov
dec
outsl
pusha
fbstp
enter
jp
add
mov
mov
xor
test
lret
repnz
ja
adc
rorl
cmp
mov
mov
mov
ja
jecxz
pop
sub
fidivrl
mov
movsb
pusha
lret
mov
fbld
mov
pop
mov
jno
sbb
daa
shrl
addr16
xchg
mov
adc
dec
mov
xchg
add
jle
mov
aas
jo
ljmp
cmpl
mov
adc
push
shlb
sub
fucomp
js
jecxz
leave
dec
lret
popa
xlat
xchg
lods
push
test
and
pop
jmp
sub
or
outsl
jecxz
aas
cmc
movsb
dec
addr16
fdiv
push
xlat
push
stc
movsl
push
sub
mov
sub
sti
test
xor
mov
mov
sbb
rcrl
je
test
add
fwait
push
shll
mov
insb
push
iret
push
jle
fcomps
je
add
movsl
lret
int
or
push
jnp
data16
aad
shrl
jecxz
in
call
rcrl
jecxz
lea
jmp
fstpl
xchg
incl
iret
jecxz
adc
out
inc
sti
mov
mov
mov
cmp
loope
insb
cmp
push
negb
je
cli
int3
lcall
fwait
les
sub
mov
lretw
or
sub
lret
in
int
dec
repnz
pop
pop
fsubrl
cltd
stos
add
inc
ss
mov
mov
xchg
fstpl
adc
and
and
mov
les
inc
inc
pushf
or
cltd
stos
add
scas
jo
outsb
mov
stos
pushf
or
push
push
jg
dec
xor
iret
push
pusha
cld
pop
sti
aaa
arpl
push
fs
jl
fsubrs
stc
add
mov
pop
leave
or
testl
test
add
jle
sub
inc
push
mov
mov
lock
and
shlb
shr
sub
test
mov
mov
cmp
stos
cmp
repnz
mov
lds
out
insl
rolb
testb
inc
stos
sahf
leave
or
lahf
xchg
int
jge
sbb
int3
sbb
mov
adc
lods
popa
test
lret
push
sbb
cmc
xor
push
jmp
inc
out
jmp
sbb
xchg
push
adc
ret
pop
pop
repnz
outsb
stos
out
or
mov
xor
xchg
inc
pop
add
pop
mov
xchg
lea
lods
fldcw
jecxz
scas
inc
pop
aam
and
insb
mov
or
or
mov
mov
inc
mov
sub
jle
xchg
ljmp
adc
call
cmc
lods
shl
test
dec
dec
rorl
add
imul
incl
push
pop
or
sbb
popf
mov
ja
jg
xchg
jae
mov
adc
inc
jg
mov
cmpsb
test
mov
sub
push
rcll
and
dec
inc
pusha
or
fs
dec
into
popf
jl
mov
jo
inc
jnp
adc
mov
add
stos
shlb
addr16
push
fnstsw
dec
out
rclb
lret
inc
mov
shll
add
xchg
lds
jl
or
mov
outsb
scas
iret
rol
dec
lret
adc
dec
pop
mov
dec
dec
scas
outsb
bt
out
sti
jmp
stos
lahf
jge
or
mov
popf
push
dec
das
movsl
hlt
sub
fistpl
push
movsb
movsl
push
sub
loopne
fbstp
mov
ds
sar
cmpsl
push
js
stos
push
cli
and
or
jns
jmp
scas
cli
hlt
sahf
mov
fdivrl
pushf
push
or
cltd
jno
add
xchg
or
xchg
cmpsl
loop
jge
lcall
jmp
mov
add
adc
stos
out
out
jo
jecxz
mov
sub
mov
xor
sub
in
test
xor
aam
xchg
fistpll
lret
push
bnd
jle
sahf
popf
xchg
popa
xchg
cmp
and
ljmp
lock
mov
jle
int
loopne
xchg
push
pop
rolb
into
aaa
cli
mov
dec
pop
jecxz
cmpsl
test
sub
mov
das
pop
jle
jno
push
add
filds
out
xor
ja
mov
les
imul
std
sbb
fwait
sub
ror
es
xor
lret
sar
adc
pop
adc
xor
loope
mov
in
ret
rorb
or
movsl
lods
cmp
mov
stos
daa
jne
loope
mov
cmpsl
pushf
in
imul
push
shlb
mov
pop
jne
push
and
lret
cmpsl
shlb
repnz
mov
lock
jg
or
ljmp
stos
fwait
repnz
cwtl
or
mov
rcll
inc
jge
aad
dec
shrb
push
ss
add
aad
clc
xor
je
imull
jno
or
lock
mov
sub
iret
mov
enter
jmp
into
jle
filds
mov
mov
sbb
movq
fmull
fcmovne
and
rol
test
test
sbb
mov
jle
sahf
xchg
push
or
out
fldt
add
push
bnd
lea
lret
sbb
jge
aam
xor
out
in
daa
shr
sarb
pop
jbe
outsb
sub
mov
imull
clc
cld
or
sti
mov
fdivrl
sub
jne
lcall
clc
jecxz
pop
sarl
stos
sbb
pop
jg
jecxz
fucomi
mov
cld
cwtl
dec
data16
mov
shl
shl
xor
jnp
mov
sti
pushf
call
sub
jno
out
leave
stc
icebp
cld
and
or
mov
jo,pn
dec
out
adc
lods
ss
gs
fucom
neg
inc
adc
les
jo
jmp
movsb
sbb
out
or
aam
push
dec
jl
ljmp
xorl
xchg
outsl
scas
xor
mov
addr16
mov
rol
addr16
mov
xchg
cmpb
sub
fxch
or
inc
addr16
adc
sar
scas
jnp
adc
fdivr
outsb
push
insb
mov
adc
xchg
popa
push
in
push
add
or
ja
inc
arpl
shll
out
je
mov
jecxz
ljmp
jle
arpl
xlat
sub
pop
lret
mov
sbbl
inc
push
mov
mov
orb
ret
or
jecxz
or
jmp
out
jecxz
cmp
pop
sahf
arpl
or
mov
sti
push
pop
movq
jl
outsl
jno
inc
jle
iret
ror
jne
loope
icebp
dec
fmul
and
loop
test
divb
int3
dec
jg
sub
shll
dec
into
cmpb
mov
test
movsb
jg
xchg
fistpl
sbb
jbe
xlat
fsubl
pop
pop
cmc
icebp
dec
fcoml
jecxz
test
cmc
jp
xlat
arpl
aam
rcr
popa
xchg
mov
outsb
pop
xorb
push
shrb
push
push
out
aaa
push
inc
ret
cld
add
dec
jle
inc
jp
bound
aas
loope
add
shlb
aam
mov
and
bound
sbb
inc
push
ja
mov
clc
sub
sub
cmp
mov
or
add
xor
cmc
stos
mov
shr
int3
sub
xchg
in
push
das
pop
inc
out
push
stos
push
push
push
mov
shrb
mov
or
lock
pop
rorb
cmpsb
jge
arpl
add
popa
xor
stos
pop
out
in
std
stos
aam
scas
mov
popf
je
sbb
cmc
xor
and
adc
xlat
pop
out
and
mov
xchg
sub
push
popa
adc
mov
mov
in
xchg
imul
or
aas
fisubrl
jbe
cmc
out
dec
sbb
cmp
das
nop
push
inc
movsb
bound
xlat
xchg
stos
lock
mov
loop
mul
xchg
int3
push
test
outsl
mov
in
movsl
mov
lods
mov
ja
xor
or
jle
pop
jp
xchg
clc
aam
icebp
test
fadd
jbe
dec
shl
xor
mov
lret
fst
pop
add
mov
xor
fucomi
int3
push
xchg
mov
jnp
shl
loopne
or
pop
sarl
xor
or
outsb
negl
repnz
lahf
sub
xlat
or
jmp
shlb
stc
cmp
sbb
adc
jecxz
rcll
cmp
and
inc
jmp
or
dec
sub
ja
bound
ret
stos
inc
lcall
arpl
mov
lods
fwait
js
adc
inc
stc
push
mov
sbb
mov
stos
xchg
stc
rcr
mov
enter
pop
shll
rcrl
fistps
jmp
jmp
gs
cmpsl
shrl
mov
aas
movsl
pop
mov
dec
fbld
push
fists
es
mov
and
loopne
jo
lea
sub
out
add
mov
add
adc
test
push
cmp
dec
into
xchg
add
or
clc
mov
jno
pop
xor
ret
gs
in
std
das
out
jg
jmp
rclb
mov
adc
mov
adc
inc
jb
mov
sahf
mov
and
repz
and
sbb
jo
cmc
repz
cmp
add
push
in
cmp
inc
push
negb
loope
xor
xor
mov
xor
out
sti
add
add
je
nop
in
fnstenv
pop
int3
jecxz
nop
pop
lret
test
rcrl
popa
push
sarl
sahf
jmp
xor
arpl
enter
push
sbb
sbbl
xor
mov
sub
lahf
cltd
divl
fistpl
push
insb
sub
hlt
loopne
aaa
aas
sub
or
stos
sub
sub
mov
dec
fistps
fistps
jne
arpl
push
mov
aaa
lret
mov
add
sti
in
ss
dec
in
out
popf
jo
xor
and
cmpsl
mov
jecxz
ds
dec
in
in
outsl
lds
mov
and
jle
sub
jmp
out
ljmp
fisttps
add
dec
iret
popa
or
scas
pop
shll
xchg
cmp
or
shrb
movsl
jge
pushf
adc
jmp
std
lods
xor
ret
les
xchg
out
and
sub
stc
mov
lods
xor
and
mov
jecxz
xchg
int
or
std
mov
test
ljmp
mov
into
jecxz
inc
out
ret
shlb
pushf
lds
mov
cmpsl
cmp
out
inc
loop
sub
inc
out
loope
push
push
movsl
std
xchg
cmp
shld
sub
push
aad
je
test
mov
stos
add
popa
sub
loope
movb
inc
xor
out
cmpsb
push
pop
test
aad
adc
fld
mull
adc
into
push
imul
cld
shrb
pushf
cmp
jecxz
jae
mov
xorl
cmc
push
imul
or
xor
pop
adc
xchg
out
inc
cmp
lret
mov
xchg
xchg
xchg
xor
mov
xchg
and
out
loope
xor
aam
daa
cmc
push
stos
lcall
mov
scas
push
fnstcw
jae
hlt
ljmp
rorb
js
fcmovnb
loop
jecxz
out
fildl
xchg
rcll
push
xlat
adc
arpl
push
popa
ret
cmc
repnz
mov
jmp
ljmp
mov
leave
in
in
xor
pop
jbe
xor
stos
das
and
sahf
cmp
xlat
dec
and
lret
mov
stos
mov
jg
jae
push
jns
mov
dec
inc
imul
bound
pop
jmp
bound
psrad
sarb
jecxz
rcrl
scas
aas
shll
and
cwtl
stos
aas
xlat
jmp
or
outsl
fs
call
es
test
jg
mov
fldcw
fsts
push
int3
iret
out
push
call
mov
xchg
pop
outsl
push
jg
mov
stc
pop
outsb
shll
fwait
cmp
loop
aas
mov
xchg
lock
arpl
mov
sbb
cmpsl
stos
sbb
cs
test
pop
aam
push
pusha
mov
aad
xchg
xor
sbb
inc
xchg
add
or
inc
sub
jmp
pop
dec
stos
lret
cmp
das
lcall
cs
loope
ljmp
jl
sub
fs
xor
dec
sub
sub
jg
movsb
cmp
or
jle
ja
jg
loopne
stc
push
data16
stc
outsl
sub
inc
cmp
loope
stos
mov
adc
mov
outsl
test
pop
fwait
push
lret
add
mov
jg
loope
cmpsb
ror
mov
sbb
or
push
sub
mov
outsl
lods
shlb
pop
test
leave
mov
ja
cld
rolb
inc
mov
addr16
stos
or
icebp
scas
jmp
xor
jle
push
icebp
mov
push
xor
jmp
mov
int3
jmp
pop
xor
sub
sub
mov
enter
popf
fistl
loope
ljmp
out
pop
cmc
iret
add
push
lret
daa
inc
ds
add
mov
xchg
mov
add
faddl
or
das
xchg
sarl
hlt
addr16
inc
jbe
jmp
outsb
loope
mov
inc
sbb
ret
data16
jbe
rol
shll
mov
data16
rcrl
ss
jge
aaa
jmp
fnsave
lea
sbb
jb
xchg
dec
pop
arpl
mov
adc
and
out
hlt
test
mov
idivl
mov
ljmp
xchg
lds
imul
xlat
in
les
js
jecxz
push
pop
push
mov
sub
mov
repz
push
pop
mov
dec
mov
jae
mov
push
cmp
stos
testb
scas
cmp
mov
xor
cmp
mov
adc
cld
sub
ret
fnsave
aaa
xor
inc
stos
sbb
cltd
clc
out
test
pop
push
sbb
sub
xchg
imulb
js
aam
lahf
movsb
xor
sbb
insl
inc
or
sub
xor
std
cs
inc
popa
enter
adc
pusha
test
out
or
jo
lret
bound
roll
mov
daa
fcmovnu
in
xlat
jb
icebp
iret
sahf
jne
stos
sahf
add
push
sub
lret
lds
nop
pop
add
je
sub
mov
clc
mov
pop
xor
sbb
stos
fildl
loop
bnd
stc
testl
or
imul
or
mov
ss
idivb
popa
dec
lahf
inc
or
xchg
pushf
data16
ds
mov
mov
addr16
repnz
jle
lds
push
adc
loopne
jo
sbb
rolb
sub
out
fisubrl
mov
xchg
pop
push
push
pushf
or
mov
hlt
iret
das
mov
mov
fucomi
dec
jmp
call
mov
stc
hlt
pop
enter
pop
std
data16
or
pop
in
cmp
in
in
call
dec
add
or
adc
lcall
xlat
ret
jecxz
hlt
adc
pusha
add
push
nop
in
mov
out
ffreep
mov
and
jg
mov
cmp
aam
push
cmpsb
sub
sub
arpl
data16
xchg
mov
inc
jne
pushl
shll
push
sub
test
xchg
cmc
cmp
pop
jmp
cwtl
push
adc
or
and
xchg
xchg
dec
jge
and
or
sbb
sbb
jle
mov
mov
xor
icebp
cwtl
mov
pop
cld
inc
add
outsb
arpl
adc
mull
repz
pop
jmp
orl
jecxz
jg
scas
or
insb
mov
cltd
pop
adc
pop
inc
sbb
int3
or
fiaddl
xorl
fstpt
pushf
mov
sub
or
rdtsc
ss
imul
test
data16
lds
mov
popa
xchg
rorl
std
and
test
mov
stos
ret
enter
sbb
int
mov
sub
or
xor
fcmovne
not
inc
fidivrs
insl
out
inc
jp
mov
add
incl
lcall
mov
lret
out
rorb
mov
movsb
stos
mov
ror
sbb
or
test
lahf
lret
mov
jg
push
xchg
insl
lret
mov
fldcw
jge
mov
sub
xor
push
xor
inc
sti
push
jns
xchg
cltd
ss
adc
testl
je
jnp,pt
jmp
jge
test
inc
sub
push
jns
push
mov
ret
ret
fs
pushf
jmp
pushf
clc
push
dec
inc
jnp
les
push
or
cwtl
jg
stos
jecxz
mov
rolb
sahf
lret
sbb
mov
fs
or
cmc
cmp
xor
pop
loop
or
iret
pop
outsb
sub
mov
and
adc
xchg
mov
lret
dec
mov
sahf
popf
sarl
mov
fwait
lods
dec
in
jle
adc
jg
fcomps
mov
stos
mov
sti
test
or
insb
sub
hlt
sbb
fstp
jl
in
jmp
inc
shrb
loope
push
pop
mov
mov
incb
cltd
pop
repnz
outsb
mov
jg
mov
inc
in
jb
je
ljmp
lcall
in
pop
jmp
setno
outsl
sub
jp
test
sub
jb
ljmp
inc
repnz
sbb
or
ljmp
cmp
cmc
adc
sbb
jecxz
and
xor
outsl
xor
fisubs
mov
scas
fcmovnb
sbb
je
xchg
xchg
lods
les
sahf
push
dec
mul
pop
sub
imul
pushf
out
xlat
mov
jno
sbb
sub
push
jp
mov
scas
mov
push
pop
cs
push
or
es
pushf
cmpb
idivb
dec
in
dec
test
jle
stos
popa
imul
mov
bts
push
psubusb
pop
into
insl
jno
out
pushf
or
insb
pop
and
movsb
into
push
mov
roll
sub
xchg
add
jmp
push
mov
shrl
xchg
and
fldt
in
outsb
or
sub
mov
pop
and
lods
sti
shll
scas
mov
and
scas
or
ljmp
or
or
shll
mov
sbb
sbbl
jcxz
into
pop
jmp
mov
out
mov
lods
lret
jmp
xlat
cmpsb
loopne
clc
call
sub
subb
pop
out
push
out
int3
iret
call
fwait
lods
mov
or
pop
iret
std
pushl
jo
iret
xorl
sub
lcall
xchg
xchg
gs
out
push
ror
clc
cmpsb
and
aad
into
push
icebp
in
adc
fwait
xlat
jecxz
sub
sbb
mov
adc
sub
pop
mov
into
xchg
jns
or
xor
sub
dec
data16
mov
push
inc
mov
addl
jg
fwait
lretw
mov
push
or
add
jb
dec
push
out
cmpsl
mov
jl
or
mov
jo
stos
lret
icebp
pop
mov
aaa
aam
inc
jle
mov
lock
mov
mov
scas
add
lds
stos
jno
xor
pop
loop
add
pop
pop
nop
pushf
adc
loopne
ret
cmp
rcr
mov
js
lea
xlat
loope
lret
dec
or
mov
or
adcl
enter
stos
jae
cld
sbb
fistps
push
out
sub
imul
in
call
dec
loope
mov
sub
jecxz
nop
ret
xor
out
out
jb
jb
mov
sub
mov
fisttps
jg
xchg
xchg
jg
jg
push
into
jle
dec
xchg
mov
push
xchg
pop
mov
lahf
in
pop
mov
icebp
out
and
std
scas
mov
lcall
lock
sub
cmpsl
mov
gs
mov
push
jp
pusha
jmp
push
adc
sub
stos
cld
xchg
ret
fwait
jne
fnsetpm(287
inc
in
lock
jne
push
into
dec
idivl
out
out
fistpl
lock
sbb
ds
and
stos
sbb
cwtl
loopne
cmp
out
inc
sbb
sub
dec
xchg
cmp
sub
ret
scas
mov
aad
je
fwait
outsl
add
leave
fs
lret
xchg
push
or
sbbl
mov
pop
fnstsw
sbb
adc
xchg
jns
xchg
fidivrl
mov
shll
das
movsb
or
pushf
mov
or
rep
pop
popf
push
sahf
mov
sub
jo
sub
sub
popf
scas
pop
mov
sub
pop
jl
mov
mov
into
inc
jne
adc
stos
repnz
ja
push
jmp
inc
loopne
xor
adc
push
sbb
jp
aas
mov
loopne
cmp
out
jl
das
sub
and
push
out
mov
adc
push
cld
jnp
movsl
mov
icebp
mov
pop
mov
ja
dec
jmp
pop
out
sbb
pop
mov
ss
sbb
in
movsl
cmp
les
aam
adc
xor
jno
jae
fdivrs
jnp
icebp
cmp
sbb
out
in
les
dec
cwtl
shrb
loope
mov
mov
loope
sbb
push
loope
test
inc
loop
clc
jo
out
dec
test
out
outsl
or
mov
clc
popf
dec
cld
in
fmulp
mov
xlat
jae
lret
xchg
cmp
xchg
dec
jle
into
mov
xchg
sub
xor
pop
in
icebp
pop
test
sbb
bound
repnz
jnp
jle
inc
or
outsb
lods
repnz
fisubrs
or
mov
iret
lods
subl
mov
pop
rcrb
add
scas
mov
ficoms
jns
jl
jno
rcrl
aad
jle
mov
dec
fsubrl
dec
xchg
lea
subb
mov
in
fstpl
push
scas
ret
xchg
ljmp
jg
push
aas
mov
mov
in
sbb
add
jno
shr
jecxz
cmp
adc
mov
loopne
or
js
inc
xor
mov
mov
mov
mov
xchg
arpl
divl
add
jg
dec
cld
rorl
sarl
aam
cmp
mov
add
xor
pop
add
in
jnp
into
jno
mov
xchg
adc
push
push
dec
je
or
cs
jb
data16
scas
sub
cmp
fcmovu
lods
mov
pop
pop
mov
push
push
xor
mov
jg
push
mov
aam
lea
push
adc
mov
adc
xchg
push
hlt
pop
cmc
js
outsl
pop
pushf
xor
sti
popa
or
int
jb
sti
insl
pop
pushf
shrb
fsincos
mov
or
imul
or
adc
lret
push
xchg
push
xchg
mov
jmp
mov
pop
fwait
lods
sbb
mov
pop
mov
dec
pop
arpl
or
jae
jb
add
in
jo
sub
js
add
ja
sbb
or
stos
int3
sbb
shr
push
mov
test
cld
mov
outsb
xor
rcrl
fwait
enter
in
jle
inc
loop
add
jp
xchg
xchg
lret
inc
lods
mov
xlat
fsubl
ja
or
ja
lcall
and
jnp
cmp
or
bound
movsb
inc
push
lahf
push
xor
lret
mov
int
movsl
xor
inc
cli
xchg
scas
adc
and
js
push
sahf
stc
sub
mov
rcrb
sbb
xor
pop
inc
daa
pop
or
mov
into
mov
out
shll
mov
jbe
push
test
jle
cmc
int3
iret
xor
hlt
addr16
mov
scas
andl
mov
shr
ret
stos
mov
ja
xlat
jo
ffreep
jmp
adcb
inc
pop
mov
cli
and
or
jge
jg
icebp
movsl
and
data16
aaa
adc
mov
jmp
mov
sub
out
jb
icebp
fucomi
mov
shl
pop
add
rol
push
jmp
stos
inc
clc
outsl
lret
loopne
lret
pushf
enter
mov
lcall
xchg
aam
xor
imul
mov
push
jae
or
movsb
fdivrl
lods
jb
rcll
fwait
push
mov
je
mov
mov
test
jecxz
push
cltd
arpl
mov
stc
ret
ja
pop
stos
push
push
cmp
test
adc
dec
push
sub
aas
fcmove
lret
jnp
or
mov
icebp
xchg
and
sub
mov
lcall
sub
fbstp
dec
insl
cmp
divb
push
fbld
outsb
in
lock
out
shlb
lret
jl
and
lret
int3
adcl
scas
testl
add
sub
adc
and
mov
cs
pusha
jbe
arpl
lret
imul
int3
leave
insl
aam
mov
ret
xor
int
adc
xor
jb
cmp
xor
xor
sti
push
in
cmp
xor
imul
mov
jg
and
jle
aad
mov
pop
aam
les
mov
dec
and
movsl
cmpsl
inc
repz
shl
fucompp
mov
cltd
dec
loopne
or
out
ljmp
stc
sti
bound
imul
cmc
data16
fistps
lret
ds
testl
stos
jnp
push
push
inc
mov
or
mov
test
inc
clc
pop
pop
or
lcall
pop
push
jg
xchg
mov
sbb
arpl
loope
jl
mov
xchg
mov
loop
sub
cli
cltd
inc
mov
inc
dec
xchg
cwtl
fidivrl
mov
cmp
scas
push
sbb
push
sbb
loopne
push
sbbl
mov
decb
jle
add
std
jo
icebp
ret
add
cwtl
stc
and
mov
sbb
jecxz
stos
clc
in
pushf
fsub
test
loopne
test
jnp
icebp
mov
inc
rcrb
push
arpl
sub
mov
repnz
sub
or
and
jns
out
sbb
ljmp
push
fdivr
jb
push
lcall
adc
xor
cmc
mov
std
insl
mov
loope
hlt
push
iret
in
push
jns
dec
xchg
scas
push
std
pop
cmp
shrl
mov
pushf
movsl
cltd
add
or
leave
pop
or
std
test
fbstp
xor
in
mov
sub
arpl
lea
adc
cmpsl
xor
xchg
call
mov
fwait
pop
push
mov
sbb
or
mov
dec
add
sbb
inc
mov
hlt
inc
aas
pop
sahf
jecxz
jg
inc
push
pop
outsb
mov
stc
sub
jg
fwait
mov
push
aam
mov
ja
hlt
callw
jae
mov
jbe
fildl
push
lds
popa
and
ds
mov
stos
sbb
mov
scas
fistps
imul
hlt
mov
pushl
dec
movsb
orl
loope
fidivs
or
push
pop
fisttpl
out
data16
jo
pusha
jo
pop
dec
add
sti
dec
pop
popa
adc
lcall
test
push
popf
or
call
mov
or
in
mov
mov
stos
mov
pop
pop
fdiv
jge
fcompl
iret
iret
daa
popf
in
add
mov
arpl
das
adc
insb
fstps
adc
dec
inc
jp
fsubrl
rorb
arpl
and
mov
pusha
push
cli
outsb
mov
lcall
jle
rcrb
iret
andb
pop
sbb
jge
stos
mov
outsl
sub
int
mov
mov
or
pusha
imul
adc
call
jecxz
or
mov
cmpsb
hlt
arpl
dec
divl
lods
stos
jecxz
cmc
fsubrs
pop
mov
leave
push
and
jnp
pop
pop
ja
inc
cmc
loop
pop
test
clc
mov
sarl
inc
mov
xor
jnp
or
push
sbb
push
rclb
cmc
cld
adc
fidivl
icebp
or
jecxz
jb
fimuls
icebp
movsl
mov
lahf
js
loop
test
jg
rcr
stos
mov
inc
outsl
data16
inc
inc
mov
pop
shlb
push
fsubr
jle
ret
lock
lret
sub
sub
adc
and
movsb
adc
outsl
mov
xor
add
mov
mov
xor
and
fcmovbe
fcmovb
dec
push
xor
jno
arpl
adc
dec
out
sub
xchg
mov
mov
les
inc
les
clc
clc
inc
popa
stos
xor
inc
movsl
or
sub
hlt
movsl
test
das
sahf
testl
xor
mov
in
cmp
cmp
pop
daa
sub
add
adc
sbb
sub
pop
int3
jle
test
push
push
pop
insb
pop
fdivrl
and
negl
xlat
adc
jne
pcmpeqw
cli
ret
mov
or
sub
xchg
sahf
lods
lods
cli
sub
ja
and
shrb
fdivrl
inc
mov
call
lea
jo
and
loope
faddl
xor
out
lock
mov
adc
mov
xor
mov
aas
mov
or
push
mov
push
fwait
push
in
mov
jae
cmc
inc
cmc
scas
jnp
jmp
xor
adc
and
pop
fldt
ss
cmpsb
or
xchg
jmp
sub
push
sub
mov
adc
and
add
fisubrs
pushf
pusha
sub
daa
push
data16
icebp
jg
xor
adc
and
adc
fstpl
push
xor
shll
insl
or
mov
lock
loopne,pn
stos
popa
ljmp
fwait
notl
or
bnd
sti
pusha
in
sbb
mov
fimuls
mov
sti
je
loopne
or
test
mov
fldln2
or
cwtl
inc
mov
rolb
cmc
inc
sti
fmull
dec
mov
sar
dec
jns,pn
mov
mov
mov
and
lods
jnp
insl
aam
ja
fwait
inc
icebp
mov
xlat
cmc
mov
fidivrl
shll
lret
stos
rol
add
pop
out
jnp
pop
jg
scas
mov
iret
jbe
shlb
cmp
or
popa
dec
sbb
mulps
fisttpl
mov
shlb
lcall
int
dec
lock
addr16
imul
lods
dec
lods
lds
popf
das
pusha
mov
or
lods
cwtl
mov
jle
push
scas
or
mov
xor
xor
in
lret
pushf
jecxz
xchg
fcomip
popf
pop
pop
mov
ss
lret
popa
iret
inc
rcrb
dec
jo
pop
enter
xor
repz
pusha
and
das
test
dec
sub
mov
ds
in
pop
add
pop
test
call
dec
cmp
jmp
into
cmc
dec
icebp
inc
ror
jle
cmc
icebp
jle
jl
push
or
push
out
jmp
lahf
out
xorb
loopne
fimull
or
insb
push
sti
lahf
inc
or
popa
div
loope
fcomi
push
leave
aad
ljmp
adc
jle
push
xchg
rol
mov
lcall
les
jp
mov
out
cmpsb
ret
xlat
inc
lret
mov
xor
stos
scas
pop
aad
int
add
xchg
push
xchg
xchg
or
nop
mov
pop
ljmp
dec
test
pop
dec
jl
pop
addr16
mov
xchg
fwait
int
out
dec
arpl
jbe
jp
cwtl
xor
mov
xchg
rcl
aas
inc
inc
xchg
mov
sub
iret
negl
enter
leave
adcl
das
sub
xor
add
push
jecxz
push
mov
adc
cwtl
insb
mov
sbb
pop
mull
outsb
insl
icebp
jae
mov
pushf
push
mov
mov
loop
mov
fiaddl
mov
enter
jb
mov
loope
mov
rcl
fisubs
shlb
cs
mov
xor
cltd
rclb
in
mov
fsincos
mov
dec
sbb
fwait
loope
mov
mov
dec
push
jbe
aaa
in
rcrb
test
mov
sarl
push
pop
mov
push
mov
jmp
aas
dec
in
dec
out
push
call
sub
aam
lret
lods
fdivl
loope
ret
fisubl
cmp
add
dec
popf
test
aaa
lret
test
xchg
rorb
lahf
fsubs
mov
aaa
cmp
call
jne
stos
das
fisttpl
inc
in
xchg
lcall
mov
xchg
std
clc
mov
je
xchg
nop
scas
out
mov
aam
pop
xor
daa
stos
popf
decl
in
pop
mov
daa
das
iret
mov
jo
lahf
lock
sbb
arpl
in
inc
incl
pop
inc
scas
sub
fcomip
sub
cmp
and
pop
cmp
mov
out
or
divb
lods
dec
loope
pop
jae
ljmp
pusha
adc
sbb
outsl
popf
es
adc
and
pop
jo
pop
jns
xor
outsl
repz
push
xlat
push
loope
pop
test
dec
fwait
mov
cli
lods
xchg
mov
xchg
cwtl
pushf
dec
out
into
xchg
aas
cmp
daa
and
mov
push
mov
sub
mov
je
stos
out
es
and
ljmp
out
or
mov
push
mov
inc
pop
jmp
or
pop
mov
push
aad
pushl
repnz
sub
mov
push
mov
lret
mov
push
cltd
cld
inc
jp
push
addr16
pusha
sti
hlt
pop
sti
fisttps
mov
repnz
xchg
mov
fldt
push
scas
xchg
dec
jl
adc
stc
movsb
sti
ja
mov
mov
mov
jle
adc
or
ss
lcall
arpl
mov
mov
out
jle
cmp
mov
loopne
jne
sti
jnp
jnp
xchg
outsl
ret
cmpsb
add
mov
fidivrs
sbb
mov
mov
daa
add
cld
iret
shr
xor
into
jle
mov
decb
dec
dec
outsb
and
les
inc
inc
xorl
inc
mov
xchg
add
pop
outsb
rorl
mov
add
mov
mov
push
popa
xor
sub
or
out
push
call
jne
dec
aas
out
add
repnz
popf
popa
setg
repz
mov
cld
mov
pop
je
insl
idivb
push
in
dec
or
push
outsl
lret
stos
jecxz
cmp
popa
fsub
mov
rcrb
fisttpll
ret
mov
outsl
aad
inc
jmp
call
sahf
jg
sbb
push
lds
jno
iret
data16
cli
negb
xchg
pop
lea
stos
sbb
sbb
push
push
hlt
pop
sar
push
cmc
sbb
test
sbbl
mov
jmp
mov
adc
mov
sub
outsl
jg
cmp
mov
jmp
xchg
scas
outsb
push
mov
iret
pusha
jb
ja
inc
push
in
mov
ljmp
mov
push
fdivrs
lods
ss
divl
push
xchg
arpl
xchg
mov
nop
imul
cmp
sub
into
inc
fisubl
out
xor
sbb
xchg
out
fisubs
mov
or
divl
ja
mov
loope
cli
cmp
push
xchg
fistl
pop
cmp
cs
pop
movsl
addr16
std
das
sbb
pop
jae
out
or
pop
xor
cmp
loopne
ja
adc
push
test
pop
mov
lea
cli
stos
or
jmp
xor
and
jl
push
and
sbb
sub
out
sbb
imul
test
cltd
ljmp
popa
shrl
out
sti
or
stc
dec
ficompl
mov
xchg
insb
jl
pop
lret
xor
mov
lods
inc
xchg
push
imul
loop
test
orl
dec
nop
rcrl
jmp
negb
dec
adc
sbb
mov
shlb
xchg
mov
xor
jo
push
lods
fbld
jb
sbb
sub
pushf
cs
jmp
loope
pushf
mov
movsl
push
mov
iret
je
shl
xchg
adc
add
sti
push
cli
shlb
push
bound
dec
add
cmp
dec
in
cmp
inc
pushf
inc
imul
jb
fistl
imul
or
loop
or
and
in
ds
popa
or
mov
mov
dec
mov
sti
lcall
dec
sbb
adc
enter
dec
sub
rcrl
ret
and
shr
loope
lods
idivl
movsb
jle
std
jno
or
bound
sti
or
leave
sub
jns
data16
imul
pop
dec
mov
inc
push
add
mov
jbe
inc
or
nop
arpl
cltd
mov
jge
push
and
stc
cmpsb
stc
jne
in
mov
popa
ret
cmpsl
lret
int
inc
outsb
lods
fstpt
add
into
adc
std
mov
xlat
stc
outsb
mov
adc
sub
les
sahf
out
push
aas
mov
lock
rolb
mov
das
lret
imul
fstpt
or
mov
mov
rcrb
in
sbb
cmp
pop
test
cwtl
xchg
jae
icebp
or
jno
pop
rcrl
pop
xor
adc
ror
lret
cmp
mov
testb
rcr
mov
lcall
inc
iret
cltd
add
inc
or
and
mov
not
shrl
test
mov
orl
fndisi(8087
jle
std
add
rorb
mov
pop
inc
imul
lock
imull
in
scas
out
scas
sbb
cld
jg
and
in
mov
arpl
xchg
lret
xchg
mov
jnp
jg
mov
sbb
cltd
add
scas
mov
and
popf
das
call
cwtl
pusha
int3
inc
dec
cltd
push
in
lds
call
add
push
ficoml
arpl
mov
mov
mov
cltd
adc
fildll
lcall
icebp
das
loopne
enter
push
and
push
pop
sbb
out
mov
cmpsl
pcmpeqw
sub
pop
jg
dec
jb
and
pushf
aaa
fldenv
stc
mov
cmp
mov
movsb
or
or
jle
jmp
xor
sub
jne
fcomps
jo
xor
jp
adc
jle
loope
mov
test
vpmulhw
cmpsl
je
dec
sub
sbb
cmp
scas
dec
mov
push
movsl
fistpll
lods
cmp
push
pop
lods
push
cmp
sti
jo
mov
mov
jo
inc
test
gs
cmp
rcrb
imul
xchg
mov
lcall
xchg
movsl
aas
loope
xor
jl
filds
out
fbld
shrl
lcall
hlt
pop
jl
in
loope
or
mov
mov
inc
addb
sbb
pop
push
mov
sub
cld
adc
mull
test
push
leave
add
push
enter
rorb
pushf
or
inc
ss
sub
or
iret
dec
push
dec
lods
xchg
mov
movsl
ret
mov
addr16
mov
ljmp
adc
xchg
mov
inc
xchg
pop
add
ffree
jnp
aas
fsubs
jg
clc
stos
adc
sbb
and
mov
and
ljmp
jne
cmp
bound
icebp
mov
js
sub
je
jo
jp
ljmp
movsl
push
push
ljmp
dec
jecxz
aad
jo
fcmovb
mov
shl
jg
scas
jae
cmp
shr
or
pop
pop
fs
lods
or
mov
shrb
pop
jecxz
push
sub
push
int3
push
fldt
int
or
sub
or
lret
sbb
push
dec
xchg
lcall
xchg
sbb
jbe
pop
negb
into
cmp
jl
mov
push
push
test
inc
push
xchg
out
insb
ret
jmp
into
adc
adc
push
mov
rcrb
in
rclb
out
pop
int3
mov
insl
shr
popa
icebp
mov
mov
ja
mov
je
imul
out
das
sub
test
test
adc
repnz
imul
fnstenv
cli
dec
lock
mov
lret
dec
push
mull
pop
lods
not
imul
push
or
push
xor
mov
test
sub
add
shlb
cmc
insb
stos
xchg
xor
jecxz
das
ret
pop
push
push
xchg
stos
fists
mov
cmp
adc
pop
mov
jecxz
pop
ret
jle
push
push
out
sub
cmovo
cmp
lahf
sbb
in
cs
or
lret
inc
sub
pop
dec
jno
mov
cmc
scas
adc
cltd
test
mov
push
out
inc
and
lods
inc
aaa
int3
jnp
xor
ja,pn
jle
add
mov
xchg
pop
stos
pushf
imul
das
iret
mov
jae
mov
out
adc
bound
arpl
mov
or
fwait
test
push
adc
and
xor
adc
adc
out
movb
mov
adc
jns
insb
fdivp
data16
lcall
outsl
sbb
fwait
test
push
dec
shrb
push
xor
dec
mov
int3
lock
mov
faddl
and
lds
cmp
mov
out
aas
mov
sub
fisttps
aas
cmp
iret
dec
pop
mov
dec
or
out
cs
fisubrs
movd
or
test
popa
imul
mov
cmpsb
jmp
js
popf
pop
es
push
inc
mov
adc
push
xlat
cmc
sti
gs
stc
mov
popa
stc
lcall
lahf
mov
add
fmull
adc
imulb
stos
xchg
lods
lret
ja
xlat
fistl
inc
insl
jne
into
push
imull
xchg
jns
cmp
in
or
js
push
shr
repnz
gs
push
jecxz
std
lods
cmpsl
jne
rorb
rclb
mov
mov
or
add
nop
insl
or
jle
add
fisttpl
lahf
inc
mov
jmp
xchg
xchg
clc
cmp
mov
bound
add
inc
les
xlat
cwtl
pop
cmp
pop
lods
xor
lcall
push
sbb
in
enter
ljmp
daa
loop
loop
pandn
nop
xlat
sarb
and
mov
mov
jns
jl
inc
movsl
mov
lock
xor
sub
xlat
loopne
cmp
clc
pop
adc
rorl
inc
nop
mov
push
lock
push
push
arpl
mov
xchg
mov
pop
stos
stc
mov
mov
bound
fimull
push
shl
ret
push
xchg
popa
in
push
push
jbe
aas
xchg
jg
lahf
push
jne
cmpl
and
data16
les
pmaddwd
negb
leave
xchg
fcomip
or
inc
sub
outsl
adc
xor
push
pop
cwtl
sar
cmpsb
gs
inc
mov
repz
mov
jle
cwtl
dec
lods
push
shr
aaa
inc
into
jbe
dec
enter
xor
dec
cmp
iret
test
xchg
add
mov
out
lret
fsubrl
das
jo
jnp
cmpsb
adc
shll
jnp
sarl
mov
xor
cmp
xor
or
dec
mov
aam
ss
out
movsl
lods
ljmp
ret
ja
bound
shl
add
mov
or
mov
mov
xchg
test
pop
and
dec
push
lret
jle
int
imul
xchg
pop
mov
aad
mov
in
lret
or
gs
rcl
pop
mov
pushf
scas
jp
popf
or
and
fs
je
rcll
jb
leave
mov
mov
jo
stos
pop
aad
out
mov
insb
mov
frstor
sbb
lea
lahf
out
iret
inc
or
loope
jmp
xchg
xchg
xchg
sub
sbb
inc
loope
jne
or
repnz
int3
je
stc
xchg
push
cmp
bound
int3
stos
popa
mov
push
lret
push
jecxz
mov
inc
into
imul
xor
leave
icebp
rorl
xor
test
movsb
leave
pop
ja
mov
sbbb
xor
jg
jae
push
add
mov
jmp
aas
popa
sbb
xlat
scas
jecxz
sub
loope
pop
fidivl
aad
mov
ljmp
rorl
in
inc
cmp
pop
ret
mov
mov
out
jmp
jg
pop
lcall
dec
out
add
push
stc
iret
out
imul
jns
shrl
repz
mov
frstor
jbe
mov
jge
jmp
jecxz
negl
mov
stc
mov
in
sub
mov
test
lods
mov
or
out
std
hlt
sarl
icebp
jg
mov
ljmp
mov
icebp
and
xchg
xlat
push
pop
jecxz
ror
out
jae
or
pop
xor
xchg
fcoms
mov
dec
lock
push
out
sahf
sti
fs
sarl
fidivl
out
jmp
ret
jns
arpl
or
lods
jmp
mov
mov
cmpsl
jmp
popa
inc
mov
ja
out
mov
das
sub
mov
jecxz
shr
test
dec
add
fildll
loope
jo
mov
lcall
adc
ret
sub
dec
mov
jae
push
cmp
adcb
mov
fwait
push
cld
jmp
pop
jp
into
out
iret
loope
inc
lcall
jp
dec
xchg
xchg
arpl
bound
inc
rorl
or
stos
in
loope
in
add
mov
mov
out
jg
loop
pop
sar
shr
lods
jecxz
cmp
int
sbb
cli
jecxz
shll
sti
loopne
inc
push
and
cmp
add
jp
out
outsb
ss
loopne
cmpsb
mov
add
popa
fchs
or
mov
ss
shr
xchg
sti
adc
dec
loopne
out
xor
inc
xchg
jg
dec
cmp
push
xchg
jecxz
jne
adc
push
xchg
pmaxsw
or
aas
lods
out
aad
or
repnz
fldl2e
aas
push
sub
ret
add
push
stos
loope
inc
inc
inc
xor
mov
out
mov
stos
in
mov
jle
movsb
hlt
in
lret
int3
cwtl
mov
inc
mov
popa
jmp
pushf
jg
cmp
mov
nop
sbb
pop
out
cmpsl
or
adcb
or
xor
add
cli
mov
cmp
mov
mov
lods
hlt
lret
fidivl
lock
pop
call
stc
adc
sbb
outsl
in
in
data16
imul
sti
roll
and
add
fdivrl
ljmp
scas
jecxz
ljmp
imulb
mov
mov
mov
test
cwtl
inc
movsb
lret
out
push
jo
in
or
sub
dec
inc
sbbl
nop
mov
and
loope
pop
dec
test
lock
mov
iret
jp
xchg
hlt
test
insl
xchg
pop
imul
mov
test
dec
mov
popa
stc
dec
fisttpl
pop
popa
cmc
popf
subl
sub
xor
nop
in
sbb
sbb
sub
mov
out
outsb
adcl
pop
loop
sub
ss
pushf
push
imul
pop
adc
and
mov
mov
adc
outsb
and
je
ja
mov
mov
jl
int3
ja
push
scas
sub
in
xor
xor
mov
repz
jb
stos
push
cmpb
pop
inc
dec
in
pop
pop
movsb
hlt
push
sbb
jle
ss
and
push
fadd
sub
maskmovq
divl
aam
sbb
jecxz
loopne
pop
fdivl
lds
ja
push
sbb
jle
imul
mov
fsubl
mov
cmc
test
jbe
xlat
jo
addb
std
out
inc
jmp
mov
fwait
inc
js
loope
or
mov
cld
mov
sub
fsubrp
outsb
mov
inc
mov
pop
fisttpll
inc
push
test
mov
add
jg
or
sub
loope
dec
aas
or
ds
xchg
mov
out
jl
mov
fwait
imul
testb
rcll
les
mov
or
stos
gs
aam
jmp
dec
fnstenv
andb
fistl
cli
cmc
push
loopne
add
jmp
loope
cmp
mov
mov
mov
adc
mov
bnd
sub
test
mov
cmp
and
fdiv
jl
jg
sub
movsb
mov
arpl
sbb
ljmp
fs
adc
leave
sub
sbb
or
jmp
xor
push
fstpl
les
jo
ss
incb
mov
push
sub
imul
xchg
out
push
outsl
pop
push
jecxz
push
insb
and
jle
xor
mov
fsubrl
popa
les
sbb
out
enter
sub
cmp
mov
push
or
aaa
scas
pop
jecxz
adc
fst
mov
inc
inc
dec
test
or
xlat
jmp
imul
and
cli
adc
pop
adcl
xchg
ja
and
mov
pop
push
jmp
inc
int3
lahf
out
pushf
xchg
mov
insb
inc
lahf
push
out
inc
jns
pop
push
imul
js
sub
mov
pop
leave
inc
mov
aas
in
outsb
mov
test
xchg
into
testl
mov
push
adc
xor
cmpsl
hlt
mov
out
jg
ret
add
or
xor
in
adc
push
mov
out
divb
ss
xchg
es
aaa
jl
mov
sahf
fstl
lret
shlb
sub
mov
in
hlt
in
mov
mov
loopne
pop
jnp
dec
mov
sbb
mov
fistpll
mov
xchg
pop
mov
sti
ret
bound
or
xchg
ret
in
int
adc
sarl
dec
inc
punpckhbw
loopne
lds
fldt
fildll
push
cmp
dec
es
mov
pushf
lcall
mov
jle
xchg
cmpsl
jle
add
jo
mov
mov
test
das
cmp
and
imul
adc
fucomip
lock
jb
push
jmp
repnz
mov
ficomps
stos
jle
xchg
ds
xchg
or
fsubp
cld
test
push
pop
fwait
sti
cmpsb
divl
mov
mov
mov
decb
mov
jb
loop
je
fnclex
push
cmp
repz
or
jecxz
push
iret
or
lret
fmull
das
mov
or
rcrb
aaa
test
scas
in
jb
popa
sti
repnz
scas
pushf
jecxz
jecxz
lret
jle
sub
out
std
pop
inc
cmp
jg
adc
mov
push
lahf
icebp
add
loope
loope
push
mov
in
mov
cld
hlt
int
leave
dec
sub
rcl
pushf
or
jb
fcmovne
fwait
int
jl
pop
dec
xchg
scas
adc
outsl
test
jle
fisttpll
lods
aad
sti
mov
popf
sub
std
inc
das
out
jbe
cmp
rorb
push
jbe
shll
arpl
mov
and
sbb
mov
cld
pop
jge
mov
div
cmpsb
insb
lds
mov
ja
push
in
lret
pop
insl
dec
xor
xor
push
push
adc
push
adc
inc
xchg
sub
mov
lahf
fisubrl
push
icebp
out
ljmp
nop
xchg
sbb
jg,pn
clc
adc
leave
jg
push
adc
dec
ret
or
cmp
mov
aas
cmp
push
mov
in
nop
mov
add
ss
or
mov
xlat
gs
mov
or
mulb
scas
fisubs
daa
imul
jo
icebp
jbe
cmp
mov
aas
sub
adc
jnp
iret
sub
aad
xchg
fimuls
fwait
fwait
mov
cmp
mov
dec
subl
pop
and
fcoms
mov
mov
sti
pop
jno
sub
scas
in
lock
xchg
jmp
shrl
or
push
mov
lock
and
fucomp
in
xor
aam
lock
add
or
inc
xor
lock
sbb
push
and
out
or
mov
jb
les
ret
call
xor
loope
ja
lret
jmp
jmp
pop
cmp
and
fistps
iret
outsl
jmp
jmp
push
movsb
out
xlat
or
jle
sub
ds
inc
push
lds
sbb
ret
xchg
jo
lods
jecxz
inc
in
lock
js
scas
not
stos
cmp
std
outsb
xchg
dec
imull
insb
cli
in
stos
push
jg
movntq
mov
jnp
lcall
leave
lahf
inc
push
data16
ljmp
push
popl
fidivs
int
shll
rcrl
and
lds
mov
xchg
adc
mov
mov
jecxz
fsubl
mov
adc
xchg
gs
cmp
cmc
sahf
in
std
mov
mov
or
sar
out
out
in
or
pop
jo
cmp
imul
lods
sub
jmp
in
mov
leave
fisttpl
fstps
lcall
mov
lahf
or
push
outsb
fbstp
xor
cmp
or
jg
cld
add
rcrl
stos
fucomip
push
outsb
lret
scas
xlat
push
and
call
int
les
lret
pop
shll
cmc
movsl
sbb
mov
test
xchg
dec
mov
in
inc
ror
lcall
filds
xor
jo
xor
jl
pop
scas
outsb
int
subl
outsl
sub
out
int3
or
mov
sub
xor
scas
rorl
jmp
cmp
pop
fidivrl
xchg
test
movsb
bnd
cmc
adc
loop
jbe
pextrw
mov
sub
mov
pop
cmp
jmp
test
outsl
xor
push
mov
mov
push
ret
xor
sti
or
xchg
mov
cmc
addr16
fnstcw
and
enter
or
push
cmp
mov
jecxz
stos
shr
stos
int3
sbb
test
push
or
mov
jecxz
fisttps
push
test
jnp
mov
and
ljmp
jl
fucomip
iret
jg
or
outsl
cld
repnz
popa
jle
sub
xchg
sahf
std
sub
insl
pop
out
mov
xlat
sbb
in
adc
sbb
popf
cmp
add
mov
out
lcall
sub
lret
ds
jmp
pop
mov
adc
punpcklbw
mov
clc
hlt
imul
notb
out
inc
nop
mov
call
pop
mov
ds
jnp
sti
fxch
out
fisubrl
jns
mov
das
das
or
imul
sub
daa
pop
jecxz
sbb
into
jbe
xor
pushl
and
jmp
cli
mov
lds
sti
and
out
insl
ss
scas
ljmp
arpl
or
iret
es
int
movsb
ljmp
imul
into
hlt
cmp
insl
popa
xchg
mov
push
mov
cltd
arpl
cmp
or
or
fldt
cmc
addr16
mov
mov
inc
lock
xor
xor
lock
sub
pop
cld
clc
pushf
sbb
mov
add
cmc
cltd
mov
adc
jmp
jle
push
dec
mov
xor
or
pusha
push
push
xchg
mov
pusha
fwait
xlat
sbb
lock
cwtl
push
push
dec
push
mov
bound
cmp
pop
xor
or
gs
into
mov
jecxz
mov
mov
into
xchg
cmp
in
insl
loopne
sbb
sti
sub
push
aaa
cwtl
loopne
outsb
popl
xchg
inc
mov
in
xor
mov
movsl
pushf
fs
movsl
inc
mov
outsl
mov
jae
mull
shlb
mov
mov
add
iret
ror
arpl
and
shlb
arpl
adc
add
cltd
mov
adc
nop
fidivrs
adc
or
sbb
add
arpl
jmp
or
popf
andl
push
test
jle
pushf
sarl
in
mov
and
mov
stos
data16
repnz
shr
jmp
out
ja
xchg
fists
sub
dec
fsubrs
xlat
or
sbb
fistpl
or
loope
push
mov
insl
mov
mov
ret
enter
jecxz
cmpsb
mov
movsb
cmp
pushf
pushaw
jmp
shll
xchg
ss
xchg
push
push
divb
call
cmp
flds
popf
test
dec
xchg
mov
push
jecxz
or
push
add
jmp
cmp
aam
in
mov
sbb
jmp
lods
rcrb
test
sti
mov
jo
out
dec
or
sub
fwait
sar
mov
aas
test
jecxz
ret
xchg
jo
mov
pop
mov
fldt
leave
mov
lret
mov
xchg
mov
jecxz
stos
pand
mov
data16
add
movsl
xor
pop
and
mov
aam
push
push
and
out
addl
cltd
jecxz
jo
xor
out
ja
mov
mov
mov
push
jne
xchg
or
cmp
cltd
cmpsb
pop
cmp
cli
xor
lea
jmp
pop
icebp
imul
mov
in
outsb
sbb
std
movsl
aad
fxtract
jl
rclb
mov
mov
pushf
loope
lret
xchg
jb
dec
mov
ja
xor
xor
test
out
addl
mov
mov
pop
adc
loopne
push
cltd
repnz
mov
jo
into
or
mov
popf
les
fmul
jl
ja
pop
jle
dec
or
bound
scas
fcomi
push
lret
jb
xchg
pop
sarb
sub
mov
in
mov
cmpb
jae
out
or
adc
loopne
ljmp
sbb
aas
sbb
scas
mov
mov
push
push
or
aas
mov
lea
jmp
scas
dec
lea
fcmovnbe
inc
arpl
mov
jg
dec
stc
lods
or
mov
lock
cmp
mov
sub
rcrb
sti
xor
in
or
jmp
mov
or
int3
loope
js
iret
mov
out
mov
mov
jmp
pop
shrl
mov
loop
cmp
int
ljmp
pop
xlat
mov
mov
in
fwait
out
call
and
pop
adc
or
fdivrl
lock
pop
cwtl
cmc
mov
movsl
cli
cli
loopne
in
jne
push
loope
mov
movsb
jmp
outsl
xchg
insb
mov
pop
pop
and
cmp
sub
jge
dec
jmp
sbb
andb
xchg
sub
andl
pop
jno
pop
pop
pop
mov
sub
ljmp
mov
push
stc
scas
scas
or
in
in
pop
fisubs
in
inc
lret
sub
cmp
hlt
imul
clc
shr
call
cltd
mov
pushf
mov
and
jne
xlat
pop
je
or
sbb
or
loopne
or
mov
lods
movsl
clc
pop
xchg
iret
loop
adc
loop
xor
cld
jno
jo
adc
fmulp
sbb
or
cwtl
das
add
ljmp
jae
and
lcall
aad
mov
lret
das
jmp
xchg
sub
mov
sysexit
test
fwait
sub
jg
xor
pop
mov
int3
out
subl
cmpsb
in
jecxz
or
jmp
movsb
push
cld
xor
jnp
add
pushl
sbb
and
pop
out
add
popa
rcll
or
lds
int
cmpsb
mov
cltd
das
push
cmp
test
push
lret
pop
xorl
jnp
xor
pop
mov
jno
and
inc
nop
xchg
pop
insl
xchg
xor
fwait
popf
mov
sbb
xlat
push
fsubrs
lods
and
mov
aas
push
dec
int
psubq
adc
inc
mov
pop
pushf
mov
hlt
lret
jge
adc
pop
icebp
les
out
mov
dec
scas
loop
pusha
std
cltd
mov
and
mov
fimuls
mov
mov
pop
clts
ja
gs
out
in
mov
imul
or
fadds
cli
gs
mov
jb
in
xor
xor
movsb
inc
pop
loopne
xchg
mov
rcr
into
xor
repnz
loopne
xor
or
daa
jnp
and
or
add
iret
popa
ss
mov
sub
add
lret
jno
or
roll
xchg
jg
pop
lods
das
jno
add
ss
fsubrp
push
lret
inc
inc
int3
jmp
push
mov
les
icebp
pop
ror
in
nop
leave
aas
fmulp
cmp
mov
add
clc
test
call
shl
mov
fildl
xchg
fldenv
or
fs
jne
stos
jmp
fildll
hlt
xorl
rorb
push
cmp
scas
pop
and
add
sub
cmp
out
scas
out
jb
inc
sti
xchg
xchg
jmp
xor
xor
mov
mov
dec
xor
and
pushf
jle
push
or
jnp
sub
shrb
jno
arpl
aas
fidivs
lret
cwtl
repz
ss
mov
daa
or
dec
push
ds
xchg
bound
mov
xchg
lret
push
mov
popa
lcall
lods
into
andb
iret
sub
int3
leave
cld
xchg
fld
pushf
bndldx
outsl
adc
fwait
into
xchg
call
popa
roll
and
stos
leave
mov
mov
cli
test
movsl
xlat
icebp
aas
jle
sub
lret
aam
xlat
aas
dec
mov
ss
inc
push
pop
jnp
jae
mov
ret
add
adc
pop
ret
sarl
out
ja
cmp
xchg
adcb
je
mov
sub
stc
dec
ret
sub
jb
jecxz
stos
loope
mov
rcl
mov
aas
dec
sahf
out
sbb
xchg
stos
push
mov
or
adc
sbb
stos
xchg
out
icebp
mov
in
shr
shll
jg
fst
jne
sarl
daa
fldenv
in
inc
or
or
fnsave
popa
mov
jb
add
jle
mov
push
les
sarl
add
orl
cltd
out
pop
pop
lahf
push
movsl
out
adc
pop
jo
sub
aas
popf
cmp
arpl
add
and
adc
out
pushf
popf
add
sti
popa
rcrb
mov
fidivl
push
pavgw
lods
or
dec
jns
pop
add
mov
decb
sbb
js
xchg
lods
ret
sbb
ret
inc
ljmp
test
jno
fs
cmp
or
lock
jg
and
ret
xor
xchg
mov
out
or
sti
cs
mov
cltd
adc
popf
outsb
data16
xor
test
insb
test
sti
fiadds
pop
test
maskmovq
mov
jmp
cwtl
dec
jg
xor
push
fists
cmc
jcxz,pt
adc
cmp
mov
add
dec
adc
mov
arpl
jecxz
dec
sarl
sarb
push
loope
push
push
js
dec
fptan
scas
addr16
cli
ds
jb
push
xchg
stos
data16
ljmp
inc
scas
push
xchg
mov
jmp
mov
in
cmp
ja
mov
jle
jmp
stos
inc
stos
pusha
dec
ss
dec
pop
es
addl
sub
les
divb
ljmp
pushf
fstpl
or
sub
gs
std
lods
lods
cmc
or
mov
adc
and
fwait
insb
cmp
mov
or
jg
clc
test
or
ja
xchg
bswap
outsb
mov
fldt
fstpl
sar
daa
push
lret
xchg
inc
dec
loopne
out
or
dec
add
ret
sbb
jo
shlb
inc
and
leave
jg
outsl
dec
and
repnz
adc
or
ljmp
loopne
je
out
mov
mov
and
cmpsb
arpl
mov
out
xor
outsl
or
fcompl
arpl
sbb
push
scas
mov
test
sub
fistps
pop
stos
xchg
fistl
jmp
out
sbb
outsb
dec
mov
fisttpll
push
jmp
in
loope
dec
cltd
out
xchg
add
or
loop
lock
out
xor
into
jecxz
push
insl
mov
jbe
movsl
movl
xchg
cld
out
iret
aam
or
sti
pushf
dec
and
loope
or
popa
mov
nop
jb
dec
inc
testb
ret
adc
lods
lret
aam
mov
fnstcw
popf
xor
fstpl
jbe
add
dec
mov
and
lret
test
idivl
fsubp
pop
sub
cmpsl
sahf
lods
push
sbb
insl
call
mov
pop
fcmovb
and
jmp
add
and
cs
push
pop
inc
out
sbb
xor
outsl
adc
sub
outsb
imul
mov
sbb
push
repz
adc
into
pop
and
jo
test
clc
out
int
shll
fs
daa
mov
and
sub
mov
sbb
cmp
jge
pop
add
lret
repz
pop
sub
fwait
popa
int
jmp
cwtl
in
and
fnclex
xor
mov
imul
jmp
decl
jne
faddl
mov
sub
add
cmp
push
int3
gs
int3
sub
mov
aam
inc
adc
sarl
movsl
sub
pop
fldenv
sti
stos
stos
mov
pop
fucom
fisttpl
add
dec
dec
syscall
dec
out
inc
jecxz
out
sub
sbb
sub
stos
push
out
xor
xor
xor
mov
cwtl
ret
mov
inc
aaa
jmp
pop
mov
fldl
iret
data16
int
mov
je
mov
lods
out
int3
loope
xchg
inc
outsl
cli
shll
test
lods
push
xor
mov
pusha
aad
xchg
int
jmp
mov
sub
add
jl
cwtl
mov
cmp
call
ljmp
sub
pop
shl
in
add
popa
dec
es
aaa
sub
fists
int
test
clc
adc
add
jp
xor
cmpsl
mov
icebp
leave
sub
rcrb
mov
add
hlt
mov
pop
daa
jno
jl
nop
clc
stos
jns
ret
testb
stos
sbb
rcr
in
ds
in
and
push
pop
sub
les
and
ja
ss
enter
or
les
inc
xchg
fistps
jbe
dec
int3
iret
lods
es
jecxz
xchg
sbb
loopne
lret
or
inc
push
iret
mov
enter
cmpsb
imul
daa
andb
cmp
pop
mov
jmp
mov
addb
popf
sbb
movsl
aam
cmp
and
cmp
and
lods
mov
and
loope
or
mov
in
loope
scas
enter
cltd
fwait
out
jmp
sahf
jmp
jns
test
mov
adc
cmp
arpl
mov
sti
push
in
and
adc
jg
mov
andl
jns
jle
insl
sbb
dec
mov
push
xchg
inc
push
cmp
lcall
js
rcll
dec
or
mov
jmp
pop
add
jecxz
inc
fidivrl
and
xchg
mov
mov
adc
sbb
and
testl
call
xchg
outsl
cmp
stos
pop
xor
lods
and
out
bsr
xchg
xchg
out
ss
rcr
pop
frstor
adc
in
xchg
and
jns
fdivrs
out
enter
or
lods
dec
out
dec
adc
mov
xor
mov
xor
mov
mov
add
ret
xchg
notl
sbb
jbe
stos
xchg
lret
sub
fwait
ja
sti
ja
pop
scas
fcomp
negl
lods
dec
push
fbstp
dec
jecxz
stc
ja
cmp
dec
and
stc
push
xchg
dec
dec
push
ret
jg
jge
ss
inc
popf
push
xor
or
push
pop
inc
popf
cltd
repnz
mov
subl
mov
and
js
inc
lret
fwait
mov
xchg
int3
adc
pop
sub
and
es
lret
rorb
or
mov
sti
jmp
pop
std
shll
add
push
loop
pop
aas
sub
xor
adc
xchg
popa
out
mov
xor
xchg
or
lret
inc
pop
mov
lods
fisubs
cld
outsl
imul
add
push
sbb
cld
movsb
aaa
sub
jmp
push
rol
push
not
in
stos
fidivs
imul
jecxz
add
pop
aaa
push
decb
enter
xor
aas
adc
jmp
jge
into
mov
je
and
mov
arpl
pop
and
add
orl
out
xor
xor
jle
cmp
sti
xchg
in
or
mov
jmp
sub
cmp
xor
push
cwtl
dec
mov
fnstsw
mov
add
shl
and
xchg
xor
fcos
loope
je
and
pushf
inc
mov
jecxz
das
cmc
jns
xor
jne
pop
imul
xchg
or
mov
mov
sbb
mov
dec
lods
ret
aas
adc
sbb
and
or
enter
fisttpl
lcall
jae
mov
push
sub
cli
mov
mov
mov
shrb
jecxz
dec
adc
dec
rorb
mov
adc
cltd
pushf
or
loope
pop
les
jecxz
fwait
emms
popa
sti
mov
in
out
mov
icebp
pusha
jmp
mov
jo
pop
enter
xchg
pushf
pop
push
xor
lea
mov
in
arpl
sbb
cmp
sbb
in
pop
mov
in
fbstp
xor
push
daa
scas
sar
scas
lret
sbb
and
sbb
inc
xchg
xchg
sti
xchg
xchg
xchg
cmp
pop
std
add
loope
mov
out
or
xor
sbb
lret
arpl
sub
les
lret
mov
jg
cmp
push
push
dec
add
jecxz
mov
jle
jnp
nop
pop
jmp
adc
out
test
mov
mov
inc
jge
int3
add
add
adc
cmpsb
pop
xchg
and
xlat
and
aam
pop
dec
add
mov
dec
sub
lret
dec
jo
adc
mov
inc
divb
aas
cmp
out
hlt
pusha
sub
mov
dec
repz
cmpsb
mov
jmp
jp
jns
in
mov
jecxz
loope
sbb
jno
add
sti
dec
out
adc
iret
movl
sbb
xchg
mov
data16
je
fidivrl
shl
lret
jg
pop
adc
stos
testb
sbb
cmp
scas
pop
push
mov
add
shrb
test
testl
and
fcoms
mov
jmp
test
in
pop
push
and
imul
orb
jbe
pop
lret
lcall
sub
xchg
ret
cmp
bound
ret
lret
jge
inc
scas
sbbb
ljmp
out
mov
sub
jl
sahf
push
stos
lahf
data16
in
mov
icebp
imul
lods
push
lods
pop
lods
out
popf
testl
mov
mov
mov
mov
jbe
or
and
mov
je
mov
mov
sub
test
cmc
imull
mov
fucomi
xchg
inc
lcall
nop
aas
inc
jmp
mov
nop
es
sub
add
adc
or
shll
addr16
mov
inc
in
sahf
jl
sub
dec
iret
push
mov
or
xchg
cwtl
test
pushf
jl
pop
test
pop
in
loope
aaa
lahf
inc
add
decl
dec
push
xchg
aaa
and
or
push
icebp
lds
test
iret
xchg
adc
pop
int3
pop
in
xor
gs
sbb
jno
adc
mov
mov
lahf
adc
fsubrs
loopne
push
mov
pushl
int
jl
dec
and
cmc
in
pop
dec
pusha
mov
lods
mov
pop
fucomip
or
pusha
and
or
push
stc
sub
leave
test
std
sarb
or
loope
fs
mov
lcall
push
inc
int
xchg
mov
push
test
mov
mov
xchg
xor
or
bound
out
int
popa
ficoml
mov
sub
jmp
aaa
outsb
add
jnp
cld
dec
sbb
scas
lret
pop
push
cld
stc
adc
jne
outsb
sub
or
in
insl
dec
js
lock
icebp
pop
jmp
mov
aam
mov
pusha
sbb
icebp
fs
adc
sbb
and
out
mov
addl
sar
out
xor
xchg
ror
mov
xor
sub
mov
jle
call
and
ret
adc
sub
dec
xlat
jle
mov
stos
icebp
jae
mov
mov
jmp
hlt
xchg
lods
in
pop
out
mov
xor
addr16
fistl
mov
jb
mov
xor
jg
cmp
arpl
imul
mov
test
mov
adc
idivl
ljmp
mov
cmpsl
insl
je
cmp
test
push
jecxz
in
jae
in
adc
pop
fbstp
out
fwait
das
jle
bound
fucom
sti
add
adc
inc
mov
shll
mov
out
pop
sub
mov
jo
mov
mov
test
loope
stos
dec
in
and
lock
fucomip
xchg
out
or
ret
xor
jmp
xchg
or
daa
ficompl
fldt
push
xor
push
add
dec
sbb
sbb
iret
iret
jnp
sti
xchg
mov
or
sbb
or
adc
lea
in
lds
add
pop
in
bound
cld
dec
ror
iret
lock
cld
scas
cmpsb
add
pop
push
shrb
repnz
in
adc
dec
sbb
xchg
fldl
lods
nop
sub
xchg
repnz
jae
ret
mov
stc
jo
f2xm1
add
out
filds
jl
cwtl
movsl
add
out
in
pop
push
xor
lds
test
jmp
inc
push
inc
jno
imul
fstpt
in
fwait
hlt
add
ljmp
lods
lret
mov
in
adcl
out
int
loope
inc
and
sbb
lock
sub
enter
hlt
adc
mov
jp
or
jb
roll
out
xor
scas
adcl
stos
out
mov
data16
adc
sbb
aas
inc
sbb
das
add
mov
movsb
and
test
scas
int3
or
xchg
data16
xchg
adc
push
in
mov
in
mov
inc
out
in
jmp
jae
jecxz
icebp
cmp
dec
fdivrs
or
jo
popf
push
lock
into
xor
mov
xchg
and
jb
jg
mov
push
mov
push
das
inc
and
ja
repnz
sbb
repnz
xchg
loop
lahf
jb
or
fs
scas
scas
testl
pop
ds
in
mov
inc
mov
and
lret
loope
bound
cmpsb
inc
ret
dec
imul
jecxz
push
or
mov
shlb
data16
sti
fs
scas
popf
sahf
out
jecxz
fistl
call
jnp
cmpsb
inc
add
out
mov
mov
fbstp
out
subl
push
out
or
inc
out
hlt
test
mov
lahf
add
add
addr16
fcompl
scas
pop
dec
ja
jae
mov
sti
das
shl
divl
push
jecxz
push
lret
test
testl
add
jg
fmuls
push
test
iret
jns
lret
out
into
popf
sti
dec
into
inc
sbb
or
test
test
fs
push
inc
je
fcomi
ljmp
add
sbb
pushf
fstpl
cmp
movsl
sbb
pop
out
add
lds
ljmp
mov
sub
loop
imul
fistpl
loop
push
nop
shll
data16
outsl
mov
sbb
mov
jl
outsb
ljmp
iret
mov
cmp
dec
je
mov
loope
mov
mov
xor
pop
mov
ljmp
mov
repnz
icebp
lock
pushf
cmp
sbb
out
add
fists
dec
adc
or
pop
loop
fistpll
pop
jl
lds
pop
or
call
mov
loopne
and
inc
shrb
addr16
jb
pop
scas
pushf
cmp
push
sbb
cli
rolb
ljmp
mov
mov
int
add
out
xlat
iret
fstps
roll
push
out
rcll
shll
addr16
test
sbb
aas
and
xor
and
jno
fnstsw
das
lahf
iret
xor
data16
shrb
out
test
adc
out
mov
xor
mov
mov
rep
mov
push
iret
cmp
or
cmpsl
sbb
xchg
out
in
loop
subl
xchg
ret
clc
mov
enter
or
sbb
push
jmp
stc
mov
sub
lahf
lods
out
mov
shl
inc
add
mov
addb
scas
cmp
stc
lret
xlat
mov
fidivs
rol
stos
lds
scas
ret
mov
cmp
dec
fsubrp
sub
loope
sarb
stos
jle
test
xchg
pop
jp
pop
fists
pop
mov
xor
pop
add
mov
in
frstor
sti
out
mov
inc
mov
jne
pop
or
inc
inc
outsl
jae
test
lods
jns
clc
mov
dec
daa
jle
push
cltd
clc
mov
cmc
jmp
pop
jmp
rcll
outsl
push
in
inc
mov
jns
test
fimull
mov
mov
lcall
imul
mov
shlb
jecxz
fildll
ja
mov
jecxz
icebp
add
jle
push
mov
lock
out
jle
mov
sub
jb
push
test
cltd
out
divb
jl
sub
scas
stos
xor
jb
mov
jo
jno
sbb
and
sub
push
fwait
jg
les
mov
push
in
test
call
lret
xchg
scas
pop
ja
mov
or
lods
dec
mov
fwait
xor
hlt
pop
mov
ds
fs
pushf
jle
mov
gs
leave
imul
mov
les
push
les
mov
fisttps
fcoms
enter
mul
push
jecxz
sub
and
jb
push
imull
loope
jae
imulb
mov
push
pop
iret
fsubrl
std
pusha
sar
out
mov
dec
jge
dec
pop
adc
pop
cld
movsl
sub
cwtl
jle
cmp
imul
nop
outsl
push
movsl
test
rorb
add
jne
mov
into
xlat
rol
jle
push
jge
push
in
hlt
adc
loope
jecxz
add
cld
mov
test
jle
leave
mov
stc
movsl
ret
popf
push
xchg
xchg
test
adc
fdivl
aad
mov
adc
adc
jg
outsl
and
popa
lock
cld
xor
imul
loope
sahf
sub
test
jmp
jle
insl
scas
push
lret
jb
adc
fcmovnu
or
insl
shlb
mov
nop
inc
mov
test
in
pop
adc
inc
mov
hlt
std
lods
out
xor
lods
push
int3
mov
push
into
div
pop
iret
loopne
mov
sub
xor
fbld
mov
push
ss
test
insl
adc
js
fs
ret
test
aas
jmp
in
popl
jecxz
testl
insl
into
xor
hlt
fistl
mov
mov
outsb
xorl
mov
dec
fucomi
ret
hlt
jno
or
outsb
ja
fiaddl
out
mov
cmp
xor
sbb
loopne
arpl
or
pop
jns
jl
mov
xchg
or
add
in
hlt
out
into
sbb
or
std
inc
xchg
inc
push
inc
jmp
add
scas
pusha
xor
in
push
fbstp
sbb
cltd
dec
stos
outsl
loop
iret
loopne
mov
lahf
flds
or
aas
test
dec
lcall
aam
cmp
jb
mov
sahf
repnz
pop
loop
repnz
jo
jecxz
ljmp
fcom
out
imul
iret
ret
jle
xor
imul
mov
push
in
push
loope
out
shl
cmc
mov
mov
pusha
in
lock
std
mov
jae
push
mov
inc
iret
mov
iret
imul
les
jecxz
iret
lret
sti
and
enter
xorb
lods
jae
cli
jmp
sub
adc
punpckhbw
push
sub
call
pop
lods
xchg
mov
lods
ret
lret
jle
enter
cld
je
inc
mov
pop
icebp
popf
stos
mov
into
repnz
add
mov
mov
or
cs
xor
xorl
sahf
mov
lcall
or
lock
lods
pop
sbb
shr
dec
scas
push
shll
cmpsb
mov
fmull
imul
fcompl
xlat
loopne
jbe
fnstenv
or
test
lret
scas
ret
enter
int
leave
push
cmpb
mov
outsl
cwtl
mov
std
stos
bound
nop
jecxz
scas
fsubr
mov
jmp
js
mov
rcl
jge
dec
push
popa
sbbb
lret
icebp
mov
inc
cmp
loopne
jecxz
test
jg
mov
xchg
cltd
out
jmp
shlb
mov
mov
fidivrl
fcmovnu
jns
lahf
sbb
gs
sti
es
repz
jo
aam
pop
jmp
fistpll
imul
pop
cmpsl
jae
mov
xor
xor
and
sub
inc
lret
cld
mov
jle
in
pop
in
push
out
xchg
and
lret
mov
orb
fsubrl
aad
cmp
cmp
rep
sbb
jo
mov
aas
call
xor
stos
mov
outsl
incl
outsl
ljmp
xchg
subb
push
out
lds
cmc
repnz
inc
mov
and
mov
sub
jmp
mov
mov
test
out
mov
mov
int3
leave
mov
in
mov
icebp
test
or
push
push
stc
shl
loopne
popf
out
jge
loop
cmp
dec
fidivl
lock
pop
mov
jmp
inc
or
in
test
lds
or
jg
xchg
cmp
jno
mov
mov
sbb
loopne
loope
jmp
mov
pushf
xor
fisubs
cli
aaa
imul
fsubp
sub
fmuls
fisttpl
fstl
addr16
cmp
add
pusha
out
dec
jns
fstps
jle
pop
push
into
push
lahf
mov
cmp
push
outsb
pop
mov
cli
mov
xor
pop
push
int
pusha
loopne
mov
ja
das
xchg
fs
stos
dec
adc
adc
call
pop
lods
push
add
adc
and
push
mov
test
adc
inc
jecxz
in
loopne
jg
jb
cwtl
xchg
pop
jb
push
xlat
mov
cmp
push
iret
pop
mov
sbb
ffree
int
pop
decl
ljmp
mov
aad
lahf
sbb
inc
and
ljmp
scas
jne
cmp
mov
push
mov
dec
nop
fisubs
dec
push
inc
test
leave
push
aad
mov
jmp
mov
xchg
pop
lea
jbe
mov
popf
sub
sbb
outsb
or
addr16
scas
pushf
icebp
outsb
lock
movl
and
cmp
shrl
pop
fcmovnbe
and
int3
or
loope
pushf
cmovge
lret
adc
enter
push
test
sub
jb
fiadds
out
jns
jg
jo
lret
andl
pop
test
das
in
jmp
pop
mov
vmovhpd
cs
repnz
mov
xchg
leave
xchg
jecxz
iret
xorl
inc
cmc
sbb
sub
add
or
push
mov
or
inc
sbb
xor
fdivrl
data16
cmpsl
pop
push
sbb
inc
pushf
add
jo
jmp
je
jmp
xchg
rorb
sbb
adc
or
cmc
mov
data16
push
jno
in
jle
mov
mov
mov
sbb
jnp
fdivl
hlt
mov
imul
dec
lods
jnp
test
orb
push
push
mov
push
push
imul
adc
lods
xchg
ret
insb
mov
fimull
stos
rorb
mov
aam
inc
in
testl
push
jae
frstor
jns
mov
stos
addl
mov
xor
sbb
shlb
jg
mov
fisubrl
rcll
in
dec
ljmp
dec
out
out
inc
call
mov
test
fisttps
push
test
push
or
jnp
xor
scas
roll
test
cltd
sbb
vpunpckhqdq
push
lahf
ret
mov
daa
loop
pop
aam
mov
shrb
gs
stos
pop
jl
ja
pop
cld
cli
jne
push
outsl
inc
adc
out
or
popa
pop
aas
cmp
mov
mov
insl
lds
das
rcrl
cmp
pop
xchg
out
hlt
sti
sub
fprem
in
xor
fcomi
sub
cmp
lret
shrl
int3
pop
adcl
stos
lock
shlb
lcall
loope
imul
mov
xor
add
imul
jne
adc
mov
mov
out
repnz
or
arpl
xchg
pop
cmpsl
and
test
cmp
popf
loopne
loopne
inc
adc
movsb
mov
push
and
ljmp
jnp
mov
in
idivl
mov
jne
mov
scas
cwtl
cmp
sbb
mov
and
shl
xor
fiaddl
fstp
mov
mov
mov
in
inc
cmpb
stos
sahf
inc
ret
or
sbb
inc
repz
lret
stc
arpl
fnclex
jl
jae
jno
pop
sub
mov
push
push
and
push
lret
jb
jmp
jno
out
xorb
mov
lods
insw
aas
and
push
frstor
rol
push
decl
decb
fmull
jg
shl
mov
or
mov
repz
cmc
das
cwtl
aaa
inc
pop
pop
dec
pushf
roll
push
insl
movsb
fisttpl
fildl
les
cmpsl
pop
frstor
ds
jnp
pushf
data16
mov
jl
mov
cmpxchg
jne
iret
inc
push
pop
rcl
std
or
or
in
add
or
or
mov
jmp
in
mov
test
cmc
cmpsb
stos
mov
inc
and
mov
and
leave
sub
loope
std
add
stos
jb
jbe
imul
in
and
sub
in
and
enter
test
mov
out
xor
out
shrb
add
xlat
call
outsl
andb
test
arpl
mov
repnz
and
into
add
lods
pop
dec
or
push
mov
movsb
jle
or
not
data16
test
daa
or
push
fsubs
mov
fisttpl
mov
xlat
jo
jmp
clc
sahf
in
and
adc
lock
leave
hlt
icebp
adc
aad
hlt
iret
jo
in
call
pop
lds
mov
cmpsl
jo
mov
leave
sti
icebp
sbb
icebp
icebp
lret
xlat
addr16
cmp
and
lret
mov
cmc
or
mov
or
ljmp
mov
jecxz
in
iret
in
loope
or
pmaxsw
je
in
icebp
call
ror
inc
jb
xchg
icebp
xor
fsubp
jle
pushf
mov
jb
roll
adc
mov
cmpsb
or
mov
pop
mov
xlat
test
sbb
test
mov
fbld
push
mov
stos
pushf
fwait
sbb
int
xchg
orl
mov
sti
pop
or
ret
cmpsb
test
repz
lea
jmp
jmp
dec
sbb
cs
iret
mov
clc
ja
pop
insl
mov
addr16
in
fninit
jle
jns
rolb
xchg
jae
icebp
or
shrb
clc
pusha
dec
es
adc
or
xor
sbb
fisttpl
mov
sahf
imull
dec
mov
jb
fsubl
inc
cwtl
dec
xlat
pushf
ret
xor
pop
sahf
add
add
cltd
push
idiv
stos
stos
add
data16
pop
mov
pop
push
popf
fsubl
xor
rcl
dec
mov
cmpsl
add
push
movsb
xchg
mov
jb
jge
cli
jb
jmp
jnp
jg
or
pop
sub
and
dec
and
or
in
push
bound
jbe
sub
mov
jge
fisubs
dec
imul
inc
push
mov
imul
or
or
jne
cmc
sub
adc
mov
sbb
repz
sbb
fucomip
adc
fldenv
movsb
jg
or
xor
loop
mov
xor
adc
or
ficoms
in
scas
mov
mov
or
mov
mov
pop
mov
jge
mov
and
loopne
mov
rorl
mov
movsl
loopne
add
lret
fmull
dec
mov
mov
movsl
cmpsb
fcompp
ficoml
out
push
out
enter
loop
daa
out
iretw
jbe
dec
in
das
lock
jbe
cmpsb
sub
xor
std
sub
push
cmpsl
into
int
sub
in
xor
sbb
sub
hlt
xchg
sub
pop
shrl
stos
icebp
xchg
jmp
lret
fnstenv
or
push
int3
scas
leave
mov
sub
addb
pop
scas
mov
push
les
mov
pop
cmpsl
out
enter
pusha
mov
push
push
popa
dec
popf
and
mov
pop
sbb
mov
scas
xchg
pop
jecxz
insl
or
xchg
lea
xchg
lods
ds
rcl
stos
push
mov
mov
sbb
and
xlat
test
mov
subb
scas
mov
nop
leave
mov
or
divl
movsb
lock
fbstp
jecxz
xchg
mov
mov
into
push
rcrl
stc
imul
cltd
inc
scas
mov
add
ror
inc
push
push
fcos
nop
das
push
lds
cli
mov
mov
inc
or
or
fwait
std
sbb
js
out
loope
pop
popf
xchg
aad
jbe
jg
jne
sub
jo
push
or
mov
popa
adc
lods
or
adc
dec
shlb
and
in
xor
imul
or
jae
repz
loop
jecxz
push
testl
xor
pop
jg
xchg
dec
jbe
lret
xchg
sbb
xchg
fbld
mov
xor
out
popf
icebp
jecxz
int
or
lock
iret
pushf
xchg
in
icebp
repnz
popa
jb
or
rolb
mov
mov
xorl
jle
sub
jb
daa
fstp
popf
xchg
cmp
pushf
mov
dec
sub
daa
xchg
testl
xlat
fmulp
push
pushf
and
enter
inc
add
outsb
or
xchg
push
lea
jno,pn
outsl
lret
mov
pusha
push
iret
sbb
and
push
pop
dec
and
dec
pusha
pop
adc
stos
pop
mov
cwtl
aam
ljmp
sbb
mov
movsl
jnp
icebp
jno
mov
and
pop
int3
mov
or
mov
jg
xchg
sub
ds
pop
dec
je
cmp
popf
and
push
adc
test
or
and
and
clc
shll
test
scas
popf
cs
fwait
xor
pop
xor
in
out
lea
dec
lret
inc
push
das
pop
inc
ss
lahf
cli
mov
sub
pop
mov
daa
cmp
sub
mov
loopne
pop
and
dec
stos
dec
andl
jo
in
mov
or
pop
mov
sti
ret
and
arpl
nop
pop
xorl
shll
dec
movsb
out
mov
push
dec
outsl
fmull
mov
push
xchg
jo
lods
xor
shlb
lods
adc
or
inc
loope
inc
jbe
fcmovnbe
sub
jmp
mov
aam
adc
shlb
stos
je
push
scas
dec
int3
jg
jns
cwtl
stos
ss
shlb
fwait
add
xchg
lcall
jecxz
or
aam
fildl
xor
out
lods
inc
mov
pushf
add
into
fidivl
out
mov
or
test
inc
je
mov
out
xchg
sub
mov
imul
ja
pop
mov
int3
cmpsl
fnsave
ret
lret
xchg
loopw
mov
cmp
pop
filds
cmpb
les
xchg
jecxz
mov
or
shl
push
repnz
rcr
les
test
insl
and
or
jecxz
stos
popf
shll
jae
push
and
cltd
inc
xchg
cltd
adc
test
scas
and
sbb
adc
rcrb
outsb
test
xor
add
cmp
xlat
xor
shlb
call
bnd
in
jle
mov
cltd
nop
sub
dec
lds
leave
out
ds
aaa
ljmp
xchg
popa
mov
filds
loope
xchg
xor
js
enter
ret
mov
pop
das
ret
movsl
inc
enter
push
int
add
push
mov
jmp
bound
sarl
test
xor
sub
insl
movsl
ja
lcall
push
add
and
sbb
mov
arpl
out
xor
loope
inc
fwait
mov
movsl
mov
arpl
jmp
xchg
pushf
sbb
stc
shlb
mov
loope
xor
ret
xchg
jmp
jb
repnz
xor
xor
loopne
pop
push
xor
mov
xchg
push
push
iret
ret
call
pusha
sub
outsl
shrb
push
loope
pushl
mov
aaa
shll
sbb
clc
roll
daa
jne
or
andb
sbb
mov
xchg
rorb
push
cli
cli
jns
sti
rcrl
dec
push
adc
orps
xor
shrb
jg
arpl
rcll
ds
or
xor
lahf
mov
iret
mov
sahf
jmp
loop
dec
xor
scas
fisubl
in
cld
adc
pop
lods
mov
dec
outsl
call
rorb
add
pop
mov
pop
jecxz
dec
jecxz
call
mov
inc
jns
add
mov
lds
mov
jle
aad
or
sahf
retw
aam
cltd
shl
jbe
out
dec
xchg
int3
inc
xchg
xor
push
pushf
or
clc
pop
jecxz
jno
jne
sahf
addr16
xlat
inc
mov
xchg
mov
inc
inc
mov
or
lea
jle
lcall
in
lret
into
rcl
lret
idivl
adc
mov
push
loopne
xchg
or
jnp
jecxz
xor
mov
loope
ret
inc
lcall
lds
add
in
dec
jmp
lret
mov
imul
push
add
push
stc
push
insl
repz
jmp
jns
mov
add
dec
mov
pop
add
jle
xchg
aas
test
lods
iret
in
ror
or
arpl
clc
into
xchg
fists
nop
mov
mov
idivl
int3
je
daa
push
out
lahf
rcrb
mov
scas
je
sbb
xchg
inc
or
idivl
jecxz
or
das
fisttps
out
rcll
sbb
pop
int
push
clc
data16
addb
jmp
inc
adc
or
cmp
xor
mov
orl
movsb
out
and
cltd
ret
lds
or
stos
lret
hlt
jmp
adcl
jge
orl
pop
adcb
mov
push
or
pop
out
lcall
xchg
test
jmp
sub
in
xchg
or
inc
mov
sub
fnstcw
shld
loop
pusha
arpl
pop
cld
jne
xor
mov
push
aad
mov
imul
lret
jno
lods
out
and
in
sub
addr16
jecxz
xor
movsl
in
popa
fucom
jg
jmp
in
and
pop
inc
cmpsl
test
or
push
or
pushf
das
push
ret
int3
or
add
popa
aam
pop
inc
lahf
push
ret
shl
push
xchg
test
inc
iret
mov
or
mov
loope
jo
xor
or
test
cmpsl
inc
jge
icebp
out
add
xchg
adcl
mov
sbbl
out
shrb
add
out
add
cld
mov
cs
mov
enter
test
loopne
out
jle
add
in
jbe
movsl
push
sahf
inc
mov
or
daa
add
cmpsl
addl
sbb
adc
daa
xchg
sti
fmull
cmp
shlb
ret
repnz
xor
jle
jo
sbb
stos
push
cmp
push
mov
xor
mov
sti
pusha
pop
clc
subl
roll
sub
iret
or
mov
inc
cli
hlt
sub
out
rorl
cmp
cld
out
cld
xlat
dec
mov
push
pushf
pop
dec
jg
lea
and
add
pop
jne
mov
sti
push
or
jne
outsb
test
xor
hlt
fcomps
loope
js
sub
scas
mov
inc
xchg
cltd
sti
mov
add
in
pop
dec
popa
xor
loope
add
jle
mov
push
dec
xor
pusha
loop
std
xchg
mov
mov
push
jle
adc
test
mov
pusha
iret
rorl
scas
les
jl
xchg
data16
mov
aaa
insl
fwait
idivl
pop
fcmovnbe
cmp
mov
stos
sbb
mov
pushl
sub
mov
int3
gs
cmpsb
dec
loop
push
int
xchg
shr
out
and
dec
jo
pushf
data16
jbe
inc
stos
rclb
arpl
pop
inc
cli
xchg
daa
xchg
les
lret
sbb
sahf
out
push
jmp
fistpll
cwtl
das
xor
pop
dec
ds
out
test
or
cs
mov
and
mov
ja
adc
pushf
mov
jmp
push
imul
sbb
daa
mov
stos
jcxz
jmp
stos
add
roll
xor
mov
daa
clc
sub
mov
push
jle
pop
in
mov
jg
cmp
xchg
out
pop
mov
or
mov
xchg
enter
shl
in
lret
mov
mov
lds
push
scas
sbb
cmp
adc
mov
int3
enter
mov
inc
mov
clc
test
jle
mov
sti
push
xchg
lret
call
mov
in
mov
pop
ja
bound
scas
lret
jle
lods
iret
jns
push
jecxz
add
sbb
loope
jle
repz
xchg
sub
jns
mov
int
dec
orl
inc
mov
push
les
jg
pop
js
imul
jne
add
xor
jns
xor
dec
and
shrb
nop
outsb
inc
loop
imul
outsb
xchg
sbb
imul
dec
idivb
xchg
sahf
std
xor
push
cli
sbb
in
cmp
mov
daa
out
dec
or
aam
or
rclb
out
inc
jo
icebp
and
icebp
cltd
lock
ja
cmc
loope
jmp
pop
cmpsb
in
repnz
sub
sbb
addr16
push
shrl
sti
insl
pop
cmp
out
ret
outsl
push
mov
or
jge
fldenv
stos
scas
dec
rorb
outsb
mov
pushf
rclb
and
add
push
stos
jmp
repnz
push
test
push
lret
cmp
movsl
loop
inc
test
mov
loope
xchg
cmpsl
lock
insb
out
fwait
xchg
popf
insb
outsb
bound
xor
loopne
mov
hlt
rorl
repnz
xor
stos
sbb
sub
mov
pop
pop
fisttpll
aas
negb
xchg
stc
pop
jge
push
cmp
roll
fnsave
outsl
sub
ret
dec
sub
fwait
pushf
and
mov
sub
js
sbb
pop
adc
enter
pop
mov
pop
and
xor
or
sbbl
in
sub
notb
jne
iret
arpl
mov
or
movsb
ret
inc
dec
shl
loope
mov
add
test
cwtl
gs
loopne
mov
pusha
out
data16
orb
inc
and
mov
inc
xchg
xchg
int3
pcmpeqd
test
or
out
or
hlt
imul
cmpsb
push
inc
sbb
sar
adc
rclb
into
cmp
jp
movb
int
mov
sti
iret
sti
jb
js
enter
pushf
jne
dec
mov
inc
cltd
jmp
mov
cmp
andb
add
je
lret
cmp
sbb
mov
sti
rorl
int3
sti
loope
fwait
int
fsubrs
loopne
ret
dec
mov
gs
push
outsb
jno
mov
in
sbb
push
jb
and
and
lds
sub
xor
rcl
sub
enter
xor
test
das
flds
mov
sbb
dec
int
mov
loop
jp
subb
jns
fimuls
out
hlt
and
cmp
xchg
or
fs
xchg
notl
jne
js
sbb
imul
pop
xor
add
mov
add
jmp
xchg
loopne
scas
fisttpll
jmp
adc
fcoml
cmc
ljmp
jecxz
out
and
inc
lret
imul
pop
mov
lea
mov
or
subl
mov
iret
mov
sbb
andb
std
adc
jnp
out
jnp
xchg
js
iret
or
insl
test
jle
mov
adc
xchg
loopne
or
ss
jge
push
int3
add
gs
test
loope
subb
gs
loope
movsb
or
dec
mov
sub
lret
push
fnstenv
out
arpl
jo
or
iret
out
jle
aam
rcrl
in
xor
pushf
mov
sub
cmc
mov
ror
repnz
outsb
hlt
or
jae
movsl
lock
jecxz
push
mov
pop
stc
inc
pusha
roll
inc
pop
loop
mov
or
jns
daa
cwtl
cltd
mov
insl
stos
clc
ja
mov
sub
adc
lds
jbe
push
faddl
daa
xchg
push
pushf
pop
pop
lcall
sub
lret
mov
call
add
mov
pop
outsl
cmc
adc
lcall
notl
mov
mov
jg
mov
mov
inc
mov
xor
jecxz
iret
add
aad
cmp
mov
cmpsl
cmpsl
fdiv
addr16
or
mov
les
add
insl
mov
mov
cmpsl
xchg
jg
xchg
xor
push
scas
push
xor
cwtl
or
into
outsl
or
sti
std
jmp
mov
pushf
loope
mov
ljmp
les
ret
push
fcmovb
cmp
xchg
push
into
sahf
loop
out
pop
push
or
pop
adc
movsb
aad
xchg
lret
mov
mov
fwait
jg
stos
mov
lret
mov
test
push
fidivrl
mov
in
idiv
std
pop
addr16
jnp
push
jge
lret
mov
cmc
pop
jno
movsl
repz
clc
or
mov
gs
outsl
cmpsl
inc
inc
insl
and
jo
jbe
jae
jo
sub
push
cmpsl
arpl
sub
push
xor
popf
pushf
pop
sub
test
shl
cmp
mov
xlat
iret
data16
mov
cmp
lret
fisubrl
scas
stos
rclb
sub
or
lcall
jo
test
mov
imul
shlb
push
enter
cld
loope
ret
push
in
pop
out
loope
mov
outsb
sub
shrb
ret
xor
test
iret
jg
ror
loopne
lds
scas
mov
sbb
fdivrp
fldl
dec
push
pop
rorl
lahf
push
int3
xchg
xchg
and
stos
stc
arpl
scas
cmc
pop
pop
popf
add
inc
es
addr16
or
mov
sub
int
fisubrs
mov
ret
into
add
icebp
or
fidivrl
cld
andb
jno
cmc
mov
sbb
xor
sub
dec
shr
sahf
dec
sub
pop
daa
ljmp
xchg
add
or
cmpsl
das
inc
mov
shrb
in
insb
sub
jno
pop
je
insl
or
sarl
xor
cmp
inc
adc
std
mov
or
dec
inc
sar
push
mov
jo
xchg
sahf
adc
nop
adc
push
jbe
mov
xchg
ljmp
mov
aad
je
clc
sbb
scas
push
enter
add
scas
xchg
mov
iret
test
into
vmread
mov
lcall
dec
sbb
dec
jecxz
shrb
cmp
and
mov
mov
sbb
sbb
sbb
js
xlat
cmpsb
femms
mov
add
mov
fs
or
lea
mov
aas
pop
mov
push
loopne
jmp
imul
lds
movsb
popf
xchg
add
xchg
loopne
jle
lods
jnp
pushf
mov
in
shl
js
roll
in
and
dec
sar
mov
movsl
dec
imulb
dec
xor
rcll
into
lret
pop
jno
mov
shrl
imul
fstpt
lods
insb
mov
imul
jmp
mulb
pop
cli
js
imul
cmp
pop
stc
pop
pop
fidivrl
repnz
fildll
rcr
lock
andl
loope
stos
clc
push
mov
out
ror
xlat
mov
push
shlb
cmc
mov
jmp
iret
outsb
shrb
dec
repnz
lods
xchg
cmp
jle
cmc
or
ret
jg
dec
into
jge
pop
call
loope
or
rcr
mov
mov
data16
shll
insb
outsl
push
faddl
push
and
jnp
popf
sub
mov
adc
dec
push
jmp
adc
lods
in
jl
push
fwait
lds
popa
mov
data16
shlb
mov
test
shufps
mov
imulb
movsb
jge
divl
jb
mov
shll
stos
inc
bound
shrl
scas
and
jmp
not
push
fucom
in
mov
mov
mov
sub
es
dec
sarl
sbb
or
add
ss
dec
outsl
mov
and
aad
xchg
hlt
pop
divb
xchg
pop
mov
mov
and
in
std
mov
in
jg
lods
lods
data16
shrl
bound
mov
out
jmp
movsb
cmc
movsl
inc
int
jg
movsl
pop
pop
imul
popa
daa
mov
imul
push
mov
or
add
cli
gs
mov
or
dec
cmp
xchg
test
arpl
or
rcr
outsl
mov
jae
mov
shrb
in
pop
sbb
push
adc
xchg
xchg
outsb
jecxz
into
jb
mov
mov
mov
mov
sbb
dec
scas
ljmp
and
mov
mov
jmp
test
cmc
or
cmpb
in
sbb
pop
pop
lcall
jne
mov
es
call
loop
mov
scas
mov
jno
out
pop
xchg
push
xor
ja
scas
sti
shll
outsl
gs
xchg
out
jg
cmc
xor
jle
rcl
lret
pop
repnz
es
xor
pop
incl
jo
and
lret
rcrb
or
inc
xchg
test
loop
inc
mov
hlt
mov
nop
js
mov
pop
ljmp
or
pop
xchg
sub
ds
in
adcl
push
pop
sub
fcmovnbe
fwait
out
js
jae
mov
fmul
pushf
jae
push
mov
ja
mov
je
add
mov
mov
sub
mov
pusha
loope
dec
loopne
pop
adc
cmp
mov
jg
in
pop
fs
inc
mov
xchg
movb
hlt
ljmp
mov
int
mov
mov
shl
imul
mov
out
rolb
pushf
mov
jle
add
pop
push
push
push
icebp
pop
je
mov
jmp
jecxz
xchg
fistl
jl
fisubs
fmull
aaa
cmp
push
ljmp
fucom
adc
add
fdivrl
sub
adc
lcall
repz
xor
lock
xchg
repnz
cmpsb
sti
jle
cmp
sbb
out
popa
mov
push
sbb
cwtl
mov
sub
sub
jo
inc
loopne
hlt
scas
cmp
pop
outsl
xchg
aad
push
mov
lret
in
cmp
insb
jne
cwtl
jp
stos
pop
fcomip
mov
out
or
out
mov
sub
out
jle
popf
fxch
stos
jecxz
bound
mov
mov
int3
sbb
loopne
jo
in
dec
mov
pop
mov
mov
sbb
dec
cmpsl
sbb
mov
data16
sbbb
xchg
jae
mov
movsl
ljmp
adcb
popa
leave
inc
mov
inc
sbb
sub
ljmp
leave
xlat
sbb
fdiv
mov
sbb
mov
jecxz
sti
jb
pusha
and
and
loopne
or
sub
iret
bound
outsl
or
dec
inc
out
outsl
in
xchg
sub
mov
xchg
callw
jle
lahf
mov
cwtl
jge
pop
dec
or
cmp
mov
int
popf
or
ljmp
cmp
sbb
je
ja
or
iret
imul
jecxz
dec
loop
rorb
mov
mov
test
dec
xor
mov
xor
lods
xor
cld
mov
sub
cmp
sbb
mov
adc
jl
xor
icebp
mov
loope
inc
inc
fsub
lods
xchg
jbe
into
cld
inc
enter
clc
push
sub
jo
xor
cmpsb
jecxz
or
xchg
xor
or
mov
jge
popf
imul
mov
ret
mov
outsl
bound
mov
into
out
dec
cmc
insl
lret
or
in
in
jmp
loope
dec
dec
into
rcr
xor
inc
shrb
jge
lea
outsl
sbb
inc
movups
std
lods
das
mov
cmp
push
scas
sub
sahf
pushf
pushf
outsl
or
add
lea
adc
inc
shll
outsl
daa
outsl
divb
cwtl
xchg
lock
sbb
sbb
push
jb
mov
mov
adc
sub
movsb
fldt
and
jbe
dec
shrb
ljmp
dec
and
inc
mov
or
cmp
push
lods
loop
in
js
std
aad
in
or
inc
fisubrl
in
mov
or
pop
sub
xor
jmp
or
or
dec
mov
fldt
ret
loop
imul
jne
sub
mov
jbe
sbb
pop
enter
add
imul
jecxz
imul
lret
cli
out
ja
jae
mov
sbb
or
mov
push
ret
mov
mov
xchg
mov
sti
inc
pop
shl
and
scas
mov
lcall
xchg
mov
xor
out
cs
xor
sahf
pop
shlb
mov
xchg
and
popf
cmc
mov
dec
push
iret
stc
icebp
stos
clc
jns
xor
bound
clc
divb
pop
mov
aam
aaa
sbb
int3
cmp
jae
jl
jg
jb
sub
xchg
out
pop
jo
aad
cld
push
ret
std
or
jae
mov
cmp
jae
and
daa
sar
mov
out
pop
mov
lods
mov
aam
outsb
js
cwtl
jg
sbb
dec
push
scas
add
push
movsl
lahf
jmp
sarb
xor
outsl
ds
mov
movsl
fstpt
jo
shll
add
imulb
scas
xchg
mov
roll
mov
clc
or
fwait
mov
popa
dec
jne
fstpt
jo
xor
jb
pop
call
push
adc
aad
movsl
cmpsl
or
stc
jl
xchg
xchg
and
rcl
push
out
cld
push
int
stos
in
shl
stc
pop
out
addr16
in
fstps
xor
mov
or
mul
ror
into
hlt
mov
dec
out
test
nop
outsb
push
outsb
lods
sub
add
cmp
icebp
or
jbe
scas
orl
enter
movsl
xor
pop
out
icebp
mov
inc
push
xor
insl
mov
push
xor
sti
jg
mov
lea
sub
popa
and
pop
mov
out
ja
rcll
xor
imul
scas
shrb
jno
push
call
xor
icebp
mov
mov
sti
mov
into
fdivs
ja
add
lret
insb
xchg
icebp
sbb
hlt
cmp
fnsave
sbb
cmp
push
sahf
dec
mov
sti
das
flds
scas
test
orl
cmc
fwait
punpcklwd
push
imulb
jecxz,pt
mov
mov
mov
dec
ja
pop
jle
jno
or
sahf
jp
fstp
clc
mov
lock
popf
gs
mov
mov
cwtl
dec
ret
sub
jg
and
movl
pop
clc
rorl
outsb
inc
bound
lock
pop
push
repz
es
das
pop
int3
mov
pop
sbb
mov
rcr
in
out
mov
mov
cmp
push
sbb
mov
mov
outsb
or
subl
xchg
jg
mov
adc
insl
pop
es
fwait
xor
sub
ret
out
sub
into
jecxz
leave
and
iret
xchg
bound
jecxz
mov
or
mov
hlt
movd
iret
lock
addr16
sarl
iret
int
ret
int3
xchg
popf
stos
sahf
rorl
outsl
adc
cmpsl
mov
pop
jl
jmp
fsubrs
cli
jns
push
repnz
les
outsl
sarb
pop
cli
lea
loop
add
sbb
out
or
int3
fsubr
lret
jle
pop
inc
stos
bound
cmpsb
icebp
nop
sub
bound
adc
xchg
cli
sub
inc
into
mov
clc
loope
adc
sbb
js
ja
mov
mov
fmull
lcall
jmp
cmc
mov
scas
insb
fildl
fisttps
jl
and
fisttps
xchg
mov
xchg
mov
jecxz
mov
push
je
data16
push
into
mov
aas
out
into
inc
test
ds
or
lret
test
jb
scas
xchg
xor
sub
pop
push
data16
mov
ljmp
addb
jge
dec
sub
cmc
or
xchg
sti
ljmp
test
mov
test
aad
pushf
ljmp
out
lret
or
push
cltd
jnp
lret
jg
sub
cmpsb
inc
iret
push
or
xor
push
mov
das
dec
pop
lods
ret
lahf
sbb
in
jae
out
mul
mov
cs
adc
lds
mov
mov
mov
inc
jnp
jo
xor
or
mov
or
or
mov
mov
loope
test
rcrb
sbb
call
gs
repnz
dec
ljmp
cmp
or
xlat
xor
shrb
or
sbb
test
icebp
jle
mov
inc
adc
inc
and
cmp
or
scas
dec
xchg
ret
cmp
bound
push
mov
jne
loop
out
sbbl
ss
sti
dec
rolb
loopne
sub
iret
xor
outsl
in
and
fs
sbb
rcrb
std
xor
inc
inc
je
into
mov
hlt
lods
loop
sub
jne
fbld
xor
fildll
mov
shrl
out
or
call
aas
dec
imul
xchg
xchg
jmp
cmp
pushl
push
mov
loope
jmp
jne
pop
add
in
sbb
sub
cltd
and
flds
xchg
in
xchg
mov
and
mov
shrb
pop
bound
fwait
sbb
into
inc
das
xlat
jmp
xlat
dec
mov
das
xchg
jmp
rcrw
push
xchg
in
jcxz
or
mov
clc
hlt
mulb
jg
cmp
mov
insl
fwait
push
popa
popa
jno
stos
outsl
fucom
xchg
push
mov
jae
jp
in
jmp
test
mov
bnd
dec
addl
jo
xor
mov
bound
mov
scas
mull
mov
loopne
ljmp
xchg
mov
dec
mov
xor
lods
mov
enter
arpl
sub
mov
mov
mov
pop
in
stos
jge
dec
int3
inc
sahf
icebp
xchg
out
lret
lock
in
repnz
or
push
notl
aam
out
mov
lcall
gs
push
xor
add
xor
test
arpl
mov
popf
mov
icebp
sahf
jnp
sub
scas
outsl
scas
and
popa
insl
jo
mov
xchg
mov
lea
idiv
insl
xor
push
fildl
inc
sub
and
jle
int3
mov
in
js
iret
mov
repz
insl
inc
fdiv
push
sub
add
push
dec
jns
inc
push
sbb
das
test
ret
fisttpll
push
push
ds
aaa
pop
adc
outsb
std
out
mov
icebp
lock
shll
inc
out
test
jge
call
mov
test
sub
and
loope
sub
cmp
jo
jecxz
loop
int
sub
cwtl
data16
pop
dec
push
loope
repnz
repnz
scas
in
imull
adc
sub
loope
loopne
fcoms
icebp
or
stos
mov
xlat
add
push
jne
mov
jae
insl
pop
xchg
scas
push
loope
movsl
mov
enter
lcall
arpl
decl
lods
es
out
add
lods
loope
in
mov
xor
fdivs
mov
push
push
add
enter
nop
icebp
dec
insb
jnp
repnz
add
movsb
aas
pop
pop
jo
sub
sti
jne
mov
mov
shll
cmc
fisubrl
test
rcr
or
cmc
dec
mov
jnp
cltd
rcrb
pop
inc
roll
icebp
jg
pop
movl
repnz
je
push
xor
fldt
lret
addr16
xchg
sbb
xchg
inc
shlb
or
es
cmp
xchg
bound
ds
and
or
or
cmp
fnsave
xor
add
push
mov
fmulp
in
or
in
popa
jnp
iret
mov
sbb
mov
xchg
or
xchg
jnp
jmp
pop
jb
roll
in
test
aad
and
fbld
sbb
enter
cltd
xor
push
ret
pop
jnp
jg
data16
mov
inc
ja
mov
scas
and
sti
movsl
jle
int3
mov
push
jo
addl
fmul
int
xchg
iret
pop
mov
test
sbb
shlb
and
lods
popa
lahf
mov
xor
cmpsl
in
insb
pop
adc
dec
icebp
leave
fwait
sub
out
stos
jnp
js
lock
and
repz
or
bnd
pop
and
into
div
push
sub
xor
push
mov
and
aas
add
xchg
imul
js
loop
mov
imul
mov
cwtl
dec
mov
jl
xor
mov
int3
push
into
divl
push
xchg
mov
fmulp
shrb
jp
test
ret
jns
adc
in
fdivrs
mov
inc
dec
inc
mov
mov
in
shlb
cmp
das
bound
jo
mov
aad
mov
aam
out
sbb
jl
sarb
popa
ret
pop
pusha
fistps
or
fmuls
cmp
mov
sti
jl
jg
sub
shl
outsl
mov
insl
out
xlat
inc
jmp
lds
jg
jno
mov
dec
clc
push
jo
hlt
in
leave
movsl
fstpt
imul
in
inc
or
pop
lcall
fisubl
loope
sarb
fcomi
scas
fwait
jmp
or
xor
push
out
add
arpl
sub
push
popa
std
ret
in
mov
fists
jp
inc
xchg
outsb
jnp
jbe
dec
iret
xor
jmp
dec
lods
mov
test
mov
imul
fidivrs
clc
lret
lds
jnp
cmp
cmp
dec
outsl
add
scas
fidivrl
arpl
out
rcrl
mov
repnz
rcr
dec
imull
jb
push
mov
mov
shlb
imul
adc
add
fnsave
xor
xor
ljmp
std
les
fcomip
pusha
ja
lock
stc
dec
loopne
inc
pop
out
fisttpl
sub
repnz
in
pop
lcall
mov
addr16
lods
shll
mov
push
sarl
sub
mov
inc
pop
out
in
nop
cmp
out
mov
fstpt
mov
xchg
int
test
shr
push
pusha
stos
mov
mov
rcrl
shll
loopne
or
ljmp
push
popf
clc
adc
sub
jne
pop
addr16
shrl
push
aad
outsb
sbbl
pop
mov
sub
jmp
call
out
ret
xor
dec
mov
xchg
dec
lock
int
jno
sub
inc
outsb
andw
or
mov
lahf
les
in
push
jecxz
mov
insb
shll
lock
shrl
fsubr
out
mov
lds
fisubrs
call
mov
mov
fistl
hlt
pop
and
push
add
testb
rol
rcrl
mov
and
or
pusha
out
jp
enter
addr16
push
rol
and
ficoml
mov
pushf
scas
mov
xchg
dec
rolb
mov
jbe
pop
aad
mov
fisubl
lret
fucomp
adc
repnz
cmp
dec
shrb
lcall
jecxz
lods
mov
test
and
cmp
loopne
push
fidivrl
adc
pushf
add
mov
imul
sbb
pusha
or
pop
stc
ret
mov
les
les
mov
sbb
pop
sti
xchg
push
jg
jnp
dec
js
jne
fisttps
outsb
loop
fldcw
push
or
adc
scas
mov
imul
pop
mov
cmpsb
outsl
mov
mov
xor
outsb
fsubrl
std
jne
jmp
push
into
fbld
sbb
or
push
loopne
leave
orl
loope
out
xor
jle
hlt
fldl
or
out
sbb
dec
pushf
cltd
loop
xor
stos
pop
xchg
sbb
out
stc
lock
scas
aas
mov
cwtl
fldcw
cmpsb
ljmp
imul
or
fs
in
xor
cld
or
in
cmpb
loope
add
pop
pop
push
dec
out
pop
ljmp
or
and
imul
add
mov
aad
cmp
fistpll
enter
mov
push
xchg
jle
movsl
inc
stc
notb
xchg
popl
insl
aaa
scas
sti
stc
loopne
jbe
jmp
pop
dec
adc
xor
mov
sbb
jecxz
adc
fwait
xor
in
and
das
xchg
ror
outsl
push
sti
pop
lret
stc
push
push
bswap
aad
or
outsl
jb
shll
cmp
jns
fbstp
xchg
test
arpl
inc
stos
test
inc
jmp
test
int
call
mov
movsb
or
movsl
xchg
sarl
lods
mov
icebp
int3
jg
fdivrs
xor
mov
push
jl
out
sub
shrb
add
sarl
cmpsb
lret
sbb
rcr
xlat
iret
xchg
cmp
add
fwait
sahf
jmp
pop
cmp
sub
mov
xor
jmp
ds
shlb
repnz
or
cmpsl
cmpsl
sbb
pop
cli
xchg
add
pop
clc
dec
ljmp
jge
pop
jne
sarl
xor
or
incb
movsb
je
and
imul
lret
sar
mov
adc
sub
out
shrl
xchg
lods
std
test
mov
jb
in
shl
das
repz
or
pushl
jecxz
adc
jmp
loop
out
adc
cs
jmp
adc
xchg
psrad
leave
push
rcrl
aad
or
jmp
imul
push
ret
mov
outsb
imulb
push
les
outsb
sub
ret
fcomip
pushf
imull
or
push
and
in
lods
mov
iret
ljmp
sub
fistps
mov
cld
lods
rcll
movb
cwtl
push
out
pushf
push
fwait
test
lret
mov
add
push
pop
loopne
fdivr
and
mov
pop
mov
outsl
mov
mov
out
jg
inc
loop
jnp
mov
fidivs
push
enter
fsubl
mov
int3
fldenv
daa
push
std
sahf
jmp
jmp
pop
inc
xlat
mov
inc
gs
pop
ja
cvttps2pi
daa
in
popf
lea
sub
loopne
arpl
imul
sbb
data16
loop
mov
out
xchg
and
lcall
cmp
stos
cmpsb
jecxz
ficomps
jg
mov
shrb
pop
sbb
out
icebp
lods
mov
jb
ret
xchg
shrl
cmp
cmp
bound
ret
std
pop
shll
in
cmp
add
fcmovb
scas
add
orb
xor
and
pcmpgtb
pop
sub
dec
mov
mov
sbb
out
cmpsb
fsubr
jecxz
loopne
pushf
mov
pop
mov
mov
mov
mov
push
jns
cwtl
push
scas
or
testb
test
stc
roll
jecxz
jmp
shlb
adc
pop
adc
push
clc
int3
sub
popf
jle
sbb
push
negl
mov
xchg
icebp
sbb
push
push
das
loopne
or
mov
pop
push
jecxz
pop
outsl
xor
xor
cld
xor
loop
mov
adcl
pop
fildll
sbb
inc
bound
pushf
pop
test
jae
pushf
popa
pushl
jno
data16
out
sbb
sbb
mov
cwtl
push
xor
out
mov
mov
scas
rorl
test
test
add
inc
int3
pop
imul
clc
dec
jne
rcrl
xchg
rcrl
fstps
or
jp
and
adc
insl
sbb
lret
inc
sub
fldenv
mov
lcall
push
fadd
leave
push
loope
pop
lret
jnp
popf
test
mov
xchg
dec
incb
je
adc
push
sub
test
mov
inc
pop
xor
in
cld
cli
mov
jne
lock
ljmp
cmp
adc
mov
xchg
pushf
scas
subb
jecxz
loop
in
cwtl
dec
and
and
aad
lahf
add
fwait
call
cld
iret
inc
sbb
ficompl
out
pop
sub
test
sahf
ljmp
test
cmp
stos
cmp
mov
add
pusha
mov
loopne
inc
push
out
in
jo
shrb
loope
adc
fs
sub
iret
adc
dec
mov
push
das
loope
fwait
out
sti
xchg
push
in
push
arpl
sub
pop
cmp
roll
repnz
inc
ljmp
add
scas
outsl
leave
sbb
out
adc
push
jae
jbe
sub
push
out
mov
ja
mov
push
iret
mov
sbb
testb
push
xchg
shlb
ret
nop
aaa
pop
dec
adc
stos
into
xchg
mov
popa
pop
dec
mov
outsb
aad
jg
add
lock
pushf
or
sbb
ja
ljmp
popf
pop
std
jp
mov
pop
and
jmp
loopne
pop
cwtl
push
mov
ljmp
lcall
sub
or
lods
out
fsubrl
dec
inc
mov
fwait
out
push
jmp
jle
adc
xor
xchg
dec
into
sahf
xor
and
mov
and
mov
sar
std
fsubs
xor
dec
shll
movsl
imul
cmp
jb
das
push
adc
ljmp
aad
sub
sar
mov
loopne
incl
mov
loop,pt
ret
mov
pop
mov
mov
mov
imul
mov
outsl
lret
cmpsl
iret
inc
shrl
aaa
int3
stos
pop
ljmp
mov
jno
lds
test
test
jle
pusha
scas
mov
jae
enter
lret
je
push
add
repnz
mov
je
push
stos
push
les
push
inc
icebp
cltd
imul
jae
or
jg
lret
add
sub
mov
aad
mov
xchg
xor
xchg
lock
or
and
mov
inc
imul
shll
lods
sarl
and
dec
push
out
jae
mov
ret
scas
in
rorl
dec
pop
ljmp
cmpsl
fwait
pop
bound
out
pop
add
ret
xchg
xchg
stos
adc
pop
sti
pusha
bound
cmpsb
pop
adc
ja
sub
int
out
in
sar
jno
das
in
pusha
pop
inc
dec
cmc
dec
in
fimull
mov
pop
lea
sbb
gs
lret
jle
sbb
lds
xlat
inc
bound
jne
fwait
sub
ret
jg,pn
inc
fcoms
sub
dec
pop
xor
mov
loopne
mov
and
cmp
je
in
jbe
out
jmp
stc
imull
pop
mov
sti
out
mov
addr16
cs
icebp
pop
and
outsb
pushl
je
xor
add
add
outsb
jne
push
ljmp
pop
pop
pop
aam
or
inc
call
scas
add
sbb
into
or
lods
mov
cwtl
fbld
inc
leave
cmc
pushf
stos
mov
push
pop
inc
mov
pushf
or
sti
and
les
rcrl
mov
sub
aad
cli
pop
in
ss
leave
inc
into
mov
mov
outsl
jg
xor
push
add
enter
lcall
mov
jmp
rcll
adc
xor
and
imul
fisttpll
xchg
adc
and
fnsave
inc
ds
and
inc
dec
sub
mov
shl
movsl
iret
cli
fisubrl
jo
loope
out
jb
out
inc
nop
mov
push
bound
cwtl
push
je
xchg
mov
repnz
mov
test
add
pop
jecxz
mov
and
popfw
lods
stc
loop
cmpsb
pusha
or
mov
dec
push
cmc
mov
icebp
fcmovnu
mov
loop
inc
jle
lahf
aas
shlb
cmp
mov
sbb
in
push
inc
cmpsb
icebp
push
sub
jb
pop
or
sbb
mov
mov
outsl
stos
pushf
mov
xlat
scas
pop
push
ret
xor
imul
xor
push
push
push
daa
lds
mov
imul
inc
jmp
inc
jecxz
xchg
in
and
fcos
popfw
inc
cmp
inc
push
aas
fisubrs
lods
popa
cwtl
sti
or
dec
fst
in
iret
adc
jge
sub
popf
lock
and
xchg
out
jns
je
imul
hlt
cmpsb
fisttps
je
jmp
out
lods
ret
rorl
sbb
mov
iret
pop
mov
rcrl
push
fucom
sub
mov
cmp
xor
jns
inc
sbb
adc
sub
stos
loop
lock
stos
fstpl
dec
loop
lcall
ds
test
push
pop
dec
or
or
repnz
movsb
add
fimull
outsl
into
dec
add
subb
cmpsl
adc
sub
in
in
mov
fbld
mov
inc
mov
shrl
pop
pop
aam
leave
leave
enter
jo
test
popa
adc
add
shll
sub
bound
sahf
insb
inc
repnz
mov
scas
testb
outsl
jge
outsb
mov
divl
inc
das
in
jecxz
daa
in
lahf
sbb
cmp
xchg
inc
movsb
cmpsl
push
mov
nop
insl
cli
outsl
jo
jp
daa
fwait
xor
jmp
test
sbb
jne
cmp
pop
mov
out
sbb
xlat
pop
mov
or
mov
jle
xchg
jbe
lcall
mov
nop
lcall
pop
fxch
pop
rcrb
mov
push
adc
jne
and
movsb
dec
adc
hlt
mov
in
bound
xor
pop
pop
es
loope
stos
push
push
pop
popa
movsl
sub
cmpb
mov
imul
or
xchg
pop
into
jl
rcr
scas
lods
mov
popf
sub
or
mov
jmp
pop
popf
cli
pusha
jg
push
js
mov
nop
addr16
mov
jle
sub
pop
jecxz
imul
daa
shlb
call
sub
mov
push
pop
lcall
int
cmpsl
cmpsl
mov
sbb
adc
and
imul
add
aam
repz
je
jo
es
mov
mov
in
loope
fwait
loopne
lods
xor
fcmovnu
ffreep
scas
add
das
int
mov
cmp
outsb
dec
mov
cmp
pop
pop
lahf
pop
ja
in
in
movsl
adc
mov
shll
pop
mov
push
sbb
mov
pop
insb
and
push
ja
cs
or
inc
mov
lret
fwait
push
pop
jne
and
clc
push
test
adc
divb
nop
mov
fistps
xchg
loopne
ja
mov
xor
jmp
cmc
iret
dec
int3
bnd
sub
imul
out
cmc
lock
or
xor
into
mov
or
out
std
pop
rcrb
out
std
lods
jmp
xor
jg
jb
sub
cmp
stos
jno
cmc
cmp
cwtl
or
outsb
dec
loope
jle
stc
mov
jo
icebp
jl
nop
push
dec
sub
add
and
mov
sbb
mulb
cltd
stos
cltd
and
xor
out
pop
dec
fidivrl
push
xor
mov
push
pop
mov
enter
insl
pop
fnstsw
add
test
xchg
cmp
out
cmp
lods
aaa
outsl
imul
arpl
out
jb
mov
addr16
in
mov
movsl
jecxz
loope
adc
jmp
add
sub
xor
cmp
cli
bound
subl
data16
cmp
cld
mov
jnp
fwait
out
cmpl
xchg
imul
cmc
stos
dec
fmull
push
mov
mov
jbe
les
loop
cld
xchg
mov
mov
bound
mov
loope
iret
in
xchg
mov
jge
jne
cmpsl
mov
or
stos
pusha
mov
shrl
call
pop
lods
test
fucomip
jo
jmp
cltd
out
push
loopne
scas
cmpsl
xchg
inc
jnp
jno
jecxz
dec
addr16
mov
fwait
xchg
andb
jns
jbe
jp
call
adc
mov
cmc
cmc
and
or
pusha
cmp
dec
cwtl
and
std
in
addr16
mov
sbb
cwtl
push
push
add
loope
decl
jbe
inc
pop
or
rol
pop
test
sub
pop
and
dec
pop
sbb
mov
xor
mov
pusha
or
sbb
add
push
cli
fisubs
xchg
insl
push
lret
icebp
cli
xor
fistpll
cmovne
sbb
aam
dec
jg
repz
sbb
aad
mov
popa
sbb
pop
jno
or
adc
fcomip
mov
pop
mov
stos
ja
cltd
sub
test
cmpsl
mov
dec
jae
out
out
lock
xor
add
dec
push
orb
dec
lods
cmp
pop
fdivrp
cmp
bnd
das
and
gs
out
movsb
xor
and
cmp
sbb
stc
sbb
pop
outsb
and
add
sbb
adc
push
mov
mov
insl
lahf
js
ret
lods
iret
popa
pusha
mov
lods
push
or
adc
imul
subl
jg
push
in
add
jg
xor
jae
mov
lcall
test
mov
sbb
cwtl
push
fiadds
dec
stos
push
fld
push
push
sahf
lods
mov
enter
inc
or
pop
pop
and
inc
xchg
arpl
std
insl
adc
mov
lret
cmpl
cli
nop
ficompl
je
in
scas
jecxz
mov
icebp
mov
xchg
or
xor
les
cvttps2pi
jle
movsl
loope
ljmp
xchg
lods
icebp
fsubrl
aaa
cmp
jecxz
ret
pavgb
or
dec
pop
adc
cmc
cmp
mov
mov
jg
call
or
arpl
in
je
iret
aaa
xor
movsb
mov
jle
cmp
nop
mov
leave
xchg
push
mov
lahf
push
out
mov
mov
sbb
inc
in
xchg
jl
movsl
sub
dec
xchg
inc
dec
mulb
jecxz
lret
mov
push
into
sahf
insl
inc
shll
out
and
jle
ljmp
stos
sbb
xchg
dec
pop
rcll
dec
movsl
fucomip
ret
push
inc
and
sub
mov
mov
sbb
mov
stos
mov
lcall
jle
out
shl
out
loope
push
pop
mov
ret
fbstp
lock
popf
out
stc
out
lahf
inc
mov
mov
loop
fists
addr16
jmp
xchg
enter
ret
add
cltd
imul
dec
imul
loop
ljmp
jbe
es
sub
adc
addb
ret
push
or
xor
movsb
imul
xchg
cmpsw
test
xor
insl
dec
test
fcompl
bound
and
sbb
stos
pop
mov
mov
and
push
cmc
int
mov
mov
or
and
daa
mov
sbb
dec
outsb
aad
inc
mov
push
mov
pop
push
sbb
jl
inc
insl
enter
add
psubb
push
mov
push
inc
scas
pop
add
jns
jb
rcr
push
push
mov
shl
push
fistps
xchg
shll
mov
fldl
cltd
outsb
pop
loopne
pop
ret
push
pop
scas
scas
in
insl
lods
test
xor
cltd
jmp
aad
cmpsl
mov
lret
scas
jmp
rcrl
mov
mov
pop
ret
getsec
jmp
or
movsl
pop
out
das
mov
push
vprotw
or
pop
icebp
xchg
decl
dec
lret
sbb
out
adc
mov
mov
mov
mov
jle
push
mov
not
loope
push
push
cmp
sub
push
xchg
pushf
mov
lcall
punpckhbw
push
popa
mov
aam
ficoml
fdivr
fisttpl
out
lcall
call
push
adc
add
cmp
sub
mov
jno
in
xor
sub
shll
mov
rol
mov
je
je
cmp
into
dec
push
push
lea
ret
jnp
pushf
jb
jo
ja
adc
xor
cmc
rcrb
mov
imul
stos
int
enter
int3
sbb
ja
hlt
lcall
fildll
fists
mov
daa
sti
sbb
loop
inc
insl
push
ljmp
mov
fptan
xlat
ljmp
rorl
jae
cmp
mov
sar
and
in
std
jp
in
ret
outsb
pop
dec
in
adc
push
bound
dec
fisttps
loop
repz
in
push
outsl
add
pop
add
sub
sti
loope
push
iret
fcomi
enter
stos
out
in
out
xorb
pop
xor
loopne
dec
call
lea
mov
or
movsb
xchg
les
push
into
outsb
add
mov
and
push
imul
jo
rolb
aad
aas
jp
in
push
xor
xchg
jp
je
call
sub
add
cs
enter
sub
mov
loopne
out
xor
flds
cmpsl
shrl
mov
ret
cmp
lret
loopne
testb
divl
mov
xchg
xchg
imul
and
in
jmp
std
lods
movsl
or
pop
push
scas
fistpll
imul
pop
cmpl
mov
sbb
pop
jg
popf
xchg
or
push
cmc
xchg
mov
sub
mov
imul
adcl
rorl
loopne
insl
add
enter
fisttpll
iret
dec
lock
sub
push
ja
lahf
adc
sub
add
imul
mov
lret
dec
pop
repz
fcmovne
lock
xor
push
lea
mov
lds
aam
fwait
test
sub
scas
lock
lcall
imul
xlat
mov
lret
inc
push
cmp
add
jl
add
xchg
ds
dec
inc
dec
test
jmp
stc
pop
ret
dec
das
ret
in
xchg
and
stos
dec
enter
adc
lcall
hlt
rcll
push
out
popf
mov
jb
insb
xchg
or
lock
add
jg
bnd
ret
je
xchg
mov
lock
mov
popa
mov
andb
test
sahf
mov
xor
stos
icebp
loop
jae
in
and
or
out
shrl
push
jmp
push
lret
ret
jno
mov
inc
pop
sub
rcll
and
pop
inc
psrlq
jmp
xchg
or
adc
pandn
out
or
lret
rcl
jecxz
loope
inc
fcmovnbe
dec
insl
pop
call
test
out
rorl
icebp
mov
mov
outsl
pop
cli
fisttpll
shr
adc
js
lds
and
es
mov
dec
and
imul
ret
mov
aam
insb
stos
call
mov
push
lds
aas
cmp
data16
push
xchg
mov
adc
xchg
imul
scas
sarb
push
repz
testl
test
out
push
mov
out
or
popf
jle
jg
jne
stos
jge
or
pop
cmp
inc
push
pusha
jecxz
in
fstpt
inc
mov
cmp
in
pop
or
icebp
cld
adc
sarl
add
and
imul
cmp
insl
or
out
shll
loop
and
jmp
bound
sti
jae
sub
mov
inc
pop
inc
push
xor
int3
mov
pop
imull
repz
pop
pushf
leave
lret
imul
ljmp
test
pushf
sar
lret
cltd
imul
cmc
popf
mov
and
andb
mov
xchg
inc
inc
es
out
pushf
out
cmp
lea
mov
xchg
in
add
jl
and
int
push
into
filds
mov
test
push
in
lds
adc
sub
lock
cld
clc
loopne
imul
jnp
iret
mov
frstor
insb
xor
movsl
das
mov
idivb
jg
loope
dec
or
bnd
fstps
lods
lret
lea
imul
cmp
outsl
mov
popf
sub
xor
cmp
lds
mov
xor
int
mov
fiaddl
jl
ss
jns
adc
stos
lods
adc
mov
dec
adc
loope
mov
insl
out
xchg
fdiv
push
sbbb
hlt
cmc
into
je
insb
mov
loope
adc
aas
push
dec
ror
dec
aas
arpl
dec
jae
and
pusha
ja
add
loop
jp
pusha
stos
lret
rorb
fcmovnbe
sahf
add
fucomip
insl
mov
jne
fst
push
or
mov
push
dec
sbb
or
lret
add
std
daa
dec
adc
adc
bound
aaa
into
jecxz
jbe
inc
mov
cmc
jge
and
xchg
lahf
sub
sub
shr
jp
inc
aam
loopne
and
jecxz
insb
sub
fildll
mov
out
iret
cmp
movsl
xlat
xor
test
fistpll
stc
ret
into
mov
rcr
xchg
imul
or
jl
shrb
std
das
push
push
fs
sub
out
mov
xor
lock
sbb
std
pop
out
js
loop
or
pop
shrb
mov
lahf
bound
hlt
cmc
add
or
out
adc
adc
jmp
popf
mov
inc
lcall
mov
and
gs
push
loop
scas
cmp
xor
dec
jo
or
xchg
into
mov
jmp
popf
or
shll
stos
sti
test
push
push
mov
xor
jbe
jecxz
sti
loope
dec
mov
cld
cmp
dec
ret
out
or
ss
jbe
pop
loop
icebp
jg
xor
out
or
and
mov
imul
shlb
cmp
xor
fiadds
cld
jns
movsl
ja
clc
mov
push
push
clc
mov
pusha
icebp
and
jbe
sub
stos
test
dec
bound
cmp
aam
add
outsl
inc
xchg
faddp
adc
leave
orb
xchg
iret
jo
sub
ja
mov
dec
das
into
mov
out
mov
xchg
jo
out
fcoms
rol
scas
jecxz
cmp
dec
das
lahf
cld
lahf
rcrl
xor
xor
xchg
sub
jge
ds
and
sarb
jo
out
jae
and
pushw
popf
mov
lds
fidivrs
jle
cmp
js
imul
mov
pop
loopne
and
sub
cs
jb
pop
xor
repnz
imul
push
inc
jae
cmpsl
mov
cwtl
and
push
loop
fwait
jecxz
mov
inc
mov
push
cmp
dec
gs
sbb
adc
pop
leave
mov
dec
push
add
ss
lahf
in
inc
xor
fnstsw
sbb
loopne
or
dec
jp
mov
decl
mov
jne
neg
cli
leave
mov
add
cwtl
add
add
iret
xchg
mov
pushf
lock
lcall
ret
or
xchg
movl
jge
shll
mov
fprem
xchg
mov
bound
inc
loop
sbb
dec
push
dec
jbe
add
loopne
testl
push
fisttpll
in
mov
jnp
lds
push
pop
ret
mov
add
loop
shlb
popa
lret
aaa
shl
dec
jbe
jmp
imul
mov
das
inc
mov
sub
movb
pushf
pop
addr16
pushf
cmp
sbb
repnz
bound
mov
shl
sbb
jo
stos
add
cld
rclb
jmp
fcoml
jg
cmp
inc
xchg
fisttpll
pop
pop
int
pop
pop
xor
testb
call
les
repnz
jecxz
jne
mov
lods
inc
int
xor
xor
dec
dec
add
jg
mov
enter
sbb
jecxz
add
lock
insl
fsubl
sub
adc
mov
push
fidivl
mov
add
add
add
push
loope
icebp
or
div
jae
fildl
sub
jg
inc
mov
xchg
push
lret
pop
pop
xor
push
xchg
sarl
mov
mov
test
loopne
push
sbbb
hlt
and
mov
loope
push
xorl
mov
mov
rcrb
dec
sub
imul
lahf
cmp
mov
inc
push
and
mov
in
cmpsl
mov
bound
icebp
pop
in
and
enter
add
js
out
sbb
push
mov
je
add
ret
out
jecxz
adc
xchg
scas
fmul
push
iret
mov
push
or
fucomi
scas
jns
fnstsw
pop
pusha
movsl
rcrl
loope
icebp
or
popa
movsl
sub
mov
loop
push
pushf
pop
mov
xor
mov
out
inc
pop
cli
lcall
sbb
pushf
lods
sub
inc
add
add
popf
fs
dec
inc
inc
test
push
clc
adc
fwait
das
sbb
outsl
inc
aad
fmuls
iret
std
in
mov
bound
testl
imul
xrelease
int3
mov
rcrl
sbb
jle
add
std
or
cmpb
out
outsl
lods
jecxz
jg
jno
mov
mov
add
sub
xchg
xchg
cmp
mov
pop
adc
dec
mov
xor
outsb
jle
mov
pop
mov
jecxz
mov
shll
pop
pop
iret
xor
imull
rcrb
adc
jl
loop
outsb
sbb
push
mov
fwait
push
mov
sub
jmp
leave
int3
arpl
or
jnp
mov
push
xchg
aaa
mov
fiaddl
or
jge
test
icebp
mulb
push
repnz
popl
jecxz
test
jo
leave
xchg
dec
or
inc
mov
xchg
fs
int3
jg
lea
in
ret
jmp
sub
add
iret
pop
jmp
fucomi
or
inc
gs
dec
out
add
ret
pop
jg
cmp
pop
addb
or
pop
add
lret
lock
arpl
pop
xchg
mov
jno
icebp
fidivrl
or
loope
cmp
in
test
out
lods
fcompl
gs
mov
mov
popl
add
movsb
int3
jg
fdivrs
popa
iret
dec
cmp
imul
les
scas
rcrl
jns
or
cmp
int3
mov
pusha
stc
dec
push
or
fisttps
fisttps
test
cmp
lods
adc
mov
and
cmpl
mov
rcrb
aam
dec
mov
imul
dec
fists
aaa
sub
or
dec
sub
push
pusha
sbb
rorb
inc
or
push
bswap
cmp
xchg
pop
pop
add
out
push
and
cld
mov
jl
popa
sbb
dec
popa
por
shl
ljmp
into
mov
popf
in
scas
mov
das
in
adc
aam
fstl
outsb
loope
clc
cmpsl
inc
or
loop
ljmp
adc
cmp
test
add
or
mov
or
nop
rolb
or
out
jmp
sub
jecxz
or
mov
mull
jg
daa
lock
stc
cs
out
out
lock
lods
aad
test
mov
hlt
lods
cmp
ror
dec
and
push
mov
pop
sub
ret
in
into
mov
or
incb
cmp
or
lret
fs
addr16
cmp
inc
cmp
cmp
push
in
pop
je
mov
loope
sub
int
mov
lret
lahf
cmp
out
ds
imul
cmc
xchg
imul
mov
mov
sub
data16
lret
popf
adc
lock
ret
pop
daa
or
xchg
dec
sbb
inc
jns
cwtl
mov
xchg
pop
inc
out
gs
insb
or
mov
jo
test
xlat
jmp
cmpb
mov
fmul
and
jecxz
adc
fwait
cmp
fst
rorl
xchg
or
out
stc
out
testl
xor
cmpsb
mov
rorb
or
add
xchg
loop
sti
jo
cwtl
mov
ret
je
pop
adc
test
sbb
daa
ds
pop
push
aaa
xchg
icebp
loopne
test
mov
mov
inc
sub
mov
movsb
pop
dec
addb
in
add
push
cmpsb
dec
in
data16
mov
icebp
je
inc
push
or
xor
out
cmc
fstl
mov
mov
in
sub
movsb
cli
or
cs
call
push
xchg
pop
in
jmp
push
rep
and
in
jle
cli
sbb
sub
cmp
push
mov
cmc
mov
fists
test
mov
dec
mov
mov
pop
stos
pop
jns
push
lret
mov
add
sti
mov
adcl
loope
cmp
popa
cmp
scas
iret
lock
mov
test
or
fwait
scas
mov
pop
ss
push
mov
mov
cld
jae
loopne
xor
cmp
js
arpl
shll
jg,pt
hlt
xor
adc
xorl
mov
and
loopne
mov
or
mov
dec
pop
loopne
jecxz
dec
test
lock
mov
nop
stos
shll
push
sub
mov
fwait
arpl
xor
xchg
and
dec
dec
push
pop
cmp
cmp
sbbl
jp
xchg
loope
jb
out
bnd
mov
popf
ffreep
sub
incb
in
scas
out
mov
ret
mov
inc
ljmp
aad
jle
push
sub
pop
mov
rclb
xor
leave
das
jmp
lret
push
dec
push
clc
lock
arpl
out
mov
in
ret
imul
pushl
dec
popa
mov
xor
jle
jo
nop
ret
roll
insl
addr16
fsubl
adc
shlb
mov
rorb
stos
ss
rolb
lods
mov
imul
cmpb
mov
stos
lcall
frstor
fcomps
mov
push
das
ja
repnz
jle
in
pushf
xchg
lods
outsl
and
push
mov
add
lods
out
arpl
rcll
xchg
dec
xchg
fnstcw
or
fildll
fsubr
mov
add
jnp
xor
jo
imul
sub
mov
sub
mov
adc
jle
mov
repnz
push
stos
stc
out
sub
jle
push
ficompl
mov
mov
rcl
cwtl
rcl
lret
pop
lret
pop
icebp
push
testl
jb
fdivrl
hlt
ret
shrb
imul
add
fisttpl
mov
shlb
imul
jle
imul
lods
sarl
inc
pop
in
inc
lods
fcomip
mov
dec
fcomp
or
ror
pop
sbb
inc
aaa
fidivl
mov
or
mov
stos
jecxz
divb
xchg
incl
cld
cmp
je
adc
mov
mov
ret
movsl
pushf
sub
mov
adc
sbb
jp
xor
xchg
ficoml
in
test
mulb
mov
jbe,pt
sub
pushf
mov
aas
dec
fdiv
mov
mov
mov
test
dec
ljmp
mov
adc
test
mov
adc
mov
cmp
ss
xchg
fsubrs
sub
sti
bnd
mov
xchg
sub
and
push
push
lcall
adc
sbb
cmp
mov
cmpb
push
outsb
hlt
into
jne
push
xchg
adc
pop
pop
jns
jns
sbb
add
jp
les
adc
xor
ja
mov
scas
xchg
repnz
loopne
mov
cli
outsl
and
sbb
add
test
jne
outsl
jecxz
outsl
jne
cmc
insb
outsb
lahf
mov
icebp
mov
jecxz
inc
or
outsl
or
iret
hlt
add
cltd
dec
mov
jo
icebp
jle
ds
sahf
scas
mov
out
mov
out
into
jl
and
pop
jmp
pop
cmp
cmp
int3
jecxz
mov
mov
inc
in
lret
lods
xor
mov
cmpsb
cmp
push
repnz
dec
sbb
lea
in
rcl
xor
xchg
inc
mov
adc
jg
mov
push
inc
push
push
jmp
push
lea
lret
int3
mov
or
fistps
and
cmc
into
mov
lcall
or
dec
mov
mov
add
mov
or
ror
scas
outsb
sub
dec
mov
xchg
dec
shl
test
ret
mov
movsl
jle
test
mov
cmp
aad
loopne
fbld
rcl
push
arpl
mov
arpl
ljmp
int3
jnp
fistps
or
fsub
out
jle
inc
iret
enter
loop
dec
ljmp
jle
lods
leave
mov
in
call
xchg
lret
pop
jge
push
testb
stc
icebp
mov
mov
add
pop
fs
jbe
sub
loope
or
insb
stos
pop
imul
mov
icebp
mov
pop
or
mov
fildll
jne
in
jne
jns
and
adc
sub
enter
cmpsl
test
dec
inc
ljmp
xor
push
out
push
lea
int3
enter
les
sbb
mov
sbb
sub
ljmp
inc
pop
inc
stc
data16
adc
adc
mov
dec
mov
das
pop
mov
mov
xchg
push
sub
rorb
mov
les
rclb
jb
mov
lcall
jo
loop
hlt
adc
ljmp
repnz
cld
rorl
clc
inc
mov
fmul
fiadds
or
loope
iret
std
insl
dec
fisubrs
push
loopne
and
iret
mov
sbb
mov
mov
jb
fdivrs
push
jl
out
cmp
push
mov
xor
dec
insb
jl
sub
cmp
outsb
je
nop
arpl
jg
dec
fistps
push
mov
outsl
push
cmp
fnstenv
out
mov
or
jo
xor
sub
iret
sarl
jecxz
jg
int
jbe
mov
cli
and
cltd
je
or
loope
fmul
in
dec
pop
push
mov
cmp
inc
daa
adc
mov
xor
shl
mov
fmul
add
ljmp
popa
or
pop
xor
add
movsb
dec
scas
inc
lock
test
jl
mov
ja
ds
out
shrb
out
mov
xor
xchg
fbstp
stos
pop
jbe
pop
icebp
scas
divb
lret
sub
and
and
rcl
sbb
fistpl
push
rcr
ljmp
mov
int3
push
pop
xor
jecxz
jb
or
icebp
in
dec
daa
in
aaa
push
ficoms
sbb
mov
mov
jae
xchg
cli
sub
and
add
mov
mov
sbb
cmp
pop
pop
shl
out
sti
mov
lret
stc
int
sti
outsl
xchg
jle
icebp
lahf
jbe
cli
jns
xor
gs
xlat
and
sbbl
lods
xchg
mov
push
repnz
and
enter
stc
inc
inc
mov
loope
out
jnp
int3
xor
js
bound
mov
pop
negb
hlt
adcl
test
sbb
push
sbb
sar
outsb
ss
cmp
xor
and
and
test
out
in
mov
mov
daa
push
ljmp
mov
loope
aaa
sub
icebp
cmp
pop
add
out
or
int3
inc
add
aas
iret
cmp
mov
jle
dec
mov
mov
int
aaa
call
jmp
xor
loop
imull
xor
jnp
xor
xor
idiv
cli
fadd
or
out
xchg
cld
cli
xchg
xor
mov
inc
jg
dec
pop
fistpll
pop
mov
mov
leave
or
aam
xorb
adc
add
adc
fwait
sahf
xchg
and
incl
jne
mov
loopne
add
stos
repnz
jge
pcmpgtb
lret
repnz
pop
int
mov
icebp
ja
data16
into
addr16
push
push
das
inc
dec
dec
xor
mov
roll
pushfw
out
fisubl
mov
popa
push
cltd
popf
pop
xlat
and
push
shlb
fcomps
popf
jbe
movsl
dec
cwtl
ds
stc
cmpsl
adc
fisubs
and
xor
inc
mov
ficoml
add
les
xchg
cmpsb
xchg
push
push
sahf
cltd
jno
das
rcr
inc
loop
inc
dec
jne
sub
into
add
in
cli
dec
jmp
div
imul
or
out
jp
and
sub
rorb
mov
jbe
and
loope
jg
mov
in
in
mov
in
outsl
mov
sub
scas
in
fdivr
pop
sbbb
inc
inc
loop
aas
filds
shrl
movsl
push
push
outsl
jg
cmp
jecxz
fistpll
sub
push
clc
enter
pop
aad
xor
lret
scas
cmp
xor
xor
mov
push
mov
pop
ss
inc
or
test
or
push
lods
ret
loopne
outsb
xchg
adc
imulb
fsubrs
ror
xchg
dec
xor
or
jb
shrl
mov
push
fsubrl
ret
xchg
xchg
fdivr
mov
pop
ja
lea
inc
in
dec
in
cmp
subl
test
push
arpl
mov
xchg
ret
lcall
jg
shrl
enter
loop
out
xor
adc
in
int3
push
pop
jne
loopne
loope
push
insl
fists
pushf
dec
out
rorl
jno
mov
lea
jno
sub
lret
ficoms
dec
inc
gs
dec
outsl
xlat
movsl
repnz
rorl
jg
jae
mov
mov
clc
and
add
push
shlb
jne
stos
mov
icebp
pop
stc
inc
repz
mov
xchg
outsl
mov
xchg
out
movsl
adc
add
push
movsb
gs
inc
out
fidivrs
inc
adc
push
mov
xor
aam
cld
push
add
push
nop
adc
and
loope
jno
cmp
outsl
sbb
in
fs
sahf
xchg
lahf
repnz
jge
outsl
cld
push
loope
shl
icebp
shlb
out
jecxz
out
fs
into
insl
mov
shrl
mov
push
push
fisubrs
add
and
cwtl
jns
ljmp
leave
mov
xor
ror
jg
mov
dec
adc
loopne
mov
mull
sbb
std
pop
push
dec
popa
sti
and
jbe
aad
cmpsl
sahf
sub
xchg
inc
stos
or
rorb
insl
adc
mov
inc
mov
cmpl
out
fstl
testl
bnd
adc
mov
or
mov
shll
jae
and
imul
shrb
add
mov
sti
fdivrp
fsubrl
dec
mov
out
nop
stos
fisubl
fs
call
lods
jo
inc
int
mov
loope
sub
lahf
cld
leave
push
xor
fsubrl
les
fwait
cmp
or
lods
cmp
mov
shr
ret
adc
ret
in
out
jmp
mov
push
cmp
adc
mov
aam
mov
in
mov
add
into
loop
repnz
loopne
dec
in
popa
jo
inc
inc
xchg
out
ja
xchg
or
adc
mov
and
movb
push
mov
mov
mov
or
outsl
test
outsb
add
fldenv
test
rorb
adc
mov
filds
cltd
fbld
int
outsl
scas
ror
movsl
jno
sbb
scas
addr16
fisttpll
mov
sub
jmp
cltd
scas
mov
in
jne
scas
lds
std
out
mov
or
shll
dec
xor
out
adc
jecxz
mov
cwtl
add
sbb
mov
cmpsb
cmp
adc
push
inc
lret
sbb
nop
ljmp
mov
mov
cmp
jl
int
ret
int
ja
fildl
or
jbe
cld
cmpl
loop
outsl
scas
xchg
mov
shrl
stos
add
xor
repz
mov
movl
sbb
test
movsl
mov
negl
pop
loope
cli
testl
adc
repnz
or
stos
lret
mov
mov
iret
mov
shll
imull
sti
repz
inc
push
mov
sbb
loope
jg
ss
pop
fisubrs
push
xor
in
mov
mov
popf
add
clc
shrl
or
loopne
insw
or
lcall
mov
call
pop
sets
push
clc
mov
test
lret
xlat
cmpsb
call
jbe
arpl
scas
adc
iret
out
mov
sub
jo
xchg
icebp
ljmp
lods
ds
scas
push
adc
adc
xor
pop
nop
int3
aam
jmp
xchg
jnp
jle
out
xchg
movsb
lret
xchg
mov
fbstp
push
rcrl
sub
stos
mov
out
sbb
fsubr
fmuls
push
int
push
cltd
sub
mov
cmc
mov
xor
push
mull
imul
stos
pop
fsts
adc
imul
outsl
repz
loopne
loopne
cmp
loope
lret
jg
inc
movsl
mov
int3
and
and
pop
adc
mov
mov
pop
shrl
lret
std
xor
mov
xor
fwait
stos
ficoml
adc
sub
bound
pop
into
cld
and
xor
lock
subl
jmp
stos
and
add
enter
outsb
push
and
mov
icebp
push
add
mov
cmc
int
mov
mov
shlb
rorl
sbb
shr
xor
cli
sahf
fadd
lret
sti
mov
cmc
imul
loope
lahf
push
in
or
pop
addl
frstor
add
mov
or
push
cmpsl
jmp
cwtl
xlat
outsb
sbb
or
frstor
cwtl
es
xchg
leave
or
loopne
les
scas
mov
cmp
pop
in
xchg
pop
adc
cli
mov
jmp
into
aad
loop
loopne
mov
jmp
lds
mov
jb
loope
iret
dec
stos
inc
bound
cwtl
aaa
push
push
xchg
fwait
addr16
imul
mov
mov
popf
hlt
sti
sub
cltd
dec
mov
xor
into
data16
xchg
jae
or
dec
mov
mov
inc
pop
lret
mov
xchg
jae
mov
xchg
xor
out
das
lds
movsl
sbb
xor
xchg
sbb
mov
es
cmc
cli
gs
cmp
jae
inc
in
ljmp
lahf
cmp
orl
pop
addr16
mov
inc
jecxz
in
sub
xchg
pop
packssdw
mov
jne
mov
cmpsl
jp
mov
mov
in
mov
jmp
fidivs
lret
aaa
pop
xchg
shlb
mov
pushf
or
in
or
pop
push
mov
cmp
or
push
sahf
popf
out
lret
cmpsl
stos
dec
xor
call
xchg
push
stc
jno
iret
out
inc
push
mov
cmc
aaa
xor
popf
pushf
jle
jp
insb
jecxz
ljmp
es
in
pushf
push
orl
cmp
addr16
ja
int3
popf
dec
lahf
pop
push
outsb
addr16
jg
leave
scas
pop
mull
rclb
push
loope
shl
sbb
imul
stos
hlt
cmp
jg
inc
leave
je
in
rorl
push
gs
and
dec
jbe
pusha
xchg
lret
xor
movsb
shll
fdivs
cld
dec
cli
xchg
fildll
stos
je
or
pop
jbe
stos
cmp
out
xchg
ds
mov
cmpsb
sub
test
lds
imul
jmp
orb
repnz
stos
icebp
outsb
xor
cmp
jle
call
bt
cmp
stos
mov
push
mov
or
xor
mov
add
sbbb
xchg
mov
sbb
mov
jmp
or
bound
jnp,pn
and
movsb
aaa
adc
inc
jmp
test
in
jle
enter
sbb
xchg
pop
data16
scas
enter
mov
fs
push
jo
pop
scas
aas
out
ss
lock
lret
repnz
das
adc
jl
aad
out
dec
xlat
jno
imul
adc
inc
cmpsb
xlat
dec
sub
sbb
int3
sti
push
cmp
into
mov
dec
jmp
jle
insl
sub
mov
mov
leave
jo
mov
pop
jge
xlat
xor
lret
adc
adc
sub
loop
xor
jne
data16
out
ja
mov
call
outsb
add
and
pop
ficomps
jmp
jne
adc
enter
test
out
mov
or
dec
add
push
lock
mov
cmc
dec
adc
mov
jmp
or
pushl
scas
dec
outsb
jecxz
or
xchg
adc
or
add
movsl
call
mov
mov
mov
or
lea
pop
push
xlat
pop
or
or
repnz
push
out
inc
imul
push
inc
inc
sti
imul
sub
sub
xchg
xor
daa
cmp
and
pop
insl
push
aad
push
ljmp
in
sbb
sti
stos
repnz
push
adc
or
add
leave
pop
cmpsb
sub
jae
pushf
xchg
and
mov
cld
std
iret
iret
gs
mov
iret
sti
xorb
stc
int3
jle
sbb
scas
popf
mov
in
xorb
out
and
in
ja
adc
inc
cmc
cmpsl
mov
pushf
popa
mov
into
ljmp
lock
lcall
icebp
cmp
dec
stos
loope,pn
add
ljmp
push
mov
lock
les
mov
stos
icebp
movsl
mov
mov
out
or
push
mov
hlt
pop
push
rcll
in
roll
std
adc
adc
out
xchg
loope
loop
lods
in
mov
mov
mov
outsl
loop
mov
fwait
pop
test
popf
pop
sub
cmp
adc
icebp
sub
sub
insl
enter
mov
shlb
sub
jecxz
cmpsb
daa
sbb
xor
jg
cwtl
stos
adc
pop
stos
out
sub
mov
pop
in
test
push
push
icebp
pop
popf
mov
pop
adc
sub
xchg
and
cmp
push
mov
sub
pop
cwtl
sub
pop
cmc
fs
adc
or
lcall
jb
or
add
dec
pop
adc
addr16
sti
loop
cli
sbb
mov
pop
push
sbb
hlt
push
mov
lock
call
push
xor
repnz
sbbb
mov
cli
push
fistpll
and
push
mov
in
and
push
loop
loope
jb
pop
jg
fabs
jnp
cmp
and
aam
out
pusha
cli
out
xchg
mov
movsb
jecxz
xchg
rorb
jns
stos
fiaddl
imul
pop
cltd
jne
add
cmp
cmc
loope
push
pushf
pusha
add
xchg
leave
jle
dec
push
jne
test
xchg
enter
and
test
jne
cs
scas
mov
stos
push
loope
or
les
aas
iret
xorb
dec
xchg
fimull
push
into
scas
adc
mov
shrl
enter
mov
mov
sub
jle
pushl
lcall
push
mov
bnd
imul
popf
inc
cmp
daa
icebp
sub
cmpsl
jo
and
in
jmp
push
push
add
mov
test
pop
rorb
push
pop
sub
in
cmp
pushf
lahf
lret
in
sbb
push
push
mov
leave
imul
dec
xchg
pop
aam
mov
stos
fistps
test
or
push
jnp
or
repz
add
jne
ds
gs
push
sub
insl
inc
dec
mov
lods
sbb
mov
mov
sbb
stos
popa
sub
pop
outsb
jae
icebp
cmc
imul
mov
sub
pop
out
mov
inc
arpl
adc
jg
insb
and
mov
fsubr
mov
das
jecxz
add
jp
lret
adc
cltd
enter
push
push
pop
rcl
lret
pop
testb
pop
mov
sub
sbb
cmp
mov
push
scas
aas
movsl
pushw
aaa
pop
loopne
sti
xor
in
jns
scas
push
loope
xchg
enter
sarl
cmpsb
pop
mov
insl
in
inc
outsb
xor
aam
and
test
sbb
and
mov
push
add
stos
lahf
xchg
enter
lea
xchg
das
jo
int3
xchg
leave
push
mov
loope
push
or
sub
mov
into
loope
mov
fstpt
mov
stos
out
outsl
shrb
fnstenv
cmp
mov
mov
jno
bound
stos
ret
cmp
out
dec
xchg
or
mov
mov
or
ljmp
jecxz
pop
sub
cld
mov
sahf
push
mov
jo
add
mov
imul
imul
xchg
imul
test
add
shll
mov
adc
mov
iret
xchg
adc
mov
jo
ret
pop
sub
jle
add
add
push
pop
xchg
xor
iret
mov
and
scas
ljmp
mov
or
arpl
mov
cltd
jae
addr16
into
pop
xor
pop
iret
adc
sbb
popf
enter
mov
or
jg
add
inc
repnz
push
jno
sub
pop
lods
pop
mov
sbbb
pushf
mov
adc
movsb
mov
fstps
aaa
dec
pop
imul
push
repnz
xchg
subb
pop
cmp
or
lds
scas
lods
mov
ret
xchg
pop
rcl
arpl
sbb
icebp
jno
or
int3
dec
jge
out
lds
stc
pop
ret
pslld
outsb
leave
add
mov
ja
mov
out
mov
jmp
sub
aam
clc
int
add
inc
jmp
fst
jle
les
lret
jne
push
cltd
loope
mov
add
aas
out
scas
outsl
lds
scas
in
imul
or
shrl
push
xchg
xor
cmpsl
inc
repz
inc
adc
inc
jp
lcall
inc
std
test
adc
mov
movsl
mov
mov
cmpsl
popf
jae
shll
mov
sti
in
jmp
push
enter
jecxz
fildl
ret
ja
loope
mov
scas
jae
and
fmull
or
test
sti
push
test
jle
rcl
mov
rclb
in
int3
cld
fimull
sbb
test
jns
popf
push
aas
ret
sub
and
add
testl
sbb
ljmp
or
jnp
or
xor
clc
jl
mov
adc
mov
dec
aaa
push
jge
xchg
inc
dec
xchg
std
decl
test
mov
lods
sub
cmc
call
jb
popl
mov
daa
ja
lock
push
xor
and
lea
jg
push
add
inc
xchg
sub
add
inc
rcr
call
pop
mov
mov
pop
or
fwait
cltd
int3
jle
xchg
test
stc
jecxz
sbb
sbb
movsl
ret
sub
negl
xchg
cli
jno
aaa
xchg
inc
ret
cli
test
loope
dec
rcrb
mov
and
push
pop
ficomps
or
mov
fucompp
mov
jb
dec
pop
xlat
inc
inc
jmp
out
dec
jmp
movsl
cmp
outsb
mov
bnd
shrb
fnstenv
out
jg
push
jmp
in
shll
mov
loope
ja
mul
arpl
adc
test
mov
push
lock
push
aas
lret
leave
outsl
mov
clc
adc
shrl
punpckldq
shll
push
call
mov
fistl
push
fldenv
and
les
shlb
jo
mov
test
jecxz
cmc
fcmovu
out
add
mov
ret
jae
jnp
stos
in
out
hlt
out
ljmp
leave
jp
fists
pusha
pop
adc
xor
inc
cli
loopne
repnz
cmp
jl
imul
neg
add
dec
mov
lods
stos
mov
ja
push
stc
jp
fcmovbe
mov
out
mov
sbb
adc
jmp
jmp
out
mov
sbb
or
clc
pop
sub
movsl
xchg
jmp
jle
addl
and
xchg
addr16
lock
and
fstps
jmp
movsb
mov
into
imul
fs
add
in
lcallw
xchg
insb
xchg
lods
sbb
test
pop
jle
or
push
pop
push
popa
mov
and
out
imul
jle
test
jg
xorb
cli
or
mov
jge
pop
cmp
stos
popf
or
out
mov
imul
inc
add
fstpl
pop
add
adc
movsb
jne
xchg
or
pop
jne
setge
adc
xor
or
je
or
int3
loope
sbb
hlt
push
js
cld
shll
les
mulb
cmc
pop
push
sti
pop
push
pop
lcall
loopne
add
sub
jno
leave
and
jb
data16
pop
jne
inc
sub
cld
mov
inc
sarl
lret
mov
fstps
dec
jecxz
test
stos
incb
arpl
push
mov
js
ret
and
stos
ret
jmp
mull
out
aas
test
jnp
cltd
out
push
jg
mov
cli
sbb
aad
lahf
lret
jecxz
push
or
out
push
rcrl
pop
movsl
sbb
jmp
mov
mov
stos
out
scas
leave
hlt
aam
fcmovnb
out
pushf
adc
xchg
test
into
mov
xor
jg
testl
pop
cmp
ljmp
imul
inc
mov
iret
jnp
popf
xor
cmp
pop
inc
pop
fidivrl
and
outsl
aas
mov
dec
les
inc
insl
scas
xor
push
rcrb
call
mov
into
je
ss
mov
mov
ret
push
pop
add
jbe
mov
insb
test
pop
push
aas
sub
add
aam
mov
xchg
adc
loop
mov
dec
sbb
aas
loop
in
or
xchg
cmc
jecxz
movsl
shl
iret
or
inc
push
adc
push
add
out
popa
xor
add
imul
xor
jecxz
and
mov
cwtl
outsb
std
jge
fwait
lcall
and
add
fcomi
and
ljmp
inc
jge
pop
dec
mov
loope
shufps
inc
xor
mov
fsubrp
icebp
popf
or
inc
or
sahf
jne
rorl
into
out
sahf
in
call
mov
pop
mov
fnstsw
add
shl
mov
dec
inc
movsl
stos
shrb
mov
decl
and
ja
data16
jle
mov
xchg
sub
icebp
insl
sbbb
out
cmp
call
jb
lahf
ja
xchg
ljmp
push
in
dec
and
lahf
pushf
dec
inc
cli
iret
cmpl
dec
cmp
xor
ja
pop
adc
or
shrb
pop
cmc
icebp
pushf
inc
xor
leave
call
sbb
ret
sahf
adc
es
into
daa
sbb
jg
jmp
jo
std
cmp
and
jmp
add
imul
filds
jo
mov
aad
lret
pushf
xlat
ja
xor
add
xlat
in
imul
mov
cli
lret
rolb
and
jge
jle
fcoms
mov
test
or
out
or
xchg
test
test
mov
jg
je
popa
test
pop
cmc
frstor
pushf
cmp
lret
stos
scas
mov
xor
je
cmp
and
fsubr
out
jecxz
or
shll
mov
cmp
and
cmpsb
fstpl
dec
sub
rorl
mov
cs
popf
in
scas
cmpsl
rclb
add
mov
sub
mov
cmpsb
cmpsl
add
icebp
je
insb
popa
xchg
add
or
xor
out
sbb
test
mov
rcrl
mov
scas
or
ss
push
into
jne
xor
enter
xchg
xchg
aaa
movsl
or
push
mov
ffreep
mov
add
popa
ja
fistpll
test
pop
jle
mov
imul
pop
or
in
loopne
lahf
push
pop
lea
lret
cmpsl
test
add
cltd
adc
das
loope
mov
mov
or
inc
rol
or
xchg
push
lcall
jl
inc
daa
mov
xchg
clc
cmp
repz
mov
cmp
push
pop
pop
push
out
int3
sub
cmc
mov
iret
out
das
jae
dec
popa
pusha
inc
push
outsl
and
fs
out
mov
test
shrl
inc
pusha
bound
adc
push
jo
lods
push
xchg
call
hlt
pop
xor
push
in
cli
into
mov
mov
stos
xchg
movsl
fsubrl
in
popf
fmull
nop
addr16
inc
add
popf
lret
jle
fistpll
ret
pushf
lcall
in
test
fistpl
inc
inc
xchg
add
jle
fisttps
push
cmc
sbb
dec
aaa
xchg
sub
ljmp
dec
adc
aas
xchg
mov
out
loopne
shll
mov
stos
fmulp
imul
imul
xchg
out
pushf
iret
sub
ss
loopne
jne
xchg
mov
mov
xor
std
aaa
aad
jecxz
bound
rcrl
subl
mov
out
push
in
add
aaa
pushf
inc
cmp
rcrl
xchg
mov
repnz
ljmp
hlt
daa
sub
inc
and
rorl
subl
pop
adc
in
bnd
cmc
push
movsl
data16
inc
icebp
push
icebp
mov
and
fldenv
loope
push
aas
mov
daa
loop
or
cltd
mov
sti
icebp
movsb
ds
mov
push
test
cltd
testb
pop
mov
sti
dec
sbb
mov
das
mov
xor
and
mov
add
mov
mov
sub
leave
out
pop
les
sbb
addr16
pushf
or
mov
mov
pop
pop
out
jge
icebp
xor
mov
pusha
xor
inc
or
std
jmp
xlat
rcl
rcrl
add
in
sbb
adcl
cmp
jg
rorb
std
outsl
sahf
out
fdivs
sub
ja
loope
xor
bnd
jmp
jecxz
repz
decl
sbb
fisttpl
mov
add
mov
adc
popf
mov
mov
lahf
mov
xchg
lcall
int
and
mov
jecxz
sbb
out
cmpb
mov
mov
in
mov
cmc
adc
outsb
xchg
sbb
jmp
jmp
movsb
sbb
ja
iret
arpl
sti
pushl
xchg
test
aam
lea
add
xchg
jl
jg
xor
aas
jle
push
and
mov
lret
ljmp
jp
in
or
stos
dec
popf
sub
sbb
loopne
pop
rorb
and
in
fs
cmc
rorl
iret
out
add
push
loop
pop
bound
or
iret
enter
outsl
push
clc
mov
jg
insb
das
int
not
pushf
mov
xchg
js
jg
jae
jle
dec
push
loope
daa
inc
push
push
inc
popw
adc
enter
loopne
cwtl
dec
into
inc
testb
test
insl
das
aas
addr16
mov
mov
or
pop
hlt
fldenv
jnp
mov
sti
jl
jg
hlt
imul
imul
lcall
das
stc
out
cmpsl
loop
jmp
hlt
xor
jl
jg
je
test
ror
cmc
gs
mov
shr
repnz
in
sbb
mov
ret
and
insb
xor
jp
imul
cmc
dec
enter
lods
dec
mulb
es
pusha
cmp
ljmp
sar
xor
sbb
mov
addr16
lods
out
out
xor
dec
sarb
xchg
or
mov
test
rol
fucomp
out
into
sub
outsb
out
and
inc
int
ljmp
inc
mov
repnz
inc
push
mov
lret
daa
jecxz
outsb
jno
stos
out
mov
lret
pop
into
aaa
sbb
loop
push
in
sti
scas
shr
lock
or
sub
mov
nop
lods
data16
ljmp
dec
out
lock
push
stos
mov
in
imul
data16
mov
std
pop
sbb
mov
sbb
mov
loope
mov
xlat
in
rcrl
mov
aaa
stos
xchg
xchg
iret
inc
addr16
dec
shl
sti
arpl
fistps
pop
pop
pop
mov
ror
fcmovne
xchg
dec
ds
out
aaa
cmpsb
adc
mov
aas
inc
cmc
popf
loopne
inc
lea
cli
mov
enter
sarb
sub
int3
pop
cmp
hlt
sub
shrb
sahf
in
mov
pop
mov
push
loop
loope
insb
push
ror
loopne
xchg
cmp
jecxz
push
xlat
xor
and
mov
push
xor
test
cmc
fst
add
movsl
jmp
fidivrl
xlat
les
out
in
sub
mov
clc
jecxz
iret
notb
sti
push
pop
movsb
jb
xlat
or
idivl
loopne
roll
xchg
test
mov
out
or
add
cmpl
in
repnz
shl
lret
repnz
mov
or
jno
lods
scas
xchg
mov
sbb
ret
cmpb
call
xor
pushf
mov
xor
jne
mov
call
pop
arpl
inc
iret
jg
jae
cmc
mov
jbe
adc
adc
sub
or
loopne
sti
aam
fldt
les
leave
in
std
cld
test
imul
call
repz
push
adc
inc
aam
or
and
xchg
or
mov
out
pop
cmpsb
ret
imul
out
or
in
mov
mov
je
mov
sub
push
insl
pop
adc
jmp
lea
sbb
mov
mov
mov
in
ret
or
push
sbb
fistpl
popa
xlat
cmp
repz
scas
xor
jmp
data16
and
jge
sub
push
mov
jmp
sbb
mov
addb
xor
adc
cmp
mov
mov
ljmp
lcall
test
or
cld
adc
loopne
add
mov
xchg
into
xor
pushl
hlt
loop
or
cmp
std
xor
fs
mov
movsb
pop
cld
movsb
clc
pop
in
call
mov
ret
outsl
test
pushf
sub
mov
push
dec
frstor
out
dec
arpl
call
mov
mov
out
sar
es
daa
ror
fsubp
or
hlt
mov
clc
shll
mov
iret
pushf
mov
repnz
rorb
mov
fiaddl
or
sub
add
mov
test
popf
fcmovbe
push
out
loope
lret
adc
push
mov
mov
aaa
aas
into
lret
test
fnsave
mov
out
arpl
lcall
test
stos
xchg
dec
or
jecxz
in
mov
insb
or
dec
fdivs
jno
mov
out
add
out
nop
int3
xor
ljmp
cmc
test
sahf
jns
mov
cli
xor
js
mov
lock
sbb
fldt
mov
mov
outsb
outsb
and
sahf
in
repnz
jl
xchg
inc
cmpl
jmp
push
xchg
push
into
loop
fmuls
pop
shrb
scas
insb
xor
outsb
push
adc
imul
fsubp
notl
icebp
fstps
pop
dec
pop
mov
popw
out
decl
aam
lret
jne
or
jo
in
xchg
cmpsl
int
in
repnz
jns
data16
jg
mov
lea
out
push
xchg
sbb
xor
jg
pop
out
jb
mov
mov
lret
mov
jnp
pop
xchg
mov
imulb
cwtl
fsubrp
sub
in
jle
mov
mov
and
ja
sub
push
ljmp
pop
jg
mov
add
lods
sub
pop
std
fwait
scas
jmp
jle
ljmp
es
imul
mov
stos
sub
cbtw
jnp
push
mov
pop
xor
mov
xchg
dec
test
jle
jne
movsb
dec
dec
cli
cmp
add
pushf
outsl
push
shll
mov
sbb
shr
into
in
cltd
push
inc
fsub
adc
xlat
mov
addr16
leave
dec
pop
jle
mov
std
into
fsubl
push
fisttps
mov
or
sub
mov
or
xchg
out
or
xchg
xchg
dec
sahf
fdivr
lds
xchg
push
push
std
mov
mov
xchg
leave
or
and
shll
test
out
cli
jmp
dec
int3
xchg
mov
jbe
push
sub
out
adc
pop
xor
aam
test
clc
ja
pop
sbb
mov
mov
or
out
and
pop
xchg
or
jne
and
mull
imul
decb
cld
stos
arpl
jbe
jge
jecxz
shll
int3
ret
mov
and
push
out
repnz
and
idivl
xor
ljmp
movb
out
mov
push
test
mov
pushf
loop
push
pusha
xchg
cmp
jb
pop
mov
mov
jne
std
and
and
mov
lods
roll
sub
out
out
fcmovne
or
stos
pop
inc
popf
add
pop
roll
xchg
lock
or
cmc
cmp
inc
mov
jecxz
xchg
inc
std
dec
loope
shll
lods
cli
cmpsl
fistpl
sbb
out
add
pop
dec
mov
jo
sub
mov
les
push
xchg
cmpsb
mov
fsubrp
jl
lods
xor
popf
sbb
push
outsl
pop
jge
adc
out
or
and
push
mov
sub
popf
int3
data16
xchg
arpl
jecxz
inc
jns
mov
pop
sti
stos
clc
xchg
jne
add
mov
lcall
sub
and
pushf
enter
fwait
jbe
adc
jge
sub
fstpt
dec
push
cmp
sub
fisttps
push
jmp
mov
fscale
cmp
inc
pop
sbb
in
mov
pop
fdivrs
fadds
leave
jecxz
sbb
dec
rcll
lods
mov
ret
or
test
cwtl
inc
flds
ss
gs
cld
shlb
mov
sbb
repz
fucomp
sbb
jmp
lret
sub
inc
ret
test
xor
cmp
mov
sbb
mov
jg
aaa
sub
jge
ljmp
mov
pushaw
sbb
in
cs
sub
adc
or
dec
negl
cmp
lret
stc
cbtw
fisubs
cmpsl
inc
and
push
sbb
ljmp
stc
fimuls
cli
push
mov
push
mov
sbb
outsl
int
xor
jno
add
or
jns
arpl
daa
push
arpl
cmp
fstps
adc
mov
jns
andl
dec
mov
dec
lods
ljmp
mov
inc
push
test
cmpsb
pop
inc
jbe,pt
pxor
mov
das
adc
push
ljmp
pop
push
pushf
stos
add
lods
scas
rorb
outsb
in
imul
fists
dec
inc
ficomps
xor
les
push
lret
das
pop
ljmp
fildl
aas
push
xor
test
add
stos
inc
out
movsl
jnp
popf
sub
pop
shll
mov
ljmp
mov
loope
pop
adc
out
rcr
pmuludq
movsl
jp
and
rcl
ljmp
inc
inc
mov
fisubrl
loopne
mov
bound
mov
jp
cmpsb
sbb
and
lea
test
mov
imul
out
nop
and
testl
and
out
ljmp
jecxz
cwtl
dec
push
jb
mov
mov
mov
ljmp
sti
or
pop
jb
rorl
fst
sbb
pop
adc
jmp
jecxz
push
mov
nop
inc
idivl
jae
mov
cld
into
fwait
out
pop
fdivrl
adc
push
das
or
xchg
cmp
clc
outsl
and
bound
arpl
mov
shlb
lock
mov
xchg
cmp
and
mov
decb
sarl
dec
ljmp
stc
mov
mov
je
sub
jo
iret
sub
jg
shrb
lcall
cmpsl
cwtl
rcl
xor
adc
aad
push
int
pushf
imul
out
mov
and
push
in
insb
add
into
ja
push
insl
jle
adcl
sub
dec
push
lahf
in
add
into
mov
push
xchg
ja
dec
push
hlt
data16
pusha
cmc
jg
or
in
iret
hlt
push
je
or
push
xchg
push
jo,pn
xchg
adc
adc
int
sti
and
call
mov
push
jl
jno
out
in
pop
rolb
xchg
insl
in
mov
sub
sub
shl
cld
cli
cmpsl
jb
xchg
sti
fsubr
mov
adc
lcall
cltd
lods
movsl
cmp
mov
out
jmp
pop
addr16
shlb
daa
dec
mov
and
ret
cmp
sub
mov
js
test
loopnew
xor
hlt
stos
enter
push
sub
and
hlt
cmp
pop
push
popf
ss
dec
lods
jg
push
mov
xchg
dec
jne
movsb
sub
out
xchg
fisttpl
cmp
mov
xchg
sbb
movsl
fistl
mov
jae
mov
sbb
stos
fndisi(8087
outsb
and
mov
dec
push
out
ljmp
dec
push
inc
iret
push
popf
pop
outsl
push
imul
pavgw
xor
rorl
cmp
fcmovnbe
xchg
loop
jb
jbe
scas
jb
movsb
clc
test
mov
loope
dec
jmp
cld
cmc
arpl
insb
pop
test
jecxz
mov
aaa
and
stos
daa
xchg
movb
stos
scas
stos
int3
jmp
cld
test
push
fisubl
mov
lret
add
xchg
mov
leave
mov
or
sub
and
sub
mov
mov
call
jge
or
call
int3
pop
int3
movsl
cli
and
jmp
mov
sti
lea
mov
adc
jmp
xor
mov
popf
mov
cmc
fwait
leave
lret
mov
roll
push
xor
sub
popa
pop
cli
mov
lock
xlat
xchg
dec
add
shr
stos
xchg
jo
stos
jmp
movsl
in
jb
sti
add
mov
sbb
add
and
jg
jmp
inc
hlt
in
sti
push
cwtl
push
rcrl
and
and
gs
loope
popf
jns
xchg
push
pop
add
jl
test
lahf
push
lsl
pushl
ret
mov
shlb
stos
std
pop
sub
stos
imul
jle
stos
sub
dec
mov
aaa
in
push
cld
outsb
push
mov
add
cmp
out
fldenv
in
or
out
enter
cmc
push
mov
in
mov
loop
int
jb
js
mov
repnz
mov
loope
stc
sub
stos
pop
ret
inc
jle
stc
jbe
ja
scas
mov
daa
icebp
xchg
pop
enter
pop
stc
fwait
cmp
and
mov
movsl
int3
stc
notl
out
mov
add
mov
xor
mov
mov
mov
stos
data16
loopne
pop
daa
lock
adc
push
iret
or
call
test
loope
movsb
shl
in
out
adc
or
mov
leave
pop
insb
dec
mov
jno
xor
in
lods
mov
pcmpeqd
mov
pop
or
push
inc
aam
lret
inc
test
xor
pusha
inc
std
aaa
mov
or
hlt
xor
mov
scas
xchg
xor
cmp
mov
lret
or
inc
and
ret
jno
cmc
je
xchg
in
ret
sbb
repz
je
push
leave
or
std
loope
scas
or
scas
push
loopne
cmc
out
jbe
cld
mov
mov
fbld
jmp
iret
mov
mov
mov
jo
pushf
mov
test
imul
aam
scas
and
into
insl
lret
movsl
cmpsl
stc
sub
xchg
subb
fcmovbe
inc
in
xlat
inc
jns
cld
ficoml
pop
cmpsb
mov
jl
loopne
les
pop
out
sti
jge
aas
push
arpl
icebp
cld
jg
and
out
call
scas
fs
mov
sbb
mov
add
hlt
lock
loopne
sarl
inc
pop
into
jae
or
adc
sbb
mov
jp
test
mov
jne
jg
xor
mov
loopne
fstpl
push
add
gs
fcomps
lret
mov
mov
shll
push
les
jmp
push
xchg
into
jg
jns
mov
dec
data16
push
ljmp
push
pop
sti
dec
subb
xchg
and
pop
test
push
fists
lret
iret
int3
shl
pop
iret
inc
mov
pop
mov
loope
sbb
jne
sub
sub
into
mov
push
pusha
pop
push
add
and
ljmp
mov
sahf
dec
hlt
sub
lods
xor
pop
cmp
jne
jg
dec
clc
ja
push
inc
lods
gs
arpl
push
adcl
sbb
mov
xor
pop
in
aaa
outsb
push
out
pushf
or
mov
lret
aad
add
inc
inc
rcl
lods
fwait
adc
add
pop
addb
loope
sub
mov
push
mov
push
stc
imul
loopne
in
push
sbb
mov
lds
or
fstps
cmpsb
and
cmp
push
aaa
out
inc
es
iret
out
in
insl
jle
outsl
rcr
pop
in
cwtl
sbb
pop
ss
mov
lock
pop
aas
scas
sub
or
outsl
push
mov
daa
mov
sub
outsb
data16
test
add
cld
sub
mov
lea
mov
xchg
jmp
shrl
and
lret
into
cwtl
inc
sar
jge
lcall
mov
in
mov
xchg
pop
iret
outsl
into
or
jle
inc
out
pop
or
sbb
lock
fisttpl
fstps
cmc
js
cmp
lret
mov
stos
xchg
js
sub
fcom
jns
aam
popa
adcb
push
lock
enter
cmc
test
movb
add
ds
sub
or
fildll
sbb
dec
xchg
mov
adc
je
xor
sbb
inc
shrb
mov
jg
xor
push
in
mov
js
mov
ljmp
rolb
stc
push
fbstp
pop
pop
shll
and
jae
in
xchg
jbe
inc
cld
pop
mov
sub
loop
jbe
xlat
stos
sub
adc
in
loop
add
test
mov
jnp
in
mov
inc
cmc
ja
loope
call
xor
sub
cwtl
and
lea
call
dec
int3
call
jp
inc
leave
jp
xchg
lea
jmp
hlt
ja
push
hlt
xlat
or
cltd
sti
clc
rcr
loopne
jmp
fcoml
jne
iret
jo
cs
repnz
jp
mov
mov
push
pop
mov
lea
jecxz
movsl
cmpsl
inc
mov
imul
and
add
out
popf
jle
hlt
stc
push
adc
lret
js
loopne
xchg
lods
pop
jmp
sarl
jle
cmp
lret
loopne
push
icebp
fwait
adc
push
push
jbe
jp
pop
mov
in
loopne
and
adc
lods
xchg
testl
stc
movsl
stc
fwait
pop
outsl
mov
mov
loopne
out
inc
mov
lahf
adc
jmp
cli
or
mov
jmp
mov
inc
mov
or
daa
lahf
xchg
imul
in
sub
xlat
fidivrl
stos
pusha
outsb
jnp
mov
mov
jb
movsb
lret
mov
pushf
sti
outsb
jns
inc
lret
mov
test
outsb
jbe
ja
scas
test
fwait
mov
out
sti
or
mov
jne
popf
xor
das
jo
mov
sti
cmp
xor
and
cmp
in
aam
or
mov
sub
clc
hlt
xchg
cmp
psubusb
sub
jo
jecxz
mov
nop
xchg
pop
pop
sahf
add
inc
cmp
mov
hlt
cmc
sub
mov
push
addl
push
sbb
jne
loop
push
push
in
sbb
sub
jle
mov
push
dec
mov
or
fwait
dec
dec
pop
mov
iret
xor
or
arpl
cli
xchg
fstl
push
mov
and
push
inc
fildll
jno
out
xchg
sbb
popf
inc
dec
imul
nop
jno
scas
stc
push
add
pop
mov
jno
sbb
fs
scas
add
xor
in
adc
xor
andb
jae
cmp
xchg
repnz
ret
hlt
pop
pop
call
jns
xor
jne
and
mov
sarb
jecxz
ss
xchg
xlat
and
out
sbb
jo
je
jmp
mov
in
bnd
mov
sahf
or
sub
das
pusha
lcall
stos
pop
movsl
inc
mov
cs
out
push
outsb
and
rcll
movsb
ror
adc
into
fcmove
mov
cmp
int3
popf
rcr
out
mov
pop
and
mov
inc
hlt
push
test
into
and
ror
lcall
ljmp
mov
sti
jg
mov
rolb
jle
mov
popf
jne
mov
imul
dec
add
iret
and
xchg
jmp
cld
sahf
insb
jg
mov
inc
cmp
enter
xchg
mov
cmp
into
dec
hlt
iret
shll
cmc
std
sbb
movsl
jle
clc
fs
push
inc
add
cmpsl
repnz
test
jmp
adc
or
push
jmp
and
mov
shll
jb
lret
jbe
xchg
jg
in
ljmp
pop
out
lods
mov
sbb
cld
xchg
movsb
scas
ret
leave
and
enter
jb
std
mov
out
xchg
pop
ficomps
movsb
lret
or
sti
cmp
jle
xor
pop
enter
sub
dec
and
decl
and
jne
test
and
xchg
mov
mov
mov
inc
repnz
fucomip
jge
xchg
loop
add
dec
stos
sbb
push
imulb
pop
ja
xor
enter
jg
cmc
mov
out
je
incb
inc
jns
loopne
aam
test
xor
xor
out
cmpsb
jecxz
push
ret
jae
jg
mov
xchg
mov
dec
popf
ja
inc
cmpsl
fidivl
jg
mov
lods
jbe
scas
dec
and
mov
in
in
negl
pop
dec
sbb
lock
or
jl
jle
sub
loope
inc
lret
fdiv
dec
mov
pushf
add
mov
xor
or
sub
cs
outsl
cmp
xor
lods
add
sbb
hlt
iret
fildl
add
int3
push
add
jecxz
or
or
push
jo
in
sub
out
pop
mov
or
dec
mov
push
sbb
aad
add
repnz
outsl
dec
inc
ljmp
sbb
shl
pop
out
jb
ja
sahf
jl
sub
sbb
push
lret
add
jmp
cli
xor
fadds
stos
mov
out
je
rcll
in
mov
std
add
add
or
ss
pop
inc
jecxz
out
xchg
ljmp
lock
call
mov
nop
jo
add
cmpsl
ljmp
iret
mov
daa
ja
stos
mov
pop
xchg
in
das
lret
daa
dec
ljmp
pop
into
mov
pop
pop
outsl
or
loopne
jo
ficoml
push
cli
ljmp
ret
or
sub
mov
in
nopl
lret
bound
pop
test
idivb
mov
outsl
lds
enter
inc
into
mov
data16
ret
xor
push
push
std
fdivs
or
test
push
inc
test
iret
xlat
and
test
ljmp
mov
insl
sub
mov
hlt
test
jae
je
pop
daa
jbe
pop
mov
in
stos
jnp
into
or
in
sub
jle
mov
movsl
add
add
lret
ljmp
stos
fcompl
adc
mov
or
lcall
sub
xor
mov
shr
push
jne
js
jle
xor
push
shl
pop
dec
cmp
mov
adc
into
mov
push
arpl
loop
push
add
ljmp
push
repnz
fwait
dec
fcoml
mov
inc
dec
outsl
add
pop
cld
inc
call
sbb
inc
test
addr16
mov
sub
fcoml
ds
dec
mov
adc
enter
push
lcall
popf
xchg
mov
es
ss
je
inc
arpl
sti
jbe
movb
lock
in
or
and
cmp
je
mov
pusha
jle
inc
mov
iret
daa
in
jae
out
mov
xor
rol
scas
notl
mov
xor
and
mov
pop
mov
xchg
mov
dec
in
mov
cli
mov
jne
ds
out
xor
pushf
mov
sahf
push
or
ret
data16
out
lock
xlat
add
push
mov
pusha
in
xor
test
pop
push
sub
pop
mov
mov
sarl
stc
cltd
movsb
mov
cmpsb
loope
ror
or
cmp
and
jne
data16
mov
lret
hlt
je
dec
imul
fsubr
dec
mov
cmpl
addr16
sub
movsb
addr16
pop
mov
mov
addr16
imul
mov
pop
dec
and
out
mov
cmc
int3
sti
test
push
lcall
xchg
daa
dec
xor
cwtl
jb
push
stos
mov
mov
dec
js
adc
jle
subl
stc
push
pop
add
mov
cs
xor
pop
fsubl
ficoml
mov
or
lcall
scas
xor
xor
insb
jbe
shrb
decb
icebp
sbb
in
psrad
sub
loope
dec
sub
in
mov
test
cmpb
scas
iret
mov
bound
jmp
fistps
imul
std
mov
jg
enter
in
dec
and
arpl
add
dec
in
fsub
jle
or
cmp
xchg
mov
fldenv
sbb
inc
adc
fsubs
imul
hlt
mov
add
push
dec
pop
call
in
leave
sub
mov
movsl
scas
inc
mov
sub
xor
pop
bound
mov
int
xor
push
jno
fstps
arpl
pop
mov
add
sbb
cmc
pop
jecxz
pop
in
adc
pop
icebp
jg
sbb
dec
imul
and
and
adc
out
pusha
imul
loop
xlat
push
xor
ds
mov
lock
push
mov
cmp
pop
jmp
jp
lahf
out
xchg
or
lods
fwait
cmp
bound
mov
jbe
sub
jb
in
fwait
mov
or
sbb
adc
sti
pop
xor
lods
xchg
js
pop
push
jl
jo
mov
test
sahf
cmp
xor
inc
aad
and
and
xchg
push
addl
pop
dec
in
das
xchg
lcall
jle
sub
mov
stos
dec
lds
sub
jg
mov
dec
dec
mov
xor
hlt
inc
stos
add
and
sbb
hlt
push
fsubrl
add
pop
mov
push
das
data16
jns
sbb
push
out
mov
enter
sti
das
out
push
shll
jns
mov
fdivrl
cmp
jbe
ja
dec
rcrb
lods
add
imul
mov
sti
cmpsl
scas
xchg
mov
hlt
shll
in
cmp
xchg
ljmp
mov
clc
mov
mov
xchg
push
dec
xlat
lcall
lock
out
add
seta
aad
mov
and
clc
jns
gs
out
sbbb
inc
push
movsb
icebp
movsl
out
mov
rcrb
dec
jo
popf
mov
jbe
aaa
cwtl
jne
pusha
jecxz
test
mov
aad
xor
loop
xchg
test
sahf
xor
aaa
rcrb
dec
sub
adc
xchg
push
adc
add
test
lea
into
xchg
aas
mov
adc
lcall
pop
cli
addr16
sbb
out
ja
lahf
pop
lcall
pop
dec
push
shrb
lods
scas
sahf
push
push
mov
inc
fisttpll
lret
jbe
fwait
mov
daa
cmc
pop
lret
push
popa
sub
icebp
mov
mov
sub
movsl
jns
pop
adc
or
subl
dec
sub
cmp
idiv
mov
mov
mov
sub
daa
cmp
cs
or
sti
jno
sub
mov
jp
mov
jb
out
or
jb
jne
cmpsb
clc
sbb
mov
rolb
lret
jmp
test
scas
xchg
sbb
sub
rol
sar
loopne
cmpsb
out
jne
push
imull
adc
mov
push
fldcw
push
sbb
bound
or
lods
mov
movsb
dec
jmp
call
test
xchg
push
les
scas
pop
out
idivl
jno
stos
jns
sub
stc
push
je
xchg
mov
shlb
sbb
xchg
add
adc
leave
bound
movsb
inc
jmp
mov
add
sbb
sti
mov
mov
cs
xchg
mov
ret
pusha
or
repnz
orl
out
test
adc
clc
or
loope
xor
pop
mov
shlb
pusha
rorb
push
adc
inc
mov
cmp
mov
jmp
dec
int
ljmp
mov
xchg
mov
pop
jecxz
jmp
mov
pop
inc
mov
lahf
push
mov
shrb
cmp
iret
and
aas
sti
out
sar
or
or
mov
outsl
bsf
ucomiss
pop
xchg
mov
pop
jge
movsl
popf
stc
es
xchg
iret
cmc
pop
jg
stos
push
sbb
jl
or
or
jge
push
mov
loop
jno
add
lret
xchg
test
lret
cwtl
or
imul
jecxz
mov
pop
sbb
or
jl
jae
cmp
xchg
shll
mov
add
lahf
cmp
pushf
xor
out
dec
test
vmread
cs
mov
fwait
hlt
adc
adc
pushl
mov
jb
scas
lret
jne
push
loope
filds
scas
mov
cltd
jae
mov
test
xchg
jo
or
xchg
sbb
sti
cltd
in
ret
fadd
cmp
movq
mov
jns
push
mov
lahf
push
push
outsb
pop
ret
cld
inc
in
pusha
lods
rcr
or
scas
fistps
sar
out
addr16
faddl
insl
push
out
add
mov
add
xchg
movsl
mov
out
push
shr
pop
mov
dec
adcl
lret
imul
popa
lcall
adc
lods
and
test
jmp
negb
pop
dec
inc
popf
jmp
jne
jmp
fisttps
or
test
or
dec
pushf
mov
mov
daa
lgs
xchg
in
into
jbe
arpl
cld
call
dec
xor
and
jb
in
adc
out
xor
fidivrl
push
push
insb
jae
xchg
fcmove
insw
in
push
add
sub
mov
int
jns
cmp
or
push
rcl
jnp
into
cmp
std
icebp
fwait
lret
jnp
insl
daa
ret
ret
dec
sti
icebp
les
movsb
clc
int3
lods
clc
fstpt
pop
pop
pusha
cmp
sbb
xchg
cmp
ret
sbb
sahf
and
stos
shlb
xor
xor
lahf
imul
pushl
jge
cwtl
cli
mov
lds
adc
nop
bound
outsb
or
pop
sbb
dec
push
lahf
shll
lret
into
xor
mov
shl
fisubs
or
adc
popf
loope
inc
ror
test
fmuls
adc
mov
aas
mov
in
call
ret
push
fsubs
or
lcall
pushf
mov
mov
call
fcomip
addl
mov
xchg
mov
add
ss
sbb
pusha
add
xchg
mov
cmc
pushf
jecxz
cmp
jo
sub
ja
lods
mov
mov
jns
and
xor
stos
xchg
dec
inc
jle
pop
pop
pop
pop
loopne
stos
pop
out
mov
jo
ljmp
mov
dec
adc
ret
adc
int
adc
popf
mov
sti
sbb
push
clc
in
aam
dec
adc
inc
push
test
or
call
ret
cmp
push
jae
or
mov
cli
push
sarl
and
inc
clc
mov
sub
gs
or
pop
in
pop
imul
xchg
adc
mov
outsb
mov
add
push
mov
mov
loop
mov
or
add
stos
pop
xchg
pop
addr16
lcall
into
push
bound
shl
mov
cmp
outsl
mov
dec
mov
test
imul
bnd
adc
je
in
xchg
hlt
mov
fnsave
mov
stos
sbb
insl
mov
insb
xchg
mov
sbb
fbstp
mov
shlb
jl
fnstsw
roll
and
push
fldt
scas
push
out
mov
jb
jo
mov
push
insl
sbb
mov
bound
in
shr
mov
pop
movb
sub
imulb
test
imul
rcrb
pop
daa
gs
jecxz
inc
fcoml
xchg
jmp
incb
ss
jmp
push
loopne
call
js
xor
rorb
out
add
push
std
cmpsb
loopne
cmp
in
aaa
fs
popf
aad
in
std
mov
pop
neg
sub
roll
adc
das
xor
mov
add
shll
loop
fbld
in
scas
dec
les
aad
lds
js
insw
pop
shrb
mov
push
dec
pop
cmc
mov
jge
mov
push
or
add
xchg
dec
pop
cwtl
divb
out
xchg
lea
xchg
jmp
jmp
pop
or
nop
bound
fldcw
loope
xor
cmp
adc
fcoms
push
loopne
dec
sbb
enter
mov
pop
int3
cltd
inc
loope
push
xor
pop
loop
out
jmp
and
mov
sub
jne
pop
jae
mov
sub
cmc
iretw
out
mov
or
mov
sub
mov
or
inc
enter
std
sub
add
ss
xor
loopne
fwait
xchg
inc
mov
daa
or
in
and
lods
xor
jg
loopne
shufps
jnp
push
out
add
adc
enter
jmp
out
sbb
mov
dec
and
mov
pop
lods
out
sub
mov
inc
xor
cmpsb
das
sbb
rorl
xor
sbb
fstpt
sbb
pop
or
pop
in
hlt
in
movsl
sub
lea
push
bound
test
std
clc
and
adc
dec
xchg
sbb
mov
in
or
icebp
test
enter
loop
outsb
pop
fidivl
hlt
aas
data16
and
jl
jmp
mov
mov
pop
cmpsl
test
pop
sbb
or
shll
sti
jmp
movzbl
add
push
xor
sbbb
xchg
popa
popa
das
int
cmpsl
loope
leave
mov
jno
cmp
sti
popa
inc
pop
dec
ljmp
mov
add
add
or
pop
lret
lret
mov
mov
xchg
or
in
mov
adc
test
lret
pusha
xor
jno
arpl
bound
jne
into
out
test
sbb
jne
push
mov
adc
aaa
out
lret
mov
mov
loope
or
mov
jne
es
rorb
in
xchg
xor
lods
cmpl
mov
repnz
lret
jg
mov
jne
shrb
data16
adc
lods
mov
cmp
out
insb
jo
ret
push
jns
jle
imul
outsb
mov
pushf
loop
leave
std
mov
sbb
leave
mov
lds
loopne
push
add
fbld
imul
mov
and
cmp
ret
cli
je
mov
jmp
out
cmp
mov
jmp
jmp
push
js
int3
jle
sti
push
test
loop
sub
movsb
stos
and
or
icebp
jg
es
shll
movsb
push
pop
pop
aaa
sar
scas
mov
xchg
sub
cmp
fdivrs
jae
xor
outsl
adc
pop
outsb
jle
test
data16
or
out
mov
arpl
mov
pop
shr
movsl
mov
add
jg
mov
xchg
sub
pushl
fldl
and
lock
xchg
out
es
xchg
xchg
mov
fcoms
fimuls
test
push
pusha
mov
sbb
ljmp
or
and
cld
loop
sbb
jmp
sbb
xchg
pop
mov
out
test
in
sub
pop
cmp
ss
cmp
loop
ljmp
clc
pop
and
push
xor
loope
andl
mov
lcall
or
test
xchg
jbe
jecxz
sub
and
and
jns
movsl
or
imul
pushf
loopne
push
pop
or
xchg
pop
mov
clc
loopne
add
sbb
jg
pop
sbb
cmp
push
int3
out
pop
or
xchg
add
push
loop
ljmp
push
divb
orb
movsb
ror
dec
stos
mov
arpl
and
leave
stos
out
repz
std
lods
mov
xchg
xor
repnz
ror
ds
xor
jl
jg
fisubrs
popf
jno
jo
in
cmpsb
mov
loop
imul
mov
stos
mov
movsl
push
jnp
mov
je
cmp
or
in
push
ret
sub
sub
call
push
xor
and
adc
clc
mov
lods
mov
mov
stc
sbb
in
sti
cmp
push
jmp
enter
jl
out
nop
dec
jmp
xchg
in
mov
mov
fdiv
mov
add
ret
mov
xor
xchg
and
lret
push
xchg
ret
leave
and
out
test
aad
out
sbb
mov
out
sbb
xchg
xor
mov
lahf
or
cmp
adc
imul
jg
mov
out
out
mov
xchg
push
sbb
sub
gs
and
jae
push
test
stos
movl
insl
cltd
xchg
cmp
fs
mov
fsts
das
stos
stos
fsubs
xchg
xchg
shlb
imul
inc
push
sub
insl
fmul
lret
jno
and
jne
push
sub
mov
aaa
push
scas
and
push
popa
inc
mov
icebp
test
into
iret
das
mov
jecxz
daa
rorl
jbe
hlt
nop
cltd
aas
mov
jae
mov
fmul
pop
mov
sti
mov
loop
push
sahf
cmp
sarl
xchg
pusha
and
subb
arpl
xchg
bound
mov
mov
inc
jbe
pusha
repnz
and
mov
aam
pop
scas
inc
pop
lds
inc
sti
dec
out
or
xchg
cmc
test
insb
or
pop
jp
rcr
mov
cld
int3
in
adc
dec
imul
lret
or
or
cmp
and
push
test
cmp
jl
in
mov
pop
lea
mov
add
jbe
daa
mov
addr16
ret
aaa
stos
adc
jae
shlb
xchg
sub
xchg
pop
cmp
push
pop
pop
sti
insb
call
cmc
or
mov
inc
pop
sbb
and
pushf
incb
xor
add
xor
iret
sahf
ljmp
loop
add
mov
ss
mov
mov
les
sbb
in
fs
int3
push
xchg
pop
imul
cmp
lods
inc
iret
arpl
je
aaa
push
push
popf
out
and
mov
jp
mov
sarb
stos
mov
add
loopne
push
lahf
sub
or
sbb
pushf
mov
mov
lock
cmp
scas
movsl
jno
ljmp
sub
push
shl
aad
int
adc
mov
leave
ljmp
hlt
pop
mov
imul
imul
jbe
dec
dec
pop
mov
ret
add
mov
je
dec
stos
rclb
popf
jns
mov
xchg
data16
movsb
lcall
cli
push
cwtl
sbb
or
mov
call
rcll
ret
pop
push
lret
scas
or
sub
leave
mov
xlat
mull
cmp
cmpsl
jge
mov
mov
iret
movsl
outsb
push
pop
xor
fcmovnbe
popa
outsl
stos
sub
inc
sbb
ret
lcall
mov
xchg
leave
loope
xor
loop
adc
pushf
jbe
popa
out
push
ss
loop
test
int3
sub
std
xor
stos
xchg
movsl
push
mov
cmpsl
out
je
in
xor
repnz
jnp
jo
add
add
arpl
loopne
pop
mov
cmp
ljmp
test
sub
dec
test
enter
adc
outsl
jg
pop
daa
jle
sbb
test
fs
sub
ret
rol
sbb
stos
xor
jle
iret
fwait
adc
jae
loope
xor
lock
pop
pop
push
cld
push
push
mov
mov
test
inc
jle
pushf
jge
sub
or
mov
jecxz
mov
adc
in
pop
pop
dec
scas
loopne
jecxz
out
ret
inc
repz
jae
jp
xchg
mov
or
dec
push
xor
out
jmp
std
sub
data16
daa
mov
pop
sbb
or
iret
mov
mov
and
lret
das
xor
or
pop
mov
stos
fbld
adc
sub
push
cmp
imulb
out
fld
in
or
fsts
bswap
loop
jmp
pop
sti
int3
dec
push
fldcw
ljmp
popa
stc
push
out
or
sbb
xor
jmp
xor
or
adc
or
je
jle
rclb
dec
mov
sub
int3
adc
dec
add
mov
jecxz
fs
mov
je
and
movsb
in
jae
in
ljmp
bound
xchg
add
icebp
or
push
pop
xchg
inc
sbb
add
jo
movsl
lahf
jmp
or
aas
pop
ss
repz
into
cmp
test
outsb
cmpl
leave
fwait
movsb
or
or
test
dec
iret
add
or
xor
lea
stos
mov
lds
out
test
mov
andb
xor
fistps
test
push
dec
outsb
inc
pop
add
cmpsb
jle
test
mov
rol
mov
xchg
and
fisttps
arpl
movb
aas
scas
pop
test
jns
loopne
jne
lahf
ss
and
or
movsb
leave
dec
rcrl
stos
push
scas
jnp
mov
jne
imul
sbb
mov
mov
es
pop
pop
mov
stc
mov
lock
sbb
mov
sub
sub
pop
aas
ss
cmpl
in
enter
pop
dec
xor
or
xor
in
stos
fstpt
mov
dec
fwait
mov
adc
out
pop
sub
cli
mov
rol
mov
inc
and
cld
mov
aas
jo
mov
push
xor
fistps
loopne
sbb
mov
or
push
mov
sbb
sub
mov
mov
fsubrl
outsb
mov
mov
clc
cmpsb
jns
mov
and
lahf
lock
mov
fwait
mov
pop
xchg
mov
pop
iret
xchg
add
xor
ret
dec
cmp
or
mov
mov
inc
addr16
jg
test
mov
loop
ljmp
sbb
xchg
push
mov
or
cmp
iret
dec
lds
dec
pop
jnp
stc
or
fildll
pusha
and
inc
mov
fcmovnu
pushf
out
pop
cld
xor
cmp
dec
jb
inc
aam
aaa
out
jecxz
cmpsl
xchg
mov
xor
jnp
pop
cltd
movsb
test
outsl
push
inc
jle
fwait
ljmp
addr16
insl
mov
shrl
xchg
sahf
cs
add
or
cltd
inc
popa
mov
into
xchg
adc
mov
loopne
in
out
xchg
cltd
adc
mov
test
mov
xchg
inc
std
ficoms
mov
mov
fiadds
fucomip
or
mov
mov
adc
dec
addr16
sbb
mov
pushf
mov
ljmp
ss
jbe
fiaddl
bound
xor
sub
out
ss
fildl
mov
hlt
je
shll
xor
inc
mov
push
into
enter
loope
jmp
sub
lods
out
shll
out
popa
lods
xchg
jle
mov
xchg
lock
mov
fsincos
sub
fucomi
je
mov
add
iret
loop
inc
bound
mov
fstps
and
popf
cmp
dec
pusha
adc
pop
outsl
mov
dec
hlt
insb
sub
call
test
ret
cwtl
std
mov
ss
sbb
popf
or
inc
adc
lock
mov
sub
or
arpl
push
add
cli
push
incl
popf
mov
shr
scas
xchg
aad
sbb
stc
rcrb
into
int
cli
out
jle
adc
push
xlat
cld
enter
jns
mov
test
add
sub
cmp
cmpl
int3
cwtl
mov
pop
inc
pusha
mov
dec
std
rorb
cmp
mov
movsl
mov
push
loope
pushf
and
push
inc
test
movsl
push
mov
mov
add
mov
and
call
movsl
xor
cmp
loop
jnp
cmpsb
push
fsts
aam
into
in
mov
inc
cmp
mov
inc
dec
dec
adc
pop
xchg
push
fmul
jle
push
mov
jb
aas
xor
hlt
or
pop
jbe
pop
inc
es
aad
cli
inc
sbb
xchg
and
js
xchg
pushf
mov
push
xchg
dec
jle
mov
dec
sub
pop
filds
out
data16
mov
daa
inc
xchg
add
rcrl
fadds
out
daa
std
ja
mov
inc
fidivrs
pop
in
adc
add
ljmp
push
mov
adc
sub
pop
jmp
test
push
dec
sbb
adc
cmp
cmc
pop
sti
push
dec
int3
loopne
daa
add
ret
in
ss
jae
popf
scas
mov
inc
int
cld
sbb
sbb
les
pop
adc
movsb
outsl
and
dec
std
test
movq
lock
aam
jne
xchg
sar
outsb
jnp
mov
test
testl
push
or
mov
or
rclb
lret
outsl
mov
insl
mov
lret
xor
push
ror
loop
jmp
add
shr
push
neg
push
faddl
je
inc
clc
push
pop
dec
and
mov
jb
push
jmp
sbb
loope
lods
in
addr16
sbb
and
xlat
ja
popf
das
fucomp
lds
inc
aaa
test
call
cltd
pop
call
sub
sahf
and
jne
ja
inc
loope
jo
cmp
mov
sub
call
imul
fildll
movsb
xor
std
xor
shll
fldt
xchg
sarl
pushf
test
xchg
jp
pusha
xchg
pop
in
in
shll
mov
inc
cmpsl
sahf
xchg
dec
fdivr
add
jle
inc
or
icebp
adc
divl
adc
inc
popf
pop
mov
inc
push
cld
outsl
sahf
pop
pop
mov
sbbb
xchg
ficoms
sbb
hlt
pop
jmp
dec
jnp
cwtl
xor
and
jmp
mov
pop
inc
fwait
les
ret
inc
movsl
scas
fcompl
test
inc
scas
out
loope
xor
in
mov
out
xor
popf
push
sarl
insl
sub
mov
lock
mov
out
fcoml
xchg
movsl
dec
lock
clc
lds
jnp
xor
icebp
dec
cmp
lahf
xchg
dec
and
sbb
lahf
fstpt
mov
neg
test
jae
mov
ror
ficomps
in
push
fisubs
adc
fwait
or
add
push
add
loopne
cmp
testb
jno
inc
xor
sbb
ret
xor
in
push
xor
loopne
inc
gs
mov
or
imulb
andb
inc
ror
into
cld
and
pop
sbb
push
add
jae
into
fs
dec
pushl
mov
push
mov
std
sbb
adc
dec
push
enter
decl
mov
cmp
inc
sbb
add
popa
sub
xor
sti
out
in
popf
loop
ss
shll
xchg
fmuls
ret
inc
std
mov
xchg
mov
jge
and
jae
aam
pop
loopne
das
jmp
jo
jecxz
gs
out
in
in
pushf
cs
pop
popf
xor
mov
ljmp
out
mov
aad
jecxz
push
movsb
lret
mov
push
fisttpll
jmp
dec
into
mov
jecxz
pushl
test
out
mov
outsb
clc
jne
add
in
in
jge
jmp
mov
in
cli
dec
xlat
sbb
popf
mov
insw
push
in
xchg
int
jbe
adc
or
fildl
sub
cli
rcl
fucom
dec
iret
test
push
stos
jmp
aad
xor
cmpsb
fsubp
and
data16
pop
stos
jl
mov
jns
fcomip
hlt
sti
sbb
pop
out
and
popf
cmp
mov
loop
cmpsl
sbb
ljmp
enter
or
stc
jl
fistl
cmc
cwtl
mov
mov
pusha
mov
add
xchg
mov
push
cmp
xchg
add
sbb
add
enter
add
lret
sbb
jg
sbb
inc
and
push
aad
xor
nopl
rcrl
out
movsl
jmp
popa
ret
ja
int3
jle
add
fists
cmc
int
mov
jno
dec
mov
cltd
xor
and
jecxz
cmpsl
xchg
or
pushf
rcl
and
jae
or
stos
out
adc
push
ret
sbb
sub
fmul
out
sbb
push
out
or
mov
andb
mov
add
ja
por
int
mov
sbb
sub
mov
mov
jge
pop
pop
ja
adc
shrb
sbb
mov
out
mov
leave
mov
or
cmp
movsb
in
and
jo
push
xchg
xchg
mov
jo
xlat
loope
push
push
and
mov
stos
push
js
imul
sub
inc
cmpsb
shll
das
in
ss
push
fs
mov
jae
int3
or
fnsave
call
test
pushf
add
cmp
sbb
add
aad
test
rclb
xchg
adc
stos
xchg
sahf
ljmp
and
mov
leave
cs
push
into
inc
sub
cld
out
mov
pop
loope
jg
push
sti
popa
inc
pop
andb
or
mov
shrb
jbe
dec
mov
in
fstl
dec
leave
jecxz
mov
rcr
mov
mov
jo
pop
imul
xor
mov
xor
mov
fistpll
adc
xchg
add
int
out
lret
jbe
mov
iret
sbb
pop
or
rcrl
ljmp
push
mov
inc
popf
loopne
inc
cltd
jp
fbld
data16
in
in
push
add
jns
cmp
pop
jle
ror
test
dec
jmp
pop
fnstsw
inc
addb
lret
iret
dec
loope
out
push
dec
pushf
mov
loopne
out
or
pushf
cmp
in
mov
hlt
mov
xchg
pop
cmpsl
bound
inc
mov
jg
jns
pop
repz
ret
or
pop
das
mov
test
mov
sar
test
lcall
dec
xchg
xor
les
cmp
aam
xchg
shl
fmuls
or
je
std
sarl
dec
pop
call
scas
xchg
add
mov
fistpl
mov
push
out
pop
aaa
sbb
push
dec
or
das
lcall
lahf
shll
cmp
or
or
xor
dec
cld
sbb
ljmp
sti
push
loopne
jnp
cmp
and
out
out
mov
stos
xor
das
adc
and
outsl
pop
sbb
xlat
or
cmp
outsl
pop
jecxz
dec
outsl
outsl
scas
sub
push
adc
mov
pop
inc
and
cmp
cmpl
mov
jmp
int3
push
lea
shll
loop
jmp
and
ljmp
pop
into
mov
jecxz
xchg
test
int3
mov
or
out
daa
mov
mov
mov
imul
cmp
mov
pop
adc
mov
sub
loopne
test
dec
jmp
fildll
or
xor
loope
sub
push
jp
fldt
fstpl
arpl
jb
jo
outsb
jmp
ror
cmp
fwait
sub
xchg
nop
mov
and
dec
scas
shlb
mov
lahf
xchg
xchg
dec
mov
iret
mov
scas
mov
push
mov
je
add
mov
or
push
incl
sbb
sbb
enter
ljmp
ficompl
jg
xlat
mov
push
inc
push
pushl
sub
out
mov
stc
mov
or
jns
movsb
cmc
adcb
mov
fucomp
mov
mov
call
imul
xchg
mov
mov
mov
jbe
pop
popa
xor
pop
cmp
bound
jle
jp
int3
loopne
or
popa
cwtl
pop
add
fnsave
mov
push
sarl
lcall
outsl
jecxz
scas
add
sbb
mov
shr
add
xor
ror
rcll
sub
ret
rorl
push
pop
out
nop
jl
fistl
adc
xchg
daa
mov
jge
out
and
xor
pop
jne,pt
push
xor
movsl
xor
add
clc
outsl
int
ss
les
or
jecxz
ret
cld
push
pop
mov
lahf
mov
fistpll
arpl
inc
ljmp
repz
pushl
mov
sbb
mov
test
insl
mov
arpl
mov
mov
sbb
popa
les
pop
jmp
stos
mov
outsb
push
mov
mov
inc
sti
ret
add
pop
mov
rcl
pop
mull
loopne
pop
iret
lock
jns
pop
xor
ret
sbb
popa
lods
repnz
xchg
cmc
out
xchg
jg
add
or
inc
imull
daa
out
std
jg
add
insl
push
iret
pop
ss
xchg
insb
lahf
lahf
jmp
in
insl
cmpsl
fisttpll
out
loope
das
jg
enter
jg
jle
stc
rcl
data16
sbb
pop
add
push
jl
lds
pop
xchg
inc
cwtl
stos
imul
loopne
icebp
pop
xchg
jb
dec
push
cld
je
inc
xor
pop
popa
inc
ret
into
ret
dec
mov
adc
jg
dec
rcll
dec
lahf
and
mov
lods
loope
notl
stos
std
loopne
mov
sub
test
add
scas
jg
jl
mov
pop
fistpl
les
mov
mov
fwait
mov
xchg
jns
jnp
xchg
push
loop
sahf
jmp
ret
inc
call
lods
stos
pushf
jg
or
out
mov
ja
sbb
xor
dec
repnz
out
fwait
push
scas
scas
pop
add
imul
loope
pushl
lods
in
aad
cmp
dec
jge
xor
les
movsl
push
incl
jb
out
xchg
stos
popf
cmp
lods
sub
jae
mov
xchg
inc
outsl
or
test
mov
lea
mov
std
pop
xchg
xor
test
push
lods
mov
inc
decb
js
ucomiss
scas
out
dec
cmp
jge
ljmp
push
xlat
in
dec
into
lcall
sahf
mull
scas
popf
add
imul
mov
test
lret
pusha
mov
shrl
mov
xchg
cmpsb
push
xchg
dec
sahf
xchg
mov
scas
mov
sub
jl
jle
sub
in
incl
sbb
mov
iret
sahf
sbb
dec
pop
push
add
arpl
stc
mov
or
call
push
testb
imul
dec
stc
jo
cltd
lret
loope
ss
into
cmpb
push
dec
cmpsb
xor
les
arpl
cmc
jno
scas
pusha
leave
mov
fst
cli
das
jmp
or
cmp
ljmp
adc
test
sub
lods
stos
push
and
out
xor
fwait
icebp
stc
movsl
jnp
enter
lcall
lea
dec
pusha
fnsave
daa
call
subb
movsl
subb
movsb
push
push
rorb
call
int
sbbb
lods
repnz
shlb
jae
cld
stc
subb
xchg
fld
xchg
xchg
pop
fnstcw
loopne
add
mov
dec
aas
fildl
cmp
test
jne
xor
xorl
stc
mov
pop
add
jp
dec
cmc
push
and
aad
mov
je
sbb
jecxz
mov
or
and
jge
jmp
ljmp
int
sbb
push
fisttpl
imul
imulb
outsb
push
fistl
arpl
and
mov
push
es
mov
bnd
dec
jnp
mov
out
mov
ficomps
jnp
or
add
icebp
jle
fldcw
stc
test
jecxz
inc
push
xchg
push
jns
and
dec
imul
push
push
jbe,pt
jecxz
xchg
outsb
and
aaa
sbb
adc
cld
out
mov
cmpxchg
xor
dec
sbb
cmp
mov
pop
out
out
imul
push
cmc
ja
mov
int
test
stos
and
pop
sub
push
adc
cmp
or
testl
aam
push
adcl
push
cmp
testb
dec
cmc
xor
inc
xlat
push
out
mov
negl
mov
jbe
and
or
pop
mov
pop
or
std
xchg
fcomi
call
dec
and
xor
pushf
and
ret
test
mov
or
ja
hlt
mov
ja
sbb
push
sub
out
mov
jb
test
aas
mov
sub
inc
mov
scas
cmp
xchg
adc
icebp
mov
or
gs
mov
int
into
ja
mov
neg
xchg
fdivp
add
gs
mov
xor
jmp
mov
imul
mov
mov
jle
lock
enter
in
mov
repnz
fcos
iret
push
dec
icebp
je
adc
xchg
push
imul
jns
test
out
inc
mov
xor
xchg
icebp
cld
jecxz
es
repz
sbb
movsl
leave
imul
movsb
loope
int3
fistpll
dec
push
enter
sub
sbbb
pop
stos
or
jl
clc
pop
xchg
stc
cltd
jne
sub
mov
adc
dec
aad
mov
mov
push
mov
mov
imul
daa
lcall
and
in
sbb
popf
add
mov
jbe
inc
test
jbe
jno
xchg
repnz
shr
popf
mov
add
or
pop
push
lret
mov
mov
loope
jg
fisubs
mov
divl
or
jge
dec
out
psrlq
fldt
add
mov
or
inc
xchg
lods
les
inc
enter
pop
aas
cmp
jo
testl
and
xadd
in
test
ret
push
in
jbe
arpl
push
stos
xchg
loopne
ficomps
js
or
lahf
adc
mov
cwtl
sbb
cmpsb
std
lods
hlt
addb
push
shrb
xor
jle
mov
jo
lret
cmc
pop
xor
aas
mov
sti
outsb
loop
fimull
push
xor
jns
cmp
dec
sti
xor
push
inc
inc
pop
je
ds
cmp
mov
hlt
imul
cli
shr
mov
fildll
loope
adc
adc
add
in
movsl
shll
xchg
orb
shl
neg
mov
mov
outsl
lods
outsb
cli
dec
adcl
or
popf
out
jo
lret
mov
cmp
or
adcl
pop
sbb
test
fistpl
loop
xlat
mov
aas
cmpsl
xchg
mov
jle
adc
mov
sub
cmp
movsb
inc
data16
roll
cmpsb
dec
mov
add
es
imul
xchg
iret
jae
mov
sbb
cli
xchg
orb
mov
cmpsl
xor
xchg
mov
clc
xchg
sbb
or
ja
aad
inc
outsl
mov
pop
sub
flds
hlt
and
push
inc
pop
nop
out
rol
sbb
mov
jl
mov
or
jmp
addr16
adc
push
int
cli
pop
inc
sub
jmp
das
push
ja
hlt
scas
popf
dec
out
fidivrs
sti
mov
addr16
data16
mov
imul
mov
pop
or
jae
push
inc
mov
shrl
pop
ja
xchg
xchg
push
cmp
es
stc
jmp
aaa
dec
xchg
addr16
insl
xor
in
data16
mov
in
lock
pop
xor
or
fs
daa
outsl
iret
add
stc
loope
push
sub
sbb
xchg
pop
and
sti
enter
sbb
push
xor
ret
inc
pop
xor
mulb
fdiv
les
jae
mov
mov
in
jb
sub
or
in
xor
shlb
dec
cmp
test
and
mov
std
xor
jg
cld
sbb
adc
movsl
xchg
lahf
movsb
mov
dec
call
scas
stos
inc
dec
icebp
xchg
mov
jg
xchg
dec
ds
clc
test
xchg
aam
popf
test
mov
scas
jmp
cmc
sbb
or
inc
xchg
add
out
mov
pop
arpl
sbb
or
lret
xchg
dec
fcomps
pop
data16
movsl
sarl
adcb
mov
out
fnstcw
icebp
jns
jno
xor
sub
pop
fs
xchg
out
push
arpl
cltd
dec
jae
xchg
out
mov
shlb
hlt
dec
sahf
fildll
cltd
out
push
roll
aam
incb
jae
mov
out
jne
call
pop
jecxz
xor
mov
mov
sbb
insl
mov
ficoml
xor
aad
ret
adc
push
out
aas
int3
psubw
and
and
dec
fsubrs
adc
imul
or
bound
jb
sti
jnp
or
loop
jle
sub
inc
and
dec
jg
jno
xchg
push
jns
stos
out
jge
repnz
or
icebp
sahf
inc
sbb
lcall
pop
and
movsl
pop
sbb
cmpsl
loop
mov
call
lods
fisubs
notb
jp
call
sbb
ds
cmp
sub
adc
push
jne
mov
mov
hlt
scas
xchg
cmpl
popa
in
adc
lods
jle
and
mov
mov
xlat
push
jns
stos
scas
sub
jne
call
arpl
jg
std
sub
aaa
icebp
xor
and
movsb
pop
scas
inc
mov
or
mov
rcrb
or
icebp
xchg
or
jecxz
jb
lock
aad
pop
inc
sbb
jb
sbbl
insl
jmp
or
clc
out
gs
data16
pop
lods
mov
mov
jp
rcl
dec
fildll
outsl
js
or
leave
lods
mov
jle
movsb
or
jg
lock
dec
jae
loopne
lods
in
loopne
out
jne
cltd
pushf
jge
sub
std
in
jle
insl
lea
sub
push
dec
cmp
pop
dec
xchg
pop
sbb
pop
push
jbe
add
jnp
data16
or
fdivrl
push
fisubs
adc
dec
xchg
or
mov
xorl
or
ljmp
adc
push
pop
fbld
sub
sbb
jge
imul
sbb
xor
push
test
pop
call
std
out
jb
loope
jmp
imul
loope
jnp
imul
mov
in
fwait
jle
enter
out
pop
out
leave
ljmp
out
int
mov
test
mov
mov
arpl
add
lods
mov
fwait
pop
mov
jae
mov
jge
mov
xchg
std
repnz
in
data16
sbb
xchg
jbe
xchg
add
sti
jmp
std
lods
std
pop
iret
in
repnz
shrb
mov
or
xchg
sbb
mov
jle
dec
addr16
jl
rep
sub
pop
cli
testb
lods
pusha
stos
inc
mov
mov
push
fdivr
ficompl
xlat
jmp
xchg
fisttps
jp
loopne
sbbb
je
push
sub
scas
ret
inc
sar
aad
in
int
mov
aaa
and
jmp
xchg
mov
testl
xchg
mov
cmpsl
xor
les
bound
mov
push
leave
iret
fcmovnb
shl
stos
out
popf
fwait
mov
cld
sbb
jmp
loopne
repnz
stos
fwait
mov
fistpll
jle
xor
enter
lock
sbb
aas
xor
stos
daa
cld
bound
jo
mov
dec
pop
ja
stos
dec
mov
int
repnz
sub
jae
mov
sbb
push
adc
sbb
shlb
insl
ljmp
arpl
cmpsb
and
into
mov
push
dec
lock
std
idivl
dec
shrl
and
push
in
and
fstpt
loopne
imul
push
push
sbb
fnstsw
add
orb
xchg
shlb
xchg
xor
stos
cmpsl
dec
repnz
in
xor
idiv
int
pushf
out
adc
xor
adc
mov
lock
data16
add
test
dec
shrl
jb
sti
fdivs
mov
in
out
inc
xchg
sar
lret
fldt
das
lock
jle
in
movsl
cmpsl
adc
push
inc
or
adc
or
jbe
aas
add
mov
jmp
sbb
cmp
aas
push
adc
sahf
and
jle
cwtl
mov
jp
sbbb
mov
int
or
call
movsl
mov
push
push
push
popf
mov
fcmovnb
xor
xchg
ds
ljmp
push
xorl
dec
out
jnp
adc
inc
adcb
popa
xor
mov
xchg
scas
and
nop
idivl
in
inc
xorl
dec
sbb
lret
bound
jge
mov
jo
lock
jo
xchg
sub
jb
roll
xor
jns
test
and
add
jne
lock
popl
cwtl
add
jb
mov
in
jo
in
inc
push
ds
xchg
add
jb
pop
adc
fld
inc
push
cwtl
mov
lret
mov
sbb
jmp
ljmp
xor
out
and
add
adc
jge
ljmp
test
push
jecxz
mov
mov
pop
jle
xor
ficoml
jg
fnstcw
cmp
loope
std
mov
add
ljmp
push
mov
loope
in
mov
movsb
xchg
inc
jge
rclb
insb
leave
and
add
mov
mov
in
cld
or
push
mov
mov
xchg
push
mov
mov
jecxz
incl
xchg
std
in
jb
shrl
inc
add
sub
inc
imul
enter
sub
and
loope
mov
and
or
fmul
and
popa
mov
shlb
and
pop
pop
std
lock
js
pusha
pop
pop
aad
out
ret
test
mov
push
outsl
jg
mov
xor
dec
mov
jno
out
pusha
push
and
ljmp
lea
pop
cltd
test
ljmp
imul
lcall
les
pop
xor
xor
std
out
pop
testl
lods
data16
mov
in
bnd
xchg
add
xor
dec
into
pop
lock
adc
iret
jbe
sub
in
mov
sbb
or
mulb
adc
sti
or
mov
outsb
fdivrl
adc
into
int
cmp
popf
lcall
jmp
scas
enter
cltd
repz
or
popa
or
loop
imul
cmc
popa
mov
xchg
push
pop
imul
inc
outsb
jp
jno
out
out
mov
add
js
inc
sub
ss
sub
cld
or
stos
outsb
xchg
or
push
loope
stos
jns
xchg
shll
xor
cs
xchg
int
out
xlat
cli
xchg
sub
stc
es
scas
test
test
sti
xchg
add
push
xchg
flds
jg
int
enter
hlt
sub
loop
sbb
ficomps
mov
inc
and
int
ss
cltd
repnz
icebp
push
mov
sub
xchg
mov
aam
push
mov
jbe
adc
mov
mov
dec
sub
inc
ds
cmp
push
push
add
pop
scas
push
jg
cs
pop
pop
push
flds
test
jge
out
aaa
or
cmpl
ja
sti
jge
leave
inc
les
mov
push
xchg
iret
dec
push
and
jo
xchg
push
sbb
int
aas
ss
arpl
inc
addr16
into
inc
cmc
sahf
pop
ljmp
ljmp
out
cmc
or
lods
mov
jle
sub
cmc
mov
fwait
int
fnstenv
pop
xorl
jne
mov
jo
jle
pushw
xor
fisubrl
mov
outsb
scas
loop
inc
mov
cmp
daa
data16
clc
mov
push
call
cli
push
imul
popf
pushf
pop
xchg
notl
iret
adc
pop
mov
orb
mov
stc
das
mov
stos
inc
add
pop
out
or
rcll
mov
je
lret
mov
or
jmp
es
leave
xchg
cltd
jne
xor
add
pop
push
rorl
cmpsl
jns
add
arpl
cmp
pop
sub
ret
jae
outsl
lock
mov
cmp
push
sbb
outsb
sub
jbe
jae
imul
add
pop
bound
xor
pushf
in
and
cld
das
dec
out
hlt
scas
or
jne
jae
iret
jnp
xor
call
sub
xor
fwait
dec
mov
repnz
mov
aas
mov
std
repnz
push
aam
pop
mov
mov
bndldx
loopne
mov
fidivs
fxch
sti
dec
aas
mov
push
lods
repnz
xor
adc
sub
into
xchg
mov
sbb
push
push
jbe
lret
lret
mov
cs
in
je
sub
test
imul
aaa
ret
out
out
lods
popf
cmp
inc
js
ss
popf
sbb
xor
mov
mov
movsb
inc
xor
aaa
lods
and
and
xor
dec
xchg
outsl
scas
push
inc
imul
fmuls
mov
fisubrl
cmp
repnz
aad
cmp
push
fcompl
enter
dec
lods
push
push
dec
enter
mov
xor
in
pushf
inc
jge
lcall
test
out
aaa
aas
mov
dec
enter
sbb
mov
test
add
lods
stos
add
and
out
out
shr
pop
mov
add
bound
mov
stc
xor
inc
into
outsl
or
xor
lahf
pusha
jns
stos
jmp
addr16
jmp
mov
aaa
outsl
dec
in
inc
mov
fmul
aad
fisttps
fsubs
dec
clc
aas
push
lods
mov
loop
sbb
mov
push
sbb
loope
or
push
or
notb
add
pop
xor
and
movsl
mov
mov
in
testl
icebp
lods
out
leave
mov
jmp
shrl
xchg
inc
ja
mov
inc
loope
xchg
daa
sbb
lea
inc
std
xchg
push
mov
icebp
scas
xor
dec
mov
jne
adcl
push
out
sarl
bound
mov
jae
inc
ret
mov
cld
adc
adc
lcall
sub
and
add
stc
lock
sub
lret
mov
add
xchg
mov
sbb
das
inc
add
sbb
sahf
mov
fcomps
sahf
clc
sub
sbb
dec
in
sub
pushf
enter
cmp
push
rorl
movsl
aam
inc
iret
dec
iret
or
mov
push
int
sti
ja
fbstp
cmp
out
fnclex
or
fmull
fwait
add
mov
popf
cmc
push
mov
repnz
imul
push
dec
pusha
sub
push
cmp
or
add
jns
mov
subl
out
or
dec
outsb
push
pop
mov
or
jne
mov
int
cmpl
ja
xchg
sub
add
jb
lock
leave
loopne
out
push
jbe
sbb
mov
into
sbb
jecxz
in
mov
push
cltd
pop
mov
mov
mov
scas
jns
xor
sahf
outsl
fcoml
push
jae
ffree
mov
loop
jne
push
out
shll
out
rorl
shrl
pop
push
inc
sbb
push
ljmp
ljmp
fldl
sub
push
cs
jp
jg
sub
add
push
lret
add
pop
loope
mov
in
mov
pop
xor
jecxz
fnstenv
sbb
icebp
das
jge
test
mov
jg
dec
jne
call
int
pusha
sti
or
rorb
dec
aaa
jmp
adc
lods
mulb
call
or
push
jg
mov
shll
subb
inc
scas
loope
jg
mov
and
mov
xor
sub
jg
xchg
test
or
cwtl
mov
imul
addl
je
in
hlt
sub
inc
pop
fmul
das
fisttpl
cmpsl
jo
mov
xor
mov
mov
popa
and
repnz
lahf
jo
xor
scas
ficoml
fcomi
push
xor
push
ljmp
jl
pop
jg
or
jae
fcmovu
jo
in
cmp
xor
fstpt
inc
jmp
out
das
cmp
je
out
test
out
in
adc
ljmp
xor
gs
sbb
out
bnd
js
mov
movsb
push
es
mov
movsl
sub
cmp
dec
iret
arpl
push
push
movsl
loope
aad
mov
loope
push
test
dec
loope
das
and
xor
pop
dec
mov
pop
adc
inc
xchg
into
das
add
jmp
sbb
imul
add
xor
adc
in
bts
test
jnp
pop
xor
leave
call
icebp
mov
loope
xchg
jmp
mov
inc
jne
sbb
jecxz
pop
mov
xchg
cld
fldenv
iret
mov
icebp
pop
data16
or
and
in
dec
fistl
ja
ret
in
or
les
std
add
in
in
jle
in
push
lock
fadds
movsl
stc
and
sti
push
movsb
jmp
lret
outsl
sbb
ljmp
pop
inc
outsl
mov
or
int3
je
dec
sub
sub
push
xchg
pushf
or
jo
push
mov
mov
iret
adcb
in
add
and
xchg
outsl
mov
cmpsl
cs
ljmp
and
icebp
sub
sti
pop
iret
and
sarb
ss
mov
out
clc
adc
push
test
shll
loopne
mov
jne
cmp
test
push
insb
mov
inc
fnstsw
int3
out
pop
outsl
movsl
mov
inc
pop
stos
jmp
fisubrl
jecxz
call
clc
movsl
ret
jns
pop
fcmove
lret
rcrl
lret
push
int3
mov
push
lahf
aaa
fisttpll
jecxz
sarl
in
mov
bnd
cmpsl
jecxz
shr
jecxz
iret
stos
jo
lahf
and
je
popf
xchg
inc
enter
shlb
insb
std
mov
mov
lods
fisttpl
addr16
fs
loop
stc
mov
pop
or
fcmovnbe
fiadds
mov
dec
sbb
xor
adc
xchg
xchg
push
jg
sub
jmp
mov
into
shlb
shrl
push
pop
mov
loope,pt
incl
xchg
dec
add
sub
sbb
loopne
xchg
dec
sbb
and
cmc
lock
je
outsl
cmpb
stos
xor
mov
adc
cwtl
frstor
in
mov
dec
cmpsb
cwtl
test
mov
call
push
dec
or
aam
pop
mov
repz
stos
popf
lds
or
cwtl
add
jnp
out
sub
shrb
pop
jmp
cmpsb
loopne
dec
cmpsl
scas
call
loope
sub
movsl
mov
stos
ljmp
push
push
shlb
mov
cs
cmpl
xchg
out
daa
xor
jbe
test
xchg
leave
cmp
mov
push
aam
sti
mov
push
jmp
xor
mov
adc
scas
jmp
jo
cmpsl
pushf
in
fldenv
jmp
jb
enter
lea
fisubrs
xchg
fimull
mov
jge
pop
je
stos
xlat
mov
mov
push
add
cltd
loopne
mov
fbld
lahf
mov
cmpsb
xorb
mov
fnstenv
sbb
getsec
dec
sub
cmp
fnstsw
int3
jg
or
rcl
lods
int3
jge
icebp
jl
ret
out
imul
mov
lret
ret
xchg
fwait
jo
mov
add
sti
sahf
mov
mov
and
rcrl
mov
jmp
mov
adc
sbb
xlat
lret
jne
sahf
hlt
push
fdivs
loopne
sub
aad
sub
mov
addr16
xchg
ds
movsl
enter
ljmp
push
into
arpl
out
fisubrl
fnstenv
mov
xlat
js
stos
xor
ret
incl
mov
leave
shrb
sub
fsubl
mov
adc
push
pop
jl
lret
push
out
xor
shl
iret
mov
iret
lret
cli
das
repnz
mov
push
mull
mov
jbe
movsl
cltd
in
xchg
cmp
push
push
xchg
and
cltd
jmp
loopne
add
out
mov
mov
pop
ljmp
hlt
push
push
mov
and
movd
fiaddl
mov
insl
popa
lcall
pusha
stos
loopne
aad
add
scas
test
loop
ficoml
popa
loopne
sbb
jnp
push
push
adc
push
in
lret
and
fwait
jge
pop
mov
jmp
fs
or
negb
sbb
pop
mov
int3
stc
popf
push
and
outsl
mov
dec
jl
or
call
test
in
and
xchg
mov
mov
shl
sub
loop
jle
jns
pop
or
adc
out
pop
lock
push
and
mov
or
pop
sti
loop
test
loope
stc
and
out
lods
xchg
add
or
test
test
pusha
ss
jg
mov
lods
lret
addb
sub
mov
cltd
cmpsb
push
fidivs
int
mov
push
shlb
ret
mov
cmpsb
scas
dec
mov
mov
loope
push
adc
shl
push
sub
lcall
mov
jmp
jb
mov
jg
xor
mov
pop
out
movd
dec
adc
xchg
mov
sbb
push
mov
dec
in
mov
sbb
xchg
add
icebp
scas
ret
cmpsl
sar
cmp
mov
outsl
jo
dec
es
push
fisttpl
pop
sbb
shlb
pop
jne
lret
test
mov
lret
sti
adc
dec
mov
xor
data16
cld
add
scas
mov
or
xchg
test
jae
out
jmp
sub
rcll
jmp
stos
ljmp
pop
lock
or
and
pop
add
loopne
movsb
mov
mov
push
pop
jmp
aas
cs
fwait
push
push
cld
sti
gs
loop
mul
xor
iret
pop
push
or
test
inc
ficompl
mov
lods
repnz
inc
or
jge
fcmove
sub
sbb
xchg
and
idiv
ss
std
push
scas
test
mov
mov
sbb
jecxz
ljmp
pushf
sub
mov
jecxz
push
out
mov
or
ljmp
cltd
stos
call
mov
cli
jne
iret
push
jle
jns
loope
adc
mov
mov
stos
ds
xor
jecxz
mov
mov
out
in
add
mov
js
xchg
arpl
ljmp
cmp
into
mov
fisttps
loope
clc
data16
cmp
dec
xor
mov
cltd
adc
xchg
in
sbb
jge
divl
cwtl
inc
cmp
je
pop
lahf
gs
lahf
scas
cmpsl
leave
stos
inc
mov
je
xchg
cmc
sbb
mov
fmul
jo
shlb
cmp
add
adc
mov
out
and
inc
jge
xor
add
fs
outsb
inc
mov
xor
test
add
cmc
cld
mull
add
out
lods
lret
xchg
lret
pop
jecxz
xchg
xor
pop
leave
jecxz
adc
jecxz
mov
aad
cld
das
xchg
outsl
stos
lret
pop
jle
and
shrl
jmp
xor
xchg
cmpsb
les
mov
lret
loop
popa
xchg
sub
sbb
inc
adc
leave
bound
jne
lret
js
mov
jno
jge
mul
sbb
sti
jge
ds
cmp
frstor
mov
outsl
cwtl
sti
sbb
or
pop
push
fcompl
hlt
cmp
scas
xlat
mov
data16
mov
sbb
inc
mov
loope
xchg
sub
lock
mov
xor
sub
out
loope
test
incb
cld
jecxz
cmp
pop
nop
movb
imul
xchg
dec
cmp
pop
mov
enter
mov
mov
test
xchg
sahf
rorl
mov
scas
cmpl
das
add
stos
and
mov
shl
mov
iret
imul
cmp
enter
xlat
mov
punpckhdq
paddd
imul
mov
adc
or
cmc
jno
mov
enter
jns
jne
test
adc
mov
inc
adc
enter
dec
test
push
loop
jnp
ret
xchg
sub
mov
out
call
out
or
ljmp
lret
and
xor
aam
mov
testb
ffreep
xchg
stc
notb
mov
push
push
cwtl
popf
jbe
scas
mov
jl
sbbl
in
sub
scas
pop
sub
cwtl
or
test
push
and
loop
rcll
jmp
jne
push
mov
inc
jle
inc
xchg
out
pop
dec
mov
lods
add
jle
dec
and
iret
jae
dec
jp
or
inc
inc
into
cwtl
cmp
aaa
inc
gs
pop
mov
ljmp
pop
mov
xchg
cli
stos
out
lods
fsubrs
popf
xchg
jg,pn
pop
pop
in
mov
insl
je
jl
adc
jb
and
mov
push
jp
out
mov
outsb
pushf
and
mov
scas
sti
push
outsl
into
mov
mull
stos
gs
and
add
bound
mov
arpl
xor
les
inc
adc
xor
lods
movsb
ret
sub
push
dec
mov
adcb
push
cld
mov
jbe
mov
jae
int3
and
sbb
iret
dec
divl
mov
test
xchg
jg
les
in
adc
roll
rclb
mov
cmpsl
movsb
sbb
idivb
xchg
pushf
mov
test
mov
cmp
push
jbe
jle
jbe
movsl
adc
xchg
mov
dec
clc
int
call
or
imull
cmp
jle
jecxz
jle
pop
shll
cmp
mov
je
arpl
movhps
mov
repnz
jb
cwtl
ljmp
in
cltd
popf
pop
in
push
jl
out
push
fidivrs
ja
inc
clc
out
push
call
mov
pushf
int
sbb
sti
or
add
ja
frstor
xchg
mov
jne
adc
sub
pop
ljmp
xchg
lret
lahf
mov
mov
jno
push
mov
ja
nop
gs
scas
push
push
stos
push
lods
cmpsl
les
adc
add
jmp
sbb
xor
jg
gs
js
inc
test
jae
xchg
repnz
jnp
and
lea
lock
ja
loop
xchg
frstors
repnz
pushf
loope
push
and
iret
push
out
inc
xchg
dec
mov
mov
enter
pop
loop
push
data16
jge
dec
mov
popf
sbb
js
adc
out
sub
in
int
mov
cmpsl
dec
mov
daa
adc
mov
cltd
hlt
xchg
and
fwait
repnz
push
pop
or
lret
fiaddl
fists
mov
mov
cltd
hlt
push
shll
cmp
xchg
ljmp
lcall
sbb
jge
adc
or
dec
pop
cs
sbb
cmp
mov
bound
push
inc
hlt
fwait
mov
out
sub
pop
ret
into
ja
inc
push
pop
pop
insb
sbb
jmp
repz
adc
or
or
hlt
sub
or
stos
xlat
in
push
lods
lret
stos
jle
mov
inc
push
rcl
adc
dec
push
ss
jbe,pn
call
xor
push
fwait
jbe
jnp
jb
cmp
and
stos
addr16
sub
iret
lret
aad
adc
jecxz
sbb
outsb
jge
mov
push
xor
stos
mov
sbb
push
aam
push
test
inc
out
mov
add
cmpsl
data16
mov
xchg
jbe
ja
in
cmp
mov
mov
aam
vpextrw
lds
mov
je
cmp
jle
ljmp
enter
sub
mov
xor
push
add
mov
jle
les
jnp
push
movsb
cmp
inc
xchg
sbb
pop
cmp
or
daa
fs
and
jge
std
xchg
jno
data16
xor
std
aaa
mov
vshufpd
iret
enter
hlt
push
mov
hlt
in
out
rcl
mov
nop
aam
mov
mov
sbb
mov
aaa
mov
test
xor
pushf
enter
lock
or
mov
adc
inc
jo
sti
clc
mov
adc
xlat
icebp
sbb
cmp
aas
push
inc
inc
jge
sbb
mov
enter
mov
out
jbe
mov
andb
xchg
clc
sbb
push
loope
loop
xor
je
testl
jp
xchg
lret
dec
xlat
jae
ss
pop
popf
lahf
sub
std
push
sub
jae
sub
push
sub
pop
xchg
lret
sub
sbb
jno
mov
movsb
cli
xchg
ljmp
lea
adc
movsl
dec
arpl
add
mov
pushf
and
je
sahf
loopne
xlat
hlt
lret
fistl
jge
popf
mov
out
out
loopne
or
mov
daa
int3
sub
jb
in
mov
imul
stos
xor
mov
and
mov
leave
out
mov
je
jmp
nop
jmp
inc
adc
sbb
leave
push
aaa
shlb
push
test
xchg
mov
neg
in
aas
xor
jge
data16
adc
ljmp
mov
lods
mov
outsb
sub
pop
sub
or
aas
inc
or
outsb
inc
mov
or
fiadds
mov
lahf
lahf
pop
int3
jecxz
movsl
loop
push
loope
loopne
hlt
lcall
pusha
test
add
fbstp
daa
cmp
xor
ds
pop
icebp
add
in
loope
lahf
cmpsl
inc
mov
mov
loope
inc
repnz
leave
in
xor
mov
mov
mov
push
out
aad
xor
pop
scas
sbb
jecxz
jns
in
ret
mov
mov
filds
or
rcl
shll
add
jle
mov
daa
dec
imul
call
repnz
and
fsubr
or
gs
push
stos
arpl
mov
fwait
jno
mov
fldl
inc
or
xor
lret
in
enter
daa
cli
and
mov
movsl
or
sti
cltd
das
aaa
xor
testl
lods
test
jg
aas
xchg
shrl
fnstcw
jo
add
cmp
lods
jg
xchg
leave
or
push
xchg
dec
out
mov
jmp
clc
push
mov
push
jbe
cltd
les
je
adc
mov
lret
sub
cld
mov
pop
lods
rcrb
sub
and
mov
test
nop
shll
das
push
ss
rcr
adc
mov
mov
xchg
add
jno
sbb
lods
cli
popf
mov
popl
xorb
add
add
pop
jbe
js
pop
int3
jge
fmuls
pushl
movsb
mov
or
jmp
cs
push
adc
movsb
cmp
mov
jl
gs
push
sub
dec
sbbl
les
outsb
inc
popa
ljmp
mov
imul
push
cmovb
pushf
ja
das
movsl
fwait
cmp
out
int
cmpsl
int
imul
adc
push
jo
jb
mov
sar
cs
scas
fdivrl
pop
sbb
add
lods
jo
fwait
xchg
movsb
pop
add
pop
xchg
cwtl
imul
test
sbb
jno
cmc
test
inc
xchg
lret
mov
push
cmp
repnz
push
sbb
popa
popf
test
jnp
in
dec
pusha
sarl
push
imul
push
loope
mov
into
add
lock
loop
pop
mov
pop
rorb
stc
stos
cmp
iret
xor
les
mov
test
sub
in
repnz
int
mov
pop
mov
push
push
push
jge
mov
sbb
mov
mov
sarl
lock
cmc
shlb
loope
sbb
xchg
iret
inc
stos
les
jp
push
cmc
jbe
lcall
mov
or
add
imul
dec
ja
call
push
mov
mov
call
adc
imul
pop
out
out
xor
popa
xchg
cmp
cld
or
pop
fisubs
adc
or
dec
or
mov
mov
cmp
push
pop
mov
jb
leave
popf
mov
mov
in
movsl
lret
rolb
jo
mov
fdivl
movsl
das
lret
out
test
filds
sub
fnstsw
test
cmpsb
jmp
out
ret
push
out
rcrb
mov
sarl
mov
mov
leave
movsl
fldl
mov
test
adc
out
cmp
mov
sbb
fstpl
xchg
int3
icebp
add
xor
sub
lods
sarl
shll
xchg
or
fmul
or
mov
sahf
das
jbe
mov
jmp
hlt
arpl
jl
jnp
jle
loopne
jg
inc
inc
cmp
mov
frstpm(287
or
ja
sbb
rclb
rol
sti
jg
outsl
push
sub
or
mov
mov
mov
loopne
cld
mov
or
mov
sbb
jp
movsb
mov
jl
jg
out
in
pop
dec
dec
dec
rol
pop
jae
pop
ja
dec
out
adc
mulb
sub
mov
mov
in
jle
popf
mov
pop
xchg
loope
iret
add
test
jns
fs
std
stc
fs
or
pop
and
cmp
popa
fildll
iret
mov
xchg
fimull
pop
std
pop
inc
or
jl
sub
enter
push
xor
jmp
shr
cmc
mov
pop
test
push
out
loope
cmp
sti
mov
test
pop
cmp
xchg
mov
repnz
pop
out
out
cmc
mov
imulb
std
jmp
add
das
push
movsl
jl
outsl
out
in
inc
sub
les
ret
dec
daa
and
rorl
jecxz
mov
mov
jo
jecxz
cld
dec
data16
out
or
insl
arpl
mov
mov
sarb
sahf
enter
ret
jne
test
jb
xlat
call
lret
negb
stc
call
repz
es
imul
mov
clc
push
daa
fsubrs
xor
outsb
add
bound
xchg
jmp
sub
idiv
incl
sbb
je
mov
xchg
orl
mov
rcrb
mov
inc
inc
mov
cmpsl
cwtl
sbb
pop
and
jne
lret
sti
dec
scas
push
push
pop
adc
sbb
int
add
sub
sti
and
out
add
loop
push
or
cmp
lret
inc
cmp
adc
push
dec
aad
sbb
adc
xchg
and
outsl
mov
mov
iret
xchg
xchg
add
xor
jmp
mov
jmp
cmp
xor
jg
or
fisttpll
insb
call
out
leave
cld
cmpsl
test
lret
push
push
xor
addr16
dec
mov
or
inc
inc
jnp
pop
pop
mov
cmp
lock
cli
in
inc
imul
test
dec
pushf
popa
sbb
lea
lds
xchg
jg
inc
pop
shr
adc
fucomi
outsl
lret
xchg
clc
loope
sti
mov
xlat
jecxz
loopne
addr16
stos
dec
push
arpl
std
clc
dec
int3
jnp
inc
lret
test
and
test
mov
jl
rcll
jae
in
mov
pop
into
adc
pop
xchg
jp
pop
out
fistpl
xor
popf
jae
and
stos
les
rcll
loop
test
sub
fcompl
xchg
adc
xchg
inc
fisubrs
xor
pushf
inc
mov
dec
add
fxch
xor
sahf
movsl
sbb
int3
pop
stc
pmaxsw
data16
mov
adc
out
push
sub
loope
stc
mov
sbb
addr16
lahf
and
and
movsl
aad
std
and
cmp
lock
int3
fstps
imul
rcll
dec
leave
ror
or
mov
stos
adcb
xchg
pop
outsb
ljmp
sbb
sahf
mov
cltd
cmp
dec
sub
out
imul
ss
xchg
arpl
popf
push
stos
sbb
sbb
or
xchg
mov
cli
xor
js
rcrl
pop
stos
xor
shrb
cmpsl
lods
lret
mov
push
fisubl
pop
addr16
and
es
push
mov
ja
pop
jle
fldcw
jbe
inc
dec
mov
xchg
lahf
mov
xchg
stos
xchg
push
lock
jg
test
in
pop
xchg
mov
jecxz
test
data16
xlat
xchg
lret
or
lahf
jle
dec
dec
cmp
pop
mov
std
sti
pusha
inc
fildll
out
pop
or
aas
add
int
or
ret
sub
outsb
sbb
test
adc
pop
xor
mov
das
push
shl
rcrl
int3
fwait
mov
pop
data16
dec
push
imul
leave
popa
lods
or
outsb
xor
mov
daa
fidivl
jecxz
loop
xlat
xchg
dec
enter
bnd
imul
mov
mov
inc
sti
mov
in
aam
mov
jae
mov
mov
xchg
inc
sbbb
mov
jg
ljmp
mov
lds
movsl
pop
out
gs
cmc
adc
idiv
sbb
adc
add
push
loop
in
scas
sbb
push
das
jbe
outsl
rcr
jle
jne
into
nop
mov
cmp
pop
dec
rorb
mov
sub
inc
jecxz
pop
jb
push
add
sub
xchg
fisubrl
scas
lahf
mov
das
scas
mov
jnp
scas
mov
imul
lret
clc
push
cli
sbb
flds
loope
push
stc
test
xor
lret
fs
pop
push
sbb
mov
loop
jle
ret
out
lock
inc
jmp
mov
into
out
or
std
popf
das
push
push
test
add
dec
or
mov
mov
sti
sbb
call
sbb
dec
fwait
pop
cmpsb
enter
push
jmp
xchg
or
mov
lret
jns
cmp
sub
stos
in
loope
pop
shl
sub
mov
xor
icebp
rcll
pop
loop
lock
jmp
out
pop
fisubrl
ljmp
push
lret
shr
mov
xchg
mov
loopne
ret
ljmp
push
add
in
xchg
adc
mov
jmp
cmovg
rcrl
adc
out
jmp
ja
mov
push
hlt
cmp
stos
sub
ret
or
jge
push
jbe
scas
push
add
loop
out
dec
stc
pop
inc
je
xor
mov
jecxz
lret
loopne
push
int
push
movsl
mov
mov
or
add
in
add
jp
ja
std
xchg
test
push
dec
popa
mov
sahf
push
xchg
cld
push
fstps
or
adc
pusha
cmc
push
jns
loop
jae
std
add
addl
or
jmp
dec
icebp
push
ret
je
dec
push
in
sti
mov
push
loope
inc
shrb
jnp
adc
adc
mov
mov
lea
ret
push
mov
fwait
out
sbbb
leave
or
xlat
push
fldenv
dec
add
ret
mov
mov
call
je
loope
jg
rorl
lcall
jmp
lods
cmp
mov
pop
inc
jle
lds
cmp
cmpsb
inc
push
loope
aas
out
jns
loope
dec
and
test
pop
cld
mov
mov
xor
mov
scas
xchg
cmp
sbb
add
ljmp
dec
mov
outsl
mov
cwtl
clc
mov
mov
test
sbb
pusha
jecxz
stc
mov
dec
fimuls
loopne
cmp
mov
add
add
inc
mov
data16
repnz
repnz
and
enter
jno
or
xchg
pop
fisttpll
adc
or
cmp
jo
jo
mov
lret
scas
lret
fimull
add
rorl
or
xchg
inc
pop
iret
fbld
rcr
int3
fcmovnu
cli
add
xor
fdivs
arpl
xchg
or
out
lock
in
inc
push
add
and
data16
stos
icebp
jg
movsb
and
jle
sahf
adcb
shl
sahf
jnp
shlb
dec
fst
cmp
fcomp
jnp
cmpb
inc
adc
shlb
fisttps
stos
mov
pop
mov
add
mov
out
sbb
inc
lods
notb
hlt
mov
sahf
fmuls
jg
xchg
stc
inc
pushf
sub
push
xlat
adc
jmp
sub
dec
out
fsubrp
sub
pmaddwd
lods
lock
leave
jecxz
mov
lret
xchg
pop
pop
adc
sbb
sub
sub
lcall
jo
out
pop
jmp
mov
inc
cltd
xor
push
mov
jo
mov
mov
xchg
jecxz
mov
hlt
out
fcomp
addr16
xchg
hlt
enter
push
cli
mov
inc
imul
mov
mov
add
std
fisttpl
push
push
test
push
adc
aad
js
das
sbb
sub
xor
outsb
sub
or
addr16
sub
test
arpl
outsb
sub
mov
sub
xor
jecxz
jg
xor
mov
cmp
dec
dec
cmp
cmp
or
jmp
mov
adc
int3
ret
cmp
mov
out
pop
std
outsl
insl
mov
call
imul
cmp
jbe
sbb
and
rorl
mov
dec
or
or
cmp
dec
xchg
mov
mov
cmp
sbb
sar
insb
stos
and
add
cmp
mov
iret
out
mov
push
dec
or
out
out
mov
lods
jnp
or
rcrl
mov
add
lea
in
sahf
dec
fldcw
sub
inc
push
lahf
imul
sub
pop
push
in
xor
push
pop
loopne
notl
xor
out
jl
daa
jbe
jmp
push
addr16
pop
pop
imul
iret
popaw
xchg
adc
js
mov
jmp
rclb
xchg
push
outsl
scas
jecxz
dec
push
fs
in
sahf
scas
subb
repz
outsb
std
jne
iretw
xlat
ret
mov
flds
out
imul
fists
dec
addr16
dec
sti
insb
push
in
pop
mov
cmp
mov
push
scas
les
jmp
insl
inc
jmp
pop
xor
sbb
or
pop
incb
icebp
jne
jns
sbb
pusha
cltd
ret
mov
insl
das
stos
jno
jbe
sahf
jmp
push
mov
or
xor
ja
jecxz
popa
mov
pop
ja
push
cli
loope
dec
xor
scas
pop
scas
sbb
xchg
or
adc
adc
cwtl
cmc
insb
in
fldt
es
lods
cmp
add
and
lret
out
push
ss
shrd
mov
push
mov
adc
leave
pop
aad
pop
and
clc
imul
inc
iret
or
pop
or
xchg
sbb
sbb
xchg
jbe
aam
push
jnp
outsl
xchg
stos
jo
pop
fs
cmp
movsl
pop
pop
ret
fnstsw
pop
mov
inc
loope
jmp
or
push
imul
push
jbe
popf
jne
test
add
cwtl
test
pop
xchg
into
je
jbe
pop
adc
cmp
fldt
jle
sub
lock
or
fists
fistps
sbb
sub
push
test
iret
lcall
test
je
xor
add
ret
push
dec
pushf
loopne
repnz
jae
sub
push
jno
sub
vcvtdq2ps
and
data16
fdivl
inc
repnz
fmul
push
pop
xor
mov
in
lret
in
fsubrl
jne
adc
stos
pusha
lret
push
call
pop
mov
loopne
push
stc
stos
je
xchg
scas
jo
ljmp
dec
dec
out
test
sti
lock
jmp
ljmp
adc
sub
and
or
lds
sbb
or
loopne
jnp
in
sbb
add
mov
push
jnp
testl
push
sti
adc
scas
cmp
shlb
hlt
test
test
lods
into
cmp
or
push
loop
mov
jno
sti
or
mov
fcomip
fnstcw
stc
lretw
out
mov
inc
xor
fnstsw
mov
lcall
les
inc
jmp
mov
xchg
fsubr
mov
push
jge
jno
mov
pop
xor
pop
stos
sahf
push
icebp
dec
sub
fs
jl
lea
xlat
mov
movl
in
or
push
push
mov
jle
dec
test
scas
jecxz
mov
dec
dec
ds
arpl
push
icebp
inc
jmp
mov
mov
pop
cwtl
jno
jne
cmp
inc
pop
push
sbb
fcmove
mov
outsl
or
lahf
sbb
fstps
sbb
mov
rcrl
cltd
bnd
in
sub
adc
jecxz
fcomps
inc
repnz
decl
mov
mov
push
ja
jmp
sti
sub
popf
fnsave
popf
mov
jne
hlt
jb
jecxz
lcall
jp
repz
jo
bnd
xor
mov
xor
cmpsl
je
push
sbb
sahf
sub
cmp
pop
lret
pop
xchg
in
add
dec
push
dec
lea
lods
push
test
sub
cmpsb
adc
hlt
mov
mov
mov
pcmpeqw
in
or
sub
scas
sbb
mov
push
adc
enter
inc
xchg
ja
add
adc
sbb
mulb
icebp
les
outsl
or
mull
inc
cmpsb
jp
or
push
mov
cmpsb
lcall
mov
sbb
lods
mov
add
jb
idivl
mov
mov
mov
jne
stc
fstpl
in
loope
mov
idivl
stc
fld1
fnstsw
hlt
call
shrb
adc
sbb
loope
popf
jmp
sbb
xchg
or
movsl
push
stos
addr16
fcompl
mov
and
or
lods
cmp
mov
xor
scas
xchg
jmp
jp
jne
mov
sub
pop
outsl
mov
in
in
jb
cmpl
imul
movsl
sbb
lock
jmp
lcall
push
jo
mov
fldt
in
pop
hlt
test
push
aas
stc
jb
aaa
adc
imul
pop
out
pop
rolb
mov
mov
stos
xchg
fidivs
pop
rcll
popa
jle
mov
aas
jg
push
out
jae
jle
addr16
out
jmp
imul
iret
enter
cmp
fildll
add
pop
clc
inc
mov
sbb
xor
sbb
popf
xor
xor
lock
enter
mov
xor
mov
mov
push
jp
or
nop
ljmp
ja
scas
fs
in
gs
jmp
mov
cmc
andl
or
pop
cli
je
repnz
loope
mull
repnz
out
mov
es
outsl
xlat
sub
push
sub
xlat
push
dec
in
test
or
pop
jo
daa
outsl
mov
pop
fwait
jbe
pop
jg
pop
and
pop
xor
shll
lds
push
test
das
sbb
sub
add
xor
mov
int
inc
fimuls
inc
jno
movsl
dec
push
ss
dec
push
movsb
jecxz
sub
aas
fwait
or
inc
mov
cltd
cli
add
mov
out
add
arpl
push
negb
out
jecxz
lret
dec
jecxz
mov
out
loopne
lret
xchg
test
mov
sbb
shl
popl
dec
fcmovne
and
pop
dec
or
or
mov
fwait
sbbb
mov
sar
icebp
jg
imul
cmp
imul
mov
into
mov
jmp
jle
mov
jge
scas
lea
loope
repnz
orl
divl
mov
lods
jne
bnd
jo
jmp
add
std
cmpsl
movsb
mov
lods
lds
dec
mov
xlat
pop
dec
push
gs
jo
js
fcmovbe
mov
jmp
inc
mov
std
mov
das
fnstcw
push
mov
xlat
push
out
ficoms
cmpsb
mov
jl
loopne
jbe
jb
pusha
sbb
cld
scas
xchg
stos
jecxz
jge
in
pusha
popa
or
add
mov
je
xor
cmpsb
pop
subl
jmp
insb
stos
sbb
imul
xor
jecxz
ja
aaa
in
xor
in
push
jmp
mov
aam
stos
push
sti
fstp
cmp
mov
cld
enter
fsubr
movsb
adc
ffreep
rcr
lods
out
jns
wrmsr
jbe
jp
mov
call
int
pusha
inc
popa
sarb
xchg
imul
in
in
sbb
out
jo
xchg
out
sbb
inc
inc
adc
or
je
cld
outsl
out
add
lret
mov
icebp
push
jo
dec
and
lea
loopne
das
jmp
hlt
mov
mov
in
sti
fwait
inc
loop
enter
icebp
jl
aas
xchg
cmp
call
testl
adc
data16
push
pop
jp
inc
mov
and
cmpsb
shl
mov
cmpsl
pop
mov
sbb
xor
mov
push
outsl
sbb
and
add
ss
mov
push
cmpsb
add
movsl
xchg
das
leave
mov
scas
in
pop
or
stc
shll
pop
mov
subl
out
in
scas
sbbl
jb
mov
sbb
enter
mov
jecxz
lds
pushf
scas
inc
or
jbe
lret
xor
outsb
xor
ja
stos
mov
mov
jne
loope
jecxz
in
add
pop
and
mov
sbb
mov
out
movb
adc
lods
ficompl
mov
insl
in
fidivrs
repnz
xchg
mov
mov
mov
scas
bound
fildll
ds
jae
fildl
popf
xchg
push
and
cmpsb
inc
pushf
push
enter
es
out
dec
add
cltd
int3
jne
scas
mov
push
out
jns
divl
sub
call
loope
ja
fnstenv
jg
mov
mov
insl
outsl
stos
fwait
sbb
scas
pop
das
jae
icebp
mov
add
add
add
jno
jle
mov
adc
cld
xchg
ret
outsl
imul
jl
pusha
lret
push
mov
das
cmpsl
stos
fldl
pop
scas
out
pop
or
shll
pop
test
es
jb
add
or
mov
lret
mov
fwait
shr
iret
jne
int
fyl2x
lret
je
mov
xchg
mov
sub
fisttpll
push
pop
mov
imul
mov
mov
mov
andl
fcmovnbe
iret
push
jmp
jne
fcoml
lods
outsl
iret
mov
xor
shlb
in
xchg
int3
mov
sbb
cmpxchg
jo
cld
push
gs
test
adc
sbb
and
les
mov
stos
lods
stos
add
gs
icebp
dec
out
jle
out
jno
add
int3
push
test
push
addr16
or
add
xchg
mov
mov
mov
outsl
cld
sub
repnz
outsb
gs
sub
mov
rorl
adc
xor
pushf
add
ds
les
fwait
pop
push
into
iret
popf
fwait
cmp
mov
dec
out
fnsave
and
lcall
popf
rcrb
inc
mov
cltd
hlt
bound
js
xchg
sub
bound
fsubs
push
subb
loop
or
jmp
scas
sbb
popa
in
loopne
cs
pop
cmp
jmp
xor
sbb
fcompl
jl
push
xchg
xchg
pop
mov
lahf
shlb
icebp
mov
sbbl
fiaddl
pop
out
pop
and
lret
xchg
jmp
or
aaa
lret
xor
lret
mov
jmp
hlt
movsb
xchg
mov
mov
cmc
popl
adc
mov
mov
mov
and
add
ljmp
ds
xchg
sub
out
add
sbb
les
sbb
xchg
mov
mov
mov
mov
test
shrl
mov
cmpsl
jle
lea
into
call
xor
cmp
lods
mov
push
xor
mov
sub
mov
enter
sub
bnd
fdiv
out
jo
out
jle
jno
cmp
sbb
cmc
out
mov
cmp
imul
sub
adc
fwait
leave
inc
mov
aaa
jbe
pop
or
fildl
sti
xchg
pcmpeqb
cmovns
sbb
fwait
cltd
stos
cmp
movsl
push
mov
sti
lret
in
xor
adc
repnz
call
ljmp
jle
sub
sbb
pop
sub
xorb
into
push
iret
sub
xor
test
imul
mov
fistpll
dec
xchg
inc
inc
jae
mov
sbb
mov
arpl
leave
es
daa
outsl
push
leave
or
dec
push
out
lock
or
mov
push
mov
imul
lods
test
into
shll
movsb
test
andl
in
stos
cmp
push
fsubl
into
sbb
lret
inc
mov
or
push
xchg
cmp
mov
xor
enter
dec
adc
in
sub
icebp
mov
lock
sbb
mov
sbb
push
shrb
or
mov
das
jl
pop
in
or
mov
adc
loop
lods
lods
fisttps
fidivs
sub
push
xchg
aaa
cltd
out
or
lret
pop
mov
cmp
mov
insb
or
pushf
fsts
test
enter
mov
inc
jp
jae
popf
jne
frstor
sub
add
jae
mov
aam
fbld
push
ljmp
repz
in
out
das
dec
pop
sub
in
lock
stc
mov
mov
push
and
push
lret
mov
xchg
or
adc
push
jbe
mov
out
xor
xlat
out
fimuls
mov
dec
adc
fstps
cs
das
and
or
inc
popf
jl
mov
add
mov
or
xchg
ds
lds
sub
loopne
loopne
add
enter
clc
fbld
aad
stos
xor
leave
jno
repnz
mov
pop
shll
test
mov
sti
mov
mov
nop
xchg
inc
iret
aad
and
jg
aas
cmp
or
iret
lret
push
sub
add
adc
sub
pop
fldl
daa
cmpsb
sbb
into
dec
std
inc
jmp
inc
sub
stc
jbe
push
orl
shll
mov
lret
movsb
push
xchg
inc
lcall
nop
pop
iret
insl
pop
xchg
testl
cltd
jbe
mov
mov
cmp
jmp
rcr
in
fisttps
dec
lock
negl
aas
sahf
sbb
imul
jb
pop
mov
push
vcvtsi2sd
jl
inc
jl
xchg
cmpsb
inc
lds
sbb
rcll
fucomi
scas
or
xchg
push
out
sahf
jmp
pop
in
push
sbb
das
ret
mov
mov
push
mov
xchg
in
cmc
loope
ja
or
xor
hlt
mov
add
mov
imull
dec
adc
pushl
or
xchg
ss
shlb
ret
mov
repnz
jecxz
in
sbb
jmp
and
arpl
fucomip
ret
shr
jo
jmp
fwait
push
jne
push
add
jle
pushf
sub
pop
dec
jne
inc
stos
in
push
shl
enter
jmp
jmp
iret
outsb
cmpsb
lods
push
sub
int3
xchg
in
xor
movsl
jle
stos
stos
xchg
mov
push
jne
iret
push
adc
loope
loop
inc
sahf
je
scas
fistps
loope
xor
ja
push
imul
daa
lods
cmp
jl
lock
data16
repz
test
mov
jbe
out
pop
cmpsl
push
cmp
xlat
mov
pop
mov
fcmovnb
pop
es
fstp
xor
mov
lods
and
xor
jbe
add
into
lret
movsl
lods
jmp
push
lea
pop
xchg
js
mov
cmc
inc
in
faddp
in
mov
lock
out
fadds
ds
jbe
in
into
shl
cltd
push
es
push
inc
or
loopne
shl
pop
fbld
add
rolb
inc
test
adc
xlat
addr16
popa
pop
popf
or
test
mov
xlat
jge
test
shrb
jecxz
out
pusha
sub
testl
ljmp
sahf
xchg
pop
fs
aam
xor
repz
jge
cmc
movsl
lahf
mov
test
lahf
aad
mov
dec
les
lock
mov
stc
idiv
dec
cmp
add
mov
sbb
movsb
ljmp
lock
jle
mov
loop
stc
out
call
in
and
jmp
or
mov
inc
cmp
enter
nop
pop
mov
or
pop
out
jo
sub
xor
in
fists
test
jecxz
fildl
mov
mov
rcll
jno
and
mov
repnz
mov
lds
fistps
data16
out
mov
lret
int
xchg
fwait
outsl
mov
stos
insb
mov
out
jle
lock
cmpsl
rcr
fsubp
mov
pop
xchg
sbb
cmp
cli
imul
sub
scas
xor
imul
lock
imul
sbb
ljmp
hlt
mov
xlat
jmp
dec
mov
jg
mov
mov
std
jle
fwait
dec
jo
mov
mov
dec
insb
jle
jne
mov
mov
jmp
xlat
stos
lahf
push
mov
fs
out
mov
out
jmp
fcoml
outsb
out
repnz
cmp
lea
lahf
adc
mov
cmpb
call
pop
pop
pop
inc
mov
mov
xor
add
call
push
dec
cld
aas
out
xchg
repnz
bnd
xor
sbb
add
out
fcomp
loop
dec
push
sbb
jnp
lds
fs
fbld
in
int3
jle
jns
cmp
test
inc
adc
lahf
orb
mov
insl
pop
xor
rclb
mov
and
lock
pushf
xchg
cmpsl
ja
insb
fst
scas
inc
mov
loopne
cmp
inc
test
test
inc
cmpsb
cmc
repnz
pop
call
in
xchg
add
cli
stos
data16
fbld
in
pop
push
add
popf
adc
sub
es
fxch
popf
cmc
jp
sub
std
scas
cs
push
add
mov
cwtl
or
sbb
inc
xchg
fisttpl
xchg
pop
inc
fdivr
divl
outsl
call
add
sub
std
adc
mov
jo
loope
or
stc
sarb
mov
jg
jnp
out
xchg
mov
test
pop
hlt
lret
and
fnstcw
out
mov
lds
sub
jmp
arpl
insb
mov
or
shl
adc
roll
inc
lods
mov
clc
test
bound
bnd
dec
jno
ss
xchg
xor
call
loope
push
jo
mov
sahf
test
icebp
jmp
cmc
shrl
insl
mov
dec
push
jo
or
arpl
mov
rorb
loop
fisttps
cmp
add
into
std
int3
aad
pop
sbb
mov
inc
xlat
push
roll
es
xor
cmpsb
lahf
aaa
mov
iret
jecxz,pn
cmp
jge
in
jg
mov
outsb
inc
add
ljmp
sbb
mov
jbe
xchg
fimuls
mov
frstor
jmp
adc
or
inc
or
push
shr
jge
rcl
jg
mov
es
cmp
lret
mov
mov
adc
ljmp
test
xor
mov
lret
push
sti
lret
or
adc
repnz
pop
cltd
inc
mov
adc
or
lret
divl
push
test
sbb
push
fucom
dec
shll
xor
stos
jecxz
xchg
inc
es
sti
mov
dec
int3
cli
hlt
subb
ffreep
sahf
cltd
clc
arpl
ja
xor
fcomi
adc
insl
loope
or
xchg
inc
dec
movzwl
loopne
mov
ficompl
out
sub
int3
jbe
add
icebp
mov
outsb
and
inc
fs
in
inc
mov
sub
movsl
sbb
imul
pop
mov
fwait
repnz
push
xor
cmp
dec
push
out
inc
add
mov
xor
cmp
repnz
out
repnz
mov
iret
jae
sub
in
xor
outsb
or
icebp
jmp
fcmovnu
sarl
push
mov
xor
pop
push
push
cs
add
ror
jae
add
lods
fwait
mov
scas
hlt
stos
jb
imul
hlt
mov
orb
lods
icebp
ja
cmp
outsb
jb
add
cli
push
stc
hlt
pop
xor
xchg
lcall
in
pop
call
test
fistl
mov
icebp
pop
in
or
push
out
xchg
xlat
jae
push
jecxz
fldl
leave
jl
lret
mov
mov
jle
push
lock
jl
push
and
arpl
xor
jecxz
push
and
insb
xchg
imul
push
popa
jg
dec
push
ficoml
std
jne
test
cmp
mov
aaa
stos
cwtl
sub
add
lds
pop
pop
iret
push
stc
mov
ja
pop
jo
mov
sub
xchg
push
jo
roll
sbb
jb
mov
cli
sub
je
push
popa
iret
jb
rclb
movsl
lret
pop
sbb
stc
adc
sub
hlt
pop
inc
add
jg
dec
mov
inc
jmp
push
push
add
and
mov
negl
mov
lahf
ss
xlat
dec
negl
test
pop
inc
pop
cmp
mov
popf
scas
push
mov
ja
push
jp
mov
mov
pop
xchg
add
inc
rcrb
popa
jg
jg
fcmovu
out
data16
int
mov
ret
sbb
sbb
cli
jecxz
mov
add
add
inc
push
add
imul
mov
ret
cli
push
scas
icebp
push
mov
fistpll
int
adcb
cmc
pop
dec
jecxz
or
jns
cmc
test
loop
out
ja
popf
pushf
arpl
mov
into
out
sub
lret
jmp
fsubrl
fbstp
cltd
cmp
adc
mov
bnd
jp
enter
add
mov
sub
lahf
ret
aam
mov
mov
lods
bnd
jne
push
in
int
sbb
out
inc
sbb
xor
or
or
mov
inc
and
cmpsl
inc
dec
and
push
test
in
mov
xchg
out
or
pushf
adc
rcll
mov
fbld
lcall
fwait
mov
adc
fwait
mov
push
test
cld
xchg
loope
xchg
enter
repnz
mov
mov
jmp
push
dec
lods
xlat
jl
xchg
iret
mov
lret
outsb
xchg
jb
in
jmp
mov
and
enter
sub
inc
out
and
ljmp
stos
or
out
inc
lea
cwtl
or
and
mov
cltd
add
inc
movsl
xor
lret
dec
loop
repnz
or
pop
mov
xchg
jg
xchg
faddl
mov
pop
xor
jmp
sarl
mov
mov
mov
add
pop
mov
out
lahf
mov
jecxz
shll
in
cmpsl
jge
insl
push
mov
in
shll
jmp
jmp
test
add
mov
enter
xchg
hlt
js
insl
lea
mov
or
test
mov
sub
je
adc
or
fstpl
stos
fistps
repnz
cmp
cli
xor
jne
and
orb
out
dec
jmp
jl
cmp
fcmovne
lret
mov
xor
pop
gs
cwtl
icebp
scas
or
icebp
and
inc
mov
push
daa
popf
iret
jecxz
in
ret
sbb
in
mov
mov
fnstsw
and
push
stos
xchg
jmp
jge
das
jecxz
or
popa
inc
divps
mov
in
cmp
scas
jmp
pop
subb
jg
lahf
out
mov
in
jmp
fwait
xor
xor
jp
sub
loope
int
push
out
push
test
imul
pop
sbb
icebp
jl
ret
out
xchg
jge
std
xor
jb
sbb
leave
adc
xchg
cld
div
out
in
xor
data16
rolb
pop
jge
dec
cmpb
rolb
add
adc
xchg
lock
mov
mov
addr16
mov
adc
ss
push
imul
xor
cld
repz
data16
pushf
xor
lret
icebp
xor
arpl
sbb
add
and
out
push
pop
push
sub
xor
push
enter
in
mov
outsb
into
out
adc
jne
std
xor
imul
cli
sbb
das
fdivrs
ja
cmpsl
repnz
nop
into
xchg
leave
dec
xor
jle
jae
fucomi
jne
add
xchg
popa
stc
cld
mov
shrl
mov
pop
push
mov
sub
inc
dec
mov
inc
pop
or
jo
ljmp
aad
pop
mov
and
enter
mov
jle
ror
mov
aam
xchg
jecxz
cld
cmc
adc
xchg
sbb
inc
or
jmp
or
cwtl
dec
pop
xchg
mov
xchg
add
or
les
je
bnd
in
lea
cmp
inc
jmp
adc
xchg
jbe
aad
popf
cmc
mov
lock
repnz
pop
mov
pop
pop
es
sub
push
popa
mov
orl
lret
xchg
mov
ljmp
lea
mov
lea
ficompl
jo,pt
fidivrl
push
jne
ret
stos
pop
and
addr16
scas
jmp
int3
mov
call
aaa
jb
xor
ja
cld
andb
jns
ss
ror
dec
cld
pop
xor
jge
push
sub
and
xchg
inc
test
cwtl
push
pushf
bnd
jmp
jl
gs
mov
test
imul
stos
insl
mov
sub
jecxz
shrl
iret
fnstenv
xchg
in
fstpl
in
xchg
and
in
enter
stos
xchg
lea
jmp
dec
mov
jmp
imul
fprem1
xchg
cld
loope
cmc
pop
insb
leave
xor
mov
xchg
daa
jbe
jecxz
xchg
loope
sub
inc
sti
jge
pop
lods
sbbb
jno
mov
out
push
mov
push
call
push
arpl
mov
test
add
sti
sarl
pop
call
mov
jl
cmp
bound
int3
adc
subl
jmp
inc
cltd
int3
jae
imul
lret
arpl
or
dec
dec
jbe
sbb
lock
mov
mov
dec
arpl
mov
mov
imul
aaa
mov
jae
popf
sbb
xor
addr16
jl
pop
std
in
in
in
into
or
cld
das
pop
cmp
sahf
sbbw
xchg
iret
mov
ret
test
mov
imul
xchg
xchg
mov
cwtl
pop
mov
movsl
push
repz
in
std
pushf
pop
stc
and
lock
bound
bound
test
daa
aad
pop
fwait
jb
fistpll
repnz
loop
movsb
jno
movq
sbb
add
clc
movsb
jge
cmp
xor
stos
iret
add
sub
movsb
or
fcomps
or
rorl
cld
dec
xchg
iret
loope
xor
or
fs
mov
movsb
xchg
clc
mov
mov
pop
inc
xchg
fcomp
cmp
xor
cwtl
jle
inc
inc
shlb
movsl
jne
xchg
and
mov
mov
jl
cmp
xor
mov
xchg
or
scas
mov
xchg
sub
sub
push
rcl
repnz
or
mov
fistps
push
fs
jmp
xchg
and
ljmp
jb
jb
mov
outsb
and
stc
shll
fidivs
ret
testl
cmpb
xchg
lcall
mov
ret
aaa
pop
cmpsl
stos
shll
jg
orl
mov
shlb
cmp
mov
data16
push
in
mov
test
xchg
fbld
es
jne
movsb
xor
je
dec
lock
imul
jne
fcmovne
rorl
mov
rolb
pushf
sub
xlat
sbb
test
mov
push
stos
les
shr
mov
jbe
out
into
mov
out
push
cmp
inc
cld
mov
xlat
out
inc
xchg
lock
icebp
arpl
xchg
into
mov
mov
loope
outsb
push
mov
lods
daa
jo
lret
push
lds
nop
into
mov
bnd
xchg
jno
pop
insl
and
mov
popf
pop
xchg
xchg
or
mov
mov
xor
aam
mov
stos
cmp
addr16
or
push
repz
sbb
mov
popl
fwait
adc
popf
mov
in
loop
js
xor
subl
rcr
xchg
cmpsl
pop
pop
clc
jo
popf
pop
or
sbb
adc
call
add
and
lods
das
xchg
cli
jg
mov
outsl
push
xor
fisubs
pop
jne
add
fwait
jle
jne
mov
mov
ja
inc
jle
push
sbb
inc
mov
jo
int3
pop
ljmp
adc
dec
jb
por
ds
js
dec
sub
and
xchg
dec
cmp
sbb
or
ds
movsl
imul
leave
mov
inc
or
pop
mov
xor
fucomi
jae
and
mov
xor
jle
mov
jl
adc
loopne
inc
loope
shrl
jp
lahf
jb
bound
aas
paddsw
or
sub
lahf
fisttpll
push
cwtl
lret
aam
fwait
and
xor
stos
fwait
jle
jo
xchg
scas
jmp
hlt
mov
and
je
mov
ret
int
sti
push
xor
xchg
int
outsl
mov
jp
sbb
mov
jo
pop
mov
mov
fidivrl
fst
push
shr
mov
xchg
dec
jl
inc
loop
lcall
add
enter
mov
mov
pop
jne
adcl
ljmp
jae
mov
lret
pop
cwtl
adc
ljmp
mov
popa
or
mov
jp
push
pop
jbe
adc
push
mov
push
mov
popf
call
push
xor
jle
out
mov
sbb
movsb
push
int
push
outsb
loopne
bnd
mov
add
movsb
ret
fmuls
ja
jmp
inc
mov
in
or
xor
mov
pop
les
pop
into
lret
test
xchg
xchg
xor
mov
pusha
imul
in
cmp
xchg
scas
sbb
or
mov
mov
pop
mov
pushf
out
stc
jl
inc
in
sub
xlat
or
imul
mov
cli
inc
inc
int
or
add
pop
lods
jg
cld
push
jmp
jb
es
push
mov
shr
push
shll
out
dec
shl
out
dec
roll
dec
stos
jl
sbbl
lods
in
cmp
lret
test
stc
adc
sbb
push
add
jbe
xor
sbb
mov
sti
mov
pop
sub
jmp
or
pop
dec
pop
fs
xchg
out
sarl
lock
insl
int3
mov
jge
in
fdivr
shr
xchg
out
outsl
mov
cld
mov
aam
or
mov
mov
dec
neg
cmp
outsl
cwtl
loope
pop
popf
cmp
addr16
enter
sub
jne
cwtl
lods
sbb
ficomps
repnz
mov
inc
in
jmp
cmpsb
sti
jle
push
dec
cld
ja
inc
daa
lea
lahf
cltd
jg
test
cmp
jne
xor
sahf
cwtl
adc
enter
xchg
mov
cmp
hlt
sub
movsb
cmpsb
loop,pn
ret
outsl
fistps
hlt
sbb
outsb
call
icebp
scas
shl
jo
sub
out
outsb
inc
jnp
gs
add
out
jmp
mov
adc
daa
testl
add
out
xchg
test
aaa
inc
push
pushf
pop
pop
stos
add
jl
arpl
and
movsb
mov
inc
or
mov
pushf
daa
jns
mov
out
mov
adc
xorl
jno
sbb
dec
push
insb
jle
out
mov
sbb
popf
jp,pn
push
jle
mov
and
push
cmc
ss
addb
bnd
outsb
sbb
dec
inc
lock
lahf
idivl
je
loope
stos
into
adc
add
iret
out
jns
popa
cmp
iret
pop
cmpl
or
std
pushf
adcb
iret
pushf
add
into
pushf
je
insl
jmp
lret
jp
dec
xchg
mov
mov
xchg
mov
jne
lahf
xchg
loope
mov
scas
clc
popa
in
xor
enter
fmull
data16
add
mov
mov
out
orl
mov
xchg
into
out
cld
pop
xchg
popa
mov
sub
inc
fucomi
mov
out
inc
or
std
cmp
movb
lea
push
lret
push
xchg
xor
mov
test
cmc
daa
imul
enter
dec
mov
int
push
ret
out
adc
roll
push
dec
call
fwait
mov
cltd
in
adc
xchg
jg
sub
in
sbb
jo
repz
arpl
aad
and
aam
stos
sarl
sar
testb
jo
mov
adc
cmp
mov
pop
jne
lcall
push
rcr
lret
sub
ljmp
cmp
fs
push
arpl
sub
popa
adc
pop
mov
lods
into
xorb
fwait
or
insb
inc
imul
and
movsb
lret
mov
out
lret
rorl
push
adc
cli
fnstsw
xchg
xor
lock
xor
in
dec
cld
xchg
add
imul
outsl
rcll
jmp
fucomip
dec
cmp
pop
in
outsl
sub
push
push
cmpl
test
dec
iret
std
inc
or
negl
mov
mov
stos
out
and
push
sub
xchg
and
inc
test
mov
xchg
hlt
jge
frstor
icebp
mov
shll
mov
jg
lds
mov
insb
std
bound
adc
int3
sbb
ljmp
push
add
adcl
mov
mov
xchg
sbb
xor
nop
mov
pop
xor
push
dec
lret
enter
fdivrp
outsl
or
or
dec
or
cld
ljmp
mov
sbb
out
jb
sbb
jb
jmp
inc
lds
mov
out
aam
fs
xor
rol
xor
or
inc
lret
ja
cmp
repnz
aaa
dec
sub
or
sarl
shrb
and
dec
arpl
sub
dec
lahf
rorl
pushf
and
cmp
or
imul
lea
lods
add
cmp
mov
mov
push
in
cmc
movsl
xor
in
sub
scas
insb
xchg
dec
xchg
fstl
aaa
mov
add
and
pusha
addr16
mov
push
repnz
push
stos
pop
jle
out
notl
data16
mov
add
sub
or
cld
or
test
xchg
stos
rcrl
sbb
jle
rcrl
cltd
cmp
xor
imul
mov
pop
adc
or
or
mov
fildll
out
out
or
in
add
push
and
mov
push
imulb
idivl
jg
das
imul
lret
leave
bound
aas
pop
jle
mov
adc
ret
cmp
push
add
push
pop
or
sub
jg
mov
rcll
adcb
pop
pop
sub
das
data16
push
push
cmp
lods
push
xchg
sbb
aaa
push
pop
daa
or
ljmp
push
loope
iret
insl
pushf
stc
popw
dec
sti
idiv
hlt
adc
out
jmp
cmp
stc
and
adc
mov
rorl
scas
sub
mov
jecxz
or
and
std
std
fcmovu
xor
addr16
into
mov
iret
push
cmp
xchg
iret
mov
jae
movsb
orl
dec
scas
mov
in
dec
sub
sub
test
cmp
pop
out
aad
fucomip
mov
cmpsl
cli
cli
jmp
lds
shlb
roll
push
je
test
sbb
push
pop
xchg
dec
ficomps
ja
xchg
sub
mov
mov
out
mov
daa
imul
xchg
push
in
dec
adc
enter
jno
and
out
repnz
adc
push
pusha
xor
adc
callw
pop
pusha
mov
mov
jle
pop
out
outsl
mov
fwait
iret
aaa
insl
xor
jns
cli
mov
mov
mov
cli
test
stos
test
inc
push
in
cmpb
xchg
mov
mov
pop
push
seta
xchg
mov
dec
ret
mov
out
arpl
movsl
push
xor
xchg
out
xchg
sbb
adc
mov
pop
arpl
insl
mov
movsb
cmpsb
push
push
out
loope
cli
scas
int3
add
jecxz
cmc
inc
dec
xor
aad
pusha
insl
insb
mov
lea
negb
sub
push
cli
jle
daa
leave
in
ret
ja
lods
or
jecxz
sub
fildll
inc
iret
add
int
outsb
or
shr
and
mov
sbb
mov
lock
enter
sbb
xchg
loop
shl
xlat
popa
ja
icebp
adc
fadds
insl
int3
pushf
mov
out
mov
cmp
fwait
push
jbe
cmp
add
popf
mov
adc
jae
icebp
jle
or
bound
xor
sahf
mov
jg
xorl
jmp
jle
out
sti
xor
in
cmpsb
scas
add
dec
arpl
adc
inc
inc
xchg
mov
mov
jb
out
cmc
int
and
sbb
mov
mov
mov
sbb
fimull
negb
mov
lock
fdivrs
xor
stos
ja
push
scas
lret
pop
or
scas
jp
sbb
sbbl
mov
xor
xchg
jb
repnz
xchg
jmp
jnp
pop
cmp
inc
sbb
mov
jne
icebp
push
fucom
or
sub
sahf
leave
ret
in
and
gs
test
mov
lock
ja
add
mov
jne
xor
cmpsb
sahf
not
add
inc
pop
lods
jmp
xchg
adc
imul
jbe
outsb
mov
call
sub
sub
out
adc
scas
filds
imul
sub
loopne
scas
sub
sbb
sub
sub
pop
ss
jp
cs
std
das
jecxz
test
add
jno
mov
mov
fmuls
mov
or
xchg
push
stc
xchg
sti
mov
dec
pushf
stc
movsb
push
popa
lods
mov
paddsw
in
sbb
mov
movb
cmp
test
leave
out
scas
pop
jl
int3
shrb
jecxz
sub
dec
cld
loop
daa
loope
pop
pop
dec
lods
sub
divl
mov
int
push
sub
ljmp
sbb
or
and
or
js
ret
push
stos
pushf
mov
das
call
je
lahf
add
xchg
sub
pop
testl
adc
jmp
imul
jbe
clc
stos
mov
in
jne
dec
mov
inc
shll
dec
aad
lods
fistpl
filds
lods
shrb
jmp
mov
aaa
sbb
imul
sub
fcompl
stos
ret
mov
and
ret
nop
imul
leave
pop
dec
sub
int3
jo
mov
rcr
scas
aam
mov
jno
das
adc
sub
movsb
xor
fwait
xor
and
enter
push
cmc
imulb
or
sbb
call
sti
dec
xchg
mov
loopne
pop
stos
jle
sarl
je
pop
mov
aas
xchg
idivl
xchg
or
dec
sub
out
shl
cmp
mov
cwtl
pushf
rorl
jl
add
xchg
jne
push
mov
pop
add
jo
and
sub
mov
ja
mov
mov
gs
scas
add
call
loopne
fldcw
mov
pop
mov
mov
or
and
mov
imul
out
lret
imul
int
frstor
call
daa
fsubrl
jp
push
stos
pop
push
shrb
iret
scas
fdivrl
rcll
shrb
jb
cli
push
jo
mov
int3
sti
dec
mov
mov
ja
xor
mov
xchg
mov
sti
mov
inc
mov
lcall
imul
jecxz
rclb
pusha
movl
add
scas
sbb
sbb
in
cmp
pop
xor
loope
popf
adc
movsb
xor
out
cld
scas
out
lock
dec
push
lds
dec
test
shll
jne
addr16
xchg
adc
je
push
sub
scas
mov
adc
cmp
sbb
scas
add
xchg
push
xchg
pop
popw
fisttpll
sbb
sbbb
mov
sbb
mov
or
mov
enter
in
sub
cmp
mov
repnz
mov
inc
test
popf
xchg
lods
dec
test
jmp
sub
xlat
xlat
std
fstpt
jg
xlat
or
mov
dec
add
aas
cmp
movsb
xor
push
in
mov
pop
xor
cmpsl
push
movb
add
pop
cmp
pushl
xor
xchg
sahf
fisttps
pop
ret
imul
out
sbb
adc
xor
pop
pop
push
pop
xor
inc
cltd
ja
int3
lret
cwtl
push
cmpsb
pop
into
stc
rcll
or
arpl
popa
fcomi
push
dec
rcr
mov
or
pop
rcrl
nop
fsts
mov
sbb
popa
ret
leave
ds
test
ljmp
push
loope
iret
or
repnz
push
mov
rcrb
inc
xchg
rolb
loopne
dec
sub
jo
dec
bound
jb
or
decb
leave
xor
jae
mov
dec
rcrb
sub
div
cmp
or
call
mull
les
cmc
sbb
adc
or
stos
in
push
mov
sti
jg
jmp
jp
loopne
jno
mov
cwtl
shl
mov
out
jle
aad
jmp
adc
push
out
jno
sbb
jne
mov
cmp
or
jle
mov
sub
in
movsl
mov
imul
push
stos
pusha
mov
jg
mov
insl
mov
frstpm(287
fidivrl
adc
jg
jns
loope,pt
jne
jae
mov
je
mov
xchg
shrl
imul
clc
lock
pop
out
or
fs
popf
dec
icebp
or
jmp
pop
pop
shrb
scas
adc
push
jp
inc
jecxz
data16
pushf
pushf
cmp
cs
or
jnp
jmp
pushf
add
scas
aam
cmp
pop
mov
test
int3
aam
aam
les
into
pushf
das
mov
test
movsl
adc
cltd
jb
push
push
lock
ss
jo
cmpsb
sub
push
std
insl
mov
jmp
aas
push
shrb
cmc
mov
rsqrtps
lock
filds
jb
xchg
sbb
hlt
test
pop
pop
negb
cmpsb
pushf
lahf
fdivrs
out
mov
xor
pop
les
ss
mov
sti
iret
gs
inc
ss
movhps
lahf
jg
int3
adc
sub
adc
outsl
aaa
mov
xor
add
cmp
aam
push
and
and
sub
stos
and
movsb
cmpl
push
jmp
jae
inc
out
insl
mov
cmp
jecxz
into
xchg
xchg
ret
push
je
mov
add
xchg
mov
pop
stos
jnp
rcll
imul
mov
bound
ret
loop
push
scas
out
imul
xor
icebp
mov
inc
in
fbstp
push
aad
imul
ljmp
jmp
test
mov
pop
movsb
sbb
addr16
in
fucomip
sarb
adc
mov
cld
jecxz
jno
scas
cld
ljmp
adc
out
mov
movsl
cmp
loope
sbb
mov
lods
nop
lret
mov
sahf
xor
mov
xlat
jg
pushf
adc
mov
out
jbe
push
test
movsl
mov
loopew
pushf
dec
int3
mov
je
shl
xor
ljmp
stos
insl
lods
incb
lods
and
xor
pop
je
pop
lock
clc
mov
mov
stc
imul
orl
lds
mov
lea
mov
hlt
sub
sbb
fisttpl
sti
mov
add
mov
push
push
dec
pop
call
adc
out
dec
repz
mov
add
shlb
das
cli
add
add
fcomps
imull
dec
pop
int3
and
adc
xchg
iret
dec
fstp
push
in
add
mov
jb
push
xor
mov
rol
xor
jnp
test
les
adc
jns
loop
or
inc
mov
push
leave
sarl
xor
lahf
popa
mov
leave
in
jne
lock
mov
push
xchg
xor
sub
jne
fisttps
sbb
and
push
or
or
adc
push
mov
cld
movsb
es
fistpl
push
push
push
mov
out
xor
sub
mov
sub
test
dec
int3
in
clc
cmp
test
popa
sti
dec
inc
mov
loope
dec
inc
xchg
dec
loope
add
cwtl
add
and
in
dec
or
and
cwtl
mov
out
sbb
neg
ljmp
lret
or
xlat
jl
add
inc
lret
stc
shrl
sbb
and
sbb
mov
xchg
jmp
jae
or
dec
mov
mov
ja
loopne
test
shlb
dec
mov
mov
ljmp
imul
mov
fstpt
lea
icebp
loope
ja
scas
push
or
imul
or
scas
popf
xor
arpl
rorl
mov
adc
sbb
fdiv
xlat
in
pop
lods
mov
iret
jl
cmp
and
fucomip
cmpsb
fcmovne
nop
iret
mov
imul
or
add
mov
xchg
out
or
enter
mov
int3
icebp
je
cs
jp
pop
data16
iret
cmp
jo
sbb
movsl
iret
jno
cmp
jge
lods
stos
in
mov
lret
ffree
adc
movsb
inc
push
movzwl
sub
int3
mov
das
std
ret
test
sbb
adc
or
jno
mov
popf
ror
jl
adc
jp
int3
add
enter
aad
lahf
push
test
or
lea
cmp
fcoml
scas
jmp
pop
loope
jecxz
jecxz
lock
and
stos
scas
js
or
xchg
sub
daa
je
dec
jbe
dec
fidivrl
sub
pop
das
or
hlt
cmp
xlat
ret
js
stos
mov
addb
fdivr
jl
out
and
adc
jecxz
jne
xor
pop
stc
icebp
push
pop
xchg
or
mov
xlat
cmp
in
xor
xchg
mov
ljmp
call
mov
adc
aam
mov
outsl
pop
daa
scas
mov
or
aaa
fiadds
xlat
sarl
mov
mov
fldcw
hlt
and
rcll
std
icebp
into
popf
scas
jecxz
pop
dec
push
mov
inc
push
or
xor
int
jbe
arpl
dec
adc
pop
das
inc
mov
fnstenv
xlat
hlt
jno
mov
pusha
nop
pop
pop
shr
shll
push
jno
dec
repz
iret
dec
xchg
addr16
lods
add
loop
push
fisttps
fisubs
sbb
leave
lea
adc
mov
xchg
loope
cmpsl
lret
enterw
sbb
in
jae
lock
bound
xchg
out
or
div
dec
lods
lods
xlat
into
push
or
ljmp
xchg
pop
mov
mov
jl
call
mov
or
push
sahf
sahf
clc
adc
lock
adc
incl
pop
jae
icebp
pusha
xchg
repz
je
xchg
aaa
daa
mov
xchg
push
or
loope
dec
pushf
jl
andl
jae
ljmp
dec
cmp
cmp
push
xor
rcrl
inc
les
insl
adc
iret
outsb
adc
pop
faddl
loop
add
test
mov
xchg
andb
dec
pop
es
scas
repz
add
test
jbe
add
xor
xorl
jne
sahf
dec
inc
imul
out
loop
jle
adc
push
test
in
sti
jbe
ss
add
mov
mov
popa
call
stc
xor
lock
ret
mov
and
or
testl
lcall
push
filds
shll
std
pop
adcl
adc
aaa
cmpsl
iret
fstpt
pop
mov
jecxz
sub
mov
and
pop
fistps
fbstp
in
cmp
xchg
or
into
fldt
jp
into
push
or
cmp
add
and
cld
hlt
pop
mov
sub
aaa
and
es
inc
xor
jnp
mov
add
xchg
fiaddl
incb
xor
xor
paddusw
psrlw
ds
xor
lock
mov
dec
inc
push
pop
cmp
fistpll
dec
add
mov
xlat
fstpt
scas
jbe
pop
xchg
idivl
xchg
sahf
das
arpl
pushf
cmp
int3
sti
sahf
popa
pop
adc
or
movsl
insb
push
iret
dec
sub
mov
aas
fdivp
cmpsb
loope
call
dec
lds
sub
inc
push
push
arpl
or
mov
shlb
enter
inc
dec
xor
aas
shlb
sub
sub
int3
scas
dec
ja
jb
push
out
cs
cld
mov
ret
or
jp
stc
mov
push
stc
out
mul
bound
stc
push
inc
and
jecxz
aad
stos
cmc
pop
jne
push
in
pop
xchg
lahf
xchg
pop
iret
jbe
scas
aas
and
cmp
scas
ds
or
ret
mov
inc
mov
dec
lret
fwait
cmc
ficoml
jbe
lods
cmp
mov
dec
aam
cmp
inc
scas
addr16
inc
testl
adc
out
mov
mov
rcrb
xchg
into
je
shl
dec
daa
sbb
test
ss
sbb
cmp
xchg
xchg
dec
jmp
and
pop
mov
xlat
cli
fiadds
ja
data16
cmpl
je
jae
adc
or
cmpsb
pop
dec
lods
and
jae
cmp
xorb
stos
loop
pop
sbb
mov
or
daa
lds
xchg
ret
mov
fcompl
popa
out
rclb
or
push
in
insb
pop
test
inc
mov
sti
dec
pop
or
stos
aad
adc
gs
imulb
loopne
cmp
mov
rcr
xchg
mov
jle
jno
or
xchg
lea
insl
and
mulb
stos
lret
sub
jge
pop
mov
xlat
out
rcrl
mov
rorl
mov
sub
in
mov
mov
inc
fidivrs
and
adc
inc
sbb
aad
aam
sahf
ss
inc
jge
cltd
je
es
dec
mov
shl
ficomps
call
negl
mov
movsb
gs
out
cld
dec
loope
stos
jo
push
jmp
add
push
sub
inc
xor
fdivrp
jbe
scas
jle
add
or
pop
loop
push
ss
jne
xlat
dec
sahf
ljmp
sarb
cmp
pop
cmc
mov
stos
call
int
fistps
sbb
test
loope
cmp
xor
repz
pop
mov
in
out
xor
rorl
jmp
test
jb
xor
shlb
sbb
ret
dec
data16
lahf
je
iret
loopne
filds
mov
ret
rol
shrl
and
jmp
push
into
pop
bswap
paddq
stos
sti
adc
xchg
lea
push
mov
xor
daa
xor
pop
out
icebp
fdivrl
in
out
push
cmpb
loopne
cmp
fldenv
jle
mov
sub
lret
mov
add
pop
xchg
repz
xchg
and
scas
mov
mov
es
sti
xlat
sub
out
mov
ja
clc
test
fwait
ds
xchg
cltd
ds
jge
stos
and
sub
shlb
aad
out
mov
xchg
in
aam
fists
mov
and
or
fs
cwtl
cmc
xchg
pushf
mov
call
mov
pop
lret
shll
mov
mov
out
mov
movsb
jp
das
dec
call
cmp
jle
hlt
mov
mov
mov
imul
jne
lret
push
xchg
movl
push
xchg
ret
outsl
addr16
mov
ffree
sub
sti
xchg
mov
cli
or
and
in
data16
jae
mov
pop
jg
in
mov
lea
out
in
mov
sub
jp
lds
cmpsb
push
pop
stos
dec
sub
pop
jle
mov
mov
mov
mov
sbb
lock
shl
test
stc
mov
push
imul
jg
dec
mov
ds
inc
leave
add
scas
iret
xor
les
mov
push
stos
jg
mov
sub
out
jno
pop
xchg
jecxz
dec
and
lds
cmp
ds
inc
nop
out
popa
inc
mov
mov
ja
cwtl
aaa
xor
sbb
pop
adc
inc
int3
loope
or
je
xor
das
pusha
stos
sbb
int3
push
fnstenv
movsb
inc
adc
outsb
jo
or
adc
sbb
decb
mov
xor
mov
push
xor
xor
sbb
sub
lret
push
jb
sub
xor
lds
sbb
pop
adc
jb
mov
loope
inc
pop
ss
xchg
cli
mov
sbb
mov
test
cmp
mov
sbb
enter
data16
call
sub
push
push
aam
and
lret
imul
test
ja
adc
lods
dec
sti
in
mov
mov
sub
stos
lret
or
fldt
lret
in
push
push
rclb
mov
int3
jne
movsl
ret
pop
or
icebp
sti
xchg
ljmp
pop
cmp
stos
inc
dec
sub
inc
xor
fisubs
out
hlt
int
imul
inc
or
cld
push
in
pop
jb
or
cmp
fldt
push
stos
cmpl
xchg
jno
inc
loopne
enter
std
mov
jo
xor
test
aaa
push
xchg
enter
mov
je
jecxz
enter
subl
test
iret
gs
jg
addr16
ljmp
call
mov
xor
jb
pop
jne
popa
stc
or
mov
popa
jg
cwtl
add
xchg
dec
ret
xchg
aaa
mov
sub
scas
fndisi(8087
outsb
scas
lock
sbb
call
mov
loopne
sbb
das
xchg
or
push
adc
inc
loope
add
ret
popa
mov
sarl
pushf
add
rclb
dec
jge
sub
inc
push
bnd
or
test
push
pop
mov
sbb
movsb
mov
shll
lock
xor
dec
into
dec
add
adc
mov
pusha
call
stos
mov
dec
push
mov
or
ss
les
sub
jae
pop
lcall
aam
mov
sti
push
lock
ret
jge
mov
mov
out
cwtl
mov
xor
je
ror
cmp
push
mov
divb
insl
stos
mov
jae
test
fstpl
jmp
aad
hlt
fsubr
ja
pop
and
mov
ret
push
mov
insb
cmpsb
and
inc
rol
xorb
sahf
orb
aam
push
sti
inc
fists
xor
push
lock
or
pop
ja
outsb
push
sti
in
loope
add
ds
into
mov
jecxz
and
nop
inc
mov
movsl
fucomp
enter
mov
lret
je
mov
in
out
daa
stos
pop
inc
push
add
xlat
ja
bnd
adc
fdiv
jbe
xor
xlat
sub
mov
or
dec
jmp
ja
or
imul
movsl
sbb
push
repz
test
cmc
lods
xchg
mov
and
fsubs
testl
iret
jbe
jns
xchg
mov
or
mov
test
mov
enter
jmp
push
aas
cs
pop
les
addl
push
jmp
jbe
in
mov
fsubrs
mov
cmc
cmpxchg
jecxz
loope
in
xchg
mov
repnz
out
mov
inc
xor
sbb
xor
jb
in
popf
jmp
daa
mov
pop
cli
pushf
dec
and
add
scas
loopne
aaa
xor
mov
popf
push
mov
add
lret
out
pop
cmc
xchg
decl
push
loop
repz
jmp
movsb
aaa
xchg
int
cli
fnsave
icebp
dec
std
sub
xchg
sahf
data16
inc
inc
mov
dec
cld
mov
pop
punpcklbw
push
lock
mov
ja
add
mov
js
mov
mov
stc
or
cmp
dec
fdivs
and
add
and
jle
jg
xor
scas
sub
mov
mov
fimull
inc
adc
enter
push
std
inc
test
fldl
ficomps
or
sub
jg
pop
pop
fdiv
popa
or
jmp
call
xchg
repz
and
jmp
dec
push
mov
pop
xchg
stos
xchg
add
add
sub
xor
jle
adc
push
mov
sub
inc
in
mov
jle
mov
cmp
xchg
pop
inc
fwait
int
mov
xchg
ljmp
mov
xor
push
cwtl
mov
dec
ret
cmp
and
ret
enter
add
cmpsl
fcmovu
mov
pop
lock
test
fidivrs
lret
lods
jg
cmp
xchg
lods
mov
fldenv
xchg
lock
or
xchg
fnstsw
cwtl
shlb
cmp
sub
movsl
aaa
xchg
loope
adc
dec
out
aaa
jb
xor
test
jo
ret
outsl
movsb
add
fbstp
xchg
jg
jl
sub
sub
sub
not
xlat
stos
fwait
mov
xor
je
mov
fwait
or
mov
in
push
or
icebp
repnz
je
mov
adc
leave
mov
movsb
ret
popf
or
imul
shll
xchg
or
sbb
in
gs
cmpl
mov
mov
sarl
cmc
mov
test
test
or
movsl
push
ljmp
data16
mov
jns
loopne
out
test
mov
repnz
mov
sub
pop
movsb
mov
and
pop
insb
cltd
inc
scas
dec
jle
sti
lods
leave
cmp
inc
mov
mov
push
jg
dec
adc
jbe
and
sbb
add
mov
negl
add
pushl
push
cli
push
sub
sub
test
test
mov
int3
xchg
pop
ds
pop
test
hlt
outsl
and
and
inc
aam
out
in
daa
and
imul
loope
fsubrs
xchg
loop
scas
xchg
inc
inc
iret
xlat
daa
xor
mov
pop
mov
bound
cltd
sti
es
js
inc
addb
call
idivl
or
movsbl
xchg
sti
je
jg
cmp
xchg
movb
and
inc
sti
dec
insl
fstps
xchg
pusha
cmp
ret
testl
cmp
gs
mov
out
cwtl
lret
leave
pushf
leave
jg
aaa
mov
inc
decl
jno
imul
jmp
lock
or
sub
inc
jne
or
sub
filds
loope
fldl
inc
push
repz
adc
push
leave
popf
xchg
sti
adc
jne
sub
xor
jecxz
scas
test
jns
stos
enter
int
mul
outsb
and
inc
pop
hlt
aam
rclb
xor
cmpsb
jg
in
fisubl
scas
mov
psubusw
hlt
cltd
pop
sub
push
sahf
xchg
or
cmpsb
push
jo
or
imulb
shrl
sbb
iret
jno
pop
jbe
pop
aaa
pop
insb
lret
leave
popf
dec
mov
mov
out
xor
int
aam
mov
jns
and
mov
andl
mov
loope
jg
dec
dec
and
data16
enter
cmp
mov
jne
aad
xchg
jno
and
xchg
mov
fidivs
pop
lods
in
out
xchg
mov
mov
sub
push
push
mov
and
adc
fwait
mov
push
leave
mov
test
out
adc
out
sub
or
add
jo
pop
mov
call
cmpsb
sti
stos
shl
insl
mov
pushl
jmp
addr16
push
imul
xor
mov
cltd
fdivs
out
jg
inc
popa
pop
mov
dec
insl
mov
adc
push
sar
scas
dec
shrl
mov
enter
ret
xor
xchg
xchg
xor
scas
movsb
dec
mov
stc
mov
cmc
lea
test
popa
data16
icebp
xchg
imul
and
jl
loop
lret
in
std
fidivl
loopne
cmp
xor
jae
clc
test
sbb
mov
sti
xchg
test
push
mov
leave
jnp
inc
int3
sahf
push
outsl
leave
fisttps
xchg
inc
inc
cltd
pop
jg
lret
and
mov
shl
xchg
das
xchg
scas
adc
sub
or
mov
and
xor
mov
loop
adc
imul
dec
mov
sbb
mov
fucomi
jne,pt
sub
loop
popa
test
add
adc
sub
xchg
test
out
push
jge
xchg
sarl
inc
xchg
inc
lods
js
ror
test
mov
pushf
fwait
push
sti
xchg
dec
ljmp
shll
push
cmp
mov
pop
mov
imul
mov
lret
cwtl
mov
pusha
pushf
push
mov
push
cmp
test
pushf
cmp
inc
and
jbe
push
or
push
pushf
stc
test
jns
mov
jle
loope
mov
aaa
into
arpl
pushf
iret
adc
inc
popa
cwtl
stc
int3
push
data16
imul
int3
adc
push
lock
imul
jb
jae
xor
add
in
sarl
in
outsb
add
dec
movsb
insl
out
pop
int
in
or
mov
scas
and
push
ja
push
or
dec
inc
jae
add
sub
arpl
stos
shll
sub
sub
ret
pop
sahf
jecxz
mov
jo
ss
mov
lcall
scas
lea
lret
cmpsb
jecxz
outsl
cmpsl
imul
loopne
mov
push
subb
sub
shrb
fidivs
imul
mov
sbb
and
rorb
mov
loop
iret
popf
adc
in
aam
xor
sbb
add
roll
push
mov
push
dec
bound
mov
outsl
pushf
lock
loope
out
jo
imul
jmp
xchg
mov
iret
sahf
adc
outsl
mov
cltd
fstps
dec
shr
cld
cmp
sub
jb
mov
mov
gs
and
jno
jbe
loopne
push
add
add
xchg
aam
inc
mov
std
insl
xchg
insb
js
out
clc
shll
or
pusha
push
push
inc
push
fldenv
fwait
test
xlat
dec
pop
push
and
add
mov
or
xorl
int
test
inc
cmp
push
leave
add
mov
pop
movsb
in
in
add
or
sbb
lea
fwait
push
add
pop
pushf
out
lea
or
push
mov
fcoml
je
fs
cmp
stc
fcmovnbe
jl
call
sbb
bound
stos
pushf
fldt
dec
mov
loopne
or
xchg
in
mov
sub
scas
pop
insl
loop
jg
in
mov
mov
jb
data16
xlat
jecxz
out
icebp
loopne
aas
stos
hlt
inc
inc
mov
dec
fimuls
cltd
rcll
mov
xchg
repnz
cmc
enter
outsb
lods
jecxz
stc
aad
jl
pushf
pop
inc
inc
add
pop
push
das
or
stos
scas
lcall
xchg
inc
into
fnstsw
mov
in
push
outsb
test
cwtl
mov
add
rorl
and
enter
idiv
sub
or
loopne
outsl
faddl
les
shrb
loopne
push
ljmp
sti
cmp
mov
ret
shlb
add
mov
pop
mov
pop
daa
into
popf
jmp
test
std
mull
scas
sub
mov
sti
ret
rcr
push
mov
sub
outsl
out
or
mov
mov
out
add
cwtl
add
mov
inc
iret
call
cmp
cmp
fsubl
jbe
or
imul
jmp
pop
shlb
loop
imul
lret
mov
mov
mov
out
inc
mov
add
inc
pop
mov
mov
das
push
fnstenv
jno
dec
es
jmp
fistpl
xchg
out
or
add
and
call
outsb
or
inc
ljmp
in
jp
mov
out
aad
jbe
outsl
inc
pop
into
jo
cld
or
xchg
sub
lods
jbe
xchg
dec
push
aam
and
jp
dec
imul
jo
mov
fucomip
sub
int3
pop
and
in
xor
or
mov
in
cmp
fnsetpm(287
outsb
loope
xor
test
jmp
and
mov
cs
pop
or
dec
iret
mov
sbb
icebp
push
xlat
jb
loop
rclb
les
adc
mov
div
push
in
fnstsw
js
lea
cs
xchg
outsb
in
dec
ror
test
rcrl
mov
fistpll
les
ss
fnsetpm(287
addr16
sub
pop
jecxz
out
push
in
icebp
pushf
or
fisubrs
jo
out
roll
sarl
lret
mov
fsubrl
fwait
dec
sub
inc
lock
push
and
aad
fwait
sbb
xor
icebp
push
arpl
inc
in
pusha
scas
mov
mov
call
or
jbe
mov
cmpsl
fs
dec
int3
sti
mov
fnstcw
push
or
int
out
push
ret
rol
xor
and
sub
scas
mov
aad
loopne
adc
icebp
sub
testb
push
or
cwtl
popf
dec
jne
stos
cld
dec
pop
mov
push
xchg
sub
out
mov
add
jle
repz
out
jle
mov
pop
mov
mov
loope
or
inc
in
or
ss
or
sub
or
push
add
clc
xchg
sub
aam
add
xor
das
loopne
adc
dec
fistl
mov
push
mov
sbb
mov
add
orb
shrb
xor
out
lock
sub
jge
inc
rorl
add
int
bound
sub
mov
mov
sbb
loop
and
jo
jmp
mov
pop
mov
leave
inc
hlt
push
arpl
mov
xor
or
inc
pop
in
call
stos
jl
jo
addb
and
stos
out
mov
sbb
shlb
xor
mov
cmp
hlt
in
jle
test
jo
lods
sub
push
or
jbe
dec
stos
popf
sub
jg
fldl
call
ljmp
dec
hlt
xchg
inc
aad
cli
test
and
mov
mov
test
fcmove
js
stc
in
lock
popa
sub
mov
mov
mov
das
or
or
cmp
xor
imul
jge
pushf
dec
rorl
loop
iret
inc
call
ds
repz
jne
push
loopne
jg
inc
pop
add
xchg
cmc
test
jae
mov
mov
jo
jnp
imull
xchg
mov
lods
xchg
xchg
jno
xor
nop
enter
outsl
push
out
icebp
or
mov
int
jg
cmpsl
lock
push
mov
ljmp
dec
lret
lds
daa
mov
mov
sub
pop
jmp
adc
or
pop
cld
sub
call
fsub
out
inc
and
or
ljmp
push
sahf
loop
into
pop
lods
jg
popf
ljmp
pop
je
dec
mov
insb
pusha
icebp
scas
adc
xchg
stos
push
jne
pop
add
sbb
pusha
adc
mov
adc
int3
jl
fs
in
add
sbb
push
into
jbe
add
mov
xchg
add
mov
int
pop
pop
sub
insl
jecxz
pop
jne
out
hlt
or
sub
dec
outsl
je
mov
jecxz
fcmovnbe
arpl
testb
adc
add
jp
cmpsb
arpl
enter
xor
and
mov
in
mov
xchg
in
dec
leave
cmp
mov
pop
pop
fwait
in
mov
inc
insb
mov
sbb
sbb
insl
data16
pop
and
push
sti
adc
xchg
pushf
push
mulb
jg
in
sbb
adc
and
hlt
push
dec
rcrb
sub
jb
jb
ds
pop
or
aaa
stos
and
pushf
cmp
dec
rorb
cwtl
add
imul
cmp
add
inc
lahf
push
pop
sub
shll
rcll
into
sub
or
push
sbb
mov
jae
lock
imul
aaa
jne
outsl
stos
lret
hlt
sbb
pop
jecxz
xchg
scas
jmp
mov
pop
xchg
push
popa
pushf
cmp
lret
fiaddl
inc
pop
adcl
arpl
ja
jb
cmpsl
ljmp
mov
pushf
imul
push
push
loopne
add
add
nop
jne
or
sbb
into
loope
jnp
lock
aam
test
orl
testb
dec
scas
es
nop
cwtl
jno
or
or
sti
fimull
leave
jne
xor
add
cmp
faddl
sbb
push
and
ja
jnp
push
addr16
ss
loop
mov
sbb
shll
cmp
mov
sar
insl
pop
mov
sub
out
cwtl
ja
push
mov
jo
dec
test
fidivrl
icebp
fisttps
cli
jne
xlat
sbb
lcall
mov
mov
xchg
addr16
sub
shr
and
cmp
loop
psrld
inc
bound
lock
and
in
dec
or
push
cltd
pop
jmp
je
push
adc
and
insb
loop
jg
shr
sbb
cld
cwtl
rorl
mov
mov
test
les
incl
mov
fistl
pusha
xor
mov
or
xchg
xlat
or
into
sbb
cwtl
inc
adcl
and
lock
enter
or
sub
push
insb
enter
aad
add
and
movsb
xor
cwtl
icebp
xlat
or
into
sti
dec
push
dec
fldcw
pop
daa
cmpsb
fucomip
push
dec
inc
cmp
loop
sub
ja
push
loopne
jae
cwtl
popa
fucomip
imul
scas
jbe
lahf
rorl
shl
outsl
int3
dec
call
or
insl
popf
ret
push
jmp
mov
movsl
lret
or
mov
js
stc
jne
xlat
mov
insl
in
bnd
pop
popf
sub
leave
fs
jne
out
cmp
and
cmp
insl
push
mov
inc
enter
or
jmp
repnz
add
lret
cmp
stos
shrl
mov
sbb
out
sbb
mov
shrl
or
jo
jne
pop
arpl
icebp
data16
mov
popf
mov
xor
data16
ret
movsl
cmpsl
gs
or
xor
inc
dec
mov
push
pushf
test
dec
data16
mov
adc
jbe
adc
adc
in
dec
lret
mov
pop
faddl
push
fdivs
pop
out
in
xlat
scas
repz
jp
int
test
shrl
fucomi
cmpsb
or
xchg
getsec
test
lods
adc
mov
stos
jnp
lret
jmp
add
shrb
lods
out
scas
into
test
rol
pop
cwtl
mov
pushf
jmp
mov
lock
cmc
inc
and
jl
int
subb
and
mov
int
das
jle
stos
iret
inc
inc
push
mov
jecxz
mov
mov
cmp
js
mov
pop
sar
mov
add
pop
imul
jo
jmp
into
jg
jb
push
in
in
or
sbb
mov
fwait
mov
ss
jmp
out
testb
lahf
shll
jmp
out
out
sbb
fisttpl
pop
cmc
or
jg
stos
aad
jb
aad
inc
jecxz
notl
xlat
icebp
shl
mov
sbb
shrb
push
aaa
loop
icebp
pop
loop
icebp
and
or
int
and
imul
mov
xlat
push
jno
rcll
lods
movsb
loope
jmp
lahf
ljmp
loope
cmp
mov
or
mov
push
call
xchg
hlt
mov
jg
mov
pop
xchg
in
lods
lcall
push
fists
jns
mov
shr
jns
push
or
xor
mov
adc
mov
in
push
sahf
sub
outsb
es
out
mov
loope
push
xchg
test
inc
gs
adc
xchg
cmp
jb
mov
inc
inc
jl
cmp
dec
xor
jecxz
mov
cld
sti
insb
or
fdivr
xlat
mov
pmaxsw
jmp
out
mov
out
or
mov
fsubrp
out
imul
lock
bound
jecxz
sub
jmp
rorl
or
pop
xchg
mull
sub
out
call
bound
jo
mov
push
negb
jl
mov
cmp
pop
xor
dec
in
and
push
mov
shll
cmp
xchg
xchg
hlt
cmp
test
xor
enter
mov
cwtl
lret
lock
push
ss
pop
sub
loopne
test
or
push
xchg
inc
adc
xor
mov
mov
xchg
jnp
xchg
das
cmc
jg
xor
cmpsb
xor
orl
mov
out
jg
std
in
out
hlt
shr
lcall
fists
psubsb
fdivrl
mov
pop
mov
test
outsb
jle
shll
add
jle
or
test
inc
push
popf
aam
push
mov
ljmp
sbbl
in
rcrl
adc
imul
out
jo
cmp
push
stos
shrl
pop
stos
mov
xchg
mov
ja
into
jno
add
xor
xor
xor
lret
jbe
lahf
aaa
mov
cmpb
cmpsl
scas
loope
push
dec
push
push
inc
xor
xchg
sub
sbb
icebp
xchg
jecxz
test
mov
mov
cld
dec
insb
jb
lods
jmp
rorb
test
mov
push
data16
orl
fidivs
scas
stos
pop
shll
outsb
ss
loope
mov
mov
fisttpl
mov
out
jmp
inc
dec
mov
into
pop
dec
xchg
outsb
mov
insl
xorl
jmp
push
xchg
sbb
or
inc
sub
insl
movsw
lds
das
sahf
lret
push
sahf
jmp
das
pop
idivl
xor
xorb
jecxz
shll
add
xor
push
xchg
mov
jnp
movsl
mov
pop
mov
dec
inc
pop
push
out
cwtl
pop
inc
out
jns
or
inc
push
andl
je
jb
out
mov
add
xchg
fildl
inc
push
adc
mov
ret
pop
mov
sbb
imul
pop
mov
fiaddl
jmp
movsb
sarb
je
test
test
mov
outsl
or
imul
mov
jmp
ljmp
lsl
out
fdivrs
rorl
das
mov
add
jg
int3
in
sbb
lods
push
sub
test
push
rorl
cmc
addr16
mov
test
mov
jecxz
aam
push
pop
in
sub
pop
cli
sub
sbb
fcmovne
add
sarb
inc
jno
lea
minps
dec
lret
psllw
daa
iret
call
inc
mov
jbe
mov
sahf
xchg
xor
loop
cmpsb
inc
leave
mov
adc
pop
in
test
pop
negl
cmp
jle
lcall
ja
rorb
sahf
out
movsb
jno
pop
stos
mov
in
into
fidivrs
or
add
cmp
xor
out
cld
fnstcw
in
jecxz
sti
lods
mov
gs
fmulp
sub
in
cmpsb
sbb
outsl
imul
ljmp
jg
push
mov
movsb
jecxz
cmp
stc
adc
repz
lock
xchg
xchg
loopne
out
addr16
mov
into
mov
xchg
ret
fistps
out
mov
sti
out
lret
jmp
jecxz
shl
xchg
outsb
xorl
insb
mov
mov
iret
xchg
ja
xchg
rclb
mov
push
jecxz
mov
jle
mov
das
push
negl
mov
jno
pushf
mov
jge
mov
sbb
sub
xlat
enter
into
adc
fdivl
dec
subb
mov
sbb
ja
adc
adc
ss
cltd
push
or
popa
cmp
lock
cmpsl
pop
xor
cmp
ja
xor
push
fprem
adc
lcall
push
and
pushf
stc
pop
jp
sub
dec
mov
or
push
rcll
xchg
movsb
imulb
jg
jno
fdivrs
pop
aaa
mov
jecxz
push
sbb
or
cmp
mov
pop
pop
push
lret
sti
jmp
mov
stc
in
pushf
sub
dec
jle
enter
pop
pop
or
sahf
jno
push
test
pop
mov
pushf
xor
pop
pop
loopne
adc
and
fnsave
scas
in
or
outsb
scas
push
push
sub
lret
rcl
pop
jmp
out
cwtl
pop
pop
inc
sahf
jnp
push
lahf
mov
clc
and
adc
jge
mov
nop
push
jecxz
in
ret
sbb
jg
mov
pop
mov
jp
arpl
and
out
jmp
jle
inc
push
dec
stc
fcoml
loope
shlb
sub
mov
xor
push
and
int3
xlat
scas
nop
push
xor
adc
xchg
sarl
and
pop
pop
adc
fwait
test
adcl
mov
mov
aam
popf
or
pop
push
xchg
lret
stc
into
inc
les
xchg
sbb
dec
cld
adc
lock
push
ds
ja
ret
xor
idivb
cmpsl
ds
imul
or
xlat
in
mov
lcall
test
adc
mov
mov
std
cmc
rcl
fidivl
out
neg
push
mov
jmp
mov
ljmp
in
push
fadd
icebp
loope
sahf
dec
xchg
iret
cmc
jno
lock
rol
mov
jmp
in
in
shlb
icebp
push
xor
jb
push
mov
popf
fsub
or
and
in
leave
dec
push
push
pop
jg
movsl
cmp
xor
jg
mov
or
jne
cltd
xchg
cmp
or
jecxz
les
popf
mov
hlt
lret
and
stos
push
xor
cltd
cmp
shlb
fnop
jle
bound
shlb
mov
push
les
jb
xchg
jb
jl
dec
hlt
sbb
fmull
or
mov
icebp
data16
stc
mov
punpckhdq
mulb
inc
repz
cli
iret
pushf
ja
lahf
push
adcl
inc
jle
fisubrs
dec
out
pop
xor
xor
test
mov
sbb
mov
adc
xchg
das
and
adc
sub
push
jo
js
data16
push
inc
jns
jecxz
jnp
mov
outsb
lcall
jmp
js
xchg
cmp
outsb
inc
inc
and
into
dec
int
jne
adc
mov
jecxz
push
mov
ljmp
push
iret
pop
arpl
lods
and
in
mov
and
jae
and
inc
adc
push
lods
add
rcrl
cmp
cs
stc
pop
jno
aas
dec
xchg
test
or
ret
xlat
pop
fidivrl
leave
xor
dec
inc
daa
fimuls
cmp
adc
mov
jbe
aas
loopne
add
ja
mov
pop
and
clc
xchg
arpl
decl
dec
or
xor
rol
jecxz
pop
and
into
mov
or
dec
xchg
std
dec
push
sub
mov
lahf
mov
stos
iret
fcmovbe
jne
mov
mov
clc
xor
ds
pushf
lcall
roll
mov
push
jo
xor
fldt
std
mov
or
cmpsb
cld
loop
mov
xchg
outsl
mov
sbb
mov
lahf
pop
jg
das
lods
mov
sub
mov
in
movsb
inc
xor
repnz
mov
shll
mull
xchg
pop
jmp
xor
inc
and
mov
mov
icebp
ja
test
sahf
mov
test
push
sub
stos
rcl
fistpll
lahf
mov
or
test
insb
and
xor
mov
xchg
fcomip
into
jg
sbb
pop
pop
add
shrl
jge
test
xchg
out
insb
pop
mov
fcmovne
pop
lods
outsb
xor
addl
mov
dec
add
fisubrl
lds
into
addr16
stos
int
repnz
jo
outsb
dec
xor
into
adc
mov
mov
sbb
mov
sub
xor
mov
jp
pop
jno
mov
or
mov
mov
pop
xor
inc
jp
clc
rcl
or
sbb
hlt
or
icebp
and
xacquire
sahf
bound
jmp
mov
lock
aas
pop
mov
dec
push
arpl
sbb
cmp
mov
sarb
out
push
jmp
add
mov
cmp
movsl
cs
popf
mov
or
add
and
sahf
lds
jns
repnz
xor
jecxz
add
add
cwtl
fs
cli
pop
mov
repnz
xor
add
fsts
mov
mov
out
ds
cmp
fsubl
movzbl
xor
scas
xor
gs
notb
pop
std
loop
imul
rorl
fldt
fsubrs
iret
push
mov
dec
ret
add
add
pop
std
xchg
popa
lcall
or
mov
pop
jne
sahf
test
les
das
loop
je
jle
mov
scas
mov
shl
push
or
lock
hlt
xor
pop
clc
movsb
mov
scas
jmp
push
out
or
inc
adcl
sarb
or
adc
pop
shrl
sbb
ja
jmp
pusha
pop
jae
imul
stos
xor
push
mov
les
bound
mov
xor
and
jecxz
loopne
or
cld
enter
data16
bnd
add
add
mov
jmp
ljmp
repz
jno
into
xor
inc
xlat
xor
adc
push
insl
push
loope
cmpsb
xor
lahf
mov
clc
aas
adc
addr16
add
inc
mov
jne
cmp
aaa
cs
mov
cmp
mov
and
cmp
stc
rorl
iret
sbb
in
mov
jecxz
es
fcmovnbe
mov
incl
dec
xor
mov
dec
cmp
ficomps
cmp
dec
rorl
cli
jg,pt
scas
and
cltd
out
out
inc
iret
call
pop
mov
jbe
mov
mov
fisttpl
xchg
sti
sbb
loop
int3
mov
push
mov
data16
sub
mov
lock
mov
orl
arpl
outsb
mov
aad
les
sub
mov
jp
sar
addr16
sarb
cmp
jg
mov
cmpl
notb
popl
mov
jle
test
pop
lret
mov
cwtl
push
mov
in
cld
lahf
mov
jg
xchg
push
mov
out
insl
jmp
mov
mov
sbb
cmp
push
sbb
mov
mov
leave
jecxz
es
in
loope
rolb
sti
fnsave
aam
or
loope
mov
mov
pop
cmpb
test
or
add
rorb
repnz
xchg
mov
stos
lods
ror
cmp
and
sbb
pop
pop
adc
sbb
loop
jae
rcrb
aas
dec
aaa
adc
sti
stos
js
push
jecxz
pushl
cmp
ret
cmp
xchg
call
cwtl
add
scas
and
popl
ja
mov
sub
out
or
data16
xor
inc
mov
mov
adc
es
adc
cmp
ret
int
mov
mov
iret
imul
addb
iret
jp
stos
fistpll
loope
hlt
imul
cld
sub
scas
add
push
or
mov
int3
lahf
push
test
int
fnstsw
dec
pop
xor
lock
ja
ficoms
mov
pop
rcrl
out
lock
push
dec
nop
xchg
sub
jmp
mov
jg
inc
or
pop
xchg
test
cmp
xor
test
dec
arpl
xor
mov
leave
pusha
dec
push
pop
popa
shrl
jno
popf
enter
sbb
test
sti
rorl
sbb
hlt
es
imul
repnz
sub
rorb
dec
out
int3
pop
fistps
cmp
sub
push
mov
pop
jmp
leave
mov
mov
insl
mov
sarl
jl
adc
stos
mov
mov
sarb
rorb
call
cli
pushf
mov
dec
sbb
sub
test
lds
push
jmp
mov
mov
movsl
sub
test
stc
adc
and
inc
ret
mov
insl
outsb
imul
pop
jmp
pop
mov
fstpl
fnsave
loope
mov
scas
lods
push
pop
add
cmp
out
mul
rcr
loop
xor
shll
jmp
mov
pushf
fldcw
fstp
sbb
aad
or
mov
sub
and
stos
adc
mov
out
push
out
mov
in
adc
outsl
xor
mov
pop
aas
pop
clc
scas
jecxz
pop
xchg
or
jp
xchg
out
mov
into
sbbl
sub
fwait
gs
pxor
jg
xchg
addr16
lahf
pop
push
mov
xor
jge
arpl
sub
mov
pop
rcrb
test
hlt
pop
jnp
pushf
dec
and
jecxz
je
add
jge
in
call
enter
rcll
out
sbb
jge
xor
in
in
sub
loope
fbstp
push
fmul
mov
sub
push
add
lods
push
gs
cltd
lods
stc
dec
fwait
repnz
mov
mov
sti
jb
xor
jbe
sahf
lahf
add
push
xchg
xchg
stos
push
mov
jo
pop
je
xor
shl
jo
jecxz
testl
sbb
movsb
scas
loop
cwtl
movsl
rclb
mov
jge
fbld
jae
jmp
insl
mov
out
and
std
cwtl
inc
sbb
loope
push
pop
loope
xchg
movsl
rcr
ljmp
xchg
xor
sub
into
inc
add
xchg
cmp
jle
sbb
test
pop
mov
xor
pushf
std
add
into
or
xchg
jg
in
fdivp
inc
imul
xchg
out
ljmp
push
xlat
scas
icebp
dec
fcomps
imul
mov
xor
sbb
movsb
lahf
xor
jle
cmp
loopne
ljmp
mov
xlat
push
in
rclb
shl
rorl
sarl
cmp
and
mov
inc
pushf
jmp
leave
mov
inc
dec
inc
jecxz
loop
mov
adc
rorl
das
push
loope
aad
and
imul
arpl
pop
filds
repnz
test
mov
rol
popl
lods
aad
mov
insb
mov
popf
shll
jne
enter
in
nop
test
fisubrs
mov
sti
popa
ljmp
and
loop
ss
aad
mov
rclb
scas
lret
xlat
push
loop
cmp
or
sbb
dec
scas
push
gs
loope
iret
movsl
stos
mov
scas
out
sti
mov
or
iret
cmp
shll
jno
push
loope
iret
mov
shll
in
loop
cmp
bswap
pop
stos
sub
scas
push
addr16
loope
iret
fwait
stos
stos
bound
sti
mov
or
iret
inc
stos
push
bound
jns
test
iret
lds
stc
cmp
shr
and
loop
aaa
lock
ret
ljmp
stos
or
fnclex
ret
sub
stos
bound
repnz
pop
jecxz
ljmp
and
scas
std
icebp
mov
jecxz
aad
leave
iret
mov
rorl
pop
loope
iret
aaa
stos
and
sar
shr
sub
push
loope
iret
popf
stos
mov
xor
loop
ljmp
mov
lahf
pop
ljmp
shll
and
iret
pop
stos
inc
imul
loop
rorl
scas
pop
xor
loope
iret
pop
stos
imul
xor
push
loope
iret
dec
stos
pop
bound
subl
fucomip
shl
das
scas
or
dec
bound
jne
sbbl
int
fldt
xor
add
jmp
pop
shl
ljmp
fcmovnb
xchg
loope
iret
mov
mov
ljmp
test
ljmp
loope
out
jecxz
xor
imul
daa
push
loope
iret
push
stos
pop
bound
jg
mov
iret
xlat
stos
jmp
sti
xor
or
pop
hlt
loope
iret
push
stos
popa
bound
test
loope
iret
mov
shl
sar
xor
xor
inc
iret
push
stos
arpl
roll
scas
loope
iret
leave
stos
aad
loope
out
sar
ss
nopl
loope
iret
dec
stos
arpl
sarl
lea
mov
test
fucomip
repnz
sub
ljmp
iret
iret
loope
stc
sub
or
shrl
jb
imull
mov
fcmovb
ljmp
popl
ljmp
dec
jb
lret
addr16
jae
ljmp
fildll
fldt
push
push
pop
fidivrl
ljmp
push
bound
pusha
scas
pop
pop
push
bound
dec
cmpsl
push
loop
push
ljmp
push
filds
enter
jno
jecxz
sub
xchg
imul
scas
out
jmp
lret
sbb
loope
iret
dec
stos
push
bound
imul
outsl
pop
push
loope
iret
and
icebp
sub
fldt
loope
iret
stos
jnp
insl
rcll
inc
xor
loope
iret
call
lds
iret
stos
andl
pop
scas
dec
inc
push
loope
iret
sbb
out
es
scas
mov
iret
mov
dec
scas
xor
add
imull
ljmp
movsl
push
bnd
stos
test
pop
jns
shlb
mov
test
dec
lahf
sbb
push
or
push
pop
jo
adcl
xchg
outsl
jp
jno
stos
cld
xor
icebp
pushf
rorb
lahf
test
mov
jne
repz
or
mov
sub
lds
nop
mov
shll
xlat
jo
cmp
xor
repnz
jo
mov
adcb
iret
jne
jo
mov
fisttpll
jg
js
mov
mov
pop
pop
xor
mov
mov
jnp
and
dec
mov
scas
aad
mov
xchg
jo
mov
into
lret
add
in
fiadds
jp
negb
xchg
push
dec
pop
fwait
mov
xor
jns
ror
sbb
pop
xchg
scas
xchg
xor
test
pop
mov
lahf
mov
loope
outsl
cmpsb
cmpsl
adcl
mov
sbb
mov
stos
pushf
test
mov
repnz
cmpsb
test
mov
movsl
xchg
mov
test
xor
test
cmp
add
arpl
sub
sar
jl
jp
lea
frstor
movsb
gs
mov
xor
mov
clc
shlb
out
js
lahf
or
popa
mov
mov
xchg
push
out
addl
adc
aad
leave
or
gs
lods
mov
add
shll
stos
insb
loope
scas
mov
mov
push
fwait
mov
pop
out
mov
orb
xor
mov
mov
outsl
xlat
lea
test
pop
push
xor
sub
add
and
lret
push
fcoms
aam
mov
pushf
ljmp
or
add
cmp
and
and
aad
int
mov
xor
xchg
and
loopne
loopne
mov
fcmovnu
test
mov
inc
add
in
xchg
mov
push
jns
stos
mov
fldcw
jmp
push
fnstsw
mov
scas
aas
jb
int3
andl
sub
iret
aad
sbb
rcrl
out
push
out
mov
lret
xchg
lret
fbld
test
das
mov
sub
fbld
dec
les
push
fists
fisttpl
mov
inc
in
popa
push
mov
in
push
xor
sahf
inc
xor
add
cwtl
fstps
sti
orb
sub
lret
loope
pop
xchg
mov
sub
mov
arpl
push
adc
lods
popf
lret
shll
mov
lcall
mov
fs
inc
cmpsb
clc
leave
mov
xchg
mov
push
jo
test
fisttpl
push
mov
fwait
das
pop
pop
jo
jge
scas
sbb
push
dec
jge
ljmp
mov
and
jmp
bswap
jno
mov
hlt
movsl
test
inc
icebp
jmp
xor
push
cmpsl
jnp
pop
mov
iret
or
daa
jecxz
cli
and
xchg
lock
mov
sbb
scas
je
cwtl
mov
rorb
cmpb
xchg
hlt
xchg
mov
push
pop
int
roll
inc
bound
or
imul
xchg
fwait
sti
push
jp
xchg
ffreep
pop
or
into
sub
mov
jbe
insl
repnz
and
xchg
mov
mov
jl
cmp
sbb
stos
pop
data16
scas
in
dec
aad
jno
mov
or
in
repnz
push
jp
ror
jl
add
sub
and
mov
test
std
inc
jl
into
mov
xchg
jb
xchg
scas
loope
dec
mov
pop
aaa
lods
push
iret
mov
lret
aad
lods
mov
cmp
mov
imul
call
mov
mov
lahf
std
pusha
sahf
lret
iret
fdivl
into
test
or
xor
xor
cmpsl
inc
movsl
and
pop
loope
scas
sub
sar
mov
or
dec
repnz
lock
rolb
mov
iret
es
iret
sbb
adc
mov
fdivrs
cmpsl
mov
mov
adc
cltd
scas
aad
mov
sub
push
inc
cmpl
arpl
mov
xor
test
stos
fiadds
out
jg
lods
inc
cmpsl
test
loop
lea
sub
int
ljmp
mov
xchg
inc
lret
sahf
and
cmpsl
subl
push
test
mov
inc
pop
sbb
cmpl
aaa
pop
inc
dec
mov
scas
xchg
pop
and
sbbb
jne
sarb
stos
leave
cmpsl
jae
lea
cwtl
andl
pop
push
loopne
rcrl
dec
enter
dec
mov
aad
or
test
xor
or
les
loop
out
xor
inc
shrl
movsl
out
rclb
arpl
bound
pop
dec
into
fisubrs
pusha
into
cmp
es
call
xchg
lahf
mov
pusha
jmp
call
shrl
scas
orl
jb
xchg
push
rolb
out
push
push
lcall
arpl
scas
or
aas
sbb
push
xchg
jno
pop
lea
xor
test
cmpsb
push
sbb
fchs
scas
stos
pop
mov
pop
mov
mov
mov
mov
shlb
repz
repnz
ret
aas
inc
fldenv
mov
rcrl
imul
shlb
cmpsb
jmp
cmpsb
xchg
aas
push
mov
mov
ret
adc
ljmp
cmp
mov
je
dec
in
push
add
shrl
adcb
rclb
sub
aam
add
mov
and
jg
aaa
je
rorl
loop
xchg
sahf
stc
bound
stos
cs
nop
pushf
sub
les
loope
and
inc
lret
ss
and
jg
enter
mov
mov
dec
mov
movsl
data16
pushf
icebp
popf
mov
jmp
movl
pop
rcrl
mov
sub
pop
dec
iret
jnp
fstps
mov
fnsave
aaa
or
or
push
mov
add
or
mov
icebp
mov
pop
push
out
sbb
cmpsl
dec
subl
mov
fldcw
mov
mov
cltd
push
subl
add
push
xor
mov
iret
andl
test
iret
iret
dec
cmpsb
mov
cld
xchg
lret
and
stos
inc
stos
dec
xchg
shl
orb
xchg
mov
jo
vphaddudq
cld
out
push
iret
iret
int
adcl
inc
iret
ficomps
icebp
stos
call
xor
loope
lds
imul
or
push
adcb
gs
das
jp
dec
add
stos
popf
ror
fsubrl
and
in
xlat
mov
in
rorb
cmp
jmp
sbb
test
sub
inc
mov
data16
jns
loopne
lret
iret
sti
dec
mov
mov
in
lods
cmpsl
fildll
iret
repnz
iret
mov
adc
xchg
iret
shrb
jle
dec
pop
shl
rclb
shrl
js
scas
in
mov
mov
mulb
insl
pop
popa
in
shl
je
pop
arpl
xchg
daa
pop
stos
out
bound
jo
inc
popa
or
andl
xor
movsl
xchg
adc
bound
sub
cld
int3
pop
fiaddl
sub
sbb
mov
lods
lcall
ret
mov
inc
cmp
xor
ficompl
movsl
xchg
jg
lea
add
push
in
insl
insl
mov
jp
mov
mov
jle
inc
push
rol
mov
pop
dec
call
cwtl
cmpsb
dec
cltd
cmpsb
sub
sbb
inc
nop
int
lret
idivb
xchg
jecxz
fwait
push
cmp
movsb
jg
into
jge
xor
xlat
sub
into
mov
push
jg
addl
mov
out
fwait
dec
mov
in
movsb
test
xor
and
inc
andl
outsb
sub
mov
imul
leave
inc
pop
sti
insl
fdivrs
jno
mov
scas
scas
shl
jecxz
add
test
loop
shl
sti
in
push
lahf
rcrb
psubsw
vpavgb
pop
lahf
push
shr
xchg
and
rcl
mov
stc
pop
popf
popf
mov
test
aad
sub
in
das
or
add
cmpsl
loopne
test
fsubp
das
mov
cmpsl
int
pop
inc
rorb
xchg
adcl
sub
repnz
int
shll
sbb
insl
loope
xchg
movsb
loope
add
mov
loope
dec
jecxz
pusha
pop
mov
out
push
mov
cmpsb
push
or
pop
stos
inc
and
sub
data16
push
fsubp
push
push
mov
mov
inc
aas
add
mov
or
adc
test
and
hlt
mov
lods
fisubrs
shl
mov
add
or
add
insb
mov
clc
pop
imulb
fcmovu
push
jecxz
aam
jns
outsl
cmp
loopne
ret
shll
movsb
jle
jmp
mov
or
dec
pop
shll
mov
mov
dec
jmp
lcall
aad
push
in
add
inc
loop
lods
fs
repnz
mov
popa
stos
movsl
and
push
mov
mov
jae
push
xor
ret
sahf
fcoml
stos
fwait
xchg
movsb
xchg
addr16
fimuls
mov
mov
jge
mov
leave
int
mov
fistpl
popf
scas
dec
jecxz
out
rcl
mov
stos
fsubs
ret
jge
mov
test
pop
iret
cltd
dec
dec
xchg
push
les
stos
pop
pop
lea
push
jle
aaa
iret
iret
mov
cs
adc
das
pop
lret
xor
mov
jnp
stos
je
dec
jl
or
xor
insl
xchg
xchg
mov
inc
subl
sub
adcl
cmpsl
inc
stos
cmp
maxps
mov
or
in
rcll
nop
sub
in
iret
test
lahf
xchg
test
cwtl
int
fbld
fsubrp
mov
std
fisttpll
mov
test
or
pop
int
orl
push
das
movl
push
jp
pop
jno
push
imull
xlat
rcll
repnz
push
iret
jge
popf
lods
icebp
fisttps
xlat
imul
mov
imul
aaa
lret
repnz
mov
ljmp
imul
inc
xlat
fucomip
cmp
xchg
insb
and
cmp
mov
lret
and
sbb
imul
repnz
jmp
pop
aam
jecxz
repnz
rcrb
mov
shlb
sbb
mov
jmp
sbb
bswap
mov
sti
addr16
cmp
loop
mov
inc
sbb
or
xchg
and
bound
jnp
pop
cs
and
cmpl
mov
sub
or
lds
cmp
push
out
sbb
push
and
aaa
sti
pavgw
fsubrs
sbb
adc
xchg
addr16
or
pop
subb
int
aam
jb
pop
stos
dec
lahf
rclb
out
aas
rcrl
sti
insb
adc
cmp
jmp
pop
popf
dec
mov
lret
ret
addb
mov
imul
out
xchg
roll
sbbb
stos
lahf
sub
out
fadd
cmp
imul
xlat
add
jnp
ret
or
stos
xchg
lret
lods
lahf
addr16
mov
inc
xor
loop
and
int
test
mov
loopne
rolb
adc
mov
mov
pop
cltd
mov
sarb
mov
sti
imul
popa
test
ja
loopne
rorb
fsubs
mov
in
jge
out
stos
mov
add
scas
jne
sub
scas
mov
ret
loop
jecxz
out
lret
push
mov
arpl
loope
adc
out
lret
scas
jnp
aas
jnp
jg
fsts
lret
scas
stos
pop
insb
push
add
leave
mov
jnp
push
addr16
in
jo
mov
xchg
add
fisttpl
aad
pop
cmpsl
insb
xor
aad
cli
mov
cmp
add
ds
mov
lret
sub
in
fidivl
orl
aam
ret
aad
in
jb
dec
lret
bound
shrb
adc
ret
iret
adc
or
in
fdivs
in
into
sub
jp
loope
aad
mov
int
mov
xchg
rclb
in
in
cmc
mov
sub
arpl
jns
in
push
popa
shll
jmp
xchg
cmp
xchg
cvtdq2ps
fwait
and
rol
jmp
and
mov
jae
mov
pop
fisttps
sub
loop
and
jmp
fcmovnb
fwait
rcrl
jnp
dec
fldt
pop
rcr
xlat
mov
sbb
rcrl
mov
jnp
cmp
xor
lock
sbb
mov
sti
mov
stos
rolb
ud2
and
fstpt
imul
sbb
mov
fdiv
sti
shr
or
sti
fsts
fcmovbe
sbb
jecxz
lret
mov
repz
lret
shrl
dec
pusha
arpl
ficompl
cmp
out
mov
iret
sti
dec
lret
into
shll
out
lock
fdivs
xchg
mov
xlat
dec
test
rcll
out
xchg
pop
iret
fists
inc
push
aad
dec
icebp
push
loope
iret
repnz
xchg
fstpt
mov
push
pop
arpl
mov
xlat
pop
lock
mov
cmpsl
scas
lahf
addr16
addr16
sub
gs
or
xchg
movsl
sub
sbb
gs
push
xchg
or
flds
cwtl
xchg
addr16
dec
jecxz
in
xchg
loop
shr
insb
adc
push
xlat
stos
xchg
adc
mov
js
push
stos
jecxz
xchg
sarl
arpl
mov
jecxz
cmpsb
jb
loope
mov
aas
rol
add
cmp
adc
clc
sub
mov
shll
or
jecxz
fcmovbe
mov
iret
sarl
subl
xchg
xchg
test
jge
les
or
mov
imul
punpckhdq
out
bound
pushf
ljmp
ret
repnz
rclb
loop
das
es
push
setno
dec
flds
pop
jmp
mov
xor
enter
xchg
outsl
pop
pop
mov
adc
repnz
cs
das
mov
out
rorl
fbstp
test
hlt
addr16
inc
add
icebp
nop
sbb
and
lock
rcr
mov
data16
adc
adc
xchg
adc
mov
ljmp
xchg
jge
test
ret
add
and
ja
cmpsb
idivl
xchg
dec
into
in
stos
or
push
sbbl
call
out
gs
sub
jmp
gs
in
arpl
bound
call
xchg
jno
sub
cmpsl
jecxz
mov
dec
jb
push
adc
jmp
shlb
pop
dec
xchg
xor
sbb
xchg
adc
jmp
xlat
ds
ret
sbb
push
orl
jnp
lods
cwtl
aas
jmp
mov
xchg
and
jmp
xchg
out
and
adc
jne
pop
pop
pushf
hlt
push
ficoml
jmp
fists
sbb
cmpsl
ficoms
mov
mov
repnz
shr
fdiv
jbe
loopne
cmp
xchg
test
xchg
nop
int3
jl
lods
mov
je
mov
inc
mov
ret
xchg
jo
insl
mov
jg
mov
lcall
into
mov
loop
out
repnz
nop
lret
push
mov
jmp
xchg
pop
out
outsb
jp
mov
sub
pop
mov
pop
scas
shlb
mov
add
in
sbb
cmp
mov
es
pop
fstp
icebp
stos
movsb
loope
mov
push
imul
sbbl
push
shl
sub
xchg
arpl
and
mov
jle
jg
sarb
dec
mov
jno
addl
lret
jmp
ljmp
mov
cmp
cmpsb
and
aad
pop
scas
xchg
mov
mov
and
xlat
scas
mov
sub
pop
sarl
inc
mov
xchg
push
popa
fiaddl
out
mov
fdiv
arpl
mov
pop
rcrl
add
mov
dec
int
mov
mov
ja
dec
cmc
push
cmpsb
jecxz
jno
pop
imull
sbbl
mov
out
popa
cmp
xchg
rolb
test
jp
stos
or
dec
mov
adc
mov
adcl
sub
mov
lret
icebp
jnp
fistpl
adc
lret
idivl
mov
cmp
xlat
xor
pop
movsl
jecxz
repz
inc
mov
xorb
repz
fiaddl
movsb
sub
mov
pop
arpl
movsb
orl
icebp
repnz
sahf
pop
scas
mov
pop
and
out
fisttpl
cltd
and
rcll
fcoml
add
sbbb
fnstcw
fsin
push
cltd
enter
cmpsb
xchg
cmp
lahf
mov
jl
mov
mov
jmp
dec
out
enter
xchg
adc
jg
xchg
rorl
icebp
icebp
pop
out
ret
testb
mov
mov
fldt
pop
out
out
sub
jns
imul
popf
sti
mov
lahf
xchg
sahf
orb
jnp
cmpsb
adcb
inc
pop
aad
fnstsw
lock
mov
lret
cltd
fistps
sarb
sub
sub
add
jno
mov
fsubl
jae
test
sahf
jne
and
adc
imul
jg
bnd
rcl
fistps
mov
sti
mov
push
jecxz
and
mov
aas
mov
addr16
sub
out
sbb
test
mov
movsl
fwait
popf
pop
pop
popa
sbbb
stos
pop
gs
jg
dec
fistpll
jg
fildl
or
lcall
mov
mov
mov
mov
pop
frstor
addb
mov
mov
xlat
scas
mov
jmp
mov
in
pop
jns
mov
aam
into
cmp
xchg
jmp
mov
out
arpl
shrl
ret
scas
mov
pop
popa
mov
fwait
adc
sarb
loope
fsubl
xchg
sbb
dec
cmpsl
into
pop
adc
aad
sub
lods
repnz
pop
xlat
stos
inc
lret
mov
aad
sarl
clc
outsb
mov
nop
arpl
jno
movsl
or
daa
imul
pop
jnp
scas
popl
scas
test
movsb
lret
jne
jl
jae
adc
or
lcall
lods
ror
lods
push
orb
test
dec
loope
inc
sub
inc
popa
push
sbb
cmpsl
repz
shrl
fstps
stos
xchg
mov
xchg
xchg
xchg
mov
jnp
sbbl
mov
jl
pop
ljmp
adc
inc
sbb
adc
gs
xchg
cld
es
cs
dec
pop
aaa
pop
fwait
ret
cmp
movb
sub
xor
lods
out
jle
fnsave
mov
jecxz
aam
inc
sub
out
pop
jnp
jmp
cs
lret
enter
xchg
jecxz
pop
add
call
ja
fldt
aam
inc
add
aam
xor
aam
push
xchg
roll
icebp
iret
pop
ret
pop
inc
sbb
int
xor
lock
andnps
mov
mov
cmp
jge
mov
push
test
cwtl
into
fistl
in
sub
pop
repz
sarb
enter
fisttpl
scas
jae
dec
arpl
stos
stos
in
push
mov
push
loop
ljmp
jecxz
lcall
pop
adc
rorl
bound
rol
jae
iret
mov
lret
les
aas
dec
popa
pop
mov
jg
lods
inc
dec
mov
fs
mov
outsl
shrl
into
scas
push
test
mov
add
shll
xchg
repz
mov
out
testb
cli
sbb
add
shll
pop
adc
fisttpll
rorl
cmpsb
daa
sbb
sbb
mov
mov
dec
fcmovnu
lods
inc
push
push
sbb
mov
add
sbb
mov
cmp
stos
lds
out
fistpl
or
jmp
imul
ret
out
stos
das
pop
rcrl
jmp
les
repz
test
ret
inc
ret
sub
xlat
xchg
scas
stos
shrl
xchg
test
mov
outsb
or
fstpt
or
arpl
adc
ret
out
xchg
out
je
and
ljmp
ljmp
pop
pop
sti
rorl
stos
test
ss
jge
jle
add
test
jb
cmp
ret
xchg
jne
pop
xchg
dec
lds
push
jae
jle
push
rcl
mov
lret
movzbl
movsl
arpl
xorl
js
add
stos
and
loope
fwait
push
stc
push
aam
outsl
testb
xchg
test
aam
mov
or
xchg
sti
jle
mov
ret
shrl
xchg
fnstsw
mov
inc
xchg
movsb
rclb
es
jmp
dec
std
mov
out
xchg
stos
loope
cmpsl
mov
adcl
shll
test
xor
mov
jnp
lcall
movsl
push
jne
shll
add
and
outsl
mov
sub
das
jns
sub
imull
lret
mov
aaa
lret
addr16
hlt
mov
jae
mov
mov
mov
pop
orb
inc
lea
sub
outsl
or
leave
cltd
mov
and
outsl
or
xchg
stos
fistl
and
push
dec
ffreep
cmc
xchg
fiadds
lret
pop
jp
cmpsb
scas
iret
popa
mov
fcompl
mov
ds
pop
je
jecxz
xlat
add
mov
xor
add
jne
mov
push
cs
add
push
popf
xchg
sub
call
pop
icebp
adc
cwtl
jge
sub
test
in
mov
fists
scas
imul
push
cmp
fisttpl
jecxz
push
popa
aas
sub
scas
push
roll
nop
ss
pop
cmpsl
sti
and
in
ficoms
push
icebp
out
scas
inc
xor
int3
cwtl
arpl
fisttps
pop
lahf
insl
jecxz
addb
inc
xchg
cmpsl
jmp
inc
lock
pop
xor
cmp
stos
sti
xchg
pop
popa
rolb
lock
jae
out
add
in
scas
jno
lahf
push
mov
andl
into
fbstp
mov
xchg
mov
fwait
jnp
leave
mov
jbe
sar
mov
pop
dec
mov
xchg
test
jl
sbb
out
xlat
sti
out
or
adc
mov
dec
scas
adc
adc
mov
dec
dec
push
mov
xlat
mov
sahf
push
lahf
shl
jecxz
mov
and
push
add
jns
mov
mov
cmpsl
xchg
test
xor
testl
clc
push
fcomp
lock
pop
cld
insl
fiadds
iret
pop
pop
ret
int3
cltd
clc
iret
gs
add
sbb
into
jmp
daa
into
ficoml
stos
mov
mov
jge
imul
shr
iret
mov
mov
stos
out
pop
fldt
xchg
cmp
dec
aad
cmp
sub
jb
fwait
xchg
int3
fndisi(8087
jmp
sti
pushf
icebp
push
stos
out
arpl
iret
xchg
inc
fstpt
test
lock
dec
adc
sti
mov
aaa
and
andl
lret
roll
ret
inc
fstpt
cmp
cli
lds
adc
arpl
out
lcall
mov
or
scas
imull
push
loopne
mov
pop
shrl
loop
mov
add
jecxz
and
decl
jnp
sarl
lods
out
and
dec
loop
pop
jecxz
mov
and
fisttps
addr16
push
jecxz
mov
fbld
mov
lods
lock
lret
mov
andl
rcr
push
mov
jmp
jecxz
in
icebp
imul
loop
pop
or
sub
fwait
and
mov
les
int3
subl
packssdw
sbb
mov
dec
xchg
mov
sub
mov
push
cmc
adc
cmpsb
mov
icebp
sbb
call
inc
in
in
fisttpl
in
pop
inc
mov
jmp
add
sub
call
and
jmp
icebp
out
out
push
inc
repz
mov
and
scas
lock
mov
dec
inc
adc
into
mov
fcomi
xor
dec
adcl
ja
das
mov
fisubl
iret
pop
lods
sbb
out
pusha
fisubrl
jmp
inc
out
xchg
fwait
lock
xor
jmp
jg
loop
scas
iret
loope
shll
jecxz
xchg
rcr
scas
aaa
lock
pop
shl
fldcw
loope
into
negl
jp
pop
loope
iret
daa
stos
mull
shl
scas
cmp
push
lret
scas
adc
pop
jmp
mov
das
in
push
fucomip
sub
out
fildll
mov
loopne
jg
xchg
xlat
fstpl
das
push
push
cmpsb
out
icebp
fcmovnbe
mov
lods
mov
mov
sub
xchg
lcall
pusha
pop
bound
lret
pop
jae
sub
mov
shll
outsl
cmpsl
stos
bound
loope
pop
jecxz
xchg
arpl
subl
shrl
sbb
out
out
subl
mov
add
cmpb
xchg
mov
aad
aam
push
loope
iret
pop
test
mov
rcrl
popf
clc
outsl
into
mov
or
insl
jle
inc
popa
repnz
mov
sub
movsb
pop
rolb
xor
out
push
loope
loop
icebp
out
stos
out
out
in
pop
imul
jmp
mov
loop
mov
out
push
pop
lods
roll
iret
sub
add
cli
in
fcmovne
add
mov
loop
bound
jecxz
imul
iret
push
stos
jnp
cmp
jp
and
or
jbe
inc
das
ss
rcr
jo
ret
stos
push
stos
jecxz
in
rcll
push
outsl
mov
arpl
call
bound
shl
scas
sbb
push
loope
les
ljmp
loop
loope
push
loope
iret
fists
mov
pop
sub
mov
loop
loope
iret
jbe
adc
loop
jmp
stos
and
shll
scas
fwait
in
repnz
imul
stos
push
sarl
scas
loopne
push
loope
iret
fdivp
ss
loope
iret
ret
stos
bound
shll
xchg
pusha
push
loop
in
icebp
arpl
stos
dec
aad
xor
loope
iret
shrb
sarl
mov
jnp
movsb
pop
repz
out
ret
inc
push
mov
adc
inc
fcmovnbe
sub
loope
iret
fsubrs
lret
rcl
scas
mov
push
loope
iret
subl
scas
push
xorl
stos
or
xorl
lods
lock
ret
iret
lods
stos
stos
cmp
jnp
test
rorl
cmpsl
xor
loope
iret
movsl
stos
add
jecxz
in
mov
mov
stos
mov
clc
loope
iret
pop
stos
popf
bound
pushf
scas
sub
iret
sti
stos
cltd
push
jecxz
scas
cwtl
lret
push
loope
iret
xchg
stos
fwait
bound
imul
push
iret
xchg
stos
cmp
shll
scas
nop
or
fsubr
loop
mov
rorl
stos
loope
iret
xchg
stos
xchg
roll
dec
loope
iret
xor
subb
jb
loope
iret
jge
mov
scas
jnp
push
fcompl
bound
pop
scas
js
push
loope
iret
jbe
adc
sar
rcll
out
shl
loopne
popa
in
scas
lret
inc
push
loop
jmp
fwait
iret
inc
stos
andl
imul
loop
cmp
stos
inc
jns
mov
jae
or
scas
mov
fcomip
mov
fldt
mov
loope
iret
jnp
leave
stos
rcrl
arpl
sbb
xor
sbb
sbb
pop
shr
fisubrs
loope
iret
adc
mov
arpl
clc
loop
in
icebp
pop
enter
inc
fildl
mov
cli
fidivs
outsl
mov
in
sti
jne
jmp
add
in
lret
jne
mov
fwait
testl
in
dec
jne
cmp
or
sbb
or
arpl
imul
mov
adc
aam
lret
idivl
rcrb
jnp
mov
add
arpl
cmp
negl
insb
ud2
mov
sti
sti
jmp
insb
das
sub
mov
arpl
imul
rorb
cmp
adc
cli
sbb
sub
jne
sti
add
imul
mov
add
fwait
insb
jnp
imul
pop
jne
dec
add
aam
mov
sbb
arpl
idiv
insb
adc
jecxz
test
shrb
mov
jnp
imul
pop
testl
insb
bndstx
das
jmp
mov
lret
in
mov
fwait
aam
mov
jnp
packssdw
sub
jne
in
sbb
or
sti
aam
jmp
ja
fildl
lret
aam
mov
fwait
mov
mov
jnp
sub
mov
add
arpl
idiv
aam
sbb
or
mov
jmp
sti
fldt
mov
mov
fwait
jne
mov
jnp
arpl
pop
insb
cmovnp
rcrb
cli
or
sub
jne
jmp
add
in
lret
jne
mov
fwait
testl
in
dec
jne
cmp
or
sbb
or
arpl
imul
mov
adc
aam
lret
idivl
rcrb
jnp
mov
add
arpl
cmp
negl
insb
ud2
mov
sti
sti
jmp
insb
das
call
std
fwait
jae
sub
mov
dec
inc
jecxz
jecxz
add
inc
add
inc
fs
inc
add
imul
adc
pop
jecxz
jmp
fs
push
add
pop
fs
pop
add
cwtl
mov
mov
pop
inc
repnz
in
add
jecxz
jmp
xlat
out
in
pop
sub
and
adc
repnz
icebp
in
out
sbb
loopnew
add
inc
and
mov
ret
mov
insl
push
jae
outsb
mov
and
push
fs
ja
fwait
arpl
dec
xor
mov
push
in
jae
popf
outsb
aaa
jl
ret
rorl
xor
push
outsb
cs
jecxz
mov
fnsave
out
test
mov
rol
ret
mov
add
bnd
cltd
mov
loope
xchg
jg
out
push
mov
cmpsb
xchg
fcmove
shll
push
jae
adc
and
mov
shrl
data16
push
dec
imul
in
xorl
in
sub
lock
arpl
xchg
imul
arpl
imul
repnz
jb
in
dec
mov
pop
ret
xchg
lahf
scas
out
dec
jecxz
mov
push
insb
imul
fistpll
inc
roll
add
jecxz
xchg
mov
xchg
adc
mov
pop
jnp
dec
jb
in
divl
in
jae
adcl
icebp
fistpll
inc
inc
push
arpl
mov
aaa
jecxz
xchg
adc
xor
aad
xor
mov
dec
sbb
call
sar
mov
xlat
dec
jmp
mov
add
insb
cmp
cltd
lcall
out
in
lret
outsl
jecxz
jmp
add
xor
in
mov
adc
ret
xchg
lahf
inc
in
jecxz
cmp
mov
xlat
shll
mov
push
jmp
adc
in
insb
jmp
or
mov
inc
dec
add
pmullw
addr16
mov
imul
and
mov
in
jmp
nop
fucomi
mov
xchg
loope
sti
sbbl
jmp
out
shrb
iret
loop
push
xor
pop
shll
inc
scas
shl
pop
mov
or
das
scas
jmp
cmpsl
jb
test
jecxz
mov
xchg
xchg
icebp
xor
insb
jae
inc
mov
imul
ja
xor
xchg
out
mov
pusha
push
scas
addr16
pop
jb
movsb
add
adc
xchg
mov
push
fsts
pop
jno
ljmp
mov
in
push
sub
stos
in
xor
stos
jl
test
lret
rcll
adc
dec
jae
call
fistpll
ret
inc
aaa
xor
and
pop
xor
jae
push
lret
adc
rclb
ljmp
mov
pop
mov
mov
cmp
lock
jge
rcrl
adc
mov
jmp
jnp
jb
in
aas
dec
call
fs
inc
add
fs
inc
add
fs
inc
add
inc
fs
pop
add
fs
push
add
ja
jmp
arpl
orl
insb
add
fs
push
in
mov
xchg
push
out
xlat
push
clc
lahf
xor
sbb
mov
jmp
int
gs
sbb
mov
repnz
xchg
test
xchg
les
adc
mov
scas
iret
movsl
jge
mov
shrl
nop
pop
test
test
xlat
xchg
jge
xor
add
in
add
cmc
fisubrs
lahf
lret
cmp
xchg
sbb
inc
lcall
mov
imul
sbb
jmp
repnz
mov
popa
adcb
pop
ljmp
outsl
lea
mov
arpl
jnp
mov
int
inc
xchg
mov
test
andl
jle
loope
jns
adc
mov
inc
inc
nop
pop
imul
mov
sub
ljmp
mov
fdivs
aas
addr16
nop
ss
jns
loopne
push
pop
pop
aad
test
or
dec
xchg
pop
fldl
int
aam
cmc
sub
enter
bound
sub
into
pushl
call
dec
mov
sub
mov
jbe
xor
dec
mov
jno
leave
lret
inc
lret
pop
dec
loopne
mov
es
jnp
daa
ds
nop
sub
mov
mov
mov
sub
int
stos
push
mov
rorl
stc
fsubl
mov
in
movsl
xlat
out
mov
in
loope
jle
pop
jle
push
and
mov
pop
and
lea
sbb
mov
pop
sbb
mov
ds
mov
mov
orb
icebp
fwait
rclb
pop
mov
aad
push
jns
add
insl
int
jg
aas
lea
sub
arpl
cmpsl
xchg
imul
jne
pop
pusha
iret
dec
insl
jp
roll
pop
add
pop
icebp
fdivl
mov
cmp
movsl
sti
mov
loope
mov
int
pop
pop
dec
int
imul
jno
xchg
inc
xor
test
movsb
jle
mov
pop
js
pusha
xchg
mov
loope
mov
adc
mov
ret
lods
mov
lds
jmp
stos
pop
movsl
or
repnz
rcll
jecxz
out
orb
loop
rcl
mov
aad
push
mov
inc
lock
popa
in
out
loopne
sbb
jecxz
ljmp
in
stos
icebp
shl
cs
cld
lods
jl
jnp
clc
popa
hlt
pop
repnz
out
mov
sub
xor
fs
in
add
jno
sub
adc
or
xchg
repnz
xchg
add
pusha
hlt
loopne
mov
pop
test
inc
aaa
or
adc
loope
mov
out
pop
stos
loope
lret
int3
dec
out
jmp
leave
fbstp
addr16
shlb
xchg
push
mov
cmpsl
lds
ret
sub
lret
arpl
imul
sbb
mov
adcl
adc
orl
pop
mov
rcrl
mov
sbb
mov
push
test
popf
pop
mov
in
and
scas
fsubrl
into
pop
pop
ja
aam
hlt
imul
cmc
repnz
mul
add
std
rcl
test
adc
lock
adc
je
and
dec
mov
xchg
ljmp
fs
shll
sarl
imul
jnp
sbb
jnp
movl
out
cltd
mov
mov
and
out
clc
and
xor
lea
mov
jmp
jo
sub
xor
mov
repnz
insb
cmc
add
cltd
arpl
aaa
hlt
outsb
pop
and
sub
sub
clc
popf
mov
jb
shrl
arpl
loope
repnz
mov
sarl
lcall
nop
xchg
dec
jecxz
scas
out
inc
mov
push
in
xor
loope
fcmove
pop
ds
inc
mov
ror
arpl
sub
lea
lahf
aad
ror
pop
mov
mov
test
cmpsb
negl
sub
lahf
mov
inc
pusha
scas
inc
add
inc
mov
out
out
popa
jmp
mov
jge
sub
sahf
pop
pop
pop
call
mov
inc
mov
rcll
adc
sub
addr16
lret
ror
addr16
push
int
pop
mov
cwtl
lret
shlb
scas
subl
shll
fs
bound
push
sub
fmuls
stc
addr16
enter
into
movsl
xchg
data16
fwait
jns
subl
lahf
cmp
or
mov
cltd
xchg
push
and
mov
add
in
lock
test
inc
mov
ficoms
add
stc
mov
cli
loope
lock
out
sub
cltd
mov
xchg
xchg
inc
xchg
adcb
and
enter
loop
jae
sbb
push
cmp
hlt
jl
ss
jl
jecxz
mov
lds
or
subl
jbe
lock
fwait
orl
add
popf
xlat
insl
out
lods
xor
mov
and
dec
iret
mov
inc
xchg
addr16
adc
sbb
mov
pop
cltd
mov
ds
stc
xchg
sbb
fwait
jg
in
adc
push
mov
mov
or
sbbl
mov
sbb
sbb
dec
jns
call
adcb
push
scas
xorb
cmove
sbb
sbb
add
inc
jg
stos
call
cmp
mov
nop
shl
iret
scas
data16
mov
daa
jl
mov
sarb
movsb
mov
in
mov
cld
lods
je
xor
push
std
loop
je
jecxz
inc
dec
jg
loop
mov
adc
outsb
jecxz
xlat
mov
mov
xor
add
mov
inc
out
or
fs
stc
mov
jecxz
in
outsb
adc
dec
xchg
cli
and
andl
data16
insb
pop
inc
add
jae
xchg
lret
jmp
cld
loope
lcall
scas
test
adc
shl
sub
sbb
in
jecxz
popa
aaa
fsubrp
cmp
push
in
ret
lds
jp
xchg
xor
jmp
mov
ljmp
push
ja
in
jg
lea
xchg
sub
jecxz
dec
ror
bound
lock
outsl
stos
push
test
mov
movsl
jl
stc
repnz
adc
int3
adc
in
inc
mov
loop
jl
jecxz
push
aad
adc
dec
mov
sub
shlw
pop
jae
mov
in
add
in
call
mov
mov
adc
in
pop
in
jnp
sbb
inc
inc
sbb
xchg
jns
mov
cmp
popf
mov
pusha
push
shlb
inc
add
jnp
in
je
cmpsl
xchg
mov
loopne
inc
ret
cmp
loop
mov
dec
stos
and
and
jmp
icebp
aas
ret
loop
xorl
jmp
jmp
jge
jnp
fcoms
stc
shll
mov
arpl
jae
jp
cmpsb
repnz
jae
pop
inc
mov
push
jno
arpl
sti
clc
add
cmp
loop
jmp
shll
mov
xor
push
xchg
shll
xchg
adc
cwtl
mov
call
movsl
jne
dec
cmpsb
loop
fisubs
mov
shrl
into
pushf
shl
pop
movsl
sahf
aad
outsb
repnz
scas
jmp
imulb
ret
jbe
or
sbb
pop
xchg
arpl
inc
ljmp
sbb
pop
pop
fdivrl
shl
add
mov
repnz
out
xchg
pop
loop
popf
repz
inc
sbb
addr16
adcb
and
jbe
fwait
sbb
mov
repnz
mov
popl
push
outsb
test
add
push
jecxz
icebp
push
mov
sbb
sub
jnp
insb
jmp
rcll
mov
cltd
outsl
mov
adc
repnz
jno
cmp
or
inc
out
enter
cmp
mov
stc
push
ficomps
cli
xchg
lahf
lock
in
idivl
and
loope
in
repnz
mov
push
loop
mov
shll
push
fcmovnbe
sahf
ja
mov
fdivp
lock
push
test
vpsubq
push
in
arpl
cmc
in
daa
lods
repnz
loop
scas
jno
sub
mov
mov
xchg
jns
lcall
outsb
shr
in
iret
lods
stos
xchg
loop
jae
loop
shl
daa
ljmp
or
dec
out
cmc
je
divl
jnp
ret
mov
xchg
loop
sub
pop
lock
mov
je
stos
shl
pushf
mov
stos
add
ljmp
roll
jmp
int
lret
movsb
mov
fnsave
lret
loope
mov
jno
test
cmc
aam
out
mov
sub
je
mov
out
out
lret
ljmp
out
dec
negl
add
and
jmp
sbb
movsl
pop
iret
mov
xchg
shll
mov
xlat
lods
ret
pop
imul
xor
in
out
jmp
ljmp
lret
iret
xlat
lds
cmpsb
stos
test
xchg
sbb
int
jg
icebp
jecxz
sbb
gs
mov
xor
dec
xchg
sbb
mov
push
mov
mov
mov
loopne
mov
stos
out
dec
shlb
mov
cmc
testb
xchg
sub
out
mov
adc
imull
shl
shrb
fsubrl
clc
jae
sbb
loope
leave
ret
xor
push
mov
sti
repnz
out
addl
mov
mov
push
xor
sub
scas
jecxz
mov
ljmp
mov
in
pop
addr16
repnz
mov
jmp
out
ljmp
push
fucomi
shll
push
ljmp
imul
push
repnz
mov
add
shl
iret
dec
in
mov
xor
add
inc
xor
icebp
mov
test
nop
outsl
stos
aad
jmp
icebp
scas
mov
in
jmp
insl
aad
cmp
or
es
pop
jmp
lea
mov
or
push
aaa
std
or
out
xchg
mov
push
mov
lret
stos
mov
xchg
insl
shr
shll
xchg
test
icebp
xchg
push
mov
stos
scas
aas
jmp
outsb
test
lds
lea
jne
pushf
hlt
adc
mov
push
lea
xlat
or
ret
mov
ja
popf
mov
jmp
jo
dec
or
rcrl
and
in
in
add
mov
lods
aad
nop
incb
push
mov
addl
stos
mov
add
testb
adc
jg
or
xchg
jnp
in
fldt
cmp
test
mov
pop
push
scas
loop
icebp
lahf
mov
les
push
lahf
jmp
dec
movq
mov
cmp
in
dec
push
mov
jge
cmc
or
out
push
jae
scas
push
and
scas
mov
inc
imul
les
jg
mov
std
shlb
jmp
gs
arpl
imul
leave
out
pop
pop
adc
loope
call
insl
out
out
pop
insb
stc
scas
sarl
pop
lret
in
dec
rol
sub
loop
fninit
pop
mov
pop
xlat
fimull
sub
dec
sub
notl
out
in
xchg
lret
or
cmp
aad
jmp
or
dec
mov
xchg
ds
xchg
aad
push
adc
or
jo
das
pop
out
scas
in
xchg
fldl
out
scas
psrld
loope
test
push
mov
mov
mov
fucom
mov
sbb
cmp
iret
mov
pop
test
jge
sub
mov
dec
mov
out
inc
jecxz
pop
frstor
outsl
scas
mov
lret
lds
mov
add
mov
sahf
mov
and
adc
stos
aad
mov
jb
push
das
pop
push
sbb
inc
fisttpll
xchg
in
call
push
cmp
gs
mov
mov
push
call
out
inc
or
cli
loopne
dec
pop
mov
mov
cmp
pop
or
xchg
dec
mov
test
insl
inc
push
dec
out
pop
inc
sub
ret
mov
push
push
int
cmp
test
add
insb
insl
iret
dec
mov
jno
xchg
movntq
fisttpl
sti
jmp
lret
fldcw
in
fdivr
cmpsl
divl
lock
orb
iret
fstp
out
ror
dec
jnp
lods
jecxz
imul
lea
sti
pcmpgtd
lahf
test
add
loop
aas
mov
cmp
mov
adc
cmp
mov
cmp
adc
rorl
in
xchg
movsl
xchg
push
cli
jmp
scas
adc
mov
stos
addl
imul
dec
lea
push
popa
fsubrp
xchg
jge
jge
mov
shrb
jbe
mov
shll
stos
push
adc
loope
loop
stc
jne
sti
pop
arpl
inc
leave
aaa
mov
mov
mov
loopne
jmp
faddl
jl
lret
in
lock
fists
cli
push
ljmp
in
out
in
aam
loope
ficompl
mov
jecxz
ret
jecxz
scas
daa
ljmp
out
outsb
out
jecxz
out
call
rcr
in
in
lcall
sarb
aad
xchg
ret
std
jbe
cli
inc
ljmp
pop
jmp
jnp
movsb
in
jmp
ja
xchg
push
out
fsubp
lea
jecxz
fstpl
sub
mov
mov
jecxz
xchg
inc
jge
sarb
fnsave
in
loopne
jmp
sbbl
icebp
int3
hlt
jmp
mov
sti
in
adc
jae
out
jmp
lock
adc
sub
lret
scas
in
scas
add
dec
jno
out
scas
filds
mov
jae
aas
roll
in
ljmp
pushl
fisttps
add
in
popf
sub
je
adc
pusha
out
push
dec
or
lock
insl
ljmp
mov
out
shrl
jnp
out
jmp
mov
stos
sub
loopne
ja
adc
pop
pop
sub
outsl
pop
mov
inc
jmp
push
mov
add
rcrl
in
sarb
fimuls
repnz
dec
jg
jmp
loope
sti
movsb
mov
fnstcw
ret
jne
pop
jmp
inc
push
dec
iret
xor
jmp
jo
int
fbstp
pop
popa
add
loop
push
rcrb
pop
adc
pop
pop
in
into
pop
or
stos
in
lds
in
ljmp
mov
test
out
pop
imul
pop
int
pop
pmulhuw
lret
jne
shr
scas
push
and
lods
int3
out
or
imul
shlb
enter
dec
dec
or
icebp
gs
movsb
mov
fwait
sbb
ljmp
loopne
scas
mov
loopne
mov
push
inc
fucomip
push
mov
inc
pop
xchg
ljmp
jmp
mov
jmp
sub
mov
in
mov
imul
and
mov
or
arpl
ljmp
in
xchg
jno
ret
mov
lods
or
loope
mov
push
fidivl
sbb
iret
leave
js
clc
jecxz
adc
push
add
push
dec
mov
push
icebp
cs
ret
loop
jle
in
aaa
mov
leave
cwtl
push
outsl
inc
jbe
inc
jmp
out
shll
jnp
jmp
sub
pop
ljmp
jmp
rorl
mov
pusha
out
mov
dec
push
std
cmc
clc
int3
lret
shl
mov
jecxz
ljmp
imul
lret
out
mov
in
mov
icebp
fucomp
jg
fnsave
jo
hlt
add
imul
ret
in
imul
popa
jg
je
xlat
imul
inc
mov
push
push
iret
rcll
sahf
out
cmpsb
shll
jnp
xchg
fmull
sub
in
shl
lret
jecxz
mov
dec
add
in
cmpsb
push
lret
mov
and
mov
stos
stos
fwait
sti
push
mov
rclb
pop
dec
xor
arpl
jmp
in
or
nopl
push
mov
xchg
bound
xchg
mov
es
lcall
fistpll
jmp
and
dec
dec
jmp
push
push
mov
add
xor
xor
push
sub
insl
push
push
iret
mov
push
stos
lods
mov
ficoml
std
mov
bound
xchg
inc
loop
pop
in
movsb
jecxz
mov
imull
clc
icebp
loopne
pop
arpl
mov
fwait
test
xchg
pop
or
or
nop
jmp
jno
dec
out
pop
addl
mov
mov
fisttps
sbb
test
jmp
push
out
dec
fsubrs
pcmpgtw
and
stos
mov
dec
fs
arpl
add
stos
imul
cmpsb
outsl
shlb
add
pop
mov
jo
outsb
test
loope
xor
adc
imul
fdivl
fnstenv
dec
lret
jne
push
jmp
or
loopne
faddl
push
outsl
xorl
out
cmp
icebp
jns
adcb
ret
inc
jnp
inc
insl
fnsave
cmp
xor
xchg
pop
fcomp
mov
xchg
lfs
lahf
xorl
jmp
xchg
shll
in
out
jecxz
mov
or
add
movsb
jg
rorl
jecxz
in
es
xchg
and
in
out
fstpl
cmpsl
imul
fists
lret
mov
push
aam
loop
mov
mov
mov
aas
push
or
pop
xor
mov
in
push
nop
dec
jle
jne
inc
in
js
cmp
and
mov
sub
sarl
pop
jbe
xchg
sbb
addr16
loope
jmp
jg
movsl
xor
mov
out
xor
cmp
mov
xchg
fildll
out
or
cmpl
fdivl
clc
popa
mov
sarl
adc
pop
in
out
mov
loope
push
jne
movsb
inc
nop
popa
lret
jecxz
dec
inc
and
dec
inc
out
out
mov
jae
lcall
xor
lds
mov
or
inc
mov
cwtl
jae
stos
push
inc
mov
fwait
inc
fsubp
clc
dec
dec
icebp
stos
shll
lahf
jecxz
pop
scas
fucomip
mov
orl
add
sub
xor
es
in
and
cmp
xor
pop
dec
shl
sahf
xor
pop
aaa
ret
je
shlb
gs
push
cltd
jnp
test
iret
xchg
stos
jmp
lret
fbstp
popf
out
sbb
add
fcoml
clc
inc
and
adc
jns
out
bound
sub
sarl
je
hlt
push
loope
fidivrl
jle
cmpsb
jge
cltd
pop
add
test
ljmp
rcr
inc
mov
cld
dec
gs
test
and
int3
cltd
jmp
out
jno
je
jecxz
stos
jecxz
dec
push
iret
xor
sub
mov
cmp
push
imul
mov
mov
fsubl
iret
sbb
cmp
pop
push
iret
out
sbb
pusha
inc
jmp
aad
mov
in
mov
push
frndint
ret
jmp
stc
outsl
in
jmp
dec
sub
mov
and
test
icebp
mov
ret
push
hlt
mov
cmpl
push
cld
xor
in
enter
fistl
xor
stos
in
mov
mov
xchg
sbb
cmpsl
mov
out
jecxz
clc
jmp
mov
xor
int
mov
cltd
fnstcw
mov
lods
mov
sarl
popa
cmpsb
mov
xlat
into
shll
ljmp
cmc
jl
adc
in
fisttpll
mov
adc
mov
and
sbb
sub
cmp
iret
in
sbb
ljmp
fucomip
lea
and
mov
jmp
pop
es
hlt
mov
jmp
daa
pushf
sbb
daa
mov
test
sub
or
stos
lods
loop
movsb
lret
push
popf
mov
jnp
adc
xlat
dec
enter
daa
push
jmp
mov
icebp
in
icebp
fsub
cmp
jbe
iret
sbb
cmp
mov
add
jecxz
xor
mov
adc
jge
cli
pusha
loope
ljmp
adc
imul
inc
clc
dec
popf
pop
jecxz
jmp
fucomp
add
dec
popf
lods
scas
mov
into
out
mov
stos
out
xchg
orb
andl
sub
mov
les
in
and
pusha
outsl
iret
dec
push
fwait
cli
hlt
in
push
lcall
sarl
insb
sub
mov
dec
lret
das
xchg
push
add
push
cmpsl
int
inc
mov
dec
mov
xor
push
dec
xchg
cmp
in
sub
cmp
ffreep
jnp
cld
movsb
pushf
mov
dec
inc
in
jns,pt
jno
dec
add
jg
lahf
mov
dec
mov
inc
pop
jge
je
out
jne
xor
jge
stos
xorl
sarl
add
in
movsb
in
lret
int
fdivl
mov
lods
jle
clc
ror
add
test
pop
add
stc
dec
bound
cld
fcoml
test
testl
lods
cmc
pop
inc
cmp
leave
jmp
fxam
imul
out
mov
jp
aas
mov
add
push
gs
in
dec
xlat
je
fisttpl
repz
jno
add
mov
jnp
pop
test
shll
mov
andl
cmpsb
shll
neg
dec
add
add
icebp
in
scas
imul
fsub
mov
insb
push
in
jmp
in
jnp
cltd
xchg
jg
aam
sbb
xchg
inc
xor
xor
mov
xchg
xor
fbstp
jno
fistps
dec
and
adc
jbe
sbb
test
clc
mov
cmpsb
sbb
lea
mov
and
clc
das
jg
fbld
ja
hlt
fbld
sub
cmc
and
jecxz
outsb
mov
sub
mov
sbb
and
or
mov
jmp
push
fildll
outsl
inc
cld
addr16
cmpsb
sti
jmp
mov
sbb
popa
or
jno
lods
pop
loop
stos
push
leave
and
in
xchg
aas
inc
or
inc
jg
xchg
int
jecxz
mov
fs
test
xor
dec
shrl
daa
cmpsl
das
jle
dec
jmp
lret
test
xor
jge
mov
inc
daa
sbbl
mov
daa
inc
mov
iret
rcr
in
lods
mov
dec
jecxz
sti
xchg
incl
xchg
pop
mov
stos
xchg
in
sbb
ljmp
mov
cmp
outsb
shr
pop
sbb
scas
sub
push
lods
xchg
push
dec
cmp
lea
cs
mov
lahf
lock
ja
jbe
es
xchg
lahf
pop
xlat
stos
cld
inc
out
shll
fcmove
pop
scas
test
aad
jge
out
push
fcoms
sub
loope
sahf
ss
leave
push
lods
inc
out
pop
loop
add
jmp
fwait
ljmp
sti
and
movsl
push
psllw
push
notl
ret
fcoms
addr16
iret
popa
in
mov
imul
xor
icebp
jecxz
popa
lret
cmp
sti
push
mov
sub
mov
pop
jecxz
jmp
in
push
fbld
lock
jno
sub
cmc
xchg
lods
jecxz
fistl
call
in
dec
add
jecxz
cmp
cld
outsl
cmp
mov
cmp
mov
mov
stos
shl
iret
scas
jecxz
rol
out
movsl
test
and
movsl
pop
adc
lret
xchg
mov
mov
movsb
mov
mov
jmp
mov
pop
in
jmp
xchg
aas
push
pop
je
vpavgw
push
push
lods
mov
jmp
es
fucom
pop
sbb
fnstcw
divl
jge
aaa
jae
jmp
mov
scas
addl
imul
jmp
cltd
sub
rol
fildll
xorb
jno
mov
fnop
lods
and
loope
in
in
arpl
xor
pop
lret
or
mov
insl
jae
pusha
fnstenv
pop
mov
popf
out
not
xchg
popa
jp
rcr
int3
jne
rcr
lods
pop
mov
jae
mov
outsl
insl
jo
scas
aaa
and
movsl
lret
inc
shll
scas
mov
rorb
fistps
insb
mov
loope
pop
ret
das
lea
out
mov
push
pop
adcl
test
out
jnp
es
fistl
add
or
mov
jg
daa
cmp
hlt
mov
pop
repnz
dec
cmp
clc
or
mov
jge
lret
pop
lock
add
mov
scas
ljmp
mov
stos
and
cmp
xor
repz
cli
or
dec
out
aad
inc
add
decb
daa
icebp
pushf
dec
dec
lea
mov
aas
xabort
mov
pop
cmpsl
cmp
lahf
and
dec
jae
ficomps
les
adc
and
add
sub
add
movsl
icebp
cwtl
or
out
lea
mov
dec
mov
movsl
xlat
mov
leave
cmpsl
xor
repnz
jnp
xor
push
xchg
addl
cmp
leave
scas
xchg
cmp
loope
pop
and
mov
aaa
imul
dec
testl
sub
jae
fimuls
in
out
repnz
movsb
push
xchg
and
stos
aaa
inc
lds
out
sti
mov
jg
sti
dec
sti
sub
out
jmp
dec
gs
pop
lret
in
sbb
inc
mov
sbbl
das
mov
sahf
pop
fwait
iret
fldl
je
sbbl
iret
mov
scas
stos
lret
popf
fstps
iret
btc
fiaddl
xor
out
packsswb
adc
out
lea
jae
adcb
mov
xchg
and
popa
aam
mov
pop
add
cmpsl
sbb
xlat
ljmp
rcrb
lock
or
fisttps
pop
imul
in
roll
icebp
pop
iret
imull
imul
loop
roll
rcrl
mov
jae
psrad
jecxz
out
jg
sbb
in
push
jecxz
jecxz
mov
pop
push
loop
loope
xor
iret
loopne
imul
aas
jecxz
ja
adc
out
jb
loope
sarl
jecxz
rorl
fldenv
jmp
fdiv
aaa
rcl
xlat
out
outsl
stos
or
loop
jecxz
aad
jnp
pop
mov
aam
imul
jb
loope
sarl
imull
shl
das
jecxz
rcl
scas
add
xlat
into
jb
loope
shrl
jecxz
jmp
bound
jecxz
lret
rcll
out
lret
daa
imul
jb
loope
rcll
iret
jmp
imul
aam
iret
pop
das
in
mov
jecxz
test
sbb
cmp
rcrb
pop
xchg
mov
scas
insb
mov
imul
orl
out
dec
jmp
js
stos
fninit
dec
xor
jecxz
push
shrl
jecxz
stos
mov
jae
out
xor
push
xchg
xor
dec
or
sub
mov
ja
push
mov
in
fistl
into
rcl
iret
mov
enter
mov
cmpsl
mov
dec
daa
ss
sub
fcomip
pop
cmp
movsb
sub
in
jp
xlat
cmpsl
data16
mov
lods
sub
lods
jecxz
rcl
out
dec
mov
fisubs
sub
add
out
lods
or
ja
mov
sub
mov
arpl
mov
dec
mov
sub
fistl
adc
stc
jno
mov
ret
lret
pop
mov
lods
dec
xor
pop
mov
ret
repnz
ljmp
xlat
ljmp
sub
cmovae
mov
jmp
sbb
xlat
mov
mov
and
pop
jmp
pop
jmp
sub
jns
and
pop
out
fucomip
repnz
sub
js
enter
imul
jbe
xor
out
out
sub
xor
xchg
iret
dec
mov
test
leave
pop
out
dec
das
aad
repnz
imul
imul
clc
ljmp
out
dec
jecxz
inc
mov
pop
jecxz
icebp
rcll
jmp
arpl
jae
shr
icebp
fidivl
and
or
dec
and
gs
fwait
pop
push
out
xchg
adc
cmpsl
cmpsl
popl
dec
stos
sahf
xlat
loopne
push
shrl
sub
out
imul
jns
and
outsl
mov
fstpt
push
mov
adc
movsb
xor
dec
imul
dec
stos
es
sub
iret
roll
mov
andl
scas
sti
jae
jecxz
gs
jmp
mov
rcr
push
push
mov
cmp
into
xor
shrl
mov
out
out
mov
mov
push
sub
shrl
scas
cmp
scas
and
imul
xor
or
sub
pop
pop
xor
dec
sub
cmp
mov
fwait
stos
xor
daa
ret
cwtl
aaa
push
xor
pop
imul
flds
mov
gs
lock
fmuls
sub
popf
mov
pop
jae
sub
xor
jae
mov
loopne
mov
loop
xor
lret
mov
pop
cmp
lahf
shll
shll
and
scas
aad
jmp
pop
scas
and
dec
lds
and
xchg
fwait
in
rol
jp
mov
loope
lock
cmp
and
pusha
out
pop
add
imul
push
jecxz
aas
das
nop
xlat
into
push
inc
push
jmp
mov
cmpsl
cli
shlb
cmpsb
les
popa
frstor
sub
mov
sub
mov
inc
outsl
xcrypt-ecb
cmpsl
into
scas
es
and
and
cmpsl
lcall
add
popl
popf
mov
lret
sub
into
rclb
fwait
stos
sbb
mov
inc
jne
push
scas
cltd
les
imul
mov
subl
sub
popa
dec
arpl
je
arpl
sub
jmp
arpl
outsb
ret
xchg
les
imul
mov
subl
sub
lods
sub
jecxz
out
adc
fsubl
sub
xor
xchg
push
sub
jmp
xchg
xchg
loop
sub
jne
out
pop
pop
lahf
mov
sub
jae
fcmovnbe
pop
out
dec
jmp
or
lahf
mov
cmpsl
jmp
in
sbb
cs
sbb
push
mov
cmpsb
pop
or
push
jmp
scas
outsl
and
sub
loope
xchg
arpl
aad
out
outsl
aas
adc
lret
bound
jecxz
mov
test
inc
xlat
jmp
xchg
mov
fwait
inc
push
xor
pop
lds
cs
add
fsubrp
sti
negb
xor
mov
mov
dec
sub
mov
add
fwait
pop
ret
sub
jae
insl
lods
lret
rcr
lock
dec
add
dec
ret
mov
sti
pop
dec
lods
cmpsl
sarl
mov
out
das
les
inc
jae
xchg
rcrb
orl
mov
push
subl
arpl
insb
jecxz
aaa
adc
inc
shll
fsubl
shll
mov
lds
fwait
imul
das
mov
subl
roll
dec
imul
in
insb
jecxz
aaa
jecxz
out
rcrb
bound
outsb
mov
arpl
loope
bnd
out
jbe
sti
out
cmp
aas
imul
jg
fmul
mov
sarl
xchg
out
cmpsl
outsb
jecxz
mov
fwait
cmpsl
dec
fsubrl
ja
mov
sub
adc
lret
pusha
inc
xor
adc
fldt
sti
stos
cmp
fwait
push
xor
xchg
les
xor
cli
mov
mov
gs
loop
out
fisubs
sub
stos
mov
aaa
mov
jg
mov
das
jmp
mov
pop
aaa
aas
dec
scas
mov
addr16
and
push
in
mov
movsl
call
mov
aaa
daa
dec
scas
aaa
aas
mov
and
mov
xor
adc
cs
jecxz
dec
mov
and
xchg
fs
sub
loop
xor
mov
aaa
fmull
cmpps
rcrb
sub
dec
mov
or
inc
mov
add
cmp
iret
cmpsl
imull
fsubrl
daa
mov
ds
pop
mov
mov
jb
ds
stos
xlat
mov
loop
nop
imul
dec
mov
push
out
xchg
imul
stos
sahf
xlat
lods
loop
test
daa
add
loopne
rorl
push
rcrb
cmp
loope
push
jmp
pop
xor
loop
xor
iret
stos
iret
fnstsw
push
ja
sbb
shr
jmp
das
shrl
jmp
mov
or
lds
mov
xor
cmpsl
lsl
cmpsl
adc
stos
cmp
loop
in
imul
pop
xor
mov
cmpsb
jb
cmp
fimull
push
in
sbb
adc
xor
stos
or
push
out
arpl
inc
mov
sbb
adc
fsubrl
in
cs
rorl
push
shrb
movsb
mov
sbb
xor
daa
movsb
sub
add
pop
leave
jnp
mov
popa
ret
lock
mov
adc
rorb
mov
adc
dec
popl
popf
mov
lret
sub
lret
inc
imul
das
dec
stos
sub
mov
xor
mov
ja
sub
lret
clc
outsl
shll
pop
lahf
imul
stos
gs
ljmp
lea
xchg
mov
sub
sahf
jno
pop
cli
jae
sub
mov
sub
popf
int3
or
mov
arpl
aaa
jecxz
jmp
sarb
jnp
adc
call
ret
and
dec
sub
lret
jmp
mov
mov
sub
shrl
xor
pop
xchg
mov
mov
outsb
add
roll
inc
and
add
test
test
xor
fiadds
mov
add
adc
jmp
imul
cmp
sub
je
iret
xchg
loope
xchg
jmp
aas
mull
or
fs
xor
rcll
outsb
and
shll
pop
cmpsl
popa
loop
sub
stos
js
sub
sub
push
int
mov
mov
adc
dec
sbb
cmpsl
lods
jnp
jg
xor
adc
mov
sub
cs
subl
sub
dec
cmp
call
arpl
jne
arpl
aam
nop
mov
stos
mov
shrb
icebp
fimuls
lret
bound
and
pop
imul
icebp
fmull
mov
push
add
lahf
xchg
iret
mov
mov
fsubrl
ljmp
sub
mov
sbb
cli
mov
mov
cmpsl
icebp
inc
sub
aaa
add
inc
outsl
daa
ret
loop
inc
jae
jne
aaa
pop
int
outsl
fcmovnb
ljmp
int
scas
sub
xchg
out
mov
push
pop
popa
or
sbb
sub
mov
jmp
xchg
aaa
adc
ja
add
sub
inc
mov
mov
sub
mov
jmp
inc
sub
mov
mov
sub
push
jne
out
dec
sub
ljmp
aas
gs
out
mov
divl
sahf
fldl
xchg
loop
sub
jne
out
cmp
dec
jecxz
fmull
cs
sub
and
outsl
mov
adc
ret
jmp
lea
xor
test
pop
or
adc
les
mov
xchg
out
jae
sub
arpl
loop
xor
iret
stos
pop
or
sub
inc
jmp
cmpsl
or
mov
jecxz
jae
adc
mov
cmp
push
loope
jmp
sub
roll
daa
ret
pop
andps
shrl
and
add
ljmp
daa
daa
ja
aaa
aaa
lea
scas
dec
push
aam
xchg
out
loop
xchg
mull
cmpsb
push
cmc
mov
and
xlat
loop
push
fmull
cs
inc
mov
bound
sub
repnz
xor
jge,pt
outsb
and
loop
mov
add
cmpl
xor
xor
shl
fldt
bound
xchg
shrb
les
arpl
ret
ret
popf
xchg
fldt
cmpsl
out
jmp
bound
stos
xchg
stc
test
aam
jnp
loope
xor
repnz
fnclex
mov
imul
xlat
popa
fs
das
pusha
ja
push
pop
add
inc
and
stos
stos
pop
sti
mov
pop
fildl
iret
fldt
dec
jnp
pop
cs
ljmp
rcrb
jl
sub
mov
orl
fstpt
lods
rclb
adc
sarb
bound
add
out
push
bound
or
imul
imul
mov
or
imul
dec
fldt
psrlq
inc
movsb
and
add
jecxz
mov
gs
jnp
cmp
push
aam
ret
popf
arpl
push
fisttpl
dec
cmp
rorb
xchg
loope
fisttpl
jle
lods
dec
das
iret
loopne
dec
mov
imul
scas
pop
jae
dec
aam
mov
dec
sub
bound
sarl
rcr
ficomps
rcrb
loope
mov
adc
imul
mov
mov
fucomp
popf
pop
pop
inc
fildl
iret
pop
stos
inc
sti
out
jb
loope
mov
orl
scas
sarl
imul
bound
mov
cmp
cmp
fiaddl
in
jmp
inc
xchg
mov
insl
leave
dec
pop
scas
adc
inc
ret
bound
movsb
dec
imul
fldt
and
push
add
mov
sub
bound
mov
fcomps
mov
aaa
iret
subl
or
scas
mov
outsl
mov
enter
or
imul
cmovae
fistl
mov
call
pop
test
inc
pop
iret
stos
stos
cmpsl
sti
mov
jno
popf
cmpsb
fldt
dec
bound
shlb
sbb
movsb
fldt
xchg
xchg
mov
stos
xor
sarb
push
sub
ret
mov
scas
stos
mov
sub
sub
dec
cltd
daa
popf
sahf
fistl
and
xchg
and
jcxz
xchg
shll
bound
mov
imul
sbb
roll
loope
mov
xlat
into
negl
bound
shll
int
subl
fistpl
inc
loope
shlb
in
jecxz
adc
mov
fwait
bound
mov
fildl
dec
sti
subl
fistpl
push
loope
vmovhps
pusha
in
out
lret
enter
mov
push
push
pop
mov
imul
ret
leave
mov
jnp
cmp
bound
lcall
enter
cmp
iret
mov
xchg
inc
inc
sub
xchg
rol
out
add
lods
dec
daa
sub
cwtl
fcmovnbe
repnz
or
loopne
mov
push
ret
out
into
add
icebp
fildl
lret
cmp
das
repnz
repnz
out
icebp
repnz
sub
jnp
jae
lock
imul
mov
das
popf
ljmp
loop,pn
out
mov
lods
out
jecxz
jnp
inc
jecxz
push
in
daa
jecxz
fbld
pop
imul
fs
filds
fcmovnu
insb
fninit
loopne
fiadds
jmp
faddl
fcmovnbe
and
movsb
mov
jecxz
xlat
xchg
and
aad
mov
mov
xor
shll
pop
sarb
lods
shrl
sarb
mov
add
xchg
mov
jae
jae
adc
int3
adc
mov
and
cs
xchg
pop
lods
leave
outsl
xor
mov
jp
mov
xchg
adc
dec
lret
in
ljmp
inc
mov
dec
out
stos
lods
out
ror
mov
push
in
mov
jmp
lret
lret
mov
out
insb
arpl
add
aad
in
in
jp
test
lret
mov
out
insb
arpl
add
aad
fdivrl
in
fimull
fld
jnp
dec
out
xlat
add
pop
ret
stos
aad
sub
aad
shrb
shrl
lret
mov
out
insb
arpl
add
aad
lret
jp
in
shufps
add
pop
out
ret
ret
lcall
sub
sbb
cmpb
xchg
xchg
xchg
pushf
icebp
ja
mov
push
stos
bound
shl
mov
mov
ljmp
jae
scas
jb
pop
or
xchg
sti
mov
jb
dec
imul
fcmovbe
lcall
mov
mov
dec
scas
inc
jb
inc
in
out
lret
dec
mulb
dec
xchg
rcl
jmp
sar
rcrl
mov
mov
imul
mov
pop
lret
push
mov
and
add
fidivl
aas
mov
dec
xchg
mov
jnp
mov
decl
imul
bound
mov
lahf
sbb
pop
lret
jecxz
mov
dec
dec
lods
xor
daa
ljmp
pop
into
test
dec
inc
rclb
jae
push
pop
cli
daa
ret
fbstp
stos
push
lahf
mov
add
arpl
xchg
jmp
scas
sub
dec
arpl
and
fisubl
jae
lret
imul
sub
xchg
xor
mov
imul
out
sub
pop
ret
mov
jmp
ljmp
sbb
xchg
nop
xor
cmpsl
mov
fnstcw
aaa
bnd
xchg
jg
negb
movsl
jg
jmp
cmpl
ficoml
int
mov
ja
in
rolb
inc
int3
movsl
jae
fistpll
orl
les
aas
jbe
test
fidivrs
hlt
jbe
xor
dec
movsl
pop
ljmp
dec
rcll
lret
shll
mov
mov
cmp
icebp
das
dec
mov
and
outsl
and
push
sbb
orl
pop
or
xor
mov
cmpsl
scas
scas
xor
mov
out
inc
xlat
sarb
lcall
mov
xor
out
pop
pop
int3
mov
jb
jnp
pop
push
xlat
dec
cmpsb
xchg
push
lea
lods
pop
repnz
lods
pop
scas
adcl
inc
mov
add
xor
stos
dec
jg
dec
mov
movsb
push
out
dec
loop
mov
jg
sarb
fbstp
fimuls
pop
mov
mov
xchg
mov
mov
out
mov
add
mov
jmp
fidivrs
cmp
out
out
mov
push
pusha
cmp
cmpsl
mov
cltd
pusha
loopne
stos
and
out
jmp
lret
cmp
rcrb
aam
mov
repz
inc
loopne
stc
adc
jmp
cmpsl
stc
xchg
xchg
mov
out
out
inc
and
clc
push
jecxz
dec
enter
fcmovnu
fistpll
xor
pusha
cmp
mov
add
sbb
ja
adc
inc
fistpll
in
cli
lret
xor
mov
pushf
sbb
shrb
add
xor
cmp
lret
lret
loopne
pushf
jecxz
xchg
mov
loope
lret
pushf
or
aaa
inc
xchg
in
mov
adc
inc
mov
divl
pop
mov
stos
fucomi
insb
rcr
inc
pushf
push
fstpt
xchg
pushf
out
jecxz
stos
push
lahf
leave
fdivrl
mov
pop
stos
loope
insl
mov
mov
clc
add
mov
adc
leave
movl
fldt
mov
cwtl
popa
sti
pushf
daa
pushl
loope
mov
pop
xor
xlat
in
lret
lret
loopne
and
fcmovnu
mov
jnp
fbld
ds
test
out
xor
out
push
clc
push
mov
loopne
dec
insl
lahf
jl
mov
lods
push
cltd
shlb
imul
mov
mov
dec
aas
fistps
mov
or
pop
repz
in
dec
in
mov
lret
add
ja
fists
sub
mov
adc
or
imul
xchg
mov
shll
sub
call
sti
inc
test
fildll
dec
out
fsubrl
mov
lods
andl
mov
cmpb
sbb
pop
faddl
fldenv
ret
pop
xchg
dec
pushf
sbb
sbb
jno
and
fdivs
scas
cmpsl
int
icebp
stos
movsl
test
lret
or
loopne
loope
fcmove
xchg
addr16
stc
lret
imul
fldcw
icebp
mov
mov
loopne
ret
jecxz
mov
out
dec
sub
mov
nop
mov
xor
dec
push
mov
inc
jno
insb
int3
mov
mov
sahf
cmc
into
mov
test
aaa
fcom
jg
std
ffreep
pop
or
xchg
stos
lods
jl
mov
popl
movsl
sbb
xor
adc
xlat
mov
mov
xor
xchg
aas
shll
icebp
jmp
lret
lods
lret
stc
push
jle
dec
data16
jb
mov
fildll
aad
out
xor
addr16
mov
mov
sub
imul
mov
mov
lret
movl
mov
inc
out
ljmp
jmp
inc
jnp
call
xchg
jns
cmp
das
mov
out
stos
int
ljmp
mov
lret
fmull
pop
xlat
out
mov
bound
xor
jg
movsl
fcomp
xchg
sarl
pop
mov
fildll
xlat
xor
lret
adc
movsl
fdivs
orb
movsl
mov
mov
mov
fcompl
dec
push
in
sub
call
int
popa
aas
jg
mov
mov
cmp
stos
dec
shlb
jnp
js
fdivrl
pop
jge
imul
lret
mov
xchg
test
das
in
mov
fwait
setg
lret
jne
lods
outsl
fcoml
stos
fwait
int
push
sahf
adc
pop
dec
fisubrs
sbb
adc
icebp
das
mov
sbb
mov
push
mov
mov
int3
or
out
fwait
push
stos
mov
cmp
xchg
xor
fildll
adcl
add
mov
rcll
hlt
adc
lret
lret
daa
test
fsubl
lret
out
xchg
lcall
ret
leave
cpuid
and
pop
fdivr
pop
movsl
leave
push
lret
mov
ret
pop
aaa
sti
leave
bound
fcoml
xchg
movsl
enter
and
sbb
fbstp
in
lahf
jmp
mov
xlat
push
mov
scas
dec
fcmovnbe
notl
lret
mov
rcr
es
fwait
xchg
ret
and
mov
lock
fucom
idiv
xchg
lret
xor
subb
fildll
out
ret
lds
std
sbbl
movsl
iret
ljmp
adc
adc
jbe
xchg
fsubrl
or
mov
jb
inc
andl
jge
ss
jp
icebp
lret
mov
push
das
xor
xor
push
jecxz
jno
push
sbbl
xor
sbb
scas
subb
or
xchg
loope
jl
and
ds
mov
subl
jge
mov
int3
and
lock
addl
out
lock
xorl
mov
test
test
imulb
push
mov
lock
fbld
nop
mov
rcr
xor
mov
movsl
jb
test
aas
jmp
sub
ds
icebp
mov
test
xchg
fstpt
in
ret
xlat
mov
nop
mov
fildll
ret
push
cmp
lea
mov
mov
mov
sub
ret
mov
mov
test
sbb
out
int
adc
loopne
mov
mov
out
adc
and
dec
ret
aaa
out
xchg
jmp
test
fbld
cld
push
or
ret
clc
jno
fisttpl
mov
daa
inc
pop
fwait
lods
lods
adc
pushf
shrb
inc
jb
scas
mov
pop
das
hlt
repnz
sbbl
call
ret
stos
jno
xorl
scas
mov
arpl
out
jecxz
pop
mov
icebp
xlat
jmp
in
mov
arpl
andb
popa
fwait
ret
lods
fwait
arpl
lret
dec
jmp
or
mov
xchg
ret
jle
out
filds
xor
pop
jle
xor
ret
and
lret
shrb
rcll
jae
jo
rorb
ss
loopne
mov
icebp
dec
inc
rcl
leave
loope
inc
rol
arpl
movsl
shrl
xchg
rorl
ret
aas
and
mov
shll
mov
jns
fadds
fidivs
mov
mull
in
scas
dec
icebp
mov
scas
repnz
insl
outsb
jle
imul
ret
arpl
cmp
sbb
jnp
push
mov
in
dec
lret
rorl
pusha
xor
test
outsl
imul
mov
icebp
jae
or
scas
ss
scas
mov
jecxz
fs
pusha
xlat
jge
fistps
call
lcall
shll
pop
test
mov
mov
ss
test
jnp
in
jecxz
cmc
mov
cmpsb
mov
hlt
lret
das
fcmovnu
aas
jae
lock
fldt
stos
icebp
mov
push
cli
add
lret
pmaxub
enter
daa
int
jecxz
lods
lret
aaa
mov
ja
insb
mov
ljmp
and
or
shl
iret
in
outsl
out
ja
sub
jp
imul
xor
mov
xchg
push
sbbb
jmp
cmpsl
mov
pushf
sub
ffree
and
jne
in
pop
fstl
xlat
dec
iret
lret
add
aam
bound
and
jp
mov
out
sub
ret
sbb
inc
mov
and
mov
loope
cmp
repz
mov
outsl
hlt
ror
scas
call
jae
arpl
arpl
cwtl
aas
mov
loopne
dec
inc
cwtl
sti
test
mull
xchg
mov
movsl
or
or
js
mov
mov
mov
mov
mov
call
out
lods
mov
inc
push
adc
mov
push
inc
fldt
mov
or
xor
lock
mov
push
push
and
mov
in
cwtl
and
fisttps
aas
daa
ret
mov
cmpl
mov
jae
sub
mov
mov
movsb
xchg
cmpsb
mov
in
fisubrl
fnstenv
add
rcll
adc
pop
dec
pop
sahf
lcall
dec
or
iret
loop
mov
mov
pop
outsb
ret
xorb
std
xchg
xor
mov
pop
sbbl
xlat
pusha
testb
jp
movsb
mov
mov
in
fcmovb
cmp
mov
or
push
rcl
mov
daa
loopne
ret
and
mov
call
xchg
mov
mov
cwtl
stos
xchg
in
and
fs
jg
or
shll
dec
jb
jo
and
shl
arpl
ret
cmpsb
add
push
pop
push
scas
lea
test
daa
jecxz
fwait
jecxz
outsl
scas
dec
out
xchg
daa
cmp
xchg
loope
inc
mov
and
ret
cmpsl
mov
cmpsl
and
iret
imul
and
test
add
imul
xlat
ret
jo
call
into
sahf
mov
loopne
das
add
xlat
mov
jecxz
pop
push
mov
popf
inc
scas
aas
imul
loop
cmpsb
xchg
jnp
fstps
jb
sub
pop
push
mov
push
rcl
pop
jmp
mov
fucomp
das
xchg
int3
push
jmp
out
ljmp
push
das
mov
xchg
mov
ret
out
stos
ret
fsubrs
lods
imull
stos
stc
xchg
addr16
push
repnz
pusha
lret
or
pop
push
jb
pop
mov
mov
pop
xlat
push
push
lahf
aas
out
jnp
sbb
cli
pushf
scas
lahf
das
push
scas
xlat
jecxz
imul
movsl
xlat
cmpsl
jmp
js
mov
sbb
inc
ret
mov
arpl
loope
andl
movsl
xlat
iret
mov
pushf
push
inc
mov
or
xlat
movsb
imul
mov
pushf
push
cs
and
leave
jne
mov
rorl
add
lds
fldt
lret
loopne
and
mov
lods
arpl
pop
fsub
sahf
jecxz
das
repz
push
loope
scas
aad
mov
jmp
loop
les
mov
imul
subl
add
ja
shlb
lret
sub
pop
pop
xchg
movswl
mov
dec
lcall
fnstenv
pop
mov
cmpsb
cmp
test
fwait
call
push
dec
rcr
xchg
pop
ficoms
sbbl
ficompl
and
andl
mov
mov
nop
insb
lahf
pop
xlat
inc
xchg
insl
ret
sarl
lock
mov
mov
scas
cmp
arpl
rcl
bound
mov
cltd
icebp
mov
mov
push
iret
leave
or
and
orl
fistl
mov
stos
stos
aad
ret
outsb
pop
out
and
icebp
ret
pop
loop
fisttpl
dec
adc
cmpsl
lock
mov
fstps
out
imul
movntps
inc
divl
mov
fldenv
jmp
pcmpeqb
sub
notb
not
fldenv
lret
neg
mov
adc
test
cmpl
lea
adc
jno
mov
aad
call
jae
mov
lahf
mov
and
xchg
inc
mov
in
leave
das
sbb
test
fidivl
mov
mov
jae
cmp
fistpl
out
cld
and
mov
pop
sub
adc
pop
mov
fsub
out
pop
in
fbstp
add
aaa
and
mov
xchg
int3
lcall
outsb
adc
mov
loope
nop
mov
mov
outsb
popa
sbb
pop
rolb
sub
shl
xor
loope
adc
fnstenv
mov
stos
sbb
daa
jmp
out
mov
or
xchg
jecxz
mov
inc
les
xor
adc
mov
jecxz
mov
dec
ffree
ds
pop
test
iret
cmp
lahf
jmp
mov
outsb
lahf
xchg
sub
cmp
ret
lret
sub
sbb
pop
mov
sub
adc
call
scas
rorb
xchg
imul
add
iret
ret
outsl
xchg
lds
fcmovne
test
or
fucomip
push
pop
popa
mov
pop
push
fnstenv
mov
inc
mov
lret
pop
out
std
mov
fisttpll
mov
adcb
loop
mov
cmpsb
lret
xlat
shrl
in
xchg
pop
btc
jmp
jnp
jecxz
jp
mov
cmp
lret
mov
loopne
mov
fbld
ret
jmp
fidivl
dec
std
ljmp
cs
stos
lret
iret
incl
addr16
mov
xchg
push
pusha
pop
repz
cltd
mov
in
fcomi
and
jno
xchg
fiadds
fstpl
push
sub
arpl
push
mov
mov
mov
jg
xchg
fcmovbe
adc
ret
mov
test
sbb
add
shll
test
xchg
sti
out
jae
ja
push
ja
lea
and
mov
and
jbe
fsubr
outsb
inc
popf
push
mov
popa
mov
cli
in
js
xchg
stos
push
mov
mov
subb
shrl
xchg
outsb
mov
outsl
pop
aaa
adc
inc
jbe
mov
inc
movsb
outsl
sbb
lret
jecxz
int3
inc
andl
push
addl
adc
jo
or
stos
mov
pop
xlat
iret
add
push
push
dec
outsl
dec
inc
rep
stos
shrb
sbb
mov
f2xm1
adc
fisubs
lcall
push
dec
addr16
cmp
fisttpl
pop
loopne
xchg
cmpl
out
repnz
outsl
js
jge
fbld
in
in
ljmp
push
ret
mov
into
insl
xchg
fwait
aam
int3
add
xor
lret
jg
ret
jecxz
mov
xchg
pop
dec
dec
dec
or
mov
jns
imul
iret
lds
xchg
xchg
mov
enter
stc
jge
cmp
mov
dec
cltd
icebp
mov
mov
aam
jae
mov
rcll
push
lret
subl
mov
imul
dec
mov
cwtl
fdivs
pop
or
fstpl
rcr
push
js
xchg
cmpsl
and
mov
out
xchg
lcall
lret
lea
fcmovu
jmp
or
or
mov
test
jecxz
out
pop
stos
dec
pop
cmpsl
iret
push
std
outsl
mov
lret
imul
addr16
shl
lahf
inc
aaa
adc
stos
std
jg
stos
cmp
fdivrs
pop
mov
mov
add
push
fwait
sbb
std
cli
filds
gs
inc
xchg
mov
fildll
repnz
shr
mov
mov
call
bound
add
aas
aam
cmpsl
xor
pop
leave
push
inc
jae
rcr
dec
inc
rcrl
mov
imul
stos
loop
sbb
mov
jp
fxch
in
ret
lods
cmp
les
lock
cmpsl
shr
xchg
xchg
addr16
sbb
cli
loop
lds
cmp
sahf
cmp
push
lcall
xchg
addl
loope
fwait
and
sub
mov
mov
jecxz
ret
lods
aad
xlat
fnstsw
rorb
push
out
adc
bound
in
popa
push
ret
cmp
sbbb
ret
int3
stos
push
push
inc
insl
inc
int
fcomp
mov
cmp
mov
push
sarb
inc
xor
lods
sub
arpl
pop
stos
jecxz
ret
ja
pop
in
dec
pop
push
outsl
test
jecxz
psrlw
and
sbb
cli
lock
or
arpl
xlat
jle
arpl
stos
pushf
scas
push
loope
shll
testl
fwait
outsb
xor
out
fldcw
inc
shrl
cmpsb
es
fisubl
mov
ljmp
jae
ja
push
push
xchg
jnp
fisttpl
mov
pop
pop
inc
cmpsb
adc
mov
cwtl
imul
sub
mov
xlat
rcll
push
pusha
faddl
int3
std
stos
jns
jecxz
out
loopne
inc
in
jl
lahf
jae
dec
loope
outsl
call
mov
mov
pop
mov
sbb
lahf
mov
ljmp
fbld
fsubs
call
push
pop
and
jo
sbb
lret
outsl
xchg
add
cmpsl
xor
loopne
or
push
sub
lret
and
insl
aaa
fadd
adc
outsb
scas
and
lret
aas
add
into
gs
mov
outsb
cmp
into
xlat
push
and
cmpsl
and
mov
dec
cs
sti
mov
rclb
sbb
pop
in
fcmovnbe
lcall
dec
mov
dec
aaa
into
rcl
push
out
and
ret
adc
jae
mov
int
ret
cld
jmp
ljmp
adcb
int
lcall
outsb
dec
sbb
inc
fcoml
stc
cmpsb
push
test
jecxz
in
sbb
lret
jg
mov
pop
lret
aaa
ja
pop
mov
adc
xchg
ror
push
xlat
pop
mov
rcrl
jb
dec
lahf
mov
or
daa
jmp
arpl
stos
lret
aas
das
inc
adc
in
mov
mov
out
push
cmp
fnstsw
popl
cmp
lret
ret
lods
adcb
xchg
fildl
jmp
scas
jb
loope
xchg
ret
out
out
xchg
mov
jg
jmp
and
and
ffreep
iret
arpl
push
or
mov
mov
int3
ret
xor
mov
mov
add
sti
into
inc
sub
pop
lea
mov
fs
add
adc
pop
arpl
push
mov
shrl
pop
or
rcl
call
push
dec
dec
jmp
jge
scas
iret
aaa
cmpsl
outsb
cmp
dec
adc
sti
outsl
insl
sub
lret
popa
test
shrl
icebp
fisttps
mov
cmp
mov
pop
fld1
into
fistpl
stos
leave
ret
fcmove
loopne
aam
out
mov
push
sbb
jno
scas
mov
inc
push
fldt
xlat
sub
test
mov
dec
cli
sub
scas
xor
ret
leave
sub
sub
aam
shrl
lret
mov
lret
mov
pop
loopne
xchg
mov
les
pop
dec
and
pop
js
cmp
sub
jecxz
scas
imul
pop
shr
ret
cmp
push
xchg
filds
mov
fcomip
and
or
mov
dec
popf
adc
shrl
fwait
fs
adc
jbe
imul
xchg
hlt
loopne
jno
jecxz
subb
outsb
sub
cs
stos
sub
push
scas
add
fldcw
jg
rcl
lret
lea
mov
xor
inc
popf
jmp
jbe
movsl
mov
movsl
in
sub
fwait
outsl
fstpl
inc
mov
xchg
imul
sub
adc
inc
jns
orl
dec
icebp
das
add
bound
lods
xchg
xchg
inc
push
int3
mov
pop
movsl
call
or
out
xor
dec
iret
mov
xor
loop
adc
dec
lret
pop
arpl
jg
or
or
imul
dec
arpl
int3
movsl
dec
mov
xorb
test
les
push
shrb
jmp
movsl
dec
xlat
sbbb
pop
into
imul
or
push
jne
or
jmp
dec
jp
jl
lea
mov
cli
mov
and
ret
dec
add
adc
leave
stos
pop
push
movsl
lret
mov
mov
icebp
ret
ja
jg
jl
imul
jecxz
cli
lea
cs
out
ret
mov
mov
fucomi
arpl
mov
jne
mov
movsl
aas
mov
ret
movsb
stos
loopne
popf
lret
aas
outsb
pushf
push
scas
in
xchg
cmpsb
adc
xlat
adc
ret
mulb
subb
mov
inc
mov
call
push
arpl
cmp
inc
cld
xlat
adc
mov
mov
push
pushf
arpl
ret
lret
lret
jns
sahf
xchg
sbbl
xchg
sub
inc
ss
addr16
cmpsl
mov
dec
rorb
aad
movsl
mov
stos
int
outsl
loop
pushf
insb
rcrl
fldt
fnstenv
scas
pop
scas
movsb
sub
push
lods
inc
dec
fldl
pusha
sub
cltd
add
ja
add
ljmp
cmpb
sbb
sub
mov
in
fiadds
out
mov
inc
mov
stos
push
xchg
out
jno
outsb
mov
mov
xchg
xchg
shlb
push
dec
mov
fbstp
mov
out
ret
das
fcom
addr16
imul
ret
xor
imul
mov
imul
and
mov
out
shlb
lcall
mov
push
lret
xchg
pop
flds
and
jnp
jno
and
mov
inc
inc
xchg
xlat
jmp
lahf
sbb
shrb
fld
adc
cltd
and
arpl
insb
rclb
inc
inc
bound
sarl
mov
inc
bound
aam
lret
jp
incl
mov
es
repnz
ffreep
lret
daa
inc
add
xchg
test
andb
mov
pop
movsb
mov
mov
push
pop
jecxz
jne
lds
ret
mov
pusha
push
clc
pop
lods
mov
arpl
mov
inc
jle
addr16
cmp
out
adc
addr16
in
fdivs
inc
mov
cmpsl
mov
lahf
jmp
dec
ret
mov
ret
mov
xlat
push
mov
sti
dec
loope
mov
outsl
dec
mov
js
sti
push
adc
sbb
push
faddl
daa
ret
in
jle
or
lret
adc
iretw
pop
xchg
fstpl
jae
mov
push
mov
push
fcmovnbe
imul
shr
push
mov
lret
into
fwait
int3
imul
jecxz
hlt
mov
mov
pop
mov
stc
popf
adc
xlat
pop
loopne,pt
sub
cmp
subl
ret
jno
mov
dec
loope
ds
roll
fbld
mov
fists
fidivs
push
popa
add
sti
fsubrl
xor
frstor
push
bswap
test
ljmp
popf
adc
mov
pop
xorb
mov
push
mov
or
mov
pop
loope
pop
movsl
int
int3
pop
enter
jae
fcmovu
xlat
jae
bound
jecxz
add
arpl
jnp
hlt
lret
xor
int
mov
fldpi
mov
mov
mov
push
fwait
lcall
das
jb
push
mov
lret
int3
pop
pusha
dec
jo
xchg
mov
adc
out
mov
loop
dec
shr
sbb
aaa
ret
arpl
push
stos
cmp
test
in
add
rcrl
dec
push
das
icebp
inc
sahf
int3
add
xchg
lock
mov
fwait
xlat
jecxz
inc
cmpsl
scas
mov
fists
aad
into
les
mov
int
pop
mov
jo
lret
fistpl
shll
sub
addl
lret
add
cli
mov
shll
add
movsl
cmp
into
subb
dec
sub
cmp
push
mov
mov
fcmovu
jmp
addr16
loopne
mov
daa
mov
cmp
outsl
shll
fdivrs
stos
inc
divl
in
xor
shrl
test
xlat
inc
mov
daa
mov
aaa
dec
addr16
dec
movsl
lds
lret
rcr
loopne
arpl
testl
imul
lret
sub
jnp
ffreep
scas
fcomi
rcll
iret
fildl
cltd
and
fsubl
popa
dec
jge
mov
stos
xlat
pop
xchg
pop
in
das
es
or
les
jmp
gs
pop
ret
cmpsb
das
push
or
pop
aaa
lret
aas
jnp
test
std
xor
scas
popa
scas
lds
fbld
ret
jecxz
pop
insl
adcb
fldt
iret
sbb
mov
push
loop
ljmp
scas
mov
loopne
jge
add
fcmovnb
mov
pop
arpl
into
pop
lds
into
mov
xchg
fwait
mov
lods
rorb
xlat
sti
mov
clc
cmp
cmp
icebp
xlat
pop
repz
out
outsb
dec
int
cmpsl
mov
and
stos
inc
cmp
bound
addr16
mov
push
and
out
mov
lret
out
sbb
mov
lods
mov
aas
mov
bound
sti
sub
cwtl
testl
xchg
fbld
hlt
pop
bswap
jecxz
dec
sbb
cmp
loope
and
ja
inc
mov
call
stos
mov
imul
xorl
faddl
shlb
jb
jbe
addr16
xchg
mov
rdpmc
loope
icebp
fistpll
cmp
xchg
mov
mov
sbb
negl
xor
sbb
push
aam
mov
mov
popa
sti
movsb
sub
mov
jmp
xchg
push
lret
jmp
bound
jecxz
inc
dec
int
mov
imul
inc
add
and
loop
addl
mov
call
mov
sub
lret
ficoms
mov
stos
or
mov
dec
cltd
add
shll
pop
adcl
int3
or
loope
outsb
roll
mov
scas
incl
repnz
mov
inc
jb
stos
jnp
lahf
shlb
or
pop
cmpsl
roll
mov
xchg
cmpb
les
sbb
imull
mov
aas
lea
inc
lret
fstl
mov
cmp
shll
sbb
inc
adc
fwait
xchg
pop
and
cmpsl
fistpll
xchg
aas
outsb
shrl
mov
jbe
mov
out
repnz
stos
ret
jns
xchg
adc
push
aad
mov
mov
aad
xlat
pop
fldpi
ljmp
out
lahf
xchg
mov
enter
inc
das
cmp
push
push
mov
mov
fucomi
xor
ret
cmp
xlat
mov
mov
cmp
xchg
dec
rcrl
jno
lcall
lret
call
pop
stos
stos
shr
pop
mov
pop
rcrl
fidivrl
lock
cmp
call
lahf
ret
jne
jl
cltd
iret
movsl
ljmp
pop
iret
mov
in
clc
pop
insl
aas
int
shll
xchg
shlb
icebp
jecxz
mov
cmpsl
push
lret
cmp
mov
jne
or
jmp
xlat
mov
or
scas
mov
add
dec
or
fcmovnu
das
sbb
inc
and
out
and
mov
adc
pop
imul
mov
iret
scas
stos
cli
das
lret
stos
ja
imul
adc
xchg
call
xchg
cltd
xchg
cmpl
sahf
xor
aas
mov
fwait
jg
push
push
mov
fldl
out
xor
mov
ret
fcmove
jno
mov
inc
mov
pop
ljmp
and
pushf
ss
push
mov
and
aaa
fstl
mov
out
xchg
inc
int3
or
cmp
mov
cmp
or
jmp
sahf
mov
test
mov
in
push
aaa
mov
int3
push
mov
xor
mov
ret
nop
mov
fiaddl
ret
add
ret
fmul
mov
mov
fists
movnti
dec
dec
ret
jae
mov
push
daa
data16
repnz
mov
fcmovnu
mov
nop
mov
mov
xor
shrl
mov
lretw
fldcw
jne
xchg
xlat
mov
pop
adc
pop
xor
fstps
jb
out
fdivp
xchg
add
and
mov
adc
xchg
sub
ljmp
inc
push
mov
sbb
pop
jg
fldenv
fildll
arpl
imul
js
xchg
inc
pop
fbld
jecxz
fiaddl
rcrl
arpl
sub
hlt
data16
mov
ljmp
xchg
lea
int3
mov
shrl
cmpsl
imul
outsl
lret
ret
mov
lret
pop
or
mov
call
push
lret
mov
lock
scas
lahf
mov
inc
pop
arpl
cmpsb
xchg
scas
insl
roll
lret
and
dec
jg
jmp
fnstcw
sarl
leave
ljmp
loop
imul
ret
mov
mov
loop
out
in
ret
js
sarl
mov
lret
pop
xor
loope
inc
sti
gs
sbb
xchg
imul
pop
mov
jns
test
jecxz
jl
dec
das
outsb
divl
xchg
cli
rdtsc
dec
jecxz
mov
pop
outsl
fidivs
or
cmpsl
push
mov
sbbl
ss
in
mov
iret
fwait
xor
sarb
push
jno
fldcw
mov
mov
lock
xchg
cltd
mov
movsl
rclb
xchg
inc
lret
scas
mov
ja
inc
fld
jbe
lods
pop
sarl
inc
call
mov
mov
mov
setno
das
adcl
mov
iret
mov
imul
sub
scas
dec
daa
add
lea
cmpsl
add
into
jnp
fcoml
lret
ret
lret
mov
add
shl
xchg
adc
sbbl
ret
dec
negl
fsubrl
test
mov
fcoml
aad
mov
lods
out
pop
stos
stos
jo
sbb
shrl
cmp
add
filds
rorb
mov
mov
and
cmp
or
pop
jae
jno
cmp
mov
mov
fildll
mov
lods
inc
mov
int3
add
arpl
enter
dec
insb
lea
sbb
pop
dec
jecxz
mov
sub
daa
mov
lret
cs
add
das
mov
jmp
cld
pop
add
sub
fbstp
xlat
mov
jg
mov
scas
out
loop
sub
mov
ljmp
ret
push
add
adcl
sub
mov
mov
pop
jnp
xorb
scas
mov
call
or
mov
stos
sbb
fstpl
mov
cmpsb
pop
push
mov
inc
push
xlat
stos
inc
xchg
jb
pop
mov
pop
iret
add
mov
outsl
adc
jnp
mov
scas
divb
scas
push
ret
scas
shlb
out
test
sbbb
aam
hlt
sub
jp
mov
mov
imul
lahf
cmpsl
lds
fwait
ljmp
mov
push
xlat
xlat
faddp
lods
xchg
rcll
xor
or
xlat
ffreep
scas
dec
push
les
mov
xlat
call
test
rcl
sub
out
mov
out
jne
mov
lods
shll
shll
lret
xchg
jle
jbe
lahf
sarl
mov
rol
ret
pop
or
inc
xchg
test
jbe
hlt
outsb
or
ljmp
ret
sbb
lods
jbe
popl
popf
or
jl
nop
pop
fs
fsubrs
lret
mov
arpl
cmpsl
shlb
stos
nop
sbb
mov
movsl
outsb
fwait
inc
or
in
test
push
aas
mov
mov
arpl
push
mov
rcr
push
aad
ret
sar
push
mov
fldenv
test
push
ficoml
enter
xlat
jnp
nop
cmp
mov
into
xor
push
addl
cmpsb
test
inc
fnstcw
stos
popf
jle
test
rclb
mov
mov
adc
sub
mov
add
cmp
sahf
mov
mov
or
into
add
rorl
push
movswl
iret
imul
push
sarb
xlat
das
les
jnp
dec
mov
stos
lds
jb
jge
les
inc
lea
int
int
lret
xlat
mov
das
aas
imul
inc
fistps
jecxz
cmp
dec
and
inc
dec
int
addr16
sbb
leave
push
enter
dec
jp
dec
mov
mov
xlat
leave
sbb
fisubrs
xlat
mov
rcr
and
in
dec
pop
cli
ud0
mov
sub
outsb
leave
sub
adc
stos
lahf
test
pop
mov
aaa
mov
inc
pushf
add
xchg
mov
sub
cmpsb
mov
nop
in
sub
pop
ret
fwait
jg
pop
sub
rorb
xor
mov
jl
test
test
sub
cmp
iret
sbb
bound
fstpt
push
add
dec
repnz
aas
jge
jno
cmp
lods
imul
jle
dec
imull
mov
mov
insl
mov
stos
out
inc
and
aam
or
xchg
mov
mov
xchg
mov
pop
data16
mov
cmpsl
xchg
ljmp
lds
arpl
stos
test
push
mov
pop
cmp
xor
xchg
jecxz
pop
fwait
or
push
imul
dec
sbb
mov
push
fldt
push
imul
popa
dec
push
dec
dec
ror
dec
dec
sub
sahf
sub
dec
pop
outsl
dec
add
daa
lds
jl
arpl
jge
xchg
movsl
cld
push
mov
pusha
aaa
mov
mov
adc
jns
mov
fistps
cmp
adc
sub
mov
jp
push
and
stos
addb
xlat
inc
aas
sbb
lcall
adc
test
test
aad
imul
pop
adc
orb
lds
outsl
cwtl
insl
pop
inc
or
and
sub
test
mov
jle
or
pop
xchg
leave
flds
dec
pop
push
push
xchg
sub
push
cs
sub
call
lods
mov
inc
insl
loopne
xchg
cmpl
mov
jg
add
fdivrs
jnp
loopew
and
adc
mov
sti
hlt
xchg
pushf
decb
pop
dec
data16
and
cwtl
lret
inc
mov
mov
xor
int3
jp
and
jno
cmpb
call
lods
ret
fldcw
sbb
mov
out
xchg
inc
insl
aas
cmc
mov
ror
pop
mov
cwtl
test
pop
scas
xorl
push
int
shl
and
pop
cltd
cmp
mov
imul
mov
or
mov
nop
add
cmp
mov
mov
mov
add
jne
andb
dec
jg
push
mov
adc
sub
mov
mov
mov
orb
jle
inc
adc
mov
add
addl
sub
bound
push
enter
push
add
fucomi
scas
mov
pop
jl
lret
xchg
jle
pusha
lret
xchg
sub
inc
out
xchg
testb
leave
mov
xchg
pop
setae
ficoms
arpl
push
dec
rcll
pop
das
jp
xor
dec
gs
xor
outsl
inc
daa
cli
out
jne
sbb
pop
addb
into
pop
push
cltd
xor
scas
jnp
roll
xchg
cmp
data16
fists
stos
test
cmp
fisubl
ret
mov
lret
movsl
insb
fbld
outsb
movsl
scas
jmp
frstor
and
xchg
push
ret
sahf
xor
fdivl
xchg
je,pn
pop
lcall
mov
shlb
dec
cmp
iret
and
jge
lods
jb
mov
cltd
lods
inc
gs
pop
popf
and
dec
inc
cmpsb
fwait
movhps
leave
push
cmp
lret
pop
cmp
pop
icebp
adc
jbe
pop
loope
adc
add
mov
lds
dec
mov
pop
mov
push
push
jmp
pop
outsb
lcall
loopew
sahf
mov
xor
and
or
sub
scas
rcr
mov
pop
mov
adc
int3
insb
adc
stos
mov
loop
xchg
iret
arpl
sti
mov
cmp
pushw
mov
rclb
insl
or
jns
xor
cmc
ja
fsubr
mov
pop
loopne
jbe
dec
lret
bound
movsb
lret
pop
movl
mov
cli
nop
out
xorb
das
out
lret
lret
jecxz
xlat
test
repnz
out
mov
push
fwait
pop
mov
imul
iret
pop
cmp
fs
out
lods
or
cli
sbb
mov
in
loopne
hlt
dec
jl
jnp
aad
scas
int3
test
xchg
cmpsb
stc
fldl
dec
dec
push
cli
push
xor
adc
and
fisubrl
lods
jge
test
shrb
sub
outsb
mov
sbb
jl
pop
mov
loope
bound
cltd
fwait
pop
dec
orb
push
pop
xchg
les
jp
hlt
lds
push
scas
xchg
lods
stos
aas
pop
push
pop
xchg
push
lahf
push
nop
push
mov
in
pop
mov
ja
es
cwtl
xchg
out
popf
out
mov
frstor
roll
jmp
xchg
add
shrl
cmp
test
les
mov
dec
cli
adc
push
out
cwtl
rol
shlb
inc
jecxz
add
push
ret
ds
vpmaxsw
fmulp
movsb
cld
arpl
xchg
pop
inc
mov
mov
int3
cmpl
fnsave
jne
mov
dec
pop
movb
cmp
lahf
int3
xor
subb
mov
jnp
out
test
mov
xor
seto
xor
daa
data16
push
dec
into
lahf
add
mov
iret
dec
rcrl
push
lea
cmpsl
pop
imul
mov
adcl
int3
push
sub
sbb
pop
sbb
shrb
lods
jle
adc
lahf
mulb
lds
mov
pop
and
inc
shlb
lds
or
mov
popa
lcall
pop
sarl
mov
mov
xchg
push
es
jmp
xchg
cmp
mov
ja
mov
stos
lcall
pop
sbb
adc
scas
leave
mov
fmul
xor
add
rorl
clc
lahf
test
xor
repz
mov
jp
pop
rcrl
sbb
add
pop
mov
dec
jle
ljmp
mov
and
inc
mov
mov
cmp
clc
aas
int3
inc
push
fstps
xchg
add
sub
leave
xor
mov
pop
xchg
pop
and
mov
les
adc
mov
stos
daa
and
lea
xor
in
jge
mov
xchg
push
pop
xor
push
push
addr16
pop
sbb
dec
int
int
aas
stc
dec
ja
adc
xor
inc
mov
mov
mov
xchg
into
sub
sub
ret
pop
stos
scas
xor
xchg
xchg
xor
sahf
out
sbb
and
lret
loop
xlat
sbb
sub
lods
mov
inc
stos
push
fisttps
ljmp
pop
mov
mov
das
pop
cmp
jmp
adc
inc
test
xchg
mov
ljmp
pop
mov
mov
lret
mov
and
fidivrl
sub
les
and
popf
and
xchg
xchg
fcoml
stos
ret
push
int3
pop
push
scas
dec
push
ror
jo
insl
jg
pop
pop
lahf
inc
mov
js
cmc
dec
push
push
int
fildl
les
mov
add
fistl
cmp
sub
cltd
das
ja
enter
xor
lods
call
lcall
inc
outsl
mov
pop
jle
lds
cmp
xchg
je
push
lret
and
lret
push
sbb
lcall
loope
mov
inc
movsl
test
jb
mov
dec
idivl
aas
jl,pn
rcl
mov
test
arpl
mov
roll
xchg
imul
dec
adc
push
sbb
jnp
scas
loop
ds
scas
add
jae
lods
mov
inc
iret
cmpsb
cmpsl
xchg
cmc
jp
addl
lea
test
push
imul
dec
leave
mov
mov
push
jbe
or
in
sub
mov
int
dec
xchg
push
cmpsl
mov
shrl
mov
dec
xchg
and
jmp
push
lret
or
bound
js
ds
leave
xchg
lods
pop
push
enter
mov
pushf
dec
mov
sub
push
sahf
xchg
mov
xchg
cmp
add
shrl
mov
addr16
and
iret
and
mov
mov
cmpb
lds
lret
movsl
sbb
sub
mov
mov
cld
inc
mov
push
cmp
mov
test
nop
aad
cmp
and
pop
cmp
scas
jl
xor
and
cmc
lret
mov
and
jg
shll
sbb
inc
fildll
cmpsl
push
dec
xchg
jle
jnp
rolb
pop
arpl
pop
push
mov
push
pusha
test
rorl
inc
int
sbb
sbb
daa
shrb
imul
movsl
add
rclb
popa
push
xchg
jecxz
clc
aaa
mov
dec
test
flds
imul
lret
setno
mov
jecxz
mov
std
bound
sub
jno
lea
mov
xchg
mov
movsl
mov
mov
or
cmp
ja
rclb
fmulp
mov
mov
aaa
mul
jp
pop
jno
jp
stos
mov
leave
mov
mov
push
cmpb
and
inc
pop
sbb
and
cs
addb
rcll
iret
xchg
inc
cmpb
push
test
lea
shr
jmp
popa
push
dec
test
loope
jp
leave
nop
ret
dec
call
cli
imul
xor
ret
mov
push
into
fisttps
pushf
lds
sub
xor
cmp
mov
xchg
xchg
and
xor
jp
inc
adc
ffree
inc
punpckldq
jne
adc
jmp
sbb
repz
or
test
pop
pushf
pusha
mov
ja
add
push
loope
mov
sub
mov
mov
and
test
into
hlt
testb
dec
data16
jp
jle
lret
mov
pop
scas
push
loope
cmp
mov
cli
mov
mov
das
xchg
mov
icebp
popa
dec
add
fwait
or
push
jp
or
lock
aas
movsb
xchg
and
mov
lahf
push
test
pop
pop
sbb
inc
mov
add
and
aad
inc
xorl
bound
mov
bound
test
movsb
sub
mov
jo
cld
imul
mov
rcrl
mov
cltd
mov
pusha
push
sub
dec
add
mov
pusha
out
call
ljmp
pushf
ffree
and
loope
hlt
lret
mov
ret
fbld
inc
mov
mov
bound
mov
sbbb
fmull
scas
stos
loopne
popfw
mov
mov
aas
movsb
aas
and
pop
test
inc
sub
test
sbb
push
stos
add
cmp
xchg
xor
pop
fdivrs
scas
push
nop
scas
stos
add
enter
push
inc
xchg
int3
push
sbb
into
pop
push
sub
leave
push
das
mov
mov
fdivrs
adc
adc
lahf
push
rcl
mov
jl
mov
jmp
cs
into
cmp
push
int3
mov
add
rcll
jnp
scas
add
inc
pusha
cmpsb
in
sti
dec
add
fdivrl
xlat
mov
movsl
add
pop
or
dec
lods
into
xchg
fistpl
andl
shll
arpl
pop
xchg
les
mov
push
stos
test
mov
pop
pop
lock
xchg
sub
push
push
into
dec
orb
or
push
xchg
mov
fcmove
cmpsb
push
jmp
xchg
popa
subl
lods
xchg
arpl
les
popa
lods
jp
movl
sbb
mov
mov
push
mov
mov
pop
sbbl
push
rcll
loopne
sbb
imul
leave
mov
cs
mov
out
stos
add
loope
addl
insb
sar
enter
sub
dec
add
lds
scas
aaa
aaa
jge
test
mov
xchg
maxps
dec
fwait
test
pop
mov
mov
sbbb
cmp
xchg
cld
add
push
jecxz
leave
dec
mov
sbb
jp
enter
fbld
push
push
pusha
cmp
pop
pop
clc
out
push
lock
imul
adc
push
lea
add
sbb
xlat
mov
push
cwtl
jp
push
push
or
js
roll
ds
outsl
pop
pop
outsb
clc
cmp
cmpsl
mov
pop
add
gs
mov
into
in
dec
pop
add
mov
fdivrl
sub
call
sub
pop
or
mov
sub
sbb
push
push
icebp
bound
test
or
mov
lcall
xlat
mov
jns
aaa
das
scas
leave
lods
mov
xor
push
pop
int3
mov
aas
mov
push
pop
je
mov
js
loope
sti
cmp
orb
mov
sbb
sub
mov
add
data16
add
out
bound
sub
jmp
cmp
movsl
jl
mov
call
adc
push
jg
push
nop
std
repz
setl
inc
outsl
pop
scas
mov
jne
or
push
aad
sbb
mov
and
jp
mov
cs
cltd
inc
and
jl
pop
scas
popl
inc
fcmovbe
inc
dec
popf
jl
clc
xchg
inc
jmp
jae
pop
in
stos
rcrl
and
mov
mov
daa
and
adc
dec
add
jge
mov
dec
pop
mov
xorb
movsl
jle
je
fstpt
and
cmp
mov
push
jmp
jmp
jge
stos
sub
lret
xchg
cltd
xchg
add
out
into
lds
or
cmp
int3
mov
pusha
dec
add
cmp
ud0
lock
dec
gs
test
mov
and
jmp
testl
mov
or
cmp
pop
sbb
and
cli
addr16
test
mov
movsl
mov
dec
arpl
ret
cmp
pop
mov
push
aam
into
rcrl
mov
cmovp
jg
sbb
xchg
setl
rolb
xchg
xchg
sub
jge
xchg
or
sub
std
jns
fs
dec
inc
mov
mov
dec
ljmp
dec
xchg
inc
jns
sarb
in
or
lret
iret
ds
jge
roll
jl
push
cmp
mov
push
test
xchg
sbb
cmp
mov
push
lea
xor
scas
dec
movb
sarl
cmp
das
call
sbb
in
xor
repz
jl
nop
jbe
mov
stos
popa
push
or
xchg
movsb
les
arpl
cmp
xlat
fistl
loope
or
inc
xlat
fstp
dec
rolb
jl
int3
mov
loope
add
sub
addb
imul
fnsetpm(287
cwtl
jmp
movsl
mov
ljmp
sub
sbb
pop
mov
sub
gs
sub
into
mov
iret
adc
jp
push
nop
int
inc
mov
int
mov
filds
iret
sahf
ljmp
dec
mov
jge
xchg
adc
pop
inc
andl
int3
xor
or
cltd
jge
xchg
cld
lret
xchg
lret
xchg
mov
and
lock
or
test
ja
pop
stos
loope
xchg
dec
sbb
cli
dec
fdivrl
mov
aas
or
sbb
aaa
adc
jmp
out
jb
mov
jge
or
clc
sbbl
dec
les
push
imul
orl
stos
inc
pop
jge
adc
js
dec
jp
inc
jp
push
mov
pop
adc
arpl
outsl
jbe
popa
inc
cwtl
jnp
outsl
scas
pop
dec
pop
aas
sub
sti
jbe
xchg
daa
imul
sti
lahf
push
ror
pop
inc
in
push
std
mov
xchg
mov
cld
dec
pop
xor
daa
sti
mov
shr
push
dec
loopne
mov
inc
xorb
iret
or
push
jno
jnp
pusha
or
test
popa
mov
loopne
pop
jae
push
jne
mov
pop
arpl
test
inc
push
push
xchg
cmp
or
add
test
icebp
jp
xor
jg
inc
jg
adc
orb
aad
mov
inc
and
inc
push
cmpsb
shrb
xor
xor
dec
push
xchg
pop
pop
dec
mov
jmp
test
mov
and
cmp
xchg
mov
movsb
lret
jg
push
out
lret
insb
ja
les
pusha
mov
mov
lahf
cmpsl
andl
aad
outsl
push
js
enter
sbb
inc
jp
shl
mov
and
out
add
pop
mov
jge
inc
popf
inc
jne
mov
cltd
ss
mov
lds
dec
xchg
leave
inc
push
dec
addr16
rorl
loope
jbe
jmp
push
mov
cmpsl
cs
loope
add
add
mov
into
inc
xchg
jg
mov
jns
scas
mov
jne
pop
adc
or
or
jmp
push
enter
int3
push
daa
ja
or
dec
jae
jg
sbb
push
mov
shll
ljmp
pop
popf
push
idivl
fbstp
push
subb
test
fcomip
jge
ss
jecxz
cwtl
xchg
bound
sbb
jle
mov
fisttps
enter
cmp
push
push
or
shll
lea
cmp
les
imul
cwtl
scas
adc
cltd
mov
xlat
sub
push
outsl
xchg
inc
outsl
test
negl
sahf
or
push
dec
imull
sub
js
xchg
pop
test
fnsave
fiaddl
pushf
jle
or
inc
lds
xorl
jecxz
xor
sbb
xchg
fisttpll
iret
cmp
std
cmp
cwtl
add
stos
inc
dec
mov
dec
inc
cmp
mov
cmove
enter
scas
sbb
xor
mov
inc
cmp
aad
xchg
addr16
mov
lds
push
lock
mov
cmp
mov
ljmp
mov
jle
xchg
jns
inc
stos
mov
ret
pop
push
mov
push
les
ret
xchg
sbb
cmp
jne
sbb
into
ds
pop
push
cmpsb
mov
and
xchg
xchg
mov
subb
rcll
fldl
test
les
in
ljmp
inc
dec
push
inc
dec
sbb
lret
or
in
adc
inc
xor
in
movsb
inc
adc
daa
xchg
testl
mov
insb
pop
icebp
movsb
mov
sbb
jg
or
je
mov
sbbb
pop
xor
dec
pop
mov
cltd
mov
push
jns
in
mov
add
test
dec
push
imul
outsb
dec
push
imul
les
cmp
psraw
dec
mov
mov
adc
lds
cmpsb
push
mov
ffree
xchg
push
adc
or
sub
popa
testb
cmp
dec
mov
loope
das
arpl
cmovg
cmpsl
adc
fwait
mov
mov
and
cmp
mov
inc
ljmp
and
cmc
sbb
cmpsl
movb
and
lret
shrl
movsl
pop
rolb
cmpsb
xlat
cli
les
movsl
pop
xchg
shl
fwait
test
aad
mov
in
scas
mov
cmpsb
or
inc
mov
xor
cmpsl
loopne
xor
sbbb
arpl
mov
add
test
mov
add
pop
xchg
push
mov
jp
sub
sub
xchg
cmp
insl
fimull
movsl
push
mov
aas
stos
cmp
pusha
mov
pop
insb
pop
inc
std
or
aas
push
jecxz
pop
arpl
test
pop
adc
xor
xor
inc
jl
cltd
sbb
movsl
push
jne
adc
fnstcw
sbb
mov
cmp
lret
and
sub
mov
inc
cmpsb
lds
test
shlb
js
mov
dec
push
mov
sbb
rol
fcomip
pop
mov
into
aas
call
out
mov
and
js
sbb
push
jle
pop
dec
int
dec
and
into
pop
push
into
lahf
xchg
aad
dec
mov
outsb
dec
cltd
je
cli
enter
loop
mov
int3
mov
jecxz
xchg
mov
dec
fimuls
jle
xchg
pushf
cli
mov
xchg
mov
or
movsb
cmp
test
loopne
pop
xchg
dec
push
xlat
popa
enter
test
into
orb
jle
testl
or
cmp
push
sbb
lret
int3
fiadds
inc
lahf
xchg
test
popa
pusha
cmpsb
push
jmp
xchg
cli
sbb
lds
or
pop
inc
fistpl
jp
pushf
mov
jns
incl
mov
fisubl
bound
addb
dec
into
ljmp
cltd
cmc
mov
inc
jge
and
pop
pop
int3
xchg
xchg
mov
push
stc
sub
jp
lret
mov
adc
sub
ret
add
xchg
cltd
cwtl
pop
inc
add
cs
pop
testl
inc
pinsrw
orb
mov
sahf
xchg
cld
sarl
mov
xor
jno
or
enter
not
and
faddl
das
enter
in
lds
idiv
cmp
push
mov
scas
sahf
cmp
rol
and
adc
stos
mov
inc
les
mov
addr16
jae
xchg
and
std
push
pop
cli
dec
push
lret
loope
inc
jne
mov
mov
shrb
xchg
das
push
jp
mov
ret
mov
sbb
xchg
and
outsl
or
int
jp
mov
aaa
call
add
lahf
aaa
ja
movsl
andl
scas
ja
adc
mov
movsl
dec
mov
lret
scas
mov
jle
mov
jbe
sub
sbbl
pop
fsubr
lcall
xor
lds
test
mov
imul
lds
cmpsl
std
xchg
lea
push
fists
idivl
inc
mov
cmpsl
sub
mov
lret
xchg
add
push
ja
test
out
add
mov
push
inc
xor
or
mov
test
sbb
sbb
mov
pop
pop
and
mov
aaa
stos
outsb
sub
jbe
fldcw
cli
es
dec
cmp
mov
je
sbb
ja
test
pop
sbb
out
dec
inc
sbb
jge
inc
stc
xlat
outsb
mov
js
push
roll
fimuls
inc
stos
das
mov
inc
sbb
iret
out
hlt
test
lods
mov
add
push
dec
sbb
test
loop
stos
pop
or
mov
test
ret
movzwl
leave
test
cmc
sub
push
fbstp
push
cmpsl
ja
cmp
mov
cwtl
xlat
add
inc
push
test
test
inc
sub
movsb
adc
aas
adc
fiaddl
xchg
sub
sbb
jg
inc
add
mov
andb
mov
pop
dec
xchg
fisttpll
mov
dec
sub
loope
inc
les
cmp
pop
inc
mov
lret
sub
call
mov
into
pop
dec
scas
movsl
sub
call
mov
aas
in
lds
scas
push
sbb
adc
ret
aaa
ljmp
cli
add
sbb
mov
aas
and
dec
xchg
adc
pop
xchg
and
mov
inc
loopne
fiaddl
lahf
and
sbb
mov
cmp
cwtl
xchg
inc
cmpsb
push
ljmp
pop
pop
sbb
into
ja
cltd
add
ss
pmaddwd
test
outsl
hlt
adc
movsl
or
push
ljmp
addb
cwtl
and
or
js
inc
pop
pop
push
mov
out
popf
sub
jg
outsl
cmp
addr16
data16
stc
fs
aas
adc
and
cmp
fdivl
push
xchg
ds
mov
sbb
mov
push
fsubl
das
mov
pop
push
push
add
scas
int3
es
pusha
mov
rorl
je
jnp
test
xorl
lret
popl
cmp
xchg
xchg
lahf
push
mov
cmc
pusha
pop
push
lcall
enter
xchg
or
mov
mov
xor
jg
inc
push
add
mov
mov
popa
sti
stos
cmp
cmp
xchg
int3
jl
out
adc
jmp
and
jp
inc
fstpt
popf
and
data16
into
pop
int3
mov
mov
pop
mov
je
ja
mov
pop
jb
mov
jns
adc
xchg
arpl
incb
sbb
push
jne
pop
pusha
enter
lret
lret
push
and
push
lods
lret
cmp
scas
dec
mov
add
ss
int3
les
lret
stos
and
pop
rorl
cltd
mov
data16
inc
aaa
pusha
movsb
add
sbb
jecxz
inc
shrl
push
xchg
int3
inc
je
mov
sub
sahf
fimuls
int3
pop
jb
subb
sub
jle
mov
fldlg2
out
jmp
and
call
repnz
je
enter
jecxz
sbb
inc
jmp
lock
jmp
loop
mov
imul
das
mov
stos
lret
fcmovnu
out
sub
fcmovnu
mov
lods
jae
ret
jmp
pop
fisttpl
jecxz
xlat
cmp
pop
dec
in
push
jecxz
push
xor
gs
adc
out
hlt
jmp
repnz
insl
jnp
push
push
jmp
push
das
adc
jecxz
sub
imul
lods
in
sarb
xchg
xchg
jmp
popl
mov
icebp
ret
mov
sub
or
xchg
out
lret
xlat
inc
addl
bound
sbb
outsb
orl
ret
jecxz
lods
call
cmp
fstpt
mov
lret
jecxz
out
jecxz
mov
stos
icebp
dec
jmp
mov
imul
xlat
jae
mov
in
pop
push
push
ret
jecxz
inc
gs
loop
xor
sub
jmp
sbb
xlat
add
lods
dec
subl
jnp
lret
jecxz
aas
fildll
bt
out
jmp
fninit
iret
loopne
lods
adc
pop
jae
and
push
pop
rcr
mov
lods
cmp
push
pop
sub
sub
push
sbb
stos
adc
jecxz
ljmp
outsl
adc
jecxz
sub
add
sbb
fisubrl
repz
das
scas
fstl
xlat
fwait
dec
mov
mov
rorb
jae
jecxz
mov
fistl
mov
out
imul
cs
mov
mov
pop
add
sub
sbb
jecxz
xchg
repnz
push
out
fwait
jae
clc
fldt
rcr
fwait
mov
rcr
mov
aam
imul
das
aaa
fcoms
lods
inc
sarb
imul
sub
jecxz
mov
lods
xlat
lret
bound
sti
ret
pop
sub
int3
repz
mov
arpl
sub
ret
ror
mov
lods
sub
fwait
in
jg
subl
std
ret
ret
imull
imul
pop
mov
rclb
sub
adc
ret
adc
rorb
xlat
loop
das
lret
rorb
arpl
jae
lods
fcmovnbe
shrl
repnz
ret
cmpl
mov
bound
jnp
jecxz
icebp
fldt
lret
mov
mov
jecxz
int3
lret
sub
cmp
jecxz
mov
lods
or
daa
lret
add
and
int3
repz
shlb
cmpsb
btc
dec
mov
pop
xchg
fldt
mov
mov
xlat
imul
xchg
enter
rcl
repnz
das
pop
lock
scas
cmc
in
ret
faddl
and
pusha
mov
pop
push
aad
jb
stos
push
imul
shll
xchg
pop
mov
fistps
out
push
add
jmp
ror
arpl
sub
mov
int3
jmp
fnstenv
stos
lock
sahf
out
xor
mov
aas
loopne
pop
dec
iret
dec
push
add
out
out
mov
out
inc
stos
scas
loop
scas
out
xchg
stos
out
idivl
xor
icebp
fmulp
fwait
shlb
xchg
xlat
out
repz
jnp
arpl
pop
adcb
xchg
and
mov
in
ja
fucomip
fbstp
out
imul
mov
mov
push
mov
pop
mov
stos
bound
loopew
out
arpl
ja
mov
fistpll
sub
outsl
pop
stos
imul
ret
pop
arpl
mov
mov
pop
xchg
jnp
scas
xchg
xchg
jnp
into
inc
xchg
push
lret
repnz
sub
mov
mov
int
scas
pop
out
fcmovnb
mov
adc
sbb
mov
push
ljmp
jmp
push
loope
addr16
pusha
xchg
xor
dec
loope
mov
ss
out
mov
mov
pop
lock
push
xlat
dec
inc
ret
stos
sub
jg
mov
mull
mov
push
scas
lahf
stos
insb
arpl
rcrl
out
xchg
iret
popf
stos
jnp
popf
out
data16
pushf
push
lods
in
adc
scas
fwait
push
insb
arpl
stos
lcall
fdivs
cltd
loope
aad
cltd
shr
test
rcrl
iret
xchg
scas
jmp
mov
adc
scas
xchg
shrl
sub
sbb
stos
xchg
arpl
fdivs
xchg
loope
aad
xchg
shl
test
rcll
in
stc
iret
xchg
stos
push
jp
out
bound
sub
ljmp
push
loope
iret
ljmp
scas
out
push
loope
int
fmuls
bound
aas
scas
sub
push
loopne
rcrl
stos
bound
push
ja
inc
mov
mov
pop
int
add
enter
aad
shll
adc
decl
sub
fwait
bound
cmovnp
lea
scas
mov
loope
iret
mov
jp
mov
xchg
mov
cli
pop
fsubr
jecxz
subl
fucomip
scas
cmp
mov
mov
push
xchg
push
out
sub
leave
xchg
out
mov
mov
mov
push
xchg
mov
jnp
mov
das
jnp
mov
jp
cltd
lret
lcall
aas
enter
sti
add
bound
shl
adc
scas
pop
add
divl
xchg
test
lret
sbb
aad
shll
adc
ret
lret
and
jnp
out
loop
cmp
iret
jmp
mov
push
por
arpl
add
push
push
jnp
jo
lret
js
stos
outsl
pop
fcmovne
inc
outsl
fmuls
sbb
lret
lret
outsb
shr
sbb
lret
inc
insl
lret
mov
xchg
lret
lcall
mov
ja
lret
imul
cmp
push
dec
pop
lret
sbb
leave
mov
xchg
ljmp
cmp
pop
movsb
pop
pop
enter
push
scas
bound
sub
push
shr
fisubrs
addr16
mov
aam
mov
lret
sub
inc
and
xchg
lret
setg
out
dec
pop
das
out
cwtl
ljmp
pop
inc
in
push
lret
sub
icebp
adc
mov
mov
add
insb
arpl
bnd
ljmp
jnp
jne
or
xchg
aad
jne
in
je
shll
in
xchg
dec
stos
pop
jp
out
bound
push
in
imul
rcrb
movhlps
jmp
iret
pop
mov
insl
lods
call
xor
in
es
out
push
inc
fldl2e
xchg
adc
lret
and
sub
push
mov
push
fcom
push
or
inc
aad
push
shl
push
xchg
shll
jecxz
dec
push
mov
das
jecxz
fsubr
jno
pop
lret
and
lret
shl
loop
shll
loopne
loope
dec
stos
add
out
data16
loopne
imul
insb
jecxz
sub
sbb
xchg
shll
fldl
cmpsl
paddusw
fdivrl
jg
aad
lods
fldt
fdivrl
scas
pop
insb
arpl
sub
sbb
fsubrl
fdivrs
xchg
dec
stos
das
jp
out
data16
fistpll
add
rcr
xlat
inc
fadd
ret
fsts
fcomp
fdivs
dec
stos
mov
out
data16
aam
push
in
aam
lods
sub
cmp
sub
sbb
xchg
rcl
out
das
rol
sarb
lret
mov
insl
lods
shll
jmp
lret
cwtl
cwtl
ror
or
mov
ljmp
fldt
loope
iret
stos
aad
aam
shrl
pop
push
adc
out
push
lret
ljmp
inc
test
jecxz
ret
fidivrs
xchg
rolb
bound
roll
lahf
out
iret
sub
cmpsl
bound
push
scas
aaa
pop
push
loop
xor
xchg
imul
inc
sub
or
cld
mov
add
shrl
aas
xor
sarl
sub
inc
int3
sbb
mov
pop
jnp
xchg
sbbl
sub
lret
sub
mov
pop
lret
test
jecxz
stc
imul
add
rorl
mov
arpl
pop
jne
pop
pop
insb
arpl
jg
mov
mov
iret
outsl
ja
insb
or
mov
add
pop
lret
mov
mov
adc
das
mov
rorl
lea
mov
jp
lcall
pop
stos
sti
xorl
cmp
pop
pop
xchg
inc
js
pop
bound
adc
ja
outsl
mov
and
ljmp
outsl
push
pop
mov
repz
or
nop
mov
outsb
test
repnz
loope
movl
pop
lods
fsubs
shr
jnp
jnp
xchg
mov
sub
inc
mov
popf
rsqrtps
out
mov
out
rclb
popf
xlat
mov
ffreep
mov
xchg
mov
dec
add
cwtl
mov
jnp
sbb
out
hlt
lret
arpl
sub
xchg
mov
in
mov
mov
aaa
jae
jnp
jmp
dec
add
jmp
aam
ffreep
lahf
enter
ljmp
jmp
mov
inc
jnp
jmp
sub
mov
lods
xor
call
shl
bound
inc
rcpps
xlat
shll
xcrypt-cfb
cmpsl
addr16
call
xlat
pushf
out
leave
mov
push
shl
sub
les
jnp
fnsave
jp
cwtl
add
in
fwait
shl
push
loope
cmp
pop
mov
lcall
icebp
out
insb
add
inc
xchg
out
push
aam
fbstp
aas
jnp
loope
cwtl
mov
adc
sbb
shll
mov
fildll
dec
imul
add
fisttps
filds
lahf
xchg
inc
mov
out
out
insb
add
mov
cmpl
sub
lahf
add
fcmovnu
outsb
jecxz
inc
jg
ficomps
mov
rcr
bound
pop
cmovge
sub
faddl
cwtl
inc
rcr
dec
loope
mov
dec
shlb
ret
inc
outsl
fdivr
test
pop
xlat
lahf
imul
scas
dec
out
aam
fbstp
pushf
xlat
mov
addr16
fdivs
pop
mov
arpl
aam
dec
bound
and
inc
jnp
aad
pop
mov
test
add
outsb
pop
pop
jp
pop
aad
mov
rcr
mov
pop
dec
les
dec
testl
shll
rcrl
scas
dec
addr16
aas
popa
dec
pop
pop
inc
jnp
shrb
dec
mov
test
mov
into
insl
cli
loope
cmp
pop
mov
mov
inc
inc
lahf
enter
fcomi
pop
xlat
scas
int
mov
lret
aas
fmulp
mov
xor
int3
dec
add
rol
jb
aam
ffreep
sub
xchg
mov
pop
int3
mov
lret
dec
aas
push
ret
fmulp
mov
xor
inc
pop
out
jp
fists
enter
mov
cltd
loope
dec
arpl
dec
ret
enter
scas
xchg
fbld
add
xchg
jbe
out
arpl
xor
xlat
fistps
pop
mov
int3
xlat
imul
jnp
jne
or
jne
mov
sbb
lds
ret
scas
mov
ret
loop
rorb
out
mov
xchg
pushf
ret
adc
ret
mov
mov
aas
inc
cmovg
shll
ja
inc
add
or
roll
add
mov
mov
shrl
jb
popa
cmp
xchg
mov
dec
jnp
cwtl
mov
pop
fcmovnbe
mov
fidivl
mov
fbld
imul
push
stos
pop
stos
sarb
fidivl
mov
pop
aas
outsb
lods
out
cmc
not
jo
mov
out
je
fimull
repnz
sub
lods
jmp
sub
mov
lods
lock
scas
in
xchg
sbb
jecxz
mov
xchg
pop
mov
dec
out
lods
loope
loopne
fildll
fimuls
fcmovnu
arpl
cmp
pop
adc
fcmovb
mov
pop
shlb
cmp
ret
sub
jmp
outsl
xlat
fcoms
roll
das
sbb
xlat
shrl
imul
sysret
jl
call
aas
or
push
and
loopne
dec
pop
int3
xlat
cmpsl
sbb
push
ret
mov
mov
loop
ror
scas
push
add
pop
jecxz
fucomi
les
je
jmp
scas
ljmp
out
mov
inc
rorl
ror
ljmp
test
les
fistl
push
ja
in
cmp
scas
inc
pop
or
loop
movsb
dec
fwait
ret
cmp
sbb
mov
inc
fnstsw
xlat
sarb
out
fisttps
loop
ret
sbb
fistps
mov
inc
inc
jg
int3
mov
fstl
and
das
inc
xchg
enter
sbbl
push
out
outsl
lock
or
jno
fldl
sub
iret
aas
stos
cltd
inc
xchg
out
shr
test
addr16
sub
or
insl
mov
roll
ja
inc
push
arpl
cmp
in
sarl
dec
ja
data16
xor
call
in
sarl
incl
push
aad
dec
mov
and
jmp
and
out
arpl
jp
fistpll
inc
or
cmpsl
dec
cmpb
frstor
or
scas
and
pusha
and
imul
subl
and
aaa
mov
sbb
xlat
mov
call
fucomip
fisubl
pop
mov
stos
inc
and
mov
ret
movhps
loop
and
or
push
inc
mov
scas
sub
out
lods
roll
mov
sub
or
jmp
aam
jnp
out
outsl
mov
ja
pop
adc
inc
outsl
arpl
cmp
dec
xchg
xchg
ljmp
push
in
push
sub
loope
loopne
mov
outsl
inc
push
loope
lret
iret
ljmp
jecxz
rol
ds
dec
sbb
imull
loope
mov
sub
ret
push
popl
icebp
negb
add
lods
int
cmp
sti
adc
pop
sbb
fidivs
aam
inc
fistps
push
push
sahf
and
test
pop
aas
cmpsb
xchg
lret
sub
mov
pushf
icebp
ret
sbb
sub
stos
and
xchg
jecxz
sub
imul
std
lret
pop
arpl
outsb
pop
ret
jnp
dec
stos
stc
ljmp
ljmp
inc
stos
bound
std
add
pop
in
out
sub
filds
mov
gs
mov
movl
aad
lcall
ljmp
push
out
xchg
mov
jl
pop
jns
mov
fwait
lahf
push
stos
aaa
ja
outsl
mov
lods
int3
adc
daa
jecxz
decl
dec
push
mov
ss
push
cmp
cmpsb
adc
lret
scas
lret
scas
repnz
int
addr16
jae
mov
adc
shll
rcr
int3
das
mov
mov
sbb
mov
jl
movsl
push
push
xor
iret
xor
pop
imul
mov
jp
pusha
out
jae
inc
cltd
pop
imul
cwtl
mov
xor
adc
pop
imul
jp
mov
std
andl
aaa
dec
add
pop
mov
xor
and
shrb
mov
xchg
add
fidivl
loop
lret
aad
xor
ds
imul
jnp
mov
data16
mov
jnp
out
xor
jmp
shlb
jnp
test
and
mov
in
scas
xor
bound
sub
out
jnp
test
imul
subl
das
rolb
jnp
jecxz
fnstcw
and
mov
loopne
scas
cs
lods
lret
packsswb
loopne
arpl
data16
filds
fcmovu
out
push
aam
sub
jnp
fimuls
mov
es
arpl
inc
jg
fsub
sub
pop
data16
lret
jmp
mov
fldl
or
ja
and
outsl
mov
outsl
push
ret
test
rcr
test
flds
sbb
pop
aas
dec
pop
and
lock
dec
orb
xor
repnz
out
lods
lahf
rorb
bndstx
lods
xchg
shlb
dec
sub
dec
addr16
pop
repz
jp
lods
xor
jecxz
jg
ljmp
sbb
loop
rcr
scas
lahf
arpl
imul
out
loop
shll
aaa
sti
imul
iret
or
cwtl
sub
sub
sub
movaps
mov
shll
outsl
pop
lret
cwtl
daa
push
pop
adc
into
pop
lret
es
pop
das
and
and
dec
mov
movsb
rorl
inc
fcmovnbe
pop
jmp
xchg
iret
jnp
pop
popa
cli
lahf
inc
enter
and
aaa
jg
and
js
rcll
inc
je
out
cli
hlt
jns
into
arpl
mov
bound
mov
jmp
mov
dec
xchg
aaa
lret
mov
sub
test
sbb
sub
imul
add
fildll
les
mov
sahf
mov
xlat
cli
or
bswap
jnp
pop
rdtsc
pop
rcrb
xlat
sbb
mov
incl
xlat
into
jp
mov
in
fists
movb
xlat
dec
jp
mov
daa
mov
in
insl
scas
std
pcmpgtb
xchg
cmp
out
rol
jmp
pop
lds
pop
push
jge
lahf
imul
ja
popf
in
mov
jnp
ljmp
jp
scas
push
cmp
xlat
into
push
sbb
insl
popf
ljmp
fstpl
and
xor
push
fwait
aas
xlat
sbb
dec
dec
xchg
dec
jne
adc
cwtl
mov
add
and
sbb
sub
lahf
aas
xlat
jge
mov
lahf
pop
sbb
xlat
psraw
add
out
mov
add
dec
push
xlat
aas
mov
test
cli
mov
sbb
pop
dec
scas
add
jle
cmp
and
cmp
dec
push
mov
test
xlat
out
das
add
fisttps
cmpsb
dec
push
out
sub
pop
push
dec
movsl
loop
add
push
xchg
cmc
outsl
fucomp
sub
popa
aaa
dec
aas
mov
scas
add
sub
shrb
ljmp
jp
pop
inc
xor
jmp
imul
pop
push
dec
jp
loope
cmp
rorb
xchg
dec
jge
mov
jnp
pushf
xor
inc
mov
inc
pop
ja
adc
xchg
mov
push
mov
test
jmp
rorl
ljmp
test
push
dec
dec
jmp
pop
cmp
push
roll
imul
dec
out
dec
insl
mov
sar
jp
out
outsb
arpl
iret
sti
mov
fistpll
push
inc
loop
into
bound
cli
les
jae
mov
pop
dec
int
arpl
sub
stc
stos
mov
stc
call
aaa
outsl
sbb
lret
fnsave
jp
or
scas
enter
icebp
daa
xor
das
xor
jmp
ror
mov
imul
call
leave
movsl
mov
fstpl
sub
mov
cs
cmpl
and
sub
mov
mov
xchg
sub
dec
mov
call
ret
sub
inc
out
icebp
fldl
fwait
jmp
aas
faddp
mov
jmp
icebp
mov
ret
adc
rorl
and
rcl
stos
cmp
call
mov
fisttpl
pop
sti
push
mov
out
dec
mov
dec
jg
inc
jl
jns
out
cmp
cmovbe
sub
xorb
jmp
and
and
mov
inc
mov
jmp
and
xchg
por
jecxz
loopne
stos
rcr
jnp
sar
lock
fcoml
pushf
mov
out
rol
iret
loop
sub
das
xor
rol
into
scas
ljmp
pop
out
push
adc
pop
and
out
into
xorb
movzwl
xor
into
jg
sub
bound
ljmp
mov
cmpsl
insl
scas
repnz
imul
mov
xchg
pop
xchg
ss
push
mov
mov
imull
out
repnz
xchg
std
out
jg
js
cmc
cmp
cmp
sbb
das
cmp
pushf
pop
iret
subb
out
jbe
xor
aas
iret
mov
mov
repnz
fcmovnb
mov
mov
cmp
arpl
sub
adc
ljmp
jmp
jmp
out
mov
andl
imul
out
jae
jp
fbstp
lret
in
btc
in
pop
loope
mov
pop
lea
dec
pushf
aaa
mov
jne
mov
or
mov
pop
int
dec
sub
xchg
push
js
sub
push
mov
inc
loope
ss
and
and
and
add
fistpl
inc
leave
mov
ret
outsl
mov
sub
xchg
lods
pop
mov
cmovne
arpl
mov
push
xchg
popf
push
stos
and
mov
sbb
jnp
jae
daa
pushf
bound
fidivrs
sbb
xchg
iret
mov
jnp
fisubrl
shrb
and
imulb
cmpsl
scas
ja
jne
out
dec
imul
mov
mul
mov
cmp
sbb
sbb
or
jp
mov
aas
sbb
jge
mov
and
pop
cs
mov
push
xchg
xor
mov
inc
movsl
pop
cs
mov
push
xchg
xor
mov
pop
cs
jp
enter
adc
sub
mov
stos
dec
rcll
ja
das
adc
adc
and
leave
stos
push
xchg
notl
dec
dec
movl
stos
inc
into
adc
adcb
imul
stos
inc
into
adc
adcb
imul
pushf
fisubrs
test
pushf
stos
push
mov
test
cvtpi2ps
fisttps
pop
add
mov
pop
sub
mov
fsubrs
push
out
fistpll
fmull
pop
ds
jmp
mov
and
bound
or
add
enter
test
lods
movl
pop
into
or
lret
mov
shlb
jns
and
pop
mov
or
fldt
int3
mov
mov
sub
lahf
inc
pusha
mov
push
arpl
mov
and
push
lahf
enter
imul
sbb
push
aas
inc
scas
lds
idivb
cwtl
cmp
and
sub
mov
and
int3
out
popa
or
testb
lret
iret
outsl
out
pop
movsl
or
dec
out
shlb
je
and
imul
jecxz
in
into
mov
ljmp
pop
mov
xchg
rcrb
ja
mov
or
cli
dec
loop
int3
in
push
ficoms
pop
mov
jnp
mov
mov
cmp
fmulp
xor
jmp
mov
xchg
jb
xchg
xchg
scas
out
pusha
mov
lds
lret
js
loop
lret
pop
fisttps
jecxz
sub
jle
outsb
xchg
les
fimuls
aas
lret
inc
adc
jecxz
mov
push
jmp
jecxz
out
insl
les
fimuls
ds
or
sbb
jecxz
mov
mov
fcoml
imul
or
mov
jecxz
lahf
call
mov
xchg
cmp
stos
lret
into
jne
jg
mov
mov
cmp
xchg
je
loope
mov
lahf
jnp
cli
jecxz
aam
int3
call
push
pop
mov
movsl
mov
pop
mov
push
mov
cli
jecxz
shlb
mov
add
mov
and
mov
and
jl
cmp
lcall
pop
or
sub
stos
test
pop
ja
dec
add
or
or
xchg
sti
or
test
int3
or
xchg
cmp
mov
out
pop
pop
es
andb
lret
pop
shll
outsb
dec
push
pop
push
mov
add
push
xor
jg
mov
fists
lgs
or
add
mov
les
mov
cli
test
xchg
add
movsl
mov
jle
cmpsl
inc
add
aam
int3
mov
lahf
rolb
mov
icebp
ljmp
jle
adc
mov
jmp
stos
jl
and
mov
dec
lret
mov
and
add
in
inc
add
inc
out
jmp
mov
add
and
add
and
add
aas
cmp
jmp
add
and
add
mov
sub
dec
adc
sub
lahf
call
enter
rorl
clc
adc
jmp
fsubp
mov
js
or
pop
js
and
mov
lret
mov
imull
mov
or
add
jge
and
lahf
mov
loopne
mov
ffreep
jg
and
ret
inc
adc
aam
movsb
loopne
repz
jecxz
jg
inc
fs
and
mov
dec
inc
ljmp
out
iret
out
inc
jg
inc
mov
enter
mov
jae
or
and
hlt
sub
das
into
jmp
repz
mov
mov
or
inc
repz
insl
jb
cld
fdivrl
mov
xchg
or
push
jg
push
scas
sti
mov
sti
mov
inc
cli
test
lret
pushf
pop
mov
stc
enter
stc
push
arpl
inc
out
out
imul
outsb
maskmovq
or
mov
mov
dec
pop
add
xor
xchg
imul
add
sbb
imul
sti
mov
pop
arpl
mov
xchg
shl
mov
mov
cmp
xchg
jnp
lret
pop
mov
imul
dec
jae
shl
imul
pop
lret
jg
xchg
dec
cwtl
jae
pop
lret
dec
cmp
add
repz
out
fildll
icebp
scas
repnz
lret
stos
jp
dec
rcl
in
pop
stos
or
clc
sub
or
divl
cmp
inc
stos
dec
xchg
das
adc
mov
push
pop
xchg
imul
jg
sbb
test
into
jecxz
jp
dec
call
sbb
sub
inc
add
out
loop
test
add
in
daa
dec
mov
sub
sbb
ljmp
pop
imull
jmp
xor
mov
jmp
cli
ljmp
jmp
jmp
jecxz
leave
mov
fs
iret
mov
insb
pmulhw
leave
mov
ja
mov
repnz
les
push
shlb
loope
scas
sbb
notb
pop
loopne
cmpsl
test
mov
std
mov
lahf
lret
inc
rcrl
mov
xchg
lret
cmp
sbb
pop
ret
cmp
sbb
ret
inc
dec
push
mov
hlt
int
arpl
scas
dec
cmp
loope
iret
ljmp
pop
dec
jbe
add
mov
rclb
fdivrl
jp
lock
push
repz
in
pop
add
add
enter
mov
fstpt
xchg
enter
push
mov
andl
mov
rcr
xchg
imul
jge
std
insb
mov
cld
dec
iret
ja
cmc
into
fdivrs
enter
repz
sti
repz
rcl
aas
xor
rcrl
insb
mov
xor
mov
sbb
push
add
mov
cltd
imul
mov
aad
or
ds
add
in
popa
xor
mov
aam
das
sub
xor
repz
sysexit
mov
rcrb
adc
xor
test
add
pushl
das
enter
inc
fbstp
mov
mov
xor
mov
les
and
les
sub
xchg
int
ljmp
sbb
sti
repz
in
popa
xor
mov
lret
cld
xor
sti
repz
in
popa
iret
and
mov
lret
cwtl
stos
or
jge
mov
jnp
xchg
repz
iret
mov
lret
and
insb
mov
lret
repz
fcmove
mov
lret
sbb
repz
mov
mov
fwait
out
out
and
test
repz
stos
fcoml
mov
lret
cmc
pop
mov
jge
or
or
cli
ljmp
stos
out
cmpsl
lods
jnp
and
and
rcll
enter
lret
outsl
sbb
push
and
jnp
dec
mov
mov
fs
mov
jg
enter
out
mov
xor
leave
das
insl
mov
insl
push
pop
aas
xlat
mov
push
mov
test
insb
mov
insb
dec
jnp
mov
and
dec
add
or
imul
call
mov
arpl
das
push
mov
pushf
push
lahf
pop
jmp
jne
movsb
loop
mov
rclb
leave
daa
imul
inc
pushl
add
sbb
push
pop
push
push
addr16
or
aas
mov
les
popl
addr16
sbb
dec
movl
into
jg
sub
aaa
mov
fwait
mov
arpl
in
popa
cs
inc
sbb
cmp
iret
push
jle
xchg
cltd
ret
mov
sbb
add
call
mov
jecxz
mov
jmp
inc
movsb
mov
sti
cmp
mov
mov
and
jp
aas
mov
rol
jnp
aas
mov
mov
sbb
dec
lahf
mov
sahf
mov
inc
test
push
neg
dec
test
lret
out
loop
sbb
out
stc
jle
cli
out
and
jecxz
pop
out
sahf
lods
out
inc
and
out
jmp
xor
xorb
lret
shll
ljmp
ret
in
jmp
lock
es
jecxz
pop
adc
fs
fs
test
pop
adc
fisubl
inc
cwtl
xchg
shlb
xor
xchg
pop
das
cwtl
xchg
shlb
xchg
ret
sbb
mov
pop
xchg
mov
xchg
js
ja
adc
sub
xor
mov
xchg
and
push
jne
stos
ss
imull
daa
out
mov
push
jg
pop
xor
jbe
js
pop
xchg
rorl
std
and
pop
adc
jp
leave
ss
inc
leave
mov
cvtps2pd
bswap
add
mov
pop
outsl
subb
xchg
arpl
add
aam
mov
jg
insb
inc
mov
jecxz
sub
xchg
ret
roll
pop
shrl
ret
lret
lcall
rol
pop
lret
mov
cltd
sub
pop
lret
mov
cltd
sub
dec
lret
xor
cltd
sub
dec
lret
arpl
mov
xchg
mov
das
dec
out
ljmp
icebp
ret
iret
lahf
stos
ja
mov
mov
mov
iret
sti
mov
insb
scas
jmp
mov
test
rorb
mov
mov
cli
dec
iret
out
aaa
sub
and
iret
neg
jne
xlat
in
pop
das
out
rcrl
lods
mov
mov
xchg
into
mov
into
lcall
ja
int3
jg
popf
sub
pop
imul
pop
push
mov
mov
add
lahf
imul
inc
mov
xchg
and
push
mov
lcall
incl
decl
stos
enter
xchg
push
jae
test
cwtl
gs
daa
mov
out
popf
mov
imul
adc
leave
push
dec
mov
mov
fbld
adc
sub
or
push
cmc
mov
lock
cld
push
aas
mov
xlat
fwait
out
int3
jge
sahf
mov
mov
int3
jg
sbb
cmc
out
xchg
jae
jnp
jae
fstpt
push
arpl
push
mov
cmpsl
push
pop
sub
pop
xchg
xchg
lahf
lcall
icebp
filds
jg
fistpll
stc
mov
in
insb
dec
out
ljmp
scas
lods
lret
popf
mov
fisttps
cwtl
jmp
push
aas
mov
cltd
addl
imul
xchg
lcall
arpl
dec
mov
push
popl
sbb
mov
mov
stos
mov
stos
orl
popl
mov
jae
xor
ss
ja
push
push
mov
xchg
sti
inc
cmp
push
bound
sbb
or
jp
ret
cmp
push
push
mov
xchg
mov
push
or
push
push
mov
mov
adc
inc
dec
mov
pop
xor
sysret
inc
xchg
adc
cmpsl
cld
push
xchg
xchg
mov
cmpsl
and
mov
scas
ss
ret
stos
mov
xchg
sti
testl
cmpsb
jp
andb
lcall
mov
mov
sub
leave
out
ds
sub
jmp
out
lcall
add
mov
cmpsb
sti
fwait
inc
leave
fstl
mov
shr
out
scas
enter
sub
out
ds
inc
leave
das
rol
daa
ror
mov
lcall
mov
mov
movb
mov
mov
mov
fstpl
or
xchg
mov
pop
pop
dec
mov
jno
popf
cmpsl
push
pop
xchg
sbb
mov
mov
push
ret
mov
mov
out
ret
push
adc
ret
push
sbb
stos
fcmovnu
rorl
outsl
jnp
ret
or
outsb
mov
outsb
add
jmp
ret
mov
shlb
lcall
fsub
bound
insl
mov
inc
mov
scas
mov
mov
sub
out
ja
jns
jnp
test
cwtl
mov
jnp
insl
scas
imul
scas
imul
ret
mov
mov
scas
mov
mov
push
outsl
sub
daa
sub
mov
enter
xlat
jnp
mov
ss
inc
fistps
cltd
jmp
lret
cmp
push
push
add
jg
mov
or
xor
jecxz
out
push
mov
xchg
jmp
das
inc
adcl
lret
out
jmp
ret
xor
test
mov
sub
xor
ljmp
das
pop
aas
daa
iret
mov
imul
sub
sub
aas
jge
ss
pop
sbb
sbb
push
arpl
adc
pop
das
pop
mov
ljmp
ljmp
ljmp
rcrl
sbb
cld
test
sub
pop
sahf
sub
aam
scas
fwait
xlat
shrl
testl
stos
sbb
scas
cmp
testl
pushf
scas
jecxz
jnp
outsb
mov
jmp
fwait
bound
fwait
mov
cmp
lcall
mov
rclb
mov
cltd
and
cs
mov
cwtl
mov
divl
jns
out
xchg
push
inc
mov
arpl
mov
xchg
lcall
mov
jg
jb
xchg
jns
out
xchg
push
inc
add
mov
sbb
cwtl
adc
inc
mov
add
jmp
sbb
dec
ja
sbb
mov
mov
cmp
das
in
mov
lods
in
jecxz
arpl
loop
scas
in
loope
mov
shl
sbb
loopne
cmpsl
jns
stos
or
push
pop
sub
rcr
mov
fcoml
iret
mov
rorl
aaa
xchg
cmp
outsl
xlat
les
adc
jae
dec
jbe
test
imul
ret
loope
pushf
sarl
inc
ljmp
xchg
ja
push
adc
aam
js
mov
or
dec
push
sub
xchg
push
aad
cwtl
outsl
pop
dec
les
lcall
cmpl
push
or
jmp
push
add
leave
dec
outsb
and
lret
out
lods
shrl
mov
adc
xlat
mov
movl
stos
pop
scas
xchg
push
dec
dec
lea
in
mov
xchg
addr16
sbb
mov
mov
ja
lahf
das
mov
cltd
mov
or
sbb
repz
iret
dec
mov
mov
mov
jecxz
rorb
xor
filds
mov
mov
mov
xor
xor
iret
xchg
mov
mov
push
sbb
mov
fwait
pop
ss
jecxz
inc
xchg
aas
xchg
dec
rcrb
jns
fnstsw
pop
imul
popf
sti
mov
xchg
call
sbb
mov
sbb
xchg
int3
test
test
imul
sub
into
test
lret
cmc
jbe
test
into
and
test
testl
or
push
iret
push
mov
dec
mov
push
iret
jecxz
inc
sbb
test
fwait
rcl
mov
out
filds
iret
adc
andl
ds
mov
mov
jnp
fistpl
and
mov
sbbb
or
jnp
cmp
pusha
mov
outsb
pop
jg
add
push
jns
jnp
test
iret
jecxz
inc
jle
lret
test
mov
dec
jnp
pop
sbb
add
mov
mov
jge
aas
cmp
das
stc
ljmp
insb
mov
push
pop
iret
lods
jl
pushf
ja
sub
inc
mov
mov
sub
jnp
jnp
mov
mov
push
fdivr
inc
scas
imul
sub
sbb
push
lret
jns
xchg
cli
aad
xchg
imul
imul
add
inc
fsubrl
mov
mov
inc
xchg
imul
lret
loop
rorl
lods
imul
mov
pushf
mov
and
repz
loop
cmpsl
pxor
ret
out
jmp
call
enter
mov
xchg
aas
movl
loope
lcall
sbb
fbstp
test
push
mov
add
add
shrl
mov
cmp
imul
inc
ret
dec
mov
test
enter
pop
push
mov
addr16
jnp
call
mov
jp
lds
push
data16
ja
arpl
or
cmp
arpl
pop
cmp
mov
into
outsl
mov
sub
mov
jp
loope
pop
out
fcmovnbe
fisubl
loope
test
lret
out
loop
das
lret
rclb
shlb
rol
cwtl
notl
out
mov
test
xchg
cli
fldt
rorb
jmp
shrl
sbb
jne
pop
mov
mov
jnp
push
sub
or
pop
jne
ja
cmp
xchg
decl
rsm
rorl
xchg
ljmp
xchg
push
imul
imul
in
movsl
jecxz
sbb
dec
lret
pop
sbb
mov
cmp
jnp
cmp
mov
jae
sti
jb
mov
jbe
or
jno
aas
lret
jno
jnp
movl
pop
popf
sub
cs
inc
dec
punpcklwd
mov
shrl
aam
fldt
jecxz
dec
lret
loopne
dec
and
mov
inc
sub
jbe
imul
subl
lcall
sub
iret
xlat
imul
push
bound
rcrl
stos
add
decl
sub
outsl
ds
jecxz
imull
arpl
or
mov
dec
mov
xchg
pop
and
add
bound
pop
lret
mov
xchg
push
cli
imul
add
add
addr16
mov
imul
mov
imul
push
fs
cli
movsb
pop
sub
daa
lret
inc
arpl
jmp
adc
inc
lahf
xor
sub
sti
dec
xchg
insb
push
scas
pusha
xchg
dec
mov
rcrl
out
das
pop
mov
pop
mov
push
cli
fistps
lret
ljmp
scas
pop
rorl
pop
pop
push
negl
lret
in
pop
jnp
lahf
sbb
fidivrs
lahf
inc
pop
imul
mov
and
mov
int3
and
mulps
fisttps
or
sarb
mov
xchg
out
add
jnp
lahf
pop
ds
das
mov
out
test
mov
jnp
loopne
fs
adc
fdivs
fistpll
dec
add
addr16
mov
push
sbb
divl
and
pop
mov
cmovns
pop
cld
in
inc
push
fisubs
push
xor
pop
xchg
pop
mov
stos
sahf
cmpsl
pop
push
mov
push
js
in
mov
mov
or
ja
mov
loope
adc
mov
mov
fistps
jae
mov
out
shlb
xchg
dec
int3
and
push
push
inc
lds
jp
mov
mov
or
movsb
push
sub
ret
mov
mov
mov
test
mov
push
andb
fbstp
out
icebp
jge
shlb
mov
fwait
enter
adc
test
push
jp
adcb
ret
imul
insb
mov
xchg
ret
lcall
pop
dec
dec
aas
lods
mov
dec
pushf
push
pop
shlb
push
pop
lods
out
jmp
lahf
inc
dec
fisubs
dec
mov
mov
pop
mov
orb
adc
rolb
fadds
push
icebp
mov
sub
xorl
int3
xchg
aaa
jae
shll
dec
sti
sub
lds
push
cli
filds
dec
add
dec
mov
pushf
adc
xchg
dec
pushl
mov
jns
repz
jnp
xchg
add
cmp
inc
push
repz
sub
push
jnp
int
dec
lods
pop
and
jecxz
out
movsl
cmp
jmp
jnp
cwtl
mov
inc
lret
mov
mov
out
fbstp
mov
ret
mov
push
mov
sti
movsb
jnp
inc
jnp
leave
cmp
dec
sbbl
mov
jp
pop
push
aad
ds
inc
jp
jge
aad
pop
jg
mov
pop
lret
pushf
add
loop
and
test
inc
lret
inc
dec
push
fistps
cs
in
pushf
cmp
push
mov
jge
into
pushf
xor
pop
inc
or
cmp
xchg
mov
test
mov
push
cmp
sub
seta
mov
and
sub
dec
arpl
jecxz
in
mov
scas
sub
sub
inc
cwtl
scas
cli
inc
rorl
inc
movsl
adc
push
in
pop
adc
mov
scas
jp
test
shrl
jge
lahf
mov
sbb
mov
push
xchg
sub
test
cmpsl
shl
pop
stos
inc
sub
jns
mov
mov
dec
xor
addr16
and
mov
xor
push
inc
inc
inc
imul
leave
jp
pop
xchg
mov
inc
jecxz
jg
jp
lcall
aas
data16
dec
fbstp
mov
aaa
cwtl
ds
sub
fidivl
mov
push
jae
xchg
movsb
mov
jae
ret
shlb
cmp
icebp
int
dec
ret
mov
jmp
iret
daa
xlat
mov
sarl
mov
cmp
das
outsl
sarl
lret
repnz
mov
mov
outsl
adc
scas
insl
scas
xor
bound
sub
ret
cmp
lods
outsb
arpl
scas
jecxz
jnp
gs
sub
mov
jnp
stos
call
sarl
cld
aam
cmp
inc
stos
fnsave
jns
jnp
test
sarl
imul
mov
sub
inc
mov
jnp
cmpsl
call
shll
lods
daa
sub
cmpsb
outsb
arpl
data16
movsl
inc
lahf
fisubl
shlb
imul
mov
pop
movsl
mov
fnstcw
mov
loope
fidivl
loop
pushf
aad
fbstp
sub
add
cwtl
lahf
scas
mov
mov
mov
mov
sub
mov
icebp
filds
inc
mov
das
xchg
shll
jnp
sahf
fnsave
xor
jp
add
ficomps
pushf
frstor
mov
mov
sub
lcall
fbstp
ljmp
xchg
pop
fwait
mov
jnp
or
out
inc
push
mov
xor
mov
pop
scas
or
mov
scas
call
mov
sti
sbb
sahf
mov
shl
in
movsl
mov
fsubr
sub
adc
rorl
rolb
lods
ljmp
into
out
or
out
loop
jmp
dec
push
cs
mov
sbb
add
aas
xchg
push
pop
cs
mov
sub
push
shr
mov
lods
inc
or
sbb
stc
cmc
adc
pop
aaa
or
ljmp
xchg
push
das
push
fistpll
and
pop
out
pop
dec
and
pop
out
pop
dec
sbb
pop
out
outsl
pop
lret
lods
mov
cmpsl
ja
sti
push
int3
je
imul
pusha
mov
shr
pop
cltd
pop
inc
shrb
movnti
cmc
repz
ljmp
push
loop
loop
fwait
iret
pop
stos
and
loope
stos
shrl
xor
imul
ret
sub
pop
lret
cmpsl
mov
pop
loope
cld
mov
cmp
cli
cmp
sub
sbb
cmp
fwait
jnp
mov
ljmp
cmp
pop
mov
push
jp
out
xor
out
inc
jecxz
xchg
jle
jg
cmp
ret
cmp
mov
adc
adc
mov
in
cmp
in
shll
arpl
inc
in
outsb
arpl
sub
xor
mov
xor
xor
arpl
cmp
cmp
data16
call
fcmovnb
xor
jns
xchg
sub
pop
ret
xchg
jb
stos
js
xchg
rolb
mov
sub
inc
outsl
push
jns
incl
out
insb
jp
call
or
loop
scas
out
data16
mov
add
xchg
xor
rcrb
pop
jns
ret
xchg
cmp
decb
mov
movsb
faddl
inc
push
dec
mov
cmpsl
inc
jmp
lret
lahf
ss
bndstx
pop
popa
idiv
add
mov
sbb
arpl
loope
dec
sub
iret
xlat
sti
repnz
adc
pop
stos
popf
and
mov
out
jns
iret
imul
pop
push
imull
hlt
stos
arpl
cs
divl
arpl
dec
out
mov
inc
inc
ret
cmp
addr16
or
shrl
sbb
add
sub
push
xchg
lods
sub
cmp
scas
outsl
sub
adc
mov
mov
in
adc
cmp
xchg
inc
divl
lods
pop
inc
mov
and
xlat
outsl
ljmp
dec
lds
mov
xchg
mov
subb
dec
imul
sub
ret
lahf
lods
imul
pop
imul
push
sub
pop
in
mov
inc
imul
mov
add
jns
imul
ja
aas
daa
pop
jg
mov
stos
mov
ss
jle
jecxz
test
punpckhbw
cmp
mov
int3
xchg
jecxz
insb
mov
out
test
inc
dec
and
lret
test
inc
push
in
pop
dec
imul
ret
sub
adc
aas
mov
cwtl
aaa
inc
inc
and
out
andb
and
inc
mov
pop
and
leave
imul
das
ja
and
cltd
pushf
push
notl
add
lcall
and
leave
sub
mov
add
pop
lahf
or
jae
push
or
mov
pushf
ljmp
push
sarl
cmpb
mov
jnp
stos
cmp
fmuls
fistps
mov
push
aaa
cmp
jns
pop
mov
stos
add
push
das
mov
mov
sbb
fwait
xor
sahf
call
xchg
ljmp
sbbb
or
xchg
pop
xchg
ljmp
pop
aas
push
jge
adc
mov
icebp
fbld
add
add
cli
jns
ja
dec
filds
daa
enter
mov
cmp
mov
cmp
fistps
popl
lds
sbb
popl
lds
adc
push
pushf
aas
sbb
adc
fwait
dec
and
sbb
mov
pop
add
mov
testl
filds
in
popa
cmp
pop
dec
cmpsl
cwtl
inc
sbb
cwtl
cmp
iret
pop
imul
stos
or
sti
jecxz
mov
outsl
add
sbb
mov
pop
push
xchg
and
pop
daa
out
out
rorb
sbb
ljmp
cmp
cmp
lock
scas
jnp
push
loope
iret
mov
xlat
movsl
fwait
cmp
xchg
and
out
stos
dec
ja
adc
lahf
and
cmc
rorl
in
shrb
sbb
cwtl
fs
add
out
adc
enter
xchg
mov
rclb
jp
fsubrs
push
pop
mov
cmp
or
unpckhps
rclb
jnp
pop
outsl
pop
aaa
rorb
jmp
xchg
mov
or
and
into
mov
test
sti
push
pop
mov
or
mov
cmovnp
pop
cwtl
sub
jmp
in
ljmp
mov
stos
inc
pop
out
loope
push
mov
lahf
pop
xchg
push
mov
test
adc
hlt
push
movsb
cmc
enter
mov
leave
subl
xchg
imul
sti
sti
dec
leave
mov
das
test
cmp
insl
cwtl
push
lds
push
pop
sti
into
lods
xchg
mov
xchg
xchg
or
scas
les
jae
lods
xchg
mov
and
decb
gs
das
cmp
aaa
cmp
lret
movsb
push
inc
lahf
dec
jge
mov
add
dec
cmp
lods
inc
mov
lret
pusha
xlat
jmp
mov
push
mov
xlat
aas
jecxz
push
sbb
lods
jecxz
and
xor
cld
sub
jg
add
add
stos
out
mov
and
dec
dec
fistpl
lret
out
int3
push
jae
sbb
mov
dec
mov
push
mov
loop
cld
jmp
dec
pop
inc
sti
xchg
imul
sbbb
iret
in
movsb
mov
jecxz
mov
adc
test
jmp
lret
push
mov
sbbb
scas
out
dec
imul
add
mov
mov
mov
lret
cmp
and
and
leave
dec
daa
mov
adc
mov
test
arpl
mov
inc
lret
mov
sbb
mov
mov
jns
push
xchg
dec
dec
dec
cs
sbb
or
jecxz
dec
jge
mov
out
mov
jmp
and
xchg
mov
call
dec
aas
mov
scas
add
int3
and
out
dec
push
mov
dec
adc
movsb
adc
mov
shl
movl
cmp
mov
stc
xchg
decl
addb
jmp
out
stos
js
dec
xor
and
pop
ss
adc
add
mov
xchg
mov
pop
sub
test
mov
jge
andl
pop
addl
lret
mov
ds
mov
lock
lcall
cmpb
aas
mov
xchg
loope
imul
sub
daa
fstpl
jge
mov
add
ret
dec
ret
jecxz
cltd
mov
sbbb
divl
ret
jnp
mov
mov
cmpsl
ret
lods
mov
mov
test
pop
sub
pop
pop
mov
out
in
out
add
negb
ss
imul
faddp
loop
adc
mov
jle
xchg
into
jg
aaa
ret
lods
out
arpl
ret
sti
jge
cmp
jae
jge
adc
cmp
aas
mov
popf
adc
xchg
and
pop
popa
fidivrl
xchg
aas
jl
and
adc
daa
out
or
cwtl
pop
push
fcmovnu
in
jnp
fwait
popa
sbb
xor
mov
add
or
jae
and
out
aas
mov
mov
addr16
cli
xlat
es
fcmovnb
dec
xchg
rcll
ja
pop
sarb
cmpl
add
mov
sbb
push
or
jp
pop
sti
push
xchg
sbb
movsl
lcall
das
jns
dec
xlat
inc
pop
lret
mov
push
and
sbb
fsubr
js
pop
movsb
ja
enter
or
scas
out
jle
outsl
sub
and
lahf
shlb
subb
mov
dec
add
sub
fisttps
and
inc
cmpsl
aaa
jae
xchg
fistps
test
cmpsl
mov
push
cld
ja
jmp
inc
inc
jb
jge
xchg
push
mov
jbe
ret
mov
enter
stos
andl
dec
jae
pop
sub
cmpsb
aaa
jecxz
and
pop
jo
cmpsl
xchg
out
mov
arpl
sbb
xlat
pop
push
mov
xchg
clc
jnp
xchg
outsl
sub
xchg
sbb
fistps
push
xor
push
dec
push
mov
out
bound
sbb
lock
jg
lret
sbb
decl
jae
lret
divl
mov
add
movl
lret
lret
jmp
sbb
add
loope
pop
lret
test
divl
test
into
jmp
scas
or
addr16
ficoms
cmpl
pop
sti
subb
lret
cwtl
mov
outsl
addr16
adc
dec
jg
jae
and
lcall
lock
push
popf
shr
mov
call
mov
mov
add
lods
out
popf
addr16
out
cmpsl
nop
mov
add
pop
sahf
loop
enter
out
jnp
fnstsw
sub
jg
scas
in
lods
nop
imul
les
add
lods
in
popf
mov
and
jecxz
out
loopne
mov
daa
aas
mov
jecxz
xchg
pushf
loop
enter
jecxz
xchg
xor
mov
push
push
in
pop
das
out
aaa
daa
dec
jnp
mov
int3
mov
add
mov
out
or
shl
shr
loope,pn
jnp
mov
js
mov
or
mov
sbb
fisttps
in
mov
stos
mov
mov
je
rcr
mov
shrb
pop
pop
jge
mov
out
mov
lret
daa
mov
adc
pushl
pop
ja
lahf
pop
pop
push
fstl
xor
into
std
xor
popf
xchg
jg
shlb
cld
ds
shlb
cmc
mov
outsl
xchg
sbb
or
dec
mov
xchg
dec
lds
fs
into
fistpl
xchg
dec
aad
mov
testl
dec
xorb
out
xor
inc
pminub
push
xchg
pop
cmp
sarl
inc
adc
mov
lahf
fiaddl
jle
pop
stc
leave
ret
movsl
adc
aas
mov
test
jecxz
add
add
movsl
adc
ds
add
or
cmp
and
inc
inc
pop
ror
popa
fdivs
xchg
int
aas
fcmove
out
imul
fs
sub
xchg
pop
ja
divl
pop
mov
enter
arpl
sub
imul
jl
loop
mov
or
xor
xchg
push
cltd
mulb
arpl
mov
addl
arpl
sbb
popf
push
mov
add
mov
ja
mov
enter
fdivl
call
pop
inc
jbe
sbb
lret
inc
jbe
imul
mov
pop
or
sbb
mov
mov
mov
mov
shrb
mov
mov
into
addr16
lcall
sahf
cmp
sbb
push
push
aas
ljmp
adc
mov
out
dec
lock
adcl
push
out
mov
arpl
dec
fsubr
jmp
je
jg
aam
xchg
rcl
mov
xor
mov
fsubr
sarb
xchg
rcl
mov
adc
outsb
pop
ror
mov
or
outsb
xor
mov
mov
imul
ffreep
dec
sbb
mov
mov
lret
scas
inc
clc
pop
popf
mov
sub
call
data16
out
rol
cmp
mov
in
mov
leave
pop
ss
addr16
push
aaa
addr16
ret
jno
sbb
cltd
cmpsl
cmc
mov
pop
cmp
outsb
inc
ja
xor
mov
xchg
aad
mov
aas
repz
mov
mov
fistps
call
xchg
adc
popa
icebp
cmp
pop
and
mov
add
xor
into
adc
inc
lret
xchg
mov
push
daa
push
mov
pop
dec
int3
scas
daa
mov
mov
scas
scas
adc
push
add
xchg
pop
mov
and
adc
sbb
andb
pusha
divl
movsb
ds
xor
jnp
gs
and
sti
pop
dec
shll
pop
fwait
dec
lods
daa
mov
mov
mov
iret
popf
mov
mov
mov
push
push
mov
imull
cltd
fdivl
lods
mov
popf
mov
mov
jmp
xchg
sbb
and
mov
xlat
inc
xchg
push
fisttps
stc
add
fidivrs
xlat
rcll
lods
shl
jnp
pop
cld
jecxz
testb
fwait
scas
shr
mov
in
jle
inc
inc
add
stos
ffreep
cmpsb
loope
imul
jmp
sti
scas
pop
cmp
or
arpl
inc
scas
cmc
scas
mov
lods
mov
cmc
jae
cmp
lahf
and
pop
dec
inc
lods
push
add
lcall
xchg
aas
pop
outsl
add
test
decb
and
sub
mov
daa
pusha
scas
notl
add
outsl
mov
ja
aaa
cltd
push
add
scas
call
cmp
imul
inc
mov
sbbl
jne
mov
sti
outsl
cmp
cmp
dec
mov
dec
add
adcl
test
mov
mov
push
std
outsl
ja
mov
push
lahf
dec
pop
das
sub
cmove
push
aaa
movsb
jnp
cltd
das
push
mov
lds
mov
mov
in
pusha
imul
xchg
mov
ja
test
test
xor
jbe
mov
popa
das
addr16
test
shr
push
mov
shr
into
lret
lret
sbb
in
outsl
ret
jmp
mov
jmp
adc
mov
fimuls
scas
jae
jle
arpl
add
sbb
pop
lods
out
jmp
movsl
pop
mov
enter
out
mov
mov
push
js
xchg
loop
scas
in
movsb
mov
movsb
stc
imul
loop
mov
ljmp
jle
fldt
xor
add
mov
xor
aam
push
movsb
mov
mov
enter
stos
fucomip
fwait
jmp
out
scas
loopne
and
adc
xor
xchg
pop
scas
xor
xor
add
and
xchg
cli
mov
popf
jae
sub
push
push
xor
jae
je
out
adc
xchg
add
jnp
jnp
fisubl
mov
out
hlt
outsb
insb
cmp
arpl
leave
dec
sbb
inc
dec
ds
sub
ds
mov
xchg
add
ret
cmp
iret
pop
push
mov
mov
xlat
scas
into
jne
jg
adc
cwtl
mov
jns
dec
sbb
call
fxch
rcr
jecxz
sbb
or
xchg
adc
shlb
aam
mov
pop
cmpsl
outsb
pop
popf
mov
lret
andb
into
jle
cmc
and
mov
or
lcall
sub
lahf
pushf
int3
mov
pop
out
pushl
aaa
mov
out
pop
lcall
push
jmp
outsb
hlt
pop
out
xlat
mov
rorb
jmp
or
icebp
mov
cld
jp
cwtl
test
lret
dec
lcall
leave
cwtl
mov
mov
fistl
aaa
jnp
daa
jnp
imul
sbb
mov
shll
daa
xchg
jb
popf
test
xchg
ret
pop
sbb
xchg
mov
lret
scas
inc
or
push
clc
dec
sarl
add
jle
pop
sub
xor
jns
out
hlt
mov
stc
je
mov
jne
fucomip
rcr
inc
sub
aad
dec
std
inc
test
pop
lds
cmp
mov
out
and
call
fidivrl
sti
movsb
pop
outsl
dec
call
jne
fwait
ja
stos
out
mov
lods
xchg
pop
jmp
jae,pn
dec
out
mov
notb
imul
and
cwtl
loop
lock
jmp
xchg
mov
lret
cmpsl
jne
nop
mov
insl
ss
mov
jg
mov
cmpsl
das
push
and
sbb
lahf
mov
stos
data16
inc
stos
mov
loop
mov
lea
jns
or
arpl
xchg
test
ss
jecxz
decl
push
inc
mov
arpl
js
aas
ss
cltd
std
add
out
inc
jg
pop
dec
add
add
repnz
or
xchg
push
and
xchg
pusha
arpl
push
mov
decl
out
jecxz
push
and
xor
hlt
xor
mov
nop
ds
inc
repnz
jae
mov
mov
adc
leave
sbb
sarl
push
cmp
mov
loope
loop
mov
imul
repnz
add
jmp
push
jmp
pop
push
je
cmc
in
adc
dec
pop
rdpmc
or
push
lods
outsb
movsb
daa
in
jmp
mov
ja
aad
mov
cmp
xchg
cmc
lock
loopne
mov
lahf
mov
ds
mov
sarl
mov
scas
pop
jae
inc
jae
add
popa
in
out
loopne
sbb
jecxz
ljmp
in
in
popa
xchg
jae
pop
repnz
and
mov
pop
iret
shrl
jmp
mov
jae
jl
cld
or
ret
sti
mov
bound
jnp
mov
enter
jmp
test
shr
adcl
mov
adcl
cmp
mov
jg
dec
xchg
sub
mov
inc
scas
xchg
mov
iret
mov
lods
lret
cmc
fcmovbe
in
stos
jb
aad
mov
out
in
xchg
sub
mov
aad
shrl
out
enter
jbe
push
and
aaa
mov
fcmovbe
in
mov
cwtl
rcll
sahf
subl
adc
insb
pop
movsb
dec
scas
xor
xchg
pop
lahf
mov
sub
mov
insb
popa
lds
sbb
pop
int
push
pop
adcl
push
aad
mov
push
nop
xor
xchg
push
mov
inc
dec
mov
sbb
lret
dec
negl
inc
xor
out
outsb
push
insb
add
push
arpl
jns
pop
mov
mov
mov
push
lods
jmp
popa
jo
mov
push
stos
jno
and
popa
ja
lahf
inc
add
imul
and
fisubs
mov
jp
stos
cmpsl
cli
stos
xchg
dec
fsubl
test
andl
lret
stos
jp
std
lahf
mov
dec
lret
loopne
mov
mov
xchg
mov
sbb
sahf
lret
sub
dec
sarl
jge
scas
lcall
outsl
jnp
jg
mov
mov
xchg
jb
mov
add
xor
add
cmpsb
lahf
mov
popa
and
inc
xlat
and
sub
sub
notl
popl
xor
lahf
das
lret
mov
and
pop
mov
orl
sub
mov
lret
mov
push
sbb
push
and
push
mov
daa
mov
fwait
mov
jl
push
sti
sbbb
aad
jmp
dec
mov
sbb
xor
rol
sbb
mov
mov
lds
add
sub
stos
iret
xor
repz
ljmp
xchg
cmpsl
scas
sub
and
sbb
xor
call
inc
out
inc
scas
adc
cmpsl
rol
push
dec
imull
in
into
stos
popa
or
xor
push
subb
mov
pop
lahf
test
sbbl
mov
mov
shlb
pusha
rorl
add
mov
arpl
int3
iret
xlat
mov
sbb
out
insb
jne
shll
fcoml
sbb
stos
outsb
ficoml
mov
roll
pop
xor
outsb
pop
push
mov
or
das
aad
mov
shll
ficoml
in
das
mov
mov
arpl
sbb
dec
adc
and
mov
sub
testl
xchg
add
lods
call
mov
jnp
mov
imul
shll
das
jae
mov
jnp
pop
xlat
add
jo
call
xlat
mov
filds
fs
xchg
iret
or
fildll
mov
pop
insl
mov
pop
mov
lock
lar
out
adc
leave
lea
sub
or
repz
lahf
sbb
stos
pop
xlat
adc
outsl
frstor
addl
bound
stos
sub
pop
mov
in
rolb
mov
lcall
and
mov
leave
aad
jmp
test
jmp
pop
gs
lret
scas
cwtl
iret
outsl
test
lods
imul
mov
repnz
jp
mov
mov
mov
stos
cmp
and
pop
jae
jns
mov
push
lods
jle
mov
pop
pushf
dec
xchg
inc
aas
inc
pop
mov
add
mov
jnp
lahf
jmp
shll
arpl
dec
xchg
dec
sbb
bound
xchg
orb
xchg
sbb
jae
into
test
mov
leave
aas
aas
pushf
shrl
cltd
push
aas
adc
aas
das
mov
ja
inc
scas
bound
xor
sbb
lret
sarl
test
sub
dec
daa
pop
insl
imul
pushf
pop
jp
cmpsl
mov
push
jg
pop
ret
icebp
fwait
insl
jmp
ret
xor
add
mov
popa
push
shrl
or
mov
jp
scas
mov
add
icebp
mov
mov
rorb
pop
movsl
fwait
lods
shrl
fistpll
jb
push
lret
xchg
jno
mov
sbb
popf
add
sbb
in
addr16
ficomps
das
shlb
movsl
fstl
out
xchg
in
pop
scas
iret
inc
sbb
lahf
cmpsb
mul
ret
sarb
inc
pop
ja
ret
fldl
scas
adcl
mov
lcall
filds
pop
jae
insl
mov
cmp
fwait
mov
lods
mov
push
imul
jg
mov
mov
jp
jmp
flds
mov
into
xchg
fisttpll
push
sbb
adc
sub
fcmovbe
loopne
inc
sub
sub
out
cmp
pop
mov
mov
lods
stos
sarb
xchg
mov
bswap
and
adc
adc
pop
jge
rcrl
stos
sbb
fnstenv
into
cltd
push
rcrl
shlb
sub
addr16
popf
bound
out
inc
bnd
mov
repnz
les
das
fnstsw
rcl
sahf
pop
stos
xchg
mov
mov
scas
aad
rorl
xchg
sub
inc
fldl
lret
shll
dec
or
ljmp
mov
xchg
mov
imul
in
adc
and
insl
mov
and
popa
mov
sbb
int
xlat
and
movl
inc
bound
cmpsb
inc
jnp
lret
mov
pop
jg
sub
jg
scas
int3
cmpsb
popa
pop
popf
not
sti
mov
in
je
dec
dec
dec
pop
fnstenv
je
xlat
int3
repnz
sub
out
je
lret
bnd
lods
pusha
bswap
negb
xlat
mov
imul
loop
jp
leave
out
rol
int
jge
mov
adc
cmp
lret
sub
les
test
push
rcrl
outsb
insl
stos
bound
cmp
jae
popf
dec
xchg
lcall
or
push
shl
fldcw
lret
pusha
mov
popa
push
stos
ljmp
and
sarb
movsb
ja
xchg
out
ret
fwait
jnp
sahf
jmp
xlat
or
fidivs
shrl
pop
mov
fidivs
lds
or
mov
mov
icebp
xchg
jnp
mov
jg
cli
arpl
mov
inc
shlb
xor
push
fisttpl
mov
rcl
jmp
scas
mov
into
sbb
mov
aaa
rcll
mov
cwtl
sbb
xor
xchg
insb
stc
ret
jg
scas
adc
and
xchg
cmpsb
jno
adc
imul
movsb
int
das
imul
lret
or
inc
btr
inc
mov
pusha
mov
jg
dec
xchg
leave
xlat
mov
popa
sti
lods
imul
jno
movl
jg
mov
and
mov
icebp
push
enter
and
arpl
xchg
or
mov
mov
and
mov
dec
ljmp
mov
test
dec
add
dec
push
mov
and
scas
xor
mov
push
cltd
adc
int
add
mov
and
cld
cld
out
int
xchg
fiadds
push
fisttpll
gs
mov
insb
and
aas
sti
lret
inc
in
sarb
rcl
int
data16
jnp
aad
pop
dec
sbb
xchg
popf
xchg
out
sbb
rolb
pop
mov
xor
fstps
int
cmc
sub
dec
sbb
bswap
and
cmp
int3
mov
mov
leave
scas
mov
jmp
lods
ja
xchg
add
loop,pt
jg
inc
and
in
cltd
jmp
jp
fucomip
inc
orl
shrl
and
inc
dec
pushf
jge
movsl
stos
repnz
insb
dec
xlat
xchg
mov
jnp
or
shl
jns
push
mov
pusha
and
xchg
mov
icebp
push
mov
mov
push
stos
sbb
xchg
scas
jl
lds
and
lret
loop
jb
int
stc
cwtl
sbb
mov
sub
aaa
sub
out
leave
mov
mov
fucompp
in
push
mov
arpl
mov
add
dec
movsb
insb
sbb
imul
ret
push
jne
push
into
sti
fdivp
sub
lcall
mov
add
jnp
cmovnp
and
mov
dec
pop
adc
push
sar
dec
pop
lahf
xor
mov
imul
pop
mov
pop
xorl
sub
adc
repnz
xchg
sti
mov
sbb
in
sub
cld
jmp
jmp
filds
jmp
repnz
daa
mov
mov
xchg
mov
push
dec
pop
and
fwait
cmpsl
rcrl
ds
dec
sbb
pop
ljmp
sub
mov
sub
clc
popa
xlat
lret
mov
in
movb
jno
cs
jg
add
fidivrl
rcr
icebp
mov
jns
roll
inc
pop
sub
andl
or
xor
push
shrb
jno
cwtl
pop
das
loop
adc
out
inc
addr16
roll
mov
int
cmpl
sti
mov
movsl
das
in
xor
subl
arpl
pop
lret
adc
pop
cmpsb
mov
lret
pusha
dec
lods
fistps
mov
mov
mov
push
and
dec
mov
popa
ss
lcall
addr16
sub
push
aas
pop
add
insl
rol
in
and
push
ja
subb
sbb
ja
jno
iret
out
stos
pop
pop
adc
sub
jmp
daa
out
into
imul
loope
dec
movsl
popa
add
das
jae
sub
sarl
sub
add
dec
loopne
add
pop
push
icebp
aas
lret
adc
jmp
fnstsw
scas
decl
movsb
bound
add
cmpsl
imul
xchg
iret
sbb
fdivp
sti
in
cmp
shlb
lret
mov
bound
int3
pusha
dec
xchg
jo
repnz
jg
test
mov
fidivs
cmpsb
gs
scas
mov
leave
imul
pop
adc
lcall
fwait
movsl
jle
fldt
mov
cmp
push
jnp
add
inc
popf
xchg
jmp
cmp
gs
sub
lahf
jp
nop
or
mov
jge
leave
lods
ret
and
and
mov
inc
sti
les
addr16
dec
xchg
push
cli
mov
test
stos
xor
push
push
fwait
loop
inc
mov
les
push
mov
xor
fcmovnb
mov
repz
jnp
mov
push
fstpt
loope
xor
outsl
xor
test
into
jmp
xorb
inc
mov
int
pop
dec
xorl
and
mov
popf
cmp
cmp
adc
fwait
popf
out
xor
scas
mov
adc
dec
mov
pop
mov
lods
aaa
pop
push
lds
mov
test
or
insl
mov
lds
test
aas
sbb
xlat
movsl
fnstenv
rol
jge
jnp
cli
sbb
and
mov
xchg
sbb
push
pop
inc
xchg
pop
aaa
xor
aas
pushf
repnz
mov
out
mov
mov
fisttpll
ja
in
pop
push
push
sub
leave
cmp
lret
jmp
jne
addr16
cltd
pop
sub
sahf
add
mov
cli
push
lahf
subl
cltd
jae
push
lahf
fs
fwait
das
fdivp
mov
out
nop
dec
lahf
pusha
dec
jae
mov
mov
movsl
loope
inc
orl
jmp
mov
fisttps
in
sbb
adc
mov
aaa
out
or
xlat
and
inc
aam
mov
test
cltd
sub
mov
out
into
lds
pop
movsl
lret
in
pusha
jecxz
jne
pop
jbe
gs
mov
mull
negl
aas
add
or
fsts
sahf
movsl
xchg
test
lret
fwait
dec
lods
adc
and
pop
cmovno
std
ret
and
mov
clc
push
mov
push
test
xchg
lods
lahf
imul
das
out
movsl
xor
cmp
mov
pusha
ja
in
fucom
repnz
sbb
adc
mov
ret
andl
xchg
out
cs
mov
inc
ror
out
imul
aas
outsl
push
adc
and
add
mov
ret
je
imul
imul
stos
or
jae
jne
xchg
adcb
xchg
stos
xchg
sbb
test
adc
sub
cmp
sahf
add
subb
add
leave
mov
lds
xlat
scas
xor
jbe
mov
fnsave
push
aas
pop
push
cmp
popf
stos
xchg
cmp
add
mov
mov
jmp
push
jmp
into
lods
xchg
mov
std
pop
ds
stos
mov
cmpsb
inc
mov
pop
sbb
out
fs
ljmp
fs
int
in
les
pop
pop
push
mov
sub
mov
mov
fsub
and
sub
cmpsl
hlt
inc
lret
fnsave
int
imul
pusha
aaa
cmp
cli
jnp
xchg
mov
imul
std
jg
and
repz
dec
std
popa
enter
outsl
xchg
mov
shrb
fwait
mov
mov
fsubs
scas
mov
mov
and
out
dec
ret
xchg
icebp
shll
jns
and
hlt
shl
mov
lahf
mov
lret
dec
ret
js
or
jecxz
imul
rol
cld
jl
jnp
out
fsubp
stos
lods
fdivrp
out
pop
lret
rolb
into
leave
repnz
cmovne
daa
repnz
rcll
jecxz
or
loope
idivl
in
loope
test
mul
cli
jns
bound
shr
in
mov
push
fdivs
ret
jbe,pn
jmp
outsb
lret
adc
xchg
je
icebp
ret
inc
mov
xchg
outsb
arpl
push
mov
inc
popf
ret
emms
jecxz
insl
and
arpl
mov
and
inc
shl
add
xor
idiv
loopne
push
push
ret
loope
dec
xchg
setg
or
scas
xchg
add
outsb
flds
xchg
xchg
xlat
rcrl
pop
or
mov
out
scas
xchg
loope
mov
enter
imul
mov
pop
mov
andb
dec
pop
cmpsl
nop
aas
and
fstp
fistps
sti
xchg
cmp
jmp
jg
int
mov
cmp
cmp
pusha
fbstp
cld
loopne
enter
jp
mov
pop
inc
xor
int
fldt
rorl
xchg
xchg
sbb
sbb
data16
iret
shlb
addr16
adc
mov
or
js
movsl
pop
sarl
loopne
xchg
shl
cmp
repnz
mov
lcall
jp
jnp
mov
subl
adc
rcll
dec
xor
and
loopne
std
sub
inc
cmp
movsb
pop
dec
rorb
cmp
adc
lea
lods
roll
xchg
add
sub
mov
leave
sub
bound
jge
ffreep
inc
popf
mov
test
test
xchg
pop
jl
dec
push
mov
lahf
insl
sub
sahf
inc
mov
xchg
stc
aad
scas
sub
fwait
push
in
mov
jns
xchg
and
pop
xor
and
push
lds
arpl
into
xor
int
jns
dec
mov
inc
mov
mov
sarb
xchg
dec
jnp
inc
das
cmp
jge
sub
pop
inc
xchg
pusha
fisttpll
mov
sahf
mov
jb
into
nop
fldl
lods
aas
cmpsl
xorb
pop
sbb
pop
lods
lds
mov
mov
sbb
mov
popf
xor
stos
xchg
and
iret
jp
jns
mov
xorl
or
out
fsts
rcrl
mov
xchg
sqrtps
out
sahf
fistps
icebp
sub
mov
sbb
or
mov
pop
sub
inc
push
test
popa
mov
mov
inc
sub
subl
dec
mov
xchg
shrl
fstp
scas
fisttps
filds
scas
cmpsb
ja
xchg
bound
cwtl
xchg
pop
inc
inc
cmc
subl
int3
mov
and
push
mov
inc
lods
inc
sbbl
rorl
xchg
cmp
or
dec
mov
dec
fidivs
mov
fistl
dec
iret
int
push
jge
in
pop
mov
and
rcrl
out
cltd
lods
inc
gs
lea
sub
scas
test
test
cmpb
das
xor
stos
cmpl
jns
rcrl
out
arpl
pop
lret
mov
ja
dec
iret
fwait
scas
mov
dec
cmp
sarb
fiadds
cltd
stc
sub
dec
sub
jns
push
into
dec
icebp
jge
mov
xor
sbb
mov
cmpl
stc
adc
and
lods
int
pop
push
dec
and
mov
ud1
mov
or
sahf
jecxz
dec
movl
dec
mov
or
push
fbld
inc
pop
in
cmp
test
les
int3
test
xchg
int
lret
cmc
in
and
loop
jge
test
dec
sbb
fisubrs
mov
mov
adc
dec
sbb
loopne
sub
mov
lret
pop
mov
jecxz
bound
leave
ror
fidivrs
ja
jg
jmp
testl
mov
aaa
arpl
jg
add
popa
iret
mov
dec
into
or
and
icebp
sub
stc
add
sbb
pop
dec
popa
test
dec
sbb
push
pop
fisubs
mov
and
shl
aas
rorl
and
test
dec
xchg
xchg
mov
shll
int3
fnstsw
pop
mov
lret
pop
jbe
ja
inc
jg
lea
dec
dec
jne
push
inc
cwtl
jge
in
jl
inc
fwait
jno
pop
inc
inc
frstor
arpl
jp
or
cltd
jg
into
rcl
dec
mov
cmc
and
xchg
loope
rcrl
add
pop
ljmp
aaa
pop
sub
adc
insl
sub
xor
or
pop
popl
or
nop
push
pushf
mov
push
fwait
lret
int3
sbb
lcall
popf
aas
test
add
mov
in
iret
lds
int
lahf
popa
stos
inc
push
mov
stos
push
push
fisubrl
sub
fs
ja
into
or
xlat
mov
mov
ret
mov
fisubs
mov
neg
shrb
sbb
outsl
mov
mov
mov
mov
pop
xor
stos
clc
movsb
jg
pop
pop
jbe
aad
lret
std
aaa
dec
cltd
xchg
scas
stos
mov
jnp
js
pusha
xchg
jg
push
imul
sub
lret
lea
dec
sbb
sub
aaa
shll
lret
fbstp
or
daa
xlat
cli
cwtl
lret
into
ficomps
dec
push
xchg
xor
jl
cli
flds
jno
jecxz
lcall
subl
xchg
xchg
xlat
lahf
pop
fcoms
mov
movsl
aad
jg
mov
aad
popa
or
xchg
xchg
leave
add
xchg
push
dec
in
jnp
adcl
pop
mov
lret
mov
lods
pop
sbb
popa
fnstcw
das
mov
push
imul
pop
movsl
pop
xchg
lods
mov
movsl
sbb
inc
jge
jecxz
leave
lret
dec
mov
ja
data16
rorl
push
pushl
rolb
push
fcoml
and
movsl
inc
fcmovnbe
jno
lds
fbstp
stos
mov
jle
mov
jl
pop
insb
dec
mov
aad
push
mov
arpl
mov
pop
sub
mov
lret
fwait
mov
sbb
xlat
xchg
aaa
xchg
cmp
sub
mov
fimuls
jl
mov
and
imul
decl
nop
add
cmpsb
movb
cmpb
imul
sbb
ja
xchg
cmp
cmp
jmp
leave
dec
scas
sub
scas
sub
pop
mov
sbb
imul
dec
lea
lods
mov
popa
sub
jne
mov
dec
dec
jge
idivb
dec
hlt
loopne
push
int
adc
lds
scas
xchg
daa
mov
data16
pop
scas
orl
xor
movsl
xchg
stos
xor
push
addr16
jne
sbbb
and
mov
lods
adc
subb
adc
jge
pop
mov
pop
mov
mov
test
icebp
and
fstps
jnp
movsl
cltd
bound
mov
cmp
pushf
xor
lret
test
jp
orb
mov
xorl
mov
cli
shl
gs
scas
popf
andl
imul
pop
or
rcrb
mov
jg
sub
xchg
pop
mov
xchg
into
lds
popa
daa
xchg
int3
and
add
mov
sub
repnz
pop
fwait
pusha
mov
sbbl
aas
mov
pop
rorl
test
popa
pop
test
pop
pop
stos
cli
imul
pop
loope
das
mov
jge
arpl
and
mov
dec
ljmp
lea
and
decl
and
and
int
mov
test
popf
inc
lds
dec
popf
test
push
cmp
inc
push
mov
fdivp
les
aam
inc
bound
dec
xchg
pop
or
ja
push
pop
push
adc
jo
ret
and
mov
movsb
sub
cwtl
loopne
adc
xchg
xchg
flds
leave
dec
sub
xchg
sub
loopne
pop
cmp
enter
dec
leave
movsl
les
dec
xor
into
mov
outsl
loope
stos
dec
jg
in
push
int3
cmp
lods
xchg
xlat
dec
pop
fdivrs
dec
lcall
push
mov
lret
dec
lahf
and
je
int
xorb
add
pop
dec
das
mov
jno
add
movsb
mov
mov
iret
xchg
lahf
fs
xchg
cmpl
sbb
xlat
mov
pop
add
imul
fbld
fwait
or
js
adc
out
push
mov
pop
cltd
pushf
xor
inc
cmp
cmp
ror
and
sbb
pushf
push
imul
sbb
mov
jns
sub
xchg
test
sbb
fistpll
add
pop
push
sub
and
imul
popf
or
dec
pop
mov
outsb
lahf
add
or
add
cltd
dec
lcall
cmp
cmp
dec
pop
sub
lahf
pusha
add
fwait
mov
jno
scas
sbbl
xchg
push
cs
sbbl
sbb
movsl
outsb
xchg
les
inc
mov
gs
adc
sbb
jl
and
inc
pop
mov
dec
scas
sub
cli
mov
mull
jge
jno
mov
test
mov
lds
pop
cmp
icebp
cmp
mov
lahf
jmp
push
push
cmc
int
lahf
jp
rorl
iret
cli
jno
leave
jno
sbb
movsl
aaa
ret
xor
mov
stos
and
sti
ja
or
pop
incl
sub
sub
sahf
jecxz
and
dec
xchg
mov
sbb
push
stos
xchg
movsb
mov
in
test
jnp
xchg
movsb
or
mov
vpaddw
cld
aas
dec
imul
fnstenv
testl
leave
test
sub
fwait
ljmp
nop
mov
mov
sub
imul
leave
incl
movsl
add
loopne
roll
inc
mov
lds
lea
movsl
xor
mov
dec
jg
jp
pop
icebp
mov
mov
mov
mov
mov
push
fisttpl
js
aad
leave
sbb
mov
fcmovnb
and
inc
adc
in
push
test
lret
xchg
hlt
lret
ret
popa
push
pop
mov
lret
inc
mov
lret
push
das
ds
push
popa
xchg
dec
pop
imul
aaa
lret
inc
mov
mov
test
imul
sbb
sahf
push
dec
int3
cwtl
xchg
sbb
or
sub
xchg
or
sub
lds
aas
mov
pop
fwait
xchg
dec
imul
in
push
aaa
pusha
dec
pop
inc
cmpl
cmp
into
jle
pop
and
jmp
inc
pusha
mov
nop
aaa
shrl
mov
xor
adc
or
lcall
inc
loop
test
inc
push
scas
dec
test
ud1
add
adc
sub
popf
cmp
lahf
ds
scas
mov
cltd
in
icebp
int3
adc
dec
xchg
outsl
cli
js
mov
sub
mov
inc
mov
push
jno
movsl
scas
sarb
or
mov
dec
pop
mov
dec
inc
sub
dec
imul
push
dec
int3
call
sbb
fldt
sti
imul
sub
jle
daa
int3
mov
test
mov
rcl
mov
lret
or
mov
in
inc
pop
sub
xor
mov
cmp
dec
movsl
lods
and
imul
mov
push
inc
int3
jmp
lods
out
cmpsl
es
jns
sbb
movsl
or
leave
and
dec
cli
fstps
out
jne
aad
test
push
jmp
into
fcmovne
add
or
inc
or
add
mov
mov
jg
cwtl
push
fistpll
dec
cs
clc
lret
mov
filds
sbb
sub
mov
pop
out
pop
repz
out
fs
aad
cltd
dec
lods
fsubrp
pop
xorb
add
mov
notb
inc
subb
das
or
mov
popf
jns
mov
ja
lret
cld
inc
ljmp
int3
orb
cmpl
and
jg
mov
pop
sub
cmpsl
adc
xchg
sbb
dec
js
push
xchg
je
inc
movsl
push
cmpsl
je
cmp
fs
inc
js
or
shl
push
aaa
or
pop
sarl
or
mov
cmp
leave
gs
divl
stos
fsubl
xchg
cmp
mov
and
cs
dec
inc
insl
dec
into
lea
jne
lea
mov
movsl
loopne
imul
jnp
push
mov
cmp
or
cs
sti
sub
cltd
pop
add
pop
das
inc
test
dec
sub
scas
xchg
jle
mov
aad
mov
cmpsb
xor
xchg
mov
xchg
push
inc
mov
mov
loop
inc
shlb
mov
cltd
fiadds
js
enter
and
leave
adc
pop
mov
rorb
addl
scas
pop
and
les
lahf
push
popf
popa
xchg
and
or
int
leave
add
clc
and
das
ss
icebp
fs
sbbb
cli
xorb
js
dec
andl
pop
orl
outsl
stos
mov
add
xchg
mov
push
cmp
jmp
xchg
push
inc
in
xchg
inc
addr16
push
sub
pop
setb
mov
inc
xchg
add
incl
cld
pop
lcall
jg
push
ret
dec
pop
pop
gs
scas
fdivl
mov
cwtl
and
sahf
push
jg
sahf
jnp,pn
das
cmp
sahf
pop
pop
pop
cmp
test
mull
or
adc
and
ss
dec
push
leave
decl
movl
pop
sbb
icebp
adcb
xchg
cmp
pop
and
iret
jle
test
leave
movsl
pop
mov
mov
inc
pop
pop
sub
pop
inc
push
mov
adc
test
stc
popa
xchg
out
pop
dec
cmc
test
sbb
mov
dec
lret
mov
pop
cmpsl
shlb
inc
addl
push
jl
pusha
leave
gs
dec
xlat
inc
addb
mov
xchg
ss
loope
adc
dec
loope
jle
das
xchg
adc
stos
adc
inc
and
pop
cmpl
inc
arpl
test
and
sub
push
jnp
push
mov
jne
test
les
sub
jle
jge
pushf
sub
lods
les
aas
iret
jno
push
das
mov
and
push
test
lods
pop
movsb
daa
sub
ljmp
jmp
pop
leave
dec
test
nop
daa
cmp
add
les
sbb
add
enter
inc
aam
push
into
or
leave
jns
pop
into
mov
xor
mov
je
pop
out
lods
neg
cmp
ds
xchg
push
mov
pop
xor
and
sub
icebp
pop
add
xchg
dec
xchg
pop
pop
mov
iret
sahf
cmp
xlat
std
cli
enter
pop
mov
mov
adc
lcall
sbb
add
es
insl
pop
lahf
add
mov
mov
cmpsl
xor
push
gs
int3
adcb
add
jg
rorl
add
loopne
mov
lods
popf
popa
cmp
clc
jg
es
xchg
addl
movsb
aaa
in
mov
movq
or
or
scas
shl
lcall
pushf
fistps
mov
lret
lcall
popf
icebp
xchg
stc
je
cltd
jle
lods
jbe
iret
cmp
cmp
subl
push
pop
les
pcmpeqw
xchg
cmp
dec
inc
test
inc
and
pop
pop
add
mov
jns
cmc
ss
pop
and
mov
movsb
lds
stc
inc
cmpsb
sub
les
pop
dec
scas
lahf
mov
mov
repz
mov
or
add
jmp
cwtl
xchg
mov
xchg
out
div
adc
push
cmpsl
test
sub
push
jge
popf
test
or
cltd
mov
in
push
cs
ja
lcall
sbb
fnstenv
mov
mov
int3
cmp
sahf
test
xchg
outsl
into
andl
pop
clc
mov
mov
inc
lret
mov
mov
test
dec
dec
or
mov
inc
sub
or
out
scas
push
and
rolb
popf
push
orb
mov
aam
int3
cwtl
mov
cmpl
rclb
rcrl
xchg
push
dec
push
adcl
sbb
xor
lret
stos
sub
fisttpll
enter
add
add
cltd
fidivs
add
cli
lret
jle
cmpsl
inc
mov
or
pop
aam
cmc
mov
jbe
in
push
sub
cs
and
and
mov
les
mov
cmp
int3
icebp
ljmp
jo
jno
push
jecxz
in
inc
mov
sub
push
dec
rcrb
sub
sub
add
in
push
vpacksswb
cwtl
dec
mov
and
cltd
xor
cmpsl
mov
jmp
jge
lods
icebp
pop
sarl
inc
mov
push
xchg
aas
jne
mov
mov
movsl
cld
fildll
xchg
xchg
aaa
adc
dec
test
sbb
int3
push
fisubs
mov
mov
mov
xor
stos
mov
ljmp
mov
mov
int3
pop
ljmp
cmove
rorl
test
inc
clc
popa
lds
add
xchg
cmp
sti
xchg
jge
popf
pop
xchg
aas
inc
cmc
ficoms
dec
and
mov
and
adc
mov
push
and
or
sahf
mov
mov
pop
stos
adc
inc
stos
pop
dec
cmc
mov
adc
mov
or
out
les
sbb
jecxz
aaa
jmp
pop
lcall
jns
pop
jecxz
adc
or
stc
sub
cmp
or
cmp
hlt
and
test
fwait
inc
lahf
xor
or
je
mov
jne
or
pushf
xor
adcl
dec
mov
inc
cwtl
fisttpll
je
sbb
cltd
jle
out
orl
push
iret
ds
sbb
nop
cltd
or
sbb
adc
fnsave
mov
or
xchg
scas
cmp
ja
cltd
push
mov
popa
fstpt
jecxz
mov
leave
dec
cwtl
jecxz
les
or
mov
and
cli
in
imul
cmp
or
mov
cmp
repnz
or
sahf
jp
mov
sbb
mov
je
jg
xchg
arpl
fadd
gs
adc
mov
cmp
sahf
roll
notl
pop
adc
pop
push
shlb
and
mov
or
cmp
adc
movsb
cmp
xchg
clc
fs
jne
cs
adc
pusha
insl
pusha
push
cmpsl
scas
pop
xchg
cmp
xchg
sbb
loope
rorl
cld
and
mov
cmp
jmp
leave
xchg
sti
dec
mov
lret
add
xor
or
jle
stc
pop
push
femms
or
pop
fbld
mov
push
int3
rorl
jne
and
mov
test
dec
push
jp
int3
mov
jnp,pn
mov
and
mov
and
xchg
pop
mov
dec
or
lahf
sbb
mov
xor
dec
mov
push
mov
adcb
enter
lods
lahf
dec
inc
push
in
mov
mov
jp
test
test
xchg
pop
jg
xorl
mov
sub
inc
mov
inc
jg
mov
leave
test
add
adc
in
cltd
fsubl
push
aad
jmp
jae
cmp
sub
mov
jl
into
cmpsl
push
dec
add
stos
sbb
or
sub
fisttpll
imul
mov
mov
out
cli
mov
inc
cwtl
push
push
dec
test
adc
fimuls
hlt
ds
gs
cli
mov
sub
outsb
popf
int
add
add
xchg
mov
scas
test
arpl
cwtl
pop
enter
push
or
inc
lds
incl
jp
mov
push
std
js
sub
xchg
sbb
and
dec
jns
xchg
lahf
pop
imul
mov
cs
dec
push
addl
mov
cmp
inc
mov
sbb
mov
lea
test
faddl
add
add
cmpsb
imul
push
repz
popf
popf
je
fucomi
mov
mov
pop
mov
mov
adc
cmp
cmp
test
decl
insl
sub
test
xchg
jns
popf
pop
add
je
lcall
lcall
push
sub
sbb
mov
or
xchg
xor
cmc
push
pop
mov
xchg
test
jg
lret
xchg
and
mov
arpl
sub
je
jae
hlt
xchg
fdivrl
cmp
in
leave
cmpsb
rcrl
lcall
cwtl
insl
cli
ljmp
jg
mov
mov
inc
mov
movsb
inc
and
sbb
shll
xchg
xchg
cmc
mov
xlat
mov
sub
xor
jnp
fsubrs
xchg
pushf
mov
int3
push
mov
gs
loopne
inc
lds
xorb
inc
sbb
popf
das
push
cld
incl
sbb
mov
xchg
dec
fldenv
repz
jp
aad
test
adc
xchg
mov
std
pop
and
mov
cmc
enter
movsl
mov
popa
cmp
das
push
xchg
fisubs
mov
cltd
stc
movsl
push
sbb
mov
mull
inc
xlat
popf
push
cmp
dec
cltd
dec
mov
in
xor
notl
je
or
cmpsb
inc
push
or
inc
mov
mov
adc
fnstsw
xor
fs
bswap
mov
test
and
test
mov
inc
mov
inc
mov
xlat
pop
inc
popa
rorl
sahf
pop
add
loope
popf
or
imul
lods
pop
dec
pop
and
mov
xchg
scas
repz
push
lahf
loopne
clc
mov
xor
movsl
xchg
lret
dec
dec
dec
sbbb
jns
fildl
fld
cltd
test
inc
js
fwait
add
aaa
outsl
sbb
inc
mov
lcall
mov
cmp
and
add
lea
cmp
dec
adc
jbe
lds
pusha
xchg
dec
insl
dec
test
inc
mov
cmp
mov
rorl
je
pop
les
dec
dec
out
shrl
cli
sbb
sub
and
jae
test
pop
ds
adc
push
rorl
popf
xor
jge
jns
das
outsb
inc
filds
xor
sti
push
movsb
inc
popf
dec
cltd
push
push
mov
cmp
test
cwtl
std
arpl
popa
xor
inc
mov
mov
fisttps
xchg
cltd
je
pop
nop
filds
mov
xor
add
mov
or
push
and
pop
int3
cwtl
xchg
xchg
das
ficoml
imul
addb
cmc
jns
aas
xor
shll
cmc
movsl
dec
xor
add
mov
stos
popf
xor
push
xor
lcall
adc
lea
or
sahf
pop
mov
adc
imul
aad
fisttps
xor
jle
push
push
mov
push
cmp
push
pop
mov
xchg
daa
ja
sbb
add
repz
and
mov
int
int
or
cli
jp
pop
fbstp
push
arpl
sarl
cmpsl
scas
xor
popa
cmp
test
lret
push
cmp
or
hlt
xchg
adc
jne
sti
andl
ss
outsl
sahf
das
mov
shl
scas
inc
std
cli
or
cmp
jns
pop
xchg
icebp
dec
jno
push
or
add
sub
int3
divl
movb
decb
repz
sar
dec
dec
cmp
popf
or
lods
cli
leave
add
scas
cmp
pop
push
push
pop
xchg
xchg
and
loope
aaa
aad
mov
outsl
inc
xchg
adc
pop
or
pusha
inc
and
inc
dec
or
out
dec
add
mov
lea
adc
insl
pop
fldenv
inc
xchg
ds
sub
lahf
push
adc
jg
mov
inc
test
fistpll
cltd
xchg
jge
lcall
push
das
movsl
shll
aaa
cltd
cmp
cltd
enter
inc
dec
dec
movsl
inc
mov
loopne
mov
hlt
jp
aad
mov
jp
je
lahf
and
adc
lcall
stos
rcr
adc
mov
fildll
out
push
push
cli
push
fidivrl
inc
jnp
inc
lds
mov
arpl
aas
pop
mov
sbb
pop
scas
pushf
cmp
dec
subl
xchg
aaa
mov
pop
fidivs
push
in
out
test
test
cmpsl
sbb
ss
xchg
sub
leave
lds
ret
dec
ja
mov
pop
pop
lahf
sarl
xchg
mov
idivb
out
lds
and
cmp
cltd
xor
test
cmp
clc
mov
xchg
push
int3
lcall
mov
mov
addb
mov
and
mov
rcpps
jnp
ds
pusha
movsl
inc
gs
sar
dec
mov
inc
xchg
pop
pop
arpl
int
and
mov
pop
sub
cmp
cmp
pushf
cli
sub
ja
xchg
jg
stc
enter
cmp
lret
mov
cmp
xchg
dec
or
xchg
pop
mov
jl
push
lods
stc
sbbb
mov
cltd
popf
imul
fwait
test
and
push
mov
test
lds
sbb
mov
lret
decl
xlat
movsl
dec
add
inc
fldl
dec
mov
jl
pop
sbb
xorl
sti
or
clc
aad
mov
andl
and
xchg
or
inc
or
pop
pushf
arpl
lea
mov
jns
shll
sub
jg
cmc
leave
int
movsb
inc
jge
pop
mov
sbbl
dec
xchg
dec
mov
pop
mov
dec
call
scas
mov
pushl
xchg
hlt
mov
dec
stc
mov
inc
fistpl
xchg
inc
cmp
pushl
push
stos
clc
sub
dec
and
imull
aad
cmp
sbb
jle
aaa
inc
mov
movsb
sub
jmp
push
mov
les
andl
imul
sbb
and
inc
adc
and
js
add
cmp
and
dec
shll
sbb
scas
jl
popa
sub
dec
std
rcll
repz
lds
insl
test
xchg
and
pop
aad
jle
mov
js
xchg
or
fsubrl
mov
fstpt
dec
cmc
idivb
mov
mov
inc
dec
or
out
sahf
es
test
cmc
xchg
lods
cltd
and
pop
idivb
dec
pop
add
repz
lret
or
ds
or
mov
int3
icebp
cmpsl
push
stos
sbb
dec
fdivl
test
dec
leave
sbb
xchg
cmpsb
in
test
cmc
jg
fimuls
mov
adc
jecxz
fdivrs
push
mov
adc
iret
incl
cmpsb
jne
lahf
ja,pt
sbb
aaa
inc
mov
or
sub
mov
or
push
scas
inc
or
and
mov
push
xor
ja
mov
int
sub
mov
xchg
mov
mov
pop
hlt
and
and
sub
clc
in
dec
lcall
or
iret
inc
jbe
dec
xchg
mov
adcl
sub
pop
pop
test
jns
pusha
jp
stos
pop
les
jns
iret
dec
cltd
push
pop
scas
outsl
xor
lds
mov
pop
cs
fnstsw
dec
test
or
pop
lret
or
fadd
jge
mov
ret
add
mov
into
pop
add
jg
lds
sbb
or
insl
hlt
xchg
dec
jnp
or
fstpt
pop
insb
popf
test
xlat
push
inc
pusha
mov
jmp
mov
imul
mov
out
or
inc
imul
jge
call
fbstp
daa
pop
jno
mov
pop
and
sbb
scas
mov
cmc
xchg
fwait
enter
fmull
gs
push
scas
dec
dec
dec
adc
scas
cmpsl
mov
sub
test
in
pusha
pop
rcrl
push
icebp
and
and
adcb
or
aas
adc
push
adc
fs
jne
mov
dec
cmp
jnp
push
pop
and
cmp
push
test
add
ss
aas
gs
cmpsb
jb
xor
test
mov
mov
jne
popa
cmp
xchg
cltd
push
test
dec
mov
xchg
aad
insb
mov
roll
dec
pop
mov
data16
shl
sbb
cmp
addr16
pop
pop
jge
je
repnz
jns
sub
jmp
adc
leave
xchg
cmp
loopne
cmp
pop
cmp
mov
loop
push
cmp
sti
leave
inc
in
pop
pop
ret
sub
jp
and
mov
fadd
decl
dec
mov
inc
test
es
push
jns
sbb
cwtl
je
cmpsb
sti
paddw
ds
or
or
dec
sub
test
in
mov
aas
xchg
pop
add
adc
or
cli
imul
test
xchg
bound
dec
enter
xchg
cltd
fbld
movsl
adc
dec
add
outsl
popa
dec
adc
adc
aaa
adcl
jp
ds
sub
nop
rcrl
movsl
movsb
inc
inc
dec
hlt
adc
dec
les
mov
dec
jl
adc
dec
std
icebp
popa
inc
xchg
rcll
sahf
movsl
movsl
push
push
push
adc
mov
adc
sahf
aam
dec
pop
repz
test
cli
mov
inc
dec
push
fwait
arpl
mov
movsl
push
pop
pop
out
xor
shlb
add
add
xchg
sbb
icebp
mov
mov
roll
push
cmpsl
inc
mov
and
scas
or
mov
sarb
push
test
pop
cmp
add
les
cmp
daa
mov
imul
fnsave
xchg
ss
mov
andb
xchg
add
mov
clc
pop
or
mov
lret
mov
mov
ja
push
enter
and
leave
add
cmp
ja
jl
xor
movsb
mov
sub
mov
lret
dec
pop
sub
mov
dec
out
xchg
pop
mov
mov
cli
mov
and
mov
sub
jle
cwtl
xor
xchg
cmc
and
lahf
ja
xorl
pushl
into
jl
int
push
jmp
orb
mov
mov
aas
inc
popa
and
push
mov
dec
loop
std
ja
addb
test
pop
dec
test
sbb
iret
jns
adc
stc
movsb
enter
pop
mov
inc
sub
mov
enter
and
mov
and
hlt
stos
out
sahf
or
test
jbe
dec
dec
cmpsb
adc
jae
jecxz
push
jg
insl
xchg
mov
int3
je
push
arpl
mov
popf
cmp
or
ss
adc
jns
or
xor
bound
dec
mov
xchg
push
movsl
repz
mov
stc
xchg
nop
xchg
cltd
test
pushf
xchg
push
out
lret
dec
push
and
movsl
fwait
movsl
push
mov
stc
inc
std
xchg
dec
test
dec
ds
pop
sub
sbb
int
fucomip
cmp
call
rcl
das
xchg
mov
pop
into
mov
out
rol
jg
icebp
bound
push
sbb
dec
pop
cmpb
jecxz
or
inc
and
stos
push
int3
jbe
stos
sub
outsl
sub
dec
mov
push
cs
or
je
cwtl
inc
inc
cmp
clc
add
or
dec
or
fcompl
pop
sub
cli
xchg
jge
inc
mov
movsb
xchg
stc
je
mov
add
inc
sbb
push
lahf
ss
stc
sahf
movsb
mov
stos
sub
arpl
test
jae
cmp
movsl
or
dec
cltd
xchg
dec
xchg
mov
dec
jnp
jp
mov
lahf
pushf
or
popa
test
popa
and
jmp
mov
pushf
cmp
sub
ja
subb
xor
call
sti
or
pop
cmp
sub
push
ss
std
ja
mov
cltd
idivb
mov
scas
mov
or
dec
inc
inc
test
bound
adc
out
movsb
nop
inc
mov
lods
dec
addr16
jbe
push
add
stos
arpl
pushf
inc
test
push
jg
clc
in
pmuludq
in
inc
mov
fs
jnp
fwait
mov
iret
cmp
std
sbb
lea
notb
jmp
mov
push
dec
push
cmc
sbb
mov
mov
lds
mov
mov
std
lds
outsb
xor
pop
outsb
sbb
cltd
xchg
bound
movsb
inc
or
enter
pushf
aas
xchg
push
push
mov
xchg
and
cwtl
jne
scas
mov
testl
adc
push
sahf
popa
popl
dec
leave
add
xor
icebp
mov
out
sbb
mov
test
cmp
popf
dec
lea
cmp
inc
add
adc
test
cltd
pushf
fsubrl
xchg
inc
mov
push
testl
jp
les
lret
add
fmull
adc
aaa
or
lds
les
or
xlat
jg
fdivrl
mov
imul
sub
fsubl
call
cwtl
or
jns
push
movsb
incl
xor
dec
add
aaa
mov
or
or
popf
ss
or
movsb
xorl
jae
sub
les
cmp
imulb
jne
jbe
xchg
cmc
les
add
push
pop
ja
mov
cltd
mov
shll
lods
adc
test
scas
xchg
sbb
jae
xor
sti
inc
dec
push
mov
dec
adc
cmp
dec
and
lods
das
clc
push
cmp
in
push
testb
xchg
pop
add
je
push
push
addr16
sbb
pop
icebp
mov
cmp
movsl
imul
push
aad
xchg
cmp
pop
sbb
mov
clc
imul
and
inc
shrb
xchg
pop
aaa
sbb
lret
cmpl
cltd
jbe
popf
push
cltd
fidivrs
cmp
cmp
nop
adc
sarl
xchg
xlat
and
ret
cltd
jg
mov
xchg
xchg
sarb
pushf
pop
cmp
insb
repnz
jmp
push
in
jnp
cmp
cmp
out
into
jb
pop
pushf
mov
lods
dec
inc
xchg
push
lahf
push
ja
xchg
daa
push
cmpsl
mov
xchg
sub
or
pop
gs
ljmp
in
jmp
decb
ror
lret
or
cmp
iret
shl
and
dec
test
enter
call
movsl
fildl
and
dec
jmp
adc
hlt
xchg
push
hlt
popf
pusha
in
test
jl
add
pop
cmp
pop
adc
roll
mov
ret
lretw
scas
fcoml
dec
mov
shl
sbb
dec
xchg
xchg
fs
stos
cld
push
daa
push
mov
jno
int3
fdivp
xor
in
cmp
inc
fstps
pop
cmpl
fdiv
pusha
leave
out
aaa
mov
loop
aas
test
repnz
push
jnp
xchg
sub
icebp
pop
and
lods
mov
leave
xchg
sbb
out
out
pop
out
and
int3
pop
cmp
out
xchg
jle
shll
mov
test
mov
hlt
xchg
loopne
mov
lret
pop
pop
dec
flds
lods
les
aas
add
shrb
mov
fldt
mov
mov
mov
bswap
ret
test
int3
out
in
mov
jecxz
adc
sub
rcrl
scas
sub
mov
fbld
jle
xchg
adc
mov
lea
pop
lea
mov
pushf
cwtl
sti
sub
pop
aas
aas
xor
aaa
les
shll
lcall
dec
int3
mov
add
into
adcb
or
sahf
movsl
pop
shl
inc
scas
sbb
out
fdivp
xchg
sbb
pop
in
lahf
in
mov
insb
fistpll
out
out
sbbl
jo
insb
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
cmp
jae
dec
hlt
mov
mov
lds
xor
mov
shll
mov
xchg
inc
in
iret
movswl
mov
and
add
add
pop
add
add
add
mov
bswap
or
pop
mov
sti
pop
notl
dec
testl
cmp
aaa
divl
imull
neg
mov
adc
cs
nop
adcl
subl
jp
addl
mov
popf
mov
sbb
fidivrl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
iret
inc
fucom
mov
mov
push
mov
dec
popa
sub
adc
mov
lods
pop
int3
xchg
lods
xor
sbb
add
mov
icebp
xchg
ret
outsb
mov
mov
divb
in
mov
jmp
pop
outsl
add
fnstcw
mov
adc
mov
mov
testl
jg
jge
jnp
jns
ja
jne
jne
jne
jne
jne
lahf
les
insb
popa
arpl
pop
mov
movsb
int3
test
mov
sub
mov
scas
jg
pop
inc
movsl
out
in
mov
mov
hlt
mov
or
dec
add
pushl
test
cmp
jmp
dec
mov
push
mov
sub
lfs
leave
pop
inc
xlat
in
mov
hlt
in
stos
mov
inc
jmp
loope
fimull
insb
sbb
mov
dec
dec
jb
out
sub
and
mov
in
xlat
mov
movsl
sub
mov
pusha
adcl
jnp
imul
adc
mov
paddusw
pop
lds
popa
lcall
and
jne
jne
jne
jne
jne
stos
pop
shll
in
frstor
in
movsb
mov
in
jnp
insb
jmp
ret
aam
int
in
or
mov
stos
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jle
jge
jnp
xlat
lods
sarl
cmp
xor
aad
push
sbb
push
addr16
arpl
fistps
ja
dec
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
adc
jge
jnp
jns
ja
jne
jne
jne
jne
mov
icebp
cmp
imull
cmc
lahf
negl
testl
idivl
ja
jae
outsl
imull
mull
pop
notl
roll
inc
testl
aaa
divl
imull
imull
mull
popa
jno
sbb
add
add
cld
lock
out
jecxz
fbld
fistl
xlat
add
add
add
add
add
add
add
add
add
add
jnp
ja
jae
outsl
add
add
pop
add
push
add
dec
add
inc
add
aas
add
add
add
add
mov
mov
push
gs
mov
mov
pop
inc
push
xor
xor
sub
add
add
mov
aad
aas
jns
ja
stos
add
lock
in
movsb
fs
cmpsl
cli
popf
cli
xchg
cli
cli
xchg
jl
jb
dec
cli
and
adc
or
xchg
aad
mov
leave
jg
hlt
sbb
popf
notl
pop
das
pop
stos
jne
jne
jne
cmpsb
push
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
out
jecxz
fbstp
rcll
pop
ret
mov
aaa
testl
arpl
int
cmpsb
jnp
jns
ja
jne
jne
loopne
mov
movsl
xchg
movsb
push
and
and
sbb
and
fdivrs
cltd
popa
xchg
cmpsb
jge
stos
xchg
mov
mov
mov
mov
in
ret
fisubs
and
aam
sub
mov
stos
mull
inc
xchg
inc
insl
jne
jne
jne
jne
xlat
mov
inc
push
cmp
das
pusha
movsb
jg
and
and
and
xor
shl
ficoms
inc
iret
xor
and
add
add
xor
xor
jns
cli
or
jge
and
jne
outsb
ljmp
iret
or
mov
sarb
xor
mov
in
mov
dec
pop
push
mov
and
pusha
mov
inc
test
and
dec
mov
out
adc
pusha
mov
lods
inc
xchg
jl
imul
dec
push
pop
or
or
or
or
or
adc
shl
fsubl
aad
into
adc
or
icebp
mov
mov
lahf
adcl
push
jns
or
add
pop
sti
push
testl
or
xlat
xor
and
adc
push
clc
in
call
lods
jae
or
pop
int3
dec
lods
adc
shll
iret
sbb
adc
or
jle
push
icebp
mov
scas
push
stos
push
cmpsl
push
mov
xchg
and
and
and
and
and
and
sub
xor
imul
cli
arpl
pop
cli
pop
cli
push
cli
push
cli
dec
cli
dec
cli
inc
cli
inc
cli
aas
cli
cmp
aaa
cli
xor
das
cli
sub
daa
cli
and
pop
cli
sbb
pop
cli
adc
movswl
pop
testl
or
dec
fldt
or
or
or
or
or
or
or
or
or
or
or
push
cmpsl
and
lahf
add
add
sub
or
or
or
or
jg
jge
xlat
cmpb
xor
push
scas
movsl
push
sbb
fnstenv
insb
pushf
insb
cwtl
dec
lea
add
pop
add
dec
add
fwait
pop
jne
jne
jne
jne
jne
jne
jne
jne
jne
xlat
in
mov
push
iret
popa
leave
sub
jne
xchg
clc
idivl
fmulp
xlat
inc
scas
arpl
xchg
pusha
ljmp
and
jmp
fldenv
push
stos
inc
cmp
xchg
sti
add
clc
jb
out
sub
and
sbb
adc
or
add
cli
iret
cli
lret
cli
cli
ret
cli
mov
cli
mov
scas
cli
stos
cli
cmpsl
cli
mov
cli
xchg
cli
xchg
cli
cli
mov
add
divl
jae
outsl
popa
stc
jne
jne
test
in
push
and
and
and
sub
inc
aas
and
aaa
add
mov
sub
daa
cli
and
pop
cli
sbb
pop
xor
pushl
shr
jmp
dec
leave
aad
push
fcmovnbe
xlat
pusha
shrl
ret
or
or
or
or
imul
mov
lahf
add
cli
mov
pop
sbb
loopne
aam
enter
xor
jno
inc
add
add
add
add
adc
ljmp
mov
pop
test
dec
mov
mov
lea
movsb
pop
adc
adc
into
mov
negl
add
mov
popf
cli
nop
cli
mov
jge
mov
mov
mov
mov
mov
ljmp
mov
sub
out
mov
xchg
xchg
jae
outsl
or
add
pop
pop
mov
push
push
push
push
dec
pusha
dec
jno
inc
fwait
lods
jne
jne
jne
lcall
mov
push
mov
aad
pop
stos
sbb
jge
jo
lods
popa
adc
inc
idivl
imull
mov
inc
in
mov
xchg
aad
aad
popa
pop
jo
push
add
xchg
jne
jne
xlat
icebp
mov
sub
push
dec
aam
insb
mov
mov
int
das
jge
pop
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
mov
mov
stos
push
movsl
inc
xchg
xor
xchg
or
dec
or
mov
aaa
push
or
iret
mov
xchg
inc
jb
jecxz
ret
sub
pop
or
lock
mov
push
jp
jmp
xor
in
lock
dec
push
mov
mov
fidivs
les
xor
mov
mov
push
mov
jmp
out
loope
movsb
fldt
int3
or
push
ret
pop
fldenv
mov
mov
scas
jne
jne
jne
jne
cltd
xchg
in
pop
and
xor
add
lret
xor
movsb
ret
lock
rcl
outsl
call
mov
test
loopne
mov
and
ret
push
add
mov
out
jno
mov
test
sub
cmpb
data16
jne
jne
jne
jne
xlat
int
stos
push
sahf
ficoms
sub
movsl
mov
xchg
and
in
movsb
dec
fs
or
xor
cmpb
inc
test
xor
cmp
mov
rolb
lret
jmp
jns
pushl
mov
imul
lods
push
mov
inc
negl
add
insb
sti
pop
testl
imul
pop
and
push
enter
sbb
mov
cmp
push
add
inc
add
add
add
mov
call
fs
test
or
or
push
xor
adc
out
mov
jnp
jns
ja
adc
cmp
xor
pop
in
movsl
fwait
subl
jp
cmp
ror
enter
in
test
dec
leave
orb
gs
inc
inc
mov
sub
subb
cmp
ss
and
jmp
cltd
shl
icebp
les
mov
and
push
sub
and
push
jnp
jne
xlat
loope
aad
into
pusha
shlb
mov
lods
jnp
movsb
xchg
call
in
mov
iret
sbb
adc
out
mov
mov
iret
cltd
outsl
mull
push
pop
vcomiss
pop
push
push
push
cmp
mov
rclb
aad
push
scas
fisttpll
subl
mov
int3
pop
insb
inc
push
or
or
or
or
push
and
add
hlt
add
mov
mov
leave
movsw
jp
gs
test
jo
mov
popa
mov
jo
pop
add
mov
xorl
ljmp
pop
shlb
fwait
sub
imul
and
jne
jne
xchg
daa
ljmp
adc
psubd
cli
pop
cli
add
jg
div
fadd
mov
insb
jns
pop
sub
or
adc
mov
inc
mov
mov
int3
xlat
out
xchg
jae
arpl
adc
incl
xor
sub
and
clc
xor
mov
addr16
mov
push
jnp
jne
jne
cltd
inc
in
cmp
in
xor
and
and
and
and
and
sub
mov
or
pop
cli
add
cli
sti
clc
jb
out
sub
mov
aam
loope
push
in
cmp
aaa
testl
sub
popl
push
insl
outsl
mov
aam
push
pop
push
push
push
push
pusha
dec
jno
inc
mov
aas
cli
adc
add
cmp
in
int
shll
sbb
xchg
pop
andl
lock
mov
or
or
or
adc
sub
repnz
test
in
jbe
outsb
xchg
punpcklwd
pop
sbb
push
push
lret
push
and
and
and
and
sub
rcr
push
and
int
mov
pop
pop
int
js
xchg
xchg
pop
xor
mov
and
popa
les
icebp
mov
out
jecxz
fbstp
jne
test
in
lret
and
and
sub
and
sub
mov
cli
xchg
cli
cli
mov
xchg
cmpl
iret
aam
push
imul
push
pop
push
pop
push
push
push
push
push
dec
push
dec
push
inc
push
inc
push
aas
push
cmp
xor
sub
and
sbb
adc
or
or
ud0
div
xor
cmp
xchg
rcrl
fwait
dec
xlat
fdivl
stos
int3
iret
mov
seta
pop
in
test
ja
jae
subl
negl
lods
jne
test
xchg
stos
aas
cli
cmp
aaa
cli
xor
sub
daa
cli
and
sbb
pop
notl
testl
cmp
sti
xchg
negl
out
vandnps
aad
inc
pop
pop
pop
mov
adc
adc
and
sbb
mov
rdmsr
jmp
and
add
lcall
insb
sbb
or
or
add
jmp
out
jecxz
fildll
xlat
or
bswap
adc
test
std
icebp
cwtl
mov
stc
stos
sub
je
jne
jne
jne
jne
movsl
xchg
adc
ja
and
testl
mov
loop
jecxz
fucomi
repz
orb
aas
imul
mov
ret
loope
jmp
mov
adcb
stos
pop
cli
int3
popa
adc
test
je
int
pop
or
das
rcrb
pop
subps
mov
xor
inc
lcall
sub
ud2
inc
and
aas
xchg
aam
push
idivl
xlat
mov
out
jecxz
fistl
rcll
lret
push
push
ret
popa
mov
push
in
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
packsswb
sbb
push
das
movups
push
das
fnstcw
jge
jnp
jns
lcall
je
dec
mov
pop
xor
xlat
sub
push
and
in
notl
pop
outsb
rorl
push
sbb
testl
pop
negl
xchg
and
imul
sbb
pop
cmpsl
gs
xor
cmp
mov
mov
mov
int3
outsl
in
lods
addr16
maxps
xchg
scas
lods
lods
sub
daa
sti
jne
pop
adc
cli
adc
psubd
mov
outsl
add
mov
ja
out
jecxz
fbld
adc
test
push
in
pop
mov
or
or
bt
mov
mov
sbb
push
jg
jnp
jae
outsl
push
imul
push
pop
push
pop
push
push
push
push
pusha
dec
push
popf
inc
testl
aaa
push
xor
mov
int3
daa
in
sbb
jne
testl
idiv
div
cmp
jecxz
fcmovnu
lock
out
por
out
jecxz
stc
adc
adc
add
add
add
add
std
icebp
cmpsl
mov
jne
jne
jne
movsb
cmpsl
xor
lahf
add
aam
pop
mov
and
jnp
ja
sbb
add
pop
negl
notl
notl
testl
aam
push
call
idivl
xlat
ret
jmp
out
pandn
sbbl
shl
iret
test
pop
out
push
mov
int3
scas
mov
cmpsl
cli
mov
mov
mov
and
and
and
and
and
and
and
and
sub
jns
push
cltd
push
jo
dec
add
inc
add
pop
jnp
xor
sub
and
sbb
adc
or
add
pop
adc
xchg
sbb
punpckhdq
adc
push
das
inc
cmp
out
orl
in
mov
fsubl
in
stos
xchg
sub
sub
lcall
adc
pop
xor
das
or
movntps
jne
xor
xor
into
sub
stos
into
cmp
sub
adc
xchg
mov
mov
sarb
mov
dec
push
loopne
in
pop
xchg
inc
rcrl
ffreep
icebp
jg
out
out
adc
stos
sub
lahf
push
daa
pusha
outsl
test
arpl
mov
movsl
gs
push
mov
push
movsl
gs
sbb
stc
cwtl
mov
stc
and
testl
adc
mov
xchg
mov
mov
orb
mov
fwait
aas
dec
pusha
jne
cwtl
test
push
lahf
inc
and
sub
aaa
int
xchg
mov
insl
movsl
inc
xchg
cmc
jne
test
jns
xor
mov
ljmp
mov
leave
scas
mov
mov
mov
into
dec
xor
cli
and
sarb
sub
and
pusha
mov
inc
and
sbb
iret
jnp
jg
jge
jnp
cwtl
pop
jo
dec
add
inc
addl
sbb
out
add
ja
in
out
loope
fsubrs
push
int3
dec
in
pop
cmp
xor
bndldx
gs
idiv
idiv
cmp
mov
lahf
or
xchg
insl
in
fiaddl
mov
xchg
jl
jne
test
lds
popf
mov
mov
mov
cwtl
test
scas
xchg
js
jno
push
stos
pop
scas
inc
inc
mov
xor
or
add
ret
in
pmulhw
mov
or
andb
imull
test
mov
or
test
and
add
bound
cli
inc
cli
aas
shlb
les
pop
pop
movsb
inc
and
xor
push
popa
cli
jne
xlat
andl
jo
fs
mov
outsb
leave
inc
icebp
scas
or
call
push
jge
jbe
add
pop
and
test
cmp
sbb
sbb
and
xor
mov
fwait
inc
xchg
std
cmp
fs
mov
lahf
jmp
mov
jne
xchg
cmpsb
in
cwtl
sub
jl
jne
add
popa
xchg
xor
cmp
inc
jne
jne
xchg
add
push
hlt
add
jg
mov
aas
mov
test
in
ret
ljmp
sti
test
xchg
int
mov
xchg
jns
jno
fs
loope
movsb
mov
cmp
or
or
or
or
or
or
or
mov
mov
movsb
adc
or
in
cmp
xor
test
push
insb
xor
xor
cs
or
femms
adc
idiv
div
push
and
sahf
int
adc
mov
dec
iret
jne
push
dec
hlt
fidivrs
into
daa
mov
jmp
sahf
ret
xlat
pop
mov
jo
push
xor
dec
mov
lret
sbb
jg
rorl
cmc
ja
lods
mov
dec
lahf
jp
inc
pop
add
scas
ds
xor
sub
adc
out
mov
mov
pushf
lods
pop
jle
mov
mov
sbb
mull
notl
notl
testl
sub
leave
xor
cltd
mov
cli
jb
gs
pusha
jg
dec
mull
testl
mov
pusha
test
jmp
inc
push
inc
popf
xchg
inc
ljmp
in
shrb
sahf
popa
testl
inc
aas
bound
movaps
sti
lahf
xchg
adc
mov
dec
xchg
pop
lock
mov
pusha
inc
push
std
inc
lret
mov
cmp
jecxz
adc
imul
cwtl
test
jae
or
ret
jg
jge
fsubl
sub
rcrb
cmp
dec
pop
inc
add
xor
aam
pusha
push
movsb
add
and
and
sub
mov
daa
mov
pop
mov
fistl
inc
bndldx
xchg
mov
fxam
cmpb
sub
push
and
push
loope
aaa
cmp
das
movsb
xor
imulb
rcrl
lods
xor
adc
popa
inc
sub
ljmp
cmc
push
mov
cmp
mov
test
xor
jae
xor
test
xor
sub
sub
mov
movsl
ja
adc
negb
inc
xchg
adc
call
pop
jg
inc
xlat
lock
xchg
cmp
cmp
and
adc
sbb
adc
inc
into
stos
or
lods
mov
jne
gs
dec
aas
pushf
sub
push
cld
pop
out
mov
xchg
sbb
mov
leave
les
mov
add
mov
stos
insb
and
xor
and
jne
xchg
in
fbstp
les
scas
inc
aas
in
or
xlat
mov
push
or
icebp
ret
fidivs
sbb
std
cld
adc
outsb
mov
xchg
int3
shr
xchg
and
sbb
rolb
mov
sbb
mov
stos
and
mov
mov
inc
fmulp
popa
lods
inc
loope
xchg
stc
pop
push
jb
nop
mov
sub
mov
aas
dec
das
xor
in
cltd
stc
cltd
mov
cltd
enter
mov
and
pop
jle
clc
pop
popf
aas
stc
or
negl
mov
mov
mov
xor
xchg
pop
mov
xor
add
add
popf
pop
aam
push
cli
insb
lock
in
int3
call
jae
test
lods
jne
test
fwait
add
mov
lahf
aad
into
cmp
aaa
xchg
neg
mov
mov
jb
mov
push
adc
sarl
mov
push
pop
inc
popa
clc
push
gs
pop
or
fs
adc
mov
add
pop
push
jg
lcall
mov
adc
scas
mov
mov
lods
pusha
movsl
push
xchg
xchg
outsl
jne
and
sub
xlat
ret
mov
lods
push
mov
jo
ret
mov
push
cli
sub
movsl
rolb
sbb
adc
int3
or
and
in
movsb
cmc
push
das
dec
jge
jnp
cltd
mov
in
push
inc
fnsave
mov
and
dec
loope
pop
mov
int3
mov
ja
movsl
insl
rorl
sub
outsb
push
notl
jne
loope
mov
inc
or
aam
push
aas
pop
push
push
aad
push
es
adc
add
std
pop
push
in
out
mov
fimull
lds
int3
bound
xchg
cli
mov
add
pop
add
jge
inc
push
cmp
lahf
scas
mov
push
push
dec
pop
mov
jmp
pop
cmp
lcall
inc
mov
sub
adc
adc
test
jo
cld
in
outsl
jmp
loopne
lret
jno
mov
cmc
mov
into
xchg
outsb
pop
jb
xor
xor
repz
stc
loope
sti
jne
pop
mov
xchg
push
or
aam
int
clc
mov
in
sub
fisubrs
and
adc
decb
inc
cli
adc
mov
fldt
iret
and
aaa
and
mov
ret
push
popa
test
cmpsl
je
xor
in
int
and
ret
daa
xor
aaa
pop
inc
test
add
pop
das
xchg
pop
mov
mov
sbb
or
add
aad
insb
jae
lods
xor
dec
in
in
mov
dec
adc
cmpl
adc
mov
fbld
into
fwait
pop
imul
inc
imul
add
fldcw
push
fcmovne
fisttpll
gs
and
popa
into
fisubl
popa
adc
data16
pop
arpl
push
addr16
xchg
mov
popl
inc
gs
push
leave
les
test
roll
lret
imul
cmpl
sub
inc
sti
test
xor
sub
push
and
xchg
and
sbb
mov
or
into
inc
adc
xor
jnp
pop
outsl
sti
sbb
ljmp
ljmp
adc
psllw
sub
test
push
icebp
push
pop
daa
aam
outsl
jmp
fnstenv
jne
mov
mov
jle
mov
into
jb
xchg
jns
cmpsl
dec
and
and
jg
test
je
test
cmc
ljmp
mov
push
leave
mov
bound
lahf
sub
cmp
frstor
xor
xchg
stos
xlat
or
ljmp
test
pop
shl
fs
mov
cwtl
popf
hlt
iret
mov
inc
xor
jnp
loope
mov
loopne
fs
popa
jge
cltd
call
insb
cmp
push
or
jns
mov
pop
xchg
movsl
cmp
add
ljmp
push
jnp
pop
inc
add
xor
and
mov
pushf
in
dec
stos
adc
and
fisttpll
stos
push
xor
divb
mov
sub
sub
aaa
out
es
sbb
pop
or
pop
mov
popa
sbb
jle
xchg
gs
pop
jmp
sbb
testl
jg
xchg
cmpsl
sub
pop
cmc
jnp
in
mov
mov
mov
lahf
outsb
xor
in
imul
fwait
sub
dec
idivl
push
outsl
sub
lds
in
mov
movsl
int
shll
pusha
mov
xor
add
repz
push
repnz
jo
fldl
xchg
out
and
mov
and
sub
xor
dec
jl
out
or
psrld
sbb
push
xor
pusha
push
sbb
jo
lcall
repnz
mov
pop
or
cmpsl
int
iret
dec
loopne
out
idivl
push
ljmp
leave
mov
cmp
inc
loope
add
mov
movq
mov
out
jne
loopne
xor
leave
ret
mov
insl
out
rolb
ret
cmp
push
xor
sub
cmp
in
mov
test
sub
inc
mov
fidivrl
or
cltd
mov
inc
mov
std
dec
mov
push
pop
xor
and
cmc
or
mov
jp
sbb
mov
dec
add
cltd
pushf
ss
sub
cltd
cwtl
fisttpll
jmp
inc
cs
adc
fistpl
cmp
inc
fstpl
adc
jecxz
mov
dec
cmpl
ss
frstor
ud2
xor
cmp
jne
adc
test
xlat
adc
mov
jne
jge
insb
ljmp
or
jno
repnz
out
add
sub
fmull
xor
ja
loopne
iret
aad
push
aam
push
mov
lods
push
mov
test
jp
out
cmp
lfs
mov
mov
mov
into
out
in
loopne
xchg
mov
or
push
outsb
push
dec
cmp
cs
dec
stc
jns
and
lods
cltd
cmpsb
in
cwtl
fs
sub
push
outsb
push
xchg
pusha
ss
jns
mov
mov
test
cwtl
push
jmp
adc
jnp
sti
aad
or
mov
mov
shrl
xor
leave
xor
cmpb
push
test
ja
loopne
testl
jno
jnp
popa
mov
jne
stos
adc
push
jns
sub
pop
mov
mov
into
jns
xchg
into
cltd
jns
sbb
inc
mov
inc
xor
popa
leave
xor
jle
leave
xchg
dec
sub
iret
daa
push
adc
add
mov
test
vminpd
loope
xor
mov
movsb
or
jno
jle
dec
movsl
fnstenv
repz
sbb
cmpsl
into
mov
sbb
out
adc
push
pop
out
add
inc
dec
jnp
movsl
and
popf
out
cmpsb
out
sqrtps
in
add
sbb
adc
jne,pn
pop
ja
push
jns
sub
jge
mov
dec
cs
sbb
imul
out
xlat
pop
repnz
movb
jne
jne
jne
xchg
jle
int3
jbe
dec
outsb
cli
cmp
cmp
add
ffree
aam
dec
mov
jle
in
inc
or
or
push
enter
mov
xor
pop
inc
pop
mov
fadds
mov
mov
mov
dec
icebp
inc
and
cmpsb
pop
cmc
stos
or
adc
xchg
js
and
jnp
cltd
fbstp
mov
gs
outsl
fdivrl
loope
bound
mov
adc
jae
in
inc
xor
and
jecxz
sbb
adc
ljmp
cmp
jecxz
int3
movsb
sbb
inc
mov
iret
sub
scas
and
in
popa
lahf
cmc
ret
faddl
fs
cmp
loope
add
or
jno
and
ljmp
jo
test
cmc
pop
aam
fsts
testl
mov
les
imul
out
add
add
sbb
or
arpl
mov
xor
in
outsl
push
popa
xchg
and
or
xlat
repnz
mov
xor
dec
sbb
or
or
int3
mov
push
imull
push
and
icebp
mov
test
pop
aad
pop
jge
icebp
fs
sub
pop
sti
mov
mov
popa
orl
jno
out
and
mov
mov
int3
mov
add
mov
pusha
call
push
leave
outsl
imul
stos
pushf
out
mov
add
movsb
or
push
outsb
lea
pop
and
out
sub
add
shll
sarl
out
cmp
outsl
aam
sub
mov
pop
jno
dec
and
adc
push
mov
in
xor
mov
push
push
sub
pinsrw
and
sub
outsb
into
lret
xor
dec
xchg
enter
mov
sbb
mov
jb
shr
popa
mov
jb
mov
adc
pusha
icebp
fcmovnu
mov
and
fnstsw
jns
xchg
jecxz
push
xor
push
xor
or
add
cmc
adc
sub
subl
insb
in
ret
or
ficompl
cmp
add
sub
popf
jns
in
aam
sarl
gs
lock
adc
cltd
fucomp
adc
pop
inc
push
in
sbb
int3
shrl
decl
sub
jmp
adc
ret
mov
dec
in
fnstsw
cvtps2pi
sbb
xchg
test
fnstcw
mov
mov
cmc
ljmp
ljmp
andl
movsl
scas
es
add
pop
jecxz
ret
loope
or
xlat
aad
pusha
lods
jno
pushf
adc
in
add
fwait
and
into
std
jo
rol
into
icebp
jle
popa
insl
std
jmp
movsl
mov
xor
aad
lret
push
jnp
pop
stos
jp
xchg
rcll
xor
scas
adc
sti
arpl
inc
mov
int
pop
pop
mov
out
mov
xchg
jnp
imul
push
xor
mov
bound
jno
cwtl
adc
cmp
xor
sbb
adc
in
mov
mov
adc
mov
int3
jno
inc
fs
int
or
sub
test
addr16
fstpt
test
xor
addl
lock
jno
mov
jnp
fnsave
jbe
fcomi
push
scas
iret
aam
out
int3
enter
xor
jnp
push
push
loopne
js
lea
cmpsl
mov
fists
rorb
mov
mov
fwait
lea
test
in
or
pop
stos
in
ret
fdivr
stc
int3
jns
arpl
push
mov
in
jp
outsb
mov
ficoms
test
jp
in
mov
cmp
pop
mov
pop
inc
inc
xchg
dec
cmp
mov
sarb
push
das
push
and
int3
mov
mov
sub
add
cltd
mov
xchg
das
cmp
int
inc
mov
into
inc
out
imul
adc
xchg
pop
mov
cmp
icebp
jne
xlat
lods
shll
xchg
mov
xchg
js
push
cld
push
lret
test
jno
outsl
pushf
out
cmp
stos
mov
inc
popa
xor
into
mov
mov
les
xchg
adc
testl
push
test
or
push
jae
icebp
ja
xchg
ret
bound
pop
test
loope
inc
xor
inc
mov
pop
xlat
popf
push
jl
or
aad
mov
je
fidivs
jno
xchg
jmp
xor
inc
add
xlat
lock
arpl
call
jo
mov
pusha
sub
ja
sub
int
fnstcw
jbe
sti
adc
and
lahf
ret
xchg
ret
stos
xor
jne
ror
mov
inc
fcomi
mov
fnstcw
push
imul
test
enter
adc
test
arpl
inc
gs
enter
sub
test
and
aaa
dec
mull
lods
cld
push
hlt
sarl
jp
aad
loope
jno
dec
sti
or
das
inc
test
mov
in
pop
call
inc
rcll
pop
mov
mov
das
mov
mov
mov
fwait
jns
push
sti
mov
psubsw
push
jg
xchg
in
test
cwtl
xor
imul
push
or
mov
or
add
test
push
jae
cmpb
mov
mov
shrl
repnz
lret
mov
adc
mov
bound
enter
or
cmp
mov
les
dec
fnstsw
mov
fwait
inc
ja
loope
mov
jne
dec
and
lock
mov
pop
xchg
scas
mov
insb
sbb
mov
inc
sub
mov
inc
jno
lods
or
jo
add
add
push
outsl
icebp
imul
mov
and
mov
inc
pop
xchg
sti
xor
fcompl
xor
pop
pusha
inc
ds
xchg
in
inc
shl
cmp
scas
mov
popa
ja
mov
mov
cli
popa
shl
cmp
cmpsb
mov
loopne
dec
push
int3
mov
das
mov
shrb
test
andl
mov
adc
dec
imul
pop
ret
test
push
rolb
call
mov
cmp
dec
ja
rcll
adcb
dec
mov
xor
adc
mov
into
sbb
test
shll
mov
fbld
stos
in
and
lea
fwait
jnp
sbb
mov
in
mov
sub
jg
jge
jnp
jns
ja
test
xor
xchg
xor
xor
lret
loope
adc
testl
or
push
fbld
iret
aas
lahf
mov
dec
add
xor
dec
mov
stos
inc
fimull
ja
popf
push
adc
add
inc
lds
fdivr
test
in
jns
lods
push
dec
add
das
loopne
xchg
popa
lea
in
jg
popa
sti
loope
mov
cmpsb
in
int3
lock
cmp
cwtl
sti
mov
loope
aaa
lea
xor
or
sti
pop
je
cmc
jo
cli
loope
loope
stos
insl
dec
and
cmpsb
cmp
mov
into
cli
jp
mov
fcompl
sbb
shll
sarb
mov
push
xor
jo
mov
clc
push
jmp
pop
pop
sbbl
pushl
sbb
stc
fsubrl
out
mov
or
jnp
loopne
mov
push
jge
xor
jp
xor
xchg
xchg
ds
sub
leave
in
insl
pop
test
xchg
outsl
mov
daa
push
add
les
xor
mov
push
xchg
xor
pop
inc
mov
call
lea
in
push
aad
outsl
add
lds
mov
mov
mov
mov
icebp
mov
dec
sti
inc
mov
ds
cmp
pop
jge
inc
arpl
inc
jmp
fwait
shr
xlat
mov
movsb
push
sahf
out
rol
lret
jne
adc
rorl
add
mov
movsb
xchg
or
fs
and
sub
imul
cmp
movsb
sub
add
mov
pop
ret
sbb
cmp
lret
xchg
mov
sub
ss
lods
cmp
ds
sahf
inc
cmpb
lret
sahf
inc
cmpsb
inc
mov
mov
and
jne
xor
movsb
cmp
sub
xchg
push
lods
bound
pop
sub
testl
pop
into
cmp
arpl
xchg
jo,pn
es
add
hlt
mov
jg,pn
leave
inc
into
pop
pushl
int3
test
mov
sbb
int3
out
dec
movsl
and
fbstp
inc
fstl
mov
adcl
leave
jne
inc
add
cmp
stos
dec
in
mov
int
or
and
out
aam
lock
mov
lods
lret
out
mov
stos
mov
pusha
mov
test
mov
xor
adcl
inc
je
arpl
in
test
sti
fsts
mov
xor
test
lock
bnd
sub
jns
stc
fucomp
push
inc
cmpsb
cmp
fildl
adc
pop
mov
add
in
arpl
in
pop
push
xchg
out
push
jo
shlb
push
mov
scas
jl
xchg
add
cmp
xchg
mov
jp
js
fwait
add
movsb
in
stc
jno
mov
adc
xor
pop
push
mov
in
rol
repnz
scas
lods
movsb
xchg
add
push
adc
aad
loope
cmp
frstor
pop
jno
into
xchg
popa
loope
inc
push
sarl
into
mov
and
pop
and
fcompl
movsl
dec
fstpt
outsl
clc
push
ljmp
pop
and
movsb
cmp
sub
aaa
cltd
int3
inc
rcrl
add
stos
ret
cmc
mov
pop
mov
mov
push
sub
mov
push
outsb
push
push
loopne
jno
int
xchg
bound
add
dec
mov
mov
dec
xor
je
inc
add
ds
pop
nop
push
xchg
loopne
jno
loopne
xchg
out
jecxz
mov
xor
faddp
ret
adc
shll
fwait
into
jo
lahf
pop
mov
push
jg
aad
fsubrl
idivb
xlat
fisubl
adc
out
jmp
and
push
adc
adc
loope
scas
scas
cmp
cmpsl
mov
xchg
mov
stc
aad
mov
sub
stos
or
out
adc
cmp
cli
loope
and
sti
fwait
insb
arpl
pop
into
mov
and
rcl
test
in
mov
mov
inc
mov
inc
pop
push
xchg
mov
fdiv
test
lea
add
mov
outsb
mov
pop
add
icebp
imul
outsl
out
dec
lret
stos
sub
pop
inc
aaa
leave
out
ljmp
jae
add
push
cmp
movb
mov
lret
inc
sub
jmp
ljmp
in
in
mov
pop
pusha
pop
adc
sub
outsb
xchg
mov
call
cmc
xor
rol
call
cwtl
pop
inc
jae
inc
dec
push
addl
push
into
leave
pop
pop
fdivrl
mov
xchg
push
mov
insb
hlt
jb
ret
cmp
cli
mov
in
sbb
gs
pop
and
cmp
mov
mov
in
insl
sub
adc
loope,pn
outsb
mov
mull
pop
mov
push
adc
in
les
xchg
in
outsl
mov
sar
jecxz
mov
push
loopne
jno
dec
andl
insb
pop
adc
in
xor
iret
xorl
imul
push
jb
mov
mov
sub
in
xchg
ljmp
inc
lahf
xchg
pop
insb
aaa
sub
mov
in
jp
mov
pop
iret
inc
divl
adc
ja
sub
xor
mov
bound
jno
sub
loopne
cli
ret
scas
sub
and
push
adc
mov
adc
lahf
mov
fistpll
loopne
outsl
jge
shrl
dec
arpl
mov
mov
iret
aas
iret
mov
mov
adc
fwait
push
dec
add
je
cmp
das
addr16
inc
pop
cwtl
in
adc
push
push
dec
out
xchg
mov
inc
jmp
aas
movsb
mov
xchg
stc
pop
dec
movsl
fisttpl
adc
push
leave
inc
sti
mull
mov
call
xor
ret
push
or
add
outsb
jns
push
pop
ret
or
insb
mov
inc
imul
rcr
jno
jno
xor
aam
aam
push
cmp
push
pop
imul
test
cwtl
push
pop
inc
sbb
ss
adc
adc
and
call
lret
icebp
mov
add
xor
push
incl
adc
sub
mov
xchg
cli
sti
cmpl
ret
sbb
sub
in
enter
xchg
jns
filds
inc
and
pop
out
dec
xlat
cmc
call
lret
icebp
push
inc
scas
pop
ror
ret
leave
mov
faddl
fdivs
mov
testb
jno
inc
mov
xlat
in
mov
lret
adc
sbb
xor
insb
xor
and
jmp
mov
inc
xor
aam
gs
inc
ljmp
pop
or
pop
jge
or
adc
push
mov
aam
ret
stos
movsb
sub
out
dec
mov
roll
push
xchg
jae
incb
pop
daa
loopne
inc
shll
sub
jmp
shlb
and
mov
ja
leave
movsl
xchg
leave
outsl
sbb
cmpsl
mov
ljmp
mov
sbb
jg
adc
test
mov
mov
and
shll
inc
in
xor
push
loope
adc
inc
lret
cmp
andb
jp
test
push
cmp
mov
push
cltd
xor
or
gs
mov
out
and
mov
shll
sbb
imul
pop
scas
in
ja
jne
mov
push
cmp
or
ret
mov
mov
pop
inc
push
xor
add
loopne
inc
pop
test
mov
popa
jae
xchg
mov
mov
push
in
sub
sub
call
push
mov
test
mov
loopne
add
push
adc
xor
pop
xchg
fwait
gs
jns
test
popa
mov
test
imul
adc
push
cmpsl
fistpll
sub
xchg
stc
cmpl
xchg
dec
dec
or
outsb
movsl
xchg
dec
jmp
pop
icebp
out
mov
aaa
shl
outsl
negl
into
mov
aam
cli
int
inc
push
cmp
xor
pop
mov
fwait
adc
ja
stos
sbb
mov
sbb
mov
pop
sub
sbb
fsubrl
mov
gs
mov
iret
sub
test
sbb
lea
leave
mov
out
xchg
das
scas
stos
dec
in
shrl
xor
repz
jne
movsb
mov
mov
add
das
adc
call
mov
jb
cmpsl
push
cmp
jno
adc
mov
pop
push
bound
or
cld
mov
int3
icebp
xchg
add
mov
dec
add
popa
or
in
popf
imul
pusha
push
pop
inc
ss
add
mov
or
dec
popa
dec
cmovns
dec
int3
sbb
push
add
push
test
test
adc
lea
fsubrl
mov
out
mov
push
stc
fsubr
xor
lds
daa
pop
adc
mov
daa
or
out
push
mov
pusha
cmp
bound
pop
js
loope
and
xor
mov
popa
jne
test
pop
add
lret
xor
out
cmp
pop
loop
lcall
shrl
cmc
cltd
xor
mov
jb
mov
mov
mov
pop
adc
xor
or
push
loop
int3
cmp
mov
loop
pop
jo
inc
xor
arpl
jge
stos
js
les
mov
lret
jns
fcoml
xchg
call
or
jbe
rcrl
test
dec
std
mov
mov
mov
pop
xor
dec
leave
insb
cltd
lock
popa
xchg
orl
pop
nop
das
mov
ret
pop
lret
in
add
clc
call
mov
pop
push
in
icebp
and
sbb
jno
in
xchg
or
xorl
xchg
adc
fucomp
push
adc
sti
test
pop
outsb
xchg
aaa
mov
outsl
cmp
or
jmp
mov
fnstcw
test
das
into
mov
stc
aad
popa
or
inc
jg
outsb
xor
mov
fwait
xor
les
mov
int
adc
mov
sarb
and
lahf
out
sub
pop
push
popa
inc
or
or
jnp
int
push
push
stos
loope
jo
xchg
push
leave
jne
xchg
shlb
loope
jg
rcll
test
sub
sub
ffree
out
add
push
adc
mov
pop
enter
mov
sbb
push
into
cltd
adc
ljmp
cltd
int3
pop
xchg
jg
add
xor
jno
inc
in
xchg
sub
jo
popf
push
jns
or
cltd
dec
icebp
pop
in
shll
fnstsw
mov
sub
pop
popa
fldl
cwtl
adc
or
int3
rcrl
out
ret
pop
outsb
fwait
mov
add
sub
les
jb
int
sub
push
mov
inc
or
mov
aas
pop
mov
mov
pop
add
sub
cli
push
mov
inc
push
je
das
imul
adc
add
push
out
mov
cmovne
ja
lcall
lcall
outsl
jne
or
cmc
orb
int3
imull
mov
mov
mov
rcl
outsl
push
imul
inc
loope
shlb
adc
add
pop
xor
mov
mov
aad
outsl
add
push
adc
shrl
cmc
jnp
ja
xchg
cmpsb
sub
jp
fucom
imul
sbb
sub
adc
fnstsw
aad
loope
add
mov
imul
test
test
sub
std
pop
fcoml
fcoms
gs
enter
mov
xor
pop
push
in
lods
push
outsl
inc
dec
pop
int
jecxz
lods
mov
push
inc
cs
mov
loopne
xorl
cmc
jne
ficomps
xchg
dec
ljmp
adc
cmp
ret
or
jmp
and
out
xlat
fnstenv
or
adc
jb
push
mov
loope
mov
inc
sub
xor
dec
fstps
dec
mov
andl
fucom
cmpsl
mov
bound
ljmp
jo
es
mov
push
movsb
data16
push
push
sahf
bound
pop
mov
sub
push
jl
popa
movsl
divb
inc
inc
pop
sub
iret
aaa
aas
into
cmpsl
fwait
sub
cltd
dec
loope
xchg
inc
push
ret
ds
dec
loopne
adc
out
rcr
popa
les
xor
xchg
or
aam
popa
xor
push
dec
fsubl
out
pop
and
ja
add
stc
inc
and
mov
in
xlat
jns
ja
jne
jne
movsb
int
popa
cltd
ja
shrl
movsb
mov
sbb
dec
icebp
jae
or
jnp
and
ret
add
inc
out
mov
call
jg
loope
mov
jg
pop
sub
loopne
icebp
les
sbb
or
fidivrs
int3
adc
pop
das
out
mov
mov
repz
pop
jno
movb
jg
imul
dec
int3
pop
out
popf
cs
mov
or
test
mov
cmp
sti
loope
inc
dec
pop
addps
aad
loop
mov
xorl
push
popa
aas
out
out
lods
test
popf
and
int
insl
frstor
int3
adc
sub
rcrb
adc
sub
push
and
push
mov
jl
daa
pop
add
sbb
xchg
out
pop
mov
push
ja
out
das
ret
jb
xor
xor
icebp
rcr
mov
mov
add
negl
out
lods
mov
jge
sar
pop
sub
in
pop
lods
rclb
xor
mov
add
dec
inc
jecxz
pop
or
pop
xor
jo
pop
and
je
lahf
mov
adc
iret
test
pop
add
xor
stos
dec
sub
or
pop
icebp
pop
and
cmp
imul
pop
lcall
jge
jecxz
iret
fs
xchg
popf
xchg
mov
je
lds
mov
or
mov
adc
stos
pop
mov
shll
mov
push
leave
mov
xchg
fisttpll
jp
loope
push
mov
pop
repnz
pop
mov
lea
subl
int
scas
call
mov
into
mov
and
add
into
inc
sbb
loop
iret
out
pusha
mov
in
std
outsl
mov
imul
inc
arpl
lret
stos
xchg
sbb
push
add
cli
cld
mov
pop
push
sub
bnd
in
paddusw
rolb
les
not
lods
fstpl
jbe
sub
pop
xchg
adc
aas
inc
add
cli
add
les
jae
jle
jmp
shlb
scas
ss
mov
in
shll
cmp
mov
outsb
add
pop
sub
icebp
adc
pop
xchg
cmp
popa
cmc
das
fstpt
or
icebp
sbb
lret
call
ja
movsl
mov
jno
add
xchg
loope
jg
test
sbb
pop
pop
mov
xor
adc
movsl
jmp
test
push
pop
sbb
fstps
ret
xchg
rol
mov
fnstenv
cmp
lret
xchg
mov
sti
sub
adc
and
in
mov
int
sub
gs
push
xchg
dec
scas
test
xchg
sbb
inc
jno
xchg
ja
fsubrl
xchg
lock
nop
ja
aad
popa
inc
mov
jmp
movsb
jbe
pop
adc
loope
pop
fwait
xchg
xor
dec
iret
daa
das
add
call
in
scas
lahf
out
sub
ljmp
xor
push
cmp
jnp
mov
sbb
mov
outsb
into
data16
dec
add
cli
mov
insb
jns
outsl
or
mov
cs
add
or
pop
mov
fstl
bound
stc
fwait
xlat
pop
test
jg
push
mov
ficoml
jns
xchg
jp
in
imul
cmpl
cwtl
jg
sbb
outsb
pop
inc
pusha
sbb
adc
sub
cltd
les
xor
push
out
das
push
loopne
jno
ja
sub
test
sub
mov
test
mov
mov
out
or
inc
adc
mov
not
test
imul
outsl
pop
ret
jmp
scas
mov
jns
cmp
movsl
out
xor
pop
sbb
mov
mul
testl
mov
cli
add
mov
push
call
addb
pop
xchg
dec
jno
test
addr16
mov
mov
mov
jl
movsl
je
arpl
stc
xor
adc
jle
bound
lahf
push
pusha
cmp
fistps
lahf
pop
mov
cmp
fnstsw
mov
dec
xchg
icebp
or
mov
xor
mov
mov
pop
movsb
icebp
stos
push
in
shll
dec
cltd
pop
in
rcpps
dec
xor
rorl
daa
call
adc
iret
in
pop
insb
adc
jge
ljmp
fs
xchg
sub
addl
jo
mov
je
dec
jne
sti
dec
inc
fistpl
arpl
outsl
movsl
xor
lea
and
in
movsb
fldt
fwait
out
movsb
iret
adc
ret
idivl
pop
aaa
aam
push
stos
push
cmpsl
pop
mov
fwait
xchg
cli
mov
xorl
imull
jns
arpl
inc
pop
sub
pop
inc
loope
or
xor
pop
cli
sbb
pop
loope
xor
add
lcall
stos
sub
lods
std
push
pop
aad
xlat
cltd
jne
std
push
pop
fisttpl
dec
cmp
push
and
dec
add
dec
cmp
adc
adc
sub
jp
cli
mov
xchg
cld
pop
aas
add
adc
in
aaa
dec
movsl
adc
incl
pop
and
sbb
add
sbb
and
test
test
idiv
push
mov
arpl
pop
test
adc
inc
xchg
push
jns
cltd
and
jge
cmp
test
loope
lds
inc
jne
fbstp
loope
imul
and
mov
test
add
cmp
lahf
or
sbb
mov
sub
sub
push
mov
cmp
je
addr16
cmp
ds
jmp
push
add
push
in
xlat
daa
shrb
sub
or
cmp
xor
sub
xchg
adc
call
mov
outsb
mov
push
push
popa
jno
and
jne
pop
out
mov
push
and
cmp
mov
sbb
movb
ljmp
sahf
out
popf
jge
in
jno
push
sub
gs
mov
or
ss
mov
mov
icebp
out
test
pop
jmp
daa
loop
push
push
mov
or
sbb
outsb
inc
xorl
inc
bound
shll
and
mov
push
sbb
or
movb
pop
pop
mov
ds
jge
jmp
and
dec
dec
inc
xchg
cmp
jo
loope
shrb
imul
sbb
or
bound
cwtl
and
push
ja
push
out
jmp
add
out
xorl
movsl
mov
push
jno
dec
sub
xchg
push
lds
mov
xor
mov
pop
movsl
jae
inc
in
mov
fistpl
jnp
loopne
mov
push
mov
xor
jg
loope
adc
insb
divl
mov
mov
sub
and
lahf
lret
popa
aas
test
ror
adc
mov
aad
mov
sub
movsl
adc
mov
mov
mov
mov
jne
std
es
nop
inc
jno
cmpsl
out
lock
pop
dec
movsl
pop
or
dec
sub
or
inc
sbb
test
dec
cltd
jo
pusha
mov
enter
cmp
mov
dec
mov
sbb
or
stc
pop
sbb
mov
bnd
inc
mov
push
push
sti
sbb
xlat
icebp
ret
mov
pusha
inc
fwait
cs
insb
inc
call
test
sbb
stos
lahf
mov
xchg
add
mov
into
dec
and
pop
sbb
addr16
lahf
shrl
outsb
mov
dec
insb
negl
outsb
jns
and
inc
or
faddp
adc
push
xor
xchg
dec
cmc
ret
scas
popa
popa
and
das
es
into
out
xor
and
adc
push
sub
iret
jb
jmp
cli
xor
pop
cmc
gs
sub
sbbl
into
and
cmovg
enter
push
inc
fwait
sub
or
popf
mov
jnp
fwait
enter
jge
loope
movsl
loope
push
mov
mov
inc
test
and
mov
or
fsubl
sub
add
jge
fstpl
push
fwait
lods
cmp
mov
lret
jns
sbb
int
sti
and
lcall
xor
jge
aam
pop
sub
jmp
pop
outsl
insl
pushf
pop
ror
int
stos
aas
aaa
mov
int3
scas
insb
xchg
jl
insb
sub
adc
loope
imul
push
loope
fildll
js
jmp
push
fldl2e
ret
mov
add
mov
lret
inc
jle
mov
sbb
mov
imul
mov
call
fstpt
out
mov
dec
mov
loopne
add
or
cmp
aas
adc
pop
in
iret
movsb
test
xchg
pop
sbb
outsb
lods
push
sbb
adc
mov
inc
scas
jno
xor
pop
es
gs
pushl
lds
scas
xchg
ljmp
xor
fs
sub
out
mov
cmp
out
loope
mov
dec
pop
mov
lds
int
xlat
loopne
dec
sti
push
jno
ret
jns
jns
jmp
rorl
fs
test
ja
lods
cmc
xchg
fdivrs
lcall
xor
mov
pop
loopne
adc
in
mov
sahf
mov
sub
adc
hlt
dec
inc
fidivrs
in
mov
js
cltd
incb
stos
mov
or
insl
test
jle
daa
movsb
js
scas
test
pop
aaa
push
mov
pop
or
faddp
mov
out
and
inc
test
imul
xor
pop
jg
jmp
loope
adc
int3
push
and
pop
loopne
xor
rcrb
add
fstpt
pop
sub
stos
int3
jns
mov
jo
shlb
mov
popf
repz
in
mov
shrl
xchg
sub
in
xor
xchg
sbb
arpl
xchg
jecxz
fnsave
scas
adc
or
je
adc
imul
test
jnp
movsb
adc
mov
and
cmp
lret
cmpsb
sbb
mov
pop
and
call
lods
jg
stos
imul
daa
int
pop
jmp
or
xchg
aas
add
scas
push
cmpsl
ja
aad
outsb
mov
mov
test
add
enter
arpl
jge
test
xor
loop
mov
jnp
push
xchg
imul
cmp
in
sub
xchg
mov
inc
xlat
xchg
and
xchg
xor
and
insl
stos
jno
into
inc
out
push
mov
sub
gs
das
sub
flds
inc
int3
icebp
xor
push
and
insl
xor
mov
jmp
out
fdivrl
xchg
or
test
and
jne
insb
xchg
adc
xor
out
mov
cli
ret
or
mov
ds
mov
in
pop
insb
add
mov
in
imul
push
and
jg
jle
cwtl
pushf
inc
sti
movb
or
out
pop
add
in
cld
sub
push
popa
cmp
iret
inc
cmp
xchg
jg
cli
sub
mov
ficompl
add
ret
int
pop
jns
mov
popa
jmp
fistpll
jecxz
pop
adc
push
lds
sarl
leave
in
or
mov
sbb
sbb
fstps
inc
adc
lea
pxor
cmp
scas
add
mov
lds
pusha
or
push
shll
or
or
mov
in
mov
aaa
shlb
push
sbb
es
jnp
mul
dec
sub
outsb
push
aaa
sub
in
mov
push
mov
mull
push
mov
pop
xor
and
mov
icebp
xchg
jne
xor
add
imul
mov
out
inc
dec
aaa
or
mov
loope
mov
sbb
in
cmp
pop
xchg
mov
push
into
or
fadd
movsl
rcrl
cld
popa
cltd
xchg
call
pop
popf
adc
push
jns
bound
adc
lods
sbb
stos
sbb
into
mov
lea
insb
add
mov
cltd
xchg
sti
rcll
ja
leave
cmp
cld
in
mov
mov
das
test
xor
mov
call
cltd
jno,pn
dec
sub
pop
and
sbb
adc
test
gs
lcall
mov
push
jge
and
dec
fs
cli
loope
xchg
lods
push
mov
dec
leave
push
and
push
sti
pop
push
and
pop
cmp
out
cmp
imul
cmpb
fwait
mov
and
pop
mov
mov
pop
scas
cmp
xor
xor
in
imul
in
aas
nop
scas
mov
imul
pop
cmp
xchg
into
mov
daa
aad
mov
push
test
mov
add
adc
int
adc
inc
add
sbb
mov
iret
andb
rcll
sti
icebp
cltd
xchg
add
aaa
daa
loope
cmp
sub
xor
xchg
mov
jmp
push
loop
lods
sub
xchg
dec
sub
stc
xchg
cmp
mov
mov
into
jmp
out
out
mov
cmp
jo
jns
iret
in
pop
jge
xchg
xchg
or
into
sbb
inc
mov
daa
inc
pop
repnz
push
pusha
mov
ljmp
out
jnp
adc
mov
mov
push
adc
aam
dec
in
push
mov
outsb
xchg
push
js
pop
inc
ret
inc
mov
popf
mov
and
inc
mov
add
sti
sti
mov
call
xchg
add
xchg
loopne
rolb
xchg
stos
jno
cmp
outsl
lret
sti
test
add
xchg
xchg
sub
arpl
cmpsl
inc
lods
jns
aad
in
inc
insb
movsb
popa
adc
inc
scas
aaa
out
ret
mov
push
push
popa
inc
inc
imul
pop
jecxz
add
pop
xchg
ja
xor
negl
mov
jae
iret
lcall
into
xlat
outsb
mov
push
xor
in
out
or
mov
push
inc
test
sbb
lret
add
mov
cmc
xor
into
sbbl
dec
inc
pusha
fbstp
and
movsl
popf
inc
jg
pop
xor
out
mov
xor
in
repnz
iret
cmp
lea
fldl
movsl
fwait
ljmp
cli
push
leave
daa
jg
cmp
fistpll
adc
jnp
into
pop
repnz
fcmovnb
mov
call
sbb
jno
arpl
loopne
test
ja
cmp
xchg
jo
dec
pop
out
add
push
or
cltd
test
ljmp
xor
lsl
iret
xchg
int
fwait
jae
xor
mov
in
sub
and
lahf
push
dec
int3
into
mov
out
dec
popf
cmp
fbstp
jnp
jne
movsb
push
out
faddl
ret
pop
pop
cmp
add
cmp
jg
xchg
lret
mov
sti
negl
rcr
mov
add
cmp
in
sub
pop
iret
mov
mov
adc
adc
adc
lret
and
xchg
inc
aas
dec
scas
pop
inc
push
mov
ss
inc
dec
and
jg
xlat
mov
cltd
int3
mov
mov
sub
xchg
pop
out
loop
fimuls
fiaddl
outsb
dec
into
or
mov
inc
leave
insb
mov
in
insb
add
push
xor
and
into
sub
mov
xor
dec
xchg
push
lret
pop
mov
jge
cmp
sub
fwait
jle
ljmp
test
ljmp
cmp
mov
mov
les
xchg
jg
mov
loope
test
xor
xlat
jne
sahf
mov
sti
fucomp
aam
int
lea
sti
sub
pop
push
cmp
test
cmp
xchg
in
mov
ret
xor
insl
cwtl
std
xor
movsl
add
pop
push
push
clc
rcr
and
sbb
shll
movsl
ret
jo
cmp
std
in
bound
fstps
movsb
or
dec
data16
or
aad
jo
jne
sub
or
add
mov
aas
mov
mov
sub
mov
int3
lret
out
fisubrs
mov
in
pop
fs
and
and
sub
mov
ja
pop
adc
adc
addr16
flds
aam
popa
in
imull
add
jbe
fistpll
sub
xor
cld
xchg
jmp
mov
std
pop
cmc
sbb
dec
push
xor
ljmp
mov
insb
mov
gs
mov
add
mov
add
adc
fldl
or
jecxz
addr16
mov
das
test
jne
movsb
inc
jno
adc
movl
in
cmpsb
sub
pop
xchg
aaa
adc
xchg
mov
jg
cmpsb
xchg
jne
aas
out
lods
lsl
mov
sbb
rorl
clc
inc
popf
add
jl
stos
sub
shlb
pop
sbb
cltd
movsl
in
xlat
lahf
xor
push
sub
or
mov
insb
mov
or
add
rcll
sti
pop
popa
xchg
cltd
and
jmp
lods
adc
stc
add
jae
pop
movsl
dec
test
push
daa
jne
test
sbb
sbb
adc
aam
pop
clc
pop
sbb
fdivl
inc
scas
movsb
jns
pop
les
fs
arpl
mov
inc
sti
cmp
mul
jno
mov
xor
insb
lock
iret
roll
stos
add
xor
mov
mov
shll
stos
push
mov
mov
xor
sbb
or
and
sti
push
xor
xor
loop
pop
lahf
push
insb
iret
orl
or
in
loope
iret
jle
jns
xor
and
insl
imul
jecxz
fnsave
dec
addr16
movsl
aam
popa
out
clc
in
dec
jno
mov
nop
jmp
jns
adc
out
dec
lea
mov
and
push
into
or
push
jns
dec
push
popa
mov
jnp
ret
mov
xchg
xchg
das
ret
addl
bound
inc
into
mov
testl
fwait
popa
lcall
mov
call
jne
xchg
fidivs
jecxz
push
inc
dec
dec
mov
jo
sub
out
jne
lds
xchg
insb
mov
stos
dec
jg
loope
inc
sub
adc
iret
adc
jno
inc
sub
outsb
jae
pop
jne
adc
sarb
imul
scas
das
dec
icebp
mov
setne
js
jno
sti
fcompl
dec
les
aaa
mov
rcrl
and
or
int3
mov
jge
mov
scas
loope
stos
and
mov
rorb
pushf
movsl
jns
repz
cmp
cwtl
and
out
pop
push
enter
hlt
in
fwait
scas
mov
imul
jg
clc
mul
outsl
pop
aad
in
ret
pushl
cltd
xor
sbb
adc
push
dec
shll
outsl
add
dec
dec
or
add
roll
and
stos
and
ljmp
std
iret
pop
movsl
popa
mov
into
mov
push
xor
iret
in
popa
out
test
inc
or
cmp
test
mov
adc
mov
or
stos
in
inc
or
in
dec
fildll
test
pop
pop
outsl
es
adc
lods
xor
ja
sub
mov
push
mov
and
push
pop
xchg
inc
push
push
andb
cmp
fwait
push
outsb
rcr
jno
les
push
orl
shl
inc
and
xor
dec
stos
fidivrs
jl
out
xor
mov
pop
jne
cltd
fsub
push
jg
jno
inc
hlt
dec
iret
dec
das
inc
dec
jno
and
jecxz
loope
lahf
sahf
pop
ret
add
xor
out
decb
cmpsl
mov
pop
rcrl
sbb
fnstenv
add
andb
cmp
les
scas
sbb
leave
fucomp
mov
mov
jnp
arpl
cltd
mov
mov
cltd
cmp
adc
cmp
mov
les
xchg
lahf
jmp
imul
mov
add
ret
cmc
rcrl
pop
push
push
outsl
xchg
sbb
pop
addr16
stc
push
dec
inc
sub
insl
or
test
adc
cmp
inc
cmpsl
ja
adc
mov
fwait
imul
sbb
push
in
ficomps
les
in
xlat
add
mov
stos
mov
out
xchg
jge
ss
jns
cli
mov
imul
stos
popa
sti
insl
adc
in
popf
aaa
addr16
outsl
cltd
xor
push
out
adc
popf
rol
mov
pop
jmp
and
mov
aam
mov
mov
xchg
movsl
inc
push
test
dec
fwait
sti
movsb
adc
hlt
sbb
jno
mov
pop
movsl
push
movlps
xlat
lcall
fbld
sti
sub
ss
movsb
or
pop
xchg
outsl
pop
sbb
pop
sbb
imulb
sarl
sbbl
pop
rorl
xchg
or
dec
dec
add
adc
xchg
std
loopne
inc
dec
and
jnp
push
jmp
add
cmp
fwait
test
xor
cmp
xchg
fdivl
out
leave
xchg
not
xchg
fldl
arpl
jg
test
mov
sub
stc
xchg
leave
xor
sub
pop
adc
jno
dec
sbb
pop
rolb
les
pop
leave
ljmp
push
stos
loop
cmpsl
movsb
jnp
and
xchg
scas
int
sbb
imul
call
out
sbb
mov
sti
fnstsw
int
cmp
or
push
mov
or
into
filds
mov
jnp
xchg
mov
jmp
mov
and
jg
pop
xor
test
mov
movsb
xor
lret
cmc
xchg
les
mov
dec
gs
push
dec
jbe
je
xchg
jmp
mov
fldlg2
xchg
aam
ret
mov
iret
xorb
adc
mov
ljmp
aas
aaa
shll
lahf
pop
jae
jecxz
repnz
in
sbb
mov
xchg
cmp
sbb
out
or
out
ret
in
lret
sub
sbb
xchg
test
dec
mov
push
add
in
pop
shll
in
push
push
das
dec
add
test
in
push
gs
std
cmpsb
dec
sbb
idivl
mov
aad
push
ret
xchg
xchg
lods
jbe
xor
add
popa
cwtl
ljmp
xchg
push
dec
jle
push
push
out
inc
inc
inc
mov
icebp
cmp
movsl
test
jmp
ja
sub
in
dec
mov
mov
int
add
and
aaa
test
xor
push
in
ret
in
fisttps
das
int3
out
fwait
nop
inc
call
xchg
add
pop
fildl
cmp
adc
mov
movsl
jnp
pop
jno
insb
mull
cli
arpl
cmp
movb
jns
mov
fcomi
outsl
push
xchg
stos
faddl
mov
adc
sbb
add
xchg
scas
push
and
in
sti
jne
add
addl
xchg
jne
test
sub
mov
adc
int
mov
mov
xchg
jg
adc
push
in
mov
mov
daa
jg
jge
test
pop
xchg
leave
lahf
iret
in
pop
push
xchg
xor
call
and
xchg
ljmp
js
inc
xor
out
lret
imul
pop
dec
shll
cltd
mov
bound
adcl
mov
jns
movsl
sbb
imul
mov
cmp
cwtl
shll
ret
mov
loopne
push
push
test
jns
out
arpl
xchg
gs
inc
adc
mov
in
mov
stos
jp
pop
dec
and
sbb
lds
fisubl
push
mov
sbb
xchg
jno
lea
into
push
mov
mov
stc
sub
in
stos
inc
push
inc
adc
aas
loopne
movsl
arpl
pop
or
test
sbb
push
xor
fwait
xorl
xor
inc
mov
movsl
popl
ffree
jnp
mov
cmp
or
lock
mov
cmc
sub
jge
jno
inc
fcoml
and
test
out
pop
sub
mov
mov
mov
int3
xorl
sub
aaa
negl
ds
insl
adc
add
xchg
fldl
fs
jg
scas
ja
addr16
notl
in
jne
jne
xchg
sub
mov
lret
pop
and
xchg
xor
loope
mulb
cld
iret
add
icebp
int
mov
mov
fnstsw
mov
sysexit
cmpsb
dec
mov
out
xor
sbb
movsl
cmc
jno
loop
jmp
ljmp
loope
adc
pop
cli
pop
mov
roll
dec
jb
mov
push
rorb
dec
add
ss
repnz
mov
xchg
adc
pop
cli
push
mov
xor
jge
loopne
pop
loope
in
dec
gs
xor
jecxz
sbb
std
repz
cmc
loope
add
xor
sub
adc
ds
outsl
inc
enter
and
mov
push
lds
std
push
test
arpl
sbb
lds
loopne
dec
jecxz
pop
xchg
ljmp
sbb
test
roll
xchg
jno
aas
pop
adc
jb
cmp
js
shrl
hlt
xchg
leave
repz
or
or
jmp
mov
test
ljmp
call
push
cli
push
test
cmp
mov
cwtl
xorb
and
neg
mov
rol
jmp
mov
cli
pop
mov
inc
xor
loope
xor
repz
cwtl
dec
jno
das
sbb
dec
pushf
xor
lea
notb
cmp
adc
int
add
loopne
inc
loope
cmp
cmpsl
jg
fwait
pop
das
sub
ljmp
shll
mov
cmc
fstl
inc
push
aad
sbb
fwait
test
inc
mov
adc
int3
cli
xchg
push
aaa
sub
mov
jno
xchg
popf
leave
fldl
in
call
sub
pop
jnp
test
xor
xchg
fiaddl
jge
aas
or
cld
jno
mov
icebp
fsubr
add
xor
push
loopew
mov
inc
out
rol
je
out
mov
insb
sub
mov
in
movsl
mov
xchg
and
sub
iret
int3
shrl
inc
out
int
xchg
add
arpl
inc
xor
mov
mov
dec
jae
lods
idivb
and
sbb
cmp
mov
jns
aaa
or
add
push
enter
scas
adc
clc
and
rcl
mov
mov
pop
jne
imull
inc
push
loopne,pn
xor
stos
aaa
rol
imul
ljmp
xor
aaa
mov
adc
mov
pop
mov
dec
inc
adc
mov
and
imul
insb
test
jno
dec
xchg
stc
ljmp
pop
mov
iret
inc
dec
aaa
fidivs
iret
pop
test
int3
mov
adc
mov
shlb
jecxz
stos
xorl
xor
iret
lret
mov
mov
sbb
clc
lcall
loope
test
lret
pushf
out
test
xchg
mov
mov
ljmp
cli
stos
loop
jne
shl
dec
xor
loope
and
shr
jmp
ja
loopne
add
push
pop
fldl2e
inc
mov
stc
adc
jmp
cltd
mov
fwait
push
shr
jae
add
out
jnp
mov
mov
inc
inc
or
xchg
aas
sub
or
movsb
mov
xchg
xor
scas
iret
repz
jno
sub
sbb
rcl
or
filds
mov
mov
fldt
lahf
inc
cs
and
jne
roll
int3
ret
ljmp
out
ret
icebp
sahf
pop
outsl
or
or
jecxz
add
cmc
cmc
xor
loope
lret
int
inc
popa
sbb
sbb
sub
repz
jno
push
ja
loopne
outsl
scas
jmp
cli
jno
repnz
cmp
mov
mov
push
jno
mov
loopne
adc
call
fnstsw
out
movsl
pop
xor
cmpsl
mov
xchg
stos
and
in
mov
movsl
mov
test
bound
pop
loopne
ret
mov
sbb
shl
mov
mov
push
pusha
icebp
xor
mov
jno
jl
ljmp
ds
iret
mov
pop
leave
in
insl
xchg
mov
jl
push
pop
sub
popa
fdivrl
push
fstpt
fst
insl
fstl
push
push
dec
leave
out
sbb
adc
incl
push
out
mov
xor
mov
mov
in
popa
jns
push
or
push
and
bound
push
sbb
jg
cltd
xchg
jno
jle
lcall
adc
xchg
pop
and
cld
mov
adc
cwtl
jne
in
sub
push
movsl
iret
inc
dec
into
popf
popf
jecxz
push
add
notl
push
and
jmp
lret
sar
sarb
mov
cmp
test
in
or
xchg
mov
mov
aas
popf
cltd
aam
pop
sbb
jnp
mov
das
and
mov
jg
xor
pop
insb
cmpsl
subl
popf
les
mov
mov
into
jmp
in
mov
int3
push
mov
xor
popa
cmpsl
lock
in
jnp
jge
test
inc
xor
or
mov
lcall
cltd
dec
jno
sbb
xor
dec
cld
outsb
gs
or
aad
or
subl
cltd
into
adc
std
jo
mov
std
jns
test
adc
cmp
dec
test
call
movsl
aaa
jno
and
pop
adc
jl
xorl
test
xor
outsl
inc
gs
xchg
jns
mov
lahf
dec
arpl
fcoml
int
mov
in
ret
xchg
hlt
pop
inc
cmp
mov
cmc
mov
dec
and
cmp
stos
xlat
dec
int3
ret
imul
mov
sub
add
xchg
cmpsl
dec
mov
pop
mov
sahf
out
popf
push
cltd
jg
loopne
mov
cmp
in
mov
mov
mov
insb
push
imul
ljmp
aaa
fnstsw
pusha
je
outsl
mov
int3
fcompl
sub
lret
xchg
movsl
push
mov
mov
fwait
mov
scas
mov
iret
nop
jge
sbb
cmp
pop
negl
std
ret
popa
aas
xor
fistl
gs
cmp
dec
js
xor
push
fwait
out
fists
ds
pop
lcall
push
popa
jmp
xchg
jecxz
out
jp
rclb
and
inc
pushf
adcl
into
pop
incl
mov
xor
call
filds
xchg
mov
popa
hlt
enter
sub
push
adc
jge
loope
cmp
add
call
xchg
mov
in
addr16
mov
imul
lds
mov
push
pop
jg
add
imul
in
cmp
arpl
mov
add
jecxz
addr16
mov
and
mov
insb
pop
xor
sbb
add
iret
ret
movsb
mov
xchg
jnp
mov
outsb
inc
lahf
inc
mov
ds
das
sti
adc
add
pavgb
idivl
adc
adc
jmp
mov
inc
or
mov
loopne
xlat
add
addb
ficoml
sar
call
xchg
cwtl
nop
ljmp
or
clc
and
mov
icebp
into
cmp
lods
sub
pop
push
push
pop
aas
push
sti
aam
loope
push
push
mov
arpl
mov
push
pop
fnsave
inc
pop
mov
call
jge
sbb
insl
insb
ljmp
pushl
pop
xchg
mov
mov
or
vshufps
inc
sbb
stos
out
or
inc
call
movsl
jmp
mov
xchg
loopne
jb
in
in
icebp
lcall
orb
addr16
dec
xchg
ret
sbb
inc
jno
ret
fnsave
inc
sub
dec
add
aad
mov
lcall
gs
adc
out
subb
jl
je
sub
pusha
imul
addr16
jae
add
cmp
inc
test
cwtl
cmc
adc
rcrl
pusha
cs
outsl
mov
imul
je
mov
mov
pop
jns
lret
rcr
lds
mov
pop
adc
outsl
sbbl
movb
xor
adc
lahf
scas
rol
test
mov
xor
inc
in
xlat
mov
pop
pop
push
test
pop
stc
xchg
test
xor
push
and
mov
xchg
jo
sub
sbb
push
test
dec
lods
fxch
sub
loope
add
testl
popa
mov
testl
shlb
mov
jge
fdivl
int3
xor
sub
repz
lcall
xchg
out
mov
ja
mov
outsl
xor
out
les
imull
jmp
lahf
sub
xor
cwtl
jo
and
fcompl
dec
jmp
adc
or
dec
add
in
mov
sub
jmp
popa
int
movsl
lds
ror
mov
sub
xchg
mov
stc
push
or
or
push
scas
or
mov
pop
sbb
sbbl
sbb
pop
or
or
mov
dec
push
push
xchg
mov
popf
lcall
pop
insb
jmp
shrl
jecxz
loop
sbbl
mov
jmp
sti
inc
ljmp
stos
mov
stos
das
into
pop
ljmp
into
lods
adcl
mov
leave
mov
and
les
xlat
fwait
pop
mov
loopne
dec
imul
mov
js
pop
push
jne
inc
test
aas
movsb
adc
movsb
aaa
jnp
cmp
les
insb
out
clc
bswap
and
std
aaa
loopne
adc
lock
add
jl
sub
gs
add
movsl
mov
mov
mov
jns
popf
lods
popa
cmovnp
jae
cmp
pop
and
aaa
push
je
popf
rcrl
jno
add
fists
sbb
imull
popa
fstl
jnp
movsl
scas
jno
fwait
cmp
fwait
cmp
in
cmp
stos
pop
int3
mov
inc
movb
icebp
iret
jmp
push
jge
pop
add
push
push
ja
loopne
jno
sub
jns
xchg
popf
ljmp
or
or
pusha
add
lcall
bts
mov
or
push
jmp
adc
xchg
xchg
int
rcrl
fnstsw
ffree
icebp
cltd
mov
sarl
scas
aam
pop
sbb
jmp
outsb
das
ret
mov
pop
lahf
or
mov
mov
dec
cmp
scas
push
jmp
repnz
mov
mov
sbb
int
adc
adc
adc
adc
dec
push
cli
pop
mov
xchg
or
movsb
in
jno
xchg
xchg
insl
aad
aad
pusha
cld
out
loopne
fnstenv
cmc
mov
adc
push
roll
psrlw
ret
gs
add
andl
push
pop
pop
jns
xchg
in
imulb
repnz
movsl
ljmp
stos
jae
mov
pop
mov
rcll
les
scas
mov
pop
ss
push
inc
push
mov
pop
mov
cwtl
notl
test
aaa
std
leave
out
jge
cltd
test
jg
cli
and
jmp
call
fidivrl
aas
lahf
xor
repz
cmp
sbb
test
scas
dec
and
sbb
test
xor
mov
adcb
inc
adc
and
mov
in
xlat
jge
cwtl
cmpsl
xor
push
pop
lds
xchg
pop
and
and
idiv
ss
sub
int3
push
bound
ja
push
mov
fs
dec
fmul
add
ja
pop
enter
rorl
mov
jns
inc
push
insb
add
orl
mov
arpl
push
and
pop
mov
int
les
outsb
push
inc
cmp
pop
cmpl
test
shrl
mov
pop
out
inc
inc
mov
add
std
pop
andl
jmp
xor
dec
andl
rorb
loope
outsl
jae
adc
repnz
cmpsb
mov
adc
ljmp
icebp
xlat
adc
js
cmpsl
and
mov
xor
sub
test
ljmp
inc
jnp
daa
movb
test
adc
push
xchg
pop
adc
dec
mov
pop
xchg
popa
in
jge
imul
iret
adc
mov
cmp
fiadds
xchg
int3
lahf
outsl
or
out
pop
loop
and
xchg
jle
jbe
jb
call
sbb
adc
iret
xchg
loope
sti
jge
jae
sbb
movnti
dec
mov
hlt
adc
sub
bswap
inc
arpl
addr16
jnp
inc
pop
rcrl
sub
test
arpl
jns
sbb
cmp
mov
clc
jge
xlat
or
rcl
shll
dec
xchg
call
das
sub
mov
lods
call
jl
jmp
xchg
movsb
inc
lahf
dec
pop
jmp
mov
cmp
repz
repnz
test
ljmp
mov
sti
inc
int3
dec
and
jns
movsb
or
enter
xchg
jo
dec
xor
pop
or
add
or
add
xor
test
mov
xchg
das
dec
enter
into
int3
pusha
mov
fmuls
jns
add
jns
notb
in
fcoms
sbb
adc
int3
test
pop
stos
cmp
adc
jne
movsb
je
and
xor
jge
faddl
adc
fmull
aam
adc
xchg
aas
leave
jno
test
inc
and
sub
xor
and
mov
xchg
icebp
into
xlat
and
mov
lret
xorl
sbb
mov
mov
daa
ds
flds
add
jecxz
xor
add
mov
out
push
sub
pop
test
sbb
lcall
ja
and
nop
add
sub
popf
imul
xchg
push
lds
outsl
pop
dec
test
popf
mov
jg
stos
scas
inc
enter
paddusw
add
mov
pop
stos
cmc
add
aas
lahf
and
xchg
cmpsl
sub
ret
les
mov
daa
mov
xor
fwait
jnp
scas
push
push
into
ja
iret
imul
sub
jecxz
ja
ret
js
aam
popa
xchg
shr
arpl
cmp
cmp
ror
sbb
jmp
insl
fs
ljmp
sti
popa
and
sub
imul
daa
aad
sti
cltd
jmp
sub
rcll
fwait
dec
sarl
orl
push
dec
dec
rcll
cld
pandn
test
jecxz
sbbl
scas
add
jno
xchg
push
mov
pop
insb
inc
dec
push
inc
inc
inc
aaa
imull
aas
gs
pop
pop
xor
pop
lahf
jnp
out
out
in
dec
call
icebp
scas
cmp
pop
lahf
les
or
add
ret
scas
negl
push
push
xchg
leave
inc
popa
add
stc
test
lds
in
pop
insb
aas
dec
and
fucom
mov
pop
lea
pop
sbb
das
cwtl
pop
inc
cltd
cwtl
dec
popf
mov
lods
test
test
cmp
test
into
scas
cmp
mov
mov
clc
or
push
sarl
fbstp
jg
pop
xlat
call
mov
outsl
dec
outsl
lret
cmp
shll
xchg
test
cmp
and
aas
outsb
push
in
iret
inc
adc
mov
loope
aas
push
mov
das
aaa
and
adc
not
loopne
stos
cmpsl
dec
adc
mov
pop
insl
loopne
mov
imul
and
call
cmp
dec
scas
aad
mov
and
and
push
out
iret
adc
inc
aaa
das
ret
call
fisttpl
mov
stos
xchg
push
pop
arpl
mov
pop
out
inc
cli
aaa
shr
pop
out
stos
icebp
dec
pop
repz
dec
popa
setg
popa
fistps
adc
jne
jne
jne
mov
out
popa
sub
iret
iret
stos
mov
scas
jg
outsl
clc
outsb
js
xor
jecxz
out
test
sbb
movsb
repz
lds
repz
fsts
icebp
jnp
ret
jno
cmpsl
in
ljmp
out
in
icebp
push
aad
mov
mov
in
out
jmp
fprem
out
gs
jne
mov
out
data16
mov
push
lcall
mov
adc
lock
push
rcll
mov
icebp
movsb
movsb
dec
test
test
jno
mov
ret
popf
rcrl
push
repz
jne
push
loopne
insb
std
or
cli
testl
lock
fisubl
mov
dec
in
adcb
test
mov
pop
jo
push
ret
in
lock
repz
orl
jle
jg
movsl
cmc
insb
jl
push
mov
fadd
mov
loopne
mov
shrl
ret
leave
fcmovu
sarb
xor
adcl
loope
jge
nop
sub
mov
mov
repz
cmpsl
stos
mov
mov
jmp
mov
scas
mov
lret
movsl
nop
push
ret
out
aad
out
mov
mov
mov
adc
xor
andl
jb
jg
pop
icebp
lock
stos
jnp
icebp
add
jae
add
adc
inc
in
inc
dec
repz
sbb
sub
leave
add
std
ljmp
cmc
and
sbb
repz
cmp
or
imul
xor
jbe
jecxz
repnz
sbb
sub
dec
aad
pop
out
insb
xchg
loop
addr16
sbbb
in
jae
fucomip
outsl
mov
aas
cmpsb
test
repz
popf
pop
jne
push
xchg
xor
lods
pop
mov
dec
mov
and
mov
lret
lahf
lock
xchg
repz
in
js
popa
loope
repnz
shll
pop
inc
mov
cwtl
or
push
dec
jne
dec
repz
adc
outsl
repnz
cmpsl
sbb
repz
lods
mov
mov
popf
std
gs
je
and
jp
in
add
repz
lret
imul
repz
es
and
pop
das
jp
outsl
repz
pop
hlt
cmp
jecxz
xor
sti
push
mov
xorb
inc
sahf
jl
loop
daa
aaa
fucomi
icebp
jmp
mov
or
jmp
jns
xchg
test
das
divb
shrb
popa
movsl
aas
ror
aaa
cs
sub
mov
sub
sbb
outsl
rcrl
lea
mov
mov
subl
lds
sub
sbb
dec
les
xlat
jo
int3
jecxz
mov
enter
add
repnz
adc
jmp
xor
int
or
repnz
fmul
adc
push
push
int3
popa
outsl
fistpll
lret
lea
or
xchg
and
fisubrl
in
ds
js
shlb
movsl
add
inc
pop
fwait
cmp
lock
addl
push
repz
cmp
mov
sahf
sbb
or
repz
xlat
ret
in
cmpsl
in
push
iret
leave
pop
fsub
fs
inc
add
cmpsb
adc
aad
xor
fwait
repz
sbbl
sbb
les
jno
xor
test
lret
jb,pn
or
std
mov
inc
lods
mov
repz
cmp
js
cmc
outsl
cvttps2pi
jnp
ljmp
sub
pop
clc
repz
mov
daa
repz
add
or
xor
arpl
ret
fdivrp
adcb
jno
out
enter
repz
xchg
lds
repnz
jnp
outsl
jg
inc
lods
fwait
ret
push
jb
mov
ds
mov
test
lret
push
or
mov
iret
insl
iret
pop
test
andb
loope
sub
mov
ljmp
cmp
push
call
scas
or
call
sti
scas
and
inc
lcall
dec
ret
loopne
aad
out
out
jmp
fucomip
in
jbe
icebp
inc
xor
xchg
xrelease
nop
xchg
fistpl
repnz
in
inc
out
daa
aaa
mov
outsb
xor
push
lods
out
repnz
shll
mov
add
mov
test
jae
loopne
cs
push
mov
dec
out
in
xor
mov
mov
std
pop
lret
sahf
repz
push
sub
jmp
mov
shll
inc
xor
sub
mov
scas
pop
xor
repz
and
repz
adc
adc
mov
mov
shl
stc
iret
xchg
xor
push
and
adc
pop
out
in
add
scas
lret
shll
loope
loope
int3
or
popa
cmpsb
hlt
and
sbb
mov
aad
xlat
fcmovnu
inc
fnstcw
adc
inc
fcmovu
fcmovnbe
dec
push
ret
or
mov
mov
jp
pop
pop
scas
add
ds
sbb
and
in
popa
sbb
dec
sahf
dec
jae
xor
movsl
fmul
push
pop
jnp
ret
repz
data16
xchg
sti
cmc
in
cmpsl
push
cmp
push
push
shll
pop
fs
repz
inc
repz
lahf
sbb
or
repz
fs
outsl
lea
mov
jns
rcrb
repz
or
xor
lea
pop
and
fwait
add
lock
or
mov
pop
or
mov
jo
adc
repz
sahf
xchg
inc
jno
repz
xchg
jl
or
call
repz
iret
fists
or
enter
pop
nop
pop
xchg
fwait
mov
mov
mov
add
pop
icebp
sub
scas
inc
push
insb
mov
inc
testb
jg
inc
pop
ljmp
xchg
mov
mov
hlt
cwtl
clc
dec
in
jmp
inc
pushf
add
mov
jl
sbb
xor
cmc
inc
es
dec
fpatan
adcl
in
in
outsb
sub
jl
inc
adc
dec
mov
dec
sub
push
popa
cmc
mov
add
fstpl
cwtl
and
push
shlb
cmpsb
gs
sub
mov
xorb
add
scas
das
repz
or
xor
pop
fcmovnbe
mov
sbb
xchg
mov
push
push
repz
imul
or
pusha
repz
lods
sub
daa
mov
lahf
mov
iret
aam
mov
mov
adc
repz
jecxz
mov
cmc
repz
fisttpl
in
loop
rcll
dec
repz
enter
xor
imul
lahf
xlat
repz
shrb
sbb
repz
fdivr
repz
mov
add
das
ret
divl
ljmp
push
jae
dec
add
lock
cwtl
incl
sub
mov
lret
loope
hlt
arpl
cmp
dec
mov
dec
jl
jge
push
repz
imul
mov
push
adc
xlat
out
push
mov
sarb
xchg
cmp
push
and
mov
es
dec
sbbl
mov
push
dec
and
jae
inc
lock
call
adc
sbb
sbb
inc
fsubl
sbb
shl
test
out
and
icebp
or
insb
out
and
pushf
xchg
andb
jecxz
ret
in
in
loopne
mov
shll
data16
mov
ret
rclb
mov
icebp
and
mov
imulb
movsl
push
xchg
jecxz
xor
fisubs
mov
fdivs
add
js
xchg
push
testb
icebp
mov
push
pop
lahf
pop
js
repz
dec
sbb
fstp
in
lret
xor
addr16
movsl
test
xchg
mov
sbb
sbb
or
aam
add
repz
and
dec
sahf
mov
es
mov
rep
lahf
test
sbb
pusha
pop
scas
rep
jle
aas
and
repz
cmp
cmp
dec
adc
imul
sti
aam
repz
shlb
mov
sub
ss
dec
cli
out
shlb
daa
leave
add
pop
repz
dec
sbb
cmpl
repz
dec
cmp
sub
fdiv
push
shl
lahf
lock
mov
arpl
daa
or
out
lds
add
cld
mov
bnd
leave
in
repnz
add
repnz
add
lods
push
fidivs
adc
scas
jae
xor
push
shr
lret
popa
jecxz
iret
les
das
jecxz
dec
insl
mov
call
sti
fcomip
lret
fdivrs
cmp
jbe
push
sub
fildll
out
add
fcmovb
imul
jmp
mov
mov
mov
sub
or
hlt
xor
in
es
scas
fwait
adc
pop
mov
notl
stos
jl
inc
repz
fisubrl
pushf
aas
flds
icebp
push
scas
mov
int3
push
cmpsb
push
notl
mov
shll
lock
sbb
xor
fpatan
outsb
ja
mov
repz
xor
xlat
xchg
jo
das
dec
pop
imul
repz
pop
xchg
fs
adc
sbb
hlt
iret
outsl
pop
out
repz
lahf
pop
push
xlat
mov
add
repz
ds
stc
xchg
rorl
jle
adc
in
ret
mov
push
stos
scas
clc
imul
mov
orb
xor
ss
inc
popf
psubb
push
loopne
jb
xchg
jae
xor
stc
xchg
fdiv
lahf
imul
inc
lea
fmull
in
xor
xor
mov
repz
xor
subb
notl
cwtl
aad
mov
rcrl
adc
jp
cmp
inc
mov
repnz
loopw
fsubs
mov
sub
in
sar
bnd
xor
mov
mov
mov
ja
and
jno
sbb
rolb
lods
push
dec
addb
push
mov
leave
lods
jae
pop
ss
dec
mov
cmpsl
mov
ja
and
xor
mov
adc
mov
repz
and
lret
stos
daa
fldcw
mov
sar
add
mov
and
sub
aaa
ret
adc
shl
outsb
lahf
or
cmp
add
xor
call
inc
mov
jae
or
repz
enter
fisubs
or
mov
lock
cmp
or
popa
movsl
sahf
jo
sbb
cmp
in
ds
mov
cmp
dec
fisubrs
and
test
jp
mov
jae
xor
jmp
sahf
imul
test
jae
pop
jl
insb
or
dec
mov
sub
out
mov
mov
mov
or
jae
leave
jp
pop
sbb
repz
sub
and
mov
and
xchg
sbb
xchg
insb
dec
mov
scas
or
mov
stos
mov
and
pushf
or
sub
gs
xrelease
sub
repz
push
cmp
out
inc
cmp
xor
dec
jno
shr
nop
aad
fstl
mov
dec
movsb
ret
xchg
push
xchg
popf
mov
out
mov
call
mov
insl
mov
xchg
lds
orl
lret
jle
jg
push
push
rol
leave
mov
xchg
loopne
mov
repz
fistpll
stc
dec
inc
and
cmp
or
in
clc
mov
push
pop
mov
jno
xlat
shlb
fildll
repnz
mov
sub
bound
mov
fcoms
out
mov
push
dec
in
pcmpgtb
push
jne
sahf
jge
pop
pop
ret
bound
repz
xorl
jae
lock
lds
jno
sub
adc
repz
cmp
push
mov
test
cs
sti
pop
add
xor
les
repz
inc
pand
jbe
lods
repnz
enter
sub
xchg
mov
shlb
hlt
mov
loop
jg
xchg
sub
fistl
test
insl
repnz
loope
enter
popf
add
rclb
mov
or
repz
repnz
adc
je
lods
repz
sub
andl
movsl
sbb
in
cmp
aad
mov
pusha
ja
dec
jmp
jecxz
cmpsb
js
mov
dec
mov
cmc
or
sub
insb
ret
cli
aas
paddusw
push
scas
enter
cli
inc
jge
pusha
std
push
jae
jb
ret
fisubl
test
lock
jmp
lcall
fiadds
aam
mov
xor
push
imul
mov
out
mov
inc
ret
mov
out
ret
cltd
push
mov
fdivrl
mov
xchg
out
sbbl
ljmp
jl
icebp
sub
jge
arpl
shr
adc
repz
xchg
or
out
cmp
cli
adc
or
repz
sbb
imul
and
sbbl
pop
sbb
repz
imul
mov
push
rep
add
add
inc
xchg
push
repz
mov
test
fidivl
xchg
sbb
outsl
ret
cmpsb
dec
dec
mov
push
repz
jo
mov
sbb
jnp,pt
xchg
jno
cmp
repz
mov
out
push
or
jae
or
nop
movl
or
cmpl
or
xor
rdpmc
fnstsw
enter
cmpsb
mov
fsubr
xchg
and
loop
jbe
pop
cmp
xchg
jp
repz
xchg
cmp
pushf
arpl
hlt
add
sbb
mov
mov
sub
test
pop
ljmp
inc
ss
repz
cmp
xchg
cmc
xchg
xlat
mov
push
andb
fisubs
icebp
test
xor
lods
dec
mov
ret
int
mov
push
or
xchg
cmp
xor
xchg
fsubrp
out
in
adc
xlat
fsts
ret
stc
cmp
mov
nop
pop
mov
and
cli
repz
xchg
sub
int
jp
xchg
lods
std
call
int
lods
cmp
repz
ljmp
xchg
ljmp
inc
cld
in
repz
repnz
lahf
xchg
inc
repnz
aas
outsl
shrl
fdivl
neg
push
xchg
jnp
xor
in
out
ficompl
or
push
and
cmpb
cs
jnp
and
ret
es
ss
push
outsl
popf
mov
repz
pop
mov
mov
cltd
int3
sub
fcomps
xlat
dec
pop
movsb
mov
and
jp
call
and
and
jecxz
pop
add
fwait
mov
push
repz
ret
mov
int
repz
testl
test
pop
cmpsl
cmp
mov
aam
das
shrb
ljmp
add
cmpsl
pop
repnz
in
sbb
shll
cmp
dec
sbb
fisubs
repz
pop
lock
adc
dec
adc
push
push
jg
xchg
sarl
repnz
inc
jae
jmp
mov
pushf
bswap
not
lahf
pushl
popl
movzbw
mov
lahf
lea
jne
mov
push
call
push
lock
std
std
xchg
insb
loopne
xor
cmpxchg
xchg
sti
enter
sub
pushf
mov
pop
divl
xor
push
scas
mov
in
test
inc
pushf
and
aam
pop
lds
loopne
and
test
loop
xchg
add
adc
jmp
les
xor
xchg
push
xchg
dec
jge
int
dec
xor
add
jmp
adc
inc
pusha
mov
lea
jae
push
xor
jmp
lea
je
btr
mov
add
bsr
add
not
mov
jp
stc
jmp
stc
call
popf
cpuid
nop
push
pushf
pushl
pusha
movl
pushf
call
xchg
pop
movsbl
pop
jmp
pushl
popl
pushl
pushf
mov
pushl
ret
movl
pushf
lahf
cwtl
jmp
movb
lea
call
push
pushf
lea
jae
push
xchg
not
pusha
mov
push
push
inc
sets
mov
call
lea
js
push
pusha
movl
mov
push
pushf
lea
jmp
mov
lea
mov
jmp
shld
adc
cmc
jmp
pushf
test
movb
jmp
cmp
sbb
pusha
mov
pusha
push
lahf
repz
pop
push
sbb
hlt
incb
jns
lods
xchg
cwtl
xor
adc
push
sbb
aam
pushl
dec
or
sub
rclb
sti
inc
shll
int3
inc
jb
imul
out
mov
adc
dec
add
sub
cmp
push
in
and
inc
cmp
mov
xor
aam
mov
inc
add
lock
cmp
ret
iret
fidivs
ret
pop
fnstsw
sub
mov
mov
aam
shlb
xorb
add
in
int
ds
stc
loope
cmp
dec
out
mov
aad
sahf
jo
sbb
jns
into
jmp
add
add
dec
mov
xchg
xchg
push
aad
mov
and
js
pop
dec
fwait
pop
inc
xor
ja
mov
lahf
cwtl
cmpl
cltd
inc
xor
xor
arpl
mov
pop
scas
into
cli
pop
inc
enter
jb
imul
dec
aaa
movsl
sub
es
out
push
ds
push
cld
cli
adc
scas
dec
mov
faddl
fldenv
stc
jb
leave
nop
jno
or
lods
add
mov
lods
popa
push
fwait
icebp
and
push
mov
mov
push
jb
insb
cmp
pushf
mov
mov
pushf
mov
pusha
pushf
push
pushl
ret
push
or
movb
movw
lea
je
clc
pusha
cmp
cmp
lea
pusha
pusha
call
popf
rdtsc
nop
push
pushf
pusha
movl
pushl
movl
pushf
pushf
pushf
lea
jmp
lea
jne
call
or
call
pushf
pusha
lea
je
jmp
push
pushf
mov
pushf
xchg
movw
call
jg
nop
inc
dec
xor
and
sbb
sub
lods
enter
mov
cmc
sarl
xor
push
movhlps
adc
and
inc
gs
gs
loopne
jne
pusha
mov
cmp
jmp
in
ret
mov
imul
push
jmp
add
push
pushf
push
pushf
lea
jmp
lea
jb
pushf
cmp
call
or
scas
shlb
sub
or
in
int3
mov
cmovns
jp
mov
xchg
push
subl
rorb
jne,pn
jge
nop
sbb
in
hlt
rcl
rorl
repz
pop
es
jb
insl
repz
push
jnp
int
daa
inc
jge
lods
sub
cli
pop
ja
sbbl
mov
ficompl
fucomip
lods
cs
pop
icebp
xchg
add
ret
or
stc
adc
in
cmp
pop
inc
xchg
push
fisubrl
inc
pop
adc
mov
mov
cmp
fwait
test
add
aas
mov
jo
sub
mov
mov
repz
pop
push
popa
and
adc
jl
outsb
or
shl
pop
and
inc
call
cmp
xor
clc
clc
or
pushf
pusha
call
std
pop
cmc
add
xor
pushf
or
into
fisubl
sbb
mov
stos
inc
xchg
psadbw
cld
sbb
jb
mov
mul
dec
pop
ja
dec
dec
test
mov
jb
adc
cmp
shl
cld
dec
jecxz
adc
idivb
xchg
dec
pop
xchg
and
fucomip
cmpsb
xchg
insb
call
jb
jge
xchg
jae
fdiv
lds
jb
outsl
sbb
add
or
pushl
lea
je
bswap
call
pushf
pusha
or
jmp
neg
pushf
cmp
cmp
lahf
lea
movzbl
mov
jmp
movl
pusha
pushl
lea
jmp
inc
push
push
mov
jle
jnp
or
inc
rolb
sub
adc
pop
mov
clc
in
jb,pn
cmp
push
xlat
incl
sbb
dec
jb
outsl
sub
cmpsl
pushf
movb
pusha
movl
pushf
movl
pushf
push
lea
jmp
cmc
cmp
not
clc
pushf
pusha
push
sub
call
pusha
cmc
bt
call
stos
pusha
mov
pushf
lea
jmp
xor
mov
pusha
repnz
mov
pushf
lea
jne
pusha
movb
movsbw
call
sub
jmp
jne
xchg
xchg
test
inc
xchg
inc
test
nop
xchg
inc
addl
xchg
xchg
xchg
mov
orb
mov
mov
inc
inc
xchg
and
popf
ja
out
pop
addl
sub
mov
mov
lods
adc
adc
out
pop
mov
sbb
nop
shll
adcb
mov
aad
mov
icebp
arpl
mov
and
lcall
js
movsl
xor
cmp
pusha
add
pushf
mov
sbb
adc
mov
pop
dec
adc
call
ja
out
test
xchg
fs
dec
xchg
test
pop
and
ljmp
sti
sbb
mov
scas
lret
je
lods
mov
movsl
or
jl
sub
or
pop
mov
loop
ljmp
mull
xchg
fcomps
jns
add
loopne
mov
add
imul
mov
push
or
punpckhwd
or
sbb
xchg
xchg
and
xchg
mov
or
xlat
pop
gs
jno
adc
ret
js
push
jno
dec
cmp
bndstx
mov
xor
and
sbb
lods
xlat
cwtl
pop
mov
cmp
mov
push
push
ljmp
add
leave
pop
inc
and
std
or
fwait
pop
ljmp
imul
pop
sbb
outsl
inc
insl
and
incl
in
jnp
sub
and
and
pop
or
pop
dec
and
dec
mov
cmp
inc
jno
dec
cmp
repnz
test
pop
fistl
fnstcw
pop
pop
pop
repnz
mov
sbb
rcrb
xchg
test
in
xor
dec
pop
cmpsb
xor
lret
pop
in
sti
call
push
jb
lret
xor
sbb
mov
pushf
lea
mov
pushf
lea
call
push
mov
lea
jne
pusha
lea
jne
setge
mov
pusha
pushf
lea
jmp
pushf
stc
not
pushl
shr
pushf
pushf
jmp
popf
pop
fistpl
fmull
fisubs
push
dec
and
popa
xchg
dec
sbb
arpl
sub
test
cmpsb
faddl
test
lock
movsl
ret
or
jp
and
jne
shlb
jno
data16
hlt
pop
inc
xor
pop
test
push
pop
jecxz
mulb
das
les
dec
lret
int
lock
cmp
mov
fildl
jo
das
ss
dec
mov
add
adc
push
jae
push
clc
lea
ret
jne
bswap
movsbw
sub
test
ror
dec
stc
mov
rcr
rcl
sub
pushf
add
pushl
mov
push
test
cmp
cmp
test
pushf
pusha
jmp
sbb
hlt
loopne
mov
int3
push
sbb
je
cmp
out
xchg
dec
je
cmp
call
imul
les
and
sub
hlt
adc
clc
sbb
je
cmp
jp
push
sbb
je
cmp
movsb
mov
sbb
hlt
inc
cmp
dec
inc
xchg
dec
hlt
out
cmp
jecxz
jo
inc
mov
cmp
syscall
hlt
sbb
je
cmp
sub
dec
je
cmp
inc
mov
sbb
je
cmp
insl
in
xlat
sbb
je
cmp
aas
sbb
dec
hlt
loop
mov
int3
push
sbb
je
cmp
pop
lahf
dec
je
cmp
sbb
sbb
hlt
push
cmp
jmp
mov
xlat
jmp
xchg
dec
hlt
out
add
xchg
sbb
je
cmp
subb
outsl
lahf
dec
hlt
daa
cmp
or
hlt
fidivrs
xchg
xor
sub
hlt
in
cmp
add
inc
xchg
dec
je
cmp
ljmp
hlt
loopne
xor
lahf
sbb
hlt
jecxz
js
lret
push
sbb
je
cmp
jg
sbb
je
cmp
in
mov
push
xchg
mov
fsubp
andb
sbb
hlt
dec
cmp
jo
dec
sub
std
cltd
faddl
je
loop
add
popf
dec
hlt
jae
stos
js
mov
je
ds
and
popf
dec
hlt
out
mov
jne
mov
xchg
cmp
loope
rcrl
hlt
mov
sbb
xlat
out
mov
cmp
pusha
jmp
sbb
hlt
loop
mov
push
jmp
dec
hlt
pop
cmp
mov
dec
je
cmp
dec
pop
mov
hlt
xchg
cmp
jl
mov
mov
fsubr
stos
add
fnstcw
mov
je
mov
inc
xchg
sbb
adc
jne
jecxz
cltd
out
and
mov
add
push
cld
cmpsb
adc
lret
inc
xchg
push
loope
sar
and
popf
and
xor
cmp
outsb
cmpsl
mov
or
xchg
adc
pop
pop
pop
mov
fisttpl
and
orl
sub
lds
and
xchg
push
dec
mov
lods
jae
fwait
sbb
mov
jbe
lcall
add
add
insl
lock
pusha
jmp
pushl
popl
movb
pushl
ret
pushf
lea
jae
push
pusha
lea
jne
jmp
bswap
call
pushf
jmp
push
pop
pop
daa
pop
fstp
inc
rolb
inc
dec
in
adc
das
cmc
xor
sti
dec
cmp
pop
sub
arpl
movsl
std
iret
cmpsb
pusha
jno
adc
adc
pop
add
testl
lods
hlt
inc
fsubrl
and
mov
jbe
push
sbb
aas
lcall
jmp
fs
push
xchg
imul
pop
aam
adc
push
shll
int
out
jb
jbe
or
pushf
not
test
pushf
mov
test
sub
pushf
jmp
movl
mov
push
pusha
pushl
popl
mov
pushf
pushf
pushf
pushl
ret
adc
pushf
call
and
mov
test
mov
insl
push
xor
rclb
ss
pop
pop
mov
sbb
pxor
out
inc
xor
test
lock
push
mov
stc
out
mov
xchg
jg
mov
out
pusha
xchg
insb
and
fimuls
shrb
pop
sub
inc
dec
push
lcall
aam
cs
shufps
pop
mov
and
jl
mov
jb
ja
in
movzbw
lea
pusha
movb
mov
movb
xchg
pop
bswap
movl
pushf
bswap
movw
lea
call
bt
call
add
xchg
lret
xor
divb
and
frstor
mov
outsb
mov
loop
fdivs
push
pop
in
cld
jb
dec
or
mov
fdivrs
sub
add
jbe
lret
rorb
call
mov
sbb
pop
fdivr
call
push
js
mov
fs
je
cmc
cmc
add
cmp
call
neg
call
rol
clc
sub
add
clc
mov
pushf
cmp
pushf
pusha
lea
jb
test
cmp
jmp
pusha
jmp
inc
mov
mov
inc
pushf
movb
pusha
lea
jmp
pushl
popl
pushf
mov
pushl
ret
jmp
pushf
add
bt
cmp
movb
pushf
lea
jb
clc
cmp
cmp
call
lea
jae
xchg
push
dec
mov
call
movb
push
lea
je
jmp
pushf
cmp
jmp
call
lea
mov
movl
mov
pushl
call
int3
mov
test
int
sbb
lds
add
loope
push
shlb
dec
imul
jg
cwtl
adc
pusha
leave
in
leave
and
aaa
fcmovnb
jg
sbb
cwtl
inc
adc
xor
cld
push
or
insl
sbb
push
pop
mov
lods
outsb
aad
lcall
int
notl
pop
or
jno
sub
or
and
mov
push
stos
cmovne
mov
push
jge
scas
adc
ret
xchg
lods
sti
loop
push
lock
xchg
test
jl
push
jns
pushl
pushl
mov
lea
call
jmp
pop
lea
lea
bswap
pop
jmp
bswap
lea
movsbl
lea
push
movl
jmp
movb
lea
jb
bt
stc
jmp
jmp
add
inc
js
je
jb
arpl
jae
mov
movl
pushl
mov
movb
call
not
pushl
inc
call
push
mov
loope
xchg
add
xor
pop
xor
xor
adc
and
mov
mov
in
iret
int3
inc
cmp
jne
ja
jp
jae
or
lahf
push
mov
xor
mov
into
ret
dec
das
adc
mov
bound
cmpsb
xchg
xor
dec
int
jno
pop
xchg
mov
inc
push
pop
int
incl
mov
pop
or
add
test
call
enter
cmpsb
cmp
jne
push
jne
icebp
sbb
out
jmp
jb
jnp
js
pushf
pusha
lea
ja
jmp
movb
add
loope
add
cmp
cmp
imul
enter
loop
push
pop
mov
loope
loopne
cmp
shrb
cmpsl
pop
push
push
and
aas
pop
mov
mov
je
lods
push
loopne
repnz
pop
dec
cmpsb
stos
and
outsb
jmp
jp
inc
sub
pop
je
call
cwtl
das
xchg
ret
cmpsb
movsb
adc
jnp
push
test
inc
inc
clc
cmp
sub
int
add
sub
ret
pop
ljmp
mov
push
mov
test
orb
push
sbb
sbb
or
dec
insb
into
lret
cmpb
fdivrl
sti
jnp
movsb
fisttps
push
lcall
push
mov
pop
and
cmp
cmc
xchg
mov
dec
rorl
aas
push
fdivs
cmc
inc
fs
imul
mov
jne
cmp
les
sbb
sbb
cmp
in
mov
cwtl
push
lahf
scas
sub
mov
dec
push
repnz
arpl
and
push
jl
sub
xor
stos
sub
sub
cmp
setl
push
and
xlat
cld
jbe
mov
mov
and
fimuls
or
hlt
cmp
rcl
push
outsb
jb
out
sub
fildll
or
sbb
jg
push
das
popf
jb
jl
and
sbb
add
jmp
and
out
sub
jl
or
pop
dec
push
xorb
frstpm(287
fstpt
dec
aaa
rolb
mov
push
data16
inc
test
loop
xchg
insl
sti
call
cwtl
out
je
insl
xchg
inc
sbb
out
mov
jno
inc
test
fcmovne
jb
jge
sbb
setg
cmp
neg
mov
push
cmp
pusha
pusha
push
push
lea
jb
pushf
movw
pushf
cmp
movb
jmp
mov
ds
xor
les
sub
add
dec
fwait
loope
xor
pop
pop
fisttpl
subb
sbb
jns
mov
sahf
pop
scas
cmp
push
mov
xor
iret
rol
inc
pop
adcb
in
lcall
jge
push
imul
iret
sub
out
lods
xor
std
popf
or
scas
test
mov
outsb
mov
or
mov
mov
jno
daa
mov
xor
ret
or
fidivl
int3
xorb
add
scas
out
pop
popf
mov
xchg
or
iret
aad
sub
xchg
out
inc
pop
aas
cmp
aaa
jecxz
and
inc
mov
jle
je
pushf
movl
push
movl
pushf
pushf
lea
jmp
repnz
lods
lahf
fwait
push
and
add
jmp
lret
push
pop
add
and
sbb
idivb
sub
movsl
adc
in
aas
mov
pop
and
push
lcall
andl
ljmp
jmp
push
cli
ljmp
nop
jle
sub
pop
test
cmpsl
popa
pop
ljmp
cs
add
inc
pop
fmull
inc
mov
mov
xorl
push
pop
sub
sub
sti
aas
mov
mov
inc
pop
or
arpl
dec
dec
shl
sahf
jecxz
imul
lcall
stc
and
push
pusha
pop
sub
cmpl
push
dec
cmpsl
jns
push
imull
push
jns
addl
and
dec
out
loop
jge
pop
sti
xlat
cld
xchg
sub
mov
jnp
cs
pop
push
xchg
cltd
or
fcomp
and
xor
xor
test
pusha
push
push
mov
out
pop
sub
out
out
sbb
loopne
mul
scas
xchg
sub
dec
in
lea
jecxz
data16
aam
inc
xor
adc
jg
lret
jmp
xor
stos
push
xchg
test
sub
cmp
lret
inc
sub
fldpi
mov
dec
or
out
sbb
jmp
cmp
mov
std
loopne
fstpt
xchg
jnp
fucom
popa
sbb
fs
xor
cmc
adc
in
movsbl
pusha
movzwl
mov
not
call
jmp
bt
push
imul
jmp
loop
xchg
and
mov
insl
pop
ljmp
sbb
add
pop
imul
xchg
cmpsb
xor
cs
jno,pt
cs
jmp
jbe
mov
xchg
fwait
cmpsb
push
inc
fs
daa
cmp
mov
mov
jp
out
stc
cld
movsl
call
add
adc
mov
inc
or
std
aad
mov
mov
xor
sbb
orl
sub
mov
ret
call
sbb
addr16
add
or
and
stos
jne
mov
and
daa
rclb
sub
lods
loope
xlat
fadd
stos
out
sbb
arpl
mov
sbb
repnz
push
sbb
xchg
leave
lcall
jp
popa
pop
and
stos
or
ja
or
in
stos
lea
fidivl
inc
pop
into
jge
mov
rcrb
inc
outsb
icebp
xchg
or
outsb
shrb
clc
lds
pop
mov
and
mov
sbb
clc
dec
mov
pop
push
loopne
fdivrl
aad
mov
lcall
push
inc
in
or
or
and
jmp
cld
pushf
not
stc
pushw
popfw
mov
jmp
pusha
push
movzwl
btc
movw
movw
mov
call
push
test
clc
cmp
or
call
movw
movb
mov
pushf
pusha
pusha
movsbw
mov
push
pushl
ret
cmp
pusha
lea
jbe
neg
sub
push
mov
lea
inc
xchg
and
mov
bt
not
ror
add
shld
shr
dec
shrd
rol
mov
bts
add
not
movsbw
pusha
mov
lea
push
mov
push
setns
lods
call
add
clc
bt
stc
movzwl
and
pusha
mov
movb
add
cmp
cmp
mov
stc
cmp
test
push
lea
jno
pusha
push
lea
je
clc
push
pushf
jmp
mov
movl
pushf
call
lea
call
push
pushf
adc
movb
push
pusha
pushf
lea
jae
call
sub
btc
push
movzbw
call
add
mov
mov
jmp
pushf
lea
jne
cmp
neg
shr
mov
cmp
call
lea
jb
cmp
cmpb
pusha
jmp
jmp
lahf
cli
and
pop
cmc
sbb
rcrb
mov
pop
lahf
ss
imul
lock
or
pop
mov
in
in
call
xor
mov
cld
jb
jle
jp
sbb
mov
jg
in
jne
jb
inc
jmp
stc
bt
sub
call
pushf
movl
pushl
pushf
movl
movb
pusha
movb
lea
jmp
lock
xchg
jns
sub
jae
jge
jle
jne
cmpsb
mov
outsl
sub
lahf
or
das
cmpsb
sub
push
push
in
and
or
orb
rorb
scas
popa
add
push
pop
inc
imul
add
xlat
je
pop
jae
xchg
pop
insl
mov
jb
xchg
push
xor
les
sub
pop
hlt
stos
test
lods
push
pop
xchg
jno
push
scas
mov
sbb
movsb
xor
and
xor
xchg
addr16
adcb
shl
inc
pop
jg
mov
mov
ss
add
dec
fisubl
es
cli
jecxz
jl
lret
mov
xchg
mov
lea
faddl
jp
mov
sub
enter
jl
push
mov
pop
int3
dec
add
mov
sub
ret
push
mov
sub
cli
leave
xchg
imul
idivl
int3
vpshlq
xchg
inc
mov
mov
add
gs
jns
and
negb
jb
inc
imul
and
jne
sub
mov
cmp
test
cmp
pushf
push
jmp
lods
lock
cmp
ja
aad
fs
push
ret
xor
and
repz
scas
sbb
in
push
mov
pop
push
hlt
scas
je
push
insb
add
xchg
mov
test
scas
loope
mov
jo
jmp
lods
jae
ret
mov
nop
xchg
mov
and
add
mov
aas
stos
daa
push
adc
sti
inc
mov
xor
rorl
push
outsl
push
insl
inc
xor
shll
addb
stc
orb
out
cmc
scas
outsl
push
loope
pusha
mov
pop
push
iret
cmp
shlb
sar
stos
push
jecxz
push
xor
repnz
idivl
nop
testl
iret
mov
arpl
rclb
imul
and
pop
into
fwait
adc
xor
jmp
adc
adc
insl
sub
fbld
jmp
ficoms
test
cmp
call
jmp
push
sub
xor
inc
xchg
cltd
mov
adc
jbe
cmpsl
movsl
test
insl
popa
lods
dec
xlat
cmpsb
stos
push
pop
or
sub
dec
adc
cmp
leave
pop
mov
xor
repz
jb
shlb
das
cmpsl
mov
lods
call
pop
fldt
popa
pop
in
cmp
push
push
jmp
xchg
push
add
add
ja
jae
sub
sub
pop
adc
mov
bnd
push
call
adc
sbb
insl
scas
jecxz
cmp
pop
push
loopne
xorl
jb
inc
leave
adc
pushf
not
pushf
pushf
dec
call
je
jl
iret
push
push
mov
lahf
leave
lock
in
bound
bound
mov
hlt
sbb
xor
shll
lea
or
xor
fcmovb
jge
outsl
or
sbb
xchg
dec
add
jl
or
ja
dec
jl
push
inc
add
push
cmp
xor
hlt
mov
push
mov
mov
je
jnp
das
stos
mov
xchg
mov
lea
stc
inc
xchg
mov
in
movsb
adc
push
inc
icebp
push
sbb
push
cmp
add
int
aaa
add
fnstcw
pop
jne
enter
lods
fistps
mov
ror
jmp
rcl
leave
mov
or
xchg
inc
shll
xchg
pop
jl
in
xlat
xchg
rcrb
scas
push
lds
inc
int
sub
in
jg
lret
ja
outsb
loope
sbb
dec
xor
gs
fldt
push
lods
mov
and
test
pop
inc
js
rcrl
and
fs
lods
aaa
int
and
xor
pop
test
lods
dec
xchg
repnz
dec
das
mov
push
cs
push
rolb
ds
in
mov
dec
add
push
pushf
gs
clc
in
or
cld
aas
jle
sub
mov
inc
insb
lret
push
insb
dec
push
aam
in
or
in
addb
push
lock
mov
jg
daa
insb
bound
dec
jecxz
cwtl
push
lea
jae
clc
push
sub
mov
pushf
mov
lea
call
push
lea
jge
push
lea
jae
pushf
cmc
pushf
xor
jmp
pushfw
popw
jmp
push
call
push
movw
lea
jae
call
lea
call
jmp
ret
daa
push
adc
inc
jno
repz
jmp
mov
xor
loop
sub
lods
mov
jnp
jo
mov
sarl
lds
movb
pushf
or
sbb
bound
cld
xchg
jecxz
lret
outsb
bound
scas
dec
xchg
pop
movsl
mov
mov
push
xlat
jmp
adc
xchg
mov
into
adc
jg
lcall
aad
push
int
add
das
std
or
inc
xor
xchg
mov
jb
dec
les
add
pushf
pushf
movb
push
lea
jmp
inc
pusha
movb
movw
lea
jmp
inc
cli
lds
js
xchg
addb
addb
jge
mov
xor
mov
xchg
test
hlt
sbb
ja
xchg
push
xchg
loope
outsb
mov
inc
int
aam
lcall
mov
add
mov
sarb
fwait
jg
enter
es
push
dec
mov
jno
pushf
pushf
movl
pushf
mov
movl
pusha
pusha
pushl
push
lea
jmp
mov
pusha
jmp
and
int
xor
xor
xor
push
mov
in
dec
pop
fs
in
xor
loope
clc
inc
jbe
mov
mov
daa
cmp
sbb
push
in
rclb
das
mov
imul
aad
test
cmp
lcall
or
rcll
mov
mov
ljmp
sub
cmp
out
mov
dec
or
mov
xor
repnz
jle
lods
fidivrs
push
dec
loope
mov
je
stc
stc
pusha
add
js
cmp
push
lea
je
cmp
bt
clc
cmp
cmp
pushf
jmp
nop
out
in
adc
ss
sti
stc
mov
cli
imul
aas
pusha
out
xor
enter
repz
cmp
loopne
sub
jne
sbb
sbb
scas
and
loopne
sbb
aas
pop
aaa
out
add
mov
add
mov
fistpll
js
and
jge
inc
mov
in
mov
nop
xor
int
xchg
add
dec
and
pop
jbe
je
dec
icebp
inc
test
pop
mov
dec
pushl
dec
subb
push
lea
je
not
call
movl
mov
lea
jmp
test
cmp
setnp
lea
bswap
mov
jmp
movzwl
pushl
not
jmp
pusha
mov
lea
je
not
movzbw
bt
adc
add
ror
not
mov
test
clc
cmp
add
pushf
mov
mov
rcl
not
sar
mov
call
or
jmp
xchg
lahf
movsbw
setl
movl
bswap
jmp
push
pushf
movl
mov
pushf
pusha
movb
movl
pusha
movb
push
pushl
lea
jmp
call
add
pusha
lea
jmp
lea
ja
ror
and
sub
btc
add
bswap
rcl
mov
mov
call
call
or
xlat
movhps
negl
aam
movsb
and
fstp
fadd
xor
dec
iret
push
repnz
adc
mov
nop
loop
out
or
movsb
ss
mov
push
mov
sbb
jne
mov
mov
dec
mov
mov
bound
mov
stos
jno
arpl
cmp
insl
lret
loopne
mov
popa
xchg
pop
xchg
ds
xor
jecxz
xor
sub
ss
ljmp
pushf
psraw
inc
inc
sahf
and
xlat
into
push
fwait
lret
mulb
dec
adc
inc
loopne
cmc
or
outsl
sbb
fisttpl
mov
push
mov
clc
out
jb
dec
jo
sahf
lea
call
call
xchg
movsbw
bswap
pushl
popl
setg
push
push
jmp
sbb
sub
das
push
sub
shr
btr
push
bts
add
push
pushf
mov
btc
movsbl
das
rcl
mov
mov
mov
test
test
test
pushf
push
push
call
ja
pusha
pushf
pushf
movl
movb
mov
pusha
movl
mov
movb
pushf
pushf
lea
jmp
cmc
sub
jp
pushf
add
add
cmc
stc
cmp
add
jmp
pushl
call
add
clc
lea
pushf
mov
stc
cmp
add
jmp
push
push
shl
jmp
push
jmp
not
sete
movl
call
lea
jne
jmp
push
lea
je
clc
cmp
push
pusha
lea
js
pusha
lea
je
cmc
cmp
clc
test
cmp
push
push
lea
je
push
pusha
push
lea
jmp
lea
je
push
pusha
push
lea
jmp
not
mov
jmp
pushl
popl
pushf
pushf
pushf
pushl
pushl
ret
mov
sub
pop
pop
test
sbb
orl
sahf
aam
jo
push
dec
cmp
lcall
call
jae
xchg
mov
iret
pop
mov
mov
in
cmp
push
dec
in
pop
daa
call
jmp
jmp
jmp
and
mov
call
lea
call
call
pushf
xchg
movsbw
not
pushl
popl
call
push
pusha
lea
movl
not
jmp
mov
pusha
pusha
movb
lea
jmp
nop
fistl
cli
ja
sbb
outsl
mov
dec
in
es
adcb
scas
jnp
arpl
test
lock
sub
push
mov
xchg
xchg
xor
not
mov
jmp
movw
push
lea
jne
movsbw
mov
pusha
pushf
lea
jmp
call
int
inc
shr
pop
sti
cmpb
and
mov
call
add
mov
es
pop
popf
mov
add
ds
push
push
lahf
lea
push
daa
imul
xchg
lods
mov
in
mov
jmp
mov
faddl
ljmp
pop
adc
pop
mov
adc
bound
cmp
imul
push
jge
aaa
ret
pop
jecxz
cmpsb
jno
out
paddw
int3
rcrl
dec
pop
mov
mov
inc
rorl
sbb
add
dec
xchg
jb
push
mov
mov
and
jb
pushf
pusha
mov
lea
je
jl
cmp
pushf
pushf
lea
jne
jmp
mov
call
hlt
or
scas
insl
pop
test
lods
ja
ja
imul
jno
dec
xchg
or
imull
xor
jl
call
decb
mov
adc
xorb
mov
xchg
xor
test
adc
jb
push
mov
xchg
clc
neg
cmp
cmp
push
add
clc
mov
test
push
cmc
add
cmc
test
call
and
adc
int
pop
mov
xchg
stos
mov
adc
push
repz
into
and
push
add
and
xchg
dec
pop
lock
add
push
aam
outsb
add
jge
loope
scas
daa
std
mov
movsb
in
mov
mov
shll
shll
jno
adc
sub
scas
dec
hlt
out
imul
or
push
das
or
mov
xchg
push
mov
and
push
xchg
scas
stos
dec
shlb
outsb
dec
push
dec
sub
dec
adc
pop
xchg
jle
fists
push
push
fisubrs
mov
mov
add
sbb
scas
stos
scas
mov
push
cmpsl
ret
out
outsl
popa
das
data16
mov
xor
pop
fucom
adc
adc
adc
mov
jge
mov
or
stos
jl
pop
xor
cwtl
cmp
loopne
add
xchg
push
mov
inc
sahf
dec
mov
xor
and
lods
push
pushf
sbb
pop
std
jmp
dec
or
push
sbb
adc
xchg
pop
jecxz
cmp
pop
gs
inc
nop
adc
cs
test
imul
jmp
in
sub
xchg
mov
js
jp
sub
jb
push
nop
xor
push
je
outsb
movsl
inc
fisttpll
pop
jno
dec
mov
sbb
arpl
insb
test
push
jg
mov
inc
popf
ljmp
es
cmc
mov
fnstenv
xor
out
dec
dec
out
inc
mov
icebp
lahf
jecxz
xlat
cmpl
or
stos
mov
jbe
or
mov
inc
push
iret
xchg
add
push
push
mov
inc
call
push
pushf
lea
je
cmc
cmp
bt
pushf
add
bt
stc
jmp
pusha
movb
movl
pushl
push
movl
pusha
lea
jmp
jmp
pushl
popl
push
pushf
pushl
ret
sbb
pop
int
inc
cmp
mov
hlt
addr16
loope
lock
roll
aas
pop
xchg
cmpsb
or
ja
cli
repnz
pop
xchg
adc
jg
add
ret
movsl
jno
adc
add
pushl
sub
in
mov
pop
in
mov
mov
lds
jno
jp
out
push
xchg
inc
xchg
mov
test
imul
mov
dec
fsubl
je
daa
cld
jle
shl
or
mov
test
mov
test
push
or
mov
xchg
mov
push
add
and
add
or
xor
out
add
ljmp
push
mov
push
adc
xor
rorb
or
xor
sub
aam
shll
cmp
dec
sbb
or
xchg
pop
dec
xchg
pop
push
loope
jno
stos
xchg
and
cltd
push
inc
jge
sub
ss
in
jb
test
sbb
push
aad
stos
out
cmp
and
push
out
insl
mov
mov
out
mov
or
add
mov
mov
add
test
lods
stos
mov
pop
das
and
dec
test
sub
das
in
sub
sbb
mov
xchg
pop
and
sub
cmp
cmpsl
inc
pop
adc
add
sub
add
stc
jno
push
push
repnz
adc
in
leave
push
inc
lea
jmp
jmp
pushf
clc
call
mov
mov
pusha
lea
call
call
mov
pusha
mov
push
pushf
pushl
ret
cmpsb
mov
adc
sub
test
add
cmp
ja
repz
add
loope
rclb
hlt
cmp
and
rcrl
pop
push
icebp
and
call
jbe
xchg
scas
jno
fsubl
sbb
add
stc
push
adc
aas
add
sbb
test
and
adc
add
cmpsl
adc
fs
adc
xchg
dec
insb
test
in
lea
lods
xor
inc
cmp
addr16
jae
mov
jb
push
test
cmp
pop
inc
add
adc
mov
pusha
pushl
lea
jae
pushf
pushf
call
call
pop
or
sub
xchg
cmp
in
ret
xor
imul
adc
cmpb
or
fs
arpl
fninit
data16
cmpsb
cs
adc
mov
faddp
scas
nop
idivb
push
movsl
in
jo
into
daa
movsl
shll
or
lcall
roll
testb
pusha
loope
call
pusha
call
pusha
pushf
stc
and
jmp
bt
jmp
pop
jp
add
or
cmp
mov
jp
jae
mov
xor
addb
call
fistl
add
loop
sub
push
adc
loop
mov
inc
sub
inc
call
xchg
pop
fs
push
jmp
insb
inc
add
pop
dec
adcb
test
outsb
sbb
jo
dec
pop
sbb
jno
mov
pop
jle
loopne
adc
pop
add
fucomip
jp
push
push
out
sub
mov
ljmp
push
clc
mov
mov
pavgw
sbbb
aaa
repnz
ror
xchg
pop
pop
jns
mov
mov
sbb
outsl
sub
insl
loopne
rolb
pop
jb
sbb
je
pop
or
inc
inc
jns
push
cli
pop
sbb
sub
push
push
pop
add
mul
dec
sbb
test
xor
loopne
dec
mov
push
stos
mov
mov
loopne
lcall
push
or
jae
ds
fsts
in
dec
cmpsl
movsb
movsl
sub
dec
mov
sub
out
inc
sub
adc
xchg
movsl
jp
xchg
fisubs
scas
mov
dec
shrb
rclb
mov
hlt
xor
scas
aam
pusha
fwait
iret
xchg
cmpsb
sti
in
jne
pop
dec
jb
pop
xlat
jb
mov
bts
xor
shld
mov
sub
mov
stc
push
movw
cmc
mov
call
aad
push
sbb
dec
sti
mov
sbb
pop
in
add
xchg
mov
cs
ljmp
or
xchg
sub
ficompl
lock
aaa
inc
dec
push
sbb
stos
in
sbb
sub
and
or
gs
fsubl
mov
mov
jns
and
rcr
jo
sub
jmp
mov
arpl
mov
adc
jl
pop
dec
adc
mov
mov
sbb
inc
sub
push
loope
dec
cmp
sub
test
push
pop
repz
movb
push
lea
ja
pushf
pushf
call
movb
pushl
inc
jmp
repz
mov
stos
out
jecxz
outsb
mov
cmc
dec
imul
fisubl
lret
jg
shll
pop
cld
ret
icebp
dec
mov
mov
mov
scas
outsb
push
cwtl
shl
fidivl
push
fldt
shll
addb
mov
daa
out
jmp
mov
test
fcmovne
aad
xlat
sti
dec
lods
scas
fnclex
push
xlat
leave
not
lahf
sti
push
sahf
adc
dec
cmp
lahf
test
mov
lods
or
adc
hlt
fdiv
rcr
mov
xlat
pop
inc
mov
test
lret
dec
push
add
pusha
dec
jmp
push
dec
xor
adc
ja
jmp
loope
cmpsb
jb
inc
aaa
mov
ljmp
addr16
sub
dec
stos
or
outsb
and
mov
ret
jecxz
pop
sarb
sarb
dec
add
push
ret
outsb
and
imul
andl
shl
cbtw
stos
mov
test
fistpll
xchg
lcall
test
scas
repnz
inc
int
mov
shll
rcr
bts
push
mov
lcall
jecxz
scas
outsl
mov
aaa
iret
lret
outsl
scas
pop
mov
fidivs
aas
arpl
pop
pusha
xor
jae
fucomip
add
arpl
cmp
sub
stos
rorl
outsl
jno
arpl
addr16
push
fwait
rcll
pop
xlat
mov
stos
repz
fldt
xor
mov
fisttpl
xlat
dec
and
mov
inc
inc
arpl
outsl
jno
loope
jmp
mov
rcr
or
pop
push
dec
inc
pop
arpl
pop
jecxz
mov
and
insl
adc
loopne
lods
fwait
push
stos
mov
iret
cmpsb
sbbl
jecxz
jg
ret
jno
cmpsl
pop
pop
and
sub
rcl
lret
sbb
jno
fists
push
sahf
lea
iret
mov
imulb
gs
imul
add
cld
cs
sbb
cli
mov
call
je
jbe
imull
mov
std
lods
test
inc
xchg
dec
jmp
cmpb
rorl
lds
imul
lods
cmc
hlt
xchg
mov
mov
pop
mov
sbb
mov
xor
in
std
sbb
out
or
push
dec
repnz
sbb
mov
xor
mov
icebp
dec
cli
and
jo
cmp
hlt
jg
lods
enter
inc
push
repz
cld
and
sti
jb
adc
shrl
jmp
mov
stos
or
jmp
push
sub
daa
jmp
xor
mov
out
sub
fnsetpm(287
cmp
jmp
and
ret
xor
cld
xchg
dec
nop
imul
add
les
push
push
sahf
inc
lock
or
adc
or
mov
push
xor
xor
mov
das
pop
pop
jb
sub
adcl
mov
adc
pop
imul
mov
or
pop
mov
inc
ficoml
loope
mov
mov
out
adc
sarb
ret
int3
sbb
popf
pop
xor
and
repnz
sub
or
imul
jmp
addr16
jmp
cmpsb
lret
out
imul
dec
or
jle
rol
sarb
scas
push
int3
dec
scas
sub
dec
sbb
fistps
xchg
sub
or
lock
mov
dec
lahf
add
mov
jae
sub
jno
xor
jae
jno
cli
pop
hlt
push
mov
push
sub
cmp
or
cmc
inc
stos
mov
or
negb
xchg
pop
ret
bound
scas
or
mov
add
ss
sar
clc
repnz
push
clc
mov
push
jecxz
popa
stos
imul
sahf
fisttps
xorl
xchg
pop
mov
lret
int
add
aam
aad
gs
cs
sub
jns
stos
mov
int
iret
cli
push
test
mov
imul
fimuls
cli
cld
loopne
pop
scas
fnstenv
mov
loope
mov
mull
push
insb
mov
dec
lea
rolb
adc
popa
push
add
sbb
mov
mov
sub
loope
lods
mov
lock
mov
mov
push
adc
lock
test
add
fidivl
xchg
fcom
in
jecxz
lahf
jle
repnz
call
cmpsl
jae
in
or
stos
cwtl
out
inc
mov
jmp
xchg
inc
cmp
in
jecxz
adcb
adc
or
dec
cltd
lret
repnz
cld
sbb
push
out
lock
mull
aaa
sub
and
imul
sbb
jbe
xor
push
mov
jb
sbb
adcb
out
xlat
test
mov
shll
mov
add
ret
cmpsl
das
push
repnz
call
cli
adc
in
ja
in
fidivl
mov
xor
pop
clc
imul
pslld
icebp
stos
or
repnz
fdivs
mov
arpl
bound
out
les
repnz
stos
adc
nop
mov
pop
leave
mov
mov
xchg
rclb
mov
jo
add
cli
push
mov
rcrb
xor
test
daa
in
lods
mov
lahf
mov
in
ljmp
out
ljmp
pop
or
pop
xchg
adc
shll
out
xor
sub
jo
or
aad
or
push
lock
dec
or
mov
into
lcall
pop
fcmovb
popf
and
sti
pop
pop
addr16
loopne
div
mov
out
cltd
pop
adc
out
insl
mov
mov
das
mov
lods
iret
sti
or
sarb
xorl
dec
out
mov
cs
ret
adc
sbbl
lods
out
repz
out
std
xchg
adc
push
xchg
lds
lahf
sahf
mov
std
lret
ret
fstl
fisubs
sbb
mov
sahf
mov
or
mov
sbb
pop
mov
sbb
cmp
rclb
arpl
cld
nop
in
mov
mov
iret
sbb
push
popf
jno
or
repz
jmp
push
xor
ret
mov
imul
out
in
lods
int
fucompp
test
jnp
xchg
outsb
mov
cmc
xor
add
in
inc
movsl
jo
jge
lds
xchg
ds
push
sbb
xor
dec
mov
adc
mov
jno
xor
push
xchg
xor
ret
hlt
movhps
mov
pop
test
rorb
sub
lods
pop
insl
sarb
imul
push
movsb
mov
pop
out
psubsw
mov
mov
push
sub
mov
xchg
mov
cmc
sub
xchg
lods
pop
xor
xor
dec
xor
sti
sar
sbb
stos
fidivs
xchg
dec
cmp
cltd
repnz
std
pop
mov
push
sub
sub
or
out
mov
imul
aaa
sub
popf
icebp
mov
into
jbe
push
mov
dec
cmp
call
das
mov
lock
mov
loopne
fwait
gs
icebp
lods
jecxz
inc
mov
xchg
mov
mov
xchg
cli
mov
push
imul
insb
js
fimull
sbb
inc
fs
dec
mov
scas
stos
sub
cmp
or
popa
dec
inc
repz
cwtl
adc
out
hlt
sub
push
xor
mov
push
data16
inc
push
test
or
jb
repz
ljmp
lds
or
push
mov
and
pop
xor
pop
pop
repnz
out
jae
cmp
sbb
jae
iret
arpl
pop
sbb
aam
adc
aaa
xchg
and
jp
sub
fildl
adc
in
inc
or
sti
lret
jae
fisubrl
out
popa
cmp
xor
xchg
out
rcrl
lock
imul
loope
lock
test
outsb
daa
xor
fwait
mov
fwait
pushf
adc
cltd
and
or
or
lea
mov
lock
out
out
push
or
scas
xchg
pop
cmovle
sbb
push
sub
jno
cli
lea
sub
dec
dec
loopne
imul
clc
out
fmuls
adc
xlat
adc
and
sbb
jmp
ss
cmp
lock
in
xchg
and
or
xchg
icebp
mov
lcall
sub
popf
mov
jmp
sbb
or
pop
jo
sub
cs
xor
in
outsl
add
cmpl
sbb
mov
mov
sarl
xlat
add
mov
inc
mov
or
orb
cltd
popf
xor
in
mov
pop
mov
jecxz
push
adc
shll
test
ljmp
ret
outsl
es
adc
jmp
pop
and
ja
outsb
cld
sbb
out
ja,pn
loope
cltd
dec
in
mov
inc
cmpsl
ja
xchg
pop
call
out
jbe
mov
dec
or
enter
add
out
mov
icebp
outsl
xor
jnp
lea
out
shrl
ret
ret
pop
jae
add
jecxz
clc
jmp
mov
push
mov
stc
mov
pop
nop
lods
ret
es
jmp
or
inc
jecxz
jmp
ljmp
mov
pop
addr16
int
jb
add
pop
nop
enter
fucomi
insb
mov
lret
icebp
sbb
jmp
lock
scas
mov
push
dec
fucomip
mov
lahf
movsb
mov
rcll
lock
shl
jmp
je
adc
pop
lods
jae
mov
aam
push
lret
movntq
out
pop
jecxz
dec
dec
mov
add
gs
adc
xchg
and
out
jmp
insl
popf
sbb
mov
ficoml
jmp
cmp
lahf
ja
pop
stos
fmul
outsb
dec
aam
mov
js
insl
dec
dec
sar
and
mul
pop
aaa
aas
mov
mov
lahf
jnp
mov
xchg
ljmp
sti
cld
mov
out
add
jecxz
stos
outsl
in
mov
mov
fsts
aaa
lcall
fstpt
testb
inc
shll
push
xor
imul
stos
out
stos
push
outsl
add
pop
orl
mov
jae
cmpsl
ja
shll
jno
inc
ja
lcall
inc
outsl
rcll
cmpsl
shll
jae
pop
xor
pop
mov
scas
lea
inc
pop
iret
or
addr16
xlat
test
pop
fbstp
into
fwait
iret
jae
aas
xlat
popa
loope
mov
lret
jmp
mov
inc
jae
fwait
aaa
pop
stos
popf
xchg
mov
jecxz
xorl
daa
enter
jmp
shlb
add
ja
push
sarl
outsl
ja
testl
dec
push
pop
jae
xlat
sarl
ret
dec
cld
xor
lret
mov
pop
iret
out
sub
enter
stos
imul
add
fisubl
rol
lcall
mov
xchg
pop
add
or
push
or
adc
cs
mov
dec
jmp
lods
repz
lds
fcoml
dec
inc
daa
xor
jecxz
xchg
or
push
push
scas
dec
jecxz
mov
or
aad
mov
outsb
sti
std
sbb
jg
xchg
out
aas
pop
popa
xchg
xor
or
pushf
sbb
rcrl
xor
pop
jecxz
inc
and
das
xchg
inc
mov
aaa
inc
jmp
cmpsl
stos
cmpsl
jecxz
stc
icebp
out
push
sub
fimull
xor
ret
xchg
jbe
in
in
and
dec
repz
jo
in
or
xor
jmp
xor
dec
loopne
xchg
lock
out
cmp
sbb
fisttps
outsb
in
dec
xor
mov
push
cmc
test
movsl
sbbl
or
les
ljmp
mov
and
push
cltd
movsl
in
sub
xor
adc
push
mov
cli
xchg
xlat
cmp
push
sub
or
jmp
sarb
popa
out
xchg
pushf
aad
or
addr16
mov
jmp
aaa
cmp
add
dec
das
gs
adcl
es
pop
into
pop
icebp
mov
imul
xchg
ja
in
sub
loop
scas
shrb
aaa
cmpsl
mov
iret
fbld
push
ficomps
ljmp
xchg
mov
xlat
or
scas
mov
jb
mov
dec
mov
adc
pop
in
or
jg
lock
sbb
jge
mov
push
lock
scas
mov
adc
sbb
sahf
mov
xchg
mov
rcll
mov
or
sub
in
mov
inc
rol
mov
cmp
aas
mov
shl
fabs
or
add
mov
aad
fisubs
out
out
mov
int3
dec
arpl
jbe
ret
call
sbb
icebp
fmulp
cli
xchg
lret
xor
pop
pop
add
add
aad
in
outsl
pop
sti
push
out
xor
ss
repnz
xchg
jge
or
js
and
lds
mov
sub
mov
pusha
xchg
test
out
int3
xchg
push
cmp
movsl
in
int
test
cmpsl
dec
dec
loopne
xchg
mov
cmp
jbe
aam
cmc
out
and
or
adc
xchg
sti
int
cmp
lahf
push
pop
lahf
dec
jae
loope
js
fistpl
lret
push
fmuls
popa
out
jns
jmp
sbb
xor
pushl
test
or
sub
outsl
imulb
test
repnz
sub
xchg
push
or
mov
inc
push
xor
fistpl
xchg
adc
and
in
ljmp
jb
lock
outsl
outsb
push
mov
roll
ljmp
jle
test
cli
push
outsl
mov
fisttpll
insb
cmc
and
jae
loope
imul
in
sbb
cwtl
sub
jecxz
adc
cmp
imul
adc
pop
dec
jl
stos
xor
pop
inc
cltd
out
bound
add
jp
cmp
lds
cmp
repz
or
int
mov
stos
xchg
sbb
push
lahf
movsl
inc
cli
jno
sahf
mov
push
add
lcall
shl
repnz
mov
dec
pop
jno
pop
loope
shl
mov
cmpsl
jns
fwait
dec
imul
pop
lahf
mov
loope
or
dec
dec
mov
loope
pop
inc
shrb
jg
xchg
aam
fistpl
bnd
or
js
push
shl
inc
jle
in
xchg
stos
dec
sbb
aaa
or
or
in
divl
dec
lret
inc
add
jg
pop
mov
jae
stc
clc
adc
sbb
jbe
ja
and
repz
aaa
iret
pushl
jmp
push
ficoms
lahf
jno
pop
adc
and
mov
pusha
fwait
cmpsl
cli
and
outsl
and
adc
push
sti
iret
out
or
ret
pop
xor
adc
xchg
lea
xor
or
or
arpl
xor
cmp
call
lcall
cmp
repnz
xchg
loop
sahf
jbe
stos
mov
add
repz
mov
loopne
pop
pop
mov
enter
iret
xlat
mov
ja
mov
pop
jle
dec
xor
shll
jecxz
sarl
jae
cmc
cmpsl
xor
int3
xor
clc
lahf
ret
xlat
and
lcall
das
imul
arpl
xor
xchg
inc
mov
and
add
push
push
shl
out
xor
shll
add
out
sbb
inc
fdiv
jo
xor
xor
and
aaa
and
popa
pushf
outsb
and
mov
adc
and
fsts
dec
sbb
dec
cmpsl
xchg
bnd
scas
xor
mov
out
add
push
jne
adc
mov
ljmp
push
repnz
lret
roll
jno
cmpsb
out
mov
fsubr
rcr
cmc
dec
scas
test
leave
daa
mov
into
mov
rcll
cmpsl
fstps
fisttps
mov
mov
das
jmp
mul
testl
out
jnp
mov
loope
outsb
sub
pop
popa
jp
stos
sbb
xchg
pop
les
adcb
sub
pusha
sahf
cli
lods
xchg
xchg
adc
mull
mov
pop
popa
test
and
jmp
arpl
data16
lea
incb
loop
ficomps
mov
sub
push
xlat
ret
jmp
je
add
pop
leave
sti
xchg
xchg
fwait
cmp
jbe
jmp
sbb
adc
and
je
clc
sbb
in
fwait
xlat
jns
add
pop
repnz
pop
cltd
jae
sub
mov
testl
xor
adc
push
push
scas
stc
test
cs
pop
lods
ret
push
ja
jb
mov
loopne
xor
mov
popf
fdivs
sbb
sbb
stos
sbb
lods
lods
mov
jno
or
push
pop
cld
sub
mov
add
push
idivb
stos
xor
add
xchg
jno
sbb
out
mov
sub
lods
je
ljmp
cmp
cld
xor
jmp
out
mov
out
push
add
shll
pop
in
jl
dec
call
int3
addr16
or
enter
push
aam
lahf
xchg
leave
or
jecxz
jmp
cmp
mov
pop
mov
cmp
and
jno
in
or
xor
cli
fstpl
sti
out
push
cs
aad
sar
xchg
xchg
movsl
xor
into
aad
push
ret
test
in
dec
cli
jb
inc
popa
out
inc
xchg
test
mov
fcmovne
xor
cmpsl
push
xor
addr16
imul
iret
jle
fs
cmpsb
sub
outsb
or
ljmp
sub
xchg
pop
xchg
out
xor
mov
lcall
ljmp
jmp
pusha
xchg
mov
test
xchg
mov
lret
and
cld
adc
sub
adc
sub
push
jmp
inc
push
mov
cmp
cltd
jne
xor
test
cld
jge
mov
xor
cmc
int3
pop
dec
cli
aas
ja
std
sbb
lods
xor
bound
ret
and
xchg
iret
mov
mov
cltd
xor
mov
imul
dec
nop
in
hlt
jo
xor
fsub
sub
dec
sbb
xchg
adc
cwtl
ret
loope
sbb
jb
inc
loopne
je
icebp
mov
out
mov
ljmp
outsb
leave
xchg
dec
aas
iret
pop
jg
pop
cmp
inc
faddl
sahf
add
out
xchg
in
adc
jmp
imul
inc
arpl
inc
out
mov
sbb
cwtl
pop
adc
lcall
lcall
dec
lret
jb
or
mov
inc
jb
cmp
xchg
sub
inc
and
mov
idivl
test
jecxz
mov
add
sbb
jge
inc
out
insl
push
outsl
sti
xchg
or
xchg
mov
enter
inc
movsb
mov
ja
outsb
dec
int
and
icebp
or
add
inc
shlb
xchg
xlat
mov
jno
lret
adc
jae
icebp
outsl
push
sub
and
pop
out
xor
fldenv
stc
ljmp
jge
cld
and
or
xor
cli
fmull
push
lea
add
add
sti
mov
add
mov
and
mov
jg
je
push
sub
mov
adc
test
dec
leave
pusha
aaa
sbb
pop
mov
mov
nop
ja
iret
stos
nop
jae
outsb
jecxz
add
mov
popa
jl
dec
and
hlt
xlat
lock
add
push
hlt
arpl
stos
xchg
sub
jne
mov
xchg
mov
or
int
pop
scas
cwtl
xchg
xor
loope
ss
loope
loope
std
das
aam
pop
icebp
mov
rcrl
sub
sbb
xor
mov
subl
jb
gs
arpl
jl
xchg
pop
mov
bound
mov
loopne
jg
pop
mov
mov
or
dec
mov
push
sub
stos
jle
pop
xchg
mov
out
pop
test
mov
jmp
ja
in
cmc
pusha
js
das
push
mov
or
mov
cmp
cwtl
cmp
jge
lock
out
or
loope
je
add
into
idivb
imul
addr16
lahf
mov
mov
xchg
and
cmpsl
and
push
xchg
repz
cmp
or
roll
stc
in
out
or
sahf
addl
and
pop
and
pop
in
bound
sti
mov
xor
xchg
std
leave
in
out
or
aas
sbb
sbb
es
lcall
shl
ljmp
sub
cmpsb
negl
jae
xchg
test
gs
icebp
jmp
out
into
aad
outsl
stc
lret
sbb
scas
loope
lods
aaa
fsubrs
inc
xchg
mov
mov
push
js
push
loopne
push
or
mov
loop
sahf
mov
std
icebp
movsl
xchg
xchg
jne
call
popf
ljmp
addr16
or
ja
add
out
pop
jbe
lock
enter
fisttps
xchg
inc
push
jb
jae
push
jg
sub
ret
es
push
test
outsb
add
cmp
and
and
xchg
enter
cmp
into
mov
mov
adc
jb
adcl
push
mov
jecxz
fcmovu
lea
test
or
push
mov
push
xor
sbb
cmp
shr
int3
xor
mov
dec
mov
xrelease
sbb
aas
lcall
jg
imul
gs
rorb
loopne
or
fsubrl
sbb
outsb
inc
and
ljmp
test
jae
sahf
mov
or
fsubr
add
lahf
pop
sar
out
xor
stos
sti
mov
and
sub
cmpsb
sarl
pop
or
jg
into
mov
test
xchg
lret
in
jmp
mov
jae
lcall
mov
add
pop
scas
test
pop
fldt
mov
loopne
jb
inc
outsb
pushf
or
pop
stos
xor
mov
push
cld
test
das
or
out
ljmp
mov
jae
mov
in
mov
xorl
xor
icebp
mov
adc
inc
or
mov
dec
dec
inc
dec
stos
jnp
outsl
call
or
push
scas
mov
iret
jae
dec
jl
jne
cmpsb
mov
insb
push
popf
push
mov
dec
mov
push
lret
sti
cmpsl
inc
mov
out
and
xchg
loope
cld
sbb
icebp
lret
ss
ljmp
or
cmp
and
jecxz
mov
mov
push
pop
fistps
jge
roll
imul
outsb
mov
and
adc
dec
jmp
mov
cltd
sti
mov
insl
mov
hlt
cld
sbb
mov
bound
push
rol
xchg
and
test
mov
cmpsb
mov
rcr
in
dec
cltd
sbb
inc
mov
adc
dec
aam
ret
popf
pop
mov
mov
lret
jnp
xchg
ja
push
jns
and
cli
mov
lock
inc
xchg
jp
xlat
cmc
sub
xor
fisubrs
sti
int3
push
stos
shlb
out
sbb
add
inc
into
jg
push
rcr
fistl
mov
xor
addr16
mov
pop
inc
or
mov
adc
lds
insl
inc
loopne
jmp
sbb
rcl
pop
add
call
or
cltd
std
in
ss
ret
pop
jecxz
adc
andl
mov
mov
std
cmpsl
out
sbb
dec
sub
xor
or
mov
fildll
scas
mov
jae
or
ja
pop
loop
fwait
sbb
or
dec
and
iret
pop
mov
mov
push
dec
scas
or
xchg
lcall
aad
and
or
dec
leave
repnz
stos
xchg
ljmp
loope
mov
jmp
fwait
or
std
stos
pop
sub
leave
std
sti
sbb
sub
mov
and
inc
in
xchg
cld
mov
mull
adc
aas
push
mov
xor
repnz
loope
xchg
cmp
push
jnp
dec
dec
insb
ret
mov
adc
and
inc
in
cmpsl
mov
test
rorl
in
lods
imul
add
pop
iret
inc
xlat
out
xchg
mov
or
outsb
and
or
das
and
sbb
outsb
iret
sti
mov
jae
pushl
stc
mov
add
incl
inc
lret
push
xchg
jno
jns
ljmp
sbb
stos
mov
mov
cmpsl
dec
and
mov
testl
jo
fidivs
sbb
push
int3
xchg
cmpsb
cmp
jnp
ret
mov
mov
popf
sub
mov
push
lock
and
mov
jne
jecxz
mov
hlt
lahf
and
les
lcall
imul
add
leave
loopne
stc
jmp
in
mov
mov
cltd
loope
pop
fldpi
mov
call
xor
std
sub
dec
or
xor
push
xchg
aad
bound
or
lahf
or
stos
xchg
add
sti
mov
das
bound
add
inc
push
call
jae
addr16
jl
jmp
and
and
test
inc
popl
add
dec
mov
and
movsl
and
imul
rep
cmp
push
mov
fistl
aaa
mov
pop
add
push
push
push
xchg
or
out
xchg
aad
ret
stos
add
inc
sbb
jb
sub
aad
xor
jae
mov
add
inc
xor
mov
dec
and
and
pop
push
into
loop
pop
outsb
mov
loopne
das
shr
add
outsl
jo
mov
or
sar
jno
push
cli
xor
push
insb
sub
xorb
repnz
adc
ret
mov
pop
cmpsl
jae
cmpsl
imul
movl
clc
xor
int3
ret
nop
ret
js
mov
adc
xor
jecxz
jmp
fcoms
out
insb
cmc
adc
repz
mov
frstor
lret
xchg
dec
or
outsl
add
inc
clc
dec
in
sub
mov
imul
adc
cmp
in
sbb
sub
jecxz
mov
or
out
pushf
xor
cli
sbb
pop
pusha
sbb
gs
call
das
pop
negb
sub
das
push
xor
int3
and
sub
xor
sti
or
std
adc
lret
mov
mov
imul
push
shlb
sub
fmull
jl
in
sbb
jecxz
add
mov
jmp
dec
rorl
sub
nop
push
rcll
lahf
out
pop
mov
sti
or
rcrl
loope
mov
mov
mov
js
movsl
push
orl
jle
aad
dec
jns
and
sahf
cmp
mov
sbb
jge
aad
js
popf
pushf
leave
pop
sub
pop
xchg
mov
or
fsubs
fwait
repz
ret
cli
or
loopne
pop
aas
icebp
out
adc
dec
inc
je
insb
pop
mov
cld
stos
and
gs
pop
popf
cld
mov
jno
xor
loope
mov
popa
repnz
pop
sar
icebp
or
in
shrb
mov
and
enter
and
mov
mov
sahf
sub
jo
cli
dec
ret
outsb
cmp
mov
jae
push
rcll
mov
mov
aad
data16
loopne
in
sbb
mov
or
xor
xlat
mov
imul
repnz
testb
stos
dec
popa
or
or
sbbl
test
into
mov
pop
xchg
loopne
mov
mov
rcl
jne
mov
xchg
repz
pop
adc
negl
hlt
sub
sarl
cmp
inc
add
inc
cli
popa
mov
fimull
xchg
mov
lret
inc
or
repnz
pop
fisttpl
or
cmp
xor
fwait
ljmp
mov
stos
inc
pop
movsl
add
std
push
lcall
push
jns
lahf
ds
cmpsb
stos
ds
mov
out
inc
movsb
jmp
stos
in
imul
arpl
add
sahf
test
repz
imul
push
out
or
mov
mov
stos
lahf
lds
xchg
in
div
pop
lret
icebp
mov
add
imulb
push
mov
outsl
insl
pop
jb
movsb
xor
sub
mov
pop
out
rcrl
mov
xchg
and
jbe
out
lods
popf
xchg
lods
out
lret
ss
mov
cmp
je
inc
jo
mov
lods
loope
or
mov
xchg
adc
shrb
add
cmc
jae
and
cli
cmp
xor
aaa
jmp
mov
out
and
stos
pop
or
adc
cld
cmpsb
iret
add
test
or
or
or
stos
mov
scas
adc
jge
dec
decl
mov
mov
das
push
adc
or
mov
cs
jae
shll
mov
cld
jg
in
out
xchg
inc
mov
fists
sbb
lret
loopne
into
test
addr16
mov
repnz
mov
xlat
into
inc
out
out
mov
lods
jno
fsubrl
les
cwtl
pusha
mov
adc
mov
sbb
jmp
mov
or
stos
cltd
cmp
cltd
lcall
fistl
mov
cld
scas
sub
push
mov
adc
sub
cmpsl
jl
in
cmc
sub
cmp
push
jmp
xor
out
push
cltd
addr16
rcrb
mov
or
add
iret
push
xor
in
xor
sub
aas
cmc
xchg
cltd
nop
repz
push
pop
jb
popf
repz
cwtl
arpl
and
jo
ljmp
lcall
cld
push
lahf
das
in
push
push
mov
cld
push
aad
pop
loope
mov
out
mov
adc
cs
ljmp
mov
das
or
cmp
mov
mov
mov
jo
stc
mov
mov
cmp
cmp
insb
cmc
in
adc
fsubr
das
cs
shrb
sbb
pop
fimull
cld
ret
pop
flds
ja
inc
add
loope
sti
xor
in
push
outsl
iret
stc
and
add
add
push
adc
sti
sti
cltd
sbb
xchg
xor
or
repz
pop
push
inc
pusha
imul
inc
fbstp
push
push
outsl
cvtpi2ps
jno
daa
call
jae
push
and
mov
adc
push
imul
outsl
mov
push
mov
rcr
lock
jb
inc
mov
pop
lret
movsl
loope
movsl
sub
jno
and
xchg
push
das
int3
roll
inc
lret
push
movsb
add
outsb
hlt
lds
push
lcall
mov
daa
inc
mov
les
sahf
les
adcl
hlt
int
pop
jecxz
xchg
fistpl
test
lret
das
push
popf
jno
test
outsl
sub
sbb
xchg
ret
xor
ret
out
pop
out
or
cwtl
sti
lds
test
sbbb
jo
out
int
je
mov
outsl
adc
adc
xchg
movsb
or
fsubs
aad
jp
inc
movsl
out
cmpsl
test
stos
or
lock
popa
or
cmp
mov
push
mov
outsl
cmc
loop
fs
push
int
mov
mov
or
push
xor
xor
pop
lret
cmp
mov
lret
mov
xchg
fstp
imul
mov
stos
mov
cmp
dec
jae
data16
leave
and
lret
lahf
insb
popf
cli
add
dec
add
add
stos
shrl
orb
jns
out
xlat
fdivrs
or
sub
xor
push
adc
out
adc
adc
mov
test
sti
mov
daa
dec
mov
outsl
jecxz
aad
adc
sti
mov
push
xchg
popa
stos
xor
lods
inc
add
cwtl
ja
cmpsb
cli
data16
dec
dec
movsb
daa
into
lret
jecxz
adc
sub
fisttpl
sub
divl
push
sbb
add
mov
xor
xchg
out
ret
dec
pop
xchg
ds
andl
out
into
xor
and
nop
in
sbb
push
sub
ljmp
repnz
adc
int
lret
and
das
imul
mov
movsl
pop
adc
das
push
and
cmp
ljmp
iret
scas
ljmp
mov
rcrb
pop
cmp
outsl
leave
push
xor
xor
test
adc
cmc
fildll
imul
scas
and
and
mov
adc
lret
jno
sbbl
xchg
xchg
xchg
jbe
shlb
mov
push
jge
sub
or
pop
lret
roll
or
fsubs
mov
mov
aas
xorb
dec
add
imul
push
inc
loop
stos
pop
fsubrl
sub
inc
icebp
sub
push
ret
out
mov
xchg
daa
fistpl
inc
int3
idivl
or
inc
and
enter
lahf
or
in
fsts
cmp
pop
push
in
adc
pop
push
cmpsb
or
or
out
std
xor
outsl
sbb
lock
or
or
sbb
pop
or
jecxz
ljmp
jae
int3
jno
fistl
cmpps
sbb
mov
jmp
mov
or
sbb
push
xorb
and
aad
fisttpl
out
outsb
lahf
shrb
repnz
pop
repnz
xchg
repnz
add
cmp
cmpsb
lret
ljmp
sti
lcall
jmp
aad
jb
mov
popf
aaa
mov
out
pop
dec
scas
rcrl
dec
dec
adc
cmpsb
inc
repnz
inc
das
out
in
out
cld
pushf
sub
mov
sar
shll
xlat
leave
pop
addr16
popf
jmp
fistpl
pop
fisttpl
pop
nop
mov
cmpps
jmp
mov
lret
sub
mov
and
adc
lahf
stos
outsl
rorl
xchg
and
jne
popa
mov
mov
jmp
push
loope
icebp
jg
cmpsl
jecxz
dec
add
pop
jae
cmp
xchg
pusha
pop
roll
inc
inc
shrl
enter
lret
lahf
outsl
addr16
and
xchg
mov
fisubrl
out
cmpsl
fidivs
outsl
nop
outsl
jecxz
popf
mov
loope
pop
sti
mov
shr
stc
mov
cmpsl
out
mov
mov
jecxz
xchg
pop
stos
lahf
out
pop
rol
jge
lret
jae
mov
cmpl
daa
enter
outsl
stos
out
lret
fldt
mov
lret
xchg
lea
out
pop
lret
mov
ret
loope
mov
lret
shrl
inc
push
jecxz
pusha
mov
aaa
insl
adc
mov
iret
mov
ljmp
push
imul
enter
mov
rcll
pop
cmp
jmp
mov
inc
inc
mov
das
push
mov
xchg
dec
imul
outsb
shr
pop
jp
fildll
dec
xchg
dec
loop
cmp
or
add
add
mov
xor
lock
ds
xor
pop
sbb
mov
jecxz
cmp
jmp
into
fistps
jns
shlb
in
es
out
inc
in
push
xor
lret
mov
rcrb
out
jle
or
movups
rcrl
icebp
sahf
mov
adc
pop
push
mov
jae
jecxz
movsl
xchg
sub
sbb
rolb
lret
mov
mov
std
fildll
xlat
or
mov
prefetch
in
rcr
scas
mov
rcl
and
mov
dec
add
loopne
xchg
xchg
pop
mov
xor
sti
mov
mov
dec
sbb
je
rorl
sti
mov
in
clc
das
dec
cmpsb
test
xchg
or
es
adc
pop
add
das
in
out
icebp
add
imul
mov
int3
test
jne
jmp
or
push
loope
ret
push
les
outsb
out
inc
adc
jge
fisttps
in
xor
stos
jae
fnstsw
repz
jns
shll
jae
jmp
pop
xchg
add
adc
cmp
ljmp
in
out
mov
mov
test
int
jb
sbb
sbb
add
pop
lret
scas
inc
or
mov
cwtl
mov
mov
fsubrl
fdivl
mov
leave
mov
lods
inc
push
jb
sub
roll
add
jae
dec
sub
into
jecxz
mov
cmc
and
out
lock
cltd
imul
add
outsb
adc
or
dec
jo
shl
mov
sahf
jns
into
shr
shr
lea
adc
pop
mov
sbb
mov
sahf
mov
dec
iret
mov
loopne
add
les
add
mov
ds
repnz
out
dec
sbb
ss
cmpsl
or
ret
or
in
adc
push
push
xor
pop
lret
sbb
jae
je
push
jo
jle
push
mov
shlb
call
and
ljmp
adc
insb
xor
in
mov
or
out
ret
and
xchg
fiaddl
sbb
mov
fldt
mov
repz
pop
popa
in
ret
or
pusha
push
xor
stos
fisttps
outsl
maskmovq
mull
loope
shrb
mov
xchg
cwtl
push
shrl
movsl
pushf
jo
xor
sub
jmp
sbb
pop
loope
push
push
add
push
jb
ret
jg
jecxz
int3
cmc
lcall
insl
and
pop
mov
add
jno
jne
pusha
sti
dec
and
jb
dec
mov
fiaddl
rcrb
cmp
xchg
shrl
push
xchg
fsubrl
sbb
mov
leave
mov
xchg
dec
fwait
stos
sbb
or
arpl
pop
sub
sti
loope
vmread
push
sub
add
movsb
push
ss
inc
add
or
adc
inc
int
mov
and
icebp
xor
js
xchg
popa
inc
stos
cwtl
dec
sbb
imul
stos
bnd
mov
push
xchg
fildl
mov
loopne
xchg
xor
test
jg
inc
fistl
pop
icebp
and
sub
mov
mov
lahf
mov
jecxz
fnstenv
jmp
pop
jo
cmp
fucomi
xchg
jg
ja
dec
shll
push
jcxz
pop
jmp
mov
fnstenv
mov
mov
sub
jmp
imul
out
or
mov
hlt
xor
cltd
fmulp
mov
lret
jnp
dec
jg
xor
adc
imul
mov
fcoms
jl
stos
xchg
dec
mov
mov
fistpll
in
outsl
je
mov
out
xor
iret
jecxz
imul
repnz
jno
mov
lret
mov
stos
out
fisubl
fistpll
pop
and
jmp
pop
rolb
sar
xor
jecxz
out
divl
repnz
mov
push
jecxz
mov
and
adc
int
mov
scas
xchg
dec
loope
repnz
leave
push
mov
inc
dec
lret
xor
dec
addr16
jae
out
mov
and
jmp
dec
shrb
jae
or
mov
cmpl
jmp
lea
xchg
in
bound
shrb
xchg
aam
test
mov
mov
mov
sub
adc
imul
mov
popa
fsubrp
fldt
and
xor
jg
sbb
mov
mov
jecxz
outsl
jnp
mov
pusha
imul
mov
mov
ja
nop
pop
jecxz
inc
inc
jecxz
sub
popa
jg
pop
adc
mov
jae
mov
inc
add
scas
mov
out
jno
loopne
mov
sti
mov
push
ljmp
xlat
dec
inc
popf
mov
pop
stos
cmp
pop
mov
pop
pop
out
popf
xchg
mov
fnstsw
jmp
stos
dec
sub
dec
pop
cmp
popl
mov
mov
scas
lret
ret
lahf
add
lea
jmp
cmpsl
mov
mov
or
sbb
pushf
or
notl
adcl
ljmp
mov
mov
fcmovne
inc
or
mov
stc
inc
cmp
jmp
pop
stos
sahf
movsl
xor
hlt
test
sbb
or
ja
sbb
ret
pop
out
imul
iret
or
shr
ljmp
sub
shrb
jg
push
and
jae
js
sti
ljmp
and
cmp
cmp
imul
leave
in
mov
xchg
pusha
or
subl
cmpsl
xor
or
push
sub
idivl
std
xor
xchg
push
sar
mov
out
sarb
popf
ljmp
add
pop
cmp
mov
xor
xchg
popf
shlb
jno
test
lcall
aam
imul
je
or
sub
scas
leave
repnz
mov
mov
jecxz
ds
dec
xchg
push
xchg
cmpsl
xor
das
nop
jae
fiadds
outsb
test
in
sbb
test
push
mov
push
sti
or
inc
jg
push
fwait
push
pop
int3
xchg
sub
mov
lock
and
and
inc
xor
jle
rorl
scas
icebp
xlat
push
sbb
xchg
fwait
ja
fcmovbe
jecxz
shlb
mov
out
cmp
outsb
mov
mov
shr
jns
xlat
movsl
cld
std
mulb
adc
pop
mov
ret
pop
sbb
cmp
mov
push
scas
out
gs
sub
addr16
lahf
sub
pushf
stos
das
ror
cmp
rol
lcall
xchg
lods
sub
lcall
lret
les
arpl
insb
jae
test
cmp
iret
or
cli
call
stos
adc
insl
fistps
add
ucomiss
shr
mov
loope
adc
inc
ss
or
int3
outsb
testl
aam
into
adc
in
ljmp
pusha
jnp
jnp
shll
jbe
sub
and
sbb
inc
sbb
or
or
jecxz
jle
test
cmp
sub
stos
jae
ret
lret
ret
xlat
mov
loopne
push
inc
scas
int
lret
mov
xchg
lea
xor
lock
add
add
sub
add
gs
repnz
repnz
fdivrs
cli
push
insl
jnp
pop
and
push
scas
push
insb
dec
xchg
mov
mov
fildll
or
pushf
repnz
jmp
insb
sbb
mov
mull
xor
lock
cmc
daa
int3
cli
scas
jae
jge
repz
cld
fimull
ficoms
fisttpll
test
dec
test
mov
imul
aam
mov
add
stos
inc
cmp
movsl
out
icebp
mov
dec
clc
mov
mov
test
pop
dec
rcll
lret
out
xor
adc
sbb
pop
lea
dec
popf
push
mov
add
mov
lret
mov
inc
les
out
push
mov
jmp
insb
sbb
xor
or
divl
xor
inc
scas
dec
xorb
cld
push
ret
std
ljmp
fisubs
add
outsb
popf
nop
popa
jecxz
test
in
cli
mov
outsl
movsl
cmc
xor
push
aam
xor
popa
push
fldcw
pop
out
and
add
inc
out
mov
add
mov
mov
cmp
dec
popf
addr16
pop
mov
or
jge
outsl
ret
adc
push
mov
adc
stos
or
sub
push
adc
xchg
xor
cli
pop
jno
xchg
cmp
sti
push
jno
and
test
ret
push
insb
xchg
iret
dec
push
cmp
or
jae
scas
inc
inc
hlt
lret
push
inc
out
jmp
xchg
int
ret
sub
shl
mov
out
add
dec
cmp
mov
fldt
popf
shr
sbb
nop
outsb
xchg
dec
jbe
jmp
cmp
test
shll
jecxz
jmp
bound
lahf
or
mov
sbb
dec
pop
in
dec
iret
out
jmp
mov
mov
jg
adcl
in
sarb
dec
scas
cli
je
push
aas
fimull
daa
int
jae
rcl
stc
mov
fcoms
rep
shlb
xchg
jmp
repnz
push
xor
shrb
mov
ds
mov
or
sub
mov
out
or
dec
out
add
in
arpl
cmpsl
mov
pop
fwait
fwait
imul
xchg
jecxz
lret
mov
pop
fidivrs
mov
fisttpl
dec
jmp
jns
dec
lret
jnp
fisubrs
push
or
daa
stos
es
iret
and
out
pop
repz
out
mov
dec
push
cmp
out
jecxz
outsl
mov
into
ror
repz
sbb
cmp
out
sub
dec
xchg
mov
adc
arpl
popf
fistpl
sub
aas
jae
outsl
push
cmpl
pop
int
jae
jg
mov
int
mov
scas
iret
shrl
and
and
repz
xlat
mov
loope
mov
add
sbb
pop
mov
repz
scas
or
dec
fwait
sbb
aaa
iret
xchg
jnp
jecxz
cmp
daa
mov
or
jae
mov
inc
jnp
andl
dec
arpl
popf
sti
mov
scas
mov
sub
imul
xchg
lret
arpl
sarl
push
push
fninit
sahf
or
enter
sub
jno
popf
icebp
std
xor
lret
mov
xor
xchg
loope
push
cltd
jle
pop
push
mov
add
subb
xlat
jae
es
sub
sub
fwait
test
mov
js
ret
push
push
lea
add
xchg
lock
and
dec
insl
movsl
fninit
mov
jo
sub
in
inc
and
mov
xchg
sub
sbb
imul
stos
pushf
mov
cmp
inc
xor
ret
and
jg
std
ss
add
add
jmp
cmpsl
ds
push
shl
xor
bnd
sub
jns
aam
sbb
push
or
xchg
sbb
cmp
test
repnz
xchg
xchg
jmp
imul
or
mov
xor
jp
dec
subl
clc
xor
sub
cs
jae
notb
pushf
push
xchg
lahf
fsubrs
in
imul
cli
data16
adc
das
aam
jge
dec
cld
mov
pop
jge
lock
push
leave
adc
add
jecxz
ret
inc
mov
xor
or
sub
ret
call
xchg
jns
lahf
popa
jl
and
and
mov
fmull
push
or
popa
jno
in
mov
pop
repz
movsb
adc
arpl
cltd
cli
ljmp
dec
jg
popa
out
sub
dec
bound
inc
xor
in
push
and
test
add
incl
test
adc
iret
inc
push
aas
push
xchg
ljmp
jnp
repz
xor
and
loope
pop
xchg
call
mov
sub
sub
add
or
pop
mov
hlt
and
or
jb
push
cmp
jecxz
mov
leave
sbb
cmp
sbb
lods
inc
mov
ljmp
mov
xchg
jmp
loopne
mov
xchg
dec
loopne
fdivl
mov
pop
add
mov
gs
in
jns
dec
sbb
xchg
lock
in
dec
jbe
in
push
mov
ss
addr16
sahf
xchg
mov
stos
addl
cmp
or
push
inc
mov
sti
or
jb
pop
leave
das
inc
or
pop
in
cmp
cwtl
repnz
jnp
iret
jb
rcll
scas
ss
dec
repz
mov
stos
inc
sbb
pop
and
sbb
and
aaa
pop
pop
scas
mov
sbb
cmp
xchg
imul
xor
rorb
test
xacquire
pushf
and
jmp
sub
jns
cli
icebp
jno
push
sbb
sahf
cli
mov
loope
pop
xor
jp
in
lcall
icebp
ljmp
stos
cmp
es
mov
das
lods
xchg
test
sub
or
or
pop
pop
fmull
rclb
scas
mov
xor
jne
arpl
ss
add
pop
adc
sub
pop
cs
xor
popa
rclb
outsl
mull
push
push
inc
or
and
cli
in
mov
xlat
lods
jp
mov
dec
cmpsb
js
jle
cld
rcrl
mov
jne
bnd
or
lahf
sahf
and
adc
xchg
in
cwtl
fdivrl
testl
and
repnz
xchg
roll
stos
scas
rorl
scas
jmp
dec
leave
xor
data16
lahf
mov
sub
inc
lock
outsl
xorl
leave
stos
ficoms
add
adc
daa
and
pop
sti
arpl
out
cmpsl
je
repnz
or
jb
mov
or
xchg
dec
and
jno
sbb
lock
mov
sub
clc
repz
push
mov
orl
fwait
out
in
or
pop
jo,pn
ljmp
ret
add
les
xor
fisubs
sub
scas
sub
mov
adc
std
sahf
sub
add
mov
jl
daa
fwait
xchg
clc
ljmp
jne
cmpsb
mov
popa
clc
sbb
add
dec
dec
addr16
mov
test
dec
push
movsb
jns
jo
cs
and
and
mov
pop
or
or
pop
test
mov
fwait
xchg
lret
mov
inc
cmp
mov
inc
stc
jo
scas
popa
loopne
out
movsb
out
outsb
adc
sahf
jnp
sbb
fcmovnbe
repnz
fwait
dec
icebp
ret
mov
stos
jmp
lock
les
add
and
rcrb
scas
bnd
stos
cmp
out
xor
inc
shlb
gs
adc
xchg
ficomps
loope
dec
xchg
cmc
rcll
popf
mov
or
cmpsl
movsl
enter
bound
stos
popa
cmp
mov
in
push
inc
js
xor
ja
and
xchg
fcoms
ret
nop
divb
or
add
or
in
scas
sbb
xor
imul
pop
fstps
sbb
test
iret
lea
ds
mov
pushf
push
jmp
or
repnz
sbbl
je
enter
in
enter
call
pop
cmpsb
pop
pop
cli
mov
enter
popa
cmp
ficoms
jae
movsb
in
jb
mov
pop
cmp
nop
cmpsl
ffreep
mov
push
popf
push
icebp
dec
xchg
lret
sbb
mov
or
and
jae
cmp
rol
rorb
call
out
mov
cld
imull
aad
inc
xchg
pop
dec
dec
divb
scas
jge
add
cmpl
shlb
stos
cs
mov
repnz
nop
sbb
aam
mov
stos
pop
push
push
ljmp
pop
psubsb
das
cmp
add
sub
inc
adc
pop
xor
cld
cmp
and
jae
nop
cmp
or
push
jmp
dec
sub
mov
or
fistpll
mov
stos
loope
in
dec
popf
imulb
mov
mov
and
or
js
stos
cmp
popl
imul
lret
ljmp
add
cltd
xor
imul
or
jne
cmp
leave
imul
stos
cli
ds
int
adc
dec
jp
jno
or
hlt
pop
gs
mov
cmp
roll
mov
adc
out
sbb
lret
daa
lahf
sub
xchg
lea
test
inc
mov
mov
inc
sub
insb
or
push
repz
mov
iret
fistl
pushf
xchg
cld
jne
inc
mov
aas
insb
xor
cld
bound
movsb
icebp
inc
add
scas
ret
leave
mov
xchg
push
ds
fdivl
add
test
xchg
and
insb
cli
adc
cs
mov
les
leave
adc
in
mov
ds
cli
xor
push
js
fldcw
arpl
pop
or
jnp
popa
or
int3
mov
out
and
gs
je
repnz
es
loopne
mov
pop
lea
cld
push
lea
iret
repnz
sbb
dec
and
outsl
inc
sbb
ljmp
xchg
add
jb
mov
cld
jae
pop
mov
clc
in
inc
and
in
and
pop
add
or
or
adc
std
and
call
and
jae
or
dec
pop
mov
repnz
xorb
pop
cmc
push
xchg
shlb
iret
or
dec
push
mov
leave
loopne
pop
mov
sbb
in
cmp
inc
mov
outsb
xor
xchg
xchg
mov
stos
repnz
push
xor
and
repz
arpl
lahf
ret
push
or
sbb
hlt
int
imul
xchg
shrl
lcall
inc
mov
das
sbb
or
or
adc
data16
enter
jae
push
mov
popf
xchg
xchg
add
popa
out
movsl
and
pop
stos
out
lret
jb
into
jb
pop
ficompl
mov
pop
xchg
jno
and
mov
lret
mov
cmp
insl
sahf
xor
xchg
dec
jl
mov
sahf
imul
jp
iret
cmc
xor
jno
push
daa
pop
je
lret
movsb
push
ljmp
out
mov
adc
outsl
add
adc
mov
popf
mov
xchg
fildl
pop
lds
daa
nop
ror
in
in
pusha
adc
pop
xor
dec
xor
int3
sahf
sub
mov
dec
inc
cmc
cmp
xor
add
mov
cmp
fsqrt
xchg
sub
and
push
or
and
in
or
push
dec
int
imull
jae
loopne
inc
mov
lcall
ljmp
push
push
icebp
ret
aad
test
scas
shll
loope
pop
ret
inc
mov
jns
std
jmp
aam
ss
jns
xchg
push
sti
and
xor
in
mov
lock
or
les
mov
xchg
cmpsl
jecxz
adc
std
xor
pop
loopne
subb
and
pusha
inc
and
adc
mov
fisttpll
rolb
or
and
lods
ljmp
std
jae
and
imul
outsl
pop
hlt
lret
adc
inc
jae
inc
std
cmc
jo
pop
pop
imul
jmp
clc
mov
fdivr
or
into
jge
dec
aad
push
aas
out
adc
or
hlt
iret
and
movsb
mov
movsl
leave
int
lahf
xor
sbb
inc
mov
scas
scas
lahf
or
pop
rcll
insb
cmp
insl
pop
pushf
dec
or
jb
or
adc
adc
and
outsl
cli
and
xchg
push
cmp
mov
sub
into
sub
call
cs
ret
push
cli
out
xor
inc
sub
lcall
mov
inc
aas
mov
mov
cmc
lahf
lahf
push
popf
ret
rcll
add
or
and
cmp
xchg
add
and
shlb
repz
dec
sahf
xchg
movsl
in
pop
xor
mov
sbb
pop
movsb
push
mov
out
xchg
jbe
je
cs
mov
mov
or
jno
mov
idivb
or
stos
mov
sbb
fcoml
xchg
rol
dec
add
and
stos
push
push
mov
stos
mov
sub
int3
imul
xor
or
and
dec
dec
mov
jge
in
mov
movsl
cltd
mov
jle
jae
repnz
fists
push
in
arpl
in
lret
ljmp
xchg
mov
adc
or
inc
sbb
aam
adc
loop,pt
out
mov
mov
addb
pop
dec
stos
or
insb
shlb
cs
pop
sub
push
idivl
push
cmp
pop
aad
imulb
mov
scas
or
push
idivl
fs
sub
jl
or
pop
push
dec
in
hlt
jo
sahf
mov
ret
xor
leave
into
jg
push
sbb
lea
add
shlb
movsl
scas
xchg
xor
pop
jecxz
std
aaa
mov
sbb
imul
lret
xchg
lret
and
fcoms
and
cli
out
jae
insb
push
in
cmp
dec
xchg
or
notl
xlat
hlt
call
loopne
jecxz
out
shl
sbb
pop
jb
or
sub
cli
jno
add
orb
sbb
xchg
cmp
fwait
cmp
loope
inc
or
outsb
or
push
roll
dec
filds
push
xchg
into
and
jb
pop
cmpsl
pop
icebp
lret
mov
mov
aas
xorb
push
hlt
mov
lcall
leave
ljmp
sbb
sub
jmp
pop
mov
test
psadbw
movl
mov
or
pop
idivb
xchg
mov
popf
pushf
pop
in
pushl
mov
xchg
sahf
cs
dec
movsl
sbb
lea
mov
mov
enter
mov
jnp
cmp
mov
movsb
jae
in
icebp
mov
enter
jp
xor
and
fs
lock
lret
xchg
dec
xor
ljmp
shrl
or
mov
push
in
jp
mov
fisttpll
or
inc
adc
aaa
pop
xor
cmp
push
sbb
mov
int3
xor
out
push
fisubs
aaa
test
out
lret
mov
out
push
icebp
cltd
std
sub
mov
push
lret
rcrl
xchg
pop
cmp
fistpl
fwait
mov
clc
or
js
test
lcall
fistps
sbb
stc
ljmp
ret
and
in
cmc
xor
inc
dec
mov
sbb
decb
mov
xor
inc
daa
mov
lock
movsl
mov
push
test
xchg
add
or
push
dec
sub
int
lods
xchg
ljmp
stos
cs
cmp
jo
clc
sbb
dec
fstpl
jmp
push
push
and
cmp
in
call
imul
popa
sti
icebp
xchg
jge
cmpsb
and
or
out
lods
repz
sub
lock
mov
dec
loopne
popa
fs
adc
mov
xor
pop
mov
pop
push
cmp
sbb
adc
cmp
iret
pop
iret
push
gs
jae
push
adc
push
add
inc
popa
push
inc
or
std
sbb
fucom
ds
out
jb
lret
cli
loope
jae
int
fcoms
jne
xlat
iret
jno
mov
lret
or
xchg
sbb
ljmp
stos
icebp
mov
negl
out
shlb
adc
std
das
rcrb
call
icebp
push
mov
and
push
cmp
cltd
out
sbb
xchg
or
jne
out
scas
data16
hlt
arpl
push
dec
in
dec
gs
cmp
sub
arpl
cmc
jg
ss
data16
popf
mov
shlb
testb
sbb
stos
adc
jmp
outsl
inc
or
xchg
imul
jg
add
push
lahf
iret
push
push
out
cmpsl
cmp
lcall
mov
mov
outsb
sbb
cmp
push
or
mov
lea
pop
mov
jg
adc
dec
pcmpeqw
addr16
xchg
push
dec
xchg
sbb
dec
loopne
add
mov
inc
push
push
sub
repnz
pop
cmpsb
stos
mov
cmpsl
pop
mov
in
mov
cmpsl
lods
inc
jb
or
and
nop
aam
repz
mov
xchg
push
xchg
mov
mov
lret
enter
fiaddl
add
popf
inc
ret
push
mov
sti
movsb
movsl
sahf
lea
fistpl
std
cmp
nop
mov
mov
mov
testb
pop
sbb
sbb
cli
push
xchg
pop
call
push
scas
mov
loope
or
push
les
out
cmpsb
pop
filds
push
add
dec
xorps
mov
popa
push
mov
mov
cld
cmpsl
jp
add
jmp
std
pop
mov
xor
cmp
rolb
push
cmpsb
les
fimull
dec
pop
dec
jbe
cmpsl
loop
or
icebp
xchg
mov
out
xchg
mov
and
dec
scas
push
loope
add
rorl
mov
xor
or
and
mov
xor
xchg
sbb
into
sar
stos
xchg
push
sti
push
cli
insl
or
pushf
sbb
and
stos
cmp
loopne
and
jmp
jg
xor
mov
jecxz
jmp
sarl
ja
sub
mov
push
icebp
xor
sub
ret
lds
aaa
loop
mov
mov
and
scas
repz
ret
xor
and
xor
cli
pusha
aad
mov
testl
jnp
sbb
into
push
psadbw
in
jecxz
mov
jle
xor
pop
loopne
cld
cmp
push
xchg
movsb
test
cltd
sub
push
dec
mov
mov
and
and
mov
sub
outsl
add
mov
and
bswap
es
mov
and
jecxz
aam
pop
add
icebp
mov
stc
jmp
adc
sbb
push
and
add
fisttpll
add
sub
adc
xchg
out
out
xor
dec
ficompl
and
aam
inc
in
or
xchg
xor
je
repz
hlt
lcall
outsb
jb
inc
pop
out
xor
andb
push
mov
push
lcall
push
mov
mov
std
xchg
les
cmp
test
stc
jmp
inc
cli
out
ret
stos
dec
and
loop,pn
jbe
cld
lret
mov
cmpsl
jbe
out
lds
lods
mov
or
lcall
in
psubsb
in
cli
pop
nop
mov
ret
inc
xchg
test
jbe
dec
pushf
jae
mov
aad
ljmp
lret
mov
sub
mov
enter
lret
xor
insl
jge
xchg
mov
andl
sarl
ret
pop
and
pushf
inc
inc
outsb
dec
xchg
jmp
pop
int3
add
xor
loop
lahf
lds
inc
and
pop
inc
into
sbb
out
mov
inc
stc
xor
mov
out
fistl
and
jae
test
test
push
mov
xor
enter
pop
mov
ret
pop
push
out
stos
push
repz
push
dec
adc
xor
mov
mov
stos
aaa
or
popf
jno
mov
mov
imul
data16
das
push
push
push
adc
scas
jmp
pop
aad
cmpsl
mov
or
into
jne
and
sub
xor
or
stos
movsl
outsl
test
sub
call
lods
leave
adc
scas
jg
loope,pt
repz
pop
and
scas
lock
push
not
mov
push
fwait
and
stos
pop
loopne
adc
test
push
test
ja
jp
jbe
pop
lods
icebp
loopne
or
ror
in
jle
add
mov
add
call
arpl
pop
jle
sbb
das
les
in
insl
sub
dec
adc
popf
movsb
icebp
pop
cwtl
or
sti
leave
ffree
jp
add
mov
mov
into
inc
push
sub
paddsb
lea
gs
and
inc
ljmp
dec
roll
les
mov
mov
adc
xlat
stc
lods
jae
lahf
push
and
xor
cmp
pop
loopne
xor
or
fs
jmp
jno
sahf
lods
or
add
sub
xchg
cmp
xchg
test
in
aaa
pop
or
pop
jmp
cmc
or
adc
dec
sbb
mov
mov
sub
jge
pop
fcmovnb
mov
test
popf
into
pop
loop
in
ja
test
fisubl
jb
imul
in
sub
push
adc
xor
out
mov
xchg
addl
les
fmull
cmp
sar
and
inc
fdivrs
mov
jecxz
in
xchg
cmp
jecxz
mov
and
mov
add
inc
outsb
or
or
std
and
test
out
lock
icebp
cli
cld
pushf
dec
ljmp
push
into
lret
xor
orb
cmp
sub
lahf
repnz
outsb
mov
lahf
jg
idiv
cmpsl
popf
jns
jb
imul
fisttpll
icebp
xor
lock
lret
cli
rcr
or
sub
dec
mov
out
adc
mov
and
cwtl
jne
ss
mov
std
xor
rclb
icebp
into
fisttpll
ja
test
fwait
ret
ss
les
inc
cmp
dec
cwtl
loop
xchg
mov
jmp
out
out
push
xchg
sti
repz
mov
fcmovnu
or
pop
arpl
imul
cmp
lret
xlat
ret
lret
jl
jmp
loope
add
shl
pop
aaa
cmpsb
jg
out
jae
adc
xor
push
jnp
rcll
ds
and
fisttpl
mov
xor
pop
push
add
ljmp
adc
jle
ret
sub
or
push
das
call
xor
iret
xchg
inc
and
out
jne
and
out
sbb
add
xor
in
les
fs
popf
fistpl
lret
ljmp
outsb
mov
in
xchg
xchg
and
test
dec
mov
jmp
icebp
or
lahf
mov
or
mov
scas
orb
adc
dec
std
fmuls
and
push
mov
stos
or
cs
dec
adc
jae
je
ss
dec
movsl
hlt
push
inc
das
xchg
addr16
movsb
or
dec
mov
jp
jmp
fcmovnbe
cmp
icebp
fcom
and
jle
jne
sbb
and
cld
push
mov
fbstp
out
mov
repnz
mov
cmp
adc
xchg
inc
adc
iret
xor
imul
xor
lock
mov
pop
ret
inc
iret
fisubs
out
mov
or
and
sub
push
dec
pop
ljmp
out
cmc
pop
or
mov
mov
inc
mov
cmovnp
shl
inc
or
addr16
dec
xchg
xchg
sahf
movsl
incl
scas
lock
or
lret
sub
sbb
pop
inc
jmp
pushf
jno
ret
divb
sbb
mov
ds
push
cld
sbb
or
mov
pop
fsubl
xchg
and
mov
popf
imull
fldcw
mov
ret
imul
movsb
jecxz
dec
fcmovnb
inc
scas
dec
and
xor
push
mov
bound
sub
movsl
outsl
ret
movsl
and
lahf
pusha
xor
xor
xchg
xor
lock
inc
pop
jno
mov
cltd
add
fwait
insb
or
jge
mov
mov
mov
xchg
lcall
xchg
out
loope
pop
lret
jl
div
addl
mov
dec
mov
mov
xchg
mov
in
push
xor
out
das
sahf
incb
data16
inc
dec
jae
out
jb
pop
pop
pop
cmp
mov
js
stos
fucom
fildll
lods
jns
ret
scas
test
pop
test
dec
mov
fsubp
xlat
xor
int
fmulp
out
ja
mov
cmp
push
loopne
es
movsb
add
xchg
cli
pop
mov
push
sbb
dec
sbb
mov
mov
or
iret
ret
imul
jnp
testb
jl
cmp
cltd
mov
out
adc
repz
inc
sbb
jae
ror
sbb
rol
fstl
pop
out
std
fistl
int3
dec
jmp
mov
lret
xor
test
sti
sar
repnz
lret
shll
mov
es
xorl
lock
xor
or
mov
repnz
or
mov
cmpsl
pop
mov
mov
enter
pop
adcb
xor
in
sahf
cmpsb
cmp
idiv
sub
stos
pushf
push
jnp
mov
mov
outsb
mov
rol
cli
pop
cmp
and
push
add
or
iret
jne
int3
dec
jecxz
push
call
pusha
mov
fwait
jae
ds
pushf
stos
sti
dec
xchg
xor
jg
cmp
in
push
or
arpl
and
cmc
mov
movsb
and
inc
cli
jecxz
sti
mov
xor
dec
into
or
jmp
pop
sub
ret
ror
loope
mov
cmp
fistpll
dec
out
lahf
or
adc
cltd
sub
jo
bts
and
sbb
xor
xor
xor
fbstp
sub
or
and
lahf
les
sbb
cli
push
adc
mov
repnz
xor
ffree
sbb
push
in
mov
in
clc
add
ljmp
loope
clc
xchg
call
jmp
lock
or
jns
les
sbb
mov
in
xchg
inc
rcrl
enter
add
mov
into
push
mov
sub
add
ja
dec
mov
jno
or
dec
lahf
pushf
xor
int
decb
fisttpl
std
repnz
sub
in
xor
mov
and
outsb
into
add
les
jmp
or
xor
stc
lock
out
stos
loope
jns
fildll
xor
pop
inc
add
insb
lock
adc
std
arpl
pushf
cmp
mov
push
add
movsl
cmp
or
xchg
mov
pop
fisttpl
fsubr
inc
xchg
imul
jmp
adc
dec
sub
testl
mov
std
movsl
mov
mov
sahf
aad
or
outsl
inc
jmp
xchg
es
jle
push
test
addb
js
or
inc
xchg
jo
jo
in
xor
jle
dec
pop
jns
rcl
mov
xchg
popf
cmp
sti
adc
pop
sub
adc
ljmp
pmaxub
fcomi
dec
lods
enter
pop
popf
jb
or
decb
push
xchg
xchg
imul
arpl
or
addr16
mov
sbb
daa
iret
and
xchg
adc
cli
xchg
mov
cmp
sbb
mov
aas
add
xor
movsl
lret
mov
jae
or
iret
xor
std
popa
add
loopne
add
out
mov
or
push
adc
fnsave
notl
pop
xchg
lret
or
shll
call
stos
push
out
outsb
jnp
dec
xchg
xor
lret
pop
or
mov
stos
test
pop
push
cmc
sub
jae
arpl
fldt
and
mov
and
jns
jae
push
insb
data16
and
sbb
mov
ljmp
push
push
inc
lods
xchg
hlt
movsb
push
dec
scas
xor
movsl
pop
xor
and
xor
xor
jecxz
popf
adc
pop
inc
lret
pop
xor
xchg
data16
inc
sub
jg
imul
or
add
push
ret
notl
push
xor
cmc
mov
fwait
push
pop
mov
adc
jg
hlt
sbb
das
or
insb
call
inc
push
out
sub
cli
test
xor
je
inc
loope
ja
bound
mov
dec
bound
jnp
jb
or
jno
or
adc
insb
adc
jb
mov
mov
faddl
and
sub
xchg
shll
mov
iret
or
and
add
cli
ret
scas
cmp
ret
lods
mov
jb
repnz
or
leave
xor
mov
mov
or
icebp
and
fldl
sub
in
xchg
or
add
xlat
cmp
pop
adc
mov
push
inc
icebp
mov
lods
ret
mov
out
cmc
xchg
push
or
mov
outsl
pusha
jae
mov
push
int3
ss
bound
pop
stos
pop
jno
jb
addl
out
mov
test
mov
pop
adc
div
repz
xchg
dec
incb
scas
dec
cmp
leave
dec
pop
fdivr
imul
pop
fmull
sarl
push
call
scas
mov
pop
std
mov
mov
ficomps
cmc
cli
mov
orl
mov
stos
dec
jecxz
mov
jae
mov
divl
and
in
xchg
cltd
push
push
repnz
add
xchg
divb
incb
fs
shl
mov
add
js
lds
mov
mov
out
mov
aaa
shlb
or
popf
mov
stos
adc
push
push
into
imul
test
fstps
jge
cli
push
lock
or
add
mov
cmc
xor
repnz
pop
inc
mov
out
mov
mov
jecxz
dec
popf
adc
sub
insb
xchg
adc
popf
xchg
jbe
lret
ret
or
sub
sbb
movsl
push
xchg
sub
repz
mov
lret
loop
test
fists
aaa
xchg
or
push
jns
repz
data16
cld
insl
or
jle
push
mov
bswap
test
ljmp
cltd
or
aas
repz
adc
lods
jae
and
mov
ss
jbe
jge
stos
cltd
xor
call
mov
cli
xor
sub
pop
lea
dec
fiadds
inc
xchg
hlt
stos
nop
iret
jp
frstor
lds
ficompl
pop
cmp
inc
pop
dec
or
and
out
in
movsl
xchg
jb
xchg
sti
mov
test
adc
lret
mov
or
int
aam
sub
sti
cld
les
mov
cmp
scas
xchg
shll
mov
pusha
lahf
xor
push
or
enter
sub
sahf
or
in
push
pop
mov
adc
dec
movsl
leave
shll
sbb
std
add
ljmp
dec
cld
pusha
sub
pushf
out
ds
aaa
or
ja
fstpl
pop
fldt
cmp
inc
es
aaa
adc
mov
pop
lea
sub
sti
pushf
nop
in
btc
jb
fs
inc
lods
loopne
pop
fs
mov
xor
xchg
out
or
loope
push
psubq
cld
sbb
mov
or
sub
cmpsl
int3
std
cli
mov
cmp
sbb
movsb
es
lahf
adc
out
cld
lret
mov
incl
out
stc
inc
and
dec
cld
jmp
jnp
mov
sub
les
dec
out
sbb
dec
dec
jo
xor
outsl
inc
pop
pushf
iret
cli
les
jecxz
dec
test
or
pushf
mov
or
fwait
xor
aas
pop
repz
jg
mov
push
mov
and
push
push
mov
xchg
xchg
int
inc
sub
pop
push
cmpsl
popf
pop
inc
push
mov
inc
loope
shlb
push
adc
ljmp
fbstp
pop
push
call
push
sahf
pop
push
add
test
popa
jo
or
test
inc
loopne
dec
scas
ja
in
cli
cmc
xor
jg
dec
out
or
xor
in
or
cmpsl
jae
aaa
pop
and
call
cmp
or
lds
mov
sbb
test
or
cmc
push
out
and
xchg
xchg
jle
dec
xor
dec
fwait
pop
pop
mov
xor
fisttpll
jbe
flds
pop
int3
dec
subb
fwait
add
jo
lock
pop
orb
out
sub
aam
inc
xchg
stc
xchg
sub
mov
xor
sbbb
jae
lods
in
add
adc
jb
or
mov
sbb
dec
out
das
mov
sahf
enter
into
xchg
xchg
xor
mov
mov
loopne
xor
cltd
pop
lods
cli
push
stc
mov
lahf
je
pop
aas
cwtl
dec
in
add
xchg
sbb
push
fldcw
in
and
pusha
add
out
scas
fldcw
sub
outsl
xor
adc
daa
stos
mov
xchg
cli
or
psllq
mov
xor
push
lret
cld
and
sub
xor
pop
xor
js
mull
pop
or
xor
xor
inc
jns
sub
and
mov
inc
xorl
mov
jbe
ret
jecxz
sbb
dec
cmp
and
adc
mov
inc
jo
jno
mov
into
js
pop
push
push
lret
jge
xor
or
shrl
sub
cmp
pop
mov
push
ljmp
outsl
or
push
sti
jge
lock
fisubl
xchg
pop
ljmp
dec
cmpsb
mov
push
popa
call
push
xchg
mov
or
adc
push
scas
mov
jecxz
pop
out
sti
std
fidivrs
int3
enter
rcrl
sub
lret
pop
push
testb
popf
jb
adc
int
mov
add
imul
and
xor
in
push
cli
ss
xchg
test
xchg
xor
sahf
nop/reserved
xchg
or
inc
jnp
negb
sub
and
mov
mov
fisubrs
in
add
adc
cmc
sub
mov
pop
xor
call
in
inc
sbb
mov
ja
inc
cs
aaa
out
mov
lods
push
sbbb
lds
movsl
add
xor
and
pop
in
imul
lret
sbb
push
addr16
insl
je
mov
xlat
or
das
jg
sbb
shll
dec
pop
into
lahf
sub
or
xchg
mov
movsb
jge
fwait
loopnew
or
or
mov
daa
lock
loop
cli
sub
mov
pop
pusha
xorl
std
scas
iret
jl
mov
pop
mov
fidivrl
dec
jg
mov
and
ret
sbb
fstpt
lds
xchg
shr
fbstp
or
repnz
cltd
aas
pusha
mov
aaa
subl
dec
imul
mov
loope
cmp
xchg
mov
or
and
pop
pop
push
lret
inc
xchg
shrl
mov
rcll
jae
jno
iret
mov
rorl
pop
addr16
std
dec
nop
inc
movsb
pop
in
push
insb
add
xchg
mov
int
xchg
scas
cmp
lcall
cmc
fistl
mov
movsb
mov
xchg
in
std
xchg
dec
sti
push
push
stc
mov
subl
or
in
pop
leave
add
enter
mov
sub
pop
mov
mov
cmc
sub
pop
pop
int3
mov
sahf
mov
repz
mov
repnz
dec
add
clc
fisttpl
test
and
jb
lahf
imul
out
fwait
push
ss
int3
mov
mov
or
pop
push
lea
das
addr16
mov
xchg
scas
loop
inc
call
mov
aad
movl
mov
xor
ss
out
push
add
data16
jp,pn
out
push
mov
dec
and
pop
jle
push
or
xchg
call
mov
xlat
push
dec
jae
or
xchg
pop
add
lock
jb
data16
add
imul
out
inc
mov
push
sbb
adc
jecxz
je
andl
loope
mov
stc
mov
xchg
jno
popa
test
mov
sti
push
jge
mov
jno
sbb
js
jbe
pop
out
or
out
lcall
outsb
arpl
adc
and
xchg
loope
in
insl
fwait
xor
imul
movsl
cmp
out
dec
cwtl
sub
int3
dec
mov
sbb
fbstp
lock
out
out
mov
inc
or
lock
in
movsl
cld
pop
stos
jae
mov
add
ror
jl
stc
jnp
inc
ds
mov
test
out
add
sbb
add
dec
adc
loope
push
insb
filds
inc
std
mov
fldl
lcall
xchg
enter
cmc
fstpt
aaa
cld
jb
outsl
loope
cmpsl
push
aas
call
push
xchg
push
mov
add
in
std
fstl
pop
and
mov
cld
sbb
daa
fldcw
pop
fiadds
sbb
mov
lret
in
fs
sbb
aad
insb
sub
imul
cs
int3
mov
iret
cltd
and
pop
sub
out
inc
ljmp
mov
fs
cmp
pop
mov
sub
push
xchg
sub
fwait
ret
imul
or
mov
push
xchg
push
cli
repnz
mov
sbb
loop
mov
or
jns
cltd
xor
in
sub
mov
mov
sbb
pop
fldl
push
dec
subb
dec
frstor
sub
int
ljmp
lea
push
repnz
pusha
mov
repz
add
adc
insb
roll
sbb
adc
pop
jecxz
cltd
das
or
outsb
mov
jae
mov
pop
rorl
movsl
pop
int3
enter
lds
repnz
mov
pop
sub
inc
xor
pop
jb
sub
popf
add
xchg
xchg
mov
sbb
jns
xchg
jo
cmpsl
iret
rorb
pushf
mov
mov
out
adc
sub
outsl
add
sbb
xchg
cli
popf
and
inc
cmpsl
push
push
and
imul
dec
or
mov
enter
aam
mov
addr16
stos
lret
dec
lock
out
inc
mov
iret
and
pusha
into
imul
push
lahf
je
fdivr
iret
fistps
jmp
jb
dec
push
or
and
fnsave
es
mov
insb
decb
dec
ret
mov
cmpsl
negl
out
out
or
jecxz
inc
jle
pop
ja
cli
adc
vandnps
mov
pushaw
icebp
mov
loope
out
out
scas
movsl
dec
sub
fnstenv
mov
ljmp
or
mov
insl
pop
fdivl
xchg
and
push
pop
or
les
stos
xor
hlt
out
jae
push
jecxz
ret
sbb
pop
in
and
or
sub
cmpsb
add
std
nop
push
outsl
cmp
sub
shlb
nop
repnz
mov
call
cltd
xor
mov
test
popf
mov
push
enter
or
xchg
je
ljmp
mov
cmc
rclb
sbb
stc
add
xchg
jp
leave
lret
repnz
cmp
call
and
insl
out
or
roll
mov
xchg
lret
pusha
lret
sbb
into
xor
cwtl
daa
out
jb
lret
sahf
jns
push
jbe
lcall
loope
mull
arpl
adc
sti
adc
jle
in
jcxz
or
movsb
mov
pop
push
xchg
mov
subl
repz
hlt
push
aas
sti
les
xchg
mov
int3
pushf
in
and
ljmp
xchg
dec
sbb
test
loope
cli
inc
lds
or
cmp
and
mov
mov
cmc
test
cltd
iret
cwtl
sbb
cli
or
outsb
das
add
pop
adc
mov
call
mov
add
dec
mov
cmpsb
mov
mov
cli
movsb
mov
adc
jo
sub
xlat
arpl
shl
dec
stc
lcall
outsl
iret
pop
add
sti
or
dec
iret
lods
mov
test
inc
adc
pop
rol
xchg
dec
ret
jecxz
cmc
pop
pusha
xchg
rorb
pusha
outsb
pop
mov
sbb
in
imul
test
mov
inc
icebp
or
cmp
lcall
aas
arpl
dec
pop
jg
fisttpl
xchg
push
or
pop
mov
push
call
icebp
stos
push
outsl
cmc
sbb
adc
inc
loope
ljmp
add
loopne
push
inc
jge
jmp
jae
imul
mov
adc
clc
imul
pop
rcrb
jae
dec
aad
xchg
dec
shll
dec
loop
sub
cmpsb
int
loope
shufps
call
mov
loop
and
ljmp
shl
lret
fs
stos
jns
cmp
jne
or
add
iret
bound
sahf
fwait
loopne
push
mov
jns
mov
movsb
mov
pop
xchg
insb
bound
pop
cmc
xor
mov
pop
jne
or
mov
lods
and
icebp
cli
jo
rcrl
lret
sub
cwtl
push
ss
adc
pop
daa
adc
jo
cmp
imul
lret
sub
repz
cli
jae
repnz
leave
aaa
mov
cmc
xchg
inc
je
enter
sub
xchg
xchg
daa
popa
mov
int
sub
jo
add
out
test
dec
test
stos
add
aad
and
add
mov
cli
dec
clc
cmp
ret
dec
incb
sbb
mov
test
cltd
pminsw
jmp
mov
sub
push
std
xor
outsl
sub
cli
mov
mov
roll
mov
dec
mov
out
sub
mov
fwait
std
lret
aad
or
cmpsl
enter
ret
js
sbb
push
xor
pop
or
cmp
mov
xchg
jmp
lret
sti
call
fidivrs
shrl
mov
push
add
push
mov
pop
or
test
scas
aad
push
into
add
sbb
push
mov
cmp
jbe
imul
lahf
repnz
jns
movsb
and
cmc
imulb
popf
loop
dec
push
ror
xchg
inc
push
push
outsb
xor
pop
and
and
adc
fimull
scas
pop
mov
push
decb
adc
out
mov
leave
insl
and
mov
shl
sbb
ss
mov
icebp
call
sar
es
repz
xchg
test
or
mov
je
mov
push
stos
rcr
enter
or
icebp
sbb
add
popa
cmc
sub
xor
xor
mov
lcall
test
inc
xorl
jmp
adc
and
jae
pop
in
xor
cmc
xor
sub
insl
inc
stc
in
sbb
cld
dec
bound
aad
mov
fistpl
sub
rclb
and
mov
mov
ffree
mov
fcoml
roll
out
into
cmp
jl
sahf
mov
je
push
cli
pop
inc
pop
mov
push
iret
jl
pop
subb
fiaddl
call
xor
pop
mov
mov
or
leave
icebp
push
out
mov
lds
and
sub
repz
xor
cmpxchg
jno
add
iret
mov
daa
in
adc
xor
push
mov
scas
outsb
or
and
fwait
push
lahf
or
ja
or
sbb
mov
scas
or
jne
out
sar
lcall
and
cmp
ljmp
clc
jae
stc
and
sbb
xchg
jecxz
repnz
mov
xchg
stc
push
cwtl
mov
int3
jmp
xchg
inc
xor
std
mov
mov
jno
icebp
andl
scas
insb
add
xchg
in
cs
inc
lock
add
jmp
pusha
in
cmp
ljmp
jbe
mov
mov
sti
lahf
mov
hlt
loop
and
mov
cmc
pop
lods
and
in
out
push
xchg
fiaddl
out
imul
mov
mov
sub
push
push
enter
mov
or
sbb
push
and
add
std
and
add
in
xor
xchg
test
mov
pushf
or
movsl
rorl
lahf
sbb
cld
pop
cwtl
sub
out
mov
mov
test
stos
out
pushf
lods
xor
add
es
stos
jecxz
cmp
adc
sub
scas
outsb
add
cli
popa
lds
mov
or
into
dec
cmp
fildll
xor
fwait
cmp
and
and
mov
xor
es
div
roll
lcall
cmp
inc
insl
aas
inc
int3
popa
or
popa
mov
sub
popf
fdiv
xor
in
and
in
sub
lea
test
mov
sbb
mov
xchg
or
pop
inc
jg
push
and
xor
cmp
cltd
in
mov
jmp
out
mov
movsl
mov
insl
xchg
or
js
sarl
cmp
lds
ljmp
fstl
roll
or
add
jae
in
in
fnsave
sbb
je
sar
cs
sbb
push
add
in
mov
clc
sbb
add
mov
cmp
ret
jg
mov
jns
mov
push
xor
ret
sar
je
push
or
mov
lret
fstpt
iret
leave
mulb
test
cli
repz
xor
lahf
pop
xor
rolb
inc
test
sub
xchg
int3
xor
les
popf
jne
fwait
sahf
push
mov
jp
xor
in
rcrl
shrb
xor
stc
mov
pop
mov
or
inc
dec
lds
push
jne
mov
aas
test
adc
mov
enter
movsl
pop
fwait
ja
mov
sbb
dec
pop
adc
inc
lret
sub
ret
sub
jecxz
pop
ret
dec
lods
movsb
xor
mov
sub
or
sbb
repnz
pushf
je
aaa
adc
jg
lahf
fisttpll
mov
adc
mov
fwait
sub
testl
xchg
cltd
leave
dec
xchg
jmp
inc
pop
orl
cltd
cmp
bound
or
jbe
int
les
fbld
outsb
test
cltd
mov
jns
aaa
sti
mov
shrl
jne
shll
cld
aad
cmp
mov
add
loop
stos
stos
sub
mov
ljmp
mov
inc
pop
in
sahf
pusha
sub
leave
out
pushf
pushf
mov
push
mov
push
jbe
ret
ds
fiadds
push
sub
mov
pop
pop
clc
scas
stc
mov
js
mov
push
lods
xchg
test
fists
les
mov
loope
popa
arpl
mov
ror
jno
js
sbb
test
cmpsb
xchg
rcl
mov
cli
or
mov
mov
cli
lcall
cmp
xlat
lods
enter
insl
cs
fst
or
outsl
lea
pop
divl
push
popf
adc
mov
popa
das
adc
int3
lahf
fisttpl
icebp
scas
mov
push
or
adc
add
xor
xor
xchg
ljmp
shl
cmp
fstp
jmp
mov
mov
addr16
call
mov
sbb
pop
sub
fwait
sbb
cli
or
jne
xchg
adc
stos
test
sub
psubd
lock
mov
dec
push
stos
pop
lret
loope
into
lahf
out
jle
in
cmp
inc
push
or
or
mov
insb
ljmp
sub
add
stc
lds
sub
xchg
in
sub
sub
popa
xor
xchg
aam
fildll
push
pop
mov
xor
sbb
push
xor
scas
add
mov
cmpsb
jo
xor
inc
jmp
into
xchg
es
cmp
xor
jg
add
xchg
push
mov
xor
push
inc
clc
jmp
div
js
and
mov
pop
aaa
lahf
mov
xor
outsl
das
push
in
sti
inc
mov
sbb
dec
mov
xlat
add
movsb
sbb
lds
std
icebp
sahf
dec
xor
sub
mov
sub
cli
jbe
test
or
test
pop
or
arpl
sub
jmp
sti
inc
sar
ljmp
movsb
cli
sub
das
mov
std
test
inc
fisttpll
jle
inc
rcrl
dec
dec
xchg
aad
sbb
and
jecxz
test
mov
pop
sbb
mov
add
mov
pop
call
push
jae
lahf
jno
xor
clc
aas
or
pop
and
test
sbb
or
aad
xchg
sub
and
mov
pushf
js,pn
jne
icebp
clc
mov
mov
cld
or
sub
jg
xor
repz
es
cwtl
mov
cmp
cmp
dec
push
lock
mov
scas
sub
add
push
in
in
pop
adc
int
call
xchg
out
xchg
decb
sub
fisubs
popf
mov
xlat
loope
inc
fdivl
mov
jb
dec
fwait
testl
aam
add
aas
sbb
ja
jbe
jmp
pusha
fwait
out
mov
or
sub
xchg
dec
or
mov
xor
or
ja
jmp
jae
ss
or
add
lock
cmp
xchg
pop
fcomps
fucomp
sti
jae
fistl
sbb
int3
adcb
sbb
or
cwtl
mov
adc
xor
mov
loopne
fsubr
loop
jo
insb
testb
sub
sbb
les
fisubrl
jg
add
or
jae
and
call
aad
in
jae
sar
mov
mov
sbb
xor
cli
mov
call
repz
std
sbb
or
xor
dec
enter
dec
lcall
out
icebp
inc
push
loopne
rcrb
mov
cmp
test
into
xchg
loop
jbe
icebp
mov
xor
xchg
lret
xor
and
call
repz
call
in
andl
xchg
or
outsl
div
stos
jmp
cli
in
and
ret
ds
adc
mov
iret
sub
frstor
outsl
shrb
es
nop
loopne
mov
sahf
cltd
icebp
into
or
in
sbb
xchg
aam
cltd
fucomip
mov
dec
push
jg
xlat
int
cmp
imul
mov
jae
fnstsw
notl
jge
out
test
ss
sub
into
mov
imul
push
faddl
stos
xor
in
cwtl
enter
out
sbb
cmc
cmpsb
push
cltd
xchg
adc
in
fdivp
and
iret
sub
or
loope
rolb
movsl
dec
inc
adc
sahf
push
mov
outsl
insb
mov
sub
push
inc
and
or
aaa
sbb
ret
or
repnz
mov
sub
out
push
dec
out
jb
cli
push
add
or
and
sbb
push
enter
ret
dec
int3
imul
lock
popa
in
push
roll
test
out
lea
sbb
xor
jmp
adcl
jo
adc
push
imulb
jno
imul
loope
and
sarl
sub
arpl
out
cmc
cltd
add
std
push
dec
mov
addr16
and
sarb
adc
jne
das
and
pop
sub
and
pop
sbb
sub
pop
jmp
or
cld
lods
int3
test
idivb
adc
bound
pop
leave
dec
ljmp
pmulhw
test
int3
jmp
inc
mov
and
mov
lds
jno
scas
fmul
and
in
mov
gs
loope
ljmp
test
outsb
mov
mov
sbb
inc
mov
mov
jno
leave
inc
ljmp
cli
mov
insb
es
loopne
sbb
call
xor
cltd
cli
mov
or
arpl
cwtl
jne
and
xchg
data16
int
cmp
cmc
jb
lods
jbe
aad
rolb
cltd
adc
ret
jg
je
pop
orl
std
and
push
add
push
xchg
jmp
sub
clc
xchg
add
cmp
int3
loope
paddsw
popf
mov
add
or
rclb
je
dec
fmull
aam
aaa
mov
jg
add
inc
mov
movntq
mov
xchg
sub
and
or
jae
dec
pop
sub
repnz
sub
adc
jge
out
xchg
std
sub
sub
daa
jmp
je
cmc
cmc
or
das
lds
mov
ds
mov
pop
scas
imul
addb
repz
jmp
aas
push
add
scas
icebp
outsl
jo
inc
out
std
cs
or
orl
into
stc
out
mov
jecxz
or
sbb
loope
add
cmc
rol
mov
dec
loope
push
inc
mov
insl
or
ror
ds
pushf
xlat
push
dec
loop
out
xor
and
inc
shrb
and
aas
aas
pop
fimull
cld
daa
sti
mov
mov
icebp
push
test
xchg
aas
push
fistpll
shr
mov
cmp
popa
mov
insl
inc
into
inc
inc
adc
enter
aas
mov
jne
movsb
jp
xor
pushaw
add
arpl
arpl
out
jno
or
xor
or
int3
fdivrl
leave
push
pusha
aam
jnp
stos
ljmp
mov
jl
int3
shll
sbb
cmp
testb
push
cwtl
mov
lock
lret
jo
fidivrs
jne
sahf
mov
cli
push
lea
fnstcw
or
mov
pushf
sarl
jmp
adc
test
xlat
insb
mov
adc
mov
addr16
mov
insb
xchg
cld
jns
rorl
sub
mov
fdivrl
sbb
push
lods
insb
jns
stos
cmp
xchg
shrl
xchg
hlt
mov
aas
rorl
inc
pop
int3
dec
clc
shr
or
push
stos
add
sub
in
out
lret
sub
pushf
pop
ret
popa
sarb
outsb
and
jecxz
and
in
pushf
ljmp
xchg
mov
pop
lcall
mov
mov
jle
test
mov
aad
testl
pop
jg
jo
push
cmpsl
or
stos
sbb
sub
test
and
rcll
adc
and
lods
pop
or
mov
inc
test
js
stc
mul
or
sti
out
jp
mov
push
cld
push
push
jno
and
ret
repnz
fs
inc
and
adc
xchg
in
cmp
jne
loopne
rcrb
jb
es
add
or
loope
movsl
pop
in
cld
push
xchg
ss
jl
cmp
ljmp
sub
notb
xchg
xorl
repnz
mov
movsl
sub
sbb
jae
notb
lret
mov
sbb
xchg
xor
fs
and
stos
push
dec
mov
or
les
jno
hlt
xor
pop
mov
xor
fcompl
pushf
or
testb
mov
mov
sub
cld
and
pop
cs
jmp
xchg
push
outsb
xchg
lods
and
jecxz
cli
pop
cwtl
loopne
es
icebp
popf
push
and
add
mov
movsb
ds
push
xchg
lahf
or
inc
hlt
push
stos
xor
jb
leave
sub
jmp
inc
xor
fadds
mov
cli
aaa
lock
sub
les
loope
outsb
lcall
bound
call
std
out
push
outsl
add
and
movsl
pop
dec
cwtl
jae
xor
pop
loope
fs
pop
or
test
mov
or
jb
xor
add
pop
fcmove
ret
icebp
sbb
pop
xchg
or
mov
add
sbb
sahf
jle
lds
mov
fwait
int3
mov
outsl
jbe
cmpsl
mov
sub
and
clc
xor
movsl
xor
sub
cmc
mov
adc
jne
or
js
or
das
or
out
dec
adc
cmc
xchg
sub
cli
cmp
mov
shrl
and
ret
cmp
xor
pushf
sub
jns
pushf
push
cld
and
or
cltd
jno
sti
fisttps
and
mov
std
sbb
data16
jge
es
iret
cwtl
shll
call
dec
xchg
push
add
sub
rcll
mov
xor
add
mov
dec
in
repz
lret
sub
imul
dec
lret
in
and
xchg
dec
cwtl
xchg
jmp
cmpsl
xor
jp
mov
mov
fildll
out
mull
xor
aas
fisttpl
lods
and
repz
or
cmp
xchg
sub
or
xor
movsl
shll
jbe
aaa
push
xchg
pop
cld
push
bound
push
cmp
das
pop
icebp
mov
out
adc
inc
addr16
sbb
cltd
pop
sahf
adc
xchg
xchg
cld
andb
fcompl
sub
sbb
or
or
pushf
push
add
adc
scas
cli
mov
xor
cltd
aad
adc
xchg
mov
in
pop
mov
std
sub
gs
dec
xchg
push
cmpsl
clc
je
xchg
in
jp
dec
sbb
dec
movsl
iret
and
mov
cmp
or
mov
push
pop
shll
xorl
jmp
int3
scas
fisttpl
or
nop
mov
adc
lea
aad
int3
cmp
imul
into
mov
vorps
sub
repz
jns
mov
dec
adc
mov
xchg
out
mov
or
or
adc
fisttpl
pushf
cmp
rcl
gs
cmpsl
test
pop
iret
popf
inc
ljmp
add
and
in
cmc
ret
movsb
sbb
cmp
mov
aaa
ja
fldt
xchg
imul
repnz
cmp
insb
popa
shll
xor
mov
or
add
test
mov
aas
ss
mov
mov
or
mov
imul
cli
mov
inc
add
enter
fnstenv
pop
test
repnz
out
or
sbb
and
and
add
int
outsb
and
stc
ljmp
sub
cmp
cmpsb
mov
lcall
xlat
repnz
mov
sub
es
stos
push
enter
call
xchg
fs
pop
jns
push
shl
sbb
daa
xchg
cltd
and
hlt
call
rorl
or
inc
xchg
shlb
decb
stos
dec
movsl
mov
and
jne
and
mov
or
push
jno
clc
test
jecxz
out
repnz
mov
xor
repnz
xchg
mull
out
data16
adc
inc
ss
jb
and
rcll
je
push
je
mov
arpl
pop
or
mov
jmp
test
jecxz
or
bound
addr16
jno
sti
repnz
fmuls
sarl
or
mov
adc
or
stos
cwtl
fisubrl
orl
xchg
out
fisubl
fnstcw
sbb
pop
push
pop
adcl
pop
mov
xlat
stos
mov
fsts
cld
fisttps
notb
roll
in
mov
mov
mov
cs
ljmp
mov
cmp
rcr
jae
addl
sbb
enter
and
jbe
pop
sbbl
xchg
cmp
cmp
pop
adc
test
pop
xchg
inc
jp
adc
cmp
cmp
pop
xchg
pop
shll
arpl
data16
out
daa
aas
loope
add
inc
mov
popa
cmp
pop
push
aad
addr16
adc
aad
xor
jbe
xchg
das
movq
into
push
push
mov
inc
sbb
add
cmp
jb
negb
insl
fiadds
ss
xchg
mov
or
ret
mov
clc
ljmp
fldt
xor
bnd
jne
xchg
sbb
jecxz
jb
mov
sbb
jae
idiv
mov
push
and
decb
mov
repz
aaa
dec
je
cli
test
xor
leave
or
stos
call
stc
push
scas
lret
xchg
jg
xchg
testb
xlat
jae
notb
mov
shll
sub
ret
decb
and
aas
lock
xor
ljmp
and
adc
xor
in
pop
es
movsb
test
mov
add
sbb
mov
fldl
test
in
aad
lret
cli
and
ljmp
or
xorb
inc
pop
aaa
pop
mov
or
daa
popa
cmp
test
dec
or
add
inc
dec
fwait
and
xchg
mov
or
hlt
cltd
ffree
dec
sarl
jns
subl
js
fimull
add
ret
xchg
cmc
sti
jle
sbb
ljmp
adc
sbb
sub
add
aam
repnz
fidivl
test
out
add
pushf
sub
in
std
push
jge
loopne
mov
idivl
push
out
or
mov
xor
xor
ret
pop
mov
sub
pop
pop
ret
lahf
mov
lods
test
shll
ret
imul
mov
pop
inc
loopne
cmp
pop
scas
or
es
add
or
movsl
mov
pop
pop
xchg
lret
int3
or
cmp
insl
add
shrl
mov
mov
mov
cmp
or
mov
add
xor
adc
mov
daa
into
or
jmp
iret
inc
jae
sbb
bound
rcr
xchg
jecxz
notb
in
subl
sub
lret
cmpsl
add
in
paddd
inc
mov
xchg
sub
xlat
in
jmp
cmp
sbb
arpl
add
pop
adc
clc
or
and
and
ljmp
shr
outsl
addr16
clc
mov
jmp
out
lea
out
outsl
mov
arpl
inc
xor
jbe
std
sbb
pop
repz
mov
insb
sbb
xor
sbb
fwait
testl
imul
cmpsb
sarl
or
int
add
mov
mull
cmp
mov
mov
fisttpl
jmp
jno
rcr
rcrl
jb
xchg
and
xchg
enter
dec
aaa
icebp
mov
mov
pop
movsb
sbb
movsl
not
enter
das
cmp
inc
das
jl
and
ss
push
rorb
pusha
pushf
nop
sub
cmp
push
int3
add
cmpsb
call
hlt
or
cmpsl
mov
mov
sahf
mov
int3
or
dec
xchg
lcall
sub
popf
fildl
outsb
inc
js
lock
outsb
adc
inc
pop
inc
repz
call
ss
push
test
mov
cmpsb
ficomps
inc
rcrl
sub
inc
mov
iret
or
dec
sti
repnz
mov
decb
cltd
jg
dec
inc
lahf
xor
adc
iret
xchg
out
fimull
popf
sti
cli
add
mov
xlat
sbb
and
or
and
test
scas
jg
inc
pop
xlat
in
pop
jns
inc
std
mov
fstps
popf
repz
mov
cmpsl
push
mov
sbb
push
jecxz
or
jne
push
sub
lcall
xlat
stc
sub
call
adc
popa
jno
mov
adc
aaa
inc
fsubs
inc
push
test
std
mov
mov
jle
jo
ja
fwait
icebp
shll
mov
jg
lret
loope
sub
mov
xor
xor
fs
push
mov
out
or
ja
jmp
push
and
or
test
js
sbb
mov
mov
jg
mov
test
mov
mov
pushf
aam
mov
xlat
push
cld
dec
dec
pop
pop
sti
xchg
int3
ret
test
data16
adc
fstl
or
bound
push
or
cmp
xchg
mov
adc
cli
sub
imul
hlt
cmpb
jmp
jae
sub
pop
jge
int
icebp
pop
xor
or
xchg
cld
sbb
sub
push
cmc
sub
and
outsb
push
pop
sbb
aaa
mov
pop
sub
pop
dec
dec
xchg
cmp
mov
mov
mov
ret
dec
lods
popa
lahf
inc
xchg
pop
popa
repz
or
lods
xchg
and
lods
or
and
sbb
jns
and
insb
fcoml
xor
mov
imul
inc
popa
push
lods
or
mov
and
call
xchg
mov
stc
mov
shl
push
iret
jl
push
or
psubq
jmp
and
xchg
iret
das
add
sbb
or
dec
jb
cmp
mov
insb
sub
xor
jmp
cmp
mov
gs
lret
push
push
cs
mov
cli
add
test
mov
into
jo
pop
add
popf
or
lds
adc
and
or
jns
inc
xchg
sub
in
ljmp
out
das
cld
lods
dec
dec
xchg
pop
clc
xchg
repnz
and
rol
xor
stos
lock
add
sbb
mov
mov
lret
mov
sbb
rolb
mov
cmpsl
stos
aam
repnz
loopne
jge
mov
mov
shll
dec
cmp
dec
jno
mov
cmp
add
pop
sbb
xorb
stos
mov
inc
dec
or
rcll
jnp
xor
adc
dec
shlb
dec
cmpsl
popf
pushf
aas
add
inc
idiv
icebp
rcrl
flds
push
dec
dec
xchg
popa
test
mov
rcr
cmc
xchg
sub
out
add
sbb
cmovo
or
into
out
jecxz
scas
int3
lahf
cmpsb
divps
ljmp
pop
pushf
or
sub
sti
std
mov
negl
jl
std
loopne
jge
daa
mov
into
lcall
mov
push
sub
test
ret
cltd
outsb
xchg
jmp
xchg
scas
adc
jecxz
pop
dec
mov
outsb
inc
inc
imul
mov
out
mov
inc
rclb
cmpsb
cmp
push
push
sub
mov
std
loope
pushf
inc
xchg
push
jmp
push
jle
sbb
ret
outsb
mov
sbb
adc
leave
popa
pop
aas
sbb
fwait
push
mov
inc
js
xor
sub
stos
sahf
mov
mov
xchg
push
or
fcomi
pushf
ja
call
or
inc
loopne
scas
stc
icebp
fimuls
xor
push
cwtd
xchg
jno
ds
xor
out
jmp
shr
lds
mov
cli
das
mov
gs
stc
test
aaa
lahf
je
push
repz
xor
or
addr16
pushf
popa
notl
movb
mov
imul
and
push
icebp
add
adc
push
add
xlat
adc
aaa
pop
inc
xor
jae
sbb
pop
or
inc
and
data16
insb
cltd
movaps
loope
adc
fcoms
mov
jno
in
pop
mov
or
mov
dec
bound
outsl
test
xchg
push
mov
xchg
push
mov
sub
outsl
sbb
sbb
mov
pop
add
rcrb
jle
cld
popf
pop
daa
imul
jle
loop
mov
add
adc
mov
in
jne
out
sub
sbb
xchg
mov
jmp
cmpsb
mov
outsl
in
dec
ss
push
jns
repnz
std
push
mov
sbb
dec
mov
pop
push
mov
jbe
into
arpl
icebp
push
popf
divl
shll
fldl
ret
icebp
testl
adc
cmp
pop
cmpsl
inc
jl
add
mov
mov
out
dec
pop
mov
pop
fs
repz
or
mov
arpl
nop
or
inc
in
test
push
mov
clc
into
fsubp
popf
push
mov
mov
pop
push
insb
pop
pop
imull
call
out
jmp
test
lahf
in
push
sbb
ret
push
out
push
rclb
or
adc
stc
cmp
mov
out
xor
inc
lahf
mov
pop
pop
pop
call
dec
lahf
xor
pop
cmc
pop
mov
push
call
xor
bound
insl
add
loope
mov
testl
loope
and
fstp
add
fwait
pop
xor
push
out
stos
xor
pop
ds
outsb
mov
or
add
xorb
or
ja
sbb
repnz
sub
insb
jg
mov
push
xchg
shrb
cmp
or
faddl
dec
cmc
in
xchg
aad
shll
and
xchg
cmp
fcoml
sub
loop
ljmp
dec
lods
aas
and
shll
mov
jae
clc
pop
jnp
arpl
out
add
popa
call
std
add
and
adc
jae
pop
call
in
roll
and
xchg
sbb
out
lock
sbb
mov
xor
mov
jmp
icebp
inc
ljmp
push
daa
cmpsb
sub
das
popf
out
popf
loop
xchg
shl
push
sbb
push
dec
and
lret
inc
sbb
insl
xor
or
lds
jg
mov
cmp
mov
inc
imul
or
lahf
push
xchg
outsl
cmpsb
mov
cmp
je
outsl
fnstcw
add
or
ds
cli
mov
lods
pusha
ljmp
cmovs
movb
or
leave
mov
int3
or
push
je
dec
mov
cltd
dec
fwait
cmpl
and
in
mov
jo
stc
mov
test
ret
push
sti
jb
jno
or
push
out
jmp
or
call
icebp
pop
push
push
mov
xlat
cli
jp
add
call
sub
push
xchg
js
xor
and
or
outsl
sbb
add
xchg
push
stos
mov
xchg
inc
movsl
xor
movsl
cmp
sbb
int3
vpavgw
fcoms
mov
adc
lods
movsl
jns
les
inc
and
out
pop
out
inc
or
icebp
or
sub
imull
push
sbb
push
hlt
test
ret
lret
or
add
movsb
cmp
or
popa
pop
bound
mov
leave
scas
outsl
mov
lahf
adc
arpl
or
mov
cmpsl
icebp
mov
insb
sarb
cmc
mov
subl
xor
push
fnsave
bound
dec
dec
iret
mov
pushf
xchg
ljmp
dec
cs
lret
imul
cltd
pop
jno
mov
adc
lahf
push
hlt
popa
scas
sub
dec
xor
loop
jmp
adcb
je
xor
cmpsb
add
testb
lcall
stos
mov
stos
leave
mov
ds
mov
repnz
cld
mov
jp
cmp
add
lds
pop
xchg
push
push
lret
dec
rcll
mov
xor
out
pop
lcall
pop
movsl
xor
stos
stc
pop
les
sarb
sub
arpl
mov
mov
and
and
fisttpll
xor
je
adc
gs
iret
movl
cmp
in
lcall
incb
mov
sbb
jno
dec
iret
cmc
mov
imul
fdivl
pop
dec
jle
inc
jmp
leave
push
das
or
outsb
xor
icebp
xchg
call
xor
push
xor
fwait
or
sub
mov
out
addr16
repnz
arpl
call
fildl
push
loopne
lahf
pop
ror
sub
bound
or
lods
jge
dec
loop
popf
inc
enter
pushf
sbb
adc
out
or
ljmp
mov
ret
lcall
test
xchg
add
jae
div
lret
push
dec
push
imul
shll
loope
sbb
inc
lea
aad
adc
cmp
dec
mov
cmp
mov
or
inc
test
test
int3
loop
add
xchg
push
popf
jge
dec
push
popf
sbb
movsb
sbb
or
and
jecxz
cmp
lds
mov
or
push
mov
mov
xchg
jns
add
mov
ret
je
in
scas
std
cmp
sub
mov
mov
dec
leave
outsb
fwait
rcll
adc
xor
inc
shll
movsb
pushf
mov
cmp
rdpmc
adc
push
dec
add
in
cli
or
stc
jo
inc
fildl
cmp
enter
ljmp
push
mov
xchg
mov
add
or
mov
xchg
push
icebp
mov
popl
push
mov
fcmovnb
imul
mov
sub
les
into
jnp
cli
pushf
or
and
fwait
mov
mov
sub
loope
clc
rcrl
pushf
into
and
imul
dec
pop
fstpl
jo
add
mov
insb
enter
sbb
das
int3
cmpsb
testb
add
lahf
or
xchg
jae
mov
std
iret
push
or
addl
dec
adc
adc
pop
xorl
or
je
lock
in
and
rcrl
scas
movsb
outsb
cli
cmc
mov
loopne
mov
mov
and
ret
nop
in
push
xchg
addr16
fcom
push
movsb
incb
hlt
jb
cmc
icebp
push
or
add
loope
lods
add
lret
int3
jbe
out
lds
ss
loopne
std
add
fadd
lahf
add
das
imul
or
cli
outsl
sbb
enter
es
stos
fwait
dec
and
mov
mov
pusha
int
sbb
push
add
in
xor
jae
push
or
xchg
and
sbb
xchg
lds
pop
add
cli
sti
add
push
jne
outsl
cmp
loope
pop
mov
xchg
jno
out
out
cmp
inc
inc
into
cmp
jg
sbb
aas
loope
dec
shll
jbe
pop
fisttpll
add
or
dec
lret
repz
xlat
daa
mov
and
ret
repz
aam
jo
icebp
and
pop
iret
cmp
out
or
or
jle
jmp
inc
shll
mov
loope
push
sti
outsb
loope
push
outsb
jne
mov
repnz
cwtl
std
ss
mov
xchg
jb
mov
or
movsb
aaa
iret
dec
das
cmp
xchg
inc
scas
and
rcl
mov
jne
cmpsb
push
insb
fcmove
add
and
je
or
cmp
data16
bsr
xor
shrb
xchg
xor
sub
outsl
inc
pop
mov
fcoml
sub
dec
and
data16
loopne
adc
adc
xor
jmp
lds
cmpsl
mov
or
jmp
cmpsl
aaa
cwtl
std
or
ret
arpl
imul
ljmp
xor
imul
jbe
outsl
jno
mov
in
xchg
mov
cld
sbb
in
insb
or
notrack
or
xor
shl
negl
dec
loopne
mov
gs
orl
outsb
or
daa
loopne
xlat
aad
mov
or
push
sbb
insb
movsb
call
mov
xchg
fwait
or
insl
into
mov
push
cmp
fs
outsl
in
or
adc
jae
sub
dec
enter
ja
call
pop
adc
or
dec
push
adc
int
sbb
jp
ret
test
xchg
sahf
mov
jmp
mov
xor
dec
jl
cmc
addr16
xlat
jnp,pt
stos
sbb
insb
adc
mov
lret
add
push
lret
mov
mov
sbb
xor
into
adc
pusha
xchg
call
jp
imul
ss
mov
and
test
lea
data16
outsb
test
mov
and
xor
ret
in
push
fnstcw
int
mov
rcl
cmpsl
in
movsl
or
xchg
ret
mov
or
pop
fisubrl
roll
adc
clc
add
decb
add
lret
jae
adc
mov
cmp
fcmovnu
add
loope
jae
or
in
mov
add
icebp
and
scas
lret
inc
pop
or
test
icebp
pop
pop
push
daa
imul
add
call
jbe
loopne
cmp
outsb
icebp
mov
cli
cmp
lea
jno
inc
movsb
and
mov
inc
repnz
outsb
and
mov
cld
imul
popa
loope
cmp
dec
sbb
add
das
sar
pop
cs
test
lahf
incl
rorl
test
shlb
add
repnz
in
mov
mov
mov
sub
cmp
fsubr
pop
cmp
out
ret
sbb
rolb
adc
test
xchg
mov
or
sahf
xchg
mov
push
rcl
ret
loopne
or
sti
mov
loope
xchg
jmp
lahf
loope
out
mov
aas
fwait
sti
lret
test
adc
cld
push
lahf
out
mov
sbb
pop
repnz
xchg
cmpsl
pop
insb
lret
cli
imulb
incl
xchg
rorl
das
movsl
jae
pop
cmpsl
pop
sbb
add
cmc
sub
stc
lock
mov
inc
out
call
movsl
into
gs
adc
call
shrb
cld
jge
into
fsubl
xchg
cli
notl
loope
in
dec
mov
test
xor
and
in
sti
add
mov
sti
pop
push
pop
xchg
in
or
sub
stos
jmp
mov
adc
sub
xor
std
rol
ja
xchg
inc
or
and
cmc
es
int3
pop
paddb
les
sahf
stc
test
push
ret
push
mov
mov
sbb
jl
imul
xchg
es
push
dec
cmpl
pop
test
and
addr16
mov
and
jg
cltd
or
out
std
fdivrl
clc
pop
add
in
icebp
or
jmp
and
leave
iret
pushl
mov
addr16
pop
or
movsb
fadds
push
sti
test
ret
or
or
inc
test
ret
popf
and
or
mov
cld
cmp
out
pop
push
and
in
fdiv
pushf
mov
push
test
dec
jg
inc
ljmp
dec
loop
imul
out
jno
or
cmpsb
ljmp
fstpt
push
cwtl
insb
sbb
data16
cli
mov
pushf
les
sub
repnz
stc
in
sbb
aaa
lahf
adc
or
es
out
cmpsb
clc
push
cmpsl
push
cli
pop
jb
pop
insb
xchg
neg
xchg
test
xlat
jge
ljmp
or
sbbl
dec
or
jecxz
xchg
pusha
lods
jns
jecxz
cmc
xchg
pop
das
popf
add
stos
outsl
shl
cli
inc
popa
push
pushf
aaa
ss
and
mov
lcall
inc
into
xchg
jmp
sbb
call
int
fninit
mov
mov
and
or
xchg
push
aad
fs
scas
in
xchg
push
xor
popa
stos
mov
mov
ret
pop
subps
outsl
mov
xor
fistpl
push
lcall
loope
imul
sbb
xchg
lcall
mov
daa
xchg
pop
dec
int3
add
cmc
mov
loope
jl
mov
pushf
sub
jg
rep
xor
in
mov
loopne
mov
ljmp
jp
movsl
mov
sub
xchg
cmp
jne
xlat
int
in
stos
insb
jb
xor
push
pop
mov
or
inc
xor
mov
cmp
movsb
aad
cmpsl
pop
push
dec
les
das
dec
mov
adc
xor
nop
mov
test
out
mov
rep
lahf
mov
inc
loope
pop
mul
jo
fwait
cmp
fistps
sahf
cmp
popa
js
sahf
fadd
or
jo
mov
cmp
mov
ret
ss
inc
xchg
mov
pop
pop
pop
dec
jecxz
pop
sbb
divl
xchg
ret
paddb
cli
add
std
sub
cmp
mov
sbb
ljmp
call
jbe
jne
out
adcl
xor
call
add
and
outsb
lret
stc
pop
or
push
and
movsl
xchg
or
je
pushf
xlat
sti
fnsave
popf
fcom
arpl
call
lret
or
jb
mov
mov
and
or
shrb
sti
cmpsl
push
out
mov
push
dec
or
scas
xchg
cltd
mov
repnz
pop
mov
test
mov
pop
ret
rcll
adc
jl
push
xor
push
addr16
push
shrl
insl
out
out
aam
stos
negb
pop
out
cmp
out
inc
rcr
jecxz
push
fsubrl
fadd
packsswb
xchg
cmp
push
lea
pop
sbb
or
push
imul
mov
popa
movsl
inc
outsl
shr
or
imul
call
jp
loope
push
sub
dec
cmp
ret
inc
jns
lret
das
xor
jnp
jae
mov
sub
and
out
ret
adc
add
int3
insb
push
hlt
lcall
cmp
test
pop
cmpsl
mov
or
mov
stos
lds
dec
sbb
stos
scas
push
ss
jae
aam
cli
adc
push
or
lret
sbb
sbb
and
sub
fs
add
mov
and
cs
xor
jb
repnz
pop
arpl
xor
icebp
enter
imulb
jb
test
shlb
ret
out
push
sti
xchg
mov
jb
push
loop
stos
lret
inc
loope
pop
pop
addr16
lods
mov
mov
xlat
cwtl
scas
cmp
and
jl
sti
ss
loope
or
enter
fnstsw
or
icebp
jmp
pop
xor
adc
mov
pushl
or
into
cmp
mov
jmp
lea
loop
mov
mov
pop
idiv
pop
test
cmp
idiv
ret
jnp
sub
or
or
inc
int3
ljmp
add
dec
xchg
mov
push
lahf
mov
into
orb
hlt
out
or
push
ret
mov
int3
mov
jno
mulb
int3
es
push
out
xor
mov
mov
mov
or
adc
add
rol
and
push
mov
subl
pushf
inc
mov
pop
inc
es
cmp
and
in
jge
inc
loop
mov
pop
mov
out
out
imul
jge
adc
mov
and
enter
movsb
iret
pusha
pop
loopne
in
jge
jecxz
add
mov
cmp
pop
push
nop
ret
jb
mov
pop
sub
mov
divb
aad
cmp
and
pop
out
push
or
cmp
lret
lahf
stos
and
fwait
or
push
jno
cli
mov
out
pop
mov
pop
pop
loope
sub
lock
stos
push
push
loopne
out
inc
cmp
lcall
arpl
or
and
xchg
lea
add
mov
adc
lds
ret
in
mov
repnz
dec
cmp
nop
push
fisubl
sahf
or
gs
ret
xor
adc
out
push
jecxz
push
pop
pop
sbb
call
pop
popa
mov
xchg
outsb
add
mov
or
add
dec
pop
xor
popf
ds
dec
aas
pushf
mov
loopne
xchg
xchg
arpl
cmp
xor
outsb
adc
cld
xor
mov
cltd
jge
sbb
mov
xor
cmc
pop
movsb
inc
cwtl
lds
jnp
lahf
mov
mov
in
mov
imul
lret
ljmp
rcr
mov
roll
dec
pop
mov
in
mov
mov
enter
shll
push
and
adc
les
sbb
ret
sbb
push
call
add
fdiv
xor
sti
xor
test
je
out
xor
mov
lods
jne
push
mov
push
imul
mov
pushf
cld
xchg
dec
cld
iret
or
iret
scas
cmc
daa
lret
das
mov
cmp
push
sti
mov
ljmp
call
outsb
dec
lods
or
push
repnz
inc
mov
data16
jmp
aam
sbb
jg
sub
cli
xchg
sub
sub
mov
scas
inc
inc
mov
sbb
jno
sti
xor
xchg
pop
cs
adcl
lahf
jl
inc
ljmp
sti
dec
pop
sbb
notb
data16
xor
in
sbb
mov
mov
rcrl
dec
shrl
cmp
or
out
xchg
or
mov
imul
mov
mov
in
inc
mov
rclb
jae
xor
lock
and
or
pop
cmp
movswl
shll
arpl
std
or
sub
cld
icebp
dec
addb
xchg
dec
out
and
ljmp
dec
loop
cwtl
pushf
inc
dec
mov
sbb
cltd
les
out
stos
xchg
xchg
push
cwtl
cld
and
inc
add
xchg
inc
mov
cs
jle
scas
or
adc
pop
into
sbb
imul
jnp
cli
cmpsl
push
cmp
stos
mov
or
or
dec
leave
cmp
fwait
jae
cmpsl
lret
and
out
std
adc
decl
loopne
test
or
sbb
or
push
push
push
xor
cli
mov
inc
or
popf
cmp
and
aam
pop
out
test
add
imul
jecxz
push
inc
xor
sti
jb
rclb
lret
in
add
repz
imul
arpl
stos
mov
into
xchg
cmp
push
hlt
in
mov
jp
push
jl
jg
imul
out
cltd
xchg
notl
push
les
repz
or
cmp
mov
sub
mov
mov
jbe
mov
push
sbb
out
imul
popf
push
and
rorl
or
movsb
sub
cmp
ficoml
mov
outsl
pop
xor
nop
push
test
lret
test
sahf
cwtl
arpl
xchg
push
add
xchg
cli
mov
xchg
or
sub
pop
arpl
in
clc
adc
lds
mov
xor
nop
xchg
mov
clc
les
jge
mov
mov
mov
mov
jae
lcall
sub
jmp
cmc
std
push
sti
mov
lret
or
mov
mov
or
xchg
jmp
lahf
inc
adc
fdivs
into
xor
jg
mov
push
xchg
lods
daa
loopne
xor
push
lahf
or
int
test
jge
push
aad
pop
mov
pop
lods
sub
or
je
leave
xor
push
addr16
in
jle
cmc
xor
cli
ret
adc
xlat
iret
dec
jmp
fnstsw
in
scas
cltd
subl
add
outsl
or
inc
call
cmp
stos
push
cld
adc
and
sti
mov
movsb
or
jns
mov
outsb
scas
fwait
mov
jae
mov
cmp
outsb
cwtl
dec
mov
out
das
sbb
loopne
or
dec
ret
pop
mov
mov
and
or
mov
mov
inc
fdivr
sbb
sti
lahf
push
lods
movsl
cmp
add
movsl
sbb
rorl
and
mov
sub
xchg
inc
ret
or
in
test
cmp
ds
movsl
push
pop
ljmp
out
daa
cmp
add
loop
repnz
test
sarl
into
jb
data16
push
mov
mov
fisubrs
dec
cmp
icebp
movsl
mov
cmpsl
cmp
outsl
or
in
jae
push
lret
jmp
imul
add
inc
xor
shrl
ljmp
popf
mov
loop
sub
push
mov
mov
jecxz
mov
sbb
ret
out
aam
mov
mov
fsub
ret
cli
dec
cmp
add
je
cltd
dec
js
add
out
mov
add
movsb
or
call
mov
cmpsl
outsl
pop
or
nop
rorl
aam
jb
sbb
ja
xchg
stc
fimull
in
popa
add
mov
jmp
or
ljmp
or
lahf
push
inc
icebp
mov
subl
cli
push
cmc
pushf
bts
push
jge
aas
sarl
in
xchg
fidivrs
or
adc
or
daa
sbb
xchg
cld
test
jb
jmp
jb
cmc
sub
sbb
push
icebp
leave
dec
gs
dec
cld
dec
inc
add
push
stos
xchg
sbb
outsb
and
repz
std
sub
rcr
int3
dec
int3
nop
mov
and
or
movsb
pop
mov
xchg
aad
dec
loopne
shrl
cld
add
jmp
call
jo
das
and
insl
mov
sub
mov
ret
sbb
push
mov
or
loop
cmpsb
jp
ret
sub
pop
imul
mulb
jg
fcomi
js
mov
testb
adc
outsl
adc
lret
jb
jl
cmpsl
pusha
mov
in
std
cltd
icebp
int
add
int3
ljmp
adc
push
push
add
cli
aaa
mov
inc
pushf
pushf
pop
adc
loopne
pop
fisttpll
cmpsb
mov
cmp
mov
out
or
add
out
jae
mov
sbb
xchg
ljmp
out
dec
ror
inc
or
dec
xchg
inc
enter
in
cltd
movsb
mov
xchg
xchg
pop
fs
bound
ret
mov
int
movsb
bound
fdivp
pop
cmpsl
rol
sub
pop
pop
ror
sbb
inc
or
lahf
sub
ljmp
dec
mov
pop
push
xorb
inc
xor
pop
fbld
je
shrl
incl
ss
pop
xor
sub
push
sub
add
push
add
bound
sbb
bound
js
xchg
jle
or
xchg
les
jp
les
pop
loope
clc
out
test
cli
inc
imul
sub
sub
push
addr16
pop
aas
mov
jae
cmpsl
pop
jae
cmc
sub
stos
scas
xchg
test
sbb
jmp
xor
mov
jmp
xor
xchg
mov
push
xchg
dec
mov
dec
or
xor
mov
mov
inc
std
sahf
pop
push
cltd
outsl
mov
call
aaa
iret
mov
or
outsl
jae
into
cmp
sub
inc
test
aaa
shlb
loopne
or
gs
jno
mov
and
push
movsl
pop
out
or
or
stos
clc
sub
ljmp
xchg
sub
aam
popa
xchg
dec
dec
ret
dec
mov
stos
outsb
out
jle
mov
icebp
je
push
outsl
out
mov
or
and
adc
in
imul
in
mov
fwait
pop
sahf
mov
fcoml
addr16
add
xor
adc
pop
inc
test
push
cvttps2pi
jns
xchg
sub
psubq
push
fmuls
shll
mov
pop
das
mov
outsb
js
dec
or
int3
fbstp
lock
sub
push
test
adc
mov
cmp
push
out
rclb
mov
int3
or
shlb
cmovnp
ud2
xor
xchg
pop
rorl
mov
xor
ret
xchg
sbb
out
and
leave
mov
or
jnp
or
push
and
sbb
sub
enter
call
jb
sub
and
mov
shr
adcl
movsl
pusha
push
int
sub
cs
out
and
leave
or
xor
pop
add
out
in
jp
xchg
inc
movsl
xchg
data16
aam
js
cli
jmp
out
mov
mov
jne
mov
cli
cmp
stos
xchg
xor
or
mov
mov
inc
jmp
jge
sbb
mov
mov
push
mov
jbe
cs
adc
movsl
ljmp
js
int
pop
push
or
sbb
iret
cli
call
in
sub
mov
add
push
add
into
stos
push
cli
ljmp
out
xchg
inc
cmp
cmpsl
mov
popa
imul
cmpsb
or
cmc
insl
ficompl
test
out
outsl
or
fidivrs
sti
imull
lret
ret
adc
or
leave
popa
push
in
mov
mov
mov
sti
fisttpll
xchg
js
popa
sub
push
and
or
or
mov
sub
ds
mov
push
xchg
or
sahf
lds
stos
lock
cld
and
shrl
dec
hlt
pushf
sub
jecxz
pop
add
dec
arpl
add
jae
mov
jecxz
das
in
dec
pop
jmp
jbe
push
repnz
repnz
fldcw
nop
insb
fcmovnu
sub
ret
mov
test
out
adc
jmp
out
sub
shr
inc
mov
xchg
add
out
mov
sbb
subl
push
push
push
jno
loope
lock
pushf
fstpt
add
sbb
jno
aas
gs
lock
jmp
jecxz
pop
and
int3
in
jmp
mov
shll
jecxz
es
dec
fisubs
xor
outsl
sti
outsb
jecxz
push
fiadds
stos
mov
lret
fisubrl
jecxz
mov
into
jecxz
out
cs
dec
shl
pop
aaa
int
mov
mov
jae
xor
xchg
push
jecxz
imul
dec
ror
imul
lret
xlat
outsl
jecxz
xchg
shll
jge
pop
jecxz
popf
jmp
pop
lahf
imul
mov
dec
inc
stos
xchg
and
dec
movzbl
out
sti
int
mov
add
pop
lods
inc
dec
add
cmpsl
mov
sti
loope
arpl
sub
and
arpl
outsl
and
mov
pop
mov
xlat
pop
adc
ljmp
call
imul
loop
jae
dec
mov
mov
int
mov
ret
mov
int
mov
pop
ficompl
repnz
nop
adc
arpl
inc
mov
outsl
jnp
mov
stos
jno
inc
fildll
jecxz
dec
lcall
repz
cmpsb
push
int
mov
push
outsl
jecxz
jecxz
push
pusha
loop
daa
pop
rcrb
and
decl
xor
test
jmp
jecxz
mov
fucomip
cmp
stos
sub
mov
xchg
test
outsb
xor
pop
mov
push
stos
inc
rorb
int3
xchg
cmp
or
pxor
or
aas
cmc
inc
mov
jmp
bnd
add
mov
pushf
sahf
jns
pop
mov
xor
mov
add
mov
xchg
lods
fdivr
adc
mov
pop
mov
push
sub
push
jecxz
sbb
push
pop
cmp
push
scas
jns
or
or
inc
out
inc
push
loope
jne
xchg
lret
push
call
sbb
pop
mov
pop
stos
adc
xor
cmp
fs
adcb
movsl
jl
out
push
popa
push
sbb
inc
mov
ds
into
movsb
sbb
nop
jne
lock
add
outsl
xor
out
cmp
mov
cld
xchg
out
iret
xchg
out
aad
fistpl
in
pop
clc
sbb
dec
insb
popf
rcrl
or
testb
add
shr
jp
insb
push
leave
enter
out
loop
push
mov
sahf
rcl
adc
lock
mov
sti
jg
aad
sub
sub
or
or
push
popa
push
dec
adc
fiaddl
fists
or
out
gs
das
jmp
mov
cltd
out
pop
jecxz
or
inc
jae
jae
push
sub
xchg
and
repnz
xor
ljmp
outsl
sarl
out
ret
cmp
add
iret
sub
aad
bound
cmc
jne
ljmp
xchg
into
mov
rcr
adc
or
jo
cmpsl
or
out
popf
push
test
cli
ljmp
xor
imulb
xlat
fistl
fwait
out
out
mov
xor
mov
pop
imul
repz
dec
stc
xor
mov
jae
fs
inc
repnz
push
mov
jb
mov
cmp
movl
mov
jae
mov
ss
xchg
ret
add
cmp
xor
cmp
xor
jnp
ljmp
ret
mov
jae
cmp
rclb
mov
or
lea
movsb
jmp
xorl
jge
or
jb
stos
push
ljmp
adc
shl
dec
mov
jp
loopne
dec
into
dec
aas
sub
outsl
sbb
popf
jle
js
sbb
adc
and
clc
cmc
mov
imul
lahf
js
jb
inc
out
mov
pop
lahf
std
jmp
inc
sub
add
jae
lcall
les
mov
int3
or
or
cmpsl
sub
incb
mov
imul
mov
mov
and
xchg
out
pop
stc
adc
movsl
xchg
aad
xchg
push
pop
xor
mov
popf
fcmovu
push
xchg
push
sbb
pop
inc
xchg
xchg
xor
mov
icebp
lock
push
out
inc
push
bound
movsl
mov
jns
out
xchg
roll
insl
pop
xchg
xchg
add
outsb
sub
outsl
inc
incb
fstl
repnz
out
push
and
cwtl
ja
push
ljmp
icebp
or
ja
out
dec
adc
lods
repnz
xor
or
test
cmp
and
bound
fdivp
push
loope
push
shl
mov
dec
cmp
jp
icebp
rorl
adc
rdtsc
into
inc
sub
ljmp
ljmp
out
mov
cltd
pusha
fwait
imul
clc
out
mov
pushf
sub
and
jns
adc
imul
jae
mov
mov
into
sti
or
add
or
mov
jge
nop
adcb
sub
movsb
nop
or
xchg
repnz
and
or
add
lret
stos
test
push
pushf
cmp
gs
in
add
and
or
inc
pop
scas
dec
dec
cmp
sarb
mov
outsb
or
sub
adcb
cmp
shl
inc
movsl
bnd
mov
daa
dec
inc
dec
xchg
sbb
sub
xlat
or
mov
mov
pop
jne
inc
mov
jno
pop
jno
push
adcb
sahf
xchg
fdivr
add
jg
jae
inc
icebp
jb
out
cwtl
push
outsb
call
sbb
xor
sbbb
popf
push
fwait
dec
int3
rorb
adc
push
mov
out
push
out
or
fmull
hlt
xor
sbb
xor
and
and
out
inc
gs
loope
xor
mov
and
inc
adc
pop
ds
mov
ja
or
mov
les
adc
jno
je
or
pop
sahf
enter
inc
jmp
and
jbe
or
jb
int
xchg
sbb
mov
dec
mov
out
adc
out
movsl
jle
dec
xor
xchg
testl
pop
out
in
cs
jecxz
adc
and
or
stos
shr
and
mov
ds
cltd
pop
sti
mov
in
sti
dec
iret
loopne
xor
jns
push
sub
dec
lods
sbb
cwtl
mov
mov
fcom
xor
arpl
xor
sub
aas
pop
and
pop
push
loopne
or
pop
or
add
mov
pop
sub
rcl
loopne
test
push
rorl
pop
leave
xor
in
test
les
xorb
inc
inc
cwtl
jno
sub
lds
inc
adc
into
cmpsb
sbb
cmp
outsb
test
call
push
cmpsb
shll
ret
cltd
mov
mov
and
mov
or
rcrl
jnp
je
clc
inc
adc
xchg
or
dec
jecxz
xor
ljmp
in
xor
or
cli
mov
jmp
xor
or
imul
or
pop
or
or
clc
xchg
icebp
push
xchg
fs
in
mov
dec
dec
sub
fs
test
fidivrs
jp
xor
pop
test
js
adc
fdivs
mov
push
sub
xchg
pop
or
adc
cmp
push
inc
pop
ret
or
inc
pushf
lds
mov
mov
pop
sbb
pop
les
sar
push
or
or
sub
aaa
and
or
into
and
xchg
sub
imul
or
sub
incb
fwait
mov
das
loopne
inc
pand
lcall
push
dec
outsb
outsl
divb
call
mov
cltd
dec
dec
movd
cmp
xchg
jp
pop
jo
pop
ss
imul
faddl
sti
mov
xor
pop
xor
call
push
outsl
mov
imul
sahf
dec
sbb
fs
repz
ja
sub
out
daa
cwtl
jle
int3
xchg
jle
mov
inc
rorb
push
jmp
or
int3
sti
mov
movsb
shl
jae
inc
xchg
rorb
addr16
mov
popa
sbb
inc
lahf
add
push
or
xor
jg
mov
or
mov
roll
jae
push
fistpll
test
pcmpeqw
aam
sbb
cmp
cld
rorl
xchg
pop
into
inc
jle
mov
subl
mov
sahf
sub
mov
xchg
xchg
pushf
or
ss
sbb
int3
xchg
dec
xchg
in
cmp
outsl
push
xor
mov
add
xor
adc
jmp
movsl
push
pushf
sub
ljmp
mov
cmp
flds
inc
aam
mov
mov
or
fwait
mov
mov
in
mov
test
jg
and
mov
clc
pop
adc
and
jno
cwtl
outsb
out
out
out
jle
pushf
mov
push
lcall
mov
insl
sbb
pop
repz
mov
mov
stos
je
out
fistpll
and
addr16
shll
xlat
push
notl
daa
or
inc
cwtl
jns
adc
repz
test
or
or
loope
icebp
sbb
mov
inc
mov
inc
iret
lea
movsl
push
ds
movsb
jno
push
cli
movsl
mov
sbb
jg
or
jnp
sbb
aas
mov
pop
loopne
or
iret
ss
xchg
orb
dec
xchg
arpl
rorb
sbb
cmpsl
mov
xor
out
xor
adc
movb
push
inc
inc
jo
pop
mov
add
loope
pusha
das
push
test
lcall
add
testl
sbb
mov
xchg
adc
adc
call
fsubrl
push
je
cmp
mov
popf
mov
pop
inc
sub
jecxz
std
in
xor
dec
xor
xchg
ds
in
leave
lahf
xor
or
dec
les
out
push
mov
jnp
pop
pop
loop
and
dec
icebp
cmp
sbb
jge
cmpsl
jo
cmp
inc
ljmp
dec
imul
out
jae
mov
add
ret
sti
arpl
lock
shrl
xchg
cli
jb
xchg
mov
into
jle,pn
push
mov
js
dec
inc
inc
lds
adc
idiv
dec
out
rorl
lods
inc
repnz
cs
ljmp
aaa
mov
hlt
outsl
call
or
sub
cmp
cli
xor
cwtl
icebp
xor
and
cmp
xchg
cmp
popa
jecxz
stos
test
aam
jbe
sub
push
xchg
movsl
adc
repnz
jno
imul
push
pop
call
lods
mov
fucomp
in
cmp
shl
xchg
iret
xor
xor
ja
lods
lahf
pop
pop
xchg
sub
xor
sbb
fmul
fbld
call
stos
xlat
sbb
add
add
in
sbb
and
adc
mov
lods
or
xchg
ljmp
cld
and
sub
jns
call
sub
and
in
xchg
fildl
jmp
mov
push
jmp
movnti
pop
stos
ja
lcall
dec
and
ffree
xor
dec
imul
loope
jb
cli
inc
call
repnz
fdivrp
std
pop
arpl
xor
out
mov
and
xor
out
iret
pop
jae
sbb
push
stos
and
xchg
cli
aas
sar
add
popa
arpl
pop
mov
aam
sti
mov
loope
and
cmc
xlat
leave
bound
sbb
jge
inc
arpl
or
push
lea
das
aas
ds
and
test
mov
mov
adc
cmpsb
xchg
lret
es
cmp
inc
leave
push
fisttps
outsl
sbb
push
jb
cli
lahf
or
roll
or
dec
loop
lahf
cmp
xchg
aam
jb
in
scas
outsb
outsb
fbld
and
in
je
lods
mov
push
jb
push
cmpsl
and
cltd
shrb
movsl
mov
mov
fcomi
outsb
lahf
add
test
testl
mov
pop
shrl
push
jle
mov
push
lahf
in
add
xor
push
repz
jg
and
das
lahf
jmp
sub
loope
repnz
cli
adc
xor
rolb
mov
cmp
pop
xchg
mov
into
fistl
aam
call
sbb
push
imul
ret
xchg
pop
mov
imul
pop
fstl
sub
pop
roll
or
cmp
mov
dec
gs
movsb
lahf
imull
imul
ret
mov
jo
fistps
sub
test
xor
sub
push
cmp
dec
pop
sub
mov
mov
cmp
inc
xor
mov
lret
lock
cmpsb
push
push
sahf
jp
cmc
andl
mov
push
imul
push
cmp
push
ret
daa
in
ds
mov
arpl
jecxz
loop
popf
sahf
cltd
push
out
mov
push
movsl
ret
jb
imul
adc
aaa
mov
and
lret
push
out
int3
fdivr
add
mov
push
push
xchg
pusha
test
test
shrl
repnz
lock
sbb
inc
jge
in
cwtl
outsl
sub
std
data16
fisttps
stos
mov
std
lds
cld
mov
xor
test
jo
andl
sbb
loope
mov
xchg
mov
mov
fstl
or
shrl
pushf
push
adc
andb
cmp
sarb
test
pusha
xchg
loope
cmp
ss
insb
lahf
outsl
mov
pop
mov
push
mov
shlb
dec
ljmp
decb
mov
or
jno
or
lods
pop
push
popa
out
dec
sub
les
jmp
popa
mov
dec
ljmp
xor
dec
mov
decb
shrb
test
int3
lds
inc
sahf
mov
and
shrl
icebp
mov
cli
sbb
outsl
jb
dec
xchg
xchg
push
and
jb
ret
dec
scas
adc
push
test
pop
sub
xor
mov
dec
inc
push
test
ret
mov
inc
in
ljmp
pushf
iret
mov
arpl
aam
cwtl
call
cld
in
dec
sbb
repnz
sti
inc
mov
sbb
ljmp
jnp
jae
sub
xor
repnz
pop
mov
or
or
cmc
cwtl
xor
js
into
and
add
jecxz
mov
jns
shrl
xor
arpl
push
xor
das
sbb
jmp
orb
in
outsb
js
and
pushf
dec
or
inc
pop
ljmp
pop
cmp
hlt
fimull
rolb
xchg
ret
xchg
lods
fld
sbb
sahf
movsl
iret
scas
xor
fildl
data16
jge
mov
cmp
bound
mov
jmp
mov
ret
sbb
xorb
jbe
xor
jge
push
out
mov
cmpsl
ret
sub
mov
pop
or
loopne
ds
ret
xor
jb
ror
hlt
ja
aam
mov
ret
pushf
mov
rcll
out
test
shll
xchg
xchg
dec
inc
xlat
mov
adc
jecxz
test
test
adc
aam
adc
mov
icebp
lock
dec
xchg
shll
cmp
xor
add
fistps
mov
xchg
outsb
cs
fdivs
jecxz
push
mov
mov
xchg
dec
xchg
leave
sahf
jg
addr16
outsl
pop
adc
xchg
fs
data16
xchg
jns
daa
ficoms
cmpsl
jae
dec
xchg
fwait
gs
loope
fidivrs
out
lret
arpl
fldcw
imul
xchg
lret
sbb
pusha
cmpl
pop
xor
fbld
xchg
iret
mov
xlat
push
add
fistpl
lret
sti
fidivs
pop
mov
pop
scas
pop
scas
pop
xor
ja
mov
mov
test
dec
push
mov
sti
fsubs
inc
mov
test
pop
dec
add
popf
sti
aaa
mov
mov
xchg
nop
cmp
and
cmp
test
lcall
lods
add
xor
fcmovu
neg
dec
mov
sbb
repz
inc
outsl
shrl
jle
or
daa
mov
leave
pop
xchg
and
mov
mov
xchg
xchg
stos
mov
mov
scas
lret
mov
arpl
dec
push
iret
and
pop
and
stos
jmp
ret
popf
pop
mov
dec
das
dec
ja
mov
imul
pop
mov
mov
sbb
rorb
mov
jae
outsl
inc
mov
jg
mov
pop
out
idivl
jg
addr16
addr16
push
pusha
pop
mov
cmpl
sahf
mov
in
jle
call
mov
outsb
sbb
xchg
or
sbb
xchg
sbb
or
pop
repz
lret
sahf
cmp
mov
ljmp
xor
test
sub
mov
ss
dec
xlat
sub
jns
adc
xchg
sbb
push
into
xor
std
sbb
sbbb
push
ljmp
and
jle
adc
hlt
sub
leave
aaa
jle
push
xchg
mov
mov
push
std
out
cmpsl
or
xor
out
je
inc
xchg
addr16
cld
jbe
test
dec
lahf
test
shll
adc
imul
push
adc
ljmp
push
addb
into
js
add
add
mov
mov
sarb
loope
jle
xchg
or
pop
ret
movsb
out
lods
mov
push
lds
inc
aas
aam
and
xor
int3
fldt
mov
mov
or
out
movsl
sub
ljmp
jne
movsb
daa
loopne
inc
pop
adc
stos
sbb
mov
jmp
add
dec
das
loop
addr16
sbb
scas
lock
dec
push
js
inc
pushl
lods
cmc
cltd
xchg
out
pop
push
insl
adc
repnz
or
xchg
cmp
and
pop
pop
ret
jnp
inc
xchg
shll
pop
jne
mov
jnp
inc
out
mov
add
mov
mov
and
pop
arpl
sbb
pushl
in
mov
xchg
sti
add
por
dec
cli
pop
xor
jno
dec
aaa
push
mov
push
out
cs
or
jne
inc
clc
out
lock
mov
les
xchg
sub
xorl
inc
stc
hlt
jecxz
aaa
std
mov
mov
adc
hlt
cmpsl
sub
test
or
mov
sbb
cmp
pushl
in
push
mov
shr
and
mov
dec
int
cmp
push
sub
ljmp
js
pop
push
cli
inc
pop
or
repz
mov
rcrb
inc
jle
rclb
stc
test
xchg
ss
mov
ret
sub
and
sub
dec
leave
out
repz
pop
ljmp
test
aas
cs
fs
mov
xchg
jae
inc
xor
pushf
mov
push
or
loopne
and
dec
cltd
imul
mov
popf
iret
jae
sahf
or
mov
int
add
movsl
xor
movsb
rcl
inc
jle
lret
xor
into
stos
enter
mov
cmp
jb
std
cld
js
or
add
ds
cs
jno
or
ficoml
inc
shlb
mov
pop
pushf
mull
adc
insl
inc
or
out
repz
in
and
int3
and
in
cli
add
loope
in
movsl
ret
sti
mov
mov
inc
fildll
mov
jae
les
iret
ljmp
or
call
rcrl
xor
mov
or
or
and
push
push
jg
stos
cltd
lea
push
pop
jecxz
xlat
xchg
out
mov
lret
mov
mov
sbb
pushf
mov
jmp
push
or
mov
imul
ret
add
stos
imul
xor
leave
sub
add
call
jne
sub
sub
imul
xchg
or
cltd
pusha
stos
daa
fmul
mov
inc
fisttpl
mulb
jmp
pop
pop
cmp
pop
lret
lahf
mov
pop
push
sar
lret
inc
pop
mov
test
cmp
stc
scas
pop
cmp
sti
imulb
lcall
push
pusha
test
int
fldt
fmul
adc
aaa
push
int3
outsl
movsl
inc
and
jb
cmp
popa
outsb
nop
mov
mov
outsb
inc
test
push
and
leave
icebp
test
sbb
jg
stos
icebp
test
js
inc
outsb
divl
adc
cli
pushf
jecxz
adc
and
idivl
push
les
popf
or
xchg
js
cmp
subb
loopne
mov
aad
mov
fimuls
dec
nop
push
jae
dec
insb
jecxz
cli
xlat
jecxz
cmp
cltd
push
int
loope
pop
adc
lds
xor
out
mov
outsl
es
stc
and
dec
xchg
and
and
xor
cmp
mov
pop
cmpsl
test
enter
jge
jno
push
fildl
and
or
clc
inc
mov
pop
mov
sarl
add
xor
mov
inc
push
xchg
mov
test
push
cli
addl
jb
pop
repnz
out
jecxz
push
add
ficoml
mov
fdiv
cmp
jno
outsb
cwtl
cld
loope
dec
js
or
in
pop
pop
js
or
jecxz
aam
icebp
add
out
lods
mov
inc
or
outsl
inc
cmp
pop
xchg
shrb
adc
pop
mov
fldl
out
jne
dec
cmp
insb
cmp
or
or
push
pusha
pop
sub
in
loope
sbb
lods
mov
insl
jae
lret
push
into
outsl
lcall
clc
jns
xlat
or
clc
jo
inc
push
repnz
sbb
leave
movsb
mov
xchg
jg
pop
push
repnz
les
scas
aaa
ficompl
xor
lods
into
outsl
mov
pop
dec
sub
cmp
push
ds
stos
rcr
icebp
inc
std
sub
ljmp
pop
xor
jecxz
add
jb
mov
lret
mov
push
pushf
cmp
xlat
icebp
adc
pop
mov
lret
inc
dec
int3
in
mov
mov
mov
repnz
inc
cmp
mov
xor
adc
dec
outsb
mov
int
jecxz
repz
std
sbb
inc
jmp
push
sbb
sub
cmp
sub
sahf
bound
push
into
pushf
sti
aaa
push
jno
xor
hlt
lea
test
mov
movsl
lahf
mulb
jmp
repz
pop
test
and
nop
mov
scas
or
mov
lcall
add
ret
gs
daa
cmpsb
ss
xchg
jns
jmp
or
lret
push
jmp
jmp
lret
adc
pop
or
movsl
pop
sub
xlat
xchg
mov
test
cmp
ror
mov
cli
mov
and
pop
mov
shr
dec
or
test
imul
mov
lods
sub
add
lcall
sbb
or
pushf
dec
lcall
cmc
or
dec
int3
subb
call
fisttpll
or
or
xchg
das
out
sti
lret
pop
cmp
aaa
je
mov
shlb
cli
fst
mov
test
outsl
and
call
mov
ljmp
imul
test
shrl
lock
icebp
fisttps
mul
and
sub
enter
mov
jb
out
mov
cmpsb
jo
xor
nop
and
mov
icebp
lds
xor
jmp
test
mov
cmp
outsl
adc
je
dec
mov
sub
ds
rorl
fucomip
and
push
inc
or
ret
xchg
je
ds
add
mul
cltd
imul
push
pop
gs
dec
fistpll
shll
pcmpeqw
shll
lret
aas
scas
or
test
dec
sbb
mov
xor
push
hlt
out
jp
xchg
sbb
adc
iret
cli
push
jns
dec
sbb
das
ret
js
jns
inc
add
mov
outsb
jae
mov
out
loopne
push
testb
adc
adc
sarl
or
enter
sbb
loopne
or
cmp
sbb
subl
sbb
xchg
sbb
test
sub
rol
xchg
xchg
mov
push
push
lahf
cmc
aam
and
push
jbe
or
fisttpll
push
cltd
xor
jecxz
push
mov
lods
mov
stc
bnd
mov
sub
out
xchg
pop
add
insl
cmp
jb
or
sbb
lods
xor
cld
aam
les
popa
jmp
loop
and
mov
dec
mov
mov
aaa
std
in
sbb
mov
adc
outsl
int
dec
xchg
adc
dec
push
jmp
jge
cld
cmp
js
pusha
dec
jbe
pop
lcall
jno
repnz
jnp
push
inc
sbb
dec
push
xchg
scas
jmp
dec
sub
jge
sbb
std
xor
mov
sub
idivl
shl
mov
sbb
jle
mov
adc
push
inc
jb
or
pop
iret
xchg
dec
mov
jmp
std
int3
jno
mov
sbb
sub
adc
xchg
sbb
roll
mov
inc
add
jne
mov
and
sti
xor
cmp
xor
adc
unpcklps
mull
lahf
aam
aaa
mov
and
or
outsl
dec
enter
lods
insl
and
and
fsubrp
mov
cmpl
or
ret
xchg
jecxz
ror
test
test
stc
mov
das
js
mull
jae
mov
sbb
movb
cmc
ljmp
cltd
mov
inc
cmp
pop
sti
in
push
mov
dec
in
jae
cli
dec
inc
jno
or
push
popf
push
mov
mov
adc
movsl
xchg
cmp
xor
mov
jbe
fidivrs
clc
mov
fidivl
enter
cmp
popa
out
cmc
push
mov
hlt
pop
movsb
ljmp
ret
xor
adc
inc
call
mov
mov
ljmp
out
adc
inc
into
in
cmp
or
ss
xor
and
imul
inc
stos
fwait
daa
xchg
mov
add
aas
jb
push
je
pop
adc
xorl
ss
push
pop
pop
mov
fildl
insl
and
xchg
pop
test
or
test
sti
inc
adc
data16
or
pop
and
xor
sbb
push
dec
pushl
outsl
adc
or
les
mov
das
jno
xor
jae
pushf
out
mov
mov
popf
fstl
xchg
xchg
das
lds
sub
or
mov
jmp
pushf
ljmp
adc
fsubrl
insl
cwtl
mov
add
mov
or
inc
add
mov
outsb
ds
add
dec
daa
jecxz
loopne
inc
cmp
scas
into
push
imul
mov
hlt
loope
lods
xchg
addr16
lods
pop
cmpsb
jno
loope
dec
cmp
mov
mov
dec
mov
cmp
xor
ljmp
dec
add
pop
test
dec
rcll
xlat
incl
sub
push
sahf
lock
mov
add
jmp
jae
in
sub
pushf
loopne
pop
mov
push
daa
or
test
mov
iret
cmp
push
xor
scas
push
pop
cmc
xchg
add
fisttpl
dec
jbe
xchg
add
add
mov
pop
and
in
sub
cmc
inc
inc
cltd
dec
adc
aaa
shll
adc
mull
push
leave
lock
inc
mov
std
loope
sub
shrl
xor
leave
mov
out
adc
xor
movsl
sti
fs
adc
clc
cltd
dec
push
call
test
dec
pop
push
mov
add
hlt
outsl
pop
xor
adc
and
js
cld
mov
in
movsb
aam
add
loopne
sub
pop
mov
sub
mov
jl
adc
enter
jg
pop
xchg
or
adc
add
inc
mov
int
jmp
jno
cmp
ret
cmp
sub
sbb
ss
dec
das
inc
jno
sbb
jbe
inc
popf
pop
mov
dec
sbb
movsb
lock
sub
incb
int3
push
arpl
or
inc
xor
jo
call
sti
pop
arpl
lret
or
inc
cmc
icebp
popf
mov
sub
insl
loope
pop
mov
xor
fcoml
jns
adc
into
pop
ficomps
or
aaa
data16
mov
jnp
sub
xchg
mov
out
add
test
loop
sti
test
fdivl
sbb
or
std
sbb
and
decl
repnz
hlt
fisubrs
and
fs
mov
out
int
cmc
in
lods
push
adc
les
fstl
push
xorb
sub
out
int3
mov
je,pn
leave
xor
and
push
jo
stos
xor
stc
jae
jb
insl
test
in
pop
mov
sti
push
and
push
cltd
movsb
adc
jmp
jne
rcll
jg
sub
aad
and
loope
cmc
mov
push
lret
insl
jl
decb
pushf
lods
daa
roll
sbb
out
and
ss
push
data16
in
testb
pop
cmp
fwait
push
xchg
movsl
mov
or
push
scas
xchg
or
mov
sahf
stos
mov
test
push
inc
int
test
popa
cmp
test
or
and
lret
lret
mov
mov
pop
inc
iret
add
inc
inc
mov
lret
test
test
push
std
add
imul
and
mov
push
xchg
daa
arpl
in
shlb
pop
outsl
mov
cmp
xor
or
into
and
sbb
dec
shll
sub
adc
addr16
clc
cwtl
mov
ret
push
ljmp
mov
mov
mov
mov
out
add
or
mov
sbb
int
imul
test
popf
testl
fistpl
fs
test
xchg
mov
sub
mov
jae
inc
dec
loope
cli
mov
or
sbb
iret
xor
sti
loopne
lods
mov
jl
add
dec
testb
addb
xlat
adc
mov
xlat
shl
ljmp
cli
rcrl
pop
fisttpll
mov
xor
mov
out
xchg
stc
adc
sub
jmp
pop
aad
mov
sbb
pop
cmp
inc
rorl
rcr
lods
xor
jns
mov
and
mov
lret
bound
int3
sbb
scas
popf
insl
inc
xchg
xor
enter
sahf
xor
cmp
pop
adc
add
sbb
into
jmp
pop
lret
pop
adc
jle
loopne
das
push
sbb
jmp
xchg
jbe
dec
sahf
mov
cwtl
into
insb
pop
inc
mov
cmp
and
enter
mov
xor
lret
mov
or
outsb
push
ss
aas
dec
mov
cli
pop
inc
gs
cs
fsubrl
mov
xor
shr
mov
out
add
sbb
cli
push
ss
aad
jae
fcomi
pushf
testb
adc
lea
stc
jns
repz
mov
mov
push
shr
add
pop
in
int3
jo
mov
push
insb
or
jns
lods
adc
push
jp
mov
mov
popf
ljmp
and
addr16
mov
xchg
rcl
and
rep
push
outsl
int3
add
xchg
fists
fnstcw
mov
add
std
icebp
sub
ret
adc
popa
test
pop
mov
mov
and
outsl
into
out
dec
cli
vunpckhps
mov
pop
das
dec
popf
movsl
sub
shll
outsl
sbbl
add
add
and
push
pushf
ss
xchg
mov
inc
ja,pt
lods
dec
push
jb
outsl
int
outsb
fprem
rclb
xor
fists
jp
mov
cwtl
mov
and
cmpsl
inc
sub
out
dec
imul
fsubr
mov
sahf
inc
xlat
dec
push
in
and
or
mov
subb
xor
sbb
xchg
aam
or
mov
rorl
mov
or
sarb
mov
rorl
ss
xlat
sti
cli
or
push
movb
xchg
int
xlat
std
das
push
popf
adc
outsl
add
fcmovnbe
loope
push
cmp
test
loope
jecxz
pop
andl
addr16
adc
dec
popf
cmp
xchg
fsubrl
ret
pusha
fadd
in
stos
fwait
or
ja
mov
clc
adc
movsl
jle
add
test
pop
xor
outsl
lret
cmp
in
in
jecxz
in
jle
mov
mov
ficoms
orl
imul
popf
test
rcrb
addr16
test
lahf
in
and
pand
cmp
jmp
pushf
push
jl
dec
leave
push
negb
daa
cli
sbbb
mov
push
inc
dec
pop
sub
neg
fdivrl
lods
lahf
xchg
mov
dec
std
sti
push
jae
adc
mov
popf
hlt
and
ds
pop
fwait
mov
or
aas
fistpl
lea
mov
adc
pop
pop
imul
push
push
or
loope
or
cmp
cmpsl
fnstsw
clc
ret
jg
fsubrs
icebp
cmc
push
push
jmp
imul
icebp
inc
iret
inc
imul
xchg
xor
hlt
les
stc
in
int3
mov
sub
push
add
arpl
add
notl
mov
sub
dec
inc
inc
pushl
lahf
loopne
fcmovbe
mov
inc
cmp
jmp
fwait
pop
clc
xchg
negb
data16
loope
stos
leave
add
cld
insb
pop
imul
repnz
ja
xchg
jge
testb
fcoml
mov
jmp
movsb
rcrb
test
fbstp
cmp
mov
enter
scas
test
sbb
int
sbb
cmpsl
push
ja
xor
out
std
cld
pop
jecxz
cmp
testl
in
movsb
ds
mov
jle
jb
cmc
add
mov
movsb
push
popf
add
shlb
nop
imul
imul
roll
add
inc
xchg
out
aam
dec
addr16
mov
mov
and
sbb
mov
jno
sub
enter
in
fdivs
xlat
dec
cli
jecxz
mov
aas
xlat
out
sbb
push
xor
cmpsl
cmp
push
sti
mov
je
movsl
into
jl
loope
jle
inc
push
int3
hlt
pop
mov
xchg
add
test
mov
mov
cmp
lret
dec
ljmp
mov
test
popf
sub
mov
loope
cmp
divb
adc
push
in
sub
test
jmp
push
inc
fsubrs
mov
or
call
xchg
arpl
out
lahf
pop
fdiv
pop
popa
mov
add
xchg
cmp
lods
xor
test
cmpsl
in
adc
ucomiss
dec
adc
stos
and
das
pop
and
fidivl
and
mov
jg
and
sub
aaa
adc
mov
mov
and
and
push
push
test
mov
adc
imul
into
es
jecxz
gs
jb
jae
xor
push
inc
mov
push
jmp
mov
aad
lock
xchg
mov
inc
aaa
fsub
push
cmp
xor
test
mov
dec
aas
mull
mov
mov
or
sbb
mov
leave
adc
loope
jecxz
ficoms
out
adc
fidivs
add
jl
pop
lret
hlt
pshufw
and
mov
popa
add
lds
jno
cli
in
xorl
js
jae
ds
outsb
or
jb
fidivs
jg
out
std
je,pn
dec
fiaddl
mov
out
push
push
lock
dec
std
or
in
loopne
mov
jmp
push
scas
mov
fs
ljmp
jl
into
es
sbb
adc
and
or
daa
in
inc
mov
cmc
sub
adc
sbb
mov
ss
test
jae
int
xor
push
dec
mov
or
cli
jp
cmp
mov
testb
pop
push
pop
and
xchg
int3
cld
ss
sub
sbb
lahf
sub
dec
and
fsubs
push
pop
mov
dec
test
and
fisttpl
pop
add
frstor
cmp
inc
mov
dec
ljmp
xchg
fisttps
in
hlt
sub
call
cld
cmp
mov
int
scas
cmp
arpl
push
loope
add
xor
int
push
out
mov
addr16
fwait
mov
add
sarl
inc
loopne
xor
adc
xor
out
insb
leave
psubsw
xchg
mov
mov
sub
and
add
dec
and
jo
dec
or
repz
and
stos
loop
cltd
insb
xchg
lods
and
cmp
xor
clc
scas
repz
shlb
push
loop
xchg
mov
ret
lea
xor
ja
inc
mov
add
cmp
cmc
pop
mov
out
add
sti
aaa
sbb
nop
aas
mov
pusha
pushf
add
mov
mov
cmp
xchg
mov
movsb
or
fcomps
out
mov
loop
sbb
les
xor
push
in
add
mov
fisttpll
and
out
jns
fisttpl
jnp
ds
sarb
and
or
repz
xchg
xchg
cltd
mov
sbb
ret
insl
sti
xchg
pop
bound
std
ljmp
pop
sbb
inc
dec
mov
jge
add
pop
jnp
out
mov
xlat
dec
ss
aam
adc
sbb
outsl
or
std
popf
adc
ret
hlt
cmp
sahf
pop
lods
mov
hlt
rcll
stos
adc
pop
decl
out
insl
xchg
jne
repz
and
jae
mov
test
adc
aad
sti
or
shlb
cmc
pop
jns
cmp
orb
mov
and
sbb
add
mov
fsubl
pop
push
adc
jp
insl
cltd
or
lds
mov
icebp
test
and
lcall
mov
mov
or
xchg
xchg
bound
add
cld
mov
fdivrl
push
mov
mov
jecxz
inc
loopne
or
push
fisubrl
sub
jae
and
sub
int3
pop
mov
insb
or
dec
mov
pop
lods
loopne
loopne
push
pop
call
xor
mul
or
inc
adc
fisubrs
jbe
mov
xchg
mov
outsl
rorl
fisttps
and
in
cmp
and
push
add
mov
loope
mov
dec
add
xor
or
iret
aaa
mov
pusha
nop
pop
frstor
mov
dec
mov
add
lcall
int
ud0
test
loopne
xor
shl
int3
add
sbb
push
pop
pushf
xchg
cmp
in
and
fnstsw
dec
or
xor
jo
sbb
inc
push
and
jmp
jne
xor
fdiv
mov
pop
push
xchg
insb
cmp
imul
push
adc
and
imul
loopne
sti
test
jno
pop
sar
or
mov
stc
jno
jg
push
subl
js
jno
outsb
in
jne
jae
cmp
lret
add
pop
lods
bound
xorl
pushf
add
add
adc
bound
jbe
lods
cmc
jb
cs
sbb
jle
fstp
fstl
pop
push
xor
popf
std
xchg
outsb
dec
popa
inc
pop
xor
aad
add
push
ds
pop
push
mov
push
fwait
std
mov
js
pop
ss
fcomps
loop
mov
and
dec
xor
lahf
outsl
adc
outsb
jle
stos
and
ljmp
and
mov
xor
cld
or
push
xor
std
xor
outsl
sbb
adc
mov
mov
test
test
fbstp
mov
incb
les
shlb
xor
cmc
add
adc
cmp
popa
sbb
sti
or
inc
sahf
sub
mov
imul
loope
mov
mov
bound
rcll
int
mov
dec
movsl
rcll
movsl
lods
int3
fsts
mov
jmp
mov
dec
out
jae
inc
sbb
mov
loopne
clc
ja
push
add
or
jmp
cmp
movsl
push
push
sub
dec
into
addb
out
out
mov
sahf
nop
and
stc
mov
cs
ficoml
xor
out
imul
pop
and
std
cmp
mov
mov
shll
xchg
dec
mov
dec
dec
inc
test
xchg
jne
xchg
pop
add
adc
add
cltd
scas
pushf
mov
or
add
and
push
sub
and
int3
ljmp
pop
xor
mov
test
xchg
outsl
xchg
jmp
or
inc
pushf
lea
xor
add
sbb
and
test
xor
adc
jle
inc
ljmp
inc
xchg
adc
xor
test
mov
repnz
loop
push
xchg
jbe
or
arpl
adc
mov
dec
fisttpll
add
movb
std
dec
test
jge
popa
mov
cli
daa
cli
frstor
mov
das
sbb
pop
mov
or
sbb
fbstp
incb
cmp
out
mov
mov
push
test
mov
mov
hlt
int
lods
mov
out
dec
ljmp
sahf
jmp
xchg
call
mov
mov
test
lret
xor
lcall
add
sbb
push
xchg
jae
or
pusha
mov
adc
push
ror
mov
jl
pop
dec
sbb
adcl
int3
js
mov
and
sbb
lock
jge
xchg
sub
jg
jge
pop
lock
jne
pop
stc
fdivp
leave
mov
js
into
adc
mov
xor
jg
mov
idivb
xor
aam
out
ret
pmaddwd
roll
lds
std
push
ret
sbb
inc
xor
gs
ja
fnstenv
fistps
jg
jecxz
ret
imul
mov
jp
push
out
data16
ret
jns
add
aas
insb
ss
addr16
dec
pop
stc
loope
cmp
push
dec
or
cli
mov
mov
cs
mov
pop
ret
test
pop
mov
push
mov
or
push
xchg
iret
xchg
aaa
push
adc
int3
fsubr
sub
sahf
jecxz
in
cmp
cmp
pop
cld
cmpsl
or
mov
jg
dec
movl
xor
mov
or
push
popf
cmp
mov
popa
lret
mov
and
pop
ljmp
out
test
mov
xor
add
popf
cs
cld
sbb
push
or
mov
jmp
test
cmpsb
jp
loope
push
js
mov
mov
fs
mov
cmp
outsb
add
push
mov
loope
imul
or
inc
daa
xor
pop
mov
dec
mov
push
loope
test
dec
or
dec
arpl
or
popf
mov
add
rcll
pushf
fcmovne
jecxz
mov
add
add
std
mov
xor
add
mov
push
jno
or
push
jl
aaa
pop
sub
push
mov
and
inc
rcrl
dec
shrl
stc
out
xchg
sti
xor
mov
jmpw
outsl
xor
adc
dec
fisubs
jecxz
test
pushl
stc
movsl
sti
mov
push
scas
mov
pop
sbb
call
jbe
sub
aaa
cltd
movsl
fxch
jle
rcll
fadds
jbe
stc
pop
jae
xchg
in
sub
adc
outsb
aas
inc
inc
jl
fistpll
xor
mov
sub
pop
fisubrl
fwait
push
mov
push
xlat
xor
push
and
ret
dec
loope
jp
in
outsl
stc
ss
mov
iret
cmc
xor
xchg
mov
inc
test
sbb
sbb
or
rorl
shl
or
pop
bound
incl
inc
add
xchg
push
cmp
dec
mov
popf
pushf
movd
daa
mov
testl
scas
shl
and
out
push
outsl
push
cli
cmp
pushf
leave
cmc
xchg
mov
jb
std
das
push
les
cwtl
test
daa
icebp
or
in
or
push
cmp
inc
and
and
mov
lret
adcl
xchg
push
fisttpll
cmc
in
or
dec
arpl
lods
xor
jmp
sub
movsl
mov
mov
je
push
sarl
pop
jg
scas
pushf
or
cld
jg
daa
inc
jp
mov
lahf
jns
xchg
cwtl
mov
mov
pop
fs
ret
xor
jecxz
sti
dec
test
cmp
push
in
lret
sub
jp
aaa
stos
cmp
faddl
in
test
hlt
sahf
clc
cs
dec
jmp
or
jl
cltd
mov
push
sbb
mov
mov
je
lret
or
mov
add
je
popa
shll
jl
sub
xchg
or
cmc
call
insb
lock
xchg
rcrl
sahf
icebp
jp
mov
fwait
repz
pusha
push
mov
sub
rcrl
mov
lea
test
rcrb
fadds
or
ljmp
jne
enter
arpl
in
inc
int3
out
and
and
fildll
push
ljmp
sub
sub
ret
enter
inc
enter
mov
jmp
sbb
inc
sbb
adc
sbb
testb
sub
das
push
repz
xor
cmpsl
popa
std
adc
or
cli
push
fldt
xor
jae
mov
add
out
test
rorl
lret
sbb
add
or
sbb
pop
sti
jle
fsubr
push
inc
add
cltd
xor
sub
adc
inc
out
notb
das
dec
or
and
xchg
pusha
mov
imul
lret
movsl
mov
mov
inc
jnp
sub
sbb
or
insb
pop
or
iret
out
xor
je
in
es
cmpsl
adc
loopne
out
inc
shrl
or
adc
pop
cwtl
and
icebp
mov
int
sbb
cmc
adc
add
daa
imul
sti
push
ljmp
cli
xchg
loope
mov
mov
pushf
pop
push
mov
jge
fxam
xchg
push
mov
pop
out
mov
cwtl
or
dec
xchg
mov
pop
popa
mov
rcrb
int3
std
mov
je
adc
lds
mov
cmpsb
mov
or
shlb
xor
xchg
or
dec
int3
sti
shll
ret
dec
push
jno
xchg
repz
orl
and
aaa
push
push
jbe
jmp
pop
jge
mov
adc
movsl
push
add
pop
sti
dec
call
std
mov
push
stos
or
mov
and
xchg
insb
scas
or
mov
testl
out
sar
mov
xchg
scas
sub
or
jmp
andl
dec
out
or
add
dec
in
mov
jl
jmp
mov
xchg
jae
addr16
ds
into
push
and
dec
mov
push
movsb
clc
popa
cmp
rorb
or
sub
lahf
movsl
push
jl
movsl
ja
xor
clc
call
sahf
js
add
inc
add
sub
or
sbb
jle
leave
dec
stos
mov
loop
add
sub
mov
and
insl
and
push
lds
sbb
stos
fs
mov
daa
mov
rcll
and
das
mov
pslld
mov
ds
xor
loope
dec
dec
mov
jb
sub
bnd
rcll
adc
pop
andl
cld
cmpsb
call
dec
and
aad
adc
jne
inc
jg
int
icebp
sti
or
sbb
cmc
dec
jae
xchg
rdpmc
sahf
mov
cli
mov
out
dec
pop
pop
xor
jae
out
iret
inc
pop
pop
or
xchg
fsts
les
lds
add
cmc
lea
faddl
or
mov
mov
sbb
pop
iret
or
dec
mov
xor
ljmp
scas
jo
hlt
xchg
jg
mov
lods
lods
mov
icebp
jae
sub
insl
movsl
xlat
dec
add
sub
ljmp
adc
lea
enter
xchg
cmc
cld
push
xchg
popa
mov
leave
sbb
outsb
sub
out
fucom
sbb
add
ret
mov
repz
mov
adc
or
popa
xor
pop
add
stos
stc
sub
pop
push
ss
sub
push
cmp
or
enter
cmc
sbb
sbbb
rcll
pop
out
dec
dec
xchg
jns
xchg
inc
fxch
xlat
pusha
in
mov
dec
pop
and
pop
mov
dec
pop
sub
lods
insb
std
aam
in
sub
or
pop
push
fistl
xor
or
inc
xchg
pop
xorb
pop
addr16
loope
cwtl
add
jge
loope
inc
mov
sarl
pop
fst
jnp
arpl
pop
std
sub
mov
sub
mov
adc
movsb
shll
xchg
pushf
sbb
dec
xor
clc
mov
add
or
jecxz
mov
clc
cmc
shrl
xor
or
adc
iret
movsb
mov
les
sbb
jge
cmp
fisttpll
cmp
leave
outsl
push
dec
dec
inc
mov
fcmovne
loopne
add
xor
mov
sbb
scas
push
cmp
pusha
or
and
clc
xchg
hlt
out
lods
into
dec
or
jmp
cs
dec
nop
in
push
mov
or
xchg
jle
test
pusha
mov
dec
shl
add
push
pop
ljmp
in
arpl
arpl
xchg
push
lret
pushf
sar
push
pop
ret
out
xor
test
xchg
add
mov
call
outsb
mov
inc
lods
dec
inc
es
int3
mov
loop
xor
or
jb
lock
sarl
inc
imul
jno
ficomps
scas
repz
stos
clc
out
cli
mov
ja
aaa
cmpsb
push
push
add
lret
sahf
xlat
xor
shr
xor
aam
xchg
in
scas
lret
xchg
imull
jae
fwait
cmpsb
movsl
into
or
jo
ss
imul
ret
ret
jecxz
test
mov
arpl
sub
ljmp
sbb
add
ljmp
loopne
and
lods
dec
into
lock
out
cmp
je
and
cmp
jae
adc
mov
mov
jae
jbe
int3
mov
mov
or
movsb
das
xchg
cmc
insb
jnp
push
out
and
jnp
adc
repnz
fidivl
out
lea
jp
xor
ljmp
adc
pop
and
mov
cmc
test
cwtl
insl
xchg
les
cmp
enter
or
xlat
nop
sbb
rorl
hlt
mov
insl
inc
lea
pop
sbb
add
iret
xor
and
push
inc
loop
dec
mov
ret
jnp
jg
jbe
xor
inc
stc
push
mov
lock
movsl
inc
pushf
inc
sub
shrb
sahf
fcmovne
cmpsb
in
aaa
loope
jmp
push
test
jne
pushf
sbb
sbb
xchg
lret
repnz
stos
push
mov
ja
inc
pop
popl
xor
outsb
out
jmp
cs
insb
ljmp
cld
xchg
jp
mov
stos
xchg
ljmp
lods
jle
sbb
or
icebp
fldt
xor
loopne
dec
adc
clc
scas
das
loop
in
and
nop
ret
cmp
mov
adc
jno
and
sahf
clc
test
scas
test
mov
call
jge
stos
ror
sbb
arpl
insb
test
sub
inc
cwtl
or
xor
push
cld
and
or
add
xchg
lods
aam
sub
out
sub
bound
out
fwait
xor
aad
cmpsl
xchg
dec
mov
cmp
xchg
jmp
or
clc
sub
js,pn
cmp
adc
gs
sti
mov
xchg
repz
adc
xchg
push
dec
inc
push
cmp
sbb
iret
dec
les
jno
lret
jp
mov
add
cld
sahf
lcall
rcll
mov
and
mov
push
jg
pop
leave
push
pop
insb
push
lcall
jae
add
fimull
sahf
pop
adc
xor
icebp
mov
push
jne
dec
popf
adc
adc
ret
sbb
inc
ljmp
add
push
xchg
clc
sbb
in
xor
lret
call
invd
mov
stc
cli
int
or
mov
jge
shl
dec
test
or
in
pushf
inc
outsb
add
jb
std
out
loop
cmc
mov
add
and
fistl
add
jmp
orb
cli
pop
filds
test
push
fmull
gs
mov
addr16
cs
outsb
repz
shlb
or
cmp
fimuls
in
inc
repz
sbb
or
les
jl
or
lret
mov
mov
test
clc
push
fsubr
notl
cwtl
mov
mov
fistpl
imul
loopne
fwait
outsl
push
or
xchg
or
nop
mov
sti
repnz
add
sbb
call
jno
popa
icebp
and
xor
or
fsts
lret
push
jge
ss
into
cwtl
mov
mov
fs
or
imul
call
mov
adc
enter
cltd
xchg
shrb
jg
mov
dec
jecxz
bound
pop
mov
dec
push
and
mov
xor
sub
mov
sbb
sbb
popa
cmp
scas
mov
cmp
dec
adc
sub
loope
stc
icebp
inc
xor
and
add
mov
out
sbb
xchg
and
dec
movsl
cmp
iret
mov
jno
ljmp
lock
lods
push
or
repnz
movsb
mov
cmp
and
jl
and
push
lret
insl
outsb
push
pushf
lods
jg
imul
jg
lret
out
sbb
outsl
sub
mov
into
mov
das
jge
mov
fisttps
adc
adc
loope
mov
dec
filds
jl
fs
mov
call
ds
decl
lcall
jle
xchg
xor
mov
fildll
in
sbb
mov
mov
inc
xor
mov
xor
scas
or
mov
fcoml
pushf
je
daa
loop
mov
xchg
inc
repz
xlat
dec
addl
divb
push
inc
fadds
and
mov
repz
es
in
int
xchg
push
inc
jbe
and
jg,pt
cs
ljmp
ret
call
out
loop
xor
push
arpl
dec
inc
outsb
popl
ja
cmp
mov
std
pop
scas
ja
mov
lret
mov
fldenv
pop
xchg
jae
sbb
aaa
pop
jmp
add
push
jne
test
mov
dec
and
mov
fcomi
jo
icebp
fcmovne
pushf
inc
xchg
movsl
xchg
mov
pop
stos
push
insb
or
jae
decb
mov
and
inc
mov
lret
cld
push
jle
test
sub
cmpsb
mov
imul
call
or
imul
jo
jb
and
leave
ret
jae
mov
hlt
and
pop
add
cli
leave
out
in
sub
push
or
repz
xor
fsubs
iret
pop
dec
les
pusha
xor
pop
mov
arpl
sarl
fstpt
mov
adc
push
jno
into
jb
cmp
movsl
test
in
sbb
xchg
pop
scas
loopne
mov
cmpsl
nop
out
outsl
sub
inc
sbb
roll
arpl
push
into
jg
mov
loopne
loop
jo
mov
cmp
das
xchg
or
cmpsl
jbe
arpl
cmp
ret
movsb
fs
sbb
pop
jl
gs
int3
mov
pop
sahf
push
jle
pusha
rcrb
dec
mov
mov
ret
xchg
repnz
pop
sub
cmp
mov
adc
mov
loopne
inc
mov
out
mul
mov
push
inc
cmp
int
add
inc
loope
dec
sbb
pushf
cli
fiadds
shlb
sahf
xchg
movsl
sub
ljmp
and
xchg
or
aaa
stc
pop
sbbl
jp
push
fwait
movsb
cmp
fmul
ds
push
push
mov
ficoml
std
stos
add
and
mov
cmc
xchg
or
cltd
popf
mov
fsubrs
adc
or
lods
call
lods
mov
or
dec
mov
xchg
aaa
daa
push
pop
cmc
sub
mov
loopne
sbb
das
or
fnstenv
lods
fldenv
or
je
sub
adc
mov
sbb
and
and
or
popa
rcrb
cmp
dec
into
cmp
dec
adc
jmp
aam
push
lahf
ljmp
pop
jae
mov
pop
cltd
mov
aam
in
scas
jle
shrb
int3
ljmp
lret
pop
cwtl
xor
xchg
lret
divb
inc
push
stc
jg
mov
and
lret
pop
popf
or
mov
xor
jne
pop
int
stc
aad
stos
cmp
cmc
ficoml
jle
cltd
inc
sarl
jbe
mov
sbb
aaa
pop
movsb
icebp
lods
or
jecxz
movsl
sub
push
fadds
loop
push
testb
out
inc
mov
dec
push
dec
and
pop
lahf
pusha
out
fadd
outsl
adc
scas
mov
pop
push
jl
fstpt
mov
push
scas
xchg
repz
inc
xor
mov
fidivl
in
lcall
push
jno
leave
les
mov
or
movsl
ja
lret
jg
sub
pop
aad
adc
fneni(8087
sbb
push
adc
or
aam
mov
add
push
mov
into
sti
loopne
insl
cld
ss
inc
jb
out
xchg
add
push
shufps
push
addl
xchg
add
or
xor
mov
cmpsl
or
dec
subl
sub
shll
pop
dec
outsl
mov
in
paddusw
sub
add
dec
loope
push
mov
cmp
mov
jns
scas
push
pushf
rcrl
scas
loope
stc
inc
inc
fadd
sub
nop
out
outsb
mov
mov
and
clc
mov
fs
mov
rol
lret
cmp
or
repnz
sti
rolb
cmc
sub
ljmp
xchg
push
mulb
addb
pop
hlt
jns
pop
into
and
push
shll
lcall
pop
decb
jl
dec
pop
jo
dec
and
pop
mov
cld
adc
adc
adc
mov
or
jecxz
aam
jb
jno
dec
lret
repz
add
das
cmpsl
outsb
fcoms
das
push
lret
hlt
sub
push
mov
data16
pop
loop
pop
cmc
xor
lret
xor
bound
mov
in
and
fucomi
hlt
inc
jle
hlt
cmp
cld
and
std
cs
add
xchg
lods
clc
shlb
mov
push
and
push
dec
mov
cmp
stos
movsl
nop
pop
pop
mov
inc
aaa
dec
ljmp
sbb
das
push
or
addr16
popa
outsb
loope
cmp
mov
lds
or
xchg
fs
xchg
shlb
imul
subl
xchg
int3
mov
jb
movsl
xchg
or
loope
sub
mov
cmp
and
pop
push
fldenv
mov
mov
xor
or
fisttpll
out
mov
fldl
ja
xor
sub
sarl
xor
xchg
inc
shrl
enter
addl
cli
jmp
sub
and
loop
or
out
inc
daa
std
sub
push
sub
and
adc
ljmp
lret
mov
ret
repz
and
inc
in
mov
pop
int
les
icebp
sti
push
lods
push
xor
sub
test
xor
adc
std
xor
popa
push
mov
hlt
ret
aam
mov
arpl
mov
push
add
xor
or
cli
mov
cmp
pop
sti
cmc
mov
loope
pusha
push
jg
call
and
dec
adc
pop
pop
add
cmpsl
call
not
out
or
push
cld
cltd
push
stc
and
add
sbb
push
pushf
jg
into
jl
jbe
xchg
jno
adc
mov
stos
test
arpl
or
dec
and
xor
xchg
jne
int3
cmc
mov
sub
mov
push
sub
movsl
les
leave
and
jns
sub
pop
mov
jbe
pop
mov
and
ss
inc
andb
scas
negl
xor
cmp
cs
inc
sbb
jmp
pop
insl
and
cmpsl
add
inc
mov
sti
mov
mov
ret
sahf
nop
stos
mov
imul
adc
mov
popf
jne
mov
pop
xchg
mov
push
outsl
xor
push
fwait
movsb
stc
repz
or
std
cmp
lds
rol
out
or
les
jno
sub
shlb
sub
mov
into
cli
jae
imul
mov
push
sahf
sub
fnsave
mov
mov
mov
call
sbb
jb
pop
cmpsl
dec
or
adc
dec
mov
stos
push
push
mov
dec
lods
rol
into
mov
fwait
inc
xchg
outsb
test
leave
mov
sti
add
mov
cmp
and
daa
jle
inc
jmp
int3
scas
jge
xor
pop
or
dec
or
dec
push
cmpsb
mov
add
push
mov
lahf
or
and
ss
add
ret
jmp
in
shl
jecxz
sti
dec
pushf
outsl
mov
mov
dec
int3
xchg
outsl
xorl
stos
scas
push
test
dec
sbb
cwtl
out
notb
and
mov
fs
mov
cmp
shll
mov
jp
jp
pop
xchg
mov
push
fdivrl
lcall
adc
push
and
icebp
sti
or
popf
scas
xor
mov
outsl
shrl
sub
xchg
pop
adc
enter
add
ljmp
sub
pop
pusha
add
xchg
rclb
das
inc
pusha
subl
sbb
dec
stos
repnz
je
popf
or
jnp
xor
data16
xchg
cs
add
movsl
add
or
jno
push
jb
sub
push
test
sti
adc
stc
outsl
cmp
fcoml
push
rolb
stos
xor
mov
push
or
add
hlt
shrb
mov
stos
pusha
dec
jns
add
cwtl
ret
mov
icebp
mov
mov
aad
clc
ja
cli
sahf
fwait
adc
div
cld
push
insb
xlat
iret
xor
mov
cmp
mov
int
call
sub
add
adc
or
loope
clc
and
add
std
sbb
pop
fdivl
and
idivb
dec
dec
ss
push
push
ljmp
cmpsl
push
repz
les
or
test
mov
jmp
cmc
rcrb
sti
aad
pop
test
push
dec
mov
lcall
inc
xchg
dec
popa
in
push
fstpt
push
test
dec
jg
cmp
mov
sahf
jo,pn
add
iret
lock
popa
dec
mov
pop
xor
sahf
jecxz
jae
ljmp
xchg
pmaxsw
jo
loop
cld
sbb
repnz
decb
inc
test
cmpsb
std
lret
xor
push
gs
sahf
pop
or
or
outsb
xor
sub
movsl
ret
ret
stos
or
popa
fucomp
mov
scas
mov
xor
sti
fsubs
or
or
nop
cltd
scas
inc
mov
in
pushf
mov
icebp
mov
hlt
pop
adc
cmp
cwtl
decl
xor
ret
cpuid
bound
mov
lahf
mov
mov
pop
cmp
or
xor
xchg
mov
mov
jp
push
pop
sbb
xchg
sub
mov
fsubl
hlt
sub
dec
inc
in
add
or
jae
bound
xchg
popa
lods
test
inc
sbb
lret
ret
lds
negb
int
xchg
push
and
push
leave
cli
sbb
daa
xchg
daa
cld
pop
mov
mov
out
mov
subl
pushf
cmp
and
mov
call
pop
aas
xchg
jle
daa
and
ljmp
push
std
push
lahf
mov
ss
pop
fidivrl
in
sbb
pop
pop
fsubrl
xor
aad
loopne
adc
call
repnz
data16
popf
out
cmp
out
push
cmp
pop
imul
sub
popa
add
sar
cld
sbb
test
jbe
add
into
sbb
dec
jecxz
jl
rcll
lock
fidivs
push
fisttps
inc
inc
stos
fwait
pop
pop
cmpsl
adc
cmp
jl
xchg
sbb
int3
fnsave
jb
cmc
and
mov
and
push
insl
sti
mov
into
push
sub
nop
mov
ret
test
fcomip
mov
mov
push
add
or
or
testl
cld
add
popf
xchg
into
xchg
jb
dec
sahf
mov
movsb
xor
push
shll
data16
dec
cmp
jge
lret
jnp
ljmp
xor
cmp
sarl
enter
rolb
xor
jbe
lock
inc
inc
mov
and
adc
jo
les
cmc
sub
inc
pop
jnp
pop
into
cltd
sbb
xchg
filds
and
jae
or
pop
shrb
sub
jmp
outsb
mov
adc
in
jmp
adc
jns
or
add
arpl
stc
inc
pop
arpl
sti
and
fildl
pop
or
stos
jecxz
dec
int3
sbb
decl
in
sub
leave
mov
dec
xor
pop
popa
xchg
jbe
adc
nop
pop
aaa
movsb
or
ret
lea
out
dec
shll
fwait
pop
loop
pushf
dec
jnp
loopew
xorl
pop
or
add
les
add
push
dec
insl
mov
mov
xor
out
sti
xlat
sub
push
outsb
mov
mov
int
mov
mov
sti
scas
lds
and
bswap
xchg
xchg
mov
cmp
hlt
push
jg
sti
jle
dec
cli
ret
dec
pop
in
iret
call
add
daa
sub
movsl
pushl
outsb
out
psubd
inc
mov
xchg
xor
mov
aaa
imull
rclb
mov
sbbb
andl
sbb
insb
push
bound
fldt
clc
cmpsl
xor
lods
cli
or
mov
imul
inc
adc
nop
xor
xchg
mov
dec
cmpsl
or
out
loope
adc
jbe
repz
test
sub
mov
dec
xchg
mov
aam
pop
or
mov
jo
mov
jp
xchg
add
addr16
shr
popa
outsb
pop
loope
rclb
out
lea
dec
shlb
jno
ljmp
sub
inc
ljmp
out
jae
rolb
imul
push
sub
fwait
xor
loop
and
mov
lret
adc
mov
out
pop
jecxz
push
mov
inc
fistl
adc
jns
in
xchg
pop
push
in
loopne
lahf
imull
cmp
mov
lds
in
sub
pusha
inc
std
icebp
mov
dec
mov
inc
xor
mov
sbb
call
cmp
arpl
sub
sbb
push
inc
mov
mov
test
and
adc
sbb
loope
in
or
into
and
push
xor
xchg
sub
pusha
xchg
push
faddl
or
xor
jmp
scas
mov
mov
test
aas
mov
xchg
jno
les
mov
pop
lahf
inc
das
out
xchg
xchg
or
shrb
add
mov
push
xrelease
movsl
retw
sub
rolb
hlt
das
sub
lock
stos
fsubl
adc
push
out
or
xchg
add
or
inc
mov
xchg
pop
fdivrl
mov
fldcw
lods
clc
loope
xor
or
inc
lock
arpl
rclb
cmp
push
or
and
lods
push
jno
out
pop
out
mov
push
xor
sub
fisttpll
pop
and
add
decl
jecxz
test
imul
xchg
icebp
xlat
or
mov
int3
pusha
ljmp
cmp
dec
jne
adc
inc
sbb
jb
jmp
dec
jns
inc
and
xor
xor
subb
shr
rcrl
ret
sub
repnz
sbb
in
cmp
push
and
xor
dec
ret
cld
xor
adc
cmp
bound
cs
adc
xor
xor
jp
dec
jns
dec
loopne
xchg
cli
test
inc
sbb
call
pop
dec
int
stos
jb
or
ss
cmc
dec
xor
or
dec
outsl
xchg
sbb
iret
inc
cld
pop
iret
sahf
das
hlt
pop
xchg
inc
jb
les
mov
jb
mov
sbb
adc
sbb
popa
das
test
test
and
fidivrl
xor
xchg
add
jns
jno
sbb
sti
das
mov
mov
mov
popa
mov
mov
mov
movsl
hlt
dec
sub
test
pop
pusha
loop
and
adc
mov
jecxz
inc
dec
fnstenv
jle
mov
ljmp
scas
lea
call
inc
xor
decb
dec
test
popf
xor
fisttps
lea
les
mov
out
push
repnz
jb
and
les
popa
test
pop
cmp
dec
mov
mov
gs
je
mov
cmp
insb
loope
stc
into
in
in
xchg
sub
or
dec
les
push
mov
cmpsl
or
sbb
jae
cmpsb
and
or
out
arpl
pcmpgtd
sahf
cmp
inc
xchg
sub
cmc
movsl
loope
mov
testb
cmc
adc
sbb
adc
std
xchg
and
cmp
lock
cld
jne
xchg
cmp
adc
inc
adc
jne
xor
xor
add
mov
push
cmp
int
or
xchg
inc
dec
das
pop
add
ds
mov
std
sbb
imul
stos
mov
lahf
push
push
into
inc
sub
pop
jecxz
stc
jns
lret
dec
int
push
pop
out
xor
aaa
cmc
jae
clc
mulb
mov
add
sar
jg
pop
loop
ret
add
adc
pop
sbb
lahf
or
repz
mov
jae
dec
mov
push
stos
imul
sub
and
pop
pop
push
jae
movsl
ret
hlt
imul
insl
xor
or
adcb
xchg
mov
inc
divl
mov
fisubl
out
loop
rorl
cwtl
in
xor
lock
std
and
mov
pop
and
xchg
inc
hlt
fld
mov
adcl
add
pop
sub
aaa
aaa
outsb
or
or
pop
push
xchg
and
imul
or
movsb
movsb
cltd
add
imul
lret
cmp
cmpl
xchg
jno
sbb
pusha
test
xor
xchg
sbb
jne
xor
jmp
inc
mov
inc
clc
lock
fisttpl
aam
jmp
lret
add
or
add
inc
les
incl
cs
pop
lods
push
sub
mov
rorb
clc
dec
mov
out
fs
push
sahf
push
rcr
pop
out
je
add
leave
ss
sbb
cmp
movsl
lret
sub
jns
xchg
mov
aam
push
popf
lea
xchg
ljmp
ds
add
bound
cmp
push
sbb
pop
or
mov
addr16
xor
into
inc
mov
or
lods
das
jno
fadd
inc
mov
pop
and
addr16
sbb
cmp
scas
mov
jmp
sbb
jp
out
sbb
leave
sbb
pop
sub
test
xchg
outsl
pusha
pushf
scas
sahf
jb
cli
ss
xchg
fbld
adc
loopne
out
ljmp
sbb
cmp
jge
popa
or
pop
into
or
outsl
out
in
push
out
or
in
jb
add
fldt
jae
xchg
or
sbb
and
in
leave
pop
inc
sub
inc
les
ss
lret
mov
fldt
cmc
adc
xchg
lret
out
icebp
mov
add
mov
jge
scas
push
xchg
xlat
cs
inc
loope
arpl
outsl
xor
push
or
cmp
ss
das
xor
in
sub
mov
jb
cld
mov
cmp
test
or
movsl
dec
cmpsb
ljmp
idiv
mov
adc
xchg
xchg
pop
clc
xor
xor
stos
mov
cmp
hlt
ret
loope
add
je
cltd
or
imul
lock
inc
popf
cmc
cmp
dec
lea
add
pop
arpl
cs
leave
push
leave
mov
xchg
xor
sti
or
sbb
adc
neg
std
sub
cmp
push
push
scas
push
cmc
add
mov
and
enter
xor
in
or
stos
shr
mov
loopne
xor
mov
aam
shrl
push
inc
jle
repnz
mov
icebp
std
or
dec
jecxz
and
rorb
cmpsl
xor
push
cmp
and
push
dec
add
add
mov
jge
mov
mov
jle
daa
pusha
add
scas
cmp
bound
arpl
sbb
sub
dec
sti
sbb
testb
mov
insl
inc
pop
cmp
xchg
pushf
pop
xchg
push
dec
call
fdivr
xlat
repz
leave
jne
sbb
dec
in
or
sub
icebp
add
cmc
and
jae
icebp
std
sub
ljmp
mov
mov
jb
movaps
push
fiadds
push
ljmp
popf
dec
cs
mov
mov
loopne
and
loope
outsl
or
mov
out
sbb
or
and
icebp
sbb
sbb
pop
ljmp
push
addr16
sub
cmpl
sbb
push
std
or
outsl
add
inc
jb
sbb
cld
or
test
sti
mov
xor
out
pushf
insb
push
loop
add
pop
stos
popa
mov
or
jmp
test
aas
test
or
pop
icebp
jl
and
and
jp
ljmp
rcrb
and
test
mov
int
or
testl
out
inc
and
out
test
and
mov
in
lahf
inc
test
movsl
ljmp
in
orb
lea
xor
pcmpgtd
imul
les
push
test
daa
jle
cmpsb
mov
xchg
ret
pop
mov
or
int3
xor
movsl
iret
inc
mov
int3
dec
test
outsb
es
repnz
push
std
xor
add
mov
mov
loope
push
mov
clc
jae
cmc
stc
push
movsl
sub
mov
and
addl
adc
or
xchg
xor
push
aaa
sbb
mov
scas
push
dec
jge
leave
xchg
out
mov
sbb
dec
outsl
rcll
push
out
lds
stc
arpl
bound
lods
inc
or
hlt
push
subb
jb
inc
lret
fbstp
xorb
pop
loope
and
push
adc
insb
sbb
jle
add
push
sti
mov
insl
aas
fsubr
or
lcall
xchg
shll
push
arpl
mov
dec
add
mov
add
mov
sbb
and
mov
or
daa
mov
sahf
movsl
push
cmpsb
adc
add
ds
mov
mov
cmpsl
mov
out
sub
push
outsl
mov
sub
enter
jns
das
int3
clc
xchg
pop
movsl
add
jg
xchg
ljmp
jl
push
sub
push
or
add
xchg
jnp
mov
movsb
add
xchg
and
cld
sbb
jb
sahf
loope
xor
data16
sahf
scas
testl
add
nop
std
cmpsl
mov
stos
mov
loopne
out
popa
inc
xchg
decb
mov
xor
or
sub
cmc
cmp
sar
je
dec
dec
and
and
divb
jb
adc
push
dec
sub
or
lods
jp
iret
jecxz
dec
push
scas
xchg
adc
ja
sub
lods
adcl
out
loope
cmp
sti
xchg
add
adc
mov
and
imul
in
push
sarl
xchg
ret
scas
gs
aaa
ss
arpl
mov
add
fisttpll
ds
jecxz
setne
cmp
adc
bound
lret
add
lret
out
mov
cmp
mov
mov
xor
dec
cmp
test
into
testl
cli
adc
loopne
ljmp
adc
pop
sub
repnz
lea
dec
jb
inc
jmp
cmpsl
pop
fcmovb
adc
sbb
cwtl
lcall
outsb
adc
cmp
xchg
dec
ret
mov
push
out
popa
cli
pop
icebp
cmp
sti
icebp
mov
sbb
fdivs
or
dec
mov
push
mov
nop
stos
icebp
rcll
ljmp
out
mov
stos
adc
push
inc
push
dec
or
pop
int3
mov
data16
inc
rorl
mov
shrb
mov
jo
gs
xchg
movsl
cmpsl
xor
icebp
or
dec
xchg
cmp
pop
mov
pushf
daa
and
pop
das
cld
xor
jb
ljmp
scas
lods
xchg
jns
iret
dec
fidivl
lret
or
xchg
mov
popf
lret
and
pop
pop
pop
inc
inc
cwtl
jbe
inc
mov
fildll
mov
add
in
or
mov
push
dec
js
pop
and
pop
push
stc
add
mov
les
rcrl
inc
cmpsb
mov
idivb
out
in
jb
js
fsubl
sub
mov
les
cld
loope
cmpsl
stc
ret
sub
xlat
pop
data16
in
repnz
mov
jg
sub
popa
sti
adc
rdpmc
push
sahf
leave
mov
flds
xchg
sub
ror
jmp
pop
in
jo
sahf
xor
dec
movsl
shlb
into
push
insb
or
jne
pushf
xor
aaa
xor
jae
and
adcl
aaa
daa
outsb
ljmp
out
lods
cld
sbb
xor
jae
jle
mov
sub
fadd
xor
and
lret
xor
add
sub
mov
and
sahf
sti
mov
cli
xor
inc
daa
mov
jecxz
cs
pushf
xor
sbb
or
loope
and
jae
pusha
push
into
movsl
jl
cli
popf
sbb
dec
mov
imul
jne
adc
insb
out
loope
cmpl
fnsave
scas
in
jecxz
push
lods
xchg
ds
test
mov
push
jg
cli
sub
sbb
sahf
cltd
sti
push
and
cmc
inc
cmp
add
imul
ljmp
or
add
xchg
jmp
addr16
add
sti
jo
mov
lock
mov
int3
lahf
or
lds
mov
sti
pop
mov
filds
jno
in
xchg
roll
ss
pop
push
lock
mov
int
adc
mov
pop
loopne
push
icebp
scas
fadds
in
or
movsb
cmc
rcll
mov
jnp
adc
xchg
sar
xor
jg
push
dec
int3
add
mov
stos
cmpsl
int3
ja
jg
mov
cmc
jo
sahf
mov
stos
sbb
sahf
add
rcrb
fisttpll
rcll
and
jecxz
cli
cld
xchg
adc
out
sbb
cmp
sti
repnz
leave
outsl
push
cmp
pop
aam
xor
mov
out
jl
push
adc
xchg
fbld
jmp
push
adc
sti
and
inc
mov
testl
fistpll
roll
jno
bound
std
xorb
in
mov
pop
and
repz
movsl
pop
xor
lods
inc
fucom
sbb
push
lcall
fstl
jae
sbb
pop
cs
and
or
jg
sub
mov
fistpl
int3
fstp
loope
jge
ljmp
and
push
scas
or
pop
fistl
cmp
push
xchg
mov
pusha
test
or
inc
sbb
testb
dec
and
fwait
imul
jae
mov
adc
adc
les
push
sbb
ror
push
pop
push
icebp
sub
and
mov
outsl
test
pop
and
pushf
dec
inc
sub
test
clc
sbb
pop
into
out
int
int
lret
jno
xor
outsl
in
stc
ret
sub
divb
or
xor
push
xlat
xor
push
or
lock
adc
and
xor
mov
sub
ljmp
sub
inc
mov
lods
dec
cmp
or
bound
xor
add
mov
and
mov
cmc
lret
sbb
cmp
xchg
popf
mov
mov
ss
sbb
inc
or
xchg
shrl
mov
dec
scas
sbb
push
mov
and
jbe
les
or
pop
jo
jb
lret
shll
push
sbb
mov
negb
mov
sub
icebp
or
pushf
pushf
and
or
push
test
pop
into
rcrl
int3
mov
mov
lds
dec
cmpb
js
add
imul
jmp
sbb
sbb
into
lahf
ja
xchg
popa
stos
loope
std
pop
clc
pop
movsl
jae
ret
pushl
xchg
and
cmp
outsb
cmc
dec
aaa
mov
and
mov
fistpl
mov
and
ror
mov
inc
mov
mov
sbb
loope
enter
sti
cmc
add
xchg
adc
cwtl
pop
nop
das
outsb
fst
xchg
clc
int3
mov
outsl
push
sub
and
cmp
and
mov
icebp
mov
or
mov
out
and
lcall
or
ds
sub
sbb
adc
dec
sub
stos
rclb
inc
into
add
ljmp
and
push
incl
push
sti
lret
int3
stc
xor
pop
addps
out
ret
pop
xchg
jge
imul
and
dec
mov
aaa
fisubrl
jp
insl
imul
sbb
sub
ja
ljmp
lret
bswap
cmc
dec
ja
or
adc
sti
ljmp
out
or
inc
dec
or
add
rorb
ret
and
jle
push
jl
and
out
imul
lock
xor
daa
fcomip
push
cld
and
cli
loop
dec
cli
das
xor
push
mov
push
adc
add
jbe
xor
test
pop
movsl
add
into
mov
mov
adc
push
cmpsb
loopne
loopne
dec
ss
outsl
movsl
and
inc
repnz
push
push
cmp
jge
mov
lahf
test
jns
aaa
shll
mov
incb
adc
mov
fisttpl
stos
sbb
popa
mov
ss
aas
insl
outsb
or
sbb
iret
cmpsb
or
jg
xor
imul
cwtl
enter
jmp
mov
pop
subl
cmp
jno
pop
jp
insb
rorb
fcomps
sahf
nop
loopnew
mov
std
push
sbb
xor
dec
xor
sbbl
and
enter
imul
adc
cmpsl
push
add
gs
rorl
and
cmp
sub
clc
mov
maxps
add
mov
dec
pushf
cmpsl
sub
push
mov
out
xchg
call
mov
xchg
arpl
jecxz
push
lea
test
aaa
jl
lahf
mov
arpl
or
xchg
adc
and
pop
out
testb
add
movsb
adc
cmc
push
or
sub
add
jno
test
inc
mov
ret
pop
das
cmp
lret
cmp
mov
fsts
jge
add
sub
push
adc
xor
fildl
in
fstpl
inc
or
push
fistpll
notb
sub
push
xor
out
das
call
ja
repnz
pop
jns
mov
xor
and
sub
sbb
rcl
sbb
or
cli
jo
xor
sub
rcrb
mov
sub
push
push
sbb
lret
xor
inc
or
testb
call
popa
shrl
mov
cmp
daa
std
pusha
inc
call
or
mov
mov
rol
mov
cmp
push
jl
in
push
pushl
fwait
xor
into
push
pop
rorb
hlt
adc
test
insl
lret
inc
fcompl
fidivl
jg
lahf
enter
inc
mov
fidivs
cmp
rorl
lret
ja
je
xchg
ret
shll
bnd
mov
pop
sahf
in
mov
push
call
xchg
loop
addr16
in
mov
fwait
popa
pop
adc
mov
out
test
or
hlt
into
jl
cmp
jne
movsb
sub
out
mov
or
inc
je
and
xchg
sbb
movsb
xor
popf
xchg
mov
cmp
test
pop
daa
jne
roll
scas
icebp
int
popf
pop
mov
out
add
sub
aad
cli
fdivr
call
sbb
mov
cmp
fs
mov
ljmp
jno
pop
sahf
inc
pop
push
cli
stc
fsubs
mov
xchg
loope
adc
sub
xchg
push
shrl
enter
dec
push
idiv
xchg
pop
mov
xchg
in
cmp
mov
push
fwait
cli
ds
inc
icebp
jb
xlat
scas
pop
fsubr
outsb
imul
xchg
pop
aad
push
cmc
hlt
fmull
loopne
or
aas
xor
jge
xlat
mov
lahf
pop
mov
mov
out
popa
xchg
cltd
jnp
lods
js
pop
pmullw
inc
ret
push
in
or
call
pop
rcl
xchg
outsl
sub
std
cs
or
push
fsub
adc
popa
sub
mov
mov
lcall
push
jns
bound
xchg
adc
loope
loopne
sub
push
jo
xchg
inc
imul
fwait
mov
sub
xchg
sub
lock
inc
fdivr
imul
ljmp
mull
iret
ss
fbld
stos
leave
rorl
jp
xchg
cmc
out
fistl
cmc
imul
imul
dec
adc
pop
mov
fs
inc
add
in
sbbb
inc
nop
bound
int3
andl
shll
xor
xchg
sbb
add
fwait
xor
shll
ret
dec
add
push
mov
rclb
sarl
mov
lods
mov
shll
mov
mov
adc
xchg
adc
sbb
in
or
jnp
dec
popa
je
pop
stos
imul
xchg
pop
or
xor
test
and
mov
cmpsl
xchg
and
lods
fucomp
add
ret
add
enter
push
ret
mov
in
jmp
movsl
arpl
scas
inc
loope
dec
imul
dec
cmp
pop
iret
pop
popa
sti
adc
mov
push
mov
shrl
into
shll
leave
push
pop
insb
fbstp
or
movsb
inc
clc
fists
or
cmp
iret
cwtl
sahf
pusha
cs
pop
aas
lret
cli
add
adcl
push
sti
addr16
test
push
hlt
dec
int
ret
test
ret
push
pop
loopne
push
jb
std
xor
ljmp
inc
int3
and
pushf
stos
test
clc
mov
jmp
adc
mov
mov
pop
cli
icebp
stos
sbb
cmp
das
mov
repnz
or
into
insl
mov
call
mov
orl
or
xor
push
mov
das
dec
test
cmp
cmp
push
int
xchg
mov
imul
and
ret
or
cmc
out
jp
mov
mov
fistpll
imul
sbb
mov
rolb
into
cmpsl
add
jecxz
or
cltd
loope
out
jae
sbb
mov
push
sub
cwtl
and
ja
gs
mov
jns
into
daa
dec
loop
stos
paddusb
pop
inc
pop
test
mov
fs
adc
jmp
push
sbb
and
test
arpl
push
ss
test
das
ds
testb
or
add
dec
rcll
loop
xor
popa
test
arpl
outsl
sbb
or
cmpsl
add
and
sahf
sub
sbb
adc
mov
mov
sbb
ret
shl
dec
pop
sbb
imul
adc
cmp
je
mov
jb
stc
int
or
shrb
adc
or
jne
pop
jl
xorl
jae
jae
inc
fnstsw
and
sub
in
mov
mov
daa
sub
push
dec
stos
adc
xchg
dec
xchg
into
and
jnp
jne
testb
pop
loopne
dec
call
lods
sti
in
sub
mov
adc
icebp
xor
pop
or
push
lret
stc
fimull
lahf
data16
sub
sbb
cmpsb
scas
lcall
or
dec
loopne
or
push
rorl
sti
jg
aaa
stos
jp
lret
or
sti
xchg
test
inc
mov
icebp
lahf
cmp
sub
cltd
mov
jae
cmpsl
das
cmc
add
sbb
pop
stc
ljmp
jmp
inc
cs
mov
pop
ret
ret
jmp
push
fildll
outsl
add
or
es
cmp
xchg
jmp
lea
cmp
xor
mov
lret
pop
arpl
loop
xchg
incb
rcrl
stos
xchg
and
popa
pop
cmp
nop
loopne
popa
roll
mov
cmp
xor
cmp
mov
cmpsl
cmp
xchg
dec
outsl
ljmp
xor
push
cltd
repnz
pop
int3
popf
repz
xchg
push
dec
fld
or
imul
ret
or
int3
or
nop
xor
mov
fsub
bound
roll
xchg
lds
arpl
pop
leave
out
xchg
cli
mov
adcl
sub
sub
loopne
xchg
in
lock
jle
adc
sub
xor
das
or
cmp
outsb
push
js
inc
daa
icebp
sbb
sbb
pop
sbb
loope
xchg
cltd
mov
sub
sbb
mov
mov
xor
out
out
scas
xchg
lock
lods
popf
idiv
mov
push
jle
cli
or
fsts
fdivs
iret
or
fnop
sub
sub
xchg
fnstcw
ret
jecxz
fldt
scas
sbb
pop
sub
dec
or
fisubrl
fcomps
mov
fstl
in
sti
sbb
xor
pop
stos
cmp
mov
and
out
pop
pop
add
or
sbb
je
sbb
fdivl
or
insb
mov
xchg
inc
mov
jmp
test
or
push
xchg
jmp
mov
jecxz
xor
mov
dec
mov
push
push
push
stos
out
jecxz
lret
int
or
xor
ret
mov
inc
lahf
cld
loopne
sub
and
outsb
sbb
pop
jmp
shrl
call
sbb
je
and
xor
das
add
lods
outsb
or
jbe
mov
and
sub
or
ret
cltd
daa
inc
subb
cmp
adcb
and
push
out
mov
xor
adc
mov
aad
scas
mov
out
cli
push
xor
dec
push
imul
iret
repnz
ljmp
fisubl
in
ret
movsl
das
mov
or
push
pushf
xchg
or
ds
inc
sti
dec
call
push
xchg
fwait
push
imul
std
push
ds
shrb
mov
inc
mov
mov
add
fstpl
fwait
icebp
or
dec
mov
lahf
insl
push
out
adc
in
jg
clc
fucomi
inc
mov
adc
ret
jecxz
stos
out
sub
insb
jecxz
orl
stos
xchg
jae
jle
jge
cs
push
int
arpl
mov
add
imul
rcll
mov
rcrb
dec
jecxz
xor
jmp
jne
push
lret
xor
jmp
push
sbb
dec
fsubp
and
cmp
scas
iret
fbld
ret
mov
loopne
pop
xchg
shll
loop
fldt
inc
ffreep
addr16
jmp
mov
lahf
fwait
inc
xchg
jmp
mov
xchg
stos
lret
dec
mov
xchg
stos
xor
mull
add
lahf
push
or
mov
jnp
jecxz
push
loope
inc
stos
rorb
ret
fisubs
xchg
inc
pop
jae
fisubl
jae
sti
pusha
and
pop
addr16
jae
popf
and
idiv
sub
push
sub
sbb
or
outsl
scas
jno
loope
fisttps
jmp
clc
push
pop
mov
addr16
outsl
dec
iret
daa
xor
dec
mov
push
popf
stos
pushl
xor
out
push
scas
xlat
jp
imul
mov
mov
rcll
out
imul
fists
stc
leave
out
push
fildl
popf
push
xchg
fwait
jecxz
xchg
loope
popa
xchg
jmp
sub
bswap
cmpsl
roll
dec
cmp
dec
ret
pop
xor
aas
loope
sarl
aas
lret
fwait
iret
out
rcr
mov
mov
out
or
jmp
iret
xchg
test
xchg
aaa
pop
mov
inc
pop
sbb
mov
arpl
ja
push
dec
sub
iret
pop
sub
rolb
iret
jecxz
add
dec
pusha
outsl
rcll
inc
push
and
mov
daa
pop
mov
cld
or
add
cmp
popf
stos
imul
push
dec
mov
mov
inc
in
pop
inc
daa
out
push
adc
mov
loop
decb
divl
stos
push
repnz
add
push
xchg
sub
insl
cmp
in
jl
test
call
clc
xor
mov
add
jl
pop
xor
loope
cmp
adc
std
sub
xor
into
jbe
push
out
mov
push
or
shlb
xchg
xor
sub
shr
and
les
adc
xor
mov
add
ret
fists
xor
sbb
push
daa
xlat
es
push
mov
outsl
and
add
mov
aaa
adc
cli
je
mov
mov
mov
popf
add
jno
push
std
and
or
stos
scas
push
cmp
pop
sub
push
in
push
jp
xor
mov
je
push
out
cli
enter
pop
insb
push
sbb
dec
arpl
sarl
xchg
addr16
adc
mov
mov
iret
adc
pop
cmpsl
jmp
mov
or
lret
sbb
inc
insb
mov
and
pop
push
mov
inc
mov
lock
into
push
adc
jbe
call
sub
sub
adc
fwait
push
mov
adc
or
dec
sbb
test
xor
cmp
sar
out
dec
mov
mov
pop
sub
push
and
outsl
pop
in
int
inc
inc
pop
cmpb
jge
aaa
out
aam
stos
mov
or
inc
adc
pop
pop
shll
mov
xchg
imul
insl
out
mov
add
movsb
imul
lret
sub
in
mov
aaa
mov
imul
out
adc
loop
lret
xor
pop
jecxz
arpl
das
xchg
test
push
jge
sub
sub
imul
hlt
push
sarb
mov
inc
jp
push
jne
insb
or
jb
loope
jle
outsb
xchg
dec
lcall
shlb
pop
es
aas
test
inc
sbb
xor
leave
out
cmc
clc
add
cli
jae
idiv
cmp
mov
jmp
fwait
repnz
add
in
les
xchg
xor
test
and
incb
and
popf
fstl
sub
push
outsl
xlat
iret
or
sbb
pop
lods
inc
mov
outsb
aaa
ds
data16
add
xorl
test
adc
mov
push
stos
sbb
mov
mov
in
mov
fnstsw
aad
decb
and
clc
aad
insl
bound
ret
pop
push
mov
xchg
add
or
and
bound
mov
push
dec
in
movsb
insb
mov
or
xchg
jmp
adc
inc
pop
cmp
push
sub
call
or
add
dec
popa
mov
sbb
xchg
repnz
jae
cld
leave
insl
pop
sbb
aaa
sub
std
sbb
roll
mov
out
adc
int3
ljmp
add
sub
mov
ja
jnp
add
mov
imulb
repz
stc
push
cmp
mov
add
jnp,pn
sbb
test
xor
mov
sbb
in
sti
or
fwait
pushw
inc
xor
out
rolb
test
and
scas
into
cmpsl
int3
pop
outsb
jae
shrl
int3
roll
psllw
call
cltd
fcmovu
push
pop
mov
scas
pop
jl
fnsave
cmp
or
enter
mov
loope
and
sahf
jle
sbb
push
test
call
jge
das
popa
popf
jne
dec
negb
daa
jae
mov
insl
loopne,pt
stc
inc
in
aas
adc
mov
xor
aam
and
lock
adc
bound
jmp
pop
sahf
loopne
adc
scas
sbb
lods
dec
mov
jo
jnp
mov
jne
jmp
sti
xchg
pusha
cmp
dec
push
or
shll
cmp
dec
rcll
ss
std
and
and
cmc
aam
mov
mov
lret
test
or
mov
or
popa
ss
fstpl
xchg
js
jge
imul
in
jmp
popf
and
jae
pop
push
jg
inc
ljmp
into
mov
popf
hlt
inc
jl
xchg
lret
pop
mov
in
inc
xor
pop
add
ljmp
fld1
mov
jge
pop
aaa
inc
pushf
outsb
mov
loope
cs
out
and
in
sub
dec
ljmp
adc
dec
pop
stos
mov
mov
push
dec
out
and
dec
pop
cltd
fisttps
mov
ret
sub
push
mov
push
xor
je
jecxz
mov
cmp
and
and
push
dec
cltd
repnz
mov
shlb
sbb
sbb
push
out
lahf
in
adc
loope
ds
std
imul
shrl
jecxz
dec
aaa
add
pop
push
mov
hlt
sbb
jb
and
sarl
fbstp
lea
bound
popl
add
or
ret
add
rcl
or
cmc
push
pop
add
or
cmp
ret
mov
fsqrt
jl
ss
in
adc
in
je
and
cmpsl
mov
mov
loopne
pushf
or
jecxz
inc
cmp
mov
loope
pop
and
xchg
fsub
add
imul
xchg
fcomps
movsl
lods
cs
lcall
add
jb
bnd
cmp
pop
mov
and
or
mov
push
movsl
out
mov
mov
popa
sti
or
pop
out
out
fwait
out
pop
dec
inc
mov
push
adc
xchg
mov
or
cmc
lahf
dec
fwait
ret
out
fwait
or
or
movsl
xor
or
mov
lcall
sti
cmc
sub
fdiv
mov
xorb
cmc
or
push
loope
das
push
test
push
test
or
xor
ljmp
mov
jns
jmp
test
or
add
dec
test
push
and
or
adc
xor
pusha
daa
pop
ljmp
sbb
mov
hlt
mov
loop
and
sub
repz
cmp
jb
xor
mov
rorl
aam
xor
mov
mov
and
ljmp
push
cli
jns
test
mov
fcoml
mov
xchg
not
add
repnz
xor
ret
das
inc
stc
sub
sub
fdivl
or
jns
ret
aaa
das
or
and
cli
jg
test
add
mov
jb
and
clc
xor
add
cmpsl
insl
rol
sbb
and
xchg
enter
loopne
testl
ljmp
aaa
icebp
movsb
xor
stos
or
ficomps
mov
movsl
inc
inc
loope
arpl
loopne
imul
pop
push
inc
dec
push
ljmp
loopne
rcrl
mov
mov
loope
std
mov
lods
movsb
les
rol
aas
cmp
in
sti
movsb
pushf
sti
sbb
scas
cli
fists
sbb
add
sahf
or
and
test
cmp
addl
out
and
pop
pop
inc
xor
sbb
stos
inc
or
pusha
mov
dec
mov
mov
cmc
and
pop
pushf
lahf
mov
pop
in
cmp
les
and
push
aaa
data16
cld
loopne
or
loopne
inc
dec
cs
cmp
outsl
or
stos
lcall
pop
push
mov
jae
push
jp
ja
adc
cmp
inc
jmp
cmpsl
mov
icebp
loopne
sbb
cmpsl
pop
mov
cltd
fimuls
les
add
andl
cld
outsl
adc
xlat
sbb
into
ja
xchg
es
je
test
icebp
xchg
shl
mov
jb
jecxz
dec
jg
sub
adc
xor
loopne,pt
loop
and
int
je
scas
cli
arpl
mov
xchg
repnz
paddb
andl
adcb
sahf
shrb
loopne
pop
sub
cmp
outsb
sbbl
xor
push
std
cs
iret
loope
std
or
add
sub
mov
sbb
adc
push
mov
pop
inc
add
mov
mov
jle
pop
xor
jg
push
mov
mov
mov
fstl
sub
mov
popf
cmp
repnz
mov
pop
push
sbb
add
mov
scas
int
cli
arpl
popf
test
outsl
fisubs
jp
push
inc
shll
jmp
mov
sub
loope
pusha
pusha
dec
adc
push
out
stc
les
test
pop
push
das
mov
add
int3
in
pop
popf
ss
outsb
lods
dec
ljmp
je
xor
and
movb
adc
lcall
ds
dec
lahf
push
pop
xor
or
sti
adc
dec
in
ret
push
cbtw
adc
popf
jle
pop
jae
fildl
ljmp
addr16
test
mov
scas
mov
negl
std
push
loop
mov
into
bound
pop
faddl
pop
jp
or
test
scas
loope
cmp
ficoml
jbe
xor
xor
jae
jmp
scas
inc
mov
adc
ljmp
pop
pushf
in
in
decb
and
jp
arpl
call
je
cwtl
lahf
mov
mov
loope
or
dec
xchg
xchg
pop
pop
cwtl
test
rcll
daa
les
fsts
stos
lret
push
out
cltd
out
push
or
roll
dec
inc
popf
push
push
les
jl
sti
mov
out
out
scas
aaa
fimull
test
mov
scas
cli
push
pop
je
movsb
add
push
mov
sbb
sar
pop
mov
cmp
es
sbb
sbb
in
iret
sbb
and
adc
out
inc
push
mov
mov
jmp
adc
test
in
dec
and
clc
mov
pop
adc
int
mov
icebp
and
mov
adc
add
popa
cmp
pop
fistps
mov
inc
stos
lock
jecxz
or
pop
gs
fs
std
sbb
fwait
dec
std
push
dec
imul
adc
sub
insb
add
sbb
imul
orb
leave
shlb
dec
movsl
loopne
data16
aas
or
outsl
push
push
ret
push
test
mov
dec
lock
lahf
in
sub
loope
daa
mov
xor
icebp
loop
leave
lock
insb
cmpl
inc
xchg
xor
xor
cli
sbb
in
xchg
pop
testl
xor
ljmp
inc
lret
jo
push
push
lods
dec
int3
loop
cld
cmp
aad
sub
jb
jae
adc
and
mov
out
int3
inc
aad
stos
sub
das
jmp
xor
in
mov
sub
hlt
leave
adc
sub
inc
or
adc
adc
sarb
xor
int3
js
fisttps
xchg
aaa
mov
pop
xor
scas
jae
fwait
inc
shrl
ljmp
test
xchg
sahf
inc
mov
popa
mov
rcrl
and
sahf
or
sub
dec
or
add
lret
sti
in
imul
shl
and
pusha
jmp
jp
xor
out
insl
xor
popaw
mov
xor
sbb
int3
fnstsw
and
out
in
gs
lods
cmp
loop
or
stos
jbe
icebp
mov
cmp
in
mov
loop
sub
xor
sub
push
and
scas
outsl
es
push
jl
lcall
jne
add
xlat
dec
or
scas
jmp
out
ror
mov
lahf
cltd
adc
xchg
adc
cltd
inc
push
jmp
xor
add
js
jo
sbb
ficoms
cmp
lock
or
mov
mov
popa
fstpt
pop
jbe
cli
insb
xchg
out
mov
or
jb
jp
jnp
stc
lret
dec
stc
arpl
sub
mov
sbb
loopne
mov
dec
int3
out
jp
jnp
or
imul
insl
in
mov
sar
inc
and
pop
lds
ljmp
mov
loop
enter
lret
jae
mov
push
inc
mov
sub
lret
push
or
or
xor
and
add
cli
jb
sti
jmp
das
push
add
mov
xor
lcall
cmp
or
inc
call
sahf
outsl
call
inc
adc
dec
jns
and
cmp
adc
stc
bound
or
add
enter
mov
cmpsb
or
lcall
adc
sub
mov
std
or
or
add
mov
out
jecxz
cmc
scas
sub
icebp
jae
arpl
std
stc
call
ds
je
sub
and
dec
or
and
popf
or
mov
into
dec
or
push
pusha
subb
or
lds
xchg
int
sub
out
mov
into
repnz
lods
xchg
jne
pop
sub
jp
dec
ss
fst
loopne
dec
bound
icebp
dec
jmp
cwtl
ja
fsubrs
lahf
int3
mov
cmc
add
jg
xchg
pusha
in
xchg
cmpb
in
loopne
xchg
push
cmp
fwait
or
push
scas
es
inc
mov
pop
jmp
cmpsl
mov
shll
insl
mov
ljmp
xor
inc
je
lahf
je
cli
gs
outsb
or
push
jb
in
cmpsb
sti
addr16
pop
frstor
and
scas
xchg
scas
ss
loope
cmpsb
cli
out
or
sub
shrl
scas
aam
push
test
push
loope
jp
ret
into
sar
das
scas
push
subl
aam
popf
arpl
xchg
adc
pop
push
pop
cmp
mov
test
ret
push
xchg
cli
or
adc
or
and
push
add
sar
subb
xor
out
dec
xor
push
dec
pop
ljmp
loop
push
lret
xchg
insl
add
cmp
cltd
mov
clc
cmp
sub
cmp
loope
cmp
shll
cmp
fisttps
in
sbb
inc
adc
ljmp
loope
lcall
aas
pop
push
dec
lcall
dec
stos
pop
lea
jmp
cmp
outsl
or
ljmp
lahf
add
or
jp
fstpl
ret
inc
mov
lret
sbb
xor
fimull
inc
lret
mov
jmp
inc
dec
xor
in
imul
inc
dec
sbb
jmp
cld
outsb
push
xchg
pop
adc
sbb
push
idivl
loope
ljmp
push
jae
add
pop
in
dec
sbb
or
sbb
xchg
cmc
sub
adc
jl
js
inc
sbb
enter
addr16
in
jmp
or
xlat
or
sarl
dec
stos
jo
clc
push
push
and
jecxz
push
or
out
mov
rorb
enter
aas
sti
add
push
dec
std
out
mov
shr
fldl2t
jb
jbe
das
xchg
cmp
test
mov
lock
mov
cmp
inc
inc
sub
ljmp
test
movsl
and
or
inc
inc
jns
jae
or
stos
pop
cmp
dec
shll
mov
sub
pop
mov
sub
jmp
sbb
push
push
into
and
or
push
shll
shrb
shrl
xchg
xor
lock
jecxz
and
xchg
jne
loopne
in
push
ret
loopne
push
xchg
stc
arpl
or
sub
add
jl
aaa
add
rcrb
into
lds
dec
cli
clc
aas
es
add
aam
insb
jg
es
icebp
xchg
xor
or
jnp
cmp
fistps
push
push
adc
imul
dec
dec
insb
mov
pop
pop
inc
xor
inc
ss
mov
scas
add
hlt
lret
sub
cld
xor
sti
ljmp
les
stos
add
jp
test
test
lret
icebp
pop
mov
mov
cmp
jle
inc
cli
mov
out
inc
sub
scas
cmc
bound
xchg
fs
lods
dec
mov
adc
xor
incb
cmpsl
add
jle
sbb
or
cmc
daa
mov
cmpsb
lcall
hlt
xchg
xchg
jb
std
mov
outsl
sbb
test
mov
sti
jb
fucomi
dec
xchg
test
or
push
mov
jne
popa
sub
xor
add
sahf
pushf
sbb
cmp
and
lret
mov
inc
stos
test
popf
add
push
mov
xor
push
nop
cli
test
sti
push
lcall
add
pop
xchg
mov
sub
lahf
mov
inc
cli
jb
jmp
mov
jno
push
rcr
orb
pop
mov
adc
sub
xchg
and
out
sbb
rorb
stos
or
stos
cltd
arpl
or
test
addr16
cmp
push
or
adc
cmpb
mov
popa
cmp
cmpsl
std
je
mov
loope
sarb
adc
dec
and
or
insb
jge
jo
mov
clc
imul
add
inc
sbb
xchg
push
ror
out
xchg
out
and
out
aaa
int3
das
arpl
sbb
repnz
mov
fs
ss
mov
in
xor
ss
mov
mov
push
pop
lret
gs
sbb
rol
jno
mov
mov
sti
mulb
orb
inc
loopne
or
jne
mov
fsts
int
ret
std
repnz
inc
mov
or
and
mov
cmp
ret
add
or
mov
stc
in
les
or
cmp
loopne
pop
lds
mov
mov
push
sbb
xchg
insb
pop
or
xchg
outsl
sub
sti
add
cmp
rol
mov
cli
push
inc
mov
mov
cmp
mov
push
cmp
outsl
pushf
aaa
inc
mov
pushf
push
ret
xchg
ret
mov
and
shlb
ljmp
imul
mov
ror
or
leave
jnp
decb
test
push
inc
outsb
call
stos
xchg
cs
aaa
mov
loop
add
ficompl
roll
les
out
xchg
lahf
imul
ja
fimuls
in
sub
sahf
or
pusha
inc
mov
mov
cmc
js
or
in
das
in
cld
sbb
loope
xor
push
jo
aaa
sahf
sbb
out
and
adc
add
icebp
mov
pop
outsl
orb
int
dec
mov
mov
sub
sarb
push
mov
sub
lds
sub
pop
dec
sti
push
jne
jno
and
shrb
push
movd
xchg
pushf
xchg
xchg
ror
add
into
push
mov
leave
leave
popf
movsb
rcrl
ja,pn
or
pusha
btc
xor
in
xchg
or
jns
das
fildll
imul
andl
or
outsl
ja
and
rcrl
ja
outsb
add
pop
xchg
xlat
mov
jo
test
mov
mov
pop
cmc
xor
or
int
ljmp
test
sti
ret
out
jmp
arpl
push
inc
ja
fs
test
shlb
lods
push
sti
jbe
out
loopne
pop
and
lret
repnz
mov
cmp
xchg
mov
cmc
daa
std
sbb
jecxz
dec
stos
adcl
cmpsl
push
jecxz
dec
push
sbb
scas
adc
cmp
pop
dec
mov
pop
or
jae
inc
lret
xor
mov
or
xor
icebp
jbe
push
enter
cwtl
imul
add
mov
das
add
cmpsl
cmp
paddq
shrl
add
or
lods
ret
icebp
movsl
cmpsl
daa
mov
pop
xchg
stos
idivb
jmp
mov
add
adc
push
cld
popa
aas
movsl
cld
out
xor
popa
sub
lret
jo
mov
shlb
mov
inc
popa
xchg
cmp
cmp
fists
mov
pop
adc
scas
ljmp
orl
cmpsl
mov
lea
mov
pop
out
mov
cwtl
iret
int3
stc
push
std
inc
movsb
xor
aaa
aad
hlt
daa
jns
xchg
mov
mov
insl
xchg
sbb
icebp
and
xor
fdivr
iret
fimuls
mov
cmp
sub
in
div
or
cmp
push
pop
lahf
iret
shr
gs
jmp
pop
mov
mov
add
and
sahf
enter
mov
sbb
adc
in
or
mov
sub
outsl
sub
sbb
cmp
movsb
jle
popf
lods
jecxz
push
mov
enter
movsb
pushf
ss
or
jmp
add
into
lcall
mov
push
in
jae
mov
ljmp
aam
or
add
lret
push
sbb
sbb
mov
xchg
mov
ds
jno
add
in
es
cs
cmp
out
inc
and
mov
clc
inc
inc
mov
xchg
mov
leave
pop
sbb
push
sahf
pop
xor
add
loope
in
popa
lahf
xchg
sahf
nop
cs
bound
and
xchg
sbb
pop
sbb
xor
rcr
popf
mov
shlb
decb
ret
sbb
or
sub
pop
mov
leave
fsubs
sub
or
xor
dec
mov
outsb
xchg
adc
lret
jecxz
mov
xor
push
inc
imul
sub
jno
and
mov
jo
cwtl
add
mov
dec
jb
mov
cmpsl
int
mov
outsl
std
xor
hlt
mov
sbb
je
xor
push
out
jle
into
cs
cmpl
dec
testb
push
les
pop
loop
loope,pt
test
add
shll
in
scas
enter
mov
insl
push
pop
shrb
mov
cli
add
fs
sti
mov
pop
pushf
rcrl
cli
outsb
sahf
sub
aaa
test
push
cmp
xlat
int
sub
jp
stos
je
sarb
into
ljmp
imull
ficoms
sub
mov
pushf
dec
lods
daa
fisttpll
fildl
ljmp
inc
inc
jge
movb
jnp
in
mov
cmpsb
xchg
dec
rorb
sbb
pop
sbb
test
clc
and
or
and
sti
inc
shrl
stc
jne
push
xchg
add
out
or
jno
movsl
jnp
push
jmp
sub
lahf
pop
push
mov
mov
add
xor
push
cltd
xor
or
dec
decb
cmp
inc
sar
push
dec
or
xor
jecxz
pop
addr16
or
dec
jmp
inc
out
call
out
ljmp
fisttpl
jmp
cmp
out
imul
cmc
adc
push
cmp
jecxz
mov
sbb
rcrl
mov
outsl
iret
out
cmpsl
mov
outsl
jnp
lret
push
push
cmp
push
inc
aad
adc
jns
sti
mov
fisubl
jg
imul
rol
ret
roll
repnz
iret
mov
mov
jo
mov
fucomip
xchg
stc
lea
mov
pop
and
jmp
out
mov
iret
stos
fildl
out
dec
xchg
iret
cltd
xor
es
ficoml
out
inc
cmp
push
dec
add
mov
jmp
lods
outsl
pop
aas
jmp
mov
pop
xchg
arpl
out
mov
mov
fisttpl
leave
fisttpl
jecxz
shrl
and
add
pop
popf
pop
mov
mov
xchg
push
sub
lret
subl
xor
jecxz
jae
arpl
mov
sub
out
scas
jecxz
cmpxchg
xchg
stos
subb
mov
fwait
ja
push
push
jmp
out
ljmp
push
stos
iret
mov
pop
push
inc
mov
jmp
enter
ljmp
testl
jno
dec
jecxz
mov
shrl
jmp
jg
jmp
faddp
jmp
ret
and
jmp
outsl
push
jmp
sbb
jmp
out
es
scas
iret
pop
inc
scas
xchg
scas
cmpsl
sbb
out
out
inc
pop
pop
out
inc
mov
xchg
pop
es
int
mov
imul
inc
jecxz
mov
arpl
dec
imul
es
fwait
mov
mov
sub
push
jmp
pop
imul
fiaddl
mov
or
loop
popf
xchg
out
lret
or
fldt
pop
out
and
push
xor
out
push
aam
in
das
mov
or
not
andb
adc
arpl
out
testl
sti
icebp
lea
rol
xor
sub
mov
or
lock
shrl
add
mov
inc
scas
ret
pop
addr16
mov
outsl
xchg
aas
sub
jle
jecxz
insl
adc
sbb
int3
lock
or
movsb
dec
and
xchg
mov
push
es
into
add
xor
xchg
stos
or
lcall
mov
add
outsl
or
mov
push
imul
push
in
or
rcll
add
hlt
loopne
or
cs
popa
not
rclb
cmpsl
cld
sbb
mov
or
data16
fwait
mov
into
or
mov
jb
mov
inc
jne
sub
sahf
idivl
inc
xchg
ljmp
mov
into
xchg
mov
scas
mov
notb
cs
add
icebp
sbb
inc
call
xchg
push
ss
or
pop
es
push
imul
xchg
adc
es
mov
in
and
and
xor
inc
lock
test
jnp
cli
out
push
icebp
sarb
push
sbb
aad
pop
into
and
mov
iret
lcall
mov
add
cmpsl
mov
addl
add
addr16
pushf
cmp
pop
pop
pop
fs
out
mov
push
and
adc
shlb
mov
sub
xchg
iret
aaa
mov
push
ja
bound
cmp
and
and
mov
inc
ljmp
push
hlt
jnp
out
and
xchg
sahf
pop
aam
sti
les
adcb
jno
popf
mov
xchg
mov
mov
cmp
jle
stos
ja
cmpsl
pop
or
pushf
mov
mov
dec
jp
addr16
pusha
mov
stos
and
xor
sahf
repz
or
pop
pop
ja
stos
icebp
call
push
add
les
mov
call
push
mov
in
fcmovnbe
rcrb
pop
sbb
or
mov
lock
xchg
orb
aas
adc
pxor
and
adc
dec
fmul
aas
pop
mov
iret
jl
or
jle
out
mov
and
xor
mov
fcompl
mov
cmpsb
fisttpll
mov
shl
sub
xor
outsl
ja
xor
xor
out
outsl
lea
push
jmp
orb
mov
push
xchg
mov
cmp
adc
sub
and
ja
shl
mov
cmpsl
mov
sub
icebp
mov
xorb
xor
pop
data16
xlat
mov
xchg
data16
ss
stos
into
jecxz
inc
test
lcall
mov
mov
lret
sbb
pop
or
inc
in
mov
or
das
sub
stos
in
pop
pop
sbb
ja
mov
call
xchg
adc
push
test
das
mov
cld
mov
insl
scas
xlat
inc
xchg
dec
addr16
out
mov
mov
jbe
pop
mov
cmc
cltd
out
sbb
test
pop
lock
ret
or
mov
stc
std
sbb
scas
sub
mov
cmp
imul
movsl
inc
js
roll
scas
pop
out
jb
cmpsl
inc
shrl
jmp
shlb
push
adc
inc
mov
jno
dec
sub
pop
mov
js
out
xor
sti
loopne
les
jmp
in
or
hlt
xor
sahf
imull
pop
or
stos
gs
inc
int
dec
stc
ljmp
idivl
stos
movaps
sbb
cld
shll
xor
and
ret
add
shll
xor
sub
fcmovb
sub
xchg
sbb
int
je
jo
sub
add
add
sbb
sub
nop
arpl
ljmp
imull
ljmp
push
xchg
push
fmull
shlb
lret
inc
in
jae,pt
popf
mov
stc
add
or
and
fstpt
lods
outsl
das
cmc
jo
xor
icebp
fldt
cmc
loope
adc
or
scas
daa
pop
aaa
dec
scas
int3
mov
lahf
mov
adc
sti
or
adc
sub
loope
add
push
popf
fstl
push
pop
into
dec
adc
and
mov
jae
out
lret
call
jl
dec
push
jecxz
sub
lods
leave
pop
out
fs
dec
add
or
push
or
loope
aaa
shll
dec
fcmovne
xor
ljmp
adc
fistpll
les
roll
cltd
into
out
sbbl
add
gs
mov
outsl
or
pusha
cli
push
test
add
jae
mov
fld
pop
dec
pop
sub
jp
mov
int3
jge
icebp
cld
and
jno
lock
jb
push
or
imul
mov
scas
pop
dec
notl
outsl
bnd
mov
mov
cmp
es
pop
push
fistps
cmp
imul
sahf
mov
or
dec
out
movsb
jmp
mov
mov
in
mov
loopne
outsl
push
adc
mov
fwait
das
jmp
aaa
in
rcl
lds
fmull
push
divb
jmp
sahf
push
scas
jecxz
jb
jae
in
xchg
shlb
xor
jmp
insb
lahf
insl
das
jmp
in
xlat
lods
push
mov
cmp
ret
scas
and
outsl
mov
ja
mov
lret
aam
imul
jmp
sti
rolb
ret
pop
and
arpl
popf
pmulhuw
xorb
push
cmp
rol
sarl
mov
fists
enter
shl
daa
jb
lret
mov
ja
loop
dec
fwait
rorl
push
arpl
scas
fidivl
scas
repz
das
fidivrs
mov
scas
aaa
xchg
aas
jns
out
mov
mov
out
pop
jne
jecxz
inc
iret
dec
rorb
mov
int
mov
and
dec
jmp
or
aad
stos
shr
mov
mov
sti
sub
lret
mov
fcmovne
jmp
jae
mov
jae
pop
mov
jecxz
popl
into
sti
loop
add
arpl
popf
add
sti
lcall
imul
mov
scas
imul
pop
lods
das
mov
fstps
dec
aas
cmpsb
or
inc
imul
stos
push
enter
rcrb
sarl
divl
loope
imul
inc
shll
add
xor
pop
and
mov
mov
mov
mov
cmpsb
ret
int
mov
xor
jmp
int
scas
sub
sahf
pusha
enter
jecxz
xorb
xchg
pop
stos
inc
out
jmp
xor
fdivr
shl
xchg
dec
or
sti
mov
popf
punpcklwd
xor
cmpl
mov
jae
push
jb
test
inc
clc
push
xor
mov
push
hlt
ficomps
or
lods
jb
cmc
ss
out
into
sti
negl
and
icebp
sub
jnp
ret
add
adc
adc
xor
icebp
std
cmpsb
pop
mov
loopne
repnz
popf
icebp
jae
mov
xchg
cli
mov
cltd
push
jle
dec
ds
outsl
ljmp
push
inc
mulb
aas
cmp
push
arpl
mov
popa
push
ret
mov
movsl
xor
xor
outsl
mov
pop
arpl
sub
lea
imul
add
int3
xchg
pushf
loope
adc
mov
mov
ljmp
or
and
or
lret
inc
movsb
xor
mov
jne
ds
pop
dec
xor
jne
pushl
xchg
fcomip
scas
in
imul
adc
mov
push
push
pop
xchg
prefetcht1
es
cmp
rorb
mov
push
cmp
add
pusha
push
pop
std
and
and
das
in
mull
push
sub
mov
outsb
pop
pop
mov
cli
or
aaa
jl
inc
stos
dec
fdivrp
inc
fstl
lret
sbb
outsl
and
xchg
or
cmp
push
add
mov
push
cmc
enter
imul
cmp
cmpsl
imul
lods
rcrl
out
or
sbb
sub
mov
fldl
mov
xchg
add
movsl
pushf
mov
addr16
daa
fsts
lds
adc
adcb
push
sub
jae
xor
add
add
iret
pop
dec
push
pop
mov
clc
pushf
aas
sub
aas
jb
mov
jo
ljmp
or
stc
call
cmp
pop
sub
das
popa
sub
mov
sub
into
cld
popa
jae
cmp
inc
xor
mov
in
mulb
and
insl
test
ret
outsb
sub
dec
fsubs
es
push
sahf
jg
mov
xchg
mov
xlat
jnp
xchg
xchg
push
dec
adc
xor
jmp
loopne
insb
inc
popf
loop
fucom
in
inc
mov
cmp
outsb
or
xchg
and
adc
leave
pop
sbb
loop
xchg
sub
inc
cmp
jb
sub
or
push
pop
add
popa
mov
pop
xor
fcmovne
fisttps
les
iret
sub
out
divb
es
in
xorb
sti
lock
stc
add
jno
xchg
lods
arpl
jnp
cwtl
in
repz
aad
jle
loope
and
shlb
adc
ret
sub
pop
xchg
dec
xchg
in
mov
das
cmc
xor
lea
jo
pop
repz
repnz
mov
and
xchg
xchg
mov
or
xchg
cmp
cmc
decl
cwtl
dec
cli
sbbl
jns
push
fistpl
and
jg
in
pop
loope
pop
ljmp
sbb
pop
xchg
mov
mov
sbb
popa
lcall
daa
xchg
or
xchg
jge
jb
jno
js
pop
mov
cmp
fs
dec
pop
xchg
or
arpl
orb
dec
sub
cs
icebp
das
fwait
repz
and
shll
or
or
jle
sub
adc
mov
leave
or
xchg
push
stos
pop
cmp
jecxz
cmp
pop
scas
jmp
xchg
or
pushl
jecxz
or
mov
test
jg
add
or
mov
xchg
lea
jg
lods
out
or
mov
jp
loop
scas
jae
daa
iret
lea
jmp
and
jno
push
cli
jbe
mov
ss
outsl
xchg
int
std
xor
or
fisubrs
push
sbb
xor
pop
jb
mov
jnp
jo
ret
or
bound
cmpsb
out
in
les
pop
sbb
xor
dec
fadd
insl
in
icebp
xchg
or
rorb
ss
xorl
adc
or
loope
jmp
jmp
sub
cwtl
popa
jb
rcrb
subl
sbb
addr16
cld
xor
lret
and
stos
aaa
cmp
icebp
mov
ljmp
xchg
dec
jl
cmp
fs
inc
rcrb
outsl
or
loope
jbe
and
testb
inc
add
xchg
cmpsl
call
stos
push
stos
loop
pop
jmp
adc
in
sbb
sbb
add
js
and
push
mov
pusha
psrlw
lahf
or
mov
and
inc
popf
add
jno
sbb
ficoml
cmp
mov
movsl
imul
cmc
push
loope
mov
lds
lods
insb
mov
shl
cld
sbb
sbb
inc
insb
sub
sub
int3
pushf
xchg
pop
mov
push
lds
xor
mov
dec
jbe
mov
inc
aam
popa
xchg
shr
push
mov
pop
xchg
movups
movsl
test
ljmp
sbb
xchg
xchg
or
rep
mov
or
xchg
jb
jecxz
dec
out
xor
inc
xchg
sbb
repnz
outsb
imul
out
out
xor
stc
decb
out
cmp
and
inc
fwait
dec
mov
pop
jo
xor
stos
jg
mov
sarb
jnp
jb
xchg
pushf
jns
jmp
cmp
setge
in
jae
lods
mov
inc
jmp
cmp
sub
cld
or
es
loopne
movsb
xchg
hlt
out
xchg
iret
mov
lcall
pop
adc
ret
cmpl
lea
cmpsl
or
jns
add
int3
insl
repz
xor
xchg
out
sub
and
jae
jp
jg
xchg
dec
ljmp
fstpl
ror
adc
sbb
dec
test
cli
or
mov
xchg
andl
jecxz
std
xchg
andl
dec
jne
ret
int
dec
cli
fildll
cli
addr16
adc
out
jb
imul
call
pusha
das
loop
jno
faddl
outsl
das
add
cmp
jne
inc
ds
cli
sbb
dec
push
mov
mov
sub
jno
sub
jg
stos
dec
inc
loope
mov
scas
into
js
lcall
shll
jecxz
test
loopne
sub
adc
mov
mov
xlat
adc
jecxz
pop
jae
jge
xor
fnstsw
out
in
fs
xchg
test
loopne
pushl
fistl
xlat
idivl
jle
jecxz
jae
cmp
repnz
add
jbe
rcrl
test
test
mov
mov
fldl
lods
es
enter
out
mov
fistpl
and
push
xor
cmp
imul
mov
or
inc
xchg
or
add
pop
insb
stos
pop
jae
leave
add
test
sbb
and
sti
ja
add
mov
scas
cmpsl
inc
test
dec
lahf
push
sti
cmp
movsl
cltd
sub
dec
in
nop
nop
cmp
iret
or
das
mov
mov
mov
add
sub
mov
ds
or
enter
cwtl
les
push
xchg
jb
or
push
mov
imul
out
xorl
xchg
cli
out
mov
fmul
or
sahf
pop
sbb
lea
cld
fcmovb
pop
mov
mov
popa
std
jbe
fwait
adc
adc
scas
movsb
lahf
lea
cmp
xor
aad
xchg
lret
sub
sub
hlt
jp
jae
jno
rcll
or
pmulhw
dec
sbb
xchg
cltd
mov
xorb
test
call
ljmp
cld
xchg
xchg
lods
cmpsl
in
add
xchg
adc
push
jbe
jno
jns
and
add
fwait
xor
mov
bound
int
push
and
dec
xchg
movsb
jno
stc
mov
cmp
std
out
test
add
mov
aad
mov
scas
inc
pop
mov
or
das
mov
cld
push
lret
ljmp
jmp
cs
xor
aas
adc
aas
mov
fsincos
hlt
adc
push
jg
dec
cltd
inc
ret
sub
fdivp
lret
xor
cmp
int3
mov
sub
cmc
sbb
lock
push
and
cmp
icebp
in
in
addl
jae
bound
popf
adcl
sub
xor
sub
ret
sarl
adc
jp
in
lds
xor
loop
insb
pop
adc
in
push
sub
adc
jmp
add
sub
pop
bound
fdivrs
mov
not
arpl
mov
popf
addl
sbb
jle
mov
leave
sbb
add
stos
mov
repnz
test
mov
or
cmp
in
stos
xchg
pop
sub
mov
cmp
enter
hlt
fs
push
sbb
adc
jp
in
loopne
scas
dec
xchg
in
xchg
loope
enter
sbb
xlat
bound
in
push
add
sub
inc
lds
in
pop
pop
lea
mov
pop
mov
push
mov
xor
pop
add
or
dec
in
movsb
mov
push
lock
xchg
cs
mov
dec
arpl
mov
inc
je
pushf
push
and
dec
push
shl
push
inc
sub
int3
mov
aas
fwait
call
in
cmp
mov
negl
jmp
or
shr
enter
neg
xor
lahf
push
adc
jb
xor
jecxz
mov
xor
cmp
mov
iret
das
stc
sub
sbb
sub
fsub
fsub
mov
in
jg
arpl
push
lds
and
inc
in
rcl
or
inc
int3
psubsw
xlat
dec
lods
xor
bswap
rcll
cmpl
iret
xlat
dec
jae
in
scas
shll
push
addr16
dec
jp
out
loop
cmp
wrmsr
subb
stc
cmpsl
mov
push
negb
inc
jne
push
call
pop
movsl
mov
ret
popf
je
insb
fisubl
and
insl
loope
fidivrs
xchg
das
loope
xlat
pop
cmp
fwait
stos
mull
sub
mov
arpl
pop
mov
cmp
jl
dec
in
fyl2xp1
sub
pop
jns
in
and
lcall
cmp
sub
les
sub
je
mov
cmc
dec
xlat
mov
cmp
ret
push
shll
cmp
dec
adc
jge
and
loopne
dec
rol
mov
xchg
push
pop
adc
push
loope
out
lods
mov
mov
or
out
dec
jne
xlat
aaa
inc
lods
mov
lcall
iretw
cli
sub
lock
cmp
ret
cmpsl
int
dec
loopne
cmp
lods
inc
mov
les
sarb
aad
or
pop
loope
outsl
fildll
xor
in
push
xchg
sub
test
in
enter
in
sub
aas
pop
pop
shrb
sub
in
loopne
loop
in
daa
ret
push
sti
loope
out
and
push
push
add
das
xchg
jns
rcll
out
loope
ljmp
pop
bound
xor
and
js
sub
outsl
jo
mov
in
enter
popl
add
loopne
pop
in
inc
cmp
arpl
sub
mov
imul
fstp
push
lock
xor
arpl
repz
movsl
mov
or
andb
roll
push
mul
paddusw
fstp
cmp
xlat
movsl
notl
push
imul
jmp
and
aad
mov
into
adc
xor
aad
in
imul
int
lahf
mov
or
lods
cltd
sub
dec
divl
sub
mov
jbe
out
jp
and
loopne
sub
sub
mov
ret
imul
enter
das
aad
shll
leave
or
shl
int
mov
xor
or
mov
and
mov
push
jb
addr16
aas
mov
gs
in
mov
arpl
lea
mov
cwtl
xchg
loope
ficoms
pop
xchg
rclb
dec
fldenv
nop
jb
jl
add
jecxz
and
sub
stos
xchg
mov
incl
sub
in
cmp
arpl
dec
cmpl
loopne
aam
mov
loope
arpl
inc
adc
jmp
dec
aad
mov
test
ret
push
mov
cmpsl
pop
jp
cmpsb
sub
mov
repnz
inc
cli
subb
dec
or
inc
inc
sub
mov
jg
inc
not
int3
popa
arpl
xor
insl
in
out
cltd
mov
je
stos
dec
aad
mov
inc
dec
dec
add
cmp
fcomps
cmp
cmp
aas
cmp
aaa
out
xchg
sub
or
and
or
int
sub
mov
nop
jmp
sub
loope
pop
int
mov
or
jp
out
rclb
inc
es
addr16
out
loope
mov
sti
and
jmp
icebp
in
and
iret
fistpl
ss
rorl
arpl
adc
sahf
aam
push
jo
dec
psraw
adc
in
dec
shlb
call
jno
out
mov
popa
ds
or
fisubs
mov
in
lds
adc
bound
fimuls
mov
mov
lock
filds
in
inc
sarb
fsub
enter
push
pop
insb
cmc
shlb
lods
pop
push
and
out
pushf
hlt
and
xchg
gs
xor
fldt
dec
push
aad
lods
mov
adc
adc
cmp
enter
sbb
cmpsb
fmull
mov
jo
popa
sub
lea
sti
lcall
dec
cli
stos
loope
mov
xor
ljmp
mov
loope
pusha
and
add
nop
cwtl
mov
arpl
stos
enter
js
mov
cmp
fistpl
or
add
movsl
loope
add
jmp
push
ret
loope
xchg
rclb
adc
ljmp
jb
mov
mov
dec
xor
pop
sub
mov
mov
arpl
mov
fsub
mov
sbb
out
rcl
push
or
loopne
gs
adc
ja
mov
dec
xor
ret
cmp
xchg
sub
jb
add
mov
mov
adc
inc
xor
ret
xchg
insl
ret
adc
and
in
push
loope
xchg
idivl
mov
push
inc
ret
stos
dec
sbb
cs
jnp
lods
mov
imul
aad
mov
jecxz
push
sub
in
adc
js
test
pop
jb
bound
push
ret
xor
in
ds
cmp
rolb
pop
xchg
rorb
ret
ljmp
dec
xorl
push
mov
jp
out
mov
test
sub
jmp
scas
stc
stos
xor
loopne
loope
mov
rclb
add
out
call
clc
add
pop
aaa
lods
shrb
insb
outsl
mov
mul
outsb
jmp
int
arpl
xlat
pusha
cmpsl
cmpsb
cwtl
mov
jo
loop
cs
or
jo
or
enter
lret
outsb
mov
cmc
daa
lret
pushf
shl
mov
xchg
vpsubsw
mov
addl
mov
mov
jg
xor
jbe
iret
xchg
aad
mov
and
adc
scas
add
in
int
sub
adc
lods
in
mov
cli
ljmp
inc
mov
shl
mov
pop
rcrl
xchg
xor
scas
jnp
jp
fisubrl
movsbl
in
pop
sarl
pop
bound
ljmp
pop
push
sub
sub
inc
add
push
sub
mov
outsb
inc
ret
pop
loope
dec
inc
iret
lods
jne
aad
mov
das
mov
adc
dec
add
test
arpl
sbb
mov
mov
xchg
lret
shll
mov
scas
mov
ss
mov
arpl
icebp
pop
mov
sub
stos
mov
ljmp
dec
fsubrl
in
sub
nop
sti
movsl
cmp
pop
rcr
mov
fstpt
out
mov
jo
sbb
mov
sbb
das
loope
dec
adc
fsub
les
mov
lds
sbb
sbb
adc
out
xchg
dec
sbb
shl
inc
dec
jb
adc
stos
dec
fnsave
cmp
or
sbb
adc
jns
xchg
pop
xchg
out
rorl
ret
aam
subl
inc
push
std
jne
idivb
cltd
or
pandn
push
mov
jno
xchg
fstpt
loope
xchg
xchg
xor
in
out
cmp
push
ret
test
loope
rclb
add
pop
rorb
aad
xchg
lds
popa
in
lret
inc
pop
xchg
insb
adc
movsb
inc
mov
xor
insl
mov
mov
sbb
rcll
mov
push
ljmp
stos
arpl
xor
xchg
loope
outsl
mov
inc
andl
stos
mov
imul
mov
js
inc
test
das
xor
jno
and
lods
adc
jns
in
filds
pop
arpl
and
sarb
fwait
cmc
push
add
ljmp
push
arpl
fisubrs
cmp
xchg
sarl
psraw
shrl
inc
mov
imul
fdivrs
loope
loop
les
out
loope
add
push
adc
sub
cmp
pop
sbb
xchg
push
jmp
inc
mov
fwait
mov
popa
sub
pop
hlt
lods
cli
aad
mov
mov
notl
pop
jo
adc
cmp
or
leave
add
mov
divl
out
or
imul
mov
fwait
adcb
fldt
xchg
xchg
sbb
loope
popf
loope
sbb
cs
mov
sub
lods
in
fnstsw
ss
jp
ljmp
push
jmp
nop
mov
insb
jg
push
fs
shl
rol
rcll
aas
sub
movzbl
mov
jo
mov
insb
cmp
mov
aaa
sub
pop
repnz
fists
lahf
jle
aad
mov
in
jp
cmp
sbb
mov
cmp
xchg
push
mov
cltd
lret
pop
movsb
adcl
aam
inc
ret
jmp
daa
sub
call
jnp
jp
in
jne
mov
mov
pop
push
movsb
xchg
mov
adc
xchg
test
cmp
push
mov
testl
jge
jecxz
jp
xor
sbb
pop
inc
test
jp
sti
mov
ret
pop
add
pop
mov
xchg
arpl
mov
push
mov
xchg
pop
jnp
mov
push
sub
push
cmp
daa
pushf
mov
dec
jne
xchg
jge
cmp
mov
out
pushf
mov
rorl
jmp
adc
fisubs
push
aad
xchg
stc
das
xchg
jo
dec
sub
push
jo
mov
aad
inc
mov
push
cld
fistpl
push
inc
sub
jge
shr
or
mov
fisttpl
fiaddl
ret
stos
pop
cltd
mov
hlt
lret
loope
sub
xchg
arpl
adc
aas
std
and
out
jns
pushf
loope
clc
cmp
inc
jne
adc
stos
push
ret
jno
das
or
xor
and
mov
cli
xor
or
mov
pushf
ljmp
jg
mov
out
scas
add
in
lcall
dec
pusha
fistl
test
pop
shll
movsb
arpl
cmp
bound
ret
pop
pushf
sbb
mov
jne
mov
into
roll
push
xor
xor
scas
pusha
mov
pop
push
mov
pop
cmp
jno
adc
lahf
out
xlat
xchg
inc
pop
xchg
lret
pop
rcll
jno
aas
sbb
scas
iret
sub
je
rcl
cld
mov
aas
lds
pop
fsub
stos
cmp
xchg
icebp
iret
shlb
loop
stos
out
cltd
gs
xchg
leave
loope
repnz
stc
sub
sub
dec
xchg
jp
out
cli
mov
pusha
aaa
jo
add
cmc
fcoml
jns
adc
jp
in
sti
or
mov
loope
and
inc
and
fs
push
shl
jg
jno
insl
adc
mov
pop
in
addr16
ljmp
jo
clc
pop
push
cld
nop
mov
dec
and
adc
mov
dec
mov
push
adc
idivb
data16
out
inc
sbb
loopne
inc
enter
iret
mul
push
xlat
jmp
scas
pop
iret
sub
pop
in
dec
out
pop
loope
lret
sahf
cmpl
jmp
arpl
push
jns
or
adc
jne
mov
xor
ja
fnstsw
mov
inc
insl
mov
mov
lods
push
gs
int
test
loopne
mov
jo
cmpl
dec
ret
cwtl
jne
sub
dec
adc
fists
xchg
ss
cli
add
iret
notb
test
xchg
lret
mov
call
in
in
cmpsl
aas
sti
data16
mov
scas
fisubl
lock
pop
mov
lea
xchg
dec
dec
in
cmpsb
scas
jne
mov
je
in
jae
xchg
int
sbb
shll
jb
mov
andb
stos
dec
iret
adc
cmpsb
jmp
shr
addr16
xor
push
into
loope
push
cmp
xchg
jl
pop
cwtl
xchg
fucom
fists
ret
xchg
repnz
mov
sbb
outsl
fcmovbe
lea
in
outsb
jne
jmp
call
jae
mov
stos
xor
mov
gs
or
lret
or
push
jo
push
fnsave
mov
adc
mov
mov
ret
mov
sbb
stos
mov
sub
sub
subl
stos
incb
fcmovb
into
iret
xchg
xor
push
aas
jmp
outsl
sti
mov
dec
xor
add
mov
ljmp
loope
mov
inc
xor
mov
repnz
jb
mov
push
insb
pop
sub
test
mov
jns
pop
sbb
or
push
jne
ljmp
jno
jmp
arpl
outsb
iret
cli
mov
push
xor
and
data16
fwait
lret
adc
push
jno
rcll
loope
lcall
xchg
dec
mov
cmp
and
fnstsw
jg
mov
ss
call
stc
xchg
pop
mov
sahf
or
add
in
rcll
or
lods
xchg
cwtl
xor
xor
hlt
jb
inc
movsb
jno
loope
cmc
xlat
xor
mov
or
jne
xchg
cltd
out
and
fadds
mov
mov
lock
outsb
fndisi(8087
jecxz
mov
cmpsl
aad
or
mov
mov
ret
jmp
mov
xchg
xlat
out
iret
mov
shrb
roll
mov
and
testl
lds
rolb
push
add
jmp
and
and
lock
scas
aaa
iret
pop
mov
mov
sub
xchg
lea
cmp
fstpt
pop
arpl
cmp
push
andb
add
hlt
push
out
xor
lds
shl
and
pop
xchg
dec
mov
inc
push
repz
fnstcw
jl
arpl
sbb
ret
sub
dec
mov
mull
arpl
fisubrl
shlb
jno
mov
sub
cs
outsl
lret
sbbb
mov
fistpll
je
and
idivl
mov
xchg
ret
inc
adc
in
testl
and
lret
sbb
mov
xchg
test
pop
ret
mov
push
jle
stos
lods
cltd
xor
fstl
test
enter
lret
jmp
mov
stos
clc
dec
rclb
xchg
aam
add
ret
inc
mov
mov
xchg
in
mov
mov
lret
inc
arpl
xchg
mov
pop
xchg
outsl
stos
fwait
xchg
ja
jo
insl
lods
in
lret
mov
mov
jmp
insb
or
or
aas
std
mov
hlt
cmp
jge
cltd
sbb
push
or
outsl
mov
lret
cld
movsl
ljmp
add
sub
push
inc
fwait
pop
xor
sub
iret
push
lock
jle
sti
stos
adc
addl
sub
inc
mov
adc
outsl
jne
mov
xor
jae
psubd
lds
mov
sbb
test
stos
adc
mov
jae
sub
icebp
xchg
out
or
xor
notb
jo
mov
out
push
mov
push
out
sub
jo
push
out
xchg
sub
sub
in
pop
inc
int
or
hlt
and
xchg
cld
out
cmp
aas
insl
push
insb
shl
lret
fistps
dec
xchg
imul
sbb
dec
push
jo
sub
iret
arpl
and
into
pop
xchg
jp
repnz
test
fists
cs
inc
mov
and
loope
mov
xchg
stos
jp
mov
xchg
leave
jo
loopne
arpl
jmp
adc
outsl
stos
lret
mov
cmpsb
ret
cmpsb
push
adc
mull
xchg
mov
and
aas
adc
xchg
fistpl
rclb
xor
imul
jecxz
test
out
inc
push
aas
fcomip
push
push
push
ss
add
jl
stos
sahf
scas
repz
mulb
and
inc
jbe
loopew
out
stos
push
int
or
outsl
cld
cmpsb
clc
out
nop
mov
jae
sub
lahf
aaa
into
pop
addr16
mov
enter
and
iret
movsb
popf
int3
inc
in
mov
or
popa
cmp
add
fsubr
pop
inc
aad
fsubs
stos
xor
push
inc
push
xchg
and
xor
xor
sahf
xor
fistpl
sub
jp
hlt
or
jo
pop
inc
sub
imul
idivl
push
stos
sbb
push
or
dec
adc
xchg
mov
iret
dec
int
inc
add
push
add
inc
push
or
aad
mov
push
xchg
test
cltd
outsl
imul
mov
xchg
aas
imul
dec
scas
fwait
jne
push
iret
sub
fisttpl
cmp
test
mov
fildl
xchg
lcall
mov
imul
shlb
jno
aaa
ds
mov
add
jno
test
lods
outsb
jne
cwtl
mov
and
pmaddwd
mov
sbb
ret
push
call
mov
subl
push
bound
mov
mov
xchg
orl
xchg
ret
push
or
jno
adc
lods
outsl
pop
fcomip
and
add
lock
or
xchg
xlat
mov
arpl
xchg
or
add
jno
cmp
arpl
jg
enter
add
adc
push
arpl
in
stc
sub
push
sbb
stos
ret
jge
xchg
test
lock
pop
lds
jl
adc
out
push
and
mov
or
loope
jne
mov
sub
in
and
cli
cltd
mov
and
ds
sbb
divb
add
cmpsl
push
ret
adc
aad
xor
in
lcall
cmpsl
cltd
sbb
into
xchg
out
xor
push
xor
aaa
mul
push
pop
sbb
mov
int
or
fisttpl
jp
jns
push
dec
push
push
iret
ljmp
push
arpl
call
ret
jmp
cltd
test
andl
pusha
sub
lret
out
sub
fsubr
lret
mov
xlat
fstpt
xchg
aas
iret
fidivrs
pusha
imul
xchg
divl
iret
in
jge
lock
push
insl
jg
fcomip
mov
jbe
shl
or
xchg
dec
aas
pop
and
aad
sbb
jp
or
or
pop
cltd
sbb
loope
push
ss
xchg
loope
loopne
fistpll
mov
mov
pop
push
lea
cmc
sub
and
push
outsl
xchg
jp
push
jecxz
push
dec
jmp
mov
push
mov
xchg
loope
imull
push
loope
test
mov
icebp
in
insl
or
out
add
int
pop
sbb
lret
cs
mov
int
add
add
loopne
rorl
ficoms
loope
sti
dec
cmpsb
insl
pop
lock
add
xlat
xchg
in
push
dec
jle
insb
mov
and
je
movsl
ficompl
fsubl
mov
iret
or
cmp
out
mov
inc
mov
es
movsl
jnp
repz
adc
aam
int3
inc
in
in
mov
fcom
je
hlt
mov
sub
and
repz
cmp
dec
repz
out
adc
repz
in
popf
or
loope
mov
in
or
jae
cmpsb
aas
cli
push
repz
std
inc
decl
cltd
andl
out
lea
add
push
inc
push
xchg
repz
and
popf
dec
repz
sub
jno
push
nop
or
xor
in
inc
js
stos
cld
xor
stc
repz
loop
pusha
adc
std
xor
mov
sahf
push
shl
xchg
daa
loope
rcrl
das
test
call
dec
repz
mov
cmp
dec
scas
or
stc
or
repz
inc
aad
add
push
jle
in
push
out
cmp
in
push
inc
sbb
xchg
ret
ret
ds
mov
lret
cmp
out
and
enter
adc
repz
jns
lock
adc
out
repz
fistps
sub
scas
in
jl
cmpsb
lods
cmpb
ret
repz
in
push
xor
rcll
sbb
int3
enter
jo
sub
icebp
sti
insb
gs
in
imul
mov
push
nop
js
fwait
in
sub
outsl
inc
lods
xchg
push
or
adc
fst
in
mov
inc
fimuls
jge
pop
repz
xchg
or
adc
arpl
xor
xor
in
ja
or
dec
push
cmp
inc
in
adc
dec
repz
jmp
repz
into
mov
test
rep
mov
sub
push
inc
leave
lds
jmp
ljmp
data16
repz
xlat
xor
shl
xchg
scas
add
jp
sub
std
mov
repnz
repz
xor
arpl
push
jge
pop
sub
push
adc
pop
xchg
mov
cmp
movsl
pop
lods
xchg
int
dec
cmp
mov
jge
test
in
mov
rcll
in
push
repz
fcompl
aam
jo
fsubrs
sarb
push
xchg
adc
cmpl
pusha
mov
fs
add
inc
inc
repz
sub
pop
xchg
mov
repz
pop
clc
lret
mov
scas
push
jno
repz
cmp
push
cltd
xchg
cmc
in
sub
mov
lds
pminub
aaa
test
lahf
xor
add
test
rorl
and
mov
idivl
cltd
mov
aam
sbb
cli
mov
repz
pop
xor
repz
jnp
mov
in
xchg
jae
sbb
inc
mov
mov
outsl
pushl
mov
in
cmp
bound
mov
imul
test
and
repz
mov
cmpsl
dec
fsts
repz
lock
out
imul
inc
call
popf
sub
jle
push
stos
repz
incb
jge
gs
imul
push
cwtl
add
pop
xor
adc
pop
mov
jmp
clc
cwtl
movsb
mov
ficoms
psllw
aam
mov
sub
rolb
scas
sub
xor
and
fidivs
std
jge
das
repz
sbb
les
imul
xchg
push
data16
sbb
stc
into
xchg
popf
repz
add
repz
ret
jl
mov
in
mov
xchg
pop
xor
repz
stc
addr16
and
lods
repz
mov
lahf
push
arpl
repz
mov
mov
xor
push
jmp
xchg
es
mov
or
out
dec
adc
repz
inc
shll
jne
outsb
ret
daa
fadds
dec
iret
or
icebp
pop
sti
clc
repz
pop
lods
fucomp
adc
pop
repz
data16
imul
out
mov
adc
or
or
repz
movsb
mov
mov
inc
jg
pop
repz
jne
or
jo
adc
push
loope
insb
sub
sub
jnp
xchg
repz
jecxz
in
mov
xor
testb
push
into
xchg
pop
repz
lods
nop
fsubrl
test
dec
aaa
out
jbe
fabs
aad
fldl
aad
jae
push
rol
sahf
in
jns
call
arpl
jg
fcoms
stos
cltd
adc
mov
adc
lock
and
daa
lods
dec
and
outsb
inc
pop
xor
cltd
xchg
in
repz
add
loope
mov
push
adc
dec
or
repz
mov
inc
inc
repz
aam
jmp
test
repnz
fisttpll
subl
pop
mov
das
in
bnd
cmc
cmp
sbb
repz
xchg
cmp
dec
data16
jg
cmpsl
or
outsl
dec
rep
hlt
adc
jns
dec
sbb
sub
xchg
das
dec
mov
lods
jae
cld
repz
rorb
and
cmp
repz
xchg
mov
push
stos
pusha
repz
clc
adc
repz
icebp
sub
repz
imul
adc
xlat
shl
and
sbbb
add
sub
repz
mov
add
pop
fnstsw
or
xchg
dec
in
in
cmp
into
cmc
cli
repz
arpl
aad
aaa
inc
out
bound
or
lret
push
repz
push
in
repz
mov
repnz
push
sub
mov
push
aas
mov
out
push
xchg
sbb
cld
rcll
pop
incl
mov
repz
ja
out
add
jp
mov
push
repz
inc
rorl
jge
jg
mov
gs
push
fisubrs
inc
lahf
mov
add
aam
mov
ret
or
adc
push
xor
repz
xchg
add
nop
hlt
rdmsr
sub
xlat
loopne
fdivrs
sub
adc
movsb
sub
adc
and
add
pop
adc
popf
sbb
adc
outsb
xlat
out
and
jno
es
cmpsb
mov
xchg
repz
xchg
mov
sbb
scas
in
cld
pop
in
adc
and
mov
xor
push
aas
jge
xchg
repz
inc
mov
xrelease
pop
imul
pop
rorl
sub
pop
cmp
mov
and
repz
mov
repz
sub
imul
andb
mov
xchg
cmp
and
andl
adc
mov
sub
jg
shl
outsl
jmp
inc
jns
in
sub
cmp
xchg
repnz
rcrl
jle
repz
ljmp
repz
hlt
test
dec
inc
inc
cmc
add
xchg
adcb
aad
sub
cmp
popa
repnz
xchg
iret
fildl
mov
or
repz
sti
fisttpll
push
cltd
add
rep
arpl
xchg
ja
cmc
ja
arpl
push
push
mov
mov
push
lds
cld
pop
sub
loop
ss
jmp
lcall
jp,pn
ret
jmp
add
aaa
lret
pop
push
jae
das
rorb
pop
insb
mov
sub
push
inc
repz
insl
mov
fcoms
mov
xchg
outsb
hlt
mov
push
mov
js
xchg
push
and
aam
cmp
push
subl
and
pop
add
ds
orl
addr16
or
push
dec
cwtl
sub
out
std
loope
jbe
pop
pop
repz
sbb
repz
pusha
lods
popf
shll
repz
adc
imul
leave
push
pop
jle
jns
arpl
mov
lock
xor
push
repz
ja
repz
push
mov
jmp
pushl
xor
stc
xor
push
cmp
sbb
mov
mov
es
repnz
in
insl
sub
sbb
stos
mov
mov
add
mov
into
repz
inc
in
mov
icebp
mov
jae
cmc
fs
sbb
dec
inc
lock
sti
dec
sbb
repnz
stc
shl
jge
lods
dec
je
aaa
xchg
jbe
ja
repz
in
xor
push
sbb
or
mov
sti
repz
pop
and
shll
popa
icebp
cmp
imul
xor
jae
cli
insb
inc
repnz
mov
daa
ret
loopne
repz
sub
scas
or
lock
shlb
pushf
repz
enter
cmpsl
xchg
xor
inc
fnstenv
sub
mov
neg
pop
aam
daa
lea
mov
insb
filds
inc
push
mov
repz
jae
push
or
fimull
rolb
pop
jl
out
or
fcom
mov
subl
mov
add
mov
repnz
inc
dec
sub
jl
adc
mov
repz
mov
pmulhuw
mov
jnp
iret
out
popa
bndstx
or
arpl
push
mov
push
inc
aaa
icebp
xor
pop
xchg
push
fisttpl
add
and
loopne
or
cmp
sti
movsl
jecxz
imul
test
dec
cmp
cmp
push
sub
ja
fbstp
cli
push
jbe
mov
out
add
rorl
mov
shlb
push
mov
xchg
or
xchg
icebp
fidivrl
lcall
out
cli
sub
jae
enter
data16
idivb
nop
dec
or
cld
or
adc
push
outsb
jae
rol
mov
push
fstps
fdiv
xchg
jl
cmpsl
lods
insb
mov
fbstp
sti
fucom
xchg
adc
movsl
div
addr16
arpl
cmc
mov
pop
and
in
xchg
lods
aaa
bound
clc
xchg
loope
in
xor
fbld
mull
cmp
jne
addr16
mov
mov
or
push
fisubrl
insb
in
xor
imul
lock
loopne
push
ret
push
out
or
jecxz
popa
xchg
fcom
or
xchg
mov
out
mov
fnstenv
leave
mov
sahf
fwait
enter
push
mov
scas
jbe
mov
mov
jae
pop
adc
repz
jle
xor
xlat
repz
mov
sub
cmp
imul
in
insl
cltd
scas
mov
push
ficoms
push
dec
inc
repnz
out
inc
dec
lods
sbb
jmp
repz
jl
ljmp
repz
mov
popa
inc
into
out
xchg
cmp
inc
cwtl
push
test
hlt
xor
pop
incl
xor
fdiv
mov
dec
inc
mov
repz
int
mov
jo
lahf
rorb
repz
push
mov
inc
je
or
mov
ds
out
sti
pop
lcall
daa
cmpsl
int3
rcrb
fstpl
pushf
xor
mov
fldcw
roll
dec
or
mov
ja
push
sti
or
xchg
sti
xchg
pusha
add
or
jmp
or
jge
cld
int3
inc
mov
aam
subl
xchg
pop
scas
lods
andps
shll
lret
repnz
and
fdivrl
sub
push
roll
in
out
andb
dec
add
xlat
or
cmp
jb
int3
fcmovnb
or
mov
xchg
xor
dec
test
repz
fidivs
sub
adc
orb
sbb
and
fdiv
push
ljmp
negl
das
loopne
push
test
mov
xlat
repz
sbb
cmp
mov
test
dec
dec
popf
pop
xchg
int
nop
mov
repz
push
mov
xrelease
xor
jns
jo
push
stos
push
sahf
and
repz
mov
xor
out
jne
loope
mov
shlb
xor
jmp
jb
mov
leave
scas
testl
out
mov
push
repz
fildll
repz
pop
xchg
testl
and
or
gs
loopne
test
hlt
arpl
or
popa
mov
in
repnz
mov
ficoml
push
jl
icebp
mov
dec
lret
out
or
stos
negl
cwtl
jae
mov
xchg
add
dec
aad
pop
push
pop
lret
or
out
and
mov
push
ljmp
sub
dec
push
movb
sbb
xor
lock
mov
add
xor
mov
jae
shrl
cmp
push
mov
incl
pop
xor
mov
adc
jo
lea
dec
sub
sub
dec
sbb
mov
mov
xor
xor
mov
xorl
repnz
stc
add
call
jno
fsubrl
mov
out
mov
jb
sub
push
jl
sub
mov
or
push
stc
mov
push
loopne
movsl
add
sub
mov
dec
xlat
mov
cs
sub
jns,pt
repnz
sbb
cmc
js
or
decl
mov
mov
jne
xor
stos
fs
xchg
icebp
xor
outsb
push
add
std
dec
lods
push
jbe
popf
push
call
cld
test
gs
jmp
and
jae
in
mov
mov
arpl
pop
xchg
test
addr16
ljmp
cs
mov
je
ljmp
inc
inc
sbb
xchg
dec
scas
adc
stos
mov
jecxz
jge
repz
mov
mov
push
shlb
or
dec
cli
ljmp
sub
sbb
das
in
pop
mov
dec
arpl
xlat
push
sbb
cmpsb
test
sub
jo
jle
shll
daa
mov
xlat
loope
std
pop
push
add
jns
test
jo
dec
sbb
fst
xchg
in
pop
fwait
addl
jecxz
add
sbb
or
das
lcall
mul
imul
xchg
loopne
scas
xchg
push
sub
xor
xchg
lahf
push
ret
add
push
push
or
inc
or
cmp
jl
inc
lods
cmc
jae
rorb
arpl
in
leave
push
aad
push
jb
xchg
add
mov
test
repz
pop
hlt
repz
pusha
repz
cmp
dec
adc
adc
pop
push
or
mov
rcr
xor
cmp
repz
jne
push
mov
add
insl
jmp
push
pop
lret
push
les
sbb
icebp
xchg
out
dec
add
sub
adc
pop
jno
rcr
out
aas
xchg
push
leave
in
pop
push
out
cs
jae
aaa
cmp
repz
nop
or
stos
mov
in
jecxz
xchg
adc
int3
test
jns
in
pop
negb
ret
xlat
outsl
mov
repz
mov
xchg
repz
js
pop
decl
data16
mov
xchg
adc
mov
adc
mov
call
jae
inc
ss
shl
imul
out
in
les
aas
imul
add
xchg
pusha
loope
in
sub
fcmovnu
push
jp
cmp
lcall
outsb
jp
movl
lret
jmp
mov
fcompl
popf
jecxz
fbstp
xchg
xlat
jno
sbb
xchg
sbb
ljmp
mov
or
stc
bswap
iret
and
xor
mov
lahf
sbb
push
jge
mov
add
inc
pop
and
inc
nop
pop
notb
repz
dec
popl
inc
pop
dec
mov
mov
push
sub
cs
ja
inc
out
movsb
mov
in
aad
cmp
fwait
out
repz
out
or
push
pushf
push
mov
es
push
aas
xor
push
ljmp
enter
mov
loopne
cmp
icebp
push
inc
mov
scas
adcl
jae
cmc
xchg
sub
insb
mov
mov
inc
inc
dec
dec
mov
inc
shl
fisttps
arpl
mov
int3
stc
dec
lahf
mov
fstl
rolb
out
jb
or
sub
ret
mov
in
pop
jae
lea
jle
cmp
pop
cld
pop
jns
pop
je
push
jne
push
pop
jle
dec
dec
out
cmp
je
stc
adc
mov
dec
mov
or
cwtl
in
jno
gs
clc
call
cmp
into
dec
mov
arpl
out
lahf
or
loopne
jecxz
cmc
arpl
push
cs
or
xor
or
lret
inc
ja
subl
or
inc
out
fisubl
sub
jg
ret
rclb
sti
push
add
jmp
jns
repz
sbb
ljmp
sbb
and
sub
dec
xchg
leave
scas
mov
ds
frstor
pop
aas
repz
jge
aam
shrl
repz
lods
daa
jp
loopne
dec
ret
repz
cmpb
in
mov
test
lds
loope
lret
insb
adc
outsl
mov
xor
xchg
test
mov
dec
pop
cmpb
push
fsubl
fptan
ljmp
cmp
icebp
inc
roll
lods
in
jmp
pop
ficompl
pop
repz
lods
repz
jecxz
orl
hlt
out
jbe
mov
popa
pop
cmp
lock
inc
lea
xrelease
loopne
repz
in
jae
xchg
push
mov
es
popf
sbb
dec
add
mov
int3
jmp
cmpsb
jb
jge
push
cmp
std
and
repz
outsl
cld
adc
sbb
or
repz
ss
stos
fidivs
mov
filds
inc
xor
decb
movsb
mov
jge
sbb
jae
ja
xor
loop
ss
repz
shlb
repz
pop
mov
repz
out
jne
push
es
and
and
dec
loopne
add
pop
repnz
jb
es
jbe
repz
adc
aas
cmpsb
js
cmc
into
repz
mov
xchg
repz
jge
gs
insb
and
pop
repnz
movsl
stos
pusha
and
in
dec
gs
mov
mov
call
sahf
jae
icebp
shrl
mov
inc
mov
add
pop
repz
insb
push
push
repz
pushf
fsubrp
and
repz
stc
mov
cmp
jp
xchg
aad
je
daa
mov
ret
sbb
or
pop
mov
mov
dec
xchg
outsl
mov
insl
in
ljmp
repz
mov
cs
or
repnz
es
push
sti
xchg
and
mov
mov
test
popa
ljmp
jmp
or
test
mov
mov
repz
jns
push
xlat
push
daa
test
mov
push
loop
xor
dec
push
jnp
jbe
repz
scas
repz
nop
mov
int
xchg
pop
repz
lds
pop
jnp
mov
cs
repz
push
sub
xor
jae
pop
pop
stos
repz
and
call
ret
sub
arpl
mov
repz
mov
xor
dec
add
je
enter
call
imul
sub
xchg
inc
adc
inc
fs
xchg
adc
mov
pop
roll
js
lret
xchg
jae
lcall
insb
push
dec
pop
lds
mov
repz
sarl
repz
lcall
cmp
cmp
cmc
repz
out
push
repz
lods
mov
adc
jg
fs
repz
sub
stos
repz
lods
dec
xchg
je
push
mov
cmp
push
mov
push
add
jae
jge
xor
fdiv
xlat
xor
lods
lea
mov
scas
pop
test
xrelease
pop
xchg
add
or
fcoms
dec
cld
incl
repz
roll
sbbl
scas
iret
add
in
rcr
push
sbb
sbbl
push
or
sbb
je
call
push
sbb
arpl
nop
test
out
mov
in
or
fsubrp
push
cltd
je
and
dec
and
dec
out
xlat
aas
stc
loope
inc
pop
xchg
cmp
push
ret
movsb
push
pop
jp
ljmp
push
lea
jecxz
xchg
out
mov
out
jmp
into
pusha
pop
and
mov
cld
xchg
cmp
jns
add
jp
movsl
add
inc
arpl
adc
roll
xor
or
repnz
data16
xor
mov
or
inc
xlat
xchg
popf
test
xlat
and
sbb
xor
xchg
jge
lea
xchg
mov
add
repz
xchg
push
std
ds
sti
add
in
or
gs
cli
shll
sar
sti
aas
xchg
pushf
jb
add
filds
mov
adc
mov
fistl
scas
in
adc
jbe
das
push
xchg
jbe
add
stc
add
fdivs
jns
xchg
inc
mov
mov
dec
in
int
mov
xchg
pop
into
rol
rcr
pushf
push
sub
mov
jecxz
fndisi(8087
mov
icebp
or
roll
xor
cmpsl
lcall
push
adc
cli
push
add
shl
pop
mov
movsl
add
xor
in
std
jae
data16
ds
std
outsb
and
loopne
mov
or
and
and
call
push
iret
or
xchg
lahf
cld
mov
cmp
dec
mov
fwait
mov
push
mov
xor
sbb
and
xchg
call
push
fnstenv
in
xchg
dec
jge
mov
or
add
and
mov
xchg
cltd
mov
and
out
cmc
es
mov
jb
inc
insl
push
loopne
or
loopne
fistl
dec
test
mov
mov
imul
inc
pop
loopne
jecxz
icebp
in
sub
and
into
jmp
xor
dec
call
std
sahf
ss
inc
insl
mov
mov
arpl
insb
fsub
jl
cs
mov
xchg
jnp
mov
das
push
pop
or
push
adc
cmp
mov
inc
lock
movsb
addl
test
add
pusha
xor
jle
adc
jp
adc
cmp
inc
int3
or
push
mov
js
ficoms
xchg
pushf
insl
xor
or
xchg
insl
pop
into
jmp
lahf
or
mov
jns
out
out
je
adc
jmp
das
cmpsl
hlt
xchg
or
pusha
cmpsl
jmp
inc
or
ljmp
sbb
in
xor
rolb
mov
fstpt
cmp
push
ret
sbb
mov
leave
sti
push
mov
mov
out
cwtl
testl
add
dec
fisttpll
hlt
notrack
into
pop
xor
rcr
repnz
jae
xor
imul
add
out
mov
mov
ret
jp
push
je
mov
xorl
mov
enter
xchg
out
and
mov
imul
insl
fcoms
fcomi
insl
rcrl
jecxz
les
repnz
jp
cmp
adc
xchg
lock
insl
fidivl
lea
dec
inc
mov
aam
xchg
je
dec
mov
shlb
lea
fwait
sub
fcomi
mov
mov
jno
popf
cli
imul
xchg
xor
jbe
pop
xchg
or
sub
stos
pop
fs
xchg
ret
cmp
stos
nop
xchg
fucomip
cli
popa
icebp
push
or
adcb
fimuls
lds
cmp
cltd
lock
adc
fcmovnbe
lea
subl
loopne
stos
out
sbb
adc
movsb
loop
xor
dec
imul
or
loope
outsb
jb
cmp
xchg
inc
shll
lcall
arpl
nop
sbb
shrb
dec
cmpsb
cmp
andb
lcall
jmp
push
cld
nop
inc
in
or
pop
ja
insb
lea
add
jo
push
push
add
mov
adc
in
lods
ret
in
sbb
jae
and
jo
mov
movsb
sbb
lcall
pushf
dec
daa
rolb
jb
jecxz
and
pop
pop
fiaddl
out
push
and
enter
repz
jo
mov
fs
lret
icebp
jp
sahf
in
call
pop
mov
fdivl
dec
mov
mov
fcmovu
cltd
mov
pop
iret
mov
jmp
fs
jb
int3
jecxz
fisubs
out
stc
gs
cmc
loope
xchg
mov
xchg
cmp
test
ret
mov
cmp
loopne
dec
pop
inc
inc
xor
roll
and
xchg
xchg
negl
aam
ret
xlat
jb
add
fistpl
enter
cmpsl
std
push
pop
cwtl
jno
add
aas
xchg
add
lds
into
push
xchg
lods
adc
jmp
ror
daa
les
call
setne
jns
lahf
jae
or
shlb
popf
cmp
cmp
pop
xor
fwait
scas
in
xchg
adc
add
pop
push
pop
popf
add
add
test
push
and
sub
push
enter
sarl
fiadds
fdivl
dec
stos
in
xchg
cmp
les
pop
or
shrl
call
js
push
fcomps
repz
lahf
push
dec
jae
or
gs
mov
js
out
xchg
push
scas
mov
jae
bswap
ljmp
inc
addr16
ret
sbb
and
and
negl
pop
lahf
addr16
call
decb
add
mov
int
sub
out
dec
popa
insl
ret
cmp
inc
mov
add
icebp
leave
dec
push
into
pushf
jle
xlat
out
lret
xor
cmp
loope
pop
adc
loop
mov
sti
mov
movsl
lods
mov
lock
fs
pop
push
adc
mull
je
dec
or
imul
jle
cmp
jmp
js
sub
pushf
jg
aam
cmp
add
and
in
dec
inc
aaa
movsl
insl
repz
cmp
fldcw
add
jb
mov
loop
in
cmc
dec
repz
ljmp
mov
jns
adc
xchg
xor
ds
aad
adcb
xchg
cmp
lods
lock
mov
inc
push
scas
xor
xor
insl
pop
xchg
fwait
repz
xlat
jae
insb
aad
sbb
jp
mov
cmp
mov
cmpsb
and
mov
dec
mov
add
push
pop
cmp
and
pushf
fisubrs
mov
call
cmpsb
inc
or
stos
popf
sbb
xor
push
fdivrp
push
repz
cli
adcb
shlb
repz
mov
sub
sub
push
mov
loop
adc
movsl
xchg
mov
mov
cmpsb
cmpsl
sarl
jbe
out
outsb
pop
dec
mov
orl
xchg
rep
jnp
and
jmp
xor
int
or
out
repz
mov
cltd
jbe
loope
sti
imul
fcmovu
dec
cld
repnz
dec
pop
cmp
sub
lds
cwtl
dec
ljmp
push
cmp
sarl
aam
lods
jae
xchg
and
fsubp
stos
or
repz
push
mov
addr16
repz
mov
out
ss
repz
xor
repz
clc
cmc
nop
lods
test
repnz
addr16
aam
sub
repz
xor
in
pop
jp
mov
cmp
jl
in
bound
pop
pop
mov
repnz
daa
adc
inc
subl
in
div
and
repnz
pushf
inc
daa
cltd
jb
add
repz
or
and
mov
fisubrl
jae
pop
daa
sahf
or
fcomip
or
mov
mov
cmpsb
pop
jae
lds
xor
loope
dec
and
lret
testb
mov
xchg
insb
push
adc
movsb
pop
mov
inc
mov
inc
aaa
fsubrl
sub
jecxz
push
je
popa
in
cmp
divb
imul
enter
testl
repz
aas
jge
mov
jno
sub
dec
repz
imul
repnz
pop
into
and
jp
push
push
inc
cld
add
stc
inc
xchg
sub
adc
out
mov
mov
insb
inc
pop
dec
pop
lahf
fwait
sbb
aam
sbb
xor
ja
rep
jb
int3
lods
push
in
pop
repz
xor
into
or
popf
in
push
xchg
int3
fsts
xor
daa
mov
fdivrs
clc
cmp
jnp
mov
xor
sbb
or
faddp
int3
and
jb
mov
push
or
leave
inc
fcmovb
js
mov
dec
push
xor
repnz
mov
scas
test
sbb
dec
aad
fiadds
loope
mov
cmp
mov
jg
inc
xchg
jo
mov
cmp
orl
lret
out
gs
into
aad
sti
ret
nop
flds
mov
dec
lock
xchg
xor
cmp
repnz
repz
adc
out
and
rolb
mov
in
or
xor
sub
cmpsb
sahf
mov
dec
jp
movsb
xor
jb
cmpsl
adc
lock
insl
and
jnp
test
pop
push
lock
and
adc
repz
leave
movsb
fwait
ja
repz
pop
sbbl
push
jae
mov
adc
xchg
jne
retw
or
push
push
mov
scas
dec
or
inc
cmp
add
pop
jne
jne
push
sahf
loope
xchg
lahf
hlt
lret
jo
xor
mov
lret
arpl
add
out
dec
lock
shll
sbb
mov
rcr
mov
xchg
orb
imul
adc
fwait
cmp
pop
hlt
mov
in
filds
pop
ja
fs
outsb
inc
pushf
out
push
fcmovnb
fbld
xchg
mov
xor
inc
mov
push
or
mov
sub
das
sbb
dec
pop
lds
scas
xchg
dec
stc
pop
popa
jl
cltd
icebp
shll
jae
xor
fwait
test
out
mov
pop
cmc
add
arpl
jae
stos
hlt
mov
movsl
or
out
sub
rcll
std
jnp
lock
in
fwait
data16
ljmp
call
mov
or
or
cmpsb
mov
rorl
push
orl
repnz
je
inc
add
out
lret
cmp
fisttpll
les
mov
call
popf
mov
lcall
movsl
icebp
outsb
cmp
pop
ret
mov
xchg
out
jmp
and
lods
ret
enter
inc
mov
mov
pop
push
xor
xchg
mov
push
repz
mov
aad
xchg
lahf
rep
push
aam
xlat
and
lea
jne
jle
into
scas
rcrl
mov
mov
cmp
mov
add
xchg
and
pop
jbe
lods
repz
dec
test
scas
mov
jne
mov
mov
adc
push
mov
pop
push
mov
fcomi
arpl
xor
mov
andb
add
mov
mov
sub
and
inc
sub
mov
pop
fsubs
int
fs
dec
sbb
repz
lcall
scas
outsb
pop
shlb
lock
es
push
scas
adc
push
pushf
lock
and
addb
int
imul
jle
mov
or
js
push
mov
adc
pop
aaa
fnstenv
jecxz
notb
test
and
push
repz
mov
push
and
repz
xor
jbe
xchg
mov
in
add
jmp
shrl
lds
repnz
es
xchg
mov
and
repz
xor
push
in
test
xor
mov
stos
xor
or
jae
sbb
mov
in
pop
imul
sbb
mov
jae
jge
xchg
add
jne
idivb
arpl
inc
repnz
jns
loop
sub
stos
out
dec
cmpsb
and
repz
jle
and
outsb
lods
xchg
repz
cmp
or
inc
jle
mov
js
leave
xchg
mov
fdivs
push
inc
nop
add
and
sub
sbb
std
jp
repz
sbb
add
in
in
test
xlat
sbb
sub
push
jnp
jp
out
inc
jns
ss
xlat
sbb
loop
repz
push
lret
lock
sub
dec
dec
xchg
push
push
les
sub
jl
mov
mov
add
repz
lcall
arpl
add
repz
xchg
adc
into
icebp
loopne
out
jle
in
ret
lea
jae
mov
sub
icebp
sbb
mov
push
mov
cli
cmp
bound
cmp
jo
repnz
and
mov
cmp
repz
stos
pop
test
rcrb
cmc
jl
repz
jle
mov
repnz
push
cmpsb
out
rcr
sbb
xchg
into
fcmovnb
push
aaa
jmp
xlat
jecxz
jae
jmp
inc
cmpsl
addr16
mov
scas
push
repz
mov
or
outsl
flds
inc
pop
rcrb
dec
adc
xor
insl
dec
fldenv
cmpsb
push
loopne
pop
jae
jp
gs
repz
push
mov
inc
push
fdivp
push
out
outsl
test
adc
in
clc
mov
sbb
pusha
push
inc
mov
xlat
mov
xor
in
xor
jae
push
pop
imulb
repz
cmpsb
sub
xchg
in
mov
push
adc
repz
xchg
in
pop
gs
pop
jns
or
repz
lods
loope
push
mov
sub
xor
xchg
je
notl
dec
iret
xor
cmp
fs
cmc
pop
rcll
inc
fldl
adc
repz
popa
xchg
repz
push
leave
repnz
aad
pop
lds
cwtl
mov
ja
sbb
inc
cmpl
push
jmp
repz
jo
mov
mov
ret
cwtl
lret
mov
repz
pop
imul
int
push
sbb
jl
push
add
scas
cli
in
aaa
in
icebp
adc
rcrb
repz
push
xor
add
sbb
xor
in
adc
lock
stos
popf
es
dec
pop
rep
pop
ljmp
push
imul
movsb
fbstp
insl
mov
lahf
sbb
adc
xchg
repz
data16
repz
mov
push
and
repz
jg
mov
sbb
insb
dec
jo
repz
shrb
fucomp
fldpi
aam
mul
lea
jle
or
mov
xrelease
mov
icebp
jns
dec
sub
aad
test
out
cmp
jge
pop
fdiv
lea
add
inc
mov
push
push
neg
test
or
mov
aaa
int
shll
daa
cli
fldt
sub
out
mov
mov
mov
outsl
out
push
addr16
lret
dec
mov
repz
adc
add
and
jo
mov
xchg
mov
repz
fcomip
push
dec
mov
or
dec
popf
repz
insl
and
int
movsl
jns
xchg
js
jne
sbb
pop
jl
jae
lock
cmpsb
mov
add
dec
dec
test
lock
hlt
add
dec
stos
mov
in
ja
add
jmp
arpl
repz
xor
mov
repnz
lahf
cmp
jae
xchg
mov
jp
aam
xlat
inc
xor
int
loop
lahf
repz
push
push
faddl
aas
ret
stc
jle
daa
inc
mov
inc
xchg
mov
dec
in
xchg
dec
push
jo
pop
repnz
mov
das
iret
imul
sbb
dec
test
shl
fwait
adc
les
xor
jo
push
negl
in
data16
pop
sti
cmpsb
ljmp
jae
jo
push
fidivs
sub
inc
mov
shlb
jo
and
jle
mov
mov
lcall
push
jecxz
inc
int
xrelease
jno
adc
out
repz
push
mov
pop
mov
ss
movsl
arpl
cmpsb
sub
std
ret
add
mulb
punpckhbw
sub
adc
xchg
repnz
repz
jl
popf
pop
cmc
jmp
adc
adc
loop
lock
imul
repz
insl
mov
rep
push
rorl
rep
icebp
pop
fildll
mov
push
mov
repz
into
dec
sbb
mov
sbb
call
xor
lock
lahf
sub
fwait
repz
push
pop
ret
jne
inc
repz
dec
scas
cmc
loopne
add
cltd
add
xchg
mov
arpl
daa
ss
out
lahf
adc
stc
gs
dec
and
imul
sbbl
inc
sarl
repz
and
adc
sbbl
mov
mov
in
push
ljmp
mov
out
xorb
ds
inc
leave
xchg
ret
pop
and
dec
repnz
push
fiadds
xlat
mov
inc
ret
repz
lods
cmc
jno
lods
mov
mov
adc
sbb
cwtl
in
scas
sub
mov
bound
mov
repnz
xchg
in
or
inc
rep
push
pop
test
insl
push
mov
inc
repz
pop
and
hlt
jmp
mov
mov
xchg
popa
xor
gs
scas
xchg
imul
mov
es
cmc
xchg
out
roll
sti
or
inc
loopne,pt
out
pop
jno
rolb
ret
ss
js
popf
xchg
lods
or
adc
lods
or
cli
das
test
mov
cli
dec
adc
jge
inc
or
test
xchg
lret
mov
clc
mov
cld
sbb
stos
jns
jge
push
repz
movsl
repnz
sarb
int3
pop
mov
cld
adc
fwait
mov
dec
mov
or
mov
mov
inc
js
dec
inc
add
adc
loopne
pop
mov
cmp
sbb
and
testl
insb
mov
pushf
mov
add
jne
movsb
arpl
jecxz
or
xor
and
push
ljmp
jns
test
xor
aam
mov
jno
push
loope
push
sbb
push
push
mov
loopne
or
xor
and
movsb
cmp
mov
xchg
mov
mov
popa
lods
aam
jmp
mov
rol
xchg
pop
rol
out
cltd
adc
arpl
je
repz
dec
jle
pop
pop
inc
and
out
cwtl
dec
mov
arpl
or
push
test
push
lds
dec
or
and
jg
mov
repz
inc
outsl
repz
mov
test
xchg
sub
les
nop
rclb
xor
pop
loope
fmul
mov
sub
daa
xchg
cmpsl
repz
dec
push
and
repz
jb
test
lcall
das
fisubrs
sub
rep
cmpsb
push
xchg
repnz
repz
lods
or
aad
fisttpll
outsb
jl
in
cwtl
jne
in
sub
nop
andl
scas
test
cld
popa
xchg
fidivl
fpatan
arpl
xor
es
jmp
rorb
fcompl
movsl
or
mov
mov
repnz
push
repnz
dec
scas
bnd
cld
pop
cwtl
xchg
sub
or
repz
adc
mov
jp
dec
iret
mov
insl
in
sub
icebp
daa
aam
mov
gs
repz
lea
aas
pop
xor
in
je
xchg
lret
xchg
mov
push
outsb
repz
push
pop
cmp
push
jb
movsl
movsb
dec
lock
aas
pop
popf
lcall
fisubrs
push
andl
inc
repz
mov
mov
lock
and
pop
pop
mov
cmp
sub
jecxz
ficoms
cmp
popa
xchg
xor
repz
subl
sub
icebp
sub
mov
dec
adc
sbb
xchg
test
inc
sub
pop
jecxz
xchg
xor
dec
pop
sub
std
jbe
mov
lock
xor
lods
lea
mov
popf
dec
outsl
fdivp
jp
subb
mul
mov
jae
mov
adc
ret
sarl
push
repz
daa
xor
arpl
int3
test
rcll
out
jecxz
fcompl
jae
arpl
cmp
jnp
mov
inc
in
pop
fwait
xchg
sub
test
pop
repz
icebp
mulb
and
xor
in
cmp
mov
mov
cmp
add
cmpsl
add
and
jno
movsb
sti
xor
jge
adc
mov
in
rclb
in
scas
les
repz
cmp
xor
repz
push
pusha
pop
in
lea
repz
push
jl
repz
addl
xor
sub
xor
icebp
in
outsl
std
jg
or
jnp
repz
stos
in
sbb
sbb
aas
repz
fidivrs
lods
dec
jl
pop
repz
mov
in
outsb
mov
adc
sub
cli
add
std
cs
or
jle
out
xchg
in
adc
xchg
aas
jae
and
mov
push
push
or
nop
jno
std
repz
cs
pop
push
xchg
mov
repz
mov
sub
add
cmc
adc
sub
sbb
insb
push
and
cmp
int3
inc
fwait
loop
loopne
jmp
and
out
jae
pop
or
xor
ss
fldenv
iret
or
sbb
pop
jae
imul
inc
jae
xor
jl
scas
inc
adc
cs
cmpsb
ror
nop
bound
in
jmp
fmull
movsl
xor
movsb
cmpsl
cmpsb
out
jbe
pop
push
shlb
scas
and
out
sub
repz
int
fstl
pop
xor
bswap
decl
iret
shl
jae
jl
movsbl
stos
jo
gs
xchg
jae
out
pop
test
xchg
or
mov
mov
lock
sti
add
in
in
or
icebp
jae
lock
repz
xchg
inc
sub
sbb
jg
xorb
jmp
and
and
jae
pop
test
repz
inc
lahf
xlat
out
jle
cmpsl
repz
leave
fistpll
cltd
jae
push
in
rcrl
lret
inc
inc
jmp
xor
icebp
movsb
dec
mov
jae
add
stos
inc
lds
repz
sub
out
repnz
mov
enter
pop
outsl
loop
jmp
divb
mov
dec
scas
adc
jae
push
shl
dec
aam
mov
jno
sti
cmp
daa
xchg
xor
jg
repz
sarl
lock
sub
mov
mov
jae
mov
fcomi
int
ss
movsb
cmp
add
rcl
aam
out
into
jmp
sub
and
add
loop
jb
mov
lret
xchg
aam
int3
or
ja
adc
jb
int3
popa
mov
scas
xor
add
gs
push
mov
out
in
pushf
fsubrl
jecxz
mov
data16
out
jbe
ljmp
xor
inc
pop
loop
mov
repz
popf
insb
outsl
lcall
test
fildll
mov
into
xor
jno
aaa
adc
xchg
repz
fisubs
stos
bound
inc
scas
inc
mov
push
or
mov
cmp
test
pop
stc
scas
pop
stos
icebp
repz
daa
jge
icebp
push
out
and
xadd
or
aad
cmp
xchg
out
push
ja
pop
ds
imul
repz
icebp
inc
mov
or
nop
mov
mov
push
push
pop
xchg
ja
shr
sbb
int
repz
cmp
pop
stos
dec
jae
jl
jbe
stos
inc
or
xor
rorl
jae
jae
mov
cmp
sbb
cli
or
sti
push
pop
mov
mov
fdivr
subb
adc
scas
and
adc
lods
jno
rep
ficomps
sti
pop
sub
cmpsl
repz
mov
push
jae
add
mov
jnp
stos
pop
push
leave
mov
aaa
push
mov
jne
add
push
repz
enter
xor
repz
sub
fnsave
inc
shlb
fisttpl
loope
sbb
pop
xchg
movsl
push
jp
adc
sub
or
int
and
roll
int
dec
adc
loope
les
pop
mov
or
push
fxch
and
ret
lock
fbstp
scas
repz
mov
xchg
pop
aaa
outsl
lock
mov
jb
sbb
cmp
push
cmpsl
or
fdiv
daa
in
loope
mov
pop
rcrl
push
mov
jmp
aas
pop
xor
jmp
aam
pop
repz
mov
mov
ret
sub
cmp
mov
imul
stos
sbb
repz
stc
imul
mov
mov
mov
cmpsl
adc
sbb
movsb
mov
cli
repz
sub
jae
mov
addr16
out
enter
sub
incl
lock
mov
in
push
adc
adc
cwtl
sub
in
adc
add
repz
ficomps
test
adc
or
jbe
cmp
jae
sub
mov
sti
xor
mov
jle
out
das
or
fmul
rolb
mov
lahf
rorl
repz
jbe
mov
xchg
xlat
dec
movsl
test
lcall
fdivp
mov
sahf
xchg
out
push
ret
div
sub
push
jge
push
iret
mov
jno
sub
popa
mul
aad
mov
push
scas
fwait
rclb
jp
push
adc
std
jns
repz
cmc
into
xor
or
repz
call
push
jmp
xchg
pop
imul
loope
in
mov
loop
adc
rolb
sub
xchg
dec
cmpsb
inc
pop
repz
or
sbb
sbb
xor
aaa
jmp
aas
xor
call
in
jle
hlt
test
mov
lods
scas
push
pushf
xchg
icebp
mov
xor
repz
pop
cli
psrld
dec
repz
and
out
push
lods
inc
lods
xor
pop
arpl
icebp
or
and
repz
sbb
pop
sub
popf
mov
xchg
mov
icebp
cmpsb
nop
sub
jmp
outsb
adc
add
shlb
push
repz
adc
vpavgw
or
jg
pop
es
test
test
and
mov
sub
jne
or
cmpsl
repz
hlt
loop
xor
subb
in
sbb
fs
data16
pop
lret
inc
insl
repz
orl
repz
push
or
es
rorb
add
xchg
jmp
dec
jbe
jno
adc
fistl
mov
or
cmc
loope
iret
jp
sahf
ret
pop
xor
sbb
repnz
inc
jmp
aas
andl
pushf
ror
jge
scas
repz
loopne
pop
lcall
scas
push
fwait
adc
ret
mov
aas
jb
fs
sbb
in
push
mov
or
cmp
mov
aam
fdivp
enter
xchg
or
mov
std
cmp
pop
sub
xor
cmpsb
addr16
mov
mov
lods
and
insb
cmpsl
repz
cmpsb
sbb
mov
dec
mov
xor
in
sub
repz
or
icebp
aas
jae
add
cmc
movl
jp
popa
shl
xor
mov
loopne
jp
repz
out
mov
mov
int
iret
repnz
outsb
sbb
ja
out
fmull
inc
pop
aad
and
push
mov
ret
aad
and
mov
dec
jns
outsl
pop
aas
cmp
shl
or
jae
lds
aaa
shl
or
leave
scas
ljmp
lret
loope
pop
and
cli
cmp
jmp
fstp
or
dec
mov
loop
mov
es
loope
scas
nop
mov
add
adcl
mov
inc
push
push
aam
pop
and
cs
jmp
or
les
shr
xor
xorl
and
push
sub
lods
in
pop
fwait
mov
cmp
adc
jne
mov
mov
int3
mov
push
loope
fcoml
mov
add
sub
jae
pop
lock
push
pop
mov
cmp
aad
test
sbb
xchg
popa
iret
jecxz
lret
or
in
scas
pusha
xor
inc
jg
mov
mov
loope
sbb
lret
sub
mov
in
mov
xchg
ljmp
repz
cmp
repz
mov
imul
call
cmp
mov
mov
sub
xchg
lock
dec
cwtl
push
cmpsb
mov
pusha
mov
and
or
and
aas
test
int3
icebp
addb
dec
pop
xor
arpl
scas
shl
in
into
test
push
iret
out
push
adc
cmpl
dec
sbb
sti
and
int3
test
mov
shll
or
mov
jno
lock
adc
pop
arpl
iret
mov
inc
rcrl
sti
imul
or
mov
inc
push
jo
inc
jecxz
xlat
leave
add
push
repz
jecxz
jp
ficomps
nop
ret
lret
mov
cmpl
mov
out
mov
cli
mov
mov
mov
ret
mov
or
mov
imul
mov
cmc
insb
mov
lea
repnz
mov
mov
jns
subl
jnp
jns
xlat
loop
adc
mov
out
ja
jne
fisubl
mov
scas
mov
mov
mov
mov
mov
push
pop
repnz
mov
mov
or
sbb
jnp
xlat
mov
mov
int3
push
lods
push
xchg
sub
dec
orl
ret
adc
pop
rcr
add
mov
push
mov
loopne
adc
pop
and
jae
rcll
mull
mov
leave
mov
mov
shl
cmp
arpl
shl
cwtl
ret
cmp
mov
repnz
js
test
jl
sub
rolb
insb
sbb
mov
cmp
mov
cmp
inc
fwait
lret
xchg
in
std
mov
rcl
mov
mov
jl
mov
mov
dec
or
jecxz
rcl
in
clc
ret
inc
rcr
mov
sarl
adc
ret
decb
xchg
mov
addl
mov
inc
sub
and
rcll
inc
pop
push
ret
icebp
faddp
adc
mov
insb
mov
adc
mov
int3
xor
cmpsl
into
mov
mov
lcall
mov
in
int3
hlt
ret
inc
sub
iret
pop
pop
or
dec
pop
fbld
mov
mov
insl
mov
mov
pop
mov
mov
pop
xor
ret
mov
cmp
mov
fbstp
loope
ffreep
stos
pop
mov
mov
and
popa
mov
lock
cmp
scas
mov
mov
mov
mov
mov
mov
fisttps
mov
push
sbb
pop
dec
aaa
mov
mov
xchg
mov
js
pusha
outsl
shll
ret
inc
shl
lret
pop
nop
mov
pop
jne
push
pop
enter
jb
inc
mov
mov
jne
popa
loope
sbb
jmp
ret
outsb
icebp
and
sbb
pop
inc
mov
insb
pcmpeqb
mov
mov
mov
scas
push
popf
jae
in
ret
jle
pop
shll
int
mov
outsl
mov
daa
arpl
lret
or
sub
and
sbb
rcl
mov
mov
jno
pop
jmp
push
sub
out
shlb
callw
cmpl
xor
hlt
popa
pop
and
andps
sarl
in
mov
mov
movsl
vmwrite
push
push
add
mov
pop
or
pop
arpl
stos
adc
stos
ret
andl
mov
ret
mov
pusha
pop
push
mov
ret
bound
fistpl
rcl
rorb
fcom
sub
sbb
cmp
shl
adc
push
and
test
push
bts
shld
movzbl
push
ror
add
push
shl
add
mov
adc
btc
mov
rol
rcr
neg
mov
sub
rcl
inc
sub
not
pushf
pushf
jmp
cmp
repz
push
jmp
mov
das
leave
fcoms
lods
jge
pop
mov
ror
inc
imul
pop
and
pop
adc
mov
enter
repnz
dec
cmpsb
mov
pop
and
dec
in
inc
mov
push
adc
adc
inc
add
inc
outsl
mov
xor
mov
jmp
and
pop
sbb
mov
addl
push
jmp
sub
mov
out
inc
cmp
dec
outsl
repz
inc
lcall
in
add
loope
mov
dec
fisubrs
dec
aas
mov
mov
rcl
rcll
pop
es
jl
out
xchg
outsl
push
or
adc
jnp
sub
xor
or
fistps
and
cmp
pushf
mov
mov
ret
enter
test
popa
dec
jg
mov
adc
push
shl
test
jmp
cmpsl
xlat
mov
shlb
stos
das
or
loop
rorb
icebp
and
lret
movsb
sub
dec
lods
pop
xor
push
mov
enter
ss
fbld
in
sbb
popf
mov
push
mov
cmp
pop
jnp
sub
movsb
jno
stos
insl
inc
rolb
pop
outsb
add
push
ss
fbld
adc
cwtl
movsl
cltd
sub
push
out
xchg
call
ficoml
inc
int
sahf
pop
subb
movsb
fldt
push
enter
mov
mov
lcall
dec
push
inc
sahf
jnp
cmp
out
repnz
jmp
or
xlat
xchg
cmp
in
std
push
dec
cmp
mov
or
jmp
out
pop
shl
mov
add
pop
scas
inc
pop
pop
add
add
pop
leave
xchg
mov
and
pop
xor
sub
gs
xor
pop
mov
pop
or
push
jb
stos
dec
divb
cmp
clc
pusha
pusha
or
pushl
jmp
dec
lea
dec
sub
inc
fisttpl
pop
cmc
mov
call
fildll
shrl
sti
mov
xor
ds
leave
xchg
adc
xor
lods
or
mov
pop
push
pop
dec
and
dec
inc
add
add
pop
mov
xchg
xchg
loop
sbb
push
stos
shrl
add
addb
add
fstps
add
add
add
add
xor
add
sbb
add
add
cmp
test
pushf
cmp
jmp
call
add
cmp
cmp
cmc
call
push
nop
fwait
sub
aaa
sub
xlat
rclb
or
fwait
out
popf
push
cmpsb
imul
cmp
loop
jo
xor
sub
xchg
push
and
add
sub
dec
jg
xchg
cmp
jecxz
pop
ja
nop
int3
sub
cmc
push
outsl
scas
or
cmp
mov
cmp
dec
rorl
cmp
out
lret
jmp
jge
stos
bswap
repz
nop
lods
in
push
stos
insl
les
movzbw
movzbw
pop
push
movsbw
lea
not
mov
movsbl
mov
mov
pushf
mov
pushl
ret
movb
jmp
movb
pushf
lea
jne
call
jmp
test
ret
fst
cld
dec
dec
cmp
mov
in
fcompl
sti
inc
xorl
pop
mov
cmpsl
lods
outsl
insb
jecxz
pop
pop
jl
and
bts
jmp
mov
adc
outsb
lret
fsubs
jno
jnp
sahf
and
xor
dec
xchg
mov
xchg
loop
jle
pop
and
ja
or
jg
jb,pn
lods
mov
dec
shlb
jecxz
adc
jne
add
dec
cltd
mull
cmp
fldenv
lods
bound
jno
inc
xchg
xchg
xlat
jo
lea
xor
dec
jno
ds
js
inc
hlt
mov
repnz
sbb
cld
add
imul
mulb
adc
in
mov
ja
jo
mov
rol
test
cmc
mov
jge
inc
mov
xor
adc
cld
push
dec
mov
push
dec
mov
cmp
push
lods
xor
lea
jbe
btc
bts
bsr
sub
mov
mov
xadd
cmp
ror
cmc
mov
rcl
xchg
shl
add
bswap
cmp
shr
neg
sub
movsbw
rcl
mov
shr
shld
bsr
shl
add
movsbl
pushf
jmp
cmp
jo
aaa
int
ret
add
xchg
pop
dec
dec
sub
fs
idiv
adc
repz
popf
into
ljmp
movsl
push
sbb
movsb
xchg
in
and
lods
out
roll
pop
test
in
inc
xchg
pushf
pop
dec
pop
repz
lahf
fisttpll
dec
test
pop
jns
lcall
adc
jno
mov
xchg
lahf
rcr
xchg
pop
mov
mov
aad
movsb
pop
adc
adc
addb
cmp
xor
mov
mov
push
lods
cmp
lea
call
push
call
call
fcompl
jnp
push
push
sbb
lock
inc
lea
and
imul
fmul
int3
into
or
jg
mov
mov
jecxz
lods
mov
adc
sahf
lea
outsb
mov
cmc
push
pop
pop
push
es
adc
out
les
pushf
mov
out
and
in
loop
adc
lds
lret
inc
dec
jle
mov
xchg
or
fistpll
adc
adc
andl
scas
xor
jle
add
push
movb
mov
lea
jmp
call
rol
movsbw
aas
aam
mov
bt
jmp
adc
mov
call
pusha
test
call
jmp
push
sbb
test
repnz
movsb
mov
cmpsb
sarb
mov
cltd
fisubl
jl
arpl
or
inc
jmp
sbb
cltd
lret
stos
jl
lahf
pop
fwait
and
icebp
ds
inc
arpl
push
jnp
inc
inc
movsl
mov
push
data16
mov
xchg
stos
add
xchg
dec
pop
dec
out
dec
fmulp
add
inc
cmpsl
in
stos
shl
jno
mov
movsb
jbe
mov
and
out
inc
cli
les
pop
es
push
dec
mov
mov
jno
push
pop
and
test
dec
hlt
cmp
push
sti
pop
and
jno
scas
mov
sub
xchg
mov
lods
cmpsl
cmc
lcall
ja
lahf
cmpsb
out
test
rcrb
stos
sub
adc
jb
scas
cmp
pop
xchg
mov
sbb
sub
dec
inc
sarb
cmp
lahf
cmpsb
xchg
into
orl
cld
jp
stc
adcw
pop
fdiv
xchg
insb
loop
loope
pop
xchg
out
stos
jne
inc
dec
or
mov
xor
popf
mov
imul
or
jae
fisubl
mov
jmp
sbb
lods
mov
mov
sbb
bt
sub
mov
pushf
pushf
jmp
cmp
mov
pushf
lea
ja
setnp
lea
bswap
pop
pushf
mov
pushf
mov
movzbw
movzbw
lea
jge
pop
push
jmp
ja
pusha
add
add
call
adc
xor
out
jae
sbb
popl
aam
cmp
ret
push
mov
mov
pop
sbb
sub
xchg
call
rep
pop
int3
loopne
sub
aaa
call
das
int
push
es
dec
clc
xchg
test
in
dec
std
push
aad
movsb
sbbb
dec
xor
mov
pop
add
add
inc
jecxz
addr16
jno
mov
inc
xchg
clc
jb
mov
enter
idiv
mov
fwait
ja
mov
das
andb
imul
xlat
sbb
movsl
add
std
or
cmc
xchg
sahf
mull
xor
dec
gs
pop
xor
inc
mov
xor
xchg
push
js
push
sub
mov
inc
and
sub
jg
hlt
cmp
mov
divl
dec
sbb
add
outsl
rcrl
int3
das
add
lcall
lret
jmp
cwtl
jnp
aad
cltd
fildl
das
mov
sbb
and
daa
mov
pop
sahf
xchg
push
iret
dec
loopne
cmpsl
test
mov
mov
pop
mov
lods
dec
dec
out
ja
jge
mov
inc
pushf
pop
clc
in
in
push
arpl
sbb
mov
dec
push
testb
cli
loope
mov
hlt
and
push
jae
mov
xchg
sbb
aaa
sti
in
repz
insb
push
mov
xor
les
gs
loop
push
mov
ficompl
lea
jae
pusha
not
mov
not
not
inc
call
xor
arpl
icebp
jno
dec
push
sub
mov
ret
fistpll
pop
fs
js
jmp
ss
cmp
dec
inc
push
push
and
jle
push
ss
gs
ja
imul
xchg
jbe
dec
add
scas
aaa
aas
insb
or
iret
inc
sub
add
inc
bound
outsb
mov
clc
incl
lods
jns
add
mov
mov
dec
dec
mov
aas
sub
clc
out
xchg
push
pop
push
pop
xchg
psrlq
push
cli
fadd
notl
lock
insl
mov
out
push
lea
fs
lahf
sub
adc
sub
mov
and
leave
mov
repz
and
fdivl
mov
roll
push
daa
lods
mov
insl
mov
fsts
push
nop
xchg
divl
sub
push
mov
xor
movsb
dec
adc
mov
push
ds
xlat
test
and
lahf
push
xchg
mov
scas
lret
mov
mov
jno,pt
shrb
imul
js
push
pushf
mov
jb
mov
mov
and
not
not
mov
call
pusha
call
mov
pusha
pushf
mov
pushf
lods
bt
sub
pushl
jmp
jne
push
mov
call
les
push
divl
or
dec
pop
mov
push
xlat
xchg
or
cwtl
in
aad
mov
cli
sbb
and
mov
adc
fildll
clc
outsb
das
in
xlat
dec
xor
jns
hlt
scas
daa
ljmp
lds
aam
dec
mov
rorb
xor
mov
divl
sub
leave
sbb
cld
ja
roll
jb
call
mov
fadd
sbb
mov
cltd
sbb
mov
call
imul
mov
imul
jne
subb
push
aam
rorb
cmp
clc
in
push
pop
push
adc
sti
xchg
lahf
clc
das
movsl
add
aad
mov
mov
es
inc
jle
cmc
dec
push
add
or
mov
inc
test
aas
mov
rcrl
adc
push
mov
xlat
ret
fldt
or
mov
adc
aas
mov
mov
mov
cld
inc
jecxz
mov
rcll
mov
fistl
pop
inc
loopne
addl
cltd
ret
jno
dec
add
mov
pop
mov
fsts
idivl
sarl
sub
mov
mov
test
subl
inc
std
ror
rorb
mov
aad
pop
jne
pop
pop
subb
lcall
mov
mov
outsl
addl
sub
lds
hlt
es
or
adc
push
in
movsl
jmp
pusha
leave
sub
test
sub
add
insl
bound
sub
shl
js
jo
xchg
fdivrp
adc
loop
inc
sub
mov
xchg
push
ss
in
hlt
inc
adc
icebp
jecxz
xchg
fldenv
call
shrb
adc
movsl
mov
push
imul
cmp
mov
orl
jmp
in
cwtl
stos
cmc
leave
int
out
scas
lods
shrb
orb
push
clc
clc
in
imul
lahf
ret
push
int
mov
xchg
in
sub
xor
jl
pop
movsb
sbb
jl
mov
cwtl
pop
sub
bound
cmp
mov
sub
cld
cmpb
jecxz
adc
xlat
fcomps
dec
xchg
mov
loopne
cltd
adc
jge
push
rcrl
pop
and
jnp
mov
push
lcall
xor
lock
mov
sbb
test
lock
xor
mov
leave
or
mov
push
pushf
stos
pushf
mov
push
sbb
pop
mov
push
repnz
loopne
sarl
jne
std
fnstcw
inc
inc
lds
pop
push
repnz
test
fucomip
jae
jb
mov
push
shll
cmp
jmp
pusha
add
mov
push
shrb
dec
shrb
lret
push
sbb
mov
mov
and
addr16
in
fldcw
aad
test
std
fbld
in
push
push
sahf
pusha
dec
pop
inc
xor
cmp
sbb
cli
add
out
cmp
inc
cmp
xor
lahf
mov
xchg
xor
scas
xor
jb
xor
loope
das
gs
xchg
and
repnz
dec
movsl
xor
stos
rorb
adc
xchg
xor
sbb
test
inc
aas
xchg
test
iret
and
inc
repnz
or
test
iret
hlt
mov
ret
jp
outsl
faddl
and
rorl
jb
mov
in
xchg
pop
adc
loope
or
or
scas
iret
push
cwtl
sub
rol
or
sbb
inc
mov
mov
sub
les
mov
cwtl
xor
push
inc
mov
nop
subl
add
push
jno
mov
imul
outsb
mov
mov
and
loope
cmp
mov
shll
or
icebp
push
aaa
int
add
fists
mov
mov
xchg
pop
push
fistpl
inc
repnz
mov
stos
push
xchg
loope
sbb
inc
inc
imul
gs
das
ds
aas
in
mov
cmp
mov
pop
jmp
adc
movl
push
aad
insb
and
pushl
pusha
pushl
ret
setge
bswap
pusha
lea
jmp
mov
add
mov
or
nop
hlt
mov
ret
fildll
sbb
setne
in
adc
and
push
push
dec
ret
mov
push
push
sbb
out
xchg
xchg
in
stos
lock
test
fcompl
or
adc
inc
in
sbb
pop
add
sub
pop
jecxz
ljmp
xorb
dec
xor
xchg
xor
mov
cmp
pop
in
rcll
ss
insb
mov
out
jmp
or
js
jns
xchg
pop
push
xchg
mov
push
mov
push
mov
and
lea
je
bswap
lea
pushf
movzbw
mov
pushf
pushf
lahf
pop
lea
push
jmp
out
cmp
pop
xor
data16
sbb
imul
sub
and
push
filds
icebp
and
push
pop
adc
jne
pop
adc
testl
push
mov
imul
test
insb
and
les
popa
mov
testl
fs
xor
mov
xor
jb
mov
add
jae
popa
addr16
outsl
js
add
lea
jne
add
bt
bts
test
mov
pushf
stc
or
pushl
pushf
lea
je
mov
pusha
pushf
lea
lea
push
movzwl
push
not
not
pop
lea
not
lea
mov
push
pushl
mov
call
jmp
mov
push
enter
scas
jae
adc
dec
or
mov
stc
cmp
lcall
out
pop
push
rorb
pop
fdiv
or
cmp
push
xchg
xchg
aam
xchg
xor
mul
push
adc
ficoml
and
das
mov
jb
mov
or
mov
jmp
fildl
pop
xchg
push
and
test
bound
push
fcompl
mov
xchg
xchg
call
bound
push
fwait
or
sbb
imul
gs
xor
repz
or
test
mov
xorb
adc
mov
pop
mov
jno
adc
dec
and
call
pop
out
sub
and
lock
les
or
mov
ss
push
aas
int
sbb
ljmp
std
sub
aam
mov
dec
jns
into
jmp
sbb
push
adc
lahf
dec
out
test
inc
mov
into
xchg
pop
pop
mov
stc
jmp
pop
inc
movswl
int
push
or
mov
sub
jns
inc
inc
iret
push
and
dec
ret
arpl
subb
push
inc
or
cs
fidivrl
gs
dec
rol
jb
mov
ds
mov
xchg
aaa
inc
pop
inc
jnp
mov
dec
stc
xor
int
pop
mov
or
lret
cmpsl
push
cmp
repz
pop
aas
pop
rcrb
shlb
and
int3
pushf
adc
cmp
std
cmp
add
shrl
lcall
das
out
adc
imul
ret
movsb
cltd
cld
sub
jbe
pop
mov
cmp
sub
outsl
mov
xor
inc
jmp
cmc
add
mov
jno
push
push
sub
adc
xor
mov
sbb
push
mov
adc
xor
xor
cmc
cmp
inc
inc
test
pop
rcrb
addr16
xchg
dec
pop
addr16
arpl
add
mov
inc
test
cmove
pop
pop
pop
jne
xchg
jns
sti
sbb
pop
pop
mov
bound
addr16
jne
out
ljmp
out
inc
add
pushf
jb
mov
fs
jne
cmp
bsr
rol
mov
clc
stc
bt
call
call
and
mov
movb
pushf
or
pushf
lea
je
jmp
lea
call
jo
and
xchg
pop
sub
out
call
popf
cltd
dec
fmul
or
loope
mov
xchg
push
add
jl
es
leave
xchg
in
repz
call
inc
mov
fbld
shrl
fsts
ror
jb
mov
fs
je
call
jmp
inc
jmp
call
lea
lea
movzbw
movsbw
pushf
not
mov
jmp
lea
jae
pushf
movw
push
lea
jmp
daa
jns
out
ror
imul
cli
sbb
xchg
xlat
in
daa
and
fchs
popa
pop
sarb
xchg
xchg
xchg
inc
js
push
repz
loopne
cmp
jmp
fwait
mov
fadd
icebp
bnd
sbb
pop
lea
inc
ret
mov
icebp
lcall
in
sub
push
xor
shlb
sub
add
shrb
rclb
inc
mov
inc
outsb
and
add
pusha
mov
xchg
lea
mov
jmp
lea
je
pushf
bt
sub
clc
cmp
pusha
pushf
lea
ja
pusha
imul
bt
bt
jmp
pushf
movsbw
lea
pushf
pushl
movl
call
rcrl
or
sub
or
insb
call
or
in
int3
sbb
cmovp
push
add
xchg
movsl
jge
call
mov
subb
lcall
out
fisubl
xor
push
lret
mov
mov
lea
jae
cmc
stc
add
pushf
mov
pushf
lea
jmp
not
pusha
mov
call
call
pusha
pushl
pushl
lea
jmp
pusha
not
movzwl
jmp
jmp
test
sbb
out
rcrl
cmpsb
lret
movsl
aam
dec
out
mov
aas
jno
or
ror
mov
xchg
outsl
test
rolb
inc
addr16
das
or
fcoml
xchg
pushf
and
cmp
lcall
movsl
fmuls
xchg
sub
rol
fldt
rclb
test
stos
push
jmp
in
addl
mov
idivl
mov
pop
lahf
ds
outsl
popa
push
sbb
cmpsb
nop
lahf
mov
mov
jp
mov
fadd
mov
jmp
sbb
jbe
in
push
mov
out
daa
jp
testb
adc
xorb
add
outsb
out
or
cmp
sarb
dec
dec
add
jge
mov
subb
call
xchg
mov
int
xchg
cwtl
arpl
fincstp
mov
adc
sbb
into
ljmp
or
dec
mov
imul
and
in
sbb
pop
pop
dec
jo
lret
sbb
sbb
addr16
or
push
pushf
push
es
xchg
ret
inc
cmp
adc
fndisi(8087
cmp
lods
or
mov
test
hlt
ret
fsub
dec
rcrb
mov
cmp
mov
jae
sbb
orl
inc
and
xor
pop
in
mov
pushf
pushf
push
lea
jmp
lea
je
js
push
pushf
mov
adc
movb
pusha
lea
jmp
stc
pushf
clc
test
pushf
mov
pusha
lea
je
cmp
stc
call
pusha
pushf
lea
je
cmc
mov
neg
shld
add
rcr
adc
adc
movzbw
mov
stc
pushf
add
bt
clc
mov
stc
mov
pusha
cmp
call
jne
gs
xor
fs
insb
add
scas
dec
inc
inc
and
fwait
inc
out
pusha
push
push
lea
jmp
mov
add
push
test
cmc
cmp
cmp
pushl
call
movzbw
setge
pop
lea
mov
movl
call
mov
xchg
call
pop
jmp
lret
cwtl
pushf
scas
dec
fwait
sbb
js
pop
dec
mov
xchg
mov
adc
bswap
jl
loop
push
or
cmp
pop
in
sub
cld
push
push
xchg
or
fwait
xor
pusha
and
pop
sahf
stos
rcrl
les
in
fs
fndisi(8087
movsl
out
mov
or
push
stc
repnz
mov
loope
pop
sahf
xchg
add
jno
adc
xor
push
lods
mov
jnp
inc
cmc
push
adc
lods
mov
out
punpckhwd
xor
sti
mov
bound
leave
mov
pop
cmp
add
cmp
add
xor
add
pop
add
loope
add
ja
add
lret
pusha
clc
xor
jmp
call
pushl
popl
pusha
push
pushf
pushl
pushl
ret
mov
cmpsl
sub
mov
xchg
mov
and
cmp
jno
popf
jecxz
push
sub
fistps
ljmp
scas
daa
imul
pushl
xor
add
pop
dec
icebp
push
cmp
in
jg
mov
mov
mov
dec
add
jmp
jp
jo
lret
pop
cmp
jmp
test
dec
adc
and
xchg
sbb
xor
jecxz
orb
les
and
cmpsb
lahf
mov
mov
rorl
shll
mov
jno
sbb
push
push
and
icebp
lcall
and
jns
xor
aas
mov
mov
addr16
sub
outsl
or
cmp
mov
xor
sbb
and
mov
cmp
push
lds
mov
rolb
cwtl
pop
pop
shll
outsl
cmp
mov
jo
sbb
mov
fwait
mov
push
cmp
xor
jbe
dec
dec
mov
inc
rorl
mov
lds
sbb
loop
fimull
add
test
and
pop
cli
jb
adc
mov
pop
sub
scas
mov
loopne
inc
arpl
xchg
in
adc
dec
dec
xchg
lock
addb
nop
mov
dec
push
gs
aad
and
mov
sahf
in
cli
sbb
nop
pop
data16
cmp
scas
rolb
mov
lea
fwait
add
lds
pop
outsb
ss
adc
scas
outsb
or
inc
inc
clc
int3
enter
outsb
inc
xchg
cli
push
scas
out
xor
sbb
push
repz
xchg
cmp
jb
test
shl
mov
pusha
call
movl
pushf
movl
pushl
pushf
lea
jmp
test
stc
jmp
jmp
lea
call
pusha
pushf
adc
mov
lea
jae
pushf
call
and
movzbw
mov
movzbl
test
xchg
rcl
push
pop
pop
push
btr
rol
push
bts
push
shl
bsr
mov
shr
mov
shl
xor
setp
mov
pushf
pusha
stc
bt
or
push
call
pushf
pusha
call
repz
loopne
ds
xor
std
push
out
sub
lret
sti
jb
std
loopne
push
in
cmc
lea
repnz
es
sub
in
repz
cli
push
div
jg
iret
out
xchg
insl
ljmp
outsl
mov
push
and
lret
insb
scas
xor
rep
imulb
iret
mov
lcall
mov
in
sub
and
push
push
and
in
aaa
test
fcomip
cmp
rcr
roll
shlb
push
out
jmp
xor
push
mov
sub
repnz
and
inc
mov
xor
adc
scas
push
rolb
cmpsl
popf
inc
xor
sbb
jmp
xor
sbb
sbb
insl
daa
mov
sbb
and
std
outsl
mov
popa
jbe
lret
pop
sub
das
fistl
inc
out
insl
sbb
mov
mov
shll
jmp
out
adc
imulb
or
push
cmpsl
dec
inc
and
pop
dec
mov
arpl
fbld
mov
negl
daa
ret
in
ljmp
loop
ret
lods
loop
les
add
das
pop
lds
mov
jg
stos
scas
mov
std
ljmp
shrb
out
pop
mov
cld
shr
jecxz
bound
repz
mov
rolb
aam
repz
mov
popl
rcll
out
jmp
mov
ffree
mov
daa
fxtract
icebp
jmp
xchg
pop
out
or
or
sub
lea
jne
outsl
test
mov
imul
pop
mov
ljmp
or
mov
adc
popa
push
xor
and
pop
lahf
adc
xor
sti
aaa
push
xchg
mov
push
stos
test
shl
int
add
jns
test
lods
pop
cmpsb
cmc
in
ret
loop
mov
xor
outsl
cli
and
xor
sub
xor
ja
stos
inc
lret
in
rol
xchg
arpl
repz
rcr
stos
insw
loop
mov
icebp
xchg
call
movsl
jmp
ficoml
ljmp
or
jecxz
fidivrl
pop
out
nop
adc
mov
shr
mov
loope
dec
in
mov
rep
movsl
scas
lahf
lds
mov
xchg
mov
mov
nop
stos
xor
mov
mov
jmp
lret
aaa
fisttps
sbb
fldt
xchg
sarl
out
inc
scas
pop
jecxz
out
loop
push
pop
mov
fiaddl
cmp
daa
pop
jecxz
pop
lea
inc
ljmp
daa
loop
ljmp
scas
ljmp
pop
stos
arpl
icebp
sub
daa
loop
cmpsl
and
and
ficompl
ljmp
lcall
fisttpl
xchg
jecxz
sub
sub
mov
jnp
iret
push
stos
arpl
sarl
scas
pop
sbb
mov
bound
fwait
roll
out
cmp
ljmp
pop
xchg
sbb
pop
stos
ror
sbbl
jnp
jo
dec
lods
jecxz
pop
stos
jecxz
scas
jecxz
lahf
jecxz
ficompl
ret
mov
xlat
jecxz
lret
cmp
cmp
pop
mov
out
pop
stos
xor
scas
xlat
shlb
xor
fwait
xlat
rcrb
sub
mov
and
push
pop
ret
xor
push
xlat
and
imul
xlat
xchg
and
jo
in
loop
mov
add
push
das
ret
mov
jns
and
gs
fdivp
add
pop
pop
fldt
mov
adc
iret
jecxz
fnsave
push
fsubrs
mov
out
mov
mov
lods
imul
xchg
adc
cmp
mov
push
pop
stos
xchg
aam
fwait
stos
test
inc
pop
mov
dec
lret
jmp
jecxz
cmpsl
shr
or
not
jmp
in
mov
jnp
inc
cmpsl
pop
jp
and
pop
pop
mov
mov
rol
mov
mov
ficoml
push
loope
enter
mov
pop
sarb
ljmp
repnz
xlat
inc
lahf
fidivrl
ljmp
jb
loope
enter
inc
mov
push
dec
and
mov
ljmp
outsl
jecxz
mov
loopw
shr
pop
test
sarb
stos
loopne
shll
jmp
addr16
imul
stos
pop
push
jecxz
xor
push
rdmsr
mov
addr16
fwait
rcr
ljmp
and
movlps
loope
iret
pop
stos
sbb
mov
rcl
jnp
and
hlt
inc
cli
ljmp
jmp
xor
loop
push
pop
dec
loop
loope
int
ljmp
fxch
shr
lret
ficompl
push
cli
dec
push
fiaddl
pop
lret
das
loope
rcr
mov
mov
pop
bound
jmp
mov
xlat
imul
nop
jecxz
mov
aaa
stos
jecxz
scas
jecxz
addl
incl
jecxz
scas
jecxz
mov
mov
aas
mov
add
ret
scas
inc
cmp
ret
pop
xchg
into
inc
mov
jmp
xlat
shll
xchg
sub
ja
mov
imul
rcr
test
shll
dec
jmp
mov
lret
rol
rcr
pop
lret
scas
daa
cmp
cmpsb
fcomi
lret
arpl
shrb
fisttpl
fldenv
rcr
pop
push
out
xchg
ret
mov
sub
inc
pop
fucomi
lret
push
sub
fistpll
lret
rclb
out
pop
mov
lret
dec
mov
cmp
dec
ret
shr
lret
xchg
xchg
shr
sbb
loop
sub
jp
xlat
pop
dec
inc
xlat
in
insb
imul
jmp
aas
paddsb
dec
iret
in
arpl
cmp
into
mov
gs
loop
into
mov
adc
int
das
test
and
lret
mov
arpl
add
int
ret
push
xlat
daa
gs
das
scas
int3
xchg
mov
mov
lret
cmp
shl
adc
lret
ret
out
sbb
out
insb
bound
sub
pmaxsw
out
insl
xchg
loop
stos
xchg
lret
lret
xchg
iret
lret
test
loop
adc
ja
fstpt
shrl
pop
add
fsubr
shll
cmpsl
int
pop
mov
or
push
mov
shrb
ljmp
jmp
shll
je
pusha
iret
dec
stos
cmp
rcll
scas
cld
call
shl
iret
cwtl
or
scas
loop
shll
movsl
mov
push
aas
cmp
xchg
pop
movsb
inc
imul
mov
enter
in
repnz
mov
mov
out
pop
push
add
xor
call
and
call
pop
mov
aad
jae
imul
lahf
rclb
mov
xor
push
xchg
imul
ja
sub
fdiv
adcb
xchg
std
mov
add
scas
outsl
jne
pop
add
xchg
sbb
in
addr16
adc
aam
jmp
scas
cmpsl
les
jg
mov
enter
mov
pop
filds
push
aam
daa
pop
mov
icebp
lea
mov
dec
fbld
inc
or
rcl
imul
pop
nop
dec
mov
mov
jmp
stos
xchg
shr
scas
pop
lret
iret
mov
sub
mov
outsl
jae
dec
xor
scas
das
outsb
jmp
mov
arpl
mov
lret
nop
aas
mov
sub
add
sbbl
push
imul
dec
jmp
lret
jnp
imul
add
rcl
repz
repz
or
sbb
lahf
icebp
icebp
aaa
push
push
add
in
or
out
call
ljmp
mov
push
stos
jg
and
jae
pushf
out
fcmovnbe
ret
aaa
mov
push
int
xlat
jecxz
ret
jo
in
sti
cmpsb
lock
jo
xor
cmp
cwtl
pop
movsl
call
xchg
scas
jno
lods
pop
push
xor
andl
mov
lahf
mov
pushf
mov
cltd
xchg
xor
nop
xor
jmp
in
in
in
ljmp
test
jo
jno
mov
jno
pop
cltd
fdivrl
jp
jns
jcxz
rcll
adc
xchg
pop
mov
and
out
adc
addl
pop
lret
mov
push
iret
sti
jns
daa
jmp
push
mov
jg
hlt
les
mov
ja
imul
lcall
arpl
aas
push
push
fisttpl
test
daa
lea
jae
mov
andb
jmp
sbb
std
outsb
ret
fsubrp
lods
mov
nop
mov
xchg
xchg
scas
jnp
pop
das
jp
cmpsl
xchg
scas
data16
adc
mov
fisubl
mov
xor
xchg
stos
jnp
jno
aas
iret
les
mov
les
mov
lcall
test
imul
das
pop
jbe
scas
mov
test
lret
stos
xchg
dec
jno
iret
scas
daa
orl
repnz
mov
sbb
stos
gs
int3
mov
inc
aad
sahf
mov
fstpt
jecxz
adc
ret
aad
fadds
popf
and
push
imul
jae
out
nop
test
dec
jle
sar
stos
test
mov
fs
out
xor
xchg
cmp
daa
sub
pop
in
sti
lods
sbb
add
out
mov
lret
pop
scas
movsl
xchg
mov
xchg
test
mov
shll
fisttps
mov
ret
js
icebp
mov
lea
rcll
jge
fwait
aas
sub
jl
mov
fldl2e
jle
test
sbb
dec
jecxz
mov
jg
lods
lea
nop
faddp
icebp
fucomi
jl
push
xchg
cmp
popf
mov
mov
daa
push
dec
mov
repnz
push
mov
dec
mov
rolb
stos
mov
repz
inc
rcrb
shl
pop
dec
jae
and
xchg
popf
mov
arpl
jmp
adc
xchg
and
and
out
mov
test
lahf
inc
sbb
repz
dec
push
stos
fsub
cmp
mov
sub
jne
pop
inc
ret
lods
repnz
or
in
xorb
cld
cwtl
cmp
in
xor
stos
jg
sti
mov
repz
xchg
push
gs
push
out
dec
sbb
rcll
push
or
xor
mov
rolb
jl
inc
mov
xor
jle
xchg
mov
lock
mov
movsb
jns
push
pop
fucomip
cmp
pusha
ljmp
xlat
jp
mov
pop
insb
repz
add
test
test
pop
push
stos
movsl
push
movsb
push
mov
xchg
xor
sbb
enter
shll
test
rcrb
loope
movsl
jnp
cmpsl
out
xchg
xchg
mov
lret
lret
icebp
jbe
testl
shrl
or
fisubs
fwait
inc
mov
andl
in
rorb
iret
mov
mov
dec
loope
notl
ret
mov
fiadds
arpl
push
adcb
out
out
mov
xlat
adc
shr
shlb
xchg
xsavec
add
mov
push
loope
iret
mov
rcll
mov
xchg
subl
call
shlb
iret
out
das
mov
xchg
out
inc
push
mov
lret
xchg
addl
mov
and
mov
mov
iret
xchg
mov
lods
ffreep
xchg
les
cmpsl
enter
sub
mov
mov
jge
out
push
ljmp
inc
mov
loope
shrl
pushf
arpl
xor
jmp
repnz
out
xchg
mov
xchg
lret
pushf
outsl
jge
mov
jle
xchg
imul
pop
mov
mov
xchg
xor
out
push
mov
jg
pop
imul
xchg
outsl
es
les
cmpsl
jnp
add
aad
imul
mov
leave
lds
jnp
add
xchg
cmpsb
mov
nop
dec
mov
and
insl
mov
cwtl
jecxz
aad
lea
xchg
pop
stos
mov
mov
ljmp
leave
mov
jnp
or
mov
push
xchg
repz
iret
out
adc
les
les
mov
lods
jecxz
repnz
cmpsl
pop
xchg
jp
and
push
mov
lds
shl
cltd
inc
mov
or
data16
xchg
imul
bound
xchg
adc
leave
dec
pop
or
lahf
xchg
imul
xchg
mov
lret
inc
ja
add
sbb
add
mov
pop
push
mov
arpl
pop
lea
jmp
je
frstor
negb
orl
sbb
or
pop
mov
ret
lock
push
in
jg
cmpsl
lahf
jmp
test
inc
out
mov
mov
lcall
xchg
leave
fstl
stos
xlat
mov
jb
ds
or
pop
outsl
mov
ret
vpperm
fcoms
mov
mov
jp
cmpsl
mov
xchg
mov
jmp
in
je
lret
popf
jle
lret
jb
movsl
add
push
and
js
dec
mov
jl
ret
push
out
lcall
mov
nop
dec
test
outsl
inc
outsl
sbb
and
lret
adc
aad
mov
push
lret
mov
scas
jmp
rcll
and
rol
lcall
jb
rcl
inc
inc
pop
add
imul
out
lret
cmpsb
addr16
filds
in
out
or
mov
clc
mov
cmp
add
lret
outsb
xchg
sbb
outsl
or
pop
ret
jmp
lahf
mov
jb
jge
nop
fwait
sbb
xchg
cs
lret
pusha
shll
or
cmc
roll
popf
roll
xor
mov
bound
xchg
aas
leave
movsb
lahf
sahf
push
shrb
scas
iret
jmp
mov
xor
int
sti
sbb
dec
in
aam
push
mov
jecxz
sti
lods
cmp
fwait
leave
dec
shll
ljmp
fwait
adc
cmp
pop
sbb
movsl
shll
pop
jns
xchg
push
dec
add
sbb
push
bound
aad
aam
cmpsl
shll
sub
jecxz
xchg
popa
mov
pop
dec
iret
inc
sub
xor
out
pop
pop
mov
mov
sub
arpl
jo
ret
fstps
pop
popf
lds
xchg
xor
mov
shrb
popa
jae
fwait
jno
push
mov
jo
aad
aas
push
cmp
adc
nop
jo
jno
into
mov
jmp
cmpsb
mov
jp
mov
mov
daa
sub
cmpsl
jnp
xchg
add
cmp
call
mov
ret
into
fisttps
add
test
mov
xchg
dec
lret
inc
test
imulb
and
dec
mov
int3
shll
stos
icebp
and
cmpsb
pop
fisttpl
sbb
jne
scas
dec
fwait
cmp
adc
call
cmpsl
dec
mov
fldl
pop
inc
loop
jle
jno
leave
loope
xchg
mov
pop
cmovg
out
dec
pop
xchg
das
nop
shll
pop
std
add
xchg
pop
mov
mov
outsl
aas
shll
jae
movsl
xchg
cltd
mov
sub
out
shufps
das
sub
mov
repnz
in
cwtl
inc
int
jg
or
jg
mov
daa
and
cmpsl
xchg
pop
pop
fisttpl
popa
movswl
loop
cmp
leave
mov
add
imul
add
mov
dec
orl
and
std
jne
mov
scas
fucomi
in
cltd
mov
push
aam
daa
mov
arpl
xchg
mov
cltd
scas
mov
outsb
fs
mov
movsl
cmp
lahf
js
mov
aad
and
test
das
adc
leave
pop
data16
mov
and
iret
jo
lcall
ror
repnz
cld
mov
js
lods
into
pop
icebp
out
push
int
jg
out
mov
mov
out
lds
lahf
pop
pop
incl
pop
cmp
cwtl
lods
icebp
inc
setb
mov
jg
imul
lret
push
hlt
inc
imul
and
dec
movsb
inc
inc
scas
jnp
cld
sub
cltd
out
sbb
out
cmp
xchg
movb
pop
mov
push
cmpsl
outsb
adc
dec
xor
lret
jecxz
mov
out
mov
pop
test
popf
cltd
ret
xchg
mov
rcl
mov
add
cmp
int3
repnz
jmp
pop
repz
pop
xlat
mov
sub
xlat
jmp
adc
fildl
out
sub
or
sbb
xchg
fildl
push
lret
jmp
mov
shll
xor
mov
fwait
xlat
ret
iret
adc
mov
pop
sbb
xchg
jns
sub
mov
iret
fmuls
lret
jg
ret
scas
jb
pop
sbb
ficompl
inc
mov
jmp
inc
cs
aas
xchg
jecxz
mov
mov
ret
lea
adc
lahf
sub
sub
daa
cmp
cwtl
pop
push
jmp
and
adc
lret
sub
pop
adc
daa
pop
jmp
mov
pop
dec
and
andl
add
jb
das
and
aas
scas
das
test
daa
rcll
push
mov
lcall
inc
push
pop
xchg
mov
jb
inc
and
dec
adc
dec
and
push
aam
stos
or
pop
sub
daa
pop
sub
mov
lret
aad
mov
mov
add
cmpsb
add
subb
fcomip
sbb
dec
bound
dec
push
ret
scas
sbb
repz
sbb
adc
daa
es
add
jmp
adc
loope
and
sbb
fnstenv
jmp
pop
jmp
adc
icebp
xchg
add
jg
sbb
mov
or
ret
mov
sbb
ret
and
jecxz
mov
and
fbld
inc
sti
mov
adc
sarl
mov
imul
rcl
adc
addl
sahf
sbb
int
mov
cli
pushf
arpl
adc
sub
fwait
lods
cmp
pop
daa
sbb
cltd
inc
adc
pop
cmpsb
pop
adc
inc
mov
pop
or
jmp
jmp
jae
leave
cli
sbb
jecxz
mov
jg
and
imul
dec
xchg
dec
leave
aaa
and
dec
mov
sbb
subb
xchg
push
stos
sub
mov
xor
mov
lret
fimull
jmp
cvtps2pd
and
lahf
outsl
rcll
adc
sub
and
sti
mov
test
pop
jmp
shll
pop
dec
pop
xor
sbb
adc
lret
sub
arpl
jno
pop
fnstcw
lret
add
mov
mov
push
jg
fistl
sub
adc
add
int3
enter
out
jnp
clc
xlat
jmp
shl
in
fnclex
cmc
sub
loope
hlt
nop
out
fs
mov
fisubrl
aam
loopne
fisubl
sar
jno
in
push
mov
gs
scas
xlat
mov
insb
loop
out
inc
outsb
imulb
repz
scas
jmp
fcomi
std
out
inc
jae
int3
gs
vmwrite
data16
pop
enter
nop
js
adc
pop
icebp
dec
ljmp
push
imul
mov
push
icebp
out
rcrb
jae
pop
cmp
aam
fsub
icebp
push
call
fildl
pop
or
out
push
out
jae
jno
out
cmpsb
in
loopne
jae
out
loope
sbb
sti
imul
jne
std
in
fisubrs
test
jb
push
out
loopne
cmp
hlt
sbb
gs
inc
pop
insb
jae
push
arpl
enter
loop
inc
xor
hlt
paddsb
mul
and
push
lds
push
shll
js
jo
out
lods
out
leave
sub
je
dec
jmp
dec
lcall
outsl
xlat
push
jno
insb
cli
imul
out
dec
enter
lcall
stos
xlat
in
jnp
insl
pop
push
sbb
jg
pushf
jo
repnz
out
scas
loopne
xor
call
sti
jae,pn
push
or
in
jle
jno
fisubrs
outsb
push
loop
outsb
dec
rorb
cs
jnp
outsl
lock
jae
mov
sbb
cmp
mull
std
xchg
push
out
sbb
mov
scas
xchg
jl
pop
push
xor
jo
shll
mov
out
shrl
fucomi
call
adc
jo
push
mov
jp
dec
cmc
jbe
lahf
inc
jno
adc
out
insb
xlat
pop
and
repnz
sbb
jge
loope
ljmp
out
insb
inc
in
dec
pop
hlt
les
xor
lcall
cmp
push
adc
nop
jmp
outsl
loopne
jmp
ja
jnp
push
mov
fnstsw
push
push
sarl
in
loopne
lock
repz
jp
mov
sar
pop
arpl
or
and
sbbl
jno
out
cmp
out
jmp
pop
mov
out
addb
pop
scas
jns
repz
into
out
pop
mov
pusha
enter
adc
enter
mov
shl
out
das
and
push
adc
int3
cmpsb
push
ror
notb
popa
ljmp
mov
dec
loop
jle
hlt
ljmp
add
lret
jp
jmp
pop
and
jbe
jecxz
pop
fidivrl
xchg
call
adc
rolb
push
outsl
sub
jb
push
inc
iret
aaa
out
pushf
push
fbstp
lock
int
dec
jbe
aam
arpl
jo
imul
pop
mov
pop
push
hlt
jb
or
lods
inc
insl
ljmp
ficomps
push
in
cli
xor
jno
shl
xor
fs
les
shr
xchg
jne
loopne
bound
loop
mov
insb
imul
addb
in
mov
adc
scas
sub
hlt
gs
mov
pop
mov
in
dec
push
insb
inc
mov
fstl
push
call
pushf
sub
jmp
repnz
inc
mov
mov
adc
mov
sub
push
jns
mov
test
ds
ss
or
fucomi
ficoml
inc
imul
lea
ficoml
mov
ljmp
jae
and
cs
rol
insl
sbb
adc
mov
shll
out
fmul
cmp
imul
stos
push
mov
lea
or
in
push
jge
out
data16
lock
repz
icebp
out
loop
jg
or
test
imul
adc
pop
gs
push
aaa
fidivl
dec
mov
cs
inc
mov
pop
pop
movsl
jmp
subl
xor
imul
shll
pop
jmp
cmp
pop
gs
aam
ds
je
sub
dec
inc
push
ja
gs
das
dec
testl
sub
insl
inc
enter
ljmp
jnp
lret
ja
ljmp
cmp
fimull
xlat
shll
push
mov
dec
fucomi
gs
aad
std
into
nop
out
mov
sbb
in
imull
out
es
or
xor
cmp
xor
xchg
loopne
loope
test
call
xchg
sbb
xor
push
or
push
loopne
push
push
inc
jle
pop
enter
add
cmc
out
out
sbb
adc
pop
insb
rcr
mov
test
aam
lock
cld
cmc
mov
lret
fldcw
and
cs
sub
int
pop
sub
dec
imull
xchg
insb
xorb
xor
push
je
into
scas
jecxz
pop
in
loop
adc
cmp
push
rclb
inc
gs
std
leave
adc
fnclex
adc
daa
mov
cmp
call
ljmp
out
pop
repnz
idiv
test
push
sub
shll
call
pop
mov
loope
loope
leave
sbb
mov
mov
push
push
pop
loop
iret
js
jl
movsl
pusha
mov
icebp
sub
aad
or
inc
lods
and
enter
cli
add
fs
repz
cmpsl
push
mov
pop
aam
fs
lods
inc
jae
imul
mov
outsl
jecxz
push
push
fdivp
xor
enter
or
adc
hlt
out
lret
add
dec
xchg
sbb
stos
xchg
sub
in
pop
push
jae
icebp
and
outsb
xor
scas
mov
jg
sub
fcmovu
inc
andb
mov
or
imul
cmp
out
movsl
outsb
enter
int3
cmc
pop
out
test
and
and
repnz
push
push
repnz
insb
les
fimull
orl
leave
mov
and
and
out
gs
test
push
mov
out
in
insb
pushf
in
movsl
imul
push
insl
mov
insl
repnz
mov
dec
mov
sbb
popf
mov
push
lret
push
pop
push
std
push
sub
adc
imul
stc
pusha
dec
push
push
pop
jp
pusha
repz
xchg
push
std
dec
sbb
mov
push
bound
sahf
popf
gs
in
jle
push
cltd
pushf
dec
dec
mov
lcall
mov
lock
add
xlat
jecxz
push
popf
stos
fisubl
mov
jmp
insl
pop
cmpsl
loopne
xchg
adc
jae
loop
lret
rorb
mov
add
mov
in
jae
rol
in
aad
push
rclb
xchg
in
jp
out
stos
push
ja
shrl
repz
fildll
dec
jmp
lahf
jmp
pusha
lret
mov
out
and
lods
mov
insb
shlb
jl
test
arpl
dec
pop
mov
fimuls
out
fsubr
push
mov
fstl
loop
xor
daa
lahf
cmp
fcompl
mov
aam
rorl
jnp
not
stos
pusha
repz
inc
cmp
fcoml
xchg
scas
cmovnp
repz
in
pusha
dec
insl
les
or
lods
jae
scas
jecxz
mov
pusha
repnz
push
out
adc
lahf
movsl
fucomi
ret
adc
lcall
sbb
pop
loopne
gs
enter
adc
mov
dec
push
stos
dec
lods
jae
mov
cwtl
dec
sbbl
outsb
push
push
push
shll
enter
push
rcrl
das
pop
in
popf
xchg
pop
into
fcmovb
ficoms
into
cmp
in
out
pop
je
ljmp
sbb
aaa
ds
in
out
add
pop
mov
add
mov
mov
imul
xchg
out
loopne
xlat
adc
fnclex
stos
jne
out
outsl
lcall
insb
inc
lods
scas
jns
das
pusha
nop
sub
inc
jae
les
inc
xchg
adc
scas
sub
out
ficomps
lock
inc
arpl
adcb
movsb
cld
sbb
push
xor
dec
in
fstpt
lods
sub
push
popa
stos
jg
jnp
cmc
gs
cs
testb
test
in
inc
je
out
in
xchg
dec
sbb
loope
jno
push
mov
fdivs
push
inc
cmp
mov
loopne
dec
xor
fisubl
push
mov
mov
out
loope
pop
xor
jns
push
push
push
xchg
out
in
loope
ja
stos
push
lret
mov
push
loopne
pop
mov
je
jae
fidivrl
mov
insb
loope
mov
push
sub
xor
pop
pop
mov
arpl
in
push
xchg
repnz
xchg
mov
int3
insl
jp
gs
jne
jae
out
out
inc
xchg
cmp
sqrtps
outsb
gs
imul
add
daa
das
ljmp
outsl
gs
cld
out
add
mov
sti
pop
gs
loope
insl
loop
mov
push
xor
cwtl
pop
lcall
pop
mov
lret
mov
das
mov
push
outsb
in
fsubs
mul
jno
cmp
subps
mov
ret
mov
xor
out
xor
xchg
xor
iret
call
jae
cmp
push
ret
mov
dec
jno
shr
pop
out
sbb
insl
sbbl
push
fsubrp
shll
pop
jmp
inc
rorb
arpl
enter
inc
lock
xor
test
je
dec
in
mov
gs
imull
out
add
fimuls
cmp
test
dec
or
pusha
into
ret
pop
jmp
pop
push
shl
insb
out
fisttpl
pop
hlt
add
xor
push
insb
shl
dec
inc
dec
stos
pop
imul
movsl
pop
jno
push
movsl
je
enter
pop
stos
push
sub
inc
int3
jp
out
fldenv
lret
call
inc
repnz
movsl
pop
push
in
movsb
add
pop
jmp
sbb
jmp
jae
enter
push
enter
pop
sub
ret
jmp
or
aad
or
add
jle
movsb
xchg
in
xchg
je
sub
jae
xchg
bound
add
repnz
pop
jmp
testb
imull
xor
cwtl
jb
loop
in
ss
ret
jae
xlat
loop
fcmovb
cmc
pop
ds
jae
mov
outsb
hlt
jmp
in
hlt
xor
mov
fdiv
xor
mov
lods
imul
add
lods
jb
xor
xor
ja
xor
xor
imul
rcl
mov
jmp
sbb
repnz
lock
shlb
movsb
sub
mov
in
testl
outsl
sti
je
in
xlat
test
cli
xor
push
ljmp
in
cmc
fisubl
xor
mull
jo
jecxz
sub
outsl
mov
and
xor
sub
sti
test
xchg
jmp
xor
mov
sti
jmp
in
add
in
mov
pop
add
xor
cmpsl
mov
mov
movsl
xchg
fdivp
arpl
adc
bound
aam
jecxz
adc
outsb
iret
mov
test
rorl
and
pop
lock
dec
shlb
lret
das
in
jae
cli
pop
xor
lock
lret
mov
sbb
xchg
shl
dec
xchg
or
pop
cmc
pop
lret
mov
rcrb
push
arpl
aas
mov
imull
stos
xlat
repz
arpl
sti
mov
imul
int
mov
xchg
jecxz
je
lcall
sti
fs
outsl
fs
ja
shr
sub
in
cmc
lea
push
aam
roll
sahf
cmp
insb
in
or
fbld
shlb
adc
jecxz
insb
loopne
jl
and
aad
sub
cmc
loop
push
stos
jecxz
fidivs
notl
cmc
mov
imul
adc
adc
add
rcll
and
fisubl
xor
adc
in
imull
xor
xor
jecxz
das
insl
jae
je
mov
xorb
dec
push
mov
xchg
mov
add
daa
jo
shrl
shrl
sbb
jecxz
jns
repnz
jecxz
loop
xor
insl
cmpsb
and
jge
jecxz
fs
mov
in
js
out
sbb
push
jb
out
insl
jecxz
repnz
gs
fsubp
shlb
sahf
add
xchg
rorb
ror
clc
or
lock
inc
jecxz
fistl
cmc
aad
jecxz
sub
lahf
call
rcl
in
sub
aaa
scas
aam
enter
jecxz
adc
xor
out
in
icebp
sub
dec
jecxz
mov
insl
mov
mov
push
int
xchg
insb
jae
xor
fcmovnbe
jecxz
in
pop
jg
fnstenv
popa
dec
pop
xlat
and
mov
stc
mul
pop
scas
out
xor
inc
and
cwtl
push
mov
inc
jb
mov
jecxz
xor
fs
add
mov
add
dec
repnz
mov
into
test
pushl
and
dec
sub
xlat
jmp
adc
out
xchg
and
inc
scas
jecxz
data16
shll
sbb
les
fwait
aam
push
adc
adc
shlb
fildl
movsl
mov
mov
jecxz
cmp
xlat
jno
stos
mov
sub
lret
les
mov
ret
mov
sbb
rcl
jae
adc
jnp
jmp
mov
jmp
imul
adc
mov
fcomp
pop
push
test
xor
mov
pop
in
adc
imul
inc
pop
icebp
and
push
dec
and
push
push
fcmovnu
mov
cli
inc
inc
fwait
ret
adc
pop
dec
sbb
inc
mov
pop
and
sbb
mov
sbb
sahf
sbb
adc
fsubs
mov
enter
imul
mov
into
inc
push
lret
mov
and
jecxz
push
lods
adc
mov
pop
loop
sbb
sub
sbb
ficomps
aaa
mov
rcrl
inc
adc
out
and
mov
inc
xchg
lret
dec
cmp
sar
inc
jmp
notl
mov
lds
stc
stos
and
cmp
ret
loopne
shr
ret
shrl
mov
ljmp
push
lods
lock
js
mov
out
mov
iret
sbb
iret
iret
mov
daa
fsubr
mov
out
mov
lret
push
lods
aam
dec
pop
lods
ljmp
jg
mov
mov
movq
rcll
push
rorb
in
mov
fdivrs
mov
pop
pop
stos
mov
out
cmp
bound
fiaddl
bound
insb
cs
mov
imul
add
out
outsl
jge
es
ret
test
mov
sbb
inc
pop
shl
mov
inc
dec
stos
xor
and
scas
rorl
push
popa
and
stos
sub
and
shl
mov
jbe
adc
pop
mov
or
out
xor
inc
jno
adc
push
outsl
mov
adc
dec
ret
shlb
imul
sbb
sub
pop
ljmp
shrl
jmp
shr
addb
test
test
ljmp
mov
mov
in
pause
mov
xorl
xchg
xchg
mov
aad
aas
lods
xor
ficomps
cmp
ljmp
adc
jmp
lods
fists
movsl
test
sub
aam
dec
lret
mov
stos
fstl
test
stos
popa
inc
lods
xlat
shrb
int3
mov
jmp
fsubl
mov
push
lods
jge
das
mov
ds
int
or
fisubs
jmp
mov
mov
mov
mov
aaa
xchg
adc
imul
ret
xchg
shufps
shll
leave
fiadds
jno
ljmp
mov
cmpsl
ljmp
iret
into
int
dec
imul
cwtl
aad
aam
xor
cwtl
or
lods
jae
fsubr
shll
out
ret
in
ss
fildll
fsubrl
outsl
mov
cmp
push
repz
cmc
lods
lock
xchg
lret
adc
adc
mov
mov
shll
pop
in
insb
mov
int3
add
adc
movsb
notl
jnp
ret
and
mov
or
or
mov
imul
xor
and
aam
in
test
in
add
mov
dec
test
popl
dec
mov
sub
loopnew
mov
addr16
ret
pop
push
xchg
stos
xchg
testl
sub
jmp
mov
sub
rorb
addr16
das
mov
pushf
mov
decl
sbb
loop
and
and
add
dec
push
cmp
lea
dec
enter
lahf
add
in
and
in
out
or
bnd
icebp
icebp
test
in
push
cmp
pusha
adc
ljmp
scas
xchg
lods
jg
mov
xchg
scas
sbb
xchg
imul
lock
hlt
rolb
pop
lret
addl
add
std
sub
loopne
mov
mov
xchg
fwait
repnz
out
mov
dec
lahf
mov
jg
loope
sub
pop
push
filds
fstl
iret
rolb
mov
lods
aad
mov
jecxz
fiadds
fmull
lods
stos
in
add
cmp
cmpb
add
mov
inc
inc
cltd
rorb
jg
cmpsl
pop
mov
test
popa
stc
sbb
xchg
pop
xchg
jnp
inc
mov
push
jmp
lahf
mov
jg
dec
dec
xchg
cmp
clc
int3
add
xchg
mov
inc
cmp
xlat
push
adc
dec
mov
aam
jecxz
and
add
cmpsb
lahf
mov
dec
out
cmp
fbld
ljmp
shr
out
shr
addr16
adc
call
fnstsw
pop
in
enter
loop
arpl
mov
mov
jle
rorl
ljmp
xor
sbb
xor
push
icebp
clc
sar
mov
and
iret
cld
stos
je
adc
out
cli
mov
jmp
jl
test
xchg
lret
xchg
out
into
repnz
pop
add
cltd
into
adc
sbb
nop
ljmp
data16
out
in
push
cmp
and
xchg
fistl
dec
loope
int3
lock
sub
hlt
loop
scas
sub
les
push
enter
outsl
icebp
pop
lret
aas
xchg
aas
loope
cmpsb
shll
out
mov
aaa
jbe
pop
dec
xor
dec
testl
dec
mov
and
jb
lock
cs
mov
int3
ljmp
into
mov
adc
inc
mov
push
insb
icebp
pop
repnz
sbb
push
mov
add
jae
xor
scas
mov
mov
jae
notb
loop
xchg
mov
sbb
ror
in
pop
jge
adc
lahf
stos
push
imul
mov
sbb
rol
imul
out
pop
imul
dec
xchg
xor
adcb
xor
mov
subps
in
cmp
mov
repnz
imul
xorb
out
mov
rcrl
mov
and
and
stos
and
add
add
out
sbb
pop
hlt
out
xlat
shrb
ljmp
sbb
daa
clc
pusha
dec
daa
jmp
sbb
lret
mov
mov
out
pop
in
mov
xor
sub
imul
pushf
push
stos
jmp
mov
imul
inc
push
jo
adc
int3
and
xor
inc
stos
sbb
xchg
adc
aad
stos
adc
lock
pop
idivl
mov
mov
aaa
dec
shll
icebp
movsb
adc
cmpsl
aas
jmp
cmpb
jnp
divb
xor
fwait
mov
insb
sbb
xor
daa
repnz
sub
push
push
adc
sarl
add
lds
mov
cmpsb
popf
mov
out
addr16
fbstp
jnp
dec
dec
or
pop
out
mov
sub
scas
hlt
xor
mov
pop
in
pusha
add
nop
push
insl
div
jecxz
out
addb
dec
push
in
or
sbb
ret
lret
sbb
icebp
subl
mov
jg
fwait
add
jecxz
xchg
fisttpll
push
push
inc
pop
mov
pop
mov
rorl
jg
bnd
mov
iret
push
rcl
push
ficompl
sub
stos
mov
xor
sub
mov
lahf
sbb
icebp
aas
fdiv
ljmp
sub
pop
arpl
pop
add
jns
scas
and
insl
repz
mov
mov
popa
add
ret
pop
xchg
test
pop
xor
pop
iret
mov
ja
jge
ja
ds
mov
pop
shr
cs
ja
aas
adc
push
mov
pop
les
ljmp
jg
icebp
dec
adc
adc
cmpsl
out
daa
in
loop
int
cmpsb
add
fistpll
arpl
sbb
ds
cmpsl
fldt
sbb
aam
add
das
fisttps
lahf
addr16
mov
push
pop
roll
and
xchg
aaa
dec
rcrb
inc
lcall
mov
cmpsb
push
icebp
ljmp
cmp
mov
arpl
add
xchg
lods
jnp
adc
mov
sbb
xchg
daa
and
xlat
cmpsl
add
fcompl
add
ret
sbb
in
pop
sbb
fwait
or
mov
in
shrl
ds
ja
jp
adc
lods
lret
into
adc
mov
cmp
pop
xor
pop
sbb
inc
push
xchg
sbb
xorb
mov
jp
xor
popa
pop
andl
cmp
test
into
pop
push
icebp
sub
dec
xchg
iret
push
fmul
jmp
sub
push
stc
xor
bound
gs
sub
adc
mov
pop
test
and
pop
test
lock
lock
out
xchg
push
icebp
inc
inc
stos
leave
push
ljmp
es
daa
mov
shrl
dec
sti
subl
mov
jecxz
xchg
rcrb
mov
jmp
scas
mov
push
icebp
sub
push
popf
sbb
mov
iret
daa
daa
inc
and
lahf
out
mov
mov
xor
stos
jnp
xchg
cmp
fdivrl
add
pop
adc
in
icebp
and
lret
pop
and
aam
and
imul
mov
bound
icebp
loopne
sub
leave
ljmp
les
lock
push
in
mov
ljmp
mov
xchg
mov
in
or
pop
push
cmp
pop
insb
xor
out
add
jae
mov
fistpl
loope
stos
imul
daa
jmp
lret
dec
mov
xchg
rep
xchg
pop
xor
and
sbb
dec
popa
mov
pop
loop
ljmp
push
mov
and
nop
insb
ljmp
ja
inc
lahf
adc
cmpsl
in
addr16
mov
add
push
ror
ja
cmp
adc
pop
hlt
out
ja
push
xor
and
mov
lcall
icebp
or
xchg
xor
lock
ljmp
out
jl
jecxz
and
imull
xor
mov
jle
and
icebp
sbb
or
or
in
das
das
ljmp
lds
sub
cmpb
sti
ret
mov
push
cli
or
dec
cmpsb
fistpll
popa
das
sbb
inc
push
xlat
xor
pop
sbb
adc
fstpl
out
sbb
sbb
cmp
mov
xchg
out
mov
adc
mov
xlat
out
jg
ficomps
dec
xor
ljmp
repnz
mov
push
push
roll
pop
fwait
sti
scas
fstps
xchg
cmp
pop
push
outsb
aaa
and
out
loope
iret
add
sub
sub
icebp
push
adc
outsl
pop
sub
push
push
pop
out
mov
and
loope
mov
adc
repnz
xor
into
mov
push
push
sbb
xchg
sbb
stos
int
arpl
out
shl
jno
xchg
jg
mov
jmp
sti
and
stos
jae
lods
out
mov
or
stos
fwait
mov
add
imul
out
inc
push
and
fwait
jne
scas
icebp
dec
push
mov
fisubl
add
hlt
jmp
pop
jecxz
pop
test
adc
repnz
lcall
jecxz,pt
sarl
mov
aas
fsubs
pop
outsl
mov
mov
iret
das
popa
aas
add
adcl
fwait
aaa
push
aaa
dec
push
inc
out
lds
dec
mov
repnz
das
icebp
push
xchg
and
sahf
lock
ret
push
push
pop
xchg
pop
push
mov
cmp
repz
addr16
and
dec
pop
iret
imul
lahf
testl
fdiv
and
sbb
mov
mov
sbb
pop
sub
mov
sbb
das
cwtl
lahf
jae
popa
inc
mov
repnz
xor
and
arpl
pop
and
jg
sub
mov
stos
push
mov
adc
pop
idivl
arpl
mov
pop
in
mov
shll
inc
pop
ljmp
daa
pop
lcall
jmp
xor
icebp
popf
testl
pop
mov
mov
and
mov
ret
push
daa
and
mov
mov
and
ja
add
das
or
adc
imul
sub
pop
rcrl
adcl
push
test
mul
fs
out
iret
mov
stos
aaa
pop
jmp
addr16
iret
ficoms
popa
xchg
inc
mov
pop
mov
xor
icebp
cmp
pop
ret
loopne
lock
lret
addr16
shrl
repnz
xor
stos
flds
mov
pop
jo
hlt
in
das
mov
mov
inc
repz
dec
sub
xor
xchg
out
fnsave
out
imul
xlat
mov
sbb
daa
stos
and
lret
pop
sbb
pop
xor
lahf
out
aaa
daa
sub
test
and
mov
cltd
jmp
cmp
pop
test
test
pop
sub
aam
rcll
ret
sub
adc
repz
adc
imul
aas
xchg
and
cmc
jnp
adc
aaa
add
sub
sbb
fnsave
icebp
into
adc
insb
push
and
xor
xlat
mov
iret
int
add
and
test
inc
fwait
push
aaa
stos
int3
iret
mov
cmpsb
ljmp
imul
and
xchg
pop
add
ret
and
xchg
stos
or
adc
sbb
icebp
outsl
adc
push
fisubl
mov
or
adc
shll
sbb
pop
inc
jae
dec
lret
xor
scas
add
stos
and
push
jo
shr
add
push
cmp
loope
cmpsb
pop
jecxz
dec
xchg
cmp
out
lcall
mov
lahf
lret
dec
iret
xchg
xchg
ljmp
xchg
mov
jp
cwtl
test
fdivs
sbb
mov
stos
arpl
pop
test
mov
lahf
test
dec
popa
jg
ljmp
inc
scas
testl
fsubrl
sti
sub
ds
popa
addr16
stos
pop
pop
insb
cmp
loopne
aad
mov
dec
mov
sbb
loopne
test
adc
mov
out
jmp
sti
fstpl
xchg
lret
fildll
gs
sub
rclb
lock
push
lcall
inc
or
pop
popa
fistpll
mov
jno
mov
in
push
rol
xchg
sub
add
pop
scas
aad
push
fsubrs
jge
hlt
jg
mov
in
lods
out
rorl
repnz
xlat
fldcw
add
aad
xlat
mov
mov
fnstcw
scas
mov
adc
pop
or
sbb
aaa
push
adc
cmpl
leave
sub
xor
mov
push
jecxz
pop
jg
dec
cmpsl
sbb
iret
cmc
inc
pop
mov
sbb
and
mov
iret
xor
mov
mov
out
out
bound
push
xchg
fistl
xchg
mov
outsb
sti
push
popa
sbb
ljmp
xchg
and
repnz
pop
pop
dec
jb
stos
sub
in
xor
fwait
pop
cli
addr16
xchg
out
sarl
loop
pop
sbbl
fwait
addr16
fbstp
sbb
inc
int
pop
movsl
and
mov
jg
cmc
inc
pop
push
iret
jg
and
xor
sbb
adc
scas
dec
sub
sub
scas
lock
fbstp
fists
push
divl
ret
or
sbb
push
mov
addr16
mov
inc
loop
clc
clc
mov
ficoml
aaa
mov
jmp
repz
xlat
icebp
rorb
mov
imul
dec
popa
mov
push
dec
adcl
stos
mov
fisubrs
test
mov
lock
ret
sbb
repnz
pop
fwait
or
mov
sbb
mov
adc
test
mov
test
sub
dec
inc
stos
lret
ret
pop
scas
jmp
aas
shr
sub
iret
aaa
stos
and
popa
stos
movsl
out
ds
outsl
jns
sbb
pop
lcall
insb
scas
mov
or
jnp
out
xlat
mov
pop
aas
fldenv
mov
repnz
and
das
mov
outsb
push
cltd
cmpl
mov
fldt
adc
jnp
scas
and
icebp
fwait
es
adc
jg
arpl
jecxz
xchg
cmp
sbb
jg
outsl
mov
mov
arpl
and
stos
arpl
into
cli
and
cmpsb
scas
daa
fcmovnb
pop
int
push
xor
scas
pop
pusha
mov
and
pop
cmp
add
pop
push
push
es
inc
and
ret
gs
in
dec
lret
ret
inc
inc
sti
pop
cld
aas
and
sub
push
and
inc
into
push
add
aad
ja
jge
inc
mov
mov
pop
les
shll
pop
add
mov
inc
int3
or
mov
lret
sbb
cmpsb
outsw
call
sbb
das
inc
ds
arpl
lods
aas
lock
fisubrl
cmpsl
bound
fsubr
ficompl
xchg
shr
daa
dec
pop
es
aas
mov
jl
adc
adc
xchg
jno
jl
jmp
jl
outsl
pop
cmp
cmp
testb
in
lock
dec
pop
push
icebp
pop
sbb
mov
mov
add
sbb
sub
fildl
and
shr
push
mov
mov
sbb
xchg
adc
xor
fcmovnu
arpl
and
pop
fldt
ja
in
mov
ja
adc
dec
out
mov
es
sti
mov
hlt
jecxz
add
mov
cwtl
xor
daa
push
sbb
out
mov
dec
lret
test
loope
sub
cmpsl
and
gs
push
popa
or
popa
jae
insb
daa
pop
in
and
push
add
fstl
mov
jg
iret
movl
add
jns
addr16
mov
stos
xchg
cmp
push
icebp
lea
sbb
pop
sti
repnz
add
into
push
stos
loopne
push
scas
movsb
sub
sub
jae
pop
xor
fwait
mov
pop
imul
cmpsl
shll
xchg
inc
cmp
fs
dec
mov
aaa
mov
and
stos
test
lret
sbb
ja
mov
rorl
lahf
ret
repnz
or
ljmp
repz
fistl
les
mov
arpl
cmc
xchg
pop
jl
mov
mov
test
call
push
subb
cmovb
stos
popa
sbb
pop
xchg
movsb
ds
and
push
aas
sbb
pop
and
imul
pusha
sub
icebp
imul
jmp
sub
sbb
stos
cmc
arpl
std
daa
pop
cmpsl
mov
cwtl
sahf
pop
out
movl
orl
mov
out
repz
push
and
mov
add
sbb
pop
inc
mov
and
sub
jp
out
xchg
repnz
sub
dec
xchg
pop
xor
and
ljmp
xchg
push
ret
movhps
push
sti
sahf
dec
sub
sbb
sti
sti
sti
pop
or
cltd
aam
sti
icebp
nop
scas
dec
clc
and
mov
stos
adc
cmpsb
mov
xor
iret
fwait
loopne
xor
push
sub
xor
cmpsl
icebp
xor
jmp
repnz
add
sub
icebp
ljmp
outsl
push
mov
ljmp
dec
pusha
dec
and
inc
aas
test
mov
stos
lret
sbb
scas
loope
lock
xor
pop
test
fldt
loop
ja
sub
ja
jmp
jmp
or
rolb
std
das
or
loopne
cli
or
push
jmp
je
cmc
lock
xor
jmp
pop
aam
insb
or
or
cmc
jnp
lea
loop
mov
roll
test
mov
ret
jecxz
fs
and
int
add
imul
jo
mov
lea
cmc
xchg
stos
aaa
xchg
repnz
inc
repnz
hlt
movsl
std
jmp
mov
bswap
add
test
addr16
jecxz
add
je
cli
add
push
in
out
adc
pcmpeqb
jl
arpl
jmp
mov
in
imul
adc
xchg
cmpsl
dec
jmp
adc
or
add
cwtl
cmp
push
fmull
add
mov
adc
lods
xchg
dec
aas
ljmp
sbb
lahf
and
push
pop
sti
sti
ljmp
out
test
mov
lcall
mov
sbb
and
out
push
jmp
push
ret
cmp
mov
adc
xor
aaa
repnz
cs
dec
dec
test
fsubr
add
cmp
jmp
repnz
push
leave
mov
popa
jmp
inc
xor
sti
xor
inc
lahf
enter
jno
data16
js
push
push
or
adc
lret
stos
add
push
ljmp
into
daa
repnz
daa
mov
sbbl
sti
daa
into
or
xor
repnz
jae
mov
xchg
sub
rcrl
loop
popa
das
adc
push
lret
lahf
mov
and
push
movsb
and
aaa
test
and
xorl
xor
jnp
popf
sub
enter
sub
test
fisttps
pusha
add
pop
or
das
inc
or
or
movsb
repnz
fists
xchg
and
and
xchg
jne
sti
fs
inc
xchg
imul
lahf
ljmp
cli
push
out
rcrl
push
push
iret
or
inc
sti
push
fidivl
outsl
ss
ss
add
nop
cmpl
leave
ret
and
dec
jnp
cltd
adc
cmpsl
push
enter
into
cmp
pop
stos
sbb
into
xor
ja
les
pop
and
outsl
stos
aaa
aaa
sub
cltd
out
iret
addr16
lods
sbb
sub
push
icebp
jmp
loop
cmpsb
sub
sbb
jae
sub
int3
sbb
cmpsl
shll
add
mov
push
adc
xchg
or
sub
xor
dec
das
mov
popf
push
out
popl
scas
push
ret
fldl
ja
or
sahf
jo
push
mov
jmp
in
stos
dec
js
dec
sbb
fstpl
add
mov
dec
cmp
dec
subb
mov
pop
jo
push
out
ljmp
dec
xor
jp
imul
pop
adc
pop
xchg
ret
and
outsl
adc
mov
jg
das
arpl
outsl
jnp
int3
xchg
adc
cmpsl
inc
xor
gs
sbb
dec
mov
sti
and
add
int3
adc
jae
daa
mov
icebp
inc
and
inc
adc
test
xor
stos
pop
sahf
pusha
xchg
push
mov
adc
xor
adc
and
fs
call
out
jecxz
imul
jmp
ret
dec
jmp
jmp
inc
ret
mov
ret
sbb
dec
mov
adc
cmp
jmp
jno
sbb
insl
sbb
out
sub
shrl
pop
out
fwait
sub
dec
sub
das
xchg
add
xor
push
test
imul
call
pop
ljmp
loopne
rcl
sbb
les
lcall
test
scas
in
aad
lret
ret
lock
subl
xchg
mov
pop
enter
fsubrl
sub
fbld
jnp
push
pop
pop
dec
shrl
aaa
inc
stos
out
cs
xlat
pop
aaa
pusha
stos
mov
mov
por
jnp
jmp
lea
ret
movl
or
push
outsl
aas
pop
push
mov
pop
stc
mov
sub
daa
dec
das
pop
adc
add
mov
loope
cltd
jae
jne
push
dec
pop
stos
imul
rep
lret
arpl
test
and
icebp
sub
daa
jne
repz
cmp
test
lret
sbb
dec
arpl
push
addr16
repnz
pop
or
sbb
push
push
sbb
sbb
mov
or
std
mov
dec
dec
scas
jecxz
mul
mov
les
repnz
aaa
sub
stos
jg
shrl
cwtl
jno
nop
xor
push
jns
sub
xchg
lret
xlat
sahf
add
shl
jo
data16
xor
ret
iret
dec
dec
outsl
popa
cmp
inc
roll
popf
push
dec
add
outsl
test
popa
iret
adc
icebp
stos
jae
xchg
sbb
mov
push
add
xchg
adc
popl
mov
cmp
imul
shrl
cwtl
and
icebp
movsb
dec
push
aaa
mov
sti
addr16
ljmp
jle
into
out
jne
cmp
daa
fisubl
sub
sbb
sbb
ret
pop
in
push
push
scas
adc
lret
mov
lds
ss
fiaddl
cmp
iret
les
fsubrs
shll
xchg
das
fsubs
or
mov
pop
lods
ljmp
mov
sbb
xlat
lret
mov
mov
cmpsl
mov
mov
loop
rol
adcl
stos
mov
push
jg
mov
jnp
mov
xchg
imul
push
cmp
das
shrl
and
mov
push
mov
sub
xor
mov
shl
nop
rclb
lock
imul
iret
inc
ljmp
dec
dec
and
or
stos
aaa
ljmp
test
jmp
push
xchg
mov
cmp
stos
or
sub
pop
pand
ljmp
sub
pop
ljmp
in
jno
sbb
or
scas
adcl
loop
pop
mov
icebp
xchg
mov
mov
inc
aaa
icebp
xchg
mov
and
xchg
lret
popa
xchg
or
loop
inc
jnp
pop
daa
mov
sub
push
data16
pushf
pop
ljmp
cmp
xchg
lahf
loope
popf
dec
mov
xor
roll
xchg
icebp
loop
pop
rcrb
outsb
xchg
mov
push
mov
pop
xchg
sbb
lock
jae
push
jnp
lahf
loop
mov
imul
popl
jb
xchg
rorl
push
sub
add
fistl
daa
icebp
dec
imul
inc
hlt
iret
incl
in
arpl
int
or
xchg
sub
std
dec
cmp
ret
ja
in
fistpl
sbb
into
iret
push
inc
scas
inc
les
pusha
out
outsb
iret
arpl
jecxz
lahf
xchg
outsl
xor
pop
outsl
fwait
pusha
mov
shrl
mov
dec
ja
xchg
xlat
mov
push
aas
push
and
iret
and
xor
inc
jae
and
dec
int
in
sub
stos
add
mov
popf
iret
aas
jnp
iret
mov
js
mov
movsb
loopne
into
arpl
out
iret
xor
shl
and
adc
test
sbb
popa
iret
sbb
fistps
cmpsl
mov
cmpsb
mov
sbb
shll
fwait
je
lret
iret
jae
or
shr
test
and
jns
and
jmp
xchg
out
and
and
ret
pop
jae
fcomps
pop
int
pop
pop
cmp
loope
push
test
loope
enter
mov
iret
outsl
mov
pop
mov
stos
cwtl
jae
aas
and
out
pop
jg
lret
mov
xchg
xlat
mov
xlat
xchg
lods
adc
jmp
pusha
inc
rclb
push
jle
mov
jmp
and
sarl
cwtl
adc
scas
jo
jbe
adc
sti
les
int3
out
mov
pushf
and
push
push
push
loope
pop
mul
mov
adc
in
dec
fistps
popa
mov
push
outsl
into
int3
fwait
sbb
pop
mov
xchg
call
outsl
xchg
sti
cmpsl
adc
cmpl
pop
lcall
push
sub
je
fwait
or
jecxz
test
cmpsl
test
jg
jg
pop
xchg
inc
scas
dec
repz
out
mov
scas
adcl
push
fstps
and
negl
fildll
shr
stos
out
sbb
mov
xchg
sbb
into
lds
cmp
add
pop
ljmp
sahf
jae
loopne
cmp
mov
pop
loopne
notl
aam
int3
movsb
dec
stc
negb
pop
push
jge
into
out
es
cltd
sub
aad
out
xor
pop
ljmp
ja
hlt
sbb
and
inc
aaa
cmpsl
icebp
push
pusha
test
aaa
outsl
mov
int
pusha
push
test
sub
stc
cmpsl
inc
ja
push
std
cmpsl
ja
loop
repz
adc
push
xchg
out
adc
shlb
mov
stos
mov
out
sbb
pop
mov
loop
adc
mov
outsl
vrcpps
test
jl
pop
lock
push
out
jmp
mov
outsb
pop
sbb
mov
fbstp
scas
push
inc
sbb
adc
adc
test
gs
movsb
lods
add
in
int3
jae
ficomps
push
jnp
scas
into
sbb
in
aas
jns
nop
jb
and
mov
xor
ja
test
push
fisubrl
push
shll
cltd
out
mov
jg
movsl
jbe
jnp
iret
pop
in
movsl
lahf
mov
arpl
xor
dec
sub
dec
jecxz
push
pop
and
scas
or
adcl
sbb
out
xchg
jp
inc
loope
rorb
into
aaa
cmpsb
adc
jb
add
mov
sbb
lock
sub
arpl
rcl
xchg
icebp
sahf
cmpsl
aaa
jl
pop
inc
mov
ret
and
cmp
sub
xchg
das
popa
test
xor
cmpsl
fstl
lods
xor
iret
ret
call
pop
in
sub
rcl
dec
cmp
inc
xchg
mov
sub
mov
lods
lods
arpl
ficoms
cmp
mul
xchg
das
outsl
inc
stos
xchg
lea
dec
popa
cmpsl
leave
mov
iret
jo
test
xchg
mov
lret
shll
mov
sbb
int3
jb
test
leave
sbb
movsb
xchg
inc
iret
lea
jae
mov
bound
cltd
aaa
imul
jge
scas
xchg
cmpsl
sub
ljmp
dec
lret
pushf
inc
push
mov
mov
repz
or
xor
sbb
inc
and
iret
fcmovnbe
dec
arpl
jbe
nop
arpl
nop
leave
ljmp
mov
jae
sub
fists
sahf
out
pop
sarl
cltd
ja
xchg
outsl
lods
cmpsl
jb
lahf
cs
mov
repnz
aaa
outsl
mov
pop
adc
divl
dec
outsl
mov
add
jne
push
jbe
jg
shll
mov
sarb
mov
fnsave
hlt
lret
leave
cmp
dec
roll
in
jae
aas
lock
loope
inc
xor
push
out
fldenv
mov
add
aam
pushf
icebp
in
cmp
in
mov
sub
loope
sarb
pop
lock
mov
fbstp
daa
in
lock
out
movsl
in
or
jno
mov
sub
or
loope,pn
lock
dec
repnz
rdmsr
lret
add
dec
lods
out
sarb
jecxz
repnz
lret
inc
jecxz
lahf
icebp
das
arpl
dec
jmp
aad
test
or
loope
inc
das
iret
cmpsl
sub
inc
mov
repnz
out
lock
push
ljmp
loop
sbb
adc
dec
test
repnz
sub
xchg
xor
repnz
xor
jnp
lea
cmpsl
insl
in
movsb
repnz
int3
fbstp
pop
in
fstps
xor
out
mov
lret
iret
sub
push
ret
fsubrs
add
mov
insb
mov
or
dec
ljmp
jecxz
mov
stos
test
in
mov
sub
pushl
pop
movsb
and
sub
ret
lods
mov
stc
add
loope
mov
push
bnd
int3
in
cs
adcb
jbe
inc
jbe
pushf
lock
jns
sub
and
and
cs
leave
jmp
add
adc
test
lock
jle
jae
ret
dec
outsl
daa
mov
icebp
ljmp
call
in
and
adc
in
test
repnz
mov
push
test
inc
jecxz
mov
pop
out
mov
shlb
cltd
loope
jmp
shlb
repnz
hlt
push
mov
adc
jmp
lock
push
out
push
out
fwait
ljmp
pop
lock
imul
push
pop
fwait
sub
cmc
nop
inc
dec
pusha
out
ret
mov
ret
repz
jb
in
repz
inc
mov
iret
fdivp
mov
xorl
popa
mov
nop
cmpb
repz
pusha
lahf
scas
xor
repz
mov
inc
rep
xor
jle
add
outsb
aas
pop
das
pop
psllq
dec
ds
push
popf
repz
pop
dec
cmp
std
mov
insb
repz
dec
cmp
sbb
cld
loop
jns
in
insl
sahf
mov
loope
out
jno
repnz
out
shll
jmp
repnz
xchg
adc
fidivs
mov
jb
int
mov
push
fsubrl
mov
jo
jno
int3
mov
adc
imul
subps
stos
xchg
adc
mov
cli
fcomip
test
inc
sbb
push
mov
adc
int
mov
push
test
repz
cmp
fidivl
pop
mov
push
jae
jge
pop
adc
sbb
sbb
push
pop
mov
rcl
inc
adc
xchg
andb
adc
fisubrl
mov
aam
clc
shlb
and
xchg
repz
sbb
push
repz
dec
dec
mov
test
mov
mov
dec
repz
dec
fistpl
out
push
xchg
int3
lock
adc
ret
mov
adc
jle
lds
icebp
shll
adc
subl
xor
sub
xchg
test
mov
mov
xlat
lahf
and
adcb
sbb
test
cmc
ja
xchg
std
xchg
stc
ss
or
sub
sub
push
sbb
sbb
sahf
js
mov
loopne
mov
jns
add
mov
mov
mov
stos
xchg
pop
xchg
inc
repz
cmpsb
or
repz
ficoms
pop
push
pop
xchg
repz
imul
jle
in
jbe
es
mov
mov
fdivp
sub
mov
mov
push
repz
sbb
in
rep
imul
clc
fldt
jnp
mov
int
cmc
fs
lcall
pop
mov
cwtl
xor
jge
jle
gs
add
sub
pop
sbb
shlb
repz
mov
stos
repz
inc
in
mov
lods
or
aas
movsb
add
repz
std
push
mov
test
cmpsl
aaa
ret
arpl
pop
repz
scas
xor
and
fbld
fisubl
nop
jl
stc
pushf
mov
dec
repz
cmp
repz
jns
fistps
cli
add
cmp
je
mov
jno
and
in
jae
push
add
repz
fs
movsl
jno
iret
pop
das
arpl
mov
lock
into
dec
mov
in
xor
mov
out
pop
pusha
xor
into
mov
repz
jns
movsl
mov
jb
cld
mov
in
sbb
jl
sub
cmp
popf
inc
js
rep
outsl
aaa
test
mov
stc
in
mov
rorl
jns
repz
enter
das
movsb
ss
test
je
cltd
lock
push
mov
xor
xchg
cltd
fistl
inc
or
int
and
jge
andl
pushf
cmp
inc
jb
sbb
in
jmp
and
popa
adc
sbb
lcall
xchg
cmp
repz
aaa
sbb
and
or
sub
xor
cmp
addr16
push
adc
movsl
outsb
in
mov
push
or
lcall
mov
or
fwait
and
mov
aam
dec
xor
jl
into
push
add
or
mov
inc
cmp
test
push
push
repz
push
lods
push
dec
sub
jnp
push
andl
and
inc
notb
aam
or
outsb
pop
xlat
fs
jae
inc
out
push
repnz
ficomps
ret
lods
inc
and
je
jg
mov
repnz
pop
inc
jae
vmovaps
cmp
push
jns
mov
mov
dec
sub
int
cs
push
jbe
insb
add
push
in
push
aad
push
fs
mov
xchg
out
std
or
cwtl
inc
repz
jno
nop
imul
ljmp
pop
pop
daa
jbe
repz
scas
mov
addr16
les
sbb
and
mov
pop
imul
orb
testl
adc
ds
pop
pop
xor
jo
lea
inc
in
cmp
mov
pop
or
in
addr16
lcall
fstpl
pop
sbb
dec
adc
ds
arpl
in
js
or
pop
cmc
xchg
mov
aad
and
mov
and
sub
push
das
in
popf
xor
mov
repz
jno
jnp
add
insb
push
xor
push
pop
int3
loop
aad
aam
xor
add
enter
lea
in
ds
dec
inc
cmp
cmc
sbb
lret
push
gs
push
ret
je
cmp
inc
adc
jo
jbe
xor
jle
popf
add
sbb
mov
das
jae,pn
mov
dec
push
inc
aad
sub
cltd
inc
sbb
lret
xchg
or
jne
sbb
xchg
mov
mov
decl
jl
repz
ret
mov
dec
daa
xchg
roll
adcl
insb
aad
mov
out
cli
repz
or
test
xor
int3
or
into
aas
mov
repz
lds
or
sub
mov
and
jbe
mov
inc
jne
xchg
xchg
add
lcall
ss
cmp
push
or
jne
call
out
jl
xchg
test
mov
ss
test
inc
movsb
or
mov
sbb
cmpsl
inc
ljmp
jbe
decb
dec
out
jmp
aad
pop
push
mov
adc
fsubrs
bound
xor
mov
inc
js
mov
repz
movsb
sbb
lock
out
jbe
sbb
jmp
bound
push
mov
inc
nop
xchg
pushf
cmpsl
cmp
xchg
iret
adc
mov
hlt
and
xchg
mov
repz
cmp
or
mov
or
addr16
bound
ret
push
fcompl
rep
and
sbb
push
repz
pop
sub
test
repz
mov
stos
shr
daa
xor
stc
dec
and
in
nop
push
aas
pop
sub
xchg
pop
jae
push
push
lock
addr16
dec
in
add
repz
aad
sub
adc
mov
or
sbb
fmull
pusha
repz
xor
lcall
repz
xor
repnz
movsl
enter
int3
jae
out
xorb
or
sbb
mov
sub
jns
jp
repz
inc
push
and
in
aam
cmc
std
mov
mov
add
jbe
or
lds
imul
push
pushf
call
pop
repz
rep
cmc
sbb
push
pop
dec
pop
in
roll
mull
mov
aam
mov
jg
jae
sbb
mov
imul
dec
repz
mov
add
xchg
orl
lods
push
or
je
rorl
in
notb
sbb
xchg
adc
popa
movsb
xor
mov
inc
add
cmc
decb
aad
aad
repz
mov
adc
inc
xor
stc
jnp
icebp
push
loopne
scas
xor
xchg
aaa
add
adc
pop
fisttpl
insb
cli
les
movsl
dec
repz
cld
int3
clc
and
mov
je
sub
mov
pop
popf
xchg
xor
loope
lods
xchg
repz
stc
outsb
push
push
std
in
push
pop
xlat
adc
xchg
dec
out
fsubl
adc
xor
stos
out
repz
cmp
and
inc
mov
bound
in
mov
xor
ss
add
ljmp
adc
mov
push
mov
mov
inc
push
add
hlt
sbb
push
in
pop
mov
rol
repnz
lds
test
xlat
lock
mov
enter
mov
xor
insl
aas
ficomps
jecxz
fidivl
lock
ljmp
jmp
inc
arpl
jg
cwtl
xchg
xchg
les
out
pop
mov
mov
sub
in
bound
arpl
bts
jmp
lock
je
xlat
xadd
jmp
ja
or
icebp
mov
rcl
popa
aad
mov
movsl
lock
inc
or
aas
xor
lock
ljmp
push
sahf
pop
cld
push
fildll
sarb
push
lock
stos
repnz
test
clc
cmp
test
popl
nop
pop
roll
lret
inc
scas
lahf
and
fwait
lods
cmpsl
fisttps
mov
pop
xchg
insb
mov
jbe
in
cmp
pop
mov
popf
sbb
jp
popf
xlat
loopne
loope
in
scas
out
scas
xchg
in
add
loopne
in
push
orl
out
mov
out
mov
mov
mov
orl
jmp
stos
loope
mov
mov
add
jle
negl
jbe
mov
cmpsb
loop
mov
jne
or
test
subb
sub
jmp
jp
and
lret
jns
add
mov
push
in
stos
lcall
lret
ret
and
iret
jge
mov
les
mov
les
xchg
mov
xchg
shl
jmp
insb
lods
movsl
push
test
jmp
icebp
rolb
add
stos
push
fisttpll
out
sbb
mov
popa
adc
pop
lret
mov
add
gs
ffreep
jne
insl
mov
loope
dec
or
popf
ss
jnp
lods
jae
cli
scas
fildl
xor
rcl
pop
mov
in
mov
jbe
aad
mov
ljmp
stos
sar
es
mov
leave
movl
stos
xchg
hlt
in
adc
out
mov
cmpl
lds
dec
xchg
call
movsb
ret
xlat
fnsave
in
out
jg
mov
int3
add
insb
mov
loope
xlat
mov
mov
mov
stos
jns
pop
mov
nop
mov
int3
mov
jmp
xlat
xchg
pop
jecxz
aas
mov
xchg
xchg
aaa
or
les
shlb
cmpsb
mov
aas
mov
inc
adc
mov
jb
adcl
fdivrs
lea
movsb
sbb
lods
cmpl
jl
lds
sub
icebp
dec
ret
rcll
mov
sarb
jnp
xchg
lret
mov
in
pop
ret
fadds
mov
fmull
jecxz
xchg
insb
mov
jnp
inc
aam
in
rol
mov
xchg
adc
in
xor
push
push
adc
xchg
mov
rclb
arpl
in
arpl
lods
jl
shll
mov
les
mov
outsb
out
mov
jp
xlat
ret
mov
fwait
scas
rol
push
cmp
rcll
lcall
xchg
dec
call
rorl
das
orl
aad
mov
mov
fs
aam
inc
lods
mov
cmpl
bound
pop
insl
shrb
stos
in
mov
insl
addr16
aam
lods
lret
mov
jle
mov
fistl
arpl
fbld
mov
mov
fmull
mov
cmp
jns
mov
pop
test
jge
into
ljmp
out
lahf
int3
xchg
mov
push
cli
jmp
leave
sbb
mov
test
mov
popf
icebp
push
mov
leave
cltd
mov
shll
lods
cmp
adc
xchg
jno
popf
outsl
or
or
gs
fwait
sti
test
nop
jle
fs
lret
xchg
es
pop
ret
mov
cmc
sarb
jb
imul
add
cmpsb
flds
sti
mov
xor
sbb
inc
lahf
insb
imul
iret
mov
arpl
les
push
insb
inc
sub
stos
nop
mov
mov
lods
mov
stc
sub
andb
mov
outsl
inc
inc
mov
icebp
repnz
out
out
dec
out
jl
push
repnz
in
das
mov
jmp
imul
or
jmp
adc
mov
ljmp
mov
in
lock
lahf
xlat
mov
adc
arpl
test
push
das
sbb
out
mov
in
test
inc
enter
mov
outsl
push
aad
call
loop
inc
out
jg
in
mov
ffreep
bound
test
push
xchg
repz
fstl
jno
into
mov
mov
nop
xorb
scas
int3
pusha
repz
inc
mov
xor
and
jmp
jo
repz
outsl
pop
scas
lods
dec
aas
repz
and
add
mov
outsb
pop
and
mov
jnp
pop
dec
cmp
repz
sti
lret
lcall
cmp
sbb
repz
leave
mov
imul
sbb
stc
lds
loope
movsl
movsl
movsb
in
mov
ss
pop
pop
push
mov
mov
inc
push
jmp
inc
repz
repz
iret
mov
repz
xor
sub
mov
inc
pusha
jmp
dec
int
scas
lret
fxch
aaa
fistps
xor
lret
inc
ss
aad
into
lods
sbb
sub
sbb
scas
sbb
cli
repz
sahf
sbb
dec
inc
pushf
xchg
inc
cs
cltd
in
xchg
hlt
and
lcall
inc
repz
dec
subb
in
pop
jne
jae
outsl
sbb
pop
repnz
in
sbb
stc
repz
dec
mov
outsl
sarb
out
sub
repz
fimuls
or
call
loope
inc
repz
xor
and
test
xor
jb
mov
add
adc
or
lret
mov
icebp
into
roll
repz
push
mov
repz
adc
add
mov
and
cmp
inc
dec
xchg
repz
insb
arpl
subl
int
jmp
mov
pop
dec
into
mov
sbb
repz
ret
rcl
in
pop
jns
mov
xor
nop
xor
fwait
xorl
std
cwtl
in
shlb
into
xchg
add
faddl
inc
cmc
subl
jle
sub
ja
jp
cwtl
xchg
xor
sbb
jno
mov
loopne
lret
repz
movsb
push
jae
ja
lock
sbb
and
outsl
ljmp
stos
pop
in
lds
repz
jbe
fs
shrb
adc
out
sbb
mov
scas
jae
es
jp
test
fsubrl
cmp
sub
rep
lds
adc
inc
repz
loope
cmpsl
sbb
dec
test
aam
ljmp
sub
rep
lcall
repz
cld
cmp
aam
test
mov
mov
mov
sti
xchg
test
mov
aad
inc
push
cmp
xor
inc
dec
fsubrl
repz
pop
ljmp
jmp
addr16
repz
in
clc
mov
mov
andb
in
pop
testw
and
repz
pop
sbbb
sbb
cld
bnd
sub
adc
out
dec
repz
adc
or
pop
mov
xor
xchg
pop
ja
dec
inc
sbb
sub
mov
loope
sub
inc
rorb
das
lret
xchg
repnz
cld
int
rep
add
clc
cmp
in
movsl
push
sbb
mov
cli
adc
insb
fbstp
mov
adc
stos
test
lods
lock
sub
bound
daa
test
int3
mov
inc
xchg
sbb
mov
push
xrelease
dec
xchg
sbb
outsb
int
mov
addr16
mov
or
dec
dec
xor
ljmp
adc
repz
ss
sub
xchg
push
stos
push
or
out
subb
add
mov
add
mov
adc
jne
add
cmpsl
in
mov
repz
test
push
aaa
div
push
fs
xor
xlat
lds
popf
cmp
fwait
arpl
dec
adc
lods
ret
and
xor
xor
sbb
pop
mov
rol
pop
pop
and
cmp
sbb
mov
das
mov
dec
pop
push
mov
lods
mov
jmp
movsl
sub
mov
cmp
sub
pop
jecxz
push
repz
jp
sub
cwtl
xchg
sbb
jge
cmp
and
fidivs
mov
out
nop
repnz
test
mov
test
pusha
mov
imul
pop
cli
add
pop
pop
xchg
std
push
repz
mov
int
sti
xlat
mov
adc
jbe
mov
xor
xor
stc
or
push
aaa
pop
jns
pop
repz
lret
jne
nop
inc
repz
lods
js
dec
sbb
inc
aad
pop
jne
or
repz
sub
repz
pop
push
push
repz
in
je
cli
adc
pop
xchg
js
or
pop
repnz
push
mov
jb
ljmp
push
repnz
sub
xchg
xchg
and
cmc
nop
cli
in
mov
unpcklps
idivb
ret
cltd
push
into
mov
arpl
xor
stos
mov
cmp
or
fldt
fidivl
pop
cmp
push
repz
aas
aad
mov
shrb
movsl
mov
adc
cmp
pop
clc
repz
sbb
mov
cmc
cwtl
rorl
push
cmpsb
lods
push
leave
jbe
je
sbb
loop
mov
mov
stos
repz
jnp
jno
jns
or
mov
and
sar
push
repz
movl
and
insl
xchg
adc
push
rclb
mov
movsb
out
mov
sbb
out
xor
dec
sub
addr16
jnp
repz
sub
ret
arpl
pop
cmpsb
loop
ja
orb
aam
in
or
popf
pusha
pop
je
jg
test
dec
xor
dec
repz
lods
mov
aaa
push
xchg
in
jnp
lahf
roll
lret
xchg
repz
pop
lea
sti
subl
sub
repz
sbb
push
lds
fcomi
mov
push
dec
push
pop
subl
repz
aam
or
dec
xchg
add
adc
jne
repz
ret
das
aad
and
shl
faddp
sub
mov
jo
add
rclb
repz
addr16
sbb
xorl
rclb
icebp
int3
ljmp
push
xor
pop
jge
mov
add
pop
mov
inc
dec
cli
insl
xchg
shll
aad
sub
repz
call
push
adc
inc
mov
test
daa
leave
jl
mov
pop
mov
add
ror
inc
sarl
or
jo
and
lods
mov
sub
dec
loope
mov
mov
insb
pop
inc
sarl
int3
sub
push
mov
and
adc
xchg
jo
repz
cmpsb
shl
jnp
gs
shrl
popf
fsubrp
jl
jns
repz
loopne
scas
aad
or
mov
and
ret
mov
cmpsb
andl
mov
out
das
jb
movsb
in
inc
in
jbe
repnz
add
or
and
test
add
sbb
push
inc
cmp
cmpsb
dec
iret
rol
xchg
mov
cmp
jmp
push
loope
mov
inc
mov
jne
int
lods
out
mov
fsubl
mov
adc
es
jbe
inc
mov
repz
int
xchg
repz
imul
mov
xchg
push
jl
lods
orb
and
jg
test
add
jle
imul
or
dec
inc
in
leave
stos
shlb
cmp
lahf
push
mov
inc
mov
imul
xchg
nop
je
sbb
xor
or
pop
andl
lock
mull
rorl
xchg
loopne
jo
repz
sbb
cmp
ljmp
repnz
dec
mov
pop
sti
aad
je
repz
cmp
std
xlat
push
out
repz
les
push
nop
pop
lcall
mov
xor
aas
lock
lret
sub
mov
jmp
mov
and
rcr
pushf
xchg
add
cmc
mov
pop
lds
call
jno
add
cmpsl
jae
lcall
sbb
mov
jle
mov
inc
rep
loop
in
dec
mov
lods
xchg
orb
in
pop
add
cmpsl
mov
dec
pusha
xor
inc
iret
in
sti
mov
das
mov
ret
inc
ja
push
repz
add
jmp
mov
notl
inc
cmp
push
enter
mov
inc
ret
add
int3
cmp
cwtl
les
repnz
adc
ljmp
cli
negb
adc
sbbb
cmp
cmpsl
fwait
idivl
adc
insb
iret
push
lret
add
shll
outsb
cld
xchg
mull
movq
out
lods
dec
fisttps
repz
repz
movsb
fsubrl
fmuls
mov
mov
mov
inc
repz
rol
shll
fidivl
add
adc
insb
ja
ljmp
sbb
and
or
out
push
lock
or
sti
std
js
cmp
fpatan
mov
or
out
xorl
movl
stos
add
jl
sub
push
std
repz
mov
mov
add
repz
dec
scas
jae
repz
jns
je
imull
inc
dec
mov
xor
insl
imul
pop
mov
scas
pop
cmp
shl
cwtl
lcall
xor
dec
and
addr16
pop
imull
jae
jno
addb
sets
push
xor
int3
repz
mov
rorl
stos
xor
lea
mov
int3
push
jne
and
ja
push
cltd
xchg
inc
outsl
testl
push
mov
adc
repz
dec
bound
repz
ret
or
nop
pop
repz
mov
mov
jle,pt
cmpsb
scas
adc
mov
jb
adcb
cli
popa
xlat
mov
mov
jle
hlt
xchg
and
dec
pop
xchg
sbb
xor
sbb
repz
popa
adc
mov
xor
int3
jmp
pop
xlat
sbb
or
shll
repnz
mov
repz
test
ja
pop
repz
sub
adc
jp
repz
fnsave
shrb
repz
ficomps
repz
mov
mov
repz
cmp
jae
add
and
and
xchg
mov
mov
inc
repz
pop
xor
or
repz
pusha
mov
jg
aad
out
scas
loopne
stos
les
movsb
or
xchg
pop
lods
popa
or
jmp
testl
dec
sarl
in
push
iret
xchg
mov
xchg
bnd
mov
mov
test
mov
repz
lods
cld
add
into
sub
pop
xchg
sub
cmp
enter
xor
in
push
repnz
sub
and
add
in
and
aaa
inc
int3
pop
jg
pushf
lret
lods
inc
add
xchg
fldl
xchg
add
push
mov
adc
mov
push
movsl
mov
scas
push
stos
repz
and
repnz
mov
mov
mov
push
iret
push
popa
ret
aam
mov
lock
add
cmp
insl
add
les
addr16
repz
or
mov
lock
pop
popf
or
pop
lods
push
xlat
loop
fistl
cmp
lret
test
pop
mov
cmp
cld
pop
sar
jbe
movd
pop
test
stos
adc
out
mov
mov
je
xor
arpl
fadds
push
mov
and
adc
pushf
cmp
repz
mov
dec
sbb
fildl
cld
sub
jmp
test
adc
filds
xchg
shrb
push
repz
inc
push
testl
mov
mov
in
movl
jo
movsl
or
lea
aad
xchg
xor
int
out
ret
testl
or
mov
push
int
jp
popf
testb
daa
push
fmuls
lock
ds
mov
dec
scas
push
xchg
out
sbb
jmp
cli
inc
sti
cmp
jp
mov
sarb
sbb
cwtl
pop
jg
or
mov
ss
push
mov
add
rorb
in
pusha
xor
jnp
cmpsl
push
xor
in
pop
mov
mov
out
jp
and
mov
add
adc
jno
cmpsb
in
leave
sub
cmp
repz
pop
jecxz
ljmp
inc
addl
in
repz
iret
push
sub
fcomi
pop
mov
sti
fimuls
pop
rep
fwait
inc
lar
pop
out
nop
outsl
xchg
loopne
pushl
lock
js
add
cli
push
jns
lock
mov
xor
fstl
xchg
call
aam
mov
cwtl
repz
cmp
out
push
and
repz
repz
and
lret
loopne
pusha
jb
and
dec
pop
std
je
or
movsb
mov
push
subl
jecxz
out
repz
shll
push
cmp
or
lock
dec
sar
arpl
jp
imul
cld
xchg
cli
push
lock
fadd
sbb
hlt
ret
or
enter
outsb
sahf
addr16
movsl
sub
sbb
orb
loope
gs
xchg
add
or
cmp
lods
sbb
mov
adc
repz
loop
imul
cmp
data16
or
mov
call
in
shll
repz
movsb
ficomps
sbb
stos
inc
cmp
inc
lret
and
stos
add
jmp
and
mov
loope
lock
mov
and
shl
cmp
lods
imul
into
sub
ja
frstor
jne
jp
in
movsl
fnstsw
cmp
dec
dec
or
sahf
mov
inc
inc
lahf
repz
dec
outsb
mov
rep
dec
ds
or
test
repz
gs
push
xchg
rol
arpl
xor
repz
xchg
sti
callw
push
xlat
add
cli
addb
sbb
in
cmp
cwtl
xchg
jo
xor
cmp
mov
rolb
incb
stc
daa
js
in
bound
inc
cmp
mov
std
ret
ret
pop
in
cmpsl
rcr
mov
stos
je
repz
fs
repnz
iret
scas
fstpt
out
in
adcl
and
sbb
hlt
and
incl
outsl
scas
out
cmp
adc
iret
push
repnz
test
mov
daa
in
in
sub
ret
jo
popf
std
mov
icebp
push
lds
fs
mov
stos
mov
aas
lock
into
iret
jne
xor
repnz
and
sti
mov
in
adc
test
std
pop
rol
das
movsl
repz
pop
scas
mov
xor
dec
or
fcoml
fstps
push
cmpl
add
cmp
loope
sub
out
xor
outsb
mov
into
roll
mov
xchg
in
lds
das
pusha
cld
out
aad
mov
and
xchg
fs
shlb
rol
rorl
stc
ljmp
punpckhbw
jg
dec
mov
data16
adc
or
sub
adc
jbe
jae
add
pop
repz
outsb
jb
das
repnz
mov
push
push
je
loope
sub
cli
sub
dec
icebp
cmp
cs
mov
stc
imul
lcall
aam
or
inc
adc
cld
sub
mov
adc
pusha
loopne
in
pop
mov
sbb
mov
repz
xor
stos
or
adc
ret
repz
cs
xchg
movsl
pop
add
cmp
xlat
decb
sub
repz
push
lahf
ret
adc
icebp
jge
sti
mov
sbb
xchg
push
add
mov
je
fisttpll
xchg
cltd
or
lahf
cmp
mov
mov
cmc
cmpsl
aad
aam
daa
stos
repz
lods
dec
bound
das
js
jmp
add
add
mov
sub
sub
cld
push
scas
pusha
cltd
mov
mov
push
xor
sub
push
movsb
jp
sar
mov
sbb
int
pop
sub
mov
mov
in
lods
cmp
ret
aam
mov
xor
mov
clc
repz
fldenv
adc
sub
sbb
in
pop
mul
jbe
mov
loopne
les
fbstp
cmpsl
daa
lahf
pop
repz
dec
aam
xorb
push
mov
popf
mov
pop
insl
dec
add
movsl
in
mov
shl
pop
insb
test
adc
iret
bound
mov
xchg
je
lcall
or
pop
pop
lret
in
pop
imull
aas
fldenv
icebp
and
mov
andl
mov
ss
xchg
jmp
jo
jl
in
cmc
ja
xor
xor
add
repz
mov
daa
xor
or
ss
aam
mov
test
flds
xor
in
cld
xorl
xchg
int
push
out
push
dec
cmpb
cli
push
popl
and
ss
bound
sub
repz
cmpsb
stos
int3
mov
sub
repnz
cmp
rep
insb
cmc
out
push
mov
out
ljmp
shrl
roll
jp
mov
movsb
pop
mov
jp
repz
cs
pop
insl
push
mov
pop
push
cmp
rcrl
repz
push
xchg
jp
fisttpll
add
sub
daa
adc
xchg
xor
cmp
test
incl
pop
mov
fcmovu
loope
iret
rorl
jl
icebp
mov
or
hlt
pop
clc
sub
add
mov
cwtl
insb
cmp
cmp
jno
test
lods
repz
andl
xlat
in
repnz
mov
pop
lcall
out
enter
sub
out
cmpsb
movsb
mov
outsl
icebp
js
mov
movsl
cli
test
in
int
cmp
jne
push
aad
inc
sub
rep
in
ret
mov
repz
add
mov
test
cmpsl
rorb
jl
push
pop
jb
iret
std
cld
mov
or
repz
icebp
faddl
fs
repz
dec
xor
lcall
inc
mov
scas
xchg
mov
mov
cmp
pop
imul
jp
jns
or
mull
mov
pop
hlt
test
cmp
jae
push
lock
jmp
fists
hlt
iret
out
std
lods
out
cmp
mov
mov
in
in
rcr
testl
cmpsl
movsl
mov
jecxz
ret
repnz
in
lahf
push
data16
jae
lock
iret
in
loopne
aas
icebp
jecxz
ljmp
in
arpl
cltd
inc
les
mov
lods
jecxz
sti
scas
add
shll
and
outsl
or
aam
jg
cmp
outsb
jecxz
repnz
push
fnstenv
sti
jno
fiaddl
out
sti
adc
xlat
das
push
mov
cmc
in
out
push
cmc
je
push
repnz
mov
and
out
fs
in
test
ljmp
cmp
lcall
sbb
mov
imul
outsb
clc
push
push
popa
cmc
in
mov
fsubr
scas
in
loope
out
jle
hlt
inc
stos
ljmp
call
int3
cli
loope
outsb
aam
jmp
sub
into
loope
cmc
addr16
rol
imul
dec
aad
out
rclb
lds
in
cld
cmpsl
sbb
adc
cmp
add
stc
sub
inc
insl
bnd
loope
sub
fwait
cmp
ret
xchg
daa
adc
std
xchg
test
notl
mov
shl
sarb
pop
outsl
out
shr
lods
jecxz
mov
sub
cltd
cmp
stc
mov
pusha
lock
outsl
ja
mov
jg
mov
xlat
icebp
lock
lcall
ljmp
mov
out
fidivrl
int
inc
pop
repnz
mov
das
or
sbb
pop
cwtl
lock
aam
or
mov
iret
stos
pop
dec
lods
jg
subb
or
and
dec
movsl
and
fisubrl
mov
jl
loopne
and
jl
mov
or
push
lcall
sub
bound
jl
or
outsb
das
stc
push
and
mov
iret
cmp
daa
adc
lret
sahf
mov
loope
jg
ret
adc
icebp
cmp
in
push
jge
add
rcl
mov
das
cmp
jne
mov
lcall
clc
mov
mov
test
gs
mov
add
pop
aas
arpl
arpl
and
pushf
shlb
xchg
iret
sbb
dec
sahf
xchg
jecxz
mov
stos
ficomps
cltd
jp
ja
fistl
popf
push
aad
mov
adc
das
imul
cmp
sub
es
cs
repz
mov
nop
in
leave
loope
repnz
into
push
insl
lock
dec
or
sub
add
bound
cli
out
test
in
in
xor
adc
mov
pop
ficoms
lods
mov
pop
scas
rcl
in
out
shl
lods
loope
out
mov
inc
loop
jmp
mov
in
ja
leave
lds
out
cmc
sarl
subb
adc
filds
cmpsl
mov
imul
loope
loop
mov
sub
imul
rcr
mov
ljmp
jg
ficoml
loope
sbb
ret
outsb
sbbl
iret
loope
in
jg
sti
mov
out
push
mov
call
inc
fisubrs
jo
icebp
xchg
leave
lock
jae
mov
lods
cmpsl
jmp
dec
lahf
movsl
loopne
sub
fs
mov
fimuls
ficomps
mov
jecxz
mov
dec
mov
sti
jle
cli
push
jno
imul
das
jecxz
and
xchg
mull
fcos
cs
mov
sbb
jmp
add
push
shl
out
lock
jmp
out
sbb
push
and
cwtl
stos
sub
jp
es
xchg
nop
leave
loopne
xchg
and
push
xchg
jmp
enter
aaa
inc
icebp
scas
inc
or
xlat
mov
pop
call
imul
sarb
push
mov
gs
jmp
xchg
inc
icebp
cmp
repnz
or
fcom
sub
shll
xchg
out
or
cmc
lock
movsl
int
cmpsb
inc
mov
cmp
sub
fldt
shrb
fidivl
fimull
fstpt
rolb
push
stos
inc
add
xchg
mov
bound
loope
fwait
ljmp
or
rorl
dec
aam
or
mov
mov
loop
xchg
ret
mov
sbb
scas
pop
mov
lret
xchg
popf
mov
mov
stos
shr
mov
test
insb
jmp
adcl
xchg
jecxz
shlb
fucomi
icebp
shr
jmp
call
or
imul
jnp
mov
iret
jle
lret
int
enter
push
flds
ss
enter
shrl
mov
xor
mov
loop
pop
cmp
int3
div
xchg
xlat
hlt
mov
jmp
decb
mov
outsb
and
sarb
dec
insl
in
cmp
xchg
insb
cltd
shrl
sbb
int
sbb
test
sub
jmp
outsl
jb
andl
stos
push
cmpsl
cmpsl
daa
mov
xlat
push
cli
call
push
lods
fwait
add
adc
mov
imul
jge
outsb
add
int
iret
jb
sub
scas
dec
jno
mov
pop
int
mov
mov
mov
sarl
je
xchg
or
fildll
out
add
outsl
pop
pop
xchg
lods
and
xchg
inc
inc
in
out
fnstsw
jb
fistps
jmp
jo,pn
ficoml
test
or
clc
mov
lahf
fimuls
icebp
out
fwait
lcall
cs
xlat
test
subb
hlt
push
mov
cmp
jecxz,pt
jmp
testb
lds
popf
mov
sbb
fldcw
fimuls
pusha
jg
lds
sub
roll
scas
fwait
lahf
push
loope
iret
push
sub
mov
ret
lret
adc
mov
jg
pop
inc
aad
fsubr
mov
sbb
sbbl
sub
or
jno
adc
shr
insl
cmp
fldenv
add
int3
ja
out
mov
pop
pusha
btc
mov
ffreep
icebp
lcall
in
pop
dec
lret
xor
xchg
fsubs
and
mov
adc
pushf
divb
scas
leave
loope
std
lea
lea
pop
inc
lea
or
out
or
cmpsl
nop
xor
pop
mov
iret
push
cwtl
out
mov
int3
pushl
imul
jb
jmp
jb
add
xchg
dec
ret
ret
pop
adc
into
mov
push
add
push
fidivrs
out
call
test
loop
out
or
dec
mov
push
jmp
bound
icebp
sub
data16
xchg
mov
loope
mov
push
fldenv
sti
in
cmpsb
insb
xchg
imul
xchg
jmp
ret
lahf
sbb
or
xchg
mov
aam
cmc
push
loope
sbb
mov
into
mov
sbb
stos
loop
sbb
out
and
fucom
rclb
xchg
push
adc
out
jecxz
and
mov
sub
push
imul
imul
mov
sbb
push
popf
mov
cmpsl
fcmovne
jb
fsubrl
test
pop
rol
jmp
fisttpll
out
cmc
sub
sub
push
adc
repz
and
shl
rcll
ljmp
inc
xchg
mov
adc
out
mov
xchg
mov
lret
push
and
pushf
arpl
stos
stos
bound
lret
sub
iret
pop
rol
iret
lock
out
icebp
sarb
mov
movsl
stos
mov
and
loope
jae
rcrl
js
push
mov
imul
push
push
sbb
ljmp
mov
cmp
movzwl
popf
fldt
push
sarb
mov
xor
rcr
fldenv
mov
jmp
out
xchg
int
insb
popf
js
stos
mov
mov
mov
jg
cmp
adc
sbb
push
shl
sub
int3
adc
and
loopne
out
movsl
cmp
int3
fcoms
xchg
pusha
xchg
outsb
push
idivl
rcrl
sub
xlat
mov
jecxz
fwait
mov
aad
jmp
or
jmp
outsb
pop
xchg
in
mov
or
stc
iret
pop
jmp
pop
and
imul
jbe
jmp
stos
xchg
mov
je
pop
mov
or
mov
subl
divb
sub
sbb
pop
stos
and
mov
mov
fwait
sbb
loopne
cmpsl
repnz
jmp
inc
mov
xchg
pop
sbb
aam
icebp
and
stos
jmp
pop
jecxz
jb
pop
sub
xchg
int
leave
out
inc
cmp
das
fwait
jo
mov
dec
lods
jno
les
xchg
out
jmp
push
icebp
ret
mov
mov
cmpsb
iret
sbb
cltd
mov
in
inc
or
cmc
testb
xchg
or
mov
repnz
mov
lahf
pop
adc
call
imul
insb
mov
cmc
xchg
mov
lods
pop
divl
in
divb
shrb
pop
call
cwtl
jne
pop
mov
roll
js
call
ret
int
fstps
lcall
setno
mov
cmpsl
pop
rcrl
cmpsl
jecxz
mov
iret
mov
fildl
lock
fists
mov
cmp
sbb
ja
ja
add
fwait
shld
loopne
sbb
sub
adc
mov
in
arpl
out
test
in
mov
dec
iret
cmpsl
ret
xlat
xlat
lea
lret
sub
popl
cmc
nop
mov
iret
call
jnp
cmp
jecxz
xlat
hlt
sbb
xchg
fwait
rcll
movl
fwait
sub
lret
fidivl
xor
jbe
mov
sub
mov
pop
leave
leave
pop
push
jmp
in
cmp
sbb
test
push
in
inc
iret
mull
dec
pop
lods
and
ror
ret
imul
push
add
dec
movsl
xchg
dec
int
scas
test
xlat
jecxz
ffree
int3
xlat
pop
pop
decl
or
fsubs
decb
mov
mov
and
sbb
mov
xchg
andl
and
stos
aad
cld
mov
pushl
fstp
aad
icebp
cld
fcmovu
jp
test
jecxz
fnsave
out
imul
mov
in
into
mul
adc
loopne
outsl
mov
cmpsb
pusha
decl
push
cld
fsubrs
arpl
sub
mov
lock
pusha
roll
iret
call
pop
or
pop
sbb
xchg
loopne
sub
sub
xlat
jbe
xchg
addb
mov
push
popa
and
pop
dec
aam
iret
in
mov
sar
loopne
rcrl
imul
in
fistl
pop
fbld
ffreep
lods
data16
mov
mov
cmc
fwait
pusha
xchg
in
loop
xchg
adc
imul
out
repnz
arpl
cvtdq2ps
or
mulb
sbb
dec
ljmp
out
xchg
xchg
arpl
pop
mov
repnz
fs
or
lcall
jle
adc
js
clc
es
add
sbb
adc
or
lods
push
pop
xchg
popa
push
mov
lock
lret
jmp
test
lret
add
xor
mov
cmpsl
mov
and
pop
xor
aad
mov
loope
xorl
dec
xchg
xor
fisttps
fcom
outsb
lcall
mov
mov
popf
adc
dec
mov
push
and
das
dec
ret
inc
icebp
cmpsb
xchg
daa
inc
lods
enter
pop
das
sbb
lret
mov
adc
iret
popa
sbb
cwtl
lods
lock
and
jle
pop
scas
fldenv
jmp
scas
mov
negl
inc
repnz
stc
int
cltd
movsb
imul
xlat
add
mov
je
in
jg
imul
int3
fstps
fcom
dec
test
aad
xorb
int3
mov
push
push
jg
inc
inc
mov
or
jmp
movaps
pop
jbe
and
pusha
out
xor
movsl
push
mov
xchg
shlb
push
jecxz
push
xchg
sti
sub
or
sbb
sub
mov
int3
cmp
loope
xchg
stos
popa
xor
test
jg
mov
imul
lods
icebp
aaa
icebp
fs
mov
lock
dec
in
arpl
xor
in
loope
clc
mov
outsl
mov
shr
jecxz
cmp
testb
ror
cmc
mov
ss
inc
pop
pop
int
mov
and
int3
inc
call
int3
mov
inc
aas
xchg
xchg
loop
ret
jg
stos
mov
mov
dec
cmpsb
jmp
ficompl
int
cmp
pop
mov
loop
in
sub
lea
das
jmp
icebp
xchg
lahf
out
outsb
push
add
and
xor
aam
jg
jmp
scas
xlat
in
clc
jmp
sbb
push
xchg
leave
dec
icebp
xchg
lcall
lahf
loopne
adc
cmp
mov
sbb
imul
scas
addr16
enter
mov
mov
mov
jmp
xchg
or
imul
dec
sub
lret
outsl
movsl
sti
pop
adc
lret
push
mov
and
jbe
stos
jns
jmp
rorl
mov
popa
out
imul
xlat
dec
out
and
jnp
xchg
rolb
jecxz
inc
mov
subl
enter
and
arpl
mov
mov
inc
mov
mov
lret
popf
mov
inc
mov
sub
mov
rclb
mov
ret
fdivs
lock
orl
aad
out
mov
xchg
mov
sub
mov
imul
shlb
cmpxchg
inc
out
xchg
lret
fadds
xchg
shr
in
jb
loope
ret
iret
mov
mov
xchg
stos
mov
pop
jecxz
loope
popf
xor
xor
mov
adc
aas
cld
fmuls
pop
lods
jo
jb
jmp
aad
mov
test
int
repz
divb
cltd
fbld
fwait
xor
shr
stos
mov
ret
into
cmpsl
mov
mov
mov
ret
test
mov
mov
out
add
adc
loop
xchg
mov
out
loopne
shl
fwait
andb
jg
mov
mov
cwtl
mov
pop
mov
insb
jge
xchg
imull
add
push
into
into
mov
cmc
inc
dec
pop
mov
xchg
clc
shrb
xlat
mov
xchg
jno
fwait
sub
sub
scas
pop
aaa
push
and
push
sub
repnz
jg
shrb
fiaddl
fcmovu
xor
clc
mov
mov
mov
cmpsl
dec
cs
enter
aas
push
call
outsl
and
lret
fwait
insb
inc
scas
sbb
mov
fbld
sahf
das
adc
or
cmp
scas
mov
inc
jle
das
add
dec
mov
pop
xchg
inc
sub
cwtl
ds
fiadds
arpl
xlat
mov
pop
popa
mov
das
lock
lret
pop
push
in
dec
or
out
scas
lret
xlat
or
pop
lods
mov
out
fisttpll
pop
cmpsb
leave
ret
cmp
jns
stos
sbb
rcl
in
and
fcomps
insb
gs
stc
iret
arpl
sti
jb
call
lock
xchg
ljmp
idivl
push
mov
mov
and
lock
lea
fldt
mov
das
sub
or
mov
mov
fstpt
dec
loop
out
or
mov
and
sub
mov
xchg
add
fadds
xchg
sbb
les
xor
push
pop
aaa
xchg
xor
in
xor
scas
mov
pop
pop
scas
icebp
inc
add
out
push
dec
pop
jae
test
mov
lret
test
daa
dec
dec
ljmp
mov
in
mov
or
ss
cltd
syscall
fcmovb
in
sahf
inc
add
add
loopne
jmp
ret
xlat
shld
jmp
xchg
movsl
sbb
popf
nop
cmpl
in
jmp
mov
fs
push
mov
in
sarb
iret
cmp
xlat
push
sub
outsb
dec
icebp
ror
aam
sub
sbb
in
add
and
sub
mov
lods
mov
dec
push
lds
mov
sub
rorl
mov
shlb
cld
lock
into
shlb
xchg
mov
xlat
dec
mov
insb
les
insl
mov
mov
mov
mov
imul
jo
sub
jne
mov
rcrb
pop
adc
pop
push
sbbl
inc
data16
xchg
dec
aas
testl
mov
fstl
aad
pop
sbb
push
call
xchg
push
jae
adc
lods
popf
dec
xor
fsubrl
notl
movsl
subl
subl
jge
call
xor
popa
mov
mov
scas
and
mov
test
test
int
adc
sahf
out
xor
xchg
rcrb
fs
adc
push
inc
xor
lock
fistpl
or
dec
shlb
fidivrl
movsb
repz
push
xor
sub
rcl
cmpb
xor
out
sub
jae
inc
mov
inc
mov
mov
xor
fdivrs
sar
pop
test
pop
dec
jne
js
push
into
xchg
out
push
jle
mov
inc
popa
add
dec
xchg
sahf
cwtl
rolb
push
loope
lods
arpl
clc
insb
xlat
in
arpl
rclb
mov
add
mov
div
repnz
xchg
xchg
jbe
pop
imul
lods
mov
mov
incb
push
adc
and
pop
jnp
aad
lock
push
in
push
xor
cvtdq2ps
xor
ljmp
xchg
scas
iret
xlat
sbb
adc
es
ret
xchg
mov
lret
push
push
je
xchg
sbb
xor
in
mov
insb
mov
sub
mov
into
cli
in
xlat
lods
jle
data16
aad
test
dec
add
in
and
mov
push
pop
out
std
rcll
das
xlat
mov
jmp
cwtl
lahf
lods
mov
jae
inc
or
lea
aam
stos
outsb
fcoms
mov
fidivrl
add
adcb
jno
fcmovu
xchg
rcl
xor
ja
fcom
arpl
push
data16
mov
pop
push
jno
out
or
xor
sbb
test
cs
jmp
mov
jecxz
sti
pop
outsl
mov
sti
xlat
insb
das
sbb
scas
mov
mov
jmp
movsb
hlt
push
cmp
adc
outsb
add
ja
xchg
rcl
das
mov
call
inc
sub
aam
xor
call
dec
mov
out
jo
out
jo
jmp
push
jb
into
xor
aam
mov
dec
push
out
imul
inc
mov
clc
call
dec
js
rorb
lret
jae
fstpt
mov
jne
dec
dec
das
push
icebp
fwait
and
push
jns
sbb
jo
icebp
lods
roll
push
push
sub
dec
push
xlat
push
push
sub
popf
mov
push
imul
jns
jg
jo
insb
pop
out
ror
mov
mov
cmove
leave
mov
or
das
xchg
scas
daa
cmc
out
ljmp
and
sbb
jecxz
daa
dec
and
mov
sub
out
stos
fmul
in
cmpsl
jecxz
mov
scas
mov
sub
test
lret
sbb
movsb
and
iret
std
sub
fists
shll
fdivr
das
pop
rcl
push
loope
jl
mov
adc
mov
push
sbb
mov
decl
arpl
hlt
cmc
shll
sub
fbld
adc
adc
out
jne
xchg
ret
push
mov
nop
mov
add
adc
loope
rorl
in
ret
iret
int3
fcomp
loop
mov
sub
lahf
lds
clc
pop
in
stos
arpl
pmovmskb
iret
lret
in
mov
int3
fwait
add
mov
in
fcomp
rcr
aad
inc
jns
mov
and
jl
or
mov
push
sarb
das
ja
rcl
add
cwtl
cmc
gs
jecxz
in
mov
and
cltd
es
jecxz
sbb
fnsave
jne
aad
mov
frstor
mov
push
imul
scas
call
sarl
scas
test
adc
jecxz
aad
loope
rcll
mov
int3
sub
sahf
ja
lret
sub
sub
mov
inc
mov
mov
push
fcoms
imul
enter
ljmp
or
out
vpsrad
mov
jecxz
jge
arpl
push
pop
mov
cmc
das
mov
nop
mov
jge
add
pusha
into
loop
iret
xchg
push
test
lods
iret
sub
mov
add
aad
sbbb
jmp
sarl
mov
sti
jp
call
sbb
outsb
scas
insb
int3
mov
mov
daa
jnp
jne
bound
scas
clc
add
sti
les
arpl
dec
mov
rol
mov
aas
insl
mov
mov
ret
icebp
stos
dec
loope
jmp
mov
rol
mov
cmp
sbb
sub
cmp
add
loopne
mull
mov
sarl
push
xchg
jg
lea
push
dec
iret
mov
push
and
outsb
aas
fnstsw
sbb
imul
dec
outsb
push
push
subb
pop
out
or
mov
outsl
negl
je
xor
dec
mov
js
in
out
lods
add
jns
lods
sub
xorl
das
mov
lock
mov
sub
sbb
imul
sbb
imul
fstpl
les
mov
and
sarb
aas
mov
mov
xchg
sbbl
test
lahf
mov
out
lcall
mov
push
out
mov
push
mov
xlat
pushf
call
sahf
loop
insl
aad
lds
call
aas
in
test
pusha
fcomps
call
mov
movsb
test
lahf
xlat
shll
mov
xlat
shll
stos
outsb
fdivs
insl
gs
testb
mov
lcall
push
in
in
fcmovb
imulb
xlat
int3
inc
lret
inc
scas
enter
in
xlat
enter
push
loope
bound
cmp
xchg
xchg
pop
aas
xor
aam
imul
mov
dec
sbb
das
sarl
in
rcr
das
sarb
fwait
dec
shrl
shl
adc
mov
xchg
cli
mov
jecxz
pop
xchg
xchg
pop
arpl
pop
js
int
sub
out
mov
cmp
divb
addl
out
cmpsb
aad
aaa
ret
lret
mov
inc
int3
das
xchg
lret
pop
jno
ret
addr16
sub
dec
sbb
shlb
xchg
mov
dec
lahf
arpl
leave
shlb
outsb
add
jmp
scas
mov
pushf
inc
aam
addr16
imul
call
xchg
lret
mov
arpl
push
push
pop
mov
adc
imul
push
sbb
icebp
mov
mov
mov
jno
inc
int3
into
or
rcr
cwtl
lods
daa
cmp
jb
mov
dec
stos
subb
test
iret
sub
cmpb
cmp
test
inc
mov
imull
pop
cmc
fwait
push
loope
cmp
insl
inc
sarb
push
push
mov
fwait
outsl
fsubs
repnz
pop
push
mov
xlat
adc
aad
loopne
dec
in
fcmovu
add
pop
sub
test
xlat
lahf
icebp
push
cld
imul
mov
push
lret
push
stos
test
pop
filds
jecxz
popf
loopne
out
in
divb
stos
sbb
sbb
push
int
jecxz
xor
push
mov
mov
arpl
iret
mov
jecxz
dec
es
mov
push
scas
mov
mov
fucomp
fistpll
mov
add
js
daa
scas
and
sbb
xchg
loop
shrl
mov
sub
sbb
jbe
test
mov
mov
mov
or
jne
dec
sahf
pusha
popf
adc
push
ret
popa
mov
insb
mov
shrl
or
mov
mov
inc
mov
mov
xchg
and
lods
ficomps
dec
les
fildll
pop
xor
mov
leave
insb
in
mov
cld
xchg
adc
pop
xlat
xor
outsl
sbbl
sub
int
sub
adc
xor
aad
ror
stc
xchg
mov
lret
push
pop
and
int3
fwait
sbb
insb
cmp
jl
imul
jp
scas
inc
jecxz
ficoms
ds
lods
adc
xlat
movsl
fnsave
shlb
out
sbb
or
lods
scas
iret
lds
jb
in
into
cltd
scas
jb
and
testl
mov
std
sbb
cmp
inc
mov
js
bound
iret
popa
push
pop
pushf
inc
addr16
imul
jge
fildl
negb
shlb
xor
or
jecxz
fwait
dec
repz
jg
push
arpl
imulb
sub
rorl
push
cmc
test
pop
sahf
xchg
ljmp
ror
xlat
stos
mov
ja
ja
jmp
sahf
inc
cmpsl
das
mov
jnp
fwait
iret
mov
sub
sbb
rcrl
jnp
push
loope
pop
repnz
or
aad
push
jo
push
out
push
mov
xor
iret
mov
cmp
cmpsl
jmp
pop
fisubl
mov
out
jnp
in
test
loop
scas
push
mov
fwait
push
lods
jmp
lea
xchg
ljmp
lret
outsb
scas
mov
push
xor
mov
ljmp
sti
les
xchg
cmc
xor
lret
loop
inc
mov
sarb
dec
xlat
and
push
popf
push
xchg
in
inc
rcl
rcll
push
sbb
jecxz
xchg
push
imul
out
xchg
push
or
push
sbb
cltd
xchg
push
loope
repnz
pop
jmp
ret
std
sbb
ss
push
and
cli
lock
cld
in
int
iret
mov
lods
push
rol
push
in
pop
push
fists
or
fistl
scas
sub
in
mov
mov
repnz
sbb
push
inc
leave
jno
push
lods
sbb
int3
pop
adc
jae
insl
dec
in
jnp
dec
lock
into
mov
stos
insl
xchg
shll
xlat
pop
adc
jge
aad
scas
int3
loop
rclb
leave
mulb
xchg
ds
pushl
and
mov
mov
arpl
and
pop
dec
and
sbb
in
cmp
mov
ds
and
imul
sub
ss
aas
rcll
fwait
arpl
test
ss
fs
push
adc
mov
inc
xor
mov
jb
lods
test
and
dec
mov
xor
rorl
xchg
je
adc
es
test
enter
out
push
dec
mov
xor
mov
aaa
jb
mov
cmp
ds
imul
pop
xchg
pop
insb
aas
xchg
dec
mov
arpl
sbb
inc
jb
adc
jns
aaa
adc
push
dec
sti
mov
test
or
fcmovnbe
insb
aas
pop
into
mov
inc
les
loop
pop
pop
mov
dec
in
cmp
mov
sub
lahf
mov
adc
jmp
test
mov
dec
nop
subl
je
push
ret
jb
adc
and
call
push
pushf
call
pushf
movl
push
movl
pusha
movw
movb
pusha
lea
jmp
ja
loop
rcr
rol
cmpsl
cwtl
jp
xor
flds
stos
and
xor
mov
inc
mov
or
arpl
mov
pusha
mov
lds
sbb
stc
dec
lock
pop
or
das
xchg
ss
or
push
mov
sub
add
sub
lods
fcoms
notb
inc
enter
out
dec
jbe
dec
cs
sbb
xlat
movsb
mov
int
push
adc
adc
ret
mov
dec
jle
lods
push
dec
dec
sbb
add
lods
xchg
push
or
sbb
call
add
les
inc
pop
hlt
and
inc
pop
clc
in
push
mov
push
sbb
cmp
jl
in
js
dec
pop
inc
mov
loopne
push
adc
inc
sarb
arpl
cltd
aad
in
dec
insl
fimull
or
aam
aam
cmp
gs
imul
jmp
std
jb
adc
pusha
push
jmp
mov
jmp
popf
mov
inc
in
imul
adc
inc
jge
sbb
or
and
pop
fdivl
cld
jge
pop
leave
xchg
inc
fs
scas
lea
dec
mov
pop
fstps
cld
sub
push
pop
cwtl
in
in
aam
addl
into
jnp
jmp
iret
push
jl
push
mov
push
cltd
leave
jbe
fldcw
mov
or
fwait
ja
imul
push
jecxz
pop
xchg
push
cwtl
outsl
daa
rcrb
push
mov
enter
adc
outsb
mov
call
inc
mov
je
and
mov
push
push
std
dec
gs
jmp
or
push
mov
test
xchg
jge
sbb
fs
cltd
jbe
sub
push
mov
push
xchg
out
mov
sub
xchg
jle
test
or
xchg
jnp
cld
sub
add
xor
test
push
push
sub
aaa
cmc
pushf
cmpb
mov
jmp
lea
je
mov
lea
jmp
lea
ja
bt
test
not
sub
neg
rcr
add
setnp
and
neg
mov
add
mov
test
mov
pushf
repnz
jmp
and
call
mov
pushf
mov
movb
push
lea
call
pushf
pushf
jmp
pushf
call
add
addb
add
fstps
add
add
add
add
xor
add
sbb
add
enter
and
mov
xor
lea
call
clc
push
call
mov
jmp
lea
jae
bsf
mov
rcl
sets
test
mov
bsr
stc
mov
pushf
bt
mov
xor
test
cmp
repnz
pusha
mov
mov
lea
jne
shrd
xchg
shl
or
mov
add
or
sub
add
test
cmp
cmc
mov
pushf
sub
test
pushl
popl
stc
push
test
stc
cmp
jmp
or
movsl
outsl
mov
mov
in
outsl
mov
nop
adc
jbe
push
orl
pop
adc
inc
or
clc
mov
mov
das
add
mov
iret
ds
mov
and
clc
mov
clc
mov
mov
out
enter
imul
cmpsl
jp
imul
fcomps
pushf
nop
int3
sti
mov
xchg
xor
in
lods
loopne
xchg
imul
and
fcompl
mov
icebp
fsubs
out
adc
sbb
mov
frstor
push
jmp
pushf
push
mov
jmp
ja
inc
xor
pop
ret
jecxz
mov
sub
mov
xor
insl
cmp
sbb
out
insl
mov
js
mov
xchg
loope
fstps
adc
call
fsubs
xor
mov
mov
mov
pusha
pusha
movl
pushf
lea
ja
push
jmp
call
push
push
dec
call
xchg
jmp
neg
push
add
movw
neg
jmp
push
movl
pusha
pushf
pusha
movl
pushf
lea
jmp
lea
je
sbb
stc
add
stc
rcr
shl
push
sub
btr
bt
shr
rcl
stc
neg
cmp
mov
sar
pusha
movb
add
bsf
add
test
movb
clc
mov
push
clc
clc
test
shr
jmp
cli
push
pop
jne
xchg
jo
jb
dec
add
repz
cwtl
sub
push
mov
out
jl
adc
push
aas
paddw
int3
inc
stos
and
loope
mov
stc
rorb
inc
bound
js
sbbl
repz
mov
sbb
push
fiaddl
mov
fs
sbb
pop
jne
mov
ds
add
push
sbb
decl
inc
mov
cmp
bt
bt
sub
jmp
push
lea
movsl
out
cltd
adc
lods
lods
lahf
aas
hlt
iret
cld
pusha
fdivrl
inc
lret
nop
adc
sahf
sub
mov
inc
iret
and
add
imul
rorl
add
iret
jl
jg
gs
mov
adc
sbb
adc
xor
das
adc
xor
push
sbb
ds
push
jge
and
dec
dec
dec
jb
pop
push
int3
cmc
std
stc
out
mov
add
dec
shrb
sti
test
fstps
ds
push
cld
jmp
mov
dec
in
fcompl
lods
sahf
fisubs
iret
rolb
add
mov
pop
xchg
in
mov
pop
add
xor
xchg
aam
mov
mov
movb
iret
xchg
adc
loope
and
pop
and
nop
xchg
xchg
sbb
js
data16
cmp
stc
pushl
arpl
push
pop
sub
cs
ds
into
fisttpl
inc
orb
mov
int
adc
sub
mov
dec
inc
mov
ficompl
dec
cmp
int
pop
dec
pop
mov
inc
xchg
xor
push
pop
sarl
push
adc
addr16
movsb
pop
sub
jo
push
jo
shrl
mov
shll
jge
mov
push
dec
fmul
test
scas
jbe
push
mov
jb
sbb
push
ja
fs
call
pusha
call
pushf
lea
jb
call
into
leave
in
cmp
sub
insb
dec
xor
xor
loop
icebp
sahf
add
lret
adc
mov
ja
stos
jns
push
jmp
popf
xchg
popl
xchg
add
aaa
call
sub
cmpsb
idivb
movsb
js
push
cwtl
inc
sbb
imul
push
or
sbb
iret
outsb
push
mov
movl
pusha
pushf
pushf
movl
pushf
lea
jmp
mov
jmp
mov
push
jmp
jmp
call
dec
hlt
rclb
test
push
push
fistpll
inc
mov
sbb
int3
test
jne
mov
addr16
ret
inc
adc
vmovlps
cli
je
add
jns
mov
scas
jmp
cld
pop
mov
in
rcr
sti
das
or
int
loopne
lods
pushf
and
call
pusha
dec
out
xlat
outsb
pmovmskb
lret
push
fxam
lods
jne
js
adc
jecxz
jnp
mov
nop
mov
jecxz
jb
sbb
cmpsl
xor
arpl
out
jne
stos
adc
ret
lods
jne
call
shlb
call
pop
mov
jo
scas
notb
orb
loop
in
jne
dec
xchg
shlb
dec
xor
outsl
sti
subb
pop
jb
sbb
stos
pop
pop
sti
push
movb
mov
pushf
pushf
pushl
movw
lea
jmp
push
movl
call
mov
sub
scas
rcr
repz
arpl
jmp
mov
xchg
mov
lock
dec
inc
push
leave
xchg
pop
leave
enter
jmp
cwtl
insb
popa
fldenv
fldt
jmp
loop
addr16
sub
int3
inc
push
shll
push
pop
jmp
pushf
neg
test
add
call
cmp
mov
lea
jae
shld
mov
stc
rcl
rol
shl
mov
cmc
shrd
not
mov
clc
clc
cmp
xor
pusha
repnz
call
bswap
mov
movzbw
lahf
cwtl
lea
pusha
jmp
push
rcll
int
add
pop
or
rcr
shlb
push
loope
idivb
add
leave
push
inc
leave
mov
lret
mov
jmp
stc
cmp
push
or
dec
jmp
daa
sub
mov
test
mov
mov
cs
xchg
rolw
call
adc
movsb
or
pop
mov
sbb
inc
scas
mov
mov
stc
sbb
xadd
fs
mov
pushl
sar
repnz
sbb
mov
mov
pop
jne
sbb
push
push
sbb
insb
and
and
movsb
mov
or
jmp
cmp
testb
dec
addl
mov
pop
xor
shll
cmpsb
and
inc
add
xor
inc
fnstenv
xor
fs
arpl
or
aas
xchg
in
lahf
xchg
pop
add
xchg
or
mov
or
fs
mov
sbb
inc
cmpsl
lock
bound
pop
lcall
and
or
xchg
push
rcrb
adc
loope
lds
cltd
cmpl
lcall
mov
mov
loopne
mov
xor
ss
xlat
or
fiaddl
mov
xor
push
inc
jbe
mov
outsl
aaa
jnp
xchg
es
mov
stc
clc
ja
jmp
pop
pop
hlt
and
add
rcrl
stos
xor
xchg
xchg
xor
scas
mov
cmc
pop
dec
pop
cmp
mov
rcll
ret
out
out
push
loopne
rcl
nop
mov
xor
inc
aaa
insb
std
add
test
sbb
push
in
sahf
push
xchg
push
lcall
stos
mov
push
ret
mov
js
rorb
dec
and
hlt
cmp
roll
roll
jo
mov
scas
arpl
mov
adc
dec
mov
leave
jb
leave
mov
mov
push
xchg
inc
inc
sbb
addr16
push
push
jno
push
inc
or
and
pop
rcr
lret
sub
inc
xchg
shll
fidivs
into
xorb
mov
mov
pop
pop
fsubs
insb
sub
lret
sti
adc
rcll
loope
scas
sahf
es
adc
shl
mov
adc
dec
mov
mov
push
loope
sub
repz
xor
inc
dec
mov
cmp
dec
paddb
push
lds
sbb
mov
jmp
or
dec
inc
cmp
push
push
and
ljmp
in
mov
leave
ds
dec
adc
in
add
ret
mov
adc
mov
fldcw
leave
lcall
mov
subl
add
sbb
in
mov
outsb
xor
sub
into
clc
mov
fmull
jb
loop
inc
or
xchg
ret
rcr
dec
not
stc
sub
pusha
setbe
not
mov
not
inc
dec
call
mov
sub
xchg
nop
stos
aad
jae
jne
push
adc
negl
mov
adc
inc
in
outsl
rolb
enter
daa
shr
fstl
sbb
jnp
add
iret
pop
call
ja
or
cli
rclb
dec
adc
addr16
stos
int3
xor
inc
pop
sahf
gs
cmpsl
faddl
fwait
jg
ret
mov
aad
les
sbb
or
into
daa
cs
fwait
movsb
loope
or
adc
cmc
add
sub
jbe
xor
dec
lds
mov
mov
jg
mov
jne
pop
mov
mov
push
sbb
rcrb
addl
repnz
adc
jg
mov
data16
les
inc
inc
mov
pusha
or
jae
inc
dec
mov
iret
stc
ss
mov
xor
fwait
mov
in
adc
jb
loope
loop
fcoml
xor
xor
add
mov
cmpsl
sahf
pop
or
jp
jo
test
inc
push
imul
pop
dec
mov
inc
and
sbb
aaa
mov
ss
mov
add
push
pop
mov
and
aas
in
popa
sub
or
mov
jo
inc
inc
ja
movl
fisubrl
dec
push
sub
out
push
or
mov
call
or
loope
scas
jb
jecxz
mov
pusha
lea
je
call
ret
test
xor
aas
dec
sbb
stos
push
cmp
mov
xchg
pop
mov
lahf
ljmp
sbb
mov
pop
sbb
adc
lret
insl
xor
les
in
cs
movsl
lea
xor
sbb
cwtl
ret
mov
cmp
or
lds
iret
imul
aaa
push
mov
pop
fdivrl
mov
or
lock
adc
jmp
jecxz
jecxz
in
movsl
jo
fildll
test
lcall
push
in
mov
sub
mov
call
mov
sub
cmp
jne
and
jge
insb
mov
mov
or
sbb
mov
or
addr16
and
lods
add
pop
lahf
clc
xchg
pushf
scas
insl
in
iret
mov
jecxz
out
loop
repnz
push
jb
in
outsb
jp
add
jmp
push
mov
fwait
adcb
xchg
xchg
nop
xchg
inc
inc
xchg
dec
and
xor
insb
and
mov
pushl
ret
pushl
mov
pusha
movl
movb
push
pushl
ret
ja
mov
in
mov
sub
pop
or
ss
das
sti
aas
xor
or
jmp
js
lret
jbe
push
add
sub
int
inc
xchg
pushf
jb
in
repz
out
subl
or
sbb
adcl
cmpl
mov
jp
mov
inc
scas
sub
mov
xchg
jne
jae
fcmove
or
sub
mov
aaa
xchg
fwait
mov
adc
adc
jle
jbe
mov
jno
aam
xchg
and
call
enter
cmpb
or
or
mov
neg
fisubrl
lret
mov
or
outsb
inc
dec
nopl
fsubl
ret
sti
out
lahf
out
jge
or
loop
gs
jp
insb
dec
movsl
mov
out
jle
lea
jbe
shl
setns
mov
pushf
ror
rcl
lea
add
ror
lea
pop
inc
mov
pusha
movsbw
clc
inc
add
xor
shrd
pushl
movl
lea
sbb
rcr
shr
mov
add
call
mov
mov
int3
xchg
jp
aaa
out
aad
std
dec
jnp
sub
lret
mov
mov
jae
arpl
leave
mov
test
push
dec
jo
mov
into
mov
insl
mov
mov
aad
mov
ds
xchg
arpl
out
out
jns
jmp
jb
out
icebp
sub
loope
pusha
mov
insb
mov
ja
add
mov
cltd
roll
out
ds
mov
sar
lret
scas
adc
and
popa
int3
push
leave
ss
adcl
jae
push
out
dec
scas
pushf
movzwl
test
and
inc
mov
pushf
add
mov
pushl
pushl
clc
mov
test
call
neg
mov
cmp
pop
movb
movzbw
not
lea
movsbw
jmp
not
call
push
pushf
lea
jae
pusha
mov
inc
inc
pushf
jmp
lods
inc
ror
ror
sub
call
jb
test
fidivrl
loope
xorb
mov
call
and
mov
clc
sub
push
sub
mov
leave
xchg
sbb
call
es
cmpsb
or
cmpsl
popf
aad
push
out
jnp
dec
shll
lahf
repz
fwait
push
push
call
mov
lahf
fstpl
pop
cmc
decl
and
push
pushl
ret
xchg
push
mov
aaa
or
pop
mov
xchg
mov
push
or
pushf
ss
pusha
xchg
add
sub
lret
cwtl
push
rol
call
outsl
hlt
add
dec
mov
cltd
std
sub
shl
fcmovnu
andl
jb
call
clc
test
rcr
push
hlt
jo
pop
and
add
gs
ja
fsub
faddp
adc
push
ret
add
arpl
add
inc
mov
int
and
out
jo
jno
mov
mov
cmc
mov
imul
fsts
jmp
sahf
and
gs
pop
adc
cmp
or
pusha
insb
enter
add
mov
xor
mov
mov
inc
mov
test
sub
sbb
stos
xor
scas
sub
pushl
jg
cmpsl
fcoml
addr16
pop
jnp
or
pop
insl
mov
scas
pop
lds
aas
lods
fs
jo
pop
push
mov
loop
cmc
popf
xchg
stos
mov
cmpsb
mov
and
rol
mov
jb
jmp
test
sub
clc
pushl
popl
test
clc
pusha
push
cmp
mov
jmp
push
stc
aas
pushf
adc
push
cwtl
jecxz
daa
jb
repz
cmp
mov
inc
imul
call
push
mov
push
xchg
mov
adc
ljmp
js
adc
xchg
clc
jo
pop
push
push
lahf
sub
dec
xchg
call
adc
fsubl
and
mov
pushf
xor
test
adc
sub
int3
push
shll
in
fimuls
insl
jb
ljmp
lea
jae
call
stc
mov
jmp
xchg
mov
cmpsl
das
mov
stc
shlb
mov
sbb
cld
shlb
stos
in
and
jno
jmp
aad
jl
sub
lods
jns
cmpsb
xor
jg
mov
dec
adc
cwtl
in
jge
imul
ret
inc
aad
push
adc
andb
out
arpl
push
xor
sti
push
jmp
incb
dec
sbb
test
pop
pop
add
lret
cmp
je
push
addr16
ljmp
mov
xor
lret
and
pop
mov
scas
or
jnp
xchg
xchg
xor
in
xor
rorl
aaa
cltd
mov
out
dec
mov
clc
repz
sbb
hlt
loop
lds
ret
inc
cmp
push
sbb
pop
fcmovbe
iret
and
sbb
lcall
insl
sahf
adc
mov
jle
pop
sbb
insb
pushf
fs
mov
push
dec
ds
stc
ljmp
xchg
or
xchg
testb
cs
scas
fs
aaa
into
xor
out
add
js
scas
popf
adc
sbb
pusha
repz
jecxz
push
imul
cmpsb
bound
fs
popf
mov
mov
lcall
mov
adc
adc
lret
cli
cs
cld
adc
or
jbe
cmc
into
sub
insl
cmc
dec
jo
fstpl
cwtl
cmpsb
lret
pop
pop
xchg
mov
iret
call
mov
sbb
hlt
insl
test
push
fldl
or
push
adc
ja
pop
and
inc
popf
test
xor
pop
mov
adcb
stc
adcl
std
sub
sbb
mov
xchg
pop
pushf
pop
fists
dec
pop
andl
and
pop
sbb
call
push
rcrl
jg
aad
mov
aad
xor
into
add
sub
into
or
in
mov
clc
out
fs
scas
mov
mov
lods
ja
or
mov
fsubl
jne
xor
ja
aaa
cmpsb
jge
mov
inc
push
inc
mov
ret
cli
jmp
cmp
aaa
sub
daa
fcoml
dec
inc
push
scas
dec
sbb
push
jbe
adc
push
mov
sub
mov
leave
in
iret
lods
add
clc
repnz
push
leave
add
pop
or
lods
sbb
push
and
lods
mov
repz
insl
dec
sub
ja
push
jb
jns,pn
xchg
shll
cmp
bound
push
sti
mov
imul
inc
mov
adc
xchg
popa
imul
jo
mov
sarl
inc
mov
or
xchg
sub
in
and
xchg
and
mov
imul
cltd
into
cld
movsl
arpl
xchg
jns
stos
cwtl
psubusw
sub
jmp
and
clc
mov
lods
loope
orb
lock
mov
fptan
cmc
push
in
cmp
loop
sti
in
add
jmp
cmp
rcl
xlat
xor
aas
mov
pop
sub
inc
and
lret
pop
xchg
int3
xchg
sbb
jecxz
mov
int
inc
std
sbb
or
imul
cmp
add
push
push
test
or
icebp
test
jl
pop
rol
addl
mov
adc
or
xchg
cmp
mov
lea
mov
xor
lret
insl
ja
push
jge
loop
jecxz
sub
ja
xor
in
jne
cli
les
ds
arpl
icebp
aam
mov
ret
mov
push
sbb
loop
mov
leave
shrb
fs
cmp
lret
jb
out
out
in
subl
and
mov
lods
dec
xchg
stos
lods
fldt
loope
inc
push
lcall
cmpsb
out
jmp
add
scas
arpl
bound
mov
lcall
mov
in
or
sub
adc
jae
lods
loop
push
xor
adc
data16
push
xchg
pop
dec
idivl
xor
xchg
mov
xlat
jae
dec
les
shlb
xchg
pop
dec
pop
pop
stc
mov
shlb
out
push
out
jo
inc
shl
incl
sub
sbb
mov
or
call
arpl
push
popa
cld
xchg
mov
inc
sbb
sbb
in
scas
movsb
cld
pushf
nop
push
xor
ja
adc
outsl
cmp
or
jb
out
mov
pop
and
push
lods
cmc
incl
lea
jne
sbb
mov
cmp
add
pushf
movzwl
sub
jle
mov
call
mov
cmp
pushf
test
call
pusha
movb
adc
push
jmp
mov
mov
lea
movb
push
jmp
movw
mov
lea
jb
jmp
cmc
cmp
call
pushf
lea
jne
setae
movsbw
cwtl
cwtl
mov
pushf
lea
jmp
call
and
clc
sti
lods
int
xchg
inc
gs
and
jg
rol
loope
and
ss
imul
sub
sub
or
popa
mov
pusha
adc
cltd
dec
push
xchg
jno
dec
daa
adc
cmpsb
jecxz
inc
addl
push
repnz
test
out
jge
std
leave
xchg
and
push
mov
mov
arpl
cltd
mov
movsl
mov
push
mov
mov
mov
adc
mov
pop
test
jmp
bound
mov
or
popa
mov
pop
imul
inc
xchg
addr16
push
mov
std
and
mov
cmp
jb
lock
jno
aad
xchg
cld
mov
adc
mov
gs
js
push
scas
addr16
sub
inc
xor
fisubrs
pop
jns
pushf
lock
jb
icebp
adc
ror
cmc
incl
lea
jne
call
lcall
int3
mov
scas
cli
sar
push
xchg
es
mov
or
pop
ret
adc
ror
je
sbb
mov
and
mov
mov
cmp
jmp
and
mov
inc
test
mov
std
arpl
or
mov
jecxz
cmp
pop
or
pop
push
lock
pusha
rolb
ret
xchg
fistps
jb
icebp
ss
int
inc
pusha
push
lea
jmp
pop
pushf
pushf
push
movl
pushf
call
pusha
mov
pushf
pusha
pushl
stc
shl
call
mov
lret
or
sbb
pop
pop
cli
and
and
pushf
ss
mov
sbb
repnz
mov
stc
leave
xchg
cmc
js
call
ret
xchg
mov
iret
shrb
ret
xor
adc
jb
repnz
in
pushf
movl
movsbw
cwtl
lea
pushf
movl
pushl
jmp
add
call
bt
cmc
call
pusha
lea
call
call
call
imul
pushl
push
add
pusha
push
lea
jmp
pusha
xchg
setne
not
movl
jmp
inc
addb
orl
mov
mov
imul
neg
test
iret
push
jo
loope
inc
movsl
sub
dec
rcrb
pop
add
rclb
sbb
data16
or
jne
pop
addr16
and
imul
cmp
icebp
in
push
stos
repnz
dec
push
sbb
mov
xchg
shl
lods
repnz
add
arpl
jge
add
shr
mov
add
aas
mov
les
dec
xor
cmp
and
xor
inc
pop
mov
aaa
sub
arpl
jb
repz
bound
xor
jno
popa
mov
int3
loop
xor
insb
mov
nop
pop
inc
mov
inc
out
les
and
repz
es
ljmp
sti
outsb
jb
repz
mov
inc
jne
inc
sub
clc
push
xchg
in
adc
dec
fsubrl
mov
repnz
dec
mov
jecxz
iret
adc
or
and
xchg
fdivl
cmp
repz
out
int
cs
imul
scas
rcrl
aam
sti
pop
scas
icebp
add
sub
std
lret
dec
lea
lret
xor
orb
mov
sub
jb
hlt
mov
and
fs
jne
add
sub
jmp
lea
movb
pushl
pusha
movb
xchg
cwtl
setle
jmp
call
pushf
call
repz
ds
stos
enter
or
pop
sbb
mov
xor
mov
cli
mov
sbb
test
std
and
cli
add
adc
test
movsl
xchg
lret
dec
ja
imul
mov
into
out
lahf
jnp
lea
fistl
pop
sbb
sbb
fistps
in
or
enter
add
push
bound
mov
push
mov
jae
lea
je
bswap
sub
add
mov
sbb
aaa
dec
mov
movsbw
cmp
btc
shr
rcr
shrd
shld
mov
push
or
call
or
call
not
pushf
call
lret
lods
xor
xor
loop
sub
out
pop
insl
repz
fisttpl
mov
aas
les
test
int3
imul
push
push
inc
in
stc
push
sub
pop
int3
repz
or
cli
or
pusha
jb
mov
lods
aam
adc
pop
jle
mov
pop
lahf
ljmp
dec
cwtl
mov
arpl
ja
pop
and
dec
mov
lods
bound
imul
clc
mov
ljmp
lea
jne
call
sti
xor
ret
fst
fst
inc
icebp
sarb
stos
sbb
ret
pop
leave
incb
test
inc
mov
jbe
jnp
aas
mov
shlb
in
fs
or
jne
cmp
push
loopne
and
aam
mov
xor
into
xchg
in
lock
and
rcll
pop
xchg
jmp
out
scas
sahf
push
or
lea
sbbb
cltd
adc
notb
dec
pop
nop
int
repnz
pop
aam
dec
mov
clc
inc
push
or
push
je
jmp
test
sahf
dec
clc
xor
inc
lods
push
mov
xchg
inc
add
add
mov
mov
sbbl
and
jmp
push
mov
adc
add
in
daa
sbb
pusha
sti
sti
xor
or
loopne
xor
jl
xor
adc
rcrl
sub
pop
and
imulb
cmp
movb
fdiv
aaa
inc
jmp
cmpsb
jns
jb
testl
lea
je
jmp
aam
movsl
push
or
push
xlat
inc
test
cmp
and
sti
mov
lds
ljmp
push
and
and
adc
stos
sub
or
inc
js
fsubp
inc
std
or
in
inc
pop
inc
add
add
push
in
dec
stos
int3
xchg
adcb
jns
jo
in
jne
lods
faddl
mov
pop
fldl
lods
insl
popf
dec
hlt
loope
movsl
clc
cmc
sbb
sbb
pop
lret
loope
xor
cmp
sub
sub
sbb
add
das
and
mov
cmp
push
lea
ja
jmp
push
movl
pushf
jmp
call
call
mov
ficoms
fwait
mov
sbb
cmpsl
xchg
push
and
popa
or
push
sbb
shlb
xchg
pusha
and
rolb
scas
test
add
in
and
lea
add
push
test
jno
inc
out
in
cmpsl
jmp
jo
push
jne,pt
call
xor
dec
jg
rorl
mov
in
dec
in
or
push
mov
add
push
lods
cmc
lcall
sbb
xchg
idivb
add
sub
lods
addr16
stos
jno
or
jle
add
pop
enter
dec
sbb
push
and
mov
push
outsb
in
adc
adc
and
and
idivb
inc
enter
and
inc
jae
pop
fmuls
dec
out
push
jb
addr16
sbb
inc
or
std
mov
roll
imul
and
leave
rorl
jo
lahf
out
movsb
jb
stc
sub
inc
lock
lods
lock
add
imul
jl
jne
test
push
enter
rclb
pop
orb
add
lods
sbb
lea
pop
fwait
push
dec
and
and
jae
xchg
mov
or
movsb
sti
out
std
in
in
push
push
lds
aam
pop
adc
push
or
mov
dec
mov
adc
pop
mov
test
cmp
movb
and
cmc
sahf
mov
xchg
add
out
add
in
lods
mov
pusha
mov
das
xor
rcll
inc
outsl
addb
mov
dec
cwtl
int
inc
loope
push
xor
mov
aaa
jmp
inc
push
cmc
sbb
xlat
inc
or
mov
fiaddl
sti
out
sub
pop
int3
cwtl
adc
xor
dec
or
inc
popf
sbb
scas
push
gs
frstor
outsl
mov
sub
pop
arpl
ficoms
pop
ljmp
and
je
movzbw
movsbw
call
shld
mov
adc
add
neg
neg
shr
rcr
mov
btc
rcl
xor
ror
add
lea
mov
push
pushl
pushf
mov
mov
pushf
not
sete
lods
bt
cmp
pushl
cmc
sub
stc
call
push
fnstsw
rcrb
cmp
jecxz
mov
jle
push
cmpsl
pop
sub
and
sub
out
cmpsb
cwtl
mov
fstps
hlt
fsubr
pop
xchg
xchg
pusha
das
sbb
cli
xor
pusha
movb
lea
jbe
bsf
movzbw
mov
sbb
jmp
pushf
test
aam
fstp
insb
dec
push
cld
xorb
fiadds
pop
pop
popa
or
inc
sti
dec
adc
insb
jle
jbe
lret
inc
rcrb
in
mov
add
adc
pop
pop
and
jg
sbb
dec
bound
or
push
rcll
pop
out
sub
sbb
dec
andb
dec
dec
add
adc
xchg
jl
jl
jmp
cmp
sti
mov
cmp
inc
add
add
sub
sub
not
shr
shld
mov
movzbw
neg
mov
xor
add
setl
sbb
btr
stc
add
bsf
bt
mov
call
movb
movl
mov
pushl
pushf
pushl
pushl
popl
pushf
pushf
pushl
ret
call
pushf
push
lea
ja
mov
call
jmp
add
jmp
jmp
xadd
aad
shld
mov
mov
movzbw
sub
shl
dec
mov
push
add
pushl
pushf
pushf
mov
mov
pushf
lea
jmp
movzbw
setbe
xor
rcr
mov
shl
not
cmc
mov
call
shrd
add
cltd
mov
shl
pop
aas
ror
inc
daa
pop
sbb
pop
rcl
not
aam
pop
rol
pop
cwtl
pop
aas
shrd
shr
pop
shrd
popf
pushf
movzbw
bswap
seto
mov
movzbw
pop
mov
lea
jle
pop
pusha
pushl
ret
pushl
call
cbtw
test
test
movb
cwtl
jmp
pushf
popl
movw
push
pushl
popl
pushf
pushl
pushl
lea
jmp
adc
xadd
mov
shl
dec
add
jmp
pushf
call
sub
pushf
mov
push
mov
lea
jmp
pushl
popl
pushf
movw
lea
jmp
lea
je
stc
pusha
stc
jmp
jmp
mov
lea
jle
pushf
jmp
mov
mov
push
pushf
push
lea
jmp
pushf
or
push
mov
mov
stc
add
mov
movl
lea
jmp
push
repz
popl
call
add
mov
call
shrd
mov
call
lea
movb
lea
jmp
pusha
push
pushf
pushl
popl
pushf
pushf
push
lea
jmp
test
stc
movb
xor
pushf
pusha
not
call
mov
pusha
jmp
mov
cmc
add
cmp
shrd
mov
jmp
mov
movb
pushf
push
mov
lea
jmp
and
movb
jmp
sub
push
jmp
stc
test
cmc
clc
xor
pushf
call
btc
test
movzww
cmc
xchg
cmp
stc
xor
pushf
cmc
pusha
add
cmp
xor
pushf
dec
push
xor
jmp
and
inc
mov
cmc
add
push
mov
lea
jmp
push
shl
shr
movzbl
bt
test
cmp
call
call
mov
push
call
mov
pushf
pushl
lea
jmp
cmc
mov
bt
sub
push
pushf
mov
push
lea
jmp
dec
rcr
sub
rcr
bswap
add
jb
rol
movzbl
lea
sub
not
and
shrd
shr
mov
clc
jmp
jmp
mov
movb
pushl
pushf
push
lea
jmp
mov
dec
clc
test
mov
clc
sub
push
call
mov
pusha
pusha
lea
jmp
mov
jmp
dec
and
stc
cltd
mov
pushf
bt
mov
clc
clc
call
cmp
clc
stc
sub
pushl
lea
jne
test
bt
jmp
sub
pusha
notl
btc
aad
aad
pusha
mov
test
call
bt
clc
and
mov
mov
pusha
pushf
popl
pushf
jmp
movl
test
pushf
sub
pusha
bt
add
test
jmp
mov
call
stc
mov
mov
jmp
jne
movzbw
movzbw
mov
mov
pushf
jmp
sub
call
add
pushl
call
push
jmp
pushl
sub
jmp
pushf
pushf
popl
call
call
add
movb
pushf
pushf
popl
push
jmp
mov
pushl
movb
lea
jmp
rol
mov
rcr
ror
mov
bt
sub
stc
shl
pushf
push
mov
pushl
pushf
popl
pusha
pushl
popl
push
lea
jmp
add
jmp
push
lea
jbe
mov
push
pusha
lea
jmp
mov
pusha
pushf
lea
jmp
jmp
jmp
movl
pushf
mov
jmp
neg
sbb
movzbl
setnp
xor
bsr
xor
shld
sbb
add
jmp
pusha
mov
sub
mov
cbtw
inc
mov
add
pushl
or
mov
pusha
push
jmp
mov
push
pusha
lea
jmp
btr
shld
mov
jmp
mov
pusha
pushf
pushf
pushf
lea
jmp
stc
xor
rcr
rol
ror
rol
neg
xor
inc
and
sub
rcr
btc
test
mov
jmp
bt
add
stc
jmp
push
mov
pushf
pushf
lea
jmp
sub
call
shr
stc
call
mov
sbb
cmc
sub
shl
test
add
btr
pushf
ror
dec
movsbw
dec
movsbw
ror
lea
shrd
sub
pushf
movb
movzbl
inc
sub
rcl
bsr
sar
mov
stc
test
not
test
pushf
add
movl
mov
mov
pushf
pushl
ret
cs
mov
jmp
inc
mov
pushl
mov
pushl
pop
mov
ljmp
pusha
mov
ljmp
inc
mov
ljmp
mov
call
mov
incl
mov
incl
mov
incl
inc
mov
jmp
dec
mov
pushl
dec
mov
ljmp
push
mov
call
mov
ljmp
push
mov
mov
dec
mov
call
mov
incl
mov
decl
mov
jmp
mov
jmp
mov
pushl
pop
mov
incl
mov
decl
popa
mov
js
mov
ljmp
mov
call
mov
jmp
push
mov
call
mov
mov
push
mov
ljmp
sti
pop
mov
call
push
mov
in
dec
mov
lcall
push
mov
call
arpl
incl
mov
sti
pop
mov
lcall
pop
mov
jmp
mov
mov
push
mov
jmp
push
mov
incl
inc
mov
jmp
dec
mov
jmp
push
mov
lcall
incl
mov
call
push
mov
lcall
push
mov
decl
pusha
mov
ljmp
bound
ljmp
push
mov
ljmp
inc
mov
jmp
dec
mov
jnp
mov
decl
push
mov
mov
dec
mov
pushl
mov
ljmp
dec
mov
pushl
pusha
mov
incl
dec
mov
decl
dec
mov
pushl
pusha
mov
decl
dec
mov
pushl
mov
jmp
mov
pushl
mov
decl
dec
mov
pushl
mov
decl
inc
mov
jmp
push
mov
pushl
pusha
mov
jp
mov
call
mov
jmp
inc
mov
jmp
push
mov
jp
mov
call
mov
pushl
mov
jnp
mov
jp
mov
call
popa
mov
ljmp
mov
jmp
push
mov
jp
mov
mov
popa
mov
incl
mov
pushl
mov
incl
push
mov
ljmp
push
mov
decl
dec
mov
pushl
pop
mov
jmp
inc
mov
call
push
mov
jp
mov
jmp
mov
js
mov
lcall
bound
jp
mov
lcall
inc
mov
incl
inc
mov
pushl
mov
jmp
push
mov
jmp
mov
jmp
inc
mov
pushl
mov
incl
inc
mov
pushl
mov
pushl
pusha
mov
pushl
mov
call
mov
ljmp
mov
call
arpl
pushl
mov
jmp
dec
mov
incl
mov
push
add
pusha
call
stc
mov
stc
pusha
or
push
pushf
call
movsbw
xchg
push
lea
push
not
push
sets
push
sets
mov
push
pushl
popl
bswap
xchg
call
shr
lea
test
bt
cmp
call
jne
pusha
movw
mov
pushf
lea
jmp
call
pushf
mov
movb
mov
pushl
pushl
ret
pushl
popl
movb
mov
movw
lea
jmp
dec
daa
shl
mov
pushf
call
stc
pushf
jmp
pushf
pushf
popl
call
bts
mov
bt
push
cmc
call
jmp
movb
movl
lea
push
pushl
mov
lea
jmp
mov
jmp
mov
lea
ja
seto
bts
cmc
xchg
mov
shl
bsr
lea
rcl
pusha
das
sub
bsr
btr
cmp
lea
bsf
ror
and
rcr
stc
adc
sub
pusha
mov
pushf
mov
pusha
mov
pushl
pushf
popl
movw
jmp
push
stc
call
movb
pusha
mov
jmp
pusha
pusha
mov
mov
lea
jmp
stc
sar
lea
inc
xor
rol
ror
push
push
rol
movzbw
xor
rcl
movb
and
movb
mov
clc
cmp
add
call
call
cmp
cmp
xor
stc
stc
add
cmc
neg
push
test
xor
clc
cbtw
jmp
mov
movsbl
movsbl
jmp
mov
call
add
mov
lea
jmp
movzbl
movzbw
add
clc
shld
rcl
neg
sub
pushf
mov
call
cmc
push
add
push
pusha
movb
push
lea
jmp
ror
shl
bt
mov
clc
add
mov
setp
push
mov
lea
je
pusha
movl
push
mov
pushl
pushf
lea
jmp
call
jmp
push
pusha
push
jmp
push
lea
jne
push
push
pushf
pushf
mov
pushf
pushl
lea
jmp
pusha
jmp
add
pushf
movb
mov
pusha
pushl
pushl
mov
lea
jmp
pusha
pushf
popl
jmp
pusha
pusha
xor
clc
movb
cmp
xor
clc
add
cmc
pushf
mov
neg
call
pushf
pushf
pushl
popl
mov
pushl
movl
lea
jmp
add
pusha
push
call
xchg
jmp
pushf
mov
pusha
pusha
pushl
lea
jmp
mov
pushl
mov
mov
mov
lea
jmp
bswap
bswap
mov
jmp
cltd
or
aam
dec
mov
rol
pusha
shrd
mov
test
cmc
pushf
not
pusha
pushf
pushf
not
cmp
call
mov
cwtl
push
not
mov
pushf
cwtl
lahf
bswap
mov
call
call
push
inc
pushf
pusha
decl
pushl
pushf
lea
jne
jmp
xor
stc
call
mov
push
push
lea
jmp
cmc
shr
pushf
mov
mov
movw
mov
jmp
movw
movl
call
stc
cmc
rcr
mov
dec
mov
jmp
movzbl
lea
xor
shld
mov
cmp
jmp
clc
pushf
pushf
pushl
popf
pushl
pushf
pusha
pushf
lea
jmp
cld
cld
cld
pushl
mov
rep
cmp
ror
mov
or
adc
mov
mov
bt
jmp
movsbl
rdtsc
mov
push
pop
mov
jmp
mov
pusha
pusha
lea
jmp
pushf
popl
jmp
pushl
jmp
xadd
mov
jmp
xadd
shrd
seto
cmc
rdtsc
bt
call
pushf
mov
lea
jns
mov
push
movw
mov
mov
push
pushf
popl
jmp
pusha
add
mov
lea
jo
pushf
movl
mov
pushf
lea
jmp
push
mov
pushf
mov
push
mov
pushl
ret
sub
mov
call
lahf
sub
adc
call
mov
mov
pushl
call
bswap
mov
call
sub
test
shl
mov
clc
bt
pusha
add
pushl
pusha
push
push
lea
jmp
jmp
shl
or
mov
stc
cmc
sub
push
jmp
pushl
popl
push
mov
pushf
pushf
lea
jmp
jmp
call
call
mov
movb
pushf
movb
pushl
ret
mov
jmp
aad
shrd
aaa
mov
pusha
sub
cmc
test
mov
test
not
stc
movb
cmc
cmc
not
cmp
bt
test
sub
stc
jmp
mov
call
push
mov
push
push
pushl
lea
jmp
call
lea
pusha
lea
je
pusha
pushl
mov
pusha
mov
lea
jmp
pushf
popl
mov
pushf
pushl
popl
pushf
pushf
lea
jmp
push
pushf
jmp
pushf
pusha
lea
ja
popl
pusha
mov
lea
jmp
jmp
mov
test
pusha
jmp
test
test
neg
pusha
xor
mov
cmc
cbtw
call
jmp
call
jmp
pusha
pushf
mov
call
push
xor
mov
mov
dec
clc
clc
xor
call
pusha
mov
pushl
popl
pushf
lea
jmp
mov
pusha
mov
push
pushf
lea
jmp
aad
xchg
pushf
bsf
mov
neg
call
shl
aaa
xchg
bsf
mov
or
shr
mov
pushf
stc
cmc
test
add
pusha
mov
mov
lea
jmp
bt
pushf
push
xor
push
stc
movb
cwtl
bt
bt
bt
sub
push
mov
pushf
pushl
pusha
pushf
lea
jmp
mov
mov
call
push
pusha
jmp
clc
push
rol
mov
cmp
bt
not
clc
mov
clc
sub
pushf
clc
movb
shr
mov
pusha
jmp
pushf
mov
rcr
add
bt
call
jmp
mov
jmp
pushl
popl
pushf
lea
jmp
call
aad
mov
rcr
dec
mov
jmp
jmp
mov
call
lea
jg
pusha
pushf
pushl
popl
pushf
pushl
lea
jmp
mov
mov
pushf
pushf
popl
mov
pushl
popl
movb
pushf
lea
jmp
mov
pushf
pushf
mov
pushf
mov
mov
movb
call
test
pusha
shl
bsr
movzww
jmp
sub
jp
pusha
movw
neg
clc
xor
stc
call
movzbl
movl
lea
mov
inc
setge
bswap
xchg
lea
dec
clc
ror
or
lea
movsbl
mov
xor
mov
bswap
sub
sbb
btc
movzbw
mov
not
sub
inc
movzbw
mov
sub
rcl
bsf
add
ror
mov
bt
btr
xor
clc
sub
sbb
lea
not
add
pushf
bswap
not
ror
jmp
pusha
mov
pushf
movw
mov
pusha
mov
lea
jmp
pushf
pushf
pushf
pushl
popl
pushf
pushf
lea
jmp
mov
push
pushf
lea
jmp
pushf
pusha
mov
pusha
pushf
pushl
mov
push
movb
lea
jmp
call
mov
rcr
push
ror
mov
pushf
jmp
clc
jmp
lea
push
lea
jmp
mov
pop
push
not
pusha
mov
jmp
pushf
movb
movw
xchg
pusha
push
mov
mov
lea
jae
pushf
not
repz
popl
not
movsbw
push
jmp
add
pushf
jmp
jmp
add
call
call
mov
pushl
lea
jne
bt
mov
test
bt
and
pusha
stc
cmp
jmp
pushf
mov
pushf
pusha
pushf
lea
jmp
push
mov
pusha
mov
mov
push
mov
pushl
push
lea
jmp
sub
mov
add
xchg
add
rcr
jmp
sub
pusha
call
jmp
pushf
mov
mov
push
push
call
pusha
movb
jmp
stc
movzbl
test
call
sub
xor
mov
pusha
pushf
call
mov
push
bswap
dec
dec
pusha
pop
ror
call
pusha
bt
xor
push
pushf
xor
call
push
push
pusha
pushf
pushl
lea
jmp
inc
mov
call
call
sub
jmp
jmp
pusha
jmp
pusha
call
jmp
movsbw
push
mov
jmp
das
and
shr
daa
mov
cmp
add
pusha
call
mov
mov
pushl
lea
jmp
pushf
pushl
popl
jmp
push
sub
mov
pusha
stc
add
mov
movl
lea
jmp
call
add
lea
jnp
pushf
push
pushl
popl
pushf
push
pusha
lea
jmp
not
lea
jmp
mov
pusha
pushl
popl
pushf
lea
jmp
bsr
btc
mov
seta
inc
push
mov
stc
pushf
call
jmp
mov
call
mov
pushf
popl
pushl
push
pushl
popl
pushf
pushf
movb
lea
jmp
sub
bt
pushl
cmp
add
jmp
pushf
popl
jmp
call
movsbl
dec
add
neg
bt
bswap
setne
xor
pusha
movzbl
jmp
sub
push
div
jmp
mov
mov
lea
jmp
pusha
cmc
add
pushf
pushf
lea
jmp
sub
jmp
stc
push
clc
xor
push
neg
push
push
cmp
sub
test
mov
jmp
mov
push
lea
jmp
pusha
call
call
mov
push
push
movb
push
lea
jmp
test
sub
bt
clc
jmp
stc
clc
xor
clc
pushf
test
sub
call
mov
movb
movb
mov
pushf
lea
jmp
sub
push
mov
movl
lea
jmp
jmp
xor
lea
xor
mov
test
shl
stc
jmp
cmp
xor
clc
add
bt
xor
lea
jb
pushf
lea
mov
mov
dec
jmp
pusha
mov
movb
pusha
lea
jmp
std
pushl
popf
push
mov
movb
movb
lea
jmp
xchg
clc
pushl
push
call
das
daa
sbb
mov
call
jmp
inc
mov
decl
jmp
shrd
lea
lea
cmp
shld
btr
sub
or
call
or
bt
add
jno
xor
jmp
cwtl
bswap
mov
mov
jmp
call
pushl
popl
pushf
mov
movw
lea
jmp
jmp
inc
mov
dec
movsbw
lea
pusha
mov
push
xchg
mov
pushf
xchg
inc
mov
bswap
mov
movw
pushl
popl
dec
bswap
movsbw
movsbl
movl
movsbw
xchg
call
mov
pusha
pushl
lea
jmp
call
dec
movb
movl
mov
mov
lea
jmp
push
call
jmp
pusha
pusha
call
inc
and
stc
rcr
neg
xor
bsf
bsr
not
push
shl
bsr
btr
add
shrd
rcr
adc
sete
mov
jmp
bt
bt
cmc
sub
call
cmp
cmp
rcl
mov
push
test
pusha
sub
pushf
cmc
shr
push
pushf
mov
pushf
pushf
pushf
pushf
popl
pushf
movw
pushf
lea
jge
popl
pushf
pusha
pusha
push
lea
jmp
sub
cmc
bt
clc
and
pushf
call
pushf
popl
push
mov
movb
pushl
popl
push
push
pusha
mov
lea
jmp
push
cwtl
rcl
mov
test
sub
dec
mov
mov
jmp
aad
mov
cmc
mov
clc
clc
sub
cmc
clc
pushf
mul
pusha
mov
pusha
pushl
jmp
lea
rol
jmp
test
pusha
lea
je
xor
bt
jae
bt
xor
cmc
add
call
jmp
add
add
cmp
cmp
bt
shl
push
pusha
mov
mov
pushf
movl
pushf
popl
pushf
pushl
popl
mov
pushf
lea
jmp
mov
push
lea
jmp
movsbw
jmp
call
not
pushf
cmp
add
jmp
pushf
call
jmp
jmp
divl
call
inc
call
pushl
popl
pushf
pushf
mov
mov
lea
jmp
sets
mov
call
jmp
bt
cwtl
push
pushf
clc
test
sub
mov
call
shrd
push
cmp
rol
mov
add
jo
add
pushf
pusha
pushf
lea
jmp
xchg
pusha
call
jmp
neg
movsbl
and
rcr
mov
cmc
pushf
pushf
mov
add
pushf
pusha
lea
jmp
bt
call
pushf
mov
lea
movl
push
lea
jmp
sub
jmp
push
pushf
pushf
mov
pushl
movb
pushf
pushf
popl
call
pushf
lea
call
mov
pushf
bt
add
pushf
jmp
mov
cwtl
cmc
pusha
sub
pushf
call
pushf
popl
push
lea
jle
push
pushl
popl
pushf
pushf
push
pusha
lea
jmp
push
mov
pusha
lea
jmp
pushf
pushf
mov
mov
pusha
lea
jmp
call
jmp
jmp
xchg
jmp
call
mov
cmp
bt
bswap
call
test
cmp
neg
mov
xor
cmp
cbtw
bt
pushf
cmc
cwtl
stc
pushl
stc
movb
sub
call
sar
mov
stc
cmc
cmp
add
pusha
pushf
push
push
lea
jmp
pusha
mov
pusha
lea
jmp
call
pushf
movb
lea
jne
mov
sbb
push
xorb
lea
call
pushl
popl
pushl
lea
jmp
push
movzbl
push
sub
shr
mov
mov
pushf
bt
not
call
pusha
movzbl
shrd
adc
sub
mov
sub
sets
shl
mov
xor
btr
neg
not
neg
sub
dec
dec
pusha
clc
and
add
mov
call
jmp
pushf
mov
pusha
push
mov
lea
jmp
add
pushf
mov
pusha
mov
pushf
mov
lea
jmp
call
pushf
mov
jmp
pusha
pushf
lea
pushf
dec
test
xor
jmp
pusha
pusha
jmp
add
pusha
mov
lea
jmp
call
mov
pushf
lea
jmp
lea
cpuid
pushf
sub
movb
pusha
cmc
mov
cmpl
push
jmp
call
push
jmp
rol
mov
btr
seta
mov
pushf
mov
mov
mov
add
pusha
stc
pushf
cmp
shld
jmp
push
push
movb
lea
jmp
mov
pushf
mov
push
pushl
ret
pushf
cmc
cmc
cwtl
pushf
cmc
mov
call
pushf
mov
call
cmp
call
pusha
jmp
jmp
call
clc
cmc
pusha
sub
test
pusha
pushl
bt
shl
jmp
cmp
sub
jmp
mov
jmp
cmc
add
pushf
movw
call
bt
add
push
call
mov
pushf
lea
jmp
bsf
movsbw
movsbw
mov
test
test
add
pusha
lea
jmp
push
mov
jmp
call
pushf
pushf
pushf
mov
mov
lea
jmp
push
pushf
jmp
mov
push
movl
lea
jmp
sub
pushl
pushl
mov
pushf
call
pushl
popl
push
push
pusha
lea
jmp
pushf
popl
call
btr
dec
add
shr
mov
stc
jmp
xor
test
stc
bt
jmp
mov
mov
movb
lea
jmp
add
movzbl
pusha
pushf
sub
cmp
push
sub
push
mov
jmp
sub
xor
call
pusha
stc
call
bswap
mov
pusha
mov
pushl
pusha
mov
movb
mov
pushf
push
push
lea
jmp
mov
pushf
movl
lea
jmp
